push
call
ret
ret
icebp
xchg
dec
mov
mov
test
jo
ds
rorl
jg
lcall
add
jmp
icebp
jmp
loop
fdiv
pop
dec
negl
mov
aas
into
stc
mov
jb
leave
lret
sub
mov
cltd
and
and
mov
icebp
lods
cmp
xchg
in
jp
sti
ljmp
jle
adc
das
jno
out
daa
mov
add
xchg
adc
lahf
xchg
mov
cmpl
sub
rcl
mov
jge
pop
dec
incl
arpl
leave
in
push
test
pop
or
sti
sti
inc
cmp
add
idivb
push
mov
add
les
imul
dec
int
dec
popa
xchg
movsl
shll
and
inc
dec
insb
popa
into
push
cwtl
xabort
jno
xchg
xchg
ljmp
or
inc
pop
test
ret
mov
ja
decl
test
pop
insl
cwtl
xchg
pop
popf
aas
clc
mov
cmp
inc
or
xor
xchg
addl
xchg
pusha
mov
imull
xor
mov
ret
and
lret
call
fisubs
jbe
jle
dec
push
ss
arpl
out
mov
sbb
sti
mov
jecxz
mov
and
pop
dec
movsb
cmpsl
out
daa
fdivs
or
push
push
sbb
loop
les
cwtl
mov
xlat
and
lret
das
hlt
icebp
shl
cmpsb
sbb
mov
inc
aaa
fnstsw
sbb
jb
inc
jb
gs
lods
mov
lahf
std
adc
sbb
sub
addr16
pusha
call
mov
cmp
push
sub
push
call
iret
movsb
mov
adc
sbb
push
pop
sbb
add
jbe
nop
sbb
dec
sub
mov
jae
adc
out
and
stos
rclb
out
lahf
es
jo
nop
xchg
aas
mov
xor
or
add
mov
lret
push
xor
addr16
cwtl
gs
cs
and
das
add
inc
jae
lahf
out
pop
add
jno
pusha
push
stc
mov
or
jg
pop
inc
mov
cld
adc
mov
in
sub
js
xchg
rclb
mov
decl
cmp
xchg
mov
popf
dec
imul
jne
scas
cmp
hlt
les
es
mov
inc
mov
cmp
out
negb
bound
aad
fcomps
aad
sbb
mov
enter
and
fsubrl
add
addl
test
in
add
xchg
jp
repz
leave
ja
sahf
pop
xor
or
jbe
mov
fs
js
ret
std
push
pop
dec
dec
mov
add
jl
mov
lds
adc
stos
imul
jnp
ret
adc
stos
pop
add
mov
sahf
cmc
pop
pusha
mov
packuswb
xor
movsl
pop
enter
call
outsb
push
adc
and
sarb
fwait
sub
movsl
lea
jnp
sub
pop
frstor
cltd
mov
cltd
cmp
or
lods
cmp
xchg
or
dec
xchg
dec
mov
fwait
test
sbb
test
cli
cli
mov
inc
bound
lahf
or
aam
stos
mov
and
notb
inc
jns
and
xchg
adc
test
mov
pop
push
repnz
cmc
or
sbb
xchg
jl
fisttpll
repz
jmp
mov
hlt
inc
cmpb
aas
jae
in
push
bound
mov
xchg
sar
dec
shl
in
leave
inc
fs
aam
jge
js
int
xchg
fcompl
push
repz
clc
xchg
push
dec
in
push
movsb
imul
push
xchg
sub
fwait
mov
fstpt
hlt
push
idivl
cs
fs
addl
daa
jp
mov
pushf
in
aaa
imul
std
lcall
jo
push
mov
pop
ja
xchg
push
stc
jnp
cmp
sti
add
fsubs
inc
lret
xor
jg
data16
push
push
push
loope
cmpsl
xor
mov
xchg
imul
or
into
fwait
mov
adc
cltd
dec
fistl
mov
jl
push
shll
mov
jle
dec
jp
les
sub
mov
out
mov
insl
imul
aam
jge
stc
fbld
and
mov
cmp
xchg
or
and
xlat
dec
stos
in
je
jno
pop
jnp
js
sub
pushf
jae
loopne
pop
movsb
mov
stos
dec
or
mov
jne
cmp
xchg
cmp
in
das
xor
popf
lcall
mov
inc
dec
incb
movsl
sbb
pusha
int
push
or
stc
cmp
pop
loopne
mov
inc
xchg
iret
adc
das
fnstsw
loopne
push
sbb
cmp
cmp
adc
push
add
or
dec
lock
cs
mov
xor
pop
jbe
jnp
cmp
stos
jns
insl
dec
mov
repz
inc
jp
mov
mov
shll
enter
sub
sbb
aas
or
cmp
adc
fnstenv
call
and
sar
aaa
sub
sbb
imul
mov
aas
jg
xor
jg
jnp
ret
shll
pop
std
jne
mov
cmc
push
enter
adc
ljmp
sbb
mov
xchg
dec
inc
les
add
jno
enter
dec
pop
jae
movb
into
push
cmp
mov
insb
sub
mov
push
xchg
dec
cld
mov
pop
popf
aas
mov
xorb
sub
bound
xor
scas
daa
lods
lods
das
mov
shll
adc
mov
push
fnsave
imul
mov
mov
aam
sub
pop
xor
cwtl
ja
pop
std
push
dec
jmp
iret
out
cmp
jmp
push
aaa
cmp
or
cmp
cmpsl
cmpsb
hlt
jns
call
jge
imul
jmp
je
fdivrl
outsl
pop
sbb
or
mov
inc
mov
daa
das
or
int3
dec
lret
aam
scas
shrl
mov
cmp
fstpt
or
or
mov
lcall
xor
mov
jmp
or
inc
pop
cmp
or
inc
or
das
xchg
jo
cmpsb
xorb
cmp
jne
xchg
call
fcomi
mov
sbb
popl
shll
and
mov
push
shr
pusha
jnp
ficomps
adc
jns
test
repnz
mov
pop
or
xchg
add
inc
jp
and
dec
lock
lods
je
inc
push
test
add
and
aad
and
mov
cmpsl
ja
dec
dec
mov
cmp
xchg
xchg
orl
decl
ret
mov
dec
out
orl
ffree
or
sbb
mov
stc
loop
fld
aaa
xor
jecxz
xchg
xor
mov
sbb
sti
or
xchg
jl
lret
jmp
dec
add
cli
cmp
jp
insl
jle
mov
mov
notl
ficompl
arpl
jns
jno
je
ds
loope
sbb
cli
xchg
mov
push
xchg
pop
out
xchg
sbb
jnp
add
sbb
fnstsw
loope
or
jp
mov
add
or
insb
fisubrl
mov
sti
cld
in
out
mov
fstpl
fists
jb
lahf
imul
movsb
std
mov
xchg
inc
or
mov
xor
push
outsl
sub
mov
mov
dec
mov
insl
sub
das
mov
cld
mov
insb
add
sarl
inc
push
dec
mov
repnz
sub
mov
xchg
icebp
mov
hlt
jne
sbb
inc
inc
aaa
sub
arpl
push
inc
sbb
stos
into
cltd
mov
dec
fmull
cmp
or
add
xchg
dec
sti
imul
stc
repnz
push
add
fcoml
ficompl
in
jb
sub
insl
outsb
sub
mov
lret
outsl
subb
lods
les
dec
xchg
stos
push
test
leave
lods
xchg
mov
int3
mov
outsb
sbb
cmp
inc
inc
xor
mov
jmp
dec
jns
inc
mov
inc
bound
icebp
gs
inc
inc
sub
out
imul
lods
movl
fwait
sbb
movsl
shl
sbb
int
xchg
idivb
int
out
cmpsl
xchg
das
and
xchg
jne
push
jne
test
sbb
push
sbb
in
mov
push
mov
mov
jmp
pop
and
xor
xor
int3
jae
shrl
mov
push
pop
push
jno
mov
or
imul
popa
leave
mov
rcr
std
hlt
inc
test
rcl
sbb
or
mov
fwait
or
jb
cmpsb
stc
mov
sub
or
icebp
inc
or
jecxz
insl
gs
orl
sub
pop
add
test
in
divl
in
rcr
xlat
mov
out
sub
lds
add
int
daa
popf
stc
scas
mov
sbbl
popa
mov
mov
cmp
fcmovu
out
adc
in
sti
mov
jg
arpl
lods
xchg
int3
sbb
imulb
xor
and
inc
mov
outsl
mov
jg
pushf
in
nop
dec
sub
mov
push
test
arpl
push
movsl
imul
add
les
lods
add
cld
imul
das
mov
call
and
mov
lods
mov
push
popa
shrd
mov
or
lds
mov
ret
int
pop
fdiv
ljmp
jno
sub
addb
push
xchg
clc
daa
repnz
dec
adc
cltd
xor
dec
and
or
movsl
or
or
push
mov
in
adc
pop
sbb
rcll
push
data16
push
mov
call
sub
sbb
sbb
movsl
xchg
daa
push
mov
sbbl
bound
int3
jecxz
movsl
or
push
mov
test
loopne
pop
daa
xor
sub
mov
in
jl
cmc
pop
scas
pop
jp
push
enter
jae
inc
loopne
loopne
xchg
mov
lea
testb
sbb
push
push
xchg
mov
pusha
cmp
outsb
pop
add
inc
orl
ds
mov
pop
es
mov
mov
push
push
pop
daa
dec
xor
leave
out
sbb
lock
ss
dec
cmpsb
hlt
jnp
lods
test
or
mov
rclb
sti
xchg
push
or
mov
dec
and
push
mov
cmp
xorb
imul
pop
mov
mov
xchg
jmp
push
test
push
add
inc
pushf
repz
fwait
lret
sti
inc
and
lock
push
ret
inc
xchg
adc
andl
add
cmp
jnp
push
xchg
fidivrs
push
ficoml
xor
ret
lahf
mov
add
fmulp
push
test
mov
mov
mov
bound
nop
mov
or
jge
adc
loope
xchg
push
jl
movsb
and
mov
andl
pop
xchg
adc
pop
movsb
sbb
outsb
adc
xor
mov
fwait
jnp
sbb
and
sti
inc
sbb
pop
hlt
ds
lds
inc
hlt
mov
sub
push
pop
in
hlt
push
jg
sub
mov
xor
xchg
popf
stc
cmp
jno
inc
jge
lds
mov
and
flds
push
jo
pushf
pop
rorb
pusha
sub
mov
jmp
or
xchg
jl
cmc
fldcw
scas
inc
in
mov
add
pop
xchg
hlt
test
loop
xchg
aaa
movsl
int
dec
mov
std
lret
and
cmp
leave
xor
pusha
mov
aaa
sbb
int3
xchg
nop
out
or
sarb
stos
mov
xchg
cli
int3
push
dec
aad
sub
ret
jmp
cmp
mov
xchg
xor
cmp
je
ljmp
popf
xchg
daa
shl
xchg
mov
jl
and
pop
mov
cmp
mov
add
ficompl
out
xor
mov
dec
popa
loop
pop
jae
pop
repnz
jecxz
inc
sub
test
sbb
pop
mov
jg
or
xchg
xchg
cmp
push
adcb
das
pop
sahf
mov
jbe
out
fisubrs
mov
dec
loop
jmp
sahf
push
xchg
in
inc
andl
adc
pop
lahf
mov
cmp
cli
mov
arpl
fstpl
cmp
add
cmpsb
sar
popf
sbb
cmpsl
sub
cmp
outsl
dec
iret
xchg
push
fs
std
pop
inc
cmpsb
inc
xor
ds
fists
xor
dec
mov
aam
adc
xor
xchg
xor
push
mov
push
adc
and
fstps
pop
jb
test
push
jae
push
insb
es
or
es
fildll
mov
push
repz
stc
inc
add
inc
popf
gs
add
xchg
sub
xchg
rcr
nop
add
pop
mov
jns
in
and
push
mov
dec
sbb
jne
and
iret
sub
jecxz
dec
cmc
aad
ss
ljmp
out
int3
push
or
jnp
bound
js
mov
sbb
jecxz
jg
lret
xor
xor
ljmp
push
daa
cmp
add
cld
inc
add
or
jmp
inc
jecxz
sahf
sub
xchg
add
mov
out
out
stos
test
arpl
mov
or
mov
stos
xchg
fs
imul
push
pop
cmovae
mov
int3
xchg
adc
in
jnp
xchg
and
xchg
xchg
xorb
inc
test
xchg
lret
call
fmuls
pop
push
sarl
cltd
outsl
sarl
dec
xor
insb
mov
daa
loope
xchg
jnp
push
sub
jae
inc
insb
pop
int3
and
xor
icebp
fildl
sub
daa
push
aaa
movd
pop
jl
xor
jle
push
sub
loop
ret
sti
dec
insl
adc
call
out
jecxz
filds
dec
mov
insb
mov
inc
lea
rclb
jno
aas
push
pop
jp
jl
mov
enter
enter
int
aam
pop
loopne
pushf
mov
ror
or
or
mull
fisubl
add
icebp
cmp
inc
repnz
or
jns
fcmovnu
ficompl
dec
dec
decb
cmp
mov
mov
out
pop
mov
lock
mov
dec
stos
loopne
inc
inc
ffree
xlat
in
mov
xor
das
mov
mov
jae
mov
pop
js
xchg
jecxz
cli
mov
fbstp
push
mov
mov
leave
mov
nop
cmp
cmpsl
fmull
test
out
insb
push
insb
cmp
imul
adcl
or
cmp
xchg
loop
xchg
push
stc
insl
jb
enter
loope
push
mov
les
xor
cmpsl
sbb
jle
pop
outsb
bound
mov
jecxz
mov
xchg
scas
push
js
push
lds
push
nop
jle
jbe
mov
adcb
inc
ljmp
test
data16
roll
cmc
imul
add
pop
jg
js
cltd
stos
adc
lock
aam
es
xor
sti
test
dec
cmp
js
rclb
incl
int3
dec
leave
jbe
jg
out
call
test
xchg
mov
jb
adc
inc
js
sbb
sbb
inc
or
mov
stc
lds
push
ljmp
inc
xchg
cli
dec
scas
push
pop
fsub
mov
scas
cmp
inc
xchg
daa
jo
adc
pop
insb
adc
push
cwtl
mov
pop
cmp
in
scas
jmp
adc
or
add
jno
dec
aas
or
ja
je
sbb
lods
popf
and
xchg
mov
test
jle
das
pop
enter
xchg
mov
sub
or
mov
es
stos
jb
inc
fmulp
stos
loope
fdivs
or
pop
sub
loopne
or
hlt
sub
or
in
cld
pop
pop
and
jno
hlt
xchg
and
ret
cmp
fldcw
xor
xchg
fstl
movsb
fidivrs
cmp
push
in
inc
pop
addl
cs
iret
jmp
cmp
jo
lahf
cmpsb
adc
fyl2x
mov
jmp
jne
adc
xor
js
or
cmpsb
lahf
popa
lret
outsb
pusha
jo
mov
pop
xor
pop
or
inc
lds
mov
mov
hlt
daa
dec
push
aaa
adc
imul
sbb
bound
jle
or
es
cmp
fnstenv
mov
add
and
sub
movsl
lds
into
mov
inc
repz
sub
cmc
mov
sub
xor
mov
shll
int3
mov
mov
popf
test
das
mov
xchg
pop
fimuls
jbe
mov
pop
test
arpl
rcl
cmpb
jbe
xlat
dec
cmp
test
es
sbb
scas
sahf
test
lret
dec
arpl
sahf
ljmp
sub
inc
mov
call
movl
std
rolb
mov
iret
push
mov
pop
mov
nop
pop
int
fsubl
sahf
jle
mov
fildll
pop
lret
outsl
in
jne
mov
subl
jle
pop
or
or
cmpsb
movsl
iret
fldt
repnz
pop
pusha
jmp
ficompl
movsl
pop
in
pusha
xchg
aad
fnsave
adc
cmp
sub
jecxz
scas
fsubr
mov
loopne
mov
test
push
sbb
scas
add
leave
dec
and
pop
stos
adc
pop
lods
div
xor
pop
imul
outsl
push
dec
dec
js
lahf
dec
sbb
clc
xor
daa
xchg
ficomps
mov
pop
pause
pop
inc
xchg
xor
sub
outsb
subb
leave
cmp
pushf
cltd
sbb
loope
subl
cmp
loop
lcall
jp
imul
xchg
push
jmp
fdivrp
ja
or
popf
into
sub
shl
inc
mov
mov
cs
or
xchg
and
push
xchg
cmpsl
sar
punpckldq
or
mov
arpl
mov
inc
iret
mov
cmp
push
stos
adc
test
or
adc
sub
mov
fdivrs
jbe
push
push
sbb
cmc
add
xchg
orl
loopne
push
jl
test
jmp
inc
pop
mov
je
jnp
movsb
ja
mov
dec
pop
loopne
or
mov
loope
in
lods
xor
ficomps
jge
in
push
in
mov
js
movsb
and
add
or
shrl
xchg
xchg
push
out
lods
push
jl
adc
js
sarl
add
mov
pop
hlt
inc
add
popf
fldpi
out
pop
out
dec
shll
rorl
mov
movsb
sbbl
jle
jnp
int3
adc
in
fidivl
in
out
ljmp
lock
sub
mov
test
je
dec
das
in
xorb
jl
jl
pop
add
out
outsl
pop
cltd
sub
jns
jne
iret
mov
sbb
fisttps
sub
push
dec
xchg
sahf
shlb
push
shll
or
cli
cmpsl
mov
shl
push
lods
push
or
aas
sub
dec
es
add
and
shrl
jle
aaa
add
in
in
dec
clc
mov
sub
icebp
mov
or
mov
fisubs
mov
cld
lahf
outsl
mov
xchg
or
aam
sbb
push
movsl
inc
jne
dec
into
mov
dec
jb
pop
cmc
xchg
cmp
mov
std
rcrb
mov
in
push
pop
mov
xor
mov
popf
movsb
cmp
adc
fcomps
pushf
sahf
push
pop
icebp
inc
adc
pop
mov
into
pop
es
divb
mov
sbb
mov
dec
lods
sbb
stc
and
iret
jge
rcrl
stc
test
repnz
mov
and
and
mov
repz
dec
sti
scas
push
ficompl
mov
mov
fbstp
jno
filds
lahf
add
jb
mov
or
xchg
xrelease
mov
add
jne
and
or
stos
fstp
xchg
into
xchg
in
test
sub
sti
ja
lcall
inc
jge
inc
rdpmc
xchg
and
xor
stos
mov
adc
dec
cmp
jmp
mov
xchg
fs
adc
and
cmc
push
dec
jb
in
push
shl
out
xor
sbb
addr16
adc
push
lret
cs
pop
aaa
js
mov
or
jae
mov
mov
stos
gs
icebp
dec
cli
stos
call
cmp
sub
cltd
scas
daa
mov
sub
hlt
jae
rclb
fmuls
jp
add
and
mov
jp
rorb
mov
and
popa
inc
in
add
inc
jecxz
jmp
rcrl
scas
lret
sub
pop
imul
mov
push
cmpsb
stos
mov
jp
or
test
jb
test
xchg
jge
push
inc
mov
add
andb
cmp
add
sub
mov
sub
mov
inc
fs
lock
pushf
gs
ret
aas
sbb
mov
rorb
js
xchg
sub
gs
cld
mov
mov
pop
lahf
aaa
sub
aam
negl
aad
js
sbbb
fstl
inc
imul
inc
movsb
cld
daa
mov
pop
aas
mov
pop
add
pop
loopne
pushw
bound
inc
stos
xlat
dec
xor
or
adc
fildll
push
pop
pop
cmpsl
dec
cmpsb
sbb
xchg
jbe
imul
mov
push
cwtl
xchg
icebp
nop
or
inc
sbb
xor
loop,pt
loop
ret
sbb
push
sbb
xchg
add
jle
jbe
fdivr
dec
mov
pop
jbe
and
mov
shll
loop
rcll
inc
dec
dec
adcl
cmp
mov
inc
mov
or
cmp
movsl
adc
or
cmp
fnstsw
int3
add
mov
cmp
imul
out
cmp
xchg
je
pop
jmp
pop
sub
sub
in
enter
push
mov
push
aaa
jmp
je
mov
dec
xchg
mov
movsb
aaa
pop
inc
rcrl
mov
xlat
ret
popf
dec
shll
sbb
adc
or
inc
xchg
out
jnp
cwtl
gs
jl
add
in
mov
scas
outsb
or
xchg
mov
int
popa
inc
sub
sub
sbb
aad
clc
and
cmp
dec
leave
cmp
jl
mov
popf
outsl
scas
cmpsl
push
and
pop
pop
pop
js
mov
ret
mov
out
shl
fildll
fisubl
sbb
lods
jg
adcb
pop
jecxz
push
add
jle
jmp
and
clc
movsl
jl
aam
lahf
or
mov
xchg
jmp
mov
sub
push
out
and
cmc
roll
lret
in
sbb
repnz
je
adc
fstl
aam
mov
jg
test
negl
fstl
popa
jge
pop
scas
lret
mov
pop
dec
sahf
and
mov
xlat
rorb
gs
ret
leave
movsb
gs
cmp
adc
dec
or
lds
mov
xchg
cmpsl
xor
lea
push
das
jo
fs
pop
mov
sub
lods
inc
aad
repnz
arpl
sbb
jmp
in
xchg
int3
jle
add
or
sbb
and
cmp
xor
add
ror
fs
jo
mov
sti
sbb
xor
xchg
arpl
mov
mov
mov
nop
mov
inc
mov
std
sarb
scas
adc
xor
not
xchg
imul
ss
ljmp
push
add
es
out
pop
push
or
lods
jns
jb
js
mov
or
and
jb
pand
jno
mov
add
push
inc
fisttps
lock
mov
jne
scas
test
dec
pop
jle
inc
add
loope
fdivl
mov
test
ret
loopne
add
jmp
mov
or
sbb
gs
imul
push
jle
stos
cwtl
dec
add
leave
jo
not
mov
mov
fimull
xchg
xor
arpl
jmp
test
or
mov
sub
push
adc
jecxz
inc
cmp
mov
pop
mov
adc
jp
xor
jl
mov
sub
sub
adc
scas
jge
arpl
leave
sahf
call
das
jle
outsb
pop
outsl
loope
xor
insb
loope
sub
fldt
adc
push
shl
sti
mov
inc
arpl
stc
imul
loopne
jne
dec
dec
xchg
in
cmp
in
shrb
mov
sbb
sub
sub
sub
pop
sarl
mov
pop
jmp
fcmove
adc
out
dec
out
rcrl
mov
sub
fs
or
rclb
lea
pop
jne
nop
fucom
in
lret
ja
fistps
and
daa
sub
jne
sbb
sub
insb
jns
cli
jg
loope
cmp
in
xor
dec
jo
mov
test
jb
xor
sub
cmc
mov
or
fldl
aaa
pop
fbld
test
jmp
lods
or
sub
xchg
inc
xchg
rcll
loopne
cmpsb
pop
imul
arpl
hlt
into
mov
jno
movsl
int3
insb
pop
mov
cs
pushf
add
scas
andb
test
fldenv
and
jg
imul
cltd
push
mov
movsb
and
iret
in
or
push
push
sti
inc
rcr
fs
lds
rcrl
mov
push
mov
or
mov
push
icebp
test
xchg
outsl
add
sbb
repz
imul
mov
mov
cmpsl
loopne
insb
xor
add
mov
push
in
and
inc
or
imul
xor
loope
test
inc
jnp
pop
add
and
in
xorl
pushl
cli
insl
push
inc
push
xchg
pandn
std
mov
adc
mov
jb
sahf
out
pop
mov
dec
sbb
xlat
mov
insb
fwait
inc
xor
pop
fcmovnu
jne
mov
popa
divb
mov
popl
mov
push
add
inc
and
and
jp
jmp
cs
xchg
sbb
scas
adc
fs
shll
cs
data16
xor
add
mov
or
add
ja
int
fadd
leave
scas
adc
fwait
pop
jmp
rcll
movsl
jns
push
ficomps
shll
aaa
mov
call
mov
mov
cmc
pusha
mov
mov
mov
jns
mov
bound
in
jns
sbbb
and
scas
es
fsubs
lock
and
mov
or
lea
addl
jno,pt
and
or
mulb
stos
sbb
lods
mov
jnp
adc
js
and
es
sub
into
push
sub
lea
lret
leave
or
jmp
mov
roll
scas
and
pop
lods
jle
scas
cmc
fs
cltd
xorl
and
xor
dec
sbb
in
inc
clc
push
adc
out
mov
or
sub
shrb
or
das
dec
call
in
scas
push
push
or
int
sbb
dec
push
add
sub
xchg
pop
xchg
mov
lods
cmp
outsb
in
mov
mov
jmp
test
hlt
dec
lods
fwait
mov
popa
xchg
pop
loopne
repz
inc
push
push
in
mov
mov
jl
les
jge
out
or
or
pop
sub
cmp
pop
pop
jb
add
aad
outsb
add
mov
cmp
test
jp
aad
and
cmpb
rol
mov
xchg
fnsave
arpl
pop
fldcw
xor
dec
xchg
ret
jns
aam
cwtl
mov
stc
decl
scas
and
cmp
lahf
and
je
call
push
mov
dec
push
jns
xor
mov
jmp
mov
jle
mov
in
sub
loope
outsl
pop
xchg
sub
imul
jne
ret
shrl
push
xchg
xor
add
cs
fwait
popa
adc
xchg
xchg
mov
dec
jo
daa
cmpsb
cmpsb
in
add
xchg
outsb
push
push
push
add
xor
out
es
push
pushf
cmp
xchg
les
mov
mov
xor
push
mov
push
out
cmp
in
jnp
in
jp
fmul
push
sbb
xor
repz
aam
cwtl
inc
push
ret
jb
push
dec
inc
mov
xor
mov
dec
mov
cs
pop
inc
sub
push
mov
imul
jge
ja
stos
pop
cmp
int
fildll
mov
lret
fwait
test
sbb
imulb
pop
loop
add
lahf
mov
add
fmuls
lcall
sti
mov
loope
bound
int3
cmp
cwtl
fbstp
lods
inc
push
xchg
leave
test
mov
dec
inc
jb
mov
dec
add
mov
popa
int
dec
jbe
in
pop
in
test
or
jp
inc
sub
jecxz
sarb
jb
lret
insb
xor
testl
es
push
mov
int3
rcrb
cmpl
jmp
test
and
call
mov
rcll
shlb
mov
stc
pop
ds
std
mov
cmpsl
sub
push
stos
cltd
push
or
mov
cmp
cmp
xchg
xor
pop
lods
pop
add
decl
orb
mov
rorb
jbe
aam
movsl
xchg
cmp
out
push
push
shll
push
sbb
cmpsb
mov
out
cmp
cmp
dec
inc
lds
and
xchg
mov
mov
mov
ror
lcall
aaa
aaa
mov
dec
lods
subl
xchg
js
pop
hlt
lea
and
sub
sub
mov
cmpb
adc
mov
jns
dec
push
sbb
mov
mov
sub
jno
in
ja
shl
or
lcall
add
and
std
ja
push
cmp
test
mov
arpl
sbb
pop
and
popf
push
push
push
adc
in
push
ds
xchg
mov
push
inc
cmp
call
xchg
fsubrl
enter
mov
scas
out
sbb
or
pushf
or
lcall
dec
lock
int3
fwait
mov
sarb
test
mov
xchg
inc
push
test
jge
mov
xor
in
and
mov
xchg
fcompl
shr
insl
sub
sahf
push
pop
sub
les
push
and
lret
sub
pop
jp
sub
sti
xchg
repz
test
cmp
movsb
and
cs
into
loop
mov
cs
mov
sahf
fisubrs
xlat
lock
cli
adc
dec
cwtl
aad
testl
add
cmp
jmp
call
jge
adc
lds
pop
mov
pop
xor
or
pop
jae
mov
divb
aam
popa
cmpsl
mov
add
jbe
in
lcall
aad
inc
cltd
and
stos
adc
xor
sub
mov
aas
insl
sub
adc
out
xor
adc
cmc
rcll
imul
arpl
shlb
test
aaa
loopne
icebp
mov
scas
mov
jae
mov
push
mov
movsb
aaa
mov
inc
pop
out
shlb
dec
sbbb
xchg
jb
out
lret
add
add
popl
add
sub
popf
push
pop
cmp
cmpb
ljmp
mov
imul
xchg
or
cs
lock
call
pusha
pop
xchg
sete
popf
mov
les
mov
es
mov
in
mov
gs
ficompl
or
dec
dec
cmp
icebp
mov
divb
mov
not
lret
pushf
adc
add
push
fldcw
xor
mov
sbb
adc
xchg
pop
pop
push
mov
pop
xchg
div
into
xor
popa
mov
repnz
cmpsb
das
mov
divl
pop
and
cmpsl
jle
pop
outsb
cltd
out
mov
jge
pusha
hlt
sub
gs
fsubl
ja
movsl
aam
xchg
cmp
push
pop
jbe
mov
js
mov
xchg
cmp
lods
movsb
aam
adc
mov
int
and
inc
pop
loopne
rolb
and
push
test
call
mov
xor
sub
dec
cmp
or
sarb
xchg
cmp
add
adc
cmp
cli
inc
push
repnz
push
fnstsw
fimull
test
cmp
add
mov
stos
cs
aam
pusha
push
mov
adc
ret
testl
add
in
scas
out
or
andnps
jno
loope
xchg
fidivrs
adc
fnstcw
fcom
inc
shlb
sub
inc
mov
out
push
loopne
inc
dec
cmp
mov
and
xor
movsl
les
lret
sub
push
push
inc
test
mov
xor
stos
or
scas
sub
inc
scas
nop
out
inc
imul
ljmp
aaa
mov
enter
and
mov
push
cmp
pusha
cmc
mov
stc
test
call
fldcw
repz
inc
leave
xchg
jl
shrl
les
arpl
arpl
leave
mov
xor
imull
cwtl
jg
push
add
pop
xor
ret
inc
sub
mov
push
ss
jae
aad
out
cmpsl
test
ret
push
out
arpl
cmp
jnp
arpl
cltd
imul
add
push
jno
xchg
dec
fdivl
addr16
fldz
jmp
add
xor
or
jns
mov
es
mov
inc
mov
sbb
fimuls
ret
outsb
or
rorl
ret
cmp
arpl
cmp
jecxz
stos
cwtl
nop
outsl
addr16
imul
imul
push
enter
or
inc
dec
pop
daa
je
mov
cli
mov
pushf
dec
loopne
cmp
jmp
repz
jecxz
imul
loop
cmp
jp
push
dec
lods
xchg
cli
out
loop
and
jg
jnp
jmp
out
fisttps
jl
hlt
lret
mov
into
and
xchg
adc
adc
movsl
addb
sahf
stc
out
cmp
out
cmc
add
test
push
lods
clc
std
push
imul
dec
daa
mov
xor
or
fisttps
out
pop
mov
sbb
hlt
pop
mov
psrlw
xlat
cltd
int
aaa
or
mov
push
inc
test
xor
dec
test
test
mov
sbb
push
lods
icebp
cs
mov
lds
decb
dec
into
add
xor
movq
daa
mov
fdivs
in
and
pop
fwait
cmp
pushf
sbb
test
clc
ljmp
xchg
push
imul
add
daa
pop
stos
jmp
adc
and
mov
sbb
mov
leave
mov
or
icebp
mov
aas
jno
cwtl
jle
xchg
data16
sbb
push
inc
insl
cli
fs
mov
pop
or
lret
inc
push
sahf
out
xchg
adc
pop
es
push
cmc
jbe
loop
loopne
je
jbe
lods
fiadds
adc
or
in
mov
mov
or
out
lods
jnp
mov
xlat
mov
out
mov
enter
loopne
ret
fldl
and
subb
push
insl
repz
mov
pop
mov
add
mov
jno
sti
mov
lods
nop
or
mov
or
scas
test
test
aaa
pop
push
out
enter
lahf
mov
pop
cmc
push
jne
jmp
shl
sub
loope
cmpsb
pushf
jae
xchg
inc
dec
push
add
imul
les
ficoms
or
test
pop
mov
mov
test
fcoms
mov
add
sub
test
cwtl
jge
mov
cmovae
mov
ret
sub
iret
add
add
divb
mov
mov
dec
jne
inc
repnz
arpl
rorl
adc
les
mov
loop
addr16
push
add
adc
loope
cld
or
add
push
cmp
push
pop
dec
in
adcl
jg
mov
mov
mov
dec
int3
pop
mov
sbb
std
dec
lahf
ret
outsb
jmp
popa
jb
cmpsb
mov
xchg
jl
mov
movsb
mov
xor
frstor
fstpt
pop
sbb
imul
popa
adc
xchg
sbb
test
push
mov
into
jp
or
jnp
xchg
loop
sahf
pop
fists
cltd
jge
push
lret
jle
xchg
mov
pop
adc
mov
pop
sbb
push
mov
sbb
lods
and
xchg
dec
jae
rcr
jo
cmp
xor
pop
mov
enter
add
sub
push
mov
pop
add
sub
mov
popa
fcmovnbe
add
xchg
sub
out
mov
faddl
mov
sub
xor
add
das
jg
fisttpll
outsb
adc
sti
xchg
movsl
pop
mov
movsl
test
adc
nop
iret
add
pop
adc
test
test
stos
mov
ficompl
repnz
sub
cwtl
xchg
dec
mov
enter
sub
sub
pop
adc
repz
rcr
pop
cmp
inc
cmp
repz
dec
inc
adc
and
adc
push
pop
std
push
gs
cwtl
sub
js
push
or
lds
dec
add
out
inc
pop
push
test
mov
pop
call
pop
xor
mov
divb
mov
fwait
arpl
and
loope
jmp
inc
add
jne
dec
push
and
aas
push
pop
pop
push
mov
fs
cmp
jle
ret
rclb
int3
in
pop
cli
sbb
add
jo
push
adc
mov
adc
push
inc
cmp
rcrl
shlb
xorl
popf
outsl
mov
sub
fsubrl
ja
or
push
sbb
jb
lods
jnp
mov
sub
pop
out
xchg
mov
mov
repnz
lret
fildl
mov
push
and
adc
leave
jns
sbb
cld
mov
ds
addr16
loopne
mov
dec
and
sub
sub
push
mov
jmp
add
insl
outsb
sub
scas
push
cld
das
subl
dec
popf
aaa
in
pop
xchg
sbb
jle
sub
std
xchg
jns
jg
cmp
xor
mov
push
and
xor
mov
clc
icebp
hlt
or
mov
int3
ret
repz
add
into
dec
fwait
mov
fisubrl
and
lret
adc
inc
pop
roll
cmp
and
out
cmp
pushf
mov
scas
mov
popf
aam
lahf
pusha
sti
int
adc
popf
push
cmp
and
xchg
add
stc
pop
out
xor
mov
push
mov
mov
mov
icebp
dec
inc
cmp
sbb
pop
ret
fs
and
xor
pop
outsl
cmp
jo
xchg
inc
xor
xlat
push
jge
mov
insb
and
ja
jne
adc
mov
or
aaa
jae
and
add
adc
rcrl
mov
and
fbld
aaa
push
sub
ss
adc
or
lret
mov
jle
lcall
incl
jno
push
out
fcoml
int
stos
lds
mov
mov
jnp
int
ficoms
cmc
mov
incl
stos
sbb
mov
push
jmp
dec
mov
xchg
jle
xor
dec
addr16
int
lods
imul
ljmp
addr16
mov
notl
pop
stos
xchg
and
stos
loopne
mov
lret
sub
pop
sub
fists
imul
fistl
imul
mov
sub
and
outsl
inc
scas
jb
mov
jae
mov
cmc
sub
popa
mov
jno
insl
imull
mov
ficoms
insl
ds
in
lea
fcmovnu
pusha
and
sbb
mov
mov
cld
ja
repnz
repz
lret
push
out
push
aaa
jmp
sbb
pop
scas
das
cltd
jle
dec
in
push
or
lods
fiaddl
add
out
mov
out
fldt
negl
cmpsl
jg
mov
rorl
dec
cld
movsb
loope
lcall
add
sub
cli
or
jae
mov
in
call
xor
fs
andl
shll
ljmp
jns
sub
mov
aad
sahf
imul
testb
inc
lret
rolb
lods
xor
ds
lcall
ja
lret
mov
loope
int3
clc
push
adc
ss
and
jbe
cli
sbb
ljmp
scas
data16
cltd
fistpll
pop
mov
movsb
outsl
jp
cmp
jb
ret
call
in
adc
into
add
mov
pop
xchg
jnp
or
mov
push
daa
push
popa
jge
push
and
mov
movsb
jnp
insl
sub
xor
lret
dec
push
pop
enter
mov
sub
mov
dec
jmp
cld
lahf
sub
je
sub
push
jg
dec
sbb
nop
inc
sub
xlat
pop
pop
fnstcw
jo
xchg
cmp
adc
in
gs
in
faddl
sub
dec
daa
mov
je
andl
mov
clc
sti
pop
cs
mov
cli
dec
call
fs
fsts
in
push
lea
rolb
lahf
jecxz
xchg
cmpsl
or
sbb
xor
add
mov
fs
lret
xchg
sbb
bound
cmpsb
sub
push
xchg
clc
ljmp
sbb
pushl
fmul
out
sbb
fadds
mov
es
ud2
outsb
cwtl
comiss
pop
push
push
mov
cmp
stc
in
out
pop
add
mov
sbb
enter
or
jnp
jno
mov
xor
mov
mov
push
subb
cmc
or
mov
add
daa
add
in
jle
and
movl
jno
jg
add
xlat
out
mov
movsl
and
push
mov
leave
pop
lret
clc
push
and
cld
mov
aas
push
fldt
jne
dec
xchg
lods
int
rorb
mov
add
adc
or
xchg
outsl
push
lds
aaa
fstpt
insl
or
flds
es
push
lret
jne
inc
shll
cmpsb
insb
inc
fs
stos
in
out
aas
faddp
sub
adc
fst
xor
xor
push
pop
jo
ret
dec
or
aas
inc
xor
jp
div
jbe
pushf
push
or
xchg
mov
xor
dec
and
nop
int
mov
add
dec
and
out
fstp
mov
dec
mov
inc
cmpsl
add
arpl
imul
cli
xchg
cmpsl
insl
or
add
cwtl
inc
fildll
sub
faddl
adc
mov
adc
dec
and
push
add
in
cmp
pop
popl
lcall
adc
pop
divl
movsb
cmc
adc
outsb
insl
shrb
loope
pop
outsl
fisubs
or
jbe
in
pushf
ficoml
and
cmpsb
push
jae
shlb
je
out
inc
jb
mov
adcl
je
ljmp
adc
add
fistl
rcrb
in
lods
sub
lea
push
jae
aad
push
test
in
std
ret
mov
mov
jg
and
dec
cmpsl
shrb
or
pop
stos
test
push
cmp
mov
leave
cld
or
dec
xor
roll
adc
mov
mov
notl
movl
mov
mov
or
pop
gs
cld
mov
xchg
jbe
lods
adc
xchg
cmp
sub
inc
push
lahf
mov
ds
sti
add
mov
adc
mov
dec
fildll
pop
fst
mov
inc
xchg
sarl
push
cmc
fsubs
into
dec
cli
cmpsl
das
ds
inc
test
icebp
jle
mov
sbb
les
test
jecxz
mov
pop
dec
outsb
jl
std
dec
xchg
lods
or
scas
add
je
daa
enter
pop
aam
add
addr16
rcrb
xchg
adc
or
mov
dec
or
push
das
out
dec
push
lods
fcmovb
mov
or
out
mov
int3
jb
push
ja
lret
test
cmp
ja
jbe
inc
jbe
cs
adc
dec
daa
ficompl
lahf
aas
lahf
das
pop
data16
dec
sbb
and
xchg
int
aaa
das
jb
mov
or
adc
and
ja
hlt
pop
hlt
jae
lahf
mov
pop
push
cld
cmp
adc
mov
lcall
mov
or
ds
iret
and
cwtl
jb
pushf
lret
dec
test
add
and
ja
fchs
sarb
fmul
and
adc
push
pop
push
mov
push
push
popa
imul
xchg
xor
nop
mov
outsl
es
mov
loop
loop
mov
pop
pusha
or
addb
cmp
xor
or
jbe
pop
sbb
pop
or
test
cmpsl
aad
jecxz
add
inc
ret
sbb
xor
and
mov
jno
push
jecxz
inc
xchg
flds
bound
mov
xchg
xchg
dec
inc
negl
dec
mov
sahf
ja
daa
and
test
jae
fdivrl
sub
jno
jae
inc
jae
lock
sahf
xchg
addr16
fldl
call
rorl
dec
pop
pop
outsl
nop
fnstenv
loop
lock
ret
mov
jne
loopne
push
xchg
xchg
sti
push
xor
xchg
cmp
cmp
or
loope
add
mov
jnp
ss
stos
dec
cmpsb
out
in
or
pop
test
repz
mov
xchg
or
mov
rclb
sub
cmp
loopne
scas
add
or
shll
ret
and
cmp
pop
ja
decb
test
xor
jecxz
lcall
leave
imul
in
jle
and
test
stc
adc
ss
xchg
mov
sub
lea
cmpsl
fpatan
jl
mov
and
repz
clc
adc
pusha
dec
lret
dec
into
xor
sbb
push
adc
ss
mov
mov
mov
push
adc
jecxz
add
add
sbb
mov
or
scas
rorl
cltd
imul
sbb
push
dec
push
in
popf
and
push
mov
inc
sti
in
pop
inc
in
or
sbb
in
pop
imul
push
sub
jae
popa
lods
xor
adc
xchg
or
lods
rcrl
jo
adc
in
cltd
sbb
fnsave
loope
jg
adc
pop
loope
inc
dec
pop
idivb
imul
or
cs
sbb
jns
ljmp
jle
push
add
addr16
xchg
or
cmpsb
mov
insl
fbld
lock
add
jne
shrl
sub
out
shrl
mov
dec
add
and
mov
notb
aad
rcrl
stc
fiadds
insl
pop
and
mov
dec
repnz
pop
dec
add
scas
popf
xchg
out
jmp
out
xlat
in
test
cmovg
ficoml
adc
rep
lret
cmpsl
or
mov
and
add
sub
jns
jns
cmpsb
pop
jmp
mov
lcall
aam
mov
stos
cli
push
lret
lock
inc
xchg
negl
gs
xchg
push
ret
dec
mov
cmp
fidivrs
and
lods
movsb
or
adc
push
xchg
add
repnz
scas
inc
inc
push
jo
addr16
shlb
prefetcht2
sub
out
xor
les
push
dec
xor
stos
std
subb
sbb
jecxz
pop
rorl
mov
lret
scas
add
mov
js
inc
lock
enter
fsubrs
mov
jmp
iret
sub
call
sti
dec
mov
cmp
andb
adc
pop
movsl
ljmp
and
pop
push
cmp
pop
and
adc
addr16
push
xchg
ljmp
sbb
je
dec
inc
or
or
sbb
sarb
mov
mov
cltd
test
fiadds
jo
ljmp
adc
mov
js
push
jge
pop
dec
jp
ljmp
mov
sbb
shlb
and
pusha
outsb
inc
add
fwait
and
pop
ja
int3
mov
cwtl
cmp
push
dec
inc
and
loopne
jnp
add
sub
inc
insl
and
mov
sub
into
xor
mov
sub
pop
sbb
xorl
imul
ljmp
cmp
and
in
mov
mov
dec
push
shlb
lock
cmp
cmp
lahf
addr16
ret
push
mov
cltd
and
pop
push
fdivp
adc
ror
lcall
das
leave
xor
xchg
xor
mov
test
sbb
add
pop
xchg
xor
in
scas
and
pop
les
sub
mov
xchg
xchg
push
sub
stc
mov
dec
test
ret
in
cld
and
int
adc
mov
dec
les
dec
push
loopne
xor
gs
cld
les
mov
test
sub
inc
cmpsl
bound
mov
adc
shr
and
stc
xor
mov
push
test
movsl
fldz
push
aam
aad
test
mov
sbb
shll
pushf
int3
xchg
mov
orl
popl
xrelease
mov
lahf
mov
push
std
repnz
or
pop
push
popf
add
in
fcmovu
cmp
lods
xor
outsb
sub
adc
dec
sbb
jne
xchg
pop
js
jmp
jns
andl
xlat
shll
mov
popf
push
sub
jb
add
push
add
mov
iret
scas
mul
and
popa
out
cmp
and
mov
ss
mov
cmp
xor
loopne
dec
push
or
and
pushf
sbb
lcall
sub
or
testb
sub
or
out
mov
imul
out
or
popa
nop
pop
sub
mov
jno
sbb
pop
or
add
push
sbb
cmpsl
aad
into
movsl
add
dec
rcr
outsb
nop
ds
jmp
inc
sub
mov
int3
shrb
fs
push
add
xor
lret
lret
lahf
push
aaa
xor
aad
mov
clc
test
jns
mov
inc
cmpsl
sbb
mov
add
lret
mov
lods
cld
aas
popf
pop
mov
sti
dec
shlb
in
sub
popa
jle
xchg
and
mov
pop
push
pop
aas
xor
orl
mov
xchg
jns
fisttpll
push
jb
movsb
sbb
ja
iret
push
pushl
mov
out
sub
inc
xor
push
inc
fsts
push
sbb
mov
stos
mov
cltd
sub
gs
out
mov
movsb
daa
dec
dec
sbb
dec
ljmp
aam
dec
push
notb
xchg
pushf
adc
push
lahf
mov
lods
repnz
dec
sbb
cmp
sbbl
in
movsb
xchg
push
ja
loop
fistl
xor
push
sbbl
pop
clc
lock
mov
mov
dec
aas
jbe
lret
or
outsb
pop
cmp
loopne
int
les
ret
pop
mov
adcb
addr16
or
inc
sub
aaa
mov
mov
jle
mov
call
fisubrs
pop
xor
push
inc
enter
mov
lret
mov
enter
cmp
dec
cli
cmp
xchg
pusha
hlt
cld
cli
mov
enter
dec
mov
cwtl
dec
fmul
jne
inc
add
adc
sbb
xor
scas
popf
shlb
out
jns
movswl
mov
aaa
push
mov
and
push
cmp
fcomps
fcmovbe
imull
cmp
pop
push
mov
shll
add
jg
sub
xor
or
lods
nop
jno
add
add
das
mov
xor
xchg
sbb
jg
js
inc
scas
dec
jg
mov
mov
out
es
mov
push
and
std
icebp
into
adc
cmp
lods
stos
mov
inc
pop
clc
sbb
inc
xchg
repz
mov
call
mov
inc
test
aad
push
sub
repz
mov
test
loop
sub
xchg
pop
push
call
or
jb
add
jmp
nop
addl
dec
test
call
mov
imul
scas
and
adc
add
insb
mov
cmp
xor
and
mov
xchg
addr16
add
cmc
mov
sahf
fisubrl
jp
out
pusha
mov
mov
xlat
int
insb
pushf
sbb
pop
subl
jns
out
in
sub
outsl
cmp
cwtl
push
mov
das
shrl
sbb
mov
test
lods
xor
sub
or
rcll
out
add
jae
or
ja
cltd
pusha
and
cmpsb
and
pop
cld
jb
shlb
out
ret
out
in
push
pop
rcrb
mov
out
shll
lds
and
shrb
ss
fwait
mov
scas
pop
int
lds
add
out
add
push
adc
into
fsubrl
out
push
call
push
mov
inc
cmp
jecxz
push
and
push
fimuls
dec
and
mov
aam
cmp
sub
lea
lahf
cmp
xchg
imul
dec
loop
pop
test
and
sub
inc
push
xchg
add
fwait
add
out
cmp
mov
push
bound
mov
xor
jo
and
icebp
pop
sub
inc
stc
pop
adc
insl
int3
in
inc
dec
pushf
shll
imul
das
or
jmp
xor
push
add
mov
mov
or
push
gs
incl
int3
push
dec
fldenv
lods
mov
sbb
sub
push
inc
fwait
dec
aaa
sbb
jo
lahf
daa
cmpsl
inc
in
pushf
outsb
scas
jmp
and
jle
push
adc
nop
mov
stos
mov
int3
mov
imul
and
in
jg
sbb
jbe
xor
sub
cmp
and
daa
push
dec
pop
dec
lods
pop
test
xlat
movsb
mov
or
ds
testl
push
push
test
out
and
mov
mov
into
xor
mov
cmp
sbb
lret
movsb
bound
mov
push
xor
xlat
es
mov
mov
test
pusha
ljmp
out
and
push
ud2
pushf
jle
push
inc
arpl
mov
push
cmp
cmp
clc
aaa
lods
mov
mov
into
dec
jecxz
sub
les
std
push
popl
cmc
cmp
enter
ds
clc
test
lea
sub
push
popa
pop
gs
jb
fildl
out
inc
mov
push
xor
mov
mov
out
fwait
mov
pop
jge
or
popf
movb
mov
pop
add
mov
jecxz
jge
pop
add
ss
test
sbb
or
jo
std
adc
mov
jno
aas
cmp
xchg
repnz
cwtl
push
or
cmp
or
sub
mov
mov
lods
xor
stos
cli
popa
xchg
test
mov
mov
mov
sub
inc
mov
das
jl
cmpsb
push
mov
mov
xor
and
pop
xchg
mov
enter
call
pop
popf
push
hlt
sub
jne
fisttpl
jg
into
mov
int
shr
test
aaa
int
fdivs
out
jp
push
lahf
cmpsb
jbe
and
ret
pushf
mov
repz
mov
stos
sbb
mov
adc
les
je
xchg
mov
jae
and
loop
scas
ja
push
or
lret
popl
mov
and
lods
cmpsl
sub
add
add
adc
int
xor
cmp
and
lcall
cmpsb
mov
mov
pop
adc
out
dec
aas
xchg
adc
shl
in
movsb
sub
arpl
and
sbb
call
dec
sbb
lods
add
jns
les
fiaddl
pop
test
xchg
sub
cmc
push
dec
push
adc
dec
test
dec
iret
out
pop
clc
imul
sahf
call
out
sub
lret
aam
pop
inc
dec
jbe
jns
or
push
xor
cmp
out
push
push
inc
mov
scas
mov
pop
xchg
scas
dec
sbb
fwait
xchg
xchg
mov
out
dec
int
lret
jecxz
xchg
aam
loope
pop
in
mov
fistpl
repz
sahf
lods
out
jnp
test
loop
iret
rorl
and
shl
xchg
sbb
mov
xchg
rcrl
xchg
cmp
jp
stos
shr
xlat
pop
js
mov
loop
stos
and
sub
fucomi
lods
test
mov
outsb
mov
mov
sbb
je
in
ljmp
aas
aad
cmp
popf
nop
cmp
int3
dec
add
cmc
sar
fildl
jns
xchg
and
aam
insb
sti
and
jl
mov
pop
es
jo
inc
and
xchg
movsb
sub
dec
sbb
mull
loopne
xor
mov
jae
lds
dec
dec
inc
lret
fs
xchg
xchg
mov
jns
mov
jb
or
and
lret
mov
add
push
jns
or
push
push
xchg
and
cli
ficompl
cld
out
mov
loopne
sti
div
jb
outsb
aaa
aam
xor
mov
lret
jns
adc
jae
in
jnp
in
js
xchg
or
pop
pusha
mov
je
sbb
test
js
lret
push
jmp
lods
dec
pop
sub
pop
push
es
adc
sub
out
lods
pop
dec
clc
pop
jne
rorl
scas
push
lods
jg
cmp
fstpt
or
xchg
stos
xor
jns
pop
into
push
gs
jp
dec
fcmovnb
push
jbe
xchg
mov
sbb
xchg
popa
pop
ss
adcl
jmp
add
ljmp
pop
mov
in
pop
roll
int3
dec
jp
push
xchg
lret
sub
cmpsb
xchg
icebp
inc
sbb
ljmp
jne
mov
mov
mov
bound
sub
push
sbb
rorb
test
dec
mov
adc
jns
js
out
ja
inc
mov
fsubrl
push
push
lcall
add
adc
or
out
ja
stos
out
jmp
cwtl
jecxz
in
ffree
cmp
cmp
insb
repnz
xlat
jp
sbb
xor
mov
push
ss
lock
push
imul
iret
sub
sti
aaa
cmc
jl
les
pop
stc
jnp
add
mov
adc
sub
mov
call
repnz
cli
mov
jmp
dec
out
cmp
insl
lret
add
incb
cs
mov
inc
lcall
ja
sbb
dec
pusha
int
test
or
repnz
dec
xchg
adc
movb
popf
inc
out
mov
jecxz
sti
bound
dec
movsl
xor
jge
mov
xlat
ljmp
sub
pop
dec
jp
add
subl
gs
loope
sbb
xor
out
inc
stos
push
mov
ljmp
ljmp
jmp
jo
aam
shlb
shrl
in
outsb
xor
clc
add
cld
xchg
arpl
cwtl
rcll
ret
mov
mov
les
out
jg
xchg
fisubrl
push
xor
lcall
add
pop
cmpsb
cmp
xor
cmp
lea
jbe
add
dec
sub
jmp
lods
sub
pop
ljmp
sbb
ffreep
jge
outsl
or
inc
sbb
or
test
mov
push
push
pop
xchg
fidivl
push
sub
das
addr16
out
mov
jecxz
jge
mov
mov
icebp
pop
cmpl
lret
pop
or
stos
enter
mov
mov
roll
pusha
mov
faddl
test
fidivrl
adc
xor
xlat
rcrb
lea
ss
loop
ja
leave
flds
mov
jg
push
xor
vmwrite
cs
adc
jle
push
stc
push
mov
mov
xchg
call
push
xchg
jle
jnp
adc
lea
xchg
sbb
mov
loope
scas
add
or
daa
push
dec
add
pusha
push
inc
mov
test
xor
sbb
enter
lahf
sub
jge
xor
nop
lea
jecxz
and
xor
stc
mov
mov
mov
call
pop
xchg
daa
sbb
add
xorl
movsb
cmp
and
sbb
dec
inc
xor
out
mov
mov
inc
push
sbb
xchg
bound
imul
xor
stc
mov
pop
cmp
mov
push
lret
repz
test
dec
cli
out
xchg
or
and
pop
pop
mov
xchg
ja
cmpsl
adc
testb
mov
aad
ds
xchg
fnstenv
lods
je
jnp
xlat
push
scas
bound
das
jmp
movsl
sbb
mov
jge
dec
nop
and
sbb
popf
aaa
hlt
lds
ja
ret
movsl
and
int
int
test
xorb
push
fnstenv
push
aas
inc
add
bswap
test
mov
mov
lcall
sahf
idivb
mov
cmp
popa
jmp
pop
xor
push
leave
popa
mov
sub
sahf
jbe
dec
sarb
cmp
push
inc
nop
adc
mov
adc
inc
jmp
sub
clc
rclb
jae
inc
pop
cmp
mov
pop
out
lock
push
in
inc
enter
in
pop
and
mov
lods
rcll
out
pop
incb
setg
scas
dec
mov
cmp
out
push
dec
js
fucomp
push
mov
dec
push
and
loope
mov
ja
popa
or
pop
stos
jbe
or
mov
mov
rclb
nop
jne
cli
iret
cmpsl
popf
cmpb
lahf
dec
mov
xor
inc
mov
outsb
mov
sbb
add
jnp
stos
cld
fstl
iret
ret
sti
jo
xchg
xor
jl
sbb
ljmp
xchg
cmp
repnz
outsb
test
add
pop
cmp
lret
xor
scas
push
or
js
inc
rol
dec
mov
push
xchg
xor
int
jmp
sbb
mov
mov
imul
es
sbb
xlat
push
xor
fimull
push
push
imul
into
mov
pushf
lret
out
pushf
push
jge
in
popa
mov
leave
or
loop
movsb
std
pop
xchg
test
movsb
cli
decl
mov
enter
sub
clc
push
sub
or
xor
loop
filds
fstps
sub
fcompl
push
push
addr16
incl
repz
adc
lock
and
mov
aas
push
lcall
aam
mov
pop
mov
sbb
add
jb
cmp
test
mov
test
pop
subl
xchg
fs
icebp
inc
mov
add
jmp
xor
mov
adc
popl
or
cmp
lock
cmp
out
popa
add
mov
loopne
xcrypt-ecb
cmpsl
or
push
icebp
jp
mov
pop
movsb
les
sbb
cltd
add
adc
or
sbb
sub
adc
movsl
out
or
outsb
inc
stos
push
enter
mov
sub
dec
xchg
adc
imul
cli
imul
xchg
cmp
push
jmp
pop
xchg
cwtl
ljmp
and
roll
xlat
jle
fistpll
in
sub
fisubrs
mov
inc
and
jo
xchg
in
incb
pop
dec
and
fdivs
jl
xor
cld
push
add
nop
test
outsl
xchg
fisubs
icebp
mov
pop
inc
rcll
iret
adc
xchg
sub
and
loopne
push
mov
push
jae
lret
push
jp
aas
cmpl
push
daa
in
xchg
imul
jl
js
outsl
rol
out
jb
add
and
fldcw
add
mov
roll
pop
andb
popf
or
int3
mov
rorl
dec
imul
inc
inc
cs
into
adc
movsb
dec
outsb
mov
push
repnz
inc
sbb
pop
fbld
test
cmpsl
adc
scas
dec
cmpsl
in
hlt
in
cmc
jle
mov
mov
frstor
add
in
repz
lret
adc
add
loop
aas
mov
dec
imul
and
or
je
frstor
jle
data16
fsubrl
cld
dec
push
sub
xor
daa
aaa
scas
insb
sar
call
aad
xchg
adc
jp
pop
fcmovnbe
mov
cmp
mov
add
divl
xorl
push
or
adc
push
pop
xor
push
dec
cmp
out
nop
int3
aaa
shll
aaa
div
inc
jecxz
inc
aaa
scas
jle
or
mov
cltd
dec
mov
xchg
add
outsb
or
and
lds
push
arpl
sbb
mov
xchg
adc
data16
fucomp
xlat
sarl
xor
inc
stos
int
mov
cmp
cmp
sub
int
sbb
rorl
inc
hlt
aam
inc
in
push
test
lcall
loope
insb
inc
add
adc
cmc
jnp
sub
lret
and
movsb
cmpsb
adc
jae
imulb
sub
jno
sub
inc
mov
pushf
popf
mov
or
shr
adc
sar
test
fucomp
or
lahf
test
call
push
cmp
out
mov
pop
dec
jne
pop
pop
repz
xor
rep
repnz
jmp
out
mov
lods
jb
xor
loope
adc
xchg
dec
mov
aaa
xor
cmp
es
test
shrl
xor
cmp
leave
out
decb
jmp
aas
push
shr
in
aam
cmpb
popw
cld
mov
gs
lret
adc
add
pop
add
jno
shlb
inc
loopne
mov
cwtl
test
pop
mov
scas
dec
out
add
enter
xlat
ds
into
out
popa
cmpsl
add
fldcw
clc
push
stos
aaa
dec
iret
cmp
stc
mov
iret
and
stos
pop
and
repnz
sahf
lret
and
scas
testl
idivb
mov
bound
pop
into
cmc
test
pop
add
fwait
mov
jg
inc
xchg
insl
and
sbb
push
sbb
cmc
je
mov
sub
jp
sbb
dec
and
xchg
inc
lret
push
and
shll
jns
aaa
sti
dec
dec
xor
push
adc
xor
mov
push
inc
inc
hlt
enter
into
cmp
jnp
iret
adc
lcall
pop
pop
cmp
fstl
xchg
in
cltd
cmp
lock
sbb
pop
mov
iret
xor
xlat
loope
icebp
pusha
fisubs
in
xor
dec
mov
movsb
int3
push
test
push
lcall
push
xchg
rclb
sbb
mov
daa
mov
mov
push
insb
ficoml
inc
and
sub
loop
and
cwtl
pop
push
xchg
cmp
inc
sbb
fmuls
cmp
das
mov
mov
test
dec
fiaddl
mov
test
lret
dec
push
sbb
sbb
and
sbb
stos
dec
movsb
pop
inc
lcall
push
in
inc
cmp
cs
mov
leave
fisubrl
ljmp
test
insl
cld
pop
pop
std
add
dec
leave
mov
fwait
dec
pop
incb
lods
adcb
outsl
shl
xchg
push
sub
outsb
push
data16
add
popa
xor
cmpsb
or
inc
lahf
outsb
dec
cld
das
nop
lret
movsl
shlb
or
jmp
push
or
or
xor
cwtl
dec
mov
jmp
mov
pop
or
sub
ffree
push
xchg
insb
mov
xchg
xchg
shl
fdivl
cltd
cmp
into
cli
rorl
dec
push
clc
xchg
dec
loopne
scas
xchg
xor
dec
fiaddl
sub
xor
jmp
mov
fidivs
mov
loopne
ljmp
mov
mov
dec
insb
mov
mov
mov
xor
xchg
scas
jno
cmp
push
and
xorb
dec
jb
mov
test
movsb
push
lods
jmp
xchg
call
xor
xor
mov
pop
out
clc
mov
inc
pop
fmull
inc
loope
push
ljmp
rorb
dec
xchg
mull
call
mov
jge
dec
push
cmp
cmp
or
cmpsl
shl
pop
jne
mov
jl
lods
std
or
ret
mov
sbb
mov
jmp
mov
rcrb
adc
inc
xor
mov
jb
mov
icebp
inc
add
addb
cmp
mov
cwtl
out
cmp
mov
jge
xchg
lret
push
aad
pusha
jle
adcl
pop
in
xchg
insl
xor
add
sbb
mov
adc
mov
hlt
sbb
call
dec
inc
out
jnp
push
ja
jns
inc
jmp
imul
pop
test
mov
lods
int3
mov
xchg
dec
mov
mov
clc
pop
inc
lods
mov
inc
sub
cltd
or
xor
cmp
stos
mov
les
sbb
loopne
or
adc
mov
lcall
inc
jmp
mov
fisttps
pop
or
aam
push
push
push
lret
or
push
pop
xor
adc
rcrb
xor
xor
cmc
fcmovnb
adc
push
das
adc
cmp
orl
and
gs
imul
stc
pop
cwtl
bound
dec
ret
mov
inc
pop
push
sbb
or
cmpsb
or
leave
nop
dec
jp
push
add
adc
or
cmp
enter
fnsave
add
lods
outsl
iret
inc
movsb
mov
faddl
dec
dec
xor
adc
std
idivl
cmp
icebp
cmpsl
xchg
ja
out
lods
shr
jg
out
out
cs
test
aad
pushf
ljmp
jbe
pop
jno
icebp
mov
outsl
cwtl
jae
add
push
xchg
stos
pop
addl
ds
jo
and
cmp
xor
lock
repnz
mov
jno
jg
pop
leave
pop
jns
mulb
arpl
pop
nop
loop
rol
mov
movsb
xor
push
add
and
xor
or
cltd
aad
movsb
adc
lcall
xor
inc
xchg
lods
in
fs
addl
xor
push
inc
pushf
loope
jmp
push
jecxz
pop
jo
mov
pop
in
add
jno
in
stc
mov
cmp
out
mov
cmc
xchg
mov
and
fidivl
divl
jne
pop
inc
mov
xor
or
jne
pop
sub
push
mov
push
adc
out
sub
gs
rolb
sub
clc
pop
mov
pop
push
dec
inc
rorl
adc
sbb
push
adc
lods
mov
clc
stos
mov
mov
xchg
jnp
in
jl
pop
enter
inc
xlat
dec
aaa
cmp
push
and
cltd
push
sbb
lods
idiv
fdivs
mov
add
fcomps
xor
pop
inc
iret
lret
jo
xor
aad
test
nop
mov
daa
out
push
pop
adc
mov
shl
add
push
sub
ret
cwtl
xchg
in
sbb
or
pop
or
pop
or
mov
or
int3
fistpll
and
xchg
ja
xchg
sar
sarb
fcmove
fdivs
call
in
dec
std
pop
push
pop
sahf
add
adc
mov
pop
adc
sub
incb
sub
pushf
mov
xchg
cmp
mov
add
ljmp
cwtl
inc
inc
jg
pop
push
rorl
and
scas
ljmp
test
xchg
xchg
push
dec
jno
lods
sti
call
sub
xchg
push
sbb
roll
jb
mov
xchg
cmp
idivl
imul
sbb
xor
out
mov
frstor
mov
sahf
or
mov
pop
jo
fnclex
sahf
rorb
push
lods
aas
cli
repz
ffree
shl
lock
loope
lods
add
xchg
sub
pop
cmp
pop
mov
pop
daa
inc
mov
dec
push
ficoml
push
sbb
cmc
repz
sub
xchg
mov
xchg
jle
dec
std
.byte
.byte
jno
adc
xor
nop
add
add
sarb
mov
adc
xchg
sahf
pop
idivb
cld
insl
and
mov
mov
out
and
clc
pop
out
addl
xchg
cmp
ret
jge
mov
outsb
movsb
iret
mov
push
aad
xchg
stc
xchg
sub
adc
mov
mov
push
lods
clc
or
loope
mov
adc
push
js
sub
jp
mov
pmaxub
in
ret
lds
add
sub
inc
imul
and
xchg
repz
add
xchg
sub
cmp
ds
jnp
sahf
and
and
jbe
in
testl
adc
je
push
sar
data16
xchg
cmp
in
jl
or
lret
fiaddl
fs
sbb
xlat
jb
sub
adc
test
inc
add
addr16
jecxz
shlb
cmp
fxch
nop
cwtl
pushf
ficoml
xor
mov
push
adc
jecxz
lcall
mov
xor
jg
xchg
lock
lret
mov
fsubp
cmp
lock
insl
pop
test
scas
clc
notb
xchg
mov
addr16
mov
test
jp
pop
addr16
push
add
jne
mov
imul
dec
int3
fldenv
cmp
push
and
push
mov
push
and
dec
sub
stos
insl
push
popa
or
out
mov
test
dec
bound
mov
rorl
pushf
in
xchg
jge
or
pop
loopne
bound
jns
sub
cwtl
fs
imul
push
int
arpl
pop
das
fnstsw
popl
and
repz
mov
xchg
.byte
.byte
.byte
push
add
add
ljmp
add
add
add
add
addb
add
pusha
add
addb
add
rolb
orb
add
add
add
addb
adcb
add
cwtl
add
addb
add
ljmp
add
add
add
add
addb
add
ljmp
add
add
add
add
add
add
addb
add
loopne
add
ljmp
add
add
add
pop
add
clc
add
adc
add
adc
add
sub
add
inc
add
adc
add
pop
add
adc
add
jo
add
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
adcb
add
add
adcb
add
add
addb
add
ljmp
add
add
add
add
andb
add
dec
add
add
add
fiaddl
add
out
push
add
incb
add
sbb
add
cmp
add
inc
pop
add
pop
pop
add
jb
add
jle
add
mov
add
add
add
ljmp
add
add
add
add
addb
add
ljmp
add
add
add
add
add
add
add
dec
push
add
add
add
add
add
add
cwtl
add
add
add
add
dec
push
add
add
add
add
add
add
test
add
add
add
ljmp
add
add
add
add
mov
add
add
dec
push
add
add
add
add
add
add
enter
add
add
ljmp
add
add
add
add
fadds
add
add
add
dec
push
add
add
add
add
add
add
call
add
add
dec
push
add
add
add
add
add
add
clc
add
add
add
add
dec
push
add
add
add
add
add
add
or
add
ljmp
add
add
add
add
sbb
add
ljmp
add
add
add
add
sub
add
ljmp
add
add
add
add
cmp
add
ljmp
add
add
add
add
dec
add
add
ljmp
add
add
add
add
pop
add
add
ljmp
add
add
add
add
push
add
add
dec
push
add
add
add
add
add
add
js
add
add
add
ljmp
add
add
add
add
add
add
add
dec
push
add
add
add
add
or
add
add
add
dec
push
add
add
add
add
or
add
add
add
dec
push
add
add
add
add
or
add
add
add
dec
push
add
add
add
add
or
add
add
add
ljmp
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
push
add
add
add
ljmp
add
add
add
add
add
push
add
add
add
ljmp
add
add
add
add
add
push
add
add
add
ljmp
add
add
add
add
add
push
add
add
add
ljmp
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
add
add
add
add
ljmp
add
add
add
add
push
add
add
dec
push
add
add
add
add
add
add
js
add
mov
add
in
add
add
add
xorb
call
add
add
add
add
push
add
add
add
add
add
add
add
or
add
add
add
add
push
add
add
add
add
add
add
add
or
add
in
add
add
add
orb
add
add
add
add
add
push
add
faddl
add
in
add
add
add
enter
aam
add
in
add
add
add
pushf
adc
add
add
add
add
add
add
adc
add
add
add
add
pushf
adc
add
add
add
add
add
add
in
add
add
add
push
pop
add
mov
add
add
add
add
add
xor
add
in
add
add
add
inc
sbb
add
add
add
add
add
add
add
add
xchg
cmp
add
add
add
push
push
add
add
in
add
add
add
loopne
push
add
add
in
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
sbb
add
add
add
add
add
add
add
push
push
add
add
in
add
add
add
and
push
add
add
add
add
add
add
add
push
add
add
in
add
add
add
xor
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
insl
push
add
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
add
fistps
jmp
xchg
out
mov
imulb
jle
xor
dec
adc
test
movl
movsl
std
push
in
mov
je
lods
xadd
cld
xor
cmp
mov
cmp
push
jae
jecxz
mov
cmp
mov
jno
test
jmp
movsb
add
and
add
xlat
scas
js
test
clc
stc
sbb
lcall
movsl
cmpsl
arpl
fildl
jl
aas
xor
jne
sub
nop
jne
jmp
xchg
cmp
rcrb
push
pop
jo
aad
adc
or
push
jno,pn
les
or
mov
test
push
jl
rorb
xor
mov
rclb
mov
mov
and
pop
out
lock
jne
jp
cwtl
fildll
and
call
ficomps
add
cltd
and
inc
call
jnp
iret
pushf
pop
sahf
test
in
lock
pushf
cmp
into
xor
mov
enter
call
call
inc
jg
dec
shlb
pop
cmpsl
push
cld
mov
inc
pop
inc
ficomps
pop
mov
cs
mov
or
push
test
pop
std
int3
mov
dec
aad
sbb
adc
in
add
and
mov
pop
stos
sti
xchg
jl
in
mov
mov
and
sbb
push
mov
dec
pop
arpl
xchg
cmpsl
pop
lock
inc
cmp
jmp
inc
lock
loopne
in
push
call
adc
xor
imul
xchg
pop
pop
push
lea
mov
mov
cmpsb
mov
fistl
cmp
jnp
sub
push
sahf
jl
mov
cld
lds
loopne
adc
psubd
je
out
add
negb
sahf
daa
rclb
xor
iret
xlat
addr16
inc
stc
mov
sub
or
sub
mov
ss
insl
addr16
stc
loopne
jmp
loop
mov
cltd
inc
ret
inc
push
dec
clc
xchg
fidivs
xchg
lds
mov
mov
loopne
push
sub
sbb
cmpsb
dec
adc
mov
push
pop
stc
mov
cmp
jmp
cmpsl
and
push
lcall
inc
mov
mov
mov
stc
nop
cmpsl
push
out
dec
cmp
xor
ss
jnp
push
lahf
mov
sbb
inc
pop
rcrb
sbb
test
lea
adc
mov
pusha
repnz
sub
repnz
push
ljmp
cmp
fiadds
jmp
and
icebp
add
test
xchg
cmp
and
repz
jae
sahf
jmp
nop
fwait
lcall
mov
mov
push
mov
mov
and
mov
aas
leave
ds
inc
mov
sub
aad
sub
xorb
outsb
sbb
lea
mov
cld
mov
sbb
mov
pop
add
jge
sbb
addr16
sub
sub
and
xchg
stos
into
mov
dec
sahf
cmp
and
mov
icebp
mov
int3
shll
adc
movups
movsl
push
mov
mov
mov
push
jle
jns
out
sbb
enter
pop
aaa
lahf
mov
cmpsl
stos
lods
mov
adc
push
or
test
notb
jl
jp
inc
loope
loope
cmp
popf
xchg
loope
add
push
in
push
push
push
dec
iret
loope
cmp
sub
dec
and
lret
add
sbb
rol
jbe
inc
aaa
cmp
rcll
pop
or
inc
xor
xchg
popa
push
es
outsb
ret
sub
out
clc
ss
outsl
dec
push
adc
mov
jns
sub
mul
dec
mov
mov
push
push
aaa
or
sbb
jp
insb
cld
jle
adc
add
push
lds
lret
fchs
jle
movsl
fs
stc
jmp
das
xor
outsl
xlat
xchg
xchg
push
in
inc
out
lock
and
jge
js
stc
jae
loop
xor
jge
ficoms
lods
sub
hlt
pop
ffreep
and
pop
ds
xor
popa
mov
mov
icebp
push
mov
jbe
sbb
xchg
add
int3
fwait
ljmp
mov
push
sti
sub
fwait
ljmp
movsb
pushf
add
xchg
aam
cmpsl
aad
lds
pusha
adc
inc
jg
in
jl
pop
iret
dec
sbb
mov
inc
scas
insb
leave
pop
repnz
in
loop
je
push
stos
fstpl
inc
cmp
lods
mov
mov
dec
jnp
mov
mov
and
ds
dec
jne
jo
jg
cmp
xor
cwtl
out
cli
xor
push
cmp
mov
xor
push
scas
shrb
call
sub
cmc
int
fnsetpm(287
or
shrb
and
xchg
mov
repnz
je
and
fs
mov
popf
dec
arpl
test
adc
or
mov
aad
push
lods
sub
mov
fmul
mov
jne
adc
mov
mov
pop
push
sub
push
mov
icebp
enter
and
into
xchg
mov
jle
add
cld
add
lock
out
pop
lock
into
inc
adc
or
clc
or
ret
inc
dec
ret
xor
scas
or
adc
rcl
div
loopne
pop
push
mov
mov
idiv
or
int3
push
push
in
xor
insl
ror
sub
shrb
pop
iret
sbb
icebp
xlat
sub
iret
dec
pushf
cs
xchg
into
cmpsb
movsb
mov
and
out
dec
xchg
or
out
pop
int3
mov
dec
or
test
mov
rcll
repnz
movsb
cwtl
lds
cmc
je
push
mov
adc
sub
pop
cmp
cmp
leave
or
nop
shrb
mov
pop
mov
ret
pop
xchg
cmp
xor
sar
out
cltd
inc
add
mov
lahf
das
inc
in
ss
pusha
push
lock
add
fnclex
lcall
into
fsubr
ret
xchg
adc
xor
mov
xor
inc
or
fs
sub
int
into
ret
adc
sti
add
pop
int
inc
in
push
dec
cmpsl
mov
pop
divl
mov
dec
pop
pop
xlat
mov
or
push
mov
shl
cmp
inc
nop
aaa
sub
dec
mov
add
jo
lret
xlat
popw
ja
stos
jecxz
adc
hlt
mov
push
lea
lea
mov
shl
pop
and
or
int3
mov
mov
cmp
or
sub
or
adc
insb
or
ret
xor
push
mov
mov
cmp
adc
push
jp
dec
xchg
jo
sbb
dec
cld
xor
push
lret
xchg
add
pop
pop
push
lret
sub
fmulp
push
xor
enter
pop
mov
sub
cltd
mov
and
std
leave
jo
mov
fsubr
int
scas
or
fdivrs
daa
call
jnp
idivl
push
cmp
inc
fidivrl
leave
push
dec
test
sub
mov
das
add
pushf
xchg
shrb
subb
scas
dec
add
pop
mov
fsubl
pop
push
sbb
and
sub
movl
push
adcb
sarl
sar
push
cmp
cmp
cmp
dec
and
xchg
int
mov
outsl
sbb
stos
stc
and
hlt
push
pop
jge
pop
and
aam
adc
mov
clc
and
adc
push
fcomps
repnz
dec
mov
into
and
test
imul
xlat
insl
fiaddl
mov
pop
ja
push
clc
daa
stc
iret
and
enter
push
call
iretw
xchg
ss
xor
jmp
cli
lods
jne
hlt
ret
and
aaa
loop
xor
insl
sbb
xor
ds
js
popl
mov
mov
inc
out
pop
mov
ret
jg
mov
mov
fists
xchg
jns
mov
adcl
popa
sbb
mov
adc
dec
es
or
movsl
jb
mov
and
jmp
lods
sub
sahf
lods
movsl
iret
out
cs
inc
cmp
roll
xchg
add
and
sub
push
mulb
imul
inc
mov
lcall
sahf
fwait
inc
mov
add
addr16
push
jnp
mov
enter
scas
sti
mov
push
sbb
arpl
in
mov
jmp
adc
test
cmp
pop
sahf
lret
loopne
inc
push
or
or
pop
test
das
mov
mov
sbb
jbe
jecxz
jmp
pop
sahf
jle
jmp
imul
fwait
das
mov
pop
add
add
roll
jmp
xor
jge
add
das
shrb
in
enter
dec
mov
adc
cltd
add
arpl
test
hlt
inc
pop
test
lea
xlat
sbb
jle
push
dec
sub
push
mov
inc
lea
hlt
lret
xchg
leave
imul
xor
cmp
sti
sbb
sub
roll
iret
fcmovne
push
jmp
mov
rcrb
mov
stos
mov
outsl
in
fadd
mov
cmp
fdivr
and
xor
lcall
jne
sti
repz
xor
aam
int3
xor
sub
push
mov
outsb
out
aaa
cld
icebp
sbb
addb
push
icebp
movsb
movsb
repnz
scas
push
hlt
and
adc
fstpl
int3
aaa
add
or
gs
sahf
fwait
mov
ja
add
adc
adc
pop
rcrl
test
test
in
jne
and
jl
add
and
lret
pop
stos
imul
mov
xchg
inc
ret
sbb
in
aam
fcomps
cmp
ja
fs
sahf
jb
pop
imull
or
mov
gs
jns
mov
out
jno
movsb
add
repz
jae
add
loope
cmp
call
mov
dec
mov
xchg
adc
fcmovbe
inc
mov
and
ss
sahf
lret
xor
pop
dec
cmp
iret
mov
mov
xor
xchg
jne
std
mov
xorl
dec
inc
push
cli
lds
inc
enter
into
enter
xchg
mov
outsb
inc
jmp
das
inc
mov
fadd
loopne
xor
jle
xchg
movsl
jge
icebp
sub
cmp
jb
js
or
pop
ja
gs
push
xchg
cmp
cld
adc
stos
adc
sub
sub
jbe
or
rcrb
dec
orb
int3
lock
mov
sahf
mov
scas
xor
aas
lret
jo
or
test
and
xor
out
into
call
pop
mov
jecxz
cmp
popa
or
add
xor
add
inc
cld
xchg
lods
inc
sbb
clc
dec
xor
jmp
arpl
jnp
pop
lods
imul
pop
push
mov
push
mov
push
das
inc
sub
jns
cmpsb
cmp
stos
mov
xchg
ficomps
mov
aaa
mov
clc
jo
mov
sti
xlat
out
ss
call
pop
mov
fnstenv
pusha
adc
aas
pop
mov
pop
test
dec
std
cltd
pop
push
sub
dec
cmp
int3
mov
pop
mov
and
or
fbld
jae
fwait
imulb
pushf
pop
rcrb
add
mov
inc
insb
lret
cli
push
mov
or
inc
movsl
pop
jbe
insb
out
and
and
out
test
jns
jl
cwtl
loop
outsb
mov
xchg
jecxz
cmpsl
sub
repz
jo
lods
daa
sbb
jb
insb
fcomps
cmc
xor
adc
and
xlat
or
decl
dec
movsl
jno
je
test
mov
cmpb
es
and
je
push
loope
js
arpl
loope
leave
jg
fisttps
adc
int3
sub
jmp
popa
cmp
mov
icebp
int
cwtl
out
cmp
pop
sbb
pop
jo
movsl
pop
jl
fistpl
inc
xor
nop
hlt
pop
jo
mov
and
dec
int3
je
lret
sub
adc
inc
aas
sbb
fmuls
imul
xchg
ds
adc
push
test
and
or
cs
xor
mul
int3
out
xor
push
mov
popf
ret
xor
movsb
add
mov
xor
repz
aad
jnp
pop
int
inc
loopne
push
loope
or
mov
inc
aad
xchg
fs
rclb
inc
inc
adc
hlt
and
jne
or
jne
lret
xchg
test
dec
pop
mov
mov
and
shlb
or
fsubs
and
jnp
rcrb
cld
push
add
ljmp
out
not
mov
dec
outsb
imul
aad
pop
call
jo
mov
ja
jnp
push
xor
test
adcb
push
and
jle
loopne
sbb
pop
push
imul
push
cmp
jecxz
sbb
cmp
jbe
mov
lret
ret
rcr
jg
inc
pushf
jns
mov
aad
dec
ljmp
data16
out
sub
das
push
testb
movsl
or
sbb
outsl
setl
xchg
notb
add
mov
mov
mov
or
hlt
push
mov
and
mov
pop
rcrb
in
mov
imul
sbb
pmaxub
pop
sbb
sbb
loope
nopl
test
out
lret
imul
or
add
ja
in
cs
mov
adc
ficompl
jmp
cmp
popa
xchg
inc
jge
int3
stos
or
out
push
add
out
stc
sbb
xchg
and
jne
int
movsl
repz
cltd
mov
mov
addr16
fs
daa
ret
andb
jno
jae
jns
loopne
sbb
mov
repz
mov
out
fsts
push
incl
and
adc
stos
jns
rclb
das
gs
jmp
adc
or
bound
mov
hlt
jge
xor
shrb
loopne
enter
dec
outsb
pusha
inc
and
cmpl
in
fistl
adc
xor
fisubrs
pop
inc
add
xor
cmp
inc
in
test
lret
cwtl
in
lea
inc
call
xchg
fucomi
and
fdivrs
fwait
lods
and
cmpsb
inc
xor
jb
and
ss
jp
push
aad
push
mov
data16
into
mov
mov
push
xchg
sub
xchg
sbb
ja
stos
popf
in
dec
mov
sub
add
mov
adc
in
ds
pop
jnp
push
and
mov
mov
cmp
aam
push
popf
jo
cmpb
jbe
ret
repz
out
dec
lret
icebp
push
xchg
dec
pop
dec
push
jns
out
add
xchg
sbb
push
push
sbb
lret
and
test
jecxz
xchg
xchg
popa
outsl
mov
mov
dec
push
sbb
cmp
iret
cmp
dec
push
aas
inc
xor
push
aam
rol
inc
cmpsl
push
inc
scas
xchg
int3
clc
mov
daa
or
inc
jo
idiv
or
in
divl
xor
jmp
fbld
lea
mov
push
mov
lahf
xor
lea
imul
add
cs
aas
hlt
arpl
jl
or
lret
push
pusha
popf
pop
aad
lret
and
data16
arpl
mov
lret
incl
add
pop
int3
adcb
cmp
jne
lods
fbld
rorl
push
imul
cmpsl
adc
inc
mov
arpl
stc
dec
xchg
mov
lods
lds
into
sbb
movsb
out
mov
pusha
mov
sub
push
or
mov
mov
add
daa
mov
lea
add
mov
iret
leave
mov
sub
push
sbb
cmp
jp
cld
or
arpl
shrl
mov
loop
nop
sbb
pop
xor
push
cs
mov
nop
sub
mov
stc
xor
repz
lret
push
jg
xchg
cli
xorb
sub
cmpb
sbb
scas
ja
cld
xor
mov
int
lret
movsb
pop
stc
fmuls
lods
jg
pop
add
mov
mov
mov
je
hlt
ds
sbb
push
scas
repnz
jecxz
sub
icebp
movnti
xchg
adc
pop
je
rclb
and
in
dec
xlat
xor
outsl
sbb
out
xchg
mov
rclb
pop
sbb
mov
sahf
xchg
pushf
xchg
lods
mov
stc
jmp
ret
std
gs
ja
sub
sbb
mov
inc
jle
mov
dec
loopne
mov
aad
adc
push
sub
pushw
mov
cmpsl
pop
divl
jnp
mov
pop
cltd
scas
sahf
dec
lret
push
lcall
cmc
sub
mov
test
or
hlt
sbb
iret
sbb
sti
pop
xchg
nop
mov
out
mov
sub
mov
sbb
mov
addr16
aaa
clc
lret
jmp
scas
out
add
jb
es
inc
test
inc
dec
or
data16
push
mov
mov
cli
popa
in
xor
fsubr
dec
and
pop
into
push
push
ss
lret
aad
dec
sarl
sbb
sbb
outsb
pop
mov
and
hlt
inc
mov
popf
add
and
sub
jp
in
add
insb
in
popa
xor
into
stos
lcall
sahf
cmp
inc
and
xor
in
push
pop
mov
sub
lcall
repz
fisttps
mov
cmp
popf
cmp
and
rolb
sbb
pop
cmp
mov
in
jno
movsl
fisubrl
adc
xor
lods
int3
je
inc
dec
dec
mov
and
inc
mov
jge
mov
incb
ficomps
ret
repnz
dec
lcall
cmp
mull
xchg
lret
lret
jb
xor
imul
xor
popf
loop
inc
bound
mov
mov
mov
pop
jp
aam
sub
cmp
jae
push
stos
dec
xchg
inc
int3
add
movsb
test
ljmp
pushf
pushf
loop
loope
lods
push
daa
dec
push
addb
xchg
pop
arpl
cmp
shll
xlat
push
cmp
das
test
lret
or
mov
enter
push
cmp
pop
mov
fld
jle
inc
add
or
repz
cmp
dec
dec
mov
xor
mov
inc
and
mov
mov
aad
xchg
mov
mov
ja
notl
sti
jge
aas
addl
xor
add
stc
pop
sahf
movsl
and
cli
mov
sub
outsl
shll
and
pop
xchg
inc
iret
push
popf
popa
fdivrl
lret
sbb
jae
and
mov
and
push
jae
jbe
repnz
cmp
negl
xor
rcr
js
push
inc
sti
or
sbb
mov
jp
push
out
mov
je
test
flds
or
loopne
ficoml
sbb
xor
pop
sub
and
add
lret
fidivrs
insb
mov
loopne
and
rorl
inc
bound
xor
shrl
pop
call
es
jns
inc
mov
into
inc
adc
fisubrs
out
je
lret
aad
aas
lea
in
aas
pop
ss
ljmp
mov
xchg
insb
pop
sbb
call
fisttpl
mov
mov
adc
adc
pop
test
pop
insl
dec
cmp
test
movsb
aaa
sbb
test
repz
xchg
movsl
cmpsl
xlat
fucomp
dec
push
cmp
gs
std
pop
jmp
jo
jno
loope
icebp
inc
sbb
inc
std
and
sahf
mov
call
cmp
ljmp
ret
fldl
mov
inc
roll
sbb
insb
xor
sarl
fwait
jp
aas
mov
fwait
xor
dec
mov
sahf
adc
pusha
mov
inc
dec
repz
xchg
pop
and
es
adcl
cmc
pop
in
jae
sarb
and
lahf
cs
outsb
push
ljmp
adc
and
jo
lods
add
inc
mov
ret
push
mull
dec
ret
lret
sub
shr
mov
pop
mov
cli
mov
test
jb
or
or
adc
xchg
call
sarb
mov
mov
icebp
lret
iret
mov
push
mov
and
popf
mov
xor
jns
dec
mov
je
pop
cltd
mov
ss
pushf
arpl
nop
arpl
aas
mov
jp
add
iret
add
mov
and
stos
cld
xchg
shl
test
push
fcomip
in
mov
fwait
push
outsl
shrl
add
and
push
ret
jae
aam
das
jno
mov
or
arpl
mov
sahf
mov
jg
int3
mov
jge
popf
add
cmp
das
je
sbb
add
popf
lret
fwait
in
push
and
shl
adc
sub
mov
in
sub
mov
adc
loope
xchg
jne
adc
xchg
mov
mov
cmp
mov
xchg
in
mov
jo
mov
cmpsl
jb
xchg
js
nop
mov
mov
dec
jge
xor
not
std
push
dec
insl
out
inc
push
movb
xor
stc
lods
add
sub
aam
popa
jae
jle
push
imul
add
push
aaa
or
sbb
ror
int
insl
jns
push
clc
mov
popa
inc
mov
out
insb
jmp
cs
call
mov
ss
cs
cmp
pop
int3
or
adc
bound
nop
push
cmp
adc
es
mov
push
icebp
inc
push
push
jle
cmp
fwait
jp
rcll
pop
mov
push
ret
cmc
dec
insl
test
fidivrl
add
cmp
sbb
addr16
inc
dec
lods
mov
dec
aas
enter
inc
mov
fsubrp
pop
movsl
xchg
js
outsl
xor
outsb
mov
mov
std
jns
insl
adc
sub
iret
movsb
sub
add
push
stos
sbb
push
shrb
clc
pop
idivb
push
sub
mov
sarb
enter
lods
std
xchg
pushf
fisubs
int3
addr16
pop
jb
call
cmc
and
sbbb
dec
ds
or
cmpsb
repz
adcl
fwait
sbb
xor
ljmp
jo
mov
test
push
outsl
mov
pop
fisubs
push
sbbl
rcrb
push
aaa
xor
xor
pop
test
push
and
mov
cli
cld
shrl
jne
outsb
add
repz
xor
or
adc
jno
stos
push
popf
cmp
fadds
xor
into
fmuls
out
pop
mov
pop
pusha
jb
test
int
xchg
movsb
in
cld
insb
xor
ds
fs
push
ficomps
es
mov
fists
sbb
sahf
xor
incl
xor
adc
icebp
and
scas
bound
sub
fbstp
inc
mov
adc
scas
test
nop
popf
hlt
xchg
lea
jle
or
mov
add
and
jae
jmp
dec
xchg
mov
push
push
mov
add
call
jne
and
jo
cltd
push
jb
movsb
mov
mov
iret
sub
pop
lcall
lcall
fwait
pusha
scas
sub
aam
pop
pusha
inc
out
pop
sahf
daa
lock
dec
sbb
cmp
ror
jns
or
rclb
jne
leave
sarl
pusha
and
test
or
imul
je
jns
and
rorb
mov
mov
outsb
imul
add
xchg
mov
clc
dec
insb
icebp
mov
or
loope
out
fisttpll
and
std
dec
out
pop
les
and
mov
lret
cmp
xlat
repz
mov
xor
push
dec
in
push
dec
shll
mov
dec
add
push
mov
xor
sbb
xchg
xchg
inc
push
add
in
pop
andl
mov
xchg
icebp
and
test
roll
aas
xor
or
std
in
pop
lock
addr16
dec
mov
sub
or
xchg
push
popf
fsubl
xor
aaa
jge
xor
mov
ret
and
jle
push
add
pop
mov
lea
inc
or
jae
adc
jae
cld
pop
aas
hlt
inc
add
out
out
sub
jp
push
mov
xor
or
enter
sub
dec
loopne
pop
test
push
xor
mov
sub
les
dec
inc
sbb
dec
outsb
mov
xchg
fcoms
jno
aas
mov
test
fnstenv
das
jo
pop
adc
push
aaa
sti
pop
mov
xor
scas
insb
xchg
dec
mov
push
adc
outsb
daa
lret
xor
enter
int
mov
rcr
cli
and
jl
out
add
shlb
clc
fadd
mov
xchg
leave
bound
fadd
xchg
add
popf
pop
call
push
push
inc
adc
push
aas
mov
fistpll
push
jmp
outsb
sub
lods
leave
adc
shlb
shll
xor
invd
loope
xchg
inc
push
stos
int3
adc
iret
cli
punpcklbw
popa
sti
dec
stc
push
fcmovnu
jecxz
arpl
adc
inc
scas
or
pop
pop
mov
int
mov
ret
push
mov
pop
mov
adc
and
push
out
pop
jno
stc
adcl
mov
mov
cld
push
lods
pop
pop
push
imul
scas
lods
stos
push
nop
cs
xchg
fucom
lods
in
in
ds
std
dec
add
xor
and
mov
or
dec
mov
mov
dec
or
loope
or
pop
pusha
mov
or
cmpb
test
adc
add
xor
pop
mov
dec
pop
or
mov
cmp
insl
mov
ljmp
xchg
xor
inc
push
mov
and
into
cmp
or
mov
sub
inc
sbb
xchg
iret
ficomps
scas
xor
test
xchg
adcb
dec
hlt
aas
loopne
insl
cmp
jmp
leave
xchg
jmp
daa
daa
loope
or
sbb
and
imul
pop
sbb
mov
jno
jns
sbb
aad
nop
iret
addr16
xchg
scas
nop
lea
nop
jl
pop
cmp
inc
mov
inc
dec
pop
jae
add
jbe
push
cmpsl
inc
mov
mov
sbb
pop
lret
movsb
inc
cmp
mov
andl
xor
lret
aaa
hlt
xlat
lods
cmp
data16
lahf
addr16
cmc
cmpsl
scas
jnp
ror
mov
enter
inc
int3
adc
xorb
xchg
adc
mov
pop
mov
inc
rorl
jl
clc
and
mov
push
test
subb
mov
xchg
mov
inc
push
dec
pop
push
mov
cmc
popf
shll
jns
cmp
lcall
shl
icebp
and
sbb
lods
jle
pop
inc
xlat
ficoms
adc
mov
gs
and
add
les
sbb
jns
iret
adc
mull
shlb
push
sti
imul
xor
add
xlat
pop
js
mov
xor
fs
fucomp
call
mov
jp
sti
pop
aas
mov
pop
pop
mov
ljmp
icebp
mov
das
mov
ds
hlt
cmp
sbb
out
fistl
pushf
inc
sbb
test
mov
rol
and
sbb
xchg
insl
addl
mov
sbb
add
lcall
cmp
sarl
int3
jge
les
push
and
jnp
loopne
rclb
fwait
jl
xor
adc
mov
outsl
fbld
mov
mov
leave
or
push
mov
repnz
cmp
icebp
hlt
xchg
insl
clc
inc
and
hlt
push
and
jle
lahf
push
adc
or
mov
sub
xchg
mov
jecxz
mov
rolb
enter
add
adc
push
jmp
gs
dec
loope
inc
movb
aad
jb
mov
mov
mov
pop
icebp
xchg
mov
pop
xchg
decb
or
jno
mov
frstor
or
fs
push
loope
jno
das
loopne
int3
out
pop
xchg
pop
push
pop
xchg
outsl
and
push
pusha
loope
pop
imul
popf
and
insb
fnclex
arpl
pop
add
into
lods
fistps
xchg
out
mov
insb
xor
pop
push
lock
out
fbld
pop
pop
inc
mov
pop
aaa
push
pop
pop
jb
lahf
mov
cmc
mov
adc
adc
cli
inc
sbb
test
mov
arpl
dec
cltd
testl
lret
cmp
mov
loopne
jno
jo
push
and
push
xor
mov
mov
push
rcrl
pop
push
js
jmp
sub
pushf
pop
lds
ljmp
fistl
xor
mov
shrb
cmp
push
push
rcr
jns
mov
dec
inc
dec
jl
xchg
js
jno
and
arpl
mov
insl
das
pop
dec
xorl
mov
cmp
out
sub
mov
mov
loop
jmp
adc
sbb
pop
sbb
xchg
ljmp
mov
ror
lcall
add
imul
lret
xlat
jb
jmp
or
sbb
adc
call
mov
cld
jnp
sbb
insb
mov
es
jecxz
mov
xor
inc
jns
ret
push
aaa
mov
ljmp
add
hlt
dec
ja
gs
cmp
cmp
out
outsb
pop
mov
dec
pushf
pop
fs
or
aam
cmp
les
or
pop
sbb
cmp
rclb
pusha
fucomip
mov
daa
mov
testl
mov
sbb
pop
ss
inc
sub
sbb
push
jg
push
jg
cmpsl
stos
in
popa
pop
cmpsl
fst
movsb
cmp
mov
dec
jl
cmp
push
stos
dec
sti
ja
jbe
dec
cmpl
xchg
sbb
mov
cmp
stos
stc
xor
sbb
pop
in
outsb
fdivp
call
mov
cld
fs
inc
pop
xchg
test
movsl
or
in
icebp
aaa
outsl
push
cld
add
lea
and
push
shlb
and
mov
call
sbb
je
and
les
lods
add
das
test
out
sub
sub
xchg
in
add
loopne
xchg
xlat
aam
pusha
mov
repz
and
dec
sub
inc
adc
jl
mov
sub
xor
stos
jnp
jae
out
shl
push
xchg
push
pop
mov
sbb
in
push
xchg
js
or
sbb
in
out
push
mov
or
xchg
cmpsb
sbb
sbb
adc
dec
mov
lea
cwtl
ret
sub
shr
lods
das
inc
or
pusha
pop
ds
pop
jp
inc
jmp
test
iret
jno
sub
int3
adc
sbb
cmp
cmp
push
idiv
mov
fiadds
or
push
pop
iret
sub
shlb
sub
sub
push
inc
jb
fisttps
imul
fbld
cmpl
stos
fmull
fnsave
scas
jnp
mov
imul
std
in
sbb
arpl
popf
daa
xchg
cmp
enter
shll
nop
outsb
lods
xor
out
mov
int3
or
sbb
push
adc
xchg
jne
aas
int3
pop
push
cmpsb
sub
jmp
adc
int3
pop
out
jmp
or
or
je
int
rorl
sbb
jnp
repz
loopne
mov
push
shlb
jno
test
push
mov
lcall
icebp
sub
jmp
mov
fistps
orl
mov
repnz
ss
add
out
pusha
or
fimull
paddb
mov
out
push
xor
addr16
inc
xor
add
lcall
inc
xor
or
das
or
mov
int
pop
cmp
cli
lret
xor
and
arpl
jmp
pop
in
xchg
je
cwtl
into
sbb
js
loop
mov
mov
in
lcall
add
ja
out
push
es
cld
notl
jns
jb
pop
stos
mov
es
or
xchg
xchg
test
stos
jbe
dec
mov
jns
push
sbb
cmp
jge
mov
xchg
mov
mov
cmp
pop
mov
mov
aad
cmp
mov
jae
inc
xor
sbb
sbb
int3
cld
and
mov
negb
movsl
xchg
dec
push
leave
test
insb
insl
insb
sub
xor
mov
and
adc
jns
out
insb
imul
jle
dec
push
cmpsl
add
dec
popf
lahf
shll
repnz
mov
lds
fimuls
mov
jp
inc
lds
sti
mov
popa
adc
sbb
jb
mov
and
push
aam
scas
jl
jo
orb
dec
fwait
fwait
aas
push
lret
xor
subl
sahf
movsl
clc
movsl
data16
aas
jecxz
jg
adc
popf
or
xchg
sub
fisubrl
in
sub
shll
inc
push
jg
in
ss
sub
fnstcw
pop
xchg
outsl
sub
pushf
push
adc
sti
mov
mov
or
ficoml
arpl
lret
sbb
imul
imul
or
nop
add
stos
icebp
add
insl
ffree
push
or
js
scas
jmp
int
xchg
and
cmp
cmp
jecxz
mov
popf
lock
sbb
cmp
leave
fwait
and
test
arpl
dec
subps
cmp
je
pop
jge
jae
lea
push
pop
sub
and
mov
ficompl
lea
push
cmp
fsubrs
adc
inc
sub
outsb
test
icebp
adc
add
adc
mov
dec
xchg
mov
cmp
push
inc
pop
sub
addr16
push
pop
jo
sbb
xchg
xchg
shrb
out
pop
popf
cltd
adc
mov
fwait
push
mov
shll
test
jno
or
cmc
add
imul
add
xor
sbb
lock
std
mov
xchg
mov
insb
mov
sahf
lcall
xor
ror
jle
out
shll
cmp
nop
jbe
scas
sarb
fldt
or
push
in
cmpsl
push
push
pop
jo
sti
lock
into
aad
fidivl
daa
adc
rcr
aad
adc
orb
mov
out
xchg
mov
and
mov
arpl
xchg
sbb
cli
or
sbb
xor
inc
sub
aad
push
inc
jo
ret
fstpl
stos
icebp
lret
std
dec
aam
mov
dec
inc
shlb
and
xchg
sti
cmp
push
call
decl
sarb
push
cmpsl
mov
dec
cmp
mov
outsb
fcmovbe
pushf
push
xor
in
lock
xchg
icebp
adc
cli
cmpsl
lds
dec
cmp
sbb
test
mov
insb
pop
pop
arpl
popa
stc
jecxz
je
xchg
clc
jg
jb
cmc
loopne
push
rorl
test
sbb
or
jg
jbe
dec
xor
jo
dec
sahf
nop
xor
jmp
mov
push
loop
insb
jmp
filds
xchg
xchg
sarl
inc
ss
insl
mov
pop
or
test
xchg
mov
push
cltd
test
ds
mov
cs
movsb
add
inc
mov
adc
stc
aas
sar
rorl
xor
bndldx
addr16
xchg
inc
adc
xchg
enter
in
jecxz
add
cld
cmp
es
inc
sbb
iret
pop
xchg
es
icebp
out
mov
sub
jmp
dec
movsb
dec
or
mov
cltd
sub
mov
xlat
out
fiadds
lods
pop
and
cwtl
fimuls
xor
call
jmp
aas
popl
pop
cmp
je
sbb
sbb
inc
fildl
insb
stos
dec
faddp
lea
fisubrs
aam
add
cmc
pop
mov
or
or
mov
stos
jo
test
insl
and
mov
ret
xchg
mov
sbb
jne
les
push
addr16
adcb
fsubrs
sub
fadds
inc
and
inc
ret
mov
mov
or
mov
lahf
push
out
jb
scas
enter
push
cmp
pop
push
add
call
xor
mov
xor
test
scas
inc
or
subl
out
xor
pusha
inc
push
sbb
sbb
loopne
ret
push
jmp
inc
push
neg
sti
push
jae
xchg
push
cli
clc
jo
mov
fmull
aam
mov
mov
or
mov
sti
pop
xor
dec
rcrb
enter
inc
push
js
mov
sub
push
and
lret
sbb
clc
movsl
xlat
enter
mov
pop
push
cmp
mov
jbe
mov
roll
rclb
sub
pop
lds
repnz
in
pushl
les
mov
cmp
mov
mov
pop
mov
push
adc
inc
dec
arpl
into
cmp
pop
and
cwtl
mov
dec
sub
pusha
bnd
into
or
mov
in
jno
xchg
or
or
xor
and
int
sbb
andl
shll
add
aas
jle
dec
push
add
xchg
cmp
je
cmp
xor
cmpsb
retw
stos
add
inc
mov
mov
xchg
dec
inc
in
loopne
xorb
cmp
cmp
mov
xor
or
or
insb
es
loope
nop
or
popf
inc
out
and
lret
mov
mov
add
fs
movsl
add
push
outsb
dec
mov
xor
js
cld
out
xchg
jb
cmpsl
shll
aam
gs
je
aaa
sub
fwait
out
mov
or
sub
testl
cmp
aam
sbb
inc
daa
lret
push
lret
xchg
shrb
xrelease
xor
add
int3
cmp
dec
andl
jae
aaa
adc
shl
adc
pop
mov
xchg
mov
push
cs
loopne
rol
push
lock
jmp
cmpsb
loopne
cmp
lods
xchg
js
mov
test
push
cwtl
push
dec
inc
adc
pop
sub
ret
cmc
xorb
jecxz
rorb
cltd
outsl
leave
adc
mov
dec
cmpsl
stc
dec
ret
lods
mov
mov
test
jbe
int
out
bound
fcom
ror
xchg
das
dec
jmp
popf
mov
popa
aas
or
mov
stc
in
push
xchg
cmp
jb
aaa
cmp
add
push
fisubrs
jge
dec
in
xchg
lret
jne
pop
loope
sub
fiadds
lret
loope
mov
in
jecxz
arpl
fadds
int
adc
jns
mov
fisttpll
out
jge
test
xchg
fmull
aad
cmp
cwtl
imul
and
xchg
jl
lds
and
imul
pop
inc
enter
mov
movsb
push
ljmp
aaa
or
lret
jbe
or
pop
push
push
in
xacquire
fcoml
repz
out
lea
pusha
orl
mov
dec
sar
jbe
sub
testb
xchg
cli
mov
dec
sbb
lock
fdivrl
out
dec
sub
and
mov
hlt
xchg
popf
test
add
rcrb
mov
mov
cmp
leave
jle
clc
sbb
xchg
push
xor
lcall
stc
mov
dec
xor
mov
outsl
jne
mov
addb
repz
lret
ret
pop
add
push
inc
nop
pop
bound
lea
pop
mov
mov
xor
jne
cltd
pop
fnstenv
test
and
aam
dec
out
pop
add
xor
scas
mov
mov
sbb
or
mov
cmp
enter
aad
xlat
aad
movsl
rol
push
mov
mov
sbb
lods
jnp
fsubrl
and
inc
scas
js
and
inc
mov
jno
stos
dec
xchg
popa
sub
and
stos
xchg
and
pop
sahf
inc
pushf
and
add
jae
sahf
xchg
mov
push
cld
rcrb
sti
rclb
cmp
imul
mov
mov
ljmp
icebp
push
daa
push
cmp
adcl
sar
push
call
sub
cli
das
addl
xchg
and
ja
mov
mov
pop
bound
sbb
ljmp
cmpsl
lcall
push
fisubl
sub
ret
out
aam
jecxz
jecxz
cmp
adc
sub
adc
movsb
and
adc
sub
inc
mov
aas
push
or
gs
add
in
cmpsl
nop
shll
stos
sub
add
out
xor
cmp
push
cli
cwtl
test
jne
je
jp
inc
jg
in
repnz
jle
inc
jecxz
psadbw
test
stc
imul
insb
pop
call
popf
movsl
js
push
mov
add
sub
jp
mov
add
or
sbb
mov
jecxz
imulb
jno
or
sub
loope
lock
repz
xchg
mov
push
repnz
fstl
sbb
hlt
push
icebp
cli
lahf
mov
out
gs
call
lcall
sub
lahf
out
mov
int
mov
push
push
pop
mov
mov
fcoml
adc
test
stos
outsb
fnstsw
mov
mov
popl
mov
cld
aad
out
mov
sbb
out
xchg
jp
add
xor
lock
cmp
mov
roll
mov
jbe
out
aam
dec
cmp
scas
push
add
mov
fdivs
adc
sbb
in
mov
mov
loopne
sarb
mov
in
in
stos
and
xchg
scas
push
add
lret
cmc
cltd
pop
or
ja
mov
je
jno
inc
lods
xor
add
adcb
je
call
fldt
iret
push
and
jbe
xor
pop
imul
ja
xor
inc
repz
adc
add
xchg
js
fstl
xchg
xor
adc
sub
jne
add
scas
pusha
out
add
sarl
xchg
mov
cmpsl
aas
jmp
scas
dec
bound
rolb
repz
add
test
cwtl
mov
insl
jecxz
cmp
div
add
clc
mov
movsl
jle
mov
push
roll
mov
inc
fidivl
xchg
dec
cmp
fistl
fucomi
int
cwtl
xorl
cli
fiadds
cli
dec
mov
jmp
in
movsl
pop
fistpll
push
stos
test
lcall
dec
call
pop
iret
inc
mov
and
ret
push
xchg
std
push
lahf
and
jmp
mov
repnz
dec
add
jne
in
pop
in
and
xchg
fidivrs
push
call
mov
jg
ret
xor
lds
pushw
vmovups
mov
cmp
test
pop
stos
jnp
jmp
into
sbb
enter
popf
sub
xor
int
jg
loope
pushf
lret
icebp
fcoms
push
imul
lock
rclb
aaa
sub
xchg
xor
outsb
dec
mov
in
jecxz
push
int
sub
push
sbb
test
and
aad
loop
out
in
aam
mov
dec
pop
ficoms
sub
lods
ss
outsl
xor
into
pushf
dec
push
xchg
jne
fildl
imul
rcl
mov
add
clc
jae
jo
xchg
push
or
imul
dec
mov
call
aaa
mov
rcr
and
ds
in
inc
aad
subb
mov
shlb
xchg
cmp
call
rcrb
lret
push
icebp
xchg
pop
xchg
and
fisubrs
or
sub
and
fisttpl
arpl
fdivrp
in
xchg
in
cmp
push
lods
call
pop
movsl
xchg
rcrl
int
lods
jg
sbb
mov
sub
lcall
jae
sbb
test
xchg
mov
repz
push
pushf
adc
mov
jo
cmp
in
sahf
out
in
sbb
push
adc
loop
pop
push
test
andl
jbe
push
out
push
mov
sarl
sar
aas
mov
or
in
dec
inc
push
shll
xchg
cmpsb
notb
cmp
out
sub
xchg
mov
mov
rclb
xchg
cmpsb
mov
daa
dec
testl
xchg
or
push
lods
jb
ss
shll
jae
jne
lds
sub
push
push
lret
addr16
mov
aam
push
push
push
and
fmulp
mov
fwait
inc
sub
push
mov
cmpsb
rcll
bound
lock
and
cmpsl
es
xor
adc
xor
mov
dec
lods
outsb
push
mov
arpl
mov
imul
out
xor
mov
cmpsb
jp
ljmp
jge
mov
inc
push
jmp
mov
jbe
mov
lahf
shrl
jp
xor
jb
pop
je
jo
cmp
data16
lods
test
cltd
xchg
je
aad
out
cld
push
jle
ret
xchg
lret
dec
js
incb
pop
in
ret
imul
fcmovnbe
pusha
arpl
xchg
and
push
push
ja
sbb
sub
lods
adc
add
pop
dec
mov
fcompl
adc
adc
xor
sub
push
pop
dec
daa
mov
xor
pop
enter
adc
and
repz
pop
adc
mov
mov
mov
or
pop
jnp
xchg
insl
sti
jge
repz
xchg
xchg
xor
ljmp
inc
shr
add
push
sub
dec
lock
mov
jno
test
or
fisttps
mov
lods
ja
dec
sub
cmp
mov
inc
scas
mov
push
or
pushl
sub
fisttpl
push
push
call
mov
xor
insb
push
cmc
adc
push
jp
pushf
xchg
pop
out
xchg
aad
clc
addb
setb
scas
pop
push
sbb
fdivrl
sbb
mov
pop
and
jne
mov
sub
leave
mov
rolb
loop
push
lret
cli
mov
jmp
xorl
dec
sbb
sar
imul
in
lea
adc
lods
mov
sub
sub
pop
scas
ds
icebp
fcmovnbe
xchg
adc
and
inc
mov
imul
aaa
leave
xchg
mov
outsl
inc
sti
push
xchg
jb
sbb
xchg
popa
pop
xchg
mov
cmc
das
push
pop
mov
xor
cmp
ret
ljmp
test
sub
fcompl
push
xorb
and
ror
cli
int3
into
cmp
inc
pop
cmp
push
dec
and
cld
aad
jbe
test
icebp
add
jne
mov
cmpsl
dec
sbb
jb
incb
cmp
pop
movsb
and
xchg
mov
jnp
leave
xor
dec
mov
scas
push
xchg
fsubr
imul
dec
jne,pt
mov
punpckhdq
pop
xor
add
pusha
lock
jmp
in
xlat
std
leave
stc
add
sbb
mov
sbb
cli
cmpsl
or
adc
arpl
inc
fistpll
mov
in
mov
sub
aaa
mov
scas
outsl
pushf
inc
cwtl
or
or
in
push
and
into
push
icebp
nop
jmp
pop
push
mov
inc
outsb
add
pop
mov
inc
sub
outsb
in
out
loopne
jo
lcall
mov
lods
ja
iret
push
ret
call
testl
jl
mov
loop
je
inc
or
outsl
push
jne
xor
inc
pushf
pop
mov
aad
mov
and
inc
icebp
mov
and
push
xorl
pop
je
cmp
adc
mov
shl
fs
pop
sti
xchg
in
dec
popa
ja
adc
aam
fsubrl
pop
pop
adcb
adc
ljmp
xchg
jbe
push
pop
lahf
jbe
mov
pop
scas
push
dec
sbb
xor
adc
lods
mov
lods
pop
push
xor
stc
hlt
add
xor
mov
adc
fmuls
inc
dec
test
mov
xchg
loope
pop
inc
pushf
push
in
data16
negl
inc
mov
jp
popa
ja
shrb
adc
mov
loope
adc
std
shll
add
pusha
and
fidivrl
fidivl
push
ja
ret
stos
jae
int3
inc
xchg
inc
imul
gs
cmp
mov
jge
adc
popa
adc
sbb
call
pop
dec
dec
xor
imul
and
adc
mov
xchg
lds
jg
fwait
mov
inc
mov
or
mov
sbb
fcmovu
dec
pop
dec
xchg
jmp
into
xor
cmp
dec
scas
jo
adc
cld
inc
cwtl
mov
push
push
push
pushf
mov
mov
sti
push
xorb
adc
sub
mov
je
stos
scas
ret
cli
mov
popa
sub
outsb
pusha
cmp
pop
sbb
shrl
mov
inc
sbb
stos
roll
pop
inc
fsubs
outsb
sub
push
jecxz
sbb
jp
jl
gs
cmc
fcoml
clc
add
add
ficoms
cmpsb
lcall
xchg
in
roll
test
mov
pusha
cwtl
jbe
rorl
daa
imul
fsubl
insl
pop
out
xlat
ds
pop
pop
test
outsb
lahf
shll
daa
xchg
or
xor
xor
cmp
push
inc
in
aas
popf
dec
stc
mov
pop
inc
cmp
dec
out
jg
adc
push
loop
rcrl
mov
jne
xor
lods
addr16
or
stos
pop
and
push
mov
xchg
shll
stc
xlat
mov
pop
pusha
stc
sahf
imul
lock
rolb
cmp
ffreep
lock
in
push
repz
xor
fimuls
pop
decb
leave
add
sub
rcrb
popf
push
jae
sbb
outsl
and
push
es
or
ss
inc
test
test
frstor
and
jge
imul
fmuls
mov
xor
mov
or
hlt
push
out
cmpsl
mov
dec
outsl
pushf
fs
push
fsubs
inc
cmpl
cmp
xchg
xchg
xlat
jle
outsb
push
sbb
repz
and
daa
mov
xchg
pop
inc
xchg
add
movsl
mov
lret
add
fisttpl
sub
imulb
add
push
sbbb
les
or
jg
lcall
adc
outsb
in
clc
sbb
cmpsl
lds
xchg
or
pop
mov
ret
sbb
adc
jo
lret
sbb
push
scas
in
incb
add
pusha
inc
call
lea
mov
mov
jecxz
mov
mov
mov
aam
dec
add
cmp
ja
lret
push
or
fwait
sub
cmc
inc
mov
jae
stos
jl
insl
cmc
mov
hlt
lcall
pop
cwtl
push
imul
sub
jge
inc
add
iret
mov
je
pop
xor
adc
push
or
pop
pusha
and
jae
stos
mov
sbb
mov
mov
fwait
fwait
and
mov
adc
outsl
outsb
mov
sbb
iret
mov
jb
inc
addr16
ss
mov
jl
add
in
js
xchg
loop
jns
test
das
dec
xchg
out
outsl
je
loop
shl
xor
call
in
add
in
dec
or
shlb
xchg
mov
pop
fs
xor
push
loope
and
dec
push
adc
popa
jbe
mov
cmp
daa
and
or
push
cmc
popa
dec
das
fstpt
les
mov
mov
cmpsl
dec
clc
sti
push
data16
movsl
mov
mov
cmpsb
dec
xlat
fcoml
and
mov
and
insl
fistl
adc
leave
je
mov
mov
cmp
sub
insb
nop
jg
lock
shl
aam
movsb
xor
in
push
mulb
mov
in
xor
sub
mov
imul
mov
xor
fsts
cs
cmc
ja
movsb
jmp
ja
test
stos
push
inc
push
xchg
insl
sbb
imul
cmp
idivl
mov
shlb
xchg
mov
out
or
fisttps
std
inc
push
mov
push
cwtl
stc
xchg
call
mov
es
sbb
fwait
sbb
mov
dec
jnp
inc
mov
mov
xor
pop
mov
or
cmp
jecxz
xor
xchg
mov
cltd
enter
inc
or
popf
pop
adc
test
mov
or
daa
cld
stos
or
lods
lret
or
mov
test
lcall
push
test
fadds
cmp
jbe
inc
cmc
xchg
xorl
push
outsb
rsqrtps
and
adc
adc
xchg
xchg
push
outsl
adc
xchg
xor
shll
es
jb
xchg
lcall
adc
aaa
lods
shll
cmp
xor
inc
mov
adc
imull
outsl
cmp
push
xchg
ljmp
and
ss
or
das
rcrl
sbb
adc
mov
mov
cmp
lods
mov
scas
dec
scas
jno
mov
mov
cltd
scas
sbb
test
sub
push
lahf
insb
clc
sub
sub
xchg
or
mov
jl
je
pop
pop
add
jae
xlat
jb
loopne
std
cmp
pop
adc
xor
adc
inc
js
adc
xor
outsb
test
dec
sahf
aas
cs
fs
jb
cltd
xchg
push
mov
mov
test
sbb
decb
int
lahf
test
aam
outsl
push
cmp
stc
xor
outsb
jne
sub
pop
mov
pop
aas
in
and
mov
int
ret
mov
cli
push
xor
cld
adc
push
rcll
test
inc
arpl
push
outsl
fwait
mov
imul
jno
sub
loop
cmpsl
xchg
adc
xchg
ljmp
ds
inc
jno
insl
or
mov
xor
add
dec
mov
lret
arpl
jle
pusha
lods
sbb
add
push
imul
out
mov
movsb
dec
insb
jno
inc
adc
xchg
adc
fadd
movsb
rol
enter
xchg
or
int3
incb
push
jo
dec
mov
ret
test
je
int3
sbb
cmp
cmp
mov
lahf
sahf
push
dec
cmp
inc
clc
loopew
or
push
xchg
scas
push
add
jb
js
sub
lret
mov
cmp
inc
fs
out
inc
sbb
inc
int3
movsb
fwait
lea
cmp
inc
mov
jo
pushf
sub
ss
test
pop
mov
push
inc
mov
out
add
and
pop
ja
fisubl
pop
mov
lods
scas
sub
shlb
mov
cmp
test
clc
sbb
lahf
movsl
lcall
pop
nop
subl
mov
jecxz
fstpl
mov
sbb
cwtl
incb
mov
inc
pop
pop
dec
call
stos
mov
pop
inc
xchg
aaa
xor
in
mov
bswap
loopne
jl
data16
add
inc
xchg
cmpsl
addb
jbe
push
push
test
push
outsl
push
pop
inc
or
xor
push
pop
leave
sub
mov
fisttpl
test
dec
cmp
inc
add
in
xchg
cmpsb
filds
fists
cmp
enter
scas
mov
xchg
inc
imul
orl
sub
fsubl
push
rclb
mov
test
arpl
rcrl
jge
sub
punpcklbw
movsl
push
ds
inc
and
jbe
sarb
xor
rorb
repz
outsl
jmp
jp
inc
sbb
in
pop
adc
or
jle
pop
mov
loopne
mov
xor
enter
pop
imul
push
lds
cmp
movsb
divb
push
rep
ret
sub
scas
test
aaa
jmp
in
push
enter
xchg
xchg
inc
divl
cmp
imul
and
lret
inc
int3
xchg
dec
pop
shlb
sub
out
pop
jle
rorb
icebp
popf
shrb
xchg
or
pop
aas
ret
idivl
shll
sbb
jo
and
test
adc
push
add
inc
dec
cmpsb
scas
mov
mov
mov
clc
addb
dec
xchg
add
sahf
icebp
es
into
mov
xor
push
push
push
inc
sub
mov
jmp
mov
cltd
and
sbb
dec
stc
add
nop
test
fistps
jbe
push
xchg
inc
testb
mov
jecxz
aad
sub
icebp
push
or
mov
jne
push
clc
int3
fsts
mov
fistpl
sub
std
insl
sahf
inc
mov
sub
fldenv
or
add
insl
mov
or
adc
fnstsw
jmp
arpl
add
or
test
cmp
je
call
or
xchg
mov
xor
mov
es
xor
imul
lods
cmp
cs
mov
lods
sub
mov
in
test
mov
jmp
cli
lods
cmp
test
cmpsl
mov
sbb
test
jge
mov
out
xchg
adc
pop
sub
jns
test
jle
add
loope
popf
mov
js
stos
jb
mov
aas
loopne
cmp
sbb
gs
adc
mov
mov
popa
dec
pop
in
add
std
loop
test
out
jb
mov
insl
out
mov
and
and
mov
fistl
testb
adc
jb
bound
js
mov
jle
fsts
fs
hlt
and
cmpsb
inc
out
or
fcoms
pusha
mov
ds
dec
push
xchg
popf
add
mov
pop
sbb
fsubs
mov
push
and
lea
push
ret
xchg
js
pop
push
call
inc
movsl
xor
add
sbb
xor
or
dec
int
or
cltd
jmp
test
mov
fninit
mov
decl
inc
and
jae
and
insl
xor
add
popf
ficompl
ret
mov
insl
sbb
xor
fsubr
sbb
aad
push
imul
popa
adc
inc
sbb
jne
lahf
sbb
cmp
dec
inc
outsb
pop
inc
mov
daa
rcr
ljmp
rcll
lret
mov
mov
mov
adc
imul
sbb
sbb
in
mov
loop
sahf
sti
xor
mov
xor
das
add
lods
shrb
call
push
lahf
jg
adc
pop
sub
inc
out
mov
pushf
add
jmp
pop
sub
sbb
imul
lock
aaa
sub
mov
insb
ds
dec
loope
enter
and
mov
pop
mov
mov
in
add
repz
call
xchg
aad
loope
stos
test
cltd
mov
adc
icebp
push
test
push
adc
iret
rcll
pop
mov
jno
ss
leave
shrl
cli
pop
repnz
sbb
stc
inc
dec
mov
aad
xchg
jge
push
or
dec
mov
lcall
mov
mov
dec
mov
inc
stos
xchg
dec
or
mov
pushf
adc
sub
pop
popa
adc
jae
inc
sub
xor
sub
ss
loopne
popf
pop
push
stc
dec
lahf
lea
enter
movsl
push
decl
sub
fcompl
push
inc
mov
mov
shl
lcall
mov
mov
pop
sub
leave
cli
sub
in
cwtl
out
lock
push
test
movsl
scas
and
fdivs
sub
sahf
dec
icebp
push
inc
lds
pop
sbb
clc
mov
push
xchg
adc
xchg
sbb
repnz
sahf
jecxz
jmp
cmc
mov
mov
mov
mov
push
xor
cli
sarb
jnp
jmp
mov
adc
or
add
stos
push
adc
or
sub
hlt
sbb
lea
and
pushl
hlt
xor
xchg
sub
cs
mov
xchg
pop
xchg
lea
adc
cmp
push
pop
mov
stos
mov
call
sti
fwait
adc
lret
bound
push
add
pop
dec
insb
adc
xor
out
ja
and
ss
xchg
pop
les
fistps
imul
sbb
cmp
jb
xlat
out
mov
std
test
sbb
sbb
xor
xchg
sub
adc
sahf
push
sar
loopne
test
pop
push
xchg
loopne
cmp
mov
repnz
aas
mov
das
dec
ja
in
sub
test
xlat
dec
cvttps2pi
sbb
push
mov
add
cmp
icebp
sub
test
and
push
and
loopne
cmc
pop
dec
mov
push
pop
xchg
popf
dec
loop
cltd
pop
shrl
adc
lods
fiadds
ror
mov
mov
mov
xchg
xor
sub
dec
jnp
mov
push
out
lods
cli
dec
data16
inc
mov
sbb
cwtl
lret
into
test
dec
cmpsb
clc
xchg
push
data16
push
shll
xor
out
rolb
pop
push
rol
adc
and
pop
fsubrl
test
ds
push
mulb
or
sub
out
ret
lods
mov
sbbl
ret
cmp
or
dec
mov
cmp
nop
popf
movsl
jbe
pop
ljmp
mov
cli
push
mov
push
addr16
add
rcrb
ss
insl
pop
test
mov
sbb
lea
xlat
xchg
add
jns
daa
and
dec
inc
inc
jp
in
outsb
data16
jp
adcl
and
or
and
popa
xor
push
inc
jno
mov
push
in
arpl
es
loope
imul
stc
data16
mov
adc
fadds
pop
aam
sbb
stos
cld
mov
lret
cmpsb
mov
pop
stos
inc
jno
icebp
jmp
scas
out
mov
idiv
mov
xchg
in
adc
test
jo
gs
ja
mov
fsubs
shrw
sbb
les
xchg
rorl
sbb
lds
cmp
stos
fistpl
xchg
das
iret
hlt
or
push
insl
in
popa
popa
push
add
sbb
add
push
popa
push
imul
cmp
dec
lahf
outsl
xchg
xor
mov
and
lock
push
mov
add
adc
rcrb
sub
fisubl
and
dec
leave
cmp
push
or
push
sbb
mov
movsl
clc
push
xchg
test
cmpsl
jae
fdivrl
ljmp
inc
dec
cmp
pop
bnd
mov
mov
aad
jo
loop
ret
dec
and
nop
and
mov
movsl
cli
mov
sub
pop
outsb
bound
mov
pop
es
and
jb
xchg
xchg
inc
imul
popa
addr16
adcl
dec
xchg
out
mov
jle
mov
adc
push
dec
push
int
test
or
or
add
fwait
ljmp
loopne
in
add
bnd
xorl
fcmovnb
out
cltd
push
mov
scas
cmp
fsts
clts
cmpsb
fiaddl
lea
loop
jae
pop
push
push
push
pop
fiaddl
nop
sbb
rclb
dec
out
enter
push
js
mov
cld
movsl
test
push
cmp
xchg
mov
inc
aam
xor
loopne
out
cltd
pop
xchg
insb
pop
jns
mov
popa
xor
pop
in
push
xor
pop
test
lcall
push
in
mov
sbb
push
int3
pop
jle
js
sbb
and
inc
rcrl
aaa
fisubs
push
sti
incl
iret
int3
push
xor
rorb
jge
mov
adc
jnp
push
lock
and
shl
jo
ret
aaa
or
adcl
pop
mov
inc
dec
loopne
mov
clc
lods
xchg
lea
into
lret
xorb
mov
and
mov
shl
mov
leave
out
icebp
loop
test
psadbw
sub
into
shr
fcomps
or
js
mov
xchg
mov
shl
leave
test
mov
lret
lock
or
sub
push
mov
rcr
or
push
hlt
mov
mov
andl
jae
stos
sub
adc
jmp
dec
loopne
or
or
stc
into
mov
mov
or
mov
mov
mov
popa
jl
data16
add
pop
daa
mov
ret
test
fsts
dec
outsb
cmp
xchg
fs
cmp
call
fsubp
pop
or
cli
fs
ret
out
xor
dec
xor
lods
add
jl
mov
pop
hlt
xor
or
mov
sub
and
add
out
lahf
dec
push
int
test
in
xchg
adc
fimull
and
scas
inc
adc
mov
ss
inc
scas
mov
pop
mov
mov
sub
and
aas
enter
test
int
les
xor
xchg
and
pop
push
mov
clc
push
and
cltd
lret
mov
pop
and
cmp
add
or
mov
mov
daa
ficoml
cmp
sbb
fistpll
sbb
xchg
mov
into
and
push
dec
push
inc
pop
jbe
push
mov
dec
stos
es
or
outsl
add
ret
and
or
dec
mov
mov
divl
add
jle
ret
push
adc
test
dec
fmuls
cmp
and
addb
test
cmp
int3
aas
xor
push
xchg
dec
dec
sbb
inc
out
bound
shl
mov
push
cmc
test
jbe
pop
pop
cmp
jb
mov
shr
cmp
sub
adc
imul
mov
pop
jne
lret
icebp
sti
rcl
inc
out
pusha
cmp
mull
test
fucomi
and
testb
adc
mov
push
cmp
xor
push
sub
rcll
ds
jnp
add
xor
stc
sbb
xchg
lret
bound
mov
mov
push
aaa
jnp
test
adc
pop
insb
test
mov
sbb
imul
repz
xlat
xor
mov
cmp
cld
jl
pop
jmp
inc
jmp
data16
mov
push
mov
push
mov
mov
mov
sbb
or
mov
or
pop
mov
jmp
mov
cmp
loop
jl
dec
in
jae
pop
push
rolb
xchg
xchg
pxor
aas
jg
adc
aam
sub
dec
lods
push
xchg
loope
cltd
pop
ret
mov
or
fwait
div
pop
push
dec
dec
sub
mov
in
dec
cmp
xor
mov
stc
std
ret
imul
call
jle
int3
mov
xlat
in
mov
cmp
test
add
jne
stc
lea
sub
sub
or
xor
test
imul
ljmp
push
push
mov
out
jp
pop
mov
daa
inc
mov
inc
cmc
sbb
inc
jecxz
pusha
sbb
sbb
xor
ss
xchg
dec
and
and
and
dec
dec
xlat
adc
sbb
xchg
loopne
jl
pop
addr16
pop
add
out
dec
cs
mov
mov
imul
pop
inc
sub
jbe
mov
mov
pop
sbb
jae
cmpsb
scas
cld
es
lds
mov
loope
mov
flds
fwait
mov
push
fistps
xor
ret
cmp
sti
mov
in
and
push
mov
mov
bsf
sub
aas
std
sub
cmc
jae
enter
cs
rol
outsb
dec
dec
xchg
imul
daa
and
jge
jns
dec
adc
adc
pop
in
pop
jp
xor
mov
jle
push
add
fcmovu
jno
outsl
push
mov
ja
xchg
add
cltd
out
mov
out
cmpl
into
mov
ds
mov
push
inc
sub
push
loop
out
rcrl
add
les
les
into
cmp
in
mov
or
fisubrs
xor
push
pop
test
sbb
pop
lcall
fldl
and
in
arpl
shll
jmp
cltd
out
mov
jg
push
gs
push
pop
and
pop
sbb
lock
fimull
sbb
dec
add
mov
mov
mov
inc
mov
xor
mov
adc
es
addl
ds
sub
call
xor
mov
mov
pop
xchg
ret
push
rclb
test
std
fistl
jbe
xor
push
pop
mov
dec
sbbb
xchg
push
inc
not
adc
movsl
cmp
pop
lds
or
cmp
clc
je
push
mov
sbb
mov
lods
cmp
ljmp
mov
stc
inc
sarb
int
jge
lock
mov
sub
pop
icebp
push
or
push
sub
scas
pop
jne
vmovaps
insb
lret
cmpsb
xchg
jns
aaa
outsl
jae
mov
test
cwtl
testb
incl
ljmp
inc
jae
in
jno
pusha
fs
cmp
inc
inc
test
test
xor
mov
pop
test
dec
jg
mov
stos
insl
lea
popf
in
aad
cli
cwtl
sti
inc
outsb
and
hlt
xlat
sub
imul
push
dec
mov
out
mov
icebp
dec
push
lcall
lods
mov
pop
cmp
pop
jo
call
lret
sub
test
nop
loope
les
flds
shl
push
rcrb
pop
and
mov
sub
pop
fnsave
xchg
mov
into
rol
fwait
xchg
sahf
in
out
dec
inc
les
adc
inc
and
mov
cmp
ret
outsb
jp
in
jl
mov
movsl
dec
js
xlat
jl
adc
movd
inc
addr16
push
out
and
enter
mov
adc
lret
push
movsl
xor
pusha
or
int
pop
mov
cmpsb
pop
dec
inc
outsl
xchg
inc
jbe
xchg
sub
mov
and
lea
and
rol
push
mov
xchg
fucom
inc
call
sbb
jmp
sbb
sub
push
push
lret
and
jge
fidivrl
jecxz
jp
daa
xor
movsb
es
scas
mov
sub
outsl
and
jno
xchg
cmp
and
push
mov
xchg
fs
sti
pop
jnp
mov
add
jmp
jp
sbb
popa
shl
add
sti
rcl
int
loope
loopne
adc
mov
ljmp
fbstp
pop
or
outsl
pop
mov
lods
mov
cli
add
decl
ss
lret
addr16
xor
pop
jp
ret
sub
push
bound
mov
ss
loopne
mov
mov
scas
movsb
mov
or
and
inc
mov
in
out
xor
xchg
frstor
xor
cmc
testb
scas
mov
rcrl
imul
jno
cld
negb
mov
rcr
push
adc
lret
sbb
jge
xor
jg
dec
xor
loope
jmp
pop
xchg
fiaddl
inc
xchg
and
sub
mov
leave
inc
gs
mov
pop
add
jno
or
test
mov
sub
cmp
jmp
dec
dec
loope
jl
adc
sub
xchg
or
lock
adc
adc
cmpb
popf
cltd
pop
pop
xchg
bound
pop
scas
mov
mov
call
popw
addr16
cmp
mov
orb
fsubl
aam
sbb
outsl
mov
sub
lret
pop
sbb
mov
or
cmp
adc
inc
fsubrl
mov
test
or
stos
mov
jne
movsb
icebp
sbb
lds
into
imul
dec
lods
pusha
mov
mov
push
popf
jb
mov
arpl
or
movsb
scas
mov
clc
pop
xor
fucomip
inc
xor
mov
fadd
test
pop
shrb
fidivrl
mov
jb
clc
dec
dec
adc
jo
call
dec
mov
add
int3
dec
mov
push
shrl
jb
dec
popf
cli
pop
jl
and
ret
fildl
or
dec
jae
enter
push
pop
mov
in
daa
cld
js
into
addr16
test
jl
scas
lods
push
into
fisubrl
push
inc
insb
fmull
imul
jge
ja
mov
mov
lods
pop
fstpt
movsb
lret
inc
and
dec
outsb
lea
ror
lret
inc
add
lea
out
in
sub
fimuls
cmp
out
jbe
xor
loope
add
lds
and
sbb
push
and
push
jecxz
sub
or
fdivl
movsl
inc
cmpl
mov
or
sbb
aaa
add
hlt
je
int
xlat
dec
cmp
lahf
adc
fildll
dec
pop
hlt
lret
cltd
movsl
pop
pop
out
xchg
idivl
repz
inc
adc
out
dec
outsl
inc
add
gs
and
dec
cmpl
rcrb
jg
jl
or
push
and
add
jnp
outsl
mov
mov
fwait
sbb
ret
or
cli
dec
mov
jl
or
inc
daa
addb
stos
xchg
inc
pop
scas
mov
xchg
int3
clc
loop
sbb
mov
roll
add
outsl
int
cs
scas
loope
add
inc
stos
mov
rol
mov
test
leave
adc
data16
scas
add
mov
mov
leave
icebp
or
mov
xor
jnp
or
icebp
popa
push
xor
inc
cld
lock
dec
xchg
mov
cmpsl
sub
lret
add
out
scas
push
test
xor
call
imul
repz
je
je
pop
sahf
inc
arpl
sbb
and
loope
adc
pop
pop
add
xor
pop
repz
cmp
fs
dec
add
in
cmc
imul
repnz
enter
pop
mov
and
je
icebp
xchg
loop
sahf
daa
faddl
arpl
jge
mov
loop
adc
mov
inc
aad
addr16
add
push
out
ljmp
pop
xor
out
test
sarl
dec
les
cld
fs
popa
movsl
pop
mov
aam
mov
mov
call
pushf
jae
and
xchg
lds
je
pop
lret
jae
mov
sub
sarb
fidivrs
icebp
pop
les
stc
sub
dec
js
shlb
outsl
insb
push
push
repnz
mov
sti
push
sbb
nop
rorl
test
pushf
cmp
pop
push
cs
xor
dec
aas
jns
jb
inc
mov
and
out
dec
mov
ret
dec
ja
iret
pop
in
fcompl
or
or
push
pop
inc
lods
push
adc
cli
sti
repz
and
rcrb
xchg
inc
fistpl
jg
gs
or
push
pop
push
jb
push
in
sub
pop
popa
or
mov
fsubs
movl
aam
adc
shll
adc
es
and
mov
pop
pop
dec
mov
adc
rolb
mov
jl
adc
mov
bound
out
mov
dec
mov
lret
les
push
pushl
rcll
lock
xor
sub
mov
gs
jecxz
loopne
out
mov
xchg
daa
loopne
jp
push
into
add
dec
jmp
incb
scas
adc
rclb
sbb
push
into
imul
cmp
out
rorl
jmp
sub
roll
pop
arpl
sub
es
out
pop
repnz
xor
jns
mov
inc
cmp
ss
pop
movsl
sarb
cmp
ret
rcll
lret
call
les
enter
je
arpl
pop
sbb
fwait
xchg
add
mov
push
inc
push
fistl
inc
and
fcoml
jbe
sub
ret
shl
cmp
cmpsl
cld
ret
xor
aaa
lods
jle
mov
jmp
mov
lret
je
xor
jbe
push
and
pop
stos
mov
mov
int3
sbb
mov
bnd
stc
push
cmp
cmp
sbb
out
sahf
imul
push
dec
lods
dec
outsb
pop
sti
xor
out
jecxz
outsl
je
into
cmp
and
lods
mov
sti
pop
mov
dec
enter
imul
dec
xor
std
cld
ficoms
mov
sarb
and
mov
push
into
push
cmpsl
stos
add
fisubs
sarb
sbb
push
stos
test
cmp
rcll
mov
jae
push
add
insl
aas
adc
xchg
adc
icebp
sbb
movsb
cmp
outsb
and
imul
pop
pop
stc
lret
rcrl
hlt
out
cmpsl
sbb
cmpsb
movsl
incb
sub
popf
pop
sub
mov
orb
mov
repz
fnstsw
jge
and
jle
mov
addr16
ljmp
loopne
lods
fisubrs
insb
mov
mov
add
dec
fcoms
push
mov
lcall
lret
or
mov
out
cs
lcall
cwtl
aaa
in
jne
leave
rcrb
or
aam
xchg
push
fcmovb
dec
fsub
sub
jge
shlb
imul
cmp
insb
lock
push
stos
lahf
insl
mov
jge
pop
aam
mov
sub
cltd
pop
pop
jbe
cmp
test
adc
push
shrl
mov
pop
negl
fisubrl
add
adc
dec
xchg
fwait
movsb
mov
fidivl
outsb
jne
out
pop
inc
jl
push
repnz
add
pop
dec
test
add
and
imul
out
sbb
cmp
test
mov
jmp
ret
hlt
mov
pusha
cmp
xor
data16
mov
rclb
iret
inc
mov
inc
inc
mov
jns
lods
xchg
out
sarl
jbe
pop
jg
outsb
daa
jns
in
jae
push
pop
jns
fdivrs
mov
sub
cmp
les
sub
mov
daa
xchg
adc
jne
dec
cmpsb
cmpsl
inc
data16
outsl
or
sahf
imul
testl
sbb
daa
cmp
sbb
jle
mov
sbb
mov
sub
lcall
pop
mov
dec
add
push
mov
icebp
or
addr16
and
aam
jg
shll
fistps
testl
sub
lods
sti
out
mov
adc
leave
bound
jmp
mov
mov
xor
mov
stos
sti
sub
scas
lahf
xchg
adc
sub
xchg
sub
int3
xchg
fsubrs
xor
push
ss
or
cmc
mov
pop
jo
mov
mov
and
ja
mov
inc
jne
lret
rcr
cmp
push
loopne
push
cmc
sbb
sar
test
sub
je
sub
push
jecxz
jl
ss
or
icebp
sarl
and
fwait
es
or
test
mov
xor
out
xor
push
stc
push
push
inc
push
cli
mov
test
and
adc
iret
xchg
pop
sarb
lea
aas
and
mov
insb
pusha
dec
cli
cltd
jae
out
outsb
mov
mov
mov
stc
push
cmc
mov
sub
add
cld
mov
hlt
out
mov
or
sbb
add
add
sub
arpl
jmp
loop
imulb
popf
arpl
push
add
es
out
mov
popa
cmpsl
fidivl
hlt
in
call
cld
sub
lret
cli
xchg
jo
sbb
dec
mov
mov
fs
pop
cwtl
div
xchg
ja
aad
stos
test
xchg
jno
fmull
lods
xchg
mov
mov
mov
stos
popf
setne
syscall
mov
roll
decb
mov
aam
call
rcll
int3
mov
jle
cmpb
mov
cmp
push
cmp
xchg
or
int
lahf
in
cmp
jecxz
and
adc
pop
and
pop
in
dec
mov
rcrb
jge
jbe
dec
dec
ljmp
push
aad
aaa
sbb
adc
nop
mov
sbb
jb
fcompl
mov
dec
jae
jno
xchg
scas
out
sti
inc
lret
imul
inc
sbb
lcall
test
pop
add
hlt
adc
fmull
lods
mov
filds
std
jbe
ljmp
push
negl
sbb
cld
xchg
push
push
push
or
xchg
and
movb
inc
out
shll
inc
mov
sub
jl
mov
mov
mov
shl
aaa
jp
out
mov
mov
push
xor
mov
jle
or
xor
int3
enter
pop
es
mov
xchg
jg
aas
mov
pushf
adc
and
push
mov
fdivrl
adc
lods
shl
pop
das
imul
jp
push
xor
jne
cld
aad
sub
pop
sub
mov
xlat
push
mov
sbbl
lret
add
xchg
test
movsb
sbb
bound
scas
dec
dec
call
push
pop
cmp
jns
pop
cmp
xor
in
push
hlt
insl
xlat
sub
jl
jg
test
xchg
inc
sub
out
sti
dec
shll
in
imul
fs
cmp
pop
and
ret
je
dec
rcrl
lret
lds
lret
xor
scas
pop
adc
and
push
xchg
ret
adc
call
dec
push
jo
add
push
pop
cli
mov
xlat
mov
test
push
xor
pop
pop
aam
lock
mov
xchg
das
roll
xor
cli
nop
adc
dec
xor
mov
dec
popf
jl
dec
mov
arpl
inc
fdivl
push
dec
xchg
jle
daa
jmp
imul
aas
fwait
pop
cmp
mov
pop
push
adcb
cs
pusha
mov
cwtl
xchg
pusha
test
mov
shll
cmpsl
aas
adc
out
incb
pop
iret
mov
push
ds
or
mov
pop
pop
cmpsl
repz
push
scas
jns
movsb
pop
pop
lds
cmp
test
vandps
in
or
lea
lea
inc
xor
and
and
rcll
in
add
int
adc
aam
add
lds
jne
push
sub
mov
les
sbbb
inc
pop
aas
imul
rcrb
aam
mov
outsl
das
xchg
jle
add
cmp
pop
mov
in
out
xchg
dec
icebp
fs
adc
rcll
testb
in
inc
cld
sub
cld
out
fwait
in
js
lods
data16
push
pop
ds
rol
stos
aam
push
ljmp
pop
sub
loop
mov
fdivl
mov
js
or
std
add
inc
cli
push
jmp
inc
cs
xchg
pop
and
ja
scas
in
inc
jle
mov
or
mov
push
repnz
out
lret
lea
dec
push
popa
mov
lret
lods
leave
pusha
push
mov
jb
mov
inc
push
mov
sbb
imulb
inc
fs
lcall
add
cmp
inc
enter
mov
pop
out
xchg
sub
mov
test
push
mov
test
shrl
in
push
jns
jp
cs
cmp
and
dec
mov
je
lahf
mov
mov
add
pop
loop
jg
shlb
jae
cmp
jbe
push
push
decb
sbb
sbb
test
sub
cmp
jae
sbb
aaa
mov
dec
adc
or
mov
dec
and
sti
mov
mov
or
cs
mov
and
insb
jae
mov
push
sub
xchg
jle
add
adc
pushf
pop
adc
lcall
push
mov
adc
xchg
inc
push
cmp
lds
sbbl
lea
push
cli
sub
data16
out
push
jo
dec
insb
lds
adcb
jb
repz
pop
mov
cmpsb
mov
ds
mulb
jnp
and
out
dec
xor
and
jns
pusha
popf
push
xchg
xor
loope
cmp
dec
cmp
mov
rclb
cmpb
movb
daa
adc
iret
add
sbb
in
movsb
daa
pop
sbb
push
cmpsl
das
fs
mov
adc
int3
mov
sbb
sub
mov
pop
mov
mov
xchg
in
push
ficoms
mov
sub
jl
cltd
sub
shl
pusha
enter
push
les
dec
cmc
push
add
sbb
shll
jae
xchg
arpl
popa
sub
sub
arpl
dec
push
ja
mov
mov
mov
lret
out
addl
add
mov
cmpsl
pushf
out
popf
lods
pusha
dec
inc
mov
push
fadds
xchg
dec
aas
sbb
sbb
push
ret
out
sbb
cld
mov
subl
sbbb
outsb
in
push
add
cmc
add
stc
and
cmp
mov
sbb
or
pop
push
je
stos
or
adc
cmp
jns
jl
push
sbb
shlb
push
mov
jecxz
sub
addb
cmpl
mov
pop
mov
xchg
fdivr
popf
mov
aas
ljmp
ljmp
adc
cmp
in
xlat
pop
jo
jge
outsb
lods
adc
pop
mov
cli
test
sub
lret
or
jnp
data16
sub
pop
dec
test
jg
into
call
jmp
les
cmp
flds
inc
aam
addr16
mov
enter
xor
scas
stos
jbe
cli
jp
das
scas
adc
out
sbb
cmp
pop
mov
xchg
cmpsb
push
dec
ss
sub
mov
popa
dec
dec
je
ds
and
dec
sbb
xchg
pop
or
mov
push
cmp
std
push
clc
xor
sbb
or
mov
jno
pusha
push
lea
cld
ret
inc
nop
iret
mov
into
cmp
dec
sbb
pop
mov
mov
arpl
repz
mov
syscall
lahf
loopne
inc
test
addr16
lods
pop
inc
clc
jo
out
fadds
fs
fcomps
xor
pusha
jmp
adc
mov
jbe
mov
cli
shlb
add
dec
mov
sub
hlt
test
sarl
shlb
xor
mov
mov
xor
and
inc
ja
or
das
lds
mov
frstor
xchg
stc
out
loope
push
dec
lds
roll
pushf
outsl
and
sti
cmp
mov
aas
mov
pusha
enter
cmpb
pop
or
shl
iret
sub
or
arpl
adc
mov
xor
mov
cmpsb
mov
or
push
sub
lret
xor
mov
loop
add
sub
loop
lcall
jno
mov
outsb
into
sahf
adc
add
out
hlt
ljmp
call
cwtl
cs
cwtl
mov
in
arpl
pop
mov
push
mov
in
popf
jb
add
mov
mov
ss
mov
js
pop
mov
mov
or
pusha
jg
mov
inc
cs
ja
lods
aad
push
into
push
mov
scas
and
movsb
mov
push
loopne
imul
in
jmp
adc
push
add
pop
mov
subl
dec
scas
mov
std
mov
fists
cmpsb
adc
add
jno
aaa
cmp
test
pusha
inc
pop
xchg
sqrtps
sub
dec
sbb
jp
aad
jecxz
sbb
sub
jecxz
fisubl
aam
pop
cmp
enter
mov
stos
mov
in
xchg
repz
jp
mov
jmp
jno
cltd
pop
mov
popf
add
aam
dec
test
fistpl
hlt
cltd
cmp
pop
sub
sub
dec
mov
ret
mov
jmp
sub
pop
ja
dec
cmpsb
out
push
sub
xor
and
cwtl
fucomip
iret
mov
int3
mov
cmpsl
hlt
push
and
dec
push
add
addr16
je
mov
out
les
pop
daa
push
jbe
sar
lea
add
xchg
mov
jg
push
pop
xchg
inc
loopne
das
cmp
outsl
mov
hlt
cmp
rol
arpl
rcrb
jbe
jecxz
bound
lds
fisttpl
jl
ret
adc
and
cs
insl
dec
mov
pop
lahf
mov
mov
out
nop
stos
cmpsl
mov
push
jo
and
dec
out
lahf
iret
sub
pop
pusha
mov
popa
mov
ds
adc
stc
sahf
or
stos
push
jo
or
add
jae
cmp
inc
and
repz
jbe
mov
shll
cltd
lret
pop
out
mov
ds
mov
push
stc
push
jb
mov
mov
scas
xchg
cmpsl
call
mov
fs
les
shrb
mov
xchg
mov
rcr
ret
roll
inc
cmp
xchg
ret
inc
push
sbbl
sahf
clc
dec
popa
jle
test
mov
cmp
push
out
test
lods
stos
dec
in
and
sub
xor
pop
or
jbe
mov
ja
rcrb
sbb
repnz
cltd
and
cmp
pop
fcoms
scas
and
cmp
add
mov
pop
pop
push
lds
bound
mov
addr16
push
popa
push
fldenv
lods
cwtl
int3
les
mov
jl
ret
jmp
mov
xor
mov
cltd
or
movsb
inc
pop
data16
lret
les
jbe
jae
das
nop
fcoms
cmpb
nop
sbb
stc
scas
in
xchg
mov
mov
mov
arpl
fadds
insb
enter
enter
js
jecxz
lret
pop
push
lret
leave
xlat
add
rcrl
inc
sub
sbbl
stc
inc
in
cmp
sbb
fildl
xchg
lods
ds
stos
cmpsl
jnp
cltd
stos
adc
pop
imul
or
cmp
xor
or
inc
mov
push
sub
or
negb
or
xchg
pushf
les
cmc
mov
ret
mov
call
push
rcr
lock
adc
pop
adc
add
mov
jb
and
fs
ret
dec
bound
int
xor
cmp
sbb
stos
enter
mov
xchg
cmpsl
push
aad
pop
push
nop
xchg
out
inc
fisttpl
sub
arpl
negl
mov
mov
adc
add
stos
lds
fabs
and
in
movsl
aam
or
lcall
mov
inc
dec
stos
xor
fwait
dec
mov
push
jl
out
xlat
pop
inc
jmp
and
es
fcoml
pop
popf
mov
cmp
mov
jp
cmp
movsl
jae
arpl
and
mov
add
pop
xor
and
addr16
dec
addb
sub
rcll
es
popa
xchg
aad
mov
les
dec
dec
popa
scas
pop
fwait
cmp
popa
jp
cmp
inc
icebp
and
subb
arpl
test
call
or
and
pop
fsubl
jb
push
or
jb
cld
fildl
ret
jnp
repnz
add
push
cmp
xchg
in
out
test
dec
adc
sub
xchg
push
xchg
jb
sub
addr16
mov
cmp
popa
push
rcrl
dec
sbb
mov
cs
call
aas
in
fcoml
out
pop
repz
mov
adc
int
xchg
sbb
mov
push
insl
sbb
dec
mov
clc
mulb
rolb
inc
and
lock
cmp
cmpxchg
jp
mov
dec
mov
sbb
sub
cs
lahf
sub
fwait
push
pushf
add
jmp
std
cmpsb
les
movsb
pop
mov
loop
lock
push
mov
jno
pushw
mov
mov
mov
mov
mulb
mov
xchg
mov
loop
test
test
mov
mov
mov
mov
mov
and
daa
xchg
mul
push
jno
mov
add
sbb
scas
push
cmc
xchg
jecxz,pt
pop
gs
mov
int3
inc
fistps
cmpsb
repz
lahf
jp
es
mov
adc
pusha
addl
pop
fmull
mov
push
mov
ret
adc
mov
mov
arpl
shrl
jno
lahf
and
mov
sbb
insb
mov
xchg
sbb
sub
daa
shll
dec
sbbl
lret
adc
repnz
scas
ffreep
xor
mov
pop
out
les
push
ds
or
fldcw
cmc
mov
sub
push
and
adc
add
repnz
outsl
mov
stc
aas
je
jmp
dec
cmp
fwait
icebp
mov
shll
xor
mov
lock
inc
fldcw
test
mov
nop
sub
idivl
mov
nop
dec
xor
adc
les
ret
loop
adc
and
das
idivb
cmpsl
pushf
mov
dec
hlt
leave
cwtl
jecxz
pop
shll
adc
int
sbb
aas
pop
divl
lods
out
cmp
xchg
lods
es
int3
xor
push
insl
push
jns
mov
xchg
out
popa
xlat
jbe
nop
mov
or
rcrl
std
test
nop
jp
lock
pop
inc
repz
jnp
cwtl
out
ss
or
or
ret
dec
add
cmpsl
popa
adc
add
adc
push
pop
cmp
lods
aad
dec
frstor
sahf
xchg
xchg
and
mov
push
sbb
cld
adc
jnp
push
sub
cmpb
mov
and
dec
sbb
push
adc
leave
and
and
inc
mov
pop
pop
inc
fistpll
adc
aas
sbb
jle
stos
std
std
stc
xchg
sbb
mov
jl
pop
movsl
les
mov
gs
aam
arpl
adc
addr16
pop
clc
mov
xchg
in
pop
mov
mov
inc
scas
movsb
push
push
out
out
sub
lock
jne
jo
adc
sub
inc
sbb
pop
iret
mov
xchg
pushf
cmp
mov
ljmp
push
mov
scas
sahf
aaa
xchg
ret
fildl
nop
lods
xor
pop
loope
pushf
push
inc
dec
mov
inc
or
xchg
mov
outsl
mov
sbb
sbb
cld
xchg
jns
add
sti
stos
nop
mov
adc
loope
xchg
shlb
out
iret
dec
pop
and
push
sub
pmulhw
mov
lcall
dec
xor
mov
inc
xor
das
mov
mov
lret
jb
mov
shr
pop
sarl
and
push
out
xchg
or
cmp
mov
dec
lcall
xchg
push
cmc
bswap
and
and
mov
push
test
jge
std
mov
loope
mov
enter
mov
pop
insb
jl
and
inc
pop
and
inc
leave
push
jbe
test
aam
out
imul
or
cmp
or
mov
mov
push
pop
lcall
xor
sbb
mov
pop
iret
test
mov
adc
adc
dec
dec
dec
clc
call
push
addr16
inc
xor
add
fnstsw
or
sbb
sbb
mov
loop
mov
xchg
sub
int3
rcll
les
pushf
jne
popf
push
xor
test
divb
rcll
xor
or
pop
mov
arpl
jle
test
jnp
mov
iret
mov
stos
dec
fisubl
dec
xor
push
dec
lahf
lahf
das
ljmp
or
out
sub
in
mov
in
cmpsb
xchg
in
aad
insl
or
ret
popa
lods
or
mov
loop
into
add
sub
mov
adc
aas
xchg
stos
fists
or
gs
xchg
adc
push
jne
xlat
cwtl
fidivs
lret
dec
push
jnp
jne
into
ret
mov
xor
test
lret
push
add
push
sbb
sahf
pop
sbb
in
pop
movsl
stos
dec
call
ljmp
ljmp
push
push
push
repz
mov
les
mov
ss
sbb
dec
mov
or
pop
cmc
xchg
mov
addr16
mov
xchg
inc
out
cmp
fs
or
pop
cmp
cmc
jne
movsb
push
cmpb
sub
mov
cli
aad
mov
das
bound
pop
cmpb
and
sahf
out
xchg
scas
xchg
pop
dec
dec
icebp
nop
add
jne
mov
mov
out
inc
into
in
cld
jne
popf
xchg
rcrl
mov
ljmp
pop
push
popf
cmp
iret
shrl
xor
fldt
mov
out
shll
ret
and
jne
or
mov
loope
dec
push
outsb
xor
adc
scas
jno
aas
add
pop
inc
rcr
mov
jne
cli
pop
and
jne
mov
push
nop
ficomps
add
mov
nop
out
scas
clc
jp
mov
push
xchg
xor
xchg
test
sbb
dec
push
icebp
cmp
xlat
pop
dec
sbbb
stc
jg
fidivl
xor
popa
cmp
mov
lea
inc
add
stos
in
enter
fidivrl
cmp
or
push
lret
out
sbb
and
ja
rol
nop
pop
mov
aad
inc
push
es
and
ljmp
lods
in
and
enter
xor
adc
mov
stos
shr
movsb
movhps
inc
int
movb
pop
jo
rcrb
mov
inc
mov
sbb
jae
mov
pop
xlat
pop
in
cltd
ds
ds
rclb
loopne
adc
push
arpl
push
jl
stc
and
int3
fcmovnbe
loope
test
pop
inc
mov
fxch
mov
nop
push
fwait
dec
add
sbb
jo
mov
insl
scas
mov
and
xchg
mov
lods
test
insl
sub
push
mov
cli
addr16
jmp
insl
mov
shlb
adc
clc
insl
mov
sbb
mov
xor
sub
push
in
adc
cmpsl
jge
dec
jp
js
int
dec
test
cmp
popa
jbe
test
push
pop
dec
and
out
daa
or
fwait
out
sub
mov
jns
js
out
add
push
cmp
jbe
and
adc
mov
mov
jnp
adc
fbld
mov
incl
push
lea
mov
pop
aad
mov
pop
call
pop
jo
fadds
pop
scas
ret
xorb
mov
cmc
pop
pushf
cmpsb
aaa
lcall
xchg
int3
dec
movsb
or
pop
mov
dec
lods
jns
lret
popl
xor
outsl
inc
push
cmp
mov
popa
insb
dec
xor
jne
add
inc
sub
mov
mov
mov
jmp
ret
outsb
xchg
mov
je
mov
inc
mov
gs
sub
prefetcht0
adc
cmp
mov
and
push
xchg
test
or
aas
insb
and
adc
gs
or
cmp
push
stc
cmp
fnsave
stos
and
cmp
xchg
mov
insl
sahf
and
daa
xlat
hlt
mov
jne
jl
ss
cmc
sub
scas
popa
iret
xchg
lods
dec
push
aaa
loope
movsb
cmp
rcrb
or
movsb
ret
in
andl
mov
mov
lods
push
test
flds
push
mov
js
xor
out
jp
inc
mov
sub
cltd
add
sub
shrb
scas
lods
daa
xor
fbld
testb
adc
cmc
imul
mov
cmpsb
dec
mov
je
rorl
jge
jge
mov
pop
call
cmpsl
or
cli
rol
scas
cwtl
jno
sbb
rolb
aas
pop
xchg
and
aas
add
gs
cmp
jns
outsl
adc
cmpsb
sbb
lcall
fiaddl
hlt
mov
jmp
xchg
dec
jo
shlb
incb
pop
ret
bound
sub
gs
cmp
fwait
scas
mov
insl
sub
mov
lea
imul
mov
sbb
dec
mov
mov
pushf
repnz
fldl
or
icebp
lods
inc
out
mov
lahf
xchg
test
cmp
out
out
sub
mov
iret
adc
sub
xor
jne
stc
je
frstor
pop
fsub
xchg
dec
and
rcrl
jae
jp
repz
cmp
inc
cld
lea
jbe
bound
sub
int3
out
jno
loope
and
sbb
nop
xchg
fmull
jae
inc
stos
out
pop
pusha
mov
frstor
and
sub
lret
mov
ret
mov
mov
into
icebp
popf
arpl
ja
pavgb
std
cwtl
cwtl
push
out
and
cltd
ja
stos
or
sti
mov
or
cltd
mov
and
dec
jno
mov
cli
sarb
fcoml
xchg
xchg
loop
data16
dec
cmp
sbb
jg
pop
push
inc
adc
ret
cmp
aam
std
push
lea
dec
jne
sub
sahf
xchg
cli
jecxz
popl
stc
fidivrl
fisttps
shlb
sbbb
testb
and
adc
mulb
jl
test
dec
int3
loope
push
xor
call
mov
test
loope
leave
xor
rcrb
sub
pop
orb
int3
addr16
int
sub
repnz
push
mov
cmc
adc
mov
das
xor
addr16
sub
push
fsubrs
nop
ret
jae
das
fisttps
xlat
andl
pop
cmp
mov
xor
and
lds
repnz
push
imul
push
jns
inc
mov
pop
cmpsl
push
in
bnd
cmp
jge
push
daa
cmc
or
xlat
out
cmp
insl
cmp
and
xor
push
adc
mov
js
stc
aad
mov
add
and
lock
movsl
and
push
cmp
cmp
paddusw
movsl
mov
fwait
outsb
inc
rcrb
jno
leave
shlb
sbb
xor
insb
sub
notb
xor
cli
mov
test
lods
in
mov
push
mov
test
jo
pop
stos
sub
sti
xchg
out
shl
mov
cmp
gs
jae
sbb
jns
jns
aaa
jg
mov
push
dec
add
inc
int
inc
mov
aam
jns
ja
inc
in
orl
push
and
aaa
add
push
jo
rdmsr
push
movsb
aas
cmpsb
xchg
jnp
insb
dec
push
sub
fisttpl
call
sub
add
pop
popf
xor
adc
mov
cld
lods
imul
mov
sub
cmp
dec
dec
jmp
lods
les
dec
xor
inc
inc
add
insl
stos
or
pop
mov
loopne
mov
add
dec
out
out
lret
lock
jg
cmp
sbb
rorb
lcall
lahf
out
imul
add
push
loop
mov
je
xorb
mov
mov
test
jbe
sub
cli
js
jbe
mov
xchg
add
out
std
mov
dec
push
dec
les
ror
mov
mov
neg
lock
cmp
xchg
xchg
fdivrl
cmpsb
jl
add
pop
sbb
call
dec
bound
jl
push
lds
in
fisttpl
scas
mov
sub
push
fcompl
jne
push
out
pop
mov
xchg
jnp
cmp
add
sbb
daa
adc
loope
jb
jle
test
xlat
out
shll
mov
ror
xchg
imul
ja
mov
adcl
push
and
jne
pop
add
sbb
mov
lock
aad
dec
xchg
push
or
cmpsl
mov
xchg
mov
xor
pop
popa
ljmp
xchg
cs
xor
out
scas
lock
adc
cwtl
dec
faddl
adc
jne
jl
add
lahf
jle
dec
pop
imul
sahf
scas
sbb
sub
cmpsl
xor
mov
jns
aas
lods
xchg
pop
into
dec
int3
dec
shlb
into
lods
xchg
cli
dec
lock
lods
cmp
mov
xor
jno
push
pop
jp
jecxz
sub
adc
movsb
cmp
out
jmp
popa
scas
les
adc
add
cmp
js
rcrl
jmp
mov
in
dec
mov
xor
cmp
pop
dec
sbb
push
xchg
sahf
lods
push
lcall
sbb
aas
cli
and
dec
pause
sbb
mov
movsl
jmp
pusha
xor
into
cmp
sarl
pop
pop
dec
cmp
mov
cmp
hlt
not
outsb
out
xchg
xchg
lock
dec
add
add
iret
lods
adc
enter
jg
out
add
scas
call
xchg
loop
cmc
push
or
dec
sahf
dec
aam
daa
sbb
nop
and
push
das
test
xchg
sbb
lahf
mov
add
mov
push
push
popf
pusha
cld
pop
call
pushf
lock
dec
out
push
pop
mov
imul
pop
in
cmp
and
inc
cli
or
repnz
pop
cmp
inc
pop
scas
mov
js
rcrl
lret
xchg
jmp
and
aaa
fisubl
push
faddl
jb
sbb
sbb
lret
sbbb
daa
add
clc
adc
movsl
cltd
dec
fidivrl
enter
jmp
inc
jns
mov
cltd
mov
test
jae
fisubrs
aad
pop
fisttpl
jno,pn
xorl
scas
call
adc
mov
sbb
les
sarb
inc
push
xchg
and
lods
or
cwtl
hlt
loop
ds
es
movsb
mov
fnstsw
stc
and
dec
inc
sbb
cmp
or
xor
bound
sub
sub
stos
daa
sub
jge
lgs
ret
lahf
pop
enter
loope
lret
and
das
mov
sub
dec
or
sbb
scas
nop
test
mov
jp
mov
test
scas
mov
lods
loopne
lock
jns
jbe
popl
stos
imul
lea
repz
push
ret
sub
sub
pop
scas
pavgw
out
pop
xor
pusha
push
xchg
lcall
jg
and
pop
jg
sar
lock
inc
scas
iret
xor
cmp
xor
add
lods
call
test
pop
sbb
xor
mov
icebp
xchg
mov
push
pop
mov
mov
pop
jae
out
pop
mov
mov
arpl
pop
pushf
inc
enter
scas
mov
fstpt
add
daa
xor
push
gs
sbb
popf
push
xor
dec
fcomps
lock
fsts
call
sub
sqrtps
sub
sub
movsb
xor
pop
enter
movsl
inc
pop
lds
or
fstl
pusha
in
sar
scas
lds
mov
mov
and
ficompl
outsb
jl
lds
sub
xchg
loop
or
mov
inc
repnz
aas
and
add
jle
xchg
out
push
imul
push
mov
popa
lret
adc
ja
bound
arpl
and
dec
jl
jno
es
and
aam
fisttpll
outsl
xchg
or
outsb
js
inc
xchg
cltd
push
int3
cmc
scas
inc
mov
arpl
or
daa
cmpsl
inc
sbb
and
mov
cmp
mov
sub
add
arpl
test
push
in
stos
dec
add
aaa
cmp
jns
adc
inc
jo
xchg
ds
idivl
mov
cld
les
jmp
stc
lahf
insb
out
rcrb
inc
mov
movsl
xor
ret
mov
add
cwtl
pop
dec
jnp
cmp
insb
in
sub
ljmp
popf
aad
punpcklwd
cmpsl
jne
or
mov
jae
sub
xchg
dec
push
push
pop
enter
in
inc
adc
jbe
sbbb
adc
inc
js
or
jbe
enter
call
clc
mov
and
cmp
ret
subb
fcompl
popa
aas
pop
pop
leave
pop
enter
cld
dec
lea
adc
hlt
inc
add
shlb
je
movsb
pop
pushf
xchg
xchg
ja
xchg
push
clc
mov
ficoms
mov
stc
test
inc
adc
cli
repz
ffreep
fcmovu
and
pop
popa
push
sbb
mov
inc
pusha
inc
mov
scas
push
push
lcall
in
pop
pop
ret
sub
loopne
or
and
dec
sbbl
sub
mov
inc
outsl
cmp
or
bound
cmpsl
add
dec
mul
sub
aad
add
add
or
gs
mov
and
div
cmpsl
push
test
cltd
pop
cmpsb
dec
push
pop
and
hlt
push
js
jmp
xor
inc
and
test
lock
js
sbb
stos
pop
fsubl
jp
sub
insb
push
les
rcll
xchg
sub
cmp
insl
fsub
push
int3
inc
test
cs
ds
jno
or
pop
shrl
push
cltd
mov
lock
jb
lahf
sbb
mov
pushl
xor
push
or
cs
lret
push
jl
cs
es
cli
mov
mov
mov
adc
pushf
cmp
and
popa
mov
outsb
sbb
push
lods
and
or
jg
inc
and
adc
cmpsl
add
sbb
mov
dec
lea
dec
or
or
fs
sbb
and
inc
sbb
mov
imul
bound
push
mov
jmp
push
ffreep
aaa
mov
add
roll
test
mov
mov
mov
clc
scas
enter
mov
enter
cmc
dec
testl
adc
and
andb
and
add
lret
mov
fisubl
xor
jecxz
mov
mov
arpl
fmul
lock
xchg
cmp
dec
xor
ret
rolb
arpl
xchg
shll
inc
push
arpl
push
sub
jnp
in
dec
stos
adc
push
mov
jl
mov
mov
lahf
out
int3
adc
xchg
xor
outsb
xor
sbb
ret
clc
sbb
push
sub
xor
mov
xor
pop
push
das
imul
push
sbb
mov
fwait
sbb
popa
lret
ja
jg
mov
rcrb
rcrb
cs
mov
mov
movsl
pop
lock
mov
gs
jecxz
popf
xchg
andl
in
je
loope
sub
outsl
or
out
dec
cmpsb
jmp
and
repnz
mull
shlb
push
subb
xchg
push
push
add
pop
ret
rcl
mov
push
cmpsl
aas
add
inc
js
je
shll
push
push
mov
inc
push
dec
mov
clc
icebp
push
cs
or
sbb
jb
das
push
nop
mov
sbb
jno
in
out
dec
lahf
repnz
in
aam
cmp
adcb
js
xchg
jmp
dec
pop
jge
movsb
push
mov
add
xchg
or
xor
jb
jbe
or
mov
pop
fdivs
ss
ds
popf
call
lret
mov
sbb
frstor
push
mov
idivb
mov
sub
sbb
cmp
mov
lcall
lret
xchg
std
inc
repnz
das
out
mov
xor
cwtl
push
jle
loopne
xchg
stos
daa
out
cmc
out
mov
xchg
add
ret
je
push
mov
mov
and
cmp
mov
loopne
jbe
xor
dec
xchg
add
fiadds
ds
add
out
jecxz
ljmp
int3
push
jne
int
stos
popf
push
adc
popf
dec
jne
add
xchg
jne
adc
add
push
sbb
cmc
int3
xor
inc
leave
adc
nop
or
je
in
dec
push
cmc
pop
inc
adc
push
sub
inc
inc
outsb
cwtl
jno
inc
inc
adc
in
icebp
push
push
sbb
mov
xchg
out
lea
push
pop
rcrl
adc
pop
ja
fdivl
pushf
fsubl
cmp
sub
repz
mov
into
pusha
adc
pop
mov
push
mov
inc
in
sti
xchg
jnp
push
cmp
out
ljmp
mov
inc
xchg
test
data16
pop
ljmp
xchg
mov
xchg
jle
fdivr
cmpsl
xor
lods
popa
push
roll
aad
pushf
test
lahf
orl
or
insb
arpl
push
dec
mov
mov
out
push
push
testb
test
adc
scas
xchg
enter
gs
mov
and
pop
fbstp
adc
mov
inc
clc
adc
lea
das
repz
scas
in
sahf
aas
add
jmp
and
rcl
cmp
mov
sbb
or
lcall
scas
gs
dec
push
mov
loopne
xor
pop
cmp
cltd
mov
inc
xor
sub
in
insb
dec
cmp
shlb
cld
or
sbb
sub
cmp
std
movsb
lock
mov
sbb
inc
dec
xchg
mov
fisubrl
fdivrs
shlb
mov
mov
sysexit
pop
fistpl
data16
sti
jecxz
mov
xchg
pop
dec
out
dec
in
add
sub
inc
icebp
lahf
shld
mov
add
xchg
into
cmpsl
cmp
cmpsl
testb
cmp
jg
inc
or
add
sahf
ret
je
leave
push
add
testb
mov
pop
packuswb
adc
aas
cltd
jno
push
push
sbb
adc
ja
in
mov
addr16
mov
or
int3
cmp
push
mov
clc
mov
fidivl
xchg
lcall
leave
cld
lods
push
je
cmp
pusha
rolb
addr16
rcrb
push
cltd
sti
cmpsb
add
loopne
in
and
loope
xchg
cs
xchg
sbb
enter
and
cmp
popa
sti
addb
fsts
add
fcompl
pop
leave
mov
not
mov
pushf
das
testl
pusha
cmp
out
insb
shl
push
cmpsb
adc
jg
push
pop
sbb
xor
jae
push
out
push
pop
sub
pop
fwait
mov
andb
pop
xchg
leave
cmp
ret
icebp
ret
adc
imul
fistps
and
lods
add
stos
sbb
dec
inc
or
xchg
sub
cmp
popa
xchg
and
out
pop
push
bound
pop
xor
movsl
cmpsl
lods
mov
adc
cli
daa
repnz
mov
loope
push
push
es
push
xchg
add
xchg
pop
out
pop
inc
pop
add
mov
jns
insb
js
xor
hlt
pop
push
sbb
jbe
cmp
movsb
jg
inc
inc
addb
loop
dec
ret
aas
mov
sub
inc
push
hlt
sbb
nopl
push
push
and
sbb
jle
add
mov
add
xor
push
mov
dec
lret
jl
pop
ret
iret
or
mov
dec
mov
add
stos
sbb
clc
jae
les
aas
aam
and
push
jecxz
jmp
xor
xor
lea
jo
pop
pop
xor
mov
out
jge
mov
imulb
adcb
sub
xchg
arpl
add
int
fwait
sahf
sub
je
adc
add
call
js
mov
and
mov
dec
sub
xchg
push
push
dec
shll
sbb
popf
xor
fisubrs
fdivl
sub
lahf
push
inc
in
test
inc
or
jmp
sub
mov
fcoml
mov
cmp
mov
jecxz
xor
inc
or
lods
fmuls
clc
psllq
iret
leave
adc
testl
adc
or
test
movsl
xchg
cmp
icebp
sub
push
xor
mov
xlat
lods
and
xchg
push
repz
cmpsl
dec
sub
adc
sub
push
inc
mov
xor
fstpl
mov
shr
jne
pop
mov
adc
mov
cmp
cmpsb
loop
cmpsb
iret
cmp
jnp
mov
push
cltd
push
ds
cmpsl
or
jns
std
ror
scas
jge
jb
mov
imul
les
vpextrd
xchg
xchg
mov
cs
aas
dec
shll
cltd
jle
and
insb
xor
and
mov
cmp
and
sub
pop
cwtl
mov
mov
cmp
icebp
scas
add
adc
pop
mov
dec
test
lods
aas
add
jae
data16
ds
popf
inc
aaa
fists
pop
cmp
jmp
sarb
jno
sti
lods
sub
xchg
xor
insb
stos
pop
shll
adc
add
xor
outsb
mov
aas
add
fisubs
inc
out
cmpsl
lcall
pop
mov
out
repz
jle
mov
sub
fcomp
sbb
leave
es
scas
mov
cmp
xchg
sub
or
jl
mov
adc
fistl
cmp
iret
ljmp
out
sahf
mov
sahf
or
out
sahf
dec
ret
leave
or
inc
pop
mov
inc
pop
pop
or
repnz
addr16
adc
or
inc
mov
dec
test
aas
mov
outsb
sub
ret
push
xchg
push
cmp
aam
dec
dec
test
in
xchg
inc
xchg
rcl
inc
stos
pop
or
and
dec
movsb
xlat
shrb
and
push
xor
ror
or
dec
mov
and
add
movsl
push
add
pop
or
xchg
sti
or
cmpl
mov
push
adc
jo
mov
xchg
lea
pushf
hlt
cmp
mov
mov
dec
ss
in
mov
int3
xchg
sbb
sbb
sub
cmpsl
lret
sbb
push
jne
jne
fistl
mov
into
shll
icebp
ds
add
add
jno
popa
scas
or
std
cmpsb
popf
inc
int3
mov
fbld
and
push
xchg
sbb
xchg
popa
test
outsb
bound
push
cmp
outsb
pop
xor
std
pop
out
mov
ljmp
lds
lahf
dec
int
or
cli
cmp
xchg
rcrb
fdivl
int3
adc
loop
jecxz
dec
idivl
jb
imul
push
push
js
push
dec
loop
movsl
jno
sti
fisubrs
imul
fwait
data16
int3
cmp
testb
std
mov
and
dec
push
inc
push
ja
subl
adc
out
sbb
push
sub
sbb
mov
mov
push
xor
sahf
enter
lret
jns
dec
mov
xchg
scas
pop
es
adc
add
aad
xchg
ja
repnz
scas
enter
or
push
stos
xchg
jecxz
adc
sub
repz
mov
xor
cmc
pop
das
out
dec
out
jno
in
push
sbb
gs
fildl
cmp
shrb
aam
fdivs
adc
jns
sbb
mov
fldl
jnp
mov
movsl
jne
cld
sbb
mull
and
dec
sar
into
insb
imul
test
int
mov
aam
jo
daa
xor
test
lods
sar
shrb
test
push
sub
mov
std
aam
rclb
daa
enter
and
xchg
cmpsl
fildll
mov
in
es
popf
jb
xor
popa
lds
or
xchg
scas
pop
sub
int3
or
xchg
jnp
das
cmc
inc
fwait
cmp
int
out
jg
scas
rorl
mov
test
cmc
sub
jns
xchg
sbb
mov
lret
inc
or
pusha
adc
in
arpl
dec
fisubs
out
leave
adc
mov
add
repnz
out
sahf
cltd
test
dec
test
shlb
dec
shr
ds
xchg
dec
xchg
sbb
inc
sahf
into
mov
popa
push
in
ds
gs
inc
pushf
movsb
imul
xchg
add
aas
sbb
inc
and
mov
adc
fst
fwait
bswap
mov
push
clts
loopnew
and
mov
out
push
cmp
arpl
nop
ljmp
mov
pop
ds
jno
hlt
fdivl
test
pop
icebp
shrb
mov
into
loop
sub
das
xchg
xor
fstpl
sbb
add
test
jnp
jae
hlt
lcall
mov
cmp
insl
dec
xchg
cli
cli
adc
xor
lock
lea
fcoms
pop
sub
push
push
aaa
pop
mov
jecxz
sbb
mov
loopne
cmp
lret
fsubl
jp
add
cmp
xchg
push
cmpb
jg
fcompl
imul
es
sub
xor
jecxz
jmp
fwait
movsl
or
sub
push
cmpsl
out
push
leave
pop
bound
shrl
cmc
lods
fiadds
mov
daa
shlb
sub
sub
push
int
xchg
push
xor
jnp
jnp
add
adc
iret
sahf
cmp
add
cmpb
std
icebp
mov
mov
mov
repz
pop
mov
sti
jns
pop
mov
lods
mov
cli
imul
cmpsl
arpl
sbb
std
into
mov
clc
popf
icebp
sti
push
or
sarl
inc
insb
or
jmp
nop
jns
xor
push
mov
jl
push
xchg
push
dec
xchg
jg
in
xchg
sbb
arpl
dec
fisubrs
and
leave
in
xlat
pop
jmp
add
xor
sbb
push
push
dec
push
mov
push
fwait
cmp
jg
inc
mov
daa
jle
insb
lret
mov
rcr
sbb
sub
lret
add
mov
insl
adc
outsl
sti
jb
pushl
jbe
in
cmp
das
sahf
pop
jecxz
movsb
outsl
loopne
cmpsl
pop
dec
jmp
popa
mov
cmp
xor
js
xor
popf
out
negb
and
popa
dec
dec
lea
out
inc
shlb
bound
sub
jle
inc
das
push
mov
inc
movsl
or
movhps
dec
sub
jo
fsubp
dec
dec
cld
xchg
fcmovne
gs
push
scas
pop
cs
xchg
dec
xor
mov
dec
jnp
dec
xor
fistpll
and
add
dec
dec
lret
sahf
cmpb
push
push
mov
stos
xor
sbb
cli
sbb
test
lcall
test
jnp
inc
mov
sti
outsb
ljmp
mov
and
jb
push
and
movsl
popa
nop
sub
cwtl
movsl
and
repnz
xor
stc
push
adc
cmc
fcmovb
inc
iret
stos
add
arpl
and
popa
lock
ss
jmp
std
les
or
adc
js
pushf
pusha
inc
dec
pop
add
test
je
pop
frndint
fnstsw
jne
or
pop
ja
wrmsr
out
dec
scas
popa
scas
mov
push
call
and
sub
cs
enter
inc
mov
iret
rcrb
mov
lcall
outsb
jb
and
inc
pop
sbb
mov
xchg
mov
das
gs
es
push
insb
cmpsb
add
pushf
sbb
movsb
mov
cld
fsubr
or
and
ffreep
cmp
or
dec
inc
mov
sbb
outsl
arpl
dec
inc
or
cwtl
cs
and
in
fwait
mov
stc
insl
mov
mov
push
sub
fidivs
jg
dec
pop
rorl
mov
xchg
and
std
fs
je
inc
stc
inc
add
dec
into
mov
cmp
repz
sub
sti
jecxz
sti
test
add
cs
fcomps
pop
stc
xchg
cs
ljmp
daa
mov
jge
cltd
pop
and
inc
mov
mov
cmp
inc
pop
stos
add
sbb
fwait
mov
popf
lods
out
fimuls
mov
sub
inc
sub
mov
push
mov
rorb
push
stos
xor
or
shlb
test
or
mov
cmp
jne
popa
sahf
push
mov
scas
push
imulb
stos
movsl
adc
je
or
sbb
shrl
pop
pop
test
adc
add
push
or
pop
movsb
push
mov
aaa
cmp
leave
fwait
inc
cmp
test
add
adc
es
mov
cmc
dec
xchg
inc
out
dec
adc
mov
lret
stos
push
aaa
ret
sub
mov
ss
sub
inc
push
xchg
clc
cwtl
jg
mov
sbb
mov
mov
push
sbb
adc
into
mov
sub
loope
movsb
cmp
jmp
test
jns
js
jnp
fs
fdivrl
sub
dec
push
mov
sti
inc
add
dec
pop
xchg
or
xor
test
fldcw
dec
fistpll
jle
loopne
in
xor
leave
loop
jne
es
xchg
pop
cmovno
test
dec
imul
cs
stos
gs
or
sub
sub
and
psubw
cmc
jae
fs
mov
pop
hlt
sbb
daa
pop
jno
addb
xchg
les
mov
mov
ret
xchg
jle
mov
xor
out
ja
call
and
mov
inc
sub
sbb
cmp
or
lret
movsb
sti
test
cld
dec
push
sub
xchg
xchg
insl
test
xchg
xchg
push
mov
int3
lods
mov
cltd
pop
ret
or
push
pop
push
mov
popf
xor
lret
jge
lea
mov
pop
data16
cmp
adc
lock
repz
xlat
xor
sbb
pop
mov
xchg
or
push
cmc
lcall
jecxz
lock
dec
mov
push
fwait
scas
popf
and
aad
lea
push
sub
mov
pop
or
or
hlt
sbb
add
cmpsb
jne
push
inc
out
and
jg
ret
clc
adc
jmp
mov
pop
add
in
jg
aas
xor
test
inc
ljmp
mov
xor
sub
mov
adc
pop
inc
mov
mov
cltd
xor
mov
decb
in
and
push
dec
lock
out
jnp
mov
mov
xchg
pop
psllq
gs
push
push
sub
push
addl
jp
gs
pop
cli
loope
xor
or
lods
xchg
pop
push
loopne
add
pop
pop
and
push
fcoms
enter
stos
and
fistps
xor
lea
dec
gs
push
pop
xchg
and
cld
jecxz
xchg
push
xor
or
sub
enter
cwtl
cmp
sbb
jbe
pcmpeqw
adc
cmpsb
cmp
iret
in
xor
fwait
push
fists
xor
movsb
lods
add
fs
data16
adc
insb
popa
and
adc
mov
jns
or
leave
out
mov
rolb
ds
mov
fsub
sub
adc
mov
test
es
scas
enter
bound
mov
sbb
sti
xchg
or
cs
cmp
jmp
fscale
add
sub
pop
xchg
loop
xor
jg
test
aas
add
sti
shll
push
hlt
leave
andb
mov
bound
rol
mov
sub
xor
mov
jge
mov
je
test
ds
xchg
insb
inc
lret
daa
aam
bound
xchg
mov
mov
or
data16
pop
fisttpll
cmp
ss
bound
push
adc
in
aad
call
jnp
dec
test
cs
into
push
xorb
jnp
cmpsl
jb
inc
insb
outsb
rolb
outsb
setne
xchg
inc
pop
in
sub
lds
inc
repnz
and
ds
pop
pop
aas
icebp
or
outsl
out
js
push
gs
sbb
sbb
dec
pop
mov
mov
addl
sbb
mov
in
in
cwtl
and
mov
xor
pop
cmp
sub
cwtl
jne
dec
ja
adc
repz
into
and
dec
sbb
sti
inc
aas
push
out
outsb
rcrb
pushf
popf
mov
out
pusha
test
rorb
rol
das
xchg
imul
mov
dec
aas
sub
push
sbb
inc
add
ss
roll
cmp
loopne
push
xor
push
imul
push
addr16
das
jmp
das
inc
scas
orb
dec
divb
adc
test
loopne
xchg
adc
xchg
cli
pop
stos
xor
js
test
jl
push
stc
mov
dec
jnp
add
mov
shr
pop
test
jne
add
push
fs
test
daa
jns
pop
ret
lock
repnz
andl
jmp
repnz
bound
mov
lret
add
ss
jns
sti
and
jl
or
push
xchg
out
aam
imul
pop
add
and
fistpl
iret
push
xorl
lahf
in
mov
je
or
into
sbb
xchg
inc
test
cmp
aas
xor
jae
out
pop
aas
js
nop
adc
ja
mov
test
sub
and
pop
and
fidivs
pushl
arpl
ljmp
daa
daa
iret
test
call
loop
loopne
cmp
shll
cwtl
repz
idivl
mov
sub
or
sahf
arpl
or
add
lea
sbb
jg
jb
fdivr
nop
pop
cmp
aad
subl
xor
cmp
stc
data16
daa
idivl
rcr
xchg
push
and
cltd
imul
xor
aad
xor
cmpl
jle
repz
cs
cmpsb
clc
loope
fisubs
cmp
fld
and
push
dec
insb
test
sub
inc
xchg
gs
fbld
daa
jmp
or
push
mov
lea
or
aad
cltd
imul
pop
movsb
xchg
cmp
mov
mov
sub
pushl
cmpsb
jne
cmp
inc
in
pop
add
and
mov
fs
sub
sub
fisttpll
aad
cmp
loop
and
xor
fwait
xor
cmp
xor
sub
imull
rcrl
xchg
or
jb
std
inc
testb
fdivs
cltd
mov
divb
mov
dec
xchg
jl
or
nop
mov
add
xchg
aaa
dec
jb
push
add
shll
test
cmpsl
jne
or
sbb
xor
arpl
pushf
push
ret
pop
in
push
pusha
popa
je
lret
in
or
mov
pop
jns
aas
lahf
pop
xor
int3
push
adcb
lcall
aaa
jae
fwait
dec
scas
push
inc
cs
push
insb
or
xor
scas
inc
scas
mov
iret
rolb
out
sub
jmp
inc
mov
xor
mov
ret
in
pop
push
andb
int3
leave
fadds
int3
aad
jle
ljmp
cmp
pop
repz
out
mov
imul
jmp
lods
repz
enter
inc
inc
inc
call
shll
adc
in
loopnew
jnp
adc
cmc
cmp
aam
add
xchg
lret
sbb
test
add
lcall
test
jmp
cmp
dec
shrb
dec
xchg
scas
inc
dec
int
outsl
mov
and
push
dec
dec
jp
cmp
push
sub
test
sbb
std
xchg
push
shlb
call
ret
xor
movsb
rorb
adc
nop
test
nopl
pop
mov
mov
inc
fistpl
cmpsl
into
aad
push
imul
xchg
inc
pop
sub
mov
je
bound
jmp
fwait
or
mov
inc
test
das
test
xchg
stos
xor
xlat
inc
loope
je
out
sub
inc
stos
call
lcall
sbb
or
mov
and
push
xor
cmp
pusha
outsl
test
xchg
ret
pushf
push
dec
xchg
ds
popf
xor
dec
mov
mov
jp
jo
aad
sti
xor
xchg
call
icebp
mov
outsl
repz
test
cs
xor
sub
push
cmpsb
inc
pop
gs
outsb
mov
movsb
jmp
jno
loop
lock
ret
fimuls
sub
pop
out
sbb
sub
movsl
xor
mov
call
xchg
push
in
arpl
negb
repnz
mov
mov
decb
cld
pop
xchg
leave
sbb
inc
or
dec
push
test
rcl
sbb
aas
or
lods
add
mov
sub
push
loopne
cmp
lahf
mov
out
sub
cwtl
sbb
test
hlt
mov
int3
or
xor
test
lret
pop
jnp
jne
jp
xlat
out
cwtl
scas
je
loopne
rorl
and
push
and
pop
loope
repnz
mov
push
inc
mov
jo
jp
das
js
fcmovnb
sub
dec
or
mov
sbb
lds
sbb
jno
cmpb
mov
in
dec
inc
test
mov
push
imul
cwtl
and
insb
push
mov
mov
push
push
mov
clc
mov
mov
daa
sub
mov
mov
adc
call
xor
dec
insl
inc
je
push
test
std
repz
sahf
sbb
xchg
xor
add
mov
cli
mov
jmp
js
and
and
sub
lret
sub
sqrtps
fidivs
mov
movsl
nop
dec
adc
xor
sahf
pop
push
add
inc
pop
popa
lods
jns
mov
mov
add
repnz
and
das
mov
lds
dec
iret
jbe
push
std
jl
pop
out
xlat
mov
sub
insb
and
push
pusha
add
lret
xacquire
mov
mov
inc
subl
mov
mov
cld
pop
mov
sbb
dec
pop
fisubrs
es
movsb
aad
pop
inc
add
push
and
xor
mov
sbb
xor
enter
cmpsl
sub
aad
push
dec
xchg
aad
push
out
ror
xor
mov
test
xor
jae,pn
xchg
aad
sub
mov
pop
push
fucomip
mov
fwait
jnp
jl
dec
jmp
aaa
stc
mov
movsl
and
push
movsb
aas
add
jb
dec
jle
leave
xchg
sbb
bound
push
push
inc
mov
dec
inc
pop
outsb
jle
mov
enter
xchg
out
gs
fiadds
out
and
lods
enter
ret
jmp
and
lods
push
push
sti
cmp
call
lahf
cs
ret
push
xor
fildll
and
or
cmpsl
push
iret
add
or
or
adc
insb
mov
xor
fwait
jge
cmp
sub
or
push
call
lahf
stos
daa
mov
or
pop
fsubrs
adc
and
and
lcall
sub
mov
mov
mov
aaa
fs
std
cmp
dec
je
push
or
push
mov
jge
pop
imul
push
movsl
pop
mov
xor
add
imul
jmp
cmp
adc
sbb
inc
add
pushf
cwtl
mov
sbb
daa
imul
sbb
pop
inc
pop
sub
cmpsb
test
xor
les
adc
add
popa
pop
jns
push
daa
mov
push
or
fcoml
xchg
test
dec
in
lret
push
inc
lahf
test
movsl
in
fldcw
add
das
andb
mov
cmp
daa
sarb
out
pushf
push
xor
mov
leave
repz
dec
daa
int
push
stos
mov
es
aad
maskmovq
xchg
mov
aaa
push
push
xchg
pop
mov
push
sub
jle
push
sbb
add
xchg
xchg
fildll
cmpsl
cmpsl
mov
mov
pop
xchg
pop
xor
xor
mov
sbb
fwait
rorl
sub
xchg
jnp
inc
loope
lods
mov
not
bound
cmc
sar
inc
dec
pop
xchg
dec
xchg
leave
push
sbb
and
popf
dec
inc
mov
adc
or
mov
cs
into
fldt
inc
rcrb
xor
mov
adc
push
stc
pop
fbld
in
cmp
cmp
and
adc
nop
and
test
or
outsl
dec
out
xor
cli
push
pop
shll
iret
sbb
fdivrl
movsl
lret
xchg
mov
mov
jl
sub
mov
lods
dec
mov
cli
scas
sub
push
addr16
adc
lret
ss
scas
stos
test
xor
push
adc
popa
pop
lds
pop
jo
mov
mov
mov
jnp
nop
frstor
lea
in
loopne
mov
lret
dec
jbe
clc
mov
sbb
push
movsb
lcall
xchg
cmp
shrl
or
ret
rorl
xchg
and
out
jp
aad
push
rcll
aam
dec
cmp
inc
sub
data16
adc
and
xchg
mov
outsb
push
jg
mov
dec
sbb
push
ja
xchg
jl
inc
jle
cmp
lds
jecxz
push
repz
icebp
test
movsl
rcrb
pop
mov
cmp
push
or
pop
fwait
push
push
xchg
insl
div
pop
movsl
jbe
daa
cltd
adc
pusha
pop
dec
xchg
and
iret
in
push
rclb
mov
fsts
or
std
movsb
ljmp
add
inc
xchg
rcr
sbb
fucomp
sbbb
xor
movb
pop
xor
adcb
or
or
jno
inc
jp
add
or
mov
dec
sar
popaw
sub
mov
in
fnstsw
in
scas
sbb
mov
fcomps
lcall
cmpsb
and
fdivs
js
dec
rcrb
cmp
push
fisttps
les
push
sbb
xor
ret
jo
jno
xor
aam
jecxz
or
aad
outsl
imul
sbb
popa
adc
and
mov
arpl
lea
pop
incb
sbb
movsl
fsubrp
pop
sbb
cmp
mov
pusha
inc
fstpt
cmpsb
shrb
gs
lds
mov
pop
add
hlt
jbe
fs
inc
inc
jle
ret
iret
jge
sbb
pop
mov
add
orl
and
das
xchg
call
loope
xor
dec
or
xchg
enter
pop
dec
fmull
sbb
mov
test
and
cld
add
out
jg
pop
mov
ljmp
xor
push
jmp
or
mov
mov
and
and
cwtl
bound
pop
mov
int
adc
sbb
jg
out
dec
mov
outsb
dec
mov
jecxz
fnop
or
notl
push
shrl
enter
jnp
insb
jmp
xor
pop
ljmp
push
add
sub
repz
jb
out
ljmp
xor
roll
xor
popf
xchg
cmp
sbb
out
pop
and
xchg
mov
fbld
jge
or
cmpsl
cmpsl
iret
dec
sub
or
pop
int
mov
ret
cmp
in
pop
jbe
std
push
out
lret
cmp
lds
or
push
mov
mov
call
mov
call
pop
and
inc
idivb
outsl
pop
daa
add
aas
jnp
mov
fldcw
jmp
rsqrtps
xchg
cmpb
fwait
push
lcall
add
ss
and
int
aaa
mov
lea
lods
cli
xchg
inc
jmp
xor
loope
iret
hlt
pop
in
inc
into
jo
cmp
ljmp
sbb
jge
cwtl
or
test
sbbl
fwait
rcrl
int
pop
dec
sub
fs
aad
daa
stos
xor
inc
mov
rcll
insl
iret
xchg
mov
xor
jno
adc
push
push
sbb
mulb
in
sub
push
pushf
stc
jne
mov
mov
and
add
xor
adc
lea
lea
imul
mull
lods
jb
int
imul
mov
jg
flds
iret
push
cli
fs
stos
mov
cli
pop
adc
push
into
nop
or
jmp
das
and
loopne
push
xchg
out
int
jecxz
outsl
stos
pusha
sti
mov
aaa
rorb
xchg
out
fdivs
fbld
out
scas
jne
xorb
mov
jb
arpl
sarl
loopne
jns
mov
lret
pop
jge
lds
push
in
pop
cmp
mov
gs
call
jge
clc
pop
cmpsl
test
pop
adc
lods
xchg
cmpsb
aam
add
push
in
sub
and
mov
sbb
loop
push
xor
retw
mov
in
mov
aas
inc
decl
movsl
idiv
sbb
pop
enter
dec
mov
or
push
arpl
or
mov
adc
repz
sti
jp
mov
aas
mov
mov
arpl
and
cmp
sbb
ss
jo
inc
mov
push
or
lcall
rorb
mov
idivb
mov
and
cpuid
push
cwtl
jp
popa
fidivl
add
inc
dec
dec
xor
jae
jg
shl
xor
jp
dec
xchg
cwtl
fmul
leave
loope
in
scas
xor
loope
hlt
aad
or
push
jg
pusha
aad
jnp
imul
push
lahf
push
shlb
test
scas
mov
stc
test
int
ret
add
push
std
sbb
hlt
repnz
sub
out
arpl
add
xchg
clc
push
and
int
xchg
push
pop
adc
xor
cltd
inc
xchg
das
sbb
mov
mov
into
ds
adc
sarl
ret
jb
dec
sub
lds
movsb
data16
out
aaa
shll
mov
inc
push
iret
loop
cld
data16
mov
pop
cmp
jmp
xchg
aaa
xor
fs
ja
in
jecxz
push
pop
rolb
or
lret
push
insl
lea
xchg
sub
popa
xchg
lea
or
xchg
mov
fiaddl
mov
js
in
movsb
fildll
push
roll
or
lock
xchg
cltd
pop
mov
jns,pn
mov
jae
jge
pop
mov
fnstsw
push
cmpsl
in
cmpsb
adc
sbb
inc
sti
negb
fists
pop
outsl
mov
cld
cwtl
pop
cmp
insb
xor
scas
mov
mov
jl
sbb
popa
insl
dec
dec
xchg
sbbl
mov
inc
lret
and
int3
add
enter
call
cmp
jmp
out
imul
outsl
dec
lock
ja
mov
xchg
icebp
push
dec
test
xchg
pop
mov
mov
int
sahf
in
cld
fsts
sahf
adc
ret
pop
rcll
xchg
cltd
cwtl
pop
fcmovb
fadd
cltd
jl
mov
sbb
ret
imul
loopne
dec
hlt
pop
scas
incb
xchg
pop
jp
lea
cmp
add
out
stc
push
mov
clc
xor
cmc
push
push
test
dec
repz
les
fcmovbe
and
jne
lea
loopne
sub
add
pop
dec
push
or
fimull
jp
clc
xchg
bound
popf
jl
mov
or
adc
repnz
test
cld
or
pusha
cmpsl
sub
dec
jp
loop
out
repnz
loope
mov
ret
rep
test
hlt
jle
xor
and
sub
add
mov
mov
adcl
cmp
sub
mov
mov
sub
xlat
cmp
push
cmpsl
pop
jno
outsb
rcl
inc
enter
nop
push
push
xchg
mov
int
bound
stc
xchg
and
jle
cmpsb
arpl
push
lret
mov
pusha
lock
pop
fdivs
mov
xchg
add
cmpl
push
push
push
outsl
push
xor
push
inc
xchg
pop
out
cmpsl
movsl
lret
hlt
idiv
call
mov
pop
sahf
in
dec
repnz
ss
sub
adc
jg
xchg
jnp
pop
and
stc
and
mov
sbb
push
idiv
mov
mov
xlat
jnp
push
ss
push
ret
bound
cs
enter
inc
loopw
loope
and
addr16
or
scas
stos
cmp
arpl
fdivl
inc
jmp
sbb
add
scas
in
mov
sti
fsubrp
add
in
aam
sahf
push
icebp
mov
setle
push
jnp
sahf
fwait
je
call
shrb
push
sub
cli
mov
mov
out
rcrb
ss
push
cmp
insb
pop
xchg
inc
imul
addr16
test
ljmp
sti
sub
push
ficoms
jae
out
sbb
aam
ljmp
xchg
loope
push
ret
popf
cld
daa
mov
bound
push
inc
cmpb
sub
sar
lcall
out
test
sbb
mov
movsb
add
sbb
rclb
sub
clc
pop
cli
out
pop
and
dec
outsb
into
pop
test
jle
sarb
dec
test
sub
mov
insb
rol
out
and
jns,pn
lea
pop
mov
sti
fistps
mov
lret
insl
sti
adc
inc
mov
cmpsb
mov
sub
push
mov
mov
sbbl
pop
out
das
mov
inc
or
pushf
cmpb
sub
xor
enter
outsb
cmp
add
mov
imul
push
xchg
pushf
js
loope
or
lret
cmp
ss
adc
and
mov
ljmp
add
sti
jge
mov
adc
pusha
inc
sbb
repnz
nop
ss
popa
aad
add
xor
jnp
icebp
lods
mov
inc
je
movsb
cwtl
dec
sbb
lret
xchg
mov
pop
and
jl
lods
cli
push
int3
ljmp
pusha
orl
add
or
fsubs
shl
mov
adc
iret
rorl
and
pop
xor
scas
lods
sub
aad
out
andb
ret
or
in
nop
gs
push
mov
mov
in
cmp
push
insb
sub
or
pop
add
int3
cmpsl
outsb
jecxz
fcoml
sbb
xchg
out
adc
pop
mov
andb
push
in
ja
pop
jmp
in
sub
sbb
lea
mov
xchg
jbe
mov
repz
pop
stos
rorb
repz
bound
pop
insl
insb
adc
lock
push
or
sbb
movsl
hlt
push
add
imul
mov
stc
fldenv
push
push
and
xchg
jb
push
jge
out
gs
sahf
inc
sub
aas
mov
push
scas
outsl
push
jge
cmp
push
cltd
jns
or
cltd
ja
or
mov
or
bound
add
jl
idivl
outsl
imul
jbe
mov
fcompl
cs
jp
push
repz
pop
aam
into
scas
mov
ja
cmp
mov
jl
int
push
ret
sub
mov
loopne
sahf
ss
jp
push
adc
inc
and
inc
test
add
add
mov
sub
xor
xchg
jb
int
gs
inc
inc
cmp
sub
fsubr
jge
mov
cmpsl
jnp
and
push
xchg
scas
int
xchg
mov
loope
leave
leave
xchg
aam
ljmp
pushf
mov
mov
stos
mov
jns
fcmovbe
das
xor
inc
push
adc
jns
xor
fnsave
cmp
divb
out
insb
mov
mov
inc
in
pop
mov
dec
addr16
sbb
rcll
cmpsl
in
jb
adc
pop
and
in
out
ds
jns
inc
push
jg
rcrl
mov
out
int3
push
xchg
mov
pop
shl
xchg
insl
xlat
outsb
dec
fwait
sbb
loope
add
daa
jo
inc
sbb
sbb
test
and
mov
aas
cmp
jno
repz
insb
out
les
adc
fnstsw
repz
into
out
push
jl
hlt
xchg
dec
loope
or
pop
sbb
mov
cwtl
fisubrs
mov
inc
loope
mov
fidivs
rcr
push
lret
and
rcrl
pop
js
fnstcw
cltd
dec
outsl
mov
xchg
xor
inc
push
jle
jl
int3
popa
pop
inc
pop
dec
mov
lods
mov
inc
rcrl
pusha
js
inc
jbe
shr
idivb
aaa
ror
cmp
into
insl
enter
xchg
lock
sti
inc
mov
xor
dec
jo
fs
inc
adc
mov
sti
movsb
sbb
fwait
stos
mov
jl
pushf
mov
int3
dec
jl
scas
out
xlat
inc
add
xor
in
movsl
mov
pushf
ljmp
das
sbbb
push
pop
jmp
mov
dec
inc
and
sahf
add
xor
jmp
jb
xor
insb
mov
jg
call
stos
sarl
pusha
ret
imul
pop
cmp
adc
icebp
ljmp
mov
sub
xor
mov
add
pop
lahf
sub
push
inc
or
sbb
xchg
daa
nop
xor
pop
cmpsl
or
lock
call
into
shl
jb
jb
mov
inc
cld
or
or
xchg
aas
aam
mov
in
sar
inc
cltd
and
cld
and
mov
mov
xor
imull
and
push
mov
cmpsl
testl
ss
xor
into
popf
into
in
enter
xchg
pop
jne
mov
sub
xorl
hlt
mov
testl
sub
or
sti
andl
ret
loope
sub
imul
pop
cmp
mov
orl
lcall
in
push
and
aam
pop
or
outsl
outsl
std
aas
pop
adc
nop
xlat
mov
sub
push
enter
pushf
lahf
rcl
sbb
mov
movsb
inc
pop
xchg
das
in
gs
pop
cltd
inc
push
fldenv
adcl
repz
stos
cmp
push
ss
lea
jnp
lods
shlb
sub
adc
sahf
mov
mov
loope
xchg
outsl
cmpxchg
inc
lds
in
stos
les
lfs
icebp
and
ljmp
or
push
fadd
xchg
lcall
sub
mov
mov
mov
push
mov
lods
adc
stos
cwtl
xchg
jbe
jge
loope
adcb
gs
aad
pop
daa
into
cmp
insb
cmp
inc
mov
mov
push
dec
outsb
fimuls
es
fadd
push
mov
jno
fcmovnu
enter
lea
mov
pusha
in
jecxz
es
sbb
dec
xchg
les
pop
mov
xchg
test
and
inc
xchg
movsl
stc
cmp
inc
ljmp
lret
fcomps
enter
loope
xor
fldt
add
adcb
push
sbb
push
jne
or
arpl
cmp
test
orl
repz
adc
roll
xchg
jns
fst
sub
mov
add
cmp
fsubr
and
inc
hlt
cmp
loop
cmp
insl
cmp
pop
xchg
jne
je
loope
xor
pop
jmp
cltd
sub
pop
inc
inc
dec
shl
add
std
jmp
jns
dec
aad
ja
mov
mov
inc
cs
push
in
dec
insb
out
and
pop
push
mov
jne
push
push
add
xchg
add
gs
inc
out
cmpsb
pop
cmp
mov
jns
xlat
cwtl
cmpsl
cs
sub
inc
sahf
jnp
stos
dec
out
lods
dec
xchg
notb
call
loopne
loope
popa
mov
lea
imul
sbb
mov
xchg
jnp
jb
dec
dec
ror
cmp
aam
in
in
mov
sub
xchg
mov
or
enter
mov
stos
cmp
loope
fcompl
dec
test
call
sub
push
in
jmp
ret
mov
daa
sbb
rcrl
ss
xchg
mov
int
sub
rorb
mov
aaa
repz
sbb
mov
dec
push
sbb
subl
stos
jo
pusha
enter
dec
lods
cmp
inc
inc
inc
jl
sbb
int3
ss
adc
sbb
add
pop
iret
push
ret
movsl
cltd
lock
xor
repz
loopne
test
int3
inc
lds
fdiv
mov
dec
cld
mov
pop
pop
out
adc
push
adc
iret
ds
jne
mov
lock
in
icebp
ud2
mov
xchg
sub
outsl
pusha
das
pusha
xchg
inc
cld
test
scas
add
std
cltd
dec
mov
filds
cmpsb
stos
jp
int
sbb
dec
cmp
data16
and
adc
sub
mov
and
or
or
bound
repnz
int
popf
mov
test
test
lret
jecxz
and
test
in
pop
repz
mov
xor
xchg
test
out
loopne
ljmp
xchg
lock
adc
out
repz
stos
xchg
sub
shll
xchg
jle
int
add
xchg
cli
js
cmp
inc
jnp
mov
pushf
rol
and
cmp
sub
bswap
pop
icebp
nop
add
subl
sbb
sub
cmp
fwait
add
mov
push
out
pop
push
or
out
ljmp
sub
int3
jnp
movsl
lahf
xchg
or
movsl
leave
mov
call
ss
dec
repnz
adc
add
push
std
imull
inc
push
cwtl
frstor
sbb
inc
lcall
or
push
subl
not
das
or
xor
lea
push
jge
push
lcall
aad
cmc
xor
mov
jo
in
ret
hlt
cs
push
mov
lods
inc
jp
dec
idivb
popf
add
repz
fst
push
mov
jg
insl
insl
jle
xchg
cmp
inc
push
test
pop
testl
pop
or
xchg
sbb
outsb
mov
stos
mov
dec
xlat
movsb
mov
add
or
lret
mov
mov
sbb
dec
jle
add
mov
adc
stc
xchg
adc
lahf
mov
stos
pop
sbb
fwait
add
push
outsb
inc
mov
or
adcl
sub
push
mov
icebp
pop
adc
xor
loop
and
pusha
xlat
in
loopne
mov
ret
jns
jle
insb
cmp
movsb
cmpsl
fwait
xor
std
dec
nop
sbb
lret
insl
inc
sub
pop
push
sbb
inc
push
xchg
jg
cmovns
vsqrtpd
mov
test
jne
push
div
or
xlat
shlb
mov
mov
lret
or
jmp
dec
imul
movsl
mov
fdivs
push
cmpsb
movsb
fs
pop
fbld
rcrb
flds
mov
pshufw
or
sub
jae
jle
fsts
hlt
imul
aas
lahf
sub
pop
jae
imul
jne
imul
stos
gs
into
jp
mov
jno
inc
stc
aad
loopne
cmp
inc
sti
pop
jne
adc
test
jl
sbb
data16
lds
cmp
adc
mov
int
xchg
push
sub
inc
adc
cli
push
scas
test
mov
lahf
stos
call
out
rorl
push
jb
mov
arpl
lds
pop
stc
lods
adc
bound
add
dec
setp
fisubrl
mov
clc
mov
lods
pop
sub
push
cmp
sbb
mov
push
loop
fsubp
pop
inc
cmp
inc
insl
addr16
stc
test
aas
inc
jno
mov
push
shll
add
cmpsb
nop
js
pop
jmp
add
out
in
or
in
adc
stc
dec
aad
or
sahf
pop
icebp
sub
add
in
fs
pop
dec
out
aaa
mov
push
arpl
xchg
mov
xchg
jle
mov
lret
inc
dec
cmpsl
insb
insl
push
dec
fwait
jo
mov
loope
mov
mov
cmpsb
sbb
data16
mov
sbb
jno
mov
mov
js
inc
xchg
or
inc
xor
ret
add
dec
dec
or
mov
repz
gs
cwtl
adc
jg
adc
mov
push
jae
mov
xchg
jle
adc
es
sub
mov
sbb
andl
int
pop
arpl
pop
or
mov
orl
sbb
fdivl
and
pop
pop
mov
les
and
outsl
aas
divb
sbbb
dec
in
lock
jbe
repz
pop
sbb
hlt
aas
stc
js
gs
jno
ljmp
adc
dec
adc
cwtl
repz
sbb
test
xchg
jecxz
sub
push
dec
mov
insl
sahf
cmpsb
push
push
ret
jecxz
or
cmpsl
iret
and
and
or
inc
pop
mov
ljmp
inc
rolb
arpl
jne
enter
mov
sbb
adc
xlat
cmp
and
sub
pop
lds
lret
adc
in
jbe
pop
mov
mov
pop
lock
leave
out
jae
fcomps
sbb
jg
sub
inc
sub
bound
cmp
leave
rorl
adc
mov
mov
jae
lcall
popa
jle
loope
inc
das
xor
fldcw
popf
and
jp
fwait
add
mov
into
and
out
gs
movq
leave
mov
ret
xor
fimull
cs
stos
adc
stos
je
push
or
iret
push
sbb
ret
mov
mov
mov
pop
and
leave
dec
std
das
pop
movsl
in
mov
das
psrad
xchg
or
cld
hlt
adcl
dec
out
rcrb
enter
bnd
mov
push
cmp
and
jmp
loope
fwait
sub
mov
xor
add
pop
mov
or
xchg
mov
or
imul
xor
mov
or
jo
shlb
cmp
xlat
mov
xor
sub
ret
enter
mov
frstor
push
xchg
cmp
xchg
cmp
nop
push
dec
repnz
repnz
enter
and
adc
pop
mov
pop
test
repz
aaa
cltd
in
aad
es
imul
fdivrl
jl
pusha
stos
xchg
jl
sub
jle
xchg
and
rcrl
out
add
xchg
jle
roll
mov
jge
out
jno
mov
ljmp
stos
lret
or
add
aas
cmpsl
mov
into
adc
jbe
mov
xor
cmp
add
sti
ds
and
push
test
pop
shlb
ficompl
dec
clc
mov
sbb
lahf
dec
xchg
aad
inc
jo
jl
int3
jmp
and
cmp
testl
aad
jnp
shr
jge
lret
sub
mov
cmp
cmp
pop
adc
add
cli
mov
cli
mov
por
jno
dec
jmp
cld
out
push
in
cwtl
push
fs
cwtl
orb
xlat
lock
push
or
rorl
mov
cmc
dec
xchg
ret
adc
in
clc
loope
mov
sub
in
sbb
cwtl
sbb
fucomip
lret
pop
sub
insb
scas
inc
xor
out
adc
push
repnz
push
push
xor
and
clc
xorl
div
loope
shlb
pop
sbb
icebp
lcall
out
inc
and
xor
into
dec
jo
xchg
sti
xchg
sbb
mov
outsl
cmp
mov
mov
cld
and
lds
icebp
jnp
cmp
xchg
mov
xor
pop
fisubs
sbb
jb
pop
mov
cld
xchg
sti
jecxz
and
add
in
adc
sub
adc
pop
push
pushf
sub
test
aaa
pop
xor
jge
lea
pushf
mov
xchg
dec
push
in
push
aaa
jnp
jbe
dec
jae
notl
mov
fldenv
push
lock
ja
sbb
xlat
test
nop
mov
outsb
mov
push
mov
fists
and
roll
mov
pop
sbb
dec
jo
lods
mov
fstpt
mov
add
jle
imul
sbb
cmp
sbb
cli
js
sbb
lods
int
fiaddl
jnp
pop
or
lds
loopne
xchg
sbb
xchg
test
out
fnstsw
mov
pop
loopne
loop
rorl
js
pop
add
jno
pop
add
fisubs
dec
ret
mov
mov
pop
mov
pusha
imul
pusha
shrl
xor
pop
pop
inc
mov
cmp
dec
ja
sub
hlt
and
sbb
andl
jo
push
les
pushf
xor
mov
push
push
imull
mov
imul
lcall
insb
and
jl
dec
cwtl
and
scas
xor
pop
das
hlt
mov
pop
movsb
bound
mov
adc
fwait
in
sbb
adc
inc
mov
mov
push
mov
subl
inc
cltd
dec
xchg
mov
or
mov
mov
dec
or
xchg
nop
cmpsb
imul
mov
mull
insl
data16
fsts
adc
xchg
cmc
ret
sar
jge
inc
lcall
ret
mov
push
sti
dec
mov
pop
sbb
jnp
sub
mov
scas
cmp
lret
mov
rcr
push
mov
out
and
mov
inc
sub
repnz
sbb
adc
arpl
xchg
aas
jae
inc
add
fsubr
dec
insl
repnz
repz
cmp
xor
and
add
sub
or
aam
sti
lods
cmp
fildll
xchg
sub
adc
repnz
std
bound
push
adc
rcrb
es
test
mov
push
sbb
lock
std
out
je
jne
lods
fwait
sbb
jnp
movsb
push
test
xlat
xor
jne
out
lea
shll
push
push
daa
add
jle
cwtl
mov
std
push
in
loope
call
mulb
adc
sbb
cmc
and
mov
mov
xchg
xchg
pop
iret
mov
lret
fwait
daa
add
lock
mov
mov
inc
or
mov
js
xchg
or
mov
cmp
fidivrl
data16
mov
or
in
sti
lods
out
mov
sub
xchg
jno
inc
repz
nop
xor
mov
jbe
push
xchg
cs
mov
sub
adc
leave
mov
mov
aam
mov
cmp
push
shlb
mov
mov
std
dec
aaa
inc
jge
sbb
jmp
les
in
mov
push
lds
cs
call
or
pop
jl
es
jnp
push
push
hlt
mov
inc
mov
scas
shl
xor
aad
out
popf
aas
ret
sub
sub
shll
cwtl
fisttpl
sbb
push
mov
pop
rcr
adc
xchg
fsts
cmpb
jb
es
jae
stos
and
popa
pop
addb
pop
push
cwtl
jnp
fdivl
dec
ret
xor
lock
sarb
stc
sbb
mov
mov
scas
movsl
aaa
cltd
fcmovnu
call
mov
adc
popa
test
mov
ja
dec
xchg
movsb
mov
add
jecxz
pusha
dec
push
adc
clc
dec
mov
fucomp
inc
cld
enter
mov
xor
nop
dec
dec
pop
mov
cli
lahf
mov
lar
jg
mov
repnz
ret
cmpsl
add
xor
pop
sbb
cld
es
iret
ds
mov
xchg
mov
aad
mov
cwtl
scas
inc
es
incl
mov
cmp
cmp
dec
cmp
and
ss
ret
sub
aam
mov
adc
xchg
inc
push
jb
mov
sti
mov
in
loop
out
xchg
dec
xchg
cs
push
aaa
dec
aaa
fucomp
mov
add
movsl
xchg
subb
and
lods
xor
push
je
jne
mov
pusha
mov
shrb
ja
push
or
mov
mov
pop
ja
ret
adc
mov
aam
call
sahf
jns
inc
xor
jo
stos
pop
rclb
mov
push
ret
and
cmp
or
in
mov
insl
aad
leave
test
mov
inc
cmp
pusha
jmp
test
mov
call
push
in
xor
add
dec
xchg
out
rolb
call
push
pusha
insb
outsb
repnz
ds
faddp
dec
or
test
sbb
arpl
mov
fcoms
jns
mov
popa
mov
mov
dec
push
ljmp
cmc
leave
ss
out
xor
aad
jne
fyl2xp1
lea
sub
xor
sarb
outsl
jmp
mov
jmp
int3
out
aaa
sub
mov
ja
jecxz
xchg
pop
shlb
inc
inc
mov
push
out
add
nop
adc
fs
pop
jnp
mov
divl
inc
lea
adc
loope
mov
stos
imul
repnz
aaa
mov
in
cmp
imul
rclb
repnz
test
sub
lcall
add
push
jno
xchg
or
and
jmp
insl
dec
loope
movsl
push
loopne
xchg
out
mov
ljmp
mov
jmp
sbb
in
push
sahf
testb
mov
or
sub
jge
xchg
xchg
mov
loopne
mov
outsl
add
pop
out
pop
jl
and
jo
mov
pop
enter
cmp
loopne
adc
cmp
mov
xor
lea
mov
leave
and
dec
add
jne
jge
push
mov
std
add
adc
push
jl
or
sbb
pop
pop
mov
insl
mov
sbb
ret
cmp
mov
gs
test
repz
or
fbld
js
mov
push
and
enter
xor
aas
mull
sub
dec
jno
mov
sbb
xchg
movsb
cmc
loopne
cmc
push
cltd
adc
aam
dec
ficoml
lods
test
adc
fcmove
sar
and
repnz
and
shlb
ja
sub
outsb
insl
sub
ja
mov
xchg
cwtl
sub
sbb
lcall
sub
mov
sub
cltd
js
cmc
cmp
fmull
pop
mov
push
inc
mov
je
fwait
dec
cli
stos
jb
inc
scas
roll
cmp
popf
les
in
adc
and
pop
bnd
fsubrl
xchg
fcompl
lret
jnp
mov
mov
lcall
movsl
ljmp
jo
xchg
lret
xchg
cli
lcall
call
jge
lods
sti
sub
movsb
add
jns
popf
push
nop
mov
je
xlat
xor
pop
jne
aas
mov
pop
mov
jge
jmp
mov
in
mov
cmp
sub
xchg
in
lret
push
and
add
sub
jp
ret
xlat
or
ret
aas
push
xor
enter
lock
incl
lahf
dec
repnz
ret
jbe
bound
pop
pop
sub
mov
bound
cli
cmc
je
lret
jle
jnp
test
sbb
test
shrl
flds
push
xchg
push
fmull
sahf
daa
outsb
leave
push
in
daa
push
out
add
into
sub
popa
cld
shll
jg
push
xchg
into
addl
pop
jns
inc
push
inc
fwait
push
lahf
push
xchg
jg
push
xchg
push
add
sahf
test
scas
jno
and
in
fcoml
inc
fistl
aam
adc
aam
or
ds
push
or
and
mov
insl
enter
mov
ja
pop
xor
in
lds
mov
xchg
push
xor
nop
in
inc
mov
dec
or
push
enter
adc
rorb
jp
or
arpl
pop
mov
fwait
das
sbb
or
gs
lret
push
push
jmp
call
mov
mov
cltd
ror
cmp
into
jno
cmp
sub
jo
fsubrs
mov
int
mov
adc
in
ja
and
pop
jecxz
jge
dec
sbb
outsl
fwait
push
add
std
cld
into
xor
shlb
sub
cpuid
cmp
xchg
mov
repz
pop
stos
mov
imul
jns
pop
sbb
icebp
adc
movsb
xor
cld
stc
push
out
dec
fadds
mov
jl
cmp
cmc
cmpsb
cli
stos
xchg
cli
out
loope
push
inc
lret
mov
sub
imul
sbb
lods
fs
jl
xchg
arpl
mov
sub
sub
mov
ljmp
das
out
push
pop
mov
bound
lret
test
sub
ja
movsl
daa
sahf
int3
push
fistpll
scas
scas
adc
push
xor
movsl
mov
scas
mov
pop
sub
imul
mov
std
sti
out
sti
rcrl
xor
xor
adc
cmc
test
test
mov
aam
cmp
ret
push
pmullw
xlat
push
cmp
icebp
sbb
lods
cld
cltd
sarl
shll
cmp
fstpl
or
xchg
mov
jo
inc
repnz
mov
sbb
loopne
outsb
xchg
and
add
je
popa
push
xor
add
int
mov
mov
in
loope
xchg
jae
mov
test
cmp
repnz
push
clc
imul
popa
les
fsincos
and
xor
rcrb
xlat
or
jmp
stc
xchg
xchg
nop
ja
cld
popa
inc
pushf
in
mov
repnz
int
fdivrl
pop
mov
sub
iret
and
aas
repz
mov
aad
adc
push
scas
sarb
cs
js
jge
push
adc
sbb
mov
jno
and
or
inc
xchg
iret
mov
sbb
push
push
popa
sbb
jne
adc
fsubp
pusha
fistpl
xchg
xchg
sub
jne
or
sbb
lret
arpl
or
jg
xlat
mov
cld
mov
imul
std
or
mov
xchg
xchg
add
inc
add
add
out
dec
mov
dec
add
out
push
xchg
lret
fists
mov
sub
xor
push
arpl
lea
mov
jb
nop
test
repnz
dec
mov
arpl
shrb
push
pop
mov
jg
daa
inc
inc
pop
aam
fmuls
fldenv
sub
clc
sub
lods
sub
xor
xor
jmp
dec
mov
mov
arpl
pop
add
mov
stos
or
iret
sbb
or
test
cli
lods
lcall
and
cmc
pop
mov
and
pushf
repz
push
mov
pop
adc
mov
mov
in
ds
push
cmp
mov
arpl
mov
movsb
test
test
pushf
xchg
lods
adc
insl
dec
scas
ret
jl
adc
cmp
sbb
test
dec
sub
movsl
inc
pop
and
out
inc
cmp
hlt
cltd
cmpsl
mov
and
cmp
pop
popa
jns
data16
clc
sbb
sbb
mov
shrl
dec
inc
mov
imul
add
cmp
call
jmp
sbb
mov
lahf
sub
xchg
pop
pop
add
push
mov
push
jo
and
dec
aaa
int
insb
js
cmp
xchg
mov
idivb
mov
pop
adc
dec
and
lods
fstps
ret
xor
push
jp
lods
push
mov
dec
hlt
jns
fsts
mov
sbb
es
int3
add
jne
ja
mov
lcall
jp
ror
fnsave
jle
nop
aam
add
sbb
daa
sbbl
les
nop
adc
cmp
stc
lea
push
add
fisubrs
lcall
push
testb
repnz
lods
fidivrs
or
cmpsb
repnz
jno
lds
dec
mov
stc
sbb
xchg
rol
hlt
push
push
xchg
ret
push
repz
xchg
repz
loop
arpl
repnz
sti
xchg
call
inc
gs
rcrb
sub
jnp
rcrl
dec
cmovo
or
dec
mov
aad
dec
xor
cmc
ljmp
cmc
lock
jae
rolb
mov
pop
jmp
sbb
dec
test
xchg
fldcw
mov
popa
outsl
xchg
push
fwait
imul
xor
xor
dec
arpl
push
xlat
mov
leave
adc
lret
stc
mov
fs
out
mov
mov
fistpll
dec
pop
repz
ss
or
aaa
adc
or
jns
fisttps
xchg
xor
sub
sub
push
xchg
lahf
dec
fwait
jo
dec
fdivl
into
jle
xor
and
sbb
push
cmpsl
cmc
int
in
clc
dec
stc
mov
dec
xchg
call
cmp
fidivl
mov
mov
xorl
test
cmpsb
movsb
es
mov
outsl
scas
fwait
xchg
or
add
push
das
xor
shlb
inc
xor
jno
imul
jg
movsl
std
and
mov
iret
sub
lret
cmp
or
or
shrb
test
cmp
rcll
push
pop
mov
pop
jae
pusha
mov
mov
repz
jnp
dec
xor
out
adc
mov
ljmp
xchg
and
je
pop
call
xchg
ja
aad
and
jg
stos
daa
pop
xchg
nop
or
insl
out
adc
push
push
roll
lahf
push
fiaddl
mov
sub
out
scas
enter
repz
test
adc
push
mov
pop
mov
mov
xor
push
in
push
scas
gs
lods
repz
lcall
scas
hlt
mov
inc
adc
cmp
ret
or
out
mov
js
jmp
lea
mov
xor
and
add
jge
jmp
cmp
xchg
mov
sub
inc
jp
jecxz
nop
aaa
fnsave
aaa
pop
test
enter
fs
loopne
push
adc
mov
push
imull
out
rcll
mov
or
jecxz
aaa
pop
and
xor
arpl
push
sbb
mov
js
enter
and
jbe
xchg
lret
xchg
aam
mov
adc
xor
push
sbb
sbb
push
das
fildl
inc
jne
xor
fwait
jae
sbb
es
inc
les
inc
lret
iret
jl
jl
loope
push
jl
xchg
and
inc
xchg
xchg
jnp
mov
test
outsl
pop
into
outsl
ljmp
int
outsb
shrb
mov
fs
jecxz
inc
pop
repz
jg
shll
mov
and
mov
mov
cmp
push
jb
stos
jl
pop
xchg
xchg
and
int
das
flds
outsl
movsl
lods
or
add
aam
mov
pop
aam
jmp
fistpl
in
mov
xor
sub
into
es
jb
adc
push
popw
loop
je
dec
push
jb
mov
push
les
sub
leave
dec
pop
fdivl
idivl
ret
loop
sub
lods
cmp
int3
rcl
into
push
fsubs
cmpsb
fisttps
rcl
sub
sbb
mov
dec
lock
mov
inc
and
cmpsl
pop
xchg
aam
orb
xor
mov
ret
push
negb
xchg
or
xor
ret
icebp
xor
idivb
hlt
sub
lcall
rcrl
out
inc
in
jg
das
fisttps
inc
jne
popa
pushf
adc
or
mov
gs
inc
xor
pop
das
sbb
decb
cmpsb
jnp
std
xor
cld
xchg
daa
and
sbb
jae
ret
dec
mov
mov
sbb
inc
jb
sub
jae
mov
test
cli
xlat
ss
ret
mov
leave
cmp
in
test
jo
shl
loop
sbbb
pop
add
or
jns
lods
flds
cltd
sub
mull
nop
mov
mov
xchg
popf
ljmp
mov
test
dec
add
sbb
add
and
lods
or
daa
ss
sahf
out
jb
inc
cmp
out
push
push
pop
ss
clc
add
les
out
mov
xor
mov
mov
push
adc
push
sub
pop
sahf
into
xchg
test
push
andb
xchg
icebp
dec
imul
insl
imul
mov
hlt
mov
inc
bound
imul
cmp
je
dec
push
or
xchg
movsl
test
sub
dec
adc
icebp
nop
iret
push
xor
sbb
mov
insl
sub
cmp
popa
adc
lahf
data16
fisubl
sub
insb
imul
and
sub
shlb
adc
sbb
js
stos
and
jno
or
adc
dec
pop
mov
inc
inc
movsb
push
push
mov
sbb
out
or
imul
xorl
dec
faddl
or
out
mov
les
out
lods
cmp
cld
fdiv
ja
ror
push
pop
lods
xchg
lahf
adc
mov
adc
es
or
add
push
or
lahf
adc
movsl
clc
cmp
stos
dec
int3
and
sahf
loope
push
and
shl
push
outsb
jg
mov
sbb
int3
cmp
movsl
sub
sub
xchg
arpl
cmpsl
data16
subl
int
jle
icebp
cmp
dec
icebp
int
repnz
scas
je
lret
lods
ret
mov
repz
jb
call
mov
cwtl
xchg
notb
gs
pop
jge
cmpl
ja,pn
add
mov
ss
inc
push
scas
call
pop
and
sahf
cld
pop
pop
ret
jne
mov
jae
mov
and
dec
fimull
mov
inc
xchg
loop
dec
push
add
fisttpll
pop
and
mov
add
push
incl
jmp
xor
adc
sti
mov
sbb
and
and
adc
insl
inc
push
mov
dec
cltd
or
fs
mov
rcll
or
sub
ljmp
cmp
fwait
pop
pop
jg
ret
pop
out
pop
xor
mov
cltd
xchg
pop
mov
jge
mov
outsl
int
add
into
ja
adc
push
cmp
int
fstl
cmp
push
inc
mov
xchg
test
lods
inc
mov
loop
in
add
fnstcw
xchg
inc
fsubl
dec
xlat
int3
or
ret
movb
lcall
call
stc
jmp
sbb
xchg
inc
xor
pminsw
js
xchg
mov
xchg
shl
pop
dec
sbb
xlat
scas
ds
mov
cld
imul
pop
cmpsl
bt
push
sti
mov
scas
adc
mov
pop
cmpsb
fmul
in
lcall
arpl
fidivs
stc
out
push
push
arpl
fucomp
add
sub
mov
pop
ljmp
push
ljmp
fisubrs
or
std
lret
mov
aam
dec
enter
and
negl
mov
je
pop
and
xchg
xor
add
inc
mov
inc
lret
insb
mov
gs
inc
cmp
roll
popf
pop
push
arpl
in
add
jae
push
outsb
shl
sahf
loope
enter
js
bound
arpl
and
pop
pushf
sub
cld
or
sbb
adc
push
mov
ss
ud0
out
shll
sub
dec
rolb
out
xor
sub
js
add
push
pushf
xor
leave
sarb
leave
mov
les
imul
in
push
mov
sbb
add
jg
lcall
jmp
test
sti
insl
mov
sarb
in
jno
jg
pop
dec
mov
popf
in
daa
int
lret
ljmp
ja
pop
inc
mov
loop
or
xchg
pop
rcrb
push
adc
cltd
cmc
out
mov
les
or
mov
xor
xor
cmc
mov
aad
pop
mov
js
and
mov
ret
xchg
and
pop
mov
scas
xchg
cmp
fdivrl
dec
sub
test
inc
cwtl
cmp
shlb
jb
push
jae
out
shlb
mov
mov
xchg
dec
out
bound
pop
cli
inc
popa
out
add
imul
fidivl
xlat
dec
pop
push
or
testl
call
sbb
cmpb
mov
dec
mov
bound
xor
sbb
inc
mov
inc
and
sti
cmpsl
fnsave
mov
sti
and
mov
jecxz
sub
test
insl
cmp
mov
call
data16
movsb
push
sub
jne
add
in
mov
imul
fldcw
daa
mov
jb
and
cmpsb
out
cs
adc
or
adc
cmpsl
and
and
sbb
shll
cltd
mov
lret
xchg
mov
arpl
daa
sbb
or
jecxz
add
lock
je
inc
mull
xorb
push
inc
popf
push
and
leave
push
hlt
push
xor
xchg
sbb
cmp
js
cmp
adc
aam
jbe
aas
pop
std
adcl
in
in
mov
mov
cmp
ds
and
test
dec
mov
inc
dec
scas
adc
jns
mov
sub
inc
hlt
std
mov
xchg
pop
push
xchg
insl
mov
sbb
inc
cwtl
push
dec
in
jge
mov
jnp
cmp
test
xchg
xchg
push
xchg
scas
mov
pop
loop
mov
scas
test
mov
or
out
lods
cmp
push
pop
movsb
cmp
cmp
fwait
shrb
cmp
dec
dec
and
inc
iret
jnp
daa
stos
andb
icebp
out
sub
push
cmp
test
aaa
aas
add
sahf
jge
std
add
adc
sbbl
negl
fists
mov
inc
mov
pop
adc
out
inc
or
xchg
stc
shrb
fcmovnu
add
scas
arpl
in
dec
xchg
push
aam
lods
push
cmp
xor
lds
and
lock
jo
outsl
aam
dec
jle
aas
out
or
xchg
dec
mov
and
in
sub
ljmp
mov
mov
js
jmp
add
addr16
js
popa
pop
add
pop
jle
sub
jns
movsb
mov
sbb
test
aas
movsl
enter
dec
push
push
push
inc
sub
pop
lahf
shlb
mov
cwtl
test
push
sub
lods
cmpsb
icebp
arpl
mov
mov
inc
push
xchg
pop
arpl
ja
jecxz
jp
and
icebp
cli
jle
cmp
call
and
aad
pop
addps
xor
into
mov
mov
sub
lds
push
sub
pop
add
mov
inc
ja
adc
cmpsb
cmp
sub
stos
pop
fcmovu
ljmp
push
xchg
push
je
mov
mov
dec
cmp
sub
pop
pop
out
fdivrs
inc
jns
fs
mov
lock
inc
mov
lods
adc
xor
cmpsb
sarl
jbe
push
popl
mov
sbb
or
sahf
aam
insb
xor
dec
call
sti
mov
dec
sub
in
loop
inc
mov
nop
xlat
and
js
fwait
push
jbe
dec
lcall
shlb
mov
roll
inc
fdivl
adc
notb
mov
and
nop
daa
sarb
pop
inc
dec
js
mov
imul
mov
orl
mov
fstpt
fiadds
mov
loope
sbb
iret
push
dec
std
and
xchg
jae
jp
pop
inc
es
int
cwtl
jge
adc
fs
sarb
mov
in
jmp
loope
test
mov
xor
sarb
fstpt
hlt
cmc
pushf
scas
add
mov
adc
shlb
fwait
lods
or
nop
sub
lret
cmp
mov
inc
push
lea
lea
jae
clc
mov
cld
lahf
in
in
lods
sbb
jbe
movsb
bound
mov
stos
cmp
mov
jo
scas
hlt
jge
movb
add
lock
in
in
cwtl
dec
ds
cmpsl
test
in
mov
shrb
xchg
xor
xchg
pop
pop
dec
xor
pop
test
push
int3
orb
pusha
or
pop
lea
mov
jmp
pop
mov
js
fnstenv
enter
dec
pop
push
je
ret
stos
shll
push
orb
out
xor
and
in
iret
imul
into
xchg
mov
adc
repz
sbb
loopne
jns
out
test
fsubl
ror
xor
sbb
xor
iret
lods
mov
int
mov
mov
xlat
nop
jbe
cli
jnp
inc
pop
xlat
push
stos
adc
jno
icebp
inc
nop
or
outsb
sub
dec
hlt
inc
int3
jno
inc
mov
mov
and
sub
pop
inc
ret
cmc
outsb
sbb
or
push
mov
out
mov
imull
mov
gs
jbe
and
fldl
mov
adc
xchg
xor
sub
pop
mov
add
int3
pushl
gs
xchg
xchg
mov
stos
lret
std
cwtl
in
cli
and
mov
inc
mov
sbb
mov
mov
adc
inc
arpl
bnd
clc
cmp
mov
pop
mov
fisttps
pop
pop
in
or
or
aam
mov
jbe
mov
push
cmp
mov
test
mov
inc
sub
sub
shrb
jp
and
clc
jno
fnstsw
dec
add
push
insl
mov
int3
add
mov
pop
pusha
push
and
pop
sbb
pop
xor
mov
rorb
dec
cmpsb
mov
test
and
push
cmp
std
mov
and
mov
loop
mov
mov
xchg
mov
lea
stc
pushf
jo
inc
xchg
or
pop
mov
add
ret
out
daa
movsl
repz
and
out
push
flds
jnp
mov
and
jne
ret
ret
mull
inc
nop
push
enter
dec
jno
daa
pop
xchg
and
stos
mov
faddl
push
insl
cmp
pop
mov
adc
aaa
rcll
cmpsl
inc
xchg
rcrb
cmp
mov
xrelease
mov
push
dec
pop
jecxz
in
out
lds
push
or
out
out
jecxz
cs
sbb
int
xchg
ja
mov
mov
push
aad
mov
ljmp
outsb
ss
ud0
fldcw
rorb
bound
mov
push
sub
mov
pop
gs
jmp
movsb
mov
sub
rorl
pop
rcrl
fdiv
mov
lahf
clc
mov
ljmp
or
addb
int3
pop
dec
and
mov
popa
popa
pop
lret
aad
cmpsl
clc
dec
incb
pop
push
cltd
dec
sub
sub
in
adc
jge
xor
cld
mov
clc
push
hlt
jno
mov
sti
lcall
add
cli
imul
cmp
movl
mov
xchg
xchg
out
mov
pop
push
mov
add
addr16
orb
lods
mov
xchg
mov
xchg
xchg
lret
insl
mov
fistpl
mov
lret
jbe
out
add
movsb
mov
or
ja
sti
cmp
mov
sti
or
dec
xchg
dec
mov
pop
test
cltd
lea
dec
sbb
xor
insb
push
cmc
ljmp
and
sub
insl
lods
cltd
ljmp
sbb
xlat
mov
jecxz
shll
push
adc
jmp
stos
hlt
in
adc
scas
adc
out
ret
pop
sub
fnstenv
pop
outsl
xchg
push
mov
push
cmp
jmp
outsl
push
orl
insl
enter
fwait
ljmp
inc
mov
inc
nop
push
loop
ficoms
jmp
enter
inc
adc
cmc
dec
jl
call
sbb
sbb
pop
std
and
dec
dec
lods
fwait
popa
jp
mov
mov
xchg
into
fiaddl
popf
or
add
xor
or
pop
push
aaa
jo
pop
mov
push
mov
or
mov
movsb
jno
sbb
and
stc
and
mov
adc
lcall
jg
mov
inc
dec
cmp
sbb
ljmp
xchg
mov
lods
fcomps
or
loope
jb
pop
arpl
cmp
push
jl
and
fs
sbb
fiaddl
mov
jecxz
pop
repz
pop
fldl
xchg
xor
cmpb
das
xchg
in
lods
lret
pop
in
popf
xor
lods
inc
jno
mov
in
inc
and
insb
mov
aam
fwait
adc
inc
testl
xor
lret
fnstenv
add
js
cmp
cli
imul
add
sbb
daa
lahf
adcl
mov
sub
jp
and
in
fstps
jle
nop
xchg
xor
out
mov
aas
pop
aad
xchg
sub
pop
jae
xlat
pop
int3
mov
or
xorb
test
fnstsw
push
gs
cmp
bound
add
movsl
call
adc
mov
mov
cmp
cwtl
inc
lock
scas
inc
jmp
push
mov
jb
je
fldt
js
dec
push
xchg
lret
mov
push
shll
add
sti
dec
imul
jg
inc
rol
add
dec
xor
ss
daa
call
push
dec
sbb
push
xchg
dec
mov
cs
fsubl
fildl
jo
cmp
inc
dec
sub
std
mov
pop
mov
dec
or
ljmp
leave
inc
cltd
std
pop
mov
adc
and
pusha
fadds
cmp
xchg
jae
cmp
add
mov
xor
add
xchg
jbe
pusha
aas
or
jl
inc
mov
mov
pop
and
pusha
jmp
jmp
mov
jo
fsts
lods
cmpsb
outsl
cmp
push
dec
mov
cmp
jg
rorb
negb
xchg
stc
dec
pop
ljmp
dec
negb
bound
fsubs
xor
xlat
mov
adc
cmp
xchg
mov
or
add
ret
ss
pop
test
stos
das
lock
dec
lods
adc
sub
cmp
pusha
dec
mov
push
ret
pop
and
add
mov
and
mov
cli
pop
or
pop
rcrl
test
icebp
imul
or
cmp
addl
mov
mov
scas
gs
mov
xchg
outsb
inc
cmpsl
push
idivb
pop
aaa
mov
sbb
mov
add
add
movsb
lods
cltd
push
adc
or
or
imul
or
out
enter
aad
push
jl
dec
push
int3
aaa
out
cltd
pop
push
push
inc
dec
clc
aaa
adc
mov
fidivl
sbb
mov
mov
sub
int3
push
out
fwait
sub
into
mov
xor
ret
stc
mov
jge
cmp
in
adc
dec
dec
mov
imul
sbb
pusha
insl
in
mov
dec
mov
inc
fs
sar
insl
stc
cmc
and
scas
pop
jmp
push
xchg
xchg
fsubl
lods
mov
sbb
daa
cmp
mov
fimuls
xor
sbb
mov
push
shl
adc
jle
pushf
mov
arpl
mov
jbe
mov
insb
pop
jns
mov
push
std
movl
cmp
pop
adc
movb
cmp
cwtl
cwtl
lds
movsb
and
repz
inc
test
and
fwait
jecxz
adc
dec
push
stos
inc
mov
test
adc
xchg
pop
arpl
fisubl
jle
sbbl
rolb
in
out
xadd
sub
push
mov
lods
rcrb
adc
lcall
or
cmpsl
dec
inc
lods
dec
fidivrl
mov
lds
xor
pop
ds
in
mov
loope
sbb
gs
push
mov
mov
pop
jle
fmull
stos
push
ss
loopne
jp
sub
lea
out
jno
mov
lea
xor
cld
fcompl
test
and
dec
mov
imul
jne
mov
jb
cld
roll
mov
ret
push
xchg
nop
test
jnp
call
lahf
xor
cltd
mov
adc
mov
xchg
rorb
mov
mov
cli
add
cwtl
mov
or
push
push
and
cmp
in
pop
jnp
movsb
xor
aas
push
ret
ficomps
movsb
bound
lods
shlb
mov
into
pop
mov
push
out
mov
add
aaa
ror
and
inc
or
xor
inc
dec
sarb
push
cmp
or
mov
pusha
adc
pop
mov
imul
pop
push
mov
cld
fistps
jg
push
movsb
addl
aaa
lods
std
xchg
dec
pop
mov
frstor
and
dec
shrl
push
and
popf
pusha
loope
aaa
jmp
popf
out
call
movsb
xor
jb
jp
or
sub
mov
xchg
das
iret
mov
mov
call
shll
cwtl
sti
stos
sbb
jne
push
add
out
or
jmp
add
xchg
sub
movsb
out
pop
addr16
popa
dec
mov
lret
ja,pt
aas
rcr
and
or
aas
xchg
movsl
sbb
cmp
inc
cmp
lock
iret
adc
insl
inc
and
sub
pop
sbb
adc
push
xchg
sbb
jle
call
mov
sub
or
mov
mov
in
mov
cmp
push
sub
jo
aam
pushf
jbe
jae
int3
add
mov
mov
xchg
mov
inc
adc
addr16
mov
mov
xor
jns,pn
push
sub
xchg
pop
push
jg
pop
xor
fs
xor
xchg
jg
dec
xchg
xchg
inc
int3
mov
idivl
mov
ljmp
jmp
jp
test
test
jle
call
mov
and
dec
cld
mov
xchg
subl
xchg
sarl
or
test
es
mov
test
sar
cmc
ret
cwtl
sbb
xchg
gs
add
outsb
sub
or
mov
repz
push
inc
enter
pusha
adc
sahf
cmp
jmp
sbb
out
cmc
sti
sbb
cmpsl
sbb
mov
ret
add
or
aas
sbb
rsm
test
out
xchg
inc
push
inc
adc
and
xchg
popa
dec
sub
pop
cmp
jl
add
xchg
or
incl
xor
fisubl
movl
mov
mov
loop
enter
scas
and
mov
ffreep
jbe
popf
mov
notl
sbb
rcl
scas
pop
inc
icebp
and
out
loope
add
xorl
movsb
mov
loop
xchg
aaa
imul
pushf
dec
loop
ss
mov
dec
lods
icebp
fs
mov
jg
call
xor
fstl
icebp
inc
xlat
movsl
scas
aad
repnz
rolb
call
xchg
xchg
ljmp
pop
mov
dec
popa
jo
pop
mov
push
inc
push
adc
pop
insb
fsubrs
add
out
mov
lahf
in
scas
adc
adc
in
hlt
adc
mov
adc
cmp
cmp
mov
fs
dec
js
mov
sbb
xor
or
adc
cmpsb
jo
push
push
sbb
cmpsl
pop
xchg
mov
adc
sub
ja
scas
xchg
lods
sbb
pop
int
vpshufd
xor
aam
jmp
xor
sub
pop
dec
js
fiaddl
nop
ret
arpl
xor
xchg
sbb
incb
push
xor
mov
jp
mov
aaa
xchg
push
loop
cmpsb
out
mov
cld
movsb
andl
loopne
adcl
inc
cmp
sbb
push
fwait
out
cmpsb
xlat
popf
inc
sub
pop
icebp
enter
or
das
pop
xchg
mov
mov
cmp
push
imul
jp
jno
cmp
pop
daa
out
enter
xor
or
pop
test
adc
repnz
stos
cmc
mov
xchg
cwtl
enter
cs
cmp
xor
cli
jge
pop
enter
push
idivl
jecxz
scas
lahf
out
movsl
loop
test
movsl
imull
jg
jns
arpl
push
lcall
jne
popf
xchg
mov
and
jp
push
loopne
push
xor
test
mov
push
xorb
jle
xchg
std
jb
add
xchg
sbb
shll
lds
scas
and
inc
mov
xchg
add
nop
mov
es
jp
adc
lods
dec
pop
or
xchg
leave
cmc
aam
flds
aaa
vmread
mov
ljmp
inc
mov
or
dec
cmp
lods
pop
scas
insl
into
in
pop
add
int3
mov
in
jp
cmc
ret
cld
fwait
test
outsb
sub
loope
imul
and
jbe
jne
dec
dec
pop
mov
insb
mov
shr
outsb
add
mov
imul
or
xlat
inc
fwait
add
cli
ficompl
rcl
xchg
sbb
test
pop
jp
add
push
imul
inc
adc
add
daa
inc
or
adc
out
out
adc
jl
sbb
cmp
xor
jne
cmc
pop
sub
adc
jnp
mov
cli
outsb
fldenv
jns
vmread
cmpsl
jnp
inc
out
adc
imul
jg
shlb
mov
jno
das
loop
stos
and
inc
test
fldenv
insl
xchg
test
pop
aam
outsl
loope
push
and
lcall
inc
sub
adc
dec
jg
pop
mov
push
mov
std
pop
ret
addr16
or
mov
popa
mov
lock
cli
aas
and
add
pop
mov
call
shl
xorb
stos
stc
ds
sub
test
outsl
enter
les
aad
sbb
pop
icebp
inc
inc
bound
cwtl
clc
rcll
outsl
ja
loop
or
mov
jg
ret
jp
push
arpl
or
push
jbe
dec
jle
and
loopne
call
idivl
xchg
pop
or
jbe
insl
lcall
push
pusha
test
sub
outsl
lahf
push
jle
fstpt
stos
cmpsl
test
test
xchg
mov
inc
mov
jp
into
xchg
fsub
ja
mov
loope
push
outsb
stc
out
int3
popa
out
pop
mov
into
test
enter
jmp
rep
pop
cmpsb
sub
mov
cmp
and
je
dec
push
outsl
cmp
lock
pop
rol
mull
aad
es
mov
jecxz
mov
bound
sahf
xor
push
add
aam
sub
and
mov
add
sbb
push
and
in
and
cwtl
xor
into
aad
and
xchg
dec
pop
sub
or
adc
jne
das
jne
and
cmp
xchg
in
aaa
adc
jo
push
dec
repnz
mov
lcall
rcl
mov
imul
mov
mov
fidivs
pop
xchg
add
xchg
sub
mov
test
pop
outsb
or
sbb
add
push
addr16
push
stos
loopne
push
mov
add
sub
out
mov
shl
push
mulb
push
mov
push
xchg
pop
add
subl
pushf
addr16
imul
or
movsb
cmp
push
push
inc
sbb
xor
push
imul
push
push
lcall
sbb
or
xchg
js
mov
dec
fdivs
stos
imul
mov
dec
sbb
mov
inc
pop
loop
cmp
rcrb
es
sbb
add
dec
pop
loope
cmpsb
mov
xchg
aas
subb
mov
adc
ffreep
out
pop
pop
jne
cmc
push
push
cmpsb
inc
cmp
scas
sbb
outsl
cmc
insl
sub
call
aas
test
arpl
mov
adc
repz
push
ja
jl
add
add
insb
add
stos
call
sbb
les
inc
push
cltd
std
inc
rclb
loope
push
sbb
cltd
cmpsl
negb
nop
pushf
adc
cmp
decb
push
rorl
loop
xchg
sbb
aas
clc
int3
imul
xchg
add
movntps
xchg
mov
cli
lock
cmp
sub
inc
dec
lahf
pop
pushl
cmp
xchg
popa
xor
aas
mov
mov
sub
lahf
pop
xor
stc
jae
xchg
aas
mov
insl
cmp
fisttpl
sbb
xchg
or
mov
lods
xchg
sbb
adc
insl
andb
mov
in
adc
mov
inc
lcall
addr16
imul
jo
and
movsb
std
or
bound
movsl
lret
inc
inc
sbb
xchg
mov
xchg
and
jb
add
in
push
iret
pushf
inc
xchg
inc
test
aad
sbb
fsts
mul
lea
push
mov
je
sbb
push
or
test
adc
mov
add
xlat
push
pusha
mov
mov
arpl
sub
cli
inc
pop
push
pop
lock
adc
and
inc
push
cmp
mov
push
ljmp
jne
outsl
cmp
inc
mov
rcl
add
stc
rorl
mov
sub
dec
sub
and
xchg
addr16
dec
jecxz
add
inc
mov
gs
sbb
daa
clc
enter
jg
pop
mov
sbb
loop
js
jge
push
in
test
and
jle
mov
mov
cmp
dec
adc
sbb
xchg
sbb
bound
inc
stos
jnp
lret
adc
enter
dec
out
xor
mov
or
push
xor
adc
outsl
push
dec
sarb
xchg
scas
push
push
sub
mov
jne
jp
sarb
sbb
xchg
sbb
or
outsb
fadds
stc
rol
push
out
outsl
jle
push
lods
push
movsb
jbe,pn
frstor
adc
sbb
cli
pop
cmp
xchg
jnp
pushf
icebp
scas
push
fidivs
jb
add
loop
add
lock
xor
arpl
xor
insl
xor
packssdw
xor
cmp
mov
jns
jne
mov
aad
lret
mov
sub
pusha
and
sub
lods
jae
xchg
or
push
push
push
adc
mov
sub
xor
cmpsl
nop
or
or
sbb
js
dec
orb
dec
mov
js
and
cmpxchg
jp
sbb
loop
fcmovnbe
and
mov
das
cld
mov
scas
mov
dec
dec
or
add
lds
mov
xor
mov
pusha
add
push
mulb
jle
mov
xor
js
or
push
sub
add
mov
cwtl
jae
jle
fidivs
mov
test
pop
lea
or
cmp
inc
sarl
xor
xlat
inc
ds
dec
lds
ljmp
in
mov
dec
cmpsl
push
sub
jno
gs
dec
outsb
ja
xchg
push
sbb
movsl
adc
insb
and
gs
mov
icebp
std
xor
sbb
js
outsl
push
xchg
adc
xchg
lcall
std
cmpsb
dec
xor
and
imul
inc
push
fcom
fists
outsb
add
xchg
xchg
sub
xchg
mov
dec
pop
bswap
addr16
ja
and
inc
out
mov
push
out
xor
hlt
mov
add
arpl
mov
popf
and
in
sub
jnp
and
shlb
pop
mov
lds
movsb
cmp
fwait
or
cld
scas
add
push
ret
xchg
das
out
scas
dec
imul
sub
mov
sbb
xchg
sbbb
adc
mov
dec
shlb
in
mov
sahf
cmp
cltd
adc
rolb
sub
mov
fsubrs
dec
mov
daa
rolb
addb
mov
imul
xchg
test
orl
je
rcrb
adcl
and
jnp
push
aas
or
mov
pop
add
mov
jle
add
mov
xchg
inc
pop
bound
lods
xchg
jg
popa
fs
pop
leave
cmp
sub
cmc
in
jns
fldt
lahf
cmpsb
dec
mov
or
push
inc
push
add
xchg
jg
mov
mov
fnstsw
or
adcb
sahf
repnz
sub
adc
or
jno
cmp
cmpsl
xor
dec
xchg
lds
push
ficoms
jle
test
loop
fsubl
movsl
push
pop
or
ficoms
fstl
push
loope
jecxz
xchg
mov
add
sti
add
sub
orl
inc
pop
xchg
lods
testb
or
sarl
repnz
sub
outsl
out
push
lcall
inc
hlt
sti
test
test
sub
push
lock
xchg
sub
andb
or
pop
data16
and
es
mov
mov
mov
cli
and
out
pop
sub
fnsave
mov
or
repz
int3
popf
movsb
sbb
dec
test
adc
ljmp
imul
mov
dec
stos
ffreep
ret
out
pop
lock
popf
dec
out
jecxz
lds
adc
xchg
sub
add
inc
sub
adc
sbb
loope
loope
sbb
cld
xchg
lahf
cwtl
push
std
out
xchg
or
xchg
xchg
hlt
push
lret
adc
pop
mov
inc
arpl
bswap
in
mull
add
fdivrl
jns
xchg
or
arpl
ja
mov
mov
cltd
insl
jb
push
call
xor
out
sahf
jge
jmp
dec
xchg
pop
std
jl
mov
sbb
dec
xchg
repz
inc
pop
pop
xorb
dec
pop
inc
inc
pusha
jno
cli
pushl
stc
jle
enter
repz
xchg
ss
jb
xor
add
mov
out
sahf
xor
movsl
or
sbb
call
inc
jge
fimuls
fistl
jp
jb
scas
pusha
mov
enter
inc
push
xor
fnstcw
and
cmp
mov
push
jo
in
mov
add
jnp
adc
iret
cmpsb
js
adc
dec
adc
in
fisubrl
mov
xchg
jl
mov
add
pop
hlt
inc
sub
push
sarb
mov
sbb
xchg
jle
sub
shrl
add
jo
in
leave
test
lds
imul
jns
pop
and
jp
sub
cmp
nop
jns
ss
mov
sub
out
cmpsl
add
sub
jbe
dec
push
xchg
rolb
jmp
loop
xlat
test
in
sarb
out
addr16
lods
add
pop
inc
and
mov
pop
idivb
jns
pop
mov
push
sahf
pop
cmp
and
sbbl
xor
testl
jbe
jno
repz
sti
cltd
adc
mov
lods
fistpll
cmp
insb
test
lods
pop
int3
jns
or
movsb
pusha
sbb
insb
xchg
xchg
ret
sub
in
fmul
sbb
scas
sti
int
jl
xchg
cmp
jmp
sbb
xlat
mov
lock
cmp
lret
sti
aaa
or
pushf
pop
rcll
addr16
rcll
xchg
cmp
inc
scas
adc
aas
and
or
dec
cld
pop
lds
adcb
rcrl
rcrl
cmp
pop
mov
add
sub
xchg
jne
mov
aad
sbb
adc
push
jg
stc
sahf
push
scas
pop
push
fimuls
aam
lea
ja
ljmp
test
pushf
fbstp
pmuludq
out
adc
and
setns
in
mov
es
mov
lea
movsb
out
cmp
and
lods
sub
fcompl
cld
adcb
mov
adc
mov
inc
mov
jl
fidivrs
pop
mov
fisttpll
out
rolb
cmp
movsb
data16
xchg
lcall
adc
and
inc
push
cmp
sahf
testl
jp
out
call
sahf
stc
insb
push
sub
xor
sbbb
cmp
mov
outsl
adc
out
xor
mov
mov
sbb
fildll
arpl
adc
repz
popf
es
push
mov
int
out
dec
stc
inc
jb
adc
pop
addr16
cs
pop
xchg
sub
jo
and
sti
ja
push
sahf
cld
push
ret
test
jecxz
mov
sbb
adc
cmp
mov
ret
addb
out
xchg
mov
popf
push
sahf
inc
and
sub
pop
imul
cmpsl
sbb
lds
push
shrb
es
xor
and
test
xchg
bound
lret
adcl
mov
dec
mov
jae
xlat
xchg
xchg
movsl
adc
and
div
pop
jl
dec
lret
xchg
enter
notb
pop
les
and
pop
xchg
inc
cs
orl
mov
jp
cwtl
repz
outsl
push
cmpsl
daa
xchg
dec
or
xor
xor
inc
and
out
jmp
repz
add
fcoml
push
repz
nop
lret
or
jecxz
pop
jne
cmpsb
inc
pop
pop
ret
scas
rolb
xchg
dec
aam
repnz
push
jno
jb
jnp
imul
inc
pop
sbb
stos
xor
pusha
or
lods
ret
stos
sub
add
push
in
or
or
inc
fbld
fwait
sti
or
dec
xchg
cmc
jae
and
leave
and
jmp
in
and
or
and
cmp
inc
test
cmpsl
pop
movsb
and
jno
push
shll
inc
movsb
int3
xorb
rcrl
xlat
inc
sub
cmpsb
jno
jne
xor
test
adc
popa
cli
push
dec
xchg
jl
jecxz
push
rorl
mov
subl
add
or
jg
lods
lret
mov
cmc
leave
dec
cmp
test
and
mov
ja
dec
xor
mov
mov
push
into
ret
mov
xchg
or
movsl
dec
ret
push
xor
cltd
addl
adc
mov
test
in
xchg
push
popw
sar
es
stos
pop
fucomi
mov
jle
scas
mov
cmp
ss
idivb
mov
mov
rcr
xchg
push
sbb
aad
cmpsb
rcrb
cmp
mov
sahf
mov
imul
pop
adc
aas
shll
dec
xor
popa
adc
mov
int3
sub
iret
icebp
aam
hlt
popf
fstpt
pop
ss
jb
push
or
sbb
jns
push
mov
orl
stc
lahf
mov
lock
ret
sbb
jecxz
cmp
push
pop
xor
cli
dec
mov
cmp
mov
loop
sarl
outsb
mov
fstl
xchg
repnz
xchg
pop
dec
jns
fmull
xchg
pop
sub
xchg
push
jp
lahf
addr16
insb
push
std
adc
xchg
jnp
push
or
or
xlat
mov
leave
pop
stc
movsl
shrb
jmp
push
dec
dec
insb
lea
mov
in
loope
cmpsl
out
lret
bound
inc
pop
sub
scas
test
adc
mov
insl
mov
lahf
dec
cmpsb
stos
ffree
push
call
loop
sub
in
jno
xor
mov
push
test
jp
fdivr
adc
lret
push
inc
fstps
cmp
jge
sbb
xchg
cmpsb
dec
pop
xchg
icebp
icebp
js
in
xchg
and
iret
pop
ficompl
xor
sub
cmpsl
xlat
cmp
adc
push
adc
outsb
sub
jmp
clc
in
movsb
insl
inc
vaddpd
int
in
dec
enter
pop
inc
pusha
or
fs
lret
mov
push
sbb
add
dec
add
xchg
cmp
insb
pop
jns
stc
insl
addr16
ljmp
fldcw
sbbl
test
sti
gs
cmpsl
mov
test
add
sub
mov
outsl
mov
sbb
pusha
mov
aaa
xchg
cltd
in
xadd
xor
int3
les
mov
rclb
lret
arpl
push
js
push
or
outsb
fs
jge
icebp
mov
and
cmpsb
jo
hlt
add
adc
iret
and
ljmp
je
js
jbe
xchg
jns
add
out
test
pop
or
and
jae
sub
notb
aaa
and
inc
and
push
pop
out
stos
ss
xchg
mov
push
in
pop
aas
daa
sbb
aaa
icebp
inc
in
call
sar
push
fidivrs
lcall
pop
add
imul
pop
in
dec
jge
add
pop
outsl
idivl
clc
pushf
es
fucom
cmp
mov
pop
in
mov
rcrl
mov
inc
js
nop
mov
setnp
negl
in
mov
clc
cmp
loopne
jns
dec
lcall
jnp
adc
shll
lods
xor
adc
pusha
cmc
inc
cmpsl
movsb
pusha
and
fsubs
and
and
xchg
fidivrl
jl
sbb
and
mov
add
cmp
ret
cmp
push
xor
xchg
sbb
stos
lods
cmp
shrl
insb
flds
push
clc
xchg
das
pushf
push
mov
js
mov
jl
pop
jge
pop
fdivrl
pop
xchg
cmp
sub
or
fnsave
dec
imul
or
cmp
rolb
cmp
add
rcrb
xlat
cmp
imul
mov
sub
xor
mov
das
dec
mov
leave
adc
mov
inc
mov
sbb
cmp
push
push
repz
sti
jle
fstpl
push
inc
mov
shll
xchg
and
or
adc
call
ror
push
and
push
add
mov
adc
fsubrl
sti
in
dec
and
ficoms
adc
loopne
add
mov
sub
jno
jno
or
jmp
cmp
dec
jne
rsm
mov
mov
push
jbe
lret
sbb
movsb
push
sub
xchg
nop
mov
fsubl
outsl
cmpsl
cmp
jb
icebp
adc
sub
arpl
cmc
xchg
add
inc
jmp
mov
into
rcr
and
out
outsl
ret
adc
shll
lahf
mov
repz
mov
and
inc
or
xchg
add
adc
push
fistpll
icebp
mov
sub
sbbb
notb
adc
test
add
inc
inc
lock
scas
in
xchg
cmp
int
test
xor
add
imul
data16
sub
lahf
ljmp
pop
xor
ret
push
negb
les
enter
mov
adc
mov
mov
outsb
xchg
hlt
scas
ds
mov
fsts
cld
popf
xlat
sbb
aad
pop
dec
push
loopne
jne
iret
jo
ljmp
mov
lods
arpl
mov
inc
cvtpi2ps
push
lahf
jle
aam
aad
sbb
mov
into
or
into
jae
out
inc
sbb
add
fwait
sbb
pmaxub
dec
add
int3
and
insl
fcoms
pop
loop
outsl
shll
inc
mov
push
push
mov
push
mov
imul
pop
cltd
loopne
mov
pushl
add
mov
add
cmp
push
ja
or
enter
or
outsl
and
aad
les
lcall
mov
push
insl
mov
aad
stc
in
push
xchg
hlt
decb
lods
andb
jo
pop
fsubrl
ja
jbe,pt
push
pop
sbb
xchg
test
jge
xchg
popf
push
push
jl
stos
mov
mov
dec
lods
push
or
ljmp
jle
mov
lcall
push
add
xor
popa
lcall
lock
adcl
sub
out
and
lds
mov
sbb
sub
imul
out
or
add
jg
loope
fcompl
hlt
daa
das
jp
pop
fmul
mov
aas
scas
xor
jle
push
outsb
jle
or
adc
dec
repnz
xor
sub
shll
mov
aam
dec
mov
les
ret
push
or
adc
jo
pop
adc
test
pop
in
leave
mov
push
stos
divl
mov
sub
mov
inc
add
mov
insl
imul
imul
jle
movsb
aaa
xlat
cmp
dec
or
scas
daa
jg
mov
outsb
lods
mov
daa
arpl
pop
mov
seto
mov
dec
sub
rclb
push
jae
idivl
pop
or
mov
loop
xor
xor
and
pusha
pop
mov
leave
inc
xor
iret
and
adc
in
mov
andb
inc
mov
add
xchg
push
addr16
cmp
xor
icebp
sbb
orl
xor
cmp
jbe
test
and
xchg
mov
mov
lret
cmpsb
outsl
js
jbe
mov
fldcw
xchg
in
cmpsb
aad
pop
daa
fimuls
sub
scas
stc
xor
push
add
and
xor
xlat
leave
xor
call
popa
pusha
stos
and
lock
mov
add
sub
shlb
jns
das
das
adc
out
mov
sub
xor
addr16
cltd
mov
arpl
fbld
inc
add
outsl
imul
sbb
mov
mov
mov
xchg
xor
lods
push
xlat
imul
and
stc
dec
jmp
push
adc
fnsave
fildll
push
adc
loope
inc
or
stc
icebp
jno
hlt
cli
xchg
sbb
into
int3
pop
adc
push
cmp
mov
popa
rcrb
pop
xor
in
icebp
and
push
jns
jbe
adc
pop
mov
pop
add
and
push
insl
dec
enter
pusha
lcall
cmp
mov
jnp
xchg
pop
jne
lds
jne
shl
inc
enter
xchg
sbb
mov
mov
divb
bound
incb
subb
jae
adc
jo
jnp
mov
mov
xchg
mov
out
in
gs
daa
fucomip
addr16
clc
inc
dec
bound
ljmp
test
aad
cmp
enter
mov
sub
mov
pop
push
xchg
call
loop
repz
add
xchg
adc
mov
das
jae
cmpsb
cld
inc
mov
adc
push
aas
jno
mov
xchg
or
popa
das
and
dec
mov
mov
filds
loop
sbb
scas
rorl
andb
ljmp
daa
pop
in
fdivrp
call
stos
sub
adc
outsl
xor
icebp
pop
loope
lea
adc
dec
test
dec
jg
cmp
int3
out
mov
call
push
ja
xchg
shll
test
ret
nop
lods
pusha
push
push
movsb
push
xor
cwtl
sbb
sti
push
cmpsb
mov
loope
xchg
fwait
sub
sub
mov
jo
add
mov
dec
dec
repnz
pushf
mov
loop
mov
push
inc
fwait
or
arpl
xchg
xor
sar
popf
jae
sub
in
xorb
xor
ret
mov
adc
ret
adc
mov
or
fisubl
out
add
or
outsb
sub
jge
add
jbe
sbb
test
repz
push
xor
adc
mov
inc
test
mov
add
xchg
data16
xchg
jae
xlat
shl
xor
les
inc
inc
mov
add
mov
push
inc
xlat
pusha
inc
cld
int3
aad
cmovs
sahf
and
sub
ljmp
sbb
inc
fistl
clc
adcl
push
cwtl
mov
jg
and
push
daa
push
mov
add
mov
mov
and
int3
fstps
dec
outsb
pushl
xchg
push
mov
adc
mov
jp
mov
mov
mov
push
push
leave
pop
mov
dec
addr16
sahf
add
popf
xor
fwait
jnp
jge
jno
sti
push
mov
daa
mov
clc
sub
jmp
movsl
movsl
mov
and
sarl
and
sub
and
xor
jp
rorl
rol
or
mov
insl
push
add
fbstp
add
push
cli
popf
adc
mov
test
inc
hlt
gs
xor
cld
mov
pusha
xchg
cmp
sbbl
test
xor
decl
pop
testb
cltd
popa
jmp
divl
mov
js
mov
adc
inc
shlb
cs
les
xchg
scas
adc
dec
dec
lahf
cmc
sub
mov
imull
int3
pop
nop
pop
mov
testl
gs
sbb
add
lahf
das
adc
xchg
sarl
out
mov
iret
int3
lahf
outsb
les
in
aas
xchg
or
mov
push
xor
or
push
rclb
lods
aaa
enter
jle
push
sbbb
cli
aam
add
das
mov
aas
fdivrl
fisubrl
shrb
jb
lods
rclb
roll
leave
xchg
fisttpll
add
xchg
fnsave
xor
push
pop
ja
mov
rolb
ffreep
sbb
sbb
adc
push
sub
pop
push
and
fs
mov
pop
mov
addl
cli
popa
push
lods
orl
push
lods
mov
in
xchg
ucomiss
pop
xchg
xchg
fmul
cmp
lock
frstor
icebp
aaa
lock
and
daa
xchg
das
iret
scas
mov
add
das
out
inc
xchg
dec
test
outsb
cmp
push
xchg
mov
jle
mov
loope
fstps
mov
cld
les
test
hlt
sbb
adc
mov
xchg
pusha
jp
in
push
dec
or
jno
cltd
mov
cmp
popf
in
jmp
cmc
xchg
and
mov
scas
mov
and
mov
fadds
cmp
pop
in
xor
mov
je
std
jp
mov
cs
xlat
jnp
popf
and
xor
mov
push
xor
ss
loopne
dec
or
sbb
mov
jns
aad
push
bound
enter
lds
add
das
xchg
invd
fstpt
outsb
mov
lea
or
xchg
movsb
add
aas
leave
xor
sub
xchg
fadd
sub
and
cmp
sarl
cmpb
add
cmpsb
push
frstor
or
insl
pop
aad
jo
shll
packssdw
cld
and
jl
mov
cmp
jb
icebp
imul
pop
ds
sub
iret
pusha
jno
iret
add
and
js
pop
ffreep
pop
out
sub
adc
addl
sbb
movsb
push
leave
jge
push
push
outsb
cwtl
push
pop
push
inc
movsl
sub
push
daa
sbb
jb
mov
pop
mov
call
ret
je
jno
divb
notl
loopne
cmp
sbb
bnd
dec
mov
in
je
cli
bound
das
jp
sbb
in
sti
xchg
sub
xchg
fstps
popa
pop
mov
and
aam
add
adcl
inc
popa
stos
xchg
mov
pop
ljmp
mov
inc
lock
jae
cltd
xor
out
jno
stc
mov
std
pop
mov
sahf
xlat
push
aam
pop
push
ret
push
push
mov
js
cmp
add
lods
aad
mov
nop
jo
inc
mov
dec
jo
jle
dec
inc
in
push
push
inc
mov
xchg
movq
xor
in
or
call
cmp
movsb
daa
cli
dec
push
popf
aas
call
mov
lock
das
inc
pop
mov
inc
xchg
lock
cld
or
les
mov
pusha
into
adc
insl
in
testl
lods
sub
loope
gs
cwtl
and
sub
int
in
in
sub
pop
mov
dec
mov
into
loop
xchg
xlat
rcll
add
clc
or
push
rolb
pop
lret
or
dec
iret
adc
cs
dec
lret
rcll
cmpsl
lret
lods
xor
fisubrs
call
inc
push
ret
dec
sub
xor
mov
and
jle
jmp
rcl
sbb
iret
das
adc
popf
aaa
mov
das
mov
xor
out
pusha
or
aad
dec
xchg
scas
dec
pop
push
xorb
pop
out
sub
inc
adcb
mov
xor
pushf
ljmp
pop
xorb
mov
push
outsl
aam
stos
pop
dec
rclb
out
jl
loope
repnz
mov
arpl
adcl
js
push
test
lret
and
push
adc
or
jo
lock
loop
aam
cltd
cld
lahf
ret
cmc
jno
dec
add
out
lcall
pop
in
xor
xchg
sbb
test
jne
int
jo
aad
fistpl
sbb
daa
insb
fldt
xor
enter
push
scas
jae
jp
jp
rorb
mov
or
int3
pop
fldcw
fldl
insl
xor
addr16
in
in
sbb
dec
aad
nop
adcb
js
jae
sbb
fdivrl
pusha
data16
mov
stos
std
das
dec
int3
cld
into
sbb
data16
out
mov
xor
or
jo,pn
icebp
add
xchg
xchg
in
xlat
adc
adc
cmpsl
jmp
lret
movsb
sbb
aaa
or
nopl
jns
dec
adc
xchg
lcall
sbb
cmp
jl
jl
or
scas
inc
rorl
mov
lods
jl
and
sub
mov
test
mov
or
adc
xchg
sahf
mov
int3
mov
mov
mov
shlb
dec
or
shrl
ss
lret
outsb
call
dec
stc
clc
test
cmp
push
jle
xchg
dec
sbb
lahf
or
xchg
push
pop
or
testb
addb
or
movsl
lock
cltd
fwait
sbb
push
pop
rorb
enter
popa
roll
adc
pop
lea
xchg
pop
cmp
ret
loope
pop
lds
inc
adc
cmp
push
lret
push
aas
push
add
pusha
jge
inc
cmpsb
aas
imul
shr
sub
pop
mov
mov
scas
mov
ret
mov
mov
outsl
aas
push
mov
push
aas
sbb
out
enter
hlt
cmpsl
mov
and
imul
jge
andl
pop
test
js
and
loop
inc
dec
nop
push
xchg
xchg
dec
test
fidivl
jne
sbb
dec
in
popf
fisubrs
cltd
mov
sbb
aad
fnsave
movsl
mov
mov
xchg
out
dec
out
repz
mov
int3
pusha
or
mov
pop
ss
daa
enter
cmc
mov
nop
cltd
add
jl
cli
fdivrl
enter
loop
or
xchg
push
jno
mov
shrb
or
popa
add
nop
xchg
addr16
sub
outsb
xchg
vmwrite
jo
aas
movsb
push
push
and
mov
leave
adc
pop
imul
mov
pop
mov
mov
adc
sbb
cmp
adc
scas
icebp
lds
push
insl
xchg
pop
jnp
insb
pop
repz
nop
jecxz
rcrl
fiadds
stc
imul
js
jge
das
rcl
fstl
movsb
shll
adc
mov
xor
dec
add
jl
adc
insl
adc
cwtl
mov
cmp
xor
mov
dec
jo
dec
jl
bound
lcall
outsb
mov
jl
adc
lret
stc
insl
adc
cmp
fsub
pop
sub
stc
je
sub
std
or
gs
ljmp
jnp
push
pop
aas
mov
lret
jecxz
push
mov
add
pop
stos
out
mov
dec
jp
movsl
inc
lea
pop
mov
mov
fidivrs
iret
mov
insb
cmp
mov
sub
arpl
out
out
inc
pop
sarl
int3
lret
mov
push
lret
shlb
sbb
rorb
push
inc
and
lods
push
jecxz
imul
sub
rcll
adc
jmp
mov
sub
push
int3
outsl
jbe
out
outsl
fcoml
fcoml
pusha
pop
cmp
mov
jo
mov
pushf
icebp
stc
in
sbb
fwait
mov
scas
fmull
jbe
lea
test
sahf
xor
jbe
jle
loopne
sbb
sarb
jbe
dec
nop
fmuls
mov
orb
mov
adc
push
push
dec
es
cld
es
mov
cmc
sub
and
pop
das
pushf
mov
pop
arpl
pop
int
push
pop
cmovg
xchg
cmp
lahf
xchg
inc
inc
insl
sub
inc
adc
ret
les
or
xchg
mov
cwtl
sub
pop
jo
pusha
out
mov
outsl
hlt
mov
dec
or
push
adc
dec
fidivrl
aaa
or
hlt
push
sbb
xchg
and
out
jnp
roll
adc
lret
into
pop
icebp
imul
xlat
mov
mov
mov
lods
mov
lods
cmpsb
sbb
fnstcw
adc
pushf
out
pop
cmp
jecxz
or
dec
shll
sbb
adc
cmp
loop
jne
and
sub
mov
and
add
sti
xor
iret
dec
pop
stos
test
aas
cmpsl
cwtl
xor
scas
test
mov
mov
adc
mov
outsl
andb
mov
repnz
cmp
insb
xchg
pop
cmpsb
mov
mov
push
xchg
inc
sbb
adc
icebp
subb
xchg
insb
lods
daa
arpl
xchg
in
adc
push
in
jge
mov
jg,pn
out
hlt
in
sbb
xor
and
paddusw
lods
mov
fimull
imul
sarb
aaa
in
xchg
mov
mov
cltd
in
pop
or
xor
cwtl
shll
push
adc
xor
and
or
push
scas
leave
pop
pop
mov
je
add
inc
pusha
add
mov
sbb
push
sub
mov
cmp
das
ret
inc
pop
scas
sbb
mov
pop
cs
sbb
call
pop
repz
sub
push
pop
test
jno
sbb
mov
jnp
push
add
jp
bound
jno
sbb
jg
jae
mov
test
add
adcb
cmp
pop
adc
lahf
movsb
jl
jl
inc
jbe
test
mov
aas
push
leave
repz
and
jecxz
leave
data16
cltd
test
or
xchg
imul
xor
insb
leave
sbbb
sbb
mov
inc
and
into
add
subb
aad
lock
loopw
arpl
stos
stc
jns
jp
push
test
push
jb
insl
jmp
arpl
fs
pusha
dec
and
inc
mov
inc
js
adc
cmpsb
fisubrs
repnz
sub
into
sub
ljmp
in
xlat
sti
sub
pop
pop
mov
out
push
xchg
xchg
sbb
add
not
sub
imul
push
out
arpl
mov
jg
addr16
add
fdecstp
mov
pop
enter
std
xor
xlat
je
icebp
popa
add
or
loope
in
mull
ret
fucom
jnp
xor
mov
jb
adc
jo
cmp
leave
xlat
xchg
sub
add
les
je
and
lret
and
rcrl
pusha
or
pop
sar
or
cli
sti
mov
movsl
lahf
pop
psraw
in
adc
fistpll
aaa
mov
sbbb
mov
inc
dec
imul
xor
test
ret
fstl
mov
or
and
dec
mov
xchg
aas
out
add
clc
aad
pop
mov
sbb
or
aaa
bound
jo
push
push
pushf
js
sbb
cmpb
fwait
push
pop
cmp
out
fstpt
mov
dec
jns
lret
rcll
push
adc
or
mov
jle
xchg
mov
jle
stos
push
clc
and
jmp
dec
lods
fcomps
push
jno
fisubl
or
fwait
gs
loop
add
mov
cltd
mov
addr16
rcrb
out
mov
adc
arpl
push
ds
lods
jo
mov
cltd
sbb
pop
cmc
xor
sbb
inc
cs
rcrb
add
inc
cwtl
jge
aad
sbb
push
push
push
loopne
xor
dec
or
sbb
out
pop
pop
ret
and
mov
or
xchg
mov
dec
stc
xchg
jb
sti
xchg
inc
add
jle
sbb
lret
mov
test
push
ret
add
pop
adc
repz
ret
aas
xchg
cmp
lods
and
in
shrl
or
outsl
jp
mov
iret
pushf
fdivs
xlat
jge
shl
mov
fimull
mov
xor
inc
xor
fstpl
push
scas
cmp
fwait
inc
inc
jno
cmc
pop
adc
adc
fidivrl
sub
cwtl
mov
xchg
mov
cwtl
sti
xchg
loop
ljmp
ja
inc
cmp
mov
cmpsl
popf
jge
dec
lods
jge
loopne
mov
lfs
xchg
dec
or
bound
or
and
add
mov
ja
pop
mov
roll
insb
push
dec
lcall
add
es
js
pop
sub
adc
mov
js
stos
xchg
mov
xor
dec
orl
push
testl
mov
mov
xchg
or
mov
sub
fiaddl
outsb
push
xchg
fdivrl
add
jl
xor
xlat
out
add
add
repnz
sbb
and
outsl
fwait
divl
repnz
pop
ret
push
hlt
ss
lods
idivb
fsubs
div
out
dec
push
faddp
xchg
cmp
lods
inc
decb
ljmp
jns
daa
jge
out
sub
jp
inc
mov
add
pushf
pop
or
cmp
add
jno
and
mov
inc
lods
xor
add
mov
shrl
shld
roll
imul
sub
xlat
cld
xlat
stos
sbb
adc
jecxz
or
mov
push
add
push
call
sub
enter
push
jb
cli
ss
or
shlb
outsl
mov
mul
xchg
jnp
pushf
mov
xchg
mov
mov
cld
fstps
inc
push
stos
lods
jmp
ja
fs
fisttpl
or
sub
das
sbb
scas
mov
mov
xchg
ficompl
mov
jge
or
dec
movsb
ror
imul
lret
fwait
loop
push
es
je
sbb
pushf
fs
adc
mov
fs
in
add
add
mov
ror
sbb
jge
xor
es
xor
sti
xchg
arpl
andb
push
push
cmc
lcall
scas
adc
inc
std
in
push
inc
ret
sbb
subl
jo
pop
daa
repnz
and
lahf
mov
and
push
sti
xor
inc
pop
test
and
dec
dec
mov
inc
mov
in
cmp
or
out
test
dec
lcall
dec
inc
inc
push
mov
adc
stos
out
and
test
cltd
cmpsb
sub
jl
roll
mov
mov
push
pop
loopne
les
in
push
cmp
lods
cli
out
and
arpl
imul
jle
or
xor
inc
mov
inc
mov
adc
in
scas
cmc
adc
jbe
push
mov
and
mov
adc
adcl
lret
mov
scas
mov
jecxz
in
inc
sub
das
mov
rcrb
sub
mov
sbb
pop
and
pop
insl
lock
mov
pop
push
or
or
notl
in
cmp
inc
lock
outsl
mov
inc
sbb
dec
mov
rorb
lret
or
xor
mov
push
pop
fisubl
mov
pushf
xorl
aad
in
lahf
cmp
in
mov
sbb
mov
mov
daa
pop
les
in
les
orb
les
cmpl
outsb
sub
inc
cld
outsb
ficoms
mov
xlat
jecxz
daa
sbb
dec
lret
popf
into
hlt
fbstp
aad
adc
outsl
mov
mov
filds
sub
mov
aas
ljmp
sub
push
nop
cmp
or
cwtl
pushf
jae
imul
js
movsb
push
into
cmp
pop
and
cmp
pop
push
sti
and
mov
clc
sub
mov
orb
filds
test
fneni(8087
ret
stos
push
xchg
negb
sti
mov
pop
dec
aad
retw
iret
xchg
cmpsl
in
scas
repnz
sub
adc
dec
sti
jae
sbbb
cmpsb
icebp
inc
rcr
mov
imul
cwtl
andnps
out
dec
pop
mov
push
add
insb
jmp
mov
dec
xchg
andl
jns
xchg
xor
je
fldenv
imul
xor
cltd
or
push
pop
in
mov
icebp
jl
sbb
scas
jl
and
pop
mov
sub
ficoml
insl
sub
je
inc
jno
inc
aad
sbb
mov
pop
and
sub
mov
in
xlat
pop
xor
mov
add
fstps
enter
sbb
mov
xor
out
inc
inc
ljmp
lock
icebp
lret
stc
jl
push
or
aas
shll
jmp
cmp
hlt
scas
cmpsw
inc
sbbl
cs
and
cli
dec
and
push
mov
pusha
es
aaa
test
add
xor
sub
rolb
xor
mov
cmp
push
adc
nop
pushf
das
icebp
popf
sbb
jae
scas
out
fiadds
pop
push
scas
mov
mov
shlb
sub
aas
lock
xor
stos
fisttpl
data16
stos
jp
or
mov
adc
roll
xchg
xor
icebp
mov
fs
andl
push
insb
push
mov
sbbl
pop
mov
and
nop
cli
mov
and
cmp
test
cmp
dec
push
fcoml
ss
jno
mov
mov
xchg
outsl
cli
les
xchg
shrl
xchg
jmp
mov
cmpsl
push
lahf
xor
mov
das
mov
mov
shrl
mov
push
popf
mov
cmp
cltd
aas
clc
mov
xlat
aam
mov
sub
pop
test
cmp
mov
lret
lret
xor
mov
xor
pop
mov
hlt
sub
mov
push
mov
xor
dec
mov
mov
cmp
imull
test
loopne
mov
movsl
fistps
jne
sbb
pop
pop
in
and
fcmovne
int
add
pop
sbb
fldt
mov
fbstp
push
jbe
mov
add
jne,pt
js
ja
xchg
mov
xchg
sar
mov
out
dec
mov
push
cli
pop
popa
test
mov
inc
or
mov
mov
roll
push
xchg
adc
outsb
lret
jb
jecxz
pop
cmp
dec
fists
cmpsl
cmp
cmp
pusha
cmp
jae
dec
cltd
add
cmp
push
out
or
and
add
xor
mov
sub
push
xchg
outsb
lret
inc
test
mov
mov
cs
mov
and
ljmp
push
fs
dec
lds
cwtl
inc
out
xor
aaa
enter
mov
cmp
pop
sbb
cmpsb
or
dec
enter
lret
mov
push
or
jg
out
mov
cwtl
cltd
cmp
sub
push
mov
sahf
cmpsl
mov
mov
lea
jge
add
jg
pop
adc
jb
and
adc
lods
pop
add
out
inc
jp
in
and
fnsave
push
sub
xor
lock
dec
or
or
jecxz
outsl
les
mov
fmull
arpl
movsb
icebp
cmp
mov
or
jo
sub
push
aad
cli
nop
push
scas
mov
xchg
pushf
mov
or
pop
or
fwait
cmp
lcall
push
fwait
clc
sarb
lods
add
stos
dec
loopne
mov
inc
cwtl
push
ror
cld
cmp
pop
xchg
pop
enter
pop
pop
jae
insb
test
pop
pusha
iret
mov
inc
push
adc
or
mov
or
packssdw
mov
leave
sbb
ljmp
cmp
jle
out
cmp
ss
or
push
jp
icebp
mov
xchg
xor
out
cmc
hlt
aam
push
neg
push
mov
dec
iret
rclb
jne
cmp
lock
sub
xchg
cs
mov
cmp
xchg
jne
dec
ffreep
fsubrl
lock
pushaw
mov
lret
cmp
sbb
leave
int
stos
lret
xorl
test
insl
mov
in
add
mov
cmp
mov
fxch
sbb
repz
mov
das
push
shl
pop
pop
pop
lcall
sub
dec
sub
mov
xchg
xor
imul
dec
sbb
pushf
rcrb
mov
add
mov
movsl
sbbb
shrb
mov
ret
and
test
call
jb
and
adc
stc
cmpsb
jns
mov
arpl
sub
cmp
xchg
jb
mov
scas
jns
insb
lock
jmp
loopne
in
cs
push
push
mov
hlt
int3
cmp
dec
cld
cmpsb
mov
cld
orb
inc
cmc
into
xor
xchg
je
mov
aam
pop
pusha
pop
push
sbbl
cs
jns
jns
sub
jmp
stos
sti
inc
mov
inc
and
insb
scas
lock
jl
inc
in
pop
fsubr
dec
xchg
push
mov
shll
int
mov
cli
mov
sub
les
and
dec
negl
pusha
push
mov
push
cli
push
dec
rclb
and
push
inc
mov
jecxz
lcall
mov
insb
add
inc
and
jbe
shll
adc
xor
mov
cs
add
pusha
xchg
int3
pop
mov
adc
dec
or
loopne
repz
in
and
add
test
ljmp
mov
lret
dec
lahf
xchg
push
inc
adc
nop
adc
hlt
imul
add
dec
setnp
sub
adc
cltd
in
adc
xchg
stos
fidivl
push
xor
movsb
adc
sbb
dec
xor
leave
iret
jns
adc
jnp
push
xchg
into
or
pop
cmc
add
mov
jg
fcmovne
dec
adc
add
adc
andb
pavgb
mov
sub
cmp
cmp
pop
mov
jo
jo
hlt
jmp
daa
xor
test
sub
jne
jl
add
ja
pop
mov
nop
push
subl
clc
insb
inc
shl
addb
mov
ret
push
aaa
push
adc
fstl
or
mov
push
jnp
popf
setle
cmp
mov
pop
mov
cmp
bound
negl
shlb
setns
je
lods
hlt
test
push
pop
fistpll
xor
decb
jp
addl
jg
cmp
push
divl
cmp
xchg
jne
dec
cmpsb
in
adc
data16
jl
mov
scas
in
fidivrs
dec
xchg
sbb
loope
mov
and
cmp
cld
js
popa
mov
insl
repz
mov
dec
mov
mov
loopne
ja
mov
pop
icebp
sub
xor
xchg
daa
adc
rcrb
scas
dec
pop
or
insl
mov
add
xchg
fldenv
adc
cmpsb
and
mov
jg
mov
stos
ja
shrb
stos
test
sbb
outsb
cmp
scas
aam
loope
or
add
lock
mov
push
loop
into
add
inc
mov
fstpt
pop
int
inc
jp
cmpl
iret
arpl
cld
cmc
inc
rcrl
pop
int
add
arpl
pushf
in
fs
sbb
jne
shll
outsl
lds
sti
jle
popf
mov
push
fisubrs
icebp
outsb
jb
cwtl
jbe
cltd
mov
fnstsw
insl
pop
xchg
push
add
and
xor
pop
push
add
inc
cmp
and
mov
and
jl
xchg
add
xchg
mov
adc
repz
add
xchg
mov
or
jns
test
xchg
mov
loop
lret
fsubrl
inc
mov
pop
dec
clc
test
xchg
cwtl
pop
adc
call
sarb
ds
and
sti
sti
int3
xchg
pop
repz
outsb
pusha
push
adc
dec
push
cmp
mov
mov
mov
inc
sti
and
mov
jns
ret
stos
repnz
pop
inc
int
mov
jne
cmp
cmp
out
jo
lea
outsl
sub
les
pop
sub
cld
fwait
jp
dec
push
push
mov
pop
jle
mov
inc
pop
jbe
sub
mov
ds
scas
cmp
push
leave
pop
gs
dec
jmp
pop
addr16
xor
rolb
shl
lock
lods
sbb
dec
pop
pushaw
movsb
rcrl
test
movsb
xchg
jp
int
inc
aaa
dec
pop
push
daa
add
xor
sbb
xchg
dec
pop
leave
test
jb
lods
mov
sti
cmc
shl
popf
jp
je
pop
bnd
inc
mov
roll
out
lods
xchg
mov
jbe
push
js
cs
fistpl
aad
and
cld
test
fisttps
fistpll
fucom
lcall
call
lock
andl
bound
and
pusha
pusha
cmp
sub
lds
cmp
sub
repz
push
ret
mov
lods
push
cmp
pushf
inc
in
fisubl
xchg
mov
popf
pop
fwait
mov
cltd
jno
sbb
and
mov
xchg
xchg
mov
not
sub
xchg
add
sbb
fists
dec
cmp
pop
pop
loope
add
lahf
fcmovnb
aas
adc
xor
jne
pop
mov
adc
mov
add
scas
pop
imull
fcomip
xchg
scas
sbb
or
pop
mov
outsb
push
sub
gs
and
xor
dec
popa
rorb
mov
xchg
xlat
add
add
xchg
out
fcom
push
subl
xchg
sbb
data16
addb
or
xchg
cmp
loop
xchg
fsubr
dec
pop
cltd
cltd
xchg
test
push
adc
pop
jae
push
mov
iret
sahf
insb
xor
jp
add
pop
mov
movsb
jl
mov
or
xor
hlt
jb
subb
inc
pop
gs
les
cmpsl
jb
dec
ss
jp
cltd
dec
clc
mov
push
inc
cmp
pop
arpl
push
enter
movsb
fnstcw
negl
and
lret
nop
jge
mov
xchg
xor
aam
pop
jmp
push
lret
bt
out
rorb
inc
hlt
mov
sbb
mov
sbb
mov
cmpsb
movsb
outsb
cmc
push
in
aas
fst
fwait
mov
hlt
adc
ljmp
jl
test
imul
cmp
and
mov
jbe
hlt
cmp
dec
lds
and
dec
xor
movsb
sbb
fs
dec
cltd
jnp
movb
push
nop
lret
fstl
push
fmull
test
mov
sbb
or
pop
jno
shl
lods
test
push
jb
ljmp
enter
js
jnp
cld
stos
loopne
xor
xchg
xchg
jg
rol
shrb
cltd
mov
sti
andb
gs
or
dec
cmpsb
adc
repz
add
cmpsb
rcr
lret
mov
mov
icebp
mov
cld
jge
push
inc
add
sub
mov
and
stc
and
int
scas
cmp
fwait
mov
adc
adc
out
aas
lret
add
pusha
jmp
inc
gs
push
out
test
mov
pop
aad
test
adc
imul
dec
and
or
push
dec
test
test
inc
jns
outsb
add
push
addr16
rcl
xor
add
aaa
inc
sbb
fsubl
add
pop
add
test
test
jge
scas
adc
test
dec
repnz
push
notl
mov
xchg
fstpl
mov
pusha
mov
test
pushl
sbb
dec
lret
cmc
out
test
add
lods
jns
movsl
add
pop
cmp
dec
mov
sub
cld
bound
cmp
jl
stos
and
out
pushf
dec
cld
pop
mov
dec
outsb
xor
pushf
mov
sub
push
mov
inc
mov
xchg
leave
push
cmp
lret
aam
inc
daa
adcl
mov
rcl
push
out
mov
pop
sbb
int
add
push
mov
pop
pop
in
sarl
xchg
fxch
add
test
jno
lds
mov
adc
lds
sbb
cli
dec
test
push
cwtl
push
dec
jnp
cld
ficoml
add
filds
xor
xchg
loop
clc
push
push
mov
sbb
out
push
js
sbb
test
lods
shrb
pop
loopne
or
lods
sbb
test
scas
fsubr
mov
mov
faddp
mov
mov
inc
mov
gs
jbe
mov
loop
out
lds
inc
xchg
lret
inc
push
dec
nop
test
mov
jmp
push
sahf
out
fst
jno
aas
int
pushf
mov
cld
in
fstps
adc
sahf
das
insb
ficoms
ret
gs
sub
push
rcl
fcmovnu
cmpsl
add
lea
stc
xlat
leave
dec
movsl
in
inc
jo
inc
test
mov
out
test
dec
sub
outsb
mov
push
xor
inc
xlat
scas
cmc
mov
insb
xchg
xchg
jmp
mov
adc
js
ret
out
jns
xchg
jns
loope
int3
iret
mov
fcomps
test
and
push
data16
or
and
stc
sub
mov
jbe
insb
fldcw
mov
jl
mov
mov
add
jge
or
adcb
clc
cwtl
stc
cmp
jle
lret
and
mov
mov
test
xchg
stc
popf
mov
cwtl
xor
add
setb
fistpl
xorl
cmp
lahf
lods
push
pop
test
jbe
ss
in
mov
add
lahf
xchg
jns
xchg
jne
subl
jl
je
mov
dec
push
in
clc
pop
adc
push
insl
pop
sub
cwtl
scas
lret
push
les
jecxz
scas
fsub
orl
addr16
inc
in
xchg
pop
push
or
mov
cmp
out
pop
lcall
jmp
push
in
cmp
cld
sbb
push
or
pop
push
adc
loopne
pop
stos
in
xchg
lods
cmpb
push
mov
sbb
lahf
ds
add
adc
pop
sub
sub
xor
int3
dec
iret
jb
xchg
inc
mov
iret
mov
pop
fisubrs
popf
cmp
jb
sbb
cltd
fwait
fiadds
mov
adc
in
cmp
lock
mov
sahf
cli
mov
sub
sub
cwtl
icebp
addr16
insb
rolb
xor
dec
or
mov
mov
dec
dec
jne
cmpl
lcall
push
lret
and
or
pop
clc
jmp
mov
sub
dec
or
enter
mov
inc
inc
call
mov
fwait
pop
and
pop
scas
inc
ror
outsl
insb
stos
adc
xlat
add
xchg
lret
pop
mov
add
mov
imul
lahf
mov
sub
rcrb
sub
addr16
push
sbb
in
and
cmc
adc
xor
inc
inc
push
mov
xlat
ret
je
push
imul
push
cmp
mov
mov
data16
sti
lods
fwait
pushf
inc
lods
divl
xchg
jecxz
jl
pop
pop
mov
jecxz
mov
iret
ja
negb
sub
pop
cmc
jmp
lret
jle
add
mov
pop
mov
xchg
loopne
jl
inc
adc
xchg
lahf
xor
cmp
cwtl
cmpsb
dec
mov
arpl
push
lret
and
xchg
insb
push
mov
push
pop
test
jbe
mov
mov
mov
and
jbe
cld
dec
dec
xor
jmp
sbb
int3
jecxz
add
and
jge
xchg
sti
inc
and
fs
aad
jbe
mov
mov
das
push
icebp
sub
inc
movsl
les
out
aam
jle
sbb
adc
mov
and
or
inc
or
pop
sti
push
xor
lds
pop
inc
in
test
lcall
push
test
pop
cmpsb
sub
imulb
loope
push
in
lret
mov
stc
adc
rorb
fists
ljmp
mov
popa
out
mov
int
sbb
jmp
mov
xor
inc
fistl
adc
adc
xor
mov
pop
jmp
mov
cmc
dec
pop
outsb
cmp
fmulp
xorb
add
insb
rcll
lods
ficoms
mov
rol
fsubrs
sbb
out
mov
and
dec
imul
inc
dec
fwait
cmp
sti
fsts
lret
fs
scas
ror
repz
jnp
or
cmp
xchg
dec
int3
xchg
inc
test
jp
pop
nop
pushf
fistpl
aam
imul
pop
push
xchg
inc
loop
push
push
subl
mov
cld
dec
xchg
lcall
repnz
jbe
test
cmp
int
sbb
inc
loop
add
xchg
clc
mov
std
ds
sub
nop
dec
scas
imul
shlb
pop
adc
mov
ja
dec
mov
dec
enter
add
rcr
push
es
and
fisubrs
cwtl
iret
pushf
xor
rclb
xchg
aas
dec
cmc
pop
in
sub
mov
sbb
xor
jmp
dec
jo
sub
subb
adc
or
shl
pop
mov
sub
in
sahf
mov
xchg
out
fwait
lods
dec
push
xchg
sbb
fwait
je
mov
jg
add
stos
clc
cmpl
xlat
xlat
mov
jae
push
mov
xchg
adc
mov
jecxz
adc
jne
roll
cmpsl
and
xor
ficompl
testb
cmp
call
out
leave
mov
inc
adcb
mov
xor
fwait
dec
adc
sub
cmpsl
jns
ja
arpl
xchg
adc
mov
or
daa
in
push
sub
xchg
adc
push
lcall
push
mov
mov
jae
hlt
sarl
dec
test
xchg
inc
xor
inc
pop
movsb
daa
or
in
sbb
movntps
lods
fimuls
add
mov
test
jne
or
sbb
testb
scas
sbb
shr
fiadds
loope
in
sahf
addr16
in
xchg
dec
adc
psrlw
rclb
clc
dec
jnp
inc
mov
test
adc
mov
xchg
sub
daa
dec
fsincos
pop
jb
sti
add
xor
cmpsl
sub
fimuls
mov
sahf
popa
int3
jb
mov
out
pop
out
inc
adc
sahf
jmp
xlat
mov
imul
loope
mov
mov
movsl
dec
mov
xchg
xor
lds
cwtl
sbb
stos
scas
mov
mov
mov
rorl
andl
out
jae
sbb
inc
cmp
mov
sub
mov
fwait
cmp
aam
push
adc
adc
xchg
cmp
loop
mov
mov
mov
rolb
fldcw
xlat
adc
movsb
aad
js
inc
outsb
daa
loopne
fldcw
push
shlb
dec
loope
lcall
cmp
mov
sbb
lds
repz
push
pop
aas
mov
outsb
xor
cmp
stc
sub
push
xlat
ja
pop
pop
repz
and
pushf
insw
cld
adc
or
loope
jmp
test
fwait
xor
cwtl
out
mov
sbb
or
ud2
ficoml
jbe
rcll
dec
sbb
push
call
int3
lret
notl
lods
xor
lea
sbb
mov
cmpsb
pop
aas
out
dec
fisttpll
xchg
pusha
pop
movsl
enter
in
ror
clc
mov
dec
mov
leave
add
inc
cwtl
ja
int3
xor
and
push
xchg
into
push
lea
adc
pop
shll
out
scas
loopne
daa
xchg
stos
dec
mov
push
mov
mov
cwtl
lret
lods
loop
mov
mov
xorl
cmpl
sbb
add
add
pop
push
inc
mov
jecxz
mov
mov
repz
ret
inc
cwtl
xor
mov
or
mov
ffree
imul
shl
xchg
jne
mov
pop
pop
rorl
shrb
in
addb
data16
imul
lods
shl
dec
push
xor
add
mov
adc
mov
push
aaa
or
cmp
pop
mov
mov
rol
add
lock
lahf
mov
inc
mov
dec
mov
xor
stos
fisubrs
sbb
jp
mov
jo
stos
movsb
das
les
xchg
inc
pop
jae
cmpsl
adc
mov
fadd
inc
mov
or
enter
fdivrs
test
insl
mov
adc
daa
les
outsl
push
js
xor
int
call
push
fistl
push
mov
xchg
cmp
lahf
mov
sbb
cmc
imul
icebp
push
jo
pushf
fisubrs
add
jl
jo
js
popf
dec
stc
push
pop
addr16
push
mov
pop
das
ljmp
sar
jge
lock
inc
xor
push
repnz
dec
imulb
call
aad
jo
fwait
aaa
cmpl
inc
mov
lcall
in
inc
mov
adc
out
sub
mov
pop
cmc
jmp
hlt
push
int
xor
pop
in
adc
dec
and
rorl
push
push
add
pusha
mov
push
mov
cmp
out
xor
dec
imul
inc
or
int
mov
cmpsb
xor
test
test
lds
jb
jbe
aas
inc
mov
loope
mov
mov
int3
in
sbb
idivb
xor
lea
pop
js
and
ja
push
ja
lret
lds
jg
sbbb
iret
cltd
sub
push
inc
xor
gs
jno
movl
fldlg2
mov
cwtl
push
vcvtsi2sdl
out
out
imul
in
mov
je
xor
jecxz
int
mov
push
out
dec
cmp
dec
cmp
inc
outsl
leave
adc
cmpb
xlat
push
cmpb
mov
das
hlt
jge
std
data16
cmpsb
jp
mov
cmpl
stos
lds
mov
lock
vmovdqu
jmp
xor
pop
movsl
mov
mov
jmp
adc
aad
subb
or
insb
xchg
stc
push
dec
ret
in
dec
idiv
push
pop
jnp
mov
std
add
inc
test
lods
inc
sub
jno
rorl
add
jge
imul
out
sbb
subl
aam
and
pop
ss
or
rcrl
jg
sbb
daa
cmp
sub
or
outsb
jge
hlt
mov
or
jne
mov
or
xchg
int3
fisttps
xchg
push
shll
ret
sbb
or
icebp
loope
jmp
aaa
dec
aad
dec
gs
dec
push
push
sbb
call
mov
popf
and
filds
xor
sbb
dec
mov
test
jb
mov
pop
fs
enter
sub
push
add
fistps
fdivp
mov
xlat
or
aam
xor
mov
cmpsl
stc
xor
cmpsl
jle
mov
push
dec
cmp
push
aam
xchg
or
push
into
cli
lods
xor
dec
lea
jnp
popf
lds
push
jo
in
je
ljmp
mov
dec
push
dec
xor
sbb
xchg
les
int3
xchg
loop
dec
int3
and
mov
mov
sub
nop
data16
adc
sub
push
stos
pop
lea
test
xor
ror
cmp
jmp
xchg
pop
mov
xchg
aam
inc
popf
ror
and
sbb
xchg
shll
xchg
adc
in
popa
cmp
shl
fisttpll
enter
test
mov
mov
xchg
push
std
mov
dec
insb
leave
mov
push
imul
movsb
add
xchg
cld
std
sarl
repz
out
sbb
push
movsl
cmp
mov
in
aas
push
clc
push
mov
xor
sub
aaa
dec
ja
sbb
mov
lcall
fsubrs
pop
stos
ljmp
mov
insb
jge
fcomp
dec
xchg
push
fisubl
or
faddl
xor
mov
cmpsl
aaa
or
test
dec
loop
cltd
inc
nop
jg
and
dec
add
out
adc
cmpsb
pop
jge
ret
sub
mov
push
mov
mov
sbb
stos
push
out
jno
sahf
loope
test
es
lods
mov
pop
lret
jp
arpl
dec
std
mov
sub
repz
pop
push
outsb
mov
lret
fdivrs
movsb
xor
movsl
stc
pop
cli
push
call
fmuls
inc
pop
inc
divl
jg
or
add
pop
dec
pop
or
daa
adc
cmp
jbe
sbb
push
dec
mov
add
adc
addl
jo
popf
sbb
or
cmp
xchg
lods
stos
or
jb
jge
hlt
xor
loopne
mov
test
gs
loopne
sub
jl
cmp
cli
push
cmpsl
outsl
push
jmp
push
jge
lret
cmp
icebp
mov
fs
sub
jmp
cs
xchg
jne
push
int3
bound
inc
loope
mov
dec
pop
pop
aad
jns
ljmp
jge
sti
jg
outsb
test
ja
adc
add
cmp
lcall
mov
cmp
clc
push
fdivrl
sti
xchg
rcrl
in
cld
and
pop
lcall
adc
cmpsb
hlt
mov
ja
mov
mov
inc
shll
inc
and
push
ds
xor
cld
hlt
pop
pop
std
or
dec
or
push
mov
xorb
hlt
fadds
stc
call
add
pop
testl
push
xor
sub
movsl
adc
test
fs
setno
jo
rcrl
aas
adc
into
cmp
mov
push
xchg
add
adc
dec
or
mov
std
das
dec
xor
fildl
or
jle
aaa
cld
sbbb
ret
repz
inc
rcll
out
je
cmp
sbb
lahf
xchg
lock
ds
sbb
dec
dec
pop
mov
mov
push
inc
lret
cmp
inc
xlat
into
xchg
push
adc
lcall
push
push
dec
adc
cs
and
jmp
movsb
add
xor
jne
jbe
dec
in
imulb
inc
adc
jns
mov
adc
imul
ljmp
leave
adcb
pop
jns
jo
push
mov
das
rcl
out
sub
xor
mov
and
mov
mov
mov
fcmovb
adc
mov
xchg
gs
aam
lods
cmp
push
sbb
nop
pop
aas
jge
pop
cld
push
push
or
jmp
mov
mov
sar
sahf
push
sbb
gs
sbb
or
dec
loope
in
cmp
pop
sub
test
add
xor
jo
inc
cmp
mov
cmc
mov
mov
fst
cmp
add
xor
and
mov
pushf
inc
daa
loope
jno
push
adc
leave
mov
hlt
push
and
jg
push
std
lcall
cmp
mov
mov
pop
lds
ret
sub
scas
mov
or
push
enter
jecxz
je
xchg
jns
andb
pop
push
fidivs
pop
pop
sub
fldcw
jns
xchg
and
clc
lea
add
test
inc
pusha
sahf
mov
lods
adc
fldcw
jb
lods
data16
aaa
cld
jl
inc
jle
test
jnp
aas
roll
addb
scas
dec
ror
add
sub
leave
and
mov
loope
popf
push
lret
push
push
jbe
lock
das
into
out
jns
mov
repnz
and
lcall
rcll
mov
push
pop
or
fisttpl
jns
mov
out
pop
fisubs
xor
sub
daa
cmp
jecxz
mov
xor
or
gs
call
orb
lret
out
and
or
xor
int
cmp
pusha
xchg
out
pop
negl
mov
aad
pop
flds
movsb
stc
add
push
dec
daa
dec
adc
fwait
aaa
add
fldenv
pop
fidivs
adc
mov
pusha
in
mov
popf
fildll
dec
inc
inc
jp
insl
push
scas
dec
dec
pop
in
and
jne
or
fldl
sbb
mov
mov
jb,pn
cli
cmpsl
mov
in
fiadds
mov
mov
sub
insl
dec
mov
call
repz
inc
cltd
in
push
into
das
fstp
and
sarl
imul
shr
orb
stc
rcrl
bts
call
cmp
clc
inc
lret
fdivl
pop
scas
int
js
imul
push
arpl
xchg
dec
sbb
jns
andl
lods
xchg
mov
das
inc
repnz
cli
dec
pop
push
sbb
insl
jl
clc
jp
inc
or
jns
stos
pop
leave
out
sub
pop
jecxz
shlb
and
jp
push
jl
and
pusha
mov
push
mov
lock
das
xchg
int3
mov
mov
aas
mov
mov
repz
aas
xchg
fsubl
pop
mov
lock
test
mov
in
cmp
fistpl
mov
scas
adc
sbb
std
mov
lea
cld
xchg
cmpsb
clc
push
rcll
push
ljmp
push
je
xchg
out
xchg
popa
cmpsl
mov
adc
mov
out
xchg
out
aas
or
pop
test
pop
push
dec
inc
fs
push
pusha
loop
pushf
and
lret
jmp
pop
pop
push
test
sbbl
mov
pop
mov
cmp
mov
sub
mov
cmp
sbb
imul
or
repnz
or
mov
add
sbb
add
push
push
sahf
sub
pop
idivl
inc
push
push
or
mov
lea
lahf
push
arpl
imul
jg
adc
adc
out
ds
mov
inc
push
adc
test
fmulp
aaa
push
lea
stos
aad
add
bound
cs
dec
push
aas
sub
xor
out
adc
std
fisubl
inc
pop
dec
push
sub
clc
inc
ror
cwtl
ss
notb
mov
sbb
dec
and
jg
sbb
jmp
scas
and
repz
xchg
inc
scas
jle
mov
popa
xchg
sbbb
sub
fs
dec
or
lock
sarb
xor
push
repnz
aam
xor
sti
mov
out
and
cltd
push
fisubrl
xor
inc
or
mov
xorl
rcr
mov
and
adc
rolb
pop
fisttpl
mov
fildll
mov
add
pop
mov
sbbb
jle
call
inc
push
cli
sub
xor
dec
cmp
ja
fldl2e
jo
in
adc
iret
inc
xchg
imul
and
xor
bound
jne
dec
fs
mov
cltd
or
mov
ret
cmpsl
subl
push
xor
or
cwtl
xchg
lds
xchg
cmpsl
hlt
jb
xor
imull
add
test
in
out
arpl
movsb
xchg
xchg
mov
leave
add
shlb
mov
xor
in
aaa
cmp
js
test
mov
divl
add
xchg
stc
mov
test
bound
imul
cli
in
sub
sub
mov
dec
inc
push
hlt
rorb
adc
iret
or
nop
shl
sub
jae
dec
lret
sub
jo
std
add
and
daa
ljmp
mov
xor
fldenv
mov
xchg
mov
adc
lds
add
vpunpckhwd
cmp
aam
sub
cltd
test
mov
pop
ret
andb
daa
add
mov
inc
ret
addr16
push
lock
jo
popf
dec
adc
inc
jecxz
push
jg
xorb
cli
into
cli
jo
ds
sub
push
xchg
dec
cwtl
add
jae
xchg
iret
cld
sbb
pop
loopne
sbb
js
mov
xchg
fistl
jae
sahf
dec
imul
add
adc
arpl
shlb
out
call
mov
sbb
orl
dec
daa
sahf
mov
addr16
cmpsb
lods
mov
and
scas
int3
aaa
cmpsl
lds
aaa
mov
xor
mov
push
mov
shlb
jbe
mov
in
out
pop
int3
adc
mov
in
in
dec
xchg
or
pop
xchg
mov
pop
andl
mov
push
jae
xchg
dec
xchg
xchg
adc
jmp
push
aaa
loopne
push
insb
lsl
sub
lock
enter
out
pop
mov
jo
loop
push
jp
push
inc
add
or
xor
cmp
sbb
inc
xchg
dec
scas
mov
push
mov
jl
jmp
ja
or
mov
jg
nop
shll
lret
out
push
mov
jmp
out
icebp
int
and
jl
push
pop
jae
inc
psubq
xor
and
cwtl
aad
inc
pop
call
xchg
and
jae
adc
mov
fdivr
sub
mov
pop
adc
in
icebp
in
sbb
enter
and
xchg
repnz
sbb
mov
add
out
insb
sbb
lds
arpl
leave
fsubl
movsl
sub
dec
clc
adc
xchg
in
int
push
cmp
orl
aaa
and
popa
daa
add
inc
scas
out
ret
leave
add
aad
lret
ror
in
test
in
inc
jne
push
int3
mov
fdivs
sar
xchg
xchg
in
popf
mov
cmpsl
or
push
xchg
cmp
adc
mov
mov
loop
out
or
mov
xchg
adc
enter
add
push
fcmovnbe
jmp
outsb
adc
fcmovnb
fsubl
adc
shrb
in
inc
jns
divb
dec
ret
int
int3
xor
sub
cld
scas
sub
int
jmp
lret
pop
push
and
pop
leave
and
imul
inc
xor
in
mov
xor
aas
rcl
and
dec
add
imul
pop
loope
cwtl
and
jnp
lret
adc
div
mov
sbb
aad
pop
push
insb
fisubl
jno
xor
sti
or
adc
xor
int
push
pusha
mov
mov
mov
jg
lcall
ljmp
pushw
pop
fiaddl
push
pop
jae
push
movsb
into
scas
mov
fwait
rclb
aad
outsl
shlb
jge
dec
pop
test
mov
add
cwtl
jbe
mov
mov
pop
push
jno
jg
in
or
leave
add
xchg
pop
add
into
insb
xchg
into
lahf
mov
xchg
add
push
fstpt
push
lea
dec
jge
inc
outsb
mov
mov
mov
sbb
dec
jmp
and
inc
imul
std
xor
push
adc
je
cmpsl
andb
or
push
std
orb
dec
lret
xor
or
add
mov
lods
fldt
cltd
idivb
daa
jge
into
xchg
bound
mov
inc
pop
outsl
mov
scas
cmp
jp
inc
rclb
cmp
mull
pop
cwtl
ja
lret
hlt
mov
imul
inc
pop
in
pop
shlb
mov
mov
jecxz
lods
sbb
out
out
fists
out
push
jle
out
xchg
out
neg
push
sbb
sbb
shr
or
ret
fcom
in
mov
cmp
pushf
enter
pop
fcompl
pop
daa
shlb
cmp
mov
or
pxor
and
xchg
mov
into
int
add
dec
test
inc
dec
xor
and
popf
loop
mov
sahf
xchg
or
dec
cmc
in
loop,pt
jecxz
out
hlt
lds
or
jecxz
push
das
inc
cmp
lcall
repz
mov
into
insl
mov
imul
mov
cmp
jne
test
fcomip
pusha
cmpsb
inc
adc
mov
pop
fdiv
es
xchg
fs
adc
and
cmpb
push
cltd
xchg
or
push
loope
sbb
xchg
imull
xchg
pop
int3
push
mov
push
les
bound
lds
sub
adc
int
xor
sub
inc
mov
and
test
xchg
rol
sbbb
pop
jnp
pop
sub
or
adc
lea
subl
ljmp
jge
jmp
das
mov
xchg
inc
dec
mov
scas
je
xor
adc
cmp
int
test
popf
pop
dec
add
mov
pusha
mov
test
dec
inc
lcall
ficoms
adc
aam
adc
stos
nop
mov
jb
push
out
jecxz
ja
ja
arpl
mov
dec
test
out
inc
insb
lock
clc
nop
xor
pop
aad
adc
sbb
cmp
push
testb
cmp
ja
les
or
les
mov
jp
fmul
imul
jns
jl
fldln2
cmpsb
mov
jp
sub
inc
cwtl
fs
jl
xchg
repnz
sub
cmp
pop
push
ds
or
mov
stc
cli
xchg
iret
lret
pop
sub
and
jle
adc
aas
lds
aad
jecxz
mov
out
int
mov
jae
mov
in
pop
rcrl
cld
and
jns
rorb
mov
mov
loop
cmp
adc
dec
ds
leave
and
push
std
lock
xor
sub
mov
arpl
mov
fnsave
bound
out
stos
xchg
cwtl
in
lock
dec
add
inc
stos
or
cld
push
leave
xchg
out
inc
push
add
sub
jns
in
dec
jo
in
dec
sbb
sbb
imul
xor
pushf
sub
mov
hlt
sub
or
je
cmp
sti
testl
gs
imul
inc
fcmovnb
fwait
mov
cltd
pop
pop
push
test
outsb
shlb
xchg
icebp
dec
out
and
or
push
ret
mov
cmp
mov
jge
inc
jbe
in
cs
mov
jae
stc
test
sarl
inc
push
jno
dec
pushf
add
out
push
fmuls
pop
push
dec
fildl
les
push
nop
mov
bound
xchg
xchg
pop
xchg
inc
fs
popf
data16
cli
mov
test
out
fwait
scas
adc
rcrb
out
loop
loope
mov
mov
and
imul
jg
xlat
out
or
jle
mov
mov
add
nop
mov
mov
cld
lea
xlat
jo
fistpll
mov
jmp
imull
pop
stos
fisubrl
pushf
cli
pop
mov
inc
pusha
shll
sub
dec
adc
or
sbb
fs
inc
int3
out
dec
xchg
push
je
fldt
push
fdivrl
dec
jle
repz
lods
add
jo
pushf
push
cmpb
test
iret
out
int3
sub
mov
insb
out
dec
xchg
push
jnp
pop
cmp
pop
dec
dec
stos
mov
cmc
addr16
and
inc
fs
pusha
xor
cltd
enter
dec
addl
fdivl
enter
les
cmpsb
and
pop
loopne
add
ss
xor
cmpb
fcmovbe
cmp
in
mov
gs
jae
jecxz
nop
iret
cmp
pusha
lods
xchg
dec
je
shrl
xor
iret
jne
rolb
pop
mov
and
or
jmp
sub
mov
repz
mov
sub
mov
out
decl
cmp
xor
ret
xor
movsl
mov
mov
pop
lret
mov
call
xchg
push
pop
mov
sub
rcll
mov
rolb
hlt
xor
and
and
in
sbb
xor
push
dec
inc
roll
mov
popa
lret
repnz
xchg
sbb
jle
sub
add
add
xchg
mov
int
scas
mov
mov
fwait
cwtl
cmp
push
and
cli
inc
nop
movsb
or
mov
imul
jbe
and
mov
pushf
adc
fmull
cmp
leave
push
add
in
daa
lock
nop
es
xchg
pop
mov
and
in
sub
xchg
rcrb
mov
pop
and
dec
ja
shlb
jge
mov
pop
dec
or
outsl
insl
inc
jg
or
sbb
scas
jbe
and
pop
enter
jge
xor
repnz
fwait
and
lock
outsb
jnp
pop
adc
lock
xchg
pop
test
mov
or
ds
js
mov
sbbb
lds
mov
aam
pop
je
je
and
push
push
fdivs
js
notb
arpl
daa
lahf
cmpsb
ljmp
test
rcll
clc
out
pop
rcl
stos
cmp
lretw
mov
fisubl
sub
enter
xchg
hlt
nop
out
mov
xchg
and
imul
pop
mov
inc
in
push
dec
mov
xor
rorb
push
std
and
aas
fwait
and
das
sahf
add
sahf
push
push
icebp
sahf
psllq
call
js
insl
xor
mov
or
mov
rorl
gs
dec
dec
dec
test
mov
stc
call
je
movsb
xor
jbe
jp
iret
sub
cmpsl
mov
jle
jmp
pop
mov
xor
mov
cmp
sbbl
ljmp
cmp
cld
fwait
or
add
push
arpl
jmp
loopne
imul
add
xchg
es
test
mov
cld
cmpsl
mov
popf
test
cmp
push
mov
dec
pop
outsl
rclb
testb
fnstenv
rcrl
adc
inc
jno
sti
testl
fbstp
popf
adcl
mov
aad
and
loopne
or
lds
and
lds
loop
loopne
into
mov
xlat
jp
sbbb
xor
fs
ds
sub
rclb
out
mov
push
cmp
sub
testl
aaa
cmp
rclb
insb
lods
cld
sub
xor
fsubr
dec
jecxz
push
xchg
lods
cmp
sahf
ds
mov
int3
ret
out
fs
cld
cmpsb
xor
out
pop
adc
inc
add
cmp
add
sahf
mov
push
std
icebp
ljmp
popf
ljmp
mov
fildll
outsl
js
daa
xlat
xor
pop
out
xchg
push
cmpsl
dec
ljmp
xor
add
and
push
or
sbb
scas
mov
add
mov
cli
dec
adc
inc
rclb
jmp
dec
mov
cltd
test
ss
mov
fwait
stos
lods
xchg
xor
aad
cmp
imulb
adc
pop
xchg
xor
lods
into
es
lcall
add
jns
or
icebp
dec
cs
test
ret
test
jmp
jo
sbb
out
scas
rclb
daa
lea
mov
mov
out
sub
out
test
ljmp
lods
mov
incl
push
outsb
inc
push
addr16
aad
jmp
sub
jbe
sub
push
mov
jg
pop
cmp
rcl
add
fwait
xchg
jo
ret
and
adc
jecxz
mov
and
ja
fnstenv
rorl
fwait
add
imul
stc
dec
icebp
jns
subl
in
lcall
jns
mov
push
add
cld
mov
mov
or
mov
lods
pop
add
outsl
mov
xchg
or
int3
adc
cli
imul
mov
push
outsl
addr16
jg
cmc
dec
push
ret
sub
push
cld
adc
popa
jo
sub
mov
jg
mov
jp
mov
jno
pop
insl
cmp
mov
fistpl
lret
mov
mov
push
sti
orb
js
fucomp
outsb
ret
rorl
in
aas
adc
add
jb
jbe
or
loopne
insb
jle
sbb
fs
movsl
sub
sbb
clc
dec
dec
roll
sub
sbb
popf
ret
cmp
sub
ret
or
adc
mov
ret
xchg
jg
xchg
fldcw
inc
push
pop
data16
lcall
mov
ds
or
xchg
hlt
dec
or
repz
cltd
push
jp
fidivrl
jl
sbb
fs
pop
fcoms
fisttpl
mov
icebp
shll
aas
scas
sbb
cmc
sub
mov
mov
loope
js
outsl
add
mov
and
xchg
xor
cmp
mov
imul
sbb
sahf
xchg
mov
dec
in
enter
pop
punpckhwd
sub
and
addl
test
adc
mov
shll
adc
leave
fabs
fidivrs
cmpsb
xor
ja
cs
nop
jb
mov
fildll
xorl
imul
xchg
ret
jns
dec
cmpb
sbb
push
cmc
loopne
adc
and
dec
lods
sub
inc
sub
add
sbb
xor
icebp
pop
out
xor
arpl
fidivrl
test
iret
push
cmpsb
in
loope
cmp
cmp
shl
fisttps
lods
mov
movsb
scas
icebp
xor
inc
scas
adc
xchg
mov
mov
pop
cmp
mov
popf
insb
cmp
bswap
sbb
scas
jae
popa
push
test
out
cmp
jne
cmp
popa
mov
push
ja
rclb
mov
psrlw
adc
and
xor
lds
xor
add
lcall
add
int3
xchg
lock
and
mov
sbb
enter
or
mov
ret
sbbl
xchg
repnz
inc
mov
lret
pop
int
inc
scas
cwtl
or
flds
fdivrl
add
and
inc
loope
jmp
add
add
jb
dec
inc
jno
scas
jne
push
bound
cld
xchg
mov
test
fiadds
xchg
pop
outsb
mov
inc
jae
lds
mov
roll
mov
lret
test
aam
mov
adc
addr16
xchg
cwtl
in
lock
jge
push
mov
bound
mov
xchg
add
mov
pop
inc
add
fnstsw
cs
outsl
sarl
lahf
inc
and
mov
or
push
in
loope
sahf
lods
sub
add
xchg
nop
xor
leave
or
scas
ja
fs
mov
dec
pop
add
out
jg
daa
mov
fs
dec
or
pop
jmp
lock
pop
mov
jb
cmp
ja
aaa
or
mov
mov
sub
mov
sub
dec
jne
sarb
and
icebp
jbe
js
pusha
out
pop
vpunpckhbw
jns
jo
ret
pop
fwait
xlat
fcmovu
xor
sti
or
adc
enter
and
xchg
or
mov
int3
jnp
fiaddl
pop
fsubrs
sti
ret
inc
and
popa
mov
sub
pop
mov
mov
sub
cltd
btr
ja
mov
mov
or
mov
ficomps
shll
gs
xchg
jge
cmp
clc
aad
push
frstor
fstpl
add
inc
ja
pusha
sahf
repz
in
or
mov
fbld
shlb
sti
mov
bound
movsl
imul
and
add
mov
mov
das
pop
fadd
push
test
inc
scas
mov
xchg
out
mov
sbb
inc
dec
out
fs
jmp
dec
xchg
sub
rclb
aaa
rorl
clc
test
fs
sbb
pop
je
mov
retw
xchg
mov
adc
loope
jne
lock
jle
test
and
out
cmpsb
imul
aas
daa
sbb
mov
push
int3
out
fwait
xchg
es
and
stos
test
xchg
mov
pop
dec
push
mov
test
dec
jo
sub
cmp
cli
stos
pop
movsl
pop
adc
mov
bnd
notb
imul
lods
xor
fiaddl
cli
outsb
xor
push
dec
aas
scas
sub
sahf
push
into
sub
and
dec
out
lret
pushl
push
cli
mov
insl
in
sbb
lock
loopne
pop
cmp
orl
and
jno
or
push
push
xor
jns
test
pop
pop
inc
imull
sub
xchg
and
orl
sub
mov
aad
adc
cld
mov
div
xchg
jl
je
inc
nop
cmp
mov
push
jne
push
and
out
cld
push
push
in
ss
mov
cmpsb
inc
or
or
and
rorb
add
xlat
enter
inc
lods
testl
daa
gs
repnz
pop
jl
jp
aad
push
jle
add
and
fnstcw
je
sbb
int
pushf
gs
sub
insl
jecxz
sbb
das
lcall
mov
mov
pop
lea
cmp
dec
or
test
insb
pop
xchg
or
in
ud1
in
mov
into
jb
ss
xchg
push
mov
icebp
dec
out
repz
cmp
cmpsb
push
or
sub
xchg
es
sub
ret
sub
sbb
mov
pop
in
jg
jnp
iret
push
xorl
repz
sbb
add
in
jecxz
fldcw
nop
pop
test
jle,pt
push
sub
je
daa
mov
std
jl
fists
push
inc
xchg
daa
adc
pop
xor
ljmp
xchg
ret
ja
fmull
mov
push
mov
and
mov
sbb
lods
loope
rorl
enter
mov
inc
cmpsb
addr16
jb
push
mov
lret
test
mov
and
xchg
out
inc
or
xor
bound
out
fsub
inc
push
pusha
inc
insb
jnp
push
pop
scas
ja
pop
orb
and
ftst
daa
mov
insl
jnp
jge
arpl
loopne
ss
pop
vcvtps2dq
cmpsb
pushf
in
push
or
xor
mov
testb
push
xchg
aad
pop
int
push
ja
pop
popl
movsb
stc
jp
cmp
mov
inc
fistps
mov
sti
jl
pop
sti
insl
push
push
daa
stos
cli
sbb
rol
mov
aaa
jmp
dec
inc
add
into
outsb
nop
push
jb
pop
mov
xor
cmp
es
cmp
add
jmp
fs
dec
push
repnz
xchg
clc
hlt
leave
scas
fdivp
adc
lds
std
xorb
iret
out
idivl
mov
aaa
dec
push
mov
xor
push
stos
pushf
repz
mov
arpl
sub
jnp
cld
add
cmc
cmp
mov
sbb
add
fs
lahf
sub
push
lods
dec
cmp
mov
repz
add
and
push
push
clc
mov
adc
das
clc
shll
mov
pop
mov
cmp
je
dec
xorl
data16
mov
subl
ja
lock
add
test
push
cmp
pop
mov
push
or
add
cld
mov
add
lds
cmp
out
mov
inc
es
in
cwtl
shll
enter
test
mov
scas
inc
jae,pt
sbb
xchg
nop
jle
out
or
or
push
or
fidivrs
cmc
mov
mov
xlat
mov
rclb
cs
daa
sbb
or
push
xchg
inc
daa
fs
lret
jecxz
push
jb
inc
xchg
xchg
xor
mov
lcall
icebp
push
in
and
and
jnp
call
in
push
insb
cmpsl
add
pop
test
test
movsb
shlb
xor
adc
jge
stos
mov
xor
sub
xor
push
in
cmp
movsl
xchg
xor
cmpsl
pop
shl
loope
int3
inc
je
out
add
ja
outsb
movsl
cmpsb
clc
add
dec
sub
or
out
jl
dec
push
pop
cmp
mov
push
and
aad
inc
or
addr16
movsb
push
push
mov
add
mov
and
movsb
mov
fcomps
xor
adc
push
test
and
or
mov
adc
test
outsl
call
jo
dec
dec
popf
jle
iret
mov
cs
mov
loopne
xchg
adc
mov
pop
mov
push
add
sub
pusha
repnz
push
popf
sbb
add
jmp
xor
sub
and
cwtl
xchg
push
mov
mov
js
adc
in
and
call
idivl
fs
jb
jns
mov
mov
sub
pop
xchg
xor
loope
mov
inc
push
push
aaa
push
std
sbb
cmpsl
pop
adc
fmull
mov
xchg
in
inc
fdivrl
addr16
add
arpl
add
mov
xor
mov
repnz
ss
adcl
or
gs
mov
xchg
push
mov
popa
clc
fnstsw
je
xchg
push
and
mov
scas
jnp
jno
xor
add
dec
mov
mov
gs
fwait
popa
dec
cmp
jl
mov
das
push
loopne
fwait
dec
or
dec
push
mov
mov
shl
mov
in
out
dec
push
icebp
stos
jnp
jmp
gs
xchg
mov
loop
xchg
sti
ljmp
test
inc
lahf
mov
jns
pop
cmpl
scas
mov
les
and
jp
pushl
je
jne
fdivr
fs
dec
sti
cs
inc
cmp
fisttpl
lret
adc
xlat
popf
mov
xchg
push
xor
push
into
pop
xlat
cmp
pop
bound
daa
pop
pop
push
es
mov
je
movsl
cs
push
sub
mov
dec
call
or
cmp
or
mov
stos
popl
dec
sub
jnp
insb
cld
lods
in
lds
dec
ret
lods
mov
mov
rol
xlat
lret
cld
and
adc
cmp
dec
and
cld
filds
cmp
jb
pop
cmpsb
pop
test
lds
dec
and
jb
leave
jl
movsb
hlt
roll
jnp
popa
mov
dec
pop
lahf
shrl
xor
stos
fcompl
test
movsl
pop
inc
subl
jg
arpl
jb
in
ficomps
in
jns
xchg
and
xchg
mov
popf
cmpsb
xor
pop
call
lock
loop
mov
fnsave
add
jmp
rcrb
je
add
jne
add
dec
out
adc
out
out
shrb
add
aas
imul
mov
push
popa
pop
mov
or
jge
popf
hlt
lods
iret
cmp
pop
fcoms
add
stos
sub
xchg
adcl
ret
pop
jg
cmpsl
je
push
popf
fstpl
icebp
gs
ror
xor
ljmp
subb
xchg
enter
jg
in
mov
fcompl
mov
imul
and
imul
pushf
pop
jns
in
push
mov
fidivs
push
arpl
cmp
dec
fistpl
mov
mov
pop
movl
add
out
xlat
xrelease
adc
push
push
fidivrl
jecxz
jno,pn
shll
jp
cltd
or
fimuls
cltd
xorb
mov
gs
xchg
lods
sahf
ficoms
ret
out
mov
jecxz
loop
mov
cmp
mov
jbe
cmp
pop
movsb
jecxz
cmp
push
jbe
sub
in
adc
fisttps
sti
test
sbb
xorl
stos
cwtl
je
xor
jb
or
fwait
mov
or
gs
je
push
mov
cmp
inc
push
mov
inc
jae
jmp
mov
stos
mov
popf
sub
mov
push
mov
push
dec
test
mov
popa
xchg
dec
inc
mov
lea
mov
ret
jae
mov
iret
add
cmp
mov
adc
xchg
fstpl
testb
jb
push
mov
ret
sbb
and
in
mov
push
push
mov
pop
ret
fs
add
mov
pop
aad
and
test
arpl
rorb
fs
push
and
es
loopne
loopne,pn
leave
iret
dec
jmp
jnp
mov
mov
pop
inc
inc
add
xor
popa
or
xchg
fildll
popa
pop
call
jo
push
sub
mov
sub
dec
push
add
mov
dec
xor
enter
testb
cmp
jl
mov
pop
xorb
add
cmp
popa
into
mov
loope
adc
sbb
sub
jns
cltd
pop
jnp
jg
jbe
sti
loop
pop
test
sub
push
outsb
mov
pushw
inc
daa
sub
inc
repz
aam
cmpl
ds
aad
pushf
mov
int
repz
and
fsubs
adc
xor
mov
lea
push
xor
scas
push
lods
and
jbe
add
push
lea
or
aas
inc
jecxz
je
and
cmp
ret
ljmp
add
sub
in
push
xor
cwtl
adc
dec
cmc
lds
push
jno
shll
adc
cmpsl
fnsave
inc
repz
xor
mov
dec
out
ss
sub
mov
shrb
loop
mov
xchg
cmp
std
imulb
adc
inc
mov
clc
lret
xor
ljmp
and
xlat
out
gs
mov
cmp
adc
enter
xor
mov
out
dec
movb
mov
mov
sub
mov
mov
pop
or
jg
and
lods
fcomip
mov
repz
das
jne
fidivs
movsl
sbb
and
cmp
mov
sahf
cmc
cmp
out
lds
dec
movsl
inc
push
jmp
mov
stos
adcb
mov
xchg
jno
out
cli
mov
mov
cmc
ficoml
mov
xchg
push
stos
jne
adcb
mov
iret
or
lcall
fwait
inc
adc
mov
clc
sub
hlt
mov
leave
pushf
mov
push
dec
xchg
notl
inc
mov
int3
std
inc
jnp
lcall
push
push
push
pop
dec
sub
cmp
jae
stos
movsb
fnstcw
addb
enter
addr16
fidivrl
sub
outsl
sub
orb
pop
push
es
imul
xchg
enter
inc
sub
dec
shl
jbe
or
adc
mov
push
loopne
imul
adc
mov
cltd
xor
cli
jo
loop
cmpsl
push
leave
mov
cmp
sbb
add
jns,pn
ljmp
mov
inc
ret
xchg
scas
cmp
mov
sbb
pop
ret
nop
xchg
ret
out
shrb
sbb
push
divl
fadds
iret
rcll
or
push
dec
or
int
repz
lcall
cs
testl
jle
cli
rclb
cmpsb
add
push
fcom
pop
daa
dec
arpl
cli
sbb
cmp
xor
fildl
clc
mov
add
data16
add
out
xchg
adc
sti
test
xlat
shr
pop
addr16
daa
fisttpl
mov
pop
fdivrs
ror
stc
dec
xor
push
sbb
jo
xor
in
out
xchg
add
and
or
mov
outsl
in
sub
xor
ficoms
mov
movsl
mov
stc
xchg
push
mov
lahf
nop
cmp
adc
add
sub
test
xchg
addl
dec
test
xor
call
cmp
fistl
xor
cmp
xorb
call
outsl
in
in
cmp
sub
repnz
mov
gs
pop
in
cmp
sub
xchg
push
lock
int3
push
or
jg
pop
mov
in
lods
popa
lahf
loopne
arpl
bound
les
or
jo
adc
mov
in
jnp
cmpsb
jmp
sbb
sbb
xchg
cmp
mov
outsl
and
lods
push
in
popf
nop
or
cmpsl
mov
lcall
push
xlat
inc
out
stos
imul
enter
clc
xor
movsl
inc
inc
or
movb
cmp
mov
push
sbb
adc
mov
fistl
test
sti
sub
sbb
pop
lock
mov
mov
fstps
push
push
sbb
movsl
fcmovnu
stos
sub
add
imul
push
inc
and
clc
in
rolb
notl
in
inc
mov
sti
add
inc
or
test
loope
js
jb
arpl
loop
in
inc
mov
fdivr
pushf
push
pop
pop
decb
cmpsl
jecxz
inc
sbbl
xor
pop
push
add
cmpsb
ret
mov
mov
mov
dec
jmp
in
lods
shl
add
inc
in
outsb
xchg
sub
adc
dec
nop
mov
mov
test
lcall
call
sub
pop
adc
pop
outsl
jo
shrl
and
push
sub
and
movsl
mov
stc
repnz
mov
inc
mov
stc
int3
shr
sbb
xchg
sub
sub
mov
pop
ds
loop
xor
jae
pop
addr16
inc
pop
inc
in
dec
scas
inc
mov
or
adc
lret
inc
ret
popa
mov
dec
mov
add
fwait
lods
cmc
ja
sub
jmp
xor
loope
pop
xchg
xchg
cwtl
adc
mov
dec
loop
cli
clc
imul
sti
fbstp
fucom
cmpsb
add
mov
aad
loope
mov
jg
xor
in
or
in
in
mov
in
cltd
adc
fdivs
xchg
test
and
xor
fists
test
sub
jmp
xlat
mov
rorb
sub
mov
cltd
sbb
or
adc
int3
arpl
fs
push
sbb
sbb
xlat
repnz
adc
adc
hlt
imul
jmp
mov
sbb
add
loope
loope
mov
jns
movsb
pop
rcll
nop
gs
fs
imul
leave
pop
jb
push
out
mov
or
cli
xchg
out
rcll
inc
xchg
sar
add
xchg
jge
mov
push
lds
les
mov
mov
or
adc
or
inc
pusha
clc
push
mov
int3
sbb
lods
push
pusha
shll
les
mov
xchg
dec
dec
and
out
lret
popa
push
jae
idivb
jb
addl
or
arpl
out
adc
dec
adc
arpl
sub
orl
gs
mov
push
mov
or
adc
test
test
mov
mov
jle
in
xor
addr16
mov
leave
inc
fdivrl
fadds
jl
xchg
iret
inc
rclb
add
xlat
jb
xor
pushf
mov
ljmp
lcall
xchg
push
imul
js
cs
push
cmp
in
mov
push
mov
leave
pop
pusha
adc
inc
xchg
xchg
sahf
pop
outsl
pop
push
ror
fbld
mov
mov
ljmp
xor
lcall
cmpsl
jns
sbb
testl
dec
int3
cmpl
lock
dec
pushf
cmp
mov
aas
nop
outsl
mov
lea
and
xchg
adc
mov
arpl
hlt
imul
fistl
mov
pop
popf
pop
bound
xchg
inc
dec
dec
jne
jecxz
out
subb
insb
xchg
in
js
mov
arpl
xchg
push
out
arpl
test
jne
lods
add
jae
pop
clc
cmp
rcrl
add
ret
lret
out
das
push
mov
scas
arpl
lcall
adc
jb
push
jae
mov
add
adc
pop
mov
mov
pushf
sub
pop
mov
popa
ret
popa
loope
iret
lcall
jle
jae
iret
xor
mov
imul
xchg
enter
cmp
push
out
int3
imul
je
movb
sarb
scas
outsl
mov
xchg
inc
shll
mov
sub
je
cmp
xchg
int3
and
test
jp
icebp
outsb
jae
cmpsl
shr
outsb
jg
xchg
sub
mov
mov
cmp
mov
icebp
sub
nop
push
push
xor
ret
mov
mov
mov
pusha
dec
icebp
xchg
jno
daa
push
ret
outsl
je
leave
push
adc
lods
loop
fistpl
dec
out
mov
dec
mov
ret
push
shlb
mov
mov
push
sti
mov
and
inc
dec
jo
sbb
dec
sub
cmc
loop
fcmovu
and
jl
and
aam
in
dec
enter
add
xchg
inc
xor
aam
or
push
out
mov
push
lods
in
ret
cli
dec
ds
pop
cwtl
jle
mov
add
lods
jp
sub
xchg
lock
lods
pop
es
add
add
pop
ficompl
dec
push
sub
push
in
fbstp
xchg
jne
cmp
loope
or
inc
lret
mov
push
aas
lock
jle
clc
cmp
pop
test
scas
and
jp
aam
in
mov
or
mov
pop
movsl
rcll
push
xor
into
dec
pop
hlt
cld
cmpsb
push
push
adc
push
ret
aaa
mov
enter
xor
inc
ret
xor
sti
movsb
xor
cmp
mov
add
xor
push
clc
xchg
mov
into
cld
enter
push
dec
aad
cwtl
xchg
stos
or
jmp
inc
pop
pop
popa
mov
hlt
fldl
sarb
sbb
xchg
xor
out
cmpsl
cmc
pop
js
les
daa
arpl
clc
cmp
or
push
dec
mov
in
push
stos
jb
mov
rcrl
in
ret
mov
loopne
pop
ret
orl
mov
fstpl
js
or
or
xchg
cmp
test
push
mov
push
imul
or
jb
imul
push
xchg
popl
xor
inc
scas
clc
loopne
lahf
imul
fcompl
outsl
cmc
dec
xor
iret
cmp
adc
adc
push
fisubrs
push
dec
ja
mov
sub
sub
ret
bound
mov
mov
bswap
in
cmpsl
push
js
and
inc
jmp
push
push
sar
ds
lods
addr16
xchg
jbe
mov
sub
fsubs
incl
mov
scas
and
push
loope
lret
mov
das
mov
cmpsb
jae
movsb
xchg
lcall
std
dec
xchg
aam
fldt
gs
jmp
stos
les
xorb
mov
mov
hlt
lcall
mov
scas
out
jno
xchg
add
fs
push
push
cmp
and
and
mov
std
pop
in
inc
add
lds
int3
mov
jno
pop
jnp
jns
mov
mov
ret
fidivrl
test
shl
cmp
and
dec
mov
pop
add
push
aaa
sub
in
jecxz
pushf
sbbl
jmp
inc
cltd
dec
outsb
imul
cmc
xor
mov
xchg
scas
xchg
test
xchg
cmpsb
insb
inc
dec
int3
mov
testb
inc
pushf
dec
out
scas
leave
out
xchg
xchg
sbb
fbstp
inc
inc
push
xor
aas
out
int
push
std
adc
enter
imul
dec
push
mov
outsl
fsts
aad
inc
pop
inc
xlat
mov
sub
add
sti
xchg
sbb
sub
mov
cmpsl
pushl
in
mov
pusha
pushf
ljmp
in
outsb
jno
add
sub
cmpsl
xchg
aad
xor
or
mov
mov
dec
ficoms
pushf
lcall
enter
int
pop
and
sbb
dec
stc
sbb
ret
jns
lcall
sub
lret
cs
dec
push
fs
adc
popf
in
jge
lods
sub
cltd
out
xchg
mov
xchg
in
and
jb
mull
ss
push
pop
fsubrp
fisttpl
mov
lcall
push
xor
int3
jle
inc
inc
cwtl
dec
fidivs
insb
or
add
ficompl
push
movsb
push
test
push
stos
rorl
lret
test
adc
flds
dec
test
and
mov
sub
xor
push
push
cmp
push
cmc
push
pop
ficomps
xchg
in
sbb
pop
lret
sbb
cmp
sub
inc
int
push
ljmp
jns
lret
hlt
pop
mov
popa
and
fisttps
movsl
ret
popa
xor
mov
add
in
lods
jmp
add
push
or
and
insl
adc
jb
sub
adc
shrb
inc
mov
and
test
xchg
mov
test
lcall
sti
fcom
xchg
jg
lock
push
fidivs
sti
test
pop
or
arpl
jl
pop
xor
jg
jb
test
mov
in
adc
mov
and
icebp
mov
adc
xchg
inc
or
mov
es
cmp
enter
lahf
pop
iret
loop
jg
sub
add
dec
out
jmp
fsts
push
push
testl
inc
mov
in
inc
rorb
xchg
dec
cmp
subl
mov
pushf
test
inc
mov
xchg
mov
or
xchg
movsl
dec
shrb
test
lods
mov
jp
es
rol
loopne
adc
mov
lods
cli
pop
test
pop
and
xchg
clc
mov
and
roll
stc
sbb
call
sbb
into
gs
je
jmp
sub
test
repz
lcall
inc
dec
repnz
sahf
out
xor
dec
push
out
scas
rcrl
notl
or
fimuls
sarb
ret
outsb
mov
mov
rcll
pop
xlat
jecxz
inc
addr16
adc
mov
mov
mov
pop
das
mov
dec
mov
nop
dec
sbb
or
ss
mov
jl
xor
push
scas
test
arpl
cli
pusha
add
xchg
mov
jp
or
push
mov
ror
and
push
std
shlb
mov
imul
add
or
into
pop
or
popf
jg
cmc
in
inc
inc
cmp
lcall
adc
jecxz
mov
jnp
cltd
xchg
data16
push
jbe
hlt
add
sbb
cmp
jnp
stos
pop
sbb
push
dec
mov
push
cmpsl
cmp
jp
pop
cmp
ficompl
pop
fdivs
push
ds
cmp
cmp
gs
jbe
and
shl
xchg
aad
test
lods
pop
add
sbbl
in
push
rcl
pop
fstps
jg
and
and
adc
xlat
dec
loope
lret
inc
push
test
jae
dec
mov
mov
int
aad
xor
pop
sbb
xor
inc
ret
xchg
dec
aas
aaa
mov
sbb
or
jae
add
and
fidivs
stos
jo
mov
cmp
jmp
outsl
mov
imul
loope
jmp
xor
pop
fwait
mov
fnstsw
imul
sub
xchg
or
inc
mov
mov
int3
sub
sub
dec
pop
es
sub
jecxz
dec
inc
mov
cmc
mov
inc
add
mov
sahf
lock
xchg
push
push
or
fcomi
cmpsb
movsb
or
dec
add
mov
mov
jne
dec
pop
cmp
mov
push
std
test
fbld
add
rorb
popf
cmp
inc
aas
cmp
movl
inc
repz
inc
ret
mov
cmpb
out
or
js
loop
mov
xchg
pop
xchg
xchg
ljmp
nop
out
sbb
data16
mov
mov
shlb
scas
outsb
addr16
push
das
out
mov
sti
push
inc
clc
adc
scas
scas
rol
arpl
gs
push
imul
gs
gs
adc
push
mov
pop
aas
adc
inc
call
xchg
mov
mov
mov
ret
mov
jns
repz
repz
pop
pusha
add
cmp
sti
cmpsb
stos
dec
mov
mov
orb
push
imul
and
sbb
cmpsb
dec
pop
pop
and
insb
mov
sahf
mov
jno
das
and
ret
js
leave
mov
outsb
data16
jle
sub
add
push
inc
or
xchg
repz
jb
jmp
pop
cmp
cmpsl
mov
cmpsb
testl
es
lret
mov
push
mov
xchg
jbe
mov
pop
pop
lret
test
mov
jnp
and
dec
ret
jno
xor
push
imul
test
or
cmpsl
xchg
dec
xlat
sbb
lea
sahf
aam
mov
jnp
rcrb
out
mov
fs
xor
sahf
fstpl
dec
fcomip
mov
aas
lret
loop
sbb
div
mov
or
ljmp
xor
mov
push
andb
dec
sbb
mov
rcrl
ja
sub
pop
inc
push
xchg
rclb
jne
pushf
int
es
pop
lock
fstp
jo
jns
mov
lods
out
movsl
addr16
cs
cli
jp
stos
dec
dec
repz
orb
movsb
jo
add
jle
popl
ret
sub
ss
imul
xor
sub
jae
leave
pushf
test
sbb
cwtl
push
and
mov
sbb
out
inc
outsb
lds
aas
jl
dec
jg
andl
bound
mov
fdivrl
inc
lret
call
int3
iret
fisubs
jmp
mov
es
push
add
xlat
xchg
and
lret
cmp
lods
daa
nop
xchg
bound
imul
pop
push
and
pop
xchg
testb
pop
lahf
lret
aas
adc
inc
flds
imul
mov
pop
pusha
addr16
sahf
enter
xchg
adc
and
inc
dec
jns
negb
pop
in
cmc
and
sbb
or
xor
lret
jae
popf
sub
adc
sbb
sub
adc
pop
mov
sbb
jg
mov
push
mov
sub
repnz
cs
mov
push
lds
jb
push
jmp
xchg
ret
sub
lcall
mov
xchg
mov
ja
es
adc
pop
adc
push
mov
mov
scas
and
test
push
lock
adc
mov
adc
popf
pop
pop
nop
es
jns
ss
popf
out
aad
ret
mov
push
mov
bound
dec
cld
int3
adc
cwtl
and
daa
test
push
jns
push
cmp
into
dec
sti
cmpsb
and
in
imull
stos
es
adc
xchg
mov
inc
adc
cmp
cli
mov
lods
sarl
add
xchg
xchg
dec
shrb
mov
cmp
inc
ja
push
mov
jne
sub
cmp
adc
in
mov
cmp
jbe
ret
pop
xchg
fcmove
jp
arpl
hlt
dec
fisttps
mov
clc
dec
or
popf
adc
mov
movl
sahf
mulb
mov
cs
mov
or
ljmp
or
xlat
pop
xor
popf
jno
dec
mov
test
xor
cmp
xchg
push
xchg
mov
loopne
int
mov
mov
cmc
xchg
add
lea
and
int
jg
adcl
cmpb
flds
cld
mov
out
cmp
mov
add
lds
pop
or
sub
movl
fdivl
es
call
and
scas
les
adc
jge
jnp
and
pushf
fbstp
pop
outsb
stc
sarl
adc
inc
push
push
out
sbb
hlt
dec
pop
cmpsl
in
movsl
mov
incb
das
bound
divl
lret
pop
cmp
ret
enter
add
pop
inc
sbb
loop
and
movsl
or
lods
xor
xor
cs
adc
ljmp
cli
or
push
mov
hlt
rcrb
test
cwtl
fdivrs
mov
adc
push
hlt
stos
lahf
adc
aam
stos
jns
sub
lret
cmpsl
adc
out
out
mov
mov
stc
xlat
cwtl
sub
jle
jmp
sahf
sahf
and
enter
outsb
not
pop
test
mov
je
jns
out
and
in
jg
inc
pop
mov
mov
mov
outsb
mov
addr16
test
adc
outsb
insl
mov
push
repz
mov
clc
cmp
jns
pop
aaa
xchg
jnp
push
mov
int3
lret
mov
idivb
mov
fisubs
mov
stos
loope
sub
xor
cltd
mov
scas
or
cs
fmuls
jae
push
pusha
push
sub
inc
dec
sub
sub
imul
enter
push
push
and
lret
int3
test
and
xor
loop
dec
jnp
das
dec
mov
dec
mov
mov
lock
xor
sar
outsb
test
xchg
pop
cs
repnz
rol
popa
stc
adc
jmp
mov
insb
jne
mov
pop
and
daa
sub
jo
and
add
imul
imul
movsb
nop
repnz
sbb
insb
notb
cld
inc
cwtl
daa
adc
xor
popa
mov
out
mov
sbb
add
lret
cmp
sub
sub
xor
fimuls
mov
sbbl
loop
test
jns
pop
mov
sub
sbb
adc
in
dec
stc
notb
add
push
in
jb
sahf
mov
scas
mov
mov
lds
inc
movsl
addw
lods
fiadds
js
sub
dec
loop
dec
arpl
in
pusha
lahf
cmp
subl
adc
sbb
mov
push
pop
sub
pop
or
jle
dec
jbe
xchg
sbbb
test
out
movsl
xchg
sbb
xor
lods
jl
arpl
push
sbb
rol
mov
or
pop
outsl
icebp
int
daa
mov
mov
or
pop
scas
andb
pushf
hlt
and
or
mov
jo
cwtl
mov
pop
xchg
les
mov
sub
add
test
push
gs
xchg
xchg
mov
imul
dec
fldt
call
mov
mov
clc
int3
out
cmp
fwait
cmp
js
ja
arpl
mov
pop
jecxz
fs
push
ja
xchg
loopne
in
push
xorl
aas
push
mov
mov
fisubrl
push
and
push
fistpll
shr
jmp
pop
xchg
xchg
pop
test
push
sbb
mov
mov
enter
bound
pop
pop
sbb
cmp
daa
xchg
mov
push
ljmp
fcmovu
leave
stc
jmp
inc
xchg
mov
aad
std
jmp
aad
xchg
test
shll
sub
push
rol
or
stos
movsl
dec
sti
mov
inc
in
jno
cmp
les
fcmove
lods
or
dec
pop
pop
mov
pop
mov
xchg
pop
xor
jns
mov
pop
into
jle
xchg
sub
in
push
jnp
movsl
ds
fists
shlb
mov
push
inc
hlt
inc
adc
test
fisttpl
mov
popa
test
adc
sbb
mov
sti
lea
push
ja
and
insb
fwait
inc
je
jle
jp
pop
out
lcall
sub
shl
addr16
in
dec
retw
push
xchg
out
push
repz
fstpl
inc
loop
lds
loop
insb
cmp
lds
pop
xor
pop
xor
push
cmp
mov
mov
daa
dec
mov
out
pop
sbb
sub
mov
or
adc
xor
xchg
imul
outsb
cmp
inc
xor
pop
repz
dec
cmp
mov
repz
mov
jae
or
xchg
adc
cmp
inc
jg
jmp
fs
add
xchg
inc
mov
push
push
fildl
jnp
mov
xor
pop
icebp
mov
cmp
lods
and
mov
and
dec
jle
andb
sub
adc
adc
movups
test
sbb
sahf
fldenv
lock
ss
int3
insl
and
dec
ljmp
xor
fistpll
andb
sbb
ret
out
notb
ja
test
not
push
mov
inc
loopne
dec
fcmovnb
mov
xor
add
push
push
leave
arpl
mov
mov
out
and
push
inc
dec
add
test
cld
cmp
repz
sbb
inc
jp
adc
inc
mov
xorl
mov
fadd
adc
xor
xchg
add
inc
push
sub
mov
pop
xlat
in
into
add
or
paddusw
cmp
xchg
push
cmp
lcall
add
rcrl
fs
xor
sbb
popa
arpl
jb
into
xlat
bts
xchg
or
push
and
push
cmp
insl
lds
or
cs
adc
add
test
lret
stos
xchg
sbb
push
nop
subb
pop
xor
mov
xchg
pop
mov
mov
outsl
fs
sub
lods
xor
bnd
or
roll
xchg
fsts
or
push
add
and
jno
xor
mov
adc
rcll
fcomi
fdivr
das
mov
inc
push
or
inc
jns
ret
adcl
sbb
jo
cmpsb
jp
xchg
and
popl
mov
xchg
stos
loop,pt
fstl
adc
cld
clc
pop
dec
out
dec
pop
mov
pop
in
inc
xchg
xor
adc
xchg
imul
cmp
cwtl
ret
jecxz
int
fimuls
xor
pop
hlt
es
loope
sbb
fadds
scas
dec
outsb
xor
push
mov
hlt
test
das
lods
testb
adc
lret
add
int
cmp
scas
movsb
out
push
jp
iret
dec
push
dec
mov
ljmp
mov
dec
in
lds
push
cmp
sub
pop
dec
dec
cmc
in
jae
out
xor
int3
mov
adc
stos
adc
xchg
mov
data16
xor
jae
jno
adc
xor
pop
jae
mov
andb
int3
cs
filds
in
insl
xor
cmc
mov
sub
pop
jle
aas
pop
mov
pop
mov
pop
mov
fildll
nop
sbb
xchg
jmp
orb
into
adc
xor
xchg
mov
mov
aad
xchg
push
out
push
sti
mov
arpl
pushf
jb
rolb
faddl
push
fisubs
lea
pop
xchg
push
sub
mov
shlb
roll
in
decl
cmc
aad
inc
ds
jmp
cwtl
jg
push
call
sub
jbe
inc
loope
lcall
pushf
push
and
insl
cmpsb
sub
adc
fs
idivb
pop
ficompl
push
push
inc
mov
nop
add
mov
enter
push
ror
js
adc
xor
mov
dec
xor
sbbl
lea
stc
repz
iret
mov
cmpsl
pushf
shll
dec
lock
mov
jbe
test
shl
cli
fdivr
rolb
je
lret
jmp
jno
or
shl
insl
pop
rcr
test
and
movsl
and
mov
out
std
inc
movsb
mov
jecxz
add
into
cmp
call
movsb
xchg
or
and
jle
xchg
gs
jl
call
rorl
jno
xchg
xor
setne
data16
sub
add
and
push
cmpsl
out
in
in
ss
xor
mov
or
sub
sbb
push
lock
int
inc
mov
mov
enter
addb
in
int3
adc
sub
jno
lods
out
push
push
iret
and
int3
in
mov
sub
test
es
bound
jns
popa
jae
add
shll
mov
dec
pop
enter
sub
testb
outsl
push
loop
push
pusha
call
mov
loop
pop
xor
cmp
xor
cmpl
lcall
test
sti
sub
sbb
or
cmp
pop
cmc
pop
mov
push
jnp
cmpsl
out
mov
jle
xchg
sbb
mov
stc
or
scas
es
jge
sti
rorl
mov
jle
repnz
aaa
lods
cmp
jbe
mov
sbb
orb
js
push
je
dec
inc
push
out
push
mov
out
mul
cmp
rcl
mov
cmp
repz
js
dec
cmpsl
fstps
fiadds
mov
mov
nop
mov
shrl
jns
xor
inc
cmp
loop
mov
negl
mov
adc
ljmp
jecxz
add
sbb
sub
mov
test
cld
stos
mov
jb
ret
in
inc
and
les
dec
push
out
and
data16
jmp
sbb
stos
jns
arpl
lods
loop
jge
xchg
shr
aas
add
mov
or
jp
int3
sub
xor
inc
xor
lock
int3
in
fmul
xchg
sbb
andl
pop
pop
mov
cmc
cmpsb
push
adcl
adc
mov
movsb
xchg
mov
push
jns
aas
mov
lods
pop
bnd
xchg
xchg
shrl
sbb
cltd
dec
cmp
pop
fistpl
push
sbb
movsb
jne
sbb
fnstenv
mov
mov
gs
and
jg
dec
sub
cmpsb
outsl
outsl
es
push
mov
add
lods
xor
test
and
imul
dec
push
push
out
pop
mov
mov
xchg
iret
data16
sahf
addb
mov
pusha
rcrl
movsl
ret
cmp
decb
mov
lds
rolb
ja
shll
pop
lahf
scas
nop
cmp
jmp
imul
outsl
sbb
push
icebp
test
cltd
addb
jno
jne
mov
sarb
cmpsb
pop
pop
pushf
clc
xor
xor
push
jb
jo
adc
dec
outsl
xor
cmpsw
outsb
hlt
sbb
push
push
stc
xchg
out
push
jbe
inc
insl
ret
mov
add
cmp
dec
xchg
mov
push
adc
adc
mov
add
cmp
orl
dec
mov
or
push
fcoms
mov
rolb
outsb
fstpt
jecxz
jns
add
sub
lock
sti
adc
jmp
inc
mov
jnp
xchg
adc
push
dec
mov
mov
sti
lahf
pop
hlt
movsb
mov
inc
push
jns
rorl
xor
mov
sub
add
mov
push
or
xchg
test
loop
insb
out
push
adc
xlat
lock
cmpsb
dec
or
sub
add
sub
or
pop
notb
loope
addb
push
cmp
mov
jne
loopne
jl
hlt
mov
mov
shrl
mov
inc
cmovp
pop
arpl
das
cmp
jmp
stc
mov
add
ss
es
daa
push
lods
mov
sti
and
mov
sahf
jp
mov
popa
xchg
mov
add
repz
cmc
cmp
sarl
xor
loope
std
dec
imul
sahf
push
jne
jg
mov
push
sub
repnz
imul
lret
adc
testb
cltd
or
in
out
loopne
das
xchg
leave
mov
xchg
test
mov
mov
adc
push
pusha
xchg
mov
and
mov
loop
inc
call
xor
lds
dec
xor
scas
mov
aam
loopne
cmp
sysexit
dec
outsl
jl
jns
pop
lret
adc
lahf
loop
enter
pop
fwait
pusha
push
pop
stos
dec
jecxz
cmpsl
add
push
push
mov
int
das
aam
lret
sub
repnz
add
cmpsb
shl
cmp
xlat
sarl
mov
shl
or
dec
pusha
or
cli
incl
adc
push
push
mov
mov
sbb
cwtl
fcmovnbe
imul
mov
push
fisubl
sub
mov
scas
cmpsb
sbb
add
mov
pushf
cwtl
lock
pusha
pushf
sti
lret
popf
outsb
imul
xchg
pop
push
mov
rcll
cmp
jecxz
jne
fisubrl
sub
inc
sub
aaa
cltd
out
mov
movw
aad
xchg
lcall
leave
out
lret
push
outsl
mov
dec
sbb
jecxz
sbb
cmp
ret
push
add
lock
in
lock
xchg
clc
jp
adc
push
ja
aas
shll
adc
dec
das
and
fdivp
addr16
cld
dec
pop
xchg
and
fldl
push
loop
push
cmp
movsb
lods
push
push
xchg
cwtl
pop
shrl
shrb
cmp
aad
sbb
fwait
mov
lods
push
lods
push
test
movsb
fsubs
jne
sbb
rcll
fsubrl
cmp
mov
movsb
testl
jge
pop
xor
jns
ja
push
popa
xchg
imul
and
inc
stos
mov
or
out
push
pushf
subb
fisubrl
mov
xor
cmp
mov
and
xor
mov
inc
ds
cmpb
xor
adc
ret
insb
aaa
dec
rcl
adc
rorl
or
xchg
mov
mov
or
test
int3
xor
outsl
ljmp
jl
ret
daa
std
mov
adc
mov
sarb
and
mul
stos
push
adc
sbb
icebp
push
bnd
and
jbe
jp
inc
adc
jl
add
jbe
popa
pop
add
test
add
ficoms
fsubrp
mov
or
mov
adc
jmp
outsb
inc
or
es
jg
cld
xor
pop
cmp
aas
sub
cmc
out
xchg
sbb
mov
mov
mov
pop
fisttps
or
jge
xchg
cli
out
divb
fiaddl
or
add
and
test
mov
inc
lods
pop
outsb
rclb
sbb
add
idivw
clc
pop
lds
or
ljmp
mov
and
cli
iret
sbb
lcall
movsl
dec
xchg
mov
inc
push
mov
out
fs
add
fstps
sbb
pop
mov
mov
or
in
add
pop
jmp
mov
jno
lret
nop
mov
mov
sti
int3
mov
pop
push
pop
mov
fiaddl
test
out
movsb
cmc
and
outsl
jg
movsb
dec
xor
stos
push
lcall
xchg
xor
test
out
in
popa
cmp
fcompl
inc
adc
push
sub
sub
ja
mov
cmp
sbb
xchg
jl
push
push
xor
cmc
jne
dec
icebp
pop
pop
pop
iret
jnp
sub
pop
int3
mov
lcall
jne
jg
push
adc
xchg
dec
mov
pusha
sbb
out
mov
pop
test
icebp
lret
mov
mov
lods
xchg
xchg
clc
mov
or
mov
pop
fimull
mov
popf
stos
pop
dec
addr16
sub
nop
and
pusha
pop
mov
mov
out
aas
repz
stc
push
xlat
mov
mov
push
jne
imul
mov
push
and
jg
jne
cmc
inc
in
cmp
xchg
call
ret
cwtl
mov
inc
pop
cmp
or
mov
repnz
cmpsb
fbld
or
les
adc
sarb
mov
add
or
mov
mov
sarb
lahf
daa
test
xchg
cmp
lret
out
inc
out
push
orb
and
aas
lret
test
pusha
push
pop
sub
xchg
inc
daa
push
fs
das
mov
inc
enter
lods
push
pop
or
jge
and
cmp
jl
in
fistps
arpl
or
xlat
cmpsl
ja
sub
or
mov
insb
mov
push
cmpsl
cltd
xor
push
add
and
pop
loop
mov
clc
je
ljmp
push
jecxz
jnp
pop
cmpsb
int3
jb
test
subl
jl
stc
leave
imul
cmp
mov
cmp
lahf
sbb
pop
xor
xlat
sub
push
popa
or
mov
leave
sbb
dec
fnsave
aas
out
cmc
mov
pop
xor
repnz
push
mul
jg
inc
stc
in
mov
std
dec
mov
gs
mov
push
std
sub
cmpl
cmpsl
adc
fldt
es
mov
pop
nop
pop
inc
shll
pusha
sbb
iret
arpl
push
pop
xchg
pop
shlb
ds
xorl
or
mov
test
sbb
push
inc
add
or
xlat
pop
mov
fwait
cs
jnp
xchg
adc
push
pusha
mov
loop
dec
pushf
pop
inc
shll
lret
push
sub
add
sarb
gs
xchg
mov
and
mov
lea
fmuls
or
imul
cli
xor
in
sbb
movb
cmp
sub
movsb
lahf
inc
sbb
sub
inc
decb
call
pop
lea
mov
fwait
test
or
das
sub
mov
or
hlt
cmp
out
fcmovb
test
inc
out
into
loope
mov
mov
std
jbe
lret
sti
and
inc
pusha
sub
and
mov
pop
push
jno
dec
dec
lret
jle
popf
loope
sbb
cld
js
lock
adc
push
shlb
sarl
call
ds
mov
outsb
dec
je
jl
fsubrl
inc
fimuls
repz
mov
mov
sub
dec
test
test
pop
push
push
hlt
sub
pusha
idivl
scas
imul
push
cmova
orl
mov
xor
inc
clc
jge
cmc
push
ja
push
inc
fcoml
ss
test
push
test
cmpsb
pop
ret
sahf
or
ljmp
repnz
cld
xchg
in
int
cmp
dec
mov
mov
push
push
xchg
inc
ds
xchg
sub
les
notl
fmul
mov
outsl
push
or
fsubs
jns
push
pop
lahf
xor
pop
in
fimull
or
xor
cld
inc
jmp
mov
es
sahf
dec
jecxz
sub
push
jge
insl
inc
or
jecxz
ret
push
popf
mov
bound
inc
mov
addl
sbb
mov
dec
mov
fsub
inc
out
lret
add
inc
addr16
ss
loope
sub
outsb
loopne
test
jge
sub
fdiv
cld
sti
mov
iret
pop
rcrl
and
in
popf
push
insb
xlat
inc
add
clc
outsl
xor
movsb
idivb
push
push
xchg
subb
cmp
shll
add
jnp
adc
xchg
test
xor
add
jmp
cmpb
sbb
out
jecxz
mov
mov
and
and
test
inc
pop
popa
xor
lret
xchg
rcrb
ret
fnsave
push
sub
adc
inc
or
cmpsl
or
cwtl
xor
pushf
push
in
outsl
mov
negb
lods
mov
mov
dec
mov
fcoml
notb
jb
lret
dec
inc
jle
fs
cwtl
xchg
dec
in
dec
lret
cmp
pop
mov
aam
outsb
test
or
xor
jb
adcb
dec
sbb
mov
push
and
xor
push
pop
das
adcl
gs
xorb
push
addr16
or
mov
insb
stos
jge
jnp
fistl
cmp
lcall
out
test
loopne
push
int3
and
and
das
adc
pop
inc
cmp
cmp
call
lret
popf
orb
pop
jp
mov
scas
add
mov
and
xor
pushf
xor
pop
fsubrl
addr16
mov
mov
xor
sahf
dec
cmpb
adc
and
xor
push
ljmp
dec
jp
outsb
jae
fisubrs
mov
sahf
bound
je
mov
int
pop
aam
cmp
cltd
mov
sbb
dec
call
or
mov
test
cmp
daa
cwtl
cmp
iret
dec
push
test
mov
cmpsl
pop
ja
adc
ret
mov
dec
cmp
adc
mov
sbb
ret
xor
push
pop
or
pop
sbb
or
fidivl
lret
inc
int3
shrb
lea
andl
iret
dec
in
xor
adc
push
jbe
scas
add
xlat
push
imul
dec
or
shl
ret
jp
out
inc
popa
cld
mov
jp
mov
inc
mov
xor
pop
adc
mov
clc
sti
inc
fcmovbe
mov
lahf
rcr
xchg
pusha
sub
mov
inc
cmc
or
inc
aam
or
lods
pop
pop
mov
pop
push
sahf
iret
faddp
adc
push
jge
loope
jmp
xchg
inc
jnp
aaa
xchg
sbb
pop
jbe
pusha
rcrl
or
fcoml
call
adc
or
add
or
jns
arpl
outsl
jbe
mov
cwtl
mov
mov
cmp
mov
push
fxch
ss
xchg
clc
inc
fisttps
mov
std
sub
push
mov
mov
fmull
pop
aaa
push
enter
jbe
push
sti
mov
adc
xchg
cmp
lcall
cmp
xchg
jg
orb
mov
adc
fidivrl
mov
lret
cltd
push
push
pushf
inc
push
test
fnstenv
arpl
cmc
xchg
in
insb
mov
test
add
and
pop
rcrb
loope
in
ret
rcl
movsl
stos
or
jge
ret
aas
icebp
lods
sti
dec
mov
loope
or
jo
jb
inc
ja
adc
mov
mov
je
lcall
mov
pop
psubq
loopne
xchg
mov
adc
into
add
sub
arpl
imul
mov
xchg
movsl
mov
jmp
sbb
or
int3
fsubl
push
or
daa
mov
or
xor
dec
not
pop
pop
ret
dec
into
add
scas
and
out
inc
xchg
ds
jne
bound
jnp
push
inc
jmp
lcall
aas
jbe
inc
pop
loop
push
inc
into
insl
test
xchg
mov
shll
pop
imul
pop
jl
and
add
and
ret
sub
in
data16
cwtl
jnp
xchg
hlt
mov
xchg
sbb
ret
in
int
jle
or
fcmovbe
xchg
sbb
andl
jmp
cmp
in
test
daa
xchg
sahf
mov
inc
in
fcomi
js
je
and
stos
lret
sub
inc
adc
lds
pop
mov
imul
gs
inc
int3
sti
in
dec
ret
sbb
cld
pop
mov
push
loop
adc
cmp
mov
shll
dec
das
push
dec
mov
es
stos
cmpsl
dec
dec
mov
pop
and
adc
js
push
push
jmp
icebp
or
mov
addr16
pop
dec
inc
stos
lcall
sub
rorb
outsb
andb
mov
push
ret
cmp
mov
hlt
loop
mov
lods
repz
arpl
sub
adc
lret
loope
or
or
push
inc
test
jecxz
adc
cmpsb
jl
sub
ds
pop
add
inc
jmp
xlat
jbe
dec
pusha
call
cmp
in
jecxz
push
ds
fnsave
inc
push
addl
das
add
add
pop
mov
mov
push
or
add
popf
jge
fdivs
xlat
lcall
scas
fidivrs
sub
mov
push
or
push
loop
inc
jmp
test
and
rorb
mov
test
sub
fmulp
jae
ja
mov
loope
in
les
out
cli
cmpsl
data16
dec
cmpsb
cmp
mov
inc
xor
cmp
push
mov
fsubs
mov
jo
dec
inc
inc
jne
fisttps
push
rcrb
xchg
and
and
cmpsb
xchg
jo
and
pushf
aad
popf
cli
mov
lcall
andb
push
sbb
mov
lods
jbe
sub
xchg
outsl
xchg
dec
test
mov
nop
adc
mov
adc
mov
mov
dec
push
and
repz
dec
mov
testb
inc
jae
dec
jo
mov
lods
mov
jge
insb
adc
mov
cmp
sub
stos
idivb
outsb
mov
jbe
sub
adc
es
pushf
ret
test
out
sarb
fmull
xchg
sti
sub
out
mov
mov
fbld
out
push
hlt
mov
das
push
sbb
push
subl
and
add
dec
ds
cld
jo
xchg
or
sbb
clc
ret
inc
push
and
insl
add
cltd
pop
jg
and
sbb
movl
cmp
dec
movsb
mov
and
mov
pusha
xchg
inc
gs
orl
pop
xor
push
adc
fmuls
insb
adc
inc
gs
mov
or
lcall
fwait
mov
sbb
push
cmpsl
lahf
iret
xlat
mov
fidivrs
xchg
fmull
lock
cmp
daa
xchg
xchg
push
daa
ljmp
or
outsb
push
xchg
or
inc
adc
pop
pop
mov
mov
mov
adc
mov
mov
call
xor
test
cmpsl
aas
push
or
leave
jg
das
adc
mov
and
rol
lds
sahf
cmp
sub
sub
ss
test
push
icebp
mov
push
loop
repz
pop
fmuls
fs
cmp
pushf
and
js
dec
cmp
pop
pop
xor
ret
mov
and
or
adc
xor
mov
idivl
xchg
popa
push
or
mov
mov
dec
sar
fsub
jmp
and
scas
repnz
dec
lock
mov
or
loop
shrb
mov
fnstsw
pop
ret
cwtl
xor
inc
jmp
ss
sbb
mov
cmp
and
pop
sub
das
subl
idivl
cmp
shll
popa
setge
imul
push
xchg
addr16
int3
xor
dec
je
jb
xor
in
push
loopne
mul
ret
out
mov
and
scas
pusha
or
stos
mov
jae
ljmp
inc
sti
adc
lods
outsb
jns
in
fstl
mov
iret
out
in
xchg
ss
sub
mov
test
push
mov
xchg
dec
out
dec
sti
dec
stos
xor
repz
xor
jnp
jecxz
fsubrs
sti
repnz
sub
fisttps
in
sub
inc
aad
cltd
and
xchg
fidivrs
add
mov
inc
arpl
shlb
mov
out
cmp
addr16
hlt
xchg
mov
lahf
loopne
das
data16
enter
das
mov
sti
inc
push
inc
xor
popf
call
mov
aad
pop
jecxz
rcr
fdivs
enter
pop
fidivl
pop
cmc
sbb
xchg
cmc
sub
xor
nop
jnp
ds
int3
jne
adc
daa
fmull
jb
cmc
leave
mov
xchg
jmp
das
ret
jge
mov
xchg
pop
jno
sub
dec
mov
repnz
sub
out
add
clc
icebp
push
aaa
dec
jecxz
mov
gs
test
xor
xchg
loop
xchg
test
sub
cmpl
xor
and
mov
dec
enter
cli
mov
pusha
out
fistps
adc
rclb
jecxz
xor
mov
lods
cmc
gs
inc
fucomi
mov
mov
xchg
sub
ja
push
ficoml
and
test
icebp
mov
jo
push
mov
jmp
push
sub
cltd
push
ret
pop
and
jl
popf
loopne
sahf
lods
mov
and
add
push
sub
xor
xchg
or
dec
arpl
imul
sbb
inc
add
pop
ljmp
or
jb
icebp
push
push
addb
pop
dec
add
pop
int3
inc
sbb
push
and
inc
mov
mov
adc
rcr
xor
ss
pop
xorl
stos
pshufw
adc
in
push
testl
imul
lds
fadd
outsl
jp
sub
mov
lods
lret
stos
add
imul
mov
add
lcall
out
xchg
xorb
insl
jnp
aaa
mov
xor
and
clc
add
or
mov
imul
cmpsl
lahf
pusha
dec
data16
pop
sti
pusha
jne
fwait
lods
in
outsl
mov
jle
and
or
cmp
rorb
lea
inc
push
fnstenv
push
dec
rorb
push
pop
adc
push
or
cmp
mov
xlat
add
dec
inc
movsl
test
and
es
inc
lds
icebp
dec
pusha
aas
sub
sbb
pop
jecxz
add
popf
xchg
arpl
mov
stc
int
imul
mov
js
sarl
std
mov
psubsw
inc
dec
xor
dec
mov
xchg
cmc
cmpsl
pop
cmp
les
sbb
mov
push
test
push
jecxz
cmp
jl
orl
std
xor
daa
call
sub
pop
bound
push
mov
jecxz
hlt
int
addb
ds
inc
mov
ljmp
push
mov
fsqrt
pusha
popf
cmp
xor
jle
xor
out
das
insb
popf
cwtl
pandn
into
xor
sub
cmp
nop
lods
jl
movsb
in
jp
call
stos
add
sub
mov
cmpsb
sahf
xchg
mov
mov
fndisi(8087
xor
cmp
mov
dec
cmp
imul
or
jp
xchg
sbb
je
jae
push
adc
pop
in
inc
mov
int
xchg
xchg
iret
push
ss
cmpb
inc
iret
and
dec
push
pop
leave
dec
lods
das
and
sbb
ja
int3
xlat
clc
int
jne
lcall
jmp
dec
enter
dec
in
xchg
push
xor
pop
mov
cmp
ret
jbe
out
inc
add
stc
cwtl
std
btc
push
push
pop
sbb
dec
cmp
jle
loop
adc
adc
mov
xor
mov
outsl
fadd
pop
push
aam
inc
rcrb
mov
fidivl
lods
shr
jle
in
aaa
push
mov
repnz
pusha
outsl
fmuls
in
dec
iret
sar
jl
push
mov
call
pop
fmul
sbb
xchg
mov
mov
decb
mov
leave
dec
pop
jl
repz
sub
mov
xor
mov
inc
cmc
outsb
jp
adc
in
les
outsl
inc
jne
dec
popa
xor
scas
mov
jecxz
and
and
jg
push
sbbb
pusha
aam
jp
inc
mov
mov
xlat
push
ret
sub
xor
jmp
das
xchg
ret
pop
scas
or
jnp
mov
xlat
sub
xor
mov
test
sbbb
data16
pop
repz
xchg
cs
imul
out
inc
clc
pop
movsb
test
stos
jle
lea
pop
jp
dec
mov
xor
push
mov
sub
stos
cmpsb
mov
mov
push
in
fdivr
int
add
cld
test
push
test
lret
sub
pop
out
daa
cwtl
lahf
push
test
cs
sub
sbb
das
dec
pusha
pop
pop
pushf
sahf
ds
adc
or
mov
and
pop
cmpl
imul
cmp
dec
and
fistpl
mov
or
pushf
insl
out
shlb
inc
and
subb
lea
enter
jmp
test
lods
jl
fdivl
ja
sahf
scas
xchg
sbb
cmc
jbe
cmp
inc
stos
dec
int3
jmp
add
test
test
popf
test
icebp
lods
mov
mov
sarb
or
arpl
les
jmp
mov
cmp
mov
dec
mov
lea
push
test
fldl
add
cmp
cld
mov
push
sub
mov
pmovmskb
jg
pusha
out
jp
and
push
lahf
mov
scas
imul
js
int
popf
mov
pop
xor
aas
mov
out
test
lcall
adc
dec
shlb
dec
test
xor
into
int
mov
roll
dec
cmp
inc
xor
dec
mov
int3
jne
and
xchg
adc
mov
xor
mov
enter
push
into
cwtl
inc
insl
cmpsb
pop
mov
loop
push
push
jae
imul
loop
ja
xor
mov
daa
inc
fistl
inc
mov
movsb
fistpl
push
sahf
xchg
in
sub
imul
mov
mov
mov
mov
xchg
pushl
inc
test
stos
jecxz
lea
test
hlt
call
add
and
pop
es
or
xchg
repnz
cld
shll
iret
adc
faddl
into
rolb
cltd
lcall
lods
add
hlt
sbb
sbb
sbb
subb
mov
repnz
ret
and
mov
xchg
movsl
inc
cmp
jno
lock
mov
sbb
es
add
divb
test
addr16
or
movsl
sbb
cmpsl
mov
in
ljmp
mov
push
inc
out
sub
mov
test
jne
scas
jno
or
aam
cmp
inc
in
mov
jbe
cwtl
fistl
in
int
and
push
xchg
dec
mov
dec
lods
decb
aad
ss
sarl
cmp
and
sbb
pushf
cltd
xor
push
or
out
xor
fbld
lods
dec
adc
cmp
xor
push
mov
mov
data16
xchg
mov
scas
test
lds
dec
inc
adc
jg
inc
pop
repz
xchg
mov
sbb
pop
mov
fdivr
and
mov
cmp
jno
and
das
mov
jb
addr16
clc
mov
cmpsb
inc
push
inc
push
arpl
dec
in
push
lods
jmp
std
sti
shrl
into
imul
dec
mov
bound
or
xchg
or
mov
les
hlt
mov
aaa
lock
pop
outsb
pop
adc
jge
daa
stc
add
loope
xor
sbb
xchg
pop
mov
movsl
mov
ret
pop
xor
subl
and
dec
lret
je
rcrl
dec
dec
pushl
dec
cltd
push
int
imul
sub
js
cmp
icebp
stos
lds
and
mov
push
pop
iret
push
fwait
pop
xchg
int
cltd
dec
rcr
mov
rcrl
jecxz
push
and
sub
ret
int
lcall
notb
mov
xchg
les
shrb
jns
in
lret
jbe
inc
js
and
lds
mov
dec
lret
ret
xchg
or
xor
and
inc
cmp
cmp
inc
fidivrs
cmp
add
fmul
xor
aam
into
inc
sahf
cmp
rcrb
xcrypt-cfb
cmpsl
bound
cmp
scas
adc
stos
int
dec
and
js
xchg
xchg
sbb
out
lahf
xlat
cmp
jb
and
sti
pop
mov
inc
mov
std
movsb
daa
fadds
or
sub
leave
mov
mov
push
nop
outsl
adc
out
dec
pop
scas
xchg
push
pop
rcrl
push
lods
push
mov
addr16
cs
or
outsb
mov
cmpsb
fwait
nop
stos
pop
lcall
adcb
mov
in
lea
in
fs
sub
int3
mov
in
xchg
push
or
pushf
out
and
clc
mov
and
cli
and
push
mov
cmpsb
push
mov
movsb
inc
add
pop
test
push
ja
add
jle
pop
insl
out
popa
mov
pop
add
sbb
test
leave
cmpsb
daa
ds
shl
jl
roll
sbb
cltd
pop
mov
adc
ja
and
inc
xor
xchg
mov
push
jle
out
arpl
mov
mov
inc
push
dec
or
cmp
aam
xchg
cmpl
js
adcb
or
dec
fisttpl
pop
call
je
pop
int3
ret
iret
clc
jae
repz
iret
imul
cli
das
mov
movsl
or
cs
dec
mov
cs
ret
push
pop
imul
xor
lcall
cmp
jmp
in
ss
fwait
mov
and
iret
aam
jnp
fisubrl
add
mov
cmpsb
lahf
pop
sub
aaa
int3
fildll
or
mov
add
mov
sub
insl
test
and
cmpsl
in
ficomps
adc
sub
fdivr
lret
mov
in
xchg
pusha
push
in
cmp
mov
div
incb
sbbb
and
loope
lock
lds
lods
jge
scas
mov
sub
mov
jmp
ja
pop
push
lret
or
mov
mov
icebp
inc
movsl
in
dec
xor
movsl
sbb
sahf
rcll
out
call
mov
fcmovnb
jg
les
jecxz
xor
cmpsl
nop
pushf
out
add
test
xchg
jmp
mov
and
add
or
jge
dec
xor
pop
roll
xchg
fldt
outsl
xchg
xor
dec
sub
dec
xchg
seta
stc
push
sbb
mov
fidivrs
out
in
adc
std
cmp
dec
sub
lret
cs
cmp
shlb
ss
pop
jmp
out
adc
in
sub
inc
push
sbb
mov
je
and
nop
outsb
sub
mov
je
push
cmp
push
pop
loop
dec
add
mov
faddl
stos
pop
mov
push
std
jge
xor
jae
mov
in
ds
mov
popa
cmp
lahf
stos
in
ljmp
sbb
ret
mov
outsb
lahf
ds
push
aas
fisubl
push
sbb
xor
pop
cmp
or
jns
movsb
mov
mov
stos
hlt
pop
in
add
cltd
jb
or
jecxz
xor
addb
popa
xor
out
test
test
xor
pop
jle
cld
jbe
hlt
lods
lods
jno
sub
faddl
push
fdivr
inc
popf
jmp
mov
xor
popf
and
std
fmull
add
shll
jne
test
mov
out
pop
imul
sahf
fstpl
xor
out
mov
xchg
cmp
cld
ret
orl
push
rcl
add
add
cmp
mov
fcoms
icebp
push
enter
cmp
leave
bound
test
int3
aas
push
imul
in
ljmp
cli
cmp
xor
insb
mov
cmp
ja
or
setne
std
mov
adc
cmp
movsl
push
test
test
pushf
in
cli
fildll
fcmovbe
js
outsl
roll
das
xor
add
add
call
adc
call
xor
mov
push
mov
nop
lret
push
dec
testb
out
leave
cmp
imul
addr16
xlat
add
jb
movsl
out
adc
and
ja
ret
movsb
aam
sbb
ja
ljmp
daa
push
lods
dec
push
arpl
xor
sub
pop
bound
cmp
xor
jle
pop
pop
push
and
jno
inc
mov
xor
outsb
inc
ret
ret
and
es
int3
outsl
inc
ret
pop
mov
jl
mov
cmp
into
xor
das
subl
hlt
and
cmp
or
cmp
pushf
cs
xchg
iret
mov
add
mov
ret
pop
lcall
mov
add
sub
mov
scas
or
cmp
mov
sbb
inc
mov
into
and
add
dec
rcrb
rolb
push
mov
mov
dec
push
cmp
lods
cwtl
insl
jmp
cmp
sub
mov
and
out
mov
lods
cmpl
xlat
inc
pusha
loope
lret
pop
and
stos
es
push
cltd
mov
into
dec
arpl
mov
stos
nop
pop
lds
jge
lock
or
dec
sbb
mov
xor
lea
push
adc
mov
dec
mov
or
data16
add
dec
push
pop
xchg
fninit
mov
dec
xchg
jle
adc
or
xchg
xchg
mov
mov
xor
fldcw
lods
add
lods
sbb
or
shlb
dec
or
push
jbe
andl
push
xchg
add
add
sahf
filds
add
mov
sbb
insl
jb
imul
iret
adc
dec
fldcw
nop
cmpsl
call
dec
daa
mov
cmp
roll
xchg
mov
sbb
lods
and
or
aad
pop
leave
in
fnstenv
ret
cmc
sbb
pop
jno
ret
jge
dec
fnsave
clc
dec
jne
and
out
ds
sub
inc
test
and
call
push
sahf
icebp
call
mov
mov
xchg
dec
arpl
fisubl
scas
cmpsl
orb
loope
and
jne
cmp
and
inc
out
jbe
push
mov
pushf
aas
push
mov
jo
and
push
mov
out
or
fnstcw
je
pusha
jecxz
dec
icebp
jae
test
jmp
das
pusha
adc
or
iret
sar
inc
hlt
xchg
lahf
mov
or
enter
or
cmp
leave
sbb
or
je
call
and
dec
jle
fwait
jno
stos
out
push
add
pop
mov
outsl
pop
inc
mov
pop
sbb
or
cmp
mov
ja
xchg
adc
loop
ret
jl
dec
pop
or
cmp
iret
cmpb
and
in
mov
xor
lret
insb
movsl
mov
in
mov
sti
shlb
call
loope
cmc
mov
push
sti
and
jb
movsl
mov
cmp
test
sbb
and
fcmove
push
insl
les
mov
xor
outsl
cmp
ljmp
jge
rcll
pop
ja
adc
inc
cmp
rcrb
jb
sbb
pusha
xchg
adc
xor
fs
nop
xor
jl
ja
lods
lods
out
and
imul
jmp
adc
lahf
cmp
sbb
clc
lret
test
repz
aaa
loopne
mov
dec
aam
or
popf
xor
jge
stos
bound
fildl
negl
fcompl
insl
sti
rorl
sbb
adc
mov
mov
in
aas
cmp
test
lea
cwtl
push
sbb
cmp
pop
aaa
jcxz
sarb
mov
lret
cwtl
into
mov
shlb
inc
mov
xlat
scas
negl
mov
mov
pushl
and
push
incb
fisubl
sbb
mov
call
outsb
push
or
mov
cwtl
pop
ss
int
push
sbb
push
add
jecxz
add
sbb
push
push
jp
jae
xor
inc
pop
movsb
mov
shrl
nop
mov
mov
jnp
ret
lret
stos
xor
mov
pop
shrl
adc
stc
fistps
scas
xchg
mov
dec
pop
inc
daa
lods
scas
fisubrs
loopne
push
xor
or
mov
mov
inc
xchg
pop
mov
xor
add
adc
fistpl
jo
dec
aas
loop
bound
pop
mov
out
movsb
adc
push
cmp
lahf
mov
lods
push
test
test
rolb
outsb
adc
inc
sbb
pop
mov
test
dec
sub
nop
movsl
or
xor
jns
int
cmp
shl
ljmp
shrl
test
or
adc
test
popa
mov
cld
xor
sub
xor
arpl
mov
imul
das
popw
stos
iret
and
jmp
xor
mov
mov
stos
cld
push
rclb
js
xchg
sub
mov
push
and
ficomps
out
pop
stos
mov
lret
inc
push
sub
inc
jp
sub
push
scas
mov
fcompl
fxch
and
sub
stc
mov
inc
stos
mov
add
push
sub
push
movsl
adc
xchg
inc
or
dec
adc
hlt
fistpl
pop
lods
and
pop
je
repnz
xchg
fs
and
shl
testb
mov
xchg
jge
dec
xchg
mov
pop
lods
fmuls
or
mov
jns
movb
dec
xlat
xchg
out
add
loop
out
pop
bnd
lds
sub
mov
add
movsl
xchg
cmp
inc
out
mov
dec
ret
out
cli
or
mov
xchg
jnp
mov
test
mov
cmp
or
dec
cwtl
movsb
push
dec
mov
in
hlt
sbb
arpl
repz
and
sbb
jns
inc
je
fidivs
and
jle
insl
inc
in
adc
test
cli
xchg
iret
adc
and
inc
pop
divl
pusha
mov
jne
fildl
pop
shll
xchg
inc
subb
or
or
cmp
mov
adc
push
fsubl
cmp
cmp
cs
adc
add
push
dec
scas
mov
pop
aaa
adcb
mov
xlat
xchg
adc
and
sbb
pop
nop
mov
xlat
shrb
jbe
pop
mov
push
push
fistpl
jbe
dec
hlt
out
mov
mov
enter
cli
pop
jbe
mov
test
sbb
aam
or
xor
shlb
rcll
or
add
mov
push
fldt
sub
fstpl
push
popf
mov
ja
aas
xchg
add
mov
pop
mov
push
cmp
iret
push
xchg
jecxz
dec
pop
xchg
pop
aas
mov
stc
mov
cmpsb
daa
and
fcmovbe
sbb
push
mov
cmp
mov
mov
lret
push
rorl
sub
js
outsb
xchg
into
call
inc
into
aaa
pop
stc
jb
scas
xchg
sbb
dec
sbb
leave
std
push
mov
xchg
es
and
ja
pop
or
bound
inc
scas
adc
lret
mov
cltd
je
mov
sahf
addl
xchg
mov
lods
arpl
outsb
in
inc
push
sbb
into
dec
enter
sub
das
mov
cmp
push
or
negb
scas
xchg
faddp
mov
and
mov
scas
adc
shrb
cmpsl
mov
cli
mov
xchg
and
mov
xchg
adc
mov
or
out
imul
and
dec
dec
int
imul
add
js
rorb
jp
xchg
lds
push
xchg
dec
mov
sub
jecxz
xor
xlat
js
je
push
lods
xor
mov
loop
jbe
jae
fnsave
mov
push
pop
scas
and
cmpsb
xor
jmp
cmp
cmp
adc
cli
mov
prefetchnta
mov
lret
mov
ds
push
dec
xor
roll
or
mov
ficomps
lods
jecxz
xchg
sbb
sub
hlt
fsts
jnp
in
xor
jbe
jg
arpl
mov
test
pop
fisubrl
push
cmp
dec
inc
sub
subl
adc
lret
ljmp
iret
movsb
fsubl
addb
inc
and
cmpsl
popf
loop
insl
les
mov
mov
fdivl
hlt
xor
in
insb
push
sti
stos
out
jbe
cli
mov
dec
sbb
or
imul
pushf
mov
mov
push
ljmp
mov
xchg
inc
cmp
in
jecxz
repz
push
adc
enter
lret
ds
leave
dec
pop
inc
fsubrl
mov
jns
popa
add
mov
inc
mov
or
adc
lahf
and
ret
jne
mov
mov
push
xor
and
les
out
ljmp
shlb
movl
pop
sbb
test
pop
mov
daa
mov
aam
clc
or
fbld
stos
jns
dec
sub
mov
add
loop
add
pop
jmp
sarl
in
in
adc
aas
mov
aad
mov
push
pop
addb
mov
mov
ljmp
inc
sub
sar
add
and
pop
push
jae
into
shll
push
idivb
lods
cs
push
jmp
fsts
jae
sbb
sahf
jmp
test
pusha
dec
mov
push
mov
shlb
inc
mov
icebp
sbb
xchg
mov
test
adc
jle
shll
inc
cs
outsl
push
lret
pop
stc
inc
cwtl
cmp
inc
sbb
pushf
adc
cmp
fidivl
cmpsl
clc
mov
adc
xchg
in
lret
dec
test
aam
in
mov
mov
xchg
rclb
xor
push
shrl
rcrb
cmpb
repz
jge
mov
test
adc
add
xor
jmp
enter
mov
pop
loopne
insb
push
fists
stos
fwait
push
imul
adc
ret
pop
shrb
fidivrs
fdiv
mov
rol
jno
loopne
lret
mov
stc
je
cmpl
in
jecxz
inc
mov
cmp
lahf
sub
in
pop
sbb
and
jmp
lea
addr16
fimull
dec
push
inc
out
pushf
in
sbb
movlhps
inc
add
es
clc
in
jo
or
lret
inc
stos
xchg
mov
pop
int3
jecxz
xchg
cmp
jns
xor
cwtl
jg
cld
in
pop
xchg
movb
or
les
fstpl
aad
xor
lret
cmp
xlat
sti
cs
push
icebp
pop
jo
mov
adc
cs
fsubrs
fidivl
push
add
inc
loop
rcrb
lcall
sub
cmpl
lret
insb
add
xor
mov
dec
aam
adc
lock
push
jle
lods
pop
add
and
hlt
out
mov
fdivrl
xchg
mov
cmp
jmp
xor
fs
push
popf
jb
lret
add
inc
or
fadd
iret
ds
aaa
mov
dec
push
lcall
or
xor
push
out
into
mov
xlat
ljmp
aad
outsb
xchg
lcall
mov
test
xchg
sbb
push
adc
jno
imul
cwtl
ficoml
test
fistl
lea
push
repz
ret
inc
dec
mov
inc
push
ds
subb
cmpsb
adc
in
hlt
ja
jge
xchg
adc
leave
stc
xchg
pusha
mov
cmpsb
or
adc
sarl
inc
stc
iret
aaa
cs
dec
mov
pop
popa
jns
shrl
dec
mov
add
jecxz
popa
pop
iret
cmp
xor
cmpsl
mov
mov
pop
jno
add
test
mov
out
dec
mov
cmp
cmp
scas
rcrl
or
or
cmpsl
mov
jl
cmp
push
push
lea
lret
jnp
jl
adc
rclb
or
push
sbb
xacquire
jb
dec
or
lahf
sbb
lds
insb
fstl
insl
jmp
mov
rclb
gs
stc
dec
ret
in
shl
pop
push
lret
popf
lods
lahf
mov
ret
cmp
push
mov
call
xchg
dec
add
pop
bound
inc
fmuls
cli
xchg
or
push
cmpsl
cmpsb
outsb
sarb
ja
xlat
and
pushf
addb
sub
sbbl
dec
add
stos
out
jp
test
shll
loop
shl
les
adcb
cs
sbb
stc
push
pusha
jno
sarb
outsb
inc
mov
xor
fdivs
leave
mov
in
loopne
adc
les
clc
dec
mov
ret
mov
aas
inc
mov
mov
and
out
jnp
cmpsb
filds
retw
cmpsb
cwtl
adc
mov
xchg
mov
sbb
cmc
and
rorb
sarl
clc
imul
out
push
fnsave
adc
dec
insl
mov
adc
push
lea
xchg
sbb
clc
xchg
push
xor
dec
outsb
nop
cmp
mov
push
ret
jmp
and
xchg
stos
divl
adc
xchg
inc
xor
mov
pop
xchg
hlt
push
cmp
mov
mov
or
stos
test
pop
daa
stc
mov
les
sub
fs
sbb
xchg
and
imul
loop
gs
adc
aad
jl
fldl
icebp
adc
int3
sub
dec
mov
lret
dec
sub
movsb
into
dec
add
or
adc
or
adc
dec
shlb
sbb
les
loop
cmp
xor
mov
mov
inc
cmp
nop
into
shrb
fisubrs
sub
inc
push
push
popa
lods
pop
insl
cmp
dec
out
mov
fs
dec
jmp
adc
scas
and
inc
bnd
adcl
fcompl
hlt
lahf
orl
pop
xchg
into
sub
cmp
lret
push
mov
cmpsl
push
sbb
rorl
je
and
mov
xchg
lcall
inc
jle
xchg
jmp
ds
mov
push
fdivrl
loop
sub
jp
sbb
mov
xchg
sub
sub
jae
subl
sbb
add
imul
mov
lods
fisttps
push
rol
mov
repz
in
or
and
aas
push
mov
jp
mull
roll
int3
enter
and
dec
xor
enter
pushf
cli
test
addr16
jae
cld
fwait
push
mov
lods
xchg
les
iret
imul
call
adc
dec
les
in
xor
addr16
mov
cmp
pop
and
pusha
outsl
aad
cmc
in
cli
mov
mov
inc
adc
clc
jle
pop
in
jno
ds
lret
adc
push
mov
dec
pusha
dec
pop
icebp
cld
cmp
lret
int
fs
int3
fstpl
or
les
fndisi(8087
aam
in
sbb
sbb
xchg
icebp
ds
cmpl
mov
pusha
fsts
and
in
push
popf
lea
pusha
loop
icebp
mov
test
sub
xor
loop
frstor
or
pop
add
data16
xor
jle
daa
cwtl
mov
pop
push
gs
test
xor
and
lods
pop
out
cmp
jne
loopne
dec
sahf
cltd
push
or
ss
popa
daa
vpshld
cmpsl
xchg
inc
sub
loop
jp
dec
test
scas
dec
shr
outsl
js
dec
fwait
dec
sbb
jbe
or
ret
fwait
xorb
lods
xchg
out
pop
cwtl
sub
xchg
das
mov
xchg
neg
clc
mov
cmp
push
and
rorl
dec
hlt
dec
mov
int3
mov
mov
add
mov
jl
test
cmp
inc
cwtl
sbb
ja
icebp
mov
into
outsb
daa
inc
xchg
push
test
in
push
inc
cs
and
and
out
xchg
mov
inc
mov
and
cmp
sbb
cwtl
cmp
push
pusha
out
fs
aad
fcom
pop
cmp
sbb
in
xchg
or
push
loope
add
out
xor
lock
lea
sti
sub
xchg
push
lds
out
ljmp
inc
daa
data16
mov
jmp
xor
or
js
stc
and
test
mov
pcmpgtd
imul
push
pop
scas
mov
clc
lds
testl
orb
insl
push
dec
xchg
pop
in
roll
movsb
movsl
lods
leave
and
test
or
mov
and
sbbl
jne
adc
or
sbb
pop
inc
jge
sub
push
pushf
nop
outsb
in
inc
cmpsl
inc
push
push
dec
fsubr
push
outsl
daa
and
pop
lods
adc
push
adc
jno
mov
xor
add
stc
or
push
jmp
in
icebp
insb
xchg
inc
jne
sbb
ljmp
dec
loope
adc
or
cmp
xor
inc
mov
es
inc
int
mov
test
push
fcomp
xor
popf
jmp
sbb
in
mov
xor
and
jne
sub
pop
out
jge
dec
adc
cmp
notl
iret
cld
push
mov
sbb
inc
aam
sub
mov
and
push
ret
push
idivl
in
push
dec
and
push
insl
fimuls
xchg
inc
inc
imul
add
mov
jg
jbe
test
cmpsb
addr16
pop
cmp
in
rsqrtps
outsl
insb
pop
ret
xchg
out
jne
test
add
les
mov
dec
aam
ljmp
push
fsubs
or
es
sbb
and
test
xchg
sti
add
mov
xor
rorl
add
xorl
cld
inc
repz
je
xchg
sub
cmp
mov
pop
out
adc
xor
push
inc
aaa
out
cmovs
ds
popa
nop
icebp
or
sub
and
dec
cmp
fmuls
adc
inc
xchg
xchg
out
mov
insb
std
aaa
shl
fisttpll
cmp
lret
inc
loop
jl
push
test
ret
inc
mov
jne
dec
test
xor
out
mov
cmpsl
xchg
xlat
lret
adc
lds
addr16
sbbb
repz
cmp
pushfw
les
xchg
into
in
push
shll
insl
xor
mov
daa
cli
es
and
es
hlt
jecxz
test
lock
test
xor
test
fisttpl
mov
addr16
jp
or
movsb
add
insl
sbbl
cmpsl
loop
mov
fisubl
and
cld
pop
jbe
cwtl
sub
xchg
mov
mov
add
stos
out
jmp
dec
sbb
xor
in
cmp
mov
pop
pop
mov
lea
push
out
xchg
or
icebp
psrld
sti
out
in
mov
jge
iret
aad
movsl
pushf
sbb
adc
insb
adc
lret
mov
mov
mov
nop
daa
test
bound
hlt
stos
push
push
pop
cmp
jle
jg
xor
push
pop
mov
repnz
sub
popf
std
push
sar
inc
jg
dec
clc
jecxz
adc
jmp
nop
add
decl
jns
imul
movsbl
adc
gs
addr16
xor
out
jb
jl
push
jne
and
dec
stos
push
xor
push
mov
jmp
mov
insl
mov
loop
mov
push
ret
test
xchg
lods
aam
out
sbb
xchg
sub
xor
dec
push
pop
add
mov
sbb
inc
cmc
or
jmp
cmp
aas
xor
enter
xchg
cmp
xor
jb
xchg
xchg
add
stc
jbe
orl
aam
flds
decb
dec
iret
inc
popa
pop
pop
cwtl
divb
xor
ret
fnstcw
dec
idivl
dec
lret
push
push
mov
inc
bound
movsl
adcb
jecxz
lods
and
das
lret
add
cli
mov
iret
mov
shll
into
loop
ret
ja
sbb
std
dec
dec
mov
jecxz
vmovdqu
jae
fmuls
and
ja
into
jb
enter
push
popa
add
out
insl
jmp
adc
push
int3
add
sbb
jp
cmp
insb
mov
cmc
lea
imul
adc
mov
cmp
mov
cmpsb
ja
sbb
inc
out
or
sbb
loope
popl
repnz
sbb
mov
aam
jno
inc
loope
mov
mov
xor
int3
xchg
lret
mov
push
cmp
dec
pop
sbb
jp
lock
loopne
dec
fdivl
sbb
pop
or
or
je
js
out
cld
sub
mov
int3
jmp
push
into
push
lret
pop
dec
dec
jmp
jnp
cli
xor
mov
sbb
push
sub
push
pop
adc
pop
adc
cs
pop
lahf
fs
mov
sub
sub
pop
dec
les
js
nop
push
lret
push
push
mov
mov
xchg
sbb
out
jp
shl
xchg
mov
aad
in
add
ret
shlb
mov
addl
movsb
les
ret
jl
xor
loope
std
hlt
popa
test
dec
or
rorb
xchg
mov
and
nop
cmp
dec
movsb
dec
add
dec
sbb
int
loop
dec
inc
test
mov
cmc
inc
jmp
mov
jg
iret
out
inc
inc
cmp
inc
xchg
sbb
inc
or
in
push
xchg
sti
jl
lea
jb
stc
xchg
xchg
in
sbb
les
rcrl
mov
rorl
adc
repnz
out
adc
enter
adc
ljmp
and
icebp
sbb
mov
lods
aaa
fsubrs
ds
idivl
push
pushf
jns
js
leave
aas
aam
mov
mov
out
stos
jecxz
fistl
enter
pop
movups
jle
mov
fdivr
test
mov
out
icebp
movsl
push
clc
mov
clc
sbb
or
inc
xchg
daa
and
mov
mov
loopnew
xchg
mov
ret
jp
and
mov
mov
aam
std
inc
enter
inc
mov
ret
and
loop
and
popa
nop
ret
sub
es
adc
arpl
popa
mov
vpsadbw
xor
ret
pop
sub
fs
icebp
sub
xchg
jns
sbb
mov
sbb
out
icebp
or
jno
les
aad
adc
mov
or
xor
jns
push
int3
pop
test
add
ja
rcrl
sbb
ret
sub
lods
push
dec
mov
push
fisttpl
sarb
sub
adc
mov
std
jle
inc
fsubrs
fstpt
ss
dec
xor
xorb
mov
cmp
imul
jb
loop
in
xor
mov
mov
and
push
imul
pop
xor
sarl
test
jle
pop
movsl
rol
jmp
cmp
loop
insl
popl
sub
sub
lret
outsl
push
mov
cwtl
jbe
or
outsl
push
sbb
mov
neg
cmp
call
into
push
daa
rorb
inc
fsubrs
mov
clc
loopne
and
mov
jne
inc
test
xor
loop
ror
cmpsl
aam
lea
or
dec
cmp
push
xor
dec
and
lea
mov
hlt
cli
mov
or
inc
mov
mov
mov
jnp
inc
xchg
xchg
inc
enter
fldenv
pop
shrb
jo
mov
push
fwait
in
push
rcr
in
add
mov
mov
pop
xchg
mov
xchg
repnz
inc
pop
pop
data16
mov
cmp
sub
jb
cmpsb
xchg
mov
adc
cltd
adc
scas
in
cmp
fdivl
fdivs
lahf
and
cmp
and
lret
mov
jmp
int3
push
aam
mov
insl
jle
pop
mov
mov
mov
cmp
dec
lcall
arpl
gs
pop
mov
mov
pushf
pop
movsl
movsl
dec
lock
push
gs
pop
mov
bound
test
scas
cmp
mov
arpl
jecxz
fcoms
xor
dec
lret
addl
xor
mov
mov
loope
mov
sub
xchg
sub
mov
pop
lods
insb
sar
int3
test
sub
sbb
popa
movsb
push
int3
inc
les
call
arpl
stos
fs
mov
sub
lea
fcomp
in
cwtl
stos
outsl
test
pop
sbb
adc
int3
out
out
shll
imul
rclb
fisttpl
sub
in
clc
sub
repnz
mov
testb
inc
jns
shll
inc
push
icebp
das
mov
rcrl
jns
jns
xchg
fs
mov
cmpsb
push
jae
xchg
lret
mov
push
xchg
fucomp
int3
stos
outsl
loop
in
test
data16
mov
shlb
imulb
push
jg
pop
popa
ret
clc
loop
pop
mov
scas
pushf
cmpl
push
cld
inc
jge
call
jp
dec
adcl
stos
xchg
subb
jb
ds
mov
out
addr16
gs
mov
mov
jae
mov
jmp
pusha
xor
add
test
ret
cmp
sbb
mov
repnz
stc
add
stos
and
mov
adc
ja
test
jp
push
mov
aaa
cld
dec
sarl
jle
xlat
enter
inc
int
sub
fst
je
mov
dec
cli
mov
jnp
pop
int3
or
js
ja
xor
jmp
mov
and
hlt
and
movsb
jns
movsl
mov
lock
int
sub
mulb
mov
push
ljmp
push
xchg
inc
mov
sbb
or
addr16
lea
clc
mov
xor
cmpsb
mov
aad
jg
int3
sbb
call
sarb
pop
sub
sbb
arpl
pop
lret
xchg
mov
push
dec
call
xlat
sbb
xchg
loop
sbb
cltd
call
fdecstp
xor
cltd
xor
push
pusha
test
enter
cmp
mov
push
shrl
aaa
out
fbstp
fs
push
loop
push
popf
sub
fmul
fsts
adc
dec
push
or
lds
push
push
sahf
cmp
jmp
or
sbb
mov
dec
out
sbb
loopne
mov
sub
loope
pop
push
hlt
mov
aas
repz
xchg
jns
ror
mov
sub
or
or
bound
and
scas
addr16
lret
aaa
mov
inc
mov
xchg
in
movsl
mov
sbb
pop
xchg
sub
pushf
xchg
xorb
psrlq
in
je
jae
lret
dec
sub
sbb
jg
int
cmp
mov
fnsave
inc
pop
cwtl
jg
sbbl
xorb
mov
sbb
xchg
sbb
in
mov
aam
addr16
mov
rcrb
push
xchg
stc
cltd
mov
mov
adc
push
xor
or
jno
inc
mov
call
loopne
pop
mov
lods
adc
add
add
lret
jmp
mov
mov
pop
scas
xchg
sub
mov
es
lret
dec
fs
xchg
pop
gs
pop
shrb
or
mov
cmc
out
dec
lcall
dec
jno
jbe
xchg
fwait
cli
jnp
dec
and
loopne
cmp
gs
subb
xchg
mov
dec
push
pop
into
sbb
xor
xchg
out
mov
lret
pop
mov
lods
xchg
mov
in
push
out
xchg
sbb
pop
fmul
sub
daa
and
xchg
inc
pop
fiadds
mov
sbbl
lods
mov
xor
xor
xor
call
push
push
stc
nop
addl
add
test
inc
bound
js
mov
mov
popa
pop
das
fisubl
cld
jne
adc
xchg
sti
punpckhdq
xchg
add
mov
into
jns
neg
lods
and
adc
daa
rclb
pusha
xchg
lcall
jb
jle
sub
fs
inc
xchg
int
add
sbb
dec
data16
in
sahf
sub
ret
cld
sub
fists
push
xchg
stc
iret
insb
mov
push
mov
jge
mov
out
push
in
fsubl
dec
pusha
into
jle
mov
sahf
js
jb
rcpps
pop
jl
mov
das
arpl
movsl
outsb
or
dec
int3
xchg
xor
sahf
add
sub
mov
pop
or
adc
pop
shll
xchg
rcrl
int
sbb
lahf
pop
or
shl
push
dec
fidivrs
mulb
test
mov
push
or
aaa
xor
jp
pushaw
je
call
pushf
gs
pop
push
lea
lahf
adc
cmp
pop
inc
pop
incl
sub
stos
insb
leave
mov
data16
pop
adc
inc
out
push
pop
jne
popa
lods
out
mov
push
mov
xchg
movsl
dec
imul
jbe
inc
ficoms
in
inc
aam
push
xchg
lds
push
dec
add
jecxz
faddl
jl
out
fwait
scas
imul
test
cvttps2pi
hlt
xchg
mov
pop
repnz
mov
mov
cmpsl
int
xor
iret
push
outsl
inc
lds
mov
xor
test
xor
jnp
pop
inc
movsl
stc
pushf
loope
inc
lret
pop
mov
mov
and
inc
cmp
xor
pop
loopne
pop
mov
inc
in
push
mov
rcll
inc
and
jge
je
push
leave
cwtl
and
lret
daa
xchg
pop
into
into
add
xchg
loop
stc
lahf
cmp
jmp
stc
cmp
aam
pop
divl
aad
push
lret
loop
outsb
shlb
test
xor
mov
or
pop
mov
cmp
mov
jae
test
ljmp
and
adc
ljmp
jb
jmp
pop
movsl
ficoms
inc
xor
xor
fcomp
or
fnsave
sbb
xchg
fimull
aam
sbb
les
jae
test
stos
sub
jecxz
std
cmp
mov
mov
dec
in
andl
pop
xchg
jge
ret
sahf
cmp
push
ljmp
jge
std
fucomi
cmp
adc
imul
mov
or
test
enter
inc
xor
jae
xlat
mov
push
lea
push
mov
dec
scas
xor
in
and
or
insl
outsl
into
jb
test
test
adc
adc
iret
clc
lcall
xor
cmpb
add
jmp
xchg
jo
mov
mov
stos
sbbl
mov
clc
fimuls
dec
dec
rolb
add
xchg
mov
xchg
pushf
or
cmp
cmpsl
jbe
outsb
stos
sub
sahf
fisttps
pop
sbb
xor
jnp
aaa
aas
inc
negl
aad
and
pusha
insb
rcrb
pushl
repz
mov
mov
pop
popa
pop
mov
outsb
test
xchg
sub
bound
rorb
sub
shrl
mov
mov
fwait
mov
cmp
lea
inc
mov
dec
test
lcall
jnp
pop
int3
cmp
add
nop
mov
mov
jl
ficompl
add
and
sub
or
cmpb
fisubrs
mov
mov
clc
xor
or
dec
cmp
add
fwait
and
inc
cmp
xchg
sub
ret
fs
jae
mov
mov
out
dec
in
jmp
ficoml
push
scas
stos
cmp
fstp
mull
mov
push
xor
out
sbb
lea
pop
scas
push
test
or
fistpll
push
repz
mov
sub
xchg
mov
adc
add
in
mov
push
fisubrs
pop
sub
push
call
loop
in
mov
out
pop
outsl
xor
fsubrl
mov
pop
xchg
test
bound
sub
push
sbb
gs
xlat
pop
mov
cmp
and
xor
fnsave
adc
cmp
mov
pushf
jnp
jo
out
mov
push
imul
pop
lret
cmp
stos
add
push
jp
jl
enter
clc
popf
pop
jmp
mov
xorl
sbb
xchg
test
cwtl
jmp
inc
fistpll
xor
enter
xor
jno
mov
mov
repz
or
ds
loope
add
and
insb
ret
jae
dec
push
and
lds
add
jle
fsubp
test
inc
dec
jge
leave
mov
add
adc
dec
xchg
mov
sub
orb
int
dec
dec
ss
and
mov
cmpsl
insb
aas
aaa
ret
and
pop
inc
and
popa
aam
xorl
jmp
into
test
jno
fld
sub
cli
hlt
xor
enter
scas
and
loope
pop
push
call
jle
test
in
xor
cltd
int3
jl
and
adc
push
or
add
ficoms
mov
test
sbb
clc
scas
mov
or
gs
ret
mov
pop
sbb
test
push
pop
jg
pop
pop
mov
mov
scas
mov
ljmp
dec
inc
outsl
xchg
push
testl
roll
pop
loop
mov
mov
mov
lods
cs
xchg
test
scas
jb
mov
lret
add
pop
in
xchg
lret
repnz
inc
repz
jns
lock
fistpll
repnz
sub
pop
jmp
xor
xor
dec
or
sub
fyl2xp1
fdivl
dec
outsl
push
es
xchg
mov
fs
ja
sahf
lods
add
popa
cld
ja
add
lret
rcrb
insb
mov
ror
cld
pusha
das
inc
imul
mov
test
cld
adc
push
adc
inc
xchg
jb
sar
lahf
xchg
stos
rol
hlt
add
or
dec
pop
mov
inc
sub
lea
popa
and
in
push
sub
icebp
sbb
mov
jmp
out
cmp
fimuls
scas
into
lods
add
rorb
popa
pop
xchg
push
sub
call
call
daa
add
test
cmp
cmc
pop
test
jle
or
dec
add
dec
repz
xchg
ret
out
orb
add
hlt
jo
incl
adc
cmp
add
dec
rorb
push
loop
mov
jecxz
and
insb
dec
mov
push
add
cltd
jecxz
shll
repz
or
call
jbe
in
mov
movsb
pusha
repz
mov
push
in
movsb
xlat
pop
jecxz
dec
inc
cmp
mov
mov
fmull
clc
and
or
test
add
mov
icebp
in
cli
add
mov
cmc
sub
fiadds
bound
push
gs
or
mov
and
cmpsb
test
js
jl
adc
cmpsb
push
enter
sbb
les
inc
mov
xor
aas
and
inc
mov
outsb
mov
mov
les
xchg
pop
add
leave
jae
stos
mov
icebp
push
aad
cs
pop
stos
xchg
repnz
js
cwtl
adc
fiadds
sbb
or
ret
iret
fisubs
mov
fld
leave
jle
fcmovnbe
pushf
rorb
xor
jnp
sahf
adc
pop
push
push
push
mov
rol
lods
das
xchg
roll
int
scas
lahf
pop
adc
test
dec
add
inc
popl
stos
outsb
lret
and
shl
cwtl
test
sahf
dec
lods
test
inc
mov
mov
test
dec
adc
push
outsl
jnp
jg
sbb
sub
arpl
gs
in
xchg
pop
cli
push
insl
movsl
popf
mov
lcall
shlb
add
or
or
test
cwtl
jmp
ja
loop
pop
scas
cli
inc
repnz
mov
rorb
ror
int
lds
and
push
xchg
or
add
sahf
mov
jl
dec
mov
in
imul
push
adc
sub
pop
mov
gs
fbstp
push
or
cli
inc
mov
out
jp
outsb
or
pop
mov
out
fldl
pusha
out
jb
adcl
das
or
sti
mov
cltd
dec
inc
jb
notl
int
imul
fidivrl
adc
scas
sub
loop
cmp
xor
push
scas
rolb
je
mov
movl
sarb
xchg
mov
loope
mov
pop
call
outsb
xchg
test
je
jecxz
lea
scas
dec
sti
inc
cmp
xchg
inc
xor
rolb
push
sub
add
stc
stos
call
sti
inc
cld
test
dec
orl
pop
sbb
bound
pop
push
jb,pn
clc
xchg
in
call
and
mov
stos
push
adc
lds
sbb
push
iret
or
cltd
mov
imul
mov
iret
gs
fs
and
test
mov
lea
out
adc
or
cmp
mov
rcrl
hlt
inc
enter
or
sbb
jns
rorl
clc
cmp
jbe
jb
mov
xor
repnz
clc
es
adc
and
adc
push
add
push
cmp
cmp
ret
jge
mov
cmp
add
mov
and
sbb
xor
push
dec
icebp
in
xchg
sub
adc
loopne
pop
inc
shlb
inc
push
push
aam
loopne
out
push
push
mov
and
or
xor
stos
mov
cmpsl
dec
mov
xchg
test
dec
push
mov
jne
xchg
adc
test
rcr
int
mov
fcoml
inc
adcl
inc
imul
push
sahf
out
std
andb
aam
cld
inc
out
lock
dec
iret
test
js
fnstsw
cmp
mov
mov
sbb
mov
xor
lahf
jo
jp
and
lods
mov
sarl
xor
xchg
sbb
push
stc
or
xchg
xchg
jbe
imul
int3
popf
aam
insb
inc
or
aam
mov
int3
jno
rorb
femms
in
push
lock
or
adc
pop
ljmp
jle
mov
cwtl
jecxz
mov
xorb
loopne
push
dec
xorb
scas
jecxz
xchg
inc
aaa
ret
bnd
repnz
and
push
inc
les
push
repz
mov
dec
jb
push
xorl
xchg
jnp
and
cltd
xor
or
clc
xchg
sub
ss
xchg
and
fs
jecxz
sbb
repz
daa
lds
rclb
cmpsb
push
jno
daa
xchg
mov
pop
mov
call
mov
fimull
lds
adc
mov
sbb
sub
mov
iret
push
push
in
stos
jmp
push
shlb
in
cli
sbb
mov
fiadds
iret
repnz
imul
ds
inc
inc
sub
push
popf
xorl
fnstenv
xor
sub
and
hlt
mov
mov
loop
add
in
lds
cwtl
loopne
mov
cmp
cmp
jmp
xchg
out
cltd
pop
repz
aas
aas
out
nop
pop
mov
sub
pop
bound
push
xor
add
and
xchg
in
xlat
xchg
mov
incl
repz
and
mov
push
xchg
sahf
cmp
loopne
cmp
ljmp
xchg
and
pop
dec
in
cmpb
adc
daa
adc
sbb
mov
add
xor
in
add
pop
mov
ret
jo
pop
mov
xchg
inc
or
jecxz
leave
addr16
adc
add
jecxz
stos
js
cmp
test
adc
cmp
movsl
dec
out
mov
mov
add
and
sub
adc
add
movsb
int3
ss
bound
mov
push
mov
pop
cmc
lcall
or
in
sbb
cwtl
xor
mov
mov
add
shll
mov
in
mov
adc
xor
pop
dec
pop
mov
jbe
jb
mov
fildll
rcrb
data16
rcll
nop
pop
lcall
push
cmp
mov
push
in
push
aam
cmpb
test
std
das
mov
rcr
das
sub
cmpsb
add
inc
add
fnstsw
mov
mov
cs
lods
or
jecxz
jnp
jb
arpl
and
sub
into
outsl
jg
fst
mov
ret
mov
nop
js
or
out
out
into
fs
sub
cmc
pushf
mov
inc
push
movsl
cmp
pop
ljmp
xor
adc
or
xchg
arpl
jb
test
ror
cmp
fdivrl
cmpsl
jmp
je
in
loop
jge
scas
sbb
mov
cmp
jl
sbb
aaa
push
roll
mov
mov
mov
leave
cs
push
stos
out
into
loopne
mov
int3
imul
jle
in
scas
pop
xor
aad
pop
dec
mov
imul
scas
iret
pop
mov
pop
outsb
mov
mulb
add
xchg
iret
std
pop
test
and
fdivl
iret
push
dec
fwait
mov
andl
jmp
dec
adc
repz
or
jmp
stos
lret
mov
movb
sub
outsb
push
lret
movl
cmpsb
mov
push
cltd
inc
pop
hlt
push
mov
fcomi
movsb
jmp
inc
add
sbb
mov
dec
scas
test
adcb
out
pop
test
and
sbb
mov
shll
sbb
mov
movsb
mov
xchg
pop
lock
ljmp
fnstsw
mov
dec
jnp
or
pop
lods
movsl
es
in
gs
pop
imul
mov
cs
adc
pop
test
dec
insb
es
inc
repnz
cmc
insb
data16
and
jo
and
jns
push
ss
xchg
xor
jo
xchg
jbe
cmp
xchg
cld
pop
mov
adc
xchg
xchg
cltd
cmp
jmp
loop
cmc
dec
inc
xchg
test
cwtl
mov
add
les
popf
push
inc
mov
mov
mov
jge
adc
push
lret
jb
push
cld
xor
addr16
inc
pop
sbb
jnp
mov
cli
mov
mov
addr16
cmpsl
aas
inc
dec
mov
dec
xor
aas
nop
cli
fwait
data16
idivl
xor
pop
mov
outsl
xor
incb
insl
pop
push
ret
mov
les
rcrb
std
mov
enter
jae
fisttps
aam
mov
mov
jg
test
les
dec
xor
aas
and
cs
loop
dec
pop
popa
fisttpll
in
dec
in
push
xor
mov
icebp
mov
sbb
push
pop
jmp
push
arpl
into
xchg
cli
clc
add
movsb
mov
loope
in
shlb
gs
dec
or
jnp
rol
scas
jecxz
adcl
in
pop
scas
pop
out
mov
xchg
dec
mov
sbb
ja
out
sub
mov
cltd
fisubl
jg
out
cmpsl
stos
or
jl
dec
cwtl
lcall
test
sbb
outsl
sub
in
call
adc
mov
movsb
leave
aad
cwtl
insl
mov
xor
lret
stc
jae
outsl
adc
sbb
jae
mov
jp
xchg
shrl
adc
enter
lods
cwtl
mov
lret
bound
outsl
les
rcr
pop
movhps
testb
xchg
fwait
cld
call
jae
stc
imul
shrl
sub
test
cli
sbb
loop
shr
seto
and
test
mov
pop
dec
cmc
scas
mov
mov
mov
xchg
mov
into
sbb
push
std
sarb
test
inc
and
in
xor
bound
mov
es
push
jmp
loope
scas
xchg
inc
dec
std
ret
adc
adc
in
aam
testb
or
iret
push
and
push
ljmp
push
js
xor
shl
dec
mov
push
push
xor
dec
clc
mov
dec
test
loopne
mov
outsl
xchg
mov
jp
loope
sbb
in
icebp
or
and
loope
fcomip
jecxz
sbb
push
inc
movsb
mov
rcrl
mov
popf
daa
cmp
lea
jae
stc
mov
jo
stc
ret
fcoml
sub
ss
loop
in
sub
dec
fs
push
subb
in
mov
mov
std
cwtl
xchg
or
cmp
stos
js
test
shrl
movsl
mov
ficoms
sti
ds
sbb
cmc
sub
sbb
pop
jp
inc
in
in
push
adc
xor
jecxz
lea
mov
lock
stc
mov
jne
cli
out
out
mov
push
movl
insl
mov
mov
or
bound
jns
ljmp
sub
dec
test
pop
mov
xchg
mov
into
inc
mov
cmp
fucomip
inc
shl
xchg
lahf
mov
mov
sbb
insl
add
inc
inc
and
out
jbe
xchg
cmpsb
lret
lcall
xchg
fsub
mov
inc
adc
loopne
sub
sub
leave
lahf
movl
push
mov
xor
ja
jno
in
pop
cmp
lret
cs
outsl
test
daa
insb
sbb
in
mov
sahf
push
mov
push
push
clc
int
dec
or
imul
sahf
pushf
sti
cmp
mov
jae
movsl
ds
inc
adc
mov
cmp
mov
push
xor
int3
dec
push
in
or
push
out
xchg
push
push
mov
mov
inc
pcmpgtw
fidivrl
push
pusha
movsb
xchg
and
insb
rorl
or
les
movsl
ficoms
out
sbb
adc
jmp
mov
into
into
orl
mov
jecxz
mov
or
faddl
ret
xor
std
fisttpl
xchg
mov
pop
jle
push
insb
or
ret
fcom
lds
pop
insb
mov
repz
push
fs
jo
mov
js
or
nop
xchg
xor
addl
mov
mov
xor
lods
lahf
and
movsl
pop
je
popa
cmpsl
jl
test
xor
nop
push
orl
or
rclb
in
pop
cmpl
pop
mov
mov
ljmp
dec
jbe
mov
pop
push
lcall
pop
sarb
js
xorb
jns
popa
pop
in
icebp
loope
sub
inc
pop
int3
pop
inc
lods
mov
push
int3
pop
movb
mov
lcall
ret
loop
gs
lret
insb
jns
sbb
inc
insl
inc
and
into
sahf
mov
in
xor
cli
mov
stos
idivb
pop
jg
xor
inc
leave
in
inc
xor
in
mov
out
dec
cwtl
xchg
inc
push
lea
mov
xchg
xchg
stos
xor
cmp
mov
push
lods
dec
mov
pop
mov
fisubs
mov
mov
mov
dec
std
xchg
test
lds
pop
arpl
fdiv
fildll
mov
icebp
cld
fwait
dec
jbe
adc
adc
xor
out
or
mov
push
sti
cmp
fcmovnbe
cmpsl
mov
and
sub
pop
scas
movl
mov
mov
adc
push
data16
imul
imul
sub
sbb
stos
ret
out
mov
fidivrs
int
icebp
hlt
add
mov
mov
test
roll
pop
mov
mov
xor
popl
xor
neg
cltd
sub
in
push
mov
pop
pop
lea
dec
ret
popa
pop
push
pop
scas
xchg
aaa
hlt
inc
inc
mov
pop
dec
adc
sub
push
xchg
ret
loope
inc
call
cmp
stc
fstps
outsl
cld
mov
pop
fdivl
testb
cmp
idiv
jns
int
xor
je
movsb
sbb
xchg
mov
xchg
xchg
and
lods
xchg
xchg
xorl
pop
stc
inc
es
out
lock
jb
fs
call
shll
xor
std
or
repz
sahf
mov
adc
xchg
xor
call
insl
sbb
cmp
ja
sarb
inc
pop
es
mov
ljmp
fs
in
lods
in
sbb
inc
push
popa
jb
dec
cmpb
pushf
dec
mov
and
std
xchg
adc
mov
scas
and
mov
or
lret
out
mov
sbb
mov
adc
dec
cld
outsl
test
inc
dec
xchg
inc
and
call
pop
xchg
jno
popf
mov
cmpsb
mov
dec
mov
bnd
lret
add
ffree
xchg
into
std
sub
xor
popf
cld
pop
mov
push
ljmp
pushf
dec
mov
pop
cmp
mov
stos
sub
sub
addl
and
mov
jmp
imul
jbe
mov
notl
test
jne
inc
pop
ljmp
loopne
xor
into
out
dec
ja
xchg
aas
dec
ficomps
insl
mov
mov
mov
daa
repz
icebp
and
ja
cmp
aam
stos
pminub
repz
int
lret
repz
adc
loopne
or
adc
and
dec
sahf
fisttps
jo
sbb
pop
pop
js
addr16
add
push
adc
push
push
jmp
xchg
mov
sbb
pop
mov
scas
dec
inc
mov
xor
push
clc
jns
mov
ret
pop
jnp
das
lods
shll
push
subl
addl
mov
push
dec
and
xor
sbb
inc
ja
sub
sub
inc
inc
bound
cmp
nop
dec
xor
idivl
dec
ret
dec
inc
popf
mov
jp
aas
testl
pusha
sub
int
mov
jl,pn
out
xchg
adc
sub
mov
int3
les
ds
loopne
ds
lock
jge
fisubs
lds
repnz
lahf
push
scas
cmp
aaa
push
imul
inc
aam
sbb
lea
popa
jmp
cmp
mov
jne
mov
bound
jb
inc
lock
and
adc
shll
push
cld
lock
mov
or
cmp
ss
cs
mov
fwait
inc
pop
leave
add
inc
and
xor
push
out
mov
pop
hlt
push
mov
dec
xchg
fidivs
sub
enter
out
movsb
inc
fbstp
repz
sbb
adc
adc
push
stos
mov
cwtl
out
inc
hlt
inc
aad
inc
in
movsl
push
ret
mov
inc
pop
aad
mov
stc
cmp
mov
or
push
cmpsb
sub
outsl
add
fldt
test
or
jg,pn
dec
ret
lret
adc
shll
into
add
enter
loopne
call
fcom
adc
xor
xlat
push
into
dec
rcr
push
bsf
xor
cltd
fwait
mov
push
lods
popf
das
push
cli
fildl
push
push
dec
mov
andl
add
shrb
js
push
cmpl
bound
xor
enter
push
repz
les
mov
lahf
mov
add
inc
roll
inc
subb
fcomp
out
push
dec
int
add
shll
in
leave
and
addr16
gs
inc
adc
fbstp
ret
in
adc
jbe
mov
fsts
mov
jg
clc
gs
jno
repnz
imul
and
movntq
pop
push
sub
mov
scas
loop
pusha
test
jp
sahf
push
xor
sbb
nop
lds
xchg
pop
mov
cmpsb
mov
push
pop
mov
in
push
xchg
sar
push
outsl
adc
or
pop
fcoml
pop
sbb
loop
test
not
pop
out
xor
fldl
insl
loopne
inc
xor
mov
stos
int
push
or
loope
add
mov
jmp
mov
mov
or
sti
mov
pop
push
pop
add
or
push
pop
sbb
stos
push
fwait
call
inc
fidivrl
fisttps
lret
aam
into
fisubrl
push
mov
sbb
mov
cmp
pop
repnz
je
xchg
adc
test
sbb
jg
pop
loop
mov
sbb
aas
inc
repz
inc
mov
stos
xchg
outsl
out
test
in
fadds
or
pop
cmp
subb
fldt
or
cmp
and
cmp
xchg
sbb
xchg
mov
xlat
scas
mov
xchg
or
mov
inc
sub
and
div
stos
cmpl
mov
pushf
popa
jb
imul
frstor
fcoms
in
inc
add
jns
mov
or
int3
aad
int
gs
adc
adc
pushf
inc
les
sahf
fistps
mov
adc
fdivrs
xor
into
jle
xlat
sub
mov
rcll
div
mov
xlat
xchg
adc
movsb
jl
dec
lahf
and
add
cmpsl
mov
adc
adc
mov
and
mov
mov
cmpsl
pop
add
movsb
xchg
adc
pop
imul
sbb
sbb
mov
dec
mov
xlat
mov
movsl
mov
dec
mov
lods
sti
ja
lahf
outsb
jo
mov
or
dec
add
loopne
cld
or
fldt
cmp
cmp
clc
aad
into
and
sbb
int3
dec
push
xchg
sub
sahf
mov
pop
mov
adc
incl
test
xor
xor
stos
addr16
es
xchg
les
fucomip
daa
test
cmpsl
pop
sbb
cli
out
push
jns
dec
push
bound
pop
cmc
mov
icebp
hlt
shlb
enter
fstpt
out
pop
cli
mov
addr16
pop
inc
mov
push
or
or
daa
call
push
push
adc
add
rcrb
push
cmp
dec
push
cmp
pop
test
mov
xor
xor
inc
mov
divb
je
inc
or
mov
popa
mov
je
cmp
cmp
xor
imul
sar
inc
call
es
add
out
les
xchg
jmp
sbb
adc
pop
hlt
and
cmpsb
fisttpll
and
std
ljmp
sbb
push
in
loope
cmp
inc
adc
jb
mulb
dec
repnz
and
or
lcall
insb
sub
std
cld
inc
push
mov
call
adc
pop
dec
fidivl
inc
pop
lea
js
aam
cmp
jae
inc
mov
shrl
dec
insb
mov
movsb
insb
or
cmp
add
jecxz
pop
lcall
lds
pop
cmpsb
test
decb
push
mov
adc
mov
or
adc
ret
stos
insl
cmpsb
mov
mov
xchg
insb
jle
or
cwtl
mov
shlb
out
jo
in
in
jnp
cmp
xchg
mov
add
xlat
xchg
cmpsl
aam
loop
jbe
jne
mov
out
jb
add
cmp
pop
mov
loope
into
ja
stos
dec
js
fsubr
pushf
rcrl
xchg
xor
pushf
push
jbe
push
addb
leave
xchg
test
je
dec
xchg
leave
sbb
sahf
test
icebp
sub
addl
sbbl
mov
filds
or
ficoms
mov
lret
lock
sub
in
jle
in
imul
out
cltd
lea
fs
push
cltd
lret
xchg
in
mov
jge
xchg
leave
push
cmc
test
inc
dec
mov
enter
inc
cmp
call
pop
mov
test
nop
cmp
leave
leave
sub
push
add
mov
dec
cmp
lret
fsubr
gs
gs
dec
sbb
mov
imul
stc
rcll
sbb
mov
and
stos
je
xchg
xchg
adc
sahf
mov
add
push
loopne
dec
xchg
sub
rcl
mov
repnz
push
add
dec
inc
clc
into
push
cwtl
sub
mov
dec
leave
int3
inc
fmuls
adc
push
jecxz
nop
in
lock
cmpsl
mov
call
push
add
dec
push
iret
int
jb
addr16
cld
xchg
pusha
in
lahf
jne
cwtl
cmp
jecxz
add
cmc
insl
fsubs
out
jo
call
adc
ror
lcall
rclb
popf
pop
stos
insb
pop
insb
cmc
dec
pop
inc
test
xchg
cmpsl
test
xchg
pop
js
cmc
insl
xor
hlt
fstps
je
leave
inc
in
and
stos
xchg
out
push
out
out
pop
adc
or
sbb
in
inc
cld
push
jle
sbb
test
jo
sub
xor
out
mov
flds
lods
jl
pop
lret
enter
cltd
sub
and
and
adc
dec
lret
jbe
lods
adc
xor
xchg
int
mov
mov
enter
mov
jo
test
jo
scas
xor
arpl
sbb
ss
stos
sti
and
pop
mov
sbb
stc
inc
lea
setbe
xor
xor
xchg
out
cmp
rcl
scas
cmpsl
mov
test
js
fcmovnbe
adc
pop
push
add
jno
mov
leave
fnstsw
mov
and
inc
mov
inc
scas
pop
mov
ror
imul
shrl
pop
iret
out
sub
call
jmp
mov
sub
hlt
inc
fs
mov
fidivl
xor
pushf
repnz
jl
push
push
rcrl
adc
test
mov
inc
and
stos
sti
xchg
jae
inc
mov
mov
dec
pushf
std
les
pop
test
inc
stos
notl
or
jo
jns
sti
inc
cmp
cmc
xrelease
add
sub
jle
cmc
outsb
pop
lea
mov
mov
mov
push
shll
pop
inc
adc
mov
xor
loop
mov
aaa
mov
sub
mov
xchg
jne
inc
nop
loop
jb
pop
mov
sbb
jp
xor
stos
lods
pop
inc
gs
insl
inc
or
add
mov
and
sub
and
pusha
jmp
rcl
mov
add
addl
cmp
inc
movsb
sti
mov
dec
xor
add
push
xchg
adc
aaa
lret
cmp
pop
sub
test
xlat
out
jb
fdivrl
movsl
sub
pop
das
push
loop
cmpsb
jp
mov
dec
inc
xor
imul
xor
xlat
rcrb
pop
lock
mov
into
fs
and
ret
inc
stc
sub
or
idiv
sub
cld
movsl
ret
sbb
ret
les
sbb
lret
cmp
mov
sbb
jbe
ret
mov
and
test
test
in
push
dec
pop
lea
inc
dec
pop
mov
xchg
ds
xor
loope
in
rorl
add
outsb
negb
ljmp
jg
idiv
mov
push
push
mov
pop
add
or
sub
mov
mov
xor
lcall
push
stc
mov
lcall
into
jnp
and
adc
jne
icebp
daa
xor
lcall
imul
int3
inc
jg
jb
icebp
scas
aam
mov
inc
xor
xor
subl
call
jae
cmp
cmp
mov
mov
or
pop
dec
cmpsl
jns
pop
test
sahf
xchg
dec
inc
icebp
testl
stos
rolb
ret
or
outsb
mov
xor
inc
or
mov
insb
mov
js
in
push
ljmp
jae
jmp
outsb
add
adc
shrb
iret
or
andb
lods
ficompl
popa
mov
mov
pop
mov
sub
dec
sub
lods
sub
sub
push
ljmp
xchg
inc
lahf
pop
push
popf
aad
test
add
adc
dec
lea
xlat
loop
jecxz
ja
xchg
push
arpl
push
test
adc
lds
adc
jmp
arpl
loope
cmp
cwtl
out
adc
adc
xchg
ss
out
push
lahf
and
outsb
mov
inc
pop
add
adc
cmp
ret
stos
mov
dec
repz
lods
mov
and
leave
sub
les
mov
fildll
mov
add
pop
inc
clc
mov
or
mov
fistps
pop
divl
xchg
pusha
cmp
nop
sti
lahf
sbb
test
adc
fsubs
mov
mov
movl
push
mov
outsl
in
jns
mov
push
mov
sbb
test
jecxz
js
mov
inc
push
movsb
xchg
clc
jbe
push
sub
ret
or
sbb
movsb
gs
xor
lock
movsl
int
shrl
leave
push
xor
insb
xchg
or
xchg
dec
ljmp
cwtl
jbe
pop
xlat
dec
mov
shll
imul
fildll
aas
mov
sbb
mov
cmp
lret
data16
ret
pop
testl
xor
das
int
lret
xor
jmp
adc
pop
es
enter
or
mov
bound
push
jns
sub
js
fcomip
xor
test
cwtl
sub
sub
inc
and
jecxz
pop
aad
test
sub
mov
jbe
mov
fld
fwait
add
fs
mov
dec
pop
insl
cli
iret
addl
xchg
dec
lret
loope
dec
cmpsl
xchg
mov
adc
es
pop
outsb
pop
leave
in
fcompl
insl
inc
cwtl
mov
mov
or
rcr
pop
push
leave
push
inc
cwtl
cwtl
adc
adc
inc
or
dec
sbb
imul
add
leave
sub
loope
mov
inc
rcl
in
mov
bswap
and
stos
adc
push
sbb
rolb
cs
testb
jl
xor
jl
stos
pop
mov
addb
adc
scas
scas
mov
push
and
je
in
xor
imul
dec
adc
adc
incb
xchg
imul
cmp
sbb
sbb
or
out
mov
push
ret
int
adc
lock
in
test
adc
add
inc
cmpsl
and
inc
sbb
inc
xor
aam
aad
outsb
push
test
inc
mov
and
xor
pop
or
stos
mov
xchg
aaa
sahf
inc
pop
cmp
add
mov
call
inc
pushf
enter
xchg
orb
or
inc
sub
sub
popa
push
popf
mov
sub
push
push
jbe
adc
sub
data16
in
aas
inc
adc
adc
push
jmp
rolb
push
sbb
pop
out
sub
ret
pusha
lds
popl
ja
mov
add
stos
out
mov
add
fnstenv
jg
sub
mov
lods
and
test
not
adc
insl
mov
cmp
js
lods
mov
enter
jmp
pop
lods
add
jno
bnd
ret
or
pop
jmp
mov
mov
nop
pop
cmp
sub
icebp
inc
mov
mov
fcomp
es
ljmp
mov
sbb
outsl
shlb
jnp
arpl
push
shll
lcall
jne
das
cmp
imul
shrl
cs
cmc
lcall
popf
ror
inc
jecxz
std
jns
arpl
or
jg
fdivrl
dec
lcall
pop
mov
sub
xor
fwait
sub
notb
sbbl
pop
scas
push
faddl
mov
and
push
adc
jns
fs
add
idiv
and
es
and
shl
cmp
fnsave
adc
add
cld
hlt
imul
cs
add
or
or
repnz
mov
subl
push
inc
add
jae
cmp
lea
addl
scas
add
mov
in
call
shlb
rcl
daa
fs
das
aad
lds
ret
sbb
sbb
pop
xor
fimull
lods
insb
jg
adc
push
mov
lret
sbb
in
or
push
shlb
es
add
inc
add
jbe
shlb
out
pop
mov
mov
mov
sbb
das
mov
sub
dec
addr16
sub
xchg
jp
enter
incb
enter
pop
or
repnz
push
popf
mov
into
or
mov
or
daa
loop
std
add
adc
imul
gs
stc
push
imul
call
nop
out
jp
lret
fcomip
cmp
or
jl
sbb
pusha
notl
sbb
inc
or
cltd
mov
mov
les
push
and
in
std
mov
sbb
cmp
xlat
and
mov
or
inc
push
loop
cmpsl
test
inc
call
stos
push
pop
and
pop
push
xchg
pushf
cs
enter
insb
mov
inc
idivb
out
fiadds
inc
xchg
xchg
icebp
and
addl
or
sarb
inc
xorb
or
jge
stos
nop
sub
lcall
mov
jno
fs
or
mov
pushf
inc
and
sbb
adc
sbb
js
jb
jo
test
out
outsl
mov
movsb
pop
mov
clc
imul
and
mov
adcl
sub
pop
push
int3
je
subl
popa
mov
jecxz
pop
jmp
in
or
mov
mov
push
jl
pop
inc
mov
call
mov
int3
sub
fnstcw
mov
mov
mov
ss
xchg
jecxz
jl
pop
mov
dec
inc
push
adcb
sti
push
pop
in
xchg
jae
bound
std
push
orl
rep
pushf
aaa
popa
out
mov
int
fldcw
adc
movsb
adc
pop
cmp
mov
mov
or
pop
imul
mov
roll
ljmp
test
add
sbb
cmpb
out
xor
jo
rclb
xor
or
add
inc
jecxz
or
sbb
ret
adc
popa
xor
dec
frstor
cld
sbb
mov
xchg
pop
jns
cltd
jnp
je
stos
inc
mov
out
ds
mov
popa
jnp
cwtl
mov
mov
ds
push
add
cmc
pushf
cwtl
mov
rol
incb
stos
mov
mov
push
sub
mov
mov
mov
lods
shr
xchg
push
test
out
inc
mov
imul
add
js
stos
jmp
pop
fiaddl
lock
adc
daa
out
push
sar
add
loopne
xchg
inc
js
mov
push
ret
movsb
outsb
fwait
push
or
dec
fwait
loopne
add
adc
out
aaa
inc
mov
ret
enter
mov
into
pop
sub
jno
inc
adc
push
or
inc
int
hlt
test
push
test
int3
stc
xlat
aam
lret
push
stos
push
testl
mov
or
cld
mov
jmp
pop
aad
mov
aaa
cmpsb
mov
loopne
push
daa
cld
inc
cmpl
lcall
mov
sbb
movsl
push
dec
dec
dec
sub
jle
jae
rcrl
rcrb
push
aad
push
rcl
xchg
jae
mov
addr16
lret
mov
leave
xor
jbe
subl
mov
scas
dec
loop
jecxz
outsb
js
iret
insb
leave
aam
or
iret
add
insl
sti
push
add
pop
inc
xchg
iret
dec
sub
jnp
mov
cmpsb
dec
push
into
fbstp
jbe
mov
call
cwtl
push
cld
dec
mov
andl
mov
jns
aam
cmp
pushf
sub
xchg
sbbl
call
orl
arpl
sahf
in
clc
repnz
mov
stos
mov
fcmovb
mov
in
stos
arpl
pop
iret
add
mov
push
cmpsb
xorl
flds
mov
jl
cmpsl
jns
ds
les
int
adcb
sub
jne
loopne
pop
scas
cmp
inc
adc
leave
dec
jg
adc
or
xor
mov
dec
psraw
cmp
stos
jp
mov
mov
loop
leave
leave
sub
sti
fiaddl
cmpsb
das
pusha
popa
mov
mov
mov
inc
imul
rcr
adc
sbb
xchg
jl
stc
mov
test
scas
xlat
fwait
push
or
js
movsb
pop
out
lods
cmp
je
or
shl
adcb
jae
pop
sub
ret
jnp
push
push
pop
int3
jmp
jge
sbbb
sbb
pop
fs
jo
mov
sahf
cli
cld
adc
es
scas
arpl
fsubl
test
mov
jb
cmpsl
nop
push
pop
adc
test
loop
movsl
dec
out
in
dec
jge
xchg
and
pop
rcll
je
sti
push
lahf
dec
adc
call
out
scas
cltd
push
pop
xchg
xchg
push
push
lahf
jg
sub
xchg
mov
je
push
or
mov
in
mov
pusha
adc
mov
pushf
sbb
fucomp
daa
or
fucomi
mov
mov
jge
xor
cmpsb
sub
inc
mov
jo
push
adc
movsb
cs
inc
leave
sbbl
xchg
push
sahf
cmpsl
aad
dec
subb
inc
shrb
jo
icebp
aas
ja
movsl
sub
cmp
cmp
push
xor
jmp
dec
outsb
and
cmp
subl
out
sbb
rclb
sti
dec
mov
dec
cmp
xlat
sti
mov
lret
jp
push
inc
xorl
ret
insl
mov
cmpsb
mov
and
clc
roll
and
pop
adc
sub
lret
aaa
sti
sbb
push
test
pop
jb
mov
mov
xor
mov
test
add
nop
dec
sbb
rorl
cmp
or
insl
push
mov
push
mov
popa
aaa
dec
fldt
mov
xchg
mov
pop
aas
js
aam
cmp
add
shr
and
sub
test
sub
pop
imul
jae
xorl
into
mov
scas
movsl
pop
lea
push
jp
or
rorb
add
jae
dec
cmc
adc
xchg
push
xchg
xchg
sarl
dec
and
mov
rcrl
pop
movsb
mov
arpl
int
adc
pop
mov
test
aas
mov
pop
notl
cwtl
mov
sbb
repnz
mov
in
ja
sbb
into
mov
enter
in
lcall
inc
insb
mov
sub
mov
lods
mov
cmp
scas
inc
popf
push
xchg
dec
jbe
adc
into
mov
mov
add
push
imul
pop
lret
mov
pop
push
sub
cld
movsb
pop
ds
jae
or
mov
or
pop
mov
xlat
shrb
push
cmp
or
xchg
enter
daa
and
cmc
sarl
push
aam
cli
cmp
dec
das
add
imul
adc
sbb
in
in
sub
mov
mov
jno
scas
fwait
cltd
roll
xor
pop
and
aam
pop
jne
sbb
arpl
mov
fldenv
adc
pop
cmp
xchg
and
push
icebp
and
adc
movsb
scas
gs
push
push
and
adc
mov
gs
and
aad
fcmove
sbbl
jmp
jne
int
mov
rol
ljmp
stos
stos
mov
pop
pushf
je
das
in
test
inc
or
loopne
test
hlt
mov
dec
movsl
enter
fs
call
fiadds
xor
push
inc
incb
unpckhps
mov
inc
adcb
das
into
das
and
jnp
pushf
xor
or
arpl
sbb
mov
out
and
lret
movsb
push
mov
movsb
inc
inc
loop
mov
in
int
sarb
outsb
fidivs
jnp
ss
stc
push
inc
out
pop
filds
mov
sbb
cld
pop
mov
aaa
jno
ja
sbb
scas
jp
mov
lahf
hlt
inc
sub
pop
push
aad
sbb
cmp
xchg
ret
ja
mov
lret
and
hlt
mov
or
mov
mov
pusha
mov
mov
inc
rcl
xlat
lret
cltd
xor
mov
sbb
cmpsb
daa
lret
cwtl
test
loop
jge
mov
push
push
push
sbb
outsl
ret
push
std
aam
jle
push
lods
loop
xor
add
and
ret
jmp
andl
adc
sar
lcall
jb
pushf
gs
xchg
push
lea
pop
and
xchg
popf
mov
gs
loope
xor
cli
xlat
test
ja
rcll
pop
iret
ds
cwtl
mov
inc
adc
stos
aaa
popa
subl
mov
sahf
jns
lds
cli
mov
testl
out
push
shlb
loope
lret
mov
mov
mov
push
adc
movsb
lret
sbb
inc
xor
push
data16
xor
jb
push
mov
ljmp
mov
xlat
push
repnz
sbb
inc
push
outsb
sub
out
shrl
test
movsb
rorl
cmp
sub
push
cltd
dec
lahf
sahf
pop
mov
sub
daa
or
jns
rcll
xor
adc
call
push
in
fldl
xor
push
test
or
jbe
fbstp
call
fdivr
cli
mov
push
jmp
dec
jae
pop
sbb
outsb
ret
sbb
mov
clc
mov
aas
out
mov
pushf
pushf
or
lods
cmpsb
cld
mov
mov
dec
sbbl
stc
subl
pushf
aad
pop
sub
mov
sbbb
popa
jb
iret
inc
pushf
outsl
mov
scas
cli
daa
roll
jbe
sbb
lds
repnz
adc
lahf
shl
and
adc
mov
pop
lahf
mov
xlat
arpl
mov
inc
push
add
out
jecxz
pop
push
arpl
das
out
in
loopne
fdivs
sti
mov
call
test
jnp
nop
pop
add
les
imul
jl
andl
mov
pop
arpl
jl
inc
adc
orb
xchg
mov
or
mov
mov
out
test
std
mulb
pop
xchg
xor
xchg
hlt
loopne
mov
sub
push
nop
addr16
push
dec
mov
arpl
ljmp
mov
xchg
adc
pop
rorl
clc
mov
mov
loop
and
push
jmp
push
test
fs
inc
xor
or
ds
shufps
lods
movsl
popa
pop
xchg
out
lahf
mov
clc
shlb
jo
in
sbb
push
hlt
in
arpl
lods
jne
inc
cmp
sbb
cld
pop
mov
jle
add
push
pop
mov
lods
mov
cmp
out
ljmp
rorb
in
loope
das
int3
stos
in
mov
les
andl
je
lcall
aas
outsb
xor
push
or
movl
mov
in
adc
sub
sbb
cs
cli
rorl
rcrl
xchg
inc
mov
mov
enter
adc
outsl
scas
push
std
movsb
mov
loope
mov
sbb
push
dec
andl
test
ljmp
fcoml
dec
int3
sbb
inc
sti
les
lock
dec
jle
rorb
lret
test
sub
outsb
stc
sub
aad
xchg
bound
mov
gs
in
jnp
mov
rolb
scas
push
repnz
jnp
adcl
mov
ret
je
es
add
fadds
sarl
rolb
out
mov
push
repnz
daa
stos
jg
andb
add
sub
sti
fs
fsts
mov
sbb
mov
movsb
sub
fistps
jb
sub
push
lret
cmpsb
xor
add
or
aam
test
ja
xor
add
sbb
es
fwait
push
xchg
mov
hlt
push
mov
xlat
mov
test
dec
push
or
push
sub
outsl
lcall
into
mov
mov
mov
sahf
loope
bound
add
adcl
mov
sbb
sub
jg
mov
je
into
cmpsl
sub
xor
cli
lea
add
jae
and
mov
out
jne,pn
insl
sub
jecxz
pushf
cltd
jns
cmp
paddd
ds
cwtl
push
push
mov
mov
loopne
lods
fidivrs
test
jbe
int
add
nop
jns
into
push
dec
push
xor
ret
pop
insl
jecxz
ficompl
add
push
sub
push
daa
or
jo
add
cmpl
inc
adc
jecxz
ds
repz
insl
scas
jp
aas
int3
jp
pop
jg
cmc
mov
adc
loopne
ret
sbb
adc
movsb
mov
push
mov
lods
and
dec
sub
cwtl
mov
test
xor
adc
jno
jcxz
inc
clc
fs
jg
lret
add
clc
test
jae
pop
push
pop
loop
gs
bound
dec
pushf
js
mov
adc
shlb
dec
or
lcall
mov
sub
enter
out
pop
or
notb
push
scas
cmpsb
xchg
sub
les
shll
cwtl
leave
sbbb
sbb
jb
jge
ss
arpl
jns
insb
pop
ds
xor
and
imul
cld
fists
mov
mov
lods
int3
fnstcw
leave
les
xor
or
sbb
out
push
adc
jns
cli
int
lods
sub
lea
push
mov
outsb
pop
pop
adc
jo
call
negl
pop
test
imul
sbb
hlt
lods
insl
jb
cli
and
icebp
outsl
ret
jle
ds
cmc
scas
mov
pop
imul
movb
test
mov
ja
push
push
aaa
test
xor
dec
ss
pop
adc
jp
ret
es
mov
test
inc
test
pop
jne
jle
xchg
dec
mov
jbe
mov
rolb
icebp
fnstsw
push
negb
pop
xchg
adcb
push
sub
mov
nop
mov
repnz
mov
lods
mov
xor
rorb
cmc
lds
adc
mov
cmc
dec
repnz
xchg
mov
aad
and
xor
fwait
les
and
mov
pop
jg
inc
jmp
fdivs
test
fsubrl
sub
dec
push
pop
repz
xor
lret
bound
inc
roll
clc
subl
inc
mov
add
jne
push
shr
cmpsb
aam
sub
push
cmpsl
inc
lahf
cmpsl
jns
mov
mov
mov
scas
mov
sbb
std
cmp
inc
push
push
ret
xor
mov
pop
outsl
in
jnp
daa
xor
add
jge
mov
push
jb,pn
xchg
pop
mov
fstpt
mov
int3
xchg
ret
dec
mov
repz
pop
outsl
or
sub
fwait
add
movsb
sbb
int
out
je
xchg
xchg
adc
repnz
sub
sub
mov
and
adc
scas
sbb
movsl
add
and
push
mov
outsl
pop
aad
pusha
arpl
adc
inc
imul
sub
lahf
pushf
sub
jae
push
xchg
pop
inc
scas
xchg
jmp
lods
jbe
add
popa
sub
sbb
mov
or
pop
cmp
sub
addr16
loope
out
lcall
pop
add
sbb
lods
mov
mov
pop
cs
mov
mov
test
pop
scas
cmp
ds
xor
int3
loopne
adc
imul
and
jmp
xor
fbstp
idivb
jl
stos
add
sbb
sti
and
popf
cltd
shrb
dec
testb
dec
mov
mov
xor
loope
clc
mov
ss
adc
pop
pop
fdiv
pop
test
pop
aas
adc
mov
js
and
xchg
ret
pop
mov
lock
inc
pop
inc
fmuls
add
add
das
cmp
sub
mov
mov
xor
jbe
dec
pusha
pop
xor
cmp
fldcw
ja
or
inc
clc
icebp
fidivrs
enter
mov
setle
xchg
les
push
add
int3
imul
aam
fcompl
sbb
and
out
inc
dec
std
ror
mov
roll
stos
cs
outsl
inc
std
add
push
and
dec
mov
adc
add
fidivrl
push
adc
jno
movsb
ret
into
pop
fldl
std
or
dec
out
cld
fisubs
lods
or
fnstsw
push
adc
mov
inc
sti
xor
cs
int3
les
das
scas
rorb
push
inc
or
dec
sbb
adc
movsb
cs
test
aas
pop
fidivs
or
sarb
in
sar
push
lahf
cwtl
jne
inc
in
test
xchg
cltd
sub
out
stos
cmpsl
add
fs
cmp
popf
fidivrs
js
jge
rol
dec
pop
aam
js
fcmovb
mov
mov
sub
int3
jno
mov
mov
shll
push
sarl
sub
xor
rcl
jae
rcrb
aam
push
negl
hlt
push
pop
dec
es
cltd
gs
sub
imul
hlt
inc
cli
inc
cmp
lret
pop
mov
mov
xchg
pop
ret
jb
stc
lret
mov
fdivl
add
dec
push
jg
push
int
sbbb
mov
les
out
sbb
ljmp
fisttpll
sbb
push
add
adc
or
and
addr16
jmp
dec
mov
or
jns
js
push
and
icebp
mov
mov
jbe
fs
cli
repnz
pop
stos
test
xchg
xchg
lock
ds
or
pop
daa
outsb
jmp
pop
inc
xor
lds
xorps
insl
test
jo
jb
cmp
cmp
xchg
aas
pop
in
fiadds
icebp
stc
sbb
jns
xorl
icebp
sbb
jecxz
jno
psrlw
sub
mov
cmp
pusha
fisubrl
cltd
push
jbe
movsl
mov
in
lds
adc
xchg
into
movswl
stc
out
push
mov
sub
popl
test
cmp
std
sbb
aas
mov
shlb
dec
pop
dec
into
gs
fdivl
jl
adc
mov
push
lahf
pop
cmp
es
pop
jecxz
imul
cli
sbb
fsubr
mov
push
fwait
dec
push
and
sub
xchg
jp
lods
dec
or
push
sub
in
fmull
popf
leave
or
into
insl
jnp
pop
loop
xchg
ret
cmp
adc
jne
cs
add
cwtl
rclb
adc
cld
shl
mov
jne
pop
sub
xor
addr16
xor
cmp
fs
pop
mov
push
test
xchg
mov
xor
inc
nop
aam
out
cmp
adc
loopne
xchg
sbb
xchg
jo
sti
stos
shrb
adcl
cmp
imul
and
fwait
dec
xor
cltd
adc
add
das
mov
xchg
inc
jne
pop
into
repz
in
inc
add
in
movsl
repz
popf
shll
cwtl
shrb
shll
push
test
sbb
fisubl
cli
cmp
dec
jno
or
pop
cmp
xor
stc
cmp
sbb
lcall
cmp
movsl
pop
fmul
adc
fldt
popf
push
test
out
sub
fs
sbb
out
jbe
or
xchg
sub
adcl
ret
xorl
push
xchg
adc
inc
adc
push
lea
outsb
push
inc
sbb
mov
dec
jns
idivb
adc
cmp
jmp
or
xor
jge
dec
mov
mov
sbb
insb
pop
sbb
lods
repnz
lcall
bound
inc
sub
mov
les
pop
insb
pop
xchg
xor
roll
loop
pop
dec
and
xor
inc
mov
aaa
jecxz
std
out
push
lock
xchg
es
add
sub
enter
movsl
sub
stos
lahf
push
pop
sar
sub
pusha
pop
sbb
pop
pop
ja
jmp
push
roll
loopne
in
dec
roll
icebp
pusha
ret
cmp
stos
cmp
sbb
mov
push
test
add
inc
jns
jl
mov
loopne
divl
cmp
xor
call
loopne
mov
shlb
std
mov
sbb
jo
pop
mov
fsts
cmp
adc
ret
adc
es
and
lea
inc
mov
mov
sub
lret
loope
lods
push
loope
adc
out
aam
mov
aas
pop
data16
xor
xchg
sbb
mov
sbb
lahf
push
adc
jp
xor
stc
ret
ljmp
mov
mov
enter
xchg
insb
add
das
jp
test
cmp
cmp
addb
adc
sub
dec
aad
cmc
dec
add
fcmovnb
cmp
imul
notb
fdivl
pop
cwtl
das
fcomps
or
push
repz
cmp
sti
mov
mov
fabs
sbb
adc
xchg
pop
pusha
or
das
xchg
insl
and
pop
xor
mov
rcll
xor
push
mov
inc
jl
lds
inc
aad
mov
xor
aas
pop
dec
insl
add
pop
sbb
mov
or
call
push
rclb
or
adc
cmp
mov
jnp
dec
fimuls
lret
or
jo
jecxz
daa
ds
bound
pop
mov
dec
adc
pop
into
push
push
stos
mov
xchg
push
xor
xor
pop
jnp
sub
fildll
sub
ret
mov
out
mov
frstor
pop
jge
sbb
test
mov
dec
cmpsl
mov
jmp
or
rorb
js
add
push
cmpsl
xor
pop
jb
hlt
pop
or
and
hlt
ret
mov
add
dec
arpl
jb
in
addl
iret
out
lahf
aaa
jns
mov
and
imul
jecxz
jno
or
mov
outsl
dec
loopne
add
cmc
out
movsl
pop
out
jmp
fidivrl
sub
mov
leave
adc
jp
and
cld
xchg
pop
ret
dec
or
add
add
xor
xchg
fwait
pushf
out
jae
inc
ss
out
push
adc
imul
imul
ret
xchg
mov
cmp
outsl
arpl
add
daa
adc
mov
push
pop
jl
jecxz
outsb
cld
xchg
in
iret
fisttpl
mov
lcall
add
inc
imul
cs
rcrl
inc
adc
mov
lods
jmp
pop
pop
pop
in
or
stos
add
push
push
mov
dec
pop
loop
sbb
ja
aam
cld
mov
test
sub
unpcklps
mov
sbb
shlb
sbb
push
sub
sbb
insl
jbe
dec
and
dec
mov
lcall
cld
mov
pop
pop
mov
fistpll
nop
push
stos
cmpsl
popf
lret
clc
dec
push
in
gs
out
dec
adc
or
movsb
inc
ss
mov
rcll
adc
loop
xchg
xchg
out
nop
es
xchg
addr16
add
mov
add
aaa
xor
js
mov
jp
xchg
aas
aam
div
out
neg
sbb
jne
adc
xchg
sar
jmp
sub
clc
xchg
out
sbb
out
lahf
daa
dec
lret
push
cmpsb
out
and
mov
or
test
scas
adc
popl
sub
fxch
and
pop
dec
mov
xor
cld
cmp
mov
pop
out
cmpsl
inc
ljmpw
sbb
cmp
or
fidivs
in
aad
ja
ror
xchg
sar
pop
add
inc
jae
and
cli
mov
cmp
lods
pop
inc
and
test
in
lods
jecxz
and
ss
test
sub
les
movsl
rolb
arpl
repnz
lods
ret
imul
inc
jnp
add
andb
or
adc
mov
int3
das
pusha
fs
in
imul
mov
sbb
ficoms
ljmp
fs
jl
outsl
jmp
out
mov
jo
rorl
ficomps
insl
xchg
push
movsl
xchg
fs
mov
sbb
in
inc
inc
dec
or
xchg
sub
pop
jne
fidivrl
sti
jbe
mov
mov
popa
fstl
iret
stc
cld
out
std
sub
and
fsubrs
jge
sub
cvtps2pd
push
jb
es
adc
push
add
fbld
jmp
aad
mov
int
push
hlt
add
or
lcall
pop
mov
sub
pop
popa
scas
test
inc
testb
pushf
sbb
xchg
in
xchg
adc
sarl
pop
dec
and
push
sbbl
pop
pop
lods
ret
ljmp
outsl
jnp
jecxz
dec
push
aam
and
dec
in
call
imul
mov
mov
dec
icebp
rolb
inc
sbb
push
sub
mov
repz
xchg
ja
stos
pop
cmc
sbb
adc
ret
fisubl
into
xchg
lods
enter
pusha
outsl
mov
dec
fwait
ret
fnstcw
addr16
push
lods
imul
cli
push
xchg
mov
aam
iret
or
aaa
iret
or
sub
into
sub
std
and
loopne
test
sbb
mov
add
mov
sti
and
and
xor
mov
push
inc
in
push
cmpsl
loopne
add
pop
enter
add
scas
scas
sub
aad
test
rclb
jge
imul
out
jnp
sbb
call
int3
int3
imul
cltd
not
mov
and
inc
imul
mov
dec
lds
sub
es
xor
cmp
or
add
pop
lret
jbe
fildl
lods
push
push
jbe
push
ljmp
xchg
mov
pusha
adc
addb
pop
cmp
daa
mov
stos
fcmovb
or
sbb
add
iret
sbb
popf
repz
pop
jne
cwtl
mov
sub
mov
and
lods
cmp
cmpb
loopne
daa
fwait
mov
mov
lods
dec
push
mov
addr16
outsb
pop
mov
iret
dec
lds
mov
imul
scas
sub
mov
pop
jno
mov
mov
sbbl
lds
dec
hlt
push
mov
test
xchg
fsubl
push
xor
mov
enter
mov
inc
mov
das
and
xor
ja
add
lret
ljmp
lock
sub
pushf
push
lea
rorl
cmp
cmp
xchg
xor
mov
xor
xlat
adc
xchg
fsts
xor
xor
jbe
pop
and
ja
jnp
or
jne
inc
leave
cmpb
mov
adc
mov
lret
or
repz
dec
xchg
test
add
jb
fmull
mov
mov
cmpsl
add
movsb
enter
icebp
mov
pusha
and
push
lcall
out
mov
test
mov
push
cmp
test
or
pop
inc
sbb
cmp
mov
mov
jns
test
xchg
fwait
sbb
std
popa
lcall
pop
or
mov
loopne
cmc
sbb
repnz
jns
dec
and
or
xor
jae
mov
push
mov
push
lret
mov
and
inc
stos
pop
or
jmp
pop
pop
imul
inc
or
mov
pop
jle
pop
stos
xlat
cmpsl
mov
inc
loop
dec
cmpsb
iret
data16
mov
jmp
mov
cvttps2pi
addl
insl
pushf
test
inc
push
push
scas
cmpsb
pop
xchg
mov
imul
sbb
mov
popa
and
ficoms
or
call
sarl
and
xchg
cmpb
arpl
js
lods
or
mov
cmp
iret
push
sbb
sub
pop
mov
cmc
jge
cmp
cmpsb
aaa
push
insb
mov
mov
mov
test
ret
mov
call
mov
fs
xchg
loop
cmp
inc
stos
sbb
pop
jnp
ss
test
movsb
loopne
aaa
and
xor
sub
xchg
hlt
xchg
data16
adc
add
xor
mov
sti
jle
adc
cmp
shlb
xor
mov
std
stos
add
fwait
dec
mov
cmp
in
int
adc
mov
xchg
out
lods
fmull
cmpsl
jmp
mov
inc
xor
movsl
inc
lcall
xchg
mov
aad
pushf
mov
testb
pop
jb
cs
jb
js
add
imul
outsl
mov
pop
inc
loop
sub
mov
sbb
mov
push
sbb
pop
jecxz
push
jp
jb
xchg
xchg
imull
fwait
push
call
cmp
push
jge
push
jnp
mov
dec
xchg
outsl
xchg
and
dec
mov
sub
pop
jns
mov
dec
movsl
outsb
jp
sub
inc
ds
aaa
in
sbb
sbb
add
testb
bnd
ljmp
xor
inc
xor
xor
out
sbb
out
push
mov
outsl
cmp
into
or
adc
mov
aaa
outsl
fcoml
sbb
and
out
or
popf
pop
rol
mov
imul
arpl
jge
jecxz
mov
iret
push
sub
jmp
and
xor
lds
pop
inc
leave
lcall
scas
mov
push
fucom
sti
dec
dec
stos
fistl
fsubs
out
inc
adc
push
cli
cmp
test
jg
loop
or
mov
dec
inc
movsl
push
xchg
dec
xchg
jmp
jb
in
dec
mov
jmp
movsl
inc
notl
arpl
out
mov
mov
ljmp
xor
mov
pminub
and
sbb
cltd
cmpl
pop
push
sbb
in
jl
std
and
add
lock
dec
scas
pop
cli
jmp
cli
mov
dec
aaa
mov
adc
inc
sub
stos
or
xor
rcr
gs
daa
int
repz
mov
roll
fs
add
and
fs
nop
test
daa
int3
dec
adc
sbbl
es
push
dec
jp
push
mov
sub
sbb
into
les
sti
sti
movsl
jmp
and
int
mov
ljmp
rcrb
jns
call
ret
sbb
outsb
ret
movsl
in
cmp
fsubrp
scas
adc
movsb
enter
in
mov
mov
out
sub
pushw
scas
or
dec
inc
stos
movsb
call
sub
mov
dec
xor
test
pushf
pop
sti
jbe
jb
and
and
add
inc
push
std
push
add
jmp
pop
cmpsb
mov
xchg
sub
lcall
rcr
dec
addr16
lods
cmp
aam
cmp
adc
add
andl
add
sbb
aad
mov
cltd
ljmp
aaa
xchg
mov
pop
enter
sbb
jge
pop
lret
shlb
icebp
adc
add
cmpl
adc
mov
and
sbb
xchg
inc
adc
push
in
clc
js
in
in
andb
inc
push
cli
mov
mov
sub
add
inc
and
scas
push
lods
fiaddl
mov
sub
fsubs
push
mov
outsb
pop
fisttpll
xor
add
mov
cmp
test
loopnew
leave
xchg
pusha
cli
xchg
data16
xchg
add
rorb
lret
xor
adc
shll
inc
cmpb
mov
in
pop
iret
inc
les
out
imul
push
in
outsb
dec
aas
dec
mov
xchg
or
fs
sub
sbb
dec
int
cmp
sbb
mov
clc
or
scas
mov
lret
cmp
testb
in
mov
push
dec
call
es
fistps
pop
xchg
mov
jg
aas
fsubrs
fstpl
inc
jo
repz
inc
mov
pop
pushl
pusha
outsl
repz
in
shrb
push
ds
pop
inc
stos
jns
jmp
mov
cmp
adc
lret
xchg
xor
sarl
and
shlb
arpl
mov
sbb
cwtl
cmp
das
sub
sbb
pusha
or
sbbl
dec
addb
fmulp
shrl
fiaddl
jnp
sarb
dec
adc
aas
clc
lahf
jle
in
or
sub
lock
popa
jp
hlt
mov
jbe
ret
mov
lret
bound
ja
push
or
div
or
mov
repnz
push
pop
pop
inc
data16
pusha
pop
imul
js
sti
cld
out
or
test
addb
repz
and
jp
lcall
ss
cmp
fwait
and
xor
push
xchg
mov
mov
imul
data16
lcall
lds
ret
sub
add
add
test
insb
inc
sub
sbb
fiaddl
sub
ja
dec
in
lahf
leave
fldenv
sbb
add
sbb
fistpl
pushf
push
ja
js
pop
sub
int3
adc
les
add
and
pop
adc
and
inc
repz
subl
jmp
sbb
aas
lcall
fsubrs
xor
std
fimuls
subb
repz
lret
mov
repz
cltd
lods
inc
sarb
outsl
xor
cmp
or
push
xlat
xor
mov
test
jns
mov
mov
xchg
lea
jb
movsl
sub
enter
push
mov
mov
mov
jo
insb
lock
push
add
loope
js
cld
ficoms
pop
or
ljmp
scas
cmpsb
mov
fsubrs
out
std
scas
rcl
lods
inc
aad
ds
mov
jp
inc
push
jp
stc
ret
rol
mov
fwait
mov
xchg
movsl
sub
adc
std
mov
sub
inc
int
dec
jmp
out
loop
pop
xchg
mov
pop
or
jl
push
mov
adc
and
xor
inc
push
sbb
dec
loope
test
or
lcall
mov
push
mov
mov
sti
cmpl
mov
or
into
or
in
mov
out
mov
incl
mov
lret
xor
sub
hlt
in
jecxz
sbb
xor
jbe
sbb
pop
inc
addr16
popf
loope
leave
lret
push
cs
jp
push
cmp
push
jmp
aad
add
lcall
xchg
jns
adc
mov
mov
dec
dec
inc
int3
cltd
pop
adc
dec
xor
int3
pop
out
les
or
inc
pusha
ss
mov
imul
adc
test
lods
and
les
shrl
lret
and
pop
add
lcall
ffree
jmp
in
cli
xchg
lcall
imul
dec
mov
call
xor
or
cmp
mov
mov
lock
xor
or
and
jnp
xchg
inc
inc
mov
not
sti
sbb
mov
es
mov
fscale
or
test
jo
scas
jae
cwtl
jnp
sub
fs
jne
inc
repz
stos
incl
hlt
inc
cs
arpl
js
add
fidivl
and
jnp
es
loopne
je
lret
jmp
dec
out
leave
pop
fs
jae
or
clc
cmp
sti
inc
cmp
into
or
sub
lret
scas
add
mov
cmpsb
out
cmpsl
not
jae
sub
jb
mov
cwtl
xchg
sahf
push
movsl
cmc
mov
rcll
dec
aaa
imul
fdivl
and
xor
adc
mov
rcrl
xchg
into
xor
stos
aas
mov
ror
dec
std
jo
cmp
mov
cmp
fs
ret
fcoml
pop
jb
test
cmp
xor
inc
cmp
stc
push
out
cmp
jmp
icebp
adc
lahf
shlb
cmpsl
xchg
and
cli
pop
dec
pop
sub
xchg
inc
movsb
mov
inc
mul
pop
pop
cltd
inc
out
rclb
in
lods
hlt
jmp
lcall
daa
mov
fnstenv
mov
mov
jl
fsubrl
repnz
andb
shll
data16
mov
leave
inc
enter
out
scas
jl
inc
gs
mov
cmpsb
or
inc
push
xor
add
sub
fisttps
in
push
mov
xchg
dec
pop
test
xor
xchg
mov
cmp
adc
add
or
sbb
xchg
sbb
sbb
aad
divps
hlt
cld
mov
ret
sbb
sub
pop
daa
jle
adcl
aaa
mov
pop
jecxz
out
jb
xchg
fistps
dec
or
fsubr
jge
cmpsl
mov
ss
lahf
cld
pop
inc
pop
mov
iret
les
xchg
dec
adc
fs
dec
dec
xchg
dec
shrl
mov
xchg
outsb
ja
test
sarl
cmp
xor
sub
dec
out
lock
jae
in
insb
loope
xorb
rorb
insb
test
sbb
inc
in
and
mov
or
shll
fnstenv
int3
push
pusha
movsb
add
es
or
mov
push
jno
mov
push
and
lods
dec
in
push
iret
pop
nop
or
inc
mov
and
shl
cltd
xchg
or
in
outsb
mov
pop
lahf
xchg
aad
icebp
cmp
popa
out
jbe
jge
out
cmp
test
cmpsb
inc
pop
fisttpll
stc
scas
aam
push
push
pop
xorb
or
movsl
push
sbb
fldenv
fs
mov
or
insl
inc
adc
sbb
addl
sub
mov
stc
das
in
popf
lret
inc
push
jnp
aad
or
ss
arpl
and
inc
mov
sbbl
mov
dec
mov
arpl
loop
push
fidivrl
xor
outsb
lods
cmpsl
fs
incl
add
dec
lea
mov
aaa
sar
pop
mov
pop
out
add
jae
pop
rcll
popf
cmp
out
dec
sarb
xor
push
andb
aaa
sbb
sbb
inc
dec
pop
shll
cli
data16
shlb
xchg
pop
xchg
pop
loop
mov
jns
push
xor
mov
xchg
movsb
xlat
dec
fidivs
rorl
sahf
sbb
xor
dec
gs
pusha
pop
es
in
dec
mov
mov
stos
or
frstor
mov
and
lods
dec
pop
or
stos
out
daa
mov
pushf
dec
in
aas
shll
mov
sbb
jo
test
pop
cmp
movsb
out
add
int3
push
sub
sub
mov
dec
sbb
cmp
jae
sub
fdivs
inc
push
popa
loopne
inc
jecxz
xchg
pusha
fsubr
mov
and
sahf
cmpsb
add
pop
inc
dec
inc
xchg
or
ja,pt
cmp
sub
sub
and
stos
clc
mov
xlat
pop
pop
out
je
out
and
push
add
sbb
sbb
jno
or
xchg
aam
in
iret
xchg
fimull
inc
mov
pop
mov
jp
dec
push
mov
jo
ljmp
mov
mov
mov
jg
mov
and
inc
pop
fs
shl
lcall
std
or
imul
nop
fstl
sahf
jno
aaa
adc
mov
xlat
aas
repnz
push
adc
cwtl
mul
dec
out
push
mov
adcl
lret
jp
push
or
cmp
sub
mov
adc
adcb
inc
scas
xor
lds
stos
lahf
imul
cmpsb
jg
inc
leave
lcallw
add
in
sahf
or
sub
inc
mov
in
pop
aas
mov
out
pop
bound
aad
hlt
pand
add
sti
mov
xor
jg
imul
ret
sub
cmpsl
sbb
mov
pop
icebp
sbb
xchg
xor
js
or
pop
iret
lods
mov
mov
cmc
inc
and
add
int3
jp
mulb
and
cwtl
pop
lock
pop
shrb
out
lret
loope
add
ret
ret
inc
xlat
popf
daa
mov
jmp
or
push
imul
jle
sub
ljmp
sub
sbb
decl
jl
int3
lahf
ljmp
xchg
and
sub
cmc
sbb
add
loopne
jmp
int3
xchg
add
iret
xor
in
leave
into
sub
jb
mov
lahf
js,pn
mov
ret
or
or
xchg
inc
mov
sub
fsubl
mov
lods
xchg
js
or
nop
and
mov
in
xchg
mov
std
leave
mov
mov
and
call
fcoml
imul
lret
inc
arpl
adc
in
pop
gs
adc
adc
pop
xchg
push
push
xchg
fcmovb
sbb
sahf
adcb
cmp
idivl
and
lods
outsb
mov
xlat
cmp
js
orl
mov
cmp
adc
std
jecxz
or
fisttpll
fisubs
mov
scas
pop
out
mov
negb
xchg
inc
xor
inc
lret
daa
pop
jle
out
fcmovb
icebp
test
pop
mov
ja
inc
subb
in
or
bound
icebp
dec
ss
xchg
push
lea
jmp
sub
mov
hlt
pop
lcall
sub
add
lret
sarb
addl
or
lock
mov
scas
sti
out
pxor
add
adc
xor
cmp
and
mov
jno
cwtl
adc
sbb
in
fucom
add
xchg
shlb
adc
add
xor
mov
cmpb
repz
adc
loop
ja
pop
xor
leave
and
inc
inc
or
jg
test
test
adc
push
movb
jo
xor
add
dec
ja
mulps
cli
js
lock
scas
inc
xchg
out
adc
or
and
fwait
insl
test
stos
lahf
sbb
jnp
aam
scas
ljmp
loop
xor
sahf
adc
loopne
dec
push
imul
inc
cmp
out
outsb
test
cmovno
push
and
pop
out
mov
push
or
add
pop
mov
ljmp
mov
rcr
scas
lcall
sbb
flds
fcom
int
pop
mov
lcall
insb
pop
bnd
pop
jg
pop
mov
mov
mov
in
mov
inc
out
pop
dec
jmp
mov
loop
xor
pop
pop
dec
jns
mov
mov
hlt
inc
ret
xchg
aad
pop
in
adc
lods
stos
mov
push
sbb
insl
loop
mov
xchg
mov
mov
fnstenv
and
mov
xor
aas
cmc
jno
out
in
xor
movsl
cmovno
pop
inc
stos
inc
sub
mov
movsl
and
sub
lock
dec
xchg
sub
popa
setl
mov
add
pusha
pop
or
stc
scas
mov
test
mov
sahf
popa
repz
cmpsl
mov
cmp
xchg
push
adc
jne
andnps
mov
mov
fs
add
sbb
mov
cmpl
inc
or
sbb
pop
cmpsb
xchg
sub
push
and
inc
repnz
jg
clc
pop
jecxz
in
fistpl
aad
les
cmp
and
jmp
mov
int
ljmp
pusha
jmp
pusha
xchg
cli
outsl
mov
pop
daa
mov
pop
out
test
inc
inc
scas
dec
sub
mov
fidivs
and
out
movsl
inc
cmp
mov
jnp
or
sbb
inc
adc
mov
fistps
in
sub
call
aaa
repz
sbb
mov
add
ds
iret
pop
jnp
adc
arpl
jnp
sbb
adc
inc
lock
dec
inc
sahf
ljmp
ds
cmp
ljmp
test
imul
jb
sub
out
mov
pushf
incb
into
jbe
jmp
movsl
xor
mov
sti
mov
pop
out
in
mov
dec
mov
mov
fistl
lahf
jns
enter
push
iret
xchg
mov
or
orl
imul
mov
ja
mov
inc
nop
sub
lock
out
aam
xor
sbbb
push
xor
mov
mov
inc
faddp
xor
xchg
sar
jg
and
cli
mov
test
mov
pop
call
cmpsb
push
and
and
stos
sar
insb
test
push
scas
pop
dec
mov
and
sbb
inc
outsb
cmp
stos
add
enter
ss
xchg
push
push
stc
push
ljmp
xchg
add
aam
mov
jne
sbb
imulb
push
cmp
mov
push
aam
in
sbb
mov
int3
idiv
fnstenv
or
flds
pop
out
imul
cmpsl
and
inc
test
push
mov
movsl
jmp
adc
insl
cmp
mov
sbb
mov
ss
add
xchg
push
xchg
mov
cltd
repz
and
or
gs
inc
rcrl
popa
nop
xorl
add
adc
rcrl
sbb
lcall
cmp
dec
repz
pop
push
lcall
cmp
adc
insb
xchg
in
mov
push
sahf
mov
mov
dec
push
push
hlt
adc
or
pop
ret
sub
cmpsb
jns
inc
std
popf
cld
mov
data16
mov
sub
inc
mov
pop
lcall
push
movsb
repz
les
out
mov
cwtl
push
pop
xchg
std
lret
xor
sub
cmpsl
mov
movsl
mov
repz
repnz
sub
ficoms
enter
sahf
mov
stos
outsb
jmp
scas
aaa
push
test
sbb
iret
mov
sbb
sbb
imul
pop
sub
jnp
cmpsb
mov
dec
jle
leave
mov
in
push
sub
jecxz
add
shll
inc
mov
pop
jp
rclb
add
dec
ss
clc
sbb
dec
pop
imul
aam
cltd
aam
push
hlt
inc
and
jbe
cld
ficoml
push
fsubr
sbbl
movsb
pop
pop
sub
adc
movsl
xor
lahf
repz
stos
cmpl
mov
mov
inc
xchg
cmp
push
xchg
push
out
lret
cmpsl
fnstcw
movsl
sbb
imul
xor
dec
js
sbb
int
add
cld
cmp
fs
pop
jle
or
push
fcmovnu
lea
push
cmpsb
pop
ss
jmp
mov
cmp
add
pop
stos
repz
mov
ret
mov
cs
rolb
sbb
mov
and
add
mov
aad
jno
icebp
and
pop
inc
mov
mov
and
scas
pop
jl
push
mov
jnp
popf
pop
lds
add
es
cmpsb
enter
mov
mov
push
or
addr16
cmpsl
das
loope
mov
fsubp
aas
into
xlat
aam
xor
mov
es
fldenv
adc
mov
jb
shll
and
or
std
jl
add
jge
test
fsubrl
in
rorl
stc
repnz
push
das
stc
pop
dec
mov
jnp
xchg
sub
lock
dec
fs
into
enter
enter
daa
pop
das
or
xor
or
out
je
lea
rorb
out
or
pop
and
imul
push
je
add
call
sbb
fsubr
fxch
push
xchg
jecxz
mov
pop
or
bound
enter
sbb
push
xchg
dec
adc
xchg
cmp
inc
cmp
inc
shll
mov
pop
imul
lds
fisubs
mov
xor
sub
push
mov
xchg
xor
cli
jnp
bound
push
shrl
adc
add
loop
xor
test
mov
lock
divb
test
xor
or
jg
cwtl
xchg
mov
mov
lock
push
icebp
or
int
jne
int3
push
notb
lret
push
mov
or
push
or
or
ret
pop
or
imul
push
push
or
cld
aam
or
aaa
xor
add
pop
cs
out
fwait
jb
roll
sbb
loope
sbb
ret
fiaddl
dec
into
inc
mov
shll
mov
mov
pop
mov
or
push
stc
jb
pop
mov
inc
popa
sarb
sub
mov
movsl
cmp
mov
ret
inc
rsqrtps
nop
jp
addr16
xor
inc
mov
mov
cli
or
sbb
add
xlat
adc
in
lods
gs
dec
xchg
jae
jae
jo
mov
sub
mov
loope
cs
lods
sbb
nop
rclb
push
push
xchg
push
lret
aas
jl,pt
mov
push
flds
das
or
pushf
enter
mov
mov
leave
mov
sti
jae
sbb
pop
inc
xchg
xor
lods
cmp
je
dec
pop
dec
repz
and
lcall
fwait
daa
leave
mov
js
mov
push
lahf
sbb
gs
mov
aad
loop
notl
inc
mov
sub
ret
ret
mov
mov
dec
xor
out
jp
xchg
repz
scas
dec
rcl
in
js
push
mov
sbb
or
sub
lds
add
in
out
fadd
ret
jb
fnstcw
hlt
addr16
or
cmp
fldenv
lahf
scas
mov
xchg
adc
insl
add
jbe
icebp
or
js
test
mov
ds
sbb
pop
pop
mov
lods
pop
mov
cmp
js
sub
push
stos
mov
fsubr
cmp
aam
lods
aad
or
mov
dec
je
orb
adc
fldl
call
imul
enter
scas
nop
out
sahf
cmp
push
mov
cli
out
movb
push
pop
imul
hlt
mov
inc
in
js
cmp
or
pop
jl
mov
insl
xchg
daa
mov
pop
cwtl
incl
not
xchg
xchg
scas
add
lods
outsb
or
adc
jge
into
inc
mov
jno
inc
sbb
lahf
arpl
or
test
xchg
insl
pop
orl
clc
dec
imul
adc
cmp
mov
and
add
test
ja
fsts
jle
mov
fistps
cmp
sub
cmpb
subl
je
hlt
mull
enter
imul
xor
jp
inc
out
aaa
lods
dec
fstpl
mov
xlat
popf
dec
mov
mov
push
jg
lea
into
jg
sarl
andb
push
shlb
xchg
or
xchg
fsub
lss
or
pop
sbb
mov
xor
dec
loopne
sbb
ret
stc
js
add
insl
push
jge
dec
fistl
es
lret
int
bound
into
xchg
jge
and
dec
fbstp
out
push
test
cltd
jmp
inc
mov
pop
lock
push
mov
and
xor
xor
sbb
mov
xchg
inc
lds
jno
inc
mov
xchg
push
jmp
cmpsb
xchg
add
push
test
repz
push
dec
sarl
sbb
jno
ja
icebp
or
or
xor
lock
mov
stos
orb
shl
inc
sbb
test
mov
push
out
add
sbbl
jns
inc
lret
testl
push
sbb
cmp
shll
mov
in
lock
xchg
push
es
push
jmp
ret
lea
divb
xlat
mov
fdivs
adc
pusha
mov
or
negl
sbb
jno
pop
mov
test
pop
ljmp
add
in
ljmp
shll
clc
int3
ljmp
lods
inc
push
enter
test
sbb
pop
xchg
enter
xchg
outsl
inc
or
or
nop
testb
mov
insl
push
lcall
add
adc
aaa
sub
jbe
jae
mov
cmp
or
push
add
pushf
insb
movsb
test
sahf
sbb
ja
test
dec
xchg
fcom
mov
icebp
ljmp
inc
int3
xchg
leave
mov
out
xor
mov
push
mov
cmp
pop
in
scas
stos
cmp
daa
dec
test
jmp
push
enter
or
shll
out
hlt
xor
cmp
aas
std
cmp
jge
pop
xchg
sub
lods
mov
movsb
loop
sahf
fndisi(8087
adc
push
mov
ror
dec
sub
dec
js
adc
mov
mov
call
in
mov
lar
add
and
rorl
hlt
loope
in
lret
dec
xor
shl
cld
in
repz
xor
fstp
add
and
les
sub
in
addb
mov
out
daa
push
addr16
mov
cmp
push
inc
pop
and
adc
jno
sbb
mov
scas
jg
pop
inc
xchg
mov
das
jo
mov
pop
ljmp
xchg
add
es
adc
in
icebp
inc
ret
ja
xchg
and
cmp
fnstsw
daa
cwtl
test
clc
out
imul
xor
xchg
jle
pop
sbbb
mov
testb
int
lcall
lahf
ss
mov
pop
fs
jnp
test
lds
sbbl
inc
negl
mov
mov
jle
cmpsl
inc
ficoms
add
xchg
cmpsb
mov
ficoml
jb
push
jnp
cmpsb
nop
cli
sbb
sub
movsl
movsl
sub
lods
fldl
inc
pop
dec
mov
loope
pop
xchg
stos
sbb
popa
mov
stos
ds
insb
cltd
add
mov
cmpsl
xor
dec
cmc
cmp
jge
push
jmp
and
cmp
cs
jae
sarl
popa
xchg
xchg
lret
icebp
gs
gs
std
ja
ljmp
ror
jle
inc
jmp
xchg
add
mov
leave
inc
int3
pop
sti
mov
js
orl
das
mov
mov
std
clc
jne
pushf
pop
adc
aas
mov
out
push
aam
mov
mov
pop
jg
dec
leave
out
mov
ss
add
enter
add
pop
dec
add
xor
mov
scas
aaa
aad
adc
inc
sarl
movsb
dec
mov
mov
dec
push
int3
cwtl
addl
arpl
std
loop
dec
push
es
fldt
js
scas
addr16
mov
adcl
mov
leave
inc
lock
jb
lods
adc
nop
rep
and
sbb
push
pusha
adcl
imull
incl
adc
mov
rorl
outsb
push
lcall
and
fwait
out
inc
lea
ret
dec
jns
push
or
jbe
jb
ret
int3
adc
int3
leave
rcr
shll
pop
jge
mov
repnz
xchg
mov
and
push
faddl
mov
or
pop
sbb
fsubr
aas
fstpt
dec
aad
xor
sbbb
push
notb
into
and
cmp
jae
adc
mov
repz
adc
popf
shll
xorb
xchg
call
ret
cmpsl
push
cltd
mov
std
push
lahf
or
repnz
lahf
sbb
iret
insl
jne
and
xchg
fimuls
add
mov
shll
push
aad
add
push
or
xchg
sti
push
test
ljmp
add
adc
addr16
inc
std
clc
xchg
cwtl
int3
mov
ret
scas
inc
ds
cmp
dec
fst
aad
sahf
dec
push
ds
pop
xchg
adc
fstpl
ds
push
sbb
sub
jmp
xor
nop
xchg
movsb
aad
mov
sbb
call
clc
repnz
jge
shrb
pop
sbb
inc
fildll
loope
xchg
loopne
and
mov
popa
mov
lcall
ds
iret
inc
sahf
lcall
dec
inc
pop
out
adc
fsts
dec
js
jl
or
in
mov
enter
push
idivb
jmp
or
push
jge
jmp
and
leave
cmp
cmp
jo
add
push
subl
lds
movsl
lret
jo
in
mov
mov
repnz
cwtl
jb
cmpb
stos
mov
lea
cmp
das
popf
daa
xchg
xor
sub
sub
lods
loop
aad
pop
mov
cmp
stos
pop
pop
inc
push
mov
in
xchg
test
mov
push
into
lret
jnp
mov
test
int
sti
fldl
add
or
aas
cmp
stos
rolb
stos
mov
xor
in
bound
orl
push
hlt
push
loopne
xchg
inc
pop
rorb
mov
mov
push
int3
mov
ss
sbb
leave
in
xchg
pushf
imul
xchg
out
jge
fcmovnb
rcl
cmp
inc
lret
mov
or
add
sbb
out
jae
dec
pop
mov
inc
mov
xchg
cli
add
and
loopne
js
stos
dec
jnp
add
cmpsb
hlt
mov
je
shrl
mov
subb
loop
pop
mov
xchg
ss
pushf
cltd
fidivs
int3
ret
jecxz
and
cmpsl
mov
fistpl
int
adc
jnp
ljmp
cmp
mov
pop
das
mov
xor
inc
sbb
ret
lds
mov
lods
or
or
dec
xchg
arpl
cltd
dec
mov
andb
fists
xabort
mov
or
or
scas
jle
xor
aaa
mov
popa
cld
mov
aad
cltd
cmpsl
movsl
movsl
std
addr16
cli
outsl
jae
das
leave
call
mov
xchg
lock
add
cmpsl
fcompl
ds
lods
test
imul
dec
scas
repnz
push
xor
and
jmp
sbb
mov
imul
imul
push
test
dec
stos
lcall
out
jle
pop
add
push
fsub
insb
fs
out
negb
orl
xor
out
push
out
fdivs
mov
jp
mov
fstpl
add
or
hlt
jmp
mov
gs
scas
iret
mov
sbb
icebp
loope
push
push
cmp
xchg
add
fcmovnu
adc
hlt
mov
push
adc
cwtl
aam
ffree
sbb
or
notb
adc
sub
xor
mov
or
out
push
push
dec
sahf
in
nop
jnp
push
outsb
cmp
mov
sub
jbe
inc
pop
arpl
pop
sbb
pop
cltd
call
mov
in
sub
popf
popf
data16
xchg
test
push
cmc
inc
xor
jl
xchg
popf
lret
leave
xchg
lods
stc
repnz
mov
mov
cmp
out
pop
adc
fcoms
xor
or
lock
adc
xchg
notb
pop
rolb
add
out
pusha
xor
scas
and
std
out
pop
jge
out
push
and
out
out
pushf
xor
mov
cltd
enter
add
dec
and
jno
scas
ret
out
ret
fiaddl
mov
sahf
push
sbb
inc
sar
jle
icebp
in
imul
cli
lret
loopne
pusha
lods
mov
call
mov
jne
mov
in
ljmp
popf
int3
jmp
je
out
adcb
gs
fcompl
stc
jne
test
sbb
mov
fsubl
pop
stos
mov
sbb
es
in
mov
add
lods
repnz
xor
data16
or
inc
mov
and
mov
nop
imul
pop
mov
xchg
cs
movsb
lods
jne
pop
out
movsl
add
xchg
es
add
test
xchg
lcall
and
adc
test
xchg
lcall
dec
lret
pop
movsb
fsubr
and
xor
int
sarb
pop
lea
mov
adc
cli
and
jp
aas
sbb
xor
fwait
shlb
es
xchg
outsl
and
dec
lret
loop
push
jecxz
sbb
xor
js
push
xchg
add
jle
push
xlat
adc
jmp
lods
jnp
insb
mov
sub
lret
inc
or
stc
sub
decl
mov
add
sub
mov
sub
js
fs
aam
xchg
movsl
test
push
jnp
push
push
fstl
shrl
push
jno
inc
push
pop
pop
pop
xchg
push
aad
into
pusha
or
adc
jg
ljmp
psrld
imul
sbb
mov
mov
adc
mov
inc
cmp
pushf
adc
adc
push
xor
stc
pop
fidivrl
scas
jo
jnp
rcl
or
clc
in
orb
push
insl
popl
pop
icebp
xchg
aam
lods
xor
and
push
sbb
and
loopne
lds
enter
cmp
shr
inc
out
jle
popa
push
adc
in
push
pushf
dec
pushf
mov
mov
or
dec
adc
dec
cmp
adc
adc
or
and
shl
lret
imul
dec
bnd
sysenter
subb
loop
rclb
and
ja
cld
mov
cwtl
jp
inc
jl
push
scas
daa
pop
ficomps
pop
inc
mov
mov
push
mov
xchg
dec
int3
cmpl
fldt
jmp
and
iret
xlat
fldcw
icebp
dec
dec
sbb
jnp
adc
lea
es
sbb
push
fcmovnu
mov
pop
cmp
cmpsb
test
jp
dec
cmpsb
mov
cli
pop
sbb
js
push
lods
mov
lds
mov
vpsrlq
cmp
addl
movsl
int
adc
mov
jne
lret
push
xchg
inc
xor
les
sbb
hlt
jb
addr16
stc
cltd
inc
lret
hlt
shll
add
out
xchg
jmp
jb
jp
js
movsl
jge
insb
sub
add
loop
push
outsl
nop
add
mov
add
sub
aam
xor
loope
mov
std
pop
dec
adc
aaa
jp
int3
outsl
inc
imull
loopne
andl
ja,pt
adc
adcb
imul
xchg
fsubs
pop
ljmp
out
rep
addr16
fbstp
into
xchg
pushf
xchg
mov
je
cs
mov
orb
dec
mov
data16
fdivl
and
jle
push
aad
push
loop
sub
icebp
data16
adc
scas
mov
jno
notb
and
inc
push
and
mov
sahf
hlt
push
insl
into
or
shrb
cltd
outsl
fdivs
dec
inc
scas
xlat
cmp
roll
push
cld
xor
pop
movl
cld
pop
add
lea
inc
shl
shrl
mov
pop
adc
stos
popa
addl
rolb
scas
idivl
dec
rol
aam
aas
cli
sub
gs
xlat
add
pop
pop
icebp
pushf
mov
inc
rorb
add
mov
shr
inc
cld
in
hlt
jmp
icebp
hlt
pop
pop
jmp
dec
popa
dec
inc
pop
or
icebp
bound
repz
stos
ret
jge
movsl
test
xchg
xchg
orl
pop
inc
and
shrl
fsubs
jo
mov
shlb
or
pop
mov
inc
or
inc
das
push
insb
inc
aam
rorb
rorl
aad
cltd
pop
clc
mov
movsb
fildl
xor
in
push
les
jns
aad
jge
cmc
add
mov
mov
cmp
push
loop
test
mov
nop
test
mov
push
jl
dec
xlat
push
xchg
test
xchg
jb
pop
and
fisttps
mov
sub
push
out
repnz
test
insl
int
pop
mov
mov
sub
test
loop
in
daa
fdivrl
fisubl
mov
ret
mov
stos
sub
seto
mov
js
push
gs
repz
inc
mov
sub
sbb
stc
sub
push
sub
imulb
pop
adc
inc
sub
mov
sbb
cmp
lea
lock
cmpsl
pop
jb
ds
call
push
jns
out
mov
push
xor
add
clc
and
dec
or
decl
shl
dec
add
mov
push
and
or
xor
add
jbe
pop
ds
xor
sub
dec
dec
notl
out
adc
rcll
icebp
outsb
cli
and
in
inc
ja
loop
pop
in
es
dec
mov
jae
add
pop
adc
pop
cld
aad
leave
imul
insb
mov
sub
sub
int
push
mov
sub
xchg
sub
into
add
mov
push
xlat
cmpsl
pusha
insl
pop
sbb
inc
adcl
in
and
ja
out
hlt
xchg
cmp
jnp
jecxz
xchg
js
cmp
mov
decl
sbbl
cld
loopne
cmp
inc
das
and
pop
lds
fsts
dec
sub
dec
push
mov
insb
outsb
mov
cmp
popf
sbb
mov
out
subb
fdivrs
stc
mov
cwtl
inc
jmp
out
push
adc
add
aaa
inc
int
gs
inc
sub
fcoml
les
jg
out
cmp
lods
out
mov
mov
sbb
in
cltd
cmpsl
ret
xorl
clc
cmp
push
sub
lret
sbb
pushf
cli
call
cmc
out
jl
mov
sub
mov
mov
push
rorb
subl
jae
xor
push
lahf
adc
xchg
popa
aaa
sbb
shrb
pop
xor
mov
mov
and
fisttpll
inc
fsubl
sti
out
movsl
ljmp
in
xchg
jmp
aam
repz
pop
lret
cmc
mov
movsb
lods
xchg
push
jns
mov
pop
add
pop
dec
push
nop
push
and
out
inc
inc
jno
push
clc
mov
ret
lock
movsb
iret
jno
dec
push
inc
sbb
fcomps
icebp
fs
lea
pop
shld
and
sub
scas
jns
notl
in
hlt
imul
mov
lret
jo
int3
sbb
insl
cmpsl
jnp
xchg
lea
rorb
jbe
and
or
inc
lahf
cmpsl
mov
xor
cmp
idiv
xor
mov
les
fisubs
stc
stos
xchg
or
sbb
lahf
sub
rorl
cmp
jbe
into
inc
pop
pop
pop
mov
sti
sahf
cmp
cmp
rclb
push
sbb
push
sub
jmp
xchg
mov
pop
jge
jge
in
pslld
in
cmpsb
addr16
pop
mov
cmpsb
or
sub
adc
dec
and
lods
or
inc
imul
or
shl
fwait
pop
dec
pop
mov
movsl
adc
inc
lock
out
push
pushf
inc
jecxz
or
xor
xchg
out
jl
loop
xchg
ja
hlt
ficoml
or
pop
iret
aas
adc
in
push
jo
imul
insl
or
std
imul
xchg
inc
push
xorl
and
lahf
lahf
hlt
cmp
and
in
mov
sbb
cwtl
adc
sub
sub
dec
cmp
pop
pop
mov
xchg
test
lar
jmp
xor
push
rolb
in
pop
lds
daa
not
stos
push
pusha
pop
daa
push
js
pop
loop,pn
dec
push
addb
into
pop
inc
into
inc
jle
into
jl
mov
pop
mov
and
xor
ljmp
iret
xchg
add
scas
or
dec
leave
or
xchg
cs
icebp
add
fnstenv
push
test
jns
lds
repz
rol
test
fwait
jbe
push
adc
mov
adc
inc
mov
xor
insb
ljmp
xor
es
sub
push
cli
jecxz
sarb
in
out
fnstenv
inc
test
je
int
jnp
cmp
pop
daa
dec
pushf
inc
xchg
in
push
ja
inc
lods
scas
fdivl
int3
xchg
enter
pusha
and
scas
xchg
jmp
fbld
cld
ret
mov
mov
adc
scas
mov
stc
cmpsl
call
jecxz
test
loop
out
inc
data16
xlat
fs
aam
or
pop
sbb
xor
mov
and
les
outsl
movzbl
sub
xchg
push
jecxz
lods
rorl
mov
cmp
in
mov
pop
imul
negb
adc
add
mov
lock
nop
mov
mov
aas
sbb
rcl
xchg
inc
or
dec
push
pop
adc
ss
add
inc
sbb
not
dec
mov
xor
dec
jb
jnp
jmp
rorl
fs
xchg
push
lret
sub
jecxz
in
gs
jge
push
jns
adc
push
sub
ljmp
or
pop
jg
mov
test
pushf
push
lods
sti
mov
mov
fs
xor
cld
and
les
inc
adc
xor
cmp
cmp
rol
xchg
mov
adc
xchg
js
dec
sbb
movsb
add
es
sbb
into
push
push
add
dec
inc
test
pusha
or
loopne
sbb
clc
and
std
inc
mov
mov
jp
fmull
lds
pop
add
stos
setp
jns
ror
lea
shll
fxch
cmp
mov
lret
xorl
inc
repnz
fdivrs
lock
subl
or
xchg
pop
outsb
bound
xchg
ljmp
hlt
shll
jno
insb
fwait
in
test
jne
pop
mov
lds
xchg
fstp
pop
nop
ljmp
sahf
jecxz
xchg
jne
js
jne
popf
scas
aad
push
das
and
loop
fs
cmp
cmc
shll
xchg
fs
dec
fsubrp
in
jg
push
mov
mov
gs
lret
js
inc
mov
bound
cmp
fmul
pop
fidivrl
loope
cmp
test
cmp
imul
lea
xchg
ds
jne
or
mov
inc
inc
cltd
gs
mov
out
and
sarl
or
jae
enter
dec
test
add
sbb
add
xchg
pop
je
shrb
fs
push
mov
cmp
ja
push
or
xlat
out
push
adc
fstpt
mov
cld
add
push
hlt
sarl
sbb
ret
mov
out
mov
dec
sub
xor
and
sbb
jge
mov
dec
test
stc
mov
out
ljmp
mov
xor
dec
shl
push
lea
in
xchg
xchg
loop
dec
dec
ret
clc
jmp
outsl
sub
cs
xchg
add
mov
shll
outsl
int3
leave
push
sbb
loopne
adc
cmp
rolb
lahf
adc
xor
jbe
push
cltd
lods
shrb
sub
fucomi
arpl
adc
shlb
jecxz
inc
cmpsl
mov
movb
stos
pop
cmp
mov
insb
add
bound
or
inc
lea
dec
setno
push
ror
jb
pop
popa
push
sub
sbb
or
movsl
ja
ljmp
sub
pop
pop
aad
sub
shrb
xor
cs
loope
inc
xor
in
jl
rolb
insl
mov
mov
call
sub
dec
stos
mov
or
ficompl
gs
push
int3
pop
push
xor
cmp
sbb
les
jnp
push
mov
dec
cmpsb
mov
jecxz
adc
mov
push
stos
rclb
xlat
les
and
call
mov
add
subb
shlb
int3
loopne
cmc
xor
cmp
fstp
int
in
std
test
repnz
or
cltd
pusha
push
mov
xor
jne
fisubrs
sub
repz
mov
sub
test
lcall
jge
jno
rcrl
outsb
aad
jle
fnstenv
movsl
aas
pop
vldmxcsr
xor
push
das
pop
mov
jp
pop
xchg
out
xor
fadds
sbb
add
pop
nop
mov
into
and
es
jge
sbb
dec
es
push
outsl
into
and
xor
xchg
lock
loope
mov
dec
fidivl
lock
bound
scas
les
out
lret
test
pop
jge
stos
lods
addl
cmpsb
xchg
mov
dec
pop
sbb
mov
sti
pop
imul
cli
jp
fstps
in
pop
xchg
lods
or
hlt
ret
jne
fildl
sbb
cli
pushf
or
std
mov
adc
jbe
dec
inc
bound
mov
xor
loop
cmpsl
out
rorl
xorl
add
inc
jg
pop
jecxz
cmp
jmp
lcall
cmp
pop
fldt
test
pushf
add
push
xchg
outsl
test
xchg
imul
repnz
xor
gs
dec
loop
rclb
add
out
jns
xlat
ss
aas
jmp
sbb
xor
mov
mov
push
ss
xor
add
jnp
out
mov
data16
test
sahf
repz
scas
loopne
faddl
stos
adc
inc
enter
pop
hlt
and
and
call
shrd
ljmp
popf
js
outsb
jbe
jge
mov
iret
jp
push
adc
jg
sahf
add
nop
jg
gs
dec
mov
stc
inc
lock
inc
pop
sbb
xchg
cmp
insb
xchg
fisubs
mov
push
and
movb
js
bound
add
cmpb
xchg
add
mov
lret
cwtl
mov
arpl
sti
add
push
loop
outsl
cmpsb
loope,pt
jb
mov
jg
dec
aam
in
addr16
cmp
nop
test
outsb
lret
and
cli
adc
inc
add
fcoms
xor
adc
fnsave
in
ljmp
xchg
out
cli
jecxz
fldl
mov
data16
xor
jg
inc
cs
jge
sbb
test
stc
lock
movsl
inc
mov
jnp
shll
faddp
fadd
shr
or
in
loope
jo
fistps
sub
gs
sub
psraw
add
pop
xchg
sub
sti
cwtl
xor
xchg
cmpsb
jl
scas
shl
out
push
aaa
ret
xchg
inc
stos
sub
movsl
lea
popa
dec
cltd
out
sbb
js
out
push
subl
adc
adc
or
stos
insl
push
ss
je
aaa
int
inc
pop
ljmp
xor
mov
fdivl
add
inc
lods
sar
mov
xchg
out
sbb
jno
enter
in
push
and
xor
mov
cs
lcall
ljmp
mov
das
adc
sub
ret
stc
inc
adc
push
les
mov
shl
push
in
into
imul
xchg
mov
out
mov
inc
lods
fisubrs
sub
mov
lahf
mov
lock
push
xchg
cli
jnp
dec
xor
fcompl
cmc
push
mov
and
jp
jl
js
bound
dec
cmp
sbb
pop
insl
adc
aam
enter
jg
sarl
fwait
cmp
in
enter
in
in
rcr
movsb
jo
data16
mov
cmp
mov
cli
popf
push
mov
inc
cwtl
adc
xor
cli
in
in
fldenv
lret
cmp
xchg
mov
dec
inc
xchg
bnd
popa
and
rolb
icebp
repnz
dec
ss
xchg
into
aam
mov
sbb
aad
pop
or
push
mov
jge
add
fcomps
cs
insl
loopne
lods
outsb
cmpsb
aam
dec
imul
rolb
sub
cld
ret
inc
adc
pop
ret
push
and
mov
les
subb
mov
mov
fdiv
xchg
clc
xor
arpl
inc
mov
xchg
cmpsb
xor
sub
and
xor
xor
clc
inc
bound
cs
or
mov
adc
enter
mov
mov
shrl
inc
mov
mov
std
add
jno
clc
or
rorb
test
fcompl
into
jb
dec
jge
dec
sub
xor
xor
andb
mov
rep
je
dec
insb
insb
mov
out
ljmp
jae
cmpsl
and
cli
roll
ljmp
and
out
mov
jnp
aam
xor
or
inc
and
gs
fimuls
jecxz
add
jne
xor
aad
in
stos
sub
and
mov
sbb
jle
mov
icebp
dec
sub
adc
pop
mov
popf
push
pushf
sub
jo
jnp
xlat
pop
sbbb
mov
loope
lods
inc
jae
in
gs
push
lret
add
not
adc
pop
mov
lcall
dec
pop
lahf
push
mov
and
std
stos
repnz
sbb
sub
cmp
dec
icebp
jl
mov
mov
fcos
dec
repz
and
push
testb
jno
sub
in
push
test
iret
mov
shrb
cli
out
sbb
into
sub
lods
jbe
into
imul
or
lods
xor
movsb
je
jno
dec
jge
jmp
add
xchg
scas
push
ss
int3
pop
and
jle
rdpmc
pop
mov
mov
and
fnsave
sub
test
scas
pop
fwait
in
cli
add
cltd
arpl
jmp
mov
mov
xchg
sub
xchg
ss
adc
addl
mov
cltd
and
shll
nop
dec
or
adcl
rorl
fs
add
aas
mov
dec
cmp
jmp
cwtl
push
in
jno
call
in
ds
idivl
lea
out
jnp
pop
out
mov
sub
cli
pop
cltd
pop
cmp
les
inc
sub
mov
into
pop
loop
xor
jne
clc
out
adc
and
repnz
out
and
sbb
adc
fucomi
movsb
xor
add
enter
pop
fwait
out
jmp
iret
cmc
and
cld
xlat
mov
dec
cmc
jl
pop
and
iret
push
mov
test
sarl
xor
push
xlat
loope
aam
sbb
shr
fs
test
xchg
and
cmp
jae
shll
in
lods
push
jne
mov
push
jae
cmpsb
bound
repnz
js
ror
jnp
repz
psrad
test
sbb
lods
mov
sbb
jo
ss
imull
mov
in
sbb
inc
inc
dec
iret
or
inc
push
hlt
outsl
movsl
bound
jns
inc
pop
pop
clc
jp
mov
sub
fwait
jmp
lret
decl
movsl
mov
lock
mov
jo
int3
push
sbb
daa
sti
arpl
adc
sbb
shlb
xor
push
outsl
xchg
fadd
repz
stc
repnz
push
pop
sub
sub
pop
call
insl
and
js
sub
and
push
sbb
lock
mov
pop
jbe
in
pop
xchg
out
adc
mov
sub
out
push
jnp
ss
sub
sarb
inc
dec
jge
fstpl
pop
jo
addr16
pop
lret
jb
adc
nop
dec
ret
xchg
xchg
lea
push
jmp
pop
xlat
loop
in
and
jmp
fs
cltd
out
mov
sbb
pop
test
push
sub
loope
sbbb
sbb
dec
pushf
int3
xchg
jno
adc
push
cltd
sub
js
std
or
lea
jg
and
sub
dec
je
sub
bound
add
out
nop
and
clc
lcall
shlb
shlb
cmp
lahf
pop
pop
fwait
push
insb
test
cld
out
or
pop
xchg
mov
xchg
and
lock
mov
test
int
insb
xor
xchg
and
sahf
sub
adc
mov
inc
push
lret
push
int3
int3
lea
xor
cmp
pusha
adc
dec
xchg
mov
aaa
cli
aaa
shrl
and
inc
cltd
cmpsl
movsl
stc
addb
clc
push
int3
lcall
and
je
xchg
scas
xchg
xor
push
filds
xor
xor
jne
inc
repnz
movsl
mov
dec
xor
ss
pusha
pop
jp
xor
lods
imul
xchg
movsl
xlat
inc
adc
jno
sub
mov
mull
out
lret
sub
push
popf
sti
mov
cmpl
xchg
insb
push
pop
orl
in
fsts
testl
add
mov
sbb
das
jp
pop
pop
into
add
or
daa
push
shll
push
dec
in
xchg
out
cmc
testb
sti
ret
adc
clc
jl
pminub
jnp
mov
xchg
adc
gs
aad
lea
sub
add
cmpsb
fdivs
and
fstpl
fdivl
bound
outsl
xchg
fmull
xor
scas
pusha
loopne
sti
rorl
mov
sarb
lods
cltd
jns
mov
stc
add
fadd
loopne
mov
sar
fadds
jne
cmp
dec
iret
and
pop
outsb
push
xchg
test
or
shll
mov
stc
and
xchg
das
stc
cmp
lahf
mov
jno
dec
in
nop
pop
rolb
js
repnz
push
push
xor
mov
cmp
add
lock
add
mov
cmp
iret
inc
or
mov
sub
dec
in
inc
mov
mov
dec
adc
pop
ss
int
xchg
pop
adc
sub
jmp
jae
mov
pop
sbb
cmpsb
sub
insl
mov
push
test
jbe
iret
xor
cmp
gs
das
add
loope
inc
xor
mov
dec
jnp
pushf
inc
mov
jmp
cmp
mov
loopne
mov
shlb
mov
test
adcl
push
xchg
adc
sahf
jg
mov
test
adc
inc
inc
push
aam
jmp
xchg
fxch
push
rcl
cld
test
xchg
jo
das
fbld
cmpsb
mov
dec
jge
add
add
dec
and
jp
loop
daa
mov
cmp
jl
cmp
scas
and
and
fs
mov
outsb
cmp
roll
mov
dec
sbb
stos
or
cmp
xor
fwait
xor
dec
popa
cwtl
fsts
cmp
cmp
add
xchg
xor
cld
out
cmc
sub
rorb
mov
out
aas
xchg
mov
sar
clc
and
inc
add
aam
pop
sub
and
gs
dec
inc
sub
aad
ja
mov
jp
mov
cmp
push
cmp
push
mov
xchg
xchg
fcomip
popa
pop
adc
mov
andl
test
sbb
ss
int3
jecxz
mov
lods
push
push
sbb
dec
pop
push
sbb
mov
aas
cmp
por
sbb
cmp
out
sbb
push
sbbb
push
sbb
push
imul
mov
das
lcall
or
sar
test
inc
pop
xor
movsl
dec
sub
js
jbe
mov
add
jbe
mov
subb
xor
push
mov
ret
bound
pop
xlat
call
iret
in
stc
jns
daa
xor
rcrl
scas
lahf
pop
dec
popa
xchg
das
push
jl
movsl
adc
push
mov
test
inc
and
dec
addl
jmp
cwtl
in
adc
sub
mulb
adc
nop
or
inc
ror
add
push
fldt
fdivs
xchg
fisttps
adc
outsb
fwait
xchg
shll
mov
and
push
das
or
sub
mov
pop
stc
repnz
adc
xchg
or
jo
out
add
fs
out
mov
jb
jecxz
outsl
scas
xchg
mov
out
ror
insl
pop
sbb
arpl
sbb
out
insb
jmp
jno
jbe
mov
gs
imul
enter
jb
lock
mov
pusha
sbbb
pop
jg
mov
outsb
popf
aaa
icebp
pop
test
cmpsb
xorl
xchg
test
sbb
mov
mov
ret
shrb
cli
or
jle
pop
pop
mov
ljmp
and
ret
fs
cmpsl
out
sbb
hlt
xchg
pop
hlt
rorb
incb
and
pop
loopne
and
mov
mov
into
xor
dec
ficomps
cmp
sbb
cmp
sub
dec
cld
jnp
rcll
stc
das
jp
lods
jae
xchg
mov
loope
loope
xchg
inc
xchg
bound
imul
cltd
pop
sbb
ss
sub
test
ja
inc
stos
popa
mov
insl
jge
nop
pop
bound
sarb
xor
es
pop
fucomi
cld
push
outsl
mov
lds
insb
add
leave
in
mov
imul
shl
stos
and
jmp
push
movb
xlat
adc
pop
cli
outsl
hlt
dec
in
movsl
lods
adc
adc
add
pop
push
push
scas
push
mov
pushf
in
mov
inc
dec
out
aam
repnz
mov
cmp
pop
leave
jbe
mov
je
test
add
fildl
xor
cmp
out
lret
cmc
rcr
mov
inc
jecxz
lods
sbb
mov
cltd
sub
mov
xchg
int3
mov
push
in
addl
int3
dec
outsb
jmp
addb
in
fidivrl
iret
and
imul
cld
stos
iret
jmp
dec
pop
lea
cmp
or
jg
xor
les
push
xchg
test
push
push
mov
in
gs
cwtl
stos
loopne
cmp
gs
aad
xchg
lds
mov
push
and
mov
jle
negb
fdiv
daa
push
nop
push
fnstsw
cld
mov
rcll
push
arpl
push
cmp
sub
cmc
mov
fisubs
add
push
push
or
js
dec
call
not
cmpsl
repz
out
sbb
mov
mov
incb
push
pop
cmp
or
mulb
cmpsl
in
pop
and
jae
dec
pop
cmc
out
cwtl
sub
sbb
adc
xchg
pmullw
lcall
adc
pop
orb
mov
inc
push
mov
or
call
jb
inc
mov
clc
orb
ret
sub
push
dec
push
or
std
ret
or
sub
or
push
add
and
iret
mov
mov
jle
sbb
imul
sbb
dec
cld
xchg
jns
outsb
inc
test
nop
sub
mov
dec
dec
sub
lret
add
jns
jnp
push
outsb
and
test
cmp
dec
sahf
xchg
inc
or
add
mov
and
repz
dec
sbbb
inc
enter
sti
fsubrl
es
push
addr16
aas
mov
jns
push
xchg
inc
cltd
ja
push
adc
push
cmp
mov
jno
roll
mov
ljmp
or
cmpsb
add
dec
test
cmp
in
jo
pop
mov
shrl
push
mov
aam
jp
inc
ljmp
dec
repz
test
addr16
pop
pop
adc
cli
gs
jmp
adc
mov
dec
pop
sbb
out
jo
and
cmp
sbb
pop
dec
imul
mov
push
roll
jge
imulb
push
je
outsb
test
ret
insb
add
mov
aas
inc
test
test
dec
iret
sets
std
jle
ja
and
shll
dec
pop
or
outsl
aaa
cmp
inc
mov
push
push
inc
pop
add
gs
xchg
aas
push
mov
icebp
push
or
mov
pop
mov
push
xor
test
inc
jb
pop
notb
sbb
cmc
inc
mov
pop
les
data16
roll
stos
inc
rolb
or
imul
lds
gs
movsl
xor
lods
mov
repnz
sub
sub
cmpsb
insb
xchg
jp
je
jns
ds
sbb
ror
sbb
jne
and
xor
add
sub
or
out
jmp
sbb
nop
icebp
pop
dec
and
out
stos
push
sti
mov
or
inc
in
push
mov
lock
into
outsl
lock
push
cld
add
push
add
not
fcmovnb
psadbw
push
xor
les
rolb
inc
in
outsl
cmc
xor
dec
les
out
sarl
jns
fwait
push
inc
out
das
leave
cld
imul
lret
out
cmc
es
lcall
fbstp
pop
imul
push
fildl
into
fcomps
test
inc
rolb
lcall
jp
adc
xchg
into
mov
ret
and
fnstsw
sbb
sbb
aas
xchg
mov
repz
xor
xor
xor
dec
and
sbb
roll
adc
fcomi
xor
sbb
gs
fs
aad
push
fcmovnbe
xor
stos
sub
push
xchg
lahf
insl
out
lock
push
xor
lods
into
xor
inc
dec
xor
mov
pop
or
mov
addr16
ja,pt
pop
out
push
shll
arpl
inc
adc
push
adcl
mov
outsl
mov
ret
ret
adc
mov
mov
outsl
lea
mov
jne
sbbb
aas
pushl
cltd
or
sti
jmp
dec
movhps
inc
mov
add
pop
and
fidivrs
cmp
inc
push
fists
int
sbb
add
insb
push
outsl
shrb
in
aam
pop
push
xorl
inc
add
outsb
adc
dec
lds
mov
dec
test
mov
cld
or
movsl
sub
daa
and
icebp
fdivrl
filds
in
xlat
test
pop
test
hlt
out
sub
or
in
sti
and
outsb
daa
mov
mov
stos
loop
arpl
or
dec
stos
outsl
jbe
push
outsb
sbb
and
jmp
cmp
or
cwtl
mov
ljmp
lea
pop
aas
loope
pop
jns
imul
lods
fcoml
scas
dec
fnsave
mov
loope
sbbl
jmp
mov
lcall
xchg
loope
das
dec
mov
xchg
notb
loope
call
pop
ljmp
fisubrs
pop
fcoml
xor
cmpsb
inc
mov
popf
outsb
sub
jbe
adc
scas
inc
or
jns
sub
movsb
push
and
adc
fidivs
mov
mov
mov
inc
pop
adc
divb
xor
push
xor
cmp
movsl
fisttps
sub
mov
inc
cltd
mov
cmpsl
jne
in
xchg
lret
mov
roll
popa
int3
jbe
jbe
or
out
aaa
clc
mov
jbe
loop
icebp
lods
fisubrl
mov
movsl
ja
and
xchg
push
push
fnstcw
dec
cmp
fcoms
stos
imul
icebp
insl
adc
mov
cmc
repz
rcll
jle
mov
add
jmp
push
int3
jmp
repnz
pushf
ffree
je
sbb
sub
sti
adc
js
lock
and
daa
sbb
int3
lcall
mov
ja
jns
fisubrl
orl
sub
dec
cmpsb
cmp
cmpsl
add
mov
push
ja
jb
leave
loop
mov
psubusb
xlat
mov
cld
jecxz
mov
mov
xchg
and
cltd
fsubp
loop
mov
mov
scas
inc
sub
dec
adc
idivb
lock
jp
dec
jle
imulb
xchg
adc
push
movsl
test
inc
jo
push
xchg
pop
push
sbb
mov
push
or
cmc
and
sub
daa
or
mov
fabs
orb
and
ret
push
sub
mov
stos
dec
push
mov
push
add
sbbb
sbb
push
mov
lahf
inc
inc
addr16
imulb
push
mov
pop
xor
push
int3
add
loop
rcrb
lahf
cli
or
cmpsb
cwtl
loopne
rcrl
push
loopne
les
leave
repz
sahf
sbb
cld
mov
adc
inc
push
imull
in
xor
push
sub
inc
or
mov
mov
sbb
mov
xor
popf
sub
mov
add
dec
cmp
lret
outsb
in
cmp
cs
mov
cs
pop
int
sub
std
xor
rcll
mov
adc
scas
cmp
fstpl
mov
add
jno
cld
xor
and
dec
push
sahf
lock
into
and
out
repz
clc
sbb
enter
push
ss
lcall
dec
jge
sahf
inc
ja
clc
sub
aam
xchg
cmpsl
js
daa
lea
cmpsl
nop
mov
cwtl
enter
dec
fcmovbe
int3
cmp
dec
jne
iret
nop
or
repz
xchg
xor
pop
dec
out
add
fldt
jl
xor
sbb
xchg
scas
push
stc
xor
push
add
jb
js
mov
xchg
les
fildl
mov
in
pop
pop
add
sub
nop
in
and
aad
icebp
mov
scas
call
jno
pushf
jae
inc
dec
mov
int3
movsl
dec
push
push
mov
int
push
fistps
cld
into
inc
xchg
lea
int
pushf
add
mov
sub
dec
cmc
pop
fprem1
jl
and
test
mov
or
xchg
les
fsub
je
xor
dec
or
or
inc
stos
or
test
popa
testl
data16
test
mov
adc
fsubrs
cmp
mov
dec
or
jle
jle
jle
push
ret
inc
jno
mov
aam
in
flds
std
pop
jl
jns
push
push
ret
pusha
xchg
lahf
movsl
sbb
sbb
mov
pop
xor
aas
dec
cmpsl
push
sbb
lahf
xchg
or
cli
jne
add
test
adcl
cmpl
je
cmp
jge
sub
push
cmpl
or
mov
lods
xor
dec
mov
fwait
adc
xor
mov
ja
roll
add
in
xchg
test
mov
sbb
mov
sbb
and
out
push
dec
mov
lods
cmc
test
add
or
pop
xchg
add
xor
adc
mov
cmp
xor
in
sahf
idivb
std
in
mov
jo
ljmp
arpl
pop
mov
xchg
xor
imulb
ja
mov
repz
adc
xchg
outsb
mov
jo
inc
cmp
in
enter
adc
jnp
je
loop
mov
xchg
pop
jne
ja
and
mov
ret
hlt
rolb
add
test
fistl
lock
leave
push
imul
mov
ja,pt
mov
out
sub
adc
stos
jmp
push
addr16
fiaddl
popa
repnz
sub
mov
icebp
jae
dec
bound
int
out
mov
dec
daa
cmp
dec
icebp
dec
out
jg
inc
repnz
mov
in
mov
push
sti
stos
and
in
cltd
jp
sbb
loopne
int
stc
outsl
inc
rcrl
pop
enter
mov
loope
fs
insl
das
xchg
negl
push
mov
sti
cmp
fidivs
sahf
je
test
xor
fadd
leave
lret
ret
fstps
sub
popf
popa
hlt
add
add
ficompl
loope
popa
sbb
sbb
test
cmp
stos
lahf
stos
mov
push
cmp
mov
mov
sbb
mov
cltd
gs
call
out
lahf
dec
mov
xor
push
addr16
pop
push
mov
lret
mov
adc
sub
sbb
xor
je
push
andb
lods
mov
xchg
fsubl
mov
jge
dec
es
popa
adc
add
cmp
sub
fisubl
inc
and
fs
mov
push
ja
mov
xlat
fidivs
xchg
in
ds
test
rcrl
push
mov
movsb
mov
mov
out
fidivl
int3
xchg
cmp
pop
ret
and
aad
adc
push
test
jecxz
enter
pop
je
ja
mov
sahf
imul
mov
stos
add
addr16
sahf
imul
pusha
xor
data16
dec
adc
push
jne
dec
movsl
mov
cmpsl
sbb
fidivrl
pop
jecxz
mov
jae
test
ret
cmp
nop
mov
add
jae
in
or
in
xor
pop
xor
nop
mov
es
stc
cltd
push
daa
jg
sub
push
and
push
cmp
jo
dec
jp
arpl
and
xchg
ljmp
fs
dec
mov
bound
mov
gs
das
add
mov
imul
call
sbb
sub
ret
lds
push
orb
loop
sbbl
loop
fisttps
xor
lock
hlt
fisttpll
imul
jge
mov
xor
cmpsl
bnd
scas
push
adc
xor
je
insl
imul
and
iret
and
inc
notrack
mov
sahf
sahf
shll
faddl
xor
inc
inc
roll
inc
sub
or
js
xor
push
mov
sbb
adc
pop
ljmp
call
mov
xor
jle
adc
and
mov
jmp
les
push
es
es
ds
xor
jb
jmp
mov
call
int3
pusha
adc
test
ret
ffree
or
sub
hlt
cld
sbb
or
aaa
dec
mov
mov
sub
sarb
mov
lods
dec
xchg
and
jl
sahf
jbe
mov
cmp
mov
mov
inc
out
out
iret
add
popa
xorl
js
xor
aad
scas
sbb
push
jne
into
scas
int
lods
push
pop
mov
mov
enter
ja
mov
xchg
addl
and
add
push
fstpt
je
iret
rcl
push
sarl
into
inc
lret
sahf
inc
adc
lock
mov
call
jb
push
aaa
cmpsl
arpl
movsb
daa
gs
jecxz
cmp
lcall
mov
xchg
or
inc
xchg
out
mov
xchg
icebp
fcompl
or
and
xlat
test
mov
cmp
mov
pop
cmpsb
cmp
clc
pop
je
dec
xchg
mov
test
mov
jb
clc
cltd
jecxz
or
outsb
cmp
and
shrb
pop
jne
aaa
adc
push
xor
sti
std
into
repnz
add
xchg
ret
fists
sti
ret
dec
pop
xor
mov
clc
mov
jns
stos
je
jmp
dec
ds
sub
shr
arpl
mov
push
adc
jmp
test
test
pop
jae
scas
stos
repnz
in
mov
xor
sub
pop
fsubl
cmpsb
pushf
fidivs
shlb
xlat
mov
repnz
jbe
add
test
or
fiaddl
or
sub
data16
repnz
xor
imul
mov
mov
loopne
mul
jmp
orl
mov
dec
icebp
adc
push
dec
lods
mov
ss
adcb
xchg
mov
into
mov
sbb
pop
insb
jne
fldcw
int
pop
ja
loopne
daa
out
aas
clc
jae
pop
adc
je
push
adc
dec
cmp
in
sbb
scas
inc
mov
or
test
pop
xchg
ljmp
xchg
pop
psubsb
xor
aam
movsl
pop
cwtl
sub
mov
xchg
sbb
adc
sub
stos
les
loopne
ret
jl
jnp
mov
into
cmp
sub
ja
int
jo
jecxz
mov
cmp
pop
aaa
sub
les
sub
std
data16
xor
or
fildl
test
add
jb
cmpsl
add
ljmp
xor
jp
fwait
xlat
push
rorb
loope
mov
sub
push
mov
jns
mov
pop
mov
xor
adc
push
arpl
popf
repz
sahf
mov
inc
or
lret
stos
ds
mov
inc
jmp
pop
repnz
imul
dec
mov
push
in
mov
push
sbb
mov
mov
push
fadds
in
sbb
push
std
ja
dec
popf
dec
ja
adc
ds
stos
jge
sbb
push
ljmp
push
je
pop
sub
push
mov
mov
in
sub
out
push
adc
xor
loop
pop
cmp
bound
sbb
dec
jns
sbb
outsl
add
inc
mov
xchg
iret
xor
mov
sbb
pop
jl
xchg
stos
push
push
out
and
xchg
mov
jbe
mov
and
lret
mov
push
mov
or
mov
push
cmpsb
mov
push
and
push
int
dec
ds
and
fistps
adc
sbb
cmp
test
les
and
std
and
fdiv
and
dec
sbb
add
mov
mov
repnz
cmp
es
push
fsqrt
sahf
aam
inc
push
pop
or
cs
test
cmp
mov
pop
pop
data16
add
dec
jmp
add
mov
out
idivl
scas
xchg
arpl
sbb
push
les
movsb
mov
mov
test
sbbb
rcl
cltd
cmc
in
cmp
mov
dec
mov
shrl
mov
mov
and
scas
push
add
aas
or
sbb
rcll
sbb
or
cltd
pop
es
sbb
int
xchg
adc
into
xchg
out
dec
mov
add
cmp
fwait
sub
dec
ret
add
int
popa
pop
inc
push
xchg
pop
negb
cmp
repz
inc
ja
rcr
mov
fwait
sbb
incl
movsb
ficomps
in
xor
inc
shl
dec
lods
or
loop
rcrl
mov
aam
jmp
ljmp
cmp
loope
adc
lds
cmovp
mov
push
ss
test
addb
jnp
std
jmp
mov
test
pop
fildll
xchg
les
mov
sbb
sub
cmp
dec
adc
lret
jne
or
insb
or
clc
scas
in
mov
dec
push
ret
adc
jl
out
mov
dec
mov
jle
push
inc
in
sub
mov
sbb
sahf
lea
jbe
out
incl
xor
repnz
lret
loop
xchg
pusha
jle
lahf
iret
sarl
fs
imul
mov
andb
cmc
aas
icebp
cmp
mov
mov
aas
lods
outsl
dec
loop
jmp
sti
inc
aad
and
mov
movsb
jnp
pop
std
daa
jno
sti
add
inc
xor
fdivrs
and
dec
int3
rcrl
callw
in
push
div
cmpb
jl
mov
sbb
sbb
xchg
mov
in
insl
dec
nop
xor
sahf
call
or
mov
mov
outsb
and
cmp
xlat
inc
xchg
ljmp
and
daa
cmpsl
pop
mov
gs
jmp
sbb
sub
mov
andl
push
pop
add
out
sub
lea
sub
sti
add
jmp
popl
pop
imul
pusha
sarl
adc
andl
imul
gs
sub
xor
movsb
jns
jnp
cmp
and
sbb
fcomp
cmpsb
ljmp
daa
ja
scas
inc
xlat
test
or
sub
sub
fdivr
push
mov
jg
jae
xchg
ljmp
dec
fwait
leave
cltd
inc
sbb
sarl
xor
xor
ret
cld
push
xchg
call
mov
jmp
cwtl
xor
sbb
in
pop
daa
mov
lea
xchg
orl
cwtl
or
pushf
pop
mov
nop
pop
mov
add
mov
sub
rcrb
push
movsb
jb
pop
xchg
jnp
mov
mov
xchg
in
test
mov
inc
pop
xchg
or
add
push
adc
xor
fwait
push
movsb
xchg
mov
mov
lahf
mov
dec
cmp
pushf
and
aaa
fcoms
sbb
sbb
std
sbb
xchg
xor
sub
stos
xchg
push
jg
lret
mov
cld
and
mov
icebp
cltd
out
dec
jg
sub
dec
xor
es
adc
pop
popa
popl
jo
jo
cmp
notb
sub
and
mov
jp
mov
mov
dec
add
out
pop
dec
cwtl
scas
dec
push
outsb
mov
movsb
or
push
pop
ds
add
lds
pop
xor
std
pop
ss
hlt
std
adc
call
jecxz
jp
leave
in
cmp
add
repnz
hlt
dec
push
or
cmp
or
push
leave
mov
mov
fldl
jmp
cmp
je
and
hlt
adc
sbb
aas
mov
jb
lods
rclb
mov
test
xlat
push
rcl
addb
sub
into
pop
adc
lock
pop
shrl
mov
xor
pop
pop
xor
leave
and
or
xchg
push
cmp
xor
lahf
and
xchg
xor
mov
xchg
scas
pop
fxam
ss
xchg
lods
sbb
jl
movl
ss
and
outsb
nop
in
jp
adc
xchg
jge
subl
mov
outsb
dec
sti
xor
adc
daa
adc
inc
sbbb
ds
sbbl
jecxz
jne
sbb
mov
and
pop
push
xchg
test
imul
fucomi
mov
lret
mov
test
xor
sub
in
add
jg
push
icebp
xor
pop
jg
ret
aam
pop
sub
xor
jle
adc
fcoms
dec
movsl
and
fnstsw
cltd
lcall
sbb
push
rcr
cmp
outsl
popa
iret
insl
xor
cs
cmp
mov
sbb
xchg
movsb
in
arpl
mov
hlt
gs
add
push
inc
loopne,pt
in
mov
les
xchg
repnz
je
push
dec
in
or
xlat
add
inc
lock
lret
mov
inc
jb
negl
negl
fwait
out
loop
sarb
or
jle
nop
xchg
outsl
adc
insl
cmpsl
sti
dec
xchg
push
push
sbb
mov
inc
sbb
mov
fcompl
pop
test
jmp
inc
sbb
xor
cmp
test
ret
outsl
and
cmpsb
imul
adc
cmp
push
insb
sub
add
pop
jle
mov
dec
push
inc
fsubrl
mov
lea
ficoms
clc
and
jno
cld
movsb
loope
sahf
or
divb
sub
aam
bound
imul
pop
or
xchg
mov
xchg
inc
push
mov
fstps
ds
bound
mov
adc
push
sub
sub
xchg
rorl
pop
icebp
cmp
lret
addr16
add
popf
je
add
gs
call
and
xor
xor
lods
xchg
test
push
insb
push
fisttps
pop
and
out
sbb
shl
adc
mov
jb
sub
and
lgs
je
js
jge
mov
add
loopne
mov
fsubr
sub
pop
in
hlt
roll
jae
repz
sub
leave
sbb
sbb
popa
mov
mov
cmp
stos
dec
inc
dec
insl
ss
cld
push
adc
pusha
pop
xchg
and
mov
mov
ret
popa
stc
xchg
notl
ljmp
pop
js
lods
sbb
int3
ficoml
xor
ja
pusha
xchg
fidivl
mov
xor
roll
dec
xchg
sarb
mov
gs
cli
mov
stos
lods
dec
mov
jo
cmp
clc
mov
test
enter
adc
inc
jle
inc
test
jno
mov
lods
or
in
lret
movl
jae
iret
or
pop
data16
dec
sbb
xlat
cmp
adcl
dec
outsl
sub
insl
mov
sahf
lret
mov
pop
push
mov
pop
movsb
adc
rcll
jb
jns
sbb
mov
sbb
movsb
push
sbb
push
sti
xchg
push
mov
cmp
iret
sbb
mov
jo
inc
jge
cmpsl
pop
repnz
adc
call
into
movsl
stos
push
inc
test
shl
fwait
lret
test
push
xchg
dec
sbb
add
push
jecxz
sub
add
sub
sbb
rcll
mov
jne
nop
inc
lcall
pusha
pop
pop
dec
loop
and
push
in
lea
xor
inc
lock
pop
scas
or
sbb
in
out
ror
pop
inc
dec
sbb
pop
cmp
sahf
lret
sti
pop
leave
test
xchg
push
iret
push
and
pop
cld
cmc
or
aad
add
lea
dec
loop
mov
sbb
clc
ret
stos
pop
sub
cmpsb
jmp
mov
push
mov
jns
das
repnz
ret
ja
fbld
jne
cltd
or
das
lret
sub
and
int3
sbb
lret
leave
outsl
in
cmpb
fs
inc
fwait
add
test
add
jge
lret
fwait
sub
inc
sahf
xchg
lds
cs
sbb
ljmp
or
outsl
and
popa
das
loopne
dec
dec
pop
inc
mov
xor
rcrl
xor
push
mov
add
fmull
sub
or
fisttpll
xchg
fmull
or
adc
adc
pop
inc
imul
jl
in
gs
loopne
dec
or
pushf
pop
imul
jno
push
xchg
or
repnz
dec
or
push
or
rclb
mov
mov
aas
jmp
cltd
insb
out
adc
fistps
or
jo
xchg
das
addl
sub
addr16
movsl
pop
sahf
dec
pop
mov
mov
mov
adc
jg
mov
mov
inc
jbe
push
mov
and
loop
lods
in
mov
cmpsb
push
dec
jns
js
xor
dec
ud1
iret
push
in
sub
stos
mov
mov
push
jecxz
sub
xchg
adc
ja
jne
movsb
fists
xchg
xor
cmp
lods
or
cmp
rolb
mov
push
and
add
mov
xchg
pop
adc
pop
mov
mov
sahf
and
cld
ret
test
mov
in
stc
or
int3
push
in
and
and
pop
inc
movsl
enter
test
sub
in
or
add
outsl
rcl
pusha
xor
mov
cmpsb
movsb
push
flds
imul
shl
jge
addl
ret
sub
sub
mov
cmc
jnp
jae
sub
jbe
shll
pop
data16
add
jns
cli
stos
je
cmc
andl
movsb
xor
mov
cmp
pop
xchg
push
andnps
aas
push
ja
dec
das
sub
inc
xor
cmp
push
into
and
fs
sub
jnp
mov
and
fs
push
aas
cmc
out
or
lods
jle
jle
mov
ficomps
lcall
in
inc
jo
add
mov
aad
out
fmul
cmc
add
out
xor
movsb
jmp
clc
sbb
fcoml
or
push
dec
mov
inc
xor
mov
xchg
lahf
xchg
mov
push
cmpsb
ds
push
or
dec
mov
jb
dec
rcrb
pushf
js
sub
mull
test
add
pop
shl
push
sub
pop
in
outsb
jge
les
outsb
je
mov
frstor
stos
jbe
imul
scas
lods
xor
add
ds
adc
inc
mov
jne
pop
sub
rcrl
xlat
lods
daa
int3
adc
mov
jge
xor
std
adc
add
cltd
mov
xlat
lds
loope
pop
cmp
sahf
shl
call
cmpsb
jo
add
inc
loop
sbb
dec
inc
movsl
and
inc
in
mov
enter
cli
jecxz
pop
mov
pop
adc
inc
cmpsl
int
into
arpl
mov
fmuls
push
inc
mov
mov
loop
mov
loopne
mov
jecxz
rcr
jne
shrl
scas
sub
mov
sbb
adcb
sub
mov
ud0
and
cmc
or
js
mov
push
ret
sub
or
mov
iret
pop
xor
xchg
inc
imul
dec
cmc
xor
aas
dec
jno
sahf
jae
adc
loope
int3
ss
repz
shrl
xor
lea
or
fwait
rcrb
push
lds
xchg
stos
cs
faddp
inc
mov
scas
fstp
sti
leave
rcr
jbe
jmp
sbb
mov
int
xchg
jecxz
and
xor
add
pop
pop
in
clc
test
arpl
movntq
out
pop
nop
lahf
and
cmpsb
sbb
test
nop
mov
and
sub
mov
push
mov
push
adc
mov
lods
cltd
pop
cmp
std
inc
or
xchg
adc
pop
in
cli
cmp
pop
push
lret
shll
ljmp
stos
jo
jno
adc
jns
fisttpl
addl
adc
sbb
nop
push
and
clc
cmp
push
xchg
dec
push
icebp
shll
pop
in
test
out
in
pop
fimuls
inc
insl
ljmp
ret
jnp
jge
lods
sbb
pop
mov
dec
mov
or
and
jl
popf
hlt
dec
push
shrl
cs
cwtl
pop
ss
dec
lret
xchg
aad
cmpsl
jmp
arpl
dec
movsb
in
mov
fwait
dec
cltd
pushf
or
inc
mov
dec
int
dec
call
and
or
add
mov
inc
test
pop
push
jecxz
mov
mov
inc
arpl
stc
and
jne
into
xor
in
mov
sub
dec
adc
push
dec
mov
aad
and
xor
jmp
out
outsl
xor
adc
cld
sbbl
xor
jle
sarb
imul
pop
sbb
cmpsl
cmp
das
stos
push
sahf
mov
jnp
fwait
pop
mov
mov
sti
test
mov
enter
in
xor
jbe
inc
addl
dec
pop
inc
subb
or
pop
adc
aam
clc
pop
jb
lock
push
test
repnz
xchg
lock
jp
std
fwait
aam
xor
xor
shll
sub
cmp
out
clc
mov
pop
test
adc
dec
mov
nop
push
ljmp
outsb
rorb
mov
adc
dec
adc
inc
cs
fwait
ljmp
mov
push
jno
sbb
iretw
jge
outsb
jns
or
mov
std
repnz
lahf
and
in
bound
hlt
jo
mov
lahf
inc
dec
stc
fistl
stos
mov
int
mov
inc
stos
int3
inc
push
mov
mov
adc
je
movsl
cli
adc
gs
cvtpi2ps
or
inc
cmp
lods
lds
adc
mov
dec
mov
pop
mov
iret
mov
xchg
pop
lcall
adc
or
in
flds
aad
ss
rclb
in
into
pop
inc
aad
ss
add
pop
jno
rol
ds
dec
int3
dec
dec
cmp
mov
and
jnp
mov
lret
ds
bound
mov
mov
inc
fwait
iret
dec
int
or
xchg
cmpsl
or
pop
call
add
ja
mov
outsl
leave
push
add
cmp
fbstp
mov
cmp
les
pop
inc
jne
inc
sarl
loopne
xchg
test
pusha
and
fimuls
jle
mov
ds
push
ja
ret
flds
mov
lret
cltd
add
jecxz
ljmp
mov
jecxz
icebp
pushf
into
test
cmp
out
cmc
cmp
cmp
mov
enter
popf
aam
scas
or
jns
lea
mov
addr16
sbb
and
imul
jge
mov
sbb
sub
mov
testl
clc
xor
ror
ljmp
add
aam
enter
mov
pop
xchg
out
pop
loope
fldt
cmp
gs
add
insl
insl
push
adcb
jno
push
int3
rorl
das
sub
cmp
test
mov
push
das
sarl
push
outsb
sub
mov
pop
ljmp
cmp
sub
pushl
andb
mov
add
stos
test
lock
mov
sahf
int
test
jne
sub
adc
in
aad
fs
pop
xor
dec
test
push
mov
shrl
push
lock
pop
add
mov
das
sub
inc
dec
add
mov
mov
das
popa
add
flds
push
nop
mov
test
pop
xchg
loope
scas
or
fstl
sahf
gs
push
adc
add
arpl
mov
fisttps
push
mov
or
stc
orl
cmp
leave
xor
xchg
lahf
icebp
inc
xchg
fwait
dec
stc
repnz
push
scas
ja
xchg
clc
mov
xor
cmp
push
shll
dec
add
mov
mov
dec
xchg
push
mov
mov
pop
mov
cmp
dec
cmp
lret
in
out
inc
and
cld
jnp
pusha
xorb
push
pop
adc
je
test
js
cmpsl
or
loop
sub
or
sbb
pop
fcmovnbe
aad
fwait
pusha
jge
cmp
aaa
mov
adc
dec
arpl
repz
data16
inc
test
mov
gs
push
in
jle
repz
cld
js
daa
lods
xor
mov
mov
repnz
bound
stos
cmp
lea
and
pop
dec
xchg
fcomps
push
arpl
dec
fcomi
mov
ds
lret
dec
pmaxub
repnz
jg
or
mov
loop
and
xchg
xor
pop
dec
fstpt
repnz
or
rcrb
jbe
divl
imul
xchg
xchg
aaa
inc
int
add
dec
movsb
xor
sar
lea
pushf
outsl
mov
stc
fsubs
mov
xchg
and
add
add
call
or
xchg
sub
aaa
inc
je
loope
sub
adc
mov
cltd
xbegin
jl
push
dec
imul
dec
int
fwait
sbb
mov
in
dec
sub
and
adc
subl
test
push
lcall
repnz
ret
test
mov
sbb
sub
push
mov
arpl
push
adc
or
pop
push
pushf
push
outsl
mov
jmp
jne
dec
int3
les
jg
js
xchg
dec
sbb
push
fucom
mov
pop
shl
outsb
rcrb
dec
iret
inc
fildll
xchg
xor
or
arpl
push
jmp
xor
movsl
sbb
je
xor
pop
xor
mov
xchg
mov
sahf
int
shll
leave
mov
lcall
out
arpl
cli
sub
arpl
add
jnp
ret
cltd
inc
push
push
mov
in
enter
or
mov
icebp
jno
lods
lahf
icebp
xor
sub
out
and
lods
or
jge
mul
sub
outsb
nop
ret
mov
les
mov
mov
pop
inc
cmp
sbb
jns
pop
ja
xchg
jno
or
shll
add
inc
jl
stos
mov
xlat
cmp
fstpl
mov
out
mov
pop
ja
or
mov
sbb
xchg
pusha
pop
stc
test
iret
je
cmpl
push
inc
and
xchg
rolb
mov
jg
dec
xchg
repnz
jne
push
fcomps
push
movsb
dec
rclb
dec
pop
ljmp
mov
bswap
cmpsl
pop
dec
wbinvd
xor
idivb
xchg
aad
sub
and
push
es
lret
sub
push
adc
push
push
mov
inc
imul
add
cwtl
add
out
stos
orb
cs
popl
xchg
into
test
fs
in
mov
xchg
std
jle
into
jl
dec
lahf
mov
rclb
inc
sbb
mov
inc
popa
in
rclb
es
mov
and
pop
adc
xchg
push
aam
adc
pop
lods
xor
shrb
jne
iret
dec
mov
sbbl
lods
rcll
sbb
jge
repnz
js
push
ss
lods
aas
xchg
xabort
std
mov
out
out
pop
scas
stc
pop
orb
lret
mov
sub
mov
mov
sbb
vmwrite
xchg
out
std
add
or
daa
adc
int3
out
or
ret
dec
push
div
imul
adc
pop
or
pop
lcall
std
mov
push
daa
sqrtps
rclb
jle
std
lods
dec
fdivl
push
arpl
cmp
pop
aam
xchg
fwait
inc
decl
mov
stc
ud0
push
xchg
out
push
imul
mov
sub
xchg
movsb
dec
es
loop
fsub
pop
mov
dec
mov
mov
inc
inc
push
mov
cmp
adc
popa
and
test
xchg
push
int
movsl
sbb
ljmp
adc
std
sbb
stos
adc
push
cld
shll
push
fsubl
jae
repnz
adc
mov
jg
mov
push
jecxz
js
jb
jb
in
xchg
inc
shrl
adc
sbb
cltd
inc
fwait
xor
jbe
jle
push
mov
jns
out
imul
mov
jo
mov
inc
mov
andl
nop
or
cmpsb
sbb
aas
call
roll
aaa
xorl
pop
or
daa
out
sub
fdivs
xor
fwait
and
or
into
bound
jg
les
xor
notb
pop
lcall
out
xlat
push
push
test
ret
lock
push
popf
in
sbb
std
xlat
add
dec
jb
xor
mov
mov
out
fwait
outsb
mov
dec
lret
mov
loope
arpl
inc
xchg
scas
and
mov
fs
or
xor
aas
jg
clc
mov
adc
pop
fst
iret
fs
sti
aas
cmp
jae
imul
sti
inc
inc
cmp
aam
mov
mov
fnstenv
xchg
add
ja
xor
xchg
imul
jo
dec
pop
shrl
inc
mov
pop
cld
pusha
bound
xchg
leave
insl
popa
xchg
popa
xchg
rclb
lods
add
fs
fisubs
ret
inc
fchs
daa
xchg
and
jecxz
xlat
in
jo
fsubl
repnz
shlb
imul
xchg
pop
cmp
lds
vsqrtsd
mov
pop
iret
out
add
cltd
jno
cs
cmp
lock
incl
cmp
inc
cmpsb
add
clc
testl
je
mov
andb
loope
adc
dec
mov
popf
in
in
fnstcw
jl
pop
or
pop
lahf
stos
mov
nop
mov
xlat
pop
mov
daa
xchg
leave
test
in
inc
rcrb
and
or
ljmp
pushl
dec
fdiv
mov
loop
dec
mov
mov
in
ret
movsl
insl
mov
in
popf
push
jo
mov
ds
and
cmp
xor
sub
xor
pop
push
out
cmc
xor
test
lcall
and
cs
mov
push
rcrl
ds
adc
fs
movsb
xorb
adc
or
rcrl
mov
push
dec
arpl
pop
pop
cwtl
and
sub
call
inc
hlt
subl
xor
data16
pop
mov
pop
sbbb
push
cmp
out
and
and
mov
xchg
stos
sbb
mov
and
addr16
nop
jp
inc
sti
or
sub
fwait
add
sub
inc
cmpsl
inc
aas
sub
cld
xor
ds
cltd
pushf
sbbb
lods
xchg
fcoms
sarl
dec
ror
rcr
mov
sbb
add
mov
sub
adc
test
mov
bound
push
leave
add
cs
mov
fcmovnu
and
push
outsb
cmp
xchg
ret
inc
popf
insl
mov
popf
sti
mov
ljmp
nop
mov
mov
sub
add
testl
xchg
stos
or
shll
pop
sub
jno
lock
das
sub
jno
xor
ss
test
lret
and
lahf
and
push
leave
mov
push
xchg
fs
scas
pop
fs
imul
push
aas
add
xchg
vmovntdq
adc
dec
xor
aaa
or
into
addr16
sub
movsl
xchg
cmc
jbe
add
lret
popa
dec
je
add
lock
lea
mov
sub
daa
dec
or
lret
sub
cmpsl
dec
cmp
add
ret
std
fdivl
lds
mov
lock
dec
xchg
push
lret
push
adc
arpl
rorl
mov
pop
push
call
xchg
pop
test
cwtl
pushf
dec
jbe
stos
push
jne
mov
insb
adcb
mov
repz
and
out
mov
daa
mov
adc
pop
cmpsb
pop
xchg
adcb
mov
loope
jb
aad
stos
jb
and
arpl
in
adc
or
stc
cltd
dec
out
hlt
jmp
add
mov
and
fwait
pop
lock
lret
je
cmp
and
stos
push
icebp
sbb
xor
xchg
fistpll
mov
mov
mov
mov
push
xor
mov
movsl
sub
sub
leave
pop
div
adcb
jnp
icebp
cmpsl
mov
jp
jo
cs
addb
addb
int
mov
jl
and
stc
lcall
sbb
cmp
aad
jl
adc
sub
xchg
fadds
popf
lds
push
mov
jno
leave
inc
jo
push
stc
popa
fadd
sbb
cwtl
sub
iret
jns
insl
jge
mov
cmp
repz
push
pusha
push
movsb
out
jmp
xchg
mov
call
dec
lcall
mov
out
inc
outsb
adc
scas
push
jcxz
xor
out
out
push
icebp
leave
dec
inc
inc
stc
push
out
rorl
rclb
and
add
xchg
pop
adcl
jmp
or
orl
adc
es
fsubl
rcll
sub
ljmp
jbe
jo
xchg
imul
pop
roll
cwtl
sub
imulb
pop
sbb
js
push
push
imul
addr16
ljmp
nop
add
adc
cmc
xor
mov
aad
cmp
dec
pop
mov
lock
mov
stos
test
gs
sub
iret
cmp
out
or
ja
cmp
in
bound
push
leave
xor
inc
inc
mov
add
add
jns
xor
pop
aam
adc
fmulp
dec
int
arpl
mov
push
movl
jne
lahf
sahf
divl
lcall
push
idivl
lea
mov
inc
xor
mov
mov
rclb
lahf
gs
jbe,pt
push
sahf
add
mov
scas
in
sar
je
mov
lods
push
cltd
mov
mov
push
loope
jecxz
mov
das
scas
xorb
es
push
xor
inc
aas
or
inc
xchg
scas
or
data16
mov
scas
sbb
pushl
cmpsb
decb
mov
inc
sbb
fmull
out
push
outsb
xor
mov
fwait
push
and
push
fidivrl
fsubrs
ret
cmc
paddb
push
aas
orb
insb
push
iret
add
push
pop
xchg
dec
sub
xchg
push
jnp
lods
pop
das
push
pop
sbb
and
pushf
sti
popa
and
dec
add
insb
mov
into
pop
push
int
shrb
pusha
mov
loopne
jl
test
mov
jmp
inc
push
andb
mov
addr16
movsl
movsl
cwtl
test
fdivr
inc
daa
sarb
push
pushl
pusha
sbb
add
fstpl
sub
out
test
jns
fisubs
dec
push
pop
mov
hlt
mov
in
inc
ret
ds
leave
or
pop
das
divb
mov
pop
rcrb
ljmp
fcomip
adc
dec
mov
lods
jb
cmp
pushl
lds
lds
insb
ja
jp
add
xchg
add
popf
sbb
sub
fs
lods
pop
sub
shll
jge
jne
test
cmp
and
dec
sbb
or
ja
cmc
mov
out
insw
jg
stc
add
fwait
xor
xor
adc
bound
jle
xchg
adc
mov
and
sarb
mov
clc
cli
pop
or
rorl
loop
repz
or
mov
add
sbb
pop
cmp
jp
mov
test
jbe
mov
pop
out
push
xor
mov
dec
ss
push
sbb
pop
rcl
sbb
nop
leave
jmp
pop
mov
cmp
outsl
mov
shrl
jmp
rolb
ds
xchg
xor
jmp
push
hlt
xor
jnp
bnd
jbe
inc
imul
push
sub
fdivrs
jmp
pop
xchg
fwait
nop
xchg
lods
shll
mov
insb
popa
jne
lock
test
int3
sub
pop
xor
cmpsb
adc
xor
sub
lds
xor
int3
push
out
orl
popa
pop
mov
ficoms
loope
jae
or
and
cmp
push
mov
ds
ljmp
subb
jg
notb
pushf
pop
or
dec
xor
sarl
xor
pop
mov
cltd
loop
ja
fstpl
xlat
adc
in
adc
inc
cld
mov
and
lds
cmp
icebp
dec
sub
adc
js
out
lret
push
mov
adc
mov
aas
sub
cltd
jmp
inc
sar
pop
pop
popf
cmpsb
btr
les
hlt
push
xchg
jns
out
jno
mov
arpl
dec
jmp
inc
jmp
mov
sub
inc
negb
jp
fcompl
std
push
leave
lahf
ds
push
jb
mov
lods
or
cmpsb
jns
mov
mov
add
dec
sbb
or
outsb
or
les
sub
jg
je
jp
fdiv
outsl
inc
mov
pop
cli
sbb
fucomip
dec
push
and
sub
xchg
cmp
sbb
maxps
repz
mov
inc
mov
pop
mov
push
push
jmp
push
pop
lods
int
jbe
pop
ds
cmp
div
push
inc
sbb
pop
dec
xchg
sbb
subl
adc
test
add
mov
shr
scas
dec
je
push
arpl
sbb
push
mov
add
mov
xor
jecxz
mov
sub
jmp
xor
push
notl
addr16
jno
les
imul
scas
sub
ret
sub
mulb
mov
sarl
sub
sbb
notl
jmp
pop
insb
and
sbb
inc
lea
sbb
or
jmp
add
mov
sahf
sub
or
addb
push
pusha
and
fstpl
fimuls
xchg
insl
mov
jno
mov
inc
push
outsl
and
xor
jb
jle
sub
fmuls
dec
inc
adcb
push
sub
mov
lock
dec
aam
pop
inc
sbb
insb
cwtl
ficomps
mov
shlb
cmpsb
sub
add
popf
mov
sub
fsubs
sbb
lds
pop
es
int
sbb
mov
adc
mov
xchg
lock
add
push
in
sahf
xchg
xchg
lahf
and
push
adc
cmp
loope
xchg
inc
mov
movsb
mov
inc
movsl
mov
or
jbe
jae
inc
mov
aam
fcomp
pop
sbbb
sub
mov
adc
daa
pop
and
inc
cmp
dec
lock
jbe
mov
in
pop
jb
xchg
lods
push
sub
addb
cmpsb
aaa
or
fsubp
mov
push
pop
hlt
jnp
popf
mov
xchg
or
mov
lods
sahf
inc
je
orl
test
mov
xor
int
and
cli
mov
xchg
jbe
dec
inc
fs
sbb
inc
jl
adc
add
mov
jae
js
inc
cmp
dec
insl
imul
inc
xchg
jl
jne
mov
add
roll
push
insl
dec
stc
adc
lcall
add
push
out
or
addr16
out
add
out
add
inc
in
stc
jne
inc
push
popa
or
push
mov
popa
lahf
cmp
dec
mov
or
mov
pop
aas
clc
pop
xor
movsb
pushf
test
xchg
das
jecxz
adc
jl
test
stos
push
cmp
sbb
inc
fdivl
insb
ret
ja
push
lds
jmp
add
std
outsl
cmp
jbe
mov
in
cli
mov
psubusw
sbb
movsb
xor
cmp
pop
jae
flds
je
insl
sub
adc
mov
dec
push
lahf
out
mov
push
mov
cli
ljmp
mov
scas
mov
mov
mov
mov
adc
mov
aad
mov
clc
fdivl
jo
xchg
dec
leave
bound
jnp
add
mov
shll
daa
fiadds
xchg
adc
test
leave
subb
jge
push
or
add
push
mov
sub
std
mov
mov
jno
movsl
pop
xor
addb
sar
cmp
xor
jg
push
cmpl
movsb
jns
fisttps
jae
enter
fdiv
inc
es
mov
in
and
mov
dec
adc
cli
push
mov
mov
mov
imul
insl
push
mov
xor
push
xchg
neg
lods
pop
ror
inc
insb
mov
aam
popf
stc
aas
push
mov
and
popa
fs
inc
aaa
aam
sub
es
shll
cmp
stos
nop
ljmp
pushl
out
cmpsl
sahf
inc
push
out
shll
orl
unpcklps
out
fildl
pop
push
xlat
jbe
inc
sub
lahf
js
xchg
xchg
pushf
sti
cwtl
and
dec
insl
in
cmp
inc
fisubs
push
xchg
push
pusha
insb
adc
fistl
xchg
movsb
mov
sub
fwait
call
jo
dec
icebp
push
cwtl
sti
xchg
cmp
das
out
inc
pop
bound
or
mov
push
lret
subb
repz
movsl
int3
jnp
negb
cmpsb
and
stos
mov
mov
dec
lret
jbe
add
cli
es
xchg
aas
pop
mov
cmp
jl
fmul
jle
sbb
imul
cmp
add
mov
mov
mov
sbb
sbb
inc
add
mov
cmp
es
and
xchg
mov
out
aaa
ja
jl
ds
popa
ret
xor
mov
inc
cmp
int3
mov
jo
jne
jns
pop
in
aaa
in
loope
sub
jno
mov
adc
and
sub
ffree
xchg
cmpsl
push
push
lahf
add
lock
ds
mov
dec
xor
clc
mov
cmpsl
mov
out
imul
imull
inc
cwtl
leave
pushf
xchg
rolb
rorl
fisttpl
sub
or
push
add
sub
aaa
push
mulb
clc
sbb
pop
lods
ljmp
push
popa
mov
mov
scas
stos
sub
or
pop
fildll
stos
jmp
leave
dec
mov
fistpl
clc
add
orb
rorl
sbb
mov
or
mov
jmp
lods
imul
or
inc
movsb
mov
mov
lret
pop
cmp
rcr
jne
cmp
push
xchg
lahf
pushf
push
je
pop
outsl
data16
das
cld
adc
mov
add
idivl
and
mov
pusha
mov
popf
ljmp
inc
mov
jbe
incl
loope
mov
jne
jle
fwait
loopne
lret
adc
arpl
xchg
into
jno
jg
pop
pop
pop
and
pop
add
gs
sbb
in
ret
push
dec
movsl
ja
xor
test
scas
pop
popf
or
stc
pop
or
lret
push
orl
mov
divb
inc
lods
das
push
pusha
fsubrs
pop
mov
mov
sbb
sbb
adc
ss
das
out
popa
add
pusha
xchg
out
in
xor
aas
dec
lods
add
mov
mov
fimull
jo
scas
mov
mov
fxch
inc
jg
mov
dec
cmc
jle
fs
enter
dec
xchg
pop
xor
ficomps
jbe
lods
xchg
add
dec
xchg
movsb
inc
cmp
aad
push
dec
jg
jae
xor
jl
in
imulb
push
push
mov
xchg
in
sbb
in
jge
aaa
es
stc
call
arpl
ret
adc
pushfw
cmp
iret
jae
test
or
add
dec
xorl
lods
cmp
fs
xor
mov
stos
rclb
jle
lcall
outsl
xchg
sbb
and
ror
ret
sub
push
dec
adc
xor
xor
sbb
mov
leave
push
stos
test
pop
subl
lcall
ror
repnz
out
push
xlat
pop
pop
pop
and
add
push
mov
mov
pushf
pop
mov
jmp
xchg
jbe
xchg
mov
or
and
xchg
test
cmc
or
and
jecxz
loope
mov
jb
in
jge
hlt
cmp
sahf
lods
gs
sub
call
shlb
and
push
sub
inc
sarb
xchg
mov
adc
cmp
int
push
fiadds
jb
mov
jge
xchg
pushl
dec
out
mov
loop
pop
rol
dec
adc
dec
daa
pop
jle
call
jbe
inc
xchg
adc
mov
dec
das
mov
jno
mov
mov
mov
cmp
and
fldcw
mov
sub
call
or
dec
mov
cmp
dec
jnp
add
lcall
rorl
push
testl
aad
lcall
nop
pop
fisttps
mov
and
push
jecxz
dec
sub
movsl
in
outsl
jb
xor
fdivr
pop
pop
clc
or
cmpsb
stos
rcll
dec
movsl
xchg
pop
insb
mov
jecxz
cmp
or
push
mov
cmp
jecxz
mov
jae
dec
inc
sbb
ret
in
jmp
scas
mov
in
pop
out
jae
into
jae
mov
and
loopne
sbb
fbstp
sbb
cmp
sub
dec
popf
push
popl
mov
dec
out
push
push
stos
mov
jmp
xchg
stc
push
aas
bound
sbb
enter
cmp
mov
or
pop
repnz
jecxz
sbb
mov
ds
repnz
mov
sbb
leave
leave
jne
iret
lahf
dec
imul
clc
xchg
jle
or
jecxz
fnstsw
rorb
andl
cmp
or
push
dec
dec
pop
nop
roll
repz
dec
arpl
adc
or
out
mov
sti
mulb
stos
jp
popf
fsubl
cwtl
and
add
sbb
or
ljmp
xor
std
xor
xchg
insl
lea
cmpl
in
pop
orb
xchg
fs
lcall
or
cld
xchg
push
cmp
jo
imul
imul
add
and
xorb
test
or
xlat
xchg
pop
dec
lock
jo
add
hlt
in
push
test
in
push
cmp
into
jmp
jnp
push
sbb
jnp
xchg
sarb
and
popa
test
mov
cmp
enter
jno
dec
fnstenv
dec
cmp
add
add
push
ja
outsl
inc
xchg
lds
cmpsl
xor
sbb
repnz
fndisi(8087
mov
push
jne
cmp
cmp
cs
cmpsb
sti
jno
movsb
mov
ret
sub
xchg
push
adc
movsl
pop
inc
mov
in
pushf
ret
leave
sbb
mov
test
dec
jecxz
mov
out
mov
adc
loop
xor
xchg
dec
iret
test
pop
add
push
rorb
popa
addr16
sub
repz
orl
stc
in
sbb
cmp
inc
lahf
cmp
xchg
clc
imulb
adc
insl
shll
repnz
mov
sahf
xchg
fadds
dec
adc
sbb
repz
lea
push
jp
rcl
xor
mov
xchg
bound
or
fidivs
cmp
stos
leave
and
mov
in
scas
cltd
mov
jnp
inc
xchg
sahf
pop
addb
dec
imul
dec
mov
inc
inc
pop
jbe
int
js
loopne
insl
xchg
pusha
addr16
xchg
andl
movsl
mov
mov
inc
cmp
mov
loopne
adc
mov
arpl
jne
inc
pop
out
and
in
mov
psrlq
lahf
fistl
sbb
pop
push
sbb
ficomps
push
inc
movsb
adc
mov
ret
inc
enter
cmp
dec
dec
mov
je
jmp
ss
cwtl
xor
aaa
lahf
cmpsl
and
movsb
or
cmp
sarb
fstps
test
scas
mov
cmc
adc
mov
pop
xchg
or
lcall
mov
cmp
pop
stos
mov
cmpsl
cmp
push
cmp
xchg
push
or
ljmp
mov
repnz
aam
jmp
fisubs
pop
scas
pop
cwtl
scas
xchg
add
imul
repz
inc
push
pusha
sahf
je
dec
bound
ror
dec
and
aas
loope
mulb
or
or
lock
cmp
add
lods
pusha
push
iret
outsb
ror
sub
movsb
cmp
and
push
popf
push
jo
lock
inc
sbb
lret
pop
mov
pop
std
jge
je
add
sub
cmp
clc
js
adc
jbe
mov
lahf
jns
out
jle
pop
jp
loopne
in
rcl
lods
out
insb
test
orb
pop
xchg
pop
mov
test
jmp
sub
jnp
imul
loope
xor
test
or
outsb
push
les
loopne
push
dec
and
mov
data16
std
leave
inc
notl
adc
jmp
lock
cli
add
add
lret
sub
orb
xchg
cmp
mov
sub
push
fbstp
mov
inc
mov
in
cmp
sub
and
mov
popa
jns
out
jmp
jmp
out
addb
or
not
push
rcll
pop
dec
or
or
lods
adc
stos
test
sbb
mov
arpl
cs
in
pop
les
add
add
pop
push
icebp
orl
mov
mov
inc
and
repz
dec
fldcw
scas
mov
adc
gs
adc
sub
jecxz
xlat
and
decl
iret
daa
xor
push
icebp
mov
mov
loop
leave
out
push
sbb
pop
aaa
rorl
inc
jno
insl
mov
push
sbb
xorl
into
dec
xchg
enter
lret
jmp
lds
test
fsubs
pop
pushf
xchg
loope
iret
insl
xchg
inc
and
sbb
js
and
dec
add
arpl
repz
cli
adc
clc
hlt
xchg
jl
aaa
out
inc
xchg
out
out
shll
out
sub
pop
jbe
fbstp
std
cli
icebp
addr16
pushf
dec
loope
ret
or
add
xchg
out
and
xchg
push
mov
fldl
inc
jle
adc
push
dec
jl
daa
aad
sbb
out
mov
loopne
rorl
shll
xor
mov
dec
out
jae
jbe
pop
xor
ret
pop
enter
xchg
stos
popa
jo
xchg
jmp
in
dec
xor
pop
ficoml
jl
pop
stos
aad
add
mov
or
push
dec
add
rol
lret
ja
jmp
adc
aam
or
jnp
stos
std
clc
cli
cmp
int
mov
insl
mov
cld
cmp
rorl
gs
cmp
push
mov
imul
xchg
sbb
incl
xchg
jecxz
adc
in
loop
addl
pop
int
inc
pop
push
sbb
sti
cwtl
sbb
mov
add
mov
jg
jae
and
mov
and
cmp
loopne
xchg
push
je
stos
aaa
mov
addl
pop
pop
push
insb
sub
jl
xor
mov
les
jnp
fisttpl
negb
mov
aaa
repnz
and
pop
mov
add
adc
std
out
jns
lds
xchg
sbb
or
dec
les
xchg
shrb
mov
add
push
pop
jbe
xorb
xor
xchg
adc
add
int3
pop
lcall
mov
jg
ljmp
subl
xor
sarb
popf
int
iret
cmp
enter
std
fisubrl
insb
sbb
outsb
or
xor
pop
xchg
aas
inc
mov
mov
ret
cli
jg
in
mov
cmp
cmpl
in
adc
mov
adc
sub
lods
int3
or
jne
aaa
sbb
js
nop
leave
rcrb
sti
adc
out
hlt
pushf
inc
add
fldl
sub
jge
lret
loope
iret
hlt
push
sub
inc
mov
in
mov
add
mov
mov
adc
out
cltd
lock
jg
lods
and
cmpsl
loopne
pop
mov
or
and
lods
sub
les
xor
adcl
push
sub
mov
add
mov
or
inc
loopne
sbb
and
jecxz
out
ljmp
jns
mov
hlt
imul
sub
popf
cltd
out
jbe
repnz
mov
std
or
xor
add
ret
daa
sbb
cwtl
leave
inc
fidivl
cld
add
add
push
pop
xchg
daa
pop
or
push
aam
leave
add
and
push
fdivl
cmp
adc
xchg
push
adc
xor
test
incb
push
std
outsl
in
lds
shlb
push
or
je
pop
aad
imul
outsb
scas
jne
inc
cmpsb
rcrl
js
push
leave
imul
shrl
push
push
inc
popa
mov
mov
lds
push
ljmp
mov
mov
mov
bswap
lret
sbbl
dec
out
cltd
clts
pop
andl
bound
out
in
jne
push
mov
push
nop
add
xor
cmc
or
inc
cmpsb
xor
xchg
pop
jmp
mov
push
mov
pusha
adc
fists
jmp
mov
mov
negb
lret
pushf
xchg
icebp
mov
push
push
lods
test
ret
jne
xchg
jbe
sub
mov
es
dec
das
xchg
mov
sbb
pop
mov
fs
or
outsl
mov
push
push
mov
bound
jle
pushf
add
jmp
cwtl
fsubs
adc
sbb
fnsave
push
dec
call
sbb
inc
jne
divps
or
xor
mov
rolb
ret
outsb
inc
mov
pop
push
scas
test
lock
jl
sbbb
xor
in
das
mov
sub
push
in
or
gs
rcll
push
xchg
jl
adc
sub
add
testb
add
jnp
aas
xor
notl
ljmp
sbb
fldenv
in
loopne
pop
movsl
dec
popa
inc
bound
lea
add
cmp
dec
jecxz
negb
add
ret
int3
dec
dec
dec
daa
xchg
push
or
inc
or
pop
push
push
pop
push
jnp
or
mov
or
rcl
adc
and
adc
jmp
in
in
mov
sbb
mov
add
scas
cmpsl
inc
jecxz
fidivl
aad
and
mov
xorl
xchg
or
aaa
xchg
js
and
jg
dec
into
rorb
fistpl
pop
imul
xchg
cmp
mov
mov
iret
mov
out
ss
add
sub
push
gs
movsb
outsl
dec
mov
or
sbb
imulb
push
mov
add
daa
mov
scas
jns
insb
out
mov
sub
out
adc
pop
je
sub
out
mov
or
jp
mov
add
jmp
jae
loop
or
jno
frstor
daa
sub
mov
xor
stc
ret
push
xchg
sub
gs
dec
mov
pusha
bound
rcr
insb
dec
jbe
sub
sbb
addl
shl
lret
je
inc
mov
xchg
aad
lcall
out
insb
cmpsl
add
arpl
mov
add
xchg
imul
negl
push
shrl
sbbb
mov
jne
pop
fldcw
dec
push
pop
sarb
imul
mov
mov
and
inc
and
inc
loope
cmpb
sbb
push
mov
cs
push
cmc
insl
sbb
and
fcmovnu
sbb
inc
mov
bound
lea
ja
adc
icebp
dec
mov
mov
pusha
jg
adc
and
mov
jg
jne
sbb
loope
movsb
jb
sbb
xor
dec
mov
adc
sub
push
xor
mov
loope
adc
add
jge
fnsave
popf
jp
out
insb
xchg
fxam
inc
pop
call
dec
or
xor
push
lock
call
sub
and
xchg
sbb
sub
aas
mov
fisubrl
jg
mov
mov
shlb
sub
lds
inc
mov
sahf
mov
pop
outsl
sub
xor
mov
push
cmp
sahf
pop
jnp
xchg
xchg
stos
dec
mov
jae
cli
pop
and
lcall
cmp
mov
ds
daa
inc
xor
sub
pop
and
mov
dec
push
lods
xor
mov
out
test
fdivr
cli
data16
scas
test
cmp
js
scas
pop
dec
mov
daa
insl
xor
add
ja
testl
dec
push
mov
xchg
mov
pop
jns
cltd
lahf
pop
pop
dec
jl
ja
lahf
orl
jae
arpl
inc
add
ds
xchg
aad
cmp
and
inc
dec
dec
cmpsl
addr16
xchg
mov
ret
cmc
test
inc
lds
mov
and
aad
mov
dec
outsb
cmc
jne
mov
fisubl
inc
shr
stos
dec
sbb
pop
fisubrs
les
xor
pop
stos
pop
or
push
mov
out
bound
dec
inc
jl
das
and
ss
cmp
jae
xor
in
pop
lret
ds
sub
jbe
sub
sbb
dec
mov
push
push
sub
adc
pop
xor
idivl
imul
mov
push
rcr
mov
pushf
jae
cmp
insb
lock
sbbl
push
inc
jae
bound
dec
jle
and
dec
imul
add
mov
into
in
in
dec
cwtl
in
ret
sbb
xchg
mov
enter
scas
out
mov
sbb
in
mov
xor
scas
lods
mov
mov
loope
sub
in
sbb
icebp
dec
pop
jmp
push
xchg
lds
cli
bound
ret
je
sbb
out
lcall
fisubs
leave
push
cmp
sbb
rcl
sbb
jge
aad
in
subl
cmp
push
inc
xor
lcall
rolb
cmp
jb
push
dec
sahf
scas
jecxz
xor
mov
out
or
xchg
push
lahf
cmpsl
cmp
sti
push
mov
in
pop
sbb
cmpsb
push
cmp
ret
out
loopne
mov
push
repnz
dec
ljmp
mov
mov
repz
cmpsl
loopne
cwtl
xchg
fdivl
cmc
sbb
cli
dec
fs
nop
add
fimull
dec
das
gs
sub
xchg
xlat
lret
rcl
out
mov
int
inc
and
call
movsl
push
xor
inc
pop
ret
push
movsl
int
push
pop
dec
push
jmp
pop
mov
addl
mov
in
test
pushf
dec
inc
cmc
xor
sub
out
clc
xchg
cwtl
stos
xor
pop
inc
jns
je
jae
fistpl
lods
insb
in
cmp
or
push
and
lret
xor
inc
mov
mov
mov
jecxz
into
pop
in
inc
repz
push
and
in
add
mov
faddl
mov
cmp
inc
popa
push
xor
jp
clc
cld
shl
sbb
jne
std
imul
iret
lock
mov
add
and
fwait
pop
mov
mov
ljmp
popl
push
inc
icebp
sub
add
mov
xchg
adc
cmp
scas
inc
push
fsubrs
pop
popf
fmuls
xor
das
dec
imul
cmpsb
test
lods
pop
xchg
iret
ret
pop
xchg
testl
je
shlb
or
dec
pop
or
ja
daa
pop
rclb
pop
push
or
jbe
iret
aaa
sbb
stos
jo
cmpsb
lret
mov
test
inc
mov
jmp
sbb
xchg
lods
mov
imul
fs
gs
test
sbb
push
test
stos
in
xor
jg
dec
mov
loop
aam
roll
sbb
sbb
push
in
push
xor
xchg
insl
test
insl
adc
fidivrs
mov
pushf
lret
das
pop
loop
sbbl
xchg
stos
mov
lret
call
fimull
sub
pop
ret
mov
sub
dec
les
mov
jnp
pop
iret
xchg
jl
and
pop
adc
ja
int
add
xor
jmp
ss
lahf
pop
or
mov
imul
xor
cmpb
pop
dec
cmp
sub
ds
fisttpll
push
cltd
and
es
mov
popf
test
push
into
cmpsl
in
and
out
iret
mov
aam
aam
sbb
push
in
push
jle
mov
mov
mov
xchg
mov
in
pushf
xchg
push
clc
and
inc
push
xchg
mov
and
jecxz
push
mov
sbb
xchg
aas
out
lods
add
popa
data16
mov
dec
inc
or
adc
ret
hlt
fmull
aas
lock
lahf
lods
fsubp
icebp
xchg
lds
or
xchg
add
cwtl
sub
jle
mov
addr16
cli
pop
outsb
int3
push
sbb
mov
or
int3
dec
fldt
adcb
gs
adc
fwait
jno
out
mov
push
mov
xor
mov
aam
jg
jle
adc
sbb
and
adc
dec
pusha
test
ja
xor
gs
dec
adc
jnp
insl
movsl
es
out
add
mov
inc
in
fldt
pop
cmp
adc
mov
jmp
mov
inc
xchg
arpl
mov
ljmp
lret
mov
lahf
dec
push
mov
xchg
inc
test
mov
data16
ret
xchg
jo
ret
xchg
nop
mov
fmulp
icebp
jge
bound
arpl
sub
inc
fldl
sti
les
jne
adc
sbb
or
inc
loope
sub
out
fldl
mov
dec
lea
clc
in
cmp
jbe
icebp
icebp
fisubs
mov
xchg
push
addl
hlt
lret
xor
push
inc
push
movsb
in
shll
pop
pop
sbb
inc
arpl
mov
jle
ret
add
jl
inc
repnz
jg
cld
lds
out
lods
mov
mov
pushf
scas
fwait
mov
shr
scas
cmp
insl
insl
stos
pushf
sub
loope
decb
ja
jl
inc
pop
lds
dec
jmp
in
nop
or
push
inc
leave
neg
nop
add
push
push
ficomps
les
sub
or
pop
xor
out
xchg
sub
aas
mov
adc
in
lods
adc
mov
pop
and
lidtl
fdivrs
lock
mov
cwtl
insl
movsb
mov
es
mov
jnp
sub
cmp
xchg
popa
mov
inc
scas
ljmp
mov
in
add
xor
pusha
shlb
xchg
mov
js
iret
jbe
addr16
je
lods
sub
pop
push
cmp
nop
mov
mov
sub
loopne
push
or
imul
sbb
out
ja
ret
mov
add
xor
mov
ret
push
sbb
loopne
jnp
xchg
cli
push
cli
outsb
bound
sbb
out
aam
out
or
ljmp
gs
or
xchg
je
inc
in
pop
addr16
fs
fidivs
lods
push
dec
out
pop
imul
mov
push
int
je
aam
inc
sbb
shlb
sahf
sbb
ss
mov
add
sbb
inc
sbb
hlt
ss
or
scas
sahf
mov
or
in
jne
loope
inc
and
loopne
pop
icebp
sbb
add
pop
add
aaa
cmc
stos
sbb
pop
adc
mov
lds
pushf
fcompl
sarl
pop
fimull
repz
imull
jp
pushf
and
inc
mov
sbb
mov
push
jne
and
ret
inc
pop
lret
inc
push
data16
sub
jmp
imul
lahf
mov
popa
push
frstor
test
loope
xor
dec
xchg
push
lret
testb
lea
add
mov
arpl
xchg
mov
call
cli
ret
pop
fs
or
sbb
popf
sarl
mov
sbb
loopne
mov
mov
sbb
ret
pop
ss
mov
and
sbb
jae
and
dec
inc
rclb
scas
lret
sub
jnp
mov
insb
jnp
rcll
fadd
dec
jecxz
xchg
cmpsb
mov
mov
push
mov
xchg
jne
popf
jmp
jbe
xchg
cli
imul
adc
xchg
arpl
fldl
push
cmp
push
and
mov
lcall
test
mov
mov
test
xchg
sbb
insb
push
sub
push
mov
sbbl
xor
repz
sub
imul
inc
jno
int3
mov
dec
inc
fdivrl
jle
inc
cmpsl
jae
xchg
xorb
push
leave
lods
xor
iret
mov
mov
fidivl
adc
mov
das
jmp
xchg
mov
cltd
sbb
lret
out
in
mov
push
in
adc
push
cmp
jg
push
mov
push
sbb
in
or
push
push
ss
inc
lcall
repnz
mov
push
rorb
hlt
sbb
shl
push
idivl
xor
aas
add
jle
icebp
enter
mov
aam
jnp
cmpsl
cmpsl
cmp
mov
cmp
roll
adc
notb
out
mov
sahf
pop
add
push
lods
jmp
push
fwait
mov
dec
sbb
jns
aas
aas
mov
out
notb
push
xchg
test
mul
fstpt
sti
xchg
test
sub
xor
jl
lcall
mov
mov
xchg
ffree
adc
lret
movsb
mov
sbb
in
lds
repnz
mov
es
ja
ljmp
cmpsl
inc
stos
lock
cmp
adc
sarb
adc
popf
shrl
xchg
xlat
adc
sub
mov
adc
in
adc
adc
jmp
add
inc
shlb
mov
mov
pop
fcmovnbe
mov
cmp
xchg
mov
scas
xor
fs
mov
mov
hlt
int3
mov
cs
sub
iret
xchg
arpl
or
outsb
sub
cwtl
push
test
jl
outsl
movsb
pop
clc
test
dec
adc
mov
push
inc
pop
enter
test
es
cmp
dec
movsl
push
xor
pop
push
xor
xor
dec
arpl
xchg
das
sbbl
jnp
fstl
jnp
outsb
or
in
movsl
cld
repnz
add
out
jecxz
scas
and
int3
and
mov
gs
sub
adc
rol
adc
sbb
cmpl
jnp
xchg
fcoms
mov
ret
cmpsb
dec
leave
pop
gs
mov
idivb
mov
outsl
add
inc
dec
je
jo
out
xor
fidivrl
dec
sub
pop
push
and
ljmp
mov
aad
iret
sarl
pop
dec
aas
dec
cmp
cmp
mov
cltd
sbb
cltd
fldl
sahf
mov
je
insb
inc
stos
test
fldt
and
divb
data16
mov
fstpl
mov
cmp
ret
mov
movsl
call
or
pop
push
dec
das
arpl
add
pop
sbbl
push
imulb
dec
cs
mov
mov
lahf
jp
lock
dec
fstpl
movsl
int
push
popa
dec
out
cmp
fwait
jmp
sbb
sub
jecxz
mulb
mov
mov
rcl
lsl
mov
popa
pop
cmp
stos
sub
hlt
lcall
popa
pushf
xchg
and
test
xchg
mov
popa
mov
and
jnp
mov
sbb
xchg
inc
pop
in
sub
out
out
ss
push
out
out
mov
je
fwait
insb
push
jno
insb
xchg
push
xchg
call
dec
inc
dec
pop
dec
repz
push
cmc
mov
adc
fadd
cmc
pop
xor
lret
repz
daa
in
push
idiv
in
rcrl
inc
or
arpl
stc
out
roll
add
pop
ljmp
adc
jmp
xchg
enter
int3
pop
and
in
and
jae
out
mov
xor
sbbl
roll
dec
hlt
stos
or
cmp
cmp
jg
jmp
notb
es
test
mov
add
in
addr16
and
mov
aaa
lods
xlat
sbb
adc
into
jno
lahf
mov
jbe
mov
out
adc
pop
rcpps
fsub
xchg
loopne
and
iret
addr16
mov
in
inc
in
add
fbld
xchg
xor
push
mov
push
xchg
mov
or
mov
mov
xchg
adc
es
out
lods
adc
xor
jb
push
inc
pop
out
lcall
inc
cld
in
xor
dec
or
sbb
inc
inc
andb
lds
xchg
addb
mov
adc
popa
popa
js
aas
into
dec
mov
movsl
shll
push
fistps
hlt
cwtl
push
jecxz
xchg
out
pop
lock
cmp
sbb
mov
lods
gs
shl
loope
inc
mov
popf
loop
adc
lds
lds
and
mov
sub
and
shr
pop
xor
mov
dec
aaa
lods
push
shrb
lods
lahf
and
imul
les
adc
icebp
and
fidivrl
pop
push
and
shl
popf
or
lock
arpl
sahf
or
adc
ljmp
lcall
repnz
leave
fyl2x
rcl
mov
add
shl
orb
jp
jmp
in
push
out
jle
xor
popa
pop
cmp
popa
sti
dec
sub
xor
js
sub
or
sub
xor
pop
daa
dec
cld
lcall
cmp
nop
inc
inc
arpl
add
mov
popf
or
push
mov
lods
cmp
fsubp
xor
jns
out
pop
and
push
jmp
mov
dec
add
mov
inc
mov
cltd
das
or
jmp
sub
lcall
test
sti
pop
dec
in
add
std
jecxz
aas
cs
scas
aad
dec
and
lods
cmp
jl
and
dec
mov
icebp
push
fsubrs
enter
pusha
mov
movsl
test
jmp
push
rorb
hlt
test
mov
fistps
stc
cltd
test
sbb
dec
call
pop
mov
aas
dec
movsl
stc
cmp
mov
add
popa
sbb
or
cltd
jmp
add
pop
lret
cwtl
arpl
pop
adc
mov
out
mov
test
sbb
std
test
push
or
fisttpll
scas
xor
ja
sub
hlt
std
adc
pop
popf
inc
popa
and
std
aaa
sbb
popf
outsb
dec
cwtl
sti
cmp
push
mov
and
pop
mov
jbe
add
xor
jne
xchg
rcll
mov
push
sbb
xor
sbb
mov
xor
dec
lock
test
add
inc
push
rol
adc
fcmove
data16
int
adc
jg
in
scas
sub
ljmp
popa
lcall
inc
xchg
jo
loopne
xchg
jp
mov
loopne
daa
test
aas
dec
xor
push
stc
dec
sub
xchg
pusha
cs
xor
dec
ret
pop
adc
cmp
cmp
fmul
inc
lods
push
fisubrs
scas
dec
in
xor
mov
testl
mov
or
xor
sarb
jmp
orb
fmull
mov
scas
std
jp
push
cltd
je,pn
push
movsl
fsub
stc
dec
xor
sub
scas
jle
dec
mov
jae
add
mov
jbe
add
or
and
pop
dec
mov
push
inc
jp
in
lahf
test
nop
mov
sub
pop
or
imul
or
jbe
and
shl
pop
xor
clc
stos
jl
dec
insb
and
dec
cmp
ss
test
sbb
dec
repnz
adcb
sbb
fxtract
flds
or
shrb
pop
test
cmp
jbe
cwtl
imul
adc
pop
js
jnp
cmpsb
push
cmpsb
xchg
dec
ret
out
sbb
daa
add
fimuls
fs
jb
enter
add
cmp
sbb
mov
add
mov
push
sbb
faddl
jmp
stos
mov
out
mov
inc
cltd
jp
dec
ror
or
and
mov
pop
adc
out
in
ja
and
xchg
xchg
iret
dec
push
into
and
push
cwtl
fisttpl
nop
paddusb
insl
mov
test
icebp
pop
pop
jns
negl
rcrl
daa
xchg
mov
addl
sbb
cmp
push
jmp
sbb
sahf
aas
leave
cwtl
cmp
inc
nop
fcomip
inc
push
xchg
fsubs
gs
or
jb
and
mov
push
or
mov
mov
sub
jnp
test
xchg
dec
xor
sbb
add
ja
mov
xor
dec
mov
ror
mov
repnz
adc
xor
push
icebp
or
notb
and
aad
cwtl
xchg
out
mov
scas
arpl
cmp
shll
aam
insb
adc
jg
sbb
dec
cmc
add
mov
fadds
mov
out
lock
xchg
jl
pusha
aaa
jno
das
mov
fstps
mov
pop
popa
test
insl
ljmp
jmp
pop
mov
mov
loope
out
out
je
movsl
and
std
fisubs
sub
imul
push
jae
push
adc
loopne
rcl
xor
push
mov
xor
pushf
or
cmp
std
cltd
sbbb
add
pop
xlat
jae
cmp
addr16
push
sar
push
add
add
pop
ror
jne
dec
repz
and
leave
lcall
xor
mov
xor
mov
aas
fdivrp
iret
pop
push
dec
lock
in
push
mov
pop
cmp
sar
fcomp
jnp
cmp
xor
into
cmpsb
mov
ret
pop
jb
notl
shll
std
out
icebp
push
enter
aad
lock
pop
mov
sbb
popa
fiadds
sub
out
jl,pt
jae
xor
sar
out
test
repz
push
dec
xchg
fistl
pusha
icebp
jmp
sub
sub
lods
and
loop
dec
sub
inc
scas
pop
push
hlt
out
xchg
cmc
mov
dec
in
sub
aaa
fdivr
push
push
pop
sbb
or
pop
or
mov
lret
lods
es
sti
jp
stos
sub
or
daa
es
and
repz
pushf
fs
int
pop
cmc
mov
jb
sub
mulb
test
je
adc
add
cwtl
js
inc
into
pop
daa
pop
dec
pop
out
jno
mov
inc
adc
jg
sar
cs
ficompl
outsb
pop
fcoml
mov
ffreep
cltd
sti
sbb
mov
push
and
dec
mov
cmpsl
jl
xchg
dec
inc
cmp
test
movsl
xchg
or
inc
push
sarb
push
cmpsb
jcxz
pop
popa
xlat
imul
xchg
jnp
xchg
lock
jno
mov
cld
outsb
icebp
mov
out
mov
adc
rcll
lea
std
js
sbb
pop
fwait
divl
fs
leave
and
sahf
or
lods
cmpsb
popl
stos
ljmp
pushf
stc
imul
push
clc
adc
gs
lds
cltd
packssdw
push
cmpsl
movsb
fwait
add
jae
pushf
xchg
mov
mov
bound
jae
pop
adc
xor
xlat
scas
mov
dec
loop
inc
cmp
movsl
push
mov
mov
test
adc
adc
and
sub
xchg
jno
int3
scas
mov
mov
call
ret
jp
xor
lcall
jo
call
adc
mov
mov
popf
arpl
or
mov
fnsave
pushf
test
cwtl
fsubr
or
mov
ljmp
mov
cmp
test
jnp
xor
jo
aam
push
push
filds
sub
out
pop
fiadds
inc
adc
adc
loope
xchg
sbb
mov
sti
xchg
ja
ja
mov
in
adc
inc
sub
xor
jno
mov
xlat
add
into
pop
cs
ds
stos
inc
cmpsb
fstps
cli
pop
roll
inc
and
pop
test
jg
xor
add
cmp
add
mov
ja
lds
ds
jo
scas
test
xchg
and
aaa
data16
loopne
push
std
mov
les
pop
inc
insb
imul
xchg
add
xor
jne
movl
and
sbb
xchg
inc
dec
lock
pop
test
pusha
mov
pop
mov
mov
sub
pop
xchg
aaa
stos
clc
int3
pop
bound
cltd
or
mov
test
imul
push
add
pop
stc
push
fcmovu
das
popa
loope
pop
insl
xchg
jno
sub
fdivs
push
adc
add
lcall
ret
loope
pop
into
scas
into
inc
cmp
or
push
insl
add
iret
cli
xor
add
inc
je
movsl
mov
push
mov
sub
lea
and
fwait
push
and
inc
push
ja
mov
outsl
mov
imul
shll
mov
mov
dec
pop
inc
lcall
and
ret
xor
or
and
andl
cmp
pop
aam
sbb
mov
push
xchg
lahf
mov
push
mov
loope
mov
or
xor
shrl
push
pop
sub
cs
cmp
pop
sbb
push
shl
insl
mov
push
cltd
mov
sub
cltd
push
fs
pop
add
adc
mov
xor
pop
dec
lds
je
insb
inc
fidivrs
movsl
outsl
bound
inc
loope
ds
or
je
pop
gs
pop
hlt
mov
mov
cmp
pop
mov
inc
xor
inc
or
sbb
cld
adc
fdiv
cmp
sub
sbb
and
mov
in
mov
cmpsl
gs
in
mov
mov
mov
cld
pop
mov
jne
push
les
xchg
inc
and
dec
movsb
fwait
sbb
repnz
sbb
sub
loope
mov
dec
cmp
sub
pop
or
lods
add
sbb
mov
lods
iret
iret
rorl
and
dec
xchg
lock
std
sbb
jae
sub
pmaxub
xor
or
cmp
mov
jbe
inc
jl
xchg
jge
push
cmp
xchg
and
cltd
mov
mov
andb
cmp
je
jae
mov
mov
push
jo
enter
movsb
inc
or
jecxz
dec
mov
daa
xchg
popf
push
xor
inc
in
or
shrb
std
mov
repnz
aas
xlat
imul
sub
sub
mov
push
in
jg
add
sub
push
mov
js
push
lods
sti
xchg
jp
test
loopne
or
pop
int3
test
pusha
jno
pushf
dec
jbe
xor
mov
inc
sbb
jge
repz
repnz
imul
mov
push
ret
mov
insb
sti
int
pop
loope
jne
inc
push
cwtl
adc
mov
fucomi
mov
push
or
fmul
dec
dec
lods
nop
rcrl
mov
in
cmp
dec
sbb
add
adc
cmp
addb
outsl
clc
inc
bnd
xchg
iret
pop
es
add
inc
daa
sub
lods
push
push
jmp
les
filds
subb
sbb
push
test
mov
iret
in
sbb
sbb
push
cmp
lcall
sub
clc
cmp
mov
cltd
loopne
xchg
sahf
pop
lcall
push
aas
in
stc
insb
pusha
and
mulb
dec
loopne
pop
fs
cwtl
aas
sbb
sbb
sbb
ss
xchg
in
mov
sbb
jnp
std
sub
and
mov
notl
andb
in
cli
sub
mov
in
xchg
cwtl
insb
push
pushf
adc
push
iret
ss
jno
mov
cli
sub
negl
cmpsb
add
movsb
mov
insb
pop
shll
mov
mov
sub
sub
inc
pop
cmc
icebp
sbb
in
add
mov
xor
lahf
add
loop
fs
scas
add
add
xchg
out
fcmovb
push
je
ja
add
hlt
sbb
inc
fwait
mov
xor
lcall
ficomps
jne
movsl
cmpsb
lahf
add
jl
mov
ret
jl
sbb
lcall
ljmp
fsts
sub
mov
cmp
mov
sub
ret
ret
in
sub
mov
stc
gs
xchg
adc
push
mov
int
filds
push
adc
xlat
xchg
mov
sub
pop
sub
adc
push
add
stos
mov
jp
cmp
mov
and
push
scas
loopne
shll
push
shl
jnp
fidivrs
pushf
fwait
mov
adc
daa
mov
in
and
jo
fnsave
aas
icebp
lret
insl
orps
dec
insl
ss
repnz
mov
adc
jb
rcr
adc
ja
fadds
xchg
mov
stc
jle
enter
and
mov
bound
fisubs
inc
mov
adc
or
jecxz
int
ret
in
mov
data16
jae
call
test
test
mov
jnp
fnsave
pop
out
arpl
ds
rep
andb
lods
scas
or
ret
inc
test
adc
xlat
adc
mov
mov
into
cmpsb
pop
xchg
push
or
test
inc
jb
pusha
gs
and
lahf
enter
notl
pop
nop
mov
fucomi
inc
int
lcall
cltd
repz
mov
xchg
test
out
lods
jp
fcoms
jae
mov
push
add
push
cmp
testl
mov
dec
fs
mov
icebp
sbb
mov
push
fidivl
mov
push
mov
pop
mov
shll
lods
sbb
ljmp
loope
xor
js
and
cs
imul
add
aam
or
xor
ret
movsb
ret
icebp
dec
xchg
cld
mov
mov
mov
pop
and
mov
fwait
mov
cmp
sbb
scas
add
lret
mov
push
add
hlt
out
xor
push
fdivs
cmp
pop
add
fdivl
pop
pop
adc
scas
mov
add
daa
clc
xor
xlat
mov
push
add
test
xor
jne
call
cmpsl
cmc
lret
in
cmp
push
ret
mov
cmp
out
sbb
lods
aaa
sbb
lods
stos
and
jb
dec
pushf
sub
and
stc
in
mov
loop
dec
iret
xlat
adc
inc
repnz
lds
add
mov
cmpsb
jecxz
std
jl
cmp
sti
adc
testl
jbe
xchg
cltd
repz
push
aas
cli
pop
popa
jbe
into
add
lods
mov
adcb
push
outsl
mov
aam
and
jp
push
sbb
add
mov
outsb
jo
jl
jne
testb
in
add
ret
cmp
add
mov
push
or
or
mov
push
add
test
imul
push
and
lcall
rcr
fnstsw
cmp
stos
mov
mov
cmp
andl
or
jno
fwait
push
pop
popa
mov
inc
push
out
xchg
ret
sub
fs
sbb
leave
adc
mov
je
or
cld
cmpsb
xor
push
movsb
mov
sbb
movsb
mov
sbb
jmp
pop
pop
jecxz
out
jecxz
popf
mov
xor
mov
pop
mov
loop
or
and
stos
loope
sub
cmp
mov
mov
mov
mov
std
pop
imul
addr16
jae
in
mov
ret
adc
jnp
rorb
push
loopne
add
stc
mov
dec
out
add
mov
fisubrl
out
mov
mov
aam
dec
adc
xor
ret
mov
daa
imul
mov
dec
sbb
aam
jl
mov
adc
repz
mov
and
xchg
out
stos
fldcw
mulb
adc
cld
mov
mov
mov
jl
inc
in
inc
sbb
push
jp
shll
test
adc
test
jl
lret
fcoms
lock
ret
cmp
pop
push
jbe
jae
and
sub
cli
fmul
bound
cmpsl
ja
aad
adc
jno
pop
jp
xlat
push
fldcw
jne
xchg
dec
cli
pop
stos
mov
adc
mulb
xlat
in
jmp
lcall
pushf
fs
mov
sbb
push
mov
js
xchg
and
dec
sbb
or
dec
jno
xchg
xor
jmp
std
lret
popf
mov
dec
inc
pop
lds
jecxz
lods
scas
cmp
push
jle
loop
cltd
lret
adc
shr
or
lret
ja
and
inc
push
xchg
pop
fadds
insb
popa
jno
and
sti
cli
push
jg
nop
jl
aaa
push
cmp
xchg
movsb
pop
xor
push
cld
in
mov
xchg
add
insl
xchg
in
dec
dec
scas
xor
pop
and
xor
sbb
out
cwtl
dec
adc
push
mov
clc
clc
push
cmp
adc
xor
aaa
pop
xchg
iret
ja
or
sub
inc
pop
stc
jnp
push
add
xchg
xchg
adc
add
cli
mov
sbb
add
fimull
fstps
adc
jb
inc
mov
ror
sbb
rcrb
inc
pop
push
call
movl
sub
pop
stos
push
add
ficoml
sahf
xchg
fs
inc
lea
xchg
insb
push
das
popa
xlat
push
push
sahf
mov
sbb
mov
mov
hlt
lods
insl
mov
sbb
adc
dec
mov
cmp
or
pop
lds
dec
repnz
into
mov
jb
and
test
xchg
lcall
fistps
pop
pop
cli
jg
scas
mov
push
jnp
or
and
jg
cmpsl
in
xchg
xor
sbb
jbe
js
and
mov
xchg
adc
mov
loop
imul
pop
xchg
jp
pop
mov
repnz
repnz
add
lds
sub
push
pop
xchg
xchg
cmp
rol
jno
xor
ror
std
add
out
out
xchg
xorb
xchg
push
xchg
xchg
aas
adc
sti
addr16
push
sarb
or
mov
inc
jb
push
mov
xchg
ss
cmp
loopne
mov
fdivrl
add
and
in
in
add
pop
sub
lret
inc
inc
and
fnstsw
sub
jne
fildl
shl
cmpsl
xor
inc
fwait
loope
dec
add
mov
out
mov
xchg
fisttps
push
mov
mov
dec
test
fsubl
jge
sbb
cmc
mov
mov
aam
mov
sbb
sti
in
inc
sbb
fsubr
in
gs
jp
jp
imul
js
xchg
in
mov
jnp
pop
movsb
and
in
jp
pop
lret
or
jae
sti
add
outsl
test
fistl
mov
subl
imulb
daa
or
shll
imul
rcl
dec
fildll
cli
jb
cmpsb
mov
and
es
jmp
adc
mov
dec
mov
push
mov
aaa
out
cmc
enter
and
cs
xor
lret
inc
test
test
pushl
pop
lea
je
jb
lahf
cmp
fists
aas
add
xlat
xchg
push
or
das
loopne
jns
loopne
movsb
jmp
or
je
mov
iret
jb
ficompl
jp
cmp
xchg
rcrb
ret
pop
int3
add
cld
scas
pop
mov
and
xor
std
out
mov
xor
les
loop
adc
mov
jbe
jecxz
sub
repnz
data16
pop
xorb
addr16
sbb
pop
dec
sbb
sub
and
or
add
push
and
and
or
add
data16
fdivrp
adc
push
sub
or
ljmp
sbb
movsl
mov
pop
jns
outsl
dec
cmp
and
movsl
jo
nop
xchg
leave
rclb
inc
orl
jo
out
push
pop
clc
setge
out
int
cli
add
mov
cwtl
popf
lock
pop
ret
shr
shrb
pop
jno
in
subb
or
jge
inc
es
aad
push
jbe
push
loopne
fwait
popf
shld
clc
and
sbb
cmp
xor
in
cli
sahf
sarl
jle
aad
and
das
mov
mov
or
cs
cmpsb
shrb
pop
xchg
xor
ss
bound
jae
sti
xchg
test
dec
mov
push
and
xor
cmp
inc
jbe
or
jo
mov
cld
shrl
fstpl
fimull
imul
orl
pop
xor
pop
xchg
jmp
les
pop
lret
out
cmpsl
sbb
jnp
pop
push
push
addr16
sti
jle
inc
mov
and
xchg
imul
clc
fldenv
outsl
pop
fcmovbe
repz
cmpb
xchg
loopne
jne
lret
sub
icebp
loopne
aas
pop
jnp
rorb
push
cmp
xor
fiadds
pop
lock
sub
mov
fs
in
sub
gs
xchg
cmpsl
mov
jbe
in
xchg
adc
jns
adcb
arpl
aam
std
jge
sub
and
data16
sarl
hlt
cmp
cmp
test
stos
push
xor
mov
icebp
fistpll
inc
lods
lods
and
ret
pusha
cld
xchg
test
xlat
adc
les
cmp
aas
adc
sti
jnp
jae
mov
insl
shll
aam
cmp
xchg
sbb
pop
popa
popa
js
add
inc
cmpsb
fs
sbb
jecxz
aam
mov
shl
or
es
popf
cmp
rorl
test
push
lahf
sbb
hlt
jmp
es
out
jle
adc
fisttps
popa
pop
xchg
and
xchg
insl
push
movsl
push
jb
sbb
loop
adc
in
jno
pushf
sbb
rorb
and
add
imul
popa
insl
stos
xor
pop
or
bswap
mov
jge
jo
cs
cltd
or
imul
sahf
pop
hlt
push
andb
cmovnp
push
pushf
repnz
and
mov
out
shl
cmpsb
lahf
cld
adc
jne
mov
fs
mov
jp
inc
dec
add
adc
sahf
iret
lds
push
add
or
rcrb
daa
into
das
out
jg
repnz
cmp
push
adc
nop
mov
ror
xor
test
gs
sbb
fwait
mov
fwait
cmc
push
xchg
divb
lcall
or
xchg
push
xchg
xchg
insb
add
push
dec
fstl
dec
xchg
mov
fmuls
jb
stos
or
push
cmp
imul
lods
push
lret
int
cmpsl
mov
push
inc
inc
or
cmp
frstor
cmpsl
out
aam
xor
cld
nop
inc
push
dec
mov
loopne
and
dec
insb
shr
xor
fisttps
addl
popa
popf
dec
or
shrb
stc
rcll
xor
jns
idiv
popa
sahf
mov
sbb
jle
lds
subb
fwait
gs
push
in
cld
jb
and
pop
je
dec
call
add
sbb
push
stos
in
stos
aam
pop
push
ret
pop
dec
fsubrl
pop
xor
rorl
or
jl
ljmp
popa
push
xlat
pop
imul
add
into
pop
shlb
add
cmp
sbb
fs
loopne
or
mov
adc
js
out
bound
btc
lcall
mov
repnz
test
push
leave
je
test
xlat
push
cmpsb
sbbb
mov
lret
inc
test
dec
aad
mov
adc
pop
adc
xchg
pop
fs
dec
pop
into
loop
fimuls
repz
scas
cmovbe
pop
mov
movsl
iret
xchg
in
test
xor
lret
rorl
stos
call
jmp
adc
daa
pop
ds
pop
ja
sbb
iret
mov
mov
dec
cltd
add
jo
and
popa
and
adc
das
sbb
lret
fdivrs
cmpsl
push
incl
xchg
adc
cmp
imul
xor
fisttpl
imul
xor
xor
add
les
sbb
sbb
sbb
sarl
jbe
outsb
jns
out
out
xchg
roll
data16
in
imul
or
xor
cmp
add
jmp
inc
pop
sbb
sbb
inc
imul
sbb
fisttps
sub
add
fcoml
xchg
rorl
inc
jmp
push
or
push
sub
addb
leave
lret
out
lret
jnp
mov
jmp
lea
mov
add
ret
icebp
out
or
cmp
push
push
repnz
ror
ja
sub
jbe
push
repnz
cs
scas
aam
aad
shlb
sbb
sub
cmp
mov
call
mov
lods
push
jne
xor
sbb
or
cmp
jb
stos
ss
adc
movsb
aam
pop
mov
ljmp
xor
nop
xchg
std
xchg
jo
or
das
dec
ret
movsb
in
xchg
inc
pop
out
fidivrl
aad
inc
addl
xchg
fildl
js
aad
sub
xchg
xchg
mov
adc
adc
mov
push
jbe
insl
or
ret
inc
aad
ss
sub
out
adc
and
adc
pop
mov
sub
add
sub
mov
sbb
inc
arpl
add
jmp
movsb
sbb
push
lods
test
adc
adc
push
and
sub
and
or
call
out
shll
dec
out
addr16
aaa
frstor
out
jns
sub
fcomps
into
xlat
push
and
mov
sub
test
rcl
mov
dec
mov
jae
and
xchg
sbb
cmc
mov
cmp
xchg
fistpll
lret
imul
jge
mov
nop
inc
aas
or
sbb
aad
cmp
loopne
sahf
mov
rorl
cmpsl
add
jp
lret
sbbb
dec
sbb
ds
cmp
mov
gs
jp
loope
outsb
pusha
imul
push
add
mov
or
mov
cmp
sti
push
push
mov
je
adc
add
pushfw
cmp
pop
jno
movsl
lahf
leave
push
negl
xor
test
cld
mov
iret
push
das
sbbl
xchg
add
dec
push
lods
lea
jl
mov
stc
sbb
das
push
push
mov
fdivs
dec
inc
in
fistpl
dec
mov
and
or
lret
inc
aaa
push
cmp
or
iret
mov
adc
pop
lods
mov
pop
mov
push
mov
push
jmpw
fdivs
stc
pop
ret
stos
and
xor
fcoms
test
imul
jns
hlt
sub
xor
jns
push
xchg
cmp
out
test
outsb
jb
out
repz
sbb
cmp
inc
push
mov
jg
andb
call
and
pop
popa
fnstcw
outsb
lret
das
js
sbb
push
mov
push
add
add
pop
inc
mov
data16
dec
sbb
jle
nop
cmp
aad
ss
in
sbb
inc
pop
loop
jge
adc
cmc
aad
into
add
mov
mov
repz
lcall
popa
xlat
xchg
add
aaa
dec
dec
jnp
bound
test
gs
int
and
or
data16
fwait
inc
or
pop
mov
mov
xchg
jnp
or
outsl
xor
inc
pop
jo
jne
mov
int
jb
jnp
shlb
jmp
mov
jg
adc
in
ja
into
mov
rcr
xor
xchg
xor
repnz
cmp
adc
adc
jle
jno
das
insl
dec
jmp
lcall
divl
mov
mov
xor
cmp
dec
lcall
lahf
clc
out
je
adc
push
xor
lea
mov
inc
out
jno
aam
das
adc
xchg
lret
clc
shrb
dec
mov
loopne
pop
mov
push
mov
lods
orl
hlt
pop
mov
js
pop
adc
jg
add
inc
cmp
call
inc
adc
loop
pop
lea
adc
adc
mov
leave
idivb
and
adc
lds
rorl
mov
rorb
movmskps
in
not
mov
pop
leave
pop
sub
add
clc
mov
dec
lods
cmp
xchg
jno
mov
into
jl
icebp
inc
sbb
sub
xor
push
stos
test
adc
adc
cmpsb
pop
dec
adc
out
and
dec
jno
push
jg
mov
fadds
add
mov
sub
and
sub
fbstp
adc
jo
jbe
mov
xchg
cli
hlt
fwait
daa
jb
xchg
pop
sub
out
mov
addr16
pusha
and
stc
clc
fisttps
sbb
pop
mov
xor
or
add
cltd
sbb
inc
inc
hlt
push
and
scas
lods
push
pushf
loopne
scas
movsb
adc
fucomp
bound
aas
sbb
neg
sti
enter
pop
cmp
mov
loop
stos
and
sbb
sub
mov
mov
jae
hlt
and
test
movsl
push
mov
ret
pop
std
xchg
pop
mov
mov
xchg
out
insb
add
stos
imul
sbb
pop
fistl
jp
es
in
mov
rclb
pop
lret
fsts
lea
insl
in
lea
in
xchg
mov
pop
cmp
dec
test
hlt
push
pop
add
add
test
popf
call
mov
adc
movsb
stos
das
movsb
loopne
adc
out
jo
sbb
sti
pop
inc
jnp
pop
in
movsb
sarb
movaps
adc
xchg
dec
xchg
cmp
inc
jp
sbb
jb
mov
sbb
lret
add
hlt
ja
jo
aaa
lea
jp
sbb
xchg
out
addr16
and
jbe
rclb
inc
or
lock
sbb
mov
or
xor
mov
scas
sub
loopne
mov
fs
in
pop
aad
cmc
push
orl
pusha
sub
or
mov
inc
xor
jge
adcb
sbb
pop
test
cld
mov
clc
movsb
adc
jg
fnstenv
into
fbld
arpl
mov
jp
cmp
mov
xor
mov
push
fdivr
add
je
pushf
dec
fs
xchg
jg
push
push
pop
je
inc
imul
pop
xchg
pusha
cmp
bnd
je
jge
push
cmp
jne
pop
movsl
lcall
gs
push
sbbb
je
ljmp
xchg
lcall
jg
jbe
fwait
popf
out
jl
das
xchg
add
outsb
lret
into
into
rol
xrstor
jnp
lret
cmp
pop
sarl
ss
push
fnsave
into
mov
shl
adc
dec
outsb
inc
cmp
dec
dec
in
mov
cmp
lret
xchg
ljmp
sbb
mov
testb
xchg
outsb
mov
rorb
repnz
js
lods
das
enter
loope
and
scas
ss
mov
cmp
or
in
insb
push
scas
repnz
je
aad
hlt
lds
bound
ficomps
sbb
jecxz
mov
insb
xchg
adc
mov
mov
les
sti
jecxz
sbb
inc
push
push
push
lods
sub
out
xchg
mov
mov
testb
dec
aaa
shlb
jg
xor
or
dec
mov
xchg
fbstp
pop
or
mov
jecxz
test
jecxz
pop
adcl
shll
imul
std
scas
cmp
lret
push
scas
jle
xchg
aaa
hlt
mov
mov
xchg
mov
test
pop
mov
jo
mov
daa
mov
cltd
scas
pop
lds
jecxz
xchg
push
dec
stc
mov
adc
jp
adc
in
je
stos
sbb
mov
test
jle
adc
mov
fstpl
cmpsl
ja
inc
jg
lods
pop
data16
push
dec
push
jle
dec
stc
rorb
enter
ljmp
mov
sub
iret
jl
in
jns
jns
sub
rorl
and
mov
and
data16
je
loop
cld
xchg
es
in
xor
add
scas
fbstp
xor
or
ret
mov
loop
sbb
ljmp
dec
push
add
jo
cs
inc
sbb
test
mov
orl
out
roll
pop
and
adc
and
or
jne
and
sbb
jl
lcall
mov
fcomps
pop
lret
icebp
jmp
push
out
cmpl
add
xorb
jecxz
pushf
cltd
sub
test
mov
mov
std
fimuls
movhps
inc
stos
jl
xchg
ret
push
in
lret
add
lea
sub
add
lods
cmp
gs
clc
inc
bound
pop
pop
scas
rorb
push
in
scas
xchg
ljmp
sbb
mov
mov
repz
push
sbb
xchg
jg
stc
int
and
in
imul
xor
loopne
inc
jmp
and
xorl
push
jne
push
mov
sarb
int3
in
into
add
dec
stc
add
aaa
xor
or
lret
in
scas
push
jmp
xlat
fwait
add
mov
or
and
out
fistps
xor
dec
lret
sbb
fwait
cmp
notl
dec
mov
jb
cmp
sbb
jb
jb
loop
and
xor
jmp
repnz
cmp
incl
addr16
aam
fsubr
sub
out
gs
add
mov
mov
or
and
push
adc
roll
movsb
sub
fiadds
mov
xchg
xlat
stos
into
lock
mov
dec
mov
pusha
push
xchg
dec
add
movsb
mov
aad
sbb
push
rolb
adc
push
lods
cmp
mov
repz
dec
fwait
dec
outsl
fimull
pop
pop
pop
cs
inc
call
rolb
ss
lea
dec
addr16
aaa
inc
aas
sub
daa
jbe
movsl
jae
fstps
dec
jne
stc
lret
sub
or
loopne
jg
mov
fs
fcmovne
sahf
popf
mov
sub
sti
jbe
rep
pop
jb
int
and
dec
pop
stos
pushf
bound
push
jne
xchg
je
in
shr
cmp
divb
in
lock
xchg
inc
loop
adc
inc
add
jmp
pop
pop
sbb
fistpl
lret
movsl
test
sbb
test
aas
rorl
das
xor
and
push
out
fwait
sub
stc
out
push
sbb
xlat
mov
inc
test
call
stos
xlat
test
and
inc
fsts
pop
loop
dec
aam
outsl
dec
inc
sbb
pop
jo
push
xchg
xchg
adc
xlat
fistpll
scas
insl
aaa
mulb
loopne
cli
push
xchg
mull
outsl
or
jmp
inc
dec
stos
push
test
jnp
int3
popa
sub
test
repnz
cmp
clc
pusha
aaa
scas
loope
push
adc
testb
dec
add
imul
push
mov
push
and
in
aad
ljmp
push
cmp
inc
outsl
xor
jae
sahf
mov
sub
xor
fildl
insl
repz
es
negb
mov
cmp
ss
xchg
rolb
inc
xchg
sbb
pushf
insb
outsl
ficoms
dec
dec
sub
es
sti
das
dec
and
xlat
repz
sahf
dec
divb
jecxz
lds
dec
adc
or
jbe
loope
xchg
mov
push
sbb
adc
jns
in
test
out
mov
push
pop
pop
clc
xor
xchg
push
cld
mov
rcrl
or
cltd
push
imul
repnz
jb
mov
out
rorb
movsl
leave
fcmovne
jmp
cmp
pop
mov
inc
rcll
cwtl
loop
push
inc
xchg
es
push
dec
test
adc
daa
lret
in
push
add
lods
inc
sub
adc
mov
rol
ret
shrb
ljmp
push
test
ret
les
cmp
xchg
xor
mov
xor
push
jge
icebp
icebp
xor
add
mov
pushf
std
cmp
sbb
aas
orl
push
or
mov
fistpll
jne
loop
test
or
xor
mov
pop
xorl
ffreep
out
pusha
ds
cmp
es
or
stos
mov
jns
pop
loopne
insb
scas
scas
pop
sahf
jae
fists
mov
lahf
subl
out
dec
lods
mov
aad
mov
mov
fmuls
loop
sub
nop
iret
leave
mov
leave
lock
jns
add
or
aaa
cmp
aaa
imul
jo
dec
mull
addr16
jl
mov
add
jmp
cmp
jae
jle
mov
adc
mov
fidivs
inc
dec
ds
jae
sbb
lret
jp
add
jno
iret
dec
call
and
shll
add
pop
incb
push
dec
fucomip
lods
loop
inc
out
cmpsb
scas
cltd
imul
outsb
and
inc
mov
cmp
in
inc
pop
jne
es
decl
outsb
mov
jae
jle
push
mov
and
gs
jg
shll
push
mov
add
xlat
lock
es
imul
xor
inc
xor
sbb
pop
imul
repnz
shl
xchg
adc
or
popf
ja
mov
mov
xchg
and
subb
das
push
test
xchg
sbb
cmp
decb
scas
fistpll
xchg
mov
fidivs
call
sub
into
push
stos
mov
sahf
and
inc
dec
in
fdivr
cmp
out
gs
sbb
push
mov
das
loop
leave
sub
mov
int
arpl
pop
push
lahf
cmpl
push
out
push
lcall
cmc
mov
lret
rcrl
jne
xchg
jns
push
repnz
pop
push
push
pushf
out
pop
fnstenv
push
cmp
loop
test
nop
je
fcompp
adc
dec
cmpsb
cmp
sbb
and
jae
jle
mov
push
pop
out
sbb
movl
ret
pop
pop
iret
rclb
cmp
aad
cmp
jge
mov
enter
jg
dec
mov
mov
dec
dec
jb
ds
movb
pop
mov
shlb
inc
out
in
add
int
adc
test
out
adc
push
cmpsl
adc
test
das
or
lret
lcall
jmp
pop
faddl
dec
cmp
out
xchg
rcrl
addl
inc
fstps
repnz
ror
stos
cmpsb
les
leave
sbb
jge
insl
rcrb
push
pop
mov
pop
inc
and
out
pop
or
mov
inc
fadds
ficoml
jle
mov
idivb
mov
inc
shl
and
xchg
notb
outsb
aam
mov
pop
mov
ret
jl
in
add
in
js
cs
dec
adc
inc
js
aaa
dec
xlat
pop
pop
or
inc
sbb
bound
call
jmp
jl
out
movsl
mov
bswap
clc
clc
cli
pop
pop
mov
and
cld
and
aad
stos
lret
aad
mov
jo
roll
rcrb
mulb
lea
add
insb
cltd
aaa
popa
sbb
pop
cmpsl
cmp
notl
dec
movsl
ret
xor
leave
sbb
data16
jb
imul
test
inc
rorb
in
divb
push
mov
push
mov
or
into
mov
stos
mov
xchg
lods
aaa
pushf
mov
or
mov
cld
mov
push
test
dec
fimull
sarl
mov
push
iret
int
jmp
inc
test
xchg
sbb
nop
dec
sbb
sbbl
push
sub
mov
shlb
popa
fmulp
addl
cmp
and
mov
shrb
sub
pop
add
mov
repz
mov
jmp
xchg
lods
divl
dec
xor
add
cmpb
inc
push
sub
xchg
and
fisubrs
repz
sbb
adc
add
mov
mov
jne
or
and
dec
loop
and
into
push
or
cmpsl
arpl
push
cld
scas
jecxz
cmp
push
inc
dec
cmp
inc
popf
into
mov
int3
fs
mov
popa
mov
and
aad
pop
xchg
in
xchg
and
stos
loop
and
jo
lahf
ficompl
addr16
aam
pusha
inc
movl
aam
xchg
jp
cmpb
lcallw
add
sub
mov
push
xor
push
push
cmpsl
pop
xchg
movb
mov
lret
jl
sub
adc
add
mov
jmp
inc
adc
mov
repnz
stos
inc
test
mov
filds
decb
out
aas
or
fs
push
insl
loope
scas
jb
cmp
sti
ljmp
bound
pusha
test
inc
mov
fisubl
fcmovnbe
nop
aad
xor
shl
xchg
sub
sbb
or
repz
sbb
outsb
push
pop
cli
fdivrs
push
xor
shrb
lds
out
fwait
pop
jl
jns
and
adc
aam
shll
sbb
sub
insl
adc
lret
dec
cmp
out
dec
dec
arpl
outsl
les
scas
sub
fiaddl
inc
mov
sbb
mov
leave
and
hlt
and
mov
mov
mov
push
cmp
mov
or
pop
shlb
ret
jbe
aam
mov
jp
add
push
sbb
push
jb
test
cmp
xchg
ffreep
lcall
mov
jno
xor
mov
cld
addr16
int
mov
jmp
test
push
call
cmp
xchg
dec
lock
rorb
imul
movsb
mov
insl
xchg
fiaddl
cmc
cmc
imul
xchg
push
push
mov
sub
roll
add
add
in
pushf
push
xor
cmp
maskmovq
idivl
cmp
fs
int
sbb
cmp
cmp
or
sarl
test
test
icebp
xchg
dec
mov
sub
mulb
pusha
movsl
mov
mov
xchg
orl
mov
mov
push
pop
out
popa
mov
and
stc
jmp
lcall
loope
mov
cmp
sub
add
mov
and
add
push
or
xor
or
iret
push
fucomi
sbb
mov
push
pop
xlat
pop
mov
fnsave
mov
ja
push
xchg
pop
xchg
inc
ficoml
mov
outsb
cmc
inc
imul
outsb
mov
mov
fsubs
shr
push
out
mov
and
fimull
add
jmp
mov
xchg
inc
jp
pushf
notb
xor
mov
shlb
mov
ret
cli
jecxz
cmp
ljmp
xor
mov
inc
test
adc
mov
pop
xchg
inc
jmp
mov
jae
add
jp
pop
push
sbb
or
leave
push
inc
mov
xchg
ljmp
pop
fiaddl
pop
mov
cmp
pop
lods
jge
jl
sub
inc
notl
dec
add
dec
jmp
call
push
sub
nop
movsl
add
ljmp
daa
dec
and
imul
push
fs
dec
lret
inc
jns
subb
jmp
sbb
pop
push
lret
daa
push
mov
or
das
and
or
dec
daa
in
xor
js
shr
into
test
mov
pop
jns
mov
xchg
adc
popa
mov
data16
xchg
jg
dec
dec
jmp
not
popf
push
sbb
jbe
or
jo
mov
add
and
inc
lret
fnstsw
push
xchg
sub
push
sbb
aad
into
jge
pop
cwtl
dec
lret
out
cmp
movsb
add
fidivl
sbb
mov
in
js
out
into
pop
aad
inc
pop
mov
inc
shlb
inc
es
cltd
jge
pop
add
stos
shr
pop
adc
pop
and
fldcw
mov
push
inc
lods
test
mov
mov
sti
rolb
or
lret
or
test
out
lds
imul
xchg
jp
add
imul
lahf
mov
outsl
adc
pop
cmp
test
mov
add
jg
pop
imul
cmpb
loopne
movsl
cli
push
pop
lahf
call
andl
jecxz
dec
or
in
mov
dec
iret
inc
jno
xor
jb
adc
mov
adc
in
push
lock
sbb
sbb
and
mov
push
pop
add
rorl
sub
inc
cld
pop
int3
dec
xchg
sub
mov
lods
xchg
cmpsb
adc
jb
mov
adc
daa
cmp
aas
jle
aaa
cmp
cmc
andb
xchg
pushf
pop
push
mov
mov
lods
lods
je
sub
test
push
outsl
push
cmp
sahf
std
push
mov
sti
push
jb
cld
loop
mov
les
push
sub
push
in
fsubrl
or
pop
mov
loope
in
fcomps
sbb
in
mov
pop
jbe
and
daa
pop
mov
pop
in
pop
xchg
push
popa
jl
lea
jg
jae
inc
pop
push
push
imul
add
pop
jns
push
adc
jle
testb
push
fstl
scas
fsubp
lods
mov
fnsave
push
ljmp
test
cwtl
rcl
and
mov
sub
push
push
inc
pop
sbb
cld
cmp
push
arpl
frstor
sar
fld
dec
mov
ret
roll
pusha
test
push
push
or
lret
xchg
cwtl
hlt
sub
daa
out
sub
sbb
daa
dec
adc
cmp
loop
jnp
and
mov
in
add
push
xchg
pop
dec
insl
outsb
add
push
ja
je
sub
sbb
mov
popf
dec
fcomip
sarw
add
push
fildll
mov
into
fnstsw
or
dec
push
ljmp
sub
lcall
mov
js
addl
jnp
fidivs
call
ffree
je
lock
es
mov
imul
add
dec
xchg
rcll
imul
mov
mov
mov
or
sub
lods
xchg
sbb
outsb
fdivrs
jg
pop
stos
imul
adc
jbe
inc
cld
int3
jo
inc
pop
add
mov
enter
addl
sub
cld
and
sub
aaa
pop
xchg
and
adcl
mull
mov
popa
iret
push
fsubrl
adc
adc
pop
mov
movsl
jns
sbb
cmp
into
push
add
xchg
movsl
movsl
and
loop
fbstp
inc
stc
pop
imul
inc
mov
xorb
and
xor
roll
sbb
sub
fstps
call
es
scas
pop
cmpl
mov
jecxz
gs
shlb
sarl
icebp
das
cmp
notl
pushf
test
inc
int3
mov
inc
sub
mov
cmpsb
stos
ljmp
mov
clc
inc
pop
fnsave
lea
adc
add
dec
jmp
xor
xor
lret
sub
lret
loop
outsl
jle
repnz
sub
or
icebp
fstl
and
pop
xchg
lea
mov
jnp
je
adc
xor
pop
sahf
xchg
mov
clc
jl
into
imulb
cwtl
and
leave
pop
aaa
sbb
cmpsb
push
outsb
insb
test
fisttpll
daa
xor
sub
insb
sti
movb
or
out
sbb
daa
inc
aas
mov
inc
sub
push
in
mov
in
xchg
pop
xchg
jo
pop
jnp
cmp
pop
mov
push
mov
xor
out
cmpsb
xor
popa
mov
mov
mov
adc
sub
sub
mov
push
add
and
insl
lcall
out
in
mov
dec
insl
xor
jp
mov
dec
shr
bound
out
or
ja
xorl
loopne
xchg
jmp
push
lods
push
loop
push
mov
or
imul
push
mov
pop
mov
pushf
sbb
mov
insl
dec
jmp
insb
sbb
inc
push
in
push
por
fnstsw
rcl
pop
inc
test
add
push
jecxz
cmp
xchg
mov
mov
icebp
cmp
sub
sbb
pop
inc
clc
addr16
fisttpl
jnp
and
int3
pop
aas
les
sbb
adc
es
cltd
jecxz
mov
nop
pop
mov
xchg
dec
jno
scas
mov
cmp
addl
and
mov
push
ficoml
jge
adc
mov
or
inc
iret
adc
push
jno
sbb
jne
cwtl
arpl
fcomps
dec
inc
mov
iret
pop
leave
sub
sbb
inc
insb
stc
pop
mov
pop
aad
mov
loopne
sti
sub
push
in
sub
pop
movsb
sub
ja
imul
test
out
and
cmp
das
gs
pop
or
dec
sbb
dec
out
mov
add
xor
rclb
mov
mov
jno
fistpll
pop
aas
adc
mov
dec
lahf
stc
mov
pop
fcomp
inc
sbbl
add
mov
xchg
data16
cmp
inc
inc
mov
jno
fwait
insl
aad
push
xchg
mov
dec
lds
mov
inc
mov
lret
cmpsb
push
mov
ds
xchg
mov
test
adc
mov
add
shll
sub
movaps
dec
and
in
mov
xchg
cltd
out
test
cmp
repz
sub
cltd
pop
arpl
push
dec
xor
jo
out
and
bound
pop
xor
jno
pop
xlat
push
cmp
adc
mov
sub
xchg
xlat
mov
cs
push
fs
addr16
add
in
stos
stc
jb
lcall
add
outsl
push
fcoml
notb
setns
mov
xchg
sahf
cmp
sub
pusha
add
nop
iret
test
in
mov
or
fcomps
push
nop
mov
push
stc
insb
jno
push
rep
iret
out
push
bound
sbb
scas
adc
in
jbe
xchg
mov
push
or
xor
pop
mov
mov
insb
pop
add
or
nop
adc
into
jmp
push
jae
lahf
sub
xor
loop
cmpsb
in
xchg
add
aas
call
mov
xchg
inc
outsb
testb
mov
add
test
aaa
and
sbb
repnz
stos
mov
mov
pop
inc
mov
mov
daa
push
in
arpl
gs
and
lods
imul
mov
xchg
xchg
mov
dec
pop
outsb
fdivl
jbe
cmp
pop
or
add
add
bound
repnz
mov
lret
jl
mov
mov
sbb
rolb
jp
out
loope
xor
cld
inc
data16
lock
insb
sub
xor
jno
sbb
fstps
inc
pop
in
sbb
sarl
faddl
push
fsincos
inc
sub
cmp
push
test
mov
sub
out
push
out
jp
cmp
push
jg
fidivs
and
bound
cmp
cmp
dec
xchg
sub
mov
shlb
xchg
in
dec
aam
xor
fidivs
imul
dec
pop
imul
jecxz
adc
rcll
and
or
cmp
xchg
rcrb
cwtl
repz
and
rorb
subl
movsl
mov
mov
pop
arpl
sub
rolb
mov
testb
jae
mov
xor
xor
mov
adc
mov
pushf
jmp
sbb
mov
shlb
in
aaa
mov
cmpsl
mov
and
cmpsl
cld
lret
xchg
inc
enter
sbb
add
push
or
mov
dec
dec
movsl
fldl2e
movsl
fnstenv
add
mov
dec
push
jb
mov
nop
sbb
xor
ret
aaa
mov
jo
roll
iret
arpl
push
mov
test
mov
and
mov
lods
pop
orb
cmp
and
pop
lea
xor
jge
cmp
jns
ret
push
mov
sbb
jg
xchg
fimuls
insb
movsl
cmovg
popf
leave
lds
xchg
cmp
outsb
aaa
les
insb
xor
insb
cmp
mov
nop
push
cmp
ret
mov
imulb
pop
shrl
push
pop
fsubp
iret
addr16
dec
lahf
mov
mov
ljmp
or
popa
lret
dec
pop
xchg
pop
mov
jbe
add
cmp
imul
mov
mov
aam
arpl
insl
mov
xlat
jnp
in
cs
jle
lret
cmp
repz
in
xor
jae
mov
push
into
scas
cld
jo
fnstcw
lods
cmpb
push
cwtl
mov
das
fwait
mov
loope
insl
repz
idiv
mov
cmp
addl
daa
dec
lods
add
mov
cmpsl
and
out
push
insl
adc
arpl
dec
addr16
jns
in
jo
add
lahf
js
mov
inc
fucom
adc
pop
inc
fisubs
pop
dec
cmp
mov
add
ds
enter
inc
jge
xor
das
or
fstps
xor
popa
pop
add
shll
mov
lods
mov
xor
pop
loope
ss
mov
clc
jge
pop
sbb
dec
push
mov
xchg
in
in
lods
cmpsb
fcomps
sar
pop
fisubs
fcomp
aas
or
out
xchg
cmpsb
stos
js
mov
push
push
mov
add
pop
xchg
int3
movsl
push
cmp
cmpsw
pop
pusha
dec
ds
icebp
or
repnz
mov
cmpsl
movsb
idiv
mov
mov
stc
jb
std
jmp
test
xchg
jns
mov
bound
ret
mov
sbb
ficompl
aaa
iret
insl
push
dec
cmp
lret
jp
andl
jge
stos
rcll
cmpsb
rcl
lret
sub
fidivl
adc
aaa
test
dec
movsl
xchg
xor
int
lds
xchg
fs
lahf
mov
and
lret
pop
mov
sbb
dec
mov
insl
insl
or
scas
test
movb
inc
lods
outsb
cmp
lcall
ss
ficoml
sub
sub
jno
or
push
xor
mov
mov
xlat
insl
popf
lds
setnp
pop
nop
adc
neg
sub
movsb
sar
or
popf
cmp
rcr
fcompl
push
mov
imul
add
or
cmp
int3
out
mov
xchg
jmp
mov
mov
out
push
mov
ja
push
pop
arpl
pop
push
data16
cmpsb
dec
jmp
inc
mov
adc
jle
or
jg
sub
xchg
pop
inc
mov
or
push
or
mov
mov
js
inc
dec
cmp
aam
jb
adc
adc
mov
sbb
pop
jge
icebp
notl
lcall
pop
in
sub
xor
and
mov
shrl
rorb
mov
mov
xchg
sub
out
sti
loope
nop
int3
pop
cmp
xchg
and
add
sahf
fnstsw
insb
in
ret
fists
cmp
mov
pop
pop
pusha
daa
in
or
and
mov
stc
dec
sub
das
je
mov
mov
aam
lods
sub
clc
cmp
les
repz
sub
push
dec
inc
stos
sub
ss
in
xor
cmp
test
pop
sub
lds
in
push
or
xor
fldt
inc
xorb
sti
mov
outsb
shlb
icebp
movsl
jecxz
ror
dec
lret
rorl
mov
lods
mov
lret
mov
pop
in
popl
scas
call
in
xchg
cltd
icebp
adc
nop
ss
addl
mov
jo
test
leave
dec
inc
push
lods
ja
pop
jo
push
dec
arpl
dec
mov
movsb
and
sub
std
xchg
jo
cwtl
aad
jno
jl
push
jl
or
cli
add
add
add
pop
je
addr16
dec
pop
or
ja
test
loop
in
arpl
jecxz
fstps
lret
jp
push
sbb
push
push
aad
inc
mov
sub
cmp
movb
pop
mov
adc
dec
add
sub
ja
pop
and
aad
pop
cmp
push
xchg
mov
popa
lods
mov
test
ljmp
cwtl
push
jmp
jno
mov
nop
out
orb
and
jecxz
sub
push
icebp
and
into
rorb
loop
xchg
shll
mov
in
push
lods
or
stos
cmpsl
sbb
jp
jne
jo
shlb
cmp
sub
and
push
loop
sub
notb
int
xlat
mov
es
jno
out
mov
test
xor
xlat
fistps
faddl
push
add
lret
repnz
or
leave
pop
ror
fnstsw
sub
insb
jmp
mov
roll
cltd
xchg
push
fsubr
mov
inc
xor
or
push
rcrb
sahf
push
add
sbb
nop
lods
xchg
add
aam
clc
sub
pop
dec
sub
inc
roll
loope
std
mov
sbb
xchg
pop
roll
mov
jecxz
adc
and
xor
into
int
add
cmpsl
lock
fidivrl
xchg
push
dec
sbb
sub
sub
addb
push
not
add
push
std
ss
dec
fimuls
es
call
dec
push
ds
lds
loope
cmp
add
subl
int3
fdivrp
jecxz
cmp
addr16
add
sub
sub
clc
jge
test
mov
aaa
outsl
aam
into
out
pop
inc
stos
aas
es
nop
push
xchg
jmp
stos
fsubrs
dec
or
insb
pop
xor
shlb
mov
dec
pop
cmc
add
dec
hlt
ret
xorb
pop
inc
adc
js
mov
aam
cmpsb
aad
les
inc
test
inc
dec
clc
cli
cmp
fs
jmp
out
sub
push
pushf
push
in
std
icebp
fcmovnu
into
and
jge
mov
or
adc
mov
das
sbb
enter
push
jle
shr
lret
pop
jl
mov
cmp
out
jl
mov
loop
out
daa
dec
sti
jecxz
leave
pop
pop
add
stc
popa
js
push
pop
dec
inc
push
jecxz
xor
arpl
mov
in
jle
xchg
enter
movsb
sbb
add
mov
cmp
jae
sbb
or
cmp
sbb
fcomi
jl
cmp
mov
ljmp
xor
std
sub
jns
in
imul
cmp
dec
xor
js
pop
test
sbbb
xchg
mov
fiadds
gs
adc
jmp
jae
leave
aas
imul
inc
lds
mov
sub
sbb
icebp
mov
sbb
sarl
dec
imulb
cmp
add
enter
pop
rcl
adc
sbb
out
push
aaa
mov
inc
jge
cs
xchg
mov
xor
fs
fisubrs
sbb
mov
pop
jno
xchg
push
out
hlt
jge
mov
push
inc
sbbb
js
ret
pop
push
sbb
dec
out
daa
fsts
jecxz
lock
jmp
out
test
outsb
mov
hlt
aad
fnstenv
add
lds
mov
mov
shll
add
push
pushf
add
popa
sub
sub
fsubrp
xchg
inc
lods
push
cmp
ljmp
and
pop
add
sbb
and
xchg
cmp
mov
aam
jb
ror
or
jg
icebp
inc
inc
outsl
lds
daa
xchg
sub
sti
fdivs
daa
popf
hlt
jge
sbb
repnz
cmp
addr16
inc
sub
cs
popa
testl
jo
jae
aam
scas
std
rcll
sbb
jmp
inc
adc
cld
jno
movb
sbb
mov
jae
outsb
jae
les
repz
inc
push
dec
mov
lea
popf
cmp
in
insl
leave
cmpsb
sbb
pop
les
out
test
data16
mov
mov
shlb
shrl
pop
mov
pop
test
sbb
pop
jne
mov
ljmp
mov
or
jmp
inc
inc
std
xchg
cld
jl
sbb
inc
fisttpl
sub
pop
test
out
mulb
cli
mov
dec
pop
test
test
dec
and
mov
xor
xchg
js
mov
sbb
outsb
push
or
aam
xor
cltd
pop
cmp
repnz
sarl
mov
mov
xlat
pop
adc
cmpsb
shl
mov
movsl
jbe
cmc
inc
mov
bnd
rolb
insb
mov
mov
sub
in
push
push
test
xor
popa
inc
rcrb
mov
or
and
js
mov
imul
inc
mov
lea
push
imul
data16
and
cld
xor
sub
or
or
rcll
mov
mov
adc
xchg
add
mov
sahf
clc
lock
addb
xchg
ds
add
cmp
dec
lret
adc
sub
jge
subb
pop
mov
xlat
loop
inc
or
ja
sbb
idivl
mov
pop
sbb
jmp
jmpw
mov
pop
push
add
xor
cmp
dec
leave
ljmp
out
fxam
movb
jo
sub
or
into
popa
rcr
xchg
inc
scas
in
sbb
loope
inc
out
imul
ljmp
int3
arpl
lock
pop
sub
mov
das
rorl
stos
aas
ss
or
push
adc
mov
aad
jl
pop
mov
mov
add
gs
daa
dec
push
loopne
iret
push
stc
outsl
je
sbb
fidivrs
jl
sub
xchg
and
cmc
andb
jno
sub
pop
out
jg
or
or
int3
push
add
shll
sbb
in
fbld
test
jge
push
jb
stos
pusha
insb
push
aam
or
xchg
repz
mov
jns
les
xchg
xchg
sub
or
jbe
cmp
int
adc
xchg
stos
aam
inc
add
and
mov
lock
and
sbb
data16
push
lock
cs
xchg
int
inc
mov
pop
mov
sbb
out
movsl
fmuls
or
jle
push
in
xchg
sub
pop
arpl
fcoms
sbb
xlat
pop
lods
dec
add
call
outsb
mov
jne
mov
inc
mov
jle
inc
and
fstl
sbb
iret
in
xchg
aam
xchg
and
push
sub
xor
imul
jg
repz
inc
cmpsl
inc
sub
imul
push
lret
call
inc
push
inc
fcomip
int3
mov
and
lret
jnp
mov
sti
out
jo
mov
mov
and
aam
sub
testl
mov
mov
cmp
lea
mov
inc
lods
daa
shrb
fcoms
cmp
sbb
mov
in
pop
arpl
test
mov
shll
jmp
dec
das
push
sbb
and
sbb
jp
jp
or
pop
jnp,pn
iretw
add
loope
mov
pop
cmc
xor
xor
mov
movsb
aad
bound
lds
mov
ret
fdivrl
icebp
outsl
or
mov
fldt
cmc
inc
push
pop
xchg
or
test
inc
rcrl
scas
xchg
loop,pn
nop
addb
lock
lahf
faddp
sub
fcomps
xchg
rclb
movsl
dec
in
sub
pop
xchg
sar
mov
andb
adc
nop
cmp
push
lods
xchg
call
imul
jbe
adc
add
pop
sar
inc
cli
cli
test
nop
jbe
add
adc
bound
loopne
xlat
ror
jge
jp
jg
sbb
shlb
jg
lods
mov
les
push
dec
sbbb
cmp
inc
fimull
stos
int3
sub
push
insl
fnstsw
add
jmp
std
pop
bound
test
in
in
cmp
pop
dec
mov
add
push
inc
enter
test
sti
out
lds
ret
and
pop
enter
je
add
mov
sub
jge
scas
adc
fimull
fadds
addb
jl
pop
add
aaa
roll
daa
cmp
dec
mov
cltd
push
cld
clc
hlt
roll
test
mov
mov
cs
xor
fcomip
lret
jae
roll
mov
push
in
outsb
iret
mov
mov
mov
test
cmp
mov
mov
mov
outsl
mov
sarl
rcrb
and
push
sti
lea
loopne
jmp
lret
pop
xor
fldcw
xchg
jns
mov
inc
lock
pop
mov
sbb
sbb
inc
add
push
inc
mov
cli
fld
pop
sbb
fwait
dec
dec
inc
stc
pop
out
xchg
or
jmp
or
push
cmpsl
out
lea
xchg
shll
cs
fmuls
cmp
lcall
fidivrs
mov
scas
out
xchg
jne
imul
add
ret
dec
insb
mov
xchg
test
fldt
data16
push
inc
jne
dec
xor
imul
mov
xlat
cltd
cmp
xor
push
addr16
lods
movsl
fcompl
xor
mov
cmpsl
add
leave
pop
inc
in
pop
testl
bound
fldenv
stc
hlt
insb
daa
daa
ret
pushf
cld
mov
insl
xor
popa
cmp
sbb
clc
enter
sbb
sbb
fs
dec
xor
bnd
dec
comiss
test
aam
imul
inc
push
inc
int3
jae
xchg
jl
arpl
xchg
pop
inc
lds
mov
lretw
add
rorb
sti
cmp
imul
loop
stos
xor
sar
lock
push
subb
hlt
mov
and
dec
test
sbb
pop
push
clc
fnsave
in
pop
jge
in
push
js
or
add
imul
sub
jmp
and
add
push
pop
orb
inc
dec
ficoml
push
into
mov
cmp
dec
outsb
imul
mov
push
inc
and
pusha
rcll
mov
sub
add
adc
scas
add
and
pop
jno
call
pop
jl
scas
int
lcall
arpl
pop
test
loop
cmpsl
jecxz
fwait
scas
test
sti
push
sub
jns
je
or
call
jae
and
scas
pushf
or
addr16
hlt
pop
xor
mov
pushf
mov
mov
jp
nop
pop
add
and
andl
mov
push
mov
mov
pushl
dec
fdivs
daa
js
mov
pop
xlat
sub
pop
shlb
adc
jno
sub
bound
mov
jp
xlat
outsl
add
sub
fstl
lret
xor
stos
scas
test
fistpll
in
dec
mov
fdivrl
and
cmp
cmp
mov
je
lods
pop
mov
and
pop
mov
cmp
cmpsl
sbb
lds
xchg
mov
mov
ret
sti
hlt
inc
and
xor
shll
pop
icebp
ss
xchg
xchg
test
sbb
arpl
sub
sbb
dec
fnstcw
xor
scas
jmp
mov
mov
in
inc
xchg
pop
call
jmp
repnz
mov
popf
push
iret
bound
mov
or
stc
outsl
lea
add
popa
js
bound
iret
fwait
divl
dec
jbe
or
ds
inc
ret
mov
out
insl
jecxz
pop
fisubs
push
scas
push
jne
cmp
mov
aas
and
pop
jg
xchg
push
cwtl
fldcw
add
int
fcmovnbe
jecxz
sub
xchg
xor
sbb
jb
test
addl
cmp
mov
jb
dec
mov
aad
fisttps
out
out
xchg
adc
mov
or
jne
lea
jb
ret
rcrl
adc
jns
and
ja
filds
xor
test
xor
pop
add
push
jge
inc
mov
sbb
sub
fisubs
push
and
xchg
ret
fstpt
or
idivb
mov
leave
test
sub
fldl
outsl
es
and
jns
jge
out
arpl
inc
adc
lods
roll
fistps
test
fcoms
xchg
and
mov
lock
repz
pop
aas
lret
cmp
leave
fs
mov
xchg
jge
fcoml
and
out
into
pop
dec
bound
sub
gs
push
les
in
shl
and
ljmp
ds
es
pushf
cmp
movsl
xor
daa
fsub
out
scas
pop
pop
sub
or
fbstp
sub
jb
shr
adc
adc
xor
loopne
mov
adc
push
jmp
adcb
push
jp
fisubs
sbb
bound
daa
push
stos
sub
mov
jo
mov
cmp
dec
jae
and
and
mov
push
mov
lcall
cs
flds
scas
adc
mov
sbb
pop
sarl
push
and
xor
cltd
pusha
jae
ljmp
aas
and
loopne
xlat
sbb
aad
ret
xchg
pop
dec
push
ret
jb
xchg
ret
fcomps
loope
mov
scas
push
rorl
sub
dec
or
mov
cwtl
enter
xlat
sub
scas
and
xor
popa
push
ds
jmp
xchg
pop
add
icebp
callw
shlb
push
sub
xchg
jns
mov
inc
adc
pop
mov
xchg
cmc
lods
fstps
xor
cmp
pop
jo
clc
sbb
popl
sti
icebp
andb
cld
ret
xchg
fdivrs
jb
fdivr
and
xchg
sub
cmp
inc
xchg
fdivrp
lock
iret
pop
test
mov
xchg
push
in
insl
or
into
mov
cli
lds
ljmp
subb
dec
ja
jecxz
jnp
cwtl
cltd
push
out
mov
bound
mov
push
popa
or
xchg
pop
or
rolb
test
bound
adc
imul
mov
xor
pop
cmp
xor
aad
push
popa
je
adc
xchg
loope
into
stc
mov
inc
repnz
or
cmp
std
lcall
push
scas
jmp
pushf
pop
adc
loopne
jo
jne
pop
or
sbb
sbb
insl
cmp
ficoml
mov
xor
cld
adc
push
xchg
stos
fstpl
adc
popf
iret
sbb
mov
out
inc
and
xor
adc
and
and
sub
out
gs
aaa
loopne
imull
fcomp
mov
xor
in
jp
sarl
fsubrl
es
cmp
scas
jg
ja
ljmp
std
xchg
push
cs
dec
shrl
iret
jbe
xchg
xorl
push
js
mov
xchg
out
stos
es
aad
xchg
repz
dec
jb
lret
lahf
push
clc
fs
out
cmp
out
inc
fnstenv
fsts
bound
mov
adc
jmp
mov
jecxz
and
or
and
mov
movsl
or
ds
mull
icebp
ficoms
mov
mov
add
pmullw
imul
push
jns
mov
ljmp
roll
leave
sub
sbb
daa
cmp
repnz
pop
push
push
cld
add
xor
mov
mov
das
jae
pop
push
mov
sbb
inc
subl
aas
mov
fucom
iret
sbb
imul
add
outsl
sub
jbe
jb
popf
mov
and
push
mov
into
mov
sahf
mov
adc
xor
gs
lcall
pop
test
fmuls
inc
movsl
adc
xor
dec
jmp
mov
jp
dec
push
push
std
add
ds
sub
arpl
inc
jmp
xlat
sbb
jecxz
js
and
hlt
cmp
dec
pop
ret
iret
sbb
scas
xor
inc
gs
das
aad
in
pushf
flds
sahf
testb
loope
and
pushf
xchg
fnsave
idivb
jl
outsb
pop
sar
mov
pop
mov
push
cmc
dec
sub
mov
push
fidivrl
fcmovnu
pushf
test
lcall
xchg
leave
cld
mov
negb
iret
xchg
lock
pop
orb
push
xchg
fs
cmp
lcall
daa
push
mov
std
or
nop
dec
and
shll
pop
dec
or
push
aaa
jb
mov
xor
aad
cwtl
push
cltd
inc
xor
cld
pop
push
fcmovbe
data16
dec
out
xor
cld
push
gs
lea
jecxz
mov
scas
add
in
or
push
mov
xchg
xchg
push
repz
xor
dec
imul
in
jne
jp
rcrl
sbb
popa
sub
shlb
mov
cmp
cs
xchg
push
push
xchg
or
cmp
xchg
movsb
jae
test
cli
xor
dec
xchg
nop
mov
sbb
cmpsb
and
aad
pop
shll
cs
cli
mov
subl
push
xor
push
int
sub
and
jle
pop
into
aas
mov
stos
js
std
addr16
jl
sub
sub
jl
aas
and
add
ss
mov
push
mov
into
test
mov
imul
mov
add
cmp
sub
fildl
les
mov
je
mov
xchg
lea
movl
adc
sub
into
pop
sub
sbb
call
mov
mov
imul
fcmove
ss
xor
and
clc
into
faddp
lcall
fisubrs
fwait
sahf
mov
sub
imul
test
jmp
or
addb
sbb
insb
cmpsb
into
popw
jb
inc
cmp
lock
lahf
push
dec
adc
xor
sub
call
push
cmp
cli
fwait
subl
push
scas
fcomps
js
dec
add
and
push
insl
adc
or
inc
and
xchg
inc
arpl
fnstsw
lret
inc
cmp
stos
lret
cmc
adc
cmp
das
cs
jmp
subb
inc
faddl
nop
dec
xlat
push
gs
insb
xor
stc
notl
mov
cli
test
mov
add
addl
dec
in
jno
test
jb
in
rcrb
test
shrb
sbb
dec
pushf
mov
jae
les
sbb
push
xchg
mov
jno
enter
pop
fs
push
pop
ss
popf
outsl
or
mov
mov
ret
pop
mov
repz
test
jecxz
push
outsl
adc
movsl
scas
push
shrb
fdivr
pop
mov
fnsave
and
push
ds
sbb
and
jge
pushf
pop
pop
jl
arpl
mov
mov
push
adc
or
adc
aas
shl
pusha
adc
movl
xor
and
and
push
dec
pop
stc
lret
sub
mov
jmp
sbb
sub
loopne
cmp
and
mov
shlb
scas
nop
sbb
dec
pop
in
jle
jnp
sbb
adcl
sub
pop
add
fdecstp
js
ja
subb
pop
and
xorb
sbb
sbb
leave
std
shrb
ja
xchg
adc
stos
xor
sbb
jne
push
or
jge
insb
and
xchg
and
adcb
sub
cli
mov
push
outsb
lahf
insb
jns
in
loopne
pop
xchg
gs
repnz
insb
add
inc
mov
inc
inc
orb
mov
jbe
movsb
test
mov
pop
andl
pop
iret
cs
jae
into
pushf
bound
aad
pop
lret
lock
fcomps
push
inc
out
int3
cwtl
pop
clc
pop
ss
scas
stos
mov
imul
sub
test
pop
loope
sahf
divps
cmp
rol
mov
cltd
shrb
cli
imul
pop
mov
jns
jae
hlt
pop
mov
jg
pushf
cmc
shrb
movsb
repnz
int
movsb
adc
das
fs
sub
jmp
mov
cltd
out
mov
in
xor
pop
outsb
xorb
pushf
loope
js
jb
add
sub
insb
pusha
pop
cltd
lret
push
inc
je
add
push
adc
movsb
push
jmp
stos
push
mov
xchg
pop
test
or
xchg
adc
test
xor
movsb
xor
jmp
loopne
adc
inc
loopne
and
hlt
repnz
push
push
jno
jp
push
inc
xchg
mov
push
je
and
cli
add
arpl
arpl
dec
mov
in
ficoml
int3
jbe
out
imull
sub
or
and
sbb
lret
pop
adc
cmc
ret
mov
insl
push
cmp
mov
repz
pop
cmp
leave
lds
ret
jae
fs
mov
sub
xorb
mov
data16
jge
jmp
addr16
cltd
loopne
es
jo
xchg
sbb
sbb
sbb
out
stos
and
add
jbe
rorb
dec
push
xchg
leave
cwtl
xlat
inc
test
fwait
aas
push
dec
xor
test
sub
aad
hlt
sahf
vminpd
add
stc
cmpb
cmp
orl
jne
pop
dec
jae
mov
fs
aaa
add
xor
cmc
and
fcmovnbe
push
jecxz
lods
and
lret
adc
roll
sbb
adc
push
aam
out
jecxz
popf
mov
mov
or
int
ja
movsb
faddl
cmp
adc
push
std
or
mov
inc
push
fdivl
pusha
aaa
xor
cmp
inc
fwait
aad
pop
pop
lret
jmp
mov
mov
sub
imull
cmp
leave
push
out
cmp
divl
data16
mov
iret
jbe
mov
pop
pop
imul
sti
fstl
enter
addr16
int3
jmp
inc
test
hlt
mov
mov
fisubrs
dec
pushf
ja
pop
mov
shrl
shrb
lea
dec
pop
gs
sub
enter
dec
int
mov
daa
jb
pop
xor
testl
jge
pop
adcl
mov
mov
xchg
or
push
mov
daa
fucomp
adc
fidivrl
push
aam
pop
pusha
in
mov
das
pop
mov
mov
out
mov
pop
push
mov
lret
xchg
fnstsw
pop
decl
xor
sub
daa
js
fimull
sbb
mov
mov
jnp
fwait
mov
add
lret
loope
pop
push
push
inc
data16
rorl
jo
mov
mov
cld
lds
mov
push
sub
inc
push
sub
gs
test
out
inc
push
in
inc
lret
ret
ja
arpl
rorb
test
push
xchg
int
xor
jge
into
outsb
sbb
rcrl
ss
je
fidivs
loope
add
fidivl
mov
pop
and
mov
sbb
lock
mov
add
push
xchg
fs
lret
mov
shrl
pop
push
fidivs
jle
xor
or
push
jg
xor
out
pop
jne
inc
lds
pop
repnz
inc
sub
mov
stc
mov
scas
xchg
add
adc
xor
iret
nop
movsl
fcoms
push
sbb
lock
dec
fstp
cmp
mov
sub
imul
add
xor
mov
fnstcw
mov
test
mov
mov
inc
inc
inc
popf
push
inc
cmp
popa
jae
addb
scas
add
cmp
shr
lods
mov
mov
pushf
cli
pop
int
add
mov
xchg
add
push
push
cmp
popa
pop
shrl
roll
mov
and
and
mov
cmp
orb
int
jns
mov
adc
cltd
outsb
cmp
pop
push
mov
jbe
jmp
cmp
add
popf
push
xor
imul
xchg
sub
xorb
dec
lea
repnz
and
push
or
enter
loop
ds
adc
test
push
outsb
inc
in
imul
dec
push
mov
inc
xchg
fildl
and
add
pop
divb
or
lods
call
cmpsb
into
sahf
dec
repnz
mov
inc
fnstcw
cmp
sbb
and
es
lret
adc
nop
lcall
loop
mov
jns
out
mov
ret
mov
lods
dec
or
in
std
mov
mov
rorl
inc
addl
xor
and
push
push
std
sub
pop
dec
jg
add
pushf
push
in
or
mov
dec
mov
xchg
imul
movsl
movsb
push
add
loopne
dec
mov
cs
dec
jecxz
mov
bound
cmpsl
fbstp
mov
push
stc
es
push
jbe
and
nop
aam
cmp
sub
xor
lahf
mov
xchg
rclb
rcrl
and
sub
fwait
push
test
cltd
xor
sar
mov
sbb
jp
dec
mov
pop
mov
xlat
mov
fildl
or
test
mov
xor
scas
push
jecxz
in
adc
fwait
notl
std
aam
ret
mov
hlt
mov
mov
mov
mov
hlt
faddp
sub
gs
rorb
inc
out
adc
push
pop
sti
xchg
in
inc
pusha
push
inc
out
mov
ds
lods
clc
mov
aad
mov
and
and
and
push
jl
push
sub
jle
sbb
stos
addl
cld
lret
sub
or
or
push
jb
sbb
lret
jne
mov
cmp
icebp
mov
xor
push
add
pop
nop
lret
xor
insl
dec
mov
ss
rclb
outsl
mov
pop
dec
push
mov
bound
jge
sbb
clc
inc
ret
mov
jno
cmp
insb
shrb
arpl
test
mov
pop
out
nop
repz
outsl
and
test
xchg
jmp
add
mulb
lahf
imul
sub
or
fisttps
outsb
out
jb
inc
mov
push
inc
dec
ljmp
push
cmp
insb
pop
xlat
or
in
lahf
leave
test
inc
pop
jnp
ds
mov
dec
test
mov
mov
stc
mov
cmp
sbb
lods
mov
addb
push
jae
test
lcall
mov
xor
in
mov
xchg
lock
jmp
pop
push
dec
or
dec
sbb
mov
pop
xchg
in
aad
mov
xor
dec
movsb
dec
lock
sub
sbb
lcall
test
arpl
push
jbe
sub
xchg
jp
popa
jl
aaa
cwtl
xor
adc
lods
icebp
mov
sub
lahf
or
lea
or
pop
push
mov
lret
mov
mov
pop
mov
ljmp
fisttpll
dec
iret
push
adc
or
enter
push
xor
mov
es
jnp
push
push
js
pop
mov
stc
fstp
jge
mulb
inc
rorb
stos
mov
mov
mov
mov
out
push
gs
inc
stc
adc
pop
ja
adc
pop
into
jns
cmpsl
cwtl
add
daa
or
cli
xchg
cmp
xchg
fstpt
sahf
xchg
and
data16
and
js
cmp
dec
dec
cmp
xor
insl
lret
pop
xor
nop
pop
lods
add
jbe
fdivrl
jmp
xor
rorb
pop
rorl
pop
dec
mov
jo
adc
imul
rcrb
cmp
aad
fstpt
jg
add
dec
call
daa
notb
dec
jo
and
mov
clc
es
outsb
mov
mov
mov
cwtl
addr16
xlat
hlt
lret
xchg
sbb
lea
dec
and
jecxz
ljmp
shlb
arpl
jle
cmp
or
popl
shll
lock
loop
sub
dec
rcll
pop
ss
ret
test
ljmp
test
or
jnp
adc
out
mov
and
dec
test
jbe
cmp
adc
mov
mov
add
sbb
mov
xor
and
nop
out
dec
popl
mov
sbb
sbbb
push
dec
adc
push
repnz
sub
adc
dec
adc
cmpsl
cmp
pop
rol
mov
cmp
push
movsb
mov
aaa
jp
dec
lods
mov
push
pop
scas
int3
inc
sbb
in
dec
aad
push
pop
lcall
inc
pop
inc
out
mov
or
int
sbb
mov
jnp
xchg
add
in
call
fwait
fs
leave
sbb
je
fldcw
lock
sbb
out
add
test
out
pop
lea
jmp
cmc
ud0
frstor
test
jnp
cmp
inc
mov
movsb
scas
icebp
xchg
bound
inc
cmpsb
mov
arpl
int3
adcb
clc
gs
sbb
pop
add
mov
loope
mov
punpckhwd
shll
std
pop
pop
cwtl
movsl
xchg
xchg
pop
in
sahf
mov
enter
dec
or
jl
hlt
ds
or
es
dec
lret
inc
push
or
mov
mov
sub
fsts
cmpsb
call
loop
add
mov
pop
mov
or
hlt
incb
sub
les
gs
aad
in
fs
call
mov
jecxz
test
jmp
ljmp
cmp
lock
aam
divb
sbb
jecxz
ljmp
ja
push
pop
cmp
lahf
test
dec
mov
call
or
sub
shll
cmp
cmp
mov
adc
imul
inc
xor
mov
out
andb
shrb
dec
cli
scas
out
sub
mov
sbb
push
stos
pop
sub
cmp
ja
xchg
lret
xor
ss
inc
sarl
aaa
movsl
movsb
les
dec
xchg
xor
mov
inc
sub
outsb
jle
jle
imul
aad
sbb
jmp
ret
sarl
mov
sub
orb
mov
add
loope
pop
push
in
sti
jge
cmp
cmpl
mov
fnstsw
ret
mov
mov
mov
and
xor
or
fdivs
dec
and
and
popa
inc
ds
mov
add
jae
sarl
loopne
rcr
enter
stc
and
mov
fcomps
xchg
cmpsb
or
int3
inc
adcl
dec
jle
jge
fisubl
inc
push
add
cmp
imul
loopne
ret
subl
int
rcll
ljmp
rcrl
movsl
imul
ret
sub
cld
int3
insb
push
stos
xchg
imul
pop
dec
sub
sub
stos
sti
xor
mov
adc
int3
push
and
xchg
ds
push
das
jle
inc
out
cmpsb
out
sub
or
jl
das
xlat
cld
negb
outsb
jg
sub
lods
push
and
ror
test
leave
pop
ja
std
lds
orb
push
cli
add
jnp
cmpsb
rcrb
lahf
or
lahf
xor
pop
rorb
lcall
orb
pop
out
mov
lcall
mov
mov
imul
xor
mov
mov
push
dec
call
pop
lret
pop
aam
inc
cmc
inc
adcl
int
aaa
ljmp
cmc
addb
and
jmp
ds
jle
cwtl
movsb
xor
dec
mov
jle
jp
ljmp
out
movsb
pop
lods
div
pop
scas
mov
clc
int
xchg
push
jmp
add
test
rcr
fdivl
mov
push
mov
in
xor
mov
in
jg
dec
and
jmp
scas
or
in
fisubs
leave
push
iret
aad
mov
inc
bound
les
add
pop
jge
cmp
cli
dec
dec
pusha
ds
sbb
fidivrl
shlb
mov
hlt
jge
mov
cmp
adc
pop
inc
insl
mov
mov
mov
cmp
rolb
sbb
incl
mov
insb
adc
or
stos
loop
push
jb
xchg
mov
rolb
xchg
int
push
pushf
jns
mov
dec
mov
lcall
xchg
push
ret
movsl
and
mov
mov
int
pusha
fdivrl
in
mov
enter
cs
add
inc
outsb
das
add
mov
cmp
test
inc
jmp
inc
outsl
inc
mov
inc
pop
add
mov
outsb
sub
andl
cld
fwait
jmp
fistpl
mov
mov
push
lea
pop
sti
mov
xchg
or
mov
mov
outsb
add
stos
push
out
push
fs
aad
jnp
push
rcr
xor
insb
adc
leave
repz
cmp
and
icebp
cmpsb
daa
mov
cmp
mov
inc
push
roll
and
and
and
sbb
and
out
cmp
into
add
test
mov
sub
scas
popf
push
sar
jnp
sub
in
push
mov
push
dec
push
testb
inc
loop
fimull
pop
jns
out
xchg
and
jnp
push
jge
int3
cmpsb
hlt
das
xchg
cs
repz
pop
leave
cmc
out
jle
outsb
enter
aad
dec
xor
gs
dec
push
jns
and
les
adc
cmpsl
xor
pop
data16
push
dec
mov
std
in
pusha
mov
stos
scas
shl
jnp
xor
adc
enter
aaa
fldt
jge
mov
clc
sar
hlt
loope
cltd
sub
rcr
add
jb
push
cmc
adc
push
cmp
fiadds
cmpsl
sub
dec
push
pop
mov
sbb
xor
xchg
jg
sbb
shrl
xchg
std
outsl
lea
cmpsb
pop
sub
cmpsb
and
les
jmp
jle
popa
pushf
daa
inc
mov
cmp
pop
inc
mov
xor
stos
xor
or
mov
bound
sbb
xor
xchg
pop
addr16
outsl
pop
adc
jb
lods
dec
jecxz
movsl
in
scas
je
cmovae
out
jns
ss
cmpsl
jne
jmpw
rorl
sar
les
push
xor
pop
dec
push
int
inc
movsl
xchg
fmuls
and
lcall
in
dec
push
loope
filds
rclb
jb
cmp
popf
inc
sub
mov
dec
and
imul
jne
sbb
popf
pop
adc
clc
paddsb
mov
addb
ret
or
mov
enter
inc
push
dec
dec
das
outsb
loopne
push
shrl
lods
mov
gs
pop
sub
leave
les
test
loopne
cmp
movl
lods
sbb
jne
push
jle
lret
jecxz
lret
stos
adc
inc
inc
fs
rcrb
aam
dec
jecxz
mov
repz
pop
mov
lcall
mov
lcall
jns
sti
mov
push
xlat
jle
mov
scas
pop
sub
cmpsb
in
add
add
pop
xor
mov
jnp
cmpsb
cmp
xchg
jne
shr
and
inc
xchg
push
jns
inc
xchg
rorl
outsb
mov
pop
jmp
insl
sub
adc
push
sbb
shlb
lret
mov
push
nop
dec
jle
xchg
int
subb
std
lcall
lods
test
xorl
cmpsl
and
movb
loope
mov
xor
mov
clc
mov
jecxz
shrb
shrb
cmpsl
sub
mov
aas
and
xor
imulb
cmp
adc
jp
inc
cmp
sbb
mov
xchg
stc
divb
push
sub
xor
inc
sti
sbb
sarl
pop
and
jmp
mov
stos
std
cmpb
push
lods
repnz
call
push
mov
dec
stc
addr16
out
ljmp
push
inc
in
mov
in
add
jb
roll
pop
lods
aaa
sub
bound
jl
sahf
je
dec
daa
pop
sbbb
mov
cmc
lcall
jl
mov
in
pop
mov
sub
xorl
pop
addr16
icebp
loop
cmpsb
ret
lea
loope
loope
push
clc
cmpsb
mov
popf
movsb
jge
std
adc
ds
inc
xor
mov
push
push
push
jge
cmp
ljmp
ja
outsb
shrl
bound
lcall
push
fs
mov
bound
addr16
and
adc
adc
pmullw
mov
stos
sbb
lods
dec
inc
sbb
sub
inc
push
dec
and
adc
mov
xchg
push
es
and
lret
xchg
insb
or
or
repz
push
mov
orl
lret
pushf
jnp
and
and
pop
mov
pop
mov
popf
aad
mov
lods
add
cmp
jnp
stos
push
lahf
lds
fcomip
into
sarl
lods
lret
sbb
lret
sti
ret
jg
call
in
sbb
cli
sub
movsb
jmp
xchg
test
je
jle
movsb
loope
in
sub
sub
mov
cmp
pop
pop
scas
jne
xchg
fbld
in
pusha
mov
arpl
ret
ds
xchg
mov
mov
push
or
scas
and
dec
inc
rol
out
sbb
movsl
enter
xchg
pop
and
or
jle
lfs
mov
dec
pushf
dec
insl
test
adc
cmp
lret
popf
xor
xchg
gs
inc
fisttpll
push
cmp
add
mov
push
ret
add
scas
xor
pop
jno
jle
data16
cmpsb
cmp
mov
push
in
repnz
or
and
orb
jmp
repz
aaa
pop
and
xchg
aaa
fwait
lahf
xor
xchg
and
out
dec
mov
cli
lds
out
test
icebp
cltd
and
lret
pushf
dec
jo
cmp
ljmp
cmpl
mov
add
lahf
mov
nop
jo
push
imul
inc
sub
xchg
jbe
pusha
aaa
xchg
jp
aam
adc
out
mull
ljmp
daa
ret
mov
mov
inc
xor
std
jg
test
mov
mov
out
xchg
int
push
mov
sbb
arpl
mov
and
lea
inc
jnp
sbb
mov
mov
std
out
jecxz
xchg
int3
pop
addl
add
pop
push
je
aam
lds
lock
jecxz
jl
push
out
jmp
xor
mov
adc
mov
mov
in
xor
cmp
mov
xchg
inc
ds
js
mov
bnd
xor
shrb
pop
inc
sbb
cmp
fucom
mov
gs
pop
pop
lahf
mov
push
xor
pop
and
cmp
bnd
pop
sahf
cmp
test
mov
or
adc
les
movsl
mov
inc
push
push
xchg
out
xchg
or
imul
addl
sbb
cwtl
cmpsb
js
sbb
xchg
fs
ret
insb
std
clc
jmp
cmp
mov
lcall
inc
or
shll
aad
jge
cmp
js
mov
fiadds
inc
sub
pop
jle
dec
cmpsl
push
out
xor
ret
aad
in
jb
scas
xor
fdivr
xchg
aaa
cmp
loop
imul
rol
popa
gs
cmp
pusha
or
mov
loopne
jp
mov
jge
mov
lds
pop
imul
orps
xchg
cmp
xor
sub
and
pusha
add
sbb
aaa
inc
lds
in
jg
and
and
mov
mov
xchg
adc
sub
mov
xchg
fstps
adc
cltd
xchg
jmp
sar
cli
push
fnstsw
jmp
inc
mov
imul
push
out
js
jecxz
inc
sub
outsl
sub
ja
push
push
push
inc
daa
jle
lods
push
pop
sar
pop
inc
sub
test
iret
sub
pop
sub
out
jno
push
movsb
repz
push
mov
leave
ror
push
add
sbb
inc
xor
ljmp
pusha
ret
movb
mov
jo
in
cmp
outsl
mov
xor
cltd
aad
cltd
into
rcr
fldt
scas
xchg
lea
push
arpl
leave
jmp
push
push
cmpsl
pushf
loop
dec
test
fcom
adc
sbb
mov
stos
roll
mov
mov
push
mov
mov
pop
xor
andb
lods
test
sub
and
sti
push
jbe
mov
xchg
xlat
pop
cmc
jbe
inc
dec
lods
inc
popl
movsb
add
pop
inc
repnz
ss
js
mov
sub
push
mov
divl
imul
mov
je
pop
pop
aad
ds
arpl
push
pop
inc
mov
adc
mov
mov
pusha
pop
xor
mov
pop
mov
sub
insl
stc
call
out
jae
stos
mov
jno
adc
loop
int3
es
sub
mov
out
mov
bound
mov
cltd
mov
dec
orb
rcrb
sbb
xor
cmpl
popa
and
push
jg
pop
and
jp
ficomps
push
test
sbb
stc
test
filds
mov
stos
lds
lcall
and
js
jne
push
jg
xor
mov
pop
sti
jno
ret
or
mov
ljmp
insl
dec
out
sub
inc
pop
xor
fisttpl
outsb
mov
scas
mov
jg
sbb
repz
stc
cs
mov
clc
daa
fildl
adc
mov
pop
movsl
mull
or
test
fwait
xor
ss
mov
mov
push
int
icebp
clc
dec
shll
push
inc
or
nop
sarl
leave
and
sbb
test
lock
je
mov
or
jle
gs
call
xchg
mov
cwtl
in
dec
cwtl
test
xchg
cmp
push
ja
pop
repz
arpl
mov
mov
in
es
dec
enter
lcall
and
push
lret
test
jae
mov
imul
push
mov
push
sub
outsb
xor
lds
and
push
push
pop
lcall
pop
cmp
ljmp
arpl
xor
pushf
adc
xchg
dec
pop
icebp
mov
jae
and
and
jbe
sahf
cmpsl
xor
inc
mov
adc
inc
or
inc
mov
gs
mov
xchg
lcall
aad
or
xor
iret
inc
xchg
or
in
les
sub
xor
orb
cwtl
cld
xchg
call
jle
dec
mov
pop
inc
inc
and
add
mov
in
dec
cmc
pop
dec
dec
scas
int3
nop
ja
gs
push
push
jns
jbe
or
daa
rolb
jno
and
jns
imul
loopne
adc
lret
pop
mov
push
pop
outsl
test
hlt
mov
je
fldln2
sar
mov
pop
inc
sub
sub
dec
pop
pop
jbe
loop
mov
pop
orb
daa
dec
les
pop
xchg
xchg
int3
sbb
shl
hlt
or
lea
dec
mov
addr16
mov
xchg
mov
or
enter
and
repnz
mov
jnp
shll
adc
ror
fdivl
out
mov
and
ds
add
popf
dec
popa
jmp
mov
push
push
xorl
daa
into
lds
push
loope
push
push
pop
or
in
and
lock
cli
roll
fsqrt
lock
int3
enter
pop
and
jl
and
hlt
jge
imul
and
adc
ds
xor
jle
xor
paddb
mov
adcl
sbb
or
andl
sbb
add
nop
pop
or
sbb
js
hlt
test
push
enter
or
inc
and
add
fcomip
adc
pop
sub
lock
push
xchg
imul
ljmp
jg
lcall
addr16
lods
sub
int
cmp
cmp
xor
mov
push
and
cmpsl
and
mov
lods
mov
add
in
dec
test
clc
dec
arpl
mov
mov
aas
mov
add
leave
xor
jmp
jmp
clc
dec
mov
cmp
xchg
mov
repnz
enter
xchg
mov
test
jno
je
cli
clc
imul
xor
inc
mov
fildll
inc
and
fnstenv
roll
mov
cmp
daa
push
xchg
les
sub
push
or
fists
dec
cmpsl
js
inc
insl
std
jle
xor
fimuls
adc
xchg
cs
gs
and
jno
mov
sahf
push
cmpsl
insb
stc
lcall
sbb
stos
addr16
flds
sti
pop
insb
cli
fistps
mov
mov
leave
sbb
mov
jl
xchg
or
sub
cwtl
pushf
mov
xor
xor
in
shr
call
adc
in
pop
stos
or
shl
push
mov
stos
rorl
lcall
or
sub
dec
fildll
test
mov
pusha
push
cmp
dec
imul
rorb
andb
sub
test
cld
shlb
sub
sub
icebp
roll
mov
xor
jp
push
push
in
lahf
push
test
pop
mov
jae
fucomp
aas
push
in
push
push
aad
es
inc
insb
jl
jne
dec
xchg
mov
cli
rcrl
xchg
sub
xor
sbb
data16
or
mov
ja
orb
sbb
out
mov
filds
rcll
inc
insl
data16
testl
push
int3
sbbb
ret
pop
imul
cmc
push
out
cmp
ss
jg
std
into
xchg
inc
sbb
ficoml
jbe
arpl
jge
pop
xor
or
je
cmp
sub
testb
xchg
xchg
lods
xchg
xor
and
insl
dec
insb
rolb
xor
scas
push
in
push
pop
in
push
jo
inc
pop
dec
jo
xchg
push
out
rcrl
mov
cmp
test
mov
or
aas
push
xchg
punpckhwd
xor
mov
mov
or
jecxz
ret
xchg
dec
cmp
jp
fnsave
sbb
in
adc
das
pusha
sub
inc
push
pop
dec
or
dec
es
movsb
cmp
in
mov
xor
cwtl
iret
push
mov
pop
jne
push
shrl
fiadds
pop
adc
sbb
or
pop
jno
jnp
sub
mov
jnp
inc
xchg
sbb
jno
pop
jg
int
insb
jmp
cwtl
xlat
cltd
popl
adc
hlt
in
jno
pop
pop
sbb
push
lcall
inc
rcrb
les
movsb
jno
in
ret
push
imul
mov
and
lds
loopne
insl
or
notl
or
imul
test
outsb
mov
js
mov
jb
sahf
lds
cld
sub
pop
es
in
mov
lods
pop
dec
push
sub
loop
test
jns
fdivr
mov
hlt
pop
push
inc
popf
in
es
mov
lds
jno
inc
fsubrs
xchg
push
mov
insl
lock
push
ficoml
aam
mov
push
add
fnstcw
inc
ret
adc
sbb
sbb
or
dec
shl
jns
repz
sbbb
inc
ja
mov
ret
test
loop
loop
xor
fstps
jmp
cs
sub
jbe
hlt
mov
sbb
fcmovnb
imul
fisubs
call
hlt
sbb
hlt
dec
dec
test
and
into
xor
es
inc
addb
int3
aas
stos
or
nop
aam
and
fs
dec
push
aas
pop
or
mov
rorb
cmp
fists
mov
out
enter
mulb
push
shll
incb
jge
xor
mov
paddq
outsb
popf
xchg
inc
call
arpl
push
add
jle
ret
sti
lahf
adc
adc
daa
cmp
lds
popf
push
sub
test
rcr
subb
outsb
imul
mov
dec
dec
lods
cmc
sbb
subb
mov
jp
mov
sbb
outsb
pop
ja
lahf
shrb
arpl
loopne
aam
imul
cmpsb
dec
out
incl
out
lea
jp
out
daa
ret
mov
and
xor
xor
inc
and
aam
call
cmp
repz
push
dec
push
ss
loopne
lock
push
mov
or
cmp
pop
adc
sbb
mov
ja
pop
jmp
sub
mov
jmp
aam
fsubrs
das
pop
push
cmc
loop
loopne
pop
and
jg
push
xchg
xlat
out
insb
mov
xor
mov
mov
mov
stos
fsubr
fucomp
sub
or
aam
or
jl
mov
pop
addr16
lret
xor
out
stos
jle
cmp
mov
push
push
testb
xchg
sbb
dec
es
cmpsb
jg
mov
scas
aas
pushf
sbb
xor
inc
pop
pop
repz
sub
xor
leave
and
dec
sarb
xlat
lods
push
int
push
dec
xlat
and
sbb
fcoms
ret
sahf
push
cmp
aam
dec
pop
fisttpll
cmp
stc
mov
jne
add
mov
shl
push
aaa
int3
xchg
hlt
jo
inc
iret
xchg
imul
out
jae
push
cmpl
push
pop
popf
lea
add
pop
jae
sub
out
sbb
out
call
sub
aam
mov
addr16
adc
jmp
lcall
test
cmpsb
inc
mov
scas
hlt
aad
jmp
je
aas
pop
es
xor
and
inc
dec
cmp
jge
sahf
mov
scas
pop
cmp
test
inc
or
mov
xchg
mov
lods
mov
dec
inc
data16
insb
imul
lcall
fs
xor
mov
adc
xlat
lret
incb
imul
pop
sbbl
mov
adc
cs
test
mov
clc
dec
lds
icebp
int3
sbb
mov
pop
adc
lea
add
jmp
push
jge
lret
pop
je
jecxz
aaa
jg
ljmp
imul
cmpsl
idiv
dec
cmp
mov
cmp
jns
rcrb
jno
pop
lcall
ret
cmp
xor
inc
pop
repnz
jno
insl
imul
or
je
adc
test
ret
stos
popa
push
or
sub
lods
mov
cltd
lcall
shlb
jle
sarl
push
jbe
inc
fnstenv
imul
aad
mov
sbb
push
fdivrl
std
xchg
into
or
add
push
addr16
lahf
arpl
movsl
push
xor
pop
xchg
ja
pop
sbb
push
or
mov
pop
iret
sbb
push
lret
push
ret
jbe
pop
and
lret
xchg
add
mov
push
dec
imul
cmc
jl
push
cmp
and
xchg
pop
leave
sti
shll
and
cmp
dec
icebp
popa
repnz
scas
mov
data16
xchg
adc
idivl
jbe
imul
fincstp
and
stos
add
sbb
inc
add
pop
xchg
inc
push
pop
lods
pop
negb
push
push
push
mov
imul
sarb
loop
aad
jbe
adc
push
add
xchg
loope
mov
mov
shr
into
mov
sbb
imul
dec
jno
jne
cmp
inc
test
mov
adc
out
adc
ds
push
mov
popl
fdivrs
incl
xchg
cwtl
addl
pop
xor
fstpl
or
fsubrs
sbb
or
xor
mov
out
push
add
lods
fnop
frstor
jae
loopne
je
push
pusha
sahf
pop
loop
mov
sti
push
adc
push
es
movsl
xor
jp
out
jp
lods
shr
movsl
xchg
xchg
sub
mov
jg
popa
insl
aas
hlt
jno
dec
mov
insb
int
aam
adc
dec
jo
jp
cmp
popf
ljmp
aas
xor
cmpsl
lea
sarb
out
jb
es
dec
inc
int
mov
test
sub
sub
shlb
sbb
push
ds
aas
cmp
inc
gs
mov
jp
cli
pop
cs
ret
fadds
das
test
fldl
mov
push
cmp
cmp
pop
fwait
leave
arpl
push
incl
push
xor
mov
sub
add
xchg
ss
mov
sub
mov
sar
sub
dec
mov
and
mov
shl
and
cwtl
bound
lods
lcall
push
push
addb
inc
mov
xchg
fildl
cmpl
scas
adc
mov
movsl
mov
repz
lret
mov
mov
pop
or
cmp
insb
mov
aam
ljmp
adc
jle
dec
mov
mov
adc
shll
sbb
inc
in
mov
pop
dec
or
mov
pop
dec
sub
ljmp
fwait
jge
ss
aad
and
cmp
xchg
mov
mov
sbb
rorl
cmp
jne
push
arpl
popa
push
cmp
inc
sub
data16
push
fimuls
or
lret
negb
iret
mov
popl
lret
scas
popf
and
and
das
lods
rcrb
or
mov
filds
mov
jp
adc
gs
in
xor
fidivs
push
ljmp
ds
emms
movb
adc
and
xchg
jno
cmp
push
lcall
out
push
pop
mov
stc
xchg
jno
aam
cmp
or
or
mov
and
dec
jb
test
out
lret
call
push
adc
fcoml
loopne
fisubrs
stos
aaa
orb
sbb
andb
inc
pop
sbb
outsb
xor
pop
mov
int
adc
pop
mov
jne
inc
push
push
lock
incb
fisubrl
sti
jle
fsubrs
push
insb
fdivr
adc
sub
jge
push
cmpsb
mov
nop
xchg
popa
ss
scas
and
mov
inc
mov
loope
dec
inc
xor
inc
mov
fsts
data16
mov
cwtl
repz
pop
mov
pop
mov
aad
cmp
sahf
dec
mov
fs
jmp
add
mov
mov
repz
lea
aam
inc
in
nop
ret
lds
lock
push
dec
shrb
es
and
shl
push
pop
iret
sub
push
fldcw
and
pop
popa
cmp
test
dec
out
or
mov
push
add
adc
mov
lods
pop
mov
jle
test
inc
popf
mov
lock
hlt
jne
in
jns
mov
mov
lds
sbb
movsl
ret
not
lock
pop
mov
inc
xchg
hlt
dec
jae
aas
fcmovnbe
add
dec
out
xchg
repz
sbb
or
push
pop
popl
cmp
fwait
in
ret
mov
fsubs
xchg
push
push
cmp
lods
jno
test
push
fsub
adc
adc
sbb
scas
cmp
in
cmpsl
and
mov
adc
inc
bound
xor
or
push
call
cmp
xor
out
xchg
dec
push
pop
xor
cmp
cwtl
notb
mov
dec
sub
imulb
es
shll
out
fwait
sbb
mov
mov
stos
fcmovnb
xchg
testl
push
xchg
divl
sbb
outsb
call
lahf
jle,pt
repz
or
push
rclb
mov
xchg
or
and
cmp
push
adc
dec
les
pop
inc
test
popa
mov
cmc
cmpsb
inc
clc
and
and
pusha
out
mov
cmpsb
js
xor
mov
mov
lock
fst
sahf
fst
ret
repz
mov
jns
mov
test
and
repz
and
mov
and
push
jo
adc
mov
sub
outsb
xchg
dec
sbb
cmpsb
scas
imulb
pop
out
mov
push
int3
push
dec
sbb
in
xor
arpl
cmc
dec
pop
or
stos
arpl
inc
xchg
xor
pop
cmc
daa
xlat
sub
add
fidivrs
fs
add
mov
leave
jnp
sahf
stos
xchg
lret
pop
xlat
jmp
idivl
mov
mov
lods
dec
outsl
sub
cld
divl
xchg
push
push
stc
clc
push
push
jp
xchg
mov
or
out
das
sti
push
frstor
push
enter
mov
push
into
popf
enter
pop
pop
pop
mov
lock
aaa
jp
pop
int3
or
and
notl
clc
lods
pop
dec
loop
lods
insl
sub
or
addb
dec
iret
sbb
sub
or
rcrb
mov
adc
in
lods
sub
cmp
sbb
jae
jmp
fisttpl
dec
add
and
roll
out
push
add
lea
mov
scas
into
cli
cwtl
pop
push
xchg
sub
inc
out
inc
or
inc
data16
lret
add
sbb
mov
out
ljmp
cmpsl
push
xor
inc
arpl
and
and
aas
xor
sub
cmp
jns
cmp
mov
push
lahf
mov
je
in
or
mov
cld
cmp
lret
inc
loop
sub
div
mov
cld
sbb
scas
fisubrl
sbb
sbb
sbb
cmp
adc
cmp
jne
mov
mov
adc
add
in
mov
and
push
add
pop
pop
mov
cltd
sbb
push
push
mov
cmp
sub
cltd
jno
bound
in
std
jbe
loopne
adc
bound
dec
shll
rolb
subl
mov
xchg
cld
movl
jne
mov
sbb
add
mov
pop
lcall
lcall
push
cwtl
fisttpll
adc
ret
mov
push
cmp
test
sbb
push
insl
xchg
nop
lods
fcoml
xlat
ja
fprem
or
mov
pop
dec
lret
cmp
and
mov
les
test
ss
mov
std
inc
xor
sbb
xchg
dec
into
jo
push
aaa
clc
adc
dec
out
push
pop
ds
js
and
js
pop
add
loope
cli
int
jo
cmc
fildll
mov
pop
jo
sub
ficoml
ss
test
mov
mov
ret
dec
in
cmp
mov
test
pop
add
mov
push
outsl
or
jp
popa
stos
pop
mov
inc
lock
xchg
fwait
jne
pop
jmp
inc
add
addr16
lret
mov
sub
push
cwtl
ss
loopne
xchg
cli
or
mov
xchg
or
nop
push
das
cltd
xchg
jne
inc
sub
sbb
push
jns
dec
push
std
icebp
arpl
dec
loop
in
dec
cmp
jnp
out
jo
mov
or
xchg
mov
in
aad
imul
jne
mov
popa
lods
push
shr
arpl
inc
adc
sahf
xor
add
out
loopne
fucomp
test
dec
and
loope
jmp
leave
lock
or
and
mov
sub
mov
xchg
shrb
xor
scas
lock
nop
mov
pop
icebp
jns
cmp
pop
add
or
dec
mov
mov
pop
mov
std
push
mov
mov
pop
popa
jbe
cld
lea
push
out
dec
cltd
scas
dec
push
mov
js
gs
sub
inc
fisubrl
out
inc
inc
divl
push
lcall
mov
dec
sub
cli
loope
mov
push
insl
fcompl
stc
imul
jne
jnp
lock
mov
cmc
insb
js
jmp
fidivs
mov
stos
faddl
push
xchg
faddl
int
fcoml
gs
xchg
test
or
test
mov
mov
out
inc
jo
xor
imul
orl
cltd
outsb
leave
insl
mov
inc
pop
dec
mov
dec
push
inc
in
and
xor
sub
filds
popa
sub
inc
or
loop
pop
xchg
fadd
dec
sahf
addr16
in
sbb
aad
or
das
ret
and
pusha
shlb
push
add
loopne
sub
mov
repz
xlat
pop
xchg
xchg
sbb
mov
ja
in
cmpsl
sbb
adc
mov
sub
pop
pop
js
ret
sbb
in
push
xlat
mov
jbe
das
inc
and
repz
addr16
push
test
ljmp
in
inc
insb
push
jb
xor
ficoms
popf
int3
jbe
ja
fsts
out
xor
cmp
mov
sti
pop
loope
outsb
stos
mov
mov
mov
leave
pop
loopne
stc
fsubp
mov
lock
jnp
lods
push
cli
or
popf
dec
mov
in
or
lea
je
mov
mov
push
lods
fildl
pop
stos
mov
lret
loop
xchg
iret
push
xchg
pop
repnz
mov
pop
xchg
jl
inc
insl
xchg
sti
sbb
mov
cmp
fdivl
clc
idivl
aas
add
test
in
mov
jno
cli
js
jo
icebp
test
inc
or
sub
push
cmc
iret
out
push
lds
test
push
fdivrl
jecxz
pop
mov
dec
outsl
daa
test
pop
jo
mov
out
outsb
jp
imul
xor
xlat
stc
add
jmp
xor
into
add
in
movsl
sbbl
cmp
sbb
bound
push
xchg
and
int3
daa
nop
mov
lahf
inc
fdivrl
dec
sbb
std
cmp
insl
jbe
sub
ljmp
lods
arpl
or
cmpsl
lods
and
insl
mov
pop
jbe
pop
popa
pushf
into
out
cli
shlb
test
adc
cmp
sbb
enter
jp
int
pop
xchg
cmp
xchg
in
pop
scas
push
pop
add
jp
cli
sub
add
xor
mov
mov
jbe
in
sar
push
stos
aad
aaa
mov
push
scas
testb
imul
stos
arpl
cmpl
addr16
cs
push
xchg
xbegin
or
sbb
jmp
add
push
pop
pop
mov
rcl
out
mov
arpl
leave
cmc
mov
adc
mov
fdivrl
adc
es
setb
xlat
jnp
push
push
xor
add
into
jp
and
mov
imul
popf
or
mov
xlat
xrelease
xchg
fwait
mov
sbb
jecxz
fisttpll
js
scas
fdivr
insb
les
jmp
jmp
in
pop
adc
out
repz
mov
mov
mov
push
pop
sbb
je
push
add
sarl
pop
loope
clc
je
xchg
lods
repnz
cwtl
xchg
stc
into
xchg
aad
jp
pop
lret
dec
sahf
mov
lret
mov
cmp
scas
sbb
fstl
xchg
adc
repz
lahf
js
divl
jp
xchg
outsb
mov
fistps
shll
xchg
aaa
scas
inc
mov
inc
mov
or
scas
xor
iret
pop
cmp
in
jg
out
scas
xchg
in
movsl
icebp
xchg
je
enter
inc
bound
mov
pop
js
xor
daa
cwtl
lds
dec
sub
jno
xor
jp
outsb
jle
jb
ret
cli
jo
push
add
gs
dec
sub
xchg
test
mov
pop
pop
jecxz
ds
fldcw
fdivs
xchg
cmpsl
cmc
fcomp
mov
stc
mov
push
pushf
mov
lock
xchg
jmp
loop
adc
sbb
cmp
icebp
shr
adc
sub
imul
xor
push
xchg
xchg
push
adc
out
add
cld
insl
xorb
mov
sbb
negl
js
push
or
pop
jmp
test
shlb
dec
out
ds
cmc
pushf
mov
test
repz
mov
imul
jge
hlt
inc
fwait
push
mov
mov
sbb
mov
adc
cld
and
inc
xchg
pop
xchg
mov
push
mov
pop
icebp
jae
loopne
ret
xor
js
test
lods
mov
sub
jns
mov
popf
aaa
rolb
test
dec
sti
jge
jbe
outsl
stc
ss
jmp
mov
mov
fwait
and
pop
stc
imulb
dec
push
scas
js
mov
pusha
cmc
addb
adcb
cs
and
imul
js
insb
subb
pop
pop
aad
es
pop
daa
jbe
insl
add
std
or
test
add
mov
aaa
outsb
add
and
xchg
mov
fucomip
sub
inc
in
mov
roll
pop
dec
cmp
add
scas
int
sahf
xchg
cmp
inc
jae
fistpl
fisttps
xchg
jb
jno
lcall
cli
sarb
dec
stos
mov
shll
xchg
icebp
and
and
dec
push
mov
cmp
mov
aad
pusha
bound
xchg
decl
or
das
lret
push
shl
jp
pop
scas
lods
mov
adc
and
push
or
cvtdq2ps
mov
fs
scas
inc
lods
push
out
dec
cli
fildll
notb
sbb
enter
fwait
jecxz
jbe
inc
dec
loopne
cmpsl
repnz
ret
hlt
popa
sbb
aam
cmpb
in
popl
inc
push
orb
jecxz
in
fidivs
ds
inc
and
fisttpl
jns
ds
clc
jmp
adc
push
lcall
mov
mov
push
testl
shlb
mov
mov
mov
nop
daa
js
das
daa
push
mov
jo
ljmp
scas
mov
xlat
or
inc
and
in
xchg
inc
cmp
sbb
or
pop
inc
and
xchg
mov
sub
xchg
mov
mov
lret
jmp
mov
mov
or
bound
mov
stos
dec
pop
aam
lahf
inc
inc
out
xchg
inc
xchg
das
mov
and
xor
or
cmpl
lret
cmp
adc
mov
movsb
scas
popa
xor
add
pop
cltd
sbb
mov
nop
aam
and
and
cmc
or
fmuls
jns
and
push
clc
lods
and
jnp
insl
jb
push
dec
fmul
test
inc
mov
imul
sbb
addl
add
inc
andl
gs
cmpsb
mov
ficomps
mov
sub
sbb
sbb
dec
gs
loopne
data16
or
adc
and
dec
sub
cs
pop
push
mov
jno
ret
and
sbb
cli
cli
ljmp
push
inc
mov
xor
push
and
call
inc
lret
loop
insl
xor
jno
ja
lret
pop
sbb
daa
inc
insl
pop
xchg
movl
ret
inc
and
lret
ror
adc
xchg
hlt
pop
leave
int
inc
inc
lea
fldl
jbe
mov
sbb
shrb
add
add
sti
nop
mov
mov
xorb
out
test
push
push
mov
mov
aam
pop
popf
stos
adc
mov
jmp
sub
fisubs
je
push
outsb
jge
inc
xlat
daa
ffreep
mov
jg
xchg
imul
and
insl
aam
jecxz
xor
dec
push
pop
nop
sbb
je
fcmove
nop
xor
cld
fs
mov
dec
imul
cmpb
imul
pop
mov
inc
pop
lret
cld
ret
jae
mov
jne
jecxz
rolb
stc
and
movl
lret
arpl
mov
mov
mov
add
mov
pop
lods
jecxz
das
jmp
sub
xor
adc
push
mov
in
xchg
or
and
mov
or
popf
jle
jge
push
movsb
push
pop
sbb
dec
mov
sub
js
pop
lret
and
insb
mov
xorb
xor
addr16
inc
lret
cmp
mov
dec
pop
xchg
test
ret
add
outsl
mov
addb
and
push
fildl
movb
fwait
adc
mov
mov
mov
pop
xor
int
xchg
mov
and
fwait
jp
aaa
cli
inc
xor
sbbb
out
pop
scas
sbb
je
mov
lock
mov
add
cwtl
insb
mov
fnstsw
loope
adc
outsb
cmp
ret
mov
pusha
jg
sub
mov
push
sbb
movsl
and
daa
mov
lock
jne
fiaddl
push
mov
js
dec
rorl
pop
call
jmp
leave
cmp
stos
mov
outsb
fmuls
out
pop
gs
ja
aad
in
out
push
cltd
push
xchg
hlt
sbb
dec
push
push
outsb
xchg
in
lods
fs
loop
cmpsb
pusha
aam
insb
mov
shrb
jae
inc
ucomiss
jae
movlps
xchg
push
mov
push
ret
push
sbb
fsubl
movb
and
cli
push
int3
and
arpl
jle
shlb
and
fiadds
icebp
mov
and
dec
mov
nop
jo
mov
cmp
loop
inc
and
xchg
push
push
imul
dec
data16
inc
or
add
lcall
cmc
inc
pop
test
popf
sbb
leave
push
es
sub
jle
int
jne
mov
sub
std
stc
sbb
mov
outsb
pop
fwait
sbb
dec
sbb
cmpl
dec
adc
sbb
nop
mov
imul
push
inc
or
mov
cmc
loopne
call
stc
cmpsl
mov
addr16
cmp
cmp
sahf
addr16
les
jne
in
popa
xchg
xchg
xorb
mov
cmp
imul
fwait
sbb
sbb
stc
cwtl
pop
cld
frstor
subl
dec
icebp
dec
ret
jns
lods
aam
iret
scas
fwait
and
sub
out
mov
pop
mov
in
inc
cmp
mov
jno
fisubrs
pop
call
data16
clc
sub
or
in
xchg
int3
dec
aam
aaa
imul
and
mov
push
push
or
mov
andb
jne
xchg
pop
shll
or
lock
mov
mov
jo
jo
das
mov
push
filds
sbb
lods
xor
das
xor
dec
pop
xchg
pusha
mov
sbb
mov
test
int3
cmp
ret
jbe
push
mov
pop
call
xchg
out
iret
xchg
loopne
cmp
lock
mov
push
mov
xchg
push
sub
jo
in
mov
int
sub
pop
lods
ficoms
pop
fdivrs
jb
inc
jnp
test
jecxz
jecxz
rcll
rcll
push
push
rcl
out
fimull
mov
aas
or
pop
mov
and
jne
popa
insl
in
popf
xchg
cli
cltd
cmc
cmpsl
cltd
into
test
pop
add
mov
fdivr
repz
fisubrs
add
dec
sbb
cs
cmp
adc
xor
mov
lea
adc
test
cs
xor
mov
enter
pop
mov
pop
ss
push
mov
ja
or
ja
imul
mov
xchg
cs
or
sbb
mov
lds
outsb
arpl
or
int3
lahf
lods
inc
pushf
insb
ret
sbb
pop
rcl
and
inc
inc
js
sub
je
cmp
ret
mov
add
pop
jb
bound
mov
ljmp
std
popa
rorl
jnp
push
jnp
mov
adc
aam
loop
aad
jp
jne
hlt
loope
mov
mov
jnp
xchg
addr16
aas
inc
inc
das
insb
mov
add
test
lea
push
dec
cld
outsl
leave
add
fwait
mov
lret
cwtl
push
loope
sub
dec
push
outsl
aas
cmp
xchg
adc
popa
adc
inc
xchg
into
lods
mov
add
sahf
push
adc
icebp
lret
or
ja
add
jnp
leave
cs
fimuls
xchg
sbb
int
decb
push
lods
iret
ss
sub
jp
and
adc
sbb
add
in
push
fildll
pop
dec
les
bound
mov
sbb
scas
xorb
int3
adc
push
aas
push
test
fucomp
aas
mov
and
stc
sbb
cmpsl
jl
jne
bnd
mov
sbb
xchg
rorl
pop
push
ja
aad
lods
mov
stos
pop
adc
xlat
pop
inc
and
aad
ss
xchg
into
cmp
push
push
cmp
mov
pop
add
fs
mov
or
sub
jge
push
sbb
mov
jno
daa
lret
sarb
out
sub
in
adc
dec
mov
lods
sub
xchg
jmp
shl
ds
adc
scas
xchg
arpl
mov
xchg
in
outsl
push
test
fsubs
xchg
popl
pop
out
dec
sbb
les
aam
jae
dec
push
ja
mov
sbb
fistpl
jns
jne
lods
popf
fwait
cmpl
jae
and
es
cli
in
push
pop
and
out
and
sti
cmpl
xor
ret
xchg
jae
in
mov
hlt
aad
xchg
je
repz
adcl
mov
inc
fnstsw
fisubrs
jle
mov
es
dec
mov
sub
mov
xchg
aas
out
or
mov
inc
or
mov
jb
jecxz
pushf
dec
adc
dec
mov
push
test
addb
xchg
lea
into
mov
mov
xor
push
pop
lds
test
subb
push
out
jecxz
or
pop
aam
and
jno
leave
or
test
or
adc
sub
aam
inc
rclb
inc
movsb
dec
pop
adcb
iret
rcr
push
xlat
repnz
rclb
mov
xchg
ljmp
out
cmpsl
neg
leave
int3
mov
xor
or
fnstcw
pop
jnp
lods
negb
adc
mov
mov
cmp
pop
in
subb
bound
sbb
loopne
pop
xchg
or
jge
loop
imul
rorb
sub
xchg
sbb
mov
cmc
aas
xchg
xor
sbb
fs
dec
js
jae,pt
test
jae
lahf
iret
jg
inc
les
ret
insl
or
jno
xor
inc
cli
rcrl
or
push
out
mov
cld
mov
sti
sbb
fwait
scas
cwtl
push
das
sahf
push
nop
leave
rcr
or
aad
sbb
add
or
xchg
jo
daa
lret
dec
sarb
mov
int
scas
push
movsb
add
push
jb
cltd
ljmp
sub
mov
das
fs
fdivs
or
dec
jle
out
mov
xor
pop
mov
inc
and
movsb
or
adc
cwtl
fprem
add
loopne
dec
push
out
xor
in
lods
test
xlat
sub
jge
jmp
in
xchg
mov
stc
adc
hlt
jl
lret
test
inc
repnz
mov
jne
decb
pop
fisubrl
testb
xor
stc
test
daa
lea
push
outsb
movsb
call
push
xor
test
in
add
push
sbb
jns
mov
cmp
ss
sbb
test
jo
mov
or
mov
inc
jecxz
pop
pop
mov
fwait
mov
xlat
mov
sbb
xlat
fidivrs
fcoml
inc
fwait
ret
out
in
sbb
cmc
inc
sbb
popa
aas
shll
repnz
pop
stc
cmp
popa
inc
in
jecxz
shlb
dec
jecxz
mov
lea
lcall
rolb
push
jmp
nop
pop
xchg
dec
sbb
mov
popa
jmp
clc
jae
or
shll
xchg
sub
pusha
or
and
adcb
pop
shrl
sar
xor
push
ds
lcall
add
out
jne
xchg
test
fcomi
dec
and
shlb
bound
cmpsl
mov
lods
push
inc
sbb
mov
sbb
out
int3
pop
pop
andl
ljmp
cltd
or
out
jne
cmc
pop
sbb
orb
mov
subb
daa
sub
cld
jecxz
jae
flds
movsl
adc
xchg
pop
inc
push
popa
jl
mov
fisttpll
int3
test
and
outsl
cltd
pop
out
mov
jnp
mov
adc
int3
xchg
stos
xchg
cs
inc
sub
in
jle
pop
mov
in
std
fs
pop
sbb
ret
lock
cmp
and
es
movsb
and
daa
rclb
inc
mov
sub
mov
sbb
pushf
filds
ss
mov
pcmpeqb
push
jmp
pop
ljmp
push
es
out
xchg
mov
jbe
rorl
jmp
mov
js
cmp
add
ret
or
out
stc
or
pushf
in
test
pop
add
int3
fs
xchg
cltd
mov
outsb
or
fs
pop
fistps
sti
or
scas
cld
mov
pop
push
insl
sub
and
out
xor
cli
sbb
xor
adc
lcall
sbb
int
dec
movsl
clc
push
dec
inc
inc
jb
sbb
mov
clc
popa
adc
jecxz
movsl
sub
daa
repz
push
or
not
test
jo
push
cmp
mov
xchg
add
jg
lret
ret
adcb
lds
or
pushf
jge
xor
inc
js
out
int
push
xor
sbb
out
lahf
shl
idiv
cmp
ss
xor
in
push
scas
mov
popa
xor
jo
jo
push
xchg
xor
fnstsw
mov
gs
fcos
pop
xchg
sbb
add
jnp
cmp
jmp
xchg
mov
orb
mov
fsub
mov
loopne
add
xchg
lock
jmp
inc
sub
or
negl
cs
lret
jecxz
and
xlat
adcl
lock
fldl
sbb
push
mov
dec
pop
xchg
push
sarb
dec
icebp
add
stos
fbstp
leave
push
add
inc
outsl
dec
ds
rorl
mov
inc
stc
mov
and
xor
aam
das
rcl
mov
outsl
test
or
adc
cmp
dec
cld
dec
jl
fdivrl
mov
adc
popf
pop
fcmovu
or
push
push
fdivr
addr16
mov
lods
in
sbb
in
mov
dec
xlat
aam
sbb
xor
inc
mov
jecxz
inc
cwtl
push
nop
std
les
addl
movsl
arpl
shlb
mov
push
inc
cmp
clc
dec
icebp
cmp
lret
pop
and
cmpsb
das
pop
push
aad
fnsetpm(287
adcl
and
xor
mov
mov
adc
sbb
or
insl
pop
add
sbbl
fnstenv
insl
inc
out
mov
nop
bound
fstps
xchg
shrb
fisubl
push
imul
pusha
pop
sub
call
or
mov
mov
cwtl
ljmp
inc
cmc
sub
leave
clc
mov
adc
sar
out
es
mov
pop
stc
scas
pusha
pop
inc
insl
arpl
lds
data16
js
cmp
test
fs
addr16
idiv
adc
xchg
or
das
pop
icebp
mov
in
jne
add
adc
lock
mov
repnz
inc
out
mov
sbbb
or
nop
pop
add
push
xchg
xchg
and
sbb
insb
mov
fsubr
loope
je
clc
test
xor
or
test
shlb
into
js
cmp
xlat
shrb
in
int3
jb
inc
push
int
out
rcrb
imul
shll
add
lock
and
idivb
xor
sbb
test
imul
push
mov
ds
jmp
shl
xchg
push
cmp
add
sub
push
jl
imul
add
jmp
sub
xlat
addr16
rolb
std
lock
cmpsl
cmp
jg
movsl
and
insl
mov
or
rcl
inc
loopne
mov
lds
or
xchg
pop
scas
inc
lret
pop
push
dec
cmp
mov
in
inc
loopne
or
xor
mov
mov
push
sbb
mov
jns
sbb
pop
cld
fldcw
add
and
mov
int
outsb
mov
imul
sbb
mov
sub
sbb
dec
mov
test
ja
int
test
xchg
aad
or
cmpsl
clc
sbb
fmuls
cli
mov
lods
cld
mov
gs
cmp
jae
adcb
in
arpl
shl
jge
xchg
js
lods
push
xorb
mov
dec
jp
dec
sub
rol
notb
xlat
mov
mov
sahf
popa
cwtl
sub
stos
test
lods
fwait
add
imul
cli
out
cmp
stos
sbb
mov
pop
mov
into
shr
lds
mov
imul
xor
testb
imul
pop
jae
xchg
dec
dec
or
out
and
ret
sahf
lock
mov
jnp
mov
xchg
add
pop
stos
ficoms
mov
shl
mov
shlb
cmc
xor
aam
cmp
mov
leave
dec
sti
stos
scas
sbb
addr16
sub
and
popf
sub
ret
or
inc
cli
sbb
pop
aam
movsl
ficoml
clc
scas
mov
ja
xor
out
xchg
sub
sbb
lods
jmp
jmp
lock
negl
subl
adc
push
not
pop
jne
or
lock
add
imul
add
into
pusha
leave
or
rolb
in
sti
test
push
lods
sub
cmp
jnp
sub
or
push
int
nop
mov
adc
call
cld
popf
inc
lods
or
mov
mov
dec
and
dec
pop
movb
fwait
nop
lods
fstp
sarb
inc
mov
out
mov
xor
adc
repz
push
in
mov
testl
inc
and
adc
cmc
inc
jecxz
push
dec
lret
pop
dec
dec
mov
loop
mov
out
mov
inc
arpl
push
ja
xchg
push
mov
adc
pop
adcb
mov
add
jns
add
push
jno
and
sub
fisttpll
adc
cli
scas
cmp
xor
pop
dec
das
and
jbe
push
adc
jae
add
imul
scas
jb
cmp
cmpsl
push
xchg
neg
push
lds
cmp
adc
popf
mov
out
inc
test
das
loopne
jno
fs
inc
cmp
lods
popf
jl
lea
int
mov
mov
push
cs
lea
rcrb
lods
and
inc
mov
push
inc
stos
popa
les
stos
aam
out
xor
movsb
cwtl
sub
pop
sub
stos
jbe
jno
adc
std
mov
sub
arpl
jns
mov
push
mov
xor
sbb
sbb
cli
sub
lret
iret
push
test
incl
insb
jle
lret
dec
je
lcall
cmc
rcr
mov
mov
xchg
bound
mov
dec
fsubl
mov
sahf
dec
mov
sub
pop
push
sbb
shlb
jns
xchg
movsl
outsl
and
xchg
into
rcrb
adc
mov
xchg
pop
jp
mov
sbb
repnz
mov
mov
adc
pop
call
mov
out
outsl
pop
aaa
jne
addr16
js
sbb
mov
pop
fwait
push
fs
scas
cmp
in
and
xchg
pop
fbstp
mov
push
and
aaa
cs
clc
repnz
jge
jmp
shlb
aaa
in
xchg
lods
add
dec
in
adc
push
jns
mov
fisubl
mov
jno
cmpsl
in
bnd
in
popf
insl
outsb
fiadds
fs
aas
mov
mov
lods
call
mov
push
xor
dec
push
ficoms
xchg
pop
add
loopne
push
inc
stos
cmc
mov
dec
dec
xor
cli
xor
dec
ja
pop
jns
xor
push
adc
sbb
cmpl
ret
jae
dec
addr16
jecxz
outsb
mov
insb
imull
pop
mov
or
sub
movsb
or
mov
cmp
sbb
fdivr
xchg
mov
scas
lock
loopne
int3
sti
pushf
aad
pushf
xchg
pop
mov
icebp
cli
sahf
xchg
ja
lock
ss
mov
cmp
ret
jno
or
sbb
add
push
push
add
mov
jge
faddl
jp
push
mov
xor
call
cmp
inc
cmp
fscale
cltd
fcomps
out
fisubrl
xchg
jge
jns
rorl
movsl
lock
lods
into
sti
fwait
jns
push
pop
mov
iret
sahf
and
out
dec
loopne
setg
iret
popa
stos
hlt
xor
ja
and
pop
inc
push
dec
fdivrl
arpl
add
sbb
push
or
pop
es
gs
inc
push
andl
push
ja
shll
inc
mov
ret
int
cmp
nop
or
enter
inc
sbb
xchg
sub
push
xor
scas
mov
xor
adc
lahf
adc
mov
pop
lret
and
or
cmp
push
push
das
adc
xchg
gs
pop
add
lods
sub
sbb
popf
ss
les
dec
ficoms
int3
in
sub
adcl
add
pop
push
adc
addl
cmc
ret
add
stc
push
and
into
in
outsl
jecxz
push
push
xor
arpl
inc
and
dec
out
jp
push
pop
adc
and
out
mov
mov
arpl
and
rcl
mov
cmc
xor
ds
adc
sarl
mov
push
ss
lock
fcmovnu
adc
test
leave
or
cmp
outsb
pop
scas
cmp
int3
cltd
subb
push
aam
fwait
push
popf
pop
sub
in
sbb
sub
cmp
aaa
lds
inc
pause
mov
stos
sub
push
stos
test
loop
ret
scas
or
adc
imull
ja
icebp
daa
jg
push
xchg
lods
int
mov
dec
les
xchg
cld
xchg
fdivrl
cltd
int3
inc
insl
scas
mov
adc
inc
jb
enter
or
fistps
mov
mov
add
js
push
fstps
push
out
jb
addr16
or
xchg
adc
sbb
xor
mov
loope
dec
call
pop
movsl
test
mov
xchg
mov
mov
insb
mov
pop
aas
arpl
jbe
or
or
xchg
shlb
and
scas
rcrb
pop
add
fnstsw
pop
ffreep
lret
test
adc
rcrl
fcoml
clc
ret
lcall
sub
mov
xchg
fimull
std
adcb
and
lods
mov
xor
lds
pop
pusha
xlat
lahf
into
xor
jns
test
pop
out
and
mov
dec
jg
cli
push
lds
mov
lcall
nop
dec
jge
jo
call
ds
jp
pop
shlb
dec
hlt
cmp
add
lds
mov
pop
mov
dec
ret
cmp
push
or
inc
movsb
pop
push
cmc
test
cmp
fsub
mov
jecxz
mov
or
pop
push
ss
lahf
adc
sbb
imul
fimuls
jmp
dec
cmp
add
fwait
xchg
dec
cmp
rcrl
xchg
sbb
loope
lds
rcll
dec
or
pop
mov
mov
adc
xchg
jbe
arpl
pop
sub
inc
popf
int
mov
gs
mov
dec
cmpsb
sub
mov
dec
adc
rcrl
add
arpl
stos
outsb
or
push
out
dec
adc
insb
daa
iret
lods
push
inc
inc
inc
lcall
push
pop
push
mov
lcall
call
sbb
popa
aad
mov
push
sbb
fistpll
inc
es
cs
or
aaa
inc
pop
cmc
or
mov
push
pop
pop
std
hlt
popa
or
jns
mov
les
mov
inc
rcll
lods
loopne
fmul
dec
mov
ljmp
mov
add
pop
sti
push
push
cld
push
mov
jp
aaa
xchg
out
cmp
sub
lock
ljmp
imul
add
stc
jo
xor
sub
stc
lahf
nop
in
push
sbb
or
cs
sub
in
subl
pop
stc
sub
stos
adc
shlb
dec
data16
ror
test
lret
adc
pop
mov
jge
mov
adc
call
lods
mov
ds
imul
aad
sub
sbb
or
and
dec
cltd
sti
push
xor
adc
xor
in
test
ja
xchg
imul
xchg
pop
push
inc
es
push
sbb
and
or
cmpsl
lret
mov
inc
cmp
outsl
pop
jl
and
push
repnz
je
mov
pop
add
sti
ret
cld
std
lods
push
test
lods
outsb
pop
mov
adc
cmpsb
jb
pop
leave
dec
push
push
aad
cmp
ljmp
nop
cmp
clc
call
and
loop
push
int3
push
or
xor
test
jle
push
dec
pusha
cmp
in
les
jle
ret
mov
cld
mov
add
xorb
lahf
jmp
cmp
subb
push
xchg
xor
xor
mov
sub
ljmp
sbb
in
movb
and
dec
lcall
jb
cmpsb
pusha
movsl
and
mov
adc
rcrl
inc
les
push
ljmp
inc
fistpl
inc
shll
out
xor
push
sub
or
iret
dec
inc
cmc
jns
sub
es
stos
add
xchg
push
arpl
pop
add
sarl
cmpsl
xchg
js
aad
int3
xchg
add
bound
xor
cwtl
adc
aad
mov
push
push
in
scas
ret
je
test
incb
popa
and
out
icebp
push
cmp
or
sub
and
mov
out
js
and
xchg
xchg
mov
pusha
dec
mov
and
sub
mov
aad
pop
xchg
sbb
xor
enter
inc
mov
shl
in
mov
adc
lea
adc
aas
and
or
ds
test
ret
outsl
and
sub
aad
lods
insb
xorb
stos
pop
mov
test
xchg
inc
dec
add
inc
jnp
jecxz
add
push
push
enter
fidivs
sbb
inc
shll
mov
and
xor
cltd
imul
sbb
testb
aad
ss
loop
call
test
add
push
into
or
cmp
sbb
call
jne
inc
push
stc
call
mov
and
mov
gs
dec
js
call
or
cli
scas
imul
enter
leave
hlt
ficoml
repz
sbb
cmp
mov
dec
adc
shrl
aaa
push
push
cmp
mov
mov
cltd
cmp
dec
add
nop
clc
fstl
inc
sub
sbb
push
int
pop
loopne
jbe
dec
lea
jmp
xchg
fiaddl
insb
push
repnz
pushf
int
les
xor
test
adc
rcr
inc
popf
dec
sbb
jl
sub
mov
inc
mov
dec
mov
aam
push
aam
xor
imul
cltd
stos
or
fidivl
mov
push
pop
out
jg
dec
sarb
insb
and
pop
inc
pop
ret
test
scas
cmpsl
mov
add
pop
sub
rcrb
iret
stc
gs
adc
inc
int3
fwait
cmpsb
mov
jno
dec
incl
cmp
ret
cli
xchg
jp
lods
arpl
pushf
movsb
lahf
pop
pop
ss
jle
lahf
faddp
sub
int3
or
sbb
adc
cmp
adc
xchg
add
pop
or
cmpsl
or
jae
out
sbb
mov
adc
adc
testb
call
sub
aad
xchg
push
xchg
test
rcrb
subb
xchg
pop
or
sbb
mov
jae
dec
jno
sbb
mov
scas
lea
ds
insl
rorb
movsb
sbb
rclb
movsb
cmp
inc
ljmp
setg
xchg
xor
leave
cmp
movsb
xchg
cmp
pusha
aad
pop
xor
pop
scas
fcmovnbe
push
xor
dec
das
jne
sbb
fnsave
jp
mov
ret
stos
fcmovu
adc
sahf
call
sarl
mov
xchg
into
pop
push
mov
mov
mov
fisubs
sbb
hlt
adc
out
in
addr16
jg
lret
push
lods
jbe
pop
test
cli
inc
aaa
pop
jle
mov
dec
and
jecxz
outsb
sub
push
subl
push
out
jecxz
and
xor
mov
pop
inc
insl
shrl
data16
nop
ret
or
scas
adc
xor
pusha
xchg
cmpsb
push
cmp
repnz
addr16
cmp
aas
fiaddl
mov
scas
daa
xor
cmpsb
test
mov
sub
addr16
testl
in
fidivs
jecxz
dec
icebp
cld
cmc
std
mov
lea
loopne
push
daa
mov
push
jp
stos
gs
sbb
ljmp
aaa
leave
dec
pop
movsl
jmp
dec
arpl
notl
les
test
push
jnp
xchg
in
ss
enter
mov
sub
mov
jmp
mov
jb
adc
in
outsb
popf
push
xchg
pop
adc
adc
das
les
fstl
dec
bound
dec
add
sahf
shll
inc
into
lret
add
xor
add
popa
add
or
mov
cld
dec
dec
push
sub
push
xor
mov
jne
test
sub
or
adc
pop
out
call
push
test
hlt
test
lea
push
mov
push
in
cmp
push
add
and
jbe
int3
insl
add
pop
mov
shlb
leave
jae
mov
sub
push
out
add
fimull
sub
leave
outsb
stos
jl
inc
das
jge
ja
fdivrs
or
int
pop
push
xlat
xor
xchg
ja
or
stos
jo
adc
stc
daa
insl
es
cmp
and
aaa
sub
cltd
cwtl
fs
dec
pop
movsb
sti
mov
mov
ret
or
cmc
ds
mov
push
out
mov
adc
mov
rol
nop
sub
xchg
mov
and
sahf
insl
test
insl
dec
cmp
xchg
les
mov
or
mov
in
mov
add
push
push
pop
mov
xchg
imul
xor
enter
mov
fwait
xor
lret
add
loop
pop
mov
out
imul
jecxz
imul
sbb
in
inc
jg
jo
stos
adc
xlat
ljmp
inc
jnp
lret
shll
jne
stos
sbb
lret
jp
push
adc
lods
mov
mov
adc
and
fadds
sbb
dec
cltd
inc
xchg
sub
dec
xchg
sarb
pop
add
and
mov
stos
out
xor
pop
xor
dec
fbld
scas
xchg
enter
mov
mov
sbb
cli
mov
sub
xchg
mov
xchg
push
dec
fildl
lret
fists
test
sti
dec
pop
pop
loopne
mov
mov
iret
mov
inc
sahf
pop
rcrl
pop
int3
dec
loop
in
cmpsl
jecxz
mov
mov
xchg
mov
je
mov
add
ret
cmp
fdivrl
scas
insb
mov
sbb
dec
arpl
test
aaa
daa
aaa
call
jle
stc
adc
jge
xchg
sarb
icebp
mov
mov
addr16
faddl
enter
adc
cmp
jb
lods
dec
xchg
pop
mov
mov
call
pop
or
int3
jne
lods
loope
mov
add
mov
and
push
adc
pop
push
pop
cmp
dec
jp
pop
ljmp
mov
in
sahf
ja
outsl
sbb
ficompl
push
add
mov
or
cmpb
sahf
fisubrl
pop
push
add
jnp
adc
repnz
jno
cmp
adc
cmp
gs
mov
sar
divb
movups
ljmp
daa
mov
fs
jge
sub
fldcw
xchg
adc
scas
or
pop
jne
pop
lock
fmull
inc
or
xor
sub
add
cmpsb
sti
pusha
adc
fcomps
xchg
int3
push
insl
test
sub
mov
jge
sub
pop
addr16
insb
aad
arpl
fisubs
add
mov
jnp
call
test
xchg
clc
int
popf
loop
cli
cmp
lahf
arpl
and
nop
shlb
movsb
push
xorl
int
fwait
jge
cmp
lahf
mov
fisubl
lret
add
adc
cltd
test
jge
lods
fdiv
ss
fs
ja
push
xchg
pop
xor
jecxz
push
push
mov
scas
xor
sub
in
sub
test
nop
push
xchg
hlt
xor
popa
in
dec
je
loopne
shrb
xchg
add
pop
sbb
sub
mov
sbb
ss
popf
and
repnz
lahf
push
add
aaa
xchg
mov
jle
cmc
sub
sub
adc
ja
adc
fldenv
push
add
cmpsl
fisubl
insl
sbb
ds
in
ljmp
sbb
mov
or
and
int3
icebp
shlb
loopne
es
fldt
and
push
addr16
or
jecxz,pn
jno,pn
push
frstor
pop
xor
pushf
sbb
scas
xchg
xor
cmc
cmp
leave
enter
int3
inc
adc
adc
pop
jg
adcl
in
xchg
cltd
cli
mov
roll
loopne
dec
and
sub
pushf
ljmp
test
xlat
sahf
sub
aaa
loop
sbb
or
push
sbb
sbb
cmc
scas
loope
mov
xchg
stos
dec
inc
fistpll
outsb
stos
int
rolb
iret
xchg
js
mov
hlt
pop
mov
and
insl
mov
add
mov
rorb
mov
jns
cmpsb
push
repnz
mov
jecxz
pusha
lret
mov
jnp
inc
shrb
add
inc
insb
add
adc
cmpsb
mov
das
sti
fiaddl
lock
fadd
cmpxchg
leave
gs
insl
in
cmp
adc
shl
test
mov
sub
lock
aad
sbb
adc
add
mov
scas
xchg
push
iret
movsb
jle
xor
stos
fxtract
pop
fildl
sub
push
subl
das
cld
test
mov
dec
inc
push
xor
inc
xor
push
mov
je
push
popf
test
xlat
xchg
and
out
adc
xchg
dec
or
aad
por
dec
dec
inc
popf
xchg
mov
cmp
push
dec
shl
add
out
out
clc
bts
and
jbe
sub
dec
repz
push
adc
push
and
scas
jecxz
clc
dec
leave
pop
dec
pop
scas
inc
xchg
cltd
int3
add
push
jmp
xchg
or
jmp
cli
dec
push
out
cmp
mov
dec
lods
pusha
insb
shl
xchg
loopne
mov
mov
mov
mov
xchg
mov
pop
je
xor
fisttpll
mov
and
pop
sbb
aas
imul
mov
call
dec
mov
shll
mov
or
hlt
sbb
lds
test
cs
fcmovnbe
push
into
xchg
cltd
xchg
fstpl
lahf
sub
lss
mov
dec
cmp
sbb
addb
sbb
ja
jb
dec
adc
add
shll
xor
outsb
inc
dec
in
sub
test
jae
pop
push
xchg
dec
sub
xchg
add
xor
push
rol
rcll
jg
cmp
xor
push
cmpsl
sbb
and
rcr
push
xchg
or
daa
fisttps
dec
fdivrp
std
mov
add
fwait
push
test
push
movsb
imul
ds
mov
or
jl
push
adc
pop
lods
mov
and
jo
xor
jmp
jae
or
popa
nop
jae
sub
or
push
pop
xchg
clc
xchg
adc
lods
scas
in
dec
cmp
xchg
sub
xchg
clc
and
push
pop
pop
xchg
les
mov
jo
sbb
fmull
test
cmp
push
and
test
lcall
leave
movq
mov
popf
call
cmpsl
adc
push
or
pop
repnz
or
jbe
push
sub
or
cmp
pop
nop
clc
sbb
out
ljmp
popa
cmc
pop
lock
mov
jb
fwait
pop
fwait
add
cmpsb
popa
mov
pop
fsubrl
clc
add
pop
xchg
jno
loop
xchg
in
sahf
clc
cmpsl
push
jl
test
enter
sbb
or
add
adc
or
test
leave
mov
or
fidivs
jecxz
negl
fildll
add
push
add
test
push
pop
mov
xor
xchg
jle
sbb
jp
dec
or
or
xor
jo
jne
push
xor
icebp
aad
pop
xor
dec
jp
lahf
or
mov
cltd
and
cmc
lret
out
mov
imul
lods
shrb
fs
packuswb
sbb
iret
cmp
add
mov
out
mov
mov
or
ss
lret
or
pop
jge
std
rorl
mov
push
and
jno
hlt
in
push
jmp
pushf
fsubr
std
mov
fsubr
sar
mov
ljmp
daa
push
arpl
mov
fildl
sbb
pop
int
or
loop
movsb
sub
lret
ljmp
adc
push
mov
outsb
bound
jb
push
inc
dec
je
dec
cmpsl
and
pushf
xchg
cmp
xlat
mov
ja
outsb
mov
or
xor
daa
cmp
push
mov
or
and
lcall
mov
dec
bound
ret
add
in
fwait
pushf
imul
fyl2x
mov
cmpsb
or
idivb
gs
xchg
orl
aas
adc
lret
inc
cmp
sarb
sub
je
cmc
cltd
out
mov
dec
out
ss
mov
mov
addr16
xchg
ja
jno
jp
push
add
jmp
fwait
pop
fldt
dec
lock
lret
mov
push
xchg
jge
movsb
jl
pop
bswap
xchg
in
sahf
fdivrl
aad
loope
out
sbb
add
jmp
fidivrl
mull
or
mov
mov
cmp
dec
inc
mov
cmp
enter
pop
mov
addr16
aad
mov
adc
sahf
adc
into
add
loop
jp
sbb
es
sbb
xor
clc
xor
push
mov
mov
cmp
inc
sbb
enter
and
inc
dec
sub
mov
inc
mov
pusha
lret
mov
std
mov
xchg
iret
xchg
cmpsl
xchg
sbb
xor
icebp
sub
dec
cltd
js
into
into
dec
fimull
push
jg
pop
inc
cli
inc
or
and
pop
xchg
mov
mov
or
dec
xchg
sarb
sbbb
cmp
jle
dec
shl
insl
xchg
sbb
adc
xchg
scas
mov
mov
and
dec
pop
jp
mov
xchg
out
repnz
data16
jo
inc
iret
pop
iret
xor
leave
out
mov
lahf
pop
arpl
add
push
sub
mov
sub
test
rcll
ss
adc
add
fldt
in
or
clc
jno
pop
lock
cmpsl
add
stos
stc
dec
test
sbb
insb
pop
in
mov
popa
dec
adc
cmp
pop
sub
push
sub
mov
jbe
mov
es
xor
cli
inc
mov
sbb
dec
mov
pop
movsl
out
xchg
xchg
div
mov
or
push
mov
rcl
rcr
mov
push
subl
push
jle
lods
lret
dec
sub
std
xchg
dec
cmp
outsb
stos
xchg
arpl
pop
add
push
std
push
pushf
sbb
cwtl
push
mov
scas
test
fistpll
jg
add
ret
movd
jmp
lahf
jge
std
fcoml
sti
sub
cmp
xchg
mov
cmc
and
fsts
inc
and
bound
shl
sub
stc
in
xchg
push
std
mov
outsb
push
pusha
cmp
dec
gs
lock
mov
inc
sahf
dec
add
mov
sbb
jnp
sbb
ficoml
adc
sub
sub
cwtl
mov
adc
jne
sub
movswl
inc
jae
sbb
mov
in
ds
ds
ljmp
loopne
cmp
insb
arpl
movsb
lret
xchg
testb
push
xor
add
xchg
push
dec
icebp
mov
and
jnp
pop
icebp
add
lret
adc
addl
andl
fisttpll
leave
jno
or
add
stos
mov
and
test
leave
lcall
jns
xchg
fs
fnsave
mov
dec
fistl
push
push
dec
push
ret
movsb
cwtl
ret
pop
lret
jecxz
out
xchg
aaa
push
sbb
fldenv
fwait
xor
xchg
inc
cltd
adc
dec
scas
leave
sarb
pop
hlt
daa
inc
out
and
add
mov
frstor
aas
adc
ljmp
into
cmpsl
adc
loop
lds
sbb
mov
or
mov
sti
arpl
adc
or
pop
ret
push
mov
std
xor
pop
xchg
sbb
sbb
cmpsl
aas
cmp
test
lcall
movsb
shrb
xor
mov
neg
and
in
push
inc
jge
and
pop
add
imul
in
mov
jge
sbb
add
or
int
mov
mov
or
dec
fimuls
mov
jg
iret
cmpsb
sub
int3
adc
les
lret
push
inc
push
movsb
loopne
push
xchg
jmp
outsl
adc
frstor
inc
mov
add
and
inc
in
mov
adc
addl
pop
stc
dec
adc
inc
movl
mov
push
fwait
lahf
push
sub
jge
pusha
les
mov
out
mov
loope
add
cmp
insl
ret
inc
or
or
push
mov
ret
and
movsb
push
cmp
pop
fbld
fmuls
jl
jnp
pop
cmpsb
out
cld
sub
lods
pop
mov
xchg
and
dec
xchg
pop
mov
jmp
fistpll
xor
xor
rclb
mov
xor
sub
pop
loop
xchg
mov
pop
adc
pop
mov
sbb
insl
dec
nop
cmp
mov
popa
cwtl
push
push
mov
lret
push
add
sbb
loope
outsb
out
call
push
rolb
outsb
rcrb
cmc
nop
fnstenv
pop
and
shlb
cmp
int
mov
test
adc
mov
lahf
pop
hlt
cmp
clc
mov
stos
sub
mov
fs
add
add
add
ss
call
loop
sub
fcoms
loop
ror
adc
xor
inc
fmuls
ds
rcll
mov
in
cltd
gs
jg
jecxz
cmp
std
test
push
bound
push
stos
js
or
sub
lea
push
cs
out
ja
mov
lret
push
mov
lods
das
cmp
adc
test
movsl
mov
mov
jns
mov
int3
andb
mov
inc
mov
xchg
lods
jp
xchg
mov
popa
dec
mov
mov
xchg
cmp
fidivrs
rcl
jbe
sub
adc
mov
aaa
incl
mov
push
in
ds
clc
enter
xchg
inc
cwtl
mov
and
in
mov
sti
mov
lods
shlb
pop
push
les
daa
push
sbb
push
dec
xor
pop
jo
inc
aas
aas
cli
sbb
daa
xchg
sbb
test
and
mov
inc
test
dec
cs
addr16
push
push
or
pop
cmp
inc
not
jmp
ds
test
push
negl
loopne
mov
loop
in
lret
orl
sbb
xlat
pusha
jnp
imul
xor
loope
adc
sbb
sub
or
call
stc
mov
and
fcomp
mul
je
xchg
xor
cwtl
xchg
lret
pop
mov
xchg
xor
nop
dec
and
orl
jmp
jbe
call
shlb
in
loop
lds
cmpb
dec
ret
jns
rcll
dec
dec
sbb
ljmp
cmp
mov
mov
jbe
ret
lods
pop
inc
cld
mov
add
push
sub
mov
popa
push
mov
arpl
lahf
loop
sbb
xor
xor
aad
inc
mov
dec
fidivl
shll
cmp
movsb
int
push
in
rcrb
jnp
lock
mov
jle
enter
adc
mov
xchg
je
pop
pushf
fs
xchg
out
lods
inc
sub
insl
cwtl
test
call
dec
and
call
in
imul
cmp
inc
les
mov
or
in
and
lds
movsb
push
sub
es
adcl
push
push
fsts
cmp
add
sub
data16
lods
and
dec
mov
and
bound
mov
repz
cld
sbb
mov
inc
aaa
xor
test
xor
roll
clc
and
or
cmpsb
rcll
add
iret
lea
sbb
dec
bound
xorb
sub
ret
or
and
push
ja
mov
movsl
dec
iret
dec
neg
push
sub
pop
adc
pop
scas
daa
push
push
scas
pop
outsl
add
mov
bound
pop
lahf
loopne
ds
test
jno
insl
jg
fcoml
push
cmp
xchg
faddl
cli
in
jp
pop
mov
push
jge
cmp
bnd
adc
and
pop
ja
xchg
add
cmp
and
aad
jno
pop
mov
sbb
pusha
inc
lret
or
lods
add
in
ror
dec
repnz
fwait
insb
repz
inc
add
ljmp
and
fildl
call
dec
pop
or
or
jb
popa
movsl
add
or
icebp
xchg
mov
sbb
lock
sbb
mov
orb
inc
xchg
adc
jno
jmp
cmp
xchg
cltd
mov
aas
out
xchg
pop
adc
push
sbb
pop
fcoms
jge
sbb
mov
mov
fxch
rorl
push
mov
ljmp
test
sub
pushf
inc
push
out
mov
mov
cmp
mov
mov
sub
cmpl
test
out
cmpb
cmc
addb
or
stos
nop
imul
cltd
hlt
loop
mov
sbbb
dec
int3
mov
data16
mov
roll
push
pop
xor
shrb
xor
fildl
int
cmp
out
cld
and
das
movsb
stc
pop
hlt
cmpsb
outsb
call
sbb
mov
jns
and
rclb
rorb
lcall
lret
xchg
adc
inc
into
fcomps
inc
loop
aam
jae
xor
push
and
mov
xchg
repz
stos
mov
mov
xchg
push
cwtl
dec
jmp
sbb
jnp
mov
test
cmpsb
push
push
xor
bound
loope
jmp
into
sbb
adc
rolb
cmp
negb
sarb
fyl2xp1
cwtl
test
sbb
pop
cmp
aam
cmp
push
or
xchg
in
sbb
inc
push
rorl
push
xor
pusha
sahf
ja
pushf
mov
sub
push
out
dec
cmpb
pusha
lea
jae
push
test
loopne
jno
mov
xor
andl
cld
test
and
sbb
scas
js
xor
ljmp
xchg
pop
pop
mov
sbb
cli
mov
jle
sbb
push
mov
cmp
roll
cli
push
xchg
test
int3
subb
call
dec
pop
stc
mov
je
loope
inc
pop
jb
cmpsl
ret
test
add
xor
inc
sbb
jge
add
cli
mov
lea
add
outsb
test
les
test
cmp
sbb
enter
jae
cli
je
push
or
jecxz
out
mov
in
mov
dec
push
and
mov
dec
jnp
pop
scas
pop
lds
push
pop
icebp
daa
pop
mov
outsb
add
inc
adc
xor
int3
mov
push
sub
or
lret
and
test
inc
mov
leave
rolb
fldt
jae
les
xor
gs
pop
xor
pop
pushl
cld
roll
mov
and
add
sti
js
mov
mov
stc
aaa
lock
jmp
fiaddl
inc
iret
inc
std
fimuls
out
ds
dec
icebp
mov
pop
cmp
dec
pop
adc
ja
cmp
xchg
enter
push
stos
shll
push
add
stos
imul
jp
mov
bound
mov
pop
mov
sbb
or
cmc
clc
aam
pop
cmp
add
jns
jae
jnp
ds
xchg
arpl
xor
dec
jle
cmp
push
push
movsb
je
divb
fisttps
jb
fiadds
repz
push
adc
addr16
cmc
adc
ffreep
xor
mov
arpl
push
lret
cmp
cmp
inc
pop
in
sub
jmp
loopne
fmull
pushf
inc
mov
push
popa
mov
cmp
mov
adc
cmp
push
pop
xchg
add
sub
movsl
decb
xchg
shrb
test
in
test
movsb
dec
ret
rolb
lds
and
loop
adc
andb
loop
in
test
lret
jns
inc
inc
stos
jmp
mov
xor
dec
xor
mov
xchg
dec
and
inc
out
in
nop
icebp
pop
aas
adc
mov
lea
inc
test
or
or
mov
leave
out
xchg
pop
cmp
jno
pop
leave
mov
dec
jo
mov
jno
clc
push
or
lret
je
fucomi
lret
loope
sub
lahf
xor
mov
mov
pop
pop
loopne
xchg
mov
add
pop
dec
jg
sub
fiadds
in
xchg
pop
mov
pop
out
sbb
mov
aas
in
push
sbb
jae
enter
lods
xchg
ljmp
fsubs
ret
aaa
inc
adc
add
mov
and
add
sbb
ds
xchg
das
mov
fwait
push
dec
push
leave
xchg
push
movsl
lds
aaa
sbb
inc
xchg
add
fnstsw
push
scas
insl
pop
mov
nop
push
lret
xchg
mov
cltd
adc
test
push
dec
loop
mov
std
orb
push
pusha
adc
fbld
xor
mov
or
in
or
or
mov
add
fwait
hlt
insb
mov
loopne
sbb
popa
sbb
insl
mov
add
cmpl
in
mov
sbb
sahf
mov
push
mov
mov
iret
adc
nop
add
addr16
jbe
adc
cmpl
push
push
cmp
ljmp
sub
cmp
sbb
out
je
aam
jb
data16
xlat
add
pop
push
and
fwait
adcl
lret
into
incb
fldenv
sbb
enter
ficoml
jle
lods
ljmp
jns
jae
xor
xchg
sahf
mov
xor
or
cmp
sbb
push
sbb
fdivp
xor
push
and
xor
xchg
pop
sbb
cmc
outsb
xchg
push
fisttpl
sti
add
dec
ljmp
mov
insl
sahf
imul
xchg
gs
jae
cmp
aaa
mov
fwait
xor
sbb
imul
push
ja
stos
aam
test
inc
mov
gs
in
cmp
cmp
pop
jb
outsb
cmc
xchg
and
outsb
sub
xorb
ljmp
int3
loope
xchg
negb
dec
sub
cmp
sbb
outsb
shlb
pop
dec
pop
repnz
or
data16
mov
inc
jge
jmp
mov
nop
mov
cli
lea
jnp
xchg
addl
sbb
jp
cwtl
sub
pop
iret
pusha
sti
frstor
pop
mov
dec
sbb
mov
test
movsb
hlt
icebp
jo
mov
mov
xor
push
push
xchg
aas
add
sahf
into
imul
xchg
mov
aaa
out
add
and
ja
push
enter
dec
iret
sbbl
rcrl
fiadds
imul
xor
mov
pop
mov
aaa
rorl
das
je
cmpsl
in
and
inc
inc
cwtl
outsb
jp
bound
les
mov
sbb
movl
cmp
test
leave
pop
mov
and
int3
ja
mov
addl
clc
jle
jae
out
pop
andb
sbb
xchg
hlt
aad
mov
cli
arpl
mov
cmpsl
ficoms
loope
sarb
ss
imul
cmpsb
xor
or
es
jp
je
xlat
mov
jle
and
daa
mov
push
cmpsb
add
test
dec
xor
aas
sub
lret
xor
adc
cmp
jecxz
push
and
nop
test
xor
inc
in
test
pop
push
lahf
pop
xchg
pop
shl
cmpsl
sub
inc
push
sbb
in
jg
aad
orb
test
push
popf
pop
jp
mov
out
das
mov
rolb
fldenv
lret
pop
bound
adc
cmp
out
loopne
in
ljmp
and
or
push
insb
movsb
ret
sub
jmp
mov
cmp
into
push
or
add
xchg
stos
loope
mov
adc
push
dec
iret
mov
fsubrs
jne
hlt
sbb
inc
out
sahf
cmpsl
cli
push
xor
pop
sub
pop
or
inc
xchg
sbb
push
gs
popa
lcall
nop
test
dec
push
fisubrl
push
mov
das
inc
insl
mov
mov
in
inc
outsl
pop
sahf
ss
out
xlat
mov
cs
pop
sbbl
xchg
mov
sbb
movsl
insl
mov
pop
idivl
jb
ss
adc
add
into
push
and
pop
inc
adc
lock
popf
cmp
pop
cmp
test
mov
push
clc
mov
xchg
aam
cmp
test
and
cs
pop
adc
cmpsl
shlb
divb
sub
sbb
std
sub
call
xor
dec
mov
sbb
cmp
xor
pop
mov
mov
adc
addl
add
add
dec
jl
pop
adc
push
rclb
inc
in
outsb
jno,pt
or
repz
fs
rcll
insb
adc
xchg
icebp
fdivr
add
jns
sbb
add
mov
scas
adc
and
es
sub
adc
or
clc
mov
in
ror
mov
das
lods
nop
xchg
push
loopne
dec
cmp
decb
xor
cld
inc
xchg
mov
pop
mov
cmpsb
add
cmp
dec
test
fmuls
mov
test
and
sti
pop
lcall
aaa
fmulp
aam
push
pop
and
mov
push
scas
daa
jns
dec
test
cmp
popa
jmp
pop
daa
push
test
rcr
mov
sbb
pop
insl
inc
fs
push
jbe
das
jecxz
shl
mov
data16
cmp
mov
and
loopne
mov
sar
ljmp
popa
test
std
push
sub
dec
mov
add
in
add
fimull
mov
imul
mov
imul
push
mov
mov
cmpsl
and
xor
xchg
push
decb
lret
jo
rcrb
rcrb
not
inc
push
bound
ret
pop
aaa
js
lahf
or
xchg
xlat
fwait
mov
stos
enter
adc
pop
out
or
mov
mov
in
adc
outsb
shrb
pop
mov
cmp
cmp
push
jle
fcomps
imul
aam
leave
or
test
out
sub
test
subl
ret
ds
xchg
pop
fldl
clc
cmp
inc
pop
subl
addr16
inc
sub
gs
mov
jecxz
stos
push
bound
cmp
cmpsb
pop
hlt
sahf
add
dec
shlb
push
push
jecxz
stos
jle
push
mov
lret
fwait
push
or
ljmp
and
iret
test
bound
sbb
push
pushf
rcrb
mov
das
fldl
add
loope
sub
pop
daa
ja
pop
test
jne
push
pop
dec
jle
test
adc
mov
add
push
cmp
xchg
push
int3
or
aaa
orl
pusha
jl
inc
daa
push
xchg
adc
daa
adc
icebp
jmp
mov
cmp
xchg
scas
enter
mov
fisubl
add
push
adc
ja
mov
cld
pop
jbe
cmpsl
loope
xor
test
js
sbb
mov
push
xor
and
push
mov
shr
push
cmp
lods
ss
int
fs
mov
cmpl
xor
pop
sbb
ljmp
fldenv
cmc
cmc
sahf
in
popa
enter
aaa
sti
jecxz
movsl
lahf
mov
out
sub
inc
mov
xchg
imull
ficoml
sub
sbb
cwtl
or
test
rcr
push
hlt
scas
dec
xorl
or
bound
stc
xchg
mulb
sahf
xor
or
jmp
or
mov
pop
sahf
aam
xor
hlt
push
rorl
and
aad
xchg
bound
insl
push
sub
and
jo
les
push
push
ds
xor
test
addl
icebp
sbb
add
sub
sarb
dec
hlt
popf
jge
cmpsb
lods
jg
imul
lock
cmp
outsl
ljmp
repnz
out
pop
scas
mov
hlt
loopne
icebp
dec
fcom
icebp
adc
pop
mov
jne
jbe
sti
cmp
mov
push
in
pop
jecxz
out
aam
cmp
rcrl
leave
leave
push
xlat
and
inc
lods
cs
nop
xchg
mov
nop
and
xchg
lods
std
pop
xchg
std
sahf
test
popf
rclb
xchg
and
sub
das
sahf
sbb
icebp
cmc
in
in
leave
push
je
inc
popf
stc
ja
and
push
lods
bound
cmpl
lock
mov
inc
aam
gs
xorps
jge
push
loope
in
xor
test
neg
idivl
cmc
cld
mov
fnstsw
jb
ljmp
cmpsb
in
test
xchg
je
int3
ds
imul
lods
cmp
nop
jno
dec
lret
loop
andb
jle
mov
into
movsl
push
sbb
mov
loop
push
xor
sbb
mov
clc
pop
mov
ljmp
insb
insb
sub
push
cmpsb
mov
sub
dec
jge
fcoml
popf
out
mov
cmp
scas
in
dec
sub
xchg
cmp
push
inc
dec
jecxz
movsl
icebp
cmp
in
and
pop
nop
aas
pop
mov
inc
xor
jno
ds
adc
jns
jo
aaa
lahf
aad
sbb
lea
jp
mov
push
pop
mov
adc
mov
sub
adc
rcr
js
aas
xor
movsb
lret
xor
in
repnz
out
loope
ljmp
cmpsb
adc
movsl
je
sub
inc
sbb
test
pop
mov
sub
push
insl
scas
inc
xorl
mov
xchg
or
push
aad
ret
push
pop
jns,pn
std
sub
adc
add
aam
dec
out
xchg
test
es
push
or
push
jnp
pop
xor
jecxz
pop
push
or
and
fstl
cli
xchg
push
gs
mov
add
sub
rcll
push
in
inc
jb
icebp
xlat
daa
in
sti
cmc
push
cld
out
js
nop
fs
int3
xor
inc
lea
dec
sbb
push
jmp
scas
pop
je
ja
cmp
into
sub
icebp
mov
cmc
lret
push
loope
lahf
xor
sbb
lret
mov
ret
lea
dec
rcll
xchg
fldl
pop
fisttpl
notl
add
pushf
icebp
add
cmp
cmpsl
or
jp
lret
rcrb
and
and
addr16
cltd
sub
mov
int3
push
pop
outsl
and
scas
pop
push
or
inc
lods
fnstcw
pushf
jg
dec
call
xor
mov
or
rcl
sub
das
mov
in
aad
jo
out
xlat
in
pop
outsl
lret
movsl
imul
xor
xchg
cmpsb
lods
push
cmpxchg
sbb
mov
cwtl
add
sbb
mov
push
sbb
sub
xor
jl
pop
sub
loop
jle
pop
ret
das
cld
pop
out
pushf
int3
jbe
lea
sub
sbb
rcrb
pop
push
or
sub
xor
xchg
and
pop
pop
mov
sub
xlat
xor
stos
fiaddl
dec
mov
lods
xchg
mov
dec
mov
mov
mov
ss
mov
shlb
cmpsb
jle
mov
dec
ret
cmp
sub
dec
das
jecxz
je
sbb
imul
cmp
push
notl
or
push
add
shl
push
pop
repz
xor
in
aad
icebp
mov
cmp
test
xchg
testb
mov
cli
add
daa
mov
mov
jb
lds
adcl
xor
mov
fmulp
pop
or
inc
jns
fsubl
in
add
andl
or
sub
sub
jmp
mov
mov
mov
cmc
cwtl
sti
stc
add
add
es
push
aaa
inc
call
pushf
cmpsl
ja
jg
xorb
or
sti
sbb
gs
xor
scas
cli
cmpsb
sarb
sub
xorw
fmull
inc
push
push
pushf
rol
mov
mov
mov
fldl2t
mov
sbb
dec
loopne
das
xor
xor
push
adc
xor
adc
dec
iret
cltd
push
push
mov
pushf
xchg
xchg
ss
cltd
bound
add
fwait
test
loope,pt
fcmovbe
insb
repnz
xor
pushf
repz
imul
rcrb
jp
out
push
scas
fiadds
pop
pop
jno
push
jne
xchg
bound
mov
out
jge
pusha
push
inc
test
mov
and
data16
or
pop
push
jbe
pop
insb
ss
arpl
test
or
mov
in
test
rclb
ljmp
jmp
in
add
dec
adc
sti
fsubl
cmc
test
xor
div
pusha
lods
inc
cmpsb
fs
push
sbb
adc
push
jns
pshufw
std
inc
jge
adc
aad
lds
pop
xchg
call
enter
add
sbb
sub
fwait
or
adcl
xchg
push
mov
aad
sbb
xchg
addr16
sbb
dec
pop
fstpt
loopne
push
mov
mov
dec
inc
mov
rolb
js
jge
cmp
sub
xor
sbb
add
or
imulb
xchg
cmc
mov
pop
mov
cli
fs
adc
fimuls
dec
iret
or
loope
into
fsubs
les
fdivrl
adc
dec
add
mov
mov
int
mov
inc
cmp
push
fidivl
je
push
mov
pop
inc
das
mov
mov
lods
arpl
rolb
mov
in
inc
mov
dec
inc
sarl
mov
xchg
or
xor
dec
pop
inc
mov
pop
mov
inc
mov
lods
lock
push
jne
cmp
xlat
cld
jae
inc
js
outsl
cwtl
and
cmp
sbb
and
jl
pop
loopne
xor
pop
adc
adc
out
ljmp
mov
int3
or
and
loop
jmp
mov
xor
lret
jg
popl
repnz
mov
pusha
ds
jbe
lahf
pop
repnz
cmp
loopne
mov
aam
push
outsl
addr16
into
inc
inc
repz
mov
out
add
jge
rcll
push
fnstsw
push
lret
mov
lds
inc
pop
mov
loope
mov
push
loop
enter
cmp
repz
divb
mov
add
iret
call
addl
and
lahf
dec
jno
cmp
scas
mov
xchg
les
in
test
test
inc
xchg
inc
in
imul
sahf
jl
lods
sbb
push
mov
xchg
jae
jecxz
add
shr
mov
xchg
dec
mov
inc
dec
xchg
fildll
cmp
flds
push
mov
pop
pop
stos
xchg
decb
or
movsb
sbb
or
pushf
jo
js
jecxz
lcall
xor
adc
pushl
repz
imul
pushf
subl
jge
mov
inc
or
icebp
and
sbb
cli
pop
jmp
sbb
mov
leave
dec
push
and
comiss
aad
xchg
in
sti
fsubp
clc
cmpsl
push
out
or
adc
out
jmp
add
or
ficomps
mov
mov
dec
outsb
inc
insb
icebp
push
outsl
push
jecxz
or
scas
xor
jae
nop
sbb
dec
jmp
das
rcll
add
repnz
jo
aam
in
aas
sub
xchg
arpl
mov
dec
flds
stos
or
xor
stc
mov
jnp
lret
push
xorb
or
aad
jmp
mov
push
adc
lcall
jns
stos
mov
popa
push
hlt
sub
mov
lods
mov
xchg
mov
cli
dec
in
pop
scas
sti
scas
scas
fcoml
mov
fstl
pusha
iret
repz
cwtl
cmp
insl
mov
out
cmc
test
mov
enter
lock
or
into
pop
sbb
shr
adc
outsb
sbb
xchg
cmp
loop
mov
or
xor
in
mov
out
out
cmp
out
xchg
jle
sti
push
xchg
lds
sbb
mov
lahf
lret
push
les
fmull
sub
inc
pop
adc
sti
jp
or
jp
loop
pop
dec
js
and
add
mov
mov
sbb
mov
test
incl
aaa
stos
es
xor
cmp
in
jns
xor
rep
fiaddl
jne
dec
or
mov
xor
xchg
mov
inc
adc
loop
push
xchg
mov
lret
fiadds
mov
xor
imul
lcall
sub
lods
jo
dec
sbb
mov
stc
in
in
movsb
cs
stc
cmpsl
aas
std
out
or
js
stos
pop
xchg
bound
jbe
push
mov
dec
fcmovnbe
sub
cmpsl
push
sbb
xorl
popf
mov
or
push
subb
ljmp
cld
mov
inc
push
daa
push
mov
add
mov
adc
lock
call
mov
push
fwait
dec
mov
out
bound
inc
loope
loope
test
mov
mov
pop
js
pop
push
mov
mov
adc
jnp
add
mov
mov
int
and
jae
or
pop
mov
push
or
push
lcall
sbb
lods
cmpsb
out
imul
sbb
adc
mov
add
push
aad
cmpsl
cld
add
outsb
xchg
arpl
divb
pushf
push
fisubrs
pop
add
pusha
mov
jl
fcomps
mov
mov
test
lret
mov
and
push
into
cli
das
adc
pop
mov
cld
jnp
imul
loope
jbe
dec
pusha
inc
js,pn
push
in
lea
roll
popf
xor
lret
xchg
mov
fmull
adc
pop
ret
add
aaa
int3
das
repnz
push
dec
or
faddl
mov
sbb
repz
push
mov
scas
mov
into
cmp
sbb
call
cmp
cmp
pop
fs
lods
push
outsl
push
mov
xchg
enter
mov
adc
lret
fiaddl
scas
fisubrl
and
lea
push
je
push
jne
pop
out
dec
push
jne
ja
pusha
shrb
mov
dec
add
adc
outsb
dec
loope
sub
mov
mov
lahf
imul
imul
pop
pop
mov
jle
divb
xchg
lods
je
xor
loopne
jge
addb
fsubrs
out
and
or
push
loopne
cmp
aaa
add
popa
sub
aam
lods
xor
jb
dec
negl
in
jb
fwait
sub
lods
xlat
mov
mov
fstpt
negl
std
mov
or
cltd
outsb
sbb
cmp
xlat
in
mov
pop
ss
sbb
int3
pop
or
xor
out
mov
sbb
mov
js
jne
jbe
add
lahf
cmpsb
test
dec
push
fistps
mov
adc
aam
xchg
dec
out
jmp
fistl
adc
pop
xchg
pop
lret
mov
or
inc
inc
add
cmc
sbb
add
iret
cltd
cli
pop
aad
xchg
push
inc
sub
inc
inc
mov
insb
sbb
out
test
repz
mov
sbb
je,pt
cmp
or
adc
or
mov
push
push
adc
gs
mov
out
push
add
jne
clc
push
in
mov
inc
push
cli
dec
fnstcw
in
incl
cltd
loop
jp
inc
inc
xor
ret
jp
fnstenv
insb
std
out
popa
sbb
clc
sub
adc
call
xchg
jl
add
sub
js
mov
mov
dec
arpl
addb
std
nop
and
xchg
ja
cmpsb
lock
mov
adc
pop
mov
rcrl
lock
dec
jns
aas
xorb
cmc
enter
test
jl
addr16
add
bound
mov
imul
mov
and
sbb
movsb
or
dec
loop
mov
jle
sahf
or
jne
inc
adc
mov
cmp
sub
lods
pop
lods
fmuls
fcmovnb
std
ja
sarb
xlat
lahf
imul
fisubs
push
stos
dec
mov
xor
cli
mov
xchg
dec
push
ljmp
or
std
out
mov
mov
pop
cmp
movsb
stos
push
fs
mov
cmpl
sarb
and
add
mov
xchg
aam
rep
repz
andl
pop
cmp
pop
popa
mov
ds
dec
push
rcrl
lods
add
cmp
jno
mov
std
movsb
jns
outsl
punpcklwd
es
jno
int3
fdivl
cmp
pop
icebp
icebp
js
mov
lret
or
sbb
push
push
jbe
int3
inc
fmull
push
mov
in
push
outsb
jmp
in
cmpsl
add
imul
cld
dec
pop
inc
outsb
lret
xor
inc
or
pop
shlb
mov
rcl
dec
cmc
js
loope
fists
lret
cmp
cmp
aas
and
loopne
addr16
out
push
rorb
outsb
pushf
ficoml
jbe
add
mov
ja
fcomp
cltd
sarl
push
ret
xor
loopne
hlt
sub
int3
cmp
mov
dec
lcall
cmp
addl
rcrb
gs
loope
arpl
decb
repz
push
js
sub
aad
clc
add
push
pop
cmpsl
xchg
mov
xchg
pop
rcrl
imul
cwtl
cmpsl
lret
xchg
mov
daa
fisubrs
imul
loop
adc
xchg
mov
push
push
pop
push
xchg
push
push
clc
jbe
dec
leave
lret
xor
stc
out
mov
or
aaa
sahf
xor
mov
pop
jnp
hlt
rcll
push
out
jne
sbb
sub
mov
les
and
jp
pusha
jno
mov
push
test
xor
jle
inc
jbe
insl
sahf
mov
cmc
adc
inc
addr16
inc
jp
sbb
xchg
fiaddl
inc
and
cmp
mov
out
xchg
jecxz
or
xchg
mov
scas
inc
sbb
int
loopne
lret
movsl
enter
data16
rclb
push
fdivrs
xor
dec
jp
xchg
jecxz
out
cmp
mov
sbb
stc
test
ret
cmpsl
imul
lock
test
outsl
divl
cmpsb
inc
mov
in
push
mov
adc
ljmp
mov
mov
jns
inc
sub
loope
pop
jae
xchg
outsb
shrl
mov
gs
cmp
sti
add
pop
sti
inc
popl
insb
sub
sbb
pushf
add
xchg
add
xchg
push
and
lods
push
mov
int
pushf
push
pop
mov
push
aas
ret
mull
out
xorl
ds
inc
push
rcl
xchg
fs
dec
js
add
xor
sbb
rorb
xlat
cld
jecxz
push
mov
cwtl
push
xor
dec
mov
andl
loop
mov
xchg
loopne
dec
jae
movsb
xchg
mov
cs
rclb
fisttps
sahf
cmp
shr
mov
inc
shlb
or
stc
xorl
pop
jo
mov
lods
lcall
xchg
dec
jae
adc
ret
or
or
cltd
xor
ja
repnz
fscale
add
icebp
shlb
and
enter
loopne
js
imul
sub
dec
inc
cltd
adc
or
inc
lods
xor
or
jne
add
push
scas
fdivrs
cli
out
inc
sbb
stc
stc
and
push
jns
leave
out
inc
or
ret
movsl
xor
inc
xchg
lods
shll
rclb
ja
popf
dec
aaa
jg
js
insb
adc
and
or
sti
xadd
jne
and
repz
mov
mov
scas
mov
cmp
lcall
cmp
js
mov
pop
call
mov
sbbl
sub
xor
enter
clc
sbb
add
push
movsb
cmp
xor
fsubrl
std
jo
lret
mov
or
not
mul
mov
sbb
or
jl
push
outsl
fiaddl
lret
or
or
inc
jbe
pop
push
dec
ds
inc
inc
je
loopne
push
jo
scas
add
sbb
ss
jge
stc
scas
lds
add
xchg
stc
mov
fcomp
test
cmpb
sahf
ss
jge
mov
pop
inc
shll
pusha
fs
subb
mov
scas
imul
data16
daa
subb
popf
add
scas
jns
lahf
mov
mov
repnz
push
scas
fwait
aad
aaa
pop
xor
mov
push
sub
xchg
adc
mov
stc
push
ds
sub
clc
rcl
test
add
fimuls
sub
adc
out
push
mov
mov
add
adc
or
arpl
add
xchg
adc
push
shl
xor
gs
adc
inc
leave
lcall
push
scas
popf
imul
ss
adc
cmp
sbb
mov
dec
repnz
enter
push
aaa
testb
xchg
arpl
mov
pop
sub
shrl
xor
jns
ds
cmp
sbb
or
test
pop
imul
insl
push
jb
fstl
mov
iret
lods
xlat
jbe
shrb
xorl
and
adc
and
lret
aas
adcb
mull
cmp
loop
inc
lret
mov
daa
in
cmpsl
jnp
fldcw
popa
int
rcr
stos
imul
movsl
test
or
scas
and
and
push
dec
xlat
rolb
mov
sbb
test
inc
sar
addb
fidivs
mov
adc
iret
jmp
popa
rcl
mov
and
jns
fcmovnbe
test
dec
sahf
push
rcrl
mov
ja
adc
jecxz
xchg
fcomps
clc
cmp
sbb
pop
fwait
loop
fidivrl
xchg
push
mov
scas
test
fwait
cli
jp
insb
cmpsl
mov
xchg
imul
sub
mov
add
push
xchg
int3
stos
in
add
mov
dec
or
mov
out
dec
nop
fmuls
fidivs
xlat
xor
adc
imul
pop
loope
stos
sbb
cmp
call
icebp
jmp
cltd
inc
cmpsl
mov
or
ds
fcoms
cmpsb
sbb
orl
xchg
ss
jle
mov
mov
mov
sbb
in
jno
ret
fisttpl
xchg
cltd
dec
cmp
mov
sub
mov
jbe
pop
sbb
movsb
scas
aam
pop
dec
jno
insb
outsl
mov
pop
jo
xchg
push
sysexit
lret
and
imul
frndint
push
arpl
push
inc
mov
in
inc
dec
scas
inc
out
or
mov
xor
iret
jb
cmp
inc
sbb
lcall
push
movsl
mov
mov
repnz
in
xchg
jns
cli
cmp
cmp
xor
xchg
sbb
test
stos
ja
in
xor
scas
scas
mov
dec
into
mov
push
popf
scas
push
dec
adc
mov
insl
sbb
inc
pop
push
insl
int
js
sub
ljmp
inc
int
sbb
sbb
mov
aad
loope
adc
rorb
fisubl
divl
les
ljmp
mov
ljmp
lock
test
lods
pop
fucom
stc
lods
js
sub
rorl
add
push
mov
mov
test
inc
dec
sub
mov
gs
jns
and
xchg
adc
xchg
pop
cli
scas
jl
xor
in
fiaddl
pop
stos
cmp
hlt
mov
test
sbb
pop
mulb
mov
push
dec
out
lock
adc
movsb
lret
sub
fisubl
in
aad
mov
iret
cmp
pop
sarb
push
fsts
lods
sbb
lods
mov
lea
xor
sbb
mov
inc
xor
call
in
mov
jmp
es
push
mov
mov
fwait
imul
rcrb
add
sbb
jl
push
lcall
lods
cmpl
lods
mov
jo
and
sbb
adc
call
and
adc
fiadds
lock
jle
imulb
push
arpl
lahf
sub
adc
dec
imul
dec
imul
pop
xchg
push
xchg
pop
call
mov
sbb
gs
push
loope
fwait
dec
xor
imul
out
sub
xor
xchg
in
mov
decl
ds
add
sbb
sar
rolb
ds
inc
pop
xchg
in
mov
cli
jge
jb
jmp
dec
dec
rclb
add
sarb
xor
jae
ffree
dec
add
or
movsb
push
mov
inc
mov
ret
push
pop
repnz
outsb
ljmp
in
pop
call
pop
and
and
mov
fildll
push
stos
jecxz
sub
sbb
jge
shrl
push
mov
xchg
or
sbb
pop
dec
and
imul
push
dec
aas
mov
adc
lret
loopne
sub
jmp
lret
les
lcall
lcall
xchg
ljmp
mov
lahf
jle
mov
pushf
and
lds
popf
outsb
mov
shll
fucomp
popa
or
adc
cmc
std
and
sbb
pop
add
or
shll
dec
add
and
lahf
inc
jl
aaa
js
roll
pop
jg
movsl
sbb
push
daa
aaa
or
fimuls
sbb
call
sbb
push
add
cli
daa
in
cltd
int3
imul
fmuls
stos
jl
lock
sbb
add
xor
sbb
pop
and
mov
jo
mov
lea
rorl
nop
je
lahf
push
xchg
dec
add
inc
mov
or
push
jne
outsb
int3
xorb
mov
jb
xchg
loopne
aaa
imul
loop
cmc
mov
call
inc
gs
sbb
inc
in
inc
lea
insl
mov
sbb
mulb
or
ret
test
mov
sbb
pop
fmuls
and
pop
ss
mov
not
test
lods
sbb
inc
cmp
aas
dec
flds
cmp
and
out
rcrb
lahf
sarb
ja
xchg
idiv
add
std
xchg
repnz
push
xchg
sub
ljmp
xchg
cmp
cld
xchg
jbe
pop
lods
loopne
testb
pop
test
int3
ljmp
fistpl
aaa
ret
pop
add
lods
xor
xchg
mov
sbbb
xchg
aas
mov
scas
loopne
inc
icebp
jb
jno
dec
inc
push
aad
jo
mov
test
cwtl
fwait
and
ljmp
adc
shll
xchg
jno
in
gs
pop
xor
stc
jne
sbb
jbe
lea
lahf
mov
aaa
stc
mov
jo
cmp
call
mov
adc
pop
mov
ret
aam
xchg
add
mov
jecxz
into
and
shl
pop
imul
enter
mov
mov
movsl
mov
mov
ror
incl
xor
xchg
sbb
xor
add
jae
adc
repnz
stos
cmp
inc
dec
popfw
lea
pop
ret
sbb
out
das
sub
mov
mov
movsb
jl
leave
les
cmp
xchg
mov
adc
ss
or
movsl
adc
leave
repz
sahf
or
ljmp
xchg
hlt
lods
mov
arpl
sbb
xor
xchg
hlt
fdivrp
jb
sub
aam
mov
xor
adc
popa
lds
ss
mov
add
outsb
add
ror
cmc
leave
cmp
rorb
test
jg
mov
jmp
inc
sti
ror
adc
sbb
dec
test
js,pt
add
sarb
jl
ret
mov
cltd
outsb
push
mov
pop
lcall
jl
shl
roll
lea
mov
incb
xor
push
inc
cmpsb
into
xchg
ja
cmp
out
or
aas
negb
and
and
aas
or
or
jmp
mov
xchg
outsl
pop
fwait
pop
cmp
pop
cmp
nop
push
and
call
adc
adc
icebp
push
and
nop
mov
inc
loope
mov
push
js
xor
test
lahf
mov
pushf
mov
loopne
inc
imul
popf
inc
mov
push
enter
pop
mov
or
mov
jo
inc
add
add
xchg
int3
popf
int3
repz
js
or
js
ja
repz
jo
jae
outsl
push
ljmp
je
inc
sub
and
sub
lret
dec
mov
gs
inc
addl
xchg
xchg
mov
mov
mov
aam
imul
sar
add
out
lock
jge
gs
dec
dec
mov
imul
aad
cmp
jle
popa
pop
xchg
xor
sbb
dec
lock
xchg
mov
iret
xor
lret
sbb
ficompl
repz
jbe
in
mov
int
ja
mov
sti
or
imul
and
cmp
sub
ret
std
jae
dec
add
xor
insl
outsl
fdivrs
mov
aaa
scas
xchg
mov
xor
sub
sbb
pop
adc
cmp
cmp
dec
iret
sti
and
jbe
push
push
pop
mov
imul
ljmp
stos
pop
cmc
dec
insl
mov
fisubl
in
in
leave
cmp
cmpsb
inc
inc
jns
xor
cltd
addr16
mov
xor
addb
sbb
mov
into
cmc
mov
jb
dec
aas
js
dec
mov
dec
push
bound
and
lahf
push
ss
jge
inc
nop
ret
call
or
movsl
cmp
pop
xor
mov
dec
clc
rcr
sahf
xor
sbb
repnz
cltd
cltd
xchg
cmp
andl
mov
bound
inc
sbb
push
or
push
adc
ja
in
rcrb
xor
push
adc
push
pushf
daa
inc
popf
pop
lcall
pop
xchg
inc
cmp
jge
inc
and
lret
lods
shlb
frstor
and
jg
push
jle
repnz
mov
fisubrl
shll
mov
popa
xchg
mov
pop
cmpsb
mov
int3
mov
mov
push
pop
popa
mov
pop
xor
pop
push
adc
pop
push
mov
jb
fsub
xchg
add
sbb
xor
push
jbe
test
sahf
dec
arpl
push
popf
pop
cmp
cmp
pop
mov
mov
push
addr16
jl
xchg
mov
sbb
out
mov
lret
or
mov
mov
adc
lods
or
decb
pop
test
add
mov
sti
icebp
jg
sub
daa
lret
imul
dec
icebp
movsl
push
or
and
cld
dec
mov
mov
dec
je
mov
stos
pop
jmp
inc
fsubrp
inc
popa
outsl
mov
jae
sbb
stos
mov
out
lcall
test
cmp
stc
decl
ja
aas
mov
ds
fimull
insb
adc
mov
dec
loopne
pop
pop
scas
xor
xor
mov
movsb
cmp
mov
mov
dec
out
jp
xchg
pop
movsb
xchg
mov
scas
push
dec
mov
add
cmpsl
mov
icebp
fcomps
pop
je
sub
daa
cmp
outsb
stos
mov
in
push
imul
xchg
ret
cmp
addr16
int3
mov
dec
adc
add
test
inc
push
pop
fst
push
psllq
xchg
cmp
mov
adc
lea
push
jno
and
mov
push
sbb
dec
adcl
movsb
aaa
or
sub
popf
pop
inc
scas
std
pop
cltd
pop
movsl
clc
mov
mov
lahf
adc
mov
mov
jns
lcall
dec
aam
out
into
into
dec
hlt
jnp
xchg
int3
int3
inc
mov
sub
xor
cli
mov
fidivrl
ss
pusha
stos
in
scas
and
jl
adc
lods
pop
jns
insl
pop
fadd
incl
jp
xchg
incb
cmp
jge
clc
ss
ja
movsb
jnp
sub
mov
xchg
push
lahf
stc
xchg
push
stos
jecxz
js
icebp
push
in
aas
bound
repnz
dec
dec
das
arpl
push
mov
pop
pop
push
int
add
add
mov
sub
das
and
outsb
rcr
mov
ljmp
mov
sbbl
push
jne
mov
fildl
nop
push
rcl
pop
inc
movsl
push
sarb
mov
xchg
jno
insb
pusha
mov
loopne
xchg
lret
pop
and
pushf
xlat
rcl
jecxz
xchg
lret
adc
popa
ss
rcll
pop
stos
cmp
add
sub
ljmp
pushf
aaa
inc
cld
call
push
pop
add
dec
ss
rcrb
adc
mov
inc
mov
inc
hlt
add
mov
mov
mov
fbld
scas
fldt
cwtl
and
std
mov
movb
fdivs
hlt
cmp
mov
mov
jg
jle
aam
mov
xchg
int3
out
xchg
sub
sub
movsb
aam
adc
aad
or
push
adc
pushf
cmp
mov
mov
dec
arpl
mov
add
ss
sti
cltd
call
lods
ljmp
cltd
lods
xchg
add
mov
pop
and
movsb
addb
inc
inc
push
mov
and
lock
push
push
js
leave
xor
cmp
lds
mov
or
jbe
xor
in
jecxz
in
test
xor
inc
lcall
cmpsl
mov
mov
or
popf
cmp
iret
mov
sub
stos
arpl
insb
mov
or
fs
lsl
dec
push
add
adc
pusha
inc
dec
add
mov
xchg
pop
add
push
push
jno
aad
and
pop
out
test
push
pop
dec
mov
cwtl
pop
out
cmc
and
and
inc
mov
mov
add
sbb
mov
testb
out
ljmp
mov
dec
outsl
mov
push
and
andb
fsubrs
clc
and
add
pop
leave
aad
fistpll
fnsave
xchg
or
push
mov
insb
and
or
cld
pop
hlt
std
scas
xchg
xchg
or
ss
clc
pop
nop
sub
sbb
lahf
or
int3
icebp
add
mov
test
fnsave
or
in
sub
insb
adc
add
and
int
addr16
out
je
xchg
aad
adc
and
mov
xchg
push
dec
fsubl
decl
push
cmpb
lea
lods
addl
dec
dec
je
sti
scas
stos
cmp
dec
punpckldq
and
mov
gs
mov
push
mov
or
push
clc
jp
xlat
pop
pop
in
sub
fwait
insl
sub
in
fcmovnu
inc
stos
data16
arpl
lods
push
lcall
fstps
inc
fwait
outsb
addr16
cltd
mov
xchg
push
push
lret
ja
add
stc
adc
and
push
xchg
and
add
adc
cmp
sub
out
push
rorb
call
fs
push
and
sub
push
outsb
out
test
shll
imul
and
jle
andl
sti
push
fists
out
enter
push
mov
lock
xchg
mov
arpl
subl
stos
loop
pusha
inc
mov
out
dec
fsubr
jle
scas
pop
loope
xchg
inc
dec
test
adc
adcb
xlat
jp
jmp
push
out
dec
add
enter
insb
jns
or
divl
sahf
decb
in
dec
test
push
mov
pop
sahf
cmp
repnz
les
push
jae
and
shrb
into
xchg
sti
stc
fisubrs
imul
inc
lds
out
popf
sbb
sti
pop
ret
jl
outsl
xor
sbb
mov
pusha
sbb
roll
adc
not
lar
mov
xor
push
in
and
mov
cmp
stos
stc
cwtl
aam
lods
or
inc
pop
jmp
mov
aad
or
pop
dec
es
ljmp
adcb
in
jo
jg
loop
xlat
insb
repz
lcall
sub
pop
les
icebp
push
mov
push
cmp
imul
psubd
stos
sub
mov
test
cmpsb
adc
iret
lret
and
pop
pusha
movsl
insb
dec
test
mov
or
in
adc
movsl
push
jmp
dec
cli
lcall
pop
outsl
ljmp
cmp
in
and
xorl
test
dec
sbb
shll
leave
xchg
mov
inc
or
or
mov
stc
jmp
mov
ja
cmp
mov
out
cmp
sub
shrd
xchg
jecxz
jo
cltd
sbb
jno
rclb
mov
cmp
mov
nop
shrb
cmpsl
dec
xchg
jecxz
jno
out
into
lods
sbb
pop
cmp
dec
ret
inc
in
cs
incl
jae
adc
mov
out
fcos
sub
pop
jge
sub
scas
loopne
push
push
and
cmp
fistpll
adc
setp
sbb
pop
sbb
inc
inc
sbb
call
rcl
push
fadds
sub
rclb
sahf
into
mov
cmp
data16
adc
ljmp
mov
outsb
mov
ljmp
sub
insl
pop
push
mov
add
xchg
add
adc
jo
mov
fmuls
dec
adc
lods
fcmovnb
and
add
sub
inc
xchg
add
xchg
push
test
push
pop
lcall
cs
andb
call
stos
scas
sbb
xor
or
push
push
xchg
out
adcl
lcall
repz
mov
mov
jbe
or
mov
mov
pop
clc
mov
lcall
imul
mov
xchg
sbbl
and
add
mov
lods
cli
or
jecxz
push
pop
sbb
sbb
pop
and
mov
xor
loop
and
lret
jle
ret
cltd
fnstsw
push
xchg
mov
adc
mov
jp
stos
push
shrl
dec
fs
std
stos
ret
mov
add
xchg
insb
jecxz
push
shll
or
xor
daa
adc
in
sbbl
cmovbe
in
shll
inc
jecxz
fs
xchg
adc
mov
sub
cmp
mov
fisubl
add
mov
adc
push
movsb
inc
mov
in
adc
sub
scas
in
out
xor
add
jo
and
pushf
xor
xchg
repz
jg
inc
cmp
cmp
jl
inc
push
arpl
and
dec
nop
repnz
jle
mov
mulb
or
lds
jo
sub
adc
xchg
out
adc
cmpsl
rcrl
movsl
sbb
jp
pop
mov
push
push
inc
notl
mov
cli
push
test
cwtl
es
mov
ret
lahf
movsl
insl
mov
pop
ja
push
aad
and
aaa
and
push
mov
int
daa
int3
jne
sub
jb
xor
mov
ret
mov
lock
fisttps
in
imul
faddl
jnp
sbbb
push
mov
stos
inc
loop
push
mov
outsl
mov
push
cs
sti
or
xor
or
push
jp
stc
dec
mov
push
in
add
inc
repz
fisubs
stos
aam
sahf
test
xlat
sbb
lds
add
mov
ret
mov
or
mov
add
lods
jmp
fiadds
gs
push
cmc
or
fcompl
mov
add
nop
mov
and
mov
aam
cwtl
jno
in
lods
movsl
mov
mulb
outsb
mov
and
lahf
fs
and
cmp
xlat
jmp
sub
jb
mov
in
sbb
xchg
mov
mov
xchg
pushl
lret
mov
sub
mov
push
mov
or
cmp
pop
notb
jmp
mov
sbb
sub
fists
cwtl
xlat
cld
gs
mov
mov
scas
cli
outsl
xor
xchg
mov
and
out
dec
iret
imul
outsl
pusha
mov
adc
dec
insb
loop
loope
lock
shlb
ljmp
and
push
jge
xchg
xchg
lret
xor
dec
out
mov
stos
pop
or
jl
out
mov
loop
clc
subb
stos
xchg
iret
jmp
xchg
in
cs
xchg
rolb
data16
fnsave
insl
fsubs
incl
cmp
dec
mov
mov
vmovss
adc
mov
adc
cmpsb
jp
ja
ret
jg
in
sbb
mov
ds
aas
cmovle
cmp
xchg
and
jb
imul
mov
loop
dec
call
ficompl
and
cmp
cmp
fs
dec
loop
cli
outsb
aam
mov
loope
sub
movsb
rolb
xchg
add
bound
enter
cli
lahf
push
jl
and
add
lods
cltd
mov
daa
dec
push
mov
add
lcall
in
testb
clc
scas
orl
cwtl
mov
jl
jge
dec
mov
or
adc
jmp
repz
push
shr
scas
fbld
mov
pop
nop
push
cmc
sub
jp
sarb
adc
pop
cmp
pop
in
mov
jnp
inc
and
repnz
negb
xor
and
mov
loopne
sar
cwtl
stc
push
daa
and
inc
dec
scas
xor
fldt
fdivr
cmp
jnp
mov
push
loopne
and
pop
push
scas
push
dec
jae
sub
unpcklps
inc
std
or
arpl
adc
int
lahf
dec
lahf
add
xchg
jmp
fldcw
xor
cmc
mov
dec
adc
cmp
mov
ffree
cmp
lods
aad
or
and
andl
fstps
scas
loop
leave
stc
push
ja
fadds
pop
xor
aam
push
cmp
repnz
push
ljmp
gs
lahf
push
jbe
rcll
iret
xchg
lds
mov
rorb
sub
negl
mov
dec
insl
push
sbb
jl
mov
pop
dec
cltd
sub
sti
or
push
movsl
lea
mov
mov
stos
and
mov
xchg
jns
inc
push
xor
insl
lea
push
mov
jmp
mov
in
mov
xchg
fiadds
pusha
inc
mov
lods
mov
cmpsb
lods
in
pop
mov
xor
or
xchg
push
push
int
mov
lret
sub
sub
jl
idivb
loope
call
dec
add
lret
inc
dec
pop
inc
or
cwtl
sbb
fs
mov
mov
mov
cmpsb
xchg
jno
insb
mov
mov
push
xchg
rcl
mov
inc
sub
lds
xor
jmp
cmp
push
sbbb
movsb
xchg
or
int3
arpl
pop
and
test
cmpsl
arpl
or
pop
lgdtl
sbb
movsl
call
js
push
sbb
andb
lret
pop
nop
jbe
jo
mov
xor
jns
mov
outsb
cwtl
mov
jg
and
dec
pop
pop
pop
in
icebp
nop
imul
arpl
dec
jl
mov
xchg
xor
sbb
mov
cmp
sub
mov
data16
int
cmp
cmp
insl
jl
cmp
or
movsb
into
cmp
sbb
ja
push
hlt
sahf
fcoml
out
and
into
lock
jnp
lahf
push
leave
push
lahf
data16
pusha
lock
jp
stos
inc
fsubl
es
cwtl
clc
push
mov
aas
clc
in
nop
xor
cltd
leave
fdivs
jp
jle
aas
lahf
nop
lret
ret
jns
jae
dec
cmp
scas
sub
out
xor
divl
imul
add
out
or
scas
lea
imul
jmp
jmp
lods
cmp
daa
mov
sub
mov
cs
testb
and
outsl
pusha
sub
add
aad
sbb
pop
jg
push
adcl
push
and
out
dec
push
xor
dec
aam
push
jp
loopne
lods
imul
mov
popa
and
ljmp
adc
push
mov
popl
ljmp
test
mov
mov
xor
sarb
into
mov
xchg
inc
or
or
or
xchg
mov
stos
mov
sti
into
push
test
jmp
fs
test
push
das
sub
push
rolb
sub
movsl
mov
or
add
mov
mov
and
pop
stos
xchg
in
dec
mov
sbb
push
mov
dec
out
pop
repnz
pop
inc
push
push
sub
adc
psrlq
lahf
ljmp
cmpsb
ficomps
cmp
jge
scas
pushf
add
cs
jnp
sub
mov
cmp
daa
aaa
pop
jno
sub
lock
xchg
mov
sbb
aas
dec
fsub
test
lahf
xor
push
mov
jmp
pusha
and
leave
push
adc
roll
xchg
sub
add
repz
push
cs
pop
mov
loopne
pop
ret
adc
or
fstpl
mov
cmp
fmuls
fucomip
jae
xchg
aas
jecxz
push
insl
cmp
adc
jnp
cli
pushf
imul
mov
scas
add
cli
movsb
leave
jbe
das
sbb
nop
ljmp
mov
gs
xor
adc
push
or
sbb
aas
nop
adc
and
cmc
inc
into
pop
xchg
jae
jmp
push
jg
mov
js
push
and
cld
sahf
jl
rclb
test
mov
mov
cmp
cmpsl
push
addl
lahf
lcall
daa
fcompl
roll
sbb
outsb
test
dec
adc
in
loop
xor
add
sahf
sbb
loopne
aad
add
mov
ss
jae
xchg
popf
mov
mov
pop
out
dec
lds
lods
in
aam
das
mov
mov
xchg
jp
ja
adc
sbb
mov
xchg
push
aas
mov
add
cmp
in
pop
jp
pop
cmc
aam
lock
jae
rcr
adc
xchg
rcl
aam
shll
and
repnz
jecxz
and
lcall
and
mov
fidivs
push
nop
inc
pushf
inc
add
mov
loopne
push
ja
fsubl
fcmovnu
leave
roll
cmp
and
les
bound
mov
jp
ret
mov
xor
hlt
mov
pop
in
arpl
xchg
mov
outsb
aam
shrb
arpl
addl
pop
xchg
inc
pop
movsl
mov
lea
sarb
push
in
std
dec
and
les
dec
add
mov
ficoms
icebp
lock
mov
insb
scas
inc
cltd
orb
cmpsl
jnp
ds
push
sub
insb
mov
push
mov
test
lcall
push
inc
pushf
nop
insb
xor
fcompl
push
cmpb
inc
xor
out
dec
inc
ret
mov
jle
or
sarl
insb
popf
xchg
ret
cmp
jl
push
mov
jecxz
fimull
or
frstor
push
jge
mov
mov
add
cmp
jle
sbb
lret
daa
ss
cmpsl
mov
fisubrs
add
or
pop
cld
mov
test
nop
push
and
scas
sbb
mov
cmp
and
ss
cmc
clc
ret
add
addl
imul
mov
stos
adc
mov
std
sbb
jg
dec
rorl
shrl
mov
lahf
cmovl
fsincos
push
jmp
jl
jns
cwtl
lea
fstps
sahf
push
das
js
jp
sub
es
push
repz
push
clc
or
jb
pop
adc
fwait
adc
push
and
lds
outsl
rorb
cld
mov
inc
aas
ss
xor
mov
gs
dec
andl
push
ds
in
add
sub
fnstenv
scas
xchg
jo
inc
pop
pop
adc
mov
mov
shrb
icebp
ja
loopne
repz
push
adc
iret
ffree
test
xchg
rolb
arpl
pop
mov
jae
push
fwait
sub
daa
scas
loopne
jge
aad
mov
pushf
sub
mov
jmp
sbb
mov
leave
push
or
sub
cmp
jge
sub
clc
inc
test
in
push
sahf
or
jae
out
scas
arpl
cltd
ljmp
test
jno
insl
or
and
rcll
sti
sbb
cld
out
in
jns
or
sub
sbb
mov
sub
push
xor
into
add
cld
scas
add
mov
dec
add
inc
imul
outsl
stc
dec
mov
xor
pop
lods
add
sbb
orl
push
mov
scas
push
jge
imul
and
es
icebp
inc
je
mov
xor
sbb
int
sbb
mov
stos
sub
int3
pop
jnp
mov
loope
imul
push
and
lcall
adc
add
push
or
std
jbe
xor
and
arpl
jecxz
lods
jno
mov
cmp
cmp
pop
mov
outsl
cwtl
ret
rorb
pop
stc
lahf
dec
inc
lds
mov
sbb
and
inc
popf
out
cmp
nop
into
add
cwtl
sbb
jmp
ficomps
sbb
cltd
mov
orl
out
pop
mov
shlb
in
dec
add
and
popf
enter
out
sti
and
aam
or
or
mov
movsb
cmp
popa
shll
lock
mov
out
mov
inc
fiaddl
mov
scas
into
xchg
mov
je
rcr
cmpsl
adc
mov
gs
test
mov
and
call
xchg
add
jle
scas
push
jle
adc
dec
push
pop
pusha
and
ds
test
adc
pop
repz
inc
cmp
mov
lret
mov
pop
out
pop
out
or
ds
dec
test
je
pop
mov
arpl
and
pop
mov
sub
lds
dec
adc
fsubr
jmp
repnz
das
in
push
mov
xchg
dec
fwait
mov
movsl
pop
or
cmp
test
dec
jne
addr16
dec
mov
sti
xchg
mov
call
jbe
dec
pushf
imul
je
shl
fnstcw
pop
stos
inc
and
mov
inc
pop
add
push
add
mov
jb
or
dec
dec
mov
das
lcall
cltd
push
mov
outsb
stos
mov
xor
or
sub
lds
mov
daa
inc
lock
inc
test
dec
popa
jb
imul
js
je
dec
mov
insb
xor
xchg
dec
icebp
push
inc
je
imul
outsb
fbstp
in
mov
lcall
lret
pop
jns
xchg
rclb
sbb
roll
ss
dec
mov
adc
lret
pop
loopne
mov
pop
std
sbb
pushf
inc
dec
sar
xor
and
mov
inc
stc
push
lock
loopne
ja
lods
outsl
pop
jno
jp
lcall
out
cmpsb
sbb
dec
outsl
ja
stos
sahf
std
lret
push
jns
std
jge
jg
adc
cs
ret
or
xorl
popa
mov
mov
fs
ss
daa
mov
divl
cld
lret
out
lods
dec
dec
add
sbb
adc
ret
push
xchg
mov
push
push
ffreep
sub
xchg
mov
mov
cmovns
stos
cmp
sub
out
push
cmpsl
rcrb
mov
test
nop
cmp
lahf
mov
femms
fstps
cmp
pop
test
in
loop
jae
aad
mov
sub
pusha
out
inc
pop
cmp
les
jp
faddl
scas
jo
loope
vpmacsdql
pop
fistpl
sbb
sbb
mov
out
lcall
dec
scas
and
mov
repz
xor
arpl
leave
test
sub
popa
push
popf
mov
mov
clc
cltd
mov
xchg
and
cld
pop
fs
fisubl
inc
incb
sub
int
negl
mov
push
lea
iret
push
jns
jno
mov
inc
adc
stos
and
paddb
ret
fimull
xor
jo
mov
testl
mov
inc
jo
mov
stos
push
out
mov
push
fnstcw
jbe
pusha
fwait
test
xor
cmpl
addb
ja
push
ss
out
pop
sbbb
mov
js
outsb
cmp
icebp
or
mov
xchg
stos
loopne
pop
sbb
bound
jmp
cwtl
scas
repnz
lahf
mov
mov
mov
sbb
jne
mov
test
mov
dec
jge
cltd
inc
cwtl
jnp
xchg
cld
push
call
inc
pop
add
cmp
ret
mov
push
shl
add
or
jg
cmp
mov
jae
dec
xlat
movsl
add
sbb
lods
lea
cmp
and
dec
add
xchg
mov
push
inc
adc
into
scas
lahf
mov
sbb
cmpsb
in
inc
ret
subb
or
imul
aaa
fisubrl
mov
lds
inc
iret
rorb
mov
cmp
movsbl
aaa
fs
fcoml
imul
pop
fcoml
loope
pop
jmp
mov
pop
jns
or
ljmp
test
adcl
jle
ret
repnz
test
xor
jnp
xlat
or
mov
sub
push
xchg
ljmp
rorl
sbb
rcl
push
mov
jp
fldenv
cmp
sbb
xchg
popf
mov
pop
dec
lret
lock
outsl
add
push
scas
pop
cwtl
inc
test
cltd
sbb
iret
push
ficoml
cli
mov
xchg
fs
and
addr16
add
pop
loope
or
pop
scas
mov
mov
mov
push
xchg
mov
stos
push
mov
push
pop
cmp
fnstsw
test
jp
lahf
inc
repnz
push
jg
stos
fisttpl
pop
movsb
mov
gs
out
push
arpl
in
add
lds
xor
pop
pusha
adc
sbb
sub
and
pop
cwtl
lcall
sbb
stos
adc
int
lods
and
leave
add
jne
movsl
data16
xor
repnz
dec
fistps
clc
enter
lea
aas
ljmp
jne
jno
shlb
xor
xchg
xchg
fldlg2
rorb
hlt
mov
push
add
jp
pop
and
adc
push
shlb
stos
pop
fisttpll
pop
push
cmpsl
sub
pop
push
sub
fisttpl
dec
pop
ljmp
nop
push
call
sahf
mov
pop
cvtpi2ps
dec
popf
xchg
movsb
mov
xor
add
or
loopne
adc
lcall
cmp
aaa
mov
adcl
xor
pop
fnstsw
movsl
fwait
mull
int
lods
pop
push
mov
stos
or
sbb
pop
mov
and
sbb
shll
orb
sbb
lret
jp
xor
sub
mov
repz
arpl
push
fiaddl
std
cmc
pusha
cmp
mov
and
cltd
mov
add
push
movsb
mov
push
xchg
adc
fwait
sub
insb
shlb
mov
int
add
ret
jl
cmp
sub
pop
cmpsl
enter
mov
test
jo
or
push
xchg
popa
sbb
cmp
pop
xchg
jne
fildl
xchg
xchg
sub
add
pop
push
aad
jl
ficompl
aad
fwait
aad
cli
and
cs
fisubs
stos
fiaddl
xor
or
aad
loopne
sub
subb
xchg
sub
mov
cmp
rclb
lahf
mov
or
push
out
js
arpl
lods
cs
scas
popa
pop
sbb
xor
lretw
and
loop
and
sbb
out
push
jg
pop
fstps
je
cmp
jle
pop
out
dec
repz
ja
ss
add
adc
outsb
daa
aad
fimuls
add
into
lret
push
stc
xor
mov
cmc
popf
out
rcr
sub
fcoml
push
in
andb
xor
aas
cmpsl
mov
sub
repnz
sbb
mov
mov
repnz
sub
pop
imull
jmp
ss
sahf
cli
xchg
test
and
ja
pop
sbb
push
int
inc
mov
dec
movsb
mov
into
xchg
mov
mov
lods
and
and
pop
sub
dec
add
inc
and
xchg
mov
mov
push
rcrb
sbb
or
xchg
stc
sbb
jmp
insb
out
iret
cmp
inc
aad
jp
mov
adc
or
add
dec
cs
and
pusha
jg
mov
je
xchg
rcll
aas
push
cmpsb
pop
cmpsl
mov
xchg
lret
std
pop
inc
divl
lods
cwtl
subl
loope
pop
add
aaa
outsl
cltd
lcall
fwait
inc
push
sbb
xor
les
push
mov
insb
cld
add
or
or
add
pop
rcrb
jns
arpl
mov
inc
sbb
xor
lret
dec
pop
movl
push
cmc
cld
sbb
jns
je
cmpsl
addb
mov
and
sub
mov
shll
movl
jo
les
or
push
jecxz
adc
cmp
inc
add
xor
mov
lods
pop
int3
xor
sub
pop
nop
mov
cld
add
js
inc
xchg
push
out
jo
xlat
sarl
dec
pop
cmp
pushf
pop
dec
mov
adc
xchg
mov
sahf
imull
loop
loope
push
cmp
xchg
popa
push
sbb
sbb
cld
adc
mov
jle
xor
inc
mov
adc
ret
inc
cli
mul
xchg
ror
or
outsb
movsl
aad
sub
aad
ret
inc
add
jno
adc
imull
std
xor
fwait
mov
adc
add
push
rclb
fcompl
mov
mov
push
mov
jecxz
mov
fnsave
call
push
jnp
shll
popf
subl
mov
add
insb
sub
pop
fs
add
adc
dec
jnp
popa
pop
mov
cltd
jbe
pop
sbb
shlb
fidivrs
adc
out
fiadds
add
lods
imul
repnz
test
xor
stc
and
test
inc
xchg
jg
scas
imul
sbb
stc
push
iret
push
loop
or
stos
les
inc
mov
inc
cmp
aad
pushf
scas
jne
dec
scas
jnp
jle
mov
cltd
cwtl
rcr
sub
pop
and
pop
fiaddl
add
enter
lahf
xor
add
movsb
add
sub
test
sub
add
sbb
outsl
xchg
orl
test
pop
loop
addl
lods
repnz
push
leave
cmp
test
xchg
xchg
jle
and
fs
add
popf
mov
mov
test
ss
hlt
lea
lea
push
or
or
dec
push
shl
xor
shlb
inc
pop
loope
add
mov
inc
in
cmp
push
push
rclb
filds
push
push
sbb
pop
sub
popl
mov
in
mov
gs
mov
mov
out
movb
dec
lcall
test
xor
cmp
xchg
sahf
rclb
jbe,pt
adc
jle
lods
or
js
lods
pop
fldcw
cli
xchg
xor
fmul
xor
fbld
xchg
popa
push
xlat
movsb
addr16
xor
sti
insl
out
enter
or
arpl
dec
cmp
add
mov
sbb
fsubrs
lods
or
pop
cmp
mov
cli
adc
xlat
sbb
jge
aad
jb
push
inc
sbb
jb
rcll
adc
cmp
or
in
divb
cwtl
jmp
loop
xchg
scas
jge
cmp
pushf
out
mov
inc
push
insb
aad
xchg
cwtl
xor
aas
pop
pop
inc
sub
test
mov
sbb
sbb
dec
outsb
rcrl
inc
stos
jp
in
add
pop
cmpsb
mov
dec
stos
mov
dec
add
sti
xor
roll
clc
js
and
ljmp
movsl
mov
xchg
dec
sbb
dec
aas
lock
lahf
jae
popf
push
jge
aas
xor
mov
mov
repnz
sbb
loopne
inc
ja
mov
sbb
mov
xchg
inc
and
mov
xor
js
shlb
cld
pusha
cli
and
xchg
sahf
lods
sbb
cmp
pop
lds
pop
adc
leave
in
mov
test
scas
mov
push
and
aad
outsb
adc
lea
cwtl
mov
aam
jg
cmp
add
insl
push
jmp
das
adc
loopne
pop
pop
ja
ljmp
aam
ret
or
sbb
and
push
shrl
in
dec
xchg
push
clc
mov
iret
xchg
leave
daa
push
test
or
mov
fprem
loop
jmp
insb
pop
adc
repz
xchg
sub
sub
lcall
dec
xchg
js
sbb
push
lret
and
push
xchg
and
fnsave
cwtl
xchg
outsb
pusha
cmp
pusha
jp
test
pop
vmovaps
scas
fwait
and
lds
fs
dec
repz
mov
dec
pushf
cs
cli
push
ftst
mov
test
pop
mov
pusha
mov
scas
test
mov
cmp
add
jnp
mov
fcmovnb
sbb
pop
lret
rclb
dec
adc
cltd
ljmp
push
jno
dec
or
ficoml
jae
and
aam
repz
inc
fcoml
leave
call
xchg
mov
pop
pop
or
rorb
jg
sarl
mov
push
xchg
insl
sahf
cmc
icebp
popa
mov
inc
xor
cmpsl
mov
jns
mov
dec
add
gs
pop
sbb
fwait
ss
enter
out
pop
in
and
repnz
push
fisttps
pop
mov
mov
fwait
xchg
aad
ss
mov
stos
in
pop
stc
lock
std
pop
outsb
pushf
clc
mov
scas
lret
out
jge
or
mov
lret
cltd
psubusw
push
dec
jle
mov
jnp
out
jg
je
movsl
mov
mov
outsl
sbb
mov
push
aad
sbb
pop
ljmp
pop
cmp
mov
sti
imul
fstpl
in
mov
sbb
stos
in
cmp
push
ljmp
xor
test
and
xor
sub
pusha
cld
jp
icebp
pop
sbbl
xchg
and
cld
in
sub
shll
xor
fdivp
test
shlb
dec
jge
test
inc
mov
jb
pop
inc
push
cmp
ljmp
in
mov
addr16
ja
or
and
cli
xchg
jb
or
jg
mov
adc
fisubrl
popa
fs
movsl
andl
clc
pop
jecxz
sahf
dec
mov
lods
testl
jns
mull
adc
push
movsb
sub
outsl
icebp
sti
cmp
push
clc
das
lcall
mov
cmc
frstor
test
mov
xlat
cmc
in
stos
lea
and
adc
adc
xlat
dec
mov
xchg
or
xchg
stos
jae
xchg
mov
jecxz
mov
lret
push
movsb
mulb
add
cs
xchg
aam
or
add
sbb
adc
cli
mov
ljmp
or
lea
int3
xor
test
mov
add
adc
inc
mov
push
cmp
inc
ja
jp
repnz
in
mov
movsb
je
mov
testl
in
dec
fidivrl
push
loop
add
push
push
mov
in
aas
and
cwtl
cs
fsts
int
push
push
cli
repnz
in
jb
clc
je
lods
push
mov
cmp
lods
out
sti
xchg
jnp
xchg
sub
cmpl
daa
or
addr16
movsl
rorl
sub
mov
or
xor
pushf
and
inc
adc
mov
dec
jno
icebp
dec
pop
rorb
pop
mov
mov
and
icebp
cs
mov
lock
lods
push
lds
sbb
imul
add
xchg
pop
lret
movsb
enter
add
popa
push
in
xchg
in
inc
cmp
cmp
rorb
sbb
push
stc
fistps
dec
push
test
ljmp
mov
outsl
jmp
jae
out
popa
pop
push
mov
pop
icebp
push
test
rcll
lock
pop
int3
mov
mov
push
cmp
mov
test
mov
or
ljmp
fwait
loop
xlat
pop
ljmp
or
movsl
mov
dec
aam
push
sti
loope
xchg
pop
pop
mov
fisubrs
push
mov
mov
mov
inc
and
cwtl
push
gs
adc
negb
ffree
cmpsb
cmp
push
mov
and
fcmovu
dec
dec
push
decb
loop
insb
out
outsb
iret
cmp
sbb
test
and
mov
sub
cvtps2pd
inc
mov
sbb
fs
or
lret
inc
push
push
add
push
and
mov
decl
cmc
leave
aad
mov
lock
test
call
sub
fimuls
and
push
out
test
xor
roll
push
push
dec
dec
adc
xchg
enter
xchg
stc
and
icebp
shll
adc
cmp
mov
test
rep
push
inc
std
addr16
or
test
shrl
cmp
push
sahf
mov
mov
cmp
nop
and
xorb
push
adc
dec
sbb
imul
cmp
and
sbb
popa
mov
aad
imul
mov
fs
sarb
movsl
xor
xchg
insb
lret
mov
dec
aam
mov
cltd
cmpb
pop
and
mov
out
mov
sahf
adc
cmp
mov
xor
cmp
sub
sbb
test
popf
imul
jp
ret
jae
mov
sub
pop
adc
and
lcall
out
sbb
xor
iret
xlat
lods
jo
rclb
movsb
lods
sub
loopne
push
mov
jmp
push
sbb
cwtl
and
xor
pop
stc
mov
inc
sti
xor
pop
push
inc
sti
mov
push
fs
mov
inc
loop
out
repz
subb
lret
jle
sub
ret
xor
clc
push
aas
iret
and
repz
cmp
hlt
stos
jmp
ljmp
cld
inc
rorb
gs
push
sbb
adc
bound
xchg
mov
jmp
mov
movsb
dec
das
push
inc
shlb
add
mov
outsb
mov
dec
and
mov
int
fs
mov
jbe
in
std
cmpsl
cmp
pusha
fldt
mov
aam
mov
int3
mov
xlat
sub
dec
bound
push
jg
adc
fs
and
repz
jbe
daa
iret
push
adc
cli
adc
movsl
push
idivl
iret
and
popa
loop
dec
mov
xchg
xchg
int3
mov
pop
or
dec
outsb
push
mov
jb
jl
ret
jl
popf
inc
inc
scas
pop
xchg
jl
not
or
insl
fadd
xchg
xor
and
cmpsb
fwait
pop
shlb
ss
cmp
dec
enter
pop
and
push
inc
xchg
scas
sub
sbb
pop
int
mov
das
sbb
cli
mov
dec
pop
xor
movsl
icebp
bound
aad
xchg
dec
pop
les
mov
jae
cmp
repz
mov
insl
fisubrl
ss
insb
js
dec
cli
outsl
cwtl
add
insb
mov
sahf
lock
loopne
iret
jns
sbb
scas
lds
dec
lods
out
out
cld
adc
and
jmp
mov
cmp
fdiv
scas
fsubrl
dec
lcall
sbb
mov
jae
test
loop
mov
insb
mov
mov
jbe
xchg
mov
test
inc
pop
fstpl
pop
add
loopne
mov
sahf
sahf
loope
lds
cs
xchg
add
shlb
scas
and
xor
or
cmpb
adc
stc
mov
cmp
pop
adc
add
or
mov
stos
push
xor
or
xchg
fistps
mov
jae
xchg
orb
imul
lods
scas
fisttps
ds
out
dec
sub
xorl
adc
dec
lahf
das
and
data16
or
add
loopne
arpl
pop
sbb
mov
xchg
mov
repnz
dec
hlt
xor
sub
ret
xor
das
rcr
sbb
aad
adc
xchg
jg
mov
ret
dec
pop
pop
jns
outsl
sbb
push
rorl
inc
adc
out
arpl
jnp
push
cli
hlt
mov
stc
and
cmpsb
bound
outsl
aas
mov
adc
ds
mov
cmp
ljmp
jg
testl
test
dec
mov
lret
jmp
adc
add
mov
push
adc
dec
test
loope
and
roll
lea
cwtl
mov
bnd
dec
xor
pop
jge
and
lcall
xchg
lds
sbb
out
push
jnp
sti
es
arpl
or
xchg
test
aas
dec
push
jae
std
add
mov
fsubl
cmp
pusha
test
push
xlat
and
mov
sub
inc
aad
mov
push
sub
push
or
mov
mov
and
ljmp
push
mov
mov
scas
and
enter
mov
fldenv
jg
dec
ret
fbstp
push
xor
push
in
and
xchg
out
ds
cmc
xor
es
arpl
add
push
sbbb
xchg
push
icebp
data16
xchg
inc
adc
mov
loop
mov
mov
pop
daa
mov
sti
ds
push
cwtl
popa
lcall
aad
xchg
xchg
or
jl
xchg
mov
cmp
push
jp
mov
arpl
cld
push
cltd
fsubl
pop
loope
cwtl
cmp
fwait
jmp
push
push
sti
adc
data16
push
inc
jmp
xor
push
in
ljmp
mov
and
sub
sbbb
sbb
sarb
jo
shrb
or
jmp
mov
shrl
pop
push
and
rcrb
mov
fs
pop
jg
clc
sbb
ret
lods
push
jge
inc
fwait
fwait
and
outsl
push
xor
jno
aad
jbe
popa
int3
popa
lods
sub
or
insb
xchg
jecxz
pop
or
cmp
add
pop
cmp
mov
jp
fadds
les
std
mov
test
cmpsl
mulb
pop
inc
push
xchg
jmp
push
and
lock
push
outsl
xlat
test
add
add
arpl
pop
dec
or
mov
outsl
out
xor
mov
outsl
mov
aas
cmp
fldcw
sbb
ljmp
push
xchg
cmp
insb
cmp
and
sub
jmp
or
rol
xor
mov
ret
and
mull
cmpsb
inc
popf
test
push
pop
cmp
sub
push
sub
push
sbb
xchg
sub
pop
push
stc
ret
in
in
fcmovb
aam
jbe
aad
andb
mov
cmp
int3
sub
int
arpl
mov
dec
dec
xor
dec
inc
adc
add
mov
mov
xor
pushl
test
mov
pusha
std
lds
mov
mov
jae
cmc
push
insb
push
jg
hlt
lock
adc
ret
scas
lock
sbb
inc
loop
mov
das
sub
push
outsb
adc
pop
mov
mov
int
cltd
mov
mov
notl
push
hlt
ret
add
std
push
mov
mov
mov
pop
popf
std
cs
mov
xchg
ss
sbb
mov
dec
lret
divl
cld
xor
and
mov
mov
inc
ficompl
jae
push
xchg
jg
mov
pusha
pusha
pop
test
sbb
push
scas
popf
ret
sub
cli
or
xorl
fsubl
jo
test
jecxz
or
push
outsl
scas
xchg
xchg
cmpl
data16
mov
cld
imul
movsb
mov
inc
fsts
mov
es
lret
aas
push
les
mov
loopne
inc
shl
js
out
es
or
test
xchg
jae
jb
and
jle
pusha
jl
jae
or
lcall
sahf
xlat
xchg
std
mov
addr16
xor
insl
xor
jge
shlb
and
aas
sbb
pop
and
pop
movsb
loope
mov
jecxz
mov
adc
pop
inc
rolb
inc
mov
dec
pop
lahf
cli
add
dec
subl
or
and
lds
mov
hlt
bnd
les
adc
movsb
clc
in
stc
mov
or
mov
daa
inc
xchg
mov
xchg
ret
aam
loope
or
jge
aad
jb
ljmp
ja
mov
cmp
xor
leave
jecxz
jmp
and
leave
cmpsl
stos
test
ret
imul
mov
data16
out
movl
js
xor
pop
xchg
inc
rolb
jl
nop
jge
stos
out
mov
int3
jnp
aaa
cmp
int3
pop
cwtl
jmp
pushf
add
xchg
in
xchg
sti
xor
fcompl
pushl
dec
pop
and
mov
mov
cmpsl
out
push
mov
mov
push
or
idiv
pop
nop
int3
outsl
add
sbbb
clc
mov
inc
xchg
pop
out
stos
in
in
add
and
pusha
pop
xlat
jecxz
mov
sbb
lcall
insb
xor
int3
loop
loope
rolb
xchg
adc
call
mov
out
es
mov
inc
mov
shll
pop
movsb
adc
sub
mov
lock
mov
sbb
into
mov
xchg
pop
fstpt
lea
push
pop
shlb
in
ficoml
inc
push
stos
or
pop
outsl
out
aad
jl
test
in
jo
dec
mov
cmp
std
adc
mov
aam
cmp
fcomps
mov
nopl
adc
cld
fistl
mov
sahf
or
cmp
cmp
xlat
mov
xchg
push
xchg
jp
push
inc
outsl
push
pop
inc
scas
mov
xchg
dec
dec
or
push
jle
mov
mov
xor
outsb
inc
dec
cmp
push
push
jecxz
decl
adc
fistpl
aas
add
pop
vmaxss
in
mov
xchg
mov
cwtl
jb
sarb
scas
dec
leave
mov
push
mov
and
pop
xchg
push
jno
ficompl
jecxz
stc
jo
scas
push
ja
movaps
fisubrs
and
imull
mov
jg
or
cs
fldt
ss
ret
adc
mov
adc
mov
and
inc
sub
mov
xor
jmp
and
push
fs
inc
dec
fdivs
xchg
inc
out
lock
jo
mov
sub
icebp
fsts
dec
ljmp
call
inc
out
sub
jb
sub
adc
mov
pop
movsb
jno
in
bound
pop
cmp
inc
aas
mov
notb
outsb
outsb
pop
pop
mov
adc
out
push
xor
mov
in
enter
and
in
or
hlt
xchg
pushf
stos
push
xchg
xchg
lcall
inc
cmpsl
xchg
pop
mov
sbb
enter
push
lret
call
or
jmp
repz
sub
inc
imul
pop
push
lahf
lcall
jne
call
scas
fisttpll
pushf
js
mov
cmp
cmp
rcr
int3
and
test
push
mov
test
cmpb
lcall
ds
inc
pusha
lods
jnp
fbstp
loopne
cs
xchg
mov
sbb
ljmp
jecxz
inc
jle
mov
xchg
pusha
icebp
sahf
or
sub
cmp
sub
mov
jnp
push
dec
or
mov
ljmp
insb
cmp
sub
jae
mov
jge
sub
arpl
std
sbb
icebp
mov
and
out
outsb
pop
mov
jecxz
outsl
stos
xchg
pop
aaa
icebp
clc
sub
rcl
out
test
ja
ja
movsb
int
sahf
inc
testl
jg
popf
xchg
mov
cmp
mov
sbb
mov
add
test
pop
addr16
shrb
insb
xor
movsb
jae
addr16
das
inc
scas
sbb
jmp
fldcw
mov
mov
mov
out
dec
movsb
stc
dec
sub
xchg
xor
sub
and
cmp
add
adcb
fwait
ss
sub
in
jle
gs
lret
dec
push
fldt
xor
inc
sub
jnp
inc
dec
ret
imul
iret
mov
xchg
dec
xchg
out
aaa
icebp
mov
lea
gs
repnz
mov
shlb
jl
iret
jo
cmpsl
cmpsb
lret
sbbl
lahf
fsubs
cmpsl
xchg
arpl
leave
mov
and
js
adc
cs
sbb
and
rclb
outsb
out
add
lret
iret
fidivl
mov
outsb
lock
jmp
xchg
fs
daa
mov
inc
daa
pop
nop
adc
in
adc
jecxz
lods
repnz
ret
int
pop
or
enter
pop
mov
sahf
pop
fistpll
cmpl
mov
insb
dec
in
imul
sub
int
pusha
mov
lret
jae
fmul
push
xor
fisubl
rcrl
mov
cwtl
shll
mov
add
adc
add
mov
xor
std
inc
add
mov
mov
scas
and
aaa
sbb
out
stc
sub
data16
add
mov
into
push
pop
pop
cmpsb
les
pop
adc
pop
ret
adc
sbbb
nop
dec
shrl
push
div
sub
icebp
or
sub
imul
pop
adc
imul
push
dec
js
and
mov
scas
push
pop
and
imul
lods
xchg
adc
rclb
movzwl
cmp
adc
inc
cli
mov
mov
sbb
xor
sarl
or
in
xor
xchg
pop
or
cmp
lret
jbe
inc
pop
scas
push
sbb
pop
roll
les
cmp
cmp
or
cmp
movsb
sub
sahf
ficomps
inc
or
lret
push
inc
xchg
lcall
push
ja
jns
xor
pop
and
sahf
test
jge
repnz
jmp
pop
mov
sub
repz
mov
sub
aaa
pushf
fnstsw
xlat
mov
andb
paddusw
jmp
js
mov
movsb
stc
jb
mov
sub
jp
movsb
dec
pop
sub
xchg
arpl
xor
inc
jae
pop
iret
jno
push
loopne
xchg
in
pop
jns
xchg
mov
lea
lahf
mov
xor
and
aas
mov
lcall
and
cmp
pop
or
add
push
sub
ja
rcr
sahf
mov
or
jns
ret
xchg
add
aad
pop
jae
or
push
ss
lret
pop
mov
stos
jbe
in
fwait
inc
fisubs
jbe
call
push
adc
xor
jge
push
lods
mov
adc
dec
push
push
iret
in
notb
int
xchg
dec
sarl
dec
pop
aas
add
inc
or
mov
jne
jne
filds
cmp
push
cmpsb
mov
jle
jg
push
ret
pushf
bound
aaa
sub
insl
pop
es
push
sbb
xchg
and
mov
mov
xor
pop
fwait
inc
xchg
mov
mov
fadd
data16
xchg
repnz
jp
int3
jnp
shrl
sub
out
dec
pushf
sbb
fnstsw
pushf
add
lahf
cwtl
mov
cmp
shll
insb
pop
cwtl
add
mov
sbb
sbb
xor
mov
inc
jecxz
mov
push
xchg
ds
cmc
sar
int3
add
and
fildll
mov
movsl
popf
adc
mov
sub
addl
mov
xchg
lods
pop
in
test
les
cmp
xor
cld
sar
mov
inc
cltd
aaa
fmuls
or
lcall
dec
test
mov
fwait
cld
adc
pushf
xchg
xchg
cwtl
out
mov
dec
and
push
arpl
fidivs
das
shll
ss
inc
add
out
ds
add
aad
lret
icebp
cmp
gs
jnp
sti
shlb
insb
push
push
rorb
rorl
mov
addr16
mov
sarl
jnp
rolb
call
leave
fsubs
out
aam
inc
in
push
push
rolb
shlb
test
inc
test
loope
inc
stc
cwtl
hlt
mov
pop
lock
cmp
xor
repz
cwtl
mov
int
jno
popf
cmpb
pop
testb
fiadds
jge
cmpsl
dec
lret
or
mov
inc
in
or
add
je
mov
mov
daa
loopne
and
insb
das
cld
xchg
inc
mov
xchg
mov
shl
mov
and
mov
mov
in
pushl
xchg
iret
mov
cmp
lahf
lret
sarb
jns
xor
pop
adc
and
xor
mov
gs
push
add
cmp
out
cmpsl
sbb
test
pop
mov
push
cs
inc
std
adc
movsb
imul
xor
pushl
mov
outsl
bnd
xor
pushf
push
push
cmc
int
push
inc
lods
jb
std
or
cmpsl
addr16
mov
int3
jmp
push
pop
dec
pop
pop
fs
fidivrl
cwtl
pop
dec
mov
xchg
mov
movsb
push
lahf
jns
xor
cmp
jecxz
lcall
add
cmpl
sbb
out
jge
divb
dec
jmp
mov
xchg
push
mov
push
xor
lret
repz
push
xor
fcoml
in
cli
mov
cmp
lock
lock
push
xchg
jno
dec
je
loope
and
or
rolb
outsl
popf
jl
xor
dec
sbb
cld
add
mov
cmp
push
rolb
out
stc
insb
push
shrl
sbb
mov
xchg
mov
xor
mov
xor
out
xor
sti
test
in
mov
push
stos
rcrb
hlt
xor
mov
cltd
push
addr16
and
rcrb
insb
cmpsl
jp
fistpll
arpl
outsb
sub
inc
sbb
loop
cmp
int3
jne
mov
inc
adc
adc
hlt
mov
sbb
outsb
mov
fisubs
imul
shll
cwtl
inc
add
adc
and
xchg
aam
loop
les
ds
addr16
mov
mov
js
adc
jno
lret
ds
jne
jb
ds
cmpsl
mov
add
xchg
inc
leave
lret
outsl
inc
aas
enter
jnp
in
push
mov
mov
or
push
jecxz
lods
mov
pop
cmp
inc
mov
in
cli
inc
popf
push
cmpsl
das
cmpsb
push
push
pop
lock
dec
test
pop
aaa
imul
mov
jnp
loopne
movsl
jp
sub
inc
cwtl
mov
rclb
pop
sarb
and
xor
daa
aam
and
lret
cmp
inc
mov
in
imul
mov
push
je
mov
sbb
mov
mov
mov
xor
push
jns
jecxz
jp
jge
subb
xor
cmp
sub
mov
gs
dec
imul
lret
ficomps
add
icebp
mov
add
mov
jmp
cmp
inc
movsb
xchg
out
add
cmp
fcmovbe
loopne
or
insb
pop
loopne
mov
int
mov
pop
xchg
orb
bound
and
push
leave
add
add
jecxz
cmp
decl
xrelease
adc
test
xchg
cmpsb
mov
rcrl
cmp
push
int3
inc
dec
es
je
lock
xorb
and
lods
jl
inc
lcall
pop
or
fwait
jne
int
call
xlat
xchg
in
jmp
adc
mov
nop
or
mov
lock
in
lea
mov
lds
neg
add
xor
fdivs
test
jns
adc
jo
mov
and
fucomp
or
adc
add
mov
adc
rcrb
add
mov
xchg
shrl
cmpb
clc
sub
mov
sub
mov
sar
out
or
sub
sbb
sub
jnp
sbb
and
aad
outsl
xchg
andb
fstp
mov
std
or
and
xor
push
loopne
adc
enter
cmp
fisttps
dec
push
je
mov
jns
cmpsb
repnz
xchg
cmp
sahf
add
sbb
add
mov
xor
inc
mov
lcall
cli
shlb
mov
adc
cwtl
lcall
mov
pop
pop
inc
inc
js
inc
lods
or
jle
std
sbb
cmp
sub
sub
jge
sbb
add
sahf
or
and
add
clc
repnz
out
test
hlt
pop
stos
mov
cld
sahf
cmp
repz
negb
insl
add
test
pop
jno
clc
scas
cwtl
mov
push
xlat
add
dec
jp
adcb
xor
jnp
jne
sti
lahf
cmp
jb
jnp
fisttpll
push
scas
pop
dec
mov
pop
push
imul
dec
sbb
inc
push
hlt
and
pop
mov
pop
mov
int3
jo
dec
cmp
data16
jl
cmp
pushf
jno
sub
push
pusha
mov
cmpl
push
mov
mov
clc
cmpsl
test
shrb
sahf
mov
hlt
adc
icebp
or
aas
jb
hlt
mov
aad
mov
or
sub
cmpsb
pop
mov
in
inc
jl
outsl
xor
frstor
inc
sahf
jmp
pop
jmp
dec
stc
andb
fmuls
xlat
lods
and
mov
rsm
sub
rdrand
ret
jmp
xor
sbb
push
ljmp
mov
or
push
jge
pop
test
mov
push
jge
pop
cs
and
cmp
movsb
mov
pop
xorb
arpl
mov
movsl
aad
dec
mov
lds
mov
test
jl
dec
xchg
inc
int3
test
jp
lahf
lahf
mov
shrl
pop
inc
out
enter
or
push
inc
imul
lock
inc
pop
icebp
imul
sub
minps
jecxz
imul
out
lods
adc
fadds
mov
es
push
into
adc
call
push
mov
outsb
add
cwtl
jmp
iret
scas
pop
sub
divb
add
sbb
sub
int
shl
out
aam
outsl
add
aad
lds
mov
and
xchg
cld
xor
sbb
mov
sbb
or
std
mov
push
xchg
add
inc
imul
lret
and
jge
jmp
movsl
mov
sbb
xchg
aas
jo
ret
jnp
repnz
pop
stos
hlt
into
jns
or
mov
mov
movsl
mov
in
push
fcmove
jmp
mov
fwait
mov
jmp
jno
loopne
icebp
mull
movsl
ljmp
std
xor
inc
jmp
std
roll
inc
rorb
lods
aam
insl
pop
xor
cmc
stc
out
sub
xor
lock
jecxz
or
add
mov
shl
es
dec
icebp
das
lret
add
jno
dec
cmc
jnp
push
and
or
imul
pop
leave
cltd
iret
mov
mov
push
cwtl
jmp
fdivr
sbb
sbb
jg
rcrb
in
test
out
sub
jno
lods
adc
or
xor
inc
sub
aas
out
cmc
cltd
loope
andl
popa
inc
cmpsb
mov
iret
fildll
in
lea
push
or
fsubrl
add
and
cmp
add
xchg
dec
ja
nop
unpckhps
push
cmp
dec
push
push
mov
in
ja
or
rcrb
sbb
loopne
lock
xor
add
and
xlat
hlt
test
pop
push
movsl
test
push
add
cmc
js
and
shll
dec
mov
out
or
fists
or
and
test
xlat
mov
pop
mov
jnp
ss
sahf
fwait
sbb
and
jecxz
rdmsr
addr16
jb
pop
addr16
add
inc
and
sbbb
jmp
xor
in
lahf
push
ret
enter
lcall
sub
jno
fisttpl
or
dec
push
mov
dec
sbb
dec
pushf
xchg
jbe
jae
sti
ret
inc
mov
insl
in
jge
out
pusha
push
loop
imul
fs
xor
insl
dec
lret
push
popa
movsb
pop
push
pop
subb
jbe
repnz
push
mov
retw
lcall
imul
int
sahf
je
mov
or
lcall
arpl
rclb
push
pop
push
mov
jns
or
mov
stc
jecxz
je
shll
leave
jnp
and
jge
into
jle
xor
testl
das
push
in
push
hlt
xchg
pop
mov
pop
in
jae
jnp
decl
mov
xor
loopne
mov
cmp
mov
lods
cmp
andl
jge
cs
jge
push
insb
push
js
jno
jle
dec
mov
fstps
inc
ljmp
sub
xchg
mov
xchg
xor
movb
jne
jle
xchg
inc
mov
and
into
int
jl
gs
jns
lods
jne
sub
fstl
fnstsw
mov
and
imul
popa
enterw
pushf
incl
fstl
mov
ja
inc
ja
dec
lock
xchg
mov
test
in
or
iret
mov
sub
mov
add
addr16
in
xlat
xchg
scas
insl
xorb
ret
mov
sti
scas
in
jge
jno
rep
push
fmuls
sub
adc
jb
xor
sarb
push
add
shl
cmp
comiss
mov
and
dec
insl
jecxz
das
int3
int3
aad
pop
std
lcall
push
insl
cli
clc
or
sbb
fcoms
lock
imul
rolb
adc
lret
out
js
in
pop
xchg
and
stos
insl
adc
xor
ja
popf
mov
lock
cmpsl
inc
push
inc
dec
add
mov
sbb
cmp
out
adc
repnz
icebp
xchg
stos
push
or
mov
js
cli
fiaddl
les
cmp
std
add
fnstsw
cmp
lcall
cld
aam
adc
mov
xorb
mov
daa
pop
add
push
negb
mov
sub
int
lods
cmp
jl
cmp
int3
mov
jbe
ljmp
dec
cmp
sahf
xchg
sbb
or
test
addb
roll
dec
xor
mov
xlat
add
mov
sti
inc
xchg
jb
push
fs
or
lds
xor
cmp
cmp
repnz
insb
fistps
nop
insl
add
cmpsl
sbb
fistpl
enter
movsb
stos
rcl
sbb
mov
lock
int3
outsl
jnp
dec
xlat
aam
mov
push
fmulp
enter
adc
out
test
lahf
push
push
subl
popf
sub
push
mov
and
dec
push
pop
int
scas
jle
inc
fwait
adc
jb
cmp
cmpsb
and
sub
fbstp
inc
and
and
xchg
adc
pop
push
pop
add
sbb
sbb
mov
loope
loop
test
je
pushf
pop
loopne
adc
pop
adc
adc
mov
xchg
xchg
stc
std
mov
scas
add
loop
push
ss
jmp
dec
cmp
icebp
push
inc
dec
push
lock
xchg
call
imul
push
adc
pop
stc
scas
push
lds
jl
mov
mov
mov
mov
pop
mov
xchg
jb
adc
insb
cmp
imul
cmpsl
fcoms
xchg
jle
shlb
mov
pop
fisubs
leave
testb
fwait
or
or
push
jno
adc
mov
cwtl
repnz
mov
or
pop
cli
mov
xchg
mov
jo
sbb
push
enter
add
mov
enter
mov
call
adc
cwtl
rcll
in
loop
in
mov
push
aas
outsl
push
lea
xlat
es
sub
sub
or
and
xchg
out
je
pop
jp
adc
imul
mov
mov
shrl
jae,pn
lret
fiaddl
push
push
shll
cmp
test
movsl
mov
pop
out
mov
xchg
mov
cmpsl
dec
dec
shrl
xlat
or
jge
lahf
add
js
pop
shrb
es
sbb
leave
repz
dec
cmpsl
lret
xor
sbb
shl
lret
outsb
pop
ss
sbb
dec
fldcw
test
ret
inc
adc
sbb
and
out
lcall
jl
xchg
scas
cmp
sub
lods
jns
fistl
cs
add
andb
xor
lods
rorb
jl
cmp
mov
into
in
out
xor
sbb
jle
inc
push
cltd
xchg
inc
test
push
xor
inc
adc
push
test
mov
jb
push
inc
push
stc
cli
addb
cpuid
out
xchg
ds
cmp
or
aaa
js
adc
js
into
cs
fldl2e
int
shrb
icebp
ljmp
dec
mov
mov
rorl
push
inc
sti
jns
nop
and
dec
out
push
in
xor
jae
daa
pop
fsubl
cmp
insl
xchg
inc
aas
xchg
jle
mov
movsl
lahf
movsl
je
xor
fwait
cmp
insb
loope
and
scas
pop
lock
push
jb
xbegin
mov
pop
clc
nop
adc
sub
xchg
sub
test
aam
pop
scas
bound
inc
jbe
jnp
xorb
or
fbstp
pushf
ret
sub
bound
ja
or
mov
movsb
das
out
or
mov
push
test
dec
rolb
test
imul
lea
flds
lret
ss
lahf
and
sbb
add
add
addr16
aad
xchg
and
xor
ljmp
frstor
jg
mov
pop
add
out
pop
fcoml
mov
mov
addl
sub
je
sub
push
or
add
loope
out
test
leave
xor
out
or
sahf
cmp
pop
pop
out
call
inc
inc
or
mov
cmpsb
xchg
jb
flds
jbe
pusha
aas
pop
jno
or
sarl
xchg
aam
rcr
sbb
dec
out
sbb
push
lods
das
movsl
fs
rolb
aas
mov
add
sub
jg
xor
js
ljmp
push
cmc
xchg
iret
jo
repnz
sub
mov
call
popa
add
push
cmp
add
bound
lock
jge
xchg
xlat
mov
push
roll
add
cwtl
xor
scas
negb
out
fldt
mov
test
out
outsl
stos
pop
addl
std
and
mov
int
ja
aad
aad
pop
fmul
add
jns
dec
dec
or
das
xor
lods
xlat
sbb
mov
repz
inc
add
pop
in
leave
sub
jb
out
xor
push
dec
pop
or
popa
push
jge
es
jbe
cli
push
inc
subl
xchg
cmpsb
addr16
out
lcall
mov
es
xor
loop
mov
xchg
mov
pop
sub
shr
sub
cmp
push
pusha
lock
pusha
outsb
cmpsl
aaa
idivl
pop
jb
mov
mov
dec
mov
lock
cmpsl
xchg
cwtl
cmpsl
and
or
shr
cmpsb
dec
inc
xchg
ja
in
inc
mov
aaa
daa
shlb
stos
pop
sbb
cmp
pop
xorl
xor
imul
movl
xchg
test
lds
fsubs
sbb
pop
in
jns
sbb
sbb
sub
xchg
out
mov
sbb
xchg
aad
pop
mov
icebp
mov
ror
in
jnp
xchg
sub
jg
js
inc
push
cmpl
xchg
inc
push
cmp
mov
mov
add
xchg
jae
gs
and
ds
test
mov
jmp
pop
ss
push
cmpsl
inc
out
cmpb
xchg
or
cltd
push
stc
shrb
push
std
lods
loopne
dec
sub
push
repnz
add
jno
sbb
add
adc
psrlw
lods
loopne
scas
sbb
jb
xor
pop
dec
cmpsb
notb
scas
inc
jno
jecxz
push
insb
dec
mov
add
push
cmpsl
adc
repz
loope
cmp
xchg
out
push
int3
push
ret
fstpt
pushf
mov
xor
add
jmp
fidivl
stos
sub
aad
repnz
les
mov
repnz
out
loop
loope
xchg
sbb
fmull
scas
test
pop
fistl
mov
pusha
lcall
jge
jns
xor
push
cltd
sub
fsubs
scas
sub
icebp
pop
sbb
adc
jbe
loope
aad
jno
daa
shl
inc
pusha
and
jge
xor
cmp
jg
lcall
sub
fildll
mov
jle
ret
ss
arpl
or
iret
push
mov
cmpsl
push
out
lods
repz
std
int
xor
or
inc
fstpl
mov
mov
ficomps
pop
rclb
outsb
inc
ss
jno
cli
sbb
enter
xchg
xchg
imull
adc
andb
inc
or
mov
imul
outsb
pop
cli
sub
int
sahf
push
mov
mov
xor
adc
inc
fwait
pop
ds
ret
pop
and
fnstsw
insl
movsb
jg
add
mov
cmp
dec
addr16
out
negb
popa
sbb
je
loopne
mov
adc
imull
stc
add
in
movntps
pop
outsl
push
adc
rcr
sbb
push
sbb
clc
jge
icebp
mov
inc
movsb
pusha
or
jge
mov
mov
push
cltd
add
lods
xchg
hlt
adc
xor
int
adcl
ljmp
hlt
lret
loop
int
xor
mov
test
cmp
cmpsb
icebp
rorl
dec
cmp
jmp
stos
cli
popa
jb
inc
xchg
aaa
lds
iret
or
push
mov
sti
mov
push
sbb
inc
xor
aaa
sub
mov
fmull
dec
cmp
outsb
sub
fstl
cmpsb
or
popf
or
sub
stos
push
or
xor
cmp
test
adc
mov
in
enter
dec
push
sub
testb
add
lcall
shl
jle
sti
xor
addl
push
jns
adc
jb
pop
xor
dec
adc
mov
enter
pushf
pop
fmulp
cli
rcrl
movb
test
sbb
insl
mov
push
in
lret
pushf
or
imul
mov
jnp
jge
pop
sub
mov
adcb
cmp
dec
pushf
inc
xor
dec
push
mov
add
xchg
clc
mov
mov
mov
data16
fstpl
jge
lods
dec
pop
inc
test
enter
in
and
ljmp
fildl
stos
mov
test
jne
and
in
mov
lret
insb
dec
pop
pop
and
xor
xchg
scas
pop
ja
cmpl
lea
jne
xor
add
jge,pt
lahf
pop
adc
in
pop
aas
pop
or
and
sahf
jp
lcall
lods
cmpsl
jnp
popf
xchg
orb
push
add
aas
jmp
push
dec
sub
je
rcl
or
mov
arpl
das
jg
dec
scas
mov
iret
cmp
imul
dec
dec
daa
ret
jbe
add
mov
sub
fs
pop
leave
cwtl
popf
ljmp
gs
cmp
pushf
fisttpl
test
push
je
out
fstps
sbbb
push
sbb
popa
mov
jno
cs
mov
jb
ret
sub
mov
jbe
push
mov
adc
into
jae
pop
jo
sbb
sbb
push
ret
jne
dec
lahf
in
adc
arpl
out
pop
sub
cli
dec
hlt
cmp
mov
mov
mov
inc
and
fwait
xchg
pop
movsb
nop
pop
mov
or
cmp
in
dec
add
call
sub
adc
mov
xchg
mov
ljmp
movsb
mov
scas
jns
push
insb
mov
add
dec
pop
dec
xchg
fcomp
pop
push
jo
outsl
jmp
fdivl
cs
jecxz
pusha
inc
ret
pop
sti
sbb
or
shlb
shlb
loopne
jecxz
pushf
pop
cmpsb
pusha
pop
inc
repz
mov
addr16
pop
test
sti
push
fld1
out
mov
pop
adc
adc
jl
dec
mov
clc
aaa
dec
cmp
ja
jp
xchg
mov
repnz
sti
jmp
ja
mov
outsl
or
pop
loope
gs
je
push
pop
cmp
orb
or
inc
lods
mov
js
inc
push
ficoms
cmpsb
xchg
in
sahf
push
popf
test
pop
dec
push
or
lcall
add
lcall
dec
cmp
and
repz
hlt
seto
adc
subb
xchg
daa
shrb
pop
cmpsb
pushf
cmp
push
shll
in
adc
das
pop
jmp
lock
cld
pcmpeqb
xchg
fldenv
pop
xchg
andb
sbb
inc
repnz
in
insl
dec
mov
out
enter
stos
aaa
mov
mov
fs
shlb
dec
je
jb
sub
mov
mov
cli
sub
pop
cmp
jge
stos
add
add
es
mov
mov
pop
js
pop
movsb
orl
sbb
js
inc
sbb
mov
sub
adc
outsl
jo
sbb
movsl
jnp
cmpsl
push
leave
in
sub
je
adc
cmp
inc
jg
mov
rorb
repz
fldcw
and
out
dec
dec
daa
movsb
leave
imul
cmp
popa
daa
fstpl
iret
jmp
push
xor
jmp
inc
jns
add
fwait
jne
mov
xor
sub
lods
adc
pop
mov
mov
mov
dec
xor
push
and
pop
add
negl
sbb
ds
out
push
jg
adc
jg
jno
lock
or
daa
dec
or
cltd
repnz
lahf
cmp
test
rcr
push
aaa
pop
pop
jge
fisttpl
fwait
xor
mov
jmp
enter
push
xchg
outsl
cmp
fdivl
xchg
push
rcl
or
fmuls
xchg
sbb
stos
sub
stos
cwtl
jns
xlat
mov
test
xor
inc
mov
mov
mov
rcrb
std
mov
xchg
push
movsl
sbb
mov
int
shl
pop
in
sti
add
in
jmp
jns
pop
pop
inc
jmp
rorl
mov
arpl
loopne
ret
sti
repz
out
jae
stos
jb
cwtl
mov
and
push
sbb
push
cmp
imul
dec
dec
jecxz
mov
mov
adcb
jl
add
sbb
test
stos
pop
pop
inc
out
cltd
push
popa
sub
fisttpl
daa
jge
jae,pn
lcall
xchg
pusha
push
add
add
add
or
mov
inc
adc
cwtl
bound
lret
stos
or
ret
ret
dec
cs
data16
fistl
out
mov
inc
push
into
movsl
sbb
push
addr16
sbb
cmp
dec
add
int
mov
push
push
xchg
xchg
dec
xchg
xchg
out
aas
mov
ljmp
push
inc
mov
mov
or
and
add
push
inc
je
hlt
ret
push
loop,pn
pop
fcmovnbe
inc
jne
dec
in
out
sub
scas
mov
and
xchg
add
add
lock
popa
lods
repnz
and
rclb
ss
test
xchg
jl
es
pushf
loope
xor
fld
outsb
lret
int
test
pop
push
sbb
jge
push
fidivrs
cwtl
mov
icebp
lret
push
jl
arpl
sbb
or
shlb
icebp
imul
sbb
test
mov
xchg
add
sbb
lret
sbb
lock
cs
imul
dec
stos
daa
push
mov
sub
stos
stc
cmp
and
addb
cmpsb
out
jne
jb
xchg
xchg
xor
clc
arpl
inc
jl
iret
stos
inc
fimull
ret
outsl
or
loope
jne
mov
lret
nop
repnz
push
sbb
inc
fsubs
lcall
xchg
mov
mov
rcrb
std
mov
pop
lea
out
xor
imul
je
pop
add
stos
frstor
popf
out
lods
mov
into
leave
mov
mov
or
pop
jno
add
loope
pop
push
ljmp
ljmp
mov
jo
mov
or
cmp
test
out
add
add
andl
dec
cmp
xchg
aaa
pop
mov
mov
or
shll
stc
test
ret
sbb
nop
mulb
cmp
inc
jne
push
jle
movsb
jae
ds
mov
adc
add
jmp
shlb
rcrl
and
popf
hlt
xor
testb
jmp
lea
out
jbe
xchg
cld
into
loope
or
or
mov
aam
cmpb
mov
call
sti
test
out
push
enter
cmc
fdivrl
and
bound
sbb
bswap
push
call
mov
cmp
pcmpgtd
sbb
mov
dec
imul
cli
test
aad
stos
imul
je
ljmp
push
fcoms
pop
ror
cwtl
fidivs
into
jo
cmp
or
loopne
sub
stos
pop
cld
and
cmp
das
adc
test
and
stc
adc
imul
stos
stos
sub
cmp
into
pcmpgtb
nop
jnp
cwtl
cmc
push
filds
push
pop
std
not
in
inc
movsb
pop
adc
mov
xchg
sbb
dec
scas
push
outsb
gs
xchg
sub
pop
shl
loop
or
pushf
push
call
push
dec
in
jb
sub
mov
aam
and
mov
push
in
add
test
ret
jp
shrb
int
aad
xchg
xor
push
inc
rcrb
fdiv
jl
jbe
push
mov
divb
and
and
outsb
iret
lds
mov
mov
mov
dec
xchg
mov
push
roll
jnp
sub
aas
pop
and
clc
xchg
lods
outsb
in
xor
adc
repnz
mov
test
mov
addr16
icebp
xor
ljmp
call
mov
push
adc
daa
xchg
sbb
arpl
lods
jne
lea
adc
sti
push
enter
idiv
shll
add
scas
in
sub
and
dec
dec
push
ror
enter
lahf
xchg
aad
test
xchg
mov
pop
add
mulb
out
loopne
mov
cmp
push
sub
ss
pop
ret
mov
fbld
arpl
jecxz
addr16
inc
sub
jo
cmp
sub
xchg
mov
dec
cmp
sti
push
lods
jmp
test
stos
ja
cld
cmpsb
mov
out
pop
gs
inc
sbb
fidivrl
jmp
pop
call
push
jnp
mov
or
aad
push
out
inc
cltd
dec
mov
notb
cmp
loop
push
fwait
dec
pop
mov
sub
inc
js
jo
stc
mov
mov
shr
insb
fwait
inc
loop
mov
shr
sbb
in
stos
mov
rol
jle
stos
cli
fdivr
stos
mov
leave
mov
and
lock
ss
jle
roll
movsb
push
push
call
sbb
outsb
insl
sub
lcall
repz
nop
inc
adc
xlat
inc
xor
in
pop
fcoms
jmp
sarl
pop
ljmp
mov
dec
into
and
and
sbb
cli
pop
sub
xchg
fcoml
sub
adc
xchg
inc
xchg
jb
cmp
jmp
dec
sbbb
push
xchg
je
iret
dec
add
add
int3
outsl
sub
dec
adc
fldt
ret
and
roll
inc
push
mul
lds
push
pop
leave
xchg
push
ja
sub
adcb
or
fs
cmp
imul
daa
pop
or
inc
data16
mov
pop
popf
bound
imul
ret
mov
into
scas
ret
jae
pop
push
fstl
push
push
outsl
jl
or
test
es
lds
insl
sbb
scas
lds
out
mov
std
scas
xchg
push
das
es
cmp
jb
jnp
jo
xor
aad
cmp
leave
xchg
aaa
mov
lock
pop
mov
jo
cmpsb
xor
cmp
addb
sub
test
xchg
jne
mov
enter
xlat
cmp
push
shl
mov
popf
fs
and
jmp
xchg
mov
push
adc
inc
testb
scas
jae
mov
mov
xor
leave
adc
mov
mov
pop
movsb
xchg
cmpsl
add
jmp
dec
cwtl
daa
cltd
fisttpll
lret
mov
mov
shrl
jl,pt
test
je
cmp
mov
xchg
pusha
cmp
jle
movsb
mov
sbb
dec
mov
sti
mov
bound
in
cmp
jb
daa
aas
push
jmp
aaa
mov
mov
jbe
fstps
movsb
inc
imul
adc
stc
jno
and
andb
mov
rcl
scas
mov
mov
xchg
mov
clc
aad
pop
int3
repnz
mov
or
inc
xchg
pop
test
mov
or
lcall
mov
adc
icebp
jmp
mov
iret
ljmp
mov
xor
cld
xor
push
in
rcll
xchg
aas
push
xchg
outsl
xor
sti
push
and
fcoml
int3
movsl
push
repnz
cmp
or
or
jae
cmp
mov
pop
sbb
pop
xor
mov
lods
inc
ljmp
stos
sub
nop
fs
xlat
or
fadd
cld
xchg
std
sti
insl
cltd
and
jmp
dec
test
jp
pop
dec
and
pop
xchg
lock
mov
mov
xchg
aas
inc
icebp
sbb
pop
insb
push
mov
add
repnz
mov
mov
dec
stos
xor
or
push
pushf
out
data16
movsl
sub
scas
fstl
inc
and
mov
sbb
call
bound
jl
pop
ret
sti
dec
adcl
pop
stc
fdivrl
cmp
test
mov
jae
rolb
repnz
xor
out
cli
dec
jae
inc
loope
loop
jmp
push
in
mov
mov
lcall
mov
xchg
dec
sub
inc
xchg
adcl
mov
cmp
mov
pop
mov
outsb
sub
cmp
xchg
sub
xlat
xchg
imul
mov
mov
dec
mov
pop
dec
mov
lret
ficomps
inc
ret
inc
dec
into
lea
push
mov
clc
shrl
sbb
movsb
nop
xchg
mov
arpl
sub
push
fcmove
jecxz
mov
arpl
cwtl
les
xchg
std
test
push
jmp
mov
jge
sbb
in
in
call
jb
test
ret
clc
test
cmp
push
out
nop
inc
jg
leave
mov
and
addl
bound
jbe
outsl
cmp
cmp
mov
aad
push
ja
pushl
dec
das
nop
pop
sbb
scas
pop
mov
mov
dec
cmp
movsl
fisttpl
jmp
xchg
cmp
lahf
ja
js
adc
jle
lods
push
outsb
fiadds
and
aaa
stos
jne
xchg
pop
stos
cli
sbb
inc
leave
inc
pop
xor
sub
adc
dec
inc
jge
push
dec
jae
mov
mov
icebp
mov
out
jmp
xchg
cmpsb
icebp
sub
xchg
int
pusha
sub
rorl
lock
movsl
xchg
pop
inc
shl
mov
icebp
outsl
jg
mov
adc
shl
xchg
xor
negb
jg
insl
cmp
aaa
lods
xchg
cmp
sub
ficoml
ljmp
pushf
faddl
and
sti
rolb
inc
add
int
cs
daa
in
push
out
shll
lods
mov
mov
jge
push
sbb
sbb
into
adc
cmp
test
gs
fimuls
mov
xchg
out
int
xor
push
in
pushf
in
cwtl
roll
pop
fisubl
dec
stc
in
insl
pop
xor
add
mov
lods
cmp
loopne
movsl
and
in
jo
mov
sub
mov
sbb
dec
mov
pop
cwtl
roll
and
pop
adc
into
test
adc
push
cmp
push
xchg
mov
ret
push
mov
mov
lods
xchg
mov
decl
push
mov
add
dec
adc
jns
pushf
xadd
dec
daa
mov
sub
push
pop
popf
dec
inc
pop
add
ret
imul
dec
imul
cmp
cwtl
int3
mov
inc
in
jp
hlt
popa
cltd
aam
push
xor
push
xchg
fists
aad
mov
jmp
outsl
and
cs
sti
dec
xchg
lds
and
and
sbbl
lea
loope
test
call
adc
fcmovnbe
imul
je
faddp
mov
push
fchs
test
mov
inc
insl
pop
sbb
adc
inc
stc
int
mov
jo
pop
mov
inc
mov
inc
add
lea
xor
jl
mov
xor
push
cmc
std
ret
dec
insb
cltd
sar
adcl
pop
repnz
lock
inc
lcall
jg
pop
and
or
outsb
push
sub
outsl
ljmp
xor
pop
shl
mov
test
mov
push
pop
or
orb
pop
fisubs
mov
push
shll
push
xchg
sbb
movsl
js
or
xchg
jb
xor
adc
test
xchg
sbb
pop
ja
shll
outsl
mov
cmp
pop
pop
repnz
jne
cmp
int
jb
mov
mov
jmp
or
push
mov
ja
inc
ds
repz
add
pop
sti
popa
test
jecxz
and
sti
fmul
mov
dec
and
nop
pop
lahf
out
add
ja
xorb
in
xor
arpl
insb
lahf
test
mov
mov
jns
mov
popf
add
std
adc
lret
sub
xchg
orb
scas
out
adc
add
and
push
or
notb
lock
pop
adc
jl
push
xchg
popf
popf
out
andl
scas
aas
cmpsl
fs
push
out
jp
xchg
pop
in
jne
mov
mov
push
mov
into
mov
pop
add
insb
sub
andl
mov
shlb
sub
push
das
xchg
iret
sahf
push
div
out
ror
mov
js
into
popf
mov
xchg
mov
jno
outsl
fwait
inc
push
push
dec
mov
sbb
add
shll
add
xchg
repz
outsb
outsb
push
aad
jmp
pop
lret
sbb
adc
test
dec
iret
dec
push
ret
hlt
mov
test
sbb
ja
xor
lret
mov
add
xor
jmp
stos
mov
jne
mov
push
inc
mov
popa
call
mov
xchg
and
pusha
pushf
movsb
out
mov
cmp
ficoml
pop
and
add
dec
jmp
mov
out
mov
and
jns
sbb
inc
mov
pushl
xor
and
lock
adc
inc
daa
lahf
push
outsb
cmp
and
out
xor
lock
mov
mov
pusha
pushf
sbb
xchg
jl
test
sub
cs
inc
fistl
inc
cmc
pop
sbb
insl
cltd
cmpsl
icebp
adc
arpl
pop
sahf
je
lea
arpl
xor
out
add
sub
cmpsl
loop
mov
sbb
or
dec
sub
lods
adc
aad
imul
mov
jl
jbe
mov
repnz
cmp
aas
xor
std
pop
add
mov
or
sbb
iret
out
stos
adc
cmp
rcr
fildl
cmpsl
mov
xor
sbb
pop
sub
lods
mov
ror
in
sahf
fimuls
imul
and
popf
outsl
xchg
xchg
cmp
lods
xchg
insb
dec
pop
xor
repz
es
or
push
pop
mov
inc
gs
cmovl
cltd
dec
mov
test
add
adc
fwait
push
cmc
rcrb
in
iret
mov
or
mov
cld
in
or
inc
xchg
aaa
popa
enter
inc
jl
pop
push
cwtl
es
fdivrl
dec
push
adc
and
repnz
lcall
lods
and
rorl
es
les
cwtl
push
orl
dec
xchg
cld
iret
repz
leave
dec
outsl
sti
popa
sbb
mov
test
lock
inc
data16
xor
or
in
mov
mov
pop
push
or
shll
mov
cld
mov
pop
mov
bound
sbb
rolb
add
int3
push
push
or
popa
inc
jnp
cmpsb
lods
ret
orb
repz
dec
push
subl
dec
sarl
shrl
inc
ds
rorb
mov
or
jbe
std
mov
inc
sub
dec
xor
xchg
cmp
pop
aad
aaa
std
js
or
pop
mov
fnsave
cmp
bound
jne
pop
inc
adc
inc
fistpl
stos
add
inc
sub
inc
sbb
xor
movsb
sbb
mov
icebp
stos
into
jg
test
lahf
cld
dec
mulb
icebp
mov
out
inc
cmp
cli
das
ljmp
push
pop
jo
movsl
adc
cwtl
pop
test
pop
jbe
hlt
xchg
scas
and
stos
xchg
pop
or
jecxz
pop
test
scas
mov
or
mov
adc
mov
push
out
sub
and
icebp
lahf
fsubr
push
adcl
fnstenv
add
imul
pop
dec
sub
sbb
pop
push
cmp
sbb
sbb
push
and
mov
lods
sub
xlat
push
and
inc
mov
loop
imul
lret
add
mov
std
aaa
add
cmp
jo
jnp
sbb
arpl
pop
mov
pop
cmpsl
fildll
mov
and
xchg
xor
xchg
loop
pop
dec
inc
and
xor
push
lds
out
and
jnp
xchg
rcl
push
std
dec
icebp
dec
ret
orb
fwait
push
or
sti
push
cmp
or
imul
insl
push
xchg
lock
adc
lea
std
push
fisubrs
addr16
cwtl
test
in
lods
daa
xor
sbb
ja
arpl
in
dec
pop
jp
enter
incb
mov
xchg
mov
pop
or
std
int
cmc
xchg
scas
inc
cltd
and
imul
mov
xchg
pop
xchg
enter
mov
push
dec
test
sub
cld
adc
faddp
cmp
jne
repz
inc
jle
push
cli
mov
inc
lods
loopne
pop
mov
add
jge
cmp
mov
leave
mov
out
push
cmp
jl
loopne
scas
mov
push
out
jnp
repz
lcall
sbb
jbe
pop
or
or
mov
mov
sbb
dec
jb
dec
push
cltd
jnp
inc
pop
and
insl
lock
outsb
mov
dec
and
xchg
or
js
mov
imul
inc
inc
ror
inc
dec
adc
rcl
add
xor
mov
imul
out
sub
aas
sti
in
scas
loopne
in
fimull
cmpsb
cli
pop
ss
shlb
mov
pop
push
int3
hlt
mov
jp
out
fwait
test
mov
sub
sahf
imul
test
cwtl
jbe
les
test
jbe
shll
or
add
jno
jg
pop
dec
into
mov
in
gs
jmp
pop
mov
inc
ret
lret
fwait
jno
lret
and
sarl
movsb
add
add
fst
incl
fnstenv
sbb
adc
sbb
mov
clc
popf
testl
and
pop
add
sbb
insl
jb
icebp
aas
xchg
push
sub
mov
lcall
loope
adc
sub
hlt
vmread
adc
xorl
xor
pop
pusha
adc
xchg
or
loop
mov
jnp
das
adc
aas
xchg
mov
mov
daa
xchg
stos
add
fwait
test
iret
clc
das
push
out
mov
sub
stos
mov
sti
adc
mov
mov
add
sbbb
cmpsb
lcall
lods
push
sub
jl
sub
mov
mov
or
shrb
lret
lcall
xlat
or
sub
push
das
adcb
sahf
jne
es
mov
pop
mov
dec
int3
jp
add
jo
mov
dec
inc
pop
pop
cmpsb
mov
jns
sbb
xor
mov
push
bound
pop
adc
cmp
mov
xor
mov
dec
xor
fstpl
mov
lods
or
call
pop
pop
push
jg
push
push
add
fcompl
mov
popf
or
pop
add
pushw
movsb
pop
sub
aad
test
and
sbb
cmc
adcb
lahf
mov
cmp
addr16
or
gs
ss
push
in
paddusb
push
and
lock
add
inc
mov
popa
mov
popl
mov
test
jbe
sub
and
pushf
or
adc
rcll
loopne
add
jl
addb
jae
in
push
pop
rcll
jno
movsl
stc
jmp
xor
insb
mov
jns
pop
push
out
xor
and
sbb
mov
in
jo
aaa
jl
mov
fsubl
and
movsb
fmul
and
xor
jl
sub
lret
sbb
xlat
mov
dec
jb
mov
ljmp
xchg
adc
in
jno
sti
jp
jle
add
and
in
xlat
call
pop
fsubrs
fistpll
push
data16
xor
mov
jle
insl
push
add
mov
es
cmova
add
psrlw
push
mov
jecxz
xchg
inc
nop
imul
xor
sahf
orb
in
mov
adc
imul
mov
add
xor
mov
mov
js
xor
fadds
mov
sub
xchg
loopew
mov
push
inc
push
or
lret
sub
xor
sub
out
repz
mov
rcrl
ret
and
jno
movsb
in
dec
cmp
xchg
xchg
mov
add
jle
adc
gs
push
rorl
xchg
jo
dec
mov
mov
jnp
sbb
call
pop
call
sbb
sti
bound
xchg
jecxz
nop
cmovl
mov
jp
outsb
or
pusha
testb
jns
push
push
andl
jge
jb
add
jno
iret
or
jecxz
cs
test
test
pusha
lret
aaa
cli
rcr
lods
decl
movsl
add
ficoml
or
stos
add
inc
loop
in
push
clc
lock
jl
sub
les
pop
ljmp
sub
addb
dec
in
imull
cmp
jl
in
dec
adc
int
jmp
inc
inc
jnp
lret
pop
stc
dec
lds
dec
mov
repnz
movsl
dec
adc
shl
cmp
std
sub
into
adc
iret
bnd
push
loop
mov
pop
andb
or
mov
ja
sub
scas
gs
xchg
mov
push
dec
push
pusha
shll
outsl
test
addr16
popf
dec
imulb
adc
call
pop
ret
pop
xchg
fisttpll
add
idiv
inc
repnz
mov
jg
iret
pop
daa
adc
mov
xor
add
and
push
loopne
data16
lahf
add
test
lcall
jae
out
lock
cmp
loop
mov
loope
jp
pop
int
xchg
inc
add
fs
push
dec
fisubs
cmp
cmc
lret
sahf
dec
push
xchg
xchg
cltd
or
jmp
xor
jp
dec
int3
std
xor
shll
in
addr16
out
or
mov
pop
shrl
jbe
fwait
dec
outsl
daa
ret
xchg
idiv
inc
mov
inc
mov
scas
jg
lahf
mov
sub
push
inc
dec
jb
test
out
dec
cmp
jnp
or
cwtl
and
cmc
jge
xor
xchg
or
mov
push
xor
enter
fisubrl
incl
iret
push
xor
lock
xor
mov
inc
aad
sub
dec
adc
cmc
pop
pop
xor
xchg
xchg
out
icebp
xchg
or
cmp
lret
and
ret
cmp
shrb
stos
cs
mov
xchg
pop
call
insb
movl
test
mov
mov
les
or
dec
sub
push
push
fwait
push
outsb
adcl
mov
or
es
lcall
push
or
inc
gs
stos
pop
jne
enter
dec
in
or
push
sti
xchg
dec
pop
in
xchg
div
xor
mov
loop
or
push
push
es
repz
clc
sub
jg
pop
lea
aam
call
lret
mov
test
push
in
mov
lcall
pop
scas
inc
adc
inc
and
push
test
call
sbb
sub
mov
push
les
cmp
fs
test
scas
xchg
inc
ret
sarl
imul
cmp
lods
fidivrs
xchg
nop
lcall
cmp
cmp
adc
or
add
std
mov
push
shlb
pop
imul
push
pop
cmp
out
je
cltd
xor
fiadds
mov
test
adcb
rorl
enter
mov
lds
out
insb
xchg
stc
sahf
mov
pop
inc
sbb
cmpsl
xorl
xchg
in
inc
push
adc
pop
cmp
xchg
cmc
push
gs
cmpsb
inc
jae
push
xchg
lret
sbb
jmp
push
lds
pop
lds
test
pop
fidivrl
scas
jg
sahf
sub
inc
xor
loope
in
pop
pushf
and
insl
inc
in
shrl
push
mov
pushf
jecxz
cmp
mov
int
lcall
dec
ja
cmp
add
dec
jmp
jo
call
and
mov
movsl
push
inc
data16
mov
or
cmp
je
jnp
xor
and
sarl
jg
mov
and
lcall
movsl
jle
jl
xchg
pop
scas
push
out
jae
mov
in
popf
adc
inc
jp
imul
loop
adc
addr16
ljmp
and
setp
cmp
mov
jo
inc
mov
std
jge
xchg
push
mov
incb
mov
lds
repz
imul
and
sbb
push
jne
enter
data16
test
cmp
lods
cmp
jns
int
inc
fmull
or
jle
pop
sbb
icebp
mov
mov
cwtl
jmp
mov
add
test
popa
jne
xchg
mov
sahf
std
lcall
dec
pop
outsl
push
sub
jp
movsb
push
or
lcall
dec
jmp
popf
xor
dec
lods
movsb
sbb
cmc
out
dec
jns
xor
pop
xchg
pop
sbb
dec
popf
out
je
iret
adc
sbb
roll
sbb
lods
repz
fdivl
in
mov
iret
repz
mov
test
cs
leave
stos
imul
xchg
mov
pop
sub
jae
into
aaa
test
sbb
inc
add
outsb
xchg
add
cmp
mov
pop
add
gs
sbb
pop
mov
mov
test
cmpsb
repnz
push
fs
push
jecxz
dec
sbb
js
xchg
mov
cmc
lock
mov
dec
mov
push
sahf
push
jl
mov
lods
test
pusha
test
js
mov
and
jp
test
jo
sub
xchg
mov
movsb
xchg
push
test
mov
and
addr16
rclb
mov
js
sub
sub
sbb
push
dec
sarb
sub
lods
jne
mov
das
add
dec
xchg
les
push
sbbb
stos
mov
daa
out
and
xlat
or
lods
sbb
mov
cmpsl
lret
jg
das
dec
xchg
movsb
mov
push
xchg
xchg
xchg
or
jb
push
pop
subb
iret
fidivrl
mov
scas
xchg
mov
sub
inc
int3
and
shlb
mov
jo
into
pop
fsubs
ret
call
rcr
je
add
xor
aad
add
jb
inc
and
sarb
cmc
jae
sub
jecxz
ds
cmp
push
ret
cld
pop
mov
mov
mov
fs
mov
stc
cmp
call
ficoms
cmp
clc
jb
mov
imul
incl
sub
aas
push
lods
fwait
mov
dec
and
and
data16
enter
fsubs
sub
jo
outsb
aad
mov
loope
leave
out
cmp
push
popa
jmp
mov
ror
adc
mov
scas
adc
scas
mov
xchg
dec
and
cmc
cmp
fisubrs
inc
shlb
or
imul
pop
aad
jo
push
xchg
in
lret
ds
jns
sbb
loope
and
inc
fdivs
xor
jns
add
jle
xchg
mov
pop
pop
cmc
inc
push
sbb
cld
popa
sbb
mov
add
or
adc
out
dec
stos
ds
movsl
xchg
sub
pop
and
in
inc
mov
jbe
aam
sarb
cwtl
xchg
dec
stos
in
insb
push
loopne
lret
pop
adc
ja
mov
stos
pop
in
scas
fadd
sbb
mov
xchg
ffreep
cmp
push
dec
sti
push
fnstenv
adc
or
inc
outsb
mov
cmp
cli
ds
lods
jae
pop
negl
add
cs
and
fs
jp
xchg
sub
mov
insb
pop
push
out
jg
xor
clc
rol
xchg
xor
fst
add
stos
fsubp
popa
ja
rcll
repz
jne
mov
xchg
sbb
add
jb
lcall
out
mov
or
sub
push
mov
fmul
mov
push
fadds
fistps
jge
mov
xchg
ss
push
jle
cltd
push
loop
mov
pop
sbb
rclb
and
mov
add
pusha
mov
ret
or
ljmp
scas
jne
xchg
dec
rorb
ja
jne
pop
into
lds
hlt
das
popf
push
adc
xor
mov
pop
and
frstor
fsubr
daa
movsl
cwtl
lahf
push
fsubr
mov
add
push
sbb
inc
scas
mov
or
jne
xor
cmc
and
fdivrl
mov
cmp
and
and
cmp
push
lock
fcmovb
cmc
gs
das
xchg
jle
adc
adc
xlat
je
js
stc
dec
pop
xchg
loopne
add
pusha
jb
fsubrs
dec
imul
jno
sbb
les
cmp
inc
jns
jmp
dec
ljmp
nop
imul
pusha
xorb
or
cmp
repnz
enter
xor
out
cmp
flds
xchg
push
pop
mov
rcrb
xchg
inc
mov
sbb
addl
push
ja
mov
stc
jnp
jns
test
cmp
cmp
pop
sbb
scas
xchg
stos
or
bnd
inc
mov
fsts
push
lahf
inc
repnz
fdivrl
cs
push
inc
ret
in
insb
dec
into
icebp
das
inc
dec
jecxz
jle
cmp
lret
ret
aam
imul
pushf
sbb
popf
inc
dec
lods
test
inc
cmp
mov
arpl
roll
mov
cmc
mov
push
xchg
hlt
push
fldenv
movsl
enter
xchg
shll
mov
enter
aam
cmp
shlb
mov
popa
cmp
ret
fisubl
sbb
jmp
or
insl
and
in
jg
or
cwtl
fdivrl
cli
and
mov
add
xchg
cmp
mov
nop
or
aad
xchg
data16
push
adc
cwtl
outsb
stos
movsl
add
jbe
pop
fldenv
cmp
jl
mov
mov
xchg
xor
inc
test
mov
adc
lods
fistpl
cmp
and
insb
pushf
or
dec
jnp
xlat
lahf
and
loop
xor
push
scas
mov
jmp
sub
aad
aam
inc
jle
insb
xlat
pop
clc
mov
xor
push
popa
inc
xor
pop
int3
push
cs
ss
add
xor
sbb
mov
cld
ss
lcall
jnp
mov
and
xor
or
or
in
add
test
bound
andl
push
pop
ja
sbb
mov
sub
adc
jecxz
sbb
cmpsb
dec
adc
cmp
inc
sti
and
cwtl
dec
add
xor
xchg
mov
stos
xchg
test
bound
pmulhuw
or
cmp
into
lahf
in
imull
fsub
and
push
test
jb
jb
loope
insb
cmp
in
xchg
xchg
ja
into
dec
ror
sub
jne
jo
jmp
cmova
movsb
cld
sbb
rcrb
or
mov
or
arpl
aad
lret
data16
inc
enter
jmp
pop
mov
test
push
clc
add
dec
es
fs
mov
push
sbb
sti
mov
imul
add
out
mov
cmp
int
loopne
iret
jge
jg
cs
adc
int
sbb
mov
mov
in
add
cmp
xchg
sbb
into
push
pop
adc
lret
mov
loope
shll
jge
pop
or
xor
out
cwtl
or
fiaddl
out
push
ret
ret
xor
xchg
sbb
push
shlb
xor
cmp
xchg
or
fsub
lods
fsubrl
jp
xchg
ficomps
xchg
add
out
dec
or
pop
inc
fsubl
out
mov
mov
lods
mov
inc
and
lock
xor
and
outsl
insb
fs
or
or
mov
and
lods
test
xor
ja
push
insl
lcall
or
sub
xor
mov
sarb
dec
jns
test
hlt
xor
scas
cmp
jns
fwait
test
mov
fiadds
pop
or
sbbl
mov
lret
mov
add
dec
jg
cmp
mov
and
add
lock
lcall
enter
dec
scas
pop
dec
pop
pop
sarl
icebp
and
sub
cld
sbb
xor
sbb
or
push
aas
mov
adc
dec
push
aam
addl
test
ss
push
es
jb
cmp
sbb
outsl
divb
add
push
or
and
test
pop
mov
add
arpl
rolb
dec
jo
mov
dec
sub
dec
cli
cmpsb
pop
or
pop
cmc
xchg
sbb
loopne
mov
test
popf
cmp
adc
push
sub
fucomp
cmpsb
ret
fsubrs
popf
pop
xchg
jno
sub
cmp
cmpsl
cmpsb
cltd
fisttpl
shlb
in
inc
insb
inc
push
sub
lret
or
dec
adc
inc
pushf
push
jno
xchg
mov
push
sti
fcoms
xchg
jmp
dec
ret
rcrb
outsl
jne
scas
jge
sbb
sbb
lahf
mov
xchg
in
or
sbbl
mov
push
lds
mov
lock
clc
cmpsb
testl
xchg
jg
adc
mov
or
mov
pop
ds
inc
ds
jp
pop
test
das
mov
out
outsb
push
cmpsb
xchg
stos
push
mov
scas
test
sub
mov
out
sub
nop
xchg
adc
cs
mov
mov
pusha
outsb
add
mov
sbb
call
sarl
cmp
rclb
pop
aad
mov
or
arpl
fdivl
cli
xchg
lods
stos
rol
mov
fidivs
test
nop
jo
cmp
sub
popf
push
out
sbb
mov
movsb
mov
xlat
cmpsl
out
mov
mov
ret
pop
add
test
out
negb
in
xor
adc
and
js
push
imul
sub
jb
imul
cmpsl
imul
daa
xchg
je
mov
or
mov
mov
sub
dec
xlat
xchg
cmp
outsb
cwtl
adc
test
in
je
add
shll
cltd
mov
jo
insb
mov
xor
addr16
xchg
mov
and
in
mov
and
ja
cltd
add
mov
push
test
je
mov
jns
adc
ret
filds
lock
jb
mov
sbb
into
int
and
aam
adc
bound
loopne
faddl
mov
push
jne
inc
add
mov
mov
daa
cmp
dec
shrb
jb
scas
pop
pop
pop
cs
decl
in
add
dec
adcb
outsl
lock
or
inc
daa
xchg
pop
jo
xchg
inc
dec
daa
ja
stos
test
inc
cmc
shr
fstp
and
bound
sbb
dec
mov
pop
test
std
icebp
pop
inc
sarb
cmpsb
fucom
stc
and
addr16
shll
add
popa
ja
les
sbb
sub
movsb
divl
mov
mov
insb
jl
leave
pop
int3
cmp
cmp
fsubl
xlat
jmp
push
pop
mov
repnz
test
cmpsb
dec
cltd
pop
xor
lcall
out
sub
aas
mov
enter
je
xor
mov
ds
mov
scas
xlat
pop
fadd
jnp
das
push
dec
daa
dec
stos
inc
push
cmp
adc
rcrl
mov
ret
test
in
insl
pop
js
imul
xchg
test
mov
lods
lods
and
cld
pusha
imul
lea
xchg
cmpsb
xchg
sbb
cltd
pop
outsl
out
cs
clc
or
int
cld
pop
mov
add
dec
fs
jb
in
lock
sbb
adc
lods
daa
mov
push
dec
or
xchg
pop
aad
push
sub
aas
dec
mov
das
imul
insl
sub
outsl
add
lret
inc
ss
xor
mov
or
inc
lds
loope
in
imul
cmc
cmpsl
sahf
aas
inc
push
jnp
sbb
lods
lahf
pop
data16
pop
aam
cmp
xchg
mov
aas
cmpsl
jle
imul
roll
dec
ljmp
jb
push
pusha
leave
inc
aaa
imul
out
and
adc
and
loop
addr16
imul
jecxz
js
repz
sbb
or
test
inc
xor
jle
mov
clc
arpl
or
imul
ret
ja
inc
add
xchg
sbb
mov
push
mov
arpl
add
xor
jecxz
mov
hlt
or
cmp
imul
imul
cld
sbb
int3
pop
lea
add
pop
or
jo
cwtl
ja
push
aas
sarl
xchg
jle
int
mov
inc
fsubrs
pop
jo
sbbl
ret
jb
add
std
cmp
decb
aad
jb
push
cli
fadds
jnp
push
push
mov
hlt
sub
cld
movb
and
xor
xchg
ror
lods
or
pop
filds
bswap
xchg
xchg
mov
mov
div
or
je
jae
into
mov
mov
dec
ja
lcall
fidivrl
jmp
imul
jmp
inc
in
test
mov
lret
icebp
ret
mov
arpl
loope
and
push
add
movsl
adc
push
sti
ret
scas
lret
lods
cmp
imul
mov
mov
sub
jmp
jge
xchg
sub
push
call
ja
dec
fcoml
in
mov
hlt
in
imul
or
test
dec
ret
jno
imul
and
jne
xor
ljmp
ret
sbb
pop
ret
push
dec
mov
push
aam
sbb
das
insl
dec
ret
sahf
mov
nop
cmp
aaa
xlat
dec
jns
call
xor
andl
insl
mov
fsubs
out
test
sti
dec
dec
xchg
jne
rcr
pop
aad
and
sub
lods
push
sahf
adcl
add
movsl
inc
jbe
cmp
mov
sbb
call
das
std
dec
fldenv
add
aaa
sbb
and
decl
jle
in
adc
push
pop
sti
push
cld
setae
data16
cli
sbb
out
out
les
testb
pop
inc
adc
int
add
out
out
pusha
inc
cmp
xlat
cli
cs
bound
dec
sub
dec
sbb
ret
mov
mov
and
inc
jg
jns
sbb
cmp
in
jge
popf
adc
pop
hlt
xchg
add
push
xchg
cmpsl
cmpsl
lods
inc
mov
mov
push
mov
setp
sub
out
lret
sbb
fwait
and
pcmpgtw
dec
push
add
push
iret
cld
lcall
mov
push
ds
in
aad
lods
xchg
adc
stos
inc
inc
or
add
inc
push
loopne
fsubl
pusha
sub
sub
iret
xor
push
jae
mov
lods
adc
inc
loope
int
and
leave
cs
xchg
mov
xor
loop
and
ror
jae
inc
inc
ja
adc
cmpsb
dec
jnp
push
mov
popf
jecxz
popa
pop
pop
xor
movsl
aas
cmpsl
fisubl
sub
cmc
mov
sub
xor
xor
cmp
lahf
pop
push
adc
sbb
jle
mov
jge
aad
mov
test
shll
loop
hlt
mov
mov
fs
scas
xchg
or
out
inc
push
sarl
adc
and
pop
or
jno
data16
jns
fisubrs
pusha
and
pop
xchg
nop
and
push
or
mov
subl
pop
pop
mov
or
mov
sbb
mov
or
inc
and
mov
jmp
or
xor
insb
jo
jp
adc
sub
insl
das
and
mov
add
inc
push
mov
insl
sbb
into
rcrl
mov
divb
decl
ja
mov
push
lret
pop
cwtl
xorl
mov
pop
cmp
bnd
outsl
js
xchg
pop
loope
aad
lods
sub
out
ds
dec
pop
adc
sub
mov
push
jl
in
cwtl
sbb
arpl
mov
sbb
aaa
repz
lods
mov
dec
cltd
out
mov
lods
inc
addr16
aas
jo
hlt
out
cmp
out
bound
cmp
sub
fsubrs
mov
push
jp
pop
add
pop
popf
xchg
dec
popf
push
inc
mov
cmp
jae
jmp
adc
pop
cmp
arpl
push
data16
mov
sbb
divb
outsb
mov
cmp
jae
cmpsl
lret
les
in
inc
xchg
loopne
push
or
pop
dec
fmulp
cmpsb
mov
out
outsb
mov
xor
fldt
cmpsb
sub
cltd
xchg
shll
xlat
and
sbb
cmpsl
jmp
jge
ljmp
repnz
iret
ror
jbe
out
sbb
xchg
xlat
pop
dec
add
ja
sub
xorl
jecxz
outsb
int3
pop
retw
push
ljmp
fs
pop
push
jns
cmpb
pop
cmp
adc
mov
lods
push
out
mov
pop
mov
je
scas
js
mov
sub
es
mov
testl
and
pop
adc
jb
xchg
dec
fs
insb
loope
sbb
or
sbbb
insl
inc
jg
mov
out
mov
xchg
mov
mulb
xchg
sbb
push
or
cmp
dec
rol
out
arpl
pop
scas
jns
in
inc
sahf
bound
add
adc
mov
and
sub
adc
xchg
insl
pop
or
lods
outsb
call
int3
cmp
cmpsb
dec
and
xchg
aas
fsubrs
dec
mulb
or
dec
in
sub
dec
add
dec
mov
jo
xorl
sbb
push
or
pop
dec
mov
xchg
insb
and
out
lds
inc
dec
add
jl
xor
outsl
imul
out
or
jge
or
hlt
mov
or
xlat
addr16
fstpt
push
xor
lea
xor
add
call
jg
xor
out
jp
mov
push
lods
je
jp
add
push
push
sbb
mov
sbb
imul
fcmovne
jecxz
add
dec
dec
mov
or
mov
addl
mov
jb
lahf
lock
ret
dec
scas
xchg
xchg
imul
mov
inc
mov
jmp
cli
ss
xor
pop
jle
xchg
scas
mov
xchg
push
out
mov
outsb
loop
mov
xor
and
clc
push
fdivs
daa
insl
mov
inc
popa
fidivrs
mov
popf
adc
aaa
jns
leave
xor
push
push
pop
jns
push
cmp
fistps
out
xchg
jmp
out
add
add
inc
push
movb
data16
cs
shl
arpl
jle
pop
mov
movsb
js
mov
or
jmp
push
sub
pop
pop
aas
ret
sbb
loop
cwtl
loop,pt
ret
mov
xor
cmpsb
pop
or
in
inc
mov
es
mov
lock
je
sbb
shlb
gs
xchg
inc
out
mov
cli
aas
aam
hlt
outsl
pop
mov
popf
ret
outsb
fwait
adc
mov
jge
ret
fdivs
fsubrl
jne
sahf
adc
adc
push
mov
jg
jno
mov
xlat
inc
ljmp
decb
mov
aam
imul
arpl
xchg
xchg
pop
and
repnz
lock
cmpl
pop
mov
sub
test
or
mov
pop
out
movsb
inc
dec
push
outsb
les
adc
dec
dec
ljmp
jecxz
adc
jmp
mov
arpl
in
addr16
outsb
push
je
ds
jae
fcmovnbe
loop
jmp
divl
sarb
jl
imul
pop
in
into
mov
jno
jle
mov
lcall
aas
jbe
adc
movsb
xor
cs
insb
aas
clc
lret
je
mov
pop
lcall
loope
lahf
xorb
and
hlt
jg
arpl
and
mov
jp
mov
sbb
data16
dec
mov
pop
jns
push
dec
or
sbb
es
xor
fnstsw
pop
push
imul
daa
push
in
out
cmp
mov
dec
daa
ds
int3
enter
and
cs
cmp
mov
popf
pop
in
bound
insl
push
icebp
sub
and
dec
and
push
es
mov
shl
ljmp
inc
xor
push
mov
dec
inc
adc
cmp
icebp
jns
sbb
fwait
push
gs
xchg
adc
sahf
in
push
shlb
fnstsw
adc
subl
test
pop
push
loopne
adc
fildl
jbe
sti
lods
push
daa
call
xchg
adc
orl
xor
adc
loope
or
clc
stc
mov
mov
movsl
aaa
imul
adc
xchg
adc
push
out
jns
pop
and
lret
sbb
add
mov
mov
ds
ja
filds
jae
inc
and
xlat
lods
ret
mov
sbb
mov
aam
filds
dec
or
test
lods
mov
aam
sub
scas
fldt
jne
leave
mov
mov
push
loop
push
push
testl
xor
ss
aas
or
sbb
call
and
and
cli
xor
ss
push
mov
push
mov
clc
iret
imul
mov
fs
adc
cltd
xchg
jbe
push
fwait
inc
jle
test
repnz
jg
mov
jmp
les
cwtl
jmp
add
dec
insb
push
lcall
lods
test
jno
shl
xor
xor
jne
loope
lds
pop
call
push
sub
clc
or
outsl
shrl
and
dec
mov
jo
mov
inc
jle
ljmp
orb
adc
cmp
int
inc
ja
mov
cmp
jno
aad
dec
fisubs
xor
jnp
int
mov
ja
add
nop
pushf
aas
jbe
add
cmpsl
fistpll
inc
add
xor
mov
test
cmp
lods
aad
jbe
les
push
pop
cmp
addl
cmp
into
ljmp
ljmp
mov
dec
cmp
pop
idiv
outsl
je
out
or
rolb
test
add
push
inc
adc
insl
stos
lods
add
popf
sahf
xor
addr16
fmull
outsl
dec
ss
scas
aad
jmp
fs
rorl
sbbl
repnz
lcall
push
mov
imul
decl
arpl
push
sti
ja
inc
sbb
mov
aad
mov
or
lcall
xchg
jbe
fwait
hlt
push
jns
adc
aas
mov
mov
cli
or
pop
mov
int
add
jg
mov
sahf
xor
dec
sub
dec
mov
lods
cmc
cltd
add
mov
mov
adc
and
imul
imull
push
dec
adc
dec
inc
or
mov
add
and
sahf
inc
mov
add
xchg
inc
mov
ret
pop
cmp
xchg
incl
inc
sahf
das
sub
push
push
mov
fdivr
sarl
js
mov
inc
cmpsl
leave
movsl
adc
jae
ja
call
fs
rcll
cmp
out
mov
shlb
mov
pop
aam
dec
inc
mov
stos
jmp
dec
pop
ljmp
fwait
iretw
ja
add
dec
in
mov
loope
inc
mov
and
ds
push
hlt
inc
jae
ret
mov
lahf
jecxz
out
rorl
cld
sub
jns
push
pop
adc
movsl
push
pop
xor
xchg
or
jo
outsl
mov
push
push
xchg
lods
loop
das
push
mov
dec
mov
xchg
addr16
mov
sub
inc
or
mov
lcall
xor
sbb
and
sbb
ljmp
in
iret
fcoml
mov
out
inc
xor
test
sbb
nop
cmp
outsl
xchg
sbbb
cmc
push
not
mov
shl
cmp
lret
mov
mov
ret
cmp
and
sahf
stos
hlt
xor
mov
sbb
dec
daa
inc
daa
sti
dec
push
pushl
lret
add
push
andl
loopne
jbe
push
movsl
pcmpgtd
push
fbld
mov
mov
incl
xchg
clc
aam
push
ficomps
cwtl
stos
jbe
cwtl
sub
jne
pop
adc
std
aad
fisttps
stc
ss
sarl
sub
mov
mov
inc
int
inc
xchg
add
scas
bound
inc
xchg
imulb
xchg
jns
jp
mov
push
pop
jge
movsb
jmp
lea
enter
mov
jecxz
cmpsl
iret
push
cmp
fmull
je
push
aam
lcall
sbb
mov
cmpsl
bsr
cwtl
aad
clc
jne
fisttpll
add
adc
subb
mov
repnz
or
lds
fs
adc
out
cmpsl
inc
sbb
pop
ds
jbe
mov
insl
xchg
mov
fisubrs
sub
sub
les
add
pushf
inc
cli
push
push
cltd
push
push
inc
sbb
rep
jo
adc
inc
lods
xchg
pop
mov
fnstenv
jbe
in
and
sbb
movsl
lret
lea
sti
sub
icebp
and
ljmp
in
outsb
xor
add
cmp
loop
push
pop
lods
fs
divl
ss
jae
and
jle
xor
jge
bound
pop
lret
frstor
xor
push
dec
fiadds
imul
mov
hlt
enter
or
mov
scas
shlb
fldcw
mov
adc
cmpb
sub
testl
sub
xlat
mov
test
in
in
xor
or
repz
jge
fisttpl
mov
ljmp
lahf
cmpsl
pop
jb
out
xlat
imul
or
nop
inc
mov
jmp
mov
data16
rolb
pop
cmp
gs
imul
or
cmovge
and
push
xchg
and
dec
mov
mov
adc
sub
dec
push
cmp
loopne
stos
test
outsl
stc
nop
adc
pop
call
lods
popf
cmc
pop
add
ret
jge
jno
mov
xor
adc
add
es
subb
js
xor
cmc
out
fsubrl
aam
push
iret
mov
jmp
aas
dec
in
mov
sbb
cmc
out
imul
lds
mov
iret
pop
mov
aaa
fstpt
inc
push
fnstcw
or
je
call
pusha
add
dec
popl
or
cmp
mov
test
inc
sti
mov
int3
xor
iret
inc
push
sbb
xor
fnsave
xchg
sub
mov
mov
cld
mov
dec
mov
mov
fadds
int3
mov
fdiv
xchg
sub
push
aam
xor
inc
mov
dec
xor
cs
stos
movsl
cmpsb
mov
xor
mov
out
cwtl
or
mov
xor
out
test
in
es
leave
aad
lock
xorb
add
mov
leave
sbb
adc
gs
sbb
shll
sti
sahf
dec
imul
and
push
mov
std
daa
and
in
mov
arpl
xor
popf
push
mov
mov
hlt
pop
jnp
sbb
rorb
inc
out
pop
mov
stos
jg
mov
dec
ret
nop
push
je
sub
mov
adc
adc
sbb
bound
stos
pop
jg
mov
adc
aas
in
daa
ja
sub
insl
lds
pop
int
not
jecxz
mull
ljmp
lods
pop
bound
in
xor
movsb
pop
xor
dec
imul
push
adc
cmp
fstpl
xor
les
add
lret
fisubrl
decl
push
cwtl
and
clc
jge
repnz
add
sub
nop
xchg
pop
or
push
xchg
addr16
fiadds
iret
test
ret
jb
ljmp
pop
imul
ja
sbb
movsb
fistpll
mov
cmp
and
test
in
aas
inc
daa
dec
or
mov
testl
push
push
mov
inc
es
jecxz
fdivrp
movsl
rcrl
dec
call
loopne
fisubs
in
ds
adc
mov
movsb
fstpl
addl
inc
mov
mov
xchg
jl
movsb
ret
mov
pushf
in
je
push
cmc
dec
subl
jecxz
repnz
jb
popf
mov
dec
int
mov
sub
or
andb
xlat
push
pop
lret
pop
lcall
xor
pop
inc
out
or
pop
pop
shll
aam
jmp
imul
test
adc
outsl
mov
add
and
and
hlt
adc
xchg
push
jbe
iret
das
stos
sahf
jmp
cmp
hlt
int
in
push
pusha
mov
test
aad
stos
scas
mov
inc
int3
xchg
cmpl
pop
pop
or
adc
sbb
mov
test
xor
fsub
cmpsb
add
cwtl
imul
pusha
enter
pushf
xchg
aaa
sbb
pop
imul
fucomip
fidivl
xchg
push
imul
inc
push
mov
lods
ja
loope
mov
loop
push
sub
mov
lock
push
popa
loope
or
mov
dec
or
sbb
test
call
and
movsb
out
insl
test
into
adc
jle
adc
pusha
xor
cld
insl
mov
repnz
outsl
add
lods
and
or
jno
scas
outsl
std
jmp
xchg
fstl
sbb
insl
dec
stc
sub
aaa
xchg
into
jb
fisttps
pop
cmp
mov
mov
and
xchg
inc
xchg
out
imul
lahf
pop
js
inc
scas
cmp
fldenv
stc
xor
dec
fisttpl
insl
rorl
pop
and
mov
lret
daa
mov
fldcw
bnd
nop
adc
cmc
and
hlt
stc
jmp
dec
mov
pop
call
or
out
lret
fmuls
xchg
or
rcl
movb
pop
das
mov
daa
lea
dec
mov
mov
mov
fsts
scas
xchg
repnz
inc
mov
push
or
sbb
stc
ljmp
imul
sub
and
addr16
and
lret
in
jb
insl
ja
imul
rcll
outsl
mov
push
adc
loopne
push
clc
das
call
test
inc
jbe
pop
dec
jno
std
cmp
mov
xor
out
pop
int3
addb
cltd
and
rorl
aaa
out
mov
add
xchg
mov
nop
mov
mov
xor
jg
mov
popf
jp
pop
into
xor
add
cmp
jae
xor
arpl
movsb
shlb
xabort
mov
out
addr16
mov
xchg
fwait
and
in
loop
mov
fistpll
sbb
or
sub
add
and
dec
jns
out
cltd
cmp
jne
fisubrs
test
or
pop
sbb
cwtl
push
or
or
inc
pop
jl
pop
adc
xchg
xorps
add
loopne
mov
sahf
or
push
pop
jae
addr16
mov
mov
mov
aaa
inc
push
leave
rcr
std
mov
loop
mov
call
mov
xor
push
xchg
jae
mov
mov
xor
jne
sbb
imul
adc
sub
mov
int3
pop
aam
stos
movsb
pop
xor
movsl
xchg
mov
out
cmp
cli
insl
mov
jge
jl
jbe
jns
shrl
cmp
test
in
mov
fmull
cmpsb
test
popf
lea
mov
popa
adc
fs
outsl
scas
pop
ja
inc
in
pop
pop
stos
xchg
xor
das
pop
ja
gs
push
adc
fs
lds
mov
push
inc
pop
ja
stos
mov
cltd
jnp
mov
push
movsb
shr
pop
hlt
inc
push
into
mov
jb
mov
mov
mov
or
std
push
inc
xchg
and
dec
mov
insb
in
push
mul
les
push
loope
push
mov
mov
roll
jno
push
stos
jl
push
mov
imul
cmpsl
and
and
ljmp
jne
mov
ja
push
pushf
xlat
lock
inc
jno
cld
cmp
xchg
add
mov
sbb
ja
mov
pop
outsl
xchg
mov
pop
into
gs
cmp
movsb
xor
adc
xchg
adcl
add
fdivr
add
pop
xchg
in
pop
mov
fs
pusha
aaa
and
push
stos
cmp
mov
and
popf
cmc
call
out
fidivrl
rcl
scas
imul
mov
sbb
mov
inc
cmp
ret
fst
add
adc
aas
jecxz
lcall
xchg
fwait
mov
mov
inc
push
sbb
jl
push
pop
inc
adc
pop
xchg
cmp
testb
jae
test
sub
add
lea
push
roll
push
jo
rorb
popa
xor
xchg
gs
mov
xchg
loop
mov
arpl
insl
pop
jmp
sti
aad
sbb
push
sti
and
xchg
scas
adc
cmp
or
add
lcall
push
jg
mov
jo
or
mov
mov
jo
or
outsl
rol
mov
hlt
fistpl
sub
insb
pop
and
arpl
xor
jmp
pop
mov
adc
inc
lret
and
inc
mov
sub
movsb
xor
jae
lds
sub
cmpsl
cmp
add
stos
sbb
nop
cltd
add
iret
mov
mov
call
mov
mov
xor
scas
idiv
and
aaa
sub
gs
movsb
popf
das
stos
mov
mov
xchg
add
jp
ror
lcall
jle
mov
mov
in
jno
test
ret
jae
cltd
cmpb
fistpll
lcall
lahf
imul
insl
cmp
pop
mov
push
pop
movsb
daa
xchg
aas
fldt
popf
add
popf
loop
lods
jns
repz
shll
stc
xchg
addb
sub
lahf
gs
imul
dec
test
mov
aas
mov
cwtl
aam
xor
fdiv
push
int3
adc
push
out
add
mov
sub
mov
cltd
dec
bnd
cwtl
sbb
jne,pt
xor
popf
addr16
push
mov
pop
jns
inc
aaa
imul
popa
lock
or
int3
dec
xchg
mov
add
inc
mov
jecxz
sub
ja
or
mov
inc
les
mov
repz
sti
sbb
add
sub
movsl
shll
and
cmp
dec
pop
scas
repz
insl
add
dec
ja
ja
and
negl
adc
push
xor
shlb
and
mov
add
ret
addr16
jno
xchg
lret
jmp
mov
sbb
ret
test
mov
jnp
nop
lock
fwait
pushf
xchg
mov
adc
cmp
test
or
je
mov
add
mov
inc
pushf
lcall
adc
mov
adc
add
jb
neg
int3
add
mov
nop
pop
repnz
push
cmp
sbb
mov
inc
movsl
mov
lret
test
or
and
notl
xchg
je
cmp
push
adc
out
mov
out
dec
bound
imul
adc
pop
in
sub
xor
push
sbb
dec
push
xchg
dec
loop
pop
imul
popa
aas
mov
add
and
nop
insl
push
imul
lret
and
xor
aaa
mov
inc
lret
in
mov
adc
push
movsb
push
cmc
mov
test
sub
and
lods
ja
jl
fcmovnu
and
out
jo
mov
xchg
stos
notb
out
dec
popa
insl
jecxz
inc
mov
decl
add
push
int
repz
xor
mov
adc
lds
pop
movsb
clc
pop
pusha
pop
daa
inc
inc
pushf
pop
lahf
daa
push
push
out
call
scas
adc
push
fidivs
pop
sub
xor
pushf
divps
loope
fisubrs
xchg
les
or
aaa
aas
jp
nop
mov
lcall
js
cmp
xor
sbb
dec
sub
mov
in
mov
out
mov
mov
inc
das
jne
repz
push
cmp
inc
enter
mov
xor
fimull
xor
aad
xor
scas
loope
repz
add
pop
fwait
or
cmpsl
es
mov
mov
jae
and
mov
adc
cmp
lds
rcrl
cmc
or
gs
push
push
mov
dec
mov
jge
cmp
je
add
cmp
xchg
data16
lds
in
push
cmp
in
add
subb
sub
jmp
sub
out
pop
jnp
dec
adc
pop
fldt
stc
scas
js
xor
mov
cltd
and
imul
mov
mov
push
cmp
adc
jmp
outsb
fidivl
cltd
stc
sub
cs
mov
pop
jbe
dec
jo
push
jno
push
pop
adc
inc
lods
xchg
xor
aam
out
sbb
lea
sub
insb
int3
mov
push
cmpsb
push
shrl
stos
outsb
scas
push
ret
mov
ds
mov
icebp
rorb
mov
xchg
nop
sbb
mov
out
pop
ret
pop
or
xor
shll
cli
nop
jo
imul
dec
adc
ja,pn
pop
cld
movsb
adc
dec
xlat
xlat
cmpsl
mov
xor
inc
pop
out
mov
fs
mov
call
mov
pop
enter
pop
les
outsl
push
or
adc
lds
cld
add
popf
and
fucom
dec
imul
cmp
icebp
mov
fidivrs
adc
out
cmp
divps
xlat
stc
leave
pop
xchg
es
dec
fs
aaa
popa
jle
loopne
ss
mov
push
cmp
mov
insb
pop
cmp
cmc
movsb
inc
push
and
inc
into
mov
dec
push
insb
ds
ja
icebp
and
scas
inc
jae
or
mov
outsl
fisubl
sub
cltd
dec
or
movsb
insl
gs
ret
jb
pop
and
pop
mov
ds
pop
in
repnz
sahf
outsl
push
lock
js
pop
cmp
xchg
add
rcrl
sbb
sahf
sbb
in
out
jge
scas
mov
data16
lods
sbb
adc
call
jmp
pop
stos
dec
mov
mov
ja
mov
call
pop
jae
loope
iret
sub
mov
test
push
adc
int3
fwait
jnp
mov
aad
repz
mov
and
mov
int
and
mov
lods
fsubl
mov
arpl
dec
fs
xor
sbb
cmpsl
das
nop
mov
or
sbb
sub
enter
and
lock
inc
imul
repz
iret
ret
imul
and
add
fwait
popa
sub
fimuls
inc
test
xor
imul
lret
ret
in
addb
jo
inc
sub
dec
lret
xor
dec
sahf
mov
fisubl
dec
iret
dec
dec
inc
mov
pop
es
in
stos
mov
mov
loopne
xor
cwtl
pop
pmaddwd
sub
push
cld
jmp
jnp
sub
push
adc
in
les
pop
jne
jnp
fists
mov
repnz
js
xchg
fsubp
movsl
sub
inc
or
imul
sub
imul
mov
and
inc
addr16
mov
adc
scas
and
lds
imul
dec
int
insb
and
jecxz,pt
inc
das
add
mov
push
das
jle,pn
or
sub
insl
xor
adc
push
mov
add
cmp
testl
fisttpll
push
and
out
hlt
xor
fists
out
scas
sub
insl
ret
lods
adc
jno
inc
cmp
mov
aad
std
out
pop
xchg
shlb
leave
outsb
mov
inc
mov
mov
add
mov
xchg
jnp
lcall
fildll
mov
pop
loope
pop
push
and
and
mov
dec
push
ret
jp
ret
inc
mov
xlat
out
stos
mov
or
arpl
mov
xor
stc
flds
jae
and
aaa
stc
push
mov
scas
outsl
push
lods
std
and
sub
add
pop
mov
xchg
jl
mov
push
mov
xchg
mov
lret
ja
jno
call
mov
jle
xchg
stc
popf
sbb
pushf
clc
or
ss
es
jb
addr16
push
ds
lcall
imul
sub
sahf
decb
jne
push
mov
aad
addr16
je
test
imul
arpl
jnp
jg
es
mov
sub
fistl
fstps
sbb
sub
scas
stc
push
rcll
aam
jno
aas
and
mov
data16
ljmp
leave
jmp
mov
inc
jg
mov
addr16
lea
mov
jl
push
push
out
sbbl
dec
and
xor
jb
and
dec
jl
js
out
dec
xchg
outsl
int3
and
shrb
fs
test
cmp
xchg
iret
mov
cmp
ja
push
mov
mov
sub
pop
and
call
adc
and
adc
jmp
hlt
lea
into
adcb
mov
aad
pop
into
jl
xchg
fucomi
aaa
movsl
rcl
aaa
aad
int3
add
or
loopne
scas
cmp
mov
dec
push
jbe
xor
das
mov
and
mov
pusha
lods
pop
test
nopl
outsl
fcomi
call
orb
inc
sub
adc
gs
sbb
imul
cmpsb
push
fisttpl
pop
xchg
popa
mov
hlt
push
adc
arpl
jle
jns
insb
fstps
xchg
mov
jb
je
xor
loop
outsb
push
push
test
mov
mov
mov
jmp
lahf
add
test
mov
jb
sbb
mov
inc
jecxz
add
lcall
repnz
pop
js
xor
xlat
jb
jns
loop
and
or
mov
mov
in
push
cmc
adc
icebp
pop
addl
add
test
push
or
mov
cmp
sti
repnz
fs
repnz
mov
adc
hlt
pop
rorb
mov
pop
xchg
in
mov
cmp
je
dec
mov
xchg
orl
outsb
dec
inc
xchg
mov
aas
clc
shlb
movsb
addl
mov
dec
dec
cmc
lcall
notl
adc
xchg
fwait
sbbl
aaa
add
js
lods
mov
inc
mov
sbb
add
ja
add
xchg
inc
dec
loop
sbb
cmp
mov
lods
mov
lods
adc
xchg
adc
add
push
test
inc
mov
sub
dec
inc
inc
stc
push
sbb
push
jle
mov
pop
sbb
push
aam
push
xchg
add
mov
mov
pop
inc
loope
leave
push
push
loop
ret
mov
or
int
enter
jns
fadds
fists
insb
in
cmc
popa
dec
push
leave
inc
sbb
addr16
das
push
lods
enter
sub
sub
out
jp
lret
lods
and
and
popf
fucom
lds
and
cmp
pusha
xchg
mov
sbb
iret
or
loopne
jbe
in
aaa
shlb
adc
sbb
cmpsb
jecxz
scas
lahf
xor
testl
cld
hlt
mov
jnp
leave
mov
lods
sub
and
aam
loop
xor
sbbb
insl
aaa
fimull
xchg
int
je
jmp
in
movsl
adc
out
fisttpl
mov
lock
test
xchg
stos
cltd
mov
and
pop
das
popf
std
push
lret
push
stos
adc
sub
xchg
addl
andb
add
inc
mov
test
addl
inc
add
bound
sbb
push
inc
insb
test
out
fs
pop
fcoms
push
sub
mov
imul
cmp
repnz
addr16
xchg
aas
lea
and
pushf
rorb
jmp
cmp
fdivrs
xchg
or
xchg
sarb
dec
hlt
mov
clc
bsf
push
xchg
cmpsb
dec
popf
and
dec
xchg
fwait
inc
mov
add
pop
pop
pop
cmpsb
out
cmpsl
pop
enter
or
repnz
cmc
pop
hlt
bound
cli
test
sub
jns
movl
lret
jne
pop
rcrl
dec
popf
lock
mov
lods
testl
aad
pop
in
and
daa
pop
adc
in
fs
mov
mov
push
mov
mov
leave
popf
inc
stos
jnp
pop
outsb
or
not
stos
xlat
push
mov
xor
ficoms
xchg
pop
sbb
jnp
xchg
repnz
push
mov
xorl
xor
stos
popa
pop
dec
sbb
test
cmp
call
loope
movsl
sub
cli
and
push
mulb
cmp
inc
sbb
ss
pop
jecxz
mov
int3
das
int3
inc
and
inc
aam
mov
sti
shlb
add
mov
frstor
and
push
inc
lret
mov
xchg
mov
lds
outsb
loop
push
loope
sti
das
movsl
arpl
loop
adc
sbb
test
test
leave
sbb
repz
pop
xor
mov
cs
sub
cmp
mov
mov
dec
push
loope
jb
inc
jmp
jecxz
inc
inc
mov
test
pop
cli
inc
sbb
mov
sub
outsl
inc
xchg
mov
jmp
mov
addl
fidivrl
jo
dec
cli
xchg
inc
adc
add
cmp
imul
es
xor
cmp
stc
popf
cltd
rclb
aad
insb
adc
lods
aad
adc
arpl
scas
cwtl
adc
mov
sbb
pop
xchg
in
out
push
adc
push
insl
mov
inc
popf
mov
fisttps
stc
dec
sti
lcall
pop
test
stos
pop
out
jp
repz
insl
and
xor
pop
push
pop
pop
cmp
or
stos
push
pop
test
jnp
sbb
mov
std
scas
push
jle
push
jl
sub
push
loopne
ljmp
and
in
test
jb
pop
flds
std
pop
mov
cli
sti
jecxz
push
jne
mov
mov
mov
cmp
mov
mov
bound
inc
jp
js
repz
insb
repz
dec
cmpsl
test
push
xor
jb
xchg
jle
or
call
or
imul
cmp
shlb
sub
mov
sahf
mov
icebp
jecxz
js
pop
xor
lcall
sbb
iret
ret
stos
scas
or
jo
dec
mov
dec
out
adc
fs
loop
mov
popf
xor
fiaddl
out
push
pop
mov
and
js
push
leave
aaa
gs
and
xchg
mov
push
roll
dec
rcrl
mov
jno
scas
fisubrs
mov
sbbb
mov
mov
fldcw
inc
and
sub
inc
jmp
cmp
aad
mov
enter
es
mov
jmp
xor
cmpsl
adc
xor
pop
popf
pop
push
call
lods
hlt
sbb
mov
mov
or
mov
cmpsb
push
fists
es
sbb
pushl
rcrl
mov
int
mov
cmp
dec
lock
adc
scas
in
adc
inc
clc
add
out
lahf
push
mov
mov
sub
int3
and
imulb
int3
loopne
or
or
ss
sahf
out
cmp
inc
add
mov
daa
pause
gs
jge
xor
aaa
mov
mov
notb
adc
push
jg
xchg
sbb
fs
cmp
cmp
movsb
lret
push
inc
cltd
mov
ja
shrl
jb
pop
js
mov
loopne
sbb
mov
test
sub
fs
rcr
push
fiaddl
or
xor
cmp
inc
std
pop
push
jbe
inc
pushf
jo
xchg
pop
add
mov
divb
addr16
insb
aas
test
fcmovnb
sub
insb
mov
mov
xchg
xor
dec
fbld
lret
mov
mov
popf
and
dec
in
int3
movsb
xchg
cmp
mov
jl
pop
scas
mov
xchg
sub
fadds
push
xor
xor
xchg
lea
xchg
lahf
stos
mov
inc
jp
or
push
push
push
jecxz
int3
mov
addr16
fistps
loope
mov
jb
pop
sbb
sarl
cs
leave
andl
es
out
and
gs
test
mov
inc
fs
cmp
adc
lods
dec
out
loop
mov
xchg
or
test
and
and
outsb
mov
cmp
lods
add
notl
xchg
pop
cmpsb
push
pusha
ljmp
push
insl
and
loopne
dec
mov
and
adc
cmpsb
pop
ficompl
lods
loope
popa
fwait
jge
sti
icebp
pop
sbb
pusha
dec
adc
pop
rcll
cmpsb
sbb
ja
ret
cmp
scas
les
test
int3
inc
test
pop
add
hlt
icebp
aaa
jno
les
movsb
push
xor
movsl
pop
mov
mov
stos
imul
data16
stos
outsb
adc
mov
sub
repz
jmp
lea
aaa
fadd
mov
cmpsb
mov
cwtl
pop
loope
dec
testb
fistps
xlat
pop
test
fnstsw
test
sahf
sub
dec
mov
aam
sbbb
jp
int3
imul
out
movl
push
xchg
inc
push
jno
xlat
insl
xor
mov
mov
mov
add
cmpsl
jae
and
mov
repz
jb
aad
pop
push
mov
inc
dec
and
or
jbe
loope
mov
push
xchg
xor
jmp
aad
mov
xchg
push
insl
das
cmc
inc
jge
mov
push
jb
cltd
xlat
mov
sbb
outsb
xor
add
inc
jl
xchg
das
mov
push
cmp
inc
insb
pusha
jno
sub
xor
sub
fadds
daa
push
lahf
shrl
add
fadds
xchg
es
mov
push
loop
stos
test
adc
fdivp
inc
mov
shll
shlb
push
rorb
and
xor
xchg
in
cli
or
add
xchg
ficompl
dec
stos
jb
xchg
ja
es
gs
inc
neg
jb
es
adc
rolb
adc
mov
push
lcall
jo
jmp
jne
gs
loop
out
mov
sbb
mov
mov
movsb
xor
mov
or
in
push
add
cltd
mov
mov
xor
ror
outsb
mov
sbb
jmp
add
or
fdivrs
adc
mov
in
repz
std
adc
jmp
inc
lret
fldl
insl
lds
cmp
pop
notl
mov
jae
mov
xchg
je
push
xchg
cmp
xor
les
inc
mov
imul
sar
inc
popf
adc
fdivrl
mov
es
sub
mov
pop
sarl
fldlg2
cmpl
dec
sahf
pop
hlt
lret
lds
imul
mov
fs
imul
dec
push
inc
xchg
mov
xlat
lahf
loop
fdivp
pop
fs
xor
lock
and
and
sbb
mov
out
in
inc
dec
cmpl
sbb
cwtl
ret
pop
cwtl
jno
shl
and
fimuls
fistps
adc
hlt
pop
sub
xchg
adc
mov
testl
fimull
addb
and
mov
jp
es
data16
rcll
imul
shlb
pop
icebp
mov
sub
inc
dec
nop
jp
cmp
ja
mov
xchg
icebp
sbb
iret
fsubrs
mov
pop
loopne
into
pop
add
pushf
int3
xor
jge
jge
sub
xor
jle
sbbb
pop
movsl
xlat
notl
or
pop
arpl
outsl
xchg
enter
out
lret
imul
push
fwait
addb
push
fnstenv
mov
fldz
test
xchg
or
arpl
cmc
xchg
enter
xor
mul
and
add
add
sub
gs
lods
shl
mov
pop
mov
xor
in
mov
dec
or
int3
iret
push
push
add
loop
sub
adc
jne
lock
mov
mov
mov
std
jno
push
dec
adc
nop
jne
push
pop
sub
push
jg
cmc
and
sbb
xchg
push
cmp
sub
int3
aas
loop
jae
inc
mov
lds
rcrb
aam
push
sbb
dec
jnp
dec
dec
pop
rcrl
cmp
pop
mov
test
cmp
sub
ud1
lret
inc
xor
je
jg
push
sub
movsl
fidivl
pop
mov
out
mov
call
test
pop
lret
mov
loopne
sbb
std
inc
rolb
das
iret
sub
mov
outsb
dec
enter
xor
xchg
xchg
stc
stos
dec
jg
andb
xor
orl
sahf
push
lret
and
addr16
dec
mulb
int
cltd
or
dec
push
mov
jecxz
lcall
mov
sarb
sub
jo
adc
and
push
and
dec
ret
jge
imul
rolb
inc
mov
enter
mov
sahf
inc
xchg
mov
mov
lahf
mov
jecxz
mov
jg
jp
aaa
xor
xchg
test
jmp
scas
inc
xor
repz
mov
add
mov
mov
or
jge
flds
fsubl
mov
mov
mov
mov
pop
movsb
lcall
mov
jo
imul
mov
mov
inc
xchg
push
jle
adc
ja
pusha
add
sbb
mov
shrl
jnp,pn
or
dec
std
push
loop
jno
jno
aad
arpl
mov
jns
cmp
fstpt
pop
cmc
cmp
cmp
ret
loop
stos
or
xor
xchg
pop
enter
ljmp
jge
mov
jbe
mov
inc
cmp
cwtl
xchg
decl
cmc
mov
clc
xor
mov
pop
jg
mov
dec
inc
mov
inc
adc
mov
loop
mov
movsl
jecxz
mov
adc
dec
cwtl
xchg
shrb
insl
addr16
push
inc
out
mov
mov
out
popf
jnp
fcompl
ret
inc
push
add
and
mov
push
sbb
icebp
in
into
insb
cmp
outsl
push
ss
sbb
jbe
jp
lcall
mov
cmp
push
pop
pop
jl
ret
loop
into
pop
pop
ljmp
pop
jecxz
insl
mov
mov
mov
out
aam
testl
mov
out
sub
scas
push
cwtl
faddp
sub
fimuls
iret
leave
icebp
idiv
pushf
add
in
fwait
int
or
dec
stos
pop
cmp
es
push
mov
movsb
xor
inc
mov
and
lcall
loopne
out
adc
enter
in
add
ja
jge
movsl
and
testb
mov
dec
push
lea
dec
popf
lea
and
stos
lret
dec
in
lahf
pushf
gs
or
sub
mov
bound
inc
push
push
lret
sub
mov
mov
inc
push
ljmp
cmpsl
fs
cltd
ret
pcmpeqb
cmpsl
in
sbb
pop
or
adc
in
mov
xor
sbb
or
sbb
psraw
sahf
pop
push
orb
adc
cmp
inc
inc
int3
sub
mov
xchg
mov
jae
pop
mov
and
in
xchg
pushf
push
fcoml
mov
sahf
xchg
push
mov
push
mov
mov
lret
rorb
bnd
adc
sub
fbld
lcall
inc
repz
dec
adc
test
pop
push
sbb
les
lods
sbbl
xor
aad
rclb
mov
ljmp
roll
cmpsl
fxch
ja
push
lret
fiaddl
loop
js
inc
dec
add
push
mov
add
jns
and
loope
lea
fisubs
xlat
and
mov
fcom
sub
jle
lds
mov
mov
push
cwtl
sbb
sbb
repz
xlat
cmp
lods
mov
mov
or
xchg
ss
pop
mov
pop
aad
jge
imul
dec
xor
pop
push
pushf
ljmp
mov
pop
test
roll
in
repnz
and
dec
leave
rorb
cmp
imul
adc
or
push
pop
test
jl
lret
adc
xchg
fs
ss
pop
or
in
xchg
nop
in
scas
mov
mov
inc
xor
pop
inc
mov
lret
dec
dec
sbb
fldenv
dec
mov
cmc
mov
clc
test
mov
das
dec
add
lds
mov
mov
xor
jno
aam
inc
test
in
xchg
inc
jne
push
pop
push
ljmp
sub
dec
enter
addr16
inc
js
xor
mov
lahf
sbbb
jnp
subb
lret
bound
pop
clc
xchg
push
dec
lods
mov
jmp
lcall
push
mov
movsl
fwait
jbe
cltd
js
cmpsb
xor
scas
js
popf
or
mov
movb
lret
inc
jns
mov
sub
mov
pushf
jo
and
jmp
bound
xchg
adc
stc
idivl
dec
inc
dec
mov
lret
loop
jbe
ja
popf
pop
nop
adc
mov
subb
es
jl
adc
mov
fwait
scas
jp
mov
dec
lock
imul
jo
inc
jae
das
cmp
popa
or
fidivrs
xor
cs
add
jo
std
addr16
dec
aas
negb
cmp
in
xor
push
jne
arpl
mov
mov
jne
xchg
or
mov
lret
sahf
cmp
inc
mov
int3
lret
push
les
xchg
pop
aad
fisubrl
pop
aam
test
cmp
and
shr
into
inc
mov
mov
pop
movsb
adc
push
jle
mov
imul
mov
mov
dec
popf
add
cltd
jle
rclb
leave
jp
and
xchg
cmc
add
enter
jle
cltd
push
sbb
in
cmp
loopne
lea
sbb
jns
pop
subl
mov
mov
loop
cltd
pop
pop
pop
dec
les
mov
add
mov
movsb
mov
orl
fdivrs
test
ret
test
sar
add
icebp
cwtl
jo
stc
shlb
lock
mov
and
pop
bound
and
dec
std
xchg
sbb
cmpsb
add
pop
enter
dec
sub
mov
ss
cld
pop
lea
jae
mov
xchg
cmp
sbb
sbb
imul
cmp
jb
adc
mov
add
inc
repnz
xor
daa
dec
pushf
and
mov
aaa
adc
sub
unpckhps
pop
leave
stos
or
int3
adc
sti
out
mov
jl
add
adc
popf
lret
xor
cmpsb
cmc
lret
jg
sub
xor
sbb
push
sbb
cmp
inc
int
or
mov
scas
mov
cmpl
notl
fwait
cmp
lods
pop
mov
out
test
call
test
shrl
repz
lcall
mov
and
lret
test
push
in
and
stos
into
inc
add
mov
mov
mov
outsl
dec
push
test
mov
imul
outsl
imul
test
inc
ret
cwtl
lahf
shrl
movsb
les
jecxz
stos
addr16
sub
sub
enter
adc
jnp
rcl
cwtl
mov
mov
push
push
xchg
pop
test
and
inc
sbb
cmp
ss
cmp
ret
repz
cmc
fisubl
jae
sub
stos
xchg
bound
je
das
push
lcall
jo
or
pop
loopne
es
jle
inc
push
jns
mov
in
in
jecxz
add
fiaddl
insb
bound
out
xor
out
out
cmp
addr16
push
stos
pop
fnsave
xchg
cmc
jae
outsl
mov
dec
lret
out
fisttpll
xor
scas
int3
xchg
fbld
dec
lods
bound
jg
sahf
xlat
or
arpl
punpckhbw
insb
pop
aad
dec
push
adc
mov
testl
add
ret
aaa
add
adc
subb
xchg
push
cwtl
push
into
jo
mov
add
decb
sub
mov
sub
dec
jecxz
push
imul
pop
pop
adc
bound
out
daa
cmpsb
mov
dec
or
sub
pop
adc
lea
sbb
jmp
mov
mov
adc
enter
test
mov
cmp
cld
pop
jo
pusha
push
cmp
mov
fadds
dec
sbb
lock
test
popa
sbb
xor
insb
cwtl
lahf
shrb
ss
jmp
mov
shrl
gs
and
mov
push
leave
int3
pop
jne
jmp
icebp
pop
cmp
shrb
je
pusha
pop
and
inc
loope
aam
jecxz
xor
negl
add
push
ret
jl
fwait
jb
adc
or
repz
push
shlb
add
inc
or
sarl
xchg
sub
pop
sti
insl
dec
cmp
xchg
repz
xlat
insl
andl
xchg
divl
push
sbb
dec
add
sbb
xchg
enter
test
popf
push
jb
movsb
cli
in
jno
sbb
inc
mov
add
xchg
pop
xlat
stos
xor
add
inc
pop
out
push
mov
addb
imul
cli
xor
mov
xchg
push
outsb
jg
inc
fs
daa
xchg
add
scas
in
in
imul
out
imul
je
push
push
xor
jg
xor
insb
push
and
or
sarl
sbb
dec
or
aad
sbb
pop
mov
mov
cwtl
xchg
sbb
xchg
add
movsb
repz
jns
cltd
stos
imulb
jno
xchg
add
ficoml
mov
or
fsubrl
cmp
fs
mov
shr
sub
insb
cmp
subb
sub
mov
rorb
mov
dec
cld
cld
mov
jmp
arpl
or
into
inc
jge
xor
rorb
loop
pop
cwtl
rorb
icebp
cltd
push
pop
xor
add
movsb
jl
int3
xchg
loopne
jecxz
mov
sbb
nop
fldt
aaa
ds
add
insb
sub
outsl
adc
mov
xor
dec
mov
call
mov
pop
xchg
add
faddp
bound
jle
mov
cmp
sbb
jp
mov
dec
jle
data16
mov
sub
nop
cli
in
cli
sbb
dec
xchg
add
int
mov
shlb
lcall
shrb
in
mov
jge
xchg
cmp
mov
push
inc
cwtl
mov
in
mov
xchg
aas
xchg
adc
lock
arpl
mov
jge
or
repnz
mov
fidivrs
gs
jl
rcl
pop
xchg
sub
es
loopne
shl
inc
mov
jp
or
pop
out
mov
stc
icebp
pop
or
and
movups
add
dec
jae
arpl
inc
movsl
stc
inc
dec
adc
lea
xchg
addl
jp
stc
std
or
pop
jp
xchg
xor
mov
pop
adc
es
jo
insb
xchg
rcl
icebp
ds
push
out
repnz
jne
ljmp
lock
adc
inc
jo
sti
dec
outsl
fsts
stos
dec
icebp
cmp
pop
mov
or
jl
mov
icebp
je
jle
mov
mov
cmp
fldl
jl
and
adc
in
outsl
rorb
arpl
mov
aas
add
shll
sub
int
lock
xorb
ficomps
popa
and
push
mov
push
sbb
cli
xor
mov
push
insb
fcomps
iret
cld
enter
add
js
aad
popa
leave
add
popa
notb
sub
sbb
out
mov
dec
rcl
pop
xor
lcall
adc
xor
je
cmp
or
xor
ror
inc
jae
push
pop
add
jmp
out
out
nop
push
ret
repz
inc
mov
nop
pop
ret
mov
fisttpl
jg
push
xchg
ret
int3
mov
push
sub
xchg
int
pop
push
ss
je
xor
add
mov
test
jle
popa
jl
jmp
pop
jno
jle
out
push
rcrl
xchg
jp
fmuls
mov
push
loopne
push
sbb
and
adc
jae
in
lea
adc
and
dec
mov
push
cmc
jbe
sub
mov
push
adc
fstps
mov
in
lcall
jbe
mov
add
adc
sbbl
sub
dec
or
shll
enter
cltd
xor
pop
out
movsb
repz
dec
shll
add
xor
or
iret
dec
cltd
cmc
xor
arpl
mov
cld
jnp
mov
jle
xor
icebp
mov
lea
imul
cs
sahf
jno
push
and
mov
das
sbbl
sarl
dec
ljmp
mov
inc
lock
pop
sbb
cmp
adc
push
cmc
mov
add
sub
cmp
leave
inc
in
xlat
or
int
add
enter
cmp
inc
xor
pop
clc
xor
push
call
ss
stos
sbb
jo
pusha
dec
adc
push
loop
loope
sbb
add
push
xchg
xlat
fidivrs
rolb
or
std
sub
out
adc
jp
cmp
std
push
lock
sbb
in
das
and
xorps
inc
hlt
sub
stos
xor
stos
insb
scas
dec
sbb
movsl
cmp
and
imul
xchg
xchg
movsl
mov
daa
xchg
fcomi
cld
xor
adc
adc
jbe
jo
pop
pop
cmp
js
ret
outsb
in
xchg
pop
std
idivl
cltd
loopne
cmp
mov
xor
lcall
shll
bnd
pop
inc
and
and
loopne
xor
mov
cmp
dec
ror
arpl
cli
adc
pop
imul
fcoms
ret
mov
or
inc
cli
int3
adc
daa
mov
cmp
sub
rcrb
les
mov
pop
xchg
jns
adc
movsl
xor
fnstcw
mov
xchg
shlb
mov
nop
jg
jmp
loope
jbe
pushf
inc
push
nop
bnd
imul
inc
cmpsl
dec
dec
push
lods
cmc
movl
xchg
ljmp
stc
xchg
or
fwait
or
jmp
sti
test
xlat
adc
dec
push
in
test
inc
and
dec
mov
aaa
ljmp
push
fxam
daa
loope
mov
aad
push
sarl
int
lcall
xor
movsl
add
or
pop
push
jne
cmp
fs
outsb
jmp
mov
inc
push
mov
mov
mov
cmp
pop
jb
rolb
fnstsw
adc
and
outsb
or
mov
or
in
test
jmp
inc
mov
inc
cmc
das
daa
mul
add
ficompl
add
inc
mov
mov
mov
sub
int3
js
pop
push
xor
push
jecxz
jecxz
pusha
xchg
push
sahf
jno
aas
jnp
mov
push
daa
scas
dec
enter
scas
inc
dec
or
repz
cmpsl
gs
mov
hlt
rcrl
xor
lods
push
stos
jl
jge
insl
sbb
xlat
add
dec
daa
push
jno
push
xor
insb
into
dec
cmp
push
incl
cwtl
das
insl
hlt
inc
mov
ss
and
adc
sub
int
mov
xchg
pop
xor
mov
pop
sub
mov
stos
sti
xor
bound
fwait
out
mov
xchg
sub
leave
decl
out
mov
add
xchg
jge
adc
jns
adc
pop
or
sahf
loope
mov
jbe
stos
cmp
adc
adc
xchg
push
mov
dec
pushf
push
sbb
int3
inc
arpl
sbb
push
imul
int3
xor
mov
lahf
mov
cmp
push
pop
sbb
daa
das
mov
cld
or
push
and
dec
imul
xor
pop
test
bound
shl
adc
test
mov
lea
mov
imul
jbe
jmp
scas
adc
sub
dec
push
mov
ficoml
xchg
insl
rcr
movsl
call
inc
sbb
inc
mov
and
out
loope
sbb
jle
sbb
cli
mov
mov
sub
enter
test
mov
ljmp
ljmp
test
inc
add
push
push
add
ds
into
push
jnp
xchg
push
mov
fs
stos
nop
pop
jnp
insl
dec
jmp
scas
xchg
or
pop
xchg
das
jo
xlat
adc
and
xor
lods
push
lcall
les
rcll
xor
inc
test
pop
sbb
gs
test
and
and
mov
sub
popa
cmp
into
adc
adc
xchg
mov
jle
movsb
dec
mov
cs
pop
jno
mov
xorb
mov
mov
push
fcoml
push
dec
testb
jp,pn
ror
dec
lret
cmpsb
mov
in
fld
cmp
xor
movsb
push
add
mov
or
fimuls
in
insb
stc
sahf
out
sub
mov
xchg
cmp
sarb
in
and
in
cmp
dec
mov
addr16
jno
jo
inc
lds
into
jmp
inc
rolb
pop
enter
pop
fadd
jmp
mov
jae
loopne
mov
popf
inc
lcall
lret
mov
cmp
adc
test
mov
movsb
in
fmuls
cmp
jle
xchg
andl
xor
mov
lahf
int
lcall
movsb
aad
cld
rcr
sub
hlt
orb
inc
add
rolb
repnz
or
xlat
or
pushf
xor
xor
push
loop
fmull
cmpb
stos
mov
push
leave
pop
mov
sbb
cmp
arpl
cmc
movsb
repnz
loope
sbb
sub
sbb
xchg
inc
fwait
xchg
inc
pop
xchg
sub
and
dec
test
push
cmc
fcomps
xchg
mov
repz
pop
outsb
pop
out
add
pop
or
cmp
sti
fcom
push
mov
push
cmp
mov
xor
shrb
cltd
push
fidivs
mov
sub
imul
sbb
mov
sbb
cwtl
ret
mov
mov
dec
sbb
adc
in
xlat
out
inc
dec
inc
out
adc
mov
jecxz
rclb
movsl
loope
pop
pushf
ficoml
jns
shrb
dec
lcallw
les
xor
in
xor
and
ret
lods
outsb
push
aam
ffreep
sub
xor
xor
xor
int3
test
jo
movsb
test
out
pop
mov
int
xchg
rcll
and
or
mov
xchg
ds
insl
mov
lea
mov
jg
repnz
cmp
sbb
sbb
mov
stc
cmpl
lock
cmp
lret
repz
push
dec
cs
mov
movsb
xlat
jns
mov
add
subl
bound
in
sub
scas
sbb
push
xorb
mov
push
test
push
sbb
outsl
adc
scas
push
inc
adc
gs
cmp
mov
or
adc
sub
dec
and
and
popa
fists
test
idivb
cmp
cld
aaa
push
hlt
xorl
push
es
ds
mov
mov
lea
cmp
and
and
sahf
fstl
add
mov
out
mov
dec
push
lcall
sub
push
stc
or
cmc
aas
insb
jnp
enter
push
test
in
adc
mov
aas
xchg
or
test
or
shlb
xor
sub
mov
aad
mov
outsl
and
dec
andl
ljmp
aas
push
push
popf
jmp
shl
nop
mov
push
dec
lcall
pushf
mov
sub
int
inc
jecxz
xlat
push
pop
cli
arpl
adc
fwait
je
andb
fwait
and
mov
mov
cmp
mulb
mov
add
or
jne
inc
push
mov
pop
fs
mov
mov
lods
mov
ficoml
js
cwtl
xchg
xchg
sub
xor
aas
sub
std
test
ret
mov
push
je
or
xchg
sarb
add
xchg
cmp
pop
insl
loopne
sbb
adc
pop
enter
hlt
pushf
pop
int3
pop
xchg
out
popf
out
lods
mov
loopne
adc
xor
popa
xchg
cmpsl
sbb
push
xor
lods
jne
sub
xchg
or
pop
fdivr
add
jns
xchg
shrb
out
cld
or
push
test
idivb
inc
stc
push
or
push
push
aam
mov
das
sub
dec
and
add
sub
inc
mov
mov
jmp
xchg
and
roll
pop
pushf
pop
lea
push
push
or
sub
mov
jno
dec
jle
lcall
rclb
and
pop
loopne
mov
xchg
call
or
xchg
ss
pop
cltd
cmpsb
adc
inc
out
prefetchnta
es
int
jnp
pop
jne
mov
cmp
pushf
adc
dec
mov
aad
call
dec
fs
inc
aaa
aad
mov
repnz
cmp
push
pop
mov
loopne
dec
mov
lahf
and
inc
jns
testb
xchg
dec
add
in
jl
out
andb
data16
pop
mov
push
sahf
sbb
push
test
sbb
nop
mov
test
orl
out
aaa
inc
adc
aas
sub
lahf
or
jp
stos
jbe
and
mov
and
dec
lods
ror
jno
sbb
clc
cmp
leave
sub
lea
fcmovne
sahf
cld
jb
and
push
sub
xchg
incb
xchg
xor
mov
repz
mov
sub
cld
pop
cmp
pushf
and
stos
xchg
mov
shl
imul
xlat
jp
jbe
cmp
fnstenv
xlat
std
push
fnstsw
push
test
cmp
or
or
pop
xor
or
sbb
xchg
mov
daa
lret
arpl
push
jmp
es
mov
pop
cmp
popf
jns
inc
fnstsw
loopne
or
cmp
jl
cmp
inc
and
lret
sbb
gs
movl
lods
pop
push
test
mov
mov
ds
dec
sbb
pop
test
add
xchg
mov
jns
mov
adc
shrl
cmp
mov
dec
and
mov
mov
loopne
dec
and
push
sub
movsl
shll
insl
xlat
push
out
gs
jb
lods
and
xchg
sti
roll
imul
rcr
jne
stos
mov
ja
add
mov
dec
imul
sub
or
pop
std
inc
test
aad
xor
cmp
xchg
dec
loop
jle
je
cmp
xor
aad
out
lea
mov
das
mov
or
hlt
cmp
push
inc
inc
pop
xor
pop
cwtl
xchg
and
and
test
rorl
lds
cltd
in
and
in
aaa
mov
pop
add
jno
jg
mov
or
mov
repz
int3
jnp
ficoms
sbb
lret
sbb
mov
test
or
movsb
dec
loopne
ret
jbe
add
inc
das
mov
mov
xor
and
push
sbb
mov
mov
pop
lea
mov
in
adc
enter
rolb
fnstsw
mov
xchg
push
leave
xor
mov
icebp
cwtl
insb
and
ja
push
mov
dec
add
mov
jmp
inc
cmp
aad
jb
adc
and
into
shrb
xor
xchg
in
int
out
pop
mov
xlat
pop
sahf
cli
inc
mov
pop
das
sbb
dec
or
js
mov
mov
lds
jg
cs
cli
ljmp
add
or
not
push
fdivl
fcmove
cmp
mov
mov
fs
into
xor
out
add
pop
and
cmpsb
clc
xchg
or
cli
pop
cmp
jl
push
jns
jb
mov
sub
lods
lods
gs
pop
pop
cmpsl
or
push
mov
or
push
dec
in
addr16
inc
push
jne
pop
cmp
cmpsb
xor
mov
pop
xor
jne
mov
fisttps
pop
test
bound
jbe
pop
sub
inc
mov
nop
push
cmp
jae
or
mov
xor
jle
add
in
push
bound
jo
fdivr
sub
cmp
mov
incl
scas
loop
movl
out
roll
mov
jnp
sub
cmp
test
mov
mov
mov
lret
scas
outsl
jle
lea
push
mov
fiaddl
sbb
test
jmp
arpl
add
fldl
data16
decl
andl
sub
lods
or
outsl
inc
inc
or
mov
or
mov
test
fcoms
out
adcb
jae
cmp
dec
mov
sarb
mov
in
dec
inc
xchg
add
dec
dec
pop
inc
loope
cmp
jb
out
ficoml
in
dec
sbb
cwtl
mov
lret
cmp
dec
sbb
push
sub
movsb
clc
cmp
mov
scas
xor
jecxz
dec
add
fbstp
or
cli
addr16
rcl
pop
sahf
and
push
push
push
mov
sbbl
or
jae
jo
cmp
jp
xor
ret
int
pop
dec
movsl
mov
adc
shll
jge
mov
shl
cmpsb
adcl
lcall
add
stos
jae
add
cmpsb
and
cli
into
addr16
filds
fcmovnbe
add
sbbl
xchg
push
jb
fidivrs
aas
dec
mov
jns
add
stc
leave
cmp
xchg
mov
mov
ror
js
test
popa
jle
es
inc
jb
dec
pushf
xor
xor
xlat
sbb
jae
stos
shl
mov
xchg
shrl
in
lahf
xlat
repnz
dec
or
inc
ja
orl
push
std
mov
xchg
int
jo
or
ja
pop
add
loopne
rcll
push
and
dec
xchg
push
fnsave
loopne
push
ret
mov
jge
popf
sahf
mov
incl
int
outsl
push
jp
cmp
xor
jno
or
jnp
or
int3
mov
nop
mov
xor
ret
adc
adc
mov
inc
sub
cwtl
add
sbb
fcompl
test
cmp
mov
into
add
sahf
add
fsts
aas
mov
leave
xchg
fcoms
popa
iret
jns
loop
std
or
xor
mov
inc
mov
cmp
mov
mov
mov
outsl
inc
cmp
loopne
mov
das
xchg
sub
sub
cmp
push
cli
jns
imul
std
mov
mov
leave
and
sahf
mov
mov
leave
sti
dec
lock
cmpb
test
js
fisttps
rorb
and
fwait
mov
enter
and
pop
or
xchg
ds
test
ljmp
pushw
sub
in
nop
and
dec
inc
mov
rol
xchg
dec
inc
in
outsl
pop
dec
js
faddl
fmulp
push
mov
or
jg
adc
push
sahf
sub
in
aad
in
dec
je
adc
cmove
sub
fdivrl
lea
and
inc
xchg
mov
mov
movsb
inc
hlt
test
fldl
int3
lods
insl
stos
jp
jge
mov
fcomps
loopne
push
pushf
ja
iretw
xchg
insb
cwtl
idivl
int
in
mov
test
push
inc
popf
scas
scas
lea
jecxz
add
loopne
xrelease
ljmp
loop
pop
dec
int3
arpl
sar
test
dec
clc
cwtl
pop
out
out
mov
stos
rorb
lds
add
in
sub
cmpsl
or
jns
out
and
loope
push
icebp
cmp
inc
jae
inc
sbb
mov
ss
bound
jbe
or
cmp
rorl
rorb
loope
pop
dec
sub
mov
out
dec
jb
push
xor
outsb
xor
aas
loop,pn
movsb
test
mov
pop
adc
jbe
sub
aam
in
daa
insb
mulb
xchg
rclb
leave
and
jne
data16
inc
stc
mov
psrad
push
inc
rep
jae
rcrl
adc
cmpsl
clc
test
push
adc
fdivrp
cmc
xchg
push
ja
and
push
ss
lods
jno
xchg
mov
ljmp
rcl
push
jnp
cs
or
push
and
mov
dec
xor
insl
js
mov
push
stos
jecxz
cmp
and
push
cmp
and
subb
mov
mov
rcl
adcl
call
or
push
in
mov
dec
xor
nop
lock
out
xor
orb
mov
es
loopne
loopne
ljmp
sub
je
rorl
xor
and
mov
loop
push
sbb
or
dec
ss
imul
pop
push
dec
push
jmp
je
add
adc
pushf
fucomi
jl
mov
dec
push
test
pop
xor
or
addl
pop
adc
cwtl
push
mov
rorb
ss
into
jae
fwait
mov
ret
cmp
stc
rcrl
xchg
adc
ficoml
jp
ss
int3
push
mov
das
and
pop
cmp
sti
mov
loope
cmp
dec
sub
clc
dec
loopne
xor
addr16
fadds
out
or
sub
xchg
mov
insl
push
push
add
in
push
push
mov
cltd
les
pushl
add
mov
sub
cli
insl
push
mov
sub
in
xlat
jge
loopne
cmpsb
pop
jbe
xor
fiadds
repnz
mov
cmpl
xor
push
or
xchg
jns
cmp
insb
or
lods
add
lock
mov
sub
cmp
enter
push
dec
inc
clc
stos
ds
xchg
scas
xor
xlat
ficoml
dec
cwtl
repz
gs
test
pop
dec
adcb
imul
adc
sbb
out
sub
in
cmpsb
mov
es
mov
gs
aam
jl
dec
fs
loopne
mov
aas
xchg
test
lret
test
push
pop
pop
shll
or
cld
xor
filds
lea
cs
xchg
push
sub
jne
icebp
andl
sti
mov
enter
mov
daa
les
and
lret
adc
and
je
push
ljmp
fdivrs
bound
xor
das
xchg
in
adc
jle
mov
int
cmp
arpl
pop
sar
fistl
sbb
popf
push
dec
jmp
cmp
cmp
aam
jg
inc
aas
inc
test
out
clc
clc
cmp
insb
hlt
push
push
faddl
popf
out
mov
ficomps
test
shrb
jbe
xor
jmp
sbb
fcmovnu
xor
ljmp
shrl
mov
xlat
sub
pop
dec
ljmp
mov
std
add
negl
lea
mov
adcl
je
cmp
es
mov
imul
xchg
xor
mov
loope
sbb
mov
dec
loope
add
push
jb
ja
fsubrl
inc
mov
or
lret
sbb
stc
mov
jns
test
fwait
je
call
imul
mov
filds
orl
cmpps
lods
xor
clc
xor
aaa
int
xor
dec
js
out
xor
repz
subb
and
xlat
arpl
push
mov
push
dec
fnop
nop
in
cmp
mov
jno
mov
lods
dec
or
cmc
mov
scas
movsl
outsb
cmpsb
js
mov
xchg
lea
and
imul
or
repnz
ljmp
adc
pop
push
jge
lods
mov
add
loop
xor
pop
shlb
notb
shl
pop
adc
test
jp
and
cmp
inc
in
je
dec
mov
adc
dec
mov
in
add
jmp
sbb
push
mov
xchg
fstpt
mov
or
out
jge
enter
in
addl
sub
mov
aaa
or
or
daa
cmp
clc
inc
mov
out
sbb
adc
rclb
orb
popl
hlt
jmp
out
aad
inc
mov
or
nop
sub
call
pop
incl
push
dec
pop
psubw
jno
sub
mov
lahf
xchg
outsl
pop
lret
pusha
orb
sahf
pushf
out
int3
into
xor
stc
xchg
add
push
and
xchg
js
dec
pop
mov
pop
leave
and
daa
fisubrl
mov
aaa
ret
push
ja
in
out
xchg
enter
mov
dec
dec
iret
ret
sbbl
outsb
xor
stos
je
scas
sar
fsubs
xchg
in
ja
pop
lods
shlb
cmpsl
pop
dec
in
xchg
or
jne
iret
and
or
js
and
pop
jmp
dec
pop
outsb
mov
pusha
push
pop
push
std
cli
cmp
cmp
lea
sbb
pop
or
fstpt
or
xchg
rcll
jp
cmpsl
mov
popf
xlat
mov
pop
sbb
xchg
addr16
in
inc
ds
dec
and
shrl
xchg
mov
mov
in
sahf
int
in
aad
push
xchg
jb,pn
leave
push
negl
inc
adc
lret
imul
repz
movsb
or
xor
pop
scas
mov
cwtl
in
pop
cmc
in
dec
inc
sbbb
lods
inc
xchg
ffree
mov
adc
dec
in
adc
scas
jmp
insb
add
lahf
mov
mov
hlt
js
stos
stmxcsr
out
in
add
sahf
lock
test
sub
mov
inc
scas
daa
and
or
scas
les
add
inc
lods
loop
imul
daa
or
add
inc
jecxz
imul
jbe
jno
mov
mov
out
jb
pop
mov
push
mov
lds
add
or
roll
jg
sbb
pop
add
add
sub
adc
or
cmp
gs
sbb
or
push
mov
xchg
and
jl
mov
popa
outsb
out
jo
fnsave
movsb
or
ljmp
add
test
es
aaa
mov
scas
mov
mov
fildll
inc
cli
sbb
cmp
add
xchg
push
mov
bound
mov
cmpsl
cmpsl
bound
cwtl
pusha
test
sub
xor
xchg
inc
mov
outsb
push
push
imul
mov
movsl
cmp
inc
loop
or
in
fnstcw
inc
rcrb
sub
jmp
imul
inc
push
lock
filds
jmp
inc
ja
mov
push
in
lods
iret
test
mov
fcoml
loop
stos
test
inc
fcoms
in
notb
mov
adc
push
call
or
jns
rol
loop
dec
incl
dec
dec
push
out
dec
xchg
add
push
mov
pop
movsb
cld
push
orb
es
pop
sbb
aaa
stc
sbb
xor
mov
sbb
jnp
and
hlt
xchg
cmc
push
fimull
mov
rorb
mov
sub
dec
movsl
cmp
nop
jb
lods
add
fnstcw
add
les
push
add
cmp
nop
loopne
lret
sbb
and
jnp
jmp
mov
subl
cmpsl
sub
mov
pop
jmp
int3
xor
mov
stc
imul
bound
xor
sbb
or
stc
loop
mov
cld
mov
and
cwtl
cmpsl
lea
loopne
cmp
mov
lock
push
sarb
xchg
outsl
adc
push
ret
sarl
push
stos
dec
fnstcw
iret
ficoms
sub
lcall
loopne
aad
cltd
xor
or
mov
subb
pop
jle
adc
cmp
jl
in
mov
fs
push
sub
in
push
push
and
cmp
das
pushf
rolb
sbb
test
dec
and
test
mov
mov
mov
out
adc
and
push
mov
stos
mov
push
int
add
mov
and
lret
test
aad
insl
mov
jmp
push
lock
xor
or
into
in
stos
add
mov
xchg
add
mov
push
pop
xchg
xchg
aam
sbb
cmp
push
mov
adc
push
push
and
adc
xor
push
aad
push
cmp
pushw
jmp
scas
pop
shlb
shl
shll
aas
jle
ret
xchg
add
cwtl
loop
mov
outsb
mov
and
push
mov
lret
lea
adc
sub
repz
push
sub
insl
test
hlt
sti
mov
cld
mov
fwait
lcall
xchg
pop
fsubr
adc
jle
ljmp
mov
adc
sbb
insb
push
ljmp
test
xchg
mov
lea
cmp
ss
xchg
push
jo
or
in
in
xchg
xchg
push
pop
inc
stos
pop
lods
sbb
lret
and
jge
aaa
push
push
lds
loop
cltd
call
dec
and
out
xchg
sbb
xchg
cltd
sub
xchg
fucom
fcmovnbe
or
js
jnp
push
mov
xchg
sub
mov
adc
dec
xchg
push
scas
movsb
jns
sbb
testl
bound
cwtl
or
jns
sub
sub
jbe
lods
lahf
js
jb
out
xchg
or
or
push
push
jecxz
movsb
sub
inc
cmp
pop
mov
push
cld
pusha
add
cmp
xlat
jo
clc
jne
mov
in
sbb
add
mov
sahf
sbb
add
xchg
call
lods
movsl
fdiv
lahf
not
sbb
ljmp
jge
pop
lcall
cmpsl
insl
xor
insb
xor
lods
imul
lcall
adc
sti
aam
adc
and
movb
inc
and
bound
dec
enter
pop
jmp
fisttpll
inc
mov
iret
push
mov
mov
dec
mov
scas
scas
sahf
outsl
sbb
movsb
ljmp
icebp
mov
xchg
mov
rorl
cli
sbb
dec
jge
mov
repnz
mov
mov
adc
mov
mov
std
cmpsb
das
adc
push
jno
sti
xchg
loop
sbb
mov
scas
jg
rorl
or
outsl
xor
shrb
mov
jg
push
flds
in
add
ss
data16
cmpsb
andl
pop
es
xor
xor
jl
fcomps
inc
pop
mov
jecxz
lock
sub
shll
movsb
jl
inc
imul
inc
push
pop
lds
mov
jae
push
add
push
in
push
sub
js
out
fcom
inc
cmc
or
rolb
xchg
jl
ljmp
mov
aaa
test
xchg
incl
push
loopne
adc
xor
xchg
dec
popa
lcall
cmpsl
inc
lret
fsts
sub
in
jg
js
or
jl
mov
imul
push
xchg
xor
leave
sub
lock
aaa
adc
cwtl
add
add
pop
iret
int
hlt
add
sbb
xchg
add
pop
mov
mov
cmp
pop
xchg
push
in
inc
enter
mov
stc
or
push
insl
rclb
adc
add
mov
sbb
adc
iret
subb
xchg
jo
mov
addr16
mov
mov
add
mov
xchg
aad
jg
dec
adc
hlt
push
xor
inc
push
mov
push
and
push
mov
add
lret
or
hlt
cmp
add
inc
xchg
insb
and
idivl
and
xor
jp
cmp
cmpsb
int
pushf
adc
pop
sbb
ret
pop
sbb
icebp
xchg
lahf
sub
jae
cmp
lds
ljmp
lret
cmp
inc
dec
sbb
cwtl
sbb
mov
inc
das
mov
nop
sbb
movsb
insl
fsubrl
int
or
shr
and
mov
lods
popl
ret
mov
outsl
cmc
loop
je
adc
lods
mov
scas
iret
xchg
lods
shll
mov
push
push
scas
mov
xchg
sub
or
loop
cmp
xor
test
fidivl
xchg
rcrb
jbe
jb
sbb
sub
mov
pop
lods
daa
cmpsb
insl
stc
push
jbe
adc
lret
insb
jbe
andl
mov
lock
xor
add
int3
out
stos
pushf
and
dec
and
fisttpll
pop
insl
add
inc
sahf
mov
fistps
sub
in
fisttps
xchg
shll
cmp
in
popf
out
sub
clc
shl
adc
sbb
and
jb
adc
in
sbb
fnstcw
fcmovu
mov
jg
icebp
cwtl
xchg
ds
lea
jp
bound
js
scas
add
xor
test
xlat
mov
aad
cmp
pop
je
and
jl
push
pop
dec
mov
jecxz
clc
adc
pop
pop
sbbl
int
push
mov
sub
and
xchg
gs
push
push
push
fwait
mov
mov
in
ret
test
jecxz
std
into
jnp
jno
out
push
adcl
jbe
icebp
xor
or
dec
mov
imul
popf
stos
sbb
daa
std
ja
inc
in
dec
mov
mov
jbe
push
jg
inc
loopne
jle
insl
and
fmuls
sbb
adc
out
dec
mov
clc
xor
ds
or
ret
xor
mov
imul
jno
hlt
fwait
and
ror
les
and
push
xchg
add
sub
jl
imul
dec
insb
jecxz
inc
mov
and
mov
ret
mov
pop
push
scas
push
sbb
adcl
mov
mov
insl
lahf
and
sbb
ja
test
xchg
fnsave
mov
cli
xor
sub
daa
push
cmp
sbb
cli
and
add
push
inc
insb
rorb
push
mov
sarl
mov
mov
icebp
jnp
cmp
mov
mov
mov
and
fcmovu
pop
ffree
push
dec
sub
fucom
fldcw
ficompl
fildll
mov
data16
mov
and
push
out
adc
inc
test
pop
into
cltd
xor
pop
aad
push
mov
pop
data16
in
rcrl
cltd
xor
mov
fidivrl
add
enterw
mov
mov
arpl
fwait
shr
aaa
aam
cs
test
fidivrs
xchg
and
fs
pop
add
loop
lock
push
cmp
add
inc
or
mov
or
inc
into
lcall
rorl
repz
fsubrl
mov
sub
jle
lds
movl
hlt
ja
lahf
jmp
sbb
jns
xlat
jae
notl
xor
hlt
push
jnp
fwait
imul
loope
jp
mov
test
jl
std
jp
in
jl
addr16
xchg
pop
mov
add
and
jb
std
test
test
or
pop
xorl
shlb
daa
cmpsl
pop
inc
xlat
je
xchg
andb
mov
inc
fsub
cmp
lret
jg
sub
fildl
mov
adc
xchg
mov
or
sub
daa
ljmp
jmp
flds
daa
imul
lds
push
mov
out
xor
mov
xchg
sbb
mov
add
je
xchg
mov
and
movsl
shlb
or
cmp
mov
ret
sarb
mov
sub
mov
add
dec
pop
mov
rolb
test
mov
xchg
ret
in
cmp
pop
outsb
cmp
inc
xor
lahf
subb
or
outsl
iret
pop
imul
fnstcw
flds
das
add
cmpsb
push
xchg
cmpsl
xor
cmp
adc
xchg
jnp
int3
fmuls
and
mov
ss
scas
notb
cli
fwait
cmp
jle
lret
sbb
lods
icebp
or
mov
sarb
adc
je
lret
push
int3
int3
ja
push
or
jae
movl
shl
jp
daa
ja
imul
push
stos
sub
scas
xor
jmp
mov
lcall
cli
xchg
jo
jnp
out
jns
pop
inc
popa
add
in
jl
mov
xchg
cmpsb
mov
and
mov
adc
lahf
pop
xor
aas
inc
mov
loope
repnz
pop
stos
xchg
cmp
or
mov
xlat
pop
ret
clc
inc
fldl
movsb
inc
rcrb
pop
repz
movsb
jo
adc
and
inc
fwait
imul
push
movsl
push
jb
aad
push
jbe
and
xor
mov
int
inc
or
jbe
fisttps
jae
hlt
enter
rcr
pop
mov
mov
push
ja
ja
std
cwtl
fnstsw
sub
and
int3
jb
xchg
in
das
dec
cs
ds
repz
jle
subb
push
aad
insl
dec
adc
jae
movsb
adc
cmp
mov
test
xchg
inc
inc
sahf
inc
push
int3
ret
pop
test
pop
or
clc
popf
inc
and
and
lret
pop
jle
dec
cmc
push
mov
std
adc
sub
push
adc
fldl
mov
insb
aad
leave
pop
xor
sub
int3
xlat
rolb
fldenv
add
shll
mov
mov
or
loopne
negb
mov
jmp
jge
dec
dec
test
ret
push
push
cmp
sbb
mov
or
stos
cmp
icebp
mov
jmp
xchg
jo
mov
mov
lock
gs
inc
mov
dec
fdivp
cmp
cmpsl
test
mov
and
dec
dec
inc
popa
lahf
xchg
andb
sub
mov
aas
jns
dec
cs
pop
cmpsb
subb
bound
jne
fwait
xor
daa
leave
add
arpl
pop
fnstcw
jo
std
mov
pop
leave
or
xor
sbb
imul
mov
and
dec
sbb
jne
xchg
push
es
and
fisubrl
xchg
popa
inc
outsl
dec
scas
jl
push
push
and
push
dec
inc
adc
clc
ret
jl
add
lds
add
ss
xor
push
ret
sbb
arpl
repnz
sti
dec
loope
push
dec
dec
sti
sbb
in
inc
mov
push
in
xor
xor
adc
shl
cmpsl
outsl
xchg
lods
rol
movsb
int3
loop
out
adc
leave
rcrl
mov
mov
movsb
lcall
sbb
inc
xchg
loopne
call
dec
lods
pop
adcb
adc
add
cmp
insl
sahf
push
inc
xchg
mov
xchg
inc
mov
rcrl
data16
cbtw
push
je
cld
cmpb
ja
push
test
add
aam
aaa
or
out
pop
push
sub
test
pop
jae
inc
cmpsb
jle
push
mov
mov
aaa
in
in
cmp
pop
jbe
dec
xchg
test
cmp
dec
ret
cmp
or
int3
in
xchg
test
repnz
or
rcpps
pop
or
fcomi
inc
mov
icebp
fbstp
ss
cmpsb
xlat
lcall
mov
cwtl
out
inc
xchg
ja
call
jns
add
sbb
ljmp
lods
stos
and
aas
pushf
ljmp
dec
rorb
push
and
cli
fildl
pop
xor
dec
push
sbb
xor
or
mov
sbb
push
cmpsb
add
lock
dec
imul
mov
or
aam
or
pop
addr16
dec
sbb
lret
inc
cmp
in
mov
out
setp
imul
lret
movsl
push
js
enter
push
adc
pop
in
push
xor
sbb
pop
push
cmc
es
lahf
or
mov
icebp
cmp
int
xlat
das
inc
cmp
pusha
xor
lret
jp
or
cwtl
push
dec
cmc
add
ja
xor
jno
xor
mov
or
in
shl
cmpsl
call
inc
mov
jecxz
test
ficoms
aam
rorb
mov
cmp
xor
cmp
mov
clc
sti
aas
aam
std
sbb
lock
and
fs
repnz
sub
leave
pop
imul
imul
sub
dec
pushf
imul
add
sbbl
xchg
outsb
jl
xchg
movsl
adc
repz
cmp
mov
jl
push
outsl
adc
test
loope
lods
aad
xlat
lcall
insb
cmp
push
sub
pop
mov
or
jmp
jnp
es
xchg
fisttpll
jmp
dec
cmp
or
sbb
sub
and
ljmp
mov
rep
xor
out
mov
push
lea
mov
sub
sbb
jns
mov
psubb
xor
push
lods
adc
into
mov
jg
push
mov
pop
sub
aas
push
mov
adc
inc
xor
dec
ss
mov
iret
xor
cmpsl
xchg
cmpsb
out
jg
add
push
gs
inc
js
mov
icebp
out
loop
sbb
fcoms
fs
jo
cmc
xor
jmp
push
mov
test
and
mov
test
int3
stc
movsb
in
data16
push
cmpsb
js
inc
xor
rclb
pop
vpaddusb
leave
iret
call
test
add
sub
ficoms
and
push
push
add
and
mov
mov
ja
in
and
les
sti
fdivrs
loop
push
dec
loope
stc
aad
pop
and
mov
jl
cmc
mov
cmp
sbb
mov
mov
out
cld
xchg
shll
mov
jecxz
cmp
mov
aad
mov
outsb
sbb
mov
adc
fsub
jl
mov
lods
xchg
call
in
ds
cmp
xor
jmp
test
mov
sarb
pushf
addr16
testb
sbb
push
mov
cmp
test
addl
lret
outsl
push
xchg
inc
inc
enter
cmp
mov
shll
das
mov
cmp
mov
or
xchg
and
xor
testb
popf
pop
cwtl
push
pop
push
fwait
imul
push
aad
pop
call
hlt
mov
icebp
pop
rorl
xor
and
cmp
mov
out
xchg
dec
and
xchg
cld
xchg
scas
xor
cld
xchg
mov
subl
mov
adc
sub
xchg
shlb
ret
cltd
outsb
adc
pushf
jae
sahf
jnp
mov
or
fildll
lea
test
mov
daa
or
pop
push
mov
das
gs
mov
enter
dec
jmp
jae
cmpsb
pusha
mov
out
invd
dec
mov
das
lret
sbb
sbb
insl
jg
in
xor
gs
test
sub
lahf
mov
addl
call
fisubs
loop
out
ret
xchg
jne
jae
shlb
loop
shr
cli
movsl
cmpb
out
xchg
jbe
cmp
dec
mov
ljmp
xchg
or
mov
repnz
dec
std
lahf
outsb
outsl
push
jae
dec
mov
pop
mov
jecxz
inc
sub
gs
dec
push
adc
sub
sbbl
dec
jle
mov
sbbl
and
add
xchg
adc
xchg
sub
es
push
cmp
xchg
jmp
or
mov
jno
inc
inc
inc
cwtl
arpl
test
adc
das
jae
scas
addr16
push
sbb
repnz
sbb
movsb
cmp
shrl
popl
movsb
xor
mov
push
and
push
cli
inc
add
push
idiv
shll
popf
and
in
nop
sub
add
push
lock
xchg
mov
inc
xor
ds
fcompl
xchg
jp
mov
fwait
adc
divl
mov
xchg
xchg
add
jmp
imull
iret
int3
outsb
pop
add
push
xchg
jge
or
pop
aam
and
jp
push
mov
imul
xchg
sub
cltd
add
pop
mov
arpl
lcall
sti
mov
call
and
pop
inc
cmp
jp
cld
imul
cmc
int
icebp
jns
test
pushf
rcrl
scas
hlt
test
push
xchg
loope
stos
pop
add
imul
imul
ret
sbb
cld
xchg
shrd
pop
jno
cltd
mov
sbb
jecxz
jns
or
mov
lds
pop
mov
pop
jb
jb
xor
dec
inc
pop
add
jl
or
repz
sub
add
jbe
pop
mov
and
bound
enter
or
xchg
and
lret
xor
addr16
into
mulb
mov
jg
stos
aas
insl
mov
add
stos
mov
cmp
push
mov
mov
lea
nop
cli
pop
cli
and
inc
repnz
idiv
push
cmp
pop
rcll
add
daa
cmp
test
shl
pushl
jp
xlat
and
lret
arpl
push
adc
iret
mov
fwait
mov
insb
call
shlb
adcl
pop
call
xor
add
cmp
dec
xlat
xor
bnd
ljmp
xor
adc
mov
mov
push
pop
pop
pusha
cmpl
dec
pop
roll
out
inc
jns
mov
dec
repnz
outsl
call
mov
repnz
sar
pop
into
fnstsw
cltd
call
mov
inc
jo
mov
or
sarb
mov
aaa
bound
out
clc
add
push
je
fwait
jg
sbb
sub
rcrb
dec
fs
xor
inc
sub
mov
sbb
cmpsl
add
mov
aam
addr16
lcall
bound
ret
mov
mov
test
push
adc
das
adc
dec
inc
sbb
test
mov
hlt
pop
fadds
int
cmpsb
mov
pusha
sahf
cmp
out
and
leave
add
mov
dec
mov
mov
dec
inc
ja
loope
add
bound
inc
in
fbstp
call
mov
negb
xor
jp
mov
hlt
jbe
inc
sbb
dec
enter
xor
iret
mov
fdivl
fadd
push
cmp
push
lods
data16
dec
shlb
sbb
add
push
daa
rclb
addr16
fstp
mov
fucomip
add
cwtl
push
lods
in
inc
fdiv
ja
xor
enter
lret
xor
nop
rclb
pop
xchg
outsb
rcll
pop
or
and
adc
mov
cmp
mov
cmp
push
adc
rcr
nop
test
pop
pop
fisubl
clc
dec
jmp
cltd
movl
or
ds
fistpll
adc
xlat
das
sub
dec
push
mov
fisttpll
jecxz
and
mov
sub
add
pusha
dec
cmp
mov
addr16
push
insb
jo
imul
cld
repnz
mov
mov
xor
mov
adc
push
mov
sub
mov
jmp
add
cmpsl
test
jge
mov
loope
sub
mov
bound
mov
out
fxch
inc
inc
andl
cmpsb
inc
out
fisubs
and
popa
push
ffreep
xor
dec
loop
jae
movsl
ds
push
jp
leave
and
dec
jns
hlt
pop
dec
fldt
shll
rcll
jl
cld
fstpt
sahf
pushf
add
jecxz
or
xor
jl
push
or
adc
sbb
js
xor
in
arpl
iret
sbb
and
sub
cwtl
inc
imul
test
sub
sar
mov
jo
enter
add
cmp
in
daa
jmp
shrb
mov
mov
xor
adc
xor
out
fists
xor
mov
mov
stc
push
out
rcll
aas
fdivs
pusha
jnp
lds
cmp
mov
dec
inc
fsts
sub
and
jbe
cmp
fwait
aad
inc
and
xor
scas
ds
push
push
adc
add
popa
test
adc
lahf
rcr
and
push
ret
cltd
dec
sub
pop
scas
push
cmpsb
cmpsb
notl
pop
cmp
dec
or
mov
adc
jnp
cwtl
jo
adc
or
cli
ss
xchg
lods
lret
pop
push
mov
int3
mov
fdiv
sub
cld
mov
mov
adc
mov
dec
enter
and
aas
cs
fidivrs
inc
mov
clc
sub
lods
jg
mov
jle
inc
or
xor
adcl
fisubs
andl
aad
je
aas
repnz
hlt
and
ret
aad
ret
sti
adc
cltd
mov
jnp
ffreep
ljmp
js
es
adc
enter
xchg
xor
int3
xchg
dec
mov
adc
pusha
pop
aam
add
and
jmp
mov
mov
adc
jnp
jo
cmp
ja
arpl
xchg
and
mov
aam
pushf
jb
sub
inc
xor
mov
cwtl
notl
mov
inc
add
mov
pop
pushf
jle
jno
mov
ss
mov
stc
outsb
mov
inc
jae
or
inc
mov
sbb
idivl
xchg
out
loop
jge
cmp
add
push
mov
fwait
push
ja
cmpsb
jmp
out
lahf
addr16
pop
test
or
ss
jne
inc
test
aas
jg
jl
dec
roll
xor
out
hlt
jp
dec
dec
or
scas
inc
std
fimull
add
lods
pop
stc
mov
icebp
stc
cli
push
mov
mov
mov
dec
jbe
xchg
jecxz
mov
bound
jno
aaa
xchg
aam
jg
mov
jo
push
cmp
iret
testb
mov
mov
mov
movsl
and
inc
sahf
scas
ja
les
jmp
mov
jns
or
jbe
mov
inc
xlat
push
movsb
mov
mov
xor
movb
das
or
negb
push
stos
aam
push
sarl
mov
mov
hlt
and
xchg
push
push
lret
data16
mov
cli
mov
stc
orl
sti
jnp
push
insl
sub
loope
data16
outsb
sahf
push
cmp
scas
xor
in
imul
xor
jecxz
dec
aas
mov
mov
jecxz
testl
fld
and
push
pushf
movsb
add
mov
cs
das
push
imul
push
imul
add
lods
pop
aam
jb
popf
leave
cmc
push
inc
lcall
cmp
xor
add
ret
xchg
push
fcoml
mov
jo
xchg
sarb
jne
xchg
sub
cltd
or
xchg
push
hlt
ret
mov
lea
lock
into
into
dec
and
iret
dec
pusha
ror
aad
insb
jae
mov
lds
and
test
or
adc
fisubl
mov
adc
addr16
sub
jecxz
mov
movb
repz
ss
sub
mov
push
adc
data16
addr16
cs
xchg
sub
add
sub
jl
std
mov
sub
and
cmp
inc
test
loop
xchg
je
cmp
inc
pop
adc
ds
outsl
arpl
sbb
lds
mov
sub
adc
call
dec
mov
push
push
lret
add
out
or
jecxz
jecxz
add
arpl
decl
cmc
sbb
out
imul
shl
push
lahf
pop
and
mov
inc
fimull
inc
ror
mov
js
clc
push
mov
mov
lds
mov
add
adc
xchg
std
push
push
sbb
pop
sahf
icebp
add
sub
negl
lcall
cltd
push
cwtd
test
bound
das
aas
loop
push
jns
adc
sub
xor
sbb
mov
nop
sub
aad
lret
mov
add
pop
push
jmp
mov
lods
mov
xor
jne
mov
mov
jns
pop
push
iret
lds
dec
rcrl
mov
gs
loope
pushf
cmp
rorb
hlt
arpl
pusha
cmp
cmpsl
or
hlt
ljmp
shlb
mov
sub
imul
cmpsb
jg
xor
cmc
mov
stc
jae
pop
inc
dec
loope
inc
push
mov
cmpb
out
ret
adc
xor
and
jmp
lods
imul
aad
add
push
ror
stos
aaa
push
out
dec
push
in
cmc
imul
fistpl
sbb
mov
lcall
std
inc
jmp
fsubl
inc
in
fldenv
scas
or
cmp
std
mov
push
nop
mov
pop
lret
fsubr
or
imul
pop
fdivl
aam
push
cwtl
or
in
xor
repnz
push
jb
mov
jbe
jno
mov
hlt
add
pop
mov
add
scas
add
or
mov
jo
jnp
adc
ja
ss
jns
dec
hlt
dec
andb
test
stos
mov
daa
ret
out
outsb
mov
scas
jecxz
testl
lret
nop
pop
and
mov
dec
pop
movsb
push
jp
daa
jb
ret
rorb
xor
adc
mov
jl
ds
jle
push
in
jecxz
ja
or
adc
dec
popa
push
repz
ficoms
push
mov
jecxz
jb
lds
dec
or
push
in
mov
lret
shrl
addr16
lds
in
fidivrs
xchg
pop
mov
fld1
pop
insl
mov
roll
idiv
clc
repnz
add
pushf
je
test
les
xor
mov
call
divb
daa
add
mov
rcl
arpl
sub
push
xor
arpl
mov
jg
pop
mov
addr16
hlt
out
mov
xor
mov
std
pop
fisubl
adc
ret
addr16
inc
cs
cmpsl
dec
rcl
lock
fisttpll
fists
or
lret
add
push
out
cmpsb
movsb
mov
push
ja
sbb
dec
lods
sub
push
and
cli
pop
xchg
jmp
jo
or
cmc
lods
loope
mov
mov
lret
fcoml
pushf
sbb
ss
xor
mov
addr16
mov
mov
add
hlt
shlb
ljmp
xchg
imulb
xchg
jae
xchg
cwtl
inc
and
sbb
jo
mov
aaa
mov
add
pop
loope
cmp
adc
adc
cld
adc
stc
dec
xchg
push
std
fmull
popf
add
cmp
cwtl
sbb
mov
out
arpl
push
mov
cmpsl
insl
pop
and
mov
in
in
fs
call
lret
add
stos
xchg
and
sbb
jmp
negb
push
gs
mov
das
adc
and
cli
jmp
push
xchg
imul
mov
inc
test
lods
jl
stos
mov
fbld
dec
out
jg
or
and
lret
inc
mov
in
cmp
dec
push
add
inc
xchg
mov
jae
repz
xor
rcrb
movsb
iret
add
scas
jp
lods
into
mov
jmp
pushf
push
cmp
and
xlat
out
stos
std
scas
movsl
aaa
js
insl
notb
mov
jmp
sub
lret
rclb
pop
shr
outsl
jecxz
or
or
jb
negb
das
adc
scas
xor
stc
or
sbb
sub
shlb
mov
pop
sub
push
insb
inc
adc
jne
movsl
push
xor
test
add
adc
xor
xchg
dec
xor
outsl
loopne
mov
lret
jmp
movl
sub
jecxz
xchg
xor
and
int
sbb
xorl
test
push
mov
push
and
jo
sub
pop
inc
and
fwait
inc
adc
pop
mov
dec
mov
sti
lahf
mov
negl
mov
arpl
imul
ljmp
fdivr
jno
add
adc
rcr
insb
pop
outsl
out
mov
push
pop
pop
jge
enter
push
push
push
pop
dec
popa
adc
mov
or
jo
int
push
divl
and
and
sub
jge
pop
push
xchg
pop
add
sbb
push
jns
stc
imul
mov
jno
mov
sahf
push
push
out
push
pushf
xor
and
jne
icebp
and
dec
divl
and
dec
pop
push
mov
push
xor
sahf
pop
into
and
dec
test
test
add
scas
push
scas
in
dec
adc
in
pop
inc
dec
mov
cmp
jns
nop
clc
adc
ret
int3
mul
jo
in
nop
into
dec
popa
and
cmpsl
sbb
push
into
push
sahf
inc
sub
jg
pop
or
lcall
xchg
or
stos
mov
jns
lcall
adc
icebp
idivl
pop
pop
jbe
or
into
mov
pop
mov
out
rorb
pushl
sub
jns
jp
xor
sbb
scas
mov
cmp
lcall
scas
data16
data16
into
jge
cwtl
mov
add
rcrl
and
pop
jp
push
jae
cmc
jmp
cmp
into
arpl
or
std
inc
add
ffreep
stc
imul
push
sub
notb
push
xchg
mov
jp
test
jge
jle
mov
adc
mov
xchg
data16
adc
xor
ja
aas
orl
mov
pop
or
flds
pop
out
jnp
les
addr16
sub
rcrl
push
xor
mov
cmp
hlt
or
repz
clc
fimull
inc
loop
xor
push
out
mov
xchg
mov
pushf
jl
mov
rcll
cld
mov
jmp
lds
pop
adc
cmp
loop
add
mov
mov
repz
jne
jg
test
dec
or
rorb
stc
rolb
mov
les
cmp
divb
mov
jp
sub
push
aaa
pop
out
dec
xchg
dec
push
rcrb
adc
cmp
cmp
mov
movsb
sti
dec
dec
int3
leave
hlt
push
adcl
ja
xchg
or
cli
push
cmpsb
lods
sti
mov
imul
or
in
jl
test
xchg
xor
jmp
loopne
cmpsb
cmc
imul
sub
jns
sbb
stos
andl
stc
mov
insl
subb
fucomi
popf
repnz
jg
pop
push
scas
das
fwait
jno
jle
hlt
sbb
sub
lock
lds
mulps
xor
sbb
add
mov
lds
repz
fbld
sub
jnp
inc
xor
test
ret
fstpl
cli
ds
jne
or
jmp
ja
and
popf
cli
out
mov
ret
shll
jmp
jle
outsb
es
adc
inc
xchg
movb
int
out
popa
add
lock
mov
pop
xor
sub
fistpl
pop
out
or
in
sbb
mov
mov
xor
mov
push
les
pushf
std
mov
sarl
insb
jge
int3
test
mov
xchg
and
inc
mov
lret
cmp
lahf
addr16
dec
pop
shlb
xchg
dec
int3
in
or
push
inc
sub
jae
and
xor
and
sbb
push
mov
pop
push
stc
in
add
cmp
push
ss
push
jmp
add
sub
pushf
sbb
aad
pop
test
cmc
out
pop
jl
movsl
xor
idiv
out
pop
xor
iret
inc
ljmp
cmpsb
aam
jge
mov
push
icebp
push
inc
lret
in
lock
mov
mov
push
lahf
and
fcoms
bound
xchg
testb
leave
cmp
lods
jle
xchg
add
in
shll
inc
gs
inc
jecxz
test
loop
xchg
sbb
fisttpl
jo
jmp
shlb
push
pop
cmp
jne
std
and
dec
addr16
push
pop
aas
pop
pop
mov
add
into
and
lcall
lds
sbb
or
insb
lods
bound
and
push
mov
icebp
adc
loop
dec
cs
dec
mov
data16
movsb
jg
call
fidivs
cmp
lret
xor
inc
and
xlat
pop
cmp
and
idivb
fnsave
adc
ds
or
clc
xchg
and
imul
shll
pop
lahf
push
pushf
xor
enter
adc
inc
pushf
fs
add
imulb
inc
pop
cmp
hlt
nop
add
pushf
push
sbb
mov
ds
xchg
push
mov
adc
inc
adc
push
xor
and
mov
xchg
fiadds
push
and
inc
das
outsl
push
inc
xchg
mov
xor
sarb
xor
iret
cmpsl
mov
ss
mov
xchg
into
in
stos
cltd
fdivs
push
xor
xor
stos
xor
sbb
pop
adc
scas
xor
pop
jne
push
ret
cmpsb
fwait
or
das
mov
jo
inc
jbe,pt
fs
cmpsl
outsl
cld
and
loope
in
addr16
mov
jge
or
leave
into
in
pop
mov
out
jns
push
mov
and
js
add
ja
iret
aaa
mov
in
enter
pushf
mov
push
dec
or
lret
dec
shrb
cmp
or
jge
inc
inc
or
loopne
sbb
lahf
or
shlb
xor
mov
inc
cmp
mov
inc
pop
sbb
sahf
pop
and
push
fisttpll
jno
jmp
out
inc
filds
das
cmp
xor
mov
mov
fisttpll
inc
loop
sub
out
loopne
lret
push
or
bound
frstor
addr16
mov
inc
jne
fildll
shrb
mov
mov
sti
mov
inc
jbe
dec
dec
mov
cmp
jle
push
ret
lcall
jl
sarl
cmp
add
orb
dec
loopne
ret
dec
jle
icebp
cmp
mov
jb
push
lock
movsl
inc
jae
mov
cmpb
cmc
push
xor
pusha
enter
adc
sti
imul
scas
mov
dec
xchg
lods
adc
mov
sbb
aaa
cmpsb
cltd
xor
mov
push
jb
sbb
pop
stos
push
ljmp
ja
das
pop
popa
sarl
mov
stc
jns
pusha
call
fcomps
xchg
decb
add
in
mov
mov
sbb
jbe
cmp
mov
test
data16
lea
mov
jmp
xor
loop
popa
repz
sahf
push
rcrl
cmp
call
lods
adcb
cmp
cmp
cmp
aad
dec
scas
not
aad
mull
vlddqu
xor
mov
push
pop
cld
fwait
mov
scas
jae
xchg
popa
ljmp
dec
sbb
xchg
fs
std
icebp
cld
jno
aas
lret
mov
fsub
and
mov
in
mulb
pop
add
rcr
jnp
add
push
add
push
xor
cmp
or
add
push
push
xorb
shr
and
int
push
testb
test
daa
hlt
sbb
jnp
fmuls
into
mov
sahf
fimull
frstor
fs
test
repnz
shll
into
xchg
dec
push
mov
aas
mov
mov
push
jnp
bound
in
pop
inc
pop
jp
jp
and
xorb
lds
test
cmpsb
in
cmpsb
push
outsb
dec
lock
add
mov
stos
dec
inc
test
pop
adc
mov
loope
sub
outsl
in
pop
mov
mov
adc
fdivp
xor
push
std
sahf
popa
or
in
shlb
mov
jge
mov
aad
cmp
mov
lds
mov
inc
data16
ret
sbbl
aas
pop
mov
jbe
sbb
dec
adc
insl
cmp
mov
pop
adc
add
or
sub
dec
add
xchg
test
push
xorl
insl
push
fsub
int
jne
out
mov
xchg
mov
fistpll
rorl
arpl
sub
cmp
push
mov
dec
sbb
sbb
jae
pusha
aad
es
xchg
sub
add
in
sub
mov
mov
mov
cli
rclb
push
push
jb
sbb
push
sbb
pop
mov
lods
adc
cli
rcr
dec
pop
and
in
add
rorl
aad
sti
lock
xchg
rclb
shll
aaa
pushf
pop
xchg
mov
cltd
lahf
fisttpll
fidivl
sub
out
data16
xor
pop
inc
add
xor
and
fs
cmc
incl
out
dec
mov
sahf
push
fldt
sbb
lock
cmp
insb
sub
data16
stos
mov
and
mov
xor
les
mov
aaa
lret
fnsave
insb
dec
pop
inc
sub
push
lds
out
stc
pop
jno
pop
repnz
std
inc
mov
push
pop
mov
movl
gs
stos
cmp
test
xchg
jp
jp
in
loopne
ret
mov
and
loop
cwtl
testl
clc
pop
sub
int
mul
les
imul
ficompl
test
sub
int
mov
sti
lret
xor
add
ret
fs
lcall
mov
cwtl
xlat
dec
lahf
imul
scas
fs
pop
fidivs
add
fs
or
and
mov
sti
aad
ja
pop
sub
pop
xchg
mov
mov
pop
aad
sub
mov
aad
in
xor
loope
cs
hlt
push
cld
pop
int
mov
xchg
sub
jbe
adc
lret
cs
popa
roll
es
je
sub
sti
xor
cltd
sub
popa
sub
add
cmpsl
cmp
out
pop
fnstcw
mov
push
lret
sti
or
and
ret
leave
pop
test
into
pop
add
pop
jb
hlt
insl
hlt
or
pop
fistps
aaa
rcll
adc
mov
cmpsb
xor
jp
out
ljmp
mov
lcallw
leave
sti
rcrl
sbb
add
std
mov
mov
adc
shll
outsb
sub
lods
or
add
cmp
adc
cltd
sbb
lcall
mov
pop
jnp
inc
adc
lret
sbb
push
mov
rorb
or
mov
dec
in
push
inc
jp
das
mov
inc
aad
sbb
push
push
icebp
clc
bound
data16
and
pop
jbe
mov
xchg
dec
jmp
mov
cltd
scas
add
ret
or
and
jecxz
mov
fidivs
ja
imul
dec
dec
adc
sarl
fimull
fwait
movl
add
xchg
lds
cmp
out
push
adc
push
push
pop
js
jnp
sbb
sbb
pusha
cmp
ja
fstps
push
pusha
mov
mov
cmpsl
lods
mulb
lret
in
jp
fbstp
xchg
loopne
mov
xlat
pop
cmp
push
mov
fldenv
mov
add
xchg
scas
insb
add
fdivl
inc
loopne
loopne
push
dec
test
daa
je
jl
xlat
adc
clc
sub
and
inc
inc
adc
adc
xchg
xor
cmp
inc
in
insb
imul
jns
xor
push
mulb
jmp
fdivrs
push
cwtl
lcall
mov
sub
call
leave
in
jmp
xrelease
xor
test
inc
das
mov
out
out
sbb
test
aaa
push
mov
xlat
fimull
pushf
mov
nop
out
jb
pop
int
dec
dec
jg
add
dec
mov
arpl
xchg
repz
jbe
ficoml
psubsw
leave
and
sbb
dec
inc
xchg
lock
imul
adc
js
xchg
adc
inc
popa
inc
adc
jae
mov
jge
xchg
xchg
mov
rcrl
jl
scas
icebp
jbe
mov
pop
add
roll
call
icebp
mov
divb
leave
xchg
fstpl
mov
pop
push
mov
mov
lcall
fstp
js
js
loope
stos
enter
lcall
stc
or
hlt
jnp
xor
scas
pop
pop
adc
imul
insl
xchg
jle
call
sbb
sbb
loopne
sar
xchg
xlat
aaa
lds
pop
push
add
movsl
sarb
faddl
push
imul
mov
adc
dec
hlt
int
mov
mov
lcall
mov
aaa
cmp
sub
hlt
pop
sbb
pop
sub
loope
and
sbb
jg
int
xchg
test
in
mov
and
and
lods
pop
sarl
push
aas
pop
xchg
cmp
es
out
xlat
push
cmp
or
stc
sub
push
xchg
sub
rolb
push
and
movsb
lea
shlb
cmpsl
aad
js
pop
dec
cmp
out
bound
ljmp
rep
add
xchg
adc
dec
xchg
stc
mov
mov
pop
and
xlat
int3
std
cwtl
cmp
adc
or
adc
js
sbb
ljmp
out
das
lds
scas
and
xor
fdivrs
shll
xor
nop
rcll
repz
add
mov
mov
stc
hlt
inc
mov
in
inc
mov
fidivrl
outsl
adcl
int3
cmpsb
add
push
popf
lcall
gs
mov
lods
xchg
std
push
shll
pop
pop
mov
jecxz
jl
aad
pop
push
pop
sub
fcomps
bnd
mov
jp
inc
aad
out
mov
cmp
pop
out
inc
pop
xor
inc
sbbl
test
mov
xor
mov
dec
adc
jle
mov
pop
xor
pop
pop
mov
xor
push
or
ja
pop
inc
xor
sbb
xchg
lret
cs
xor
imul
stos
xchg
mov
adc
xor
test
mov
scas
cmp
call
fwait
xlat
repnz
cmp
push
mov
push
outsl
pushf
call
and
push
out
lock
xor
and
sub
subb
aaa
fiaddl
rcrb
cmp
inc
xor
and
dec
cmp
jmp
mov
inc
in
mov
sbb
xchg
aam
iret
call
icebp
enter
mov
jno
xor
ljmp
cmp
div
cmp
mov
cltd
push
mov
jle
mov
add
ret
stos
rcl
pop
push
je
cmp
sub
sbb
inc
push
sbb
jecxz
int3
mov
mov
xchg
jl,pt
fcmovnb
xorb
scas
imul
lods
fwait
adc
push
xchg
jg
pop
movsb
push
push
and
es
inc
jb
or
push
subl
mov
cwtl
mov
ja
adc
cmc
scas
mov
fisubrl
loopne
mov
rclb
add
adc
fistpl
je
fidivs
xchg
adc
cmp
push
fwait
dec
pop
les
loop
or
shll
lock
bnd
mov
inc
dec
insb
mov
sub
fldl
mov
in
push
sbb
mov
fwait
adc
or
outsl
in
ret
jnp
mov
cwtl
xor
cmc
gs
sbb
daa
lods
jbe
sbb
icebp
cltd
mov
inc
sub
inc
mov
clc
mov
mov
pop
out
cmc
testl
ret
loop
xchg
sub
mov
xchg
inc
inc
pop
mov
jl
dec
pop
roll
stos
or
repnz
ja
cs
pavgw
ljmp
or
add
dec
fsubrl
scas
arpl
cwtl
cmp
cmp
mov
subb
mov
mov
out
cmp
insb
mov
gs
roll
insl
movsb
stos
std
add
fdivrs
jnp
xchg
dec
lahf
mov
pop
cli
push
sub
out
push
and
xchg
pushf
decl
fcoml
sti
lock
fisubrs
loopne
or
hlt
roll
pop
movsl
mov
gs
xchg
int3
inc
sbb
sbb
sub
and
inc
adc
add
jns
dec
jbe
scas
cli
cmp
adc
rolb
insb
adc
xor
sub
sarl
sbb
icebp
mov
mov
ret
and
sub
pop
je
insb
mov
stos
and
fld1
jp,pn
mov
push
arpl
bound
loopne
xchg
sub
fimuls
out
sub
adc
or
nop
insl
pushf
loopne
ljmp
insb
push
mov
sarl
xor
xchg
pop
and
and
fcoml
lods
cmp
mov
sti
add
or
push
mov
scas
fstp
lds
mov
dec
cli
das
cwtl
push
mov
jns
stc
and
add
cmp
cmp
sbb
filds
pop
mov
lea
fwait
xchg
cli
mov
push
imul
and
mov
dec
xor
out
cli
pop
rol
pop
dec
inc
scas
push
movsb
fstl
mov
xchg
fcomi
xlat
aad
cmp
dec
mov
lret
imul
mov
cltd
stc
insl
lea
arpl
or
xorb
rorb
xor
add
ret
add
xchg
cltd
rorb
bound
scas
xchg
sbb
xor
and
sbb
jne
xchg
and
cs
mov
xchg
lods
push
test
inc
pushf
add
jmp
mov
mov
cmp
mov
inc
ret
cmp
inc
xor
and
pusha
cmp
add
cwtl
xor
and
mov
jne
push
das
jge
popf
aas
dec
sub
cmp
inc
inc
add
insb
inc
shlb
push
dec
cmp
rolb
xchg
call
cmpsl
es
mov
scas
mov
sub
in
pop
js
push
ljmp
leave
imul
mov
mov
orb
cmpsl
ja
sbb
sbb
dec
out
out
dec
mov
pop
xchg
mov
cltd
add
cmc
sub
ds
jge
xchg
xchg
int
cmpl
inc
scas
pusha
mov
pop
sbb
and
les
loopne
or
inc
sub
leave
daa
sub
and
push
pop
cmp
jg
mov
mov
xchg
or
push
stc
ret
daa
add
adc
sbb
fldl
xor
cwtl
test
and
mov
jo
sub
fidivs
lods
and
mov
ss
pop
iret
or
inc
mov
sbb
xor
call
xor
lret
mov
outsb
fcmove
push
sbb
call
imul
ret
andl
inc
add
js
xchg
test
ljmp
out
addb
jecxz
adcb
and
adc
xor
jl
fisttpl
xchg
pop
daa
xor
pop
sti
fiadds
inc
rorb
mov
sahf
adc
add
add
dec
in
gs
jge
gs
testb
xchg
lret
jne
fisubrl
incl
in
xorl
xor
inc
test
jg
addr16
cmp
push
repnz
pop
jns
mov
mov
fldenv
in
adc
xor
movsb
outsl
aam
pusha
sbb
bound
adc
mov
int3
or
mov
adc
push
xchg
inc
scas
pop
stc
inc
mov
int
mov
and
sbb
lret
ja
bound
repnz
mov
pop
or
ljmp
ds
xchg
std
sbb
test
stos
insb
jno
cmp
sub
or
stos
int3
sub
and
adc
call
mov
sbb
mov
push
inc
adc
add
orl
xchg
std
ja
popw
lret
lahf
mov
dec
jg
push
xchg
sub
es
lods
movsb
push
dec
jo
cmp
inc
aas
push
test
popa
dec
xchg
xor
xor
inc
andl
pop
mov
cmp
xor
dec
clc
sbb
outsl
outsl
test
push
push
inc
lods
lods
adc
pusha
loopne
outsl
sub
fsubrp
aam
inc
das
xchg
scas
pop
or
fs
mov
dec
and
sbb
pop
ljmp
adc
xor
cmpsl
leave
xchg
or
jno
fwait
dec
add
sub
sbb
data16
nop
repz
push
mov
mov
int
cmp
add
dec
sti
test
in
push
xchg
jmp
imul
jle
cmc
inc
dec
iret
sub
push
cmp
scas
sub
pop
jecxz
inc
sub
mov
movsl
cmpsb
push
out
int
sub
jg
jecxz
imul
mov
mov
int3
add
cmpsl
cmp
insb
jl
pop
pop
out
fistps
xchg
sub
mov
mov
iret
push
icebp
shlb
cmpsb
pop
mov
push
sbb
mov
xor
and
data16
push
jnp
cmp
and
in
mov
icebp
mov
dec
insl
in
adc
test
fimuls
inc
lds
xchg
lcall
xchg
push
dec
inc
test
outsb
inc
sti
push
in
shll
sti
int
or
xor
adc
pop
push
cmc
sahf
je
push
ret
add
mov
mov
jecxz
mov
paddb
mov
inc
out
lcall
mov
out
jl
cmp
insb
mov
mov
inc
imul
popa
mov
scas
js
orl
adc
movsb
and
or
sub
ds
xchg
out
or
aad
adc
dec
addl
fildl
adc
js
jle
sahf
loopne
adc
outsb
pop
fildl
inc
test
jb
js
jno
jp
jnp
push
mov
aam
xchg
sub
push
sub
in
divb
mov
lcall
es
fstpt
shrb
xchg
ret
das
std
shlb
mov
jno
out
inc
add
sbb
dec
push
pushf
pop
insl
mov
jno
push
jo
pop
bound
inc
mov
dec
cmpsb
sub
jb
mov
fidivrl
xchg
cli
iret
daa
sbb
inc
in
push
inc
stc
inc
sub
in
dec
out
jns
inc
pop
jecxz
mov
das
and
pop
mov
xorb
lahf
cwtl
fdiv
mov
dec
push
jmp
mov
sbbb
leave
push
scas
cmp
mov
sbb
insb
jae
mov
inc
sbb
cwtl
sahf
add
mov
ljmp
jmp
in
rorb
xor
mov
repnz
cmpsb
mov
adcb
jae
pop
inc
insb
or
stos
mov
mov
nop
into
mov
cld
js
xor
leave
inc
jmp
fnstcw
loop
mov
in
add
fcompl
clc
hlt
push
adcl
mov
and
ret
aaa
xchg
fcomip
test
mov
jge
sbb
mov
das
and
cmc
sub
add
loopne
mov
fsts
lea
js
cmp
lcall
test
repnz
cli
mov
push
push
lret
adc
adc
fildll
add
cwtl
add
cmp
out
in
dec
or
mov
push
outsl
jb
pop
mov
dec
ljmp
dec
lods
mov
scas
push
push
clc
and
pop
mov
push
dec
jmp
and
insb
push
lods
rorl
call
xor
xchg
repnz
out
mov
bound
js
pop
je
mov
cmp
clc
xor
cmpsb
into
pop
mov
ljmp
sahf
test
cmp
test
mov
inc
and
sbb
push
adc
jnp
ret
or
mov
jp
sbb
inc
mov
xchg
sub
ret
adc
push
test
jb
mov
adc
push
dec
inc
xor
stos
clc
cmpsb
fwait
popl
or
lock
inc
addl
push
out
testl
shll
out
jo
jecxz
andl
std
es
outsl
dec
dec
xchg
mov
clc
push
sbb
xchg
movsb
lahf
outsl
test
cmp
inc
push
mov
cmp
mov
push
cmp
leave
push
test
jnp
xchg
adc
or
out
push
imul
into
icebp
jne
mov
jns
xchg
and
add
loope
mov
popf
and
sbb
outsl
mov
lea
fisubs
sti
cmp
jne
std
and
jae
adc
ficomps
ss
jae
andb
mov
push
xchg
push
adc
movsb
pop
adc
ret
mov
xor
xor
std
lret
les
fcoms
sub
dec
outsb
and
adc
test
pushf
mov
pusha
in
xor
dec
inc
dec
int3
sub
fildl
icebp
push
pop
jnp
xor
mov
ret
fistl
lock
scas
test
pop
repz
push
or
dec
pop
loope
divb
xchg
inc
sbb
pop
loope
push
enter
pop
aas
inc
push
add
jo
lahf
outsb
cltd
push
cmp
pop
loop
cmc
addr16
fiadds
clc
lret
jns
lahf
cmp
mov
les
mov
call
int3
mov
mov
rorb
sub
aas
sub
fldt
push
mov
or
mov
int
dec
pop
mov
imul
lods
insl
inc
jmp
roll
mov
sbb
mov
bound
je
stos
icebp
lret
je
jmp
ficomps
pusha
es
mov
in
pop
or
inc
mov
or
ljmp
lret
jp
lcall
push
aam
push
clc
jmp
sbb
xor
adc
roll
imul
pop
in
xchg
add
cld
cwtl
xchg
imul
pop
cli
pop
mov
std
out
mov
fldl
mov
dec
mov
inc
mov
jle
xor
mov
adc
mov
dec
sbb
in
scas
mov
lods
inc
std
pop
loop
test
insl
pop
inc
scas
bound
add
inc
out
pop
fstl
jle
xor
outsl
inc
pop
ffreep
pop
mov
popa
mov
das
cmc
adc
cmp
out
mov
mov
fcmovnu
scas
cli
jae,pt
sarb
in
xor
movsb
fldenv
cli
pop
outsb
and
in
inc
stc
out
dec
movsl
mov
leave
rol
sbb
loop
adc
or
jns
push
jle
jbe
faddl
cmp
adc
pop
in
out
push
cltd
xor
mov
mov
add
dec
jbe
xor
dec
loope
cmp
lods
mov
jae
ljmp
pusha
in
in
sahf
stos
and
mov
pop
mov
jle
loope
or
inc
lods
popf
mov
shlb
or
leave
mov
fistpl
icebp
push
ret
cmp
movsb
inc
lcall
sub
add
inc
mov
inc
std
dec
mov
push
or
in
jnp
js
je
sbb
mov
scas
adc
mov
test
adc
lds
xor
sub
inc
fwait
pushf
cmp
mov
sarl
loop
stos
dec
mov
xchg
sub
push
outsl
loope
pop
fpatan
jnp
mov
inc
push
add
or
mov
aad
and
data16
movsb
int
in
mov
pop
mov
enter
lock
sti
cltd
xorl
into
add
test
cld
pop
sub
ljmp
idivl
add
clc
iret
mov
jle
jmp
mov
hlt
sub
xchg
sub
pusha
pop
cmc
xchg
push
xchg
sbb
mov
adc
push
ret
fisttps
jl
add
sub
adc
xor
xchg
loopne
mov
jge
scas
push
inc
cmpsl
push
test
pop
push
aam
loop
movsl
js
out
lods
jno
pop
sub
shlb
xorb
std
sub
cld
dec
push
fiaddl
addl
jg
adc
lods
test
arpl
popa
pushf
test
int3
jmp
xchg
roll
repz
repnz
push
movl
mov
outsb
xor
sbb
xchg
adc
push
mov
cmp
xor
xchg
jg
xor
dec
mov
enter
mov
jb
movsb
mov
inc
movntq
enter
or
lret
stc
push
adc
sahf
ret
or
adc
inc
sbbl
iret
sbb
jmp
and
sbb
or
xchg
fidivl
stos
xchg
aad
jle
mov
inc
lret
jne
imul
ljmp
mov
aas
mov
in
sbb
dec
inc
mov
lock
adc
or
mov
xor
roll
sub
cmp
sub
repz
push
sbb
lea
cmp
lock
sbb
ja
jge
rcrl
sar
inc
jl
sbb
sti
adc
adc
mov
into
push
xor
int3
mov
sbb
mov
inc
iret
mov
icebp
sbb
ffreep
cmp
into
js
pop
into
pusha
rorl
jmp
out
cli
ret
movl
dec
push
or
inc
dec
add
adc
loope
outsl
xchg
mov
cmc
pop
mov
xchg
aaa
insl
lcall
mov
pop
inc
xor
cli
and
lods
sar
je
imul
nop
mov
jle
mov
in
shll
push
out
or
mov
cld
jbe
ljmp
push
pop
jp
jnp
icebp
lahf
xor
pusha
test
jmp
xchg
cltd
les
push
xchg
jae
jp
filds
ljmp
ds
pushw
xchg
ds
sbb
lods
xchg
mov
addr16
sub
mov
daa
pop
pop
xor
push
out
jbe
jge
lds
subb
cmp
adc
std
popa
push
sub
rclb
mov
adc
mov
dec
aas
movsb
std
mov
iret
mov
popa
cs
imul
iret
push
fwait
ljmp
pop
sub
shrl
movsl
push
icebp
pop
cld
out
bound
fdivrs
sbb
sti
xchg
cmp
pop
mov
lds
insb
fs
inc
andl
mov
sbbb
xchg
push
lret
int
jge
mov
iret
ds
cmpsb
das
shlb
xor
stos
addr16
xchg
mov
sub
fisubrs
xchg
jg
cmp
mov
sub
and
xor
and
lods
mov
inc
lcall
xchg
pop
xchg
pop
jecxz
jbe
testl
cmpsb
aam
mov
data16
lret
cmp
roll
jmp
mov
cmp
jnp
cmp
stos
mov
jg
xor
mov
mov
mov
addl
cltd
fucom
les
or
fimuls
out
sub
test
int
and
pop
loop
pop
mov
jbe
mov
imul
xor
sub
lock
pop
cmp
sbbl
fsubp
movl
mov
xchg
lea
dec
je
pop
pushf
jbe
sarl
popf
shlb
outsl
dec
sbbl
pop
pop
lret
popf
ljmp
push
mov
cmp
cmp
ficompl
cmp
mov
jb
add
inc
adc
into
insl
enter
test
xor
pop
dec
daa
add
or
icebp
test
dec
xor
cmp
sub
pop
push
or
aas
adcb
cmpl
sub
xchg
inc
arpl
jno
push
aaa
mov
fdivp
cwtl
push
loopne
mov
jae
icebp
xor
iret
xor
xorl
sbb
xor
loop
adc
loop
inc
pop
cmp
jo
addr16
jg
sub
in
jge
imul
mov
jmp
and
sub
and
fimuls
or
or
jo
fists
rclb
aas
cld
outsl
xor
cld
iret
pop
dec
pushf
clc
push
imul
and
inc
into
out
sbb
aad
jecxz
mov
sbb
cwtl
add
mov
sti
ss
mov
test
in
dec
jecxz
sarl
jecxz
xchg
xor
sti
roll
mov
push
adc
cwtl
inc
sub
cs
and
adc
fcomip
xlat
outsb
sub
data16
sbb
push
pop
fisttpll
pop
test
shrb
add
mov
and
loop
mov
xchg
rclb
test
xor
pop
sbb
add
lret
and
cmp
cmp
xor
insl
ret
mov
ror
aam
enter
into
inc
jo
ret
fisttpll
cmp
shlb
enter
in
sub
mov
or
cmc
jae
ja
add
leave
leave
jl
icebp
ds
sbbl
cmp
scas
xchg
fcmovu
cs
fdivp
scas
flds
cmp
std
popf
mov
movsb
mov
test
ret
xchg
lock
pop
int
push
xor
repz
push
sbb
data16
jge
xorb
jg
es
fcmovnb
pop
cs
inc
lret
inc
pop
daa
inc
push
ds
and
aaa
faddl
sbb
movsl
ljmp
bnd
push
mov
rcl
addr16
xlat
add
fiaddl
adc
sub
sbb
std
shld
sub
movsl
dec
xchg
mov
jnp
and
jne
xor
mov
mov
inc
or
xchg
dec
test
xor
or
jle
std
les
push
outsb
mov
xor
mov
adc
dec
adcb
rol
pop
fcmovu
mov
pop
andl
or
fcmovbe
ja
ret
shrb
adc
mov
in
cmp
clc
push
aaa
jne
aam
jns
pop
filds
mov
mov
pop
cli
ror
adc
inc
jo
fdivrl
repz
cmpsl
push
push
mov
inc
push
mov
and
pop
fisttps
sbb
xchg
cwtl
cmp
cmp
cmp
aad
xchg
sub
mov
push
pusha
cwtl
fwait
mov
jecxz
mov
nop
int
movsl
movsb
lods
insl
call
jno
sbb
dec
add
mov
aam
pop
push
imul
push
adc
test
jns
scas
imul
out
push
sub
mov
imul
xor
fs
test
jmp
inc
push
enter
mov
int3
rol
add
jp
mov
dec
fidivs
insl
hlt
dec
loopne
xor
mov
jp
ss
mov
xorl
mov
xchg
daa
inc
mov
push
mov
jns
pop
aam
repz
stos
xor
scas
sbb
sbb
orb
loopne
add
repz
pop
adc
mov
inc
xlat
xchg
sbb
addr16
cld
neg
and
sbb
movsb
and
out
jg
inc
adc
outsb
push
in
push
cltd
leave
sbb
add
mov
adc
subl
stc
jecxz
sahf
fcomi
fcoml
xor
lock
jno
or
xchg
add
insl
and
adc
std
push
fistps
mov
cs
inc
insl
lea
mov
jg
aas
mov
mov
call
out
mov
mov
fs
jmp
and
push
sub
rcll
xchg
shll
shrb
enter
cmc
add
and
insb
mov
lds
push
add
or
adc
call
inc
pop
lcall
les
sbb
dec
xor
pop
push
les
add
sub
push
or
sbbl
cmp
and
outsb
or
dec
sbb
loopne
jne
cmp
scas
jmp
jb
cld
stos
xchg
mov
pop
jmp
sahf
push
ffree
inc
jbe
xor
push
inc
cmp
call
call
mov
jge
cmp
xor
cmc
stos
jmp
subl
push
fst
out
pop
add
repnz
lds
repz
call
int
int
jmp
loopne
push
push
sbbl
adc
pushf
sub
sbb
cmc
xchg
mov
dec
out
lock
movsl
jmp
lods
shrb
pop
lds
ficoms
ljmp
test
fisubrl
insb
add
incb
stc
in
mov
test
xorb
stos
aad
lahf
mov
jno
ja
out
in
data16
nop
mov
and
test
mov
sar
inc
movsb
in
call
jnp
push
mov
in
jge
lcall
xchg
je
daa
and
int3
in
inc
push
mov
mov
inc
inc
mov
or
cmpsb
and
xlat
repnz
mov
out
mov
ljmp
je
fwait
out
dec
roll
and
rclb
mov
cltd
xor
push
andl
xchg
or
adc
dec
shl
rorb
mov
cmp
std
sub
lock
push
dec
adc
cmp
loope
shlb
sub
mov
xchg
xorl
sbb
sub
ljmp
push
scas
outsb
mov
cmp
mov
jo
or
sub
arpl
push
sub
stc
imul
shl
cmpsl
in
cmp
test
xchg
dec
xchg
out
bound
xor
dec
aam
cmp
jmp
or
sub
mov
and
push
jecxz
mov
iret
mov
pushf
dec
pop
mov
loope
cli
xchg
pop
xchg
push
aas
jne
aaa
xchg
dec
xchg
mov
int
mull
jmp
out
adc
dec
adc
pop
sti
and
pop
lret
xor
ljmp
cltd
pop
gs
jns
fstps
sub
dec
pop
inc
fmuls
adc
pop
mov
jle
ficomps
leave
mov
leave
xor
push
enter
dec
movsb
test
xchg
loopne
addb
jno
arpl
jmp
imul
cmpsl
imul
rcrl
xor
bound
push
nop
jnp
jbe
nop
mov
xchg
call
jns
and
roll
cs
inc
lea
stos
ljmp
mov
inc
mov
xchg
pop
mov
dec
out
xchg
cld
cmpsl
sbb
fyl2xp1
and
dec
mov
popf
xor
test
cwtl
int
sahf
sub
sub
sub
clc
xor
lods
xchg
jecxz
xchg
jns
scas
cmp
cmp
lcall
jnp
fwait
dec
push
mov
mov
fwait
push
mov
fnsave
adc
sbb
add
lcall
jmp
dec
les
jns
test
and
pop
cmpsb
mov
sbb
add
push
daa
dec
in
out
ret
ja
aam
mov
add
fimull
test
jg
push
mov
sti
mov
int3
es
cli
mov
pop
cmp
pop
cs
pop
lods
in
sbb
insb
push
rcr
hlt
mov
mov
lock
movb
mov
mov
pop
pop
push
int
gs
or
mov
adc
int3
repnz
jp
xorb
movsb
std
imul
loope
das
shll
mov
dec
rorl
adc
xor
adc
mov
dec
add
pop
sub
sbb
loop
sahf
testl
mov
subb
adc
call
and
dec
daa
push
jno
push
pushf
inc
cmpsl
jnp
and
dec
jmp
fwait
aas
aas
aas
orb
mov
push
mov
outsl
jnp
mov
aam
mov
xchg
adc
pop
inc
dec
jmp
test
dec
jecxz
nop
adc
fldcw
test
and
and
push
dec
lret
adc
jo
add
mov
jp
jmp
rcrb
pop
popa
cs
adc
lds
hlt
sbb
shrb
pop
push
dec
and
sarl
cs
xchg
fisubrs
pop
sahf
jb
in
test
pushf
mov
push
or
or
jb
jl
pop
in
jge
xor
or
inc
fcomps
jns
mov
imul
xlat
mov
inc
test
ljmp
cmpb
dec
out
mov
ss
and
cli
lds
mov
loop
dec
test
clc
or
lea
or
xchg
mov
push
shll
add
sub
das
int3
test
fimull
ja
aam
cltd
xchg
adc
icebp
jl
aaa
inc
push
mov
xchg
mov
mov
outsb
xchg
lods
or
adc
inc
jp
push
and
inc
jle
pushf
jl
test
in
xchg
popf
sbb
shlb
cwtl
es
insb
mov
rep
xchg
les
leave
ret
test
lret
xchg
push
enter
adc
push
in
push
inc
mov
sub
adc
push
pop
dec
push
push
or
aas
jb
lock
loop
loope
xchg
push
and
xchg
xor
out
dec
imul
pop
xor
mov
push
lcall
xchg
xor
out
dec
inc
std
lret
mov
adc
enter
or
push
pop
mov
sarb
pop
lahf
out
dec
adc
sbb
je
and
mov
push
xlat
or
daa
int
mov
and
filds
repz
jecxz
or
cmp
xor
adc
lret
mov
mov
add
add
mov
sbb
in
lcall
xor
dec
call
xlat
ror
cld
mov
add
mov
cmp
insb
lahf
test
mov
imul
insb
push
and
sahf
mov
test
xor
mov
adc
xor
add
mov
xor
push
das
adc
pop
int
xor
lods
je
jo
xor
mov
jmp
mov
ret
in
lahf
jnp
jg
and
in
movsb
das
scas
adc
jmp
xor
sub
mov
cmp
setno
out
movsl
jp
out
in
adc
dec
icebp
sub
loopne
stos
sahf
push
mov
mov
add
mov
fbstp
jns
stos
or
pop
fistps
xchg
hlt
mov
push
call
xchg
add
gs
sbb
daa
xor
inc
out
jb
in
incl
push
mov
rol
out
lret
sub
jmp
jb
lock
lods
idivb
inc
cmc
gs
xor
loopne
push
or
jb
orl
pop
push
jg
cwtl
loop
or
and
inc
inc
pop
cmp
lea
inc
dec
hlt
mov
jb
dec
inc
pusha
and
xorb
lret
jns
inc
test
xor
loope
xchg
dec
les
mov
out
or
in
cmp
jmp
lret
jl
adcb
je
add
xchg
dec
mov
and
sub
inc
fcoms
cmpsb
aad
sahf
ds
mov
in
call
les
jge
sbb
and
lods
xchg
sub
stos
andb
fisttpll
sub
or
cmc
out
cmp
ljmp
adc
lods
push
out
mov
xor
and
mov
sub
and
in
or
mov
and
je
int
loop
cli
fsub
and
xchg
filds
lcall
add
inc
clc
mov
stos
mov
sahf
fwait
xchg
xchg
hlt
leave
sbb
add
jbe
mov
jno
pop
add
mov
jecxz
out
fidivs
pop
jmp
ds
outsb
addr16
jmp
lret
cmp
outsb
leave
mov
test
cmpsb
mulb
sub
push
mov
test
or
test
fucomp
popa
cmpl
pusha
daa
mov
fmul
push
outsb
notb
sbb
bound
xchg
cmp
data16
xor
shlb
jne
adc
jmp
cltd
push
jns
xor
xor
lods
lret
cld
jle
pop
ja
and
mov
dec
movsl
add
sub
inc
gs
scas
in
pop
fstpt
mov
jmp
pop
lret
imul
sti
fildll
sahf
stos
pushf
scas
les
out
enter
imul
mov
pop
in
cmp
dec
clc
rcrl
fwait
aam
push
mov
add
xor
scas
mov
fidivrl
add
and
dec
xchg
mov
jbe
rorb
pop
aam
xchg
jg
lds
sub
lret
xor
cmp
mov
mov
orl
add
or
pop
loopne
sub
movl
in
shl
test
jnp
mov
das
pop
and
stos
and
xchg
mov
je
jbe
mov
les
test
lods
loop,pt
push
and
pop
sbb
cmpsb
mov
cmp
lahf
inc
in
incb
ss
mov
jno
inc
jno
inc
xor
add
std
int3
cmp
orb
xor
cmpsl
shll
sbb
push
and
inc
ds
xor
test
loopne
jp
sbb
popw
cmp
push
or
jp
jmp
lock
mov
xchg
push
adc
test
shrb
test
fwait
sarl
bound
test
outsb
jnp
mov
lcall
negb
mov
mov
push
fidivrs
mov
rol
insl
daa
shrb
das
xchg
add
daa
xchg
fwait
jmp
fwait
xchg
enter
or
dec
aad
jmp
das
fnstenv
and
adc
and
sbb
sti
xor
ficompl
pop
movsb
push
jo
jns
xchg
out
mov
dec
orl
jl
jbe
mov
lods
dec
mov
adc
int3
daa
cmp
notb
dec
xchg
or
lods
int
adc
push
and
mov
in
cmc
testl
adc
push
dec
ret
xchg
sub
jecxz
je
repz
mov
jmp
dec
cmpsl
xchg
repz
push
icebp
popf
iret
xor
clc
dec
inc
jne
orb
mov
mov
inc
fmull
xchg
and
insl
mov
and
or
sbb
jecxz
or
push
lods
icebp
fists
pop
inc
pop
test
in
inc
push
daa
or
int
or
pop
arpl
mov
jle
mov
stos
cmp
mov
leave
or
mov
xchg
stos
decl
xchg
sub
ret
xchg
jp
addb
cmpsb
popa
cmpb
and
movsb
pop
jae
sub
movsl
mov
sbb
cld
add
and
imul
lea
dec
dec
add
test
ja
dec
jbe
jnp
ja
fisubrs
xor
inc
lahf
pop
cltd
shrl
ljmp
and
inc
out
pop
push
cwtl
dec
dec
inc
cmp
adc
fcomp
mov
les
in
dec
pop
stc
pop
out
rorb
mov
mov
gs
loop
xrelease
popl
jle
les
and
aas
xchg
cmpsb
inc
sub
jo
sti
pop
xor
call
mov
aam
mov
cmp
mov
mov
xor
ss
pop
fildl
dec
mov
xorl
sbb
rcr
xchg
xchg
loope
fiadds
xchg
sub
xchg
roll
xchg
aad
or
and
sub
stos
sbb
and
sub
xor
cmp
ds
les
or
pop
fdivs
adc
cmpsb
push
dec
cmpsl
dec
loope
lret
sbb
xor
out
or
adc
dec
cmpsl
adc
mov
or
lods
stc
xchg
rcrb
lods
ror
dec
push
pop
imul
xlat
dec
ss
cs
inc
add
or
jmp
ds
ljmp
pop
insb
xor
lds
clc
inc
mov
scas
lcall
cltd
lahf
or
test
push
divb
pushf
shll
test
aad
jne
inc
sbb
sub
cmpsl
pop
shlb
jno
loop
or
xor
push
out
out
inc
imul
mov
test
mov
xor
mov
cld
out
or
pusha
lahf
add
jecxz
arpl
test
fwait
cld
icebp
or
sub
jecxz
imul
cmp
adc
pop
xor
sub
iret
fimull
scas
pop
outsb
xor
std
stc
lods
mov
or
lcall
pushl
lods
mov
pop
addr16
test
loop
push
mov
mov
push
mov
mov
push
ficompl
xor
pop
and
or
xchg
idiv
lods
xor
dec
lahf
add
inc
imul
jge
xlat
sub
sbb
or
mov
adc
popa
aam
cmpsl
xchg
xor
jp
fidivs
jo
out
push
and
addl
adc
adc
movsl
pop
push
pop
pop
cli
pusha
xchg
push
test
mov
cmpsb
pop
lret
jecxz
cs
cmp
in
add
dec
repz
jp
addr16
ds
sub
stc
mov
hlt
pop
dec
call
std
xor
frstor
out
and
inc
in
pop
pop
imulb
mov
adc
push
cmpsb
hlt
imul
test
scas
in
add
cmp
sbb
sarb
dec
xchg
in
jo
popf
mov
pop
cmp
lea
jno
and
lret
add
loope
call
jb
and
iret
inc
dec
inc
repnz
and
fwait
xchg
fdivrl
mov
add
in
pop
insb
pop
clc
orb
jmp
jmp
repnz
jmp
xchg
fildll
out
push
ja
push
jle
fimuls
inc
add
jle
add
repnz
dec
push
es
shlb
imull
js
xor
pop
aam
out
mov
insl
xor
xchg
testl
dec
dec
xchg
in
dec
out
ss
cmp
xor
stos
ret
cmpsb
push
dec
inc
mov
push
out
pusha
stos
jle
cmpsb
adc
sbb
sbb
or
cld
mov
lahf
pusha
inc
pusha
sahf
repz
cmp
scas
repz
cld
cmpl
pop
dec
nop
scas
les
mov
aaa
cli
test
jae
cmpl
insb
insb
sub
outsb
fisttpl
push
sbb
jmp
push
rcrb
sub
inc
sub
push
pop
sbb
and
cmp
jge
pop
mov
lods
mov
push
stc
cwtl
pop
mov
xchg
inc
xchg
push
inc
adc
adc
stc
add
sbb
sbb
std
cmp
dec
xor
jo
shlb
cmp
jle
stos
pop
adc
lods
sub
jg
not
into
test
or
out
imul
dec
movsb
insb
mov
sub
push
lcall
jno
pmaddwd
ss
add
icebp
fcmovne
cs
pop
sbbb
loop
add
xor
push
jge
xor
mov
aam
dec
push
repz
jbe
inc
inc
jae
lretw
aas
mov
xor
and
lods
pop
test
addr16
out
inc
aad
cmp
ljmp
inc
xor
shlb
inc
sbb
xchg
push
loopne
aad
hlt
dec
xchg
jbe
dec
cmc
into
mov
cmp
xchg
xor
stos
sarl
cmp
je
pop
cmp
lock
stc
xchg
mov
lods
xchg
bound
mov
or
mov
add
cmpl
stos
sub
mov
or
adc
enter
sti
mov
dec
jbe
push
add
popa
fwait
cmp
lock
out
mov
adc
scas
push
stos
jae
pop
stos
adc
mov
xor
inc
stos
sbb
sub
ror
push
fsts
cltd
cmp
popf
lcall
sbb
jmp
xchg
push
in
sub
cmp
cmpsb
lret
stc
lods
dec
mov
dec
cmp
or
fnstenv
pop
adc
sub
adc
inc
hlt
ds
addr16
xchg
jb
loopne
push
mov
adc
sbb
mov
sbb
sub
fisubl
mov
sub
sub
cltd
and
or
jmp
std
idivb
mov
fbld
popa
pop
pop
add
popf
jp
mov
and
rclb
mov
movsb
in
inc
sbb
xchg
cmp
lock
popa
mov
mov
dec
cmp
xor
hlt
cwtl
mov
into
cmpsl
fiadds
push
sbbl
imul
rcl
push
xorb
xchg
mov
push
pop
jnp
in
in
lock
dec
in
xor
iret
push
sbb
rcrb
ljmp
jo
xchg
mov
decl
mov
jge
mov
mov
inc
repnz
xor
popf
push
cwtl
fdiv
lods
pop
sbb
loop
sbb
lds
lock
cli
jmp
repnz
lret
sub
cmpsl
or
adc
orb
cmp
mov
sub
insl
push
jbe
movsb
inc
jae
cwtl
es
daa
loope
xchg
inc
cmp
jmp
shrl
fldl
pop
xchg
jo
imul
loopne
sub
mov
out
or
jl
movsl
addr16
add
outsb
mov
ljmp
mov
xchg
mov
mov
rcrl
lods
gs
sub
ffree
std
outsl
nopl
xchg
push
mov
stos
jecxz
cmp
pop
jb
ficoms
jmp
xor
and
in
adc
ss
dec
jp
jo
pop
js
mov
pop
inc
andl
or
and
mov
mov
andl
rol
pop
je
testb
cmc
enter
dec
rcl
je
mov
ret
mov
repnz
iret
cmp
push
dec
sbb
or
push
push
test
mov
xchg
sub
sahf
mov
adc
and
mov
jle
les
cmp
mov
inc
and
xchg
in
add
das
jb
popa
pop
xor
push
inc
das
int3
movsl
addr16
lahf
hlt
sub
or
outsb
ret
or
jmp
sub
cli
inc
test
pop
or
or
cmpsl
sub
sahf
push
inc
or
mov
add
outsb
jnp
dec
outsb
mov
pop
pop
cmpsl
bound
xchg
fcmovne
adc
or
pop
jmp
es
jb
pop
adc
je
or
xchg
mov
pop
mov
std
aad
pop
scas
push
fcmovb
aas
inc
sub
mov
ja
xchg
xchg
and
lods
mov
push
push
dec
in
xchg
leave
cmp
sbb
insb
pop
call
lret
jge
mov
lahf
inc
xor
and
jbe
fsubrl
in
jp
jb
lcall
popf
mov
mov
sbb
stos
mov
mov
lods
lcall
sub
pop
sbb
xor
or
in
add
pop
out
stos
sti
insb
lock
sub
sub
ds
inc
out
leave
lahf
lret
dec
subl
or
ret
mov
sahf
mov
ror
push
add
jl
push
ja
dec
xor
jmp
lcall
mov
aad
sub
call
out
sub
xchg
mov
xor
or
sub
rclb
sbb
adc
test
rorb
dec
sbb
mov
ds
loope
add
mov
mov
clc
xlat
xchg
xor
dec
mov
sarl
movsl
cmpsl
sbb
aad
stos
push
out
cmp
int
popf
les
push
sbb
jmp
push
loopne
xor
and
pushf
push
mov
ret
xchg
push
cmpsb
mov
and
aam
or
xor
leave
lds
mov
test
ret
inc
mov
cmc
sti
out
or
and
push
jg
sub
dec
xor
lock
stc
test
je
mov
and
pusha
or
push
pop
lods
fldl
clc
rorb
xchg
sti
scas
adc
lods
cmp
scas
lahf
popf
jecxz
push
fs
cmp
das
pop
dec
bound
pop
add
test
push
dec
mov
test
jge
cld
add
jae
cld
pushl
adc
loopnew
mov
add
fdivrl
js
xorl
mov
imul
sub
mov
repz
ljmp
imull
push
jmp
inc
cltd
dec
rorb
and
repz
sub
out
or
xchg
mov
adc
test
imull
ret
pop
dec
shr
and
jnp
xchg
lock
and
fnstsw
popf
jge
mov
cmp
mov
sbb
lods
add
push
mov
push
pop
inc
adc
jb
mov
addr16
mov
mov
cli
jecxz
mov
push
lods
outsl
andb
cwtl
mov
in
push
imul
pop
push
or
fldt
loopne
fs
loopne
out
in
cli
push
inc
lds
push
add
js
stos
and
mov
inc
lret
ljmp
sbb
or
or
cmpsb
mov
push
movsl
jmp
mov
sub
lret
and
jmp
sub
cmp
push
lret
sub
pop
daa
inc
cs
repz
adc
dec
popa
scas
loopne
xchg
push
mov
push
je
int3
scas
pop
mov
cs
mov
sub
push
sub
mov
pop
inc
push
add
dec
or
jge
addr16
dec
push
ret
inc
into
into
or
push
dec
aaa
test
imul
clc
lods
sbb
mov
add
out
mov
jle
inc
mov
lea
add
cmp
jb
cmp
or
sub
mov
pushw
and
mov
sub
in
lret
pusha
hlt
lock
hlt
in
repz
jp
sbb
jp
or
call
dec
loope
fsubr
lcall
and
pusha
mov
push
ficoms
mov
mov
lret
je
xor
mov
jge
sub
aas
xchg
orb
xchg
int
movsl
mov
js
cmp
mov
std
testl
arpl
adc
call
iret
in
inc
repnz
add
cmp
cld
or
or
pop
int3
push
aad
mov
sahf
ret
or
inc
mov
sub
jns
add
adc
test
addl
or
shrb
aas
xchg
pop
ret
sbb
xchg
or
xchg
mov
jnp
notb
dec
and
gs
out
xchg
test
out
mov
loop
jge
int3
jnp
cmp
call
cli
mov
and
cmpsl
mov
ficoml
loope
clc
jbe
mov
cmp
scas
jne
inc
imul
shrl
pop
or
sti
mov
cs
ret
jecxz
xchg
cmpb
pop
hlt
repnz
cmp
inc
int3
or
jnp
fldl
test
aas
in
test
xorb
xchg
mov
sahf
fwait
inc
mov
in
in
dec
adc
aaa
mov
pop
addl
sub
fmull
and
shlb
pop
push
or
push
aad
lods
push
clc
dec
data16
sub
lret
mov
xchg
lret
outsl
mov
cmp
cmp
clc
jns
pop
repnz
inc
js
ret
push
and
sahf
cs
test
sbb
fs
sbb
and
inc
pop
idivb
cmc
and
add
cmpsl
mov
push
int
leave
cs
jo
pusha
in
inc
adc
jae
or
seta
test
cs
mov
ja
and
xchg
into
cli
add
pop
aaa
out
pop
push
scas
pop
fcmovnb
push
mov
outsl
or
aaa
les
adc
into
dec
dec
insl
cld
cli
cs
dec
xchg
test
scas
jb
push
fsubrs
dec
ret
mov
in
addr16
sub
push
jo
jmp
xor
rcrl
setno
aam
sahf
test
cmpsl
and
jno
cld
adc
and
jne
jbe
jo
outsb
lret
ja
mov
int
into
push
xor
dec
leave
and
cmp
rep
cmc
jmp
das
test
movsb
testl
push
mov
pop
lret
pop
imul
cwtl
imul
xor
into
repnz
lcall
push
push
or
int3
hlt
out
lods
xchg
fmuls
pushf
jbe
fwait
pop
lret
or
scas
idiv
rolb
bound
and
outsb
xchg
rolb
add
pop
add
adc
shl
nop
add
fbstp
mov
add
sbb
sahf
pop
rorb
pop
fadds
scas
jb
arpl
adc
testl
es
aam
pop
pop
lea
cmpsl
xchg
fisttpl
adc
cmp
int
mov
jl
mov
ss
cli
xor
inc
sbb
cmp
mov
mov
mov
xchg
pop
or
in
pop
add
loop
popf
push
push
jno
sbb
ret
in
addb
mov
mov
mov
subb
lods
fcomps
out
mov
pop
push
xchg
scas
orl
push
fimuls
mov
push
js
cli
stos
add
push
pop
sti
inc
lret
mov
mov
cltd
pop
dec
test
mov
loope
jo
inc
push
inc
inc
cmpsb
test
andb
pop
inc
fcoml
cmpsb
add
jns
mov
mov
js
fidivrl
cmp
xchg
jb
mov
das
push
cmp
or
fdivrl
jno
add
jecxz
andb
lods
pop
adc
leave
and
lcall
push
rolb
mov
sbb
inc
cmp
sbb
imul
pop
or
ja
popa
add
cmp
sti
jb
sub
or
pop
push
and
adc
xchg
pop
mov
cmp
rcrb
xor
pop
mov
add
cli
in
imul
cmc
xor
push
cmp
xor
dec
jno
inc
pop
flds
lret
xchg
xor
dec
ja
lahf
sub
jmp
fstl
cmovg
movb
insb
in
pop
ljmp
lret
test
cmp
mov
mov
int3
pop
and
adc
pop
outsb
mov
cltd
loope
push
mov
cmc
imul
in
mov
pusha
int3
out
mov
add
stc
lret
sbb
lea
add
aaa
jg
fwait
aas
lock
icebp
addb
pop
aas
icebp
mov
js
pop
and
push
dec
push
and
aam
inc
lcall
insl
jnp
push
ja
mov
fidivrl
outsb
dec
js
test
arpl
icebp
push
shl
xchg
mov
jbe
inc
div
loope
inc
mov
push
js
loop
sbb
popf
bnd
push
or
sub
cmp
movsb
xor
jg
lcall
sub
mov
pop
xchg
or
inc
ds
or
xchg
and
out
js
sti
outsl
aas
sbb
orb
cwtl
jg
or
sub
xor
adc
test
loop
jge
pop
mov
loop
addb
loopne
inc
inc
iret
fmull
mov
sbb
pop
popa
adc
fstpl
test
jo
ss
loopne
mov
jp
test
loopne
pop
ss
loopne
mov
mov
pop
rorl
adc
sbb
push
xor
mov
mov
xor
sarb
in
mov
push
lods
cwtl
sub
add
loopne
fidivrl
popa
adc
xor
jp
or
mov
mov
cwtl
stos
lcall
xchg
daa
icebp
aad
xor
stos
xor
jnp
jecxz
into
push
outsb
call
cmpsl
aaa
lods
arpl
cmp
outsl
mov
mov
es
push
pop
sub
movsl
xlat
out
popa
mov
mov
cltd
ss
enter
jns
test
jge
call
stos
scas
fldcw
fsubs
les
xor
js,pn
dec
mov
sub
lret
jbe
std
cwtl
cmp
jo
dec
into
mov
mov
pop
jge
fisubrl
aas
cmp
negb
cltd
cmp
xlat
scas
test
push
je
jbe
mov
add
mov
pushf
pop
cmp
jl
pop
gs
push
pop
sub
mov
jae
cmpsl
cmp
lock
adc
shl
popa
insl
xchg
push
sbb
mov
je
xor
mov
in
flds
pop
repz
jnp
cmp
hlt
adc
pop
gs
lea
push
jp
inc
sti
das
push
mov
sbb
pop
adc
mov
cli
fstl
jb
xchg
add
inc
jae
or
mov
mov
pusha
xchg
jge
mov
xor
sub
dec
cwtl
pop
data16
scas
adc
dec
mov
ljmp
std
in
subb
push
and
pop
fwait
pop
mov
dec
inc
mov
xchg
aas
mov
jo
pop
push
lcall
jge
mov
test
xchg
inc
sahf
pop
pushf
sub
lret
push
jno
mov
mov
adc
and
cmpsb
inc
insl
push
addr16
cmp
loopne
stos
leave
stos
and
push
pop
out
cmp
mov
ret
int
dec
fisubrl
pop
sbb
xchg
pop
ret
xor
call
xchg
jnp
notb
sbb
mov
insl
stos
loop
test
cs
mov
enter
cmp
rcrb
test
std
cmpsb
push
push
mov
je
add
ds
or
pop
sub
out
inc
inc
loop
shrb
in
dec
mov
loop
insb
jb
sub
aad
or
dec
in
fucomip
in
add
sub
out
repz
mov
je
pop
and
mov
icebp
orb
sbb
nop
jb
mov
aad
test
cmc
in
lret
gs
clc
cmc
mov
rcrl
or
fmul
aad
ret
pop
dec
pushf
push
movsb
mov
mov
sub
outsl
stc
in
xor
push
xorb
pop
xor
mov
dec
dec
pminsw
inc
andl
mov
adc
jb
add
popf
pop
pop
bnd
mov
mov
pop
leave
jo
mov
or
pop
add
mov
repnz
xchg
mov
cmp
js
xchg
aaa
jbe
mov
outsb
xchg
or
out
or
and
adc
xor
add
divb
mov
popa
fadd
fidivrl
dec
cmp
pop
xchg
cmc
inc
add
movl
mov
daa
dec
mov
pushf
ficomps
sti
sbb
xor
mov
push
mov
jb
ljmp
xor
mov
inc
pop
add
sub
sub
pop
repz
jmp
jno
sbbl
xchg
andb
addb
dec
je
push
adc
scas
mov
icebp
sub
lea
test
xchg
and
les
dec
mov
jbe
sarl
fs
in
faddl
mov
mov
insb
ljmp
jbe
xchg
lds
fistps
js
and
push
push
inc
test
cs
ret
lock
add
das
vpavgw
clc
in
in
xor
pusha
ficomps
xchg
scas
pushf
inc
jl
dec
fwait
xchg
dec
repz
clc
insb
inc
ja
dec
outsb
stos
into
mov
frstor
or
test
pop
push
mov
sub
mov
loopne
jnp
out
test
xchg
pop
call
adc
and
mov
in
cmpb
mov
les
and
outsb
mov
mov
imul
sti
and
mov
dec
lds
inc
lods
xor
sub
loope
pusha
mov
inc
dec
add
stos
stc
mov
push
out
pop
rclb
xchg
adc
mov
and
push
loope
mov
cmp
dec
les
fnsave
mov
stc
or
sub
dec
push
mov
das
sub
xor
add
add
pop
inc
mov
roll
fcoml
push
cmpsb
mov
cli
mov
dec
add
pusha
les
ret
dec
imul
out
adc
sub
mov
sbb
insl
cwtl
xchg
mov
or
jno
je
stc
sbb
pop
outsb
loopne
call
imul
div
test
stos
sar
dec
dec
sbb
roll
jnp
mov
shlb
push
mov
ljmp
loop
pushf
mov
dec
push
negb
push
leave
mov
dec
bound
mov
mov
aas
dec
xchg
test
dec
iret
imul
stos
sbb
cmp
ror
cmpsb
push
push
insl
adc
jo
sbb
dec
je
mov
cs
cmpsb
jb
push
outsl
mov
lahf
outsb
inc
pop
sub
adc
leave
jmp
icebp
out
and
pop
ja
push
loope
sub
mov
adc
popf
mov
mov
sbb
pop
fisttpll
pop
jle
push
pop
jbe
lds
ljmp
and
sbb
xor
lahf
add
int
arpl
and
dec
dec
dec
clc
shrl
test
fisttpll
aam
stc
repz
dec
loopne
mov
rcrl
cli
dec
imul
dec
cmpsl
repz
push
xchg
negl
leave
and
xchg
aaa
adc
pop
jnp
jp
xchg
test
fwait
aad
or
aaa
orl
inc
aas
mov
dec
int3
andb
jp
nop
shlb
inc
adc
dec
or
out
and
insl
xor
mov
call
fimuls
lds
adc
add
das
push
pop
fcmovb
cmp
dec
xor
stos
test
cmp
push
pop
insb
pop
dec
add
mov
pusha
and
mulb
inc
hlt
sub
cmp
les
sbb
pop
lock
add
cmpsb
push
or
and
mov
in
out
out
stos
adc
jmp
inc
xchg
dec
icebp
sahf
mov
dec
inc
sbb
popa
cmp
inc
sbb
lods
out
ror
test
push
mov
jnp
addr16
arpl
xchg
je
xor
sbb
jns
ljmp
cmp
loop
pop
xchg
xor
xchg
pop
rolb
out
lret
sarl
call
and
clc
hlt
push
mov
dec
cld
mov
add
sub
imul
out
cmpl
int
shll
lods
aas
lods
adc
push
gs
mov
inc
mov
add
sub
add
fisttpll
imul
add
add
lcall
loopne
sbb
sbb
addr16
iret
testl
repz
adcb
mov
xor
xor
inc
xchg
mov
and
aas
mov
prefetchnta
shlb
or
jno
cmp
cmp
cmpsl
pop
sub
lret
mov
clc
pop
adc
test
mov
sub
pop
fsubrs
jne
cmp
add
and
xlat
pop
push
aad
loope
in
push
iret
scas
push
mov
scas
pop
sarl
gs
cmc
push
or
adc
fdivl
cmc
jmp
cmpb
out
fmul
rol
repnz
inc
pop
loopne
fdiv
cmc
jl
movsb
in
xchg
mov
pop
push
ss
xlat
jl
jae
outsl
xor
push
cmp
adc
mov
lcall
inc
inc
push
sub
call
mov
pushf
outsl
out
idivl
or
mov
daa
dec
dec
adc
ja
xchg
popa
or
and
scas
out
jp
js
xlat
mov
or
push
mov
ficomps
mov
js
jecxz
sbb
dec
mov
movsl
adc
bound
dec
jg
cmp
fdivr
mov
inc
divl
loopne
adcb
ficoml
shlb
or
xor
imul
and
insl
arpl
lods
add
imul
mov
popl
out
pop
rcr
and
out
and
loope
dec
jns
pop
mull
loop
sbb
cld
adc
filds
or
insl
xor
pop
inc
cmp
sbb
dec
arpl
fmul
push
mov
mov
lret
adc
jne
clc
mov
mov
cmp
pushf
ret
dec
in
push
cmp
stos
cwtl
xchg
cli
push
ss
pop
mov
and
add
mov
ret
hlt
stos
jle
call
sbb
inc
or
dec
popl
mov
fstpl
mov
nop
adc
add
or
jecxz
lahf
lret
out
xor
sub
mov
inc
push
cwtl
nop
imul
insb
insb
push
inc
test
int
js
lock
push
cmp
aam
adc
jp
push
imul
int3
dec
sti
cmpsb
inc
es
fsubrl
enter
inc
push
stc
mov
dec
shrl
mov
sub
stos
sbb
jb
pop
xchg
adc
inc
testl
ja
gs
pop
test
icebp
cltd
pop
pop
dec
ss
inc
mulb
idivb
loopne
shl
adc
sahf
mov
and
pop
test
lods
popf
bound
clc
pop
aam
pop
es
scas
sti
fadd
fildll
roll
sbb
rcl
push
test
inc
fistl
mov
cmp
jp
aam
clc
xchg
pop
mov
dec
dec
stos
xor
xchg
sbb
lret
cmp
bound
addr16
sbb
je
inc
iret
or
pushf
nop
mov
mov
adc
xchg
ret
pop
dec
xor
outsb
in
jno
fcmovu
jge
add
jg
in
lods
xor
mov
imul
insb
inc
test
xor
mov
add
mov
pop
shrl
in
insl
addl
inc
rcrl
mov
push
in
daa
mov
jmp
mov
mov
and
test
pop
mov
cli
sti
arpl
lods
movsb
inc
in
pop
jp
xor
mov
lret
loope
lds
mov
jp
add
repnz
push
mov
into
rcrl
jmp
mov
sbb
or
xorb
aad
sbb
cmp
dec
or
clc
adcb
or
sbbl
fiadds
fmulp
stc
ret
dec
stos
mov
push
xor
xchg
pop
sbb
cmpsl
arpl
pop
insb
cmp
mov
popf
sarl
jns
lock
push
repnz
push
xchg
imul
pop
icebp
fldt
or
je
and
lock
rcl
mov
imul
inc
xchg
aam
dec
iret
repnz
adc
add
movsl
shrl
mov
adc
into
popf
xor
dec
cmc
addr16
call
xlat
mov
jb
jp
fistl
cld
pop
fsubrs
push
add
dec
pop
loop
stos
ret
push
adc
mov
xchg
push
sub
test
cmp
mov
sub
aam
mov
dec
in
rcrl
lds
lahf
jmp
cmp
mov
dec
lock
outsb
mov
xor
imul
push
ljmp
mov
inc
jb
lock
outsb
mov
mov
in
mov
and
fdivrl
ror
jae
add
xor
push
rol
jge
inc
sub
mov
mov
cli
outsb
inc
jp
andl
leave
pop
xor
mov
jmp
gs
jmp
jae
fwait
push
or
mov
test
imul
add
cld
jmp
mov
movsb
lahf
lods
jp
xchg
lcall
adcl
loopne
enter
pop
pop
and
xor
mov
pop
ljmp
sbbl
pop
orl
cs
jl
or
fcomps
sti
mov
stc
imull
fdivl
jae
in
mov
jns
addr16
hlt
jne
frstor
sub
test
clc
in
dec
mov
adc
lea
scas
pop
roll
repnz
xchg
pop
and
and
insl
or
inc
aad
sbbb
daa
pop
jne
jmp
pop
fisttpll
sbb
call
lret
xchg
push
cmp
and
push
and
mov
arpl
xor
dec
repnz
cmp
push
fsubrl
xchg
or
btc
clc
fstpt
pmaxub
pop
je
xor
scas
mov
and
mov
in
rorl
gs
test
aam
fidivrl
sub
leave
dec
jge
test
mov
into
and
mov
inc
cltd
sahf
xchg
lret
dec
adc
imul
repnz
push
push
ds
or
jmp
jmp
sbb
lock
pushf
and
cld
push
jp
and
push
cmp
cli
or
xchg
in
adc
cmp
push
mov
jne
dec
inc
cld
ljmp
outsb
shlb
xchg
mov
xorw
mov
sub
shrb
xor
dec
gs
in
inc
push
hlt
loop
adc
std
int3
aaa
pusha
push
int3
mov
fwait
iret
in
push
das
and
jb
jbe
or
xchg
aaa
js
in
das
mov
ret
or
mov
out
shrb
push
xor
test
sbb
and
fs
nop
adc
sbb
mov
in
xchg
popa
sbb
icebp
mov
xchg
gs
sub
in
inc
mov
aas
push
lcall
dec
adc
movsl
jns
je
jp
push
lret
push
pop
xorb
lcall
lock
jge
loop
negb
mov
pop
popf
out
repnz
add
mov
xorb
pop
push
leave
insl
sbbb
jg
lret
mov
lea
cmp
lcall
dec
dec
iret
shl
clc
loopne
inc
cmp
mov
add
xor
ret
ret
icebp
mov
test
inc
out
mov
cmc
scas
xor
pop
inc
sti
popf
test
gs
daa
inc
sarl
scas
into
inc
call
div
mov
jo
inc
adc
popa
icebp
and
adc
cli
push
lods
inc
ja
dec
cmc
sbb
jl
xor
mov
hlt
int
jns
xchg
ds
pop
pop
call
jmp
and
lods
testb
ds
push
out
mov
dec
pop
ret
iret
inc
and
sub
pushf
in
and
mov
in
sar
push
popa
xchg
jg
fldt
fldenv
int
pop
mov
lea
fwait
mov
jg
jae
popa
test
mov
inc
dec
dec
sub
rcrb
push
call
std
xchg
mov
je
and
adc
shrb
shrb
call
iret
cmp
insl
lcall
mov
sub
outsb
lcall
xor
or
cmpsb
or
sub
arpl
loop
sar
jb
stc
les
xchg
roll
fistps
or
sub
mov
mov
and
dec
stos
inc
jb
jnp
aaa
xchg
lret
das
mov
pop
daa
dec
or
insl
es
inc
mov
sub
mov
popf
shr
mov
cs
cli
mov
cwtl
ret
mov
nop
jl
testl
cmp
aad
cmpsb
xchg
fisttpl
xchg
flds
movl
incl
lea
shll
rolb
jg
jp
popf
sub
mov
sbb
sbb
in
push
dec
sti
flds
dec
adcb
in
cs
or
and
cmp
ficoms
cmp
mov
xchg
ds
inc
sti
add
dec
xor
lcall
xor
rclb
or
or
scas
es
scas
in
or
pop
es
andl
dec
js
pop
mov
aam
push
ret
setne
pop
fbstp
ror
call
fwait
xchg
movsl
dec
add
sub
sbb
cltd
loop
data16
jnp
repnz
sub
push
add
lcall
cmp
lods
xchg
pop
sbb
sbb
dec
repz
pop
insl
sbb
clc
jns
hlt
arpl
sub
inc
mov
psrld
and
adc
mov
sbb
rcrb
jp
inc
loope
dec
cltd
stos
sbb
lea
mulb
arpl
add
pop
adc
insb
dec
bound
enter
in
dec
sub
jae
sub
fpatan
fs
addr16
cmp
jno
sahf
inc
inc
stc
gs
rol
data16
addb
les
adc
fadds
movw
mov
cmp
test
iret
das
or
or
faddl
movl
cmp
jle
add
divb
sbb
push
shll
or
test
and
scas
leave
push
add
push
ret
sbb
daa
clc
incl
fldt
icebp
rolb
ficoml
in
inc
pop
xor
je
lods
push
shlb
fwait
jne
dec
push
stos
cmp
icebp
sub
jecxz
push
int3
js
dec
cltd
push
cmpsl
mov
or
pop
inc
clc
or
roll
or
ds
jbe
or
dec
sbb
ja
mov
inc
fmuls
push
int3
sub
sbb
hlt
test
addb
ss
orl
adc
pop
rolb
cld
add
dec
in
call
fsts
mov
xor
and
nop
and
jl
std
jb
mov
pop
je
or
cmp
sbb
adc
push
mov
bound
add
jle
push
push
cwtl
pop
adc
or
test
mov
leave
fbld
movsl
push
xorl
jae
arpl
mov
dec
jle
cwtl
sbb
jl
data16
mov
out
cmp
xchg
xchg
adc
pop
push
in
fs
xchg
int3
mov
jmp
xchg
dec
sti
sub
js
cmp
mov
addr16
jb
mov
xchg
and
ja
push
out
nop
jo
mov
sarl
dec
js
nop
pop
ja
test
push
fistpll
xor
ret
aas
or
xor
lahf
mov
and
cmp
testb
cvtdq2ps
dec
mov
hlt
cmpsb
test
nop
orl
fsubrl
negl
addr16
add
rcrb
test
mov
ss
in
pop
movsb
movsb
fidivrs
out
cmc
popa
sahf
adc
fcomi
inc
push
mov
loopne
mov
or
addb
dec
or
adc
or
mov
push
out
pop
ljmp
nop
aaa
test
loopne
sbb
mov
lahf
lret
rclb
ret
leave
in
in
jmp
shl
pop
jp
pop
sub
std
push
outsl
les
xchg
loop
mov
push
mov
mov
pop
dec
push
jp
pop
fistpll
sbb
sub
sarl
xchg
lock
ret
flds
push
ret
xchg
jno
dec
pop
jbe
jo
pop
jmp
xlat
fwait
mov
cmp
sbb
test
scas
mov
mov
lea
sti
cmp
xorl
and
jle
scas
add
in
or
imul
adc
jbe
push
aaa
in
shlb
je
iret
mov
jecxz
daa
insl
mov
popf
movsb
jg
pop
sub
fsubs
ret
imul
sbb
jecxz
jge
fcoms
sbb
sub
pop
or
gs
xor
repnz
cld
dec
dec
fidivrs
loope
xchg
xor
daa
daa
rorl
jle
xlat
out
xor
xchg
std
sti
ja
je
and
cmp
mov
leave
scas
mov
jb
mov
test
cmc
idiv
call
lahf
leave
mov
sub
mov
sti
cli
imul
in
aas
and
cs
hlt
arpl
repz
into
cmp
pop
fldcw
movsb
mov
pop
sbb
in
xor
mov
movsl
sbb
push
cmp
data16
add
inc
dec
cli
inc
dec
push
add
mov
dec
out
cltd
in
add
pop
inc
cwtl
mov
out
daa
mov
jp
cld
xchg
dec
push
cwtl
daa
jbe
inc
out
mov
push
lock
sbb
lret
sahf
push
inc
popa
sub
pop
ss
addr16
repnz
movl
das
dec
mov
xor
leave
sbb
scas
vmread
cmpsl
pushf
ljmp
xor
call
call
mov
test
hlt
sbb
sbb
push
mov
push
push
out
icebp
sbb
cltd
cs
aad
ss
lods
xchg
enter
cmc
xchg
or
pop
push
addr16
mov
movsb
ljmp
addr16
jae
mov
push
cli
addl
fisubrs
fwait
cmp
push
jg
add
int3
push
stos
cmp
xchg
pushf
push
out
sbb
iret
xchg
push
push
je
repnz
icebp
inc
movsl
mov
dec
push
adc
jno
push
cs
sub
sbb
and
mov
mov
mov
or
mov
fildl
rcll
push
sbb
adc
push
jmp
pop
xor
aam
enter
push
mov
and
out
lock
and
push
shlw
outsb
dec
xor
pop
lea
lret
mov
ffree
in
in
shll
dec
fcmovne
hlt
mov
imulb
pop
mov
movsl
imul
lret
repnz
int
into
inc
mov
sbb
pop
sub
and
push
dec
dec
jns
mov
fdivl
sbb
add
sub
and
aam
out
xor
loopne
sbb
roll
pop
subb
mov
frstor
es
dec
mov
lahf
jecxz
cmp
cli
sti
out
insb
leave
add
and
fbld
mov
cmp
fs
jae
jne
call
flds
mov
cmp
fdiv
push
mov
fldcw
push
push
jecxz
mov
sbb
insb
push
das
xchg
insl
orl
cltd
push
adc
or
ret
add
fs
mov
jmp
cwtl
cmpb
rorl
sbb
in
push
cmc
les
test
or
das
inc
or
jno
dec
repz
insb
hlt
push
fisubs
add
out
cli
pop
cmp
and
push
out
add
push
fimuls
pop
mov
and
hlt
repz
xchg
pop
cmp
enter
lret
fwait
inc
xchg
rclb
cmc
and
cs
sub
adc
inc
push
jbe
pop
aaa
dec
and
and
es
test
push
and
pop
aad
icebp
add
std
cmpsb
clc
inc
cmpsl
xor
cmp
lcall
sbb
mov
push
mov
and
test
call
sbb
add
hlt
sub
mov
mov
lcall
mov
in
inc
lret
rclb
inc
pop
adc
fsubs
leave
dec
arpl
xchg
test
cmc
in
add
push
imul
push
mov
push
sbb
inc
test
dec
mov
clc
inc
ljmp
bound
mov
push
or
xchg
mov
mov
and
cmp
sahf
sbb
pop
popf
roll
addl
cmp
cli
test
cmpsb
repnz
inc
pop
mov
in
fnstsw
in
sub
jno
and
outsb
push
rol
cmp
aam
pop
jecxz
nop
dec
pusha
push
mov
sub
fcom
jg
mov
xor
push
in
push
mov
pusha
cld
gs
icebp
out
and
or
in
insl
repnz
fisubrl
es
or
mov
cmp
xchg
pop
inc
bound
je
mov
cmp
adc
popf
in
out
cmp
pcmpeqw
fildl
dec
xchg
xchg
sbb
adc
xchg
inc
add
mov
push
sbb
inc
cmpsl
inc
cmp
sub
mov
mov
xchg
cmp
dec
jnp
sbb
jle
sar
xchg
dec
xchg
mov
stos
cmpsb
jl
push
inc
loopne
std
add
sahf
lds
aaa
into
sarb
mov
dec
push
gs
lcall
mov
sbb
cmpsl
call
icebp
xchg
inc
sub
lret
add
and
dec
inc
xchg
cltd
inc
sub
cmp
inc
dec
pop
insl
sub
mov
les
ficoml
cmp
mov
or
rcl
xor
pop
sbb
mov
mov
and
imul
sub
notl
fisubl
push
push
or
mov
sub
mov
dec
aaa
sbb
xchg
cmp
dec
in
push
and
mov
fcoms
rorl
mov
nop
pop
shl
mov
cmp
or
sbb
fadds
testl
cmp
pushf
andl
in
mov
lret
mov
lret
iret
add
into
fiadds
pop
jl
add
outsl
in
sar
jne
xchg
jne
push
in
imul
stc
das
lret
pop
addr16
inc
dec
inc
es
lods
xor
sbb
adc
call
data16
and
cmp
mov
xor
les
or
jl
xchg
mov
cmp
inc
sbb
adc
imul
xchg
pop
push
sub
das
jo
pop
pop
in
pop
add
jl
sub
sub
dec
sbb
mov
imul
xor
jbe
fists
inc
mov
mov
adc
nop
aam
sub
mov
or
gs
fstps
int
out
int3
int3
adc
lds
add
hlt
lock
nop
insl
aad
gs
sub
xor
movsb
sbb
sub
mov
in
sub
adc
push
mov
mov
cmp
nop
shrb
ja
cmp
adc
xor
cli
fneni(8087
add
push
imul
outsb
mov
cmpsl
cmp
and
loop
cmp
mov
imul
cmp
mov
mov
rorb
pushf
int3
jbe
ja
cmp
ficompl
pushf
mov
sbb
in
dec
dec
xchg
xor
out
xor
cmp
mov
cmp
mov
mov
jb
or
cmpsb
int3
mov
or
adc
daa
mov
mov
xchg
inc
cwtl
insb
je
pusha
sub
and
insb
sub
into
bnd
mov
call
stc
sub
adc
popa
mov
test
dec
jg
xor
jecxz
ja
ficompl
xchg
aam
or
imul
lea
pop
lret
mov
nop
cmc
inc
sub
cs
jne
push
mov
cli
add
lods
aam
push
sbb
ja
mov
mov
cld
sti
mov
lcall
xor
mov
xchg
and
cli
sbb
sbb
inc
pushf
std
ret
fisttps
out
jno
pushf
mov
dec
andl
xor
shr
or
mov
cs
test
jl
icebp
mov
leave
push
fisubs
mov
mov
xor
pop
repnz
scas
mov
out
cli
lcall
rorl
and
pop
out
or
out
mov
ret
push
inc
mov
std
pop
cmp
mov
dec
and
imul
sbb
mov
jnp
inc
repnz
iret
push
inc
movsl
lcall
sbb
dec
adc
out
repnz
daa
xchg
xchg
dec
stos
mov
or
int
call
test
jb
mov
scas
pushf
cmp
sub
add
insb
ret
test
repnz
cwtl
xor
insb
sub
iret
mov
in
jge
enter
cs
cmpsl
popf
mov
cmp
sub
lcall
jb
das
push
ficoml
sub
test
out
and
and
pop
xchg
ss
jge
mov
mov
cmp
dec
push
mov
or
cmp
fiaddl
add
cmpb
adc
in
call
push
rol
jg
shll
push
xorl
jo
aam
mov
push
adc
pop
lock
jns
scas
out
jno
add
cmc
test
mov
outsl
stc
xchg
aad
sub
andb
jae
addb
inc
cli
push
pushaw
movb
sub
insb
push
scas
jb
push
mov
ds
mov
jp
cmp
pop
out
pop
dec
push
sub
je
dec
xchg
add
cld
mov
jg
aaa
stos
icebp
push
clc
dec
orl
lea
ret
nop
xor
and
rol
or
pop
mov
dec
cmp
in
leave
jno
nop
ret
loope
pop
cmp
add
fnstenv
add
sahf
add
add
leave
lods
adc
and
mov
lcall
inc
add
scas
fs
fwait
sub
aad
pop
into
aas
add
and
adcb
mov
mov
lods
mov
xchg
in
push
pusha
mov
jmp
pop
lds
jbe
xchg
push
in
scas
rcrb
sbb
aam
inc
pop
cli
in
ljmp
insb
cltd
dec
mov
add
jae
sub
xor
or
cmp
xchg
jge
cltd
int
or
lret
dec
hlt
xchg
jo
pop
nop
xor
pop
mov
cmpsl
repnz
inc
sub
in
jb
fbstp
xor
jae
dec
gs
xchg
add
repz
fmull
dec
nop
ret
test
int
nop
data16
xlat
add
out
push
adc
pusha
push
rcl
imul
sar
or
xor
push
movsl
xchg
or
ss
clc
jne
jecxz
push
xlat
mov
lahf
or
in
pop
fadds
mov
insl
jbe
xchg
inc
and
mov
cmp
mov
pushf
mov
ja
lret
pop
bswap
pop
jmp
stc
cli
mov
adc
inc
shll
jae
pop
mov
repz
cmp
in
pushf
jae
mov
mov
sahf
jmp
pop
les
xchg
loopne
xchg
js
mov
mov
sub
call
inc
outsb
add
cmpsb
jns
hlt
sbb
cltd
jmp
cmc
sub
add
shll
sub
out
mov
mov
adc
stos
shrl
pop
cwtl
add
cmp
std
mov
push
out
stc
js
cli
loopew
cmp
inc
shrb
mov
shr
das
jnp
or
xor
lcall
in
pushl
pop
cmpsb
mov
fs
adc
loopne
jbe
sub
cmp
mov
jl
mov
sahf
mov
pop
mov
bound
mov
ljmp
push
pop
jecxz
sbb
scas
aam
leave
or
scas
inc
ja
jge
jp
shrl
mov
adc
subb
out
das
inc
or
je
fildll
push
inc
sbb
testb
test
jmp
adc
add
push
or
and
mov
and
rorb
test
sti
test
imul
xor
fmuls
test
popa
je
add
es
push
or
lret
mov
adc
stc
pop
mov
shl
xchg
jae
loope
push
fidivl
inc
addr16
mov
mov
cmpsl
lcall
hlt
movsl
dec
cmp
into
sti
xchg
sbb
pop
out
add
aas
in
lods
lahf
les
loopnew
and
mov
mov
xchg
rcrl
mov
push
and
ja
mov
ret
ret
movsb
fwait
stc
pop
cmpsb
jae
sti
xor
xor
out
inc
aam
jbe
push
inc
dec
push
dec
dec
loopne
jae
test
push
dec
jae
jb
stos
popa
pop
cmp
in
xchg
mov
jae
lock
ret
dec
ss
call
and
lea
mov
mov
jg
mov
mulb
ja
hlt
xor
leave
and
add
dec
test
lods
adcb
cmp
mov
push
xor
bound
sbb
push
or
jae
xchg
dec
xlat
dec
pop
scas
add
push
add
push
push
pop
cs
mov
or
les
mov
jns
cmp
push
nop
ss
jmp
ja
lcall
sub
mov
push
or
sbb
pop
aad
cltd
inc
adc
sbb
shlb
sar
inc
sub
cmpsl
xchg
pop
inc
jle
iret
cwtl
add
ds
clc
pop
dec
iret
pop
int
xchg
mov
fst
mull
imul
nop
push
dec
adc
lahf
dec
sub
loop
and
ror
call
sbb
jle
cltd
fldlg2
fistps
pop
add
mov
add
or
jg
in
dec
sbb
mov
movsb
add
mov
jmp
xchg
xchg
scas
icebp
adc
jmp
and
push
hlt
ds
jecxz
insb
fwait
subl
out
mov
aad
repnz
mov
repnz
clc
mov
pop
ret
rdtsc
sub
ja
popf
scas
pushf
and
or
fdiv
mov
enter
xor
fisttpl
sub
ljmp
adc
push
in
cmp
xor
test
repnz
fcoml
insb
jo
dec
jg
pop
loopne
or
pop
enter
or
or
sbb
stc
das
pop
jecxz
lods
cmp
fucomp
and
in
jno
jecxz
les
ds
push
hlt
jle
notl
sbb
stos
mov
ds
stc
int3
lock
mov
js
fs
jnp
xor
inc
dec
pop
repnz
lea
xchg
pushf
push
cmpsb
add
mov
bound
or
dec
cmp
fs
add
insl
js
xor
dec
stos
sbbb
hlt
ja
loop
insl
pushl
dec
lea
insl
dec
pop
mov
test
test
in
loop
lods
ror
ret
lea
addr16
mov
orl
sbb
dec
adc
push
cld
mov
scas
sub
sbb
sbb
test
lcall
sbb
add
ss
mov
cmp
stos
inc
mov
repnz
insb
pop
dec
sbb
or
idivl
stos
movsb
mov
push
int3
shlb
add
enter
xchg
ljmp
scas
inc
testb
fwait
jp
adc
and
leave
pop
ss
or
jmp
imul
flds
mov
or
xor
xor
in
push
aaa
mov
and
xchg
ret
mov
xor
adc
js
int3
rcrl
sub
xor
sbbb
mov
push
mov
cs
outsb
or
mov
xchg
push
add
das
xchg
and
shl
mov
cli
aaa
dec
hlt
xchg
jnp
fldcw
inc
hlt
addr16
cmp
xor
jns
pop
in
pop
loopne
mov
adc
push
fsubrs
int
cwtl
repnz
fadd
pop
dec
xor
push
cmp
lret
mov
rcl
js
push
sub
xlat
mov
je,pn
out
mov
fimuls
divb
and
mov
imul
jns
js
xor
cmp
or
xor
sysret
ds
pop
cmp
jne
repz
cld
or
pop
cmp
inc
pop
xor
nop
mov
leave
ret
dec
aaa
rcrb
pop
xor
or
add
xchg
sbb
mov
push
jno
or
cmp
repnz
insl
out
xor
outsb
adc
add
lahf
mov
dec
pop
cmp
push
mov
sbb
fildl
inc
insb
loope
movsl
andl
dec
in
add
pop
rcrl
add
xchg
mov
arpl
addr16
out
jne
hlt
dec
and
sub
rorb
iret
addr16
pop
jge
aaa
and
icebp
pop
lock
push
sub
rolb
adcb
xor
pop
push
fisttpl
push
call
or
jp
imul
jne
shr
mov
jns
cmp
jmp
int3
add
repnz
push
xchg
sub
jnp
testl
mov
pop
outsl
pop
sbb
cld
into
cmc
iret
xlat
lods
fwait
sbb
add
repnz
sbb
in
inc
adc
xchg
lcall
decb
cmp
or
jne
hlt
add
in
lahf
xor
and
fdivp
inc
mov
test
mov
out
std
sbb
aas
mov
ja
push
sub
ja
ret
jp
cli
movsl
xor
fisubs
gs
aam
js
xor
jne
icebp
jge
push
sbb
out
dec
sub
mov
sahf
fs
xor
xor
pusha
push
int
and
and
mov
test
add
imul
sub
jp
rcrb
xchg
int
cmp
dec
in
int3
repnz
lods
mov
jns
adc
or
out
xchg
push
das
hlt
mov
and
in
sbb
fcmovnu
push
mov
pop
mov
sbb
scas
adc
sbb
int3
ja
mov
push
mov
inc
push
pop
sub
jae
sar
adc
pop
cmpl
int3
aas
jecxz
fwait
lret
xchg
arpl
sbb
mov
mov
loopne
sub
repnz
bnd
loop
adc
and
sti
lods
mov
aam
mov
addr16
mov
fucompp
xor
and
addr16
jmp
repz
enter
cmp
aaa
ljmp
imul
subl
push
jp
push
cmc
push
notl
stos
push
add
inc
or
cmp
push
or
mov
jmp
add
xor
fs
cmp
clc
and
arpl
xchg
jns
and
sti
xchg
mov
push
repz
or
xor
push
int3
cmp
sub
push
cltd
fstl
pushl
mov
jae
xor
pusha
cmp
aaa
push
dec
adc
pop
in
enter
mov
inc
aaa
cltd
in
inc
fsave
push
aaa
aas
iret
out
jg
ret
es
in
fisubrs
mov
push
pop
jo
insb
das
mov
cwtl
loopne
in
cmc
andb
adcb
bound
sub
fwait
mov
xchg
cmc
push
imul
or
pop
adc
repnz
lods
cltd
mov
inc
sbb
jle
jbe
bound
cltd
pop
sub
aam
dec
insb
push
xchg
sarb
or
movsb
inc
fwait
jmp
push
out
or
push
or
and
push
push
pop
mov
mov
sub
rcrl
xor
or
shr
mov
aaa
sbb
xor
gs
shlb
mov
scas
xor
mov
mov
jge
addb
xchg
sub
ret
sub
sbb
push
jne
les
pop
and
jae
das
push
mov
inc
lret
mov
daa
cmp
mov
mov
insb
jmp
sub
dec
pushf
push
int
add
mov
test
and
pop
in
hlt
adc
lea
ljmp
cmp
and
ljmp
mov
push
dec
sbb
dec
inc
push
jmp
push
iret
add
push
shrb
cltd
data16
push
scas
jmp
fucom
add
xchg
repnz
inc
das
out
cmc
icebp
push
xchg
adc
jne
ds
inc
inc
sbbl
cmp
loope
add
sub
push
push
and
aas
out
xor
dec
dec
insl
sbb
adcl
cmp
hlt
pop
test
aam
xchg
sbb
hlt
push
add
mov
mov
push
jmp
xchg
sub
fidivrs
or
xchg
mov
fwait
and
hlt
and
pushf
cmc
xlat
aam
inc
out
je
mov
cltd
sti
and
mov
imul
cltd
pop
repz
out
jg
jb
or
fisubl
nop
jo
push
shlb
pop
movsl
push
adc
push
mov
pop
xor
fisttpl
dec
and
mov
cmp
addr16
inc
aas
xchg
sub
xchg
out
roll
push
dec
cmp
adc
xchg
xchg
shlb
js
sbb
shll
cmp
dec
rcr
mov
xchg
rcll
shrl
hlt
jecxz
lods
aaa
aas
ljmp
fs
mov
sbb
outsl
and
adc
pop
loope
pop
shl
hlt
mov
cld
ljmp
add
or
shl
dec
sbb
mov
ret
xchg
add
incb
lds
and
movsb
push
adc
lock
inc
out
xchg
mov
sub
enter
jl
int
mov
and
sbb
cmp
sbb
movsl
adc
push
mov
lret
ds
jg
mov
mov
jmp
xor
xchg
stc
xlat
lds
add
or
mov
cmp
arpl
je
data16
and
mov
addb
jae
push
mov
repz
insb
icebp
adc
cmpsb
out
imul
push
or
sbb
xor
mov
lock
dec
dec
xchg
xchg
popf
int3
dec
cmc
mov
aam
in
stos
dec
mov
sub
mov
daa
dec
lcall
or
lcall
push
or
and
pop
jnp
sbb
rorb
aad
dec
rorb
or
pop
sbbl
out
cmp
adc
lcall
sub
hlt
mov
fs
push
push
pop
test
sub
and
lods
inc
xchg
pop
int
dec
lods
out
adc
aam
orb
mov
roll
inc
rcrl
lock
daa
mov
xchg
shlb
jg
cmp
mov
mov
aam
adc
sbb
jecxz
cld
jmp
push
lods
sbb
pop
movsb
jae
aas
and
mov
rcl
fdivl
shll
sbb
mov
pop
push
pop
shl
jl
xchg
mov
pop
add
int3
cmp
pop
out
fucomi
jge
popf
pusha
dec
cmp
out
lds
cmpsb
test
lods
daa
push
jb
lret
sbb
out
cld
xor
adc
push
sbb
js
jge
push
aam
xchg
xchg
mov
lret
gs
insl
data16
out
jno
leave
fadds
sub
mov
fcomps
push
data16
addr16
and
sarl
mov
lcall
mov
mov
sbb
imul
bound
mov
test
sub
sbbb
jge
popf
add
pop
jo
jecxz
xchg
gs
cmp
push
insb
dec
push
enter
loop
dec
sti
push
arpl
imul
sbb
ja
call
out
jne
dec
cli
xchg
stos
movsl
dec
mov
loop
inc
dec
jno
push
nop
mov
mov
cmp
in
lods
cwtl
les
jne
je
inc
jae
outsb
mov
fcmove
xchg
pushl
jbe
mov
jno
fldenv
cmpsl
jmp
and
fldenv
fsubrs
jge
int
fdivs
xor
fdivrl
fildll
fiaddl
cmp
inc
dec
ljmp
rcrb
les
out
data16
jl
jge
and
int3
or
ret
loopne
inc
mov
sarl
mov
mov
loop
mov
inc
mov
and
out
lods
sbbb
loop
cmc
add
pop
xorb
cmp
sbb
cld
mov
or
ret
dec
ror
test
pop
imul
repz
jle
push
jno
or
xchg
aas
les
roll
daa
or
int
xchg
mov
repz
sti
in
mov
cmc
fmull
js
sti
jl
mov
xor
stos
je
repz
loope
movsb
cmpsb
push
or
xor
testb
and
add
inc
push
lods
in
stc
in
jae
rorb
icebp
push
test
adc
scas
lahf
fwait
sahf
jnp
lods
cmpsb
adc
mov
ja
icebp
cmp
pusha
jp
mov
inc
shrl
mov
pop
or
popa
enter
dec
leave
fidivl
xchg
mov
inc
popf
ret
mov
xchg
sub
jae
push
mov
push
scas
imul
mov
adc
test
jg
jo
cmp
cld
in
xor
icebp
loop
ret
and
inc
lret
mov
clc
mov
in
in
gs
inc
roll
test
enter
mov
insb
lods
xor
adc
int3
arpl
inc
dec
loop
sahf
cwtl
stos
fistl
sbb
or
movsl
test
xor
adc
test
lahf
enter
int
sub
testb
stos
cmp
pop
les
pop
push
pop
ss
inc
mov
ljmp
xor
pop
fdivrl
lret
pop
and
scas
fnstcw
inc
lcall
xor
cmp
cmpsl
pop
or
insb
daa
cmp
pop
push
insb
mov
sti
bound
cmpsb
leave
movsb
jmp
xchg
aaa
mov
ret
push
xchg
mov
xor
sti
or
mov
xor
mov
cmp
xor
ret
test
xor
cltd
sbb
pop
jno
cwtl
repz
sub
fisttpll
fsubrs
js
mov
jo
pop
test
rorl
mov
adc
jno
xlat
inc
fucomip
daa
adc
data16
jo
adc
dec
push
cmc
lcall
movsb
adc
insb
lcall
cmc
mov
add
in
or
data16
pop
scas
sbb
jge
fbld
les
pop
mov
xchg
call
pop
in
add
jae
jno
adc
inc
dec
notl
add
adc
add
clc
xchg
dec
mov
xor
jg
pop
push
dec
mov
ss
aam
push
jns
nopl
pop
inc
mov
xor
pop
cmp
fst
and
pusha
ja
sbb
sub
pop
push
pop
pop
shrb
shll
test
sahf
into
push
les
sub
int3
and
pop
add
cmp
cli
loop
jge
inc
add
xchg
int3
sahf
pop
dec
mov
pop
outsl
orb
iret
dec
sub
les
sbb
test
or
xor
push
push
aaa
mov
xor
xchg
and
js
inc
inc
inc
xchg
arpl
leave
je
mov
in
adc
bound
or
push
jno
rcrl
sbb
out
loope
adc
notl
stos
loop
jns
ret
adc
add
rorl
dec
jne
loop
jg
shlb
sbb
sahf
fimull
mov
mov
iret
dec
or
cmp
cld
pop
and
mov
adc
and
lods
ret
dec
sahf
xchg
dec
adc
imul
xor
jecxz
and
inc
dec
fisubrs
into
shl
add
clc
popf
std
arpl
mov
mov
imul
rolw
inc
fdiv
std
aam
fwait
iret
and
inc
lds
bound
rcr
xchg
xor
mov
mov
pusha
ss
sti
mov
xlat
lods
repz
decb
mov
push
js
movsl
push
jns
mov
ficoms
xchg
into
js
divb
dec
test
pop
sub
lahf
mov
mov
loope
add
loope
jg
das
je
mov
push
ja
fildll
je
mov
sbb
dec
jl
mov
out
sbb
loopne
je
out
popf
lret
sahf
push
and
rcl
mov
popf
mov
fs
int3
jno
inc
xor
pop
xor
ret
test
dec
outsl
jmp
adc
dec
lds
xor
xchg
movsl
iret
scas
and
clc
fsubrl
rorl
push
gs
or
sub
push
fcomps
out
and
xchg
sub
xor
add
cmpsb
xchg
mov
inc
mov
ljmp
jbe
mov
adc
popl
jecxz
dec
sbb
lods
jecxz
std
lret
dec
outsl
cmp
inc
or
xchg
dec
sub
cmp
xchg
into
and
out
stos
lret
push
je
lret
cld
pop
rorb
dec
mov
ficoml
fisttps
lret
js
xchg
push
mov
sbb
xor
mov
mov
pop
inc
xchg
mov
xor
sub
sub
shlb
fwait
aas
cmpsb
xchg
out
mov
mov
rorl
loopne
pop
into
daa
and
pop
lahf
pop
xor
xor
repz
cmpsl
jg
push
jno
xchg
cmp
shrl
mov
leave
lret
dec
cli
div
mov
mov
xchg
lahf
in
mov
subb
pop
enter
fists
nop
pop
jbe
push
fs
or
ljmp
mov
popa
xlat
sbb
sbb
cmp
out
push
pop
pushf
rorl
cmp
loope
jbe
sub
sbb
sbb
lods
fcmove
scas
out
out
xchg
sbb
sbb
cwtl
mov
mov
dec
roll
repz
push
add
sub
xchg
jmp
pop
fsubl
mov
dec
jbe
addr16
clc
cmp
cld
mov
shrb
arpl
jle
sbb
xor
aas
jge
or
jne
mov
and
sbb
gs
fildl
jl
push
dec
dec
arpl
flds
dec
hlt
shlb
lds
jnp
es
leave
and
mov
arpl
aam
mov
aaa
pop
sbb
jns
or
rcl
jmp
or
movsb
push
pusha
sarb
shll
pop
mov
cmp
mov
movsl
cmp
es
sub
cwtl
mov
imulb
sbb
mov
cld
and
scas
xchg
iret
or
jl
jbe
and
imul
popf
test
push
andl
aaa
mov
loope
adc
jno
aas
mov
xchg
cmpsb
mov
pop
cld
or
xor
hlt
sahf
cmpb
nop
pop
fidivrs
pushl
pop
les
pop
push
xchg
inc
dec
ret
push
cmp
add
cli
mov
adc
imul
fcmovu
leave
jns
enter
fs
mov
sbb
fisttpl
stos
xor
dec
lret
aam
jnp
lret
mov
push
divl
xchg
test
push
unpcklps
pop
hlt
inc
test
push
sub
or
arpl
popf
testl
outsl
adc
nop
jnp
int3
pop
dec
call
adc
into
mov
lock
or
adc
ljmp
cmp
repz
push
xchg
cli
sbb
sub
rcrb
iret
dec
adc
bound
in
stos
test
out
cld
shll
jl
push
insb
ret
lock
hlt
mov
xor
scas
jl
cs
xchg
dec
dec
or
push
cld
fsubr
xchg
outsl
add
fst
dec
sbb
pop
xorb
lock
ret
xorb
stos
inc
in
sbb
repnz
dec
mov
outsb
pusha
mov
jnp
jl
push
cs
fldenv
mov
roll
xor
aam
int
fmulp
std
mov
les
dec
jne
sub
inc
cmp
dec
stos
xchg
push
das
push
sbb
adc
xchg
mov
adc
xchg
and
xchg
and
or
xchg
inc
jae
arpl
mov
scas
cmpsb
dec
jp
arpl
pop
scas
in
xchg
pop
or
out
inc
pop
adc
and
lcall
cld
sar
testl
xchg
mov
xor
sarb
mull
addr16
mov
and
and
sub
pop
imul
rclb
js
sub
inc
xor
mov
xchg
jp
adc
xor
jmp
out
push
inc
mov
test
push
movsb
xor
mov
sub
jmp
lock
mov
mov
popa
push
aaa
dec
sar
and
lea
push
xchg
sbb
rorl
loop
sub
dec
hlt
mov
xchg
adc
xlat
mov
sub
insb
mov
out
test
mov
icebp
call
enter
and
push
or
mov
std
bound
popf
frstor
in
mov
pop
negb
add
addr16
sbbl
shlb
filds
sti
cmpsl
sbb
pop
into
mov
mov
xlat
push
fldl
xlat
adc
pop
lea
jmp
pushl
inc
test
sbb
and
popf
ret
cmp
or
popf
in
mov
shr
dec
sub
push
in
divb
xchg
test
mov
xchg
or
stos
push
mov
inc
or
iret
add
mov
imul
push
jg
stos
jne
or
sub
mov
pop
xor
pushf
push
mov
movsl
shrb
ja
into
ljmp
out
push
loopne
repnz
daa
push
xchg
push
mov
hlt
scas
out
xor
bnd
or
mov
and
push
push
stos
ja
ljmp
mov
lcall
call
das
lahf
shll
inc
leave
cmp
stc
cmpsb
scas
sbb
mov
std
dec
pop
pop
sahf
inc
push
dec
inc
xlat
imul
mov
inc
sti
mov
mov
lcall
pop
shr
mulb
or
testl
or
adc
ret
adc
sbb
decl
ja,pt
mov
nop
je
and
mov
jle
fisubrs
dec
mov
pop
stc
inc
mov
std
mov
pop
enter
clc
dec
es
loopne
ss
adc
dec
jecxz
inc
into
ret
enter
sahf
xchg
inc
nop
push
std
xchg
rcl
xor
jl
xchg
clc
pop
inc
add
les
pop
jge
jmp
mov
lret
and
ret
hlt
stc
data16
in
das
stos
xor
clc
mov
mov
rorl
out
js
sub
cmp
orb
fstsw
test
mov
sbb
add
hlt
jno
loop
push
ret
arpl
into
pop
inc
mov
mov
dec
lcall
mov
roll
outsl
push
mov
stos
outsb
aas
scas
lock
pushf
jg
push
mov
add
bound
adc
stos
jo
mov
push
push
decb
dec
mull
mov
lahf
dec
daa
jb
shl
repz
or
lret
shll
and
movsb
pop
jl
xor
push
sub
mov
xchg
sar
cmp
cmpsb
xchg
mov
das
icebp
xchg
mov
xor
dec
out
movsb
jo
inc
fmull
mov
or
paddusw
shrb
sbb
mov
jmp
xchg
pusha
lock
xor
pop
ljmp
jae
mov
idiv
stc
fisttpll
or
test
es
movsl
mov
loope
inc
xchg
xchg
mov
add
pop
leave
jg
outsl
nop
jl
xchg
fucomip
xor
add
das
pop
add
jl
popa
inc
lret
mov
cmp
int3
jge
lds
scas
cmp
xchg
out
jnp
mov
test
daa
into
pop
fimuls
popa
pop
or
aam
mov
xchg
push
cmc
fwait
cmp
mov
sbb
adc
ss
dec
jae
loop
jp
gs
fdivl
stos
scas
jns
cld
fs
lret
cld
hlt
cmp
pop
lret
pop
daa
mov
inc
mov
sarb
mov
or
dec
jno
or
sub
jno
loopne
adc
mov
in
jge
cmpsl
test
mov
repnz
arpl
or
mov
jne
xor
or
sbb
adc
aas
jns
iret
jmp
call
fcomps
sbbl
mov
sub
jle
fcomps
jne
sub
adc
jns
hlt
mov
cmp
jp
test
adc
mov
xchg
popf
ja
push
push
or
mov
cmp
sbb
xor
xchg
sub
sub
in
leave
je
rclb
xor
xchg
and
adc
push
adc
cmp
bswap
test
repnz
dec
mov
ss
mov
jb
mov
xorb
leave
pop
pop
xor
nop
stos
shrb
xor
repnz
jbe
popf
mov
fwait
jo
movsb
mov
xchg
test
out
mov
jo
lea
lock
mov
shll
pop
adc
loop
push
add
inc
push
ficompl
inc
dec
out
ljmp
mov
mov
xor
cmp
jnp
mov
cwtl
dec
addr16
cmp
stos
and
and
mov
and
jle
or
cmp
xchg
ret
sbb
repnz
xchg
andl
test
fsubl
adc
fistl
stc
cmpsl
insl
imul
cs
out
cs
or
comiss
or
aad
fiadds
adc
jmp
fsubr
jno
and
mov
inc
sti
movsl
sarb
sub
enter
pop
ja
inc
add
sar
sub
mov
hlt
stos
jae
repnz
sub
fisubs
enter
pushf
push
push
inc
xchg
jl
inc
cs
xor
mov
test
sbbb
insl
cld
lret
or
ret
je
jmp
inc
ret
lea
adc
fimull
shufps
lret
and
adc
ja
pusha
xchg
fmul
iret
ret
jmp
or
push
mov
cltd
xchg
je
fcomi
xchg
sbb
mov
test
aas
inc
add
mov
test
out
mov
push
or
pop
or
in
out
ret
into
mov
mov
loope
pop
pop
or
mov
imul
les
adc
and
pop
push
adc
mov
gs
cmp
repz
fs
sub
add
jo
mov
hlt
or
nop
xor
mov
push
js
mov
sahf
in
ficompl
pop
fiaddl
push
movsl
loopne
sbb
fdiv
adc
push
mov
xchg
or
rcll
push
sahf
adc
pop
aaa
jp
cmc
mov
lods
add
lahf
sub
icebp
cmp
mov
xchg
and
dec
out
and
movsb
lret
mov
pop
adc
lods
loope
mov
hlt
daa
adc
sbb
int
aad
push
inc
push
loopne
sbb
inc
jns
ljmp
mov
test
pop
pop
xor
adc
sub
ror
xchg
in
jae
inc
adc
hlt
dec
mov
pusha
outsb
inc
jl
aam
or
test
outsl
mov
out
mov
mov
mov
ret
clc
js
fmuls
insb
cltd
int
and
mov
lea
sti
adc
lods
push
jbe
xchg
scas
xchg
pop
lahf
testl
sti
pop
repz
mov
cmp
imul
xor
mov
stos
sub
push
popf
push
cs
sbb
sub
fwait
cmp
jb
icebp
jae
rcr
jge
fwait
mov
dec
inc
shrb
xor
int
movsl
cld
push
sbb
lods
test
imul
or
mov
pop
mov
push
push
push
clc
lret
adc
mov
lods
lock
xchg
andl
jg
xchg
jmp
ret
push
fcoml
aaa
or
xor
sub
jne
lods
mov
adc
mov
mov
das
dec
or
adc
jbe
dec
cmp
xchg
sarl
fnsave
xor
inc
jnp
lret
sub
fcomi
mov
or
cmpsl
imul
call
mul
outsl
xchg
mov
lret
pop
movsl
mov
pop
enter
mov
sub
xchg
out
cmp
mov
lret
rorl
popf
es
mov
push
sbb
and
outsl
adc
or
dec
lock
xchg
sub
loop
or
xchg
rcll
xor
incb
mov
pop
jmp
sbb
pop
adc
xchg
mov
test
push
xor
mov
lds
shr
inc
aaa
in
clc
pop
or
lea
fdivrs
out
pusha
rol
outsl
hlt
out
xchg
jp
xchg
loop
and
inc
mov
mov
jp
push
mov
sbb
clc
stos
lock
int3
aas
pop
lret
in
ss
sub
and
xor
push
and
insl
xchg
fisttpll
jle
add
lahf
lret
xchg
outsb
inc
outsb
bound
mov
sbb
cld
pop
push
push
insl
inc
sbb
inc
imul
jl
sub
or
mov
mov
pop
call
outsb
jmp
inc
xlat
add
call
in
mov
lods
and
fists
int3
scas
push
dec
xorl
push
mov
js
imul
jae
push
jnp
std
insb
js
test
pop
xchg
out
call
fiadds
cs
push
jmp
shrb
pop
adc
xchg
pusha
xor
ss
sub
pusha
jb
inc
test
cmp
mov
xchg
dec
in
adc
mov
and
add
add
movsl
mov
mov
push
xchg
sub
dec
inc
add
int3
push
ss
dec
push
sbb
lcall
pop
js
xlat
and
jns
xchg
ret
pop
jns
sti
sti
inc
adcb
or
xlat
push
xchg
inc
push
inc
jecxz
jmp
cmp
lcall
int3
enter
out
outsl
push
sub
inc
jecxz
xor
in
sarl
rorb
xorb
mov
xor
sub
mov
in
and
push
ret
xchg
cli
xchg
cmpl
rcll
xchg
xor
ss
push
xor
xchg
mov
dec
or
call
jbe
pop
add
das
mov
out
cmp
xchg
mov
js
ds
sub
roll
add
push
push
repnz
pushf
pushf
xor
and
push
pop
hlt
test
pop
js
mov
cltd
js
mov
cmc
sbb
repnz
add
inc
xor
dec
sub
adc
in
fwait
sub
xchg
or
sub
mov
cltd
out
in
and
insb
mov
lret
pop
push
mov
or
insb
adc
sti
bound
repnz
mov
adc
xor
sub
mov
cmc
aaa
sub
xchg
jbe
mov
push
xlat
sarb
jo
icebp
test
dec
push
divb
jg,pt
or
test
dec
int
sarl
lahf
addl
repz
sahf
dec
cmp
adc
in
sbb
mov
popa
push
adc
outsb
inc
inc
adc
inc
fldl
mov
fadd
rcrb
mov
push
push
fnstenv
movsb
mov
ficompl
leave
xchg
or
xchg
negl
pop
scas
lahf
shl
arpl
pop
imul
xor
rorb
sub
inc
xchg
cs
inc
xchg
pop
jne
dec
pop
addr16
cld
xor
mov
adc
leave
ret
mov
cmp
lret
mov
mov
mov
sbb
pusha
inc
jnp
mov
and
iret
insl
stos
or
or
in
test
hlt
push
lret
pushf
xor
test
mov
sub
aaa
jl
add
mov
dec
mov
cmp
ret
jnp
jne
sub
ret
sub
in
jnp
xlat
out
mov
adc
inc
daa
test
ss
xchg
adc
cli
cli
rcr
sti
cli
out
fwait
outsl
call
and
aaa
test
stc
push
lock
into
pop
inc
pusha
mov
pop
cmp
push
out
adc
and
jns
pop
shlb
adc
outsl
orb
pop
pop
ret
pop
sbb
inc
pusha
sbb
xchg
jle
repz
dec
push
mov
scas
pushf
aad
mov
mov
xor
push
push
idivl
or
dec
out
pop
cld
clc
xchg
adc
pop
js
mov
pop
xor
loopne
test
cmp
cmp
call
stc
pop
cmpsb
mov
add
test
add
outsb
sub
fidivs
dec
dec
addl
sbb
cmp
xchg
movb
add
push
out
lods
add
popf
xlat
sbb
aaa
cmc
xor
outsb
jl
lret
ret
out
popf
mov
test
add
cmc
dec
push
aam
and
fwait
mov
cs
lcall
adc
cmp
sbb
push
mov
scas
arpl
cld
aam
js
jnp
aaa
ljmp
fdivrl
stc
push
push
pop
cwtl
ja
mov
fldt
pop
xchg
jne
pop
jno
jne
push
cld
popa
xchg
hlt
sahf
adc
jb
xchg
sbb
addr16
dec
mov
xchg
dec
mov
aas
inc
sti
int3
hlt
xor
and
mov
and
push
divl
xor
repnz
es
ss
dec
insl
cltd
inc
gs
sub
dec
pop
pop
inc
sti
out
lcall
dec
adc
adc
adc
dec
jno
push
cmpsb
xlat
add
rolb
adc
pop
adcl
mul
aam
cmp
add
adc
jg
stos
fldl
test
aas
xchg
aas
ret
jmp
push
int
pop
add
rclb
sbb
movsb
dec
sbb
out
pop
iret
adc
or
data16
sahf
and
aad
inc
aas
in
test
xchg
jl
mov
dec
xchg
add
pop
pop
dec
and
mov
cwtl
push
push
movsb
push
cmp
es
stos
dec
cmpsb
icebp
ss
ljmp
jne
fiadds
lret
mov
cmpsb
testb
cmp
cmpsl
cmp
add
cmc
pop
bound
cmc
fbld
cwtl
popf
test
xchg
fs
mov
mov
push
flds
jl
mov
js
xchg
push
loop
mov
ss
call
out
enter
aad
int3
aam
test
xchg
cmpsl
inc
sub
ds
rcrl
lock
shrb
pop
mov
cmp
movl
inc
std
adc
hlt
loopne
jno
add
mov
jg
lea
jecxz
push
mov
sub
test
xchg
xchg
xor
inc
sbb
or
mov
lock
and
push
cld
cli
mov
xchg
jecxz
cli
enter
and
rorb
add
sub
stos
mov
sub
repnz
push
daa
push
popa
into
incb
into
cmp
and
adc
push
push
xchg
inc
incb
cmp
sbb
iret
mov
jl
sub
ja
add
push
jns
push
std
fwait
int
test
push
adc
in
xor
jae
xor
fildll
pop
cmp
loop
inc
adc
xchg
sub
xchg
sbb
scas
movsl
xchg
mov
push
imul
movsl
push
int
xlat
jecxz
fs
push
dec
movsl
insb
mov
sbb
push
je
push
pop
cmp
mov
fisubs
and
test
sub
dec
cmpsb
pop
aam
push
mov
mov
ret
mov
inc
adc
popa
mov
in
xor
ret
or
icebp
mov
clc
cwtl
dec
fstps
mov
push
xor
push
filds
testb
jae
sub
xchg
mov
jns
add
adc
fstpl
inc
jecxz
or
and
mov
adc
jo
pop
inc
outsl
adc
mov
test
mov
sbb
clc
mov
sub
rolb
jge
lret
in
mov
push
daa
lret
jge
mov
pop
loopne
bound
dec
cld
add
mov
faddl
or
sahf
jo
jns
mov
dec
mov
xor
insl
in
clc
out
outsb
and
movsb
sahf
aaa
sarb
xor
or
test
dec
or
popa
jns
sbb
push
or
js
mov
and
nop
adc
popf
xchg
cmp
lcall
add
test
pop
daa
jle
push
fbld
test
cltd
dec
mov
rcrl
popf
das
and
push
lods
adc
mov
daa
jnp
bound
test
pusha
mov
cmpsb
adcb
lcall
sbb
call
pop
push
insl
in
pop
outsl
ds
aas
ja
mov
data16
xchg
js
adc
add
ljmp
stc
mov
sub
lret
aas
and
push
mov
imull
push
icebp
dec
jb
loop
pop
push
mov
push
insl
into
mov
mov
js
scas
push
in
stos
mov
out
icebp
mov
mov
cmp
sub
fistps
mov
cmp
ret
movsb
pop
mov
iret
cmp
sbb
scas
imul
rorl
cmc
push
ss
cld
dec
pop
add
scas
int
xchg
sub
ret
cmp
or
stos
popf
cmp
mov
je
clc
subl
sbb
mov
pushf
dec
jnp
dec
pop
and
mov
push
and
dec
mov
jge
xor
inc
mov
sahf
mov
xchg
cmp
ja
scas
daa
dec
and
sub
outsl
dec
add
leave
xor
and
pop
jecxz
decl
out
subl
lods
data16
adc
and
scas
nop
fs
in
push
xchg
out
roll
and
out
arpl
inc
xchg
out
cli
scas
loop
jmp
dec
paddusw
movsb
or
adc
xchg
pop
mov
dec
xchg
outsl
xchg
jge
das
test
jno
mov
cld
sbb
xchg
je
cwtd
add
push
and
push
aas
in
hlt
mov
sbb
fcompl
xchg
push
add
stos
dec
aas
mov
sti
pop
push
es
add
xchg
outsl
dec
lds
sub
add
iret
fcmovnbe
push
dec
mov
shlb
lahf
test
rclb
cmp
orl
out
dec
push
mov
imul
popf
xor
outsl
jb
fcmovu
cwtl
out
lcall
ror
jae
out
jl
pop
jmp
or
or
jb
push
daa
enter
jb
iret
sti
cmp
in
xchg
inc
sbb
loop
das
es
mov
inc
shrl
pop
ret
ret
mov
adc
loope
das
pop
leave
push
sub
mov
xchg
test
ret
pop
stc
es
lds
loopne
std
xor
sub
mov
inc
mov
call
insb
inc
xchg
mov
aad
lahf
mov
pusha
sub
mov
and
mov
sub
daa
add
nop
popf
cmpb
in
mov
pusha
test
jecxz
lods
iret
xor
jl
lahf
das
repz
mov
fisttps
filds
loop
inc
push
push
jae
pop
pop
xchg
inc
hlt
sub
mov
orl
aaa
icebp
xchg
fiaddl
gs
jns
int
out
fldenv
out
mov
call
bound
cmp
jo
repz
sub
imul
pusha
jl
in
imul
iret
pusha
adc
out
int3
mov
outsl
xchg
inc
insl
shlb
insb
repz
jnp
and
leave
jg
jge
pop
into
mov
push
subb
or
jge
notl
add
mov
je
pop
andl
in
stos
sti
push
cli
inc
lcall
mov
mov
xlat
xchg
xchg
addl
adc
or
fmull
pop
fstl
pop
and
dec
fmull
push
or
mov
call
sbb
add
lcall
sub
js
cmp
out
xchg
jnp
fwait
dec
fdivl
mov
repz
outsb
lea
dec
divl
shl
test
loope
push
xchg
jecxz
ret
stos
dec
ja
in
inc
out
test
fstl
lock
int3
scas
xor
loope
shrb
and
stc
unpcklps
les
es
repnz
test
dec
pop
mov
cmpsb
push
sbb
inc
cltd
jns
or
fwait
xor
rolb
pop
dec
pop
mov
xor
jbe
mov
sarl
out
mov
repnz
into
adc
sbb
mov
mov
pop
jno
xchg
pop
and
xor
xlat
imul
xlat
jecxz
popf
adc
cmp
mov
mov
adc
sub
pop
imul
je
into
inc
sbb
mov
adc
xchg
lret
sbb
into
inc
inc
insb
inc
hlt
add
push
push
scas
loope
inc
dec
mov
add
mov
push
pop
jge
mov
add
stc
jne
or
enter
mov
cmp
in
imul
mov
popa
test
xorl
sbb
xor
inc
loopne
cmp
pop
or
js
cmp
add
xchg
jb
cmpsl
ret
je
call
test
mov
scas
movsb
in
stc
sbb
xchg
bound
or
imul
cmpsb
or
test
xchg
daa
xchg
cmp
lret
aam
mov
xlat
scas
fs
push
dec
mov
out
lea
in
mov
cli
dec
jl
out
cmpb
mov
rcrb
imul
sub
gs
push
test
dec
push
fnstsw
cmp
outsb
sub
js
jne
fisubs
fnstsw
xor
fbld
daa
pushf
ret
lahf
dec
aam
push
cmpsl
das
stc
mov
cld
icebp
ret
push
hlt
mov
enter
stos
mov
xchg
add
mov
stc
add
pushf
icebp
mov
dec
pop
xor
lar
loope
loop
into
in
dec
push
insl
sbb
pusha
enter
mov
jae
jb
std
mov
lret
rorl
inc
loopne
div
das
mov
lods
cmp
test
jp
enter
adc
into
insb
sub
bound
sub
in
or
jns,pt
and
test
push
mov
test
std
cmp
pop
mov
push
scas
xchg
ds
addr16
addr16
adc
and
add
imul
sub
ret
cli
repnz
iret
jmp
test
cmp
inc
test
mov
data16
cmc
fdivrl
ja
test
fbstp
movsb
xchg
ror
data16
jl
stc
icebp
mov
xlat
mov
mov
inc
or
aad
jp
int3
fdivrs
cli
xchg
iret
cld
into
dec
cmp
or
call
jnp
jg
push
dec
mov
leave
add
inc
je
in
inc
mov
sub
sbb
leave
pop
insl
fld1
jb
out
pushf
lret
imul
push
sbbl
sbb
repz
sbb
aad
or
inc
shll
push
sti
lods
loopne
in
scas
cmp
xor
dec
and
mov
jae
mov
dec
adc
lods
cmp
cld
mov
sarb
out
mov
adc
and
xchg
add
in
xlat
shl
out
or
xchg
mov
add
movsl
cmc
loop
xlat
and
dec
sub
lahf
in
pop
cmp
loope
fdivs
lret
fcmovnb
mov
pop
hlt
outsl
into
or
cmp
lret
jne
push
dec
mov
cmpsb
sti
jle
repz
stos
dec
js
pushf
stc
pop
jl
pop
pushf
add
push
push
pop
mov
cld
loop
pop
imul
cmpsl
roll
arpl
movsl
push
xchg
dec
mov
subb
and
gs
cli
outsb
enter
xor
cmpsb
fwait
cltd
and
xchg
xchg
hlt
mov
andb
push
jb
les
sbb
xchg
std
bound
mov
mov
add
movsb
and
mov
or
out
push
mov
sub
pop
cs
fs
ret
or
pop
fldl
sub
pop
aad
movsb
or
fs
fwait
scas
test
pushf
xchg
orb
xor
gs
nop
sbb
jae
pop
jb
sbb
jo
rcrl
pop
cmp
fsubp
test
js
ja
scas
add
fidivs
pop
push
testl
mov
mov
xchg
ja
fsubrp
jecxz
mov
mov
out
mov
mulb
push
pop
iret
cmp
hlt
cmc
xor
pushf
and
aas
iret
inc
add
inc
sbb
lcall
lret
and
test
mov
push
orl
pop
int3
fst
xchg
icebp
dec
es
mov
arpl
dec
jmp
ret
and
mov
jecxz
pop
in
cmpsb
add
lock
xchg
stos
jne
push
mov
xchg
fildl
cmpsb
daa
xchg
lret
push
scas
lahf
xchg
scas
xor
cmpl
out
cmpsb
arpl
test
dec
cmp
popf
mov
mov
xchg
and
je
jl
stc
adc
movsl
push
add
imul
sarl
cs
into
roll
adc
pusha
xor
or
enter
add
xor
aad
push
xor
jecxz
ret
mov
add
push
js
icebp
test
lds
inc
test
mov
stos
fcoml
jne
ret
pop
xchg
push
mov
pop
aam
jbe
sub
mov
aam
lods
xor
sbb
adc
mov
sub
lods
add
lahf
fidivrs
jmp
fwait
jg
stos
adc
cs
xchg
jmp
imul
sub
arpl
jae
cmc
push
into
cwtl
or
cmpl
xchg
ret
imul
popa
jns
mov
and
cmp
stos
repnz
aas
jae
clc
dec
shl
hlt
dec
cltd
hlt
inc
sahf
sub
scas
fs
fldl
movsb
mov
cld
jecxz
int3
and
jl
xchg
xchg
xchg
pop
test
xor
adc
push
mov
rcl
inc
and
adc
scas
lret
fdivp
in
mov
inc
loope
out
push
sbb
stos
nop
xor
int3
sub
mov
push
push
stos
sub
mov
enter
lods
scas
sti
push
inc
das
std
out
mov
pop
dec
cltd
and
in
movd
push
cmc
fcoms
aaa
imul
mov
fs
mov
les
pop
fwait
adc
idivb
notb
lahf
push
out
mov
gs
scas
mov
fmul
insl
lds
jmp
testb
mov
out
test
pop
xchg
and
andb
push
push
lret
add
adc
adc
mov
adc
jo
jns
jne
pop
in
xchg
dec
lahf
and
and
push
into
and
out
mov
jle
lock
xor
xchg
data16
push
aam
mov
push
es
mov
setb
insb
and
fnstenv
xchg
js
sub
sbb
mov
shl
jge
in
mov
sti
xchg
mov
addl
mov
sbb
repz
pop
mov
fwait
xlat
push
cmpsl
mov
inc
or
and
pop
pusha
fs
xlat
sub
add
mov
jns
sub
dec
outsl
xchg
jne
cmpsl
push
xor
add
loope
cmp
or
adc
roll
fildll
sub
stos
fcmovne
add
push
lds
push
jge
int
dec
shlb
dec
loop
movsb
stos
xor
xor
mov
sub
push
stos
popf
stc
incb
jmp
or
add
mov
sbb
xor
int3
cmpsl
xchg
mov
mov
sbb
cmp
outsb
add
push
out
mov
jge
sbb
pop
clc
das
xor
adc
sbb
test
sahf
xor
setns
rclb
jl
sar
mov
sub
jmp
sub
out
scas
jnp
rep
out
add
hlt
cltd
loopne
ffree
mov
outsl
sahf
faddl
scas
repnz
pop
mov
dec
int
addr16
mov
mov
jle
movsb
jne
adc
out
movsb
in
dec
sub
inc
lcall
pop
inc
or
mov
lret
imul
mov
in
pop
xchg
mov
push
inc
xchg
es
in
aas
adc
xor
aam
call
ret
and
dec
pop
in
mov
nop
ljmp
icebp
ret
dec
xor
or
xchg
and
in
pop
sub
inc
or
push
or
pop
popa
pop
push
or
xchg
inc
pop
mov
xor
ret
fs
jae
push
jo
les
jb
frstor
inc
dec
sbb
adc
jb
or
pop
mov
push
fs
pushf
add
jno
hlt
sbb
pop
call
push
dec
mov
mov
rorb
iret
mov
jmp
add
popf
loop
or
jecxz
jbe
cwtl
adc
fmuls
leave
and
call
test
repz
cmp
sub
inc
dec
and
icebp
stos
imul
in
out
stos
lcall
xorb
rcrl
mov
insb
jbe
sub
aam
addr16
cltd
test
pusha
scas
cli
jl
adc
mov
adc
or
jge
push
pop
cmp
sbb
jmp
push
jge
jae
fsubrs
push
inc
outsb
sub
adc
inc
push
lcall
nop
shlb
xor
add
dec
xlat
lds
insb
lods
push
push
lods
jns
cmp
rorl
mov
mov
in
mov
mov
imulb
sbbb
popf
sbb
test
push
loopne
mov
and
loopne
int3
push
cmp
push
icebp
mov
in
repz
push
xchg
cmp
aas
pushf
mov
sub
std
lahf
movsb
sbb
pop
xor
pop
sti
loop
outsl
jo
std
sbb
mov
push
lea
leave
jle
lea
lret
std
mov
ret
mov
dec
lock
ret
sbbl
xchg
arpl
add
mov
pop
scas
cmp
mov
lods
push
adc
push
add
cli
dec
and
dec
pop
dec
or
insb
movsb
mov
out
sahf
sub
xor
into
dec
push
add
stos
aam
adc
cwtl
mov
test
pusha
push
out
jae
xlat
cmp
pop
xchg
mov
pushf
jg
mov
and
pop
pop
xchg
sbb
fmuls
sbbb
pusha
xchg
aam
cmp
add
fsubl
movsl
jmp
lock
cmpsb
inc
outsb
push
xchg
sbb
insl
cwtl
xor
test
xchg
repz
pop
and
jbe
int
push
stos
js
lahf
pusha
xor
fdivr
mov
mov
cmc
cmp
inc
int3
add
inc
inc
jae
pop
cli
push
mov
add
push
sub
sbb
shrb
je
mov
cltd
jg
jno
lahf
enter
inc
dec
ja
add
sbb
repz
dec
jb
insb
xchg
loope
std
lret
pop
push
jo
in
jo
incb
lds
jle
daa
xor
es
stc
and
inc
mov
jmp
js
lods
adc
push
outsb
divl
inc
jae
jg
loop
cltd
mov
mov
push
lea
mov
jp
ds
fdivs
dec
jo
pushf
dec
imul
jmp
adcb
loop
imul
roll
mov
add
or
faddl
pop
gs
fstpt
mov
dec
inc
sbb
push
sti
jmp
adc
mov
xorb
ret
cs
push
aam
push
pop
in
jmp
jno
and
mov
cwtl
inc
stos
xor
xchg
pop
lcall
pop
sbb
add
addr16
testl
cltd
mov
leave
inc
popa
cmp
jmp
test
or
cmp
icebp
inc
jecxz
lock
lods
mov
lcall
cmc
ds
mov
adc
cmp
and
pusha
lcall
mov
das
pop
mov
cmpsb
int3
jecxz
mov
mov
add
je
pop
xchg
cltd
cmpsl
push
in
mov
mov
pop
push
loopne
sub
aas
inc
mov
jecxz
test
inc
aam
sbb
xchg
jbe
dec
jbe
cmp
outsl
faddl
imul
adc
mov
adc
shrb
scas
or
inc
mov
test
lret
and
cmc
and
cmp
addl
or
adcb
insb
adc
int3
mov
mov
aas
push
outsb
addb
pop
cmp
imul
stos
hlt
imul
mov
cmc
push
mov
mov
and
loopne
in
sbb
fwait
and
cwtl
orl
repnz
push
adc
sbb
lods
inc
fcoml
aad
stos
dec
cwtl
test
cmp
bnd
fwait
sbb
loop
push
xchg
dec
mov
shrb
mov
insb
arpl
sbb
hlt
les
test
xor
aas
and
add
hlt
btr
enter
cmpsl
enter
lret
mov
adc
xchg
cmp
divl
jle
sbb
decb
imul
insl
js
iret
ljmp
outsb
pop
or
mov
ss
jo
fcom
test
dec
mov
movsl
sbb
sarw
inc
mov
dec
rorl
aam
fldcw
ss
mov
bound
mov
sbb
mov
xlat
adc
push
clc
and
div
jns
mov
call
and
insb
sub
and
pusha
adc
rclb
stos
inc
popa
inc
test
pop
data16
jge
shr
mov
xor
inc
mov
imul
clc
push
adc
hlt
jp
lds
jp
jecxz
and
inc
hlt
and
mov
cwtl
lock
inc
sub
int3
mov
xchg
xchg
sahf
xlat
mov
mov
push
cmp
fimuls
scas
pop
lahf
push
jo
sbb
int
test
mov
pop
subb
pcmpeqd
mov
test
imulb
and
mov
mov
ja
or
fidivrl
dec
xor
lret
stos
inc
jae
outsb
cltd
ljmp
and
mov
out
and
adc
cwtl
fdivs
cld
mov
cmp
push
test
fcom
sub
cli
mov
je
fs
cmpsl
dec
push
push
and
mov
xor
sub
jb
loope
iret
outsl
leave
dec
in
loop
jmpw
sub
aas
scas
into
or
adc
orb
hlt
mov
dec
ret
inc
xor
mov
je
sub
and
das
push
and
in
xchg
stos
or
adc
xor
mov
addl
les
ss
dec
dec
inc
jmp
bound
stc
lret
movsb
add
and
push
mov
ret
jp
shrb
mov
and
ret
cmpsb
adc
cmc
push
js
xchg
xchg
nop
and
jmp
imul
std
sbb
inc
push
mov
lods
imul
aad
fldl
scas
out
lock
and
fstl
adc
pop
negb
rep
cmc
jns
sbb
xlat
lods
popa
sarb
lret
dec
or
adc
jae
test
xlat
cmp
mov
icebp
les
pop
cmp
cmp
fs
or
or
inc
test
subb
ss
xlat
push
adc
out
mov
pop
rorl
daa
sbbb
lds
outsl
shrb
cmp
shr
cwtl
or
clc
xorb
and
aaa
arpl
pop
outsb
or
inc
cmp
xchg
jge
clc
lret
nop
inc
call
jb
pop
push
in
jmp
inc
int3
cld
jl
movsl
pop
jmp
dec
pushl
mov
and
mov
mov
mov
mov
xchg
xchg
pop
enter
adc
sub
aad
and
pop
insb
sub
hlt
adc
xchg
dec
xchg
or
lret
ljmp
in
push
jmp
popa
loope
shlb
mov
or
sbb
add
and
xor
mov
pop
mov
mov
sti
inc
inc
cmc
xchg
sub
push
jge
inc
pusha
jb
mov
mov
loopne
adc
or
mov
daa
adc
inc
rcrl
push
outsl
jge
mov
mov
adc
adc
adc
pop
out
cmc
nop
sub
stos
mov
dec
ret
sbb
shll
fdivl
sbb
in
xchg
inc
xor
sub
add
mov
pop
fidivrs
popf
imul
inc
fldenv
test
xor
or
lock
mov
inc
xchg
push
ds
dec
addr16
rclb
and
mov
out
or
push
or
aad
xchg
ljmp
popf
mov
xchg
push
jne
mov
inc
push
mov
pushf
fmull
int3
or
pop
out
cld
sub
inc
mov
sub
rorl
shlb
int
out
xchg
sub
stos
aas
insb
jg
call
pop
mov
jl
xorl
push
scas
popa
push
jmp
cwtl
fcmovbe
mov
jo
bound
dec
rcrb
xor
arpl
out
adc
lahf
inc
mov
mov
lahf
sbb
cmpsb
movsb
mov
inc
aas
fs
gs
dec
sbb
sti
lds
sbb
mov
dec
jno
cmp
in
cmp
aam
add
outsl
sbb
adc
scas
stc
inc
sbb
mov
jge
into
mov
mov
pop
jbe
lcall
cs
jno
mov
mov
movaps
test
movsl
jl
popf
stos
pop
xchg
and
push
dec
jbe
lcall
cld
cwtl
jno
fwait
jae
repz
fistpll
inc
repz
mov
cmpsb
dec
nop
jns
test
add
push
inc
imul
pop
int3
mov
fs
lahf
sbb
rcrl
in
outsb
movsb
inc
xor
rorl
shrb
mull
jecxz
and
xchg
ljmp
cmpb
pop
pop
cmp
in
repz
sub
xchg
insb
sbb
fwait
in
mov
adc
pop
loope
lcall
aaa
mov
cmp
dec
scas
stos
xchg
push
adc
jo
ror
loopne
xor
popa
mov
xchg
jb
xchg
and
lea
adc
movsb
pop
adc
xor
sbb
push
adc
jg
or
loopne
add
test
push
inc
ret
pop
ja
jo
mov
jb
decl
in
rorl
aaa
test
scas
mov
dec
jne
inc
add
ljmp
js
fwait
or
mov
push
outsb
mov
cmpsl
xchg
ja
sub
pop
push
lret
iret
push
cld
cmpsl
scas
fs
push
dec
loopne
jmp
es
das
cli
fs
xor
mov
sub
or
imul
and
sbb
mov
sbb
movsb
fiadds
dec
insl
cmp
mov
pop
add
loope
mov
scas
add
outsl
inc
or
or
clc
sbb
mov
adc
pop
mov
jae
pop
pop
ds
ret
mov
or
mov
ja
mov
outsb
hlt
mov
arpl
mov
mov
or
test
mov
jb
aad
mov
jns
out
jle
lods
movsb
xor
add
pop
mov
pop
in
nop
movsb
mov
ret
loopne
hlt
lahf
dec
iret
pop
cmp
into
inc
adc
out
gs
jmp
mov
dec
popf
cwtl
mov
aam
or
adc
sbb
and
jb
js
sub
cmp
loopne
adc
pop
mov
mov
or
cmpl
jle
fistl
push
jmp
lock
inc
jge
mov
stos
sub
fwait
dec
sub
xlat
addb
pop
jo
add
push
fisttpll
add
jmp
xchg
ja
or
movl
rolb
jl
pop
pop
out
or
sbb
adc
sub
stos
jbe
pop
ss
mov
cwtl
mov
icebp
in
iret
fstpl
pusha
dec
and
mov
inc
mov
ss
fistpl
pop
inc
dec
mov
jb
mov
add
and
push
nop
sbb
mov
or
xchg
inc
mov
adc
pop
inc
mov
push
adc
je
repnz
cwtl
mov
lea
and
push
push
sbb
mov
loopne
pusha
xchg
rcll
mov
je
push
xchg
mov
lea
push
jns
mov
add
pop
repz
jl
xchg
enter
inc
out
pop
mov
mov
inc
in
loop
xchg
sub
rcl
sbb
or
lea
pop
inc
stc
les
cmpsl
stos
lahf
jae
ret
js
mov
or
and
in
sbbb
ja
cmpsb
shlb
and
pop
pop
mov
aas
sbb
and
xor
and
cmp
lret
loop
or
rorb
lret
shrl
stos
inc
orl
movsl
fsubrl
xchg
push
sbb
sarl
fiaddl
decb
and
sete
sbb
xchg
insl
out
fildll
adc
dec
and
sbb
jp
push
inc
sub
in
dec
mov
repnz
sub
fwait
or
enter
xor
xchg
xchg
fnsave
mov
call
int3
sbb
cmp
imul
std
pusha
loope
or
xchg
mov
call
xor
popf
cs
jb
adc
test
dec
push
cli
mov
xchg
dec
fiaddl
sub
stos
test
cld
div
sbb
and
gs
mov
jb
int3
addr16
jne
aad
pop
xor
sti
mov
stc
stc
mov
sbb
mov
call
aam
ss
xchg
jle
inc
lahf
inc
daa
gs
sbbb
add
cld
ficoms
xchg
pop
fstp
lock
mov
dec
cmp
scas
aad
push
jae
mov
imul
mov
fnstcw
shrb
fcomp
jl
add
add
imul
mov
shrl
jne
mov
loope
cmp
test
pushf
xor
enter
scas
push
les
in
loopne
incl
sbb
lea
arpl
pop
sahf
dec
lret
push
xorl
pop
xor
mov
fdivrl
mov
clc
adc
ss
cli
ja,pt
mov
push
insb
movsl
pop
jecxz
in
add
sbb
jns
pop
out
lcall
mov
mov
outsb
xlat
dec
dec
sub
fwait
call
jge
xchg
mov
push
and
lds
int
lcall
push
cltd
mov
dec
scas
movsb
roll
scas
adc
je
repnz
or
dec
jae
addr16
mov
nop
into
push
out
popa
jge
ja
and
dec
imul
ljmp
inc
xchg
add
jl
xchg
jb
fsubrs
push
bound
mov
imul
popf
mov
pop
repz
movsb
test
aas
mov
mov
insb
hlt
ljmp
fsubl
push
test
arpl
cmp
inc
sbb
push
nop
cmp
into
push
sub
xchg
dec
std
stc
push
mov
clc
adc
les
mov
xchg
in
call
aad
push
movsb
bnd
dec
mov
sub
or
push
cmp
cmc
outsl
enter
movsl
inc
mov
mov
cli
jns
rclb
inc
and
sbb
out
cmp
and
xor
sbb
inc
inc
lahf
outsl
push
push
fistps
cmp
cmp
jb
imul
fdivrp
add
lahf
outsb
subl
push
mov
jp
jnp
aad
es
in
in
adc
pop
adc
fnstenv
lods
out
xchg
jbe
inc
xlat
jl
mov
iret
xor
scas
pop
ret
mov
cmp
mov
add
inc
mov
std
jae
insl
jl
test
cs
cltd
pop
inc
int3
cmpsl
jae
and
mov
jb
pop
sti
inc
push
jp
xchg
mov
bound
sub
xor
popl
sub
pusha
fbld
rcr
hlt
decb
cmpsl
inc
add
sbb
inc
call
mov
sbb
fcoms
movsl
lahf
add
add
addl
addb
in
icebp
jne
xor
cmp
es
sahf
and
sbb
bound
es
arpl
or
mov
pop
in
cwtl
in
dec
cmp
sbb
pop
hlt
mov
sbb
cmp
add
add
sti
or
push
push
push
xor
jns
push
in
and
cmp
cmpb
inc
and
sub
pop
filds
scas
sub
mov
mov
jg
int
scas
fiadds
ljmp
cltd
cli
gs
test
inc
jp
inc
sbb
mov
mov
dec
jbe
jo
mov
mov
or
mov
lahf
lahf
dec
shlb
mov
mov
inc
sub
cmp
push
xchg
xlat
cld
pop
dec
dec
lea
in
out
loopne
mov
leave
daa
out
mov
mov
sub
xlat
sbb
xchg
fsubs
xchg
movsl
jl
adc
dec
movnti
inc
sub
mov
xlat
push
leave
or
push
dec
adc
hlt
pop
inc
roll
leave
jne
out
mov
shll
cmpl
hlt
cmp
fadd
call
mov
mov
lret
add
data16
lock
incb
stc
rcll
scas
mov
mov
xchg
xor
mov
lret
inc
mov
lods
xorb
test
loopne
push
mov
cmp
icebp
sahf
xchg
mov
sbb
pop
mov
popf
lret
faddl
fucompp
dec
mov
inc
rclb
push
pop
fcmove
scas
adc
cmp
xor
ret
mov
adc
pop
test
pop
xorw
dec
cmp
xchg
or
jae
icebp
xchg
pushf
sahf
mov
pop
mov
cmpl
push
cltd
cmpb
fldl
sbb
ljmp
inc
ficomps
test
or
insb
sbb
xchg
movsl
aaa
sti
das
mov
mov
iret
cmp
inc
fwait
sarl
cli
lret
mov
pushf
out
bnd
xchg
xchg
mov
jo
ror
repnz
fidivs
xchg
xchg
jg
xor
sub
scas
push
aam
cmp
mov
push
xor
popa
xchg
stos
pop
sub
iret
js
daa
dec
sbb
fildl
mov
in
fs
ss
xchg
push
dec
adc
add
aas
idiv
sub
adc
push
outsb
push
mov
aaa
jecxz
mov
in
fsubp
cmc
jl
adc
lods
fwait
xchg
xchg
cmpsl
fwait
cltd
mov
cmp
movsb
pushf
mov
je
push
sub
pop
xchg
scas
jmp
pop
push
test
xchg
mul
inc
outsl
jg
ret
insl
call
cmp
jno
sub
fmuls
inc
rcl
scas
mov
loop
xor
jno
int
xchg
pop
ret
sbb
ret
sub
mov
rcll
mov
push
push
out
push
inc
in
sub
leave
sub
mov
inc
iret
in
movsl
cld
stc
mov
and
mov
dec
or
mov
xchg
pop
lds
xchg
mov
mov
decl
pop
data16
inc
ss
into
fs
xchg
addr16
repz
in
insb
xor
xchg
inc
scas
fisttps
xchg
out
lods
pop
cli
lds
test
adc
loopne
jl
out
push
fsub
dec
lods
std
pop
xchg
ret
xor
movsb
test
sub
movsb
push
lods
mov
jnp
inc
sbb
or
mov
iret
and
or
sbb
inc
ja
push
addr16
xchg
adc
jle
stc
and
addb
ss
and
or
pop
jae
xchg
or
pusha
addb
outsl
mov
jl
dec
fdivrl
nop
lahf
subl
xchg
movsb
jno
cmp
jle
js
jmp
mov
xchg
loop
add
xlat
push
stos
sti
data16
ret
jmp
out
sti
dec
xchg
stc
push
sbb
out
popf
mov
sub
jo
inc
cmc
aam
test
mov
idivb
test
sbb
cmp
mov
push
mov
mov
mov
mov
pop
test
cmp
outsl
icebp
mov
mov
fisubs
shlb
jo
mov
push
ror
or
dec
adc
mov
pop
pop
pop
int3
sbb
lods
mov
push
pop
lret
popa
sahf
sub
jbe
sbb
push
mov
fs
push
mov
dec
pop
outsl
add
lods
loopne,pt
outsb
insb
lods
mov
mov
cmp
in
mov
shll
mov
sub
sbb
or
aam
sbb
jge
adc
cli
pop
pop
inc
lods
sti
pop
sub
jo
dec
cmp
sbb
repz
cmpsl
inc
into
daa
leave
out
jmp
idivb
mov
lcall
mov
test
fcmove
lods
xor
stos
adcb
dec
push
cmpsw
outsl
push
movsl
repz
push
in
and
mov
int3
loop
dec
cmovo
pop
leave
xchg
ja
jmp
iret
cmp
mov
sub
test
push
lea
xor
fs
push
mov
popf
jle
add
sub
pop
inc
and
jecxz
scas
and
stos
xchg
adc
imul
notb
pop
lods
test
mov
lds
mov
ficoml
mov
xchg
bswap
outsb
andl
call
sahf
imul
cmp
mov
adc
mov
or
cmpsb
mov
out
push
jo
pop
dec
test
push
shlb
daa
je
sbb
movsl
mov
push
mov
stos
cld
jp
or
jne
pop
rol
sar
icebp
pop
or
cmc
push
jbe
ficoml
out
xchg
mov
cld
xor
inc
addl
mov
leave
scas
outsb
pusha
xchg
lods
xlat
movsb
pop
adc
dec
xor
xor
iret
insl
mov
jg
xor
push
movsb
adc
mov
xchg
stos
es
int
jg
scas
mov
jo
enter
jg
dec
push
imul
loope
testb
fisttpll
loope
jnp
.byte
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
dec
adc
div
fs
xchg
ror
into
out
cld
test
add
add
xor
mov
mov
mov
add
sub
sub
call
loope
hlt
sbb
fidivrs
fcomps
mov
popl
jae
mov
sub
sbb
add
push
or
pop
cmp
jne
add
jmp
mov
push
and
fstps
cmp
xor
push
pop
pop
jmp
add
es
mov
cmpb
xlat
inc
insl
cmp
pop
inc
cmp
aas
icebp
jbe
fistpl
aaa
mov
mov
mov
repnz
pop
cmp
and
cwtl
adc
xchg
addr16
xor
push
mov
cltd
jecxz
mov
pusha
test
pop
loope
mov
mov
and
divb
xchg
sbb
stos
les
add
ret
fmul
mov
add
in
jmp
fisttpl
inc
fldl
cmp
pop
fdivl
fcomi
hlt
push
pop
repz
dec
and
hlt
and
out
fcmovnbe
push
add
nop
leave
sbb
sbb
sub
mov
and
fcomi
and
int
ret
mov
jp
movd
adc
jecxz
sub
dec
fs
xor
pusha
mov
dec
cwtl
popa
das
jae
mov
sub
loopne
and
icebp
dec
sub
rorb
and
and
cmc
xchg
outsl
push
push
pop
test
push
dec
pop
fcomi
and
push
stos
inc
pop
fld
pop
cs
and
out
fstps
pop
mulb
fistpl
stos
jmp
fcomi
and
xor
insl
dec
push
cmp
nop
enter
mov
xor
idivl
inc
pusha
jl
pop
je
push
and
std
adcb
or
sub
xchg
pusha
pop
jle
mov
subb
int
and
mov
mov
mov
add
hlt
and
fsubl
xor
insb
add
ror
fnstenv
or
sti
add
cmp
push
add
pop
scas
jmp
jo
inc
mov
test
fbld
sbb
in
nop
fisubrs
adc
push
push
pusha
cmp
scas
mov
push
dec
out
add
cli
pushf
or
sbb
inc
sbb
cmp
push
fnstsw
divb
jg
frstor
scas
ret
jb
mov
add
int
test
xorl
xor
lahf
scas
fisttpll
lcall
ret
mov
mov
inc
ss
push
dec
repnz
pop
push
dec
lods
popf
sub
je
cltd
sub
cmp
sarb
dec
lret
push
popl
sub
adc
ret
dec
inc
push
decl
xchg
jb
push
jo
loope
mov
and
sbb
mov
pop
ljmp
lret
sbbb
and
outsl
mov
mov
lcall
jmp
jl
aas
js
mov
cmp
aam
xor
sbb
jl
mov
ds
or
sbb
fcoml
js
not
jp
sbb
pop
push
fistpll
dec
leave
push
pop
sti
sbb
mov
dec
add
mov
push
lods
cmp
dec
leave
inc
mov
dec
add
mov
dec
js
cmpsb
cli
push
aaa
mov
mull
mov
ret
js
mov
js
cmp
js
mov
dec
call
mov
jmp
rorb
adc
fwait
addr16
dec
js
js
mov
push
js
cmpsl
dec
int
dec
inc
js
or
test
mov
push
js
sahf
bnd
mov
pop
jp
mov
jnp
dec
push
stos
cmpb
dec
dec
dec
push
lret
mov
push
js
or
test
mov
aas
js
sbb
jl
mov
lret
mov
lret
mov
ret
sahf
dec
js
fisttpll
add
xchg
sti
stos
sahf
dec
js
fstpt
ret
and
add
shrb
ja
mov
dec
imul
popa
push
xchg
outsb
lds
outsb
js,pt
push
jmp
dec
sahf
lea
negb
adc
push
push
lret
mov
scas
ja
mov
mov
ret
cmp
dec
or
ret
and
add
arpl
mov
and
lcall
dec
mov
lret
mov
ret
popf
dec
js
movsb
dec
dec
dec
cmpsl
ds
push
out
sarl
popf
dec
dec
dec
jmp
imul
dec
js
pop
dec
js
mov
or
rorl
xor
int
rolb
cmp
ljmp
lods
dec
inc
pop
jge
dec
outsl
adc
js
cmp
ljmp
dec
js
lahf
lods
dec
inc
pop
jge
dec
outsl
jo
cmp
jnp
xchg
or
mov
pop
insl
and
insl
mov
popa
cmp
ljmp
dec
and
aad
dec
mov
add
ja
mov
pop
insl
and
insl
mov
popa
cmp
ljmp
xorb
ja
mov
pop
insl
and
insl
mov
dec
cmp
ljmp
enter
nop
pushf
call
push
repz
pop
addr16
aas
mov
ljmp
scas
xchg
mov
pop
insl
and
insl
mov
and
js
sahf
dec
push
adc
jg
mov
enter
nop
pushf
call
push
rcl
lret
inc
add
data16
aad
jmp
cmc
push
test
fistl
mov
ds
dec
push
scas
shll
fwait
aad
jmp
mov
xor
aas
add
fidivs
jnp
dec
js
mov
aaa
pop
dec
mov
dec
jnp
fs
js
mov
xor
sti
negb
enter
dec
and
sahf
dec
js
adc
lds
ret
sahf
dec
js
mov
mov
dec
js
xchg
dec
out
test
push
pop
js
and
test
pop
loop
dec
mov
inc
scas
rcll
dec
js
adc
sub
pop
xor
popf
shlb
es
adc
scas
pop
sahf
test
cmp
or
dec
inc
enter
movb
mov
inc
xor
inc
push
cltd
adc
movsb
into
dec
sti
mov
push
jae
stos
es
jo
pop
lods
daa
bound
mov
pop
jo,pn
mov
jno
mov
dec
js
mov
dec
js
mov
dec
js
mov
dec
js
mov
rorl
mov
dec
mov
dec
mov
js,pt
mov
dec
js
mov
dec
js
mov
dec
js
mov
dec
das
out
pop
jl
dec
cmp
cmp
cmp
repnz
pop
movsb
push
and
aas
fcoms
mov
ficoms
stos
fdivrp
popa
leave
push
dec
ds
push
mov
sbb
sub
inc
aaa
icebp
shll
cmp
out
scas
daa
cli
loop
or
mov
in
or
clc
fdiv
lret
lea
cmp
jne
std
push
popa
pop
movsl
stc
push
sub
sub
stos
les
xor
jecxz
xor
push
or
jl
in
xchg
xor
xchg
adcb
adc
test
cld
xchg
sbb
add
fdivrl
aam
xchg
inc
enter
bound
shll
jb
inc
mov
cmp
push
or
das
pop
lcall
fisubl
pop
mov
les
xor
into
imul
cld
add
cmp
inc
fdivp
aaa
mov
xchg
fwait
cmp
int3
sbb
into
leave
mov
adc
cld
push
je
xchg
push
adc
fdivl
mov
xchg
iret
push
ja
pop
data16
ljmp
ficompl
cld
das
dec
aas
lods
mov
xor
pop
daa
popf
mov
movsb
iret
out
adcl
cmpsb
imul
std
xlat
out
inc
sub
call
cmpsb
dec
xchg
popf
stos
jae
rcr
in
mov
scas
and
out
mov
das
mov
or
fstpt
xor
mov
std
mov
lret
jno
jo
fs
xchg
dec
jl
add
fnstsw
xlat
xchg
sbb
mov
push
dec
and
jbe
sarl
xlat
jne
and
pop
lock
insb
mov
ja
cmp
adc
sub
pop
push
and
mov
dec
movsl
mov
cmp
mov
or
jo
cld
in
sub
mulb
xlat
sar
pusha
nop
or
mov
out
mov
movsl
sub
or
mov
dec
jno
add
test
cli
jns
xchg
cs
push
pop
xchg
add
ja
js
cmp
pop
je
xchg
mov
scas
mov
bound
pop
xor
aaa
pop
push
cwtl
repnz
mov
pusha
and
fistl
sti
cmpsl
mov
sbb
push
push
lods
lcall
add
int3
inc
push
aaa
xor
and
dec
xor
jae
test
dec
inc
jl
stc
sub
mov
inc
and
sbb
sbb
sahf
sub
imul
mov
lds
or
iret
push
jbe
xor
jg
mov
cmp
add
add
add
or
add
adc
insb
push
add
insb
push
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
insb
push
add
imul
cld
insb
push
add
push
add
insl
push
add
push
add
insl
push
add
push
add
insl
push
add
push
add
insl
push
add
push
add
insl
push
add
push
add
add
add
add
jbe
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
push
add
add
add
insl
push
add
add
add
insl
push
add
add
add
add
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
xor
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
sarl
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
les
add
mov
add
add
add
lods
insl
mov
mov
cwtl
mov
mov
mov
lds
rcrl
addl
xchg
xchg
ljmp
or
cmp
dec
xchg
rorl
mov
mov
jecxz
push
cmpb
out
jnp
dec
stos
mov
mov
lret
int3
mov
mov
sahf
loop
xlat
insb
and
sub
adc
cmp
es
sub
fiaddl
xchg
sub
jnp
or
xor
or
sbb
mov
jle
cmp
ja
imul
inc
add
lods
in
movsb
push
sbb
insb
ficoms
movsb
stos
mov
add
ljmp
mov
mov
insb
or
std
pop
or
or
mov
shrb
dec
pop
and
lods
xor
cmpsb
adc
insl
les
in
in
es
pop
jl
pusha
leave
inc
mov
ret
lods
mov
subb
sub
and
push
or
pop
inc
lret
es
ret
cmpsb
mov
lods
lcall
insl
mov
test
dec
jmp
aad
xchg
pop
loop
in
cwtl
lods
sbb
sbb
cmc
ljmp
push
jle
ret
pop
inc
xchg
mov
add
mov
sub
aam
ss
inc
and
push
push
addr16
ret
sub
mov
or
out
aam
sbb
add
xchg
dec
add
push
decl
lahf
int3
test
sub
out
adc
and
mov
and
mov
loopne
pop
aas
push
inc
mov
adc
test
int3
mov
dec
xor
sbb
lds
mov
pop
jge
xor
loope
dec
push
mov
sub
addl
xchg
lods
xor
lea
lahf
mov
xor
out
cli
es
mov
mov
mov
add
mov
jae
ret
cmp
push
mov
mov
push
xor
imul
jmp
jmp
or
stos
dec
ja
icebp
xchg
mov
add
dec
addr16
icebp
fnstsw
hlt
adc
cmpsl
cwtl
out
sti
ss
adc
icebp
dec
lahf
repnz
xchg
leave
int3
mov
sub
mov
mov
add
jp
out
bound
cmp
out
and
or
mov
insl
mov
loope
cmp
sub
mov
inc
adc
mov
pop
dec
cmp
ja
dec
pop
jle
push
mov
jl
into
adc
jns
xchg
pop
pusha
inc
stos
test
cld
jns
or
mov
popf
mov
push
repz
push
sbb
jg
ret
cmp
call
sub
lods
mov
mov
iret
xor
fsubs
lock
in
rcrb
or
add
sbb
loopne
nop
xor
repnz
cld
imulb
xor
mov
mov
jmp
ja
popf
lret
mov
and
andl
jl
cli
sub
xchg
sti
movsl
push
cmc
jno
lcall
xor
arpl
hlt
lahf
fistl
xchg
xchg
movsl
dec
jo
imul
sub
sti
daa
push
les
push
iret
sbb
mov
adc
jo
pop
xchg
add
sub
jnp
inc
mov
xor
data16
out
jle
aam
sbb
aaa
dec
push
cmp
shll
popf
sbb
imul
nop
inc
adc
cmp
outsb
mov
das
in
dec
test
aam
sub
ds
ret
sarl
and
loop
mov
hlt
not
xlat
in
add
dec
std
adc
mov
loope
call
aam
cmc
dec
outsb
aas
add
aam
data16
sbb
negb
int
jbe
pop
in
push
inc
fs
into
mov
sbb
arpl
and
test
rol
ds
sub
xor
jecxz
repnz
rcr
mov
jne
mov
mov
or
bndldx
dec
out
sub
jnp
push
aaa
int
mov
mov
mov
inc
sbb
or
aad
jl
mov
fwait
or
xchg
mov
test
cmpsl
xor
jae
jbe
aad
dec
pop
add
ljmp
fwait
das
pusha
fiadds
xor
sbb
add
jns
mov
jge
jns
mov
cld
sahf
push
push
inc
aam
inc
fisubrl
mov
mov
and
adc
and
popa
or
test
rcr
out
out
imul
push
fimull
push
push
dec
xchg
testb
adc
adc
push
jge
cmc
xchg
fsubrs
mov
jnp
push
inc
out
fwait
cmpsb
test
mov
outsl
aam
call
sub
add
sarl
mov
roll
ret
cmc
adc
xchg
xchg
scas
cld
inc
push
cli
or
fmulp
jmp
inc
lea
shlb
mov
jge
dec
idiv
mov
jecxz
iret
cli
iret
mov
cltd
sub
pop
repz
arpl
cli
mov
fs
test
cs
mov
ss
or
popa
jbe
test
repnz
lea
fs
xor
cs
inc
xchg
push
xchg
fsubp
nop
xchg
aas
cwtl
leave
jle
mov
int3
out
adc
mov
jmp
scas
and
jp
xchg
in
xchg
push
fmulp
xchg
jp
xchg
ret
push
inc
fisubrl
jge
lock
andl
inc
aaa
sub
movsb
and
popa
pusha
mov
fildll
dec
mov
fnstcw
ja
push
adc
or
dec
xchg
sub
push
xchg
mov
push
out
fs
fcoml
movsl
xchg
or
sbb
inc
xchg
add
loop
mov
jnp
xchg
imul
push
push
dec
idivl
adc
ret
out
mov
ret
pop
std
shll
pop
jbe
jnp
adc
xor
xchg
movsb
dec
pop
std
daa
dec
sub
cmpsb
pop
in
mov
lods
xor
jecxz
push
or
enter
xlat
jae
out
cmp
mov
jmp
ja
add
loopne
out
mov
repnz
mov
and
subl
or
push
jno
rcrb
hlt
mov
roll
xchg
cmc
adc
sti
fstpt
sub
loopne
outsb
inc
cmp
sbb
loope
xchg
adc
mov
les
pop
out
push
mov
out
xor
outsl
es
mov
iret
adc
fxam
ja
stos
sbb
sub
xor
rcll
pop
xorl
pop
popl
jnp
std
add
jo
sub
xor
sub
xchg
fucomi
and
int3
lods
jbe
jne
push
sbbl
data16
imul
and
add
push
lock
imulb
sub
arpl
lret
sub
dec
popl
dec
cltd
rcrl
insb
rorl
mov
ffree
mov
cmp
mov
push
and
lods
test
push
aas
into
add
js
shlb
test
or
ret
or
int3
nop
pusha
stos
lahf
sbb
xchg
popa
mov
jnp
adc
iret
fdivrs
mov
les
rol
lea
lea
fsubrl
lods
int3
xchg
fsubr
dec
xchg
lcall
push
cltd
xchg
mov
js
nopl
xor
xchg
jmp
cs
je
push
mov
aas
outsw
add
scas
shrl
sbb
outsb
mov
movsb
mov
or
insb
xchg
aad
ret
inc
xor
nop
push
jecxz
pop
out
in
fiadds
ss
mov
lahf
std
mov
unpcklps
push
shlb
jne
sbb
add
mov
mov
add
jl
and
add
and
jle
push
mov
push
call
mov
mov
lods
adc
rorl
cmp
test
daa
scas
mov
add
mov
push
jp
cmp
aas
scas
loope
cmp
push
shl
mov
sub
jecxz
cmp
in
push
in
xor
ret
push
or
mov
imul
add
cmpsl
fistpl
mov
cli
inc
lea
mov
inc
pop
gs
pop
movsl
out
ret
xor
into
xchg
jmp
int
xor
pop
test
mov
je
js
insl
aad
dec
adc
or
push
xchg
or
nop
sbb
icebp
add
imul
inc
xchg
dec
mov
push
push
inc
mov
inc
and
lret
xor
lods
loopne
push
dec
mov
in
mov
pop
xor
cli
push
repnz
repnz
and
call
addr16
xchg
pusha
data16
add
fsubrl
xor
in
insb
xchg
jnp
inc
adc
out
dec
adc
push
push
adc
jne
ret
dec
push
push
lahf
rolb
lods
imul
push
lret
movsb
jl
push
jae
mov
mov
dec
push
xor
pop
stos
jl
push
arpl
inc
mov
inc
sti
sbbl
cmp
dec
sub
pop
dec
or
inc
add
push
iret
adc
jo
or
sub
jle
mov
pushf
inc
andl
lods
dec
fcomi
daa
imul
mov
pop
mov
lock
outsl
cmp
mov
rorl
push
loopne
mulb
popa
pop
loopne
xchg
sub
jl
mov
inc
adc
aaa
cmp
sub
lret
cmpsl
pop
loope
faddl
test
incb
lret
ljmp
out
mov
into
xacquire
mov
mov
ja
pop
xor
inc
mov
hlt
dec
xlat
shrl
pop
fstpt
rolb
cmp
sub
enter
call
adc
push
ret
sti
out
xor
sub
jg
ret
pop
inc
xor
pop
add
stc
es
add
xchg
mov
sub
and
sbb
cmp
dec
out
add
push
and
notb
loope
adc
mov
xchg
popf
cld
sahf
lret
stc
std
pusha
jne
xor
scas
sub
popa
xchg
ret
or
xchg
lcall
xchg
ss
xchg
jmp
test
xchg
adc
pop
or
scas
jne
js
add
inc
xchg
and
popf
leave
in
sub
pop
pop
jo
sub
stos
jbe
dec
pop
jb
mov
xchg
fistl
sub
sub
sarl
pop
ret
add
scas
aad
adc
cmp
xchg
cmpsl
sbb
jne
mov
inc
jecxz
ret
hlt
shll
adc
or
pop
adc
xchg
jl
cmp
pop
loope
insl
jge
xchg
psadbw
dec
insl
out
jle
xchg
jne
jb
into
pop
sahf
sti
pop
add
scas
cltd
mov
enter
test
test
fdivs
loop
roll
sbb
push
jae
or
dec
mov
cmpsb
jnp
stos
stos
popa
cs
adc
xchg
int3
into
test
xchg
loop
movsl
adc
rcrb
repz
dec
out
jne
minps
jae
orb
adc
push
mul
cmpsb
sbb
rolb
or
out
xlat
pop
jmp
ss
push
xor
inc
lds
pop
addl
mov
fldl2t
push
sub
sub
test
mov
lahf
sbb
xchg
js
add
cmp
in
lea
add
imul
ja
adc
xor
and
pop
arpl
insl
push
lahf
mov
push
arpl
cs
dec
sti
xchg
cmp
mov
arpl
ret
add
dec
mov
test
loop
dec
ljmp
adc
stos
xor
inc
out
mov
xchg
test
mov
out
int3
je
sub
lods
test
out
adc
or
int3
pop
ja
jg
dec
fs
testb
int
js
xor
lahf
rorl
and
cmp
orb
cmpsl
fsubr
pop
loop
and
pop
mov
and
outsl
repnz
jp
sbb
test
setns
pop
clc
fisubs
mov
faddp
adc
ljmp
inc
dec
insl
sub
mov
fadds
mov
sub
mov
fs
cmp
pop
or
mov
sbb
lods
sbb
mov
jne
repz
insl
inc
dec
jbe
xor
dec
or
addr16
inc
sbb
aam
add
cmp
or
add
ss
repz
aad
pop
insb
jne
inc
or
jmp
mov
daa
int
dec
movsl
int3
jne
aam
and
cli
out
jle
lret
imul
loope
jno
push
jae
mov
jecxz,pt
mov
mov
mov
jge
stos
gs
icebp
shrb
std
int
xor
dec
add
adc
stos
fwait
adc
fmull
adc
cs
cmp
pop
outsl
sbb
sbb
adc
fs
gs
clc
inc
adc
mov
repz
xchg
clc
or
mov
arpl
daa
jmp
adc
imul
leave
dec
fsubr
jno
jne
subb
cmp
pop
push
and
inc
lods
loopne
sub
mov
pop
cmpsl
scas
ret
imul
push
dec
in
sub
push
das
cmp
mov
pop
leave
int
cwtl
dec
call
cmpsl
fstpl
xchg
dec
rep
testb
aad
int3
stos
shll
ret
repz
gs
sub
xchg
and
jecxz
or
fyl2x
fcomps
sbb
int
arpl
jbe
push
sti
pop
aam
movsb
lods
ret
mov
mov
pushf
fistpll
call
jl
pop
jnp
fldenv
mov
dec
and
mull
add
or
lahf
and
and
test
jmp
jne
dec
aam
mov
je
mov
lock
jmp
out
je
cmpl
sahf
repz
lret
add
dec
pop
pop
out
adc
orb
push
loop
add
dec
ljmp
push
jp
insl
pop
xchg
and
pop
and
mov
clc
rcrb
or
mov
test
ss
xor
xor
pop
lods
das
push
mov
ret
pop
out
sti
bound
out
mov
iret
pop
ja
jmp
mov
sub
repnz
lds
xchg
shlb
aaa
jecxz
dec
push
mov
pushf
shrl
jae
dec
inc
and
mov
shrl
and
fidivrs
aad
xchg
out
cli
pushf
lcall
adc
adc
int3
mov
mov
out
cmp
fadd
popa
ss
ret
repnz
sub
sub
and
outsb
daa
add
sbb
shrl
sbb
jge
sbb
xchg
movsb
dec
add
push
fdivp
xchg
lea
std
subb
fdivrs
push
ljmp
pop
outsl
and
push
fstl
mov
lahf
pop
pop
nop
in
cmc
push
ss
push
jae
lret
mov
xchg
fwait
cmp
inc
cli
fistpll
push
or
sub
mov
je
loopne
sub
data16
jo
les
call
sbb
dec
sbb
ret
loope
add
sarb
aaa
cmpsl
ljmp
and
mov
movsb
subb
xchg
push
aad
fdivr
sarb
fs
cmp
lret
js
sub
push
cmp
ss
add
das
or
or
outsb
and
sub
lahf
inc
shll
push
xchg
mov
icebp
repnz
fcmovne
mov
pop
lods
dec
sbbb
push
jge
nop
add
jne
lods
or
fs
aam
pop
mov
iret
ret
inc
fldcw
add
dec
pop
dec
je
pop
data16
mov
not
dec
icebp
cs
fs
repnz
orl
fldenv
push
xchg
loop
out
je
cpuid
outsl
push
xorl
icebp
das
xchg
sub
inc
movsb
pop
xlat
and
mov
ficompl
in
loopew
addb
inc
mov
outsb
mov
ret
popa
call
inc
or
rcll
fistps
cwtl
push
addl
andl
pop
out
ret
call
jns
or
pop
jmp
push
push
test
stc
sahf
xchg
push
mov
sti
data16
inc
and
pop
mov
push
mov
lods
outsl
sub
cmp
pop
movsb
test
repz
out
test
adc
inc
push
adc
out
addr16
dec
mov
roll
xor
mov
fwait
mov
jle
sbb
pop
sarl
lods
xchg
push
jb
or
inc
xchg
lock
aam
in
sub
lcall
xchg
add
push
lea
je
nop
inc
and
mov
add
cmp
and
or
pop
or
jg
testb
aam
mov
cmp
loop
cmovno
xchg
mov
cwtl
cld
jmp
push
jl
lods
sbb
in
jno
mov
loop
cmp
sbb
pop
stos
xchg
lea
add
stc
adc
outsl
or
cmpsb
mov
pusha
xchg
hlt
lret
or
ds
jg
jmp
imul
ds
jmp
xchg
div
push
gs
addr16
sub
add
pop
xchg
leave
xor
mov
ljmp
icebp
mov
xor
fbstp
xor
repz
pop
dec
xlat
in
aad
fcmovnu
and
and
mov
pop
test
cmp
inc
lds
dec
scas
jge
push
push
aas
test
push
pop
aad
jnp
pop
xchg
pushf
xor
push
lods
push
addb
test
mov
test
xor
js
xor
fimuls
cmp
xchg
js
lods
push
aam
xor
mov
out
or
std
jae
cmp
outsl
rorl
lods
mov
fcmovnu
das
jmp
xchg
scas
movups
les
adc
xchg
jecxz
add
xchg
xor
inc
push
and
sbb
dec
test
fidivl
ret
adc
cs
into
fisubrs
nop
push
sub
aas
jno
aam
or
stc
gs
out
jmp
into
bnd
and
std
fistl
pop
pop
or
jbe
ljmp
lds
in
push
sarb
lods
mov
mov
cmp
insl
scas
jge
pop
enter
mov
sarb
sub
pop
and
push
add
orl
addr16
lcall
clc
ljmp
mov
inc
sbb
dec
testl
pop
inc
hlt
popa
orl
mov
je
loop
xchg
jo
and
push
inc
or
in
insb
mov
fstp
lods
scas
adc
int
xor
cmpsb
movsl
pop
sbb
adc
and
dec
in
jno
es
adc
pop
pop
sub
pushf
fstps
or
push
movsl
out
push
ljmp
mov
popf
jl
jmp
pusha
test
dec
dec
jecxz
xchg
outsb
lret
fstpt
aas
and
cmp
mov
sbb
mov
sti
cmpb
and
fsubs
lds
into
xor
cli
xchg
or
scas
cmpsl
fcmovnu
mov
cmp
outsl
inc
lods
movsb
addr16
xchg
or
shr
cmovbe
leave
movsl
rcr
call
bound
jbe
daa
test
in
add
sub
gs
and
mov
pusha
das
stos
lret
push
test
lods
je
mov
or
sbb
insl
adc
xchg
bound
je
test
mov
fiadds
fsubs
sbb
and
sub
test
dec
and
xchg
movl
iret
push
scas
inc
sub
in
mov
bound
and
jmp
sarb
and
in
test
mov
fidivrs
dec
shll
incl
and
fidivrs
mov
shll
fldl
inc
das
jae
jle
sbb
jge
in
test
gs
sub
pop
cli
lods
add
ret
sbb
add
outsl
hlt
add
xchg
cmp
inc
cmp
outsl
ret
add
shl
jecxz
repz
pop
dec
push
repz
xlat
movsl
jno
je
and
je
sbbl
popa
cmp
inc
mov
xchg
cs
ja
push
loopne
pop
fidivrs
push
xchg
sub
into
jl
int
lret
cmpb
jg
jmp
icebp
mov
repnz
stos
cltd
mov
imul
pop
sbb
int
mov
sbb
outsl
notl
repnz
jge
mov
lds
outsb
imul
or
cli
ja
push
xor
mov
push
mov
sahf
sub
mov
shll
lds
sbb
adc
mov
inc
sahf
xchg
fmull
lods
test
movsb
pop
test
mov
sbb
mov
add
out
mov
sub
add
shll
test
push
sub
pop
pushf
mov
sub
mov
adc
dec
mov
jae
cmc
cmpsl
and
dec
leave
adc
pushf
inc
aad
nop
test
fidivl
cmpsb
add
cmpsb
lock
cltd
fsubs
outsl
mov
mov
mov
dec
mov
and
push
add
jb
xchg
cmpsl
or
test
adc
ljmp
std
mov
and
mov
aaa
jp
fildl
pop
push
into
test
pusha
xor
sarl
xchg
add
hlt
popl
add
adc
js
cli
les
mov
sub
lds
xor
mov
mov
test
jmp
add
rep
lcall
cmp
lods
rolb
mov
mov
movsb
mov
dec
cmp
dec
ljmp
mov
cmp
movsb
dec
dec
fwait
mov
rorl
and
ss
and
addr16
imul
movl
mov
sti
outsl
andl
aam
mov
sti
sub
call
adc
push
sbb
jmp
enter
mov
mov
mov
and
and
pop
pop
mov
ret
adc
jne
fdivrl
rorb
mov
scas
mov
lret
scas
aaa
mov
aad
ss
daa
add
cmc
push
pop
pop
sbb
lcall
xor
out
push
xchg
mov
push
push
lods
imul
mov
jp
mov
xor
mov
or
test
ret
fbstp
shrb
fldt
xchg
pop
addr16
test
jb
or
sbb
addr16
cmp
cli
pop
jno
cmpsl
jp
add
dec
stos
movsb
cld
mov
insb
dec
int3
test
aaa
fcomps
xor
divb
mov
push
dec
add
xlat
dec
push
lahf
cmp
cmp
push
and
ljmp
jo
push
push
dec
sbb
filds
jp
mov
dec
and
fsts
arpl
and
sbb
neg
push
loop
xchg
sti
xchg
add
ret
fsubl
imul
push
jae
mov
cmpsl
and
adc
adc
arpl
and
mov
outsb
add
and
jnp
outsb
jle
aas
outsl
test
sbb
insb
aas
or
popf
jnp
xor
sub
mov
sub
fidivrl
fbld
mov
inc
cs
push
add
hlt
arpl
xor
jle
adc
xchg
sbb
lods
add
inc
cwtl
jecxz
lods
cmp
sahf
lods
adc
loop
jl
xor
xor
cwtl
mov
mov
fistpll
fadds
fsubr
int
jbe
fidivrs
jmp
and
daa
out
mov
sbb
pop
xchg
inc
sbb
int
aam
mov
push
xchg
clc
clc
pop
in
jo
call
ss
icebp
sub
pop
stos
mov
repz
scas
movsl
mov
cmp
adc
ror
in
and
mov
mov
insl
lds
rcll
push
in
insl
dec
jge
lcall
push
and
cmp
jne
jns
mov
xchg
cld
ja
sub
loop
stos
int
inc
cltd
push
add
inc
fcoms
loope
push
push
cmp
xlat
sar
pop
mov
dec
sbb
jecxz
stos
mov
jmp
testb
mov
sbb
sub
adc
ljmp
vrsqrtps
shrb
outsb
cmpsb
call
add
push
mov
cli
nop
divl
push
pop
hlt
in
imul
mov
and
pop
push
ss
mov
cltd
loop
mov
movsl
sub
pop
inc
pop
inc
scas
jno
mov
fs
fisttpl
mov
push
ficoml
fiadds
jp
int3
shl
jmp
ss
sbb
xor
in
scas
push
jp
enter
mov
out
xchg
xor
lahf
push
pop
out
insb
imul
js
sbb
pop
in
xor
jmp
xor
test
adc
shrl
and
cmp
cltd
mov
lret
jg
push
call
test
xor
fisubrs
imul
mov
cmp
fdivrs
pop
int
stos
push
dec
imul
inc
pop
ret
mov
and
ja
xor
pushf
das
adc
jb
pop
imul
xchg
cmp
xor
movsl
mov
add
aaa
popf
sub
inc
mov
inc
jnp
fwait
pop
into
and
out
mov
fldcw
fs
fisubrs
int3
xchg
mov
loopne
std
ret
in
dec
repnz
out
pop
inc
lret
add
notl
sub
or
lock
lret
int
gs
in
pop
pop
mov
or
mov
add
push
es
mov
push
imulb
add
push
mov
shll
stc
xchg
pop
add
pop
nop
push
and
loopne
sub
xchg
push
xchg
pushf
sahf
lahf
xchg
push
jl
add
ret
inc
filds
adc
or
ret
pop
cmpsl
clc
leave
cld
mov
push
pushf
or
mov
adc
js
ror
aam
add
ds
inc
adc
adc
xchg
scas
pop
jecxz
into
push
or
mov
je
pop
cltd
dec
pushf
push
mov
add
mov
xor
push
in
and
lds
mov
test
push
movsb
adc
lods
fdiv
ret
jge
cld
pop
test
pop
out
pop
xchg
inc
leave
jg
mov
pop
stc
popf
add
aas
test
push
cld
aad
movsl
mov
enter
xchg
jle
dec
in
inc
daa
divl
dec
adcl
popa
and
shll
sub
inc
mov
iret
mov
sub
xlat
adc
pop
fwait
mov
js
in
ja
out
cwtl
cmp
fcomp
mulb
and
jle
aam
addr16
xchg
into
lea
mov
mov
clc
mov
sti
pop
and
fisubrl
pop
jb
cmp
xchg
add
dec
and
fsubrs
pusha
cmp
ficomps
scas
les
outsl
adc
clc
add
cmp
mov
xor
call
push
icebp
and
mov
movsb
mov
mov
orb
xchg
addl
sub
loope
jb
das
xchg
js
movsl
add
pusha
inc
mov
repnz
rolb
pushf
mov
ficomps
addr16
mov
js
or
sbb
xchg
xchg
addr16
pop
insb
jne
jo
lcall
or
cli
cmpsl
popw
rcll
jecxz
pusha
push
shll
and
movsb
das
sub
add
pmullw
inc
imul
and
adc
hlt
jns
aaa
fiadds
pop
push
les
dec
mov
adc
jecxz
mov
and
cmp
mov
sub
xchg
sub
add
inc
int3
lods
mov
or
xchg
adc
xchg
jle
lods
fmull
roll
mov
sbb
ja
xor
cs
mov
or
scas
fistpll
ret
xor
pop
mov
inc
call
stc
imul
in
filds
sub
mov
and
xor
cltd
pop
and
or
es
cld
imul
and
dec
inc
mov
rol
scas
jbe
push
pop
ja
leave
daa
dec
sub
lods
and
jns
jno
or
pusha
hlt
repz
mov
loope
push
stos
roll
in
pop
inc
das
sbb
in
xor
aas
pop
jbe
jle
fstp
push
jae
leave
rcrb
inc
push
roll
sub
jb,pn
stc
or
daa
jle
cmp
pusha
jle
xlat
das
sub
out
mov
cmp
and
push
imul
ret
cmp
jbe
lahf
mov
add
cwtl
lret
mov
cwtl
jbe
sbb
push
mov
mov
mov
xchg
clc
in
loope
fdivr
adc
hlt
inc
dec
push
out
sub
sub
mov
aas
mov
icebp
negl
leave
xorl
rolb
mov
loop
push
cmp
or
minps
cs
fcoml
jmp
inc
mov
icebp
lcall
mov
jo
iret
dec
push
daa
or
inc
loopne
sub
adc
mov
mov
mov
xchg
push
add
cwtl
icebp
mov
mov
test
imul
push
imul
cmp
sbb
outsl
jns
movsb
dec
jle
jno
mov
and
jp
dec
cmove
sbb
stos
cmp
adc
add
adc
mov
adc
fs
inc
sbb
xorl
pop
add
repnz
or
movsb
pop
and
dec
fld
stos
sarl
lds
ds
xchg
pushf
ds
dec
rorl
pop
icebp
jp
inc
out
leave
jg
and
push
into
adc
arpl
stos
add
rol
and
leave
pop
or
js
stc
xchg
sbb
cmp
sbb
outsl
mov
sub
std
sbb
hlt
lea
cli
cmp
push
push
add
fcomi
nop
pop
sti
xor
xchg
push
test
push
dec
or
out
sub
jb
sub
jns
in
icebp
lods
add
aam
pop
push
inc
and
imul
sub
fwait
inc
sub
sub
cmpsl
jo
adc
add
outsb
ljmp
js
mov
or
cs
sub
pop
sbb
cmp
test
jp
dec
andl
or
adc
out
aam
xor
or
mov
cmpsb
or
into
mov
inc
inc
mov
sbb
inc
rorb
inc
cwtl
pusha
mov
adc
jg
icebp
aaa
cmp
jb
in
nop
out
out
mov
orl
dec
xchg
adc
test
ret
or
dec
cld
cmp
sbb
sub
dec
leave
xchg
iret
push
lock
push
pop
imul
dec
cwtl
in
mov
imul
or
push
decl
xchg
mov
movsl
pop
outsl
ret
addr16
movsb
js
leave
cld
repz
rcrl
in
sub
push
xchg
test
dec
mov
cmp
aaa
das
inc
and
adc
cmp
sti
xor
sub
mov
push
jo
nop
xor
pop
popf
movsl
jae
inc
test
or
pop
jno
cmp
mov
lret
cs
iret
shrb
fcompp
pop
lock
movsl
mov
push
es
call
adc
test
add
cmovle
and
lods
push
out
nop
push
popa
hlt
ret
cmpl
shrl
cmpb
add
mov
cmpsl
and
xchg
or
scas
test
push
outsb
add
push
fimuls
add
rcll
jge
mov
leave
mov
fadds
adc
jno,pt
pop
pop
fcmove
xor
mov
push
and
scas
xchg
movsl
test
std
inc
jno
xor
orb
xor
ret
fldcw
gs
sub
push
fisttpl
mov
mov
addl
sub
cmp
mov
lret
out
and
jne
int
inc
pop
lea
xor
xchg
jo
inc
das
pop
pop
xor
jl
push
pop
add
xchg
movsl
lret
mov
sbb
push
fldl
stos
or
mov
inc
daa
sbb
icebp
pop
mov
jb
mov
cmc
cmp
lcall
mov
mov
mov
out
leave
sub
stos
sbb
jge
test
popf
lods
xor
dec
test
lret
push
pop
lods
sub
test
xlat
imul
and
cmpb
in
bound
aam
nop
inc
shlb
inc
lahf
lret
cmp
xor
or
andl
mov
mov
in
pop
aam
out
std
inc
xchg
pop
insl
pop
push
mov
adc
ljmp
and
imul
jnp
cmpb
cmp
clc
cltd
lea
fs
add
and
or
dec
data16
fsts
sbb
xor
clc
cli
jbe
jp
mov
pusha
mov
imul
sbb
jl
fistpll
dec
mov
push
mov
fwait
outsl
in
or
mov
sub
lcall
daa
icebp
or
sbb
out
imul
inc
add
sti
push
ret
inc
mov
pop
mov
les
cmpsb
adc
pop
and
mov
jb
add
sbb
aam
push
xor
or
lret
push
out
jo
cmp
mov
xor
jae
push
dec
add
js
and
sarb
outsb
push
loop
cld
inc
xorl
jg
test
out
adc
outsb
mov
je
push
add
cmp
test
xchg
adc
js
stos
mov
in
push
mov
ja
test
addr16
push
jl
inc
inc
or
andl
lock
or
cmc
ljmp
pop
cmp
mov
mov
rcl
repz
sbb
lods
sub
push
push
cmp
cmp
mov
dec
mov
push
push
mov
adc
clc
in
aam
test
in
mov
sbb
sub
mov
cmp
int
mov
insb
pop
cmpsl
fsts
push
pmulhw
popa
mov
push
xchg
fbstp
and
lods
lods
movl
in
or
ljmp
push
adc
shl
or
bound
and
mov
loope
imul
jns
or
notb
sti
dec
lcall
aaa
xor
xchg
test
insl
inc
and
fists
jae
cmpsl
insl
loop
into
push
push
repz
sbb
repz
pop
push
imul
inc
repz
push
xor
cmp
push
insl
mov
icebp
outsl
lds
jae
adc
lods
sar
ljmp
mov
jg
mov
inc
sbb
sub
jp
xlat
mov
add
std
aad
stos
push
push
adc
icebp
shlb
inc
push
clc
arpl
stc
push
cmp
push
nop
out
hlt
xchg
movsb
xchg
out
push
sbb
push
xchg
jbe
add
jno
push
and
daa
sti
push
dec
repnz
or
das
or
xchg
fdiv
adc
test
fmull
arpl
std
mov
xchg
jecxz
mov
div
pop
xchg
mov
imul
add
adc
xchg
mov
mov
sub
insl
cmpsl
popa
xchg
scas
or
and
jno
sub
js
mov
and
mov
jae
les
mov
jne
xor
pop
add
sbb
scas
and
leave
std
adc
fwait
jl
sub
mov
add
lahf
shll
ja
inc
movsl
mov
and
sbb
inc
gs
xor
xchg
jno
popf
lahf
sbb
imul
jo
fwait
dec
das
cmc
inc
lods
adc
test
mov
or
add
mov
push
sub
xchg
pop
sub
or
pop
shrl
call
roll
out
sti
cmpsl
mov
cltd
out
sub
enter
add
addb
in
aam
rorb
add
jmp
mov
mov
andl
in
adcb
jb
add
in
js
xchg
push
roll
mov
std
push
add
pop
mov
cmp
sub
wrmsr
sbb
rorb
xchg
or
xorb
adcb
add
in
mov
jecxz
jg
mov
sbb
adc
aas
sahf
and
dec
cmp
insl
xor
shrl
rorb
mov
jg
xchg
jno
ret
push
lods
addr16
pop
xor
ror
or
sbb
mov
fadds
imul
and
xchg
cmp
inc
xlat
fsubs
ret
push
nop
mov
outsb
popa
jp
mov
rcrb
lock
dec
out
mov
cli
adc
mov
pop
xchg
adc
call
mov
add
aas
mov
mov
dec
cmp
jno
in
lret
xchg
data16
sbb
sbb
lret
mov
aas
test
enter
lods
sub
int
mov
cld
loop
xchg
out
loop
nop
loop
add
into
ret
jno
movsb
lds
or
arpl
aas
jl
lea
cs
xchg
dec
call
inc
jmp
sahf
jnp
sub
ret
push
jle
subl
mov
cltd
adc
ret
les
das
stos
dec
es
adcb
data16
xchg
or
subl
sbb
mov
add
pop
mov
xchg
sub
mov
popa
inc
aaa
mov
mov
shl
fistl
mov
jecxz
lods
fisttpll
out
sbb
je
xchg
je
adc
adc
std
mov
faddl
xchg
test
aas
shlb
negb
push
lret
out
stc
or
xorl
in
std
push
imul
rcrl
mov
insb
mov
push
push
sub
cwtl
dec
fninit
movsb
and
mov
add
xor
insb
xchg
out
int
inc
dec
mov
add
mov
jb
jle
es
repz
mov
in
mov
scas
popa
mov
add
xor
popa
push
fdivrp
fucomi
bts
sbb
out
frstor
fidivl
mov
pushf
and
push
adc
add
subl
push
sub
pop
push
idivl
shlb
and
loop
jbe
mov
xchg
int3
mov
adc
cltd
cli
sbb
pop
jp
ret
icebp
mov
outsb
cmpsl
pop
add
jnp
push
jo
out
push
mov
out
mov
mov
fwait
mov
rcll
scas
loopne
mov
jbe
mov
out
cmp
and
divb
mov
sbb
sub
pushf
mov
mov
mov
out
push
adc
sti
jecxz
mov
inc
cmpsl
ret
in
push
xchg
sub
aad
cmpsb
int
mov
enter
mov
xorb
add
jl
cmc
jg
cltd
rorl
sub
out
mov
jbe
es
adc
mov
jns
mov
lcall
repz
push
inc
xor
int
push
stos
insl
pop
lock
xchg
pop
ficoms
dec
push
pop
fnsave
and
add
mov
pushf
pop
mov
hlt
push
pop
movsl
sub
mov
xchg
notl
mov
stos
sub
cmp
add
mov
fxch
push
imul
cltd
enter
scas
dec
rcrb
scas
movsb
pop
stc
dec
aaa
ljmp
xor
add
repz
mov
cltd
cwtl
fwait
xor
dec
sti
stc
ret
scas
sarl
lcall
mov
iret
jle
cmp
push
cmpsb
or
pusha
fsubr
std
and
jns
repz
cs
mov
les
ja
add
frstor
sbb
fimuls
cmp
popa
lea
fisubrs
repz
mov
cwtl
jmp
jmp
add
and
inc
pop
sub
mov
insb
outsl
pop
pop
ljmp
lret
push
sti
adc
ja
fs
push
pop
adc
pop
dec
iret
mov
cld
nop
dec
jge
push
add
push
gs
sbb
in
std
and
shlb
and
cltd
mov
sub
divb
lret
pop
mov
pop
cld
and
mov
dec
pushf
mov
rclb
cmp
xchg
fcoml
mov
daa
or
cwtl
mov
data16
shll
movsb
push
mov
mov
arpl
pop
xchg
lods
xchg
in
sub
mov
jno
mov
loopne
adc
pop
xlat
or
es
add
lahf
inc
insb
push
push
pop
stc
test
push
cmp
sti
test
cmp
test
cmp
jge
arpl
into
cs
xor
adc
dec
ficoml
add
push
jecxz
out
inc
sbb
cmpsl
lds
or
fwait
gs
sbb
pop
iret
mov
xor
mov
lods
push
xor
cmpsb
test
sbb
pop
lahf
pop
mov
or
mov
sbb
mov
fstp
xchg
out
xchg
ret
ret
sub
dec
push
das
inc
ja
cwtl
and
fld
bound
ja
cmp
cmp
into
push
mov
xorl
in
pop
jg
repz
leave
sbb
mov
fwait
adc
test
sub
push
in
insl
in
mov
mul
mov
ljmp
push
mov
inc
sbb
mov
test
je
pop
jecxz
ss
out
imul
cmp
sbbl
xor
cmpsl
mov
sbb
or
or
adc
fsubl
mov
in
ss
out
imul
movsb
out
mov
jo
imul
xchg
popa
pop
push
sti
ror
out
std
mov
movsl
into
out
mov
cmpsl
push
mov
mov
pop
sarl
popa
insb
xorl
push
in
mov
dec
aad
lahf
cmp
sub
cli
sbb
push
pop
or
stos
pop
mov
inc
mov
cmp
lret
or
int
fistpll
ljmp
jge
add
lods
jno
jg
std
jae
cs
mov
int3
push
jo
add
outsl
xchg
jae
sub
loop
out
pop
and
adc
xor
aad
stos
stc
push
mov
pop
cmp
mov
dec
fs
jnp
cmpsl
push
mov
int
pop
imul
add
cli
mov
pop
or
jmp
js
or
mov
mov
mov
ljmp
dec
adc
cmp
int
jmp
dec
outsl
adc
xlat
lahf
xchg
xchg
pop
stos
in
or
cmc
rcrl
sti
mov
lock
fs
pop
and
cli
cmpsl
mov
xchg
inc
nop
adc
or
fisubrl
shlb
in
sbb
adc
loopne
inc
xchg
ret
mov
lahf
and
bound
insb
inc
xor
jne
ss
push
cwtl
sub
test
pop
xchg
sbb
call
shlb
xor
aam
pop
lahf
aaa
mov
mov
inc
sbb
dec
repz
gs
and
nop
scas
jl
into
pop
cmpsl
loope
out
pop
out
cmpsl
cwtl
xchg
shrl
dec
sub
xchg
sub
sub
clc
or
inc
sti
or
nop
out
fs
xchg
enter
jo
addr16
loopne
lea
push
xor
arpl
cli
mov
mov
outsl
ret
movsb
push
or
pop
mov
dec
pop
mov
in
insb
cmc
repnz
js
stos
mov
lods
mov
jne
sub
scas
add
jecxz
push
outsl
pop
lahf
cli
jno
fldenv
ficoml
jno
repnz
fwait
or
filds
je
sub
xor
aas
rcrb
jge
into
in
push
lods
adc
inc
loopne
dec
loopne
adc
test
stc
xchg
out
mov
outsb
pop
or
mov
push
adc
inc
mov
jbe
pop
test
mov
addr16
lods
into
insb
cs
mov
shll
sub
ja
xlat
inc
idivb
and
xchg
push
add
adcb
cwtl
pop
xchg
push
bound
lods
aaa
mov
xchg
not
cmp
rcrb
push
scas
enter
std
dec
int3
push
mov
fmull
and
in
stos
rolb
push
pop
push
push
jle
inc
call
pop
or
or
cmp
pop
pop
pop
cmp
cli
add
xor
push
xchg
xchg
dec
pop
les
xchg
jns
test
fldcw
fwait
jns
test
pop
imul
mov
sahf
cld
push
cmp
sub
jb
std
and
pop
ficompl
scas
dec
jns
adc
inc
mov
popf
out
pop
sbb
sub
mov
lods
int3
sub
xchg
out
or
xlat
inc
mov
jno
popa
push
pusha
lret
mov
int3
cmp
xchg
sub
jle
cld
push
frstor
loope
mov
cmp
lret
mov
mov
test
das
das
in
arpl
mov
mov
push
xor
or
lret
negb
mov
iret
cs
pop
xlat
pop
inc
sub
lea
cmp
xor
and
dec
sahf
lds
mov
flds
mov
mov
cmp
add
xlat
xor
sbb
movsb
mov
mov
adc
shr
in
jp
xlat
jmp
out
mov
inc
fsub
add
shl
mov
push
adc
sub
test
dec
das
mov
ja
sub
cmp
jb
mov
mov
loopne
jl
repz
test
cltd
out
mov
sub
cmp
fs
shlb
sarl
test
cmp
add
cmc
xor
mov
xchg
mov
lea
iret
imul
jmp
fnstcw
les
data16
mov
sbbl
inc
stos
sub
mov
fiadds
divb
push
or
ljmp
push
xor
or
lods
or
into
and
jg
pop
aas
out
sbb
jp
pop
out
loop
mov
cmp
sarb
fsts
cmp
mov
mov
jmp
pusha
arpl
clc
xor
adc
shll
and
jl
in
add
loop
adc
inc
test
adc
aaa
pop
leave
sub
jne
sahf
xchg
push
fbld
fwait
nop
loopne
inc
stc
lea
dec
test
rclb
dec
inc
add
sti
ja
xchg
inc
inc
popa
adc
and
fucomi
std
stos
test
in
test
push
rcrb
pop
mov
jmp
call
jle
inc
inc
icebp
es
shld
jg
das
mov
stos
add
push
aam
roll
mov
adc
das
jge
data16
filds
sbb
out
xchg
adc
sbb
jecxz
dec
icebp
jecxz
cmc
cwtl
mov
arpl
pop
mov
and
int
fmuls
pop
jp
sub
sbbb
daa
leave
sbb
in
lods
nop
jl
les
js
shll
mov
jp
mov
leave
push
dec
mov
xor
ljmp
and
mov
sub
out
cltd
or
lahf
les
addr16
int
dec
xchg
inc
out
mov
fcoms
adc
in
stc
and
ret
int
fstps
mov
jle
dec
inc
lcall
pop
add
mov
fwait
jge
pop
sub
mov
aas
pusha
sbb
nop
mov
clc
sub
mov
jae
push
stc
ret
xor
bound
mov
out
int3
aad
sub
lahf
rorl
scas
inc
out
data16
mov
cld
idivl
mov
jmp
lcall
bound
mov
loopne
add
repnz
hlt
movups
mov
pop
fxch
inc
pop
inc
test
jnp
and
xchg
adc
jae
mov
fs
stos
into
cmp
cmp
ret
outsb
repnz
ljmp
push
movsl
lcall
add
jmp
lret
ret
inc
jg
sahf
push
jle
iret
cmpsl
fnsave
cmpsb
out
test
push
mov
bound
ja
andb
jns
jnp
cmp
in
xor
jae
pop
adc
sbbb
adc
or
push
mov
dec
push
stc
daa
push
insb
ds
cmp
inc
sbb
fs
cmp
jnp
imulb
js
inc
add
incl
sub
bound
gs
push
mov
out
jmp
jno
cmp
sub
fwait
xchg
jbe
push
xor
ret
mov
or
call
dec
mov
fidivrl
gs
sub
scas
test
push
inc
or
daa
add
sub
enter
mov
adc
jl
push
lods
inc
stos
fwait
loop
adc
imul
dec
out
mov
jg
mov
pop
in
shlb
sub
cld
push
movsl
enter
mov
mov
xor
rcl
or
and
pop
inc
scas
push
jle
cs
dec
adc
adc
in
stc
ret
xchg
loopne
or
adc
mov
ss
imul
fldcw
mov
mov
dec
push
dec
dec
add
ds
out
mov
push
jae
mov
xor
imul
push
std
or
aad
cmp
in
ss
fs
popa
mov
xchg
lcall
cmp
movsl
lret
and
loop
mov
push
adc
daa
sub
enter
or
cmp
jae
fisubl
sub
scas
cmp
test
mov
das
sub
mov
incl
and
inc
sub
mov
xchg
popa
pop
cmp
sbb
dec
push
or
push
sub
les
outsb
in
cmpsb
movsl
mov
bound
out
jecxz
andps
push
mov
fcoml
inc
sbb
dec
inc
xchg
fnstcw
pop
lcall
push
aam
add
movsb
jp
pop
jne
les
fldenv
inc
sti
shrl
and
sub
push
pushf
push
insl
mov
mov
add
add
mov
inc
bound
xchg
add
ljmp
test
mov
clc
mov
inc
movsl
shrb
nop
cmpb
jns
xchg
loop
mov
dec
test
sbb
sbb
ficompl
mov
mov
push
loop
es
add
test
stc
fidivl
add
movsb
inc
lret
sbb
pushf
jno
or
jo
jnp
cmp
mov
out
sub
rcrl
push
sub
ret
adc
xor
mov
testb
lretw
lods
stc
insl
jg
rcll
test
loop
icebp
push
pushf
or
sub
cmpb
aam
bound
inc
cmp
vpcmpeqb
test
push
push
or
sub
or
fs
sbb
pop
pushf
frstor
mov
mov
or
xchg
cs
cmp
inc
fisubrs
sub
loop
dec
js
divb
fcomip
dec
sub
mov
and
aas
adc
or
mov
xchg
cmpsb
push
lret
fildl
faddl
data16
loopne
addr16
dec
ds
or
mov
fiaddl
dec
xor
mov
push
adc
xchg
int3
lock
in
dec
or
mov
sbb
nop
insl
xchg
pop
lock
xchg
sbb
popa
repnz
push
push
inc
jns
lods
aaa
popa
ljmp
inc
jl
add
push
gs
orb
jle
xchg
imul
outsl
pop
sbb
mov
push
fwait
icebp
jecxz
fnstsw
js
imul
arpl
cwtl
add
out
lahf
sbb
mul
ret
and
add
mov
mov
cwtl
dec
adc
push
mov
xchg
fcmovnb
jmp
xlat
aaa
inc
fidivrl
or
adc
cld
pop
ds
sarb
into
adc
cmc
or
pop
mov
icebp
clc
push
jae
imul
repz
dec
imul
cmc
jb
jne
dec
cmpb
cld
add
popa
add
mov
cmpsl
cmp
push
out
dec
jb
mov
sub
dec
jmp
nop
out
in
hlt
and
sub
sbb
fsubrl
dec
jnp
mov
mov
xchg
sub
test
dec
fnstsw
fwait
push
arpl
mov
sbb
sbb
xor
cld
push
jae
sub
pop
xchg
lahf
add
movsl
jns
jge
add
xchg
rclb
push
daa
in
jle
cmpsl
sbb
movsl
sti
xor
fwait
mov
aad
test
mov
jbe
aaa
stc
fwait
add
jp
rol
xchg
cltd
cld
push
adc
cmp
inc
in
pop
mov
or
arpl
loopne
push
push
push
push
test
xchg
and
js
daa
insb
or
mov
pop
jb
dec
and
jmp
mov
add
xor
mov
testl
adc
test
xchg
inc
jno
les
mov
sahf
jne
in
pop
jl
adc
mov
push
mov
mov
jmp
mov
xchg
iret
js
push
sub
mov
orl
xor
sub
ja
and
cmp
cmp
xchg
add
push
mov
dec
pop
sub
sbb
dec
int3
sbbl
lcall
mov
repnz
inc
out
cs
push
sub
pop
es
repnz
mov
mov
addr16
jle
dec
imul
test
lock
shrl
sub
push
xchg
ret
inc
bound
js
pop
les
push
sub
or
icebp
out
jp
into
cwtl
idiv
shl
test
add
cmp
jg
aas
sub
iret
cmpsl
negl
andl
cmp
aam
mov
mov
sbb
adc
call
push
imul
je
jnp
cmp
sahf
lds
push
bound
imul
pop
lods
lock
cli
dec
inc
cmpsl
or
or
arpl
dec
pushf
pop
addr16
nop
and
push
fisttpll
cmpsb
ret
adc
cmp
jecxz
dec
rorl
test
insl
ret
or
roll
adc
outsl
insl
jne
sahf
bound
fists
sbb
jns
test
addb
adc
shlb
adc
mov
cmpsl
shlb
loop
xor
rol
push
or
outsl
add
cltd
enter
inc
sbb
or
aaa
pop
cld
psllq
adc
mov
xlat
out
add
lods
daa
xchg
inc
adc
sbb
mov
jo
divb
leave
sahf
pusha
lock
adc
movsl
lahf
and
or
and
fstp
jnp
adc
pop
pop
loop
cmpsb
pop
jo,pn
lods
call
adc
out
iret
mov
adc
gs
outsl
sub
and
ss
push
dec
cwtl
in
sub
imul
movsb
fisttps
in
lds
inc
dec
pop
add
aas
dec
sbb
jle
and
pop
xor
inc
dec
cmp
xchg
mov
repnz
bound
mov
mov
rolb
sub
in
mov
pop
xchg
push
bound
mov
xchg
ss
mov
les
test
dec
mov
add
shll
imul
cmp
scas
outsl
out
mov
push
add
pop
mov
mov
inc
jmp
jl
lea
fs
jae
sbb
subb
dec
out
aas
nop
test
faddl
cs
pusha
xchg
sbb
xchg
pop
add
add
xor
lea
pop
inc
mov
mov
dec
and
push
cwtl
adc
mov
dec
cld
pop
sbb
mov
orl
test
push
xorb
jmp
ret
shlb
lods
cmp
jae
shl
icebp
push
push
xor
test
jecxz
fstpt
rorb
andl
clc
dec
dec
xchg
inc
mulb
lock
cmp
dec
hlt
xchg
cld
push
gs
fxch
stos
negb
mov
push
imul
mov
imul
mov
das
inc
hlt
sarl
pop
xor
out
addl
mov
or
std
leave
mov
sub
das
dec
dec
stos
orl
es
dec
mov
inc
pop
mov
cld
into
or
pop
adc
adc
jnp
jns
jecxz
mov
in
cmpsb
push
nop
and
jmp
mov
push
int
mov
jae
pop
jno
xor
mull
push
sub
jno
imul
push
cmp
and
adc
adc
andb
lods
pop
cli
sub
movsb
or
mov
in
pop
push
or
push
in
mov
sub
lods
popf
dec
add
out
test
repnz
mov
scas
cmpsl
ljmp
dec
mov
pop
in
pop
sub
xchg
cmpsb
in
fsubr
push
leave
movsl
lods
arpl
add
xchg
popf
and
mov
notl
scas
shrb
sub
std
pop
out
test
xor
icebp
lods
test
subl
jbe
out
test
data16
jle
lret
cmp
push
dec
notl
or
inc
mov
mov
push
fldt
lahf
fwait
jb
sbb
dec
stos
adc
xchg
mov
js
jb
repnz
dec
ss
fistpll
mov
cltd
push
cltd
mov
dec
stc
mov
repnz
mov
mov
jne
repz
insl
pop
jle
and
xchg
in
ljmp
push
pop
adc
subb
out
in
lods
popf
mov
loope
mov
xor
and
adc
fldt
mov
xchg
adc
out
push
mov
sub
stos
rorb
lret
fwait
push
dec
or
mov
and
pop
inc
sti
push
or
xchg
scas
xor
inc
mov
test
movsb
cmp
pop
addb
sub
js
roll
stos
push
mov
pop
mov
fdiv
nop
xor
sbb
mov
dec
dec
mov
mov
xchg
add
cli
clc
aaa
in
adc
lret
push
pop
cmp
and
movsb
xchg
mov
pop
lahf
inc
xchg
fwait
rcl
icebp
xor
decl
mov
push
mov
inc
cmp
and
mov
jp
int3
cmp
xlat
inc
xor
cmp
ds
test
inc
xchg
iret
mov
rclb
cmpsl
loopne
dec
ss
hlt
sub
ja
mov
arpl
mov
mov
aad
testb
pusha
pop
adc
inc
and
or
arpl
arpl
dec
xor
sahf
inc
mov
inc
mov
cmp
daa
jne
jne
mov
or
aas
or
dec
sub
push
fildl
rol
je
mulb
jp
inc
sbb
dec
inc
dec
push
decb
mov
cli
rorb
fwait
push
and
rclb
in
mov
inc
or
fs
pusha
fadds
incb
jne
cmc
in
sub
lods
or
or
imul
movsb
mov
int3
int3
mov
or
push
orb
mov
dec
stos
sub
push
loopne
xorl
jne
bt
das
pop
repz
popf
rorl
repz
xor
movsb
repnz
adc
imul
nop
jecxz
adc
add
js
adc
jp
xor
movsb
inc
push
lahf
pop
cmp
cs
mov
mov
rolb
xor
test
push
cwtl
and
popa
out
dec
movsl
sbb
or
push
icebp
mov
shr
cmp
or
out
cli
xor
dec
mov
in
popa
sbb
push
sbb
aas
inc
out
cmp
popa
rcl
add
idiv
or
sub
movsb
sub
jmp
popf
test
and
xor
into
xor
sbb
ficompl
xchg
shll
sbb
adc
and
push
push
js
cld
filds
lock
push
xor
movsb
xchg
imul
cwtl
es
and
in
inc
pop
cmp
js
pop
add
or
sbb
xchg
push
test
and
inc
mov
fs
pop
ret
adc
outsb
xor
push
jae
xor
add
pop
cld
mov
fistps
outsl
in
dec
mov
mov
or
popa
int3
or
mov
out
xor
dec
mov
js
xchg
xchg
cmp
sti
mov
xorb
leave
jbe
test
out
repz
mov
mov
xor
or
cmovp
jl
push
or
mov
call
xchg
hlt
daa
stc
or
push
xchg
cmp
popf
test
xchg
int3
dec
mov
pop
push
lock
mov
dec
sub
jnp
or
and
stc
add
add
out
lock
mov
adc
idiv
push
hlt
lds
cmpsl
cmp
call
jmp
gs
jo
mov
lock
xchg
lods
push
ret
xchg
cmp
sub
lret
inc
inc
mov
sbbl
add
jg
sub
and
push
mov
loope
je
addb
lds
dec
mov
mov
dec
repz
pop
daa
mov
jmp
push
mov
int
leave
xor
mov
pushf
or
pop
mov
dec
jmp
and
rorb
xor
mov
test
adc
pop
test
mov
sbb
sbb
adc
mov
xchg
dec
dec
dec
in
aam
jmp
dec
mov
fisubrs
and
inc
adc
jo
or
jge
jbe
fwait
or
dec
test
adc
sub
dec
cld
je
std
cmpsb
pop
loope
arpl
cs
aas
mov
mov
xchg
cmp
idivb
push
xchg
pop
pushf
and
or
sub
sbb
jecxz
add
fs
sahf
imull
mov
out
shlb
jbe
inc
jno
dec
fidivl
in
push
pop
enter
pop
xchg
cmp
xorb
fucom
dec
mov
clc
mov
sub
ljmp
mov
and
mov
or
add
add
push
jge
ss
addr16
call
push
rcl
dec
jmp
adc
add
xchg
inc
sbb
subl
stos
add
xchg
rep
lock
aaa
xor
adc
xlat
add
pandn
jo
push
lret
jmp
data16
dec
fldenv
inc
sub
adc
int3
cli
inc
xor
xchg
insb
and
mov
adc
lods
mov
xchg
clc
mov
imul
subb
mov
jne
test
pop
adc
cmp
jnp
ret
sti
repz
fidivrl
fisubrs
in
xchg
mulb
sub
dec
sbb
cld
rorb
add
jecxz
rclb
stos
xor
inc
sbb
test
inc
divb
push
add
mov
fdivs
cmp
push
xchg
fistps
imul
adc
jle
jg
and
jmp
pop
insl
xchg
punpckhdq
fdivl
fs
push
mov
push
sub
push
in
and
jmp
mov
jmp
stos
add
mov
push
dec
imul
jle
test
fptan
mov
mov
stc
inc
aas
ficompl
insl
imul
aaa
notl
test
sbb
jae
je
push
mov
sub
ret
mov
push
xor
sub
shll
sub
loope
sub
inc
mov
loop
xchg
sub
sbb
cs
xchg
cmpsl
sub
mov
pop
mov
pop
sbb
adc
call
push
mov
dec
jle
fwait
mov
icebp
xchg
movl
cmp
ljmp
pop
addr16
cmpsl
jae
xor
jnp
push
cmp
cmp
push
pop
fisttpll
pop
rcll
sub
push
xor
mov
mov
scas
mov
pop
mov
movsb
xor
ja
or
aam
dec
das
shrl
sbb
jg
sbb
xchg
mov
cld
test
or
or
xchg
jle
push
push
dec
jae
mov
rclb
mov
pop
in
lods
leave
mov
mov
or
push
popf
dec
pop
inc
inc
mov
jecxz
jmp
mov
cmpsl
jle
bound
jae
inc
aam
cmc
pop
xor
mov
pop
and
mov
and
loope
inc
test
push
and
sub
jno
scas
in
insl
stos
lret
cltd
xor
mov
jmp
add
mov
bound
loopne
stc
popl
fwait
movsb
stos
add
repz
out
jne
add
int
sub
mov
out
and
sbb
andb
and
clc
aas
fldenv
jge
ss
inc
adc
inc
push
das
cmp
in
pop
push
xor
pop
pop
xor
fstps
stos
xor
push
push
loopne
jmp
insb
mov
mov
adc
pop
add
dec
xor
clc
loop
stos
je
scas
aam
popf
aas
xchg
add
movl
popa
jae
pop
push
ds
sbb
pop
xchg
and
or
fistps
stos
int3
cs
out
pavgw
insl
add
cli
ljmp
cmp
negb
hlt
ds
mov
cmp
lods
ret
das
pop
and
call
fistpl
inc
sbb
sbb
mov
lods
adc
out
or
sub
scas
inc
js
adc
dec
xlat
lock
repz
and
xchg
jl
xchg
cmp
mov
sarb
out
popa
xchg
mov
jbe
popf
punpckhbw
sub
mov
cmp
jno
sbb
fnstenv
outsl
jb
stos
insl
inc
aad
mov
out
mov
cs
mov
xchg
push
mov
mov
jo
dec
mov
cwtl
repz
in
mov
stos
mov
lcall
addr16
test
fwait
push
adc
call
sbb
push
insl
mov
sahf
je
mov
jg
scas
push
lds
sbb
lret
mov
xchg
mov
mov
fnsave
lahf
imul
fsubrs
int
cmpsb
xlat
and
push
mov
xchg
xchg
add
xchg
mov
popa
xchg
dec
add
push
test
mov
sub
fidivl
xchg
inc
popf
push
xlat
movsb
jp
in
in
popa
inc
add
mov
sub
lods
or
inc
push
mov
popf
pop
pop
jecxz
insl
xor
outsb
mov
cli
loop
test
jge
jecxz
test
xor
push
testl
push
fcoml
inc
adcb
pusha
testb
pop
insb
or
push
adc
push
push
stos
into
mov
lds
sbb
push
fsubrl
and
pop
ds
psllq
jno
out
in
add
test
repnz
test
push
cwtl
loop
int3
in
cwtl
jecxz
xor
loopne
int
inc
xor
adc
js
arpl
pop
divl
cmpsb
int3
dec
adc
lea
sbb
lock
jne
mov
push
and
adc
cltd
mov
jne
data16
adc
or
xchg
cli
fcoms
cwtl
adc
das
shrl
out
ljmp
xor
mov
cmp
mov
or
sbb
in
dec
int3
and
mov
lock
mov
call
scas
push
push
setbe
filds
fisttpl
das
xlat
or
pusha
jae
xor
mov
jns
sbb
insl
rorb
jmp
cld
adc
xor
sarl
or
pop
mov
push
mov
dec
jnp
aaa
loop
rcrl
xor
adc
mov
hlt
or
ss
rolb
lcall
into
pushl
sub
push
mov
popa
push
loopne
pop
gs
inc
push
lods
push
sbb
jmp
push
push
push
sti
into
ss
add
cwtl
mov
xor
dec
adc
gs
jecxz
imulb
push
jb
ret
push
pop
pop
test
push
add
push
rolb
pop
jo
cwtl
repz
cltd
ja
into
mov
push
data16
sbb
jle
sub
in
insl
lock
fisttps
jg
rcrb
push
test
jecxz
mov
or
nop
call
sbb
out
in
jp
inc
push
lret
cli
jno
pop
mov
ficomps
ss
xchg
aaa
lahf
shr
sub
mov
cli
push
outsb
sub
pop
xor
cmp
xchg
popl
inc
mov
lahf
out
lret
loopne
fmull
out
imul
pop
inc
mov
mov
dec
adc
and
scas
xor
loope
sub
mov
call
sub
bound
ja
in
popf
pushf
sbb
inc
in
call
loope
ja
fcomp
cmp
add
imull
test
push
jb
inc
ret
pop
mov
lock
jmp
jb
dec
sub
pop
sahf
mov
out
inc
pop
mov
xor
pop
inc
imul
jp
in
movsl
add
push
or
mov
jg
mov
mov
lods
mov
mov
pop
sbb
mov
insl
mov
insb
fidivs
inc
cwtl
ret
hlt
clc
inc
pop
addr16
out
ss
adc
mov
and
sbb
fisttpl
or
add
es
pushw
shlb
jge
sbb
push
movsb
xchg
ljmp
enter
pop
pusha
popf
push
pop
xor
dec
insl
clc
shrb
xchg
mov
or
and
adc
push
aaa
mov
gs
jne
pop
stos
inc
clc
mov
mov
mov
stc
xorb
inc
push
mov
cmpsl
data16
out
mov
addl
or
mov
mov
rorl
es
repz
jle
addr16
jle
aam
jne
pop
cmp
push
mov
mov
lods
add
inc
mov
xor
fwait
xor
lret
cmp
das
jnp
icebp
pop
mov
jle
dec
cli
jne
or
icebp
pop
lcall
cli
or
jecxz
lcall
push
jge
mov
dec
dec
test
jnp
xor
mov
repnz
pushf
movsb
pop
jnp
jnp
add
test
jns
addr16
orl
mov
push
fdivl
jb
adc
int
rcrb
jp
xchg
add
or
jno
dec
xor
mov
mov
int
xor
dec
and
xlat
roll
sbb
mov
or
xchg
lea
fmull
mov
pop
jne
pop
mov
sub
xchg
dec
push
mov
and
pushf
xchg
out
inc
leave
lds
outsl
push
cli
mov
sbb
insl
in
mov
scas
aaa
icebp
push
jae
sbb
xchg
loope
add
dec
ror
stos
repz
in
xor
mov
addr16
cmp
std
es
and
xchg
or
adc
repz
jnp
pop
lret
test
test
push
pop
icebp
pop
pop
aam
push
in
mov
add
lds
mov
popa
adc
or
cmp
xchg
and
fldl
add
adc
into
lods
in
cmp
xchg
into
pop
or
mov
popa
sub
adc
cmp
mov
notb
push
push
stos
inc
inc
mov
enter
int3
popa
movsl
mov
add
pop
pop
mov
lods
dec
xchg
call
outsb
ret
inc
xchg
mov
cmp
movsl
mov
mov
out
dec
or
mov
aaa
xor
hlt
movsb
dec
pop
flds
ljmp
fnstsw
fwait
loopne
sbbl
cmp
outsl
mov
jl
push
cmp
mov
outsl
rolb
inc
fsts
jns
lds
lods
xor
add
fwait
xchg
aad
mov
in
jno
enter
rcr
ret
shlb
pop
push
jnp
adc
mov
insb
xor
mov
sub
mov
arpl
aas
cmp
xchg
jb
cmpsb
or
mov
xchg
leave
and
inc
xor
mov
inc
xorb
fisttpl
lret
insl
jle
test
fdivr
or
sub
cwtl
jno
mov
inc
arpl
test
cli
int
xchg
mov
movsl
loop
push
aam
sti
cmp
sub
mov
out
rolb
add
repnz
andl
aaa
out
bound
push
mov
jg
ljmp
cmp
fcoml
mov
lods
inc
fcomps
add
ret
cmc
jg
mov
fnstenv
dec
ret
jae
rcrb
jl
in
stos
jnp
sub
xlat
shll
mov
xchg
pop
lds
jg
jle
sbb
mov
jno
cmp
xchg
dec
daa
xor
dec
outsb
jnp
and
xor
es
ret
sbb
out
in
call
arpl
sbb
fs
mov
xchg
lahf
jne
lcall
xlat
stos
test
adc
inc
test
inc
push
sub
aas
fdiv
inc
std
xor
mov
lret
mov
jmp
cmp
add
xchg
add
jns
xchg
stc
xor
or
pushf
pop
imul
je
cmpsb
fldcw
cmc
or
je
pop
pop
adc
add
xor
les
xchg
or
dec
pop
movsl
scas
std
dec
add
mov
add
add
aam
push
mov
pop
xchg
xchg
mov
xor
imul
push
xchg
pop
mov
popa
push
cld
outsb
jl
lock
xchg
xor
test
fsubl
frstor
cmp
call
popf
jbe
mov
pop
dec
push
mov
jp
jp
xchg
push
sbb
jno
mov
out
ss
ja
mov
test
stos
pop
fwait
push
es
mov
xchg
test
push
sar
stos
pop
xor
jns
sub
xchg
lahf
jl
push
xor
mov
cmc
or
dec
les
jbe
mov
icebp
dec
rclb
sub
loop
mov
pop
adc
pop
mov
daa
and
push
dec
aaa
lcall
or
xor
jle
in
imul
scas
sarb
dec
subb
push
clc
outsb
fldenv
repnz
pop
mov
xor
cmp
ss
mov
inc
icebp
test
jge
xorb
inc
cmp
jo
shlb
call
pop
dec
pop
les
sub
mov
test
test
loop
mov
js
fidivrs
inc
mov
sub
divl
test
jmp
cmp
jb
and
adcb
add
insl
mov
popa
or
rol
push
adc
cmp
stc
or
add
lahf
pop
push
stos
mov
and
subb
stos
inc
sbb
adc
jae
and
jo
faddl
inc
mov
ss
jnp
jns
or
pop
bound
lea
sbb
cmp
mov
shl
nop
movl
pop
inc
add
leave
dec
xor
movsl
jae
cs
call
pop
dec
mov
add
pop
pop
xchg
mov
jle
rclb
jbe
pop
iret
ja
jae
jmp
pop
rolb
popf
insb
push
dec
ss
mov
std
push
pop
fistps
pop
mov
stc
aad
xor
mov
mov
mov
dec
mov
stos
cmpsb
inc
xchg
js
lods
and
inc
pusha
lret
xchg
loopne
dec
lods
in
dec
fadd
test
icebp
ss
stos
lock
add
add
and
vptestmd
mov
mov
in
pop
cmc
out
or
dec
scas
add
xlat
mov
fucomip
xor
pop
push
pop
mov
ret
repz
aam
xchg
in
leave
push
add
leave
xchg
cmp
pop
push
push
pop
rclb
adc
push
popf
inc
pop
jae
add
fwait
push
pushf
fwait
jns
loop
dec
das
mov
pop
or
mov
or
mov
lods
sbb
rorb
loop
mov
dec
xsave
push
sub
mov
jbe
xchg
rcl
xchg
in
loop
lret
xor
inc
ljmp
xchg
pop
adc
int
jge
clc
cmp
mov
xchg
inc
orb
cmp
mov
dec
adc
inc
cmp
push
pop
out
enter
int
into
jne
xor
enter
ja
popa
mov
arpl
into
aaa
scas
inc
adc
sub
or
cltd
push
insb
cmp
rolb
pusha
in
jbe
xor
lea
call
rclb
hlt
ret
sbb
ret
sti
sarb
cmpl
loopne
cmp
test
pushf
into
xor
push
shrl
dec
sub
push
sahf
dec
test
clc
xor
adc
or
mov
mov
mov
inc
push
imul
test
jae
mov
and
push
push
je
add
ljmp
into
jmp
jns
std
or
or
mov
cmp
adc
insl
addr16
jnp
add
mov
xor
dec
dec
adc
movsb
hlt
repz
subl
inc
push
outsb
mov
xchg
fsubrl
xchg
cmp
movsb
int
inc
mov
add
mov
xchg
xorb
mov
call
jne
andl
enter
sarb
sarl
and
mov
and
sahf
lds
lock
dec
cmp
jae
and
mov
adc
cmp
xchg
lea
xchg
add
imul
mov
test
jbe
mov
cmpb
faddl
adc
sub
mov
pop
cmp
xlat
push
push
ret
shlb
fisubl
dec
mov
xchg
pop
or
sub
outsb
sbb
pop
adc
aad
jg
test
push
pop
dec
arpl
jmp
stos
adc
push
scas
je
cli
sbb
cmp
mov
icebp
and
shrb
inc
mov
adc
stc
push
xor
mov
dec
aad
ret
pop
sub
jg
pop
xchg
jno
cmpsb
add
lret
dec
push
xor
xor
pop
jne
inc
movsb
pop
insl
arpl
lods
sbb
dec
mov
pop
sti
sti
imul
movsb
sub
sahf
jnp
bound
and
push
xor
add
adc
xor
enter
inc
aas
outsl
ds
mov
sbb
cli
jg
mov
aam
mov
cld
leave
stos
rcrb
aaa
mov
mov
jg
cmp
push
jne
mov
xchg
in
gs
sub
cmpsb
mov
xor
jno
push
mov
test
pop
pop
repz
or
sub
js
loop
mov
aas
sbb
push
maxps
mov
adc
or
pushf
xchg
adcb
fisttpll
sbb
inc
jl
dec
or
adc
add
bound
xchg
test
imul
out
sbb
lcall
bswap
sbbb
mov
dec
lret
int
inc
sub
push
aas
iret
cmp
js
movsl
out
lds
push
lock
mov
loope
inc
push
outsl
out
jno
and
lods
jbe
icebp
cmpsl
jge
popa
icebp
sub
enter
imulb
or
cmp
xchg
inc
cmpsl
into
push
dec
mov
frstor
xchg
imul
out
clc
pop
and
loop
add
mov
shll
sub
adc
or
push
xchg
cmp
pop
xor
mov
jge
cmp
int3
mov
mov
push
sub
mov
js
pushf
filds
jle
lahf
ret
mov
aaa
dec
mov
int
enter
mov
andl
sbbl
je
or
push
add
repnz
out
xor
and
das
insl
scas
insb
xchg
aam
sarl
jmp
int
inc
sbb
mov
movsb
mov
aaa
pop
jmp
adc
movsb
outsb
pop
cld
ja
cwtl
shrb
dec
shrb
xchg
inc
push
xchg
mov
rorb
jne
xor
inc
mov
or
xchg
dec
add
push
std
mov
je
popf
out
mov
push
dec
cmp
cmp
dec
loop
pop
cwtl
bnd
cmpsb
sub
enter
xchg
mov
fs
int
lds
subl
or
dec
cmp
xchg
push
rclb
sub
adc
arpl
cmp
or
sub
cmp
stos
jne
add
add
fucomip
fiaddl
je
iret
mov
cmpsl
cmc
pop
xchg
dec
push
mov
outsl
push
sbb
paddusb
cmp
lock
sub
push
push
lods
cld
aad
xor
sti
add
add
sub
fistpll
sarb
mov
mov
mov
fdivrs
loope,pt
mov
fidivrs
sub
mov
adcb
xchg
in
inc
jb
lods
adc
lret
iret
or
push
imul
mov
cli
pop
lods
adc
insl
cmpsb
lret
out
cmpsb
jl
fidivrl
xchg
adcb
sub
xchg
mov
popa
int3
push
push
push
inc
jg
shlb
hlt
or
out
add
jno
jmp
addr16
push
xor
aaa
movsb
push
sbb
mov
push
in
pusha
lret
loopne
mov
clc
scas
out
or
jae
add
daa
inc
sub
insb
pop
dec
dec
push
add
sub
jbe
lods
dec
or
fisubs
out
and
sub
xlat
push
rcl
and
push
jns
in
lret
gs
fidivrl
lods
or
adc
xor
movsb
jle
xor
imul
scas
ss
xchg
clc
adc
repz
dec
mov
sub
or
lcall
mov
test
pop
lret
and
stos
imul
and
adc
rcrl
daa
dec
pop
rcll
push
jo
mov
pop
inc
out
jnp
add
test
jmp
cmpb
out
pusha
mov
das
xchg
pushf
sub
sub
movsl
pop
or
pop
adc
mov
push
adc
xchg
ror
ficompl
push
cmp
leave
rcll
lcall
xchg
xchg
test
sbb
mov
mov
lods
dec
fists
mov
mov
cmp
mov
sub
xchg
repz
cs
scas
jno
or
fnstenv
scas
push
addr16
push
jmp
sti
push
imul
jb
dec
fmull
aam
xchg
nop
jne
xchg
aam
cmp
add
int
mov
xchg
movsl
or
test
pop
push
mov
movsb
xchg
mov
push
or
insl
int3
lret
mov
push
cmp
sbb
pushf
dec
jbe
xor
push
out
lds
adc
pop
nop
adcb
sbb
pushf
cld
mov
cmp
push
push
jnp
daa
mov
test
cmp
mov
pushf
subl
inc
cmp
nop
cmp
and
jae
je
adc
adcb
xchg
enter
mov
loopne
or
mov
sbb
fstpl
je
push
adc
rolb
imull
mov
clc
stos
pop
mov
pop
aaa
sub
scas
mov
add
sub
or
inc
mov
cmpsl
pop
lret
pop
bound
fstl
std
in
je
popf
data16
push
sbbl
inc
mov
inc
sub
imul
add
ror
aam
int
mov
aad
jbe
and
cmpb
mov
xor
stos
cmp
adc
in
loope
xchg
out
insb
cmp
xchg
negb
push
mov
mov
cmpsl
adc
aad
bound
lds
xchg
mov
and
adc
fnsave
adc
loope
xchg
aad
adc
add
jb
icebp
mov
cmpsl
dec
js
or
je
stos
push
dec
movsb
outsl
mov
mov
fwait
dec
stos
fbld
inc
bound
or
adc
dec
ss
andl
cmp
xchg
add
sbb
jl
pushf
popf
cmp
cwtl
or
rorb
mov
sbb
fldenv
adc
sub
push
add
inc
add
mov
sbb
or
mov
out
sbb
xor
inc
jg
xor
mov
mov
lcall
dec
ret
std
testb
mov
lahf
popf
xchg
pop
xor
movsl
scas
imul
negb
xchg
adc
in
enter
xchg
pop
lcall
cld
push
jae
jb
dec
sti
fisubrl
push
inc
push
loope
cmp
into
xlat
imul
lret
inc
pop
pushf
jae
sub
je
pop
stos
add
pop
mov
push
push
mov
loop
push
jge
jno
fildl
sahf
ljmp
cmp
out
repnz
mov
lret
insb
ljmp
out
mov
jbe
outsb
dec
js
and
jbe
jg
jle
and
sbbb
pusha
pusha
pop
movsb
dec
lea
dec
in
mov
jno
idiv
rorl
pop
jmp
sub
stos
or
jge
cmp
int
shr
lods
jae
mov
xchg
inc
and
ja
subb
xor
out
or
addr16
dec
stc
mov
inc
xlat
idivb
push
movsb
pop
mov
cmp
arpl
pushf
sbb
int3
idivl
cmp
xchg
into
addb
mov
imul
xchg
and
pop
popl
sub
call
push
jp
jbe
dec
lock
aaa
dec
pop
pslld
pop
dec
push
hlt
filds
aam
sarb
je
add
sti
mov
loopne
ja
mov
dec
push
push
sub
sahf
in
push
loop
and
mov
push
or
xor
jecxz
mov
inc
adc
jbe
mov
roll
pop
pop
stos
push
cli
jno
jnp
adc
sub
or
pop
push
int
fucomi
mov
cmpsb
jbe
cs
jg
loope
fcos
ficoml
jg
push
jp
cmpsl
sub
or
movsl
out
mov
push
sbb
aad
fdivrp
enter
rclb
in
sbb
xchg
outsl
cmp
add
jle
sarl
ret
add
push
cmc
or
mov
mov
data16
adc
aam
sbb
rcrl
pusha
sbbl
mov
dec
adc
xchg
inc
adc
das
add
mov
stc
mov
nop
imul
insb
or
mov
dec
push
xor
sbb
or
lds
cli
mov
ret
mov
jp
test
add
lret
sbb
cs
loopne,pn
fprem
sahf
je
mov
jl
push
jmp
dec
mov
gs
pop
push
lcall
or
pop
xchg
in
das
jge
insb
testb
sbb
les
mov
jbe
pop
push
mov
iret
xor
test
push
adc
jnp
mov
lcall
loope
ss
adc
sbb
aam
dec
stc
mov
inc
xchg
ja
mov
cmp
jbe
popa
je
sbb
scas
jp
pusha
test
pop
adc
inc
or
cld
aam
pop
les
fnstsw
cs
xchg
stos
je
xlat
ljmp
sub
pop
xchg
fcmovu
mov
outsb
cld
sbb
push
int
cmc
xor
loop
jmp
sub
jle
mov
xchg
inc
push
xor
sub
pop
sub
enter
adc
pop
sbb
pop
cmp
add
push
cmp
inc
cmpsl
lret
mov
rol
lretw
xchg
outsl
pop
add
dec
jg
xor
cmp
mov
adc
mov
scas
xchg
push
cli
and
cs
jl
push
push
add
add
fs
mov
and
sahf
out
push
cltd
mov
jg
push
mov
add
add
sub
cmpsb
sub
mov
mov
jno
loope
bound
xchg
ret
loop
mov
push
cmpsl
sbb
pop
sbb
jle
push
enter
mov
pop
adc
or
push
lea
fdivrl
test
and
jno
movsb
out
mov
outsl
push
jecxz
stos
repnz
jle
jecxz
adc
jge
xchg
popa
add
lds
sahf
xchg
jmp
xchg
mov
dec
repz
mov
hlt
and
std
ljmp
pop
dec
pushf
into
frstor
dec
pop
mov
insb
xchg
data16
and
mov
aam
ljmp
cmp
xchg
dec
test
sarl
or
bound
test
mov
lret
sub
movsb
push
xor
and
mov
lock
enter
and
inc
and
out
pop
mov
mov
cli
loopne
fwait
sub
fistpl
xchg
dec
enter
daa
aas
dec
inc
mov
cmp
cs
or
jg
xchg
repnz
mov
and
sub
adcl
xchg
daa
dec
lea
or
scas
mov
xchg
and
sbb
sbb
clc
push
adcb
int
je
pop
mov
sbb
dec
cmpl
lret
jne
adc
push
cmc
ljmp
jmp
sbb
fimuls
push
jno
dec
sbb
xchg
sub
ja
insb
push
sbb
adc
jae
fdivr
cmp
xchg
mov
test
repz
cmp
mov
ret
ret
pop
and
jo
dec
mov
pop
leave
lds
ret
mov
cwtl
fnsave
jmp
and
cmp
mov
popf
pop
dec
shl
pop
dec
xor
or
call
add
fcmovne
scas
cmc
inc
in
mov
pop
pop
jge
mov
pop
mov
aas
mov
stc
gs
add
sbb
std
shll
pop
stc
fiadds
aam
call
lock
jge
lock
sub
dec
out
test
xchg
fprem
outsb
push
ljmp
mov
jle
mov
sub
pop
inc
imull
jns
push
dec
and
sbb
lret
sub
pop
frstor
fwait
push
add
push
mov
xlat
int
push
inc
fdiv
movsl
push
mov
mov
lds
sbb
mov
mov
ret
cmp
rcl
mov
sub
adc
fwait
mov
add
mov
xor
jns
push
jle
adc
dec
push
sahf
pop
inc
add
lods
mov
push
mov
negl
hlt
aas
push
es
sub
jle
inc
push
mov
repz
cmpsl
cld
lods
cltd
dec
addl
pop
scas
data16
das
mov
les
hlt
or
daa
loop
loop
push
mov
sti
leave
dec
push
jge
call
mov
jo
imul
sahf
push
cmpsl
cmpsl
mov
cmp
mov
cmp
jnp
ficompl
lods
add
or
fcomps
ja
out
cmp
mov
mov
sbb
dec
imul
pop
jp
es
in
cmp
icebp
in
lahf
aaa
lret
in
xchg
cmp
sbb
jp
jne
dec
mov
dec
imul
sbb
call
xchg
out
xor
xchg
ss
mov
mov
jb
fildll
sub
jl
imul
fadd
dec
pop
dec
icebp
ja,pn
or
cbtw
inc
shrl
hlt
daa
jo
roll
sub
ljmp
jmp
dec
pop
jg
dec
negb
fsubl
loope
in
and
testb
repz
lahf
test
mov
sub
push
xor
and
adc
add
testl
sbb
pop
fxch
out
fs
mov
pop
lret
rolb
fidivs
and
jg
adc
je
pusha
aad
cmp
xchg
call
cmp
mov
dec
sub
sarl
push
jae
push
adc
sbb
leave
popa
push
scas
mov
pop
inc
mov
pop
adc
lcall
lret
mov
mov
mov
xor
fistpl
pop
sbb
scas
pop
xchg
mov
xorb
xchg
mov
mov
and
mov
out
lock
jge
dec
mov
inc
mov
inc
cmc
or
sarl
imulb
or
pop
and
xor
adc
xor
int
dec
add
mov
pusha
jbe
sahf
out
mov
outsl
jne
or
cwtl
add
fnsave
pop
mov
nop
push
enter
adc
sti
stc
test
xor
mov
int3
arpl
movsl
mov
mov
cmp
js
pusha
mov
imul
lcall
mov
cmpsl
mov
fsubl
dec
adc
sbb
imul
mov
mov
mov
jg
stc
outsl
sub
push
pop
sub
jmp
jns
loop
lret
cmpsb
pop
mov
pop
std
test
and
xchg
cmp
mov
dec
insl
pushf
add
sub
sub
jno
push
mov
std
dec
notb
or
push
mov
sbb
aam
sbb
pushf
test
int
in
push
inc
jle
arpl
add
dec
imul
xlat
adc
int3
inc
push
push
xor
imul
lods
rcrl
inc
addr16
push
inc
fwait
xor
lods
cmpsb
xchg
loop
enter
std
xchg
stos
push
xchg
subl
mov
pushl
icebp
inc
mov
test
insb
mov
xchg
adc
ret
pop
adc
fldenv
shl
repz
mov
enter
aam
mov
inc
rcr
jecxz
jmp
add
push
je
cmp
push
out
cs
hlt
scas
rol
push
cld
push
scas
inc
xor
popa
into
jl
movsl
cmp
out
leave
sbb
push
lret
or
aaa
lock
lds
mov
divb
fsts
cmp
mov
push
nop
ret
out
cmpb
sub
mov
push
int
jnp
cmpsl
mov
dec
mov
arpl
cmpsl
stc
lahf
sbb
and
scas
push
cmovle
adc
push
les
mov
inc
addb
jmp
sahf
repz
cmp
xor
lcall
aas
xor
shlb
das
mov
test
leave
add
inc
in
mov
loope
and
negb
fldcw
sbb
mov
pop
sbb
xchg
iret
xlat
call
or
add
and
sbb
cmp
mov
add
iret
inc
mov
fisubs
jecxz
inc
dec
or
sub
fildll
xchg
test
pop
mov
cli
hlt
fisubs
add
shll
nop
cmpsb
jecxz
sub
fnstcw
mov
outsb
jmp
cmp
mov
filds
loope
aaa
ss
stos
xchg
mov
dec
mov
insb
testl
imul
lds
imul
iret
and
stos
cmp
jne
or
pop
fs
add
sti
mov
push
dec
les
sbbl
int
movsb
mov
out
outsb
pop
push
mov
arpl
pop
add
movsl
jbe
cltd
andl
cmp
in
lock
sub
lret
push
bndldx
xor
pop
pushf
sbb
mov
gs
aam
outsl
mov
mov
mov
mov
sub
insb
pop
addl
out
stos
addr16
repnz
stc
push
add
jno
in
push
push
aam
rorl
sub
inc
jl
lock
shrl
pop
cmp
add
and
out
mov
xchg
negl
shlb
mov
pop
das
in
mov
inc
leave
imul
push
mov
xchg
inc
les
in
stos
in
pop
les
cwtl
insb
jp
out
dec
adc
push
pop
jp
aaa
and
sbb
ret
sbb
push
pop
sbb
fidivl
mov
mov
pop
in
mov
push
lea
push
pusha
push
cli
xor
xchg
dec
es
leave
shlb
adc
aas
mov
popf
fimull
ja
inc
aaa
int
push
adc
and
sbb
dec
incb
ds
test
icebp
decl
imull
mov
adc
scas
mov
mov
pop
andl
filds
test
mov
fprem1
leave
pop
sbb
ds
or
jg
imul
shl
incb
out
mov
ds
call
nop
aaa
lcall
mov
xor
xor
std
fldenv
bound
stos
dec
data16
pop
xchg
xchg
push
lret
xchg
mov
icebp
repz
arpl
loopne
es
out
dec
icebp
mov
xor
or
mov
in
xchg
sbb
loope
enter
dec
ret
pushf
cmc
inc
push
pop
mov
xor
dec
std
hlt
shlb
orl
push
adc
mov
or
leave
fidivrs
sub
movsb
js
sub
add
aam
push
push
cli
mov
fbld
movsl
cmp
in
jg
jo
pop
fldenv
pop
sub
cs
iret
ja
insb
xchg
cs
rcll
movsb
inc
sub
lret
mov
push
lahf
repz
dec
push
out
pop
ret
or
push
stos
neg
mov
xlat
ja
sbb
and
push
mov
out
jnp
dec
cmp
insl
mov
sahf
push
push
push
cmpsl
adc
test
mov
sbb
mov
push
std
sub
fstpt
mov
clc
jne
cs
adc
and
jae
push
dec
xor
mov
neg
push
aas
lock
fbstp
push
inc
sub
les
cmpsl
jl
xor
stos
icebp
pop
push
adc
aad
stos
xchg
rcrb
je
cmpsl
shll
push
xchg
lds
rcll
pop
pop
push
int
mov
xlat
adc
xchg
jmp
dec
mov
and
insl
lea
or
sub
sbb
insb
std
pop
cmp
add
ret
gs
xchg
pop
jno
jae
pop
stc
dec
repnz
and
mov
sarb
sbb
mov
lcall
push
popf
enter
jae
push
andl
ret
add
fnstsw
xor
popa
stos
jo
test
scas
ja
adc
ljmp
addr16
out
aaa
pop
loop
cmp
mov
and
enter
ret
pusha
in
into
int3
sub
or
pop
ds
pop
sbb
jbe
outsl
jmp
push
aad
push
mov
lods
sti
and
push
mov
mov
cmp
xchg
lcall
sbb
xor
les
push
pop
das
enter
pop
in
or
call
add
push
pop
push
xchg
in
stos
jno
lods
push
dec
repnz
pop
flds
das
mov
push
subb
push
in
xor
xchg
repz
and
mov
mov
dec
std
add
sbb
inc
dec
movsb
mov
and
xchg
cmp
pop
je
sarl
fs
mov
push
push
cmp
movsb
sub
sub
je
ffreep
in
cmpb
xchg
jne
adc
cmp
sbb
mov
add
push
mov
and
loop
mov
xorb
test
mov
mov
leave
cs
int
pop
fwait
cs
loopne
dec
or
imul
stos
inc
hlt
sbb
xchg
scas
inc
mov
bound
xor
out
div
inc
jge
test
hlt
pop
in
sub
sti
mov
test
mov
jb
xor
and
mov
pop
and
enter
mov
repnz
dec
aas
je
int
cmp
push
lock
int3
mov
lret
or
jp
out
jns
sbb
pop
loop
jbe
adc
mov
js
jnp
mov
push
mul
les
hlt
pop
or
dec
fldenv
push
dec
and
faddl
sbb
sbb
sub
shl
adc
and
pop
popf
scas
negl
mov
dec
ret
mov
or
js
shlb
xor
stos
je
lods
push
cli
fwait
pop
inc
push
sub
testl
arpl
sub
adc
cli
lahf
push
push
outsb
stos
cmpsl
sbb
dec
shrb
cmpsb
test
je
sarl
mov
sbb
fldln2
pop
jne
aas
je
pop
flds
aas
inc
aad
aad
outsb
ss
dec
test
out
rcrl
enter
sub
lahf
jns
adc
adc
bnd
sbb
jo
push
mov
mov
rcr
jle
sub
pop
into
bound
lahf
pop
sbb
lods
add
ret
and
std
jbe
inc
pushf
lcall
sub
daa
xor
sbb
in
cs
outsl
fsubs
ds
mov
test
inc
push
cmp
test
adc
push
loope
fnstsw
jnp
ret
and
fists
loopne
lock
jo
mull
pop
movl
push
jg
dec
aas
sub
pop
mov
mov
cmc
lea
adc
cmp
andl
sub
sub
stos
aaa
ret
popa
sbb
add
adc
dec
mov
sbb
pop
enter
lock
idivl
addb
jge
sub
jo
jp
sbb
add
aaa
fstps
mov
mov
lock
idivl
inc
pop
insl
mov
jecxz
nop
mov
dec
test
jecxz
testb
lds
fstl
adc
js
loop
loop
jb
and
in
or
icebp
test
sub
inc
xor
dec
push
inc
mov
adc
pushf
push
pusha
xor
xchg
orb
nop
push
cmpsl
xchg
andb
cmpl
add
xor
mov
jns
mov
add
fwait
sub
insl
test
mov
fidivrl
push
bound
in
cs
inc
fs
dec
cmpsb
mov
andl
jno
mov
or
xchg
insl
xor
xchg
rolb
dec
lcall
clc
xchg
sub
in
add
shl
cs
fistl
sub
xchg
cmp
jmp
mov
ljmp
call
mov
add
shrl
adc
into
xchg
cmp
push
sbb
stc
jg
cmp
jbe
dec
outsl
test
ds
addb
mov
mov
mov
push
or
push
popf
test
jae
sbb
push
mov
out
jle
movsl
pop
sub
lcall
pop
mov
popf
pop
fistl
dec
jmp
imul
je
andb
icebp
or
nop
mov
out
insb
ret
inc
xor
pop
xlat
push
mov
stc
fcomps
ljmp
leave
mov
fisubl
in
cwtl
or
sub
popf
mov
fidivl
or
adc
imul
out
divl
mov
push
or
sbb
mov
mov
rclb
nop
inc
fwait
cwtl
rorb
pop
pusha
xor
xor
pusha
repnz
push
loopne
or
shrb
aaa
lea
mov
out
push
mov
fbstp
repz
daa
ja
insb
jmp
mov
xchg
inc
mov
lea
rolb
fs
push
sbb
stc
imul
fistpl
sub
cmp
sub
aad
xchg
out
pop
movsl
jl
xchg
xchg
stc
rcrl
push
sbb
mov
cmc
lods
rorl
and
mov
mov
mov
and
xchg
or
cltd
mov
lock
mov
and
cmc
push
mov
inc
adc
mov
rolb
mov
mov
jmp
pop
add
ret
jge
xchg
sbb
add
mov
leave
lock
hlt
sub
mov
xchg
adc
adc
out
test
sbb
aaa
mov
aaa
daa
in
and
lret
mov
hlt
dec
mov
mov
mov
imul
mov
clc
jae
js
out
repz
fisubrs
aam
imul
and
mov
loopne
shll
add
mov
std
into
cltd
stos
mov
stos
lock
aas
pop
jle
enter
cwtl
push
push
and
mov
arpl
and
inc
mov
sub
or
lcall
movsb
loopne
pop
outsl
int
pop
jle
test
aad
arpl
jmp
dec
inc
out
out
outsb
and
aaa
out
or
push
cmp
repz
or
fs
xchg
in
movsl
adc
lods
stos
rorb
into
jbe
push
popa
lock
testl
out
lock
xlat
cmc
imulb
push
cmp
hlt
sti
addr16
xchg
mov
and
in
add
jmp
in
test
jae
cli
scas
xchg
scas
push
out
icebp
xor
xor
fstps
rolb
and
dec
mov
pop
daa
jne
test
and
dec
cmpsl
inc
fistpll
shrb
cltd
push
pop
popa
out
aaa
iret
ret
bound
xchg
flds
lahf
jo
shll
mov
in
fs
mov
mov
mov
mov
jb
mov
xchg
push
sti
cmpb
lahf
clc
push
test
movsb
leave
add
xchg
dec
xchg
or
rcrb
dec
ret
add
xchg
andl
mov
mov
icebp
add
xor
clc
sub
cmp
and
xchg
call
lods
hlt
push
dec
in
inc
jns
arpl
loopne
lock
mov
idivl
imul
rorb
dec
ret
std
imul
stos
and
shll
and
or
aaa
adc
jl
xor
cmp
xlat
add
sub
cmp
addl
push
adc
enter
cmpsb
fcomi
pop
pop
mov
into
mov
mov
mov
fidivrl
xor
and
sahf
in
adc
and
mov
dec
mov
xor
orb
add
call
cmpsl
mov
mov
insb
push
sub
inc
shll
push
mov
or
fwait
imul
cmp
es
fisubrl
roll
shlb
or
clc
push
jmp
gs
or
cld
dec
push
cmc
push
aas
out
pop
dec
dec
xor
outsl
stos
or
mov
mov
aad
adc
test
lcall
stos
std
jne
iret
add
dec
and
fsubs
inc
in
sub
jbe
push
mov
test
sbb
jl
imul
or
dec
loope
adc
adc
or
icebp
xor
pushl
lds
in
mov
ljmp
insb
mov
cmp
idivl
xchg
mov
ficompl
or
mov
xchg
xor
daa
mov
mov
popf
scas
vmovupd
inc
inc
icebp
inc
cltd
jns
xchg
and
xor
cmp
dec
mov
adc
popa
ljmp
cmp
pop
gs
jne
xchg
fwait
int3
mov
iret
add
das
negl
loopne
xchg
decb
shlb
pusha
sub
push
mov
popl
imul
adc
inc
mov
or
pushf
mov
adc
cmp
ss
pop
movl
push
pop
mov
out
add
stc
fucom
aad
outsb
mov
imul
mov
out
xchg
cld
pop
out
push
pop
into
mov
push
mov
or
out
xor
jp
adc
xor
sbb
lret
xor
xchg
cmpsb
and
jmp
pop
insb
dec
lahf
bound
fs
xor
xor
mov
xor
and
enter
orb
pusha
andl
xchg
lds
mov
scas
rcr
out
lret
add
inc
lcall
xchg
push
xor
mov
pop
jecxz
push
fwait
daa
jo
push
add
xchg
ja
subl
aam
mov
mov
mov
leave
jbe,pt
paddw
and
or
rolb
in
mov
sub
aad
dec
pop
cmp
and
fs
cmp
iret
xchg
mov
add
add
xlat
cltd
in
loope
adc
test
mov
fiaddl
sbb
mov
push
xchg
fmull
lret
out
lcall
fisttps
imul
mov
in
std
cs
inc
ljmp
sub
push
dec
in
xor
jg
inc
jne
fsubr
add
loopne
out
jl
add
imul
test
shll
dec
test
fwait
pop
jnp
adc
dec
jp
insb
cmp
jge
cli
int3
fsts
push
ret
mov
pop
pop
cs
lret
xchg
in
ja
fists
bound
pop
and
adc
pop
pop
cs
lock
adc
lahf
mov
sub
mov
int3
jl
ds
cmpb
in
orb
std
pop
xchg
pusha
jmp
lods
lds
pop
mov
hlt
pop
mov
xchg
clc
stos
imul
es
cmpsb
push
addl
push
es
pop
daa
dec
pop
push
dec
imul
int3
shll
xchg
in
or
fistl
jg
inc
ret
xlat
sub
adc
dec
xchg
add
and
les
xor
xchg
jns
push
pushf
pop
push
addl
cmp
mov
push
imul
mov
stos
ret
cmpsb
outsb
test
lahf
cli
addl
pop
mov
push
fnstenv
lahf
out
sbb
clc
or
imul
lret
popa
add
out
ds
cli
xchg
cmc
fs
movsl
mov
cmc
inc
push
inc
pop
dec
and
and
cmp
push
inc
stc
jo
out
popf
cs
and
es
or
lods
mov
pusha
fstps
in
outsl
jne
mov
jl
add
and
sbb
imul
int
ret
mov
pusha
xchg
jo
fldt
xlat
call
dec
push
xor
mov
into
or
sub
insb
mov
addb
insb
imul
lods
mov
enter
data16
popa
mov
xor
and
fistl
xor
in
adc
sbb
es
mov
lret
scas
and
or
mov
sub
insl
les
int
sarl
loop
sbb
xchg
shll
or
xor
adc
ss
test
gs
je
in
lea
dec
aam
dec
adc
or
dec
fimuls
pop
mov
mov
mov
scas
xchg
mov
mov
mov
push
or
movsl
pop
out
es
lds
in
sub
sti
mov
xchg
inc
sbb
rorl
cmp
les
outsb
gs
jg
mov
sbb
jne
mov
xor
push
pop
cs
loop
jae
into
lods
mov
adc
mov
lock
pushf
and
stos
ret
test
push
and
fldcw
mov
stos
or
add
gs
xchg
ja
movsb
icebp
insl
dec
cltd
je
mov
popa
add
xor
adc
pop
ljmp
xchg
mov
movsb
je
ret
lret
mov
ret
inc
pop
push
scas
xchg
lock
cmpsl
cmp
repnz
ficomps
xor
les
cmpsl
pop
mov
push
cmp
les
lcall
aad
lea
add
inc
insl
dec
mov
and
mov
push
out
rcll
xor
outsb
jl
xchg
xchg
xchg
fistl
out
adc
push
add
mov
mov
sahf
mov
sahf
jp
xchg
push
aad
int
fdivs
jle
sbb
enter
inc
and
mov
and
xchg
xchg
jl
inc
jo
mov
push
push
or
loopne
dec
cmpsl
mov
jle
dec
mov
insb
push
pop
ljmp
push
in
jnp
dec
push
stc
push
mov
or
mov
aas
inc
mov
mov
cmp
jmp
xchg
xor
popa
xchg
and
mov
sbb
outsb
arpl
push
loopne
mov
cli
push
test
orl
xlat
inc
aad
push
into
jle
xor
push
jne
test
test
filds
inc
in
mov
dec
push
adc
pop
xchg
stc
insb
popa
out
xchg
jg
xchg
add
mov
jae
adc
sbb
xlat
js
testl
lods
adc
jg
add
fiaddl
call
lea
inc
fs
pop
jne
add
inc
out
xchg
out
loope
sbb
mov
dec
or
dec
mov
out
dec
int3
lods
das
into
into
lahf
cmpb
sub
push
jge
cmp
je
pop
stos
xor
loopne
inc
cli
xchg
mov
nop
cld
std
imul
stos
iret
popf
and
push
jb
out
lds
data16
shrl
pop
lock
ljmp
jle
cld
mov
mov
jecxz
mov
xchg
bnd
and
push
rorl
movsl
fcmovnbe
mov
test
lret
stc
mov
push
pop
mov
mov
and
fmull
adc
inc
add
push
dec
and
dec
jmp
notb
scas
mov
mov
inc
add
shlb
das
push
cmp
xorl
aam
call
cmp
adc
mov
lret
outsb
mov
call
aam
ret
adc
mov
enter
hlt
cltd
mov
jl
or
add
test
jge
xchg
jae
and
pop
bound
jge
cwtl
insb
leave
jns
lahf
andl
push
pop
call
sub
add
push
dec
test
push
cmpsb
popf
mov
mov
jb
jae
out
arpl
and
jne
push
cmp
push
xor
in
mov
and
jo
jmp
mov
adc
std
cli
shll
push
sbb
roll
outsb
push
fwait
sbb
mov
scas
stos
xchg
mov
cmpl
pushf
lret
outsb
outsb
imul
orb
push
and
daa
mov
sahf
outsb
mov
pusha
add
loop
movsl
outsb
or
pop
stc
je
or
inc
test
inc
insb
fists
xor
loope
push
repnz
popa
lahf
mov
shrb
mov
push
mov
fistpl
cmp
jbe
and
daa
adc
ja
test
cltd
add
insl
jp
pop
outsl
push
push
imul
dec
xchg
scas
add
mov
ret
iret
lods
clc
pop
mov
and
push
cmp
add
mov
sbb
jp
dec
mov
imulb
iret
mov
pushf
mov
movsl
jmp
insl
push
pop
mov
das
dec
sub
arpl
sti
add
fdivs
ljmp
mov
and
out
push
out
sti
lcall
push
int
pop
jo
in
inc
jecxz
or
cs
fxch
stos
lret
in
call
and
push
out
aaa
pusha
xor
push
fs
inc
aam
add
sti
mov
dec
lods
mov
arpl
and
adc
or
xchg
loope
loope
ret
pusha
std
adc
xlat
pusha
arpl
lret
iret
inc
or
jmp
push
adcb
mov
jne
dec
xchg
mov
jp
xchg
lcall
lahf
les
mov
sbb
shll
in
mov
jmp
mov
xor
fdivl
xor
push
ss
push
cwtl
test
jbe
out
sbb
lahf
push
cmpsb
loopne
enter
adc
sub
add
mov
mov
daa
addr16
adc
push
out
outsb
xor
fadd
xchg
inc
popl
lods
jbe
mov
movsb
andl
pusha
xorl
fs
stc
mov
icebp
movl
in
je
push
mov
lods
lret
pop
lds
sbb
jns
pop
out
jno
das
pop
sub
jg
mov
cmp
sbb
cmpsb
out
jno
hlt
push
add
cltd
push
ffree
icebp
mov
jae
popf
mov
or
adc
push
push
mov
lods
push
adc
insl
arpl
pop
movsl
add
sub
imul
xor
xchg
xlat
shll
or
dec
in
push
iret
add
lock
or
movsl
jmp
sbbl
mov
push
stos
fstps
clc
xchg
lret
and
popa
sti
sar
pop
outsb
xorb
sbb
shlb
jae
sbb
in
or
mov
pop
pop
neg
nop
repz
out
mov
jae
or
and
inc
movsl
rol
jl
sub
lahf
mov
test
inc
cmp
or
sbb
in
sub
jg
scas
add
insl
ja
adc
pmulhw
xor
sbb
cmp
mov
stc
call
push
pop
scas
push
jb
cmpsb
repz
push
stc
cmp
test
lret
jae
mov
scas
stos
or
shrl
or
push
mov
dec
lods
inc
test
xor
sbb
mov
or
enter
or
fcoms
add
loop
aaa
pop
add
test
mov
pop
cld
iret
dec
int
cmp
pusha
push
sbb
mov
les
nop
mov
aad
jmp
test
dec
push
push
lea
mov
jns
sbb
mov
popf
mov
movsb
lcall
sbb
jo
xchg
loopne
pop
or
pop
xchg
mov
outsl
jo
mov
bound
stc
add
test
pop
sbb
ret
mov
js
inc
jle
mov
repz
xchg
cs
pop
push
pop
lahf
inc
negb
cwtl
inc
mov
or
pop
outsb
push
leave
popf
sbb
fbld
push
pop
jae
clc
sarb
lds
mov
cmp
aaa
mov
adc
or
dec
sub
aas
lret
sub
scas
pop
jo
lock
and
in
es
repnz
or
dec
add
adc
mov
hlt
inc
mov
dec
ljmp
add
inc
cmpsl
loope
loope
xchg
rclb
loopne
ret
inc
int
lods
jno
inc
push
sub
and
call
pop
nop
loope
ja
xorl
clc
push
dec
in
cld
xchg
jne
and
out
popf
mov
sub
int
and
push
sub
add
sub
iret
cmp
jmp
repz
pop
mov
insb
xchg
or
xchg
cmp
loop
mov
fwait
xchg
inc
lds
in
xor
xchg
out
sahf
movsb
inc
push
inc
push
or
adc
sbb
pop
sti
insb
xor
test
lds
cmpsl
jg
jne
cmp
test
jl
mov
js
mov
fstpt
or
pop
xor
mov
or
xchg
enter
pop
int3
inc
sub
sub
div
ss
xlat
xchg
or
add
outsb
cmp
jp
xchg
mov
cmp
fdivrp
dec
shrl
mov
mov
dec
insb
aad
dec
std
cltd
mov
cmp
cltd
xor
pop
lcall
push
in
inc
cltd
sti
loope
std
add
stos
xchg
hlt
and
pop
sbb
rclb
cmp
std
jmp
mov
sub
sub
idivl
out
pusha
out
out
mov
sbb
and
shl
ds
pop
js
pop
test
and
mov
sbb
or
lcall
repnz
add
cli
dec
ljmp
test
popa
pusha
sbb
and
icebp
sub
mov
mov
dec
mov
hlt
or
je
jle
adc
push
cmp
outsl
inc
inc
test
pop
xchg
nop
test
push
cmc
aas
mov
mov
ljmp
push
xchg
inc
cld
dec
insl
cmpsl
or
shl
jmp
dec
movsb
in
cmp
fisubl
cmp
fcoms
cmp
mov
je
addr16
or
dec
mov
inc
dec
mov
dec
into
mov
xor
lret
pop
adcl
fs
iret
imul
lea
xchg
and
xchg
pop
pop
pop
in
push
cmpsl
int
aas
cmpsl
adc
imul
mov
ljmp
dec
call
dec
roll
push
mov
bound
sar
hlt
idiv
sub
adc
and
aad
adc
testl
inc
and
sbbb
ret
in
push
aaa
mov
aad
fimull
out
add
mov
xchg
mov
cli
je
fchs
pop
js
repnz
popf
sarl
pop
sub
es
jbe
sub
mov
fiadds
mov
frstor
aaa
aam
jbe
dec
inc
push
sbb
out
mov
test
insb
jle
mov
mov
lods
outsb
xlat
dec
fs
mov
ss
inc
clc
test
addr16
add
cmp
push
test
in
jl
fistps
adc
sbb
sbb
jbe
xor
mov
icebp
aad
xchg
pop
pop
mov
mov
pop
adc
mov
into
xchg
add
stc
and
xchg
inc
sbb
data16
jge
pop
cmp
int
popa
mov
sub
enter
xchg
xchg
outsl
hlt
mov
push
sub
dec
mov
inc
mov
enter
mov
and
loope
jmp
jge
sub
cmpsb
cmp
add
ljmp
mov
pxor
sar
pop
adc
int
jl
stos
imul
or
in
mov
mov
js
notb
xchg
out
cmp
xor
orl
pop
jo
xchg
xor
sbb
js
mov
and
adc
andb
sti
pushf
mov
mov
addl
xor
xchg
out
jno
mov
in
dec
pop
aam
pushl
outsl
xor
cmp
adc
popa
sbb
adc
cli
ret
pop
add
shl
cmp
sbb
xchg
cmp
mov
dec
pop
mov
test
popf
out
jne
xchg
ja
mov
and
cmp
pop
push
js
and
pop
mov
nop
xchg
in
es
add
pop
fsubrl
xor
mov
ds
and
int3
enter
ret
cmp
mov
rorl
mov
xchg
repz
std
inc
sub
test
push
inc
fcom
inc
xchg
cltd
push
xchg
scas
fcmovnu
jns
stc
gs
repz
pop
dec
mov
into
std
popa
movsw
or
jne
into
mov
mov
jb
jnp
setle
in
enter
mov
adcl
add
xchg
sti
into
call
dec
mov
inc
fiadds
mov
jno
fsubl
push
shrb
and
movsl
xor
scas
jecxz
inc
lea
repnz
adc
or
push
or
sbb
xor
sub
mov
xor
mov
in
dec
lcall
jg
xchg
push
fldcw
mov
je
xchg
test
add
sub
addl
mov
into
mov
aaa
outsb
dec
insl
jmp
add
scas
dec
popa
dec
dec
dec
mov
xor
jno
in
pushf
mov
mov
sub
rolb
cmp
xorl
fdivrl
mov
fdivrp
out
shlb
sti
cmpsb
jae
cltd
xlat
push
inc
jecxz
jg
mov
mov
push
sbb
fadd
out
xchg
mov
pop
repnz
lea
fisttpll
scas
and
iret
inc
shrb
mov
fldcw
mov
inc
imul
rcr
jecxz
mov
and
in
inc
jmp
mov
and
jns
cmpsl
mov
or
add
inc
adc
lret
or
mov
push
movsb
loop
popa
cmp
xchg
mov
pop
cs
dec
jae
lret
jne
xchg
xchg
xchg
ss
ja
fdivrs
cmp
xor
aam
fisubrl
ds
outsb
add
xchg
push
ret
stos
shrb
lds
rolb
test
adc
mov
and
bnd
arpl
rcrb
cmp
pop
push
xor
and
adcb
xchg
incl
sahf
lea
push
inc
jl
bound
aaa
xor
vmread
in
sar
push
out
pusha
xchg
xor
rcll
and
pop
fcmovnu
fs
fdivs
or
std
cmp
scas
cmp
in
push
insb
lock
sub
repz
insb
sub
out
push
cmp
lahf
push
lock
push
cmp
or
pop
rolb
xor
scas
andb
cwtl
xor
jp
movsb
test
and
mov
jne
out
mov
xor
push
sbb
pop
outsb
push
lahf
stos
nop
pop
add
jge
imul
sub
cmp
add
das
mov
int3
fcomp
out
inc
or
fs
mov
mov
push
pop
insl
add
sub
jmp
mov
popf
cmp
dec
flds
add
mov
mov
lods
or
inc
cmp
imul
jmp
es
movsl
out
cmp
sbb
cs
dec
and
or
imulb
xchg
icebp
dec
ja
jo
popa
test
sub
inc
or
xor
ret
and
jl
fmuls
or
cmpsl
jnp
aam
dec
sub
mov
mov
sub
add
cli
ficomps
mov
mov
fmulp
fists
arpl
sbb
stos
xchg
or
inc
out
and
jl
pop
inc
stc
jnp
adc
mov
and
adc
cs
dec
mov
xor
icebp
cmpl
repz
out
inc
cmp
pop
xlat
fisubl
int3
aad
inc
shlb
movsb
addr16
test
repz
xchg
push
push
cmp
or
movsb
cmpsl
pusha
int3
dec
mov
pop
icebp
js
in
pop
pop
jle
test
lods
outsl
mov
sbb
stos
and
aad
or
pusha
add
xchg
cld
push
pop
pop
clc
aaa
test
fnsave
shl
insb
enter
mov
push
cmp
jae
aad
cli
dec
xchg
add
out
out
rcll
dec
pop
arpl
and
fcomps
das
adc
adc
push
pop
cmpsb
aas
jg
fwait
rcrl
push
mov
add
jne
mov
lds
arpl
cmp
pop
cmpsl
xchg
sub
sub
pop
mov
sub
jle
cltd
xchg
jle
cmp
pop
sub
xor
arpl
lcall
push
in
jnp
sbb
and
push
dec
sub
inc
or
mov
mov
adc
mov
add
jle
pusha
leave
loop
mov
lods
dec
cs
jae
daa
dec
add
xchg
xchg
cli
inc
pop
mov
xchg
loopne
pop
and
je
inc
popa
gs
push
sub
xchg
ljmp
mov
jbe
xor
push
lock
es
push
xchg
xchg
inc
xchg
sbb
mov
dec
mov
mov
incl
movsl
mov
fldt
lcall
js
daa
imul
dec
mov
jg
xor
jbe
inc
cmp
nopl
sub
push
add
lahf
in
repz
fsts
adc
lock
clc
and
adc
fs
ss
and
mov
push
cmp
clc
adc
fimuls
and
add
sub
mov
xlat
mov
ljmp
and
mov
push
insb
inc
add
movsl
mov
imul
lds
cmp
or
sarb
fwait
xchg
jbe
pop
mov
orb
leave
or
sbb
mov
in
faddl
lret
xor
movsb
xchg
cli
cwtl
pop
movsl
lds
xchg
xor
xchg
nop
insl
aaa
and
call
cmp
rol
xchg
jne
mov
inc
cmp
mov
nop
lret
jne
movsb
out
movb
push
ljmp
pop
inc
sbb
sti
fucomip
push
nop
dec
or
xlat
cmp
fadd
mov
xchg
xor
movsl
cmp
jecxz
ret
in
fnstsw
pop
ja
xor
aam
negb
pop
rolb
jno
xchg
sub
fs
int
jne
xchg
jbe
jo
adc
push
dec
jge
jmp
jne
sub
repz
xchg
push
pop
sbb
xchg
mov
pop
adc
popf
push
xchg
inc
dec
cmp
xor
and
pop
xor
sbb
lods
es
jle
xlat
xorps
les
test
xchg
lock
fbstp
test
and
rol
and
or
outsl
jmp
mov
jmp
ret
outsl
xchg
ret
pop
adc
dec
push
or
fwait
dec
adc
ret
pop
cmp
imul
bound
data16
add
xor
xor
jae
loope
mov
ljmp
dec
or
inc
mov
pop
iret
mov
enter
orb
or
test
push
cs
cmp
push
adc
mov
dec
js
stc
aaa
sub
sub
pushf
cwtl
push
jmp
xor
popf
mov
pop
rclb
jle
out
cwtl
add
enter
in
mov
shl
pop
div
pop
push
es
add
jnp
inc
sar
xchg
fwait
hlt
inc
int
loop
sbb
scas
insb
cld
or
ja
sbb
test
nop
jle
cwtl
dec
cmpsb
and
xchg
shl
fldl
call
mov
xor
stc
xor
add
imul
and
outsb
mov
xor
sti
fdiv
mov
stc
adc
in
std
inc
popf
jg
jns
js
add
mov
call
jmp
in
loopne
cmpxchg
mov
stos
mov
nop
mov
fisubrs
sub
inc
mov
mov
enter
adc
out
push
in
daa
js
popf
adc
es
aad
mov
cld
add
or
cld
xchg
lea
cwtl
cmp
test
fildl
mov
jmp
dec
fs
int
mov
ds
cli
or
aas
mov
cltd
mov
pop
inc
rcr
ficoms
clc
push
or
into
and
mov
dec
hlt
sahf
cmp
push
mov
aam
inc
pop
sbb
fcmovnbe
cmp
add
test
hlt
je
inc
movsl
cmp
fmuls
cwtl
cmpsb
cwtl
mov
jle
pop
or
out
addr16
push
clc
jecxz
shlb
cld
mov
inc
orb
jno
sub
and
mov
bound
push
push
xor
mov
cs
and
repnz
push
jbe
pop
movsl
push
and
fistl
mov
fnstenv
and
jbe
inc
leave
mov
adcl
ror
dec
xor
cmpsl
cs
fisttpll
pop
call
decl
jne
mov
adcb
ss
lock
movsl
movsb
cmpsb
cmc
pop
incb
loopne
xor
mov
sbb
adc
push
idiv
dec
aaa
and
fs
cmp
scas
ja
mov
outsb
inc
or
pop
clc
lea
dec
jmp
fwait
sahf
mov
xor
rclb
sbb
pop
add
test
mov
add
cli
pop
inc
sti
xchg
aad
js
lret
imul
mov
xorl
adc
cmp
pop
sbb
push
pop
iret
cmp
jle
pop
dec
pusha
push
rclb
mov
test
fidivrs
stos
cmpsl
scas
mov
inc
cmpsb
xchg
or
iret
jp
pop
insl
lea
rcrl
jo
outsb
das
std
pop
out
pop
clc
push
push
loopne
cwtl
nop
les
push
out
push
pop
sar
fsubrl
sbb
dec
fwait
lods
pop
pop
in
test
pop
imul
outsl
into
pop
and
arpl
je
and
mov
pop
mov
stc
inc
and
push
push
dec
add
psadbw
dec
mov
sub
sbb
fcoms
int
cmova
les
jo
fucom
stos
fcomps
dec
cmp
jae
repz
and
in
mov
inc
pop
cmp
in
xor
add
mov
adc
lret
aad
out
data16
outsl
divl
rclb
and
cmp
xchg
insl
ljmp
push
or
icebp
popf
arpl
jp,pt
xchg
inc
pop
cmp
leave
imul
lods
mov
jmp
cmp
jge
movsl
lret
imul
lea
inc
xor
cmp
ljmp
das
mov
mov
leave
xor
lods
gs
hlt
in
xor
leave
pop
aad
add
pop
dec
xchg
xor
dec
lret
les
inc
xchg
in
fldl
sub
aam
outsb
stos
iret
int
ss
cwtl
and
pop
jne
sarl
mov
repnz
jae
jl
lods
xchg
xchg
jmp
daa
jmp
xchg
or
cmc
out
adc
mov
mov
aas
mov
jecxz
xchg
sub
fbld
dec
jmp
jne
std
mov
icebp
fs
add
inc
rorb
mov
in
and
or
arpl
test
and
repnz
inc
or
insb
and
add
hlt
ljmp
shll
sar
arpl
dec
stos
es
adc
imul
inc
xor
hlt
mov
cmp
mov
shrl
insl
sbb
lods
and
push
adc
push
xchg
cli
je
cmpsb
loop
pop
std
addr16
xchg
mov
lret
stc
add
fwait
or
nop
cli
inc
add
testb
shl
mov
and
jbe
sarl
and
xchg
das
test
outsb
jmp
jecxz
popa
fsubrl
mov
les
je
arpl
or
out
fs
sub
xchg
daa
sub
mov
cltd
leave
add
dec
dec
aam
lods
add
ja
jecxz
je
adc
push
movsl
jg
clc
mov
xor
enter
add
cmp
inc
sbb
adc
addl
dec
lcall
jbe
push
push
movsb
or
mov
sbb
cmp
sub
mov
dec
adc
inc
xorl
cli
jmp
push
je
insb
add
push
push
aas
cmp
push
bound
xor
out
push
dec
cwtl
and
gs
scas
push
lret
inc
dec
scas
stos
cmp
daa
xchg
stos
adcl
mov
xor
inc
cmp
daa
das
popa
cmp
add
aaa
sbb
mov
jne
mov
ja
cmc
popa
add
fists
mov
cwtl
movsl
std
aad
lock
pop
out
pop
popa
adc
aas
imul
cmp
push
mov
iret
je
dec
daa
or
in
or
icebp
cmp
jmp
xchg
xchg
sbb
mov
sbb
popf
mov
adc
push
cltd
push
cmp
mov
add
xchg
movsl
add
cmp
es
dec
push
ret
mov
cmp
lock
lahf
cwtl
xor
clc
fs
test
pushw
in
rorl
cmpsb
movsb
push
ja
adc
cltd
push
pop
dec
pop
adc
sbb
pushf
jno
lods
aad
pop
mov
push
je
clc
outsl
sbb
es
add
push
pop
and
sub
push
aaa
sub
int
loop
imul
aaa
test
ljmp
jle
jo
pop
push
fmull
pop
inc
std
cmp
and
cltd
cmp
xlat
leave
or
sbb
lret
fs
test
pusha
movsl
cmpsb
int3
cltd
jae
jmp
imul
stos
inc
fs
push
mov
mov
cmp
icebp
mov
adcb
or
sub
ret
mov
xchg
mov
xchg
jmp
rol
dec
push
gs
mov
pop
sub
lcall
push
sub
hlt
push
sub
movsl
dec
fwait
pop
and
test
aad
out
repnz
xchg
mov
mov
add
push
xchg
xchg
jmp
enter
mov
xor
jnp
xchg
push
xchg
sub
adc
ljmp
cwtl
stos
fmuls
testb
fcmovnbe
mov
scas
aad
mov
decb
ror
xchg
out
pop
xor
aaa
push
ret
in
loop
mov
sub
xor
jl
loop
mov
frstor
mov
or
sub
idiv
add
adc
inc
mov
mov
and
adc
nop
sub
push
inc
xchg
cmp
mov
adc
nop
sarl
rorl
test
cmpsb
inc
in
jp
fadd
dec
aad
negb
shrb
cld
xor
sbb
adc
lahf
enter
sub
pop
sub
pop
je
nop
fcompl
pop
loop
mov
out
leave
push
out
add
add
lret
cmp
subl
xchg
fsubl
fdivr
push
xlat
jne
fdivrs
in
jno
xor
addr16
lea
divb
mov
ds
pop
hlt
dec
imul
sbb
out
jp
mov
xchg
lcall
into
jle
mov
movsb
mov
or
jae
push
jns
lods
das
call
sub
add
dec
dec
fcom
push
cmp
std
mov
mov
sub
push
push
sti
lahf
or
fs
mov
lds
push
divl
sbb
xchg
in
sahf
negb
in
movsl
fstl
xlat
es
shr
pop
add
mov
stc
pop
mov
addl
mov
and
jbe
cmp
fists
cmpsl
adc
pop
loop
lcall
pop
xchg
add
cmp
cltd
sbb
lcall
mov
cmp
ja
mov
cli
int
daa
mov
cwtl
test
imul
data16
mov
cmpsl
add
sub
inc
add
loope
movsl
adc
mov
pop
cs
push
mov
icebp
addr16
mulb
fwait
loopne
lret
pop
mov
lret
jmp
push
sbb
dec
or
cs
movsb
sbb
jle
cmp
mov
repnz
and
jecxz
inc
ljmp
mov
mov
aad
or
add
push
adc
xor
lcall
clc
pop
cmp
pop
in
data16
inc
or
in
sub
pop
pop
fnstenv
pop
sub
sub
mov
loop
loope
int3
mov
jno
mov
cmp
sbb
outsl
mov
fwait
jl
or
jle
add
jae
mov
sub
ret
mov
adc
mov
bound
sub
addr16
lret
dec
jo,pn
idiv
in
push
mov
jbe
andl
adc
push
loop
in
push
push
out
ja
adc
scas
sbbl
ss
pop
or
sub
sub
and
adc
or
xchg
imul
xchg
arpl
cmpb
inc
je
ljmp
divb
rol
lds
lret
icebp
fwait
les
pushf
data16
sub
and
lea
sub
mov
jnp
jae,pt
stos
insl
cs
cs
out
es
imul
fmul
push
cmp
repz
xchg
adc
sarl
dec
icebp
and
pushf
repz
inc
pop
jle
and
mov
fistl
addl
outsl
mov
es
mov
jbe
jecxz
cmp
add
incb
add
dec
icebp
xorl
mov
fsts
ds
nop
mov
das
cmp
mov
fwait
push
add
loope
lods
shll
popf
bound
mov
sbb
outsl
mov
xor
mov
mov
xor
stc
sahf
movsl
pushw
inc
adc
jl
sbb
xor
push
daa
lods
jmp
jp
add
je
scas
adc
mov
cmc
scas
stos
xorl
enter
loope
lea
cmpsb
cmp
icebp
sub
int
or
mov
popa
out
cld
ficompl
arpl
stos
inc
xchg
jo
add
fdivr
mov
mov
dec
ret
push
cmpsl
sbb
xchg
js
repnz
mov
and
rorl
loop
sub
test
ljmp
data16
loop
leave
adc
xlat
cld
shll
adc
ja
pop
test
cmpsb
push
in
mov
or
or
xchg
push
inc
dec
ret
xlat
test
rorb
cwtl
test
xor
ret
ss
dec
xchg
lcall
sub
fiadds
add
in
movsl
jle
mov
push
clc
and
fwait
clc
jno
mov
dec
clc
cltd
into
std
mov
inc
cmpsb
add
insl
and
and
jo
jle
jmp
and
jecxz
push
loope
adc
mov
pop
mov
add
out
add
lods
mov
into
je
mov
xchg
pop
cmp
sbb
adc
icebp
outsl
inc
jge
mov
ret
add
jns
ljmp
pop
lods
fucomi
ret
pop
mov
lock
mov
test
cmp
mov
dec
stc
daa
es
push
push
mov
lea
les
dec
outsl
nop
jno
xor
aam
jae
shl
push
addr16
push
xor
add
aaa
push
pop
adc
adc
xor
hlt
ss
mov
outsb
jmp
jge
mov
das
mov
xor
lcall
pusha
xor
mov
pop
test
fucompp
sbb
push
popa
int
adc
hlt
outsl
and
push
push
arpl
outsl
mov
movsb
mov
or
sahf
mov
mov
aad
jae
arpl
sub
jo
pop
adc
in
test
ja
stc
mov
lcall
mov
adc
cld
push
inc
into
or
test
mov
jmp
xor
xor
xchg
mov
dec
leave
mov
adc
out
es
jnp
or
or
sti
sbb
in
pop
xor
lcall
xor
cmp
push
bound
fldenv
into
xchg
clc
hlt
mov
mov
mov
xor
xchg
sub
pop
test
add
xor
dec
cmp
jae
frstor
int
testb
jge
shlb
rcrb
dec
imul
mov
xchg
enter
out
fdiv
lea
fs
rcrl
clc
adc
mov
fdivp
int
jbe
or
orl
mov
call
sbb
ret
mov
mov
mov
in
mov
int
dec
js
xchg
rclb
inc
js
mov
sarb
neg
out
and
test
lock
sub
xchg
test
sbb
push
repz
outsb
adc
push
dec
stos
ret
out
xor
and
push
push
xor
sbb
bound
mov
mov
pop
sub
jmp
mov
sub
mov
pop
hlt
sub
out
xchg
pop
cwtl
xchg
icebp
loope
cmp
imul
int
test
fbld
in
ret
adc
or
sub
inc
cwtl
pop
in
mov
mov
imul
jno
cs
cmp
mov
stc
cwtl
xchg
inc
mov
cmpsb
popa
dec
outsl
mov
repz
loope
mov
js
pop
and
in
xchg
sub
test
cmpsl
scas
push
sub
jp
mov
outsb
lcall
pop
sub
sub
dec
lock
pop
jne
movsl
aam
popf
shr
iret
adc
mov
int
bnd
mov
jnp
inc
push
pop
out
jmp
loop
xor
jge
add
push
outsl
jb
je
add
sbb
push
shll
loopne
insl
push
jecxz
das
insb
data16
cmp
cltd
sbbl
fnstsw
adc
and
repz
orb
mov
mov
ficoms
xchg
je
mov
pushl
or
push
xchg
mov
daa
xchg
inc
cmpsb
or
pop
xchg
leave
outsl
subb
scas
cmp
inc
add
cmpsb
cmp
mov
push
jge
or
hlt
dec
pop
push
les
in
push
inc
mov
enter
lahf
int3
fwait
call
xor
repnz
push
jnp
sbb
xor
xor
repnz
cld
or
dec
stos
jecxz
mov
lret
jle
push
outsb
jno
pop
push
xchg
mov
stos
sbb
or
ficomps
in
jmp
arpl
call
push
ljmp
mov
addb
jle
std
xor
sub
fisubrs
mov
stc
dec
mov
movb
outsl
and
lret
sub
jae
jbe
or
push
fistps
shll
shll
mov
faddp
fstpl
adc
push
lds
shlb
pop
sti
movsl
push
or
mov
test
pop
pop
dec
popf
in
pop
fmull
mov
mov
jae
arpl
jle
and
jno
mov
movsb
add
sub
stos
pop
shrl
dec
lock
jnp
insl
bound
out
cmp
addr16
add
outsb
imul
lret
cwtl
xchg
dec
addr16
iret
mov
ret
movsl
fs
xor
pop
add
test
std
lret
xor
outsl
sti
xchg
stc
pop
iret
mov
pusha
clc
xor
jb
dec
lds
mov
out
dec
daa
imul
clc
es
fstl
pop
push
vandnpd
adc
int
jmp
in
or
loope
sub
fisubrs
test
imul
int
add
push
pop
lock
xchg
bound
icebp
push
dec
mov
mov
rcll
fdivrl
sahf
pop
es
loopne
mov
xor
int3
xor
aad
sbb
or
sbb
push
mov
pop
sub
idivl
inc
add
lcall
lcall
xchg
xor
cwtl
sub
popa
xchg
pop
stos
into
fs
mov
lods
mov
pop
aaa
fsubrs
sti
push
out
in
test
xor
pushf
lcall
jecxz
scas
imul
mov
sbb
je
shlb
mov
into
jmp
sub
ljmp
outsb
push
push
jbe
push
or
dec
ret
popf
inc
movsb
cmp
cmpsl
stos
iret
imul
test
jge
testl
push
xchg
test
mov
xor
jb
xor
pop
hlt
xchg
inc
mov
add
sub
mov
mov
repz
mov
stos
ja
push
push
mov
pop
or
inc
fisttpl
mov
adc
bound
adc
pop
xchg
lods
cwtl
rol
rorl
jbe
jae
cltd
ja
and
fbld
je
ret
sub
inc
sbb
test
ret
xchg
movsb
sub
push
fstl
inc
cmp
aad
hlt
adc
mov
dec
shrb
jns
hlt
sub
jp
lock
mov
sahf
dec
fistpl
jbe
fwait
push
outsl
aas
test
into
xchg
jno
hlt
fnstenv
xchg
loope
mov
rcrl
push
mov
fildll
leave
aaa
scas
repz
pop
addr16
jne
or
cmpsl
push
or
mov
bound
cmp
dec
outsb
insb
stc
mov
repnz
sbb
out
mov
out
cmpsl
inc
sbb
adc
sbb
xchg
into
and
dec
cld
int3
xchg
inc
xchg
mov
xor
or
mov
mull
repz
nop
push
test
cltd
aas
dec
andl
mov
scas
orl
aad
or
js
mov
adc
or
pop
mov
mov
sbb
sbb
lods
icebp
push
dec
in
scas
sbb
cld
insl
lret
sahf
push
sub
lock
dec
and
adc
jbe
and
push
shrl
sbb
inc
data16
adc
pushf
sahf
adc
inc
and
fists
pop
aaa
xchg
mov
add
dec
push
mov
fistpll
in
push
mov
pop
sbb
jge
pop
and
lods
push
sbb
xchg
ficoml
mov
mov
ss
xlat
push
cmpl
jno
xchg
push
xor
stos
out
repnz
movsl
stos
shrb
mov
xchg
jbe
hlt
inc
sub
sahf
jecxz
sarb
pop
and
sahf
imul
pop
sbbb
sti
mov
outsl
pop
sahf
aas
aad
addr16
add
sbb
or
cmp
jmp
fcompl
subps
call
jg
ss
es
fs
mov
daa
loop
repz
daa
mov
pop
fs
jbe
scas
dec
sub
dec
sahf
mov
cmc
or
and
push
xor
enter
cli
sbb
xchg
xchg
pop
mov
push
ljmp
aaa
xchg
out
lahf
sbbl
stos
sub
mov
jno
mov
bound
mov
cmpsb
mov
repnz
bound
jns
mov
loop
addb
cmc
push
pop
pop
nop
inc
xchg
lea
dec
popa
in
mov
fcoms
sahf
or
insl
and
sub
nop
test
pop
jge
hlt
and
ds
push
ret
or
scas
aad
divl
xlat
jno
mov
fcomp
add
jmp
cmp
in
movsb
jae
jl
and
push
sub
movsb
sub
test
js
mov
jbe
arpl
aas
mov
inc
cmp
jge
or
mov
icebp
mov
inc
sbb
imul
jb
push
repnz
sub
les
mov
in
push
pop
mov
mov
sahf
movsl
lahf
insl
js
neg
xor
outsb
int3
lods
or
scas
pop
cli
adc
mov
pushw
pop
mov
jle
sahf
shl
jo
repz
jge
loopne
mov
jl
out
imul
xchg
clc
lods
pusha
inc
inc
lahf
dec
pop
or
pop
mov
mov
aaa
jle
mov
jg
sarb
inc
sub
cmp
mov
push
lret
idivl
cmp
test
xor
and
mov
jo
fiadds
jmp
and
push
push
enter
sti
iret
jp
arpl
imul
pushf
push
leave
dec
int3
pop
loope
imul
shlb
enter
cmp
lock
aad
pop
stc
xor
ret
dec
in
mov
xor
scas
in
sub
jno
std
shll
mov
rcr
popa
andps
push
rcl
pop
xchg
movsl
inc
inc
roll
ret
lcall
mov
pushf
call
lock
or
push
push
mov
cmp
jg
sub
jno
xor
lret
cmp
dec
in
adc
add
out
xchg
xor
cmpsb
divl
lcall
add
fcom
push
ja
adc
loopne
push
pop
test
sarb
jb
js
push
pop
and
mov
sbb
jae
fildl
mov
xor
and
or
stc
sub
scas
insb
jecxz
pop
fdivr
pop
or
cmp
popf
xor
mov
iret
dec
in
sub
jb
ja
rolb
stos
adc
mov
xor
loopne
adc
cmpl
and
and
imul
cld
repz
outsl
fwait
or
loopne
imulb
hlt
sti
fsub
jno
xchg
push
aam
call
and
inc
fsubs
push
cmp
inc
dec
pop
pop
dec
dec
insl
cmp
shlb
pop
out
mov
sbb
ja
fucomp
ja
sbb
inc
xchg
mov
mov
rorb
cmpsb
mov
out
movsb
mov
sti
add
ss
rcl
popa
pushf
jge
fisttpl
xor
cmpsl
dec
insb
imul
cmp
ss
movsl
js
popa
out
mov
mov
fucom
and
lret
dec
lahf
ljmp
rol
sar
pop
sub
adc
std
lea
int
mov
popf
jge
bound
pop
xor
push
add
fistl
pop
sti
xor
push
int
mov
adc
insb
cld
cmp
imul
insb
inc
sub
jmp
jecxz
mov
loope
sbb
xchg
fldl
inc
scas
xor
std
call
repnz
and
push
jg
std
shlb
mov
cmp
dec
sbb
jmp
in
inc
and
xchg
inc
or
mov
dec
cwtl
sbb
test
sbb
sarl
sbb
in
mov
ss
outsb
aas
push
loop
inc
faddl
pop
ja
mov
and
cmp
xor
movsl
add
daa
jle
arpl
xor
aam
aam
xchg
outsb
icebp
mov
or
scas
cmp
repz
icebp
add
jne
repz
das
mov
shlb
jle
mov
mov
pop
sbb
pop
mov
add
clc
icebp
jbe
inc
hlt
and
xchg
push
popf
adc
inc
leave
int3
dec
jge
sarb
fldl
xor
sub
mov
mov
into
push
xchg
pop
sbb
xchg
call
pushf
pop
aad
jno
aam
or
mov
dec
xor
sub
leave
push
loop
lock
xchg
mov
pop
sar
sub
mov
lods
sub
scas
fcmove
or
movsl
pop
jle
xchg
push
fsts
ljmp
aad
sbb
add
or
mov
inc
dec
ljmp
mov
mov
jno
sub
add
mov
insl
adc
stos
inc
xchg
jecxz
jbe
mov
jecxz
pop
out
adc
int3
add
xchg
and
imul
mov
mov
in
outsl
aaa
mov
call
aad
xchg
xchg
js
jo
shll
jg
pop
lret
lcall
xchg
outsb
mov
das
jnp
sub
mov
iret
adc
jecxz
mov
repz
mov
jns
cwtl
inc
pusha
popf
loopne
push
out
sahf
sbb
mov
mov
adc
add
out
out
rcll
ret
dec
stos
sbb
mov
add
cmp
cmpsl
out
je
aam
jae
cmp
cmpb
stos
ljmp
add
jne
lods
nop
lods
mov
bound
xchg
sub
mov
out
out
out
push
or
ret
mov
add
data16
sub
dec
test
mov
jl,pt
cli
scas
inc
aas
pusha
loop
out
xor
and
or
jl
ja
add
leave
push
xor
lock
fistps
mov
push
mov
mov
add
sti
popf
mov
push
or
inc
add
push
and
clc
push
jge
aaa
test
das
and
push
cmp
ljmp
push
iret
lods
xchg
ja
jl
jp
fsubs
sbb
roll
cmc
icebp
loope
fsubs
jl
xchg
test
imul
cmp
inc
out
shl
and
pusha
mov
xorb
dec
lods
add
push
je
pop
mov
mov
arpl
add
aad
outsb
jl
inc
mov
mov
int3
cld
xor
sub
cmpb
mov
mov
outsl
insl
mov
inc
cld
ret
sbb
mov
shr
mov
cltd
inc
xchg
mov
xchg
pop
dec
cmp
lods
ficoms
mov
addl
addr16
add
mov
int3
jmp
push
ret
enter
or
jmp
movsb
mov
fld
or
shlb
and
adcl
frstor
inc
mov
sbb
movsl
pop
sbb
out
mov
jp
mov
nop
jg
ss
repnz
cmpsb
out
or
fwait
and
and
add
sub
test
out
xchg
scas
outsl
dec
cli
add
pop
int
bound
test
int
jbe
jae
cltd
insl
cli
test
cmp
sub
subb
loop
pop
adc
mov
jp
fwait
and
jle
sbb
inc
shlb
fsubrs
sub
in
xchg
fs
inc
push
stos
ja
xchg
fwait
dec
xor
xorb
lret
sahf
xor
sub
loop
mov
xlat
mov
sbb
and
outsl
or
pop
mov
fildll
mov
clc
aam
mov
insb
sbb
popa
jnp
push
rcll
out
mov
mov
pop
fdivl
loop
andb
gs
cmpsb
lds
pop
int3
test
lret
jns
xor
call
lahf
cmp
arpl
cmp
ret
adc
add
mov
cmc
push
mov
pop
inc
pop
mov
jmp
sub
cli
fsts
cmp
add
push
and
inc
mov
cmp
mov
add
inc
dec
push
fisubs
je
sub
scas
xchg
lea
mov
mov
sbb
cmc
mov
or
pop
jge
in
roll
in
mov
push
push
cmp
or
mov
sbb
push
addb
xchg
loopne
xor
adc
cmpsl
mov
sarb
scas
es
xchg
test
mov
sbb
mov
scas
dec
aam
stos
add
repz
add
sbb
in
fdivp
daa
cmp
test
xchg
jnp
mov
imul
lea
add
incl
out
lcall
dec
and
stos
in
add
andb
fadds
aaa
and
mov
push
xchg
push
mov
jp
xchg
inc
jmp
jns
clc
sbb
xlat
jo
jne
data16
push
adc
jo
fs
repnz
jne
lret
icebp
mov
lahf
test
lods
popa
pop
ja
sbb
mov
lret
mov
sub
je
rolb
and
xchg
dec
lcall
or
xchg
mov
movsl
fidivs
scas
in
and
std
pop
mov
xchg
push
jbe
and
loop
xchg
repz
inc
es
into
xchg
dec
out
mov
push
fisttpl
cwtl
mov
inc
add
cmp
faddl
dec
test
fnstcw
add
or
popa
mov
test
pop
les
test
mov
imul
pop
push
enter
lahf
xor
and
fdivrs
inc
inc
push
in
push
xlat
or
pushf
in
test
dec
inc
xchg
sbb
mov
mov
sub
in
and
xor
xor
mov
mov
adc
insb
shlb
scas
jns
mov
call
dec
jge
xchg
sbb
gs
pop
sahf
popf
cmp
push
sbb
xor
fcmovnbe
std
inc
movb
cmc
inc
inc
sbb
adc
shrl
inc
xor
pushf
jns
aaa
mov
jb
fs
xchg
inc
movsb
or
xchg
mov
and
mov
or
xor
push
jns
repz
imul
test
cli
bound
push
popf
push
jbe
cmc
mov
push
outsl
fs
sbbl
sbb
jne
push
scas
mov
sub
dec
inc
adcb
add
push
inc
loope
aas
cvtpi2ps
adc
mov
fmuls
pop
stc
add
addl
mov
mov
inc
movsl
movntps
sbb
idiv
enter
xchg
lods
dec
adc
js
mov
sbb
adc
jle
push
xchg
xlat
push
ret
adc
xchg
lock
nop
out
adc
sahf
das
mov
jnp
clc
mov
cmp
mov
aaa
or
cmp
scas
inc
addr16
mov
pop
mov
xchg
jmp
imul
jbe
pushl
movsl
jle
push
cmp
bound
mov
pop
pop
xor
adc
add
pushf
shlb
xor
cld
mov
js
stos
mov
mov
and
inc
popf
int3
hlt
loop
test
xchg
and
cmpsb
in
pop
ror
dec
testl
ja
push
xor
dec
and
push
divb
in
dec
fistl
xchg
jns
add
int
fnstenv
push
sbb
into
shrb
jbe
sbb
gs
notb
pop
daa
or
inc
mov
movsl
dec
aas
push
bound
dec
pushf
ja
pop
sub
jle
test
push
lret
shll
clc
test
xchg
mov
sbb
fs
pushf
dec
inc
idivl
clc
stos
fdivrs
out
jmp
fwait
jno
adc
rolb
pushw
in
cmp
cmp
fwait
int3
jno
jg
jle
dec
or
push
insl
test
xchg
pusha
aaa
xchg
scas
pop
lock
jns
ja
addr16
int
inc
and
lcall
ret
inc
les
xor
sbb
mov
xchg
aas
xor
push
imul
daa
pop
inc
jl
out
insb
mov
in
es
popl
xchg
es
imul
push
pushf
out
add
in
pusha
in
sbb
and
mov
js
scas
cltd
sub
adc
cld
shlb
adc
jne
in
ja
pop
shrb
cmp
in
inc
adc
frstors
mov
adc
fnstsw
fwait
rep
cmpsl
mov
dec
scas
ja
cli
push
xchg
loop
fwait
push
lcall
fistl
das
add
in
shrl
call
sub
xchg
test
daa
dec
cmp
addr16
or
repz
pop
sub
in
mov
mov
push
adc
inc
imul
int
xor
dec
push
mov
and
adc
jle
xlat
sahf
add
sbb
inc
jmp
jb
out
push
sub
out
outsl
scas
and
aad
outsb
lds
lahf
repnz
xchg
sbb
movsl
sbb
xor
jno
pop
adc
sbbl
movsl
sbb
cld
and
faddl
push
xchg
nop
mov
jmp
adc
cs
lods
jp
fistl
lds
shrl
sub
cltd
std
sbb
add
daa
mov
sub
jnp
insb
test
cmc
loopne
push
push
dec
adc
stos
mov
imul
mov
dec
cmp
inc
loope
xlat
cmpsl
movsl
and
mov
loop
inc
ror
and
mov
leave
xchg
adc
es
jle
shll
mov
mov
pop
imul
lods
mov
push
xchg
inc
jo
sub
push
iret
cmpsb
xor
xchg
mov
lret
dec
scas
mov
outsb
mov
cltd
add
into
or
ja
int
xchg
dec
out
icebp
jecxz
leave
dec
mov
lock
fdivrs
lret
push
xchg
cmp
push
xchg
add
mov
jnp
mov
imul
xor
insb
aam
lcall
dec
les
xor
fdivr
lock
in
adc
callw
sub
inc
ret
cltd
bound
and
and
add
clc
les
in
lock
inc
and
cmpsl
inc
jl
popa
cmp
xlat
cmc
dec
out
jne
loop
pop
in
in
lods
cltd
data16
jno
sbb
jg
or
inc
adc
jmp
cs
loopne
mov
cmp
lds
lret
pop
hlt
aad
or
pusha
mov
je
das
pusha
add
daa
or
aaa
clc
icebp
inc
jne
ds
leave
mov
dec
push
test
shlb
lcall
orb
aaa
sahf
mov
cmp
cmp
daa
lods
inc
pop
mov
fs
and
addr16
lds
pop
or
mov
ljmp
je
aaa
pop
cmpsl
lcall
ret
or
je
insl
push
repz
je
fwait
adc
inc
roll
mov
ret
aas
mov
nop
sub
inc
adc
mov
dec
arpl
sub
pop
in
mov
cwtl
or
and
notl
out
xchg
mov
daa
scas
clc
and
dec
popf
xor
sbb
orps
mov
jo
outsb
ret
leave
jg
dec
sub
lahf
inc
jmp
out
arpl
pop
adc
cli
jb
or
push
add
into
push
dec
jmp
rolb
sti
xchg
push
scas
inc
out
and
mov
jmp
mov
test
mov
or
aad
jae
loopne
dec
mov
jbe
xchg
add
cmp
pop
inc
insb
iret
add
mov
inc
insl
dec
mov
lds
mov
les
iret
and
mov
fwait
insb
mov
int
repz
pop
testb
ficompl
lock
ljmp
add
dec
cmp
js
jae
ljmp
jmp
sti
ds
pop
js
add
push
xlat
mov
in
pushf
add
inc
or
int3
mov
fcomip
jge
pop
cmp
ljmp
sets
sub
mov
loopne
loop
stc
test
xchg
les
and
sub
ja
scas
push
lret
push
dec
push
shlb
xchg
add
mov
and
aaa
jmp
mov
popa
std
mov
pop
xor
or
notb
jl
stos
cmp
mov
inc
xchg
cmp
stos
inc
and
popf
mov
and
mov
outsl
adc
mov
stos
mov
or
push
cmpsl
gs
cmp
movsl
xchg
fdivrl
imul
jns
mov
push
cmpsl
sahf
xchg
mull
sbb
arpl
aam
cmpsl
pusha
scas
les
xchg
mov
rcrb
insl
pop
ret
gs
int3
pop
cmp
adc
fistpl
xor
movsl
fnstsw
dec
cmp
in
insb
inc
xor
inc
jns
dec
and
or
add
mov
scas
outsl
stos
mov
test
rcrb
lods
lock
popa
pushf
mov
jnp
inc
pop
add
test
in
and
jb
pop
les
ret
popf
test
inc
outsb
lock
ret
jge
push
mov
cmp
mov
movsb
pop
icebp
imul
cmp
add
lods
adc
fsubrs
and
adc
fildl
dec
cs
imul
test
int3
or
test
mov
xor
lods
sbb
lret
rol
andl
mov
sbb
and
jmp
lret
daa
mov
gs
mov
sahf
repnz
ljmp
cmpsb
sub
mov
cwtl
bound
lahf
add
lods
popa
jns
mov
pop
outsl
nop
and
lcall
lret
sbb
leave
es
dec
xlat
dec
adc
or
idivb
mov
lea
cmpsb
repz
mov
xchg
mov
xchg
loope
mov
ret
sahf
aam
push
cmp
mov
lds
xchg
or
arpl
sbbl
adc
mov
mov
cmpsl
mov
and
test
movsl
in
stos
jae
jg
repz
xor
movsb
xor
rcr
xor
lahf
jb
fdivrs
sarb
loope
ljmp
fcoml
stos
mov
rcrl
mov
daa
sbb
enter
loope
fdivrl
mov
push
xor
dec
je
fcoml
popa
mov
idiv
adc
pop
repnz
mov
or
or
mov
inc
lods
mov
sbbb
sub
aam
xchg
cltd
pop
je
ljmp
test
daa
jl
xor
lret
int
push
sbb
add
ret
pop
lcall
mov
mov
pop
clc
xor
outsl
cmp
sbb
lret
mov
call
jmp
inc
xchg
lret
inc
jns
dec
insb
movsb
inc
mov
cmc
rcrb
scas
add
lods
push
or
or
add
xchg
cmp
mov
nop
xchg
mov
insb
lcall
je
mov
negb
fmul
enter
mov
dec
inc
sbbl
sub
jmp
sub
push
sub
xor
push
aam
jbe
pop
lret
jl
popa
mov
mov
shll
arpl
mov
sbb
stc
add
push
mov
cltd
dec
pop
cmp
sbb
xor
movsb
mov
push
jle
xlat
popa
and
push
lahf
inc
jg
mov
sbbl
and
and
mov
xor
lcall
mov
dec
xlat
lret
dec
xor
jp
mov
dec
gs
sahf
mov
mov
mov
pop
mov
nop
mov
incb
js
dec
scas
inc
xorb
repnz
pop
push
xlat
fwait
addr16
pop
stos
scas
cs
xor
lods
aaa
push
pop
inc
cmpsl
sarl
jl
or
ret
mov
dec
pop
and
pop
add
mov
sbb
inc
fs
add
adc
icebp
andl
fs
sub
mov
or
js
and
mov
jg
push
or
pop
scas
std
mov
push
mov
insb
xchg
fistpl
test
cmp
int3
dec
mov
test
pop
cli
fsts
hlt
inc
mov
dec
dec
lods
loopne
mov
int3
mov
sub
test
dec
push
inc
js
mov
dec
ljmp
js
xchg
mov
inc
ljmp
aaa
test
aas
cli
xchg
ds
push
inc
mov
sub
mov
inc
xorb
mov
jno
mov
pop
pop
inc
xchg
dec
das
mov
rolb
cmc
negl
cltd
sbb
inc
fidivrl
adc
jne
std
pop
mov
incl
out
adc
es
sbb
clc
ds
and
rclb
sbb
push
xor
push
add
inc
or
sbb
sarl
dec
cmp
out
sbb
push
xchg
pushf
hlt
sbb
xor
cwtl
lahf
pushf
xor
sbb
leave
imul
into
and
sahf
mov
mov
jbe
loope
or
mov
in
cli
pop
frstpm(287
outsl
xlat
aas
mov
fwait
aas
mov
sar
cmc
push
fiaddl
sbb
jo
add
nop
dec
aad
lods
or
rcr
push
stos
push
mov
add
sub
or
movsb
nop
xchg
cld
imul
mov
cmpb
xchg
cs
mov
or
inc
nop
dec
fsubs
scas
or
in
daa
rcll
xchg
mov
sbb
mov
pop
test
inc
cmp
jae
jl
outsb
jge
pushf
jns
push
xchg
test
loop
test
add
adc
shlb
arpl
sub
or
les
inc
push
and
sub
arpl
cmp
cld
aad
and
repz
rcrl
sbb
out
inc
js
xchg
das
jo
idivl
daa
and
ss
and
xor
xchg
popa
fdivs
mov
jp
pop
xchg
sub
lea
push
mov
cmp
imul
pop
mov
aam
dec
test
and
xchg
ror
pop
and
adc
inc
pop
xor
or
les
pop
cmovbe
lds
rcll
push
xlat
cmp
and
call
inc
fldcw
pop
mov
adc
jo
les
out
fcmove
es
cmpsb
sbb
jne
jnp
pop
lods
or
cli
fwait
sub
cmc
add
pop
shll
repnz
iret
movsl
dec
sbb
pop
sub
imul
pop
mov
popf
jl
pop
inc
arpl
mov
adc
add
cli
aas
aam
dec
and
push
cmp
movsl
mov
xchg
add
mov
pop
test
xor
pop
xor
pop
icebp
hlt
ss
repnz
enter
idivw
pop
add
pop
jecxz
cli
jo
les
in
or
mov
nop
inc
cltd
out
inc
lret
jg
add
lods
pop
add
or
push
and
lea
jne
mov
sub
add
fdivrs
push
inc
adc
xor
jbe
arpl
lods
add
mov
lret
testb
push
push
mov
cmp
pop
ja
adc
sub
testl
cli
cmp
mov
xchg
das
sub
mov
mov
fstl
push
mov
xor
sbb
jmp
lret
clc
mov
call
lret
inc
add
pop
pushf
xor
popf
jmp
mov
shrl
icebp
bound
xchg
lock
sub
xlat
rcl
nop
jp
popa
jmp
nop
popa
add
es
mov
cmp
mov
inc
imul
ja
sbb
ret
std
push
add
jnp
fdivl
jle
mov
ret
xlat
sub
dec
and
jns
stos
leave
cmp
cs
lret
or
lret
test
and
into
inc
push
movsb
dec
or
flds
jns
mov
out
leave
inc
add
outsl
shlb
insl
imull
mov
cmovb
push
outsb
push
cli
sub
daa
lods
pop
cmp
scas
aad
xchg
cmc
in
sbb
out
sub
add
ljmp
call
sub
xor
sub
imulb
jne
push
xchg
out
in
cmp
xchg
sarb
icebp
fwait
nop
test
jns
pop
ret
mov
test
xor
pop
icebp
jge
mov
sub
push
pusha
xchg
adc
subl
push
aaa
xorb
jmp
adc
jmp
add
sbb
pushf
xchg
jb
xor
push
ret
sub
pop
and
xor
lahf
jmp
dec
addr16
and
ljmp
mov
push
ret
sbb
mov
sub
jp
negl
js
pop
outsb
sub
outsl
mov
test
iret
or
adc
mov
pop
push
ljmp
mov
sahf
pop
adc
xor
xor
cmp
jmp
mov
sub
and
mov
mov
cltd
jle
dec
mov
dec
pop
or
xchg
enter
arpl
pop
fidivrl
mov
cmp
mov
aad
loope
mov
stc
lea
mov
inc
imul
inc
js
and
int3
push
loopne
mov
incl
sahf
cltd
imul
sbb
cmp
aam
push
jno
ss
mov
or
mov
or
insl
out
fidivrl
cltd
or
fs
pop
add
test
xchg
dec
mov
xor
pop
push
adc
sub
hlt
add
or
test
xchg
imul
sbb
xchg
adc
popf
scas
push
xchg
sbb
pop
orb
mov
and
cmp
xor
sahf
pop
adc
adc
xlat
dec
in
pop
lock
mov
sbb
mov
loope
mov
movsb
sarb
dec
out
add
sarl
push
aaa
addb
in
aaa
cwtl
orb
xor
out
test
es
rorl
ljmp
xchg
xor
xchg
inc
test
je
fisttpll
test
sub
mov
bound
out
dec
inc
sbb
data16
movsb
xor
mov
lret
xchg
sbb
xchg
jns
pop
lods
push
inc
popf
jecxz
lcall
push
fwait
je
test
fldl
test
fsub
enter
fstps
mov
mov
add
mov
fs
call
loope
cmp
call
adc
mov
adc
cltd
push
fnsave
mov
outsb
repz
add
inc
cmp
xor
aam
andl
mov
fs
push
cli
cmpsl
int3
scas
dec
inc
lods
dec
je
jecxz
adc
inc
jg
ss
ds
add
cmpsl
aaa
pop
into
sahf
fidivs
xchg
jo
push
adc
loop
pushf
out
pop
mov
lock
push
insl
mov
push
mov
jmp
and
sahf
imull
jo
mov
sub
rolb
lds
mov
inc
cmpsb
or
push
test
dec
jle
pop
push
xchg
mov
pop
pop
xor
push
out
mov
mov
and
cmc
call
adc
lret
mov
xor
shrl
mov
or
icebp
dec
int
xlat
bound
sub
pop
add
dec
aaa
stc
or
mov
mov
movb
in
int
sbb
xchg
push
xorl
inc
push
add
xor
loop
xor
into
insb
sub
add
mov
imul
andl
mov
insb
ss
nop
and
mov
cmp
cmpsl
test
push
or
out
in
xchg
ss
call
and
or
mov
jno
fscale
mov
cmp
or
fcmovne
sbb
xor
jae
leave
test
enter
divb
fsubrs
loopne
add
adc
push
mov
add
mov
clc
xchg
aas
insb
shl
mov
out
scas
rcr
dec
mov
cwtl
jp
pop
loopne
mov
push
mov
enter
repnz
adc
xor
rcl
ja
sub
mov
or
aam
push
jle
sbb
ljmp
addl
cld
mov
call
int3
fistps
jnp
cmp
test
lds
int
aam
repz
and
cmpsl
inc
cmp
xchg
and
pop
xchg
icebp
adc
das
jo
sub
cmp
cmc
or
adc
pusha
das
ljmp
sub
add
and
pop
push
dec
rorb
test
stc
out
xchg
cmp
orb
xor
ja
out
addl
push
jg
es
data16
lea
mov
inc
xchg
xchg
push
mov
xchg
ret
dec
jp
jecxz
mov
xor
xchg
aaa
imul
sub
mov
sbb
mov
arpl
cld
lds
jne
sub
jno
outsb
insl
hlt
dec
sub
add
dec
les
mov
daa
jb
cmpsl
ljmp
ret
cmc
mov
jnp
cmp
mov
fdivrl
es
mulb
test
push
fidivl
mov
int
scas
xchg
xchg
cmpsl
pop
sbb
outsb
xlat
js
sti
jge
outsb
inc
push
ret
outsl
push
or
lret
add
adc
in
xchg
mov
xchg
aaa
adc
int3
lcall
sarb
pushf
iret
shll
fsubrp
loope
and
out
mov
orb
add
cmp
push
aam
jmp
sub
mov
xor
mov
subb
es
pand
outsb
iret
mov
sub
adcb
mov
pop
cmp
xchg
add
pushf
outsw
cmc
push
inc
in
jbe
stos
cmp
adc
fsubr
adc
cwtl
jg
fistpll
xor
loop
xor
mov
adc
sbbb
and
ret
jmp
scas
mov
mov
dec
mov
shll
fdivrl
ret
movsl
rep
mov
sub
aad
mov
pop
and
mov
jno
or
jno
std
inc
inc
jns
xchg
cld
mov
clc
ja
pop
leave
push
movsl
test
addr16
pop
out
and
xchg
inc
data16
mov
and
xorb
sub
fcoms
data16
pop
mov
sbb
lea
push
xchg
out
idiv
in
fstl
sahf
inc
data16
fistpl
in
and
and
xchg
mov
or
push
nop
adc
andb
pop
mov
push
mov
sub
xor
sub
push
pop
ja
call
or
pusha
and
sbb
ja
pop
shrl
cmp
iret
xor
xor
stos
mov
cmp
xchg
mov
pop
std
mov
fidivs
negl
adc
xchg
loope
ret
into
js
pusha
into
mov
push
push
outsb
xchg
mov
in
sub
xchg
cmp
mov
js
js
mov
iret
mov
and
mov
sub
push
fld
sbb
outsl
dec
daa
mov
pop
or
and
mov
cmpsb
xchg
xchg
adc
push
sti
push
pop
mov
rclb
mov
in
movsl
jp
or
jbe
mov
enter
inc
dec
nop
xchg
aas
add
out
jge
das
out
fistpl
cmc
fildl
popw
push
gs
pop
dec
sub
fildll
push
or
mov
pushl
jb
cld
sbb
fsubl
xor
jbe
push
dec
pop
dec
push
fsts
aas
insb
adc
ds
movsb
jo
imul
icebp
cmp
lods
pop
sub
cmc
xchg
cld
mov
add
sahf
dec
inc
popa
aad
pusha
jp
mov
cld
xchg
sbb
mov
int
ds
inc
sub
xor
and
pop
adc
insl
imul
xchg
mov
sub
pop
scas
jae
int3
mov
stc
adc
lock
les
data16
inc
jbe
insb
dec
adc
dec
lds
mov
cltd
push
popa
test
adc
xchg
fidivrs
test
sbb
jne
stos
jae
dec
lcall
bound
cld
or
mov
push
mov
inc
aaa
fsubrs
inc
cltd
or
push
mov
sbb
pop
movsl
xor
ja
fs
dec
lea
fs
sbb
and
xchg
addr16
and
sbb
mov
outsb
push
xchg
xchg
push
lock
fistps
ret
sbb
lret
xchg
xor
insb
test
push
loopne
js
jae
adc
or
inc
sbb
pop
sbb
jge
popf
mov
sbb
fadds
inc
push
fdiv
pop
pop
xchg
jb
js
xorb
fistps
pop
rsm
call
sub
mov
mov
inc
scas
std
in
pushf
or
sub
xor
mov
sub
cmpsb
sbb
lods
xlat
test
sbb
out
jle
cwtl
movsl
dec
loope
test
fsubrs
rcl
pop
scas
insb
or
push
xor
call
pop
mov
xchg
xchg
out
push
xor
add
lret
push
pusha
out
xlat
shll
xor
sahf
inc
movsl
stos
and
nop
sub
lcall
je
add
movsl
or
out
sub
xor
cli
mov
inc
mov
cltd
push
int3
xchg
cmpsl
add
stc
fld
and
test
mov
mov
icebp
dec
repnz
dec
lahf
test
add
fbstp
push
outsl
sub
inc
xchg
jae
adc
fwait
mov
mov
sbb
adc
pop
or
cmp
nop/reserved
mov
mov
inc
call
sub
shll
mov
dec
ror
rcll
je
cmp
push
push
xor
rol
pop
arpl
dec
stos
lods
add
addr16
dec
insb
rol
clc
outsl
xchg
mov
pop
push
stos
outsb
or
movsl
mov
sbb
xchg
pop
cmp
stos
addr16
xor
mov
jl
ja
stc
cmpsl
mov
dec
mov
mov
je
jo
mov
and
fsubrs
cmp
data16
daa
outsl
inc
xlat
push
adc
jmp
loop
add
add
call
lret
push
aam
sbb
mov
push
mov
sbb
or
jp
dec
lahf
push
sbb
aam
jp
pop
js
lods
insl
in
and
shrl
das
xchg
loop
mov
mov
jno
ret
in
mov
mov
mov
inc
or
loopne
pop
aad
push
pop
mov
jmp
iret
jmp
and
scas
orb
mov
xor
outsl
sub
xchg
popf
jno
add
cmpsb
je
xchg
inc
stc
stos
mov
aaa
and
jb
mov
push
jo
aaa
mov
pop
jne
push
cli
pop
ja
jge
cmc
mov
pop
cli
daa
lcall
xchg
lods
jl
adc
xlat
les
sub
mov
push
call
aad
faddp
mov
jle
mov
icebp
dec
adc
sub
push
sub
insl
sbb
add
inc
leave
sub
inc
sbb
and
jle
jle,pn
or
jle
jge
jbe
outsb
push
fwait
push
sahf
dec
or
jmpw
mov
cmpsl
scas
adcb
daa
mov
repz
jmp
inc
push
and
fbld
pop
add
inc
ror
leave
mov
mov
jecxz
stos
aas
or
popa
repz
pop
loop
lret
mov
cwtl
rep
or
test
and
call
pop
fs
pop
mov
pop
test
fsubrs
add
ret
gs
mov
ljmp
adc
fucomp
inc
gs
push
cltd
out
add
fwait
lods
cmp
adc
in
mov
xor
jne
nop
fwait
mov
inc
mov
outsb
pop
test
lahf
jnp
lcall
sub
or
inc
stos
adc
mov
adc
inc
pop
testb
xor
inc
out
mov
hlt
stos
lret
jno
lods
cmp
push
and
or
pop
rcll
orl
cmpb
call
rcr
hlt
mov
adcb
dec
mov
inc
ret
lods
fwait
xchg
mov
pushf
mov
push
adc
dec
cs
jg
xchg
out
cmp
sbb
pop
push
add
bound
daa
mov
pop
repz
and
mov
shl
das
lock
sbb
scas
inc
int
icebp
xor
pop
std
call
jle
mov
mov
test
push
xchg
pushf
in
out
xchg
stos
jno
and
repnz
pop
lcall
fdivrl
sub
push
pusha
inc
nop
cmpxchg
fsts
sbb
mov
xchg
push
out
hlt
test
inc
sub
mov
xor
cmp
push
xchg
xor
es
mov
add
in
loope
adc
and
fldenv
xchg
mov
rclb
rcll
mov
test
xchg
movsb
pop
xor
or
cmpsl
push
push
xchg
pushf
inc
xchg
enter
pop
xchg
addr16
ret
lds
movsb
jge
pop
add
jae
cmpsl
aaa
stc
pop
mov
gs
pop
dec
dec
loop
push
scas
pop
cmpsl
xchg
push
pop
xor
and
mov
mov
jmp
adc
sub
jecxz
add
cmc
std
add
mov
inc
sbb
nop
sub
mov
sbb
mov
gs
push
cmpsb
add
je
addl
out
pushf
or
inc
icebp
popa
test
push
push
filds
mov
seto
ljmp
mov
or
loopne,pt
subb
js
or
sti
lock
push
mov
xchg
pop
sub
xor
mov
mov
fwait
outsl
inc
add
pop
mov
jbe
jmp
outsl
ss
xor
mov
jl
adc
loope
shrb
out
xorl
sbb
xchg
lret
push
loop
loopne
mov
scas
mov
cmp
sub
outsb
dec
or
mov
mov
mov
or
fwait
jecxz
xlat
mov
or
push
dec
mov
fdivl
and
mov
push
pop
adc
ret
mov
jmp
loope
pop
dec
gs
lcall
xchg
pushl
push
pop
add
or
cmpsb
lock
xlat
inc
jg
xchg
jno
add
mov
int
pop
mov
fstpl
dec
push
test
adcl
outsb
dec
scas
jns
out
inc
into
push
xchg
push
cld
cwtl
cmp
data16
jo
fistpll
sbb
mov
jp
insb
stc
push
int3
xchg
mov
xlat
inc
mov
icebp
dec
cmp
ret
inc
mov
popf
dec
inc
cld
xor
inc
ret
in
mov
dec
out
notl
dec
rclb
xchg
xchg
sbb
in
adc
sub
and
xchg
pop
sarb
jecxz
xorl
jae
cltd
mov
aam
dec
leave
in
sbb
addr16
add
mov
xor
adc
roll
push
out
mov
push
test
or
cmpsl
into
adc
pop
mov
ja
mov
daa
push
adc
jb
subl
lods
imul
sub
sti
hlt
xchg
sbb
stos
or
enter
dec
icebp
pop
inc
cmp
xchg
jbe
dec
sbb
fwait
jge
or
mov
and
imul
cmp
mov
pop
adc
mov
push
ret
and
pop
mov
xchg
push
mov
jecxz
add
push
daa
adc
push
push
cmp
rcl
stos
xor
jecxz
mov
gs
jmp
fistl
sbb
shr
aad
mov
aad
xor
jnp
aam
icebp
icebp
int3
push
sahf
sti
mov
insb
push
pushl
push
push
pop
lea
test
cmpsb
fcompl
and
subb
or
movhps
lods
mov
pop
jb
out
clc
aas
sbb
test
jbe
xchg
imul
ret
xlat
hlt
push
faddl
dec
daa
stos
out
mov
xchg
test
jle
push
push
int
jmp
mov
xchg
ret
gs
cmp
sub
mov
xor
in
mov
xchg
nop
out
xor
arpl
dec
jno
jmp
inc
lods
sub
fstps
cli
xorb
js
jecxz
loop
pop
ret
sub
push
push
jecxz
mov
test
and
test
lods
xchg
sbb
out
call
das
fs
in
jl
fwait
cmp
cmp
jne,pn
mov
inc
ljmp
addb
xchg
adc
sub
fstpl
int3
testb
cmc
test
xor
mov
ror
xchg
xchg
and
sbb
sbb
testb
cmp
jnp
and
sub
xchg
push
stos
mov
aad
inc
dec
fsubs
adc
push
cmpsb
sahf
mov
xchg
ficoml
lods
test
mov
mov
loope
pop
pop
aaa
xlat
and
mov
jns
call
cmp
push
xor
jp
add
sub
ret
push
sarb
in
xchg
cld
or
jg
push
or
cmc
mov
push
iret
push
js
fisttps
jmp
popa
lods
in
xor
arpl
dec
xchg
int3
pop
dec
add
mov
in
cmp
test
pusha
pop
jns
mov
dec
cmpsl
xchg
rclb
jg
fists
shlb
fisubrl
push
and
add
xchg
mov
and
jmp
leave
pop
sub
mov
pop
fbstp
std
jl
push
leave
loopne
jp
add
mov
stc
ljmp
ret
mov
adc
andb
int
repz
rcrb
fs
sub
mov
fdivp
cwtl
xor
pushw
out
jae
sbb
or
lahf
mov
inc
jecxz
aam
add
popf
cs
sub
sbb
cmc
repz
push
repz
sti
mov
fiaddl
clc
xlat
jne
loope
es
lahf
sbb
xor
jne
xor
outsl
or
adc
fisubrl
test
jmp
mov
push
pop
xchg
fcoms
inc
or
cwtl
inc
and
aas
pop
ds
arpl
in
shlb
lods
pushf
jl
test
inc
sub
dec
leave
addr16
out
cmpsb
pushf
add
jmp
mov
adc
mov
cmpsl
and
imul
bound
pop
push
cltd
pop
pop
push
into
or
lea
pop
lahf
and
jns
or
or
adc
mov
lret
lods
jl,pn
scas
mov
lock
fcmovnbe
negl
rorl
sub
ret
inc
xlat
lcall
mov
or
sbb
dec
sub
ficoml
sti
and
lret
shr
mov
lods
inc
inc
int3
dec
das
and
mov
push
push
imull
loopne
negl
or
push
or
scas
data16
out
ret
outsl
addb
and
aaa
std
dec
div
pop
mulb
fiadds
xor
lods
jl
fstps
fwait
push
pop
and
pop
sub
mov
add
pop
xchg
dec
sbb
mov
sbb
push
xor
movsb
sbb
xchg
adc
nop
leave
pop
add
sar
insb
or
loopne
mov
jb
or
repz
ret
arpl
dec
push
sbb
or
lret
mov
ret
outsb
gs
or
add
loop
sbb
hlt
and
mov
jbe
fcmove
test
sub
cli
push
and
das
jmp
fisubrs
mov
add
sbb
lods
imul
dec
aad
loopne
scas
cmp
shl
lret
jle
loope
jnp
push
push
sub
loop
or
jno
sti
imul
pop
call
movsl
xchg
cwtl
cs
jne
sub
dec
cmp
jl
pop
fcoms
in
cmp
jp
cmp
pop
adc
lcall
arpl
add
int
stc
push
mov
add
daa
inc
pusha
and
xlat
ss
test
mov
sbb
xor
scas
cmp
das
pop
mov
inc
dec
jp
mov
push
pop
test
sbb
es
xor
ljmp
fs
xor
add
and
das
inc
pushf
push
je
call
mov
iret
mov
cmpl
adc
out
jbe
ss
inc
or
inc
lods
lds
xchg
mov
pusha
mov
push
addr16
stos
mov
inc
jne
add
scas
push
inc
push
dec
shll
and
sbb
js
outsb
dec
lea
inc
mov
pop
sbb
mov
push
mov
lods
inc
xchg
jecxz
lock
out
cmp
lods
xor
jmp
jno
in
mov
jb
cmpsb
mov
pop
cmp
aam
sub
leave
mov
pop
cli
sbb
cs
pop
jne
mov
sbb
popa
stc
pop
push
add
push
or
shl
and
push
inc
xchg
repnz
loop
out
enter
sbb
jnp
pop
sbb
das
test
mov
enter
xor
sarb
and
and
imul
sub
jnp
iret
push
divb
cmpsl
ljmp
hlt
jae
nop
mov
inc
movsl
sub
pop
shll
insb
push
decb
ja
mov
cmp
lahf
sub
and
jno
scas
mov
push
jne
fisubrs
aaa
adc
cld
int
ljmp
lcall
adc
sbb
jmp
jae
pushf
ficoml
sub
mov
ja
fst
inc
xorl
shrb
insl
xchg
sahf
fsubrl
ficoml
lock
inc
jne
or
es
inc
cli
inc
into
out
sahf
xchg
push
addr16
ljmp
ficoms
mov
jb
pop
gs
mov
jle
xor
sbb
pop
xor
sub
stos
test
jnp
push
push
ret
lock
xor
push
push
mov
xor
sbb
shlb
pop
daa
in
push
cli
xchg
add
mov
pop
xchg
and
in
out
test
mov
das
pop
jno
push
or
add
xorb
dec
movsb
lret
in
movsb
stc
xor
mov
out
dec
jmp
pop
and
aaa
jne
xchg
pop
pop
and
addr16
js
jns
scas
jmp
movsl
repnz
cwtl
and
lret
jge
mov
xchg
and
dec
jg
test
mov
mov
in
lea
xchg
fwait
nop
fbld
cmpsb
dec
push
jecxz
into
cmp
mov
xchg
mov
adcl
into
or
rol
mov
lcall
inc
mov
jl
mov
aad
fcmove
and
pop
mov
stc
lds
mov
xchg
popa
lret
ss
cld
xor
mov
das
mov
shrl
fwait
scas
jne
xchg
test
adc
sub
cmpsl
pushf
push
cmpb
mov
sub
adc
push
inc
in
popf
ficoml
test
rorb
jae
xchg
mov
cmp
or
insb
enter
pop
lahf
sub
jecxz
fbld
out
sub
sbb
gs
jecxz
fadd
jo
jno
loopne
inc
xchg
in
mov
pop
stos
push
jge
and
push
cwtl
mov
outsl
loopne
fdivs
imul
pushf
dec
aad
pop
cld
adcb
rcll
mov
out
adc
mov
pcmpeqw
xchg
pop
fst
mov
and
mov
out
xchg
jmp
stc
jno
cld
mov
outsb
mov
push
jmp
fldenv
pop
xchg
addl
les
aas
out
push
mov
icebp
rsm
adc
aad
lret
adc
pop
pop
jge
pushf
sub
adcl
cli
inc
push
lcall
test
push
mov
adc
sub
push
hlt
iret
in
scas
std
or
outsl
fcoml
xlat
vmread
mov
mov
push
and
pusha
addr16
push
pop
int
xor
ss
sbb
pop
incb
xchg
dec
xor
daa
inc
pop
out
mov
stos
int
mov
sbb
mov
lea
sbb
jecxz
jp
icebp
popf
loop
sbb
mov
push
test
shl
push
lret
jbe
aam
movsl
fs
or
loop
imul
jae
sahf
call
pushf
inc
jnp
pop
aam
js
fcoms
push
mov
mov
repz
push
jg
jle
jl
adc
pop
popf
dec
jl
lods
pop
and
dec
fldenv
aam
pop
sbb
icebp
loope
or
lods
aad
jecxz
mov
push
cld
in
adc
fwait
sub
and
data16
xor
test
and
push
aad
push
mov
sbb
dec
or
test
mov
sub
pop
push
add
jmp
out
pop
insb
pop
test
mov
or
push
mov
and
xor
stos
js
mov
lds
pop
jl
adc
ss
insl
daa
mov
dec
pop
daa
in
ss
fxch
fwait
xchg
cmp
sbb
cltd
mov
ret
dec
cli
jmp
push
cmpsb
jne
sbb
pop
push
imul
inc
or
pop
jecxz
lret
sub
adc
aad
jno
out
scas
mov
jne
frstor
mov
loope
lods
dec
lea
arpl
push
jp
insb
sbb
dec
shrl
pop
dec
clc
sahf
out
sbb
fiadds
mov
ss
jecxz
pop
sahf
call
les
ret
xchg
lock
shll
fs
xorl
rclb
cmpsb
lods
aad
invd
fs
movsl
inc
mov
push
dec
push
push
sbb
aas
shlb
lods
pusha
adc
scas
es
lea
pop
repnz
jae
adc
insb
lds
mov
ss
lret
mov
test
cwtl
xchg
dec
adc
shll
sub
jne
xor
repnz
ror
sub
in
or
adc
cmovnp
or
lret
sbb
mov
sub
outsb
xor
nop
cmp
gs
movb
popa
dec
gs
jb
and
ret
aad
lcall
stos
jb
fdivrl
add
es
mov
les
sub
movsb
inc
push
mov
mov
xor
mov
pop
xor
or
and
shrl
fdivrl
xor
popf
cmpsb
mov
and
push
or
mov
in
push
inc
fwait
aam
cmp
add
ja
xor
jns
lods
fsubl
xor
sub
inc
test
mov
data16
mov
jb
sarb
xor
mov
sbb
mov
subb
inc
dec
fisubrs
xor
or
je
pop
xor
xor
outsb
mov
and
addr16
dec
mov
dec
jle
repz
dec
sbbw
jb
pop
xchg
push
xchg
mov
in
int3
lcall
jo
fwait
xor
in
cmpsb
sbb
lods
jno
xor
jne
fmulp
inc
lods
push
jp
cmp
lods
pop
push
xchg
fidivs
xor
add
mov
test
ret
xchg
jo
sub
clc
pop
ds
push
sub
lret
sub
mov
sahf
pop
sub
jns
icebp
adc
xchg
in
cmp
and
mov
mov
das
push
orl
stos
ds
pop
add
pop
jmp
adc
bound
dec
mov
mov
cmp
lock
in
and
or
or
lock
cs
sar
repnz
shlb
or
xlat
mov
lcall
and
xor
jmp
jl
cwtl
push
insl
mov
push
sbb
cmpsb
mov
jmp
fsubr
adc
pop
jmp
mov
rcrl
or
xlat
pushf
test
nop
pop
sub
mov
or
xchg
cltd
push
inc
cltd
lret
inc
mov
dec
push
aaa
xchg
loop
mov
loopne
sbb
mov
pop
add
sbb
iret
orl
aaa
xchg
xchg
xorl
and
int
push
imul
xor
cltd
pop
jmp
mov
fwait
lcall
and
lds
push
in
dec
jbe
mov
paddq
movl
jo
es
sub
fs
xor
in
dec
notb
fsubrs
pop
lds
jo
and
shrb
sub
ret
andb
xchg
shl
cmp
lea
adc
cltd
push
inc
popf
cltd
xchg
ss
xor
out
cli
xor
mov
movsl
fadd
cld
cli
mov
movsl
pop
mov
dec
fists
hlt
nop
bound
gs
mov
jae
inc
out
mov
testb
lods
nop
mov
sahf
mov
mov
mov
pop
jg
fcmovne
xchg
movsl
rolb
data16
cltd
mov
test
dec
int
add
das
lahf
mov
lds
mov
movsb
nop
testb
and
insl
pop
xchg
mov
pop
fildl
add
je
aad
test
jmp
ret
bound
cmp
push
stc
ja
mov
mov
fstps
sub
shl
fistpl
movb
add
push
bound
dec
outsl
sub
pop
ret
mov
push
xor
sub
pop
lcall
dec
pop
lock
xchg
lock
pop
xchg
imul
mov
mov
inc
cmp
push
rcrl
stos
mov
dec
add
je
sub
pop
push
push
arpl
push
arpl
cmp
inc
ljmp
mov
cli
or
outsb
jbe
mov
popa
insb
cmpl
and
jo
es
lods
std
mov
mov
mov
cld
and
shll
js
int
push
ljmp
dec
call
aad
mov
or
in
mov
in
data16
jae
mov
xor
fsqrt
push
jg
mov
pop
inc
push
lret
or
jg,pn
outsl
mov
sbb
xor
cmpsb
adc
jg
cmp
lret
adc
bswap
fimull
xchg
popa
lret
in
jo
mov
sub
std
fidivrs
test
mov
popf
pop
and
sub
xchg
adc
adc
inc
into
sub
pop
lods
push
repz
dec
out
outsb
jecxz
sahf
or
nop
sahf
dec
or
mov
test
stos
pop
mov
loope
or
xor
clc
out
arpl
pop
lods
sbb
divl
dec
ss
divl
out
jl
adc
int3
in
shll
rclb
dec
lret
mov
xor
sbb
dec
mov
loopne
sahf
mov
addb
loope
or
insb
pop
outsl
pop
lahf
lock
adc
iret
pop
cmp
or
jp
jb
cmp
cmp
fidivrl
ja
fs
pop
shll
ret
loop
cld
mov
lock
mov
jbe
mov
dec
xchg
mov
es
or
js
popf
into
pop
mov
fimull
xchg
push
test
mov
je
fnstcw
mov
js
adc
enter
icebp
lods
test
mov
leave
dec
mov
aaa
mov
mov
fldenv
add
in
cs
outsl
push
adc
cli
icebp
rolb
scas
mov
cmp
jno
add
lcall
andl
fwait
popa
idivl
testl
into
in
mov
cmp
pop
xchg
lods
mov
mov
mov
mov
in
jmp
fadd
insl
outsb
xor
inc
lcall
push
mov
push
fcomps
sbb
add
addl
enter
push
lahf
or
inc
cmp
cmp
inc
test
faddl
inc
enter
shlb
ljmp
gs
pextrw
mov
call
fcompl
sub
adc
cmp
fildl
jae
adc
pop
jg
dec
push
mov
add
push
mov
add
mov
adc
ljmp
adc
and
mov
jne
ljmp
imul
push
mov
enter
xchg
pop
inc
cmp
sbb
and
push
jge
cld
out
test
gs
imul
fsubr
test
mov
jne
out
test
push
hlt
jmp
sbb
mov
jle
pop
sub
in
sbb
loop
dec
cs
dec
mov
outsb
mov
enter
call
mov
mov
movsb
mov
fcomi
sbb
jb
iret
test
cmpsl
xor
sarl
mov
inc
popa
aas
pop
mov
add
fldl
fimull
lods
jg
in
inc
adc
or
fistpl
pop
cmp
jg
jbe
addr16
ret
mov
push
add
stos
adc
add
and
sub
dec
pop
cmpsl
push
jne
push
jl
pop
pushf
aad
mov
and
out
pop
push
cld
jg
or
sbb
fistpll
bt
cmp
jae
sbb
in
and
lahf
pop
xchg
cmc
mov
les
lock
mov
scas
pop
outsl
jnp
or
xlat
xor
add
and
cmp
dec
or
enter
daa
and
lds
out
inc
push
inc
out
mov
xorl
mov
fwait
andl
cmp
add
mov
addl
xchg
in
push
mov
jp
mov
mov
add
pop
inc
pop
fcoms
push
shlb
sbb
cli
mov
mov
mov
stos
xchg
cld
mov
mov
rcr
sub
bound
insl
or
rol
stos
mov
insl
adc
ljmp
adc
cmp
cs
ss
and
loopne
xchg
push
repnz
aas
adc
int3
push
sub
add
fwait
lock
xor
or
jl
call
cmpsl
jbe
sub
add
stc
dec
dec
aas
fsts
dec
imul
in
add
out
pop
in
outsb
cmpsb
pop
call
subl
jnp
jnp
adc
dec
outsl
mov
out
leave
loope
jle
jecxz
xchg
addb
push
xchg
js
lret
popa
mov
jb,pt
cwtl
das
rclb
mov
ret
cmp
add
loop
jl
cmp
aam
xchg
pslld
or
stos
addr16
jno
pop
fsubs
mov
fsubp
imulb
scas
add
fists
inc
arpl
js
dec
dec
jns
out
repz
pop
cmp
jns
test
mov
adc
xor
xor
push
mov
inc
and
adc
lods
sahf
push
popf
scas
mov
testb
movsb
sbb
mov
mov
bound
push
push
and
lahf
push
dec
out
push
push
mov
adc
outsb
or
cmpsb
inc
xor
pop
xlat
adc
fildl
or
mov
add
rcll
xor
test
mov
in
adc
loope
pop
push
xor
sbb
sahf
xor
int
or
shl
outsb
push
fsubrp
int
jo
add
mov
lods
out
mov
fwait
in
xor
dec
dec
push
xor
pop
ljmp
rcr
or
outsl
push
inc
stos
push
pop
mov
xchg
in
inc
sbb
adc
jb
xchg
or
mov
pop
mov
rorb
cmp
divb
lcall
sahf
dec
call
ret
mov
aas
fld1
pop
jp
dec
es
jne
inc
lahf
inc
xchg
add
test
or
add
or
or
and
ljmp
mov
and
fucomip
fndisi(8087
call
sub
xlat
lret
pushf
icebp
mov
and
andb
mov
mov
aad
jne
inc
or
jno
mov
xchg
jae
iret
lahf
mov
xchg
mov
outsl
lods
mov
xor
xchg
xor
xor
sbb
sbb
mov
loope
mov
sbb
mov
ja
cmp
pusha
xchg
pop
mov
dec
in
dec
pop
sbb
push
fs
lcall
sbb
xor
out
hlt
outsb
cmp
movsb
leave
mov
gs
or
inc
mov
mov
pop
mov
test
shll
push
dec
fstpt
inc
mov
cmp
fmulp
jp
pop
aam
mov
sub
ds
push
test
sub
outsl
and
rol
mov
mov
mov
sub
mov
push
movups
mov
repnz
push
inc
xlat
mov
inc
add
mov
xor
mov
push
sbb
lea
xor
out
cmp
subb
movsb
pop
pop
jge
sub
lret
mov
mov
addl
or
and
lcall
adcb
xor
aad
mov
or
dec
subb
js
enter
jmp
push
jae
sub
dec
inc
movsl
xchg
mulb
mov
nop
nop
mov
cmp
and
pop
in
call
push
les
add
mov
fprem1
and
mov
aam
dec
mov
cmp
cmp
iret
fs
or
mov
inc
js
lock
popf
pop
ret
into
or
hlt
arpl
xor
jno
pop
mov
aam
mov
cmp
cmp
dec
mov
push
sbb
or
stos
fs
mov
push
into
bnd
js
pop
xor
mov
dec
lds
adc
mov
out
push
cmp
mov
lea
mov
out
xchg
pop
aaa
andl
push
push
pop
sar
lods
shlb
pop
cwtl
mov
cltd
adc
ja
pusha
dec
dec
lods
repz
int
repz
ds
in
lret
es
jae
fwait
cmp
or
aam
xchg
pop
jae
xchg
cmp
mov
push
mov
pushf
inc
jmp
stc
out
cmp
jo
lcall
pusha
pop
cmp
das
in
scas
mov
sub
nop
std
mov
adc
lahf
mov
cli
jge
mov
jb
lcall
push
xlat
push
stos
dec
sahf
or
cmpsl
ljmp
ljmp
mov
pushf
jle
pop
xor
inc
mov
fdiv
pop
stos
or
dec
jg
out
pop
nop
aaa
sbb
inc
lea
repnz
popf
scas
mov
mov
fs
cmp
pop
add
inc
mov
sub
sbb
aas
or
loopne
inc
pop
in
jno
insl
mov
cmp
neg
pusha
dec
cld
sub
adc
aaa
xchg
negl
cmp
imul
js
stos
inc
pop
pop
push
adc
mov
pop
inc
lds
push
xor
fsubs
sub
icebp
push
pop
lcall
iret
test
adc
mov
aas
iret
jmp
les
in
out
xchg
xor
or
dec
or
fsubrs
movsl
mov
dec
mov
cs
adc
and
cmpsb
sbb
add
mov
push
cld
inc
jecxz
add
jge
or
cmp
ret
push
inc
mov
mov
std
scas
sub
test
imulb
cmp
aam
out
sub
lret
add
fmull
sbb
jb
cmp
pop
inc
mov
aam
adc
adc
jns
mov
push
mov
les
vmulps
add
fdivrl
push
aaa
inc
ret
pop
xor
push
pop
cmp
dec
cwtl
lds
jbe
test
xchg
imul
enter
loopne
fidivl
mov
roll
mov
rolb
add
lods
int
cmp
cli
mov
lods
outsl
movsb
xchg
jl
fmull
add
pop
ljmp
or
mov
xchg
or
mov
aaa
call
xchg
lea
lods
into
in
mov
sbb
pop
lock
repz
pop
pop
push
inc
pop
xor
fadd
lahf
inc
aas
bound
adc
scas
adc
cld
mov
scas
xchg
into
and
sahf
std
cmc
xchg
andl
cmpsb
push
mov
shrl
nop
and
push
data16
add
cmp
cmp
push
fcoms
push
xchg
dec
xchg
mulb
jns
or
push
js
add
es
std
jo
fsts
add
scas
iret
test
loop
sarb
jg
mov
mov
dec
scas
arpl
sbb
jmp
popf
into
pop
sarl
mov
div
outsb
sub
cmc
push
jp
daa
push
pop
loopne
aas
mov
sets
loop
xchg
jmp
inc
sbb
dec
int
xchg
das
mov
loope
aad
lret
in
mov
pop
fidivrl
and
outsb
fstpl
add
add
ljmp
mov
mov
into
jl
scas
and
cmp
fs
lahf
out
xchg
xor
movsl
lea
popf
sbb
jae
sbb
rorl
sub
and
push
push
or
jne
inc
cs
bound
leave
call
stos
mov
cmp
sbb
ds
push
in
cmp
fs
mov
test
test
adc
flds
les
jne
jp
push
mov
imulb
push
jmp
shl
push
pop
adc
push
fwait
mulb
int
jle
popf
jb
jbe
ljmp
sahf
cs
add
pop
testl
call
mov
lret
fistps
mov
or
shll
jl
inc
push
inc
sahf
mov
rolb
jp
fsubrl
jmp
and
pop
call
mov
setl
loop
add
fsubs
aas
mov
ljmp
lahf
adc
into
mov
push
push
mov
insl
fwait
xchg
xchg
mov
adc
xor
pop
xor
mov
jo
mov
pushf
pcmpeqd
or
call
mov
mov
pop
mov
out
push
nop
sub
push
mov
fstl
jnp
push
pusha
xorl
ds
mov
scas
aad
dec
fucomi
cmp
lret
movsb
mov
stos
xchg
psubsw
cmp
mov
adc
daa
add
call
stos
pop
xorl
cmc
notrack
push
jp
mov
sarl
scas
cltd
test
dec
xchg
jo
int3
adc
imul
sbb
aas
cmc
jbe
cmp
inc
mov
adc
xchg
clc
rorb
push
xchg
sbb
cmpsb
mov
jg
insl
jnp
jnp
fcoml
cltd
xchg
ret
sbb
pop
in
mov
and
mov
mov
pop
adc
arpl
mov
mov
jb
call
add
in
stos
mov
cmp
outsl
test
add
push
jne
js
test
gs
aas
enter
sub
mov
push
inc
jmp
scas
std
daa
pop
imul
cmp
js
push
shll
cmc
aad
lret
ja
clc
into
popa
mov
shlb
xchg
cltd
mov
fimuls
pop
insl
aad
and
aas
dec
je
mov
mov
or
mov
sbb
mov
fidivrl
dec
inc
adc
iret
xchg
lock
addr16
push
mov
jge
jle
repz
notb
adc
sbb
lods
addr16
in
sub
fld
and
and
lcall
pushf
adc
pop
insb
mov
inc
xchg
jno
lret
lds
mov
inc
dec
jle
add
out
fimuls
nop
andl
mov
xchg
lods
mov
xor
arpl
xor
xor
add
es
cmc
stc
cmp
mov
sub
mov
ret
lods
sbb
fdivl
out
xchg
jno
xor
adc
inc
outsb
fldcw
mov
movsb
and
cmp
addr16
dec
addl
sbb
leave
mov
lret
xor
loopne
mov
mov
xchg
or
insl
or
and
xor
xchg
rorb
stos
aam
sub
adc
push
outsl
push
imul
mov
mov
aaa
jg
jl
cmp
jmp
mov
inc
fs
add
push
and
mov
int
and
jno
lea
loop
inc
jae
insl
mov
adc
movsl
sbb
call
and
push
shrb
sbbl
push
sbbb
mov
inc
pop
movsb
fsubl
xchg
sahf
scas
leave
dec
hlt
test
sbb
lret
dec
push
dec
cmp
sub
mov
push
mov
sub
push
in
stos
push
dec
push
les
adc
sub
mov
mov
xlat
or
adc
hlt
jmp
mov
loope
sbb
inc
sbb
mov
shr
ficompl
pop
xor
adcb
adc
call
out
jae
and
pop
rcl
in
xchg
add
loope
fcomps
cld
pusha
fcompl
jg
jbe
push
xchg
add
cwtl
mov
rorb
lahf
jmp
xor
lcall
lds
imul
xchg
idiv
mov
mov
popf
push
fdivrp
mov
push
jmp
popf
in
inc
movsl
xor
repz
mov
loope
outsw
cmp
sbb
dec
mov
lods
mov
adc
stos
jnp
movsl
test
fsubr
ja
adc
fistpll
dec
adc
xchg
ds
inc
cli
add
scas
push
lds
iret
inc
lret
repz
inc
shlb
sbb
cmp
xchg
ret
jae
fdivrs
xor
cmp
filds
sub
or
xor
inc
xor
test
jmp
fnstsw
sub
fucomip
movsb
rcr
add
jnp
cs
xchg
sub
and
jge
pop
scas
jg
in
aam
popf
jecxz
gs
sar
mov
sbb
sub
push
pop
pusha
adc
inc
mov
js
mov
int
pop
pop
push
outsb
das
push
pop
mov
xchg
ret
mov
lret
jae
xchg
adc
insb
mov
jns
push
out
cltd
in
adc
cmp
les
in
and
pop
dec
mov
popa
jbe
mov
notl
xchg
inc
xlat
stos
jno
iret
ss
addb
pop
cwtl
pop
dec
xchg
add
subb
mov
fdivr
push
xor
sub
repnz
shlb
xchg
cmp
push
mov
sar
aas
nop
test
mov
jl
call
outsl
push
dec
and
iret
pusha
add
loopne
das
adc
jno
mov
dec
sub
mov
out
lcall
adc
mov
inc
or
xor
jg
test
inc
mov
push
dec
sbb
mov
fwait
sbb
dec
ret
push
sbb
ds
mov
mov
push
xchg
ret
sbb
dec
pop
test
mov
enter
sbb
popa
fwait
nop
ret
subb
fwait
in
hlt
test
sub
faddp
aad
arpl
adc
dec
mov
mov
aam
sub
xchg
gs
mov
push
pop
sahf
add
dec
dec
ja
pop
gs
add
fcoml
cltd
mov
or
cli
cmp
mov
dec
mov
rcrb
int3
repz
arpl
pop
jg
dec
notl
dec
pop
movsl
adc
adc
cld
movsb
outsb
enter
xlat
add
int
jno
dec
xchg
or
push
enter
pop
daa
cli
add
jecxz
iret
bnd
mov
push
mov
jae
xchg
in
bound
push
pop
iret
adc
cmpsb
movsl
mov
in
jae
mov
lods
iret
mov
push
adc
xor
inc
xor
mov
cmp
xchg
cltd
insl
pop
or
cmpsb
or
xor
out
cmp
push
mov
dec
dec
mov
add
fbld
das
jbe
lcall
jp
push
jnp
pop
sbb
push
push
rorl
fiadds
xor
mov
sub
jp
cwtl
inc
loopne
sti
addl
mov
inc
sbb
xor
mov
push
out
jnp
in
pop
cmp
sub
cmpsb
pop
or
in
cld
test
pusha
jo
mov
and
adc
add
mov
ficoms
in
ret
mov
mov
push
cmp
lds
push
push
out
dec
loopne
jo
pop
jbe
and
dec
jae
cli
xchg
clc
lds
and
mov
clc
addb
iret
out
dec
sbb
and
mov
or
xchg
pop
sbb
in
jne
arpl
dec
shlb
pop
ja
pusha
push
xor
xchg
mov
inc
and
dec
adc
iret
jle
ss
cmpl
aaa
push
movsb
add
inc
fnstenv
imul
movsl
jbe
inc
enter
push
mov
clc
in
mov
nop
sbb
push
add
adc
inc
inc
int3
int3
icebp
jb
outsl
imul
addr16
aas
xor
xchg
outsl
add
sti
xchg
push
test
call
jge
popf
jnp
pop
cmp
imul
cltd
adc
daa
pusha
pop
ror
lds
adc
cmp
popf
addr16
mull
inc
stos
cs
xchg
es
inc
inc
dec
mov
jmp
lret
or
repnz
adc
jmp
stc
rcrl
add
xor
push
mov
push
inc
and
pop
fstpt
mov
loop,pt
or
enter
in
sbb
movsb
imul
pop
cmp
mov
repz
fsts
push
or
jecxz
stos
mov
adc
xchg
inc
add
push
mov
int3
add
testb
jge
pop
and
adc
divb
push
jle
ret
mov
or
dec
sub
decb
sbb
jns
pop
ss
sub
push
insl
mov
xchg
mov
pop
das
dec
movsb
rcll
in
jp
mov
pop
fwait
jb
mov
mov
jl
test
movsl
cmp
xor
mov
sub
push
sbb
and
andl
mov
dec
cmpsb
ret
mov
cli
fs
dec
lret
adc
inc
out
push
mov
push
pcmpeqw
and
imul
cmp
iret
ljmp
xor
dec
cld
iret
pop
jle
cmpsl
scas
sub
sahf
repnz
xchg
test
sti
js
insl
hlt
daa
xchg
xor
fistps
push
sbb
cld
cmc
in
jno
movsb
cmp
pop
sub
cmp
jg
or
in
in
in
sub
cmp
jns
and
cmpsb
mov
out
dec
jb
cmp
add
pusha
xor
lods
xchg
gs
jl
and
imul
stc
adc
mov
cmp
ret
push
dec
mov
or
pop
xor
mov
fdivrs
aad
sub
inc
jo
and
daa
adc
call
mov
in
dec
hlt
jne
into
mov
adc
push
push
imul
aam
fwait
or
scas
and
repnz
mov
ror
jp
dec
lahf
dec
out
adc
fdivrp
push
lahf
sub
in
cltd
mov
pop
cmc
scas
les
fisubrs
ret
mov
out
lret
lock
jmp
cmpsb
sub
pop
or
mov
cltd
xor
popf
cmp
xchg
jb
test
xchg
push
jno
out
xor
mov
in
lods
mov
mov
push
pop
xchg
popa
and
fs
sti
dec
mov
sbb
iret
xor
dec
adc
adc
outsb
mov
cmp
ja
xchg
repnz
repz
inc
inc
mov
xchg
mov
mov
mov
cmp
out
xchg
insb
push
mov
imul
rol
lret
loopne
xchg
pop
adc
sti
xchg
leave
rclb
xor
cmpsb
orl
hlt
fcomi
enter
lea
mov
adc
push
dec
push
addl
aaa
adc
cmp
xchg
and
inc
push
in
add
jge
xchg
inc
xchg
mov
pusha
push
mov
cmp
xchg
aad
rolb
adc
je
test
lea
mov
in
notl
mov
adc
std
sbb
ret
repnz
push
or
outsb
loope
pop
jnp
in
jecxz
cmpsb
sbb
mov
or
mov
hlt
pop
mov
sbb
pop
pop
sub
in
movsl
cltd
enter
cmp
mov
or
es
sub
test
fmulp
cmp
cmp
cwtl
ret
xchg
cmp
les
sbb
test
adc
or
out
dec
mov
sub
jge
je
add
pop
ret
icebp
and
mov
vpcmpeqd
arpl
int
xchg
push
lods
mov
je
dec
outsl
push
sti
subb
stos
fisttpll
cs
dec
shrl
push
xor
fisubl
int3
add
inc
outsb
add
push
and
fld
mov
xchg
xchg
in
imul
push
xchg
add
mov
test
daa
xchg
aad
arpl
stos
movsl
jp
xor
sbb
and
mov
stc
dec
dec
ficoml
xchg
xchg
or
dec
je
and
and
in
mov
sub
adc
dec
jg
fistl
dec
push
mov
call
cltd
jmp
sub
add
jns
xchg
inc
daa
or
pop
mov
sarl
dec
or
mov
cmpsl
cwtl
inc
mov
sbbl
fucom
gs
xchg
push
xor
fstps
ret
ja
xchg
xchg
je
loop
and
jo
iret
divl
fdivrp
in
xchg
mov
push
fwait
clc
gs
out
data16
mov
inc
or
mov
xchg
into
ret
into
movsl
sbb
pushl
cmp
fistpll
jp
testb
js
ja
test
mov
pop
jg
push
stos
push
movsb
sub
lcall
and
rorw
mov
push
or
adc
int
ss
js
insb
sbb
nop
std
cmp
xchg
jo
fimuls
adc
cmp
imul
jmp
add
shlb
lcall
daa
call
mov
je
jb
sub
xchg
sub
sub
jo
and
push
negb
push
repz
hlt
lea
sbb
int
add
cli
lret
dec
pop
push
test
ds
shll
or
xchg
cltd
mov
call
push
rclb
push
add
mov
inc
or
adcl
mov
push
arpl
roll
pop
add
aas
jecxz
ret
push
clc
arpl
sub
push
ss
push
js
rorl
add
mov
xor
adc
sub
cmpsb
in
test
or
fisttps
push
or
outsl
jmp
outsb
mov
enter
stos
push
enter
arpl
adc
push
imul
push
int
scas
repz
add
inc
xlat
lea
pop
cld
add
fsubrs
mov
iret
out
cmpsl
mov
ss
ret
mov
ds
leave
and
imul
mov
sub
call
test
add
pop
ja
adc
repnz
jg
jp
in
sti
pop
and
fwait
cmc
ficoms
sub
adc
daa
dec
fdivp
or
mov
imul
jb
mov
lds
push
pop
cli
mov
lds
cmp
enter
addr16
pop
das
cmp
sbb
cmpsl
lcall
fisttps
mov
divb
ds
idivl
stc
out
pop
inc
je
adc
test
ja
inc
push
jne
mov
loope
out
cs
inc
pusha
dec
sbb
pop
js
xor
xor
jg
and
shrl
mov
adc
add
fs
es
push
lock
in
cltd
xchg
mov
fstpt
mov
imul
out
orb
shll
jle
inc
orl
xchg
inc
sub
add
addr16
sub
inc
fnstcw
lea
mov
push
repz
xor
push
sbb
cmpsb
jl
jle
mov
es
inc
mov
cmpl
shll
and
int
lcall
ficoms
jmp
add
or
jno
fistl
jl
in
mov
aaa
dec
rolb
jns
fildll
jbe
in
std
loop
cwtl
push
in
dec
mov
cli
fcmovbe
mov
fiadds
mov
dec
cmp
sbb
xchg
jmp
inc
cmc
lds
pop
adc
dec
push
add
jecxz
loope
into
fiaddl
fbstp
inc
adc
scas
int
lret
fisttps
aaa
dec
mov
xchg
xchg
adc
or
mov
add
or
xor
sub
mov
sub
or
pop
in
lods
stos
repnz
mov
pop
loope
sub
int3
ds
int3
movsl
push
xchg
xor
mov
inc
xor
sti
clc
lds
pop
insl
push
cmpsl
and
call
fnsave
mov
cs
inc
daa
iret
adc
ljmp
xchg
push
shl
adc
mov
inc
sub
out
mov
and
and
inc
jmp
test
std
mov
popf
clc
and
iret
inc
push
cmp
mov
push
lret
clc
or
int
je
imul
fs
pop
or
mov
aad
gs
in
adc
jo
and
xchg
cs
ja
dec
enter
add
stos
jle
xchg
lea
cltd
clc
shl
pusha
mov
dec
inc
sub
sbb
jge
andl
mov
dec
add
or
mov
push
jo
js,pt
sbb
xchg
out
or
jg
push
dec
testl
sar
fiadds
fs
test
mov
or
mov
mov
test
not
adc
mov
add
andb
fists
add
imul
mov
adc
das
pop
push
push
icebp
sbb
adc
sub
xor
add
xor
vucomisd
xchg
mov
mov
push
ss
mov
sbb
mov
dec
mov
test
jo
popf
xor
jns
add
add
mov
fwait
iret
push
push
leave
shlb
fdivl
ret
push
fcoml
dec
lods
js
test
inc
sbb
mov
cltd
xchg
out
adc
or
test
sbb
test
mov
test
ret
repz
push
js
push
fmuls
stos
in
cmp
les
pop
xor
mov
mull
mov
add
outsl
adc
adc
sub
mov
mov
std
xchg
addr16
mov
imul
fisubl
xor
xchg
sbb
mov
xchg
adc
xor
imul
shrb
setle
and
dec
adc
mov
push
pusha
repz
fistps
sbb
sbb
movsl
movsb
icebp
out
nop
addb
js
push
insl
out
pop
gs
cmpsb
cmp
ljmp
sbb
aas
mov
xor
movl
push
rorl
dec
xchg
dec
pop
outsl
xlat
dec
jbe
jne
movsb
mov
mov
jnp
xlat
pop
in
pop
shll
negb
sbb
mov
xchg
jb
insb
and
lock
mov
push
fldt
pop
mov
push
nop
nop
ss
es
das
jp
enter
imulb
sub
in
pusha
mov
iret
in
fincstp
dec
jl
dec
out
pushf
sbb
push
js
cmpl
add
stc
sbb
push
jns
mov
sbb
xchg
xor
fisttps
mov
mov
ja
mov
push
rol
aam
mov
jmp
push
outsl
gs
cld
sub
iret
test
daa
loopne
cmpsl
jb
mulb
out
dec
cmp
insl
out
xor
imul
push
fmull
lods
and
sbb
lods
mov
les
pop
jl
andb
fnclex
fucom
std
lret
into
and
lods
stos
xchg
jae
mov
testb
dec
cmp
in
inc
out
aaa
movsb
data16
sbb
xlat
push
inc
mov
pop
sbb
icebp
clc
mov
icebp
lcall
das
inc
fsubl
or
icebp
sti
jecxz
out
push
mov
icebp
cmpsb
add
out
pop
cltd
sahf
push
ds
xchg
and
adc
in
add
iret
stos
test
jecxz
pop
jo
aas
or
jl
pop
or
add
mov
rorl
cmpsb
mov
or
jle
mov
movsb
shl
mov
mov
mov
push
imul
js
pop
inc
inc
mov
in
xor
sti
cwtl
mov
pop
jo
jns
sbb
adc
mov
mov
inc
test
push
xchg
dec
fimuls
test
movb
push
aas
mov
jmp
pusha
adc
jl
cmp
daa
mov
cwtl
negb
cwtl
ret
mov
lahf
das
add
mov
adc
xor
pop
stos
push
outsl
add
xorb
out
insl
nop
jns
dec
push
push
or
ss
fdivs
sbb
push
mov
xor
fs
mov
dec
add
push
in
xor
xor
leave
xchg
icebp
cmp
push
js
imul
and
cs
xorl
jp
pop
cmp
lods
pop
pop
popf
movl
aas
lock
outsb
push
jg
xor
adc
lahf
jge
pop
pop
cmp
pushf
stc
test
inc
and
inc
cmp
adc
push
mov
test
jg
fidivs
enter
mov
or
add
bswap
scas
and
push
xor
sub
mov
fstpl
int3
clc
push
dec
stos
or
add
mov
pop
popl
pop
repz
xchg
ds
cmp
js
sub
clc
adc
fsubrs
ja
in
call
pop
inc
mov
mov
scas
inc
dec
jle
lods
and
sub
repz
push
jmp
jp
push
mov
les
cmp
into
sbb
adc
shl
mov
xchg
jb
sub
sub
pop
sub
xchg
int
mov
mov
daa
sub
out
pop
inc
in
out
xchg
fstpt
mov
loopne
shll
test
sahf
mov
inc
test
cmp
out
fld
mov
sub
ds
into
stc
out
mov
ljmp
jbe
fsts
pusha
fists
push
push
adc
adc
pop
adc
popa
or
lods
pop
push
out
cltd
jb
mov
inc
jno
dec
sti
mov
pop
cmpsl
mov
repz
ds
outsl
mov
add
sub
cmpsb
pusha
out
movsb
fsubrp
fnsave
and
mul
popa
addr16
sbb
popf
mov
outsl
xor
add
int
pop
cld
xor
push
mov
push
daa
mov
add
addl
sub
daa
jl
dec
or
test
or
cmp
mov
nop
jns
push
cmp
cltd
dec
xchg
xlat
cmp
pop
sub
leave
or
sub
in
mov
scas
js
mov
add
or
adcl
sti
dec
dec
sti
pop
push
hlt
pop
xor
push
or
mov
imul
cmpsl
sub
sub
xchg
mov
dec
add
xchg
pop
fistps
cmpsl
sbb
xchg
into
or
je
mov
jno
mov
das
call
loope
mov
or
ret
scas
lret
ljmp
ja
jecxz
ljmp
xchg
push
and
pop
icebp
negl
push
hlt
add
xchg
adc
jmp
out
fcompl
cmpsl
cmc
pop
lret
mov
cmp
push
les
and
movsl
jp
pop
xchg
rcr
notb
jae
push
mov
mov
pop
pusha
push
lods
xchg
adc
push
js
pop
dec
xor
push
cmp
cmc
jle
mov
cmp
sbb
ja
sbb
fisubl
xlat
pop
add
arpl
dec
xlat
out
fstpt
insb
shlb
sar
inc
je
xchg
lret
pushf
push
push
cmp
sbb
pop
sbb
clc
jnp
and
mov
mov
daa
fdivl
inc
inc
xchg
lahf
dec
or
add
cmpsb
sbb
pop
insb
cmpsb
mov
push
xor
mov
or
cmp
jl
stos
mov
pop
test
lock
jmp
and
mov
in
xchg
mov
shll
push
push
clc
mov
jns
dec
cmp
into
mov
sub
bound
inc
dec
test
aaa
push
pop
imul
data16
leave
and
push
fnstcw
fsubp
cld
add
xorb
mov
repz
add
icebp
and
std
mov
push
cmpb
lcall
divb
mov
pop
pop
test
out
xchg
gs
xor
add
test
and
xchg
mov
idivl
inc
push
in
ret
sbb
xchg
lods
or
xorl
fldenv
lahf
stos
jle
mov
stos
xor
test
xlat
fwait
int3
fnsave
mov
mov
daa
jbe
or
ljmp
mov
sbb
aam
test
sar
mov
dec
jg
or
push
aas
stos
cmp
shlb
test
hlt
lret
dec
cmc
add
fimull
fnstenv
push
out
int3
ja
pop
lods
jg
test
inc
jne
lds
clc
cmp
test
pop
cs
rolb
pushf
test
call
leave
shlb
scas
push
out
mov
fildll
mov
inc
jg
fwait
jb
and
inc
mov
notl
in
and
mov
pushf
sub
mov
cmp
xchg
test
cmc
pop
loope
popa
dec
aad
das
inc
in
push
mov
scas
sub
loop
popa
mov
mov
pop
or
andl
sub
rcll
inc
mov
mov
push
add
jbe
sub
pop
pop
in
arpl
or
cwtl
mov
rcrb
pop
jns
jns
call
ss
test
inc
or
inc
call
fdivl
sahf
rorb
pop
adc
dec
xchg
pop
mov
mov
incl
nop
test
ss
popf
subb
mov
add
sub
hlt
into
lret
cmp
rorl
pop
and
or
cld
ss
lahf
mov
stos
mov
cmp
xor
lea
bound
mov
lds
add
push
dec
lcall
jmp
inc
icebp
dec
jp
mov
repnz
testb
adc
xchg
lahf
popl
mov
jle
inc
lret
cs
in
xor
gs
adc
cmp
adc
jno
enter
pop
mov
fsubs
xor
jo
sub
jne
xchg
in
dec
mov
out
add
outsb
push
sub
or
js
add
mov
sub
aaa
or
mov
fdivs
adc
xor
push
xchg
push
or
mov
push
push
and
into
js
push
mov
leave
jmp
aad
jmp
pop
dec
fisttpl
jl
add
jbe
enter
sub
movsl
pop
outsl
lcall
lock
cs
and
test
leave
pusha
dec
jmp
push
xchg
push
ret
dec
sbb
xchg
add
jbe
push
out
dec
imul
xchg
push
inc
incb
test
pop
mov
cwtl
mov
dec
cmp
cmpsb
idivl
out
std
xor
pop
add
or
mov
mov
lahf
pushf
lds
or
cmp
inc
decb
arpl
inc
and
imul
xchg
pop
out
mov
inc
insl
xor
scas
mov
sub
xor
xchg
out
test
xchg
pop
xchg
data16
sbb
fcompl
repz
and
pop
in
pop
nop
mov
xor
adc
mov
mov
push
or
cmpb
pop
push
push
mov
and
lret
push
les
mov
addr16
lea
cmp
inc
or
pop
push
pop
sbb
jg
jg
cmp
jns
rorb
test
cmp
push
inc
ja
fsts
ds
gs
fdivrl
in
sub
in
ret
cltd
movl
and
cs
push
pop
pusha
or
scas
repnz
xor
cmpsl
xchg
stc
enter
ja
jge
inc
xor
repnz
stos
mov
pop
jno
fadd
dec
push
xchg
loop
mov
or
or
dec
xor
mov
mov
mov
inc
nop
push
int
ret
dec
push
fs
outsl
pop
lods
mov
hlt
iret
and
sub
and
jp
fwait
outsb
mov
add
push
sbbb
push
test
aas
stos
mov
movsl
cltd
xchg
push
outsl
dec
insl
add
inc
lea
cmp
negb
jp
jns
ss
and
add
rcrl
outsl
in
sub
sbb
sub
push
mov
fistl
lcall
push
mov
mov
fidivs
pop
sbb
adc
aam
push
lcall
dec
cmp
imul
mov
div
lods
push
subl
xchg
sbb
sbb
push
mov
std
dec
push
lret
push
sti
in
or
mov
call
divb
repz
lods
inc
add
pop
mov
adc
xchg
lods
cmpsl
nop
sbb
popf
out
pop
pop
lds
movsb
int
add
xorb
push
push
rcrl
aam
inc
clc
lahf
clc
push
push
out
enter
sub
cmpl
inc
in
call
jl
mov
aaa
mov
sbb
and
lods
pop
add
test
xor
xchg
int3
jnp
mulb
movsl
movsb
xor
adc
stos
loope
mov
and
bound
xchg
push
jno
or
imul
push
fstps
addl
sti
in
insl
sbb
and
add
jg
xchg
fildl
and
and
lds
aaa
jp
pop
cmp
sbb
repz
or
xchg
into
push
rcrb
or
insb
mov
in
sub
push
jno
pop
mov
outsb
push
mov
pusha
or
daa
inc
mov
sbb
add
cmp
loopne
fs
inc
popf
aad
mov
mov
mov
mov
mov
lods
adc
adcb
int3
cmp
ret
sbb
sub
xchg
cld
std
addl
cmc
pop
pop
inc
in
add
or
sub
mov
dec
sub
mov
add
mov
mov
mov
jg
pop
cmp
test
add
fs
lcall
push
cmp
scas
aam
jne
jb
call
shlb
adc
xchg
mov
pop
dec
fidivs
sbb
sub
sbb
lret
add
pop
dec
cltd
sbb
out
push
pushf
movsb
mov
inc
mov
mov
mov
inc
out
push
sti
inc
stos
xchg
imul
nop
pop
xchg
xchg
jmp
jno
mov
and
out
imul
sbb
lret
push
mov
sub
inc
mov
dec
sub
pop
repz
jg
pop
lock
or
lret
sbb
out
push
adc
daa
xchg
dec
ds
push
inc
mov
jnp
mov
dec
sub
xor
sbb
fldenv
mov
mov
mov
movsb
jb
popa
pop
popl
nop
repnz
adc
std
sub
jns
lcall
fmul
jns
stos
out
fwait
mov
inc
in
lock
inc
or
adc
and
inc
sub
enter
mov
cmp
out
xchg
lahf
push
push
fisttps
clc
cwtl
and
int3
clc
pop
hlt
cld
pusha
jmp
scas
and
out
add
cmpsb
mov
movsb
shll
call
push
out
in
add
shl
arpl
sbb
aaa
lret
cli
cmp
cmp
ljmp
imul
outsl
add
pop
push
out
int3
push
xor
or
call
sub
mov
gs
mov
push
arpl
imul
cmp
jnp
leave
call
dec
mov
xchg
add
hlt
daa
fcom
clc
and
mov
inc
inc
mov
adc
fimuls
add
or
in
xchg
fcomip
andb
fimull
aad
mov
out
ret
stos
mov
lods
pop
xchg
cld
xchg
or
lock
or
fbstp
std
xor
fdivrl
pop
xor
adc
and
testb
xlat
and
mov
mov
mov
hlt
repnz
cwtl
cmpsl
int
mov
dec
in
js
cmc
xor
or
nop
pop
imul
popf
das
and
push
mov
fiaddl
xchg
outsl
cld
jnp
inc
push
mov
vpshufhw
aas
mov
loopne
repz
arpl
xchg
inc
jns
and
sub
jmp
in
pop
out
mov
cmp
popf
addb
mov
ret
int
jl
jecxz
cmp
lret
cmp
add
hlt
mov
imul
pushf
stos
sarl
pop
icebp
xchg
cmp
lret
xchg
mov
and
and
sbb
ret
push
sbb
jno
sub
dec
jmp
mov
xchg
mov
lods
xchg
jge
adc
push
jp
inc
sub
inc
out
mov
fsubrs
xor
sub
in
rcll
cmpsl
xchg
ja
adc
sbb
in
mov
and
xor
jb
mov
sbb
mov
cmp
cmp
xchg
stc
pop
dec
dec
in
jmp
inc
push
sbb
es
sub
test
jecxz
sbb
push
mov
mov
cs
sbb
sub
ss
mov
xchg
or
mov
sub
and
push
aaa
popl
push
add
call
fisubrl
popa
cmp
adc
imul
add
fidivrl
adc
stos
sbb
pop
sub
mov
popa
outsl
loopne
jge
xchg
ret
ficoml
lea
jecxz
jmp
dec
repnz
xchg
outsb
push
insb
icebp
sub
jns
or
lahf
daa
fnsave
inc
sbb
fldpi
lds
adc
mov
xor
pop
outsl
inc
mov
cld
cmp
scas
das
fldenv
sub
scas
add
adc
fs
or
mov
xchg
or
fnstenv
adc
clc
lahf
push
icebp
jecxz
js
lcall
mov
in
or
push
es
cmpsl
push
lret
pop
mov
dec
inc
dec
inc
out
hlt
bound
push
loope
inc
lret
adc
lods
push
push
xchg
jae
sar
sahf
lods
and
sbb
mov
stos
xorb
cltd
sbb
lea
cmp
adc
ficoms
je
mov
mov
or
push
fsubs
cwtl
cli
or
adc
test
and
xchg
mov
pop
out
cmp
lret
imul
mov
xor
fistps
mov
lret
rcll
repnz
lahf
add
leave
xchg
jae
add
dec
movsb
enter
insb
or
xor
leave
add
or
adc
cmp
fwait
movsl
cmp
lcall
jecxz
mov
jns
push
add
xlat
lret
jecxz
dec
inc
pop
push
push
mov
add
lods
arpl
mov
xor
lds
mov
outsl
mov
aas
pop
insl
mov
loopne
xor
sub
lret
mov
orb
dec
inc
xlat
shrb
sub
jmp
rorl
aad
imul
jb
cld
test
rcrl
push
cmp
repnz
icebp
int3
fs
xchg
jmp
cs
mov
scas
icebp
sbb
mov
dec
sbb
jns
pop
sub
jp
mov
je
mov
test
xlat
jns
in
andl
or
xchg
dec
popf
xchg
dec
mov
cltd
loopne
out
mov
sti
out
shlb
or
push
push
or
and
mov
lret
fadds
fbld
fcoms
jmp
test
insl
mov
gs
das
inc
xlat
es
loope
inc
and
push
popa
ljmp
fcoml
mov
mov
mov
xor
xchg
das
xchg
dec
es
std
add
cmp
xchg
mull
scas
int3
mov
out
mov
or
mov
enter
lcall
dec
out
push
out
add
je
mov
insb
popa
pop
clc
dec
aaa
rol
adc
sbb
lret
jmp
fdivs
std
inc
jmp
mov
std
mov
in
inc
fmull
dec
and
jbe
xor
adcl
mov
and
push
loopne
leave
push
push
mov
leave
scas
lods
pushf
sbb
push
arpl
icebp
sbb
adc
aaa
and
out
daa
push
lea
xor
cld
push
es
les
out
xor
sub
cltd
lret
arpl
mov
xchg
pop
adc
cwtl
lods
stc
fsubrs
ljmp
out
fwait
aas
cmp
aaa
jo
insl
push
outsl
mov
jmp
jne
cwtl
sahf
nop
mov
or
lcall
dec
adc
push
cmpsl
imul
out
stos
sbb
inc
xor
xchg
or
xchg
jecxz
enter
daa
jbe
pop
in
mov
pop
sbb
in
sub
sub
xchg
fwait
mov
xor
ret
in
cltd
int
mov
mov
sbb
cwtl
lock
mov
and
fldt
fdivs
mov
in
and
cmpsl
es
mov
adc
mov
xor
cltd
cmpsl
sbb
mov
xchg
xchg
gs
jmp
rorb
daa
jg
mov
cmp
jg
scas
pop
inc
mov
or
stc
das
mov
jns
push
out
mov
sbb
addl
fsub
test
jb
pop
insb
push
cmp
pop
into
pushw
dec
out
or
mov
adc
shrl
mov
adc
int3
adc
fstpl
adcb
inc
mov
insb
scas
outsl
sahf
dec
das
xchg
std
jge
jo
sub
or
pop
cmp
adc
push
mov
xchg
cmp
inc
and
cmp
icebp
std
mov
ljmp
movl
pushf
jmp
pop
test
push
out
out
outsb
sti
mov
xor
aaa
cmp
imul
rcl
pop
pop
cmp
pop
repz
sbb
scas
test
test
xchg
jnp
mov
pop
cmp
shl
fadds
or
push
or
pop
xchg
jecxz
shrl
cmp
insl
jle
leave
mov
sub
into
scas
mov
ret
outsl
jmp
mov
sub
std
add
and
dec
push
arpl
imul
push
adc
mov
adc
loop
subl
mov
dec
adc
ja
inc
shl
jp
lcall
xor
ret
shr
cmp
ljmp
movsl
rcrl
or
cmp
add
push
fidivrl
fdivrs
mov
movsl
xchg
fistps
mov
push
lahf
lock
add
xchg
sbb
aaa
in
mov
xchg
mov
push
dec
jne
inc
pop
fcom
das
adc
xchg
mov
fwait
inc
into
insb
mov
sub
lds
test
push
rcr
mov
gs
in
or
cltd
mov
aam
daa
dec
mov
outsb
dec
push
clc
movsl
sbb
sahf
cmpsb
clc
negw
je
aad
inc
xlat
stos
and
ret
add
lock
imul
stc
sub
leave
jne
rolb
in
jnp
jl
std
dec
clc
mov
jae,pt
lock
cs
pushl
jge
cmpsl
adc
rcrb
call
mov
inc
mov
sub
cmp
push
and
inc
pop
cmp
js
pop
inc
neg
mov
iret
lahf
sub
dec
rclb
add
xor
xchg
test
mov
or
mov
jge
pop
add
jbe
add
lods
cs
repnz
dec
test
push
cwtl
aam
jl
xor
lea
gs
and
jno
pop
inc
push
insb
aaa
push
cmp
iret
fdiv
mov
inc
jp
xchg
std
mov
adc
outsl
adc
mov
es
mov
xor
in
iret
dec
js,pn
outsl
adc
xchg
push
lea
lahf
sub
mov
push
push
lods
sub
pop
and
cmpl
or
mov
fs
xorb
jo
xchg
stos
stc
call
andl
mov
pop
push
mov
movsl
pop
mov
gs
xor
in
adc
aam
sbb
cmp
out
test
xchg
call
jmp
in
test
adc
jno
add
enter
test
les
fnstenv
mov
cmpsl
stos
and
rclb
mov
pop
pop
stc
loope
jl
rolb
mov
movsl
cmp
push
lcall
mov
or
dec
out
sarl
adc
sbb
cs
test
scas
ja
mov
loopne
mov
out
clc
shr
and
enter
cmp
pop
xchg
xchg
es
mov
push
adc
mov
cmp
add
cld
lcall
jno
cmp
jle
inc
pop
fisttps
dec
and
inc
mov
sbb
test
lcall
fistpl
push
leave
mov
js
mov
sti
pop
xlat
mov
lret
dec
inc
jo
sarb
dec
lret
andb
push
sub
jecxz
lea
adc
cwtl
inc
mov
mov
fimull
aad
dec
push
or
sbb
fsubrs
push
xor
iret
sbb
jbe
cmp
test
cld
addr16
pop
mov
add
dec
adc
pop
or
hlt
into
aad
xchg
cmpsb
mov
inc
cmp
dec
lods
mov
xchg
push
xchg
inc
testb
pop
sbb
test
mov
loop
mov
or
mov
cli
fdivs
mov
sbb
xlat
lret
adc
mov
ljmp
inc
loopne
mov
xchg
sbb
adcb
fnstsw
test
test
add
mov
inc
push
in
mov
adc
xor
cli
out
pop
cmpsl
cmpb
jmp
and
dec
mov
fwait
inc
sbb
aam
repnz
inc
sub
imul
clc
ret
inc
jno
or
dec
sub
outsb
sub
stc
mov
jns
in
jo
sahf
xlat
shrl
stc
cli
nop
mov
and
imulb
sub
shrl
loopne
sub
cmp
js
sub
mov
shl
insb
imul
sub
nop
add
add
negl
rorl
mov
test
gs
fwait
orl
jo
mov
test
imul
shl
cvtps2pi
jnp
ljmp
mov
rcrl
movsl
std
jp
adc
push
inc
int3
lcall
add
loop
mov
mov
push
jp
sub
dec
and
lret
mov
enter
cmp
cmpsl
jae
lock
insl
or
in
xchg
test
movsl
pop
out
imul
sub
push
pop
mov
mov
push
inc
into
sub
push
mov
incb
mov
vpsubusb
pop
push
and
mov
loope
or
add
sbb
pop
mov
mov
and
push
mov
aaa
adc
and
leave
adc
shlb
push
loopne
jns
testb
mov
sbb
push
and
ds
fbld
out
out
cmp
rcll
lock
outsl
add
mov
mov
lds
fstpl
lds
push
add
lahf
mov
out
jle
xchg
mov
jb
or
inc
sbb
push
jp
xor
int3
fs
fistpll
divb
loope
mov
xchg
in
test
lahf
out
int3
sahf
xchg
out
sub
sbb
pop
push
or
orb
icebp
add
in
mov
pop
xchg
mov
xchg
cmpsb
cmp
test
dec
hlt
push
dec
pushf
pop
sbb
jp
sbb
insb
adc
push
mov
jbe
and
sti
jmp
mov
mov
add
dec
gs
lgs
bnd
jns
mov
jl
leave
loop
outsb
adc
xchg
in
push
scas
push
stc
inc
mov
pop
push
ja
lahf
pushf
xor
dec
jmp
xchg
mov
nop
pusha
int3
push
imul
xor
jns
aad
idiv
subb
je
jl
inc
jl
fistl
insl
jl
sub
lahf
inc
shrl
jns
mov
lods
rcrl
jl
cmpsl
call
dec
cmpsl
sarb
cmpl
mov
aas
test
and
jno
psraw
jae
mov
scas
out
nop
pop
adc
cmp
adc
scas
mov
xorl
ret
mov
in
icebp
cmp
and
sbb
dec
sbb
mov
pop
mov
jl
cmpsl
jbe
pusha
leave
lret
dec
divl
test
dec
pop
inc
mov
rolb
je
scas
popa
out
dec
cmpsb
insl
insl
mov
bound
out
addl
xorb
sbb
scas
push
hlt
add
xchg
roll
inc
insl
pop
mov
add
add
cmpsb
push
sahf
or
negl
adc
jns
push
xor
xchg
xchg
outsl
leave
clc
xchg
jge
cmp
cmp
enter
ror
cmp
sub
loop
cmp
cli
test
cs
insb
push
pop
cmpsb
inc
or
arpl
lods
into
nop
adc
call
aad
subb
pop
cli
repz
jnp
pop
pop
arpl
imul
aad
mov
dec
inc
jno
bound
mov
ljmp
in
inc
and
push
cmp
inc
jb
sbb
add
inc
mov
int3
leave
add
or
jmp
push
sub
sub
in
pop
mov
insl
in
jle
pop
mov
into
pop
arpl
xor
outsb
mov
das
fcoms
test
imul
rclb
cwtl
xor
sbb
out
cmp
aaa
sbb
push
dec
sub
outsb
mov
sub
cmp
js
sub
jmp
add
fdivl
mov
leave
mov
sub
mov
ja
and
pop
sarl
arpl
nop
mov
pop
sub
inc
shlb
jge
push
js
ss
add
popa
mov
and
test
lahf
push
sub
and
repnz
imul
sbb
sub
lret
lret
xor
sbb
dec
movsl
push
pop
out
outsb
pop
mull
push
xor
loopne
ret
adc
shll
fisubl
jbe
mov
clc
lds
call
cmp
lcall
outsl
mov
in
dec
lret
jp
lcall
and
xchg
mov
shlb
mov
xchg
jg
cli
clc
or
hlt
inc
pop
jle
mov
sub
sub
pop
fucomip
xor
fnstenv
scas
out
in
and
adc
out
add
mov
adc
cmp
mov
lods
and
jge
pop
jecxz
push
xchg
repnz
leave
xchg
repnz
mov
sub
mov
out
out
sub
mov
ljmp
cmp
or
daa
jl
mov
push
sub
xchg
icebp
mov
inc
mov
idivb
xor
mov
popf
fmuls
mov
imul
out
fsubl
xor
nop
push
in
mov
cmp
popa
clc
mov
cmp
pop
inc
cmp
push
mov
xchg
push
movsb
lret
ljmp
jae
out
push
sub
lahf
les
test
sahf
jmp
pop
cld
hlt
insb
pop
xchg
fldl
mov
or
outsl
jg
and
mov
add
mov
in
push
bound
stos
push
mov
aam
pop
sbb
out
fnsave
inc
pusha
mov
out
lret
mov
js
and
push
in
adc
or
enter
sahf
jl
pop
cmc
add
faddl
add
jecxz
push
push
shlb
int
stc
stos
out
les
in
or
outsb
add
cli
cmc
push
fldenv
xchg
and
mov
iret
jg
dec
icebp
pop
jae
fsubr
cmp
jle
mov
or
dec
xchg
mov
lock
cwtl
lret
or
loop
jle
push
adc
sub
arpl
popa
mov
mov
imul
push
loope
jle
xlat
testb
mov
pop
pop
aad
pop
rorb
inc
insb
mov
xchg
push
cmp
jns
daa
ret
jne
movsl
lock
cmp
adc
jp
and
or
inc
lret
sub
inc
jge
das
sahf
je
push
sahf
pop
mov
push
loope
lock
aas
decl
pop
add
sub
fldln2
mov
cs
mov
out
xchg
xchg
mov
pop
insb
ja
cli
divb
mov
call
int
xchg
mov
xchg
mov
imul
jecxz
mov
pushf
stos
clc
xor
rcrl
mov
push
mov
sub
sbb
ss
loope
pop
movsl
or
xor
xchg
push
jge
mov
mov
xor
or
dec
jecxz
inc
fstps
sbb
cld
xchg
cmpsb
push
cmp
inc
sub
mov
repnz
ret
mov
pop
push
scas
jns
pop
popf
aam
push
loopne
mov
mov
xorb
mov
dec
pop
xchg
cmp
mov
adc
mov
inc
cmp
adc
lret
cmp
pop
mov
out
mov
fadds
jecxz
sbb
ss
push
cmc
sbb
test
lret
adc
out
cmp
push
dec
push
stc
pop
rclb
inc
sbb
stos
test
enter
pop
pop
aas
adc
or
adc
ficoml
arpl
sahf
je
mov
popf
xor
addr16
cmp
mov
leave
push
xor
add
sbb
xchg
jnp
jnp,pn
cmp
testl
adc
push
imul
shl
fildl
call
es
add
or
dec
add
cmpl
xchg
xchg
stc
sbb
cmp
std
dec
lods
pushf
sahf
jmp
adc
dec
inc
mov
pop
aad
jl
cmc
aam
arpl
pop
sub
out
lds
and
sbb
lds
push
add
push
pop
cld
test
inc
xor
cmpsl
cmp
ja
mov
push
int3
cmc
bound
mov
mov
push
push
sub
stos
lret
cmp
push
gs
test
mov
jp
add
out
jns
sahf
push
and
mov
mov
or
fcmovnu
jp
xor
sub
daa
jns
daa
hlt
jp
faddp
add
mov
push
cmp
fcmovb
sti
dec
das
push
imul
cmc
lret
lahf
lret
mov
mov
movsl
sub
pop
ljmp
js
push
pop
pop
cmp
mov
inc
push
xor
and
mov
lret
mov
sub
mov
sub
sub
bound
jns
mov
inc
cmp
shlb
inc
jecxz
push
mov
or
cltd
add
or
scas
lret
push
sbb
xchg
sub
int3
and
and
decb
fcomps
mov
cmp
xor
fnstsw
je
cltd
add
rcrl
adc
jl
mov
call
pop
out
and
push
sub
push
mov
jnp
xchg
mov
mov
sub
sub
lea
iret
popa
lods
xor
mov
lods
or
out
test
sub
dec
call
mulb
cmp
shl
jle
roll
dec
dec
mov
and
jl
and
xor
les
inc
xor
roll
int3
inc
and
or
adc
cltd
orb
push
out
nop
hlt
sub
xchg
rorb
cmpsb
dec
inc
or
xor
out
arpl
loopne
inc
mov
cs
enter
dec
les
test
fmuls
or
add
scas
test
sub
idivl
daa
dec
push
adcb
pop
mov
adc
push
sti
lcall
loopne
insl
jb
cmc
jne
fwait
push
out
push
jmp
fcmovb
jl
xorl
fadd
xchg
inc
cli
sbb
mov
popf
into
mul
mov
sbb
cmp
test
test
xchg
cmpsb
je
pop
xor
cmp
sti
xchg
add
sbb
xorl
cmp
pop
aas
cli
cmpsb
push
dec
ret
movsb
xchg
aaa
inc
cmp
or
mov
push
in
test
sbb
cmpsl
mov
sub
repz
add
icebp
or
in
mov
aaa
mov
mov
mov
pop
push
lock
cwtl
xor
cli
sbb
sbb
mov
mov
mov
sbb
daa
mov
das
lret
and
push
jecxz
dec
cld
clc
stos
cmp
test
aad
cmp
push
imul
movsb
clc
lods
sahf
pop
shl
jmp
xchg
add
mov
shll
test
and
mov
add
jp
mov
cmp
or
nop
outsl
jns
aam
shl
push
add
add
adc
es
arpl
ja
cmpsl
ret
push
cmc
sub
dec
idivl
xor
push
push
or
stc
enter
cwtl
orb
or
push
andb
nop
outsb
enter
add
pop
pop
adc
and
xchg
dec
mov
ljmp
sbb
pushf
inc
in
mov
std
clc
lret
divl
inc
mulb
jge
mov
xor
imul
fwait
sub
nop
jne
jo
mov
std
jl
cmp
mov
and
ljmp
inc
sub
jecxz
gs
mov
jp
inc
sbb
mov
fstpl
lret
andl
xchg
and
xchg
aaa
cs
iret
add
mov
or
pop
push
jbe
aaa
lcall
mov
mov
add
cltd
pop
add
add
dec
dec
imul
fidivrs
or
sbb
mov
pop
in
jg
mov
inc
cmp
add
mov
ret
mov
sbb
sub
adc
aaa
lret
adc
pop
xchg
fucompp
test
aad
sub
in
mov
adcl
pop
push
push
xlat
out
xchg
stos
add
in
inc
aad
repz
add
scas
fists
inc
add
push
cwtl
andl
push
imulb
scas
pop
push
xlat
push
loopne
adc
fs
mov
and
imul
adc
fsubrl
pop
push
es
mov
hlt
loope
bnd
push
fstps
jle
nop
sbb
or
jmp
mov
push
ret
loop
cmp
es
jbe
jle
out
and
cmpb
sahf
pop
add
repz
lcall
faddl
jo
xchg
lcall
loopne
out
sbb
jmp
jae
inc
add
das
xor
sub
mov
jbe
sarl
adc
sub
test
sahf
push
inc
pushf
cmp
jle
dec
iret
pop
push
rcrb
loopne
lock
arpl
jo
xor
xor
movsb
jl
xor
in
daa
fld
jno
stos
out
subb
sbbb
push
aas
jnp
pop
cmc
in
sub
stos
adc
fdivrp
and
insb
mov
lahf
push
mov
cmp
sbb
repz
les
pop
daa
pop
in
inc
xchg
push
dec
mov
pop
cmp
scas
mov
or
xchg
sbb
xor
jecxz
inc
sub
insl
jno
xchg
mov
leave
sbb
jle
jg
orb
sbb
pop
inc
daa
subl
adc
sub
aad
ds
es
inc
aad
inc
cmpsl
jbe
mov
notl
push
shl
lcall
hlt
push
jecxz
sbb
mov
xor
inc
aad
xchg
rcll
iret
rol
fs
pop
movntq
out
mov
inc
cld
fistpll
pop
push
dec
movsb
jl
ficoms
cmpl
or
and
push
dec
push
clc
loopne
jp
xor
stos
scas
jnp
aad
jns
xchg
loop
push
stos
adc
sub
popa
push
fwait
sbb
int
pop
outsl
andl
xchg
sbb
jecxz
sub
mov
cmp
adcb
fdivrs
jbe
lods
rclb
adc
rorl
sbb
jmp
add
sub
jne
fbld
stc
jnp
sub
dec
xchg
daa
clc
jne
cltd
faddp
jno
push
pop
add
clc
push
inc
mov
mov
jg
cmpsl
sbb
leave
xchg
xor
mov
jp
pop
out
das
inc
dec
rcrb
xchg
pop
stc
sahf
lds
loop
mov
ret
sahf
inc
jb
and
jo
lods
cwtd
test
mov
aam
int3
scas
inc
rol
and
mov
cmp
cmp
and
popf
fwait
arpl
movsb
add
mov
ljmp
jae
jle
pop
icebp
cmp
jb
shl
sbb
movsl
lahf
fmull
jge
insl
xor
dec
add
in
paddb
rcll
popa
sbb
gs
addb
jle
jmp
enter
pop
lret
sbb
mov
jbe
icebp
pop
fldl
dec
fstl
fsubrs
xchg
cmp
push
and
xchg
lret
xchg
or
cld
ret
push
lods
mov
pop
mov
loopne
ds
sti
cmpsb
pop
mov
dec
xor
add
incl
adc
inc
cmpsb
in
shlb
cmp
or
out
outsb
lahf
vdivpd
popf
mov
sub
aas
jmp
push
scas
outsl
jnp
in
ret
into
pop
lret
sbb
es
and
dec
lahf
sbb
xor
push
test
adc
scas
dec
fdivl
mov
inc
or
repz
lea
pop
inc
pop
push
mov
pop
jb
jnp
ret
mov
inc
test
cmpsl
popf
int
enter
adc
ja
test
xorb
sti
xor
mov
stos
repz
movsl
push
jb
cmpsl
sbb
cmp
mov
in
mov
lret
cvtdq2ps
hlt
cmp
inc
cld
in
les
out
jnp
jnp
scas
nop
loopne
mov
or
dec
lods
mov
lods
push
lock
pusha
inc
mov
mov
mov
fwait
pop
pushf
xlat
jbe
scas
or
data16
bound
ljmp
or
xchg
incb
inc
add
ret
adc
dec
mov
pop
rcrb
sub
mov
test
popf
imul
pop
fistpl
lahf
mov
adc
out
ja
repnz
imul
and
sub
addl
adc
and
mull
xor
and
pop
fmulp
stos
and
shlb
decb
add
mov
xchg
mov
nop
in
aam
pop
and
mull
jo
jne
mov
out
insb
out
mov
mov
mov
test
pop
xchg
xor
rorb
lret
das
ret
sub
sbb
pusha
test
cmp
xchg
add
loope
shl
inc
pushf
and
cltd
outsb
fistpl
mov
sti
cmc
mov
sbb
dec
addr16
cltd
inc
lods
push
repnz
fcmovnb
fsubr
jg
jmp
cltd
loope
fsubl
cs
push
fs
mul
stos
or
jge
and
or
iret
pushf
fildl
test
dec
movsl
ljmp
xchg
and
ficoms
mov
dec
push
sbb
mov
xchg
lods
xchg
dec
xchg
dec
dec
jae
rorb
nop
and
xchg
ds
push
sbb
mov
dec
lea
in
out
cs
hlt
mov
dec
push
outsl
lcall
pop
out
jbe
adc
adc
stos
loopne
pop
mov
jg
out
add
sub
jae
pop
mov
icebp
inc
sti
ds
mov
dec
ret
xchg
fmull
cmp
pop
fs
jb
sub
adc
mov
pop
rorb
mov
sub
pusha
jg
jno
dec
lea
dec
xchg
std
and
sub
jle
cmp
sub
out
fdiv
push
sahf
fsubrp
inc
bound
test
sti
pop
or
fs
dec
push
adc
pushf
dec
cmc
mov
or
imull
int
dec
add
pop
mov
scas
ds
rcll
mov
sbb
in
sub
sub
adc
fisubrs
call
inc
sti
jge
mov
orl
sub
cmpsb
jb
mov
imul
rorl
pop
dec
scas
dec
or
fadd
sbb
shll
push
imul
pop
jb
jb
aas
cmc
xchg
dec
sub
sub
pusha
jp
dec
dec
xor
xor
push
xchg
inc
push
inc
mov
sar
hlt
xor
leave
mov
xchg
movl
fcom
mov
adc
push
pop
sub
sub
sbb
movsb
mov
xlat
js
lock
xchg
gs
cmp
addr16
sarb
mov
insb
add
mov
mov
in
js
fld1
sbb
fdivrl
stos
fsubs
loopne
aas
lret
pop
jno
shlb
es
dec
das
mov
test
aad
jmp
scas
pop
dec
leave
push
ret
mov
mov
pusha
lods
mov
int
loope
stos
adc
sub
inc
out
mov
sub
xor
mov
loope
push
and
mov
movsl
sarl
enter
mov
push
inc
pop
cmp
jecxz
pop
test
sbb
xor
xor
outsl
or
sub
mov
push
jbe
je
aad
arpl
push
cmp
pop
jb
mov
ds
dec
dec
xor
xchg
push
es
fiaddl
and
jmp
push
push
inc
jbe
clc
lds
cmpsl
lods
popl
add
inc
stc
mov
mov
or
push
aad
xor
in
ljmp
and
dec
xor
mov
inc
jp
outsb
fsubrl
aas
cs
jb
dec
mov
inc
cmp
std
movsb
sbb
fcoms
dec
mov
pop
ja
inc
inc
jb
xor
xchg
xchg
xchg
mov
dec
sbb
lock
and
scas
mov
ret
mov
pop
mov
xchg
jnp
ret
je
jne
or
jle
push
ljmp
lahf
xchg
mov
icebp
mov
mov
mov
inc
mov
inc
ret
or
sbbb
xor
or
dec
in
addl
out
jge
pop
or
adc
sbb
sarl
daa
dec
xchg
mov
pop
rcrl
mov
cli
or
inc
cli
cmovg
xorl
jae
add
into
xor
push
adc
lahf
outsl
jns
test
mov
aam
xchg
aad
adc
js
shlb
test
xchg
orb
or
aaa
sub
cmp
pusha
mov
ret
push
ret
add
or
loop
and
adc
push
in
xchg
rcr
les
jae
xchg
mov
call
cmpsb
push
in
jecxz
xchg
mov
in
sbb
mov
mov
jl
push
enter
mov
xor
fbld
pop
xor
js
leave
lods
pop
jmp
test
paddq
aad
add
test
jp
or
sbb
dec
mov
jno
sub
xchg
pushf
add
mov
popa
push
push
xor
adc
and
repz
mov
in
push
add
push
in
fwait
sub
jb
or
insl
fiaddl
loop
jnp
rcl
jns
sub
inc
cmp
xchg
in
loop
popa
pop
inc
pop
push
cltd
icebp
xchg
stos
imul
into
jnp
xor
jbe
lcall
sub
subl
xor
inc
sub
pop
sub
stos
xchg
pop
bound
push
repz
lret
mov
cmovge
stos
inc
pop
call
and
and
and
aaa
js
in
mov
sbb
or
shl
xchg
into
cld
das
mov
xchg
lret
mov
mov
xchg
or
or
inc
jnp
xchg
fwait
movsl
lds
movsb
movsl
jmp
test
je
lahf
js
xor
scas
mov
pusha
pop
jp
aas
cmpsb
push
js
xchg
jg
aam
notb
mov
loopne
dec
xchg
mov
enter
cmp
pop
cmc
xchg
push
push
scas
cli
adcl
insl
jno
cmp
and
je
cwtl
ficompl
loope
in
jp
test
push
popa
lret
push
stos
push
arpl
pop
and
xor
stc
ds
mov
mov
mov
pop
mov
adc
nop
iret
mov
insl
inc
adcb
xor
mov
outsl
push
clc
xor
adc
mov
xchg
sti
sbb
or
and
shrb
cltd
sbb
push
inc
fldl
popa
sub
subb
jo
call
mov
dec
in
xchg
out
mov
jge
jge
xchg
sub
ficompl
mov
xchg
aad
mov
and
pop
pop
loope
and
add
push
repz
or
aam
cmc
cld
xor
mov
jecxz
and
loope
mov
pop
mov
movw
movsl
dec
xchg
pop
bound
add
sbb
jg
pop
cmp
gs
out
ss
test
push
xchg
ror
xchg
or
fbld
gs
lcall
adc
dec
repz
xor
inc
pop
push
add
addl
xor
daa
imul
cmpsl
cmp
lea
or
sbb
js
push
xchg
sub
pop
in
sarl
add
push
pop
ret
or
jb
push
insl
bound
sub
lock
loop
call
mov
sbb
mov
push
ljmp
pushf
mov
or
add
lock
pushf
inc
jb
dec
mov
je
leave
daa
sbb
mov
test
push
inc
xchg
aas
jno
dec
inc
pop
jns
sbb
scas
cmp
sbb
inc
sbb
popa
inc
idivl
xchg
mov
jmp
sti
mov
mov
dec
outsl
sub
cmp
jae
jp
cld
nop
mov
into
orb
gs
ror
sub
adc
sbb
dec
movsb
sbb
sub
lret
or
push
mov
mov
inc
mov
gs
push
jne
pop
dec
scas
adc
gs
jb
test
xchg
pop
rep
cmp
sbb
stc
hlt
and
xchg
push
add
out
std
aad
into
pop
lret
jp
dec
pop
les
jl
sbb
pushf
pusha
ljmp
pusha
test
std
inc
ret
cmp
push
cld
cmp
frstor
sub
pop
add
lds
das
cmpsb
fsub
inc
xchg
mov
rcrb
mov
cmp
aad
test
jo
xchg
adc
cli
aas
jecxz
hlt
push
dec
mov
push
or
or
xor
aaa
test
jne
lcall
notl
xor
je
clc
mov
inc
mov
adc
lret
jno
sub
pop
push
mov
dec
lods
fimuls
aaa
popf
sbb
push
fs
lcall
lods
out
pushl
fsub
pop
sbb
scas
subl
imul
mov
sti
das
inc
addr16
push
add
inc
sub
sarb
gs
mov
paddb
aaa
popa
xor
xlat
ret
push
xchg
bound
jecxz
push
mov
sbb
repz
pop
in
and
adc
xchg
adc
daa
pop
cmpsl
loopne
cmc
rorl
inc
fidivl
outsl
jp
inc
or
lcall
push
mov
in
jle
pusha
fwait
pop
inc
xor
push
pop
sub
mov
jne
daa
dec
and
push
pop
jb
test
cld
lcall
mov
mov
mov
lret
mov
mov
pop
pop
sbb
in
pop
cwtl
fldl
clc
pop
mov
mov
hlt
jne
adc
es
ljmp
addb
mov
adc
cmp
loopne
mov
out
and
rcll
push
ret
fs
cmpb
jle
cmpsb
lds
add
lahf
add
sbb
sub
pop
jno
mov
sbb
dec
sub
or
mov
jl
fildll
out
mov
pop
or
loope
or
pusha
ret
imul
pop
inc
outsb
cmp
xor
mov
sbb
mov
popf
inc
sub
cld
and
mov
jecxz
sub
scas
xchg
cld
lret
cmp
sub
ljmp
mov
lahf
ja
lret
lret
push
mov
popa
adc
lock
out
dec
add
adcb
pop
scas
adcb
push
es
xor
lcall
adc
aas
push
dec
adc
sti
icebp
xchg
jecxz
mov
jmp
jg
pop
loope
mov
jg
push
xchg
push
sub
add
jmp
mov
insb
test
xchg
pop
mov
or
incl
ret
mov
inc
outsl
push
xor
sub
and
arpl
in
push
clc
repnz
mov
add
iret
icebp
clc
jge
jg
dec
jbe
pop
push
inc
flds
mov
mov
aas
inc
cmp
shrb
scas
push
out
mov
test
orl
icebp
jae
and
jne
je
daa
adc
das
fadd
cltd
push
jns
jmp
scas
in
dec
lret
cltd
aas
mov
jno
pusha
test
fiadds
hlt
push
pop
pop
jbe
push
push
or
push
and
loopne
repnz
sbb
or
je
mov
push
sahf
inc
fisubl
in
sbb
loope
dec
xor
leave
pop
pop
pop
sbb
int3
pushf
mov
dec
xchg
icebp
push
xlat
cmc
lcall
into
jg
sub
test
xor
add
add
jb
insb
test
ss
or
pushf
iret
stc
and
mov
add
mov
jg
test
test
out
test
pop
test
mov
int3
faddp
and
add
in
or
cltd
int3
inc
insb
lret
xor
inc
or
xor
js
cmpsb
pop
mov
fstp
jae
inc
psllw
adc
fdivrs
lcall
stos
push
orl
mov
adc
ret
cli
sti
sarb
inc
mov
pusha
aaa
mov
aaa
imull
pop
dec
inc
or
inc
ret
dec
int3
dec
clc
sbb
mov
push
dec
bound
cmpsl
xor
or
push
popf
push
shlb
adc
cmp
lret
lret
das
xor
les
or
sbb
lock
inc
inc
sahf
add
ret
push
push
cmpsb
cld
or
push
push
xchg
movsb
leave
adc
lods
dec
xor
movsb
fistpll
xor
and
pop
fmuls
push
and
aaa
and
xchg
jnp
sub
mov
cli
nop
cmp
adc
xor
sub
mov
rolb
and
js
test
je
cmp
xor
sbb
xchg
sub
jge
adc
jl
hlt
mul
push
and
mov
repnz
or
push
inc
addl
lcall
dec
fidivrs
imulb
mov
pop
mov
and
popa
push
lods
shr
pop
sbb
mov
ss
loop
fwait
add
js
out
rorb
push
cli
pop
iret
push
or
scas
mov
adc
incb
sub
xchg
aam
xlat
or
cmp
sbbl
xchg
test
adc
mov
les
sub
faddl
flds
and
in
sbb
in
fisttps
xor
jecxz
lret
shlb
loope
into
or
push
xor
lods
test
aas
xchg
pop
in
push
daa
test
mov
push
adc
mov
or
les
mov
fadd
pop
or
cs
jo
leave
mov
ret
xchg
movsb
test
jo
push
dec
sbb
xchg
jmp
sub
test
pop
ret
jns
mov
popa
rorl
cld
mov
sub
int3
xor
stos
lret
test
sub
je
jmp
mov
dec
pop
jle
inc
stos
outsb
mov
jp
adc
insb
jbe
mov
fnclex
xor
jle
mov
jae
jo
stos
pop
ja
xor
sub
sub
pop
shll
sbb
insl
pushl
xchg
sbb
xor
inc
popa
xchg
addr16
pop
and
test
inc
rcrb
and
inc
out
mov
push
mov
stc
lods
jns
ljmp
mov
ret
addl
mov
cmpsl
out
push
push
cwtl
cmc
das
aam
daa
add
pop
xlat
stos
stc
das
lret
je
add
cs
rcrl
jno
and
inc
inc
shll
in
sbb
dec
popa
xor
fbld
or
subb
jnp
jg
insl
mov
push
or
stc
out
cld
lods
scas
mov
out
mov
insl
add
push
sarb
out
dec
jb
adc
neg
outsb
inc
aaa
and
adc
xor
divb
push
test
daa
iret
add
dec
lret
jne
jg
cmp
cmp
sti
push
int3
lods
cmp
mov
out
mov
sbb
fldt
repnz
push
icebp
jno
aam
ja
jmp
lret
test
push
cmp
xchg
pop
jle
in
sbb
jge
movsl
in
sub
inc
adc
repnz
or
pop
imul
inc
test
xor
xor
add
imul
lock
arpl
outsb
mov
test
ds
jl
add
ljmp
in
mov
jg
push
pushf
sub
fbstp
push
dec
pushf
aad
pop
add
nop
sub
in
pop
sahf
add
in
xorb
std
xor
cmp
lods
cmpsb
mov
fstl
mov
cmc
adc
fwait
mov
sub
sub
fdivrl
push
arpl
sbb
add
sbb
pop
or
add
out
enter
xchg
cli
pop
mov
mov
stos
mov
pop
pop
cmp
andl
fdivs
lret
xchg
or
testb
fxch
xor
stos
push
imul
and
push
add
push
dec
push
lods
in
push
pushf
out
push
adc
and
sti
fdiv
test
push
bound
sbb
enter
ret
dec
lret
and
fiadds
pop
mov
xchg
push
inc
enter
popf
test
or
inc
xor
in
push
cmp
push
xchg
movsl
pop
pop
jbe
enter
or
push
das
mov
sbb
push
push
cmp
pop
insb
leave
inc
sbb
aam
cmp
mov
outsl
cmp
insb
rcrb
test
ret
loopne
sub
pop
imul
mov
repz
sub
or
imul
and
ss
and
sbb
lods
sub
movsl
jmp
fisubrs
sbb
sub
fldenv
jle
test
cmpsb
and
mov
es
push
jne
inc
aas
sub
sar
jg
xchg
mov
nop
or
or
stos
rcrb
outsb
std
add
std
sub
push
mov
ljmp
out
insl
sub
or
hlt
and
scas
dec
cmp
and
bnd
scas
pop
mov
ss
mov
faddl
lods
jl
aam
mov
lahf
stc
dec
jae
mov
je
jno
fimuls
cmp
mov
pop
sbb
mov
and
sahf
in
adc
stc
pop
ret
ja
clc
inc
jmp
pop
inc
je
jne
lds
out
testl
imul
inc
fdivrl
movsl
out
xor
sahf
xchg
push
dec
or
inc
jecxz
fistps
fisttpll
out
inc
and
mov
jmp
push
mov
aam
mov
out
adc
scas
shr
jmp
das
jg
push
inc
cld
nop
sub
test
test
jg
xchg
aaa
popf
dec
dec
cmpsb
cmpsl
cltd
or
jo
xchg
pop
push
jmp
mov
mov
or
out
fimuls
loopne
loope
mov
fwait
sub
jb
jmp
xchg
sbb
jl
and
adc
call
leave
xchg
sahf
addr16
and
popf
mov
jmp
movsl
leave
inc
test
mov
inc
fldl
push
sub
addb
dec
mov
sub
push
fisttps
cmp
xchg
push
add
pop
js
or
dec
mov
mov
push
repz
lcall
fs
imul
xchg
out
jbe
fildl
inc
hlt
les
ret
mov
lahf
push
adc
insb
mov
out
rcrb
xchg
lret
pop
jmp
sub
out
xchg
or
cmp
fnstcw
stos
in
xor
lock
lock
adc
sub
sbb
mov
hlt
iret
ja
in
adc
insl
loope
cmp
int3
in
push
sbb
insl
or
pop
rolb
clc
mov
xlat
jo
rclb
push
push
sub
rclb
fbstp
shrl
mov
stos
push
lods
jno
jns
scas
or
cwtl
cmc
imul
or
jmp
repnz
out
and
jmp
fmuls
movsb
bound
test
xchg
pop
stos
or
iret
fisttpll
sbb
mov
ret
loope
xor
or
mov
xor
lret
rorb
inc
loop
loop
pop
icebp
js
sbb
pop
add
loop
iret
in
add
mov
imul
mov
pop
mov
fs
sbb
lret
push
xchg
or
sbb
lret
pop
lret
push
xchg
out
nop
scas
mov
shlb
inc
mov
and
ret
test
subb
and
rcrb
je
lock
and
dec
pop
lock
test
mov
int3
enter
xchg
leave
in
add
push
xchg
push
arpl
add
xchg
pop
push
mov
sbb
fidivrs
cli
outsb
test
insb
call
testb
out
or
rolb
cmp
sbb
lret
dec
mov
jmp
xchg
psubusw
fdivl
or
and
cmp
or
mov
pop
sub
dec
jmp
mov
popa
or
sbb
pop
pop
jp
std
aas
incl
xor
setnp
into
cld
loop
stos
out
and
push
sbb
xor
outsl
or
je
shl
movl
dec
jp
jecxz
pop
xchg
sbb
outsl
pusha
pop
xchg
push
imul
sbb
mov
hlt
push
popa
into
aaa
and
mov
adc
dec
popa
dec
pop
pop
push
int3
sub
push
cmp
call
lahf
xor
out
popa
add
ds
adc
or
and
adc
dec
xlat
rcl
mov
rol
inc
inc
pushf
sbb
leave
rol
call
cmp
mov
push
mov
bound
cmp
mov
pop
mov
dec
adcl
mov
inc
sahf
lcall
mov
out
or
je
lret
jmp
rcr
inc
paddusw
dec
rcrl
adc
ret
lcall
adc
xchg
aad
pop
outsl
push
jl
aas
ficompl
jge
cmpsb
jmp
xchg
dec
mov
rep
subl
cwtl
insl
fldcw
mov
js
aaa
sub
std
inc
cmp
push
lahf
jmp
fninit
sub
imul
sbb
in
cmp
push
je
xlat
add
mov
mov
sub
or
nop
jmp
shl
pushf
out
jecxz
jo
imul
cmpsl
mov
andl
adc
cmp
push
jle
cmpsl
add
orl
notb
xorb
repnz
pop
mov
pushf
sub
cs
xor
adc
leave
neg
mov
out
xor
add
das
sub
add
push
sbb
shrb
call
inc
imul
xchg
ja
fsub
roll
fisubs
je
popf
out
adc
sbb
jmp
sbb
lret
pusha
imul
sub
xor
pushf
xchg
xor
ss
stos
pop
movl
xor
subb
ljmp
push
fbstp
or
xchg
add
int
callw
cmp
cltd
iret
mov
mov
or
aas
inc
push
repnz
inc
mov
adc
mov
sub
mov
sub
push
std
sbb
pushf
inc
inc
pushw
mov
pop
xchg
xlat
dec
jl
stos
sbb
inc
adc
sub
or
test
and
mov
bound
comiss
imul
dec
cmp
sub
mov
lahf
xchg
lahf
xchg
leave
sbb
testl
stc
cmpsb
fldl
inc
mov
std
xlat
shrb
push
mov
loop
cld
lret
adc
mov
dec
jb
in
ljmp
sub
jns
pop
mov
loopne
pop
xor
nop
out
sbbl
int3
mov
cmc
test
inc
fcmovnb
mov
insb
pop
push
lret
xor
jae
mov
movsb
in
dec
xchg
fimuls
imul
sarl
sbb
sbb
dec
rorl
testl
pop
jno
iret
xchg
cmp
test
test
add
iret
xor
jg
sti
shl
stc
rolb
adcl
aad
int
mov
cmp
cli
and
sub
rorl
test
cmpsl
stos
and
cmp
xlat
add
repz
sub
int
mov
or
sbb
and
pop
in
sahf
in
das
nop
dec
mov
sar
jecxz
xchg
inc
xor
out
mov
mov
jmp
push
rcrl
pop
sub
cmp
sti
xor
mov
cmp
int
in
and
enter
ficoml
push
fwait
dec
fisubl
je
pop
mov
insb
imul
mov
out
sahf
lea
and
cmp
inc
insb
jnp
stos
push
test
lret
js
aam
sbb
adc
pop
cmp
loopne
mov
inc
scas
xchg
jp
insl
popl
sti
lods
xchg
jp
sbb
and
test
ja
push
add
imul
and
pop
pop
ret
cmp
add
jecxz
rcr
jmp
fistps
iret
mov
cmpsb
sub
pop
nop
std
call
push
pushf
cmpsb
outsl
gs
in
daa
nop
fcoml
pop
shl
or
add
lea
scas
xchg
xchg
sbb
stos
or
mov
and
clc
fmull
xchg
adc
ret
nop
ljmp
sarb
ret
outsb
aas
pop
test
movb
call
aas
push
xchg
adc
jb
mov
inc
shll
mov
xchg
sub
out
test
xlat
sub
addr16
lret
in
out
std
push
testl
fs
jge
int3
dec
pusha
popa
sbb
addl
je
inc
rolb
xchg
imul
xchg
scas
cmp
lock
outsl
sub
push
inc
lahf
jae
mov
fists
cli
stc
mov
fstpt
mov
and
into
add
sub
sahf
rcr
je
or
jle
ljmp
loope
sub
dec
pop
push
pop
es
inc
jp
aam
mov
adc
or
in
aad
inc
aaa
sti
cmp
into
loope
repnz
aas
mov
repnz
adc
jno
xchg
cltd
inc
mov
iret
hlt
cs
mov
mov
les
mov
pop
xor
mov
mov
scas
adc
cmp
pop
mov
daa
incl
push
fwait
loopne
ja
cmp
std
pusha
mov
iret
in
lret
aad
outsb
xor
push
mov
not
xchg
cld
pusha
sub
aas
inc
mov
jg
andb
hlt
lock
inc
das
shl
push
imul
std
inc
cmc
test
jbe
pop
pop
lret
and
dec
outsl
mov
mov
xor
repz
jle
adc
ja
jl
mov
and
insb
mov
lret
ret
in
gs
adc
push
rol
cmp
pushf
xor
fadds
notl
mov
lods
imul
repz
dec
sub
cmc
fstl
push
jbe
cmp
inc
sub
xchg
mov
dec
fcomi
repz
mov
js
scas
jo
dec
sub
clc
mov
or
push
xchg
scas
adcl
inc
fstl
push
scas
dec
in
fdivrs
cmc
out
add
cmc
shrb
enter
test
inc
jl
shlb
cmpsl
xor
shrl
pop
cmc
pop
fdivrs
add
sub
fldenv
outsl
or
sti
add
mov
loop
xchg
lods
dec
movsl
ljmp
ja
mov
add
xchg
nop
dec
lods
xor
sub
xor
std
add
pop
cmp
inc
int
or
cld
xor
or
mov
pop
loop
add
in
es
in
in
push
sbb
xor
int3
enter
repnz
lcall
mov
nop
jnp
dec
cmp
fistl
int
xor
cwtl
fdivp
mov
push
rcll
adc
lea
sbb
pop
sub
int3
hlt
push
rcl
xor
das
xchg
shl
sar
jne
aam
mov
iret
lock
repnz
mov
cmpsl
sti
lcall
jae
push
shll
xchg
mov
aaa
clc
leave
ljmp
pop
inc
inc
js
paddsw
lds
xor
mov
jle
fsubs
cmpsl
mov
lods
sub
dec
ds
out
mov
iret
sbb
cmp
or
mov
pop
pop
dec
subb
aaa
inc
shlb
jo
xor
int
lret
sbb
dec
cld
stc
aam
pop
imul
cmp
sbb
xchg
or
and
call
mov
jmp
aas
sub
cmp
out
sbb
notl
xchg
add
fimuls
or
cmpsb
out
pop
jle
out
cmp
dec
ss
xlat
inc
je
jne
jo
jo
mov
test
mov
sub
adc
sub
mov
or
test
and
mov
xor
sbb
nop
cld
and
dec
out
mov
loop
das
cmp
mov
and
aas
loope
push
pop
jno
sub
xchg
pop
lret
push
jns
nop
jp
lods
pop
fistl
hlt
incl
push
sub
and
int3
inc
jg
cwtl
je
lret
xchg
xchg
mov
mov
js
mov
pop
sbb
call
push
cmp
les
push
insb
pop
ret
sub
es
pop
xor
mov
adc
es
loope
cmp
arpl
mov
lcall
xchg
rolb
pop
scas
xchg
test
cltd
mov
sub
jle
cltd
mov
jp
xchg
add
hlt
idivb
leave
dec
les
mov
or
mov
adc
iret
in
cmp
int3
test
scas
add
dec
test
loopne
pop
sbb
hlt
mov
scas
clc
add
xor
rcr
loop
addr16
mov
add
divl
xor
sarl
aas
std
mov
sub
out
xchg
cmpsb
push
add
fsubrl
hlt
fisubl
mov
and
jg
out
xchg
inc
fmull
int
jle
or
and
add
ja
je
sbb
cmp
xor
nop
roll
pop
xor
aam
dec
aaa
sub
enter
das
pop
sub
aas
fstpt
xchg
jne
and
push
jo
or
mov
sbb
out
and
imul
jg
lods
xorl
jns
bound
sbb
daa
jb
stc
mov
mov
dec
ds
test
call
dec
xchg
xchg
mov
mov
fbstp
clc
fs
out
jmp
shlb
dec
xor
mov
movsl
pop
das
adc
sub
jg
sbb
sbb
mov
xor
in
ss
sti
jmp
popf
xor
mov
or
sub
inc
shl
call
adcb
leave
mov
jne
out
or
jp
push
dec
mov
push
push
mov
jp
cmp
pop
in
or
mov
mulb
fucom
ficoms
mov
ds
lcall
mov
sbb
pop
in
sbb
jge
lret
dec
jmp
cmp
xor
js
je
mov
mov
test
push
mov
mov
or
addb
mov
fmull
ss
dec
mull
stos
pop
add
arpl
or
sbb
pusha
test
xchg
or
jnp
into
hlt
hlt
xor
scas
xor
jg
fs
test
imul
test
outsb
cs
mov
and
loope
les
jae
in
mov
push
jno
fdiv
jg
popf
add
jb
imul
dec
adc
shll
jo
pusha
cmp
mov
leave
sbb
inc
push
dec
push
jbe
hlt
js
shrb
mov
jecxz
cmp
add
les
xor
mov
stc
stos
mov
cmp
mov
or
or
enter
and
cmpsl
sbb
mov
jl
insb
mov
inc
push
out
clc
jbe
cmp
inc
das
jno
in
and
push
adc
jl
loope
jno
pop
mov
xchg
xchg
fsts
incb
daa
xchg
inc
push
repz
jmp
inc
pop
ljmp
inc
fpatan
das
and
leave
inc
push
add
inc
das
movb
jg
xchg
daa
roll
push
xor
push
stos
inc
arpl
leave
pop
inc
jae
shrl
clc
xchg
sub
testl
xchg
dec
movsl
jbe
lcall
pusha
rsm
push
pop
or
mov
jbe
ljmp
add
fwait
dec
mov
in
loopne
fldcw
push
add
idivl
into
push
lds
xchg
sbb
fidivs
cmp
add
ljmp
fnsave
jb
add
enter
out
loopne
add
repz
sub
in
xorl
leave
dec
cs
scas
ret
sub
lcall
xchg
xor
mov
popl
mov
sub
push
idivl
repnz
lock
adc
aas
cmc
push
fistps
sahf
jnp
mov
xchg
xor
mov
push
hlt
add
sbb
mov
inc
and
fsts
stos
dec
inc
jb
ss
or
mov
inc
push
imul
sub
pop
and
push
fcomps
scas
jg
hlt
loope
test
fisubs
and
pop
or
lcall
jno
pop
popf
data16
mov
cmp
fwait
movsl
clc
push
push
or
fstl
mov
mov
out
in
dec
aam
and
aad
ret
addr16
dec
enter
je
cmpsb
decl
add
adcb
inc
add
das
push
and
pop
inc
xor
pushf
xchg
or
xchg
xchg
push
mov
lods
cmp
push
ret
or
mov
repz
sbb
out
push
adc
pop
cmp
mov
test
mov
add
push
pop
cmp
out
xchg
rorl
stc
fisttps
and
insb
xor
xchg
mull
lcall
sbb
orb
push
daa
push
arpl
add
cmc
mov
in
sbb
scas
adc
xchg
xchg
push
sbb
adc
cmp
add
repz
ffreep
xlat
repnz
gs
lds
adc
xor
lods
sbb
fdivs
jno
fs
xor
rol
inc
add
or
push
inc
jmp
fadds
adc
adc
inc
cli
icebp
movsl
adc
pop
fdivrs
clc
pop
sub
sbb
mov
and
sbb
or
mov
and
aas
ljmp
adc
enter
adc
sub
nop
xor
push
pop
push
mov
in
push
sub
add
ret
lret
pop
insl
cmpsb
scas
ret
nopl
jb
leave
test
shll
dec
orl
mov
cs
xor
mov
stos
xlat
fcmovnbe
test
inc
cmp
jns
xchg
sbb
ds
cmp
sub
push
inc
pop
jecxz
and
xor
in
push
xchg
aaa
repnz
cmpsb
mov
and
repz
addr16
stos
shlb
mov
sbb
add
aam
or
push
dec
popf
sbb
call
aas
mov
mov
mov
dec
fwait
and
fcomps
pop
cs
out
xchg
out
xlat
jbe
dec
sbb
and
fdivrp
xor
xor
lods
sub
fldt
inc
test
jmp
data16
xchg
mov
adc
jg
jecxz
ss
inc
mov
sbb
outsl
xchg
enter
cmc
aam
fwait
push
mov
andl
sub
xchg
push
cli
rorl
pop
adc
push
ljmp
cmc
repnz
push
mov
or
movsl
cmc
xor
bound
sub
xchg
sub
xchg
push
cld
test
pop
insl
test
ss
jge
pop
mov
push
cld
daa
loope
cmp
sbb
sbb
jb
sbb
and
fsubl
insl
and
inc
nop
and
or
stos
adc
pop
mov
inc
das
jnp
aad
addb
mov
addb
aaa
mov
sbbb
push
add
and
xor
mov
xchg
pop
jnp
cmp
push
xor
in
inc
icebp
sub
stc
sub
andl
mov
dec
gs
dec
in
fisttpll
ret
stos
inc
aaa
dec
and
les
hlt
jo
lcall
rcr
sub
jbe
dec
out
and
fwait
mov
push
mov
pop
data16
add
fisubs
je
sbb
adc
sub
data16
imulb
jg
icebp
add
jg
into
jo
push
aaa
inc
mov
pop
sbb
cmp
xlat
xorb
cwtl
scas
add
sbb
dec
je
pop
push
push
call
mov
jg
lods
iret
mov
dec
jecxz
inc
ret
jnp
int
sbb
cmovb
xor
add
jnp
fs
pop
cltd
cli
pop
inc
jmp
pop
mov
data16
out
jecxz
sar
in
mov
pop
out
je
cmp
sub
mov
mov
iret
nop
subl
ret
addr16
ret
sti
dec
pop
fidivrl
repz
cmp
xor
lea
pushf
shr
nop
jmp
int3
imul
aas
flds
adc
dec
xchg
sar
roll
jae
test
lods
cmp
sbb
mov
ja
data16
xchg
aam
cli
jg
jno
jmp
adc
dec
enter
sbb
and
lods
push
adc
lcall
sub
sbb
add
jb
jne
jns
adc
rolb
outsl
fnstcw
sti
into
xchg
fcmove
pop
add
push
pushf
imull
shlb
and
movsl
mov
push
lods
stos
daa
sahf
je
pop
test
fidivl
scas
jo
je
pop
mov
jno
cli
pop
fiaddl
and
shrl
lret
cmp
shlb
shrl
push
or
sahf
jl
mov
mov
test
sub
xchg
mov
out
scas
sbb
inc
push
dec
in
in
push
or
cli
lds
addr16
outsl
dec
push
pusha
fadds
mov
xchg
mov
repz
imul
leave
mov
mov
cmp
lcall
in
data16
pop
je
mov
cmp
and
push
push
mov
test
mov
movsl
pop
cmp
and
and
or
sti
or
xchg
cwtl
xchg
sbb
jne
sub
xchg
adc
mov
sbb
pop
in
mov
shll
icebp
test
int
cli
into
xchg
insl
sarb
adc
int
out
push
add
test
xchg
adc
jg
push
int
sbb
add
add
cld
mov
inc
adc
fidivl
sub
es
fisttpll
push
inc
xchg
xlat
cs
sub
xor
cld
les
sub
inc
push
xor
in
or
hlt
push
bound
xchg
fdivl
test
int3
mov
std
test
xor
fisttpl
cli
cld
add
inc
mov
push
mov
mov
xchg
mov
mov
sub
adc
flds
int3
jg
in
iret
ret
ficoml
std
pop
mov
xchg
int
mov
rclb
scas
aaa
push
dec
add
add
rol
sbb
cmp
scas
mov
sbb
aam
push
sbb
pop
into
cmp
xor
xlat
sub
dec
sbb
fldcw
push
or
stos
out
adc
or
stc
out
int
adc
inc
cwtl
push
push
mov
jae
jp
pushf
xor
mov
dec
or
es
jmp
hlt
test
mov
rclb
out
xchg
mov
mov
out
cmc
mov
test
jbe
jnp
jge
sub
mov
xchg
enter
mov
das
mov
jmp
lea
pushf
arpl
stos
mov
xor
xchg
ss
fistpll
rcr
ret
bound
push
loope
mov
mov
mov
ret
lret
inc
or
adcl
insb
shll
test
sbb
or
out
stos
test
jle
pop
lds
mov
sub
int3
dec
pushf
inc
dec
pop
lds
dec
popa
mov
xchg
lahf
inc
les
mov
cmp
into
mov
sbb
cmc
lcall
pop
and
movsl
jns
xchg
cmp
pop
ror
push
sahf
out
repnz
push
mov
add
loop
and
add
xchg
out
and
dec
mov
jne
lods
xchg
stos
aas
push
add
and
and
inc
add
bound
in
push
into
por
cmp
pop
or
call
adc
push
push
les
inc
sbb
and
mov
pushf
sbb
add
mov
mov
jmp
fstpt
fistl
xor
or
pop
cmp
out
bound
mov
jno
aad
lcall
aam
xchg
push
ss
adc
scas
std
add
pop
icebp
xor
pop
push
jb
xor
insl
je
add
ss
mov
dec
inc
cmpsb
xor
xchg
cmp
lods
ret
cmp
push
jb
sar
fnstcw
ret
pop
mov
push
cltd
sub
clc
and
out
dec
cmp
cmp
pop
ljmp
mov
mov
add
fs
daa
sub
dec
push
lods
pusha
outsl
aam
dec
sbb
sub
xchg
clc
mov
loope
push
cmp
or
sub
push
out
aaa
sub
jne
int3
roll
add
orb
mov
in
scas
int3
lret
jge
mov
pop
aaa
cmp
and
incb
shl
and
jp
out
xchg
xchg
jmp
lock
sub
shll
sbb
stc
pop
and
mov
stc
inc
popa
jmp
rclb
test
push
jae
push
sbb
popa
shr
ds
nop
hlt
push
cltd
and
mov
cltd
imul
loope
mov
decl
aam
fwait
xor
jmp
fs
je
jae
ret
or
adc
sub
jge
cmpsl
xlat
test
inc
xchg
daa
mov
mov
inc
add
inc
aas
add
cmp
hlt
adc
sahf
sub
test
std
test
scas
fwait
addr16
cmp
stos
loop
adc
imul
jle
jno
cmpsl
and
add
adc
loopne
jae
out
test
cmp
xor
ljmp
xchg
or
mov
adc
pop
imul
add
push
and
out
sub
hlt
or
mov
mov
jecxz
outsb
and
adc
mov
mov
add
push
pop
fwait
jl
in
xor
dec
and
ljmp
out
mov
add
in
bound
xchg
addr16
dec
ljmp
lods
pop
insl
cltd
dec
int
mov
out
dec
fwait
add
lcall
jns
pop
outsl
pop
xchg
outsl
and
jnp
sub
icebp
xchg
pushl
adc
ret
repz
xor
or
sbbb
daa
bound
cmp
aaa
int
loope
push
orb
enter
int3
pop
jle
add
pop
cmp
outsb
mov
fcomps
cmp
jge
or
mov
pushf
jns
mov
arpl
adc
lock
mov
jns
mov
adc
fildl
push
pop
mov
pop
jl
andb
jnp
mov
stc
daa
cmp
sti
outsb
lock
xor
leave
push
and
rcr
mov
xchg
test
fnsave
push
fucomip
out
cmp
test
push
adcb
cltd
inc
add
dec
lcall
fildl
push
outsb
into
add
bound
mov
pop
imul
xchg
imul
xor
xorl
inc
flds
jnp
int
stos
out
lcall
popf
aam
mov
fs
fldl
rcrb
popf
fwait
adc
cmp
xlat
nop
push
test
mov
ss
fwait
cmovl
jne
adc
fs
int
icebp
or
push
dec
add
movsl
dec
cwtl
jp
cld
dec
arpl
jle
inc
fisubrs
jg
adc
cmpl
in
addl
jecxz
xchg
stos
or
and
pop
push
push
adc
sbb
sahf
sbb
into
mov
cs
cmc
cli
outsl
push
mov
mov
adc
mov
shr
call
lea
imul
cmp
je
pushf
inc
jecxz
idiv
daa
or
aam
repnz
push
test
insl
lock
stos
dec
sbb
cmp
repnz
mov
fsubrl
iret
xchg
mov
pushf
in
jp
popf
inc
xchg
cmp
add
push
insl
inc
pcmpgtw
or
dec
popa
push
push
xchg
mov
mov
in
ja
xchg
jecxz
decl
push
inc
adc
ret
jbe
stos
pop
jnp
cwtl
sbb
inc
mov
mov
mov
jecxz
push
jno
sub
xchg
les
pushf
into
sti
and
in
push
xorb
sbb
cmpsl
bound
xor
testb
test
dec
int
push
pop
ret
inc
mov
insb
push
outsb
clc
push
bound
or
sbb
xchg
insb
pop
daa
repz
loope
shrl
add
inc
cmc
pop
inc
shlb
mov
stos
pop
push
jl
jl
scas
mov
xlat
rcr
xor
jns
int
sbb
jo
cmc
stos
stos
xlat
test
sbb
je
jnp
cltd
fs
jmpw
rolb
dec
and
and
or
push
push
arpl
jbe
loope
add
pop
or
mov
cmp
fists
xchg
leave
lock
ljmp
dec
lret
mov
mov
std
push
inc
xor
sub
mov
addr16
pop
xor
pop
movsl
mov
xchg
sbb
mov
jns
mov
or
sbbl
dec
sbb
jb
sub
mov
cltd
divl
or
mov
loop
popa
out
aam
inc
xchg
movsb
andb
out
shlb
lahf
cmpsb
jo
leave
mov
int
inc
pop
mov
rep
loopne
cld
or
int
inc
stos
pushf
push
outsb
mov
icebp
or
dec
std
sbb
sub
int3
adc
das
cmpsl
mov
push
ret
xchg
fldenv
mov
mov
jne
add
rorb
int3
mov
in
fwait
pop
aam
es
xor
test
cmpl
mov
xchg
cmp
and
mov
leave
xchg
ds
cmp
cli
cmpsb
shl
mov
add
sub
call
sbb
push
pushl
lret
and
xor
fs
mov
xor
hlt
rcrl
sub
dec
jne
test
test
jmp
lds
les
pop
stos
xor
cli
popf
add
lahf
std
and
pop
inc
jno
push
push
pop
fcoms
pop
push
mov
cmp
mov
fildll
dec
inc
in
dec
xor
aaa
cmc
mov
fists
imull
inc
jbe
les
xchg
test
rcll
ror
mov
adc
cld
jmp
out
jecxz
into
pushf
cltd
sti
subl
mov
push
mov
jmp
aaa
dec
lock
aas
add
sbb
and
add
fldt
pop
cmp
jge
sub
sub
sub
adc
mov
pop
movsl
jp
ja
or
mov
jae
popl
push
dec
cs
sahf
or
enter
rorl
and
int3
mov
dec
insb
and
push
popa
mov
mov
mov
xor
cwtl
lods
lods
sub
es
addr16
nop
inc
scas
cmp
adc
mov
pushf
jmp
and
add
pusha
dec
lods
cmp
call
or
mov
loop
mov
out
pusha
aad
push
outsl
dec
insl
pop
mov
gs
outsl
nop
jle
ja
fwait
inc
dec
sti
sarb
pushl
cmpsl
xchg
pusha
inc
jo
cltd
int
cmp
sbb
loope
hlt
pushf
xchg
je
ja
push
xchg
mov
fs
stc
ja
lea
mov
cmp
call
add
push
xor
aas
cwtl
jne
jbe
int
jg
lea
movsb
sub
popf
imulb
sub
test
ljmp
pop
pop
daa
lods
xchg
inc
sub
fwait
sahf
shr
jb
xchg
xlat
lret
pop
test
addb
insb
sbb
sahf
mov
jmp
mov
cli
sahf
mov
int
and
xchg
std
outsl
mov
cmp
shll
test
pop
shll
cld
push
enter
pop
lds
int3
mov
xlat
mov
sub
stos
repnz
sub
mov
lds
mov
dec
mov
and
repnz
and
arpl
xchg
into
sahf
mov
jns
sbb
push
fs
call
xor
das
push
jo
stos
cmp
lods
leave
cwtl
mov
mov
pop
in
xor
leave
rclb
mov
jo
nop
int3
sub
lock
dec
cmc
mov
push
out
inc
jle
mov
loopne
jb
sub
xchg
mov
mov
add
sbb
aas
addr16
rcrb
dec
push
test
xor
cmp
mov
sub
xor
dec
daa
aaa
push
adcb
insb
and
data16
imul
mov
lret
cmp
mov
int3
xor
iret
xor
sub
loop
outsl
es
sbb
sub
out
xchg
sub
loope
loop
je
dec
cmpsl
dec
sub
mull
push
xchg
sub
arpl
inc
add
mov
or
cwtl
loop
mov
cmp
stos
mov
pop
mov
mov
stos
cmp
iret
dec
faddp
sub
add
mov
pushf
mov
mov
out
inc
fnstenv
stc
mov
popf
cmpsb
jmp
add
popf
adc
daa
filds
fdivrl
add
mov
xor
fsubrl
add
and
xchg
adc
mov
adc
outsl
mov
push
popa
inc
into
rorl
cmc
or
and
mov
aaa
xchg
xchg
popf
fs
daa
adcb
cmc
andl
fdivrp
ljmp
loope
cmc
fs
mov
inc
push
dec
lods
push
mov
decb
pop
cmp
and
addr16
sub
into
pushf
jb
sbb
push
popf
int3
outsb
add
dec
push
adc
aad
test
push
xchg
fwait
xchg
inc
xchg
xchg
jno
mov
pop
fisubrs
sub
lods
fs
jno
add
cli
fcoml
loop
mov
mov
pop
bound
lea
addl
pop
pop
pop
or
jno
daa
pop
loope
inc
push
rcl
es
and
hlt
popa
xor
sub
adc
cmp
push
mov
pop
push
xor
dec
pop
sub
xor
sub
lret
inc
aad
out
out
add
test
repz
mov
xor
or
inc
xor
loope
test
or
cmpsl
pop
mov
movsb
outsl
mov
shll
mov
mull
lahf
mov
dec
dec
or
insb
out
inc
mov
mov
out
popf
and
fbld
pop
cmpsb
pop
jle
aad
loop
xor
mov
add
sbb
sarb
mov
add
push
mov
dec
xor
pushf
or
data16
sti
jge
mov
sahf
in
sub
mov
jle
jg
movsb
aaa
gs
into
xchg
mov
scas
ret
jne
pop
in
imul
in
mov
sbb
push
cmpsl
sbb
scas
pop
stc
inc
sub
outsb
stc
and
gs
mov
jo
std
or
in
cli
add
cmpb
cmp
aam
dec
dec
add
jo
in
add
cmp
shr
dec
mov
int3
push
icebp
mov
cmpsl
in
pop
fs
shlb
rcrl
adc
cld
bound
or
fisttpll
outsb
xchg
inc
sahf
cmp
pushf
inc
xchg
ret
iret
xchg
mul
push
add
sbb
flds
mov
outsl
push
pop
push
lahf
ja
push
xor
dec
or
hlt
shll
icebp
shl
call
es
dec
cmp
mov
mulb
pop
aam
cwtl
in
pushf
cs
mov
rorb
mov
sub
popa
fwait
inc
aas
clc
test
cmp
scas
dec
inc
int3
adc
inc
xchg
jmp
mov
or
jb
orl
cmc
sti
inc
sub
sbb
lock
pop
xor
add
add
cld
pop
mov
test
dec
pusha
sbb
sahf
enter
cmp
mov
adcb
mull
push
adc
and
push
sbb
shl
inc
push
es
jmp
lret
aaa
lock
xorl
stos
mov
push
shl
into
loope
cmpsb
imul
fidivrs
hlt
lock
pop
fwait
in
scas
xchg
adc
push
jae
cmp
inc
std
jne
repnz
cltd
mov
cmp
out
into
or
xrelease
stc
fdiv
jecxz
in
push
adc
dec
sub
cltd
jne
hlt
outsb
xor
sbb
cld
pop
clc
lds
sub
fcom
add
pusha
aam
scas
stos
adc
sbb
imul
sahf
sbb
lcall
add
je
mov
xchg
and
scas
dec
xor
xchg
jecxz
add
push
pop
sahf
dec
imul
stos
cmp
inc
imul
popf
push
js
push
lods
pusha
shl
aam
cmp
or
inc
add
adc
popf
ret
jp
imul
cmp
sub
inc
or
lret
jge
jbe
hlt
cmp
scas
int
sbb
movsl
sbb
jmp
fsubrp
stc
pop
in
push
sub
mov
push
dec
jo
xchg
add
cmp
dec
jo
int
cltd
mov
test
aam
sbb
xor
jns
xor
imul
and
out
mov
clc
mov
jg
popa
repz
icebp
out
rcrb
imul
shrl
vandps
ss
mov
cmc
lods
push
or
and
cmpb
adc
je
mov
push
xor
cmpsl
repz
xchg
mov
insb
mov
je
and
pop
int
sub
ljmp
jae
sar
je
mov
fimull
pop
sbb
call
inc
aam
lcall
jns
scas
insl
adc
push
cmp
out
fwait
xchg
divl
call
lock
xlat
xchg
jmp
pop
mov
out
aas
test
aas
imul
pop
cmp
xor
mov
push
decl
dec
jge
leave
repnz
sbb
xchg
sbb
mov
push
jmp
pop
orb
insl
jo
testl
cmp
fnsave
pop
cmp
mov
mov
add
testl
mov
jo
xchg
cmpsl
jnp
xlat
cmpb
inc
lret
sahf
mov
loope
cli
add
adc
xor
leave
xchg
divb
testl
cs
push
jecxz
popf
dec
adcb
out
or
pop
adc
pop
cltd
loopne
shl
xchg
pop
push
std
sarb
push
test
testl
add
sub
test
lret
push
adc
dec
leave
adc
xor
pop
mov
mov
cld
dec
jne
mov
and
in
jnp
rcl
ss
test
dec
imul
or
push
jb
sti
dec
mov
mov
mov
nop
xor
xorl
mov
push
aaa
in
outsl
pop
scas
ja
shl
call
aad
jnp
push
mov
dec
pushl
sub
rep
mov
ret
mov
lods
stos
cli
inc
jbe
ljmp
pop
pop
loope
adc
dec
sbb
and
mov
xchg
fistpl
or
mov
loopne
daa
movsb
dec
and
dec
addr16
fistl
mov
sub
in
gs
adc
js
repz
jmp
icebp
add
cmp
xor
jp
mov
cwtl
hlt
test
pop
getsec
or
jg
mov
inc
mov
rolb
lea
xor
cmpl
in
adc
jp
cmpsb
subb
and
mov
cmp
push
fimuls
fcomps
pop
xchg
mov
aas
push
ficomps
stos
cltd
loope
addb
sub
mov
inc
mov
jmp
dec
aam
lods
push
lahf
dec
dec
fists
insb
rcll
fisttpl
add
sbbl
xchg
sub
cld
sbb
mov
or
adc
push
leave
push
loopne
pusha
cmpsl
imul
insl
js
xchg
xchg
frstor
addr16
xchg
int
mov
mov
jecxz
add
inc
decb
aas
xchg
jg
data16
in
js
mov
daa
or
out
out
mov
sbb
int
mov
fidivl
mov
cwtl
push
add
pop
mov
lods
xor
add
xchg
adc
cmp
movsw
out
inc
mov
dec
sbbl
mov
popf
ret
dec
sub
push
jno
cs
add
lods
fsts
scas
stc
mov
inc
mov
sar
cmp
cmpsb
mov
dec
jge
fiaddl
in
pop
push
addr16
pop
icebp
lcall
ja
sbb
push
fidivrs
in
test
mov
mov
out
sub
add
mov
das
mov
notl
cld
es
mov
pop
xor
popa
mov
sub
ds
stos
cltd
bound
cli
inc
jnp
pop
shlb
xchg
outsb
dec
xor
xchg
cmpsl
lahf
les
push
addr16
pop
and
lock
enter
data16
pop
lahf
pop
stos
xchg
ljmp
and
mov
add
inc
push
xor
mov
lods
enter
sahf
adc
jle
icebp
idivb
add
shlb
mov
stc
icebp
orl
lods
and
add
ret
adc
decl
jp
adc
rcrb
mov
mov
xchg
adc
mov
insb
mov
mov
jl
or
jmp
comiss
out
mov
adc
rcrb
or
stos
add
jmp
push
jp
or
sub
sub
imul
bswap
mov
xor
push
in
fwait
shrb
xchg
xchg
push
push
add
dec
mov
mov
sub
push
mov
lea
xchg
les
ds
and
push
aam
shlb
sbb
lahf
inc
pop
mov
bound
mov
cltd
pop
push
adc
daa
inc
rcll
pop
and
dec
cmp
dec
mov
fwait
and
adc
mov
inc
ret
fimull
pop
dec
inc
pushf
pushf
cmp
xchg
or
ljmp
jo
fcoml
insl
imul
out
inc
shll
fidivrs
jne
movups
mov
pop
out
test
dec
ret
test
pop
or
xlat
dec
fs
jecxz
fstps
insl
adcb
insb
fidivrl
shlb
sbb
lods
xlat
data16
lea
mov
imull
xor
adc
push
sub
or
repz
leave
xorl
inc
mov
push
xchg
pop
popf
dec
shr
stc
add
pop
mov
sub
nop
loopne
dec
or
sbb
and
cmp
mov
lret
pop
jmp
and
cmp
push
mov
jb
gs
xor
inc
mov
sub
mov
stos
push
xlat
imul
mov
lods
or
add
jb
cltd
mov
xor
or
push
jnp
mov
push
lds
cmpsb
mov
add
adc
jnp
sub
sub
jnp
insl
ret
pop
or
cmp
cmpsb
scas
loopne
mov
add
outsb
into
xchg
loopne
fidivrl
jbe
out
xchg
mov
imul
das
and
outsl
rolb
test
mov
xchg
addr16
cmpsl
sub
jae
das
adc
xor
clc
push
jg
fcoms
cmp
clc
aaa
jae
scas
cmp
dec
shll
mov
je
shlb
or
xchg
push
and
jecxz
sarl
inc
testb
shlb
push
push
fsubrp
rcrl
adc
in
xor
mov
lret
mov
pop
test
out
std
pop
mov
sbb
das
sub
mov
sti
mov
sub
cmc
cmp
add
test
sarl
negb
cmpsb
pop
lret
in
cltd
lahf
les
and
sub
or
sbb
sbb
sub
inc
sbb
ret
cmpsb
ss
mov
push
fildl
adcb
jl
pop
das
pop
shrb
clc
inc
xor
lods
dec
es
filds
xchg
push
mov
ret
stc
rorb
aaa
push
and
sbb
sarb
arpl
mov
or
lcall
cmp
xchg
nop
pop
sbb
dec
aam
lds
idivl
out
push
pop
jne
and
jge
incb
shl
add
mov
decb
jnp
popf
addb
lret
inc
inc
out
lea
outsb
and
cmpb
les
sbb
cmpsl
lds
xor
jp
repnz
fsubrs
lret
repnz
sub
lret
iret
xchg
es
and
add
mov
lcall
xchg
sub
outsl
scas
cmpsb
xchg
imul
sbb
xchg
sahf
or
popa
inc
fsts
xor
sbb
xchg
xor
stos
push
sub
test
mov
int
ljmp
sbb
sahf
jno
jnp
flds
ss
out
xchg
pop
enter
aad
mov
leave
or
xchg
test
mov
mulb
cmp
jecxz
sti
icebp
adc
mov
jbe
mov
aas
or
out
push
sub
andb
fsub
scas
test
cs
sub
adc
add
pop
daa
xchg
xorb
adc
pop
in
fistl
adc
jno
mov
sbb
es
jo
icebp
push
aaa
pop
cli
fstpt
mov
scas
pop
insl
xchg
jp
lods
push
cmpl
in
scas
sbb
sub
clc
sbb
xchg
adc
daa
imul
mov
hlt
sbb
addr16
mov
mov
pop
pop
addl
out
mov
gs
jle
iret
xchg
pop
adc
ja
mov
jp
mov
cltd
xchg
aam
inc
add
mov
dec
ret
mov
sub
dec
adc
jg
inc
in
pop
mov
cmpsb
sbb
ret
sub
testl
shll
outsb
jp
std
jl
mov
jns
rorb
fildll
push
xlat
xchg
xor
jne
incb
cmpsl
sub
cmpsl
data16
in
fmul
inc
leave
fmul
and
xchg
push
dec
fisttpll
roll
push
stc
loopne
pop
dec
ret
cmp
stos
es
sbb
xchg
xor
inc
fiaddl
fwait
mov
mov
daa
pop
mov
jnp
aaa
cmc
fisttpl
xor
xchg
xchg
fildl
jp
ds
add
cld
or
push
imul
push
pushf
clc
pushf
lds
scas
add
imul
je
push
repz
sub
aas
inc
mov
and
adc
mov
push
and
lcall
inc
adc
nop
movsl
mov
lahf
je
bound
pop
mov
mov
lcall
jle
js
repz
push
arpl
out
and
push
lret
into
cmp
sub
loope
sub
xor
ficoml
into
out
inc
jbe
push
xor
lea
and
xchg
sti
mov
cmovbe
std
and
stos
push
mov
xor
fbstp
fwait
nop
fnsave
inc
xchg
and
in
and
loopne
cmp
push
push
mov
in
subl
push
stos
inc
lret
pop
das
push
and
je
pop
icebp
xor
jae
movsl
test
adc
push
mov
stos
pop
cwtl
outsl
aaa
insl
mov
ficoml
cli
cmp
xor
in
or
in
sbb
int
and
mov
std
mov
in
arpl
adc
push
and
xchg
pushf
mov
mov
mov
dec
repz
sbb
mov
and
dec
xor
in
cwtl
mov
xor
repz
movsl
sbb
jb
push
pop
jnp
mov
aaa
enter
clc
fidivs
cmp
out
les
inc
ds
mov
mov
push
inc
sub
jae
repz
outsl
adc
aaa
stos
mov
jp
and
in
xchg
jno
cli
xor
ljmp
int3
and
movsl
mov
xor
scas
pmaddwd
mov
pop
in
test
adc
inc
xor
es
push
out
arpl
and
adc
lahf
lahf
fwait
mov
add
mov
inc
or
and
push
mov
inc
andb
push
insb
sbbb
sbb
mov
lret
mov
adc
sahf
loop
xchg
popf
lea
mov
sbb
pop
orb
enter
sbb
push
stos
or
mov
or
ds
cwtl
pushf
mov
cli
push
sahf
inc
arpl
mov
sub
in
scas
add
test
lods
test
lock
add
stc
push
add
jns
cmp
and
mov
mov
fistl
mov
popa
mov
add
lock
push
lret
arpl
fmull
test
addr16
dec
pop
mov
or
ljmp
in
push
xor
push
adc
cmp
sub
imulb
sub
mov
push
mov
subl
clc
xor
das
add
xor
push
call
push
test
popa
std
jne
das
xchg
mov
inc
mov
add
push
sub
lds
arpl
fimuls
mov
arpl
jl
inc
pop
pop
jno
mov
scas
push
sub
lds
nop
test
mov
jge
test
mov
fidivrs
lahf
sub
in
adc
test
out
push
out
outsl
rcr
xchg
push
pop
push
imul
mov
stos
stos
lock
enter
insl
call
sahf
stos
mov
sub
sub
stos
dec
inc
fisttps
cwtl
adc
pusha
mov
hlt
cs
dec
mov
mov
aaa
lods
ss
lds
mov
xor
adc
adc
inc
pop
jns
sub
xchg
mov
push
loopne
mov
or
adcl
xor
jmp
fstl
sbb
push
push
pop
rcrb
dec
mov
enter
sub
inc
cwtl
int3
in
or
gs
xchg
arpl
aad
push
xorl
int
hlt
loop
ret
lock
pusha
jns
out
lock
push
leave
xchg
mov
out
sarb
add
data16
jae
das
jno
push
inc
jge
push
ss
stos
or
mov
xchg
or
outsl
and
and
nop
lods
pop
adc
or
sub
rcrl
push
or
sti
pop
ljmp
testl
or
into
nop
into
jb
rorb
les
sub
push
iret
ret
sbb
cmp
insl
sub
inc
cmp
inc
shr
enter
mov
jns
les
mov
pushf
pop
add
and
push
fisttpl
in
sbb
add
jg
fwait
xor
stc
sarb
leave
addr16
cmp
ret
inc
and
lahf
inc
das
lahf
and
nop
lret
xlat
and
iret
push
insl
sbb
mov
pop
loopne
out
and
icebp
adc
testl
adc
push
or
adc
push
mov
in
ss
inc
pop
nop
jecxz
testb
mov
stos
test
sub
push
xchg
icebp
adc
or
pop
jge
add
flds
loope
xlat
sub
cmp
std
jecxz
add
mov
insb
jae
mov
xor
push
mov
fstpl
aad
inc
push
inc
pop
or
add
movsb
rcr
ljmp
fsts
call
jbe
int
xchg
sbb
add
leave
sbb
push
xchg
xor
ret
xchg
xchg
lods
xchg
mov
orl
in
inc
loopne
fsubrl
ficoms
dec
lret
cmpsl
pop
and
subb
insb
push
faddp
out
and
clc
xchg
sbb
sub
test
movsl
mov
mov
arpl
ficomps
adc
jnp
push
mov
pop
mov
mov
ljmp
add
scas
push
sbb
add
imul
inc
sub
push
dec
loopne
loop
stc
push
scas
push
add
loop
enter
movsl
add
adc
dec
adc
mov
cmp
jle
xor
in
aam
sbb
mov
xchg
xchg
stos
out
or
xchg
pop
xchg
jbe
pusha
cmp
push
adc
xor
xor
pop
pop
in
mov
ficompl
lret
xchg
pop
push
mov
xor
inc
lret
aad
xor
push
cwtl
mov
cmpsb
outsl
fwait
push
pop
cltd
enter
adc
or
dec
fwait
mov
insb
xchg
jae
sbb
inc
sarb
push
pop
aam
jb
ret
ja
movsl
pop
in
adc
dec
mov
loop
add
and
sahf
jecxz
popf
out
mov
sub
push
lret
outsb
pop
subl
mov
ja
imul
jnp
mov
cltd
je
loop
sbb
iret
pop
mov
pusha
add
sbb
lcall
lcall
mov
in
add
mov
mov
lock
int
rcr
sub
rolb
lahf
fsts
cmp
push
repnz
cmp
cld
and
call
cmp
mov
cmpl
or
xchg
add
jne
je
add
xchg
add
das
int
jecxz
das
mov
test
mov
inc
xchg
aas
cltd
sar
scas
add
test
inc
or
push
popl
sbb
out
fsts
icebp
test
dec
push
popa
mov
jb
jg
push
dec
sbb
add
pop
ret
enter
push
inc
mov
rcl
jo
xorl
mov
or
mov
cli
in
and
jl
xor
inc
cli
mov
lret
shl
movl
push
mov
adc
xchg
iret
insl
in
cmp
fstpl
push
enter
mov
shlb
mov
fwait
jl
in
or
mov
stos
cld
decb
test
js
mov
and
nop
testb
mov
or
hlt
loop
std
mov
in
repnz
movsb
sbb
out
xchg
and
inc
mov
fsub
fs
enter
stos
pop
adcb
ja
sbb
cmp
add
movsl
adc
fimuls
jo
sub
push
jmp
xor
pusha
nop
bound
jbe
push
sti
repz
imul
loope
inc
push
mov
cmp
stos
jmp
mov
test
jp
cmp
mov
stos
jbe
arpl
movsl
scas
stc
and
mov
lds
ror
repnz
or
adc
cltd
push
js
add
mov
outsl
mov
fcmovu
mov
jmp
fcmovnbe
call
mov
or
in
push
xor
pop
pop
or
rol
ja
add
mov
cmpsl
inc
xchg
push
mov
cmp
mov
cmpsb
mov
add
shl
scas
insb
cmp
xor
jnp
pop
int
mov
mov
and
lret
outsb
or
cmpsb
jnp
jg
adc
popf
lea
or
mul
idivl
xor
leave
mov
movsl
fwait
lock
fisttps
lret
push
dec
negb
cltd
aad
mov
xor
test
jg
and
dec
cltd
mov
in
or
adc
movsb
adc
jno
lret
lea
popw
jno
sbb
mov
push
cmp
cwtl
inc
jae
jae
leave
push
out
in
dec
dec
outsb
add
jmp
sub
leave
dec
test
push
mov
jmp
pop
lret
jb
ja
fs
inc
stos
jge
outsl
cld
pop
shrl
push
mov
rol
inc
addr16
jb
loopne
dec
mov
mov
xchg
mov
out
xchg
cmp
pop
or
cmc
inc
loopne
shlb
popf
int3
or
mov
pop
mov
cmp
mov
rorl
popf
loop
dec
jmp
testb
dec
sbbb
jae
jl
fwait
cmpb
das
mov
adc
jnp
inc
or
popf
xchg
xor
incl
ss
mov
xlat
mov
pop
mov
js
and
sub
push
ja
scas
loopne
push
out
sub
in
pop
inc
rcrl
push
add
and
push
fs
nop
test
mov
repz
pushf
jl
add
dec
cmp
add
pop
fsubrs
inc
sbb
or
sbb
jge
add
lds
je
sbb
push
cmp
rorl
pop
test
outsb
jl
xchg
mov
sub
or
mov
push
cwtl
cli
xor
mov
cmpsb
movsl
loopne
pop
jb
adc
popl
xor
or
loop
jp
cmp
mov
sbb
jno
mov
dec
or
mov
imul
xchg
roll
xchg
call
inc
orl
pop
sbb
fnstcw
pop
cwtl
in
cltd
xor
add
or
cltd
cld
iret
leave
jnp
mov
mov
jns
sub
test
ret
jno
cmp
mov
sub
sbb
bound
in
repz
dec
lods
rorl
inc
push
sub
mov
cs
inc
pop
jmp
sub
daa
shll
mov
dec
lahf
fsubs
pop
push
gs
xchg
add
adc
pop
out
mov
bound
mov
jae
mov
out
push
adc
push
test
scas
into
push
sahf
pop
push
das
ret
out
scas
cwtl
notl
or
jns
test
xor
int3
hlt
lock
loope
adcb
pop
dec
cmp
test
dec
std
mov
leave
sub
jg
jae
dec
inc
push
test
jp
dec
mov
testl
aaa
sbb
cmp
mov
jl
mov
roll
gs
fstl
sti
and
inc
mov
in
adc
adc
sbb
bswap
in
aam
adc
xchg
or
jge
into
pop
shlb
imul
add
enter
push
and
lcall
jmp
test
rcrb
xchg
xchg
negl
jnp
sbb
add
cmpsb
add
xchg
xchg
lea
je
pop
sbb
outsb
pop
shlb
sbb
popf
sub
nop
add
push
dec
adcl
or
and
imul
pop
outsb
mov
and
add
dec
inc
in
cmp
andl
shll
mov
dec
loope
nop
stos
lea
lds
sub
icebp
ror
insl
dec
mov
push
std
jecxz
in
push
sbb
mov
int
inc
xchg
outsb
ljmp
pop
cmp
adcb
mov
push
ljmp
push
fiaddl
stos
inc
imul
lcall
aaa
jbe
mov
js
push
lods
ffree
out
test
test
imul
movsb
jle
sub
pop
dec
xorl
and
int
pop
ljmp
cld
mov
popa
mov
je
outsb
data16
in
add
outsb
mov
jp
cmpsb
test
mov
icebp
pop
ret
add
in
adc
mov
cmp
call
sahf
add
cmpsl
aaa
popf
out
dec
pusha
fwait
hlt
mov
inc
call
fildll
pop
jg
xchg
jns
pop
daa
adc
inc
lret
push
cmc
and
mov
mov
adc
jnp
mov
pop
sbb
mov
lcall
lahf
stos
repz
call
je
lret
rol
push
nop
fimull
mov
lods
mov
cltd
dec
daa
test
lret
sbb
sti
into
mov
jle
addb
loopne
mov
xchg
add
insb
pop
cwtl
sbb
mov
sbb
or
cs
xchg
repnz
bound
cmp
in
jecxz
jl
inc
cmp
cmp
cmp
movsl
xchg
subb
nop
pop
fstl
rcr
sbb
sbb
inc
pushw
inc
xchg
jbe
es
dec
cmp
pop
mov
insb
push
inc
xor
dec
jecxz
pop
add
sbb
mov
gs
sbb
push
arpl
lea
jno
sbb
cltd
stc
inc
dec
sub
std
xor
push
stos
lret
mov
in
out
push
and
sub
icebp
sahf
mov
je
in
xor
repnz
fidivl
in
es
insl
in
icebp
inc
jne
test
int3
or
xchg
popf
pop
jl
cwtl
testb
adc
test
lods
cltd
sbb
clc
xor
std
xchg
out
nop
or
jmp
andl
adc
pop
sbb
out
divl
mov
and
nop
scas
xchg
xor
js
bound
subps
mov
push
stos
out
ror
ja
pop
cli
insb
pop
mov
orb
int
ss
pop
insb
mov
or
fcomps
retw
cmpsl
pop
sub
shlb
inc
gs
insl
lods
push
xchg
adc
mov
add
xchg
or
icebp
xor
sbb
cwtl
add
mov
hlt
outsb
sub
jecxz
ffreep
sbb
dec
jle
cmp
std
jnp
cmp
in
cmpsb
pop
sub
in
mov
cwtl
pop
outsl
into
cmp
cmp
aas
sub
loop
push
call
notl
mov
sbb
mov
or
dec
aas
mov
adc
sub
movsb
xor
sti
ret
mov
jl
pop
lods
mov
rcr
cli
push
fwait
jbe
ret
dec
sub
lods
and
fisttpll
cmpsl
and
sahf
inc
mov
push
add
lock
leave
repz
inc
xchg
pop
cmp
addr16
mov
cmp
leave
leave
mov
loopne
out
pop
cmpb
jle
jne
pop
movsb
outsb
sub
mov
pop
mov
sbb
enter
add
std
mov
aas
mov
aad
dec
ret
push
movsb
mov
xor
inc
xchg
cmp
push
fldt
addl
les
mov
sbb
sbb
insb
imul
xor
popf
jns
fdivrs
sbbl
jns
xsha256
cmpsb
adc
fildl
pop
inc
lds
das
scas
fwait
xchg
hlt
jns
dec
sbb
mov
push
out
jno
jle
jno
dec
movsb
fimuls
addb
mov
mov
jo
cmp
bound
stos
xchg
dec
cmc
push
scas
imul
jg
out
es
fsubrs
js
dec
ret
pop
bound
xchg
sbb
in
fbstp
mov
dec
mov
inc
clc
mov
lret
andb
fcoms
test
cwtl
mov
cmpsl
xchg
pop
push
in
pop
mov
cmp
inc
mov
pop
mov
adc
aam
ror
adc
jns
inc
add
jbe
scas
push
gs
hlt
fnsave
in
dec
jo
pop
loopne
popf
ljmp
test
lahf
dec
jb
daa
mov
ss
inc
fistps
push
lret
sbb
push
jmp
test
adc
ror
pop
movsb
push
mov
jecxz
jb
sub
cmp
sbb
xor
stos
jno
add
jb
xchg
icebp
jge
fsubs
fptan
xor
jns
sub
push
xchg
test
fsubrl
adc
aas
add
cmpsb
sbb
int
js
and
jecxz
pushf
mov
mov
push
sub
enter
icebp
cmp
daa
xchg
pop
push
xchg
loopne
mov
jae
xchg
push
mov
scas
movb
loop
enter
out
sbb
insb
cltd
fidivs
cmp
add
in
cmp
dec
sbb
leave
cld
fcoms
aas
int
in
fs
mov
sbb
push
mov
jp
in
xchg
fwait
dec
mov
dec
add
dec
cmp
sbb
jno
pop
cmp
bound
mov
gs
mov
lcall
ficompl
fwait
mov
mov
cmp
jo
cwtl
push
xlat
jns
movsb
das
xchg
pop
dec
mov
int
inc
xor
add
jne
orb
push
cmp
out
movq
mov
aam
fnstcw
jno
jne
and
out
xchg
into
dec
ffreep
fidivl
repz
inc
lods
sub
mov
ljmp
repnz
xchg
jecxz
rclb
mov
or
mov
fwait
and
sub
test
or
data16
dec
sbb
mov
jbe
sbb
inc
sbb
push
sarb
rol
jg
clc
or
jmp
xorb
jo
and
or
outsl
inc
mov
jmp
pop
outsl
mov
in
sbb
mov
gs
inc
insb
pop
push
popa
mov
mov
aaa
xchg
iret
add
es
mul
adc
adc
xor
sbb
lods
cld
jns
or
jae
shrl
pop
dec
jo
in
and
mov
mov
inc
mov
testb
adcb
inc
push
mov
popa
sbb
mov
dec
jmp
arpl
xlat
pop
push
jne
xchg
or
enter
or
roll
xchg
fists
stc
mov
neg
in
mov
mov
pop
bound
in
out
mov
xchg
cmpsb
dec
inc
stc
cltd
adc
movlhps
repz
xorb
sbb
ror
outsl
inc
insl
in
inc
repz
sub
shr
mov
lods
ret
adc
add
das
inc
dec
sbb
fldl
pop
adc
and
je
or
cli
push
dec
mov
rorl
xorl
hlt
repz
aad
scas
lret
jge
cmc
jns
or
fcomi
xchg
scas
mov
leave
push
ljmp
xchg
cmp
push
dec
push
mov
xor
mov
pusha
sbb
mov
or
lahf
add
dec
mov
mov
loope
xchg
loopne
leave
je
loopne
mov
bound
cwtl
inc
xor
cli
cld
jb
or
sarl
lss
pop
mov
cs
add
cltd
cmpl
push
mov
cld
inc
lods
mov
rcll
out
rorb
frstor
test
cmpb
xchg
push
pop
out
loopne
xchg
jmp
in
mov
sahf
cmp
mov
xchg
repz
mov
out
data16
mov
das
in
scas
sbb
scas
xchg
adcl
fdivrl
dec
xchg
push
mov
push
mov
inc
dec
fs
inc
add
sbb
push
insl
aad
enter
loop
adc
push
pop
jge
cmpsl
inc
enter
cld
inc
mov
push
jb
mov
leave
dec
nop
jmp
push
call
loopne
or
ficoml
inc
xchg
loop
mov
popa
push
test
fidivrs
fimuls
loope
adcl
cli
pop
push
mov
data16
iret
mov
sbb
inc
mov
bound
jne
negb
call
cmp
out
imul
iret
cmpsb
imul
fs
mov
pusha
push
add
popf
inc
js
lcall
adc
mov
jo
mov
stc
out
sub
shrl
shl
dec
jb
add
or
aas
mov
data16
jne
push
push
pop
push
pop
and
int3
xchg
add
imul
cmp
popf
mov
cmp
pop
mov
fadds
loope
sbb
loopne
jg
loope
push
lcall
jne
dec
movsb
and
loope
pop
push
cmc
sub
aad
pop
sub
test
popa
lods
jbe
fistpll
mov
movlps
sub
aad
cmp
and
shll
inc
xor
jo
mov
mov
sarb
push
inc
jge
test
imul
cmp
dec
or
push
add
push
inc
lods
and
pop
sub
ret
xlat
movsl
aam
inc
sbb
push
int
fwait
scas
xor
lea
push
movsl
adc
fmull
out
mov
popf
data16
sbb
imul
std
imul
or
sbbb
fiaddl
fwait
mov
pop
js
stos
lea
leave
cmp
sbb
lret
sbb
dec
les
cmp
cmc
aam
xlat
sub
or
data16
inc
fisubl
lds
mov
sub
add
je
incl
xchg
xlat
and
or
cmp
jne
xor
sbb
xlat
cltd
fmull
imul
outsl
fwait
sbb
clc
or
dec
mov
lods
outsb
clc
je
xor
jo
pusha
sar
pop
adc
arpl
pushf
pop
shll
lret
out
add
xor
stos
xor
data16
gs
push
sub
sub
and
lcall
imul
or
in
cmp
xor
sbb
fadds
adc
lcall
imul
pusha
cmp
lcall
mull
dec
leave
ret
pop
adc
popf
cmpsb
test
xor
mov
cmp
mov
cmp
xor
icebp
and
pop
push
mov
ja
std
or
std
fcoml
xor
inc
push
mov
mov
xorl
mov
push
cmp
xchg
jecxz
xor
sub
aad
das
hlt
repz
cmp
jns
mov
addr16
jae
adc
rcll
or
std
dec
cld
push
cmc
sarl
ljmp
xchg
jl
sub
repz
insb
loope
lock
popf
adc
sub
sbb
dec
mov
sub
mov
and
fisubs
jo
inc
jbe
fisubl
cltd
xor
loopne
sbb
inc
cmpsl
ljmp
sub
aad
mov
inc
test
mov
jmp
rclb
repz
cmpsl
mov
and
jb
jne
inc
inc
jp
iret
dec
inc
cs
shlb
inc
dec
mov
rorb
pop
adc
fadds
adcl
push
mov
sti
test
mov
clc
enter
xor
fidivl
adc
aam
jmp
lock
mov
adc
lea
inc
bound
xchg
adc
sub
ljmp
or
xlat
movsb
arpl
pop
fnstenv
sub
inc
jae
addr16
mov
inc
dec
aas
rolb
inc
jo
dec
mov
push
xor
jg
stc
ss
sbb
pop
addr16
insb
fmull
add
xor
xlat
lcall
dec
test
stos
rolb
loop
clc
mov
subb
mov
push
adc
add
or
call
lock
icebp
dec
into
or
and
cmp
mov
xchg
cmp
xor
sub
loopne
loopne
jge
sub
adc
xchg
pop
pop
scas
out
pop
leave
xchg
fldcw
or
dec
cmp
jb
and
inc
loopne
addr16
mov
movsl
xor
jecxz
xor
jmp
aaa
fstl
cmp
mov
rclb
push
push
dec
jmp
add
mov
sbb
cmp
negl
cmp
lods
leave
lock
push
fs
cmp
scas
test
xchg
adc
or
sbb
mov
iret
adc
adc
mov
mov
cld
lea
das
nop
dec
in
xchg
inc
xchg
xchg
enter
loopne
test
xor
mov
in
adc
mov
fisttpl
or
je
push
inc
mov
adc
call
xchg
mov
xchg
lahf
js
sahf
mov
test
sbb
rolb
push
iret
dec
or
test
xchg
lds
xchg
cmpsl
icebp
popa
push
dec
sbb
add
jecxz
clts
add
loopne
dec
stos
mov
repnz
fsubp
push
test
cmpsl
mov
aad
sbb
adc
mov
popa
inc
popf
stos
dec
imul
push
out
xchg
fidivs
mov
mov
divl
push
orl
outsb
push
sbb
xchg
push
popl
sahf
dec
das
out
psubsw
lret
fldcw
test
or
add
sub
xchg
push
cmp
sbb
push
mov
push
sbb
int3
je
cwtl
out
loop
sub
ret
iret
pop
shrl
push
cwtl
pushf
xlat
fistpl
lcall
cmp
push
xor
cmp
or
sub
clc
stos
adc
jmp
jne
xor
cmp
sar
push
mov
xor
xchg
cmp
mov
xchg
icebp
movsl
notl
ss
adc
xor
add
pusha
fs
sbbb
adc
fsubs
cs
and
sbb
lcall
icebp
mov
cmp
sub
ret
xchg
in
adc
mov
push
add
sub
mov
jg
test
adc
mov
imul
ficomps
sti
fucom
lock
inc
andb
pop
adc
pop
mov
lcall
ret
xlat
rolb
mov
xor
cmc
es
dec
sbb
div
xchg
adc
mov
mov
rolb
je
add
jne
arpl
imul
outsl
push
sahf
call
stc
shl
dec
andb
sub
jg
xor
call
jns
aas
cmp
xor
insl
adc
cli
sbb
push
popl
sub
dec
orl
or
push
popa
jne
into
pop
aad
mov
add
add
loopne
insl
bound
mov
lods
cmp
shl
mov
jb
andb
data16
sbb
je
bound
idivb
jle
jae
in
ljmp
mov
sbb
icebp
loop
fisttpl
lods
jp
shr
cs
jae
mov
mov
divl
insl
outsl
lods
into
jecxz
dec
pop
idivl
aaa
sub
fimull
daa
popa
sbb
push
inc
mov
les
xor
lcall
lds
add
fists
mov
data16
fimull
jne
jnp
addl
fiaddl
pop
icebp
stc
mov
sub
std
test
mov
int3
sbb
xor
ljmp
sbb
daa
xor
pop
adc
enter
loop
or
dec
movsb
push
adc
sub
jb
mov
popa
and
mov
mov
push
ficomps
jns
lods
xchg
mov
ds
in
push
lods
mov
negb
scas
aaa
lcall
ja
aas
aad
hlt
and
pusha
adc
or
rorb
cmp
or
push
push
pop
sti
stos
jne
ret
xor
add
cmp
sbb
mov
hlt
cli
push
loope
iret
loopne
insl
jge
rorb
push
xchg
and
cmp
jno,pt
inc
stos
mov
pushl
push
fsubrl
inc
test
xchg
dec
or
loop
dec
mov
insb
and
dec
mov
push
faddp
xchg
call
lret
xchg
aad
dec
or
push
cmp
repz
les
in
and
popa
or
ss
jo
loopne
xor
into
xor
enter
outsl
jp
repnz
inc
in
je
aam
fdivp
mov
shl
fisttpll
out
push
imul
inc
ret
bound
xchg
xchg
lcall
sub
xor
addb
pop
mov
sbb
int3
push
mov
sub
ljmp
push
es
lahf
arpl
jmp
adc
jb
adc
push
in
jmp
push
imul
pop
lret
add
pop
out
push
test
xor
ret
jecxz
lret
xor
iret
jnp
ljmp
lahf
jmp
jle
repnz
or
sti
dec
clc
mov
sbb
cmp
push
push
or
mov
pop
shlb
out
push
andl
add
mov
pop
dec
icebp
pop
add
popa
inc
dec
cmp
scas
stos
mov
out
mov
mov
add
dec
inc
in
dec
add
int3
in
pushf
cmp
or
std
mov
fsubrs
das
jg
shll
lret
mov
lods
push
popa
fs
push
xor
sarl
push
mov
ja
xchg
push
mov
jl
jae
push
inc
inc
pop
data16
movsb
sbb
jg
adc
addr16
pop
das
dec
xchg
sub
loop
ret
ret
mov
pushf
xor
xchg
insl
inc
dec
and
jmp
push
jno
pop
dec
mov
inc
push
insl
leave
icebp
add
jns
rorl
or
out
xor
sub
in
adc
pop
xor
push
icebp
or
mov
iret
daa
xchg
pop
out
xor
or
mov
lea
inc
and
aad
cbtw
mov
in
mov
sub
jne
loop
xor
call
scas
xchg
inc
mov
sbb
pop
rolb
ret
pusha
mov
fldt
push
dec
fcmovne
nop
movsb
mov
std
repz
aad
js
in
xlat
shrl
daa
sbb
fdiv
and
mov
adc
pmulhw
mov
xchg
es
aaa
pop
roll
imul
dec
mov
scas
pushf
pop
test
and
mov
xor
adc
leave
push
cvttps2pi
xor
fld
cmpb
cmp
cmp
sbb
popa
aam
sbb
out
loopne
cld
xchg
cmp
mov
mov
mov
mov
mov
or
shrb
cmp
sub
add
and
test
insb
filds
xor
testl
jmp
data16
push
test
addb
popf
inc
dec
arpl
mov
xchg
dec
in
mov
mov
shlb
push
data16
mov
pop
icebp
dec
aas
stos
mov
sbb
loope
jb
ficoml
fwait
or
xchg
icebp
xchg
nop
or
out
mov
dec
push
and
imul
movsl
fs
or
mov
inc
mov
insb
lods
sarb
jo
ljmp
jecxz
jge
mov
cmpl
pusha
cmp
ljmp
in
add
out
xchg
insb
insb
out
pop
sub
in
push
pop
pushf
pop
adcb
mov
pop
and
popa
popa
cmp
xor
mov
xor
in
push
ficomps
xorb
sti
pop
out
mov
repz
addr16
popa
xor
sub
mov
sub
andb
and
and
movsl
mov
loope
leave
fucomip
lret
pop
fwait
xor
add
mov
ljmp
enter
test
cmp
fcompl
add
pop
dec
pop
xor
mov
or
out
mov
and
pop
xlat
mov
cmp
mov
movzbl
movsl
lds
arpl
in
jbe
sub
push
push
jmp
mov
sbb
arpl
mov
andb
pop
mov
jns
sbb
or
cli
pop
int
cmp
mov
movd
cmp
push
incl
into
cmc
xchg
addr16
or
addr16
and
xor
aaa
into
push
mov
or
mov
mov
int
andl
icebp
lods
dec
sbb
cli
movb
sbb
rolb
sarb
or
xchg
sub
mov
stos
xor
stc
lds
notb
cmpsl
daa
popa
subb
notl
push
pop
mov
jmp
pop
gs
loopne
inc
call
sbb
fisttpll
dec
sti
pop
test
fs
addr16
scas
das
inc
lahf
mov
fucomp
push
inc
pop
jae
inc
cmpsb
pop
movsb
rorl
jo
insb
mov
mov
cmpl
cmc
jno
xchg
push
and
xlat
jmp
pop
cmp
mov
cmp
push
pop
inc
push
shlb
and
andl
fnstsw
pushf
xchg
adc
xchg
push
adc
mov
dec
test
jge
inc
and
aam
dec
movsb
push
push
jl
je
xor
out
arpl
mov
and
pop
adc
int
push
push
stos
xor
dec
je
hlt
xor
in
les
push
bound
outsb
sbb
les
ret
sub
in
add
pop
push
mov
ljmp
hlt
adcb
mov
shll
sub
stos
add
into
loope
in
push
inc
popa
sti
je
stc
and
hlt
xchg
or
mov
adc
int
repnz
les
movsb
clc
mov
xor
mov
xor
or
xchg
push
loope
sub
mov
enter
cmp
push
int3
and
mov
sbb
out
and
jl
lods
stc
cmp
pop
push
clc
int
dec
icebp
inc
movsl
lds
cmp
loope
cmp
cmpsl
cs
sub
sbb
dec
cmp
movsb
push
mov
mov
mov
hlt
imul
ret
adc
xor
pop
sub
mov
sahf
test
cmp
iret
stos
leave
movsb
inc
push
popa
add
dec
mov
or
cmpsb
inc
push
or
rorl
stc
mov
xchg
loopne
sub
dec
push
lock
movsl
fmull
js
and
cwtl
add
jae
xor
dec
push
ja
and
mov
test
adcl
not
and
mov
imul
sbb
ret
ror
pop
js
mov
jmp
pop
stc
clc
mov
out
mov
mov
mov
mov
aad
mov
sub
push
inc
fstpt
clc
jo,pt
mov
push
sub
dec
push
fsubs
cmp
outsl
mov
insl
xchg
mov
call
cli
mov
cmp
cmp
add
gs
enter
popa
popf
inc
adc
and
lock
xor
int3
lcall
cs
aad
push
mov
mov
movsb
dec
mov
jmp
xchg
sub
cld
sbb
and
flds
icebp
lock
lods
and
xor
shl
jmp
loopne
cmpb
scas
addb
or
pop
scas
fstp
sbb
xor
fidivrl
or
sub
ficompl
adc
aaa
std
out
testl
xor
rol
pop
rcrl
lock
adc
je
popa
nop
cmp
inc
sbb
ret
dec
dec
fndisi(8087
xor
sub
xor
fwait
add
push
cli
outsl
int
jp
pop
push
mov
pop
jp
sbb
int3
in
push
push
sub
pop
fsubl
mov
pushf
rclb
mov
adc
jns
mov
cmpsl
push
mov
mov
push
ret
imul
popl
icebp
push
and
out
sahf
mov
shl
leave
push
add
sub
jnp
mov
push
enter
jge
mov
mov
cmc
nop
dec
xchg
jge
imul
push
daa
xchg
insl
fisubs
add
mov
mov
push
cli
jb
addr16
fistpll
ret
adc
mov
rcrl
out
jle
pop
adc
fdivrl
gs
out
cmp
push
sub
call
jae
std
jg
sbb
arpl
fs
and
pop
inc
outsb
pop
icebp
cmpsl
xor
icebp
xor
sub
nop
and
jecxz
ds
mov
push
ja
sbb
cmp
flds
jle
int3
fdivrs
shl
adc
and
out
mov
loop
or
push
jmp
pop
rcll
adcl
rcr
cmp
int
jbe
inc
cmc
sbb
push
xchg
pop
insl
or
mov
and
cmp
mov
push
flds
mull
jmp
cmp
fs
movsl
xchg
cltd
aad
pop
es
int3
fstpt
fsubrp
mov
jecxz
enter
push
jmp
sub
cmp
es
loope
loop
mov
or
stc
fistpl
or
xor
imul
add
xchg
jns
dec
push
std
inc
pushf
pop
or
test
pop
pop
insb
cltd
jae
mov
pop
xchg
ljmp
test
xchg
mov
inc
jae
lods
fwait
adc
mov
jle
dec
movsb
cmpsl
jp
mov
nop
popa
sarb
loope
sbb
dec
loope
movsl
loope
jp
mov
mov
nop
lea
xchg
test
xor
dec
stos
and
cmp
rclb
or
lock
xor
es
rcrb
mov
and
push
stc
in
push
or
or
roll
scas
jle
xchg
cltd
hlt
loop
stc
jl
shrb
addl
sub
daa
addl
dec
in
loop
xchg
or
lea
pop
movsl
push
sub
add
bound
mov
dec
call
sub
add
or
out
adc
pmaxsw
incl
clc
in
shrl
stc
xlat
mov
inc
sti
lcall
sub
loope
push
add
cmp
lret
leave
mov
enter
repnz
jnp
jge
mov
scas
or
in
icebp
jbe
shll
xor
fcmovnb
push
mov
insb
dec
mov
mov
imul
xchg
sbb
ffree
arpl
movsl
mov
and
out
push
in
push
enter
mov
and
add
stos
fs
stos
aam
mov
in
mov
or
jbe
fs
rorl
imul
lcall
popl
dec
mov
lcall
nop
add
out
out
cs
jns
cmpsb
lds
or
scas
mov
lea
jmp
pop
jecxz
cmp
shr
add
adc
sahf
shl
inc
mov
sbbl
arpl
test
iret
mov
mov
push
push
jp
pop
shll
out
mov
mov
fmuls
pop
jbe
mov
shlb
push
stos
jle
cmpsb
pop
rcll
lds
cmp
mov
jecxz
ljmp
ffree
pusha
aam
add
xor
mov
cmpl
subl
push
mov
xor
cmpsb
mov
xchg
cmp
xchg
jnp
stos
aaa
iret
jo
mov
dec
out
pop
xor
push
imul
sahf
out
stc
scas
xchg
jno
push
lret
xor
enter
push
cmp
mov
adc
fisubrs
add
out
fwait
loope
dec
rolb
jge
mov
xor
sbb
or
push
or
mov
pop
clc
push
xor
sbb
movsl
shl
adc
cmp
or
imul
inc
xchg
in
push
dec
sbb
fs
cmp
adc
dec
out
ja
push
pushf
popa
int3
int
sbb
popa
mov
pop
movsl
out
inc
popf
sahf
aad
test
cmp
adc
gs
iret
gs
loope
arpl
aaa
call
repz
push
mov
push
cmp
test
cmp
ss
and
stc
bnd
mov
jae
xchg
loope
iret
xchg
arpl
int3
out
and
sub
jle
not
pushf
movsl
pop
cmp
outsb
cwtl
jecxz
cmc
jno
mov
rcr
ror
fists
xchg
shrb
pop
pop
nop
clc
push
or
mov
mov
cmc
ja
lahf
pushl
push
mov
cmp
je
add
inc
lahf
mov
jno
push
inc
mov
repnz
out
mov
cmp
test
sbbb
stos
loop
outsb
outsb
sbb
or
sbb
xchg
stos
test
pop
repz
adc
xor
iret
inc
push
and
cmpsl
popa
call
mov
orl
enter
xchg
hlt
clc
in
imul
fcomp
popf
mov
aaa
or
push
into
xchg
scas
es
test
or
cmp
shrb
pop
inc
clc
sbb
mov
add
or
inc
mov
out
xlat
repz
mov
aam
xchg
xchg
dec
mov
mov
xor
rorl
cmp
nop
cmp
ds
in
addl
push
lods
or
or
push
pop
inc
std
imulb
and
loope
incb
sbb
mov
adc
arpl
push
cs
sahf
xor
out
adc
cltd
imul
sub
shlb
add
ret
mov
or
and
call
movsl
jp
js
bound
cmp
cmp
mov
test
enter
jns
mov
stos
pop
mov
jp
pop
sar
addl
adc
push
mov
shll
sub
fcmove
xor
pop
xchg
fiadds
test
cmp
and
push
or
push
push
mov
adc
repnz
add
mov
xchg
xchg
jae
mov
hlt
cmp
add
out
dec
adc
mov
nop
test
jns
mov
addr16
mov
cltd
or
sub
movsb
and
jle
pop
jg
sub
sbb
xor
mov
mov
xchg
mov
ret
cmp
out
inc
mov
pop
xor
int3
sbb
mov
adc
fistps
xor
dec
fnsave
jne
fidivrl
stc
mov
sti
pop
lahf
mov
mov
or
rcll
daa
orl
jp,pt
push
lret
shrb
mov
inc
movl
pop
or
and
in
int3
ret
sub
jl
das
mov
and
pop
out
mov
push
arpl
adc
mov
mull
xlat
dec
sub
ja
shll
movsb
test
lahf
es
pop
lcallw
xlat
add
enter
lods
push
out
mov
icebp
daa
xlat
adc
outsb
add
loop
sbb
inc
cwtl
outsw
cmp
push
out
and
rcll
jp
or
xlat
loope
mov
stos
mov
mov
push
aad
dec
cwtl
in
xor
cltd
push
xor
test
cmp
leave
pop
dec
push
mov
adc
std
cmc
and
into
jmp
sarb
idiv
push
sbb
adc
pop
mov
into
inc
cltd
in
cs
sub
lods
scas
xchg
or
orl
sbb
fdivl
int
push
mov
mov
push
pushf
pop
pop
mov
rcr
test
jo
not
rol
out
popf
pop
mov
or
xchg
adc
aas
into
jne
add
xchg
adc
push
gs
cmc
cs
xchg
sti
jecxz
fwait
push
je
pop
xchg
lret
cmpsl
icebp
pop
orl
adc
aas
xchg
hlt
xor
jns
imul
xor
aad
and
mov
repz
fsubrs
xchg
mov
xorb
push
push
jnp
aad
inc
icebp
in
loope
mov
sbb
pop
jle
xor
lret
rcll
sbb
mov
js
xchg
mov
movsb
mov
jge
mov
lods
sbb
fistps
push
imul
sti
aad
pop
in
cmp
mov
mov
mov
push
pop
ret
pop
inc
cmp
jnp
inc
jnp
daa
mov
pop
fdivr
mov
movsl
mov
xchg
jmp
cmp
inc
and
popw
fnstcw
mov
jp
mov
test
mov
xchg
add
add
add
dec
imul
rol
shrb
bnd
xchg
sahf
sub
mov
loopne
sbb
push
mov
jo
xchg
movsl
and
add
inc
and
nop
lcall
lcall
rorl
ss
push
cld
imul
fmuls
cmpsb
jge
xchg
rcrl
and
xchg
fwait
lret
cli
lock
fcmovne
sbb
sbb
clc
rcl
sbb
lods
jl
mov
mov
mov
and
lods
push
je
out
insb
out
add
sbb
dec
mov
xor
data16
sbb
push
int3
jb
or
sbb
xchg
sahf
mov
neg
orl
dec
fs
xchg
mov
lods
inc
out
sub
dec
mov
cld
aaa
sar
cmp
fbld
sub
mov
test
xor
das
jmp
adc
add
inc
push
mov
mov
mov
test
jns
xchg
xor
and
je
dec
aas
jno
mov
mov
fldt
adc
cmpsb
cmpsb
out
sbbb
and
mov
adc
pop
sub
mov
cmpsb
shrb
aaa
or
mov
pop
inc
aaa
mov
sub
push
pop
sub
nop
int
mov
addl
push
xchg
rcl
fistl
popa
ret
fcmovnbe
ret
mov
nop
stos
in
or
push
outsl
fldenv
mov
movsl
xchg
test
adc
mov
popa
mov
movsb
rcl
loop
loope
mov
dec
xor
cmp
xor
mov
inc
movsb
mov
jp
sbb
mov
push
or
mov
iret
ljmp
inc
ret
rol
test
sti
jp
xchg
ffreep
pushf
mov
pop
push
cmp
push
shll
push
mov
fcoml
add
rclb
cmp
fcmovnu
add
add
lret
in
pop
or
addr16
cmp
sbb
jne
jb
add
xchg
movsb
imul
pop
pop
enter
mov
pop
pop
aaa
jbe
mov
and
jno
js
dec
cmp
rcll
jbe
sbb
fists
mov
mov
ss
jns
and
push
fsubrs
pop
jno
outsb
xchg
mov
cltd
popa
mov
and
icebp
sub
out
cltd
stos
dec
ret
sub
jnp
mov
pop
mov
xlat
xchg
mov
test
cmp
push
outsl
xchg
adc
movsb
popl
mov
mov
fwait
mov
out
outsl
pop
imul
xchg
sub
xchg
cmpb
arpl
cltd
pop
mov
mov
jg
filds
sbb
rcr
pushf
xor
or
pushfw
pusha
in
in
in
xchg
mov
jb
inc
dec
jg
push
jecxz
sarl
lea
sbb
aam
dec
sub
daa
inc
xor
hlt
add
mov
inc
xor
cmp
in
pop
and
ret
test
int3
jne
daa
xor
jl
xchg
inc
or
inc
sbb
push
orl
loope
or
cld
jnp
jae
dec
mov
pop
xchg
nop
out
mov
test
cli
icebp
stos
or
or
movsb
add
je
xchg
pop
cmpsl
adc
imul
cmpsl
sbb
movsl
cs
stc
shrb
cmp
lret
dec
adc
cmp
cmp
fimull
xchg
jle
cmp
add
inc
pushf
cmp
xchg
and
cmpsb
xor
test
mov
sbb
and
xchg
sti
roll
push
sbb
jmp
add
cs
sti
inc
cmp
arpl
add
lret
movsl
xchg
mov
jmp
adc
sbb
xchg
and
xchg
sbb
xchg
repz
ret
repnz
jne
inc
gs
cmp
mov
arpl
notl
cli
int3
fcoml
cld
or
inc
sub
mov
xchg
insb
jo
mov
mov
sahf
aaa
test
inc
lods
test
and
push
stos
cli
insb
adc
addr16
dec
jae
pop
xlat
subl
add
bound
test
xchg
mov
sub
cmp
subb
add
lcall
in
ljmp
mov
dec
push
push
jae
mov
faddl
jbe
orl
sbb
sub
jnp
popa
xchg
jecxz
push
pop
test
fidivrl
pop
pop
lea
mov
mov
jno
outsb
push
test
or
jmp
mov
sub
ja
mov
pusha
rcrb
cmpsb
dec
mov
insl
fnstcw
repnz
enter
stos
dec
sbb
lret
xchg
out
mov
and
push
sub
xor
pushf
test
fwait
mov
loop
pop
lds
lods
ljmp
ret
push
bound
xchg
dec
sbbl
pop
lock
shl
repz
pop
setae
and
testl
lahf
push
and
sub
or
aas
mov
test
xor
fsubrl
sar
pop
mov
sub
xor
cmp
mov
repz
push
sbb
addr16
lcall
xchg
pop
mov
test
ret
cmp
push
andl
dec
in
out
jp
dec
mov
mov
out
dec
mov
cmp
fdivr
testl
fnstcw
pop
cs
add
mov
js
insb
pop
lock
and
mov
popf
divb
cli
pop
xor
roll
nop
std
jo
mov
hlt
fwait
or
jp
setbe
inc
int3
repz
add
push
in
push
jno
shlb
mov
in
or
notb
mov
dec
subb
flds
jg
sub
ja
cmp
inc
cmp
xchg
mov
cmp
test
mov
sbb
push
sub
pop
and
fs
xchg
leave
mov
push
repnz
add
add
xchg
js
out
inc
cwtl
mov
mull
dec
adc
insl
mov
xchg
and
push
sti
fists
mov
xchg
ret
and
push
test
push
stos
or
je
jecxz
xchg
inc
cmp
mov
fdivs
ss
sbb
xlat
add
cmc
mov
int3
je
dec
lcall
mov
int3
sub
mov
sbb
push
lret
jecxz
into
cmp
xor
fld
or
loope
movb
mov
inc
divl
inc
fadd
stos
test
in
pop
popf
cmp
in
adc
iret
insl
cmp
dec
inc
jle
lea
dec
add
sub
insl
repz
aam
out
sub
jns
jmp
mov
push
stos
cmp
dec
ds
push
push
sub
jg
mov
mov
mov
loop
dec
cmp
int
cld
mov
pop
lcall
adc
lahf
cmpsb
adc
mov
popl
loopne
lods
test
std
test
mov
xchg
xor
add
push
sbb
mov
mov
out
ret
adc
rcl
or
ss
aas
lock
mov
xor
int
loop
sub
xchg
inc
sbb
and
in
pxor
adc
xchg
out
push
fisubrl
mov
packsswb
sub
ja
cmp
push
bound
das
push
or
lds
jno
insb
out
adc
xchg
add
or
inc
mov
ja
sbb
xor
cmp
lds
mov
loopne
sbb
subb
dec
mov
jecxz
adc
cld
int3
fs
jg
out
mov
jne
lods
pop
adc
cwtl
in
mov
inc
mov
popa
punpckhdq
push
mov
and
iret
stos
xchg
add
out
dec
cmp
icebp
adc
push
insl
ret
adc
mov
sbb
xchg
jp
inc
mov
cmp
sbb
daa
das
fisttps
ljmp
iret
cmc
ljmp
js
test
int3
adc
pop
inc
ret
in
push
xchg
bound
shrb
into
jl
and
sahf
mov
dec
mov
inc
jne
mov
int
addb
lock
cltd
cld
int
mov
notb
jnp
jmp
bswap
xor
insl
jb
inc
imull
dec
adc
sub
adc
xor
jne
lea
rcrl
ss
test
cmpsb
xchg
mov
cwtl
mov
int3
dec
stc
jne
fldt
inc
xor
sbb
jmp
mov
sub
cmp
popf
mov
cltd
lret
arpl
lcall
mov
xor
sub
inc
mov
lahf
inc
lods
push
dec
fwait
push
cmp
imul
fxtract
jo
adc
in
and
or
rolb
add
or
jae
shll
out
imul
lea
mov
xor
xor
jnp
sahf
inc
cmp
pusha
adc
mov
and
dec
or
fists
ret
mov
or
mov
xchg
pushf
jge
cwtl
jnp
imul
adc
lods
xchg
pop
loope
cmp
pop
rorb
inc
push
loope
mov
or
enter
and
add
out
lea
pop
cs
repnz
lods
pop
les
adc
dec
movsl
popf
mov
rolb
inc
push
xor
cmp
xchg
stos
arpl
fldcw
mov
jnp
push
out
xlat
xchg
unpckhps
dec
inc
xor
dec
xchg
mov
jmp
mov
and
cmp
in
call
insb
popf
out
aas
shrl
js
or
add
int
mov
pop
xchg
sarl
repz
pop
push
xor
outsl
mov
stos
out
dec
into
ret
and
mov
in
loop
push
outsl
sub
out
stos
in
jl
add
push
enter
mov
insb
out
mov
fsubs
out
dec
inc
es
inc
into
gs
sbb
aam
jmp
out
iret
push
loope
adc
and
add
orb
xchg
orl
shll
out
out
cld
ljmp
daa
lret
xchg
rcll
xchg
cltd
cmpsb
lds
daa
inc
icebp
shll
lcall
sahf
add
mov
aad
pop
xor
mov
stc
in
outsb
dec
or
sbb
scas
mov
push
outsb
int3
loope
dec
sbb
repnz
je
imul
bound
add
orb
jo
flds
lret
cmp
enter
addr16
ja
cld
scas
das
mov
in
jl
lods
add
lds
pusha
mov
and
outsl
mov
aam
fnsave
test
scas
mov
mov
pop
push
adc
dec
mov
push
dec
mov
pop
adc
rcll
movsl
add
pop
ror
push
fstl
adc
pop
adc
pop
test
push
pop
jle
js
xchg
pop
jle
adc
sub
js
mov
pop
call
clc
xor
mov
jecxz
aad
lods
sbbl
test
insb
ss
mov
lret
into
add
xorb
push
inc
arpl
cltd
mov
pop
cmp
xor
pop
das
and
nop
mov
pusha
push
sbb
mov
das
leave
cld
in
rclb
dec
push
sarl
imul
xchg
lret
pop
mov
dec
inc
test
dec
inc
int3
cmpl
mov
jl
or
xchg
pop
add
mov
add
push
dec
jg
or
mov
call
in
es
ret
jns
jns
sarb
addb
mov
out
mov
pop
ss
sbb
and
gs
mov
scas
arpl
out
das
lods
sbb
mov
out
xor
xor
mov
ss
xor
and
aad
mov
mov
cmpb
cmp
int3
fsubr
cmp
in
mov
neg
or
jle
adcb
xchg
loopne
mov
int3
fs
xchg
aad
add
aam
sbb
in
mov
push
leave
testb
fldt
sahf
jae
int3
out
cli
icebp
and
push
jg
jge
jae
jmp
inc
out
scas
jmp
pop
push
cmp
ucomiss
add
mov
es
orb
cwtl
sete
fmuls
pop
popa
adc
mov
adc
lret
push
stc
fistpll
icebp
pop
rcll
jnp
mov
and
mov
and
jnp
xchg
jns
xchg
stos
lock
xchg
testl
les
mov
out
jns
xchg
dec
xor
xor
sbb
fmulp
mov
hlt
test
out
fidivl
idivl
push
inc
cmp
jb
pop
scas
and
push
icebp
pop
pushf
mov
and
xchg
cmpsb
inc
inc
cmpsb
sub
mov
xlat
push
repnz
push
shrb
sahf
cmpsl
mulb
addb
sahf
lcall
push
xchg
ja
mov
daa
fcmovnu
xchg
mov
insb
inc
cmp
fs
insb
sub
jbe
addr16
leave
lcall
xor
popf
xor
xor
ret
or
cmpsb
sub
mov
mov
loopne
int3
push
rep
xchg
sar
rcll
mov
and
mov
push
ss
sbb
jge
sub
mov
imul
popf
pop
aas
fwait
fwait
push
shrb
lock
sbb
gs
add
push
out
push
mov
xor
push
mov
adc
mov
incb
cmp
shrb
into
xor
pop
out
into
and
sahf
jae
jbe
mov
cmp
push
mov
shrb
mov
fnsave
push
cs
loope
shlb
pop
pop
sbb
sbb
cmpsb
add
imul
addr16
pop
jge
mov
xchg
and
insb
decb
arpl
insb
mov
xlat
pop
jnp
dec
test
pop
aaa
iret
mov
mov
mov
movsl
mov
fisubs
cwtl
scas
mov
sbb
stc
mov
push
push
inc
in
dec
inc
jnp
or
scas
adc
pop
xchg
es
imul
ret
insb
sub
cmpsb
push
dec
xchg
dec
orl
xchg
xor
lahf
jmp
dec
sbb
push
dec
dec
sub
dec
es
int3
cmp
pusha
cltd
dec
sub
inc
and
mov
mov
inc
sbb
jge
imull
dec
cmpsb
popa
adc
pusha
and
loop
jecxz
lods
nop
mov
cmp
dec
bound
shll
aaa
icebp
add
mov
ss
xor
insb
jae
mov
and
push
rorl
aam
lret
jmp
mov
cmp
data16
shl
jnp
jne
dec
xchg
and
dec
mov
sahf
adc
push
add
and
lret
add
subl
cmpsl
fbstp
or
xchg
sarl
shlb
adc
xchg
inc
mov
inc
jg
lahf
fisubrs
cs
sub
xchg
add
int3
std
mov
add
repnz
and
mov
sub
repz
cmp
mov
add
sub
das
aam
mov
cltd
xchg
mov
std
pop
mov
pop
lahf
test
inc
leave
fcmovne
lds
shl
push
js
mov
sub
sbb
adc
add
cmp
insb
push
dec
in
into
int
push
cmpsl
mov
sbb
inc
mov
mov
xchg
jb
popf
call
mov
shlb
lods
adc
mov
and
inc
imul
xchg
xchg
add
cmp
xor
inc
cld
pop
jecxz
clc
push
cmpsb
mov
stc
push
frstpm(287
inc
repnz
bound
pop
fldl
sbb
pop
mov
bound
jmp
aas
sbb
test
test
jle
xchg
sarb
cltd
cmp
js
sub
and
xchg
mov
fidivrs
fmulp
cli
and
cmp
scas
popf
aas
movsb
int
lret
dec
inc
pop
test
cld
arpl
int3
jecxz
out
push
xor
in
sti
sub
cmp
addr16
adc
testl
arpl
push
mov
cltd
fisubs
jge
jg
add
xor
fdivr
aaa
jl
sbb
cmp
loope
rcl
sbbb
cwtl
sub
and
dec
sub
popf
adc
rorb
xor
jno
adc
pop
xchg
adc
push
nop
push
sbb
cmp
fnstcw
roll
and
jmp
inc
stos
dec
mov
addr16
xchg
shlb
aas
ror
into
sti
xchg
inc
loop
lcall
or
sbb
sbb
movsl
pop
cmpsb
pop
xor
xchg
cmp
xchg
jmp
add
xchg
jecxz,pt
sti
xchg
ror
sti
popf
nop
jae
jo
push
jecxz
lods
bound
fidivrl
fistps
test
shlb
iret
mov
dec
sub
aaa
pop
in
cli
and
pop
je
ret
insl
js
push
hlt
mov
xchg
push
ja
cmp
xlat
push
xor
mov
push
rolb
push
cmp
inc
or
shlb
inc
mov
or
popa
jns
jmp
xchg
int
mov
sub
outsl
adc
jl
pop
cmp
or
lahf
jo
xor
mov
fidivs
addb
mov
adc
pop
idiv
push
int3
inc
add
mov
mov
jl
jne
jmp
push
test
roll
mov
mov
push
sub
mov
pop
int3
sets
stos
xchg
in
push
xchg
inc
sub
scas
lds
daa
mov
push
mov
pop
add
pusha
cmp
xchg
fcompl
and
sub
push
mov
in
mov
loop
cwtl
aaa
cmp
subb
mov
outsb
leave
ja
sbb
cmc
mov
js
and
outsb
dec
icebp
sub
out
adc
popf
xor
dec
notl
inc
add
insb
mov
fistps
mov
mov
add
mov
lret
cmpsl
mov
jne
loop
cltd
sbb
jo
mov
scas
loopne
pop
imul
inc
sbb
add
xchg
in
add
lods
repz
leave
lcall
mov
sub
paddusb
test
jbe
loope
fwait
hlt
repz
ja
out
loopne
lahf
insl
pop
push
popf
sbb
or
cmp
pop
xchg
jb
lock
add
stos
repnz
stos
out
nop
add
add
add
mov
jb
inc
cmp
sub
mov
scas
call
jbe
test
sahf
mov
outsl
and
mov
sbb
test
fnstenv
aaa
std
mov
add
sub
fidivs
test
cli
mov
dec
mov
fiaddl
and
test
out
or
scas
fdivrs
inc
sahf
push
or
jbe
jle
push
jg
and
loop
shrl
jl
loopne
pop
lret
jg
lock
fidivl
mov
jno
xorb
mov
xor
shlb
mov
out
inc
sub
dec
xchg
push
pop
mov
inc
sub
cmp
aaa
fcomp
andps
rorl
or
lret
fs
xor
cltd
aaa
xor
dec
sub
imul
mov
gs
pop
jle
test
or
stc
pop
addr16
ss
cld
stos
push
ret
lea
add
push
fcmove
pop
pop
or
mov
sub
ja
sub
lret
adc
rorl
mov
jp
mov
in
adc
xor
jge
imul
push
and
xchg
je
fwait
call
gs
cmp
mov
xor
int3
dec
push
xchg
movsl
cwtl
lea
ror
ljmp
mov
fistpll
jae
push
xor
in
scas
loope
out
jnp
fistl
es
sbb
je
push
add
sbb
push
pop
pop
dec
stos
cmp
ljmp
cmc
jmp
adc
test
cmp
xchg
dec
test
sbb
clc
jo
imul
pop
cmpsb
xchg
fsubrs
std
xlat
xor
sub
sarb
lcall
inc
pop
push
cmp
fisttps
fs
inc
lcall
imul
fstps
jne
test
mov
cmp
and
ret
cld
cmpsb
in
lcall
sbb
dec
outsl
orl
cmc
jno
popa
push
cli
dec
pop
shrb
loop
push
jg
sahf
adc
stos
inc
rcll
mul
ror
xchg
lret
mov
xor
xor
or
lcall
pop
sbb
je
idivb
mov
ret
mov
sti
pop
ja
sub
es
icebp
addr16
inc
adcl
stc
lds
xchg
imull
dec
mov
push
int3
repz
enter
movsb
leave
inc
dec
addr16
mov
lods
lcall
sbb
sahf
ja
out
icebp
cmpsl
fimuls
mov
aas
jbe
fmulp
dec
loop
mov
mov
jmp
lods
mov
pushf
test
negb
shlb
inc
mov
lahf
les
mov
cmp
mov
rcll
mov
loopne
xor
push
sub
sub
aad
hlt
dec
pop
fimuls
into
push
lds
mov
sbb
cs
outsb
xor
sbb
adc
or
dec
mov
lds
ret
out
mov
pop
jl
xchg
mov
add
pop
cmp
push
sbb
sbb
call
ficoms
inc
ss
jle
mov
orb
add
pushf
xchg
je
int
lods
aaa
push
cmp
jae
xchg
inc
fcmovu
xchg
adc
adc
jnp
pop
and
ja
int
sbb
fcmovu
mov
sti
inc
dec
mov
stos
popf
adc
or
mov
fildl
cltd
cmpsb
cmpsl
mov
mov
inc
mov
popf
pop
movsl
jmp
inc
fcomip
pusha
iret
cltd
mov
in
push
xchg
mov
enter
pop
pop
or
inc
push
ficompl
push
sub
testb
testb
adc
sbb
dec
dec
mov
data16
dec
fiadds
pusha
repz
scas
mov
jae
sahf
sub
cmp
add
repz
addl
popf
hlt
push
shll
jmp
cmp
fldt
ficomps
adc
jg
mov
aas
push
jg
jp
popa
outsb
cmpl
or
mov
popl
push
movsl
sub
sub
movsl
js
outsb
mov
scas
repnz
add
sti
jno
call
xor
js
adcl
fisttpl
and
pop
inc
pop
rcrl
add
push
fmull
mov
mov
sahf
cld
xchg
jp
jg
hlt
js
hlt
lret
loop
cwtl
add
out
popa
lea
mov
out
push
inc
dec
mov
and
out
xchg
xchg
inc
cmp
rorl
loop
lods
nop
sbb
orl
pop
fdivr
hlt
shrl
add
lock
adc
enter
mov
mov
xor
in
mov
jno
sub
lahf
movhps
mov
mov
bound
leave
fwait
cwtl
add
rolb
xchg
dec
lods
ret
jge
cmp
addb
iret
incb
repnz
jg
sub
pop
mov
and
scas
cmc
cmpsb
dec
mov
xchg
rcr
dec
mov
inc
jl
cmp
andb
mov
lret
and
jl
rclb
addl
pop
ret
popf
pop
inc
in
mov
mov
stos
mov
mov
out
imul
xchg
div
jne
mov
insb
ret
aas
pop
mul
push
mov
add
cmp
jg
cmp
mov
shrb
addl
leave
loope
and
pop
aas
int
xchg
lret
lahf
cmpsl
sbb
sub
adc
orl
pop
pop
sahf
js
sub
inc
pop
pop
xor
fs
jb
mov
notl
js
ljmp
push
and
cltd
lods
add
jno
jae
mov
ret
jns
mov
dec
inc
movsl
jnp
and
shlb
and
mov
sbb
jle
hlt
xor
cmpsl
sub
xor
movsl
jmp
in
xor
lahf
movsl
test
mov
mov
rcrl
ja
aas
int
dec
mov
mov
lods
cli
insl
push
xor
cmpsb
int
mov
fildll
repnz
mov
dec
add
outsl
mov
push
ja
and
or
xchg
outsl
pop
mov
clc
addr16
mov
mov
cwtl
popf
jp
xchg
repnz
in
and
cmp
movsl
xor
push
scas
scas
data16
shrb
ljmp
mov
add
mov
xchg
jne
je
mov
sahf
fisttpl
in
push
inc
cwtl
add
inc
mov
or
pop
sbb
loop
pop
lea
xchg
xchg
cmp
pop
das
or
loope
sbb
pop
inc
inc
cmpsl
xorl
mov
outsl
stos
cs
jns,pn
xor
scas
mov
jbe
mov
int3
js
dec
sti
dec
add
sub
cmp
out
mov
cmp
inc
xor
jmp
cmp
jno
cmpsb
sub
mov
mov
bound
adc
test
int3
mov
xchg
shll
fisubrl
push
stos
nop
push
cwtl
inc
add
fs
jns
mov
inc
jl
loop
pop
mov
and
sti
push
loop
imul
mov
std
xor
in
sub
push
jnp
jbe
fildll
popa
dec
mov
aas
jle
out
sbb
les
cmp
mov
daa
int
leave
adc
ret
lret
or
or
push
cmp
cmp
lods
mov
gs
mov
ja
clc
cmpsb
push
sqrtps
pop
pop
test
lret
jle
inc
inc
rcr
rcl
cmpsb
dec
sbb
in
xchg
shrb
and
mov
push
rcll
and
les
dec
mov
sbb
insl
add
cltd
xchg
movsb
lahf
imul
add
jno
xor
int3
repnz
mov
mov
scas
push
push
dec
loop
xor
mov
mov
out
in
or
mov
xor
addr16
aas
cmp
dec
fcoml
cwtl
pusha
ficoms
enter
push
and
and
mov
ficoms
xorb
decb
shlb
int
adcb
adc
xor
sbb
int3
dec
dec
lods
aaa
aad
pop
rcrl
aas
push
push
xor
mov
ficompl
mov
xchg
adc
xchg
js
int3
add
mull
cltd
mov
test
das
stos
lods
sbb
sti
stc
push
mov
xchg
outsb
insl
cmp
inc
pop
dec
ret
es
dec
mov
jne
sub
jp
mov
clc
gs
adc
out
shll
pop
xchg
xchg
jmp
sti
sub
sub
adc
idiv
inc
jge
sbb
dec
lret
push
pmullw
lods
jge
and
jno
rcrl
push
push
sub
xchg
data16
sbb
cld
cmp
or
and
inc
adc
jge
int3
push
push
sbb
jnp
popa
jns
push
lods
add
lahf
pop
arpl
sbb
hlt
mov
jo
or
dec
fwait
push
test
dec
sub
jnp
mov
outsb
fidivl
pop
cmc
ljmp
inc
xor
stos
lret
testb
sub
clc
hlt
jnp
adc
in
es
loop
jecxz
test
xchg
mov
jp
inc
xlat
dec
shrb
adc
inc
xor
add
jecxz
dec
push
add
jge
insb
sub
rol
jecxz
jl
cltd
mov
sbb
pop
jo
enter
popa
jnp
push
jp
call
adc
test
or
leave
add
push
cmpsl
inc
mov
push
test
mov
cmc
xchg
or
lods
cmp
dec
lret
pop
push
fs
clc
mov
stos
and
inc
mov
or
pop
loopne
sbb
cmc
mov
addr16
pop
push
cmp
cld
outsl
jg
rorl
movsl
xchg
add
loop
cmp
sbb
mov
xlat
mov
roll
pusha
push
pop
cmp
cmp
xchg
lds
adc
push
outsb
addr16
jge
aas
imul
dec
or
lcall
loop
push
push
pop
inc
xor
dec
and
pop
imull
mov
and
sub
add
xchg
jl
add
mov
sbb
lods
xchg
inc
sub
xchg
xchg
ret
aaa
in
mov
mov
xor
and
mov
shll
lret
cmp
les
fmul
inc
xlat
push
daa
add
fdivs
inc
dec
fbstp
mov
subl
int
adc
pop
jl
xor
mov
stos
mov
ret
and
sbb
addl
fldt
pop
popa
adc
ret
xor
adc
mov
repnz
pop
push
cmp
sub
mov
inc
pusha
cli
rcrb
inc
mov
or
push
rclb
sbb
xchg
daa
imul
adc
mov
call
shlb
out
push
mov
xchg
pushf
lcall
ja
adc
adc
push
xchg
or
push
mov
push
and
out
shrb
ljmp
cmp
jecxz
mov
fnstcw
outsb
sub
mov
lods
icebp
ficoml
ljmp
mov
jl
mov
jne
xor
cmpsl
dec
aam
ficompl
out
mov
dec
or
jne
pop
pop
hlt
data16
lods
xchg
or
jo
add
pop
adc
arpl
pop
mov
out
sub
adc
sbb
clc
mov
dec
test
icebp
push
push
stos
mov
enter
adcb
jns
iret
mov
roll
cltd
jmp
xchg
cmpsb
divl
es
das
divb
into
jle
ds
mov
mov
push
mov
cmc
addl
adc
pop
aad
lea
jmp
cmpsb
pop
loop
xchg
ret
sub
out
pop
lods
scas
mov
rcr
movsb
pushf
shrl
psrlq
int3
popa
cmp
pop
push
mov
mov
jno
lret
out
scas
in
sti
jmp
mov
jae
stc
or
enter
xlat
out
scas
les
je
push
xchg
push
sbb
jae
sbb
loopne
in
popf
orl
in
aaa
lea
xor
aad
xchg
xchg
cwtl
add
dec
gs
pop
iret
mov
in
mov
lods
xchg
nopl
popa
dec
dec
int3
cwtl
push
mov
cltd
adc
mov
fcomps
xchg
movsl
push
repz
jmp
fmull
xor
stc
gs
mov
sbbl
cs
rcrl
jnp
flds
std
mov
subl
sbb
add
mov
je
mov
fiadds
repnz
and
rolb
push
shll
scas
sbb
push
mov
or
cwtl
push
aad
sub
inc
dec
inc
test
mov
pop
mov
pop
or
dec
xor
shlb
and
lds
out
push
ljmp
data16
test
test
nop
mov
cltd
adc
loope
mov
pop
aaa
push
popf
dec
jle
xor
frstor
cmc
ss
push
nop
mov
mov
jbe
cld
test
fbstp
lret
les
das
fstpt
jmp
add
js
popa
pop
push
jne
add
cli
std
icebp
pop
out
xchg
test
scas
xor
jmp
dec
inc
push
jge
sbb
and
cmp
shrb
or
popa
in
jp
or
hlt
add
movsb
test
and
daa
xchg
hlt
push
in
insb
subl
xchg
mov
or
cwtl
sbb
es
iret
xor
daa
in
lea
push
xchg
lahf
test
arpl
mov
sbb
fstl
nop
call
divl
inc
xchg
mov
cmpsl
fwait
aaa
push
dec
inc
xchg
cmp
in
aam
stos
sbb
in
sub
or
or
rsm
cld
pop
pusha
pushf
push
xchg
xor
cli
shr
lret
popf
orb
movl
cltd
add
lcall
int3
xchg
mov
mov
lods
aaa
inc
sti
js
xor
rcrl
icebp
cld
mov
mov
cmp
rolb
xchg
mov
out
xchg
cmp
das
cmpsb
and
jbe
mov
leave
xlat
mov
ss
pop
scas
scas
adc
jnp
xor
cs
dec
mov
loopne
mov
push
cmp
insb
xchg
sbb
cmp
xlat
inc
add
adc
inc
fdivp
stos
sbb
push
dec
inc
out
pusha
bound
push
dec
sbb
mov
xor
mov
cli
std
mov
dec
popf
sub
movsl
mov
std
loop
cld
pop
jl
add
push
inc
jle
mov
and
push
mov
movsb
push
cs
cmpsl
mov
push
aas
jns
out
push
sar
in
add
add
jne
jo
dec
cld
iret
sbb
sahf
sub
mov
xchg
lret
mov
add
ljmp
icebp
insl
int3
loop
pop
ret
stc
mov
jmp
sub
add
mov
cmpsl
fisubl
xchg
jl
mov
push
sub
inc
mov
sub
fisttpll
mov
jge
leave
pop
mov
bswap
add
cmpsb
cmp
out
dec
jns
xchg
sub
popa
pop
movsb
push
cmp
aam
popl
mov
fiadds
xor
iret
popf
or
mov
xor
das
or
pop
mov
mov
lret
and
cmp
sbbl
pop
dec
imul
popa
mov
push
xor
pop
mov
xor
mov
mov
mov
test
rolb
adc
call
cmpsb
inc
cmp
movsb
stos
rcrb
fs
ljmp
lret
or
cltd
dec
dec
cmp
sbb
rolb
sahf
test
int3
lahf
rol
or
test
mov
dec
mov
es
add
jae
xchg
mov
mov
jbe
lret
test
jge
cmp
lret
mov
add
adc
dec
iret
jecxz
cmp
mov
inc
rcrb
mov
scas
cli
mov
jl
jge
sub
push
mov
fcom
int
outsb
or
mov
and
push
pop
push
cmp
or
inc
inc
xchg
fadds
sbb
pop
pop
inc
adc
lret
stos
pop
aad
js
pop
dec
stos
sub
xorl
lahf
xor
xor
inc
popf
call
call
push
outsb
and
pop
ds
shlb
push
lret
imul
rcll
jbe
push
js
cmp
cmp
cmc
adc
inc
fstl
jmp
and
inc
shlb
mov
push
adcl
popf
or
inc
mov
jl
shlb
outsl
pop
xor
or
inc
push
cmp
icebp
inc
push
les
jge
adc
pop
clc
jns
or
mov
cmpl
mov
push
or
ds
mov
sbb
insb
sub
rorl
test
xor
inc
out
ret
in
sbb
xor
iret
pop
test
je
ror
pushf
fisubrs
push
ret
incl
xor
js
aas
push
cmp
adc
cld
imul
daa
mov
loopne
daa
and
dec
dec
out
mov
jnp
push
dec
or
inc
mov
push
je
insb
jo
insl
in
adc
mov
jb
mov
add
push
clc
adc
nop
push
mov
inc
dec
cmpsb
mov
je
dec
cs
mov
mov
jo
shll
arpl
sbb
out
or
inc
cs
ret
cmpsb
push
ss
dec
movsl
mov
mov
rorb
pushl
mov
hlt
pushf
enter
lret
movsb
xchg
shlb
incl
ds
lret
sahf
sub
xor
ret
mov
lods
pop
into
cmp
jne
fisubl
dec
adc
or
into
dec
adc
stos
xorb
lods
xchg
mov
scas
or
push
pop
xchg
push
sar
jg
mov
xchg
insl
push
lock
test
or
dec
lock
pop
dec
and
cmpsb
jb
jno
add
mov
push
add
xchg
sbb
xchg
pushf
sub
pop
stc
pop
and
bound
jns
xchg
inc
mov
push
adc
popf
mov
daa
rcll
rcll
cs
jge
idivl
jge
or
mov
add
rcr
es
jg
insl
enter
dec
or
xchg
into
inc
lds
cmp
or
pop
and
repz
pop
popf
mov
nop
lahf
popa
test
ja
mov
dec
ja
ret
push
stos
sbb
cli
call
push
add
jmp
or
pusha
lea
push
cmp
mov
or
in
pusha
lahf
dec
je
xchg
addb
je
pop
aam
ret
mov
dec
mov
jae
bnd
pop
fs
shl
ss
jns
or
cmp
sysenter
add
ret
test
ds
dec
ljmp
pop
test
dec
inc
inc
xlat
cmp
subb
jge
or
jge
mov
jmp
mov
xor
fstl
push
insb
pandn
jno
out
add
jl
leave
sbb
pop
pushf
mov
pop
insb
and
outsl
adc
jo
pop
in
leave
and
mov
jne
aam
lea
jp
test
pop
popl
out
popf
mov
xor
scas
sahf
divb
rcr
mov
jns
xor
and
test
shlb
pop
mov
mov
mov
push
stos
sub
pop
lahf
cmp
dec
add
or
mov
cwtl
arpl
and
jge,pt
lods
ret
mov
jo
xchg
pop
fisttps
mov
repz
imul
testl
jg
negl
nop
jbe
rorl
scas
sahf
push
hlt
icebp
dec
pop
aad
sarl
xor
loope
jae
dec
shl
lahf
pop
es
fucom
cmp
xchg
test
sbb
in
test
cmp
aad
into
sub
push
loop
adc
pop
jo
lea
fisubs
into
jge
xchg
push
iret
inc
cltd
push
cmc
loopne
mov
inc
add
xor
sbb
stos
cmp
inc
cmpsl
dec
imul
std
icebp
fisttpl
ret
pop
cmp
in
push
cld
xchg
push
push
hlt
dec
inc
rol
pop
call
push
stos
jns
filds
dec
adc
add
push
ret
addb
pop
test
push
clc
xor
gs
mov
pop
cmp
xor
lods
push
jne
cwtl
js
sub
jae
xor
push
roll
ds
cmpsb
push
test
xchg
sahf
push
push
test
sub
repz
inc
into
sbb
sbb
xlat
and
push
in
fisubrl
lret
adc
das
test
outsl
lahf
arpl
mov
push
pop
jl
popw
mov
jmp
pusha
mov
push
outsl
pop
cmp
mov
xchg
sub
jecxz
inc
adc
mov
pop
pop
pop
loopne
out
sbb
and
sahf
sub
and
xchg
ret
dec
cs
int
in
pop
sbb
sbb
mov
or
push
fadd
push
xchg
push
sub
push
mov
cmp
pusha
scas
jg
out
or
pushf
cmp
mov
sbb
jno
or
fisubrs
sahf
dec
sbb
pusha
and
push
jle
or
adc
lods
xchg
lods
mov
cmp
inc
mov
inc
jp
cmc
xchg
cmp
pop
jmp
sahf
and
js
sar
in
push
dec
dec
mov
out
inc
fcompp
mov
inc
enter
push
mov
mov
cmp
lods
inc
pop
shll
jp
jg
fdivrp
loope
mov
xor
out
adcb
xchg
add
popa
fadd
ret
clc
sub
int3
ljmp
adcl
xchg
push
mov
dec
leave
and
fmuls
cmp
jo
mov
sar
jmp
mov
xchg
lahf
outsb
dec
sub
cmp
xor
out
js
stc
pushf
jne
stc
mov
mov
sub
inc
xor
pop
adc
mov
in
orl
mov
ljmp
repnz
push
adc
dec
es
sub
aad
xchg
hlt
outsl
fsubl
lret
lods
mov
sti
pop
xchg
lods
and
inc
cmp
outsb
mov
dec
fcomip
rclb
cs
or
loop
loope
jne
shll
xor
lret
adc
xlat
hlt
push
dec
daa
movsl
xchg
scas
lret
push
int3
mov
daa
jle
or
ja
insb
cmp
xchg
lock
movsb
addr16
shll
or
pop
das
add
xor
cmp
mov
push
nop
ret
cmp
mov
enter
int
sti
gs
mov
mov
in
sbb
scas
mov
mov
test
scas
dec
into
inc
fdivrp
fisttpl
loope
lods
js
jmp
mov
lahf
mov
push
push
cmp
push
bound
inc
fists
fimull
xorl
mov
and
cmp
loopne
into
call
dec
leave
mov
icebp
lcall
add
fsubrs
mov
ffreep
lret
mov
xor
rcl
cmp
aas
dec
ficomps
adc
mov
lods
mov
ret
popf
sbb
je
jbe
or
sbb
cmpsb
cmp
movsl
fdivs
out
mov
cmpsb
icebp
mov
jbe
sub
mov
xchg
mov
repz
andb
iret
sub
add
dec
outsb
pop
add
rcr
addr16
pop
jno
fcoml
dec
xor
fists
js
jne
pop
jns
out
mov
xchg
cmc
jecxz
xchg
arpl
js
xchg
les
mov
call
mov
enter
subb
loop
hlt
xchg
gs
popa
mov
cmpb
cwtl
loope
addr16
imul
movb
addr16
push
sbb
mov
dec
fnstcw
sub
jl
out
hlt
nop
hlt
cltd
jns
sbb
mov
lret
lods
les
into
xor
sub
rorl
dec
out
add
call
jne
inc
xor
sub
jnp
imul
pusha
push
mov
xchg
dec
ds
jle
and
jnp
lock
jb
sarl
and
into
out
bnd
outsb
mov
mov
or
inc
mov
test
add
lock
xchg
mov
mov
and
lcall
ret
subl
out
inc
fsubrl
push
sarb
fstpt
test
xchg
icebp
rclb
cmpl
push
roll
xchg
rorb
sbb
pushf
jmp
xchg
jp
and
sub
movsl
dec
push
mov
pop
add
orb
mov
push
jae
roll
icebp
or
or
jg
aad
xlat
imul
jp
out
mov
mov
pusha
pushf
dec
inc
aaa
xchg
mov
nop
scas
lcall
shrl
jbe
aad
mov
int
sub
xchg
pop
iret
mov
dec
cld
dec
pop
xor
out
aas
inc
call
sbb
rclb
push
xchg
insb
mov
imulb
dec
xchg
push
adc
or
push
push
inc
mov
jmp
je
xchg
sti
push
inc
push
stc
mov
loopne
shlb
inc
arpl
loopne
sub
xchg
sbbl
xchg
in
mov
es
insl
fiadds
mov
push
xor
fs
sbb
and
icebp
push
rcrb
pop
jo
icebp
cli
push
lret
icebp
mov
lock
xor
jg
and
dec
sbb
cmp
and
test
into
dec
ds
nop
sub
sub
pop
rcrl
mov
sub
jnp
jle
mov
lods
out
lahf
jb
sub
inc
shll
pop
sub
add
or
or
dec
pop
cli
movsb
in
cmc
aad
adcb
or
int3
test
push
add
pop
xlat
mov
leave
inc
pop
les
cmp
dec
fnstenv
fdivrs
mov
add
cwtl
jo
cmpl
jmp
jl
pop
sub
push
xchg
js
mov
sub
mov
mov
shl
or
in
inc
lret
mov
das
fldenv
dec
inc
movsb
outsb
iret
mov
scas
jnp
cli
xlat
mov
mov
inc
jne
cmp
test
mov
lret
int3
std
inc
cli
push
and
pop
mov
sub
shl
jne
push
add
sahf
sub
lahf
pop
lock
test
dec
or
push
xchg
es
mov
inc
test
pop
cmp
das
push
cs
inc
mov
pop
test
insl
iret
inc
fsub
adc
add
rclb
cmc
fdivrl
fldcw
xchg
fdivl
or
push
daa
rcrl
int
mov
push
aad
and
in
stos
mov
fsub
xor
div
push
shlb
pop
xchg
and
mov
gs
inc
pop
fidivrl
outsl
cmpsl
pushf
jg
movsb
bnd
dec
mov
sub
xor
aaa
jne
mov
stos
inc
or
fs
lea
sbb
int
mov
test
aas
leave
out
dec
in
lds
insl
mov
mov
dec
push
jns
shl
adc
orl
scas
adc
sbb
mov
and
dec
add
xchg
xlat
dec
mov
push
ds
fiaddl
lds
sbb
jne
cltd
xchg
pop
mov
cvtdq2ps
mov
popa
xor
inc
pusha
fdivs
popf
xor
push
mov
push
and
ja
cmp
gs
cmp
lds
leave
or
sbbb
xchg
incb
cld
push
cmpl
cmp
loopne
movsl
ljmp
or
fcomps
cmp
loope
xor
das
repz
add
jge
mov
outsl
lcall
cmp
icebp
pop
imul
mov
inc
xchg
stos
mov
mov
xchg
inc
pushf
das
pop
fadds
sbb
mov
hlt
jo
add
jne
movsb
outsl
cmp
mov
lds
imul
pop
jle
pop
fwait
xor
wrmsr
xchg
push
popf
int3
lds
lock
push
shl
jne
cmc
frstor
mov
stos
sbb
bound
shll
xor
sbb
sub
stos
push
cmp
sub
iret
lods
iret
scas
ja
ljmp
xchg
mov
mov
leave
push
xchg
push
inc
aam
sbb
xchg
mov
push
les
imul
cld
jg
sahf
jmp
dec
xchg
mov
inc
mov
xor
pop
lea
mov
pop
sbb
adc
es
or
xor
iret
and
les
outsb
scas
jns
cmpsl
xchg
add
jmp
stos
sbb
and
outsl
les
hlt
cmp
scas
mov
sti
lahf
sbb
popa
or
push
and
js
pop
mov
adc
fsubrp
mov
mov
addr16
cld
mulb
rcr
push
mov
bound
cmp
repnz
jg
jae
cli
loopne
ljmp
push
add
out
aas
sub
and
mov
pop
fcompl
sub
sub
popa
mov
jmp
mov
cs
gs
int
jle
add
ret
and
test
sub
xchg
leave
in
nop
adc
mull
inc
aas
jns
repnz
xor
ss
mov
scas
inc
add
pop
in
inc
mov
adc
sahf
imul
push
mov
xchg
loopne
mov
xchg
xchg
pop
jo
mov
sti
stos
push
push
sbb
mov
push
cmp
sub
push
addr16
xchg
mov
mov
xor
out
dec
adc
subb
mov
stos
mov
scas
call
xor
cld
sbb
pop
dec
and
lock
sarl
xor
xor
shlb
cmp
scas
stos
add
mov
out
jo
insl
leave
push
std
in
sub
repnz
ja
push
xor
mov
cmp
jecxz
adc
cltd
cmpsb
insl
mov
inc
pop
mov
cli
bound
stos
int
push
sbb
mov
insb
xor
inc
or
xchg
std
cmpsl
pushf
xor
lock
mov
into
movsb
ficompl
stos
mov
movb
dec
dec
sub
xor
jne
or
rorl
shrb
mov
jbe
leave
fdivp
aaa
jecxz
adc
pop
sahf
fcomps
ljmp
xchg
data16
sahf
pop
adc
movsl
cmp
xor
fisubrl
ja
cmp
es
dec
sub
test
push
mov
xor
imulb
cmp
inc
and
mov
xor
cmp
shll
lods
pop
mov
aas
fiaddl
adc
rcrl
and
mov
out
dec
xchg
cltd
inc
mov
pop
lds
jmp
rorb
pop
adc
push
mov
inc
xor
sub
pop
ret
add
iret
and
jae
imul
mov
pop
data16
xorl
popa
pop
pop
mov
scas
movsb
mov
cmp
das
jae
push
dec
nop
fwait
jle
pop
pop
test
jns
inc
adcl
loop
movsb
daa
gs
xor
adc
pushf
fsubrl
sbb
pmullw
mov
sti
mov
or
pop
mov
or
xor
ret
push
iret
repz
sub
mov
je
fcompl
push
aaa
pop
int3
and
fisubl
sub
pop
sub
and
data16
adc
insb
or
ds
cmove
mov
inc
add
int
add
lret
lods
enter
mov
xor
inc
sub
sbb
fs
loopew
xor
push
aam
sub
cmp
insl
mov
scas
or
push
mov
lea
mov
push
add
pop
hlt
push
psubusw
insb
mov
jns
dec
pop
into
sarl
mov
ja
jg
xor
push
pop
push
scas
xchg
push
mov
dec
and
pop
add
in
add
or
dec
add
call
jbe
xchg
leave
mov
fdivs
shlb
aaa
xor
out
pop
add
movsl
out
outsb
les
xchg
mov
push
test
loopne
sub
and
das
mov
dec
add
ficoml
sub
pushf
or
xchg
cs
movsl
sbb
clc
and
lret
mov
cmp
add
scas
or
andl
mov
js
xor
movsb
pop
lret
imul
fs
pop
leave
pop
decl
aas
cmpb
cs
cmp
sub
fsubl
daa
mov
push
flds
insl
mov
inc
jb
out
and
testl
fistl
scas
jo
je
add
sbb
inc
inc
popf
fsubrl
pop
sub
test
mov
popf
cli
jg
mov
loopne,pn
fs
and
stos
push
addb
divl
cli
fldl
es
imul
scas
int
nop
cmp
and
cs
adc
inc
pop
scas
xchg
ficoml
out
sbb
jmp
add
adc
jge
jb
fwait
in
mov
xchg
mov
arpl
inc
ret
mov
ret
fimull
sub
inc
dec
jae
mov
mov
fistl
mov
add
jns
out
dec
add
inc
cmp
push
in
mov
cmp
or
hlt
mov
and
mov
lds
xchg
jb
mov
add
mov
popf
cmp
add
js
sub
cs
mov
decl
outsl
mov
xor
loopne
mov
ss
fmul
scas
popa
xor
fnstcw
jne
das
push
sbb
arpl
lods
mov
or
dec
mov
shll
movsl
insb
les
dec
imul
xchg
int3
loope
aaa
xchg
insl
sbb
xchg
mov
hlt
adc
cmpsb
test
sub
adc
xchg
xor
das
push
aad
xchg
aad
pop
out
push
in
cmp
fs
mov
inc
lods
es
int
jnp
dec
in
mov
and
xchg
fs
dec
dec
xor
ljmp
shl
scas
mov
push
jl
mov
iret
cmp
out
je
cmp
out
sub
repnz
daa
test
insl
xchg
loop
insb
dec
shlb
dec
pop
push
outsb
nop
jle
xor
cld
test
mov
mov
testl
rcr
mov
scas
test
jle
pop
lock
push
xor
mov
loopne
mov
lock
dec
pop
scas
cld
es
push
lret
std
adc
out
xchg
mov
jne
cmp
adc
and
sub
cmp
pop
mov
fldl
jo
in
stc
inc
mov
orb
pushf
lahf
or
sub
inc
test
loope
pop
xor
xchg
movsl
out
lods
mov
jmp
lock
out
dec
lds
cld
int
or
hlt
adc
cmp
imul
push
icebp
cmp
cmp
xor
mov
xchg
mov
sbb
add
and
cwtl
in
push
or
and
jne
stos
inc
inc
cltd
sub
inc
test
dec
and
negl
push
ficomps
int3
out
popf
push
jp
fs
jle
inc
xor
jmp
cmpsl
sbb
inc
pop
pushf
jnp
repz
sbb
mov
aaa
xor
hlt
dec
lret
mov
sub
mov
sub
popf
xor
je
shrd
fwait
push
pusha
or
in
cs
add
sarl
xchg
push
inc
dec
inc
cmp
stc
xchg
ret
cmc
cld
test
cmp
adc
or
add
add
imul
and
or
cld
xor
adc
xchg
xchg
outsb
aam
mov
pop
sub
xor
ljmp
inc
lods
jg
mov
popa
in
adc
push
lret
dec
or
scas
iret
sbb
push
xchg
pop
iret
jae
or
dec
jb
pusha
pop
adc
insl
cmp
and
mov
js
dec
je
movsb
aad
jmp
xchg
push
lahf
cs
imulb
shr
and
xchg
mov
aas
push
mov
int3
loop
sbb
jae
and
inc
ds
je
movsb
push
mov
js
test
aaa
xor
mov
out
das
and
xchg
pusha
int
outsl
mov
fs
ret
repnz
aaa
jns
mov
jnp
xlat
ljmp
add
mov
push
adc
or
jl
push
es
adc
mull
out
in
jl
imul
test
jno
inc
rcr
and
je
shrl
mov
daa
mov
call
push
sti
add
pop
stos
mov
cwtl
push
mov
push
inc
imul
mov
rorl
testl
mov
movsl
jb
cmp
push
add
nop
dec
mov
and
push
xchg
xor
in
lahf
mov
and
ret
mov
and
push
and
lds
sub
mov
je
jnp
dec
and
dec
sub
jbe
jl
mov
in
add
push
cmp
and
in
dec
in
out
xchg
pushf
add
pushf
jg
add
lahf
adc
arpl
and
psubsb
inc
sub
cmp
lahf
mov
and
sub
ja
pop
jg
data16
ds
cmp
dec
xchg
lea
xchg
das
int3
xchg
jbe
push
aam
cltd
push
cmp
icebp
jae
imul
pop
fmull
dec
sarb
stos
test
inc
xchg
bswap
ret
pushf
pop
and
push
push
ljmp
mov
dec
loop
lea
lods
xlat
push
and
adc
jbe
mov
lock
adc
shl
adc
cwtl
sbb
inc
cld
insl
lock
jb
mov
popf
ljmp
push
pop
ja
jge
dec
mov
or
pop
push
std
cwtl
outsb
inc
fcmovu
sbb
cmpsl
fcomip
xor
arpl
adc
clc
adc
jno
out
aaa
inc
mov
iret
mov
loope
cmp
fisttpll
and
mov
lahf
mov
outsl
inc
mov
sub
ret
cmc
gs
jb
jns
mov
xchg
push
inc
pop
sbb
movsb
add
dec
push
push
lret
sti
lock
mov
int3
xchg
mov
stc
cltd
fisubl
rolb
xor
push
mov
inc
iret
ret
inc
push
popf
pop
dec
insb
test
int3
and
aad
neg
xchg
daa
movsb
pop
add
in
jnp
mov
jg
pop
in
call
lods
and
jae
sbb
fimull
pop
out
das
lret
das
mov
dec
inc
cltd
outsl
lods
insb
sbb
lods
aad
jb
sub
jns
fdivr
or
lock
cmp
push
jp
and
clc
jp
inc
popf
loop
adc
imul
inc
jg
dec
into
insl
xchg
out
pop
not
sbb
jb
xchg
fiaddl
sub
push
nop
adc
test
inc
pushf
rol
sbb
adc
pop
inc
xchg
cli
sarl
cmpsl
sub
mov
out
test
mov
sbb
popf
sahf
push
sub
push
lea
add
pop
hlt
dec
data16
arpl
jae
mov
mov
aam
loopne
sub
sbb
jae
frndint
in
addr16
lods
fstl
push
clc
inc
sub
stos
fdivr
loope
stos
xor
nop
imul
ds
push
and
nop
call
bound
rolb
test
and
dec
mov
mov
nop
or
xchg
push
jp
test
mov
xor
loopne
inc
repnz
sub
xor
dec
xor
fisttpl
mov
rclb
or
sbb
mov
lock
nop
fwait
adc
inc
cli
xor
repz
sbb
lahf
imul
or
push
and
aas
inc
ret
sub
push
aad
in
add
shl
out
push
shr
lcall
adc
jg
pop
pushf
sbb
cli
mov
jmp
jge
icebp
inc
xor
cmp
push
out
xchg
cltd
outsb
shll
dec
or
dec
and
dec
push
xlat
pop
mov
out
xor
xchg
pop
cmp
flds
outsl
pop
lahf
mov
cmp
mov
cmp
jmp
jmp
movsb
ja
dec
sub
mov
xor
int3
push
cwtl
push
mov
jb
push
inc
lret
cmpsl
add
mov
jecxz
iret
cwtl
imul
fistpl
ret
push
iret
leave
ret
sahf
fsubrl
aad
or
push
test
repnz
outsl
mov
les
add
jae
jae
cmp
je
aaa
mov
insb
cwtl
or
and
jl
aaa
movsb
loope
dec
nop
mov
inc
js,pt
mov
in
jnp
insb
mov
pop
and
ja
adc
and
mov
pushf
mov
idiv
sbb
cld
adc
repz
add
imul
push
mov
outsl
imul
enter
jge
cmc
add
inc
std
or
pop
cmp
xchg
loope
inc
aas
add
mov
out
into
cwtl
setne
jb
mov
data16
es
or
filds
jns
mov
or
lods
or
adc
leave
push
dec
xor
loope
jo
mov
sub
movsl
outsb
xor
xchg
inc
xchg
lods
insl
test
imul
adc
icebp
pop
inc
rcr
jle
xchg
push
xor
jmp
xor
test
inc
addr16
jmp
into
cs
dec
test
pop
jp
rclb
jb
sbbb
icebp
adc
fisubl
inc
xor
fwait
dec
pushf
pop
xchg
pop
icebp
movsb
loopne
test
inc
jmp
int3
dec
sub
cmp
andl
loope
rorl
dec
adc
cmp
jge
add
cmp
push
leave
inc
pop
or
push
or
cmp
stos
daa
pop
jae
aas
mov
test
dec
pop
fiadds
pop
daa
stos
test
ljmp
mov
out
lret
mov
sbb
mov
sub
and
sub
push
aad
push
icebp
mov
ja
sti
daa
push
into
inc
std
sub
mov
sbb
je
sbb
std
push
push
in
in
cmpsb
mov
or
fldenv
mull
sbb
lahf
adc
fwait
push
xchg
in
ss
jmp
popa
mov
mov
push
mov
sub
jnp
lds
out
rorb
cld
stos
cwtl
mov
pop
dec
push
popf
mov
lock
lcall
sbb
out
pop
cmp
leave
insl
adc
std
mov
cmc
xlat
pusha
inc
fcmovnb
push
mov
mov
sbb
or
ljmp
xchg
aas
out
inc
insb
xchg
fbld
dec
test
add
xchg
mov
outsl
test
scas
inc
and
cltd
iret
jno
das
mov
fwait
mov
lcall
aad
inc
xchg
or
push
imul
loope
pop
push
cld
mov
xor
cmp
mul
fildll
xchg
cmp
or
iret
inc
inc
aas
sbb
or
mov
sbb
repz
lea
sub
movb
pop
lods
mov
inc
imul
data16
aaa
xchg
scas
sub
ljmp
pop
stos
sbb
push
ss
lahf
pop
test
xchg
iret
nop
dec
mov
push
sbb
clc
jg
sar
jecxz
ss
pop
add
or
mov
das
inc
or
loope
stos
imul
adc
out
sbb
push
cli
mov
imul
push
mov
mov
inc
repnz
mov
in
lock
js
pop
stc
icebp
dec
dec
xlat
cmc
popa
sbb
or
cmp
push
xchg
mov
add
add
psadbw
test
push
mov
cmp
xchg
xor
shlb
adc
or
or
int3
xchg
push
int
arpl
in
add
xor
sti
inc
shll
adc
mov
shr
inc
gs
outsb
adc
mov
inc
out
das
insl
loope
push
pop
xchg
insb
nop
imul
rcrl
sub
push
pop
loopne
sub
jle
jle
xlat
add
mov
fidivs
and
and
or
lahf
stos
sbb
or
lods
ja
or
fnstenv
push
bound
adc
dec
pop
jle
fwait
xchg
pop
out
mov
dec
out
dec
cmp
pop
mov
jmp
insl
pop
push
xchg
push
fwait
sub
int
mov
push
mov
popf
mov
jo
jmp
mov
and
sub
sub
or
and
jnp
pop
int
test
aam
in
into
leave
outsb
fldl
xor
pop
je
push
push
sbb
lea
data16
mov
mov
dec
cmpsl
je
lds
mov
xchg
jb
dec
cmp
xor
arpl
add
cmp
subb
cltd
xchg
iret
mov
andl
cmpsb
jae
mov
sub
pop
jae
inc
lea
inc
cmp
fsubrl
sbb
scas
jbe
sbb
mov
test
les
cld
lret
xchg
popa
addr16
mov
cwtl
dec
jl
xchg
lret
xchg
jg
cli
jb
test
js
jge
mov
jbe
loopne
dec
les
and
sbb
test
push
hlt
addr16
insb
sub
pop
repz
fwait
popa
pop
mov
push
mov
sbb
dec
test
sub
sarl
in
es
cmpsb
dec
out
test
in
adc
test
out
shrl
lods
dec
gs
fsubrl
shlb
gs
jne
adc
fsubrs
in
push
daa
out
cmpsb
es
jl
or
pop
push
fldt
add
test
and
insb
sub
je
and
mov
rcrb
out
addr16
jmp
sahf
xor
movsb
lds
imul
and
jg
push
lods
ds
cmpsl
jle
cwtl
inc
jmp
and
aam
and
jmp
sub
adc
das
stc
inc
mov
mov
pop
dec
dec
jnp
sub
arpl
mov
mov
xchg
int3
push
mov
jmp
movsb
xor
add
jg
inc
ret
sub
and
or
jle
jae
mov
push
cmpsl
adc
outsl
pop
push
fisttpll
mov
sub
int
xor
cld
push
and
pop
push
out
or
fstp
enter
inc
enter
push
or
dec
xchg
daa
test
jge
push
outsb
ret
pop
addr16
mov
sub
jo
aad
fwait
dec
fcomps
push
mov
mov
popa
test
jmp
sbb
adc
mov
cmp
add
cmpl
jno
sub
xor
and
pop
imul
jmp
and
dec
mov
jbe
dec
ret
movsl
xchg
test
aam
add
sahf
mov
push
lret
out
inc
fbld
lea
jnp
push
mov
dec
mov
pop
clc
adc
lret
arpl
pop
aas
push
in
outsl
leave
mov
dec
dec
ret
jp
push
add
cwtl
outsb
jp
cmp
lds
ljmp
push
cmp
xor
push
dec
pusha
movsl
inc
mov
jl
into
std
adc
repnz
int3
ja
aas
add
mov
or
adc
ds
pop
pop
sahf
popa
aam
mov
sbb
lret
jnp
mov
in
push
and
mov
iret
jbe
add
jmp
aas
push
mov
jmp
pusha
cmpsl
shlb
insl
xchg
cmp
cmpsl
rorl
dec
sub
icebp
cmp
sbb
fsubrl
sub
es
cwtl
scas
add
sub
cmp
jo
dec
mov
lret
cmp
cld
mov
outsb
xchg
pop
mov
sbb
or
jae
leave
push
sbb
cld
or
xchg
jp
out
fdivrl
jbe
jle
rol
cmp
xor
xchg
jge
fdivrl
int
hlt
cmpsb
mov
mov
ljmp
shrl
dec
fwait
std
pop
lods
sbb
or
fwait
pop
fistl
add
cmpsb
in
dec
lret
push
jg
mov
xorl
jnp
xchg
dec
xor
add
add
test
mov
mov
into
or
aaa
mov
sub
clc
mov
arpl
ror
cmpl
jmp
lock
push
cltd
xchg
jecxz
mov
call
dec
sbbb
sbb
pop
mov
scas
jecxz
cmpsb
lea
inc
jb
movsl
add
pop
adc
mul
cmp
inc
popa
testl
sbb
mov
xchg
arpl
shl
mov
rcll
pusha
mov
xorb
ss
inc
pushf
loopne
pushw
xor
sbb
popf
cmp
lret
or
lcall
mov
jg
outsb
jbe
test
pop
out
and
sarl
sbb
xorb
lods
mov
mov
xchg
push
lods
mov
lods
les
pop
inc
sbb
push
cmp
adc
jo
bound
test
fstp
or
ret
cmp
jb
jns
mov
pop
and
repnz
pop
adc
jg
sbb
pop
loope
sub
divl
mov
inc
jbe
add
movsb
mov
fldt
mov
or
addr16
xchg
in
pushf
and
mov
add
jno
mov
or
fnstenv
in
fstp
subb
jl
repz
lea
dec
jne
popa
inc
cmp
ds
stos
lods
mov
arpl
mov
imul
sbb
mov
les
jbe
insb
pop
sbb
mov
dec
sub
in
rorb
mov
push
or
int3
inc
sub
jmp
lea
sbbb
inc
or
add
sub
test
add
add
xchg
mov
mov
jp
push
sub
test
fs
pop
or
fbstp
data16
mov
push
cmc
scas
sbb
imul
mov
inc
cmovne
aas
in
push
repz
jl
sub
mov
rorl
cmp
in
imul
popf
stos
xor
push
pusha
add
je
pop
mov
add
and
lcall
popf
sub
lods
push
xor
stos
dec
and
or
lock
sti
addr16
jb
in
shl
push
mov
jl
repnz
mov
scas
outsb
mov
and
adc
sub
pop
bound
iret
xor
js
add
arpl
daa
cltd
cmp
jle
push
cmpsl
and
in
pop
pushf
jne
mov
idivb
adc
xor
fiadds
js
adc
push
adc
in
xchg
insb
sub
jno
push
jo
sub
jmp
add
add
sbb
loop
ret
add
sbb
pop
cmpsl
dec
jns
xchg
mov
outsb
xchg
cltd
test
push
sub
mov
xchg
jo
or
lahf
out
mov
push
ret
inc
jmp
loopne
popf
clc
add
adc
cmp
jmp
sub
js
cmp
fimuls
adc
inc
or
lret
or
add
test
popa
dec
int
push
mov
les
insl
data16
fsubl
lret
dec
mov
in
pop
pop
decb
lret
mov
cmp
jns
out
jb
rorb
jmp
cmp
xor
les
pop
xchg
jns
in
mov
loope
push
pusha
repz
cmp
push
xor
mov
mov
lret
cmp
loope
stos
int3
dec
mov
or
push
push
gs
gs
shll
stc
out
mov
jl
pop
or
sub
cmpsl
out
push
pop
inc
push
inc
push
jp
xor
inc
ror
push
sub
mov
lretw
inc
inc
scas
adc
mov
inc
add
xchg
and
out
adc
insb
or
add
sahf
ret
in
pop
pop
cmp
stc
xchg
cmp
dec
mov
je
mov
out
jne
xlat
lahf
call
fs
inc
push
aaa
aam
ss
pop
xor
pusha
lods
loopne
pop
jbe
push
in
cli
js
jecxz
lret
into
test
pop
sbb
test
andl
push
loope
adc
jecxz
pushl
sbb
fs
or
mov
push
lret
xchg
aaa
icebp
inc
pop
pop
stos
mov
inc
fmuls
cmpsb
adc
and
lods
pop
jle
fmuls
jae
sub
std
arpl
adc
mov
xor
push
scas
xlat
test
test
fidivrs
inc
mov
jle
sub
out
sbb
fwait
xor
push
insl
pop
and
pop
adc
in
xchg
cmp
adc
mov
or
jo
sbb
jnp
out
and
scas
sahf
in
mov
stos
xchg
hlt
jo
or
ret
push
cmp
push
lods
jnp
dec
xchg
lahf
clc
outsb
dec
push
jmp
xchg
out
lcall
cmp
int3
mov
mov
hlt
lcall
mov
popf
pop
jne
inc
pushf
jmp
call
or
lods
outsl
in
cmpsb
mov
ss
clc
test
add
push
mov
sbb
ficoms
es
add
nop
rol
mov
inc
push
aam
jl
fiadds
jmp
xor
push
aas
cs
cmc
sbb
add
das
aad
lods
inc
cltd
inc
sub
xchg
add
rsqrtps
cli
jne
and
sarb
push
dec
mov
inc
test
jg
pusha
mov
or
xchg
lret
xchg
rolb
jge
popa
inc
add
jle
xchg
xlat
mov
jne
ja
aaa
xor
loopne
mov
loopne
sub
push
cmp
or
subb
sub
adc
mov
inc
dec
sbb
jmp
jo
imul
sti
adc
in
rorl
adc
out
into
cmp
jl
sub
repz
flds
shr
es
cmp
push
shlb
xchg
jp
shrb
and
movsl
dec
cmp
sub
sub
jbe
add
shl
xchg
jecxz
inc
bsf
test
bound
inc
inc
in
push
and
xor
jmp
pushf
cmp
imul
andl
cmpsl
mov
dec
das
mov
xchg
pop
ficoml
xor
dec
stos
xchg
push
incb
xchg
mov
push
jne
push
push
xor
scas
insl
das
mov
cld
add
das
adc
or
ficompl
aam
or
mov
roll
lcall
es
inc
lret
jle
lock
ret
jno
push
inc
mov
outsl
shrb
adc
sbb
xor
ret
out
daa
push
adc
fwait
push
or
repnz
inc
jmp
inc
fisubrl
pop
push
jmp
bound
pusha
outsb
sub
icebp
dec
fcmovnu
xlat
dec
pop
sbb
ret
incl
test
ljmp
ljmp
xchg
rorl
ja
loope
in
gs
andb
xchg
adc
cltd
mov
loopne
fldenv
adc
inc
xor
or
call
jnp
sub
insl
popf
xor
push
sub
or
sub
pop
ret
test
pop
es
sarl
js
cmc
sub
insb
leave
adc
sbb
pusha
jne
lods
pop
cltd
gs
jle
shll
xor
and
es
pop
in
adc
adc
adc
inc
sub
pop
pop
mov
sub
xor
xorb
pushf
repz
jge
call
add
je
pop
stos
les
xchg
loop
in
push
adc
inc
mov
movsl
inc
adc
adc
bound
lahf
xchg
jne
stos
jle
push
daa
xchg
xchg
or
lret
xor
imul
das
xor
mov
ja
mov
test
scas
cwtl
lcall
jnp
rorb
push
mov
push
pop
imul
lahf
js
fs
push
and
mov
cmp
push
push
fucompp
sbb
das
cmp
addb
fdivl
mov
repz
lahf
push
jbe
pop
xchg
jle
adc
fwait
push
stos
add
imul
mov
andl
jo
pop
inc
xchg
jp
call
or
pop
loop
lcall
test
std
hlt
pop
outsl
in
aad
adc
fwait
pushf
pop
fnsave
fcomip
aas
cmp
stc
ret
cmp
pop
mov
sbb
test
push
js
arpl
out
stos
in
push
jg
adcb
shlb
sbb
std
or
ret
out
sbb
jge
lods
pop
stos
testb
sahf
dec
push
ss
fdivs
or
andl
mov
movsl
nop
outsb
adc
push
add
stos
mov
ffreep
jb
cmp
inc
outsl
mov
scas
cs
fimull
hlt
in
jae
inc
mov
mov
addr16
jne
and
add
dec
push
push
out
pushf
mov
dec
mov
adc
or
aas
xor
loop
movsl
xor
insl
outsb
mov
jmp
cmc
inc
clc
xchg
minps
jne
mov
pop
cwtl
mov
sbb
mov
cmp
cmp
lret
lock
mov
push
cmc
sbb
out
stos
cmp
test
sbb
sbb
cmp
mov
mov
outsb
xor
cld
decb
dec
dec
sar
jb
or
xor
fadds
ja
mov
or
mov
or
jle
lea
shlb
imul
push
ja
dec
add
sbb
adc
divb
icebp
pop
pop
pop
and
push
cs
stos
jg
jbe
mov
sbb
pop
dec
sbbl
add
pop
pushf
sub
adc
les
lahf
addb
stc
mov
jl
cmp
mov
cmp
xchg
adc
xorb
scas
es
clc
std
cmp
fnstcw
push
iret
in
push
cli
push
lods
mov
js
dec
loope
lea
leave
loopne
ljmp
sub
xor
int3
cmp
inc
ficoms
std
add
call
pop
and
movsl
fs
inc
pop
push
aaa
jge
stos
or
mov
mov
fstpl
call
scas
dec
out
pushf
and
xchg
ret
pop
pushl
daa
xor
jne
mov
xchg
push
xor
dec
push
ss
scas
push
enter
dec
sub
xor
loope
adc
pcmpeqd
push
aaa
divl
pusha
cmp
repz
cld
mov
push
add
or
and
mov
mov
inc
mov
fistpl
adc
mov
push
push
in
mov
sbb
jecxz
mov
jp
xor
lods
push
add
ss
adc
bound
xchg
lea
hlt
test
mov
inc
lret
test
or
push
dec
cmp
inc
sbb
test
adc
or
mov
bound
xor
rorl
push
pop
adc
jg
mov
inc
cmp
lret
dec
data16
and
test
xlat
mov
jge
pusha
pop
and
in
pop
stc
test
adc
jecxz
stos
test
pop
iret
inc
sub
call
sbb
call
add
loope
cwtl
ror
ficoml
fcoml
test
ds
ljmp
mov
push
push
das
push
mov
sahf
dec
dec
sbb
sbb
das
pop
psraw
and
les
jl
dec
dec
xchg
mov
xor
daa
or
xlat
push
xchg
push
xchg
sub
inc
fs
inc
outsl
sbb
mov
ja
leave
imul
iret
jns
push
push
sub
pop
xor
movsb
dec
sub
int3
cmp
mov
sub
xor
testl
inc
add
xchg
decl
dec
es
mov
shl
lret
lock
jmp
push
dec
or
mov
mov
mov
ffreep
cmp
test
pop
or
jle
sbb
ror
dec
das
adc
cmp
mov
shll
mov
pop
shr
jmp
in
xor
out
aas
outsl
push
mov
nop
pop
jno
mov
fistpll
pop
jp
pop
inc
inc
insb
loopne
iret
add
xchg
movsb
pusha
aas
rol
outsb
test
or
and
lock
xchg
les
pop
nop
jbe
mov
lds
push
test
sbb
mov
sbb
test
xor
mov
fimuls
dec
sbb
inc
aam
bound
pop
leave
lret
orl
repz
adc
jg
mov
mov
pop
add
ds
clc
adc
mov
xchg
and
movsl
int3
or
pop
cmpsb
add
inc
imul
js
into
inc
in
repz
aas
adc
dec
adc
in
iretw
orl
outsb
imul
cmp
xchg
sbb
xlat
fcoms
xchg
ljmp
lret
lods
xchg
adc
cmpb
and
xor
icebp
jne
cmpsb
xchg
lcall
and
out
jmp
in
test
cltd
movsb
notl
shll
lahf
push
push
mov
add
lret
je
sbb
jo
dec
inc
xchg
xor
ficompl
arpl
push
and
sahf
cmp
lds
and
add
pop
loope
adc
pop
cltd
mov
out
sbb
imul
mul
fsubl
int
mov
sub
mov
rcr
int
xchg
sbb
add
push
adc
setp
mov
repz
icebp
lock
or
push
lods
fbstp
clc
rol
cmp
loop
push
adc
stos
aam
stc
mov
push
das
mov
mov
cmp
adc
cmp
add
jbe
and
test
jp
or
fdivrp
das
into
sub
adc
jne
sub
push
mov
mov
popf
idivl
dec
and
mov
pop
sbb
lods
mov
add
leave
add
and
inc
pop
sub
pop
push
mov
and
insl
mov
cmpsl
mov
or
lods
sub
add
adc
xor
cmpsl
mov
not
int3
sub
sub
push
jo
lahf
jbe
dec
mov
popl
jnp
mov
sarl
add
rorb
jp
ret
loop
push
pop
jae
lods
pop
mov
push
pop
cmpsb
jge
pop
outsb
add
cli
push
daa
mov
xorb
push
xchg
xchg
sub
xchg
mov
adc
scas
xchg
or
mov
je
nop
ret
adc
mov
gs
dec
mov
test
call
ja
sub
in
xchg
sbb
lods
inc
sub
xchg
data16
or
sub
pop
or
pop
inc
jae
lea
fcoms
ret
adc
cmp
pop
jmp
rclb
repnz
movsl
pop
das
nop
xor
add
or
mov
xchg
xor
lds
inc
fstps
mov
daa
xor
ljmp
bound
sub
call
sub
add
pop
popf
xchg
les
jbe
je
xor
rorb
adc
test
pop
mov
addb
xor
into
mov
mov
sub
cmpsl
pop
adc
aad
sub
push
out
xchg
dec
xchg
pop
cmp
adc
mov
les
dec
push
stos
sub
addr16
cld
bound
xchg
test
inc
mov
test
into
xchg
scas
aam
les
mov
and
ss
and
daa
and
mov
popa
mov
mov
lahf
xor
mov
outsl
add
aad
pushf
int
xchg
lret
or
faddl
xor
fiaddl
sahf
mov
pop
aas
pop
jmp
out
loope
and
mov
mov
addr16
add
xor
xchg
dec
imul
mov
testb
cmp
mov
mov
push
mov
test
punpckhwd
out
nopl
leave
iret
sti
add
test
aad
pop
leave
jnp
and
call
nop
loopw
pushf
sbb
sbb
pop
lods
or
jns
dec
inc
dec
cwtl
dec
jae
push
ret
xor
push
jecxz
dec
sbb
adc
filds
mov
call
lcall
adc
in
imul
into
fimuls
daa
add
pop
jecxz
ret
in
mov
xor
jo
mov
insl
incb
inc
xor
rcl
pop
add
pop
pop
inc
sub
outsb
mov
sbb
das
xor
or
push
adc
adc
je
mov
inc
pop
fistpll
dec
adc
test
imul
jl
xchg
mov
adcl
inc
cld
lods
mov
cmp
pop
jne
fnstenv
push
in
or
xchg
pop
jmp
xor
addr16
insl
pop
jmp
orb
push
lods
nop
imul
mov
mov
or
inc
outsl
xlat
mov
stc
xor
push
pop
sahf
sub
mov
insl
push
movsb
xor
jne
jmp
xchg
aad
pop
rcrl
push
insb
jecxz
fsubs
sbb
nop
or
fst
inc
ljmp
xchg
jge
fldenv
stos
int3
mov
stos
sarl
sub
mov
and
xchg
inc
nop
into
xor
loope
ja
adc
add
out
lcall
rolb
add
mov
mov
xor
lds
push
mov
js
and
mov
div
movsl
ret
add
cmp
jmp
inc
inc
push
pop
sub
ret
std
insl
pop
mov
lods
add
xorl
sbb
push
dec
bound
loop
loopne
pusha
ret
push
sar
ja
and
outsl
cmpsb
mov
into
sub
pushf
out
adc
mov
lods
in
js
xchg
test
movsl
aad
sti
xor
ficoms
or
xchg
xchg
andl
mov
into
test
pop
js
sar
aas
mov
insl
add
inc
cmc
adc
and
arpl
add
jp
jmpw
fidivrl
les
test
jb
bound
imul
lock
sub
fsubrs
mov
dec
mov
out
jbe
scas
js
xchg
imul
in
loope
lods
addb
adc
idivb
adc
je
popf
mov
mov
in
or
jmp
loope
xor
test
gs
stc
psubq
push
imul
inc
rcrl
jecxz
xor
call
mov
out
push
sub
fdivs
stos
jge
cwtl
out
push
aas
es
mov
outsb
into
stc
inc
push
div
cmp
sbb
push
jmp
add
and
push
jb
inc
int
jo
loope
sbb
enter
divl
mov
aas
aad
rclb
ret
pop
fwait
lods
imul
jne
int3
ljmp
pop
push
lret
ret
insl
je
mov
divb
dec
lods
jmp
pop
mov
les
mov
repz
mov
imul
lret
imul
repnz
movsb
cli
scas
sbb
mov
push
mov
adc
jnp
push
add
mov
xor
and
stos
jae
cmp
jne
outsb
call
sbb
dec
mov
loope
xchg
push
mov
jmp
out
push
or
mov
xchg
sbb
or
scas
push
cli
popa
in
loop
jp
add
loopne
int3
lods
in
test
dec
cmpsl
add
cmp
jp
stos
cmp
notb
mov
je
push
pop
rcll
ret
inc
imul
and
mov
lea
clc
cmp
mov
xor
lret
sbbb
jno
enter
iret
popf
add
test
mov
push
mov
test
or
mov
cmpsb
rcr
arpl
add
dec
jns
aad
out
sbb
push
xor
push
hlt
jno
adc
push
inc
dec
sub
jne
adc
js
mov
test
fsubrs
pop
jle
sbb
sub
subl
test
jb
mov
repz
push
bound
icebp
dec
lock
push
mov
mov
inc
ljmp
and
and
and
push
fldlg2
push
or
push
xor
lock
idivb
aam
xchg
cld
sbb
fnsave
adc
pop
cltd
sbb
or
push
mov
sub
jne
lds
jnp
mov
pop
out
dec
mov
mov
sub
xchg
xchg
adc
out
int3
jecxz
mov
push
jle
cs
fcoms
push
mov
outsl
jnp
into
cmp
inc
dec
test
shrb
lods
std
scas
dec
mov
mov
test
or
jecxz
in
imul
gs
xor
cmp
mov
sub
ret
pop
fcomps
push
mov
fstps
sub
cmc
sbb
mov
xor
mulb
inc
mov
cli
push
mov
cmp
sub
je
popf
push
jae
add
rorb
fdivr
mov
aam
insb
pop
mov
dec
jp
mov
lods
mov
dec
xor
inc
inc
adcl
mov
fwait
jmp
push
shll
andb
and
or
mov
push
inc
dec
dec
nop
pop
mov
cmp
shll
movsl
push
pop
loopne
sub
das
fidivl
lahf
push
fcmovu
jecxz
sbb
adc
xchg
clc
dec
jg
lret
jno
adc
bound
add
dec
adc
xchg
mov
sbb
imul
rol
and
sub
xor
subl
or
push
inc
jmp
mov
push
icebp
rol
xchg
and
idivb
fst
or
leave
mov
out
pop
inc
xchg
push
sbb
lods
inc
outsb
repz
xchg
bound
lcall
mov
xor
in
scas
flds
pop
xor
sub
xchg
test
xor
xchg
xchg
push
insl
jns
xor
lods
scas
test
leave
mov
aad
ret
gs
mov
loop
mov
xchg
mov
mov
mov
mov
loope
and
cmpsl
cmpsl
scas
push
and
jmp
nop
pop
inc
pop
push
jbe
jge
adc
jo
outsb
cwtl
jmp
in
cwtl
insl
out
push
jmp
push
pop
lret
shrl
andb
pop
mov
mov
lods
jns
daa
inc
sub
mov
sub
mov
push
jmp
sub
mov
push
out
cmpsb
fcoms
jbe
inc
fidivrs
jmp
repnz
mov
pop
push
jbe
dec
mov
cmpsl
mov
cmp
fcoms
inc
xor
clc
cwtl
popl
lahf
sub
pop
or
int3
mov
shr
roll
ss
xchg
push
inc
and
sbb
cmc
jmp
fisubs
mov
pusha
sbb
jl
cmc
outsb
add
mov
mov
mov
lds
mov
cmpsl
insl
insl
inc
pushw
or
test
jle
sub
jne
lea
aad
fwait
hlt
jge
push
jg
orl
or
cmp
test
arpl
and
xchg
mov
lock
push
or
in
sti
add
or
enter
cli
in
nop
vpshuflw
sub
xor
add
imul
sbb
ja
test
lahf
inc
or
push
push
jg
ja
clc
mov
dec
xorl
pushf
test
mov
sbb
dec
cmc
xchg
sbb
push
leave
hlt
outsb
mov
jmp
mov
jmp
popf
and
cmp
xchg
cmp
insb
pop
and
gs
xor
aas
sbb
push
mov
inc
xchg
mov
mov
aas
lods
add
jmp
cltd
ss
mov
add
ss
xchg
sbb
mov
in
or
push
ss
mov
ja
adc
and
push
mov
dec
sbb
push
and
in
icebp
loop
cmp
xor
push
clc
rolb
add
push
mov
mov
sti
sbb
fadds
mov
cmp
mov
pop
inc
in
mov
mov
sbb
in
mov
cmpl
outsb
jne
ret
jno
mov
ret
ret
decb
loopne
jbe
mov
inc
in
pop
cmp
lahf
add
sub
and
daa
cmp
cwtl
movsb
jo
adc
int
das
xchg
not
aaa
and
dec
shrl
cltd
or
js
mov
inc
sub
jo
jl
inc
adc
addb
jmp
sbb
xor
int3
xor
mov
mov
inc
dec
std
pop
jg
fld1
pop
mov
inc
sbb
jmp
pop
add
lea
lahf
push
inc
lcall
and
out
xchg
push
stos
mov
call
pop
xor
and
push
jb
pop
inc
in
fucomip
or
ret
pop
clc
lds
negl
push
and
lods
fisubl
or
test
dec
sahf
sbb
loop
push
in
mov
mov
pop
imul
xor
insl
notb
push
mov
clc
fcomps
xrelease
xchg
stos
inc
icebp
ret
add
push
daa
mov
out
dec
sub
fildl
xchg
fs
jae
mov
leave
mov
or
je
inc
or
out
fsubrl
sub
mov
loope
nop
movsl
jnp
push
and
sti
notl
xchg
loope
jle
ret
outsb
push
sub
mov
jo
cltd
stc
out
add
cs
xorb
jb
fisubl
push
jno
ret
mov
push
push
nop
jecxz
adc
xor
testb
push
sbb
stos
ja
or
lcall
les
dec
inc
fldcw
cwtl
fidivrl
pop
xor
cmp
dec
mov
in
sbb
out
and
pop
leave
jnp
lds
or
icebp
add
insb
cmp
sarl
cmp
fimuls
dec
mov
mov
pop
cmc
dec
in
movsb
mov
negl
cmpsl
jge
push
daa
adc
push
mov
xor
mov
out
cs
jecxz
nop
and
imul
jmp
sbb
sub
mov
cmp
movsb
sub
out
adc
cld
or
loope
push
enter
int3
leave
repnz
inc
shrb
shlb
mov
lret
hlt
xchg
push
and
cmp
nop
pop
and
or
cmpb
ja
pop
xlat
adc
add
iret
add
pop
ficoml
fstpt
push
test
sbb
dec
mov
xor
sbb
cmp
jno
xor
sahf
mov
adc
imul
shlb
rorl
mov
push
cmp
bound
out
and
cmp
movsl
jl
pop
mov
push
test
subb
stos
pushf
sub
lds
paddd
fnsave
fwait
incb
and
mov
mov
cmp
mov
mov
ret
gs
movzbl
aam
popf
repnz
cli
loopne
push
adc
bnd
lods
adc
adc
scas
pop
test
push
add
fdivrs
pop
mov
mov
mov
scas
cmp
out
stc
lahf
or
mov
daa
push
out
jne
dec
add
ss
inc
into
pushf
dec
mov
popa
repz
loop
mov
stos
pop
jmp
xchg
stos
mov
inc
pop
das
jne
mov
pop
and
lcall
and
jl
imul
les
cld
xor
mov
add
lahf
sbb
adc
scas
pop
cmpl
cmc
ficomps
push
fwait
jbe
mov
out
dec
cmp
std
xor
push
adc
mov
fisubl
xchg
stos
fisubrs
jbe
push
add
gs
cltd
cld
sub
das
mov
xchg
ljmp
and
es
sahf
call
mov
or
adc
jge
sub
sbb
imul
cmp
pop
sti
rorl
fs
cmpb
lret
add
sub
std
rcrb
xor
xor
mov
lods
push
stc
mov
divl
in
mov
xchg
or
mov
out
inc
pop
sbb
stos
movl
inc
jno
push
xor
in
dec
rorl
testb
call
adc
rcrl
xchg
jge
xchg
nop
imul
pop
leave
xlat
mov
outsl
jl
sbb
test
les
xchg
nop
add
dec
jmp
fsubp
lea
ficompl
or
fildl
cmp
out
repz
sbb
int
fsubl
xchg
in
and
xchg
daa
mov
cmc
inc
dec
cli
fcoms
imul
sbb
inc
fsubrs
xor
xchg
and
je
add
pop
mov
ret
test
mov
jecxz
dec
jno
mov
aaa
adc
mov
enter
je
ja
adcl
mov
jns
imul
push
dec
push
push
call
rcrb
jl
test
nop
cli
adc
leave
jg,pt
in
scas
xchg
pushf
push
sbb
add
leave
xchg
out
pushf
jne
jle
fimull
rolb
loopne
sub
lahf
pushf
into
mov
fwait
xchg
scas
mov
les
fildll
das
lea
inc
xor
adc
insb
jl
push
inc
dec
insl
cmp
push
dec
fdivr
add
call
enter
fdivrs
out
loop
outsl
rcll
mov
cmp
daa
stos
push
push
ljmp
sarb
push
aas
lea
stos
inc
outsb
inc
push
push
push
sub
repnz
mov
ljmp
test
pop
iret
cmp
test
fwait
sbb
xor
mov
out
and
xor
sub
and
pop
lret
inc
ret
pop
test
and
cmp
in
cltd
loope
dec
das
xchg
dec
movb
jo
aas
mov
test
icebp
pop
xchg
xor
test
insb
jg
test
adc
xchg
mov
stos
jecxz
push
lahf
hlt
aas
dec
adc
cmp
xchg
pop
mov
lods
jge
inc
fisubl
sub
jb
mov
fcomi
add
dec
sub
fldt
outsl
iret
cmp
sbb
daa
add
adc
in
adc
mov
mov
push
popa
sbb
pcmpeqb
inc
adc
scas
pop
arpl
adc
dec
insl
pop
push
outsl
subl
ret
arpl
sub
out
cmp
dec
mov
stos
xchg
lcall
cld
adc
dec
sub
testl
enter
inc
mov
inc
xor
cmp
cmpsl
adc
stos
mov
popf
and
scas
lods
xchg
repnz
nop
scas
cltd
push
jle
dec
or
and
mov
lahf
gs
cmp
es
stos
add
push
popf
pop
test
sub
push
xor
mov
lcall
xlat
in
jle
xchg
adc
and
pop
movsl
stos
mov
xchg
inc
ja
pop
jmp
loopne
push
iret
dec
and
push
push
and
int3
and
sub
dec
jne
mov
inc
shll
adc
push
push
ficompl
xor
fnsave
adc
cld
xchg
cmpsb
sbb
out
ror
das
add
mov
sbb
inc
sbb
fdivrp
pop
lods
dec
mov
add
sbb
push
stos
adc
cld
pop
mov
fnstenv
xchg
jp
sbb
mov
dec
mov
add
or
or
shl
inc
cltd
cmp
mov
mov
push
pop
push
cmp
adc
cmp
out
mov
aaa
pop
mov
imul
jne
xor
mov
mov
or
das
mov
rol
sarb
and
sbb
bound
orl
ss
sahf
sbb
mov
mov
xchg
sti
loop
dec
or
mov
ss
pop
ret
pop
xchg
sbb
lret
xor
pop
psubusw
mov
pop
add
cmp
pop
or
adc
xchg
add
inc
and
push
scas
ss
pop
jbe
sub
aam
test
cmp
or
jno
mov
stos
sub
xor
insl
rorl
jp
inc
sub
imul
mov
mov
rcll
lods
movsb
out
pop
xchg
stc
dec
es
push
fstp
push
jg
iret
out
xor
int
xchg
ret
mov
call
mov
pop
or
outsb
adc
sub
repz
pop
add
addr16
mov
sub
test
cltd
inc
movsb
lods
adc
js
outsb
mov
pop
xchg
ljmp
bound
gs
bound
pushf
scas
mov
mov
lods
sbb
enter
or
imul
test
call
in
jne
mov
jb
mov
je
dec
inc
inc
cmpb
out
out
cmp
fildl
pop
test
mov
push
and
xchg
jmp
pop
jg
pop
dec
jae
outsl
pop
fs
inc
sahf
sbb
adc
loop
leave
mov
iret
ja
mov
jb
mov
sub
mov
adc
sub
pop
loope
test
lcall
pop
fisubs
mov
sbb
das
fildll
mov
cli
mov
out
mov
mov
mov
fsubr
xchg
mov
jecxz
mov
std
and
test
aaa
pop
outsl
sub
jns
sub
add
xchg
movsl
lds
xchg
std
shrb
xor
es
std
add
mov
ds
xchg
sbb
sub
xor
cmp
pusha
lcall
int
pop
push
shr
out
movl
adc
and
je
push
ja
outsl
int3
les
int
push
pop
test
daa
jle
test
dec
pop
and
adc
in
mov
iret
pop
inc
lahf
das
inc
lahf
xor
sbb
addr16
ror
scas
cmp
imul
es
xchg
and
xchg
mov
add
push
xchg
push
jbe
and
test
movb
and
sub
ljmp
mov
pop
nop
or
jge
js
inc
mov
repz
inc
stos
outsl
inc
inc
fsubr
ror
adc
jg
sbb
fwait
shrb
fimull
les
stc
mov
jbe
pop
fcomip
jge
cmp
pop
fdivl
sbb
mov
imul
clc
xchg
jmp
fistps
push
xor
add
mov
xchg
scas
fisubl
inc
add
xor
loopne
lods
es
pop
in
mov
xor
bound
and
mov
and
pop
or
push
xchg
fldenv
mov
pop
leave
sbb
ja
xchg
sub
xor
fimuls
sbbb
call
inc
in
enter
jns
inc
cli
add
mov
idivl
stos
add
int
es
add
rorl
rorl
dec
jmp
call
jns
jb
inc
pop
and
xchg
xlat
addb
iret
lods
fldl
nop
fwait
cmpsb
xorl
mov
pop
adc
ss
int3
jge
fldt
popa
pop
leave
adc
lods
insl
loope
fdivr
lcall
stos
aam
cmp
xchg
repnz
jo
ds
std
xchg
ret
jge
bound
and
enter
lahf
lods
mov
or
lods
stc
sbb
insl
and
push
dec
cmpsl
cmp
lds
loope
add
jns
and
or
in
xor
lds
or
loop
jle
and
mov
adc
push
mov
imul
pop
in
push
cmp
jl
mov
jl
xor
xchg
jge
lds
sub
lahf
adc
xchg
push
pop
push
sbb
or
popa
cltd
imul
movsl
xor
sub
add
daa
lret
inc
mov
shlb
adc
ss
inc
stos
loopne
imul
inc
cmp
mov
inc
popf
mov
mov
data16
pop
or
and
dec
mov
cmp
je
out
outsb
sub
mov
pop
push
mov
push
mov
mov
bound
sti
loopne
dec
mov
popf
ds
mov
mov
add
fisubl
addr16
xchg
and
fldt
xchg
cmp
mov
out
add
icebp
sbb
jg
jmp
pop
xor
xor
ss
loopne
or
xor
loope
or
adc
cmp
dec
fsubs
cmp
int3
lret
fildll
add
jno
pop
adc
loop
push
mov
enter
imul
nop
mov
sub
jmp
rep
adc
xor
outsl
pop
sarl
hlt
sbb
mov
addr16
aad
mov
push
mov
dec
mov
fsubs
jmp
jnp
mov
pop
xor
aas
ret
or
xlat
push
cmpsb
cltd
into
inc
jnp
ja
mov
aaa
sarb
ja
int
mov
inc
ja
clc
arpl
outsb
cli
xor
push
pusha
xchg
fisubs
fiadds
outsb
scas
call
loopne
pop
fisttpll
xchg
repnz
pop
and
and
imulb
dec
or
cmc
scas
add
lock
cld
inc
xchg
movsb
iret
int3
out
jge
add
and
sahf
inc
mov
add
jo
lds
dec
stos
fcomp
cmp
notb
xor
sbb
xor
or
lret
add
dec
adc
jle
mov
pop
inc
or
push
cwtl
je
test
push
sub
inc
sarl
push
xchg
stos
orl
push
add
cmp
cs
das
test
cmp
out
mov
adc
push
push
cmp
lcall
adc
sbb
out
mov
fiadds
lds
aam
mov
sub
fldcw
jle
sti
divl
aas
fnstcw
call
cmp
mov
mov
lahf
sbb
data16
mov
adc
push
mov
xor
xor
cmp
mov
outsb
mov
or
pop
pop
mov
xchg
mov
sub
add
and
push
pminsw
dec
xchg
js
cmp
shrl
fldt
int3
andb
or
jmp
pop
test
adc
insb
inc
dec
or
add
cmpsb
imul
inc
sub
pop
loopne
jge
push
add
sti
sbb
push
lret
and
pop
mov
lods
in
dec
hlt
inc
xchg
dec
pop
ficompl
cmpsb
ljmp
insb
fs
add
scas
and
sahf
aas
or
cmp
inc
test
pop
jne
ja
mov
cmp
jae
add
sbb
mov
mov
xor
into
mov
and
addr16
pop
jl
fstps
shlb
mov
aam
in
test
andb
or
fdivs
mov
out
mov
dec
adc
cmp
sarb
push
mov
scas
orb
dec
lock
jecxz
dec
ficoms
and
jo
jecxz
pop
inc
fsubrl
gs
out
push
push
add
dec
jo
mov
push
lret
mov
les
test
loop
mov
in
sub
push
addr16
andl
test
push
sar
in
ds
push
jl
icebp
inc
jmp
rclb
mov
in
out
push
clc
int
jp
sub
xor
jl
rcr
and
dec
jb
nop
imul
iret
mov
mov
push
sbb
repz
mov
inc
or
mov
notb
or
ds
push
push
push
cmc
jge
push
js
mov
sbb
xchg
push
xor
test
mov
loopne
pop
lds
inc
xchg
imul
imul
inc
xor
andl
fnstenv
call
xlat
push
lahf
mov
sub
cmc
loop
jecxz
add
sub
test
fbstp
jecxz
mov
push
adc
lret
jmp
mov
in
mov
xor
bound
dec
jmp
arpl
fs
add
movsl
jbe
xor
jecxz
dec
sbb
sbb
sbb
mulb
mov
mov
icebp
mov
xor
dec
jo
fs
data16
out
xlat
je
fwait
push
popa
lock
or
pop
mov
sub
scas
sub
cmp
roll
pushf
jmp
add
out
inc
push
jle
push
data16
pusha
sbb
xchg
pop
mov
ljmp
jecxz
scas
scas
mov
gs
jae
mov
mov
lea
xor
cltd
inc
pop
mov
or
clc
pop
jb
in
mov
fdivs
addr16
sahf
or
cmp
sub
loope
and
lods
sub
test
js
dec
lock
gs
inc
addr16
sti
pop
fcmovnu
out
pop
shr
shr
sub
lret
out
out
orl
js
enter
cmp
add
cmpsl
mov
aam
push
fldenv
add
and
rcr
dec
sti
out
mov
aaa
xor
mov
cmp
fidivl
mov
int
test
xor
and
inc
loope
outsl
lock
sub
add
jecxz
sbb
fs
sahf
add
mov
cmpsl
xchg
stos
test
cmpsl
stc
mov
int3
fiaddl
loop
test
pop
std
mov
xchg
lods
out
adcl
sub
xor
int3
shll
xor
addr16
in
xchg
adc
out
or
test
dec
push
or
int
popf
ss
add
test
inc
shrb
dec
outsl
sub
xchg
lahf
jnp
xchg
lret
idivl
faddl
xchg
imul
cmp
jo
mov
addr16
test
and
fidivrl
fdivs
ljmp
xlat
mov
push
dec
lahf
push
pop
lret
adc
or
cmp
xchg
cmp
shll
enter
movsw
or
mov
inc
sub
push
mov
adc
mov
dec
int
inc
sub
push
cmp
add
lock
mov
divl
sbb
mov
pop
lret
fprem
incb
mov
inc
stos
jecxz
dec
leave
and
daa
xchg
and
sti
mov
pop
out
out
xchg
pop
inc
mov
ljmp
es
xchg
add
inc
int
xor
sub
mov
call
mov
and
and
push
mov
add
push
hlt
bound
fldt
jg
mov
adc
dec
xchg
imul
fistl
repnz
cmp
mov
mov
and
cmp
cli
das
mov
aas
mov
in
aam
jmp
idivl
mov
in
mov
fbld
sbbb
fisubl
movsb
das
cmp
cmp
lods
sub
inc
jae
lds
jge
sbb
stos
jp
and
xchg
popa
jge
sub
insl
fnsetpm(287
and
notl
mov
fldt
call
add
ret
sarl
cltd
stos
mov
stc
cmp
cmp
adc
stos
enter
in
pop
imul
xor
rorl
sbb
push
jge
add
adc
inc
mov
lret
fdiv
ret
sub
daa
insb
mov
ljmp
mov
call
cmp
fwait
out
inc
jb
lods
pop
movsb
push
xchg
and
leave
fsin
aas
jecxz
pop
sahf
mov
mov
test
mov
sbb
pop
push
lret
and
mov
or
subb
mov
in
and
icebp
lret
sbb
test
add
adc
sti
xchg
fsts
call
andl
xor
mov
add
ds
or
sbb
ret
and
xchg
scas
jmp
sub
dec
adc
mull
lret
jnp
lea
xchg
cmpsb
popf
and
inc
inc
stos
mov
aaa
or
inc
mov
decl
fwait
pushf
fimuls
cltd
xchg
popf
out
aam
push
xor
push
ljmp
ficomps
inc
sbb
sub
ret
pop
inc
xlat
inc
mov
fnop
aam
dec
inc
jno
inc
rcrb
dec
cli
insl
addps
cmp
or
jnp
mov
sbb
mov
rcl
jno
js
jle
gs
or
sbb
ss
mov
jp
out
mov
pop
jno
pushf
cmp
lods
jmp
repz
xor
jmp
movsl
mov
test
std
loopne
outsb
jmp
sahf
xchg
loope
inc
pop
dec
or
inc
dec
inc
sbb
lret
jecxz
mov
sub
push
dec
add
xchg
and
mov
sub
outsl
xchg
movsl
fwait
mov
sar
mov
dec
out
daa
arpl
xchg
ret
mov
xchg
adcb
into
mov
mov
push
sbb
out
xor
dec
mov
icebp
enter
sahf
or
or
and
iret
adc
xchg
sbb
pop
clc
mov
ja
xor
mov
jmp
fstl
mov
sbb
popf
test
jp
sub
push
push
data16
pop
frstor
adc
ja
mov
push
mov
pop
push
sbb
mov
aaa
cld
or
and
add
jecxz
insb
xlat
sbb
cmpb
cmpsl
push
pop
or
push
push
mov
pop
pop
lods
popf
hlt
inc
fs
dec
push
push
faddl
cli
div
lock
cmp
ret
pop
mov
shrl
mov
stos
insb
mov
fcomps
sub
ljmp
or
js
pop
jb
xchg
nop
jg
add
fwait
jl
push
jo
push
and
divl
jae
scas
adc
call
mov
jecxz
sub
movsl
mov
movsl
sub
inc
testb
mov
orb
and
fwait
sbb
pop
dec
roll
sbb
outsb
sbbl
jne
mov
mov
int3
jne
cltd
mov
js
in
pop
pop
xor
imul
pusha
pop
scas
popf
sbb
hlt
pusha
lods
cwtl
ja
inc
lods
adc
inc
push
inc
lea
add
cmp
fs
aaa
and
movsl
pop
xchg
repz
adc
xor
jns
rclb
pushf
add
ljmp
cmp
xor
cmpsb
cwtl
push
mov
out
sbb
pop
int
inc
mov
mov
ret
adc
hlt
pop
cltd
jge
arpl
mov
xlat
adc
jbe
fsubrs
pop
std
inc
cmpsl
lahf
call
mov
push
pop
xor
lds
sub
or
and
test
mov
mov
add
rorb
and
test
sahf
dec
jle
sbb
add
mov
mov
fs
sar
scas
add
imul
andl
push
push
inc
sub
jg
mov
nop
popf
xor
dec
incb
in
jb
mov
xor
mov
loope
out
cmpsl
daa
sub
repz
shrb
fisubrl
rcll
clc
setne
mov
call
scas
loopne
mov
and
sarb
xorl
push
push
hlt
insl
ds
dec
adc
stos
mov
out
and
lock
fcmovu
jmp
push
gs
icebp
jne
mov
ljmp
push
lahf
jecxz
lahf
sub
aad
fwait
mov
fs
fimuls
ja
cmpsb
bound
pop
mov
lret
xchg
or
mov
sub
jge
nop
int3
add
sti
je
outsb
aad
mov
movsb
insb
repnz
rorb
push
xor
fidivl
sub
add
mul
pusha
movsb
jge
inc
int3
fdiv
dec
addr16
mov
push
scas
ja
or
repnz
pop
sbb
mov
ja
jg
loope
stos
and
repnz
cltd
das
ja
jae
je
aad
arpl
jo
test
int
pop
mov
push
in
pop
in
push
lret
mov
or
inc
dec
dec
xor
and
pop
das
sub
mov
fadds
int
ret
mov
roll
cmp
inc
xchg
sub
in
jmp
pop
add
stos
sbb
cltd
pushf
mov
pushf
jns
push
sarl
popf
fidivs
pop
xchg
mov
cmp
mov
lcall
idiv
enter
cwtl
fsubrs
addr16
mov
scas
call
and
sahf
pop
out
scas
xor
cmp
imulb
lret
dec
or
dec
dec
or
out
ror
mov
sbb
adc
mov
mov
pop
cltd
rolb
dec
push
std
push
jg
out
setge
and
or
jnp
xchg
hlt
ja
repz
xor
add
dec
inc
jp
inc
or
xchg
rcr
fadds
out
jle
nop
push
xchg
sbb
in
mov
lock
test
sub
movsb
sbb
jg
cli
sub
cmp
dec
pushf
movsl
xorl
shlb
stos
jo
adc
jns
dec
dec
dec
aas
call
xchg
out
xor
in
in
in
rcll
ret
ja
loop
call
loopne
cmc
test
sbb
insl
xchg
xchg
xchg
lock
adc
dec
cmp
movsl
lds
mov
pop
push
dec
add
pop
inc
xchg
subl
and
xchg
cmp
sbb
xor
mov
cltd
ja
stos
lods
mov
dec
adc
pop
lds
pop
pop
movsb
jo
mov
cltd
pop
sarl
stc
mov
outsb
lods
test
test
xchg
sub
out
adc
int
push
mov
imul
pusha
jge
std
pop
shl
cmpl
in
lcall
push
test
mov
ret
mov
mov
imul
adc
mov
fdivr
mov
lret
cld
adc
les
push
sbb
mov
push
push
xor
sbb
pushf
mov
inc
arpl
or
jae
roll
cltd
fisubl
nop
and
mov
mov
mov
push
aam
adc
xchg
inc
fldt
sub
fcomp
movsb
pop
pop
ret
ljmp
pop
xor
imul
mov
xchg
dec
fisttps
push
roll
popl
fistps
sub
lret
test
nop
and
or
or
leave
push
add
roll
pop
enter
loop
xlat
push
insb
mov
addr16
aas
aad
in
shl
cwtl
mov
jnp
outsb
pushf
inc
mull
lcall
push
js
ret
pop
jb
es
and
mov
ret
dec
inc
cmpsb
push
cmp
sub
clc
xchg
dec
mov
popa
xchg
jecxz
jl
sub
shrl
add
pop
add
push
fs
push
enter
scas
test
sarl
cmpsb
adc
aam
xlat
jb
jecxz
adc
cmp
add
cmp
cwtl
imul
cmpsl
mov
inc
or
jbe
ljmp
jge
sti
add
adc
pop
add
pop
jnp
repnz
mov
push
lea
test
xor
out
cmp
xacquire
mov
lds
mov
pop
imul
pushf
mov
test
scas
fmull
inc
jnp
add
lret
mov
xchg
push
stos
push
lret
gs
mov
mov
xchg
mov
repz
cmpl
jno
testb
jns
mov
xchg
mov
cmp
sbb
mov
scas
bound
bound
cwtl
lods
fcmove
call
mov
lret
out
push
jg
out
or
jo
movsb
nop
addr16
jae
mov
jp
or
into
sarb
inc
sbb
inc
sub
and
ficoms
loopne
cmpsb
addl
xor
xor
movsl
or
fs
xchg
push
insl
out
cmp
rcll
sbb
mov
lods
cli
cmp
mov
movsl
add
shrb
jecxz
test
cwtl
add
sub
mov
loopne
inc
hlt
and
dec
add
sahf
push
cmp
pop
jl
xor
repz
mov
in
mov
lret
test
mov
loope
nop
aaa
add
mov
mov
inc
hlt
mov
insb
jle
xchg
and
mov
fisttpll
mov
movsb
dec
pop
arpl
or
jae
outsb
inc
test
aad
xchg
push
cmpsb
dec
lret
mov
addr16
xchg
and
lock
repz
push
in
xchg
xor
push
sbb
sub
xchg
add
repnz
push
rol
push
cli
arpl
pop
iret
xchg
cwtl
rcl
xor
fsubl
gs
fdivrs
pop
mov
cs
mov
dec
lock
xchg
ret
or
sub
cs
movsl
repz
mov
mov
or
lret
fistl
fwait
cs
stos
jl
pop
dec
loope
xchg
jb
dec
or
add
dec
xchg
js
loope
xchg
adc
and
xchg
hlt
and
ja
daa
pop
clc
jge
push
imul
dec
mov
sbbl
sub
xchg
and
and
pop
sbb
test
fdivr
mov
xchg
int3
mov
or
loope
mov
jbe
mov
push
call
test
xchg
test
ds
cmc
or
out
inc
cmp
mov
in
mov
add
arpl
scas
mov
pop
mov
pop
ss
clc
adc
pop
inc
push
cs
xor
scas
mov
jne
popf
cmpl
mov
call
loope
sub
sub
aad
dec
scas
test
rcll
sti
add
fbld
fs
xchg
out
xchg
out
stos
xchg
or
pop
push
test
leave
call
mov
scas
shrb
pop
pushf
inc
inc
mov
cli
push
cmp
or
fsubs
mov
push
xor
push
int
inc
pop
inc
adc
inc
int3
lahf
sbb
sub
ror
xor
hlt
leave
sti
shrd
movsb
clc
sbb
fs
outsb
ljmp
ds
leave
cmp
mov
inc
out
jle
and
sbb
aaa
add
addr16
adc
insl
sub
out
cmpl
push
mov
xor
loopne
sbb
jge
adc
popa
hlt
cmp
push
push
pop
aas
popf
rcr
popa
iret
jne
into
stc
xor
add
pop
jns
dec
cmp
adc
mov
into
and
out
pop
lret
loopne
jmp
mov
add
das
movsl
sub
movsl
in
movsb
sarb
xor
aam
hlt
gs
ficompl
mov
cmp
mov
mov
xchg
cmp
outsl
lret
icebp
mov
pop
inc
mov
pusha
and
sub
iret
adc
sub
pop
das
icebp
ljmp
push
in
push
and
jbe
mov
push
jne
sub
jno
nop
mov
mov
xor
fidivs
add
and
rclb
fistpl
imul
mov
fistpll
lods
and
out
adc
lahf
repz
and
push
lock
out
lds
push
pop
xchg
sub
adcb
jnp
or
cmp
push
test
out
lret
jmp
mov
fimull
mov
call
jmp
jle
inc
lret
aaa
adc
jl
xor
or
out
subl
or
out
or
pop
dec
xor
ja
add
lea
data16
jle
add
imul
push
in
je
mov
in
inc
cmp
js
out
and
stos
pop
fnstenv
hlt
pop
inc
aam
inc
outsb
jno
dec
std
pop
dec
pop
loop
and
rcrl
in
data16
sub
nop
pop
insb
jb
xchg
arpl
fcmovnbe
add
push
movsl
jo
imul
mov
push
dec
cmp
sub
shlb
mov
mov
or
mov
out
aas
xor
imul
cmp
aam
inc
outsl
dec
cmpl
jne
mov
push
xor
movsb
icebp
and
mov
dec
shlb
insl
xor
sbb
cmpsb
pop
cmp
jns
push
adc
test
or
dec
inc
sbb
jns
xchg
xor
and
sub
ret
out
xor
adc
or
sub
lea
jecxz
adc
sbb
add
sbb
sub
gs
lods
jle
jle
loopne
out
scas
push
cmpsb
mov
mov
xchg
push
push
andl
jb
xchg
sbb
xchg
outsl
aaa
cmpsl
adc
cmpsb
xchg
lds
cltd
jl
popf
fucomp
movsl
icebp
aad
sbb
loop
push
push
mov
clc
stc
adc
and
cld
test
jo
mov
inc
mov
mov
push
call
in
inc
pop
mov
mov
mov
lahf
xor
mov
xchg
movsb
xchg
popf
test
sbb
mov
pop
mov
jo
iret
adc
inc
inc
data16
sbb
xor
ja
shl
mov
dec
iret
popa
int3
ss
faddp
mov
inc
cltd
loop
outsl
mov
jae
iret
push
push
mov
mov
and
lods
fsts
and
test
pushf
fidivrs
inc
and
pop
cmp
clc
scas
xchg
pop
loope
out
out
lods
call
mov
add
jmp
sbb
clc
adc
xor
ja
add
pop
mov
cmp
xor
xor
stc
xor
insb
jbe
and
dec
fsts
fstpt
out
sti
loope
inc
loopne
cmp
inc
out
or
dec
imul
jmp
xlat
test
inc
es
rcll
fistps
insl
cmpsb
js
mov
sub
outsb
lods
sub
push
inc
jecxz
ss
and
shrl
mov
les
inc
jae
out
push
fldenv
sbb
loop
clc
adc
sub
mov
add
aaa
ja
or
pushf
dec
out
shl
sub
insb
nop
pop
inc
mov
daa
sub
adc
bound
bound
mov
roll
cmp
push
sub
cs
cmp
jnp
loopne
cmp
xor
daa
insb
lret
jg
sub
stos
or
roll
andb
es
push
std
or
cmp
fimull
xor
and
movsb
push
pop
scas
and
inc
xor
daa
adc
jp
and
daa
repnz
xchg
test
xchg
ret
nop
cltd
mov
or
and
and
push
loope
or
movsb
mov
fists
outsl
das
div
jecxz
inc
xor
adc
clc
shlb
shl
pop
xchg
enter
adc
jge
arpl
cmp
adc
jecxz
push
xchg
repz
jnp
push
or
mov
fisubs
test
adc
call
fdiv
test
mov
push
xchg
out
jne
ljmp
adc
push
adc
add
popf
xorl
xchg
xchg
js
out
xor
addr16
out
cmp
pop
rcll
cmpsb
cmpsb
cmpsb
lods
push
cmpsl
rolb
push
push
sub
mov
std
dec
cmp
jl
push
leave
xor
xchg
jmp
push
scas
adc
inc
fcompl
dec
in
push
xor
in
dec
jae
sub
out
inc
or
shl
std
or
int
or
or
rcll
push
sbb
or
ljmp
push
call
lds
mov
shl
dec
adc
mov
add
repnz
int3
repz
lret
push
sub
inc
lret
jo
xchg
mov
pop
ffree
push
aam
int
add
mov
push
popf
dec
xchg
int
lret
inc
decb
sub
mov
sbb
mov
outsb
movsl
inc
outsb
aad
shll
pop
xchg
jecxz
jecxz
mov
test
dec
and
add
mov
stc
mov
xchg
repnz
daa
in
xor
out
jg
into
mov
pop
repz
xchg
sbb
dec
mov
cmp
push
mov
dec
je
daa
sbb
jo
add
iret
aaa
arpl
and
mov
pop
cmpsl
cltd
lret
out
shll
pop
cltd
push
xchg
push
nop
imul
es
push
rcl
mov
lret
pusha
jmp
repz
into
ljmp
mov
bound
sub
cmp
push
repnz
nop
push
in
add
mov
bound
loope
xor
jnp
inc
test
clc
pop
dec
bswap
inc
lea
and
push
mov
sub
sbb
fsubl
jle
out
jb
fstpt
stos
shl
mov
fcmovne
jl
xchg
das
cmpsl
inc
out
push
aaa
push
sub
jle
loop
mov
adc
dec
push
into
test
jle
xchg
or
sub
jp
lahf
mov
xchg
mov
ss
in
data16
flds
lret
lcall
in
pop
repz
or
or
mov
adc
mov
aad
sbb
ds
movsl
sbb
outsl
js
push
icebp
out
and
ret
shrb
stc
mov
movsl
xchg
mov
and
push
lcall
or
mov
jmp
mulb
insb
out
insb
outsb
aaa
pop
popf
ss
and
sahf
xor
and
fwait
adc
jge
sbb
insl
add
aaa
mov
push
and
int
xor
movsl
push
sub
cmp
rcrl
outsb
sti
jle
sahf
test
in
jl
mov
fisttps
aad
cmp
aad
cmp
popf
cmp
add
pop
push
sbb
aaa
aaa
jnp
loope
add
dec
mov
xlat
sahf
stos
mov
ja
test
iret
lds
call
mov
cmp
cmpsb
addr16
int3
jmp
lahf
xor
repnz
dec
mov
inc
xchg
fcompl
push
iret
push
iret
in
mov
sbb
jle
fimull
ficompl
cli
mov
mov
lret
add
aas
dec
cmpsl
iret
int
mov
pushf
jb
or
adc
sarl
out
bound
es
pop
rclb
dec
cmpsl
out
dec
or
cmp
xchg
mov
mov
test
daa
add
push
ret
movsl
push
dec
mov
add
dec
jns
insb
and
out
aad
mov
popa
mov
jnp
and
imul
iret
push
mov
test
imul
sbb
out
rcl
js
cltd
or
repnz
out
and
shlb
lods
pop
nop
fcoms
lock
pop
dec
fcompl
dec
enter
xchg
clc
shrb
daa
or
dec
clc
inc
pop
xor
jmp
frstor
mov
insb
test
lret
inc
fisttps
xchg
inc
int3
ret
loope
mov
cmc
mov
aaa
pop
and
jo
inc
pop
out
arpl
cmp
test
int
das
stos
push
std
arpl
pop
push
inc
push
out
mov
gs
pushf
movsb
mov
pop
jae
test
scas
jmp
popf
jno
cli
repz
data16
add
push
es
shlb
dec
mov
adc
pop
push
cld
push
push
sti
rorb
lret
js
enter
jae
or
mov
stc
in
xchg
mov
mov
or
clc
fs
or
mov
add
mov
jb
loope,pn
js
lret
cli
pop
push
je
xchg
cmp
test
or
mov
sbb
leave
cld
in
pop
dec
lahf
push
cli
dec
mov
push
jecxz
stos
or
les
or
bound
stc
aaa
pop
lods
sbb
jbe
test
std
and
adc
inc
xor
adcl
lea
pop
daa
fs
int3
cmp
cmpsl
fists
and
mull
fldcw
push
mov
xor
mov
cmc
lods
adc
aaa
mov
mov
mov
stos
shl
sahf
int
xchg
and
pop
xchg
cld
pop
mov
or
into
cmp
icebp
fucom
cmpsl
cmp
and
dec
pop
mov
xor
dec
mov
scas
fisttps
test
or
mov
mov
dec
lret
mov
dec
aad
xchg
shlb
push
sbb
fsubs
into
mov
xchg
pusha
push
cmp
hlt
jb
leave
cmp
mov
sbb
jnp
adc
dec
pushf
leave
lcall
push
roll
das
cmpsb
shlb
lret
sub
adc
test
dec
ja
cmp
dec
shll
loope
pusha
fiaddl
xor
cwtl
inc
scas
inc
inc
xor
call
shll
mov
mov
mov
jno
divb
shrb
int3
push
and
dec
jl
adc
cmpsl
imul
push
add
jg
pushf
shlb
xor
fidivs
cmp
lahf
das
rcrl
movsb
cmp
popa
sbb
xor
mov
clc
pop
jle
call
cmp
or
jge
or
dec
pop
mov
das
add
add
insl
rcl
shll
subb
mov
test
mov
inc
push
mov
fs
lods
ljmp
inc
lret
addr16
xchg
jno
pop
pop
mov
adc
cmc
fstps
dec
mov
std
ret
or
xlat
cmp
loope
scas
mov
inc
sbb
dec
je
push
in
push
or
xlat
addr16
add
testl
push
push
dec
sub
jne
out
lock
inc
push
dec
test
in
test
lret
pop
repz
mov
xchg
pop
stos
push
aas
mov
mov
xor
and
xor
aaa
fisttps
call
adc
jns
or
rcrb
addb
push
sub
xchg
scas
stc
dec
sub
aas
jnp
clc
fnstcw
dec
arpl
lods
pop
mov
std
gs
xor
pop
bound
add
push
add
ret
pushf
pop
xor
les
aad
shlb
add
pop
mov
push
push
and
mov
sbb
cmpsl
and
je
cltd
fisttps
xchg
jge
jge
sbb
icebp
cmp
lret
sbb
jbe
mov
arpl
mov
gs
add
lock
push
call
orb
daa
jp
out
add
jecxz
dec
sbb
pop
call
push
or
pop
cmp
and
mov
mov
mov
std
sub
xor
popa
mov
sbb
pop
faddl
sub
or
push
mov
or
push
lds
and
cli
icebp
pop
jl
imul
out
pushf
mov
loopne
jmp
nop
cltd
sbb
or
stos
jmp
data16
arpl
ss
repz
loop
push
enter
sub
mov
movsb
inc
and
push
pusha
cmc
xor
into
sub
sub
mov
sti
scas
xchg
sbb
orb
jge
sbb
dec
lahf
adc
inc
xor
nop
out
nop
mov
adc
sbb
and
fistpll
lds
mov
sbb
dec
push
sub
fldcw
mov
insb
aas
popf
aad
pop
lcall
push
out
aad
mov
out
stos
mov
int
and
sbb
out
out
xchg
jae
shrb
jns
mov
sbb
inc
or
xchg
sub
mov
repnz
std
pop
bnd
aas
jecxz
stos
shlb
mov
daa
outsl
xor
sarb
inc
inc
testl
divl
inc
fsubl
pop
and
push
inc
inc
nop
dec
fidivrl
call
push
xchg
imul
sti
mov
testl
lea
dec
or
adc
in
cmpsb
fisubrs
cmp
sti
push
out
mov
scas
pusha
or
push
pop
pop
shl
xchg
insl
xor
and
aas
stos
adc
jo
cmpsl
fisubl
nop
cmp
in
dec
fists
inc
sub
in
jp
inc
pop
fisubrs
push
out
leave
mov
loope
push
adc
cmp
jle
mov
fadd
clc
das
or
gs
ret
mov
add
cmp
fwait
pop
daa
ss
or
mov
mov
jno
adc
scas
xlat
popl
push
test
xchg
pop
ds
mov
das
lds
jbe
scas
pop
int3
mov
sub
mov
xor
pop
inc
movsl
xor
jns
fisttps
or
push
or
divl
not
and
dec
les
sbb
mov
pop
call
call
push
in
out
call
fsubr
jno
sub
fistl
xchg
push
subb
xchg
pop
lret
mov
imul
mov
dec
enter
call
fsubrs
mov
mov
ja
mov
pop
leave
push
shll
mov
inc
dec
add
or
mov
sbb
lock
cmc
pop
lock
jge
cmp
dec
lret
call
ja
and
addb
ret
cmp
add
shlb
jnp
fidivrl
cmp
loop
stc
add
mov
dec
cmpl
mov
int3
in
push
test
jb
lea
add
ss
popw
pop
push
popf
mov
cltd
sub
push
xlat
out
in
fstpt
sub
test
lds
pop
mov
mov
test
or
addr16
mov
xor
jae
sbb
repnz
sbb
pop
test
pop
push
shufps
xchg
mov
pop
xchg
inc
adc
push
pop
mov
push
mov
jbe
mov
xchg
mov
mov
adc
jmp
ljmp
jg
mov
push
lcall
xor
loope
and
in
test
xor
adcb
subl
pop
xchg
pusha
mov
andl
aad
sbb
test
adc
xchg
mov
fldcw
lahf
xor
insl
in
inc
xor
xor
xor
es
outsl
xor
daa
push
add
into
pop
movsb
adc
shll
lock
cmp
mov
stc
mov
fs
dec
inc
pushf
aad
mov
outsb
jmp
or
je
mov
ja
or
sub
movsl
test
inc
xorl
movsl
shrb
or
pop
jbe
xor
lods
mov
mov
lahf
mov
cmp
adc
in
mov
outsb
rorl
or
std
sbbb
mov
sbbb
mov
sub
sub
imul
or
xsha1
cmpsb
dec
mov
or
xchg
hlt
xchg
test
sbb
aam
aam
adcl
in
mov
xchg
mov
ss
jae
ret
pushf
xchg
adc
pop
loope
jb
adc
sub
in
addl
inc
fs
sbb
mov
decl
xchg
mov
in
leave
cmp
test
jae
outsb
cmp
int3
cmpsb
ret
xchg
pop
leave
jl
push
into
cmp
inc
mov
push
ja
push
in
pop
ja
out
nop
cmp
je
je
xchg
sbb
les
ja
jmp
mov
add
xlat
fsubrl
fistpll
outsb
push
lahf
in
adc
imul
mov
mov
rcl
fnstenv
push
call
lahf
sbb
es
mov
and
shl
dec
insl
mov
sub
sbbb
push
xor
mov
std
dec
xor
inc
test
imul
dec
outsl
fdivrl
sbb
jbe
mov
push
bound
icebp
mov
cmp
rcrb
mov
push
imul
insl
daa
sub
aas
ds
loopne
rorl
stc
mov
bswap
adc
aas
lret
mov
push
out
xchg
stos
jno,pt
stos
push
rol
push
sbb
inc
sar
or
lea
xlat
out
pusha
adc
push
or
jp
jl
pop
jns
inc
and
hlt
sti
out
jp
inc
test
sbb
ret
roll
mov
push
lods
cld
cmpsb
mov
jnp
mov
les
pop
add
pop
sarl
int3
lahf
sarl
ret
ja
out
sar
push
xlat
mov
lahf
xchg
je
ret
jge
and
stc
test
inc
fiadds
ss
imull
icebp
int3
push
adc
arpl
cmpsb
inc
and
jae
sbb
adc
add
out
outsb
inc
cmc
pop
pusha
fiaddl
mov
lods
mov
inc
cmc
enter
dec
sti
mov
cmp
inc
xor
in
notb
shll
jbe
or
inc
or
aam
fwait
jmp
fldl
sbb
lcall
je
clc
into
xor
pop
xor
fidivl
adc
mov
lock
jp
fcoms
xor
sub
ret
push
mov
cmc
inc
or
into
cmp
push
jo
int
mov
add
jmp
fnstsw
xor
lcall
imul
cmpsl
push
push
sbb
aad
iret
dec
mov
inc
xor
adc
popa
lods
iret
jb
xor
pop
fistpl
mov
sahf
cmp
les
cmpsl
mov
dec
popl
jno
mov
loope
dec
pusha
jne
fidivrl
lahf
imul
pop
testb
mov
xchg
ss
enter
pop
sbb
dec
push
cs
pop
pop
pusha
stc
sbbb
pusha
out
push
mov
xchg
mov
xchg
out
mov
sbb
jp
push
movl
movl
aam
adcb
dec
sti
or
push
cmp
repnz
mov
jge
sahf
push
jmp
xor
stos
bound
or
lods
in
ss
dec
das
xchg
sub
out
pop
cmp
outsl
push
int3
dec
loope
and
lret
jmp
rclb
jbe
stos
and
xchg
mov
cmp
lods
pop
cli
ds
std
imul
add
add
nop
shrb
popf
outsl
mov
inc
xchg
sub
stos
adc
jns
inc
xchg
xor
rcrb
lcall
xor
cmpsl
negb
stc
imul
out
add
cwtl
xor
and
les
mov
jl
sbb
push
das
out
jmp
mov
outsl
dec
xor
leave
out
jg
test
add
mov
cmp
aas
les
addb
in
mov
adc
inc
int3
adc
xor
pop
movsl
and
pushf
shl
jle
dec
jbe
jno
dec
push
or
and
xor
pop
sub
cmpsb
dec
leave
inc
fnstcw
xchg
pusha
arpl
sbb
fiadds
sub
mov
ss
mov
in
jnp
inc
dec
xor
sub
xchg
fistpl
lret
dec
or
ja
xchg
and
aam
push
sbb
push
mov
mov
je
inc
cmp
cmpsb
inc
loop
sub
push
addl
out
mov
daa
ret
ja
pop
push
into
mov
out
inc
sbb
ja
aad
adc
mov
xchg
int
mov
out
sub
jle
sub
sub
mov
gs
jge
std
ret
mov
clc
repnz
and
inc
fmuls
je
mov
ja
adc
sarl
std
clc
gs
loopne
mov
sbb
or
pop
cmpsb
jns
mov
sub
jge
push
cmpsb
mov
sub
cmp
push
jae
mov
sbb
fwait
mov
mov
jle
negb
pop
mov
fwait
and
ljmp
mov
fstpt
idivb
jns
popf
sub
sub
xrelease
cmp
sub
lahf
std
push
mov
add
sub
xchg
les
call
jecxz
out
ss
jns
sti
xor
lahf
mov
pushf
mov
mov
xor
xchg
pop
jecxz
lret
lds
iret
in
adc
mov
sbb
cltd
int3
test
push
adc
mov
push
test
cltd
push
in
ss
jbe
jb
aad
movsl
inc
inc
ret
gs
sbb
mov
rcrb
idiv
lds
and
fcompl
sbb
test
pop
jbe
xchg
shlb
adc
in
pop
repnz
or
jmp
lret
adc
std
iret
pop
mov
pushl
inc
cmpsl
push
dec
test
push
inc
outsl
fadds
stos
cwtl
mov
push
inc
mov
jle
sbb
dec
or
shlb
and
dec
lods
pop
andl
andb
jecxz
lcall
mov
sub
fnstsw
adcl
sbbl
rcll
adc
repz
inc
adc
push
shrb
cmp
test
sbb
jecxz
cmpsb
cld
mov
push
popa
mov
xor
sub
out
into
push
mov
mov
nop
pop
jns
pushf
orl
and
popa
mov
test
fnstenv
cmpsb
dec
inc
cmpsb
mov
jg
arpl
and
jge
scas
xchg
and
mov
mov
push
leave
xor
inc
sub
mov
and
in
rolb
sarl
push
xchg
out
hlt
sti
or
pop
and
dec
aaa
xchg
pop
lods
in
lds
cli
in
test
fnstenv
add
js
adcb
loope
adc
popa
aaa
scas
jp
push
test
loope
push
cmp
xchg
jmp
xchg
cwtl
adc
push
ret
push
inc
jge
movsb
test
sti
xor
mov
xchg
outsb
sub
sub
lcall
nop
sar
out
fmul
or
icebp
cmp
fstl
dec
xchg
mull
rcr
ja
fcmove
sbb
adc
shrl
rorl
orb
call
sbb
scas
sub
pushf
inc
add
push
clc
inc
xchg
popf
fs
addr16
mov
lcall
xor
cmp
leave
test
pop
sahf
xor
loope
ja
out
movsb
xchg
test
jo
jno
es
cmc
out
sahf
mov
push
xor
adc
xor
mov
imul
std
js
xor
pop
pop
jp
dec
ror
xchg
cmpsl
lods
jle
test
mov
scas
cld
xchg
dec
jle
enter
andb
out
cs
mov
in
lock
aam
jecxz
ja
leave
das
sbb
dec
stos
out
je
mov
xor
inc
adc
jo
fistpll
mov
add
stos
xchg
mov
addr16
lret
lret
inc
xchg
enter
push
popa
sub
mov
adc
lahf
or
out
push
lret
in
or
bound
jle
push
sbb
test
mov
push
sbb
push
and
les
in
mov
sbb
cli
mov
cwtl
push
shll
clc
andl
or
cmpb
test
test
push
rolb
je
insb
jo
push
jne
fadd
fstps
jno
stc
pushf
and
hlt
and
imul
aas
int3
add
add
in
adc
add
lods
dec
jle
addr16
popf
xchg
dec
leave
fimuls
inc
sbb
fidivl
cli
leave
cld
xorb
xchg
in
adc
fisttpll
pushf
inc
jno
cmpsl
rcrl
cmpsl
xor
xchg
dec
int3
aaa
rorb
into
mov
xchg
xor
fsubs
lods
add
mov
jecxz
mov
jp
mov
mov
xchg
incl
cli
pop
nop
mov
xchg
cmp
stos
scas
int
cs
adc
cmpsl
shr
add
idivb
sub
jp
jns
mov
ret
mov
fwait
lds
jb
pop
push
popa
cltd
add
or
or
xchg
push
jae
in
push
scas
jmp
push
fs
inc
out
lret
adc
jl
xor
add
lcall
xlat
push
xchg
xchg
pushl
daa
jp
and
adc
mov
sub
call
add
inc
mov
jle
mov
int3
lret
push
adc
aad
test
sbb
adc
xrelease
xor
xor
out
jnp
pop
push
jns
xchg
or
jecxz
push
jne
dec
adc
mov
mov
mov
push
cmpsb
inc
aas
push
int
xor
pop
pop
clc
sbb
test
push
test
cli
xchg
je
sbb
loopne
push
mov
add
push
mov
jmp
mov
xor
jl
mov
xchg
ja
or
repnz
push
std
add
inc
and
popa
jo
fsubs
xor
jmp
subb
pop
jmp
nop
mov
nop
jmp
sbb
sub
sbb
shlb
ljmp
cs
in
in
ss
sbb
and
test
jg
mov
xchg
xchg
dec
enter
ds
movsb
dec
dec
andb
faddp
dec
orl
xchg
call
sub
cmp
fcoms
adc
and
pop
punpcklwd
or
mov
xor
jbe
xchg
jbe
orb
loope
test
repnz
fidivl
gs
iret
out
das
sbb
ret
mov
shll
mov
pop
cmp
ss
sahf
insw
mov
and
add
pop
inc
add
lret
shll
pop
mov
das
pop
sbb
jmp
and
out
add
fs
aaa
imulb
xor
ja
in
xor
enter
sbb
or
aam
addr16
jns
jb
insl
jle
jecxz
mov
out
frstor
push
or
adcb
adc
pushf
pop
add
xor
mov
and
dec
movsl
lret
iret
fwait
sub
int
mov
les
ds
push
ljmp
jbe
lcall
xor
pop
cli
in
inc
je
lret
insb
or
das
cmpsl
orl
rcrb
pop
jge
xchg
ret
enter
movb
aaa
dec
sub
cmpsb
rolb
inc
lock
xchg
sub
shl
cmp
movsl
aad
movsb
clc
cmp
cli
lea
fs
adc
push
test
imul
xor
or
fcmovnu
mov
pop
push
push
cmpb
inc
aad
mov
or
jnp
cltd
inc
ds
push
push
push
inc
inc
std
test
cmpsl
jmp
add
sti
push
mov
cmpsl
daa
sub
and
pusha
sti
or
and
add
mov
stos
adc
lods
and
pop
mov
mulps
cmpsb
mov
faddp
stos
loope
mov
jl
in
sub
pushf
pusha
out
sahf
out
fistpll
call
gs
movsl
loope
xor
cmpsl
xor
js
loope
and
popa
mov
hlt
mov
mov
adc
fnstsw
sti
inc
inc
adc
std
jns
xchg
movsb
mov
dec
lcall
adc
mov
test
pop
cmp
push
sub
and
popl
loop
mov
adc
jl,pt
push
or
cli
jb
dec
movsl
fbstp
push
jno
mov
stos
fnstsw
dec
or
cmpsl
xchg
rcl
xorl
or
clc
pop
jl
mov
mov
add
ret
lea
sub
cs
pushf
jg
sub
movl
cmp
addr16
push
test
jmp
jecxz
fsub
mov
adc
xchg
dec
fwait
mov
fidivrs
or
add
mov
adc
cmpb
rorb
ficoms
clc
inc
cmp
ljmp
sub
xchg
in
fnstenv
pop
test
xchg
dec
xchg
dec
cmc
xlat
mov
test
adcb
push
mov
fidivs
cs
and
sub
int3
leave
ljmp
cs
int
lods
lods
jp
lds
xchg
xchg
push
sub
in
repnz
sbb
jp
ds
cmp
mov
sub
into
insl
hlt
cmp
add
add
cld
push
fldz
or
dec
gs
lret
adc
or
dec
inc
pushf
adc
pop
adc
sub
enter
loopne
sbb
cmp
mov
stos
je
xor
cwtl
icebp
es
lods
push
fnstsw
pop
mov
xchg
lret
cmp
xchg
jmp
aad
loope
mov
fmuls
or
int
pop
mov
mov
push
scas
pop
and
je
aad
into
loop
mov
mov
rol
inc
mov
loopne
push
adc
stc
int
sbb
jmp
cmpsl
xchg
fildll
jnp
mov
mov
shlb
subb
cmp
cmp
sbb
cmpsl
adc
jle
jg
les
sbb
mov
jge
mov
stc
cmp
outsl
insb
in
xor
inc
out
push
mov
test
out
repz
outsl
iret
sub
mov
lcall
or
sbb
test
sbb
mov
jo
cmpsl
ljmp
and
cmpl
enter
call
mov
into
xchg
add
adc
mov
loop
pop
es
scas
and
out
int3
cmp
sub
push
insb
pushf
sbb
je
lcall
xchg
inc
adc
dec
rorb
pop
xorl
lock
jg
decb
lds
test
sbb
lods
aas
xor
fcoms
test
ret
xchg
pop
mov
out
xchg
push
popa
cmpsl
mov
aaa
icebp
int3
lods
mov
arpl
sbb
push
xor
xor
mov
push
and
fwait
daa
int3
aas
sub
xlat
inc
frstor
pop
pop
fistps
insb
ret
sbb
pop
out
outsb
stos
outsl
imul
jae
xchg
insl
xchg
push
adc
aaa
jnp
sbb
jb
xchg
push
aam
jne
rclb
push
fsub
xor
mulb
jb
jno
gs
cld
lret
gs
loope
jo
movsb
aad
xorl
outsl
test
sbbl
sub
mov
mov
push
xchg
lret
adc
add
test
xlat
inc
and
jmp
mov
push
and
or
dec
inc
movsb
mov
sbb
arpl
lods
sbb
sub
cmpsl
pop
add
orl
push
sbb
insb
push
jne
jge
imul
cmp
mov
ljmp
dec
xor
xchg
cltd
insb
lock
icebp
push
adcb
push
add
push
fsubrp
sub
jns
sbbb
xor
jge
jle
or
or
icebp
imul
sbb
and
ret
je
adcb
cmpsb
ret
xchg
cs
scas
cmpsl
test
jb
ret
subl
jnp
rorb
jg
or
scas
mov
ret
add
clc
inc
dec
fwait
inc
or
lock
movsb
add
xor
push
xor
pop
cld
sub
mov
in
or
dec
ja
cli
push
mov
add
fisubl
adc
and
ss
loop
jns
pop
lret
int3
insl
inc
jp
dec
sbbl
aam
loop
pop
adc
dec
add
cmp
pop
xorl
in
xor
leave
ret
ljmp
andl
xchg
scas
mov
je
movsl
rclb
into
lds
inc
cmc
test
ret
lock
enter
mov
aam
push
mov
mov
push
repnz
fimull
fldl
mov
sub
rcl
dec
icebp
cltd
repz
cmp
xchg
inc
cwtl
pop
imul
sarb
jle
cmp
cmp
mov
mov
mov
jp
xorb
sbb
mov
scas
ficoml
add
add
ror
lahf
loope
sbb
add
mov
jmp
push
mov
lret
push
and
adc
lock
lahf
lcall
ret
add
sbb
push
push
sbb
pop
sub
js
jp
mov
loop
inc
and
push
and
pusha
in
arpl
test
andps
xchg
in
mov
ja
out
pop
cmc
notl
mov
push
cmp
sbb
fimuls
clc
cmc
jno
and
sub
lods
push
mov
arpl
call
pop
ret
movsl
sub
dec
mov
es
cli
int
mov
out
int
cmpsl
pop
lods
or
out
imul
mov
and
ror
adc
ss
addl
mov
stc
repnz
sbb
mov
pop
xorl
fsubrs
cmp
push
mov
arpl
mov
insb
push
jo
sti
xchg
clc
mov
or
xchg
dec
or
jecxz
cmpsb
fcoml
jne
fisubs
pop
cltd
xlat
xor
and
in
push
pop
enter
scas
loope
lret
xchg
add
shl
add
xor
inc
in
mov
jae
shlb
pop
enter
js
adc
hlt
out
stos
xchg
xchg
add
out
roll
pop
cmp
mov
xchg
test
fisttpll
cs
xchg
add
gs
cmp
xlat
mov
inc
out
xor
inc
xchg
and
pop
stos
decb
or
push
lds
pop
in
loop
jb
mov
mov
outsb
add
sub
inc
sub
ret
loopne
adc
mov
imul
subb
ret
add
xchg
inc
mov
loopne
mull
sbb
dec
pop
dec
push
aaa
lret
dec
pushf
jne
pop
push
shlb
dec
pushf
int
scas
sahf
cmp
xchg
or
jg
ja
pop
lcall
or
loope
mov
in
sbb
addl
cmp
or
mov
mov
stos
adc
jne
outsb
add
cmpsl
lahf
xchg
popl
push
xchg
insl
insb
xor
call
pop
adc
and
insl
test
jmp
mov
xor
inc
ds
sbb
mov
lret
lret
aas
orl
adc
dec
mov
loope
outsb
jge
adc
cmp
inc
fistpll
inc
xchg
sub
push
jae
lods
test
scas
mov
and
and
sub
sbb
and
and
push
jbe
xor
sbb
scas
out
push
sbb
jle
mov
dec
cmp
dec
repz
mov
xchg
cmp
xor
xor
fisttpl
dec
xchg
lcall
pop
mov
out
imul
sub
outsl
ret
ja
push
mov
push
ret
push
sbb
adc
imul
or
dec
add
loop
setbe
aad
xor
das
cmc
adc
pushf
jnp
test
movsb
data16
jmp
int3
xlat
jmp
movsl
outsb
and
std
mov
pop
out
jge
les
or
mov
repnz
sub
cmpsb
notb
and
pop
jno
adc
pop
cmpsb
aaa
lahf
scas
das
mov
sub
mov
mov
xchg
cltd
sub
cmp
imul
adc
fstpt
push
push
adc
inc
pop
in
ljmp
addr16
inc
ja
dec
cltd
sbb
jmp
in
dec
jle
pop
sbb
fldenv
ret
repnz
movl
mov
dec
arpl
dec
fistl
daa
lods
cmp
icebp
aam
jg
data16
stc
ret
inc
scas
pop
push
mov
je
inc
test
xlat
fwait
ret
movsb
fildll
dec
pop
pop
sahf
mov
xchg
xor
fwait
enter
hlt
dec
dec
xchg
or
stos
cmc
mov
dec
fiaddl
or
aam
sub
push
idivb
mov
dec
ret
adc
xchg
fistpl
mov
mov
fcos
sub
rclb
sub
jle
gs
inc
adc
movsl
movsl
and
adc
dec
mov
outsl
out
lahf
fimull
arpl
clc
xchg
lret
lods
and
lahf
sbb
and
dec
xchg
xchg
cmpsl
test
pop
addl
jle
loopne
xor
add
mov
in
jmp
je
je
lcall
fadds
xlat
fsubrs
push
lret
pushf
out
mov
and
pop
inc
ret
inc
xchg
push
xor
xor
bound
mov
xor
sbb
inc
add
mov
iret
mov
xchg
icebp
in
push
nop
xor
xorl
mov
icebp
pushf
mov
cltd
call
in
daa
push
cmp
mov
sbb
aam
push
mov
mov
cwtl
repnz
lods
sbb
and
cld
stos
mov
push
mov
sbb
shll
call
popf
xchg
ljmpw
sub
cld
je
sahf
add
ror
stos
mov
rcrb
pop
sbb
ja
inc
xor
outsl
inc
pop
xor
mov
jecxz
stos
mov
mov
and
mov
adc
or
dec
out
sub
gs
loop
js
test
out
faddl
xchg
adc
gs
push
je
jns
xor
jno
jmp
lds
es
push
xchg
imul
pop
inc
pop
push
xchg
add
dec
jnp
and
shll
cwtl
pop
outsb
hlt
sub
scas
cwtl
push
or
mov
cmp
push
jb
dec
mov
add
sbb
push
pop
cli
iret
lds
and
xchg
mov
xor
sub
add
dec
fistps
lcall
mov
xchg
cli
inc
push
jno
negl
jno
icebp
lahf
stc
and
hlt
ljmp
sub
xlat
roll
inc
cli
cmp
xchg
insb
dec
sub
stos
jo
call
fucomip
notl
push
pop
mov
bound
xchg
das
test
adc
fcoml
xchg
popf
jne
cli
mov
jno
inc
mov
dec
push
adc
arpl
rolb
jnp
inc
jne
sahf
stc
gs
pushl
std
xchg
dec
fcmovnbe
cmp
imul
in
rcrb
mov
sbb
add
stos
xchg
leave
movsl
daa
push
popf
xchg
push
sbb
lret
repnz
mov
sbb
lock
push
bound
push
mov
fisttps
mov
les
sar
loopne
inc
dec
test
or
mov
aam
das
push
mov
jle
dec
jb
aaa
mov
sub
adc
push
xlat
and
cltd
imul
in
insl
jp
adc
iret
push
inc
adc
jp
in
rcll
sub
aas
add
nop
call
bound
push
push
fldl
and
je
dec
and
mov
dec
mov
dec
shlb
pop
popf
adc
fisubs
jp
xor
inc
push
test
aas
aaa
cmp
repnz
sbbl
or
push
lahf
aam
pop
js
jle
dec
stc
ret
sub
lods
sub
or
ret
addr16
sbb
dec
loope
js
loope
movsl
lds
scas
xor
dec
int
cmp
inc
adc
push
dec
push
in
add
xchg
xor
repnz
cli
jg
pop
cmp
int3
fmuls
aam
sbb
mov
push
loop
jns
jne
iretw
xor
ja
or
mov
in
mov
cmp
in
xchg
out
inc
or
pop
and
dec
mov
dec
push
icebp
push
xchg
fistpll
fcomps
adc
fldcw
mov
bound
test
sbb
jno
mov
loope
cmpsb
xchg
mov
iret
adc
mov
xor
sub
jo
js
push
xchg
and
push
mov
mov
daa
jne
mov
insl
xchg
add
xchg
testb
js
mov
push
xor
xor
inc
call
rclb
cmp
insl
push
jmp
pop
mov
jecxz
mov
add
fisttpl
cmpsb
mov
or
lsl
inc
pusha
fstps
sbb
pop
adc
cmpsl
push
out
das
jne
pop
adc
dec
sbb
or
das
hlt
movsl
dec
inc
enter
adc
sbb
aad
jne
xchg
xchg
lret
subl
push
xchg
shl
jo
pusha
mov
lret
jle
jecxz
call
push
add
daa
test
sti
pushf
mov
jg
rorb
or
pop
jmp
push
pop
xor
lcall
cld
xchg
aas
ret
das
out
aam
ss
dec
adc
xor
cmpl
leave
cld
call
push
bound
or
push
push
icebp
sahf
add
pushf
int3
rclb
mov
jnp
or
js
xchg
push
inc
inc
xorl
les
imull
dec
pop
fnstenv
mov
insl
jmp
xchg
xchg
lret
dec
add
add
push
mov
xlat
jb
adc
xor
push
in
or
cmp
outsl
int
and
ds
sub
lret
test
and
xchg
stc
push
dec
push
pandn
movsl
pop
or
imul
scas
push
es
push
sbb
pop
cmpsl
ror
add
ret
sub
and
jno
scas
arpl
mov
xchg
outsl
out
lcall
imul
sbb
ret
jecxz
fdivrs
repnz
xorb
inc
cmp
test
movsl
cs
mov
lds
leave
jbe
std
sbb
loope
addl
fcompl
jl
xchg
jecxz
subl
ss
sti
aam
out
int
push
sub
or
or
pusha
lret
add
sbb
lea
mov
lea
adcl
ds
xchg
pop
je
jbe
xlat
jp
test
cmp
push
jns
pop
sbb
and
pop
sub
test
xor
cmp
dec
bnd
adc
mov
sar
rcrl
insl
lods
int3
mov
sub
or
xor
and
add
mov
sbb
push
inc
cmpsl
dec
mov
push
and
xlat
inc
dec
sbbl
sub
inc
xor
arpl
adc
fidivrl
and
lret
inc
jne
popa
ljmp
jl
lret
fiadds
adc
ret
mov
xchg
cwtl
imul
dec
je
mov
xor
lret
add
scas
and
mov
lret
lret
leave
jp
ljmp
shlb
aas
out
adc
mov
in
xorl
cwtl
sub
repz
pop
pusha
fildll
jo
rcl
add
fbstp
and
aaa
push
das
ljmp
ja
cltd
outsl
sar
sti
in
xchg
dec
in
push
scas
sub
daa
andb
cmp
inc
push
sbb
jb
popw
rclb
xchg
bound
cwtl
mov
cltd
jl
push
adc
fiaddl
cs
cltd
xchg
repz
ds
xor
in
outsl
jl
sbbb
shlb
addb
jge
dec
mov
cmp
and
loop
hlt
ja
repnz
mov
xor
lds
es
aam
out
mov
add
jne
jns
data16
pop
or
js
xor
or
ficoms
lcall
jae
dec
and
ficoml
pop
roll
pusha
ljmp
xor
mov
xchg
xchg
inc
lods
xor
cli
jae
jnp
inc
pop
add
xchg
setp
and
cli
jne
pop
pop
pop
mov
xchg
dec
push
cmp
sahf
and
and
cltd
leave
add
add
ja
pop
test
pop
jbe
sub
xchg
dec
imul
xlat
hlt
fdivr
rcll
inc
mov
out
arpl
mov
lcall
shll
jne
mov
lcall
std
cmp
test
jl
mov
mov
dec
movsl
xor
out
sub
fidivl
push
cltd
scas
ret
int3
sahf
add
cld
je
xor
cld
dec
or
adc
or
jnp
or
mov
lret
cmp
mov
jbe
lock
out
test
xor
aaa
loop
and
mov
pop
xor
jg
cmp
cmp
dec
aad
rcrb
xor
xchg
fstps
ret
sub
ret
xchg
sbb
xor
lret
je
cwtl
xlat
out
insl
mov
cmp
mov
mov
fmul
iret
and
out
mov
add
xchg
cmp
add
sbb
fwait
and
idivl
dec
scas
inc
sub
mov
mov
jmp
mov
dec
scas
mov
inc
stos
mov
cmc
dec
sbb
add
mov
mov
loop
jle
imul
pop
addb
add
shrb
cmp
pop
out
jno
inc
enter
cmpsb
jbe
daa
ljmp
mov
mov
aad
adc
pop
leave
push
in
daa
movsb
dec
das
push
in
sbb
xchg
push
xchg
es
push
jge
cwtl
insb
rcll
scas
jo
insb
gs
rol
mov
adc
xor
mov
loopne
les
inc
cmpsl
inc
inc
inc
xchg
and
repz
pop
inc
push
testb
fwait
jns
sub
jge
les
lahf
aaa
jb
pop
xchg
push
add
and
mov
out
leave
add
daa
adc
pop
rcr
adc
pop
ret
scas
or
test
push
popa
mov
arpl
mov
mov
sub
hlt
mov
xchg
bound
mov
jo
sahf
cmp
dec
cli
test
lods
and
push
lcall
filds
jl
pop
repz
jecxz
scas
cmpsl
xor
je
push
loop
inc
lods
nop
sbbb
stos
mov
scas
aaa
test
sub
data16
gs
lea
shrl
push
addr16
std
mov
in
mov
mov
jne
mov
mov
fs
mov
movsb
or
sbb
push
aaa
and
arpl
incl
sbb
adc
mov
sahf
or
pop
sbb
mov
scas
cmove
mov
add
enter
into
jae
jg
inc
lcall
fildl
jecxz
adc
das
cmp
fidivrl
adc
movl
jl
xor
sbb
push
out
and
fmulp
sub
inc
mov
add
lahf
adc
pop
jg
rorl
nop
mov
mov
dec
ret
pop
ljmp
jecxz
cmp
lods
aam
push
ds
or
fwait
push
jp
lahf
dec
push
mov
pop
repz
mov
outsb
clc
mov
jecxz
xchg
cmp
enter
xchg
lcall
and
dec
pushl
xor
inc
iret
push
cmpsb
scas
incl
xor
std
out
sbb
cs
out
fbld
xchg
cmp
test
jecxz
and
jg
sub
sbb
pop
cmp
test
jle
ljmp
pop
imul
str
dec
test
dec
add
jnp
cmp
stos
movb
ljmp
bound
mov
insl
sbb
js
cld
mov
and
cmp
in
xchg
push
sbb
pop
pop
dec
xor
pop
mov
push
out
loope
dec
mov
repnz
ds
sbb
int3
jecxz
jbe
sbb
test
outsl
dec
daa
jecxz
shl
inc
push
setb
adc
or
sahf
test
push
sub
sbb
xchg
into
xor
jmp
sub
outsl
mov
xchg
repz
lea
jne
or
inc
imulb
into
test
cmp
push
sti
mov
xor
stc
push
adc
fdivr
sbb
inc
test
mov
fldcw
cld
divl
xor
je
dec
push
xchg
pusha
mov
xchg
jecxz
push
jp
lcall
das
cmp
es
pushf
sbb
repnz
adc
icebp
jg
cmpsb
lcall
pop
mov
xchg
push
xor
dec
sbb
les
jle
cmp
mov
inc
mov
jmp
ja
cs
cs
push
rolb
icebp
cli
jl
dec
adc
sbb
mov
add
cli
cwtl
xchg
push
xchg
addr16
adc
cmp
dec
push
mov
and
lret
fs
fwait
jno
and
adc
jmp
push
sbbl
inc
adc
iret
pop
jecxz
xchg
outsb
test
adc
ds
push
scas
jno
sub
pop
icebp
inc
movsl
dec
jne
xchg
lea
and
sbb
mov
inc
or
fdivrl
adc
in
cmp
jo
loopne
lahf
std
dec
jecxz
loope
mov
in
jns
and
test
icebp
pop
popf
adc
push
sbb
out
xchg
jbe
call
mov
sti
mov
inc
xlat
iret
cmp
icebp
enter
xchg
int
leave
ljmp
rolb
stc
loopne
push
adc
shl
mov
scas
lahf
jge
cmp
inc
mov
jns
ds
mov
frstor
or
mov
pop
test
xor
or
das
pop
jb
scas
test
sub
lea
loope
repz
inc
call
std
clc
roll
mov
aam
mov
sub
adc
sbb
adc
cmp
add
cs
push
fldcw
add
or
sbb
cmp
imul
fwait
push
push
lret
fwait
shr
mul
stc
idivl
inc
movsb
inc
add
fisubrs
in
insb
pop
jnp
jecxz
xor
inc
xchg
faddl
and
dec
mov
jae
shlb
mov
jo
jp
dec
pop
and
inc
adc
adc
cwtl
jnp
sub
lods
repz
mov
dec
cwtl
bound
sub
or
mov
push
or
es
shl
cmp
icebp
mov
movsl
lret
mov
stos
aas
mov
xor
jae
es
imul
mov
loope
outsl
mov
inc
aaa
mov
mov
pop
dec
adc
push
test
arpl
add
mov
xlat
xchg
aad
add
jp
fsub
lcall
int3
and
cmp
inc
fisttpll
xor
adc
insl
lods
out
xchg
and
cmp
adc
dec
gs
and
push
aaa
adc
jno
push
aam
lods
or
pop
xor
call
pop
lods
or
and
imul
stos
mov
cs
and
jecxz
cmp
sub
pushf
test
loope
daa
aam
adc
mov
addr16
pop
das
pusha
stc
jle
std
add
adc
mov
sub
nop
aam
call
in
mov
outsb
fldenv
sti
ret
mov
negb
outsb
rorb
sbb
dec
mov
xchg
and
nop
imul
pop
xor
mov
mov
shll
push
testb
aad
hlt
and
ror
ret
dec
push
je
fistl
sbbl
push
mov
dec
jp
cwtl
roll
xor
ds
adcl
mov
pop
xchg
sub
scas
pushf
in
pop
dec
jmp
push
mov
pop
pop
xor
jle
xchg
mov
in
mov
jge
das
in
les
out
jmp
stos
sbb
repnz
shlb
aaa
cmp
add
jge
mov
divb
mov
add
sub
mov
mov
pop
cmp
inc
mov
cmp
notb
outsb
cmp
adc
mov
sbb
sbb
popf
push
repnz
dec
imul
icebp
mov
gs
mov
aas
stos
ficompl
pop
lods
jmp
hlt
push
or
repnz
shr
pop
nop
inc
xlat
daa
cmp
xor
pop
repz
hlt
xor
ja
sahf
lret
pushf
xor
lret
popa
pop
inc
add
loope
pop
aas
mov
clc
lods
imul
mov
repz
push
repnz
and
outsl
mov
xor
fs
dec
xor
popa
aam
xor
pop
sub
leave
fstpt
push
xchg
cltd
aaa
repz
xor
enter
adc
jge
sub
cs
daa
cwtl
inc
seto
cltd
sub
mov
mov
loope
ror
jle
inc
adc
test
cli
mov
outsb
aam
sbb
fs
fs
mov
dec
sub
leave
mov
push
pusha
mov
add
dec
cltd
add
cmp
orb
icebp
fsubr
dec
insl
hlt
out
cmp
leave
adc
mov
jo
xchg
fnstsw
sbb
rolb
cmp
sarb
arpl
xor
daa
enter
rcr
xchg
or
scas
xor
and
cmpsl
mov
imul
imul
popa
jecxz
fcompl
sbb
pop
adc
loopne
xor
xor
lea
mov
ret
std
adc
add
ja
mov
cmp
sbb
cwtl
xchg
call
sub
xor
lods
adc
sbb
shlb
xlat
cmpsb
xor
lahf
inc
repz
sbb
sbb
fldenv
insl
push
xchg
push
push
data16
push
xchg
adc
pop
add
and
inc
mov
xor
mov
dec
mov
rclb
lret
cmp
setns
or
arpl
mov
xor
cmp
orps
add
xchg
outsb
arpl
sub
pop
imul
xor
mov
int3
fimuls
icebp
jns
sub
add
jo
cltd
mov
push
int3
xlat
loope
xchg
push
ficomps
mov
ret
mov
push
or
pop
insl
add
fbstp
aam
ret
jns
pop
mov
jbe
push
sub
dec
xchg
aam
insb
or
mov
xchg
xchg
pushf
or
sahf
inc
aad
loope
std
in
sbb
test
xlat
mov
shrb
daa
xchg
les
loop
arpl
lods
pop
push
pop
js
ret
in
in
pop
lods
nop
cmpsb
push
daa
push
cmp
shlb
out
or
mov
sbb
ja
sbb
je
adc
cld
sbb
mov
outsl
int
xchg
mov
sbbl
dec
dec
lahf
aad
call
lahf
or
hlt
push
rolb
or
gs
or
fbstp
adc
aaa
ret
aam
mov
popf
mov
jmp
pop
js
xlat
fsubrs
out
pop
lahf
cltd
nop
xor
xchg
je
test
orb
fistpl
cmp
mov
ss
ljmp
add
fsubrs
and
mov
push
fistpll
cmp
xor
dec
sub
or
push
dec
bswap
pop
inc
pusha
jns
dec
fsubrs
imull
jbe
clc
adc
mov
or
scas
mov
aas
ljmp
mov
or
stos
mov
xchg
jmp
loopne
test
sbb
or
in
xchg
jg
adc
iret
pop
ljmp
pop
mov
sbb
or
push
les
fists
xchg
cltd
lcall
imul
sar
cmpsl
add
lahf
stos
imul
jne
jmp
fiaddl
mov
mov
insb
addr16
jle
add
fs
inc
aam
insl
jge
dec
dec
mov
inc
cmp
bndldx
pushf
pusha
bound
pop
mov
scas
in
sub
sbb
mov
and
mov
pushf
mov
and
mov
in
cs
and
mov
aad
test
rcr
mov
subl
inc
fnsave
fisttpl
aas
xor
inc
dec
xor
rclb
in
dec
add
cmpsl
insb
shll
rorb
xchg
lcall
push
push
dec
mov
stos
add
repz
stos
imul
pop
inc
ret
pop
lds
aam
pop
loopne
mov
fstpt
leave
xlat
push
notb
mov
imul
aad
sahf
or
cld
enter
or
fistpll
test
adc
sbb
mov
jns
loope
mov
push
lods
inc
pop
mov
or
and
push
push
and
outsb
std
jmp
int3
jmp
mov
dec
xchg
inc
mov
mov
push
mov
inc
jle
in
adc
xchg
rolb
xchg
inc
xor
sbb
xlat
rep
xor
add
into
push
push
icebp
jmp
jp
jecxz
pop
dec
out
xchg
xchg
xchg
mov
lahf
lahf
les
dec
fcmovb
dec
xchg
push
push
cmp
dec
xor
adc
mov
jnp
arpl
out
mov
cltd
cli
dec
nop
mov
jne
jb
push
push
fidivs
popf
xor
mov
push
mov
mov
outsb
and
or
call
sbbb
mov
mov
push
cmp
jne
inc
pusha
sbb
mov
andl
pop
jge
push
loopne
cltd
xor
push
xchg
adc
push
mov
scas
cltd
stc
mov
pop
out
sub
mov
or
add
imul
fcompl
arpl
adc
inc
les
adcl
mov
stos
push
or
xchg
leave
push
test
mov
push
call
sbb
in
cmc
push
loop
cld
hlt
aam
mov
repz
aad
pop
inc
sbb
int
fldl
jle
and
pop
adc
lock
sbb
cmp
lret
cli
in
test
xchg
mov
and
cmpsb
shr
pop
imul
aad
jae
dec
movsl
loope
sub
push
xlat
xchg
push
pop
xchg
push
cli
iret
scas
inc
xor
add
xchg
xchg
imul
sub
hlt
and
cwtl
dec
inc
fidivl
adc
stc
inc
popf
cltd
mov
call
xor
jmp
adc
mov
out
dec
lods
cs
scas
xchg
xlat
cmp
mov
xor
ret
sbb
cmp
out
mov
sahf
cmp
into
mov
stc
jle
and
adc
xchg
lods
pop
dec
scas
shrl
sbb
shll
mov
enter
js
sti
aad
out
fcmovbe
pop
cmp
add
xchg
inc
xchg
call
ret
fcomp
jbe
sub
loopne
adc
mov
pop
daa
ret
lods
pop
push
mov
jp
ljmp
or
out
add
dec
xor
test
out
dec
std
cltd
jno
out
testb
clc
push
movsl
andb
cmp
xor
xor
push
ljmp
ja
mov
push
lret
sub
sub
dec
shlb
sub
mov
lods
repnz
mov
inc
je
sbb
nop
js
int3
or
pop
clc
mov
addr16
lds
clc
pop
xor
cmp
pop
fists
mov
adc
mov
mov
inc
fildl
jl
in
jo
dec
or
pop
cli
pop
dec
movsl
xor
xchg
mov
pushl
xchg
repnz
lret
lret
aam
int
jmp
out
mov
rolb
cmp
jns
push
fsub
mov
pop
test
das
sbb
mov
test
popa
mov
aad
push
or
xor
insb
sti
jmp
ljmp
push
stc
dec
xor
cmp
fwait
mov
xchg
clc
lock
or
adc
aad
in
xlat
data16
cmp
cltd
push
stos
mov
je
enter
xor
imul
hlt
push
mov
inc
mov
adc
or
or
iret
mov
loope
insb
jg
mov
loop
sub
lea
cmp
inc
pushf
insb
out
mov
mov
mov
mov
push
dec
int3
test
outsb
fistl
mov
inc
sbbb
mov
rcrl
pop
shll
scas
jns
mov
mov
xor
arpl
sub
ficoml
dec
or
rcr
cli
pushl
sbb
pop
xor
inc
sbb
jle
jmp
jp
ja
ss
fnsave
data16
cmp
and
sbb
insl
mov
xchg
out
imul
inc
sub
loop
dec
stos
lea
aad
decb
mov
push
les
xor
into
in
add
or
xor
hlt
push
fiaddl
jge
testb
jle
and
sbb
push
or
stos
mov
aas
mov
cmp
cmpsl
fstps
out
outsl
inc
pop
sbb
cld
inc
and
arpl
sbb
xchg
loop
and
or
cld
clc
lret
inc
xor
pop
rolb
scas
mov
outsb
xchg
adc
pop
dec
lds
pop
jbe
fsubrs
loop,pn
sti
mov
mov
cmp
data16
mov
push
int
std
fsubl
sbb
das
pop
dec
js
fwait
cs
lds
add
test
daa
fwait
scas
out
cltd
and
push
mov
rcpps
add
ss
ljmp
loope
aaa
inc
mov
mov
lret
and
dec
adc
push
bound
inc
mov
lea
in
mov
stos
and
sbb
adc
sub
or
arpl
dec
lcall
sbbb
ja
ja
adc
movsb
add
test
push
inc
add
sub
test
pop
xor
pushf
push
sbb
pop
xchg
mov
cmp
mov
aam
fidivrl
outsl
cli
int3
sbb
decl
cli
mov
mov
mov
fldt
jnp
xchg
popa
xor
mov
int3
cmp
js
adc
setnp
fstpl
pop
hlt
mov
xor
jb
and
aas
xchg
lock
pop
mov
cltd
pusha
add
jl
shrl
add
sbb
sbb
mov
cli
call
xor
mov
insb
aad
iret
mov
ja
xor
repz
insl
dec
mov
aad
dec
das
dec
lret
jl
ss
inc
xchg
faddl
in
mov
pop
aaa
repz
mov
adc
pop
cmpsl
cmp
jecxz
dec
inc
mov
push
mov
ret
mov
addr16
popa
cmp
iret
out
aad
in
pop
into
nop
enter
dec
in
push
or
scas
int
lods
pop
shll
inc
mov
mov
outsl
sbb
sub
inc
add
clc
or
out
loopne
xchg
repz
or
nop
roll
imul
mov
in
adc
sub
sbb
into
mov
jne
xchg
into
roll
mov
push
pop
inc
adc
sub
sbb
mov
mov
lods
lock
stc
lcall
ficomps
ss
jg
stos
dec
pop
mov
or
inc
insb
jnp
or
lcall
mov
pushf
or
dec
pop
rorb
xlat
cld
pop
ss
adc
mov
aas
das
add
cwtl
xchg
xchg
ret
or
mov
ljmp
adc
out
xor
mov
cmp
jo
jle
cltd
jo
push
xlat
mov
jo
dec
mov
mov
xchg
rorb
jae
ljmp
test
mov
pop
out
out
mov
into
iret
test
leave
in
inc
in
adc
aas
pusha
out
sbb
mov
stos
mov
jmp
stc
test
jecxz
test
jb
adc
xor
push
xor
shlb
xor
mov
jmp
jo
cmpsl
insl
or
and
add
jecxz
add
jge
sbb
stos
dec
rorl
ja
out
push
imul
xchg
orl
mov
adc
loop
lret
hlt
mov
jb
lods
xchg
test
loopne
out
mov
sahf
bound
mov
xor
outsb
mov
jnp
mov
lods
mov
dec
insb
cmp
mov
mov
sub
test
jns
sub
mov
dec
inc
and
xchg
std
inc
loope
cmc
sbb
jl
xor
in
sbb
sbb
sbb
insb
mov
dec
push
xchg
subl
add
or
scas
adc
mov
sub
cwtl
inc
ljmp
in
inc
orb
pop
test
aas
aad
ja
mov
xchg
stos
push
mov
rcrb
pop
loope
lcall
pusha
and
loopne
imul
popa
loopne
push
jle
mov
and
bound
jp
xchg
pop
add
dec
cmp
push
test
bound
test
or
inc
lea
lret
mov
aad
sbb
fisttps
inc
xchg
xor
shrb
hlt
lret
adc
add
pop
adc
addb
jno
cmp
adc
icebp
sbb
push
pop
ljmp
loop
inc
lods
xchg
sub
nop
cmpl
xchg
es
pop
inc
int3
pop
aaa
les
dec
inc
adc
test
mov
popa
loope
inc
out
das
les
jo
mov
push
sub
jae
nop
xchg
mull
imul
or
pushf
push
add
mov
xlat
xor
pop
fbstp
in
pop
xchg
inc
jle
add
mov
inc
and
xor
notb
mov
divb
out
mov
or
or
out
repz
sub
loope
adc
sbb
xlat
fstpt
subb
test
pop
pop
xchg
jo
jmp
clc
sub
and
mov
push
sbb
scas
adc
push
dec
push
sub
out
jb
xlat
shrl
dec
dec
loop
sbb
mov
jns
lds
out
lahf
int3
js
xchg
fldt
cmp
subb
out
popa
cmp
icebp
sub
fisttpll
cli
push
insb
mull
shl
adc
xor
push
push
jnp
cmp
or
adc
arpl
rcrb
pop
push
test
aas
test
xchg
cwtl
push
push
mov
push
enter
loop
mov
in
add
rcrl
adc
mov
push
aam
fisubl
push
in
sbb
push
out
call
lret
push
and
lods
mov
sub
leave
adc
dec
mov
arpl
push
inc
dec
fstpt
push
adc
pop
add
stos
jo
dec
mov
mov
mov
or
cltd
repz
icebp
sti
cmc
push
adc
roll
mov
mov
insl
dec
iret
lcall
inc
hlt
fmull
movl
adcb
jmp
outsb
or
pop
jbe
pinsrw
mov
aaa
add
xchg
dec
and
test
in
in
int3
push
cmp
popa
add
out
cmp
in
or
jnp
or
aaa
loopne
out
inc
cwtl
or
and
fimull
xchg
inc
and
cmp
jo
lea
and
sub
xchg
sub
iret
inc
pop
xchg
push
stc
and
jne
stc
notb
mov
or
add
out
push
or
stos
repnz
add
xor
xchg
sub
mov
fdivrl
sub
push
mov
dec
mov
sahf
sub
pop
aam
into
sub
cwtl
into
in
sub
sbb
inc
sub
jp
push
inc
aad
xchg
mov
jl
mov
pop
inc
or
mov
cmp
inc
dec
sbb
jle
scas
adc
xor
xchg
stos
pushf
cmp
mov
sub
jg
and
sub
and
or
pusha
pop
enter
movsb
sub
les
repz
inc
ja
push
mov
pop
xchg
sbb
popa
mov
clc
sbb
or
nop
mov
or
int3
add
jnp
jle
dec
imul
test
cwtl
ss
mov
call
or
jbe
sub
aaa
inc
mov
add
sahf
mov
inc
mov
mov
xor
fs
xchg
mov
cmp
shrl
in
sti
push
adc
ret
inc
jge
fidivs
inc
dec
mov
sub
inc
mov
lods
jbe
negb
orl
outsl
rcrb
pop
std
out
sub
cmp
mov
jns
mov
add
sbbl
mov
imul
ljmp
mov
add
jns
push
sarl
sbb
add
pushf
fistpl
iret
ds
mov
lods
scas
seto
insb
adc
pop
and
in
cmc
iret
sub
push
add
fbstp
pop
pusha
cmp
data16
xor
roll
lea
pop
inc
push
mov
stos
cs
pushl
cmp
pop
arpl
mov
mov
mov
adc
pop
cs
add
mov
cli
rolb
fiadds
jno
mov
push
fcmove
das
push
fcmovu
add
scas
out
cwtl
jmp
mov
dec
fdivrl
mov
lock
imul
sub
xchg
ss
mov
imul
scas
fwait
xor
cs
dec
push
lods
jecxz
pop
or
dec
or
jae
loope
inc
and
aam
xor
fists
ret
scas
mov
mov
test
mov
add
lds
rcl
cmp
cs
lds
outsl
jne
sub
pop
dec
sub
xchg
lea
fcoml
mov
cs
jp
cmpsb
aad
sbb
add
lret
cmp
mov
int3
jp
push
xor
dec
mov
push
inc
adc
sbb
clc
xchg
pusha
test
inc
push
adc
iret
push
divb
jg
test
mov
mov
dec
inc
jb
cmp
lret
sbb
cmp
xchg
or
cmp
imulb
jnp
out
lea
or
fstpt
and
pop
mov
lret
mov
std
pushf
pop
push
adc
or
push
cmp
nop
inc
adc
ds
ret
and
fisttpll
aas
idiv
cmp
push
popa
jae
popf
xor
and
aaa
jp
cltd
or
adc
pop
mov
pop
arpl
mov
pop
mov
loopne
and
dec
mov
sub
xor
ret
nop
sbb
cmpsb
js
jb
inc
stos
mov
jg
xor
cmp
xchg
add
mov
dec
pop
popf
fs
cmp
nop
mov
add
sti
cmpsb
rcll
and
cmp
adc
push
into
jbe
bound
cld
push
stos
cmpsl
pop
jle
test
scas
mov
adc
int
xchg
xchg
pusha
ret
mov
cmpl
in
inc
add
mov
daa
push
es
xchg
scas
inc
dec
xor
mov
sbb
adc
scas
daa
push
sub
adc
and
sbb
or
xorl
es
and
add
das
pop
loopne
push
cmp
leave
cltd
mov
cmp
mov
push
add
jl
or
add
test
lock
arpl
inc
popf
add
xchg
iret
pop
popf
cmpl
adc
or
ret
mov
lahf
out
ret
jb
incl
dec
xor
pop
cs
gs
pop
add
push
aas
sbb
mov
insl
mov
aaa
popa
fnstenv
sbb
cmpsb
repz
adc
inc
mov
lods
enter
jnp
pop
add
int3
jbe
mov
or
jmp
loop
shlb
or
rcr
arpl
faddl
pop
pop
lods
out
stc
or
leave
nop
dec
push
cmp
mov
in
mov
shll
cmp
aam
xlat
jle
inc
test
sbb
clc
and
test
jo
xchg
jno
cld
xchg
cld
fxch
cmp
pop
push
jae
je
ret
pusha
or
sbb
jno
mov
add
rcl
cltd
jmp
mov
stos
int3
push
and
push
pusha
xchg
push
pop
pop
cmp
xchg
hlt
rorb
mov
xlat
mov
sbb
push
loop
adc
cmpsb
and
sbb
add
pop
movsl
pop
shl
sbb
pop
cmp
and
movsl
data16
xlat
mov
in
ficoml
into
call
int3
mov
inc
imul
cmp
aad
sub
sbb
adc
inc
inc
fdivr
jbe
xchg
cld
ret
cmp
enter
cltd
pop
xchg
scas
xor
popf
and
jge
push
sbb
in
pop
dec
ret
lods
out
push
cmp
and
pop
in
mov
jle
cltd
cmp
mov
jle
orl
pusha
push
mov
and
js
jbe
xor
jp
xor
shrb
in
pop
jne
test
daa
jg
rclb
call
lods
mov
pop
hlt
in
imul
test
push
sarb
test
cld
dec
test
cmc
mov
dec
shl
imul
or
xchg
mov
and
adc
inc
mov
xor
xor
stos
sub
lods
pop
sarb
mov
dec
push
sub
fstpt
xchg
adc
pushf
imul
mov
outsl
pop
int
add
out
pushf
leave
push
inc
cli
arpl
sarl
dec
insb
ljmp
cld
mov
cmp
in
rcrb
movsl
jne
jbe
push
pop
dec
push
lods
cmp
hlt
xchg
es
adc
negb
jbe
and
sub
or
mov
mov
inc
xchg
pop
in
dec
loopne
arpl
cmp
xchg
div
imul
or
and
xchg
daa
mov
lcall
adc
lea
and
and
scas
jo
rolb
cmp
push
cmp
adc
cmpsb
sub
jnp
xchg
dec
fdivrl
sub
fsubrs
stos
jo
push
pop
sbb
lods
inc
mov
xor
icebp
je
add
clc
mov
mov
fwait
push
bound
or
mov
in
ret
call
shll
cmp
outsl
mov
out
push
xchg
aas
out
push
lock
repz
add
pop
xor
outsb
xor
xchg
cltd
dec
pop
imul
sbb
mov
mov
xlat
or
sbb
jo
iret
xor
lds
repz
rol
lret
jnp
or
jbe
add
lret
push
stos
mov
stos
xor
aad
push
or
lock
sti
mov
into
sub
sub
popa
clc
scas
lods
into
cmp
pop
add
push
lods
dec
imul
cli
dec
dec
push
fiaddl
fisttpl
test
fildl
sbb
lret
push
sbb
lahf
dec
push
push
mov
pop
xchg
xchg
and
add
cmp
movsb
sub
and
ja
cld
xchg
ss
je
pop
filds
cld
dec
pop
or
in
loope
inc
inc
jg
stos
stos
jg
mov
cmp
aas
testb
xchg
testb
sub
adc
les
arpl
jns
sub
jl
repnz
loop
xor
jecxz
dec
mov
adc
ds
in
add
mov
mov
jno
lea
inc
cmp
pop
xchg
shll
mov
cltd
push
dec
not
pop
jmp
stos
pop
fisttps
jno
pop
pop
icebp
inc
inc
push
mov
dec
pop
ret
ja
scas
cmpsl
icebp
ret
test
mov
mov
cmpsl
iret
mov
mov
cmp
into
out
out
sbb
outsb
inc
xor
xor
arpl
sbb
cld
inc
push
pop
push
rcll
out
out
inc
xorb
and
dec
sbbl
xlat
inc
std
mov
cld
sub
les
xchg
jnp
popa
loop
ja
jp
negb
sbb
mov
adc
loope
mov
ret
pop
test
adc
stos
cmp
std
ljmp
daa
or
adcb
and
gs
xchg
xchg
add
loop
and
push
sbb
pop
adc
pop
cmc
nop
jg
xchg
and
inc
cld
movsb
gs
pop
loop
jmp
fs
jp
pop
cmpsl
adc
mov
arpl
imul
sbb
or
inc
adc
fistl
lock
lods
cmp
pop
inc
push
mov
insb
rcrb
lock
mov
xor
outsl
cmp
popa
xchg
or
addb
sub
xchg
lods
div
xor
push
adc
aam
push
gs
push
xchg
das
mov
mov
adc
lcall
sbb
mov
leave
jecxz
jle
cltd
rorl
arpl
push
pop
dec
sbb
mov
rcrb
mov
mov
hlt
and
inc
and
xor
ljmp
sub
lahf
aam
mov
cmp
pop
das
pop
sub
sbbl
and
push
or
mov
fsubrl
and
pop
push
jg
pusha
je
movb
jmp
mov
mov
jp
pop
lret
mov
sahf
lahf
pop
rolb
inc
iret
pusha
mov
ret
stos
sbb
push
int
dec
pop
adc
lds
clc
add
test
jne
jmp
and
mov
test
and
pushf
jo
jg
lods
sbb
fs
push
xchg
aad
add
das
mov
sti
jmp
lock
shr
pushf
fs
lret
gs
jns
out
jp
xor
mov
incb
popa
std
data16
pop
cmc
push
pop
dec
enter
stc
mov
int
js
sbb
pop
xchg
dec
adc
adcl
jno
add
dec
xor
xchg
mov
out
shl
stc
push
mov
and
mov
pop
mov
push
into
outsl
or
scas
dec
push
mov
iret
xchg
sub
out
jmp
xor
cs
sbbb
jg
mov
vpunpckldq
in
sbb
mov
sarb
or
jl
cltd
mov
push
xor
nop
xchg
roll
push
adc
call
loopne
sub
pop
les
loope
mov
jns
imul
inc
sahf
sahf
xchg
inc
clc
cld
dec
ret
jmp
jb
aas
mov
xchg
cmpsl
cmpl
adc
in
test
jmp
xor
add
ja
mov
dec
pop
xlat
fmuls
push
lret
sbb
sub
loop
sub
mov
dec
xchg
adc
ds
cmpsl
and
add
pushf
int3
shl
mov
out
fistpll
and
xchg
js
movsb
iret
adcb
int
pop
out
lret
push
out
outsb
and
or
iret
mov
push
mov
cmpsb
add
jae
jl
jecxz
jo
pop
loop
dec
jecxz
push
gs
subb
repnz
mov
data16
in
or
mov
in
test
lods
mov
and
cli
xchg
in
or
imul
imul
mov
or
jo
add
pop
in
hlt
mov
sbb
mov
popf
and
jne
push
cmp
cmc
outsl
push
push
mov
inc
sbbl
xor
aad
inc
roll
mov
into
jno
push
pop
inc
push
mov
fwait
call
xchg
xchg
push
mov
cmp
jge
mov
aad
jg
cmp
pop
pand
or
sub
mov
shlb
dec
cld
push
in
sbb
pop
sub
mov
lcall
jbe
lahf
pop
data16
jecxz
xchg
stos
xlat
repz
inc
fistpl
xlat
fisubrs
shrl
pop
mov
lock
test
outsl
fistl
xor
rcll
in
repz
scas
sbb
mov
sarl
scas
out
pop
fildl
mov
bound
xchg
mov
gs
push
stc
pop
or
pop
popf
or
popf
ret
shrl
bnd
call
int3
or
push
sub
addr16
out
push
add
mov
xchg
adc
mov
addr16
sub
incl
outsb
clc
popf
mov
sbb
sub
xchg
xor
pop
fimull
pop
and
and
mov
cwtl
sub
xchg
shl
addl
arpl
cli
mov
enter
icebp
mov
addb
adc
jge
test
push
and
hlt
adc
or
sub
loope
adc
aam
int3
lods
subl
shrb
or
insb
es
mov
bound
pop
pop
lret
lock
dec
dec
inc
dec
aad
xchg
inc
sbb
loop
and
std
gs
test
ja
xchg
outsl
outsb
jl
mov
xchg
scas
inc
push
iret
sub
jmp
add
outsl
enter
mov
dec
int3
roll
jnp
loopne
clc
leave
cmp
sbb
jo
out
pop
add
inc
rclb
or
xorb
jecxz
dec
aaa
and
and
mov
int
mov
or
and
add
mov
lcall
testl
aas
or
repz
leave
test
adc
xchg
pushl
xchg
addr16
pop
test
mov
rol
dec
fwait
jle
xchg
lods
xchg
bound
inc
or
mov
xchg
mov
cmp
insb
stos
nop
push
sahf
sbb
mov
int
leave
mov
inc
repz
or
xchg
sub
and
call
and
or
mov
dec
mov
int3
xor
mov
mov
aam
xor
lcall
jmp
inc
xor
mov
in
jb
cwtl
cs
push
lcall
insl
sti
jge
inc
pop
fbld
cltd
mov
adc
cmpsb
adc
or
sbb
js
jbe
lods
pop
es
cmc
push
or
clc
and
lcall
or
imull
inc
iret
push
xchg
data16
ds
xchg
ud0
cmpsl
push
sub
cwtl
and
jmp
out
mov
loop
xchg
add
rcrl
ljmp
addl
aad
add
lods
and
mov
lret
js
icebp
lcall
mov
sbb
outsb
cld
data16
mov
sub
or
jbe
sbb
test
mov
pop
clc
in
cmp
pop
inc
dec
sbb
mov
cld
cmpsl
jne
fimuls
sbb
sub
add
push
in
aaa
mov
movsl
sbb
sarl
ljmp
out
jb
arpl
add
add
mov
sub
decl
cmp
out
mov
scas
pop
fwait
cmp
pop
mov
ds
push
fiaddl
cld
in
xchg
lods
sub
pop
lcall
ds
loop
push
mov
mov
push
lcall
ss
ret
push
ret
dec
jnp
mov
push
cmp
aad
xor
popf
mov
daa
in
mov
sub
sahf
xchg
jnp
sbb
or
shlb
sub
dec
and
movb
sub
inc
rol
inc
ljmp
leave
jae
jns
xchg
inc
jbe
ret
push
addr16
ret
dec
xor
mov
cmp
sub
and
sbb
pop
call
sub
mov
cmpsb
cmp
mov
dec
outsb
mov
movsb
sbb
psrad
rorb
xchg
fs
jle
cli
inc
jmp
pushf
mov
cmpsb
sub
incl
out
add
xchg
mov
rclb
and
insl
cmp
repnz
inc
decb
sub
push
sub
mov
insl
shll
test
insl
movb
push
stos
adc
loopne
in
test
repnz
xchg
xor
hlt
pop
and
decb
orl
fnstsw
mov
out
push
cmc
lahf
ret
xchg
daa
add
sub
roll
adc
shlb
jae
push
int
mov
popa
scas
cmp
std
cmpsb
pop
mov
push
lds
lods
mov
or
dec
out
jl
jb
adc
sbb
aaa
cmc
orb
lods
jp
xor
in
pop
adc
out
dec
cmp
and
sub
fcmovne
idivl
inc
sub
mov
dec
pop
or
lock
adc
mov
lods
adc
inc
adc
jg
inc
sahf
add
mov
in
andl
addr16
iret
icebp
and
mulb
mov
out
xor
xchg
stos
pop
mov
sub
or
je
add
jnp
test
imulb
mov
inc
lret
outsb
stc
mov
xchg
cmc
ret
fimull
xrelease
pop
pop
jbe
or
cmp
cmp
dec
dec
sbb
mov
test
sbb
popf
dec
repz
cmpsb
pop
aam
pop
pop
mov
outsb
sub
xchg
iret
lods
lret
mov
inc
mov
push
push
in
adc
jae
jae
sub
push
push
call
push
push
mov
rorl
jmp
cmp
ljmp
cmpl
hlt
and
stos
repnz
or
xchg
inc
jns
fwait
xchg
inc
xchg
bound
iret
dec
mov
lcall
in
pop
pushf
cli
mov
xor
mov
popf
lods
sub
cmp
jge
sar
mov
jns
and
rorl
icebp
mov
fildl
and
popf
or
cmp
xor
pop
repz
xor
insb
das
mov
es
jbe
add
idivb
push
les
out
sbb
popa
dec
outsb
insl
aas
mov
pusha
jno
push
or
rorl
stos
fs
shrl
mov
sbb
aaa
mov
scas
xor
aad
lock
push
out
pop
je
mov
mov
ljmp
push
ja
mov
int3
push
xchg
add
repz
pop
outsl
test
mov
imul
dec
bound
jns
mov
call
mov
sub
sbb
and
push
dec
in
das
je
repz
jno
or
inc
into
addr16
cmp
jle
and
and
int
data16
dec
xor
xchg
sub
xor
sub
lret
jl
or
dec
fcomip
cmpsb
lahf
pop
arpl
or
xchg
jge
xor
into
push
mov
pop
lcall
mov
mov
mov
notb
and
popa
jo
adc
mov
mov
xchg
push
nop
xorl
pushf
jno
push
or
xchg
aam
jle
inc
movsl
int
imul
sub
dec
popa
sbb
jl
cmp
jmp
inc
mov
insl
adc
loope
inc
int3
cwtl
popf
sarb
lods
inc
lcall
sbb
lcall
pop
movsb
pop
cmp
push
ret
inc
pop
cwtl
mov
mov
dec
jnp
insl
rcr
in
pop
cmp
icebp
inc
dec
in
loop
mov
fwait
add
lcall
and
cli
movsl
popf
scas
xchg
push
jmp
sbb
repz
std
mov
xchg
test
aaa
out
mov
mov
subb
fadds
mov
fiadds
jge
sbbb
xchg
sarl
loopne
inc
jno
adc
mov
push
test
jmp
sbb
stos
hlt
dec
inc
mov
lds
enter
mov
aad
daa
shl
ret
fdivr
sbb
std
testl
data16
shlb
dec
adc
pop
roll
aam
add
ret
adc
rcrb
sbb
imul
movsb
sti
movsl
enter
add
sti
scas
inc
inc
movsl
scas
lret
pop
or
nop
mov
jle
in
lods
loop
cmpl
jnp
xchg
cs
ljmp
push
push
test
mov
xchg
fldcw
mov
insb
sub
sub
jne
outsb
es
stos
shl
jbe
test
roll
mov
adc
adc
xchg
and
mov
pusha
stc
int
inc
out
data16
int
mov
sahf
xchg
fsubp
inc
xchg
cmc
into
int
and
outsl
movsl
lret
insl
xlat
in
hlt
insl
adc
dec
call
or
fneni(8087
mov
push
jae
andl
cmp
scas
ret
sbb
nop
scas
or
shll
sbb
sub
movsb
shrl
jns
sub
adc
pop
idivb
push
dec
fsubp
movsb
xor
xor
push
push
or
daa
out
sti
mov
sahf
and
decl
dec
push
rcll
pop
push
shrl
dec
jne
push
mov
insb
fldcw
cmp
jg
sbb
in
rorb
cvtps2pd
shll
pushf
into
push
pop
js
addr16
or
nop
notl
jns
aas
and
cs
mov
aad
in
xor
test
hlt
divb
push
xchg
stos
cltd
cmp
loop
push
pop
jnp
stos
fs
jno
lcall
mov
bound
call
mov
ljmp
xchg
jl
push
push
fdivs
or
sbb
out
fiadds
xchg
cmpsb
inc
imul
push
adc
int
test
sbb
ret
sub
lock
fucom
inc
xchg
lock
mov
lret
xchg
ficoml
cmp
or
aas
shll
ja
push
mov
cmp
andb
out
pop
aas
pop
js
insb
cmp
xchg
add
iret
mov
cmp
mov
outsl
dec
fsubrl
mov
xchg
arpl
sti
nop
jl
sub
sbb
mov
mov
and
lahf
jo
nop
sub
push
dec
jb
loop
lahf
add
and
leave
or
inc
pop
jle
cmp
sahf
les
pushf
or
je
jne
pop
cmp
pop
push
xchg
inc
sbb
push
sbbb
xor
cmp
out
mov
lods
jp
jo
inc
xor
mov
push
mov
daa
xchg
add
adc
mov
lea
jno
inc
push
cmc
xor
pop
lock
push
les
in
sbb
out
shll
and
mov
push
mov
stos
push
sbb
bound
rep
loopne
pop
jp
adc
fs
pushf
cmp
into
rclb
adc
mov
lds
fsubs
hlt
mov
adc
int3
mov
lds
jle
ror
inc
cltd
lods
jg
add
fidivrs
inc
fdivs
aad
push
in
test
cmpsb
jmp
pop
lahf
loopne
push
push
das
mov
sahf
inc
jo
adc
and
dec
mov
dec
stos
xchg
lods
dec
cmp
sub
push
outsb
insl
mov
iret
rcrb
cltd
fidivrs
mov
jbe
pop
mov
js
popa
jp
mov
popa
push
shrb
stos
add
xchg
popa
xor
test
mov
rcl
ds
pushf
dec
sbb
fsubrl
mov
sub
jnp
fmuls
sub
call
jns
enter
inc
into
xchg
jb
ds
xor
ja
dec
inc
adc
push
js
je
and
aam
in
fs
jecxz
adc
mov
pop
xor
cli
push
insb
out
cvtpi2ps
fs
add
out
in
sub
mov
lds
sbb
or
xor
enter
es
xchg
mov
inc
jno
lock
push
pop
and
movsb
dec
out
mov
lahf
cmp
inc
mov
pop
cmpsl
imul
pop
mov
shrl
cli
aam
sub
cmc
mov
adc
divb
xchg
mov
sub
push
dec
sbb
ret
pop
add
das
xchg
sub
ja
xchg
or
out
dec
out
mov
xchg
and
lahf
add
and
daa
mov
cwtl
dec
pop
cmp
movsl
mov
mov
outsb
adc
js
mov
add
and
in
fwait
pusha
xchg
add
mov
test
nop
xchg
xor
stc
sub
dec
jge
rcrb
daa
nop
lds
lods
iret
inc
lcall
xlat
sbb
test
test
aad
int3
pop
mov
xchg
jb
or
push
xchg
push
dec
adc
mov
sbb
mov
mov
or
dec
in
das
jae
je
cmp
mov
imul
rorb
mov
mov
add
cld
mov
adc
xor
sub
ret
sarl
cwtl
dec
aad
jo
push
add
lcall
or
repnz
cltd
aad
or
stc
add
stos
cmpl
std
sub
adc
fcmovbe
aas
cld
into
push
out
loope
mov
std
movb
xor
cltd
shlb
cmpsb
in
push
pop
jne
imul
push
or
mov
mov
fistps
jle
test
es
dec
push
sbb
or
push
or
sbb
testl
push
fidivrl
inc
leave
lock
sub
fstl
jo
pop
jmp
repnz
push
rorb
mov
dec
mull
insl
jo
fsub
fneni(8087
test
imul
and
jmp
adc
std
jecxz
or
mov
jnp
ljmp
mov
in
dec
mov
xchg
jb
insl
scas
loop
push
movsb
lods
mov
push
inc
enter
or
mov
mov
and
mov
xchg
sarl
inc
fs
rclb
jge
xlat
adcb
push
pushf
dec
rorl
cmc
scas
stos
jo
cltd
push
in
inc
cli
lock
sub
adc
aad
jmp
imul
lock
mov
fs
xchg
stos
mov
stc
cmp
xor
aaa
out
dec
cmp
popa
sub
push
ffreep
iret
scas
sarb
cmp
mov
xor
pusha
jge
sub
jo
push
ret
mov
push
cmp
push
not
imul
fwait
pop
andl
xchg
lock
mov
fildl
mov
popa
and
inc
mov
lret
mov
cmp
aaa
add
push
mov
mov
filds
cli
mov
repnz
rcrb
push
push
out
xchg
and
mov
enter
mov
mov
xor
nop
sbb
add
and
pop
cmc
jmp
or
mov
mov
jl
pop
popf
pop
rorl
jg
mov
je
jo
mov
push
add
pop
out
ret
jmp
imul
fimuls
hlt
scas
xchg
dec
or
jge
dec
jge
mov
dec
addr16
out
mov
pop
aad
mov
mov
stc
add
dec
enter
aaa
jl
inc
gs
add
mov
iret
inc
mov
adc
mov
dec
xor
push
stc
bnd
inc
mov
and
sub
mov
std
mov
mov
rol
add
mov
mov
test
loopne
jp
xorb
scas
pop
mov
das
add
aam
mov
push
cs
outsl
add
cmp
ds
sbb
pop
cmpsb
jp
lsl
loop
fdivrl
hlt
xor
adc
out
cmc
clc
pop
shrl
xchg
ds
daa
xchg
xlat
sbb
jbe
repz
jb
stos
sbb
jno
shrl
mov
mov
jl
sarb
call
js
jb
out
in
pop
sti
pushf
pushf
mov
iret
jb
sbb
enter
mov
xchg
jge
rcrl
jnp
xchg
push
aad
clc
push
inc
mov
push
dec
popa
or
inc
or
jns
cltd
jecxz
mov
lods
aaa
pop
mov
popa
loop
ret
aad
cltd
add
sub
fcoms
je
int
and
into
adc
mov
cmp
mov
out
jb
pop
cli
and
mov
inc
fwait
or
mov
cmpsb
xor
xor
je
adc
lods
pop
lock
call
push
jp
push
dec
cmp
sub
add
shr
daa
ss
mov
cmp
aam
sbb
andw
pushf
mov
out
mov
push
mov
outsb
insl
decb
sbb
add
xlat
add
adc
pop
and
rcrl
leave
mov
xor
sbb
mov
sbb
mov
iret
cmp
test
enter
out
adc
xchg
call
les
pop
repnz
pop
leave
xlat
mov
sbb
loope
lahf
testl
jo
mulb
lea
cwtl
in
mov
ljmp
mov
loopne
dec
cmp
mov
sub
push
dec
psraw
xlat
daa
xorl
rcl
jle
mov
push
popa
neg
sbb
aas
test
lret
xchg
adc
jo
fdivl
push
xchg
jl
or
push
lcall
imul
cmp
adcl
arpl
mov
mov
fcomip
call
cld
adc
into
push
test
or
xchg
adc
pop
in
cltd
imul
fmuls
orl
mov
pop
or
outsl
in
cmpsb
shl
dec
out
fidivs
cmc
mov
orb
clc
std
xor
adc
adc
insl
in
mov
xchg
sub
pop
fnstenv
sub
mov
cld
mov
jecxz
push
leave
mov
push
mov
pop
cmpb
loop
xor
sbb
rolb
pop
shrl
outsb
sub
fucomip
rorl
test
add
sti
mov
addr16
xchg
fisubrs
str
rcrl
xchg
cmpl
aas
sti
ud0
mov
inc
push
xor
lock
jne
mov
jl
adcl
lock
mov
pop
lea
pop
test
insl
cmp
mov
jnp
js
les
xorl
mov
ja
testb
into
sub
jo
insb
loop
mov
dec
sbb
inc
bound
jp
mov
or
xor
mov
icebp
jmp
in
in
adc
fldenv
and
mov
sbbl
fiadds
stos
xchg
xchg
xchg
adc
inc
popa
sar
pop
add
and
xchg
cwtl
fucom
mov
cmpsb
clc
jbe
imul
mov
lea
repnz
fldenv
xchg
cmp
rcr
cmpsb
repz
ret
daa
test
cmp
jns
push
es
adc
inc
add
jo
mov
jmp
iret
repnz
inc
shrl
stc
sbb
rclb
jle
fiaddl
sbb
xchg
mov
or
or
add
pop
xor
sub
mov
mov
loop
cmp
sbb
gs
sub
sub
add
and
xlat
xchg
popl
out
push
fidivrs
gs
ficompl
in
dec
sbb
dec
and
ret
std
push
nop
jno
add
js
cmp
cmp
mov
popaw
stos
notl
mov
int
mov
lock
divb
sti
add
fcmovnbe
adc
outsb
adc
sbb
mov
mov
sahf
xchg
mov
sub
jns
ja
fidivrs
aaa
ror
leave
adc
aaa
je
pop
shll
shll
add
outsb
imul
jns
inc
subb
lahf
adc
mov
pushf
jns
popf
push
fs
fidivrl
or
sar
mov
push
sub
and
aad
jmp
ja
ds
pop
sbb
inc
push
fisubs
pop
pop
ret
jmp
mov
mov
push
add
js
daa
pop
push
jp
mov
outsl
ja
mov
dec
jge
jle
cmp
push
fstpl
cmpsb
setl
jnp
movsb
aam
cs
pop
or
hlt
repnz
pop
lock
xchg
cltd
xchg
cld
pop
xor
xor
dec
les
int
push
mov
lods
pop
pop
fldt
mov
push
lret
jnp
sub
call
fwait
pushf
lahf
ds
lahf
lret
sbb
jg
pop
pop
adc
shrb
addr16
loope
movsl
popf
test
arpl
push
imul
js
add
insl
xor
xchg
inc
stos
lret
out
adc
sub
ret
add
int3
insb
xlat
cli
outsl
adc
shlb
pop
xor
or
mov
pop
inc
dec
jno
and
imul
jge
shrb
pop
sub
pushf
hlt
lods
inc
or
das
adc
or
clc
lret
cmpsl
leave
add
stc
and
jl
clc
push
pop
mov
mov
dec
leave
mov
ficoml
scas
mov
insl
cmp
es
xchg
cmp
cmp
mov
nop
stos
xchg
daa
test
daa
xor
jp
lea
xchg
cs
xorb
inc
mov
mov
cmp
sub
push
pop
ret
cmp
mov
pop
mov
pop
mov
sbb
dec
call
dec
inc
cltd
cmp
sub
push
out
mov
int3
cs
mov
les
cmpsb
ss
dec
out
jmp
xor
orl
and
mov
pusha
xlat
xchg
jge
jg
dec
pop
jge
ja
mov
ljmp
jmp
arpl
cmp
push
ljmp
xchg
fldl
sbbl
push
fmuls
mov
shlb
pop
fldcw
mov
pop
ret
inc
ds
loope
dec
mov
dec
jg
hlt
out
rcll
mov
aam
ret
push
jge
sub
push
add
loope
adc
jp
push
pop
ljmp
out
push
insb
or
lock
inc
jp
sub
enter
push
xchg
dec
push
cmp
mov
xorl
xchg
sbb
sbb
xchg
fstpt
mov
mov
arpl
and
sahf
cltd
outsb
push
test
mov
insb
aas
pop
sbb
outsb
add
push
cld
pop
xor
mov
xchg
ret
loop
dec
ds
insb
ljmp
sub
and
mov
daa
push
xchg
loope
mov
push
mov
popf
cmc
or
add
icebp
pop
sbb
rclb
jne
insl
add
ficoml
fwait
jl
jle
repz
int3
test
rcr
daa
shll
les
loopne
lds
andl
sti
aam
andb
xchg
loope
mov
and
lods
mov
xor
inc
mov
mov
push
test
cmp
inc
push
mov
loop
push
sbb
out
pop
sahf
fs
test
inc
cmp
ret
test
fwait
xor
ret
imul
xchg
dec
pop
adc
mov
pushf
mov
pop
loope
cld
push
aaa
mov
adc
rcrl
lods
or
push
int
push
lds
xchg
jb
insb
or
es
push
out
jno
movsb
pop
mov
iret
sbbl
test
mov
xchg
sahf
pop
and
or
add
fiadds
out
push
fcom
jne
iret
fwait
icebp
jmp
test
push
xchg
xchg
mov
xor
mov
pop
mov
mov
mov
or
jne
aas
adc
aam
ljmp
int
popa
pop
jae
push
js
bound
jne
shlb
push
out
lcall
fstpl
xlat
mov
xor
xchg
aas
pop
in
xor
pop
ljmp
fsubl
dec
pop
icebp
mov
inc
cmp
mov
sahf
clc
in
sti
mov
xor
inc
icebp
pusha
leave
mov
icebp
push
rcrb
push
adc
ret
dec
inc
scas
mov
test
daa
dec
mov
jl
int
push
or
pop
sub
mov
jp
lret
leave
xchg
into
call
outsl
pop
sub
rolb
mov
pop
push
rorl
in
ja
jg
ffree
stos
out
adc
fidivs
dec
in
add
lcall
jg
outsl
jle
push
sbb
mov
dec
popf
xchg
shl
out
popa
xchg
inc
aad
ja
incl
scas
push
cmp
or
xor
push
fstpl
add
mov
mov
xlat
and
mov
shrb
lahf
mov
xchg
mov
loope
shrl
cmp
repz
sbb
xchg
xchg
xchg
pop
leave
repz
jp
dec
mov
enter
pop
rcl
shrl
mov
punpcklwd
push
xor
mov
mov
jle
sbb
sbb
dec
sub
mov
and
jge
pop
mov
mov
test
xchg
mov
or
push
outsl
mov
gs
daa
jb
inc
js
pop
shl
jne
cmpsb
pushf
rcr
ljmp
inc
adc
shr
sbb
cli
mov
lret
or
and
jp
fmull
xor
leave
test
mov
mov
and
xor
popa
loop
int3
or
lret
shl
mov
in
icebp
fsubp
xchg
dec
pop
or
cmpl
or
test
dec
test
xchg
cmp
stc
jp
test
andl
or
out
subb
cltd
inc
sbbb
and
pop
fucomip
jg
pusha
pop
pop
jg
jno
int3
xorb
pop
inc
fnstenv
bound
repnz
pop
mov
into
aam
xchg
pop
or
negb
sbb
mov
inc
bound
jle
test
divl
mov
js
call
xchg
and
add
sub
in
inc
lds
fcmovb
addr16
inc
mov
xchg
adc
stos
inc
lcall
lea
ret
cmp
bound
loop
adc
jmp
mov
jbe
sbb
fcoml
and
mov
sbb
sub
jmp
packuswb
loopne
cs
push
sti
fstps
in
jns
je
xchg
cwtl
imul
sub
fidivrl
outsb
add
fisubrl
andl
jle
inc
movsb
and
shlb
iret
dec
sbb
arpl
inc
sbb
mov
pop
push
aam
mov
push
fisttpll
or
repnz
push
std
pop
pushf
xorl
lea
mov
inc
mov
std
into
mov
fisubs
and
push
mov
inc
cmc
or
mov
repz
pop
addr16
loop
scas
decl
xchg
xchg
jne
jg
das
gs
push
mov
out
sbb
jbe
shl
mov
rclb
mov
and
adc
pop
pop
or
inc
insl
lret
stos
mov
push
adc
and
arpl
fidivrl
out
fists
ret
scas
adc
sbb
lods
pushf
jns
mov
push
aas
cld
movl
push
mov
add
lds
in
iret
push
xor
adc
dec
mov
test
mov
push
loope
daa
inc
mov
xchg
add
lock
test
cmp
ret
test
xor
movsb
nop
fs
xchg
pop
and
pop
inc
xchg
mov
xchg
insb
add
cli
push
sbb
dec
mov
lods
or
dec
pop
ds
stc
cmc
ret
xor
ja
mov
insb
jnp
add
inc
push
sbb
mov
loop
cmp
loope
fwait
pushf
ss
inc
incb
or
das
push
arpl
adc
add
pop
and
fstpt
cmp
mov
dec
add
and
mov
hlt
mov
push
cmp
or
in
jg
pop
mov
xchg
inc
or
push
lret
lods
test
shll
mov
aaa
test
pop
data16
add
mov
addl
xor
mov
sarl
and
or
ja
loop
pushf
fsubl
scas
mov
push
xchg
daa
dec
shrb
aas
jnp
pop
xlat
shl
cmp
sarb
xchg
or
mov
pop
push
insb
clc
jnp
add
hlt
pop
sbb
adcb
mov
aaa
xchg
stc
fucomp
or
cmp
jns
push
sti
repz
ds
aad
push
or
out
lea
cmp
mov
mov
inc
subb
pop
call
scas
fmull
or
and
sub
lds
enter
int
test
xor
cmpsl
insl
xor
stos
and
les
xlat
fidivl
ja
xor
shlb
lret
sub
sbb
test
mov
mov
aas
jp
lret
jp
jg
into
and
test
and
je
ss
push
rcrl
xor
gs
mov
fcmovbe
pop
sarl
div
rclb
cmc
out
dec
iret
or
in
jmp
out
add
loopne
inc
bnd
sbb
pop
mov
sti
ss
jg
push
jecxz
test
push
push
mov
dec
les
aad
xchg
cmp
adc
test
pushf
loop
fmull
mov
imul
or
mov
jecxz
and
and
rorl
jle
inc
adc
out
sbb
jns
loopne
movsb
push
stos
pop
push
jle
fistl
cmc
in
outsb
stos
leave
fwait
push
lcall
cltd
and
inc
push
and
das
cmp
loope
xchg
shl
and
mov
idivb
push
cmpsb
test
pusha
outsb
dec
sub
shl
lods
das
inc
cmp
pop
xchg
cmpsl
call
repz
jae
and
les
add
cmpb
cld
into
mov
pop
jp
fs
and
rol
rorb
fidivl
push
sbb
rcrb
xchg
daa
fbstp
sti
pop
jecxz
mov
clc
mov
das
enter
stos
or
sarb
cmp
xlat
mov
adc
ljmp
fisubs
mov
loop
mov
clc
je
push
fbld
pop
lcall
dec
js
mov
ret
sub
pop
sub
hlt
jge
fwait
inc
add
or
outsl
out
scas
xor
dec
cmpsl
xchg
mov
iret
lock
movsb
dec
adc
pushf
sahf
and
push
out
js
inc
in
or
repnz
stos
testl
lahf
mov
pop
adc
outsb
jne
ret
sbb
and
lret
mov
add
push
inc
inc
test
jp
sbb
sti
xlat
out
adc
push
fstpt
dec
sbb
cmp
bound
xor
dec
sahf
sub
lods
stos
fst
daa
push
inc
fidivrs
push
xchg
mov
sbb
repnz
in
mov
imul
sbb
inc
sbb
mov
and
sub
cmp
mov
scas
icebp
sarb
mov
pextrw
cmpsl
jl
jecxz
nop
inc
les
xor
and
fs
or
sub
adcl
push
pop
test
sahf
jns
and
xchg
xchg
inc
stos
add
jno
pop
ja
mov
or
adc
aad
jno
rclb
mov
push
fwait
jl
sbb
les
dec
jno
daa
cmpsb
sub
test
sbb
inc
gs
push
fdivrl
push
and
shr
fistps
out
cmc
sbbl
pop
jmp
inc
pop
lcall
cmp
push
adcl
mov
test
add
mov
jbe
test
or
fcoml
mov
pop
and
xchg
imull
cld
inc
