add
add
decl
add
rolb
pop
rolb
insb
rolb
jnp
add
mov
add
fwait
rolb
test
rolb
mov
add
imul
gs
xor
cs
insb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
jb
jne
insb
push
jb
je
arpl
add
popa
jo
jb
popa
je
add
add
popa
jo
insb
insb
outsl
arpl
ret
lea
push
mov
push
call
jecxz
add
pop
rolb
insb
rolb
jnp
add
mov
add
fwait
rolb
test
rolb
mov
add
popl
mov
pop
pop
ret
mov
push
mov
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
pop
ret
lea
push
mov
push
mov
mov
mov
add
mov
add
mov
add
mov
pop
pop
ret
nop
jmp
inc
cmpb
jne
inc
ret
mov
add
ret
push
mov
add
push
push
push
mov
add
mov
mov
cmpl
jne
call
mov
call
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
dec
test
jb
inc
movl
cmpl
je
mov
add
mov
add
push
push
call
add
add
incl
dec
jne
push
push
mov
mov
push
push
call
mov
mov
mov
add
mov
mov
push
mov
push
call
add
mov
mov
jmp
mov
lea
push
call
mov
cmpl
jne
push
call
mov
mov
call
mov
mov
mov
add
mov
mov
test
jbe
movl
testl
jne
movzwl
push
mov
push
call
mov
mov
call
mov
jmp
push
mov
push
call
mov
mov
call
mov
add
incl
dec
jne
mov
mov
cmpl
jne
mov
mov
add
mov
add
mov
push
push
mov
push
call
mov
mov
add
add
mov
add
lea
push
push
push
push
call
lea
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
pusha
push
int3
push
pop
popa
ret
pop
pop
pop
mov
pop
ret
mov
pusha
popa
pusha
nop
nop
push
pop
popa
pusha
call
ret
nop
add
add
and
add
sub
add
push
push
add
mov
add
add
add
loopne
add
inc
add
add
jo
add
adc
add
add
inc
pop
cmpsb
add
add
add
addb
lret
add
mov
add
add
add
sub
add
inc
fadd
add
add
add
add
add
add
add
inc
mov
inc
and
push
mov
test
pop
movl
je
call
rolb
pop
ret
xchg
pop
adc
mov
sbb
cwtl
add
nop
or
mov
inc
push
push
mov
sub
insl
dec
je
xchg
call
adc
push
call
mov
mov
pop
or
jne
mov
scas
sbb
or
jmp
cmpl
and
inc
push
xchg
repnz
add
faddl
inc
inc
enter
test
jo
mov
and
movsb
inc
rclb
sub
mov
add
push
add
push
push
sbb
adc
pusha
dec
fistps
xchg
in
or
ret
call
cwtl
roll
jno
mov
add
adc
sahf
adc
aam
or
call
sbb
add
cmpl
jae
push
fadds
es
mov
pop
in
sub
mov
jle
sbb
inc
or
pop
xor
pop
adc
mov
add
and
pop
pop
pop
xchg
xchg
leave
sub
pop
push
push
mov
push
mov
je
adc
push
or
fstl
add
inc
adc
add
bound
ret
push
sbb
out
popa
enter
adc
push
or
mov
xchg
pop
rep
dec
test
add
jl
or
inc
punpcklbw
add
push
push
sti
add
push
pop
adc
jae
push
mov
push
dec
adc
clc
add
and
xor
inc
push
push
test
inc
push
push
movsb
ss
negl
mov
insb
andl
push
inc
outsb
push
inc
jl
mov
xchg
sub
and
dec
and
pushl
jp
dec
or
sub
rcll
push
mov
ror
inc
rol
mov
pop
add
ljmp
out
xchg
sub
cmp
add
je
push
sub
dec
adcb
push
mov
sub
add
sub
sub
lds
sub
pop
or
leave
ret
xchg
shrl
or
inc
and
loop
daa
pop
inc
adc
xchg
and
push
adc
and
pusha
pop
jbe
inc
xchg
push
cs
and
int3
lock
push
lcall
clc
inc
in
notl
adc
ret
or
pop
lahf
stos
mov
or
inc
add
add
sarl
int
add
inc
cltd
mov
das
rorb
daa
inc
or
adc
sub
daa
dec
adc
call
mov
adc
push
or
lds
adc
in
mov
sub
dec
jmp
imul
dec
clc
test
mov
mov
push
pop
sub
nop
fisubl
or
add
andb
xor
pop
test
xlat
rorb
mov
sub
or
flds
adc
sbb
inc
pop
xchg
xchg
and
dec
ret
call
mov
or
bound
xchg
call
je
mov
das
adc
clc
clc
dec
push
mov
fnsave
sub
push
inc
popf
xor
pop
adc
aas
fsubs
cli
or
cwtl
test
mov
in
outsl
pop
mov
lea
in
rep
mov
inc
jle
stos
les
test
add
pop
push
decl
mov
or
aam
ret
adc
subb
push
inc
outsb
inc
mov
xor
push
adc
stos
or
adc
add
inc
hlt
push
arpl
jge
js
mov
pop
adc
inc
es
comiss
mov
and
mov
or
pusha
mov
jne
clc
dec
and
push
pop
std
mov
mov
add
mov
dec
adc
and
aaa
sub
mov
xor
push
adc
inc
sbb
insb
or
adc
iret
fmuls
je
jo
and
idivl
pusha
mov
call
adc
jne
dec
lods
xchg
sub
dec
dec
sub
mov
inc
lods
jmp
inc
dec
idivl
xor
rcrl
mov
push
leave
sub
pop
adc
xchg
imul
add
xor
clc
add
jne
sub
mov
xor
aaa
push
lds
and
mov
nop
sub
cs
rcrb
bound
xchg
gs
fs
mov
inc
mov
mov
nop
inc
test
in
adc
mov
xor
cmp
dec
or
cmp
or
inc
add
sbb
mov
jge
out
jnp
cmpsl
adc
adc
push
pop
or
js
data16
cli
push
sti
cmp
adc
mov
inc
cltd
gs
add
daa
call
push
or
sbb
pusha
push
mov
cmp
inc
decl
xchg
mov
push
sub
cmp
push
cvtpi2ps
push
cmc
push
std
add
test
inc
insb
cmp
or
pop
add
out
adc
cmp
mov
lock
sbb
add
imul
inc
inc
ret
es
pop
or
and
addb
mov
and
incl
or
mov
push
sub
loop
lret
pop
or
pop
pushl
push
int
test
ja
cltd
ret
add
data16
or
jb
or
sbb
mov
and
repz
mov
or
je
jl
cmovo
rorl
mov
adc
push
call
mov
jo
test
push
jle
popf
pop
adc
push
dec
sub
fiadds
je
and
add
xor
xor
sub
xor
repz
dec
arpl
lfs
aas
and
incl
jp
lret
dec
popa
sub
test
pop
loop
inc
je
mov
push
test
popa
lcall
inc
or
mov
mov
xor
aas
sbb
mov
adc
rol
or
or
mov
mov
repnz
dec
sbb
not
dec
and
dec
cltd
xchg
insb
pop
mov
xor
mov
push
or
add
jecxz
lea
les
sbb
pop
nop
xchg
les
push
je
fldcw
in
push
xchg
mov
adc
pop
mov
cmp
lods
movsb
dec
push
and
push
mov
adc
sub
pop
rcrb
push
je
mov
lea
adc
mov
sub
sbb
rep
adc
loope
inc
lock
lcall
jae
or
mov
cmp
call
xor
pop
or
mov
mov
push
test
xor
adc
push
inc
mov
aas
mov
or
sar
sbb
mov
test
stos
inc
dec
add
and
xchg
or
xchg
dec
rorl
or
and
or
push
call
sbb
push
xorl
xchg
ret
and
lret
ficoml
and
ret
ret
je
les
add
out
enter
pusha
push
inc
mov
add
push
dec
cmp
adc
cmp
sbb
mov
int3
cmp
mov
push
sub
out
cmp
mov
lock
das
mov
mov
adc
or
int
sti
and
sti
adc
fs
cwtl
adc
sahf
pop
movsb
adc
lret
lcall
sub
pop
xchg
sbb
adc
or
or
or
add
mov
cmpsb
test
lock
mov
adc
and
cmp
push
test
ror
fcom
mov
pop
lret
pop
imul
imul
or
call
pop
add
push
xor
call
test
mov
sbb
call
dec
cmp
loope
je
notb
popa
push
pushf
and
jp
xor
pop
dec
pop
or
out
or
mov
bnd
je
stos
fidivs
dec
push
lmsw
xchg
jmp
push
mov
mov
pusha
or
xchg
adc
jne
mov
in
pop
mov
cmp
and
push
sub
mov
fsts
sahf
adc
mov
inc
jl
xchg
xor
bound
dec
or
push
ja
cs
xchg
push
add
dec
push
mov
push
sbb
mov
lea
cmp
outsb
push
outsb
mov
and
dec
cmpb
test
xchg
pop
orb
rcll
movsb
pop
cmp
sub
fwait
mov
adc
and
add
mov
sbb
pushl
inc
test
mov
shrl
rcrb
sbb
fsubr
cmp
add
or
xchg
sbb
pop
pop
lret
mov
cmp
and
sbb
aaa
sub
adc
cli
adc
adc
cmp
push
cli
jo
outsl
dec
sub
or
xor
sbb
push
push
add
xchg
sahf
inc
adc
cmp
je
test
xorl
inc
xlat
dec
mov
daa
ds
mov
leave
adc
out
push
ljmp
inc
cwtl
mov
insb
daa
jmp
sahf
leave
mov
popa
mov
dec
dec
sub
dec
into
lock
pop
sub
jle
movsb
push
ficoms
or
jmp
push
enter
sub
and
jmp
mov
lret
popf
movsl
in
or
mov
daa
mov
jb
bound
mov
inc
fsubl
mov
mov
mov
mov
roll
mov
xchg
sub
bound
mov
cld
push
sbb
and
mov
cmp
xchg
xor
idivb
xchg
sahf
add
pop
mov
leave
cwtl
sahf
call
mov
adc
xchg
add
inc
sub
mov
mull
arpl
jecxz
cld
and
outsb
fs
or
xor
or
xor
ret
imul
inc
inc
push
mov
pop
inc
add
sti
jns
inc
inc
and
push
bound
add
jne
fs
iret
sahf
and
pusha
xchg
call
movsb
dec
cmp
jno
sbb
repz
mov
xor
push
or
stos
or
lock
push
rcr
xchg
enter
cli
and
orl
dec
pop
sub
pop
pop
mov
je
mov
mov
bound
or
outsb
std
jecxz
lods
arpl
sti
mov
sub
xchg
mov
push
adc
vpaddsw
stos
les
lods
lahf
call
cmpsl
out
aaa
inc
fisttps
pop
lret
ret
and
add
in
and
pop
pop
enter
into
bound
mov
in
push
dec
jo
sbb
add
lods
mov
push
mov
mov
outsb
in
and
xchg
add
test
ret
cmp
out
cmp
jbe
jmp
inc
out
mov
cltd
movsb
mov
dec
addb
je
jbe
and
dec
or
xchg
jmp
sbb
adc
xchg
gs
js
test
mov
cld
inc
fsubr
roll
in
cmp
or
push
popf
shrl
insl
scas
jge
lahf
aas
cltd
in
adc
pusha
adc
out
repnz
ret
sbb
add
add
sbb
or
in
or
xor
push
movsl
push
sbb
xchg
jmp
mov
rep
call
scas
je
mov
orb
movsb
sbb
push
call
xchg
ret
adc
push
and
pop
mov
and
and
add
mov
sarb
push
dec
push
and
sbb
push
addb
orl
inc
add
mov
pushl
popa
negl
or
adc
mov
xor
add
cli
add
fisubrs
and
add
je
mov
add
xor
mov
aaa
out
xor
and
hlt
imul
shlb
sbbb
mov
stos
je
sar
jge
sbb
fimuls
mov
xchg
mov
mov
fcoms
stos
cmpsl
roll
ss
push
sahf
fmuls
pop
icebp
in
add
lret
ja
and
clc
mov
sub
and
daa
push
inc
sub
inc
je
shll
cmp
out
cmp
add
jge
enter
pop
mov
inc
dec
test
jbe
clc
push
shll
dec
fs
aas
je
icebp
mov
outsb
xor
dec
push
add
adc
add
push
and
lods
arpl
jl
gs
fisttpl
mov
mov
gs
mov
cmp
pop
adc
jne
lock
xor
sarb
into
cmp
ja
mov
or
xchg
cld
decl
icebp
movsb
data16
adc
enter
cwtl
movsb
shlb
xor
rep
cmp
aaa
cmp
or
pop
dec
push
or
mov
xchg
cmp
inc
lcall
inc
or
mov
or
add
neg
sbb
inc
xchg
xor
or
mov
add
clc
inc
add
sbb
sub
or
notb
icebp
xor
sub
and
enter
xor
jo
imul
pop
in
test
jb
mov
negb
push
or
mov
adc
push
call
sbb
test
adcl
fadd
xor
aas
push
and
fisttps
pushf
imul
fnstsw
and
xchg
lea
and
jmp
mov
push
mov
dec
xchg
sti
lods
js
adc
and
mov
out
or
lcall
test
add
imul
cmp
push
decl
lea
add
sub
push
lock
add
mov
loope
adc
out
xchg
das
sbb
inc
mov
cmp
push
jne
cmp
pop
pop
cmp
inc
daa
inc
outsb
decl
inc
lds
jb
cmp
call
pop
lods
mov
es
mov
lahf
add
enter
loopne
cmp
mov
sbb
pop
roll
lock
or
fwait
xor
cmp
out
add
pop
data16
mov
fildll
imul
mov
push
mov
pop
cwtl
sub
inc
shlb
call
mov
push
pop
and
or
dec
push
out
adc
jb
mov
clc
scas
sub
push
push
cmpsl
stos
or
dec
push
lcall
pop
inc
sub
js
push
mov
mov
add
xor
rol
pop
xchg
aaa
sbb
sahf
jo
shrb
test
aad
imul
push
popa
or
sub
jne
ljmp
scas
movsb
cwtl
push
test
and
xor
notl
adc
lcall
or
dec
rclb
std
xor
xchg
sub
sbb
mov
ficoms
cvttps2pi
add
cmp
je
mov
outsb
cmp
pop
leave
jmp
and
push
aaa
sub
mov
or
stc
andb
dec
cmp
jge
push
xor
or
jne
sbb
sub
mov
shrb
inc
jmp
test
cmpb
je
mov
add
cmp
jne
clc
push
test
push
and
adc
jne
pop
jbe
xchg
leave
sub
push
dec
lret
movsb
shlb
xchg
pop
xchg
adc
nop
mov
mov
popa
inc
jl
lea
cs
icebp
and
and
fisttpll
jge
cmp
push
push
mov
pusha
dec
and
add
or
cmp
adc
push
or
mov
js
dec
cmp
jge
mov
jle
dec
or
sbb
push
push
push
mov
es
jns
lock
sub
ss
adc
add
lea
mov
inc
jmp
push
dec
pop
dec
pop
pop
mov
or
stos
xchg
mov
jle
or
xchg
sub
cmp
push
and
xor
sbb
test
push
adc
test
aaa
inc
sbb
and
cmpsl
and
push
jb
or
xchg
dec
outsb
mov
rolb
popa
ret
xor
adc
push
or
lds
mov
in
sub
cmp
inc
repz
mov
inc
add
adc
jp
mov
loop
add
mov
stc
xor
push
scas
imul
mov
loope
sub
sub
add
add
mov
xchg
mov
fisubrl
lahf
xchg
push
sub
xchg
fisttpl
push
push
mov
xor
inc
mov
pop
and
sbb
adc
testb
lcall
in
xchg
ja
push
mov
xor
gs
into
jmp
sbb
adc
add
and
push
sub
loope
or
adc
xchg
inc
rorl
jmp
pop
xchg
jnp
xchg
pop
sub
pop
clc
sbb
xchg
cmpsl
sbb
jmp
pop
pop
or
pop
pop
int
gs
sub
jmp
inc
adc
fwait
mov
out
imul
test
lods
and
mov
xchg
push
jnp
mov
adc
sub
adc
adc
dec
push
dec
mov
mov
add
sub
mov
ljmp
shll
ret
jae
pop
sti
sar
lret
cmp
inc
jge
add
pop
push
mov
out
add
test
daa
iret
inc
bnd
mov
jne
adc
iret
push
add
sub
mov
or
fimull
add
mov
andb
sbb
jl
mov
clc
mov
mov
roll
and
mov
mov
cli
push
mov
popf
les
test
mov
outsl
out
push
cs
push
adc
xchg
lock
xchg
push
ss
pusha
dec
mov
jge
inc
roll
inc
or
test
sub
call
jne
out
popa
sbb
jmp
push
xchg
adc
push
xchg
daa
mov
pop
lea
xchg
sbb
movsl
adc
lret
push
sub
pop
insb
and
inc
jno
push
sub
push
push
out
mov
cmp
je
add
dec
mov
mulb
sub
jmp
test
push
aam
mov
scas
push
lea
sub
jno
mov
enter
ret
out
ret
sbbl
sbb
addl
adc
or
test
fldcw
lock
jl
mov
xchg
rolb
or
add
sbb
stc
cltd
or
cmp
sub
movsb
push
push
data16
mov
dec
in
sbb
sbb
push
adc
pop
repnz
add
or
addr16
adc
cmp
jmp
ret
dec
cmp
sub
push
inc
mov
addr16
mov
call
sub
lea
push
xor
int3
fwait
inc
dec
push
inc
push
cli
test
sbb
adc
stos
adc
sbb
fwait
adc
sbb
les
add
mov
stos
xchg
repnz
sub
xchg
xchg
xchg
dec
mov
push
daa
ret
push
imul
fs
shll
je
repnz
or
push
and
sbb
mov
loop
movsb
pop
ret
sbb
or
jbe
inc
outsl
js
shlb
or
inc
nop
repz
cmp
dec
rolb
fldl
and
bound
dec
ret
cmpsb
nop
mov
mov
test
xchg
lock
and
les
lock
test
sub
js
pop
stc
and
xlat
enter
dec
in
pop
mov
sbb
shr
jge
and
pop
mov
or
push
idivb
scas
shlb
xchg
lcall
pusha
push
inc
scas
inc
xchg
fsts
adc
clc
cmp
push
test
pop
data16
xor
pushf
adc
lds
and
push
or
mov
push
dec
bound
push
jge
enter
pop
mov
loope
jbe
dec
mov
scas
movb
bound
jo
ret
push
xor
add
call
add
das
xor
dec
inc
inc
add
arpl
jl
pop
ror
dec
sub
xor
jb
sub
or
adc
lea
filds
and
sbb
test
test
adc
lods
pop
push
jns
dec
repz
and
adc
repz
fbld
jl
lea
and
xor
cmpsb
cmp
xor
sbb
adc
or
or
daa
dec
fisttpll
shlb
push
xor
mov
sbb
aad
popf
cmpsb
call
xchg
test
xor
adcb
adc
mov
adc
adc
inc
jmp
pop
adc
xchg
add
adc
push
fiaddl
mov
push
adc
cmp
rolb
sbb
call
mov
sub
xchg
pop
sub
and
cmpb
clc
cwtl
or
rcrb
ja
dec
adc
jnp
aad
mov
in
xchg
cmp
loop
cmpsl
dec
lock
mov
push
cmp
mov
ret
xor
and
sahf
lock
adc
or
adc
push
dec
shrb
inc
and
push
inc
jne
je
and
inc
push
adc
je
adc
push
push
roll
mov
mov
in
decb
dec
mov
call
and
pop
cwtl
cmp
sahf
lods
test
imul
inc
push
push
add
mov
sbb
add
push
testb
pop
xor
fmuls
filds
in
cmp
test
or
jl
es
call
std
adc
adc
xchg
lock
in
or
das
add
push
in
rclb
out
mov
adc
stos
and
sub
mov
repnz
mov
sub
out
nop
iret
or
lret
adc
imulb
adc
shlb
call
nop
xchg
add
orb
in
shll
lods
push
data16
xchg
pop
add
jg
push
pop
adc
push
inc
fistl
push
imul
leave
jmp
lea
or
pusha
mov
mov
les
fcoms
or
in
adc
lret
jb
faddp
mov
push
jnp
popa
add
push
call
dec
subb
and
pushf
push
mov
lret
inc
cmp
test
mov
pop
aad
push
xor
mov
bound
addr16
test
andps
pop
ja,pt
imul
jnp
mov
xor
sub
and
pop
fisubl
xor
adc
mov
adc
push
cmp
or
pop
leave
fstl
cltd
push
add
pop
xchg
lods
and
sub
outsl
xor
jl
test
dec
mov
xor
dec
adc
mov
cmpsb
push
mov
and
dec
sub
aaa
and
mov
lock
ffreep
lds
pop
decl
xor
adc
xor
xchg
or
fs
enter
loope
xchg
call
jnp
in
adc
outsl
mov
adc
push
mov
sbbb
mov
adcb
xchg
push
js
dec
or
fistps
xor
inc
fsubrs
jl
stos
cmp
xchg
mov
xchg
cmpsb
adc
sub
nop
pop
inc
pop
je
mov
xor
dec
test
testb
leave
pop
insb
hlt
call
fisubs
mov
leave
adc
add
or
pop
rclb
adc
mov
fucomp
enter
push
insb
push
enter
call
jmp
je
movsb
enter
insl
cmp
subb
adc
cmp
push
cmpsb
test
sbb
addl
xor
ret
ljmp
xorb
pop
lds
xchg
or
pusha
test
or
addr16
or
jns
and
dec
and
adc
and
jo
inc
mov
js
pusha
mov
inc
mov
std
testb
dec
and
and
or
call
mov
out
push
call
add
push
data16
filds
and
push
mov
or
incl
iret
adcb
fisttpll
inc
adc
xchg
inc
mov
mov
test
mov
pop
call
xchg
mov
sbb
clc
mov
out
mov
mov
faddl
xchg
loopne
mov
call
and
inc
inc
inc
call
sahf
dec
xchg
and
sub
jmp
add
out
xchg
and
sbb
repnz
xchg
call
int
push
in
iret
pop
leave
dec
xor
or
push
pop
cmp
xchg
call
mov
or
stos
xchg
mov
push
xchg
repz
adc
cmc
mov
push
push
push
shl
cmpsb
aam
pop
push
push
push
pop
or
xor
mov
int3
pusha
adc
and
add
call
push
push
fcmovnb
andl
bound
push
dec
and
or
inc
adc
xor
push
add
push
lea
mov
call
add
les
out
and
addb
or
dec
je
xchg
or
ret
push
push
cwtl
mov
out
addb
push
fwait
gs
xor
cmp
fmuls
or
mov
gs
arpl
sahf
push
in
xor
mov
sbb
fisttpl
mov
xor
push
fwait
addr16
mov
mov
je
xchg
and
ss
arpl
imul
sahf
nop
push
push
sbb
sbb
xchg
push
or
mov
fcomps
and
mov
or
adc
jo
lock
mov
rorl
lods
test
mov
or
or
push
or
stos
dec
sub
ss
xor
push
setne
mov
hlt
gs
adc
and
push
fs
and
and
push
stc
pop
ficoms
push
push
stos
xor
mov
mov
add
dec
cmp
pop
fmuls
enter
or
rcll
add
call
or
testb
ror
inc
adc
push
lret
xor
inc
mov
cmpl
sub
lcall
pop
sbb
test
or
sub
or
aaa
imul
ficompl
repnz
fwait
xadd
test
mov
mov
pop
push
mov
pop
jecxz
and
pusha
xchg
mov
sahf
sahf
insb
imul
and
mov
nop
call
add
and
bound
add
xor
or
stos
push
pop
pop
add
out
push
sub
dec
mov
push
dec
ljmp
push
jle
call
mov
or
push
test
inc
dec
aad
daa
loop
fsts
mov
add
nop
fldcw
push
rol
ret
call
popf
aaa
adc
int
lods
sub
dec
push
pop
movsb
xor
push
adc
call
inc
add
xor
ret
sub
and
adcb
call
repz
add
xchg
pop
sub
les
mov
movl
sbb
lret
jne
clc
leave
je
adc
push
popf
sbb
fsub
cmp
add
loopne
mov
add
cmp
xor
dec
arpl
jae
stc
push
and
cwtl
add
iret
or
jne
sbb
daa
push
rcl
or
hlt
rolb
xor
enter
add
push
cmp
lea
jb
xchg
adc
push
cs
push
inc
je
mov
andl
push
cmp
rcrb
xchg
nop
push
daa
mov
insl
push
xchg
into
push
clc
add
es
push
enter
test
xor
pop
and
and
cmp
mov
add
sbb
lcall
push
push
mov
lods
or
mov
das
rcll
outsl
dec
lea
xchg
xchg
inc
jo
lahf
cs
imul
lahf
int3
pusha
fs
cmp
sbb
and
or
test
fdiv
fsubs
into
sub
push
subb
push
in
jb
push
push
push
call
sub
mov
cmovnp
sub
loop
aam
pop
cld
push
pop
stos
push
mov
xchg
int
fcmove
mov
push
add
loop
into
rcl
enter
cltd
sub
rcl
lea
leave
add
imul
sarb
cmc
jbe
push
push
test
lock
hlt
adc
sub
cld
mov
inc
call
clc
decb
ds
stos
lret
add
cld
xor
stc
sub
mov
and
leave
ret
xor
cmp
jg
adc
jmp
push
mov
fucomip
adc
fcoms
push
push
pop
sbb
adc
mov
jnp
sub
and
pushf
dec
or
sbb
adcb
xor
push
push
add
sbb
cmp
mov
out
dec
jecxz
xchg
aaa
das
dec
in
add
pop
stos
in
movsl
jo
push
mov
pusha
movsb
adc
dec
and
inc
sub
push
sti
addl
call
fdivrp
pop
lods
inc
push
mov
adcl
mov
cmp
mov
mov
adc
ja
cmp
je
xor
popa
mov
out
xchg
insb
or
push
xchg
xor
push
adc
or
cmpb
in
sahf
inc
outsl
xchg
das
in
push
icebp
add
adc
xor
scas
xchg
xchg
ja
sbb
pop
das
inc
sub
push
fnsave
adc
in
xchg
jle
lahf
enter
fcomi
ret
je
mov
push
pop
lea
fs
push
shlb
mov
xchg
pop
sbb
rcrl
loop
adc
enter
xchg
sub
scas
adc
xor
adc
xchg
sti
dec
adc
pop
and
jns
sub
jmp
scas
jge
sub
sub
and
repnz
and
inc
mov
fsts
call
jl
sbb
cmp
cmp
adc
and
cwtl
pop
test
inc
and
adc
push
inc
aas
mov
dec
std
jb
push
push
adc
push
push
dec
fwait
imul
and
invd
fdivr
outsl
stc
arpl
cmc
xchg
test
je
dec
sub
or
jne
pop
ljmp
iret
pop
sub
sbb
cltd
jns
jb
cmp
js
mov
jmp
sub
sub
call
mov
push
and
inc
mov
push
mov
or
aaa
sub
sti
movsb
repz
xor
mov
adc
sbb
xlat
sub
jae
cmp
pop
repnz
sti
iret
sub
sub
test
xor
push
rcrb
cli
ret
xchg
jne
or
mov
lret
push
push
cli
imul
xchg
pop
adc
push
mov
inc
sub
scas
shrb
sti
xchg
lret
inc
sbb
sbb
sbb
xchg
jnp
cli
jl
xor
mov
jp
xchg
jo
pop
lret
test
mov
xchg
mov
push
push
add
pop
sub
test
call
fadds
cli
ja
adc
pop
lret
push
sbb
inc
jmp
clc
rcrl
mov
inc
loopne
push
call
in
mov
push
in
or
call
jae
add
cltd
adc
adc
movsl
lret
fsts
arpl
adc
das
and
push
stc
push
fs
dec
adc
outsb
adc
sbb
mov
pop
jecxz
insl
mov
xchg
sbb
int3
outsb
push
add
fs
imul
xor
adc
pop
add
xor
or
ds
lods
cmp
loopne
sti
scas
or
or
pop
in
or
xor
movsl
cli
or
adc
push
adc
ds
inc
or
pop
add
lcall
std
jbe
cld
pop
dec
pop
or
cmpsb
arpl
repnz
scas
push
jns
clc
and
and
ss
mov
jle
pop
push
pop
out
les
sub
or
fs
push
pop
or
clc
out
push
inc
push
pop
cli
scas
or
call
and
out
pop
clc
sub
hlt
mov
pop
pop
cld
push
pop
pusha
testb
pusha
pop
and
test
push
xchg
jnp
sub
push
cld
lock
cld
pushf
out
add
call
xchg
cmp
mov
les
movsw
outsb
push
das
push
sbbb
popa
pop
testl
outsb
sub
dec
fs
call
jle
loope
popf
push
push
int
mov
inc
push
daa
sbb
mov
jmp
lods
rcrb
xchg
push
xor
xor
aaa
jl
xchg
out
push
add
ret
arpl
aad
pusha
jno
not
push
sub
add
stos
cmc
lods
add
adc
scas
pop
cmp
dec
add
in
pop
mov
adc
test
cmp
in
mov
jle
inc
xor
xchg
inc
xchg
out
stc
mov
cmc
bound
sub
xor
adc
jge
cmp
push
sub
mov
cmp
push
call
add
int
orb
jmp
test
and
push
mov
sbb
mov
lahf
lahf
xchg
lods
gs
dec
xchg
lds
xchg
jl
xor
xchg
xchg
mov
mov
or
out
jo
adc
push
xlat
jp
xchg
push
out
lahf
mov
inc
and
jbe
dec
mov
lods
clc
xchg
inc
adc
and
xlat
scas
dec
mov
jo
mov
ss
push
adc
addr16
add
mov
sub
das
inc
adc
out
push
mov
ss
dec
mov
dec
out
or
add
sbb
sub
aas
fdivrs
xchg
rcr
ret
sti
es
push
and
lods
cmp
xchg
hlt
int
cmp
lea
sub
shrb
add
out
push
push
xchg
stc
das
rcr
mull
mov
pop
add
adc
cmc
jb
cmpxchg
sub
int
mov
rcrl
mov
dec
jmp
xchg
inc
and
adc
test
and
rep
es
mov
jmp
aad
inc
jno
push
push
call
fwait
popa
sbb
repz
lods
loopne
add
cwtl
add
call
fldz
cmp
mov
addr16
adc
jnp
pop
pop
sbbb
ljmp
call
mov
rcrb
sahf
les
fs
lret
mov
mov
ljmp
xlat
xor
pop
insl
mov
in
mov
rclb
xlat
adc
mov
movsl
and
xorb
rcrl
scas
mov
cltd
and
or
sbb
mov
iret
push
adc
dec
add
dec
test
or
mov
push
jmp
std
bound
mov
push
jmp
js
mov
mov
ucomiss
lods
mov
lret
fcompl
outsb
push
lret
add
cmp
dec
push
xchg
cmpsl
adc
mov
add
push
xchg
pop
adc
orb
imul
rorb
cmp
cld
and
xor
dec
and
pop
push
adc
nop
xor
push
pop
arpl
xor
push
sub
gs
in
out
in
repnz
test
jge
sub
movb
xor
fists
in
dec
clc
cmp
enter
enter
bnd
or
sub
jmp
xchg
push
sub
je
push
lea
pop
push
icebp
dec
cmp
add
sub
cmpb
in
push
inc
push
stc
jl
rcll
lock
faddl
or
movsb
cmp
fxam
lret
mov
clc
test
mov
cmp
lock
push
mov
inc
or
jmp
icebp
cmp
sbb
dec
je
lret
mov
xchg
inc
fcoms
dec
lock
aas
or
jns
out
xor
mov
push
insb
cmp
adc
cld
and
ss
jno
call
fs
add
fcmovnb
or
call
push
xchg
insl
adc
andb
outsb
test
repz
adc
call
push
test
and
pusha
out
cmp
jnp
jno
push
insb
push
clc
dec
out
fs
mov
movsb
or
cld
adc
inc
mov
lock
or
pop
cwtl
lret
in
repz
sub
into
in
dec
cwtl
mov
mov
imul
outsl
or
icebp
out
adc
out
fiaddl
call
lret
sbb
xor
call
in
daa
sub
sub
dec
jle
jmp
sub
into
in
jl
inc
in
mov
in
mov
in
movsb
addl
call
or
cmpsl
in
gs
cmp
add
add
add
add
add
nop
and
and
call
js
out
xor
lods
and
inc
jne
cmp
dec
jno
jae
or
xchg
scas
pop
dec
pushf
ljmp
out
mov
int
mov
icebp
ret
jp
and
dec
xlat
xchg
pop
in
adc
push
mov
into
xor
adc
xchg
jbe
rorl
lahf
push
and
sbbl
loopne
clc
lods
push
mov
bound
je
jmp
push
mov
rol
dec
cmp
jae
cmpb
pop
lea
lahf
test
xchg
fsubs
fs
jl
push
das
arpl
fisubrl
pusha
jge
pop
pop
pushf
jmp
leave
iret
mov
shlb
xor
cmpsl
dec
cmp
cs
out
jns
xor
movsb
xor
pop
cmp
leave
add
inc
rep
ret
iret
xor
mov
fidivs
or
xchg
add
rolb
cmpsb
mov
pop
mov
cmp
push
jmp
inc
ljmp
dec
inc
es
int
lret
ljmp
and
or
or
or
jo
xchg
ljmp
nop
xchg
cmp
jo
test
fisttpl
into
jmp
rcrl
or
lret
push
pop
sbbb
sub
cli
jle
cmpsl
jecxz
je
iret
aad
hlt
outsl
cmp
adc
fistps
call
ds
and
or
loope
push
call
pop
call
int
in
and
and
test
sub
rep
aam
cmpsl
ret
test
fidivs
test
shlb
fnsave
adc
aas
imul
dec
jne
mov
in
lret
jecxz
out
sub
idivl
jl
out
adc
je
daa
ret
testb
jge
ret
test
je
pop
je
mov
mov
ret
fimull
sbb
call
lret
dec
sbb
adc
mov
xchg
dec
stc
lock
cmp
pop
push
das
test
roll
or
int3
dec
lret
mov
aaa
dec
mov
aas
sub
sti
adc
xchg
cmp
and
lcall
or
xlat
mov
pop
sub
vcvttsd2si
je
inc
pop
adc
rorb
sbb
push
add
je
in
clc
pop
xor
pop
cmp
jne
in
dec
shll
imul
xchg
ror
dec
sub
push
ret
shl
adc
or
ret
std
out
clc
ss
int
pop
test
sbb
shll
mov
nop
and
lods
addr16
pop
xor
or
outsb
or
pop
repnz
call
frstor
scas
outsl
sti
adc
int
inc
fcoml
dec
push
jmp
push
dec
test
push
movsb
mov
jnp
outsb
or
mov
adc
push
mov
adc
hlt
xor
mov
outsl
cli
mov
test
or
repnz
and
iret
or
movsl
sub
adc
mov
cmp
mov
cmp
jmp
mov
push
call
dec
and
pop
jnp
push
inc
xlat
mul
dec
test
mov
std
push
mov
and
fists
pop
daa
je
push
jg
movsb
mov
sub
adc
mov
or
jnp
mov
inc
adc
xchg
push
or
cmpsb
mov
lea
dec
movsb
push
movsl
test
jne
and
push
call
pop
pop
and
jne
cmp
jbe
fwait
and
cld
and
xor
mov
ret
and
insb
call
std
dec
pusha
cltd
pop
mov
repz
jecxz
adc
mov
mov
lret
loope
mov
insl
pop
cmp
inc
dec
adc
jmp
sbb
push
mov
sbb
cwtl
ja
xchg
mov
lea
sub
sarl
sub
cmp
test
xor
or
sub
xlat
push
push
dec
xchg
lea
and
call
mov
or
in
and
xor
mov
cmp
int3
adc
ret
push
mov
jmp
mov
pop
imul
or
repz
or
lea
inc
adc
mov
mov
and
xor
push
mov
jmp
dec
xor
add
xchg
sti
xchg
lods
and
mov
sbbb
mov
mov
movsl
fldenv
nop
test
jg
mov
dec
mov
sar
in
outsb
out
inc
xor
push
repz
jne
add
push
sbb
ljmp
mov
sub
push
jne
adc
or
xchg
pop
xor
xor
cmp
fs
xchg
popf
or
or
cmpl
iret
aaa
xor
cwtl
sbb
inc
add
and
xor
sbb
mov
stc
pushf
rol
sub
out
or
icebp
test
sbb
xchg
mov
cmp
dec
cli
or
lds
lahf
adc
dec
xchg
xchg
and
lds
imul
push
inc
xchg
mov
ss
hlt
and
sbb
sub
jmp
ss
cmpsl
test
mov
iret
xchg
lods
fs
ja
or
mov
or
push
jnp
fs
push
aaa
mov
in
ss
mov
jae
cmpsl
adc
adc
sub
lods
or
mov
cld
stc
dec
test
mov
and
jle
xchg
cwtl
adc
mov
push
dec
fsubr
inc
xchg
sub
adc
jne
in
mov
les
fisubrs
lret
cmp
mov
cmp
inc
inc
bound
push
xchg
push
lea
xlat
jns
sarl
sbb
sarl
push
xchg
shlb
pop
leave
sbb
dec
inc
rcr
push
or
stos
int3
dec
stos
dec
sbb
cmpl
adc
inc
push
sub
arpl
and
cmp
sarl
rorb
add
add
mov
mov
sarl
push
addb
and
cmpb
ret
scas
mov
jo
mov
mov
mov
adc
adc
or
cmp
ss
jo
push
jo
pop
mov
push
call
andb
adc
mov
cmpsl
adc
enter
add
insl
mov
fbstp
iret
or
sub
loopne
or
das
cmp
inc
cmp
xchg
les
adc
jo
call
add
call
xorb
add
add
cld
test
call
sbb
jl
xchg
mov
or
jge
push
add
insl
mov
push
rorb
cmp
cmpb
aam
adc
push
test
andl
in
xchg
imul
adc
enter
int3
and
pop
pop
cmpsb
adc
inc
fimull
test
jns
mov
subl
fdivrl
adc
nop
adc
jns
cmp
adc
in
add
fimuls
dec
fisubrs
add
and
push
lods
inc
adc
adc
call
das
jno
ret
cld
fldl
shrb
pop
mov
xor
ficoms
les
shrl
stos
sbbl
scas
rorb
xor
daa
push
add
nop
ret
push
push
xchg
dec
punpcklwd
out
push
jle
jnp
sub
cmp
sbb
xor
push
rclb
or
inc
mov
outsl
shlb
lods
cltd
and
movsl
xor
mov
rcll
jbe
or
into
inc
fs
xchg
adc
jl
push
sbb
push
mov
lea
add
xchg
test
incb
push
pop
xor
xor
push
fdiv
sti
cmp
jo
xor
adc
aaa
xor
stos
pop
jbe
xor
lcall
roll
lea
roll
mov
cmp
js
repz
cmp
jl
push
push
push
xor
adc
lahf
fcomi
imul
or
jle
push
rclb
mov
or
xchg
mov
in
or
sbb
sub
lods
xlat
push
je
cld
punpckldq
int
stos
sub
adc
lret
lahf
add
pushf
mov
dec
mov
mov
cmp
icebp
add
xor
xchg
push
and
sbb
outsl
fdivrs
aam
enter
adcb
aam
les
dec
mov
push
cmp
jne
mov
inc
jne
ds
or
inc
testl
test
dec
cmp
push
mov
leave
push
cmp
ljmp
pusha
pop
out
or
mov
add
dec
and
mov
mov
push
xchg
and
push
xor
inc
jmp
dec
mov
dec
lock
dec
and
jmp
scas
cld
mov
push
insl
inc
inc
push
pop
xchg
data16
xor
push
movsb
xor
out
call
aaa
ficompl
xlat
and
jo
xlat
mov
test
lea
test
sub
fidivl
lret
loope
sub
push
mov
nop
or
push
fs
and
into
call
sbb
adc
pop
mov
jno
xchg
sbb
vprotd
mov
pop
lods
in
or
adc
fcoms
fiaddl
xor
add
jmp
ret
mov
aaa
push
xor
in
enter
cmp
clc
into
enter
fs
sub
pop
push
aad
arpl
sbb
clc
mov
movsl
pop
adc
jl
test
sub
shl
test
jl
test
pop
int
or
inc
add
inc
sbb
xchg
pushf
lret
push
sbb
adc
ss
das
outsb
aam
push
xchg
sbb
push
stos
inc
icebp
push
test
adc
mov
mov
sarb
in
mov
push
cmc
into
pop
xor
xor
mov
add
stos
enter
shlb
mov
test
jne
add
je
cli
dec
xchg
cmp
push
mov
pop
mov
mov
xchg
sbb
in
adc
push
xor
andb
xchg
jecxz
sub
mov
and
sahf
pop
dec
pop
push
sub
or
add
not
adc
add
xchg
adc
xchg
add
pop
add
sub
inc
add
add
dec
jne
je
adc
mov
dec
adc
or
sub
mov
dec
in
push
mov
sbbb
enter
mov
cmp
xor
mov
call
data16
add
dec
adc
lea
pop
shl
cltd
pop
divl
or
dec
sub
pusha
jbe
dec
outsb
leave
loope
je
stc
fstl
repz
rcll
rclb
loop
test
dec
cld
or
or
call
dec
popf
dec
ret
xchg
sbb
dec
daa
xchg
push
lea
sbb
in
outsb
sarl
hlt
or
and
out
dec
mov
js
mov
sbb
inc
shll
pop
test
lods
fld
push
mov
mov
in
sub
inc
lods
add
jnp
and
pop
cmp
jmp
dec
movsl
jnp
xchg
push
in
cmc
xchg
inc
xchg
xor
pop
inc
xchg
pop
push
push
jmp
movsl
adc
shll
dec
push
adc
pushf
pop
aam
popa
add
arpl
data16
insb
add
pop
fists
jbe
pop
mov
movsb
and
nop
hlt
test
dec
and
call
or
or
rcll
movsb
mov
test
loop
and
js
xchg
mov
push
add
insb
mov
stc
fld
inc
shr
lret
adc
xchg
push
xor
into
lods
pushf
repnz
inc
inc
adc
lret
ljmp
mov
xor
inc
inc
stos
pop
adc
sbb
cmp
mov
mov
cmpsl
jl
or
pop
mov
adc
xor
adc
adc
sub
rclb
bound
jmp
push
push
je
push
mov
aad
push
loopne
sbbb
nop
jb
push
mov
dec
push
adc
popf
xor
cltd
in
jne
insl
call
xchg
test
sub
nop
lock
xor
sbb
push
loopne
cld
fcmovnu
fcomps
addl
pop
jge
mov
lcall
mov
or
enter
jns
add
push
push
fwait
inc
icebp
ss
inc
shl
gs
xchg
sub
int3
and
or
scas
bound
mov
adc
ja
stc
dec
cmp
fidivs
or
xor
lods
mov
inc
jmp
sub
cmpsl
test
sbb
dec
xchg
push
out
repnz
cmp
movl
cld
int3
cwtl
add
adc
movb
mov
jo
lcall
iret
bound
stos
mov
dec
call
cmp
jecxz
dec
lock
xchg
in
push
jns
nop
and
jmp
dec
cmp
xlat
sub
pop
and
fbld
and
cmpsl
jns
or
xchg
or
dec
sub
clc
call
xchg
aam
jb
sub
dec
add
and
adc
call
ja
cli
int3
shrl
lock
test
ret
loopne
lret
add
imul
std
or
and
into
test
xor
call
push
and
int3
xlat
lods
jb
mov
jp
mov
sub
and
lock
mov
dec
adc
bound
push
push
popa
cmp
iret
mov
add
test
sub
jo
sysexit
mov
cmp
pop
cmp
xor
inc
and
and
pop
pop
leave
les
in
and
dec
out
imul
fxch
cltd
mov
and
test
mov
adc
pushf
pop
in
imul
shlb
or
call
push
xchg
and
jbe
pop
add
pop
call
xchg
push
dec
push
shlb
mov
mov
enter
pop
clc
jg
mov
adc
lret
stc
push
call
sbb
movsl
and
test
mov
add
jle
int
gs
pop
dec
into
or
or
into
inc
lret
bound
daa
pop
in
xor
add
cmp
adc
jb
adc
mov
add
push
data16
lahf
popa
decb
push
mov
ljmp
lods
sub
aad
gs
pop
sbb
sub
push
sbb
pop
adc
xor
stos
dec
inc
push
dec
xchg
pavgw
bound
mov
cld
add
sarl
imul
scas
xor
sbb
push
daa
xor
xor
nop
sub
rcll
inc
jbe
sbb
idivl
jmp
mov
iret
shlb
push
test
cli
mov
push
rorb
loop
add
add
lret
cli
xor
cmc
inc
xor
jle
cmpl
bound
and
test
cmp
shr
adc
je
and
jne
or
repz
lds
cmp
call
xor
jl
cmc
shl
xchg
sub
iret
adc
dec
into
lods
xchg
or
sbb
sub
call
add
inc
inc
cmp
test
outsb
sub
aad
dec
jecxz
jne
stc
lock
out
or
mov
dec
inc
jle
cmp
inc
jne
dec
jno
enter
push
mov
jg
sub
sbb
pop
inc
cmp
inc
call
jnp
add
and
dec
pop
outsb
inc
ljmp
std
mov
or
pushf
cmp
mov
sbb
adc
cmp
shrl
lea
push
jl
addl
insb
and
lahf
jmp
or
test
mov
or
dec
fcomps
clc
movsl
cmp
jp
popf
mov
aam
inc
stos
aam
loop
sbb
add
repnz
cli
jle
push
cmp
xor
out
cmp
cmc
dec
inc
inc
push
mov
adc
notl
and
jp
xor
inc
jmp
xor
xor
lret
mov
out
leave
movsb
dec
daa
fiadds
ss
sbb
push
aas
loop
jg
cli
dec
mov
pop
inc
inc
jl
and
cmp
mov
cmpsl
dec
xor
push
mov
in
adc
add
les
fcomps
test
dec
notb
out
or
test
call
dec
mov
outsl
loop
or
outsb
hlt
loopne
pop
cmpsb
jp
add
dec
mov
mov
arpl
int
xor
mov
push
mov
std
cmp
xchg
ja
pop
test
sbb
lods
repnz
lea
sbb
fists
xchg
jmp
mov
push
jg
je
mov
lret
adc
or
push
inc
mov
or
mov
testl
cwtl
sbb
pop
xor
mov
rcrl
sbb
test
jmp
or
dec
lea
outsl
loope
push
ret
adc
aaa
push
cmc
xor
aaa
mov
push
mov
imul
push
xor
jle
sub
mov
sub
adc
adc
sbb
add
mov
pop
addl
or
test
rorl
je
jmp
or
pop
xchg
int3
aaa
jne
xchg
push
jl
sub
adc
test
push
insb
mov
sub
mov
mov
jmp
adc
push
mov
or
mov
lret
addl
pusha
pop
rcrl
js
incl
loop
pop
and
adc
mov
sbb
sarl
es
dec
xor
cmpsb
adc
jg
push
lods
fwait
dec
xchg
cmp
xchg
pop
mov
call
dec
mov
lcall
mov
adc
out
inc
js
sbb
sbb
jecxz
inc
sbb
das
mov
sub
das
mov
and
in
jns
mov
fdivr
shl
iret
and
nop
ret
and
mov
sub
test
lods
and
mov
les
cmp
push
mov
adc
mov
cmp
sub
xchg
ret
icebp
xchg
out
mov
lret
mov
lds
les
stos
mov
stc
mov
out
push
xchg
ret
lret
mov
call
ret
sbb
mov
mov
or
fdivrs
mov
xchg
in
sub
mov
and
pop
test
stos
jns
mov
sub
mov
adc
xor
sub
in
ds
es
arpl
dec
xor
outsl
ret
push
cmc
mov
push
push
sahf
jmp
or
cmp
push
lret
jno
ror
lcall
jnp
sti
and
mov
jmp
andb
push
add
call
or
mov
jmp
nop
dec
in
dec
cltd
inc
adc
repz
repz
push
dec
pop
js
call
dec
pushf
loop
push
jmp
mov
sbb
mov
in
mov
dec
test
out
flds
or
push
lods
push
cmp
pop
xor
es
pop
mov
inc
idivl
lods
js
mov
dec
xor
and
mov
inc
xor
aaa
or
sarb
inc
icebp
mov
int3
shll
add
jae
or
icebp
xor
ret
xchg
inc
icebp
mov
je
mov
shrb
xchg
xor
and
test
jmp
and
in
fs
add
sbb
loop
mov
xor
mov
mov
jnp
ljmp
out
sub
test
xchg
xor
adc
mov
mov
mov
adc
adc
mov
aam
into
push
and
data16
clc
setbe
push
jae
call
movsb
mov
cld
xor
or
test
fisubl
push
insb
add
cmpsl
add
add
jmp
inc
add
pop
adc
data16
lahf
add
mov
mov
in
mov
dec
test
or
adc
jbe
cmp
jmp
js
dec
mov
enter
add
das
lods
mov
add
mov
mov
dec
pop
mov
pop
rclb
inc
mov
sbb
xor
xchg
sub
push
and
or
pushf
arpl
adc
and
ret
jmp
call
das
mov
rclb
inc
cmp
xchg
mov
nop
inc
sub
mov
icebp
jnp
movsl
movsl
jl
int
pusha
loope
std
push
sub
and
mov
js
lea
xor
jb
addb
xchg
dec
in
jmp
push
in
insb
aas
mov
in
test
je
adc
xor
cwtl
adcb
adc
jne
data16
pop
mov
js
jns
mov
pop
push
cmp
pop
mov
and
add
shrb
dec
out
dec
and
adc
adc
cmpsb
pop
lds
mov
dec
cmp
fstpt
pop
nop
sub
xor
inc
sub
les
and
sub
xor
push
inc
mov
sub
cmp
xchg
cwtl
xchg
shlb
inc
cmp
sub
mov
addr16
mov
and
jmp
and
push
push
push
dec
adc
sub
nop
cmp
pop
rol
int
das
xchg
scas
xor
xor
sti
sub
imul
sarb
adc
jmp
lret
cmp
jns
cmp
mov
push
mov
push
mov
sti
addr16
je
imull
pop
roll
mov
adc
enter
mov
adc
movsb
scas
mov
and
sub
pop
inc
push
hlt
add
cmp
hlt
add
mov
loop
push
or
push
fsubr
lea
or
insb
xor
adc
add
pushfw
cwtl
and
add
push
dec
or
xor
and
repnz
loop
push
aas
dec
sub
in
sub
adc
test
sbb
dec
push
fsubl
add
pushf
inc
and
sub
mov
jmp
mov
repz
call
jg
cmp
jg
call
adc
add
push
push
in
and
dec
pop
jmp
inc
push
and
xor
cmp
cmp
lock
xor
push
push
out
or
call
jg
xor
in
jecxz
xchg
arpl
dec
and
sbb
mov
cmp
decl
pop
les
xchg
mov
push
adc
mov
mov
sub
test
js
jmp
mov
cmp
cmc
outsb
xorb
cmpb
call
in
mov
adc
mov
repnz
nop
cmp
jg
fcomi
daa
sbb
test
lcall
xchg
adc
push
inc
cmp
lds
sbb
jp
lods
shrb
and
dec
iret
test
dec
movsb
stos
xor
shl
dec
sub
fsts
dec
sub
leave
out
dec
push
fs
out
push
sub
inc
iret
mov
mov
and
call
cmp
ljmp
pusha
mov
jg
push
enter
sub
test
pop
outsl
and
push
test
repz
pusha
cld
cmpl
cmp
ret
sub
mov
aaa
stc
jg
push
jnp
jbe
or
xor
pop
aaa
dec
mov
iret
dec
scas
enter
loop
and
mov
or
out
sub
ret
mov
xchg
enter
xchg
in
or
shrl
push
cmp
rorb
jne
std
jbe
outsb
enter
add
adc
cwtl
test
and
ja
jp
sub
movsb
and
and
inc
les
dec
xchg
mov
inc
std
pop
pop
mov
sub
mov
fwait
enter
pop
call
and
sbb
int
fildll
mov
jge
out
inc
and
mov
test
cmc
lods
push
cmp
or
in
mov
mov
push
mov
push
inc
pushf
xor
ret
jns
or
mov
jnp
enter
scas
gs
out
shrl
scas
jns
mov
gs
dec
hlt
dec
enter
aaa
inc
cmp
dec
lods
mov
dec
iret
iret
test
pusha
push
push
push
lahf
push
push
ja
ljmp
notl
lds
cld
repnz
xchg
or
lret
aam
les
stos
jno
dec
mov
rolb
push
inc
mov
imul
mov
repnz
test
aad
push
jns
dec
call
mov
dec
cld
cli
shl
aas
and
mov
int3
and
cmp
sbb
call
mov
lcall
les
sub
mov
in
cmp
add
je
push
push
call
fidivrl
sbb
sarb
repnz
and
fimull
push
push
insl
es
lret
popf
lock
sub
xchg
ljmp
ret
stos
mov
imul
mov
les
sbb
inc
scas
popf
push
rcl
int3
cmpsb
mov
pop
aas
aaa
inc
rol
pop
cs
inc
and
shr
cmp
pusha
xor
leave
pop
test
cmp
mov
or
stos
mov
add
pop
stos
sub
inc
add
mov
pop
nop
repz
mov
adc
test
sti
out
cld
mov
loope
jae
dec
cld
jecxz
stc
nop
fildll
xor
inc
push
imul
xor
dec
push
and
xchg
jne
sub
in
sub
xor
sub
xor
push
push
std
loope
call
cmp
cmc
push
sbb
xchg
stos
insb
jg
dec
adc
sub
sub
inc
jb
xchg
xor
daa
cmp
hlt
jecxz
inc
push
xchg
out
inc
and
mov
in
xchg
push
xchg
adc
sbbb
mov
pop
data16
outsb
and
dec
xorb
test
subl
cmp
mov
jle
sub
notb
jmp
rclb
and
push
xor
dec
hlt
cmc
mov
jmp
lds
adc
stos
cmc
mov
sbb
jno,pn
xor
shlb
sbb
sub
fwait
add
cmpsl
insl
jno
dec
fdivrl
aas
cltd
iret
test
cmpsl
jmp
popf
push
cli
dec
mov
idiv
xchg
mov
and
addr16
jne
popf
inc
cld
mov
stos
lcall
inc
sub
xor
or
dec
stc
int3
rorl
popf
xchg
arpl
xor
fnstsw
out
and
mov
lahf
dec
sbb
push
pusha
dec
outsl
cmpsb
xchg
inc
nop
add
push
xchg
cmpsl
ja
jl
adc
les
cmpsb
stos
pop
add
sbbb
pop
sub
sbb
adc
jle
or
mov
shl
stc
xorb
hlt
cmp
adc
test
enter
inc
sbb
cld
clc
mov
push
into
sub
mov
and
movsl
mov
mov
adc
outsb
daa
dec
mov
or
movb
call
inc
add
xor
or
ss
mov
or
ss
sbb
pop
fisttpl
jo
mov
and
cmp
pop
out
xchg
inc
mov
push
cmc
jnp
out
xchg
jge
adc
loopne
lea
adc
cmp
add
mov
in
pop
pop
jne
testl
je
cmp
pushf
test
ljmp
or
adc
push
aam
shl
sub
add
dec
add
je
ljmp
loop
push
neg
sbb
shl
or
rorl
mov
inc
push
aam
dec
inc
cmp
rcl
or
xor
sub
cmp
and
inc
enter
mov
mov
div
popa
push
cmp
mov
sbbb
cmp
mov
test
inc
daa
test
cmp
mov
xor
cmp
repnz
aam
cmp
shlb
and
scas
adc
or
or
inc
nop
adc
jge
mov
adc
jl
call
add
imul
push
call
push
cmp
mov
and
lahf
repz
inc
or
add
call
sarb
or
arpl
sbb
or
pop
mov
cmp
test
call
add
or
in
dec
mov
and
mov
sbb
dec
dec
jns
call
jae
push
mov
inc
jne
cmpsb
xorb
leave
in
cmp
cmp
insb
or
rorl
and
xchg
sbb
push
mov
push
adcl
ds
mov
jns
sbb
and
cmp
iret
push
push
adc
nop
or
andb
push
adc
cmp
and
lds
and
negl
mulb
pop
daa
dec
lods
mov
out
movsl
dec
orl
mov
and
movsl
or
fs
movsb
cmpsb
sbb
imul
adc
push
clc
lret
lds
lock
push
call
jo
shll
test
mov
mov
lods
dec
push
psubsb
mov
mov
sahf
dec
dec
add
xor
jle
add
call
movsb
or
sub
cmpsb
sbb
dec
xchg
sbb
into
lock
mov
mov
call
pop
xchg
mov
jl
inc
rcll
xor
mov
adc
dec
adcb
xor
pop
or
in
push
sub
add
adc
rorl
xchg
adc
sub
js
adc
mov
js
sub
push
adc
shll
xchg
movsb
jo
xchg
mov
inc
jo
pusha
and
sub
xchg
popa
mov
add
push
inc
sbb
add
mov
cld
aad
js
pusha
lahf
sbb
cmp
add
test
lahf
popf
int
ds
cmpsb
add
and
mov
insb
or
mov
inc
mov
push
cmc
cmp
or
or
pop
lahf
xor
sub
adc
dec
mov
xchg
jecxz
xchg
push
add
repnz
xchg
aas
sub
xchg
movsb
jecxz
and
testl
jns
or
mov
cltd
rolb
and
add
loopne
and
mov
popf
xor
cwtl
pop
out
popf
popf
data16
inc
mov
lea
imulb
jmp
js
aam
enter
jne
das
cltd
mov
mov
dec
lds
loope
aas
xchg
xchg
push
add
call
sub
push
jo
pushf
xchg
ds
dec
cmp
rcr
mov
xor
cmc
test
call
cld
movsb
xchg
cld
imul
xchg
insb
pop
test
lock
cwtl
mov
add
fistps
fisttpl
mov
dec
push
push
popf
xor
mov
mov
push
pop
in
sub
scas
pushf
test
mov
jae
push
jl
push
adc
test
adc
push
pop
and
cmp
and
dec
adc
orl
stos
and
inc
jl
inc
bswap
dec
stc
sbb
and
dec
shrl
shll
push
cmp
pop
loop
aaa
lods
shrl
sbb
add
inc
sahf
push
add
xchg
xchg
divl
and
push
add
call
inc
out
sub
add
mov
cmpsl
dec
roll
out
imul
imul
cld
loope
cwtl
insl
push
loope
cwtl
insl
inc
loope
cwtl
jl
mov
adc
cwtl
mov
ficoms
lock
adc
int3
aam
lea
fstpt
cmp
pop
pop
jb
imul
mov
push
nop
push
das
xchg
pop
and
and
pop
push
insl
sahf
cmp
adc
adc
or
jle
rcrb
lret
and
or
je
call
fists
in
adc
gs
dec
cmp
xor
jge
push
movsb
sub
aaa
push
or
call
icebp
xor
push
cli
mov
jnp
push
cmc
mov
xchg
sbb
xchg
aas
push
mov
cmp
sub
gs
fnstsw
push
jae
and
pop
lcall
xor
or
xchg
pop
mov
xor
xchg
and
bound
add
mov
frstor
out
adc
xor
imul
adc
xchg
repnz
adc
mov
mov
sub
imul
push
aad
cmp
add
sub
enter
cltd
mov
mul
clc
aad
pushf
push
scas
enter
jle
aaa
mov
fwait
pop
cmp
je
mov
iret
jo
mov
bound
stc
cwtl
fimuls
lcall
push
sbb
jnp
or
clc
or
push
jmp
repnz
pop
adc
push
or
and
mov
push
xchg
dec
hlt
add
pop
jno
cwtl
sub
push
loope
subl
xchg
pop
xchg
xor
xor
imul
xchg
rcll
cmp
call
push
dec
add
call
movsl
sub
imul
mov
test
das
xchg
decb
les
xchg
xor
sub
je
adc
xchg
lahf
rclb
enter
movsb
stos
cmp
fists
test
cmp
or
mov
enter
add
xor
es
addl
dec
test
outsb
out
dec
inc
test
push
push
xor
push
mov
push
rorl
dec
dec
jno
orb
xor
add
repz
xchg
pusha
push
inc
inc
xlat
push
lcall
xchg
pop
mov
mov
cmp
fwait
iret
cwtl
pop
call
xchg
xorl
mov
xor
xor
add
imul
das
push
aaa
gs
ret
mov
dec
addr16
xlat
push
sub
xor
and
out
inc
into
lds
adc
in
leave
sub
jb
fadd
or
add
sub
adc
push
mov
xchg
and
repz
add
and
es
sahf
and
adc
stc
mov
sbb
fs
mov
adc
arpl
mov
data16
sub
dec
adc
into
pop
mov
push
sub
adc
movsb
mov
push
and
pop
or
call
push
add
or
je
xor
test
and
pusha
xchg
pop
mov
test
call
call
call
add
mov
and
cwtl
nop
sbb
mov
dec
sub
adc
add
stc
cmpsl
pushf
fistps
pusha
cmp
popl
jo
or
pusha
xor
push
ds
lock
decb
add
rcll
cmp
hlt
mov
or
or
in
xor
call
cs
dec
cmp
stc
in
mov
cmp
sbb
pop
mov
inc
push
dec
sub
push
push
scas
xor
sub
cmp
cmc
mov
pop
jmp
addb
sti
mov
mov
mov
adc
call
dec
pop
or
repnz
sbb
inc
fisubrs
jo
and
cmpsl
cld
add
mov
sbb
inc
std
mov
adc
inc
cmpl
lea
test
mov
lds
push
call
cmp
sbb
fdivr
test
incb
testb
and
mov
sahf
or
jne
decl
cli
xchg
and
test
mov
dec
jg
cli
lds
or
es
shll
shl
lds
or
sbb
xor
mov
sub
mov
inc
test
in
inc
inc
bnd
pop
lcall
roll
jne
aas
testb
orl
test
lcall
stc
push
or
sbb
mov
idiv
dec
aas
sub
pop
daa
mov
push
fs
stos
and
loop
inc
aaa
xchg
fwait
mov
adc
vpcmpgtb
mov
lea
adc
aad
lret
dec
std
test
sbb
cli
mov
fsts
mov
das
or
test
daa
in
sti
sub
mov
and
cmp
imul
inc
sbb
ret
jb
sub
sub
movsb
inc
out
mov
scas
push
inc
sub
or
leave
inc
popf
inc
fmul
mov
repnz
sbb
sub
lret
xchg
int3
insb
xchg
jg
xlat
inc
int3
sti
jmp
and
or
sbb
adc
sub
mov
add
dec
sti
jg
cmp
out
fs
scas
mov
mov
cmp
add
mov
ret
jmp
jbe
fsubl
lret
in
push
int
rclb
in
lret
jbe
inc
xchg
push
and
nop
in
ret
pop
or
rorb
scas
sub
mov
pop
inc
jo
push
popa
or
xchg
jo
mov
test
jns
decb
pop
sub
jp
push
sbb
dec
mov
mov
ds
js
lock
pop
sub
dec
iret
es
sub
iret
stc
pushf
and
push
and
roll
call
js
mov
loopne
or
sbb
mov
and
jo
cmp
mov
mov
je
and
aas
cmpsl
aaa
jnp
sbb
jb
insb
sub
or
fwait
out
daa
sbb
in
cmp
jge
arpl
andb
add
call
mov
xor
push
jb
xchg
pop
mov
add
fistl
mov
repz
sub
jg
cmpsl
orb
cmc
mov
hlt
insl
push
add
mul
out
dec
movsl
sbb
dec
mov
or
adc
into
sub
cld
aas
or
repnz
inc
scas
push
push
lock
ds
mov
out
adc
mov
out
test
out
lock
or
adcl
sub
subb
jge
mov
ret
aad
add
cmp
pop
jmp
sub
nop
pop
jmp
adc
push
shll
and
mov
movsb
and
sub
sub
bound
sbb
repz
add
push
push
push
ja
movsb
repz
xor
mov
sub
in
repz
mov
adc
xchg
ja
in
insb
inc
and
sub
stos
movsb
cmp
mov
lret
add
inc
je
gs
push
mov
lea
mov
test
jns
rolb
sub
sbb
sbb
ret
mov
das
mov
mov
or
adc
rcll
movsb
mov
sub
or
xchg
inc
adc
xchg
adc
daa
rcll
xchg
adc
cmp
call
push
dec
test
adc
dec
sub
pop
test
push
sbb
push
pop
scas
add
mov
sub
das
and
jne
sub
mov
mov
sbbl
loop
mov
pop
call
add
imulb
and
push
push
jp
jp
mov
inc
test
loop
mov
fsubl
out
ret
mov
pop
mov
xor
lret
std
in
xchg
les
dec
and
je
mov
jb
mulb
push
out
inc
pop
adcl
fsubs
push
pop
cwtl
addr16
jmp
subb
dec
jne
test
pop
adc
rorb
and
rcl
jb
push
cmp
test
dec
orb
movsl
jg
daa
jo
jo
xchg
pop
adc
push
xor
adc
add
adc
inc
add
dec
jmp
xchg
pop
pop
rol
mov
loop
jne
and
cwtl
add
and
jne
andl
xorl
add
shll
xchg
lea
pop
aam
ljmp
adc
adc
pusha
adc
or
adc
xorl
jns
negb
mov
mov
rolb
scas
ss
add
add
sub
and
push
cld
xchg
dec
andb
add
mov
in
cwtl
jmp
push
mov
int3
mov
push
insb
subb
and
orb
xchg
cld
mov
adc
push
sbbb
loop
and
loopne
test
adc
ljmp
repnz
fmuls
pop
push
clc
jae
ret
xor
inc
hlt
mov
pusha
mov
or
mov
xchg
pop
enter
inc
inc
loop
or
dec
mov
fidivl
add
xorb
add
mov
cmp
and
xchg
and
jle
cmp
adc
mov
jle
adc
add
cmp
movsb
test
jecxz
cmp
ret
pop
push
lock
mov
inc
fwait
mov
push
dec
mov
fnstcw
and
outsl
icebp
cld
fmuls
xor
fmuls
dec
push
inc
sti
stos
mov
lods
aam
addl
and
xchg
gs
xor
scas
mov
inc
xchg
aaa
rcr
nop
xor
dec
pushf
dec
mov
lret
dec
sbb
sub
cs
inc
sub
sbb
call
cmp
scas
repnz
add
jnp
nop
icebp
mov
cmp
inc
cmpl
push
cwtl
inc
jge
nop
add
push
and
push
adc
mov
adcb
orb
xorb
jle
xor
inc
adc
sbb
mov
push
push
cltd
xchg
nop
inc
adc
add
fs
pop
xor
nop
int
push
mov
dec
xlat
sbb
bnd
cmp
movsb
jg
or
dec
adc
pop
push
enter
stc
fsts
jnp
xchg
cmp
push
rol
lods
rorb
jnp
xchg
test
loop
stos
jo
jo
xlat
les
dec
fsubrs
jl
adc
cmp
adc
adc
sbb
cmc
adc
pop
and
push
sbb
mov
inc
add
dec
mov
or
gs
cmp
inc
inc
adcl
xor
xor
sub
push
push
pop
lea
push
adc
push
adc
ret
call
dec
aas
push
sbb
jbe
jnp
jbe
int3
xor
fimuls
js
jl
push
mov
stos
test
shlb
add
pop
push
pop
sub
cld
test
mov
mov
jo
cmp
arpl
jnp
pop
mov
jne
push
test
cmp
rol
xor
xor
sub
dec
jl
movsl
pop
or
rolb
sbb
push
push
je
mov
sub
cmpsb
push
pop
mov
stc
and
leave
mov
cmp
sbb
in
les
mov
sbb
xor
mov
test
or
scas
mov
inc
fsubrs
sbb
xchg
pusha
and
jbe
jno
lods
scas
adc
xor
test
cmp
xor
or
sbb
pop
mov
ja
aam
mov
cmp
push
jnp
es
ja
pop
cmp
mov
loope
cs
sbb
call
sub
or
dec
lock
ja
mov
dec
cld
cmp
out
jp
lock
jp
sbb
repz
xchg
jp
das
sbb
jp
push
cmp
inc
in
add
inc
test
pop
inc
fimuls
fbld
xor
jne
add
fstl
and
fnstsw
fcoml
or
inc
daa
fmull
or
sbb
mov
enter
nop
loop
adc
loope
clc
jo
mov
cld
loopne
xchg
mov
and
loopne
shlb
jmp
mov
ret
xchg
push
mov
mov
push
pop
adc
jle
sbb
inc
adc
sahf
adc
adc
adc
scas
bound
sbb
push
sbb
push
and
jno
bound
gs
sub
stc
jnp
clc
test
scas
loop
mov
and
jae
cmp
sahf
scas
cmp
inc
adc
push
lods
and
cmp
push
adc
je
ja
adc
mov
xlat
je
adc
call
add
adc
adc
xchg
jae
xchg
ret
stc
imul
les
inc
ret
in
in
jl
mov
xchg
lock
mov
test
mov
inc
pop
je
adc
shlb
mov
orl
dec
cwtl
sub
test
jae
clc
mov
mov
xor
or
push
add
adc
imul
push
xchg
pusha
adc
js
mov
testb
adc
or
jae
adc
jae
push
mov
test
mov
inc
add
lret
sub
adc
cs
add
cs
ljmp
jge
nop
push
lcall
dec
int
icebp
jmp
mov
dec
and
or
dec
scas
das
das
test
push
mov
loop
mov
jo
adc
sbb
call
dec
mov
sub
push
push
jno
pop
sti
aam
cmp
xlat
xor
xchg
mov
adc
mov
ret
pop
push
mov
fsubrl
outsl
xchg
or
push
js
mov
sub
out
into
call
nop
sub
loop
adc
adc
sub
pop
std
dec
icebp
sbb
mov
pop
pop
jnp
dec
xor
mov
jecxz
outsb
test
mov
nop
adc
mov
aam
sbb
insb
cmp
les
test
mov
adc
push
push
cmp
scas
insl
dec
pop
push
outsb
push
lret
pusha
sub
jbe
outsb
call
aad
jmp
push
fs
in
icebp
jo
test
sub
sbb
fstl
lcall
pop
adc
jo
movsb
or
lods
scas
fsts
insl
jl
push
or
jmp
sbb
stos
test
daa
push
outsl
xchg
jno
insl
mov
das
aas
popf
fnstcw
push
sub
add
insl
in
cmpsl
call
sar
or
inc
insl
and
jmp
inc
mov
pop
orb
pop
inc
lock
lock
loope
pop
jo
jecxz
outsb
test
sbb
insb
and
fwait
outsb
test
inc
cmp
subl
mov
inc
rol
movsl
ljmp
add
xchg
outsl
or
stc
outsl
push
enter
outsl
mov
push
push
ja
xchg
call
mov
outsb
stos
xchg
ficomps
cli
pop
cwtl
xor
insl
cmp
dec
or
mov
cli
push
fisubrl
xchg
in
push
data16
sub
mov
outsb
fcomip
mov
fucomi
daa
mov
mov
call
sbb
sbb
sbbb
push
repz
sub
and
mov
lods
pop
cmp
std
xorl
push
sbb
mov
outsl
push
xor
adc
fsubr
add
je
jne
out
push
cmpsl
stos
aaa
xchg
jb
dec
pushf
push
mov
push
sbb
xchg
test
ret
imul
leave
mov
dec
cltd
mov
or
xor
mov
int
xchg
outsl
idivb
dec
add
and
mov
inc
mov
stc
mov
in
imul
mov
sbb
inc
jnp
pop
daa
mov
lods
xor
push
cmp
and
mov
push
mov
stc
or
and
jbe
mov
sbb
cwtl
rorb
lock
pusha
jns
call
cmp
sbb
or
fildll
rclb
pop
loop
js
sbb
xchg
mov
inc
push
dec
or
mov
jge
xchg
jnp
mov
add
mov
lock
push
mov
adc
mov
mov
xorl
adc
out
cs
in
cmpsl
add
dec
jmp
test
clc
call
mov
dec
popf
movsb
dec
xchg
pop
add
pop
add
add
inc
cmp
jl
jge
push
xchg
cmp
jecxz
daa
push
or
xor
xchg
in
testb
jns
inc
sub
sub
push
bound
daa
sub
les
sbb
inc
stos
pop
cmp
sub
pop
imul
fisttpll
pop
data16
push
xor
call
out
sub
aam
or
jle
pusha
neg
sbb
fistpll
add
push
gs
ret
int3
and
push
pop
add
pop
mov
gs
flds
and
push
ds
mov
inc
fmuls
mov
cs
in
je
lahf
lret
notb
dec
movsb
fdivrp
jl
and
cmc
mov
sbb
sbb
jns
fptan
adc
stc
call
inc
push
lcall
pop
adcb
repz
in
jg
in
in
add
shrb
in
scas
addb
rol
mov
add
arpl
movl
movsb
xor
int
and
sbb
adc
inc
and
addl
sahf
js
sbb
or
xorb
adc
or
jmp
sbb
and
ret
adc
aas
dec
push
sti
dec
divl
push
addr16
push
xchg
outsb
test
into
aas
sbb
adc
sbb
mov
sub
jmp
sbb
bound
xchg
data16
mov
mov
inc
add
nop
inc
inc
mov
lahf
push
push
adc
clc
cmp
dec
imulb
adc
sbb
mov
adc
stos
jb
xchg
and
jl
in
sbb
call
and
push
inc
sub
jae
pop
jg
inc
or
sbb
dec
subl
pop
mov
jle
call
ss
sbb
rcr
or
adc
jb
movd
imul
inc
shr
ds
cmp
inc
in
shrb
inc
decb
inc
push
dec
in
xchg
xchg
xor
aaa
jo
xor
mov
in
jl
mov
lock
rcrb
jp
and
sub
cmp
pop
sub
ja
test
nop
orb
or
stc
rorb
xchg
clc
mov
mov
nop
adc
and
inc
xchg
sbb
ret
mov
jp
pop
xor
cmp
popa
inc
ds
adc
rorl
sbb
and
and
mov
fildll
push
jle
popf
hlt
pop
ret
add
dec
sbb
sbb
adc
mov
or
or
adc
loope
xchg
mov
addl
adc
lahf
fistpll
dec
adc
xor
mov
push
dec
mov
xchg
cli
les
add
or
pop
sti
lret
lea
cwtl
in
pop
sub
rolb
add
adc
xchg
ret
pusha
call
and
fucomip
loope
push
insb
call
adc
pop
push
xor
xchg
cli
jecxz
in
add
subb
and
push
adcb
lahf
xor
jl
cs
pop
jo
out
push
inc
pop
test
inc
pop
mov
jnp
fld
jb
mov
mov
and
adc
sbbb
or
or
ret
or
adc
cld
push
or
cmp
dec
into
cmp
and
hlt
pop
sub
mov
or
ljmp
std
push
lock
inc
int3
fld1
pusha
pop
pop
or
call
orb
push
inc
push
mov
nop
dec
in
sbb
lcall
xor
into
and
pop
sub
xchg
cmp
aas
mov
xor
and
out
or
push
insb
xchg
cmp
adc
mov
and
pop
subl
pushf
mov
mov
add
shll
pop
pop
push
mov
cli
mov
mov
bound
leave
dec
sub
dec
insl
mov
inc
test
enter
je
mov
sbb
loop
orb
add
clc
add
or
mov
jg
roll
jmp
dec
sbb
push
je
cmp
inc
pusha
sub
cltd
rclb
cwtl
pop
mov
mov
mov
loopne
or
xor
bound
pop
mov
sar
mov
sub
xor
mov
lock
fnclex
insb
lods
cli
adc
pop
pop
inc
add
xor
inc
jl
jecxz
add
add
cmp
jge
fstl
xor
rcll
push
lea
bound
sbb
cmp
push
xchg
ficoms
imul
cmpsl
cmc
stos
mov
add
stc
add
jno
pop
and
mov
out
dec
in
push
push
lock
movl
pop
sub
inc
or
adc
or
repz
mov
xor
pushf
push
sti
cmp
faddl
das
sub
xchg
stc
sub
xchg
filds
pop
dec
mov
aam
xchg
movsb
inc
sbb
rclb
sbb
rclb
sub
mov
inc
stos
cmp
rcrb
fs
xor
clc
rcrl
pop
and
inc
adc
pusha
mov
dec
mov
mov
inc
push
sub
adc
inc
imull
mov
and
je
movl
mov
push
push
push
clc
inc
xchg
sub
sbb
fisttpll
push
push
popf
cld
bound
pusha
lea
shrb
jb
jg
sbb
arpl
out
xlat
cwtl
xchg
daa
jle
xor
sbb
xchg
adc
inc
gs
cld
into
mov
and
dec
lahf
adc
les
and
adc
arpl
in
sbb
jo
out
dec
dec
adc
cmc
or
dec
iret
push
push
ss
cmp
mov
xchg
or
or
jns
das
jmp
push
mov
adc
sbb
xacquire
lock
arpl
adc
stc
xchg
clc
std
or
adc
pop
jmp
and
pop
je
inc
lea
jbe
inc
insl
pop
or
je
and
adc
movsb
enter
sbb
in
sbb
xchg
pop
out
xchg
push
nop
add
call
fs
arpl
and
hlt
pop
andl
mov
jecxz
enter
mov
adc
pop
xor
dec
pop
ds
outsl
and
nop
hlt
dec
and
or
mov
sbb
dec
mov
dec
cmpsb
sbb
lods
pop
sbb
sbb
and
pop
fisubl
roll
push
xor
sti
inc
mov
pop
inc
cmp
and
add
ljmp
pop
sub
xor
xor
push
sbb
call
aaa
pop
mov
inc
movsl
jge
sub
imul
imul
and
mov
ret
inc
pop
pop
inc
shr
add
cmp
dec
imul
sbbl
xchg
js
ficoms
or
cmp
adc
adc
lds
cltd
mov
aaa
sti
and
clc
inc
mov
cmpsb
mov
push
add
cs
and
or
mov
inc
jb
push
or
out
in
push
jmp
addl
loop
rolb
divl
and
cld
out
insl
push
add
mov
push
jl
mov
sub
sbb
xor
call
or
mov
sbb
push
clc
cmpl
popf
js
push
xor
ret
mov
mov
std
xchg
or
dec
pop
and
xor
enter
add
push
lea
scas
or
xchg
into
insb
mov
pop
sti
xor
test
insl
xchg
push
mov
out
add
pop
idivb
lods
leave
ficomps
add
xchg
ja
and
je
or
push
push
mov
shlb
test
and
lea
mov
and
jl
cmp
pop
jne
sbb
outsb
icebp
clc
loop
repnz
pusha
stc
test
pop
cld
cwtl
test
inc
test
dec
and
nop
inc
cmp
jo
loope
cld
in
pop
sub
pop
and
mov
and
inc
hlt
pop
or
inc
test
jbe
imul
mov
and
inc
loop
mov
adc
and
dec
add
adc
sbb
dec
sub
cmp
push
and
dec
pusha
lods
push
adc
push
adc
push
cmp
inc
call
stos
jp
xor
decb
lock
xor
mov
adc
pusha
test
pop
icebp
inc
cmp
jl
in
or
call
push
mov
repz
dec
jmp
adc
mov
xchg
popf
add
jle
shl
ret
lcall
mov
rorl
jmp
push
cmp
je
jb
sub
and
dec
pop
or
inc
jne
iret
stc
in
aad
jg
jo
xbegin
test
mov
mov
cmp
je
mov
shl
negb
xor
inc
mov
shlb
sti
mov
sub
sbb
call
adc
push
push
xchg
jae
incb
or
int
add
orl
jle
call
loopne
xchg
push
push
inc
adc
cs
out
push
stos
nop
jg
stos
xchg
jb
loopne
scas
push
mov
sub
subb
push
or
jge
mov
inc
add
inc
xor
add
and
or
mov
and
rol
add
mov
cld
mov
dec
push
enter
fisubs
imul
dec
shll
mov
sub
in
or
in
gs
mov
xorb
adc
sub
push
lods
mov
ss
mov
mov
mov
mov
call
pop
lea
rcll
pop
rclb
lea
pop
enter
sbb
ret
adc
fwait
adc
int3
jge
nop
std
dec
pushf
inc
xor
inc
mov
sub
jne
sub
or
lea
shl
icebp
and
xor
cmpb
xchg
push
lods
xchg
in
ffree
jne
cs
and
add
and
add
leave
test
jle
sbb
adc
or
xor
jl
jb
sbb
mov
idivb
mov
inc
dec
and
bound
cmp
orb
test
lcall
push
push
call
push
call
xor
stos
or
shl
pop
xchg
icebp
mov
leave
sbb
sbb
fstl
rep
sub
mov
rcrl
cwtl
jo
add
xchg
and
push
adc
and
in
sub
dec
sarb
ds
add
in
xchg
sti
inc
repnz
test
or
or
inc
shr
adc
jne
dec
add
inc
or
test
adc
and
and
shr
loopne
or
inc
mov
jge
push
adc
loop
mov
push
ja
jmp
jle
fisttps
adc
or
adc
decl
and
adc
shl
xchg
dec
jo
shl
jno
cmpb
mov
movsl
bound
push
or
movsl
push
pop
cmp
popa
mov
jbe
orl
rorb
clc
inc
aaa
je
lcall
mov
push
dec
cld
lret
popa
bound
push
sub
add
int
sub
jns
or
enter
inc
add
mov
sub
scas
or
jge
mov
push
dec
test
push
aad
jl
mov
mov
lods
or
jno
repnz
xchg
adc
cmp
push
popl
loop
xchg
dec
inc
dec
mov
and
call
adc
sbb
sub
addl
jecxz
pushf
add
adc
inc
rolb
or
sar
xchg
xor
mov
push
ret
fsubrp
pop
repnz
andb
shrb
es
adc
dec
in
pop
xchg
mov
or
test
add
rcr
pop
jb
or
pop
repnz
ret
dec
nop
jecxz
adc
call
mov
lret
pusha
sbb
push
mov
cmp
dec
dec
cmc
stc
aaa
ja
mov
xor
push
lret
das
push
mov
cmc
sub
push
adc
cli
mov
fsubrs
and
push
mov
loopne
fwait
sbb
push
in
inc
jl
or
les
or
push
inc
and
cmpsb
and
lock
sub
xor
jb
push
add
sub
faddp
nopl
push
mov
add
add
sub
add
inc
bound
inc
test
adc
adc
and
or
push
inc
adc
inc
push
xor
sbb
push
sbb
sbb
jmp
inc
and
cmp
jmp
and
xor
pop
pop
pop
jae
das
sbb
mov
scas
mov
sbb
je
scas
xchg
adc
arpl
orb
adc
icebp
pusha
adc
cs
mov
inc
jne
and
cmp
adc
adc
or
ret
outsl
inc
mov
push
setae
xchg
mov
pushf
or
dec
insl
mov
xor
fistpll
mov
xor
andl
rclb
jmp
cmpl
stc
test
xor
inc
adc
adc
pop
add
int
repz
aas
in
sub
cmpl
mov
in
gs
mov
dec
pop
sbb
mov
cmp
jb
add
loopne
and
popf
dec
add
incb
insl
inc
insb
mov
add
jge
or
ret
and
dec
insb
shrb
sub
and
lock
pop
cld
add
jmp
repz
or
or
rcrl
jns
cmovnp
dec
or
lret
cwtl
das
clc
adc
ljmp
jne
aad
dec
ret
push
sbb
shrl
jmp
sub
lret
clc
lock
or
add
mov
test
or
jmp
mov
lods
xor
push
sbb
jo
push
andl
add
addr16
enter
pop
add
enter
loope
sbb
adc
push
or
fcomps
jp
jl
sub
movsb
or
pop
adc
push
fiaddl
clc
ret
fstp
adc
jle
sbb
call
jl
inc
rolb
testb
and
or
xor
lock
jmp
dec
subb
lret
dec
inc
adc
add
mov
mov
adc
inc
or
mov
nop
mull
insb
incb
pop
lcall
and
movsb
pop
mov
xor
aad
test
stc
sub
and
outsw
fdivl
pusha
rorb
dec
add
lret
xchg
test
int
ret
xlat
sub
test
adc
xchg
movsb
loope
shr
sbb
mov
fsubrs
jbe
bound
xor
xchg
jo
xchg
mov
sub
jmp
cltd
shll
aad
and
xor
push
loope
pop
inc
imul
or
adcl
sub
push
push
dec
loop
adc
jae
lret
inc
xor
pop
push
gs
cltd
jp
and
push
out
arpl
xchg
mov
and
push
test
adc
jg
cmc
sub
jge
mov
jno
and
insb
cli
rcrl
sbb
cltd
test
inc
in
sub
sub
jne
mov
inc
incl
out
pop
loopne
testb
pop
mov
test
dec
cmc
test
repz
addb
fiadds
mov
xlat
ret
inc
mov
inc
and
jne
cmpsb
and
or
cmp
movsl
orb
mov
sti
inc
movsl
inc
sbb
cmp
jb
icebp
lret
out
adc
in
or
xchg
daa
cwtl
sbb
push
mov
es
add
pop
icebp
cmpl
std
adc
jge
leave
mov
out
xor
rorl
dec
cltd
pop
xchg
out
push
cmp
inc
das
jge
mov
mov
in
in
fiadds
xchg
adc
into
mov
ja
or
inc
jg
mov
dec
xor
fcom
push
cltd
sub
jl
push
and
js
out
mov
movsl
shll
adc
or
sub
lods
nop
add
cmp
icebp
cmp
mulb
sbb
andb
call
addr16
hlt
es
fwait
cmp
ds
mov
xchg
in
xor
test
cld
adc
pop
push
adc
fistl
dec
sbb
sarl
js
pushf
cs
leave
pop
adc
bnd
jge
sahf
subb
sub
je
sub
inc
push
inc
mov
fisubrl
dec
inc
notb
dec
push
popa
xor
or
add
dec
or
pop
or
data16
dec
pop
mov
ret
test
and
jle
aam
add
sbb
add
xchg
scas
popf
insl
cmpsb
movsl
xor
cmp
call
loop
sbb
out
or
repz
mov
cmp
cmpsl
mov
adc
loopne
jno
sti
je
mov
imul
lock
scas
enter
cs
std
outsl
lret
adc
push
push
call
les
repnz
inc
cmc
call
leave
pushf
das
add
dec
lret
pusha
les
mov
orl
fsubrp
and
icebp
lock
mov
lcall
sbb
jl
push
cmc
mov
call
adc
mov
pop
movsb
or
dec
adc
mov
and
aad
jnp
mov
shlb
or
repnz
cmp
lahf
inc
hlt
mov
fucomip
xchg
cltd
add
or
mov
rclb
into
and
dec
mov
push
mov
sub
outsb
int
faddp
fldenv
xchg
mov
shlb
out
mov
jne
and
inc
ret
cmpsl
sub
dec
mov
mov
cmp
xchg
fists
test
jge
jmp
or
add
push
lock
xchg
dec
sbb
imul
cli
push
jno
pop
icebp
cmp
jne
repnz
leave
mov
jmp
mov
push
psrad
insb
jo
rorl
mov
enter
sub
outsl
leave
sti
rorl
push
fdivrl
push
movl
add
gs
out
divb
inc
add
pop
ret
lea
sahf
ficomps
ret
xchg
rcrb
jmp
jle,pt
push
mov
sub
push
mov
imul
jp
shlb
dec
insl
and
cld
pop
pusha
dec
push
shr
push
stos
mov
inc
das
in
mov
push
decb
aad
mov
mov
dec
add
adc
ds
lock
dec
sbb
push
mov
in
loope
sbb
faddl
cmp
adc
or
cmpsb
jmp
jl
jge
and
jne
pop
push
or
test
push
xor
inc
in
cld
outsl
popf
shl
ss
mov
mov
xor
inc
cld
push
cmp
test
add
outsl
call
std
clc
add
or
lret
sub
pop
nop
cmpsl
bound
jne
jle
and
mul
cmp
lds
pusha
sbb
ljmp
lret
nop
xor
jbe
cltd
loop
sbb
sub
push
and
push
sbb
loopne
mov
test
out
mov
inc
icebp
outsl
jbe
imul
ret
push
adc
inc
jmp
or
push
mov
inc
cmp
cmpsl
pop
or
fsub
or
push
pop
pop
aaa
lea
add
sbb
push
or
and
add
cmc
add
shrd
leave
push
sbb
or
pop
jns
add
imul
adc
or
lock
lock
js
sub
int3
add
shlb
and
ljmp
cmp
in
jmp
mov
in
test
hlt
mov
arpl
and
repz
xchg
lea
sub
aad
xchg
negl
test
mov
adc
or
sub
and
jge
jmp
fmull
jl
push
or
cmp
or
int3
sub
clc
shrl
and
inc
in
and
and
mov
adc
dec
mov
faddl
repnz
out
orb
int
ret
xor
pop
inc
out
and
fcomip
cmp
icebp
add
sbb
sub
out
in
sbb
mov
or
jno
mov
dec
pop
lods
xchg
loopne
adc
push
pushf
icebp
hlt
mov
or
mov
sub
pusha
push
lds
sbb
fdivp
push
les
pop
cltd
cvtps2pd
lea
lret
xor
adc
pop
inc
dec
sbb
sbb
je
pop
cs
sub
push
inc
and
pop
inc
cli
mov
call
mov
imul
xor
lock
push
and
jns
xlat
pushf
mov
mov
or
adc
cmc
ficoml
pushf
jmp
or
repz
call
dec
xchg
push
add
pop
push
dec
outsb
cmp
mov
jmp
pop
push
jno,pn
sub
call
mov
loopne
in
aaa
jg
stos
popf
sub
je
pop
xchg
adc
nop
and
cmp
les
in
incb
push
shlb
dec
lea
pop
arpl
add
inc
shr
inc
adcb
testl
inc
inc
xchg
jle
xchg
fisttpll
and
adc
sub
aad
repnz
adc
dec
fiaddl
sti
rcrl
stos
pop
adc
mov
push
stc
bound
jmp
test
jl
scas
inc
mov
cmp
loope
jns
pop
mov
add
lea
add
popf
clc
push
jns
push
cmp
pop
imul
mov
mov
push
notl
rorb
or
pop
test
jne
inc
push
movsb
es
dec
shrb
or
loope
pop
and
fadds
push
or
dec
sbb
je
rorb
adc
out
jb
xchg
and
push
or
and
adc
cmpsl
pop
inc
push
ds
pop
and
mov
jecxz
mov
push
xor
pop
cmpsb
inc
dec
in
pop
cmp
sub
outsl
adc
cltd
jmp
in
dec
cmp
xorl
das
mov
shlb
mov
push
inc
fsubrl
mov
pop
inc
push
and
jne
scas
mov
ds
or
jg
test
mov
push
icebp
sbb
push
test
push
in
xor
cmp
in
push
adc
repnz
cmp
repnz
mov
push
rol
push
adc
repz
inc
ret
test
sbb
and
lret
dec
lea
aam
adc
and
je
mov
xchg
lds
bound
in
loop
loopne
and
cwtl
add
mov
push
gs
loopne
add
mov
mov
call
adc
and
add
sub
sbb
sbb
hlt
add
cmp
sbb
addb
dec
add
dec
add
sub
stc
in
hlt
inc
cltd
xor
inc
adc
dec
std
xor
es
leave
pop
sbb
jno
imulb
add
mov
jecxz
adc
cmp
dec
outsb
push
push
sbb
pop
sub
push
out
cltd
je
jle
mov
push
subb
mov
push
or
out
testb
into
jl
cmpsl
dec
loope
or
ret
enter
xor
and
mov
ret
pop
mov
mov
xchg
cmp
jl
je
rcl
cmpsb
insb
pop
mov
ljmp
cmc
pop
pop
clc
sbb
insb
fsubrl
push
xchg
lret
sub
add
in
inc
mov
mov
push
sub
iret
dec
pop
test
into
xor
sub
lret
inc
push
out
xchg
test
fadds
lea
outsb
mov
dec
inc
xchg
js
faddl
mov
xchg
push
xchg
das
sub
push
push
ret
lds
mov
clc
inc
or
dec
push
sbb
push
and
cmp
inc
pop
dec
clc
dec
out
sub
sub
cwtl
push
add
sub
mov
push
push
jl
mov
mov
enter
push
dec
rcll
push
add
lret
je
cmpsb
adcb
add
fisttpll
pop
xchg
adc
ret
sub
xor
push
dec
xor
aam
mov
mov
std
and
lds
in
outsl
aam
popf
sub
sub
pop
rcrl
sub
mov
loopne
leave
cmp
out
test
push
ja
push
roll
dec
js
lds
insl
fmuls
add
mov
inc
cmp
sbb
xchg
xchg
aaa
sub
jns
pop
xchg
push
push
int
dec
or
mov
test
daa
les
je
or
sbb
or
pop
push
xchg
mov
sub
jbe
jne
add
sbb
push
cmp
pop
and
pop
je
push
nop
sub
push
sub
adc
inc
cmp
xor
jmp
and
lds
mov
push
mov
repnz
inc
push
loopne
push
and
sahf
loop
mov
cmpb
inc
loop
pop
mov
fcoml
or
push
xor
push
fstpl
outsb
xchg
xchg
push
cmp
add
aas
lock
and
fcoms
add
sbb
adc
jnp
dec
cmp
xchg
dec
ljmp
lret
xor
xchg
dec
adc
loopne
testb
inc
imul
cmc
add
lret
and
in
inc
or
jmp
mov
jg
or
fildl
mov
cmpsb
and
bound
sbb
push
jno
cmp
in
pop
in
push
rorl
sbbb
cmpsb
mov
fsubl
push
fcomp
movsl
out
or
je
xchg
shl
mov
sub
mov
lock
jmp
inc
mov
push
or
pusha
test
jne
xor
mov
lock
clc
push
push
mov
imul
and
dec
xor
cmp
cmp
mov
repnz
pop
je
je
pop
cmp
xor
dec
movsb
popa
push
sub
lock
lods
mov
mov
and
sbb
int
add
push
pop
dec
adc
jmp
notb
cltd
cmp
and
leave
adc
sub
xchg
les
pusha
cmp
xchg
mov
adc
sbb
in
aaa
mov
jne
leave
push
push
stos
xlat
aaa
das
mov
call
xlat
add
dec
test
adc
dec
in
dec
push
shl
gs
add
es
mov
adc
dec
ret
fucom
mov
or
xor
inc
adc
cld
adc
icebp
dec
jno
sub
xor
or
fsubs
je
push
mov
pusha
out
or
and
xchg
hlt
lret
popf
jmp
jmp
push
and
test
sbb
das
cmp
inc
cld
ja
pop
adc
cmp
xchg
inc
jl
cmp
or
insb
push
arpl
jmp
mov
shrl
jmp
mov
pushl
pop
jbe
in
mulb
mov
xchg
inc
adc
nop
add
add
cmp
cmp
or
clc
mov
jmp
jae
xchg
repnz
fs
mov
add
jbe
lahf
sub
pop
or
aas
cmpsb
sbb
adc
add
stos
mov
dec
inc
sub
mov
movq
dec
add
adc
pop
add
pop
sub
int
jmp
outsl
mov
cmp
in
pop
jge
push
cmp
and
or
rorb
add
cmp
test
shl
inc
xchg
sub
clc
xlat
mov
out
pop
lock
sub
inc
rorb
sub
sbb
inc
dec
jne
adc
push
pop
ret
cmp
jae
or
inc
mov
aam
push
adc
rcrb
inc
cmp
jg
mov
cwtl
add
into
test
shll
sub
inc
bound
fmulp
or
lea
nop
sbb
adc
scas
mov
and
jecxz
idivl
aam
pop
hlt
pusha
push
cltd
cmpsl
fs
ljmp
test
mov
ja
mov
sub
push
sti
xchg
pop
sbb
call
repnz
hlt
out
add
fs
sbb
mov
adc
sahf
cmp
loop
lock
adc
lret
mov
push
pcmpgtd
push
in
sbb
adc
enter
scas
test
insb
dec
int3
shl
add
or
subl
push
jl
mov
shr
imul
sub
jg
adc
aam
mov
cmpsb
or
inc
cmp
mov
cltd
aaa
push
stos
sbb
lods
sbb
sbb
cs
or
aas
mov
xorl
repz
stc
in
nop
sbb
outsl
pop
je
jg
lahf
mov
or
dec
fcompl
jp,pn
or
sar
das
or
out
mov
mov
xor
or
push
shrb
push
inc
lcall
in
sbb
das
push
out
push
or
ret
bound
fs
mov
aam
mov
dec
loop,pt
push
pop
dec
loopne
scas
or
pop
mov
insl
dec
pop
jne
add
sub
lea
jmp
adc
adc
mov
mov
jmp
mov
insb
push
lock
call
sbb
add
cld
cmp
ja
fstl
daa
pop
es
adc
jb
shr
mov
nop
dec
sub
inc
jae
jge
mov
and
adc
push
inc
sarl
stos
pop
test
clc
test
xor
xor
cmp
cld
inc
xchg
push
adc
ret
push
outsl
push
lods
cld
push
loope
icebp
push
sub
mov
and
je
jmp
clc
push
sarb
xor
inc
mov
scas
clc
add
or
lds
loop
rorb
cld
loopne
sub
dec
jbe
add
jmp
or
lret
dec
inc
adc
or
shll
sbb
aam
clc
fstl
mov
mov
sub
adcl
sub
cs
push
adc
sub
nop
and
mov
sub
stos
rcrl
hlt
adc
adc
call
je
inc
mov
in
test
ljmp
jmp
jle
and
clc
and
mov
in
test
call
or
enter
xor
add
cmp
jle
and
lea
fimuls
xchg
loope
add
cmp
xchg
dec
or
mov
incl
dec
scas
lods
xlat
inc
xlat
add
mov
or
repz
divb
cmp
push
add
into
dec
shl
popa
jle
fiaddl
cmp
pop
in
fimuls
dec
repnz
into
fsubp
push
out
xchg
sub
js
xorl
sti
ljmp
pop
jmp
shll
cmp
cwtl
pop
inc
add
clc
fldenv
mov
fstpt
inc
loopne
ret
lea
pop
or
pop
sti
roll
fucomip
pop
cmp
push
pop
jge
enter
push
lahf
adc
aam
mov
ds
sub
test
adc
jbe
xor
cmp
sbb
js
lock
arpl
xor
lea
jl
jns
adc
sub
testl
cmp
cs
xchg
cwtl
push
lea
repz
rcrb
cmpsl
clc
xor
fcoml
mov
mov
imul
incl
pop
cmp
fcomp
mov
pop
scas
mov
in
mov
mov
lea
or
call
push
fwait
push
and
aad
sub
push
hlt
out
mov
mov
in
push
enter
in
and
push
cmp
ret
adcl
inc
xchg
sarb
jb
enter
xor
cld
mov
sub
push
sub
les
mov
pop
dec
das
dec
fistpll
mov
push
dec
loopne
cmpsl
cwtl
outsl
lock
call
cli
xchg
pop
enter
jl
adc
jae
sbb
fcoml
addr16
sub
adc
es
cmp
les
scas
aam
bound
pusha
test
cmp
or
cmp
lret
into
es
adc
jbe
call
mov
stos
sbbb
xchg
jecxz
movsl
in
push
leave
pusha
inc
jo
rorb
dec
in
push
push
pop
and
int3
lods
pop
movsl
in
sub
mov
push
fildl
test
or
fstpt
sub
stos
cld
rcrb
mov
mov
or
andl
mov
xor
xchg
mov
sbb
testl
dec
sbb
jg
mov
and
push
fldl
and
mov
pop
inc
xchg
lea
mov
rep
aad
loopne
aas
or
shlb
xor
clc
add
jne
push
fs
add
adc
adc
dec
adc
xlat
jle
jmp
sub
cld
shr
mov
sbbb
jae
xchg
inc
mov
xchg
nop
or
sbb
sbb
es
outsb
jb
pop
mov
arpl
mov
jmp
and
fadds
jnp
imul
adc
popa
adc
mov
stc
jne
jbe
or
mov
adc
imul
cld
and
xor
incb
pop
loopne
movsl
mov
loope
leave
xchg
bound
gs
and
nop
mov
out
adc
lret
jl
inc
call
and
je
pop
movsl
dec
jb
jmp
push
dec
lret
in
push
jns
or
testb
fsubs
mov
fnstenv
leave
fimull
fadds
je
xchg
imulb
cmp
int
arpl
mov
cltd
in
or
or
mov
pop
pushf
or
lahf
mov
hlt
or
pushf
idivl
dec
andl
mov
stos
and
pop
aas
bound
adc
push
push
jbe
outsl
cmp
add
pop
sbb
pop
testl
mov
call
jb
fldl
push
dec
cmpb
ljmp
mov
test
movsb
ret
int3
xchg
mov
mov
movsb
jns
fstpt
loope
aad
hlt
ds
mov
in
mov
pop
fdivrs
and
subl
icebp
enter
sbb
mov
pop
les
repz
ljmp
adc
sub
add
xor
test
cmp
jbe
lcall
adc
inc
jae
add
push
in
mov
inc
rorb
mov
mov
adc
adc
daa
xor
aad
aaa
movsb
jmp
test
pop
pop
js
movsb
stos
jb
and
add
mov
sbb
push
jae
adc
fsubl
pop
dec
mov
xor
dec
xorb
testb
adc
sahf
mov
xor
cltd
adc
and
test
shlb
mov
jne
sahf
ljmp
push
sub
call
int3
xor
and
dec
clc
cmp
jae
lea
push
call
sub
add
sub
cmp
push
jb
bound
out
adc
pop
es
adc
add
sub
sub
fwait
sub
mov
aam
jge
lock
iret
in
mov
and
or
mov
in
sahf
mov
jae
jl
jae
cmp
inc
ljmp
dec
sbb
push
add
nop
jmp
xchg
out
add
mov
std
lock
and
jmp
cmp
ret
adc
adc
push
add
or
call
cmpsl
outsb
movsb
out
push
js
mov
aas
add
mov
pop
mov
arpl
and
add
sub
lret
jb
adc
adc
xchg
psubsb
adcl
test
xor
lret
arpl
mov
nop
test
shlb
and
xor
inc
xchg
adc
push
or
mov
jo
fildl
mov
shrl
and
je
jns
xor
mov
aaa
es
push
or
mov
pop
fistl
xchg
xchg
push
repz
aam
and
repz
hlt
rcl
jae
das
adc
ret
mov
ljmp
pop
sbb
jns
aas
into
mov
push
xchg
jecxz
and
lock
xchg
mov
sub
sbb
lret
lods
pusha
inc
mov
xchg
pushf
das
faddl
call
cmp
pop
test
sub
aam
adc
popa
shrb
mov
sub
aas
adc
adc
cmp
enter
mov
xchg
xlat
dec
jne,pn
andb
pop
ret
jl
pop
inc
sbb
js
roll
ja
jle
in
cmpsb
mov
sbb
xchg
adc
inc
cld
or
cmp
push
add
shrb
xchg
push
mov
adc
mov
mov
push
inc
mov
orl
push
or
add
outsl
xor
mov
xor
out
ret
mov
inc
mov
lds
daa
adc
jbe
pop
push
or
adc
fildl
inc
push
cmc
push
or
dec
or
dec
pop
push
lret
mov
dec
fiaddl
lahf
xor
mov
xchg
add
xchg
cmp
iret
pop
pusha
push
xor
push
in
push
xchg
mov
push
or
into
mov
adcl
sbb
aaa
adc
faddl
xchg
mov
sbb
adc
xchg
ret
pop
mov
inc
inc
jbe
or
in
sub
es
repnz
inc
lods
iret
push
xor
jge
xor
cmp
je
imul
ljmp
jb
insb
dec
shl
adc
dec
cmpsb
mov
int3
movsl
enter
dec
ret
jecxz
and
xor
push
mov
jb
jns
push
pop
sub
pop
das
push
pop
das
fs
mov
mov
fimull
mov
insb
push
mov
adc
add
cs
mov
lock
jp
cwtl
popa
or
pusha
fs
jle
lahf
adc
add
lds
xor
adc
fs
dec
clc
int
xchg
push
in
repz
jge
fimuls
stc
shll
ret
daa
clc
gs
lock
mov
xchg
push
sbb
psubsw
shl
fcmovnu
pusha
pushf
fistpll
in
aad
cltd
test
mov
xchg
loopne
mov
outsb
jecxz
cmpsb
test
les
sub
out
cld
push
popa
sbb
pop
add
push
cld
pop
das
xchg
scas
shlb
cld
pushf
cmpsb
inc
fsubr
push
test
jecxz
fsubr
movsl
adc
dec
inc
xchg
outsb
rcll
mov
adcl
xor
or
popa
sub
sbb
cmp
cltd
mov
adc
jecxz
das
dec
popf
xchg
ds
jecxz
xchg
call
adc
fidivrl
lods
lret
sub
xor
dec
int
cld
sbb
inc
int3
out
and
inc
or
sbb
dec
jecxz
pop
push
push
inc
jbe
leave
scas
lcall
aam
sahf
fstps
fsubrl
notb
push
pop
mov
push
ret
sub
push
mov
scas
fidivrs
scas
inc
sub
gs
lahf
fisubs
xchg
gs
ret
in
rcl
cmpsl
movsl
adcb
ja
outsb
jmp
push
rcrl
or
cmp
mov
je
stc
pop
push
mov
pop
push
jmp
sbb
sub
aad
push
cmp
and
lahf
addl
lds
push
xchg
nop
adc
push
inc
sbb
pop
lods
dec
jg
mov
dec
push
inc
cmp
insb
mov
or
sbb
mov
mov
jo
jne
movb
decb
add
lahf
add
pop
add
or
xchg
inc
inc
mov
adc
es
outsl
cmp
nop
lds
jmp
cltd
sub
stc
addl
jmp
inc
inc
mov
fs
add
jl
sub
lea
push
or
adc
mov
lea
testl
jle
cmp
jl
ljmp
jne
dec
lods
mov
cmpb
jne
mov
inc
das
add
xchg
je
negl
sub
xor
sub
xor
mov
jl
push
aad
xlat
lahf
in
push
cmp
push
or
xorl
sub
dec
lahf
inc
fldenv
mov
into
sub
or
push
movsl
jp
inc
call
adc
mov
jmp
jne,pn
scas
mov
adc
cmp
push
xchg
test
shrb
sbb
jmp
push
mov
jne
xorb
mov
and
or
stos
add
mov
adc
and
cld
pusha
jg
or
clc
call
roll
data16
nop
sbb
test
mov
push
push
xor
or
addb
mov
sub
insb
adc
sbbb
cmpsl
and
adc
adc
sbbl
xor
inc
fimull
pop
les
lret
lea
jnp
out
out
leave
push
jg
sub
cmp
pop
ret
push
ljmp
nop
push
jbe
cmp
loopne
push
out
or
clc
in
xchg
pop
repnz
add
mov
lahf
out
loope
in
pop
das
cmpsl
and
test
cmp
xor
pop
pop
ret
sub
push
sub
adc
into
mov
add
lods
daa
js
es
cmp
xor
insb
push
mov
ljmp
push
fcompl
cmp
sub
in
pop
mov
cmp
popf
clc
or
pusha
push
in
inc
jle
fistl
xchg
dec
call
sub
les
pop
add
adc
das
jl
adc
jnp
fildl
test
setp
inc
push
imul
cli
arpl
xchg
sub
mov
repz
out
xlat
popa
insl
ret
adcb
add
cltd
loop
loope
loopne
bound
dec
fiadds
xchg
and
mull
push
pop
packsswb
or
outsl
stos
and
push
add
cwtl
lret
dec
hlt
fldl
xor
and
fsubl
push
add
pop
ret
pop
sub
push
js
jne
xchg
lods
adc
xchg
fadd
out
inc
xchg
call
and
and
add
push
shr
lret
push
loopne
fiaddl
enter
leave
ds
in
scas
sub
in
mov
hlt
dec
xchg
sbb
adc
sarl
ret
mov
mov
inc
ficompl
rcll
test
ret
je
push
movsb
das
in
shl
xor
or
leave
xchg
fcoml
mov
xor
jp
dec
sbb
std
sbb
and
shlb
xchg
loope
mov
jge
xchg
mov
xchg
cmpsb
and
mov
in
adc
jae
jecxz
dec
jg
test
adc
xor
decl
mov
adc
push
orl
dec
cld
sbb
cltd
mov
xor
push
dec
clc
lahf
inc
pop
push
int3
mov
andl
mov
inc
sbb
fldenv
inc
lock
mov
xor
xchg
or
movsl
push
add
test
cmp
xor
rorl
cld
mov
fcoms
mulb
nop
jo
or
xchg
inc
bound
fiaddl
mov
hlt
gs
sub
dec
outsb
inc
fsubs
outsb
push
push
addb
loop
mov
mov
pusha
add
popa
gs
and
test
nop
inc
cltd
mov
dec
jbe
mov
fimull
dec
mov
leave
sub
inc
idiv
xlat
mov
lock
test
rcrl
mov
sbb
jmp
sbb
js
push
dec
mov
jae
test
fsts
mov
lcall
mov
push
mov
insb
push
dec
cli
mov
lock
xor
leave
mov
mov
insb
ljmp
push
inc
and
sub
fs
shrl
or
adc
add
push
push
push
push
call
mov
sbb
dec
adc
adc
dec
jmp
iret
cmp
or
mov
pop
test
mov
adc
das
cmp
lret
dec
cmp
sub
and
or
adc
adc
inc
jp
add
mov
push
jg
pushl
lret
pop
sub
lret
sarb
lods
add
cwtl
xor
cmp
cwtl
and
sub
je
adc
xchg
aas
inc
or
cmc
sbb
lret
mov
push
in
and
stos
gs
or
int
inc
dec
fildl
icebp
idivb
mov
imul
adc
push
dec
xchg
sbb
int3
movsb
push
sarb
data16
adc
jge
cmp
jo
popf
repz
mov
mov
and
jl
sbb
or
fmulp
out
and
adc
iret
stc
jmp
mov
sbb
das
pop
jne
jae
xchg
repnz
mov
popa
dec
and
push
out
pop
xor
cli
cli
call
lret
dec
mov
sbb
jg
xchg
clc
push
jbe
arpl
inc
mov
xchg
pop
ret
dec
sub
pop
sbb
sbb
mov
call
test
push
sub
pop
aas
cmp
pop
jne
xchg
test
repz
inc
and
push
mov
mov
push
fnstenv
jl
inc
insb
cmp
jo
pop
dec
pop
adc
je
rcll
mov
jmp
ss
loopne
in
es
ficoms
push
popf
icebp
cmc
mov
jle
push
push
out
cltd
out
das
mov
sbb
fs
cmp
les
jnp
pop
or
aam
lea
cmp
xchg
scas
sahf
loopne
mov
push
out
sub
pop
jns
and
jb
in
call
lcall
add
sbb
sbb
push
xchg
insl
or
and
rorb
jb
jne
rorl
jmp
xchg
enter
shlb
sbb
mov
lods
nop
test
movsb
mov
or
xchg
and
xorb
sbb
je
inc
jo
insb
nop
push
xor
or
xchg
and
enter
xor
orb
inc
andb
nop
mov
xor
inc
mov
enter
xor
sbb
or
xchg
and
nop
loopne
in
call
or
xchg
and
mov
enter
xor
sbb
xchg
and
sub
sub
xor
xor
cmp
xchg
and
enter
xor
or
xchg
and
enter
xor
or
xchg
and
nop
xor
inc
mov
enter
xor
xchg
and
nop
int3
enter
xor
sbb
or
xchg
and
nop
lock
xor
sbb
or
nop
adc
sbb
and
and
sub
nop
xor
cmp
inc
sbb
xchg
and
push
enter
xor
fs
xchg
and
enter
xor
inc
nop
and
mov
or
xchg
and
shlb
sbb
or
xchg
and
nop
fmul
in
call
or
xchg
int3
test
push
outsb
jbe
stc
or
enter
and
or
enter
and
or
enter
and
xchg
and
je
js
jl
sbbb
or
xchg
and
fs
xor
xchg
and
fs
or
xchg
and
nop
aam
fsubs
loopne
in
call
lock
hlt
enter
test
or
or
adc
nop
sbb
and
sub
sub
xor
nop
cmp
inc
fs
xor
dec
or
xchg
and
pop
enter
xor
insb
or
xchg
and
jl
subb
nop
fs
xor
xchg
and
fs
mov
xchg
and
nop
int3
enter
xor
sbb
or
xchg
and
nop
in
enter
xor
sbb
or
xchg
and
adc
adc
sbb
and
and
sub
nop
xor
cmp
xchg
rclb
jne
cmp
pusha
out
adc
or
sub
lods
sbb
das
call
ret
and
leave
rcrl
or
test
and
pop
or
mov
sbb
in
mov
cwtl
imul
and
sahf
jp
cmpb
jne
scas
inc
popa
push
adc
lock
daa
xor
repz
cmp
leave
xor
adc
mov
adc
fidivrl
xor
pop
orb
push
sbb
dec
mov
sbb
sub
in
test
sti
xor
dec
adc
hlt
mov
cmp
insl
loopne
and
jmp
hlt
pop
lea
push
fiadds
mov
stos
les
dec
out
into
icebp
add
sub
pop
in
mov
mulb
adc
loopne
sbb
dec
mov
lods
addb
idivl
aad
and
mov
addl
enter
sub
mov
adc
sbb
push
adc
loopne
bound
cmp
orb
arpl
push
pop
dec
call
enter
les
std
mov
inc
push
inc
xchg
lea
or
sbb
nop
mov
jae
rolb
inc
jo
mov
outsl
xor
and
mov
xchg
je
cmp
push
repnz
push
adc
jbe
aad
rcrb
pop
imulb
movzwl
aam
jmp
pop
cmp
fsubrs
cmc
push
or
push
push
sbb
pushf
cld
inc
inc
cwtl
imul
ret
popa
pop
mov
in
dec
sbb
xchg
inc
dec
sub
lret
xchg
and
adc
push
push
jae
push
adc
enter
jne
and
dec
loope
xor
or
stos
xchg
adc
or
aaa
xchg
out
test
shll
push
xchg
xchg
and
popa
or
shr
inc
repz
push
dec
fisttpl
leave
jne
or
mov
adc
out
or
push
das
lock
pop
icebp
xchg
add
lahf
mov
je
mov
and
and
add
xor
dec
fsubrl
test
js
inc
add
call
push
inc
jmp
jmp
mov
mov
adc
pop
cmp
pop
je
sbb
push
dec
mov
shrl
mov
aam
nop
jmp
es
data16
dec
jg
rolb
test
mov
repz
pusha
mov
xchg
cmpsl
or
pop
mov
addb
adc
adc
add
jne
enter
sub
test
mov
dec
inc
mov
cli
sub
and
lods
xchg
xor
lahf
lea
xchg
mov
jle
lea
fstps
in
sub
adc
mov
jae
or
or
or
mov
mov
sbb
and
insb
cmp
mov
stc
mov
dec
mov
mov
jns
clc
and
repnz
lods
or
inc
adc
push
in
icebp
movsb
fildl
stos
arpl
xor
filds
iret
aam
mov
test
daa
adc
xchg
adc
testb
test
mov
mov
and
cmc
fsubs
add
clc
cli
test
clc
pop
sub
ret
dec
sub
mov
xchg
sbb
push
stos
or
pop
or
in
pop
addr16
mov
xchg
add
icebp
pop
pop
xor
mov
inc
loopne
push
ret
xor
in
mov
adc
nop
loopw
pop
inc
sub
inc
mov
call
pop
lea
cmpsb
mov
divl
mov
push
outsl
push
and
mov
inc
popl
inc
scas
xor
mov
xchg
push
test
and
sti
or
and
int3
or
mov
mov
push
das
or
pushf
loope
inc
sub
adc
testb
call
sub
aam
loope
out
out
inc
add
push
lods
xchg
jno
add
jo
sbb
inc
push
out
int3
jb
adc
cmpsb
lret
mov
aam
mov
sub
push
and
dec
aaa
call
dec
pusha
mov
les
adc
cli
ja
out
icebp
in
inc
or
or
push
adc
or
dec
dec
outsb
adc
and
adc
sub
mov
cmpsb
cmc
pop
jo
fsubr
or
adc
popa
jp
int3
adc
repnz
or
loop
fidivl
test
push
adc
and
inc
notb
add
or
fldenv
xor
in
aam
test
dec
add
sbb
push
test
jle
mov
nop
pushf
icebp
pop
mov
sub
sbb
sub
js
adc
aas
in
push
adc
hlt
in
rclb
mov
or
rcrb
and
out
adc
adc
or
mov
and
sub
call
adc
and
and
nop
push
xchg
bound
pop
or
mov
repz
out
cld
adc
in
adc
sub
and
and
or
sub
dec
mull
xor
sbb
popa
in
pop
push
fisubl
cmp
xchg
loope
rorl
mov
test
loop
stos
push
push
repz
and
push
aas
dec
andb
repnz
sub
adc
and
jo
lods
bound
sbb
mov
movsl
and
push
pop
ret
inc
and
mov
cs
push
push
add
into
sub
test
test
add
push
fmull
dec
lods
inc
and
xor
and
adc
mov
adc
mov
or
push
add
call
jae
mov
out
mov
cs
mov
xor
orb
call
inc
lods
cmp
pop
pop
dec
test
mov
test
inc
fsubs
adc
movsb
xchg
push
mov
icebp
and
adc
mov
iret
inc
icebp
and
cmpsl
sahf
inc
lods
mov
cmp
or
xor
mov
scas
lock
or
sbb
mov
gs
push
pop
imul
inc
inc
mov
cmp
cld
xlat
mov
or
xchg
and
nop
cmp
stos
sbb
mov
xchg
nop
insb
mov
and
out
sbb
gs
test
pop
mov
push
inc
or
test
and
xor
dec
inc
and
or
test
xchg
scas
testl
pushf
out
sub
or
xchg
and
nop
adc
mov
inc
aaa
rcll
mov
or
sbb
and
imul
inc
pusha
mov
pop
inc
andb
xchg
mov
and
nop
jo
or
or
inc
jl
and
out
rolb
mov
in
lock
cmp
mov
inc
xor
hlt
out
sbb
call
xchg
out
rolb
or
jp
inc
push
or
rorl
lods
cmp
dec
or
mov
addb
daa
movsb
push
orl
inc
adc
adc
push
enter
in
sbb
lock
jp
inc
and
fimull
dec
inc
xor
and
jmp
sub
mov
pop
push
in
xor
cwtl
xor
mov
or
test
and
frstor
inc
push
xor
dec
or
test
and
xor
add
cmpsb
in
lret
and
mov
nop
xchg
cmc
dec
pushf
or
mov
enter
jo
adc
pushf
mov
inc
in
enter
and
adc
inc
mov
in
not
lret
or
sub
aam
lcall
inc
mov
mov
or
or
call
into
adc
cmp
scas
xor
jne
mov
movsl
push
and
sbb
jl
jno
data16
dec
jecxz
mov
push
inc
add
stc
loopne
cmp
das
cli
xor
and
nop
mov
add
xor
jg
fadds
xorb
mov
ljmp
je
aaa
clc
sub
and
rolb
enter
adc
mov
fsubl
and
mov
mov
or
cmpsb
or
and
inc
shlb
or
jo
loop
inc
les
psrlq
mov
push
add
mov
iret
sarl
andb
rcrb
jbe
adc
mov
sbb
loope
adc
mov
inc
mov
cld
test
push
mov
adc
mov
cmp
adc
and
es
cwtl
mov
inc
and
mov
ja
adc
sti
and
loope
fstps
loope
and
push
icebp
callw
add
scas
sbbl
push
pop
test
add
adc
fcoms
xor
and
fs
insb
or
lea
loopne
inc
enter
lret
ror
and
lock
pop
pop
in
and
and
mov
out
mov
and
add
mov
std
sbb
mov
in
lock
neg
add
cmp
nop
and
hlt
adc
pop
and
bound
dec
inc
or
in
and
push
sbb
cmp
cmp
ss
dec
enter
mov
int3
out
mov
jo
js
mov
lock
inc
decb
push
scas
sbb
fbld
sub
or
jp
mov
cli
fisubrs
out
nop
lret
adc
mov
shrb
cwtl
test
push
xchg
or
push
es
adcb
fmulp
push
xor
cwtl
jp
or
and
mov
in
xor
ficomps
inc
test
sub
sub
cwtl
or
or
add
rorb
out
inc
loopne
or
jno
adc
mov
inc
and
repnz
mov
es
out
mov
jg
stos
push
xor
push
mulb
test
pop
rcrb
or
mov
insb
and
imul
push
jns
mov
call
or
mov
xchg
sub
lea
sbb
pop
or
mov
mov
add
or
adc
sub
fcoml
test
and
xor
cmp
stc
mov
mov
cld
loopne
orl
sub
mov
jmp
mov
inc
mov
add
in
add
cmp
add
or
add
leave
adc
or
or
lahf
inc
sub
push
sbb
or
pop
and
dec
adcb
fimull
adc
add
lds
dec
fcoms
sahf
xchg
mov
pop
and
dec
push
cltd
stos
imul
push
movsl
push
add
mov
adc
xor
dec
or
mov
xor
mov
or
mov
testl
sub
adc
or
popa
or
add
add
mov
int3
or
mov
adc
aaa
les
les
inc
push
mov
and
rorb
sbb
xor
inc
or
shll
add
sti
inc
sbb
cld
jno
int3
dec
dec
pop
test
nop
dec
popa
int3
or
and
dec
mov
or
inc
xchg
loope
cwtl
xor
xor
lods
mov
adc
int3
mov
and
pop
in
leave
in
or
and
adc
sbb
mov
aam
hlt
xchg
sti
xor
sbb
mov
sub
or
xchg
lods
xor
pusha
xor
or
cmpsb
movsl
call
or
mov
sbb
cwtl
gs
pop
imul
jp
pop
adc
cltd
sub
sbb
insb
movsl
xchg
adc
cmp
int3
or
mov
sub
or
popa
les
jo
or
rcrb
in
add
sbb
sarl
or
pop
imulb
xchg
jp
adc
mov
adc
popa
fdiv
stc
mov
xchg
inc
mov
jno
test
call
xchg
cwtl
sbb
pop
pusha
adc
aas
dec
ds
or
jno
jno
xor
pop
mov
dec
or
imul
cltd
wbinvd
sub
adc
cltd
ljmp
leave
std
enter
xor
xchg
mov
inc
adc
jo
xor
inc
sub
mov
imul
call
int3
dec
mov
cltd
int
xchg
mov
test
push
xor
dec
popa
stos
das
stc
icebp
rcrl
mov
jl
sbb
and
clc
adc
xor
add
mov
out
xchg
gs
jns
adc
xor
inc
add
dec
xor
shll
pop
xor
sbb
push
xor
lcall
inc
test
inc
pop
or
fcmove
xor
sub
lret
mov
or
outsb
shll
inc
mov
cltd
repnz
or
lret
sbbb
insb
push
or
in
and
pop
adc
cli
xor
push
and
and
jmp
pop
cltd
mov
cmp
xor
sub
or
test
xor
mov
add
insl
inc
fwait
cmp
or
dec
xchg
mov
leave
adc
mov
pop
dec
rcrb
enter
mov
out
stc
sub
push
xor
sub
imul
leave
shlb
xchg
xchg
lret
mov
sbbl
sbb
or
and
or
data16
jns
adc
xor
or
mov
jno
and
nop
add
movsb
inc
outsb
mov
cmpsb
xchg
mov
pop
inc
stos
push
inc
int3
sbb
add
jo
sbb
pop
adc
dec
xor
adc
and
ret
add
dec
loop
fsubs
dec
mov
cmp
movsb
dec
mov
shlb
inc
in
mov
or
cltd
sbb
push
or
jl
test
and
dec
mov
addr16
ror
test
int3
leave
push
mov
mov
dec
ljmp
pop
or
dec
push
js
mov
mov
dec
and
adc
add
xor
inc
inc
mov
sbb
bound
outsb
or
nop
dec
pushf
xchg
lods
and
clc
adc
sub
sbb
jae
or
adc
add
adc
xchg
add
cmpsb
add
push
inc
nop
cmp
jo
pusha
inc
or
cltd
or
inc
aam
arpl
mov
outsl
cmp
add
or
adcb
add
pop
push
mov
cmpsb
xchg
mov
mov
adc
mov
push
fs
pop
mov
adc
inc
dec
cmp
sub
mov
push
and
dec
or
adc
sub
call
dec
in
xchg
out
loopne
fcmovbe
mov
adc
and
adc
adc
sbb
rorb
sbb
loope
sbb
mov
call
clc
inc
enter
cmp
or
and
and
ret
aaa
pop
nop
sti
mov
xor
sub
je
xchg
adc
push
adc
test
mov
inc
add
inc
addr16
rolb
inc
bsf
lock
les
sbb
js
jl
adc
pusha
rcr
jb
cmp
insb
cwtl
les
or
mov
orb
mov
inc
xor
lret
xor
or
mov
push
and
jno
push
mov
inc
and
mov
dec
inc
jbe
dec
inc
inc
push
mov
and
shlb
or
adc
rorb
inc
loopne
iret
fsubr
pop
js
rolb
cld
decl
fidivl
les
cmp
or
inc
or
shlb
dec
std
cltd
add
and
pop
sbb
addb
sub
or
pusha
pusha
pop
dec
sbb
or
sbb
inc
pop
mov
bound
ljmp
xor
sbb
add
add
sbb
push
push
pop
dec
les
imul
xchg
dec
cmp
add
cwtl
pop
sbb
bound
adc
enter
dec
ret
pop
or
outsb
cltd
and
bound
pop
and
dec
push
xchg
dec
and
cmp
xchg
test
xor
or
and
dec
adc
push
and
inc
add
int3
mov
adc
pop
jns
out
loope
pop
push
xor
movsb
inc
sahf
cs
sub
sub
sub
xchg
popa
inc
xor
add
push
sbb
jnp
jmp
rclb
and
and
sbb
test
loop
imul
xchg
pop
je
and
test
sbb
mov
dec
loop
mov
cmp
xchg
adc
mov
les
mov
adc
pop
mov
mov
rolb
pop
cmp
callw
or
dec
call
clc
rorb
mov
adc
enter
mov
cmpsb
mov
andl
mov
adc
pop
adc
pushl
mov
xlat
dec
shl
sbb
mov
call
iret
jo
ror
jo
into
push
mov
push
sarb
pop
daa
pusha
rcrb
jl
pop
lock
push
sub
loope
add
js
rcl
nop
jae
sub
dec
sbb
and
outsb
icebp
jnp
inc
adc
push
mov
add
shrb
add
add
xchg
push
sub
mov
flds
mov
or
roll
cltd
mov
sbbb
outsb
and
inc
mov
pop
mov
push
and
dec
inc
or
mov
adc
and
dec
es
and
fs
cmp
aad
loope
sbb
sub
adc
jo
push
nop
cmp
pop
cltd
ss
rcrb
adc
or
sub
inc
pop
push
je
aaa
or
jo
pop
int3
sbb
dec
mov
inc
je
mov
adc
cs
sub
and
adc
xchg
add
pop
and
inc
repnz
mov
push
lock
sbb
fisubrl
pusha
mov
lcall
xchg
pop
aam
out
cwtl
pop
loopne
mov
pop
inc
mov
mov
nop
mov
mov
loope
rcrb
mov
lret
pushf
movsl
pushf
mov
jecxz
je
movsl
sbb
and
jo
add
fstpt
and
nop
fisubrl
nop
faddl
bound
fcompl
jo
faddl
jo
add
and
repz
popa
popf
or
xor
imul
and
aaa
adc
dec
out
fcom
xor
pop
sbb
dec
loop
in
mov
and
xchg
and
in
pusha
fadds
or
xchg
shl
push
clc
pop
push
cmp
es
sub
sub
shr
jo
xor
and
and
test
add
xchg
push
je
loopne
xchg
pcmpeqb
push
mov
loop
cs
enter
lock
into
cmp
xchg
cmp
shl
js
adc
sti
enter
jo
jno
bound
fcoms
nop
cwtl
nop
rolb
xor
dec
rorl
jo
xor
xor
enter
and
add
inc
loope
stc
sub
jmp
jo
inc
pop
test
incl
mov
pop
dec
mov
mov
out
mov
push
inc
adc
testb
cmpsl
and
and
bound
sbb
or
mov
and
mov
inc
shl
cmp
adc
aaa
xchg
mov
dec
sahf
and
adc
dec
rcll
add
mov
inc
or
pop
and
aaa
or
fs
cmp
push
mov
pop
mov
insl
mov
jnp
pop
or
pop
inc
mov
lret
push
lods
loopne
inc
jmp
idivb
mov
cmp
addb
push
xor
dec
sbb
xor
mov
mov
cmpsl
lock
mov
and
jno
pop
inc
lret
pop
clc
sbb
sarb
movsl
aaa
adc
repnz
aaa
mov
les
dec
jo
inc
xor
loop
pusha
js
lods
loopne
dec
xchg
sub
push
es
pop
mov
push
rclb
cmp
xor
xor
cmp
or
and
xchg
ror
loope
cmp
adc
push
and
sub
fisubrs
lock
xchg
push
xor
mov
iret
add
mov
xchg
sub
cmpsl
shlb
sub
push
loopne
sub
pop
fs
inc
shll
mov
dec
xor
xor
loop
inc
loop
loopne
push
fwait
xor
push
mov
aaa
xchg
or
in
jb
cmp
or
test
loopne
jmp
or
cmpsb
push
sub
imul
pop
icebp
jbe
cmp
dec
xor
les
and
push
imul
dec
add
xorb
nop
loop
sub
test
xor
cmpsb
cmp
in
jb
jmp
cmp
pop
mov
or
add
sbb
sub
xor
adc
and
dec
or
mov
push
push
js
js
and
jns
sbb
jae
into
enter
pop
shrb
clc
lds
sub
lock
xchg
clc
fcoml
or
push
loop
imul
dec
or
mov
pop
call
sbb
bound
mov
pop
and
dec
add
jge
lret
fs
dec
or
test
inc
add
and
lock
js
insb
xchg
mov
loopne
push
mov
inc
lods
loop
sub
sbb
sbb
mov
pusha
mov
ficoml
arpl
call
js
xor
insl
sbb
icebp
sbb
icebp
sbb
sbb
sbb
sbb
sbb
jp
sbb
xor
inc
mov
mov
enter
test
lods
outsl
inc
xor
jmp
xchg
idivb
or
pop
adc
adc
mov
inc
sub
rorb
call
add
inc
sub
mov
fs
cmp
dec
push
lock
cmp
outsl
mov
mov
mov
xchg
sbb
or
cmp
sub
add
scas
mov
mov
mov
rcrb
dec
lret
cmp
sbb
mov
mov
jo
test
pusha
pop
lods
and
cmp
inc
cmp
inc
jle
or
cmp
dec
mov
xchg
jo
js
xorb
mov
sub
inc
pop
mov
inc
fs
shrl
inc
leave
cmp
cmp
loop
cmp
dec
or
cmpsb
dec
inc
adc
jno
xor
lds
push
sbb
outsl
adc
jno
cmp
push
adc
push
in
jb
arpl
mov
sbb
sbb
adc
mov
xchg
mov
jb
cmp
sbb
mov
add
or
pop
in
push
pusha
cmp
dec
cmp
mov
ret
jno
gs
imul
jo
or
xchg
xor
mov
cmp
inc
mov
popf
fmuls
shll
mov
loopne
jmp
js
mov
rolb
js
icebp
sbb
icebp
dec
sub
icebp
or
adc
dec
sub
or
imul
mov
fisubs
mov
loopne
mov
shr
out
mov
mov
clc
dec
lods
lock
xchg
rol
mov
or
je
push
push
sbb
xor
sbb
push
jns
sbb
jo
push
dec
enter
add
fwait
les
inc
mov
mov
jo
mov
push
call
das
mov
push
pop
sbb
and
sub
arpl
les
out
jno
cwtl
jns
adc
or
fs
subl
inc
add
dec
pop
mov
sub
or
xor
sub
mov
adc
and
inc
pusha
and
and
call
sub
adc
pop
cmp
enter
inc
clc
jo
ja
add
mov
ja
sbb
icebp
sbb
loop
push
jb
push
mov
call
js
sbb
mov
inc
les
mov
and
xchg
call
js
jo
push
js
add
xor
inc
mov
jo
push
mov
or
pop
add
imul
js
add
push
test
sub
cmp
shrb
or
lock
and
inc
jns
sbb
add
in
sub
in
jb
cmp
adc
mov
gs
or
cmp
mov
mov
xchg
rcrb
mov
rcrb
fisubrs
jmp
push
bound
jp
adc
fdiv
xor
les
adc
outsl
and
js
adc
adc
movsb
adc
in
xor
rcrl
jecxz
inc
push
jmp
sub
pusha
xchg
sti
jo
add
enter
and
lock
in
inc
pop
mov
ret
mov
cwtl
orb
push
rcll
les
xchg
mov
sub
push
cwtl
ret
inc
enter
bndstx
jns
push
je
sub
sarb
lret
adc
mov
push
inc
xchg
push
faddl
lret
sarb
mov
cli
hlt
jle
mov
mov
push
or
pop
imul
push
rclb
mov
nop
dec
mov
cmp
bound
sub
pop
lds
sub
mov
pop
pop
push
mov
push
sub
dec
or
jae
push
aad
inc
sub
loop
add
jo,pn
rcrl
sub
mov
lret
push
push
popf
adc
push
outsl
sbb
addl
cmp
in
and
sbb
sub
adc
cmp
ret
xchg
jge
jno
nop
lret
xor
xchg
adc
add
jb
push
imul
stos
add
dec
jl
cltd
push
pop
into
add
push
shll
sub
mov
pop
xchg
cld
sub
push
jg
sub
mov
adc
add
pushw
bound
push
xchg
adc
push
jp
push
push
ljmp
pop
xor
and
sub
lcall
jno
adc
push
lret
fldenv
in
cmp
xchg
scas
scas
xchg
loopne
repnz
or
inc
sub
lods
leave
inc
pop
mov
pop
mov
dec
inc
outsb
iret
sbb
mov
xchg
cmp
dec
lea
mov
dec
push
mov
cld
push
push
push
repnz
jno
hlt
push
sahf
and
movsl
sbb
or
insb
jne
xchg
add
push
clc
push
sti
push
sub
add
popa
push
dec
pop
clc
dec
cmpsl
mov
insl
stos
cmpsb
add
ret
add
inc
sbb
adc
bound
and
sbb
rorb
sbb
addb
sbb
mov
jp
sbb
push
jns
xor
sbbb
int
mov
jp
or
xlat
add
fadds
jo
sub
mov
or
loop
sbb
xor
fadds
pusha
repnz
and
or
repz
or
sbb
mulb
movsb
pop
or
sbb
outsb
outsl
mov
xchg
sbb
data16
sbb
js
cmp
arpl
jns
mov
aam
icebp
aad
mov
sbb
pop
les
mov
and
out
pop
popa
or
jb
popa
jle
cmp
outsl
mov
jno
ficomps
fwait
fs
dec
inc
push
xor
xor
or
sbb
inc
push
push
and
lcall
xor
push
in
push
pusha
adc
inc
lods
or
call
or
mov
jo
adc
jb
or
xor
dec
push
int
xor
inc
push
scas
adc
jno,pn
jo
adc
movsl
push
cmp
jne
add
sbb
loop
movsb
lods
push
push
or
fsubrs
xor
or
dec
push
ret
jae
arpl
and
je
leave
sbb
inc
and
and
jns
aam
jbe
push
sub
sub
and
je
jb
imul
cwtl
dec
cmp
adc
push
ds
mov
pop
dec
push
ja
push
insb
jo
xor
gs
movsb
fsubl
loopne
insb
push
imul
pop
call
mov
adc
shlb
ret
sti
xchg
xor
sub
mov
jae
add
cs
xchg
push
adc
jo
outsb
sbb
ret
jl
mov
mov
sbb
mov
xor
sbb
sub
int3
loope
mov
mov
shrb
std
cmp
pop
mov
mov
lret
stc
shrl
adc
sub
mov
and
je
and
adc
jmp
jbe
shr
movsb
cmp
pop
sub
and
leave
xor
rorb
pusha
push
rol
mov
ljmp
sub
push
push
or
out
std
inc
sub
notl
xchg
mov
mov
call
xlat
rcl
loopne
fidivrs
and
mov
push
mov
lahf
sub
imul
or
adc
and
popa
and
insl
test
jbe
jp
xchg
adc
outsl
push
inc
push
push
sub
add
lret
lret
rol
mov
push
push
xor
xor
mov
mov
iret
mov
mov
mov
ret
cmpsb
loop
inc
add
mov
in
movsb
sbb
jo
adc
jecxz
mov
fdivs
jo
mov
dec
icebp
add
lret
fcompl
iret
cs
int
ret
mov
cmp
adc
mov
leave
mov
mov
mov
lds
inc
aam
iret
xor
or
push
adc
mov
mov
adc
or
test
clc
push
mov
xchg
cld
sub
or
cmp
mov
fisubl
mov
fs
movb
xchg
inc
and
cmp
test
outsb
sub
mov
leave
movsl
adc
add
movsb
push
and
mov
and
out
and
hlt
stc
sub
inc
push
mov
test
push
inc
mov
or
movsl
imul
adc
lcall
jo
dec
dec
mov
fldenv
dec
loopne
inc
jmp
or
pop
add
je
enter
pop
mov
or
dec
sbb
push
popa
sbb
fs
inc
repz
jl
jmp
hlt
xor
gs
mov
sub
jo
sub
sub
addr16
sub
pop
aam
lret
fsubrs
int
ss
push
mov
into
repz
es
inc
movsb
jle
mov
sbb
gs
mov
mov
into
rol
push
dec
aam
mov
and
cmp
or
outsw
xchg
int
arpl
push
imul
mov
mov
imul
je
dec
and
lret
test
add
fbstp
add
xlat
shlb
mov
loop
inc
add
loope
mov
mov
loop
sub
cmp
mov
imulb
loop
rolb
mov
aad
sub
sub
ret
sbb
cmp
add
arpl
xor
pushf
pop
inc
inc
xor
mov
push
sub
mov
imul
mov
sbb
push
lods
fs
fstpt
int
inc
inc
xor
inc
and
in
aaa
xor
xor
xor
mov
inc
cmp
xor
in
popf
sbb
cmp
pop
push
adc
je
pop
xchg
adc
loope
mov
inc
lock
fcoms
shlb
dec
rclb
mov
and
dec
adcb
pusha
mov
push
and
dec
inc
xchg
xor
sub
sub
adc
or
add
cld
fcomip
enter
fmuls
rorb
mov
test
mov
int3
adc
adc
jo
push
inc
push
dec
mov
and
dec
sub
and
sbb
adc
mov
cld
fiadds
hlt
and
dec
in
fsubl
aam
int3
rorb
dec
mov
inc
mov
jo
push
xchg
inc
and
sub
mov
adc
adc
hlt
frstor
call
les
mov
xchg
nop
and
pop
adc
dec
xor
sub
and
ret
fsubl
fmuls
xchg
shlb
inc
mov
adc
adc
dec
xor
or
inc
fucomi
mov
adc
and
dec
test
cwtl
and
adc
dec
sub
fiaddl
bound
imul
les
adc
push
je
push
popa
loop
xor
ss
and
sbb
bound
sbb
in
sti
fldenv
je
sub
iret
and
push
or
push
dec
jb
jp
push
ret
or
stos
outsb
jo
jle
or
std
mov
jne
xor
jb
sbb
mov
inc
cmp
ljmp
je
mov
inc
outsb
fsubl
in
sub
or
jae
fdivrs
shlb
addr16
push
jne
xchg
adc
inc
sbb
cmp
insl
cmpsl
sbb
jae
sub
sub
xchg
lahf
and
cmp
adc
xor
pop
xor
adcl
xchg
xor
outsl
nop
insb
mov
aam
data16
movsb
out
xchg
push
xor
or
jbe
and
sub
push
call
jne
inc
stos
adc
xchg
bound
add
je
or
mov
dec
jbe
push
outsl
cld
fnstenv
dec
fmuls
push
mov
push
jno
jno
dec
sbb
push
inc
jae
clc
test
sbb
dec
pop
stos
jb
pusha
xor
push
movsl
or
xor
adc
jecxz
inc
adc
adc
rcrb
fiaddl
mov
sbb
arpl
clc
movsb
or
jae
inc
mov
out
arpl
jae
scas
adc
rcl
paddusb
mov
fstpl
arpl
lret
hlt
inc
xchg
jo
addr16
lcall
popa
pushf
jae
mov
or
outsb
adc
and
je
aaa
jg
fistl
daa
xor
push
test
push
test
repz
jo
lds
daa
js
imul
gs
dec
push
dec
aad
pop
inc
std
int3
jmp
xchg
sarb
int
insl
adc
push
inc
out
or
pop
and
pushf
cmpsb
mov
movsl
push
leave
mov
les
cmp
mov
lea
and
and
data16
inc
xchg
mov
js
jp
mov
add
cmpsl
or
pop
push
jo
std
lods
adc
fisttps
xor
jmp
nop
and
test
mov
dec
adc
pop
bts
stos
lock
insl
adc
popa
pop
sarb
sub
fiadds
loope
daa
dec
test
sub
movsb
jo
jns
je
sub
test
ret
test
jns
pop
jb
jne
adc
js
lcall
out
inc
decl
sub
insl
pop
push
push
xchg
test
lret
dec
xor
push
jb
cmc
ret
xor
lea
arpl
js
push
arpl
daa
stc
pop
sbb
or
adc
and
pop
sarb
in
inc
sbb
inc
cmp
aad
icebp
xor
std
push
mov
cmpsb
cmpsl
push
popa
push
xor
cltd
mov
gs
std
cmpsb
test
cmp
sbb
dec
pop
dec
push
inc
inc
dec
mov
dec
je
and
mov
mov
or
sub
dec
and
and
ja
les
sahf
inc
cli
xchg
mov
scas
add
push
and
dec
dec
push
inc
mov
fdivrl
fildll
sbb
push
movl
rol
push
addr16
imul
sti
insl
push
push
push
addb
adc
arpl
and
and
jne
cs
push
leave
adc
gs
sbb
xor
js
test
pop
out
push
push
and
insl
mov
and
mov
or
outsb
fs
leavew
mov
repz
in
jmp
daa
lods
je
aam
xchg
push
je
dec
xor
cmp
test
cmp
data16
jae
outsl
jp
xor
daa
xchg
cmp
movsb
xor
jp
jo
aad
test
sahf
add
leave
jg
cmpl
cmp
dec
test
roll
lahf
add
hlt
rolb
cmpsl
add
mov
addb
cwtl
mov
shlb
push
sti
adc
and
add
dec
and
sbb
lock
icebp
dec
nop
mov
adc
xchg
adc
lock
xor
add
add
mov
push
mov
push
pop
test
xchg
dec
xchg
xchg
enter
into
fs
cltd
clc
adc
adc
adc
and
dec
inc
xchg
push
pop
inc
xorl
adc
mov
adc
and
dec
call
sbb
sbbb
or
xor
add
add
adc
inc
pusha
add
js
adc
nop
and
dec
test
adc
rolb
adc
inc
or
or
and
addl
and
inc
add
pop
bound
sub
mov
orl
loopne
sbb
adc
xchg
sub
sub
mov
inc
dec
sbb
add
or
inc
mov
cld
mov
test
mov
inc
fdiv
call
iret
movsb
and
loopne
outsl
insl
test
xor
cmp
and
push
inc
mov
cwtl
pop
nop
test
mov
and
stc
call
out
xchg
sbb
and
stc
cmp
enter
pop
repnz
mov
test
mov
inc
fdiv
call
int
js
repnz
nop
dec
cld
pop
xchg
push
sub
adc
inc
mov
add
enter
jo
push
cmp
xchg
in
push
push
insb
add
js
sbb
movsb
xchg
push
call
nop
roll
mov
add
and
fwait
jo
xchg
mov
stos
loop
pushf
add
cmp
mov
into
sbb
or
decl
adc
mov
and
and
mov
pusha
loope
mov
movsb
inc
push
les
andb
hlt
cmpsl
add
test
cs
call
in
lods
jnp
arpl
and
loop
scas
add
cmp
mov
movups
scas
sub
and
add
and
icebp
inc
mov
rcrb
mov
ss
inc
adc
mov
cmp
je
inc
pusha
enter
icebp
sub
fs
xchg
pusha
mov
ds
mov
fsubl
jo
dec
inc
mov
xchg
mov
aam
mov
mov
js
and
enter
sub
push
lock
adc
sbb
adc
pop
add
popa
push
dec
inc
cmp
inc
sbb
sub
push
adc
incl
xor
inc
add
cmp
adc
push
dec
xor
loopne
fiaddl
adc
or
dec
add
sarb
mov
sbbl
lock
mov
int3
ret
rol
add
sub
cmpsl
jbe
scas
out
decb
adc
adc
xor
adc
sub
xchg
sbb
pop
push
dec
aas
clc
sub
insb
daa
pop
adc
xor
pop
mov
cmp
add
test
cmp
and
push
add
push
sbb
inc
adc
jge
scas
add
pop
add
lock
fdivrl
inc
orb
push
sbb
mov
cmp
push
shlb
cld
sub
cwtl
xchg
jne
xor
inc
bswap
jne
notb
mov
lret
pop
pop
jmp
add
dec
int
and
stc
test
cmp
lock
sub
notb
add
jb
out
prefetcht0
stos
sbb
xor
mov
or
sub
mov
sub
ja
arpl
div
in
stc
hlt
lock
and
mov
inc
test
arpl
sti
or
cld
ss
pop
call
inc
rcrl
or
in
and
popa
or
shl
mov
push
and
rolb
sbbb
sub
mov
jl
std
clc
cmc
popa
arpl
mov
jg
push
lret
ror
xor
mov
or
inc
dec
pop
scas
and
std
repnz
in
fildl
adc
roll
adc
repz
and
and
aam
clc
pop
inc
xchg
fimull
sbb
pusha
daa
and
popa
sbb
lods
sbb
wrmsr
aam
pop
and
and
or
lock
insl
cmp
sbb
idiv
or
and
mov
sbb
mov
dec
pop
scas
and
stc
out
xchg
mov
adc
cli
jmp
inc
dec
and
popf
fucomi
stos
adc
add
pop
sbb
adc
shl
mov
inc
cmp
pop
xchg
lahf
push
mov
cmpsb
addr16
inc
push
push
xchg
sub
pop
int3
je
or
mov
cmp
sbb
iret
std
add
int
push
insl
inc
dec
pop
pop
and
jg
cmp
fists
repnz
push
push
adc
inc
and
sbb
out
vpaddsw
aad
shrb
dec
dec
inc
dec
inc
lea
jnp
push
pop
mov
movsb
add
xor
jecxz
sbb
push
nop
cmpl
aad
fmul
movb
fnop
fcmovnbe
lret
psadbw
pop
and
out
into
mov
fwait
insl
pop
adc
ret
roll
adc
inc
mov
add
aas
fcoml
in
mov
repz
ss
std
mov
lds
jns
data16
ror
push
xchg
pop
enter
pop
add
call
dec
xor
test
jmp
mov
sub
xchg
mov
jmp
frstor
movzbl
and
ljmp
inc
add
and
in
inc
dec
and
lods
out
xchg
repz
adc
and
fimuls
xchg
add
mov
ljmp
and
jle
push
fimull
push
popf
xchg
inc
inc
test
xchg
mov
out
loopne
pminub
and
scas
out
mov
add
pop
adc
inc
pop
and
roll
mov
nop
cmpl
sbb
mov
and
push
jmp
jmp
sub
sbb
loope
loop
xchg
adc
movsl
sbb
loope
aaa
inc
cmp
mov
jo
mov
add
add
mov
lds
pop
mov
push
ret
int3
data16
xchg
iret
push
ja
into
jge
jns
rcrb
cmpsl
adc
add
push
push
pop
inc
subl
push
xchg
mov
mov
sub
pusha
push
fs
xor
out
aaa
xchg
adc
jg
push
movsb
repz
nop
xor
sbb
or
push
add
sbb
cmp
bound
push
or
push
add
push
or
cmpsb
or
push
aam
xchg
pusha
add
fs
and
xchg
stc
fildll
subb
inc
in
dec
sbb
push
xchg
and
rdmsr
fiadds
filds
add
inc
sahf
rol
sbb
mov
jbe
jmp
in
lea
dec
mov
mov
inc
xchg
inc
add
xor
scas
test
into
in
ret
inc
and
rcrl
inc
fimull
scas
and
rorl
add
push
lahf
or
or
or
and
movsl
lock
add
movsb
shll
and
jns
movsl
lock
or
mov
aaa
into
dec
xchg
or
and
jg
fwait
cmp
and
add
hlt
mov
add
cmc
mov
sbb
movsb
xchg
adc
pop
and
pop
aam
repnz
xchg
popf
push
push
inc
daa
pop
out
int
pusha
push
repnz
add
pop
bound
push
adc
fs
push
fadds
iret
addr16
and
inc
aas
jecxz
scas
in
movswl
lods
addl
stc
cmpsb
pop
stos
or
rolb
jge
or
xchg
pop
mov
stc
div
ret
or
xchg
test
add
push
inc
outsl
aaa
mov
add
stos
or
pop
inc
push
adc
hlt
lods
and
pushf
xor
xchg
mov
xchg
jmp
add
push
fwait
xchg
mov
aaa
xor
sbb
insb
pushf
mov
and
cmpsb
sub
pop
addb
or
xor
and
sbb
push
jl
scas
adc
adc
or
jno
or
add
insb
sahf
add
pushf
add
lcall
and
lock
cmpl
shll
outsb
add
and
mov
push
loopne
mov
cmp
rolb
jmp
add
push
cltd
popa
adc
pop
or
cwtl
lret
mov
push
mov
popa
mov
cltd
int3
inc
add
pusha
or
sub
fsubrl
and
test
xor
push
mov
xorl
push
hlt
add
add
pop
loope
mov
gs
cwtl
pop
and
mov
pop
dec
pop
adc
xor
cmp
cltd
mov
pop
popf
mov
adc
jmp
lods
dec
and
iret
lock
idiv
sar
stc
nop
cli
in
pusha
out
hlt
stc
xor
in
add
mov
shr
movsb
in
mov
out
hlt
in
inc
out
hlt
in
adc
in
loopne
hlt
jmp
cmp
jmp
add
pop
popa
pushf
add
lods
and
jmp
pushf
add
sub
mov
sbb
add
sub
aad
lahf
mov
add
or
repnz
cli
sub
mov
lahf
cmp
add
cmp
mov
sti
movsb
ds
fwait
jg
sub
mov
test
test
inc
sbb
and
inc
popf
add
xorb
fwait
test
movsb
sbb
rcrb
mov
aas
lcall
mov
mov
es
mov
fisubrl
mov
sbb
xchg
inc
cmpsl
add
mov
test
call
mov
sbb
xchg
dec
add
es
rorl
ja
outsb
test
xchg
sbb
dec
mov
fcoms
inc
add
inc
mov
xchg
je
cmp
mov
mov
mov
cmpsb
test
mov
fisubrl
mov
sbb
xchg
ja
insb
test
call
mov
sbb
xchg
mov
cmp
mov
xchg
ja
sub
mov
popl
cmp
mov
xchg
ja
sub
mov
popl
add
sbb
mov
movsb
sbb
rcrb
mov
aas
jg
xchg
mov
add
in
mov
shll
mov
xchg
mov
sbb
movsb
ds
cmpb
mov
add
enter
mov
test
inc
sbb
and
mov
daa
jg
xor
mov
imul
frstor
mov
arpl
dec
add
inc
mov
test
mov
dec
test
mov
mov
mov
sbb
lfs
lret
cmpsl
add
or
repnz
test
xchg
sbb
dec
mov
fcoms
shll
mov
mov
adc
sbb
inc
mov
lea
add
aam
jge
xchg
sbb
call
into
dec
inc
and
inc
pop
jno
mov
mov
adc
shrb
and
pop
sub
add
mov
add
cwtl
adc
mov
adc
ficompl
adc
popa
sahf
push
cmp
add
rclb
jb
mov
sbb
mov
sbb
nop
mov
jns
add
outsb
addr16
sub
fstpt
test
mov
cli
and
push
test
or
int3
lock
push
ret
cld
leave
imul
mov
popa
out
les
xlat
rorl
dec
dec
pushf
fsts
nop
cltd
or
movb
dec
gs
xchg
jo
out
mov
int3
pop
daa
lods
nop
cmp
mov
cmp
mov
mov
pop
add
mov
clc
mov
hlt
add
add
int
dec
cltd
std
fbstp
in
xlat
xchg
mov
lds
dec
add
test
adc
mov
lods
inc
cmpsb
mov
mov
cs
addr16
xchg
in
scas
sahf
pop
mov
into
pushf
loopne
jns
mov
cmp
iret
sbb
xor
out
out
mov
lret
rol
data16
out
loopne
rol
out
cmpsl
cld
les
cmp
popa
cmc
lds
fdivrl
xchg
push
xchg
shll
icebp
ljmp
fmul
sarb
cld
jmp
sahf
jecxz
inc
shlb
xchg
or
mov
add
mul
in
sahf
enter
cld
in
data16
dec
lods
inc
cmp
cli
in
outsl
loope
mov
dec
ret
pusha
pop
jge
or
xor
jg
sbb
rcrb
lret
xchg
push
push
popl
popa
lea
addr16
add
xor
sbb
jmp
into
fs
inc
push
cmpb
xchg
add
xchg
cmp
loopne
mov
cmp
aam
xorb
jbe
arpl
das
add
shrl
test
add
cli
into
arpl
idivl
out
fadds
adc
mov
imul
add
push
mov
sti
ficoms
sarb
push
push
icebp
shlb
fisttpl
nop
ss
dec
scas
pusha
js
lahf
pop
sbb
fmull
mov
add
ss
and
mov
imull
ret
or
add
aad
lods
mov
inc
outsl
outsb
imul
push
cli
jecxz
add
filds
mov
sub
mov
leave
rclb
testl
inc
adc
push
xchg
mov
jle
adc
addr16
in
adc
pusha
mov
cmpsl
pusha
add
lahf
cs
mov
scas
dec
lock
sbb
mov
and
xor
or
rorb
pop
out
fmul
cmp
aam
inc
nop
dec
sbb
inc
pusha
mov
mov
loop
stc
ret
jmp
repnz
sbb
add
sub
push
leave
push
rcll
xor
push
les
mull
cmc
lret
sbb
mov
add
add
mov
cmpb
sti
pop
out
sar
mov
mov
cld
mov
nop
push
aas
pusha
and
das
or
sbb
loope
iret
inc
add
adc
rolb
rorb
sbb
hlt
int3
or
filds
iret
push
push
pusha
loopne
xor
cmp
mov
jmp
lock
std
mov
dec
sub
leave
das
cltd
mov
or
pusha
in
stos
or
cmp
dec
bound
mov
jmp
mov
aad
lret
xor
mov
test
mov
mov
int3
pop
adc
or
pusha
mov
mov
lods
add
lret
jne
cmc
loope
shrl
addr16
int3
lea
push
mov
das
mov
push
inc
adc
mov
add
int3
or
push
adc
adc
cwtl
adc
adc
cmc
adc
in
jnp
ja
mov
dec
mov
iret
pushl
iret
rcr
jecxz
ret
fnstenv
iret
or
xchg
leave
push
mov
jnp
mov
mov
adc
leave
and
xchg
adc
add
push
repnz
adc
lcall
incb
nop
adc
out
ret
repnz
jl
aas
loop
mov
adc
int
leave
cmp
jp
int
pop
add
xor
mov
sbb
cmc
lds
sbb
mov
pusha
call
out
lds
fcompl
xchg
stc
out
jecxz
in
arpl
mov
shlb
movl
mov
mov
sub
les
les
idivl
push
push
push
pusha
mov
stos
popa
add
lock
int
cltd
iret
movsb
in
iret
pop
scas
cld
jmp
leave
clc
in
imul
jb
neg
ret
mov
test
enter
addb
jb
mov
nop
dec
daa
cmp
fdiv
shrl
das
sub
lock
nop
mov
imul
aad
xchg
xlat
mov
lods
cld
test
jbe
xor
ljmp
out
xlat
jns
cld
cmpsb
sbbb
add
mov
sti
mov
test
inc
cmc
cwtl
repz
and
mov
hlt
ljmp
fisubrl
push
leave
sub
shll
add
out
ret
icebp
cmc
nop
dec
loopne
fidivrl
mov
mov
or
push
idivl
mulb
arpl
add
out
adc
bound
das
add
shrl
nop
mov
lods
xor
std
aam
cmp
xlat
and
fdivrl
aam
std
and
xchg
sub
cmp
push
and
push
rol
out
xlat
sbb
add
addb
jmp
std
and
sbb
roll
movb
jg
mull
mov
mov
and
std
sub
in
jg
repnz
fistpll
js
test
lds
and
insl
sub
push
repnz
sub
xorb
repz
jmp
out
call
xchg
iret
fistl
mov
pop
sub
sbb
in
leave
lock
in
repnz
lods
std
push
rcrb
pop
xchg
sti
shlb
inc
test
subb
add
cld
clc
cli
negl
xor
out
out
xor
and
sbb
fsubl
rol
dec
mov
mov
aad
sti
loop
cltd
out
mov
jb
ljmp
jg
add
xchg
cli
jae
sbb
and
jge
mov
in
sar
nop
add
jmp
sti
shl
ljmp
aas
in
sbb
mov
fidivl
inc
add
out
test
nop
xchg
pop
enter
fadds
mov
cli
cmp
mov
lea
rcrl
jnp
xor
pusha
pop
push
add
xchg
sti
out
lcall
andb
int
mov
xor
scas
loop
mov
stos
mov
loope
mov
stc
xor
mov
dec
neg
imul
rcll
push
outsb
scas
add
and
sub
lea
xchg
dec
add
add
pop
lock
add
out
imul
int3
lods
in
mov
cmp
insl
cmpb
gs
pop
jle
and
mov
hlt
shlb
sub
inc
addr16
sub
push
test
mov
jbe
add
mov
in
mov
jecxz
cltd
xlat
mov
pop
push
add
add
test
jge
add
outsb
insl
pop
jle
sub
int
neg
addr16
pop
pop
add
cld
xlat
sbbb
jle
pop
xorl
xlat
push
mov
leave
add
pop
lahf
inc
pop
or
shll
orl
and
xchg
adc
add
enter
pop
and
adc
adc
or
pushl
and
loopne
xchg
or
inc
add
pop
mov
mov
jo
add
sbb
je
rorb
and
jp
jmp
mov
add
sbb
aad
leave
mov
ds
mov
xchg
lea
bound
pop
nop
mov
lock
aam
out
rclb
jecxz
add
mov
cmpsl
fwait
or
pop
ficoms
call
add
aas
je
nop
adc
add
and
fistl
fdivrs
clc
mov
loopne
adc
xlat
adc
out
fistl
les
or
add
ret
int3
add
lahf
aas
dec
cmp
inc
test
add
aam
sti
jecxz
cli
add
clc
mov
adc
lret
cmpl
cltd
out
fcmovu
add
stos
lahf
or
lods
hlt
cmp
dec
adc
cli
out
cltd
ret
push
sub
mov
xchg
andb
cmc
add
or
ftst
out
xchg
mov
jp
push
push
nop
sti
or
not
push
cmp
roll
mov
sbb
mov
pop
xchg
sbb
test
fcomps
xor
add
jb
nop
lock
adcl
neg
imul
jbe
movsl
add
frstor
xchg
or
adc
adc
sub
mov
jl
pop
ret
pusha
shl
or
jo
sub
popa
sbb
add
das
nop
mov
fbstp
fisttpll
cld
call
sti
mov
cmp
and
mov
mov
popa
pop
ret
or
lds
and
mov
and
ljmp
lods
or
mov
and
sub
xchg
movsl
nop
loopne
sbb
loopne
jns
xlat
add
dec
sti
jmp
inc
jne
mov
shll
mov
and
push
cmpb
popa
add
adcb
mov
inc
aaa
push
nop
cmp
andl
loope
push
lcall
fcoms
jmp
scas
addr16
popa
mov
cld
flds
xchg
cmp
mov
push
out
ljmp
es
nop
inc
xchg
adc
sub
int3
cltd
decb
mov
in
aaa
jno
cmpsb
inc
xchg
call
mov
inc
xchg
dec
push
test
inc
xchg
loope
adc
fwait
add
mov
stc
jecxz
enter
and
add
dec
sbb
and
pop
jne,pn
daa
nop
mov
call
dec
push
pop
push
in
or
test
mov
fadds
mov
dec
add
int
ret
mov
stos
mov
jo
push
cltd
push
fcomps
fcoms
pop
mov
jb
test
jno
mov
adc
pop
xchg
cmp
mov
sti
and
cli
mov
das
bound
mov
dec
xchg
pop
sub
in
enter
push
lods
int
xor
mov
mov
or
fmuls
faddl
xor
adc
clc
sbbl
push
adc
pop
cld
pop
push
psubusb
mov
mov
gs
or
lds
je
mov
movsl
in
adc
lret
das
inc
sub
rorb
pop
clc
lds
sbb
xchg
or
int3
xchg
push
push
inc
mov
jno
cmpsl
nop
dec
shl
xchg
fsubrl
mov
shr
roll
xchg
jg
ja
mov
xchg
adc
adc
push
or
xor
sub
lret
push
dec
pop
iret
inc
popa
pop
repnz
dec
sbb
jmp
popf
cmp
nop
or
jge
or
out
dec
imul
cltd
fidivs
aaa
inc
pop
sti
jecxz
psllq
test
mov
fcmovnb
lds
mov
pop
stc
mov
and
test
xor
ljmp
xor
scas
aas
sti
dec
fst
pop
cmc
loop
fdivrl
lret
xchg
xchg
fs
cli
pop
sarl
mov
nop
mov
inc
jo
ds
call
sub
adc
pop
push
sub
adc
nopl
cmc
repnz
out
fcoml
jno
dec
add
adc
out
jecxz
sbb
scas
sar
mov
hlt
xlat
clc
call
stos
es
into
add
xchg
add
mov
jae
es
cld
mov
sub
dec
xchg
nop
cmp
ret
mov
mov
adc
mov
pop
cmp
hlt
lret
fsts
nop
loop
loopne
call
ret
pushl
leave
jnp
ror
and
mov
jns
aas
shlb
xchg
and
xchg
push
inc
rorb
imul
dec
adc
inc
xchg
jae
and
js
dec
and
int3
mov
adcb
add
lock
add
into
rorl
adc
jmp
enter
xor
das
inc
jmp
int3
nop
xchg
fstpt
shll
jmp
ret
test
stos
mov
jl
inc
push
adc
cmp
xor
xchg
sub
and
les
pop
cmc
lds
test
cmpb
insb
imul
inc
cli
ljmp
mov
repz
jmp
out
jg
cmp
leave
adc
les
daa
xlat
mov
orb
and
movsb
adc
xchg
fdivrs
rclb
sub
adc
mov
sub
mov
sbb
sbb
push
xchg
xchg
add
xor
scas
decb
ljmp
mov
std
pop
fsubs
cli
in
stc
out
int
inc
cltd
jmp
and
aam
pop
adc
xchg
loope
and
mov
je
mov
int3
mov
mov
inc
mov
fnstcw
and
shll
enter
adc
clc
pushf
mov
add
jmp
fldt
xchg
ret
das
mov
pushf
shrb
std
loopne
sbb
out
leave
cmc
xlat
add
in
jle
jmp
out
fisubs
and
and
xchg
sub
enter
and
sbbl
test
adc
nop
cmp
decl
es
xorb
xchg
out
add
or
jo
nop
mov
mov
in
fdivr
into
movsb
push
cmpsl
cld
iret
jecxz
cmp
ror
cmp
shlb
repnz
jb
cltd
inc
out
dec
incl
loopne
lcall
lret
inc
cltd
popa
es
int3
sarb
and
xchg
clc
jl
dec
xchg
xchg
ss
cmp
movsb
mov
lret
sbb
xchg
inc
sbbb
out
pop
add
mov
mov
ss
fisubrs
shrl
loop
popa
push
mov
jge
std
stc
push
cli
lock
jb
lret
and
mov
xchg
and
leave
std
jmp
inc
mov
repnz
xor
cmp
int3
clc
mov
sub
popf
pop
rclb
dec
lock
sbb
push
fistl
mov
test
stos
std
call
fldenv
jmp
adc
insl
xor
pop
lahf
mov
aad
inc
movsl
mov
add
cld
mov
pop
xchg
and
inc
lea
mov
cltd
in
and
or
cld
lock
test
mov
mov
hlt
lds
adc
rcrb
xchg
leave
int3
sahf
push
scas
rcl
cltd
sub
inc
xchg
in
ss
pop
dec
fidivrl
and
xchg
gs
mov
adc
push
stos
adc
sbb
negl
sub
jp
push
xchg
fs
leave
cld
pop
adc
shl
mov
add
stc
cmc
into
and
mov
xor
rcrb
mov
gs
pop
std
add
mov
pop
int
xchg
add
fdivrl
xchg
aam
sub
pushf
push
pushf
roll
inc
nop
push
popa
dec
push
iret
lret
aas
add
data16
nop
mov
stos
add
lock
fcoml
fcmove
in
xchg
xlat
movsb
mov
inc
shlb
mov
popa
shrl
shlb
pop
cmpsb
std
fildll
clc
repnz
xchg
cwtl
jle
fistl
dec
std
inc
add
xchg
cld
ret
test
shlb
pusha
or
add
cmp
sbb
jbe
nop
jo
cld
push
repz
clc
test
in
ret
mov
mov
shr
popa
fiadds
cltd
jecxz
jp
rcl
sbb
mov
in
pop
roll
xchg
cld
in
mov
fcomip
inc
aas
out
push
jb
iret
movsb
neg
mov
xlat
stos
std
rolb
cld
pop
cli
jne
shll
mov
icebp
shlb
notb
mov
shrl
orl
out
sub
fcoml
mov
lret
push
sbb
std
fidivl
js
mov
mov
and
mov
enter
mov
movsb
popl
cli
into
mov
leave
lea
mov
hlt
lret
lret
mov
nop
jl
xchg
jb
pushf
sti
notl
idivb
hlt
out
xchg
and
out
xchg
jmp
loop
test
fmuls
adc
dec
pop
lods
push
xchg
rol
sub
mov
sub
push
scas
sti
ljmp
in
int
pusha
and
in
call
mov
lcall
mov
ret
je
lds
or
adc
dec
stos
lock
pop
xor
cmpsl
sti
ds
stc
pop
imul
push
xlat
div
xchg
inc
daa
xchg
test
and
xlat
ret
add
out
sarl
fwait
mov
loopne
int
loope
mov
ljmp
in
lea
fcom
sub
lahf
clc
lret
cli
je
aad
mov
mov
sarb
movsb
pushf
add
fsubrs
int
mov
nop
ret
mov
test
out
jmp
xchg
dec
fbld
and
jae
mov
inc
xchg
cltd
shll
sub
cwtl
jmp
leave
test
ret
orb
mov
xchg
int3
mov
fpatan
cmp
xchg
add
cmpsl
sti
icebp
loop
mov
pop
xor
in
loopne
cld
stos
inc
xchg
xchg
hlt
rolb
aas
mov
adc
jl
and
mov
insl
les
pusha
dec
mov
push
cltd
loopne
stc
cmc
and
fiadds
cmc
loope
shll
cli
in
int3
lods
test
xor
loopne
sbbb
inc
jne
mov
test
mov
jge
ret
jb
rcrl
jae
sub
pop
add
cmc
fiadds
nop
neg
outsb
rorb
mov
in
roll
popf
jnp
xor
mov
test
int
test
test
mov
or
ljmp
inc
cwtl
cmc
lock
es
pop
movl
mov
subb
pop
mov
xor
push
not
jae
sub
out
mov
shrl
cmp
jle
inc
cmpsl
pushf
jo
leave
mov
and
cwtl
stos
add
test
and
mov
jae
fmuls
pop
stos
mov
sbb
repnz
dec
mov
mov
std
test
xchg
addr16
lret
xor
ja
movsb
mov
jg
out
push
ret
sub
roll
or
into
decb
jns
and
lea
jle
jge
iret
pop
add
push
into
mov
xchg
cwtl
dec
lods
xor
int3
xchg
cwtl
add
out
rorl
mov
hlt
add
ss
adcb
insl
cmp
or
xchg
push
lds
or
addr16
ja
out
ret
andl
mov
pop
lock
ja
clc
fidivrs
xor
aam
lock
jecxz
nop
mov
dec
xchg
sbb
add
test
mov
and
pusha
sbb
rclb
dec
adc
fldenv
xor
sbbb
daa
out
mov
jno
test
jae
mov
xor
enter
push
mov
and
les
add
ret
ljmp
aas
mov
adc
js
jo
pop
and
add
addr16
jae
ret
xchg
or
inc
add
test
ret
enter
jl
in
jge
sbb
femms
sub
adc
nop
xchg
clc
or
incb
inc
cmp
clc
lcall
add
or
cld
add
or
inc
pop
jle
fnstsw
jp
mov
xchg
cld
xorb
sbb
add
adc
push
add
jno
mov
dec
add
mov
out
inc
or
cmovns
adc
testb
adc
inc
mov
push
or
add
sub
andb
addb
adc
movups
adc
lock
jo
add
lods
and
rcll
scas
inc
jo
stc
cltd
fwait
push
lahf
or
mov
or
adc
mov
jmp
ret
or
or
dec
pop
xchg
add
add
xchg
nop
add
fimull
rolb
xchg
call
jo
inc
jnp
mov
lock
in
nop
rolb
cld
imull
add
xchg
adc
fwait
test
rorb
movsl
push
jne
outsb
adc
movsl
or
sbb
sub
mov
sbbb
sbb
add
xchg
dec
and
es
loopne
test
add
pop
sbb
loopne
loopne
adc
mov
push
add
add
pop
subb
movsl
push
arpl
inc
sbbb
nop
cli
push
sbb
pop
fmul
in
push
ja
push
cmpsb
sub
cmp
inc
pop
adc
pop
push
push
sub
pop
sbb
adc
and
push
xchg
and
push
push
jge
cwtl
fsubr
insb
inc
mov
push
mov
adc
push
pop
test
loope
adcb
and
add
aad
and
inc
enter
inc
loope
push
mov
je
dec
dec
inc
cs
mov
dec
orb
inc
fwait
adc
out
dec
push
scas
xor
add
dec
adc
inc
push
add
pop
inc
push
cmp
sbb
push
add
or
jge
or
das
lcall
stos
jno
push
enter
andb
push
orb
jge
movsb
or
push
nop
testb
sbb
xor
mov
adc
movsb
cmp
push
addl
lcall
rolb
pop
or
nop
sub
enter
xor
orb
or
aad
xchg
or
xchg
and
add
pop
xorb
sbb
mov
outsl
adc
sbb
sbb
lcall
and
lock
sub
cmp
cwtl
repz
push
sub
mov
xor
rorl
inc
and
jns
cmp
cmp
je
sub
data16
xor
loopne
test
inc
bound
addr16
xchg
sub
movl
ficomps
pop
add
sbbl
cmp
mov
push
mov
faddl
add
ss
jb
add
add
sbb
nop
rolb
dec
or
pop
loope
add
dec
pop
jo
sub
mov
xchg
insl
enter
dec
jns
fcomps
xor
sub
jo
jo
jo
inc
or
push
cmp
adc
sub
and
aaa
arpl
add
xor
mov
clc
adcl
gs
jmp
or
adc
out
push
adc
cwtl
mov
cmpsb
cmp
mov
movsb
mov
inc
adc
ret
test
push
andb
push
fimull
testl
add
mov
adc
ss
out
addr16
or
in
insl
push
sbb
sbb
add
mov
push
adc
addr16
dec
inc
or
adc
adc
adc
mov
add
xor
sub
xor
orl
dec
out
add
add
push
and
andl
or
or
inc
adc
mov
push
loopne
popa
adcb
xor
add
push
cmp
mov
add
rclb
xchg
insl
repz
test
and
mov
push
cmp
enter
or
imul
lea
push
sub
push
movsl
hlt
inc
rcrl
inc
addl
push
adc
jns
out
clc
sbb
and
loopne
test
adc
mov
adc
andb
push
mov
ja
or
adc
ret
xchg
sbb
popa
subb
sub
push
into
inc
or
xor
jnp
inc
xchg
mov
sub
sub
xchg
jp
shlb
sbb
xor
shl
push
xchg
test
cmp
imul
cmp
jb
dec
sbb
cvttps2pi
pop
in
dec
xorb
lret
inc
dec
push
push
andb
adc
pop
or
movsb
and
call
and
push
or
pop
add
test
jb
sub
add
test
orb
les
and
loop
inc
xchg
sbb
sub
cmp
adc
add
stos
fwait
sbb
add
xor
nop
jmp
in
lret
push
adc
mov
dec
push
subb
cmovs
mov
pop
mov
mov
test
pop
mov
add
testb
ficompl
cmp
je
sbb
dec
sti
insl
mov
inc
sub
push
inc
cs
add
push
lahf
movb
mov
sbb
sub
jecxz
sub
imul
nop
cltd
orb
mov
loop
movsb
jo
cmp
pop
imul
and
xor
add
clc
jo
pop
je
shll
jo
pushf
push
fsubrs
pop
sub
add
cmp
jo
dec
sub
es
push
xor
cmpsb
loopne
xor
pop
jo
push
adc
push
shlb
jns
push
pop
cmp
pop
mov
dec
pop
orl
mov
mov
xchg
mov
or
mov
sbb
rcr
cmp
add
mov
dec
leave
testb
mov
movsb
inc
push
jecxz
subl
xchg
mov
sub
fisubs
pushf
or
push
mov
nop
and
lahf
adc
int
add
xchg
in
xor
mov
dec
push
loopne
sub
mov
hlt
pushf
clc
push
and
push
sbb
cmp
dec
mov
in
and
push
cmp
and
xchg
push
enter
pop
inc
pop
mov
shlb
push
outsb
lret
nop
movsb
scas
push
movsb
lods
sub
pop
movsb
mov
xorb
cmp
xor
andl
pop
add
xchg
or
imul
mov
and
pop
rcrl
fs
adc
jle
adc
or
je
sbb
xchg
ljmp
int
pop
push
dec
outsb
adc
insb
loop
sbb
push
enter
clc
adc
daa
aaa
xor
adc
dec
or
ds
test
adc
push
je
mov
adc
aam
xchg
test
enter
or
dec
mov
dec
mov
fsts
cmovp
and
or
test
bound
adc
mov
push
xchg
and
sub
push
jecxz
andb
and
leave
jae
imul
dec
sbb
dec
cmp
das
xchg
sbb
adc
nop
cmc
push
cli
xor
add
addr16
dec
pushf
inc
adc
pop
pop
push
jo
dec
xchg
int3
and
xchg
test
cmp
inc
and
adc
fsub
and
cmp
aam
dec
push
outsl
out
enter
sbb
dec
adc
add
imul
mov
rclb
add
xor
jne
inc
push
in
mulb
negb
ds
sub
xchg
or
mov
fadds
xchg
pusha
sub
dec
std
popf
adc
fimull
mov
inc
cmp
test
sub
inc
enter
xchg
js
push
cmp
adc
xchg
adc
dec
push
and
repnz
testl
mov
jo
mov
les
jmp
sbb
jle
pop
xchg
adc
test
inc
adc
repz
vphadduwq
cmpsb
sub
jbe
push
test
sub
push
sub
add
mov
nop
dec
push
adc
test
and
es
cmp
mov
adc
cmp
cmp
dec
jne
fsubrl
je
and
add
movups
xchg
or
or
sub
adc
orl
mov
sbb
jb
mov
iret
push
arpl
rcll
push
fsubrs
xchg
mov
sub
push
rorl
andb
repnz
or
dec
inc
push
mov
cmp
add
sbb
adc
xor
jecxz
in
orb
adc
fnstsw
mov
mov
or
cmp
mov
or
test
adc
xchg
xor
add
xchg
js
sahf
and
jbe,pt
movsl
push
mov
jae,pt
adc
nop
and
clc
gs
dec
jbe
pop
arpl
sub
adc
mov
push
sbb
dec
dec
mov
jbe
jle
push
test
hlt
pusha
out
adc
pop
imul
pop
cli
rorb
pop
es
cmpsb
sub
jp
orb
mov
bound
xchg
dec
pop
in
jae
sbb
nop
adc
lcall
push
adc
push
shrl
dec
pop
pop
push
inc
push
adc
pop
loopne
dec
mov
push
push
les
push
int3
cmp
fmul
mov
sub
mov
push
prefetcht0
cmp
and
or
aas
push
or
jb
push
and
jns
gs
sub
sub
mov
lds
inc
ss
ss
adc
pop
popa
mov
push
pusha
sub
call
or
jle
or
or
push
mov
dec
push
cmp
push
and
mov
test
leave
lods
and
adc
sub
dec
mov
sbb
mov
push
inc
gs
or
adc
inc
inc
adc
data16
or
sub
orb
rolb
xor
push
push
dec
push
inc
adc
shlb
dec
pusha
mov
push
pop
adc
mov
ljmp
xchg
jl
jl
xchg
pop
xchg
inc
data16
loope
or
sbb
adc
push
or
jp
pop
rcrb
decl
jb
push
notl
push
adc
pop
or
dec
dec
dec
add
sbb
push
loop
out
enter
jl
jo
nop
fs
push
or
inc
mov
or
loopne
sbb
lahf
and
push
jno
shrb
push
pop
insb
es
add
pop
cltd
push
add
jo
push
pop
add
or
pop
add
mov
loop
sbb
rclb
nop
xchg
iret
dec
test
psubsw
push
mov
jb
pusha
movsb
and
jp
sub
aam
jbe
xchg
or
pop
push
push
dec
dec
cwtl
je
or
test
nop
adc
push
pop
cmp
push
adc
push
pop
sbb
inc
or
pop
clc
bound
sub
pusha
andb
inc
or
jb
aad
xchg
adc
cwtl
mov
dec
aas
jp
jp
and
nop
mov
xchg
xchg
dec
sub
lret
lods
xchg
push
maxps
mov
sbb
xchg
xor
sbb
adc
or
dec
and
lods
rcll
loopne
or
sub
loopne
xchg
inc
and
push
and
and
stos
cs
and
and
sahf
sbbb
adc
and
sbb
push
push
push
sub
xor
push
fs
jae
add
inc
adc
scas
pop
mov
sub
add
pop
pushf
or
dec
push
rorb
and
or
add
add
stos
jbe
or
or
add
pop
pop
sub
js
pop
imul
mov
sbb
xor
jo
xor
mov
mov
lods
mov
in
scas
sub
mov
cmpsb
mov
inc
ficomps
inc
mov
data16
in
xchg
jno
sub
inc
fwait
or
pop
mov
movsb
push
and
push
test
pop
jae
inc
cmp
das
sub
addl
test
addb
loopne
push
xor
pop
mov
and
xor
int3
popa
dec
cmp
sub
mov
add
jle
scas
aaa
lret
adc
pop
in
push
in
clc
mov
inc
imul
movsb
dec
dec
push
lock
dec
mov
cmpsl
and
xchg
sub
push
test
out
pushf
inc
adc
cmp
orb
jne
dec
push
test
pop
movsl
js
cmp
push
xor
jp
or
sbb
sub
lea
push
or
pop
mov
add
lret
insl
outsb
loope
loop
cmp
cmp
js
add
gs
imul
xor
pop
pushl
addr16
push
push
inc
xor
popa
cld
fs
int3
inc
gs
sti
mov
or
mov
jns
pushl
mov
jne
into
cmp
sbb
xor
cmp
cmp
jge
in
jp
fbld
jbe,pn
push
and
popa
outsb
imul
jno
dec
push
adc
xchg
imul
cwtl
out
inc
cmp
inc
rorb
push
mov
push
test
push
ja
or
xor
outsl
inc
popa
insl
inc
imul
jo
leave
jne
jae
cld
js
cld
das
movsb
sbb
add
jo
or
cmp
sub
dec
gs
and
inc
mov
jns
adc
rolb
inc
loopne
das
mov
test
dec
inc
dec
or
push
inc
fs
ja
mov
and
subl
jae
xor
or
ss
inc
add
lret
cld
rcrb
jne
mov
ljmp
data16
fs
sub
insb
cmpsb
push
addr16
repnz
sahf
inc
lods
lret
int3
lcall
push
popa
and
xchg
clc
add
add
or
xor
mov
add
inc
add
lret
mov
int3
sbb
mov
out
shr
imul
pop
pop
mov
pop
push
cltd
adc
push
inc
add
push
push
add
inc
xor
xor
inc
dec
cmp
movsl
push
sbb
bound
or
add
push
popf
sbb
cmpsb
or
dec
or
mov
inc
adc
or
int3
adc
xor
pop
sub
jo
cwtl
popa
or
inc
cltd
in
mov
cltd
or
mov
adc
xor
aaa
mov
les
push
orl
or
pop
mov
mov
cwtl
sub
cmp
aaa
add
icebp
sti
sbb
xor
jno
cltd
dec
dec
pop
negb
cltd
or
and
rcrl
or
inc
sub
dec
cwtl
gs
mov
pushf
dec
lods
xchg
mov
repz
adc
int3
xor
xor
xor
leave
in
adc
and
xor
adc
mov
aam
hlt
xchg
sti
cltd
or
sbb
mov
dec
lods
cltd
arpl
pusha
cltd
or
cmpsb
push
call
or
mov
sbb
cwtl
xor
imul
pop
adc
sub
sbb
cmpsb
int3
xchg
cmp
or
mov
sub
push
push
jo
add
popa
xor
jl
push
sbb
sarl
push
das
pop
testb
data16
orb
adc
popa
stc
xchg
icebp
stc
xor
dec
mov
xchg
jno
xorb
or
adc
sbb
adc
adc
xor
or
adc
cvtpi2ps
data16
and
or
int3
imul
push
mov
and
sub
test
in
std
dec
enter
test
mov
bound
jo
push
inc
sub
inc
loope
mov
mov
int3
fstps
call
int3
cltd
dec
mov
cs
in
pop
mov
push
stc
dec
popa
inc
stos
pushl
icebp
sarl
fnstcw
or
and
clc
adc
sub
adc
add
inc
add
xchg
icebp
cli
jns
mov
popa
and
dec
mov
shll
pop
jns
sbb
or
pushw
and
das
int3
jmp
sbb
sub
sub
jmp
mov
outsb
shll
adc
dec
fmull
or
xchg
into
push
sub
or
insb
adc
rolb
sub
cld
push
fs
sub
inc
mov
cli
jno
push
and
jle
mov
inc
shlb
pop
mov
xor
dec
xor
mov
enter
jb
and
sub
jno
out
ja
push
add
inc
fwait
int3
cmp
push
movsb
and
sub
rcrb
in
adc
data16
sub
push
test
sub
imul
leave
shlb
push
xchg
xchg
dec
adcl
add
sbb
cld
jmp
or
int3
and
or
leave
outsb
jns
int3
adc
xor
int3
or
iret
int3
jno
sub
xchg
sub
push
add
push
inc
push
push
sbb
fs
fs
je
jb
imul
pop
inc
pop
lds
xor
lock
outsl
je
cmp
or
addr16
aad
ret
xchg
popa
outsl
and
cmpsb
jo
sbb
jb
push
cmp
repz
std
mov
scas
xor
pop
pop
shlb
cmpsl
or
jo
and
fsub
ret
inc
js
inc
mulb
insl
push
dec
xor
jae
cld
flds
pop
mov
insb
aam
ds
xor
outsb
inc
pop
test
in
dec
lods
jb
jae
mov
mov
mov
roll
lds
or
sbb
pop
xchg
imul
outsl
insl
jecxz
repnz
or
insl
push
jo
and
ret
pop
imul
sub
rcr
xchg
mov
xor
xchg
data16
jl
xchg
add
je
mov
cmp
push
adc
sahf
push
pusha
repz
jo
stos
xorb
jb
in
xchg
jmp
fmulp
sub
dec
inc
push
dec
int3
dec
xor
mov
dec
sarl
gs
jb
adc
mov
jbe
rcll
insb
inc
shrl
push
push
and
sahf
push
icebp
pop
inc
outsl
in
push
cwtl
sub
dec
bound
imul
insl
mov
dec
xchg
or
testl
xor
inc
sub
push
mov
mov
inc
adc
inc
cld
out
pop
dec
adcl
adc
and
xor
popf
dec
aam
ss
fsub
aad
sub
dec
adc
aad
les
mov
jns
inc
dec
or
inc
push
push
call
outsl
push
jns
sub
rorl
and
bound
and
inc
subb
sbb
ja
push
lret
dec
shll
jno
add
or
xor
mov
inc
outsb
stos
push
adc
test
std
xchg
out
sbb
inc
pop
jmp
das
addr16
push
dec
push
sbb
into
lret
call
inc
jne
dec
or
inc
aaa
sub
pop
bound
xor
popa
add
inc
outsl
js
cs
jo
sti
mov
sar
push
clc
dec
sub
mov
push
add
inc
push
dec
arpl
pop
adc
scas
adc
outsb
ja
cmpsb
pop
adc
insb
shrb
inc
push
outsl
xor
inc
call
inc
xchg
sub
sub
mov
sahf
mov
inc
push
sbb
xchg
xchg
jg
push
jnp
fstpt
mov
mov
loope
xor
es
xchg
push
push
jecxz
fwait
inc
push
lea
or
test
push
mov
add
inc
dec
xchg
inc
test
in
sub
adc
inc
dec
jbe
addr16
push
or
inc
push
adc
pop
xchg
xor
aas
cmc
mov
inc
push
outsl
cmp
es
imul
stos
into
insb
push
lret
and
or
xchg
test
jo
scas
pusha
out
pop
jb
repnz
xor
testb
ss
jne
inc
sub
xchg
or
dec
mov
sub
fdivs
test
sbbb
adc
flds
adc
inc
btr
adc
xorb
dec
dec
in
movsb
xchg
dec
xor
insl
cmp
inc
icebp
fucomi
shr
jle
ficoml
lock
subb
jbe
xor
je
and
xor
cmp
pop
jae
adc
xor
or
xchg
adc
or
mov
faddl
push
push
and
mov
in
push
inc
sahf
jae
pop
mulb
jbe
inc
inc
xchg
pop
pop
adc
xor
or
xor
ss
nop
call
xchg
push
and
fs
push
dec
loop
and
xor
sub
xlat
or
jb
xor
pop
inc
adc
pop
pop
jmp
fiadds
pop
aaa
dec
dec
push
cli
dec
and
or
call
out
push
mov
pop
push
push
push
cli
pop
inc
inc
push
inc
ljmp
mov
daa
adc
sbb
jo
outsl
scas
popa
rol
dec
xchg
mov
cltd
or
add
add
mov
add
add
add
and
add
pusha
add
addb
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
push
add
add
les
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
add
add
and
add
add
add
add
add
add
add
add
add
add
add
add
and
add
add
add
add
jl
or
test
adc
xchg
add
mov
adc
add
aam
add
leave
adc
popl
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
mov
pop
add
xlat
inc
add
into
arpl
idivl
adc
out
fcoms
add
mov
or
imul
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
mov
sbb
hlt
aad
add
ficoms
add
mov
adc
cmc
push
add
rorb
add
fisttpl
add
incl
add
incl
push
dec
add
add
incl
add
incl
add
incl
add
incl
mov
fdivl
cli
out
add
mov
add
mov
add
mov
adc
clc
rorb
test
incl
add
incl
out
push
add
inc
add
add
add
incl
add
incl
add
incl
add
incl
mov
jecxz
add
filds
add
mov
add
mov
add
mov
sbb
clc
rclb
add
incl
add
incl
test
inc
add
incl
push
add
jp
add
add
add
incl
add
incl
add
incl
add
incl
add
incl
add
incl
pusha
mov
add
loopne
add
rcrb
fisubrl
add
mov
add
mov
add
mov
sbb
add
incl
add
incl
add
incl
add
incl
add
incl
test
add
rorb
add
add
lret
add
incl
add
incl
add
incl
add
incl
add
add
inc
nop
dec
add
out
add
sub
mov
loop
add
ret
std
jmp
add
mov
add
mov
add
mov
add
mov
add
mov
incl
add
incl
clc
rclb
clc
rcll
add
incl
clc
ret
or
clc
les
add
les
add
lret
add
incl
add
incl
ret
add
push
add
add
incl
add
incl
add
incl
add
incl
mov
jecxz
add
scas
sub
sti
out
roll
mov
mov
pusha
add
mov
add
mov
add
incl
add
incl
clc
mov
sbb
clc
rclb
loope
inc
add
ret
inc
add
ret
or
add
incl
add
incl
hlt
int3
or
xlat
filds
push
add
incl
add
incl
add
incl
add
incl
mov
in
add
pushf
push
add
jmp
mov
inc
xchg
inc
jp
std
mov
pop
add
incl
add
incl
stc
mov
add
incl
add
incl
clc
rclb
add
incl
lock
add
incl
add
incl
hlt
lret
add
incl
repnz
add
incl
add
incl
add
add
cmp
jmp
sub
mov
out
add
mov
xchg
jmp
add
lret
dec
mov
inc
test
mov
incl
add
incl
add
incl
add
incl
add
incl
add
incl
clc
mov
incl
add
incl
add
incl
add
incl
add
incl
add
incl
cmc
leave
or
add
incl
add
incl
add
incl
bound
add
mov
jmp
inc
add
lret
jne
std
cmc
loope
call
test
dec
sahf
add
lret
xchg
add
enter
ret
std
mov
pusha
add
mov
add
mov
add
mov
add
mov
es
mov
sbb
clc
rcll
clc
ret
clc
ret
cmc
adc
out
adc
jnp
add
mov
jmp
add
mov
add
shrl
cmc
fadds
jmp
enter
mov
call
test
add
lret
inc
mov
mov
insl
add
mov
add
mov
add
mov
add
mov
sub
add
mov
sbb
clc
rcll
repnz
adc
mov
add
add
aad
mov
jbe
cld
out
ret
add
icebp
in
jmp
movb
fidivrs
add
shrl
add
enter
ret
xchg
mov
insl
add
mov
add
mov
add
mov
add
mov
daa
add
mov
sbb
cmc
lds
add
sbb
ret
mov
add
fildl
inc
lea
inc
mov
std
fsubrl
add
stc
out
add
lock
jmp
int
fnstsw
call
cmpsl
add
int
add
xchg
add
ret
xchg
std
mov
imul
sti
mov
add
mov
sub
clc
mov
and
idivl
adc
push
push
add
mov
lock
dec
mov
add
shlb
cld
jmp
roll
std
clc
in
imul
add
in
fildl
ffreep
add
fdivs
dec
pushf
add
enter
ret
std
mov
pop
add
mov
add
mov
cs
shrl
clc
mov
pop
add
add
add
repz
call
mov
call
mov
add
xlat
mov
call
lods
add
aad
add
add
repz
std
clc
out
repz
ffreep
add
xlat
mov
shlb
add
mov
std
mov
arpl
sti
mov
ds
shlb
mov
and
lea
add
mov
hlt
ljmp
add
fmulp
add
ffree
add
fidivrl
add
shrl
add
rcrl
add
out
ret
add
cmc
ljmp
fidivrl
add
shll
add
mov
gs
mov
inc
add
mov
xor
verr
add
mov
imul
add
loop
add
jecxz
add
jecxz
add
loop
add
add
fcmovb
add
mov
call
lods
add
iret
cmpsb
add
int
add
aam
add
cmc
xlat
add
in
fldl
jmp
leave
add
fdivrl
add
aam
add
int
add
ret
sti
mov
push
add
mov
add
mov
sbb
push
add
add
stc
repnz
in
jecxz
jmp
add
jmp
fiaddl
jmp
roll
add
fadd
add
aad
add
shll
shrl
std
stc
in
add
cmc
in
add
ljmp
add
iret
lcall
lds
sti
mov
push
add
int3
sub
lahf
cwtl
pop
add
cli
cmc
add
repz
add
bnd
out
call
add
call
aam
fcmovne
add
xlat
ret
add
mov
add
aad
add
mov
cld
in
add
lock
cld
neg
add
clc
out
add
lock
jecxz
add
fisubrl
add
iret
lea
cld
lds
add
lds
test
add
add
neg
add
cld
clc
add
cli
testl
push
in
add
out
out
jmp
out
add
cmc
out
add
jmp
lret
xlat
roll
mov
add
into
stos
add
aad
add
loop
add
out
mov
add
imul
add
ljmp
std
aam
add
int3
xchg
add
jae
lock
sbb
arpl
add
pop
add
in
roll
hlt
add
stc
jmp
sti
clc
add
div
add
repz
add
cmc
add
in
add
jmp
add
cmc
fiaddl
repz
jmp
fildl
fadd
add
shlb
add
mov
test
sti
lret
cli
fisttps
add
repz
hlt
jmp
in
add
rcrl
add
add
add
push
add
rclb
cld
repz
add
stc
jmp
sti
out
rolb
xchg
dec
add
mov
pushf
add
out
mov
add
out
out
fmul
add
enter
mov
jg
std
mov
add
mov
dec
add
fisubrl
stc
jecxz
add
out
roll
loopne
add
add
add
and
add
int
add
in
add
add
add
add
jbe
pop
add
rolb
add
out
mov
add
in
add
enter
mov
add
mov
add
into
sub
outsb
gs
add
and
fnstenv
xor
mov
adc
addr16
pop
pop
adc
addr16
test
add
aam
add
loop
add
in
mov
std
out
fildl
std
xlat
mov
add
add
add
add
add
test
add
add
add
pop
add
sub
mov
inc
add
int
add
fldenv
repz
sub
pop
pop
add
pop
pop
or
jle
add
add
ret
inc
addr16
rolb
lahf
rolb
lahf
rolb
lahf
rolb
add
add
rolb
sbb
add
adc
add
add
add
pop
rolb
pop
rolb
pop
rolb
xadd
add
rolb
xadd
add
rolb
pop
rolb
pop
rolb
pop
rolb
add
add
add
add
add
or
add
lahf
add
jmp
aas
cld
aas
incl
