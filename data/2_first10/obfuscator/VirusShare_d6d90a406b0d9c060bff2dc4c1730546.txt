mov
call
pushf
mov
movl
mov
pushf
mov
mov
pushf
lea
jmp
jle
pusha
movw
mov
pushf
movb
pushf
lea
jmp
cmp
mov
pusha
add
pushf
push
pushl
mov
mov
push
lea
jmp
jmp
call
btr
bt
setb
and
mov
test
neg
movsbw
mov
call
xor
shr
add
and
bt
sar
or
not
jmp
pusha
pushf
popl
call
jmp
push
mov
jmp
pushf
mov
pushf
push
lea
jmp
pushf
push
jmp
pusha
mov
call
mov
cmp
test
bswap
bt
mov
add
jmp
mov
sub
mov
pushf
mov
push
pushl
pushl
pushl
lea
jmp
lea
jo
push
dec
cmc
push
pushf
jmp
sub
jmp
pushf
movw
pushf
popl
call
pushf
popl
pushf
pushf
pushf
pushl
popl
push
movb
lea
jmp
movl
call
pusha
pusha
mov
call
call
lea
je
bt
call
mov
push
movb
lea
jmp
pushl
popl
movl
pushf
pushf
lea
jmp
call
call
bsf
sub
call
mov
pusha
lea
jmp
mov
pushf
jmp
jmp
rcr
adc
not
mov
clc
jmp
bswap
rol
or
push
sar
not
sub
setp
shr
add
pop
stc
neg
movzbl
movsbl
pusha
rcl
rcr
lea
call
add
jmp
jmp
jmp
bsr
mov
test
mov
cmp
mov
mov
cmc
add
cmp
pusha
stc
jmp
mov
mov
push
mov
push
sete
mov
pusha
mov
pusha
mov
xchg
lea
setno
movsbw
mov
lea
repz
shl
btr
push
pushf
clc
mov
shr
bswap
sbb
rcl
push
rcl
btr
shr
bswap
push
shrd
rcl
lea
pushl
ror
cmc
push
shrd
not
ror
sub
mov
call
mov
bswap
neg
mov
cmp
ja
clc
stc
add
call
push
lea
jbe
popl
push
pushf
movw
lea
jmp
push
call
xor
jmp
pusha
push
mov
pushf
mov
call
jmp
pushl
mov
pushf
pushf
mov
call
mov
push
lea
jmp
pusha
movw
xchg
pushf
pushf
movl
pushf
lea
jae
push
push
push
pusha
pushl
ret
push
mov
mov
movb
movw
mov
lea
jmp
mov
pushf
mov
pushf
mov
pusha
mov
pushf
mov
movw
movb
pushf
lea
jmp
jmp
push
pushf
mov
pushf
pushl
ret
call
mov
pushl
pushf
movl
mov
lea
jmp
push
pusha
pushl
popl
push
lea
jmp
clc
sub
movb
lea
jg
push
movb
mov
pusha
mov
pushf
mov
lea
jmp
mov
call
jmp
dec
mov
test
cmc
test
xor
bt
cmp
bt
cmc
sub
cmp
jnp
clc
bt
neg
pusha
mov
pushl
pushf
dec
cmc
xor
jmp
pusha
mov
pushf
pushf
pushl
popl
pushl
lea
jmp
mov
lea
rcl
mov
movl
call
pusha
cmc
add
test
cmc
movb
call
bt
pushf
bts
ror
mov
cmp
shl
bsr
sub
xor
dec
not
inc
pushf
ror
pusha
not
add
movsbw
and
neg
cmp
xor
inc
jmp
pushf
pushf
add
pushf
mov
pushl
mov
lea
jmp
call
push
stc
pushf
not
cmp
not
bt
clc
clc
sub
cmc
bt
pushf
and
pusha
push
mov
jmp
movl
push
mov
pusha
mov
mov
push
lea
jmp
call
push
push
pushl
popl
pushl
pushf
push
lea
jmp
push
call
clc
shr
pusha
pushf
pushf
call
call
and
pusha
mov
mov
call
call
pushf
movb
inc
jmp
mov
pushf
cld
call
call
pushf
call
pushf
pusha
stc
add
pushf
bt
movb
test
add
clc
sub
jmp
push
mov
movb
lea
jmp
mov
mov
lea
jns
pushf
pushf
popl
push
pushf
pushl
pushl
popl
push
lea
jmp
add
add
shld
push
push
movw
pushl
mov
jmp
bswap
cmp
stc
mov
push
pushf
clc
add
mov
lea
jmp
jmp
cmp
call
shl
test
shr
cmp
push
or
call
mov
cwtl
lahf
mov
bswap
sets
lahf
not
mov
jmp
test
add
push
call
bt
movzbl
push
add
add
pushf
clc
rcl
neg
pushl
bswap
btc
ror
pop
bt
push
and
btr
stc
pop
inc
mov
clc
cmc
push
cmp
sub
call
pushf
mov
mov
push
mov
movb
lea
jmp
pusha
mov
pusha
push
mov
lea
jns
push
push
push
mov
pusha
mov
push
lea
jmp
pushf
popl
movb
jmp
jmp
pusha
mov
call
cwtl
clc
pushf
sub
push
jmp
jmp
add
jmp
sub
call
neg
movw
call
jmp
mov
push
mov
pushf
mov
pushf
pusha
pushf
lea
jmp
clc
pushf
cmp
add
jmp
mov
mov
rcr
mov
bt
cmc
bt
not
cmc
push
not
pusha
and
call
jmp
call
pushf
call
add
shrd
cmc
mov
push
bt
movw
sub
stc
cmc
cmc
cmc
add
jmp
mov
push
pushf
push
lea
jmp
mov
call
add
jmp
mov
pusha
jmp
cmp
bt
sub
mov
pushf
pushf
call
clc
mov
dec
neg
cmc
mov
clc
test
add
push
call
add
pushl
xor
movb
mov
clc
add
test
cmc
jmp
push
mov
push
pusha
pushl
mov
lea
jmp
call
rep
std
mov
shl
mov
test
clc
pushl
popf
push
mov
pushf
push
lea
jmp
and
bsr
shrd
lea
pop
sub
bswap
mov
push
pushf
popl
pushf
mov
mov
xchg
std
mov
call
xchg
jmp
push
pusha
mov
push
jmp
movl
mov
push
push
pushf
pushf
lea
jmp
mov
push
push
push
pushf
lea
jmp
mov
sbb
shr
cmp
sbb
add
pusha
mov
jmp
push
pusha
mov
call
pushf
pushf
pusha
movw
mov
pushf
pushf
pushf
lea
jmp
rcl
mov
rcr
cmp
pop
clc
pop
sub
setno
pop
lahf
cltd
shld
pop
aam
bswap
neg
pop
aad
adc
add
std
pop
xor
bswap
bts
popf
cwtl
sets
cwtl
jmp
push
pushf
mov
push
mov
call
mov
pushf
pushf
lea
jmp
mov
push
pushf
pusha
mov
call
mov
cmp
pushl
clc
bt
add
cmc
test
sub
jmp
pusha
ror
pop
xchg
movzbl
pop
not
cmp
xor
cmc
pushl
sub
bsr
rcl
bt
neg
pop
shl
ror
xor
shl
shl
cmc
add
clc
shrd
bsr
test
xor
dec
movzbl
stc
bt
test
mov
pushf
stc
test
or
mov
call
push
pushl
popl
pushf
movb
lea
jmp
pushl
popl
movb
pushf
lea
jmp
shrd
dec
shr
mov
pusha
mov
stc
sub
pushf
pushf
shl
jmp
pusha
mov
mov
push
lea
jmp
xor
bt
xor
call
jmp
pusha
mov
push
pushf
pushf
call
sar
cmc
bts
ror
add
not
shrd
neg
stc
ror
cmc
sbb
and
sbb
shld
cmc
bts
mov
clc
add
je
pusha
mov
pushl
pusha
movw
lea
jmp
jmp
bswap
mov
mov
lea
push
bswap
pushf
mov
pusha
pushf
push
pushl
lea
cpuid
push
sub
cmc
mov
cmpl
jmp
mov
movw
pushl
pushf
pushf
popl
pushf
pushf
pushl
popl
mov
mov
pushf
movb
lea
jmp
call
bt
jmp
movsbw
mov
call
rcr
ror
push
inc
mov
pushf
stc
clc
add
push
jmp
pushf
mov
call
mov
pushl
pushf
pushf
push
lea
jmp
dec
call
xadd
ror
rcr
call
pusha
shr
mov
mov
push
pushf
popl
mov
push
call
jmp
pushf
pushf
pusha
pushf
popl
pushl
pushf
call
push
pusha
mov
pushf
push
mov
lea
jmp
pushf
push
mov
push
pushl
popl
movw
pushf
pushl
lea
jmp
clc
stc
mov
clc
test
sub
call
mov
pushf
push
mov
pushf
lea
jmp
jmp
pusha
setae
mov
clc
mov
movb
sub
stc
bt
shl
pushf
pushf
pushf
mov
lea
jbe
pushf
pushf
pushl
popl
push
pusha
movl
push
lea
jmp
or
rdtsc
pushf
test
mov
push
sub
mov
call
add
call
push
pushf
popl
pushf
push
mov
pushl
popl
push
lea
jmp
push
jmp
clc
clc
cbtw
cmc
cmc
stc
cwtl
jmp
xor
pusha
inc
pushf
push
ror
stc
push
bt
neg
cmp
cmp
xor
movw
call
mov
pushf
push
pushf
lea
jmp
and
mov
sub
bt
xor
cmp
mov
test
pushf
bt
sub
bt
bt
jmp
lea
jne
clc
bt
pushf
cmp
xor
call
sete
mov
jmp
btr
shld
mov
movsbw
add
xor
xor
bt
call
mov
push
mov
pushl
lea
jmp
jmp
jmp
mov
call
pop
pushf
jmp
rcl
bts
aam
bsr
movzww
clc
xchg
cmp
add
call
cwtl
push
bt
clc
sub
call
mov
movl
movw
movb
mov
lea
jmp
dec
movb
clc
push
xor
pushf
xor
cmp
cmp
clc
test
cbtw
cmp
pusha
jmp
jmp
pusha
mov
pushf
lea
jmp
pushf
push
lea
ja
shr
daa
mov
dec
lea
bsf
sub
aam
setl
call
mov
mov
movb
movw
pusha
lea
jmp
setns
mov
setno
cwtl
mov
movzbw
pushf
bswap
mov
pushf
pushl
ret
mov
movw
mov
pushl
lea
jmp
xor
call
mov
mov
mov
pusha
pushl
push
pushf
lea
jmp
adc
lea
or
cwtl
mov
call
jmp
pushl
popl
mov
movb
pushl
push
lea
jmp
not
mov
adc
jmp
neg
cwtl
clc
mov
clc
pusha
add
pushf
mov
pusha
pushf
call
sbb
sar
rcl
mov
clc
sub
push
mov
mov
pusha
push
mov
lea
jmp
lea
movb
pushf
mov
movl
movb
lea
jmp
stc
movb
jmp
dec
pushf
jmp
push
bt
cmc
jmp
mov
movw
mov
pushf
pushf
lea
jmp
push
sub
movw
shl
call
jmp
mov
movzww
cmc
cmc
stc
xchg
pushf
add
mov
push
inc
bt
pushf
pusha
ror
add
je
cmp
pushf
add
clc
jmp
xadd
jmp
push
call
call
pusha
pusha
mov
movb
mov
jmp
push
pushf
popl
jmp
pushf
mov
push
pushf
movb
movb
pushl
ret
jmp
rcl
mov
rol
pusha
mov
cmp
bt
cmc
sub
push
shr
pushl
jmp
neg
sbb
bt
jmp
mov
pusha
jmp
stc
jmp
pushf
call
lea
js
push
pushf
popl
pusha
pushl
popl
mov
pushf
lea
jmp
or
and
mov
dec
bt
jmp
mov
pushf
lea
jmp
call
cwtl
shld
lea
stc
jmp
mov
clc
bt
sub
push
jmp
btc
mov
cmp
mov
bt
cmc
push
cmp
add
pusha
pusha
pushf
mov
movb
movb
pushf
lea
jmp
stc
cmp
cmp
sub
push
pushf
call
call
mov
movsbw
lea
cld
cld
mov
call
neg
pusha
mov
jmp
pusha
mov
movw
pushf
mov
lea
jmp
pusha
movzbl
cmp
clc
clc
test
xor
movb
add
bt
pushf
clc
pushf
not
mov
add
cmp
jmp
push
mov
lea
jp
pusha
pusha
pushl
pushf
popl
lea
jns
pusha
pusha
push
pushl
popl
movb
movb
lea
jmp
movb
push
movb
pushl
popl
push
lea
jmp
cmc
xor
test
jmp
call
cmp
pushl
cmc
bt
add
cmp
popf
push
movw
movb
lea
jmp
mov
pushf
lea
jmp
js
pushf
push
call
jmp
push
pushf
popl
jmp
push
ror
test
clc
lea
jmp
mov
pushl
lea
jmp
pusha
pushf
popl
jmp
bt
rol
bsf
mov
shl
pushf
or
test
mov
cmc
call
add
push
jmp
bswap
pusha
mov
pusha
pushf
jmp
lea
jne
push
pushf
inc
push
cmc
cmc
ror
cmp
pushl
pusha
lea
stc
bt
pushf
add
pushl
pushf
add
pushl
push
cmp
cwtl
test
sub
jmp
pushl
call
mov
sub
inc
mov
pushf
cmp
cmc
bt
sub
cmp
jmp
aaa
aad
jmp
mov
add
call
xor
pushf
push
inc
pushf
pushf
pushf
push
decl
pusha
mov
pushl
lea
jne
pushf
mov
pushf
jmp
mov
pusha
mov
push
jmp
push
push
mov
call
mov
pushf
mov
lea
jmp
pushl
popl
pushf
pushf
pushl
lea
jmp
lea
cmc
bswap
jmp
pusha
mov
stc
xor
push
cbtw
pushf
bt
cwtl
cmp
call
cmc
mov
bt
bt
pushf
cmp
sub
movw
add
jmp
mov
pusha
mov
movb
mov
mov
push
pushf
mov
mov
mov
push
lea
jmp
push
pushf
call
and
mov
movb
call
rcl
shl
bt
das
mov
sub
cmp
mov
rcr
shl
adc
pusha
mov
clc
add
stc
cmc
cmp
mov
shrd
jmp
push
push
jmp
mov
push
jmp
shl
bt
mov
cmp
pusha
add
pushl
push
pushf
push
lea
jmp
jmp
push
lea
push
push
call
lea
call
jmp
push
lea
jne
bsf
shl
bt
mov
call
movw
bswap
jmp
call
neg
pushf
mov
pushl
bswap
clc
add
test
sub
test
pushf
test
mov
clc
call
stc
movzbl
bt
xor
bt
stc
clc
cmc
sub
jae
neg
pushf
call
call
shl
shld
sub
clc
cmp
push
xor
rcr
movzbw
bswap
rol
setge
movzbw
movzbw
lea
shld
movzbw
pushl
sub
pushf
clc
lea
sub
sar
or
mov
rol
add
jmp
sar
mov
add
add
call
pushl
popl
pushf
pushf
movb
lea
jmp
cmp
stc
and
clc
bt
cmp
pushf
pushf
pushf
pushl
lea
jne
not
push
xorb
lea
movzbw
bswap
movsbw
mov
pop
pushf
pusha
push
lea
jmp
jmp
push
xor
stc
jmp
call
clc
sub
push
pusha
lea
jmp
jmp
pushl
popl
movb
mov
pushf
lea
jmp
push
movl
call
jmp
call
pushf
mov
call
pusha
rcr
notl
shrd
mov
clc
sub
test
stc
bt
pushl
and
pushf
mov
pushf
pushf
popl
jmp
jmp
pushf
popl
jmp
clc
neg
xor
mov
stc
sub
pushf
clc
add
pushf
call
mov
movw
push
pushf
lea
jmp
mov
push
call
and
cmc
mov
rcr
add
sub
push
sub
xor
lea
bsf
ror
rol
mov
jmp
jmp
rdtsc
bsf
shld
mov
btc
mov
call
call
pushl
mov
call
divl
jmp
jmp
mov
jmp
pushl
popl
push
pushf
pusha
lea
jmp
pushf
pushf
mov
pushf
pusha
lea
jmp
das
pop
sub
dec
sub
dec
sub
pop
sub
push
sub
push
sub
pop
sub
pop
sub
push
sub
push
sub
push
sub
push
sub
pop
sub
push
sub
pop
sub
pop
sub
dec
sub
push
sub
pop
sub
dec
sub
push
sub
sub
dec
sub
push
sub
pop
sub
pop
sub
pop
sub
dec
sub
pop
sub
pop
sub
pop
sub
push
sub
pop
sub
push
sub
push
sub
pop
sub
push
sub
dec
sub
dec
sub
pop
sub
dec
sub
dec
sub
dec
sub
dec
sub
pop
sub
pop
sub
dec
sub
pop
sub
dec
sub
push
sub
dec
sub
push
sub
pop
sub
dec
sub
push
sub
push
sub
push
sub
dec
sub
push
sub
pop
sub
pop
sub
pop
sub
push
sub
dec
sub
push
sub
pop
sub
pop
sub
pop
sub
pop
sub
dec
sub
dec
sub
pop
sub
push
sub
push
sub
push
sub
push
sub
dec
sub
pop
sub
push
sub
push
sub
push
sub
push
sub
push
sub
push
sub
pop
sub
pop
sub
pop
sub
push
sub
pop
sub
push
sub
dec
sub
push
sub
dec
sub
pop
sub
pop
sub
push
sub
sub
pop
sub
pop
sub
push
sub
dec
sub
dec
sub
dec
sub
pop
sub
dec
sub
dec
sub
dec
sub
dec
sub
pop
sub
pop
sub
pop
sub
dec
sub
pop
sub
dec
sub
pop
sub
sub
push
sub
push
sub
push
sub
pop
sub
push
sub
inc
sub
dec
sub
push
sub
pop
sub
push
sub
push
sub
dec
sub
pop
sub
dec
sub
dec
sub
pop
sub
push
sub
dec
sub
inc
sub
dec
sub
push
sub
push
sub
push
sub
push
sub
pop
sub
inc
sub
dec
sub
pop
sub
pop
sub
push
sub
dec
sub
pop
sub
pop
sub
push
sub
push
sub
dec
sub
dec
sub
dec
sub
push
sub
push
sub
pop
sub
sub
pop
sub
pop
sub
sub
dec
sub
dec
sub
inc
sub
dec
sub
push
sub
pop
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
pop
sub
dec
sub
dec
sub
dec
sub
inc
sub
push
sub
inc
sub
push
sub
push
sub
pop
sub
pop
sub
inc
sub
push
sub
pop
sub
push
sub
pop
sub
dec
sub
dec
sub
push
sub
push
sub
sub
pop
sub
pop
sub
pop
sub
dec
sub
push
sub
pop
sub
pop
sub
push
sub
push
sub
push
sub
push
sub
push
sub
pop
sub
pop
sub
pop
sub
pop
sub
push
sub
pop
sub
dec
sub
dec
sub
pop
sub
push
sub
push
sub
pop
sub
dec
sub
dec
sub
inc
sub
dec
sub
pop
sub
dec
sub
pop
sub
pop
sub
pop
sub
pop
sub
pop
sub
push
sub
pop
sub
pop
sub
pop
sub
dec
sub
dec
sub
dec
sub
dec
sub
dec
sub
pop
sub
push
sub
pop
sub
push
sub
push
sub
push
sub
pop
sub
sub
pop
sub
push
sub
dec
sub
pop
sub
pop
sub
push
sub
pop
sub
pop
sub
dec
sub
dec
sub
push
sub
movl
in
ljmp
scas
out
decb
movl
jmp
mov
pusha
lea
jmp
pushl
mov
pushf
mov
pushf
mov
movb
lea
jmp
mov
mov
mov
pushl
pushf
lea
jmp
pushf
mov
push
pusha
movb
jmp
push
pusha
mov
jmp
dec
stc
cmp
stc
xor
bt
xor
mov
mov
stc
sub
call
mov
push
pushf
call
pusha
mov
mov
pusha
pushf
lea
jmp
clc
movb
call
bswap
lea
call
bt
call
jmp
mov
pushl
jmp
pushf
popl
pushl
pushl
popl
movb
lea
jmp
mov
pushf
pushf
pushf
mov
lea
jmp
mov
push
lahf
mov
push
pushf
mov
call
xchg
pushf
push
pushl
ret
push
mov
push
mov
call
call
pushf
mov
call
push
push
mov
push
nop
lea
lahf
mov
pushf
xchg
call
xchg
jmp
mov
mov
call
mov
movsbw
movzbw
mov
pop
pop
bswap
pusha
mov
jmp
movzbw
mov
bswap
not
mov
movsbl
lea
movsbw
not
pushf
not
mov
pusha
mov
pushl
pushf
pushl
ret
jmp
push
lea
pushf
push
xchg
movl
pusha
pushf
push
pushl
ret
not
push
setne
mov
call
pushf
jmp
not
nop
setg
pushf
setg
mov
mov
pushf
xchg
call
movb
jmp
mov
bswap
mov
movb
pusha
mov
pushf
jmp
mov
push
mov
lea
jmp
pop
jmp
mov
xchg
movl
mov
movb
mov
pushl
ret
movb
movb
xchg
mov
mov
pushl
ret
call
movb
xchg
pushf
pushf
push
mov
pushl
ret
lea
call
mov
pushf
pushf
jmp
movsbw
movzbw
nop
jmp
push
jmp
xchg
push
mov
lea
jo
push
mov
call
pusha
pusha
lea
call
mov
lahf
bswap
mov
push
mov
mov
lea
call
lea
jmp
xchg
jmp
movb
mov
jmp
setle
nop
call
movb
mov
jmp
nop
lahf
bswap
mov
pusha
xchg
pushl
xchg
push
call
imul
mov
add
and
fs
jns
push
movb
lea
pushl
mov
pushf
mov
xchg
pushf
push
pushf
pushl
ret
jmp
mov
call
bswap
lea
mov
lea
push
not
lea
lea
not
bswap
mov
mov
lea
jns
pusha
setae
mov
mov
pushf
mov
push
pushl
ret
mov
mov
mov
pushl
pushf
call
pushf
lea
call
call
movsbw
setno
seta
nop
bswap
jmp
bswap
mov
nop
lea
pushf
mov
pushf
jmp
pushl
lea
pushf
jmp
call
mov
push
pushf
lea
call
xchg
lahf
mov
mov
pusha
pushf
mov
pushf
lea
mov
jmp
mov
push
pushl
pushf
jmp
pushf
movb
nop
push
call
pushf
pushf
xchg
pusha
pushl
ret
jmp
not
bswap
push
mov
jmp
xchg
cmp
and
ffreep
add
mov
mov
pushl
ret
pusha
lea
pushf
xchg
push
pushf
pushl
mov
pushl
ret
nop
push
call
call
jmp
call
pushf
call
mov
jmp
movzbl
movsbw
bswap
movsbw
nop
pushf
not
setae
mov
movsbl
xchg
pusha
mov
call
not
jmp
pushf
jmp
jmp
xchg
pushf
pushf
pushf
movw
pushl
ret
pushf
pushf
pushl
lea
pushl
mov
xchg
pushf
pusha
pushl
ret
push
mov
movb
jmp
push
xchg
bswap
lahf
not
setnp
mov
push
jmp
push
pushf
pusha
lea
pushl
mov
movzbw
push
lea
mov
mov
call
inc
xchg
mov
push
jmp
mov
jmp
pusha
lea
mov
push
jmp
xchg
movsbl
jmp
xchg
pusha
movb
pushl
ret
mov
pushf
jmp
mov
nop
movsbw
pop
jmp
xchg
pushl
pushl
ret
pusha
xchg
push
movzbw
bswap
mov
movb
call
xchg
call
jmp
call
lea
pushl
push
pushl
xchg
pushf
push
pushf
pushl
ret
pushf
pushl
mov
call
mov
movw
jmp
mov
pushf
lea
jmp
lea
push
call
pushf
pop
lea
nop
lea
push
movsbw
pushl
mov
pushl
call
mov
call
call
pushf
pushl
mov
jmp
movb
xchg
movb
mov
mov
pushl
ret
lea
call
push
mov
lea
jge
push
pusha
pusha
lea
jmp
movzbw
call
lea
movb
call
mov
call
call
jmp
jmp
mov
pushf
push
mov
pushf
lea
call
rcll
and
setne
mov
call
movb
push
call
mov
movzbl
nop
lea
movsbw
movsbw
pop
pop
push
call
movb
push
mov
movsbl
push
mov
jmp
jmp
nop
pusha
jmp
mov
call
lea
call
push
xchg
movl
push
movw
pushl
ret
lea
pusha
movb
call
mov
pushf
push
call
lea
movzbw
pop
pushf
pusha
jmp
pushf
pushf
jmp
call
pushf
call
call
pusha
call
jmp
lea
jmp
pusha
pushl
mov
pusha
nop
mov
xchg
movb
jmp
pushf
jmp
pushf
mov
jmp
mov
push
push
lea
pushl
mov
movb
call
mov
push
pushl
lea
call
jmp
pushl
lea
jmp
mov
pushf
mov
movw
lea
jmp
lahf
jmp
lea
movw
mov
jmp
mov
pop
bswap
lea
mov
movb
jmp
mov
pushl
jmp
jmp
pushf
push
pushl
lea
jl
lea
jmp
mov
setb
push
pop
mov
call
mov
mov
jmp
das
xor
lock
add
setb
movsbl
nop
jmp
and
and
movb
pushf
pushl
ret
xchg
jmp
jmp
lea
push
pushl
pusha
pushf
mov
not
movsbw
call
mov
call
nop
jmp
mov
pusha
lea
jmp
lea
call
pushf
xchg
mov
mov
push
pushl
ret
push
movb
xchg
movb
movb
pushl
ret
pusha
movw
mov
pop
bswap
pushf
movsbw
mov
pushl
push
movw
movl
lea
mov
pushf
call
pusha
nop
movw
mov
pop
jmp
mov
pushf
movb
mov
call
lea
mov
xchg
mov
pushl
ret
cwtl
push
cwtl
nop
movsbl
movsbw
mov
pushf
xchg
push
jmp
mov
pushf
pushf
mov
lea
call
pushf
lea
pushf
mov
push
lea
movsbw
mov
push
mov
call
call
pop
mov
xchg
call
jmp
mov
jmp
pusha
xchg
movzbl
jmp
movzbw
movsbw
pusha
pushf
nop
pusha
push
mov
pushf
jmp
call
lea
call
mov
call
xchg
jmp
lea
push
push
push
call
pushf
pushf
xchg
mov
pushl
ret
pushf
mov
xchg
pushf
push
pushl
ret
jmp
pushf
mov
jmp
mov
pushl
pusha
nop
call
mov
jmp
xchg
push
mov
push
pushl
xchg
movzbl
push
mov
push
pushf
pusha
mov
jmp
mov
cwtl
mov
movw
pushl
ret
pushf
lea
bswap
movsbl
bswap
lea
mov
pusha
pop
bswap
setno
mov
mov
pushl
pushl
ret
mov
call
pushf
xchg
pushf
pushf
pushl
mov
pushl
ret
pushf
pop
not
nop
push
lea
bswap
mov
pushl
call
jmp
pusha
push
lea
jmp
mov
pusha
lea
jbe
pushf
lea
pusha
xchg
push
mov
pushl
ret
jmp
pushf
mov
movsbl
movzbw
push
mov
pushf
push
movb
mov
pushf
push
call
mov
not
mov
movw
mov
jmp
pushl
call
pushf
pushf
lea
pusha
jmp
mov
pushf
lea
pusha
nop
mov
bswap
movw
mov
pushf
push
lea
jge
xchg
pusha
mov
pushl
mov
mov
jmp
movb
mov
pushf
call
call
xchg
mov
mov
mov
pushl
ret
push
lea
pushf
mov
mov
movzbw
pushf
mov
movb
call
nop
pushf
lea
jl
pushf
xchg
jmp
pushf
mov
lea
pushf
jmp
lea
pushl
movw
xchg
push
movl
push
pushl
ret
push
mov
mov
mov
pushf
movb
jmp
jmp
movb
xchg
movb
mov
movb
pushl
ret
mov
mov
call
lea
jnp
push
pusha
mov
mov
mov
setl
mov
mov
mov
pushl
lea
call
mov
bswap
not
pushf
lea
mov
jmp
pusha
mov
pushf
lea
jmp
lea
pushf
jmp
pushl
push
mov
call
call
mov
jmp
movl
push
mov
jmp
jmp
xchg
movb
pushl
ret
movzbw
nop
push
lea
pushf
mov
pusha
call
pushl
push
jmp
nop
jmp
pushf
lea
call
jmp
lea
lea
jbe
push
mov
push
lea
mov
pusha
mov
pushf
push
pushf
lea
push
movb
movb
jmp
push
nop
pushl
mov
pushf
bswap
pusha
movsbl
mov
jmp
jmp
pushf
lea
jmp
lea
jno
pushf
mov
not
movsbw
movzbw
call
xchg
push
mov
pushf
pushl
ret
call
pusha
xchg
mov
pushf
call
jmp
pusha
call
setge
mov
mov
call
xchg
push
mov
pushl
ret
xchg
movl
mov
mov
pushf
pushl
ret
pushf
mov
jmp
pushf
mov
lea
js
push
push
mov
pushf
pushf
pushf
pushf
lea
push
pusha
call
mov
mov
jmp
lea
pushf
call
jmp
mov
lea
movb
mov
movzbl
movzbw
mov
jmp
jmp
mov
jmp
mov
mov
push
pusha
movb
jmp
movw
xchg
mov
movb
pushl
ret
mov
movw
call
lea
jmp
mov
pushf
mov
jmp
jmp
and
mov
imul
lea
jo
pusha
mov
pushf
push
mov
pushf
lea
push
jmp
jmp
pushf
push
call
mov
movb
call
bswap
jmp
movb
push
lea
jmp
mov
movl
seta
call
mov
pushl
jmp
lea
pushl
mov
jmp
lea
movw
xchg
push
pushf
pushf
pushl
ret
lea
pusha
lea
jle
pusha
pushf
mov
lahf
mov
jmp
push
mov
pop
pusha
mov
call
push
jmp
pushf
pusha
pusha
xchg
call
jmp
xchg
pushf
pushf
pusha
pushl
ret
mov
movw
pushf
mov
jmp
call
push
pushf
mov
mov
mov
pushf
call
not
mov
pusha
movw
xchg
pushf
movb
mov
bswap
jmp
call
lea
call
pusha
xchg
movw
mov
push
movb
pushl
ret
jmp
xchg
push
pushl
ret
pushf
mov
mov
jmp
mov
lea
ja
push
pushf
pusha
xchg
push
jmp
jmp
call
xchg
movw
pushl
movb
pushf
pushl
ret
mov
setno
mov
pushl
mov
lea
call
xchg
jb
adc
adc
movl
call
jmp
xchg
push
pushl
pushf
pushl
ret
lea
jno
push
lea
lea
je
pusha
pushf
mov
xchg
pusha
pushl
push
pushl
ret
mov
xchg
mov
pushl
ret
pushf
lea
jmp
pop
nop
not
setg
call
mov
pushl
call
push
lea
mov
mov
lea
pushl
mov
pushf
push
pushf
pushl
ret
mov
mov
mov
jmp
mov
call
mov
jmp
jmp
pushf
call
xchg
mov
push
pushl
ret
mov
pop
jmp
movsbl
lea
pusha
mov
pushf
mov
not
mov
jmp
push
pushf
pusha
push
mov
pushf
xchg
pushf
jmp
lea
jns
mov
jo
push
movl
pusha
lea
lea
jns
pusha
mov
mov
not
setne
movzbw
mov
jmp
xchg
pushf
movw
push
pushl
ret
call
call
jmp
pushf
xchg
movb
movb
pushl
ret
xchg
mov
mov
mov
pushl
ret
pushf
call
pushf
mov
mov
jmp
jmp
mov
not
jmp
mov
pusha
lea
jmp
pusha
mov
movsbw
cwtl
bswap
pushf
mov
call
pusha
nop
jmp
pushf
mov
push
pusha
lea
pushf
pushf
xchg
push
push
pushl
ret
lea
jmp
call
jmp
mov
push
lea
pushl
xchg
push
movw
pushf
mov
pushl
ret
lea
call
mov
mov
xchg
mov
mov
pushl
ret
mov
push
pushf
call
orl
bswap
nop
bswap
pop
pusha
call
pusha
mov
lea
jmp
mov
mov
jmp
lea
jmp
mov
call
jmp
pushf
mov
call
jmp
jmp
pushl
call
lea
pushf
pushf
xchg
pushl
pushf
movb
pushl
ret
mov
pushf
lea
call
lea
push
jmp
pusha
movzbw
mov
call
xchg
pushf
pushl
push
pushl
pushl
ret
call
jmp
pushf
pushf
call
daa
sbb
hlt
pushf
lea
mov
movb
jmp
call
xchg
call
mov
call
xchg
mov
not
push
mov
mov
jmp
pushf
xchg
mov
mov
pushl
ret
movw
mov
jmp
mov
call
push
push
nop
jmp
out
popa
mov
jl
and
xor
push
pushl
ret
xchg
mov
push
pushl
ret
jmp
movzbw
nop
mov
pushf
seto
mov
pushf
jmp
call
not
nop
setnp
call
not
movsbw
jmp
push
lea
pushl
mov
not
lea
mov
pushf
jmp
lea
pushf
xchg
mov
push
pushl
ret
call
mov
push
mov
pushf
push
mov
jmp
mov
movzbw
mov
pushf
lea
jmp
pushf
call
mov
movb
pushf
lea
pushl
pushl
xchg
pushf
pushl
movb
pushl
ret
jmp
mov
mov
movsbl
pusha
pushl
mov
jmp
lea
jmp
mov
pushf
lea
call
lea
jmp
pop
jmp
xchg
movl
mov
xchg
not
mov
pusha
mov
pushl
lea
push
xchg
pushf
movb
pushl
ret
lea
jmp
mov
pusha
push
jmp
jmp
xchg
pushf
pushf
pushl
ret
mov
movl
call
push
pushl
not
nop
not
call
mov
not
pop
mov
jmp
push
pushl
jmp
mov
pushf
xchg
push
pushl
pushl
ret
pushf
movb
xchg
mov
pushl
ret
push
jmp
xchg
call
call
mov
mov
pushl
pushf
pushl
pushl
ret
call
push
movb
call
mov
movl
mov
mov
movw
pushl
ret
not
mov
nop
bswap
movsbw
pusha
mov
pushl
call
xchg
push
pushf
mov
pushl
ret
call
nop
pusha
mov
movsbw
setno
call
lea
jmp
pusha
call
mov
mov
lea
jbe
pushf
lea
call
pusha
mov
push
xchg
pop
mov
call
xchg
bswap
mov
pushf
call
push
xchg
movw
movzbw
mov
jmp
pop
mov
lahf
movzbw
call
mov
bswap
mov
call
push
pushl
nop
mov
jmp
aad
lea
add
sbb
decl
add
push
jg
add
jb
add
push
lea
js
xchg
jmp
mov
movw
jmp
call
lea
jmp
pusha
movw
jmp
mov
mov
pusha
lea
jl
push
lea
jmp
pushl
pop
lea
jmp
lea
movsbw
nop
lea
movzbl
mov
pusha
mov
mov
push
xchg
push
jmp
mov
xchg
pusha
mov
pushf
movl
pushl
ret
mov
xchg
lea
call
setb
nop
lea
setnp
movzbw
pop
call
mov
lea
lea
jmp
lea
jmp
pusha
pushl
call
call
not
movsbl
mov
pusha
pushf
xchg
push
pushf
call
pushl
pusha
pushl
xchg
movb
pushf
pushl
ret
xchg
mov
movb
pushl
ret
mov
jmp
mov
movb
call
movb
pushf
mov
call
pushl
mov
bswap
bswap
mov
pusha
lea
pushf
pushf
mov
seta
mov
mov
mov
call
pushf
lea
jmp
adc
mov
pushl
mov
call
push
bswap
movzbl
mov
pushf
jmp
push
mov
jmp
mov
cwtl
mov
call
adcl
sub
je
mov
jmp
call
call
not
cwtl
mov
movb
pushf
mov
mov
jmp
mov
pusha
pushf
call
jmp
xchg
pop
mov
call
mov
jmp
lea
pushf
mov
jmp
xchg
jmp
or
test
push
nop
pusha
not
mov
call
push
pusha
movb
nop
pushf
jmp
pushf
mov
lea
cwtl
pushf
jmp
mov
call
jmp
movw
pushf
xchg
push
pushl
ret
mov
mov
jmp
pushf
mov
movsbw
pusha
mov
jmp
pusha
pusha
jmp
lea
pushf
xchg
movb
push
pushl
ret
movb
mov
movzbl
sets
mov
mov
push
call
addr16
setae
nop
push
bswap
pushf
not
mov
pushf
pushf
call
xchg
pushf
mov
movw
movb
pushl
ret
mov
push
pushf
mov
mov
pushf
push
call
call
push
pusha
pushf
pushf
nop
call
jmp
decl
push
push
push
xchg
push
pushf
mov
mov
jmp
xchg
push
pushl
ret
push
jmp
xchg
pushf
movb
pushl
ret
pusha
push
xchg
pushl
pushf
pushl
ret
lea
nop
movw
movsbw
pusha
movsbl
mov
movzbw
jmp
movzbw
not
nop
lahf
bswap
setae
lea
pop
jmp
lea
pusha
not
movzbw
nop
pusha
mov
jmp
lea
call
call
mov
call
pushf
xchg
movw
pushf
jmp
xchg
movw
jmp
jmp
movw
lea
call
pusha
push
nop
pusha
movw
lea
jb
push
lahf
jmp
movb
mov
movsbw
movsbw
lahf
mov
pushf
mov
pushf
call
movsbw
mov
jmp
jmp
jmp
mov
movb
jmp
mov
pop
bswap
xchg
pushf
mov
lea
pusha
mov
movzbw
mov
call
pushf
mov
nop
pusha
movb
pusha
pushf
mov
pop
movsbw
pushf
mov
jmp
pushl
setp
mov
movsbl
lea
push
mov
bswap
pushf
mov
movsbw
jmp
nop
jmp
mov
lea
lea
jge
pushf
pushf
xchg
pushf
movw
pushf
pushl
ret
nop
push
movb
xchg
cwtl
not
jmp
mov
movw
lea
jp
pusha
push
mov
mov
push
lea
jmp
lea
pushl
mov
movsbw
mov
call
jmp
xchg
movw
movw
pushl
ret
movsbw
bswap
pushf
pop
mov
jno
movsbw
pushf
lea
pusha
pushf
movsbw
mov
lea
pushf
pushl
jmp
jmp
mov
lea
jmp
jmp
call
jmp
call
lea
push
call
lret
xor
stos
pusha
xchg
push
mov
jmp
push
mov
mov
pushf
jmp
jmp
jmp
outsl
pop
sahf
cmp
add
xlat
mov
mov
not
pushf
not
mov
pusha
movw
movsbw
movzbl
mov
movzbl
lea
bswap
mov
lea
lea
mov
pushf
pushf
pushf
pushl
ret
pushf
nop
call
mov
call
call
xchg
push
push
xchg
call
xchg
movb
movb
pushf
pushl
ret
lea
call
call
pusha
xchg
pushf
bswap
mov
jmp
mov
pushf
xchg
movb
xchg
bswap
lea
movzbl
push
mov
movzbw
xchg
mov
jmp
movw
bswap
mov
mov
mov
call
pusha
nop
jmp
mov
lea
jp
pusha
pusha
lea
call
bswap
bswap
movsbl
nop
pusha
movsbl
not
movw
mov
push
call
call
pushf
mov
setb
setne
movsbw
movsbw
mov
jmp
mov
lea
jmp
movw
movb
lea
movw
pushl
xchg
pushf
mov
pushl
ret
jmp
pushf
nop
call
pushl
mov
mov
lea
pushf
xchg
pushl
pushf
push
mov
pushl
ret
xchg
pushf
pop
not
pop
mov
jmp
lahf
xchg
mov
pushf
lea
jno
push
mov
push
jmp
pusha
xchg
push
mov
pop
mov
pop
pushl
jmp
pushf
push
xchg
mov
mov
movb
movw
pushl
ret
pop
pushf
movzbw
mov
pushl
mov
movb
lea
jbe
lea
pusha
call
pushf
mov
pushf
mov
pushf
pushf
pushf
mov
push
pushl
pushf
lea
call
xchg
pushl
mov
pushl
ret
mov
movb
pushf
mov
movb
pushl
ret
pushf
mov
jmp
pusha
pushf
call
mov
movb
jmp
jl
push
not
nop
bswap
mov
pusha
lea
bswap
xchg
pushl
pushf
call
pusha
nop
call
push
pushf
pushl
lea
call
xchg
mov
mov
pushf
pushl
ret
mov
nop
lea
pop
push
lea
jp
pusha
push
xchg
pushf
call
movb
pushf
lea
jmp
lea
push
jmp
pushf
xchg
push
pusha
pushf
pushl
ret
jmp
pushl
pushf
lea
jmp
pusha
nop
bswap
jmp
call
call
lea
lea
jg
pushf
push
mov
xchg
pusha
movw
pushf
pushf
pushl
ret
pusha
jmp
pushf
pusha
call
movb
xchg
movb
pushl
ret
movb
pushf
xchg
pushf
push
pushf
mov
pushl
ret
pushf
pushl
mov
lea
jge
movzbl
mov
jmp
call
pop
jmp
pushf
pop
nop
pusha
lea
jae
pushf
mov
call
pushf
mov
bswap
mov
push
pushl
jmp
pushf
pushf
lea
call
call
pushf
movb
pushf
movzbw
nop
pushf
mov
pushl
jmp
mov
jmp
xchg
movl
push
movb
pushl
ret
nop
pusha
pushl
pushf
xchg
pushf
pushf
mov
call
pusha
jmp
mov
call
mov
push
call
mov
lea
ja
pushf
pushf
lea
jmp
pusha
pusha
lea
pushf
call
pushl
pushf
xchg
mov
movb
mov
pop
lea
jmp
pusha
nop
call
jmp
xchg
movb
mov
pushl
ret
movb
lea
call
push
mov
pushf
movb
mov
call
pushf
jmp
pushf
xchg
pushf
mov
mov
lea
movb
mov
push
lahf
mov
mov
mov
jmp
pushf
movb
mov
movzbw
mov
jmp
lea
push
mov
mov
mov
lea
ja
mov
pusha
call
lea
pusha
setnp
nop
movsbw
jmp
jmp
mov
call
jmp
xchg
movb
call
xchg
movb
mov
movb
mov
pushl
ret
aad
cs
pusha
pushf
pushl
ret
jmp
call
nop
lea
jmp
mov
jmp
mov
push
pushf
xchg
pushf
movb
pushl
ret
call
mov
lea
movzbw
mov
pushl
push
pushf
call
push
xchg
pushf
push
pushl
pushl
ret
pushf
pushf
xchg
push
pushf
pushl
ret
bswap
not
nop
pusha
lea
call
jmp
xchg
mov
pusha
mov
call
push
pushl
pushf
lea
movb
movw
xchg
pushf
pushl
ret
pushl
mov
not
lahf
movzbw
mov
movw
mov
lea
jmp
push
push
jmp
movb
movl
call
bswap
js
nop
bswap
bswap
pop
push
movb
pusha
xchg
call
lea
pushf
movw
pushl
mov
jmp
setb
mov
jmp
jmp
call
xchg
pusha
pushf
pushf
movw
pushl
ret
lea
jns
lea
jmp
push
lea
mov
lea
jb
mov
push
jmp
pushf
call
mov
pop
mov
pushf
mov
pushl
lea
call
jmp
movzbw
lahf
movsbw
push
mov
pusha
pusha
push
pushf
mov
push
jmp
bswap
mov
movl
not
mov
pushf
pushl
ret
mov
lea
pushf
pushf
push
call
pushf
nop
movsbw
movzbl
mov
jmp
lea
jl
pusha
xchg
mov
pusha
push
pushl
ret
jmp
lea
mov
xchg
pusha
pushf
pushf
push
pushl
ret
mov
call
mov
mov
jmp
push
nop
not
lea
movzbw
mov
mov
xchg
call
mov
lea
jns
pusha
mov
jmp
call
lea
call
lea
jmp
bswap
mov
movw
call
pushf
jmp
mov
pushf
xchg
movb
pushf
push
pushl
ret
jmp
mov
jmp
jmp
pushf
lea
mov
movl
xchg
movl
pusha
pushl
ret
lea
movsbw
not
seto
nop
not
pop
call
pushf
setne
nop
cwtl
pusha
mov
call
pushf
nop
pushf
pushl
pushl
mov
setle
mov
push
mov
pushf
pushf
lea
jmp
movb
call
lea
mov
call
jmp
lea
pushf
xchg
movb
push
pushl
ret
push
mov
not
movsbw
mov
call
lea
jmp
call
nop
pushf
mov
pusha
mov
jmp
call
mov
movsbw
mov
pushf
call
pop
movsbw
jmp
pushf
jmp
movsbw
bswap
mov
mov
movb
jmp
xchg
pushl
pushl
ret
push
mov
setns
mov
pushf
lea
movw
pushf
call
shrl
xor
pop
and
mov
movb
movb
movb
pushl
ret
movl
xchg
cwtl
lea
movsbl
pusha
mov
jmp
mov
mov
lea
lea
jb
push
pushf
pushl
xchg
pusha
pushf
pushl
ret
jmp
xchg
movw
pushf
xchg
bswap
movzbw
mov
pusha
pushf
call
pushf
pushf
jmp
lea
push
call
call
not
bswap
movzbw
nop
not
movsbw
pop
lea
call
lea
jmp
pusha
pushf
mov
bswap
not
pushf
pushf
mov
mov
mov
pushf
push
lea
pushf
mov
call
push
pushf
mov
pushf
call
pushf
push
xchg
pushl
pushf
push
mov
pushl
ret
pushf
bswap
movzbl
mov
jmp
bswap
mov
mov
movsbw
seta
mov
movb
movw
pushf
pushf
pushl
ret
mov
jmp
mov
mov
xchg
pushf
pushl
jmp
lea
mov
call
xchg
mov
mov
pushl
ret
mov
pushf
mov
lea
ja
pusha
movb
movw
mov
call
call
xchg
pushf
push
pushf
pushl
ret
jbe
push
nop
jmp
lea
pushf
call
pusha
jmp
movzbw
setne
pushf
mov
jmp
mov
jmp
movsbw
mov
pusha
pushl
movb
movl
xchg
call
jmp
pushf
lea
pusha
call
jmp
setns
add
mov
add
add
dec
jge
add
add
mov
aaa
inc
add
push
jns
add
add
pop
push
lea
pushf
xchg
push
movb
movb
movw
pushl
ret
mov
mov
mov
lea
call
pusha
pushf
nop
pushf
call
xchg
push
pushl
ret
nop
jmp
pusha
call
mov
lea
call
xchg
mov
pushl
ret
pusha
call
xchg
pushf
pushf
pushl
ret
movsbw
jmp
pushf
pusha
mov
movsbl
mov
lea
not
movl
movzbl
lea
not
pusha
setno
mov
bswap
call
push
bswap
pusha
xchg
movw
pushf
bswap
xchg
not
jmp
xchg
pushf
pushf
pushf
pushl
ret
push
pushf
nop
mov
pusha
mov
mov
mov
mov
lea
pushf
mov
push
mov
lea
jg
push
pusha
mov
mov
push
pushf
lea
ja
lea
call
pushf
push
call
lea
pushl
xchg
pushl
pushf
push
pushf
pushl
ret
not
jmp
xchg
pushl
pushf
pusha
pushl
ret
mov
call
pusha
nop
call
pusha
lea
jae
xchg
push
call
mov
pushl
lea
jmp
jmp
mov
movsbw
setl
bswap
pusha
mov
jmp
xchg
lea
bswap
mov
push
lea
movw
push
push
mov
call
mov
bswap
mov
pushf
mov
movb
lea
jmp
jmp
call
pusha
nop
jmp
push
xchg
movb
movzbw
mov
jmp
pop
push
lods
pusha
call
pusha
pushl
mov
mov
movw
mov
pushl
jmp
xchg
push
mov
pusha
pushl
ret
pushl
push
call
jmp
jmp
pushl
lea
push
pushf
pushf
mov
lea
movzbw
mov
call
xchg
mov
movw
movb
mov
pushl
ret
nop
pushf
pushl
mov
xchg
pushf
push
jmp
pusha
mov
mov
pushl
bswap
mov
jmp
nop
movb
pusha
call
lea
pushf
mov
xchg
mov
mov
mov
pushf
pushl
ret
mov
mov
jmp
xchg
pushf
not
mov
lea
jno
pusha
mov
push
pushl
pushf
lea
pushf
pushf
call
call
xchg
pusha
pushl
ret
pushl
xchg
pusha
push
jmp
mov
push
mov
lea
jmp
mov
pushl
jmp
movsbw
mov
movb
mov
mov
movb
lea
pushf
push
pushf
pushf
xchg
push
pushl
ret
pusha
mov
not
lahf
pop
push
mov
pushf
movb
pushf
mov
jmp
jmp
xchg
mov
mov
pushl
ret
jmp
mov
pushl
push
jmp
mov
push
lea
jmp
pushf
movb
pushf
nop
push
jmp
lea
call
mov
jmp
mov
bswap
pushl
mov
pusha
mov
call
movzbl
mov
lea
je
pusha
pusha
mov
pushf
pushf
call
xchg
jmp
xchg
mov
mov
pushl
ret
pusha
pushl
pushf
xchg
movl
movl
push
pushl
ret
call
setg
cwtl
push
mov
call
mov
lea
push
call
mov
xchg
mov
movb
movl
pushl
ret
mov
sete
pushf
mov
pushl
mov
pushl
pusha
lea
movb
call
pushf
pushf
mov
call
xchg
push
call
xchg
movw
pushf
pushl
ret
movsbw
mov
push
pusha
mov
mov
pushl
lea
call
pusha
xchg
jmp
jmp
jmp
lea
jmp
bswap
push
mov
pushl
xchg
pusha
pushf
xchg
jmp
pusha
nop
push
sets
cwtl
call
pushf
mov
lea
push
pusha
jmp
jmp
mov
mov
call
call
mov
jmp
pusha
nop
push
call
pushl
xchg
pushf
not
mov
push
lea
jae
pushf
mov
pushf
pusha
pushl
call
mov
pushl
bswap
movsbw
not
mov
lea
jle
pusha
mov
push
mov
pushl
lea
jmp
jmp
pushf
xchg
movb
pushl
ret
mov
lea
jbe
pusha
not
mov
call
jmp
lea
push
xchg
pushf
pushf
pushf
push
pushl
ret
lea
jl
lea
pusha
xchg
pusha
push
push
pushl
ret
xchg
push
pushl
ret
push
movb
push
xchg
pushf
pushl
ret
push
call
xchg
pushf
pushf
push
pushl
pushl
ret
mov
jmp
mov
call
movw
movb
mov
setns
mov
mov
pusha
pushf
lea
pushf
push
mov
pushl
mov
pushf
movb
jmp
mov
mov
lea
push
movb
pushf
xchg
pushf
pushf
pushl
ret
call
xchg
pushf
pushl
ret
lea
pushf
call
lea
mov
jmp
xchg
call
mov
jmp
xchg
mov
pushl
ret
xchg
mov
pushf
pushl
ret
call
jmp
push
pushf
xchg
mov
pushl
push
pushf
xchg
not
mov
call
push
xchg
push
push
push
pusha
pushl
ret
movzbw
mov
pushf
pushf
pushl
ret
xchg
jmp
lea
pusha
mov
movb
pushf
mov
bswap
bswap
call
bswap
setg
nop
lea
jmp
movzbl
push
not
push
nop
call
xchg
pushf
push
movzbw
mov
pushf
mov
jmp
pushf
mov
xchg
mov
mov
mov
pushl
ret
mov
movzbw
pop
mov
bswap
lea
mov
movsbw
lea
pop
jmp
jmp
lea
pushf
jmp
call
pushf
mov
setno
jmp
jmp
call
nop
pusha
pushf
movzbl
movw
mov
pushf
jmp
xchg
mov
movb
pushl
ret
pushf
pushf
xchg
mov
jmp
pushf
movb
call
bswap
movsbw
mov
pushl
call
movb
mov
call
call
xchg
pushf
pushf
pushf
pushl
ret
movzbw
not
pusha
mov
jmp
mov
mov
movb
jmp
call
jmp
mov
movw
mov
pushf
mov
jmp
jmp
mov
call
mov
movb
xchg
movb
movb
movb
pushl
ret
xchg
mov
call
jmp
xchg
bswap
mov
pushf
call
pushf
xchg
mov
pushl
ret
pushl
pushf
jmp
jmp
pushf
jmp
xchg
not
push
lea
not
mov
call
pushl
lea
movb
pushf
mov
push
push
setb
mov
pushf
mov
push
lea
movw
jmp
lea
pusha
xchg
push
pushl
ret
lea
jmp
pop
mov
mov
pusha
call
mov
lea
movw
pushf
jmp
mov
mov
mov
mov
movb
mov
pushl
ret
pushf
mov
pop
not
call
movzbw
mov
mov
call
mov
pushf
lea
push
pusha
movb
call
pusha
xchg
call
call
lea
jl
mov
pushf
lea
jmp
mov
xor
pushf
push
movb
nop
pushf
jmp
pusha
xchg
pushl
call
jmp
push
pushf
movzbw
nop
push
mov
call
push
nop
jmp
lea
mov
lea
movsbl
mov
bswap
mov
not
jmp
lea
pushf
xchg
pushl
mov
mov
movw
pushl
ret
ja
pusha
push
pusha
nop
mov
pushf
movw
jmp
movzbw
mov
jmp
pushf
xchg
push
movb
pushl
ret
nop
pushf
jmp
pushf
call
jmp
pushf
movw
nop
call
mov
call
call
xchg
movw
movl
pushl
ret
call
not
pusha
movw
mov
jmp
xchg
mov
pushf
pushl
ret
jmp
xchg
pushf
push
pushl
mov
pushl
ret
push
mov
mov
movb
pushl
pushl
ret
pushf
xchg
call
imul
fsubs
xor
mov
movb
mov
mov
lea
jmp
pushf
xchg
push
mov
movw
pushl
ret
call
jmp
push
pushf
lea
pusha
pushl
jmp
pushf
xchg
pusha
movb
mov
pushl
ret
call
jmp
nop
push
jmp
pushf
xchg
mov
pushf
movb
pushl
ret
mov
pushf
mov
push
lea
call
nop
pushf
mov
mov
jmp
lea
movb
jmp
call
call
movw
pushl
xchg
pushl
mov
pushl
ret
pushf
xchg
pushl
pushl
ret
movw
push
mov
pusha
call
not
bswap
nop
pushf
mov
jmp
nop
jmp
jmp
xchg
movzbw
mov
push
pushf
push
mov
pushf
push
mov
lea
pushf
pushf
call
mov
jmp
movb
call
mov
jmp
movl
lahf
mov
jmp
jmp
lea
pushf
movb
pusha
jmp
movb
lea
movw
jmp
push
seta
lea
mov
call
inc
les
mov
movb
mov
jmp
jmp
mov
xchg
pushl
pushf
mov
call
pushf
mov
bswap
mov
pushl
mov
call
lea
jns
push
push
mov
pop
lea
cwtl
lea
mov
pusha
jmp
lea
jmp
call
jmp
xchg
pushl
pushl
push
pushl
ret
call
xchg
pushf
mov
pushl
ret
mov
jmp
mov
movl
call
push
movw
pushl
lea
pusha
lea
jb
mov
bswap
mov
call
pusha
call
pushl
mov
pushl
lea
mov
pushf
lea
call
jmp
jmp
jmp
mov
jmp
mov
call
push
pushf
mov
bswap
pushf
movzbw
mov
mov
pushl
jmp
mov
jmp
pushf
nop
not
call
inc
and
not
pusha
nop
jmp
push
pusha
mov
pusha
lea
movsbw
mov
movw
movw
pushf
lea
push
jmp
fldenv
in
mov
jnp
pushf
call
jmp
call
call
mov
nop
pusha
call
pushf
pushf
movb
nop
push
call
mov
pushf
not
jmp
pushf
pushf
call
call
or
hlt
imul
inc
fcmovb
scas
push
push
jmp
mov
test
sbb
in
inc
cmpsb
mov
test
dec
aaa
movsb
scas
mov
inc
adc
popf
cwtl
xchg
mov
jmp
jns
addr16
sbb
in
cmp
push
ss
gs
sub
mov
sub
shrl
daa
data16
cmpb
add
pop
cltd
xchg
sub
adc
test
faddl
scas
inc
test
cs
push
sahf
xlat
add
adc
mov
imul
mov
je
test
shrb
js
sub
inc
cmp
mov
inc
cmp
cmp
enter
movsl
stc
push
cmp
pusha
jmp
adc
jnp
jnp
lret
xchg
les
push
negl
adc
inc
mov
pop
mov
adc
pusha
std
add
inc
gs
jne
jae
jb
outsl
jae
pushf
movb
lea
jne
not
jo
push
mov
pushfw
popw
jmp
add
xor
jne
in
sub
in
sarb
ljmp
mov
pop
mov
fs
lods
dec
stc
dec
dec
in
aas
inc
jl
sub
ret
fs
mov
incl
mov
cmp
std
fs
lret
icebp
cli
inc
scas
jne
and
rolb
xor
jae
test
pop
std
je
fs
nop
adc
fsubl
loope
cmpsl
fwait
sbb
push
lret
jmp
pop
cwtl
fs
mov
ret
xchg
aas
dec
outsl
nop
adc
cld
jnp
fucomp
cmpsb
cmp
inc
cmc
dec
jne
ret
mov
xor
jae
push
push
jne
xchg
mov
jbe
jae
jo
sub
dec
sub
cmpsl
in
mov
sti
shrl
adc
jle
xor
push
mov
stc
sbb
mov
jmp
fs
jle
das
push
in
mov
ja
inc
or
mov
aad
mov
bt
test
pushf
not
push
cmp
cmp
movzbl
lea
movzbw
push
jmp
xor
in
imul
vpsubusb
pushf
test
pop
insb
lods
mov
fnsave
xor
adc
loopne
daa
data16
negl
jne
sahf
inc
cmp
out
cmc
add
movsb
jne
out
push
pop
lods
cli
shlb
and
repz
and
jmp
das
stos
out
mov
mov
int3
mov
dec
sub
out
push
mov
fldcw
or
or
popa
cmp
sub
cmpsb
in
jae
setne
mov
push
push
cli
sysret
decl
pop
lret
jl
leave
out
lcall
inc
call
push
subb
xchg
imul
lea
mov
subb
push
push
jo
push
mov
and
adcb
pop
mov
ljmp
push
jge
sbb
xchg
mov
adc
jg
hlt
mov
push
inc
xchg
fdivs
cmpsb
lea
mov
f2xm1
ja
sub
pop
ret
push
dec
add
mov
lds
or
ja
pop
fsubp
scas
js
aad
mov
dec
gs
cmc
pop
out
mov
inc
mov
subl
dec
scas
rcll
cltd
scas
mov
cmp
xchg
add
mov
jg
sbb
inc
dec
jecxz
jmp
mov
test
rclb
orl
add
xor
in
adc
bound
cmpsl
cltd
shrb
pushf
popf
push
incb
sahf
movsb
mov
aas
int
idivb
xchg
and
add
cmp
push
sar
xchg
js
cltd
inc
jmp
push
movsl
inc
pop
adcl
jl
fucomi
jg
dec
mov
cld
push
dec
sbb
sets
ret
cld
lods
and
adc
push
je
aaa
jl
mov
imul
cld
sbb
call
outsb
sti
das
ds
mov
mov
push
shll
decl
outsb
xlat
dec
sbb
insl
sti
sub
sahf
dec
cmp
ret
fcomps
aaa
cmp
call
pop
jl
dec
sbb
sbb
push
out
mov
cld
xor
push
dec
mov
cld
add
test
dec
pop
loopne
lcall
std
inc
inc
push
es
cltd
cwtl
jbe
dec
mov
sub
cld
mov
cmp
jnp
cld
jno
pop
xor
cmp
cld
inc
push
call
dec
testl
inc
outsl
dec
stc
mov
lcall
mov
cld
push
mov
cld
fadds
push
push
mov
rorb
fld
cld
sahf
pop
dec
call
jnp
or
cld
pop
rorl
push
inc
cmp
cmp
cld
cmp
cmp
dec
sbb
xor
outsb
dec
cltd
movsb
dec
jmp
std
decl
mov
cld
sub
or
cmp
ret
cld
xchg
call
inc
adc
sub
sti
cld
lcall
rorl
subb
cld
gs
inc
inc
fsts
pushl
mov
sti
xor
mov
mov
in
pop
or
shll
pushf
dec
xchg
mov
cltd
dec
cld
or
xchg
jg
xor
int
or
cmc
and
add
inc
push
add
cld
movsl
mov
call
fstp
inc
fwait
xor
dec
adc
mov
std
adc
pop
rcl
ljmp
or
inc
in
negb
dec
cmp
cmp
out
or
mov
jecxz
jne
ret
test
mov
daa
mov
cmpsb
xchg
mov
addr16
add
or
lret
fsubp
insl
jnp
inc
enter
dec
outsl
arpl
inc
jb
gs
inc
in
add
add
lea
ja
jge
bt
bt
pusha
imul
stc
add
jle
add
push
push
pusha
lea
jmp
rorl
cwtl
lea
enter
negl
adc
jb
cltd
int3
imul
cvtdq2ps
fildll
cltd
int3
sub
cmpsl
and
stos
clc
add
dec
pop
mov
jp
test
add
loop
jno
jp
add
jmp
dec
fwait
arpl
xor
movsb
jbe
cmpb
mov
sahf
pop
into
jmp
pop
stos
rolb
shl
arpl
jecxz
xchg
inc
out
mov
add
cltd
sub
daa
mov
fcoml
aaa
pop
and
in
add
sub
push
or
clc
adc
repnz
and
xchg
jge
call
inc
lahf
pop
xor
test
fmull
mov
mov
jmp
imulb
aaa
sbb
sahf
ljmp
push
fwait
xlat
mov
xchg
mov
shr
test
loopne
in
push
cwtl
sbb
imul
ss
adc
in
cltd
cmp
mov
pop
fsubrs
inc
mov
out
xor
xlat
jmp
jp
sub
adc
adc
cmp
sar
xor
sub
cmp
sarb
xchg
xchg
popf
ljmp
and
movsb
sub
mov
insl
or
mov
test
pop
push
mov
fstl
les
jbe
cld
and
jl
dec
adc
imul
pop
addr16
mov
mov
test
ret
fistl
mov
dec
repnz
sub
ret
inc
faddl
inc
pushf
dec
lods
jl
lea
cmp
dec
sub
outsl
es
ljmp
mov
pop
dec
std
inc
sub
and
sub
dec
pop
int
pop
insb
mov
add
dec
fs
inc
jbe
xchg
sbb
jg
cmp
pop
sbb
push
or
pop
sub
sbb
popf
cmp
sub
dec
dec
sub
inc
lret
ret
mov
addr16
mov
add
xor
and
dec
nop
mov
hlt
or
sub
jmp
cli
imul
xor
xor
xor
xor
xor
negb
sub
ret
cmp
ljmp
or
out
pop
dec
adc
es
dec
or
adc
push
dec
xor
adc
xchg
mov
push
stos
icebp
rclb
outsl
cmp
inc
xchg
mov
cmp
int3
out
les
pop
xchg
ljmp
push
xchg
adc
jge
inc
fld
sub
or
add
push
pop
hlt
mov
stos
xchg
scas
mov
rclb
push
mov
xor
nop
sbb
and
fisubrl
push
lret
stos
push
mov
inc
dec
adc
stos
repnz
sub
inc
mov
shlb
dec
inc
and
mov
jge
inc
jns
inc
mov
loopne
pop
jns
sbb
lds
sbb
inc
or
jno
notb
pusha
inc
frndint
inc
xor
jp
pop
sbb
lock
inc
adc
push
dec
xchg
rcl
mov
push
test
push
icebp
sub
push
hlt
push
mov
test
xchg
push
mov
adc
adc
dec
mov
ret
cmp
or
enter
dec
push
cmp
pop
rorl
and
xor
dec
sub
push
in
pop
fsubr
inc
dec
pop
mov
daa
enter
inc
fsubrs
aad
jns
lret
enter
inc
pop
mov
iret
adcl
aaa
xor
sbb
push
aam
mov
js
pop
enter
dec
pop
enter
and
mov
jl
mov
call
sub
lret
rorl
in
fdivrs
pop
jmp
rolb
xchg
sub
pop
nop
jp
out
pop
shlb
add
aam
rcrb
lds
aam
sub
jns
lock
ficoms
pop
fists
fdivrl
mov
sbb
rcrl
scas
mov
enter
mov
inc
mov
dec
push
sub
lods
aas
insl
lahf
pop
roll
xor
enter
enter
dec
repz
fnsave
cmc
ja
add
jno
enter
ror
pop
scas
push
lret
gs
cmp
cmp
lods
mov
ja
inc
add
mov
test
nop
sbb
inc
sarl
aas
shrb
enter
mov
enter
lret
sub
ret
adc
cmpsb
addr16
popa
dec
stc
lds
aaa
mov
or
aas
insb
push
dec
fdivl
inc
lret
xor
enter
push
add
jne
insb
movsb
push
fstpt
fdivr
loope
icebp
in
sbb
rcl
lods
xchg
dec
mov
bound
movsl
ja
aaa
pop
or
into
pop
enter
ret
mov
mov
enter
pop
or
adc
jns
jne
inc
cs
ret
insl
pop
icebp
int
mov
mov
stos
in
jl
mov
push
aad
mov
sub
pop
iret
pusha
lods
inc
aam
dec
lret
xchg
lahf
test
xor
out
aas
or
push
adc
in
shrl
push
imul
lret
fwait
shrb
xchg
dec
pop
stos
ret
das
or
ret
jp
dec
push
xor
xor
cwtl
dec
ret
cltd
and
imul
dec
outsl
ss
mov
dec
cmp
inc
sub
loope
pop
cmp
dec
cmc
fiaddl
lcall
mov
cmp
dec
sahf
jp
mov
pop
dec
pop
sub
pop
jns
addr16
test
movsl
push
add
fisttps
pop
and
or
fdivrl
dec
cmp
loop
fwait
xchg
rcr
leave
mov
dec
enter
jnp
or
adc
mov
shl
adc
pop
cli
sbb
repnz
cli
sti
mov
dec
imul
outsb
lds
ds
mov
or
mov
mov
sbb
sbb
fcoms
fucomp
sub
add
mov
enter
jl
jg
les
xlat
lods
or
popf
cmp
or
jp
mov
ret
stos
xchg
dec
xor
xor
xchg
dec
loopne
or
dec
pop
rcrl
adc
ficomps
mov
dec
loop
in
fsubrl
xor
out
imull
pop
pop
js
ret
jbe
dec
js
dec
xor
jecxz
fcmovbe
arpl
sub
pop
lea
repz
hlt
dec
push
lods
jecxz
adc
insb
fidivs
lods
jo
pop
sbb
mov
mov
fidivrs
pushf
pop
jl
mov
jo
or
lret
mov
sbb
cmpsl
inc
fdivrl
lods
lods
pop
jl
in
icebp
pop
into
sti
enter
inc
jl
stos
stc
fstl
das
inc
sub
push
dec
push
pop
dec
lea
aas
daa
pop
pop
sub
sub
inc
in
in
sub
es
mov
ret
sti
repnz
sub
ret
stc
fisubl
loopne
mov
fs
leave
sub
and
pushf
pop
lods
mov
cld
mov
adc
sub
mov
shrl
xor
jae
pop
mov
jae
aam
jne
push
repz
adc
leave
adc
jb
inc
aaa
push
nop
push
xchg
push
shrb
xor
lea
dec
xchg
aad
gs
pop
xor
in
ljmp
in
mov
les
xor
or
dec
jno
xor
icebp
insb
pop
adc
inc
loop
aad
mov
icebp
xlat
cltd
mov
jbe
das
repz
push
mov
jno
mov
stos
xor
repnz
dec
dec
inc
cmp
mov
insl
xchg
into
add
stos
aam
mov
push
dec
add
leave
pushf
push
ret
jb
xchg
xchg
xchg
ficoml
push
dec
movb
dec
mov
aad
shr
mov
pop
jno
xchg
xor
xchg
imul
inc
stos
inc
aas
or
cmc
dec
stos
hlt
xor
xor
adc
cwtl
andb
jb
gs
push
and
push
push
cmpsl
or
jae
push
in
or
call
xchg
adc
dec
mov
push
dec
pop
pop
push
pop
xchg
push
jns
les
lcall
incb
fisttpll
mov
popf
pop
out
dec
mov
sahf
push
cmovp
ficomps
inc
sub
mov
pop
push
aam
mov
cmp
stos
mov
insb
enter
cmpsb
xchg
mov
or
dec
mov
jecxz
pop
mov
mov
test
mov
test
fldt
ds
xchg
add
pop
xchg
pop
dec
loopne
test
and
shrl
out
shlb
ret
faddl
shll
jge
lds
jmp
loop
cmp
loopne
sbb
cmp
shlb
mov
dec
adc
nop
jbe
shll
dec
push
inc
push
in
mov
xchg
dec
imul
sub
mov
dec
push
jae
pop
sbb
imul
enter
pop
and
int3
xchg
jne
mov
jbe
iret
out
or
inc
and
std
adc
cld
nop
mov
movb
addl
xor
inc
pop
mov
and
shlb
sbb
pop
daa
or
inc
pop
test
fs
in
dec
rolb
roll
push
daa
addr16
ret
mov
loope
jne
loopne
and
push
or
mov
rol
and
mov
mov
or
jmp
repnz
gs
add
sbb
pop
scas
cmp
xchg
test
testb
sub
aam
or
xchg
fdivr
dec
mov
jo
repz
jb,pn
iret
pop
inc
xor
mov
fstpl
cmp
jae
pop
jo
lods
icebp
into
into
sub
insl
gs
cld
fmulp
jae
push
test
cs
sub
fst
jae
dec
push
gs
faddl
in
aas
paddsw
fldcw
sub
lret
stc
lods
sub
dec
fwait
xor
mov
out
or
push
push
inc
mov
dec
gs
push
or
addr16
aas
jge
test
add
jp
aaa
add
push
or
mov
cmp
inc
mov
test
inc
inc
leave
xchg
inc
call
les
leave
rol
test
leave
dec
inc
test
adc
cmp
test
cltd
lcall
leave
add
pop
jge
ljmp
test
cli
mov
enter
cmpb
sub
bound
dec
loopne
mov
enter
adc
fcmove
cmp
fadd
inc
xor
pop
cli
pop
dec
int3
pop
pop
mov
inc
inc
pop
std
das
or
inc
dec
add
sbb
aad
enter
xchg
add
and
jmp
enter
mov
test
mov
dec
add
int
pop
dec
adc
dec
mov
cld
dec
add
or
inc
je
pop
and
sbb
jge
test
aad
mov
add
jns
pop
adc
movsl
mov
out
test
dec
dec
enter
cltd
jl
xor
xchg
aas
jmp
mov
movsl
push
in
fldt
iret
xor
mov
stc
int
inc
add
xchg
sbb
add
add
sbb
aas
inc
clc
add
add
mov
add
adc
or
cmp
dec
mov
xchg
lret
or
pop
dec
lret
test
fcmovu
fiaddl
fiaddl
ficompl
dec
lret
push
inc
lret
out
mov
cmp
pop
xchg
sbb
call
inc
mov
inc
dec
mov
push
pop
push
movsb
dec
jle
sahf
imul
xlat
adc
pusha
ds
cmpb
pushf
mov
jmp
popa
out
leave
push
sub
cmp
sbb
lods
stos
out
mov
aaa
enter
fnstsw
ljmp
inc
sbb
pop
pop
lcall
fcmovb
lret
pop
imul
dec
and
dec
dec
das
mov
nop
leave
leave
mov
dec
shll
xor
ja
sub
vmovshdup
or
aas
cmp
or
cmp
inc
cmp
rol
pop
pop
ret
cmp
or
jmp
pop
inc
ret
cmp
inc
lds
dec
pop
inc
ret
cmp
or
call
pop
dec
mov
inc
dec
cmp
leave
ret
cmp
or
or
inc
ss
cmp
int3
inc
xchg
dec
pop
addr16
cmp
daa
into
inc
pop
cmp
out
iret
cmp
or
cmp
pop
retw
cmp
or
push
inc
push
cmp
pop
in
push
lds
aad
movsl
push
inc
test
pop
gs
cmp
or
cmp
pop
in
pop
les
movsb
pop
inc
test
fiaddl
bound
fisttpl
ficomps
dec
std
fnstsw
cld
sub
mov
sbb
enter
push
mov
imul
sub
sub
push
pop
decb
mov
adc
fsub
dec
push
daa
cmpsl
in
cmpsb
out
dec
sub
or
out
and
test
xchg
movl
gs
inc
stos
pop
jle
push
lcall
jge
dec
sub
out
cmpsl
ljmp
xlat
js
adc
fwait
add
adc
or
push
lret
sub
adc
or
dec
add
push
or
pushf
stos
pop
mov
mov
dec
rorb
orb
or
test
or
addr16
loop
push
test
leave
mov
leave
lds
bound
loope
out
cmp
and
pop
fsubl
imul
sub
pusha
or
daa
out
test
or
mov
or
out
sub
daa
test
pop
or
cmp
out
stos
or
adc
or
leave
es
mov
pop
cmpsl
push
cmp
xchg
addr16
sub
inc
or
daa
dec
adc
rol
loopne
sbb
dec
and
or
dec
ret
or
xchg
ja
lret
dec
rorb
mov
inc
inc
ret
test
fiadds
cmpsl
lret
fs
loop
out
into
add
popf
push
push
rorb
dec
dec
daa
push
in
lds
or
push
sub
pcmpgtw
addr16
out
inc
shrb
or
mov
add
or
les
scas
in
or
test
test
pop
inc
push
or
cmpsl
or
and
fs
or
test
and
inc
mov
mov
sub
movsl
add
add
outsb
arpl
or
pushf
add
jbe
enter
sbb
out
daa
into
or
pop
lea
mov
daa
dec
xor
push
mov
sub
sbbb
and
xor
or
pop
and
daa
cmp
lcall
or
aaa
loope
add
push
or
pop
aaa
mov
or
subb
inc
mov
cmpsl
adc
pop
mov
es
push
int
popf
and
ja
movsl
or
add
sbb
mov
xor
out
or
arpl
pop
pop
dec
add
mulb
sahf
subb
sub
inc
and
or
inc
inc
scas
addr16
inc
shll
mov
les
jg
out
pop
dec
xchg
lret
leave
push
test
or
bound
leave
inc
incb
dec
movsb
rorl
daa
imul
or
mov
pop
inc
xor
adc
or
push
xchg
dec
adc
std
or
fstpl
dec
mov
cmpsb
popf
scas
inc
cmc
or
pop
dec
in
or
cmp
cld
sub
mov
cmp
jg
enter
sub
popa
mov
add
pop
or
pop
push
mov
add
sti
shrb
enter
inc
es
in
or
jnp
stos
orb
lret
mov
cli
pusha
mov
fisubl
ficompl
arpl
or
out
mov
or
addr16
sub
inc
xchg
or
out
faddp
lds
cltd
ret
jns
movsl
aaa
pop
pop
add
or
inc
enter
jmp
fsts
or
or
nop
orb
and
sub
cmp
leave
inc
or
leave
sub
test
jge
cmpsb
xor
or
mov
gs
and
test
fstps
pop
cmpsl
or
pop
pop
push
dec
cmp
cmp
imul
sbb
andb
xlat
mov
daa
fisttpl
out
sub
xchg
xchg
or
dec
adc
push
mov
or
aaa
pop
cmp
or
or
cmpsl
or
leave
sub
jge
inc
enter
xorb
or
push
test
pop
add
or
or
test
add
pop
fimull
out
out
mov
jbe
fs
or
or
xchg
pop
jne
leave
pushf
push
mov
or
dec
lret
mov
ja
addr16
pop
test
ret
lds
cmp
lcall
or
push
data16
movl
push
jle
stos
push
out
inc
mov
into
movsb
or
pop
sub
daa
out
xor
or
in
jecxz
repz
shrl
inc
or
ret
mov
mov
leave
adc
or
in
gs
and
repz
orb
jae
pop
xor
loop
cmpsl
or
adc
cmc
leave
shlb
ja
lcall
sub
xor
or
pop
shll
test
or
inc
mov
or
jno
mov
aaa
fsubs
mov
adc
mov
lock
inc
xchg
stos
inc
and
or
data16
pop
xchg
xchg
fs
fisubrl
loope
push
push
shlb
push
or
lret
and
jmp
daa
addr16
call
pop
cmpsl
push
fs
push
movsl
lcall
movsb
test
push
out
out
adc
dec
leave
cltd
fs
inc
popa
jno
jb
scas
cli
ljmp
or
or
or
dec
push
dec
pop
das
adc
or
loop
or
pop
dec
cmp
add
mov
pop
scas
ror
test
dec
mov
mov
dec
loopne
add
inc
sbb
jp
cmpsl
or
fs
dec
test
pop
lea
adc
mov
lock
stos
push
loop
out
cmp
push
or
sub
pop
int3
enter
xor
lods
pop
mov
push
inc
or
movsb
out
mov
daa
dec
insb
sbbb
pusha
out
push
or
dec
pop
dec
orl
pop
or
pop
dec
out
sub
jmp
push
or
and
mov
std
out
pop
fs
cmp
test
mov
rorb
imul
daa
or
or
mov
dec
fs
push
or
mov
or
jg
out
enter
sub
dec
inc
pop
stos
add
or
xor
dec
sub
push
push
cmp
sub
in
jmp
leave
cmpsb
test
les
cmpsb
int3
in
cmp
fsub
or
dec
cmp
or
add
fs
jp
fisubs
test
mov
fadds
mov
lret
pop
or
or
push
or
inc
mov
inc
or
xor
or
mov
addr16
cmp
dec
mov
adc
push
cmpsl
and
xchg
leave
test
and
inc
add
push
inc
push
and
in
daa
and
jecxz
daa
data16
pop
add
pop
cmp
xor
out
or
or
jne
enter
xchg
cmp
ror
xor
daa
call
cmp
scas
sub
or
ljmp
out
fadd
jno
inc
jno
push
sub
movsl
hlt
test
gs
in
cmpsl
and
or
or
sbb
fwait
bound
test
in
out
xor
or
int
fidivrl
aad
or
imul
pcmpgtb
testb
and
leave
cmpsl
inc
or
inc
in
fisubs
jecxz
dec
rol
pop
enter
ror
mov
movb
xor
add
cmp
dec
loop
movb
enter
loop
dec
add
test
cmp
cmpsl
or
mov
push
inc
movsl
into
add
ret
or
push
sub
cmpsl
imul
stos
sub
cmp
out
ljmp
test
movsb
cmp
jmp
test
fstps
inc
jb
out
rcrl
test
xor
ljmp
inc
or
inc
call
mov
jge
jmp
lock
leave
movsl
out
daa
pop
rcl
arpl
es
in
dec
dec
mov
faddl
dec
data16
fucomp
out
cltd
mov
or
aam
scas
ret
or
test
inc
mov
add
imul
lcall
fisttpll
ret
inc
sub
sbb
inc
mov
fiadds
inc
jmp
mov
cmp
jp
or
ret
jmp
pop
push
test
xor
or
gs
ret
lds
inc
les
dec
lret
or
lret
xor
dec
mov
mov
mov
xor
mov
cmp
loopne
fisttps
fdivs
decl
dec
leave
add
addr16
stos
cmpsl
test
inc
decl
popf
inc
enter
leavew
imul
mov
aad
push
dec
push
movsb
test
and
mov
dec
pop
rcrl
add
pop
mov
dec
rcl
and
inc
dec
test
lock
xchg
sub
out
int
or
sti
sbb
dec
dec
mov
dec
fldl2e
sbb
pop
cwtl
nop
inc
out
pop
xchg
inc
sbb
mov
push
xlat
iret
sub
or
dec
loopne
sbb
mov
dec
or
aam
movsl
leave
fcoml
mov
cltd
repnz
sub
dec
inc
push
enter
les
pop
sub
fs
xchg
dec
gs
call
xchg
sub
dec
imul
push
inc
or
adc
push
jmp
pop
mov
mov
push
push
ljmp
sub
sub
cmpsl
dec
imul
mov
xchg
cmp
test
xchg
call
pop
adc
fwait
aad
test
sbb
sbb
cmp
leave
shrl
dec
or
inc
sbb
add
cmp
dec
gs
and
test
and
sbb
or
or
fistpl
int3
or
fwait
roll
lret
sub
pop
xchg
dec
out
lcall
cmpsl
xor
inc
mov
cmpsb
dec
and
inc
or
dec
cmpsb
xchg
dec
imul
dec
mov
push
sbbl
movsl
dec
push
push
or
inc
dec
and
dec
sub
es
push
xlat
sbb
pop
sbbl
daa
pop
xlat
ficoml
cli
ret
push
fimull
or
dec
daa
or
mov
pop
cmp
mov
or
call
fs
sahf
leave
in
pop
mov
sbb
and
inc
push
push
call
add
push
mov
out
pop
out
iret
inc
into
push
pop
pop
or
pop
mov
leave
pop
and
or
xor
movsl
pop
dec
dec
les
int3
jle
adc
push
push
xchg
mov
sub
enter
or
sub
lret
pop
mov
pop
nop
or
fcompp
xchg
dec
dec
pop
ds
in
adc
inc
pop
adc
mov
or
stos
daa
pop
xchg
dec
pop
addr16
or
xchg
inc
movb
or
data16
cmp
pop
mov
test
pop
dec
or
inc
or
cmp
fistps
les
sarb
incl
mov
shrl
decl
test
aam
rorl
or
repnz
adc
imul
repnz
mov
adc
cmp
in
mov
fisttpll
push
dec
push
popf
cmp
jge
or
call
dec
add
inc
out
or
sti
rcll
sbb
ror
sub
adc
push
push
sbb
inc
adc
adc
es
adc
dec
pop
cli
push
mov
or
mov
or
stos
dec
mov
das
adc
sub
bound
cmp
dec
lret
mov
or
sbb
out
add
pop
sbb
test
test
xor
call
in
cli
lds
inc
or
roll
test
test
push
pop
push
inc
or
push
loope
shl
lret
cmp
and
test
fstpl
mov
lds
or
adcl
sub
xchg
pop
sbb
xchg
sub
push
jl
dec
inc
pop
fs
push
and
into
pop
lret
xor
dec
les
pop
and
cmp
sbb
test
push
inc
test
sti
fadds
adc
add
push
sbb
push
xlat
pop
cmpsb
pop
dec
lock
mov
pop
dec
in
add
xchg
movsl
fisubrs
or
and
lret
dec
pop
pop
roll
and
push
fs
xchg
pop
pop
lock
or
data16
mov
push
aas
test
out
add
gs
add
rorb
or
inc
fwait
pop
sub
addl
jb
ds
push
push
mov
pop
enter
push
int3
mov
xchg
cmp
or
push
inc
lcall
mov
dec
adc
fildll
rolb
adc
push
mov
daa
pushf
pop
mov
inc
clc
enter
rclb
rcrl
push
test
std
lret
inc
adc
pop
cmp
jo
mov
xchg
fisubrl
pop
cmp
adc
pop
daa
add
or
xchg
lret
xor
push
push
push
inc
ljmp
fcomp
push
push
testb
mov
jae
lahf
xchg
loope
mov
or
orb
daa
std
pop
and
int3
xchg
iret
fsubs
inc
sbb
fdivrl
mov
push
test
mov
mov
pushf
adc
push
movsb
add
pop
into
movsb
imul
stos
xor
ret
movsb
adc
int3
imul
fwait
arpl
dec
je
pop
testb
cmpsl
jp
inc
dec
pop
xchg
cwtl
inc
stos
stc
cmp
pop
test
fnstcw
dec
call
mov
push
inc
fsubrs
adc
adc
adc
fnstcw
fwait
iret
movsb
jbe
push
stos
aad
sub
pop
push
add
pop
ret
pop
adc
jmp
add
inc
mov
icebp
aad
push
sbb
push
add
mov
inc
inc
and
iret
lret
or
push
xor
ret
or
push
jbe
xor
leave
cltd
cmp
inc
cmpsb
cwtl
aas
xlat
aaa
fsubl
and
inc
lds
lods
or
adc
and
xchg
pop
fidivrs
pop
mov
ret
add
cmp
lea
push
fmull
pop
mov
outsl
add
pop
add
add
iret
stos
pushf
sbb
jmp
test
sbb
sub
mov
inc
lret
cwtl
test
xor
or
inc
mov
fdivrs
sarb
dec
enter
pop
push
iret
adc
inc
mov
mov
xor
stos
icebp
pop
rolb
pop
sub
js
repnz
lock
stos
and
dec
inc
push
mov
or
xlat
movswl
push
sub
or
call
xchg
pop
cmp
push
xlat
xchg
xchg
push
pop
fcmovbe
loope
cmpsl
test
xchg
pop
movsl
pop
cmp
mov
pop
or
pop
push
adc
pop
lcall
mov
aad
xchg
xchg
cmpsl
push
pop
push
inc
mov
leave
adc
in
pop
aad
pop
fcomps
pop
ret
xlat
push
xchg
in
xchg
push
xchg
xchg
mov
push
push
push
xchg
sbb
adc
pushf
inc
es
cmpsl
xlat
adc
imul
xor
subl
or
fcoml
sbb
sbb
or
shrl
xlat
mov
leave
ljmp
pop
fcmovbe
rolb
adc
enter
inc
add
dec
pop
xlat
inc
or
ds
sbb
pushw
xor
ret
jg
push
pop
lret
dec
loop
ficomps
into
adc
jge
inc
mov
xchg
pop
jmp
adc
cmpsb
pop
cmpsb
xchg
incl
push
fsubrl
subl
aad
ret
cmpsb
adc
fiaddl
lret
sbb
sbb
idivl
xchg
mov
stos
lds
int3
lret
adc
adc
std
inc
and
cwtl
pop
xlat
test
push
and
and
push
or
push
add
leave
push
les
jo
xor
inc
add
add
xchg
test
ljmp
dec
pop
and
xor
fwait
loop
add
pop
test
rcrl
push
and
mov
rorl
roll
mov
aad
movsb
lret
or
mov
test
push
enter
cmp
adc
stos
pop
xor
cs
mov
daa
idivb
mov
aaa
sbb
es
std
dec
es
push
adc
push
or
mov
mov
inc
dec
inc
sbb
add
pop
sbb
sbb
call
or
imul
pop
add
mov
fdivr
adc
rorl
movsl
xchg
cmpsb
or
push
daa
pop
sahf
add
adc
in
inc
fadd
xchg
sahf
dec
push
mov
xchg
pushf
jbe
aas
addr16
xor
mov
and
inc
push
push
adc
push
cmp
jne
sbb
ss
aam
sbb
fldcw
and
inc
inc
lds
ror
mov
or
mov
enter
or
aad
insb
es
pop
stos
rcrb
push
ret
xchg
mov
popf
push
push
sbb
push
sub
inc
into
adc
fidivl
sbb
dec
add
es
aad
mov
xchg
pop
lret
popw
push
or
call
xchg
add
sbb
enter
aas
iret
dec
xchg
or
sub
rcrb
test
fnstcw
mov
enter
or
or
sbb
push
and
and
int3
rcrb
dec
sub
out
inc
pop
cmpsl
pop
pop
pop
dec
negb
pop
xchg
fwait
xchg
xchg
mov
xchg
mov
rorb
add
stos
pop
adc
popl
sub
loop
fs
movsl
frstor
sbb
xchg
or
orl
dec
jne
cmp
inc
aad
xchg
push
clc
out
push
mov
sub
enter
mov
xlat
stos
xor
mov
cmp
pop
xchg
pop
fdivs
out
dec
iret
inc
mov
xchg
inc
test
or
dec
jmp
gs
adc
mov
xor
int
and
push
pop
dec
xchg
lds
movsb
mov
enter
aas
rcl
push
xchg
shl
test
clc
aad
pop
xchg
or
ljmp
and
xchg
aad
ret
clc
data16
test
sbb
sbbl
jp
enter
lcall
cmp
and
inc
dec
or
fwait
aam
mov
imul
scas
xor
adc
int
pop
mov
int3
xchg
lods
cmp
aam
ret
sbb
vsubss
inc
xchg
std
inc
je
or
clc
aam
mov
dec
add
andl
es
popf
mov
cmp
sbb
push
icebp
mov
fstps
movsl
pop
mov
dec
adc
aaa
int3
repnz
popf
aad
xor
ffree
push
dec
adc
sbb
adc
mov
sub
rcll
inc
enter
dec
je
adc
pop
or
push
mov
call
push
mov
mov
push
inc
cltd
xchg
inc
push
sbb
inc
jae
inc
out
neg
and
pop
add
inc
cmp
insl
sub
test
movsb
iret
sub
mov
psubsw
out
inc
push
mov
xchg
or
mov
inc
rol
adc
dec
dec
push
popf
xlat
pusha
loope
enter
or
push
test
sahf
sub
fiaddl
fcomps
enter
mov
mov
sbb
aam
sbb
es
xor
dec
cmpsl
mov
daa
pop
pop
cwtl
sub
fcmovu
inc
pop
adc
sbb
ret
push
addr16
cli
sarl
cmpsb
pop
push
dec
xchg
pop
mov
jmp
dec
sub
in
sub
test
xor
sub
imul
push
fcompp
dec
dec
lds
dec
fldcw
inc
sub
rol
or
xlat
mov
or
fwait
dec
xor
cmpsb
push
mov
cltd
imul
dec
in
rcll
test
lds
jne
inc
push
rcr
jb
pop
test
inc
push
push
pop
movsl
or
pop
cwtl
test
leave
bswap
push
leave
inc
inc
lea
test
ficomps
inc
xchg
pop
fcoml
js
inc
add
daa
add
inc
roll
mov
cmpsb
pop
out
cmpsb
shrb
pop
out
cmp
or
pop
mov
inc
popl
dec
enter
inc
call
push
cmp
ret
mov
ds
test
loope
int
out
fadds
sub
sbb
mov
imul
or
inc
js
test
sbb
mov
rcrb
xchg
jb
and
sub
data16
dec
pop
inc
fwait
sub
sbb
subl
or
dec
or
pop
pop
dec
rcl
push
sbb
fadds
fiadds
hlt
rorb
sbb
shll
inc
lret
adc
add
iret
mov
jmp
aam
stos
push
lds
pop
adc
mov
dec
fidivrs
dec
rcl
int3
mov
rcll
into
sub
call
frstor
push
les
test
rcrb
roll
fadds
dec
lahf
cmpsl
sbb
fs
add
fistpl
or
cmpsb
or
dec
xor
sub
jno
push
into
xor
mov
inc
pop
leave
adc
dec
enter
or
add
enter
inc
sarb
test
inc
cmp
sub
xchg
roll
push
lret
data16
push
jbe
jo
movsl
fcmovnbe
cmpsb
mov
dec
lock
cmp
adc
test
dec
fsubl
xchg
pop
add
fcmovnu
or
xchg
add
or
into
adc
inc
push
ret
test
xorl
daa
adc
fiaddl
xchg
cmp
stc
pop
sub
stc
pop
sbb
out
jg
les
xor
scas
test
adc
movsb
lret
push
rcl
fdivrl
jmp
or
push
or
leave
test
xchg
mov
shll
test
and
shlw
mov
adc
pop
ljmp
and
mov
fwait
inc
movsl
xchg
daa
mov
inc
fsubr
into
push
sbb
fstp
clc
lcall
call
add
sub
int
jmp
push
fildl
lea
mov
adc
neg
test
leave
int
jg
xor
callw
gs
pop
mov
push
sahf
test
add
shll
mov
rclb
inc
sbb
vcomiss
cmpsb
shll
or
lahf
jmp
lahf
cli
adc
cmp
loope
mov
sarb
sub
inc
dec
or
push
cwtl
cmp
pop
das
icebp
or
fmuls
pinsrw
aam
cwtl
push
lds
inc
test
cmpsl
push
xor
or
pop
push
cmpsb
leave
icebp
push
and
push
ret
mov
stos
leave
adc
inc
mov
mov
jmp
add
lea
fcompl
les
fcmovne
push
aad
xchg
inc
enter
mov
les
mov
dec
or
mov
mov
test
leave
push
lret
xchg
sbb
lods
cmpsb
lds
jb
imul
adc
sub
int
xor
mov
jmp
pop
or
test
shl
cltd
sub
cmpsb
aaa
out
cmp
inc
leave
inc
fstl
inc
dec
sbb
dec
push
push
inc
add
pop
xorl
inc
dec
push
jg
push
aas
dec
in
cmc
cmpl
jmp
adc
or
scas
mov
sub
pop
stos
shll
dec
inc
leave
inc
push
mov
and
pop
mov
lret
inc
add
pop
push
ficoml
imul
or
loop
mov
fsubl
ja
ret
sub
cmp
push
aam
ror
and
loope
pop
mov
enter
fildl
shr
sbb
sub
jg
sub
flds
call
or
or
pop
inc
or
das
pop
aad
add
call
daa
leave
rol
mov
out
xlat
and
sahf
dec
inc
shlb
fildl
mov
xor
and
inc
pop
and
cmpsb
mov
fisttpl
mov
in
push
adc
jmp
fsub
aaa
mov
aam
aam
pop
test
xchg
inc
fisubrl
xchg
mov
fdivl
mov
mov
pop
test
adc
inc
pop
ljmp
xlat
rol
adc
xchg
pop
inc
dec
mov
pop
cmpsl
aaa
fisttpl
dec
or
outsl
inc
mov
popf
mov
test
out
shl
test
into
sub
push
pop
sbb
pop
xchg
mov
mov
xchg
bound
add
mov
into
addr16
push
test
adc
test
xchg
enter
daa
mov
pop
sbb
sub
and
sub
mov
push
mov
nop
sub
pop
ljmp
mov
rorb
sub
adc
xchg
movsb
jmp
mov
mov
aaa
add
sub
test
sub
and
mov
stc
adc
jg
out
ja
cmp
dec
mov
sahf
orl
test
mov
sub
sub
mov
andb
test
data16
popaw
cmpsl
pop
test
lret
mov
xchg
sub
or
lret
daa
fidivrl
mov
test
ja
testl
test
push
mov
xchg
add
leave
fs
movsb
dec
ret
mov
push
repnz
xorb
fisubrl
xchg
movsl
inc
cwtl
mov
test
out
test
lods
test
mov
sbbb
in
daa
sub
enter
popf
sub
sub
mov
cmpsb
push
les
mov
mov
movsb
fimull
movl
sub
or
pop
cmpsb
xor
movsl
ret
pop
test
jnp
dec
mov
lds
sbb
ret
loope
adc
pop
push
mov
xchg
test
pop
push
cli
mov
jg
les
fcmovb
jmp
add
dec
iret
cli
mov
test
mov
leave
pop
push
enter
pop
or
ret
fs
xchg
dec
cmp
cwtl
mov
fsts
roll
sbb
test
dec
imul
stos
push
inc
leave
fwait
sub
mov
push
adc
sub
daa
daa
std
test
int3
out
inc
pop
mov
mov
mov
out
cmpsl
test
mov
ja
push
arpl
rclb
out
xor
shrb
jo
shll
pop
and
inc
lcall
pop
sbb
scas
mov
adc
gs
aaa
sub
add
xor
rorb
es
inc
scas
mov
lds
inc
pop
and
jg
inc
test
dec
and
movsb
inc
out
call
imul
xchg
pop
fwait
or
mov
add
add
ror
mov
in
aad
pop
test
in
shl
lcall
sub
pop
inc
cltd
leave
fwait
mov
mov
xchg
es
adc
add
leave
enter
xchg
jmp
pop
sub
lock
cwtl
add
rcrl
inc
test
rorb
mov
pop
fimull
test
dec
sbb
mov
sub
fiaddl
leave
movsb
and
xchg
add
inc
jp
mov
push
leave
push
lds
ja
sub
dec
dec
mov
arpl
arpl
mov
mov
fs
in
fldenv
dec
inc
adc
adc
lret
test
adc
out
mov
sbb
les
ficoml
and
int
test
fs
push
adc
lds
dec
popa
cmp
mov
dec
sbb
push
int
daa
mov
enter
ret
xor
or
aaa
fcoms
or
mov
leave
out
and
lds
push
das
movl
addr16
rcr
scas
and
mov
cmpsl
fisubl
arpl
movsb
aam
sbb
mov
pop
jne
ret
adc
aad
xchg
adc
inc
sbb
rcrb
inc
movsl
jmp
mov
inc
jne
push
lret
fiadds
cmp
xchg
sbb
jmp
push
popa
dec
test
mov
dec
mov
xchg
ret
fwait
pop
xor
mov
and
aas
call
inc
loope
rclb
push
add
movsl
cmc
push
inc
test
cwtl
push
lds
xchg
call
iret
mov
pop
stos
inc
and
inc
push
xchg
dec
and
or
or
mov
or
into
popa
loopne
lcall
push
test
sub
pop
js
xchg
push
add
insl
dec
int
mov
or
clc
cmpsl
pop
dec
xor
gs
and
into
ret
ror
lock
rolb
sbb
inc
enter
pop
enter
cmpsl
mov
loope
rcl
pop
mov
push
pop
lahf
dec
inc
push
mov
fwait
inc
jo
mov
fistpl
sbb
mov
mov
adc
orb
mov
mov
xor
addr16
aam
sub
mov
dec
xor
or
and
fldl
in
adc
mov
lret
add
flds
pushf
cltd
les
push
dec
lds
add
aam
inc
movsl
fsts
and
out
pop
sbb
inc
or
and
test
xor
adc
mov
cmpsb
dec
and
lret
push
mov
add
ret
mov
rcrb
adc
push
inc
mov
pop
dec
cmp
dec
ja
mov
fnstenv
pusha
es
sub
cmp
fs
xchg
pusha
call
cmp
movsl
ss
add
or
xor
pop
or
fiaddl
or
es
ficompl
inc
addb
cwtl
inc
and
sbb
data16
int
add
dec
pusha
inc
lcall
sbb
pushf
sub
popf
pop
sub
fs
sub
mov
mov
jge
and
jle
push
lret
das
rolb
mov
jne
popf
dec
cmp
ss
in
and
push
pop
in
jl
cmp
ret
cmp
sbb
cmp
pop
pop
mov
pop
sub
sahf
or
cmp
pop
sub
mov
pop
dec
mov
or
stos
dec
test
xor
nop
push
rcl
jb
adc
pop
cltd
inc
movsl
mov
gs
or
leave
push
ljmp
stos
add
xor
or
ficoml
xchg
sub
or
inc
inc
cmpsb
mov
outsb
add
and
test
rcl
push
mov
aam
int
dec
rolb
xchg
or
dec
xor
int3
aad
leave
pusha
and
and
inc
movsl
test
push
scas
je
push
push
mov
in
xchg
out
fcompl
imul
repnz
xor
inc
cmp
movb
cmp
dec
mov
push
lret
dec
cmp
push
ret
cmp
push
gs
pop
cmp
pop
pop
inc
fstpt
pop
pop
fadd
pop
fnstsw
pop
or
aas
inc
mov
mov
inc
inc
cmp
inc
ret
cmp
dec
pop
lret
jne
dec
inc
into
cmp
rol
push
aam
push
or
pop
inc
fidivrl
pop
pop
ffree
aas
sarb
or
mov
enter
int3
xchg
cmp
sub
ret
cmp
or
pop
inc
fdecstp
sub
dec
sub
sub
or
mov
mov
ret
cmp
or
mov
mov
ret
cmp
or
mov
mov
ret
cmp
jle
lds
cltd
mov
sbb
sahf
sti
ds
sub
cmp
fadd
mov
pop
pop
ret
stc
pop
aas
lret
pop
xchg
mov
stc
into
pop
pop
sub
push
xchg
ret
jg
sub
push
xchg
mov
stc
into
pop
pop
sub
or
movsl
sub
mov
pop
loop
cmp
push
loopne
ds
cltd
repnz
andl
and
cmove
sub
addr16
into
in
add
repz
es
enter
jne
mov
jbe
popa
negb
ja
loopne
iret
es
enter
jns
add
ret
inc
jp
and
push
inc
into
fs
les
aam
dec
jle
and
xchg
sub
sub
ror
add
and
inc
sbb
mov
loopne
add
into
inc
sbb
mov
loope
add
into
inc
sbb
mov
cltd
bound
inc
and
cmp
cmc
nop
adc
fiaddl
inc
bound
add
test
faddl
fs
sbb
or
push
cmp
mov
lds
incl
xchg
dec
adc
xchg
test
jp
cld
add
push
into
popf
jge
mov
pushf
ds
mov
aad
pop
rorb
inc
lds
cmp
inc
fildl
lcall
push
mov
ret
cmp
push
gs
inc
inc
cmp
bound
ds
pop
stos
xchg
dec
jae
adc
hlt
out
dec
lock
mov
mov
pop
mov
dec
sarl
stos
or
lret
inc
sarb
jmp
rol
or
cmp
push
dec
inc
pop
cmp
ret
cmp
les
in
pop
mov
enter
lret
lahf
dec
repz
insl
ret
cmp
lods
movb
cmp
pop
in
ret
cmp
cs
into
adc
dec
inc
pop
cmp
pop
ret
cmp
inc
inc
cmp
pop
enter
int
or
push
inc
outsl
cmp
pop
pop
fsubrs
mov
out
cmp
pop
adc
enter
push
cmp
int
jo
sarb
nop
pop
push
ret
cmp
or
lock
pop
cmp
pop
inc
mov
inc
les
jno
mov
sub
or
iret
inc
icebp
cmp
adc
fidivl
cmp
fiadds
cmp
xchg
ret
cmp
or
leave
inc
repnz
pop
sub
pop
push
daa
xor
xchg
sub
into
sub
push
inc
xchg
cmp
pop
mov
push
or
cmp
pop
adc
fdivl
inc
or
inc
je
mov
mov
push
cmp
or
adc
pop
inc
ret
sbb
dec
shl
iret
movsl
adc
add
push
stos
xorl
repnz
push
mov
test
jp
aam
fcomps
dec
pop
and
xor
add
fsubrl
inc
jp
je
xchg
jb
adc
push
cmp
dec
dec
in
adc
hlt
rcll
loop
xor
aam
jae
dec
aad
xor
and
lods
add
add
popa
sub
aam
lods
mov
mov
add
xchg
shrl
push
add
call
adc
je
les
xchg
push
out
jmp
xor
xor
aam
xor
jmp
dec
cs
pop
pop
cld
inc
jae
lcall
add
stc
stos
pop
jno
mov
faddp
repz
mov
rcrb
lret
lahf
out
xchg
data16
add
inc
out
out
inc
lds
xor
repnz
sbb
pop
iret
mov
inc
adc
inc
enter
daa
enter
sbb
sub
fcoms
pop
std
mov
push
sub
lahf
in
pop
es
inc
inc
push
push
nop
or
rcrl
aad
pop
aas
jno
scas
inc
cmp
lds
adc
push
repz
mov
add
push
adc
mov
fidivl
out
das
and
rorb
rolb
mov
add
pop
add
vshufps
dec
adc
lock
pusha
in
enter
faddl
cmp
sub
lret
enter
add
enter
dec
mov
out
and
int3
and
rorl
adc
pop
int3
and
into
sbb
jns
inc
lds
push
mov
or
inc
jns
daa
roll
popa
and
stos
adc
or
cmc
es
pop
inc
inc
add
repz
insb
sbb
inc
inc
icebp
dec
call
rcll
add
pop
enter
push
add
inc
fnstenv
inc
push
test
or
xchg
daa
add
push
es
lret
xchg
sub
or
test
cmp
cmp
mov
dec
in
pop
leave
xor
into
daa
xlat
shlb
cmp
dec
ss
jo
cld
aas
sub
testb
or
mov
push
push
mov
lock
dec
mov
dec
not
xchg
into
es
jmp
pop
aaa
pop
leave
adc
or
rcll
xchg
inc
push
push
push
outsl
push
push
cmp
in
jb
xor
push
sub
ss
test
mov
nop
push
push
insl
test
xchg
push
pop
dec
rol
dec
into
dec
inc
into
and
adcl
push
into
mov
and
pop
mov
mov
push
iret
fiadds
inc
cmp
xchg
dec
arpl
insl
jbe
mov
rcll
lret
and
inc
int
sbb
inc
cmp
xor
pop
push
scas
es
dec
repnz
mov
das
adc
enter
add
adc
and
rcll
cmp
fidivl
jo
pop
lds
or
adc
popa
pop
les
ficoml
ds
dec
les
arpl
inc
clc
mov
enter
movsl
pop
xchg
loop
jge
inc
mov
std
shlb
sbb
lret
xor
aas
fisubs
ffreep
imul
cmp
and
mov
push
shl
push
scas
pop
aas
cmp
daa
jecxz
iret
pop
cmpsb
mov
push
xchg
sbbl
mov
pop
adc
adc
inc
lock
sbb
push
and
add
cmp
test
leave
pop
or
jno
outsl
jo
push
push
pop
push
lock
shll
lock
pop
pop
aas
gs
mov
test
test
xchg
mov
sbb
fadds
leave
dec
xchg
leave
jp
dec
xor
adc
mov
test
inc
add
mov
pop
pop
ret
cmp
call
jae
fcompl
lret
xchg
sub
pop
dec
ret
cmp
push
push
ret
mov
push
adc
dec
daa
jae
jmp
sub
mov
mov
ror
lea
enter
test
jb
pop
dec
adc
pop
lds
pop
cmp
and
mov
mov
pop
adc
mov
dec
dec
dec
adc
mov
add
mov
add
or
and
push
inc
lods
sti
xorl
dec
and
ret
mov
pop
adc
fcoml
adc
out
mov
push
or
pop
orb
aas
inc
imul
insl
or
push
out
push
dec
imul
inc
dec
adc
inc
dec
adc
dec
inc
pop
inc
inc
push
jge
dec
dec
les
ret
pop
aas
cli
inc
dec
push
orl
cmp
or
sub
dec
push
sub
pop
push
pop
inc
push
dec
aas
aaa
push
push
mov
aaa
dec
inc
mov
inc
push
mov
repz
or
mov
int
addr16
or
push
repz
sub
adc
adc
mov
int
dec
jo
pop
push
inc
pop
jp
push
adc
or
out
inc
bound
mov
inc
sub
dec
or
sub
inc
les
dec
mov
fimull
xor
call
out
or
inc
mov
pop
fiadds
pop
dec
dec
inc
mov
dec
dec
adc
adc
add
mov
lock
pop
jno
imul
inc
inc
dec
mov
into
push
pop
lret
jo
call
inc
movsl
mov
icebp
mov
sbb
mov
imul
adc
inc
addr16
sub
clc
add
rclb
in
pop
sub
sub
andl
dec
push
and
lcall
mov
cmp
loopne
mov
pop
inc
cmp
std
push
xor
arpl
dec
adc
mov
arpl
out
aam
gs
addb
jecxz
dec
in
ret
jp
addl
push
xchg
aaa
dec
inc
inc
pop
loopne
orb
enter
push
pop
test
les
pop
fcomps
push
push
ror
jle
dec
into
mov
add
jp
jo,pt
push
icebp
jl
cmp
mov
insb
dec
mov
sbb
pusha
add
dec
sbb
ds
push
add
inc
xor
loopne
xchg
xor
pop
pop
rcrb
inc
jle
pop
in
inc
xchg
sbb
shl
mov
jae
pusha
mov
sbb
cmp
loopne
inc
pop
or
push
pop
add
push
das
jge
call
inc
mov
pop
dec
inc
mov
and
jp
aas
mov
pop
mov
ja
pop
pop
out
mov
out
lock
loop
push
pop
rol
xchg
mov
inc
pop
addr16
ret
mov
pop
adcb
pop
xchg
add
loopne
sub
inc
enter
inc
sbb
jmp
push
mov
out
add
add
inc
inc
mov
mov
mov
or
sbbl
movsb
dec
fs
ficomps
pop
xchg
loopne
add
push
sbb
out
lahf
xchg
inc
or
mov
push
out
dec
xor
mov
dec
inc
or
mov
pushf
mov
inc
das
loopne
aas
lea
imul
dec
jns
ljmp
push
into
and
dec
fisubl
jp
or
pusha
jge
fisubs
inc
ficomps
mov
jmp
jge,pt
mov
je
push
bound
push
jg
popa
roll
cwtl
sbb
movsl
inc
mov
fs
out
push
negb
call
mov
mov
dec
sub
arpl
pop
lret
clc
mov
sahf
mov
or
inc
pop
movsb
pop
jne
add
add
dec
mov
or
jo
mov
arpl
inc
stos
cmpsb
clc
sub
dec
push
push
fdivrl
pop
mov
jge
mov
and
sub
and
dec
push
roll
cmpsb
sub
lret
repz
lock
push
inc
jns
aam
ret
cmp
push
inc
pop
cmp
pop
ret
cmp
mov
cmp
rol
ret
or
movb
inc
pop
vshufps
or
inc
fcmovb
dec
cltd
leave
dec
sub
cmp
or
rolb
cmp
pop
aam
push
pop
hlt
inc
xchg
dec
ret
lret
es
stos
test
push
leave
cmp
sub
xchg
mov
inc
dec
imul
lret
daa
cltd
loopne
dec
out
cmp
adc
mov
cmp
sarl
xchg
fneni(8087
fisttpll
mov
out
mov
in
aam
cmp
sbb
cli
sbb
or
cmpsb
xchg
add
rcrl
pusha
je
es
inc
cmp
dec
push
leave
sub
or
dec
pop
inc
ljmp
cmp
dec
aaa
xorb
inc
inc
fwait
pop
lcall
xor
pop
sub
pop
dec
adc
xchg
jp
pop
into
data16
jle
fcmovu
std
inc
pop
aaa
push
or
stos
jb
adc
push
pop
int
dec
add
dec
inc
sub
add
jmp
sub
push
cwtl
cmp
or
cltd
imul
cmp
sbb
pop
xor
sbbb
fwait
roll
dec
cwtl
leave
pop
pop
sbb
aaa
inc
fst
dec
sahf
inc
dec
cmp
dec
push
decb
shl
push
jb
sahf
xlat
sub
call
inc
sub
cmp
dec
push
pop
pop
out
push
cmp
cmp
cmp
inc
sbb
inc
or
pop
push
pop
pushf
ret
sahf
inc
daa
into
pop
add
pop
imul
mov
dec
jbe
xor
sahf
cmp
push
pop
enter
loop
pop
sub
dec
ljmp
sub
mov
leave
cwtl
sbb
xor
rclb
movsb
adc
pop
xchg
imul
call
lret
leave
sub
aaa
ret
bound
int
aam
aad
pop
rcr
ret
inc
ret
cmp
pop
cmp
inc
cmp
enter
cmp
mov
inc
clc
inc
cmp
dec
inc
jmp
ret
cmp
sub
push
inc
sub
push
pop
dec
ret
cmp
push
inc
pop
cmp
pop
out
push
cmp
enter
sahf
dec
out
xchg
sub
insl
mov
dec
ret
add
adc
lahf
or
test
inc
les
shlb
push
movl
loop
dec
jecxz
cwtl
adc
lret
pop
push
sub
test
or
inc
xchg
lds
add
cmp
pop
popf
ret
cmp
inc
out
cmp
pop
ret
cmp
or
jp
aaa
cmp
or
xor
in
dec
cmp
pop
push
ret
cmp
or
jno
cmp
pop
sub
sbbl
cmp
or
push
movb
sub
insl
dec
bound
push
xchg
inc
adcb
push
data16
sub
inc
add
add
orl
inc
outsl
aaa
jg
pop
dec
or
pop
cmp
loop
sbb
or
or
int3
inc
inc
xor
sbb
inc
push
pop
push
push
inc
lret
add
inc
dec
xchg
and
enter
push
add
dec
pop
sub
mov
sub
jne
loop
mov
movsl
test
dec
pop
jl
enter
dec
aad
or
sarb
stos
sub
sub
ror
or
pusha
leave
xor
int3
and
or
xchg
iret
fidivrs
sub
and
jl
cmp
or
or
pop
mov
and
inc
add
jmp
ljmp
cmp
inc
ret
pusha
xchg
cmp
push
pop
in
and
sub
shrl
push
pop
sub
or
leave
daa
push
stos
adc
mov
inc
repnz
add
sub
lret
out
les
lods
sar
xchg
addr16
orl
in
push
mov
mov
push
push
lahf
stos
cmpsb
sub
in
cli
dec
cmp
loop
stos
mov
dec
sub
push
ret
or
sbb
xor
ret
sub
addr16
xchg
sbb
jge
dec
fldcw
pop
xor
adc
push
and
mov
and
insb
pop
dec
fcmovnu
add
cltd
sub
jmp
fwait
dec
push
and
aaa
mov
fidivrl
xchg
inc
push
push
out
mov
or
in
mov
in
insb
push
das
add
jno
mov
mov
out
testb
and
lcall
add
dec
jbe
and
movsb
push
adc
scas
lahf
mov
xchg
sbb
imul
aaa
dec
inc
push
shlb
stos
stc
add
cmpsb
lahf
cmp
dec
jle
mov
pop
mov
popf
shll
js
sub
or
aas
shlb
pop
ror
sub
arpl
negb
addr16
dec
add
jecxz
popa
mov
cli
lods
push
repnz
push
push
imul
lea
xchg
dec
xchg
fnsave
mov
lcall
add
mov
addr16
outsb
mov
stos
inc
xchg
pop
fisubrl
jl
shl
into
dec
gs
mov
mov
xchg
dec
loopne
mov
sbb
jne
jle
fsubs
mov
jecxz
jno
push
out
psrlq
and
dec
mov
xor
fistpl
jo
gs
out
jmp
inc
dec
mov
and
imul
push
pop
mov
dec
adcb
cmp
sti
mov
out
jl
imul
cmp
sbb
cmpsb
dec
loop
push
aad
daa
cmp
push
sbb
push
dec
stos
jo
iret
dec
pop
inc
dec
out
dec
out
lcall
mov
dec
mov
in
mov
lea
pop
add
sub
push
pusha
adc
dec
add
jbe
ja
ret
dec
lds
test
popa
loopne
xchg
std
mov
and
push
adc
xchg
dec
cmp
jae
cli
pop
dec
subl
jns
mov
mov
ja
adc
push
lret
push
imul
cli
test
cli
add
arpl
ljmp
pop
cli
add
aad
stos
mov
enter
ljmp
cld
mov
mov
fsubrl
inc
stos
adc
cmp
cmp
dec
and
enter
pop
aam
xor
outsb
stos
sbb
pop
loopne
enter
sub
fmul
mov
and
pop
add
sub
mov
fs
sti
or
test
jg
fcompl
xor
jnp
and
inc
mov
push
xchg
mov
movsl
sub
iret
cltd
sbb
cli
dec
xchg
dec
loop
sub
dec
cmp
fisttpl
scas
pusha
lret
fnsave
or
add
shlb
sbb
cltd
sub
dec
test
data16
ds
and
cmp
cli
popa
pop
clc
inc
dec
pop
inc
or
neg
push
inc
or
iret
xlat
add
dec
pop
or
sbb
and
xor
fidivs
ret
movl
daa
jle
bound
call
ret
mov
mov
std
jmp
fisttpll
ja
rolb
retw
sub
inc
lods
aas
pop
ljmp
pop
out
mov
or
arpl
mov
inc
ljmp
fiadds
movsl
add
rolb
orl
or
bound
dec
call
pop
movsb
cltd
popf
loope
mov
sub
sbb
negb
jns
sar
les
ja
sbb
add
pop
and
ss
loop
mov
inc
test
pop
addr16
loope
dec
cmp
bound
inc
inc
cmp
fiaddl
daa
inc
dec
loope
enter
mov
cmpsb
adc
daa
dec
popa
and
add
in
pushf
pop
add
sbb
test
movsb
lret
mov
icebp
stc
imul
xor
ds
mov
jo
push
dec
lea
ja
not
mov
setne
inc
push
inc
lea
shl
bt
shr
xchg
btr
dec
or
mov
shr
cmc
mov
push
pushf
cmc
jmp
mov
mov
scas
pop
xorb
sub
push
push
jl
xor
roll
adc
pop
in
popf
call
mov
xor
jp
sbb
jae
iret
adc
repnz
aad
mov
push
xchg
movb
dec
lcall
mov
in
cmc
inc
test
xor
jnp
lods
std
or
das
cmpsb
pushl
cli
int
add
xchg
sbb
push
pop
push
sub
pop
cld
add
sbb
xchg
dec
cmpsl
out
sub
aaa
jmp
inc
ja
call
shll
mov
adc
in
sub
dec
push
cmp
sahf
shll
in
add
fcompl
cmp
pop
jp
cmp
out
gs
jmp
lea
ja
cmc
imul
call
lods
jo
movsl
pop
adc
sbb
cmp
imul
sub
jle
leave
sbb
push
sub
cli
nop
pop
xor
jo
cltd
cmp
or
sub
outsl
fsts
sbb
mov
mov
imul
test
adc
iret
dec
xor
pop
test
lods
or
or
pop
addr16
sarl
mov
test
pop
add
mov
in
mov
pop
add
jp
xchg
inc
xor
or
loope
mov
sub
fstpt
jmp
lret
sbb
mov
and
test
mov
add
push
movb
lea
jmp
stos
loop
int3
mov
popf
aaa
or
xor
lret
dec
xor
test
int
lahf
fidivs
xchg
in
mov
mov
jne
mov
mov
sbb
cs
mov
insl
push
shl
xor
imul
lret
jae
push
stos
or
add
movsl
daa
sbb
cmc
loope
ss
sbb
dec
stos
outsl
jecxz
imul
push
fcmovu
sub
sub
inc
ss
cmp
std
dec
pop
out
test
loopne
jb
push
clc
xchg
in
jbe
inc
inc
call
out
scas
mov
adc
out
lods
out
push
mov
xor
mov
xor
inc
sbb
mov
mov
pop
mov
jmp
dec
or
in
mov
mov
ret
jp
cmp
js
mov
pop
push
lret
mov
mov
mov
movsl
mov
cmc
ds
ret
adc
stos
mov
stos
scas
cmp
jo
xchg
ffree
rolb
sub
dec
fidivrl
aaa
mov
clc
xchg
mov
and
mov
test
cmpb
cmp
sub
loopne
mov
dec
mov
jecxz
sti
subb
insl
jnp
sub
ss
or
mov
adc
pop
xchg
fiadds
in
dec
ret
mov
repnz
out
cmp
pop
les
mov
mov
pop
xchg
lea
inc
dec
xlat
mov
movsl
dec
lahf
xchg
loop
push
push
iret
jnp
push
pushf
aas
push
roll
call
adc
insl
cmp
jp
cmp
movsl
xchg
jmp
call
pusha
mov
pusha
pushf
mov
pushf
lea
jmp
jl
out
push
mov
aas
sub
jnp
adc
sbb
dec
movsl
sub
shlb
xchg
movsl
adc
sub
call
div
push
mov
test
lcall
jecxz
in
inc
pusha
inc
jnp
sbb
mov
sbb
les
mov
cmpsl
sub
push
fcomps
popf
jp
aaa
mov
pop
push
pushf
pusha
pushl
ret
scas
cmp
daa
lock
outsl
pop
adc
sub
xorb
sbb
jne
push
ja
loop
rolb
push
jns
jmp
shlb
jo
inc
repnz
lret
xor
jecxz
js
test
loop
inc
xchg
aam
push
xlat
in
sub
or
mov
push
ret
jp
cmp
mov
xor
lea
je
btc
xor
bsf
xor
sbb
stc
shl
pushf
mov
call
jmp
lea
ja
push
jmp
mov
in
outsb
xchg
mov
sbb
insb
cwtl
inc
scas
pop
add
push
sub
push
data16
testl
push
arpl
jp
sarb
add
cmpsb
lock
cmp
in
dec
jb
xor
jno
adc
popf
pop
imul
adc
out
fstpt
mov
repz
insl
adc
sbb
inc
mov
outsl
repz
mov
jp
ss
shll
loope
bt
pusha
cmp
movb
jmp
sbb
setae
cmp
fsubs
cmp
jl
dec
xor
sub
xchg
andl
jmp
xor
xchg
das
mov
repz
out
xchg
subl
xchg
mov
push
mov
adc
pop
scas
jge
aas
add
mov
pop
push
and
pushf
in
xor
rorl
lea
call
push
pushf
lea
jae
cmp
jmp
pusha
call
xor
das
sahf
out
pop
lret
jne
jg
mov
mov
aaa
sbb
int
insb
hlt
ja
and
push
mov
xchg
push
push
sbb
mov
sbb
xlat
adc
gs
imul
sub
je
fidivrl
lret
push
xchg
bound
lods
cli
shrb
jmp
sub
jo
fs
ret
insb
aaa
outsl
cmp
cmp
pop
adc
sub
sti
jno
cli
les
cs
decb
mull
mov
pusha
movl
pushf
lea
je
jmp
xor
and
jecxz
or
fwait
jge
push
cli
fsubrp
testl
out
mov
out
mov
mov
outsb
push
mov
mov
out
lock
jmp
xlat
fsubrs
add
pop
scas
int
aam
pop
pusha
cmp
in
adc
inc
jp
outsb
fisubrs
cs
pop
ss
cmp
xor
jmp
xchg
lahf
scas
jns
enter
xchg
jp
xor
sub
xchg
push
cmp
loopne
lods
rorl
xor
arpl
pushl
mov
adcl
js
lds
arpl
add
les
out
and
xchg
or
xchg
dec
iret
jb
daa
es
cli
mov
out
inc
outsb
cli
lea
hlt
add
mov
outsl
insl
sbb
add
mov
xchg
clc
cli
push
dec
rorl
cld
out
or
xor
insb
dec
mov
inc
push
stc
push
mov
mov
les
pop
orl
lret
mov
pop
adc
xor
jo
mov
cwtl
push
xchg
hlt
popf
sbb
clc
fcom
pop
adc
dec
push
inc
adc
call
outsb
aaa
xor
jbe
sbb
out
pop
lea
in
pop
cwtl
in
inc
pop
aad
pop
sar
pusha
pop
jo
in
adc
xchg
add
add
cwtl
push
arpl
ficomps
out
ja
insl
or
repnz
test
insl
pop
xor
adc
dec
bound
push
pop
sbb
push
dec
lret
and
loop
ja
mov
lcall
loop
pop
shrl
stos
mov
or
ret
add
push
xor
or
sub
rclb
lock
adc
dec
xor
pop
mov
pop
mov
ds
ds
shl
js
aaa
mov
jge
mov
daa
cmp
sahf
rcrb
mov
lret
cld
xchg
mov
insb
adc
icebp
shlb
jbe
dec
pop
lea
outsb
dec
push
out
adc
movsb
jo
sub
jp
cli
jno
les
dec
mov
inc
jl
ret
gs
aas
cmpsb
inc
enter
push
es
ret
cmp
stos
mov
jns
xchg
cmp
adc
std
push
fnsave
ja
push
addr16
shll
mov
pop
rcr
shrb
mov
cmpsl
and
daa
ds
icebp
bound
pop
pop
and
sahf
subb
ret
dec
cs
mov
sti
ret
stc
int
push
push
mov
push
inc
enter
pop
xor
pop
rcrb
add
push
clc
inc
sbb
xor
mov
testb
jns
and
shl
js
push
icebp
mov
sub
stos
and
sti
xor
dec
jle
mov
jp
rorl
push
jno
dec
sub
inc
dec
out
sbb
ret
leave
cmpsb
cmp
imul
push
pop
xchg
lahf
xchg
mov
enclu
pop
sbb
and
lcall
lds
into
in
sbb
cltd
icebp
sbb
mov
mov
lret
cmp
or
in
cmp
mov
stos
xchg
xchg
mov
pop
aad
imul
jmp
xchg
pusha
gs
mov
push
outsl
cmpsb
scas
lock
inc
dec
push
testl
dec
popa
outsl
add
popf
movsl
ljmp
icebp
pop
mov
mov
add
stos
sahf
inc
sti
mov
roll
pop
jbe
mov
fs
push
push
pop
cmp
dec
add
scas
ret
add
ret
out
xchg
iret
in
sbb
sub
mov
in
mov
popf
mov
out
xchg
insl
in
inc
fdivrl
pop
push
sbb
cmp
es
push
mov
sbb
mov
into
pop
add
mov
push
addr16
add
sbb
mov
push
and
out
jecxz
cld
cli
jno
push
and
and
outsl
mov
sbb
lods
aad
xor
loope
call
lret
in
fimull
imul
fucomip
add
imul
stos
rcrb
cs
add
and
scas
fmul
lcall
pop
fnstenv
or
out
or
test
jmp
or
cltd
xor
mov
aad
ret
loopne
sub
lods
push
movd
or
inc
push
mov
push
divb
jno
xor
cmp
sti
scas
rcrb
pop
in
in
push
shlb
pop
call
pushf
mov
xchg
sahf
cmpl
xorb
xor
xlat
ja
outsb
cmp
std
fldcw
xchg
incb
mov
in
dec
sub
das
rcll
add
jno
stos
sahf
sub
fcompl
xchg
sarl
sub
add
mov
jb
cmp
sub
das
and
add
test
mov
pusha
jno
push
testl
push
das
ds
mov
sbb
mov
adc
sub
or
stos
mov
icebp
mov
lods
test
dec
dec
fnsave
cmp
adc
int3
cli
sub
and
cmpsb
add
out
mov
repnz
in
cmc
mov
mov
push
xorb
vandnpd
cmp
inc
mov
cmpsb
xchg
xchg
xlat
inc
aas
push
cmpsl
hlt
lret
out
mov
cmp
js
sahf
push
xchg
dec
pop
dec
jg
xor
sbb
jl
cmc
mov
mov
loop
cmc
dec
pop
xchg
push
stc
mov
js
inc
decb
ss
push
pop
mov
xor
and
js
xor
scas
rolb
or
add
sbb
loop
push
add
inc
clc
stos
dec
cmp
aad
outsb
aam
imull
lahf
stos
xor
inc
insl
aas
inc
cs
xchg
mov
fnstenv
jge
scas
mov
mov
out
in
add
jmp
pop
jge
andb
jge
mov
adc
jg
sahf
adc
shlb
jno
outsb
push
shll
aaa
inc
cli
std
aam
cmc
shlb
cltd
std
ret
xchg
jg
in
pop
sti
inc
nop
aaa
xchg
test
leave
imul
test
and
jmp
push
pop
pop
leave
test
pusha
dec
lret
jb
test
dec
pop
push
dec
dec
lock
pushf
data16
push
jbe
adc
movsb
xchg
push
stc
sub
std
xor
cmp
addr16
cwtl
mov
or
cbtw
lods
mov
xchg
add
xchg
cmp
rorb
arpl
pop
daa
out
push
xchg
pop
jno
adc
clc
push
subb
or
imul
xor
sbb
fsts
sub
inc
jle
xlat
test
enter
jge
lea
out
or
ja
jns
hlt
mov
sbb
idivl
lahf
stos
loopne
hlt
lahf
xchg
clc
outsl
push
call
call
rcrb
movsb
int
inc
sbb
cmp
xchg
mov
inc
in
dec
or
sbb
push
shl
jmp
push
popa
jae
xchg
xchg
popa
add
scas
jns
cmp
addl
sub
scas
inc
mov
mov
fidivrl
mov
scas
lock
ret
pushf
or
lret
adc
popa
adc
pop
nop
xchg
jb
pop
mov
or
ficomps
and
cld
rorb
cltd
xchg
shrl
scas
xor
mov
dec
push
lock
push
push
mov
sti
aam
outsb
cmp
add
push
fsubrs
mov
ret
pop
pop
imul
pop
movsl
fsubrs
pop
cld
add
sub
add
mov
shrl
bound
mov
pushf
adc
jae
hlt
out
mov
cwtl
lock
add
adc
sbb
pop
or
in
jbe
imul
es
or
jp
mov
cmp
sub
pop
push
leave
xchg
loopnew
fstpl
mov
cmp
push
push
push
inc
lret
enter
push
fwait
ret
cmp
cmp
cmc
pop
cltd
aaa
push
mov
aaa
mov
mov
leave
mov
xchg
sub
out
or
inc
scas
std
repnz
adc
fstps
add
and
adc
push
or
mov
push
daa
xor
fdivs
push
fstpl
xchg
outsb
jne
ficoml
jmp
rorb
lahf
mov
push
mov
xor
xchg
add
scas
xor
push
add
sbbb
mov
es
mov
cmp
mov
mov
pop
repnz
inc
dec
fs
add
cmp
sbb
adc
mov
outsb
addl
mov
pusha
ja
xor
mov
fwait
enter
notl
pop
in
out
and
push
mov
test
adc
jecxz
cwtl
cmpsb
cmp
dec
push
sbb
inc
xor
mov
stos
stc
ret
xor
repnz
push
mov
addl
sahf
cmpsl
lahf
mov
dec
jp
jp
add
dec
push
push
add
adc
cmc
push
adc
mov
hlt
sbb
or
popa
movsb
out
xchg
jno
es
mov
mov
pusha
shll
xchg
push
dec
push
fisttpll
or
dec
cmp
aad
test
jno
lret
fsub
lods
sbb
inc
scas
push
xor
sbb
xchg
push
fistps
movsb
mov
loop
or
test
in
xlat
sub
dec
fidivrl
jnp
sub
xchg
sub
xor
mov
cmp
inc
sbb
jl
sahf
xor
movsl
lods
xor
xor
jg
pop
out
in
fildll
es
add
fbstp
lcall
pushf
and
xlat
xor
or
mov
jae
stc
sti
or
cmp
outsl
int3
mov
jmp
cmp
imul
sub
leave
jae
out
ja
and
xchg
stc
daa
cmp
mov
insb
rcll
dec
and
mov
sub
or
sub
xorl
cmp
adc
andb
test
mov
jmp
pop
mov
mov
jno
cmpsl
loopne
dec
inc
es
fs
icebp
add
push
icebp
and
scas
pusha
sbb
orl
push
push
lds
add
push
fbstp
or
jmp
xor
mov
daa
jg
adc
mov
xchg
insb
mov
sub
popf
adc
push
ret
into
sbb
loop
sbb
or
cli
dec
and
test
jb
int3
aad
rol
mov
adc
sbb
std
cmp
lcall
jb
fidivrs
xchg
mov
add
inc
in
cmp
xor
aad
mov
mov
mov
lret
pop
cmp
sub
aam
mov
fucom
pusha
push
mov
clc
mov
stos
mov
add
rcr
clc
push
dec
popa
lret
mov
or
shrb
sbb
adc
addr16
xchg
adc
and
mov
repnz
nop
lret
sbb
in
adc
add
pop
insb
add
dec
addb
inc
mov
lret
push
and
insb
loop
pop
push
mov
insl
daa
push
out
dec
rorb
xchg
rcl
lret
xchg
add
loopne
push
jae
mov
lcall
push
imul
xor
enter
in
mov
jp
rcll
cmp
popf
addr16
add
movsb
hlt
sarl
call
flds
ljmp
inc
xchg
inc
jae
lahf
nop
mov
jns
fucomip
dec
iret
sbb
cmp
fdivrs
ficomps
mov
dec
adc
mov
sub
mov
xor
add
cmpl
addr16
ret
jns
scas
or
arpl
mov
test
in
mov
outsb
jl
test
and
mov
or
mov
lea
into
dec
shll
inc
mov
mov
or
movsb
stos
pop
inc
leave
movsb
fiadds
adcl
sti
mov
mov
leave
sti
add
jo
sahf
ds
sbb
ret
dec
push
sub
fsubrs
xchg
xor
nop
cmpsl
clc
ret
imul
mov
adc
jge
out
add
cwtl
cli
in
je
loope
pop
dec
daa
out
inc
loop
int3
mov
movsl
add
nop
and
lahf
push
subb
pop
lret
and
fcmove
mov
es
xchg
shlb
out
clc
jl
mov
xchg
cmc
and
cmp
fmuls
testb
mov
repnz
sti
stc
cmc
jecxz
xchg
jo
cli
js
out
sbb
and
cmpb
cmc
int
pop
and
xchg
mov
add
push
fwait
rolb
push
insb
add
add
push
insb
inc
jno
mov
mov
pop
mov
jmp
or
mov
mov
pop
loop
cld
les
clc
jg
leave
add
inc
mov
mov
push
pop
or
mov
mov
push
testb
sub
lods
jle
sbb
ljmp
sbb
xchg
lcall
mov
or
xchg
pop
jmp
inc
mov
adc
or
mov
outsb
loope
mov
dec
push
mov
lods
inc
cmp
jo
in
cmp
pop
mov
mov
cmp
mov
movsl
scas
jno
and
xchg
loop
daa
cltd
ja
and
imul
fwait
xlat
push
mov
mov
addr16
gs
mov
inc
cmp
and
aaa
mov
push
out
xchg
icebp
mov
xchg
or
jnp
or
out
adcb
call
inc
insl
dec
movsl
jns
dec
icebp
call
pushf
jo
add
xor
call
out
aas
jnp
mov
adc
loope
add
adc
ds
jb
jmp
cli
sub
and
or
repz
xchg
mov
scas
jns
fdivp
dec
pop
and
xor
push
ljmp
clc
sbb
push
es
mov
inc
xchg
fists
repnz
sub
xchg
jnp
sar
mov
xor
lcall
and
adc
icebp
lret
cltd
pop
or
jmp
or
fbld
insb
mov
mov
mov
mov
divb
aam
or
push
sub
scas
mov
sti
sub
dec
std
mov
out
mov
popw
mov
dec
int
pop
out
jae
cmpsl
repnz
aam
sub
mov
dec
sub
sub
test
xlat
cltd
cmp
fisubl
jae
in
inc
int3
cmp
jne
mov
and
out
test
push
pop
push
adc
rclb
outsl
mov
mov
inc
into
jno
push
addr16
cltd
mov
pushf
pushl
mov
lea
inc
or
sbb
ficoms
pushl
inc
push
add
push
sbb
mov
adc
lahf
xorb
loope
icebp
pushl
jb
dec
push
cld
inc
adc
mov
clc
push
rol
enter
ror
pop
dec
orb
adc
decb
stos
mov
add
rclb
mov
inc
int
or
pusha
push
ss
lds
mov
gs
cld
int
cmp
xor
and
test
jl
inc
add
push
aam
and
mov
mov
loopne
rcll
pop
bound
inc
aas
sbb
push
ss
xor
fcomip
push
insl
fsubl
icebp
mov
orl
add
sub
jbe
sub
push
int3
xor
icebp
jo
fptan
push
mov
into
dec
es
jbe
xchg
or
popa
cmp
es
jb
and
outsb
jb
in
pop
xchg
jns
xchg
and
orl
loopne
shl
clc
jb
mov
inc
sti
movsl
jecxz
mov
repz
pop
loope
dec
jg
push
je
pusha
dec
out
xor
sbb
sbb
and
movsl
int3
xor
int
ss
push
sub
lds
mov
insl
movsl
jo
jmp
ret
jae
lock
outsl
in
jmp
xor
aaa
loopne
or
cli
or
pop
sub
clc
roll
add
fidivl
mov
shlb
iret
stos
inc
mov
sub
popa
lret
mov
xchg
lock
cmp
rcrl
arpl
mov
inc
sub
icebp
dec
jge
jl
sub
or
test
dec
das
rcl
loopne
pop
adc
sub
xor
mov
and
or
pop
push
jo
test
pop
dec
fwait
mov
push
or
adc
pushf
and
push
rorb
adc
mov
rorb
jbe
mov
xchg
je
xor
ds
fdivrl
jge
enter
dec
add
ljmp
jne
inc
cld
or
dec
rorl
decb
rcrl
and
push
pop
and
loope
mov
cld
lds
and
lcall
push
push
es
lret
iret
ds
leave
fidivrs
push
sbbb
inc
jle
sub
push
mov
jbe
sub
push
sub
in
sbb
pop
fxch
sahf
cmp
xchg
sub
push
enter
stc
mov
subl
cmovbe
dec
mov
out
lods
mov
mov
pop
push
sub
adc
jg
inc
aas
lds
inc
xor
test
mov
push
cs
pop
push
cmc
int3
aad
out
into
jae
lock
out
add
pop
sbbl
nop
push
jp
mov
nop
push
data16
mov
std
lea
aad
enter
into
lret
adc
pop
inc
lock
mov
jge
stos
sub
test
lcall
outsl
and
jp
mov
lds
fcoml
call
fbld
mov
in
fs
pop
or
or
or
out
cmp
mov
xor
inc
push
and
les
jns
and
stos
lock
or
je
xchg
sub
sub
mov
jno
cmp
dec
and
ds
xchg
xchg
or
push
cwtl
rorl
and
inc
dec
mull
adc
xchg
sub
fldcw
adc
cmp
movsl
pop
iret
cltd
push
mov
xchg
fidivs
outsb
fcoml
fisttpll
pop
sbb
sub
stos
fstpl
in
sahf
push
cmc
nop
sbb
or
or
test
shrb
ljmp
cmp
xor
jne
leave
inc
push
daa
or
shrb
fnsave
std
lahf
es
fisttpll
or
jbe
int
sub
mov
mov
inc
out
test
fidivl
adc
xor
call
cmp
repnz
pop
pop
adc
jg
jb
push
fmull
jae
sbb
popa
sub
push
shlb
pushf
mov
cmp
or
aam
mov
or
ljmp
outsl
adcb
call
add
and
mov
xlat
inc
xchg
jb
push
out
mov
jne
lcall
test
ret
fsubs
mov
cli
std
xor
add
andb
hlt
lret
xchg
jge
adc
stos
xor
mov
sbb
decb
or
pop
inc
std
or
pop
jbe
mov
aam
movsb
add
imul
cmpsb
jle
inc
sbb
pop
and
cld
into
mov
popf
cli
arpl
lods
in
or
push
xlat
mov
or
inc
outsb
pop
add
arpl
lret
jl
and
into
outsb
add
inc
sbb
arpl
mov
push
add
or
nop
xchg
mov
and
adc
jp
jnp
rcrb
xchg
sbb
stos
xchg
add
and
xchg
rcl
mov
mov
rcrl
xor
rcl
dec
mov
mov
in
cld
nopl
addr16
push
mov
imul
loope
movsb
jl
cmp
xlat
movsl
dec
inc
jp
pop
popf
xlat
out
fstps
fwait
cmp
pop
outsl
add
lds
xchg
fsubrl
push
nop
cltd
cmp
outsb
stos
lock
push
stos
push
cld
or
xlat
or
adc
test
push
clc
stos
mov
and
shrl
cmp
xor
aam
int
inc
stos
pop
pop
inc
mov
push
cmpsl
cs
xchg
stos
ss
fadd
lahf
cld
jne
ret
push
pop
lds
jno
mov
inc
push
das
jno
jbe
mov
es
fildll
adc
mov
mov
push
pop
icebp
xor
cmc
push
dec
jg
test
icebp
cmpl
int
xor
imul
adc
or
test
jnp
xlat
jmp
xchg
sub
loope
movsb
jmp
and
movsb
leave
sub
cmp
idiv
adc
rcrl
jbe
mov
fcmovu
push
call
xchg
sbb
xor
js
aam
in
repnz
mov
sbb
or
mov
stc
sub
lea
mov
fcmovne
push
xor
push
ficomps
lea
mov
popf
outsb
dec
xchg
shlb
pop
xor
scas
dec
mov
mov
scas
xchg
and
cmp
lret
jge
add
add
pop
pop
cmp
xchg
insb
sub
mov
push
dec
cmp
loope
into
add
in
and
xchg
xchg
sbb
pop
gs
gs
mov
jnp
xor
rcl
fists
pop
jae
in
je
sbb
adc
adc
test
xchg
movsl
mov
cmp
aad
mov
adc
mov
jge
xor
sbb
enter
pusha
push
lea
jmp
push
sbb
dec
fsts
add
mov
in
ja
xchg
ret
scas
inc
lds
bound
xchg
xlat
xchg
loope
cmpsl
int3
or
int
push
enter
sbb
xchg
mov
cmpps
ret
insb
jnp
or
push
mov
mov
aad
or
push
repz
xor
push
sub
pop
pushf
outsl
or
sbb
sahf
mov
inc
and
pop
jae
dec
pop
jo
and
shlb
scas
ja
lds
mov
jp
sbb
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
nop
icebp
adc
xor
insl
adc
xchg
loope
cmp
pop
add
mov
ljmp
and
jnp
push
jo
sbb
push
fisubl
xchg
ss
ljmp
stc
cli
sbb
mov
sar
in
mov
adc
mul
lret
repz
push
sub
subl
daa
ja
mov
mov
bt
bt
cmpb
call
ss
mov
push
imul
xchg
xchg
inc
es
mov
jno
xchg
in
mul
js
push
fwait
int
xchg
inc
jecxz
and
ja
in
test
int
mov
aad
add
int
mov
jecxz
adc
push
out
sub
aas
popf
fmuls
pop
imul
xchg
mov
xchg
mov
jmp
adc
mov
pop
loope
imul
adc
mov
out
mov
data16
or
mov
cli
mov
addr16
xor
lret
sahf
xchg
inc
sub
out
aaa
std
lret
lcall
mov
mov
rcl
and
jecxz
xlat
in
aas
push
popa
jp
sbb
lds
sbb
cmp
ss
fisttpll
xchg
subl
les
frstor
test
je
inc
jns
inc
lea
test
jmp
and
insb
pop
in
dec
mov
pop
test
cmp
test
push
pop
cmp
call
lret
gs
push
loopne
enter
loopne
ffree
ret
aam
jbe
adc
ss
jo
shlb
and
sbb
stos
lock
insb
adc
sbb
pop
inc
pop
filds
addr16
shr
imul
in
xor
push
or
popa
cmp
mov
jae
pop
gs
fsubrl
insl
sub
add
push
cmp
xchg
mov
or
mov
cmp
mov
daa
enter
into
add
and
push
cld
dec
pop
imul
out
dec
mov
and
adc
push
ret
xlat
pop
lret
xchg
mov
shll
fwait
daa
fcoml
pop
insl
pusha
dec
xor
mov
psubusw
insl
call
cwtl
jmp
jp
sbb
movsb
adc
rol
sti
add
call
xchg
shrd
stc
push
rol
pushf
mov
call
push
dec
inc
dec
dec
xor
cs
insb
add
mov
and
sub
das
push
jbe
xchg
js
or
sbb
xchg
iret
loopne
xor
pop
arpl
xchg
mov
in
add
shr
pop
lods
bound
xchg
xor
add
out
das
mov
stc
decl
cmc
stc
xchg
push
cmp
aad
sarb
lcall
sbb
xchg
mov
push
cmp
lahf
out
push
jne
inc
pop
fisubs
dec
sbb
or
pop
int3
jp
sbb
adc
mov
scas
nop
mov
mov
pop
dec
cmc
test
clc
dec
or
out
loop
fcoml
pushf
ja
push
lock
sbb
add
sbb
stos
aaa
lahf
pop
pop
jno
popa
pop
ljmp
add
push
icebp
movsb
lahf
adc
sbb
push
ror
jo
imul
cmp
aam
test
jp
adc
pop
sahf
pop
mov
xor
and
dec
movsb
popf
enter
cmpsl
mov
mov
jg
and
test
insb
push
mov
cs
lahf
test
test
dec
insl
cmp
cmpsb
pop
jo
nop
cmpsb
fdivp
pusha
push
pop
sub
cltd
mulb
xchg
bound
mov
sbb
mov
and
por
add
sbb
daa
lea
ljmp
push
loope
mov
lea
js
pusha
lea
call
call
movl
movl
pushl
mov
push
push
pushl
ret
dec
sbb
mov
loopne
negb
push
repz
add
sbb
mull
sbb
fsubl
jne
or
cwtl
mov
faddl
push
leave
fsubr
mov
fwait
push
dec
fldl2t
mov
lea
adc
std
fwait
int3
popa
cmp
pop
incb
movsb
fs
adc
xor
mov
gs
jbe
push
push
cltd
mov
nop
xlat
xor
decb
xchg
gs
mov
call
mov
mov
test
add
test
clc
test
movl
call
and
shrd
movb
mov
sbb
rol
bt
shr
lea
sbb
movsbw
bsr
mov
clc
or
push
lea
je
btr
rcr
sbb
add
xor
sub
sub
shr
neg
clc
pusha
mov
rcl
btc
bswap
test
add
test
add
add
test
btc
jo
btr
mov
jmp
jnp
stos
jno
fildl
jb
mov
rdmsr
sbb
jmp
inc
test
fldenv
js
lret
cld
pop
loop
bound
and
and
add
xor
pop
int
jl
dec
inc
mov
stc
loop
add
out
dec
fwait
rclb
cli
dec
pop
cmp
jo
and
and
xor
mov
incb
shl
idivl
jmp
dec
and
ja
test
iret
xor
pop
cmp
cmp
outsl
test
mov
adc
jp
adc
add
dec
push
repnz
mov
inc
sub
jl
lret
or
imul
xor
jl
insb
scas
mov
lret
or
add
bound
jecxz
inc
stos
mov
pop
xor
mov
ljmp
addr16
out
pop
sahf
inc
or
test
inc
stc
scas
lahf
repnz
cmp
mov
mov
and
sub
lods
filds
test
aam
jmp
sti
fstps
push
mov
push
jbe
dec
imul
loope
les
js
cli
stos
dec
out
jl
sbb
pop
and
push
int3
jle
and
xor
rorb
push
sub
pop
adc
adc
push
stos
popa
mov
aaa
mov
jno
pop
xor
dec
adc
add
int3
dec
loop
inc
dec
imul
sub
sbb
aad
stos
jne
popl
mov
and
mov
bound
jl
or
or
test
add
ficompl
ret
and
aaa
aam
pop
out
scas
push
lret
inc
dec
mov
mov
xor
mov
add
sub
mov
out
or
inc
adc
or
cmp
or
das
pop
xchg
or
jg
loop
xor
das
and
sub
and
daa
dec
cmpb
sbb
cld
out
xor
ret
leave
enter
cmp
sahf
and
out
inc
jmp
mov
sahf
push
jg
pusha
rol
mov
icebp
xchg
or
cmp
in
inc
mov
lret
push
adc
adc
mov
sub
cli
repnz
loopne
dec
sbb
dec
out
daa
and
cmp
sbb
mov
lret
inc
xor
sub
dec
clc
out
imul
and
cmp
mov
loop
xlat
and
cwtl
fldl
dec
cmp
jo
les
out
popa
xchg
inc
cmp
pop
cmp
add
filds
inc
hlt
sbb
adc
fsts
in
loope
dec
loopne
out
cmp
dec
mov
in
rcl
fbstp
imul
iret
add
xor
sub
je
arpl
or
sub
mov
daa
cld
pop
fistps
imul
cmpsb
and
gs
in
lods
xor
sub
xchg
fwait
imul
mov
mov
enter
add
cmp
out
ficoms
cmp
scas
jecxz
in
sahf
insl
add
subl
mov
xor
pop
aas
jo
fisubs
pop
dec
xchg
icebp
push
cmp
leave
int
cld
push
test
rcrb
daa
push
inc
fimuls
cmp
lods
and
iret
inc
into
cli
lods
push
xchg
and
fmulp
inc
and
dec
lret
cmp
lods
outsl
and
dec
xchg
dec
xorl
fcoms
add
dec
sub
mov
into
pop
dec
or
lds
dec
test
inc
movsb
pop
or
rcl
inc
push
mov
dec
addb
and
mov
xchg
arpl
or
mov
aaa
pushf
arpl
arpl
xchg
pop
cwtl
cmp
stc
dec
loopne
push
sbb
enter
filds
inc
add
popa
jbe
int
into
stos
fmull
adc
adc
les
cwtl
filds
jmp
scas
jmp
mov
scas
add
pop
or
pop
pop
mov
cmp
sarb
mov
inc
cltd
and
int3
out
int
inc
addl
and
fsubs
iret
mov
mov
mov
sbb
add
mov
sbb
cmp
mov
mov
mov
les
es
stos
inc
data16
add
sub
adc
rclb
push
mov
fdivr
and
dec
push
repnz
push
inc
push
pop
and
fs
sbb
popf
aam
andb
loope
and
cwtl
clc
rorb
jg
sub
mov
sub
pop
ljmp
movsb
and
mov
inc
aas
ret
pop
dec
jecxz
jmp
inc
imul
ret
das
and
arpl
stos
push
aas
inc
ds
inc
xchg
ret
and
ds
outsb
jl
das
dec
aas
mov
lret
adc
pop
xor
jp
push
movsl
dec
dec
lods
in
dec
mov
sub
rolb
or
jecxz
int3
inc
ljmp
cmp
cli
arpl
scas
loopne
and
bound
sbbb
dec
sbb
jne
shll
jecxz
hlt
jbe
iret
jmp
in
sti
daa
push
sub
les
mov
inc
or
push
mov
dec
mov
dec
divb
push
inc
fiaddl
insl
push
push
cmp
cmp
mov
enter
aas
sbb
xor
cli
pop
ror
xchg
aaa
lret
mov
inc
icebp
mov
vshufps
push
fcomi
add
or
push
jb
mov
orb
push
pop
jmp
fsubrs
rolb
gs
jno
mov
or
add
inc
enter
or
dec
adc
ljmp
stos
inc
jmp
adc
insl
pop
lret
nop
push
sbb
movl
repnz
inc
dec
xor
mov
jo
into
mov
sub
jecxz
aad
xchg
and
arpl
add
fiadds
leave
push
cmp
fsts
push
and
mov
and
adc
in
push
inc
dec
bound
and
inc
xlat
bound
lods
xchg
push
sub
repz
call
dec
cmp
push
ds
jo
sbb
out
popa
push
fcos
inc
data16
rcrl
mov
pushf
in
in
jns
or
dec
dec
dec
pop
add
arpl
jb
dec
out
mov
iret
cmpsb
out
xor
dec
outsb
xor
cmpsl
test
and
cmp
nop
test
add
arpl
push
jnp
insb
lret
ror
inc
or
insb
sub
xchg
fs
add
inc
shlb
lret
add
mov
cmpsb
mov
or
mov
or
gs
sub
pop
imul
repz
test
jmp
outsb
push
dec
das
test
push
test
jne
fwait
daa
cwtl
test
cld
jmp
fdivrs
test
daa
mov
mov
add
mov
int
cli
insb
pop
push
outsl
shrl
inc
push
pop
icebp
insb
inc
xor
cmpsl
and
push
shl
imul
adc
mov
fwait
or
xchg
dec
jge
adc
ss
nop
inc
cmp
dec
stc
and
xchg
popa
xchg
mov
xchg
cld
imul
mov
leave
mov
cwtl
mov
dec
or
and
outsb
sub
scas
push
inc
stc
xchg
push
mov
aam
and
mov
fbld
mov
xor
add
inc
ja
xchg
push
inc
mov
dec
cmpsl
movsb
je
xchg
stos
sub
out
enter
sbb
sub
mov
cltd
dec
call
or
mov
mov
dec
pop
cmovs
into
ret
push
inc
pop
in
or
js
das
or
push
sub
jns
nop
ljmp
sub
dec
adc
daa
or
testl
ret
lahf
mov
push
inc
and
loopne
fucomi
or
push
imul
add
or
shrl
out
add
cmp
dec
out
lock
add
and
inc
gs
call
out
sub
xor
test
jb
mov
stc
out
fsubs
loop
lcall
mov
cltd
cmp
jg
in
inc
push
orb
in
or
inc
test
fmuls
mov
sub
lret
push
pop
mov
lods
or
dec
cmp
add
repnz
push
mov
and
sub
pop
int
or
ficomps
xchg
and
mov
mov
and
popf
sarb
lods
jg
inc
ja
mov
sub
leave
test
aaa
nop
outsb
daa
hlt
inc
dec
cmp
in
dec
test
roll
mov
pop
pop
and
scas
fcomps
or
dec
sub
jmp
lret
sbb
mov
adc
movsb
and
pop
sbb
pop
and
push
jg
or
sbb
cmp
ljmp
imul
ret
mov
or
outsl
inc
in
roll
add
test
xchg
jge
lcall
sbb
sub
mov
xchg
in
iret
mov
push
mov
into
inc
jl
fs
cmpsl
and
mov
lea
ds
gs
jo
gs
xchg
jb
xchg
gs
push
hlt
dec
mov
es
jbe
jge
mov
gs
sbb
in
sbb
mov
int
lret
mov
dec
dec
test
shl
jb
pop
dec
cld
mov
test
dec
cmp
addr16
jne
sub
xchg
mov
and
mov
je
mov
sbb
je
mov
dec
or
mov
scas
jmp
pop
dec
mov
jbe
adc
sbb
xchg
cmp
inc
push
lds
dec
dec
pop
and
or
push
gs
sub
pop
mov
sub
and
ret
dec
cmp
idivl
cmp
mov
leave
xlat
mov
add
add
or
inc
inc
sbb
jmp
rorb
les
test
add
add
out
shl
dec
jecxz
pusha
inc
pop
loopne
in
jg
inc
inc
call
add
xor
imul
push
dec
nop
lods
ret
iret
inc
insb
sahf
mov
and
xchg
mov
addr16
adcb
call
jne
or
ljmp
push
mov
jle
mov
ss
sbb
sub
sbb
ret
in
in
ret
inc
in
and
and
das
push
icebp
stc
fcmove
sbb
jb
ds
or
mov
out
lock
repz
dec
adc
addr16
inc
inc
jmp
xlat
imul
inc
ljmp
es
daa
es
dec
in
xchg
dec
cmp
push
cmp
andl
cltd
add
pushf
shlb
test
cmc
les
pop
int
jno
sahf
in
daa
add
sbb
and
xlat
mov
and
in
daa
aam
out
push
out
lock
inc
push
lods
or
xchg
data16
xor
mov
int3
push
cs
sub
inc
or
and
or
movsl
icebp
fs
dec
mov
adc
sbb
jp
cltd
and
and
imul
fimull
int3
cmpsb
enter
fimuls
push
test
pop
cmpsb
push
rcll
test
cmpsb
repnz
or
mov
scas
int3
adc
dec
and
push
cmpsb
adc
inc
stc
dec
cmpsb
les
imul
dec
xor
and
adc
pop
sbb
hlt
add
stos
movsb
testb
adc
or
push
sub
push
aaa
shrl
push
es
ds
cltd
inc
cmpsb
dec
int
pop
mov
stc
stos
fcmovu
or
leave
cwtl
test
add
push
les
add
pop
adc
jg
dec
push
xlat
mov
pushf
mov
rol
mov
pop
pop
ret
pop
dec
xor
add
out
mov
sub
and
cmp
andb
mov
ret
add
out
mov
insb
movsb
cmp
dec
dec
int3
push
test
call
and
sbbb
lea
negl
xor
fsubrl
xchg
mov
add
sbb
jne
cld
sti
aam
repz
fisubs
int3
dec
cltd
mov
pop
inc
cltd
aad
sbb
int
daa
pop
xlat
cmp
and
fwait
out
sub
daa
not
jle
dec
das
lret
cs
call
call
dec
push
daa
sarl
jp
push
pop
mov
in
pop
pop
daa
fildl
loope
out
and
leave
mov
out
inc
xchg
jb
adc
sub
dec
or
inc
ret
daa
pop
ret
mov
adc
in
and
in
xor
fsubrl
push
out
imul
lahf
pop
push
out
cmp
addr16
lods
sub
data16
fstps
add
cmpsb
loope
movl
inc
inc
cmp
iret
shll
fucomip
jno
test
aad
pop
cltd
es
into
mov
ljmp
push
push
test
xor
leave
sub
adcl
cmp
xchg
dec
xor
stos
cli
mov
mov
sti
or
mov
and
js
loope
popa
mov
sub
cmp
pop
xchg
mov
stos
into
or
push
add
add
adc
sbb
dec
sub
addr16
jb
mov
movsl
lea
mov
cmpsl
es
daa
cli
lahf
ljmp
cmpsl
fimull
stos
lret
ljmp
dec
daa
fldenv
jne
mov
stc
inc
in
sbb
stc
fmul
ficoml
ss
divb
imul
pop
cmpsb
cmpsl
xor
mov
jo
out
dec
cmp
mov
cs
jbe
das
mov
pop
movsl
call
insl
ficoms
add
push
iret
roll
sub
mov
pop
adcb
mov
pop
xlat
inc
jo
fcmovbe
jmp
pop
arpl
sub
ret
add
gs
mov
cmpsb
push
gs
aaa
push
les
pop
pop
mov
xor
xchg
xor
ficoml
push
mov
clc
or
sub
idivb
mov
sbb
add
sub
hlt
scas
lret
in
xchg
jns
xor
mov
repnz
pop
into
cmp
xchg
out
sub
into
adc
fs
enter
cs
xchg
or
sti
pop
lret
cmp
pavgb
enter
push
adc
dec
mov
cmp
cmp
out
lds
test
daa
or
out
cs
mov
inc
sbb
stos
or
pop
out
cmovns
fisubl
out
aam
sub
es
cwtl
and
addr16
xchg
call
lcall
pop
xor
mov
mov
dec
cmp
adcb
inc
cli
add
dec
sub
pop
stos
aad
add
dec
daa
cmp
aaa
lods
sub
outsb
sub
mov
bound
call
cmc
loopne
sub
pop
xchg
mov
aam
call
cmp
xor
inc
add
xchg
xchg
fwait
dec
mov
jg
cmp
arpl
add
add
push
dec
insb
testl
into
sub
pop
adc
movsl
and
mov
lods
or
mov
ja
in
iret
rcrb
mov
sub
add
xor
and
add
data16
xchg
jl
mov
lea
push
dec
mov
fwait
xor
loopne
adc
jle
je
stos
adcl
add
cmpsb
dec
adc
sub
sub
mov
sub
ljmp
test
mov
mov
inc
jns
rorl
xchg
and
iret
out
popa
rol
scas
lock
pop
sar
dec
dec
mov
sbb
add
mov
or
enter
int3
fisttps
sbb
stos
imul
daa
orb
test
pop
mov
into
cmpsb
imul
mov
or
push
test
mov
dec
in
adc
pop
dec
dec
inc
push
outsl
inc
mov
movsb
daa
leave
dec
or
sarl
push
ret
loop
inc
mov
cmpsl
push
in
inc
jl
cli
cmp
or
sbb
jle
inc
push
mov
rcrl
sub
outsl
out
addl
or
dec
jmp
mov
ret
enter
imul
enter
add
and
outsl
stos
sub
xchg
cmpsl
lock
test
jns
test
daa
pop
dec
out
rorb
cmpsb
mov
daa
push
mov
ljmp
ret
push
jle
rcr
mov
cmp
mov
loop
popa
pop
insb
push
push
rolb
sub
push
es
loopne
xchg
fdivl
mov
dec
pop
ret
dec
fnstcw
repz
nop
inc
cs
jmp
sub
and
lret
pop
dec
cmc
rorl
std
pop
adc
pop
cmp
enter
jmp
jne
out
call
sbb
push
xchg
out
or
jmp
mov
mov
cli
int
lret
mov
inc
sub
dec
add
push
lock
jo
jns
dec
test
iret
jmp
xchg
loopne
and
loopne
ljmp
outsb
push
fcompp
lds
dec
pop
adc
rcl
xor
stos
pop
pop
cmp
add
mov
leave
rolb
cmp
imul
sub
iret
enter
and
mov
and
inc
xchg
adc
jl
cs
lret
daa
add
pop
mov
jns
or
sub
out
sbb
cwtl
mov
dec
mov
cmpsb
addb
sbb
scas
lret
hlt
gs
xchg
push
mov
dec
les
and
aam
mov
sub
jb
test
xor
bound
dec
mov
aaa
pop
leave
scas
xchg
insb
pop
xor
mov
shl
daa
divb
sub
fcmovb
dec
adc
hlt
cmpb
mov
imul
stc
sub
adc
ret
fildll
movsb
ret
fsubs
imul
cli
aas
sar
and
jbe
imul
subb
lock
pop
lds
push
ret
movsl
in
fucomip
mov
lods
and
popf
daa
add
sub
imul
icebp
enter
scas
push
pop
icebp
pop
inc
add
mov
xor
dec
or
iret
mov
daa
fisttpl
insl
adc
mov
sbb
test
pop
in
and
mov
test
pop
ds
mov
nop
icebp
cmp
outsl
iret
ret
fildll
sbb
push
out
dec
out
xor
inc
add
fnstenv
add
in
aaa
subb
stos
xorl
jmp
test
inc
data16
cli
insl
mov
imul
add
cld
rclb
mov
cltd
pop
mov
push
adc
or
leave
clc
loopne
pusha
loop
mov
ficoms
dec
mov
popa
addr16
push
call
dec
fs
jbe
insl
pop
ja
mov
jmp
int3
xchg
nop
xchg
sbb
jmp
dec
jns
jmp
pop
inc
imul
mov
inc
and
sbb
in
jg
ficoms
loop
rclb
fs
enter
orl
inc
int
cmpsb
imul
shr
andb
ret
push
rcrb
pop
xor
inc
test
pop
lea
lret
mov
xchg
inc
inc
stos
dec
dec
xchg
daa
dec
fimuls
mov
mov
pop
mov
lods
pop
inc
fabs
inc
icebp
lahf
aam
xchg
inc
into
outsb
or
outsb
or
lret
lret
cmc
xchg
lds
sub
imul
clc
push
push
jno
push
xor
in
push
out
inc
adc
test
testl
adcl
dec
out
add
je
es
inc
adc
dec
insl
dec
mov
sbb
fildl
jmp
mov
loopne
add
inc
enter
pop
sahf
pushf
cmp
adc
dec
inc
push
stc
adc
dec
imul
dec
ja
xchg
xor
ret
dec
jg
sbb
sub
movsl
pop
push
xchg
xor
push
pushf
and
push
push
jb
dec
cs
lcall
xor
push
jg
pop
cmp
push
inc
pop
lock
pop
mov
inc
scas
push
xor
inc
mov
int3
cs
push
cmp
mov
cltd
sub
cmc
movsl
cmp
cmp
ss
xor
or
in
or
cs
push
add
pushf
orb
cmpsl
ret
jb
fwait
mov
dec
xchg
add
dec
call
adc
xchg
ja
bound
dec
imul
sub
sbb
into
mov
int
in
pop
mov
sbb
stos
mov
js
dec
add
pop
fsts
mov
mov
adc
inc
test
sbb
inc
int
and
les
aam
sbb
ret
orb
xchg
mov
shr
and
push
jecxz
nop
gs
lret
jnp
mov
mov
daa
loope
imul
lods
cmpsb
cmp
sti
fwait
jle
push
cmp
ss
cmp
dec
add
in
pop
add
mov
xchg
fmuls
int
popa
ljmp
push
test
jb
sub
iret
je
outsb
sub
jmp
pushl
sub
mov
adc
jg
sub
mov
fdivl
mov
dec
inc
loopne
ljmp
loopne
lds
inc
inc
dec
push
inc
inc
cmpsb
or
roll
inc
and
jle
sub
filds
sbb
jp
mov
add
cmp
fisttpll
ret
orps
mov
pop
add
mov
mov
add
inc
mov
dec
ret
sub
pusha
jl
sub
aad
jmp
sub
adcl
add
gs
mov
aam
xor
leave
daa
push
sub
int
loop
sub
sub
mov
push
call
xchg
filds
inc
or
movups
ss
xlat
add
shrl
cmp
add
jp
das
lcall
out
mov
stos
push
ret
int
xor
shl
cmpsb
adc
cmp
and
mov
and
add
fisubrs
sub
push
push
repz
mov
jmp
add
adcb
lret
inc
adc
repnz
movsb
sub
and
pop
aas
sub
push
inc
cmpsb
leave
push
lahf
mov
pop
lret
insl
pop
lret
fmulp
add
xchg
fimuls
ljmp
mov
leave
fsubl
mov
mov
cwtl
xchg
xchg
mov
sub
fsubrl
jb
cmp
cli
shll
imul
leave
pop
insb
les
cmp
mov
xchg
add
push
lret
cmp
or
xchg
inc
cmp
dec
faddl
or
jecxz
enter
mov
jb
pop
mov
sub
or
std
adc
mov
jg
loope
sub
pop
repz
sbb
dec
int3
cmp
mov
loop
ud2
nop
insl
movsl
flds
lret
inc
lret
sub
and
cli
and
int
ljmp
stos
inc
add
jmp
xchg
inc
jno
dec
test
out
jg
int3
xchg
js
mov
push
stc
fcmovnb
enter
jmp
jle
push
add
dec
pusha
into
dec
inc
rolb
lret
jp
mov
or
dec
jg
fsubrl
stc
es
negl
enter
and
cmpsl
aam
daa
or
mov
ret
sbb
adc
inc
mov
pop
je
scas
push
jp
sahf
sub
call
dec
mov
push
cmp
inc
inc
movsl
loopne
mov
pop
sbb
dec
repz
inc
pop
and
ljmp
xchg
inc
stos
cmp
ficoml
loopne
cmp
fsubl
fisubrl
pusha
dec
pop
test
adc
repnz
or
cmp
push
das
popf
cs
int3
inc
inc
xchg
mov
push
dec
sub
fwait
orb
addr16
cli
adc
pop
dec
mov
mov
mov
dec
mov
ss
xor
jg
push
repnz
jno
and
out
mov
inc
pop
push
nop
mov
mov
lds
mov
std
repnz
sub
call
or
pop
sub
and
cmc
dec
cwtl
and
jmp
call
jae
cmp
dec
cmpsb
inc
add
pop
std
into
addb
in
or
cmp
inc
or
dec
imul
mov
sub
inc
call
pusha
mov
inc
lcall
pop
into
orb
xor
shlb
fistpl
sbb
clc
sbbb
cmp
iret
xchg
test
pop
movsl
sub
mov
jae
inc
aas
mov
add
push
dec
xor
xor
test
icebp
inc
aas
or
cmp
rcr
and
jns
cmc
or
jmp
inc
mov
push
push
mov
cmpb
lcall
dec
out
push
pop
pop
dec
pop
lret
out
push
xlat
pop
leave
inc
and
adc
mov
pop
arpl
xlat
adc
and
add
push
loop
jnp
test
ljmp
dec
lret
xchg
fistl
lods
dec
push
fwait
push
leave
cmpsl
mov
add
pusha
mov
stos
jecxz
add
dec
xchg
fnstenv
nop
cmp
adc
xor
insb
imul
ljmp
dec
pop
cmpsl
pop
push
mov
sub
jg
pop
xor
sbb
dec
or
pop
sbb
sub
nop
ljmp
shl
jg
or
xor
sbb
add
add
inc
pop
jmp
pop
js
fwait
inc
mov
sub
lret
stc
xor
dec
inc
add
es
dec
enter
add
mov
mov
mov
or
adc
call
insb
adc
dec
mov
loopne
mov
stos
leave
cmp
fidivrl
sti
inc
jmp
pop
jecxz
bound
add
cmp
lds
sbb
mov
push
sub
push
out
inc
jns
dec
in
push
inc
sbb
repnz
lret
lock
dec
push
inc
jecxz
mov
push
mov
pushf
in
or
dec
ljmp
jnp
enter
outsl
mov
mov
ss
rcr
loope
push
jns
sti
imul
sbb
jb
filds
jecxz
fistpl
jl
cmp
lret
dec
in
push
inc
leave
sbb
add
enter
scas
in
loop
fwait
addr16
in
xchg
jno
xchg
or
xchg
mov
gs
fucomp
mov
sbb
sub
push
inc
dec
adcl
mov
imul
pop
dec
mov
flds
pop
jg
dec
push
adc
sbb
add
pushf
mov
inc
cmpb
cmp
cmpsb
dec
ret
je
cmpb
dec
inc
loop
sub
les
inc
inc
addr16
ljmp
inc
aas
sbb
and
inc
inc
int3
dec
enter
leave
xor
lret
insl
dec
xlat
pop
cmp
pop
sbb
jl
push
cs
pop
dec
push
mov
jecxz
sbb
xor
sti
inc
sub
in
pop
flds
je
inc
cwtl
inc
and
cmp
or
cmp
stos
mov
orl
filds
or
mov
lds
cwtl
add
sub
mov
pop
test
xchg
mov
rolb
imulb
pop
ret
inc
fisubrs
push
inc
dec
sbb
in
cs
popa
push
push
sbb
addb
pop
or
add
cmpsb
loopne
add
stos
xor
cmp
xor
cli
dec
sub
push
cmp
fstpl
lock
stc
test
xchg
dec
dec
ss
push
and
imul
sub
fadd
pusha
dec
xor
sub
dec
dec
addb
lcall
mov
and
cli
mov
movb
daa
pop
jo
pop
cmpsl
incl
out
rcrl
inc
xor
pop
rcrl
loopne
add
mov
cltd
pop
xchg
xchg
add
test
cmp
popa
movsl
cmc
popa
icebp
bound
ljmp
lret
fistpll
stc
stc
je
pop
add
inc
push
pop
leave
das
mov
sub
out
mov
stos
dec
or
daa
inc
or
mov
and
in
fimuls
sub
xorl
stos
call
mov
or
movl
cltd
jb
dec
shrl
cmp
mov
add
lods
inc
ljmp
sbb
inc
in
or
add
nop
and
sub
jmp
adc
push
in
ljmp
in
out
xor
xchg
jnp
lods
in
lret
idivb
xchg
stos
xor
inc
fadd
jecxz
pushf
mov
xor
call
jno
mov
push
data16
adc
add
sahf
cmpsb
pop
outsl
gs
gs
cltd
cmp
sbb
cmp
push
stc
xchg
mov
dec
test
fstpt
mov
ret
imul
dec
lahf
stos
or
out
cmpsb
and
inc
sbb
inc
mov
rcrl
pushf
sbb
faddl
add
push
sbb
sbb
ret
sbb
xor
imul
push
or
popf
out
mov
pop
imul
mov
or
fldz
bnd
imul
push
lcall
sbb
add
push
sub
test
dec
lock
pop
jb
adc
add
dec
xchg
add
cmpsb
lahf
cmpsb
dec
out
fsubrs
mov
mov
add
jg
cmc
sbb
dec
sub
mov
int3
mov
add
push
mov
lea
sbb
adc
out
es
lret
pop
leave
fmul
subl
sbb
push
mov
aas
or
mov
lds
pop
repnz
mov
dec
xchg
pop
sub
xchg
cmp
cld
gs
dec
in
add
xor
test
dec
or
mov
icebp
shrl
testl
ficompl
mov
loop
push
fimull
cmp
push
pop
jb
dec
lcall
dec
mov
jmp
cmpsb
cmp
add
stc
mov
mov
orb
andl
cli
sub
int3
stos
ja
or
push
xchg
enter
int
inc
cmp
dec
cmp
dec
push
mov
sbb
in
mov
das
lret
inc
jecxz
jo
sub
or
pop
inc
and
jp
inc
sub
dec
jmp
dec
shlb
jge
jmp
stc
mov
stos
fistpll
popa
mov
sahf
add
test
push
ret
mov
test
mov
pop
and
mov
mov
cmp
add
ret
pop
jne
out
mov
add
xor
mov
sbb
sbb
ret
add
loop
inc
add
inc
leave
lds
gs
addb
pop
inc
mov
dec
fs
addr16
movb
add
xchg
jae
jb
or
pop
pop
pop
in
call
fstpl
and
frstor
push
fs
shll
sar
push
mov
add
push
mov
push
stos
add
xlat
sub
add
cmpsl
mov
fcomps
xchg
push
movsl
leave
das
mov
push
or
mov
or
add
cmp
mov
lret
sbb
push
jge
daa
test
pop
jo
cmc
outsb
inc
or
lods
inc
and
repz
js
jmp
mov
sub
call
pop
mov
inc
push
and
add
mov
clc
xchg
sbb
and
arpl
insl
adc
add
aaa
or
dec
lret
add
dec
stos
mov
mov
mov
orb
pop
rorl
inc
enter
push
sbb
mov
jb
cmpsb
xlat
orb
push
mov
xor
cld
cmp
xchg
sub
stc
fldl
fdivl
lea
adc
pop
jae
lds
lret
stc
ja
pusha
ljmp
mov
fsub
dec
data16
icebp
xor
push
or
push
inc
icebp
add
dec
roll
sub
push
loop
pop
lds
stos
adc
or
dec
pop
adcb
xchg
enter
dec
outsl
dec
sti
add
xchg
scas
dec
mov
push
sub
imul
out
add
enter
lret
pop
into
fmull
int
or
mov
jmp
mov
inc
pop
test
or
fstpt
ret
es
stos
mov
ss
jmp
inc
inc
ret
ljmp
dec
in
xor
adc
fcmove
dec
shrb
xor
in
ljmp
jge
sbb
lds
movsl
mov
ljmp
call
or
dec
adc
call
inc
or
cmp
and
mov
fbld
push
push
sub
and
or
push
subl
shll
xor
xchg
cwtl
jl
fisubl
mov
push
dec
inc
cld
movsl
stos
mov
sub
dec
sbb
inc
xchg
dec
jg
decl
mov
daa
out
sbb
lret
pop
push
lods
jecxz
sbb
mov
push
loope
and
mov
pop
mov
dec
setl
iret
cmpsb
xchg
jp
std
inc
ds
loope
ds
inc
sub
pushf
jp
or
xor
cmp
outsl
jmp
push
and
fstpl
jge
cwtl
xor
mov
in
inc
mov
xor
cli
xor
fsubl
cmp
test
in
sub
pop
fisubrl
cmp
xor
mov
inc
lret
leave
push
cmp
mov
leave
repnz
sub
popf
xor
adc
out
filds
mov
std
sbb
lret
inc
in
dec
sub
push
pop
inc
mov
mov
repnz
cmc
jnp
push
sbb
jmp
mov
insl
push
lahf
fisttpl
sbb
or
add
or
test
sub
cmp
subb
dec
jb
inc
sbb
xchg
xor
pop
imul
push
aaa
mov
lods
jmp
ret
jae
cmp
ja
divl
adcl
mov
test
push
dec
aaa
jge
mov
pop
lock
leave
cmpb
test
adcb
mov
mov
cmp
mov
sub
xor
push
xor
fisttpl
stc
sub
fs
cmp
jnp
test
mov
pusha
dec
cmp
sar
test
ds
and
enter
repz
ficompl
jecxz
mov
add
sbb
add
sbbl
add
and
ja
fnstsw
enter
cmpsl
cmp
cltd
hlt
loopne
mov
add
in
jmp
mov
cld
leave
cmp
outsl
mov
cmp
mov
loope
shrl
fcompl
cmp
dec
sbb
or
pop
rclb
or
fninit
pop
stos
push
shlb
dec
stos
outsl
inc
cmpl
cmp
xor
jbe
mov
pop
mov
gs
sbb
in
cli
or
lret
enter
sub
les
adc
mov
in
dec
jge
cmp
mov
or
and
add
movsl
ss
inc
jecxz
push
fwait
mov
loopne
je
mov
inc
fistps
sub
lahf
jns
in
loop
cmp
mov
xchg
dec
and
imul
inc
inc
dec
imul
call
das
or
sub
push
rcll
subl
dec
inc
stos
pop
inc
xchg
xor
jecxz
push
pushf
push
xchg
dec
pop
leave
subb
cmp
jmp
leave
xor
fwait
mov
dec
shl
jo
call
es
call
addb
mov
pushf
test
mov
inc
movsb
dec
lcall
fwait
data16
or
sub
pusha
outsl
sbb
daa
sbb
and
add
stos
adcb
imul
inc
aad
push
icebp
xor
mov
mov
xchg
sahf
xchg
xchg
and
inc
sbb
das
push
in
call
xchg
neg
fistpll
sub
mov
icebp
or
mov
cmovno
adc
mov
pop
dec
pusha
mov
xchg
jg
lds
idivb
out
mov
pop
daa
or
pop
in
mov
out
imul
mov
into
repnz
xorl
mov
ficoms
jmp
mov
jno
dec
push
inc
xchg
mov
movb
inc
pusha
or
insb
or
sub
bound
pop
lahf
fcompl
scas
dec
nop
or
rorb
testb
inc
mov
jae
inc
xor
cwtl
sub
cmp
sub
rcr
adc
jns
sbb
lahf
dec
sbb
rcrb
jnp
dec
push
inc
add
sbb
dec
and
lcall
movb
mov
xchg
repz
and
push
mov
sbb
push
leave
adc
enter
jg
inc
pop
fs
and
jecxz
mov
pop
movsb
add
adc
repnz
into
dec
xchg
ljmp
or
sub
in
outsl
push
gs
nop
and
or
sbbl
dec
mov
mov
add
decl
test
ds
jno
inc
dec
inc
fwait
mov
or
sub
stos
adc
ljmp
enter
arpl
arpl
xchg
mov
cmp
dec
mov
push
add
lods
in
jo
aam
pop
filds
out
jns
jo
mov
add
add
das
and
dec
les
in
jecxz
push
jp
popa
imul
jns
and
jmp
stos
add
push
negb
mov
divb
bound
pop
cmpsb
loope
xchg
sub
inc
fadd
mov
enter
lods
fwait
xor
pop
cmp
jg
ss
inc
ljmp
push
clc
jle
movb
add
push
inc
stos
cmp
sub
pop
out
push
pop
inc
dec
sbb
decl
jg
lock
dec
mov
lds
in
mov
stc
enter
jmp
jp
fdivl
rol
xchg
and
jb
jb
jle
adc
jbe
cli
dec
fsubrp
cli
popa
xor
pusha
pop
movsl
testl
aaa
ds
pop
in
insb
pushw
jmp
in
jg
icebp
pop
clc
test
jmp
push
jge
pop
inc
das
mov
jne
adc
inc
and
js
and
lret
mov
pop
or
add
xchg
jae
sbb
das
fwait
mov
imul
incl
xchg
or
sahf
jb
and
jmp
xchg
nop
xor
shr
adc
or
inc
in
add
add
repnz
cs
mov
inc
inc
fwait
gs
cli
sub
push
mov
test
push
pusha
xchg
movsb
out
adc
inc
mov
inc
xor
fisubs
filds
leave
out
xlat
sub
cmp
out
jp
jne
pop
mov
mov
pop
js
push
mov
inc
stos
loop
pop
aas
dec
sub
sbb
sub
inc
gs
mov
add
test
gs
xchg
ficoms
imul
or
lahf
ret
dec
das
iret
stos
jp
dec
sbb
sbb
mov
dec
cmp
inc
test
push
psubsw
mov
sbb
mov
enter
sbb
into
cwtl
pop
sub
xchg
pop
in
inc
jge
flds
mov
xor
leave
lret
inc
inc
sbb
inc
adc
out
cmp
popa
add
inc
mov
ss
adc
mov
imul
push
sbb
mov
push
sarl
imul
pop
enter
dec
dec
pop
sysret
arpl
pusha
mov
flds
nop
inc
punpcklbw
shr
push
lock
imul
sarl
xlat
notb
push
out
addl
pop
fidivl
ud1
and
or
pop
inc
xchg
scas
int3
inc
sar
lahf
jbe
xchg
inc
dec
and
mov
and
data16
imul
js
sub
or
in
or
jae
add
test
stos
loop
fisttps
push
fs
pop
push
xchg
mov
nop
outsl
orb
push
xchg
and
sahf
cmp
xchg
sub
mov
cmp
enter
lret
frndint
push
cmpsl
imul
repnz
or
aaa
rolb
sti
fimull
mov
test
sbb
mov
shl
nop
sbb
xor
repz
in
data16
push
mov
sub
es
push
or
adc
pop
xchg
imul
push
ret
repnz
dec
cmpsb
ss
cli
ret
push
ret
pop
mov
jmp
xchg
push
cmp
jecxz
push
daa
outsb
aaa
out
or
or
sbb
and
inc
pusha
and
int3
fists
pop
lcall
mov
das
hlt
out
fcos
inc
sub
or
movups
inc
push
xor
push
cmpsb
cmp
inc
mov
inc
test
sbb
pop
add
push
dec
xlat
int3
ret
add
inc
xchg
jb
bound
fisubrs
mov
sahf
and
inc
sbb
ret
mov
xlat
add
mov
pop
mov
shl
dec
sub
aam
aad
dec
pop
cld
cmpsl
leave
test
gs
sub
dec
cmpsl
dec
sub
les
inc
and
das
sti
andb
aad
cs
pop
test
addr16
mov
daa
scas
cmp
idivl
dec
les
rorb
cmp
idivb
fwait
stc
pop
call
dec
enter
add
aas
xchg
lcall
ds
stc
inc
inc
or
jbe
push
arpl
add
mov
xorl
insb
inc
enter
jo
popa
xchg
adc
ja
scas
ja
and
dec
into
aaa
test
cmpl
in
push
mov
cmp
adc
inc
ret
xchg
jb
cld
loop
adc
cli
in
pushf
jg
cmp
aaa
fstl
loop
movsl
enter
add
sti
adc
into
inc
inc
fisubrs
xor
test
cld
add
loopne
push
sbb
cmpsb
mov
stos
pop
push
stos
lret
leave
in
dec
push
shlb
jae
fcoml
test
mov
das
cmp
and
inc
pusha
popa
sbb
pop
push
push
dec
hlt
insb
vmread
out
aad
cmp
add
mov
cmp
es
dec
inc
jge
out
dec
insl
sub
leave
mov
and
clc
sbb
sub
sub
dec
inc
mov
enter
dec
iret
xchg
loop
leave
or
insl
sub
mov
pop
mov
les
ret
sahf
test
inc
in
inc
inc
shll
shrb
jmp
push
xchg
fdivrl
or
dec
popf
gs
pop
rcrb
dec
loope
lahf
jb
add
enter
ds
ss
in
push
fimull
adc
jo
scas
cmp
and
or
imul
mov
jo
movsb
dec
jbe
sbb
icebp
ret
in
adc
imul
movsl
ds
jge
push
out
jo
push
popa
leave
and
aad
adc
inc
xchg
inc
nop
aas
mov
lds
ret
jo
add
fldcw
lret
and
or
inc
mov
or
sub
lcall
xor
dec
cmpb
popa
rolb
fld
xchg
mov
ffreep
pop
daa
inc
test
mov
rorb
inc
ret
push
loop
loopne
loop
test
dec
or
dec
jns
loop
and
inc
lds
cmp
or
dec
pop
es
jbe
leave
mov
add
mov
les
cld
jmp
push
shlb
movsb
rdtsc
cmp
inc
mov
add
xchg
enter
enter
daa
les
push
inc
ret
ret
sub
dec
dec
mov
cltd
or
sahf
jns
or
mov
rclb
add
pop
inc
movl
or
pop
jg
jbe
into
inc
inc
add
fst
rolb
inc
inc
or
xchg
ja
loopne
lock
lods
ficoms
stos
xor
dec
loope
mov
rcrb
fisubrs
clc
daa
dec
lret
add
stos
scas
add
mov
jb
or
pop
fisubrl
jle
cmp
cmpsb
mov
or
sub
push
inc
cli
adc
in
repnz
mov
std
add
pop
cmp
push
lock
xor
clc
mov
scas
sbb
mov
jecxz
inc
jg
pop
mov
xor
ret
lahf
inc
ror
call
mov
sub
addr16
inc
mov
int3
or
mov
adc
mov
sbb
lret
inc
xor
inc
sbb
in
xchg
push
mov
lcall
mov
sub
cltd
push
cmp
cwtl
aam
mov
cld
fwait
add
sbbb
fwait
dec
add
stc
addr16
inc
sub
mov
jmp
inc
imul
add
xor
mov
rorb
stos
lcall
cmc
sbbb
or
push
addr16
add
fiaddl
rcrl
in
loopne
or
and
shr
cltd
push
and
rcl
mov
add
mov
loopne
jnp
inc
add
outsl
jp
mov
lret
xchg
enter
add
fwait
mov
cld
inc
xor
sub
pop
fsubl
adc
stos
or
add
xor
add
cmc
inc
imul
xchg
or
sbb
pop
roll
add
add
jo
lahf
and
retw
clc
or
popa
scas
pusha
jae
push
push
inc
dec
es
stos
mov
adc
les
jle
fdivrs
imul
aam
sbb
in
cmp
pop
pop
dec
in
cli
inc
imul
push
cmp
cwtl
dec
scas
jecxz
clc
leave
jecxz
xchg
leave
cmp
mov
mov
cmp
mov
cmpsl
dec
dec
jmp
mov
in
adcb
sub
sub
add
cmp
push
imul
cltd
fsubs
push
sbb
xor
xor
je
xor
loop
and
add
pop
test
jg
add
dec
out
inc
loopne
sub
out
mov
sub
fmul
and
lret
lret
and
sub
add
lods
mov
mov
dec
ret
mov
ret
dec
testb
mov
mov
push
in
jmp
mov
sbb
js
sbb
lret
mov
pop
sub
xchg
ss
or
mov
sub
push
leavew
or
bound
scas
or
xlat
popa
mov
push
adc
inc
sahf
mov
jl
mov
jecxz
mov
dec
clc
inc
pop
mov
mov
fistpl
push
gs
fisubs
sub
push
mov
push
push
stos
and
adcl
inc
mov
mov
xchg
pop
inc
jnp
aad
add
add
hlt
mov
jecxz
pusha
cs
arpl
sub
cmp
cmp
jbe
pop
sahf
inc
push
mov
lcall
fwait
or
dec
and
rorl
imul
sub
jg
adc
rcrb
ljmp
cs
lret
daa
xchg
iret
inc
mov
inc
mov
push
mov
mov
push
dec
inc
push
sub
push
adc
mov
and
or
je
faddl
or
sbb
lcall
xchg
cs
icebp
loope
out
inc
test
test
cmpsb
in
idiv
sub
push
sub
xchg
or
cmp
push
adc
shl
cmp
push
sub
dec
sbb
insl
les
shll
pop
xor
loopne
pop
inc
ret
cs
ljmp
or
dec
inc
pop
cs
mov
mov
xor
shl
sub
out
insl
or
inc
leave
push
je
mov
enter
adc
or
mov
jge
fisttpll
cmp
sbbl
outsl
bound
pop
insb
ja
mov
pop
popa
xor
ficomps
inc
fs
mov
inc
xchg
or
shrl
jno
fcompl
in
sub
int
nop
out
popa
xor
xor
pop
loopne
dec
es
adc
cmp
inc
pushf
fwait
inc
mov
insb
push
adc
xor
icebp
shlb
popa
sub
cmp
push
push
sahf
imul
fsubl
cs
dec
and
push
aaa
sbb
jecxz
movl
jmp
sub
test
add
sub
into
test
out
sub
cltd
inc
xor
leave
rcll
mov
clc
push
pop
sub
xchg
cmp
and
jbe
mov
popf
lret
xchg
dec
int
inc
loopne
insl
ret
ljmp
jbe
ljmp
das
lods
cmp
inc
dec
mov
mov
ret
ficompl
add
mov
mov
inc
inc
in
dec
sbb
stc
add
push
rcl
adc
push
add
adc
cltd
cmp
cs
add
lahf
inc
mov
jb
cmp
lret
pop
in
cltd
fs
mov
js
inc
dec
clc
pusha
mov
ret
xchg
lcall
clc
push
in
and
and
adc
lds
pop
jge
push
test
and
je
aas
pop
mov
sub
outsl
cmp
fbld
imul
pop
inc
and
or
or
sub
pop
and
fidivl
stc
cmp
or
iret
cmp
pop
sbb
sbb
dec
push
adc
js
dec
icebp
pop
sbb
adc
sub
sbb
xchg
mov
pop
mov
int
push
mov
xor
stc
cmp
jge
dec
leave
add
sub
sbb
inc
or
imul
or
jle
in
adc
and
test
scas
inc
fwait
xchg
sbb
pop
jnp
mov
xchg
rcr
cmp
and
sbb
cltd
into
cmp
icebp
or
out
sbb
loopne
inc
cld
rcrl
cwtl
push
pushf
push
das
fstp
mov
xchg
test
pop
imulb
adc
sbb
dec
test
lds
jg
ret
test
xor
test
xchg
jb
pusha
mov
mov
xchg
mov
mov
pop
rclb
gs
push
add
in
and
inc
and
adc
rcr
int3
xor
add
ja
or
jnp
pop
jo
sub
stos
sti
or
jg
pop
pop
jle
cltd
stos
add
iret
inc
lret
pop
cmpl
or
pop
dec
test
and
fadd
js
pop
push
stos
sbb
inc
in
inc
ror
and
sahf
cli
fistpl
lret
test
fnsave
jb
push
push
stos
and
pop
in
jnp
shlb
inc
cmp
clc
dec
mov
addb
shl
or
bound
leave
dec
shll
mov
fisubrs
pop
stc
xlat
sub
jg
bound
jmp
data16
cmp
pop
sub
push
movsb
mov
leave
cmpsb
sbbb
imul
ret
mov
push
xchg
inc
mov
pop
mov
in
and
loopne
int3
inc
out
stc
add
fidivrl
mov
xchg
out
adc
inc
mov
out
cmp
mov
mov
dec
cmp
movsl
orb
inc
sbb
sub
pop
inc
ret
je
push
sub
cli
movntps
arpl
sub
pop
test
sti
dec
jbe
lret
xor
pop
dec
ficomps
cmpl
enter
in
sbb
xor
dec
les
mov
dec
push
push
push
inc
lcall
pop
and
dec
push
xor
inc
out
inc
mov
popa
inc
dec
sub
xor
sub
das
dec
cmpsb
stc
mov
push
push
dec
push
mov
leave
push
jb
push
cmp
add
inc
lods
xchg
mov
cmp
pop
xchg
test
enter
sub
mov
dec
push
add
jecxz
addr16
push
add
fadds
pop
cmp
add
inc
jb
jo
stos
js
push
jnp
add
or
xchg
jmp
inc
xor
dec
xor
mov
xchg
lret
and
test
cld
in
pop
sbb
mov
addl
mov
sub
daa
rorb
dec
mov
xchg
jmp
leave
fstpt
test
fwait
call
inc
push
mov
loopne
or
les
filds
hlt
cmp
sub
leave
inc
dec
cmp
je
add
call
pop
gs
dec
sahf
add
popf
dec
in
mov
xorl
out
andb
pushf
ret
mov
aam
les
outsl
and
in
mov
mov
iret
sub
into
imul
inc
pop
push
push
stos
loope
ss
pop
stos
lds
ss
pop
int3
inc
jp
scas
flds
fdivs
and
jnp
lea
aas
and
cs
push
inc
push
sub
loope
push
mov
cmp
sbb
cwtd
incl
test
leave
daa
callw
or
mov
dec
int
arpl
sarb
addr16
fwait
test
leave
cwtl
xlat
mov
mov
aaa
test
dec
rorl
ficoms
inc
cld
or
outsl
dec
ljmp
inc
or
or
lcall
lret
jp
dec
xchg
aam
daa
leave
push
pop
push
push
rcll
and
ror
cmc
loope
ffreep
mov
loope
dec
lret
pop
cmovge
cmp
aam
pop
mov
and
fstpt
dec
add
dec
add
aas
nop
addb
jmp
mov
shrl
addr16
out
push
push
cmp
sbb
sub
mov
jp
jmp
das
push
sbbl
stos
bound
and
arpl
or
leave
push
or
mov
je
push
push
fisttpl
push
dec
pop
xchg
mov
aas
enter
pop
addr16
sarb
pop
enter
int3
pop
xchg
pop
pop
popa
lret
movsb
or
and
movsb
push
icebp
xchg
rolb
call
ficoml
xchg
inc
clc
xor
sbb
orb
add
xor
aam
xchg
xor
mov
mov
or
dec
js
xor
sbb
popa
iret
mov
arpl
mov
fbstp
stos
sbb
ds
lds
push
loope
cmp
in
pop
adc
mov
cltd
add
arpl
xor
push
std
push
or
decl
xchg
aad
dec
mov
daa
mov
sbb
inc
fsubp
pusha
lods
cmp
push
cld
popa
hlt
iret
stos
dec
sbb
inc
jmp
lea
fidivl
push
mov
ljmp
rorl
mov
add
imul
dec
xchg
cli
out
enter
fmuls
and
pop
mov
adc
mov
sbb
shlb
cmp
dec
and
outsl
add
jmp
jg
push
pop
xor
int
pop
dec
adc
inc
and
outsl
sub
inc
aad
sbb
mov
dec
icebp
or
lods
xchg
pop
inc
inc
mov
mov
movsb
ljmp
cmp
pop
in
xor
and
into
fcompl
test
in
inc
cld
push
rolb
inc
pop
cli
sub
jb
adc
movsb
test
ss
lds
loopne
inc
pushf
cmp
adc
adc
push
or
dec
ljmp
xchg
lahf
add
mov
shrl
inc
cmc
nop
js
push
hlt
xor
inc
into
or
dec
into
sbb
pusha
dec
pop
cmp
jae
xlat
pusha
outsl
mov
xchg
inc
enter
movsl
and
sub
dec
movsb
sub
xor
dec
sbb
sbb
inc
add
mov
jl
or
fisubl
mov
cmp
cmp
xor
dec
push
dec
push
mov
cmp
jmp
daa
fists
xchg
test
fisubs
inc
xlat
mov
cmpsb
cmpsb
test
and
in
and
stc
or
xor
sbb
in
dec
dec
mov
rcrl
and
pop
iret
stc
add
dec
mov
xchg
ljmp
sub
pop
dec
out
pop
jg
sahf
xor
in
xchg
fimull
mov
sub
or
mov
sub
xor
pop
test
addr16
push
rorb
scas
insl
cmp
and
or
or
mov
repnz
push
push
fists
das
sysret
sbbb
or
mov
xchg
mov
sarl
or
es
stos
jae
mulb
jno
movsl
push
in
cmp
or
pop
lock
call
pop
xlat
orl
faddl
test
addb
subb
int3
cmpsb
cmp
leave
or
and
ds
mov
add
pushf
sbb
mov
xchg
cli
xchg
mov
dec
xor
outsb
sub
and
sub
xchg
cmp
xor
add
shlb
adc
sub
les
xor
aas
sbb
and
mov
loop
insb
sub
stc
daa
pop
push
call
dec
dec
adc
pusha
or
xor
mov
xor
sbb
push
mov
loope
incl
sub
pop
jo
fists
in
pusha
inc
sbb
push
ljmp
xchg
lods
push
dec
add
nop
sbb
or
mov
sub
fwait
xchg
lret
pop
sub
movsl
mov
jno
test
dec
inc
sbb
rclb
add
jl
stos
dec
and
lock
cwtl
pusha
xchg
add
sahf
pop
pop
bound
jmp
repnz
or
sub
test
imul
jnp
or
bound
jg
js
shrb
and
fwait
or
cs
enter
adc
push
cmp
inc
lds
sub
in
loope
mov
fcoms
sub
adc
pop
fwait
add
sub
xor
clc
and
and
push
sub
cltd
add
jnp
fldt
sbb
sbb
dec
cwtl
mov
pop
in
or
imul
lea
dec
jnp
pushf
push
subl
mov
fcompl
call
sahf
les
mov
dec
xchg
pop
test
loopne
enter
inc
dec
or
xor
jl
outsb
push
mov
xlat
lret
shlb
leave
in
jg
cltd
iret
inc
lods
and
and
mov
in
add
add
pop
ror
cmpsl
inc
addl
aaa
andb
js
pop
push
jnp
jmp
cmpsb
pop
inc
inc
xchg
dec
mov
pop
sub
mov
xchg
lcall
fsubrl
out
ds
int3
shll
es
insb
mov
or
shll
sti
push
sub
fiaddl
mov
inc
sbbb
inc
cmp
sbb
out
xor
dec
and
mov
test
call
je
add
daa
adc
mov
mov
inc
xor
push
pop
fdivrs
icebp
xchg
clc
les
enter
fstp
inc
popa
fsubl
popl
mov
inc
dec
mov
sub
jle
repnz
mov
aad
ret
pop
stc
cmp
inc
ret
jno
cmp
das
call
lods
sbb
mov
and
addr16
stos
in
mov
or
lock
rorl
jle
andl
inc
stos
jmp
or
shl
add
add
sub
pop
lea
push
iret
pusha
shrb
lods
inc
pop
and
sar
and
enter
flds
or
int
pop
sbb
cmc
mov
pop
cmp
cltd
adcb
cmpsl
imul
jo
cltd
inc
and
xor
lods
cwtl
and
xchg
adc
ret
popf
fimuls
fcompl
loope
sar
push
mov
fimuls
add
inc
addr16
inc
or
xor
lahf
sub
rcr
lock
dec
jmp
mov
fdivr
adc
inc
clc
pop
push
aaa
lcall
leave
psrad
pop
jmp
movb
push
pop
pop
fcmovb
inc
dec
push
aaa
adc
add
mov
xor
push
push
ret
sbb
loope
fisubrl
mov
aas
mov
and
js
sahf
or
push
scas
mov
mov
test
mov
ljmp
jg
push
xor
daa
in
adc
movsl
push
mov
mov
fdivl
and
pop
adc
andl
dec
xor
inc
fldenv
inc
out
xchg
mov
push
cli
adc
mov
jg
cmp
dec
inc
dec
xchg
adc
outsb
mov
vmovups
or
hlt
mov
nop
scas
rcrl
clc
insl
push
mov
pop
repnz
xor
les
push
or
or
xchg
inc
and
sub
dec
es
repz
push
or
jg
bnd
arpl
xor
cltd
fnstenv
out
mov
loope
push
sub
add
add
cmp
mov
mov
cli
xor
push
adc
les
mov
mov
ficomps
bound
pop
dec
out
or
inc
push
inc
into
ret
and
fsubrs
dec
pop
mov
pop
ret
adc
mov
mov
into
in
lds
cmc
xorl
cmp
cltd
mov
mov
inc
aam
fists
inc
mov
mov
scas
les
repz
xor
sub
fstpl
ds
jno
inc
jno
lock
or
or
inc
sahf
sub
mov
loope
push
aad
out
dec
js
nop
rcrl
aad
aam
pop
xor
nop
mov
sbb
fisttpl
out
add
nop
bound
test
push
into
subb
pop
xor
xchg
ja
sub
cltd
cmp
js
movsb
cmpsl
pop
je
les
dec
xchg
mov
repz
inc
movsb
insb
xchg
push
mov
mov
cmp
push
ss
cmp
inc
pop
inc
ret
stc
lods
jp
lret
pusha
inc
mov
mov
dec
add
iret
xor
outsb
adc
fdivrl
jo
icebp
fadd
mov
sar
mov
xchg
cli
push
dec
cmp
leave
dec
pop
daa
rcrl
mov
xlat
xchg
sbb
sbbb
inc
dec
push
push
pop
shrb
fstpt
xchg
repnz
adc
add
lds
pop
cmp
ret
jnp
test
inc
data16
imul
adc
dec
jnp
and
pop
fwait
in
out
fistpl
sub
sub
ret
dec
sub
fistpll
lods
xor
mov
lret
popa
xor
pop
inc
add
addr16
dec
mov
sub
mov
mov
xchg
pop
fstpt
sbbl
out
ja
jnp
shll
mov
lret
xor
mov
jg
ja
xchg
mov
dec
dec
cmp
dec
sub
insl
into
nop
lock
jmp
test
fstpl
pop
jmp
push
cmpsb
notb
fwait
aad
add
fistpl
aam
cld
out
mov
incl
bound
stos
ficompl
adc
cmp
and
loop
jecxz
imul
enter
daa
pop
jp
inc
shr
into
xchg
push
sbb
ja
into
dec
sub
test
sahf
lds
inc
add
nop
lret
shr
pop
ret
inc
shl
inc
sbb
xchg
daa
insl
loopne
subb
out
inc
dec
dec
lods
cltd
adcl
dec
test
lret
and
mov
pop
push
or
fldenv
xor
pop
out
fsubr
or
jecxz
jecxz
test
and
inc
cs
rorl
les
add
jbe
cmpsb
fdivrl
jle
and
hlt
hlt
adc
push
pop
mov
add
push
pusha
cmpsl
scas
or
inc
andb
cmp
sub
andb
dec
jge
and
hlt
test
xchg
add
sarl
movsl
mov
clc
cmp
aaa
rolb
daa
sbb
add
inc
aas
dec
movsl
ja
cmc
mov
add
aad
mov
cmp
and
and
mov
decl
inc
test
mov
mov
xchg
mov
popf
shll
scas
lds
mov
sub
jg
xor
sbb
ljmp
and
ss
inc
push
push
pop
dec
xor
cmp
jle
shl
push
subb
and
bound
and
mov
mov
sar
rcrb
ficoml
iret
outsl
mov
inc
pop
rcrl
mov
and
cmp
push
mov
roll
sbb
jb
pop
js
fistps
inc
sub
add
dec
or
xlat
push
imul
fs
cld
ficompl
jecxz
sub
enter
mov
xchg
neg
add
loope
mov
roll
scas
out
loop
vpaddb
inc
jae
dec
fisubrs
fnstcw
inc
and
rolb
cmp
stc
nop
inc
inc
jecxz
fdivr
data16
pop
xchg
mov
sub
cmp
pop
dec
push
inc
cmp
ljmp
lds
stc
cwtl
int3
push
mov
int
ss
and
lds
shrb
dec
cs
adc
vmptrld
mov
cs
in
xor
imul
pop
es
push
add
ret
pop
xor
add
clc
xchg
sub
xchg
cmp
sub
mov
pop
stos
aaa
mov
or
inc
in
adc
test
loope
push
lods
inc
mov
jg
sbb
mov
mov
std
cmpsb
mov
and
adc
je
pop
add
nop
and
loop
or
mov
pop
das
xchg
push
ljmp
sarb
mov
lret
push
inc
sub
enter
add
scas
lock
shll
ficomps
mov
cmp
aas
lret
in
adc
subb
mov
mov
xchg
stc
imul
ret
cs
mov
mov
xor
sub
xor
fucomp
jno
jg
test
cmpsb
int3
push
cmpsl
dec
inc
mov
cltd
fwait
les
cmpsl
jg
mov
pop
dec
in
mov
inc
or
ret
ret
inc
ret
shr
push
rorb
xor
sbb
sub
sbb
push
pop
jecxz
inc
js
mov
inc
cs
jne
inc
ss
cmp
cmp
and
mov
leave
inc
cwtl
call
mov
out
incl
in
loope
rcrb
push
mov
xchg
rol
stc
into
pop
pop
sub
mov
cmp
enter
add
xor
adc
sub
push
xchg
mov
inc
sub
or
test
test
movl
cmp
inc
sbb
rol
out
pop
gs
fsubrs
xor
jb
adc
pop
insl
jmp
insb
mov
pop
mov
leave
mov
fwait
lret
sub
fmull
inc
and
mov
lcall
jle
pop
in
mov
dec
sbbb
leave
and
mov
mov
stc
icebp
lods
xor
xor
adc
sbb
loope
push
inc
js
push
insl
inc
push
adc
pusha
into
lahf
push
add
imul
dec
in
adc
add
jno
pop
mov
mov
inc
sub
insl
dec
inc
bound
cmp
xchg
inc
inc
pop
push
rol
es
or
in
push
inc
xor
enter
ss
addb
and
jecxz
faddl
jp
in
pop
dec
leave
dec
sub
sbb
mov
push
test
aas
dec
sub
dec
popa
cmp
jmp
or
pop
cwtl
push
jle
cli
mov
mov
dec
adc
shll
addl
popf
lret
dec
cmp
sub
push
and
jae
shl
push
mov
inc
es
leave
jne
add
loope
adc
repz
mov
pop
out
or
dec
inc
insl
add
add
mov
test
inc
es
inc
lret
dec
hlt
push
fiaddl
mov
mov
mov
xchg
popl
rolb
daa
cmp
cli
or
test
mov
rcrb
jl
sbb
push
adc
shrl
shlb
pop
or
imul
or
sub
inc
cmp
aas
ret
stc
loop
cwtl
subb
push
jl
and
mov
cmpsb
addl
add
test
aaa
adc
add
or
iret
cmpsl
stos
sub
cmpsb
xor
rcr
push
inc
dec
incl
or
inc
xor
cwtl
push
hlt
pop
and
adc
dec
cmp
sbb
mov
inc
fisubs
inc
push
xor
xor
stc
aas
shll
nop
xor
test
lods
push
and
in
faddp
cmp
adc
pop
daa
jl
jo
inc
add
dec
in
or
jae
sub
dec
pop
add
dec
mov
mov
push
mov
or
in
dec
mov
loopne
inc
add
jae
fdivrl
sbb
pop
inc
xor
sub
ljmp
in
gs
fs
mov
in
loop
pop
daa
cli
dec
fcmovbe
bound
mov
and
pop
scas
mov
decb
cmc
jno
jne
ljmp
mov
jb
sbb
dec
xchg
enter
push
dec
in
add
or
xchg
cmp
dec
sub
add
std
inc
and
div
fcmove
dec
mov
loope
jle
cmc
and
fdivrs
es
pavgb
dec
jg
push
imul
inc
ds
mov
pop
xchg
fcomps
hlt
add
xchg
cmp
outsl
and
inc
xor
jp
std
in
stos
sub
xchg
loope
ljmp
out
sbb
mov
sub
into
dec
jno
and
or
or
frndint
gs
sahf
push
or
or
adc
adc
ljmp
insl
or
cmp
mov
imul
sub
jbe
sub
in
sahf
jo
stos
or
cmp
pop
pop
mov
pop
iret
sub
dec
sbbl
add
pop
in
add
ja
fsubrs
faddp
daa
pop
lret
add
and
les
inc
mov
out
cltd
decb
or
rol
cmp
dec
sahf
xchg
cmpsl
loope
loopne
scas
lea
and
xchg
cmp
mov
rol
lahf
out
push
mov
dec
dec
dec
pop
mov
aad
adc
lcall
pushf
rcrb
lret
adc
mov
xor
filds
dec
mov
cmpsl
jbe
pop
sbb
xchg
ja
xor
leave
pop
fcmovne
cs
pop
xor
jno
dec
inc
mov
call
call
jne
sub
icebp
aas
inc
out
sub
outsl
addb
aas
out
mov
pusha
int
psubsb
fldenv
ljmp
and
loop
cmpsb
add
std
shlb
shll
push
leave
test
push
pushl
andb
test
clc
cmp
cmp
jns,pn
dec
cmpb
stos
dec
cwtl
addb
push
dec
pop
negb
leave
mov
jnp
cmc
push
adc
fistps
cmp
neg
orb
int3
repz
pusha
xchg
mov
inc
pusha
cmpsb
adc
call
push
jns
dec
push
sbb
add
shr
es
stos
add
fisttpl
dec
daa
push
jl
inc
fimuls
pop
or
dec
and
or
je
add
in
sub
std
iret
movb
push
mov
push
cli
je
jmp
sbb
gs
jns
mov
daa
mov
jl
stos
jmp
jmp
stos
inc
xorl
jmp
xor
ret
outsl
insb
pop
cmp
add
xchg
in
xorb
mov
enter
xchg
adc
clc
push
lea
insb
mov
dec
enter
std
mov
push
stos
pop
inc
repnz
lea
add
adc
jns
mulb
pop
mov
inc
mov
ficomps
xor
aaa
push
sub
call
cmp
inc
loopne
mov
pop
mov
fsubr
jno
xchg
pop
rcr
mov
push
jno
leave
mov
cmp
cltd
mov
dec
movsl
inc
xor
jbe
push
mov
frstor
push
adc
xorb
dec
cmpsl
cmpsl
pop
pop
fimuls
sub
pop
or
pop
mov
pushf
in
imul
shlb
shlb
cmp
cmp
ret
test
dec
sub
shlb
or
pop
in
repnz
mov
inc
xchg
add
mov
lret
dec
mov
pop
inc
shrl
sub
stc
call
aas
pop
add
dec
pop
mov
dec
sarl
inc
jbe
add
dec
fidivrl
stos
mov
scas
sbb
or
adc
hlt
mov
push
pushf
gs
rcrl
fiadds
inc
leave
inc
mov
ss
sub
pop
xor
stos
ret
sbb
call
icebp
mov
pop
dec
xor
xchg
cld
daa
dec
repnz
inc
or
mov
fadds
jns
or
ja
cltd
out
xchg
sbb
pop
pop
pop
enter
inc
pop
mov
fmull
daa
scas
pop
dec
inc
leave
popa
ja
inc
sbb
out
stos
dec
dec
mov
mov
movsb
scas
lret
in
fdivs
fisttpll
sub
stc
inc
fildl
mov
enter
cli
cmp
mov
pop
add
push
aas
inc
bound
xchg
add
shr
xchg
fstpl
fisubs
orb
fdivp
push
pop
mov
mov
sub
mov
mov
lret
inc
rcrl
sub
gs
jbe
push
pop
mov
shrl
sbb
or
data16
lods
stos
xchg
adc
adc
ret
popf
test
pop
arpl
inc
mov
mov
ret
xchg
add
sbb
in
arpl
roll
inc
xchg
pop
push
dec
add
pop
popf
rclb
cltd
std
daa
mov
cmp
cld
mov
sub
mov
inc
sub
mov
daa
mov
loop
insb
dec
cld
adc
test
add
xchg
sub
adc
cli
jb
push
es
xor
dec
repnz
inc
jns
cwtl
inc
roll
rorl
stos
push
pop
ss
lods
push
in
cli
popa
fstl
lds
movsb
dec
clc
mov
lods
ja
adc
mov
aam
cmp
cwtl
and
jno
lahf
sahf
add
mov
ret
adc
je
jnp
sbb
icebp
outsl
pop
idivl
jno
in
and
xor
or
add
fmulp
pop
dec
lret
imul
cs
and
adcl
cwtl
popa
mov
cli
popf
mov
add
mov
sbb
fxch
movl
fs
sbb
ljmp
push
inc
push
add
outsl
xchg
and
js
dec
gs
push
mov
sarb
add
sahf
adc
leave
inc
mov
mov
jge
out
enter
xchg
add
pop
cmp
xor
cld
int3
loope
push
mov
addb
sbb
in
jmp
dec
mov
ljmp
mov
bound
ret
xor
pusha
push
addl
repnz
faddl
mov
shll
setb
mov
testl
or
pop
mov
push
stc
pop
fistpll
aam
mov
nop
sbb
leave
pusha
push
push
mov
aam
fimuls
sbb
jnp
in
leave
or
movsl
mov
push
pop
sbbl
sub
repz
adc
repnz
lahf
cmp
lahf
xchg
enter
pop
repz
and
fadd
popa
or
dec
aas
add
push
dec
loopne
mov
sub
in
jg
or
fwait
inc
xor
dec
fcoml
jmp
jecxz
shlb
adc
bound
add
leave
pop
add
adc
sub
or
push
std
push
es
leave
lahf
shl
daa
cli
dec
sbbb
pop
pop
or
sbb
shll
das
adc
inc
cmp
std
sub
sub
sub
mov
std
push
cmp
or
lods
sub
sub
ja
dec
and
bound
mov
jae
nop
cmp
mov
mov
mov
mov
xchg
xchg
lret
and
or
fsubl
inc
loopne
rolb
mov
pop
test
mov
lahf
pop
mov
inc
inc
in
mov
sbb
std
inc
cmpsb
dec
inc
gs
push
in
and
cwtl
leave
clc
pop
dec
adc
sbb
dec
dec
pop
pop
cmpsb
addr16
scas
or
inc
mov
ss
push
add
pop
jg
aas
inc
es
addr16
stos
push
stc
jae
and
or
popa
stos
dec
xor
sub
in
dec
lret
enter
push
int3
mov
xor
mov
jg
mov
dec
add
inc
ret
mov
xchg
mov
or
pop
jo
nop
xor
loop
icebp
inc
dec
dec
xor
enter
sub
enter
gs
sub
roll
in
fucom
or
testl
inc
push
and
negl
inc
mov
insb
adc
adc
scas
mov
pop
push
push
fcomp
pop
add
jg
movsl
fwait
jecxz
dec
daa
dec
inc
xor
in
pop
xchg
push
and
out
mov
lret
and
inc
faddl
shrl
jge
push
loope
pop
mov
xchg
inc
jg
pop
mov
daa
mov
iret
nop
dec
comiss
xacquire
sub
loope
stos
mov
push
or
jnp
mov
dec
inc
enter
mov
mov
pop
mov
adc
aaa
cmp
push
sbb
stos
movsb
push
ljmp
mov
cmp
fistpl
cltd
or
add
imul
mov
fucompp
sbbl
jl
dec
dec
sub
insl
daa
dec
orl
xchg
cmp
pop
les
inc
dec
xor
jecxz
lds
add
inc
dec
xor
cmc
daa
sub
cmp
cmpsb
loopne
dec
popa
sti
xchg
dec
call
xor
lods
jl
cmp
in
lret
or
cmc
mov
inc
dec
in
lods
shrb
imul
or
fdivs
addl
jl
into
dec
ljmp
mov
dec
or
and
rcr
stc
outsb
sti
lretw
xchg
lahf
rclb
add
inc
jle
dec
lods
nop
sti
jmp
adcb
cmp
dec
jno
stos
nop
pop
stc
popa
inc
jmp
mov
outsl
movsl
into
out
fiadds
lds
cli
inc
dec
js
mov
rorb
lock
adc
jo
iret
mov
cmp
pop
xor
mov
sbb
or
mov
dec
and
pop
jmp
jns
rcr
stc
rcrb
sub
push
xchg
mov
cmp
sub
mov
mov
mov
push
inc
pop
sub
daa
xor
sbb
push
nop
push
dec
jne
subb
pusha
in
sbbl
arpl
sbb
stos
push
mov
mov
fcomi
dec
inc
cmp
dec
icebp
pop
shlb
pop
loop
rcl
mov
dec
cmp
cmp
mov
imul
outsl
in
lods
pop
adc
into
pop
test
xchg
add
out
xlat
daa
dec
push
push
pop
das
jmp
mov
pop
pop
lcall
xlat
loop
push
cmp
into
loope
loop
pop
and
mov
push
xor
sub
and
loope
dec
push
jg
dec
insb
sbb
xlat
rolb
enter
mov
sub
mov
lods
enter
jae
cmpsl
sbb
pop
xor
jg
jbe
pop
mov
leave
sarl
ret
repnz
or
mov
adc
lret
jp
insb
cwtl
mov
jmp
repnz
dec
sarb
imul
stos
pop
outsl
push
jp
fisubrs
test
pop
lock
add
mulb
mov
call
inc
sbb
mov
sub
add
shrl
sub
aaa
jecxz
add
daa
pop
mulb
fldl
push
push
lret
pop
cmp
arpl
lret
mov
lahf
sbb
fs
xchg
inc
into
xor
pop
add
jo
cmpsl
mov
lock
aas
pushf
bound
inc
test
push
add
decl
push
cmp
pusha
or
or
sbb
cmp
test
xchg
push
inc
cmpsb
sbb
ds
aas
pop
aaa
xchg
mov
inc
mov
cmc
popa
pop
ret
xchg
push
inc
push
daa
sub
xor
add
stos
in
pusha
and
dec
mov
jg
inc
bound
aad
push
cmp
mov
in
inc
out
loopne
sbb
or
test
fistpl
pop
cld
shlb
jp
lcall
mov
outsb
sbb
js
daa
push
pop
pop
xchg
push
scas
pop
lea
sub
pop
cltd
mov
or
and
xlat
clc
lods
ficomps
mov
cmp
add
inc
push
ret
aaa
push
lret
xor
stos
scas
pop
sub
adc
inc
jae
sbb
sub
xor
popa
out
mov
pop
test
mov
jae
push
cli
sub
inc
imul
fmull
dec
or
enter
push
daa
push
fidivs
and
add
mov
mov
cs
or
and
imulb
repz
push
sbb
fdivrl
js
xchg
je
sub
lds
out
and
loopne
pop
vmovlpd
mov
mov
in
jb
sti
mov
sub
mov
ljmp
sub
cmp
push
xchg
cmp
jg
icebp
jl
test
sub
shlb
add
jo
sarb
into
sub
and
push
nop/reserved
int3
pop
mov
cmp
jb
jmp
mov
inc
js
rol
movsb
or
cmp
mov
push
data16
pop
or
pop
or
ret
cmp
hlt
test
pop
or
cmpsb
add
fisubrs
mov
or
pushl
out
lea
inc
or
jne
pop
rclb
lret
dec
cmp
dec
sub
cmp
lret
mov
xchg
mov
insb
dec
lret
fstps
fiaddl
sbb
sbb
sub
lahf
fdivs
loop
and
popa
xor
and
inc
mov
or
jg
jg
loopne
daa
dec
mov
outsb
pushf
mov
jg
mov
cmpl
pop
es
popf
xor
in
push
lock
mov
fadds
jo
jno
addr16
cmp
inc
inc
and
cmpsb
inc
dec
les
sub
or
mov
xchg
mov
add
or
sbb
cmp
pusha
addb
adcb
sub
insb
mov
data16
call
mov
sub
mov
sbb
aas
add
xchg
lds
dec
pop
lock
inc
mov
add
popa
or
lock
push
daa
ljmp
mov
inc
mov
das
push
dec
mov
nop
cli
sub
xchg
pop
inc
pop
dec
fwait
xor
inc
pop
mov
dec
scas
lret
fldenv
jmp
xchg
popa
add
std
imul
enter
mov
jmp
inc
out
lret
mov
lcall
inc
out
js
cwtl
aas
fstpt
pop
clc
imul
inc
inc
cmp
imul
js
xor
loop
jg
clc
pop
repnz
push
mov
dec
adc
xchg
pop
xchg
mov
sub
mov
jb
add
les
std
icebp
popf
std
push
loop
xor
dec
jp
cmp
push
xchg
xchg
ja
mov
pop
xor
leave
pop
xlat
pop
sbb
movsl
cmp
int
sub
repz
loop
mov
pop
sbb
out
int
adc
adc
sub
add
aas
add
cltd
add
arpl
movsl
sbb
cmp
inc
mov
dec
adc
add
pop
clc
push
lret
lahf
ret
jo
and
dec
xchg
iret
movsl
push
dec
repnz
imull
inc
or
xchg
or
jb
jne
push
fildll
jo
and
cli
or
sbbl
cvtpi2ps
dec
xor
push
stos
dec
subb
mov
js
fwait
xor
sbb
mov
int3
popa
cmp
push
xchg
sbb
sub
sub
pop
pop
dec
js
clc
fwait
int3
mov
inc
mov
jae
test
sub
jle
fwait
cmp
pushf
imul
pop
adc
jecxz
push
xchg
incb
dec
cli
dec
push
mov
les
stos
aad
leave
or
out
mov
movsl
mov
inc
sbb
cmp
leave
mov
jle
addb
xchg
leave
xor
sbb
ror
hlt
addb
inc
dec
lret
push
faddp
inc
add
jecxz
mov
mov
and
cmc
xchg
push
or
rclb
lahf
es
pop
sti
in
jmp
mov
in
ret
mov
or
or
ljmp
add
or
lret
lret
and
fdivrs
rclb
orb
das
pop
nop
sbb
repnz
std
cmp
pusha
pop
pop
les
cli
lret
imul
pop
inc
in
scas
arpl
test
cmp
xchg
out
data16
pop
ss
pop
adc
lcall
and
lcall
mov
pop
dec
add
push
xchg
inc
lahf
test
adc
add
xor
adc
in
fs
adc
or
cwtl
mov
push
push
or
shlb
jmp
in
loop
mov
aas
add
inc
sysexit
xchg
mov
fcompl
adc
adc
ja
inc
movsl
pop
fs
or
cmp
es
rcrl
hlt
dec
stos
xchg
mov
pop
sahf
ljmp
or
sbb
pop
jne
fistl
pop
f2xm1
and
cs
inc
push
cmpsb
mov
mov
sbb
mov
cmp
cmpb
add
xor
or
jle
scas
inc
cmc
inc
xor
sub
lahf
cmpsb
rclb
inc
sub
loop
sbb
mov
out
movb
stos
dec
adc
jmp
sti
les
addr16
scas
and
rcrb
fwait
adcb
xchg
stc
push
push
inc
and
inc
fisubl
divl
push
sub
mov
or
and
sbb
loop
mov
inc
push
inc
push
mov
pop
insl
push
and
mov
ret
js
mov
mov
pop
mov
jmp
add
and
das
test
loopne
repz
movsl
cmp
or
iret
xchg
mov
aad
or
pop
pop
cltd
jns
lret
mov
sub
jnp
sub
fiaddl
stos
dec
insl
xchg
inc
jb
and
pop
xchg
fcomp
lahf
jg
or
or
mov
xchg
push
inc
gs
push
or
dec
mov
add
lret
ud2
and
sub
dec
je
mov
add
adc
jb
dec
sarl
xchg
ficomps
push
xchg
arpl
jb
push
fsubl
pushf
out
push
cmpsb
sub
sbb
in
fs
popa
cs
in
and
enter
lock
dec
clc
add
xchg
inc
js
jno
jnp
mov
or
push
mov
cmp
pushf
jne
inc
mov
dec
call
inc
fimull
pop
imul
int3
lret
data16
mov
and
int3
push
push
sbb
imul
mov
stc
addl
xor
jo
ret
or
test
lds
cmpsb
pop
outsl
and
inc
dec
push
sbbl
mov
stos
sub
enter
fsubp
sbb
sti
call
nop
int3
out
pop
lock
dec
mov
cmp
adc
sub
popa
ja
pop
lahf
adc
xchg
rolb
xor
add
fwait
inc
popf
call
shr
icebp
iret
push
xlat
es
inc
sub
enter
loopne
xchg
les
mull
dec
jbe
fisubl
mov
push
sbb
scas
stc
mov
inc
mov
inc
inc
push
lods
jp
push
lea
dec
aas
add
xor
daa
in
inc
popa
push
ret
xor
pop
push
mov
or
jp
cs
iret
push
inc
andb
mov
cmpsb
add
sub
ret
setp
arpl
cmp
ret
xor
jmp
movsl
mov
daa
movsb
sbb
pop
ds
testl
mov
xor
lret
or
mov
in
cmp
rcrl
in
dec
imul
daa
push
leave
fnsave
jnp
enter
mov
mov
pop
fldcw
push
data16
loopne
jbe
lret
and
les
mov
cltd
lods
mov
rcrl
dec
daa
in
mov
imul
das
jmp
fldcw
push
daa
std
pop
or
cmp
sbb
sub
pop
pop
sub
aaa
sbb
xor
pop
adc
push
addr16
xor
dec
shl
sub
jns
negb
stos
int
adc
mov
leave
je
ror
std
pop
jno
and
lds
shll
sub
bound
fisubl
arpl
xlat
dec
or
sbb
jo
outsb
xchg
inc
jmp
mov
fnsave
mov
jp
insl
call
xlat
lcall
xor
jb
push
jl
in
jge
rcrb
clc
lret
add
ds
add
icebp
mov
in
or
jmp
imul
xor
notl
mov
jae
dec
dec
cmc
fnstcw
fldenv
fs
adc
push
pop
dec
jp
into
and
add
push
daa
dec
sub
sub
add
stc
pop
mov
inc
xor
sub
mov
leave
rol
add
and
or
ja
adc
or
es
dec
test
sub
in
in
cmp
sbbb
mov
dec
cmpsb
mov
or
outsb
dec
mov
gs
and
ja
dec
add
sbb
addb
pop
mulb
ljmp
ret
out
lret
add
aaa
hlt
cmp
bound
inc
xchg
push
shll
jbe
inc
mov
inc
xor
sub
jbe
add
sub
les
mov
or
push
pop
mov
pop
mov
cmp
bound
in
mov
or
jecxz
jge
leave
daa
jp
push
mov
sbb
mov
add
imul
rorb
jp
loop
pop
push
adc
test
xlat
call
cmp
mov
adc
jne
dec
lds
mov
push
sahf
add
aaa
enter
popa
xchg
les
inc
sub
icebp
scas
fstps
jo
xor
es
fmul
mov
inc
call
inc
out
into
mov
int3
push
cmp
mov
rorb
xor
push
dec
into
jns
xor
js,pt
add
lahf
xchg
pop
nop
out
mov
sub
out
lret
xor
ja
pop
add
inc
lock
test
push
pop
mov
or
dec
imul
dec
lahf
pop
dec
push
out
fstpt
dec
out
add
add
add
sti
cmpsl
sbb
flds
rorb
ret
mov
cwtl
add
call
movsl
fwait
movl
and
fisttpl
cmp
scas
insl
push
stos
cli
fwait
inc
jae
push
push
cs
pusha
jle
ficoml
add
into
mov
cmp
fwait
dec
in
call
push
loop
outsl
sub
lret
daa
mov
dec
mov
jecxz
data16
pop
adc
lahf
or
push
pushf
leave
aaa
pop
and
and
cmp
testb
mov
xor
lds
push
or
mov
push
mov
add
std
stc
lock
nop
cmpsb
fidivs
pusha
add
es
mov
jmp
xor
and
mov
push
movsl
int3
pop
cs
leave
test
ja
dec
mov
testb
cli
shl
push
mov
aad
xor
inc
addl
outsl
out
in
lods
out
dec
imul
stos
sbb
into
adc
push
aaa
mov
cs
lret
rclb
inc
sub
and
inc
pushf
lea
fs
xchg
adcl
rcr
inc
mov
aas
sub
mov
lds
int3
jle
jnp
mov
dec
and
rcrb
dec
pop
pop
pushf
pop
cs
jne
movaps
addr16
mov
add
lret
mov
lret
dec
lods
dec
rcr
fwait
out
std
nop
out
std
cmpb
jns
dec
cmp
cmp
pop
aam
inc
aas
std
mov
in
lcall
decb
jns
cltd
ds
adc
mov
movsl
xchg
or
aaa
xlat
loope
dec
push
adc
out
sub
inc
and
mov
test
test
enter
pop
mov
or
flds
push
int
lret
popa
test
cmp
inc
out
into
mov
int
dec
inc
sahf
jb
int3
mov
cs
mov
lret
addr16
imul
daa
dec
dec
sbb
cmp
pop
inc
into
les
inc
sub
add
and
rorl
add
inc
ret
fiaddl
aas
daa
fidivrs
pop
pop
fstp
lods
ljmp
inc
pop
sbb
fsubrl
retw
cs
push
sbb
aaa
stos
cmpsb
add
pop
cwtl
ficomps
fcomip
cmc
cltd
pop
jnp
cmp
mov
dec
imull
push
adc
popa
inc
mov
jmp
xlat
fs
xor
pop
inc
or
pop
or
cmp
dec
dec
sub
or
rcrl
cs
adc
sub
insb
sub
adc
mov
xchg
ja
loopne
rcr
dec
les
sbbl
mov
inc
cmc
mov
mov
jb
faddp
int3
aam
addr16
adc
pusha
add
movsb
les
test
data16
mov
psubw
mov
mov
add
mov
out
jle
dec
pop
leave
adc
jmp
and
pop
cmp
sub
xor
cwtl
cmpsl
or
adc
popf
add
aad
inc
enter
mov
in
xor
pop
int3
inc
add
sub
and
mov
dec
in
xor
mov
aad
pushf
aad
out
scas
ret
pop
or
inc
or
lret
or
cwtl
inc
xor
aam
fisttps
pop
pushf
add
push
cmp
push
das
sub
xor
mov
leave
dec
daa
in
call
int3
sub
pusha
add
add
xchg
mov
test
mov
push
insl
fisubrl
sti
sub
jg
lods
hlt
popa
fsub
xor
mov
mov
dec
inc
pop
popa
lea
dec
enter
shrb
jbe
cltd
daa
in
pop
in
dec
mov
jmp
pop
sub
lret
test
mov
lcall
jmp
mov
pop
ja
and
inc
sub
sub
cmp
lock
push
jns
scas
popa
adc
xor
pusha
add
lock
lea
add
fnsave
les
sbb
ret
xchg
adc
aaa
fnstenv
scas
imul
inc
push
adcl
xchg
clc
jo
movb
mov
and
call
es
push
shl
in
fsubrs
push
pop
mov
adc
dec
and
nop
test
in
in
sub
insl
cwtl
fisttpl
sbb
outsb
xchg
xchg
and
add
mov
lcall
jl
test
mov
orb
outsl
int
loope
pop
inc
shrb
adc
stos
jno
int3
pop
shlb
inc
test
incl
loopne
or
pop
clc
faddl
inc
shll
popa
pop
stos
add
jns
mov
cmp
push
xchg
shl
dec
xchg
fstl
dec
cltd
or
ret
cmp
xchg
repnz
das
rorl
insl
lcall
daa
sub
push
mov
cmp
or
mov
cmc
decl
xor
mov
es
roll
xchg
push
xchg
mov
or
and
repz
ja
xchg
pop
stc
jl
testb
xchg
call
lret
sub
sub
roll
mov
jg
sahf
loopne
inc
in
sub
xchg
xor
dec
lea
cmp
jno
inc
cmp
aas
out
aas
dec
lcall
mov
shrb
imul
mov
lods
call
sub
rorl
add
sub
stc
pop
mov
push
les
ret
mov
sub
pop
pop
in
xor
jae
push
mov
ljmp
in
pop
ja
sub
test
pop
mov
sarl
jmp
out
push
sub
cli
stos
sub
rcll
dec
insb
inc
data16
in
mov
add
push
jecxz
inc
mov
xchg
xchg
jmp
or
fiadds
outsl
lds
and
test
fmull
bound
add
sub
in
leave
pop
cmc
jns
add
and
cmpsb
and
insb
sbb
movb
test
cmp
xorb
fwait
inc
mov
ret
adcl
add
sbb
fs
incl
or
xchg
jae
je
dec
or
mov
dec
push
add
addr16
sbb
incl
add
ficompl
mov
and
fiaddl
inc
test
sbb
adc
lahf
push
rorb
mov
cmp
sub
fbstp
fisttpl
aas
and
sub
inc
xlat
mov
adc
lcall
fiadds
add
stos
inc
repz
add
xor
std
jle
test
jo
inc
adc
fwait
sbb
ret
enter
jp
insb
sti
or
fs
push
sub
and
jecxz
lidtl
popf
dec
sub
and
inc
test
insl
call
inc
xchg
xchg
or
sub
gs
dec
pop
xchg
sub
sbb
decl
push
clc
fs
push
cmpsb
repz
cltd
aam
mov
pop
leave
fistpll
movsb
adc
dec
cmp
pop
inc
aaa
loop
mov
mov
lahf
adc
adc
jp
adc
fucomi
std
jbe
pop
leave
push
mov
sar
fidivrs
std
fmull
aam
dec
cmp
aam
inc
or
ja
je
jmp
rcrb
adc
sub
and
and
fucom
or
sub
gs
jnp
lret
movsb
cltd
cld
pusha
hlt
inc
sub
sbb
push
mov
repnz
cltd
stc
cmpsb
fstpt
andb
jmp
jl
mov
test
push
add
test
push
pusha
cmp
fnsave
cmp
repz
out
clc
mov
enter
daa
fisttpl
sbb
mov
pop
test
push
aam
fldcw
pop
stc
push
fdivs
xchg
sub
fisubl
adc
stos
roll
xchg
mov
sbb
shrl
shlb
ret
into
sub
jb
stos
int
insb
add
cmp
test
push
dec
dec
add
xchg
popa
cmpsb
cs
testb
leave
dec
dec
stc
pop
loope
ret
loop
daa
dec
dec
pop
inc
ret
imul
out
lds
ret
inc
dec
mov
daa
inc
dec
ret
dec
rcl
inc
incl
clc
push
lcall
adcb
and
popa
inc
test
mov
sbb
mov
ret
fsubl
sub
fcmovu
sbbb
pop
pop
pop
fadd
pop
pop
xlat
and
pop
add
sub
aad
adcb
movl
push
pop
rcl
push
add
rcr
adcb
pop
dec
pop
into
ret
int
dec
leave
int3
fiaddl
dec
daa
lret
xchg
ror
test
mov
dec
incl
stos
dec
fiaddl
enter
dec
or
ret
sub
vpsrad
pop
inc
ret
inc
and
in
dec
rcr
leave
mov
cmp
adc
sar
cwtl
sub
rorl
mov
mov
jo
imul
daa
imul
sub
into
inc
add
pop
mov
mov
sub
jb
mov
mov
jno
arpl
rcr
push
lcall
mov
push
dec
pop
mov
stos
int
inc
inc
jg
cmp
les
mov
adc
movsb
cwtl
inc
push
lock
popf
lcall
ljmp
mov
stc
adc
repnz
ljmp
movsl
orb
dec
pop
das
fidivrs
fdiv
push
mov
xorb
es
inc
mov
sub
dec
stc
out
fbld
ljmp
dec
sbb
mov
mov
pop
cmp
xchg
shl
repz
ja
inc
jl
inc
xchg
and
cmp
insb
sbb
sbb
or
cmp
jb
inc
leave
dec
test
leave
mov
pop
mov
xor
enter
dec
sbb
xor
mov
lds
outsb
lret
and
xor
je
dec
mov
or
call
dec
stc
iret
jmp
aas
push
adc
repnz
pop
add
jnp
push
fmull
or
fsubl
rol
dec
sub
add
inc
push
push
inc
faddp
pop
pop
aas
gs
insb
add
adc
test
pop
and
add
je
pop
cwtl
insb
or
pop
jmp
and
xchg
cltd
pop
add
out
fldenv
inc
jne
jae
cli
jg
rorb
imul
fwait
mov
pop
inc
inc
and
and
fstp
in
loop
inc
cmp
faddl
fadds
stos
jp
inc
or
scas
adc
in
xor
xor
adc
and
pop
mov
adc
lock
sbb
pop
loop
cwtl
ret
movsb
adc
bound
pop
dec
cwtl
sbb
pop
push
ss
and
enter
dec
call
arpl
shll
mov
xor
leave
int3
and
pop
imul
iret
jecxz
cli
pop
lahf
sub
push
sub
pop
mov
nop
rolb
dec
cli
sub
lods
stc
mov
enterw
mov
adc
pop
fidivl
or
lret
aas
loope
stc
jg
add
sti
mov
bound
cmp
testl
and
lock
mov
shlb
lds
data16
mov
push
movsl
jl
nop
lock
pop
lea
jo
ja
inc
mov
pop
mov
and
jnp
stos
inc
or
daa
push
adc
xchg
pop
loop
in
out
jp
inc
lret
jecxz
add
pop
jle
das
push
dec
std
gs
add
icebp
mov
dec
scas
xor
sub
aaa
inc
pop
dec
call
divb
imul
mov
adc
push
mov
jecxz
mov
mov
les
pusha
sbb
mov
sub
je
cwtl
je
daa
sbb
push
or
mov
repnz
sbb
ret
cmp
cs
xchg
or
lds
fwait
adc
stos
pop
pushf
fisttpll
leave
call
adc
in
lea
jmp
or
leave
loopne
rcll
xchg
sahf
stos
sub
mov
or
cvtpi2ps
arpl
dec
mov
cmp
inc
dec
fiaddl
adc
lds
pop
ja
push
inc
ret
data16
fmull
mov
es
addb
sub
ret
daa
add
sub
dec
dec
jp
hlt
pop
jle
add
add
stc
xor
mov
fistpll
scas
aam
push
movsb
xor
rorl
pop
jbe
lds
cmp
leave
in
and
pop
out
mov
aam
ffreep
ja
xchg
add
mov
inc
aaa
loopne
jge
pop
or
ja
dec
outsl
rcll
movsl
dec
inc
out
repz
sbb
stos
jge
cmp
mov
fneni(8087
push
cs
inc
add
pop
jb
inc
lret
in
cmp
jbe
insb
mov
add
jb
mov
cltd
mov
push
lods
mov
imul
mov
das
lods
push
push
roll
mov
aas
je
sub
lret
negb
roll
inc
sarb
out
or
popa
inc
mov
cs
pushf
fistl
sbb
stc
mov
add
inc
dec
sub
ret
pop
pop
pop
pusha
mov
jecxz
hlt
je
sarb
sub
xor
in
pop
jge
stos
scas
push
das
jns
lret
fimuls
repz
dec
ror
fisttpl
dec
jg
mov
sub
inc
inc
sbb
dec
lea
sub
pop
rorb
or
sub
xor
mov
inc
dec
rolb
in
adc
sbb
lret
dec
and
js
or
mov
push
mov
dec
cmpsb
inc
pop
daa
ss
stc
push
jle
pminsw
aaa
and
jge
int3
push
fisttpll
lret
push
xor
mov
shlb
shlb
out
push
sub
and
repnz
jo
les
lods
and
pushf
xor
sub
or
pushf
or
add
cmp
pushl
sub
mov
dec
sbb
xchg
ljmp
and
sub
or
add
mov
fdivrl
mov
stc
sbb
adc
mov
fmul
repnz
sub
pusha
mov
pop
jb
xor
mov
cmp
mov
inc
fstl
aad
dec
pop
fcmove
loop
jge
loop
mov
push
push
insl
and
std
push
mov
in
add
jb
jg
mov
cmp
sbb
addr16
or
iret
pop
inc
bound
add
inc
push
out
mov
add
jmp
ret
jnp
mov
out
xchg
lods
and
sarl
int
lret
xchg
and
aad
sub
lahf
dec
ss
pusha
and
pop
mov
insb
ret
pop
test
movsb
xor
call
pop
std
push
mov
loope
and
sbb
ret
rol
sbb
adcb
leave
loope
loopne
mov
push
mov
xor
push
xchg
sub
adcl
inc
adc
movsl
decl
jl
repnz
xchg
xor
lods
popf
fstl
adc
dec
cmp
cmp
roll
xchg
xchg
or
lds
out
sub
fbld
fcmovu
xor
add
mov
popf
cmp
mov
aad
jo
cld
mov
lods
push
ds
pop
mov
in
repnz
mov
daa
aam
repnz
imul
dec
scas
imul
enter
fisubrs
dec
sbb
dec
cltd
dec
mov
mov
cmpsb
or
push
xchg
pop
xchg
add
hlt
adc
cmp
jg
int3
dec
push
inc
dec
mov
orb
adcl
sub
push
out
rcrl
cmp
cmp
inc
inc
leave
and
call
stos
jg
inc
inc
lcall
fisubl
dec
push
es
cmpsl
fdivl
sub
lret
lahf
add
adc
xchg
repnz
dec
cmp
jl
xlat
inc
pop
push
cmp
dec
pop
jecxz
les
dec
in
adc
push
add
dec
sbb
mov
cwtl
dec
mov
lret
mov
sti
jmp
add
sbb
test
insl
sahf
lods
jecxz
aaa
ret
adc
lock
or
in
leave
or
jle
mov
pop
daa
add
inc
inc
and
cmp
call
dec
jb
mov
test
fcompl
inc
cmpsl
loopne
sub
dec
mov
adc
cmp
cmp
leave
mov
lds
je
lods
xor
or
int3
cmc
sub
loop
jle
mov
inc
insb
outsl
sub
push
lret
xor
pop
push
mov
loope
loop
pop
jnp
and
fucomp
scas
sub
lret
xchg
out
pop
jecxz
jmp
cli
stc
aad
dec
jno
in
loopne
sbb
pop
mov
scas
ficoml
xchg
std
dec
push
mov
pusha
jp
mov
sub
push
sarl
das
gs
inc
cmp
and
cltd
int3
lods
out
sarb
jno
ds
rcrb
mov
inc
sub
std
mov
add
add
bnd
push
arpl
sub
bnd
or
push
stos
cwtl
dec
jns
adc
andl
adc
mov
add
aaa
sub
pop
push
inc
adc
add
lcall
mov
sar
data16
aad
dec
sub
push
imul
fwait
dec
push
rol
mov
cmp
add
icebp
out
cmpsb
xor
pop
lds
incb
loopne
cmpsb
rcrl
dec
push
adcb
dec
andb
mov
and
mov
pop
push
lds
xor
leave
pop
and
outsl
aam
sub
stos
add
fiaddl
inc
ret
les
adc
pushf
mov
filds
xor
mov
pop
dec
or
xchg
lret
or
rcrb
mov
aas
clc
lahf
pop
cli
rolb
push
add
mov
addr16
leave
mov
add
insl
pop
in
mov
adc
stos
xor
or
stos
insb
enter
pop
inc
mov
adc
call
cmp
adc
push
stc
pop
mov
and
mov
lret
add
movb
dec
dec
ret
xor
in
cmp
xchg
mov
adcl
push
nop
cmp
or
int3
or
jnp
call
stos
js
dec
pop
mov
enter
in
xchg
rolb
movsl
jne
xor
pusha
push
notb
dec
mov
push
cltd
ffree
mov
push
mov
xor
xchg
xlat
sbb
fs
dec
cmp
fistpll
add
add
mov
xor
dec
je
xchg
sbb
imul
add
insb
inc
sub
jle
fs
push
lret
mov
cmp
jnp
bound
and
sub
sub
test
das
dec
lret
imul
or
ja
xchg
sbb
dec
jnp
scas
add
shl
jg
cltd
cs
ret
or
loope
das
fld
xor
adc
enter
jne
jp
sub
ret
pop
sahf
test
out
jns
jecxz
pusha
imul
pop
cmp
test
frstor
sarl
push
nop
dec
stos
pop
in
mov
cli
push
frstor
clc
das
xchg
daa
dec
test
test
dec
cmpsl
sahf
xor
cmp
fninit
jbe
dec
ret
lret
sub
xor
or
mov
adcb
dec
fisubs
hlt
add
sub
add
mov
lods
add
adc
cld
and
cmp
aas
aad
push
push
push
ljmp
add
imul
dec
lea
bound
fcmovb
mov
push
pusha
pop
sub
dec
loop
inc
sbbl
mov
ljmp
lods
mov
xchg
mov
cwtl
out
leave
imul
adc
mov
sub
and
fisttpl
in
jl
ljmp
outsl
imul
pop
out
sbb
shrl
jg
add
and
cmp
cmp
es
or
leave
fdivrl
jecxz
push
dec
sub
icebp
jbe
inc
xchg
pop
jecxz
pusha
rcrb
xchg
ret
addb
mov
scas
in
aam
lret
sub
xor
nop
or
push
pop
lret
push
dec
inc
mov
sub
sub
clc
cmp
sti
push
fsts
out
or
aad
insb
inc
in
mov
inc
jge
shll
add
xchg
dec
and
sbb
mov
in
xor
shll
and
dec
dec
fsubl
cwtd
add
js
dec
or
or
jmp
les
sub
xor
test
adc
sub
cwtl
add
popa
into
add
push
test
jns
cmp
push
lret
out
adc
dec
adc
enter
mov
aam
add
fistpll
or
bound
cltd
ja
mov
int
js
jne
sahf
add
mov
std
mov
out
or
inc
rcrb
inc
enter
dec
and
out
pop
dec
dec
xor
inc
xchg
pop
pop
paddusw
les
lahf
pop
pusha
sub
loope
and
sub
in
cwtl
data16
out
inc
ret
rclb
mov
cmp
fists
idivl
sub
ljmp
push
and
pop
divl
inc
push
cmp
jp
jecxz
mov
inc
jmp
sbbl
or
scas
mov
cmp
rcr
cmp
inc
or
vcmppd
cmp
sbb
fs
outsl
subl
lock
cmpsb
lods
mov
add
aaa
inc
test
adc
cmpl
lods
mov
jo
add
jo
fucom
mov
xor
popa
jno
outsl
xor
mov
in
sbb
dec
jmp
in
or
or
ljmp
fmul
in
es
xchg
insl
xchg
xor
mov
psadbw
push
out
in
inc
mov
lods
mov
jp
lret
add
dec
cmpsb
jns
pop
dec
popa
mov
pop
rcrl
or
xchg
ja
ljmp
fldlg2
sub
sub
inc
lods
xchg
cmpsb
ds
push
push
and
adc
iret
movsb
icebp
cmp
fsubrl
add
inc
push
jne
sub
mov
stos
cmp
mov
mov
push
cmp
test
je
fidivrl
or
jnp
mov
lret
push
mov
inc
cmp
mov
and
add
push
xor
mov
mov
lret
jecxz
pushf
push
enter
xchg
pop
scas
or
mov
lahf
dec
repnz
xor
or
cmc
fidivl
pop
dec
cmpb
icebp
cli
test
fstps
mov
push
ficoms
popa
and
sbb
push
pop
lods
mov
cwtl
lret
dec
aaa
mov
inc
sub
mov
dec
and
int
add
mov
dec
test
fisttpl
push
dec
loop
pop
ficoml
sahf
jns
cmp
cmp
push
pusha
out
das
cmp
fdivrl
ret
push
movsb
inc
or
dec
stos
sbb
dec
mov
cmp
out
add
mov
fadd
jb
pushf
jle
sti
inc
mov
pop
xorb
test
or
leave
jmp
and
mov
inc
jp
jae
cmp
addr16
mov
lods
mov
lea
pop
sub
cli
push
subl
data16
pushf
dec
pop
sarb
dec
and
js
mov
insb
jb
movaps
stos
mov
in
loope
jbe
sbb
xor
dec
andl
sbb
cmp
bound
into
incl
test
pusha
das
repnz
mov
or
dec
aad
inc
sbb
sbb
adc
insl
mov
sarl
inc
sbb
add
cmpsl
insl
repz
dec
mov
enter
shr
jae
mov
cmp
lock
in
or
or
jno
inc
cmp
clc
icebp
and
xor
xor
ret
jb
pop
mov
add
out
or
sub
cmovle
cmc
sahf
fldcw
adc
inc
ret
fbld
bnd
mov
les
sbb
sub
xor
or
or
and
xor
std
int
fidivl
lods
adc
jecxz
sub
mov
les
shlb
sub
pop
lods
ds
sub
lea
call
fwait
pop
sub
loope
sbb
aaa
imul
xchg
fiadds
push
mov
xchg
icebp
fwait
inc
jo
cmpsb
mov
out
dec
mov
cmp
inc
inc
les
orl
or
nop
shrl
gs
stos
dec
movsl
dec
cmp
mov
jns
and
pop
pop
and
inc
mov
inc
jmp
or
xchg
lret
or
dec
rolb
inc
in
and
jae
jne
cmp
int
mov
xchg
pop
add
mov
mov
mov
sti
jmp
mov
and
pop
pop
int3
and
loopne
movsl
mov
sub
mov
dec
push
cli
add
dec
movsl
aam
mov
push
xor
dec
pop
fbstp
daa
ja
dec
shlb
xchg
les
dec
jbe
push
and
iret
dec
mov
xor
addb
js
nop
xchg
dec
adc
xchg
lret
fwait
sub
arpl
inc
xchg
cmp
testb
fidivrl
out
xchg
jo
test
loop
fcmovb
jae
or
daa
push
enter
enter
dec
gs
and
lcall
push
js
xor
cltd
pop
jp
pop
or
push
dec
inc
lcall
cmpsl
sub
xchg
dec
cmpsb
mov
xchg
dec
daa
push
xlat
loopne
mov
cmpsb
sti
hlt
sbb
sub
bound
lcall
std
ficoml
push
insb
jae
flds
iret
das
stos
shll
mov
test
dec
mov
leave
and
int
add
repnz
test
xchg
inc
jbe
mov
mov
daa
fs
inc
inc
xchg
pop
fimull
loop
push
pop
rclb
aad
loop
ficompl
mov
sbb
sub
mov
xor
xchg
pop
dec
xchg
leave
or
call
dec
mov
mov
cltd
roll
out
aas
test
fmull
push
xlat
ret
push
inc
ja
sub
inc
ljmp
cmp
ljmp
stos
repz
push
fstpl
dec
ficoml
pop
or
push
fdivrs
adc
inc
inc
mov
xchg
dec
fwait
cmp
cmp
daa
rcrl
ficoml
xor
xchg
inc
shlb
and
push
test
adc
dec
sub
dec
or
into
mov
int
dec
pop
int3
push
dec
dec
pop
inc
mov
mov
push
pop
add
add
inc
mov
in
fiaddl
push
sub
leave
les
ret
inc
loopne
rolb
jo
jbe
jmp
dec
stos
stos
les
mov
sbb
js
inc
incl
adc
pop
shll
xchg
dec
jge
cs
icebp
and
mov
pop
or
fistpll
test
mov
add
and
pop
cmp
or
pushf
aam
inc
dec
mov
ss
aad
dec
cwtl
sub
pop
leave
add
imul
jo
dec
push
es
out
push
mov
adc
testb
imul
mov
pop
xchg
test
sub
mov
add
andb
call
fwait
aaa
sub
pop
out
push
sti
fimull
mov
jae
mov
cmpsl
addr16
mov
fsubrp
adc
push
cwtl
lret
inc
sar
adc
dec
ds
scas
sbb
and
xlat
xor
shll
fisubl
es
xlat
mov
dec
or
fs
pop
jg
test
push
cmp
sbb
inc
cltd
enter
inc
push
call
and
cmpsl
nop
sub
sub
add
popa
or
adc
pop
dec
imul
pop
mov
test
movsl
out
fmul
mov
sbb
pop
cltd
bound
daa
adc
mov
add
cltd
lcall
push
inc
into
mov
sbb
inc
stc
jno
sub
dec
mov
add
add
push
dec
call
and
stos
inc
ret
movsl
add
sbb
cli
push
mov
or
testb
and
cmp
cwtl
inc
mov
inc
inc
jnp
xchg
aad
push
sbb
push
sbb
les
stos
lods
push
lods
je
mov
sbb
in
add
dec
in
mov
stc
repnz
mov
dec
rolb
in
stc
xor
pop
or
enter
femms
pop
mov
dec
mov
cld
xchg
push
push
test
fstps
mov
popf
mov
scas
add
xor
cmp
dec
add
jb
call
inc
pop
icebp
sbb
ljmp
mov
mov
nop
and
js
testb
xchg
loope
dec
sub
jae
mov
cwtl
in
cmp
lods
in
inc
shr
mov
mov
mov
jae
insl
sub
inc
cs
or
and
or
and
daa
movsl
js
fsubl
js
test
jo,pn
daa
xchg
cmp
add
mov
xor
sti
push
mov
cmp
mov
pop
xor
les
in
jecxz
out
dec
inc
dec
push
push
pop
cs
mov
mov
in
dec
dec
js
jns,pt
aam
pop
out
mov
mov
test
push
ret
dec
shlw
jecxz
les
inc
mov
push
adc
xchg
out
pop
cs
nop
leave
sbb
cs
or
push
cmpsb
shlb
push
jbe
es
dec
cmp
dec
dec
mov
xchg
adc
mov
leave
inc
ja,pn
dec
fcompl
mov
cmp
mov
cli
inc
ret
mov
or
cmpsb
lret
mov
daa
inc
jmp
jge
xchg
xor
add
and
xor
inc
mov
or
mov
or
movsb
pop
call
inc
or
es
inc
jecxz
fdivrl
std
decl
dec
jecxz
fdivrl
xchg
out
jmp
inc
cmp
jle
pop
mov
add
inc
ja
sbb
jb
ret
cmpl
stc
or
lret
sub
xchg
inc
outsb
sbb
and
mov
dec
lods
sbb
imul
push
jns
lcall
inc
fidivrl
mov
movsl
les
pop
pop
mov
sub
push
pop
push
pop
inc
xchg
mov
fwait
clc
daa
inc
sbb
mov
jle
inc
pusha
sbb
push
inc
push
pop
sbb
dec
call
ja
and
imul
arpl
aas
mov
mov
ja
and
dec
addr16
mov
xchg
push
arpl
mov
shll
mov
stos
jo
out
test
push
sub
jg
inc
or
dec
sbb
mov
shlb
inc
push
rcrb
xor
vpavgb
push
daa
daa
adc
lret
and
inc
add
lock
test
loope
dec
add
fsubrs
gs
and
sub
dec
pop
sarl
dec
cmp
sbb
inc
xor
pop
sbb
push
call
dec
inc
sbb
rorb
cmpsl
cmpsl
push
pop
inc
or
adc
cmp
jle
xchg
xchg
dec
xchg
pop
inc
push
out
adc
dec
inc
or
js
rcrb
mov
push
dec
xor
test
scas
lea
push
add
imul
lret
xchg
shl
cmpsl
or
imul
inc
xchg
inc
inc
jle
jae
jle
xor
loopne
xchg
test
push
xor
mov
into
insl
popa
inc
les
cli
mov
test
cmp
mov
pop
test
mov
je
jl
out
jge
dec
sub
lahf
sub
insl
in
ret
aaa
push
mov
or
sbb
ja
xchg
cmp
ret
jl
ret
fs
mov
imul
inc
bswap
test
dec
sub
sub
cwtl
and
mov
mov
fbstp
lds
jp
add
jmp
pop
ds
mov
mov
pop
gs
aad
pop
cmp
or
cmp
xchg
aas
stc
and
loop
xchg
in
jmp
outsl
and
xchg
jmp
dec
mov
repnz
lret
mov
lds
mov
cmp
mov
inc
pop
leave
cmp
loop
lret
dec
jae
push
pop
cmc
add
mov
dec
sbb
push
inc
jp
pop
cwtl
popf
stc
pop
dec
stos
data16
daa
leave
inc
fwait
mov
pop
inc
or
adcb
xchg
mov
mov
push
inc
mov
xor
add
inc
mov
lds
rorb
mov
lea
adc
bound
fwait
sub
mov
insb
call
sub
adc
mov
lods
leave
lret
ljmp
dec
mov
or
xor
xor
or
jne
out
fcom
aas
cs
cwtl
dec
pop
inc
sub
add
dec
daa
cs
les
add
clc
pop
enter
inc
enter
call
dec
jge
roll
loop
xor
lcall
jbe
out
cmpsb
or
js
dec
xlat
in
testb
mov
push
mov
jb
pop
push
scas
dec
subl
loop
xchg
inc
imul
stc
push
sub
pop
fisttpll
cld
test
pop
dec
movsb
fnstcw
cmp
mov
clc
pusha
stos
inc
jl
cmc
pop
jns
outsl
xor
dec
sahf
ret
fwait
cmpsl
ljmp
dec
ljmp
sar
cmp
cmc
adc
pop
test
mov
inc
pop
outsb
bound
lret
push
ret
dec
jecxz
rclb
in
push
inc
add
sub
inc
pop
cmpsb
or
xlat
xor
mov
lret
sub
mov
xchg
lahf
sub
lret
sub
inc
or
mov
and
xor
andb
cs
mov
fldl
inc
mov
mov
scas
ja
out
cmp
cmp
inc
pop
xorl
fscale
mov
push
fcompl
ljmp
nop
sarb
je
stc
ret
mov
movsl
lret
ja
push
mov
cmp
jo
repz
cmpb
dec
inc
sbb
mov
outsb
adc
out
dec
pop
into
jg
hlt
and
jecxz
cmp
call
and
andb
stc
adc
push
fs
sub
roll
pop
stc
pop
dec
mov
cwtl
add
cld
sub
scas
sub
or
idivb
add
mov
jecxz
inc
adc
out
in
shll
in
mov
leave
add
fldcw
loopne
daa
mov
adc
movsb
dec
dec
hlt
cmpxchg8b
lret
insl
jp
add
ljmp
test
inc
addl
daa
inc
ret
mov
inc
dec
pop
jmp
push
sahf
es
sub
mov
inc
scas
vpbroadcastmw2d
sub
dec
and
pop
cmpps
add
push
xchg
fdivrp
sub
cmp
sub
sarl
cmp
mov
cmp
inc
pop
push
ret
inc
mov
shlb
aas
loope
fbstp
sbb
in
mov
adc
insb
lcall
addb
xchg
mov
cmpsb
cmp
mov
pop
mulb
nop
loopne
and
jp
sarb
push
push
push
stos
dec
bound
rclb
inc
rol
mov
fidivrs
mov
inc
hlt
das
or
cwtl
lods
push
push
negl
lods
mov
mov
outsl
pop
shrl
push
es
mov
rclb
pusha
adc
xor
lock
xor
sub
xlat
inc
mov
pop
xchg
push
outsb
scas
daa
cmpl
xorl
lcall
add
mov
inc
sub
negb
das
call
xor
inc
jo
daa
sbb
push
jae
add
rorl
ja
xor
or
or
or
adc
nop
shlb
pusha
jne
and
push
data16
flds
pop
ficomps
jg
jne
aas
rolb
test
mov
mov
popa
jns
lahf
dec
jp
into
or
mov
out
mov
cmp
dec
push
clc
cwtl
into
shrb
lcall
sub
in
test
adc
rclb
sti
repnz
std
mov
je
pop
jge
sbb
mull
ljmp
vpaddsw
or
insb
flds
pop
sbb
int
pop
mov
adc
fimuls
dec
inc
out
dec
rcrl
jnp
dec
std
pop
ljmp
pop
fdivrl
xchg
cmpsb
inc
jae
movl
lods
xchg
mov
in
movl
mov
cmp
and
inc
stos
or
fwait
mov
repnz
subl
call
cmpsb
dec
or
sub
mov
leave
mov
rol
jne
jmp
gs
push
dec
hlt
ret
divl
sbb
call
aad
pop
and
jle
inc
xor
adc
push
inc
inc
sub
jne
sub
fptan
and
pop
cmp
clc
fmul
frstor
pop
jae
inc
dec
inc
jns
inc
push
jo
sbb
adc
not
lret
call
shrb
and
mov
pop
xor
dec
sbb
and
adcb
mov
dec
adc
sbb
sbb
inc
sub
rcrb
mov
mov
jecxz
iret
cli
dec
push
ficoml
mov
push
add
mov
cmp
cmp
shlb
jmp
nop
outsl
clc
aas
or
fimuls
and
jbe
stc
push
clc
xlat
out
data16
sti
xor
jno
fcmovnu
jne
sub
xchg
sub
stos
sub
and
mov
mov
cmp
bound
inc
push
lcall
mov
mov
or
jae
mov
push
dec
pop
in
mov
movsb
and
out
sub
jno
cmpl
enter
pop
decb
jmp
js
mov
faddl
imul
xor
lret
les
adcl
fcmovbe
in
add
roll
call
aaa
sub
mov
lahf
hlt
incb
mov
xchg
inc
fwait
data16
fcoms
pop
mov
rcl
mov
fildl
testl
rorb
lds
fstpt
mov
sbb
jb
les
stc
cld
dec
xor
es
imul
mov
data16
out
mov
inc
fdiv
mov
inc
in
push
pushl
xchg
xor
mov
out
push
mov
out
sbb
loop
xchg
add
adc
cmp
mov
addr16
add
test
mov
push
aaa
and
pop
mov
inc
pusha
jo
insl
mov
sub
add
dec
sub
push
dec
cli
movntps
in
inc
out
mov
in
cmp
orb
fcomp
rcrb
jo
iret
xchg
sbb
stc
mov
in
pop
rcrb
dec
enter
xchg
loope
or
jmp
lahf
mov
jle
pop
test
push
or
in
fs
in
popa
jne
jns
add
aad
ret
fidivrl
pop
test
cmpsl
mov
or
stos
mov
imul
nop
cmp
mov
hlt
mov
cmp
pusha
es
ds
icebp
push
and
iret
xchg
and
push
pusha
push
shrb
fdivs
sub
in
jnp
and
loopne
fsubs
dec
mov
jecxz
lods
cmp
pop
sbb
add
fisubs
faddp
inc
add
ss
jne
es
xor
in
jg
cmp
ss
clc
push
clc
filds
add
add
mov
pop
dec
ret
fimull
inc
mov
add
or
repnz
movb
pop
inc
inc
arpl
notl
jne
sub
nop
cltd
out
aaa
cwtl
inc
repz
cmp
sub
std
test
add
pop
inc
jecxz
mov
les
xchg
push
jnp
dec
fsubr
cmp
mov
mov
jecxz
icebp
rep
xor
ret
jns
gs
mov
push
fwait
stos
ljmp
mov
inc
or
mov
fs
shrb
inc
dec
cs
pop
sbb
mov
gs
lahf
dec
lods
call
inc
data16
mov
xchg
subl
mov
adc
cmpsb
dec
xchg
mov
fcomps
call
dec
push
mov
test
nop
out
movsb
mov
dec
ljmp
lret
or
pop
jns
dec
jge
mov
aas
pusha
lods
push
or
xor
jg
ret
xorb
dec
lock
dec
cmp
test
add
aaa
outsl
lret
xchg
jo
fldt
clc
inc
movq
inc
pop
mov
pop
dec
xor
ret
sbb
pop
mov
ljmp
sbb
or
cli
jnp
in
xchg
jge
push
sbb
popf
call
or
out
xchg
loope
mov
add
popa
pcmpgtb
push
in
jmp
jbe
lcall
sub
xor
mov
mov
mov
scas
leave
inc
jb
subl
rclb
cmc
lods
inc
pop
lds
and
or
js
mov
mov
push
out
bound
and
cltd
xor
or
jb
movsl
lds
xor
or
iret
mov
jae
add
pop
pop
sub
imul
and
or
int
lods
mov
mov
inc
add
push
jmp
icebp
orb
std
aas
bound
lret
push
fldcw
pop
dec
add
pop
rcl
imul
inc
sbb
pop
lret
cmp
push
dec
mov
mov
subl
test
adc
cmp
add
xchg
xor
lods
adc
dec
dec
add
loope
ds
ret
bnd
stos
inc
orl
push
adcb
and
es
xchg
loop
dec
frstor
or
out
push
or
fistl
mov
mov
adc
add
sub
aad
stos
jecxz
fwait
lds
mov
enter
mov
mov
leave
out
cli
seto
je
mov
add
dec
jecxz
mov
das
mov
push
pop
imul
xor
cmp
jb
scas
outsl
xor
adc
cmp
inc
mov
or
gs
mov
les
pushf
add
or
xchg
mov
fsubs
jno
adc
push
push
decl
int
xchg
jle
push
xor
or
stc
hlt
dec
and
test
fldenv
mov
fcmove
ljmp
adc
add
push
out
xor
cmp
or
xchg
adc
je
inc
xor
add
mov
rolb
int3
js
leave
cmp
push
imul
sbb
in
add
rolb
jmp
icebp
sbb
leave
inc
xchg
pop
js
push
inc
jo
add
ret
jecxz
jge
orb
jne
xor
test
pop
rclb
pop
xchg
mov
inc
xor
or
gs
mov
jno
jl
lret
jnp
scas
addr16
sbb
fstpt
adcl
xor
out
inc
jle
shr
mov
daa
mov
scas
inc
sbb
addr16
stc
xchg
ljmp
mov
stc
movl
xchg
jno
push
popf
push
jae
popf
cmp
xor
sbb
jnp
fwait
test
fsubrp
imul
push
lret
movsl
inc
mov
push
insl
sub
push
xor
xchg
inc
arpl
enter
leave
dec
jmp
incl
cmp
loope
adc
pop
jo
dec
xor
jb
into
add
loopne
sub
pop
mov
pop
repnz
jge
cli
shlb
sub
divb
ss
lahf
mov
or
pop
loopne
stc
xchg
mov
push
adc
lock
insl
ljmp
cmpsl
dec
fwait
cmpsb
cmp
sub
mov
pop
mov
aaa
bound
cmpsl
sbb
cmc
repnz
out
call
ret
inc
test
fcoms
inc
pop
xor
and
leave
ret
fwait
je
or
ret
xor
orl
mov
fadds
fistpl
cmp
sbb
lcall
std
setg
loop
loopne
insb
jle
and
adc
decb
sub
aas
adc
lahf
scas
pop
ds
xchg
lock
inc
jbe
dec
fidivl
sub
dec
pop
inc
mov
fwait
jmp
rorl
into
sarl
sub
icebp
sub
mov
jp
push
pop
je
dec
fldlg2
or
sub
lds
add
aas
lods
jns
outsl
jl
and
inc
mov
out
pop
daa
xchg
mov
loopne
shl
push
fsubl
mov
inc
cld
repz
and
add
cmpsb
add
cld
or
cmpb
and
cmpsl
pop
jl
dec
xchg
mov
inc
pop
int
jg
pop
int3
xchg
inc
in
pop
or
rorl
leave
lea
sbb
mov
out
cmpsb
daa
add
sbb
clc
stc
and
dec
push
adc
das
dec
jge
loopne
ljmp
call
addb
pop
aad
testl
test
add
cmc
mov
adc
xor
leave
js
xchg
cmpsl
in
mov
inc
test
enter
add
loope
mov
mov
stc
xor
mov
xor
aas
cwtl
repnz
jae
mov
ja
ror
aas
xchg
jo
out
test
mov
les
jns
int
jge
and
and
mov
sub
and
xchg
pop
stos
sbb
fwait
es
jno
jne
jnp
test
mov
jle
dec
sbb
ss
js
dec
int
dec
lds
ret
xchg
mov
xchg
mov
movl
into
lret
cmp
movsl
cmpb
mov
lods
jae
xchg
add
pop
enter
mov
ret
push
inc
mov
das
repz
loop
mov
adc
in
pop
sub
push
mov
enter
stos
adcb
pop
pusha
jle
and
add
push
fsubrl
sub
sub
int
or
cmp
inc
adc
int
js
sub
outsl
adc
sub
ret
imul
or
call
or
nop
insl
aaa
inc
or
enter
mov
fidivs
jns
xchg
fs
push
aam
scas
jbe
add
push
xor
xor
adc
mov
jne
stc
std
insb
clc
addr16
mov
pop
out
add
add
fsubrs
rorl
sbb
and
or
faddp
shll
adc
loope
aas
xchg
xor
das
inc
test
movb
aas
inc
mov
enter
mov
pop
pop
dec
jbe
mov
add
xlat
inc
push
fadds
sub
call
xor
fimuls
or
outsl
shlb
outsb
push
cwtl
sbb
cmp
lods
pop
pop
push
pop
mov
data16
push
sub
pop
cli
mov
loope
push
pop
jge
movsl
pushf
or
rolb
and
sarb
scas
cmp
fbstp
into
stos
aam
icebp
mov
das
test
loope
dec
fbld
jns
mov
sbb
cli
scas
or
inc
pop
dec
sarl
mov
test
dec
adc
add
mov
movsl
mov
cld
inc
lret
leave
stos
inc
sbb
cmp
adc
mov
es
into
je
dec
loop
inc
mov
popl
ds
and
ret
jp
xchg
inc
mov
add
mov
sar
fsubs
sub
int3
dec
popf
out
loopne
test
inc
rcll
rorb
pop
js
xchg
add
sarb
jae
std
sbb
gs
mov
or
in
push
pop
pop
pop
sbbl
and
test
rcrb
adc
and
movsb
out
sbbb
dec
loope
aaa
andl
pop
adc
add
lods
xchg
mov
call
lods
xor
fldt
inc
xor
inc
pop
add
add
enter
ja
cmpl
test
stc
add
cmp
adc
pop
inc
xchg
or
addl
push
enter
minps
cmp
jl
clc
xor
test
jle
lret
push
xor
out
push
or
cs
mov
push
ja
jo
mov
sub
les
and
sub
mov
mov
mov
mov
push
sbb
pop
sub
in
rcll
data16
add
scas
pop
rorl
push
mov
das
jmp
mov
fsubrl
fisubl
pusha
xor
mov
fdivrs
fdivrl
js
add
or
ror
pop
pop
pop
inc
inc
push
imul
xchg
dec
stc
jns
adc
mov
cmp
mov
call
mov
stc
movsl
xlat
mov
out
push
sahf
add
iret
sbb
add
pusha
addb
imull
and
dec
dec
mov
jnp
mov
cmpl
mov
cwtl
in
inc
xchg
dec
sbbb
data16
icebp
sub
mov
inc
xchg
les
cmpsl
sbb
movsl
and
sar
sbb
inc
inc
inc
adc
mov
sub
sbb
cli
cmc
jnp
sbb
sbb
fimull
fadds
push
or
adc
cmp
cmp
in
fbstp
mov
je
hlt
jecxz
lret
movsl
sbb
xor
int3
sbb
mov
mov
sub
rcrb
ficompl
lret
ret
xor
mov
in
movsl
rclb
cmp
fistl
sahf
fstps
stc
xor
je
rolb
ja
adc
cmp
mov
pop
ss
and
sar
xor
loop
mov
or
pop
lods
testl
bound
sub
and
testl
xor
push
ljmp
stc
mov
leave
jp
dec
dec
cmp
jns
sub
jge
jne
int
adc
fs
test
mov
push
aad
les
mov
push
mov
pop
arpl
repnz
push
gs
gs
dec
add
inc
mov
pop
add
pop
stc
and
pop
imul
mov
loopne
jb
push
pop
xchg
sub
or
in
or
fsubs
mov
loope
imul
in
mov
jmp
fldl
ds
and
pop
call
loop
out
enter
adc
out
int
inc
mov
aaa
out
cmp
shrl
or
hlt
in
xchg
pop
pop
mov
dec
dec
lret
mov
mov
jmp
push
mov
gs
rcrb
lcall
rcrb
mov
loopne
xor
jg
and
xchg
outsb
and
cmpsb
push
mov
inc
xor
mov
inc
cmp
sbb
mov
xor
pop
sarb
mov
in
xchg
out
sub
adc
or
aas
mov
xchg
push
mov
pop
jmp
mov
imul
imul
data16
aad
jne
mov
push
rcrb
sub
cmpsl
mov
repz
aas
xchg
ret
inc
sbb
mov
rcll
stc
dec
in
test
pop
inc
loope
sarl
repz
scas
data16
mov
lock
xor
push
sahf
lods
push
mov
out
xchg
les
cmp
dec
mov
stos
fmull
das
jb
fst
and
mov
xor
aas
in
cltd
xor
and
inc
lds
inc
or
xor
mov
lea
or
jo
cmp
fwait
int
mov
in
or
movsl
shll
push
loop
cmpsb
mov
aad
jno
repnz
xor
jne
or
mov
in
ljmp
movnti
push
jno
jp
jo
ret
mov
jnp,pn
pop
cwtl
rolb
cmp
cmp
jns
mov
pop
push
sahf
cmp
add
xchg
xor
addb
pop
jne
push
and
mov
or
xchg
xchg
imul
dec
dec
dec
and
and
int3
pop
and
inc
xchg
xchg
or
subl
cmpsb
dec
sti
inc
add
bound
pop
stc
push
divl
dec
mov
push
stos
into
lret
lret
dec
outsb
push
pop
xchg
ss
shr
sbb
sub
push
mov
out
or
sub
iret
push
scas
ds
sub
mov
enter
fimull
pop
into
mov
mov
fldcw
ret
sti
imul
mov
cli
xor
mov
out
inc
add
dec
sub
cld
sahf
aaa
jge
iret
out
aad
arpl
into
jbe
cmpsb
jge
inc
dec
data16
cmp
mov
mov
dec
call
fiaddl
fldt
js
insb
or
xchg
bnd
js
lods
out
inc
int
sbb
bnd
and
loopne
loopne
push
inc
and
fadd
push
cmp
cs
test
test
xor
dec
leave
dec
fldenv
imul
jne
jns
mov
dec
stos
data16
sarl
sbb
mov
xchg
mov
cmp
pop
cmp
cwtl
loopne
mov
lods
and
mov
jnp
dec
xchg
sbb
insl
adc
sahf
iret
sub
sub
jmp
mov
ljmp
ficoms
xor
and
and
mov
addr16
sarb
dec
sbb
ds
jnp
lcall
xchg
sub
fiaddl
ljmp
enter
fsubl
int
xor
inc
inc
pop
adc
push
addb
ljmp
movsl
push
mov
sub
in
push
mov
push
repz
pop
mov
test
adc
cmpsl
sub
jmp
int
dec
dec
xchg
out
negl
mov
and
arpl
add
or
cli
scas
adc
test
stc
mov
out
movsl
insl
mov
mov
pop
or
mov
and
daa
pusha
test
cmp
aaa
xor
or
frndint
dec
inc
mov
push
inc
inc
cmp
movsl
push
push
mov
loop
inc
cltd
add
out
popa
sbbl
dec
mov
fwait
xor
jae
aad
lcall
loopne
ret
ds
jg
call
lock
int3
or
or
js
in
ss
imul
rol
or
dec
dec
clc
xor
jecxz
push
dec
ljmp
sti
mov
stos
lcall
lcall
jecxz
loopne
or
or
jb
add
dec
dec
ljmp
data16
cmc
clc
daa
fcmovnb
sbb
add
sub
mov
ret
or
inc
sbb
ror
push
shlb
cmp
push
jae
xchg
daa
in
xor
mov
push
jb
push
aam
repz
adc
jmp
mov
cmp
scas
mov
mov
push
mov
out
push
push
sbb
xchg
test
rcrl
push
arpl
mov
pop
add
out
mov
fcmovu
sarb
loopne
mov
rcr
movsb
movsb
sub
cltd
pushf
jae
mov
dec
push
shlb
or
push
jo
xor
ja
rcrl
or
push
std
jo
push
dec
adc
out
repz
test
aas
cmp
xchg
pop
call
call
lcall
movb
cmp
insl
test
fwait
imul
aaa
inc
inc
pop
lret
dec
xorl
repnz
out
fwait
out
xchg
dec
leave
xor
icebp
je
xor
test
outsb
or
enter
loopne
out
dec
xchg
pop
push
push
cli
movsl
inc
mov
and
cmc
add
adc
mov
add
mov
cmp
dec
push
adc
mov
inc
aad
push
pusha
sub
xlat
das
pop
mov
pop
leave
out
pop
xlat
or
rolb
cmpl
cli
push
cmp
daa
lahf
fnstcw
js
pop
imul
mov
sub
dec
mov
push
inc
jne
mov
ja
lods
sub
popl
and
dec
fisubl
jle
cmp
cmp
daa
xor
mov
and
test
call
adc
sbb
je
cmp
fisttps
je
test
lret
fmuls
push
xor
dec
mov
fs
mov
outsl
or
mov
or
fisubl
mov
xchg
pop
sub
cmp
mov
mov
push
sub
pop
in
ficomps
and
out
fcmovu
enter
and
pusha
add
imul
loop
sbbl
xlat
inc
xlat
das
jl
lahf
jb
clc
lret
dec
inc
cli
dec
leave
imul
sbb
cmp
mov
xchg
xchg
cmp
daa
or
pop
and
fstpt
pop
test
mov
sahf
stos
or
add
leave
int
mov
sub
lahf
mov
inc
push
push
test
inc
or
push
out
movsb
pop
fisttpl
add
pop
retw
xchg
daa
stos
inc
subl
aaa
xorb
out
testb
inc
sti
loop
aas
pop
sub
or
ss
stos
pop
mov
sub
sub
push
rorb
push
jmp
fiaddl
inc
mov
jmp
mov
lods
xlat
pop
sub
dec
push
or
pop
inc
mov
inc
adc
gs
inc
lahf
int
sub
lahf
sti
inc
in
es
ja
and
inc
andb
push
lret
mov
lds
inc
insl
sub
insl
ret
jmp
cltd
sbb
sub
mov
adc
aas
jno
ljmp
inc
pop
push
xor
pop
pop
js
mov
xchg
ret
pop
loop
inc
lds
mov
call
xor
dec
push
ret
mov
xor
addr16
stos
imul
jmp
push
lret
adc
mov
inc
jne
bound
push
jl
cli
cli
jmp
ss
push
adc
push
cmpsb
loope
shlb
adc
lock
add
jns
ss
pop
mov
mov
ret
std
xchg
sbb
add
xor
xchg
dec
mov
xchg
sub
jmp
sub
lret
inc
cmpsb
or
sub
add
notb
or
fxam
xor
lds
cmp
push
out
adc
or
xlat
sbb
inc
cmp
imul
fdivrl
insl
pop
inc
int
jg
xor
and
push
or
ret
fidivl
sbb
aam
mov
dec
jg
adc
mov
mov
push
bound
in
scas
sbb
test
cmp
add
call
inc
mov
pop
dec
loop
sbb
das
add
and
jl
sbb
jl
or
gs
test
push
in
pop
je
lcall
out
lret
mov
cmp
stos
mov
stc
inc
test
incl
dec
or
dec
sub
jp
xor
stos
inc
pop
cli
dec
lea
hlt
cmpsb
lds
mov
sbb
add
int3
addb
and
cmpsb
lock
mov
mov
xchg
aaa
cwtl
mov
cmp
mov
or
movsl
add
lods
xchg
jp
inc
cld
jl
jo
mov
sarl
arpl
movnti
pop
in
lret
or
pusha
pop
test
sbb
sbb
add
out
or
pop
adc
pop
jae
sbb
sbb
cmpsb
adc
sub
movsl
add
mov
aaa
sub
enter
sub
mov
mov
pushf
push
push
xchg
dec
add
xor
gs
mov
lods
pop
dec
jbe
js
push
xor
xchg
imul
ror
push
mov
pusha
sub
jae
leave
stos
mov
test
ljmp
insl
or
insb
mov
cmp
imul
push
and
or
fcomps
jne
pop
dec
pop
cs
out
test
add
mov
mull
fsubs
rep
stos
lock
clc
sbb
and
sahf
sub
fwait
leave
in
ljmp
add
or
sub
test
push
pop
pop
jnp
adc
mov
add
jecxz
imul
jmp
xor
sub
xor
pusha
add
jo
inc
outsl
enter
das
dec
push
insl
aas
jecxz
in
mov
in
mov
sub
inc
mov
movsl
popf
cmp
testl
mov
dec
push
adc
insb
sub
mov
xor
daa
les
sub
sub
ret
psrlq
fldenv
or
cmp
and
in
ficomps
jns
les
add
bound
fwait
and
add
fwait
sbb
or
xor
in
dec
dec
es
stos
adc
stc
lds
stos
pop
or
fcmovnb
aas
pop
inc
or
mov
dec
nop
jg
push
rorl
addb
inc
push
dec
es
lahf
cmpsb
mov
jns
xor
xorl
fdivrl
cmp
sub
push
out
mov
ja
lea
or
add
int
mov
cltd
and
mov
cmp
lahf
in
cmc
and
into
into
mov
or
adc
dec
imulb
add
ss
aam
sbb
jg
adc
pop
xor
lret
pop
shll
push
call
push
or
sbb
loop
cmp
icebp
pop
in
jl
cmpsb
adc
sarb
into
sub
mov
inc
sbb
push
sub
sbb
imul
ljmp
push
dec
mov
inc
cli
cmp
sub
faddp
cmp
sbb
pop
push
inc
push
sbb
fimull
incl
cmp
add
cmp
ret
pop
and
scas
mov
fmull
insl
adc
popa
add
cmpsb
jecxz
insb
dec
cmp
imul
and
pop
mov
push
inc
lret
add
rcrb
add
sub
je
jp
shrb
and
dec
dec
loop
clc
addl
sti
imul
fildll
dec
cmp
adc
dec
mov
dec
lods
mov
int3
inc
adc
or
aas
and
dec
test
pushf
pop
push
inc
out
outsb
sbb
push
dec
enter
data16
shrl
pusha
cmc
ret
pop
lret
or
clc
xchg
andl
stc
ss
lock
mov
ja
and
jmp
xor
cmpsl
pop
or
jecxz
outsl
leave
pusha
mov
popa
dec
pop
push
cmp
mov
xchg
sbb
inc
out
fiaddl
adc
mov
bound
or
push
popa
test
fwait
lods
xor
test
inc
pop
xchg
sub
or
mov
xlat
pop
ds
cmpsl
rcr
je
out
add
or
les
or
jmp
add
xlat
sbb
stos
mov
in
and
mov
inc
test
pop
jl
lahf
push
xor
add
test
fbstp
mov
add
jecxz
imul
pop
adc
mov
loopne
dec
or
lret
sbb
testb
or
xchg
dec
mov
fdivrl
pop
sub
cmp
ret
or
aad
mov
adc
cmp
sbb
in
stc
and
pop
fcmovnu
cmp
pop
xlat
dec
icebp
mov
scas
mov
xor
sub
cmp
mov
imul
inc
xlat
pop
in
leave
je
or
lahf
sub
adc
xchg
add
gs
cmp
jmp
in
jg
jmp
fmull
lret
in
iret
fsubr
cmp
mov
push
sar
mov
ret
adc
cmp
push
loope
into
adc
inc
lods
mov
data16
xor
test
push
push
stc
test
sarb
int3
dec
imul
roll
dec
cld
cmp
push
add
xor
and
inc
aas
or
dec
add
xor
fcmovne
xor
pop
lret
aas
push
dec
cmp
cmp
dec
andl
xor
mov
lahf
sub
xorl
cmpsl
sbb
ffree
pop
out
xchg
push
gs
popa
insl
add
and
mov
outsb
fwait
ja
pop
add
int
call
mov
jmp
movsb
int3
inc
pop
jl,pn
or
outsb
sub
xchg
shrl
out
dec
push
adc
test
mov
pop
mov
mov
or
pop
jmp
outsl
inc
or
sbb
mov
test
adc
dec
xchg
dec
adc
mov
enter
lcallw
push
lods
or
add
mov
mov
lahf
pop
cmpsb
jb
test
lret
in
loope
sti
mov
inc
cmp
sbb
repz
xchg
js
sarl
clc
or
dec
fidivl
push
inc
or
inc
lret
in
ud2
cs
aam
xlat
in
and
sbb
divb
iret
jne
fsubrl
xlat
dec
fisubl
mov
cmc
sub
in
jne
cmp
jp
jmp
pop
stos
stc
roll
popa
jae
cwtl
shr
pop
jle
ljmp
and
decl
inc
cs
push
sbb
in
inc
andb
leave
jne
pop
push
pop
cmp
scas
mov
lahf
out
jno
xor
jecxz
cmp
and
add
jnp
lret
sub
pop
fs
ss
ret
pop
js
sbb
push
sbb
dec
std
xlat
and
cmp
dec
sbb
or
mov
add
xorl
add
daa
mov
sub
jp
jmp
dec
pushf
orl
mov
inc
inc
cs
push
lds
cmpsb
push
dec
int
aam
dec
faddl
lods
pop
lock
ss
push
sarl
cmp
fstp
mov
lods
xacquire
dec
pusha
outsb
mov
sub
inc
das
daa
mov
cmp
imul
cli
push
stos
mov
mov
and
mov
lret
and
sub
movsb
jecxz
gs
test
test
mov
dec
movb
xchg
lahf
fldt
test
loope
cmp
mov
sub
lock
in
arpl
jo
add
rcrl
das
dec
lret
imul
test
fs
popa
arpl
test
push
nop
lahf
pop
scas
in
push
fsubrl
xor
pop
pop
adc
cs
dec
add
les
sub
out
outsb
xchg
xor
mov
push
inc
dec
sbb
popa
pop
mov
inc
and
jle
mov
or
rolb
xor
loopne
dec
and
jle
les
repz
jp
aaa
sub
cwtl
test
mov
or
cmp
lcall
test
or
sbb
mov
pop
test
sbb
cwtl
or
pop
inc
and
fdiv
outsl
clc
mov
cmp
push
daa
mov
daa
mov
cld
test
aas
and
movsb
dec
jg
iret
aaa
xor
ret
cmpl
cmp
and
rcrl
xor
lret
push
lahf
jo
jl
add
jge
sub
dec
pop
lds
cmp
pusha
inc
out
sub
sbb
arpl
jmp
sub
or
mov
rorb
repz
fldcw
inc
test
notl
fisttps
pop
push
movsb
mov
inc
fwait
dec
pushf
outsb
popf
rorl
scas
mov
jl
fcmovnb
aaa
fstpl
dec
loope
pop
shl
jle
iret
fcomp
loop
jns
fwait
push
or
dec
inc
hlt
mov
mov
data16
test
fsubp
xor
and
push
sbb
aad
mov
mov
lret
and
in
rorb
imul
daa
jl
sbb
enter
les
sub
jecxz
mov
orl
scas
cs
aad
add
outsb
adc
stos
jo
insl
dec
dec
movb
fnstenv
leave
xchg
in
mov
scas
or
adc
push
mov
sbbb
into
fstps
sub
into
jns
xor
mov
xchg
sub
lret
out
das
das
stos
in
adc
pop
std
fcoms
add
repz
sub
mov
enter
jmp
lret
jmp
aaa
sbb
movsl
inc
mov
xor
mov
inc
insb
and
out
out
call
das
sbb
repz
lea
sub
push
ds
pcmpgtd
mov
fcompl
cld
add
jecxz
out
out
ret
in
test
jb,pt
rol
push
dec
rol
push
dec
shl
adc
leave
cli
inc
dec
push
dec
xchg
mov
xchg
test
ja
add
lds
adc
enter
or
unpcklps
mov
mov
adc
inc
lret
mov
xchg
cmp
jae
cmp
cmp
dec
adc
cmp
loop
inc
shll
dec
push
shll
test
dec
xor
inc
add
mov
add
into
ret
mov
inc
pop
lds
xorb
push
add
pop
xchg
pop
jb
das
pop
mov
jo
xchg
nop
int
cmpsb
fdivl
ljmp
or
add
aad
add
clc
inc
and
push
xchg
pop
call
inc
int
je
frstor
int3
arpl
sbb
in
pop
cmp
call
cmpsb
and
clc
vmovhpd
fimuls
int
sbb
fnsave
sbb
xchg
add
sarl
pop
inc
mov
das
cli
sub
cltd
push
sub
test
and
inc
out
push
mov
push
dec
aas
cs
mov
inc
mov
addb
mov
aaa
int
pop
xchg
mov
inc
shll
add
clc
divb
mov
aam
loope
rcll
lods
mov
sar
fisubl
lret
jbe
mov
inc
sub
fdivrp
and
add
jae
sbb
out
roll
rcr
xlat
int3
addl
daa
xchg
imul
jl
jl
bound
adc
ficomps
icebp
andb
pop
jp
test
lds
xchg
cmpsb
sub
daa
pop
negl
adc
or
push
add
mov
xorb
inc
and
stos
gs
dec
and
dec
data16
mov
sbb
pop
or
add
cmp
das
dec
gs
mov
push
pop
dec
pop
or
sbb
insb
ret
dec
cmp
incl
ret
pop
push
mov
shll
cmp
mov
jo
int
sub
mov
dec
lea
add
inc
fisubl
fsubrl
test
rolb
repnz
mov
xor
dec
out
pop
pop
popf
sub
dec
aam
cmp
imul
lcall
sub
sbb
ljmp
mov
inc
dec
out
jb
enter
xchg
and
rorl
fs
aam
adc
cmp
mov
loopne
xchg
dec
inc
pop
insb
pop
mov
rcr
mov
loope
dec
sub
lret
scas
gs
mov
push
pop
gs
test
push
and
stos
xor
xor
xor
fldt
xchg
mov
inc
bound
push
inc
add
cmpsb
lcall
test
add
pop
inc
inc
xor
leave
lea
leave
mov
mov
and
adc
in
cld
jge
mov
lahf
jns
cmp
xor
out
std
cld
inc
adc
ljmp
cs
ja
add
aas
mov
cmp
mulps
lea
jbe
sarl
pop
repz
aad
test
push
mov
jecxz
int3
sbb
clc
xchg
adc
frstor
cli
mov
sbb
insb
repnz
aam
jmp
mov
cmpb
or
lea
or
jmp
and
dec
push
or
orb
test
jg
mov
call
lock
je
xor
cmp
lds
les
les
inc
dec
insl
fsubp
test
fimuls
xchg
inc
inc
sub
pop
arpl
fwait
pop
mov
fstpt
fidivl
mov
fstps
icebp
pop
add
push
dec
pop
push
mov
inc
je
dec
jp
mov
cmc
xchg
fisttpl
sub
cmp
xor
inc
frstor
les
jo
jae
es
scas
out
sbb
adc
jae
cmpsl
pop
leave
cmp
icebp
pop
sub
and
ja
jmp
scas
add
inc
jb
fimuls
push
pop
ret
xchg
leave
pop
mull
pop
sub
cli
mov
cmpsb
es
nop
out
ljmp
mov
add
incb
xabort
jecxz
mov
pop
mov
es
es
xchg
movsb
add
and
sub
iret
jp
gs
push
jo
fistpll
xor
cmp
jb
mov
aad
test
icebp
and
leave
jmp
xlat
push
jmp
pop
sub
add
cmc
arpl
inc
imul
dec
mov
mov
popf
mov
popa
inc
add
inc
popa
cmp
adc
jmp
mov
add
xor
push
add
cmp
pushf
add
cmpsl
pop
ficoms
ficomps
dec
in
je
fnstsw
pop
cmp
mov
push
cmp
test
out
daa
ficoml
xchg
jp
pop
jecxz
icebp
xor
mov
add
js
pop
cmpsl
mov
add
dec
xchg
adc
cmp
gs
jp
dec
in
jae
jle
call
cli
mov
or
enter
dec
shlb
mov
loope
adcl
rorl
push
mov
push
dec
and
mov
cli
rclb
repz
jo
mov
jb,pn
xchg
sub
fs
inc
cld
mov
cmpsb
sub
xchg
jae
jnp
cmp
repnz
scas
mov
repnz
or
insl
out
dec
fimuls
lcall
xchg
add
lcall
rcrl
xlat
and
push
and
lahf
sub
or
stos
enter
jge
stc
xchg
pop
add
cmp
addb
cmpsb
dec
or
addr16
xor
mov
jp
mov
call
leave
fdivs
and
js
outsw
sbb
or
lcall
pop
push
push
sub
fsubr
aas
idivb
mov
adc
loope
daa
mov
or
fistpll
loopne
insb
loope
aaa
xlat
push
push
fdivp
imul
mov
movsl
mov
push
cmp
in
dec
std
mov
pop
testb
cmpl
sbb
scas
cmp
inc
sub
jl
or
mov
dec
ljmp
jg
cmp
in
and
cmp
push
mov
pop
movsl
cli
sub
enter
repz
clc
insb
adc
inc
inc
out
dec
lret
ja
xchg
or
pop
dec
outsl
inc
shrl
sub
rolb
dec
jb
cmpsl
pop
sub
pcmpgtd
and
lret
repnz
dec
push
adc
jmp
push
mov
mov
sbb
and
cwtl
dec
push
fldcw
xchg
xor
fisubrl
inc
sub
push
stc
sbb
xchg
push
pop
iret
int3
pop
sbb
mov
lahf
lret
movsl
inc
test
mov
dec
into
sub
xlat
pop
dec
je
xor
or
jae
mov
push
push
je
add
in
repz
mov
add
mov
ret
rcll
daa
gs
rcll
fptan
ret
adc
inc
fsubl
and
jecxz
adc
and
stos
and
cmpsl
leave
jp
cmp
xchg
mov
adc
cmp
push
pop
or
mov
or
inc
ljmp
sub
mov
jl
jge
pop
inc
jbe
xchg
test
or
lcall
mov
xchg
addr16
fisubs
pop
adc
add
jo
ss
mov
shlb
faddl
int
and
add
sbb
ret
in
add
int3
inc
stos
fisttps
sbb
pop
gs
inc
mov
add
xchg
adc
add
enter
sub
mov
mov
daa
xor
dec
xchg
push
xchg
sub
mov
arpl
bound
jmp
add
test
mov
sub
fsubrl
int3
xchg
push
das
loop
dec
loope
push
shrl
adc
or
push
push
and
icebp
mov
or
fisubs
lret
iret
inc
cwtl
add
test
in
sbb
and
ret
dec
shll
shll
aas
leave
insl
lret
popa
imul
add
jnp
jnp
jecxz
sub
sbb
ja
xchg
sub
lock
pop
enter
adc
or
sub
push
mov
jecxz
fsubrl
or
fldl
cmp
cmp
mov
adc
lock
rorb
xor
jp
jge
nop
mov
test
gs
sub
or
sub
data16
add
sub
pop
jne
mov
pop
and
fcmovbe
jbe
dec
ret
les
inc
push
sub
dec
fwait
inc
aas
xchg
sbb
test
adcl
adc
hlt
inc
dec
push
sub
mov
sub
pop
xor
sahf
mov
push
data16
fstpl
or
jae
push
push
daa
mov
jno
mov
pop
int3
adc
sub
orl
icebp
fidivs
push
push
fs
es
nop
dec
cmpsb
mov
lahf
pop
lret
inc
lods
add
sub
jnp
sar
stos
xchg
test
inc
loopne
or
ljmp
mov
xchg
sub
loope
dec
test
mov
in
ret
jp
cld
push
ffreep
ds
mov
mov
stos
in
int
ja
ficompl
dec
adc
xor
test
jmp
sub
or
push
add
loope
pop
leave
shr
xor
ss
pop
dec
cmp
lcall
dec
ret
sbb
stc
into
ret
dec
mov
jno
add
inc
rcr
shrl
ds
int
repz
subl
fxch
adc
lret
sub
fnstcw
add
mov
mov
lea
enter
xchg
or
xchg
or
dec
inc
mov
cltd
mov
stc
pop
ret
clc
shll
fs
lods
mov
imul
enter
ss
fst
jmp
xchg
pop
sub
lahf
stos
stc
sti
fcomps
fidivrs
test
js
js
repz
mov
lret
push
rol
fwait
sbb
pop
or
xchg
stos
in
mov
movsb
fisubs
jne
inc
lcall
mov
fwait
into
cmc
enter
and
sub
and
lret
xchg
push
push
scas
sub
cmpsb
cmp
mov
std
inc
in
lahf
or
cmp
dec
imul
btc
out
mov
repnz
out
scas
jecxz
sbb
rcl
cmp
dec
idivl
push
jge
in
push
ss
xchg
push
mov
stos
stos
leave
mov
sahf
sbb
fld
test
mov
push
aaa
aam
popa
add
fistps
xor
sbb
mov
push
and
gs
lods
pop
mov
shrb
in
idivb
pop
cwtl
rclb
pop
pop
dec
les
cltd
aad
dec
std
cmp
cmp
jns
sbb
dec
cwtl
rcl
in
inc
jp
jnp
sbb
testb
and
sbb
inc
inc
out
fstpt
dec
xchg
push
pop
stos
mov
call
pop
shr
xor
mov
scas
mov
and
mov
dec
cmp
ja
std
jmp
ja
and
das
mov
std
mov
inc
pusha
mov
jnp
mov
jl
adc
mov
ret
add
lock
mov
gs
into
xchg
js
push
sbb
stc
jp
sub
cmp
enter
sbb
loope
ds
or
imul
xlat
les
push
movaps
xlat
ror
cmp
inc
data16
cmp
jbe
cmpsb
push
ljmp
ss
pop
imul
inc
sbb
dec
adc
aad
cmpsl
pop
movsb
ret
cmp
or
hlt
mov
ret
shll
jnp
jle
mov
pop
in
aaa
mov
sub
aaa
jle
sub
aas
fadd
dec
testl
xor
cltd
mov
xor
mov
cwtl
mov
mov
push
movb
or
cmpb
push
adc
out
popa
sbb
inc
aas
or
iret
or
inc
or
daa
xchg
add
daa
cmp
fnsave
pop
ffree
mov
imul
mov
fimuls
jg
mov
mov
inc
ret
addr16
sub
fcompl
add
aaa
cwtl
pop
dec
and
xchg
pop
xchg
ss
loop
xor
lcall
arpl
pop
shll
jp
push
add
shl
fwait
mov
imul
mov
outsb
pop
cmpsl
jne
gs
cmp
push
or
stos
ret
dec
and
sahf
pop
sti
ret
cmp
jno
into
inc
sub
mov
jl
std
pop
ret
test
mov
movsb
out
inc
xor
mov
cmp
sti
stos
dec
sbb
aas
test
push
pop
push
dec
mov
mov
shlb
aad
or
shll
mov
loopne
mov
leave
adc
mov
popf
xchg
lds
push
sub
mov
and
rorb
fs
push
hlt
or
cwtl
je
jo
gs
jb
cmp
adc
push
fidivs
in
scas
jne
out
mov
sbb
adc
jmp
jae
jge
ret
call
jae
sbb
or
and
scas
xchg
push
insb
rol
int
dec
fimull
aaa
imul
sub
mov
mov
pop
imul
or
or
test
loope
xorl
stc
mov
mov
push
xchg
hlt
gs
fiaddl
add
sub
adc
call
sub
in
add
ret
lea
inc
jns
jns
cmp
stos
fiaddl
out
pop
and
pop
inc
jb
and
pop
stc
jo
pusha
mov
dec
cs
and
sbb
nop
test
rcrl
and
ret
add
sub
test
pop
adc
orb
imul
push
bound
jmp
fwait
into
icebp
mov
mov
rorl
out
inc
out
xchg
xchg
mov
je
lock
inc
in
pavgb
cmp
push
test
clc
mov
ret
add
and
pop
andl
in
add
mov
mov
and
test
add
aas
gs
xor
xlat
fdivrs
popl
push
adc
test
jp
call
dec
pop
adcb
in
dec
add
movl
movsb
sub
fdivrs
rcrb
jo
ret
push
cmp
rorb
inc
sahf
add
pop
dec
mul
and
jbe
scas
jle
lcall
cmp
les
lahf
aam
and
and
or
call
fsubl
cli
lds
and
insl
pop
shlb
data16
pop
adc
sbbb
sbb
inc
cli
jg
in
and
jnp
push
ljmp
mov
movl
push
ret
test
test
ds
or
mov
add
ljmp
stos
pop
bnd
mov
or
cmp
lcall
inc
xchg
push
and
rclb
fmulp
add
push
add
push
into
leave
loop
push
push
mov
push
dec
dec
loop
daa
iret
pop
aad
dec
mov
push
aam
jb
dec
add
pop
lock
dec
aaa
es
shl
aas
add
incl
dec
pop
fdivs
lahf
dec
adc
sub
pushl
les
cs
insb
and
es
enter
dec
dec
inc
imul
lods
frstor
ljmp
test
pop
adc
mov
add
inc
cmp
dec
pop
sub
inc
inc
scas
ljmp
inc
push
call
pop
add
dec
pushw
dec
movsl
in
outsl
shrb
mov
dec
psrlq
enter
pop
ss
inc
mov
pop
xor
adc
cmp
dec
dec
mov
scas
jns
pop
dec
bound
or
and
adc
in
and
popf
int
aam
in
jne
inc
jbe
mov
adc
fmull
rolb
jno
jbe
pop
fmulp
lahf
in
and
dec
loope
in
fcoml
fldl
push
jl
add
aas
xor
inc
pop
xor
adc
mov
popa
sub
movsl
jecxz
outsl
popf
hlt
sbb
mov
inc
js
add
cmc
rcl
cli
das
inc
inc
jnp
lock
cmp
sbb
pop
sub
mov
inc
mov
test
js
cmpb
decl
push
push
inc
mov
scas
mov
lea
dec
mov
lcall
js
sub
out
stc
iret
imul
in
insb
adc
jg
xor
adc
mov
cli
adc
std
mov
xor
sub
push
jge
pop
andb
jg
loopne
jns
jb
enter
int3
jmp
inc
inc
clc
loopne
mov
or
inc
mov
addr16
stos
mov
lret
sti
mov
cmp
push
cmp
rcrl
cwtl
push
movsl
add
mov
icebp
sub
mov
add
inc
rolb
pusha
xor
mov
xor
inc
add
ret
dec
fsubp
call
call
ljmp
mov
and
jp
sub
pop
push
push
or
inc
out
pop
mov
in
pop
neg
pop
pop
pop
call
or
ret
add
add
insl
mov
fsubl
inc
inc
mov
repnz
sahf
cmp
jmp
pop
notb
jae
pop
gs
aad
push
mov
mov
or
popa
fidivl
adc
mov
push
ret
or
add
out
cmpsb
shrb
cmpsb
add
or
push
fwait
dec
sbb
xchg
cmpsl
inc
cli
push
and
xchg
je
imul
push
lret
xchg
fdivrp
inc
fmull
imul
xchg
cmp
mov
push
in
inc
fs
jmp
les
jbe
mov
push
jp
ljmp
popa
xor
adc
orb
pop
imul
and
lock
daa
jb
inc
mov
pusha
and
adc
pop
xchg
dec
mov
lcall
add
mov
ret
jo
mov
mov
in
jmp
aas
push
mov
push
xor
add
ret
ja
fwait
gs
jns
insl
or
das
fimuls
mov
leave
dec
popa
fnstcw
loopne
loope
sub
nop
add
and
or
es
push
sub
fs
in
js,pn
jmp
addr16
lds
dec
xchg
fs
ja
adc
sbb
jno
call
xchg
jecxz
push
adc
inc
or
rcrl
sbb
rep
hlt
cmp
dec
push
inc
mov
in
add
dec
subb
xlat
pop
and
hlt
inc
cmp
fisttpll
dec
leave
sarb
sub
dec
xchg
lcall
adc
mov
into
aas
cli
xchg
pop
test
cmp
inc
call
sub
outsb
dec
es
cmp
adc
lahf
cmp
test
add
sub
lods
pop
popf
or
in
stos
xlat
xchg
imul
sub
lret
iret
mov
pop
fsubs
mov
push
call
loop
dec
bound
adc
mov
lods
jae
add
push
dec
mov
lcall
inc
xchg
mov
sub
jg
pop
negl
adc
repz
xor
mov
push
shrl
or
hlt
push
inc
loopne
xor
mov
inc
xlat
mov
pop
and
das
add
ds
mov
adc
orb
xchg
mov
inc
cltd
lea
dec
stos
shl
inc
push
dec
cmp
cmp
sbb
test
dec
inc
cmp
cltd
imul
jge
iret
cmpsb
repnz
inc
jnp
push
aas
cmpsb
mov
jo
or
mov
inc
inc
addr16
add
in
insb
jmp
jnp
lock
ljmp
push
jecxz
in
lds
rclb
inc
sbb
stc
mov
jo
pop
jmp
mov
inc
cmp
pop
test
xor
inc
pop
fsubs
sbb
mov
loope
stc
pop
inc
mov
cmpsl
or
sub
aad
sbb
push
inc
cmpsl
loopne
loopne
or
cli
or
pusha
xor
repnz
jnp
and
mov
ret
adc
mov
stos
fists
rolb
sahf
or
enter
lods
iret
mov
xchg
cs
xchg
aam
jb
inc
dec
sbb
dec
xchg
js
dec
ljmp
sub
out
cmp
cltd
or
inc
cmp
mov
stos
mov
adc
xor
pop
push
inc
dec
inc
mov
xor
inc
or
lods
inc
jmp
fildl
hlt
push
inc
mov
and
ss
inc
cmp
inc
jne
orb
pop
stos
inc
sub
rcll
stos
xor
ret
idivl
ljmp
xor
pushf
inc
sub
push
adc
sbb
inc
cmp
and
enter
ja
pushf
cs
push
jae
cmp
pop
xor
in
sub
lock
addr16
inc
sub
push
jnp
pop
fists
dec
leave
lahf
dec
xor
adc
gs
sub
push
sub
and
std
pusha
rclb
push
adc
out
sub
leave
jp
out
cwtl
inc
insb
mov
dec
loop
jg
leave
or
sub
sbb
xchg
mov
ljmp
lret
ljmp
sbb
fnstcw
fmull
repnz
daa
inc
ror
shrl
ss
dec
mov
clc
jne
sbb
push
movl
sub
les
mov
xchg
add
push
xor
aas
push
adc
and
inc
je
add
sub
mov
loope
pop
and
xor
jns
dec
or
pusha
ror
in
jnp
mov
mov
add
into
add
mov
adcb
adc
loopne
dec
leave
shr
add
mov
dec
pusha
sahf
cmp
sbb
call
scas
pop
mov
subl
in
jno
imulb
jle
out
pop
ret
loopne
hlt
fisubs
outsb
inc
ja
loopne
or
int3
lea
mov
xchg
mov
sbb
dec
jae
add
nop
je
mov
pop
pop
fistpl
fists
in
or
pop
shrl
mov
and
js
cmc
pop
jg
pop
lret
stc
and
jae
push
push
mov
mov
sti
dec
mov
jno
andl
push
cmp
scas
bound
inc
sbb
push
mov
dec
dec
and
push
popf
dec
or
in
sbb
push
rorb
and
adc
rclb
int
adc
js
push
roll
sub
add
mov
stos
sahf
les
pushf
loopne
push
cmp
test
mov
xorb
in
cld
pop
daa
push
jmp
pop
addr16
cli
xchg
dec
inc
dec
sbb
cmp
mov
fisttps
data16
xor
dec
mov
push
adc
dec
out
xchg
mov
push
or
jl
jge
les
mov
pop
or
jae
repz
fists
dec
cmp
xor
jp
loop
loop
mov
mov
loop
rorb
and
jl
xor
repz
mov
stos
repz
jne
xor
ret
mov
sti
cmp
faddl
scas
int
loop
dec
fs
sahf
gs
mov
mov
arpl
mov
popf
stos
inc
loop
jg
jae
popa
inc
es
lahf
std
in
jmp
cwtl
mov
xor
cli
jae
aad
stc
enter
push
dec
rorb
or
and
cmp
fildll
leave
dec
mov
inc
dec
je
sti
and
je
adcl
push
js
pop
sub
fwait
ret
insl
mov
inc
andl
pop
lea
rol
test
sarb
fbld
cmp
cmp
enter
pop
or
out
cs
aas
incl
cmp
sbb
cs
movzbl
movsb
add
and
or
cmc
roll
orl
or
pop
movsl
shrb
lods
pushf
cmp
jl
repz
xchg
popa
ja
dec
insb
xor
pusha
pop
lcall
loope
dec
sub
add
or
enter
mov
test
das
sub
pop
jge
daa
shlb
enter
orl
cli
dec
inc
jp
or
mov
push
ret
lods
adc
jmp
mov
jl
clc
repnz
push
mov
push
fmuls
dec
jae
mov
sbb
hlt
or
add
mov
ljmp
ljmp
sub
int
rcrb
mov
add
and
push
sahf
jecxz
mov
pushf
xchg
push
cmp
jg
sub
rolb
test
fmul
xor
lret
sahf
add
xor
leave
mov
cltd
fwait
andb
push
mov
test
lret
add
ljmp
mov
lods
fidivrs
mov
sub
bts
lock
sahf
jbe
or
loopne
fmull
adcb
mov
dec
fucomi
in
mov
pop
gs
xlat
fnsave
mov
mov
mov
movsb
lret
dec
enter
sbb
gs
push
fcmovbe
test
call
or
push
sbb
into
xor
rol
mov
mov
cwtl
iret
fs
mov
push
call
aam
lret
sahf
push
or
pop
call
dec
iret
dec
in
mov
out
sub
inc
bound
jae
or
mov
dec
lods
sub
adc
insb
xor
jno
ror
or
rolb
dec
mov
adc
aad
pop
outsb
mov
lret
js
cmp
inc
inc
aam
je
ror
adc
add
addb
sahf
ret
loopne
jg
int3
out
sub
in
mov
aam
mov
gs
add
mov
in
and
or
and
int3
lock
cld
in
cmp
data16
mov
lahf
sti
jae
data16
inc
dec
mov
pushl
shll
hlt
cmpsb
inc
shl
shl
dec
frstor
in
inc
mov
enter
inc
test
pop
pop
sub
out
jecxz
movsl
push
imul
xchg
mov
xchg
imul
lahf
lahf
mov
sbb
iret
jmp
cmc
subl
push
dec
push
xchg
xor
mov
andl
ljmp
es
xchg
jp
inc
cmp
add
into
jecxz
cmpsb
sub
mov
dec
push
lods
ss
push
dec
cs
dec
mov
or
jnp
lret
rolb
enter
fstpl
xchg
je
test
xchg
sbb
sub
push
adc
pop
cmpsl
mov
popf
rcrl
adc
cmp
inc
sahf
xchg
inc
inc
aam
and
pop
inc
sub
rcll
test
pop
movb
add
xchg
xor
in
mov
outsl
inc
mov
inc
jne
mov
sub
inc
rcpps
inc
pop
mov
mov
mov
test
out
lret
sub
daa
sahf
inc
dec
sub
push
ret
aaa
dec
mov
sbb
out
inc
cmp
cmp
and
sub
mov
lcall
or
je
scas
push
lea
cmpsb
push
cmp
xchg
inc
lock
fisubl
insb
fisttpl
cs
movsl
fs
flds
jmp
inc
ret
pop
cmp
cli
inc
dec
adc
mov
xor
xor
add
lcall
movzbl
sysexit
dec
mov
dec
or
inc
inc
test
xlat
loopne
jns
aaa
mov
imul
cmp
cs
data16
jl
jae
das
mov
fwait
adc
push
insb
fiadds
cmp
pop
loopne
jg
ret
lret
sbb
mov
cmc
and
in
xor
lret
push
push
mov
mov
mov
mov
scas
out
adc
pop
outsl
aad
rcrl
push
mov
and
push
es
add
dec
xchg
idivl
icebp
fadds
iret
pop
dec
dec
xorb
inc
jb
cwtl
push
and
and
jg
lahf
rclb
dec
stc
test
jo
mov
jmp
dec
inc
loopne
out
jo
mov
mov
adc
inc
sub
mov
inc
sbb
dec
pushf
jbe
push
add
imul
sub
mov
inc
cmpsl
test
and
insl
fcmovu
fmull
dec
inc
mov
inc
cmpsb
cmp
inc
and
pop
mov
sub
stc
or
orb
pusha
fstps
shll
add
or
stc
pop
jmp
jmp
pop
leave
inc
hlt
lds
mov
mov
mov
inc
mov
fnstsw
insb
inc
jne
popa
lahf
inc
dec
adc
mov
inc
push
mov
xchg
cmp
jbe
pop
pushf
jne
mov
sbb
jbe
mov
and
dec
fmulp
fs
pop
mov
mov
enter
dec
xchg
pop
ja
sub
in
mov
test
mov
adc
jge
popa
insb
loop
sbb
mov
fsubl
and
les
ret
aaa
add
fistl
movl
data16
or
pop
lds
push
lahf
dec
into
fsubrl
cli
into
mov
dec
xchg
dec
jg
jne
in
test
fbstp
cmp
mov
aaa
popa
push
adc
xchg
ror
push
fsub
add
push
mov
clc
pop
or
gs
ss
stos
mov
inc
leave
push
fimuls
fdiv
bnd
fistpll
into
push
in
cmp
stos
add
outsb
bound
cmp
cmp
push
dec
movsl
mov
shll
jae
mov
enter
int3
add
fwait
addr16
dec
mov
adc
mov
aas
mov
push
inc
dec
add
jge
xchg
sbb
wrmsr
cmp
xor
mov
mov
cli
xchg
sahf
cmp
fadds
add
dec
mov
movb
pop
mov
lock
sbb
or
std
xchg
shll
in
les
xchg
dec
sbb
enter
in
cmp
inc
mov
mov
adc
mov
bswap
jb
addr16
lret
push
xchg
inc
stc
sarb
dec
fstps
ror
pop
shl
loop
inc
pop
and
loope
or
cli
adc
rclb
inc
call
sub
jb
push
je
fmuls
dec
movsb
rorb
movsl
dec
inc
add
faddl
adc
inc
scas
pop
sub
mov
mov
into
jmp
fistpll
cli
cs
mov
je
and
rorb
push
lahf
sbb
ja
repnz
mov
adc
xor
xchg
test
jbe
pushf
and
xchg
sub
scas
into
outsl
xchg
int3
out
xchg
xchg
daa
xor
fcompl
or
mov
outsl
sub
sub
mov
cmc
mov
xor
xor
cwtl
roll
mov
xor
lock
js
pop
pop
push
xor
push
int
js
scas
sub
jecxz
pop
mov
push
jno
mov
loopne
mov
fcmovb
cs
lret
pop
sbb
movsl
jl
adc
or
mov
push
ret
mov
aas
int
jg
mov
pop
test
pusha
and
in
push
sbb
push
aaa
decl
or
std
mov
mov
and
fmull
sub
dec
pop
pusha
fadd
gs
jns
push
aaa
imul
push
gs
inc
insb
stos
lods
lret
fcomps
pop
loop
imul
xchg
out
mov
in
orl
mov
loopne
iretw
int
mov
pushf
push
mov
and
sarb
call
pop
jae
int
cmp
or
add
cltd
cmp
lock
and
mov
popf
loopne
mov
jmp
nop
mov
testl
loopne
cmc
icebp
inc
pusha
cmp
push
or
push
pushf
mov
or
pop
sub
inc
push
mov
pop
jmp
sbb
stos
insl
mov
aas
add
repz
roll
lods
enter
imul
push
mov
pop
or
decl
ja
cmp
add
clc
cs
inc
int3
add
test
or
add
sbb
or
inc
jnp
popa
xlat
pop
sahf
add
mov
add
dec
dec
lret
loop
sbb
add
scas
mov
icebp
fiadds
lret
mov
add
or
mov
mov
repz
fldt
dec
adc
mov
or
mov
jns
dec
inc
or
cmpsb
or
sub
adcb
test
out
fwait
stos
sbb
scas
lods
ficoml
or
pop
es
or
lret
mov
or
sub
clc
lock
push
adc
jmp
int
enter
in
loopw
mov
jl
push
es
mov
add
push
mov
jmp
clc
stos
xlat
cwtl
dec
pop
clc
or
out
enter
pop
add
dec
js
sub
cld
dec
xor
shl
popf
movb
add
pop
or
or
or
pop
stos
fildll
mov
enter
cltd
fsubl
lret
data16
sub
or
or
push
pushf
jmp
push
push
cld
js
pop
adc
dec
lds
inc
mov
mov
dec
or
mov
test
bound
insl
xchg
sub
int
push
test
add
scas
insl
int3
idivb
cmp
mov
leave
inc
stos
repz
or
inc
inc
xchg
fs
cli
and
out
pop
ljmp
jb
push
ja
xlat
movaps
or
pop
sub
mov
dec
push
dec
xorl
jmp
inc
fldt
pop
and
fldcw
mov
add
add
call
inc
test
push
xchg
pop
xor
sbb
or
sbb
cli
sahf
jbe
mov
and
movsb
adc
jle
int3
repz
ljmp
jns
mov
sbb
mov
loop
dec
pop
sub
sub
jbe
das
xor
add
clc
loop
adc
aam
sti
pop
stc
dec
or
mov
test
mov
shll
mull
xchg
loope
js
loop
pop
pop
cwtl
xchg
adc
pop
xor
cmpsb
mov
cmp
mov
cmp
bound
sub
or
pop
les
add
cltd
inc
addl
out
inc
pminsw
mov
and
outsl
add
addr16
test
fidivrl
jg,pn
insb
jb
out
jo
sub
dec
sub
inc
sbb
in
nop
or
push
repz
lea
je
sti
cmp
sub
mov
in
add
movb
dec
push
ret
inc
sub
add
je
ja
lcall
imulb
add
pop
cwtl
ret
jmp
pushf
ret
inc
jns
pop
ficoms
sub
cmp
cmp
lret
push
in
sub
hlt
mov
ror
push
loope
in
sbb
sub
sub
ficomps
mov
nop
inc
cld
roll
cmp
push
add
pop
xor
ss
div
push
enter
or
test
test
enter
ljmp
mov
cmp
enter
das
out
es
mov
jae
scas
popa
test
loope
push
mov
lds
mov
mov
fbld
xlat
stos
pop
pop
dec
sub
adc
les
lret
mov
cmp
pop
pop
mov
daa
adc
cwtl
sahf
sbb
pop
ret
mov
leave
dec
or
cmc
sbb
or
fcmovnb
push
jb
lods
and
and
inc
xor
add
mov
and
cwtl
std
mov
jmp
mov
cs
fs
xor
adc
push
and
jle
loope
jecxz
add
mov
sub
sbb
dec
imul
shrb
inc
out
or
dec
push
add
inc
cli
cs
sub
pminub
mov
cmp
cmp
ss
fmull
sti
leave
incl
call
gs
pop
inc
lock
lods
xor
cmp
sbb
js
dec
cmp
inc
imul
pop
test
fdiv
push
popa
mov
fldl
sbb
inc
lods
mulb
sbb
lods
inc
dec
rcrb
sbb
pushf
leave
sub
jle
cmp
dec
popa
mov
imul
daa
push
orl
or
or
in
push
sub
ret
shr
xor
cs
adc
inc
imul
sub
sub
push
dec
xlat
call
ret
ret
icebp
dec
pusha
sub
movsl
mov
incl
inc
push
cld
aas
ficompl
dec
and
inc
sbb
dec
dec
or
jg
lret
icebp
adcl
mov
sbb
insb
or
sub
or
stc
adc
push
inc
int3
rcl
push
addr16
fistpl
ret
push
rclb
mov
or
notb
jbe
ret
xchg
cld
add
sub
jnp
inc
rorb
mov
test
add
pusha
fiadds
push
add
fisubrl
into
mov
ret
cmp
sub
scas
xchg
insl
es
mov
adc
les
in
jmp
cmp
jmp
adc
sub
ljmp
adc
cwtl
scas
in
xchg
and
dec
xchg
popf
ljmp
leave
test
pop
jecxz
push
mov
lods
add
sbb
insw
or
rolb
cmc
pop
pop
nop
xchg
jmp
xlat
std
in
pop
pop
push
lock
xchg
rcr
fmul
das
outsb
out
fisttpll
ret
mov
sub
pop
iret
cmp
add
mov
inc
mov
jns
pop
repz
movsb
add
jmp
insl
je
sub
xor
das
out
std
clc
push
dec
aas
jb
dec
sub
push
adcl
pop
jmp
inc
add
or
mov
add
dec
sub
mov
js
scas
icebp
jae
imul
inc
test
movsl
out
arpl
test
fsubrp
sub
jae
adcb
enterw
inc
loop
inc
push
push
ja
adc
sahf
enter
xor
cmp
in
mov
mov
mov
pop
filds
jno
movsl
loope
xchg
mov
pop
xchg
pop
jle
gs
aad
cmp
dec
xor
inc
dec
add
cld
ret
ljmp
mov
push
shr
sub
loope
pop
in
mov
pop
dec
push
mov
cmp
movb
inc
repnz
imul
mov
dec
jecxz
fsubrl
lret
fs
ret
xchg
jae
dec
add
mov
and
add
popl
push
jns
ljmp
addr16
or
and
mov
pop
inc
lods
inc
cmpl
inc
xchg
xor
stos
sbb
sub
push
icebp
imul
in
xor
bound
jno
push
ja
inc
jae
push
sbb
xchg
lds
lods
aam
pop
xor
cmp
mov
inc
mov
push
and
daa
sub
jb
cmpsb
rorl
fucomi
inc
lahf
dec
jbe
xlat
push
sub
enter
xlat
mov
rcr
ja
sarb
push
push
cli
adc
adcl
jecxz
mov
or
pop
pop
popf
out
inc
leave
inc
mov
cmp
movsl
imul
and
mov
mov
sti
add
xchg
jp
inc
xor
call
push
xchg
cmp
lods
push
jnp
inc
xor
pop
inc
ret
and
in
adc
imul
mov
movsl
or
lret
jmp
aad
sub
pusha
fsubs
jg
mov
add
and
lret
mov
cmpl
leave
push
mov
sbb
leave
dec
pop
cmpsb
dec
or
aam
sbb
jnp
push
inc
pop
ret
je
scas
pop
lahf
ljmp
dec
push
sbb
sub
mov
mov
or
mov
mov
aas
push
push
inc
mov
cmc
xchg
and
idivb
sbbl
int
pop
popf
sub
ret
lock
lods
in
cmp
pop
addb
xchg
push
mulb
stos
gs
mov
adc
stos
aas
pop
into
add
stos
xor
push
or
stc
pop
and
push
jmp
xchg
imul
movsl
jne
sub
rclb
cmpsb
xor
sub
aad
push
or
cmc
lret
imul
negb
cmp
call
shll
ja
fwait
inc
in
rcr
and
push
push
and
sub
sub
dec
hlt
and
cmp
push
jae
xchg
xchg
or
push
pop
add
sub
aaa
mov
push
imul
cmp
jo
dec
cwtl
xchg
ret
outsb
jge
fisubl
nop
or
mov
cli
xor
imul
dec
mov
xor
push
out
or
pusha
daa
ficompl
imul
scas
push
nop
add
xor
mov
jp
and
arpl
push
sti
add
jne
cwtl
mov
loope
push
lret
arpl
loopne
dec
daa
dec
inc
mov
add
js
sub
and
push
inc
inc
inc
loope
push
popa
jo
faddl
popf
test
jnp
cld
mov
pusha
xchg
or
shr
inc
outsl
jne
mov
pushf
inc
ret
mov
sbb
ljmp
jle
push
in
leave
cli
dec
sub
int
cltd
mov
test
jge
add
mov
xchg
imul
mov
mov
jb
dec
scas
hlt
xchg
inc
aas
int3
dec
fsubr
fbstp
ja
cmp
dec
cmp
inc
push
cs
sti
mov
out
push
rorl
cmp
shrb
cs
into
mov
mov
or
jmp
add
bswap
lock
fs
adc
push
jb
dec
cmp
mov
sub
mov
cmp
and
cli
das
or
inc
popa
cmp
je
test
in
roll
sahf
xchg
out
mov
test
cs
pop
shlb
inc
push
cmp
jl
pop
sub
cmp
push
call
arpl
jbe,pn
or
sub
loope
shlb
div
mov
mov
insb
test
fwait
mov
inc
mov
cmp
aaa
jecxz
out
pop
mov
fscale
cmp
lcall
pop
and
xor
enter
roll
in
mov
sub
push
inc
outsb
ljmp
mov
mov
sub
add
or
push
jge
mov
or
mov
sbb
and
push
dec
hlt
or
xlat
rcll
or
push
pushf
adc
call
mov
cli
shlb
push
cmp
jmp
sub
and
ret
cmp
inc
and
repnz
push
andl
enter
ret
xchg
and
out
cmp
out
stos
pop
jb
push
ror
push
pop
in
cmp
leave
push
sub
sahf
inc
shrb
in
inc
jge
ljmp
dec
mov
and
popa
daa
add
dec
pop
leave
pop
ss
bound
lret
stos
scas
loope
xchg
test
push
les
gs
addb
sarb
adc
xor
ljmp
push
das
cs
sbb
or
call
repnz
pop
xchg
cld
pop
aaa
sti
cltd
and
in
shlb
inc
fnstenv
in
inc
and
mov
int3
icebp
adc
push
in
scas
inc
mov
xchg
leave
test
pop
cld
fsubl
push
pop
insl
and
rol
aaa
test
pop
cltd
jle
pop
sub
lahf
sub
lret
inc
jae
repnz
into
xchg
into
or
loopne
andb
sahf
cmpl
inc
pop
les
lahf
push
inc
movsl
repnz
push
imul
add
sub
dec
push
movl
fldl2t
jo
push
sub
fidivl
push
clc
fucomip
xchg
bound
push
push
jecxz
fldt
lods
fistpll
inc
pop
pop
sbb
dec
pusha
push
mov
insb
enter
sub
sbb
add
add
mov
popa
mov
test
scas
xor
loop
dec
add
or
xchg
inc
push
in
ja
mov
sub
and
fdivp
cmc
or
repnz
cmp
push
jmp
push
mov
inc
imul
mov
aam
sbb
jp
and
cmp
cwtl
fwait
inc
sahf
es
and
pop
and
in
sbb
push
movsl
adc
dec
nop
lock
stc
sub
aas
sbb
jl
cmp
sub
jmp
aam
mov
mov
test
dec
fdivrl
inc
push
or
pop
pop
mov
aad
fs
mov
in
ret
outsl
out
sub
jge
divl
jae
sbb
dec
fucomi
mov
fwait
push
push
push
or
mov
stc
push
and
sub
or
bound
shrb
lahf
daa
gs
ss
xchg
push
pop
or
cmp
and
push
xor
push
mov
jcxz
mov
jns
ja
cmp
imul
addr16
push
cli
push
lret
inc
mov
cmp
pop
xchg
insb
jmp
filds
xchg
xchg
pop
ss
stos
mov
inc
pop
push
push
push
mov
imul
fldl
push
dec
leave
sbb
inc
add
and
sbb
xor
jp
inc
inc
ljmp
dec
addr16
sub
dec
or
orb
jmp
push
jecxz
mov
scas
stos
add
pop
pop
pop
sub
and
dec
jo
clc
push
mov
pop
dec
jnp
ljmp
imul
sbb
lcall
mov
in
in
dec
mov
and
inc
mov
iretw
mov
mov
lds
inc
add
jmp
sbb
inc
pop
ret
fadd
loop
daa
dec
sub
stos
sbb
mov
mov
iret
cmpsl
inc
and
add
fcmovu
adc
stos
popa
pop
pop
or
dec
mov
or
fwait
mov
ljmp
push
popl
xor
mov
dec
sub
cmc
out
inc
mov
imul
push
rol
add
add
xor
scas
push
pop
push
sbb
cmp
xchg
test
std
in
pusha
sbb
outsl
out
arpl
pop
add
dec
dec
shr
push
imul
pop
push
push
cwtl
sub
inc
cltd
cmpsb
add
pop
dec
fiaddl
iret
pop
dec
in
rcr
out
into
xor
loop
into
or
dec
or
iret
mov
push
pop
inc
sbb
pop
inc
pop
cld
lret
les
adc
mov
outsl
or
sbb
push
cmc
scas
leave
dec
dec
xchg
inc
cmp
lock
dec
mov
push
fld
loope
xor
fsub
sbb
mov
jmp
cs
pop
inc
fimull
adc
mov
and
fldenv
sub
xor
jmp
test
mov
sbb
inc
jmp
data16
dec
outsl
pop
loope
inc
mov
push
daa
pusha
sbb
dec
pusha
adc
pop
push
movsb
add
les
ret
dec
cmp
in
dec
adc
sbb
and
orl
std
xchg
sub
out
aaa
adc
push
lods
ret
jo
ret
sbb
dec
movsl
imul
js
rorl
dec
push
sbb
std
hlt
mov
sar
xchg
dec
xchg
pop
ret
cmpb
and
cld
les
sbb
and
loop
mov
inc
xor
jbe
add
cld
xor
std
push
inc
and
pop
sub
ret
aad
xchg
ret
ret
pop
arpl
cmp
addb
std
ss
or
and
add
push
sub
pop
pop
add
test
mov
xchg
push
orl
pop
and
mov
sbb
inc
inc
leave
in
pusha
sbb
incb
call
pusha
int
mov
out
dec
fidivl
jbe
mov
inc
sbb
push
adc
leave
jae
fidivrl
inc
jnp
dec
popa
pop
push
aaa
outsl
ljmp
inc
cmpl
leave
push
or
sub
xor
cli
addr16
or
enter
testl
fcmovnb
loope
fcomps
fiaddl
addr16
or
dec
adc
mov
in
sub
jbe
adcb
orl
ss
movsb
sub
sub
dec
cmpsb
cmp
inc
mov
push
mov
outsl
insl
and
pop
mov
adc
pop
xor
xor
cltd
sahf
add
pop
enter
xchg
mov
jle
fstpl
jle
daa
nop
je
lock
les
lahf
xchg
adc
add
repnz
adc
mov
js
sbb
mov
xlat
dec
repz
lds
mov
gs
dec
dec
jecxz
mov
push
pushf
stc
sub
jno
push
jo
mov
jg
gs
imul
repnz
ljmp
faddl
gs
or
pop
sahf
lds
aas
out
inc
push
xor
popf
je
sub
mov
jp
jns
pop
jo
inc
repnz
inc
push
popf
xor
mov
test
pop
enter
push
mov
jb
inc
xor
imulb
xor
mov
sub
cbtw
loope
inc
and
mov
movsl
xchg
jg
filds
and
loopne
js
lcall
and
pop
xor
cli
sub
test
and
fcomi
jp
push
repnz
stos
insl
inc
and
add
xor
xor
aaa
sbb
push
ljmp
imul
jge
jge
cmp
imulb
leave
dec
push
pushf
fmull
imul
cli
dec
jnp
add
dec
dec
pop
out
movl
lock
pop
in
lock
icebp
inc
fldenv
and
add
mov
fwait
inc
jge
mov
movsl
mov
jecxz
mov
fwait
mov
call
jmp
inc
outsl
aad
pop
push
jae
jle
bnd
jmp
xchg
lret
sahf
mov
dec
mov
and
aas
push
leave
pop
xorl
test
sub
xor
add
mov
loop
and
sbb
mov
pop
lock
jmp
test
xor
cmp
sbb
jmp
insb
ss
jnp
xchg
adc
ljmp
pop
fistps
dec
dec
movsb
jecxz
mov
enter
ret
ljmp
ret
fildl
fldt
stos
rcrb
or
mov
sbb
bnd
inc
sub
inc
add
add
outsl
xchg
push
hlt
push
fiaddl
cltd
mov
mov
lcall
dec
lret
mov
rorb
xchg
pop
sar
dec
popf
fcompl
fwait
cld
jne
outsb
push
add
shll
adcl
jno
mov
cmp
and
or
xor
add
inc
xor
pushf
sbb
in
cmp
mov
pop
inc
cmp
pop
aad
in
push
xchg
fmul
scas
xor
jg
sub
adc
inc
iret
and
lock
or
sbb
mov
pop
push
loopne
dec
mov
sub
sbb
adc
add
push
loop
jecxz
decl
and
sub
pop
lock
add
mov
fadds
sub
sub
jae
mov
jmp
mov
jo
pop
or
xchg
or
pushf
lahf
jl
iret
or
rclb
pusha
dec
loopne
adc
inc
mov
push
xor
mov
leave
cs
dec
mov
mov
mov
mov
adc
sub
or
cmp
inc
das
aas
and
in
inc
outsl
sbb
dec
in
stos
out
jp
push
jmp
stc
jecxz
and
fcomps
insb
pop
out
sbb
incb
push
faddp
mov
xlat
movsl
in
in
fcmovnb
or
xor
das
imul
dec
imul
push
inc
fbld
in
adc
les
xor
lds
sbb
mov
inc
push
add
mov
pop
inc
pop
das
and
mov
or
fsubl
dec
test
outsl
push
dec
loope
insb
add
inc
jb
inc
add
pop
loop
loope
pop
xor
std
lods
daa
subb
orl
push
sbbl
inc
jg
adc
push
jge
enter
fsubrl
rolb
stc
ret
jecxz
add
notb
lret
loop
fsubr
jno
or
stos
mov
out
xchg
stos
movsb
jg
push
test
sub
and
stos
rorl
jp
in
push
pop
icebp
test
inc
popa
adc
xor
fwait
sub
jmp
sub
adc
int3
pop
fistpll
je
push
cld
leave
or
sbb
leave
sub
rcr
pop
call
jge
sub
outsl
sub
stos
lahf
and
sbb
jecxz
jmp
dec
les
cmp
push
fldl
cld
pop
lods
and
pop
mov
mov
jl
repnz
jbe
jecxz
mov
test
pop
pop
pop
xchg
pop
or
add
jecxz
and
cld
pop
or
dec
popa
stos
pop
pop
jl
add
arpl
xor
rorb
les
loop
mov
mov
out
adc
sub
push
dec
jae
addb
adc
ror
mov
bound
sahf
fwait
ds
pop
pop
sarl
jmp
and
pusha
inc
in
push
cmpsl
insb
popa
sub
das
xchg
dec
jbe
cli
sbbl
icebp
mov
push
adc
movsl
mov
and
sbb
push
push
pop
sub
popf
cmp
jnp
sbb
jl
push
notrack
add
ret
fwait
dec
xor
stos
mov
xchg
daa
icebp
icebp
sahf
fcomi
or
inc
or
xor
sbbl
leave
pop
dec
pop
dec
in
push
mulb
push
in
add
sbb
pop
sahf
jmp
test
test
mov
inc
filds
cwtl
ret
pop
push
and
push
cwtl
mov
jne
sub
lods
dec
ss
cmp
ret
stos
sub
gs
mull
inc
aaa
dec
cmp
cmpsb
cmpsb
shrb
push
aas
or
fdiv
jmp
mov
inc
xlat
jbe
pusha
dec
jne
cmp
in
xor
and
insb
sub
stos
mov
inc
cmp
push
add
in
dec
push
out
pop
cmp
ficoml
cmpsb
aam
lods
ror
pop
mov
test
fmul
xchg
inc
sub
leave
pushf
inc
push
addr16
add
inc
pop
jbe
ret
out
push
xor
adc
mov
pop
and
cs
inc
or
push
imul
lahf
call
sub
add
sarl
test
inc
sbb
jne
pop
lret
mov
push
xchg
sbb
sbbl
fdivrl
or
sub
mov
ret
leavew
imul
call
test
fsubrp
inc
test
jmp
inc
inc
fisubs
inc
sub
push
or
hlt
test
test
mov
cmpsb
imul
inc
dec
imul
push
fcoml
jmp
ljmp
or
jg
loope
and
push
jo
cmp
xchg
xchg
nop
push
mov
mov
add
inc
jo
repz
dec
in
cmc
sahf
into
mov
dec
dec
ret
push
into
adc
fmul
movsb
pop
in
inc
mov
fs
or
in
or
dec
pop
test
pop
pop
jecxz
ret
movsl
stc
jmp
sbb
ja
sub
xchg
sti
sub
add
jb
jecxz
in
mov
sub
aas
fsubrs
es
ret
mov
pop
mov
test
add
neg
sahf
pop
xchg
inc
mov
mov
gs
mov
mov
adc
and
mov
dec
loope
or
jb
push
push
jg
mov
push
cmovnp
sbb
int
loopne
jo
and
pushf
test
mov
xor
into
in
aam
inc
pop
push
pushf
sbb
dec
fcomps
loopne
loopne
les
cwtl
pop
mov
out
outsb
stos
push
adc
scas
push
icebp
push
and
jbe
mov
ret
shl
or
sub
mov
pop
shlb
adc
inc
sub
aaa
pop
push
and
inc
jecxz
adc
mov
out
inc
jge
jle
or
xor
jno
leave
sbb
enter
xchg
enter
xchg
sbb
leave
inc
cmp
lea
xor
sarb
inc
lretw
bound
adc
ljmp
pop
cmp
and
xor
and
rorl
add
pop
mov
mov
push
mov
insb
sbb
addb
mov
outsl
mov
pop
lahf
mov
push
dec
lret
cmpb
dec
inc
sbb
int
cltd
pop
mov
dec
sub
out
jmp
lahf
push
jae
or
jp
push
lcall
mov
inc
pushf
orb
jle
mov
mov
pop
push
inc
out
sbb
mov
mov
inc
dec
mov
mov
sub
inc
push
lret
outsb
dec
inc
sahf
jbe
sbb
jge
lods
lahf
inc
aaa
aaa
cmp
pop
cmp
xchg
lds
dec
mov
movsb
in
leave
das
xor
cmp
cmpsb
and
test
in
bnd
inc
ljmp
mov
punpckhwd
pusha
adc
dec
sbb
xchg
mov
mov
push
cmp
lock
dec
or
mov
pusha
enter
call
inc
xchg
std
mov
cli
aas
pop
dec
pop
xor
add
enter
xor
ret
mov
xchg
enter
popa
lret
pop
or
add
test
and
mov
pusha
les
lea
inc
pop
or
inc
xchg
leave
and
popa
icebp
jno
dec
lret
push
fadd
stc
mov
dec
js
push
leave
in
push
inc
add
pop
loop
dec
adc
outsl
sub
sbb
xchg
daa
push
sub
orb
jb
jne
aam
or
inc
mov
inc
and
enter
lds
push
out
adc
imul
iret
cmp
push
mov
leave
in
mov
and
jl
insl
enter
sub
hlt
in
das
cmp
insb
daa
ret
inc
pop
ret
mov
pop
cmp
or
mov
inc
popa
aaa
xchg
or
inc
pop
mov
push
push
push
push
dec
js
dec
xor
mov
nop
pop
int
pop
fimuls
fists
dec
and
arpl
inc
fsubrl
repnz
mov
enter
push
movsl
aas
dec
les
sub
es
mov
inc
inc
and
dec
fldt
xchg
dec
inc
inc
sbb
ret
lret
mov
xchg
or
mov
xchg
xchg
inc
test
mov
test
or
mov
dec
dec
ljmp
cmp
ficomps
mov
xor
mov
fcoms
inc
cmp
push
data16
inc
lahf
into
xor
dec
scas
mov
xor
sahf
inc
mov
or
lret
aas
mov
xchg
stc
inc
sbb
fwait
ret
mov
and
sbb
push
cmpsl
dec
xacquire
cmp
or
scas
sbb
push
aas
lea
push
pop
scas
xchg
mov
add
insl
xor
xorb
outsb
sub
xor
dec
jbe
inc
out
mov
jmp
divl
fisttps
mov
add
mov
enter
mov
jg
xchg
gs
dec
cmp
dec
mov
int3
mov
ret
sub
cs
loopne
push
in
pop
mov
int
xchg
push
cmpsb
ja
call
inc
test
adc
mov
loope
push
fs
cmpsb
fistl
fwait
mov
mov
sbbb
push
adc
ret
dec
adc
fiadds
mov
fildl
jo
lock
xor
push
sahf
xor
dec
add
push
push
sub
add
dec
cmp
hlt
adc
popa
push
ljmp
mov
mov
mov
cmp
push
mov
ja
push
push
in
outsl
cwtl
lods
mov
mov
and
cltd
pop
sub
mov
mov
push
inc
xorb
in
xor
sbb
jge
das
in
imull
mov
sub
sub
fadds
lds
imul
clc
in
mov
or
call
inc
jg
inc
in
popa
data16
sub
inc
stos
sub
lret
dec
adc
fstpl
push
orl
icebp
add
int3
in
movsb
cmp
mov
pop
push
inc
pusha
sbb
nop
pusha
xchg
jne
mov
xor
ffree
mov
in
cmp
cli
add
mov
push
push
push
outsl
add
pop
aas
fwait
mov
adc
test
pop
sbb
into
jmp
jecxz
movsl
xacquire
add
iret
pop
dec
ja
cwtl
jl
sbb
mov
ret
aam
in
mov
rcll
inc
dec
fldenv
jae
jmp
push
and
gs
and
jecxz
mov
mov
mov
push
fwait
lret
ljmp
popf
push
and
jo
inc
xor
adc
decb
cmp
inc
aas
xor
xchg
dec
scas
inc
cmp
xor
insl
pop
sbb
push
and
les
sub
jg
push
inc
popf
int3
pop
mov
insb
adc
add
jne
add
add
out
sbb
insb
cmp
test
gs
fimuls
sub
out
jecxz
adc
xchg
mov
xchg
out
push
dec
inc
xchg
mov
inc
mov
ficoms
bound
cmc
inc
jnp
inc
mov
pop
dec
loopne
sbb
cmpsb
lcall
jbe
sub
or
lods
pop
mov
and
mov
int3
pop
fildl
xor
fmulp
call
jp
cmp
pop
int
jnp
sbb
lcall
dec
push
mov
jb
jnp
bound
test
jnp
xchg
sahf
push
inc
push
fmull
iret
sahf
add
jne
or
enter
xor
pop
dec
xor
dec
ljmp
jo
bound
lret
pop
imul
lret
xor
mov
push
shll
mov
rcrb
mov
dec
xchg
mov
push
mov
adc
ljmp
int3
inc
fstpl
jo
sbb
jg
or
dec
sub
mov
or
sbb
dec
mov
dec
and
loop
stos
or
shr
sub
xchg
dec
sub
clc
or
je
ljmp
inc
xchg
pop
pop
je
rcl
pop
dec
inc
dec
cmpsb
imul
pusha
fdivl
cmp
lds
aas
add
addr16
xor
mov
insl
insb
mov
inc
lret
adc
inc
or
ficompl
int
movsb
std
mov
lret
andb
add
inc
call
sub
ljmp
enter
fwait
leave
push
imulb
arpl
loope
inc
fisubs
or
test
rolb
adc
mov
push
push
sahf
cmp
adc
in
fwait
inc
sbb
inc
push
jmp
adc
inc
stos
enter
xor
adc
fldt
or
mov
or
movsb
pop
xor
push
push
jb
push
and
add
inc
sbb
jnp
pushf
inc
test
leave
and
ficoml
out
fs
movsl
cltd
inc
jge
es
inc
dec
cld
loopne
in
sti
mov
xor
in
std
loopne
sub
daa
scas
cmp
jle
stc
pop
add
and
stos
rcrl
insb
loopne
repnz
out
mov
adc
dec
and
or
adc
mov
ret
push
test
xchg
es
test
cmpsb
pop
mov
push
pusha
loope
xchg
or
and
dec
jmp
shll
xor
shr
mov
cwtl
lea
mov
adc
lcall
dec
sbb
sub
in
xchg
fsubrl
fsubrl
dec
inc
fdivs
in
sub
imul
pushf
data16
fs
inc
cli
add
xchg
mov
mov
outsl
test
add
sbb
ljmp
in
mov
sbb
sti
cmp
xor
fs
mov
int
stos
xor
rolb
mov
and
dec
xchg
add
fsubrl
mov
and
in
mov
or
in
mov
dec
cld
into
mov
in
iret
aas
xor
mov
ds
bound
or
js
jae
push
jecxz
pop
arpl
pop
aas
or
fcomp
xchg
fldcw
ljmp
imul
inc
push
sahf
push
push
xlat
test
sub
lods
dec
sub
and
xchg
rorl
out
xor
cmpsb
std
xchg
loope
int3
pop
mov
rol
into
sub
and
dec
push
imul
push
pop
mov
fsubrl
popf
lea
movsb
mov
push
mov
pop
dec
gs
inc
dec
outsl
and
in
orb
push
mov
jmp
ret
mov
add
inc
testb
adc
mov
inc
dec
xchg
rcrb
inc
adc
mov
xchg
fcmovb
push
mov
and
and
fwait
test
cs
out
loope
pusha
xchg
fildll
dec
call
jecxz
mov
sub
or
mov
iret
int3
inc
push
jno
xor
lods
mov
and
dec
jmp
int3
int3
adc
movups
mov
daa
das
xchg
mov
pop
mov
js
mov
lcall
xchg
subl
mov
fsubrs
cmc
and
pushl
ds
enter
ljmp
push
adc
sahf
pop
inc
stos
nop
pop
dec
cmp
add
in
add
cmp
pop
faddp
fstl
repz
lds
jecxz
mov
cld
fldcw
or
mov
into
xchg
loopne
jecxz
sub
xor
and
inc
pop
addb
dec
dec
push
or
testb
idivb
jge
and
add
dec
inc
add
add
add
es
push
stos
stos
fwait
dec
pusha
loope
sub
add
into
sub
jmp
cwtl
sbb
and
fstps
shl
push
cmp
cmp
mov
loopne
push
sbb
mov
dec
xchg
rolb
and
dec
mov
and
lcall
sub
shrl
inc
mov
ja
push
sbb
pop
sub
fstps
addr16
cmp
mov
xchg
dec
ds
enter
inc
mov
icebp
mov
mov
fdivrp
jmp
inc
or
inc
call
dec
or
xchg
and
adc
add
jno
jmp
add
sbb
insb
mov
and
jo
je
lcall
mov
rcrl
into
xor
repnz
mov
pop
ljmp
sub
xlat
sub
pop
pop
or
fmull
fcmovb
rolb
push
dec
ret
inc
out
push
sub
fadds
dec
loopne
dec
inc
lret
xchg
cwtl
dec
add
jge
add
inc
cmp
int
sub
mov
jo
std
push
xor
outsb
stc
push
das
jns
fisubrl
popa
scas
xor
cmp
add
sub
jmp
in
repnz
push
pop
sbb
cmp
jbe
pop
jmp
sub
push
pop
repnz
filds
fbld
lret
rcr
pop
dec
mov
jns
mov
stos
cmp
enter
mov
xchg
pop
mov
fwait
inc
stc
mov
inc
adc
shlb
push
or
jecxz
push
push
pop
test
clc
adc
mov
adc
cmp
mulb
mov
imull
xchg
lock
adc
and
fstpl
cmc
and
pop
mov
adc
cmp
daa
mov
rol
adc
int3
out
out
inc
xchg
in
and
push
pop
sarl
stos
mov
add
xchg
mov
xchg
push
loop
dec
enter
dec
icebp
or
lcall
hlt
ljmp
mov
add
cmp
jno
lahf
xor
push
sub
xorl
add
in
and
push
push
pop
loop
mov
and
xchg
cltd
shll
dec
aaa
xchg
cmpsb
dec
cltd
loopne
dec
dec
or
add
pop
movsl
loope
mov
ljmp
mov
int3
dec
and
lret
push
xchg
xchg
ljmp
ret
insb
add
cwtl
cs
cmc
stc
loop
push
inc
mov
rolb
mov
or
movsl
or
xchg
mov
mov
addb
or
jp
xor
rolb
movsl
cmp
xlat
or
cmp
push
cs
sti
dec
stos
and
fisttps
daa
or
add
jb
or
add
sub
mov
xchg
insl
daa
push
sbb
sbb
mov
lock
in
nop
push
pop
loopne
xor
imul
pop
mov
enter
pushf
jmp
enter
ds
xchg
dec
mov
fidivrs
pop
cmpsb
pop
in
or
in
daa
popa
xor
cs
xor
mov
lock
or
in
pop
sub
mov
insl
arpl
mov
mov
sbb
fmull
nop
gs
xchg
push
scas
mov
push
aas
lock
mov
push
mov
inc
rolb
lret
dec
xchg
dec
and
ret
and
mov
dec
xchg
xor
mov
add
in
in
or
stos
hlt
sub
mov
pop
pop
pusha
into
ret
mov
inc
addb
shlb
in
cmpsb
inc
dec
jmp
sub
adc
out
shlb
addl
mov
xor
cmp
out
sub
cld
sbb
xchg
test
inc
repnz
xchg
pop
sub
xchg
jecxz
cmpsb
jg
pop
sub
ljmp
inc
lock
pop
inc
lcall
aaa
lea
iret
cmpsb
ljmp
sarb
enter
inc
shl
loop
adc
mov
mov
pop
ret
faddl
jo
orl
rolb
lret
aad
stos
std
cmp
xor
lret
and
lret
pushf
and
inc
scas
dec
into
rorb
lahf
xor
out
xchg
mov
push
mov
push
dec
les
inc
sub
out
inc
inc
jmp
cmpl
popf
and
clc
or
jg
data16
dec
inc
adcb
pop
push
xchg
gs
data16
inc
jp
aas
ret
push
push
mov
jecxz
sahf
inc
incb
dec
out
gs
cmp
xor
dec
mov
inc
pop
cmpsb
xchg
inc
test
mov
jb
push
fwait
cmp
xchg
rol
dec
ljmp
fldl2t
lret
add
leave
jb
mov
les
sub
andb
sbb
jne
mov
hlt
dec
cmp
jbe
or
outsl
xor
imul
dec
daa
std
stos
jg
xchg
inc
js
pop
cs
pop
mov
push
inc
xor
aas
das
popa
jbe
push
int
shll
fmull
cmp
push
mov
movsl
gs
mov
popf
jmp
push
push
adc
pop
int3
incb
inc
xchg
pop
loope
sub
dec
xor
cmp
in
out
in
fsubl
imul
dec
loopne
fsub
repnz
sahf
loop
add
int3
inc
pop
stos
inc
inc
or
mov
cmp
cmc
pop
dec
fnstsw
out
call
jecxz
cmp
in
daa
add
mov
enter
les
daa
std
sbb
pusha
ret
bnd
aam
xchg
inc
mov
inc
ret
cmpsb
inc
jmp
scas
fsubr
in
sub
ret
shrl
dec
loop
push
fistl
int
pop
inc
pop
pop
ss
popa
jae
inc
test
mov
and
sub
sub
inc
mov
cmp
scas
push
lret
mov
mov
mov
mov
cmpl
or
outsl
inc
incl
mov
rolb
ficomps
cmc
std
adc
jle
aas
loop
mov
repz
rcrl
xlat
cmc
jge
push
dec
inc
jo
cmp
insb
sahf
jmp
or
dec
push
into
repnz
jmp
dec
xchg
jmp
arpl
pop
mov
dec
fmuls
sub
mov
lahf
fildll
and
aas
std
xor
icebp
ljmp
stos
cmp
cltd
dec
insl
or
cmpsb
outsb
cmp
rcr
mov
and
adc
xor
imul
imul
lds
gs
jg
mov
mov
jo
mov
jle
into
sub
cmp
sbbb
or
fwait
jmp
jo
mov
gs
out
push
push
push
dec
cs
mov
push
les
aaa
imul
cmp
mov
mov
mov
movsl
adc
popa
pop
rcrb
cmp
jp
inc
inc
jl
test
std
mov
leave
int3
test
ja
cmp
int3
xchg
aaa
pop
cmpsb
popf
call
cmp
and
sub
shlb
out
nop
xor
jb
iret
xchg
push
cwtl
push
cmp
test
push
add
ds
iret
and
addb
mov
pusha
dec
pusha
dec
mov
push
and
out
int3
dec
repnz
fs
loop
inc
jnp
pusha
shl
or
adc
pop
mov
stos
push
ficomps
or
jl
into
call
scas
jnp
adc
jge
push
mov
inc
mov
inc
ret
inc
sti
shrl
out
add
mov
in
or
lods
xchg
call
repz
rcll
repz
jg
shrb
sahf
and
xor
mov
add
bound
out
sub
or
push
ss
jg
stc
ret
stos
shlb
je
cmp
inc
ljmp
sub
or
pop
repz
pop
lcall
dec
icebp
mov
cmp
es
jnp
inc
sbb
jge
outsb
mov
rorb
sarl
mov
test
loope
pop
dec
pop
pop
cli
pop
jb
add
clc
push
mov
and
mov
bound
incb
aaa
xchg
icebp
inc
sub
inc
or
inc
insb
es
pop
outsb
inc
dec
ret
push
rolb
repz
je
adc
dec
aas
mov
mov
leave
enter
jg
push
xor
jae
movlps
sbb
inc
sub
arpl
addr16
jb
fisubs
lds
lea
repnz
test
adc
fisubrl
push
fld
orl
addb
gs
adc
or
pop
mov
adc
dec
ss
pop
pop
mov
mov
inc
cmpsb
fnstsw
or
cmp
sub
js
mov
ss
dec
add
xor
js
popa
rolb
outsb
adcb
fsubrs
cmpsb
sbb
mov
fisubrl
jle
aad
mov
es
mov
cmpsb
mov
in
bound
jl
push
adc
or
data16
mov
or
dec
mov
jl
dec
in
sbb
incl
rolb
popf
enter
inc
inc
loopne
fdiv
imul
mov
adc
out
sti
and
inc
or
push
sub
inc
push
popa
add
cs
and
into
sub
pop
pop
mov
repnz
mov
xchg
pop
inc
enter
fidivl
movb
push
sub
jb
pop
sub
adc
mov
xchg
bound
cmp
sub
push
xor
testb
in
inc
add
xor
mov
jmp
enter
hlt
sbb
dec
pop
sbb
repnz
push
dec
aaa
fucom
inc
das
jl
sarb
pop
out
jl
cmp
xchg
xchg
cmp
dec
mov
stos
rorl
mov
rorl
cwtl
ja
inc
xchg
add
leave
aad
es
das
inc
aaa
push
sbb
xor
dec
sub
lret
add
loop
jb
dec
dec
push
cld
frstor
dec
es
neg
leave
scas
mov
in
or
loope
dec
jmp
mov
and
call
or
test
xor
loop
ret
mov
add
fadd
loop
repz
out
adc
jmp
stos
mov
outsb
sub
bound
lods
mov
xor
dec
pop
das
leave
mov
pusha
lea
mov
jle
mov
jns
imul
jbe
popf
add
sbb
jnp
dec
jnp
movsl
pusha
rcr
pop
jns
sbb
mov
ljmp
mov
dec
sbb
andb
out
push
mov
pop
sbb
mov
ja
jp
inc
notb
and
add
inc
add
dec
popf
cwtl
cltd
fcmovbe
dec
pop
insl
mov
mov
stc
and
dec
ret
mov
xchg
pop
push
test
scas
mov
sub
data16
push
jmp
orb
faddl
inc
fwait
push
adc
data16
loopne
and
mov
inc
stos
sarb
mov
call
ljmp
jnp
xor
push
repz
pop
add
lods
and
cmp
and
insb
sbb
mov
mov
pop
adc
pop
in
mov
sub
mov
mov
mov
mov
push
push
or
mov
fucomp
xchg
jl
xor
xchg
fsubl
inc
and
or
pop
adc
mov
or
dec
jmp
addr16
adc
mov
cmpsb
pop
push
mov
in
movl
dec
cmp
cmp
pop
incl
addr16
loopne
imul
adc
pop
sub
sbb
aaa
pop
aaa
movsl
cmpb
repz
or
test
push
or
adcb
dec
mov
mov
mov
in
repnz
bound
shrb
push
adc
mov
arpl
test
repz
jnp
jecxz
fwait
sar
mov
arpl
fsubrs
pusha
es
mov
repnz
sub
fwait
in
leave
or
mov
clc
cmp
push
pop
xor
xchg
adc
or
loop
ljmp
cmp
pop
dec
xchg
pop
mov
faddl
sub
sbb
fcomi
jmp
inc
mov
pop
xchg
imul
andl
divb
pop
mov
sbb
cmc
inc
push
inc
int3
fstps
dec
mov
js
xchg
sbb
mov
jecxz
or
add
cmpl
fadds
or
mov
enter
push
addr16
push
test
cli
mov
nop
lods
in
lea
gs
imull
mov
lret
std
mov
pop
inc
mov
mov
lods
dec
je
in
jecxz
aam
adc
xor
mov
fisubrl
hlt
jmp
hlt
sarb
pop
pop
inc
xor
xchg
and
scas
xor
int3
lods
add
das
das
sbb
mov
dec
inc
push
pushl
test
inc
push
push
lret
stos
xchg
dec
dec
adc
xchg
cld
ret
cltd
mov
in
test
inc
stos
outsl
inc
adc
cmpb
dec
and
dec
cmp
mov
test
xchg
jg
cld
sbbb
js
testb
mov
rcrb
test
cmp
inc
pushf
movsb
lods
ja
fstpl
loop
cs
inc
inc
sbb
mov
cmp
or
dec
daa
stc
inc
out
inc
andb
mov
fcom
neg
js
sub
ja
or
addb
push
ret
in
fcompl
cmp
cmp
mov
aas
inc
xor
pusha
adcb
mov
and
sbb
mov
inc
add
int3
dec
ret
shrl
xchg
mov
xlat
ret
faddl
fidivl
pop
inc
pusha
and
adc
push
das
push
push
or
inc
loopne
ss
enter
add
outsl
and
lret
insb
mov
sbb
add
or
add
jecxz
lret
mov
cltd
inc
mov
jmp
cmp
lret
cltd
or
dec
lret
or
adc
and
add
inc
movsb
es
mov
sub
dec
adc
push
inc
cmp
mov
pop
jmp
mov
pop
leave
jbe
push
loopne
imul
sub
leave
push
sub
add
loopne
scas
cwtl
les
mov
xchg
andb
subl
sub
sub
sub
enter
inc
push
inc
sbb
shr
mov
int3
mov
adc
cmpsb
roll
es
sub
xchg
push
mov
push
std
mov
imul
popa
xchg
xor
and
stc
or
xor
push
and
loopne
roll
cld
adcb
pop
inc
ja
ljmp
flds
jns
jmp
mov
push
shl
inc
dec
cmp
hlt
clc
sbb
sub
mov
in
sbbl
addb
xchg
idivl
inc
je
repnz
sub
push
scas
pop
sub
andl
roll
jbe
xchg
aas
js
push
loope
test
inc
cmp
lahf
int
add
mov
fcomps
lea
arpl
or
test
loopne
and
adc
popa
mov
add
or
enter
cmp
es
fisttps
mov
ror
stc
push
mov
cmpsl
push
jge
fildll
pmaxub
and
mov
xchg
add
fnstsw
adc
mov
jbe
mov
push
int
je
push
incl
sbb
inc
ss
mov
insl
dec
and
lret
shlb
int3
xchg
sbb
insl
or
stc
xlat
mov
jmp
mov
push
enter
out
cli
jecxz
or
pop
mov
sbb
out
push
mov
or
fimuls
xchg
adc
dec
adc
cmp
add
cmp
sub
fdivl
dec
mov
dec
push
pusha
bound
jmp
pop
fldt
or
mull
push
mov
xor
pop
into
ror
xor
ds
mov
push
imul
mov
mov
cmp
jae
jmp
lret
sub
dec
out
mov
jecxz
pop
mov
xchg
mov
sbb
adc
call
pop
or
leave
cmp
jne
cmp
pop
and
shrl
or
movl
stos
mov
pop
ret
jae
imul
lahf
pop
icebp
sbbl
loop
les
movsl
mov
pusha
mov
or
push
js
sbb
fisubl
pop
lret
out
dec
dec
int3
stos
xor
dec
inc
or
xor
cmp
sbb
push
rorb
add
xchg
add
mov
add
rcrl
enter
gs
sub
jnp
add
les
xchg
push
pop
mov
cmpsb
mov
push
aam
mov
dec
add
aas
mov
fucomip
push
push
loopne
lea
dec
mov
add
into
jae
rcl
mov
gs
dec
inc
xor
or
fdivl
outsl
ucomiss
pop
dec
xchg
mov
xchg
jge
pop
dec
mov
pop
rcll
enter
in
jae
dec
xchg
cmp
cmc
xchg
outsl
sbb
xlat
add
dec
rclb
test
jb
jb
clc
pop
cmc
outsb
inc
dec
nop
push
ljmp
adc
add
push
adc
add
xor
shlb
sbb
mov
sub
ljmp
out
dec
adc
jo
ret
push
std
gs
nop
lret
lea
xchg
cmp
dec
scas
or
movsl
insb
xchg
jns
fidivrs
inc
xchg
cmp
mov
push
aam
inc
data16
insl
fcompl
insl
dec
ret
mov
cmpsb
mov
out
jns
pop
mov
sbb
xlat
rol
das
popf
inc
mov
in
jnp
ja
sub
gs
jbe
ret
stc
mov
push
jmp
push
adc
pop
lds
jg
pop
push
xchg
test
add
popf
adc
add
add
xor
pop
adc
add
fwait
lret
inc
pusha
jnp
push
jb
pop
and
mov
jb
lods
popw
sbb
mov
inc
das
aaa
or
dec
jne
sbb
jnp
in
pusha
ss
inc
or
test
loope
stc
cmpb
add
out
sub
xlat
fucomp
jg
dec
push
fcoms
enter
inc
pusha
pusha
xor
or
cmpsb
push
push
jg
sub
add
mov
mov
sub
shlb
or
add
cmp
loop
push
cmp
nop
fs
jl
flds
push
cli
add
movsb
xor
sbb
loope
mov
mov
pop
mov
in
ljmp
lcall
xorb
or
jge
pop
jecxz
and
ficomps
mov
dec
add
fsubs
test
mov
add
jo
cmp
movsb
sti
cmp
or
lret
pop
adc
pop
fidivrs
ret
inc
pop
jp
xlat
andl
sub
jl
in
stos
add
int
in
pop
ficompl
andl
jbe
mov
cmp
data16
mov
dec
sahf
mov
cmp
sub
aaa
out
fmull
and
lret
dec
icebp
les
mulb
aaa
jne
int3
into
push
mov
dec
mov
test
aad
loope
xchg
xchg
dec
cmp
fcoml
push
test
dec
movsb
ficompl
and
jno
jo
cmp
cmp
pop
mov
arpl
xor
mov
mov
lds
jmp
cmpsb
push
loopne
je
pop
or
ud2
add
mov
dec
pop
pop
fs
cmp
aas
push
xor
in
and
insb
and
mov
or
mov
rcl
inc
or
inc
fdivl
les
push
sub
sbb
clc
or
call
pop
pop
and
mov
fimull
dec
xor
repz
and
sub
fstpt
fnsave
loop
movsbl
push
inc
divl
cmpsb
and
jnp
lret
inc
push
int
repnz
sbb
xchg
data16
scas
mov
and
dec
out
ljmp
sub
stc
fisttps
pusha
lret
and
xor
aaa
jnp
enter
dec
adc
fimuls
insl
in
in
jl
jg
pop
cmp
dec
mov
icebp
test
dec
add
fcoml
xchg
or
lahf
mov
dec
test
negb
ret
cwtl
sbb
lcall
or
jecxz
inc
dec
sub
pop
xor
lds
sbbl
cmpsb
fdivl
adc
add
movsl
pop
arpl
adc
lods
mov
dec
mov
push
sbb
cmp
stc
dec
sbb
stos
int3
rol
jae
mov
mov
out
cmpsb
xchg
pop
hlt
scas
adc
jb
jbe
vmovlps
jge
pop
inc
imul
lret
es
leave
cmpl
push
ffreep
or
repz
mov
sub
movsb
jmp
mov
pop
cmpsb
xor
push
dec
loop
or
sbb
js
enter
jb
jae
lock
test
arpl
cs
sbb
inc
and
ljmp
push
jg
sbb
jecxz
xor
ss
add
mov
adc
mov
xor
jle
xchg
lods
sahf
jnp
test
nop
ljmp
imul
popf
ljmp
or
pusha
outsl
scas
daa
pop
add
adc
lock
roll
add
lret
push
shlb
jnp
pusha
call
mov
outsb
in
lcall
gs
xchg
adc
dec
push
fwait
pop
pop
push
add
pop
sti
add
clc
or
sub
mov
stc
add
fsubrs
fadd
aas
and
push
inc
pop
mov
loopne
outsb
add
xchg
sub
lret
jp
xor
es
and
fnstcw
inc
cmp
sbb
push
push
in
fwait
fs
repnz
loope
mov
adc
pop
sub
cmp
cli
mov
aad
dec
push
fistl
mov
daa
inc
ljmp
lahf
inc
mov
add
fisubl
add
add
or
ljmp
inc
mov
sbb
jo
andnps
bound
popa
test
pusha
outsb
gs
mov
inc
loop
lahf
jae
scas
xor
sbb
aam
rolb
lret
mov
dec
orb
mov
inc
idiv
and
inc
push
mov
jecxz
mov
dec
jmp
cmpsl
adc
inc
fldt
jae
stos
inc
sarl
das
cmc
pop
ret
movsb
jns
cmpsl
gs
cli
and
ljmp
shlb
ss
mov
stc
hlt
imul
ljmp
cmp
in
aas
pop
lcall
cmc
outsl
rorl
adc
jmp
nop
mov
cmc
shlb
test
xor
test
jb
mov
sbb
test
imul
pop
dec
or
dec
sbb
sub
out
mov
xchg
or
mov
or
mov
cmp
dec
mov
icebp
dec
cltd
sbb
arpl
xor
lcall
in
pop
inc
pop
sub
xchg
sarb
adc
push
negl
stc
aas
enter
dec
xor
mov
test
xchg
ret
sbb
push
test
pusha
sbb
and
scas
adc
imul
jmp
add
test
cmpsb
imul
icebp
fmull
in
and
dec
adc
stos
push
xor
jae
data16
mul
inc
outsb
push
push
inc
xchg
inc
sahf
ja
jecxz
jo
clc
dec
cmp
ret
arpl
push
mov
popf
jge
fildl
sbb
scas
in
cs
cld
cld
in
mov
add
sahf
push
xchg
adc
dec
mov
pusha
mov
jne
push
cmpsb
pop
outsl
andl
fisttpll
dec
dec
pop
fidivl
lock
lahf
daa
xlat
pop
fcoms
loope
sahf
test
inc
dec
jg
and
dec
add
sahf
pop
les
lds
gs
add
shl
sub
jmp
out
out
in
fidivl
leave
mov
pop
pop
push
xor
mov
dec
and
dec
xlat
mov
mov
dec
jp
pop
mov
pop
popa
and
sub
xchg
and
pusha
mov
mov
dec
pop
lods
ljmp
inc
pop
push
cmp
mov
xchg
mov
pop
mov
in
inc
pop
sub
fwait
sarb
sbb
daa
ret
addb
mov
fdivs
sub
aad
pop
fsubrp
cmp
sbb
gs
dec
cmp
add
cmp
sub
test
fdivrp
mov
inc
pop
mov
loopne
aam
rolb
mov
or
ja
pop
jns
stc
adc
lods
mov
test
xor
std
or
cmc
inc
jmp
inc
mov
and
pop
imul
mov
sub
clc
xchg
adc
sbb
mov
mov
shll
inc
les
push
and
mov
xor
pop
movsb
dec
add
ret
out
lret
lcall
push
dec
ljmp
sub
add
jmp
shlb
lahf
adc
jg
aam
mov
pushf
xchg
rolw
cmp
sti
inc
fbld
inc
and
movl
rcl
add
je
dec
and
mov
outsb
call
sbb
add
mov
jbe
mov
into
ret
and
jno
movsl
std
aas
and
lods
jnp
outsl
sbb
aas
and
dec
in
dec
jmp
sbb
dec
inc
inc
fwait
mov
jo
andl
out
sahf
xorb
dec
bswap
mov
dec
cs
jg
int3
dec
dec
mov
adc
dec
jecxz
ret
mov
lahf
mov
pop
dec
rcrl
cmc
into
mov
adc
js
push
push
ja
dec
psubw
mov
stos
or
inc
pop
mov
das
add
pop
mov
and
popa
mov
dec
and
sbb
and
mov
push
push
fldcw
sub
mov
jae
add
imul
sub
leave
cmp
add
rclb
fs
into
xchg
lret
popf
or
pop
or
mov
pop
mov
or
inc
rcrb
data16
mov
js
xor
mov
mov
outsl
sub
outsl
shrb
xchg
inc
faddp
mov
pop
in
mov
cmp
nop
sbb
lods
sbb
mov
cli
dec
dec
aaa
mov
mov
clc
addr16
dec
adc
stc
xlat
jg
inc
push
lock
in
push
mov
inc
pop
movntps
xchg
lret
out
ja
repnz
and
cmpsb
xchg
mov
mov
das
rclb
in
and
or
xchg
mov
insl
dec
cli
outsb
sub
push
or
movsl
imul
daa
inc
or
push
add
clc
adc
in
inc
mov
mov
mov
inc
imul
and
stos
cmc
hlt
pop
pop
lock
out
adc
ficoml
jmp
clc
cmpsb
or
mov
jae
adc
fisubrl
mov
dec
cli
dec
inc
popa
sub
adc
add
imul
push
lahf
sbb
fcmove
les
bound
test
cld
mov
fcmovnbe
cltd
xlat
cmp
sarl
rorl
cmpsl
std
inc
loope
sbb
sbbb
pusha
inc
cmp
pushf
aas
pusha
fisttpll
or
xor
cwtl
in
loopne
add
movsl
vorps
pop
fs
add
and
or
repnz
jbe
push
dec
dec
adc
popa
ror
add
cld
inc
mov
gs
fisubrs
inc
inc
aad
mov
neg
shrl
frstor
xorl
shrb
sbbb
rolb
arpl
mov
add
cli
nop
lret
sti
shlb
pop
push
stos
add
andl
sahf
loopne
lds
and
mov
out
outsb
add
loopne
in
pop
and
add
xor
adc
sub
sub
mov
jle
cmp
push
mov
rcll
lret
dec
inc
cli
mov
mov
insb
mov
fdivs
pop
imul
dec
sti
inc
shrb
in
cmp
jecxz
ljmp
mov
or
pop
mov
or
int3
push
ret
cmp
dec
jae
in
adc
in
rclb
flds
shlb
int3
test
dec
in
aad
sub
dec
dec
xor
rol
lea
mov
ret
or
lds
repz
lret
es
sub
cs
adc
jne
inc
inc
adcl
in
cmp
into
jnp
aas
dec
lds
mov
lret
dec
sub
push
jo,pt
push
jo
sarl
stos
add
mov
or
lret
mov
pop
jp
pop
aam
ja
ja
dec
mov
repnz
pushf
add
in
push
imul
insb
sbb
rorl
sbb
dec
sub
cmpl
stos
insl
mov
into
jmp
cmp
mov
leave
repnz
or
dec
jne
sbb
repz
rcl
lahf
fiadds
dec
or
repz
mov
clc
popa
xor
inc
xor
pop
cmpsl
fdivrl
adc
inc
je
add
sbb
les
imul
testl
inc
ds
pusha
sub
push
test
lcall
iret
xchg
adc
push
cmp
and
inc
jecxz
push
mov
dec
aaa
sub
in
loopne
fildll
dec
xor
cmp
pop
into
inc
mov
push
repnz
sti
dec
inc
loop
mov
inc
mov
jle
in
stos
mov
pop
or
mov
add
xchg
sub
leave
pushf
scas
jbe
enter
mov
adc
inc
or
push
cmp
lahf
aad
xor
dec
enter
lahf
cmpsb
and
std
sub
or
pushf
pusha
popa
pop
int
insb
out
add
sbb
inc
nop
cmp
push
orb
mov
cmp
pop
or
add
in
xor
fisubrs
test
mov
imul
cmp
push
test
loop
jmp
pop
adc
sub
dec
cltd
fidivrs
orb
jbe
cmc
ja
incl
mov
mov
mov
and
enter
sub
in
cmp
dec
jne
xchg
pop
and
stc
jb
mov
mov
or
aad
movsb
sub
add
or
mov
or
push
inc
mov
test
imul
add
dec
sub
lahf
sub
inc
push
pop
inc
mov
and
gs
push
dec
jo
ret
mov
mov
lahf
fdivrp
push
test
jnp
push
mov
enter
leave
addr16
push
or
sahf
push
sbbl
push
enter
sub
shlb
jo
ret
stc
jnp
inc
push
inc
lret
nop
pop
xor
push
sbb
test
rcrb
loop
loopne
mov
popf
dec
mov
pop
inc
aas
dec
and
test
adcb
dec
add
jae
imul
push
leave
and
or
loope
jmp
jg
js
in
inc
cmpsl
push
dec
rorb
lret
pop
inc
jo
xor
mov
sub
out
and
or
dec
jecxz
rcl
dec
cmpsb
pop
sbb
test
jecxz
aas
loope
and
xor
loop
dec
sbb
lret
ss
jmp
sysexit
and
cmpb
mov
and
in
addl
add
sub
push
push
jle
pusha
mov
cmp
gs
xchg
or
out
fildl
loope
in
dec
daa
test
inc
sub
or
loopne
add
mov
sahf
inc
rclb
push
sbb
les
popf
push
cmp
outsl
dec
dec
mov
inc
xor
fs
add
stos
gs
adcl
cmp
push
out
andb
or
xlat
pop
insb
sahf
repnz
dec
out
mov
dec
push
scas
ds
add
lock
mov
xchg
iretw
xchg
lds
add
cmp
int
out
or
adc
call
xchg
aad
push
mov
clc
jle
adc
scas
aam
fimull
ret
push
ds
scas
cmp
incl
lcall
mov
leave
mov
repz
dec
add
xor
xor
movsl
mov
test
les
sbb
adc
inc
adc
adc
scas
xor
mov
scas
mov
mov
cmpsb
fstl
clc
add
cmp
mov
xor
in
in
pusha
or
sbb
or
pop
inc
cli
stos
aam
push
popf
jmp
sahf
fadd
jmp
in
pop
mov
fabs
inc
pop
gs
sahf
fnstsw
cmp
loope
mov
ret
fcoml
dec
sbb
mov
push
inc
jmp
xchg
sbb
inc
and
rclb
mov
lret
sub
clc
jno
subl
add
add
adc
add
psubusb
xor
std
xchg
xor
jmp
ljmp
scas
les
ret
push
push
mov
xchg
movsb
dec
pop
mov
add
leave
cmp
inc
leave
cmp
rorl
daa
insl
cmp
sub
mov
sahf
inc
popa
inc
rolb
in
lods
repz
inc
sahf
xchg
rcll
jg
fldenv
hlt
pop
je
dec
lahf
bound
not
lahf
fiadds
and
out
push
sub
fiadds
popa
jbe
or
out
mov
mov
push
jae
fcoms
dec
sub
jmp
inc
jne
subb
add
and
cmp
pusha
xchg
mov
dec
dec
or
xor
into
gs
shlb
lret
data16
mov
xchg
movsb
out
lea
push
sub
and
mov
mov
fcmovu
in
fstps
dec
popa
push
jle
mov
and
xor
faddp
into
inc
rcl
loop
pusha
je
dec
push
stos
jecxz
jno
jmp
fs
dec
aad
ja
mov
sub
pusha
data16
jns
cmp
inc
or
rolb
shl
dec
and
xor
inc
inc
js
add
inc
xchg
imul
gs
pop
inc
mov
comiss
sub
call
pop
inc
fisubrl
orl
lock
inc
and
cmpb
outsl
rolb
int
icebp
dec
insb
sahf
sbb
movl
jmp
movsl
int3
jp
and
add
mov
mov
cmpsl
leave
sub
icebp
aad
test
inc
and
loopne
loop
loopne
pop
stos
xlat
pop
add
clc
sub
shll
jmp
adc
cmpsl
das
or
lret
push
loopne
dec
mov
cltd
add
pop
mov
loop
jns
pop
xor
jg
sub
das
inc
xor
sahf
mov
pop
negb
xchg
dec
clc
lcall
and
jnp
jns
sub
sbb
sbb
dec
dec
inc
mov
xchg
add
sbb
repnz
stc
dec
cmp
push
repz
dec
dec
bound
push
inc
scas
in
sti
xor
fsubrl
mov
inc
leave
dec
cmp
push
int
sbb
lret
mov
mov
fucomi
lahf
pop
sub
bound
mov
test
inc
test
or
jecxz
mov
roll
sub
pop
and
push
cmc
ljmp
arpl
rcrl
mov
fdivrs
cmp
addr16
sbbl
call
and
mov
push
int3
out
sti
aas
jb
dec
pusha
mov
jge
or
inc
inc
cmp
push
iret
es
add
loop
rclb
shll
aas
fisubrl
jnp
pop
cli
jp
aas
shr
add
mov
add
sub
dec
insb
cmp
stos
into
or
sub
sbb
hlt
inc
dec
loop
bnd
jne
xor
xor
mov
cltd
imul
add
dec
insb
inc
jmp
and
pop
add
arpl
sbb
push
mov
mov
inc
cmp
push
sbb
mov
in
imul
inc
mov
loopne
sti
imul
or
add
mov
push
pop
xchg
loop
inc
imul
mov
repz
leave
cmp
addr16
andb
ret
inc
lret
ret
movsb
mov
enter
and
mov
inc
leave
or
inc
das
sbb
cwtl
sub
xchg
add
and
ret
pop
pop
jmp
in
lret
inc
pop
stos
jl
enter
mov
ret
int
fidivrl
or
mov
cmc
adc
dec
daa
inc
cmp
lret
daa
iret
dec
or
mov
push
mov
cmp
jmp
xchg
loope
mov
and
mov
rorb
jb
sub
or
inc
dec
jnp
mov
call
dec
push
mov
mov
repnz
push
rol
mov
jnp
dec
cmp
clc
lret
or
mov
lock
dec
mov
cmp
in
sub
rolb
dec
scas
fwait
andl
inc
jp
sbb
int3
mov
cmp
pop
or
dec
lods
repz
test
cmp
push
lcall
pusha
push
cmpsb
imul
cmp
sub
imul
insb
xor
shrb
in
stos
es
into
nop
inc
sbb
pop
rcrb
icebp
andb
pop
sub
pop
mov
mov
pop
mov
je
adc
inc
in
dec
or
inc
fsubr
or
mov
mov
xor
cs
jecxz
cmp
jae
xchg
mov
subb
rorl
pusha
xchg
jmp
dec
mov
push
imul
scas
sbb
inc
dec
lods
push
addl
popa
lret
xorl
inc
pop
das
insl
add
ss
ds
inc
xor
cmp
shrb
ficomps
ljmp
js
inc
and
aas
cmp
mov
xor
sbb
call
and
pushw
or
lret
ljmp
add
inc
dec
adc
mov
mov
dec
bound
sbb
std
mov
jnp
test
aad
lods
xchg
ss
dec
pop
mov
mov
sarb
testb
loopne
lods
mov
mov
lahf
dec
mov
icebp
fisubrl
pop
inc
inc
and
cld
enter
sbb
dec
cmp
and
mov
stc
call
inc
push
cld
negl
mov
bound
test
rclb
out
test
mov
arpl
idivl
outsb
or
inc
jmp
push
das
push
fdivrl
sbb
xchg
mov
cmp
pop
and
adc
fistpl
mov
mov
inc
in
loope
mov
inc
inc
enter
stos
cld
mov
push
add
adc
dec
lds
and
addr16
jge
je
das
pop
push
sbb
push
mov
sub
mov
push
stos
mov
scas
mov
scas
outsl
or
lcall
pushl
jmp
gs
cmp
and
and
sub
mov
pushf
lods
mov
add
jmp
sarl
add
int3
rol
pop
xchg
ds
xor
iret
arpl
dec
mulb
inc
jno
mov
addb
push
or
test
mov
cmp
pop
sub
jecxz
sbb
adc
inc
mov
inc
push
pushl
test
clc
cmc
jo
in
loopne
cld
out
mov
mov
adc
mov
xchg
jmp
pop
sub
mov
fsubrl
sbb
push
es
jmp
or
xchg
imul
push
icebp
pop
dec
rolb
jb
mov
xchg
cmpsb
jbe
xchg
inc
fcmove
xor
push
loope
cmpsb
adc
xchg
cmp
andb
fwait
mov
sub
shr
inc
inc
mov
ja
ljmp
lds
repz
mov
int
mov
repnz
hlt
xchg
jge
sub
in
repz
mov
std
int3
popa
and
xor
mov
cmpsb
mov
sub
cmc
aad
loopne
pop
fs
mov
xor
popa
lret
pop
mov
loopne
leave
pop
loop
int3
adc
dec
xchg
std
mov
jg
pop
jae
in
inc
das
cmp
ja
or
fiaddl
repnz
mov
push
jnp
popf
or
ret
inc
outsl
and
and
jo
inc
xor
fsubp
enter
cs
daa
xlat
nop
lahf
lcall
aam
roll
pop
arpl
stc
mov
adc
add
aad
add
mov
jno
mov
push
jmp
out
pusha
sbb
repz
xchg
cmp
push
mov
mov
lret
mov
xor
xchg
js
push
dec
jecxz
dec
iret
popf
jp
push
leave
mov
cmp
adc
popa
push
push
jg
xor
push
push
jns
xor
pop
dec
insl
rcrb
cmp
shll
cltd
ljmp
dec
std
loop
fbld
enter
jmp
movl
dec
in
push
jmp
add
xor
ror
mov
cwtl
mov
mov
jbe
jmp
decl
pop
test
repz
push
arpl
shr
call
jmp
cwtl
sub
aad
xchg
test
mov
fstps
xchg
xor
popa
lea
rclb
imul
cmc
sbb
mov
xor
cmp
aas
mov
leave
inc
dec
add
roll
jns
ret
popa
dec
inc
les
test
dec
jg
cs
dec
in
adc
clc
or
xchg
and
mov
gs
push
mov
shlb
inc
fisubl
or
in
in
leave
mov
mov
push
sbb
sub
fmull
inc
pop
pop
out
loope
pop
dec
jae
inc
sti
call
repnz
insl
rcr
xor
push
sbb
jae
inc
lahf
dec
dec
push
ret
jg
insb
pop
std
add
add
push
push
out
ffree
pusha
push
xor
push
out
sub
sbb
cmc
loope
fucom
or
jns
imul
int
mov
inc
mov
push
shlb
repnz
loope
cmp
push
scas
pusha
cmp
sahf
mov
xchg
inc
sti
mov
sar
xor
stos
cmp
inc
ljmp
cmp
shrb
sub
repnz
xor
push
mov
std
pop
rclb
iret
add
in
aaa
call
pop
push
inc
js
sub
bound
xorb
adc
pop
sub
inc
dec
cmp
fidivl
cmpsb
xchg
stos
push
loop
in
cmp
push
sub
insb
push
push
sahf
jno
sbb
xchg
lea
movhlps
movsb
xchg
cmp
dec
mov
or
gs
cwtl
mov
push
xor
mov
imul
mov
push
and
and
mov
sub
push
adc
mov
mov
push
stos
jnp
xlat
mov
jb
mov
and
mov
lds
or
stc
jl
xchg
dec
sahf
idivb
xchg
mov
pop
pop
mov
pop
adcb
jl
popa
adcb
inc
outsl
jp
mov
dec
faddp
mov
sbb
cmp
push
jg
pop
mov
mov
hlt
inc
sbb
xor
movl
mov
js
adc
imul
mov
leave
imul
xor
jmp
or
jnp
jl
add
ja
inc
cmpsl
adc
push
cmpsl
cs
sub
xor
sahf
xchg
leave
std
lods
jl
sbb
jp
push
call
adc
sub
pop
enter
or
js
sarl
xorps
xor
cmpsb
in
ja
cmp
jl
xor
mov
fldenv
loopne
cmpsb
mov
inc
mov
sbb
movsb
pop
sarb
xchg
es
dec
inc
pop
subb
lret
mov
leave
and
cs
mov
into
rcrb
pop
in
scas
daa
pop
ljmp
sub
push
mov
dec
inc
mov
sub
out
mov
or
cltd
jge
in
pop
add
fiaddl
push
pop
popf
dec
jb
xor
cmpsb
xor
dec
rorb
inc
fsubrl
jb
das
pop
lahf
pop
lds
cli
sub
mov
jo
or
pop
ss
call
lods
mov
sbb
ljmp
loop
inc
pop
shl
dec
clc
inc
cmp
sti
sbb
mov
pop
pop
aad
adc
mov
dec
sbb
pop
shll
inc
mov
pushf
jmp
cmp
outsb
sub
fsubrp
fwait
add
mov
inc
or
enter
mov
pop
call
leave
dec
je
sub
push
fisttpll
pop
mov
jne
xchg
dec
add
inc
xchg
cld
fstpt
pop
sbb
adc
and
jge
sbb
lea
dec
ja
test
xchg
add
shrl
in
and
repnz
cmpsb
inc
mov
sahf
out
xchg
dec
lret
cmc
pop
sbb
mov
mov
pop
out
mov
or
push
imul
daa
fwait
imul
mov
mov
pusha
aaa
sub
sahf
gs
mov
sub
inc
jbe
jmp
xor
call
lods
push
sti
scas
pop
mov
adc
jo
ficoml
and
fs
pop
in
test
sub
sbb
mov
sahf
arpl
pushf
fistps
cmc
xor
repnz
mov
sub
dec
and
arpl
jns
jnp
mov
icebp
fwait
aas
mov
mov
sbb
jmp
sbb
mov
pop
sbb
es
pop
pop
and
xor
dec
hlt
sbb
push
mov
dec
lret
popa
imul
and
stos
cmp
rol
jae
push
lods
arpl
pop
xchg
pop
mov
cmc
or
push
add
push
fwait
js
rol
xchg
mov
test
jle
dec
add
xchg
inc
xlat
mov
stc
lcall
push
clc
fists
dec
push
cwtl
or
mov
cwtl
mov
rcl
fdivrs
pop
addr16
dec
dec
leave
add
loopne
lds
xchg
dec
mov
jbe
add
leave
cmp
ficomps
sbb
imul
inc
cwtl
out
je
jecxz
aaa
pop
cmc
fcompp
sbb
pop
mov
dec
cwtl
cmc
jmp
mov
dec
dec
dec
inc
inc
movb
pop
inc
jb
inc
ficoms
push
inc
ret
hlt
enter
shll
push
emms
lret
push
sub
and
pusha
mov
xor
cmpsb
adc
push
mov
in
xor
lahf
xchg
inc
adc
pop
inc
pop
pop
mov
mov
stos
pusha
jnp
add
xor
mov
sub
pop
inc
fcmovb
push
cmp
push
lcall
rol
mov
mov
add
mov
xlat
test
pop
stos
push
fstpt
xchg
cmp
movsl
lret
or
movsl
aas
pop
call
dec
outsb
cmp
rcl
nop
js
lahf
xchg
stc
sbb
out
pusha
and
dec
push
adc
push
aam
lahf
mov
les
fwait
shll
inc
gs
mov
mov
ds
jmp
sub
xor
dec
fs
pushf
cmpsb
cmpsl
das
in
out
cs
or
mov
add
ljmp
cmpsb
dec
mov
jae
jo
and
add
and
lods
jne
test
ror
adc
lods
mov
or
cwtl
lcall
test
inc
enter
sub
add
stc
add
inc
daa
les
sub
out
loopne
lock
xor
sbb
aam
test
movsl
jg
sti
dec
mov
push
cmc
push
pop
push
insb
cs
lock
movsb
mov
ds
add
dec
les
mov
add
sub
inc
addr16
inc
cmp
stos
jecxz
cld
test
dec
inc
push
enter
cmpsl
leave
push
in
in
outsl
enter
nop
imul
sbb
idiv
cmc
and
or
jbe
lcall
shlb
push
inc
dec
xor
sub
subl
orb
push
dec
jecxz
mov
dec
call
mov
in
dec
mov
push
mov
jne
ret
jp
push
push
push
mov
popa
cmp
mov
pop
cwtl
mov
movb
add
and
and
push
cmp
adc
dec
aam
addr16
cwtl
and
adc
cmpsl
adc
fisubrs
inc
call
jb
dec
or
or
inc
mov
mov
imul
adc
dec
pusha
lods
push
es
fidivrs
pushf
daa
xor
xchg
inc
add
push
and
jge
repnz
sub
insb
push
aas
shl
ds
mov
jnp
inc
and
jp
dec
cmp
xlat
xchg
pop
flds
iret
push
inc
and
inc
adc
mov
mov
test
test
cli
and
stc
imul
addl
sbb
les
daa
push
and
fwait
push
into
lods
sbb
xorl
pop
mov
xor
fidivs
orb
push
mov
fimuls
sbb
imul
pop
or
inc
mov
ljmp
orb
xchg
movsl
fwait
loope
fsubl
or
mov
fsubs
push
pop
loope
add
ljmp
jl
addl
xchg
incl
xchg
stos
push
mov
lea
out
xchg
mov
dec
test
rolb
mov
pushf
xchg
test
cmp
dec
fmuls
jl
mov
add
and
dec
mov
inc
repnz
lods
inc
sbb
mov
mov
mov
pop
out
mov
cmpsb
insl
mov
mov
fimuls
clc
sub
aas
add
test
enter
mov
cmp
dec
sbb
inc
shl
and
jnp
push
pushf
sub
push
fldenv
inc
fsubr
inc
mov
mov
ret
mov
cmp
lret
ljmp
or
rcrb
faddl
and
or
dec
push
push
cmp
inc
push
add
daa
mov
dec
lret
dec
es
dec
xor
movsl
sbb
jmp
pop
xchg
pop
mov
fsubl
mov
jae
iret
popf
pop
stos
pop
mov
pop
leave
add
mov
cltd
push
inc
js
movsb
and
mov
sub
pop
ja
rcrl
cmpsb
sbb
inc
add
inc
cmp
in
imul
jb
pop
xchg
dec
and
pusha
push
out
add
mov
cld
test
lcall
mov
and
inc
stos
mov
sub
jecxz
cld
or
pushf
sub
lahf
bound
in
ss
adcl
iret
and
or
adc
ljmp
jbe
dec
and
stos
cmp
sub
mov
push
mov
mov
fnstenv
ljmp
enter
fimull
out
cwtl
dec
add
ret
pop
and
jne
inc
and
cs
add
pop
lret
and
push
mov
leave
sbb
in
xor
cmp
jne
or
jecxz
add
sbbb
inc
adc
enter
inc
aas
pop
bound
dec
xor
ret
push
jb
dec
or
push
cmp
mov
outsl
sub
cwtl
and
sbbb
jecxz
adc
mov
dec
pop
pusha
mov
out
fisttpll
dec
push
pop
das
dec
fs
fdivrl
push
adc
dec
push
xor
inc
jp
sbb
loop
and
mov
mov
add
jns
pusha
push
mov
lods
add
dec
jecxz,pn
aad
dec
mov
je
insb
xchg
xor
cmp
push
mov
sub
std
das
cld
mov
cmp
aad
js
mov
pop
insl
mov
sti
pop
fs
add
xchg
mov
add
sub
pushf
inc
xor
in
push
das
fldl
out
pop
and
mov
jmp
or
jb
jnp
stos
gs
mov
clc
pushf
dec
cltd
aam
dec
shlb
xor
jp
out
sbb
sub
sub
pop
push
mov
cmp
and
lds
test
xorb
cwtl
adcb
cmp
in
push
cmpsb
aam
xchg
pop
xchg
dec
cmp
jnp
or
sbb
stc
push
sti
xchg
fidivl
mov
xchg
pop
pop
cli
dec
jnp
mov
jmp
mov
pop
add
gs
mov
adc
mov
inc
pop
lahf
and
push
inc
xor
adc
push
or
mov
dec
leave
fwait
vpslld
jb
dec
out
mov
cmp
cmpsb
xchg
pop
xlat
cli
jb
mov
ljmp
push
and
addb
or
ds
cli
das
leave
cld
sbb
les
inc
faddl
sbb
lods
lcall
stc
std
pop
push
repnz
push
cmp
inc
pop
stc
mov
dec
mov
sbb
inc
mov
lahf
cmc
mov
out
aaa
mov
cld
mov
loopne
lcall
test
ret
jmp
sti
stos
push
pop
cmp
dec
adc
dec
cmp
push
leave
jg
in
stc
adc
and
fs
lods
push
fbld
fsubl
jecxz
push
inc
jmp
das
pusha
mov
pop
loope
stos
pop
ss
add
sti
leave
pop
jp
cs
or
bound
daa
test
lock
mov
out
addb
in
inc
bound
faddp
stos
leave
inc
pop
lds
add
je
or
test
mov
mov
cmpsl
mov
pusha
xchg
xor
test
push
cmp
dec
repz
jnp
ret
push
pop
or
repnz
xchg
mov
ffreep
sub
cmp
or
fisttpll
add
sahf
lcall
xor
ljmp
xor
add
xchg
and
inc
xchg
push
push
and
or
xor
cwtl
jae
test
daa
mov
lods
out
xor
xor
flds
mov
inc
push
call
or
stos
sub
andl
pop
dec
fs
mov
movsb
add
and
sbb
cmp
inc
jae
pop
xor
jge
rcr
adc
cmpsb
test
xor
mov
cmp
adc
orb
daa
js
cmc
dec
pop
cli
cmp
cmp
and
inc
sbb
insb
pushf
fs
pop
push
and
cli
fdivrl
pop
gs
mov
inc
fxch
je
push
inc
push
pushf
mov
sti
enter
loope
js
sbb
pusha
call
adc
sub
cmp
mov
outsb
sbb
pop
scas
ficoml
das
mov
mov
popf
mov
mov
adc
leave
sbb
fistps
xor
adc
dec
inc
mov
mov
lcall
leave
xchg
jns
fsts
inc
in
ja
out
pop
fcoms
mov
and
adc
jg
loopne
out
xor
pusha
xchg
mov
jb
jg
or
cli
jb
or
push
in
add
in
add
cli
inc
dec
sbb
ljmp
fsubs
add
mov
dec
dec
push
jg
xor
int
jmp
xor
fldt
inc
ljmp
inc
pop
jge
add
jp
dec
pop
push
fsubs
mov
mov
fnstcw
scas
rcrb
inc
cmpsl
pop
push
fiaddl
pop
fwait
inc
mov
leave
sub
sub
dec
and
add
jno
cli
addr16
jo
push
fisttpl
roll
inc
jecxz
scas
repnz
sbb
fistpl
cmpsl
xor
mov
fstpt
in
mov
xchg
in
adc
jb
mov
cmpsb
inc
das
and
pop
aaa
rcrl
xor
nop
dec
pusha
pushf
clc
mov
mov
jmp
ljmp
cmpsb
out
dec
add
xchg
lods
insl
fwait
mov
ds
sarb
mov
je
push
stc
stos
sahf
fsubl
hlt
sub
push
leave
inc
flds
cli
mov
add
sub
or
mov
xchg
dec
inc
xor
fsubr
push
rcrl
cmp
adc
mov
inc
jnp
cmc
jle
psrad
loop
sbb
mov
les
lahf
pop
push
popa
inc
pusha
pop
inc
push
sub
cmp
sbb
sbb
mov
dec
push
inc
xorl
icebp
push
cmp
and
mov
add
sbb
leave
js
pop
lea
enter
mov
lods
stos
repz
loope
mov
and
jns
ljmp
cmp
jecxz
mov
xor
mov
jg
dec
aad
cmp
or
cmpsl
dec
dec
or
push
arpl
sbb
int
in
and
psubw
mov
and
push
cwtl
jmp
repz
inc
mov
sub
sub
in
loopne
inc
mov
cli
fidivs
mov
dec
mov
push
add
fdivs
jecxz
add
scas
pop
cmp
in
cli
xchg
aaa
adc
push
mov
enter
ljmp
xor
jne
mov
repnz
mov
movsl
imul
pop
cli
movsl
push
dec
loop
mov
out
mov
cmpsl
gs
jnp
jecxz
adc
es
dec
data16
mov
repz
sarl
jecxz
insl
insb
sub
movsl
adc
aam
lock
adc
mov
sbb
sub
popa
dec
ds
xchg
mov
xor
sbb
sbb
adc
enter
pop
pop
push
loop
cwtl
out
stos
sub
ljmp
mov
mov
popa
adc
xchg
sbb
add
inc
addr16
pop
mov
cmc
inc
ficoml
ficoml
fisttpl
and
xor
mov
dec
outsl
jne
repz
inc
pop
mov
lock
adc
dec
movsb
xor
iret
or
push
mov
lret
xchg
add
and
or
jg
dec
xor
fmull
pop
jecxz
jmp
jbe
iret
add
rcrl
jbe
imul
scas
ljmp
cmp
or
jo
xor
jge
mov
addr16
dec
push
push
xchg
xlat
test
sar
mov
inc
sbb
dec
sbb
paddsb
sub
in
mov
and
cmp
inc
pop
vmovaps
fisubrl
ret
in
stc
in
sbb
sub
cmpsb
jl
mov
mov
imul
jecxz
jmp
pusha
lret
jmp
mov
xor
push
stos
cmp
push
cmpsl
ljmp
nop
adc
mov
inc
push
out
lds
and
add
mov
lahf
pop
loope
add
pop
xor
js
dec
adc
out
cmpl
inc
add
lret
test
les
adc
add
mov
ljmp
or
and
mov
jae
xchg
xchg
mov
pop
popa
jae
int
stos
leave
loope
jb
fdiv
jmp
sbb
xchg
ficompl
jb
lock
lret
pop
shrb
inc
ljmp
push
daa
push
call
and
cmp
push
fcoms
fwait
push
pop
inc
lcall
mov
out
pushf
dec
push
cmp
add
movsb
jecxz
sbb
mov
or
sub
mov
gs
xor
xchg
orb
and
push
sti
lret
lret
xchg
cmp
cs
cmp
push
and
imul
jle
cs
pop
nop
icebp
outsl
lahf
pop
lods
daa
adc
in
add
rcrl
sbbl
xor
inc
pop
pop
popf
sub
in
jno
arpl
fcomps
imul
cli
mov
rcrl
shr
mov
repz
dec
pop
and
pop
ret
test
repz
js
xor
test
fisubl
pop
add
sub
das
push
ds
test
dec
pop
fistpl
les
sbb
popf
testb
push
inc
cmp
out
data16
dec
xor
adc
nop
rorb
pop
xor
push
add
shlb
xchg
and
dec
sahf
add
sbb
inc
pop
mov
jecxz
ret
enter
cmp
adc
mov
insl
jmp
xor
test
and
leave
fcoml
sbbb
orb
xor
xor
movl
mov
lds
aad
sbb
addb
dec
ret
lods
scas
push
inc
sub
gs
jo
push
xchg
pusha
push
cmp
or
mov
lock
cmp
pop
jecxz
not
push
fs
addl
inc
push
cmp
dec
fbld
bnd
mov
lcall
mov
jecxz
mov
adc
sub
stc
push
xor
int3
jb
call
leave
sub
sub
icebp
mov
sahf
push
add
mov
stc
pop
popa
lret
adc
bound
adc
sbb
pop
jae
loopne
shrb
in
mov
cld
icebp
mov
scas
mov
cmp
aam
pop
aaa
fcomps
fstl
sahf
ss
push
les
fstpl
js
inc
mov
jecxz
mov
mov
jno
imul
push
add
ds
pop
fs
in
enter
sbb
lds
or
add
dec
mov
mov
movsl
sbb
in
push
mov
adc
in
mov
in
stc
stos
pop
dec
adc
push
lret
inc
push
lcall
push
sbb
aad
jmp
roll
das
mov
or
stos
enter
lcall
inc
mov
ret
std
ret
mov
jae
aas
neg
and
fsubrs
movsb
rclb
xchg
gs
sbb
popa
jg
adc
shrb
faddl
jmp
je
leave
shll
mov
push
cmpsb
lret
in
adc
jmp
lods
mov
inc
xor
in
ss
daa
ret
inc
shlb
jno
sbb
cmp
in
cmpsb
lock
fdivrl
lahf
and
arpl
pop
test
ror
jbe
inc
lods
fisubrs
inc
in
cmc
lods
jge
int
push
fiadds
sub
enter
jg
sub
dec
add
push
shll
add
add
pop
pop
dec
fimull
pop
fdivrl
dec
fbstp
jno
sbb
dec
cmp
jb
ss
push
jae
inc
fisttps
sub
jg
cmpsb
pop
pop
imul
pop
cmpsb
inc
adc
pushf
ficomps
mov
sub
rcrl
pop
cmp
in
mov
add
inc
mov
mov
sub
xor
aas
fchs
fldt
pop
inc
mov
ficomps
mov
mov
inc
je
xor
mov
pop
push
popa
inc
and
fsubl
dec
fcmovne
addl
add
iret
pop
sbb
mov
aad
mov
out
rolb
bound
push
into
ljmp
sub
movsb
add
sbb
inc
sub
fs
inc
sbb
push
roll
imul
ret
add
sub
xor
call
mull
dec
dec
loopne
daa
fldt
push
cld
icebp
inc
mov
mov
mov
icebp
add
dec
out
or
jmp
out
rolb
pop
dec
ffree
shll
pmaxub
dec
pop
lds
jp
mov
in
adc
xor
hlt
cmp
and
fsubl
push
fisubl
push
dec
pusha
jg
dec
xchg
leave
inc
sbb
scas
jnp
cs
hlt
stos
ret
inc
sub
dec
or
fs
mov
lds
shrl
rcrl
lahf
outsl
or
stc
xor
adc
int
adc
inc
push
inc
iret
pop
xor
int3
push
cmp
mov
in
and
or
je
lret
aad
push
stos
sub
repnz
idivb
adc
mov
ja
repnz
pop
xor
jbe
test
into
aad
mov
jnp
push
or
test
sahf
push
pop
sbb
icebp
insb
jno
sub
imul
leave
leave
inc
movl
dec
movsl
movsb
rcrb
inc
add
xchg
popa
sbb
aaa
cmpsb
addl
mov
sub
push
imul
and
enter
adc
push
adc
cmp
pop
cmc
idivb
jge
flds
mov
mov
mov
cmp
or
int3
jb
cli
mov
pmaddwd
dec
imul
call
mov
mov
cs
push
or
addr16
cmp
ljmp
in
sbb
aas
push
stos
jns
sbbl
push
or
push
push
push
in
inc
dec
or
push
sbb
pop
add
or
pop
xor
in
inc
mov
adc
out
pop
fdivrs
mov
lret
pop
shll
jne
testb
jns
aaa
inc
hlt
cmp
pop
jo
loopne
cmp
jl
push
leave
cmp
xor
test
stos
or
loop
stos
sbb
enter
mov
movsl
push
xor
sti
test
mov
cs
je
inc
cmpsb
xor
leave
ljmp
cmp
inc
push
mov
xor
jb
fmuls
test
jnp
and
xchg
loop
cwtl
mul
or
pop
rorb
lods
push
ficompl
ret
ljmp
hlt
rorb
mov
pop
daa
rcr
loopne
dec
mov
inc
pop
ss
loop
xchg
sbb
push
faddl
addb
in
push
and
and
sbb
cs
mov
imul
push
mov
popa
and
sbb
mov
loop
dec
and
push
jmp
cmp
jg
inc
andb
fwait
sbb
inc
lock
cmp
cwtl
xchg
push
mov
xor
int
leave
adc
xor
or
js
fisttpl
in
repz
jecxz
mov
sbb
andb
push
mov
or
clc
push
mov
into
and
pop
add
and
inc
dec
lcall
jp
pusha
push
jg
in
mov
sbb
push
int
ja
scas
cli
call
cmp
mov
aam
pop
inc
dec
mov
sbb
xchg
mov
in
pop
rorb
iret
dec
dec
adc
sub
dec
dec
cmpsb
sub
cmp
mov
jbe
mov
shl
pop
pop
push
ret
popa
dec
aaa
loopne
cs
scas
mov
add
subl
cmp
into
enter
pop
or
call
inc
movsb
fidivs
dec
cltd
jecxz
shrl
aaa
pop
into
dec
mov
fidivl
pop
adc
dec
push
shrl
xor
add
inc
sub
fbld
andb
xchg
pop
cs
lods
dec
aad
pushf
pop
rorb
leave
rcl
inc
dec
mov
mov
inc
test
inc
pop
test
inc
movsl
jne
outsb
push
loope
sbb
xchg
jg
out
movsb
inc
scas
cmpsb
jo
push
or
ret
mov
jns
mov
iret
mov
fsubl
dec
cmpsb
push
mov
xlat
and
jle
or
test
pop
sbb
mov
jbe
adc
int3
out
or
cmp
mov
or
inc
or
dec
sub
cwtl
dec
and
dec
aam
pop
sbb
int
mov
gs
mulb
fwait
inc
add
loop
mov
ret
add
mov
icebp
xorb
inc
into
sub
jg
inc
es
mov
cmpsb
dec
clc
add
movsb
dec
daa
scas
mov
jnp
xchg
or
cmp
cld
jae
mov
inc
xchg
or
push
rcrl
pop
sarl
mov
mov
test
leave
xchg
dec
sub
outsl
addb
shl
push
test
add
fisttpl
scas
add
jg
and
lret
mov
xchg
cmp
lcall
xchg
cmpsb
enter
push
and
jnp
push
fwait
cmpsl
imul
xchg
ficompl
outsl
jge
fsub
cmpsb
add
popa
int
ss
out
dec
cmp
loopne
loope
and
cmp
jg
mov
inc
xchg
adc
pusha
jg
mov
ja
xchg
stc
mov
push
mov
out
sbb
imul
scas
addl
adc
popf
sbb
and
push
push
push
idivb
mov
in
mov
fstps
sub
cmp
mov
mov
fistpl
test
mov
mov
dec
jl
jmp
sbb
cmp
lret
dec
gs
mov
push
rcr
add
mov
sub
mov
addr16
add
sub
loopne
sbbb
sub
mov
shl
dec
inc
jae
mov
push
push
enter
repnz
dec
mov
inc
cwtl
int
jecxz
enter
jmp
xchg
ficoms
mov
mov
scas
stos
xchg
add
cmp
push
leave
mov
inc
pop
push
mov
push
out
inc
mov
scas
push
cwtl
dec
int
std
out
xlat
outsl
push
shlb
push
cmp
push
cmp
cmp
mul
fwait
in
test
in
out
out
sub
into
mov
aaa
insb
add
add
sub
jb
pop
or
mov
ja
xchg
stos
int3
pusha
dec
push
push
jg
sti
hlt
dec
mov
insb
mov
pusha
and
cwtl
insb
ja
mov
mov
pop
mov
inc
add
lcall
shl
mov
jae
xchg
xchg
inc
xor
xchg
test
sbb
cmp
enter
cmp
or
loopne
cmp
dec
lods
fcomi
mov
mov
mov
ss
cmp
inc
je
lea
int
aad
mov
scas
cmc
icebp
les
xor
js
or
mov
adcb
mov
and
ss
push
js
cmpsl
xchg
xchg
cmp
enterw
imul
jl
imul
leave
jmp
or
int3
dec
and
push
adc
push
shrb
lret
sahf
xchg
xchg
and
and
imul
dec
leave
or
cmp
mov
loop
cmp
int
mov
mov
lret
pusha
push
push
cli
in
dec
aad
pop
clc
imul
pushf
insb
shr
inc
test
shrl
xor
mov
fisubrl
cltd
fists
inc
cmp
stos
dec
shl
ljmp
push
sub
add
cmp
jmp
or
pop
dec
dec
test
sbb
lret
dec
jg
loop
sbb
dec
add
dec
outsl
rolb
sub
dec
pop
cmpsl
into
aaa
pop
dec
dec
jnp
pop
push
mov
lret
std
ffree
sub
pop
test
int3
or
sbb
gs
push
mov
dec
out
fildl
dec
arpl
adcl
sbb
dec
in
and
push
push
and
sub
insl
pop
je
dec
je
enter
stos
dec
add
dec
lret
push
jle
dec
inc
ljmp
or
sub
loop
mov
lret
and
jg,pn
jne
mov
subb
mov
mov
cmpsb
leave
sub
add
pop
and
les
dec
jo
xor
add
add
movsl
dec
push
add
lea
icebp
push
mov
cmc
push
mov
jne
inc
es
loope
mov
xor
out
mov
xor
jmp
mov
push
test
out
inc
push
cwtl
leave
mov
jae
mov
out
rcl
inc
call
lret
cli
push
push
lret
mov
adc
fadds
out
adc
xor
fcom
bnd
inc
fwait
cmp
inc
pop
cmp
out
jne
or
cmc
and
push
jg
lds
daa
inc
mov
push
inc
pop
mov
xchg
mov
std
ljmpw
daa
fiaddl
sub
nop
or
nop
lret
mov
cltd
push
lret
xor
xor
add
popf
lahf
xchg
pop
cltd
xchg
dec
push
push
rcl
dec
in
sub
sahf
stos
ss
mov
ss
pop
mov
ss
lds
dec
dec
or
push
add
dec
aam
push
add
mov
pop
cltd
push
add
dec
push
add
mov
push
adc
dec
mov
inc
shrb
add
inc
pop
sbb
cmpl
add
aad
cltd
mov
dec
xor
mov
dec
pop
mov
enter
xorl
push
pop
mov
ds
mov
pop
and
mov
inc
push
dec
push
cmc
xchg
scas
sub
arpl
jl
mov
shrb
ret
pop
dec
xchg
or
fidivs
inc
jle
out
cmp
sbb
fisttpl
jmp
adc
or
icebp
inc
push
sbb
inc
and
mov
mov
cmp
or
mov
mov
roll
add
sub
insl
test
les
adc
test
test
aam
fisttps
iret
in
xchg
cwtl
inc
pop
lds
addr16
loop
sub
ret
rcr
les
add
sbb
imul
fcomps
pop
adc
add
cmpb
xor
repz
xchg
mov
add
mov
pop
dec
push
aam
xor
sub
sti
pop
inc
jl
lret
test
ss
jmp
les
cmpsl
cmp
pusha
sbb
lods
stos
mov
pop
mov
add
or
test
lods
xor
jbe
inc
mov
sub
fdivrs
sub
mov
cli
jmp
pushf
data16
icebp
add
int3
adc
fwait
pop
test
movb
dec
fs
jbe
sub
cmp
sub
pop
jb
and
pop
jmp
or
inc
fcmove
sbb
arpl
push
mov
pop
enter
lret
sub
clc
outsb
fisubl
cmp
push
add
call
inc
sbbb
aam
lret
stos
or
popa
pop
push
stos
les
stc
adc
mov
cmpsb
jno
mov
stos
xchg
adc
in
xchg
jle
push
repnz
ret
leave
inc
leave
ljmp
jne
xchg
sbb
xor
gs
ret
inc
and
push
dec
cmp
ja
lret
jo
andl
jns
clc
dec
cmc
mov
cmc
daa
aaa
sbb
outsl
bound
rclb
sub
js
test
mov
inc
enter
enter
pop
push
les
and
popa
adc
fimuls
mov
out
ljmp
mov
mov
into
xchg
jecxz
in
jnp
mov
data16
pop
loop
dec
ja
sbb
aas
dec
add
push
push
xchg
into
fsubrs
imul
or
cmp
subl
stos
xor
lret
inc
cmp
jbe
hlt
shll
cmp
js
enter
in
lret
addr16
mov
or
and
mov
jno
insb
dec
push
cmp
jnp
sbb
inc
xchg
cwtl
enter
repz
or
inc
xor
ret
add
or
adc
add
sub
std
pusha
sbb
es
sub
rorb
inc
loope
dec
or
jecxz
imul
aaa
stos
mov
sub
ret
add
loope,pt
add
dec
mov
pop
jnp
gs
adc
sub
mov
mov
dec
ret
ljmp
jl
dec
push
bound
fwait
add
inc
in
enter
mov
fwait
and
lret
jecxz
sarl
inc
dec
xor
pop
pop
pop
aam
inc
xor
or
aaa
xchg
inc
in
insl
or
dec
mov
les
push
call
add
jae
or
add
mov
in
inc
js
testl
xchg
dec
stos
mov
and
mov
ljmp
sub
scas
adc
fdivl
cld
hlt
push
rcl
ret
adc
jmp
xchg
lret
inc
or
or
in
and
pop
faddl
pushf
sbb
ficoml
enter
mov
mov
mov
fisubrl
sbb
jg
mov
cmp
pop
fadd
ret
add
sbb
stos
pop
loopne
jg,pn
hlt
xor
dec
cmp
jae
sti
pop
and
popf
and
pop
sbb
xor
add
jns
add
sub
pop
sub
mov
in
mov
rcrb
in
shlb
add
and
dec
sbb
lahf
or
jns
sub
sbb
xor
mov
sbb
xchg
inc
loopne
dec
or
enter
jb
js
xchg
mov
aam
inc
push
dec
push
pop
inc
mov
aas
cltd
jl
imul
fildl
xchg
call
jp
ret
push
or
xorb
ss
sbb
shrl
dec
ja
pop
mov
mov
sbb
jg
fisttpl
mov
cmp
inc
adc
mov
add
pushf
dec
pop
add
pop
add
loope
pusha
cmp
faddp
sar
lods
sbb
adc
ljmp
das
inc
sub
mov
mov
inc
and
and
push
and
sub
fistl
dec
call
and
cmpsb
enter
push
es
pop
mov
pusha
mov
into
test
cmp
or
insb
mov
jmp
mov
fs
dec
mov
jg
fldl
sub
push
daa
sahf
cld
subl
add
and
push
sub
les
jl
jns
mov
icebp
lea
dec
xchg
addr16
loope
sub
cmc
dec
add
cmpl
mov
stc
push
addr16
adc
gs
into
push
xchg
mov
pop
loopne
lahf
scas
enter
inc
mov
rclb
test
xchg
mov
jnp
sbb
scas
push
loope
bnd
js
test
push
std
xchg
mov
jmp
inc
dec
jp
sub
filds
out
mov
xchg
imul
call
mov
mov
add
xchg
fwait
scas
cs
inc
or
lock
and
mov
and
daa
scas
ljmp
stos
aaa
aad
ret
mov
test
test
repz
mov
stc
jg
lds
dec
arpl
dec
push
inc
jg
ret
mov
repz
inc
inc
pop
leave
inc
dec
jle
push
loop
sahf
in
rorb
jb
mov
add
mov
or
mov
repnz
js
add
fwait
or
test
mov
les
sub
mov
aaa
fiaddl
inc
lret
sbb
lods
shl
add
aaa
xor
test
inc
xorb
pusha
dec
xorb
bound
mov
xor
add
leave
inc
cli
xlat
dec
shlb
into
rolb
and
xchg
lret
ret
and
or
out
bound
xchg
cld
cmp
and
and
push
pop
in
dec
pop
sub
xchg
inc
dec
mov
inc
sbb
icebp
mov
dec
cmp
or
mov
or
mov
pusha
lret
cmc
mov
lret
push
adc
push
cmp
inc
cmp
imul
sahf
jb
lds
test
mov
xor
push
inc
bnd
inc
cmpb
inc
sub
out
jp
add
mov
inc
test
les
fsubrl
cltd
fsubl
add
inc
inc
dec
push
sub
xchg
pop
jne
mov
repnz
pop
daa
push
sub
mulps
sub
push
mov
lods
outsb
or
pop
mov
jnp
inc
dec
imul
dec
pop
test
outsl
adc
fmulp
call
jl
xor
shrl
and
inc
and
mov
pop
shlb
and
mov
dec
fsubrl
inc
dec
fcomps
mov
xchg
dec
pop
adc
add
lahf
aam
sarl
arpl
xchg
jecxz
in
push
ss
sbb
mov
cld
enter
popf
dec
lret
inc
lcall
and
mov
xchg
xor
in
pop
dec
adc
movsb
pusha
dec
and
dec
dec
cmp
je
inc
adc
sub
push
sub
push
jecxz
mov
cmove
das
push
scas
bound
pop
add
imul
shll
xor
dec
push
cmp
int3
mov
cmp
data16
pop
dec
xor
enter
dec
push
neg
daa
jae
jb
lcall
jmp
lahf
test
fldcw
push
mov
and
loopne
ljmp
lret
imul
mov
leave
push
xchg
mov
adc
mov
and
fwait
je
inc
test
cltd
mov
and
and
inc
adc
mov
cmp
lea
sbb
fcmovb
int
inc
mov
xor
dec
fnstenv
jae
mov
out
andb
dec
cmp
cmc
in
sahf
inc
inc
lds
es
int
pop
push
test
cli
in
sahf
shrb
sbb
push
add
inc
mov
push
lret
jecxz
mov
add
cli
inc
xor
pop
dec
fwait
sub
pusha
mov
pushf
les
mov
sub
rcrb
testl
movsl
add
cltd
jecxz
loop
out
js
push
xor
scas
repnz
cli
faddl
leave
add
jne
sbb
inc
push
imul
xor
arpl
adc
push
xor
inc
aas
sub
bound
cmp
out
clc
fsubs
xchg
scas
dec
or
sub
cmp
imul
js
cmp
sub
mov
ja
out
pop
dec
add
or
push
dec
adc
cmp
fdivrl
fucomp
into
jne
ja
out
test
lods
jnp
push
push
fwait
test
sbb
cmp
push
fwait
out
in
sbbb
mov
or
loopne
inc
daa
fcmovnb
mov
xchg
dec
push
cmp
ret
adc
fdiv
push
mov
inc
fstpt
icebp
dec
call
lret
fidivrs
xor
xchg
lcall
sub
xchg
cmpsb
ret
or
xorl
jmp
pop
mov
fmull
xchg
pushf
xor
mov
aad
loopne
adc
pop
pop
xchg
inc
loop
into
aaa
dec
cmp
inc
or
neg
ds
outsb
in
sub
ljmp
loop
call
mov
inc
stos
sub
push
xor
jl
mov
in
int3
pop
xchg
pusha
cmp
jns
pop
pop
inc
popa
push
test
ss
nop
mov
enter
pop
ljmp
out
add
pop
ja
in
jecxz
stos
xchg
and
xor
xor
bound
imul
shr
xchg
sti
leave
mov
js
jmp
xchg
pop
or
sbb
enter
fldenv
js
and
push
xorl
sbb
jecxz
shlb
fildll
cmp
fwait
ja
enter
loope
cld
lret
mov
and
sbb
repnz
inc
aad
pop
fisubrl
cmpsl
dec
and
sahf
pushf
testb
cmovno
ljmp
push
test
sub
sbb
push
mulb
sub
mov
int3
stos
push
mov
or
mov
sbb
movsb
inc
cwtl
loop
xchg
push
daa
fldl
lret
inc
adcl
mov
fwait
sbb
inc
mov
daa
in
movsl
mov
xor
cmpsl
cmpl
jbe
inc
adc
sub
inc
mov
and
in
mov
outsl
sbb
mov
shrb
ss
cmp
ss
fimull
in
pop
lret
test
cmp
fists
ficoms
dec
ret
bound
sub
test
int3
sbb
popa
mov
lret
test
mov
mov
adc
adc
movsl
inc
dec
push
stos
movsb
push
add
fstp
adc
push
xor
mov
and
lret
cmp
pushf
add
sbb
inc
dec
faddp
and
cwtl
push
loope
jno
add
pop
mov
fisttpl
dec
push
sti
mov
dec
and
inc
dec
fimull
ja
pop
add
mov
pop
je
pop
add
pop
cmp
dec
les
or
fistpl
cmc
stos
hlt
call
shrb
add
or
mov
push
movsb
inc
dec
es
sbb
cmp
dec
mov
lcall
mov
lahf
in
inc
int3
jmp
jmp
inc
mov
inc
xchg
inc
push
pop
fucomi
sub
jmp
in
adc
cmp
out
ja
leave
std
inc
dec
outsb
sbb
and
or
enter
cmp
fisttpl
ret
cmp
int3
inc
enter
test
movsl
and
sbb
stc
gs
pusha
addl
inc
jnp
dec
xor
pop
cmpsb
sbbb
and
shufps
dec
ret
push
sarb
pop
stos
add
pusha
shl
dec
push
in
and
rcll
xor
pop
cs
popf
fisubl
pop
push
mov
inc
stos
mov
sub
or
or
mov
add
daa
mov
xchg
xchg
cltd
int
push
clc
and
in
pusha
push
aad
mov
int3
je
xor
int
sbb
addr16
in
mov
cmp
or
mov
inc
push
in
daa
nop
pop
out
inc
in
es
mov
or
notb
inc
ret
dec
adc
arpl
xor
mov
stos
sbb
jae
add
xor
xor
push
jl
mov
sub
popa
mov
push
movsl
pusha
leave
iret
stos
es
ljmp
jb
ror
add
pop
mov
into
jo
je
aas
xor
jmp
in
jb
lcall
lret
inc
push
push
lds
jecxz
jae
jle
inc
mov
inc
roll
or
out
sub
ret
pop
and
jg
cmovle
xor
gs
dec
mov
jb
pusha
jle
adc
stos
mov
xor
and
and
pop
or
daa
pop
int3
fcomps
push
push
xor
push
sarl
imul
addl
inc
roll
cmp
rolb
inc
or
repnz
xor
sbb
add
push
mov
cmpsb
mov
or
das
mov
or
cmp
call
adc
sub
icebp
xchg
int
mov
pop
lea
enter
dec
popf
sub
mov
adc
mov
in
popa
mov
mov
xor
in
out
mov
mov
mov
popl
dec
dec
fmul
cmc
in
in
cmp
add
insb
push
sbb
aad
mov
push
test
add
enter
scas
out
adc
lds
mov
xlat
cmpsb
jmp
pop
mov
nop
xor
xchg
mov
js
inc
ja
push
andb
hlt
inc
cmp
lahf
xor
cwtl
xchg
inc
push
dec
jmp
jo
dec
rcll
in
loopne
mov
mov
ljmp
test
sbb
rorl
dec
or
lret
mov
and
sub
addb
or
mov
and
rcrb
mov
scas
cmp
inc
cmp
imul
and
aad
pop
cmp
scas
mov
or
mov
mov
xchg
and
dec
mov
inc
inc
push
pop
push
or
popf
xchg
in
dec
sbb
cmp
leave
std
ss
dec
sbbl
inc
dec
xchg
pop
jae
or
mov
push
call
mov
out
int
xchg
cmp
push
jmp
push
inc
push
dec
adc
xchg
fs
rol
add
movsl
dec
out
lea
cmpsl
les
pop
dec
push
jge
mov
ss
in
imul
lahf
sahf
inc
loopne
or
scas
sub
adc
enter
dec
xchg
xchg
loop
and
xorl
adc
js
cmp
lds
aad
negl
loopne
dec
mov
jmp
arpl
fnstcw
inc
mov
out
fsub
ljmp
dec
fldenv
vpmullw
js
mov
add
pop
movl
add
mov
dec
mov
jne
enter
xor
pop
imul
loopne
jp
mov
dec
rorl
dec
aam
push
rolb
pop
cmp
daa
ss
dec
jge
ljmp
push
lock
inc
cmpsb
dec
enter
or
rolb
xchg
add
movsl
sarl
or
movsl
fadds
mov
or
sbb
and
add
cmpsb
repz
mov
cmpsb
pop
inc
arpl
aas
dec
rcr
jmp
pusha
pop
cmp
rol
inc
mov
add
pop
fisttpll
inc
cmp
das
inc
pop
inc
push
out
mov
and
sti
mov
jno
or
adc
lds
xlat
sbb
sub
add
xor
dec
and
ret
inc
mov
add
mov
movsb
fiaddl
dec
xchg
int
movsb
push
out
dec
or
dec
scas
lods
into
dec
dec
xor
lds
and
daa
pop
movsb
xor
test
shlb
and
test
enter
mov
jge
xchg
aad
fdivs
and
fsubrl
jmp
mov
dec
fstpl
pusha
sub
jle
pop
pop
dec
rcll
imul
mov
mov
das
cld
mull
and
out
or
mov
xor
dec
jne
push
stos
pushf
lods
test
sub
fisttpll
cmp
flds
pop
movl
dec
and
imul
das
jmp
push
mov
mov
jns
push
cld
adc
sbb
pop
cmp
mov
sub
inc
mov
mov
mov
and
and
scas
xchg
pop
xor
add
cltd
cli
enter
dec
push
mov
mov
shll
sbb
andb
fcoms
fwait
pop
xchg
pop
jo
mov
aaa
adc
sbb
inc
mov
es
dec
lea
jne
cmp
flds
mov
call
mov
adc
testb
ljmp
cmc
lock
enter
inc
outsl
sub
dec
and
sub
adc
stos
addl
sub
stos
dec
jg
sbb
cmp
inc
out
sbb
mov
mov
cmp
ret
add
and
xchg
cmp
mov
rorb
pop
icebp
enter
jno
lret
mov
push
or
dec
aas
ja
adc
cmp
mov
xchg
ja
lods
popa
add
mov
lds
xchg
clc
xchg
imul
loope
jecxz
sbb
cmp
enter
jecxz
dec
jl
movsl
mov
in
sub
dec
loopne
ss
sub
insl
sahf
loopne
push
cmp
inc
data16
ficompl
lret
or
call
incl
and
sbb
adc
mov
mov
mov
add
push
insb
dec
xor
js
insb
std
rclb
cmp
cld
jb
inc
fsin
push
pop
pop
pop
vcvtss2si
imul
mov
daa
aaa
movsb
cmp
pop
cmpsb
dec
lock
test
and
jo
add
into
or
or
xchg
mov
add
gs
cltd
fsub
xor
pop
cs
loope
in
xlat
xor
xchg
mov
ret
sub
pop
lcall
mov
sbb
fcmovb
mov
loope
inc
test
mov
dec
mov
add
cli
loopne
pop
inc
les
mov
cmp
test
inc
inc
mov
daa
faddp
mov
dec
scas
ret
loopne
sub
add
call
xor
fistpll
iret
data16
jp
lods
mull
xlat
fnstsw
fcoml
mov
sahf
inc
sbb
sub
push
and
push
faddl
iret
cs
ret
ret
xor
les
mov
and
dec
pop
mov
mov
push
sbb
add
add
dec
push
inc
add
add
adc
pusha
enter
mov
sahf
mov
or
lret
outsl
stos
notl
push
sbb
lret
mov
loop
fsub
ret
jecxz
pop
xorb
test
and
inc
in
gs
mov
mov
out
pusha
cmp
and
mov
ret
mov
jo
in
mov
mov
push
add
fninit
adc
mov
outsb
jnp
cmp
rcl
adc
call
sbb
outsb
insb
aad
sbb
fdiv
sarl
cmc
stc
dec
or
pop
faddl
fistpl
cmp
or
fnstcw
sub
jl
into
jbe
bound
add
pop
push
fisttpll
dec
dec
pop
stos
push
aas
bound
cs
pushl
pop
sbb
sub
inc
shr
aas
cmp
dec
sub
adc
xor
sbb
push
pop
mov
popf
fisubrs
inc
push
lret
mov
add
leave
jle
or
pop
push
xchg
mov
popa
cmp
pop
ljmp
pusha
inc
push
cmp
les
inc
pop
loopne
les
lret
notrack
jb
mov
push
filds
push
lcall
test
cmp
or
fnstcw
ret
and
mov
subl
cmp
aas
and
popl
push
sub
push
dec
push
cs
push
pop
sub
fwait
pop
lret
push
mov
jecxz
dec
dec
or
cltd
mov
jae
lea
imull
iret
inc
fs
jmp
fcomps
dec
dec
or
jge
mov
ljmp
stos
outsl
daa
adc
rol
loop
call
adc
into
xlat
mov
cmp
out
repz
popa
rorl
push
fidivs
jp
mov
inc
inc
mov
xchg
loop
push
push
and
daa
inc
add
or
roll
sbb
xor
hlt
cmp
andl
cmp
xor
push
std
sbb
inc
enter
fimuls
out
push
push
imul
adc
xor
fisubrl
xor
adc
mov
mov
or
std
xlat
mov
insl
add
dec
fisubs
or
pop
jae
ret
sbb
cmp
ds
test
dec
sbb
inc
orb
lret
pop
add
cmpsb
dec
ljmp
and
mov
and
sub
and
jecxz
mov
jo
jecxz
out
mov
xchg
flds
cmp
js
inc
call
test
aam
sbb
adc
sub
inc
int3
fisttpll
cmpsb
test
cmp
shrl
and
mov
aas
iret
sub
imul
dec
push
push
imul
mov
fiaddl
test
aam
and
call
insl
outsb
jg
push
pop
mov
adc
dec
enter
mov
inc
dec
int
jg
popa
mov
scas
dec
rcl
cwtl
jno
mov
nop
push
add
mov
xorb
jne
out
dec
inc
mov
mov
mov
push
and
cmpsl
sub
fsubrs
jmp
and
cmp
loope
ljmp
popf
jnp
dec
pop
jne
sub
les
vcvtpd2psy
adc
xchg
inc
inc
cmp
mov
jnp
add
sbb
fcmovnb
or
mov
in
mov
aas
in
dec
imul
addr16
mov
in
xchg
mov
adc
cld
mov
pop
or
test
push
xor
das
sbb
dec
popa
add
pop
fidivrl
and
cli
sbb
jno
sub
or
jb
addl
loopne
jo
das
or
mov
sub
sahf
outsb
pop
mov
mov
ja
negb
sub
pop
fcompl
in
cld
xor
fcomps
push
mov
xlat
scas
inc
mov
fiadds
aas
loopne
add
dec
mov
cs
fimuls
inc
jmp
and
mov
enter
lret
mov
mov
ds
scas
mov
loope
jae
fsubs
lds
mov
sub
bswap
cmp
and
loope
shll
lock
sub
fnstsw
add
shlb
cltd
subb
jecxz
fcmovnbe
add
lret
inc
scas
dec
and
call
mov
enter
xor
cmp
and
adc
add
pop
test
cmp
cmp
and
pop
dec
imul
daa
sub
adc
fwait
sub
pop
and
and
arpl
xchg
pop
es
adc
aas
movsl
push
and
fldcw
inc
or
dec
jbe
ljmp
enter
out
in
inc
test
dec
cmp
xor
das
test
daa
dec
jecxz
fmull
push
jae
cli
inc
test
out
xchg
test
sub
mov
mov
or
dec
mov
sub
sub
out
pop
ret
dec
dec
push
stc
pop
es
dec
mov
inc
inc
andb
inc
dec
js
jg
or
jns
shll
push
or
cmp
cs
movsl
pusha
xlat
adc
add
and
dec
pop
mov
test
sub
and
leave
xchg
adc
ficoms
dec
jae
icebp
dec
jo
dec
push
lock
xchg
mov
sbb
daa
fwait
jle
sbb
inc
jmp
sahf
movsl
dec
aas
fisubs
jb
push
in
mov
adc
outsl
mov
mov
test
adc
jg
jmp
loope
mov
gs
fiaddl
dec
add
mov
xor
loopne
and
mov
enter
lcall
decl
xor
lret
jmp
lcall
ljmp
inc
cmp
das
inc
in
cltd
out
shlb
in
mov
pop
mov
fmul
jg
inc
add
scas
sub
jecxz
ret
shl
jno
pop
bound
and
stc
or
clc
mov
cli
addr16
enter
pop
js
andb
dec
out
lahf
ljmp
shll
inc
push
add
xor
cmp
inc
mov
lods
cmp
and
inc
mov
adc
gs
bound
mov
aas
pop
lds
pop
inc
xor
dec
std
mov
inc
mov
ret
iret
psadbw
enter
or
nop
jg
mov
mov
mov
lock
mov
inc
ja
fidivs
jno
xchg
out
sub
or
adc
pop
fildl
mov
sub
xor
sbb
push
hlt
sbb
adc
into
mov
popa
pusha
cmp
or
sbb
pusha
inc
lods
pop
loopne
dec
adc
in
das
add
popa
dec
jne
xlat
inc
add
and
lcall
ret
ret
and
dec
shll
jg
fidivrs
ljmp
xor
push
lret
pop
ljmp
ljmp
xor
inc
cmpsb
imul
inc
ret
cld
movl
test
mov
leave
add
in
stos
popf
jecxz
pop
scas
in
and
xor
dec
xor
inc
add
xlat
pop
je
inc
loope
xor
dec
xlat
push
nop
loop
aam
pop
adc
decl
push
sbb
mov
test
lock
inc
mov
sub
push
or
jecxz
jb
ds
push
out
jl
mov
push
mov
jg
dec
inc
repz
push
xor
cmp
movsl
sbb
or
leave
fists
shlb
gs
or
push
daa
inc
sbb
ficoms
stos
or
lret
and
inc
xor
pusha
inc
push
fisubrl
rcrl
fimuls
mov
and
dec
imul
testl
packsswb
jo
sub
stc
fstp
mov
stc
nop
lahf
fstpl
cmp
es
outsl
sub
les
mov
dec
popl
subb
push
loope
and
sahf
out
decl
cmpsl
inc
or
test
bound
add
pushf
popf
in
push
pop
out
hlt
cmp
dec
jecxz
mov
inc
movsb
loope
or
jge
bound
push
pop
call
cmp
mov
sub
mov
leave
leave
cmp
pop
ret
cmp
mov
cmpsb
mov
cmpsl
jmp
push
sbb
into
shr
mov
nop
sub
lahf
push
call
mov
cmp
cmp
or
cmc
movb
or
es
jns
adc
stos
xchg
jnp
into
jo,pn
mov
fwait
push
xchg
aas
mov
jae
mov
dec
or
xchg
cwtl
dec
cmp
cmpsb
push
mov
inc
dec
xchg
dec
sbb
add
mov
cmp
inc
fistl
xchg
pop
mov
adc
cmpsl
push
xor
loope
in
icebp
stos
sti
xchg
ret
jb
inc
mov
imul
imul
aas
push
adc
mov
ljmp
or
aad
nop
test
jmp
xchg
cmpsb
dec
sub
inc
loopne
stos
cmp
mov
test
mov
adc
add
mov
orb
fsub
sti
and
sbb
pop
push
and
dec
inc
inc
inc
into
jae
push
sbb
mov
push
rcrl
pop
loope
shr
xchg
sbbb
push
xchg
movlps
aaa
mov
js
in
pushf
dec
out
fldt
clc
mov
pop
fmull
inc
xchg
imul
stos
mov
enter
xor
xor
pop
ds
in
pushf
lret
out
push
xor
mov
mov
aaa
cltd
xor
inc
sbb
shlb
push
sub
sub
mov
call
mov
adc
xor
adc
pop
ret
movsl
add
mov
and
cmpsb
pop
push
mov
movsb
clc
jmp
mull
orl
mov
add
mov
or
xor
xor
inc
dec
fcmovnu
js
inc
movb
ret
mov
cmc
adc
and
nop
cmp
jmp
push
and
sbb
mov
pushf
add
cld
mov
xchg
xchg
push
and
insb
mov
dec
xor
dec
push
roll
rorb
and
leave
mov
cmp
cltd
dec
imul
pop
pop
jg
fists
mov
stos
icebp
dec
imul
pop
pop
data16
ljmp
jne
incl
lods
sub
mov
movsl
add
pop
push
push
lret
gs
jp
jge
lret
lea
in
jbe
cltd
jb
loopne
cmp
data16
lea
cmp
pop
mov
and
xor
xchg
sbb
das
cltd
inc
and
xchg
jmp
push
nop
cltd
test
push
lea
inc
jnp
pop
rclb
or
sub
decl
aas
mov
push
or
in
jmp
popa
sti
mov
mov
xchg
xchg
repnz
mov
test
data16
jge
dec
pop
sbb
scas
stos
mov
int3
mov
fwait
push
sub
mov
jno
push
lods
sub
sub
sub
nop
cmp
decl
and
add
push
xorl
dec
pushf
shlb
clc
lahf
cmc
xchg
dec
fcomps
js
dec
movsb
rolb
inc
cmp
xlat
enter
dec
ret
sub
ret
xor
out
ja
add
add
leave
mov
xchg
incb
cmp
mov
cmpsl
and
adc
call
loopne
cmp
nop
cmpsb
insb
js
jp
cmpsl
daa
mov
popf
add
out
aam
insb
cmp
data16
dec
movsb
fnsave
dec
sarb
rcrl
add
mov
aas
out
sbb
data16
cmpsb
fdivl
xlat
outsb
shll
sub
mov
lret
imul
inc
imul
or
xor
sbb
mov
inc
fisttpl
test
mov
inc
dec
mov
push
sbb
test
nop
mov
pop
shlb
xor
adc
inc
inc
mov
rcll
push
inc
pop
inc
push
inc
cwtl
push
and
push
rorb
in
xor
pop
int
sbb
insb
adc
popf
nop
cmp
outsl
out
sbb
mov
pusha
cmc
push
call
imul
lods
cmp
mov
arpl
mov
js
and
in
xor
jmp
arpl
add
jmp
scas
pop
jp
adc
and
fimuls
xchg
mov
pop
in
jae
es
or
add
ret
dec
pop
lock
pop
push
dec
andb
pop
mov
add
and
add
ret
sbb
leave
fnstsw
inc
imul
inc
pop
aad
sbb
dec
and
or
sub
scas
xchg
pop
pusha
cmp
rclb
fucomi
push
aad
inc
sub
repnz
xor
scas
sbb
movsl
xor
pushf
cmp
or
xor
rolb
mov
fdivl
jbe
jecxz
out
stc
add
xor
stc
mov
mov
std
push
or
inc
push
add
clc
inc
jmp
ja
mov
fstps
and
add
imul
enter
lods
ja
lock
scas
data16
xor
fsubrp
imul
mov
add
adcb
mov
cs
sub
push
or
test
pop
inc
rol
fistl
in
pop
fwait
or
pop
or
mov
mov
les
inc
fcmovne
mov
push
mov
xor
je
loop
adc
sbb
jnp
jmp
add
inc
jb
xor
jb
push
jae
and
orb
xor
pop
cs
adc
scas
or
lods
adc
mov
rcl
add
ljmp
orl
push
dec
push
mov
mov
dec
icebp
xor
scas
mov
pop
cmp
adc
outsl
add
mov
push
mov
or
or
mov
jmp
sub
sbb
insl
daa
lahf
xor
call
add
pop
inc
push
pusha
mov
pop
mov
sub
dec
pop
inc
lret
adc
mov
mov
inc
push
mov
loopne
iret
inc
mov
add
pop
xor
or
and
inc
adc
dec
repnz
out
pop
std
ds
push
add
inc
and
mov
xchg
test
xchg
js
inc
scas
fsub
dec
stc
jge
div
adc
xor
lds
rclb
ss
add
imul
fmull
out
loope
stc
ficoml
leave
ja
dec
stos
mov
cmp
ret
pusha
mov
sub
adc
je
pop
xchg
fisttpll
dec
push
xchg
mov
int
push
inc
mov
xchg
lds
fdiv
ja
mov
adc
or
fsubp
mov
sbb
add
les
mov
xchg
aas
mov
bnd
mov
jg
data16
sub
ss
pop
xor
add
jle
xor
sub
push
shl
pushf
adc
xorb
mov
sbb
ja
push
aad
aam
idivb
push
sbb
jecxz
cli
outsb
enter
test
xlat
fnsave
push
push
sbb
mov
mov
adc
add
adc
les
outsb
dec
rcrb
int3
sbbl
push
daa
inc
jecxz
cmp
fistpl
push
inc
sarl
inc
jg
push
adc
add
and
dec
and
dec
mov
sub
or
out
mov
cmp
jl
pusha
jg
push
sbb
and
dec
push
inc
xchg
je
ljmp
lds
lret
repz
mov
inc
mov
inc
fsubrl
mov
movsl
lods
pop
ja
sub
mov
cmc
data16
xlat
aaa
and
dec
fbstp
js
lahf
or
mov
popa
adc
adc
aad
addr16
fucompp
rcrl
adc
push
ret
and
insb
push
cmp
mov
loope
mov
xchg
xchg
rol
in
in
push
lret
dec
in
mov
dec
mov
in
xchg
push
pop
jmp
or
lods
shll
in
push
mov
jae
mov
ljmp
out
mov
push
mov
sub
mov
push
jl
in
jecxz
mov
daa
pslld
mov
inc
fwait
loopne
cmp
mov
shll
pop
sbb
sub
jnp
insl
out
scas
pop
clc
mov
cmp
in
push
sarb
lahf
inc
mov
xor
sbb
mov
sahf
rcrb
sub
mov
repz
sbb
imul
sub
pop
leave
je
and
fcmovbe
push
fdivl
or
jnp
mov
gs
inc
sbb
rcl
mov
sbbb
jge
or
push
or
sub
jnp
adc
imul
push
sub
enter
orb
mov
in
pop
ljmp
stc
loopne
cmp
cmp
cmc
rcrl
sarl
cmpsb
orb
call
fldl
loope
dec
ficompl
dec
jp
enter
adc
ljmp
cmp
cmp
loope
jnp
out
stos
inc
inc
repnz
clc
cmpsb
mov
int3
lds
scas
mov
xor
fmuls
inc
cmpsb
add
insl
sub
mov
add
mov
or
ljmp
pop
mov
stc
cmp
adc
jae
leave
cld
ljmp
vmovlps
xor
mov
add
mov
clc
movl
pop
enter
lret
loopne
cmp
pop
pop
inc
int3
or
aam
lea
mov
mov
lahf
mov
inc
xchg
das
push
add
lds
test
adc
shl
push
lret
push
cmc
jae
add
mov
fidivrs
add
mov
push
fstps
fidivs
mov
pop
sub
fstpl
push
fwait
int3
inc
jb
mov
sbb
cmpl
mov
scas
sbb
dec
or
mov
loope
mov
fiadds
mov
sbb
sbb
push
loopne
cmp
mov
pop
jg
pop
push
fsubs
hlt
or
leave
lret
jmp
fsubl
pop
cmp
ret
inc
addr16
fucomp
scas
adc
in
call
orl
inc
clc
xlat
int3
pop
xchg
daa
xchg
mov
pop
ljmp
cmp
inc
mov
in
lods
jbe
inc
push
stos
jo
adc
fmull
cs
mov
mov
fdivr
out
sbb
adc
imul
pop
xor
cmpsb
inc
insb
fstp
fs
lock
jg
dec
rcll
push
or
dec
sbb
sub
mov
outsl
sub
dec
dec
add
lods
arpl
mov
frstor
add
stc
repz
pop
add
adc
icebp
cmp
push
fs
mov
xabort
filds
lock
cld
push
add
stos
movsb
inc
fmul
dec
pop
dec
fistl
adc
inc
mov
es
and
jb
pop
inc
fwait
mov
cmp
mov
dec
fsubs
and
rol
cmp
test
rolb
inc
stc
dec
cmpsl
loopne
xor
mov
int
jae
in
imul
or
xor
add
icebp
adc
and
push
enter
adc
sbb
add
sub
sub
outsl
icebp
mov
push
adc
mov
mov
adc
mov
inc
mov
sbb
lds
mov
ljmp
xor
inc
mov
in
xor
ja
dec
test
stc
push
pop
popa
jge
pushf
push
in
bound
sbb
and
mov
lret
push
pusha
ret
and
or
jne
aas
inc
lahf
push
xchg
adcb
ret
mov
adc
sahf
enter
push
test
or
lahf
adc
xchg
outsb
inc
ficomps
dec
cs
push
sub
test
inc
shl
xchg
push
pop
data16
sub
mov
cmp
sub
lret
rorb
imul
push
sub
mov
push
enter
push
lods
dec
push
inc
and
inc
jle
cs
pop
mov
repz
jno
mov
les
lret
jle
adc
mov
and
mov
sub
sub
mov
add
leave
dec
mov
jns
pop
fisubrs
add
aad
pop
cmpsb
outsl
arpl
jmp
or
xchg
mov
and
inc
fistl
and
sbb
inc
adc
fistpll
push
loopne
sti
inc
out
inc
push
mov
and
daa
pop
fisubs
movl
and
decl
popa
sub
daa
ret
xor
enter
sub
in
jg
fsubl
pop
inc
lret
cmpsb
push
sub
jl
mov
stc
inc
pusha
and
mov
lcall
or
fsubs
jmp
fstps
dec
pop
loop
lds
jb
int
dec
std
std
in
fidivrs
inc
aad
adc
pushf
push
sbb
xor
js
mov
clc
enter
add
mov
fs
xchg
lret
add
cmp
dec
jnp
jmp
xor
dec
imul
into
gs
enter
inc
inc
sbb
push
push
mov
shlb
movl
cmp
xchg
inc
lret
inc
leave
or
dec
adc
push
dec
push
jg
mov
and
scas
out
adc
stos
leave
jno
test
inc
xchg
xor
call
mov
rclb
cs
push
cmp
and
push
cmp
jb
jmp
lret
js
pop
cli
roll
enter
add
jb
sub
enter
daa
popa
add
dec
add
daa
cltd
inc
mov
dec
incb
inc
xchg
lahf
and
ljmp
fidivrl
adc
in
mov
inc
and
pop
loopne
inc
adc
inc
test
in
mov
inc
mov
mov
daa
mov
pushf
clc
jbe
in
lock
xchg
iret
daa
or
push
dec
cmp
push
mov
jmp
pushf
pop
add
xlat
test
fs
push
repnz
push
or
mov
test
pop
jne
mov
jge
lods
push
mov
mov
int
out
imul
popa
in
pusha
bound
cli
insl
stos
dec
sub
jb
or
sbb
xor
mov
ljmp
mov
out
cs
js
inc
testb
gs
xchg
je
xor
xchg
adc
and
mov
add
push
inc
scas
dec
push
inc
sub
jno
and
imul
xchg
adc
push
loop
js
jae
dec
jns
push
sub
mov
mov
cld
cmp
jne
pop
fcmove
int
mov
jmp
mov
cmc
movsl
pushw
lds
mov
adc
imul
sub
mov
lahf
or
push
out
fbld
in
or
sub
fcmovbe
ljmp
les
leave
jb
jecxz
xor
adc
lock
dec
inc
dec
inc
jg
mov
shll
ja
pop
std
call
xor
sub
cmp
int
cmp
sbb
test
push
mov
loopne
dec
xor
lock
test
fildl
aaa
jno
mov
repz
adc
icebp
jg
cs
test
hlt
fmulp
pop
lret
xchg
xchg
loopne
std
cmpsb
iret
mov
clc
xchg
sub
fbstp
jmp
xor
scas
cmp
cmp
je
pop
add
sbbl
sub
jno
shrl
xor
in
mov
cmp
and
cmp
or
mov
mov
push
pop
repz
push
imull
xchg
cmp
lock
xor
sahf
rcrb
rclb
dec
addl
adc
jle
or
mov
inc
inc
mov
cmp
stos
sub
or
push
int3
ret
imul
mov
jae
push
lds
out
inc
and
je
or
stc
sbb
cmp
adc
jle
mov
fisubrs
sub
inc
cmp
outsb
rcrb
ret
fisubrl
sbb
cmp
clc
push
popa
pop
add
inc
cmp
data16
xchg
push
sub
mov
imul
sbb
push
mov
mov
mov
rolb
stc
mov
clc
fld
out
cs
mov
out
imul
movsb
or
xchg
jae
push
push
add
sbb
adc
pop
mov
cs
das
popa
add
inc
fldz
or
inc
inc
iret
pop
insb
dec
lea
ljmp
add
xchg
or
rolb
roll
cmp
push
xor
mov
enter
loope
inc
in
add
daa
fsubp
mov
in
lcall
fsubrl
loop
fsts
xorb
push
mov
inc
aad
xchg
pop
stos
shll
sub
or
xor
movq
rcll
cmpl
add
int
shll
cwtl
ret
inc
jecxz
fiaddl
inc
addr16
adc
add
xchg
fsubr
push
out
sbb
das
sub
xor
mov
fdivp
sub
inc
in
test
jb
mov
or
ss
stos
lret
push
jecxz
arpl
sub
adc
jno
xchg
dec
mov
ljmp
ret
xor
movsl
pop
pop
arpl
clc
enter
in
or
loop
rcll
daa
gs
into
inc
sub
push
or
sub
loopne
ss
jns
inc
xor
pop
shr
mov
jae
scas
insb
jo
out
lret
add
outsl
shr
add
dec
in
push
push
fisubrl
insb
outsl
mov
movsb
mov
mov
enter
sbb
sti
mov
aad
jl
xor
xchg
cld
dec
or
rorl
in
adcb
xchg
sbb
push
xor
jae
shrb
ds
xor
rorl
cs
jg
popf
in
clc
scas
scas
out
mov
jmp
jo
or
stos
scas
dec
stc
adc
call
xor
xor
idiv
inc
inc
add
divl
movsb
add
push
mov
setg
fimull
movb
jo
lea
rcrb
push
dec
int
lods
in
fiadds
inc
test
xchg
xor
xchg
enter
add
mov
jb
stos
cs
divl
sub
inc
aas
cwtl
pop
test
inc
add
xor
insl
into
sbb
jo
dec
and
in
stc
push
xorb
sti
je
test
xor
add
cs
incb
add
add
dec
sbb
js
jns
inc
les
in
pop
sbb
sar
and
iret
pop
addb
pop
aad
and
sahf
repnz
lcall
dec
pop
les
dec
ret
pop
or
sub
mov
outsl
mov
cmp
fildl
insl
imulb
dec
jl
push
lahf
in
jnp
adc
adc
gs
test
jecxz
and
mov
inc
xchg
cli
xchg
pop
pop
mov
lds
dec
pop
pop
fadds
or
mov
lret
inc
push
jecxz
mov
mov
dec
dec
sbb
jl
repnz
scas
jmp
mov
ss
sub
lods
xor
mov
pusha
and
cwtl
inc
ja
js
in
orl
pop
scas
xchg
sub
bound
fisttpll
cmc
cmovg
mov
pop
les
dec
or
mov
inc
pop
adc
jg
mov
pop
mov
inc
icebp
inc
jnp
idivl
push
out
enter
jecxz
jecxz,pn
orl
subb
and
aad
mov
jmp
scas
or
les
les
sub
mov
dec
ds
popa
jmp
iret
test
aad
add
cmp
stos
add
push
jns
repnz
jg
mov
dec
test
cmp
arpl
outsl
fdivrl
cwtl
aaa
push
sub
cmc
pop
leave
rorl
mov
jo
mov
jp
jp
icebp
mov
cli
xor
jmp
ds
dec
pop
pop
aam
sbb
jecxz
stc
fisttpl
mov
dec
lods
lret
inc
sbb
xchg
cmp
dec
xor
sarb
fstl
or
test
pop
or
and
adc
cltd
ret
sbbb
fst
out
sub
xor
test
inc
daa
mov
push
stos
add
loope
xchg
mov
movsl
inc
cmpsb
outsl
xor
xchg
lds
out
push
mov
sub
push
repnz
ja
inc
lea
lods
test
fwait
data16
pusha
inc
lcall
and
daa
push
or
xor
aad
cmpsl
ljmp
or
dec
movl
xlat
push
lcall
fsub
pop
loop
inc
inc
mov
rep
out
data16
icebp
mov
or
jnp
lds
add
pop
xor
sbb
xchg
push
aas
mov
scas
add
adc
cmovne
mov
push
sbb
add
dec
insl
jge
and
mov
lahf
add
dec
gs
test
sbb
dec
enter
nop
js
add
inc
js
stc
outsl
inc
or
pop
mov
add
clc
ljmp
and
mov
in
push
push
add
xchg
xor
inc
outsb
aam
pop
pop
push
and
inc
jle
mov
js
fldenv
sub
lea
leave
add
push
sbb
pop
fisubrl
jp
loop
enter
js
push
pop
jnp
call
ret
jno
addl
and
jmp
fists
les
cmp
add
pop
xor
xlat
fisttpll
stc
rcrb
inc
sbb
or
loope
mov
testl
aas
sub
push
ficompl
aad
pop
inc
gs
dec
cld
hlt
pop
mov
push
mov
add
cs
and
pop
lds
loope
mov
or
enter
cs
pop
dec
enter
sbb
cmp
fiadds
push
and
push
inc
fisttpl
pushf
fs
cwtl
or
rcr
enter
push
cs
push
or
mov
mov
sub
lcall
inc
mov
mov
in
pop
jo
add
inc
out
mov
popf
lds
ficompl
sti
cmp
imul
mov
ds
add
xor
daa
xchg
jle
call
xchg
adc
mov
jp
push
pop
out
fucom
popa
mov
add
int
mov
jmp
add
iret
mov
inc
into
inc
ret
scas
add
sbb
dec
ret
inc
push
xor
jl
mov
push
stos
sub
mov
mov
sub
or
or
mov
fisubrs
and
imul
sub
lock
icebp
dec
sub
cmp
imul
es
xchg
sub
call
cmp
jecxz
sub
dec
sbb
mov
out
inc
push
in
jmp
outsl
cmp
jbe
and
je
xchg
dec
xor
mov
cs
repnz
fmull
cli
dec
fwait
aad
jae
mov
iret
aam
sub
jle
aaa
pop
into
jle
cmp
sub
cmp
in
fsubl
and
imul
pop
insl
adc
cmp
or
or
pop
imul
inc
leave
hlt
inc
xchg
leave
or
push
or
cmpsb
adc
cmp
test
ret
int
pop
or
jno
xchg
je
mov
aas
aam
xchg
xchg
dec
add
and
repz
test
insb
fsubp
jmp
mov
into
dec
inc
rcr
in
lret
pop
jge
jb
aaa
enterw
inc
pop
pop
movsb
inc
pop
dec
adc
push
movsl
pop
stos
xor
les
aas
inc
imul
hlt
inc
test
loop
daa
je
pop
push
mov
pop
or
rorb
loope
lret
xchg
xchg
in
popa
inc
mov
into
push
and
adc
sbb
mov
mov
sub
pop
ficompl
add
jecxz
xor
aam
cs
jae,pn
fistpll
hlt
adc
gs
lahf
frstor
es
cmpsb
sti
or
push
jbe
pushf
je
jns
push
cmpsb
imul
xor
pop
iret
mov
pop
xor
cltd
mov
sbb
mov
out
sbb
fmull
push
add
sbb
cmpl
and
sub
dec
aas
rolb
fadd
sub
or
das
rclb
jno
negb
sbb
lret
dec
fimull
scas
and
xchg
loope
and
adc
and
add
testb
int3
std
aas
inc
and
ss
loope
popa
insl
add
push
popf
xchg
cmp
faddl
movsl
adc
push
out
icebp
loope
dec
mov
mov
fimuls
sbb
out
rorl
lret
mov
ficompl
lahf
push
rol
sbb
jb
mov
adc
jmp
test
enter
out
dec
sbb
xchg
loopne
std
cmpsl
sarl
test
xchg
and
sub
xor
dec
shll
adc
insl
fisttpl
std
jg
lret
xchg
in
popa
jbe
jno
adc
outsl
add
in
xchg
push
repnz
xlat
dec
add
push
xor
daa
inc
enter
aaa
in
jle
fcomp
xchg
stos
pop
icebp
push
add
ret
mov
sahf
pop
dec
dec
push
popa
cmc
in
addr16
nop
daa
insl
inc
test
sub
inc
loope
in
out
movsb
xor
mov
xlat
scas
pop
repnz
popf
test
pop
inc
xchg
jae
shr
xchg
or
jg
pusha
mov
out
mov
dec
mov
or
jl
xchg
test
inc
dec
xchg
xor
ret
cmp
xchg
movb
fldt
inc
inc
test
sbbl
inc
push
push
sbb
imul
test
mov
push
repz
xor
dec
inc
xchg
enter
dec
imull
ds
xchg
bound
or
and
inc
jmp
sub
orl
insl
inc
das
push
mov
or
mov
ret
ljmp
imul
es
mov
or
call
hlt
mov
test
dec
push
mov
xchg
test
dec
int3
scas
into
mov
inc
xorl
inc
cmpsb
dec
inc
pusha
mov
jo
adc
out
daa
jnp
je
arpl
fmull
call
push
out
imul
mov
dec
into
mov
out
add
daa
mov
jl
imul
push
pop
je
test
jecxz
push
jmp
rclb
ds
xchg
stos
orb
inc
in
or
cmpsb
pop
aam
cmp
mov
roll
ds
orb
dec
mov
cmp
push
jg
lea
push
imul
shlb
in
icebp
mov
inc
stos
outsl
and
shlb
mov
or
and
pop
dec
jg
xchg
xchg
lret
ds
sbb
sti
and
add
loop
sub
out
stos
xchg
jecxz
sti
js
scas
aas
pusha
loopne
push
fsts
test
xchg
pop
enter
loopne
call
daa
cmp
cmp
into
dec
pop
and
add
mov
jns
xchg
or
aaa
ss
xchg
and
or
adc
popf
data16
outsl
sub
and
loopew
lods
imul
inc
inc
rolb
mov
test
add
les
or
movsb
popf
dec
push
mov
mov
lret
lahf
xor
jns
dec
ror
mov
push
mov
push
cwtl
pop
aam
hlt
jbe
xor
ja
fmulp
mov
insl
hlt
das
mov
in
cmpsb
popa
lret
cmpl
jnp
aaa
insl
xor
sarb
mov
pop
cmc
jnp
sub
push
ljmp
push
dec
or
int
faddl
imul
dec
cwtl
pop
sar
rep
ficomps
dec
push
scas
inc
daa
js
test
sub
adc
mov
fldenvs
fneni(8087
xchg
cwtl
ret
scas
and
sub
or
mov
in
jo
pop
or
cltd
cmp
cmp
jne
inc
xor
outsl
mov
cmc
jno
lcall
mov
cmp
jnp
add
sbb
test
or
dec
dec
int3
cli
sub
adc
xlat
pop
or
mov
daa
dec
jbe
mov
pusha
jecxz
xchg
imul
loop
insl
sub
addr16
cmp
fwait
mov
orl
aad
jbe
dec
std
pop
cmc
and
mov
xor
xor
ds
and
pusha
cwtl
xor
and
jne
cmp
loopne
adc
nop
mov
insl
insl
adc
sahf
orl
sbb
mov
hlt
push
fimull
out
rclb
bnd
mov
push
sbb
jl
mov
iret
jge
sbb
faddl
mov
add
pop
adc
push
fs
or
fidivs
pop
loopne
repz
dec
cs
inc
pop
xchg
das
jge
dec
stc
inc
iret
jbe
pop
push
cmp
or
aas
daa
ljmp
call
or
jb
adc
mov
les
out
or
or
cmp
push
mov
jae
xchg
sbb
cmp
add
inc
mov
jb
scas
std
push
mov
mov
dec
cmpsl
mov
cmc
push
jmp
pop
ret
fldt
test
stc
enter
pop
dec
pop
jae
pop
fdiv
dec
ret
fisttps
in
pop
xchg
mov
and
and
lods
pop
sub
xchg
xchg
lds
arpl
xchg
clc
mov
subb
add
clc
mov
mov
mov
je
in
in
cmp
cmp
cmp
xchg
sub
pusha
pop
pop
pop
addr16
in
jnp
std
out
arpl
jl
ret
cmp
lret
and
and
add
mov
lods
nop
mov
stos
sub
inc
add
lret
sbb
inc
push
popf
arpl
cmp
inc
inc
or
cmp
mov
orl
in
sub
sub
orl
dec
fisttpl
ds
or
popa
inc
jb
fcmove
push
mov
lods
ja
stos
sub
push
je
adc
cmp
xchg
je
mov
cmp
xor
mov
or
inc
jo
shl
das
push
sub
xchg
xor
sbb
dec
mov
adc
inc
cwtl
ret
les
test
daa
popf
add
mov
xor
mov
ss
mov
outsl
adc
icebp
fwait
inc
aaa
arpl
lods
mov
push
pop
pop
add
popa
repnz
mov
mov
ret
jge
or
fwait
out
scas
lock
mov
mov
dec
xchg
adc
clc
fsubl
push
in
cs
filds
enter
mov
mov
and
add
xlat
aaa
sub
insl
mov
insb
jae
leave
cmpsb
mov
mov
lret
lcall
xchg
xchg
sbb
add
xchg
les
loop
in
ja
push
xchg
inc
mov
fcmovnbe
loop
mov
filds
cmp
int3
xchg
mov
pop
jae
nop
jmp
arpl
mov
and
cli
fs
test
adc
mov
mov
mov
enter
sbb
lock
int3
push
push
sbb
mov
sbb
mov
pop
dec
mov
pop
dec
xor
ja
in
and
add
push
repz
pop
ja
mov
leave
jge
mov
cmpsb
mov
hlt
shll
cmp
add
shl
fdivs
test
aaa
lea
lret
aad
sbb
addb
and
ds
cmp
fwait
jg
pop
shlb
sub
roll
jl
inc
and
pop
jmp
inc
in
mov
pop
outsb
sbb
loop
cwtl
adc
es
cmp
sbb
rcll
mov
data16
inc
pop
repz
lret
arpl
fwait
lahf
into
cli
pop
outsl
fbstp
pop
movsl
sbb
cmp
xor
jae
jge
jmp
lret
fiaddl
fsubs
sub
dec
sti
jne
sbb
test
ljmp
xor
xchg
inc
push
sbb
mov
dec
movsl
out
cmpsb
andb
lock
mov
clc
int
pop
dec
or
aas
lcall
je
sti
inc
and
and
mov
adcb
sbb
or
jne
frstor
repz
jmp
mov
data16
inc
ljmp
mov
or
and
xor
frstor
imul
subl
mov
sub
and
in
les
push
mov
leave
lcall
xchg
repz
mov
clc
lret
push
push
mov
dec
dec
fsubrl
cli
push
dec
and
fldt
mov
stc
lret
adc
pop
rclb
sbb
hlt
aaa
add
imul
or
lret
pop
stos
orb
sub
push
aad
dec
insb
ljmp
mov
or
lods
jmp
in
ljmp
mov
js
jl
sbb
addr16
call
sub
in
aaa
jb
jnp
test
push
test
mov
movsb
dec
ficompl
inc
sti
mov
inc
dec
dec
inc
adc
sub
fmul
mov
hlt
or
movsb
pop
cmpsb
pusha
mov
and
es
sub
xor
pop
dec
jl
or
dec
mov
js
stos
sub
pop
shr
fwait
in
add
pop
xor
jo
repz
popf
int
cmp
inc
aaa
push
aaa
inc
xorl
adc
or
movsl
in
mov
jmp
out
gs
dec
push
push
dec
rolb
scas
mov
pop
fwait
and
cli
das
xor
stc
and
mov
fsts
adc
cmp
xor
pop
mov
push
lods
into
aaa
test
add
aas
imul
push
std
call
dec
sub
push
pop
and
loope
mov
xchg
or
imul
mov
pop
enter
imul
cmp
cmc
iret
rcrl
mov
ljmp
in
xchg
mov
inc
popa
fwait
enter
popa
enter
dec
inc
jecxz
fucomi
in
mov
mov
push
xchg
ret
xchg
xor
icebp
das
scas
jb
out
cs
in
jge
loopne
dec
cmp
cs
inc
jge
pushf
or
aaa
test
gs
or
add
and
sbb
ror
mov
in
push
dec
xor
or
mov
or
mov
insl
mov
add
jl
shll
push
insb
outsl
push
smsw
sub
es
push
dec
cmpsl
popa
push
pop
mov
mov
test
imul
repz
adc
out
xchg
insb
add
jns
add
out
aas
push
out
xlat
in
fisubrs
xor
cmpsb
arpl
push
or
in
subl
loope
rcrb
cmp
in
and
inc
sbb
inc
fdivr
loop
and
outsb
in
inc
outsl
scas
pop
adc
sub
cli
fiadds
mov
adc
lret
in
and
cmpsb
enter
mov
test
gs
imul
jbe
inc
adc
push
push
add
fidivrl
dec
roll
lcall
mov
mov
popa
jne
push
mov
or
mov
sub
addr16
aas
inc
ret
in
push
mov
mov
inc
in
orb
adc
push
mov
stos
imul
ljmp
or
aam
in
inc
repnz
mov
iret
fadd
xor
int
daa
sub
sti
test
icebp
jp
push
add
aaa
bound
aad
add
inc
adc
dec
imul
cmp
or
dec
mov
push
sub
iret
lds
or
dec
cli
mov
iret
hlt
in
push
cmc
push
arpl
notl
frstor
orb
xchg
xor
loope
adc
loopne
push
dec
push
mov
xor
arpl
pop
inc
decl
imul
lret
inc
cmpsl
jo
insl
cmp
dec
aas
pusha
mov
mov
push
repnz
add
mov
jae
loope
mov
or
call
jno
and
fidivs
ja
mov
and
scas
out
cmp
jb
arpl
dec
push
inc
push
in
popa
push
inc
adc
imul
xor
mov
ja
mov
test
mov
insb
repnz
imul
movsb
xchg
or
clc
dec
or
pusha
data16
dec
jecxz
dec
inc
mov
mov
leave
mov
xchg
ja
popf
xor
dec
fiadds
fiadds
leave
ret
push
cmp
mov
ds
lret
jne
incl
or
aas
or
add
shlb
nop
aaa
test
sub
bnd
push
xor
cmp
pop
and
enter
adc
lahf
xlat
mov
mov
fwait
call
jp
cli
pop
insl
pop
outsl
sbb
test
pop
pop
fists
stos
js
in
mov
aas
xchg
mov
mov
xchg
mov
xor
cmp
rorb
inc
je
dec
movq
dec
in
shlb
or
push
push
fisubl
inc
das
mov
mov
loop
lret
mov
into
sub
movsl
sub
xor
mov
mov
fmul
mov
int
pop
jecxz
testb
sub
loopne
xor
lcall
push
ret
push
push
add
xchg
pop
shlb
fiaddl
mov
in
call
inc
mov
sub
push
test
mov
mov
inc
dec
mov
loopne
shrb
xor
add
lret
mov
or
fisttpll
inc
push
insl
pop
inc
sbb
sbb
ret
sbb
je
pop
sub
leave
jnp
mov
ret
xchg
mov
mov
subb
loopne
loop
mov
add
inc
and
inc
pop
aaa
mov
cmp
or
int3
cld
pushf
inc
stos
adc
sbb
rclb
rorl
mov
mov
push
pop
mov
shrl
inc
sub
xchg
push
pop
insb
lret
imul
jmp
xor
sbb
pop
fsubs
xchg
and
stos
mov
aam
sub
or
ljmp
sub
outsb
sub
lret
aad
adc
dec
adcl
mov
mov
sub
and
pop
lahf
repnz
mov
xor
sti
aad
dec
push
fimuls
cmp
mov
stos
das
leave
lea
iret
add
sub
push
jl
cmp
mov
clc
inc
sbbb
jo
les
lea
xchg
call
and
rclb
xchg
mov
mov
cmp
adc
loop
xchg
adc
enter
fistpll
mov
push
enter
or
or
xor
sub
int
and
adc
lds
inc
jns
adc
out
int3
fidivs
adc
inc
and
and
and
push
or
hlt
cwtl
fbstp
ss
pop
ljmp
rcll
dec
or
cmpsl
or
pop
aas
sahf
xchg
or
adc
add
std
in
insl
jle
dec
ds
orl
xorl
loope
adc
jns
daa
out
pop
or
cmp
jg
push
sub
add
ret
inc
pusha
add
data16
adc
pusha
sti
shl
mov
subb
es
fs
mov
inc
sbb
mov
or
and
and
fisubrl
das
jae
lahf
cmp
adc
outsb
rcrl
dec
arpl
bound
fwait
xor
std
pusha
xor
mov
mov
das
inc
in
test
pop
dec
cmpsl
inc
sub
adc
cmp
inc
aam
and
pop
cmp
testb
mov
leave
mov
xor
pop
add
or
repz
aaa
fisubl
stos
or
xchg
adc
cmp
int
add
mov
fdivl
orl
sbb
mov
adc
or
fcompl
add
fwait
iretw
push
mov
or
xchg
and
push
dec
fcoms
xchg
dec
cmp
imul
loopne
mov
mov
popa
dec
dec
and
mov
repnz
sbb
imul
mov
push
ficoms
xchg
inc
add
inc
gs
loope
out
cltd
rcll
sub
sub
sub
mov
xchg
mov
lcall
gs
push
mov
xchg
inc
inc
test
pop
sub
imul
loop
fisubl
addr16
mov
xlat
xchg
iret
sbb
inc
mov
dec
imul
inc
jp
mov
out
cmpsb
adcb
movb
xor
mov
bound
mov
push
ficoms
dec
or
jae
test
imul
test
mov
imul
add
mov
in
cli
lcall
loop
sbb
fldl
sbb
dec
iret
dec
decl
and
mov
data16
cmpsb
call
into
dec
les
sti
rcrb
repnz
nop
gs
enter
incl
mov
adc
sbbl
inc
lods
and
dec
flds
dec
ljmp
mov
mov
fmul
dec
test
movb
mov
mov
fucom
loope,pt
outsb
test
dec
pop
cmp
push
and
or
nop
xor
jg
pop
adc
sarl
test
mov
xchg
push
mov
sbb
cmovbe
jge
inc
addr16
dec
xlat
dec
inc
mov
ret
sub
int
rcr
dec
call
aaa
cmp
mov
cs
fbld
and
loopne
jns
xchg
fiaddl
cmp
movsb
sti
cmpsb
add
cmp
sub
dec
ljmp
mov
dec
loope
lds
cmp
ficoms
dec
imul
cltd
test
imul
test
jle
inc
rcrb
daa
inc
fidivrl
jnp
adc
xchg
movhps
sub
and
dec
inc
pop
cmpsl
dec
xor
inc
dec
ret
dec
add
adc
movsl
test
in
fwait
pop
rcr
mov
add
mov
fadd
clc
scas
aas
mov
cmp
js
push
call
push
pushf
xor
or
mov
je
leave
xor
add
push
lods
lret
es
pop
lds
mov
jl
loopne,pn
ja
cmp
inc
mov
loopew
call
adc
mov
idivl
rcrb
mov
push
lods
push
push
fsubrs
or
jb
sbb
stos
inc
in
movsb
lret
jo
and
xchg
inc
int
cmp
dec
mov
cld
fcmovu
outsl
cmp
movsl
sub
out
movsb
test
mov
and
lds
imul
cmp
inc
dec
cmp
add
or
add
imul
int3
popa
push
popl
push
lret
scas
xlat
or
adc
loope
pop
fwait
sub
js
lret
popa
pop
mov
into
fsubs
cmpsb
adc
inc
push
and
and
jg
inc
lcall
and
pop
xchg
popa
cli
mov
mov
add
inc
or
xlat
rol
mov
or
jge
fsubr
inc
das
out
lds
in
adc
mov
inc
xor
dec
mov
andl
jbe
dec
push
testl
call
jo
test
pop
cmpsl
aas
cmpsb
jl
sti
dec
in
mov
push
subl
mov
xor
fisttps
loop
and
xlat
or
fs
outsl
mov
call
imul
fisubrl
fdivrl
fsubs
add
add
jmp
pop
mov
scas
and
sbb
push
adc
dec
inc
ja
cs
mov
xor
add
xchg
sbb
mov
inc
xchg
popa
push
and
repnz
cmp
xor
inc
aas
loope
mov
insb
add
loopne
mov
int3
loope
push
leave
jbe
sbb
or
push
cmp
pushf
popa
pop
add
cmp
and
dec
call
frstor
dec
cmp
leave
iret
xchg
call
and
push
orl
imul
test
cmp
in
inc
mov
daa
dec
call
add
pop
mov
lret
sub
cmpl
call
fisubl
inc
push
loop
shl
lcall
frstor
sar
pusha
mov
imul
sub
test
in
mov
ret
int3
test
dec
adc
mov
testb
ljmp
scas
and
rcll
xor
add
loope
xchg
and
cmp
add
push
cmp
arpl
pop
sub
or
add
or
jnp
mov
pushf
rorb
jns
dec
pop
cwtl
mov
push
leave
sbbb
mov
jl
nop
cmp
lods
pop
loope
add
pop
movsl
aad
int
jg
repnz
enter
inc
mov
jmp
nop
push
xor
ret
jo
test
push
cli
into
mov
leave
fidivrl
ljmp
sahf
enter
imul
pop
or
int3
or
jge
adcl
sub
imul
dec
rolb
push
mov
test
bound
in
push
mov
jecxz
inc
jns
fcmovu
cld
ret
repz
mov
push
ret
cmpsl
daa
inc
pop
adcb
pop
mov
cld
lock
xchg
out
fisttpl
lock
pop
jnp
sbb
cs
scas
pop
xor
push
xchg
add
push
adc
das
mov
scas
push
xor
cmpsb
sub
jnp
add
enter
push
test
test
mov
mov
in
std
loope
int
cmp
shlb
and
sub
dec
lods
mov
popf
movsb
dec
pop
and
inc
dec
mov
or
inc
in
in
push
jl
sbb
in
sub
es
sub
fninit
jnp
movsl
ljmp
jecxz
jbe
outsl
jmp
cmp
or
xchg
push
sub
movsb
mov
mov
and
add
jp
ret
sub
cmp
xor
or
jecxz
sti
inc
inc
adc
lods
testl
sub
loop
mov
push
cmpsb
lret
test
movsb
pop
mov
cmpl
cltd
nop
ss
adc
inc
mov
add
xchg
int3
roll
cmp
mov
add
adc
daa
shlb
dec
stc
or
andb
ljmp
or
sub
out
sub
sarl
or
or
out
sub
inc
inc
call
stc
cld
dec
or
int3
cmp
cs
cmpl
jecxz
mov
sbb
scas
inc
inc
pop
aaa
popl
add
xor
fmull
xor
dec
aaa
mov
sub
pop
clc
aaa
mov
ret
pop
sbb
mov
dec
or
add
imul
mov
dec
call
mov
xor
mov
mov
pop
push
aam
sbb
ret
inc
fdivrs
pop
loopne
mov
cwtl
inc
imul
dec
hlt
and
out
sub
in
cmpsb
inc
leave
inc
and
mov
stc
out
fisubrl
cmpb
pop
out
cld
mov
movsl
fsubrl
inc
test
jnp
enter
inc
xchg
inc
das
and
push
arpl
dec
int
sbb
in
pusha
andb
jno
fs
adc
stos
out
insl
mov
repnz
sahf
cmp
in
pop
push
jno
pop
int3
ret
outsb
and
aad
in
push
scas
sbb
lds
mov
sbb
inc
cmpsb
adc
mov
add
lahf
add
mov
jge
pop
inc
loopne
mov
sub
lds
xchg
dec
sub
insl
mov
lretw
sbb
xor
gs
cmp
mov
test
push
fidivl
imul
flds
inc
push
inc
fidivs
hlt
mov
pop
sub
and
sub
idivl
cmp
imul
xor
add
imul
and
in
cwtl
sub
in
dec
ficoml
jne
inc
into
shll
inc
js
inc
cmp
pusha
sub
jg
jge
sub
add
jecxz
inc
xchg
call
push
ret
jnp
out
and
sbb
mov
mov
das
mov
mov
inc
lods
arpl
sbb
les
xchg
adc
xchg
repz
mov
jne
and
sbb
in
mov
les
pop
push
xor
notb
fprem
cli
xor
fisubs
cs
mov
sbb
repnz
test
add
sub
ret
fsub
dec
fadds
dec
xchg
jecxz
inc
mov
mov
mov
inc
xor
cs
test
addr16
or
sub
enter
dec
nop
fists
orb
insl
stos
enter
adc
jo
or
fwait
adc
jmp
insb
loope
dec
mov
xchg
mov
and
xchg
fadds
cld
daa
loope
mov
xchg
pusha
push
inc
push
lea
fsubl
dec
pop
sarl
call
in
pop
repnz
jle
stos
sub
push
call
adc
mov
stos
pusha
mov
inc
pusha
cmp
add
fs
sub
mov
adc
rol
sbb
cld
fnstsw
leave
mov
into
lret
xchg
in
xchg
sbb
xorl
dec
adc
push
mov
push
xchg
je
subb
stc
mov
cmpsb
inc
xor
loopne
xor
icebp
lods
inc
xor
add
mov
xchg
mov
call
push
ds
or
loopne
lret
mov
movsl
in
sub
mov
inc
fsubrl
xchg
push
fwait
shlb
ret
inc
ret
fbld
ficomps
ret
sub
and
mov
jmp
and
cmpsb
jae
ret
or
pusha
sahf
jb
mov
or
out
adc
push
sub
sub
xchg
clc
scas
lahf
pop
inc
ficompl
imul
mov
sub
dec
rorb
loope
xlat
sub
push
cmpl
and
lret
cmp
negb
shll
and
pushf
lods
std
jecxz
repnz
mov
push
adc
les
repz
pop
inc
add
pop
mov
orl
insl
gs
nop
jnp
or
cmpsl
ret
in
mov
stc
jnp
js
add
and
mov
or
loop
mov
sbb
sarb
in
mov
mov
push
sbb
and
or
fadd
inc
lahf
incl
loopne
sub
movsl
icebp
lret
mov
fbld
dec
imulb
aad
rcll
cs
test
adc
inc
inc
mov
adc
aam
dec
lds
sbb
mov
xchg
ljmp
add
mov
xchg
mov
repz
sahf
pop
clc
mov
enter
or
sbb
shlb
inc
push
test
dec
sbb
inc
inc
push
xchg
scas
dec
cmp
lods
pop
push
dec
mov
mov
lods
ss
xor
dec
test
xchg
sbb
cmp
mov
and
out
xlat
outsl
aad
dec
movsl
jo
xor
jae
pop
or
fsubs
mov
call
fidivl
xor
jb
fcmovnu
es
mov
loope
mov
stos
cltd
push
push
loope
cmp
inc
hlt
aad
scas
xchg
dec
mov
leave
mov
stos
or
mov
lods
mov
imul
and
xor
jae
or
hlt
rcrl
xor
adc
addr16
cmp
cmp
ja
and
repz
cltd
jno
and
mov
xor
lds
jno
rcl
dec
push
pop
pop
lahf
xchg
jmp
pop
insb
enter
adc
cmpsb
add
icebp
pop
icebp
dec
jnp
inc
inc
jecxz
movsb
cmpsb
inc
fsubl
fucomp
jg
mov
jg
js
xor
lods
fwait
adc
scas
ja
dec
inc
dec
cmp
rclb
pop
ret
xchg
add
gs
mov
dec
stos
dec
loopne
repz
mov
sub
mov
mov
jmp
and
and
js
ret
or
test
and
cltd
cmp
movsb
xlat
in
pop
jbe
into
xchg
and
es
add
mov
imul
adc
fisubrs
mov
jbe
ja
jae
js
js
fisubrl
leave
stos
addr16
and
add
mov
test
jne
clc
subb
add
aam
pmullw
xchg
in
movsl
or
cli
les
jmp
jae
int
mov
push
lcall
jl
cli
arpl
mov
jecxz
je
jae
adc
in
mov
lret
lret
enter
aam
jae
push
cmp
jne
mov
call
pop
push
stos
xchg
decl
out
fs
pop
hlt
insl
dec
adc
cs
push
sarl
cli
loope
cmc
enter
adc
mov
mov
or
int
sub
ret
xchg
push
mov
cmp
dec
fisttpl
fmul
aaa
loopne
cmp
xchg
fdivl
mov
jg
jae
in
jecxz
sub
xchg
jb
and
pop
daa
and
in
sbb
mov
mov
or
jno
or
fisubrs
and
rorl
push
dec
jmp
das
dec
xchg
mov
in
inc
sub
dec
dec
inc
push
push
xchg
xchg
sbb
sub
dec
dec
shll
repnz
cmp
sub
lods
paddusb
mov
fmulp
les
lock
sub
ficompl
and
cmp
mov
xchg
std
pop
mov
inc
dec
add
push
clc
inc
push
cmpsl
xchg
pop
lods
inc
mov
pop
push
cmp
sub
xchg
fildl
sub
mov
out
pop
mov
rclb
sbb
rolb
pusha
bound
or
add
push
cmc
pop
inc
xchg
mov
int3
mov
repz
daa
mov
sti
incl
push
lock
dec
aad
xchg
sahf
popf
push
dec
mov
lock
movsb
popa
rolb
pusha
cmpsb
loopne
jge
cwtl
mov
mov
xchg
add
sub
jns
fisubl
add
cmp
push
jg
cmpsb
adcb
sarb
push
and
and
mov
jbe
lret
or
int3
dec
dec
ja
inc
push
pop
xor
add
xor
pop
cwtl
cmpsb
adc
mov
sbb
dec
dec
loope
xor
push
xchg
pop
out
mov
mov
shlb
fdivl
fimull
dec
push
mov
mov
rorl
es
inc
push
xchg
fisubrl
inc
orb
xchg
push
std
repnz
popa
pop
pop
mov
faddl
mov
cmp
imul
mov
getsec
mov
xchg
in
out
cmp
fimull
xchg
aas
rclb
pop
inc
lcall
stc
sub
lds
adc
pop
sbb
insl
ss
subl
and
sbb
mov
mov
sub
sub
add
repz
shrl
in
call
pop
pusha
dec
mov
jmp
mov
nop
lret
imul
into
sub
les
push
mov
xchg
test
jae
in
loopne
xchg
mov
pop
add
push
sbb
dec
jns
pop
and
enter
in
fldcw
fstpl
xor
cld
mov
mov
fisubrs
push
sub
ljmp
jns
pusha
addl
push
cmpsb
push
sub
mov
or
xchg
and
mov
fisttps
dec
int
js
xchg
insl
xchg
inc
clc
out
pop
mov
cs
out
mov
fcoms
dec
mov
ja
icebp
sub
outsl
inc
add
push
cltd
stos
aaa
xor
dec
les
and
aam
push
testb
aaa
pusha
cmp
dec
add
cs
xchg
mov
or
les
jb
mov
or
sbb
icebp
inc
xorb
in
popf
jg
inc
gs
cmc
cs
xchg
mov
or
xchg
nop
leave
cmp
lea
mov
push
clc
dec
inc
imul
sbb
pop
mov
mov
sub
push
pop
add
loope
ret
push
xor
inc
fsubrs
mov
ret
and
or
imulb
dec
mov
inc
pop
out
cmp
or
sti
popa
popl
test
addr16
fisubrl
ljmp
sbbb
inc
bound
data16
shl
loop
inc
and
pop
cwtl
add
dec
dec
lods
add
xor
test
mov
jbe
std
or
jg
mov
fwait
dec
and
es
inc
push
and
mov
push
shll
pop
rcrb
fstps
sub
out
inc
dec
cmc
mov
add
sub
mov
xlat
pop
sbb
cwtl
mov
ds
push
pusha
lea
sahf
or
sub
lret
repnz
out
adc
fldt
jne
in
lock
jl
push
mov
fisttps
add
scas
ss
ret
imul
push
std
pop
in
and
add
int
or
fsubrp
or
cwtl
daa
inc
in
lea
adc
and
cwtl
inc
out
mov
mov
cmp
or
mov
push
in
pop
fs
mov
mov
loope
int
jp
push
or
enter
push
pushf
and
jno
dec
in
cli
mov
lahf
xor
mov
out
add
jmp
sbb
pop
sti
and
jl
loope
ror
mov
and
scas
inc
mov
mov
cmpsb
icebp
cmp
leave
fs
mov
push
js
subb
xor
pop
cltd
cmc
cmp
mov
add
std
out
fnstcw
xchg
sbb
dec
pusha
mov
push
fstps
ljmp
add
cs
sbb
jg
out
mov
out
daa
es
mov
enter
in
xchg
jnp
movl
jmp
cmpsb
inc
xchg
nop
add
push
cmp
mov
add
sahf
mov
adc
dec
fdivrl
push
les
cmp
or
ret
data16
ficomps
sub
inc
or
test
imul
in
pop
mov
gs
negb
dec
jmp
jnp
frstor
scas
sarl
inc
add
das
xlat
or
nop
jl
hlt
cmp
data16
cs
scas
sub
rorl
addl
dec
leave
or
and
hlt
mov
les
dec
movsl
jb
popf
sarl
jbe
or
jecxz
leave
pop
xchg
rcrl
xor
dec
ffree
sub
inc
mul
lds
orb
mov
test
jge
loopne
pop
mov
jmp
mov
xor
cmp
mulps
mov
push
xchg
inc
leave
leave
dec
and
ja
mov
jno
inc
das
fisttpl
clc
icebp
andl
ret
pop
outsb
inc
fiaddl
les
aaa
ret
or
aas
sub
adc
mov
xchg
mov
push
cmpsb
enter
sbb
mov
xor
pop
loope
cltd
outsb
movsl
pop
ficompl
repz
inc
cmp
mov
pop
push
outsb
ja
addr16
push
or
sub
orb
lret
mov
jne
jns
or
popa
pop
bnd
push
das
xor
or
pop
jae
dec
popf
xchg
xchg
loope
ss
adc
arpl
das
inc
mov
and
sbb
rolb
lds
das
inc
jecxz
aad
ret
test
sbb
dec
arpl
mov
enter
add
ds
ficomps
inc
push
in
pop
pop
leave
in
sbb
pop
push
out
iret
dec
popa
sub
loopne
pop
stos
inc
dec
orb
movsl
mov
mov
xor
lods
dec
inc
sarb
vmread
pushf
rcrb
sub
loope
pop
push
pop
std
mov
enter
mov
mov
arpl
js
inc
adc
cmp
mov
test
fisttps
pop
mov
adc
add
inc
dec
mov
mov
and
xor
dec
in
loope
pop
fidivrs
or
fsubrl
jmp
into
adc
int3
dec
jmp
inc
jo
stc
or
cmp
rol
xchg
cmp
lds
sub
inc
push
or
mov
inc
mov
ja
jg
dec
inc
adc
stos
inc
in
xchg
scas
sbb
roll
adc
mov
dec
sbb
dec
lret
ret
and
sub
stos
stc
mov
loopne
push
sti
dec
data16
cmp
shll
push
dec
mov
jecxz
cmp
mov
ds
add
pop
nop
je
sub
shr
cwtl
push
pop
es
ds
data16
int3
sbb
add
inc
inc
incb
xor
mov
xor
imul
sub
mov
mov
and
hlt
mov
int
or
jl
cmovle
movsl
dec
cmpsb
sbb
in
jno
js
dec
ljmp
lahf
fisubrl
pop
lock
hlt
or
js
push
adc
scas
mov
es
sbb
jbe
sbb
push
pop
add
cli
or
xchg
call
rorl
mov
subl
adc
dec
jle
daa
push
out
xchg
pop
sub
or
bound
outsb
adc
sbb
pop
adc
and
int3
dec
add
popf
push
adc
or
cmp
push
inc
lret
adc
mov
push
push
fsts
pusha
pop
imul
mulb
xchg
scas
adc
mov
cmp
leave
pop
repnz
mov
and
pop
rol
orb
or
push
ret
dec
and
cmpsb
faddl
movb
mov
jnp
or
sbb
pop
xchg
rorl
cmpsb
sbb
mov
xlat
mov
stc
inc
or
cmpb
add
pusha
cwtl
sub
pop
inc
insl
push
mov
inc
pop
and
pop
xlat
push
pop
cmc
or
xor
add
adc
cmp
lahf
push
popf
or
jnp
fsubr
shrl
nop
ror
les
mov
xor
or
aas
enter
cmpsb
or
lcall
jg
push
inc
xor
inc
call
or
out
ret
fstl
xchg
and
jl
ss
pop
adc
inc
ret
push
in
push
add
pop
dec
add
iret
aaa
xlat
insl
fiadds
sub
clc
jmp
push
fildll
jo
push
dec
loopne
sti
arpl
mov
jo
fsubp
repz
shrb
jne
test
insl
sbb
lahf
inc
jg
dec
xchg
in
adc
xor
imul
faddl
or
nop
mov
clc
mov
or
xlat
mov
push
jns
or
xchg
je
inc
dec
fwait
xchg
sub
sub
and
mov
sub
stos
push
ret
jb
imul
dec
cmp
outsl
sbbl
repnz
sub
inc
jl
inc
and
leave
shrl
ret
mov
add
stos
enter
mov
dec
shll
mov
cmpsb
test
mov
jo
sarl
adc
repz
xchg
and
xchg
inc
push
and
fimuls
fsubrl
or
data16
inc
add
dec
dec
fstps
nop
fistpl
pop
add
imul
sub
jne
push
sub
mov
test
mov
sub
imul
inc
mov
ss
enter
leave
fiaddl
pop
inc
lahf
adc
insl
bound
or
add
iret
mov
mov
and
mov
sahf
jg
enter
dec
repnz
sarl
sti
pop
pmuludq
mov
mov
test
daa
pop
aas
xchg
push
or
mov
hlt
pop
cmpsb
push
mov
repnz
pop
cmpb
push
outsb
out
fists
push
movsl
dec
cmp
xor
imul
or
jne
pop
mov
pop
pop
dec
stc
add
or
cmc
outsl
mov
dec
ds
mov
shrb
push
movsl
aad
sub
and
inc
pop
ja
hlt
popaw
stos
and
in
cli
xorb
add
daa
pusha
sub
daa
add
mov
das
push
dec
cmp
pushf
and
and
cmp
sub
add
push
mov
dec
js
sbb
jecxz
push
jbe
pop
sbb
push
mov
and
jg
mov
mov
popa
and
jecxz
loopne
mov
sub
or
pop
sub
ds
adc
dec
sarl
add
inc
mov
lcall
or
jne
inc
adc
pop
inc
and
test
dec
fs
leave
sub
int3
fidivs
lods
add
stos
sub
fistl
pop
sbb
mov
push
xchg
push
cmp
add
addb
jo
inc
cmp
pop
adcb
adc
and
inc
xchg
sbb
sti
pop
cmpsb
xor
or
inc
jae
stos
push
iret
sbb
mov
mov
dec
shlb
dec
pushf
or
push
inc
pop
aaa
das
ds
pop
test
jae
mov
fidivrs
lds
fildl
push
data16
mov
fistpll
das
enter
mov
ret
push
movsl
mov
xchg
popa
mov
or
xor
mov
jecxz
pop
dec
addl
sub
ljmp
xchg
nop
pop
int
lock
jb
inc
scas
lret
pop
xor
ljmp
hlt
mov
ret
push
shrl
pop
jnp
gs
in
mov
cld
jge
xor
int3
mov
enter
xor
xor
jl
mov
test
bound
pusha
inc
loop
add
dec
pop
int3
sub
outsb
xchg
lock
shrl
mov
mov
cmp
push
adc
idiv
ljmp
shrl
mov
push
pop
mov
faddl
mov
loop
jb
lds
ret
or
pop
push
adc
sbb
test
jnp
aas
and
pop
cltd
sahf
sbb
in
leave
leave
in
jno
jo
inc
outsl
ja
mov
daa
xor
sub
fwait
imul
xor
lcall
mov
mov
push
lods
inc
test
enter
mov
call
push
cmpsb
or
pop
mov
mov
lods
dec
dec
pusha
popa
inc
dec
in
or
jg
fsubl
movsl
mov
call
add
fstpt
pusha
jo
push
dec
cmpsb
faddl
in
lahf
add
jae
mov
test
ljmp
hlt
jl
inc
loop
or
addb
pop
lock
cs
jmp
xchg
xchg
pop
push
fcomps
pop
cli
gs
pop
mov
push
dec
cmp
je
aaa
nop
rorb
add
loope
push
cmp
jecxz
push
icebp
call
push
push
push
mov
inc
mov
mov
inc
add
imul
dec
inc
and
pop
pop
mov
stos
imul
adc
leave
mul
xor
and
cmpsb
in
call
dec
mov
fsubs
mov
dec
jecxz
and
mov
jg
cmp
cmpsb
nop
jmp
rcr
xchg
std
mov
dec
lods
adc
test
popa
in
or
or
pop
adc
aaa
mov
sti
dec
test
xchg
pop
icebp
ljmp
cli
or
lret
inc
sub
cmp
cmp
repnz
test
pop
pop
and
jb
into
das
repz
xchg
stc
cmpsb
fmull
out
pop
dec
inc
test
dec
in
push
mov
repnz
jmp
into
sbb
jecxz
fsubrl
aam
xor
or
mov
push
daa
xchg
jbe
and
dec
loopne
ret
pop
mov
mov
out
stos
mov
mov
pop
rorl
cmpsb
orb
or
test
fdivr
lods
or
push
into
xchg
push
jns
pop
dec
sbb
imul
lods
jl
mov
int3
or
mov
pop
jecxz
loop
cmp
outsl
cwtl
shlb
and
imul
xor
push
insl
cmpsb
xchg
push
icebp
sarb
pop
adc
xchg
icebp
movb
fisubrl
imul
mov
push
adc
addl
push
mov
ffreep
loope
mov
dec
mov
enter
repnz
jne
xchg
mov
sti
push
inc
xorb
or
imul
out
cmpsl
inc
arpl
scas
fimull
and
jle
pushf
cltd
aad
dec
imul
mov
and
jne
xor
orl
int3
jnp
adc
adc
push
loope
int
sbbl
daa
sbb
inc
sbb
or
pop
test
dec
dec
adc
cli
rcrb
loop
enter
pop
jecxz
inc
nop
and
test
sub
add
add
stc
int3
pop
js
fimull
mov
pusha
pop
sub
fildll
fwait
inc
pop
mov
mov
push
mov
adc
inc
cmp
popf
add
adc
sti
int
in
fs
sbb
cli
or
fadds
out
cmp
add
add
mov
xor
popa
stos
add
adc
movsl
repz
and
inc
mov
jns
cmp
push
int3
insl
loope
repz
out
dec
pop
add
in
xchg
incl
leave
push
enter
fstl
jge
cmpsb
mov
mov
dec
adc
leave
into
pop
dec
or
nop
in
push
sub
rcrl
inc
lret
mov
js
mov
pop
sbb
sub
sub
sarl
bound
les
push
push
mov
dec
movl
or
add
adc
push
and
jb
push
inc
jecxz
fiadds
rorb
mov
pop
leave
fcoms
ficoms
shrb
push
leave
push
fiaddl
mov
pop
add
ficoms
push
mov
rcrb
push
rcrl
repnz
dec
mov
pop
repz
je
mov
rolb
in
cmp
fidivrs
cmp
je
call
dec
push
or
scas
movsl
jo
push
mov
test
repz
add
xchg
push
lahf
fistpl
fcomps
jmp
daa
sti
data16
movsl
mov
cli
mov
sub
popf
pop
das
addl
jle
mov
or
dec
pop
mov
out
jne
pop
cmp
xchg
andb
icebp
shrl
jmp
adcl
fimull
int
ficompl
std
or
pusha
adc
jnp
fisubrs
mov
scas
out
cmpsl
repnz
sub
faddl
pop
dec
iret
je
sub
jmp
shll
sub
cmp
out
lcall
stos
jne
rolb
test
cmp
loop
lds
or
inc
ljmp
adc
imul
fs
cmpsb
ljmp
dec
rorl
mov
mov
rcll
sub
rol
or
xor
fisubrl
pop
push
pop
pop
pop
repz
mov
lret
scas
insl
shlb
rclb
inc
in
push
loop
mov
inc
pop
jbe
mov
fdivrl
aad
movsl
jae
push
fbstp
push
fiaddl
mov
outsl
and
sbb
lds
lods
inc
mov
aam
dec
pop
dec
inc
jb
jmp
push
loopne
jecxz
adc
dec
and
mov
fistpl
mov
jae
adc
cs
inc
inc
and
dec
pop
cmp
mov
int
addr16
fstl
cmp
pop
push
dec
fisubl
enter
icebp
mov
or
or
in
cmp
sarl
cwtl
or
or
push
inc
mov
or
mov
stos
pusha
fidivrl
call
cmp
xchg
jbe
xchg
pop
jg
outsl
cwtl
sub
sub
adc
lret
and
fisttps
fmul
fistps
jae
popf
mov
adc
mov
repz
sbb
inc
inc
inc
enter
add
fdivp
test
fs
fwait
or
int3
pushf
mov
or
rorl
mov
pop
sbb
cmpsb
sub
dec
mov
mov
shrl
and
xor
lahf
lret
orb
cmp
mov
stos
add
or
cmp
mov
cmp
add
xchg
fisttpll
push
jge
mov
outsl
push
mov
dec
out
add
daa
nop
push
or
cmp
push
daa
int
or
imul
push
push
push
orb
xor
and
cmpsb
hlt
xorl
mov
fldenv
inc
lock
lret
inc
push
push
fsubs
mov
xchg
les
mov
push
fsubr
cmp
or
cli
shl
mov
clc
mov
push
mov
mov
popf
inc
mov
cmp
in
adc
daa
fwait
lock
cmpsb
ja
xchg
and
js
das
int
adcb
scas
push
cmp
dec
mov
aaa
adc
in
mov
push
jne
fcmovnu
jno
or
dec
xchg
and
sbb
mov
out
jne
test
mov
cmp
pop
cmp
fimull
lret
adc
outsb
ljmp
lcall
xchg
dec
rorb
lahf
add
jecxz
xor
ss
orl
filds
push
push
mov
inc
orb
push
enter
inc
pop
adc
ja
pushf
data16
jae
loope
stos
mov
jo
or
rcrb
cmpl
jae
ds
cmp
stc
cmpl
enter
ficompl
inc
push
add
fdivs
jnp
enterw
lcall
testl
out
dec
push
jl
ret
inc
adc
inc
fimuls
out
dec
and
popf
pop
dec
or
mov
flds
jae
ror
les
shl
shrb
sbb
repz
js
xchg
int
adcb
stos
adc
leave
loope
cmp
std
jmp
imul
loope
lea
inc
push
lods
mov
pop
xchg
aad
and
sarb
into
dec
faddp
cmpl
and
mov
jmp
sub
lcall
rcrl
xor
xchg
mov
outsl
xchg
pusha
jmp
stos
inc
and
call
dec
mov
sub
sbb
xorb
in
cmpsb
pop
add
mov
cmpb
mov
mov
out
mov
mov
lea
addl
movsl
iret
lcall
shr
xchg
mov
pop
je
add
sub
mov
ret
or
cmp
mov
test
adc
mov
cmp
xchg
jp
stc
cs
sahf
aas
sub
mov
jnp
mov
arpl
faddl
in
lret
add
mov
or
dec
fiaddl
mov
adc
xor
lret
dec
xchg
inc
fs
ss
ss
mov
push
and
add
jb
sbb
mov
in
mov
rolb
xchg
xor
push
xor
mov
movsb
sti
cmp
cmp
andl
call
dec
test
mov
mov
test
cli
mov
leave
fcomps
pop
sti
fsubrl
mov
sahf
inc
enter
bound
inc
sub
loop
dec
or
inc
sub
sub
mov
lcall
stos
pop
sub
push
pop
push
mov
adc
cli
call
dec
adc
push
in
mov
jae
or
add
fyl2x
and
es
addl
enter
rclb
jecxz
jnp
cmp
shll
cwtl
mov
sarb
xor
rcr
and
in
ljmp
enter
rolb
loop
dec
adc
push
loope
leave
aam
jae
ret
lcall
cmp
pop
fldl
xchg
dec
or
mov
cmp
inc
add
loop
dec
clc
jnp
cmp
cmpsb
and
pop
cmpsb
imul
xchg
mov
sub
push
hlt
leave
clc
xchg
cmp
je
ja
mov
dec
push
mov
mov
stos
push
sbb
loopne
shr
sub
repnz
jnp
push
pop
gs
mov
mov
ss
xor
inc
es
or
call
jp
sub
sbb
scas
push
rcr
sub
inc
popa
clc
movsl
imul
inc
pop
fld
push
inc
pop
repnz
cmp
shr
outsl
test
pop
cmp
addr16
and
xorb
mov
dec
dec
cmp
jle
mov
sub
pop
mov
mov
adcb
out
imul
mov
pop
add
xchg
xor
dec
movb
mov
loop
or
pop
rorb
pop
dec
push
loopne
test
daa
faddp
pop
popf
cltd
je
aaa
in
pusha
pop
adc
cld
jp
cmp
lahf
mov
jnp
and
mov
cmpsb
xchg
lret
add
mov
mov
or
leave
lret
fdivr
and
or
ret
sub
roll
inc
push
pop
and
repnz
fsubrl
test
cmpsl
sbb
pusha
sub
stos
ljmp
or
pop
in
cwtl
pop
sbb
cmp
inc
lret
fdivrl
sbb
daa
jmp
rol
mov
jge
lcall
data16
jl
and
cmp
jecxz
outsl
add
cmpb
data16
add
adc
test
daa
mov
dec
sbb
add
push
mov
imul
stos
addl
jnp
push
mov
mull
adc
scas
scas
jo
cltd
mov
xchg
cltd
call
and
jne
push
adc
dec
push
popa
fistpl
sub
pop
mov
mov
and
in
setnp
mov
rorb
bound
aam
enter
movl
andl
jae
outsb
and
xchg
pop
js
adc
fsts
arpl
lds
inc
movsl
sbb
nop
mov
pop
mov
pop
fcoms
ljmp
imul
pop
fildll
mov
mov
sbb
or
stos
adc
jmp
sbb
mov
pop
inc
jmp
dec
xchg
inc
inc
mov
pop
push
xchg
push
das
stos
push
repnz
out
rcr
cmp
push
cwtl
push
pop
push
out
lock
fwait
in
push
and
sub
stos
leave
sub
lret
inc
bound
iret
push
aas
test
push
or
dec
es
clc
jno
or
dec
jb
jo
xor
xchg
in
mov
leave
fcmovnu
and
sub
enter
push
pushw
sbb
fisttpll
push
jne,pn
dec
jecxz
sbb
hlt
or
adc
or
xchg
and
mov
out
sbb
mov
js
xchg
mov
xor
shrb
mov
jno
or
sbb
rcll
mov
inc
pusha
mov
popa
xor
out
stc
icebp
jecxz
fcompl
and
imul
stos
call
movsb
je
stos
push
or
les
outsb
or
dec
call
mov
stc
in
dec
push
jl
cmc
mov
cmp
icebp
inc
lock
pop
xchg
loope
push
adc
xor
mov
and
mov
in
inc
stos
dec
adc
movsl
inc
addl
push
in
nop
pop
int
jg
sti
fldcw
push
cmp
out
mov
out
test
dec
in
xchg
mov
icebp
in
add
dec
lcall
enter
dec
faddp
mov
addl
adc
jbe
add
inc
dec
xorl
and
dec
fists
jge
or
mov
push
inc
call
inc
or
cmp
and
or
inc
add
outsb
call
outsl
test
inc
sub
repnz
push
jg
sbb
adc
cmpsb
stc
cs
sub
inc
stos
pop
xor
into
xchg
test
data16
inc
call
mov
and
cmp
add
add
rolb
or
inc
adcb
adc
ret
adc
xor
ljmp
int3
mov
std
adc
or
dec
bound
cmpsb
fidivl
cmp
push
sub
cmp
push
inc
add
inc
push
cmpsb
pushl
and
ljmp
dec
in
inc
cli
jb
inc
pop
xchg
movsb
cmp
or
mov
stos
mov
mov
andb
pop
inc
mov
inc
fidivs
imul
lret
pop
dec
daa
or
ret
push
jecxz
or
xor
jl
ret
call
xor
or
shr
subb
add
sub
gs
add
push
mov
pop
stos
out
mov
xchg
xor
rorb
mov
dec
fadds
jne
jecxz
dec
mov
arpl
enter
scas
mov
add
mov
pop
mov
jecxz
cld
cwtl
les
jecxz
imul
in
or
mov
stc
sbbb
or
sub
cmp
ret
adc
fwait
sub
jo
mov
dec
mov
mov
add
add
out
repz
mov
enter
mov
rcrb
enter
inc
jnp
sub
fidivrs
sahf
xor
pop
push
loopne
out
xchg
sub
shlb
xor
rcrb
xchg
lock
inc
sub
push
leave
dec
cmpb
sbb
enter
inc
mov
rclb
bound
fldenv
lret
add
mov
mov
inc
or
add
data16
mov
mov
mov
push
inc
mov
fidivl
clc
in
jnp
aaa
or
enter
ljmp
cs
xchg
sub
xchg
push
cmp
add
mov
shll
xchg
repnz
daa
cli
xor
daa
rcrb
adc
dec
sub
lods
or
push
enter
dec
adc
stos
mov
xlat
test
sbb
cmpsb
sub
out
loope
jecxz
mov
cmp
xor
fsts
fcompl
jecxz
mov
xlat
inc
or
jno
adc
fwait
dec
pop
mov
sub
inc
imul
lret
mov
pop
dec
les
pop
mov
lea
jbe
add
mov
xchg
push
fbld
fdiv
jae
imul
out
mov
fs
cmc
mov
mov
sub
or
mov
sub
dec
and
mov
jg
daa
data16
lcallw
or
imul
jb
jb
cwtl
cmc
and
jno
loop
popa
js
lret
xchg
inc
cld
or
addr16
nop
dec
mov
pop
scas
mov
sub
mov
lret
inc
loope
cltd
imul
mov
js
ficompl
jb
arpl
push
pop
imul
lea
and
jo
lret
idiv
inc
sub
shlb
jno
fisttpll
mov
push
sbb
mov
dec
pop
mov
cmpsb
in
mov
rorl
xchg
push
test
xor
dec
inc
lea
popa
pop
or
add
lock
and
dec
mov
mov
mov
insl
rclb
dec
jbe
in
adc
dec
sub
arpl
repnz
faddl
and
arpl
je
sbb
int3
mov
sbb
dec
add
les
leave
in
push
mov
hlt
out
xor
inc
shll
inc
rep
pop
jnp
dec
pop
dec
sub
sbbb
xorl
cmp
jb
add
jb
xor
out
sbb
sub
cmp
jecxz
adc
inc
mov
imul
xchg
adc
jns
push
push
cmp
add
inc
stos
add
sbb
fisubs
inc
fiadds
lret
pop
repz
mov
push
pop
stos
mov
pop
pop
jbe
aas
adc
sbb
aaa
cmpsb
cmpsb
stos
pop
push
lret
add
or
in
cmp
pop
into
mov
js
push
xor
out
stos
mov
cmp
dec
mov
fcomps
das
stos
mov
imul
sub
cli
cmp
mov
dec
in
sbb
sbb
sbb
jo
cmp
stos
push
fmul
jge
dec
pusha
dec
popl
dec
xorb
push
out
ret
loope
and
std
xorl
and
add
sbb
jge
aas
pop
repz
popa
push
mov
pop
mov
test
and
xchg
fdivp
js
out
pop
stos
mov
enter
inc
call
aas
sbb
sti
test
int
stc
test
push
sub
push
mov
inc
jmp
cli
shll
dec
cmp
mov
in
xchg
shl
mov
add
fdivr
scas
mov
cmp
jl
gs
repz
jo
dec
rcrb
int
insl
int
cwtl
loopne
lea
sub
ljmp
enter
xchg
insl
mov
adcb
inc
add
iret
pop
fs
adc
pushf
push
popa
cmc
xchg
add
cli
imul
inc
mov
sbb
pushf
jne
xchg
push
push
pop
pop
enter
sub
add
jp
jae
in
rcll
and
inc
inc
lcall
dec
pop
mov
mov
stc
pusha
push
adc
pop
jge
and
or
ret
inc
mov
pop
jl
sub
dec
pusha
push
cmpsl
cmpsb
jmp
jl
je
xchg
or
push
dec
sub
movsb
jecxz
push
sbb
scas
pop
mov
fs
rorl
or
jbe
pop
pop
into
sub
mov
clc
and
loope
mov
mov
sbb
ret
xor
push
xor
in
gs
mov
outsl
shll
jb
mov
shlb
inc
fstps
leave
dec
fwait
outsl
inc
das
popa
shll
inc
enterw
pop
mov
dec
sbb
xor
inc
add
pop
enter
mov
into
cmp
and
jmp
sub
jne
sbb
xchg
movsl
xor
dec
lock
ja
aad
lret
sub
mov
mov
rcr
stos
out
or
dec
and
or
aaa
push
es
mov
push
pop
dec
xor
cld
cli
add
imul
popa
pushf
adc
dec
adc
scas
ret
outsl
js
sub
xor
mov
lret
mov
enter
jmp
in
andl
xor
insl
or
mov
xor
out
inc
jg
add
daa
xchg
ret
fsubrp
mov
add
mov
cs
jbe
mov
cltd
mov
loopne
outsb
sub
ljmp
movsl
mov
dec
inc
adc
cmpl
cmp
pop
dec
inc
shll
cmpsb
les
and
fsub
cmp
or
dec
ljmp
mov
pusha
in
dec
push
ret
jecxz
gs
lret
inc
xchg
jl
jno
mov
orb
ljmp
ds
je
ret
and
mov
jmp
addb
and
mov
out
les
ja
test
in
leave
mov
xchg
mov
or
out
ficompl
inc
imul
mov
sub
sarb
lret
xchg
lea
dec
adc
gs
fwait
push
stc
aas
lahf
into
mov
stos
ljmp
shl
mov
pop
aas
sub
inc
dec
in
inc
mov
push
fisubrl
push
pop
inc
pop
stc
mov
imul
loop
loopne
pop
cmp
lret
and
inc
in
inc
or
lods
in
les
pop
dec
mov
push
data16
sub
adc
mov
dec
loope
enter
cmp
insb
sub
push
xor
pop
dec
imul
fisubrs
inc
imul
mov
dec
lcall
push
pop
jb
enter
add
or
and
add
sbb
mov
sbb
mov
or
add
sbb
aas
inc
adc
arpl
jge
push
xor
mov
sbb
imul
dec
int3
fisttpl
in
out
leave
ljmp
mov
int3
sub
xor
mov
cvtpi2ps
movsb
pop
mov
push
xchg
dec
nop
pop
pop
sbb
dec
jecxz
cld
les
inc
in
lods
xor
pop
inc
imul
push
inc
cmp
push
adc
sub
and
testb
loop
jae
cmpsb
xor
adcl
addl
or
or
mov
inc
sub
add
and
inc
inc
inc
fldl
or
imul
add
pushf
cwtl
pop
andb
aam
mov
adc
or
mov
jg
icebp
sub
sbb
inc
call
push
ljmp
movsl
push
mov
xchg
hlt
popa
test
adc
insl
mov
lock
or
loope
data16
lahf
imul
xchg
mov
xchg
xor
and
sahf
mov
dec
sub
repz
roll
mov
int
sub
mov
mov
mov
aaa
mov
dec
cli
dec
adc
out
push
nop
aas
movsb
mov
and
out
dec
inc
cmp
xor
sub
add
jne
into
pushf
add
lret
xchg
stos
jg
add
inc
ds
pop
jmp
sub
xor
sub
mov
mov
in
fidivs
push
enter
push
and
or
jp
inc
stos
bound
enter
dec
rcl
daa
loopne
inc
imul
int3
test
popa
leave
clc
lcallw
dec
popf
inc
or
addb
ljmp
pop
fisubl
sub
cmp
dec
outsl
fisubrl
test
sub
push
adc
or
fs
stos
stc
dec
inc
add
andb
inc
cltd
stos
pop
push
xor
ja
inc
push
and
push
push
sti
sbbl
mov
aam
add
push
test
xor
stos
into
mov
inc
test
inc
aaa
sub
fstl
inc
push
cmp
cmpsl
push
sbb
int3
nop
adc
mov
out
push
jge
cmpb
or
xor
mov
daa
lods
push
dec
cmp
insb
mov
scas
daa
inc
ljmp
sub
shl
les
dec
shl
cltd
push
leave
sbb
xchg
push
and
xor
sbbb
mov
in
cmp
inc
push
repnz
aad
pop
inc
cmp
inc
sub
jecxz
inc
adc
lret
sbb
xchg
daa
add
sbb
es
leave
inc
aaa
pop
shl
stc
lret
repnz
pop
xchg
imul
and
mov
pop
jecxz
push
xlat
sub
test
pop
jne
movsb
add
inc
cmp
and
mov
and
add
pop
imul
push
lcall
push
dec
icebp
push
push
push
xchg
stos
jb
push
push
inc
push
xchg
jge
xchg
cwtl
test
xchg
hlt
fimuls
fwait
dec
das
jbe
pop
aaa
ret
push
mov
inc
hlt
ljmp
or
pusha
jae
cs
pop
pop
jl
shrl
adc
pop
cli
jmp
stc
lret
sbb
xchg
xchg
nop
push
sbb
mov
inc
cltd
push
das
aaa
ja
sub
ficoms
aad
push
inc
xor
push
cmp
xor
ljmp
lret
sub
int
incl
jo
filds
lcall
mov
mov
sbb
sahf
pop
lea
mov
xor
pop
adc
int3
push
push
xchg
mov
adc
mov
fmull
or
lods
mov
fisubl
cmp
pop
lret
sarl
inc
pop
mov
xchg
add
sbb
sub
fmull
faddp
shlb
nop
mov
mov
pop
fwait
addl
or
inc
mov
in
stos
fwait
sbb
adc
sub
dec
loop
lret
add
push
out
imul
inc
pop
fadd
lret
add
xor
xor
xchg
cmc
jle
enter
dec
pop
stos
aaa
mov
mov
sub
inc
inc
rorl
jp
lcall
addr16
mov
xchg
test
pop
mov
ret
add
push
pushf
inc
fcoms
in
es
sub
mov
cli
int
mov
or
add
mov
xor
fcmove
dec
clc
sbb
inc
addr16
sub
push
mov
sbb
mov
cmp
into
lahf
lret
or
imul
add
adc
jae
rorl
sub
daa
push
pop
sub
add
stos
or
xchg
inc
test
fimuls
push
mov
imul
ret
cli
int
dec
cmc
xor
push
xchg
insb
add
ret
iret
cwtl
adc
push
mov
stos
push
fildll
or
dec
pop
mov
pop
cmc
mov
icebp
out
scas
inc
xor
mov
dec
mov
push
jo
jae
dec
sub
jb
dec
out
insb
xor
icebp
sub
dec
xchg
sub
xorb
adc
enterw
ret
inc
xor
out
add
ljmp
out
pop
inc
ja
lock
jmp
adc
xchg
push
pop
scas
jecxz
ljmp
xchg
dec
jmp
outsb
mov
in
or
dec
ljmp
sub
insb
xlat
xlat
sub
es
and
in
mov
imul
insl
dec
xchg
dec
ret
enter
and
icebp
push
xchg
mov
jecxz
ljmp
bound
sub
ja
aam
add
dec
mov
addb
inc
imul
xor
sub
xchg
rcrl
xor
ret
push
loopne
push
xchg
push
inc
xor
xchg
sub
push
lods
jo
or
add
or
fadd
jb
xor
insb
fcmovnu
inc
enter
push
xor
lcall
xor
imul
leave
sarl
dec
xchg
jo
mov
fs
jns
push
lods
push
ftst
xchg
add
testl
push
or
std
dec
sub
push
mov
cmp
out
or
rclb
pop
stos
ret
leave
push
hlt
insb
add
out
inc
push
cmpsl
daa
mov
inc
xor
imul
push
sbb
inc
fidivrs
pop
mov
mov
adc
imul
inc
lods
adc
cmp
sub
jmp
push
call
sub
ljmp
add
mov
hlt
sbb
push
push
ljmp
lock
ror
jae
add
dec
or
mov
dec
xor
arpl
sub
in
xchg
mov
inc
cmpsb
cmp
push
jb
insl
or
mov
mov
loop
repz
lahf
dec
gs
push
repnz
out
pop
jmp
testb
dec
adc
pop
mov
movsb
cwtl
sahf
mov
ret
inc
push
ljmp
pushf
push
mov
icebp
or
mov
and
mov
or
cmp
adc
mov
push
push
jmp
outsb
lods
push
add
movhps
and
add
xor
jmp
ret
mov
mov
daa
fisubs
xchg
xchg
icebp
push
xor
and
inc
jge
and
daa
fs
push
inc
fcomp
fcomp
and
inc
xor
jp
mov
dec
xchg
lock
mov
mov
in
push
xor
enter
outsl
mov
das
dec
xchg
push
ret
fistpl
inc
push
dec
xor
fsubs
fsts
out
xor
xchg
cwtl
push
push
les
xchg
push
sub
jge
movsb
dec
jb
dec
imulb
or
xchg
xchg
jb
jmp
push
ret
out
push
xor
xor
jge
dec
push
mov
out
cmp
mov
mov
roll
mov
dec
jmp
les
mov
rcll
or
add
imul
aaa
lret
outsl
pop
in
scas
ret
xchg
rcll
mov
aaa
inc
test
jmp
lock
xor
sub
pop
mov
pop
int
fimull
andl
sbb
call
into
loopne
out
push
ss
leave
inc
inc
scas
xchg
pop
push
inc
rorb
fbstp
in
pop
fiadds
popf
ret
inc
fstpl
call
in
pop
ja
dec
mov
jg
jecxz
dec
out
imul
icebp
inc
movsl
imul
outsb
imul
dec
cmp
mov
xchg
pop
push
inc
pop
icebp
in
add
or
inc
xchg
fwait
neg
inc
or
and
pcmpeqw
aam
out
lret
xchg
push
or
les
push
sbb
mov
scas
push
sbb
addr16
fucomi
mov
call
stos
outsl
inc
in
add
ret
dec
and
cmpsl
pop
and
xchg
or
push
imul
shlb
add
xchg
aad
fs
xor
mov
cmp
mov
mov
test
jmp
fcmove
fistl
addr16
sub
ret
dec
outsl
push
arpl
pop
and
clc
dec
inc
push
test
mov
adc
rorb
cli
cs
clc
fs
push
fiaddl
es
mov
mov
inc
lock
das
xor
add
les
dec
imul
pop
mov
or
aas
pop
xchg
sbb
dec
rcl
in
pop
clc
or
fdiv
xchg
ret
imul
scas
pop
lock
pusha
es
cs
fldl2t
inc
mov
add
and
xor
inc
push
js
cmp
sub
insl
sti
sar
lds
pop
sbb
leave
jns
or
int
lahf
shl
jae
loope
popa
push
cmp
arpl
dec
pop
mov
imul
xorl
pop
xor
push
push
fiadds
sbb
inc
in
aas
aad
popa
fwait
inc
push
jge
cmp
dec
mov
pop
dec
enter
es
aaa
mov
test
lds
mov
push
xlat
int
inc
sub
mov
xor
stos
mov
mov
xlat
aaa
sub
stos
repz
push
orl
dec
sbb
loop
jl
pop
je
imul
addr16
pop
movsb
or
lret
add
sub
cs
pop
pop
repz
pop
xlat
mov
je
in
lds
xlat
mov
and
xlat
cmp
inc
lcall
sub
sub
cmpb
fwait
inc
jmp
add
hlt
fs
mov
addb
jmp
orl
insl
mov
mov
mov
jmp
in
sbb
sub
out
lock
xor
push
pop
push
in
jno
mov
pop
aad
or
jg
or
in
pushf
adc
xor
rcr
push
sbb
jb
xchg
fdivrs
in
cmc
cmp
inc
ja
ret
shrl
mov
pop
cmc
mov
sub
mov
adc
sub
scas
add
sahf
rcrb
sbb
cli
pop
pushf
andl
jmp
mov
sub
call
stc
and
xor
dec
fldl
sub
adcl
jg
add
mov
mov
pop
aam
dec
fwait
jmp
scas
push
cmp
jg
loope
mov
mov
dec
stos
xor
daa
in
or
pop
aas
rclb
fldl
idiv
in
subb
lds
mov
loope
jne
int3
jb
push
ret
scas
and
nop
lods
inc
or
imul
push
ret
imul
or
jmp
push
pop
scas
mov
or
test
stc
mov
iret
jmp
popa
fwait
mov
flds
hlt
dec
cmp
out
fistpl
xlat
and
sbb
mov
or
adc
and
nop
pusha
cmp
cld
stc
imul
mov
mov
xor
cmpsl
in
or
jecxz
cmp
mov
lret
xor
das
mov
or
lahf
arpl
or
lods
cld
or
inc
or
add
jecxz
inc
xchg
divl
cmp
sbb
mov
dec
and
daa
and
pusha
pop
shll
leave
jle
dec
or
push
jle
fcoml
cmp
fdiv
cmp
lods
mov
mov
pusha
hlt
push
movsl
add
or
mov
mov
mov
push
inc
inc
mov
sbb
xor
dec
mov
dec
movsb
add
cmpl
clc
inc
xchg
cmpsl
push
stos
mov
or
outsl
in
pop
xchg
fs
sti
push
popf
mov
aad
xchg
mov
jne
push
inc
cmp
roll
mov
pop
mov
push
repnz
sbb
mov
dec
and
or
dec
aad
cmp
ret
les
inc
clc
ds
dec
and
inc
mov
inc
rolb
or
pop
test
out
loop
popa
jg
mov
fsubrl
add
mov
mov
pop
pop
in
sub
and
clc
mov
mov
jle
inc
push
clc
loopne
lods
mov
jns
xor
and
jne
mov
xor
shlb
add
push
sbbl
int3
or
dec
decl
sbb
sub
mov
cltd
shrl
sbb
aaa
test
shll
mov
jecxz
addl
or
jg
roll
in
add
cmpsb
daa
add
inc
testl
popf
inc
cltd
sti
push
stc
pop
call
sub
dec
add
push
aas
js
push
add
jp
and
add
push
mov
xor
mov
gs
jge
push
and
xchg
or
cmovs
aaa
inc
test
jg
push
pop
push
orb
push
fstps
dec
mov
aam
enter
aam
je
mov
inc
test
mov
in
sub
leave
imul
dec
imul
add
test
mov
cltd
jb
lcall
in
push
pop
in
adc
test
dec
push
inc
in
nop
add
in
mov
stc
cmp
pop
push
sbb
lock
movsb
jae
cmpsl
jle
dec
dec
fnstcw
imul
pop
je
xor
pop
imul
dec
ja
or
aad
lcall
leave
fwait
inc
inc
or
push
iret
and
lret
inc
add
adc
fwait
lods
xchg
ljmp
inc
inc
iret
sub
shlb
dec
lret
or
add
pop
shlb
fcmovnbe
inc
and
sub
xchg
xor
arpl
push
int
add
inc
push
sub
dec
rolb
jmp
mov
sbb
or
xor
cmp
outsl
push
mov
loop
jecxz
ret
add
inc
insb
mov
push
sub
in
ljmp
js
dec
add
sahf
mov
rolb
iret
xchg
lock
mov
inc
mov
sub
hlt
iret
cli
sub
dec
divb
pop
loope
hlt
sbb
add
in
adc
out
iret
enter
cmovae
loope
fcmovnu
int3
pop
pop
cmpsb
imul
xchg
nop
xchg
stos
sbb
loopne
lret
insl
call
cmpsb
in
jl
mov
lret
mov
or
stc
sbb
and
jl
enter
rdpmc
sar
xchg
ljmp
ficompl
adc
dec
xlat
cld
fwait
ljmp
cmp
fisubrs
enter
lock
or
adcb
sbb
push
repnz
jle
and
adc
pop
pop
dec
mov
adc
jb
cmp
inc
out
inc
adc
fsin
cmp
ds
dec
jp
in
xor
les
ljmp
iret
add
jmp
aad
add
and
out
or
insl
and
in
push
ljmp
aaa
inc
cmp
xor
loopne
and
or
daa
or
aaa
xor
loopne
xor
bound
cmpsb
mov
repnz
stos
xchg
loop
add
push
dec
in
mov
jbe
frstor
inc
sub
sub
jo
mov
jmp
sub
or
mov
dec
dec
push
rolb
icebp
add
int
addr16
in
cmp
push
mov
dec
jno
daa
paddusb
mov
jne
add
inc
fcomps
push
and
lret
cmpsb
push
lcall
leave
mov
cmpsb
push
cmp
dec
and
psllw
dec
imul
dec
out
repnz
loopne
push
call
sub
adc
sbb
sub
pop
push
fidivrl
cmp
dec
aas
pop
xchg
sarb
cmp
or
fwait
loopne
adc
pop
testb
cmp
sbb
push
aam
mov
mov
in
shlb
or
dec
fcomp
dec
sub
ljmp
lret
or
inc
pop
rorl
icebp
leave
iret
add
daa
hlt
lea
lcall
es
inc
ficomps
std
ret
aam
ret
jp
dec
push
jmp
leave
cmp
imul
jmp
pop
in
dec
pop
imul
decl
repnz
incl
cmp
or
or
or
clc
loope
out
cmp
es
dec
dec
stos
in
inc
cmp
test
loope
pop
fimull
mov
in
cltd
push
and
inc
or
sbb
dec
dec
subl
das
mov
jb
dec
pop
shlb
dec
movsb
pop
pop
push
or
mov
adc
dec
call
mov
lret
dec
cmpsb
sar
insb
inc
outsb
and
int3
ljmp
or
pop
add
push
cmp
mov
sub
mov
test
pop
loopne
sbb
rcrb
das
nop
sub
ret
fisubrl
pop
andb
pop
aam
loope
inc
add
mov
push
aaa
dec
lret
sbb
daa
test
or
push
dec
cwtl
adc
sbb
loop
push
add
rclb
ss
loopne
inc
into
pop
arpl
pop
leave
fsubrs
sbbl
dec
stos
sub
fstpl
and
cmp
xchg
pop
lret
rcrb
stc
rorb
das
push
arpl
push
pop
xchg
xor
arpl
mov
leave
mov
bound
jmp
nop
jge
or
add
call
roll
jg
add
shrl
lock
pop
sub
addb
mov
inc
dec
push
ljmp
push
dec
pop
aad
stc
mov
jns
mov
pop
lds
fisubrl
push
mov
pop
repnz
and
adc
jecxz
pop
pop
fs
stc
sti
dec
sbb
loopne
sub
stos
addr16
stos
cmpl
jb
jne
mov
cmpsl
jae
jne
xchg
out
fmull
xchg
call
gs
in
cmpsl
scas
jmp
mov
loopne
pop
or
lcall
pop
test
add
adc
loope
loopne
dec
pushf
shl
gs
pushf
xchg
mov
inc
arpl
mov
xchg
push
and
fmuls
adc
sub
movsl
cltd
xlat
rorb
xchg
or
pop
fistpll
ss
xor
out
dec
adc
xchg
push
repz
pop
daa
pushf
mov
mov
out
mov
addr16
std
pop
or
sub
jge
or
sub
mov
mov
fimuls
clc
lret
mov
dec
scas
mov
dec
xor
and
xchg
leave
loope
dec
push
jbe
mov
lock
repz
inc
lock
enter
stos
sub
loop
shrb
xorb
xor
icebp
scas
and
ss
xchg
inc
out
or
jmp
dec
add
stos
leave
sarb
movsb
shrl
lock
shl
pusha
shll
xor
sbb
xchg
xor
aas
mov
stos
push
mov
testb
inc
xchg
xor
mov
push
pop
adc
mov
pop
into
out
and
and
pop
les
mov
xor
mov
leave
mov
shlb
outsb
dec
xchg
jnp
mov
aas
push
cmp
mov
jnp
shrl
pop
int3
aaa
sahf
dec
rolb
mov
inc
pop
pop
das
push
mov
test
dec
or
add
aam
pop
push
stos
mov
dec
push
inc
mov
shrb
ret
push
pop
xor
xor
int3
push
adc
pusha
dec
inc
or
bswap
mov
les
scas
xchg
sbb
pop
cwtl
adcb
dec
inc
xchg
inc
push
xchg
and
dec
mov
xchg
cmp
pop
fldl
dec
mov
call
in
fstl
jo
xor
fcmovb
in
imul
fstl
fcmovu
sti
rol
sbb
add
push
jo
stos
push
mov
enter
jmp
rclb
ljmp
sub
loopne
test
idivb
pop
or
push
sub
xor
int
add
dec
out
add
sbb
fcmovne
xchg
loope
call
sub
packssdw
sbb
push
cmpsb
fidivrl
lret
stos
das
test
pushf
jp
andb
xchg
popa
repz
pop
pop
mov
movb
cwtl
movsl
fmul
sub
and
imul
leave
push
popa
sbb
hlt
cmp
sbb
inc
sarb
inc
insl
xor
lods
cltd
add
sbb
push
sti
and
mov
sbb
stos
and
pop
cmovle
jmp
lcall
pop
ljmp
add
rcl
or
mov
adc
cmp
push
aam
stos
and
add
shlb
cmpsl
sbb
lds
movsb
inc
fcmovu
cmp
and
dec
dec
mov
sahf
pusha
and
push
loopne
push
into
push
shll
iret
jbe
and
sbb
inc
inc
jecxz
pop
sub
dec
cmpsb
cltd
aaa
dec
add
fidivrl
pusha
lcall
add
es
and
addl
dec
ja
inc
inc
inc
ja
in
in
int3
inc
stos
sub
stc
das
add
imul
sti
in
int3
lldt
mov
dec
addl
and
shlb
mov
int3
mov
cmp
push
pop
pop
mov
dec
mov
orl
dec
ja
loope
inc
movsl
ds
mov
out
mov
xor
push
sarl
adc
or
rolb
sbb
jo
dec
aad
sbb
cmp
pop
dec
cmp
cmp
pop
xor
push
sub
jmp
jecxz
push
ss
mov
cltd
fiadds
repz
out
lahf
pop
popf
push
aad
pop
pusha
roll
dec
movsb
pusha
addb
sub
gs
notl
test
sub
add
pop
cmpsb
stos
std
cwtl
and
sbb
rcr
sar
and
sub
pop
or
cmp
adc
loope
xor
pop
test
push
ret
inc
jb
dec
cmp
add
mov
inc
js
arpl
fisubrl
out
dec
shll
fisubs
imul
xchg
xchg
inc
or
or
mov
xchg
insb
outsb
das
xor
mov
inc
les
lret
movsl
inc
mov
in
and
cmpsb
ljmp
enter
push
or
jae
inc
aam
ja
testb
mov
orb
xchg
mov
jp
cmp
inc
add
sbb
mov
in
call
and
arpl
or
mov
addb
daa
out
out
imul
into
les
orb
xchg
out
fisubrs
lds
xor
test
adcb
mov
shl
sub
push
and
pop
fmuls
inc
bound
fiaddl
jo
jo
and
cwtl
ret
or
cli
pop
ficoms
mov
dec
mov
and
rorl
aas
and
in
test
sub
pop
rolb
or
cmp
inc
daa
sbb
pop
ret
or
and
popa
add
xchg
xchg
or
xor
xor
mov
cltd
iret
aam
pop
cld
dec
out
subl
mov
add
int
rcll
cwtl
fs
and
lcall
cmpsb
sbb
jo
mov
in
mov
addr16
jb
adc
leave
fcmovb
es
daa
dec
inc
inc
es
xchg
push
int3
std
subl
fadd
and
mov
inc
fwait
lock
test
cmp
stc
in
test
test
aaa
ret
bound
popa
into
inc
push
mov
lret
sbb
push
shr
jmp
lahf
ljmp
popf
pop
mov
push
dec
loope
xchg
shr
in
enter
lds
ret
add
add
popl
leave
mov
out
inc
gs
pop
sqrtps
jmp
js
psrad
test
or
leavew
jo
mov
jno
orl
iret
mov
mov
push
inc
or
mov
fwait
enter
pop
mov
push
aas
fdivrl
lcall
lret
cmc
push
inc
imul
pop
out
lret
sub
enter
xlat
scas
and
pop
inc
or
push
test
inc
pop
dec
dec
cli
push
rorb
jp
inc
add
dec
imul
pop
sarl
or
dec
dec
aas
out
jl
daa
ds
scas
dec
pop
hlt
dec
jbe
test
les
pop
into
insb
pop
xor
daa
push
mov
cmovo
sahf
loopne
pop
sub
cmp
lcall
mov
adc
push
lret
and
dec
daa
and
lds
es
mov
dec
fstpt
pop
test
dec
adc
aas
jmp
pop
sub
xchg
sub
inc
xor
jae
das
cmp
dec
mov
or
push
orl
or
pop
ja
inc
cmpsl
dec
dec
adc
dec
pop
daa
inc
aaa
cmpsl
dec
or
test
or
inc
xchg
test
dec
push
pop
inc
into
or
fnstenv
fldcw
and
stos
out
inc
arpl
and
imull
dec
pop
jle
dec
pop
mov
jnp
lret
sub
push
test
mov
cmp
add
movb
dec
dec
lret
stc
sbb
daa
and
and
cmp
inc
mov
pop
int
lahf
pushf
outsb
cmp
aaa
push
ficoms
roll
inc
cmp
imul
stos
gs
push
cmp
scas
int3
dec
mov
lret
negl
cmp
addr16
lds
stos
sub
inc
and
xor
push
mov
sbb
fimuls
sbb
sub
cmp
inc
lret
push
cli
inc
mov
add
cmp
mov
xor
mov
jge
lds
or
lret
test
andl
clc
mov
insb
push
inc
scas
jecxz
shr
sahf
inc
ds
cmpsb
xorb
nop
dec
lock
fimuls
scas
fbld
inc
push
movsb
shll
fisttps
or
inc
sarl
adc
imul
inc
out
inc
daa
push
add
fldl
es
ds
sub
inc
sti
cs
sub
shrl
inc
add
mov
fwait
mov
jg
add
sub
aas
or
loope
dec
pusha
cs
jno
adc
in
fdivl
clc
sub
dec
in
cltd
testl
push
popa
or
sub
mov
add
or
inc
repnz
cwtl
pop
add
rclb
orl
xor
test
mov
test
mov
jecxz
addl
jmp
in
adc
lcall
dec
dec
sub
sbb
add
inc
mov
push
or
inc
fistpll
ds
jno
and
inc
sarl
dec
mov
fs
xchg
scas
enter
adc
movl
inc
sub
pop
push
mov
lcall
mov
cmp
ljmp
scas
fsubrp
pop
cmpsl
aas
jne
scas
inc
push
fldcw
inc
ss
dec
jae
into
gs
cmp
scas
add
aam
inc
xor
shll
leave
push
mov
daa
inc
ret
jns
sbb
sub
mov
fbld
jecxz
xchg
cmp
stos
int
paddusw
push
das
and
mov
lret
ret
mov
jmp
or
dec
test
inc
stos
loope
jmp
mov
cmp
mov
sbb
jmp
mov
enter
mov
outsl
cmp
popa
dec
std
and
jle
dec
add
push
call
and
fcmovb
and
dec
pop
je
sti
push
push
outsb
push
icebp
insb
dec
loope
mov
jno
rorl
adc
inc
negl
dec
jae
xchg
mov
add
add
jae
mov
fildl
gs
inc
sub
adc
cmp
push
jno
popf
mov
xchg
or
fistps
mov
xchg
jmp
imul
or
imul
push
or
popf
pop
fdivl
pusha
dec
outsl
jmp
xchg
xchg
push
mov
shll
pop
push
mov
adc
fwait
shlb
les
fs
rcrl
jmp
push
fsubl
add
jmp
jmp
mov
mov
inc
mov
insl
cmp
pusha
xchg
mov
push
cmpsb
arpl
das
testl
push
pop
mov
fcompl
fdivrl
jb
xor
lret
jg
or
sbb
icebp
add
ja
xlat
fildl
lcall
push
lods
int
addl
cmp
and
xchg
test
stc
xor
dec
daa
inc
add
cmpsb
pusha
ret
daa
dec
in
dec
sti
cmp
push
pop
push
mov
push
and
add
cmp
push
roll
stos
dec
test
xchg
inc
fdivs
inc
pop
arpl
aas
sahf
inc
stos
xor
fwait
movb
in
add
xor
lods
dec
cmp
or
das
jge
aam
add
push
sbb
pusha
adc
pop
in
ficompl
jl
js
xor
xchg
ret
test
ds
mov
mov
jno
test
pusha
add
cmp
loop
inc
scas
das
inc
repnz
inc
out
roll
mov
lea
mov
cmpsb
leave
bound
push
sarb
dec
inc
clc
pop
pop
sbbb
cmp
mov
xor
pop
loop
lods
fdivrl
in
leave
loope
mov
insb
mov
add
add
std
jp
cwtl
mov
iret
dec
leave
jmp
insb
orb
lds
adc
mov
ljmp
pop
icebp
sbb
cmpsl
rorb
jne
xchg
inc
outsl
mov
dec
push
stos
movb
in
data16
fiaddl
jo
push
subl
dec
cmp
imul
add
cwtl
push
push
jmp
sbb
mov
dec
dec
xchg
push
adc
or
scas
data16
jecxz
jl
cld
xchg
popf
lods
in
or
popl
or
xchg
cmp
xchg
sbb
shll
aam
push
xchg
jmp
mov
sub
inc
sub
mov
or
dec
mov
jp
cmp
sub
leave
outsl
add
cs
pop
mov
sahf
enter
xchg
xor
cmp
es
lret
pop
xchg
mov
jae
cmp
cmp
or
into
pop
enter
jae
xchg
ficompl
jae
and
mov
rol
jo
jmp
xchg
pop
jl
add
xor
cwtl
cmp
iret
jnp
push
push
mov
bound
cs
cmp
mov
push
add
or
xor
out
sahf
mov
add
in
test
lcall
sub
imul
pop
push
addr16
mov
jecxz
ficompl
dec
clts
xchg
popa
dec
cmc
push
lret
inc
insb
ret
outsl
xor
dec
add
push
add
or
mov
or
mov
dec
jl
or
mov
mov
mov
xor
mov
ja
and
inc
cmp
mov
in
push
inc
or
add
test
insl
out
mov
xor
in
mov
sbb
push
pop
sbb
push
push
jnp
and
sub
jo
addr16
cmp
xorb
or
and
pop
sbb
pop
imul
jne
dec
xchg
inc
cli
and
mov
mov
stc
jae
stc
sahf
dec
out
pop
dec
sbb
nop
cltd
in
push
roll
jo
sti
call
pop
and
mov
popa
xchg
sbb
inc
popa
inc
pop
ret
fistl
mov
add
sarb
adc
loope
and
lock
push
push
jo
jae
xor
arpl
pop
xor
scas
mov
and
jb
int
sub
mov
cmp
dec
imul
or
je
stos
pop
paddd
mov
inc
fldl
inc
add
daa
lcall
and
jo
std
in
test
inc
sub
or
imul
xor
and
sub
xchg
mov
sbb
fwait
ss
adc
cmp
es
push
lods
jne
inc
icebp
xchg
sahf
dec
pop
cmpsl
sub
in
lcall
sbbl
or
aas
mov
push
pop
inc
cmpl
pop
scas
jne
out
and
pop
push
add
push
xor
or
push
pop
add
pop
ficompl
pop
das
outsl
nop
dec
popa
fs
sbb
lahf
fdivs
sub
xchg
mov
mov
jnp
cmpsb
pushf
fdivp
scas
lods
push
xchg
lds
sub
and
test
jbe
movsl
movsb
sbb
in
xchg
daa
inc
sub
or
nop
mov
lods
rcrl
outsb
add
push
sub
inc
mov
mov
call
in
ljmp
cmpsl
addps
lret
mov
daa
dec
add
fisttps
add
test
fwait
stc
mov
pop
dec
iret
push
inc
fisttps
aad
push
dec
ljmp
xchg
jnp
xor
fistpl
cmp
stc
faddl
dec
push
int3
pop
xlat
cmp
xchg
inc
out
movsb
jp
and
adc
pusha
bsr
out
icebp
stos
push
jae
pop
sub
xor
dec
or
je
ljmp
inc
cld
lods
sbb
aaa
cwtl
pop
jne
in
cli
mov
mov
sti
test
ss
ret
dec
fnsave
add
imul
leave
dec
lret
ljmp
ret
lcall
aas
dec
mov
push
pop
add
adc
mov
sub
mov
jl,pt
lods
cmp
push
repz
inc
push
pop
adc
lahf
inc
pop
dec
pusha
mov
xor
lret
push
cmp
call
data16
mov
mov
mov
xor
or
hlt
inc
imul
fucom
fists
adc
iret
dec
mov
push
aas
add
push
gs
jg
inc
dec
sbb
fcmovne
cmp
xlat
jge
mov
scas
movsl
sub
dec
xor
or
loop
pop
enter
loope
je
cmp
mov
ret
inc
in
mov
mov
dec
mov
sahf
movsb
ds
cmc
add
jmp
dec
adc
push
mov
stos
mov
or
fs
pop
dec
test
enter
xlat
mov
daa
cmp
cmpsb
mov
dec
ret
inc
icebp
mov
adc
ss
pop
sbb
mov
mov
and
fwait
dec
mov
inc
iret
and
sahf
inc
call
sbb
add
frstor
pop
mov
cli
mov
push
xor
pop
and
sub
pusha
mov
mov
rorl
and
sbb
jl
lds
pusha
dec
cmpsb
push
dec
push
pop
popl
sbb
push
mov
int3
xchg
cwtl
dec
in
push
inc
mov
data16
push
mov
add
bound
add
sub
push
ljmp
call
bound
jecxz
int3
pop
jnp
lret
in
mov
ficoml
fsubl
sub
bound
dec
push
adc
or
leave
mov
mov
pusha
leave
xlat
decl
fistl
cmc
repnz
mov
jge
jle
mov
push
jl
xor
test
add
rol
and
sub
std
lock
imul
je
arpl
dec
cli
push
push
int
sbb
or
xchg
testl
push
test
push
insb
icebp
adc
int3
mov
std
lret
rorl
inc
fildll
std
fisubl
adc
or
jecxz
cmpsb
icebp
ss
inc
and
and
cmp
push
push
inc
xchg
imul
incl
scas
mov
mov
in
cmp
lds
and
pop
xor
lds
xchg
addr16
data16
cli
loope
repnz
daa
cmpsb
loopne
stos
add
inc
add
sbb
and
sub
loopne
or
xchg
pop
inc
sub
fdivr
add
aad
pop
mov
leave
dec
cmp
fld1
mov
sahf
dec
movsl
or
mov
fwait
sub
xchg
ret
and
pushf
or
pushf
mov
mov
lea
mov
call
jae
inc
filds
dec
add
ds
in
inc
loope
push
imul
push
iret
out
lcall
mov
adc
rcl
cli
lahf
mov
mov
fwait
add
adc
cmp
dec
cwtl
cmpsb
loop
push
jge
mov
fisubrl
or
andb
dec
and
lret
xor
pop
inc
ljmp
and
pushl
dec
jg
xor
fildll
aas
loope
jl
jns
lds
fdivrl
add
adc
jg
fmull
xchg
inc
lret
dec
outsl
dec
mov
cs
ljmp
insb
sub
rorl
ret
inc
in
inc
lret
dec
push
and
in
sbbb
ficoml
gs
pop
dec
push
inc
imul
je
fcomp
or
xchg
dec
sbbb
or
sbb
xchg
push
push
sub
cltd
push
rcrb
push
inc
cmp
fidivl
in
cmp
dec
in
cmp
sub
clc
into
push
sub
push
stos
xor
cmpsb
push
fbstp
xor
mov
aad
inc
mov
mov
jb
clc
lea
xor
pop
mov
icebp
cmp
mov
xor
mov
sub
loop
sub
insb
filds
mov
mov
test
and
aas
dec
mov
loope
popa
pop
fcoml
mov
rclb
mov
xchg
cmp
xchg
and
out
push
pop
dec
sti
in
sahf
std
aas
mov
in
pop
jae
dec
arpl
sub
inc
or
jl
je
push
and
dec
pop
out
cli
in
or
inc
aas
dec
enter
fimuls
loope
push
push
add
je
sub
pop
ficoms
loop
ds
mov
repz
pop
rcr
mov
loope
cmp
cmp
pop
dec
aad
push
rcrb
xor
daa
into
inc
push
es
pop
mov
push
sub
sub
loop
fmuls
shrl
in
xor
in
sti
rorl
jp
mov
scas
in
rorb
fdivs
xlat
add
and
inc
ljmp
lret
push
push
mov
adc
fimull
data16
pop
test
xor
movsl
ljmp
cmpsl
inc
inc
jnp
into
xor
and
dec
repnz
and
dec
sub
hlt
dec
mov
jae
lret
cmc
or
and
sub
ss
enter
adc
cmpsb
adc
mov
mov
push
sbb
push
loope
pop
xor
xchg
inc
pop
add
sbb
pop
jmp
rol
pop
adc
into
xorl
pop
and
cmp
fmul
mov
pop
repnz
sub
jnp
mov
pop
pop
mov
es
mov
pop
imul
test
fmull
sbb
pop
lock
fldl
push
clc
cmp
push
push
fstl
pop
inc
lods
stc
fmull
outsl
mov
cmp
adc
int3
sbb
icebp
outsl
out
adc
xchg
or
test
shrb
lds
inc
xchg
testb
add
mov
imul
mov
loope
xor
or
icebp
popf
sub
push
imul
cmc
pop
daa
inc
inc
add
sahf
jno
arpl
and
pop
and
mov
xor
cmpsb
jmp
imul
sub
push
mov
dec
xor
cltd
xchg
movsb
out
mov
cmpsb
and
loope
out
rolb
lret
push
push
xchg
add
jecxz
imul
lds
xchg
mov
sbb
mov
in
fwait
cmpsb
xor
sahf
jle
fadds
stc
orb
dec
sub
jle
imull
adc
xlat
pop
inc
cmp
and
lret
rcr
repz
repnz
push
jno
sbb
cltd
jle
xchg
sahf
mov
push
pusha
dec
nop
testb
stos
and
ret
push
rcr
mov
add
mov
push
clc
and
sub
lret
jae
sub
push
mov
pop
add
gs
mov
cli
fisttps
fucomi
daa
push
jmp
cmp
pop
sbb
xchg
add
push
mov
dec
aam
jae
sbb
push
incl
jno
pop
jb
xor
scas
hlt
add
mov
push
enter
inc
enter
ljmp
mov
mov
add
cmp
and
or
lcall
movl
sub
jge
or
leave
jecxz
stc
aam
loop
inc
cmp
mov
fs
inc
pop
inc
xor
sub
push
mov
aaa
in
sub
fisttpl
cmp
add
sub
ftst
or
inc
lock
outsl
loop
add
sbb
jns
cmp
xor
xchg
sub
or
pop
stos
inc
push
ror
mov
pop
xchg
mov
push
sahf
add
pop
scas
inc
adc
repnz
dec
xor
ficoml
dec
sahf
in
sub
mov
inc
and
adc
in
xchg
andb
inc
cmp
mov
sub
fildll
dec
in
out
push
mov
rorl
repnz
cmpsl
in
cmp
dec
inc
in
inc
inc
imul
int
jbe
push
inc
adc
add
push
dec
inc
or
pop
daa
sahf
out
inc
push
push
js
inc
iret
or
add
gs
adc
inc
ja
je
sbb
lock
sub
stos
jmp
inc
movl
dec
leave
stos
jb
and
mov
cmp
dec
test
movsl
lods
adc
xor
aaa
add
dec
test
lret
in
loop
loope
sbb
inc
or
inc
sbb
inc
enter
imul
inc
imul
lea
and
lea
movsl
jb
add
cmp
xchg
call
pop
mov
xchg
pop
dec
mov
jmp
aaa
xchg
jge
out
mov
fcomp
repnz
mov
in
mov
stos
loop
nop
jnp
jo
mov
inc
mov
roll
movsb
ss
pop
sarb
push
es
stos
aam
test
xchg
insb
rorl
in
insl
and
adc
gs
ret
sahf
dec
sub
pushf
jmp
shlb
pop
pop
mov
repnz
dec
pop
in
dec
and
sbb
loope
xor
leave
popa
mov
adc
mov
or
movsl
xor
icebp
je
xchg
movb
xor
pop
mov
inc
xor
fsts
adc
mov
in
mov
sarl
xchg
test
out
xor
icebp
fadds
shll
dec
inc
cmp
mov
dec
push
add
sub
arpl
mov
inc
sub
aam
and
lock
cmp
push
gs
cmc
repnz
inc
aaa
xor
adc
mov
jecxz
jle
push
subb
inc
dec
clc
sbb
adc
push
lods
jg
cld
cmc
fsubl
mov
jns
pusha
cmc
fiadds
faddl
or
sub
leave
xchg
sub
push
cmpsb
mov
fdiv
pop
adc
jnp
sub
leave
lahf
xchg
and
ret
jmp
pop
dec
sub
add
mov
leave
loopne
sbb
mov
aaa
inc
div
dec
les
jge
or
sub
sub
xchg
inc
sbb
push
adc
mov
hlt
push
add
inc
mov
loopne
add
rcl
dec
inc
sub
idivb
xor
dec
pop
xchg
and
subb
mov
or
inc
pop
and
push
les
or
fnstsw
popa
test
jne
inc
or
jnp
dec
and
fists
sbb
mov
mov
sub
pusha
imul
mov
pop
in
add
std
jb
sbb
mov
icebp
xchg
mov
repz
aaa
stc
cmpsb
push
inc
lahf
sahf
repz
jmp
add
jp
popl
sahf
mov
cmp
mov
nop
add
dec
xchg
das
inc
inc
and
jecxz
mov
xor
bound
cmp
mov
lods
cld
enter
es
mull
inc
inc
shll
dec
add
or
mov
mov
ficoml
and
push
scas
jns
pop
andl
cmp
pop
test
paddsw
outsb
iret
sbb
movsl
pop
xchg
sbb
and
in
mov
imul
ss
test
cmpl
xor
sub
add
int
sub
push
pusha
testl
pop
or
leave
scas
push
cli
jmp
add
inc
fsubl
xor
call
addr16
lods
pop
cmpsl
mov
lret
jbe
out
test
inc
insl
pop
mov
mov
es
dec
dec
push
pop
fadds
in
in
inc
xor
clc
and
fiadds
mov
sub
stos
adc
inc
jecxz
in
ret
pusha
and
sub
jo
sbb
loope
pop
gs
sbb
pop
inc
cmp
ds
mov
xor
inc
ds
cmc
subl
push
mov
scas
daa
pop
stos
dec
cmp
int
adc
fistl
adc
cs
bound
shl
push
cmpsl
push
into
clc
into
call
loopne
add
repnz
or
sbbb
into
stos
inc
in
xor
xchg
or
frstpm(287
xor
or
and
fdivl
push
loope
xor
inc
jecxz
mov
fdivrl
pop
pop
pop
lea
ss
and
and
inc
push
clc
outsb
inc
xor
sub
xchg
leave
mov
sub
sub
das
dec
test
test
sub
and
jecxz
dec
test
push
xchg
rclb
in
out
mov
pop
ret
or
pusha
lock
pop
mov
sbb
es
pop
inc
imul
xchg
stos
cmpsl
xchg
dec
inc
je
insl
adc
fcmovnb
repnz
push
dec
jecxz
sub
mov
dec
iret
leave
imul
adc
outsl
aaa
fistpl
dec
add
cmp
mov
test
dec
adc
push
inc
and
jle
cmp
lock
xchg
mov
and
mov
mov
jge
pop
in
rcr
cmp
mov
fcompl
sbb
enter
jle
popa
xchg
and
faddl
lods
int3
aad
or
inc
cltd
int
cmp
lds
imul
fwait
inc
das
cli
jmp
sbb
xor
pop
sub
or
in
enter
pushw
mov
movsl
pop
loope
xchg
enter
cwtl
inc
jge
cmpsb
push
lods
enter
fistpl
jecxz
push
add
mov
inc
xor
fs
in
add
push
hlt
add
in
cmp
outsl
lods
xor
shll
inc
lret
xorl
aas
dec
mov
dec
inc
shll
sub
xor
dec
es
push
mov
inc
pop
push
xor
pusha
cli
pop
inc
stos
push
mov
imul
les
jecxz
cbtw
pop
jg
incl
mov
jecxz
sub
call
jo
or
imul
shll
or
add
mov
jecxz
fwait
orl
jb
test
lahf
push
scas
pop
popf
add
adc
mov
mov
sub
xor
rcrl
loope
adc
in
lret
jns
ret
push
clc
iret
and
mov
jb
push
inc
push
mov
xchg
sub
cmp
bound
sub
daa
arpl
rolb
push
inc
pop
push
sbb
popa
inc
push
stos
stc
xchg
dec
icebp
xor
iret
push
jbe
sbb
aas
xlat
mov
or
dec
xlat
dec
sub
pusha
jmp
jecxz
fwait
or
dec
ljmp
addr16
inc
pop
inc
push
push
loope
jae
js
xor
adc
sbb
push
mov
mov
addb
mov
push
mov
out
adc
jns
mov
jge
xlat
xchg
jge
mov
out
loop
and
fldcw
mov
sbb
mov
and
mov
jno
dec
into
sbb
test
mov
leave
stos
pop
js
dec
test
mov
inc
mov
push
movsl
std
dec
fadd
cwtl
mov
popf
push
je
stos
push
test
ficoms
in
lods
pop
fsubs
inc
mov
mov
inc
push
loopne
sub
test
push
ret
dec
mov
scas
xor
mov
mov
lret
mov
cltd
fmuls
xchg
push
mov
mov
lods
cmpsb
faddl
jmp
and
clc
dec
xchg
into
mov
add
jo
in
mov
fucomip
repz
inc
sub
cmpb
call
test
scas
cwtl
jle
push
adcl
pusha
xor
andl
ret
aaa
rol
jecxz
sti
mov
sbb
jmp
mov
stos
push
enter
loope
add
add
test
sub
and
iret
jg
fwait
jp
mov
ds
mov
jg
sbb
mov
enter
loopne
enter
in
in
jmp
and
mov
or
xchg
cli
iret
popl
int3
pop
popf
je
sub
push
movsl
outsb
push
call
xor
int
cwtl
scas
jg
fiaddl
push
rcll
cmp
imul
pushf
add
lcall
js
mov
inc
sbb
stos
and
lcall
cmp
pop
and
fcmovb
push
loopne
pop
adcl
and
sbbb
add
cmc
inc
inc
subb
mov
mov
pop
sbb
lret
pop
imul
inc
subb
adc
cltd
pop
mov
dec
js
stc
aas
aas
fstp
les
fidivrl
sahf
out
loop
jno
lahf
call
push
mov
sbb
add
rclb
fbld
dec
dec
popa
mov
xchg
mov
or
jl
iretw
cs
icebp
dec
jmp
sbb
aas
push
push
dec
in
xor
and
lret
jae
rcl
xor
mov
mov
nop
popf
stos
jl
inc
test
xchg
and
and
bound
jbe
mov
out
shl
cld
lea
inc
xchg
into
sub
rcrb
test
dec
dec
fmull
mov
dec
and
mov
xchg
or
mov
daa
popa
xchg
cmp
or
je
rol
jg
in
or
shrb
inc
or
mov
mov
mov
pop
push
fisubrl
sbb
gs
fnstsw
push
cmpsb
stos
sub
loop
pop
push
xchg
gs
cmp
add
jmp
or
jg
int
stc
mov
repnz
icebp
lret
loop
ret
inc
push
adc
leave
fbld
sbb
sbb
fildll
cwtl
fists
push
lret
rorb
fbld
leavew
jmp
xlat
push
mov
dec
in
mov
ss
aam
sbb
cmp
xor
divl
dec
jo
in
or
insb
xor
push
and
jo
xor
mov
testb
inc
dec
fwait
fs
movsl
lods
jbe
or
and
stos
push
push
sub
xor
inc
scas
cld
xchg
xor
cs
xchg
rolb
mov
and
fldt
bound
orb
add
add
lret
mov
inc
jg
std
sub
es
push
aaa
rcrl
mov
and
mov
mov
sub
dec
cmp
cs
out
loopne
rorl
sbb
push
xchg
fcoml
in
insb
add
lcall
aad
mov
xor
das
xchg
int
loopne
jg
or
pop
mov
and
sbb
push
stc
subl
and
adc
inc
push
and
mov
or
jecxz
pop
sbb
bound
mov
or
xchg
add
or
stc
lret
add
shrl
push
sbb
push
xchg
jae
mov
insl
aas
pop
xchg
or
sub
xor
add
push
cmp
test
out
add
dec
enter
fisubrl
xchg
sbb
ljmp
fsubrl
jne
movsb
or
test
in
cmpsb
push
push
not
mov
rcll
ret
dec
sbbb
push
les
inc
scas
sub
cmp
daa
lea
xchg
xorl
dec
dec
cmpsl
in
jmp
pop
popl
imul
jg
or
sarb
pop
insl
shlb
or
sub
ss
enter
lret
rol
or
sbb
lret
mov
push
imul
cmp
push
in
clc
daa
dec
add
mov
ret
sub
and
daa
je
pop
jbe
sarl
adc
xchg
fmull
ja
jge
gs
mov
das
adc
pop
pop
inc
add
adc
rorl
jno
or
leave
jbe
movsl
push
pop
jo
cmp
jae
leave
in
cli
dec
mov
fwait
dec
or
sbb
enter
push
mov
sub
pusha
xor
mov
sub
subb
shlb
leave
adc
inc
xchg
inc
in
sbb
dec
mov
hlt
lcall
push
sbb
jmp
mov
jbe
dec
mov
lods
pop
adc
arpl
cmpb
push
push
mov
lcall
arpl
cli
dec
mov
or
adc
pusha
sbb
sub
fsub
aam
jbe
int3
pop
daa
xor
add
loopne
push
enter
data16
jne
aas
cmpsb
repnz
movsl
jb
sbb
jl
ds
jp
or
xchg
mov
push
test
pop
add
stc
enter
dec
aam
xor
stc
cltd
out
sub
inc
xchg
lock
les
loop
stc
jb
adc
pop
jl
inc
add
gs
xor
cmp
jne
jo
outsl
lea
sbb
ret
push
mov
inc
ljmp
push
mov
and
cmp
mov
dec
xchg
sub
mov
push
pop
faddl
push
test
outsb
inc
dec
test
cmp
shrb
lcall
fcoml
pop
hlt
dec
and
dec
ds
push
mov
or
cs
add
sub
loope
push
inc
sbb
jnp
pusha
and
lds
inc
jae
insb
inc
jbe
mov
clc
push
or
or
or
sti
push
inc
in
xor
or
imul
or
fdivp
decb
sbb
xor
lds
dec
fbld
fistps
mov
lahf
int3
xchg
add
or
ficomps
sub
mov
cmc
mov
pop
pop
push
mov
push
xchg
loopne
dec
push
inc
inc
mov
fisttpll
fmull
les
out
or
dec
in
addr16
and
aad
pop
xor
fcoms
out
enter
call
push
sbb
push
inc
movsl
adc
sarb
fwait
mov
and
inc
cmp
mov
imul
in
and
inc
jge
cmp
test
enter
inc
and
sbb
or
mov
adc
mov
outsb
inc
jle
dec
mov
jecxz
sub
add
dec
in
aad
aad
orb
adcb
sahf
lds
sbb
or
or
out
inc
std
mov
and
outsb
push
pop
lcall
push
push
test
and
lret
xchg
cld
mov
push
aad
adc
test
aad
push
push
cltd
cmpsl
add
icebp
addr16
imull
sti
and
test
sbb
jl
adc
push
or
sub
sbb
sub
clc
aam
add
cmp
adc
jle
and
pushf
clc
push
fidivs
sahf
das
pop
mov
sbb
movsb
inc
les
roll
js
pop
push
mov
call
gs
fsub
inc
shl
dec
ss
cmp
add
fsubrs
adc
inc
pop
stos
jle
xorl
inc
addr16
enter
dec
bound
pop
jmp
lcall
dec
out
jne
jae
inc
push
loop
dec
enter
dec
into
xchg
or
mov
mov
loopne
xchg
dec
dec
cltd
jb
push
sub
jbe
dec
fcmovu
jl,pt
mov
push
jl
faddp
iret
pop
jmp
loop
rolb
and
cmpsl
xchg
or
in
push
inc
sub
xor
cld
lret
int3
push
pop
sbb
jmp
jl
dec
icebp
jne
add
mov
add
jl
cmpsl
or
in
dec
jge
repnz
inc
jnp
mov
mov
xchg
cmp
or
js
movsb
daa
push
or
xor
fsubs
jmp
dec
popf
add
lcall
push
inc
pop
inc
add
lret
pop
add
dec
mov
mov
dec
add
stos
aas
scas
add
insb
stc
std
enter
inc
loopne
mov
dec
rcr
lds
fidivs
icebp
shlb
push
jbe
repz
iret
xlat
pop
cmp
iret
dec
pop
sahf
sarl
ret
jp
repnz
sbb
das
aas
jle
add
in
dec
movsb
rdtsc
aad
fsubp
adc
mov
shl
shl
lea
shr
js
ljmp
or
repnz
inc
popf
inc
xor
mov
dec
sub
push
das
ds
inc
cmp
dec
dec
mov
dec
mov
test
test
ja
xor
popf
rclb
test
dec
push
jns
negb
movsl
push
push
mov
jae
xorl
mov
lret
leave
mov
push
sub
incb
negl
dec
vcvttps2dq
dec
es
enter
sub
push
inc
xchg
out
data16
jne
sbb
push
les
jmp
in
add
inc
cltd
jae
add
and
aaa
add
lcall
cli
fldl
pop
sbb
int
inc
xchg
inc
stc
or
push
xlat
cwtl
mov
cmp
hlt
sahf
inc
or
sbb
les
dec
cltd
push
or
jo
and
xchg
aas
inc
adc
movsb
sti
and
fwait
inc
jl
lret
cmp
dec
xor
jl
fmuls
out
jmp
sbb
dec
enter
pop
jnp
aaa
sub
mov
imul
xchg
sub
sub
jp
or
es
xchg
ret
push
inc
xchg
lret
ds
xor
les
xchg
out
pop
rcll
ret
lods
dec
mov
jg
ljmp
jge
add
mov
mov
fsubrs
sub
jmp
dec
mov
popl
pushl
xor
fistpll
push
lahf
out
mov
xchg
mov
sub
mov
push
fcmove
or
mov
add
jae
xchg
movb
lret
dec
das
mov
call
loop
pop
fidivrl
mov
xor
mov
in
mov
jbe
mov
mov
cmp
dec
pop
insl
hlt
in
pop
dec
pop
sahf
pop
sub
pop
rol
daa
cmp
lea
add
in
xchg
jne
sbb
inc
fdivr
and
jb
insb
and
aam
cmpb
pop
adc
fildll
pop
adc
filds
and
sbb
cmp
mov
xor
cmpsl
imul
pop
fmull
push
rolb
pusha
aaa
push
push
push
iret
js
and
ljmp
add
push
xor
cmp
popf
ficomps
jbe
lret
loopne
hlt
sbb
out
xlat
adc
insb
gs
nop
imul
fidivrl
cmp
std
loopne
es
lret
pop
sbb
jnp
lret
sub
and
mov
jb
jecxz
pop
dec
fiadds
ds
mov
xor
int
mov
test
dec
add
and
in
or
push
fisttpll
es
je
push
adc
rol
test
or
pop
les
jge
inc
pusha
sub
cwtl
mov
mov
test
adc
mov
xchg
xchg
pop
cpuid
pop
cmpsl
jb
rcr
sub
ds
push
dec
add
gs
arpl
iret
jb
imul
repnz
mov
jle
mov
xor
mov
aam
stos
popa
repnz
push
fcmovu
xchg
ljmp
nop
mov
mov
and
leave
cmp
push
cmp
fistpll
xchg
fildl
cmpb
push
xor
jecxz
faddl
cmova
lcall
scas
dec
push
jbe
dec
mov
orb
ret
pop
xor
adc
addr16
popa
faddl
xor
test
jecxz
xchg
scas
xor
fisubrs
mov
xlat
and
lahf
xchg
push
add
push
push
push
jecxz
cld
jb
mov
stos
mov
pop
dec
push
cwtl
sbbl
imul
and
mov
pop
mov
pop
mov
fsubl
in
mov
ret
pop
loop
pop
add
mov
push
mov
lods
in
adc
pop
ds
xor
and
pop
and
add
sbb
mov
filds
repz
inc
int3
pop
mov
push
leave
rolb
aas
enter
and
loop
das
test
aad
push
popf
lret
adc
cwtl
jp
dec
push
mov
leave
aas
movsb
jne
insl
dec
gs
mov
mov
fisttpl
movsb
dec
sbb
inc
loop
sbb
and
push
in
add
dec
data16
inc
enter
adc
mov
loopne
add
pop
mov
lds
inc
loope
data16
in
inc
mov
je
fs
imul
pop
add
sarl
mov
mov
mov
in
cld
fs
dec
sbb
pop
ror
bound
lret
mov
and
inc
cli
cli
cs
add
sarb
dec
pop
fstps
enter
addb
scas
pop
pop
fcmovne
mov
and
push
mov
mov
inc
daa
sub
fcompl
inc
ljmp
xor
repnz
pushf
pop
nop
mov
flds
pushf
mov
repnz
out
add
clc
scas
cltd
in
sahf
xchg
mov
xchg
and
out
outsl
or
push
loopne
cli
dec
int3
roll
mov
pop
clc
sbb
imul
test
sub
ja
movsl
xor
jge
fildl
das
call
in
or
test
dec
popa
inc
data16
jbe
popa
mov
loopne
inc
fisttps
cmc
adc
lahf
cmp
gs
dec
daa
pop
add
jecxz
cli
loop
pop
adc
sbb
or
pop
xchg
and
dec
push
inc
lods
stos
call
sbbl
push
out
jo
test
fldl
rol
nop
mov
xor
ret
mov
sbb
jecxz
fidivs
sub
sub
sub
sub
sub
push
jae
push
mov
cmp
data16
pop
adcl
rclb
dec
rcl
icebp
ds
or
sbb
addr16
test
dec
adc
mov
fwait
dec
mov
add
jae
inc
push
aam
push
xchg
xorb
popa
sbb
loope
cmc
adc
xlat
xchg
arpl
push
xor
test
pop
sbb
ljmp
or
loop
dec
pop
mov
sbb
enter
inc
fimull
fnstsw
xor
or
imul
std
lds
pop
inc
dec
or
add
ss
ljmp
or
mov
imul
stos
mov
jp
jecxz
inc
push
cmp
add
dec
rol
mov
bound
cmp
mov
or
lret
mov
pop
loopne
lcall
push
call
orl
fmuls
pop
inc
pop
sbb
mov
jmp
dec
rolb
test
int
cwtl
pop
dec
fdivrs
pop
lret
mov
fcoms
pop
push
sub
mov
fidivl
push
mov
sbb
int3
stos
xchg
add
faddl
dec
cmp
fdivrl
add
imul
data16
inc
mov
aaa
mov
arpl
rcll
int
fwait
or
cmp
cmp
pop
ds
cmp
cmp
cmp
sarb
sub
xchg
mov
sub
sub
jae
dec
stos
pop
mov
push
dec
sub
jmp
mov
imul
das
repz
and
stos
fcompl
xor
push
pop
mov
in
adc
dec
xchg
cltd
adcb
mov
ss
enter
mov
jb
mov
ja
cmpsb
push
mov
stc
adc
ret
cwtl
inc
shll
inc
jmp
rsm
dec
inc
sbb
pop
js
or
enterw
movsl
cmp
xchg
mov
mov
add
jnp
and
add
decb
jmp
jg
push
ljmp
movsl
pop
cmp
imul
mov
paddsb
push
pop
loope
mov
xchg
nop
pop
roll
lret
daa
loope
mov
dec
adc
mov
data16
out
js
dec
imul
add
insl
clc
aam
loopne
call
ljmp
pushf
mov
inc
sub
jmp
mov
es
in
stc
push
mov
inc
pop
inc
ja
dec
and
add
movsl
xor
inc
mov
xchg
inc
and
or
andl
and
imul
enter
mov
das
xchg
and
mov
lcall
imul
adc
and
mov
adc
notb
rorl
xchg
sub
mov
jnp
jg
and
or
inc
xor
repz
add
or
jns
clc
imul
sahf
in
data16
enter
int3
inc
ror
dec
jge
fnstenv
mov
sbb
xor
pusha
add
or
and
and
xor
pop
ret
cmp
inc
pop
rorb
fsubrl
and
jmp
and
lret
xor
mov
sbb
mov
clc
pop
cmp
xor
mov
jbe
jge
sub
daa
and
into
call
rolb
cwtl
incl
pop
jg
or
inc
cmp
push
and
aam
data16
push
sbb
shrb
sbb
enter
int3
shrl
lods
dec
jns
sbb
push
shll
inc
and
enter
das
or
mov
flds
mov
cmp
inc
bound
and
and
add
loopne
pop
mov
cmpb
fdivrs
cli
pop
enter
xchg
stc
jb
inc
inc
pop
js
orl
hlt
addr16
cltd
xchg
popf
pop
enter
lods
enter
lods
or
pop
jo
repnz
xor
adc
fidivrs
dec
fbld
push
mov
lahf
inc
mov
addb
pop
or
lret
adc
mov
movsl
sbbb
movsl
dec
xor
movsb
shlb
js
mov
cmp
data16
push
sbb
mov
sbb
and
mull
and
cmpsl
stos
inc
aas
imul
sbb
add
in
data16
pop
pop
lods
xor
lret
fsubs
out
dec
inc
insl
add
jl
aas
and
xor
sub
js
dec
adc
pop
adc
inc
sub
mov
inc
test
xor
call
inc
outsb
ret
into
pop
pop
loope
pop
mov
pop
pop
cmp
sub
mov
sub
fsub
push
rolb
push
out
ret
mov
fiaddl
in
loope
mov
nop
das
aas
in
mov
sub
inc
mov
loope
bound
inc
or
or
cwtl
dec
jp
pop
rol
mov
aaa
enter
dec
fwait
sar
push
xlat
add
movsl
mov
sbb
push
inc
stos
sub
pop
xchg
dec
cmp
aas
test
test
nop
lea
push
fwait
mov
xor
cmp
enter
loope
roll
aad
adc
fistl
inc
in
push
call
pop
dec
sbb
inc
mov
popf
cmp
fwait
or
arpl
fwait
jmp
xchg
add
nop
or
fnstenv
inc
jg
aad
sub
sub
jl
inc
sub
ret
fwait
pop
icebp
iret
arpl
inc
sub
stc
jne
mov
arpl
ss
mov
jo
sbb
sti
sub
rcrb
dec
andl
inc
into
ss
ret
mov
mov
sub
hlt
sub
ds
dec
lea
addl
mul
pop
pop
rdmsr
sub
jl
dec
in
lret
mov
sub
out
es
ret
out
cwtl
adc
popa
aaa
repnz
mov
shrl
cli
out
imul
int
or
leave
cld
jne
das
or
insb
xor
pop
std
inc
xlat
xor
imul
sbb
cmp
dec
icebp
mov
mov
pop
bound
fsubl
xlat
xor
inc
and
mov
stos
xor
mov
push
in
xchg
fcompp
lds
fidivl
sub
fcmovb
orb
mov
ljmp
data16
cmp
pop
or
sub
cmp
push
out
inc
daa
sbb
mov
lret
cmpsb
and
sub
xor
jae
shr
jns
cmp
outsl
and
add
rorb
movsl
or
sarb
mov
dec
lea
mov
cmp
scas
out
add
ret
xor
adc
jae
dec
popa
cmp
xchg
sbb
xor
dec
out
xor
out
ret
mov
loop
fistl
dec
cmp
fimull
xchg
popa
shrb
in
in
cmp
mov
jnp
int
add
xor
lods
or
repnz
inc
inc
mov
xor
lcall
je
pushf
imul
mov
or
je
fdivrp
adc
dec
push
mov
dec
into
cmp
xchg
outsl
leave
pop
aaa
adc
add
jge
dec
cmp
sub
mov
mov
push
jl
adc
dec
dec
mov
sbbb
mov
movsb
out
cmp
sub
mov
xchg
pop
cmpsb
add
push
ret
add
lret
and
pop
push
dec
leave
dec
add
loop
dec
enter
dec
pop
dec
dec
add
dec
inc
dec
loope
push
mov
xorl
mov
pop
aaa
inc
orl
inc
sub
pop
int
add
jl
sub
rolb
fisubrl
leave
add
pop
into
xor
dec
inc
mov
sbb
data16
loop
cmc
ret
mov
mov
pop
xor
push
leave
push
enter
ds
mov
icebp
aas
lock
xor
dec
jg
xor
pushf
dec
xor
cmp
popf
or
xor
insb
ja
lods
inc
sub
test
add
sbb
mov
sub
xchg
push
aam
push
cld
or
or
or
daa
cli
jb
lds
inc
cmp
or
push
dec
sub
in
jecxz
pushf
push
sub
and
sub
rolb
cld
cwtl
inc
or
pop
rolb
out
fsubrl
adc
ljmp
cmp
in
sarl
sub
mov
cmp
in
or
ljmp
sub
jno
jne
jp
in
out
je
mov
mov
push
pop
test
jg
mov
inc
mov
pop
lds
jmp
incl
or
inc
xchg
fisubrs
ficomps
or
mov
pop
inc
inc
mov
cmp
xor
xchg
fcomps
in
faddl
pop
cmpsb
dec
ret
fwait
aad
push
mov
icebp
cmp
xchg
cmp
xchg
dec
add
shrb
imul
inc
fiaddl
jecxz
mov
cmp
test
mov
push
mov
andl
icebp
pushf
loop
stc
mov
ret
fcoms
icebp
test
daa
or
xor
insl
fsts
mov
sub
xor
iret
repnz
mov
stos
sbb
ja
pop
push
or
out
push
mov
daa
pushf
inc
sbb
enter
cltd
and
cmpsl
sub
pop
inc
js
dec
imull
mov
push
loope
xchg
adc
adc
dec
mov
jnp
nop
ret
mov
xor
cmpsl
sub
ds
leave
inc
inc
das
inc
inc
inc
lret
or
cwtl
inc
cld
lds
js
cld
test
fidivrs
arpl
loopne
inc
dec
mov
mov
scas
sbb
repz
addr16
inc
xor
sbb
repnz
cmpsb
jmp
das
rol
cmpsb
fiaddl
sub
mov
dec
mov
sub
mov
loopne
loope
mov
push
imul
cmp
or
jg
push
mov
sarb
cli
subl
adc
ljmp
jg
or
in
cmpsb
sbb
dec
jo
mov
cmpsb
loopne
stos
orb
and
add
and
orl
push
call
cmp
or
mov
jmp
xchg
clc
dec
ret
fisubl
push
andb
xor
repz
and
sub
lea
jl
and
mov
mov
inc
pop
xor
mov
lock
movl
jl
repz
push
stos
cmp
mov
push
jle
push
mov
or
mov
pushf
mov
xor
push
ret
cmp
ljmp
fiaddl
popf
dec
pushf
stos
push
cmp
fisubl
mov
push
add
fwait
lret
jmp
inc
mov
xor
pop
inc
enter
xchg
fistps
lds
es
push
inc
cltd
int3
popf
dec
in
sbb
stos
xlat
mov
jg
leave
rcll
int
cmp
cwtl
mov
data16
mov
inc
lcall
daa
cmpsl
mov
and
aaa
jecxz
loope
aas
enter
jg
or
pop
in
mov
mov
data16
xor
ljmp
rorb
lret
sub
bound
mov
movsb
mov
dec
adc
push
or
out
imul
dec
mov
inc
push
mov
xor
mov
insb
inc
insl
or
in
in
addr16
sbb
out
inc
notb
mov
popf
test
push
inc
jns,pn
scas
pop
jg
in
mov
dec
adc
dec
jmp
mov
out
popf
sbb
dec
fdivrs
jl
lock
and
and
or
mov
fisubl
xor
inc
lods
inc
dec
sbbb
add
cmpsl
popf
hlt
sbb
jno
adc
outsb
scas
mov
xor
movsb
lea
out
and
out
mov
xchg
pop
jl
inc
fmull
and
add
mov
mov
inc
dec
pusha
inc
inc
mov
inc
les
jmp
add
sub
push
fmuls
mov
sbb
pop
arpl
iret
lret
cmp
jnp,pn
mov
dec
mov
mov
cmp
xor
leave
gs
xchg
sbb
mov
cmp
outsl
cmc
pop
pop
xor
mov
xchg
ja
imul
xlat
cmp
repnz
scas
push
imul
je
jnp
insb
cltd
adc
das
ficoms
jg
inc
pushf
jb
jecxz
je
stos
push
in
lret
push
rclb
inc
cld
rclb
mov
lea
bswap
sub
cmp
leave
mov
clc
dec
cmp
add
xlat
inc
mov
mov
xor
adc
push
jl
jmp
mov
ret
lock
sbb
sub
jecxz
sbb
fwait
mov
add
inc
lret
sti
lcall
or
add
lea
xchg
lret
push
aaa
inc
xor
dec
dec
js
xorb
das
fdivrl
filds
jg
pop
add
xchg
mov
out
leave
or
and
lret
leave
push
xor
jecxz
outsl
jnp
push
cmpsb
test
les
dec
mov
xor
push
push
stos
pop
cmp
pop
mov
lds
int3
cmpsb
mov
pop
aas
loope
jb
push
inc
pusha
into
fcmovu
aas
subl
aas
add
sbb
sbb
stos
out
adc
mov
or
pop
inc
repz
push
pop
xchg
and
popf
pop
test
dec
and
pop
ljmp
mov
js
insb
add
orl
fisttpl
orl
sbb
bound
ds
and
daa
aad
sub
xor
add
int3
dec
sbb
lock
das
sbb
in
outsb
ds
add
push
sbb
add
inc
cli
inc
cli
sbb
or
add
stc
sbb
pushf
cmp
pop
int
mov
das
movsb
and
lods
mov
aas
movsl
leave
or
lret
and
aas
fiadds
xchg
inc
or
sbb
cmp
cmp
mov
pop
test
dec
inc
cmp
sbb
sbb
mov
mov
sub
cmp
push
sarb
sahf
fwait
loopne
stos
mov
mov
dec
lret
sub
in
cmp
sti
leave
mov
ss
loop
xchg
enter
loope
fmuls
cmp
and
push
mov
fimuls
xchg
sub
fdivrl
and
pop
js
sub
lcall
in
rclb
dec
lcall
inc
mov
out
and
ja
or
inc
pop
pop
pop
mov
loope
test
jp
aaa
loopne
push
out
loop
stc
push
adcb
dec
or
push
dec
in
mov
addl
stos
test
inc
add
adc
xorb
push
add
inc
fadd
jecxz
stos
xlat
lahf
xchg
and
dec
pop
int3
or
cmc
or
or
add
jne
mov
aad
sbb
dec
lods
fs
and
push
cmpsb
enter
and
fsub
xchg
sub
out
mov
adc
xorb
inc
nop
out
lret
xor
mov
sub
inc
mov
and
fbld
fidivrl
jg
push
aam
pop
adc
mov
arpl
out
adc
iret
in
imul
pop
or
fwait
lods
rcrl
aas
add
or
dec
fstl
pop
or
stc
xchg
andl
sub
mov
adc
sbb
inc
cmpl
ret
sbb
aad
mov
xchg
mov
sbb
dec
insb
sub
xchg
lahf
leave
mov
sub
aad
cmp
loope
xor
fisubs
neg
test
jae
dec
movsl
lcall
xchg
add
push
out
mov
aas
push
push
fisubl
inc
pop
enter
fld1
add
sub
shll
mov
repnz
bound
je
aaa
in
fiaddl
leave
in
push
frstor
and
sbb
outsl
aad
bound
out
addr16
adc
mov
imul
adc
ja
inc
add
mov
aad
or
xchg
mov
push
cmpsb
sub
dec
movsb
loope
sbb
imul
scas
repnz
inc
fsubr
ljmp
rcr
cmp
adc
aad
nop
cmp
dec
mov
pop
into
enter
cmpsb
adc
icebp
bound
lret
xchg
pop
frstor
sbb
jmp
mov
xchg
fisubs
adc
lea
aaa
aas
in
mov
push
cmc
or
fidivrl
icebp
inc
stos
jl
fnstcw
repnz
movsl
aam
xor
leave
cmp
lock
push
cmp
pop
pop
push
inc
fadds
in
ret
inc
cmp
xchg
inc
pop
jb
dec
inc
ret
enter
and
call
xor
call
int
mov
or
and
dec
in
or
jge
lods
jae
leave
sub
pop
cli
repnz
push
lahf
cwtl
fiadds
cmp
add
nop
or
bound
movsl
xchg
xor
dec
add
or
push
lock
dec
aas
f2xm1
inc
dec
pusha
and
xchg
inc
jmp
les
sbb
bound
inc
add
es
lahf
cli
mov
dec
pop
movl
xchg
sbb
enter
out
ja
shl
hlt
ja
in
rclb
add
enter
rcrl
mov
sahf
ret
pop
push
enter
shrl
sbb
xor
int3
cmp
lds
cli
pop
cs
mov
lret
add
inc
and
test
pop
push
pop
and
dec
faddl
inc
dec
mov
sub
adcb
cmp
roll
push
fildll
pop
popa
push
add
mov
addr16
pop
dec
and
sbb
nop
inc
cltd
fwait
mov
cmpsl
xchg
lret
mov
leave
cltd
movsl
mov
stos
pusha
pusha
cmp
fld1
enter
jmp
les
or
out
or
pop
push
movsb
imul
ss
sbb
inc
mov
push
fwait
add
in
xor
mov
es
or
jge
call
dec
movsl
pop
dec
orl
cmpsb
jle
fcoms
fwait
pop
bound
dec
outsl
dec
push
mov
add
js
sbb
ret
mov
xchg
xchg
pop
stos
lods
inc
pop
push
push
popf
pop
lret
stc
popa
mov
jp
or
xor
pop
cwtl
jne
leave
jecxz
lcall
cmp
dec
mov
sbb
dec
lock
mov
mov
xor
imul
fistpll
pop
aam
xor
je
ds
adc
cmp
jp
mov
and
daa
jecxz
add
inc
ffree
cwtl
lea
fidivrl
ret
jne
inc
mov
xchg
and
das
leave
ljmp
sbb
jae
movsb
movsl
xor
adcw
push
les
popa
in
movsb
call
mov
incl
push
pop
loope
xor
cli
dec
aas
clzero
inc
cld
mov
sub
jnp
push
push
fsts
roll
push
inc
pop
adc
pop
inc
ljmp
push
imul
int
stos
and
imul
xor
das
push
and
adc
push
mov
xchg
adc
jp
push
sbb
pop
inc
cmp
mov
cmp
sbb
inc
inc
popf
scas
cmp
movsb
inc
inc
add
inc
xchg
add
mov
xor
fdivl
ja
push
mov
mov
mov
mov
movsl
daa
jae
xorb
sbb
ret
add
sbb
jne
test
shrl
jle
jmp
pop
cmpsb
dec
add
out
movsl
ret
xchg
or
push
mov
lock
pop
xor
mov
add
mov
push
mov
aas
test
inc
lret
ret
test
aas
xchg
and
inc
or
repz
je
loop
mov
inc
mov
data16
fidivrs
push
jge
adc
repnz
dec
sub
fistps
and
icebp
jmp
ficoms
and
lock
inc
cltd
loope
dec
jmp
ficoml
dec
push
addr16
fstpl
or
push
xor
or
jo
xchg
dec
std
jb
enter
insb
inc
inc
cmp
arpl
fwait
ljmp
cmp
add
inc
push
mov
fsubrs
pop
lret
sub
and
jmp
add
ja
ljmp
sub
pop
in
push
sbb
xorl
pop
dec
ret
loop
dec
dec
imul
mov
mov
cmp
fwait
pop
daa
sbb
repnz
fistpl
push
mov
jae
lcall
xchg
xor
jne
into
pusha
lret
fcomps
aaa
mov
pop
loopne
cmp
out
xorl
int
enter
or
fwait
push
cmpsb
dec
inc
adc
inc
ss
fidivrl
pop
lret
pop
jns
push
ret
inc
dec
ljmp
cs
leave
adc
ja
mov
stos
mov
add
in
mov
push
adc
jmp
jb
pop
lea
and
push
push
cmpsb
mov
int
cmp
jp
jnp
pop
cmp
mov
icebp
in
add
cld
scas
cmp
and
xor
and
dec
nop
lret
dec
dec
push
lcall
jecxz
daa
orb
adcb
or
xor
test
inc
push
fisubs
pop
lahf
cmp
inc
push
cli
xchg
rcll
fiaddl
push
sbb
add
ret
loopne
sub
inc
pop
xchg
mov
test
dec
imul
jnp
jp
ret
mov
mov
dec
push
pop
jg
fprem
push
movsl
addb
xor
adcb
xor
stos
push
cmc
pop
std
dec
cmp
pop
outsb
in
aas
adc
mov
std
pop
cmpsb
inc
repz
pop
dec
cmpsb
inc
dec
push
leave
ljmp
jno
in
inc
cli
rcrl
pop
lods
push
mov
inc
cld
sahf
sub
jp
inc
stos
jno
stc
xchg
inc
jmp
fwait
popf
adc
fildl
xchg
inc
jne
mov
mov
pushf
mov
and
and
stos
xor
jmp
addb
and
sub
sbb
lds
dec
daa
shll
out
add
cltd
jmp
mov
sbb
xor
arpl
bound
add
add
lea
mov
sub
fcmovnu
outsl
rorl
inc
shlb
les
xlat
std
sbb
clc
or
mov
sub
mov
pop
mov
lcall
jg
aaa
adc
lcall
hlt
xor
adc
into
outsb
xor
addb
cmp
pop
push
mov
stos
cld
push
loopne
test
and
cmp
sbb
repnz
sub
jge
cltd
mov
add
push
cmp
ja
movl
push
add
push
push
jae
popa
clc
mov
pusha
std
xchg
cmp
xor
or
rclb
add
or
das
cmpsb
inc
fucom
cmpsb
jp,pn
jp
fldt
cmp
fwait
xor
enter
and
add
pop
push
jecxz
xchg
pop
add
cmp
mov
push
stos
ja
or
push
inc
in
cltd
fisubrs
xor
loopne
mov
ds
shr
shl
inc
jae
into
xchg
jo
outsb
adc
addl
mov
mov
cmpsb
and
and
or
inc
mov
jge
sub
adc
adc
cmp
mov
mov
cmp
cli
xchg
int
add
int
lods
stos
mov
je
mov
xchg
loopne
mov
faddl
repz
mov
xlat
sub
xor
cltd
stc
xor
movsb
fstpt
cli
push
add
stc
cwtl
dec
cli
mov
lock
scas
mov
dec
jmp
mov
push
push
add
ret
cmpsb
dec
add
sub
cmp
and
rcl
and
cmpsb
icebp
inc
lods
pop
js
daa
pop
inc
mov
cmc
xbegin
pop
rcll
or
sub
leave
jl
mov
stc
add
cmpsl
in
push
adc
and
adc
out
mov
fisubrs
in
jo
mov
ds
gs
loopne
push
sub
push
and
mov
jp
xchg
cmp
imul
xorb
gs
pushf
aaa
mov
in
leave
gs
push
xchg
adc
les
mov
sub
mov
inc
pushf
jmp
pop
les
repnz
adc
mov
add
shll
dec
sbb
int
jg
pop
jmp
add
mov
jo
rcrl
and
mov
mov
loope
fisubs
jo
je
stos
dec
sub
bound
lea
imul
scas
daa
vhsubps
xchg
adc
out
push
lahf
fildll
popa
notb
push
xor
push
call
push
mov
repnz
and
push
fisubrs
pop
sbb
jge
negl
pop
lret
jp
es
movsl
movsl
fidivrs
test
pushf
leave
jp
and
icebp
imul
shl
xchg
and
icebp
ficompl
mul
sahf
cli
inc
mov
pop
or
dec
dec
dec
jnp
inc
xchg
inc
or
stc
jns
cli
mov
cli
and
fisttpl
xor
outsb
or
push
or
ficompl
pop
and
push
pushf
lahf
mov
clc
pusha
cmpsb
cmp
sub
adc
test
and
movsl
data16
xor
pop
cmp
sub
rcr
push
or
xchg
jp
pop
xor
aam
dec
inc
jnp
stc
js
sub
dec
out
mov
jne
fldcw
ja
aad
jns
pop
shlb
repnz
jl
fwait
mov
scas
into
popa
xchg
sbb
fwait
adc
imul
lds
pushl
pop
data16
or
cs
inc
cmp
rclb
mov
fwait
xchg
test
xor
stos
cmp
test
gs
cmp
leave
enter
test
inc
ret
push
in
lds
push
dec
mov
ret
mov
outsb
shll
inc
mov
in
sbbl
test
cs
les
sub
in
inc
and
in
roll
sub
jg
movsl
nop
push
push
inc
dec
sar
and
xor
xchg
mov
mov
fcompl
inc
sub
inc
or
fcmovne
inc
cmp
leave
or
lret
or
es
push
cltd
xor
or
sub
aad
pop
cmpps
dec
popa
lret
adc
mov
test
adcb
sti
cmpsl
adc
rcrl
fldt
test
es
pop
lcall
clc
mov
enter
add
in
cmp
mov
movb
inc
sub
xchg
sahf
inc
repnz
pop
dec
fmulp
inc
adc
sbb
popf
sbb
jl
pop
mov
push
cli
lods
cld
daa
fs
lret
test
adc
inc
gs
xchg
add
inc
push
sbb
aas
imul
and
sbb
cwtl
dec
mov
rolb
pop
sub
ljmp
insb
stos
sahf
fwait
gs
lcallw
xchg
mov
loopw
pop
mov
cmp
sahf
dec
pusha
sahf
jne
loope
inc
dec
in
sbb
jae
pop
out
fldenv
and
mov
push
or
and
add
daa
push
cmp
fdivrl
and
dec
and
inc
insl
lret
test
push
fidivrs
ret
xchg
shll
ljmp
cli
jno
dec
jb
outsb
or
aaa
addr16
cli
add
jnp
stc
mov
cmp
xlat
lcall
sub
xchg
add
ficompl
les
inc
adc
push
imul
xchg
icebp
ds
das
fildl
js
ret
shll
push
pop
and
fimuls
xor
push
mov
je
mul
mov
lea
inc
outsl
data16
xchg
push
and
out
cli
cmpsb
inc
imul
xor
mov
scas
sub
push
pop
in
js
fdivl
popa
push
adc
repnz
pop
mov
and
lcall
js
testl
movsl
and
stos
jo
dec
les
es
sbb
shll
pop
mov
loopne
mov
sbb
call
add
adc
sbb
jmp
sub
movsb
cld
mov
adc
sbb
cs
repnz
test
ret
std
add
test
xchg
ljmp
xor
nop
pushf
dec
sbb
push
push
xchg
ficoml
mov
or
rolb
nop
mov
fiaddl
inc
inc
cmpsb
sahf
data16
and
leave
fmull
arpl
inc
das
cmpb
xor
dec
mov
sub
push
push
test
inc
aam
cmp
xchg
push
mov
sub
or
or
lret
and
sub
jnp
loope
and
repz
jns
gs
sahf
xchg
pusha
push
daa
mov
in
dec
data16
mov
or
imul
out
ret
cmp
pop
stos
add
sub
fidivl
push
dec
or
add
add
cmp
enter
dec
ror
add
cmp
imul
add
not
pop
and
dec
orb
fcmovb
mov
dec
xchg
inc
vinsertps
and
mov
ss
and
push
dec
or
jp
sub
fimuls
in
stos
sub
push
jg
lret
hlt
ficoms
xchg
enter
push
xlat
mov
ficompl
pop
imul
adc
sar
inc
jns
fdivrl
fsubl
mov
push
ljmp
jecxz
daa
mov
iret
push
pop
push
fistps
addb
dec
jg
cs
arpl
push
aam
rolb
fldenv
cmpl
nop
ret
jmp
jg
mov
mov
mov
in
mov
and
loopne
in
jae
sbb
cmp
mov
or
in
lret
bts
push
cmp
jns
mov
push
pop
jo
ret
jnp
add
jecxz
fwait
inc
xor
adc
mov
faddl
adc
push
fwait
push
and
popf
stos
cld
addl
jmp
test
or
mov
jle
jnp
fisubrs
or
ja
shlb
cmp
cltd
ret
mov
push
sbb
jnp
test
arpl
push
hlt
inc
sbb
xchg
push
dec
inc
sbb
sub
inc
and
arpl
sub
roll
fwait
or
lcall
dec
sahf
sub
xchg
pop
jno
arpl
and
fsubr
dec
dec
push
dec
pop
jbe
mov
and
ficomps
fisubrs
pop
mov
mov
test
dec
loopne
cmp
pop
adcl
mov
mov
gs
in
xchg
aam
insl
cld
dec
out
daa
and
ja
aaa
loope
sbb
ret
jmp
je
sbb
xchg
mov
push
int3
popw
jmp
je
pusha
sub
sbb
dec
imul
push
adc
ss
xorb
es
lret
inc
or
fistpll
mov
dec
pop
ror
pop
movsl
mov
repnz
int
ret
push
push
add
or
lret
xchg
push
xchg
imull
int
scas
scas
fwait
aad
aaa
ret
cmp
sbb
nop
fisubrl
lcall
inc
inc
sti
mov
mov
pop
inc
push
mov
and
xchg
xor
sub
imul
mov
xchg
mov
test
lahf
jg
ljmp
and
aad
and
leave
add
outsl
call
enter
jnp
inc
mov
fsubrl
adc
clc
inc
adc
sub
repz
aas
inc
dec
xchg
jmp
in
stos
dec
and
aam
inc
std
push
or
push
in
lds
stc
jo
or
mov
clc
cwtl
rcrb
inc
sub
mov
out
stc
xchg
and
push
dec
pop
add
ds
xchg
mov
hlt
mov
ret
inc
fadd
jecxz
mov
ret
xchg
mov
jbe
inc
mov
add
outsl
pop
add
jmp
leave
mov
fwait
cmpsl
imul
lock
in
dec
stos
cmpsl
ljmp
sbb
dec
fisubl
flds
xchg
dec
nop
add
add
sub
lods
mov
mov
xor
clc
ret
bound
pop
loopne
mov
stos
sbb
pop
mov
jle
cs
enter
stc
pop
and
mov
adc
sub
add
leave
ljmp
gs
jae
mov
push
cs
or
daa
hlt
sub
out
push
pop
push
lret
jg
push
adc
cmp
jmp
mov
add
push
and
xor
mov
cltd
ja
mov
das
jb
xchg
push
test
or
adc
or
call
cmp
sti
inc
xchg
xchg
sub
loop
les
push
xor
jg
push
lea
adc
inc
sub
scas
push
sbb
xchg
push
lahf
xchg
hlt
dec
bound
mov
xchg
mov
mov
push
adc
jb
inc
jl,pt
push
mov
inc
ljmp
subl
enter
stc
cwtl
xor
fcmovne
repz
popa
add
popa
inc
xchg
in
dec
push
test
pop
cli
push
loope
mov
lret
test
jg
repnz
inc
push
and
gs
mov
xchg
or
pusha
xor
pop
dec
int
or
mov
in
cmc
arpl
loope
mov
push
int
testb
in
sahf
inc
call
pusha
mov
jecxz
jbe
repnz
scas
cmp
mov
or
in
cmpsl
adc
or
jnp
cli
cmpsl
or
fistpl
mov
fmull
mov
pop
sti
inc
sti
push
aad
pop
dec
test
mov
pop
or
xchg
sub
mov
mov
call
aas
pop
arpl
imul
or
imul
pusha
jb
daa
stc
sbb
les
pop
loop
add
add
pop
push
fwait
xor
aad
cmp
cltd
jbe
pop
cld
push
add
fimull
cmp
fsubrl
adcl
sti
add
fldcw
call
xchg
mov
inc
pop
ret
and
xchg
dec
dec
adc
mov
cmc
ror
mov
mov
je
dec
adc
mov
adc
add
pushf
dec
adc
jecxz
cmp
mov
call
sub
sub
xchg
push
dec
adc
and
jmp
testl
dec
inc
xor
xchg
loopne
leave
out
inc
movsl
ret
inc
pop
imul
cmp
mov
dec
mov
adc
pop
movsl
add
dec
or
unpcklps
pop
mov
mov
loopne
xchg
es
mov
mov
xorl
add
mov
xor
sub
jae
sbb
mov
fmulp
jge
jae
add
cmp
fnstcw
fcompl
add
add
add
add
jno
and
mov
xor
xchg
test
ret
xlat
pop
and
inc
loopne
aad
mov
cltd
adc
inc
push
dec
jo
fwait
aas
mov
inc
and
pop
inc
leave
and
test
and
add
mov
inc
jecxz
decb
inc
jecxz
push
fiaddl
enter
sbb
cmp
and
cmp
jbe
jns
cmp
inc
insb
lods
daa
cmc
ret
out
iret
xchg
negl
ljmp
mov
sbb
mov
mov
inc
scas
mov
pop
pop
in
ficomps
cmpsb
cmp
sub
dec
loop
adc
imul
js
pop
pop
cmp
push
aaa
push
popa
dec
pushf
mov
cs
push
clc
xor
push
je
cld
push
dec
cmp
inc
mov
or
add
shl
inc
sbb
jl
inc
gs
enter
jns
popa
sub
sub
rcll
sbb
test
mov
mov
or
lea
pop
xor
pop
test
xchg
fidivl
dec
push
dec
and
inc
sub
notl
and
pop
stos
inc
popa
movb
xor
and
imul
inc
mov
jecxz
cmp
push
push
in
loope
xchg
jle
movsl
sub
mov
sbb
add
pushf
shrb
and
push
cmp
pusha
push
dec
jae
cmpsl
or
pop
lea
push
sbb
and
push
xor
shlb
add
push
lcall
push
push
inc
push
inc
negl
inc
out
pusha
xor
lock
mov
mov
cmp
inc
lret
imul
outsb
inc
scas
out
or
dec
fucomi
or
dec
mov
mov
inc
andl
cmpsl
pushf
push
inc
and
test
fdivrl
fbstp
add
and
push
test
mov
imul
lea
les
data16
aas
adc
or
or
add
or
inc
fimull
add
out
add
mov
leave
inc
enter
push
pop
inc
rcrl
add
sahf
rolb
stc
jne
jg
jge
aam
mov
mov
inc
dec
pusha
dec
sbb
jmp
jmp
sub
mov
jmp
xchg
push
jecxz
jp
mov
sbb
out
inc
adc
loope
and
push
outsb
cmpsb
ret
ret
jns
sbb
fdivl
dec
mov
cwtl
or
jns
sub
out
mov
mov
adc
push
mov
dec
repnz
mov
ljmp
push
add
mov
repnz
subl
into
mov
push
xchg
xchg
inc
aam
pop
stc
sbb
xor
mov
sahf
mov
insb
call
int3
sti
lea
and
or
mov
pop
cwtl
mov
enter
adcl
xchg
adc
jge
xchg
jne
mov
stos
mov
in
sub
rolb
pop
daa
sub
orl
icebp
imul
mov
cwtl
add
pop
int
sbb
push
rcll
mov
fldt
xor
gs
jmp
inc
pop
fmuls
imulb
add
pop
movl
cmp
scas
loope
in
js
movsl
dec
pop
sbb
pop
out
sbb
and
sub
lret
adc
cmpsb
pop
stos
shlb
sbb
stos
mov
xabort
leave
cs
jae
rcrb
outsb
dec
xor
jecxz
mov
fcmovu
cmc
in
mov
shrb
fwait
dec
shl
dec
xor
popf
sbbw
add
lcall
xor
lcall
aas
pusha
adc
sub
or
add
stc
aaa
fsubl
xchg
sub
add
out
fimuls
add
ljmp
pop
gs
pop
enter
mov
adc
mov
mov
jle
ret
add
scas
dec
inc
sarl
loope
and
leave
push
call
mov
mov
call
repz
pop
cmp
sahf
jb
add
lods
push
xlat
sub
js
fsubrp
int
loop
pop
sarl
pop
lds
mov
or
mov
mov
sub
in
dec
je
jne
add
in
cmc
jb
mov
or
cmp
arpl
push
cmp
or
xchg
pop
lahf
shl
nop
dec
or
mov
mov
mov
dec
enter
adc
mov
cmp
in
push
rclb
dec
push
imul
inc
pop
test
mov
ror
in
cld
clc
dec
sbb
and
xchg
cltd
mov
loop
adcl
in
cmpsl
mov
in
jecxz
outsl
roll
inc
xchg
mov
call
dec
daa
loope
xchg
cmpsl
add
lock
cmp
push
add
repnz
lcall
loop
daa
mov
adc
dec
sahf
xor
cs
out
orl
and
pop
mov
jb
push
leave
ret
gs
push
dec
adc
add
cli
arpl
inc
dec
aas
mov
add
fistpl
aad
enter
sti
xorl
daa
pop
korb
mov
push
sbb
in
call
inc
movsl
sbb
fadd
or
ja
xor
sbb
inc
jmp
or
lret
mov
les
ret
or
adc
scas
lods
xchg
and
ds
add
lods
push
dec
inc
mov
sub
insb
sub
stc
lods
sbb
inc
pop
shrb
test
pop
lret
daa
xchg
dec
lcall
outsl
fsubrs
xchg
aad
jb
dec
subb
cwtl
scas
sub
mul
nop
daa
loope
ret
fsubl
mov
dec
pop
xchg
cltd
dec
testb
pop
inc
add
push
adc
mov
pop
lahf
or
mov
xor
std
xor
adc
dec
cli
mov
jp
cmp
std
mov
in
cmpsb
test
cmp
orl
orl
rolb
ret
cmpsl
mov
fiaddl
mov
fs
leave
loop
cmp
movsb
push
movb
and
mov
sbb
mov
jne
cwtl
pop
dec
lret
mov
inc
xchg
test
xor
cmp
nop
mov
pusha
sub
pop
movsb
popa
dec
adc
stos
pop
inc
cltd
ret
or
pop
jne
xchg
popf
mov
lret
adc
stos
push
int
inc
je
fidivrl
inc
clc
xchg
mov
ret
cmpsb
push
mov
mov
cmc
inc
pop
aad
dec
mov
or
pop
fs
bound
into
lock
in
sub
js
inc
into
loopne
fiaddl
popf
and
jo
std
mov
push
flds
mov
mov
push
xor
inc
jae
cld
sub
mov
lahf
sbb
out
adc
or
mov
jae
mov
push
hlt
and
repz
and
adc
inc
popf
dec
xor
in
xchg
imul
dec
cmpsb
and
fs
fdivrl
pop
jb
clc
push
cmp
leave
pop
je
mov
inc
loopne
jno
mov
and
gs
outsl
jns
adc
scas
sarb
xor
sub
mov
aas
int
pop
push
icebp
sub
xor
xchg
push
arpl
mov
fstl
inc
xchg
lds
jb
or
jg
inc
and
mov
inc
xchg
fstp
inc
sbb
jnp
mov
push
or
xchg
lret
sub
adc
mov
enter
aaa
sbb
mov
les
test
sbb
inc
mov
cltd
lret
push
add
lock
sbb
push
mov
imul
es
pop
adc
or
cmp
lcall
and
sub
in
lcall
cmp
in
addb
mov
inc
jecxz
dec
push
mov
inc
and
lret
fldt
fisubrl
mov
rorl
mov
pop
les
pop
lret
cmpsb
loope
cmp
js,pt
pusha
and
aas
cmp
divl
fnstenv
shlb
cwtl
pop
mov
add
mov
movsl
aas
repnz
push
ja
cmpsb
jns
cli
sbb
xor
data16
andb
dec
cmpsb
fwait
andb
mov
ljmp
mov
aam
push
adc
icebp
mov
rclb
inc
xchg
xchg
sbb
in
mov
and
mov
mov
loopne
pop
loop
in
test
stos
dec
inc
pop
dec
in
fs
data16
adcb
sbb
repz
add
adc
mov
ljmp
mov
xchg
iret
enter
ss
xor
cmpsl
jecxz
push
mov
mov
jne
aas
adc
dec
repnz
outsl
bound
inc
jae
push
les
jecxz
and
add
jae
pop
ljmp
add
push
cwtl
das
add
fimull
lret
lods
mov
out
inc
mov
popf
sub
test
ljmp
sbb
and
inc
jne
jno
cwtl
xor
inc
mov
lock
fs
sbb
mov
jno
mov
fldt
inc
cli
or
fwait
daa
inc
sub
add
mov
add
sbb
outsl
xchg
es
lea
adc
loope
ds
call
inc
aad
decl
push
ja
add
nop
push
lret
mov
inc
sbb
fwait
jecxz
push
or
jmp
leave
mov
push
push
cld
test
pop
enter
sbb
mov
pop
inc
mov
andb
in
gs
daa
scas
pusha
cmp
mov
or
add
add
shrb
mov
sub
addl
dec
add
mov
adc
and
pop
or
or
sbb
xor
xchg
repz
jmp
cs
inc
lret
sub
aad
aaa
dec
xchg
test
popf
cli
in
cmp
movsl
leave
xorl
adc
cmp
sub
daa
inc
mov
xor
xchg
pop
cltd
dec
inc
add
push
lock
leave
loope
les
sub
decl
mov
dec
mov
sub
push
and
xor
fsubrp
mov
or
or
nop
inc
mov
sbb
jne
xchg
dec
into
fldenv
fistps
pop
cmp
mov
and
dec
pop
cmp
daa
ret
cmp
lret
ficompl
lret
and
and
test
lds
xlat
in
into
xor
lds
mov
fucom
leave
dec
dec
cmp
ja
rolb
cmp
push
dec
push
fsubrs
inc
sub
imul
pop
jmp
jmp
pop
sub
rorb
filds
push
nop
cli
in
adc
cmpsb
fsubl
ficompl
sub
mov
xor
pushf
push
mov
sti
enter
pushf
out
or
pop
fs
fld
in
and
mov
dec
lret
sbb
popf
dec
ds
xor
xor
daa
and
nop
enter
subb
jecxz
dec
test
mov
pop
jg
lret
aad
enter
jg
push
dec
rcll
leave
pop
sub
xchg
inc
das
es
dec
shrb
faddl
in
cld
sub
adc
and
xor
out
push
test
loope
push
jmp
inc
adc
lahf
imul
xor
sti
int3
mov
or
add
dec
bound
xchg
aam
sub
in
mov
mov
and
js
outsl
and
test
testb
in
leave
movsb
dec
sbb
outsl
mov
popf
sarb
pop
inc
in
ficoms
test
mov
sbb
mov
sar
sub
add
mov
out
in
test
incb
adc
sub
fwait
xchg
ret
into
ds
push
frstor
sub
add
push
aad
jg
add
pushf
adc
xchg
int
jecxz
test
or
clc
lods
ror
cltd
mov
pop
jne
push
in
sbb
cltd
cmpsb
and
andb
cmc
sub
xchg
xchg
repz
or
add
cmp
xchg
pop
fistps
sub
imul
mov
lds
mov
lcall
movl
adc
sahf
push
fldcw
mov
jb
mov
mov
in
adc
movsl
or
dec
ret
shrl
icebp
shrb
mov
hlt
xor
cmp
pushf
add
and
push
xchg
sarb
inc
test
add
pop
mov
lods
leave
gs
roll
sub
jnp
xchg
clc
jmp
mov
push
push
les
ja
jp
daa
cltd
test
mov
add
sarl
and
aam
xor
lret
mov
adc
imul
dec
and
cmpsb
ret
mov
stos
jae
add
ljmp
adc
cmpsb
or
cmc
ljmp
mov
adc
imul
jge
pop
out
mov
addr16
repz
lock
in
push
push
imul
rolb
or
imul
lcall
xchg
or
jo
ror
adc
xor
or
add
or
fwait
inc
adc
push
leave
add
out
ljmp
sbb
and
pop
push
popa
movsb
mov
stos
adc
or
cmpb
mov
mov
pop
inc
mov
fstpl
fdiv
mov
sbb
out
add
fbstp
lods
dec
add
dec
xor
cmc
dec
add
push
leave
pop
dec
mov
cmp
out
sub
inc
fimuls
les
dec
cmp
js
sub
xchg
mov
xor
ret
adc
mov
mov
cmp
imul
gs
cli
inc
out
daa
inc
add
dec
pusha
sub
and
sahf
stos
ret
lret
in
cmc
mov
sub
push
add
dec
dec
lret
cmp
out
rorl
or
in
into
lea
mov
xor
inc
adc
mov
xlat
repnz
add
testl
inc
pop
out
cmp
sub
test
ret
movsl
xchg
ja
inc
data16
je
repnz
adc
push
inc
push
out
cwtl
adc
ss
sbb
dec
inc
pop
imul
addl
mov
xor
frstor
xlat
adc
iret
fstp
inc
mov
test
xor
leave
inc
insl
inc
rolb
xchg
cmpsl
sbb
push
ficoms
inc
sub
addr16
dec
cmp
cmp
jmp
gs
sbb
pop
jb
test
push
and
loope
rcrl
repz
xor
sbb
or
outsb
inc
mov
ja
mov
inc
push
or
dec
inc
xor
in
pop
mov
jecxz
cld
js
loop
aad
mov
stc
xchg
cmpsl
loope
lret
jae
push
cmp
sub
mov
in
add
pop
ret
sub
ret
dec
mov
shrl
mov
insl
cmpsb
mov
jo
lock
add
mulb
push
mov
lahf
fmuls
xchg
stos
and
xchg
call
cli
adc
push
push
cwtl
lds
mov
mov
and
icebp
int3
push
in
add
in
inc
push
sub
dec
add
enter
popf
test
xchg
mov
in
and
inc
jge
pop
push
inc
or
sbb
and
xor
imul
sub
in
stos
cmc
ljmp
ret
dec
inc
loop
hlt
sbb
and
in
ficoms
xchg
sub
clc
pop
sub
mov
push
fsts
xor
bound
inc
or
outsl
test
push
sub
stos
lret
or
bound
add
xchg
enter
push
insl
or
add
shl
aas
inc
mov
mull
mov
mov
pop
daa
sbb
cmp
pop
inc
cwtl
clc
pop
fcom
push
or
shlb
jecxz
sub
or
stc
iret
sbb
fisttpll
cli
add
push
mov
jmp
dec
and
test
lret
mov
roll
aas
mov
adc
jl
jl
roll
dec
test
pop
push
or
pop
loopne
cmp
dec
inc
lret
inc
xchg
xlat
xlat
mov
or
pusha
cmpsb
out
mov
and
jno
push
ja
fs
and
ret
mov
sbb
clc
call
push
in
sbb
mov
add
sub
movsl
ret
inc
lock
jmp
in
stos
and
imul
jg
mov
or
movsl
xchg
add
or
push
cmpsb
stos
or
push
out
popa
dec
sub
fimull
icebp
push
ds
pop
mov
inc
mov
out
mov
jnp
push
and
mov
sub
cmp
push
rcll
push
leave
inc
enter
mov
or
xor
add
aaa
cmp
xor
stc
repnz
lds
aas
push
jmp
adc
jle
fidivrl
or
loopne
xor
or
inc
bound
push
test
stos
lea
xchg
push
pop
aam
sub
fldt
imulb
jecxz
cmp
cli
jmp
mov
sar
outsl
mov
add
xchg
cmp
push
in
data16
pop
and
push
js
and
mov
imul
push
mov
inc
dec
test
test
mov
or
sub
adcl
lret
push
loope
mov
or
jno
and
cmp
stos
and
pop
and
mov
cld
inc
leave
pop
push
stc
xor
les
push
out
sub
ljmp
cmp
and
mov
or
mov
xor
mov
or
sub
and
dec
lods
pop
cmp
xor
pop
push
das
push
push
pop
jmp
inc
push
jg
ds
dec
and
je
inc
inc
push
insl
sub
sub
cs
xchg
gs
pop
pop
inc
jbe
fst
add
pop
daa
pop
xchg
fiaddl
out
sar
cwtl
cmp
cmpsb
mov
fildl
add
into
mov
lret
xchg
cs
int3
loop
adc
push
and
mov
xor
sbb
and
pop
cmp
repz
dec
xchg
hlt
mov
dec
jecxz
push
mov
mov
jne
test
out
cmp
add
enter
sub
mov
stos
fdivrp
push
lds
and
ljmp
rsm
sbb
mov
push
lret
imul
imul
adc
or
popa
add
mov
adc
and
push
and
mov
rorb
mov
arpl
inc
pop
imul
inc
inc
loopne
in
mov
jl
push
jle
jmp
iret
dec
pushf
loope
pop
mov
xor
addl
loop
xor
cli
lea
pop
sub
mov
xchg
or
outsb
stos
out
cmp
sti
adc
cld
loope
out
aad
xor
inc
imul
or
fsubrl
mov
ds
xor
and
cmp
cmp
fisubrl
int
adc
loop
mov
aad
mov
subb
or
dec
xor
and
stos
mov
sbb
xchg
or
mov
out
stos
lahf
hlt
mov
aad
and
and
jno
or
inc
mov
push
or
in
in
pop
cmpsb
add
mov
pop
dec
test
or
adcb
rclb
xor
sub
cmp
push
cld
jnp
push
fnstcw
xchg
lret
lds
stc
or
push
jmp
jae
xor
dec
and
cmpsl
or
fstpl
jb
dec
sub
lods
inc
inc
ret
int3
mov
sub
or
mov
ds
test
inc
xor
jno
and
cmp
pop
mov
xchg
cmp
enter
mov
cmp
xor
ljmp
sub
nop
or
mov
jecxz
and
pop
out
ret
es
enter
or
dec
in
test
in
jmp
add
adc
or
xor
in
mov
imul
sbb
sub
push
jecxz
mov
in
xor
inc
ja
lock
repz
repz
in
rcrb
jecxz
jnp
mov
int3
rorl
add
xchg
jno
movsl
and
test
ljmp
xlat
pop
dec
jecxz
add
jne
push
aam
aam
fisubrl
cmp
stos
inc
jnp
repz
lcall
add
les
arpl
mov
dec
lcall
sub
jo
jo
cltd
mov
je
roll
cmp
gs
dec
fisubs
mov
sarb
inc
leave
push
jecxz
push
pop
or
inc
inc
and
jmp
sub
xchg
cmp
lret
or
pusha
xor
mov
cmp
je
out
cltd
push
jp
or
push
mov
insl
sahf
nop
inc
add
or
enter
scas
movsl
icebp
push
pop
rcrb
imul
test
ret
std
sub
push
sbb
sub
sti
ret
and
and
dec
pop
enter
addr16
daa
mov
jmp
push
iret
mov
mov
add
adc
pop
imul
sub
xchg
inc
mov
jb
inc
mov
pop
inc
dec
fsubrl
mov
daa
mov
mov
jo
dec
mov
and
mov
inc
pop
push
out
and
mov
int
dec
pop
stos
loope
lods
popf
cmp
xlat
sbb
movsb
inc
lock
iret
loope
pop
lret
or
int
shlb
mov
movsl
pop
inc
cmp
int
pop
sarb
mov
mov
jbe,pt
cmpsl
pop
mov
cmp
repz
lret
or
mov
fsub
mov
insl
mov
pop
or
mov
shl
jae
outsb
mov
cli
pop
lea
inc
pop
stos
shrb
cmp
and
stc
fwait
sub
stc
mov
ljmp
lret
jp
popf
inc
pop
cwtl
mov
ljmp
add
dec
outsl
xchg
clc
or
mov
adc
xchg
lret
xlat
pop
rol
cmp
sub
shlb
inc
cmpsb
dec
cmp
leave
cltd
cmpsl
loop
adc
out
and
inc
or
add
mov
leave
ret
jns
xchg
inc
or
fwait
imul
lret
fimull
loope
or
jno
sar
imul
mov
or
test
test
sbb
add
arpl
jnp
shl
dec
fwait
add
mov
in
push
sbb
add
pop
aas
ficomps
adc
inc
inc
pop
push
inc
stos
pop
imul
or
mov
xchg
push
xchg
ljmp
pop
mov
sub
lret
adc
std
jno
pop
into
jo
dec
bound
or
leave
bound
lret
enter
icebp
ljmp
lret
and
inc
cmpsb
jbe
lods
fimuls
push
cmpsb
cmpsb
cmp
repnz
fcompl
push
and
mov
cwtl
dec
cmpsb
sahf
stos
xchg
xchg
test
sub
gs
xlat
movsl
lahf
mov
stos
cld
cmpsl
cmp
outsl
adc
xorl
inc
icebp
dec
mov
sbb
shll
mov
or
loope
xor
ljmp
subb
lds
leave
arpl
jge
adc
inc
mov
jp
pop
push
adc
jecxz
in
fwait
call
pop
clc
jne
in
xchg
inc
jecxz
test
push
mov
add
outsl
pop
cld
aam
pop
inc
ret
es
dec
stos
stc
and
daa
pop
pop
xor
rolb
sbb
enter
jecxz
mov
dec
ja
ja
fistpl
mov
inc
cmpl
pop
sbb
jmp
sub
pop
or
mov
enter
sti
push
mov
cmp
or
cwtl
mov
cmp
jno
insb
cmp
nop
add
lods
sub
mov
fwait
push
in
cmp
inc
or
cmpsl
mov
pop
sub
icebp
push
or
fistpl
mov
pop
loop
cmp
jg
nop
xchg
pop
or
mov
dec
inc
push
in
push
cmp
repz
inc
cli
cs
xchg
add
mov
adcb
out
fiaddl
jmp
ljmp
jae
test
mov
fidivrl
fisubrl
xchg
cmp
jnp
lret
fcoml
sub
icebp
mov
xchg
xchg
or
cmp
jnp
cmp
enter
mov
sub
push
mov
sub
mov
xor
cmp
lret
xor
stos
mov
dec
dec
inc
leave
adc
mov
dec
jle
test
pop
fildl
rcr
mov
pop
jns
pushf
pop
loop
xor
jne
std
mov
mov
ljmp
jge
mov
inc
jp
or
or
movnti
ss
pop
shlb
push
xor
fwait
cmp
sbb
mov
stos
sbb
testb
jo
test
inc
fstpt
mov
in
jo
dec
jle
lcall
push
push
jnp
lea
imul
lret
push
ljmp
es
ret
in
lods
or
adc
push
addb
sub
add
and
sub
pop
pop
push
sub
bound
loope
pop
sarb
pushf
faddl
or
and
inc
xchg
push
in
das
mov
dec
andl
call
rcr
push
scas
ret
cltd
je
dec
fnstsw
pop
ja
daa
insb
std
inc
push
dec
arpl
jo
dec
xabort
popf
fidivrl
fcoms
sub
jecxz
and
push
or
jnp
adc
sbb
sbbl
jg
das
sub
pusha
mov
enter
sub
mov
insl
clc
enter
cmpb
and
ds
push
xor
cmp
mov
xchg
enter
mov
adc
mov
outsb
push
or
jecxz
ficomps
jo
stos
mov
popa
mov
add
mov
ds
ljmp
inc
shrl
lret
vpsadbw
xchg
ror
test
or
ds
inc
fstpt
iret
or
pusha
dec
mov
mov
in
or
dec
inc
movsb
repnz
and
fnsetpm(287
add
jmp
fwait
sbb
out
pop
add
add
call
cmc
js
scas
xlat
add
pop
out
or
jecxz
fwait
stc
jmp
cli
inc
and
adc
dec
pop
fisttps
xchg
aas
add
mov
cmp
or
imul
cmpsb
inc
jns
pop
clc
cs
or
xchg
stc
add
fildll
xor
add
mov
int3
sbb
pushf
mov
call
add
and
lcall
xchg
in
pusha
cmpsb
inc
cmp
xchg
mov
push
arpl
loope
jmp
mov
add
mov
sbb
add
inc
fsubl
mov
inc
enter
in
lods
adc
jns
idivl
pop
xor
xchg
addr16
dec
test
xchg
lahf
sub
cmpl
jo
adc
mov
xchg
jne
insb
mov
or
fstpl
jl
out
daa
xchg
loope
subl
rcrl
add
or
mov
enter
test
movl
mov
mov
sarb
ret
popa
and
and
adc
sub
xor
lahf
and
rcrb
cmp
mov
lock
dec
out
leave
mov
cmpl
dec
cmpsb
mov
data16
rcrb
jbe
int3
xor
sub
into
push
sbb
or
push
add
jge
mov
cmpsl
push
inc
loop
pop
inc
std
sbb
loope
pusha
mov
ror
mov
std
or
pop
rcl
add
cmp
cltd
push
test
xchg
add
sub
dec
push
pop
sbbb
add
pop
push
fwait
jmp
pop
out
jae
and
mov
adc
movsl
xchg
mov
mov
gs
push
fildl
int3
push
movsb
aaa
cli
sub
add
iret
sti
dec
add
scas
ja
push
ret
cmp
lret
or
pop
lcall
outsb
mov
dec
sub
imul
mov
pushf
testl
mov
repz
and
fwait
pop
test
popa
jl
xchg
aas
ja
mov
loop
mov
repnz
sub
mov
ljmp
in
loope
jmp
mov
push
xor
jp
push
xchg
pop
mov
add
add
xor
inc
jne
jecxz
int3
popf
ret
jecxz
add
in
xchg
mov
cmp
sub
dec
into
outsb
loope
push
mov
ret
push
ss
xlat
mov
xor
popfw
out
dec
andl
adc
lods
add
mov
xchg
pop
dec
and
leave
or
sub
mov
jb
ds
ljmp
pop
inc
cmp
fdivrl
cmpl
mov
dec
mov
daa
sub
int3
in
sub
xchg
imul
mov
data16
xor
dec
popf
test
mov
imul
mov
sarb
ja
xchg
repnz
enter
mov
mov
leave
push
jp
and
iret
add
loope
or
mov
push
mov
or
cmp
mov
lea
fwait
push
jecxz
dec
sbb
dec
test
sbb
and
mov
mov
scas
adc
push
push
pop
mov
fsubrs
pop
and
mov
lods
fldt
or
cmc
call
int3
repnz
pop
insl
enter
enter
arpl
ljmp
inc
dec
mov
or
xchg
inc
in
addr16
clc
mov
xchg
pop
mov
mov
mov
mov
lods
je
sub
mov
push
adc
inc
fsubl
jo
into
enter
sbb
cltd
call
mov
test
inc
mov
pop
and
push
test
fwait
cmp
rcll
ja
sbbb
and
sub
rolb
sub
xchg
or
jge
fisubs
in
les
pop
xor
lds
sub
push
popa
in
dec
mov
mov
push
jecxz
mov
push
dec
loopne
jp
imul
mov
or
and
les
cmpsl
pushf
pop
cmp
out
mov
mov
sbb
adc
inc
jnp
cli
jns
jnp
jae
cs
inc
in
inc
or
jae
adc
loope
xor
mov
dec
push
add
inc
adc
jmp
adc
xor
imul
nop
jno
fwait
stos
inc
lods
adc
pavgb
and
xchg
add
push
jae
dec
mov
out
popf
enter
xor
xor
sbb
push
gs
call
pushf
add
or
imul
stos
das
pop
push
test
ljmp
dec
pop
lahf
pop
dec
addl
mov
lds
loope
inc
lret
out
mov
test
dec
ja
push
fmul
jae
cmp
cmp
jo
repnz
adc
out
mov
and
xchg
cmp
das
push
loopne
xor
imul
sbb
dec
lods
inc
mov
enter
pop
loope
sbb
xchg
push
into
loope
icebp
inc
shlb
fisttpll
sub
mov
adc
lods
xchg
hlt
movsb
filds
inc
insl
aam
xor
adc
xorl
inc
push
daa
push
xchg
xor
outsl
sub
ja
loope
cmpsl
xorl
in
bound
pushf
add
shrl
in
adc
and
inc
mov
jl
jmp
sar
and
cmp
in
jg
and
or
jnp
mov
ret
and
xchg
xlat
mov
adc
mov
inc
pushf
inc
lock
push
jns
je
dec
sub
adc
gs
and
mov
push
xchg
and
dec
push
inc
pop
les
ret
fstpt
mov
or
and
mov
dec
js
roll
cmp
inc
fldenv
pop
aaa
dec
mov
loope
inc
jns
ss
mov
or
pop
push
push
cltd
scas
js
mov
repnz
jo
inc
push
fsts
mov
nop
or
imul
cmpsb
test
sbb
mov
sub
cwtl
sub
add
popf
jbe
shll
data16
add
sahf
add
repnz
fs
add
int
popa
inc
pop
lahf
hlt
inc
mov
jbe
popf
roll
xor
add
call
fldcw
mov
push
or
outsb
cli
dec
imul
ret
movsb
mov
add
jl
mov
push
movb
and
cs
movsb
jle
mov
fadds
cmpsb
pop
std
pop
ret
and
sub
leave
inc
ja
mov
add
shlb
popf
cmp
push
lret
iret
cmp
mov
inc
sti
push
lods
shrb
push
jae
inc
inc
fsubl
dec
ljmp
je
add
cli
shr
shlb
xchg
pop
stos
fcompl
in
imul
in
loopne
mov
retw
inc
enter
inc
xor
dec
or
js
testl
sbb
ret
jae
inc
sti
jae
fwait
ja
mov
scas
or
mov
sbb
popa
les
ljmp
mov
jae
mov
or
inc
in
lods
insl
dec
push
mov
mov
xchg
loope,pt
dec
adc
fwait
adc
xchg
mov
mov
arpl
xor
pushf
enter
loop
inc
mov
imul
loopne
jae
cmp
loop
andl
cmp
push
icebp
dec
nop
in
ret
inc
cmp
inc
xchg
add
xchg
jo
inc
mov
mov
or
shll
nop
push
inc
loopne
add
adcb
sahf
stc
cld
inc
jns
sti
dec
mov
sub
movb
xchg
add
add
jmp
mov
test
cmp
add
lahf
sbb
and
subl
ljmp
or
aas
fldenv
inc
mov
aas
gs
cmp
mov
dec
in
sub
cs
dec
cmp
stos
imul
pop
or
nop
add
sub
fildl
nop
ljmp
push
push
mov
mov
lds
fnsave
in
outsb
ret
dec
stos
test
dec
ja
jb
ret
ljmp
rorl
in
pop
xchg
adc
sbbb
pop
rorl
push
mov
xlat
push
jb
lds
test
movl
pop
adc
hlt
loope
movsb
retw
incl
dec
adc
aam
stos
or
jne
push
pop
mov
aas
jecxz
repnz
pop
ror
scas
loopne
push
sbb
or
imul
scas
adc
out
sbb
test
sahf
pop
mov
leave
mov
add
ds
in
imul
repnz
loop
and
lock
or
dec
dec
arpl
int
inc
scas
inc
stc
in
dec
cli
into
daa
jmp
pop
inc
imul
push
hlt
pop
and
mov
dec
ret
add
ds
sub
cwtl
and
push
stos
in
cli
arpl
mov
or
jmp
out
sarb
mov
gs
xor
dec
jo
mov
test
mov
xchg
inc
popa
ljmp
mov
iret
stc
popa
fwait
cmp
dec
push
xor
inc
enter
pop
and
insb
cmp
lods
stos
mov
inc
pop
push
and
adc
push
jmp
add
add
inc
add
push
in
repnz
inc
add
xor
jmp
and
sbb
sub
sub
ret
inc
pusha
xor
inc
jb
les
jno
mov
leave
cli
out
jmp
and
data16
jbe
dec
cmpsl
enter
mov
cmp
add
inc
mov
fwait
sbb
popa
lock
bound
or
lds
xchg
push
or
cli
lret
dec
stos
dec
mov
push
sarb
push
mov
cmp
or
gs
mov
push
inc
or
in
scas
cmpsb
out
lea
out
loop
xchg
inc
outsl
pop
clc
insl
fisttpll
fdiv
sbb
dec
cvtps2pi
test
mov
adc
enter
xchg
aaa
outsb
dec
test
pop
rorl
xchg
out
sub
push
cmp
scas
ss
testb
in
dec
add
xchg
out
xor
sub
loopne
xchg
daa
hlt
and
xchg
lock
add
mov
aam
sar
inc
ret
jle
popa
mov
sub
cmp
cmp
jle
enter
pushf
inc
out
adc
lock
in
nop
pop
sti
sub
push
push
push
fadds
jb
lds
test
outsb
rol
mov
mov
push
xlat
add
stos
or
repnz
mov
call
ret
or
mov
pop
mov
xchg
push
movsl
test
rcrl
pushl
jno
les
jne
or
mov
mov
sub
int
hlt
aas
out
sub
fsub
popf
loopne
and
adc
push
mov
or
inc
addl
adc
fs
sub
rcrb
gs
aaa
sub
or
inc
or
rcrb
and
les
add
add
add
inc
mov
lock
and
jecxz
aad
add
or
mov
pop
pushf
mov
xchg
mov
dec
push
scas
mov
sbb
fimuls
cs
sub
mov
stc
cmp
inc
mov
enter
stos
mov
or
cmp
fldt
vpshufd
loopne
test
repnz
xchg
sub
xor
insb
cmc
pop
fiadds
inc
ret
loope
and
in
sbb
stc
and
aas
sub
cmp
cmp
std
cmp
mov
lahf
in
pop
rorl
addl
add
adc
mov
int3
adc
cltd
lret
jmp
enter
or
aam
insb
mov
jmp
mov
cmp
daa
mov
ss
stc
ljmp
imul
enter
push
or
fisttps
dec
stc
js
adc
clc
dec
imul
pop
dec
in
push
mov
and
les
pop
add
push
inc
sahf
lds
or
push
add
adc
sub
fwait
add
jo
stos
inc
or
in
sub
addr16
pop
js
push
pop
and
adc
popa
ds
inc
mov
pop
into
inc
insb
fsubs
and
fcomps
cmp
sub
mov
enter
ds
popa
xchg
fstpl
add
mov
rorl
in
jne
ret
cs
or
mov
pop
mov
cld
inc
enter
xchg
mov
ljmp
jmp
inc
sub
sub
in
jno
dec
mov
sub
leave
jae
xor
jns
test
xor
xor
xchg
test
add
and
ret
test
inc
out
ret
xor
test
mov
adc
or
xor
inc
popa
inc
decl
dec
adc
das
mov
xor
and
inc
test
fiaddl
sbb
rcrl
clc
int
sbb
cmpps
cli
or
fists
add
testl
adc
imull
aad
mov
pop
inc
mov
pop
push
inc
outsb
shlb
lea
sbb
out
loop
pop
repz
inc
enter
popa
inc
jae
xchg
sub
inc
mov
or
mov
push
das
xchg
leave
and
push
enter
enter
insb
gs
loope
inc
sbb
sbb
jl
adc
add
dec
ds
hlt
adc
xchg
loop
push
add
inc
sub
pop
inc
ficomps
push
inc
xchg
pusha
cmp
cmp
mov
jg
clc
ret
mov
sbb
mov
fwait
mov
or
pop
push
sub
cltd
addb
inc
inc
aas
mov
pusha
daa
leave
push
pop
push
clc
and
pushf
xchg
push
daa
movsb
and
cld
and
fildll
xor
xor
adc
aad
out
unpckhps
sbbb
push
push
adc
inc
jbe
das
loopne
mov
scas
fwait
and
sbb
inc
adc
mov
pop
pushf
mov
xchg
mov
enter
or
xor
inc
inc
and
cmp
je
jmp
cmpb
pop
push
filds
dec
dec
xor
mov
mov
inc
js
imull
lods
inc
pop
dec
faddp
add
pop
and
pop
jp
test
jge
pop
cmc
mov
mov
mov
enter
inc
cs
mov
xchg
popf
test
inc
loopne
fisubs
and
adc
push
push
lcall
dec
and
sbb
and
inc
aas
ja
and
mov
cmp
cmpsl
dec
cli
icebp
aad
cwtl
ret
ret
mov
test
leave
jno
sahf
das
adc
add
ljmp
mov
les
clc
xor
or
xlat
jae
enter
xlat
mov
sahf
fmul
aad
lret
stc
jnp
mov
inc
adc
aam
add
cld
add
add
jg
into
orb
ss
add
out
pop
and
inc
pop
push
enter
dec
pop
mov
test
ror
bound
cmp
dec
or
inc
dec
leave
mov
dec
push
movsb
cltd
int
inc
loopne
pusha
mov
or
sbb
es
xlat
xchg
daa
inc
stos
dec
pop
and
dec
mov
or
icebp
pop
adc
add
outsb
movsl
inc
inc
pop
push
mov
jbe
adc
aas
pop
push
lcall
loopne
sahf
cmp
stos
inc
js
cmp
aas
in
adc
dec
ror
punpckhbw
mov
push
mov
or
imul
sub
mov
mov
inc
sub
sub
inc
push
enter
jl
jmp
pop
stos
loopne
dec
dec
inc
dec
imul
mov
add
jo
fwait
cmp
cld
dec
sahf
sub
inc
mov
inc
cs
sbb
jns
xchg
ffreep
or
arpl
mov
push
cmp
or
add
gs
xor
in
jmp
mov
ljmp
mov
jle
sbb
push
jae
vpcmpeqb
dec
push
jp
leave
mov
es
xchg
aas
inc
adc
inc
in
xchg
sbb
lods
imul
mov
lods
jp
push
int
data16
cs
test
lods
add
sub
sbb
lods
mov
or
fstpl
clc
decb
add
inc
push
mov
push
jae
jg
sbb
gs
inc
out
test
and
inc
in
cmp
adc
or
leave
and
out
jge
sub
pop
dec
inc
dec
leave
sub
and
dec
test
dec
or
xchg
stos
jl
xchg
or
inc
movb
xor
popa
dec
pop
or
add
in
pop
or
xchg
hlt
pop
les
mov
test
popa
inc
popa
lret
shll
sbb
aas
inc
outsl
pop
xor
ljmp
dec
lret
or
insb
je
pop
xchg
int
cli
inc
jb
mov
adcl
push
and
dec
lods
inc
test
and
add
sub
add
fidivs
or
mov
imul
bound
insl
cs
adc
mov
xchg
inc
cmpsb
into
jae
or
sbb
pop
cmpsl
insl
in
inc
mov
or
lds
adcl
jbe
scas
adc
dec
adc
jbe
in
stc
mov
cmp
cs
cmp
sub
mov
pop
rolb
mov
ret
in
fcoms
sub
mov
cmp
xchg
in
dec
inc
inc
xchg
mov
cmpsb
mov
mov
fwait
push
fisubs
mov
mov
sbb
cmc
push
add
loopne
inc
push
add
in
call
adc
inc
loopne
pop
sti
shlb
mov
push
pop
insl
mov
addr16
add
mov
jecxz
xchg
lcall
jge
pop
pushaw
fcmovu
bound
mov
dec
movsb
enter
cmp
or
cmp
mov
fcomps
mov
xchg
push
jno
dec
mov
adc
mov
in
addb
mov
mov
aas
cs
enter
dec
in
icebp
xchg
push
pop
adc
inc
mov
inc
enter
test
push
pop
jp
add
dec
jns
enter
or
inc
enter
call
lea
inc
adc
daa
addl
rorb
fidivrs
fimuls
orb
js
pusha
and
int3
cmp
lods
push
pop
scas
jmp
stos
mov
sub
mov
outsl
push
inc
fistpl
mov
pushf
les
or
adc
cmp
adc
add
xor
js
pop
adc
adc
es
and
dec
xchg
sbb
xchg
enter
dec
xor
rcrb
push
mov
bound
sbb
mov
push
jnp
inc
out
imul
and
shll
pop
cmp
sbb
mov
clc
push
sbb
pop
adc
sub
xchg
or
sbb
dec
jle
cltd
ficoml
imul
repnz
push
arpl
push
into
dec
mov
cmp
push
adc
jp
daa
test
leave
push
bnd
jecxz
imul
imul
push
mov
add
sub
push
fidivrs
fildll
cmp
loop
dec
xor
jecxz
hlt
mov
enter
cmpsl
pop
cmp
xor
stos
cmc
push
sahf
and
and
jae
leave
fidivl
stc
ret
fcmove
adc
mov
movsb
push
sub
sub
push
jmp
mov
pop
daa
jmp
and
push
popf
and
repz
jmp
xchg
mov
ds
xchg
or
jg
insb
mov
jno
std
leave
or
pop
lcall
enter
std
push
ret
ljmp
or
cmp
lcall
iret
test
mov
xchg
mov
dec
inc
outsb
push
in
or
adc
aad
mov
jg
cmpsl
inc
fwait
sub
inc
xchg
xchg
mov
inc
cmp
inc
cmp
pop
dec
sub
pushf
dec
scas
stos
pop
fldenv
mov
iret
addb
push
dec
in
or
pop
stc
dec
scas
test
mov
cmc
movsb
mov
hlt
add
mov
pop
sti
dec
or
add
jae
add
or
and
outsl
pop
sbb
mov
cmp
dec
cmpsb
sbb
imul
ds
dec
or
inc
dec
movsb
movsb
rorl
inc
jl
test
stos
addr16
mov
loopne
addr16
push
jle
daa
hlt
sbb
icebp
insb
mov
imul
mov
and
inc
xor
or
in
mov
ljmp
cli
pop
add
mov
xchg
mov
xchg
jae
aad
aaa
rorl
jg
cld
adc
lret
aaa
xchg
in
outsl
pop
xchg
push
lods
add
pop
cwtl
scas
in
dec
fldt
inc
addl
sub
mov
or
dec
stc
sub
cmp
cmpsl
cmp
or
inc
lret
in
pop
sbb
sub
test
dec
aaa
jg
pop
loop
xor
mov
out
leave
jnp
std
cmpsl
movb
inc
pushf
stos
dec
mov
cmp
sbb
cmpsl
pop
aam
or
outsl
sub
leave
psrad
xchg
cmp
cli
mov
data16
inc
cmp
enter
jb
cltd
les
in
push
das
inc
adc
loope
and
inc
jno
movsb
fiaddl
rol
incb
mov
xchg
xor
sbb
test
imul
inc
mov
int3
and
mov
pop
sub
int
lods
addr16
int3
and
fmulp
es
rorl
dec
rorl
iret
pop
leave
jg
xor
lret
out
mov
test
aam
inc
cltd
sbbb
out
jl
adc
mov
jbe
add
cld
inc
cmp
mov
out
lret
add
repnz
aaa
or
sub
sub
jmp
into
in
dec
jns
sub
iret
cltd
dec
stos
mov
inc
adc
mov
sub
cwtl
mwaitx
and
jg
movsb
andb
dec
jnp
sti
fiaddl
leave
fildll
inc
enter
stos
inc
add
scas
sbbb
push
or
mov
jnp
jne
mov
dec
lret
push
or
mov
nop
movl
rcll
pop
cmp
jle
cmp
int3
mov
mov
enter
leave
dec
jno
shrb
pop
jg
adc
jmp
imul
dec
dec
sub
mov
movsb
xor
outsl
cmp
or
scas
jb
push
inc
test
mov
out
pop
int3
mov
push
pop
jns
pop
push
cld
nop
xorb
cld
ret
add
dec
popf
out
ret
sub
lret
lret
mov
cmp
daa
push
mov
out
test
dec
xchg
lret
lret
sub
sub
ja
flds
xchg
pop
inc
sub
xchg
xor
cmpsb
add
inc
xchg
loope
addr16
lahf
pop
mov
xor
sbb
push
jnp
pop
repnz
es
in
inc
pop
stos
out
movb
xor
jg
inc
and
push
jecxz
ljmp
jg
mov
loop
ljmp
mov
or
inc
loopne
out
and
or
push
and
dec
inc
dec
inc
pop
imul
lds
pop
mov
lahf
stc
push
jecxz
fcompl
xor
pop
gs
imul
lahf
fcompl
xchg
sub
rorl
fsubs
inc
dec
mov
rolb
fnstsw
pop
pop
and
or
in
enter
jle
leave
roll
lcall
outsl
mov
adc
jno
daa
imul
loopne
sbb
mov
mov
sub
or
and
insb
mov
or
icebp
push
in
stos
push
add
les
add
movsb
ret
pop
aad
dec
jb
mov
mov
enter
cmp
add
push
mov
dec
xor
mov
inc
xor
dec
cs
push
push
dec
cmpsb
jne
lods
loop
and
stos
bound
std
dec
mov
push
inc
mov
ds
sbb
faddl
cli
flds
mov
pop
inc
sbb
or
cmp
pusha
cmp
lret
sub
lret
adc
sti
cld
enter
mov
fs
inc
xchg
rol
sbb
pop
push
xchg
ret
sub
inc
pop
addb
popa
fistpll
cmp
mov
in
xchg
xchg
or
mov
repnz
sbb
inc
lret
faddl
jb
dec
xchg
out
imul
roll
stos
nop
sbb
cmp
jns
xchg
inc
mov
push
or
and
pop
faddl
cs
jns
dec
cli
or
adc
adc
inc
push
sar
push
pop
dec
imul
dec
lcall
dec
nop
ds
sub
and
mov
cmp
xchg
jg
jl
imul
push
imul
testb
xor
dec
mov
loopne
mov
cli
or
outsl
rorb
scas
lds
or
mov
mov
mov
data16
push
push
ret
test
inc
out
mov
or
sub
bound
popa
mov
out
sub
repnz
inc
rclb
lret
std
xchg
dec
inc
test
dec
mov
adc
ret
mov
fwait
aas
inc
mov
int3
sbb
dec
lret
lock
fdivl
jne
mov
aas
sub
cmpl
mov
add
loopne
push
leave
into
cmc
push
or
add
scas
mov
push
out
stos
xor
addl
push
add
out
inc
fimull
sub
hlt
fs
cltd
mov
sbb
dec
dec
inc
mov
fistps
push
xor
adc
cmpsb
xchg
push
inc
jle
lds
dec
insb
lahf
adc
inc
pmaddwd
sar
mov
lret
cmp
jg
mov
inc
pushf
pushf
mov
mov
inc
sbb
mov
mov
adc
test
lea
lcall
std
enter
pushf
ljmp
mov
loopne
sbb
mov
cmpsb
fisttpl
jge
and
popa
sub
adc
hlt
xor
loop
mov
test
add
test
push
lods
pop
sbb
arpl
fadd
stos
dec
ret
mov
inc
or
adc
hlt
aaa
cmp
andl
inc
or
in
ljmp
xlat
and
push
cmp
inc
shrb
lcall
jns
out
xor
leave
mov
popf
ret
imul
pop
mov
arpl
cli
mov
stos
dec
daa
inc
das
inc
inc
xchg
and
call
dec
push
fistl
pop
inc
enter
bound
lds
and
cmp
fwait
ss
push
push
and
test
pslld
pop
cs
add
jmp
inc
adc
sub
enter
sub
das
out
ffree
call
mov
loop
outsb
in
and
fsts
and
add
xor
int3
sahf
cmp
dec
jnp
fcompl
xchg
outsl
and
aaa
in
dec
mov
dec
and
arpl
testb
int3
mov
pop
mov
das
icebp
cs
pop
mov
sub
cmpsb
add
in
into
inc
sahf
mov
test
push
addb
popa
daa
cltd
cmpsl
out
and
lret
or
push
and
cwtl
cli
and
mov
xor
hlt
sub
dec
daa
add
mov
xor
mov
jmp
mov
add
pop
xchg
cmp
aaa
inc
mov
jmp
xchg
sbb
sub
fdivr
shll
test
pop
idivl
pushf
add
sub
jmp
movsl
or
shlb
mov
iret
ljmp
add
xor
rolb
scas
push
xor
enter
mov
sbb
inc
out
sub
gs
nop
fmull
js
fidivl
inc
rorl
push
dec
insb
adc
mov
push
or
mov
cmpsl
lea
xchg
fwait
push
cmpsb
pop
xchg
fidivl
push
int
mov
xorb
add
push
push
xor
mov
push
mov
add
ror
or
sub
pop
incl
push
les
lea
inc
data16
cs
enter
fsubl
mov
mov
out
mov
push
mov
and
popa
jp
addb
sub
mov
pop
mov
aaa
inc
adc
ja
mov
enter
xor
cmpb
jns
inc
in
in
fcoml
loop
stos
inc
cmpb
xchg
movsb
pop
sbb
add
sbb
in
fcmove
loope
jp
xchg
dec
out
in
cmpsl
cmp
les
mov
mov
and
cmp
cs
out
fcmovnb
and
inc
roll
dec
push
mov
dec
test
sahf
pusha
pusha
inc
xchg
sbb
scas
pop
xor
sbb
pusha
xchg
js
scas
out
xchg
xor
add
jne
daa
scas
inc
jne
mov
or
xchg
sbb
bound
jl
lret
enter
leave
fistpll
inc
xor
mov
cmp
jns
icebp
ret
mov
ja
or
data16
or
dec
xchg
inc
cmp
ret
out
pop
out
dec
cmp
cmp
sbb
pop
mov
add
lcall
xchg
rolb
push
mov
iret
mov
sarb
or
pop
mov
inc
les
push
dec
push
jmp
and
push
mov
xchg
bound
leave
cmp
test
mov
pushf
mov
or
ret
enter
xlat
idivl
fists
daa
cmp
sbb
push
out
sahf
scas
add
pusha
sub
inc
push
fsubr
cs
mov
inc
data16
repnz
or
in
sub
lret
push
mov
std
xchg
jmp
dec
sub
jle
lret
ficompl
mov
sub
movsl
pop
ficoms
shlb
mov
dec
inc
xor
data16
dec
or
xor
enter
ljmp
sbb
push
sahf
xchg
xchg
aam
pop
aaa
iret
lret
mov
sbbb
int
pop
cwtl
sub
or
mov
stc
dec
or
dec
xchg
jg
inc
inc
dec
lods
das
ret
popf
call
pusha
fdivrl
and
ljmp
mov
xchg
test
cmpb
sbbl
insl
addr16
xchg
arpl
push
dec
jcxz
and
push
sub
mov
and
mov
stos
adc
mov
mov
loopne
and
sbb
fcoml
adc
and
fldl
ret
dec
push
xor
imul
jno
inc
and
mov
push
shlb
test
push
pushl
cmp
or
loope
pop
inc
ljmp
and
test
push
dec
in
jnp
cmc
cld
fcomip
inc
jae
adc
lret
cltd
push
mov
pop
dec
push
add
xor
inc
or
jle
cld
movsl
scas
lahf
divl
out
mov
dec
in
and
sbb
push
inc
lret
mov
aaa
int
mov
and
je
movsb
cld
scas
sub
xor
sbb
mov
jnp
pop
dec
mov
xor
fidivl
push
push
cmp
les
or
iret
mov
ret
dec
rorl
jl
into
lret
dec
pop
jne
add
push
sub
pop
dec
js
cmp
fdivrs
mov
ret
sub
mov
leave
sarb
imul
ret
jae
pop
push
fcoms
add
push
push
vhsubpd
aas
adc
shll
pop
xchg
pushl
dec
sahf
jnp
pop
sub
pop
adc
cs
mov
enter
mov
sbb
stos
das
ds
sub
push
testb
sub
sub
xor
add
mov
sub
dec
jl
ret
xchg
cmp
mov
and
mov
fistps
mov
sar
mov
stos
jecxz
dec
fwait
add
leave
dec
cmp
inc
mov
push
mov
mov
js
or
jecxz
leave
jl
cmp
dec
in
mov
dec
mov
in
aam
or
sti
push
pop
ret
inc
dec
xor
lahf
jne
add
xor
pop
mov
lods
adc
movsl
rcll
aaa
mov
test
jnp
mov
push
mov
cli
fisubs
movsl
jmp
sub
mov
test
jnp
mov
inc
mov
mov
hlt
cs
fldt
lret
or
xor
jge
rcrb
in
repnz
mov
clc
add
cmp
pop
ds
and
xor
pop
xlat
pop
stc
mov
daa
in
or
loope
loop
clc
std
leave
data16
lea
inc
mov
sub
fwait
push
push
imul
rclb
pop
or
ljmp
orb
clc
and
push
mov
scas
inc
or
and
jg
inc
insl
mov
jmp
cmp
dec
shlb
mov
fs
mov
sbb
dec
in
and
inc
pop
lret
inc
and
jmp
push
clc
test
mov
in
jno
stos
lcall
in
cmpsb
inc
adc
xchg
and
shlb
pop
jg
push
xor
cmp
lods
mov
pop
mov
faddl
mov
sub
or
push
xor
ljmp
shll
push
push
xor
jmp
adc
in
or
mov
mov
sarb
or
les
cmp
lcall
mov
das
push
mov
outsl
leave
enter
js
inc
ljmp
fistpll
or
cli
lahf
inc
sbb
mov
or
xchg
das
push
les
and
sahf
xor
in
bound
push
mov
int3
popf
lret
mov
push
push
pop
inc
xchg
adc
sub
insb
inc
mov
lretw
mov
ret
idivl
mov
sahf
and
push
jbe
das
mov
dec
in
testb
xchg
inc
sahf
jecxz
and
push
push
scas
or
pop
sbb
and
or
cmpsb
lcall
sbb
mov
popf
and
repz
pop
int3
sahf
and
cmp
dec
mov
dec
fsubl
pop
and
xchg
imul
lret
push
xor
mov
or
xchg
rorl
inc
lret
dec
jne
movsb
nop
adc
inc
push
jns
lret
in
dec
push
adc
mov
mov
fs
sarl
imul
das
dec
mov
sarl
in
inc
rorb
stc
mov
push
subb
mov
sub
fsub
pop
add
pop
mov
in
aad
enter
leave
fnstcw
mov
leave
sbb
in
push
lcall
dec
cmp
cmc
addr16
mov
dec
sbb
outsl
dec
add
cmp
pmaxsw
adc
addr16
fiadds
stos
aas
pop
xor
and
dec
jmp
es
inc
push
inc
lock
pop
je
out
adc
dec
pop
jae
inc
mov
enter
inc
xor
in
and
cs
pop
enter
mov
cmpsl
push
ficoml
out
lcall
movl
ljmp
jl
repnz
and
sub
popa
cmpsb
fstl
psubd
adc
sbb
jne
adc
cmp
dec
inc
call
dec
mov
rcl
lcall
or
cmp
in
loopne
xor
leave
xor
cmp
stc
shlb
pushf
mov
movsl
mov
or
dec
xlat
mov
xchg
cmovno
test
or
ljmp
fistps
pop
cmp
mov
mov
cli
cvttps2pi
shll
in
mov
imul
push
int3
dec
cmp
adc
test
sbb
push
pop
adc
push
in
leave
mov
sub
dec
dec
shll
leave
call
xor
rcrb
push
subb
repnz
test
or
push
aam
test
lahf
daa
sar
mov
xchg
cmpsl
push
in
dec
xchg
mov
andb
inc
in
imul
cmp
or
ffree
inc
or
cmp
dec
push
cmp
inc
cmp
fdivrl
dec
push
and
lret
inc
or
dec
or
cmp
pop
dec
xlat
shll
pop
xchg
and
sub
or
jmp
and
and
mov
test
sub
and
sahf
pop
insb
mov
sub
in
inc
lods
and
add
pop
jecxz
dec
and
xchg
xchg
pop
inc
rcl
out
mov
mov
mov
mov
inc
aad
aaa
aad
and
addb
ljmp
cmp
enter
mov
les
bound
pop
cmp
fcoml
dec
adc
enter
dec
adc
leave
stc
inc
dec
adc
lret
xchg
pop
addb
test
mov
push
test
mov
fimull
andb
mov
jnp
stos
mov
pusha
push
sbb
inc
xchg
loope
stos
pop
enter
cld
mov
inc
pusha
gs
fwait
dec
jae
leave
xchg
mov
cli
jo
mov
movsl
cmp
adcl
pop
jg
add
dec
out
pop
fldl
not
push
push
sub
inc
pushf
lret
in
or
pop
mov
adc
rcrb
mov
fsubl
mov
xchg
fcmove
sbb
adc
dec
or
sub
inc
cld
test
inc
rorb
lock
repnz
das
addr16
dec
xchg
dec
movsb
enter
push
out
mov
cli
inc
xchg
mov
mov
and
inc
popl
movsl
mov
or
adc
imul
aas
sub
mov
or
leave
movsl
stos
stos
mov
int
mov
rclb
jecxz
pop
loope
inc
into
add
stos
or
shr
sub
jo
arpl
cmpsl
push
jbe
mov
mov
add
and
cmp
mov
mov
mov
cmp
and
in
add
stos
lock
idiv
xor
dec
push
push
jecxz
sub
xor
fistl
cmp
and
cs
inc
lret
and
inc
shr
ds
gs
mov
mov
je
frstor
ds
cmc
sbb
push
jge
in
daa
or
dec
cmpsb
bound
push
xchg
cmp
add
inc
or
cli
out
lret
fsubrl
gs
push
cmp
repnz
add
or
aad
scas
out
fstpl
sar
dec
jg
popa
push
jne
imul
ljmp
add
sub
cmp
cltd
leave
xchg
sbb
xchg
or
jnp
push
push
enter
lret
sar
fs
or
dec
lahf
xor
aad
push
inc
shlb
cmp
insl
inc
adc
push
sub
pop
jecxz
sub
mov
xlat
add
sti
jnp
sbb
sub
loopne
imul
into
add
sub
mov
or
pop
jb
mov
cmp
xchg
in
iret
sbb
dec
mov
cltd
pop
mov
loopne
lcall
push
xor
fadds
imul
xlat
dec
or
es
push
insl
xchg
mov
cli
fldt
dec
jl
fistpl
data16
dec
and
mov
stc
fmull
enter
in
data16
and
test
loop
and
cmpsl
imul
ret
orb
icebp
js
movsb
ja
fs
add
and
imul
dec
jg
add
dec
inc
ljmp
and
sbb
dec
mov
or
jl
and
sub
aad
ds
mov
imul
add
mov
pop
stos
sub
pop
lahf
fs
sub
mov
mov
or
shrb
cli
pop
fimull
and
and
cmp
subl
dec
pop
mov
adc
push
add
nop
test
or
lret
lock
push
mov
fisttpl
add
adc
call
inc
stos
xchg
cmpsb
addr16
mov
lcall
cmp
or
inc
and
or
fildll
jg
fimull
pop
mov
stos
stos
cs
fcoms
xor
std
outsl
push
add
pop
push
xor
pop
xchg
dec
enter
or
mov
int
or
push
adc
mov
test
inc
repz
pop
stos
add
push
or
incl
xor
mov
adc
movsb
enter
lods
push
and
test
push
cmp
xchg
jno
fwait
inc
andb
js
ds
pushf
in
test
insl
ror
fmuls
xchg
js
gs
add
lret
leave
stos
test
xchg
loope
fnstcw
sbb
inc
repnz
sub
dec
rcrl
inc
mov
add
pop
cmp
inc
das
add
neg
shl
inc
mov
loopne
xor
rcrb
sbb
cmpsb
dec
inc
pop
popf
xchg
repz
or
in
imul
pop
xchg
cmovae
loope
dec
xlat
leave
jo
call
sbb
fistpll
js
pop
or
out
insl
gs
or
pop
jmp
mov
push
cli
mov
jb
mov
ljmp
in
jnp
pushf
call
mov
mov
or
aad
test
inc
cmp
stos
sub
stc
repnz
std
daa
sti
mov
enter
push
dec
lock
add
pop
notb
mov
adc
lahf
sub
in
lock
cli
mov
mov
ljmp
pop
inc
or
dec
cmp
pop
and
xchg
ss
push
call
test
fstpl
cli
dec
jmp
push
cmpsb
repnz
sub
or
jmp
andl
shrb
mov
jmp
inc
dec
pop
adc
cmp
dec
int3
in
mov
pop
or
into
faddl
push
pop
inc
xchg
rol
and
mov
out
xor
loop
in
xor
adc
addr16
mov
jb
je
loope
mov
stc
out
clc
mov
add
addr16
sahf
sub
mov
xchg
inc
xchg
in
insb
jl
gs
dec
inc
cli
pop
push
nop
in
or
dec
add
push
addr16
xchg
rorl
leave
insl
mov
xchg
or
dec
mov
js
in
pop
inc
sub
mov
mov
push
xadd
fstp
mov
sbb
bound
add
data16
adc
call
inc
xor
xor
xor
and
mov
pusha
loop
out
dec
sbbb
jae
lods
dec
jns
icebp
pop
pop
sub
sub
jno
xchg
lret
icebp
call
mov
mov
shll
test
loope
int3
dec
add
lret
inc
push
faddl
sub
inc
outsb
push
out
push
xchg
mov
in
cwtl
mov
pop
cmp
dec
lret
ficoml
adc
insb
xor
popa
sbb
stos
enter
push
mov
je
lret
xchg
adc
popl
movsb
cmp
clc
pusha
jb
into
inc
add
in
adc
dec
cwtl
xchg
sub
xchg
inc
or
or
stc
jb
sub
xor
mov
mov
mov
leave
sarl
adc
insb
push
dec
loopne
sub
nop
data16
and
mov
testl
dec
or
xchg
pushf
pop
test
xchg
cmc
loop
mov
push
cmp
adc
jno
addr16
mov
scas
movsb
stc
mov
dec
inc
pop
fnsetpm(287
or
and
xchg
fistps
lock
xor
movsb
dec
fisubrl
xor
in
jbe
add
xor
adc
movb
jle
mov
pop
mov
cmp
outsb
in
xor
xchg
lds
pop
cmpsb
jo
push
add
movsl
inc
xor
ds
or
int3
test
add
lret
and
std
cmp
ljmp
push
inc
or
mov
xor
inc
cs
mov
loope
and
lret
add
out
in
lcall
leave
aas
cmpsl
push
cmp
ds
sub
ja
lret
cmp
or
loopne
sti
leave
xchg
dec
stc
outsl
jb
enter
inc
add
sbb
iret
xchg
rcr
cli
sub
pop
push
insl
mov
cmpsb
jmp
lods
jge
stc
and
in
sahf
daa
cmpsb
dec
call
push
dec
sbb
lods
stos
sub
pushf
stos
xor
sbb
inc
mov
or
push
lret
int3
and
outsl
ret
mov
cld
dec
fsubp
and
data16
xchg
dec
sarl
mov
movl
enter
stos
cmp
or
inc
out
loopne
mov
dec
ljmp
xchg
cs
rorl
mov
imul
push
add
iret
mov
imul
jb
and
in
inc
sbb
lds
mov
or
jecxz
rorl
jnp
sbb
lahf
ficoml
mov
mov
adc
dec
inc
sahf
jmp
test
repz
pusha
les
inc
jno
imul
or
xlat
inc
fdivrs
fabs
adc
mov
cmova
sub
addr16
mov
inc
mov
testb
rorb
mov
pop
sub
sub
adc
mov
roll
loop
cmp
imul
or
mov
sarb
loope
inc
lods
inc
inc
pop
shrl
aad
roll
js
lods
sahf
inc
cli
and
test
or
stos
inc
imull
mov
xor
dec
inc
ficomps
push
imul
shlb
shll
rcr
mov
shll
pop
xlat
fcmovu
dec
add
mov
int
xchg
add
xor
adc
pop
xor
mov
push
icebp
popl
and
leave
fadd
sub
into
repnz
mov
imul
mov
outsl
aad
out
sbb
dec
and
cli
in
xor
or
mov
lds
adc
movsl
lcall
stos
das
mov
in
cmp
sti
cmp
push
adc
mov
cmc
repz
and
add
inc
stos
xor
xchg
dec
dec
inc
xchg
push
mov
rcrb
dec
mov
adc
stc
movsl
mov
adc
push
push
pop
mov
aas
xchg
dec
inc
pop
dec
decl
inc
dec
in
std
test
mov
lcall
pop
mov
add
inc
xor
in
sub
xor
jae
and
loope
inc
imul
test
shlb
cmpsl
cwtl
mov
and
and
lret
shll
call
cwtl
mov
in
and
repnz
enter
jp
daa
mov
fmul
cltd
lods
out
fstpl
mov
shlb
pushf
jg
sahf
sbb
pusha
sbb
sti
mov
cmc
stc
xor
jmp
std
mov
repnz
push
fistps
xor
xor
sub
lcall
push
pop
sbb
test
mov
pop
sti
inc
nop
and
jb
sbb
out
scas
add
lock
and
loope
scas
or
jo
push
ret
add
adc
mov
mov
inc
mov
mov
push
adc
cmpsb
test
in
jp
dec
jge
out
lods
xchg
mov
push
cmp
bound
cmp
fmull
lods
movsl
popf
test
push
adc
hlt
das
inc
adc
cli
push
imul
stos
sarb
sub
adc
lea
dec
mov
jecxz
pop
cmpsl
xchg
jp
inc
ss
cmp
pusha
push
push
jge
pop
js
pop
cvtps2pd
cmc
lahf
sbb
loopne
push
out
cmp
push
mov
mov
inc
stos
or
xchg
pop
cmp
pop
call
stc
sbb
and
mov
xor
dec
sarl
mov
mov
xorb
pop
dec
sub
shr
cmpsb
xlat
lds
fsub
jbe
cmpsb
les
stc
xor
bound
mov
sbb
mov
call
addr16
sbb
out
int3
mov
and
int3
out
in
leave
inc
xchg
lds
les
in
dec
jno
push
pop
leave
daa
into
in
jno
cmp
rcll
or
inc
add
pushf
dec
popa
out
scas
push
cmc
mov
jecxz
or
xchg
sub
ret
mov
lods
cmp
pop
lsl
enter
fimull
aaa
dec
imul
les
and
and
or
push
inc
pop
pop
fs
push
std
gs
add
loop
enter
sub
inc
dec
in
lret
stos
add
dec
dec
mov
inc
ror
dec
icebp
ficoml
xchg
dec
sub
pop
and
pop
sub
jae
cmpl
leave
dec
jle
mov
int3
push
fwait
inc
cmp
mov
push
sub
push
in
dec
cli
xchg
pop
inc
pop
leave
pop
xchg
shlb
and
sbbb
jp
loope,pt
movsl
aaa
push
mov
aas
inc
and
inc
iret
xor
cs
gs
mov
or
into
mov
xchg
dec
fs
das
and
xchg
ljmp
xchg
mov
push
mov
pop
jno
sbbb
cli
adc
push
sub
ficompl
dec
mov
subb
jns
jge
repz
and
sub
xchg
and
pusha
leave
xchg
xor
or
sub
pop
sub
daa
mov
out
mov
repz
cli
push
imul
push
inc
dec
ficoml
das
clc
or
mov
inc
sbb
jecxz
mov
cmpsl
in
xlat
xchg
lret
or
dec
push
or
push
call
mul
xor
addr16
fidivrl
lret
cmp
inc
lret
sbb
insl
rorb
mov
stc
enter
jl
mov
lret
mov
mov
jnp
test
test
stc
loop
inc
mov
dec
gs
sbb
loopne
ror
test
lret
xchg
mov
mov
daa
dec
and
or
loope
clc
mov
fmuls
leave
data16
xchg
in
iret
and
jno
cld
sbb
pusha
out
pop
in
mov
or
cs
adc
ljmp
and
sub
aaa
pusha
stc
mov
stc
and
add
cmp
xor
xchg
mov
pop
mov
imull
test
scas
inc
push
sahf
mov
arpl
jl
push
pushf
cmp
add
and
in
dec
bound
inc
jno
pop
shlb
cmp
scas
aas
jecxz
dec
dec
adc
xor
mov
sub
mov
lret
mov
dec
cli
fimuls
adc
cmc
pushf
or
movsl
loope
push
mov
mov
daa
cs
ja
out
icebp
or
popf
push
dec
push
mov
add
into
inc
pop
jle
and
rcrl
mov
cmp
in
call
scas
testl
push
xchg
fistpll
mov
jg
loopne
std
fidivrs
out
or
loope
inc
ret
arpl
inc
jg
dec
pop
and
mov
fwait
pop
fstpl
inc
test
xchg
fdivl
into
or
test
mov
dec
std
push
add
cwtl
dec
inc
push
sub
lcall
or
jg
add
aaa
mov
inc
stos
jmp
pop
roll
mov
jae
push
imul
pop
mov
cs
out
mov
dec
sub
outsb
pusha
xchg
ja
adc
pop
adc
mov
xchg
jp
fwait
sub
mov
push
cmp
cmpsl
inc
mov
cmp
movsl
pop
xor
cmpb
call
addr16
lret
out
cld
lods
jg
sarl
sbb
loop
imul
push
pop
add
fsubl
dec
pop
stc
pop
iret
lea
xchg
ss
sub
test
popa
sub
mov
xor
dec
inc
std
nop
and
push
or
and
shlb
out
cmp
ret
dec
andb
inc
cmp
inc
adc
dec
cmp
mov
fwait
inc
sbb
push
cmp
dec
das
sbb
fwait
sbb
sti
test
mov
and
mov
jle
pop
mov
ret
dec
mov
lods
mov
mov
or
and
sbb
iret
pop
rorb
jmp
mov
add
sub
push
push
stos
inc
in
sub
mov
fnstcw
inc
dec
out
mov
push
je
clc
test
outsl
adc
fsubp
dec
adc
jecxz
ds
or
inc
jmp
or
jmp
inc
nop
divl
lods
sub
mov
cmpsb
stc
sti
test
out
lahf
push
loope
xchg
pusha
inc
lock
inc
cmp
cmpsl
dec
inc
xor
sbb
call
pop
lret
scas
std
push
imul
mov
js,pt
add
mov
sub
into
inc
xorb
fisubrs
mov
lea
fidivrl
ret
lock
dec
imulb
test
mov
enter
test
pop
push
push
mov
mov
xchg
add
pop
sub
call
mov
add
sbb
mov
pop
jb
mov
ret
cli
sbb
mov
inc
lret
sbb
jg
sbb
stos
lahf
in
push
rorl
ljmp
inc
xchg
in
mov
pop
mov
imul
jmp
in
sahf
stc
xchg
inc
out
pusha
inc
add
pop
lret
mov
inc
fs
cld
test
dec
rcll
int3
sbb
ja
adc
imull
roll
sbb
nop
std
or
aas
mov
dec
adc
inc
lret
pop
cmp
leave
loope
lret
jnp
mov
addl
cli
ljmp
jl
push
mov
pushf
dec
xor
out
fldcw
pop
jb
pop
test
scas
leave
dec
imul
xor
icebp
aam
jne
xchg
dec
mov
stos
in
in
lea
or
mov
inc
scas
lock
sub
fidivrs
sub
aas
mov
stos
push
push
xchg
dec
fdivrp
faddl
pushf
imul
or
call
jl
dec
test
sub
mov
inc
test
jmp
fdiv
cmp
out
sbb
jl
dec
push
movsl
cmp
push
test
imul
push
mov
sub
out
add
pop
cmc
xchg
dec
shll
pop
pop
add
mov
jl
je
and
fwait
test
pop
sub
push
leave
fwait
pop
rcll
dec
jmp
enter
dec
pusha
dec
mov
pop
and
add
or
mov
dec
and
mov
in
push
aam
sub
mov
xor
ljmp
xor
popa
gs
push
dec
fisttpl
lea
jecxz
in
push
lods
dec
push
cmpsl
mov
pushf
or
add
movsl
fsubrl
pop
and
jmp
mov
pop
mov
sbb
imulb
push
cltd
or
into
cmpsl
stc
xchg
enter
inc
insb
dec
out
jne
ret
push
mov
mov
inc
xchg
cmp
fcoms
xor
imul
lahf
or
jo
orl
js
aaa
sbb
sub
push
xlat
sub
mov
lret
dec
jae
dec
pop
xchg
sub
cmpsb
pop
add
rorb
add
mov
fbstp
xor
mov
cmpsb
test
jecxz
xor
in
dec
sub
dec
data16
std
cli
cmpsb
jnp
inc
pop
push
dec
dec
mov
mov
bound
fdivl
mov
pop
mov
cmpsb
lcall
adc
cmp
ljmp
cmp
sub
dec
jmp
add
leave
push
adc
stos
in
mov
add
cmp
enter
jmp
repz
xchg
sub
push
pop
xchg
mov
push
and
mov
repz
pop
lret
mov
in
sahf
mov
orb
push
push
enter
mov
jle
leave
xchg
push
jge
xchg
fcomps
dec
mov
aas
dec
jb
dec
sub
roll
inc
popf
pop
sbb
pop
fiadds
and
sbb
or
and
inc
push
and
cmpsl
mov
pop
sub
enter
mov
pop
movsl
dec
pop
imul
mov
xchg
and
fcompl
mov
push
mov
inc
jmp
data16
or
mov
xor
sub
adc
in
cmc
push
cmp
imul
ret
imul
jecxz
xchg
and
sti
int3
leave
jp
fadds
call
jmp
jns
add
jne
into
xchg
inc
push
mov
icebp
fcompl
lcall
in
or
jb
enter
test
sbb
add
lcall
and
mov
mov
lret
mov
arpl
incl
pop
mov
xchg
sbb
dec
xlat
daa
mov
and
adc
mov
cli
data16
ficoml
aas
xchg
aad
add
cmpsb
push
enter
mov
lret
lods
mov
stc
dec
dec
sub
or
lea
pop
loop
leave
jmp
cli
loope
int3
mov
pop
les
mov
or
pusha
dec
and
in
into
aas
mov
adc
stos
xlat
test
dec
scas
imul
ljmp
cmp
leave
movsl
ljmp
push
mov
push
imul
cmovp
sub
mov
inc
nop
sbb
or
ljmp
inc
fistl
addl
xchg
pop
stos
pop
fisubrl
dec
cli
int3
sbb
mov
popa
inc
push
adc
or
or
jl
in
push
shl
clc
and
pop
ljmp
cmpsb
mov
and
push
mov
push
pop
or
mov
pop
pusha
popa
xorb
add
inc
xchg
movsb
stos
dec
fisubl
add
fildll
inc
ret
pushf
shlb
xor
cld
sub
xlat
mov
stos
addr16
fld
test
out
dec
dec
inc
pop
xor
out
inc
pop
push
cmpsl
pop
sbb
push
sub
insb
data16
and
sub
or
pop
hlt
shll
xor
adc
pop
addr16
or
mov
popa
mov
cs
dec
mov
jg
dec
leave
rcr
ljmp
scas
and
pushf
aam
dec
inc
dec
add
shrb
dec
call
rcrl
in
mov
sub
jmp
das
sahf
aas
aad
mov
sub
popa
psubsb
call
loopne
or
mov
sbb
pop
xchg
or
ljmp
mov
jbe
stc
fwait
inc
cli
dec
pop
fisubs
shrl
dec
add
outsl
jecxz
mov
jbe
and
push
lcall
inc
imul
jg
sbbb
cmp
andl
pop
mov
mov
mov
lret
sbb
push
sbb
or
push
lock
pop
in
ss
addr16
sbb
inc
gs
out
addr16
xor
push
test
and
sub
adc
adcl
inc
mov
lods
sbb
aam
jg
fdivr
stos
dec
into
push
cmp
add
rolb
cmpsb
int3
and
dec
xchg
pop
jl
push
int3
mov
xchg
call
add
push
dec
or
inc
pushf
mov
or
jl
push
add
pushf
cmp
filds
movsl
xchg
push
aam
in
cmp
repnz
ret
pop
pop
sub
xor
outsb
push
mov
mov
dec
inc
pop
xchg
adc
fisttps
push
mov
push
daa
gs
push
push
and
ljmp
jecxz
stc
mov
mov
pop
std
and
inc
inc
mov
gs
pusha
dec
test
xchg
xchg
lret
stos
stos
pop
mov
mov
cmpb
cmpsl
leave
sbb
dec
scas
fbstp
lret
cmp
xchg
pop
and
pop
lret
dec
sbb
jge
mov
mov
push
inc
imulb
inc
cmpsl
stc
mov
dec
cmpsl
inc
js
lahf
insl
jp
lret
mov
mov
ja
int3
xor
mov
stos
loope
shrl
jo
inc
iret
es
out
push
jo
add
cmc
test
inc
inc
mov
test
adc
pushf
xchg
movsl
mov
fisttps
sub
jb
iret
je
jl
add
filds
pop
inc
inc
xlat
gs
xchg
or
jae
sahf
sbb
dec
leave
imul
dec
push
addb
mov
in
xchg
test
sub
and
in
loop
mov
inc
sbb
sub
or
les
xchg
sub
cmpsl
sub
inc
pop
adc
jnp
dec
fs
jmp
sbb
inc
stos
inc
mov
dec
push
divb
sub
mov
inc
out
cmpb
in
insb
clc
inc
lds
add
and
popf
push
pop
pop
adc
mov
add
xchg
adc
ljmp
gs
imul
fmull
enter
adc
cmp
push
add
cmp
arpl
test
sub
mov
and
cs
insl
or
ret
push
ljmp
and
sbb
aaa
fistpl
lods
and
mov
orl
leave
pop
add
fldt
mov
inc
dec
xchg
or
loope
xor
inc
dec
push
sbb
or
jne
or
lds
cmpsb
inc
jmp
scas
jmp
fmul
movl
push
or
or
sub
les
lcall
imul
jecxz
faddl
shl
mov
into
out
add
inc
out
sbb
scas
mov
sahf
rcrb
mov
lret
dec
leave
jne
pop
push
sub
sbb
test
decb
push
inc
adc
pop
jg
push
mov
outsl
dec
pop
stos
arpl
jmp
cmp
pusha
xor
sarl
pop
push
cltd
lahf
fists
inc
push
lret
pop
lahf
pop
mov
dec
xchg
shlb
movsb
out
rcrl
decl
push
mov
ret
inc
lcall
xchg
sbb
dec
mov
or
inc
mov
inc
in
aas
ds
rorb
cmp
add
fcomps
mov
lret
jmp
xchg
inc
jmp
xor
jecxz
sub
add
mov
dec
sbb
inc
and
pop
test
testl
ret
cli
aad
push
fsubl
mov
cld
fidivrl
inc
dec
jecxz
inc
pop
stc
mov
enter
cmp
dec
push
jp
add
je
dec
mov
push
sub
gs
rcll
or
sub
sbb
sub
mov
inc
xchg
mov
out
aas
fists
cmp
leave
mov
add
dec
inc
dec
or
jmp
dec
addb
pop
or
test
ret
cmp
les
mov
nop
aas
sub
push
mov
and
repnz
add
mov
jmp
mov
inc
push
mov
inc
out
leave
cmpsb
mov
push
addl
jmp
scas
imul
insb
jmp
test
ljmp
call
aam
cld
and
hlt
es
and
imul
xor
outsb
ret
scas
mov
push
ja
es
sbb
fsts
add
sti
das
aaa
cli
sbb
mov
nop
fsubrs
mov
mov
into
in
add
rclb
imul
inc
cmpsb
mov
adcb
sbb
inc
test
mov
scas
inc
jmp
mov
cmp
sbb
movsl
sbb
fisubrs
jns
icebp
addb
sahf
cmp
mov
inc
ret
test
xor
cmp
pop
mov
inc
out
andb
pop
push
push
lds
stos
inc
mov
mov
or
pop
jmp
mov
or
mov
shlb
and
stos
sbb
or
pop
fst
lods
mov
dec
mov
pop
sub
ja
sbb
mov
mov
pop
jp
sub
pop
fisttpl
sbb
lret
inc
pop
dec
and
add
push
mov
mov
jne,pt
int3
or
fimuls
loopne
int
push
and
push
leave
subb
inc
pop
mov
mov
pop
inc
faddl
jo
in
mov
push
dec
stos
mov
and
dec
or
in
ret
lcall
int
popa
cmp
cmpsl
push
and
push
aam
dec
dec
pop
mov
mov
cmp
pop
sbb
push
repz
enter
div
out
out
test
clc
jge
stc
in
int3
stc
mov
ret
add
shll
mov
imul
fwait
shlb
repnz
sbbb
cmpl
inc
arpl
and
sbb
in
filds
aad
pop
lret
ret
lret
fsubp
ret
leave
sbb
or
push
sbb
jns
xchg
push
mov
dec
dec
imul
lahf
jg
mov
pop
ret
mov
xor
dec
or
lret
adc
dec
mov
out
lret
leave
cmp
push
jmp
int
int3
in
movsb
aaa
push
sub
jp
test
jg
adc
mov
push
pop
and
mov
int
fiadds
dec
sbb
mov
cmpsb
scas
stc
pop
lret
mov
xchg
push
loope
aam
inc
jmp
daa
pop
ds
jnp
mov
and
jge
std
add
ret
shlb
mov
mov
ret
mov
test
xor
dec
mov
and
sbb
dec
mov
cwtl
out
stos
add
mov
test
inc
cmp
mov
dec
push
mov
push
pop
mov
or
mov
dec
clc
bound
dec
jmp
call
pop
dec
pop
iret
scas
inc
and
ret
or
inc
and
mov
lret
jecxz
push
ljmp
push
push
xor
aas
out
dec
mov
sbb
inc
mov
sub
add
adc
xchg
rcl
lcall
dec
inc
sub
and
in
xchg
push
and
and
pop
nop
iret
sbb
int3
add
and
sahf
inc
add
xchg
lea
pop
fsubrp
bnd
or
mov
mov
cltd
mov
frstor
out
dec
xchg
cmpsl
jne
test
cmp
push
aas
rcrl
push
xor
arpl
inc
addr16
push
and
push
push
repnz
cs
xor
mov
popf
mov
mov
std
movsl
adc
inc
add
push
notb
shl
test
das
popl
out
xor
push
fidivl
mov
lods
test
xchg
fsubl
sbb
sub
outsl
imul
icebp
or
push
sub
inc
mov
imul
jl
call
jbe
scas
sub
movsl
xor
xlat
and
pop
cli
out
sub
sbb
fisubs
lret
push
inc
js
cmpb
sahf
fsub
stos
lret
inc
inc
adc
jae
pop
enter
add
push
xchg
cmp
sub
js
mov
mov
mov
pop
ja
ljmp
and
add
dec
pop
xchg
or
mov
mov
or
loope
enter
fistps
imul
inc
and
push
cmp
inc
stc
aaa
mov
mov
fwait
or
insb
daa
les
or
xor
shlb
pushf
sbb
mov
mov
rorb
pop
mov
push
push
and
lret
sub
inc
xor
sub
cltd
iret
lock
das
scas
jge
out
jmp
daa
gs
adcb
enter
insb
loopne
xor
push
int3
dec
pop
cld
scas
dec
imul
cmp
jg
out
sbb
test
or
mov
jecxz
cmpl
icebp
aaa
mov
aas
test
data16
sub
imul
lcall
sbb
push
in
inc
or
popa
xor
ret
data16
push
pop
inc
and
pushfw
lret
stos
outsl
mov
insb
in
push
dec
and
gs
xor
mov
cmp
rclb
sub
pop
dec
push
sbb
pusha
push
jae
pop
lret
adc
sbb
imul
popf
push
pop
or
or
dec
imul
fildl
pop
lods
or
mov
cmp
sub
inc
pop
mov
aaa
scas
mov
enter
push
fstpl
nop
dec
mov
mov
xor
sti
dec
test
add
div
insl
mov
mov
popa
call
dec
add
mov
xchg
hlt
dec
ljmp
lods
pop
cmp
push
cmp
and
xor
sub
add
xor
or
pop
movsl
cs
mov
int3
xlat
inc
sub
mov
addl
fsubrl
leave
dec
cs
loope
test
sub
repz
in
ja
cs
jecxz
sub
jnp
pusha
pop
enter
repnz
lods
and
imull
adc
fmul
repnz
push
and
or
sub
jg
and
call
jl
or
shl
movsl
xor
out
daa
cld
inc
sub
lods
cs
in
scas
scas
mov
daa
mov
inc
cli
ss
imul
enter
jb
ljmp
mov
testb
adc
popf
ficompl
mov
sub
jae
push
dec
loop
lret
push
rolb
test
push
cmp
test
and
dec
inc
or
sub
int3
loope
sub
add
out
mov
sahf
sahf
mov
fdivrl
add
or
mov
stc
mov
pop
cmp
mov
arpl
cmpsl
lret
lahf
call
pop
cwtl
mov
mov
int
pop
scas
cmp
mov
ljmp
push
das
mov
test
jo
xchg
push
cmp
ljmp
mov
adcb
call
cmp
mov
cmp
clc
stos
divb
dec
lcall
rcr
scas
dec
mov
xchg
pop
je
in
mov
mov
andl
dec
out
fs
cmc
mov
pop
ds
fmull
cmp
leave
sub
stos
into
insl
mov
sub
ja
test
inc
andl
pop
mov
test
jnp
sbb
inc
push
jmp
adc
dec
or
in
sub
repnz
dec
jmp
enter
int
dec
jno
dec
mov
out
pusha
subl
add
mov
jecxz
mov
daa
stc
iret
das
ficoms
pop
aad
lds
scas
jle
cmp
adc
pop
popf
adc
push
pop
mov
fnstsw
gs
data16
aas
in
rcll
pop
loop
fldcw
or
or
dec
imul
out
addr16
imul
das
insl
daa
mov
leave
sub
vmovss
or
push
xchg
pop
ret
xchg
sub
repz
or
dec
mov
cli
dec
inc
adc
sub
jne
inc
dec
mov
fadd
add
push
out
enter
sbb
andb
enter
mov
push
push
add
cmpsb
or
dec
sub
add
sub
xor
add
cmpsl
movsl
cmp
scas
pop
hlt
cld
jb
int
in
jae
fidivrl
fcoml
ljmp
cwtl
imul
mov
in
xchg
cs
jne
xor
imul
enter
mov
scas
pop
jle
jl
inc
mov
sbb
xor
fcmovnbe
fldenv
sbb
push
add
or
and
sbb
ret
dec
pop
das
mov
lock
push
enter
mov
cld
jle
cmp
fstl
arpl
sub
arpl
dec
loop
test
cli
outsl
sbb
es
inc
scas
push
sub
add
push
mov
mov
inc
or
rorb
and
call
sti
fs
movsb
push
loopne
xor
jbe
fdivl
out
lret
push
xor
data16
sahf
push
enter
pop
pop
mov
push
inc
leave
lock
adc
imulb
imul
xchg
xchg
rorl
jp
stc
inc
jb
daa
pop
jo
dec
shrl
loope
lods
cld
xor
inc
push
inc
aas
xchg
dec
mov
test
pop
and
shrl
xchg
inc
lahf
aaa
xchg
and
js
ljmp
scas
sub
cmovns
push
in
lret
push
rorl
clc
xchg
jnp
loopne
pop
inc
dec
mov
jne
or
out
test
mov
mov
hlt
call
sbb
jg
pop
cmp
inc
jns
or
inc
lret
inc
mov
clc
pop
cli
inc
dec
lret
icebp
and
sub
add
jno
xchg
inc
pop
fnstcw
xchg
insb
xor
jmp
pop
and
jmp
in
and
movsl
hlt
push
movsb
cli
jl
outsb
xchg
test
push
in
jmp
xor
ljmp
aaa
aas
mov
push
fisubrl
cli
and
dec
push
or
jnp
adc
sti
lret
mov
sub
cmp
mov
mov
dec
pop
out
faddl
and
jl
mov
leave
jecxz
mov
imul
in
inc
sti
sub
xchg
adcl
or
push
jns
icebp
cmp
lret
dec
ljmp
pop
dec
inc
sub
in
or
jbe
lret
fs
test
mov
dec
push
fists
addr16
out
xchg
cmp
inc
sahf
jg
int3
cli
mov
cmpsl
and
data16
addr16
inc
scas
aaa
mov
mov
scas
push
addl
rcr
lret
in
cmp
lret
sbb
pop
movsl
jecxz
inc
ja
pop
lds
call
lret
inc
or
insl
fiaddl
or
jbe
imul
cs
cmpsb
and
pop
stos
pop
subl
mov
scas
jmp
mov
ljmp
cmp
ljmp
sub
inc
push
call
mov
in
or
add
adc
jbe
inc
sub
jb
scas
inc
xchg
addr16
imul
test
call
pop
aam
fmul
ficoml
imul
adc
sub
cs
adc
push
mov
push
es
pop
or
jmp
push
shrb
fsubrs
dec
cmc
push
nop
test
lea
pop
push
pop
dec
add
xchg
out
cmp
or
sub
dec
inc
loopne
cs
inc
jecxz
mov
leave
scas
sub
adc
pop
loope
int3
push
in
popf
cwtl
inc
xor
insl
enter
push
cmpb
xchg
pop
push
mov
stos
mov
nop
mov
push
xchg
adc
jae
and
icebp
or
add
repnz
cmp
cmpsb
decl
jo
and
fmulp
and
imulb
mov
fxam
in
shlb
cld
jmp
push
sbb
cmp
push
ljmp
or
xor
aas
incl
in
xor
mov
dec
push
inc
mov
dec
cmp
dec
in
mov
fwait
dec
addr16
mov
stos
or
xchg
sbb
jmp
pop
push
imul
or
add
dec
jae
lcall
sbb
ret
loopne
shrl
add
ja
push
mov
addl
in
cmpsl
repz
push
sbb
add
adc
inc
fiaddl
cli
inc
jg
nop
ret
sub
sub
inc
add
mov
popa
xor
fwait
pop
mov
jnp
dec
xchg
xor
jg
insb
jno
sbb
pop
daa
clc
xor
movsl
dec
jecxz
mov
adcb
fldt
out
sub
sbb
idivl
in
mov
sbb
dec
mov
mov
sub
inc
pop
xor
xchg
mov
and
jno
ret
nop
sbb
mov
test
lret
pop
xor
jmp
fildll
push
xchg
call
jge
sub
add
or
ljmp
jnp
push
push
sahf
loop
inc
iretw
in
sub
std
call
test
nop
lret
pop
mov
cmp
les
pop
or
cs
sahf
fmull
fcmovne
sbb
xchg
cmp
into
cmp
pop
jg
xor
pop
mov
sub
outsb
cmpsl
cmp
mov
xor
or
xchg
lock
and
fldln2
data16
cwtl
movsb
shlb
mov
sahf
cmpsb
dec
xchg
imul
push
les
dec
cmp
pop
fs
int3
mov
add
fsubrs
pop
adc
mov
push
loope
lahf
and
jg
fdivrs
fadd
xor
sbb
or
movsl
dec
rcrb
int
lret
negl
or
or
out
mov
adc
les
mov
cmpsl
jp
scas
in
mov
adc
std
repnz
cmp
pop
ret
sbb
push
test
leave
enter
xchg
mov
xchg
mov
inc
xchg
sub
or
fldenv
sub
bound
dec
add
ret
mov
and
outsl
fcomps
pop
and
cmp
xchg
mov
out
mov
ljmp
xchg
dec
or
push
inc
stc
or
mov
mov
aas
mov
mov
xlat
addr16
sahf
stc
inc
mov
inc
leave
shlb
xor
in
sbb
mov
enter
test
push
dec
gs
add
mov
in
xchg
pop
scas
stos
pop
fcom
xchg
push
pop
fcomp
cmp
dec
test
test
ljmp
mov
pop
es
enter
stos
loop
cmp
pushf
mov
loope
mov
mov
mov
cmp
pop
sti
xchg
inc
fsts
sbb
aaa
iret
sbb
sahf
enter
sbb
loop
ss
xchg
call
pop
xlat
sbb
shl
pop
aad
das
xchg
insl
outsl
jo
hlt
sbbl
sahf
xor
sti
add
mov
mov
imul
cmp
cmp
mov
inc
mov
mov
fs
or
leave
pop
sub
mov
imul
sub
ss
stos
fsubr
sub
pop
popa
pop
push
gs
rolb
imul
inc
push
xor
je
fadds
test
test
scas
pop
xchg
xor
mov
sub
xchg
add
inc
and
mov
les
sbbb
adc
or
fsubrl
xor
enter
push
in
dec
out
sbb
pop
push
nop
inc
cmp
fmul
pop
dec
mov
cs
fsubs
xchg
cli
repnz
push
add
mov
mov
es
sub
mov
ror
ret
lods
lcall
xor
leave
dec
cmpb
jp
mov
jg
sbb
fs
sahf
pop
es
add
aaa
enter
aaa
push
inc
ret
push
sub
or
pop
or
stos
addr16
mov
stos
add
sub
test
in
loopne
dec
mov
mov
dec
push
pop
adc
adc
loope
insb
imul
or
add
lcall
lret
loopne
dec
xor
enter
enter
icebp
cmp
adc
lea
orb
mov
pop
push
pop
pop
fld
adc
les
add
sarl
pop
pop
shr
adc
shl
ljmp
andb
jmp
add
arpl
jmp
enter
adcb
leave
dec
mov
mov
dec
fwait
pop
mov
adc
pop
hlt
addr16
mov
inc
movsl
or
add
lcall
loopne
dec
mov
xchg
mov
enter
xchg
cmp
xchg
sub
and
xchg
mov
daa
arpl
add
sbb
dec
dec
xor
lds
jecxz
sahf
data16
inc
fstpt
mov
outsl
dec
jge
mov
dec
je
movb
jne
jp
inc
inc
in
dec
pop
sbb
add
dec
cmp
leave
andl
shll
dec
std
daa
fisubrs
add
rcl
cmpsl
ret
mov
gs
pop
daa
outsl
sub
int3
inc
out
jmp
xchg
pop
fimull
ficoml
mov
mov
or
mov
mov
mov
add
int
jp
sub
cmpl
bswap
dec
sub
test
es
insb
pop
test
and
dec
mov
stos
jmp
cmp
or
js
sbb
pop
lahf
cmp
push
rorl
fidivrl
xchg
and
mov
ret
mov
push
arpl
pop
cmp
inc
test
jg
push
or
pop
je
js
enter
mov
or
icebp
inc
cli
cs
repz
xchg
je
lret
dec
fld
xor
dec
and
add
pop
insb
jg
cmp
mov
inc
mov
test
imul
add
pop
push
push
arpl
ja
sub
mov
leave
push
xor
or
popa
fldl
cli
sub
into
mov
mov
dec
mov
xchg
jmp
add
sahf
push
inc
loope
lods
jb
subb
pop
addr16
push
das
imul
out
ret
dec
call
loop
into
ret
lret
cmp
dec
out
in
sub
push
dec
out
and
lcall
dec
out
in
cmp
cmp
or
or
mov
and
repnz
jg
cmp
mov
fcoml
adc
jne
xor
inc
lahf
pop
loop
dec
mov
adc
aaa
mov
mov
test
in
inc
mov
out
aam
xor
mov
adc
repnz
and
adc
cmp
pusha
and
mov
lcall
in
jno
or
and
inc
mov
int
push
dec
aam
sbb
mov
ljmp
cmpsb
das
mov
mov
pop
inc
out
jmp
sbb
fwait
sub
shrl
adc
mov
xchg
or
cmp
in
mov
mov
push
xchg
inc
das
pop
sub
ror
in
sbb
imul
xor
and
jnp
fimuls
lret
fcomip
imul
scas
push
popf
fildll
xchg
mov
lods
inc
pop
jg
adc
push
or
add
adc
je
scas
movsl
adcb
mov
xor
lret
js
sbb
cli
lock
test
insl
faddl
jb
andl
pop
jb
faddl
enter
adc
cmp
push
mov
pop
lods
scas
lea
fmul
push
loope
js
mov
push
in
insb
fwait
adc
and
jo
aaa
jo
scas
sub
imul
nop
cmpsl
int3
lahf
imull
and
add
les
mov
stos
gs
adc
dec
add
jecxz
adc
es
push
pop
and
fsubrl
inc
out
sbb
mov
lret
inc
stc
mov
add
outsb
inc
mov
loop
arpl
subl
cli
nop
les
pop
dec
ficoms
jmp
jnp
repz
das
adc
jmp
es
lret
dec
cmpsb
scas
repz
xor
in
movsb
jnp
repz
add
pop
push
dec
lret
mov
dec
ds
pop
jl
subb
cli
fisubs
fidivl
addb
jp
es
mov
dec
nop
xchg
mov
dec
rcl
test
addr16
mul
push
imul
pop
dec
pop
inc
mov
and
out
or
out
enter
add
mov
icebp
shll
mov
push
lar
inc
mov
jne
jnp
mov
inc
ret
mov
orb
xor
stos
and
xor
ljmp
pusha
js
cmp
pop
repnz
or
stc
dec
sti
push
jp
sub
inc
mov
push
cmpsl
lret
es
popf
push
js
mov
outsl
inc
fsubr
inc
cli
inc
repnz
dec
jo
jg
aas
dec
ljmp
fstpl
xorb
in
push
jecxz
sbb
pusha
mov
cmp
jecxz
loope
fxch
out
or
jp
cmp
hlt
test
push
int3
ljmp
dec
sub
sub
adc
inc
decb
rolb
pop
push
push
mov
pop
les
dec
data16
test
or
jo
mov
lret
outsl
mov
bound
das
lahf
test
adc
inc
adc
jae
inc
stos
clc
jmp
inc
je
jmp
sahf
repnz
fwait
xchg
push
sarl
fldcw
ds
imul
ljmp
aas
sub
inc
cld
mov
pop
inc
enter
jne
jnp
and
movb
push
mov
inc
xor
inc
in
addr16
push
fadd
out
dec
or
mov
add
sub
leave
pop
outsl
xor
je
int
dec
les
jecxz
lret
sub
repz
xacquire
mov
cli
sar
insb
jle
sbbb
jecxz
cli
xor
mov
addr16
pop
imul
dec
xchg
dec
push
inc
dec
xchg
int
dec
cmp
dec
shl
push
add
cmpsl
xchg
sub
test
out
int
xor
add
mov
mov
cs
fadds
cmp
xchg
lret
jle
inc
imul
add
dec
fimull
dec
leave
std
jmpw
fisubrs
inc
int3
mov
or
dec
fwait
lret
sbb
rclb
icebp
jnp
xchg
cmpl
mov
cmp
dec
daa
jne
jp
adc
jne
mov
loopne
movsb
jmp
movsl
and
add
cmc
mov
int3
add
cs
mov
mov
stos
cmp
test
pop
jmp
fmull
bound
cs
fimull
mov
push
jno
out
pop
in
daa
fs
push
mov
adc
cld
jae
adc
cmp
xchg
adc
dec
add
popa
jns
fnclex
in
sbb
or
ja
dec
jge
mov
clc
sub
pop
mov
xchg
cmp
sub
inc
sarl
inc
sub
aaa
or
push
mov
fisttpl
sbb
inc
cmp
and
push
or
xor
cmp
stos
mov
pop
mov
mov
lea
sub
or
jecxz
cmpsl
mov
repz
nop
adc
mov
inc
icebp
lods
stc
inc
iret
into
xlat
cld
lret
adc
pop
mov
fsubl
stos
adc
pop
add
outsb
bound
add
or
pop
ljmp
push
adc
in
or
mov
jae
roll
push
clc
mov
les
in
mov
test
pop
adc
lds
inc
adc
sbb
add
adc
dec
fisubs
pop
arpl
aaa
pusha
xlat
lds
ljmp
mov
add
faddl
stos
loope
cmpb
pop
inc
inc
cmp
add
daa
cmpsb
sbb
push
or
or
dec
cld
jnp
or
push
push
dec
jle
fldcw
mov
mov
fiaddl
add
lods
sti
and
inc
pop
cmpsb
sbbl
push
sub
jns
fldl
shlb
mov
stc
pusha
inc
test
mov
rcr
adc
out
add
ror
mov
ljmp
dec
mov
aaa
cmp
lret
adc
pop
dec
sub
arpl
es
loope
scas
js
adc
mov
aas
leave
push
fmull
xor
sub
mov
mov
sub
lods
dec
or
xchg
cmp
push
scas
and
leave
and
and
idivb
std
pop
int3
jbe
mov
fidivl
xchg
fisttpl
pop
imul
stc
pop
int
push
js
cmp
clc
inc
data16
stc
xor
xchg
push
enter
dec
js
xor
cs
out
outsl
incl
lds
das
lahf
add
cld
lret
into
das
dec
arpl
dec
enter
scas
cwtl
xor
imul
pop
icebp
leave
dec
sub
les
inc
cmpb
fnstcw
inc
outsb
rorl
pop
fwait
les
pop
or
ss
inc
aas
in
sbb
xor
inc
addb
jae
mov
jecxz
movsl
fistpl
movsb
inc
imul
inc
fisubl
sahf
bound
in
or
or
pop
sub
push
movb
jae
add
outsl
mov
rcrb
fstpt
fmull
out
pop
pop
lret
push
cli
and
les
loop
in
inc
cmpsl
sub
outsl
pop
jle
sbb
mov
sub
and
ljmp
fldl
mov
pop
jns
jg
push
and
mov
mov
lret
out
adc
jg
lahf
mov
mov
xchg
dec
and
mov
adc
xchg
outsl
bound
imul
cltd
aas
xor
and
aas
fsubl
addr16
shlb
ds
dec
aas
and
in
jmp
pop
arpl
in
bound
dec
arpl
or
inc
nop
mov
jmp
scas
or
add
lods
xchg
scas
sub
sbb
ljmp
mov
lock
push
aas
rorl
jae
lods
ljmp
test
pop
dec
inc
cmp
clc
inc
or
add
or
rolb
or
jno
and
in
xchg
mov
dec
scas
movsl
jg
jge
fbstp
mov
xchg
add
jl
pop
rorl
lret
stos
add
fmull
imul
xor
ret
pop
jg
mov
out
cmp
jl
jmp
or
sub
and
push
sub
or
sub
rclb
stc
shlb
imul
aaa
push
test
cli
icebp
xchg
pop
ret
or
mov
push
fisubrs
in
call
mov
jno
test
stc
imul
out
xor
mov
enter
add
and
dec
xchg
pop
dec
push
mov
mov
xor
flds
popl
bnd
mov
lret
adc
ljmp
shll
orl
repnz
add
cmpsl
lret
pop
out
int
and
scas
push
lcall
adc
stos
push
stos
and
or
fwait
dec
xor
stc
xchg
xor
mov
pusha
and
add
stc
cs
imul
add
sbb
dec
sub
mov
dec
dec
inc
xchg
cmc
sub
dec
enter
mov
aad
or
xlat
jge
stos
mov
mov
or
add
sub
insb
rolb
popf
call
or
sbb
sahf
mov
ret
orb
push
mov
push
test
xchg
stc
pop
cmpsl
dec
push
jecxz
faddl
lret
mov
inc
jecxz
in
xchg
daa
in
sahf
pop
and
jns
adc
mov
bound
test
out
mov
dec
aam
or
test
stos
leave
outsl
xor
mov
jmp
pop
xor
aam
lret
in
mov
inc
or
adc
mov
push
and
cmp
push
cmc
dec
push
test
insb
push
leave
inc
inc
inc
inc
or
sub
in
out
xor
cld
adc
push
sbb
xrelease
cli
repnz
jecxz
mov
sbb
sahf
cld
imul
lds
ret
or
xor
das
pop
pop
outsl
mov
repz
in
pop
dec
xchg
stos
sub
test
insl
in
test
inc
test
gs
call
sub
fwait
xor
pop
push
xor
addr16
push
cmpsb
nop
and
fwait
test
test
sub
mov
mov
je
sub
in
or
arpl
jae
mov
jmp
jmp
dec
ret
cmp
out
and
mov
push
gs
xor
leave
xor
stc
add
mov
jne
out
push
mov
cmp
jne
xchg
loopne
xor
pop
jge
and
in
inc
jge
dec
ret
jns
push
sub
cmp
dec
rcr
mov
loop
dec
mov
lea
in
sarb
outsb
sysret
addr16
and
sub
stos
test
repnz
mov
test
push
push
lock
aam
or
cmp
cmp
leave
pop
das
roll
dec
pop
mov
lret
inc
inc
cmp
loope
push
stos
enter
pop
sti
scas
lds
jne
jge
pop
mov
xchg
lret
in
cmp
xor
adc
xor
mov
ret
cmp
stc
mov
and
test
enter
imul
int3
cmp
or
mov
ret
outsl
push
mov
xor
cmp
ljmp
cld
jecxz
dec
mov
push
xchg
pop
or
adc
mov
lea
sub
mov
sub
int3
adc
dec
push
daa
addr16
xlat
push
rclb
and
jo
lods
fmulp
in
ljmp
lret
int3
jne
adc
lret
call
and
mov
int3
mov
fdiv
in
imul
je
das
loope
push
pushf
or
mov
cmp
and
nop
fsubl
xchg
or
cmp
inc
cli
jmp
xchg
pop
icebp
lock
rcr
rorl
lret
sbb
mov
aam
push
andb
pop
cmp
iret
cmp
dec
adc
mov
icebp
int3
addr16
repnz
mov
xor
dec
mov
test
add
pop
pop
mov
ror
jecxz
mov
push
and
mov
sub
xchg
mov
sub
popf
sbb
xchg
arpl
dec
push
cmpsb
inc
dec
jle
enter
daa
adc
push
adc
cmp
inc
mov
adc
call
lcall
sbb
iret
pop
pop
test
mov
cmp
or
inc
leave
xchg
pop
sub
xchg
mov
loopne
imul
pop
sub
shrb
std
stos
ljmp
pop
daa
mov
and
out
xor
lea
sub
aas
lret
or
mov
mov
ja
insb
pop
leave
xor
in
dec
ljmp
stc
shrl
rol
ret
insl
inc
shrl
int
js
enter
stc
test
xor
test
out
pushf
loope
mov
sahf
loopne
mov
push
xchg
inc
addl
and
ret
sbb
push
out
xor
and
xchg
rorb
and
in
xchg
mov
jb
lock
loope
sbb
inc
pop
dec
cld
and
out
mov
iret
inc
lods
inc
mov
enter
ftst
sbb
cmp
adc
push
data16
fisubrs
or
sub
sti
dec
std
inc
jmp
mov
xchg
push
mov
lods
adc
rorb
ret
cli
repnz
and
or
fdiv
sub
inc
sub
mov
es
je
ret
test
push
mov
fstps
aam
fistl
fdivrs
mov
pop
mov
std
imul
cmp
jecxz
test
inc
pop
pop
push
jmp
sbb
in
imul
cli
and
or
push
inc
data16
pop
jg
dec
stos
xor
in
insb
stc
loop
sub
pop
or
mov
xchg
mov
fdivr
lds
outsb
clc
jg
add
outsl
sub
pop
or
cli
imul
in
sub
imul
inc
int3
int
out
pop
ret
mov
mov
int
daa
jmp
test
lds
cwtl
or
lcall
movsl
rcrb
xchg
dec
xor
cmp
lods
or
in
mov
push
sub
orb
leave
sbb
mov
mov
jmp
js
imul
xor
sub
lahf
jmp
stos
jne
lds
test
daa
fisubs
loopne
xchg
std
test
lcall
jb
jmp
sub
loope
imul
dec
repz
sub
movb
ret
xchg
inc
adc
jecxz
xor
push
pop
adc
push
pop
cmp
lret
mov
subb
dec
lahf
cmp
sub
movsb
ljmp
lds
nopl
stos
jp
inc
and
inc
notl
cmp
test
shlb
pop
xchg
push
andb
cmpsb
fstpt
orb
push
sub
orb
push
add
sbb
xor
and
or
cmpb
gs
pop
pop
xchg
and
fwait
lret
sahf
pop
mov
xchg
jbe
mov
cmp
sbbl
ret
pop
inc
mov
add
sub
sbb
push
insb
inc
dec
nop
mov
push
add
addr16
lcall
jl
jecxz
push
punpcklbw
test
inc
adc
inc
clc
mov
ljmp
lds
in
add
pop
int
jne
scas
push
lret
imul
loop
insl
xchg
and
inc
lret
dec
push
out
and
jl
out
jb
adc
leave
stos
dec
jg
sbbb
and
lods
lret
ficoms
push
into
cli
sbb
leave
ficoml
sti
sbbl
mov
adc
sbb
insb
adc
inc
pop
sahf
mov
aad
add
loopne
imul
sub
in
push
push
cli
mov
push
imul
push
lahf
and
or
loop
mov
pop
push
pop
xchg
sarl
shll
out
and
pushf
inc
mov
and
stc
pop
and
lds
rorb
sub
pop
fiaddl
dec
pop
dec
xlat
pop
xlat
lods
sub
cmp
icebp
mov
mov
xchg
sub
outsb
adc
xlat
mov
pusha
orl
xor
sahf
popa
sbb
pop
pop
addr16
push
jmp
shll
leave
pop
push
sub
leave
rol
jecxz
mov
push
imul
rcll
jno
pop
mov
xor
sahf
jno
shlb
inc
sub
test
inc
inc
lds
add
sub
jp
push
gs
add
imul
jo
pushf
loop
or
add
pop
outsl
ds
loope
lds
mov
xchg
out
cli
xchg
push
add
inc
mov
mov
sub
pop
jecxz
test
sub
sbb
aam
and
pushf
rorb
cmp
test
loop
pushf
nop
inc
sti
cmp
mov
lods
cmpsb
cmp
mov
sbb
call
inc
or
call
mov
sub
cmp
jmp
adcl
cmp
dec
lret
push
dec
adc
pop
pusha
sub
imul
and
aas
pop
sub
cmpsl
pop
inc
out
pop
fists
lock
xor
push
lahf
mov
or
inc
pop
inc
push
push
mov
add
jl
mov
ljmp
pop
nop
push
push
mov
xchg
or
adc
neg
dec
fcompl
in
test
cmp
or
movsb
sub
stc
or
jp
pop
ret
enter
adcl
pop
aaa
lods
xor
lock
push
imul
add
cld
xor
into
fsubs
movsl
fucomi
jmp
js
mov
inc
int
repnz
mov
out
jns
cmp
cmp
cmp
mov
in
iret
pop
xor
cld
xchg
aas
cmp
mov
aad
imul
xor
jecxz
inc
movsb
and
test
xchg
add
movsb
pop
dec
nop
sahf
sub
imulb
daa
sahf
mov
cmp
fisttps
add
fdivs
push
stc
jg
ds
pusha
push
filds
and
inc
pop
dec
popf
arpl
and
mov
mov
sbb
or
lods
lds
ja
addr16
imul
outsb
leave
daa
fsubrp
jb
jp
sti
xchg
mov
test
data16
insl
fsubr
jmp
add
xsave
jg
pop
mov
add
leave
inc
add
pop
or
insl
dec
fisubl
repz
mov
or
inc
fbld
mov
xchg
ljmp
enter
insb
subl
dec
fsubl
push
imul
sbb
imul
sbb
xor
popf
shrb
mov
in
xchg
pushf
jg
dec
lret
dec
mov
jns
in
ljmp
std
pop
push
imul
sub
jb
lret
mov
jmp
dec
sahf
mov
mov
adc
fsts
aam
pop
ja
adc
inc
push
call
dec
lods
xlat
mov
xchg
dec
leave
sbb
jecxz
inc
dec
sub
add
imul
or
and
lret
loopne
pop
xor
pop
cmp
mov
les
pop
xor
push
add
cmp
dec
clc
xchg
push
add
in
cmp
enter
mov
xor
push
popa
mov
push
fstl
sbb
adc
test
loop
ffree
cmp
stos
dec
cs
sub
jmp
leave
leave
das
in
aad
iret
test
addr16
dec
mov
push
jl
in
in
in
fmuls
mov
fsubp
mov
jo
imull
add
lock
sub
and
lret
ret
pop
popa
aad
inc
push
mov
pop
lret
nop
add
xor
adc
nop
push
xchg
mov
adc
cmp
and
es
jp
lret
mov
mov
cs
fs
inc
cld
mulb
dec
stos
jecxz
std
or
lods
push
add
enter
icebp
mov
lcall
les
jmp
aaa
or
push
imul
mov
pushf
pop
adc
mov
push
es
dec
mov
fbld
add
sub
dec
sarb
stos
and
cmp
sub
mov
jg
inc
daa
mov
inc
xchg
cld
leave
push
sub
cltd
in
gs
pop
jl
push
mov
ljmp
aas
inc
mov
in
cld
loop
dec
fimull
ret
inc
jg
jecxz
push
ljmp
cld
add
imul
and
aas
mov
cmp
jns
repnz
stos
and
ljmp
add
dec
sub
mov
pushf
push
sarl
andl
inc
or
sub
mov
pop
dec
adc
in
dec
adc
call
sbb
in
xchg
rclb
dec
lea
pop
mov
adc
and
push
pop
mov
std
xor
fidivrl
cmp
mov
push
into
xorb
or
or
and
aas
sbb
jecxz
enter
dec
gs
or
ljmp
push
bound
cld
mov
sbb
add
dec
jl
test
add
cld
or
cltd
jecxz
cmp
scas
dec
mov
sbb
fsts
in
pushf
andb
cld
enter
inc
mov
inc
pop
ret
push
enter
rcll
mov
jbe
std
mov
sbb
jno
fildl
cmp
rorl
movsl
aas
leave
in
pusha
mov
sub
dec
int
mov
inc
sbb
push
jae
orl
test
test
ds
fxam
cmp
jmp
fucomi
stc
or
shrb
sbb
dec
mov
call
xor
mov
push
in
imul
fwait
mov
call
sub
push
or
or
cs
js
inc
fsub
or
mov
ljmp
or
cmpsl
sahf
test
std
es
xchg
and
jns
inc
stc
pop
pop
cld
or
or
cmp
jmp
mov
add
xchg
fs
push
imul
and
icebp
jb
inc
ret
in
add
xor
mov
xchg
pop
dec
lret
stos
xor
mov
pop
shll
shrb
and
roll
pop
shll
fldl
enter
cs
xchg
dec
jecxz
das
rcrb
cmp
mov
add
enter
les
orb
xchg
xchg
pop
mov
pop
mov
in
cwtl
lahf
push
jae
cmp
cwtl
int
sbb
or
stc
xacquire
sub
rcrb
dec
pushf
jle
jns
xchg
or
jb
das
push
int
jmp
ljmp
and
cld
pop
sub
adc
or
sahf
insb
and
inc
push
rorb
imul
sub
stos
pop
popa
pushf
imul
push
out
test
mov
repz
and
aaa
dec
rclb
jmp
dec
adc
mov
pop
ret
pop
repnz
and
mov
jnp
push
divl
mov
cmc
sub
cmp
pop
and
movsb
dec
jl
sbb
mov
add
leave
mov
sub
inc
es
fcoml
inc
lret
rorb
cs
addr16
jl
pop
fldl
repnz
int3
cs
loop
call
pop
gs
inc
jge,pn
or
imul
into
lock
outsb
movsb
cs
xchg
test
jmp
pop
ret
sbb
mov
or
mov
xorl
test
movsb
test
mov
aaa
dec
notb
mov
dec
mov
pop
push
fsubrl
in
xor
popf
lahf
push
cmovbe
sub
dec
fcomps
inc
mov
xor
adc
test
mov
adc
mov
fmull
pusha
cmp
leave
mov
arpl
sub
pusha
dec
sbbl
testl
out
pop
mov
pop
popa
cmp
inc
cmp
push
rol
hlt
lret
shll
in
ret
insl
pop
cld
cs
cmp
ret
xlat
call
xchg
xorl
cltd
dec
dec
test
pop
push
rorl
pop
inc
js
lcall
leave
push
inc
lret
iret
ret
or
punpckldq
add
mov
mov
ljmp
in
btsl
mov
mov
inc
cmp
ss
or
and
and
sbb
xchg
dec
lods
sbb
cmp
cmpsb
sub
outsb
mov
pop
daa
dec
dec
rcr
ret
in
dec
inc
rorl
in
or
cmpsl
out
or
fcmovnbe
popf
mov
call
or
adc
mov
in
mov
lret
mov
cmp
insb
cmc
xor
mov
stc
aas
sti
jmp
sbb
add
push
cs
or
adc
es
leave
fsubl
dec
fstpt
fwait
or
pusha
jg
dec
enter
push
subb
or
and
fwait
iret
adc
int3
cltd
pop
pop
dec
in
sahf
jne
in
xor
aad
fidivl
lahf
shrb
test
xchg
sub
cmp
xor
lahf
lret
inc
mov
lods
mov
mov
lcall
sti
in
sub
mov
cmp
push
sub
int3
sub
in
sahf
mov
sti
leave
lahf
or
andb
push
xchg
les
jge
mov
pop
or
mov
push
fcoml
or
add
dec
lcall
dec
sbb
jecxz
adc
adc
ljmp
in
sti
xchg
cmpsb
call
and
dec
dec
in
inc
cmp
jb
iret
fwait
push
loopne
and
or
mov
loope
sbb
xchg
sbb
inc
push
popf
test
sti
and
clc
and
add
sarb
jg
mov
int
cmp
jp
jno
pusha
jl
dec
fadd
push
insb
stc
lcall
xchg
inc
hlt
leave
imul
lret
movsl
sub
push
or
sub
in
add
aad
dec
sbb
jo
push
dec
cwtl
ja
aaa
sbb
push
mov
flds
jae
sahf
pop
mov
fwait
daa
dec
in
dec
into
fucomp
sub
mov
in
add
mov
jnp
jae
push
ja
xchg
loope
mov
mov
in
mov
mov
cmp
adc
fcomip
mov
push
sub
and
lret
cmpsl
jns
adc
pop
and
mov
imul
stos
imul
adcb
add
pop
dec
sub
bound
jecxz
call
jl
mov
mov
pop
cmp
mov
pop
and
fdivrl
lods
movsb
in
inc
cwtl
xchg
fsts
or
adc
cmp
and
lods
and
enter
mov
rcrl
sub
pop
out
jge
ss
dec
aad
push
and
insl
push
out
inc
push
push
xchg
pop
addr16
and
mov
cmp
add
mov
sbb
pusha
push
pop
dec
dec
sub
loope
mov
ret
and
pop
pop
stc
insb
xor
lods
mov
pop
sti
pop
ss
xlat
shll
sub
jae
enter
es
lahf
pop
fwait
push
pusha
mov
imul
les
imul
mov
into
sbb
stos
cmpsb
fnsave
cmp
xchg
lds
pmuludq
mov
add
sub
in
pop
or
repnz
sbb
sub
fucomip
fs
ss
lret
ss
inc
pop
pusha
inc
inc
ret
sti
sbb
je
mov
pop
fcompl
std
dec
ljmp
imul
sahf
lret
mov
js
or
test
cmp
or
inc
cmp
mov
and
sub
sbb
pop
enter
enter
jbe
roll
in
xor
push
mov
or
push
mov
loop
and
mov
fidivl
xor
cmp
adc
movsb
push
pop
push
inc
mov
and
fstps
movsl
mov
lcall
call
fs
nop
cmp
imul
inc
sbb
or
scas
out
cs
out
dec
cmpsl
sbb
and
inc
mov
mov
ja
lds
inc
jl
lods
jge
jns
push
stc
subb
sub
ss
push
das
addr16
mov
rcrb
jns
jae
mov
lret
pop
das
sbb
fstl
fwait
dec
jne
lods
enter
dec
fdivr
or
lds
stc
mov
inc
jo
pop
sub
jae
sub
jns
out
and
sub
flds
mov
jnp
dec
sbb
xor
sub
mov
xchg
inc
in
sub
add
xchg
into
push
push
daa
lods
inc
xor
lret
sbb
or
mov
dec
pop
test
sbb
mov
mov
in
add
imul
jge
ljmp
xor
aad
cmpl
push
insl
or
roll
stc
icebp
and
dec
iret
jmp
pushf
out
lock
dec
andl
in
and
lods
test
sti
int3
and
pushf
les
mov
loope
mov
xor
sbb
addr16
dec
push
mov
xchg
loopne
rcrl
int
lret
xchg
faddp
mov
cmp
mov
sub
xor
inc
rcrb
in
mov
jmp
push
or
lds
sub
xlat
push
xchg
or
inc
xor
imul
out
pop
in
loope
push
pop
pusha
mov
cmpsb
or
adc
xorb
mov
clc
dec
mov
push
add
lea
shll
fyl2x
sub
or
push
sub
jmp
adc
dec
dec
int3
xchg
mov
push
sbb
lods
mov
ret
adc
xor
or
pop
loop
pop
in
mov
addl
push
dec
or
jno
and
mov
leave
mov
imul
cmpsl
les
fistl
push
cmp
test
dec
in
data16
sub
or
loop
jl
dec
lret
adc
mov
orl
mov
popa
rorb
cmpsb
mov
mov
shll
cmp
roll
mov
pop
ret
loopne
sbb
pop
imul
cltd
lods
xor
pop
imul
mov
faddl
dec
and
or
inc
test
andb
pop
inc
insb
popf
jmp
pushf
mov
xchg
int
sub
dec
add
sahf
jge
jns
or
jns
or
imul
dec
lret
cltd
push
loop
jle
inc
test
out
and
pusha
or
add
sub
jns
daa
or
push
fidivrs
enter
movsl
add
sub
mov
dec
stos
movsl
mov
jmp
inc
xchg
in
push
loop
pusha
dec
xchg
sarl
loope
inc
int
ljmp
sub
mov
fwait
sub
cltd
std
rcr
mov
ds
inc
iret
daa
xchg
sbb
push
dec
xor
repz
cmpsl
fdivrp
mov
pusha
out
mov
mov
push
sbbb
or
dec
dec
xor
mov
add
or
icebp
pop
push
movsl
xor
lcall
fiadds
adc
imul
mov
or
rcll
sbb
sahf
lret
stos
cmp
ljmp
rolb
mov
inc
imul
sub
add
dec
es
add
dec
xor
xchg
fwait
sbb
push
sub
cs
xchg
lcall
testb
mov
imul
or
sbbb
call
jo
jecxz
jbe
arpl
adc
in
push
sbb
lret
call
push
adc
sbb
cmp
arpl
add
sub
pop
fidivrl
pop
lods
cmp
ret
jmp
inc
mov
cmp
mov
andl
gs
inc
mov
and
into
cmpsb
dec
inc
push
jge
mov
add
pop
push
test
inc
or
cs
sub
fstps
mov
bound
push
shll
mov
es
mov
sahf
mov
mov
arpl
xorb
mov
mov
ret
cmpsl
fcompl
fldl
dec
imul
add
cld
lret
in
dec
pushf
adc
in
adc
cmp
clc
adc
lret
sub
add
add
push
or
push
stc
xor
in
notl
int
cmp
lret
cmp
in
addb
push
gs
lcall
inc
mov
adc
jmp
fwait
stc
push
push
fisubrs
icebp
add
lahf
dec
lock
vmptrld
sub
pop
mov
test
or
fdivrl
daa
jno
add
leave
push
fsubs
inc
cmp
pop
mov
sub
test
lret
xor
movsb
xor
inc
adc
xchg
mov
cmpsb
gs
cmp
enter
adc
sti
invlpg
push
mov
pop
std
imul
fisubl
and
ljmp
jnp
xor
ficompl
mov
cli
inc
xchg
enter
sub
adc
lahf
sub
mov
and
or
pop
insl
js
pop
xchg
mov
sbb
cmp
cmpl
lods
pop
lds
push
fisubrs
sbb
add
and
jg
loopne
mov
xchg
or
mov
fcomip
dec
lahf
adc
mov
mov
cmp
addr16
push
dec
test
lds
cmp
pop
or
loop
push
stos
dec
push
xchg
into
pusha
test
jns
imul
or
inc
fisubl
repz
mov
gs
cmpsl
xor
mov
fsubl
mov
rcrb
dec
or
xor
in
push
mov
imul
shlb
adc
lods
loop
dec
ret
inc
into
adc
mov
adc
sub
or
flds
rcll
shll
adc
dec
je
xchg
add
cmc
pop
iret
add
sahf
ljmp
inc
xchg
sahf
jno
mov
and
rorl
das
das
sarb
xor
bnd
jmp
dec
dec
sub
inc
mov
inc
push
cmpsb
test
ja
mov
insl
xchg
jge
outsl
gs
popf
cmp
fisttps
mov
addb
in
inc
jb
shlb
stc
bound
xchg
cld
insb
sbbb
sbb
inc
inc
xor
lahf
add
fwait
pop
dec
pusha
fsubr
mov
daa
lods
aam
pop
lea
push
mov
cmp
mov
jle
sub
lret
dec
sub
imul
imul
imul
jmp
arpl
dec
pop
gs
mov
xchg
inc
or
ds
or
push
add
lret
in
fildl
enter
subb
cld
in
mov
sbb
sbb
dec
cwtl
popa
sub
sahf
movsb
push
sub
mov
or
push
ljmp
sahf
and
data16
jg
fidivrs
pop
mov
push
sbb
faddl
mov
jge
leave
mov
jnp
dec
push
sbb
lea
lods
gs
jmp
or
mov
pop
xchg
xorb
push
insl
into
or
mov
jae
rorl
ret
shr
or
or
jl
dec
pop
sbb
insb
inc
dec
sub
loope
pop
cmpb
push
inc
clc
lret
pusha
dec
out
mov
lods
and
pop
aad
xor
dec
mov
repnz
shll
jp
mov
sub
test
adc
pop
cmc
jecxz
repz
add
sbb
enter
mov
lret
out
push
push
imul
loope
ffreep
shll
xchg
repz
cmpsb
aaa
sbb
adc
mov
jmp
pop
cmpsb
aaa
lds
js
ss
inc
adc
incl
jg
jo
mov
in
jmp
in
aaa
xchg
or
mov
insl
or
xchg
xor
mov
inc
test
mov
aad
inc
mov
out
jp
sub
mov
ja
lea
fmuls
dec
aam
cltd
movsl
add
pop
or
push
push
aad
outsl
inc
sub
mov
call
and
popf
sbb
iret
adc
push
pushf
out
fs
pushf
stc
in
jnp
pop
push
xor
fbld
sbb
dec
cmpb
add
mov
dec
lcall
pop
pop
pop
ret
jmp
call
push
out
popa
gs
sub
loopne
cs
adc
inc
dec
lret
rcrl
data16
mov
mov
loope
sub
pop
jnp
mov
push
stos
and
dec
push
das
jae
push
pop
jo
jmp
and
in
cli
jmp
mov
fstps
lret
je
test
shrb
fwait
das
mov
or
imul
sub
dec
ds
aas
mov
in
jg
jmp
sub
xor
dec
mov
mov
aaa
fxch
or
push
sub
ljmp
sarb
dec
fiadds
fdivl
pop
call
repnz
inc
add
das
adc
lret
out
lock
mov
or
sub
push
mov
mov
or
orl
jns
in
packssdw
imul
pusha
xlat
insl
xchg
xchg
cmpsb
incl
cmc
and
test
add
cmp
inc
enter
dec
adc
mov
out
xor
jecxz
xchg
and
sbb
ret
jge
clc
cmpsb
or
aaa
mov
test
sahf
and
lcall
lea
test
sbb
inc
sub
push
xchg
enter
cli
fsub
aaa
dec
and
test
sub
cmp
dec
stc
in
stos
fsubl
add
jg
dec
pop
push
call
arpl
push
outsb
mov
shl
pop
ret
pusha
movl
inc
xchg
or
or
aaa
xchg
testb
inc
pop
ret
sbbb
ret
sub
add
jmp
add
and
and
sbb
les
int
call
add
and
out
dec
jne
sub
inc
in
xor
cmp
outsl
cmp
dec
addb
ljmp
cmp
lret
cli
in
ljmp
aaa
jns
jmp
inc
outsl
hlt
inc
jmp
stos
or
js
fmull
xchg
fldt
and
ljmp
mov
rorl
sbb
push
gs
in
in
dec
out
jmp
nop
fcoms
insb
xor
movsl
incl
loope
stos
inc
jae
popa
xchg
mov
add
or
sub
and
enter
repz
out
clc
cmp
es
jnp
es
sahf
jae
stos
jbe
and
xor
jecxz
fiaddl
ss
mov
lcall
lahf
shrl
je
mov
out
sahf
push
push
ficoml
into
shrl
cltd
add
mov
pusha
mov
adc
inc
out
enter
pusha
test
roll
mov
aas
stos
mov
pop
mov
mov
dec
cltd
and
dec
mov
add
enter
lcall
or
and
addr16
xchg
inc
sub
scas
xchg
or
pushf
arpl
lret
or
stos
int
ret
lret
test
cmp
cmp
xchg
adc
jae
mov
mov
xor
dec
adc
mov
and
or
push
mov
gs
mov
dec
push
and
mov
stos
aas
hlt
or
fdivl
imul
inc
ret
add
stos
mov
cmp
or
mov
and
lcall
pushf
xor
mov
scas
loop
mov
aas
dec
inc
sub
push
insl
int3
fiaddl
cmpsb
xlat
jp
pop
stos
xchg
cmpsl
mov
jnp
inc
stc
push
adc
cs
or
mov
xor
dec
stos
mov
stos
dec
stc
xchg
fmul
pop
mov
pop
jecxz
push
inc
cli
cs
out
cmp
sub
push
call
inc
mov
in
call
fs
test
inc
jle
inc
leave
sbb
stos
rorl
inc
add
sub
in
mov
mov
sbb
sahf
cmp
stos
push
mov
test
test
pop
jae
shr
adcb
adc
ficoml
xchg
jae
mov
gs
fcmove
roll
mov
dec
mov
insl
stos
mov
outsl
subl
xor
fwait
adc
adc
pop
inc
inc
je
imul
mov
dec
out
adc
ret
gs
xor
enter
faddl
lds
mov
dec
pop
sub
imul
mov
xchg
push
dec
mov
lret
sub
loopne
mov
jg
lret
pop
cmpl
pop
andb
add
xor
rol
dec
xchg
dec
mov
imul
in
ja
popa
dec
and
jne
push
inc
xchg
and
lea
mov
jb
mov
ljmp
push
imul
dec
inc
pop
sub
pop
mov
add
dec
testl
xchg
mov
jae,pn
nop
mov
pop
jp
jl
cmc
repnz
pop
or
shll
fdivl
sub
jno
fmull
jge
ror
in
mov
mov
dec
filds
push
pop
sbb
cmpb
pusha
push
scas
sbb
jecxz
into
inc
dec
sub
addr16
insb
ss
icebp
adc
pop
adc
xor
or
dec
sub
leave
in
dec
xor
adc
dec
int
fmul
push
popa
and
faddl
jg
sbb
leave
stc
loope
mov
pop
rolb
pop
add
push
xor
dec
jb
mov
imul
insb
repnz
js
lds
sub
imul
inc
pop
loope
inc
push
and
loop
inc
add
aaa
inc
push
cmpb
jae
inc
xchg
jecxz
jg
mov
push
sbb
push
aaa
cmp
cld
sub
out
mov
std
loop
jbe
loope
outsb
jnp
mov
fstp
and
mov
call
scas
adc
imul
data16
mov
sbb
and
addr16
lahf
cmp
in
adc
imul
enter
orb
ljmp
xor
mov
inc
out
or
test
dec
sbb
stos
inc
inc
popa
pop
mov
hlt
xchg
test
mov
push
lock
and
jo
sbbl
inc
sub
cltd
dec
insl
loope
dec
aad
outsb
push
loopne
cwtl
and
add
sub
es
aam
push
cmc
jg
std
fiaddl
in
add
inc
xchg
sarl
loop
dec
mov
inc
mov
add
inc
inc
mov
cmpsb
das
sbb
gs
dec
inc
jecxz
jnp
or
mov
lret
cmc
enter
push
ss
xchg
inc
cmp
sub
sbb
cmc
or
lretw
pop
xchg
and
mov
or
leavew
adc
dec
fistps
cmp
out
jb
shr
aam
sub
ret
leave
push
push
pusha
leave
aad
imul
out
out
xor
addl
xchg
adc
push
enter
fiaddl
orb
out
filds
sbb
rolb
cmp
fldt
adc
dec
bound
dec
cmp
idiv
mov
jne
mov
dec
adc
nop
dec
xor
inc
or
je
into
mov
inc
lcall
mov
fsubs
add
pop
pop
jmp
push
jecxz
notl
inc
fsubr
int3
in
push
inc
js
push
and
movb
loopne,pn
or
aad
sbb
pop
jl
pop
addr16
outsl
shrb
loop
rcr
stos
mov
popa
adc
cmpsl
ss
mov
inc
in
loope
lds
and
test
xchg
loope
shrb
inc
test
and
pop
and
xor
push
xchg
fcomps
dec
mov
xor
ljmp
cmc
shll
jnp
call
jp
xor
rolb
mov
or
jg
pop
push
jmp
mov
cmc
test
dec
mov
or
inc
mov
sbb
pop
dec
or
ficoms
fcoms
nop
sbb
mov
loope
lcall
movsl
jp
ficoms
sbb
pusha
pop
xchg
xor
into
add
mov
jne
push
add
push
lods
jb
addr16
xor
push
mov
push
icebp
inc
movsl
add
xchg
and
pop
dec
inc
mov
jmp
lcall
push
mov
jl
outsl
lods
dec
movsb
in
lods
jg
leave
cltd
and
lret
pusha
dec
mov
orb
jne
out
adcb
pusha
mov
bound
ror
push
dec
mov
sub
test
insb
ret
mov
xor
adc
xor
lret
rclb
sti
hlt
fsts
cmp
fwait
lcall
xchg
inc
bound
imul
jnp
lea
xor
je
cltd
ds
push
xor
push
jb,pt
pushf
inc
jmp
sbb
test
xchg
das
subl
or
cltd
movb
dec
sahf
leave
into
in
loope
subl
sbb
xchg
test
jmp
push
inc
sbb
pop
sbb
xchg
inc
stos
int
fdivl
dec
adc
in
addr16
or
inc
cmp
aaa
push
in
outsl
jmp
inc
dec
sahf
imul
xor
mov
xchg
in
scas
pusha
inc
mov
aam
call
mov
dec
subl
popf
push
dec
in
sub
dec
decl
fdivp
inc
jb
or
jl
stos
int3
fists
sbb
mov
inc
sbb
xor
xor
jle
mov
jmp
je
pushf
pop
mov
xchg
scas
add
das
out
cmpsl
lahf
push
mov
mov
jecxz
fidivl
jp
cwtl
imul
insb
push
dec
dec
int3
mov
daa
sbbl
iret
es
insl
add
pop
insb
notl
push
daa
inc
cwtl
sub
sub
sbb
pop
mov
clc
dec
inc
mov
jno
rorb
lret
test
in
out
iret
es
xlat
pop
jge
mov
insl
sbb
or
mov
enter
fwait
dec
andb
or
push
add
lahf
movl
dec
jmp
or
imul
pop
out
or
pusha
adc
ljmp
jbe
pop
jecxz
jb
ret
mov
mov
fcoml
out
fsubrl
jbe
les
or
pop
ds
mov
push
add
and
sarb
out
mov
and
pop
mov
dec
or
pop
adcl
lahf
mov
pop
or
call
roll
dec
sbb
mov
mov
lret
sti
es
test
and
inc
cwtl
loop
sbb
or
cs
sbb
cmpsb
daa
xor
push
sub
or
dec
stos
xor
into
push
push
dec
jno
in
call
or
loopne
pop
test
push
or
push
xlat
cli
mov
in
cmp
pusha
push
je
dec
push
cltd
dec
js
cmpb
xchg
dec
cmpsb
in
jne
cmpsb
adc
sub
xor
push
lahf
xchg
sub
sbbb
dec
out
push
sub
jae
jb
adc
add
push
aam
scas
fsubrl
sqrtps
fldl
sbb
ret
mov
mov
push
or
jo
loopne
or
ljmp
mov
dec
clc
adc
push
jmp
mov
repz
dec
adc
dec
and
dec
or
imul
xchg
fsubr
sub
or
stos
inc
stos
or
outsb
xor
jg
xor
jmp
mov
dec
pop
jmp
fistpl
leave
or
push
mov
cmpsl
and
jno
stos
dec
xorb
xchg
out
jnp
aas
rorb
mov
mov
push
in
jbe
test
xchg
ja
pop
dec
fldt
loope
pop
ret
pop
sbb
lds
loop
cltd
cmp
or
fwait
or
ret
mov
push
mov
into
lds
jmp
add
arpl
adc
mov
fdivs
push
daa
stos
and
shrl
mov
stos
mov
push
scas
lret
call
ljmp
cld
sub
pop
fadds
into
mov
or
mov
je
into
jle
ss
popf
add
jae
mov
mov
jg
in
cmp
dec
push
sub
pop
stc
dec
bound
xor
out
daa
or
movsl
or
sub
mov
insl
jg
lods
lcall
push
cmpsb
lods
or
rclb
mov
fstps
aad
and
push
iret
jmp
ficomps
xchg
push
dec
in
mov
mov
cmp
mov
inc
cmp
xchg
call
fisttpl
sbb
popa
cs
stos
dec
mov
xor
mov
adc
fwait
out
push
xchg
aam
cmp
push
jae
jg
dec
cmp
popa
in
and
mov
sbb
pop
adc
xor
clc
or
lods
xchg
insb
xchg
sub
stos
cld
xchg
in
dec
cmp
jnp
repnz
stc
and
add
les
out
push
popa
xlat
dec
dec
filds
loope
mov
push
dec
inc
inc
and
dec
pushf
test
mov
ljmp
int3
inc
cmc
daa
adc
jnp
jo
mov
jae
jge
fs
in
mov
leave
xorl
repz
ljmp
dec
dec
dec
iret
xchg
or
mov
jo
aam
dec
xchg
xchg
into
mov
das
push
push
mov
xchg
adc
in
jg
push
cwtl
imul
push
sub
sub
leave
dec
xlat
sub
adc
adc
in
mov
sbb
cwtl
add
or
clc
lret
test
xor
push
dec
jmp
cmp
or
int
jg
sub
cmp
pop
sub
sub
pop
xlat
inc
call
cmp
inc
mov
aam
cmc
int3
add
ds
push
mov
ret
gs
inc
sahf
out
mov
je
sbb
xor
dec
mov
push
and
popf
and
jle
mov
roll
mov
and
ss
mov
aad
mov
fists
je
cli
popa
imul
sub
pop
dec
inc
test
jnp
das
in
pop
mov
add
or
push
leave
dec
sbb
inc
jmp
ss
lahf
loop,pt
inc
add
add
lahf
int
mov
mov
or
loope
out
cmp
push
mov
nop
pop
cmp
add
and
pop
std
dec
mov
and
add
sub
mov
xlat
loope
out
mov
add
inc
sub
mov
or
mov
cmpsl
pop
orb
cld
sbb
ret
mov
fcoml
push
xor
ljmp
and
dec
es
stc
inc
mov
int3
mov
ja
xor
dec
stc
dec
pop
imul
shll
dec
cmp
arpl
dec
sub
and
add
push
ja
testb
movsb
clc
add
inc
pusha
and
pop
dec
cmp
cmpsb
dec
les
movl
adc
loope
outsl
sbb
std
pop
mov
inc
xorl
loopne
or
mov
cwtl
mov
xor
sahf
inc
jmp
or
into
ljmp
mov
test
les
xchg
jae
ss
adc
es
ret
inc
lret
inc
dec
dec
pop
push
or
or
rorb
or
push
xlat
cld
test
enter
call
dec
or
mov
jo
sub
rcll
xor
ret
in
dec
and
pop
pusha
scas
into
sbb
inc
lods
sub
adc
pop
sub
jb
fucomi
enter
cmp
adc
gs
ds
push
push
lcall
stos
jg
bound
mov
cli
pop
in
and
mov
xchg
dec
cmp
movsl
pusha
and
jmp
scas
arpl
mov
push
hlt
imul
dec
movsl
xlat
push
lods
adc
mov
vaddps
sbb
xor
cwtl
jmp
jge
pop
orl
inc
adc
mov
dec
subl
jp
xchg
jo
jle
push
adc
pushf
in
mov
mov
mov
add
les
lret
pop
push
dec
sbb
sbb
add
test
or
stos
ret
or
fildl
lds
test
cs
sbb
in
rolb
int
inc
push
jne
xor
rol
push
sbb
roll
sbb
cmp
out
add
mov
mov
pop
inc
mov
push
mov
sub
and
sbb
lahf
push
sbb
test
or
dec
inc
jecxz
lret
mov
sub
cld
mov
mov
enter
push
in
sbb
ret
and
xchg
shl
test
loop
inc
cmp
and
xchg
mov
aad
sbb
mov
jg
ljmp
icebp
mov
mov
rclb
test
dec
or
push
inc
xor
fsubl
add
push
sbb
stc
imul
in
es
cmp
mov
test
mov
pop
xchg
or
lret
inc
push
clc
stc
imul
sbb
push
inc
and
xlat
cltd
cmp
sub
lods
push
xchg
testl
adc
jb
dec
and
in
sub
adc
push
add
enter
cmp
cmp
ljmp
je
jno
push
mov
pop
inc
add
dec
mov
pop
push
rorb
arpl
pop
pop
mov
pop
ljmp
es
icebp
and
push
inc
inc
mov
push
dec
call
inc
sub
and
and
push
mov
aas
and
xor
xor
test
push
ja
lods
inc
movsl
fnstcw
push
inc
sbb
clc
dec
hlt
sahf
jle
cmpsl
in
les
pop
popl
pusha
dec
mov
dec
mov
shrl
dec
sbb
push
dec
sub
sbb
popa
in
rolb
repnz
dec
inc
hlt
add
mov
ds
inc
jecxz
repnz
imul
inc
lret
inc
daa
mov
imul
imul
and
pop
dec
xchg
clc
in
or
insl
int
ja
repnz
lock
das
mov
insl
pop
jmp
movzwl
cmpsb
negl
rcll
cmp
test
fistps
imul
cmp
int
xchg
fmul
test
push
xchg
mov
jne
ss
inc
fisubrs
stc
or
incb
sbb
xchg
mov
pop
subb
and
add
mov
dec
test
mov
andb
cmpsl
pop
fdivs
add
nop
sub
inc
dec
das
and
stc
test
push
or
cmp
jb
jbe
addr16
cmpsl
pop
rcrb
inc
jmp
in
xor
jmp
adc
fcmovbe
jbe
sub
in
imul
lret
popf
or
dec
das
mov
sbb
dec
cmpsb
inc
idivl
js
cwtl
cwtl
dec
leave
mov
stos
pop
lret
out
add
fwait
jp
xorl
jb
xchg
fnstcw
dec
and
pop
xor
jmp
leave
inc
lret
jae
insb
addb
lock
scas
lret
test
and
or
or
rsm
push
cmp
mull
insb
sbb
jmp
mov
or
add
into
bound
add
lret
mov
stos
pop
fadds
sbb
scas
or
and
xor
int3
jl
movsl
sbb
sub
fwait
pop
jge
inc
add
stc
xchg
mov
push
xchg
or
inc
call
lods
std
iret
push
push
inc
rcrb
je
enter
and
stos
jl
out
ja
cmp
or
dec
pop
insl
int
ljmp
arpl
cs
shlb
jns
jne
mov
das
imul
test
adc
jmp
dec
outsb
outsl
sub
divl
cld
inc
imul
add
mov
in
sub
adcb
addl
lret
dec
pushf
and
push
sbb
mov
imul
pop
mov
or
sbb
or
sbb
jo
mov
aaa
ret
daa
mov
adc
ret
aas
lahf
mov
and
js
out
movsl
loope
mov
sarb
loop
push
shlb
das
pop
adc
imul
lcall
push
mov
cwtl
int3
je
inc
push
stos
setle
loop
ds
mov
xchg
popl
out
sahf
mov
add
mov
cmp
cs
cmp
or
insl
arpl
push
arpl
loop
movsl
movsb
in
lret
addl
cs
pop
or
fcmovnb
jae
cli
out
sub
dec
ljmp
js
sahf
dec
scas
sbb
push
sti
pop
xchg
jb
das
sub
popf
xor
jns
sub
inc
dec
push
popa
pop
xor
test
xor
push
pushf
enter
or
mov
repz
movsb
out
aam
or
int
lcall
cmpsl
sub
mov
das
imul
cs
ds
dec
mov
dec
jbe
mov
or
std
xor
arpl
sub
lods
rcl
sub
fisttps
jae
insb
add
ret
call
lar
cmp
xchg
push
or
subb
es
pop
jl
mov
pop
in
sub
add
pop
jnp
cs
addr16
enter
mov
arpl
pop
data16
dec
jnp
cmp
jmp
sub
insb
cmp
test
addl
popa
fwait
inc
in
in
into
mov
mov
cmp
fnstsw
sub
ja
aad
ret
or
fcmovnb
mov
imul
adc
lea
imul
inc
fcmovu
inc
inc
push
mov
pop
inc
in
and
sahf
imul
push
push
repnz
lds
rolb
rorl
dec
lret
outsb
pop
pop
leave
leave
inc
mov
xor
stos
fcmove
mov
scas
movsl
into
or
test
or
outsb
xchg
and
aas
xchg
adc
push
ljmp
cmp
push
leave
sahf
mov
push
pop
test
call
mov
jnp
mov
or
sti
jae
jp
mov
xchg
in
add
inc
jo
sbb
jnp
dec
mov
push
js
and
jg
jmp
jge,pn
jne
int3
popf
fadds
mov
add
mov
and
mov
mov
mov
cmp
xor
aad
ret
pop
ljmp
or
sahf
int3
mov
dec
jne
adc
mov
dec
jne
dec
lret
cli
in
mov
pop
push
and
es
jnp
js
sub
orb
mov
dec
mov
or
push
dec
leave
and
jnp
aas
mov
inc
or
sahf
lods
ficompl
pop
ret
daa
fisttpl
jmp
push
daa
dec
pop
xchg
jnp
push
and
xor
xor
lcall
fcmovne
or
push
insb
pop
shl
in
or
inc
sbb
repnz
jl
stc
nop
subl
or
mov
pushf
rol
pushf
xchg
bound
bswap
cmpsl
push
sub
mov
test
lock
inc
in
mov
scas
dec
je
jo
shll
push
stc
in
cmp
out
orl
jb
movsb
mov
jecxz
or
inc
into
mov
xchg
and
xor
mov
leave
sahf
jb
rcr
cli
xchg
pop
fwait
dec
add
or
insl
and
in
punpckhwd
fdivr
mov
push
lret
inc
pusha
icebp
push
mov
push
movd
and
add
push
add
lea
push
sub
mov
cmp
lea
or
inc
inc
int3
cli
fcomps
fimuls
jmp
out
jnp
repnz
addb
sbb
lea
leave
dec
addl
jno
pop
push
daa
subb
test
push
xchg
or
and
cmp
je
and
fadd
inc
lods
jg
dec
or
xchg
mov
jne
pop
xchg
stos
sar
int3
test
push
ret
inc
push
xchg
fidivrs
xchg
mov
mov
leave
mov
js
mov
fsubl
pusha
dec
inc
fistpll
fstps
xor
xchg
enter
jno
sub
inc
mov
and
bound
clc
andb
int3
sahf
lret
cmpb
jmp
sub
add
test
lret
xchg
sbb
dec
addr16
push
mov
and
dec
dec
call
sub
or
mov
out
in
push
leave
rcrb
mov
filds
lds
pop
loopne
adc
dec
call
xchg
push
inc
stc
inc
pop
dec
xchg
add
ror
or
loopne
jecxz
cmpsl
les
int3
enter
mov
insb
sub
jge
sbb
je
adc
test
inc
loope
ja
mov
sub
inc
jg
or
add
imul
cmc
fdivrl
cmp
inc
add
enter
popa
jmp
inc
inc
push
xchg
shrl
leave
shll
sub
es
mov
push
outsl
mov
xchg
xor
enter
push
cs
xor
scas
dec
xchg
stos
or
mov
push
jge
dec
ret
cli
ss
ja
pop
xchg
ljmp
icebp
bswap
out
leave
dec
enter
pop
xlat
push
testb
imul
jp
xor
imul
dec
mov
fildl
out
gs
fidivrs
jle
pusha
pop
push
cmp
popa
das
dec
fcoml
or
les
iret
pop
ret
pop
sbb
insb
sub
les
insb
inc
aaa
push
cmp
inc
and
xchg
inc
lret
pop
cmpl
sub
or
ds
inc
faddl
push
mov
cmpsl
mov
add
ret
ja
inc
test
popa
inc
je
rcrb
jg
js
push
das
sti
aad
xor
addb
and
shlb
adc
fisttps
xchg
push
popa
and
pushf
or
fwait
xchg
push
in
jp
mov
imul
cmp
in
fs
cs
mov
mov
and
dec
add
js
rol
pop
mov
out
sbb
imul
test
jp
int3
js
dec
cmc
mov
std
sub
add
add
jecxz
test
fisttpl
adc
sbbb
add
test
add
mov
inc
push
or
fidivrl
fsubl
jge
fldt
add
popa
pop
sub
add
bound
sti
test
cmp
lods
daa
jo
mov
pop
pop
sbb
pop
pop
push
jo
sahf
loope
mov
jnp
push
adc
jnp
or
ljmp
cmc
cmpsb
stos
dec
movsb
in
mov
ret
in
dec
mov
jnp
push
adc
insb
sub
jmp
jg
mov
call
mov
sahf
insb
leave
aaa
xchg
ret
jl
rclb
call
pushf
dec
cli
jb
push
lcall
mov
inc
in
dec
ret
movsl
fcmovnu
mov
test
inc
mov
sbb
es
not
and
cmc
es
jecxz
test
fsubrl
cmc
cmp
fldl2t
ret
adc
das
dec
ret
test
cmp
lsl
sbb
push
push
gs
js
ljmp
cmpsb
test
and
ljmp
in
mov
rcrb
fdivl
jae
jg
addr16
fsub
xor
pop
adc
or
lret
rcrl
push
mov
test
jmp
es
rcr
cmc
dec
jae
adc
ss
push
dec
and
pop
xor
dec
cwtl
cltd
ret
inc
push
imul
call
dec
ds
sbb
bound
or
inc
sub
ss
std
fld
inc
xchg
mov
jno
jecxz,pn
movsl
cld
dec
test
test
jl
xchg
iret
stc
inc
stos
ret
inc
xlat
push
into
sub
push
popa
loop
push
cmp
or
lds
push
mov
push
jnp
dec
dec
dec
dec
mov
or
call
in
fstpt
adcl
fcoms
or
mov
pop
fwait
fwait
cmpsl
cmpl
stc
int3
xchg
repnz
jp
inc
mov
pop
dec
mov
ret
loope
test
add
ja
xchg
mov
faddl
mov
mov
lahf
mov
pop
push
inc
jg
xor
stos
popf
fcmovne
shll
aad
sbb
mov
jmp
les
mov
cmp
enter
jae
lret
fldcw
test
jae
xchg
dec
sub
lods
outsl
into
push
js
js
loop
dec
xchg
push
insl
xchg
fs
mov
add
push
es
mov
and
aaa
mov
or
enter
nop
sub
xchg
test
or
push
sbb
leave
or
jg
sub
sub
lods
shrl
push
dec
jnp
popa
rol
addr16
fwait
push
mov
mov
push
icebp
and
mov
bound
sarl
mov
xchg
sti
sub
jns
jb
pop
sarb
pop
enter
xchg
fdivl
mov
out
das
push
xor
cmp
jb
add
mov
inc
xchg
fwait
sub
jb
inc
cmp
dec
movsl
mov
adcb
xchg
dec
adc
in
push
test
stc
pop
enter
outsl
gs
pop
mov
push
test
pop
sub
lcall
sub
jb
shll
fwait
pop
fcmove
fcmovne
sub
cltd
call
sub
inc
sub
xlat
in
mov
mov
jae
out
pop
jmp
dec
mov
jnp
aas
sbb
dec
repnz
addb
lcall
icebp
mov
adcb
dec
lds
imul
adc
push
adc
gs
cmp
add
pop
sub
sub
fistpl
or
inc
mov
pop
dec
inc
js
xor
lret
pop
add
mov
dec
mov
es
adc
and
pusha
imul
in
ljmp
push
jge
pop
and
inc
lea
sbb
js
pop
inc
outsb
lds
pop
aas
push
mov
xlat
iret
dec
jb
mov
dec
pop
stos
mov
test
pop
sbb
aas
mov
jne
mov
fsubrl
in
mov
xchg
push
das
xchg
inc
inc
pop
mov
mov
imul
enter
add
ret
test
lock
mov
out
popf
or
lcall
lahf
jae
rorb
inc
push
xor
add
cmp
mov
fidivl
cmp
and
shrb
or
xor
inc
jo
sub
xchg
movsb
mov
dec
cwtl
addr16
inc
lret
cld
cltd
or
cmp
addr16
xlat
pop
cmp
or
mov
pop
fildl
xchg
pop
aaa
and
or
daa
jl
add
je
test
leave
push
add
pop
and
arpl
popa
movsl
loopne
out
pop
pop
sbb
js
or
fadd
aas
mov
in
push
in
lock
jp
stc
sbb
stc
push
aas
jb
icebp
or
cmp
cmp
push
jge
sbb
mov
xchg
mov
mov
and
mov
ss
fsubl
insl
into
mov
push
or
jbe
test
adc
mov
and
iret
decb
ds
dec
dec
lahf
flds
into
inc
and
jmp
es
mov
aad
lret
jecxz
pop
fs
mov
sbb
push
cs
loopne
push
mov
mov
rcr
add
xor
dec
cmp
xor
dec
icebp
sbb
and
test
fld
dec
mov
dec
call
sub
mov
dec
mov
shll
ret
adc
scas
sub
es
and
icebp
inc
pusha
cltd
sbb
fyl2xp1
frstor
ret
push
pop
outsl
push
movb
clc
xchg
aaa
lahf
fstp
cmp
cli
mov
test
out
lds
sbbl
pop
test
push
xchg
cmpsb
test
mov
pop
ret
adc
lock
mov
es
xor
dec
mov
fmuls
xchg
rcrl
mov
inc
in
sbb
jl
xor
jp,pn
out
xor
inc
aam
xchg
push
lret
xchg
inc
add
inc
mov
inc
jae
ret
int3
sub
dec
cld
mov
hlt
dec
stc
dec
and
push
jne
or
pop
lock
jae
cltd
lret
mov
cmovl
xor
mov
in
ficoml
hlt
push
cmp
shrb
sub
fcomp
adc
fisubrl
push
pop
pop
ret
xchg
sbb
and
arpl
sti
dec
add
add
push
rolb
fmulp
dec
adc
pop
inc
dec
mov
je
xor
push
and
pop
inc
add
out
and
cmp
loope
or
mov
mov
call
mov
test
fisubl
cmpsb
jb
ljmp
in
lcall
xchg
sub
mov
stc
lods
sbb
mov
cs
lods
mov
popa
xor
pop
push
xchg
bound
sub
in
mov
int3
mov
lods
fisubrs
mov
lahf
pop
xchg
sbb
popa
hlt
cmp
inc
and
rclb
insb
dec
popa
fidivrl
adc
dec
enter
leave
inc
std
adc
fmuls
js
xchg
adc
loope
cmpsb
mov
xor
sahf
outsb
aam
dec
lret
cld
stos
int
enter
inc
mov
inc
or
dec
inc
or
xor
mov
lahf
in
nop
jbe
orb
fidivrl
test
or
dec
xchg
dec
pop
lret
mov
cmp
js
inc
rcll
push
out
jb
testl
loopne
push
mov
rcrl
pop
stc
sti
xor
mov
leave
lret
dec
cmp
mov
push
lret
or
lds
push
push
inc
out
leave
sub
and
ds
push
inc
or
mov
icebp
fdivr
cwtl
leave
jmp
fldenv
dec
jle
or
sbb
int
cmp
push
pop
adc
cld
iret
xchg
loope
popf
jo
stos
dec
std
pop
loope
cmp
dec
push
dec
int3
mov
push
inc
dec
inc
xchg
push
leave
enter
jne
dec
cmpsl
and
inc
fs
mov
push
inc
pop
enter
dec
dec
pop
cmp
cmp
test
and
test
sbb
movsb
je
test
sub
mov
test
sub
pop
sub
and
nopl
adc
push
call
xor
push
dec
jb
ljmp
jno
ficompl
test
sbbb
adc
repz
int3
shlb
jae
cmp
or
fsubrs
push
ror
push
or
push
mov
daa
dec
add
insl
mov
dec
xor
or
insl
incl
sub
dec
push
cmp
pop
nop
inc
pop
sbb
icebp
pop
push
jne
cli
fwait
pop
adc
leave
loopne
lahf
fbld
decl
push
inc
pop
mov
or
mov
loope
aad
ljmp
das
cmp
or
fsubl
mov
inc
loopne
add
dec
fs
ficomps
xor
outsb
in
xor
aas
xlat
leave
jb
fstpl
inc
out
mov
ret
and
fstpl
jno
push
stc
dec
sub
xchg
push
sbb
or
mov
leave
popa
fs
cld
aad
and
mov
push
cltd
mov
xchg
dec
mov
std
lods
mov
stc
sub
loop
lret
push
rclb
xlat
cmp
xor
inc
movsb
mov
dec
adc
or
pop
ret
pop
xchg
loopne
fadds
into
xor
dec
ds
pandn
imul
xorb
pop
cmp
mov
mov
mov
call
enter
int
mov
or
out
or
push
add
into
inc
mov
xchg
fmull
aas
cs
inc
jl
out
inc
lods
jle
ret
adc
pop
jne
jl
pop
in
pop
mov
test
and
sbb
mov
testl
in
jmp
mov
lea
jns
dec
mov
shlb
mov
push
int3
mov
fcompl
gs
inc
cld
fwait
mov
sub
adc
add
inc
add
enter
xor
inc
dec
pop
lret
lret
in
mov
lret
jae
hlt
mov
jo
sub
stos
int
adc
sbb
push
fisubrl
add
outsb
inc
fwait
shrl
sbb
pop
shlb
xorb
mov
data16
xchg
cmp
pusha
dec
lods
ficompl
lock
push
fprem1
icebp
cwtl
subb
mov
inc
loop
add
push
testl
ljmp
lds
xchg
pop
rolb
mov
pop
sub
mov
adc
cmpsl
aad
orb
mov
in
stos
push
mov
mov
in
fidivrs
pop
pop
cmp
in
and
outsl
shlb
test
pusha
icebp
cwtl
push
xchg
jb
sub
inc
es
in
or
lods
movsb
or
xor
add
stos
xor
aas
mov
imul
adc
adc
leave
movl
add
inc
lret
mov
dec
aas
pop
sbb
dec
jb
fidivrl
push
inc
inc
arpl
push
outsl
add
dec
data16
sub
hlt
inc
xor
add
inc
bound
and
mov
data16
outsl
pusha
add
add
add
and
xchg
jmp
sti
mov
scas
mov
mov
mov
aam
dec
jle
bound
pop
jae
dec
fwait
push
aad
push
push
push
jnp
push
push
imul
in
aaa
or
pop
pop
in
mov
cmp
xor
inc
jge
sarl
mov
aas
push
pop
mov
dec
pop
lret
pop
xor
jg
mov
dec
aaa
in
dec
jbe
loop
adc
push
out
jecxz
fcmovne
sbb
dec
dec
sbb
mov
push
sti
lret
xchg
loopne
frstor
sub
push
push
cli
std
dec
or
in
popf
push
sub
out
mov
ljmp
pop
push
aad
idivl
shlb
add
scas
mov
jl
fucomi
mov
rolb
ja
add
mov
add
sti
mov
inc
xchg
xor
insl
sti
and
ljmp
loope
mov
mov
jp
inc
mov
leave
ljmp
daa
cltd
cmp
jmp
sbb
bound
aam
sbb
loop
ljmp
push
xor
xchg
jmp
pop
push
outsl
into
inc
pop
mov
or
cmp
inc
lods
in
in
jb
in
fisttpl
daa
call
adc
aad
or
jns
mov
pop
xor
gs
aam
pop
bound
adc
xchg
mov
mov
mov
xor
or
inc
push
sarl
cmp
dec
fs
hlt
fisubs
stos
add
inc
sti
arpl
jo
or
cmp
call
fidivrl
push
sbb
jno
ss
inc
mov
adc
popf
cwtl
add
mov
hlt
mov
add
cli
push
js
dec
push
sbb
mov
cmp
jg,pt
fistl
sub
sbb
adc
mov
dec
adc
add
imul
es
push
jo
xor
std
cmpsl
dec
jno
inc
and
mov
out
pop
pop
movsb
mov
je
xor
pop
push
pop
inc
push
push
mov
fisubl
outsl
lds
daa
push
cmovns
movq
out
arpl
js
mov
daa
jne
mov
lcall
shrb
mov
sub
dec
push
loopne
addb
and
xor
in
sub
lds
push
out
dec
cmp
dec
mov
gs
daa
push
in
cmc
jb
jne
and
les
lahf
fwait
icebp
sbb
add
mov
dec
sarb
enter
popf
and
imul
add
aad
add
or
stc
mov
sbb
pop
dec
mov
mov
ja
xchg
inc
in
jecxz
pop
dec
adc
popa
lret
cltd
pop
or
leave
push
lret
out
pop
pmulhuw
aaa
sub
jmp
sbb
and
arpl
les
loopne
cmp
ds
lds
pushf
pop
inc
add
xor
mov
lret
cmp
je
pop
movsb
adc
scas
mov
int
movsl
dec
sbb
std
push
enter
iret
xor
loope
fcomp
nop
push
xor
add
sbb
push
mov
gs
je
mull
or
mov
lret
push
lret
fldt
dec
xorl
inc
xor
dec
imul
movsl
dec
insb
ficompl
cmp
adc
xor
insb
cmp
dec
push
or
out
sbb
mov
je
or
jmp
scas
sti
aas
cmp
out
fs
scas
jb
add
cwtl
arpl
inc
addr16
aas
dec
or
fsubl
sbb
dec
iret
sbb
into
gs
or
addr16
cmp
sub
pop
lcall
cmp
clc
jmp
sub
pusha
repnz
lods
jns
mov
hlt
or
and
test
mov
pop
inc
push
clc
call
pop
sarb
movsl
sbb
iret
or
icebp
inc
mov
outsb
or
pushf
sub
fidivrs
adc
jecxz
add
sahf
subl
loopne
and
in
mov
jecxz
cld
enter
pushf
pop
incl
add
movsl
lock
jl
adc
adc
pop
enter
test
cmc
les
or
in
cmp
inc
or
imul
mov
leave
pushl
dec
sub
test
fldenv
mov
js
pusha
aam
out
popf
and
in
and
daa
daa
adc
sbb
pushf
xchg
pop
jecxz
std
dec
in
pop
cmp
dec
dec
loop
sahf
sbb
mov
cwtl
pop
fbld
pop
mov
lret
js
jae
or
adc
adc
cmp
inc
bound
in
cmpsl
and
lret
enter
mov
dec
dec
out
lret
xchg
push
iret
push
xchg
loopne
jle
jae
loop
xor
call
cltd
std
and
pusha
cli
dec
ljmp
in
lea
psrld
and
xchg
addr16
les
push
or
xchg
pusha
sbb
mov
fisubrl
test
cs
xchg
js
or
int
testl
iret
inc
lahf
aam
cmpb
add
cmpb
adc
bnd
shl
jmp
std
and
sahf
stos
dec
jno
jl
sub
xchg
lods
adc
inc
xchg
sub
inc
push
in
cwtl
test
pop
cmp
mov
es
sbb
into
pop
sub
int3
int3
dec
fsubrs
jb
push
stos
mov
and
jbe
dec
jge
and
mov
dec
ret
rclb
imul
sbb
cli
pop
int3
ljmp
stos
ret
push
stos
sbb
dec
lret
mov
mov
ficoms
fucomip
mov
sti
lods
mov
cs
gs
dec
sub
push
adc
pop
dec
cltd
cpuid
mov
out
inc
daa
push
pop
or
pop
fwait
mov
add
and
bound
dec
mov
mov
or
ret
sub
out
jnp
add
mov
push
xor
ljmp
xchg
or
orb
rcr
add
and
loope
push
in
dec
add
mov
nop
jae
or
push
pop
xchg
add
jo
mov
jae
cmp
jb
movsl
ljmp
mov
dec
insl
xor
cmp
cmp
xor
inc
pop
lods
add
mov
and
mov
call
mov
fs
dec
movsb
mov
adc
mov
test
xor
add
mov
sub
add
leave
sub
movsb
jle
mov
mov
mov
test
mov
push
jns
shl
add
ja
mov
sub
test
jnp
xchg
pop
inc
xchg
test
cmp
fwait
cltd
sub
fs
int3
jmp
mov
adc
lock
addr16
movsl
fistpll
inc
scas
dec
mov
sub
stos
jecxz
lret
fwait
imul
sub
xor
dec
push
sbb
sbb
xor
mov
arpl
out
ljmp
pop
js
add
mov
and
xchg
push
ljmp
clc
jmp
imul
out
inc
or
test
repnz
and
je
mov
andb
loopne
mov
enter
stos
pop
fsubp
testb
lret
icebp
clc
movsl
jnp
testl
xor
add
andl
pop
movb
fmuls
fsubl
cmp
push
sbb
adc
xchg
mov
movsl
testl
pop
aaa
imul
test
sub
adc
outsl
push
and
fwait
jmp
ds
rclb
xchg
mov
mov
cli
insl
addr16
ret
daa
adc
mov
jmp
into
add
fdivs
iret
icebp
cmpsb
es
mov
dec
scas
add
jnp
xchg
lcall
jbe
in
inc
sub
loopne
cmpsl
or
sbb
adc
push
mov
xchg
movsl
push
and
xchg
adc
jg
jae
mov
dec
cmp
push
jae
lea
ret
int
test
daa
xor
aam
inc
jae
push
add
cs
and
or
jecxz
fisttpll
inc
aad
loop
shlb
or
mov
mov
leave
enter
out
in
push
aaa
mov
pop
mov
ret
pop
mov
rcrl
inc
aaa
jnp
stos
inc
cmp
and
inc
lret
lods
inc
aas
inc
push
cmp
and
popf
jp
sub
mov
in
mov
enter
inc
mov
call
or
cmp
and
popa
lds
pop
cmpsb
adc
loopne
inc
inc
out
into
push
dec
pusha
xchg
scas
sbb
mov
cli
js
jno
or
and
mov
loop
daa
mov
loopne
ret
aaa
push
xchg
popa
incb
and
int
mov
and
jg
clc
sti
stc
rcrl
leave
lcall
enter
imul
into
int3
lahf
mov
leave
and
in
in
andb
sbbb
imul
jecxz
fwait
xor
inc
imul
push
and
cmpsb
faddl
pushf
rcl
test
mov
jl
sbb
inc
fwait
push
loope
jae
mov
add
fwait
jmp
stc
shrl
mov
sti
or
jns
jp
add
and
jbe
loope
mov
ja
lret
mov
pop
jb
lret
xor
int
and
pop
xchg
dec
push
stc
mov
jo
divl
sti
test
in
mov
pop
sbb
pop
ret
call
push
je
test
inc
mov
sub
stos
push
lds
mov
mov
scas
xor
dec
jg
ds
dec
ret
pop
push
jno
push
xchg
mov
jne
or
mov
mov
pop
in
mov
mov
test
dec
adc
pop
jecxz
rolb
fwait
add
push
iret
fsubl
lods
xchg
sub
or
sbb
fprem1
cs
das
and
popf
and
dec
jbe
jecxz
shrl
fcomp
xor
sbb
fdivrs
nop
dec
mov
lret
dec
gs
fists
test
jg
out
in
stc
push
lods
loope
sub
gs
adc
lods
rcrl
loop
dec
leave
pushf
mov
push
xchg
jl
call
pop
idiv
sbb
cmp
jnp
icebp
dec
decl
adc
mov
leave
mov
push
jb
pop
test
ljmp
cld
or
inc
sbb
push
inc
add
clc
inc
pop
fbld
pop
mov
inc
into
sbb
mov
in
and
fwait
cmp
aad
mov
insb
adc
push
push
lock
pop
leave
jae
pop
dec
fcompl
xchg
adc
inc
out
js
testb
cmp
ljmp
push
or
and
jne
pop
cmc
jae
adc
pop
add
xchg
fildll
stc
cmpsl
dec
movsb
push
inc
lcall
mov
dec
pushf
lret
in
sub
in
pushf
pop
ret
out
mov
cmpsb
mov
sbb
es
in
xlat
push
xchg
inc
and
jl
mov
sub
test
stc
loope
int
or
jbe
inc
xor
pusha
sbb
lret
lods
shr
push
pop
mov
xor
ret
jg
add
cltd
int3
bound
shlb
loope
mov
mov
mov
mov
xlat
lret
ret
mov
insb
dec
dec
xchg
xlat
into
and
xor
cli
push
movsl
repz
mov
scas
add
repnz
and
cmp
sub
fidivrl
repnz
addl
imul
sbb
push
add
push
jae
fdivrl
rclb
inc
pop
and
fsubrp
pop
rcl
mov
and
les
out
dec
pop
cld
add
fsts
data16
and
and
jns
mov
out
sahf
push
es
push
imul
scas
rorl
test
push
inc
in
sbbl
ret
lcall
cwtl
mov
push
test
and
rclb
push
leave
outsl
mov
push
jmp
lods
dec
sbb
in
enter
call
adc
inc
push
cmp
ret
ror
or
hlt
xchg
and
adc
mov
mov
mov
andb
mov
outsl
js
test
mov
in
repnz
mov
adc
or
push
jl
push
pop
lcall
cmp
int
push
push
inc
shlb
lcall
pop
testl
leave
fcomps
xor
xor
dec
sub
out
daa
dec
push
pminub
inc
sti
jns
push
xchg
cmp
xor
fsubrl
pop
pop
sub
mov
and
inc
sub
test
inc
cs
dec
xchg
adc
addl
dec
daa
mov
sub
loop
outsb
add
clc
test
and
add
fs
or
fmuls
leave
fisttpl
mov
sbb
push
and
adc
sbb
mov
inc
call
inc
xchg
mov
pop
pop
loopne
dec
xchg
pop
call
or
out
cwtl
shr
cmp
test
mov
push
and
cmp
sar
daa
rcl
insl
cmp
shl
mov
dec
cmp
cmpsb
cwtl
stos
cmpsb
add
add
out
lds
pop
hlt
mov
push
sahf
mov
shl
pop
ja
and
dec
imul
pusha
add
push
mov
testb
cmp
andl
or
jo
mov
dec
pop
outsb
stos
pop
sub
sub
or
dec
fwait
and
dec
js
xchg
inc
clc
icebp
dec
push
or
jo
sub
mov
adc
ret
cmp
ficoml
rorb
jmp
dec
mov
push
lea
jbe
leave
lcall
sbbl
dec
in
arpl
pop
dec
mov
push
mov
mov
inc
jp
insl
imul
rcrb
test
popa
sbb
popf
ficompl
add
ja
push
inc
int
and
mov
call
jns
dec
and
iret
jmp
inc
fwait
lods
imul
jne
jnp
nop
dec
mov
dec
inc
cwtl
sub
inc
and
push
ljmp
pop
push
in
out
rorl
cmpb
mov
jecxz
rclb
pop
add
mov
iret
mov
into
cmp
rcrb
mov
push
out
sbb
and
mov
cmp
push
push
inc
xchg
cmpsb
inc
push
jecxz
fisubrl
sbb
pop
int
push
add
dec
add
mov
movsb
xchg
iret
call
pop
rol
lds
pop
dec
jnp
in
sub
dec
cwtl
push
dec
cmp
shl
xor
arpl
jbe
inc
enter
adc
pop
enter
adc
imul
outsb
rcll
lret
cli
add
xchg
imul
aas
imul
sub
dec
mov
push
sarl
mov
pop
cmp
fs
xor
and
sub
push
mov
dec
lock
cmp
pushf
jo
mov
enter
shrl
or
out
or
jl
into
xchg
sub
adc
or
mov
lock
shll
xorb
xchg
outsb
movl
stos
sub
inc
int3
and
pusha
enter
addb
and
push
cs
out
xor
xchg
mov
sarl
ja
movsl
test
ds
jg
insb
dec
jl
mov
push
cmc
std
mov
pop
insl
sahf
arpl
xchg
xor
cmc
cmp
mov
add
inc
imul
ficompl
push
jg
ret
sbb
sub
call
sbb
into
mov
fwait
ret
addb
movsl
incb
inc
leave
out
xchg
flds
adc
loopne
lret
cld
jle
add
iret
sub
push
xor
or
mov
pop
ret
enter
sbb
inc
add
mov
sahf
and
sub
lret
sub
fwait
aad
js
push
push
je
in
jl
add
jg
cmp
jecxz
faddl
mov
lcall
dec
mov
decb
mov
push
add
aas
dec
fsubl
xor
and
ror
int3
pushf
shr
pop
into
popf
push
mov
adc
les
mov
or
enter
fmul
pop
test
push
in
sbb
sub
sub
loopne
inc
inc
jne
mov
add
fcoms
cmp
dec
cld
sub
dec
push
push
pushf
mov
adc
or
fsubrl
push
orl
and
mov
or
pop
add
popf
icebp
std
and
pop
shll
jecxz
xor
mov
add
jo
out
imul
in
xchg
enter
je
int3
inc
int3
push
xor
addr16
cmp
movsb
cmp
mov
cmpsb
stos
add
cwtl
and
add
lret
jno
aaa
and
and
popa
jmp
jbe
jne
sbb
pop
lret
cmp
dec
scas
mov
cltd
xchg
ja
bound
dec
aas
stc
dec
inc
and
inc
mov
fcoms
push
sbb
pop
cmpsl
aam
test
pop
cmpsb
int3
cmp
roll
cmp
push
sbb
cmp
repnz
jnp
mov
add
mov
sub
mov
mov
imul
pop
stos
stc
push
mov
aaa
and
gs
ds
fnstsw
push
loopne
call
jnp
int
sbb
sbb
cmp
xchg
add
mov
dec
repnz
fbld
sti
push
in
xlat
mov
inc
fsubl
fwait
or
dec
mov
xor
or
sub
in
dec
test
mov
or
dec
mov
inc
call
adc
add
sub
dec
sub
push
cmp
in
mov
ret
scas
push
pop
mov
mov
push
dec
fldenv
lahf
and
aad
cmp
pop
and
push
mov
inc
mov
test
mov
mov
fwait
test
push
jbe
add
mov
mov
cmp
lret
stos
insl
fsubs
test
push
das
popa
cmpl
xlat
mov
mov
loopne
mov
push
imul
loop
sub
or
push
ljmp
adc
push
mov
inc
daa
sahf
pop
pusha
pop
sbb
or
mov
mov
jb
dec
cmp
jmp
sub
jns
xchg
lahf
pop
sbb
xchg
je
sbb
mov
arpl
shrb
je
push
push
in
mov
jnp
pop
jecxz
xor
push
jl
mov
jecxz
and
add
das
stos
sub
fsubr
sub
push
movsb
dec
je
mov
xchg
push
adc
lcall
sbb
jmp
or
int
pop
sbb
leave
sub
dec
enter
in
mov
jnp
push
push
call
or
push
loop
jne
push
fwait
inc
xchg
mov
aad
sub
mov
mov
fs
xor
pop
mov
mov
add
lds
mov
and
jg
cmpsl
xor
aas
mov
inc
jmp
dec
cmpsl
orl
pop
pop
jle
sub
testl
push
loope
push
inc
leave
daa
mov
imul
pop
popf
sub
lret
call
mov
pop
mov
jo
cmp
cwtl
sub
push
sub
lret
add
cmp
jge
inc
xor
std
jg
and
add
and
sub
jecxz
fsubrl
sbb
mov
adc
push
pop
sbbb
mov
and
fnsave
dec
negb
adc
push
push
add
nop
xchg
cmp
mov
loopne
jmp
push
cmc
mov
or
out
or
loop
push
cmp
inc
push
or
roll
ljmp
sub
call
mov
repz
shll
mov
pop
inc
lock
mov
es
fidivl
mov
popa
imul
cld
mov
fstpl
cmp
addr16
dec
int
push
mov
stos
inc
push
push
and
or
les
mov
pop
filds
cmp
pop
lret
jecxz
stos
rorb
movsl
inc
and
jo
pop
add
xor
pop
add
push
cmp
mov
push
inc
adcl
xchg
sub
mov
fmulp
push
or
out
cmpl
mov
call
pop
dec
pushf
pop
add
or
into
ds
xor
dec
mov
xchg
fmuls
lahf
mov
mov
jns
pop
imul
mov
es
jmp
scas
dec
shlb
mov
std
ljmp
adc
fwait
int3
fdivrl
mov
sub
js
lods
or
inc
sub
faddl
leave
aas
inc
ljmp
mov
lret
fs
or
cmp
addr16
or
sbb
mov
jg
lahf
addr16
and
lods
repz
loop
dec
jecxz
int
push
inc
xor
icebp
or
loop
mov
cmpsb
jg
test
fildll
fidivl
dec
mov
or
fadd
add
imul
gs
aad
dec
push
mov
pop
and
jp
xor
call
or
int
sub
pop
loope
negl
lds
push
dec
push
js
fidivrl
shll
cmp
mov
in
arpl
test
cld
mov
jae
mov
das
aaa
in
rolb
repnz
or
stos
dec
sub
or
add
sub
jne
push
icebp
inc
cmp
aam
sbb
mov
cs
repz
aam
mov
or
sub
enter
in
add
pop
sub
add
je
fnstsw
push
pop
addl
pop
aas
pushf
ds
push
dec
addr16
inc
popa
loope
test
bound
imul
test
dec
or
or
or
pop
mov
and
jp
xor
push
stos
dec
test
fsts
or
lret
hlt
mov
ret
fsubrl
ljmp
scas
mov
cmp
inc
insl
in
cs
jo
jmp
sub
mov
inc
in
or
jmp
dec
aad
mov
out
pcmpgtw
sub
cli
mov
jmp
lret
push
cltd
outsl
test
ret
movsl
bound
inc
cmpsb
int3
mov
mov
imul
gs
cmp
pop
push
sbb
dec
lret
jae
fidivrl
or
testb
xor
push
icebp
add
movsb
icebp
lahf
repnz
xchg
scas
fiaddl
mov
andb
jnp
aaa
jns
push
push
cmp
rolb
or
pop
add
rol
mov
loopne
mov
iret
cmp
stc
xor
inc
mov
insb
out
sbbb
inc
add
loope
fbld
repnz
adc
sbb
imul
lret
xchg
fdivrs
xchg
sub
and
jg
test
inc
inc
jle
jno
pop
xchg
cli
mov
and
push
pop
fiaddl
mov
dec
or
jecxz
adc
push
cmpsb
pop
inc
inc
cmp
jecxz
sbb
inc
mov
ret
or
xor
addl
mov
sbb
sub
adc
mov
mov
xchg
or
and
and
mov
fsub
cli
push
add
fisubl
mov
xor
sub
cmp
int3
or
jne
mov
lret
or
adc
adc
xor
and
jnp
pop
enter
jbe
ret
mov
movsb
fcmovbe
ss
mov
stc
frstor
stos
or
jns
int3
jae
sub
mov
xchg
sub
pop
and
lods
push
jg
dec
sarl
push
cmp
rol
inc
ror
ror
loope
pop
inc
mov
lret
xchg
dec
in
subl
stc
push
insb
ds
push
movntps
and
xor
iret
adc
stc
pop
mov
dec
hlt
arpl
adc
pop
pushf
mov
adcb
inc
shrl
sub
inc
jmp
xchg
jb
mov
sti
add
ljmp
mov
add
leave
mov
lahf
negb
in
sbb
mov
xorb
and
fcmovb
adc
push
and
cmp
cmpsb
cmp
cmpsl
dec
push
cs
test
pop
ret
inc
add
mov
add
cmc
inc
jl
mov
aas
nop
fisttpl
js
daa
and
shll
loope
and
je
inc
mov
movl
cmp
shlb
push
mov
movb
lds
test
xchg
stc
fcomp
cmp
mov
enter
sub
addb
pop
add
roll
icebp
and
mov
xchg
in
fstp
rol
xchg
jl
fidivrl
ljmp
push
adc
ds
mov
push
scas
lret
jmp
mov
loope
mov
gs
ds
fisttps
stos
lret
lahf
push
repz
adc
les
outsb
inc
pop
inc
jge
and
and
add
xchg
xchg
pop
cld
mov
xchg
leave
inc
rol
sub
popf
scas
stos
cmp
inc
inc
into
push
popf
bnd
pop
dec
cmp
cmpsb
mov
mov
inc
push
push
push
adc
and
xchg
dec
xorb
inc
js
xlat
xor
inc
aam
stos
cmp
and
push
in
or
in
xchg
aaa
ret
mov
inc
sub
loope
xchg
out
cltd
sahf
shlb
in
call
in
mov
mov
lods
lcall
stos
or
push
outsl
sbb
jnp
adc
jg
add
and
inc
mov
stc
fcoml
inc
sub
aam
xor
inc
insb
add
xor
jbe
add
xor
cwtl
inc
cld
sub
mull
data16
dec
imul
dec
fiaddl
stc
loop
push
dec
sub
fwait
jp
pusha
js
adc
fwait
leave
fisubrl
mov
cmp
xor
push
pop
pushf
in
cmp
pop
inc
or
inc
or
pop
cmp
sub
sbb
clc
stos
cmp
mov
dec
das
addl
sub
repz
pop
xor
fidivs
insl
xchg
loope
jmp
and
cmp
dec
cmp
sbb
test
inc
dec
daa
sbb
jno
shlb
movsl
cmc
ret
mov
imul
mov
pop
in
lsl
mov
or
loope
add
shll
adc
push
shrb
jbe
pusha
pop
pop
hlt
xor
fmull
stos
push
fwait
and
or
mov
mov
sub
pushf
int3
or
in
dec
and
inc
jecxz
test
add
jb
sub
mov
cld
in
dec
xchg
addr16
pop
inc
popa
iret
xchg
shrb
and
mov
sbb
push
fisubs
mov
adc
ficoml
push
mov
into
or
lods
leave
inc
inc
shr
cltd
cmpsb
push
ret
mov
or
push
add
fmull
cmp
mov
dec
stc
sbb
inc
enter
or
sub
mov
jge
mov
test
ss
lret
test
or
adc
pop
les
dec
nop
mov
adc
pop
lahf
std
jmp
and
outsb
imul
es
inc
mov
and
mov
pusha
rcr
sub
imul
pop
dec
mov
mov
mov
pop
sub
push
xchg
in
movsl
mov
rcrb
add
add
aad
mov
and
loopne
shld
or
int3
cwtl
inc
insb
outsb
add
xchg
addr16
mov
dec
sbb
add
mov
mov
inc
adc
and
mov
iret
cmpsl
leave
mov
mov
adc
inc
int3
iret
fwait
inc
filds
mov
sbb
mov
shrb
push
cmp
inc
mov
or
cmc
out
or
out
out
lret
dec
push
dec
jmp
out
mov
sti
pushf
push
pushf
aas
loope
push
dec
in
jmp
shrl
addr16
xor
test
sub
dec
xchg
loopne
dec
pop
xor
test
test
jecxz
push
mov
mov
add
jge
cli
imulb
inc
cmp
xor
loopne
fldcw
fs
js
or
rolb
push
push
inc
in
loope
shrb
dec
inc
cmp
sti
lods
inc
dec
push
repnz
mov
sbb
jl
inc
dec
in
stos
cmp
fs
mov
mov
loope
xchg
mov
mov
push
xchg
pop
xlat
cmp
xchg
push
mov
push
jbe
test
dec
and
push
fistpl
cwtl
inc
or
cmp
mov
jbe
jmp
adc
cwtl
mov
stos
mov
mov
dec
sub
xorl
cmpsb
arpl
push
push
mov
fcmovnu
shll
cmp
add
mov
mov
inc
loope
add
add
out
enter
rcr
adc
inc
rolb
mov
in
add
ljmp
push
mov
fistl
out
cmp
push
xor
fwait
mov
xor
xor
jb
push
mov
jne
sbb
rclb
dec
ds
pusha
pop
gs
sbb
cmp
mov
cs
mov
cmp
cwtl
aas
cmp
cmp
inc
adc
jecxz
adc
mov
or
rorb
mov
push
mov
pop
xchg
das
lret
push
inc
mov
rolb
enter
cmpl
adc
cltd
cli
and
dec
lret
xchg
xchg
dec
and
cmp
inc
out
orl
and
or
inc
repnz
pushf
push
in
lret
decl
gs
lahf
cmp
jp
popf
in
xchg
test
push
xor
test
push
cmp
inc
inc
pop
xorb
cs
shll
mov
mov
int
jne
imul
add
cmp
test
xor
cmp
rorl
subl
stc
les
sarl
aam
pop
pop
ljmp
pop
iret
adc
lock
cwtl
dec
jp
shrl
push
fiadds
mov
in
test
pop
sti
iret
inc
mov
jb
push
fists
in
loop
cs
sub
inc
fcmovbe
push
push
sbb
fldcw
dec
js,pn
dec
xor
lock
sbb
dec
or
daa
outsl
push
mov
push
bound
pop
cs
mov
adc
cmp
clc
inc
in
push
lahf
insl
push
int3
jl
and
dec
adc
xchg
movsb
fwait
out
loopne
mov
lahf
ret
pop
enter
sub
fsts
lods
addr16
out
or
jge
mov
push
sub
sub
ja
xchg
sub
fstp
sub
jecxz
lret
xchg
adc
sete
cld
or
loope
jl
push
inc
fidivs
pop
in
add
adcb
in
cld
aaa
in
jl
mov
mov
mov
pop
pusha
mov
insb
xchg
lds
js
pop
pop
js
mov
jno
mov
cmp
pop
cmpsb
clc
out
dec
xchg
xor
mov
popa
cmpsb
fdivrs
out
outsl
and
scas
test
inc
addr16
movsb
ret
pop
dec
dec
cmp
leave
enter
inc
sub
sbbb
lret
pop
fwait
ret
cmp
cmp
push
pop
mov
dec
lods
cmp
cmp
leave
sub
sahf
cmp
enter
sub
xchg
enter
xchg
lret
sub
mov
sub
fsubs
testb
pop
fcoms
pop
sbb
sbb
push
sub
js
cmp
and
imul
imul
enter
fdivl
loop
add
inc
sub
inc
cmpsb
inc
sahf
push
rcrb
loopne
and
into
jmp
dec
adc
lret
faddl
loopne
js
cwtl
pusha
in
fbld
sahf
pop
inc
frstor
push
sbb
push
xchg
mov
mov
lods
call
push
shrl
jmp
or
aam
push
inc
push
sahf
fsubs
dec
xor
pusha
bound
mov
pusha
cmpsb
sub
stos
out
aas
jl
sub
cmp
les
push
repnz
xlat
jno
ss
xchg
and
and
lcall
add
push
scas
cmp
jge
es
or
gs
fmull
call
inc
mov
dec
aas
test
jmp
in
pop
push
dec
cmpb
arpl
fsubrl
cmc
push
dec
in
or
sbb
adc
or
or
pusha
ret
xchg
push
dec
xchg
fistpl
sahf
or
mov
rcl
test
sub
lods
cld
mov
es
ret
inc
js
jg
outsb
outsb
adcl
popa
mov
sbb
xor
add
stos
or
dec
xor
mov
and
sbb
push
imulb
rclb
test
gs
sbb
dec
js
arpl
dec
and
adc
jl
jl
push
push
add
add
push
or
mov
addb
cmp
push
mov
stos
or
and
push
fs
mov
cmc
adc
stos
cmpsl
outsb
mov
or
mov
aad
subl
daa
jnp
cmp
mov
stos
mov
test
pushf
rcr
mov
add
in
add
add
pop
cmpsb
sbb
inc
call
jl
roll
pop
cmp
add
daa
enter
aad
inc
mov
test
bswap
ja
mov
ds
popf
add
adc
sub
into
stos
inc
sti
out
add
enter
stos
mov
sbb
and
gs
sub
inc
outsb
loopne
imul
repz
frstor
iret
mov
push
xchg
fidivl
sbb
in
cmp
js
jbe
cmpsb
push
fnsave
push
pop
mov
lcall
add
cld
clc
fnsave
into
push
xor
xchg
sub
fcomps
inc
xchg
lcall
lret
dec
or
and
ljmp
jnp
stc
fwait
jg
roll
push
inc
pop
mov
dec
mov
or
jbe
arpl
jle
test
dec
jp
inc
push
push
fsub
xchg
pop
jbe
shrl
mov
inc
xchg
inc
push
cmp
sbb
leave
dec
ret
mov
mov
imul
ja
and
pop
rorl
pop
outsl
dec
jl
faddl
cli
dec
in
jg
inc
lea
gs
fidivrs
or
insl
fsts
inc
dec
loopne
dec
test
cmp
test
or
and
ror
ret
je
andb
cmp
jecxz
inc
adc
pop
in
fisubs
scas
test
imul
inc
into
mov
mov
and
xchg
das
jl
xchg
dec
popa
es
xchg
mov
mov
int3
fisttpll
xchg
pop
std
sub
cmpl
mov
xchg
mov
jmp
jmp
scas
dec
jmp
or
into
cmp
dec
mov
outsl
std
idivb
sbb
inc
pop
in
adc
jle
adc
aas
pusha
xor
imul
xor
mov
jb
in
add
dec
pop
jnp
cmp
cmp
inc
add
roll
cmpsb
out
loopne
jne
xchg
sub
lds
xchg
incl
into
and
dec
movsl
mov
pop
leave
sbb
fsubr
gs
inc
pop
loope
rcrl
addr16
cmpsb
stc
xor
xchg
push
js
dec
aam
loop
mov
push
dec
fiaddl
movsb
adc
cmp
or
inc
mov
or
ss
nop
lahf
pop
pandn
lods
lret
das
jge
or
xor
mov
lds
mov
jecxz
outsb
lock
mov
into
lds
adc
add
add
jl
add
icebp
dec
std
mov
cs
xchg
push
xor
jecxz
jl
es
pop
xchg
psubsw
pop
pop
cmp
mov
ds
aas
pop
lret
lods
jmp
mov
fsubl
jmp
cmp
and
cmp
xchg
mov
out
sbb
ret
inc
pop
push
test
sub
inc
in
add
xor
cmc
int3
dec
jbe
test
jmp
fsubp
cmp
pop
es
ljmp
inc
lods
and
jnp
cmp
mov
mov
in
push
inc
das
cwtl
mov
inc
lahf
fcom
insl
push
push
gs
push
leave
enter
lret
dec
fwait
sub
cmp
rorl
loope
movlhps
push
ret
add
inc
push
imul
popf
sub
stos
cmp
movsl
pop
or
ret
aad
cmpsl
push
xlat
je
cld
push
cmp
scas
rclb
or
mov
add
sub
or
fcoml
sub
mov
push
fisubrl
pushf
jnp
sarb
enter
jnp
mov
dec
fiadds
fidivrl
add
push
std
cmpsl
addl
inc
add
icebp
sbb
pop
jp
dec
xchg
mov
mov
add
mov
xor
imul
mov
movsb
cmpl
dec
cmpsb
popa
sub
sti
inc
dec
div
ljmp
inc
lods
jmp
in
icebp
hlt
test
or
pop
sub
pusha
mov
sbb
dec
sub
push
bound
mov
sub
dec
mov
arpl
dec
fsubrl
push
fnsave
repz
dec
notb
lds
inc
aas
out
jae
dec
leave
bound
jg
pop
in
jae
mov
push
xchg
nop
pop
or
in
sbbb
sub
mov
pop
ds
mov
movsb
or
jno
and
in
movsl
nop
xchg
xlat
inc
push
or
push
cmpsl
pop
loopne
and
les
ret
jmp
pop
jg
sub
dec
cmpsl
ljmp
into
cmp
jno
and
jb
test
mov
dec
xlat
mov
sub
repnz
imul
pop
dec
add
sub
fistpl
dec
in
sbb
mov
in
dec
xchg
fwait
sub
iret
in
orl
lret
lds
xchg
cmp
mov
xorb
xor
movsb
dec
shll
sub
shlb
xchg
xorb
cmc
loop
jecxz
inc
jle
dec
mov
lret
dec
sbb
sub
push
out
dec
lret
aaa
mov
sbb
add
addr16
mov
pop
jns
pop
dec
dec
movsl
sub
mov
xchg
orb
mov
xorb
jmp
push
ds
mov
cmp
dec
out
mov
lods
je
pop
and
lcall
mov
mov
mov
adc
xchg
mov
sbb
cmp
dec
dec
xor
mov
xor
pop
add
xchg
daa
mov
fisubs
out
popa
mov
xor
imul
push
jmp
pushf
mov
cmc
ja
imul
cmp
mov
imul
mov
rorb
mov
push
or
mov
dec
dec
cmpsb
and
out
nop
es
mov
lret
lds
popa
adcl
stos
sbb
cmpsl
push
data16
cli
mov
ja
sub
pushf
pusha
ljmp
adc
pop
orl
push
movsb
lock
sbb
sub
and
pop
daa
sub
dec
aad
push
cmpsb
lret
addl
push
ljmp
testl
pusha
fabs
sbb
push
mov
inc
dec
dec
stc
rolb
dec
mov
int3
cmc
in
pop
or
ret
dec
add
mov
leave
jb
push
sub
ja
jo
dec
inc
lret
push
imul
sbb
adc
outsb
addb
dec
jns
and
js
cmp
lds
out
insl
cmp
cmp
dec
fisubs
pop
sbb
mov
sub
icebp
push
test
aas
lret
cmp
and
movsb
inc
push
jmp
subb
orb
roll
dec
sbb
lods
adc
pushf
fistpl
pusha
cmp
mov
sub
pop
dec
repz
in
dec
xor
out
enter
push
mov
lret
insb
in
cmpsl
lea
mov
cmp
out
mov
leave
lret
sahf
cmp
jnp
leave
imul
dec
or
and
inc
dec
insb
push
daa
ror
loope
dec
clc
pop
or
aam
aad
stos
xchg
sub
cli
arpl
lss
aad
cltd
push
mov
push
iret
aaa
pop
pop
es
mov
lahf
mov
stos
das
fimuls
cmc
mov
sub
ljmp
out
mov
daa
inc
fisubl
dec
cli
xchg
inc
xchg
or
jecxz
mov
mov
mov
cmc
js
cmp
ret
lret
js
sbb
and
mov
dec
rcrb
lret
adc
pop
or
lods
xchg
inc
and
movsl
or
cmpsl
inc
int3
and
and
fldenv
and
dec
inc
cmpb
inc
fadd
enter
inc
dec
hlt
and
inc
movsb
pop
fsubrl
pop
mov
sub
or
cmpsl
sub
inc
mov
sbb
jbe
dec
ljmp
fidivrs
dec
repz
lret
xor
and
xor
push
dec
xor
mov
inc
dec
aad
xchg
dec
addr16
lret
cmpsl
push
inc
sub
dec
sbb
push
mov
pop
repnz
sub
scas
or
shrb
dec
sub
ds
ficompl
lds
dec
out
sbb
leave
dec
je
repz
cli
cmc
out
sbb
in
cs
cmp
and
or
lahf
sbb
sub
loopne
mov
cwtl
push
scas
inc
xor
xor
cmp
xchg
xor
aad
mov
test
sub
orl
or
mov
push
and
and
bnd
leave
stc
push
les
sub
rcr
stc
and
cmpsb
mov
mov
jmp
add
leave
insb
push
xchg
in
mov
cmp
pop
push
mov
stos
jbe
jmp
fisttpl
jb
fstl
xor
pop
sbb
lods
pop
inc
cmpsl
movl
adc
out
jns
dec
or
sub
sti
inc
sub
jmp
inc
std
sbb
jb
or
sbb
and
inc
dec
cld
push
sub
adc
sbb
test
or
in
xor
leave
push
add
or
stos
inc
cmp
and
or
stc
or
pop
arpl
cmpsl
cmc
and
cmp
xor
dec
push
lret
test
sub
imul
jp
in
mov
push
xor
or
mov
dec
jb
mov
call
pop
or
pop
pop
in
stos
push
sub
movsb
sbb
xchg
sub
jo
stc
clc
jne
mov
fisttpll
sub
out
sarl
mov
fisubs
gs
adc
inc
mov
mov
sbb
add
jp
sub
dec
or
in
ljmp
push
inc
ds
jbe
fiadds
inc
cmp
sti
stc
out
scas
xchg
inc
or
out
sbb
xchg
out
loope
ret
mov
inc
daa
and
arpl
jb
dec
cmp
int
jbe
mov
dec
xchg
sub
and
roll
or
add
pop
mov
cmc
pop
jmp
nop
gs
cmp
xchg
das
xlat
dec
repz
sbb
sub
cltd
pop
sub
fsub
xchg
xor
daa
rcll
loop
mov
pop
adc
sti
lret
add
inc
xlat
mov
popf
pop
sbb
imul
inc
pop
ss
movswl
cmp
adc
mov
ret
popf
push
mov
cli
jnp
mov
inc
jp
mov
dec
jne
fiadds
test
push
icebp
xchg
mov
add
stc
jnp
cli
and
cwtl
or
jecxz
fiaddl
fsubrl
jmp
movsb
mov
mov
imulb
or
bound
mov
sbb
lret
jge
in
pushf
mov
inc
cmp
ficoml
sbb
dec
fwait
movsl
js
out
roll
mov
adc
cmc
pop
ret
cmp
xor
jns
fdivl
in
inc
sub
sbbl
add
fldl
lea
inc
or
push
pop
mov
sub
bound
add
jge
aas
mov
add
sarb
inc
sub
test
push
pop
or
mov
xor
gs
dec
in
or
adc
fisttpl
jg
movsl
mov
and
mov
ret
cmc
mov
sub
sbb
mov
pop
testb
pop
movsl
inc
mov
test
cli
shlb
dec
imul
imul
and
mov
xchg
add
jb
lods
mov
pusha
mov
lahf
or
dec
insb
mov
cmpsb
pop
lret
and
dec
stc
jbe
out
pop
daa
pop
fdivs
add
arpl
mov
bound
push
add
sbb
adc
mov
loop
scas
incl
inc
es
sbb
movsl
stos
cmp
mov
xor
and
adc
inc
mov
fimuls
enter
push
into
arpl
pop
mov
inc
mov
clc
lret
repz
pop
inc
inc
xor
inc
mov
xor
push
cs
gs
movsb
cmp
inc
jl
inc
insl
inc
out
xor
int
or
or
sti
lock
mov
mulb
mov
sbb
jmp
in
mov
add
inc
dec
inc
jle
fsubl
incb
or
xor
dec
mov
loop
addb
sbb
and
push
shlb
in
addr16
popa
sbb
mov
clc
cs
rsm
lret
adc
add
dec
loope
ss
jg
popa
fwait
jge
sbb
sub
jo
inc
stos
adc
stc
lahf
add
inc
jecxz
jno
loop
sbb
xor
inc
lds
or
and
ja
popl
jne
mov
and
mov
push
stos
fmull
in
cmpsb
jae
jno
push
or
inc
jno
adc
mov
cs
pop
mov
sub
xchg
sub
xor
sub
mov
push
mov
dec
mov
mov
pop
mov
push
sbb
add
mov
push
call
xorl
test
mov
les
fildll
fadds
cwtl
pop
xchg
jmp
out
dec
loopne
push
pop
js
sarb
adc
xor
jp
push
fnstcw
test
push
xchg
cmp
nop
push
pop
push
lret
xor
in
enter
popa
pcmpgtb
pop
inc
aad
xchg
rolb
or
pop
inc
dec
dec
inc
lret
cmp
rcll
mov
mov
add
shld
imul
pop
mov
and
mov
js
xchg
or
mov
sub
push
mov
jl
push
sub
mov
xor
iret
and
js
fmulp
dec
test
sbb
sub
inc
xchg
sub
xor
popa
out
repnz
pop
jb
dec
sub
push
loopne
cmp
out
shrl
add
pop
xchg
add
mov
lock
imull
fsubr
add
dec
sbb
add
and
add
mov
mov
or
inc
dec
mov
push
push
pop
loopne
or
dec
ret
add
sub
jp
dec
add
jge
shrd
push
add
loop
iret
or
jae
jecxz
and
and
pop
jno
leave
sahf
cmpsb
jmp
dec
jb
in
mov
dec
movsb
stos
inc
or
fdivrp
enter
addl
into
in
je
mov
movsb
sub
push
leave
and
xor
in
pop
sub
sbb
push
repnz
fmuls
xchg
fcmovne
add
dec
movsl
jo
jmp
jns
jmp
popa
test
loope
pop
dec
inc
nop
mov
ret
mov
cmpsb
inc
testb
mov
mov
ljmp
notb
shll
std
imul
es
inc
adc
mov
mov
pop
fnsave
add
inc
movsl
push
in
xchg
add
inc
lea
lods
and
cmp
sub
fisubl
cli
jp
nop
dec
or
mov
fs
repnz
pop
dec
and
mov
inc
aas
push
or
cmp
test
dec
cmp
xor
iret
cmp
fmulp
push
jns
repnz
stos
in
andb
sarb
mov
cmp
repz
jecxz
fisubl
jp
mov
scas
push
sbb
adc
sbb
test
push
je
mov
iret
and
and
mov
sbb
movsb
push
loope
stos
mov
fsubl
popf
fdivl
pop
xchg
loopne
mov
sub
int3
mov
popa
lret
xchg
mov
aaa
push
cmpsl
leave
js
loop
dec
dec
aas
xor
lcall
pop
dec
ret
mov
cli
cltd
dec
or
jns
test
sbb
and
dec
dec
xchg
mov
ret
add
fisubrs
xlat
inc
clc
sub
sub
cs
add
inc
adc
mov
dec
mov
jae
dec
or
jb
push
or
or
into
in
add
or
dec
ret
faddl
loope
lret
gs
or
into
imul
and
enter
mov
push
es
shrb
adc
or
arpl
test
sub
cmpsb
scas
jbe
and
xor
or
sti
mov
in
repz
and
xchg
inc
les
sbb
mov
clc
ret
sub
cmpsl
and
jmp
xchg
mov
ret
lods
add
mov
fildll
ret
jnp
ror
mov
in
ror
mov
daa
push
xchg
mov
dec
lret
pop
ljmp
add
pop
pusha
mov
pop
fs
jecxz
xchg
push
xchg
insl
int
jg
xchg
gs
stos
xor
nop
dec
push
fmuls
ljmp
bswap
adc
cld
lret
lret
adc
inc
pusha
and
in
fdivrl
mov
cs
andb
fldl
cmpsb
mov
dec
adc
inc
insl
xchg
jno
ret
inc
jne
sarb
sahf
cwtl
or
pop
xchg
mov
insb
sbb
fwait
cmp
in
or
pop
loopne
mov
daa
lcall
fcoms
inc
in
aaa
jo
cld
xchg
mov
addr16
mov
add
pop
push
in
shlb
pop
jg
pushf
jb
pop
inc
inc
fcompl
ds
jl
lahf
rorb
cli
repz
push
mov
subb
in
fbstp
inc
dec
mov
mov
sub
inc
inc
addr16
and
inc
es
dec
jbe
jb
or
int
jo
fildl
jo
fldenv
enter
push
aas
fnstsw
inc
stc
cmpsb
jae
sbb
sbb
or
pop
dec
mov
js
orb
roll
mov
out
or
sbbb
dec
push
cld
sub
gs
lret
cmp
xchg
pop
mov
adc
or
mov
imul
lahf
fisubs
mov
sbb
sbb
nop
push
fldl
xchg
imul
lcall
inc
push
xchg
pushw
rcl
ficompl
sub
inc
idivb
xor
cmpsl
jno
jmp
inc
mov
cltd
adc
xchg
scas
add
or
je
add
addb
jp
and
mov
add
ss
outsl
inc
push
mov
dec
sbb
call
mov
jb
add
movsl
sub
stos
popa
stos
xchg
sbb
add
cmc
mov
scas
in
into
and
in
insb
test
push
pop
mov
sbbb
int3
cmp
push
popa
dec
and
jmp
push
or
sahf
gs
icebp
sub
mov
push
adc
or
fidivs
icebp
inc
aad
call
xlat
pop
sbb
mov
sub
xor
sbb
cs
or
sub
fmul
sub
jl
faddl
mov
lds
cmpl
xchg
jecxz
mov
or
loop
adc
jp
or
jl
stos
add
cmpsb
fsubl
push
mov
jb
sbb
cmp
mov
sub
fwait
jmp
daa
mov
sub
dec
mov
popa
mov
in
jg
push
sahf
rcrl
dec
or
ret
inc
lods
cmpsl
in
bound
std
jl
fdivrl
mov
sbb
les
sbb
mov
iret
loope
mov
push
or
loope
xor
adc
mov
inc
dec
ret
daa
repz
dec
xor
mov
fdivrl
je
addr16
pushf
and
xlat
test
daa
jge
push
in
jb
test
sti
inc
jge
mov
lds
cs
xor
pop
add
push
movsl
cmp
inc
inc
inc
sub
es
gs
add
mov
push
leave
andb
lahf
imul
fcompl
sub
sbb
test
mov
mov
call
push
std
stc
enter
dec
shrl
sbb
cs
sbb
je
xor
cmp
fwait
sub
or
inc
lret
inc
mov
movl
out
jb
aam
inc
jmp
bnd
cmp
pushf
in
ret
movsb
fsubs
pop
into
add
dec
mov
add
pop
and
mov
ja
in
leave
inc
loopne
mov
cmp
dec
push
mov
cli
inc
in
sub
imul
aad
cmp
data16
mov
add
stos
addb
or
pop
xchg
xlat
push
add
imul
adc
loopne
test
push
dec
adc
js
add
nop
cmp
adc
in
rcll
pop
and
mov
fwait
and
ss
jbe
and
push
ret
ficoms
pop
xor
orl
and
xchg
xchg
dec
jecxz
ret
outsb
stos
and
in
sub
add
inc
dec
scas
in
jmp
sbb
mov
loop
xchg
jne
sahf
flds
cmp
dec
xor
mov
cmp
popa
int3
pop
mov
and
rcrb
push
adc
inc
dec
xor
xor
dec
dec
das
xor
ret
movb
or
jmp
out
lret
adc
and
sbb
imul
adc
and
loope
jae
sub
lock
imul
push
jbe
or
jp
and
je
cmp
shll
sbb
dec
pop
fdivl
in
cmpsb
mov
jg
imul
inc
xor
cwtl
add
sbb
mov
push
inc
cmp
add
sub
lea
push
test
test
inc
fwait
jo
mov
insl
xchg
jnp
push
pop
mov
mov
aad
dec
mov
test
test
cli
inc
lret
cmp
nopl
lret
xchg
shll
inc
cmp
sub
push
cli
fwait
imul
cmp
in
adc
sti
pop
sub
push
out
je
int
std
stos
addr16
sub
mov
mov
sbb
mov
dec
add
aaa
and
ljmp
iret
aas
push
mov
insl
pop
aam
icebp
mov
sub
push
sti
xor
fwait
push
arpl
mov
js
xor
cwtl
enter
ljmp
lret
test
pushl
push
jne
xchg
pop
cmpsb
dec
cmp
mov
insb
ffreep
push
imul
or
mov
sub
gs
xchg
xchg
lret
sub
add
push
and
cli
push
inc
inc
push
xlat
shl
aad
push
dec
cwtl
orl
test
daa
clc
push
call
pop
stos
sahf
cmp
loopne
imul
adc
sub
dec
sub
mov
outsl
aas
sub
jp
xchg
sar
repnz
cli
daa
ficoml
cmp
pop
test
ljmp
push
or
sub
inc
add
mov
sbb
in
inc
jg
stos
loopne
push
stos
aam
ret
mov
sti
mov
std
shlb
mov
cmc
fcoms
sub
xchg
loope
jmp
lret
pusha
shl
push
or
mov
adcb
mov
in
das
lds
int
shlb
inc
push
xor
xchg
or
je
mov
sbbl
adc
or
ret
inc
les
je
pushf
add
mov
js
in
repnz
fimuls
repz
jmp
orb
add
pop
popa
dec
lock
rolb
test
sarb
or
in
sbb
mov
rol
inc
aaa
addr16
inc
mov
jo
ret
inc
ss
in
gs
fildl
ds
mov
scas
or
insb
sbb
cmpsb
add
fldl
inc
inc
imul
insl
cwtl
add
adc
mov
mov
subb
lret
xlat
loop
add
xor
or
call
mov
xorb
and
add
xor
and
jmp
ret
mov
pop
xchg
lds
mov
lret
pop
ret
or
push
insb
pop
xor
push
mov
rolb
fisttpl
adcb
pop
sub
and
mov
jg
je
lds
pop
dec
loopne
testl
adcl
mov
push
ljmp
loop
in
inc
ret
andl
sbb
ljmp
mov
mov
sub
adc
lock
aaa
mov
sbb
addr16
dec
or
add
repnz
mov
jae
mov
jo
mov
push
mov
or
lock
sbb
mov
repnz
movsl
cwtl
fsubrl
nop
jae
stos
insb
push
cmp
push
add
leave
addb
inc
mov
inc
lock
pop
divl
pop
pop
int
lahf
add
js
jnp
add
inc
add
fwait
test
mov
enter
or
inc
inc
mov
les
jmp
or
sahf
or
loope
cmpb
sbb
dec
jmp
jmp
je
clc
dec
loope
mov
mov
stos
sbb
imul
cs
aas
mov
push
addl
add
dec
imul
cmpsb
aas
cwtl
or
ja
inc
je
outsb
dec
mov
scas
movsb
aas
movsb
movsb
xlat
scas
ret
cltd
lret
lret
loop
cmp
mov
popf
mov
cmp
or
xchg
fsubrp
push
loopne
aad
rcll
cmp
inc
lods
in
push
sub
rolb
adc
ret
adc
and
inc
cmp
daa
sub
gs
cmp
xlat
xor
sarb
push
ret
inc
test
lcall
or
jge
adc
or
inc
xlat
rcrb
cmp
mov
pop
loope
pop
pusha
mov
pop
out
incl
or
leave
popf
xlat
xchg
divb
inc
xchg
hlt
pop
xchg
sbb
mov
mov
mov
stos
xchg
mov
cmp
leave
dec
and
mov
jmp
or
dec
mov
sub
enter
hlt
scas
adc
in
sbb
dec
aaa
xchg
pop
popf
pop
mov
sbb
cs
out
jecxz
push
or
lret
mov
adc
adcl
fcompl
aam
and
mov
into
imul
stos
rclb
mov
nop
add
xor
cmpl
cli
and
fs
mov
rcll
mov
push
cltd
jg
mov
sbb
cmp
xchg
inc
pop
jmp
fucom
lret
jecxz
imul
push
sarb
fwait
mov
pop
adc
adc
cmpsb
adcl
cmp
jb
pop
fwait
lods
ja
sbb
lcall
push
jns
sub
mov
pop
and
jo
sbb
call
fwait
dec
dec
mov
call
testl
push
bound
stc
iret
es
xor
daa
imul
jp
daa
sub
xchg
or
test
gs
int
xor
mov
out
mov
inc
mov
pusha
pushl
ficompl
in
imul
rcll
fsubrl
sbb
add
sub
or
inc
or
and
mov
sub
mov
es
push
lahf
mov
js
dec
lahf
fdivl
outsl
sub
dec
icebp
inc
icebp
adc
xor
out
enter
sub
mov
js
stc
aaa
add
sbb
mov
dec
pop
push
mov
sub
je
les
mov
jle
or
mov
test
lcall
into
pusha
sub
mov
sub
jp
pop
mov
mov
stos
decl
sub
inc
add
dec
mov
dec
push
xchg
in
in
sbb
mov
cmpsb
cmp
scas
cmp
mov
js
ss
push
out
fcoml
cmp
and
lahf
inc
pop
cltd
mov
test
aad
xorb
pop
mov
std
mov
mov
ficoms
jnp
call
loopne
dec
out
dec
lret
cwtl
cmpsl
pop
sub
insb
sub
add
sbb
mov
adc
inc
dec
cmp
mov
mov
mov
test
ret
push
cmp
int3
cs
and
ret
xor
ret
out
xchg
push
test
cwtl
xlat
lods
pop
sahf
ljmp
pop
push
daa
jge
mov
sarb
push
inc
mul
mov
push
call
in
out
inc
loope
push
xchg
push
dec
push
rorb
sub
insb
imul
mov
xchg
jo
sub
jnp
aas
clc
movl
mov
cmp
mov
aaa
xor
mov
in
mov
add
lods
xchg
aam
inc
sbb
fmuls
js
ficompl
xchg
or
aaa
aad
mov
ret
das
cmova
or
in
aam
aaa
mov
inc
dec
or
in
xlat
ret
push
or
inc
push
sub
out
stos
dec
pop
shrb
dec
loop
pop
fldl
push
je
bound
aad
loop
sub
cmp
xor
adc
pop
sbb
and
pop
inc
push
inc
rorb
mov
arpl
jge
iret
lods
imul
inc
dec
dec
cmp
lea
dec
jns
inc
inc
popl
push
add
mov
inc
pushf
xchg
int3
fcomp
mov
inc
or
push
cld
mov
and
jbe
lahf
not
fbld
add
mov
push
inc
daa
test
dec
dec
inc
pop
dec
adc
jg
sbb
call
lret
xor
push
lea
push
fcmovu
xor
cmpsb
sub
ret
push
push
test
jecxz
mov
sbb
mov
add
out
or
and
mov
stc
ret
pop
cld
mov
loop,pt
pop
addr16
sub
cmp
out
mov
dec
stos
inc
or
test
sub
das
loopne
insb
out
push
in
shlb
pop
sbbl
imul
sbb
mov
jnp
sub
cmp
testl
enter
cmp
jle
pop
lea
cmp
test
add
call
mov
mov
inc
stos
sbb
insl
mov
dec
shlb
xchg
jno
aaa
jae
in
movsb
sub
jp
lock
mov
cmp
sub
inc
sahf
cli
scas
inc
in
sbb
imul
dec
xchg
sbb
push
cmp
pop
xor
push
loope
in
add
js
andb
or
inc
icebp
ljmp
add
inc
in
insb
xor
fimull
inc
lcall
orl
add
cwtl
ret
dec
xrelease
inc
inc
adc
dec
rcrl
push
pop
out
fwait
inc
cmp
stc
sbb
dec
leave
push
inc
adc
out
add
aad
les
jne
sahf
pop
lods
or
inc
jl
jecxz
jb
insb
cmp
or
mov
fwait
decl
mov
mov
sub
add
cmp
or
lahf
mov
iret
add
and
inc
leave
jmp
add
jecxz
push
sub
jmp
packuswb
pop
xchg
and
test
cli
lds
dec
cmp
sbb
mov
dec
es
sub
daa
mov
xor
lret
jb
outsl
mov
add
mov
add
into
inc
shl
enter
data16
and
jne
sub
xlat
fiaddl
outsl
or
dec
push
jecxz
incl
or
push
mov
cltd
dec
inc
scas
mov
les
es
rorl
lahf
dec
cmp
mov
mov
sarb
lret
jecxz
jl
in
test
bound
insb
pop
mov
jecxz
sbb
push
mov
in
or
daa
jmp
push
jbe
test
mov
mov
xchg
aaa
push
jbe
mov
icebp
repnz
sbb
sbb
jecxz
mov
xchg
adc
sub
or
or
dec
inc
and
nop
cmp
sub
loopne
cmpsl
pushf
rorb
mov
jle
sub
imul
xchg
imul
pop
mov
adc
and
pusha
outsb
ja
in
ds
jmp
and
sub
fsubl
sub
loopne
in
data16
sub
mov
es
imul
jns
xchg
cmp
xor
fiaddl
xchg
xor
or
mov
ljmp
mov
pushf
mov
mov
sbb
xlat
in
pop
mov
jmp
or
ljmp
out
rclb
push
adc
leave
sahf
adc
testb
outsl
fs
cld
ljmp
push
in
pop
fsub
insb
test
cmc
or
loopne
lea
pop
push
or
mov
mov
xor
cwtl
aam
cld
push
jb
je
jnp
jmp
aad
add
cwtl
push
test
mov
and
and
les
test
in
mov
lret
sbbb
popa
pop
and
movsl
adc
adc
fidivs
cmpsb
mov
cld
pop
ret
daa
leave
pop
jae
rolb
mov
clc
add
mov
flds
stc
das
push
push
sub
sub
mov
push
pop
jmp
sbb
push
lcall
test
pop
insb
pop
loope
mov
loope
adc
cs
call
xchg
or
cli
dec
imul
mov
or
loopne
pop
push
inc
addr16
pop
cmp
cmp
imul
cmp
cwtl
dec
je
mov
add
addl
sbbb
xlat
stos
in
adc
and
das
lcall
mov
stos
jae
pop
mov
sbb
cmp
push
gs
in
loop
jmp
fisubs
mov
push
lcall
jecxz
pop
rclb
in
je
xchg
xchg
stc
sahf
jle
cmp
imul
insb
mov
mov
icebp
jl
jg
les
scas
and
jecxz
xor
loopne
fldl
and
leave
std
mov
cltd
jno
sbb
push
mov
jp
or
xchg
test
pop
xchg
call
mov
leave
insl
call
add
inc
push
fistps
fstcw
test
cmp
aam
dec
std
nop
sub
addr16
lahf
xorb
lock
pop
adc
xchg
push
out
pushf
inc
mov
movsb
adc
mov
xchg
insl
bound
add
repnz
ljmp
scas
imul
dec
sbb
xchg
mov
mov
xorb
push
add
xor
and
add
cmp
mov
mov
cmp
xor
lret
test
push
loopne
sbb
add
sti
pop
or
gs
cltd
pushf
repz
push
popf
sub
add
loopw
inc
jb
fwait
xor
mov
shll
pop
fs
enter
cmp
xchg
cmp
adc
data16
pushf
fs
push
rorl
enter
xchg
pop
pop
cmc
mov
add
orl
sub
mov
aam
enter
mov
clc
or
add
cmp
fisttps
leave
scas
adc
xor
mov
fcmove
adc
aad
gs
xor
mov
jne
aaa
stos
mov
jecxz
pushf
loop
shlb
outsl
lret
mov
cld
sub
dec
rorb
sbb
or
in
les
add
js
inc
mov
fnsave
mov
push
fimuls
vmread
lds
fcoml
add
nop
js
outsl
xchg
call
pop
scas
pusha
cli
imul
jae
lods
or
sub
jo
or
fcmovne
ljmp
pop
dec
add
movsl
pop
pop
sbb
pusha
mov
test
mov
pushf
or
mov
pop
jl
lret
add
cmpsb
inc
stos
sub
sub
and
aam
inc
lea
pop
jmp
mov
popa
out
dec
lock
cmc
xchg
vpsubusw
loop
imul
jb
mov
fsubr
cli
mov
mov
cmp
jg
fmuls
dec
jg
or
cmp
dec
add
xchg
mov
jae
std
add
pop
iret
dec
cmp
addr16
loope
pop
scas
pop
xor
sub
mov
sarb
cmpsb
lods
mov
and
dec
xorl
movsb
xor
in
inc
cli
int3
mov
in
xor
insl
mov
cmpsb
in
sbb
std
pop
dec
jnp
xchg
dec
xor
xchg
lret
mov
in
dec
lds
out
clc
sub
mov
fwait
into
enter
bound
sti
dec
push
dec
xor
test
mov
jecxz
dec
lahf
fdivrl
divps
iret
insb
mov
fmul
jns
in
or
jmp
cmpl
in
cmp
ja
cmp
mov
cwtl
dec
xchg
cmpsl
sarb
cwtd
insb
ss
dec
or
fistpll
inc
push
pop
nop
jnp
in
or
loope
insl
stc
insb
fwait
and
cmpsl
pop
pavgb
mov
je
or
xchg
cmp
lcall
das
shlb
jl
or
xchg
or
sub
sbb
mov
lea
xor
aad
scas
sti
lahf
cmp
mov
mov
pop
adc
mov
ljmp
inc
cltd
rorb
xchg
js
lods
data16
and
push
pop
mov
lock
dec
lods
mov
ss
mov
xor
rorl
mov
fdivl
fs
andb
shll
xchg
ror
mov
sbb
add
xor
out
gs
or
mov
xchg
gs
add
daa
stc
pop
cmp
cmpsb
inc
sub
ja
push
ror
scas
cli
out
daa
setg
add
lods
popf
movsb
shl
getsec
push
in
fiadds
sub
movsl
jbe
push
push
aas
fwait
daa
imul
iret
push
ljmp
inc
in
out
cmp
test
push
pop
fiadds
ja
add
popa
xor
add
inc
jno
inc
ja
pop
cwtl
cmp
inc
ss
push
dec
movsl
inc
movl
and
les
lahf
test
mov
inc
fwait
cmp
lret
incl
mov
sbb
jne
faddp
inc
push
push
fwait
lret
loope
aad
mov
outsb
lahf
add
gs
lret
repnz
fsubrp
dec
xchg
adc
lods
sub
test
ja
add
in
and
or
mov
in
sub
push
dec
dec
xchg
and
out
xor
aas
pop
aam
pop
push
arpl
dec
pushf
insb
xchg
daa
push
adc
dec
mov
inc
or
fsubrs
addr16
cli
out
icebp
ret
inc
dec
cmp
mov
jns
push
pop
movsl
in
in
or
inc
lahf
inc
inc
iret
dec
mov
cmpsb
aaa
aaa
pop
or
lea
popa
mov
pop
xchg
xchg
dec
pop
inc
and
ret
out
mov
or
mov
popa
jne
into
inc
lret
xchg
mov
bound
mov
inc
fcmovne
cwtl
jne
movb
jnp
sub
call
dec
in
mov
and
ficoml
insl
xor
out
ljmp
xor
cmc
test
scas
cmc
sub
testb
pusha
xor
mov
xchg
popf
sbb
add
inc
mov
cmp
fisttpl
xchg
push
in
adc
and
pusha
inc
fwait
jae
arpl
mov
insb
pop
adc
mov
in
mov
mov
outsl
clc
push
mov
stos
xchg
icebp
hlt
cmc
loope
add
xchg
pop
xor
lcall
fcmovnu
call
loopne
ficoms
inc
enter
fiaddl
cmp
lds
and
or
fsubr
pop
lods
scas
sub
rclb
or
push
int
movsb
lds
sbb
pop
sbb
inc
jl
nop
lahf
add
call
es
cmp
xor
inc
inc
inc
xchg
pop
lahf
pop
jbe
pop
dec
fwait
into
shll
addr16
leave
add
lock
dec
hlt
jmp
mov
adc
dec
add
adcl
xchg
or
test
push
scas
mov
lret
pop
inc
adc
loop
ret
inc
push
mov
inc
ficoml
pop
repz
dec
push
aas
cmp
cmp
call
fcmovb
cmp
adc
std
outsb
mov
or
out
cli
pop
mov
push
call
scas
enter
push
pop
std
pop
fdivrs
dec
xor
mov
pop
mov
add
mov
and
adcb
shl
mov
lret
cld
test
sub
jge
mov
test
dec
popa
enter
pop
mov
and
aam
inc
stos
mov
pushf
ret
insl
or
rorb
ljmp
lods
cmp
inc
xchg
pop
add
cmpsb
pop
in
iret
movsb
js
mov
clc
pusha
sbb
add
stc
imul
imul
dec
fwait
inc
cmp
dec
jecxz
push
sti
sbb
sbb
jo
pop
ret
aas
and
cld
pop
fcoms
sub
ljmp
cmp
ja
mov
jl
pop
xor
lods
sub
push
rclb
ret
into
mov
dec
test
dec
mov
cmp
cwtl
add
sbb
dec
xchg
push
jo
outsl
repnz
loopne
dec
inc
popa
dec
push
fistpll
add
inc
pop
sub
movsb
sub
ljmp
je
jnp
bound
jb
pop
mov
cmpsb
dec
fcmovnu
ficompl
cmp
int3
pop
sbbl
dec
subb
mov
push
push
jno
stc
xor
rol
int3
mov
xchg
popf
add
mov
lret
sbb
xor
mov
js
mov
test
mov
pop
loopne
cmp
stc
push
callw
out
imul
xlat
mov
sbbb
cmp
lret
ljmp
inc
in
or
pop
inc
lods
clc
test
jmp
int3
andps
imul
scas
aaa
jno
adcl
inc
in
mov
xchg
mov
int3
add
or
sub
pop
cs
dec
adc
lahf
cld
mov
add
orl
mov
out
or
sbbb
shll
in
stc
sbb
mov
adc
inc
pop
xchg
dec
lods
test
orb
cmpl
jg
dec
loope
cmp
call
rcll
loopne
test
xorl
or
dec
hlt
rcll
stos
ret
push
pusha
jae
scas
adc
clc
iret
jae
dec
push
test
fsub
xchg
ret
mov
dec
jo
loope
sub
xchg
daa
pop
dec
add
mov
mov
and
aaa
xor
imul
sahf
ss
fsubl
jp
mov
mov
push
push
loop
je
push
jg
dec
test
rcrl
or
push
inc
mov
je
movsl
sub
in
sarb
test
pop
pop
or
fstps
stc
and
loop
pushf
imul
or
mov
and
fsubs
sub
mov
mov
xchg
add
and
test
sub
cmp
pusha
dec
mov
ljmp
jecxz
cmp
loope
mov
add
pop
stos
or
jl
addr16
pop
or
rep
push
add
inc
xor
shl
pop
inc
icebp
clc
inc
pop
push
adc
pop
mov
dec
shl
mov
mov
push
testb
jnp
pop
push
xor
leave
push
mov
rcrb
mov
sub
push
adc
idiv
push
push
fisubrs
add
scas
daa
cmp
lret
push
in
stos
and
dec
out
cmpsl
xor
popa
lods
test
push
pop
adc
adc
pop
jns
mov
scas
dec
imul
pop
push
lds
sbb
mov
inc
cmp
cmpsl
into
scas
shlb
jecxz
add
add
out
push
push
loop
jmp
les
mov
pushf
loopne
or
dec
push
push
movsl
lret
fstpt
jne
xchg
dec
pop
jns
arpl
add
sahf
adc
mov
movsb
jmp
repz
sbb
xlat
scas
loope
filds
lahf
mov
mov
fadds
push
mov
lahf
mov
dec
jl
add
pop
or
movsl
test
shrb
add
xchg
inc
and
cltd
inc
loope
push
je
movsb
fdivs
je
sub
cmc
daa
cmp
sbb
test
pop
cmpsl
ret
push
daa
pop
lcall
pusha
cmpsb
push
test
jb
inc
mov
sub
or
push
mov
push
pop
sbb
loopne
data16
ficoml
mov
cmpb
arpl
cmpsb
jb
adc
and
insb
rorb
ret
push
subb
push
mov
pop
jle
add
repnz
cmp
or
fldenv
jecxz
frstor
loopne
leave
jne
push
cmc
lods
sub
mov
or
int3
fisttpll
sub
dec
aas
adc
cld
fstpl
mov
stos
js
push
mov
std
scas
stc
jnp
mov
data16
sub
enter
pop
or
loope
mov
es
jae
dec
stc
pusha
stos
mov
inc
enter
dec
or
lahf
mov
cmpsb
sahf
lds
inc
jb
mov
inc
cmovne
sar
pop
inc
push
ret
loop
rorb
lret
cmp
pop
aaa
inc
push
addr16
push
pop
inc
dec
je
mov
sbb
jg
or
push
arpl
rcrb
pop
adc
xchg
lcall
addr16
sti
fs
jmp
ds
call
lret
mov
xchg
adc
or
lea
xor
lds
loop
dec
std
shll
gs
cmp
mov
sbb
les
xor
mov
cmp
jle
push
adc
out
cmp
or
pop
sub
inc
out
dec
aas
pop
insb
decl
sub
dec
xchg
mov
fsubrs
and
mov
popa
das
movsl
mov
mov
test
dec
neg
xor
stos
cmp
pop
inc
push
loop
daa
lcall
jmp
test
pop
inc
pop
movb
cmp
leave
xchg
fiaddl
daa
out
jne
inc
in
hlt
jg
jle
test
cmc
outsl
rcl
push
xor
pop
add
push
js
jmp
fbstp
dec
jge
mov
pop
leave
pop
lcall
mov
pop
fisttpll
xchg
push
or
pop
bnd
adc
jmp
fsts
ret
and
dec
out
mov
popa
mov
roll
push
cld
movsl
pop
or
vpmaddwd
push
rcl
dec
mov
cld
dec
sbb
insl
adc
push
or
lods
test
cltd
or
xchg
ret
mov
mov
jnp
sub
data16
xchg
dec
mov
mov
mov
lds
fidivrl
cld
daa
xor
sbb
and
jb
sub
sub
pushf
inc
xchg
inc
cmpsb
fiaddl
call
and
popf
push
sti
mov
mov
ret
mov
mov
es
xchg
cs
mov
adc
andl
pop
loop
push
xor
out
inc
imul
inc
lret
bound
cmp
inc
dec
mov
mov
push
sti
pop
callw
jp
push
lret
or
lcall
fnstenv
sub
xor
ficoml
dec
cmp
in
pop
push
dec
loopne
inc
and
sub
idiv
pop
rcl
daa
imul
inc
pop
adc
mov
push
push
ds
cmp
les
shll
mov
fcmovnu
or
push
imul
mov
addb
mov
mov
and
je
cmc
push
popa
mov
pop
pop
lods
mov
inc
gs
or
mov
cmp
mov
ljmp
and
rorl
add
and
jmp
xor
sbb
mov
enter
cmp
adc
cmp
out
cmpsb
ds
jo
shl
daa
stos
or
or
daa
inc
sbb
pop
mov
loop
add
test
sbb
and
sub
push
repz
pop
fs
dec
out
cmc
adc
dec
xor
cld
mov
inc
divl
dec
das
mov
aam
imul
sbb
ss
pop
aam
inc
add
xor
rorl
leave
push
cmp
imul
push
xor
dec
or
jecxz
inc
pop
pop
sbb
cs
or
shl
jae
cs
test
test
sub
cli
pop
pop
fidivl
sarb
repz
enter
js
andb
mov
or
test
dec
arpl
imul
push
push
inc
or
adc
pop
xor
jge
jb
sub
sub
scas
xchg
mov
mov
sbbb
imul
aam
call
stos
xor
sub
sbb
jne
inc
cs
lahf
jne
mov
shlb
inc
sbb
push
jmp
stc
pop
mov
sbb
and
dec
inc
ja
sub
and
sbb
jae
and
inc
add
arpl
pusha
scas
ret
sub
mov
lahf
in
dec
pop
mov
cmp
sbb
mov
arpl
push
shrl
or
add
outsb
pop
or
jecxz
and
popf
mov
push
rcll
sbbw
dec
sub
cmp
mov
in
mov
test
jnp
mov
rorb
insb
and
push
js
mov
adc
sbb
les
inc
sbb
ja
jmp
xchg
mov
or
jb
lods
mov
mov
adc
dec
imul
aas
psubusw
dec
cli
xchg
adc
pop
adc
xchg
insl
mov
adc
mov
xor
and
popf
dec
sub
mov
shll
mov
insl
fwait
out
mov
push
dec
mov
cmpsl
push
fbld
dec
sbb
cmpl
inc
dec
loopne
mov
push
push
arpl
and
lea
in
pop
pop
adc
xor
push
cmp
push
loopne
pop
mov
addr16
cmc
cs
mov
mov
out
xor
jecxz
jg
add
or
jnp
stos
stc
lock
ret
and
ljmp
cmc
xor
jl
and
dec
push
rcr
mov
mov
push
inc
jg
enter
repz
push
dec
cmp
and
sub
add
push
mov
dec
lock
mov
jecxz
jg
mov
pop
xchg
rcll
inc
cli
pop
sbb
pushf
lret
scas
sub
jecxz
or
pop
push
popf
mov
test
push
adc
data16
inc
imul
add
mov
addb
mov
push
ret
push
mov
ja
mov
sbb
jle
outsl
pop
push
mov
add
inc
mov
lretw
mov
xor
sub
jne
pop
insl
ret
add
leave
xor
xor
xchg
mov
fsubl
mov
cmp
cmpsb
sti
xor
stc
ljmp
lods
popa
add
adc
cmp
xchg
ss
lea
lahf
loopne
xchg
or
mov
outsb
cmp
pop
pop
mov
dec
jp
lret
imul
outsl
in
pop
push
pop
mov
pop
xor
add
cmp
dec
push
push
and
ret
shrb
ret
push
mov
adc
push
mov
inc
push
and
sti
inc
outsl
ret
inc
jg
xor
cmpb
imul
or
pop
pushf
cmp
nop
mov
mov
shrl
in
pushf
add
mov
mov
mov
mov
fisubs
or
mov
popf
add
in
xchg
sbb
push
inc
sub
sbb
sarb
fstpl
cmp
jbe
movsl
sbb
cli
mov
xor
outsl
call
dec
subl
inc
dec
mov
aaa
and
stc
lods
inc
pop
fadds
inc
and
ja
outsl
stc
inc
push
mov
add
push
cmpsl
arpl
adc
stc
popa
into
xchg
pop
loope
fcompl
jge
jl
repz
push
fwait
repnz
cwtl
int
xchg
jp
add
mov
sub
pop
iret
pop
pushf
test
shlb
mov
or
push
cmp
mov
lds
pusha
out
into
stos
stc
mov
pop
call
pop
gs
and
outsl
pushf
into
jae
xor
cwtl
mov
or
mov
pop
cli
cli
mov
push
test
xchg
in
xchg
in
or
jae
ret
je
test
jmp
fisubrl
mov
jb
sbbl
in
xor
sarl
xchg
or
pop
mov
dec
mov
cmp
call
jge
ss
cs
int
add
inc
inc
mov
rolb
ret
push
pop
mov
jnp
adc
pop
mov
fisttpl
pop
mov
push
inc
test
cmp
ss
or
sub
das
jecxz
cltd
fmulp
pop
add
ficompl
lcall
out
pop
popa
add
pop
or
mov
pop
and
push
pop
cli
xor
jp
adc
ret
sbb
dec
and
in
sub
fnstenv
int
inc
jae
fs
push
fstps
fwait
add
cli
cltd
pop
add
xor
pop
out
adc
sub
jge
insb
jnp
xor
pop
xchg
mov
inc
and
imulb
daa
test
and
sub
in
lea
repnz
imul
or
xchg
fwait
pop
dec
out
pop
js
mov
aad
movsl
adc
cltd
aad
pop
jns
cli
mov
mov
cmp
jecxz
pop
mov
fadd
push
cmpsl
dec
popf
push
inc
or
sbb
dec
fisttpl
aaa
dec
xchg
pop
repnz
sarb
loop
daa
pop
sub
rorl
jmp
sarl
push
or
cmp
pop
mull
popa
aad
mov
adc
loope
cmc
inc
add
sbb
outsl
lods
shll
daa
rcrl
pop
enter
repz
shl
mov
push
rcrl
mov
fisubl
iret
cmp
push
fidivl
popa
mov
gs
shll
cmpsl
xorb
ds
stc
mov
mov
int3
inc
movsb
scas
and
push
dec
cli
in
cmp
es
ret
sub
in
leave
push
fiaddl
push
fstpl
leave
push
fidivrl
adc
hlt
inc
push
push
push
xor
push
call
jecxz
push
stc
fistpll
imul
lret
xchg
xor
jnp
cmp
in
cli
icebp
leave
fsub
pop
pop
inc
inc
jecxz
cwtl
enter
sub
mov
adc
and
cli
add
add
pop
or
cmc
fidivrl
sub
dec
imul
aad
jg
sub
push
sahf
imul
push
sbb
pop
add
sub
or
nop
imul
dec
pop
addb
std
lret
int3
push
xchg
jl
sbb
aaa
pushf
mul
int3
out
push
in
pop
out
inc
jnp
in
enter
enter
jge
ret
xor
add
xor
sub
sbb
sub
jbe
mov
or
mov
fstpl
push
imul
mov
inc
icebp
mov
pop
add
or
mov
cmp
mov
lods
fdivr
push
mov
in
test
jmp
xorb
imul
insl
sbb
mov
pop
fistpll
mov
pop
xor
dec
dec
test
fstpt
stos
or
cmp
sub
inc
daa
dec
pop
jecxz
or
aam
jp
addr16
pop
xor
mov
sub
dec
loopne
fs
add
or
leave
and
xor
outsl
push
pop
int
adc
fs
bnd
dec
jae
fcoms
mov
inc
sbb
stc
mov
adc
push
in
push
rclb
daa
in
pop
push
out
add
addl
nop
sahf
test
mov
subl
pop
push
mov
aaa
imul
cmp
xchg
inc
inc
enter
push
int
fistpll
mov
inc
sub
xchg
mov
cmc
fcomps
inc
sarl
pop
repz
cmp
std
push
int3
stos
mov
das
test
dec
add
adc
sub
push
pop
mov
pop
lret
add
xor
xchg
inc
rcll
and
xchg
mov
xchg
data16
cmp
and
pop
mov
rcrb
leave
dec
pop
dec
jno
hlt
jmp
inc
in
mov
xchg
sbb
mov
push
fprem
mov
daa
stc
lahf
lret
pop
inc
push
bound
push
dec
pop
ljmp
sbb
pop
push
out
aaa
cli
inc
xchg
cmp
cmpsb
inc
pop
pop
mov
cwtl
pop
movsl
add
pop
mov
dec
aam
or
stos
lcall
imul
add
sub
inc
jnp
ffreep
fimuls
popa
inc
dec
in
xor
sti
lea
mov
popa
dec
repnz
or
xor
adc
fwait
ret
push
and
pop
rcrl
adc
adc
xor
mov
mov
mov
aaa
subl
or
dec
fisubs
jecxz
xor
out
mov
mov
aaa
pop
stc
fcmove
pop
daa
daa
rcr
pop
lahf
and
or
or
inc
enter
sbb
mov
insl
cmp
jno
push
add
incl
rcll
mulb
pop
test
stos
push
push
call
call
aas
test
cli
cmpsb
xor
pop
adc
sbb
xor
mov
shrl
push
mov
xor
cmovp
adc
add
addr16
lret
inc
out
xchg
jmp
jle
inc
push
aas
leave
or
jg
fmull
dec
mov
mov
inc
inc
test
enter
loope
or
sarl
pop
adc
mov
pop
or
adc
jmp
out
mov
xchg
mov
xchg
rcll
xchg
fldl
ret
imul
test
xor
push
mov
push
sar
movsl
fldt
adc
mov
pop
not
jno
jp
fsubrl
or
jg
movsb
test
dec
inc
dec
repnz
add
sbb
test
and
ret
js
cld
dec
and
aaa
add
push
mov
test
or
mov
mov
dec
int
bound
push
stos
out
xor
mov
cltd
cmp
or
fisttpl
cmc
xchg
lods
xor
aad
cmpsb
stos
jmp
dec
or
push
movsl
shlb
jae
mov
jmp
ja
mov
mov
imul
hlt
dec
sub
jnp
mov
pop
stos
lods
lcall
mov
add
lahf
cwtl
out
cld
xchg
aaa
jne
test
scas
mov
sbb
sub
enter
cmp
in
stos
cmpsb
inc
int
xor
mov
mov
xor
mov
sahf
push
push
repz
xor
pusha
add
imul
xchg
and
lock
dec
lahf
mov
push
shrb
pop
mov
and
fcoms
dec
add
gs
inc
inc
dec
or
mov
add
jmp
pop
inc
mov
orl
jb
cmpsb
jnp
bound
sbbb
mov
adc
cli
jl
mov
mov
dec
mov
pop
lea
nop
jmp
test
dec
movsl
mov
outsb
neg
out
mov
sar
push
cmp
ret
adc
rolb
add
pop
pop
dec
inc
cltd
and
pop
bound
icebp
in
fistps
inc
push
add
cmp
and
pop
ljmp
cmp
stc
lods
push
or
mov
les
lods
ja
out
push
add
lcall
sti
add
leave
incb
shrl
sub
adc
fstpl
dec
test
mov
jmp
adcb
mov
movsbl
hlt
pop
fisttps
mov
dec
xchg
inc
xchg
cmp
inc
popf
call
jmp
movsl
jg
adc
add
outsl
into
inc
je
sub
shlb
sub
push
movb
mov
shll
cs
nop
test
inc
push
push
pop
aaa
inc
nop
jmp
dec
push
fmulp
inc
push
pop
xchg
xchg
inc
pop
inc
dec
ss
aad
xchg
cmpsl
inc
inc
enter
cli
fiaddl
inc
sti
or
pop
push
dec
lret
inc
cmpsb
cmpb
jbe
sarb
add
pop
test
sbb
inc
pop
fcomps
es
dec
aad
call
dec
add
cmpsl
daa
leave
dec
inc
mov
push
inc
mov
inc
pop
dec
mov
mov
jb
pop
insl
cmp
shll
push
out
xchg
xor
and
cmp
imul
repnz
rolb
inc
inc
enter
or
dec
dec
inc
sbb
addb
sub
or
fsubrs
aaa
loopne
xor
pop
dec
ret
int
cmp
daa
xchg
pop
fstl
enter
sub
mov
push
dec
lods
bound
inc
inc
and
dec
daa
popl
dec
push
mov
xchg
mov
or
cmp
push
mov
push
dec
daa
xor
roll
clc
xor
incl
jb
xchg
sti
cmp
aas
push
jbe
inc
pop
aaa
cmpsl
jg
pop
push
dec
movsl
pop
roll
daa
test
mov
push
dec
into
call
inc
std
cld
sbb
dec
mov
add
dec
jno
xor
xchg
sub
pusha
mov
ret
ret
add
inc
add
daa
inc
dec
cltd
mov
into
xor
and
fiaddl
popf
int3
or
pop
cmpl
push
ret
lret
or
push
aas
xchg
lret
cmp
inc
mov
dec
ret
add
or
pop
sbb
cmpsb
dec
pop
add
inc
fiaddl
decb
mov
pop
push
daa
inc
loopne
jmp
stc
xadd
jmp
pop
aad
call
sub
push
mov
adc
push
into
ret
sub
adc
ja
imul
mov
push
in
or
or
test
adc
dec
sbbb
stos
mov
addr16
and
inc
push
aaa
push
inc
or
dec
xchg
movsl
test
sbb
out
inc
aad
mov
or
aas
jmp
and
sub
pop
sub
mov
xor
lret
daa
xchg
xchg
mov
fs
xrelease
inc
lret
movsl
dec
push
pop
aaa
dec
push
dec
addl
gs
dec
dec
xor
pop
adc
pushf
daa
push
enter
lret
rolb
fwait
sub
inc
gs
pop
pop
and
pop
xchg
xchg
out
jmp
push
inc
jno
push
ljmp
fstpl
ljmp
popf
adc
xorl
push
pop
inc
hlt
pop
add
add
pop
pop
add
push
mov
push
push
and
push
jb
lret
inc
inc
jge,pt
and
sub
mov
jle
mov
lods
dec
push
sbb
ret
xchg
mov
enter
sbb
jecxz
dec
inc
ret
aad
cmp
insb
gs
daa
fwait
loopne
inc
das
fmull
pop
pop
ffreep
ficoml
ss
inc
mov
dec
dec
ret
shlb
cmp
dec
or
and
call
add
inc
and
inc
out
xor
pop
push
fiaddl
pop
dec
mov
mov
pop
and
or
jmp
lds
push
jp
add
pop
xchg
inc
push
sub
daa
pusha
xchg
inc
pop
xchg
add
sarb
push
mov
sub
cmp
cmpsb
inc
dec
inc
mov
lea
faddl
and
push
dec
xchg
aad
cmp
xor
inc
xchg
add
pop
cmpsb
jb
dec
dec
inc
dec
cltd
int
fiaddl
dec
je
popf
adc
cmpl
pop
push
fcoms
inc
pop
ss
imul
daa
pop
inc
inc
add
xchg
pop
mov
lds
push
aad
orl
pop
push
dec
add
mov
dec
sbb
pop
enter
aad
inc
pop
mov
dec
pop
ret
pop
inc
mov
dec
dec
dec
push
ja
inc
es
aad
or
ljmp
add
add
pop
loop
icebp
into
fimull
add
dec
xorl
jmp
fxam
aas
ja
enter
push
dec
mov
loop
ret
flds
inc
pop
dec
xor
nop
nop
push
dec
pop
and
jns
pushl
dec
out
push
dec
fidivrs
popa
xchg
dec
jmp
inc
leave
mov
mov
jmp
cwtl
adc
mov
outsb
push
pop
cmp
popa
push
mov
mov
sub
jns
iret
dec
cwtl
add
outsb
dec
pop
mov
fidivs
or
inc
dec
mov
subb
dec
push
pop
inc
sub
or
mov
sub
push
pop
pop
sub
or
aad
ficoml
push
dec
lret
and
xchg
inc
mov
xor
iret
pop
icebp
and
aad
pop
leave
or
dec
inc
pop
inc
sub
or
rorl
aas
sub
dec
repnz
xlat
pop
push
enter
dec
jmp
aas
ljmp
fiaddl
les
pop
fimull
les
roll
rolb
dec
in
inc
xor
cltd
mov
push
icebp
inc
sub
incb
dec
inc
repz
mov
scas
or
mov
shlb
mov
enter
pushf
inc
push
dec
ret
out
push
inc
push
mov
les
pop
inc
sub
or
mov
sub
pop
pop
pop
sub
ficoms
push
dec
iret
fs
inc
mov
xor
pop
iret
pop
cmc
and
aad
cmp
xchg
inc
inc
fisubrl
or
shll
mov
fmull
mov
and
lret
out
jmp
inc
incl
inc
mov
pop
decl
cmp
push
dec
xlat
mov
sub
shlb
mov
sub
sub
rcrl
popa
dec
dec
jb
adc
pop
dec
pop
sarl
lock
dec
lahf
arpl
xchg
sub
in
bound
push
dec
push
sub
add
push
mov
mov
pop
and
es
dec
sub
enter
daa
xchg
add
sub
dec
xchg
add
inc
shrb
iret
push
dec
cmp
das
xor
push
dec
and
add
inc
dec
inc
xchg
pop
xorl
int
fiaddl
pop
daa
mov
jae
pop
dec
lea
and
lret
mov
push
mov
js
cs
pop
jae
aad
mov
nop
cmpsl
mov
mov
inc
sbb
scas
mov
sbb
call
lea
mov
cmp
je
arpl
jecxz
in
ret
aad
in
push
scas
fsub
xchg
test
cmp
into
stos
cmp
jp
fildll
outsl
xchg
dec
jo
dec
jno
mov
data16
or
lods
sub
sbb
jns
jmp
mov
addl
pop
inc
fimuls
add
xlat
dec
add
hlt
push
or
sbb
es
daa
cltd
shrb
push
dec
sub
and
daa
cmp
imul
add
inc
dec
out
int
aas
dec
int
push
scas
test
add
adc
sub
fldcw
jmp
shl
xor
dec
fstpt
fcoms
add
inc
gs
xor
icebp
stos
dec
and
out
pushf
push
push
enter
adc
cmp
and
pop
mov
inc
dec
push
leave
or
dec
jmp
mov
inc
jo
inc
inc
sub
dec
push
ret
xchg
adc
jg
sbb
or
mov
jmp
mov
mov
out
xchg
orb
inc
adc
pop
and
inc
sarl
xor
sahf
dec
inc
sub
xor
aas
cmp
dec
mov
out
cmp
daa
mov
cmp
bound
xchg
ret
repnz
mov
inc
inc
inc
dec
add
sub
aas
daa
xchg
push
sub
cmp
cltd
mov
enter
daa
popf
sbb
inc
xor
sbb
push
jo
mov
mov
dec
mov
push
subl
xchg
push
sub
test
stos
adc
aas
jmp
daa
sti
lds
jns
je
nop
daa
daa
mov
jmp
xor
cmpsb
rcll
pop
shrb
ret
ficompl
pop
inc
add
dec
rolb
dec
dec
fisubl
in
push
adc
subl
lcall
xchg
out
cwtl
lret
adc
or
inc
inc
sub
dec
sbb
adc
scas
xor
call
dec
fadds
ljmp
andl
add
je
mov
jmp
push
dec
dec
add
and
jmp
repnz
inc
cld
push
hlt
cmp
fisubl
fisubrl
enter
jno
mov
inc
pop
ret
fsubr
mov
inc
xchg
cmp
loop
dec
in
mov
stc
pop
int
xchg
orps
add
mov
icebp
pop
mov
add
pop
cmpl
push
push
ss
mov
push
sub
add
shll
jnp
mov
insb
dec
push
push
aad
pop
dec
lret
dec
jle
pop
inc
aaa
sub
stos
push
xchg
mov
pop
and
dec
es
mov
ret
leave
push
pop
add
or
sub
add
mov
cmp
push
je
push
add
push
dec
inc
dec
ret
in
into
xchg
sub
inc
push
daa
xchg
cmp
aas
dec
mov
inc
push
fidivrl
adc
aas
sbb
int
cmpsb
mov
mov
dec
push
das
test
lret
in
fsts
pop
dec
ficomps
push
inc
inc
xchg
dec
sub
mov
push
add
and
sub
inc
dec
inc
enter
inc
nop
inc
stos
dec
push
inc
cs
xchg
incb
pop
out
push
outsl
push
push
xchg
pop
push
push
sbb
xchg
inc
mov
mov
add
inc
fwait
gs
pop
pop
sbb
pop
jns
lret
pop
js
fldcw
push
dec
add
add
aam
inc
ret
mov
mov
pop
pop
sbb
arpl
rorb
inc
daa
dec
dec
mov
dec
push
jmp
mov
mov
scas
out
pop
inc
icebp
xchg
pusha
clc
dec
pop
sbb
inc
adcb
aas
xor
jmp
repz
jg
arpl
lods
mov
and
jmp
pop
stc
and
cmpsb
add
adc
jne
push
daa
lods
andl
mov
and
adc
push
inc
sub
daa
xchg
ds
inc
sub
in
es
inc
pop
pop
pop
inc
mov
push
dec
repz
jae
iret
and
push
fisubrs
dec
dec
pop
sub
mov
mov
fldl
fiaddl
push
daa
test
inc
dec
dec
fiaddl
mov
or
jne
or
pop
lea
pop
inc
sbbl
mov
pop
fiaddl
xchg
lock
dec
pop
jbe
fcmovbe
pop
push
sub
movb
sub
daa
jmp
sub
or
lock
inc
ret
fsubrs
mov
sbb
leave
jmp
jbe
inc
fisubrl
or
push
fisubl
gs
dec
lret
pop
int
inc
push
pop
sub
ret
push
sub
leave
int
loop
sub
daa
mov
ficomps
ficoms
ja
iret
dec
out
fiaddl
dec
mov
xor
rcr
test
push
roll
insb
xchg
sub
cmpsb
lahf
add
ret
add
pop
sbb
ret
xchg
mov
push
mov
push
push
and
mov
stos
je
or
mov
iret
mov
xchg
push
and
lea
mov
jle
push
and
mov
call
inc
stos
mov
xchg
or
inc
mov
out
sub
sub
jecxz
sbb
in
andnps
aaa
mov
data16
pop
addr16
jbe
in
nop
mov
dec
sub
arpl
roll
enter
rcll
xor
or
push
ret
add
dec
sarl
loopne
pop
pop
push
mov
ljmp
mov
or
dec
dec
inc
aaa
lret
lcall
enter
mov
dec
push
sbb
adc
stos
cmp
int
pop
ficompl
and
repz
pop
das
and
pop
ret
mov
mov
in
daa
in
enter
movsb
cmpsb
sbb
daa
test
jmp
push
inc
add
xor
and
xchg
dec
inc
mov
adc
fwait
adc
push
inc
dec
inc
jg
xchg
dec
mov
cmp
jmp
pop
fiaddl
cmpsb
pop
inc
push
pushf
cmp
bound
cmp
dec
dec
lea
inc
gs
sub
dec
lock
inc
cmp
dec
inc
xchg
je
ret
cltd
push
add
inc
dec
popf
int
fiaddl
push
daa
xorl
loop
adc
mov
push
daa
inc
shrb
lea
add
xchg
jne
dec
inc
fisubrl
push
lret
inc
push
mov
jns
sub
push
jmp
dec
cmp
dec
xor
popf
pop
push
pop
decl
pop
inc
mov
loope
imul
dec
push
sbb
pop
jle
ret
mov
mov
cmp
fidivrl
out
loope
iret
sub
inc
or
inc
ss
and
mov
jmp
or
and
cmp
and
mov
repz
xor
cmpsl
mov
outsb
pop
or
mov
adc
fldcw
pusha
fidivrl
movsl
inc
pop
or
sbb
inc
lret
sub
daa
pop
or
push
adc
inc
mov
jg
lds
pop
push
pop
aaa
inc
orl
push
or
adc
mov
ds
sbb
inc
xor
or
pop
fmuls
dec
dec
dec
pop
xchg
jmp
inc
daa
mov
fistpl
add
sub
pop
dec
dec
lret
mov
inc
adc
lds
add
daa
inc
imul
in
sub
jmp
or
fidivrl
mov
aas
mov
inc
inc
sub
dec
pop
and
inc
pop
in
fiaddl
repz
jo
mov
addb
inc
inc
push
inc
mov
mov
inc
rolb
push
dec
pop
fiaddl
pop
out
mov
sub
xchg
mov
sub
push
cmp
imul
inc
pop
dec
rorb
pop
cli
lret
pop
leave
dec
sub
push
inc
push
xchg
push
inc
inc
add
imul
ds
pop
push
add
inc
dec
pop
fcmovb
mov
dec
fsubl
ss
dec
inc
sub
mov
dec
loop
cmovnp
stc
mov
jne
call
pop
enter
aad
sbb
cmpsb
inc
mov
mov
mov
lret
inc
dec
enter
mov
add
add
mov
sti
mov
cmp
sub
aas
add
movsl
test
pop
inc
jmp
mov
jp
inc
push
add
cs
cwtl
xor
or
out
pop
inc
pop
dec
clc
push
sbb
pop
xchg
add
or
rcll
dec
ficoms
push
push
sub
fcomps
inc
dec
push
pop
addb
dec
and
push
dec
pop
pop
mov
inc
pop
dec
fidivs
and
jbe
xchg
push
inc
sub
daa
nop
pop
inc
dec
push
sbb
or
pop
mov
fs
pop
inc
inc
ret
and
xor
dec
fwait
inc
and
inc
dec
cmp
push
inc
ret
andl
xchg
sub
pop
dec
mov
cmovs
add
mov
daa
mov
adc
test
imul
test
and
add
inc
dec
dec
outsl
pop
cwtl
mov
dec
dec
dec
inc
mov
inc
pop
inc
pop
pop
ret
inc
xchg
inc
add
pop
dec
test
cmp
cwtl
add
pop
dec
stos
loop
dec
stc
mov
cmp
mov
mov
pop
push
dec
dec
mul
shrl
dec
pop
push
std
inc
cmp
sbb
lret
mov
cmc
pop
pop
mov
sbb
inc
jl
inc
pop
pop
fldl
imul
fwait
lret
fcomps
push
mov
rcll
cmp
test
and
ret
popa
gs
dec
adc
inc
dec
inc
fimull
add
inc
dec
pop
fisttpll
lcall
pop
inc
xchg
mov
mov
cltd
roll
nop
jmp
push
inc
daa
popf
sbb
pop
dec
pop
mov
dec
inc
push
sub
pop
mov
cmp
shr
pop
cmp
pop
stos
cmp
cmp
lods
pop
dec
test
add
pop
xchg
dec
or
int3
test
mov
dec
fcoms
daa
sbb
push
pop
ss
aam
push
inc
inc
ret
mov
movsb
inc
pop
sub
negb
mov
pop
jne
or
sbb
ss
test
aaa
or
or
ret
push
testb
adc
xchg
int3
pop
push
stos
or
and
pop
test
or
sbb
xchg
pop
mov
xor
in
mov
lds
aas
xchg
dec
dec
inc
pop
mov
add
mov
xchg
gs
aaa
and
les
mov
in
mov
inc
inc
add
xchg
sbb
dec
push
inc
aad
dec
dec
ret
aaa
inc
xchg
jmp
push
mov
jmp
adc
sub
loope
lds
loop
xchg
dec
ret
dec
scas
pop
in
push
inc
pop
inc
mov
mov
adc
inc
dec
mov
or
sub
daa
sbb
iret
mov
push
daa
push
mov
fimuls
negb
dec
mov
cmp
cmp
ret
push
dec
pop
cltd
sub
fmuls
daa
sahf
push
dec
enter
inc
outsb
daa
cmpl
lds
pusha
inc
pop
out
out
subl
inc
std
imul
sub
jbe
push
add
aaa
daa
dec
dec
jno
mov
inc
adc
sarb
stc
push
sub
ret
mov
call
das
dec
ret
xor
jmp
cltd
sub
rorb
push
dec
fwait
cltd
mov
aas
pop
fisubl
xchg
out
adc
dec
aas
into
jo
xchg
sarl
test
int3
sub
pop
test
pop
lret
dec
pop
pop
sub
das
mov
jo
dec
and
mov
sub
inc
in
aaa
adc
daa
xchg
sbb
dec
in
and
inc
xchg
cmpsl
pop
or
ret
adcb
mov
in
out
cmp
in
inc
dec
ret
push
jl
aam
push
pop
push
sub
aad
inc
fchs
pop
dec
and
add
ret
or
or
ljmp
push
dec
pop
inc
enter
neg
popf
fidivl
and
in
xor
daa
sub
ljmp
dec
lods
daa
fsubl
jo
dec
inc
pop
std
icebp
jmp
int
hlt
ficoml
pop
jne
sub
jp
dec
fwait
pop
push
ret
daa
ffreep
add
push
dec
outsb
xchg
je
xchg
ret
add
pushf
mov
ficomps
pop
inc
sbb
pop
sub
pop
test
xchg
inc
les
es
pop
sbb
lret
dec
loope
leave
and
fisubl
mov
call
pop
dec
lods
pusha
or
pop
add
mov
fiaddl
xchg
ret
or
push
dec
mov
dec
push
lcall
pop
out
cmpsb
mov
adc
inc
mov
dec
mov
es
pop
xchg
inc
int3
faddl
pop
fiaddl
sbb
dec
enter
fnstsw
scas
mov
es
into
sub
push
push
pop
leave
out
dec
push
sbb
pop
and
dec
inc
ret
stc
inc
dec
or
pop
inc
push
enter
cmp
or
fmull
ljmp
ds
sub
ret
dec
pop
mov
je
shlb
inc
adc
cmpsl
jmp
mull
and
or
xchg
or
leave
dec
adc
lds
sub
arpl
add
pop
inc
enter
test
aaa
aam
sar
lret
or
or
push
and
bound
enter
push
mov
in
inc
test
cmpl
dec
or
push
pop
fs
dec
inc
or
inc
or
jg
cmpsb
pop
dec
enter
add
aam
mov
ror
inc
stos
jmp
xchg
add
pop
dec
int3
es
pop
add
sub
enter
faddl
pop
pop
dec
pop
imul
enter
in
stc
pop
sbb
addl
rorl
cmpsl
fsubl
cld
cmpsl
dec
inc
lods
pop
push
and
ficomps
out
pop
subl
fstps
test
or
fldcw
enter
adc
sub
cmp
lods
sbb
test
mov
cld
pop
aaa
in
fdivrs
inc
test
jg
fsubs
daa
pop
dec
add
daa
dec
jmp
mov
enter
cmp
pop
ret
xor
pop
pushw
pop
push
dec
daa
jg
dec
insb
cmp
daa
mov
data16
mov
and
decb
dec
adc
mov
call
pop
sub
cmp
test
daa
dec
insb
out
sbb
mov
enter
inc
aaa
enter
pop
xor
push
and
jg
and
fisubs
pop
pop
add
sub
dec
fcoms
pop
inc
sbb
dec
pop
mov
shlb
inc
sub
or
inc
inc
fiaddl
inc
daa
mov
lds
ret
mov
inc
pop
daa
cmp
xchg
or
aad
cltd
out
jge
inc
sub
push
inc
jge
inc
dec
enter
jb
and
sahf
xor
xor
ret
mulb
les
and
fisubrl
dec
leave
xchg
inc
jmp
or
cwtl
dec
mov
popa
xchg
inc
and
dec
and
add
lds
rsm
dec
inc
lret
cmp
enter
enter
or
les
ret
int
popf
dec
push
aaa
enter
sub
fsubrl
sub
testb
daa
dec
cmp
inc
jmp
inc
call
cmp
aaa
dec
push
out
sahf
sub
and
inc
aaa
dec
cmp
daa
fxam
lcall
call
cmp
call
sub
mov
mov
push
incb
addr16
lods
nop
addr16
jl
adc
ljmp
jecxz
ljmp
and
adc
and
mov
dec
xor
cmpsb
imul
pushf
push
mov
or
incl
inc
xchg
rorb
cmp
aam
gs
push
stc
mov
adc
scas
mov
mov
jmp
orb
jecxz
push
cli
outsb
cmpsb
lods
pushf
out
xor
dec
jecxz
mov
and
pop
movsl
sbb
ds
pop
lock
sub
adc
adc
fucomp
enter
cli
jno
enter
pop
scas
jbe
mov
adc
add
gs
insb
pop
dec
outsl
je
data16
arpl
inc
add
sub
pop
xor
dec
loopne
mov
popf
sarb
push
scas
xchg
orb
push
outsl
inc
cmp
mov
push
xchg
out
gs
inc
cmp
mov
lcall
and
repnz
jmp
rcrb
nop
adc
mov
lods
insl
inc
lods
idivb
dec
sbb
jmp
loop
jp
arpl
mov
mov
jp
xor
shrl
ljmp
lds
stos
mov
cmp
pop
gs
fadds
xchg
in
fsub
test
jp
xlat
mov
lods
or
or
adc
cwtl
mov
xor
xor
test
mov
cmp
mov
jno
rol
inc
sarb
xor
jbe
fs
movsl
sub
sbb
mov
cmp
add
cmp
pop
fnstsw
adc
mov
sbb
femms
fstpl
add
adc
mov
push
pushf
pushf
mov
push
pusha
pushf
pushl
ret
not
add
xor
bswap
sar
mov
movb
pusha
pushf
test
pushl
lea
je
bts
jmp
push
adc
push
call
aad
sub
out
mov
inc
pop
xchg
lods
or
mov
addr16
iret
mov
mov
test
incl
js
shlb
int
inc
into
xchg
and
mov
push
jno
push
clc
dec
ret
xchg
xlat
pusha
out
cli
aaa
test
mov
mov
pusha
sub
pusha
stc
pushf
bt
pushl
popl
bt
call
addb
loopne
sbb
sbb
out
aaa
cwtl
lock
xchg
adc
lds
fbstp
xlat
jl
into
daa
enter
popa
mov
xchg
lds
sarl
jl
lret
and
arpl
sub
jnp
aad
cwtl
mov
jmp
mov
mov
aam
sub
insl
cmpsl
pop
mov
mov
add
sti
push
mov
enter
mov
add
pushf
jle
xor
adc
mov
loop
lds
ret
or
lahf
jp,pn
iret
xchg
movsl
jp
popa
xchg
push
jg
int
inc
push
xor
cmp
aam
in
cli
loopne
cmp
fisubrs
cmp
test
popf
out
pop
in
pop
dec
imulb
or
mov
dec
and
inc
popf
incl
mov
insl
or
mov
sti
xor
movsb
ss
sub
and
imul
add
add
mov
enter
jl
xchg
or
xchg
pop
clc
fsubrs
int3
pop
loope
data16
jmp
jnp
arpl
mov
cmp
scas
mov
rorl
jnp
arpl
cwtl
data16
inc
popa
cltd
les
addl
mov
sub
das
xorb
movsb
aaa
sub
jno
or
bound
shll
aam
sub
fisubrl
jmp
ss
push
fcomp
sub
jmp
in
jnp
inc
gs
mov
mov
jae
cld
sub
mov
movsb
push
cwtl
rorl
add
jp
popa
pop
sub
or
dec
push
xchg
lds
mov
mov
pop
lods
insl
mov
pop
out
test
pop
test
insl
testb
jmp
fs
cmp
jns
and
repnz
add
xchg
shrl
xor
mov
roll
decl
add
lods
or
push
les
outsl
cmc
xchg
scas
push
jnp
in
adc
mov
loopne
decb
jae
repnz
add
push
es
push
jns
dec
sbb
jp
pusha
sbb
mov
test
loop
insl
jnp
adc
mov
sub
xor
push
jns
jno
test
xor
inc
jb
cmc
sub
push
jp
push
inc
notl
cmp
outsl
mov
inc
dec
inc
mov
pop
or
inc
cmp
dec
jmp
mov
mov
lods
sbb
and
mov
ret
inc
xor
inc
stos
out
add
lahf
aaa
fwait
shll
scas
or
mov
test
mov
test
sbb
nop
pop
and
pop
sub
rol
test
not
bt
movb
sub
bt
clc
cmp
bt
pushw
popfw
pushf
call
xor
lea
jmp
push
pushf
pusha
lea
jae
stc
cmp
pusha
lea
ja
setle
push
pushl
pusha
inc
setnp
inc
add
add
xor
sbb
xchg
jmp
mov
push
lea
call
push
call
stc
add
push
pushf
pushl
mov
lea
jmp
jmp
cmpb
pushf
pushf
pusha
pushf
lea
jne
not
shr
bt
mov
cmp
stc
add
test
bt
jmp
shl
mov
pushl
pushf
jmp
mov
sbb
lods
sub
fmull
lock
shrl
and
in
clc
inc
cltd
mov
out
mov
sbb
js
pop
xchg
cmpsb
cltd
das
mulb
dec
imul
mov
cltd
mov
mov
repz
xchg
mov
and
lds
and
orb
mov
mov
sbb
xlat
int3
inc
fs
mov
push
lock
mov
cmp
mov
push
loope
dec
xor
mov
lret
ja
lock
fisubl
ds
icebp
push
pop
ds
pushf
jns
jle
aas
cmp
add
fdiv
jno
shrl
shll
xchg
ret
fsubrs
sbb
stos
testl
mov
dec
push
daa
jp
pop
adc
fisubrl
in
jno
lcall
add
fsubs
push
lret
xchg
push
and
cmp
sbb
bswap
cmpsl
sbb
mov
arpl
lods
insb
shl
push
aaa
xchg
js
xlat
insb
or
mov
jecxz
add
adc
inc
add
xchg
or
shr
cmp
js
sub
pop
pop
mov
mov
fldt
rcrb
mov
dec
fildl
adc
stc
inc
mov
outsl
xchg
enter
push
cli
adc
push
mov
adc
in
repz
and
movsb
shl
inc
xorl
mov
push
shll
dec
adcb
data16
call
out
mov
bsr
jecxz
lock
orl
dec
push
addr16
mov
shrb
out
and
adc
and
or
adc
adc
lods
es
cmp
and
pop
arpl
lret
jae
out
mov
push
jmp
shlb
sti
loopne
rep
mov
adc
popa
mov
sbb
in
iret
shrb
into
pop
jecxz
aas
jo
fsubrs
in
iret
push
aad
data16
push
pop
adc
rorl
pop
fidivrs
dec
lcall
xlat
pop
fisubrs
insl
or
pop
inc
cmp
or
das
and
sarl
lcall
ror
adc
add
sbb
filds
jnp
pop
into
in
jo
test
mov
aam
pop
lea
pop
and
lea
fnstcw
out
mov
mov
xchg
inc
jmp
aaa
sbb
bnd
jae
fistl
pop
and
and
lods
bnd
std
xchg
xchg
adc
xor
and
jmp
lret
fisttps
xchg
ficoml
aaa
and
rcrb
cmp
jmp
inc
lahf
mov
cmp
jecxz
rolb
in
ret
jge
cld
lds
mov
ret
jno
shll
test
cmp
fsubr
add
pop
and
cmp
inc
push
in
jp
push
jp
pop
inc
add
leave
paddsb
shrl
repnz
cmp
xchg
cmp
or
push
out
outsb
mov
dec
outsb
cmp
rcr
cmp
std
insb
sub
test
fisttps
mov
inc
sub
push
inc
pop
jmp
cli
icebp
sarl
pop
and
daa
stos
test
rolb
sub
fcompl
sub
ljmp
shrb
ss
mov
arpl
mov
mov
and
pop
mov
pop
cmp
mov
mov
xchg
cmpsl
mov
inc
negl
push
fsubl
pop
outsb
xor
xchg
scas
inc
mov
sbb
das
in
clc
jg
jecxz
mov
xor
xchg
jecxz
sbb
testb
xor
cmc
sub
pop
push
rorb
or
pop
in
xor
add
lret
mov
jae
insb
dec
stc
fiaddl
lock
insl
adc
pop
sahf
jecxz
jae
dec
gs
jp
pop
scas
imul
adc
out
out
imul
rcrb
fisubrs
sbb
pushf
sbb
mov
andl
push
dec
leave
sbb
mov
mov
out
test
fdiv
imul
jl
gs
mov
add
les
xchg
push
cmpl
xor
sahf
sub
jg
pop
or
stc
lahf
cmp
adc
inc
fs
or
mov
adc
in
xor
jp
pop
rorb
add
pop
and
dec
jge
rorb
sub
pushf
add
popa
js
xor
mull
mov
lcall
outsl
sbb
mull
inc
jb
lret
popa
stos
test
cmpl
divl
enter
in
scas
pop
xchg
dec
nop
fwait
xor
mov
les
leave
insl
test
pop
inc
xor
mov
flds
mov
inc
seto
sub
pop
add
sbbb
inc
rcrb
fwait
popf
shrb
and
aam
push
rcr
clc
movsb
outsb
jnp
test
add
arpl
test
lods
mov
shrl
cmp
or
push
pop
cltd
adc
pop
test
push
xchg
rorb
xor
jb
movsl
and
and
push
pop
stos
xor
jge
xchg
pushw
mov
pop
or
or
ds
pop
cmp
xor
push
jg
xchg
in
leave
notb
in
lahf
pop
cmp
inc
ja
icebp
mov
loope
mov
inc
ja
pop
push
in
inc
out
xchg
lahf
push
andl
cwtl
cs
int3
int
fsubrl
jmp
adc
dec
and
mov
adc
lock
pop
xor
cmpsb
gs
dec
adc
adc
int
or
stos
adc
in
push
les
jl
jno
mov
sbb
mov
sbb
adc
adc
inc
sbb
stos
adc
mov
fdivrl
rcl
sub
xorl
idivl
stc
mov
lret
xor
insl
orb
les
mov
ljmp
cmp
pop
sub
push
setno
push
das
xlat
cwtl
cmp
xor
jmp
inc
mov
mov
adc
inc
push
jnp
and
lcall
pop
push
mov
movsb
inc
test
cmp
aam
mov
fs
leave
mov
hlt
dec
xchg
insl
shlb
mov
add
in
jecxz
adcl
xor
mov
inc
mov
sbb
pusha
mov
loop
inc
jge
data16
stc
inc
in
lea
mov
sbb
pop
inc
adc
rcl
insl
scas
mov
inc
jp
push
fsts
mov
lea
je
call
jmp
movb
lea
jne
cwtl
movsbl
lea
bswap
movb
movzbw
lea
push
call
mov
insl
or
xchg
subl
pop
test
js
out
fptan
mov
inc
iret
test
repz
or
out
ficompl
sti
inc
sub
mov
mov
sarb
jbe
mov
mov
imul
xchg
and
dec
mov
pop
and
dec
pop
insl
xor
popa
ja
out
mov
mov
mov
pop
in
cmpsb
xor
inc
mov
mov
rcr
lahf
jns
mov
stc
cmp
push
mov
stc
cmc
test
movb
repnz
pushf
jmp
inc
pop
sbb
cmp
xchg
inc
lods
push
inc
lods
push
clc
push
ret
insb
cli
add
push
sbb
in
bound
stos
popa
das
cmp
xor
shrl
lods
push
push
inc
cmp
push
mov
daa
xchg
dec
push
negb
pop
mov
je
sbb
pop
fdivrs
dec
pop
lods
adc
imul
ror
fdivrs
sbb
fisubs
xor
push
and
adc
les
and
mul
popa
mov
mov
sbb
pop
sbb
cli
mov
mov
test
ret
fldenv
mov
mov
lahf
mov
ficompl
lods
push
int3
push
jmp
push
push
and
aas
jp
push
sub
nop
loope
push
and
scas
lcall
add
xlat
jecxz
and
popf
repz
repnz
xchg
and
mov
push
push
dec
lods
mov
fdiv
fs
das
jl
and
nop
repz
scas
jb
sbb
pop
mov
pop
cwtl
negl
ljmp
ds
add
les
pop
call
cmp
push
std
in
xor
les
fdivs
mov
jno
enter
in
push
out
ds
fbld
and
fsubrp
jb
and
push
and
repnz
mov
push
std
test
ljmp
pop
sbb
ja
inc
mov
jecxz
cli
mov
scas
fucomp
jp
push
out
cmp
push
lods
test
clc
imul
out
lahf
shll
jnp
sarb
push
sarb
int
inc
in
cmc
aad
gs
inc
sub
cmp
rclb
push
push
js
mov
xlat
pop
stc
stos
imul
ss
sub
cmpsl
push
add
shlb
jns
pop
xacquire
xor
jns
xchg
movsb
not
dec
inc
mov
lret
xchg
shlb
lea
test
or
jp
adc
xchg
and
call
sub
les
outsl
insl
fs
xor
cs
insb
add
enter
fldcw
in
popf
cwtl
in
mov
in
or
test
leave
cltd
in
sub
mov
in
pop
or
test
cltd
in
test
pop
mov
cmp
sub
enter
in
popf
mov
faddl
add
sbb
stos
and
rcrl
pop
jp
int
mov
ret
cmpsb
cmc
fdivrs
negb
test
mov
jae
addl
out
std
xchg
sbb
inc
pop
imul
mov
fld
pop
push
sahf
add
push
xchg
into
shl
lock
fldenv
dec
sub
cmp
in
orb
xor
cs
and
xor
das
jnp
or
inc
mov
or
push
jae
mov
dec
andl
jle
test
rcr
popf
mov
jl
stos
popa
ret
mov
xchg
jbe
test
inc
outsb
sub
sub
lds
outsb
jnp
or
and
jle
test
pop
les
mov
dec
mov
and
mov
sbb
subl
add
cmp
sub
pushf
mov
movl
call
shr
cmc
cmp
clc
push
cmp
pushf
call
mov
push
movb
inc
stc
pusha
pusha
call
not
jmp
lea
jbe
rcl
bt
ror
sar
mov
sub
add
movsbw
jmp
xchg
clc
call
call
pushf
call
and
push
scas
cltd
push
or
sbb
xor
cmpsl
outsb
imulb
in
mov
int3
jb
jbe
cmp
in
mov
push
imul
add
int3
jo
dec
xchg
mov
fsubl
add
inc
cmp
dec
push
movsl
push
pushf
insb
or
cwtl
pop
movsb
cld
sbb
les
fimuls
cmc
mov
xchg
xor
sbb
jp
push
sbb
add
ss
mov
fadds
sbb
loope
push
dec
mov
negl
cs
jne,pn
and
test
xchg
test
mov
adc
xor
outsl
mov
js
cmp
dec
test
fwait
pop
in
inc
shl
cmp
jp
push
je
pusha
cmpsb
testb
mov
push
and
pop
popa
repz
dec
in
jp
push
test
imul
aad
sub
test
ds
jns
jp
push
lret
inc
out
sbb
sti
fisttpll
fldt
fidivs
mov
bound
rclb
rcl
mov
xor
out
sbb
jbe
mov
shrl
or
pop
stos
jb
jp
dec
jo
fimuls
mov
mov
add
shr
xchg
add
jl
imul
in
jno
inc
sub
out
xchg
and
ljmp
jl
push
lods
arpl
inc
xchg
jae
mov
enter
pop
pusha
inc
push
out
or
into
push
push
mul
cmpsl
jne
scas
push
mov
mov
xor
inc
dec
test
cmp
int
test
fdivl
test
jle
loop
clc
scas
inc
mov
xor
jp
pop
enter
mov
mov
xchg
and
das
mov
dec
sbb
cmpb
outsb
inc
movw
jmp
movzbl
pushf
mov
movsbl
bswap
mov
pushf
mov
call
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
pop
push
mov
shl
not
mov
clc
stc
pushf
mov
mov
ror
mov
clc
jmp
js
and
jmp
sbb
sarl
fiadds
sub
dec
in
and
push
fnstcw
sub
pushf
icebp
scas
add
push
les
xor
sub
in
xor
push
push
popa
es
jecxz
or
out
roll
sub
test
loop
xchg
cld
dec
adc
pusha
jl
int3
jae
gs
inc
dec
psubusb
ja
adc
mov
neg
bt
call
cmp
clc
sub
call
repnz
jge
addr16
inc
and
pusha
xor
stos
push
lds
adc
xchg
mov
rorb
sbb
jl
fdivr
xor
dec
xor
cmpsl
lock
jg
cmpb
pop
xchg
lret
push
xchg
shrl
ds
xchg
xchg
xchg
push
jl
pop
dec
inc
mov
loope
lahf
jbe
cmpsb
mov
orl
inc
adc
jp
dec
pop
pusha
jmp
add
test
push
add
add
add
orl
add
push
push
add
add
add
ds
add
add
add
xor
add
add
add
aaa
push
add
add
add
test
add
add
add
cmp
add
add
add
add
add
ljmp
add
add
add
adc
add
push
aaa
push
add
add
add
je
add
add
mov
push
add
push
add
adc
add
add
add
rcr
inc
push
scas
xor
in
pop
or
shll
jmp
in
sbb
jbe
and
fwait
jecxz
in
loopne
xor
cmp
xor
movsl
jo
push
jno
and
ss
incl
sub
adc
sbb
test
movsb
cmpsb
daa
aaa
add
inc
mov
mov
scas
scas
push
imul
pop
ret
pop
subl
sub
ret
mov
mov
inc
mov
imul
iret
mov
or
popf
adc
cmpxchg
pop
imul
cltd
mov
cmp
mov
rorb
or
xorb
sub
ja
add
mov
movsb
jp
je
or
jge
xchg
fildll
push
and
xchg
cmpsb
jp
dec
xchg
loope
dec
xchg
ja
sbb
push
pop
pop
cwtl
loopne
xor
mov
dec
cli
call
jnp
dec
test
lods
mov
leave
pop
dec
mov
add
jg
enter
andb
push
sbbl
adc
pop
clc
push
mov
xlat
lahf
inc
add
jg
cld
xchg
test
or
fcmove
imull
push
rcr
scas
das
ss
sbb
and
mov
inc
mov
rcr
or
dec
test
xor
xchg
not
push
call
jl
fcomip
pop
sub
out
push
gs
dec
mov
test
cmpsb
mov
mov
dec
xor
or
mov
nop
fisubl
mov
xor
mov
push
adc
ret
mov
adc
jge
adc
scas
push
addl
pop
out
dec
and
insb
shl
test
adc
aas
lods
sbbl
fisubl
mov
rcrl
dec
jp
dec
cmp
popw
mov
mov
mov
pusha
inc
call
call
mov
lods
hlt
add
mov
push
mull
xchg
pusha
cmpsb
xor
ds
mov
pop
adc
sub
adc
jno
adc
mov
dec
adc
xor
push
cli
jns
rcll
out
imul
in
add
mov
adc
cmc
push
cld
adc
fisttps
imul
xor
imul
in
cmp
cmpsl
imul
xor
add
cwtl
jo
mov
cli
dec
sbb
jmp
cmp
pop
movsl
jmp
push
popa
jp,pt
dec
sub
outsb
ss
loopne
cmp
xorb
lea
popa
jle
jmp
pop
push
ss
jecxz
ret
movsb
test
lods
mov
pop
sub
push
fisubrl
imul
mov
xlat
or
adc
or
cs
mov
in
cld
ficoms
jge
mov
pop
push
sub
lret
pop
push
fidivrl
dec
andl
daa
pop
push
aas
mov
les
dec
mov
sbb
lret
mov
fmull
clc
xor
leave
jo
mov
xchg
sti
test
pop
scas
xor
push
call
ret
fdivp
fs
fwait
push
call
mov
repz
fwait
iret
or
neg
in
bound
push
gs
jge
dec
cwtl
dec
rolb
les
fucomi
xchg
mov
cmc
aas
mov
mov
dec
lahf
movsl
jne
jp
dec
lods
andb
add
insb
xor
dec
jg
sbb
in
jbe
mov
push
jle
cwtl
sbb
sbb
mov
jl
add
xor
xor
sahf
test
lret
scas
sbb
mov
cs
test
aaa
xchg
and
sbb
inc
mov
xchg
sbb
dec
repz
shlb
scas
jmp
jl
std
lods
test
sbb
xor
inc
xchg
fsubrl
cmpsl
jp
pushf
inc
jmp
lea
ja
stc
jmp
call
lea
jbe
jne
not
call
insb
mov
out
mov
les
dec
pop
sbb
call
cmp
mov
adc
sahf
dec
aaa
push
es
fwait
mov
cmp
adc
add
into
and
cs
push
stos
out
dec
pop
sub
jmp
adc
xor
imul
movsl
into
xchg
mov
mov
movsl
loop
ss
pop
jp
dec
dec
push
je
sarl
add
and
pushf
scas
and
js
cwtl
and
jp
xchg
mov
jno
pushf
mov
fwait
mov
xorl
movsb
daa
cmp
test
mov
cmpsb
adc
test
lcall
addr16
xchg
sbb
stos
or
in
subl
scas
or
js
inc
lret
jge
add
xchg
ljmp
dec
inc
adc
jg
mov
gs
mov
pop
inc
jnp
inc
fdivl
sub
xchg
stos
cmp
adc
fisubrs
std
nop
xlat
pop
jo
mov
pusha
sub
pushf
cmp
pushf
call
ret
xchg
div
mov
pop
or
psubb
cmp
lods
cmc
jnp
mov
imul
or
mov
xchg
or
repz
xchg
clc
or
pop
lret
mov
inc
push
repnz
clc
pop
rolb
inc
movsb
outsl
test
mov
push
scas
sbb
jo
and
test
sub
and
pusha
sub
popf
ss
sub
sbb
pop
mov
aad
pusha
fs
lret
jp
inc
mov
fcomps
mov
add
adc
mov
rolb
add
or
jns
jnp
sbb
stos
lods
dec
jl
push
pop
mov
xor
adc
add
mov
imul
mov
sbb
xchg
add
hlt
xchg
mov
lcall
add
fnstenv
xor
adc
cwtl
push
clc
ret
outsb
mov
in
test
or
les
das
cmp
and
push
lea
pop
aaa
and
daa
xchg
xchg
sbb
mov
rcrl
mov
jp
inc
mov
dec
aam
int3
dec
adc
xor
lret
inc
pusha
adc
push
xlat
int3
push
inc
push
and
movsl
sub
add
dec
mov
addr16
push
inc
push
and
sub
popa
sub
dec
inc
xchg
shll
mov
cs
in
sub
aas
mov
xchg
adc
hlt
xlat
idivb
xchg
lds
cmp
popf
es
ja
sub
mov
rcl
pop
sub
jp
inc
fistps
jb
cmp
jmp
stc
movb
test
call
mov
movl
pushf
pushf
inc
pushf
stc
jmp
rcrl
stc
mov
aaa
fidivrl
xchg
pop
push
mov
add
sub
cld
dec
imul
sbb
scas
pop
sbbl
das
rcl
push
pop
fstpt
lods
daa
popa
pop
cli
call
sbb
clc
jecxz
xchg
xchg
call
adc
cmp
or
aam
xchg
fidivs
cli
push
movsl
nop
shrb
bound
sbb
jg
mov
call
mov
sarl
adc
inc
xchg
adc
sub
addl
dec
jp
inc
aaa
or
dec
aam
fs
in
jle
mov
dec
ljmp
xor
mov
cmp
icebp
dec
mov
mov
jmp
and
icebp
dec
fs
xchg
in
cmpsl
cmp
push
xor
mov
mov
out
mov
mov
aas
outsb
mov
sub
lock
lret
leave
cmp
movsl
xor
std
push
xchg
fldcw
cmp
push
jl
icebp
mov
jp
and
xchg
subl
cmp
iret
pop
in
roll
into
mov
mov
in
mov
roll
sub
mov
dec
out
loop
xor
and
dec
xchg
gs
pop
xor
sbb
inc
pop
push
add
dec
fiadds
add
test
mov
test
rorl
fcomps
icebp
jle
push
fildl
mov
xor
fstps
inc
cmp
shr
ret
insl
sar
mov
push
mov
mov
das
lods
nop
popf
ror
ret
fisubrl
ror
push
mov
xor
int3
subl
inc
popf
rolb
pop
jbe
sub
je
push
loopne
pop
mov
js
je
dec
cmpsl
pop
rcl
xor
lret
in
out
add
aas
stc
mov
mov
cwtl
sbb
insl
jp
inc
add
mov
stos
aam
ss
jo
mov
dec
sbb
clc
in
jno
inc
mov
test
mov
pushf
bound
mov
push
in
pop
cmp
daa
pop
insb
imul
lret
std
fsubrs
sbb
mov
mov
loope
add
leave
je
dec
aad
inc
incl
xor
lods
jb
in
xor
jmp
pop
data16
in
cmp
mov
sahf
or
inc
inc
adc
push
pop
jmp
cmp
jp
inc
xlat
stos
adc
xor
lea
jae
bt
pushf
jmp
rorl
mov
jmp
repz
stos
shrb
pop
inc
mov
pop
icebp
jns
cmc
gs
pushf
dec
adc
dec
jge
mov
daa
jae
outsb
jbe
xchg
jb
dec
sub
and
test
pop
rorb
stos
dec
jnp
mov
dec
dec
or
or
adc
repz
add
xor
push
sbb
and
inc
adc
inc
jmp
fcomps
adc
mov
mov
imul
sub
push
bnd
add
jmp
cmp
addl
fs
push
push
out
adc
or
std
adc
in
ret
cmpsl
repz
insl
ljmp
lea
jle
jg
in
xchg
xchg
mov
jmp
adc
cs
popa
roll
mov
pop
mov
push
sub
mov
lret
fucomp
mov
jp
inc
mov
fimuls
orl
fs
jmp
pusha
ljmp
ja
out
xchg
test
les
psubd
dec
fucomp
lods
push
and
shll
test
lods
push
inc
stos
rorl
xchg
hlt
push
popa
add
mov
fadds
sub
ret
iret
fucomp
mov
mov
mov
and
or
xchg
dec
ljmp
push
in
cld
xchg
icebp
pop
hlt
inc
mov
xchg
add
or
inc
push
xchg
push
jo
mov
xorb
es
lods
into
das
add
push
cmc
mov
stos
mov
sub
jp
inc
ss
lods
ss
xor
mov
dec
lock
test
pop
mov
cmp
test
mov
cmp
adc
cmp
push
xchg
add
mov
popf
cwtl
sub
push
rcr
cmpl
and
hlt
loope
scas
xor
inc
test
fidivl
out
sbb
pop
in
cmp
pop
mov
imul
in
cwtl
cltd
push
inc
or
ljmp
test
mov
adc
mov
orl
jg
int3
jo
mov
and
inc
push
push
jb
divb
aaa
mov
cmp
jg
call
in
jmp
xor
insb
mov
idiv
icebp
cmp
stos
in
push
mov
mov
sbb
into
aad
call
push
jp
inc
push
adc
cmp
scas
mov
pop
cmp
dec
ljmp
rcrb
jp
inc
and
shl
lods
push
fmulp
mov
sbb
orb
or
pop
inc
insl
pushf
shr
cmp
int
pop
adc
outsl
and
out
fisubs
gs
das
or
and
inc
rclb
sub
xchg
std
fistl
shlb
pop
mov
mov
stos
jecxz
out
xchg
xor
sbb
adc
pop
adc
lds
daa
out
sub
jp
aas
testb
mov
std
aas
adc
ja
pop
cmp
dec
cmp
insb
push
adc
add
pop
jmp
ja
jo
pushl
fdivrl
movsl
pop
stos
loop
sti
push
jecxz
shrb
ss
mov
mov
gs
cmpsl
adc
call
test
mov
in
rolb
stos
rclb
inc
enter
into
mov
lods
cmp
inc
ficomps
jmp
cmp
inc
jp
aas
xor
sbb
jnp
out
add
cmp
imul
fmull
pushf
test
cld
dec
sbb
mov
push
dec
pop
xor
inc
xlat
add
out
and
push
out
push
dec
dec
iret
mov
lods
cmpsl
mov
adc
dec
test
push
addr16
xchg
xchg
jne
xlat
push
repnz
adc
hlt
out
das
out
mov
lcall
jl
push
popf
and
mov
nop
jp
jle,pt
push
pop
push
jle
adc
jge
sbb
loopne
stc
dec
mull
stc
mov
fdivrl
aaa
mov
inc
xor
mov
xor
mov
inc
xchg
push
mov
in
jbe
and
fimull
push
std
repnz
mov
dec
rcl
jecxz
inc
jp
aas
cs
mov
sub
jb
shlb
fldl
mov
ret
movsl
jo
loop
push
sub
xor
jnp
inc
adc
int
les
sub
xor
adc
iret
pop
popf
lock
mov
adc
ret
lahf
push
dec
in
or
dec
cmp
xlat
sub
loope
sub
stos
shl
into
movsl
add
insl
adc
mov
or
xlat
push
jp
ds
andb
fs
call
pusha
push
movl
lea
jb
pusha
pushl
ret
bound
outsb
andl
in
cmc
loope
ja
mov
and
test
mov
mov
inc
xchg
icebp
pushf
nop
sub
mov
leave
ret
mov
pminub
and
aam
sub
sub
push
in
mov
pop
add
sub
in
inc
push
mov
xor
flds
xor
popf
lahf
movsb
xor
fisttpl
mov
test
xchg
mov
loope
sbb
jmp
subl
ficompl
pop
js
mov
int3
pushf
mov
ret
jp
add
sbb
jne
pushf
bound
dec
mov
mov
popf
in
lret
mov
cmp
in
cli
mov
sbb
jnp
mov
adc
sti
inc
in
lods
jbe
aaa
and
jge
leave
rcrb
sub
les
mov
cmp
sub
jae
call
sbb
jp
xchg
repz
iret
pop
cmpsb
adc
inc
jg
repz
and
or
rep
inc
inc
jg
sbb
mov
loopne
sub
gs
sbb
ljmp
mov
pop
xchg
mul
js
mov
cmp
mov
push
mov
rclb
hlt
lret
mov
jae
cmp
shlb
clc
xchg
xor
push
adc
test
jp
cmp
jmp
pushf
lret
pop
insl
add
inc
lds
sbb
jne
jp
push
add
iret
fbld
shlb
add
mov
inc
jbe
fucom
orb
mov
xchg
imul
inc
sarl
shlb
push
ss
stos
add
inc
xor
push
test
scas
ljmp
fcoml
mov
leave
cmp
inc
in
fidivrl
into
jae
inc
sbb
daa
xchg
dec
test
pop
and
roll
xchg
jp
cmp
ljmp
cmc
rol
stc
stc
bt
call
pushf
lea
jbe
stc
sub
stc
cmc
pushl
call
je
mov
cmpsb
cmpsl
add
push
call
add
push
xor
xor
mov
pop
mov
sub
cli
fnstsw
nop
bound
push
jge
pop
dec
mov
stos
cmc
dec
ss
xchg
fs
test
mov
dec
xor
push
out
pop
repz
jne
mull
sbb
scas
mov
mov
lds
sbbl
shlb
mov
cltd
movsb
inc
clc
pop
mov
sub
testl
mov
aaa
jp
cmp
hlt
push
movl
lea
jmp
jne
add
das
dec
ja
stos
and
dec
xor
inc
mov
inc
mov
xor
pop
cmc
lds
lret
fs
add
and
leave
sarb
lods
es
and
je
sub
push
js
jge
addl
lcall
xlat
mov
jb
movsb
addl
leave
adc
push
mov
addr16
or
push
sub
or
orl
mov
xchg
inc
cmpsl
mov
pop
jg
test
test
mov
pop
sbb
shl
and
bound
mov
cmp
xor
sub
lret
pop
fs
and
jmp
dec
adc
inc
fidivrl
je
outsl
loope,pt
loop
pop
mov
aad
ss
adc
mov
adc
inc
jno
inc
test
insl
push
inc
dec
pop
dec
arpl
push
call
test
sbb
xchg
scas
add
cli
or
adc
add
mov
jp
xchg
jae
sub
pusha
data16
xor
xchg
popf
fldt
call
test
in
call
test
cltd
or
clc
pop
or
mov
in
or
test
leave
cltd
in
sub
mov
in
pop
or
test
cltd
in
test
pop
mov
cmp
sub
enter
in
popf
mov
movw
pusha
pushf
movw
lea
ja
jmp
cmp
jmp
fsub
mov
mov
sbb
mov
mov
cmpsb
xlat
clc
out
out
jl
xchg
shll
add
lea
sub
pop
adc
insl
jmp
aam
popf
sub
das
mov
or
adc
leave
insb
or
lds
fcoml
seta
sbb
sbb
data16
scas
mov
iretw
outsl
pop
mov
adc
cs
mov
mov
dec
pushf
pusha
ja
addr16
dec
int3
fstpl
sahf
jp
cmp
mov
cmc
call
xchg
adc
int3
push
shll
lea
test
loopne
jbe
ds
lret
sbb
pop
stos
stos
std
loope
jae
pop
orb
mov
loope
jo
lret
fcompl
jae
jl
push
dec
stos
repz
jnp,pt
loope
dec
dec
movsl
cld
pop
dec
jmp
mov
outsl
fwait
adc
sbb
je
scas
ret
lea
icebp
cmp
in
in
push
iret
xor
xor
mov
push
stos
das
adc
insl
jp
or
fwait
sub
ds
bound
mov
sbb
popa
es
iret
mov
fildll
mov
or
push
loopew
jnp
push
jne
pop
cmc
add
mov
pop
sarb
lock
and
addl
mov
pop
ss
push
mov
and
repz
sbb
insl
push
mov
xchg
pop
in
jae
movsl
cltd
adc
lods
int
scas
daa
sbb
rcrb
fdivrs
nop
mov
in
mov
sbb
inc
les
sub
jecxz
testl
mov
push
lea
call
push
jmp
mov
push
ret
into
jns
mov
mov
and
or
pop
push
jnp
rol
imul
mov
pop
mov
dec
mov
hlt
mov
or
fucomip
je
push
pushf
and
loopne
call
das
outsb
fsubl
push
jo
aas
scas
or
push
add
dec
fwait
lret
divb
adc
pusha
mov
cwtl
test
cltd
jae
xlat
divb
mov
adc
push
xor
add
adc
mov
push
sub
test
xchg
jno
push
mov
mov
outsl
mov
out
pop
enter
idivl
dec
push
sahf
es
cmp
jp
jp
xor
pop
inc
aad
gs
cs
push
scas
and
hlt
fwait
or
pop
jle
push
aad
subl
lret
sbb
enter
cwtl
mov
pop
gs
cmp
ffree
je
mov
daa
fsubr
int3
add
andl
and
mov
jno
pop
sub
jne
sbb
scas
ljmp
inc
out
jae
and
fxch
insl
and
xchg
fdivl
add
xorb
and
and
adc
push
add
in
roll
std
sub
in
add
and
repnz
xchg
push
xor
mov
outsb
jle
push
insb
out
pop
dec
lods
pop
into
jmp
jle
fprem
xchg
mov
orb
push
push
mov
orl
mov
movsb
add
fsubrs
mov
inc
sbb
sub
adc
scas
xor
inc
popf
push
es
jmp
loope
mov
stos
lods
push
add
add
or
outsb
stos
xor
mov
add
jp
xor
sub
call
nop
xchg
inc
mov
mov
in
xchg
add
lea
adc
mov
shlb
mov
les
add
popa
ja
push
jge
cmpb
lea
lea
fucomip
stc
insb
daa
push
repnz
out
adc
out
adc
cwtl
sbb
jmp
dec
lods
xchg
cmp
subb
jmp
adc
mov
aad
sti
sbb
dec
xchg
add
jp
xor
in
xor
xchg
mov
in
and
jno
jle
push
xor
sbb
or
in
mov
bound
xchg
dec
push
mov
int3
pop
push
cmpsl
mov
mov
sub
add
pusha
outsb
in
xor
push
xor
and
adc
popl
ret
jnp
popa
mov
xchg
popf
and
mov
inc
or
out
inc
scas
xchg
mov
mov
aam
fwait
imul
in
jp
xor
mov
in
jp
dec
cmp
into
mov
jmp
sbb
sub
rolb
aam
jge
xchg
jl
push
in
scas
add
mov
sti
fstl
fst
xchg
jp
sbb
pop
aad
enter
adc
xor
pop
stos
push
dec
mov
gs
add
fwait
push
jp
add
lahf
movsl
sbb
xor
cmp
neg
call
push
push
cli
cmp
and
adc
push
mov
mov
inc
movsl
sub
adc
jbe
aad
mov
push
cmpsb
lcall
add
int3
mov
cltd
lcall
add
dec
pop
inc
enter
inc
je
sub
bound
cmp
push
dec
dec
pop
pushf
jno
add
mov
xor
aad
mov
and
and
xor
cli
stos
pop
jp
mov
dec
stos
mov
mov
pushf
and
cld
sub
std
xchg
adc
out
iret
dec
sti
aad
sub
and
int
sub
scas
ret
popa
repz
por
mov
shlb
mov
jg
sub
dec
push
dec
cmp
jp
add
hlt
mov
sbb
cmp
or
xor
sti
sarl
cs
addr16
adc
lret
lods
sub
adc
xor
adc
call
jmp
stos
push
mov
inc
mov
mov
pop
popa
pushf
add
fs
push
movsb
into
pop
dec
lret
push
jge
mov
lea
fs
cld
dec
ja
dec
out
dec
sbb
mov
popf
ja
or
in
or
rorb
xchg
mov
fs
jge
mov
add
shl
stos
in
test
test
mov
pusha
fdivrl
push
push
imul
or
lods
fnstsw
push
movsb
pop
in
inc
add
movsb
pop
lods
adc
movb
cmp
jo
enter
in
jp
xor
jne
sub
clc
pushf
stc
jmp
call
push
lock
std
std
xchg
xchg
popa
add
shlb
push
int3
ret
scas
or
mov
pop
out
ss
loopne
pushf
lods
jge
or
adc
dec
inc
es
aam
pop
into
add
loope
and
cmpsl
test
mov
or
shr
xchg
push
xchg
test
adc
mov
mov
xchg
cs
fildl
add
xrelease
jmp
pop
ljmp
fiaddl
or
bound
mov
int
sbb
or
sbb
popa
mov
adc
test
mov
fimull
fsubp
jno
mov
imul
ja
pop
jno
sbb
sub
add
bound
sarb
movsl
xchg
push
mov
rorl
and
jp
das
pop
orb
out
outsl
xlat
lea
cwtl
ss
mov
test
mov
push
dec
cli
inc
pop
cmp
dec
sub
xchg
xchg
mov
jb
jae
imull
sahf
xor
or
push
jl
push
and
mov
das
mov
or
movsl
dec
pop
daa
fs
or
inc
mov
and
adc
jb
mul
push
and
mov
sbb
mov
mov
pop
sub
mov
outsl
ret
jp
xor
fadd
inc
or
lods
mov
cli
call
mov
les
movsb
in
sbb
rclb
add
insb
and
adc
jecxz
sbb
add
push
mov
dec
mov
aam
and
pop
cmp
scas
sub
dec
and
sbb
xor
ret
sahf
ds
xor
ja
mov
or
fsubrs
sbb
mov
jp
das
or
ss
stos
mov
pop
cmc
mov
pushf
sub
push
in
inc
sub
sahf
push
outsl
mov
notl
or
mov
mov
bound
push
mov
mov
pop
pop
push
mov
imul
inc
mov
pop
insl
xor
mov
sub
sbb
movsb
icebp
aaa
leave
xchg
pop
in
sub
jp
cs
xchg
add
mov
cmp
xor
add
push
inc
add
out
out
pop
pop
testl
sbb
mov
mov
mov
xchg
leave
ret
xor
into
fisubl
mov
into
cwtl
leave
sub
xchg
fwait
inc
inc
leave
ret
xor
sbb
xchg
fstpl
mov
sbb
mov
push
mov
push
xor
mov
aas
popf
sub
dec
imul
in
and
mov
and
dec
pop
stc
lahf
icebp
jne
mov
cltd
mov
dec
jb
mov
push
das
push
ret
pop
mov
ljmp
mov
fs
add
jp
sub
insl
push
shrl
sub
cwtl
xchg
sarb
adc
inc
pop
inc
leave
inc
push
out
test
sub
pop
inc
clc
inc
or
leave
inc
or
fisubl
sub
xchg
outsb
xor
mov
mov
mov
push
ret
pop
les
cwtl
pop
mov
loop
xchg
cltd
or
pop
sarb
jle
imul
nop
xchg
and
jp
sub
xlat
inc
fidivl
fcomip
lods
jae
inc
imul
inc
jns
push
call
ret
outsl
addb
jns
lret
push
pop
or
add
dec
push
sub
cld
mov
rcrb
xor
inc
cld
js
xor
xchg
movsl
adc
or
sbb
popf
fsubl
cmpsb
clc
cwtl
sbb
pop
popa
ljmp
sub
add
sub
dec
mov
faddl
jg
or
enter
ljmp
jg
scas
dec
push
jbe
push
test
add
fmuls
sbb
mov
cmp
dec
jae
fdivl
or
pop
ror
dec
jae
sub
icebp
or
xchg
hlt
pop
adc
inc
inc
das
in
xchg
movsb
testb
aas
dec
clc
mov
or
mov
sbb
adc
and
mov
aad
sub
loope
mov
adc
aam
daa
adc
jne
test
std
pop
iret
cmp
sbb
insl
test
int
adc
xchg
orb
xor
mov
jns
pop
dec
xor
mov
imul
ss
cmp
int
adc
sbb
aaa
cld
jo
sbb
gs
lea
mov
mov
lret
cmp
sub
into
clc
push
xchg
pop
imul
aaa
fimuls
push
test
add
jp
stos
ror
push
mov
ljmp
mov
leave
call
mov
pop
popa
sub
out
cld
ja
es
sbb
jne
outsl
jmp
jl
adc
ja
mov
mov
mov
lods
push
cmpsb
inc
loopne
arpl
mov
push
daa
aaa
xlat
pop
cmp
iret
fbstp
fldz
pop
mov
adc
push
xchg
and
js
dec
aad
cmp
sub
stc
and
xorps
jmp
mov
orb
adc
in
add
inc
fadds
jecxz
push
cld
sub
xchg
inc
push
xor
out
xchg
int3
icebp
push
xlat
inc
mov
mov
stos
inc
enter
mov
dec
call
xchg
inc
mov
sbb
cli
es
fdivrs
dec
pop
cld
jbe
loop
and
shrl
sbb
fsubrs
and
hlt
cmp
dec
loopne
cmpl
bt
add
jno
pushf
stc
test
push
movw
lea
jne
jmp
mov
pop
mov
aam
mov
and
xor
in
cmp
cmc
sub
push
jp
pop
mov
jmp
cmc
inc
mov
dec
mov
mov
stos
jo
or
out
and
sub
pop
or
cmp
enter
mov
clc
pop
or
pop
fldcw
pop
dec
fldcw
cltd
enter
in
popf
cwtl
or
and
jne
jmp
in
jbe
daa
bound
inc
add
fs
sub
xor
add
mov
xor
xor
test
mov
mov
adc
adc
ret
xchg
dec
fldcw
mov
push
test
test
rcrb
xor
das
aas
sub
push
or
out
outsl
mov
push
sahf
jecxz
xor
in
jp
sub
lahf
loopne
adc
stos
mov
jle
jno
les
mov
scas
jne
lea
mov
add
xor
sbb
xchg
and
aam
mov
lret
add
dec
mov
mov
jecxz
and
add
cmp
inc
push
and
cwtl
xchg
imul
mov
jne
push
and
sub
jmp
scas
sti
cmp
and
jne
mov
pop
test
mov
jg
in
push
and
mov
xchg
xchg
movsb
push
testl
rsm
cltd
sbb
outsl
jmp
fcmovb
gs
inc
arpl
ss
push
mov
jnp
pop
add
push
arpl
sbb
dec
dec
jnp
hlt
nop
cli
arpl
mov
outsb
or
add
cld
iret
imul
push
mov
je
cltd
sbb
dec
mov
pop
pop
jge
inc
aas
test
icebp
add
cmc
mov
roll
addl
inc
jle
flds
adc
stos
adc
stos
mov
test
pop
sub
cmp
jp
sub
cmp
dec
lcall
mov
sub
cmp
mov
lods
or
es
xor
xlat
lret
jmp
jp
jae
xor
pop
or
add
nop
pop
ficoml
or
jnp
xor
pop
fiaddl
mov
cmp
jecxz
mov
cmpsb
jecxz
jge
add
and
push
mov
mov
jne
fists
xchg
mov
fistpll
push
lds
inc
sbb
dec
fstps
jo
inc
push
bound
sub
ljmp
adc
lahf
je
or
test
paddw
or
mov
push
cmp
xorb
xor
mov
lods
adc
test
stos
jg
jmp
push
faddl
pop
cmpsl
adc
in
mov
sub
movsb
dec
xorb
dec
mov
pop
dec
cmc
push
push
pop
lahf
cmp
inc
in
xchg
outsb
std
add
out
or
add
es
xchg
and
nop
rcrb
aad
mov
mov
pop
jmp
ja
sub
sub
sub
mov
outsl
jl
or
pop
dec
icebp
jp
mov
jle
imul
ss
sub
jnp
lea
sbb
ss
pushf
es
fldl
sub
and
or
xor
xchg
xlat
xchg
inc
pop
jmp
hlt
inc
aad
fstpl
in
push
scas
fisubrs
loop
std
xor
adc
adc
stc
pop
in
in
rclb
call
mov
mov
test
and
in
imul
xchg
popa
push
sub
mov
dec
hlt
es
inc
pop
call
pop
or
rcr
mov
ret
mov
pusha
sbb
sbb
pop
js
lods
iret
mov
jns
mov
xor
and
ja
pop
mov
inc
dec
xchg
rorb
in
sbb
sarb
add
adc
mov
mov
stos
mov
jp
and
out
or
int
sbb
mov
mov
pusha
adc
out
mov
inc
mov
loop
jp
and
jmp
hlt
adc
or
pusha
inc
mov
cmp
inc
iret
fcomps
cwtl
test
xorb
push
sbb
aaa
fmuls
inc
outsb
and
xchg
push
les
lods
mov
loop
pop
cmp
daa
push
sbb
pop
int
fbstp
inc
mov
sub
xchg
xchg
fcomps
ja
add
adc
scas
ret
and
push
test
add
inc
in
loope
cmp
pop
jg
sarb
dec
pop
loop
xor
mov
push
arpl
fs
mov
cwtl
js
and
pop
pop
fwait
addr16
iret
jno
sbb
xchg
fwait
jbe
sbb
xor
jns
mov
lods
xor
cmp
fistpl
ljmp
mov
stc
imul
pushf
pushf
bt
pusha
add
pushf
lea
jmp
pop
fcmovb
push
addr16
rclb
pop
inc
insb
fiadds
pop
push
stos
sbb
cmpsl
xor
fdivl
aam
ja
repz
fdivl
aam
jae
fwait
cmpsl
or
push
mov
es
popa
es
rorb
pop
sub
out
or
pushf
cmp
mov
arpl
lea
negw
sbb
cld
adc
dec
adc
imul
cmp
in
xchg
jmp
das
ror
insl
test
mov
movsl
imul
ds
ljmp
shrl
mov
adc
divl
and
loop
popa
and
mov
xchg
adc
adc
stos
mov
test
notl
loope
mov
movl
enter
mov
cmpsl
cmp
insl
shlb
or
lahf
adc
inc
xchg
or
arpl
inc
cld
pop
arpl
adc
ficomps
mov
sbb
cld
iret
pop
push
push
or
xchg
dec
push
xchg
in
pop
push
call
jb
mov
push
decl
pop
iret
call
movsl
push
das
xchg
and
sub
sub
jp
xor
pop
lods
pop
adc
ficoms
loope
mov
push
jp
and
aaa
push
sti
add
inc
fimull
cli
fdivrl
jp
and
negl
cs
pop
movsl
jle
mov
sarb
in
fnstcw
jp
and
push
xchg
pusha
enter
psadbw
jae
in
jbe
sbb
out
loop
inc
inc
mov
or
fisubrl
dec
pop
stos
fwait
call
notl
xor
push
mov
inc
mov
fbstp
xchg
aaa
mov
sahf
sti
lods
fwait
inc
jb
inc
scas
xchg
mov
mov
rcrb
fsts
and
icebp
xor
sti
dec
push
retw
and
fsts
pop
add
inc
dec
test
or
dec
pop
xor
mov
pop
mov
pop
sti
xchg
sbb
fidivrs
daa
add
sti
shll
cmpsl
jb
sbb
pop
sub
dec
mov
cmpsb
jl
fcompl
in
and
cwtl
and
mov
shrl
xor
inc
cltd
mov
xor
add
add
or
and
jae
push
jae
xchg
ljmp
fnstcw
fnstcw
sub
and
gs
clc
inc
pop
icebp
inc
into
push
mov
mov
aaa
pop
cmpsl
sar
inc
movsl
btc
ljmp
sbb
mov
sub
dec
pop
jp
push
adc
into
fists
dec
stos
movsb
addr16
pop
callw
fstps
out
pop
outsl
cmp
mov
pop
sahf
divb
inc
into
cwtl
ljmp
mov
neg
call
imul
push
loope
movsb
push
lock
repnz
pop
cmp
jg
sbb
add
jmp
fbld
daa
enter
int3
imul
pop
icebp
pop
ljmp
mov
jns
pop
arpl
das
cmpl
cmp
add
dec
xchg
loop
adc
insb
jge
ja
xchg
and
mov
and
mov
arpl
and
fists
nop
adc
cmpsb
jne
into
aas
sbb
add
imul
scas
cld
dec
pop
jmp
rclb
and
push
lea
mov
bswap
jmp
add
dec
insl
popa
addr16
imul
je
outsl
jns
mov
mov
pop
jmp
sub
xor
adc
loopne
jecxz
neg
outsl
cltd
std
lret
pop
xchg
loope
mov
add
lret
or
rorb
scas
pop
lret
pop
in
inc
movsl
notl
imull
jne
push
outsl
dec
sub
adc
cmp
lock
pop
daa
js
aam
sub
orb
fnsave
lahf
jp
and
scas
data16
pop
pusha
cmp
mov
xchg
or
test
fwait
dec
popl
test
push
pop
stos
inc
mov
fbstp
jge
daa
xchg
jecxz
sub
leave
mov
pusha
jnp
sbb
push
and
mov
test
outsb
daa
jno
jg
shrb
inc
push
push
je
dec
pop
pop
sub
dec
cmpsb
inc
inc
cmc
sub
and
sarl
mov
into
aad
cmc
mov
lcall
and
lods
clc
sarl
pop
mov
loopne
dec
int
or
into
andb
ror
inc
int3
pop
mov
sahf
cwtl
mov
sub
jno
mov
sub
sti
xchg
insl
jg
pop
push
test
icebp
cmp
arpl
out
subl
mov
in
test
and
adc
push
nop
mov
adc
nop
jp
das
mov
sub
pop
lret
pop
sub
dec
call
insl
mov
inc
push
inc
or
xchg
mov
cmc
fdiv
jne
subl
aad
call
mov
les
fcompl
fisttpl
xchg
inc
sahf
cmpsl
add
in
pop
pop
pop
cwtl
jnp
cmp
out
orb
add
xchg
mov
mov
dec
popf
xor
mov
cli
inc
and
sbb
xchg
and
fisttpl
outsl
jg
sub
lods
adc
mov
loopne
jmp
xor
rcrb
mov
repnz
ret
lret
call
and
jo
mov
pushf
lods
mov
int
jg
jp
pop
js
hlt
mov
lods
adc
mov
ljmp
cli
in
ret
sahf
fld
je
pop
sub
js
shl
mov
inc
aas
aas
adcb
daa
ja
js
test
daa
lock
mov
lahf
daa
and
jge
mov
xchg
in
jmp
jbe
jge
mov
push
es
int
fs
add
ret
leave
outsl
or
imul
xlat
inc
loopne
js
sahf
loopne
aad
jmp
cmp
push
jp
pop
push
ret
outsl
xchg
adc
xchg
mov
jmp
xchg
sbb
mov
sbb
mov
mov
mov
xchg
sbb
mov
test
or
into
xchg
sbb
xchg
loop
xor
mov
aas
lret
adc
or
fdivl
mov
add
sahf
hlt
push
jge
lcall
inc
adc
arpl
mov
sarb
pop
sub
gs
jp
iret
lahf
test
sbb
sbb
rorl
repz
sbb
in
std
out
jae
aam
and
arpl
gs
dec
inc
repz
in
xchg
push
xor
loopne
mov
repz
jmp
dec
xor
fadd
call
pop
jb
cmp
inc
lret
popa
sub
lods
add
incb
fs
push
in
fsts
aam
and
std
add
loope
es
imul
int3
hlt
mov
cmpsb
rcll
rcrl
mov
jmp
enter
rcrb
testb
mov
push
jp
sbb
cmp
jno
aam
mov
adc
pop
add
cltd
cmp
fwait
mov
push
ret
xchg
rcl
cli
push
jae
push
cmp
push
ret
xchg
into
add
jecxz
push
in
sbb
pop
jge
or
mov
cld
adc
fld
inc
mov
push
jno
mov
push
ljmp
gs
sub
mov
sbb
mov
and
dec
loope
aad
lods
cmp
or
mov
adc
stos
addr16
pop
cmpsb
mov
xchg
adc
cmpsl
sbb
push
mov
jb
lods
add
adc
div
xchg
enter
and
mov
lret
xchg
mov
xchg
xor
je
adc
ffree
xchg
cmc
or
fnsave
es
jecxz
mov
in
or
mov
lret
xchg
add
dec
and
pop
sub
lahf
stos
pop
imul
or
out
icebp
cld
adc
scas
jp
sbb
or
out
testb
dec
insl
pop
test
cmp
popf
push
ja
xchg
sub
enter
mov
cmp
jb
andl
movsl
sbb
jno
push
mov
into
jno
pop
pop
ds
cmp
lea
es
int3
inc
lea
jg
sti
or
fnstenv
inc
stc
or
fwait
loopne
sub
pop
mov
int3
fistpll
sbb
mov
dec
mov
enter
dec
mov
stos
dec
cmp
into
cmp
inc
ljmp
inc
imul
bound
lea
push
fisttpl
iret
sub
inc
bound
les
pop
loope
jbe
sbb
aam
pop
cmp
pop
jmp
jg
push
addr16
subb
loop
fdivs
jmp
cmpsb
push
xor
inc
xchg
movsb
ss
icebp
sub
iret
pusha
int
out
mov
lahf
iret
cmpsl
inc
loope
loop
sbb
mov
cwtl
stos
jbe
inc
lods
jp
sbb
mov
xchg
push
dec
push
cmc
cmc
shl
not
lods
call
adc
lea
add
mov
nop
aas
mov
setns
mov
xchg
sbb
xlat
sub
jo
mov
and
xor
mov
rcrl
pop
jne
scas
pop
and
cmp
push
xor
pop
mov
neg
jo
loop
iret
add
mov
cmp
bound
int
push
in
cmp
rcl
out
sbb
sbb
hlt
rcrb
imul
xchg
mov
mov
out
pushf
test
jnp
sbb
hlt
fildll
call
das
popa
mov
test
and
cmp
test
mov
adc
sarl
mov
jp
rcrb
arpl
jbe
scas
adc
aad
jne
dec
fsubrl
jp
stos
imul
mov
push
xor
mov
dec
or
ret
ret
fistps
and
shrl
jno,pn
cmp
push
push
mov
ljmp
fiaddl
add
jp
adc
pop
pushf
out
cmp
fmul
bound
fsubrl
lahf
out
call
xchg
fistpl
jno
mov
repnz
inc
or
jb
testb
test
mov
mov
fnstenv
mov
sahf
sub
enter
sbb
fisubrl
in
scas
jnp
or
inc
in
in
add
fcom
push
int3
test
sub
jb
or
mov
xor
std
insl
xchg
cmpsl
lret
je,pn
js
or
lods
jno
xchg
mov
sbb
xor
fcomi
mov
mov
pop
ret
xchg
ret
sub
loope
lods
cltd
xchg
or
and
out
mov
jg
mov
adc
sti
inc
mov
xor
iret
dec
dec
aad
gs
popa
inc
jo
jmp
fimuls
stc
out
cld
ss
pop
pop
inc
jmp
test
xor
repz
fdivrs
pop
sub
inc
out
insl
orb
adc
js
ret
jnp
ljmp
int
ret
rorb
repz
mov
testl
mov
cmpsl
repz
cmp
sub
adc
xor
sbb
test
insb
jnp
inc
adc
arpl
arpl
ficoms
clc
out
jno
test
jnp
cs
popa
mov
dec
sbb
mov
xor
arpl
mov
pop
adc
xlat
xor
push
lret
lret
cmp
adc
sbb
sbbb
in
mov
jo
mov
into
mov
xlat
mov
insl
sti
inc
xchg
mov
fbld
push
pusha
cmp
inc
pop
sub
cli
add
xor
lcall
fcoms
dec
push
in
jb
adcl
sub
les
test
mov
outsb
jl
leave
jo
add
mov
test
dec
jp
mov
loope
adc
sbb
or
ret
adc
in
dec
xor
pop
jbe
loope
pop
outsl
aam
cli
aad
mov
mov
imul
ret
push
stc
mov
inc
mov
xor
in
and
mov
jmp
add
in
test
aad
insb
lcall
ret
icebp
inc
dec
push
fsubrl
repz
mov
mov
push
mov
js
in
insb
xchg
out
loop
pop
test
add
fcomps
test
cmp
jp
into
lcall
push
and
mov
inc
mov
push
push
lahf
inc
dec
cmpsl
lock
jb
jecxz
mov
into
fwait
icebp
addr16
cltd
notb
inc
xchg
lcall
xor
les
mov
push
lods
xchg
in
xor
repnz
or
pop
push
daa
mov
ficoml
jp
xchg
xlat
inc
in
xor
inc
mov
mov
rcl
xchg
fistpll
mov
cmp
xor
test
xchg
xor
int
arpl
andb
mov
mov
cmc
test
repnz
xor
ss
push
daa
cmp
cwtl
sahf
int
jp
jnp
out
loope
stos
pop
addr16
jns
js
adc
cmc
iret
dec
mov
fwait
repnz
mov
rclb
cmpsb
cmp
add
gs
push
cmp
mov
rcrl
outsb
xlat
inc
cmc
sbb
pop
mov
fdivp
sub
cmp
loopne
mov
insl
push
test
jb
lcall
fs
stos
out
add
lret
out
add
fsubl
imul
add
cli
sarl
sub
lcall
pusha
jae
mov
movzwl
call
movl
call
popa
loope
adc
add
fadds
push
jns
adc
movsl
push
mov
or
add
jmp
sub
arpl
scas
xor
cmp
mov
in
mov
cmp
and
test
adc
adc
cltd
add
cmpsl
lock
ja
jmp
jns
xchg
pop
bound
cmp
movsl
mov
mov
push
push
inc
push
xor
cs
insb
add
or
mov
sub
sub
and
mov
das
idivb
cmp
pop
mov
stos
push
push
mov
mov
mov
push
jecxz
inc
into
or
es
leave
dec
xor
pop
xor
xchg
push
mov
mov
add
imul
in
scas
inc
mov
cmp
jp
adc
mov
fs
push
inc
int
sbb
adc
faddp
jb
ret
jmp
push
xchg
lods
nop
push
fscale
xchg
movsb
repz
dec
je
push
aaa
jg
inc
aad
nop
push
fldenv
lock
push
lahf
jne
test
pop
movsb
inc
xchg
movsb
cld
push
lahf
push
adc
xchg
filds
jno
cmp
xchg
xchg
xchg
fcompl
cs
movsb
in
ret
mov
and
or
mov
test
cmp
add
or
add
jae
in
dec
cld
sbb
leave
sbb
add
mov
push
jo
jo
nop
sub
int3
dec
incb
xor
mov
fldcw
xchg
inc
movsb
in
mov
cs
sub
pop
in
mov
subb
fmull
or
sub
mulps
insl
decb
mov
adc
push
push
dec
dec
dec
dec
cs
insb
add
loopne
adc
jnp
ficoml
mov
gs
insl
jecxz
mov
cmp
pusha
cmc
sub
in
mov
or
and
cmc
sub
add
int
loopne
lods
mov
popf
xlat
in
and
adc
ds
xchg
push
xchg
pop
mov
mov
jle
push
pop
rcr
jbe
inc
cmc
pop
xor
cmc
jno
jo
inc
inc
mov
dec
lret
xchg
test
adc
xlat
push
es
lahf
jns
jnp
loopw
adc
in
pushf
jnp
rol
xchg
pop
dec
cwtl
out
fstpt
pop
ss
mov
jle
cmpl
in
cmp
arpl
out
fstpt
into
sub
push
jge
pop
sub
pop
inc
push
mov
adc
lods
into
jl
mov
scas
out
cmp
in
mov
cmp
add
arpl
mov
mov
vmaxsd
mov
jns
cmpsb
xor
inc
push
push
mov
aam
icebp
jp
adc
sub
test
insl
test
repnz
das
loop
icebp
mov
dec
lea
out
scas
mov
mov
or
mov
push
lds
xchg
pop
insl
push
fcoml
scas
loopne
mov
adc
jmp
out
scas
shrb
stc
mov
pop
cmp
imul
pop
mov
test
shll
shrd
jp
pop
xchg
popa
add
or
jge
jp
adc
lods
test
test
es
mov
bnd
jp
adc
test
lds
das
cmc
push
adc
xor
js
push
sub
or
rcrl
jbe
ret
into
and
push
sbb
xor
pop
mov
jl
cld
sbb
rorb
lods
mov
mov
pop
mov
stos
cmp
cmp
mov
mov
rcr
out
adc
arpl
xchg
and
adc
test
fcmovbe
mov
jno,pt
dec
dec
xchg
lds
push
ret
add
clc
inc
mov
in
push
xchg
std
and
pop
enter
insb
jl
xchg
push
out
jp
adc
mov
aad
std
or
mov
ret
or
sub
jecxz
cld
fcmovb
mov
enter
pop
into
iret
arpl
stos
inc
out
lds
lret
xchg
dec
andb
into
into
and
loop
push
sub
jns
ret
adc
push
not
fisubrs
out
ret
fs
out
loopne
inc
mov
mov
and
pop
orb
inc
mov
dec
lds
xor
add
sbb
repz
push
adc
es
mov
mov
push
adc
lea
pusha
pusha
pushl
ret
dec
lcall
add
inc
insl
pushf
mov
sahf
leave
mov
inc
sub
cli
inc
mov
scas
cmpsl
cmp
es
test
adc
cmpsl
cmp
movsl
pop
data16
mov
inc
pop
xchg
and
das
imul
add
xorl
add
pop
sub
push
stos
or
scas
xlat
pop
push
xchg
sub
loope
les
mov
roll
dec
xor
icebp
lahf
xchg
sbb
jb
fldlg2
or
cmc
mov
fwait
sbb
fildll
fbld
mov
jp
movzwl
pop
push
push
add
cmp
add
adc
push
push
add
notl
add
add
push
add
mov
push
add
mov
push
add
adc
pop
mov
push
add
ds
add
add
add
add
add
add
add
add
add
add
add
add
adc
je
adc
sahf
push
push
add
dec
push
add
add
add
add
add
add
aaa
push
add
push
add
ds
add
push
add
mov
adc
mov
add
add
add
add
notl
add
push
add
cmp
add
pusha
lea
call
pushf
pushf
call
sub
fsubr
inc
and
xor
xchg
or
roll
push
test
adc
and
icebp
mov
sahf
cmpl
fbstp
jbe
sbb
negb
jbe
push
lea
nop
adc
in
adc
jno
in
pop
insl
flds
pop
push
es
aad
xor
mov
jae
mov
mov
and
scas
iret
add
ror
cli
and
repnz
jge
lahf
inc
das
outsl
cmp
sub
push
jmp
shrl
scas
dec
ret
test
sub
psllw
jge
inc
adc
adc
cmc
stos
adc
add
adc
outsl
push
repnz
cltd
aam
les
notb
aam
jecxz
and
adc
ret
in
insb
jl
les
and
dec
stc
mov
pop
and
orb
repz
jp
or
xchg
ret
clc
pusha
rol
pushf
neg
jmp
xchg
jmp
add
call
repz
jecxz
in
push
sbb
fildl
push
inc
es
inc
mov
push
sub
ret
adc
cmp
and
sub
xor
pop
push
dec
sbb
cmp
xchg
insl
aaa
inc
rorb
cmp
mov
enter
pop
movsl
sbb
and
pop
mov
testb
aaa
cmp
jmp
add
cmp
xchg
add
out
mov
xor
cmp
jnp
rcrb
push
pop
icebp
mov
orl
sub
jmp
xor
int
sbb
xchg
jl
push
cmp
mov
jmp
jge
mov
outsb
push
addr16
cli
nop
pop
sbb
push
mov
mov
mov
clc
or
dec
xor
or
int
cmpsl
in
sub
jge
add
jno
push
nop
ljmp
sub
fwait
xor
xor
pop
sub
pop
popf
iret
push
xor
adc
shl
push
xchg
sti
cmp
aam
mov
call
mov
or
aam
adc
push
push
sbb
inc
push
push
sbb
ja
inc
push
mov
outsb
or
push
mov
jnp
sbb
mov
and
rcll
stos
out
add
cwtl
bound
or
popf
popa
mov
loopne
sub
subb
pop
scas
sub
or
loopne
ja
ret
fisttpll
lods
mulb
add
ret
mov
into
int
ret
fcoml
lret
dec
js
pop
call
jge
xor
jne
repnz
jnp
mov
sar
sub
dec
xor
jl
std
in
jo
test
int3
dec
pop
mov
into
and
or
jmp
ficomps
pop
test
cmp
xor
lods
das
mov
adcl
adc
mov
adc
cli
push
movl
jg
and
mov
add
dec
imul
or
mov
in
test
adc
incl
js
sbb
out
pop
or
stc
push
stos
jbe
sub
sbb
cmp
std
mov
mov
cwtl
pop
mov
mov
sub
gs
dec
xor
daa
adc
inc
sub
jns
sahf
stos
mov
aaa
mov
sbb
pushf
out
mov
pop
pop
clc
imul
jbe
sbb
mov
hlt
rolb
adc
fcoml
incl
jg
jne
sub
shl
inc
xchg
cmpb
in
jp
pop
roll
inc
push
xchg
lcall
ret
lcall
popf
insb
in
mov
dec
xchg
iret
jp
or
clc
mov
mov
into
pop
xor
xchg
mov
mov
loope
mov
jo
paddsb
jne
lahf
dec
lcall
pop
fdivrs
daa
fistl
test
mulb
in
sbb
or
test
sub
adc
mov
sbb
pop
cli
dec
fstpt
orb
mov
inc
in
xchg
imul
mov
pop
jo
mov
xchg
jecxz
push
adc
in
mov
push
stc
push
jecxz
cmpsl
notb
ljmp
jmp
push
sub
mov
push
xchg
jecxz
jl
push
pop
lds
xor
insl
mov
sbb
mov
scas
stc
fistl
mov
ss
mov
mov
pop
xorl
xchg
ljmp
rcrb
jp
or
pop
xchg
sbb
int3
adc
ret
cmp
lcall
iret
or
mov
sub
cmp
lods
xchg
cmp
int3
jp
or
rol
adc
dec
sub
jp
or
imul
in
adc
xor
push
jp
loope
dec
sbb
or
data16
aas
mov
or
mov
sarl
xchg
sbb
insl
jb
inc
push
push
lods
out
mov
jp
or
fs
dec
pop
and
ret
lcall
jnp
iret
sbb
xor
sub
aas
aad
shrb
mov
clc
lcall
pop
lds
cmp
scas
pop
pop
clc
aaa
sbb
inc
scas
dec
sti
les
inc
roll
aad
sbb
pop
shrl
xor
call
sbb
xor
inc
int3
fcoms
jp
or
mov
inc
inc
mov
and
lea
jp
pushf
pushf
movl
push
pusha
push
pushf
lea
jmp
push
jmp
or
cmp
js
add
pop
or
cmp
jmp
test
cmp
inc
adc
push
xor
mov
jmp
mov
push
jg
inc
pop
scas
ret
shl
add
pusha
cmp
push
rcrl
cmpsb
mov
std
cmp
dec
push
cmpsl
ret
dec
out
lock
xor
cmp
or
inc
adc
jg
popf
sahf
mov
and
cmp
jmp
cmc
or
dec
sbb
jp
or
mov
xor
fwait
iret
subb
pop
dec
clc
ja
mov
cmp
mov
xor
aas
mulb
int3
sarl
lods
cmp
xchg
mov
dec
xchg
dec
inc
ret
xor
into
cmp
and
add
and
shl
sub
cmp
and
addr16
mov
aad
adc
ljmp
xor
mov
dec
xchg
lahf
mov
adc
or
push
rep
fsts
lea
lcall
and
mov
test
loope
fisubrs
lahf
cltd
mov
bound
add
pop
cmp
fdivrs
push
pop
lcall
clc
inc
int
jbe
mov
or
sub
xor
mov
mov
inc
mov
imul
insl
push
add
sub
sub
ss
pop
jmp
xchg
pop
scas
ja
add
xchg
push
push
cwtl
in
jp
pop
push
lock
lods
pop
test
repz
sbb
gs
aaa
hlt
mov
lods
cli
push
xchg
and
jno
fdivs
push
icebp
addr16
movsb
in
lock
hlt
es
inc
flds
mov
pop
int
sbb
test
std
or
mov
call
data16
int
out
incb
mov
cmpb
movl
pushl
pusha
push
lea
jne
dec
sub
add
clc
not
dec
mov
inc
adc
xor
add
test
mov
stc
bt
test
pushf
call
xchg
jmp
pusha
mov
movb
push
push
movw
pushl
ret
test
mov
movzbw
or
xor
add
shl
setnp
movl
lea
mov
bt
test
pushf
pushf
cmp
pusha
lea
jbe
stc
call
shl
pop
filds
arpl
ficomps
or
stos
sarl
jae
out
mov
push
push
lods
outsl
hlt
pop
repz
xchg
mov
mov
cmp
or
les
xchg
adc
xor
sahf
sub
in
jns
test
pusha
xchg
push
test
stc
push
cmp
adc
push
inc
dec
and
sbb
out
cmp
jge
fcomps
cmp
fwait
cmpsl
sub
add
das
in
dec
jae
popa
or
stos
fnstsw
push
jle
rcl
pop
in
lahf
inc
sbb
and
movzwl
fwait
dec
add
sbb
lcall
fcmove
das
fs
add
sti
push
daa
add
ret
mov
sbb
ss
ja
lahf
cwtl
mov
stos
aaa
pop
lock
and
test
test
fwait
jae
xchg
push
out
or
or
imul
dec
cmc
jmp
dec
aad
gs
into
dec
sbb
jmp
mov
stos
sub
pop
xchg
xlat
repnz
test
push
cmp
push
jp
push
fwait
pusha
mov
dec
insb
in
fdivr
push
adc
push
lds
js
jae
insb
in
ja
push
mov
xbegin
js
push
frstor
sub
lret
cwtl
sbb
sti
add
out
adc
adc
dec
mov
ror
jno
cmp
imul
mov
imul
sbb
add
fcmovb
mov
pushf
or
aad
and
mov
imul
fcoml
xchg
std
sahf
mov
fmulp
fidivs
adc
std
dec
lods
in
mov
aaa
cld
mov
jmp
or
adc
std
pushf
fimuls
or
int
inc
mov
xchg
xchg
or
push
add
dec
je
aad
push
xor
jbe
xchg
pushf
bound
js
pop
bound
mov
or
jp
add
jnp
jmp
sti
jbe
das
push
ret
inc
in
pcmpeqd
pop
sbb
lods
pushf
cmp
pop
xchg
lods
cmpsb
ret
popf
int3
push
adc
int3
push
push
sahf
cmpsb
outsb
call
imul
insb
push
pop
mov
cmp
adc
aas
adc
push
dec
xchg
movsl
mov
adc
pop
outsl
lock
int3
bndldx
into
pop
in
sub
mov
movsb
in
adc
dec
pop
xchg
mov
push
cmp
jo
dec
xchg
into
push
sbb
push
sub
stc
jmp
sbb
add
mov
ljmp
jne
clc
stos
in
incb
lcall
inc
or
sub
sub
into
bnd
fdivp
pop
inc
jmp
or
mov
and
loope
add
adc
rcll
mov
loopne
scas
mov
test
mov
lea
call
jmp
jmp
mov
addr16
jecxz
jge
int
movsl
mov
sbb
jp
je
jmp
sbb
sub
inc
add
sub
mov
lcall
add
stc
mov
and
dec
jnp
addb
aam
loop
enter
fsubrl
mov
jmp
mov
pop
jo
push
ds
pushf
mov
push
inc
dec
and
pop
mov
cwtl
add
inc
dec
fwait
daa
cmp
loop
nop
sbb
andl
push
cli
jnp
call
outsb
retw
lcall
xchg
imul
decb
sub
add
rorl
push
dec
dec
dec
cs
push
push
add
je
cmp
push
jmp
movl
push
movw
pusha
lea
jmp
int
aaa
ljmp
insl
xchg
inc
jmp
clc
sbb
sbb
sub
test
out
push
or
jmp
lahf
leave
fdivrp
outsl
out
push
xor
mov
jbe
adc
adc
mov
call
popa
mov
call
cwtl
pop
scas
out
aam
push
cmp
cmp
call
loope
fbstp
ljmp
shlb
sbb
fwait
cs
dec
insl
aas
and
decb
js
rcrl
jp
add
repnz
push
adc
mov
jmp
rep
pushf
pushf
mov
push
movb
mov
push
lea
jmp
in
xor
in
inc
stc
icebp
lea
cld
pop
adc
fcmovne
outsl
and
jae
cltd
fyl2xp1
mov
pop
hlt
xor
jle
and
jae
cltd
mov
jmp
xchg
mov
cmc
mov
enter
in
or
daa
xchg
push
enter
hlt
out
and
pusha
or
adc
jmp
addr16
cli
or
cmpb
dec
mov
enter
mov
pop
push
and
dec
push
pop
fs
rclb
fnstsw
jp
call
setge
mov
lods
pusha
pushl
push
pushl
inc
bt
clc
push
rol
pushf
test
stc
not
push
mov
stc
sub
test
push
clc
push
shr
movb
lea
je
jmp
aam
ret
pop
loope
add
dec
sti
popa
xchg
ljmp
imulb
and
test
in
insb
push
out
aas
and
adcb
imul
nop
add
xchg
mov
mov
adc
inc
sbb
ljmp
je
dec
fwait
and
aas
rcll
push
pop
jno
lea
imul
and
sarl
sbb
inc
xchg
movsl
jp
call
out
leave
pop
ficoml
mov
add
adc
mov
inc
and
popf
call
pop
out
push
mov
dec
xchg
sub
sahf
shl
and
out
pop
sub
pushf
jb
mov
xchg
test
xlat
pop
outsl
ret
ret
push
js
jne
cs
aad
fildll
mov
pushw
icebp
in
inc
xor
push
js
sbb
es
add
or
fbstp
ret
jp
pushf
jmp
pop
or
push
lods
inc
mov
xor
sub
inc
int3
fldcw
mov
push
mov
push
pop
aaa
cmp
pop
mov
dec
push
scas
push
pop
inc
ja
and
push
dec
repnz
inc
int
aas
fcmovbe
repnz
sub
sbb
mov
repz
xor
mov
pop
packssdw
sub
or
test
pop
pop
rclb
dec
lret
das
cmp
std
into
sbb
bt
bt
pushf
add
mov
pusha
push
pushf
lea
jmp
cmp
push
sbbl
testl
out
sarl
stos
jae
cli
ficoms
pop
hlt
push
popa
jp
adc
xor
inc
dec
pusha
sub
push
add
add
out
rep
jp
jp
and
adc
and
xlat
adc
imul
and
mov
call
mov
cli
dec
loopne
lods
icebp
cld
mov
xor
push
and
cmp
insb
inc
lds
or
xchg
jp
pop
sbb
std
sbb
mov
cld
adcb
aaa
daa
push
dec
pop
inc
stos
mov
push
pushf
lods
push
ud1
cld
jb
sub
adc
mov
cmovno
js
rcrl
aam
test
hlt
or
pop
out
xchg
outsb
push
ficoms
mov
mov
xor
outsb
pusha
mov
inc
adc
jp,pn
pop
sbb
mov
push
sub
cmp
jb
cmp
pop
xor
dec
push
mov
cmp
cmp
xor
aas
mov
popf
inc
cmp
mov
or
dec
test
movsl
das
xor
pop
js
sub
inc
cmp
inc
shrl
inc
mov
pop
mov
sub
push
out
cmp
dec
test
aas
pop
inc
xorl
xchg
pop
dec
mov
mov
js
adc
cmpsb
scas
in
mov
mov
lea
jne
pusha
push
pushf
lea
call
pushf
pushf
lea
jmp
test
push
pushf
pusha
lea
je
bt
sub
jmp
adc
mov
xchg
sti
jbe
xor
add
mov
push
ds
in
or
fnstcw
sub
push
cmp
fiaddl
mov
sbb
lods
ficompl
mov
jbe
ljmp
xor
add
lods
pop
lahf
jnp
out
inc
sahf
jmp
scas
arpl
pop
fnsave
bound
mov
addr16
rclb
cmpsb
mov
dec
xchg
and
sti
mov
dec
xor
cs
insb
add
repnz
inc
ss
pushl
jle
or
in
test
aaa
and
fistps
pop
pop
xchg
fsubs
jp
and
outsb
out
push
ret
push
int3
mov
inc
dec
pop
push
and
xchg
loopne
and
lds
and
nop
mov
das
inc
pop
jbe
mov
popf
jmp
popf
push
outsl
adc
jmp
packuswb
jecxz
aam
imul
mov
push
sub
pop
imul
lcall
jp
cli
rcrl
xlat
jge
sub
add
pop
out
aaa
cmpsb
push
mov
inc
ficompl
mov
sub
testl
push
in
mov
in
bnd
push
testl
mov
nop
dec
push
fistpl
lock
sbb
sysexit
xchg
pop
fbld
xor
dec
fsubs
in
ret
xchg
cmpsb
mov
gs
bound
movsb
sub
int
lahf
push
dec
jne
or
lret
rol
cltd
inc
or
and
mov
jp
cli
jg
inc
sbb
dec
and
push
out
mov
push
cli
mov
outsl
inc
jl
mov
in
sbbl
int
inc
xchg
pop
lret
xor
arpl
jb
push
mov
fucomip
cld
or
pop
mov
pop
int
or
fcomps
cmpsl
push
mov
cli
adc
xorb
jbe
call
dec
outsb
ffreep
mov
mov
adc
js
pop
insl
int3
jns
adc
push
add
negl
ror
push
sahf
mov
ret
fstps
xchg
fisubrs
mov
jge
call
cmp
mov
inc
test
xchg
pushf
in
pop
cmp
mov
movb
and
ficoms
push
mov
pop
and
xor
ljmp
add
sub
sub
cmpsl
cs
adc
int
insl
mov
sbb
mov
jecxz
int3
inc
adc
mov
das
mov
enter
ret
ret
xchg
mov
stos
sti
call
cmc
xor
cltd
loope
mov
orb
sbbb
mov
mov
shrb
cwtl
repz
stos
pushf
lea
jmp
push
lods
pushl
cmc
pushf
call
je
movsl
repnz
loopne
inc
pop
in
jns
xchg
sbb
rcrl
jbe
xchg
leave
decl
adc
or
jge
and
decl
les
out
or
xlat
popf
jns
mov
fstpl
je
adc
in
aaa
in
leave
xchg
and
call
mov
fmull
aad
lret
pop
inc
ret
je
xchg
xor
sahf
ficomps
mov
jb
pop
dec
loopne
imul
and
cmp
stc
inc
sbb
cmp
into
jo
call
lock
leave
jp
inc
lods
mov
sarb
ficompl
lds
pop
in
je
push
mov
pop
pop
cwtl
jno
insl
int3
push
mov
pop
jmp
adc
test
jne
fcoml
pop
fnop
xchg
jne
fwait
jbe
sub
jecxz
inc
imul
xchg
jge
shlb
sub
push
mov
mov
je
fists
fisttps
mov
sti
pushf
lret
enter
js
push
mov
adc
jp
imull
cmp
xor
leave
pushl
movw
movb
mov
lea
jmp
pushl
adc
movb
pushl
ret
aad
mov
sbb
cltd
jle
or
and
lcall
xchg
and
fmull
ss
xchg
xchg
mov
repz
fwait
xchg
and
add
xor
sbb
jge
xor
push
pop
pop
adc
adc
dec
in
jb
or
jae
cld
lds
mov
jns
pop
pop
int
cld
xor
xchg
sbb
jns
or
jo
inc
push
aam
jp
notl
int
add
inc
push
inc
outsl
insb
outsl
jb
add
adc
dec
fcoms
clc
pop
dec
stos
jecxz
in
xchg
add
scas
sbbb
cmpsl
int
adc
pop
repnz
cmpsl
pushf
in
test
bound
into
jbe
out
lods
popf
xor
jmp
push
fisubs
outsb
add
xchg
xor
jbe
out
imul
scas
dec
xlat
sub
xchg
xor
jmp
insl
inc
mov
jae
and
xchg
adc
leave
xchg
pushf
lods
add
popa
sbb
push
inc
sbb
mov
mov
data16
adc
bswap
xchg
sub
pop
or
mulb
bound
xchg
leave
and
data16
mov
or
repz
xchg
adc
sub
mov
lret
pop
cld
push
dec
add
xchg
adc
sub
adc
ja
bnd
push
imul
rorb
jb
ret
jmp
mov
dec
inc
or
mov
xchg
leave
cltd
jno
sub
sub
mov
mov
btr
push
cmc
mov
xadd
push
lea
or
not
mov
call
sub
pusha
bt
cmp
push
mov
call
add
inc
js
je
jb
arpl
jae
adc
cmp
daa
push
and
in
pop
scas
push
mov
jl
mov
add
xor
push
adc
jecxz
ja
mov
hlt
inc
call
xor
jae
ret
inc
dec
cmpsb
hlt
mov
mov
xor
adc
xchg
and
jno
sub
fs
and
in
outsb
loope
jecxz
pop
in
test
scas
mov
push
cmp
out
pop
test
jp
test
cmp
and
cld
movsl
subb
aaa
or
repnz
add
push
sbb
ljmp
out
pusha
or
pop
imul
mov
and
xchg
jbe
sti
and
pop
adc
add
mov
fs
jne
adc
cmp
lret
xchg
loop
jno
sbb
sbb
nop
add
mov
add
dec
xchg
jo
jecxz
leave
push
lea
mov
xorl
mov
pop
test
loope
mov
mov
out
cmp
into
adc
pop
xor
mov
jp
hlt
fbld
arpl
xchg
add
sbb
lods
cmp
mov
pushf
dec
jns
inc
xor
daa
jo
mov
sub
adc
xor
dec
popf
outsl
pop
pop
pop
sbb
pop
push
push
mov
pop
adc
xorb
std
mov
xchg
xor
or
xchg
inc
and
mov
adc
pop
lret
sbb
or
inc
inc
lea
in
cmp
je
lret
jp
repz
ss
push
xchg
mov
les
movsb
int3
das
popf
std
xor
inc
xor
xchg
push
jle
mov
or
xchg
add
xchg
push
pop
lea
out
shll
inc
cmp
mov
xor
sahf
dec
pop
sub
das
cwtl
and
shll
jno
mov
pop
pop
clc
fwait
iret
and
in
add
nop
mov
and
jb
pop
clc
inc
jp
repz
push
fidivrl
xor
in
dec
repnz
or
and
mov
lret
mov
xor
out
aaa
imul
rcr
sub
and
pop
and
jge
fidivrl
and
inc
pop
cmp
pushf
inc
jbe
mov
push
daa
aaa
iret
sub
jge
movsb
int3
loopne
xchg
ljmp
jns
xchg
ja
std
cli
jg
repz
add
ret
andl
xor
mov
repnz
and
rcrb
outsb
test
mov
jb
xchg
dec
mov
dec
mov
lods
out
jle
jb
add
dec
bound
repz
cmp
sbb
rorb
sbb
push
fstps
push
sahf
imul
adc
rcrb
int3
arpl
fs
xor
ret
scas
aaa
xchg
jnp
test
cmp
enter
push
loope
xchg
scas
jmp
mov
ret
cmp
jo
int
test
hlt
mov
xor
movsb
jp
repz
data16
into
dec
cltd
xor
mov
pop
test
jns
cmc
xlat
cmp
jp
int
cwtl
jle
neg
ret
jp
repz
push
and
and
xor
push
in
repnz
jb
adc
push
call
xchg
jge
xchg
jbe
jmp
fildll
pop
or
test
pop
jne
mov
push
xor
lret
cld
addl
in
pop
in
lods
cmp
push
jp
icebp
out
rcll
cld
dec
mov
loopne
aaa
jbe
add
or
loop
mov
pop
sub
jbe
fs
insl
sbb
imul
mov
insl
cvtps2pd
loopne
push
fld
pop
mov
cmp
pop
in
xlat
cs
mov
sbb
dec
cld
cmpsb
cmp
xor
push
push
jmp
call
in
icebp
cli
shr
jne
add
jns
sar
pop
add
jmp
maxps
push
fxch
mov
mov
sbb
add
fdiv
xchg
and
ja
add
ss
icebp
dec
pop
xor
lahf
dec
shrb
push
sub
clc
sbb
mov
into
cmp
lret
add
ror
ss
rcl
and
pop
hlt
cmp
lret
mov
xchg
call
stos
mov
loope
fisttps
lock
lea
out
adc
mov
mov
pop
xchg
or
add
movsl
jl
dec
push
pusha
insb
ss
push
jp
lock
mov
push
popf
cmp
sub
rorl
or
push
int
pop
or
cmp
cmp
ret
sub
cs
push
fwait
in
mov
sbb
pop
mov
popf
call
arpl
or
jp
sub
dec
lea
xchg
inc
push
fstpt
and
inc
scas
mov
add
std
push
push
adc
jb
jle
aam
mov
lahf
jp
out
lea
imul
push
xor
mov
int
loop
xor
aad
jnp
loopne
adc
ljmp
jne
xchg
jns
adc
inc
or
rcrl
lea
pop
movsb
dec
ret
outsb
dec
clc
xchg
add
lock
mov
fistps
stc
inc
and
pop
int3
mov
dec
int3
xchg
outsb
adc
outsl
lods
ds
xchg
fbld
mov
fdivrs
out
or
in
call
insl
pop
dec
xchg
gs
cltd
mov
mov
insb
rcrb
in
lods
hlt
cltd
pop
xchg
jmp
fbld
adcl
xchg
jg
cltd
pop
xchg
add
push
push
mov
jbe
rcr
adcl
xor
leave
add
xchg
sub
test
stc
and
popf
gs
push
add
pop
outsb
pop
out
pop
jmp
sbb
xor
dec
push
dec
jp
out
rorl
sub
outsb
add
pop
inc
pop
push
negl
fwait
jge
dec
arpl
xchg
sub
adc
mov
or
dec
test
inc
cli
out
mov
popa
repnz
loop
int
cli
sbb
sub
ljmp
mov
mov
adc
dec
and
lret
mov
jb
arpl
lock
cmp
adc
jp
out
fcoms
cmpsl
sbb
adc
jae
inc
imul
mov
pop
adc
ret
pop
jp
jns
fld1
dec
shll
das
cltd
pop
imul
sub
js
or
and
mov
push
notl
int3
or
or
cld
xchg
out
hlt
push
fcomip
test
pusha
cmp
pop
fisubl
hlt
out
mov
dec
adc
nop
adc
dec
adc
sti
aas
dec
push
in
mov
mov
mov
and
inc
bsr
sar
jmp
daa
sub
sbb
jo
fidivrs
cmp
andl
hlt
lahf
sbb
xor
pop
fmuls
pop
push
and
pop
mov
shll
push
in
mov
inc
mov
loopne
enter
mov
mov
scas
or
push
in
fsubrl
or
in
sahf
and
ljmp
cmpsb
out
mov
out
push
push
jb
ret
not
mov
pushf
sub
test
cld
jmp
inc
test
dec
les
mov
fs
sti
insb
mov
in
lods
cld
mov
push
push
shl
mov
faddp
testb
enter
jno
push
push
rolb
ficomps
aas
sbb
fidivs
cmp
testb
mov
xor
add
sbb
cmp
fildll
adc
orl
adc
repnz
jg
bound
pop
dec
sbb
test
jecxz
jo
and
sbb
push
dec
fs
stos
mov
dec
adc
jp
in
cli
int
jae
ret
mov
adc
push
hlt
sbb
lods
push
pop
mov
cmpsb
stos
jo
enter
outsl
adc
movsb
cmpsb
pop
mov
add
scas
sbb
push
xor
shrl
mov
cmp
inc
push
push
nop
mov
pop
ss
jecxz
out
pusha
popa
xchg
stos
mov
hlt
push
mov
cmc
iret
adc
cmc
movsb
push
mov
xchg
xor
nop
insl
outsl
cld
rcr
lcall
fucomp
pop
pop
cmc
mov
fbstp
std
adc
test
loopne
cmpsb
mov
mov
lcall
mov
push
jmp
cmpsb
sbb
cmpsb
sbb
negb
push
sub
jl
incl
fs
mov
cmc
maskmovq
loopne
mov
push
nop
pop
cmpsb
mov
push
lock
jmp
imul
mov
or
jno
dec
jbe
mov
cltd
lods
aad
loopne
pop
inc
mov
push
repz
int3
aam
outsl
xor
sbb
fimuls
scas
mov
faddl
add
stos
cmp
sub
inc
sbb
adc
mov
inc
jl
inc
pop
mov
xchg
lods
push
inc
mov
jp
out
pop
cmp
daa
rcl
mov
xchg
lods
push
xor
or
rcl
imul
push
cmpsb
repz
inc
clc
jp
cmp
mov
rorl
push
in
pop
movsl
daa
fstpt
xchg
insl
out
ljmp
adc
inc
int3
pop
push
ljmp
pop
jo
loop
cmp
scas
pop
mov
mov
cmp
sbb
testl
cmp
or
jp
ljmp
imul
xor
movsl
sysenter
pop
add
jle
jno
rcll
cmc
xor
cld
ja
iret
mov
lahf
fsubl
cmc
xor
int
sbb
outsb
popa
inc
mov
les
xlat
add
ja
or
jmp
call
dec
stos
mov
nop
push
jns
es
movb
mov
pop
mov
lahf
imul
fiadds
aam
lods
pop
xor
leave
into
xor
adc
stos
cmc
decb
aas
ret
data16
ljmp
sti
cmp
mov
or
xlat
lds
icebp
mov
pop
mov
push
fsubrp
mov
xchg
out
mov
mov
mov
int
imul
lock
mov
leave
fcmove
les
out
fstps
shll
push
test
sub
test
cmp
insb
aaa
pop
mov
std
mov
mov
stos
add
jl
and
jmp
leave
imulb
sub
enter
mov
test
add
jmp
add
pop
and
xchg
pop
fwait
push
imul
cmpl
nop
stos
pop
mov
out
cmp
add
outsb
pop
in
mov
inc
add
cmc
inc
stos
cmp
filds
mov
ss
xchg
mov
push
in
sti
inc
out
out
jecxz
xor
xlat
mov
ds
inc
sub
xchg
jl
xcrypt-ecb
cmpsl
dec
adc
add
rclb
loop
je
gs
cmpsb
pop
mov
pop
ficomps
jbe
inc
mov
or
mov
push
insb
cmc
cmp
and
lock
stos
push
inc
out
clc
test
nop
adc
add
push
movsl
mov
out
mul
ficoml
fisubs
add
loope
mov
add
gs
lods
out
cmc
cld
daa
stos
or
fildll
jo
stos
xor
add
insl
inc
sub
fnstenv
xor
iret
pop
mov
into
cmp
call
mov
imul
inc
push
xorb
in
xchg
fldenv
popf
call
les
xlat
cld
xor
dec
shl
add
test
testb
xor
stc
in
repnz
je
push
jmp
loopne
ss
adc
mov
cmp
hlt
mov
hlt
add
mov
and
add
cmpl
sti
xor
mov
aaa
mov
jl
push
outsb
loopne
cld
and
sbb
mov
inc
pop
pop
mov
push
pop
cmp
push
sub
xor
incl
cmp
push
inc
mov
sub
lahf
fnstcw
dec
mov
iret
adc
inc
scas
jp
jns
pop
mov
xchg
add
cmp
lahf
adcl
xor
add
mov
mov
xchg
jbe
jmp
pusha
adc
add
xor
add
fnstcw
out
andl
sub
mov
push
mov
add
adc
gs
lods
dec
mov
rcrl
mov
add
outsb
dec
mov
pusha
xchg
test
cmpsl
mov
pushf
push
int
cmp
aaa
mov
push
fadds
lods
pop
call
int
push
enter
nop
fwait
imul
dec
sbb
add
jp
out
mov
fstpl
cmp
sub
push
clc
loope
xor
sub
loop
data16
dec
aam
lcall
je
in
loop
loop
lcall
jno
insb
cmp
cli
xchg
iret
les
push
pusha
mov
sbb
es
xchg
or
mov
cli
push
pop
xor
inc
adc
jne
inc
adc
arpl
outsb
lret
push
lea
dec
mov
jns
shl
mov
and
cmp
mov
cmc
int
popa
xchg
aaa
shlb
lahf
and
mov
or
push
sub
add
out
daa
test
inc
mov
lods
sti
lcall
xchg
cltd
stos
je
outsl
cltd
sub
mov
mov
fisttpll
jnp
cmp
cmp
sub
xor
lret
sbb
xchg
mov
sub
fnstenv
mov
out
aaa
dec
test
sub
mov
adc
icebp
adc
jmp
add
ret
sub
jne
dec
aad
lods
repz
mov
adc
jmp
push
mov
mov
push
movsbw
bswap
mov
push
mov
pushl
ret
pushf
lea
ja
ror
call
push
faddl
pop
nop
and
push
mov
lret
repz
xorb
sub
shlb
push
inc
add
xchg
out
shlb
xlat
je
pop
xchg
pushf
sub
lods
ret
fwait
aaa
cld
xlat
aad
mov
arpl
mov
mov
mov
push
loope
cmp
icebp
push
addb
xchg
insl
jg
arpl
int
pop
mov
out
std
push
and
or
fsubr
or
shlb
in
andl
mov
jp
in
es
stc
sub
pushf
pushl
lea
call
test
pushf
cmp
mov
call
pushf
inc
pushl
jmp
jp
jae
test
push
cmp
pusha
call
adc
pushf
pushl
pushf
pusha
pushl
ret
cmpsb
enter
dec
xorb
push
or
sti
cmpsl
dec
das
pop
xor
sub
rcrl
das
sarb
test
mov
mov
adc
mov
ja
dec
sahf
out
jnp
push
test
mov
cmc
mov
stos
ss
cli
rolb
mov
leave
adc
adc
arpl
jbe
sbb
dec
bound
dec
xchg
stos
cs
out
xchg
popf
cmpsl
cwtl
or
cld
mov
cmc
loop
aad
loopne
movsl
scas
xor
push
ficoml
icebp
cmp
pop
loope
mov
aas
mov
cmc
or
shlb
jae
cmp
dec
fldenv
arpl
sbb
jp
push
leave
mov
push
push
fsubrs
push
loope
rcrl
cmpsl
daa
push
jne
add
scas
in
push
enter
aaa
or
aaa
aam
pop
mov
mov
cwtl
dec
add
jge
mov
daa
ss
dec
dec
pop
les
sub
int3
fstps
xor
cltd
jp
jecxz
inc
jae
ljmp
pop
aad
push
cmp
inc
mov
mov
mov
jge
subb
leave
je
jo
rcrb
mov
pop
fidivrs
int3
ss
and
nop
outsl
mov
bound
int3
fdivrp
mov
lcall
jbe
mov
iret
inc
cmp
insb
sub
jo
cmpsb
imul
cmpsl
sub
jge
dec
mov
or
lea
jae
stc
bt
cmp
jmp
outsl
insb
xor
cs
insb
add
stos
dec
add
mov
mov
lea
jmp
cmp
mov
mov
add
jmp
in
and
movsb
bound
lcall
sarb
add
es
pop
out
inc
mov
jb
in
jl
popf
xor
iret
cs
out
mov
in
jg
jnp
or
sub
or
sbb
mov
jg
andl
add
mov
loope
pop
fldt
pop
and
xor
jp
jecxz
or
push
push
lea
jae
ror
mov
movsbl
mov
movsbw
neg
or
bsr
mov
cmp
stc
push
xor
pushf
stc
clc
repnz
pusha
pushf
mov
movl
lea
jne
lea
bts
mov
shl
sbb
sub
xor
inc
and
mov
call
pusha
mov
jmp
jmp
mov
jae
movsb
popa
inc
enter
faddp
xor
sub
cmp
mov
dec
xor
test
jmp
jmp
ffreep
aam
cmpsb
mov
sub
int
nop
outsl
sub
lret
mov
sbb
pop
mov
repz
jecxz
lahf
ss
push
fistpl
dec
xlat
jmp
lea
push
pusha
sub
sub
pop
xchg
repnz
sub
push
cmc
push
mull
call
xor
adc
sbb
ss
mov
xor
loop
icebp
sbb
sub
jl
and
fisttpl
xor
sub
jp
adc
popf
and
std
leave
jp
pop
jnp
ja
mov
mov
shll
or
popa
inc
jp
add
pop
jns
mov
jl
adc
adc
pop
or
sbb
into
sbb
adc
movsb
outsb
lds
hlt
pop
pop
push
into
or
pop
push
and
xchg
inc
add
push
mov
pop
les
orl
testb
inc
lcall
pop
xchg
jbe
sbb
fldt
rol
sbb
mov
rcr
js
sub
repnz
fidivl
fnstenv
pushf
sbb
xchg
jne
mov
mov
sbb
dec
sub
and
int3
enter
pushf
jne
pop
sahf
adcl
jp
fisttps
inc
mov
xchg
jge
inc
testb
mov
mov
push
lods
xor
hlt
ret
push
mov
stc
lods
xor
lods
mov
repnz
lods
cli
cmc
hlt
rclb
adc
adc
leave
adc
cwtl
push
insl
sbbb
sahf
call
mov
out
mov
icebp
mov
daa
enter
sbb
xor
aad
std
mov
lret
or
filds
loope
aas
jle
xlat
adcl
imul
mov
xlat
mov
repz
jp
ffreep
adc
fs
je
clc
bt
stc
pushf
cmp
jmp
xchg
cmp
clc
insb
ja
and
insb
sbb
out
xchg
jnp
push
popf
out
xor
call
and
lahf
sbb
mov
or
aam
call
mov
and
jnp
in
xchg
inc
inc
or
push
dec
sub
cmc
daa
ja
cmp
mov
imul
mov
addr16
cmp
insb
scas
adc
pop
xlat
in
ss
adc
jecxz
push
incb
mov
or
jecxz
pop
push
call
inc
cmpsb
sbb
pusha
jbe
inc
inc
add
jmp
daa
clc
mov
in
arpl
mov
insb
dec
inc
add
mov
daa
movsb
mov
and
inc
loopne
test
xchg
out
enter
sub
imul
mov
insl
xlat
cltd
mov
insb
test
aam
movsl
mov
fdivrl
push
dec
les
inc
fisttpll
pop
adc
das
mov
scas
xor
aaa
in
xor
cmp
lods
pop
xchg
pop
push
and
dec
cmp
dec
mov
inc
push
push
data16
add
pop
arpl
xor
mov
pushf
pushl
pushl
lea
jmp
and
scas
push
sbb
pushf
sub
pushf
shll
ret
call
fistps
lret
jl
pop
cwtl
pusha
pop
add
xor
sub
ja
xchg
mov
push
fldl
cmc
pop
ja
movsb
addb
jmp
push
xchg
divb
mov
and
jl
and
and
mov
jae
ja
sub
pop
dec
mov
repz
xor
mov
mov
and
mov
sub
cmp
push
adc
sbb
pusha
dec
mov
lea
jne
shl
jg
dec
mov
stc
cmp
pushf
call
fldt
and
mov
pop
add
sbb
cltd
jge
adc
popa
out
jge
lea
cmp
xor
out
or
sahf
jge
or
and
pop
dec
pop
mov
test
push
push
jne
push
scas
xchg
xor
xchg
jge
adc
push
inc
mov
ror
mov
push
aas
mov
scas
jp
add
insb
mov
inc
xor
mov
cmp
call
jmp
adc
pop
fldcw
adc
imul
bound
cmp
add
or
lea
xchg
dec
mov
sbb
call
fmull
jns
outsb
jae
mov
fmulp
xor
hlt
lds
jne
flds
adc
cmc
lds
xchg
fsubrl
out
dec
push
mov
mov
call
or
push
lahf
adc
mov
xchg
outsl
cmp
cli
adc
mov
lods
and
mov
inc
dec
dec
cmpsb
and
dec
sbb
icebp
hlt
adc
fldl
inc
jp
sbb
clc
adc
mov
sti
jmp
inc
out
cli
and
jmp
lret
adc
and
jl
mov
add
jns
push
loope
scas
jnp
jmp
adc
in
jecxz
mov
and
cltd
mov
pop
loope
sbb
push
dec
ret
inc
or
mov
mov
sub
fnstenvs
std
nop
out
jnp
insb
and
mov
bnd
aam
mov
mov
or
add
xlat
sahf
jecxz
lret
adc
pop
jmp
cmp
mov
add
adc
out
mov
add
mov
cltd
clc
test
scas
das
mov
fnstenv
in
aas
fs
clc
shlb
aaa
insl
jle
adc
mov
data16
lds
cs
test
inc
mov
dec
xor
shr
dec
sub
sub
mov
xchg
inc
add
or
js
imul
pop
loop
stos
dec
int
jno
movsb
jnp
jle
push
lods
cmp
jp
movsb
jl
outsl
inc
adc
es
fmull
xchg
cld
ss
ja
movsb
xor
xchg
or
popa
cwtl
aaa
push
fistpll
jg
pop
sbb
add
xor
dec
repz
mov
mov
mov
loop
rorl
outsb
cli
rcr
jae
add
test
mov
lods
ljmp
inc
sbb
push
mov
fisttpll
adc
ficoms
cmp
iret
inc
lret
rclb
ljmp
sub
leave
fsts
pop
shrb
sub
stc
add
ficompl
push
repnz
and
setno
inc
pushf
jmp
cmc
clc
ror
bt
not
clc
jmp
int3
push
cmp
pop
jmp
mov
scas
fisttpll
jecxz
xor
test
scas
addr16
jae
movsl
add
fs
scas
push
lcall
push
gs
shll
nop
sahf
xor
push
pop
mov
jge
mov
mov
aas
lock
add
push
fsub
mov
int
push
and
pop
cmp
fisubl
stc
out
sub
les
int3
test
ja
xor
push
jno
mov
rcr
push
in
lcall
adc
fsubr
insl
jno
jo
jle
mov
iret
loope
or
sar
cwtl
loop
mov
mov
sub
lahf
scas
push
test
adc
adc
push
push
cmc
daa
in
xor
adc
bound
fwait
push
fcoml
out
sub
fldenv
push
pop
pop
outsb
lods
test
jp
sbb
fsub
add
mov
mov
aam
and
sar
pop
ja
les
daa
jp
add
push
sub
ja
push
iret
pop
sti
inc
out
rolb
ret
push
fldl
pop
jp
flds
repnz
pop
inc
gs
test
push
fcmovnb
dec
sbb
xor
pop
dec
push
popf
icebp
sub
inc
sub
arpl
outsb
je
jb
jo
jb
imul
jo
mov
imull
jl
iret
mov
dec
scas
fucomi
aam
jbe
dec
insb
gs
insl
and
call
jbe
cmp
lea
inc
adc
outsl
pop
mov
imul
jl
into
pop
shll
insb
sub
ja
stos
sbb
adc
sub
cs
jecxz
frstor
mov
pop
lods
mov
and
jp
fldcw
out
sar
mov
add
xchg
xor
inc
mov
cld
lock
pop
push
mov
add
aad
push
sbb
mov
lahf
loope
clc
lock
mov
aaa
subl
jecxz
mov
fimuls
daa
mov
fldenv
xor
or
mov
pushf
mov
pop
sbbb
push
mov
xor
mov
dec
js
or
outsl
hlt
add
pop
out
in
add
int
push
add
xlat
icebp
jmp
cmc
sub
lea
jg
pushf
mov
inc
lea
call
jmp
addb
das
call
fldt
inc
xor
add
adc
gs
sub
inc
push
dec
xchg
jp
mov
fldt
rorl
jb
in
cmpsl
lahf
pop
mov
decl
sbb
enter
pop
lods
adc
nop
adc
arpl
push
adc
int3
notb
repnz
pop
test
sbb
aad
cli
test
lds
std
xor
inc
addr16
aam
arpl
sbb
lret
mov
mov
movsl
xchg
cmp
pop
outsl
out
xchg
cmp
adc
sub
popf
aaa
test
and
adc
mov
rol
adc
aas
push
and
sbb
lret
mov
out
jle
push
adc
aas
lods
jp
xlat
inc
push
les
adc
fs
je
xadd
neg
lea
mov
btc
call
dec
sub
jno
jnp
in
inc
push
add
mov
add
orl
lret
jle
hlt
mov
fnstcw
movsl
sub
jmp
cld
pop
clc
jno
aas
call
in
cmc
jle
scas
mov
daa
jg
dec
lcall
inc
sbb
push
sbb
addl
or
dec
sub
xchg
pop
stc
insl
int3
aad
and
xor
outsb
lods
jne
jp
mov
data16
cmp
dec
shll
sub
mov
mov
mov
lods
leave
aad
mov
dec
pop
xor
mov
dec
cmp
add
nop
mov
leave
mov
or
mov
in
mov
or
add
pop
outsl
jp
aad
xchg
movsl
jbe
jbe
mov
out
fbstp
test
add
fs
jp
aad
imul
aam
decl
test
mov
scas
sbb
out
rcrl
test
adc
mov
rep
mov
mov
cmpsl
mov
lahf
stos
inc
add
sbb
daa
call
sub
jmp
lock
push
out
xor
mov
inc
in
lret
add
xchg
lret
inc
outsl
testb
adc
jne
data16
inc
ljmp
push
in
xor
xor
inc
or
mov
jp
aam
shll
aas
aas
and
xor
or
mov
lret
testl
sub
rcll
inc
imul
lods
xchg
add
sub
xchg
call
insb
inc
xchg
jnp
adc
or
mov
test
sbb
cmp
addr16
scas
ja
push
inc
mov
negb
lret
setp
insb
xor
xchg
adc
inc
sbb
aad
fidivrl
sar
btr
dec
sub
push
shr
rcl
shld
mov
jmp
adc
pop
ret
xor
bound
lahf
mov
xlat
inc
ja
and
cmp
mov
xlat
in
push
add
push
into
subb
into
sti
jo
jmp
xor
push
jp
push
mov
and
orl
int
fld
pop
out
mov
lcall
jmp
push
testb
shrb
add
test
out
cli
rcll
or
pop
loope
jp
shrl
mov
and
in
fidivrl
adc
or
stos
push
push
mov
mov
or
jecxz
jl
sub
pop
jp
rcr
adc
inc
clc
xor
in
and
ficoms
sbb
data16
hlt
jp
sarl
jns
and
lods
and
pushf
push
in
rcll
int3
jecxz
mov
jg
inc
clc
xor
cmpsl
shll
sbb
sub
shrl
stos
repnz
les
in
out
orl
fistl
add
adc
xchg
add
or
in
mov
inc
dec
lcall
clc
push
pop
dec
sahf
insl
dec
fs
cltd
pop
mov
aam
repz
mov
cmp
call
add
dec
insb
gs
outsb
imul
add
stc
push
test
sbb
push
inc
imul
iretw
nop
es
xchg
sar
test
lds
std
mov
pop
nop
and
sbb
mov
and
in
adcl
xchg
push
loope
mov
lret
cmp
sti
cmp
idivl
adc
jmp
cmp
push
pop
aaa
jp
shll
jns
popa
adc
cmp
or
call
out
pusha
dec
jl
sub
jns
pop
decb
arpl
sub
pop
loope
jmp
decb
es
mov
jmp
js
ret
rcrl
xchg
push
lock
jne
out
movsb
js
out
les
leave
adc
shll
mov
frstor
aam
xchg
jo
push
fcomps
mov
outsb
aad
add
sbb
push
test
adc
insb
mov
int3
or
lcall
scas
cmp
adc
and
cmc
sbb
push
int3
jne
inc
mov
sbb
xchg
insl
cs
push
inc
enter
int
clc
sbb
das
pushf
lcall
andb
or
adc
jle
mov
jp
pop
mov
jge
mull
out
inc
stos
mov
js,pn
inc
lret
test
fnstenv
fisubs
cmp
jo
cmp
jp
rcll
cmp
mov
movw
lea
jae
pusha
pushf
mov
lea
jne
push
pusha
mov
stos
pushl
pushl
pushf
lea
jmp
xor
push
dec
mov
rorl
lret
mov
pop
mov
cwtl
sbb
pop
xchg
aad
push
mov
scas
mov
bound
outsb
adc
sub
xchg
push
add
dec
lret
push
mov
jnp,pt
mov
daa
jle
jno
int3
cmp
inc
inc
xor
incl
filds
les
andl
xchg
outsb
push
orl
fisubrs
xchg
pop
push
mov
cmc
mov
inc
xor
int
sbb
jp
xchg
mov
sub
cmp
add
adc
andb
sbb
shlb
mov
adc
aam
adc
pop
adc
in
jno
popa
add
sub
xor
dec
xchg
xor
aam
out
lods
int
je
mov
xor
fs
out
cltd
fiadds
lret
pop
jb
jle
pop
in
inc
pop
bound
xchg
insl
adc
fistps
stc
shll
xor
scas
addl
pushf
sub
jp
shll
and
push
lea
jmp
mov
pop
xchg
divb
push
arpl
add
adc
dec
push
movsb
push
lar
call
inc
insl
jle
call
orl
movsl
sbb
ret
adc
imul
cmpl
imul
cmp
scas
pop
popa
shlb
hlt
sub
push
inc
inc
movsb
jnp
lods
mov
int3
sbb
clc
mov
lds
rcrb
push
pushf
movl
movl
movl
pushf
movb
lea
jmp
sbb
xchg
mov
or
sub
andl
icebp
shrl
arpl
roll
movsl
fs
push
jns
ficoms
cmp
adc
fnsave
push
arpl
sbb
sub
jmp
lds
loope
cmpsl
stc
sub
mov
cmp
lahf
add
xor
push
stos
mov
or
mov
mov
mov
pushf
push
jmp
pop
sbb
icebp
pop
hlt
push
fisttps
lret
pop
or
lret
stc
mov
pop
insl
push
xlat
cs
mov
rol
imul
imul
adc
sahf
cmp
lock
shrb
xor
imul
call
inc
add
fcomi
add
rcrb
inc
adc
push
dec
dec
dec
add
add
and
lret
sahf
imul
xchg
push
xor
in
and
insb
jo
ret
mov
ret
push
sub
scas
test
or
dec
adc
dec
mov
cmp
cmp
cli
dec
inc
popf
in
xchg
xor
enter
adc
pop
dec
pop
mov
push
inc
je
and
mov
mov
lcall
xchg
xor
jmp
pop
int
pop
xchg
inc
ja
stc
pop
inc
inc
cmp
in
push
enter
push
push
xor
add
fwait
int3
shll
lahf
or
dec
ret
and
sub
xchg
int3
aam
ret
cs
xor
stc
imul
dec
mov
inc
inc
clc
pop
cmc
out
imul
ss
pop
les
and
pop
push
sahf
imul
and
cwtl
mul
loope
icebp
mov
cmpsb
pop
insb
sub
ficoml
pop
incl
cwtl
jge
lcall
add
imul
cmp
and
dec
cs
mov
xor
jp
sub
sub
imul
xlat
adc
ss
adcb
enter
cltd
sub
roll
inc
inc
xchg
dec
mov
fstpl
lret
fwait
dec
and
mov
mov
jno
and
mov
mov
in
xor
sbb
dec
lods
push
out
fistps
mov
or
ja
fiaddl
jne
push
insb
lock
mov
inc
aas
sbb
dec
xor
push
iret
pop
js
cmpsb
xor
pop
rolb
dec
cmp
ljmp
enter
mov
jecxz
mov
mov
jmp
sub
inc
adc
xchg
aas
pop
cs
pusha
stos
mov
jnp
sarb
incb
cmc
cmc
push
jns
icebp
push
fs
or
pop
jl
or
lahf
cmp
mov
sti
shrb
or
rol
negb
test
sar
push
out
inc
inc
xchg
aas
clc
xor
mov
es
jae
jge
ret
leave
loop
fistpl
dec
pop
add
mov
jp
mov
dec
cltd
mov
mov
inc
dec
lods
arpl
ret
and
add
sti
dec
inc
pop
mov
dec
or
loop
dec
adc
js
mov
xchg
dec
mov
push
xchg
ss
aad
jl
pop
data16
pop
xor
pop
inc
pop
pop
test
sarl
sahf
popa
inc
jb
imul
mov
add
and
mov
das
pop
xchg
mov
push
jp
imul
shrb
fisubrs
iret
cmp
mov
repz
sbb
ficoms
sub
push
testb
fistps
call
sbb
sbb
dec
cmp
cmp
inc
cmp
add
fisubl
xor
sarb
inc
rcl
lret
mov
rorb
mov
pop
std
cmp
mov
cmc
jle
daa
xchg
sbb
inc
adc
dec
call
popa
dec
mov
sbb
xor
jp
dec
inc
xor
jg
and
push
rcl
or
test
rorb
inc
and
or
add
sarb
aam
jbe
pop
enter
mov
push
ret
jge
mov
cmp
pop
mov
cmpsb
pop
xlat
iret
aaa
dec
lahf
mov
add
subl
pop
sarb
imul
dec
jmp
ret
repz
jp
lcall
dec
popa
lcall
or
lret
call
or
rcl
or
or
pop
xchg
rol
sbb
leave
xchg
mov
bound
in
sbb
cmp
jne
fistpll
negl
pop
push
imul
enter
xchg
cli
gs
pusha
pop
fidivl
dec
aam
es
pop
lret
testb
inc
cli
cs
push
lds
xor
jp
mov
idivb
aaa
inc
lcall
int
xchg
sbb
subl
add
mov
push
cwtl
stos
lahf
orl
push
sbb
ret
inc
cmp
dec
sbb
adc
cs
xchg
sub
push
daa
mov
inc
adc
mov
lds
arpl
cltd
in
inc
dec
add
mov
aas
mov
xchg
and
xor
das
inc
fdivrs
and
inc
pop
rcll
mov
jno
or
pushw
fidivrs
aad
xchg
pop
mov
push
add
pop
mov
jne
inc
pop
xchg
jl
adc
lds
fwait
mov
fidivl
stos
add
ljmp
rcrl
sub
call
sub
push
sub
outsb
das
or
es
sub
or
jbe
aas
pusha
pop
jg
lods
lahf
xchg
jns
pop
pop
popf
cmp
cmp
and
nop
daa
adc
je
xor
jp
sbb
jmp
movb
out
aas
fldt
stc
inc
arpl
push
rcl
or
push
inc
and
or
jns
cmp
and
pop
inc
sbb
push
ficoml
lret
lods
adc
fwait
int
pop
and
rcrl
or
or
pop
popl
lods
repnz
push
das
or
not
pop
rcrb
sbbb
inc
call
andb
xlat
inc
out
jae
pop
leave
fs
ret
push
adc
lds
sbb
dec
dec
sahf
fstl
dec
lcall
test
add
add
adc
enter
jae
xchg
pop
mov
cmp
add
cmpsb
sbb
and
ret
mov
popf
outsb
add
jecxz
scas
sub
jb
mov
stc
inc
ficompl
add
dec
arpl
lds
ret
sub
cmp
pop
dec
notb
cmp
pop
push
lret
sbb
dec
enter
icebp
dec
mov
addb
mov
lret
inc
dec
movsb
out
ljmp
data16
sub
add
cs
and
push
int
dec
mov
adc
push
rcrl
mov
cmp
lret
mov
aad
inc
bound
or
insl
push
push
mov
inc
shll
nop
jae
push
xor
aas
ljmp
and
xlat
pop
out
repz
mov
cld
xchg
jb,pt
jl
adc
sahf
jae
or
inc
leave
dec
dec
jp
push
repnz
add
adc
dec
pop
adc
daa
imul
and
aaa
es
lret
test
loopne
nop
sub
add
push
push
iret
pop
fsub
ret
dec
jb
inc
jae
sbb
stos
hlt
std
lcall
xlat
pop
or
xlat
into
mov
sar
mov
sahf
decl
push
sub
xlat
mov
mov
dec
pop
fcomps
inc
add
aam
push
cmp
cs
pusha
loope
popa
out
ds
mov
fcom
xor
imul
js
out
or
mov
cld
add
cs
mov
stos
xchg
or
mov
push
jne
push
ds
data16
les
dec
xor
sbb
in
pop
xchg
jae
xchg
inc
sar
enter
add
dec
aad
mov
cmp
sbb
and
aad
add
pop
stos
cmp
adc
fbld
sbb
pop
dec
inc
mov
pop
sahf
gs
inc
or
in
shll
fcmovnbe
jae
aaa
and
lock
bswap
loopne
xorl
cltd
pop
and
hlt
das
mov
out
stos
sub
mov
rorb
xorb
hlt
jmp
dec
push
xor
shlb
test
adc
test
aam
loop
pop
mov
sbb
js
pop
leave
jno
filds
ds
or
mov
xchg
push
movsb
push
or
loop
and
cld
mov
pop
inc
dec
jp
lea
stos
inc
push
mov
lods
xor
or
mov
fimuls
js
pop
ret
lea
imulb
jne
cmc
test
rolb
ljmp
stos
and
or
cwtl
or
jmp
jg
cmc
inc
mov
cmp
push
mov
or
pop
movsl
adc
aaa
xlat
push
aam
mov
adcb
adc
sub
sbb
pop
add
adc
movsb
inc
je
cmp
test
mov
repnz
enter
add
and
nop
dec
insl
pop
movsl
sub
xchg
aas
je
test
gs
lret
adc
pushf
sub
pop
jb
sarb
xor
dec
sbb
pop
sbb
mov
mov
imull
and
test
enter
cmp
pop
ss
sbb
inc
gs
ret
cs
adc
jle
ss
adc
adc
jns
cmp
mov
and
dec
imul
push
lds
xchg
fwait
loopne
and
mov
mov
or
lds
pop
rolb
lds
mov
xchg
push
mov
fadds
jmp
loopne
or
push
xlat
ret
test
aad
adc
or
movsl
xchg
mov
mov
mov
rol
movsb
adc
inc
inc
mov
int
leave
or
xlat
sbbb
call
insl
pop
test
cwtl
jo
pop
push
sbb
pop
ljmp
dec
pop
pop
push
pop
lret
sarb
fsubrl
pop
xor
jge
cwtl
sbb
dec
dec
dec
push
cmpsb
xlat
ds
stos
lret
or
dec
xchg
stos
sbb
lods
inc
dec
bound
and
or
fs
jle
sbb
dec
dec
mov
insb
push
pop
fwait
hlt
loope
in
xchg
pop
mov
sbbl
push
inc
enter
pop
test
push
sahf
movsb
roll
pop
or
adc
stc
addr16
shrb
mov
sub
cmp
loope
adc
cs
fs
or
jmp
sub
cs
roll
cmp
push
dec
iret
jmp
int3
rclb
xor
out
imul
test
adc
pusha
add
dec
xor
nop
mov
outsl
sbb
sub
dec
jmp
scas
pop
enter
mov
leave
mov
sub
daa
or
xor
cmpl
fiaddl
fstps
and
xor
in
jae
sbb
add
pop
cmpsl
aaa
std
clc
and
ljmp
inc
imul
lret
fs
lret
sbbl
addr16
adc
adc
jae
gs
xchg
sbb
sub
sub
sbb
shr
adc
or
pusha
sbb
mov
add
fneni(8087
in
inc
inc
pusha
adc
pop
or
push
jp
enter
push
js
and
adc
push
and
testl
fisttpl
inc
daa
pop
mov
sbb
cwtl
sub
inc
jo
push
inc
inc
imul
lret
and
lea
les
les
dec
pop
sub
xor
adc
add
push
mov
fwait
lret
sbb
or
push
mov
lods
loop
mov
inc
sbb
sahf
cmp
lds
test
nop
lods
xor
std
cld
add
cwtl
scas
jnp
loope
push
lea
inc
nop
add
inc
pop
push
lods
jecxz
dec
xchg
dec
addr16
loopne
jo
cmc
push
les
ret
lret
mov
xor
leave
inc
outsl
rcll
cwtl
xchg
jp
imul
add
pop
shr
mov
andb
push
add
addb
dec
xchg
sbb
sbb
or
into
test
loopne
mov
and
shll
fisttpll
mov
pop
xor
adcb
rclb
fxch
push
cmpsb
pop
push
or
lds
sbb
insb
mov
or
test
mov
dec
push
ljmp
inc
or
or
add
push
popa
call
dec
lds
cmpsb
dec
mov
inc
fdivr
ss
xchg
cmpsb
xorl
dec
stos
mov
jmp
aas
sti
dec
xor
shlb
inc
neg
sahf
cmp
jno
inc
dec
sbb
les
sbb
cmpsl
push
icebp
jecxz
xchg
dec
stos
push
mov
daa
and
es
dec
rclb
xchg
ret
jle
mov
cli
xor
cmpsb
sub
mov
or
adc
xchg
mov
pop
adc
insl
or
scas
dec
ret
rcl
fyl2x
sub
cmp
mov
add
fs
pop
fistl
xor
or
cmp
mov
sbb
pop
pushf
roll
mov
bound
add
dec
mov
xor
dec
push
or
test
cs
and
push
stos
xor
mov
jno
or
push
add
sub
imul
es
js
push
cmp
mov
lret
jmp
test
movsb
or
insl
notb
shll
test
jns
pop
mov
xor
dec
push
mov
dec
add
sub
scas
rorb
adc
imul
lret
xor
sub
xor
add
pop
or
jb
sub
jecxz
inc
dec
xlat
adc
inc
add
inc
mov
mov
or
cltd
in
jae
mov
adc
xchg
cmp
cmp
cmpsb
inc
dec
out
fsubp
bound
add
js
inc
pop
inc
call
mov
jl
mov
xlat
daa
mov
pop
push
xchg
lds
rcr
xchg
inc
sub
and
and
into
add
mov
ds
gs
sub
dec
cmp
adc
lock
ret
pop
imul
add
dec
mov
mov
xlat
mov
lret
dec
stos
outsl
jb
hlt
mov
pop
xor
pop
pop
test
jecxz
ja
mov
cmpsb
push
das
rol
mov
jo
sub
cmp
or
outsb
push
dec
and
jp
pop
imul
std
sub
xchg
daa
movsl
enter
daa
mov
pusha
jne
ja
cli
std
sbb
or
and
mul
lods
in
cmpsl
sbb
jge
sbb
mov
mov
dec
mov
adc
or
inc
push
aas
xchg
psubusb
mov
xchg
pop
aam
jmp
neg
insl
pop
aas
dec
cs
dec
cmpsb
mov
xor
testl
mov
in
and
pop
xchg
mov
mov
cmp
cmpsb
sbb
test
int3
bnd
stos
dec
loopne
test
into
xor
loop
std
jmp
push
push
test
inc
dec
lret
test
inc
bound
icebp
imul
sub
loop
and
inc
rcr
lock
dec
inc
sub
stc
ljmp
jmp
or
push
cmp
cmp
pop
sbb
fsts
cltd
fstpl
stos
xlat
mov
jmp
enter
js
aad
inc
xlat
inc
inc
cs
inc
dec
aaa
sbb
jno
mov
enter
and
adc
ss
push
call
and
pop
aam
adc
dec
shr
vcmppd
and
lock
adc
and
pop
xlat
call
sbb
lock
jl
xlat
gs
jmp
or
xchg
mov
dec
add
mov
fdivr
roll
mov
aaa
dec
mov
leave
jae
mov
stos
movsb
lods
mov
or
sbb
and
aaa
das
or
mov
sbb
cmp
sahf
dec
es
push
add
mov
sub
sarb
test
lahf
sbb
cmp
cmpsb
dec
outsb
sbb
cmpl
xorl
and
hlt
and
add
test
add
inc
or
sbb
fistl
cmpsl
cs
scas
mov
inc
pop
pop
mov
cmp
push
sti
xchg
test
fmulp
cs
leave
cs
out
fwait
jg
aas
test
mov
pop
int3
and
jle
adc
push
dec
jae
inc
mov
mov
mov
lret
mov
or
negb
sub
stos
icebp
fistpll
xchg
popa
push
ss
xchg
pop
dec
mov
imul
dec
pop
inc
push
ror
lods
or
xchg
or
cmp
rclb
xor
pushf
sub
scas
pop
cmc
dec
xlat
pop
mov
add
or
inc
push
cmp
add
pop
sub
add
xlat
ret
or
pop
cmp
push
xor
inc
lods
cmp
jae
cmp
inc
adc
inc
scas
push
push
and
dec
jge
popf
sbb
push
mov
loope
mov
daa
fnsave
jg
cli
inc
dec
shl
test
fisttpl
dec
jecxz
lret
pop
ja
sbb
shlb
mov
jg
push
sbb
dec
or
mov
add
mov
and
lret
dec
repnz
rolb
mov
sub
xor
mov
imul
inc
leave
push
enter
cmp
mov
inc
sbb
lahf
xor
mov
add
ret
cwtl
push
in
daa
adc
and
push
decb
adc
mov
addr16
imul
or
push
iret
jbe
adc
xor
sub
insb
sbb
cmp
inc
hlt
sbb
mov
stos
push
adcl
sbb
loopne
add
jle
mov
data16
mov
inc
pop
test
stc
ss
sbb
fcmovu
rep
xchg
sub
jns
cld
or
mul
andl
sub
cs
cmp
cmp
addl
cmp
lret
insl
mov
dec
xor
sbb
add
jge
push
add
xchg
dec
push
fs
cs
rclb
inc
stos
loopne
pop
pop
fdivrs
sub
rolb
and
inc
lods
or
adc
mov
inc
pop
pop
leave
pop
jmp
lret
sbb
xchg
fsubrs
inc
rol
adc
jecxz
rcrl
pushf
scas
sbb
fldcw
and
xor
call
stc
icebp
or
loopne
push
sub
ficoml
push
js
or
fs
pop
push
inc
or
call
fisttpll
jmp
pop
jp
mov
jno
cwtl
jne
push
adc
mov
lds
push
mov
ret
idiv
sbb
aad
add
daa
ret
sbbb
cmpsl
insb
aas
and
movsl
push
out
test
js
adc
lds
or
cld
cli
push
jno
sbb
adc
lret
gs
cmp
addl
dec
sub
pop
test
imul
dec
faddl
shrb
fnsave
imul
sti
inc
test
cs
pop
sti
inc
loopne
pop
nop
sub
mov
aas
fstpl
repnz
pop
mov
dec
bound
pop
sub
pop
or
and
mov
bound
xor
jne
sahf
loope
push
sbb
cmpsb
xor
call
les
mov
pusha
sub
in
cmp
pushf
inc
push
mov
fcmovb
imul
sbb
ds
pop
out
fidivl
shlb
cwtl
mov
xchg
fmull
pop
add
stc
subl
fwait
add
add
cmp
dec
sbb
adc
outsl
orb
adc
jns
imul
addr16
inc
scas
out
pop
pusha
sub
fs
test
sub
inc
lahf
dec
stc
adc
xor
lods
inc
es
ds
test
movsb
xchg
lret
addl
sbb
xlat
ss
push
out
pop
pop
icebp
sub
dec
push
add
sbb
rcrb
xlat
test
push
fcomi
cmp
and
cld
loope
pop
sbb
ret
orb
aas
stos
dec
push
inc
sub
sbb
jle
pusha
xor
popa
sbb
adc
shr
lock
mov
arpl
addr16
add
dec
push
adc
roll
jg
and
dec
xchg
mov
es
out
push
dec
pop
in
mov
cld
add
jns
rclb
stc
xchg
xchg
notl
pop
mov
sbb
imul
adc
movsl
adc
in
pop
js
test
fwait
push
lds
js
popa
push
fldcw
xchg
dec
lcall
pop
and
into
add
mov
loope
and
inc
std
pop
dec
or
or
jne
xchg
xor
push
sahf
xchg
adc
inc
pop
mov
nop
and
inc
mov
ficoms
mov
out
sub
aas
cmpsl
mov
aaa
push
dec
loope
mov
lds
sbbl
mov
lret
in
mov
mov
inc
xlat
cli
imul
call
push
or
cli
adc
loope
scas
add
push
jno
push
mov
cmp
push
jg
pop
rcr
pop
cwtl
cmpb
in
orl
lret
lcall
add
xor
stc
mov
aas
mov
push
push
lods
mov
insl
mov
call
xchg
nop
arpl
mov
adc
dec
stc
repz
xor
pop
daa
cmpsl
xor
push
fsubrl
mov
ret
lea
xor
aas
mov
imul
loop
dec
inc
dec
mov
dec
xor
enter
inc
loop
xchg
xor
sub
aam
adc
and
inc
xlat
out
lds
xchg
cmp
fstpl
stc
xor
divl
mov
rorl
xchg
mov
jl
je
sub
aad
mov
stc
cmp
jmp
lods
rorb
mov
add
or
xor
leave
push
and
loope
xor
cs
inc
sbb
cltd
jecxz
clc
leave
dec
faddl
adc
push
cmc
xchg
divl
fimull
mov
mov
jo
add
mov
dec
scas
inc
sar
pop
cmpsb
in
inc
sbbb
dec
imul
push
push
jae
outsl
orb
sbb
ss
aam
xchg
rcrb
test
cmp
dec
mov
and
jnp
jle
inc
repnz
add
pop
sbb
lahf
sarb
idivl
int3
adc
xor
sbb
enter
cmp
pop
cli
dec
mov
outsl
add
sub
sub
call
mov
mov
mov
pop
rcl
shll
rol
lcall
mov
cmpsb
xchg
in
stos
in
cmpsl
ljmp
loope
pop
jle
sub
dec
cmpl
jmp
ss
fstps
mov
mov
mov
cmovae
mov
inc
repnz
in
popa
add
sbb
cmp
ficoms
inc
pop
lret
lahf
movsl
add
sbb
iret
mov
sbb
sbbl
or
push
nop
xor
enter
or
mov
push
dec
mov
mov
pop
sbb
fcoml
jp
cmpsb
sub
sbb
xor
call
pop
or
xor
jecxz
mov
hlt
add
xchg
outsl
faddp
mov
jae
in
popf
stos
adc
or
xor
or
cmpsb
pop
mov
inc
mov
out
les
jge
faddl
pop
cmc
or
pop
dec
xchg
pop
testb
mov
xor
adc
mov
adc
dec
aad
add
ds
enter
pushf
fidivrl
movsl
lret
push
dec
sub
jae
clc
lcall
fistpl
sbb
push
data16
add
pop
lret
in
fbstp
imul
and
lcall
leave
jmp
xlat
stos
push
dec
pop
dec
cmp
nop
pop
pop
lahf
mov
jg
das
mov
rorl
pop
dec
popa
int
sbb
inc
rcrl
movsl
jmp
in
sbb
push
in
fsub
sysret
mov
in
leave
and
in
clc
and
jns
dec
mov
repnz
xchg
sbb
idivl
xchg
leave
imul
in
lret
sub
sbb
mov
stc
leave
xor
xchg
stos
and
add
dec
rorl
cmc
test
loop
add
gs
stc
mov
outsb
add
in
dec
fbstp
jmp
push
push
mov
pop
pop
add
adcb
js
mov
rcrl
cmp
js
rcrb
dec
add
rcl
repnz
inc
add
cltd
pop
dec
push
push
in
or
sub
mov
xchg
jl
repnz
lret
dec
jle
add
fsubp
repz
push
push
or
cmp
lods
push
mov
lock
sbb
sbb
sarb
sub
shlb
lds
mov
mov
cmp
dec
xor
js
pop
mov
xlat
pop
pop
dec
aaa
sub
cs
add
pop
mov
imul
shl
out
js
ds
call
and
jle
mov
push
test
inc
mov
inc
or
std
jbe
sbb
xor
mov
insl
mov
dec
dec
int3
aaa
adcl
lods
pop
jmp
and
sbb
xor
pop
mov
in
pop
mov
or
nop
cs
add
rorb
jg
or
filds
and
adc
cs
add
inc
mov
leave
dec
lods
mov
rcrb
int
decl
mov
adc
xchg
cs
outsb
stc
je
push
call
push
lea
pusha
test
push
loop
js
enter
and
test
push
push
data16
jo
mov
cmpsb
lret
scas
in
in
cmp
lods
dec
lds
xchg
shr
insb
bound
and
inc
dec
imul
adc
mov
popa
inc
mov
jbe
sbb
pop
xchg
aam
pop
cmp
movswl
arpl
lret
cmp
lfs
out
jae
or
mov
mov
adc
push
cwtl
cmp
or
inc
mov
fstp
xchg
fimull
dec
insb
jo
pop
or
idivb
sbb
cmpsb
mov
push
xchg
dec
in
jle
cwtl
push
subb
pusha
mov
push
leave
mov
mov
adc
test
jne
lock
dec
mov
andb
sbb
outsb
sub
dec
and
mov
jno
jae
fwait
inc
mov
or
inc
pop
loope
imul
xchg
sub
mov
xor
xlat
mov
xor
jmp
loop
cld
push
pop
loopne
jnp
ret
push
dec
mov
fsubrl
cmpb
xchg
int
cmp
jnp
in
lea
pop
mov
push
int3
pop
sbb
popf
xchg
adc
push
ljmp
iret
cwtl
xor
sub
xchg
mov
aad
mov
pop
dec
dec
sbb
cs
inc
pushf
pop
fisttpll
cmpsl
mov
in
scas
popa
aas
lret
sarl
cmp
test
rolb
rcrl
fiaddl
push
loope
daa
cmp
push
fsubs
ja
and
or
pop
jae
lock
inc
insb
hlt
movsb
dec
xchg
xchg
aaa
pushf
addl
jmp
leave
roll
push
movsl
into
inc
push
inc
mov
test
xor
jb
mov
mov
outsb
notl
rclb
scas
cmpsb
lea
adc
rcrl
jae
sahf
dec
or
add
push
push
sbb
fldl
stc
cmp
push
pop
stos
stos
cltd
into
push
xor
out
movsl
dec
xchg
jmp
filds
lds
adc
inc
insl
or
jae
movsl
pop
outsb
leave
dec
loope
mov
xlat
inc
fwait
les
push
out
mov
repz
inc
mov
inc
sbb
ret
pop
mov
aas
cmp
js
xchg
cmc
stc
mov
sbb
and
es
or
sbb
ljmp
popa
aad
rorb
dec
dec
adcl
imul
cs
mov
dec
rcll
les
rclb
pop
xor
fdivs
xor
popf
mov
lret
xchg
stos
cli
mov
fdiv
in
dec
jae
mov
test
into
and
popf
add
rcll
pop
mov
jle
inc
and
ja
setl
cs
pop
mov
and
mov
loopne
cld
ljmp
imul
arpl
rcl
mov
arpl
mov
mov
sub
leave
outsl
pop
inc
push
mov
fiadds
xor
add
ret
popl
mov
inc
repz
or
test
lock
dec
lods
nop
xchg
ficoml
xor
data16
mov
lock
push
mov
ljmp
int
call
loopne
enter
mov
cmp
movsl
mov
xor
inc
add
pop
cmp
call
dec
int
js
out
decl
inc
aad
sub
and
test
add
mov
test
jecxz
daa
hlt
stos
mov
les
push
inc
sbb
aas
sub
lea
xorb
push
mov
aad
pop
lret
stos
stc
xchg
and
push
cmpsb
pop
jmp
mov
mov
xchg
add
inc
dec
push
push
push
sub
movsl
cmp
out
sub
dec
push
in
mov
in
mov
ret
lock
jns
mov
xchg
push
push
stc
notl
dec
stc
push
cmp
into
sbb
adc
pop
jge
call
mov
pop
ds
cli
roll
mov
inc
dec
rclb
xorl
and
xor
std
pop
stos
cs
dec
dec
jmp
aaa
pop
dec
test
gs
jp
lcall
aas
jne
ds
les
in
daa
jg
cmp
test
pop
es
shl
mov
xchg
cmp
pop
popf
mov
and
shr
xorb
push
push
stc
xchg
adc
fildll
leave
push
push
and
addr16
add
sbb
ud2
and
mov
xorl
jmp
lds
inc
jb
and
pop
cwtl
rorb
sbb
jnp
adc
xchg
jp
int3
rorb
or
test
movsl
jmp
aas
jno
dec
cmpsb
or
ja
testb
icebp
lds
in
pop
cwtl
push
sub
push
lds
sbb
cs
push
mov
movsl
lods
xchg
sahf
cmp
push
js
lods
mov
dec
mov
or
jae
push
fdivrl
clc
mov
mov
fidivl
ss
cmpsb
cwtl
fs
clc
or
call
xor
mov
lods
gs
int
cs
mov
pcmpgtd
stc
loope
mov
add
dec
jg
lret
int
xchg
mov
xorb
mov
push
insb
xchg
push
lods
inc
add
fadd
lahf
push
imul
popw
add
int3
daa
and
loop
add
fsubrs
jae
push
lods
cmp
inc
pop
out
xlat
inc
call
inc
pop
stc
test
insl
inc
xchg
ljmp
cmpsb
sbb
lods
icebp
cmpsb
mov
call
cs
std
mov
or
scas
and
out
in
cmp
incl
inc
test
sub
add
xchg
lret
aaa
sub
icebp
pop
shl
inc
sbb
jmp
in
loopne
jge
inc
xor
das
nop
rclb
add
add
jb
inc
and
xchg
adc
pop
dec
add
aas
mov
js
sub
cmp
dec
shll
dec
push
xchg
sbb
fists
pop
cmpsl
inc
aas
jo
fwait
sbb
dec
pop
aaa
cmp
cs
mov
mov
loopne
enter
out
shrl
adc
fadd
std
stc
dec
shl
pop
loop
es
inc
add
dec
movsb
push
dec
xor
cmp
add
arpl
mov
mov
pop
jno
jg
mov
jbe
jg
adcb
fs
xor
push
lcall
cmpsb
or
push
repnz
ja
and
int3
adc
cmc
jmp
mov
mov
or
lret
adc
mov
mov
or
movntps
inc
inc
inc
push
call
sub
inc
mov
fimuls
out
enter
pop
xlat
sub
pop
aas
adc
sbb
ljmp
adc
rclb
push
pop
sbb
imul
sub
mov
cmp
xchg
xchg
scas
sahf
add
and
dec
pop
ror
ds
xlat
cmp
cmpsl
das
add
loope
push
cmp
fists
xchg
scas
jg
add
mov
scas
lret
add
push
call
fs
add
mov
test
daa
push
daa
clc
and
dec
or
lret
cmpsb
add
inc
mov
aas
in
adc
call
or
inc
cld
movl
je
inc
mov
push
fs
push
es
dec
pop
outsl
orb
sub
push
mov
jg
cmpsl
or
cwtl
jb
xor
cmp
or
notl
xor
pushl
dec
dec
inc
nop
lret
cmp
into
pop
rclb
jg
dec
setae
pop
xor
cs
divb
and
adc
testb
cltd
scas
incl
mov
int3
adc
shl
shll
repnz
or
in
add
dec
pop
jae
inc
or
lcall
popf
loopne
scas
loopne
pop
je
and
xor
out
sub
pop
mov
pop
mov
inc
push
loopne
movsl
rcll
pop
sub
rcrl
mov
add
test
pop
lock
mov
and
jmp
lods
adc
and
jge
int
enter
or
push
out
inc
push
xor
or
and
add
mov
sbb
cs
orb
or
xlat
xchg
ljmp
jae
xchg
out
mov
inc
cs
pop
or
xor
dec
add
out
xor
or
ljmp
sub
or
data16
test
stos
or
out
jmp
sbb
push
repz
mov
cltd
negb
adc
mov
jl
dec
ret
faddl
out
adc
fs
ss
jecxz
dec
xorb
ja
add
pop
stos
add
jle
sbb
aad
movsl
call
enter
push
ds
pop
adc
mov
sbb
mov
pop
in
xchg
sub
mov
pop
jne
lret
repz
stos
add
ret
fsubs
cmp
xor
loopne
dec
aam
sbbl
orb
pop
pop
mov
dec
dec
in
inc
xlat
push
sbb
sbb
xchg
cmp
cmpsb
ljmp
icebp
sub
sub
xor
jo
pop
xchg
ja
mov
push
or
mov
sub
mov
pop
icebp
test
push
int3
push
add
sub
roll
sbb
les
cmp
int
or
lret
sbbb
push
shrl
insl
dec
stos
int
js
jae
stos
test
jae
cmp
lds
cmp
std
dec
mov
dec
aas
shll
inc
lock
sbb
cmpsb
dec
xchg
jns
std
jmp
dec
sub
test
or
and
cmp
mov
ljmp
inc
pop
fists
lahf
mov
sub
andl
sahf
jns
pop
cltd
imul
xchg
ret
lret
je
cwtl
imul
lret
stos
lock
lret
mov
push
pop
ljmp
shrl
jbe
inc
out
push
mov
fidivrs
push
mov
jecxz
xor
test
pop
inc
dec
rorl
mov
add
dec
cmp
loopne
dec
cmpsb
xlat
lock
ret
scas
dec
jmp
add
inc
jmp
lds
aam
hlt
xchg
fcmovne
aad
cmp
cmpsb
sahf
jb,pn
pop
pop
xor
sbb
sub
mov
pop
dec
sbb
mov
test
aas
sbb
ret
push
bound
and
xchg
pushf
inc
ljmp
mov
xchg
dec
mov
or
fs
fsts
adc
inc
fcomps
sub
notb
frstor
out
dec
out
or
aas
sbb
xlat
inc
add
int
stc
scas
cld
clc
jecxz
mov
xchg
dec
mov
movd
push
divl
ror
jp
imul
out
fisttpll
xchg
js
movsb
arpl
or
push
std
add
mov
fs
lock
sarb
adc
jae
xlat
mov
mov
jnp
sbb
mov
jecxz
fistpl
lock
push
jecxz
imul
jne
xor
cs
fmul
enter
cmp
inc
fwait
pop
push
aas
rorb
daa
pop
movsl
enter
js
lret
out
rorb
sbb
mov
and
pop
or
movsl
ret
push
dec
repnz
sbb
sub
andl
mov
and
mov
add
jns
cmp
les
outsb
mov
mov
das
dec
ljmp
jmp
inc
test
jmp
mov
sub
mov
add
pop
inc
lret
push
adc
mov
jg
rclb
inc
jb
push
mov
or
enter
jmp
mov
jecxz
outsl
loopne
aaa
push
xchg
mov
lcall
ljmp
dec
lcall
sarb
loope
inc
fists
nop
push
fdivl
sub
inc
add
cwtl
leave
pop
adc
xchg
ret
clc
mov
and
push
stos
dec
or
icebp
shrl
fwait
dec
iret
js
pop
mov
mov
sbbb
push
xor
sahf
inc
xor
mov
ja
unpcklps
aam
lds
sub
mov
xchg
jne
inc
push
sbb
push
sbb
dec
leave
add
mov
outsb
dec
and
sbb
pop
mov
push
cmp
cmp
jmp
jbe
jns
fwait
pop
sbb
xchg
push
adc
adc
sub
les
sbb
mov
out
xor
mov
adc
dec
pusha
pop
ret
mov
mov
sbb
push
or
jl
push
cs
inc
mov
sarl
dec
nop
add
inc
adcb
int3
lcall
std
or
inc
inc
mov
cmpsb
out
enter
lods
push
cmc
push
mov
sub
adc
mov
les
movsl
pusha
and
mov
push
sbb
inc
inc
incl
push
jae
iret
nop
mov
sub
into
fisttpl
sub
lock
dec
lds
mov
xchg
test
aas
rclb
adc
int3
hlt
sub
and
cltd
call
inc
in
cmp
jnp
xchg
xchg
sbb
and
sub
rcrl
or
mov
or
ret
pop
or
jl
xchg
xchg
mov
jnp
jns
inc
inc
sbb
paddusw
inc
add
and
nop
test
dec
sbb
int3
push
pushl
add
fisttpl
pop
mov
sbb
mov
aam
pop
cmp
jge
ja
and
pop
dec
xchg
and
leave
fwait
inc
xor
xchg
inc
pop
cwtl
flds
popa
jo
sub
leave
fisttps
repnz
cs
push
iret
mov
mov
pop
rcr
nop
cmp
mov
mov
nop
sbb
in
fsubr
push
sbbl
ljmp
cmpsb
ret
mov
enter
sub
mov
mov
mov
in
popf
sbb
test
jmp
push
imul
mov
cmp
aas
testl
xchg
and
clc
pop
pop
lret
mov
pop
out
sbb
pop
add
sti
cmp
nop
daa
mov
lret
add
jmp
push
mov
xchg
push
sbb
push
ret
pop
loopne
inc
loopne
pop
stc
std
cs
fnstenv
pop
push
jmp
mov
dec
mov
in
cmpsb
ljmp
mov
or
sbb
jno
icebp
xchg
adc
add
pop
inc
and
pop
or
adc
dec
into
inc
rolb
loopne
sbb
xchg
add
sbb
imul
lds
mov
pop
cld
xchg
popf
adc
mov
je
dec
mov
cmp
std
ret
loop
les
imul
jl
sarb
dec
stos
pop
pop
jg
sbb
insl
and
sub
dec
inc
test
aad
sbb
cmp
pusha
xorl
mov
dec
adcb
pop
jno
mov
outsl
dec
mov
sbb
iret
inc
mov
and
inc
mov
leave
call
jns
mov
sub
dec
jb
cmp
fs
shrb
and
leave
les
dec
popa
jg
inc
mov
mov
mov
or
imul
dec
movsb
mov
mov
outsb
rcll
cmp
pop
out
jb
mov
ret
ffreep
inc
stos
cmp
cs
lds
shlb
jnp
adc
jge
add
sarl
push
orl
mov
mov
xchg
push
pushf
pop
aas
scas
jecxz
enter
leave
fdivr
push
js
jmp
ss
add
mov
and
icebp
js
push
ja
add
push
es
or
mov
cli
in
fisttpll
test
sarb
push
add
imul
pop
and
loop
or
cmp
sbb
cmp
push
mov
stos
jmp
push
xor
jnp
xor
mov
add
idivb
xor
xchg
push
enter
pop
pop
sbb
mov
lods
adc
or
mov
orl
scas
pop
addr16
stc
lods
std
ficomps
push
inc
pop
sti
mov
mov
in
rcll
daa
and
add
movsl
ficomps
es
push
cmp
sub
and
js
outsl
cmp
cli
mov
popf
jl
cmc
inc
xor
sbb
push
mov
and
sbb
sbb
loopne
rol
pusha
mov
stos
cmp
inc
test
add
pop
scas
fiadds
leave
inc
test
mov
fisttps
jg
mov
pop
fists
lods
xor
orb
sub
inc
mov
and
cmp
in
lret
sub
nop
cmp
pop
sub
movsb
loopne
push
ret
clc
xor
ret
inc
jmp
dec
sub
cmp
not
nop
sbb
daa
jmp
inc
mov
in
les
test
mov
sbb
xchg
sahf
leave
aaa
mov
mov
push
fisubl
stos
jmp
push
inc
or
push
push
ret
test
call
dec
out
inc
jg
sub
test
js
jae,pt
jecxz
add
lss
dec
int
rclb
xor
std
cmp
adc
cs
cmp
xchg
cltd
lock
arpl
sub
sub
jnp
mov
dec
dec
fsubp
dec
and
bound
sub
cmpb
xlat
int3
call
xor
jnp
sub
jg
imul
dec
insb
and
push
pop
or
push
andb
jb
shrl
mov
ja
pop
pusha
or
inc
xor
fwait
inc
inc
lods
popf
lcall
mov
inc
fwait
adc
add
leave
xor
inc
andb
movsl
ljmp
sete
lea
add
and
adc
mov
cmp
mov
add
aad
shlb
push
cmp
mov
andl
jmp
stos
xchg
cltd
mov
out
and
mov
inc
mov
push
pushl
popa
sbb
xor
jp
aam
jmp
adc
dec
mov
aaa
push
jnp
xlat
lods
aaa
sub
inc
mov
and
std
fucomip
pop
jg
jno
into
aam
loop
jmp
clc
loope
pop
xchg
xorl
call
mov
xlat
xlat
jne
mov
lods
fiadds
fimuls
or
insb
or
fcoms
ja
add
xchg
cmpsb
push
leave
push
push
stc
sub
inc
cs
and
pop
pop
inc
mov
xor
sbb
pusha
xchg
sarl
pop
sub
mov
jno
stos
adc
xchg
sbb
pushf
ljmp
xchg
jbe
or
test
push
aad
in
ljmp
data16
lret
add
push
iret
call
dec
pop
mov
gs
xchg
daa
dec
jne
in
jmp
sbb
lods
mov
pop
cs
fwait
jbe
push
sbb
sarb
or
outsl
mov
or
shll
push
xchg
xchg
or
xor
rcrl
xrelease
fcmovu
jae
cmp
push
enter
xchg
mov
sub
orl
cmp
or
sub
mov
inc
push
cmpsl
cmpsb
mov
adc
xor
mov
gs
cmp
cmp
jg
addr16
jae
dec
sahf
cs
es
enter
icebp
jge
sub
repnz
stos
mull
imul
cld
jp
mov
pop
mov
pushl
lods
cmp
xor
pop
adc
push
fcompl
adcl
sbb
sarl
jg
jmp
lret
pop
repnz
push
dec
add
pop
mulb
dec
and
dec
js
or
and
jge
and
pop
sub
mov
mov
lcall
mov
inc
in
cmp
xchg
outsb
pop
cmp
int3
test
imul
sahf
fbld
inc
adc
cs
sbb
cltd
push
andb
addr16
aam
gs
cmpsl
pop
mov
pop
orl
lea
xchg
dec
cmc
xchg
push
pop
lds
aas
jbe
fisubrs
cmp
test
jae
mov
dec
jb
ja
push
dec
lret
and
popf
mov
je
call
sbb
bound
fldenv
sbb
adc
outsl
div
push
nop
test
pop
pop
sub
mov
mov
jle
xor
inc
inc
xor
ljmp
add
shlb
xorb
cs
enter
icebp
mov
xchg
sbb
imul
adc
ret
fs
jg
gs
xchg
xor
adc
stos
sbb
sub
push
sahf
movb
add
sbb
mov
fld
jns
test
imul
xchg
aaa
inc
add
ficomps
cmc
in
into
adc
push
xchg
pop
subb
cs
pusha
xor
cs
push
imul
xor
push
push
ficomps
jb
testb
xlat
pusha
xlat
cmpsl
inc
pusha
lret
or
and
or
out
push
shl
subb
movl
mov
pop
or
roll
adc
arpl
dec
lret
and
cs
inc
rclb
mov
sbb
mov
js
or
xchg
in
sahf
test
lcall
or
pusha
jmp
lods
push
sbb
sub
mov
sbb
scas
orb
add
adc
loope
add
in
mov
pop
push
ss
push
pop
lock
add
mov
fiadds
orb
mov
sbb
jae
and
dec
pop
dec
test
sbb
push
inc
mov
jl
pop
mov
adc
daa
mov
lahf
fsubp
pop
or
pop
pop
jnp
pop
js
adc
mov
pop
stc
shr
push
imul
or
rorb
enter
mov
movl
enter
sub
mov
push
jno
popa
lds
pop
mov
mov
arpl
inc
cmpsb
lcall
push
inc
dec
add
sbb
pop
lcall
test
inc
scas
push
mov
dec
jno
sub
xchg
in
loope
and
xlat
cs
inc
es
lahf
daa
cmpsb
jecxz
xor
adc
push
scas
inc
imul
mov
mov
in
sbb
mov
inc
std
cwtl
mov
mov
mov
and
inc
out
xchg
in
sbb
pop
cs
ja
sub
int
mov
mov
mov
lret
and
jp
jbe
mov
xchg
jmp
adc
lahf
dec
sub
pop
and
mov
test
dec
repnz
lret
shlb
sbb
inc
cwtl
call
rolb
mov
dec
cltd
dec
or
inc
call
push
mov
cmpsb
xor
dec
xor
lds
mov
adc
out
js
adc
xlat
fmulp
inc
mov
cmp
inc
adc
jne
je
mov
cltd
cmc
sub
leave
sbb
jle
fcompl
jno
cmpsb
fnstsw
daa
into
dec
movsb
imul
mov
dec
push
stc
inc
lret
xor
xchg
in
in
clc
or
xor
lahf
sub
adc
mov
les
in
andl
js
loope
push
inc
aam
outsl
leave
xlat
mov
dec
jbe
scas
fistps
out
shl
pop
or
adc
mov
lock
push
repz
mov
cmp
adc
jbe
xchg
sbb
push
stc
jne
cmp
and
mov
dec
lahf
aad
shlb
popa
jp
dec
sbb
add
cmp
jbe
in
vmovups
out
jo
push
clc
inc
rclb
pop
mov
icebp
mov
push
adc
outsl
js
pop
jge
mov
lds
adc
stos
shrb
pop
xchg
pop
adc
or
imul
sub
inc
divb
pop
inc
mov
daa
inc
dec
loop
add
dec
xor
inc
xchg
cmp
jecxz
cmp
pop
push
or
aam
pushf
adc
inc
cmp
cs
add
gs
xor
mov
call
push
adc
aaa
cmp
dec
and
mov
ret
inc
cmp
push
add
mov
pop
ss
adc
roll
das
and
iret
and
lods
sbb
dec
xchg
pop
inc
xchg
and
cmpsl
in
leave
test
mov
push
std
sbb
inc
dec
addr16
dec
mov
sti
xlat
neg
jbe
daa
pop
add
pushf
subb
or
in
ds
xchg
bound
adc
mov
aad
pop
and
push
mov
dec
insb
xchg
inc
xor
pop
mov
xchg
jge
and
insb
jecxz
sbb
je
sahf
stc
sti
xchg
loope
and
aaa
mov
add
inc
aad
inc
test
pushf
movsl
loope
inc
add
sbb
xchg
cmpb
ror
jmp
ret
inc
dec
mov
in
test
xchg
nop
cs
cltd
lcall
xchg
sahf
jmp
mov
or
sahf
push
cmp
mov
iret
shl
icebp
movsb
mov
mov
ret
jle
adc
aaa
repnz
ljmp
stc
test
jae
add
dec
fs
sub
and
cwtl
movsl
add
cmp
lea
repnz
inc
or
xor
sbb
outsl
pop
scas
cmc
pop
popa
or
pop
add
ret
dec
out
or
cmpsb
mov
cli
cmc
insb
sub
aas
insb
pop
inc
test
je
xlat
cmpsb
in
pop
movsl
xor
add
fsubl
dec
cmpsb
inc
adc
pop
push
jne
inc
jecxz
stos
mov
sbb
sub
mov
push
adc
mov
pop
cmpsb
loope
inc
sbb
in
lret
or
mov
and
pop
mov
mov
cs
and
enter
push
jb
loop
test
or
adc
dec
test
mov
push
shr
inc
mov
mov
mov
sub
not
push
pop
mov
js
jne
inc
js
jg
jno
pop
adc
sbb
mov
rcr
iret
mov
mov
in
gs
movb
fucom
xor
dec
aas
cs
nop
divb
rorl
sarb
lret
xor
jbe
inc
fstpt
aam
clc
sub
dec
adc
fwait
push
out
jp
mov
push
daa
dec
aad
stc
cmp
negb
and
adc
jae
fidivs
adc
sub
xchg
test
imul
lcall
push
cltd
pop
push
jecxz
mov
cltd
dec
pop
and
dec
lahf
out
data16
test
ror
lret
sub
dec
push
cltd
in
loop
cmp
lret
pop
hlt
popa
sub
adc
xchg
mov
clc
cmpsb
dec
out
mov
adc
dec
or
ret
popl
aas
nop
test
add
sbb
lods
fsubs
cs
fldcw
sub
pop
pop
jne
outsb
jae
fistpll
mov
push
inc
cmp
mov
mov
mov
call
sbb
xchg
jnp
es
enter
cmp
shll
or
test
pushf
cs
lea
stc
sub
gs
inc
fadds
fwait
inc
mov
pop
mov
and
mov
popa
inc
lods
aas
loopne
icebp
xchg
jb
test
lds
or
pop
pop
aaa
mov
push
sub
cmpsl
inc
or
mov
stos
ret
adc
inc
push
cmp
sbb
pop
lahf
xlat
repnz
cmp
mov
test
lret
filds
xor
sbb
xchg
dec
cli
stc
mov
movsl
xchg
lret
sbb
ljmp
or
pop
mov
sbb
mov
jne
xor
scas
je
rorb
bound
pushf
cmpsb
subb
sub
lods
icebp
in
or
out
aad
dec
in
jnp
cs
lret
jae
dec
roll
leave
xchg
aaa
in
push
stos
cmp
popa
int3
enter
jno
lret
xchg
hlt
xchg
fwait
lahf
pusha
addr16
add
cmp
arpl
test
cs
jmp
pop
xor
sbb
in
or
add
mov
lods
add
lods
dec
adc
leave
mov
mov
add
andb
movsl
mov
pop
pop
dec
in
rorb
cs
sbb
aas
pop
cmp
jbe
mov
cli
or
mov
sbb
dec
daa
popf
jg
lahf
xor
inc
jle
mov
xchg
orl
lods
xor
push
xlat
aas
lahf
mov
insl
sub
xor
lret
popf
clc
inc
rcrl
cmp
pop
les
xor
xchg
mov
loop
rolb
mov
aas
aaa
adc
adc
mov
mov
mov
lcall
cmpsl
and
shrb
lahf
fadd
or
inc
es
push
and
aas
mov
lcall
or
jge
in
cli
shl
xchg
scas
adc
int
inc
sub
pop
rcrb
rcll
and
jae
jae
adc
shl
push
in
movsl
or
jg
or
ret
mov
mov
arpl
cmp
sub
fimull
das
lea
push
push
imul
mov
gs
sub
jg
nop
aas
xor
xor
mov
aad
hlt
mov
xor
std
and
mov
xchg
test
or
jae
sar
roll
sbb
sub
out
dec
movb
push
push
mov
pop
and
fnsave
add
clc
test
mov
add
sbb
fwait
mov
lret
xor
loopne
sub
mov
push
rcrb
jg
stc
inc
test
nop
repz
jecxz
ret
push
adc
lds
loopne
mov
into
sub
in
addl
adc
cli
cmpb
gs
in
aas
pop
daa
pop
imul
cmc
push
mov
sub
pop
xlat
rolb
inc
fnstcw
rcrb
add
psrlw
adcb
and
mov
shl
test
aam
pushf
mov
mov
mov
cwtl
jge
imul
js
sub
push
mov
call
mov
ret
jge
cli
shlb
mov
mov
and
fmull
add
ret
dec
cs
jp
je
pop
cmp
pop
xor
mov
or
fcmovb
jnp
inc
fcoms
add
divl
out
sub
or
xor
xchg
push
dec
pop
push
clc
shlb
inc
out
mov
xor
inc
cmc
pop
or
in
jg
orl
sbb
leave
dec
loopne
cmp
sbb
pop
fmuls
xchg
mov
add
ja
dec
imul
or
cmp
ret
inc
sub
cmp
or
dec
jecxz
ret
into
cwtl
inc
jbe
call
pop
push
sub
enter
shll
adc
push
outsb
xchg
fdivs
and
lret
xor
push
enter
jmp
stc
or
cmp
sbb
lods
or
mov
rolb
mov
inc
insb
cmp
push
mov
jne
addb
das
jbe
adc
or
divb
mov
cs
cld
or
sbb
cmp
push
cmp
lds
cltd
xchg
push
adc
jo
inc
enter
pop
inc
insl
push
pop
out
imul
pop
dec
lcall
int
fsts
sahf
mov
xlat
jo
inc
scas
enter
sbb
dec
jne
pop
inc
push
divb
dec
pop
ret
jbe
call
jg
cmp
out
and
mov
call
cmp
push
lea
daa
outsb
stc
add
inc
cmp
cmp
push
movsb
add
cs
xchg
pushf
inc
inc
mov
or
or
das
adcl
xchg
mov
or
and
xchg
mov
inc
xor
das
xor
lds
fcompl
inc
cltd
xor
cmp
sarl
leave
add
inc
or
push
scas
and
fisttpl
inc
dec
mov
push
fcom
fcmove
xchg
or
mov
add
mov
xchg
sti
fdiv
push
mov
dec
pop
jns
xchg
mov
or
lcall
adc
sbb
jo
or
push
jo
push
ljmp
or
aaa
jo
outsl
sub
jl
scas
mov
pop
or
pop
push
xchg
fiadds
lahf
imul
jb
jmp
adc
movsb
sub
push
jge
adc
or
xor
aas
lret
xor
stos
ret
je
inc
jge
push
sbb
pop
popa
sti
into
sub
dec
jo
stos
js
cs
ja,pn
loop
dec
push
dec
das
mov
in
jp
and
inc
mov
push
or
sub
insb
cld
cmp
ficoml
xchg
ljmp
xchg
xor
xor
push
and
pop
fst
imul
sbb
inc
aam
push
push
or
or
sbb
testl
movsb
out
push
jecxz
sub
xchg
push
repnz
ljmp
mov
jp
pop
jg
mov
aam
testl
mov
cmp
pop
cmpsb
mov
loop
repz
cli
mov
xchg
in
icebp
popa
adc
add
repz
push
paddsb
xchg
or
jbe
jmp
mov
ja
fwait
dec
mov
subb
loope
or
sub
push
sub
inc
add
in
mov
dec
repz
int3
mov
bound
iret
jmp
dec
lcall
add
jne
xchg
int3
or
jne
pop
or
ds
into
lahf
cmp
test
aaa
cld
add
pop
repnz
xchg
pop
fistl
lcall
cmp
sbb
cld
cmp
mov
pop
push
add
lcall
dec
mov
das
pushf
push
add
mov
dec
inc
mov
cs
push
test
mov
subl
sbb
loopne
push
data16
jge
inc
cmp
cmp
shll
add
ret
xchg
xchg
mov
add
rol
adc
decl
sti
dec
pop
and
sbb
sub
xchg
inc
cmp
lds
in
out
push
lcall
mov
pop
jo
aas
jae
mov
sbb
dec
dec
ret
or
fldt
inc
dec
adc
xlat
and
nop
fnstsw
sub
dec
enter
fmul
lea
jb
ss
ja
xor
ret
flds
push
gs
cld
std
dec
inc
sub
ljmp
jge
aam
dec
lods
push
dec
jbe
ret
push
push
cmp
mov
or
into
dec
sub
lahf
int
int
xchg
fdivl
sbb
mov
jo
bound
sbb
js
je
pop
mov
jne
cmp
leave
sbb
mov
shll
mov
xchg
aas
xor
add
andl
loope
gs
mov
jge
xor
lahf
loopne
cmpb
sbb
fisubrs
or
hlt
jne
scas
cld
clc
jb
inc
push
cs
aas
iret
mov
dec
push
scas
mov
push
es
or
mov
cmp
xchg
mov
into
jo
loope
out
push
pushf
fwait
push
push
sub
das
stos
xor
mov
ret
shrb
imul
cmp
out
ss
sub
pusha
dec
or
rcrb
leave
push
aad
mov
xchg
adc
dec
cmc
push
mov
ret
push
jmp
dec
ret
addr16
jae
add
cld
fwait
out
mov
sti
fwait
jae
push
bound
cmpsl
repnz
mov
jecxz
mov
xor
xlat
sub
rcr
jno
jp
outsl
mov
and
xchg
out
or
ds
rorl
mov
loopne
add
cmp
mov
aas
sub
sbb
push
mov
loope
mov
push
pop
xchg
sbb
addr16
cmpb
adcl
sti
jo
lret
lret
add
hlt
inc
xor
addr16
xchg
popf
mov
addr16
loope
pop
mov
arpl
sbb
dec
inc
pop
loopne
mov
loope
inc
push
idivl
sahf
fwait
addl
pusha
les
pop
jb
or
jo
jge
jmp
pop
and
sbb
das
push
push
stos
and
data16
ror
inc
inc
push
push
mov
mov
das
lods
sub
jb
fnstcw
sbb
popa
adc
out
push
inc
ljmp
sbb
and
add
popa
negl
jnp
mov
je
cmp
xor
pop
adc
cli
inc
push
daa
pop
push
xchg
add
lret
dec
xor
xchg
pop
js
hlt
popf
or
cmp
jnp
inc
scas
push
mov
ds
or
stc
cmp
ja
movsb
popf
inc
push
cmpl
jg
daa
adc
and
cmp
scas
dec
adc
push
mov
dec
aas
dec
out
mov
cmp
or
pop
inc
pop
cmp
add
cs
ficompl
cmp
mov
inc
lods
out
arpl
andb
mov
dec
sarl
sbb
push
aam
aas
cs
inc
push
push
jo
jg
cmp
packuswb
mov
jle
stc
or
ficoml
push
jg
ljmp
push
jp
std
pop
push
sbb
int
mov
shl
or
sarl
aas
shl
mov
xor
lods
jp
push
adc
push
and
in
sbb
pop
adc
int3
xchg
out
dec
xchg
mov
xchg
arpl
outsl
jbe
dec
aad
gs
adc
and
inc
das
popa
sub
inc
in
cli
mov
push
inc
pushf
nop
mov
add
insb
cmp
stos
repnz
adc
push
cmp
cld
push
mov
cmp
dec
cli
loop
dec
inc
inc
cmp
mov
mov
test
ficomps
in
and
mov
or
lret
or
sub
mov
fistpl
mov
jmp
ljmp
jmp
xchg
mov
adc
mov
pop
inc
inc
mov
or
shl
icebp
cld
sub
jmp
mov
ja
dec
movsl
push
cmp
les
add
aad
xchg
inc
inc
pop
icebp
cmp
inc
push
inc
cli
add
and
and
lock
mov
adc
adc
fadd
mov
stc
lods
mov
mov
dec
adc
xor
jbe
fwait
ret
cmp
and
sbb
mov
jb
and
lret
jg
sbb
scas
xchg
movsb
mull
scas
loop
cs
aad
cmpsb
inc
pushf
fs
push
inc
fcompl
xchg
cmpsb
cwtl
inc
cmp
stc
pop
adc
lret
shlb
push
inc
gs
adc
push
ret
out
aas
imul
push
pop
and
or
cwtl
mov
leave
adc
movsl
pop
dec
dec
ror
mov
cmp
insb
push
xchg
pop
mov
movsl
pop
iret
mov
lods
enter
inc
ja
mov
loop
pop
or
xchg
pop
test
dec
sbb
jae
cmpsl
jns
mov
push
dec
int3
mov
mov
mov
xlat
fs
loopne
outsl
pop
jnp
xlat
pop
outsb
push
and
mov
lods
jge
dec
leave
fcoms
xchg
mov
lahf
jmp
xor
pop
scas
fdivrs
pop
andl
push
and
inc
test
call
inc
pop
icebp
pop
xchg
mov
stc
pop
mov
test
lahf
lret
jae
int
xor
jae
adc
or
cmp
cs
shll
push
int
inc
shr
gs
adc
pop
inc
push
pop
adc
dec
pop
ret
movd
fwait
lock
push
add
mov
mov
jle
mov
lods
add
inc
mov
jb,pt
stos
sbb
xchg
flds
shll
mov
ja
jmp
xor
negb
inc
inc
dec
xchg
cs
push
xor
pop
dec
mov
pop
ret
mov
not
fwait
mov
sbb
pop
clc
insb
lret
inc
dec
rorl
push
fwait
cmpsb
clc
push
mov
mov
lds
xor
stc
lods
ljmp
rcrb
xchg
outsl
leave
dec
ljmp
xor
movsl
out
test
cmp
mov
aaa
sbb
mov
pop
fmuls
into
pop
xor
sub
jns
scas
enter
pusha
mov
sti
xor
outsl
stos
imul
mov
cmpsb
xchg
aaa
push
scas
dec
jecxz
mov
pushf
xchg
mov
xchg
sub
stc
cmp
add
dec
dec
test
add
shrl
and
inc
push
push
mov
jnp
jmp
out
incl
repz
icebp
sti
cmp
repnz
test
in
out
dec
dec
dec
inc
mul
mov
fsub
loope
les
cmp
mov
xchg
iret
ret
fs
adc
mov
insb
nop
xlat
fistpl
movsl
cld
dec
shl
icebp
test
iret
jg
dec
inc
and
rorb
rclb
pusha
inc
ljmp
inc
jg
and
or
loope
xor
pextrw
mov
mov
mov
or
stos
xor
bound
pop
mov
and
inc
cmpsb
or
mov
aas
clc
lea
icebp
or
ret
mov
add
push
pop
or
dec
lds
fistpll
dec
scas
mov
or
sahf
xor
jno
and
lret
push
je
js
sbb
roll
cs
mov
add
ret
lret
inc
out
and
mov
jo
pop
sub
pop
negl
insl
in
dec
fcompl
loop
dec
xchg
popf
data16
int3
sub
dec
mov
cmpsb
dec
aam
mov
or
lret
push
xor
xchg
xor
outsl
orl
sub
mov
mov
jle
pop
adc
and
push
leave
dec
push
insb
rclb
mov
sbb
or
jb
xor
lods
pop
enter
adc
pop
movsl
lds
mov
sub
inc
push
std
cwtl
xchg
pop
sub
enter
push
loopne
add
xor
in
enter
inc
pop
mov
in
gs
fldl
pop
rcrl
mov
fstpl
add
mov
and
in
cwtl
sub
popa
jg
and
and
lret
call
int
push
ret
pop
sbb
mov
xor
mov
cmp
icebp
cmpsb
or
cs
inc
lret
imul
in
xor
and
pop
loope
pusha
je
ja
dec
mov
mov
inc
push
aas
pusha
cmp
call
gs
out
or
fadds
jb
and
dec
divl
sbb
pusha
sbb
sub
ss
nop
inc
loopne
sbb
dec
fwait
pop
outsl
cmpsb
inc
mov
arpl
push
xchg
movsl
mov
adc
stc
rcr
sbb
stc
mov
pop
sbb
cwtl
in
lret
sub
test
mov
dec
jo
push
xchg
adc
adc
pop
pop
dec
fcoms
sub
sub
test
rcrl
xor
mov
scas
xor
mov
fbstp
mov
mov
lea
popf
mov
fcoml
push
or
setle
push
jg,pt
fstl
into
leave
or
push
xchg
and
mov
pop
imul
jmp
and
scas
rolb
add
pop
or
rcl
fimull
movsb
or
sub
jecxz
and
inc
adc
sub
pushf
sub
add
adc
cmp
jae
push
loop
sub
mov
add
or
mov
lock
pop
add
dec
out
mov
sarl
xor
cmpl
movsb
adc
fcmovnbe
test
sub
xor
lret
js
data16
xchg
int
test
mov
fsubl
jbe
imul
sarl
or
addr16
aas
adc
push
cmp
enter
xor
addl
ror
fistps
fst
sub
and
jecxz
dec
cmp
ss
dec
and
jecxz
mov
outsl
stc
outsl
sub
call
dec
enter
jbe
push
sti
xlat
sbb
insl
addr16
insl
loopne
push
add
pop
inc
icebp
pop
push
push
in
jge
mov
std
std
dec
inc
sub
std
xchg
pop
popa
hlt
sub
push
mov
outsl
adc
or
imull
pusha
dec
dec
dec
add
pop
popa
lret
jno
rsqrtps
or
sub
xchg
test
push
or
mov
gs
in
shr
add
push
and
enter
fwait
sub
pop
subl
pop
enter
test
mov
hlt
test
or
decl
sbb
ljmp
testb
fiadds
xchg
mov
nop
inc
clc
jmp
xor
dec
lods
rcrb
push
pop
fsts
pop
into
pusha
jmp
jecxz
mov
xchg
dec
mov
sbb
cld
push
movsl
adc
jae
aaa
inc
sub
test
mov
adc
leave
cmc
out
push
popa
mov
pop
adc
pop
arpl
lcall
fbstp
or
dec
cmpsl
or
les
mov
rcrb
rorb
scas
pop
loope
mov
xchg
or
mov
mov
shlb
loopne
pop
jns
in
cmpsb
or
dec
lock
dec
add
fildll
aas
fsubl
sub
repnz
mov
jge
pop
ret
xchg
jo
sub
popa
sub
pop
pop
imul
jmp
ja
lahf
push
push
lret
xchg
lods
test
mov
popa
outsb
push
lock
shll
pushf
xchg
gs
ljmp
out
xor
push
popf
mov
stos
sub
dec
sub
sarb
pop
dec
movsl
inc
or
imul
inc
mov
cmp
mov
aas
xchg
test
fsts
adc
arpl
in
jp
fldcw
pop
adc
xchg
mov
cmpsb
fiaddl
mov
cs
xchg
cmp
xor
dec
or
cli
aas
mov
scas
out
jmp
or
mov
mov
aad
sbb
into
xorb
add
bound
xchg
and
aas
int3
roll
and
mov
shll
jmp
or
ljmp
out
fisubs
loope
lds
loope
stos
push
mul
loope
dec
dec
xchg
push
adc
cld
mov
pop
cmpb
lahf
lret
stos
dec
xor
pop
xor
push
xorl
and
sti
add
and
inc
sbb
sbb
stos
lods
pop
sbb
dec
mov
je
xor
jae
and
ret
addl
or
dec
pop
sbb
cs
inc
jl
rclb
in
sbb
repz
sub
stc
fidivrl
or
roll
dec
xor
or
lret
lods
push
add
shl
jbe
idivb
into
dec
orl
jmp
lods
dec
stc
cmp
add
shlb
into
cmp
sub
fisubs
xor
mov
inc
jg
xchg
ljmp
xor
dec
jge
or
lcall
nop
and
push
movsb
mov
mov
mov
or
add
or
fsubs
inc
sbb
repz
lahf
xchg
in
mov
dec
clc
adc
rcr
xchg
fimull
ja
and
call
jge
hlt
clc
jb
and
mov
dec
adc
mov
pop
mov
aam
bound
adc
jge
mov
xchg
cmp
and
fbstp
or
int3
jle
into
cs
pop
pop
pop
dec
test
fidivs
mov
jmp
cltd
jae
shlb
ja
rcrl
xchg
fxam
dec
addr16
mov
push
xchg
inc
rorl
pusha
xchg
or
sub
cmp
cs
mov
and
testl
inc
dec
cmp
cwtl
int
inc
cmp
loopne
pop
push
inc
cmp
xchg
sub
loop
sub
xchg
subl
xor
cmp
dec
in
stos
dec
xor
sbb
dec
fistpl
cmpsb
pushf
lahf
outsl
or
push
fcoml
sarl
dec
pop
or
imul
mov
inc
outsb
jg
or
jecxz
push
ds
adc
in
sub
push
push
jbe
sub
adcl
cs
incl
daa
insb
sbb
push
cwtl
sub
pop
xor
push
inc
lret
cmp
ja
sub
fmull
push
sub
cmp
mov
push
sbb
inc
or
xor
negb
addb
push
pop
inc
test
in
cmpsb
xor
dec
mov
mov
add
sahf
xor
jecxz
ficoms
mov
shl
add
out
push
jno
mov
xor
test
mov
gs
sub
leave
dec
pop
arpl
out
aam
pop
push
and
or
pop
ja
and
ja
or
pusha
lret
xor
or
mov
fdivl
leave
xor
xchg
fdivl
insb
ja
or
sub
adc
loope
mov
mov
mov
jecxz
das
mov
mov
popa
push
or
pop
mov
xor
inc
mov
mull
or
mov
inc
pop
pop
pop
adc
lods
mov
iret
mov
lret
push
cmpsb
mov
xor
inc
adc
int
ret
int
fiaddl
imul
pop
push
mov
pop
pop
das
cmp
in
insl
dec
pop
xor
lret
adc
inc
mov
fbld
jg
pop
ja
pop
pop
cmp
ss
leave
dec
sub
dec
sub
mov
test
sti
loopne
and
daa
mov
cs
cmp
lret
adc
cmp
push
xlat
cwtl
pop
jge
adc
cs
call
jne
mov
dec
loop
lods
addr16
dec
and
fistpl
jae
ret
ret
out
xor
cmp
fsubrs
inc
sub
xchg
aam
test
cwtl
inc
mov
mov
enter
inc
pusha
inc
pop
mov
adc
pop
stos
or
add
push
xchg
xchg
fucomip
xchg
cmp
xor
out
add
fwait
sbb
je
ja
or
int3
clc
pushf
mov
adc
add
lret
push
jg,pt
cmp
fsts
and
ds
xor
jmp
add
xor
pop
movsb
pop
xchg
call
mov
std
lock
mov
dec
dec
shlb
jle
lret
pop
in
mov
mov
fwait
mov
jecxz
xchg
and
lock
loop
adc
movsl
lret
sub
stos
test
push
cmc
cmp
xchg
fwait
in
imul
in
mov
shlb
dec
push
or
into
pop
out
sbb
cmpl
iret
jae
jg
out
ja
inc
push
push
mov
pop
mov
mov
pop
mov
push
loop
xor
int
cmpl
addr16
aas
sbb
inc
mov
in
lds
popf
cmp
scas
push
dec
xor
mov
outsl
arpl
fsts
popf
or
mov
in
cli
aad
sub
lods
inc
in
fisttpl
adc
outsl
lahf
ret
lcall
cmp
lds
loope
fistpll
pop
jecxz
jno
into
or
ret
mov
insl
call
gs
push
rorb
jecxz
dec
inc
cmc
out
js
adc
int3
jae
jg
sub
sbb
int
jae
sub
je
xlat
sarb
aaa
imul
sahf
xchg
mov
sbb
sub
pop
pop
push
je
pop
aaa
cmp
in
shr
push
sbb
iret
jno
adc
mov
mov
adc
in
rcrl
int
popa
jb
imul
sbb
xor
repnz
xor
or
imull
pop
mov
sbb
pop
or
stc
cmpsl
dec
shll
xchg
andb
rorl
cmpsl
mov
into
fnsave
xor
inc
cld
cmc
cmp
sbb
test
sbb
inc
stc
fdivl
push
fbstp
add
inc
lahf
enter
xchg
fmull
adc
cmp
daa
sbb
ret
data16
inc
pop
aas
sarb
sbb
stos
sub
cmp
shll
cmpsb
orb
test
data16
stc
jae
loop
out
je
les
iret
pop
cmp
sbbb
lahf
icebp
cmc
sbb
shlb
xchg
xchg
cmp
cs
insl
adcl
pop
xlat
sbb
imul
push
add
fcoms
push
jg
lds
mov
mov
jnp
or
mov
adc
or
xchg
dec
inc
cmp
clc
fldcw
cmpsb
sub
and
dec
out
mov
pop
mov
nop
jge
xchg
jb
push
or
jle
and
pop
mov
pop
daa
inc
js
sub
dec
pop
sarb
and
jg
popa
and
pop
add
fstpl
icebp
dec
sub
push
mov
push
insl
inc
int
fsubr
shrl
das
inc
int
dec
mov
sub
pop
rcrb
xchg
fcomps
xlat
pop
or
xchg
sbb
mov
cli
jae
ret
xchg
cmp
lock
dec
lret
je
ss
popa
cwtl
pop
pop
test
leave
loopne
push
gs
and
or
scas
jbe
jb
mulb
leave
and
test
inc
leave
pop
ja,pn
lahf
aad
aaa
iret
jl
jmp
jp
scas
sahf
jae
jle
push
mov
pop
adc
add
sub
ds
imul
cmpsb
push
cmp
and
fdiv
jb
daa
arpl
idivl
cli
sub
repz
cwtl
test
mov
jne
lcall
xchg
es
cli
or
push
inc
cmp
stc
push
inc
pop
das
xlat
pop
gs
cmp
sub
rolb
in
int3
or
mov
add
insb
jns
jbe
stos
pop
rorl
aas
and
lock
or
enter
push
sbb
xor
sbb
jne
cmp
mov
jne,pn
cmp
sbb
clc
lods
fwait
int3
data16
dec
and
xor
push
daa
xor
add
push
or
shrb
or
mov
jmp
test
and
stc
sbb
fcmovbe
xchg
dec
cmp
setle
ret
js
inc
scas
icebp
daa
iret
iret
addr16
in
jne
mov
fsubs
push
xor
xor
fisttpll
sbb
push
repz
jbe
or
loope
inc
push
loope
cmpsb
fidivs
dec
jae
cmp
icebp
and
leave
mov
sub
and
cmp
popf
int3
enter
sbb
gs
pushf
add
dec
test
dec
mov
cmp
xchg
call
orb
and
pop
inc
notb
cs
or
pop
cmp
cs
inc
dec
push
mov
sub
test
or
out
scas
lds
inc
pop
clc
mov
xchg
cli
sbb
insl
jae
inc
stos
jle
movsl
jg,pn
sbb
xchg
sarl
sub
cs
sub
inc
icebp
adc
xchg
lret
cmpsb
push
xchg
jg
gs
stos
push
and
push
cmp
jae
and
sub
jp
fisubrl
inc
xor
xchg
cmpsb
aas
mov
pop
outsl
sbb
adc
loopne
dec
ja
cmpb
dec
in
jmp
xchg
lret
loope
xor
adc
sti
sub
loopne
ja
jb
les
dec
movb
clc
push
sub
push
cmp
popa
pop
mov
jp
aas
mov
rcr
jle,pn
push
jae
lret
loopne
sbb
rolb
sarl
arpl
push
in
movsl
or
mov
and
mov
xchg
add
xor
lret
mov
pop
arpl
lret
or
push
mov
or
arpl
dec
cmpsb
push
mov
mov
cmp
xchg
lcall
mov
xor
sbb
in
and
inc
outsb
shlb
mov
imul
jg
loop
lds
sbb
push
movsl
mull
or
in
pop
xlat
push
dec
or
mov
cmp
add
push
or
cmp
and
sub
dec
mov
scas
mov
dec
cmp
inc
cmpsb
mov
dec
mov
xlat
call
xchg
or
lea
or
dec
jg
nop
adc
mov
xor
dec
mov
mov
sbb
sbb
push
rcrb
and
cmp
data16
sub
decb
fldt
xor
out
fwait
mov
ret
ljmp
subl
pusha
out
pop
sbb
mov
or
dec
sub
test
rcll
lds
xor
stos
lods
sbb
cwtl
enter
pop
inc
push
pop
fisttpl
xchg
sbb
sub
jns
gs
xchg
pop
mov
adc
mov
je
fisubrl
lods
push
popa
jno
adc
imul
cltd
cs
outsb
filds
push
addr16
pop
out
push
stos
fwait
push
lea
dec
in
sub
adc
imul
dec
sbb
das
aad
jo
pushw
xchg
pusha
jecxz
inc
push
push
cmp
mov
stc
lea
rorb
or
sbb
jl
add
pop
shll
sub
pop
xchg
fists
xchg
pop
pop
jmp
lahf
cmp
movsw
ret
push
pop
leave
mov
jle
outsl
mov
rol
dec
inc
and
sbb
popa
add
jnp
aam
test
cmpb
ja
or
push
jp
push
xorl
mov
test
or
cmp
cmc
push
or
testb
mov
or
xor
dec
rcrb
clc
push
push
push
aam
mov
rcrl
dec
rcr
popa
xor
mov
cwtl
add
xchg
jbe
jp
test
pop
aaa
lahf
cs
cli
stc
das
mov
jnp
sub
int
dec
jmp
add
mov
and
sti
inc
adc
inc
psrad
hlt
loope
or
sbb
jg,pn
push
das
mull
dec
dec
outsb
lea
dec
das
sbb
ja
adc
inc
shrb
rcr
jp
ja
sbb
out
cs
ljmp
rol
imul
jl
rolb
in
xchg
hlt
or
popf
sbb
xor
or
movsl
jp
pusha
xor
outsl
fldenv
movsb
ljmp
xlat
push
adc
loop
or
outsl
test
cs
fisubl
sbb
xchg
fsub
dec
inc
cmp
jp
cmpsb
popf
add
add
adc
push
outsb
jmp
adc
fwait
adc
mov
pop
sbb
push
std
inc
adc
xor
dec
push
sbb
sahf
jp
vprotq
sub
add
inc
mov
mov
daa
aaa
cmpsb
cli
mov
jmp
testl
ret
jg
mov
int3
fmull
add
mov
pop
jne
sub
jae
pop
mov
adc
add
aad
mov
fisubs
jg
cmp
push
jge
mov
neg
pop
loopne
std
push
das
movsl
or
jno
enter
inc
hlt
scas
addl
cmp
loop
cmp
jb
mov
imul
in
mov
ret
mov
lods
in
movb
add
jecxz
mov
rcrb
js
ljmp
inc
cmp
scas
cltd
add
mov
jnp
lock
inc
mov
adc
mov
xlat
pop
fidivrl
ja
cmp
std
daa
mov
adc
cmp
xchg
sbb
incb
lret
sbb
xor
leave
dec
cmpb
pop
inc
xor
insl
pop
xchg
sbb
sub
dec
sub
ljmp
mov
mov
mov
outsb
push
sbb
sub
pushf
dec
fwait
int3
js
and
cmp
jb
mov
test
int3
rcrl
sbb
insl
cmpsl
ret
dec
and
out
push
lock
sub
pop
call
jp
inc
sbb
dec
mov
or
mov
stos
mov
stc
push
xchg
nop
stos
pop
cmp
ljmp
cli
dec
loope
and
cs
or
lret
mul
lret
push
test
jo
mov
js
adc
pop
xor
and
sti
gs
ficompl
mov
scas
push
inc
fisttpl
sbb
sahf
sub
lret
push
push
sub
jb
jge
outsb
or
inc
sbb
mov
and
cmp
stos
insb
lea
or
lods
pop
mov
lods
loope
test
fisubrs
xor
loope
adc
jg
jle
notl
dec
pop
stos
cmc
repnz
mov
xchg
stc
lods
or
fimull
shlb
imul
cmp
pop
add
fmul
imul
movb
push
adc
aas
loope
cmpsb
add
dec
arpl
cs
aas
fstp
dec
test
cmp
movsl
dec
in
jmp
sbb
xor
or
stc
adc
cs
sti
pop
clc
dec
ret
mov
adc
xor
dec
xor
xchg
dec
fsubrp
imul
xchg
fistps
movntq
out
sbb
ss
xchg
sahf
fcomp
adc
xor
dec
inc
dec
mov
int3
mov
nop
inc
adc
adc
push
push
gs
loopne
sub
adc
and
loop
cmc
jl
xlat
out
push
out
stos
test
scas
xor
cmp
fisttps
push
daa
cli
pop
push
into
movsl
or
jo
popa
push
mov
lds
roll
imul
pop
xlat
inc
and
dec
mov
mov
and
ret
ds
lcall
push
pop
shr
pop
lods
in
gs
cmp
pop
mov
add
movsb
add
push
ja
stos
call
pop
lahf
or
inc
imul
je
and
scas
lock
adcb
fiadds
enter
pop
and
fstpt
ret
vmovq
je
xchg
mov
pop
sub
mov
inc
js
rcr
mov
mov
add
cs
sbb
cmpsl
pop
movsl
pop
dec
ret
mov
push
cs
ljmp
and
inc
sbb
addr16
cmp
jg
jne
enter
test
push
rcll
pop
in
rolb
dec
sti
addl
rcl
push
inc
jo
daa
push
pop
sub
test
sarb
shl
call
pop
rclb
lods
int
mov
lret
dec
sbb
lret
or
mov
push
and
dec
pushl
jge
stos
cmp
cmp
xor
sbb
jb
mov
adc
sub
sarl
sbb
aad
cs
inc
push
cltd
push
lcall
jo
mov
xlat
jecxz
movsl
mov
xorb
inc
and
mov
negl
mov
das
popf
idivb
or
fcoml
cld
ja
rclb
add
sahf
dec
dec
leave
out
dec
dec
sub
mov
dec
movsb
cs
mov
jne
popa
jne
sub
and
sub
cs
sbb
push
xchg
ret
ss
pop
add
rorl
je
fistpl
iret
nop
lcall
inc
pop
push
or
jg
xchg
push
fidivrs
dec
aaa
xlat
mov
lock
mov
dec
loop
fstps
repnz
mov
push
xchg
rol
adc
mov
into
mov
inc
xchg
mov
jae
and
pop
pop
mov
mov
jno
stos
test
dec
jle
out
cmc
js
xchg
lret
popf
scas
and
pop
mov
movsl
jp
pop
or
cmpb
jmp
adc
sbb
cwtl
pop
inc
aaa
leave
add
cmp
push
dec
test
jnp
ljmp
and
adc
dec
mov
in
lret
cld
cli
xchg
ret
lret
jl
jecxz
dec
cmpsb
pusha
inc
loope
divl
and
add
inc
pop
nop
and
cmp
xor
xchg
adc
pop
xchg
lret
popa
and
sub
aas
loope
rcrb
add
mov
das
cmp
adc
in
test
jmp
mov
insb
dec
xchg
cs
dec
xchg
int3
jo
dec
pushf
push
dec
clc
lret
mov
jp
mov
dec
jbe
fisubs
and
cs
inc
inc
xchg
inc
add
push
negl
lds
xchg
pop
or
xor
iret
std
push
and
add
inc
sbb
xchg
rorl
xchg
fmulp
adc
in
xlat
mov
mov
jl
ret
and
lea
popf
mov
leave
dec
inc
or
xchg
scas
les
rol
mov
push
push
xchg
stos
sbb
sbb
adc
add
jmp
into
test
sbb
mov
fs
jnp
leave
dec
sbb
lds
push
cs
loope
xchg
loope
xor
cmc
add
mov
inc
cwtl
mov
jnp
jae
xchg
xchg
xor
addb
sbb
int3
rolb
xchg
insl
and
and
movsl
cmpsb
stos
das
das
cli
stos
rcl
cmp
push
aaa
pop
je
jae
inc
aas
jmp
cmp
jo
mov
ficompl
add
cltd
dec
gs
fsubs
or
dec
push
loope
out
lret
dec
daa
movsb
int
fcomp
or
or
mov
pop
std
stc
xchg
cmp
push
and
in
dec
dec
lea
fistpl
js
cmp
mov
mov
rcr
dec
lds
rcll
mov
sti
dec
mov
mov
xor
xor
push
popf
loopne
cmp
inc
aam
sbb
rolb
in
aam
jo
and
pop
jbe
andl
mov
cmp
mov
jne
fiadds
xor
into
mov
add
mov
outsb
iret
fmull
xchg
fimull
push
enter
xchg
mov
or
adc
inc
dec
add
push
xlat
mov
add
pop
pop
dec
jmp
orl
rol
cs
fwait
sbb
adc
xchg
scas
lock
or
stos
shrb
das
aas
cmpsb
lret
inc
xchg
pop
sub
decb
out
mov
or
cs
jnp
ss
or
sahf
xor
sub
pop
jmp
stos
daa
push
loopne,pn
daa
cmovp
push
mov
pop
sub
push
stos
cli
ret
orb
sbb
cmp
adc
stos
or
sub
pop
add
add
lods
xorb
scas
jo
and
jne
je
xchg
loop
shlb
ss
push
std
add
out
and
push
add
jmp
inc
xor
aam
mov
fstpl
push
test
mov
dec
cmp
add
xchg
cltd
xchg
jb
xor
jmp
shlb
in
cltd
inc
xor
or
or
inc
movsl
test
pop
sbb
fisubrl
xor
inc
leave
adc
lds
bound
mov
pop
mov
push
jns
dec
dec
pop
hlt
lods
pop
xor
cmp
lret
loopne
fldl
mov
shlb
and
pusha
mov
dec
shl
lock
cltd
dec
shrl
add
jmp
pslld
fisubrl
fsubrl
sti
inc
test
mov
aas
and
pop
outsl
enter
jle
aam
mov
sbb
and
inc
pop
and
std
test
sub
dec
mov
pop
cmp
sbb
movsl
adc
cmp
push
jmp
cmpsb
sub
or
sub
repz
jg
fst
inc
sbb
cmp
mov
pushf
mov
dec
add
xor
inc
mov
push
test
dec
dec
mov
into
nop
jae
xchg
flds
jmp
xor
aas
jne
mov
or
jecxz
loope
lahf
adc
mov
call
mov
mov
push
movb
push
aaa
xor
js
and
inc
mov
push
lcall
mov
andb
dec
stc
ret
sbb
lods
pop
inc
jmp
and
dec
mov
pop
xlat
lret
dec
adc
in
pop
stos
dec
or
inc
pop
test
std
lods
data16
mov
repz
outsb
aad
pop
cmc
ret
ret
xchg
push
sub
xchg
push
andl
loopne,pt
pop
cli
mov
out
mov
dec
mulps
dec
push
fnstsw
cs
jno
sbb
cwtl
repnz
fildll
mov
adcl
cmp
fldcw
push
dec
adc
and
out
mov
xlat
das
mov
xor
sti
mov
into
popa
mov
fbstp
rclb
add
xor
mov
stos
pop
mov
rcrb
int3
pop
xor
pop
pop
cmp
jae
or
mov
jecxz
mov
scas
mov
cmpsb
sbb
pop
addr16
mov
push
xor
out
push
cmpsl
pop
pop
dec
out
loop
xor
lahf
inc
fmull
es
dec
out
scas
and
andl
imul
xor
jl
insb
sti
mov
mov
pop
mov
loop
cmp
mov
fsubrl
clc
gs
out
enter
les
inc
or
sub
lcall
ja
in
pop
pop
xchg
outsl
cld
dec
sub
push
mov
loope
xor
in
inc
lods
rorl
adc
pop
pop
mov
pop
movsl
cs
mov
leave
lea
fdivs
fimull
pop
ljmp
cmp
pop
mov
dec
mov
push
push
push
pushf
out
sbb
int
leave
push
daa
mov
popa
pop
fimuls
lret
data16
jmp
inc
mov
jae
fucomi
mov
rolb
mov
or
movsl
sti
stc
in
xor
pusha
mov
lods
pop
bound
mov
movsl
int
push
mov
aad
pop
mov
jbe
push
mov
addr16
xor
add
lret
stc
mov
gs
xchg
not
fbstp
pop
mov
dec
movl
jo
dec
stos
lcall
pop
jb
leave
add
jmp
das
inc
addr16
pop
out
lds
jp
sub
add
fcomps
pop
inc
fidivrs
push
sbb
mov
popa
and
test
iret
dec
ljmp
shrl
cmpsl
dec
aam
fucomi
jge
mov
inc
cltd
and
add
sbb
jle
aad
rorb
inc
sub
push
mov
pop
sbb
push
mov
mov
leave
xorl
shl
inc
ljmp
pop
adc
leave
in
sbb
xchg
dec
js
or
mov
sub
inc
addr16
mov
xchg
xlat
or
xor
stos
ja
jecxz
popa
push
dec
es
enter
ljmp
push
outsl
leave
push
stos
hlt
push
mov
or
outsb
xchg
mov
pop
rolb
data16
pop
inc
daa
les
ja
dec
rclb
ds
aam
andl
ja
fimull
dec
dec
ret
jp
das
mov
inc
jmp
or
lahf
leave
cli
insl
std
mov
maxps
or
imul
dec
push
inc
inc
push
sub
jmp
or
inc
mov
xor
sbb
add
mov
dec
ret
dec
adc
sbb
inc
mov
pop
fwait
lahf
xor
dec
cld
pop
xor
and
dec
inc
pop
leave
xchg
or
roll
push
xor
adc
dec
sub
xchg
ljmp
cwtl
sti
mov
ljmp
fisttpll
pop
sti
mov
ja
mov
decb
mov
dec
fisubl
jns
pop
inc
mov
rcrl
mov
cwtl
inc
ljmp
ret
inc
dec
xor
enter
push
inc
push
pusha
mov
adc
inc
pop
into
test
call
inc
movsb
popa
daa
adc
push
leave
sub
or
ret
or
inc
xlat
out
ja
pop
add
jp
or
loope
xor
dec
push
dec
dec
in
push
dec
fimuls
push
ret
ret
jecxz
icebp
sbb
or
int
pop
dec
push
cmp
mov
dec
addr16
leave
dec
fcmovne
fisubl
fimull
cmp
inc
inc
mov
ret
fildl
into
add
arpl
jae
xchg
rorl
loopne
mov
push
push
idivl
pop
add
sub
out
aas
filds
or
cmc
fstpt
int3
fadd
lret
sarl
adc
dec
cmpsb
dec
int3
push
fisubrs
lahf
inc
cwtl
add
cmpsb
inc
jno
daa
dec
push
adc
pop
test
fdivr
push
lret
pop
cmp
jmp
adc
ficompl
add
aas
inc
lcall
jae
cld
pop
leave
movsl
outsl
adc
pop
js
mov
mov
dec
addr16
cmp
xchg
mov
or
jno
sub
repz
add
inc
inc
data16
dec
aas
pop
ja
psubw
jnp
push
inc
adc
or
movsl
mov
aas
dec
aam
push
inc
inc
xlat
call
iret
daa
xchg
xor
jge
sarb
ret
or
pop
and
aas
inc
int3
add
daa
fsubrs
cmpsl
inc
popa
inc
mov
or
leave
imul
adc
or
or
sbb
fcmovnu
inc
outsl
imul
add
mov
lret
pop
inc
push
add
cld
mov
into
inc
retw
xacquire
inc
or
or
pop
hlt
divl
and
inc
jmp
lret
out
push
sbb
or
mov
mov
int
inc
pop
inc
or
into
xchg
push
inc
pop
jmp
stos
out
fs
dec
fcmovbe
inc
jle
sbb
sahf
sarb
cmp
push
inc
jg
stos
jl
and
enter
loop
xchg
dec
icebp
loop
adc
sub
push
inc
ror
or
adc
inc
mov
int
shrb
loopne
mov
imul
and
jns
dec
movl
std
add
inc
cmp
jmp
sbb
fld
and
or
dec
pop
jmp
jmp
push
faddl
dec
imul
dec
jg
jecxz
xchg
inc
xchg
lret
lds
leave
in
das
adc
dec
ret
inc
mov
push
aas
sahf
dec
mov
test
fldenv
leave
fcmovnu
xor
push
or
sbb
pop
pop
pop
jae
push
aam
hlt
ret
jmp
rol
dec
dec
sub
lahf
loopne
enter
push
push
test
or
dec
movsb
sub
push
leave
out
addr16
push
lock
push
dec
repnz
imul
dec
test
push
mov
push
dec
cmp
outsl
gs
pop
ret
adc
aas
cmp
mov
inc
aad
or
pop
call
pop
sub
or
sarb
test
test
dec
push
cmp
sub
shr
dec
fsts
hlt
leave
push
inc
push
leave
push
jmp
dec
inc
insb
inc
sbb
push
sub
ja
shl
xchg
aam
mov
pushf
dec
incl
add
push
sbb
or
push
ret
or
fsubr
inc
pop
into
xor
imul
sub
in
rcrl
ret
or
in
ja
add
fisubrs
fiaddl
adc
clc
vminsd
cmp
leave
ljmp
cmp
adc
adc
sbb
outsb
push
add
repnz
mov
or
stos
xor
dec
pop
leave
jmp
fs
xor
xchg
and
inc
cmp
mov
jge
inc
in
std
fiadds
dec
xchg
aas
bound
pop
cmpsl
sub
push
inc
mov
imul
sbb
out
xchg
xchg
cltd
ret
jmp
stos
ror
leave
sbbl
outsb
inc
leave
and
mov
and
leave
int3
mov
dec
inc
fsubs
outsl
xchg
pushf
mov
pop
pop
imul
pop
enter
imul
and
lret
and
and
pop
mov
loopne
cwtl
add
dec
dec
add
js
or
dec
sub
jae
sub
daa
pop
mov
sub
dec
dec
add
stos
cwtl
xchg
rcll
cmp
dec
cli
inc
roll
pop
inc
pusha
dec
sub
inc
shr
push
inc
cmp
dec
push
insl
inc
push
das
addr16
cltd
inc
xlat
xor
mov
int
push
pop
or
mov
outsl
sbb
pop
pop
fildl
pop
add
or
dec
or
adc
fnstenv
push
inc
lds
dec
mov
xchg
pop
flds
mov
leave
test
adc
push
push
inc
outsl
inc
dec
imul
call
inc
push
inc
mov
xchg
mov
xor
xchg
in
xor
fcmovne
adc
mov
inc
sub
sbb
push
lahf
sbb
inc
out
inc
xchg
in
sub
mov
pushl
cmp
cs
aam
dec
cmpsl
or
push
pop
fxch
inc
ljmp
pop
fimuls
pushf
jmp
aam
fisubl
popa
cmpsl
pop
fwait
mov
pop
push
lds
nop
cmp
call
xlat
push
sbbb
inc
add
inc
stos
movsb
push
push
mov
dec
outsl
adc
addr16
pop
or
or
insb
jecxz
mov
dec
js
daa
mov
mov
ja
xlat
pop
jmp
or
iret
aad
aas
inc
out
sub
call
lock
jns
jnp
pop
push
dec
dec
andb
clc
push
faddl
push
fxtract
jle
repnz
pop
into
and
imul
xlat
rolb
call
inc
shrl
sbb
dec
xbegin
leave
push
hlt
and
loopne
popa
dec
pop
xchg
or
add
cmp
call
adc
adc
inc
inc
stos
pop
pop
fldl
stos
pop
inc
iret
ror
stos
in
clc
test
push
add
aas
ja
das
popf
sub
shrb
cmp
shlb
leave
movsl
sarl
mov
or
inc
data16
fimull
inc
xchg
fiaddl
leave
sub
fs
lds
cmp
xchg
aas
jbe
leave
cmp
sub
mov
xor
into
movsl
rorb
ljmp
xor
or
add
fcmovu
and
jmp
push
dec
sbb
cmp
cmp
push
push
cmpsb
shlb
fldl
insb
cmp
mov
cmp
push
xor
dec
adcl
pop
push
pop
inc
fldenv
fs
aad
inc
aas
cmpsb
fwait
and
dec
xor
mov
sub
rol
inc
push
dec
int
int
stos
roll
and
or
add
dec
rcll
inc
fiaddl
mov
out
inc
leave
mov
enter
stos
xchg
xor
pop
inc
subl
pop
mov
les
pop
push
arpl
popf
int3
adc
aaa
mov
sub
lret
fmul
inc
push
fdiv
fimull
imul
sbb
jmp
inc
inc
sahf
cli
dec
cs
and
inc
imul
push
pushf
inc
and
xchg
mov
call
pop
inc
pop
inc
xor
pop
cmp
fcmove
lahf
cmp
pop
cmp
outsl
inc
inc
ret
pop
inc
mov
dec
fsubl
or
xchg
inc
or
or
stos
int
loope
pop
and
xchg
pop
and
dec
ret
popf
pop
fmul
inc
stc
and
test
shrb
push
jne
daa
aaa
aam
fcmovnbe
xor
roll
ret
mov
aam
dec
inc
leave
add
out
adc
xor
push
pop
shrl
aas
pushf
and
dec
dec
push
test
fcmove
or
mov
sub
cmp
lcall
repnz
aad
pop
mov
xchg
test
pop
dec
repz
dec
fdivrs
out
xlat
aas
pop
ss
dec
pop
ror
xor
sbb
inc
pop
cmp
fcompl
push
and
arpl
or
pop
pop
sub
outsl
inc
cmp
xor
pop
inc
mov
enter
pop
enter
or
fldcw
leave
add
cli
xchg
pop
pop
gs
dec
es
or
push
dec
jnp
or
pop
rcrl
aam
cld
or
leave
or
sub
shrb
fmull
xchg
aas
aas
imul
outsl
jmp
pusha
aas
pop
fmul
fimull
in
inc
aam
pop
test
pop
fldt
lds
rclb
mov
sahf
xchg
push
add
inc
add
jns
pop
lret
ds
cli
inc
shrb
pop
xor
adc
cmp
or
lahf
mov
dec
pop
in
ret
or
insl
sbb
enter
aas
push
xchg
mov
inc
stos
sub
aas
shr
iret
and
pop
stos
jl
mov
lret
xchg
pop
inc
in
or
sbb
pop
stc
loope
sbb
dec
popa
dec
sub
cltd
aaa
leave
and
and
in
adc
ret
or
add
or
mov
pop
rcrb
pop
cmp
xor
das
or
nop
inc
or
mov
inc
int
add
push
inc
pop
aam
sbb
ja
jecxz
adc
sbb
push
fiaddl
leave
xchg
leave
or
idivb
inc
push
aas
addb
je
fildl
call
cmp
push
lock
or
push
push
xchg
pop
rolb
mulb
jg
inc
aad
mov
and
adc
out
jno
sub
mov
pop
or
jecxz
sub
cld
fcmove
sub
push
pop
pop
cmp
dec
sub
and
or
ss
jae
pop
iret
loop
leave
lahf
pop
sub
and
push
mov
or
imul
jl
xchg
and
inc
fcmovb
jmp
cltd
dec
push
cmp
ror
push
mov
lcall
lods
inc
jne
xlat
xlat
fadds
sub
nop
rolb
es
adc
sub
ret
div
stos
jns
enter
push
mov
dec
xlat
push
inc
dec
jge
sti
pop
inc
inc
pop
fadd
stos
loope
mov
mov
lahf
inc
ret
mov
rcl
imull
stos
hlt
mov
sub
push
fs
int
test
pop
rcrb
rolb
push
or
mov
pop
arpl
lret
push
inc
mov
sti
add
cmp
test
call
inc
shlb
cld
js
push
inc
roll
xchg
movsl
int3
jb
cmpsb
dec
leave
inc
push
leave
cli
pop
push
icebp
inc
push
ror
stos
jmp
or
leave
or
out
push
enter
data16
nop
sbb
mov
pop
dec
sti
data16
push
inc
push
sub
dec
test
ja
push
dec
loope,pt
leave
cld
jae
dec
ret
fs
jp
pop
inc
lret
stos
sbb
mov
fisubrs
mov
or
sbb
pop
inc
aas
cli
push
in
inc
sub
jmp
or
movb
cmc
dec
sub
outsl
ljmp
pop
fnstsw
notb
outsb
aas
dec
pop
rcrl
xor
sahf
arpl
mov
ret
or
inc
aad
sub
dec
fildl
push
leave
sbb
or
or
inc
inc
push
into
pop
mov
sub
xor
xchg
pop
pop
push
and
sub
fildl
add
sub
fmul
in
pop
jb
ja
pop
fildl
stos
inc
stos
or
xor
or
inc
xchg
add
pop
aam
xchg
test
sbb
dec
fldl
call
cli
inc
push
jge
xchg
fcmovnu
inc
dec
pop
inc
push
and
lods
dec
adc
adc
bound
push
inc
push
outsl
test
xor
jnp
icebp
inc
push
test
sbb
adc
or
dec
mov
pushf
call
inc
push
int3
arpl
inc
gs
sarb
fisubrl
jge
push
xchg
cmp
stos
ficomps
dec
ret
cmpsl
cmp
ret
rolb
cmp
push
data16
addr16
repnz
xor
loop
sub
in
bound
int3
cmp
leave
cltd
jg
in
lret
fisubrl
xor
xchg
jp
popl
dec
inc
dec
dec
sub
jae
in
push
pop
popa
sbbb
cmpsl
ds
js
xchg
add
rclb
xor
fsubrs
jns
ror
inc
fwait
leave
daa
mov
dec
mov
pushf
dec
fwait
arpl
add
add
pop
adc
rol
dec
dec
gs
ret
sbb
or
jp
sub
inc
dec
jns
leave
add
inc
dec
ficoms
sbb
mov
stos
into
pop
mov
adc
xorb
cmovae
clc
sub
loopne
dec
stos
mov
lret
lahf
inc
sub
add
mov
sub
ljmp
sbb
sub
ficompl
and
xor
inc
xor
cld
pop
outsl
leave
jmp
adc
push
jp
lea
dec
pop
stos
int
fdivrs
sub
fwait
or
arpl
data16
imul
ljmp
fdivrs
in
jmp
out
inc
inc
dec
lret
jecxz
scas
adc
dec
jne
and
lds
popf
icebp
cs
push
or
xchg
in
mov
addr16
lret
les
pop
pop
pop
push
pusha
call
movsl
add
sub
dec
fiaddl
stc
mov
sub
mov
cmc
pop
dec
mov
xor
lahf
ret
inc
fnsetpm(287
xchg
sarl
sbb
mov
adc
mov
int3
sbb
in
ja
pop
cmp
mov
dec
stos
sbb
stc
or
testl
bswap
mov
xlat
js
mov
push
mov
mov
dec
mov
popa
sub
mov
jmp
pusha
andb
stos
mov
cmp
add
lahf
sbbb
fdivrs
dec
jne
cmp
sub
repnz
dec
cltd
jg
xor
imul
test
lea
cmpsb
out
cmc
and
ror
movaps
push
mov
popa
mov
loop
aas
inc
mov
sbb
xchg
pop
lcall
lock
ret
inc
movsl
mov
sbb
cmp
dec
fsubrl
cmp
xchg
xlat
jge
js
inc
dec
jns
mov
mov
loope
mov
jmp
pop
adc
insb
push
mov
and
in
dec
dec
mov
outsb
xlat
sbb
xor
mov
jbe
shlb
cltd
mov
inc
mov
mov
idiv
cwtl
inc
movsb
addl
in
cmp
fidivl
and
pop
xchg
jb
adc
cs
xor
cmp
sub
pop
dec
or
test
das
inc
dec
pop
stc
add
movsl
xor
mov
add
sub
shlb
enter
pop
sbbb
fdivrs
in
cmpsl
add
sbb
xlat
pop
and
lcall
movsb
mov
pusha
aas
pop
adc
push
and
movsl
and
and
jne
lahf
inc
or
cmp
mov
inc
imul
mov
push
sub
ja
push
xchg
or
inc
ds
xor
cs
add
stc
sbb
xor
les
cli
pop
fwait
cs
add
ljmp
adc
sbb
pop
loopne
hlt
pop
jo
or
or
push
adc
lods
inc
mov
sub
xchg
movsl
cld
movsb
pushf
dec
call
data16
push
and
aaa
jnp
push
lahf
sahf
pop
and
mov
push
add
dec
inc
rorl
lcall
xchg
mov
sbb
mov
cwtl
and
daa
and
cmp
aam
pop
cwtl
movsl
jmp
fisubl
out
mov
jo
jae
cmpsl
xchg
sbb
pop
rcrb
mov
in
call
mov
inc
xor
xor
cld
mov
mov
mov
push
dec
jbe
inc
movsb
xor
fisttps
adc
add
sub
cmp
push
fldl
jecxz
js
and
jle
cld
mov
and
push
xlat
loopne
lret
add
mov
mov
repnz
sarl
call
into
cs
push
push
mov
and
popa
imull
or
aas
mov
push
incb
scas
mov
mov
push
mov
out
pop
cwtl
stos
add
rol
mov
mov
mov
xlat
ss
cli
xor
sub
int
ja
addl
xlat
dec
bnd
test
pushf
mov
fdivrl
and
mov
xor
jmp
or
fsubrs
jl
sub
rcll
xchg
mov
and
lds
test
aaa
sub
test
mov
insb
xchg
gs
pushf
dec
dec
cltd
inc
pop
jg
outsb
outsl
push
mov
movsl
jmp
iret
jle
inc
aas
adcl
adc
int3
hlt
push
jno
cmp
repz
pushf
inc
mov
scas
jl
sub
rorl
popa
pop
aad
xor
jecxz
mov
clc
dec
push
or
jne
pop
popa
nop
jne
loop
and
popf
call
push
pushf
xor
aaa
fwait
jl
and
mov
pop
xchg
adc
pop
cld
pop
pop
xor
inc
jbe
push
xor
pop
mov
cmp
loopne
shrl
jmp
roll
insl
add
lea
repz
inc
gs
and
sub
iret
aaa
sub
and
mov
aas
aad
inc
ja
push
push
ret
cmc
movsl
add
mov
imul
push
lsl
imul
add
aas
inc
mov
and
cs
sti
pop
add
mov
aam
and
fldenv
add
mov
je
sbb
mov
inc
mov
testl
pop
mov
add
imul
dec
std
sbb
mov
push
adc
hlt
lahf
dec
popa
adc
aas
loope
mov
adc
and
lret
fldl2t
push
insb
inc
pop
or
sahf
xor
dec
inc
das
aad
xchg
cld
sbb
push
cmc
push
xor
xchg
push
gs
xchg
and
mov
fidivl
xchg
arpl
rcrl
inc
cs
push
sar
test
push
jecxz
dec
daa
cmpsb
leave
mov
mov
mov
arpl
outsb
insl
sub
push
jno
nop
outsl
push
and
xlat
insl
movsl
es
dec
cwtl
pop
ret
push
cs
cmp
call
cli
jge
rcrb
subb
icebp
xor
iret
dec
fldt
jg
or
in
adcb
mov
xor
adc
es
sahf
xchg
imul
aaa
or
xchg
dec
ret
addr16
push
cmp
dec
stc
cmp
shl
fcmovnb
mov
sub
adc
fldl
push
stc
sbb
jnp
inc
iret
and
adcl
lock
data16
pusha
xchg
lds
daa
icebp
jne
mov
xchg
stos
jne
fmuls
xor
add
fisubrl
mov
ret
lods
dec
sbb
jb
jle
cmpsb
cmp
sti
hlt
leave
adc
test
or
or
cs
movsb
and
lds
cmpsb
shlb
or
ljmp
imul
cwtl
jg
loope
mov
call
lcall
in
sbb
test
shl
dec
fnstenv
push
mov
fdiv
xor
fisttps
loopne
xor
cmp
addb
popf
insb
push
std
sub
sti
call
pop
lock
fimuls
or
cmp
xchg
call
push
xor
cwtl
pop
push
std
pop
arpl
pop
mov
aaa
cli
pop
push
xchg
mov
mov
dec
imul
cltd
inc
pushf
ret
mov
lods
add
sub
xchg
es
xchg
dec
out
pop
test
pop
sub
xchg
movsl
into
stos
xchg
xor
into
jg
add
add
repnz
push
mov
push
lahf
rcrl
fwait
adc
sub
cmpsb
outsb
insb
lds
dec
xor
inc
adcb
cld
je
or
sbb
loope
inc
dec
push
pop
fnstcw
in
pop
push
jle
and
fildll
lods
ret
data16
mov
add
popf
push
sarl
jg
push
inc
dec
or
cmpsb
aas
int3
inc
adc
outsl
jg
arpl
xchg
jae
inc
rorb
fimuls
imul
ficomps
adc
inc
lea
test
sub
and
rolb
mov
ljmp
dec
mov
lret
adc
push
daa
push
jmp
ja
add
aaa
or
imul
out
dec
xor
push
pop
hlt
sbb
add
or
inc
adc
push
les
lds
mov
mov
mov
sbb
aas
loopne
cwtl
add
bound
pop
hlt
loopne
loope
sub
aad
add
dec
or
fdivp
subb
rolb
arpl
movsl
pop
in
sbb
push
decb
pop
adc
adc
mov
add
lret
sub
mov
mov
xchg
sub
pop
push
imul
inc
fwait
dec
xchg
jl
xchg
and
dec
std
fidivrs
stos
and
pop
out
pop
cmp
cmp
arpl
mov
inc
jmp
jl
aaa
or
mov
cli
xchg
call
mov
imul
cs
jle
loopne
pop
jnp
movb
xchg
les
cs
and
inc
sub
mov
popf
negb
inc
jnp
jno
cmp
dec
mov
pop
jae
lret
ja
push
pop
cs
popa
movsl
add
mov
add
fimull
jae
ficoms
push
loop
dec
cwtl
daa
pop
dec
pop
mov
cwtl
hlt
pop
and
dec
loope
out
sub
pop
bound
clc
and
push
mov
cmp
sbb
sub
jo
rcr
mov
cs
movb
dec
pop
or
movsl
jbe
sub
pop
nop
push
sbb
loope
hlt
cli
mov
mov
sub
fidivrs
add
push
xchg
push
and
pop
xor
mov
dec
pop
je
lcall
shlb
and
xor
icebp
sub
aas
sub
cmp
jmp
mov
add
jne
pop
js
mov
popa
decb
aaa
loope
cmp
dec
out
jl
in
sbb
movsl
adc
jl
push
scas
cmpsb
jbe
shlb
aas
or
adc
movsl
lds
inc
push
mov
cltd
scas
push
call
movb
mov
ss
sub
inc
bound
mov
mov
je
sub
test
out
push
xor
scas
mov
in
jnp
mov
add
stc
mov
jbe
xchg
push
push
mov
loope
dec
mov
xchg
mov
mov
enter
loope
frstor
jo
pop
rorb
sbb
inc
mov
push
pop
xor
les
mov
mov
movsl
cmp
or
jg
test
lods
daa
lock
mov
pushf
mov
imul
leave
push
out
dec
ret
push
aam
dec
cmpsb
leave
mov
push
push
mov
sahf
rcrl
pop
pop
jno
pop
xlat
sub
idiv
stos
rorb
push
fdivrl
inc
cmp
adc
insb
jecxz
adc
mov
sbb
movsl
xor
clc
aas
jne
cmpsb
insl
dec
cmc
jp
or
icebp
das
aam
outsl
mov
mov
lock
xchg
jl
jbe
add
xor
cld
faddp
add
cmp
mov
adc
les
cmp
loope
es
shrb
pop
dec
mov
popa
mov
adc
cmp
xchg
cmp
mov
push
mov
lods
mov
push
scas
mov
or
leave
push
xor
and
stos
out
pusha
or
ret
imul
inc
mov
pusha
sub
lret
push
out
outsb
enter
fcoml
lahf
xchg
mov
inc
mov
mulb
xchg
out
les
js
and
rep
ficomps
push
xchg
outsb
aas
or
pop
pop
ljmp
out
and
sub
jg
jmp
call
adc
insl
adc
inc
and
mov
movsl
stos
inc
xchg
std
sub
mov
fbstp
mov
inc
ss
insb
mov
push
cmpsb
sbb
shrb
idiv
or
cmpsb
test
adc
push
test
sahf
ret
cmp
or
inc
jae
lcall
decb
or
or
popa
dec
into
cmp
mov
mov
data16
or
and
pop
std
push
or
cmp
shll
daa
jmp
cmpsb
adc
out
inc
dec
pop
adc
adc
fnstenv
insl
data16
or
shlb
jb
mov
mov
push
xor
mov
scas
in
pop
jecxz
jmp
cmc
dec
mov
pop
lret
mov
pop
addr16
cmp
mov
sub
iret
cs
cmp
cmp
jge
sub
sub
leave
ret
leave
ror
lahf
cltd
and
xchg
xor
mov
stos
rcr
sarl
dec
imul
str
or
pushf
dec
jb
mov
rorl
std
dec
ja
dec
lea
pop
lods
sbb
fsub
mov
call
fimull
pop
cmp
ljmp
loop
das
mov
push
les
dec
mov
jmp
jp
clc
sarl
mov
mov
jmp
pop
mov
movsl
dec
mov
jb
sbb
xchg
imul
fildl
xlat
stos
sub
aaa
div
shrb
int3
mov
dec
inc
xor
in
movsl
or
xor
push
add
in
push
mov
cmp
or
rorl
ror
xor
pusha
repz
dec
data16
fisubrs
dec
inc
inc
xchg
adc
pop
adc
dec
jo
mov
mull
push
cs
rcrb
imul
mov
jnp
rorl
repz
pusha
xlat
push
dec
daa
int3
push
xlat
and
push
std
inc
mov
and
cmpsb
sub
mov
cs
mov
push
pop
addr16
fidivrl
ds
fdivrl
jns
testb
mov
subb
sub
rcl
mov
test
jo
push
pop
test
sub
mov
cmp
push
pop
sub
mov
or
push
pop
xchg
dec
repz
and
push
mov
ljmp
xor
into
hlt
in
gs
pop
rclb
push
ficoms
negb
movsb
push
add
in
mov
push
lret
or
aad
dec
repz
xor
arpl
pop
ds
test
popa
dec
jae
lds
cs
aas
pop
enter
push
mov
cmp
jmp
add
xor
int3
cmc
std
xchg
jle
mov
lret
cmp
into
inc
cs
ljmp
test
xchg
pop
jae
sub
or
js
or
sub
pop
shrb
notl
mov
jge
jb
lret
and
jg
cmp
jle
aaa
jmp
push
push
aas
mov
jl
loop
jp
les
shlb
xchg
mov
or
test
lods
or
lea
es
push
pop
test
sub
aas
pop
adc
lret
les
sarb
jp
and
arpl
xchg
adc
add
xchg
inc
add
inc
inc
xchg
scas
mov
xor
jg
fdivrs
shlb
sahf
sbb
add
sub
and
out
pop
xchg
mov
mov
mov
enter
mov
add
dec
pop
in
in
nop
adc
sub
jmp
add
and
pop
pop
inc
add
sti
sbbb
mov
mov
push
mov
nop
stos
lds
fmul
pop
fwait
rcll
mov
cmc
es
and
xlat
and
aas
cld
mov
ret
inc
repz
lahf
hlt
cmp
dec
jne
lds
cmp
sbbb
inc
adc
sub
push
adc
mov
cmp
cmp
cli
mov
jb
cmp
adc
xlat
or
pop
lods
xchg
fdivs
rclb
pop
push
and
inc
inc
mov
push
xlat
cmc
xchg
ds
adc
jnp
aaa
sub
push
rcr
dec
mov
jo
and
jne
mov
xchg
fisttpll
sbb
shrl
stc
mov
fisubs
dec
cld
int3
inc
aas
loope
cld
push
cltd
test
inc
shl
dec
rorl
pop
adc
cmpsb
push
ret
fcom
stos
pushl
cs
adc
push
aas
sub
adc
cmp
sub
in
repz
and
mov
xlat
mov
push
cs
andb
jmp
and
inc
pop
or
cmc
jnp
sub
mov
sbb
mov
in
in
add
sbb
outsl
cmp
pusha
pop
mov
ds
add
xchg
push
andb
fdivl
jp
and
ja
pop
insl
lcall
rclb
mov
loop
out
and
cmpb
inc
xchg
stos
sbb
push
sbb
jl
and
jecxz
xchg
xor
push
mov
pop
mov
pop
mov
pop
ja
sbb
push
js
loopne
cmpsl
aam
cs
dec
sti
imul
jl
stos
cmpsb
clc
inc
les
xchg
inc
sub
jo
push
scas
outsb
in
and
scas
or
arpl
dec
lret
sub
mov
aas
sbb
in
or
testb
and
cmpsl
shrd
ljmp
dec
jno
pop
lret
push
and
jg
cmpsl
dec
adc
push
nop
mov
js
mov
push
jmp
cmp
push
ljmp
push
mov
ds
sahf
pop
sub
cwtl
mov
lds
pop
shll
dec
loope
rcll
dec
xor
aas
std
inc
cli
pop
lret
jp
es
inc
movsl
aas
jg
into
orl
jno
mov
cs
adc
outsb
ret
adc
shrl
repnz
and
enter
dec
mov
mov
gs
lret
inc
jno
ds
fisubs
cmp
mov
les
mov
scas
fldenv
aas
mov
cmpsb
push
enter
adc
pusha
and
adc
sub
xchg
mov
leave
scas
push
icebp
lock
gs
mov
into
mov
repz
push
aaa
pop
inc
mov
sbb
inc
cltd
dec
pop
mov
ja
dec
jp
outsb
fstp
cmp
cs
fsubr
fadds
push
mov
add
rolb
pusha
sbb
mov
and
popa
js
push
mov
mov
pop
gs
adc
dec
pop
or
int
dec
repz
dec
aad
sub
fldt
xor
sub
dec
iret
xlat
mov
pop
sarb
cs
dec
shlb
inc
cmp
and
jo
adc
mov
lods
adc
addr16
data16
inc
in
push
sub
outsl
fimuls
inc
mov
cmp
xchg
clc
loop
lret
and
cmp
dec
lcall
push
mov
sbb
insl
ret
push
mov
lret
jecxz
lcall
sub
scas
dec
and
outsl
pusha
jne
loop
inc
pop
call
pusha
mov
rorb
les
jmp
inc
lret
pop
mov
enter
mov
push
cld
js
lcall
pop
jne
pop
faddp
cmc
divb
addr16
or
xor
jns
pop
add
xchg
xlat
fisubs
push
adc
aas
pop
js
mulb
inc
cmp
cld
dec
arpl
xor
jns
mov
push
sbb
fiaddl
loope
add
cwtl
pop
add
fwait
aam
or
loop
mov
pop
sbb
and
rorw
mov
cvtps2pd
cld
dec
mov
jle
jl
repnz
cmp
xchg
mov
mov
movsb
mov
pop
inc
lret
dec
mov
pop
inc
loopne
fwait
outsb
stos
data16
dec
cmp
sbb
insb
push
xlat
jmp
xchg
lret
push
lods
mov
clc
xchg
mov
lock
jp
pop
mov
sub
aad
jbe
or
pop
jle
add
stos
pop
cs
inc
jmp
aas
mov
in
rcrb
xor
adc
inc
and
or
and
shlb
stos
ss
pop
jbe
push
out
mov
adc
decl
les
cmp
xor
sub
xchg
or
lods
mov
jne
pop
dec
mov
jae
imul
push
mov
imul
subb
int3
mov
out
sbb
add
cs
das
push
dec
sbb
popa
cmp
inc
mov
xor
dec
xchg
aam
mov
cmp
scas
jmp
cmp
subb
pop
cmpsl
popf
push
mov
call
mov
mov
pushf
in
push
jns
sarb
ljmp
fstpt
pop
rclb
idivl
ret
or
push
xchg
out
lret
push
fwait
adc
fs
repz
mov
inc
or
cwtl
jnp
add
inc
ljmp
testb
xor
xchg
divl
and
aas
xchg
daa
lret
push
sub
ja
movsb
into
fstpt
fadds
fdivrl
jnp
pop
mov
mov
sub
stos
cmpsl
arpl
xchg
dec
pop
push
fldenv
lcall
push
rclb
sbb
mov
sub
adc
fsubr
outsl
push
mov
xor
ss
repz
jbe
sbb
outsb
mov
or
orb
or
repnz
mov
adc
aas
mov
pop
sbb
mov
and
lds
push
inc
and
and
movsl
enter
mov
fwait
test
fnstenv
loopne
scas
loop
ss
fwait
in
dec
scas
xor
xchg
dec
push
fs
dec
push
lret
mov
ss
xchg
jg
adc
inc
scas
scas
cs
xor
cmp
dec
test
lods
pop
sub
into
popf
les
mov
rclb
cwtl
decl
inc
add
adc
popa
sti
push
stc
iret
adc
call
mov
enter
or
cs
push
insl
cmp
lcall
inc
nop
push
inc
mov
dec
in
xor
sub
cmp
insl
jl
push
xlat
adc
adc
mov
jmp
and
test
lcall
jge
cltd
and
mov
and
sti
sub
push
std
mov
enter
pop
imul
mov
xchg
jle
push
sar
daa
xchg
pop
push
cmpsb
in
inc
sub
dec
loop
mov
in
inc
icebp
push
jb
sub
add
into
ror
or
inc
js
or
inc
push
call
repnz
shlb
push
inc
subb
xor
cmpsb
inc
enter
sub
in
in
insb
mov
jecxz
cs
aaa
pop
xchg
subl
rcl
sub
sub
dec
divl
dec
fiadds
int3
nop
shl
adc
dec
inc
add
stc
add
xlat
inc
xchg
lea
inc
xchg
or
or
jl
xor
clc
xorb
hlt
sbb
push
lods
call
adc
imul
leave
dec
shlb
jnp
inc
dec
sub
dec
repz
xor
mov
imul
dec
daa
setle
add
mov
dec
iret
bound
push
js
add
mov
pop
inc
adc
ja
lcall
cs
or
add
push
jle
add
shrb
cmpsl
loope
mov
pop
push
aad
loope
fsubr
push
inc
pop
push
push
lcall
cs
or
fdivp
inc
cmp
aad
mov
je
pop
sarb
mov
xlat
mov
push
lea
pop
cs
mov
mov
inc
stos
lock
add
daa
gs
cmp
stos
inc
jo
dec
pop
pop
into
repnz
std
mov
out
jge
lock
cmc
xor
jecxz
cltd
xchg
jp
mov
adc
repnz
repnz
das
inc
mov
jb
inc
sub
aaa
stos
mov
or
sbb
lahf
inc
xchg
or
push
ret
push
das
std
add
push
int3
lea
pop
inc
pop
add
xor
jno
clc
inc
or
insl
fstps
add
je
rorb
jle
mov
add
push
inc
sub
inc
mov
adc
adc
sbb
add
mov
adc
test
mov
mov
clc
mov
cmpsb
std
stos
out
loope
inc
jl
jns
push
and
leave
loope
ss
or
or
add
mov
sbb
outsl
jae
xor
mov
cwtl
shl
jo
sbbl
xchg
mov
jge
cs
daa
push
ror
inc
jmp
or
pop
sub
popa
jae
shrl
repz
loop
inc
cli
inc
mov
int
fstps
pop
inc
aam
add
and
jp
mov
clc
bswap
aam
cs
sahf
and
orl
push
sbb
jecxz
push
lcall
test
scas
pushl
sub
dec
mov
xchg
outsb
inc
mov
and
pop
adc
inc
stc
jmp
cwtl
xchg
or
stos
or
pop
and
xor
cs
cmpsb
sbb
aas
lds
jno
scas
adcl
dec
mov
lea
mov
jne
out
movsb
filds
mov
fimuls
js
js
or
and
ficompl
insl
insb
sub
enter
jle
mov
ds
pop
and
dec
push
sbb
pop
xchg
andl
loopne
cmp
xchg
pop
add
sbb
xor
fsubl
cmpsl
enter
in
adc
push
xor
jg
mov
mov
sub
push
pop
pop
xorb
inc
mov
cmpsb
sub
pop
jp
pop
sub
sbb
pop
inc
js
mov
or
add
outsl
stos
bound
xchg
js
inc
out
adc
sub
stos
mov
sub
loop
cmp
lret
sbb
cs
sub
test
subl
jo
sub
sbb
mov
pop
or
dec
cmp
stc
inc
push
add
mov
mov
xor
sbb
pop
shlb
mov
loopne
pop
sahf
xor
lret
sbbb
pop
clc
sbb
cmc
call
mov
cmp
adc
adc
loope
int
je
xchg
scas
push
pop
loop
xor
mov
pushf
dec
stc
enter
xor
xor
and
leave
std
insb
outsl
add
add
cmp
test
dec
inc
jne
or
inc
sbb
cmpsl
repnz
push
cmp
je
cmp
dec
dec
scas
insb
push
xlat
add
inc
mov
or
sub
int
aam
stos
popf
dec
push
test
pop
gs
int3
gs
cmpsb
pop
mov
sti
aaa
loop
pop
int
dec
ljmp
loope
ret
test
sti
mov
popa
int
xchg
xchg
cmp
xor
lret
mov
jecxz
mov
fstpl
cmp
xchg
pop
sbb
movsl
mov
push
int3
fdivrl
jle
sub
enter
pop
nop
jg
rcrb
jae
popf
add
jg
jmp
test
arpl
lcall
aam
cmp
pop
mov
cmp
stos
lods
mov
pusha
test
hlt
pop
je
clc
mull
and
xchg
inc
push
stos
sub
repz
rolb
mov
mov
cmp
lock
xchg
js
or
je
stos
inc
in
jmp
ss
js
mov
pop
int
lret
ja
sbb
mov
rorl
dec
pop
dec
pop
daa
stos
push
bound
pop
cs
jl
rcr
cmp
das
xchg
clc
addr16
dec
xlat
adc
ljmp
adc
sbb
pop
das
call
adc
jae
test
test
cltd
clc
jo
out
sub
xchg
in
jbe
pop
xchg
test
sub
mov
jae
and
dec
mov
sub
xchg
add
or
sub
scas
fwait
pop
ret
sub
jns
mov
out
lret
int3
out
dec
xor
cli
pop
call
jns
dec
aam
cmp
inc
cmc
rclb
adc
dec
mov
mov
cli
jbe
ret
in
jne
rcll
pop
pop
inc
mov
mov
dec
stos
xchg
jmp
sbb
dec
fsts
sbb
fisubrl
pop
jns
sarb
mov
pop
cs
cmp
mov
loope
stc
push
rorb
fbstp
test
jae
loope
jno
popa
loopne
mov
jae
cwtl
cs
jecxz
cmp
std
int
loope
push
dec
fistps
idivl
xchg
push
add
lock
xor
lret
sub
xchg
xorb
loopne
dec
pop
mov
dec
fisttps
or
add
mov
dec
scas
or
adc
fildll
adc
mov
std
cltd
jbe
or
out
and
pusha
mov
fcomps
fcmovu
je
adc
pop
push
test
inc
push
pop
xchg
sub
sarb
adc
xlat
aas
lods
sahf
jp
fisttps
aam
lea
sub
bound
xchg
jae
sbbl
out
adc
and
outsb
or
es
sub
pop
sub
sti
popa
inc
pop
mov
xor
xchg
cmc
les
or
xchg
hlt
call
repz
sarb
fsubs
pop
imul
mov
das
mov
mov
mov
fiadds
cmpsl
cmp
cs
cmp
pop
ljmp
enter
testb
fidivrl
xor
xchg
xor
dec
ss
mov
inc
dec
es
cld
ret
push
orl
push
sub
xchg
mov
cs
xor
adc
cmpsb
dec
pusha
sbb
mov
adc
inc
and
pop
rolb
les
sbb
in
and
in
push
aad
xchg
xor
fcompl
mov
and
and
dec
scas
ret
shl
xchg
shll
xchg
pop
mov
push
mov
and
mov
jns
mov
sbb
xchg
mov
test
leave
and
mov
out
jmp
mov
andb
outsb
xor
stos
or
inc
cmp
pop
sbb
or
cmp
rcrl
test
inc
xchg
adc
or
mov
sahf
sbbl
xchg
mov
test
outsb
out
pop
popa
arpl
sbb
mov
fstl
inc
push
adc
imul
pop
fidivrl
push
sbb
xchg
dec
inc
movsl
pushl
stos
cs
xor
mov
mov
mov
sahf
fbld
inc
add
mov
xchg
fldl
icebp
aaa
shll
or
cmp
cmp
dec
data16
xor
or
add
subl
sbb
ds
push
aad
cmp
sahf
dec
ja
cwtl
sbb
ret
adc
mov
fxch
pop
xor
push
cmc
jmp
jbe
aaa
cmp
jg
adc
adc
add
fdivrp
adc
daa
push
mov
addr16
data16
cmp
adcl
sub
add
and
in
cmp
hlt
xchg
jmp
in
mov
mov
mov
add
pop
sub
iret
add
adc
pop
and
dec
and
xor
sbb
add
pop
mov
xchg
shll
inc
bound
cmc
sahf
sub
fs
jmp
movsb
cmc
adc
pop
jmp
rcr
scas
enter
loopne
aas
cmc
testl
ror
pop
pop
mov
cmpsb
cmpsb
pop
push
pop
les
add
int3
bound
call
mov
xor
adc
lret
push
and
dec
xchg
lea
cltd
jle
rorl
aas
repz
push
pop
cmp
jecxz
dec
jae
in
xor
sbbl
cs
pop
enter
loope
in
inc
mov
push
ljmp
jbe
jae
sbb
push
sub
push
movsl
inc
mov
jno
incl
out
mov
or
sbb
inc
push
mov
jns
sbb
cs
push
and
cmp
pop
push
sbb
jg
fcmovbe
xchg
icebp
aaa
call
mov
lret
sbb
loope
pop
les
mov
jl
outsl
adc
pusha
push
xchg
icebp
mov
std
pop
les
test
lahf
add
cmp
dec
test
jae
repz
mov
jg
movsl
ss
mov
jb
add
push
mov
adc
add
pop
lahf
cld
shlb
fisttpl
mov
testb
pop
adc
adc
imul
jmp
mov
bound
sub
daa
andb
inc
stos
in
jbe,pt
pop
sbb
sahf
sub
lods
flds
sub
push
and
sub
outsb
adc
push
aad
mov
add
ljmp
dec
mov
push
imul
pop
stc
push
js
test
inc
mov
sti
fbstp
add
cmpsb
dec
or
mov
sub
pop
push
addr16
cmp
lret
cmp
inc
jg
cmp
pop
js
jle
xchg
mov
and
adc
xor
push
cmp
sub
sub
test
and
roll
cli
dec
mov
sbb
pop
cmpsb
push
adc
lds
and
cmpsl
adc
jbe
cs
sub
or
dec
data16
pushf
adc
std
stc
aam
or
jmp
stc
fnstenv
inc
mov
ljmp
push
lds
xchg
cld
pop
mov
scas
aad
and
mov
sbb
mov
cmp
jb
ret
iret
int3
lret
inc
cmp
in
cmp
mov
das
rcll
mov
and
aaa
outsb
add
fldenv
rolb
inc
mov
inc
aam
mov
xchg
roll
sub
vdivpd
xchg
cli
clc
push
sahf
aam
stos
jp
pusha
dec
out
mov
jnp
xor
mov
loop
in
mov
loope,pt
aad
pop
aas
sub
xor
pop
lahf
into
xor
aas
lods
adc
pop
test
arpl
js
push
rcrl
cmp
mov
pop
test
call
pop
xor
outsb
in
and
xor
jmp
in
cmpsl
mov
lahf
xor
jb
xor
xlat
dec
push
fimull
xchg
paddq
popf
mov
cmp
in
pusha
fldenv
adc
cmpsl
push
push
das
xor
sbb
push
sub
clc
or
inc
rorl
ja
pop
shlb
and
gs
jbe
or
aas
xor
xchg
loope
jp
sub
leave
iret
std
aaa
push
mov
inc
repz
jmp
inc
imul
mov
inc
add
inc
popa
or
sbb
sub
xchg
in
pop
scas
xor
and
xchg
mov
add
insl
pop
fidivl
jns
dec
xchg
dec
cmp
fiaddl
pop
inc
and
hlt
pop
in
cmpsl
jne
cmpb
or
test
vmulpd
inc
data16
aaa
dec
out
and
popf
jecxz
out
das
push
std
emms
cli
push
dec
idivl
int
sbb
dec
add
sbbb
mov
inc
gs
push
pop
lds
mov
adc
stos
cmp
mov
lock
sahf
fwait
testb
or
xorl
dec
leave
dec
mov
ljmp
cmp
mov
sbb
push
pop
rorl
scas
push
mov
adcb
pop
sub
int
fisubl
lods
lea
popa
imul
sbb
mov
sub
fcomps
mov
in
add
lods
fiadds
sbb
sub
dec
in
dec
xchg
mov
push
cs
cmpb
and
xor
cltd
mov
push
pop
ds
inc
sub
push
sub
adc
xchg
xor
mov
xor
inc
aad
and
js
ficompl
dec
imul
fsub
cli
xchg
lcall
dec
xchg
add
ja
stos
call
push
leave
push
cmpsb
xchg
adcb
out
sub
cmp
sub
pop
incb
pop
push
outsl
or
xor
pop
cmpsb
xlat
dec
cmp
xchg
loop
xchg
std
sub
inc
push
sbb
shrl
ja
test
jmp
sub
int3
add
popf
mov
inc
adc
arpl
sub
add
or
and
inc
mov
push
mov
dec
mov
js
or
or
sarl
mov
push
and
add
add
jmp
outsl
pop
jbe
push
mov
mov
sbb
test
mov
shr
sti
add
sub
and
mov
out
mov
adc
mov
push
rcl
push
jecxz
subb
movsl
add
mov
dec
shl
pusha
pop
js
in
xor
andl
mov
jne
int3
dec
cmc
cmpsb
jl
leave
into
and
dec
pop
push
mov
inc
jle
loopne
sbb
nop
sbb
push
jmp
mov
adc
scas
sub
dec
or
andb
stc
or
jnp
movsl
sub
ds
popf
movsb
adc
mov
xlat
loopne
lret
in
stc
shr
add
push
xchg
jno
inc
pop
add
xor
add
xor
adc
daa
data16
push
movsb
adc
cmp
pop
scas
lret
cmpsl
add
jmp
mov
sub
or
push
pop
inc
cmc
pop
lret
fcoms
xor
add
lahf
mov
fcmovu
test
popa
inc
and
inc
jb
sub
or
or
pop
lcall
loopne
mov
push
cs
hlt
adc
icebp
pop
les
mov
cmp
dec
clc
dec
inc
pop
pop
enter
push
lcall
push
jae
insl
mov
lcall
ja
mov
or
add
or
inc
sub
cld
in
mov
lods
adc
push
fcomi
data16
jmp
xor
mov
add
add
jmp
icebp
or
or
repnz
adc
cli
mov
les
in
das
dec
sub
adc
pusha
stc
notl
or
aad
inc
gs
mov
push
xchg
jmp
add
add
or
mov
pop
call
popf
arpl
rorb
sbb
cmp
popf
push
push
aas
mov
and
addb
mov
rorl
repnz
mov
sbb
dec
leave
cmc
out
jno
mov
je
inc
sbb
xchg
mov
rcrb
rcl
and
repnz
cmp
jmp
dec
jmp
inc
fwait
inc
das
xchg
lods
out
dec
cs
pop
das
ret
add
cmpsb
std
pop
xchg
mov
jo
xchg
stos
jmp
pop
mov
lret
mov
fidivrs
dec
sbb
pusha
repz
jmp
loopne
fbstp
cmpsb
mov
ljmp
push
adc
orb
mov
jmp
dec
repnz
in
push
push
cmp
out
scas
sub
cli
mov
stos
and
push
or
data16
gs
subb
fadd
lret
or
pusha
sbb
lds
or
and
mov
lods
or
inc
popa
push
add
dec
mov
and
outsb
loope
or
popf
loopne
fcmovne
comiss
jl
jbe
mov
js
leave
inc
mov
inc
mov
repz
adc
inc
scas
ret
push
pop
push
fs
lods
and
xor
scas
inc
stos
cs
add
dec
imulb
fisttps
pop
push
sbb
jmp
fsubrl
int3
push
std
push
divl
sub
xchg
cmp
bound
loopne
xchg
rcrb
add
cltd
or
fcompp
or
je
fdivrs
xchg
dec
inc
mov
and
mov
mov
inc
sbb
rcl
cltd
jmp
ffree
leave
mov
call
loope
mov
fsubrl
push
scas
push
divb
ret
adc
fcoml
pop
pop
mov
add
imul
jle
xor
pop
shlb
dec
pop
aam
fisttpl
mov
popa
ljmp
stos
pop
lods
xchg
jne
lods
add
out
dec
push
push
lods
mov
dec
lods
jo
push
pop
inc
or
and
push
rcl
flds
mov
push
jl
xor
pop
fmull
push
aam
mov
stos
push
test
and
shll
inc
add
rcrb
push
pop
clc
jg
cmp
adc
cs
ret
inc
and
jns
scas
out
daa
sbb
jne
jmp
inc
dec
rcrb
sti
and
in
daa
mov
movsl
push
dec
push
lds
mov
dec
dec
inc
stos
int
cld
mov
dec
adc
push
or
sbb
adc
mov
scas
mov
loopne
lahf
inc
mov
push
mov
pop
xchg
bound
enter
add
negb
mov
jecxz
fwait
cli
hlt
ret
adc
cmp
sub
sbb
dec
jecxz
lods
pop
inc
mov
rclb
daa
cmp
push
add
cmpsb
sub
sbb
stos
mov
pop
pop
mov
jnp
adc
rcrb
rcrl
sbb
inc
outsb
jg
cmp
je
xorb
sub
mov
mov
rclb
fsubl
pop
xchg
push
ret
inc
in
scas
mov
cwtl
xor
lret
into
add
negl
popf
mov
mov
push
xorl
sbb
or
sahf
mov
sub
shlb
sarl
cmp
lock
out
pop
call
hlt
or
stos
jg
inc
shl
popa
int
je
mov
cltd
int3
nop
in
ficoms
sub
add
push
mov
sahf
or
sub
mov
jb
or
call
inc
sbb
dec
dec
or
jo
add
or
or
add
ficomps
pop
std
inc
gs
pop
bound
loope
push
xor
inc
movsb
arpl
rorl
das
mov
push
call
mov
out
jp,pn
pop
dec
mov
adc
xchg
sarb
adc
bound
push
leave
or
xchg
mov
mov
or
ficoms
push
mov
test
out
dec
jnp
mov
js
movsl
mov
call
pop
mov
stos
sub
stc
pop
dec
jge
pop
aam
cmp
xchg
inc
popf
or
loopne
sub
sbb
inc
mov
dec
fists
mov
idivb
xor
inc
and
loopne
dec
cmp
dec
and
lahf
rcll
pop
mov
add
lcall
std
popf
pop
iret
dec
lds
cmp
sbb
dec
lods
mov
sub
xchg
cmp
mov
pop
lret
pop
sub
mov
or
add
pusha
in
ss
lds
cmp
mov
jg
jmp
xor
enter
lret
lahf
fsubrs
mov
std
xchg
fwait
ret
jg
decl
xchg
cs
fidivrl
sub
jmp
cltd
push
push
int
inc
mov
push
js
pop
mov
cs
cmp
fsts
push
dec
and
pop
add
out
repz
loop
dec
iret
add
pop
sub
inc
dec
xchg
dec
rorl
stos
mov
in
add
mov
mov
lretw
movsl
xchg
clc
into
in
and
mov
add
cmp
lret
push
dec
negl
mov
adc
xor
pop
dec
pop
push
mov
popf
iret
or
stc
sbb
xor
fcompl
sbb
xor
jne
pop
pop
ljmp
movsl
stc
inc
pop
pop
fs
xchg
adc
xor
pushf
or
ds
int
add
sbb
xchg
inc
jmp
cmc
jg
or
sbb
mov
inc
adc
xchg
outsl
sub
or
mov
push
repz
jg
int
fwait
enter
stc
dec
mov
push
push
and
xlat
jae
pop
and
sbb
sub
xchg
push
ja
pop
subb
mov
pop
stos
jae
movsl
mov
mov
inc
ja
sbb
cld
rol
pop
dec
loopne
add
xor
dec
daa
and
mov
test
adc
or
mov
mov
mov
push
aam
call
lcall
dec
jo
cli
jbe
xor
scas
dec
dec
fisttpll
data16
fyl2x
rcrb
dec
add
notb
ljmp
and
nop
imul
stos
loopne
call
mov
mov
or
es
xlat
push
mov
dec
cmpsb
and
jg
dec
mov
in
ffreep
ja
push
call
dec
enter
repnz
ja
sub
loop
in
add
pop
dec
xor
dec
inc
aam
data16
lahf
mov
adc
lahf
pop
mov
dec
inc
mov
gs
dec
div
int
jno
into
sahf
mov
xor
js
lret
jge
imul
outsl
int
loop
sub
je
cwtl
push
push
mov
jg
mov
jo
adc
cmp
adc
jo
mov
mov
lds
mov
incl
lret
add
iret
insl
inc
jno
int
ss
push
push
or
dec
add
mov
inc
push
push
jne
shl
xchg
outsb
xchg
pop
dec
sub
or
stos
mov
adc
fwait
mov
xchg
pop
sub
vmread
mov
adc
repnz
pop
aad
cmp
call
js
test
push
mov
mov
into
rorl
cmpl
mov
in
push
inc
ja
push
data16
mov
rorl
sub
lret
leave
xchg
cmpsb
cmpsl
lods
jo
xor
stos
pop
inc
push
addr16
ja
jmp
ds
clc
clc
pop
daa
inc
or
std
pop
test
or
jmp
stos
inc
mov
loopne
aaa
dec
popf
aas
loope
or
dec
push
push
inc
loop
add
mulb
jg
xor
pop
test
mov
jp
cli
jbe
pop
and
mov
push
jecxz
inc
cs
or
or
mov
or
or
inc
inc
cmp
pop
rcll
dec
dec
lcall
out
pop
cs
jnp
lock
stc
dec
mov
dec
sbb
arpl
xrelease
add
pop
out
pushf
rcr
dec
clc
sti
push
push
sub
lret
cli
sub
mov
ja
jae
fldl
pushf
in
rorl
add
cmpsb
cmp
fisubl
stc
aas
loop
ficoml
icebp
push
dec
imul
aam
lcall
cld
jnp
inc
cmpsb
call
xchg
push
int3
movd
inc
popl
lret
adc
test
xchg
mov
clc
icebp
jns
outsb
dec
xor
insb
xor
inc
pop
js
mov
call
cmp
adc
pop
call
jl
and
scas
adc
aas
pop
sti
insl
xor
arpl
shrb
leave
testb
ljmp
sub
ficomps
pop
rcll
pushf
push
mov
popa
repz
outsb
mov
loopne
add
bound
cs
ljmp
xor
mov
aas
in
push
mov
jb
leave
jbe
sti
add
push
sbb
mulb
adc
push
xchg
stos
or
mov
push
xchg
cmp
add
dec
lret
xchg
rorl
or
arpl
or
sbb
cmp
xor
mov
dec
roll
data16
cmp
lods
lods
mov
imul
pop
stc
and
enter
lcall
mov
and
testl
dec
xchg
dec
cmp
cmp
ret
xor
cli
inc
and
psrad
lods
inc
fildll
inc
or
ds
cmp
mov
mov
sub
lret
sbb
jl
xchg
clc
aas
or
jo
pop
cmp
add
cli
stos
cmp
movsb
hlt
scas
dec
aad
sbb
cmp
lods
xor
sbb
sbb
push
loopne
mov
add
xchg
dec
popa
mov
leave
adc
adc
imul
adc
adc
sub
ret
mov
jmp
test
and
jmp
cs
jg
jbe
or
mov
sub
stc
shll
mov
leave
fmul
aas
je
jg
mov
aas
imul
push
lret
dec
mov
scas
mov
adc
jecxz
jle
sub
or
adc
pop
fs
xor
or
sub
imul
sub
lahf
dec
dec
xchg
xor
test
imul
mov
pop
lret
mov
nop
sbb
lods
push
iret
xor
mov
dec
not
pop
cmc
das
ja
mov
xor
pop
and
js
mov
adc
mov
lcall
int
pusha
in
adc
mov
or
mov
jg
and
mov
pop
cmp
ret
sarb
jae
xchg
push
cmp
stos
push
sbb
lods
das
rorb
test
or
cs
xchg
mov
data16
cmp
ja
sub
sbb
add
mov
loopne
mov
inc
add
mov
rorl
add
fildll
cs
shrb
cmc
push
dec
mov
jne
pop
data16
insb
pop
cltd
mov
pushf
jae
lcall
xor
mov
cs
cmp
adc
pop
sbb
mov
ds
xchg
fisubrl
repz
lahf
or
xchg
out
aam
lret
nop
dec
mov
inc
stos
pop
and
lock
xchg
cmp
pop
jecxz
inc
scas
mov
fistps
subb
add
stc
mov
ficompl
sbb
jbe
imul
or
in
or
or
push
jmp
int3
ljmp
lods
nop
test
stos
jp
std
ret
loope
push
test
aas
xchg
ficompl
mov
sbb
jae
inc
sbb
mov
ret
in
pushf
or
inc
pusha
adc
mov
jl
cwtl
sub
or
movsl
lret
add
sub
inc
jecxz
sbb
insb
or
scas
dec
sub
adc
inc
mov
scas
mov
push
cmp
gs
and
cwtl
jnp
fldcw
and
adc
mov
adc
push
ret
add
sbb
out
lcall
jno
jb
arpl
jb
xlat
inc
and
xor
fiaddl
dec
mov
js
push
lods
and
cmp
das
xchg
and
push
icebp
repnz
cmp
and
das
jae
and
test
in
mov
jp
ficoms
pop
adc
insb
push
cli
push
and
aad
nop
int
cmp
add
gs
rcrb
data16
pop
cld
push
arpl
fiaddl
jmp
xchg
enter
jne
lret
lea
mov
adc
addb
push
push
inc
call
adc
fnstsw
ficoml
popf
fnstcw
push
dec
int3
hlt
ss
push
mov
shlb
mov
jl
and
daa
inc
cmp
jbe
jg
or
mov
jmp
addr16
js
ja
mov
in
div
stos
psubw
mov
inc
push
jmp
ljmp
faddl
sub
je
cmpsb
xchg
and
cmp
cwtl
xchg
add
ret
cmp
jnp
fwait
pop
nop
inc
imul
xchg
jecxz
inc
or
pop
jne
aam
mov
xchg
push
sbb
fisubrl
add
leave
or
mov
outsl
jmp
jl
jecxz
aaa
pop
xor
ret
push
or
pop
adc
scas
and
mov
mov
ret
xor
out
call
inc
das
and
pop
test
xchg
int
ja
cwtl
mov
xor
and
lcall
sbb
jp
gs
pusha
and
add
lcall
push
std
addl
movsb
cmpsb
idivl
xor
dec
mov
jle
or
popa
ret
ja
gs
popl
sub
mov
fbld
jns
push
sub
dec
xchg
jg
je,pn
pop
imul
stc
add
rcl
xchg
jae,pt
mov
pop
cmp
dec
xchg
sbb
shrb
and
fildll
out
jle
jg
jge
lahf
out
mov
in
mov
xor
jns
xchg
and
das
popa
fwait
subb
add
out
add
cli
sbb
adc
packssdw
dec
inc
shlb
lret
addl
aad
and
pop
mov
pop
jl
and
push
and
mov
pop
sbb
addr16
lds
or
clc
inc
sbb
in
xchg
cmpsl
and
stc
ret
jo
call
xchg
or
int3
inc
xlat
mov
dec
mov
inc
mov
xor
sbb
jae
sub
testb
xchg
sub
inc
cltd
jb
js
dec
faddp
mull
pusha
rolb
add
cwtl
mov
int
repz
push
pop
es
int3
sub
inc
sbb
push
mov
lods
and
sbb
in
repz
mov
icebp
sub
pusha
inc
xchg
push
pop
daa
sub
clc
pop
xor
mov
repz
inc
roll
push
int3
inc
stos
pop
push
inc
cmp
stos
mov
pop
arpl
ret
inc
cmp
xlat
outsl
jmp
mov
lret
std
imul
clc
jp
or
add
mov
pcmpeqw
lods
lock
cli
xchg
pop
mov
sub
mov
inc
push
push
mov
mov
add
lods
enter
jg
pop
pop
inc
int3
cmpsb
xchg
icebp
or
push
dec
jmp
cmpsb
jo
fcomps
mov
das
cs
imul
fstps
lcall
xlat
and
or
jbe
cld
xor
mov
ret
lods
int3
xor
in
cs
pop
sub
sub
subl
xor
mov
mov
sbb
cmp
pushf
and
popf
scas
orl
int3
shr
in
shlb
dec
add
scas
jecxz
rcrb
add
pushf
sbb
repz
add
cmp
xor
repz
push
and
loop
mov
in
pop
int3
cmpsb
aaa
jnp
gs
rcr
lcall
dec
in
loopne
fisttpll
jg
sub
cs
lea
lods
aas
mov
pop
mov
mov
andb
add
push
pop
inc
and
ficoml
jnp
scas
jbe
es
xlat
push
dec
adc
or
or
jne
int
imul
fnstsw
adc
stos
push
inc
or
xor
pop
sbb
movsl
cmp
cs
rolb
add
add
enter
orb
jne
dec
inc
movsl
mov
or
cmp
jp
repnz
jbe
cld
pop
mov
mov
or
stos
add
adc
fld1
push
adc
rol
int3
cmc
inc
or
mov
adc
xchg
jo
mov
clc
dec
and
xchg
bound
and
pop
shl
xor
fstl
jnp
aaa
adc
mov
add
rolb
mov
int3
js
mov
cmp
in
imul
cmp
mov
cmp
xlat
cs
rcll
stc
in
mov
rclb
or
push
mov
enter
push
jno
xchg
mov
pop
enter
dec
mov
call
scas
movsl
jp
in
pop
dec
mov
scas
mov
rol
cmp
push
xor
mov
or
push
dec
in
jg
inc
mov
xchg
and
js
ljmp
sbb
sub
rolb
sub
mov
or
in
add
iret
inc
cmp
shrb
adc
dec
jmp
adc
adc
stc
leave
fiaddl
cs
andb
fiadds
adc
jle
rcrl
aaa
xchg
fucomi
sbb
adc
adc
ja
bound
cs
inc
or
orb
ret
ljmp
xchg
inc
subb
in
lcall
mov
in
jnp
or
cmpsb
lahf
add
lds
je
dec
mov
cmp
adc
out
mov
push
push
dec
mov
adc
sbb
add
dec
jmp
xlat
adc
inc
aas
pop
jns
cmpsb
negl
mov
cmp
inc
hlt
outsb
xchg
mov
sbb
inc
cs
mov
cmp
mov
inc
ret
mov
or
add
imul
popf
jp
push
xchg
mov
mov
push
cmp
jae
mov
mov
sbb
pop
std
jmp
insb
movq
dec
pop
sbb
mov
ja
push
jmp
cwtl
leave
jae
push
mov
scas
lods
fwait
pop
mov
add
addb
jg
pop
cmp
push
fidivs
daa
pop
or
in
push
shrl
jne
insb
pop
lock
sub
and
sbb
sarb
or
ror
mov
arpl
mov
pminub
rorb
addb
or
mov
ja
pop
pop
push
xor
dec
inc
mov
ret
add
call
sub
and
add
mov
jae
iret
cmp
insb
nop
add
rol
cs
js
scas
cmp
sbb
or
fisttps
push
aaa
je
adc
or
pop
pop
fidivrl
pop
dec
mov
adcb
insb
sub
dec
test
popa
add
fildll
cwtl
stos
mov
cwtl
movsb
aam
int3
das
outsl
mov
fimull
or
jo
or
loope
xor
repz
fiaddl
es
cmp
xchg
lds
repz
jo
insl
jo
adc
cmpsb
ljmp
gs
lea
and
add
adc
jp
xchg
jmp
scas
aas
mov
xchg
mov
les
cltd
push
aad
push
gs
and
insb
shll
dec
movsb
and
stos
dec
or
leave
inc
aaa
jbe,pn
scas
cmc
cmp
dec
loop
mov
mov
push
repnz
add
adc
xchg
mov
mov
pop
sbb
insl
lcall
inc
inc
imul
push
xchg
sbb
ret
mov
or
mov
pop
inc
push
adc
cmc
inc
inc
cmpsl
mov
pop
and
out
ds
push
push
pop
pop
loop
nop
push
stos
shll
sarl
jmp
push
push
mov
adc
pushf
or
rcrb
fdivrs
xor
adc
aas
and
rcll
test
mov
cmp
pop
add
es
adcl
jne
dec
mov
lods
jo
jae
xor
in
mov
lcall
pop
stos
cmc
gs
lahf
stc
fcmovne
repz
inc
sbb
inc
mov
bnd
push
sub
and
lods
mov
testb
test
or
and
sub
movsb
mov
cli
sahf
xchg
aam
jmp
outsl
sahf
je
inc
aas
lods
push
jmp
jo
js
pop
mov
sub
gs
mov
mov
int
aas
jmp
sub
into
push
pop
fs
subb
pop
aas
dec
jmp
in
mov
mov
inc
imul
or
inc
or
push
sub
mov
dec
adc
inc
fnstsw
xchg
and
mov
out
mov
sahf
push
call
push
sbb
mov
js
jl
lods
lcall
int3
push
ss
repnz
cs
xor
loope
movsb
xchg
out
les
test
push
iret
or
mov
adc
sub
enter
dec
jae
mov
mov
std
clc
insl
push
lds
push
dec
or
scas
in
decl
jae
inc
popf
xor
pop
add
pushf
jge
testl
ret
pushf
dec
add
inc
repnz
ret
xor
lods
sbb
mov
sub
loope
icebp
jmp
idivl
leave
jmp
in
outsl
ret
repz
loop
push
inc
sub
rolb
lahf
jae
jb
and
cmpsb
inc
ss
test
int3
dec
pop
lea
xchg
bound
pop
inc
incl
sub
push
in
and
adc
add
pop
ror
mov
aaa
pop
lahf
mov
popf
rcrl
cmp
push
pop
je
or
call
imul
mov
ficompl
adc
loopne
push
pop
das
aas
insb
xor
or
popf
cmpsb
shl
dec
fs
mov
inc
cmc
sbb
gs
js
mov
add
fwait
test
les
rolb
pop
adc
shll
jb
cmp
inc
cmpl
xchg
arpl
nop
add
sbb
dec
mov
rcrl
sbb
dec
pop
cltd
pop
mov
repnz
in
int3
lahf
pop
sub
mov
arpl
mov
cmp
lret
and
dec
push
jne
jg
ja
fsubs
inc
lods
add
mov
mov
loopne
imulb
orb
add
push
push
sub
lods
jns
enter
jnp
and
jns
cmpb
xorl
xrelease
inc
cmpsb
gs
sbb
dec
bound
mov
inc
leave
flds
js
sub
xlat
jo
xchg
xlat
xor
lret
pop
mov
int3
or
cs
sbb
rorb
push
enter
rcl
dec
cs
mov
push
jmp
dec
jg
mov
pop
icebp
push
adc
call
leave
je
jno
inc
repz
les
mov
mov
inc
pop
add
cmpsb
push
mov
les
in
lahf
int
out
pop
and
push
loope
imul
addl
dec
and
inc
dec
push
frstor
adc
inc
inc
xor
sub
jge
pop
lds
in
ljmp
fisttpl
lret
mulb
arpl
lahf
ss
out
sti
pushf
mov
xor
pushf
cmp
adc
aas
icebp
mov
push
cmpsl
dec
dec
loope
sbb
inc
lock
xchg
dec
sub
dec
sub
and
js
mov
imul
jb
ss
adcl
adc
push
aas
mov
mov
iret
inc
pusha
int
ret
bound
int
xlat
cli
gs
pop
mov
dec
aad
jno
adc
mov
jge
mov
or
add
mull
push
iret
mov
xchg
sub
dec
inc
add
jecxz
gs
test
push
lret
pushf
or
push
jmp
inc
pop
cs
pop
sbb
adc
arpl
mov
inc
jmp
mov
add
inc
les
rcrl
xchg
or
into
and
std
dec
shll
inc
stos
pop
ds
jo
or
out
aad
enter
and
int
mov
jnp
fcom
int
pop
or
sbb
pop
mov
or
or
push
test
int
adc
out
movsb
fisttps
cmp
in
pop
fwait
mov
cmp
push
push
mov
dec
mov
inc
pusha
cmpl
and
push
adc
sub
cmp
out
lods
sub
jnp
jo
inc
popf
sub
cmpsb
lahf
sarl
cmp
and
or
ret
lods
loopne
scas
loopne
movb
subb
inc
loopne
leave
sub
aas
jge
pop
sbb
lcall
cmpsb
xchg
or
sub
cmp
arpl
jmp
pmovmskb
test
adc
inc
push
push
out
inc
mov
adc
cmp
lcall
in
xor
loopne
loop
mov
hlt
inc
stos
cli
aad
cmc
pop
dec
xorb
inc
aas
mov
nop
sbb
and
fisttpl
shll
and
fisttps
or
ja
adc
mov
aas
xor
sbb
fisubl
call
pop
aaa
subb
add
jno
sti
daa
mov
mov
push
pop
sbb
pop
push
leave
dec
aaa
jb
sbb
cmp
cmp
push
pop
pop
inc
pusha
ja
xor
std
push
mov
mov
dec
push
fs
inc
mov
ret
test
push
adc
shl
incb
sbb
rcr
leave
and
sub
mov
rcrb
rorl
ja
push
call
roll
daa
aas
in
sub
add
enter
dec
lahf
mov
mov
jecxz
inc
nop
repz
cmc
and
pop
daa
pop
dec
sbb
mov
cs
ja
cmp
mov
dec
or
jo
dec
dec
out
xorl
lds
repz
mov
test
pop
sahf
int3
dec
push
test
mov
stos
push
cs
out
enter
popa
gs
hlt
enclu
ja
sbb
or
xchg
leave
lock
jmp
cmp
shlb
clc
jecxz
or
lods
cmpsb
mov
jmp
aas
repz
sub
push
movsl
orb
in
cs
notb
or
rcr
jae
lds
popa
pop
and
xchg
aas
push
movsl
outsb
mov
aas
mov
aas
xor
jns
inc
nop
lea
lret
dec
int3
cmp
and
data16
cltd
dec
mov
push
into
sub
dec
ljmp
xchg
hlt
ds
shlb
pop
sub
xchg
push
sub
dec
xor
stc
shrw
mov
cmp
cmp
aam
cs
push
lret
rcll
repnz
sti
jmp
inc
inc
in
lock
icebp
mov
dec
cli
aad
out
dec
xlat
jno
lea
ret
call
xor
in
sbb
mov
lret
std
scas
push
add
adc
inc
repz
or
jbe
stos
push
xor
sub
pushf
clc
dec
jo
sub
repnz
mov
pop
gs
add
add
xorb
mov
mov
nop
push
gs
mov
icebp
inc
xchg
inc
dec
call
jae
mov
imull
dec
imulb
xchg
mov
cli
cs
mov
push
mov
lods
jnp
pusha
js
sub
mov
jmp
testb
inc
mov
inc
test
fs
inc
and
mov
dec
cmpsb
inc
arpl
repz
pusha
mov
pop
jnp,pn
pop
fs
in
aaa
ror
in
mov
push
fsubrl
in
sarb
dec
pop
inc
into
lea
daa
or
pop
ds
xchg
es
inc
cmp
dec
leave
loope
aas
mov
pop
or
mov
imul
loope
in
je
jg
inc
xchg
inc
je
fistps
addr16
in
out
pop
fcomp
dec
jp
xchg
mov
jnp
mov
and
cmp
inc
out
outsl
in
dec
jns
xlat
and
mov
xchg
aad
repnz
push
adc
pop
imul
sbb
cmp
out
xor
add
fwait
or
mov
or
stos
add
lahf
sahf
lods
rorb
dec
pop
jnp
xchg
sti
dec
cs
dec
or
cmp
dec
cltd
jb
mov
rclb
pop
lods
cs
test
das
cmpsb
stc
ficompl
xor
jmp
aas
popf
inc
addl
add
stos
fstpt
cs
mov
fninit
pusha
push
shll
mov
pop
lret
sub
inc
add
push
cmp
imul
in
shll
pop
lcall
lds
pop
or
das
mov
enter
lret
stos
stos
xor
stos
in
sub
imull
cli
or
in
push
cmp
dec
or
sbb
push
sbb
stos
jo
push
pop
leave
cmc
mov
and
jbe
lds
movsl
lcall
inc
mov
cmp
cmp
push
jnp
std
pop
cltd
lret
pop
into
dec
es
sub
imul
mov
loope
inc
pop
pop
mov
cld
enter
mov
subl
and
push
shll
nop
push
addb
stos
and
jns
mov
sbb
mov
push
call
dec
mov
cmc
or
fmulp
repz
cmc
jno
dec
nop
ja
aam
and
pop
lahf
mov
loope
push
lds
or
push
push
mov
mov
ss
dec
push
inc
pop
mov
jp
ret
add
dec
inc
lods
pop
cmpsl
out
mov
jmp
ficoms
iret
pop
pop
sbb
push
sahf
aaa
and
outsl
jne
and
fstps
push
adcb
sub
xchg
loopne
xor
jecxz
mov
pop
inc
xchg
ficoml
imul
dec
sbb
ja
lret
cs
in
mov
inc
push
pop
jmp
cmpsb
lcall
les
pop
inc
data16
gs
mov
xchg
lods
mov
mov
pop
dec
repnz
mov
push
fisubl
mov
mov
outsl
dec
mov
sahf
test
jne
sub
movsl
stos
jl
fwait
mov
repz
dec
xchg
pop
in
jg
jge
pusha
sub
shr
popf
test
enter
dec
add
inc
popa
iret
add
aas
les
pop
sbb
loopne
fisttpll
aas
ror
jecxz
mov
mov
jg
repz
sub
or
rclb
lahf
daa
enter
je
aam
les
push
ret
xlat
inc
mov
rcll
mov
jmp
pop
xor
jae
popf
inc
subb
dec
mov
mov
insl
loopne
mov
and
pop
inc
mov
dec
push
xchg
adc
fsubr
enter
fdiv
jle
les
or
cmp
sub
hlt
jecxz
mov
cs
push
and
jle
pop
xlat
dec
mov
addb
or
jg
gs
ret
lahf
mov
and
cwtd
pop
mov
scas
mov
das
rcrl
cmp
inc
lds
jle
pop
mov
lods
push
mov
in
push
xor
push
hlt
mov
mov
orl
out
fmulp
je
addr16
lods
pop
das
ret
and
rcll
test
sbb
xchg
pop
pusha
or
cmc
cmpsb
mov
xchg
and
loope
rcrb
out
pop
dec
aaa
add
adc
xchg
movsb
pop
insl
and
add
icebp
js
sub
adcb
lret
flds
dec
ja
jmp
std
hlt
jmp
das
adc
lods
cmc
stos
jp
dec
sub
movsl
shll
sbb
or
push
dec
clc
cmpsl
adc
jmp
jb
push
stos
add
aam
in
and
lcall
fs
lods
gs
inc
jnp
or
jae
lea
or
test
pop
ss
jne
fcmovnu
test
mov
xchg
rcrl
cld
cmp
leave
push
dec
jmp
jge
adc
les
mov
cmp
idivb
sarl
dec
repz
lods
jae
jnp
mov
insb
xchg
data16
cmp
push
ja
imul
repz
pop
adc
pop
and
or
mov
cmc
lods
rorl
addr16
lret
ja
dec
xlat
push
hlt
pop
or
dec
and
cwtl
sub
push
fisubrl
jl
adc
pop
jne
popl
pop
jns
repz
push
or
mov
jmp
ds
jl
outsl
sti
mov
mov
inc
dec
xchg
pop
jae
mov
xchg
ds
adc
xchg
pop
or
sbb
imulb
xchg
xor
lds
push
lods
pop
cmc
pop
ja
nop
mov
pop
adc
fcoms
xlat
negl
pop
loopne
imul
push
jbe
inc
sahf
sbb
repz
std
mov
push
hlt
xor
shr
xchg
out
cmpsl
adc
jmp
sarl
das
dec
jge
lahf
pop
and
jb
sub
fwait
push
cli
inc
xlat
data16
cmc
or
cmc
cmp
ljmp
lods
mov
loopne
dec
enter
inc
jns
push
outsb
sbb
mov
loope
xchg
xchg
xlat
ja
sbb
sub
ret
popa
dec
mov
dec
data16
mov
pop
xor
dec
sti
or
sarl
js
sub
lret
adcl
cwtl
test
in
cmp
add
out
xchg
mov
std
or
int
popf
xchg
mov
sub
loopne
xchg
and
add
stos
cmp
cmp
jg
add
sub
test
not
xchg
adc
outsb
xor
loop
fdivr
scas
hlt
push
mov
mov
in
pop
sub
je
adc
add
sbb
push
lods
sbb
mov
pop
xor
daa
or
cs
dec
xchg
sub
repnz
pop
in
mov
pop
fbld
std
jae
and
add
ja
jmp
add
stc
pop
sub
mov
ret
add
inc
stos
cwtl
inc
mov
mov
insb
fiaddl
test
cs
push
sahf
stos
and
dec
sub
mov
dec
xor
lcall
inc
pop
repz
call
dec
mov
cwtl
mov
dec
sbb
mov
aam
jne
sbb
add
decb
cltd
mov
cmpsl
insl
mov
clc
push
inc
xchg
or
lods
into
cmp
fdivl
inc
jecxz
cmp
adc
js
or
lcall
jg
cmp
pop
outsl
cli
arpl
xchg
ud2
gs
js
cmp
mov
cmp
xlat
sbb
repz
mov
movb
addr16
enter
ret
pop
sbb
scas
call
insb
lret
divb
rorb
test
mov
aas
mov
aaa
test
mov
rcll
cmp
stos
mov
in
inc
sbb
pop
mov
ja
or
sbb
mov
rcll
pop
xchg
push
inc
insb
sahf
push
jp
mov
ja
jnp
push
inc
cmp
dec
repz
push
stos
cmp
dec
adc
inc
jno
loopne
mov
sub
shll
scas
movsl
jnp
test
mov
sub
push
imul
iret
aaa
movsl
mov
adc
cmp
hlt
cli
aaa
stos
fnstsw
ficoms
pop
dec
mov
cs
or
sarl
cmpsb
repz
pcmpeqw
adc
xchg
js
test
jae
xor
and
push
adc
xor
jae
gs
shrb
push
add
jl
fsubrl
aas
cmp
jae
in
lods
cld
call
cmp
fldl
inc
or
push
push
cltd
dec
call
clts
loope
test
icebp
dec
jl
inc
lret
jmp
pop
imulb
mov
loopne
insl
or
aad
fiaddl
xchg
rcll
pop
jo
adc
aas
push
sarl
and
arpl
cwtl
adc
jge
adc
repnz
into
inc
and
xor
and
jae
out
addl
push
cmp
pop
pushf
sbb
inc
pop
outsb
stos
dec
js
sbb
and
lret
lea
dec
xor
jae
xor
dec
cs
inc
in
pop
movsl
cmp
cld
inc
add
shll
nop
cs
mov
and
sbb
cwtl
gs
rcrl
call
sub
jmp
adcl
call
dec
pop
and
jmp
out
shrl
jecxz
rorl
jo
enter
push
cmp
cmpsl
jl
xchg
pop
sub
rclb
dec
mov
cmp
gs
rorb
fwait
sub
push
cmc
aas
add
pop
or
inc
arpl
and
loop
je
jmp
sbb
xor
add
pop
cld
inc
mov
jg
loope
sarl
adcl
jnp
leave
xchg
add
lret
filds
push
jo
mov
xchg
and
or
mov
shrl
mov
mov
inc
xchg
pop
jns
inc
dec
lds
testb
push
cmp
mov
cs
in
cmpsb
out
add
adc
repnz
or
mov
and
push
mov
jb
or
jge
mov
sub
aas
xor
adc
cs
sbb
int
imul
mov
jo
xor
out
sar
outsl
inc
mov
andb
shl
xchg
decl
js
inc
mov
jb
aas
stos
fmulp
mov
push
pop
test
and
cmp
pop
push
dec
sub
repz
jmp
cmp
xor
stc
or
mov
ja
daa
loop
or
mov
fcomip
jae
mov
dec
mov
sbb
sbb
pop
in
lahf
or
dec
arpl
mov
dec
repnz
js
jae,pn
pusha
call
inc
xor
mov
pop
xor
adcl
sbb
mov
out
push
fwait
push
stos
orb
jmp
adc
dec
mov
add
or
adc
dec
js
lcall
sahf
out
jge
out
filds
pop
mulb
xchg
les
push
stos
jp
fists
movsb
cmpsb
jmp
xchg
xor
dec
or
sqrtps
inc
xchg
cltd
push
loope
dec
movsl
pop
push
test
push
xor
test
mov
aaa
dec
mov
lret
jae
xchg
pop
pushf
out
or
ret
pusha
jmp
sahf
aam
mov
cmp
cs
xchg
mov
ret
repz
lret
jecxz
jae
mov
dec
pop
or
sbbb
and
dec
mov
andb
dec
sub
sahf
push
push
ljmp
movsl
dec
mov
movsl
or
pop
mov
and
dec
inc
ljmp
and
inc
daa
sub
xchg
or
roll
jo
dec
cmp
roll
dec
sub
sbb
dec
std
sub
fcomi
lret
adc
ret
imul
iret
mov
push
gs
and
pop
cmp
lret
adc
mov
cmpsl
jo
lret
int3
mov
or
shlb
enter
add
js
iret
loop
push
lret
dec
fsts
les
lcall
sbb
inc
xor
push
test
mov
rcl
pop
jg
adc
sub
sub
mov
or
pop
mov
adc
mov
jnp
push
jnp
dec
add
inc
add
mov
adc
dec
push
fisubl
inc
aas
pop
and
sahf
mov
lods
sub
xlat
pop
dec
sub
push
jae
ror
out
mov
shlb
fsubs
push
mov
push
enter
push
ret
leave
push
inc
pop
inc
and
mov
in
cvtpi2ps
dec
and
cmp
rorl
pop
inc
imul
sub
sub
xchg
icebp
lock
ficompl
or
xor
dec
mov
xchg
push
or
test
pop
mov
mov
lds
orb
call
add
jae
jns
jl
add
dec
aas
lea
sub
subl
arpl
addr16
xchg
mov
mov
cmp
inc
ja
cmp
sbbb
lahf
mov
and
pop
or
into
scas
je
add
arpl
adc
test
sub
push
xchg
popa
movsl
sub
ucomiss
mov
cmp
scas
movb
xchg
xchg
jmp
inc
pusha
inc
cs
or
movsb
int
rolb
fists
dec
and
popa
lahf
into
daa
in
or
dec
sbb
mov
xor
and
xlat
in
and
shlb
push
jl
sub
repz
jnp
mov
xor
cmpsl
add
test
mov
pop
es
mov
cs
lds
inc
gs
and
lods
or
loope
dec
iret
ds
dec
cmp
in
fprem
cmpsl
jno
movsl
jae
and
inc
push
fwait
jp
inc
inc
or
inc
mov
jg
dec
insb
jnp
dec
xorb
add
in
xor
arpl
push
dec
jle
ror
jmp
sbb
adc
call
or
lret
cmp
fstpl
fwait
mov
loope
repz
jp
add
cmc
iret
mov
sbb
add
pop
out
mov
push
dec
jecxz
mov
adc
pop
jno
adc
repz
push
push
jbe
int
dec
dec
rclb
jb
pop
adc
mul
ficoml
pop
mov
movsl
lret
sar
in
sub
inc
adc
aas
cmpsl
add
clc
mov
fbstp
cmp
or
dec
arpl
cmpsb
cli
cmp
hlt
or
pop
les
sbb
sbb
push
or
fucom
cmp
xchg
andl
cs
cmp
add
cmp
adc
not
stos
sub
stos
mov
adc
cmpsb
adc
and
sbb
sub
jmp
push
push
mov
pop
dec
sub
aas
cmp
aaa
push
mov
data16
pusha
loopne
dec
stos
mov
lock
xor
mov
aaa
lret
mov
shlb
adc
inc
int3
sahf
subl
jge
pop
cmc
js
or
jb
mov
lahf
sbb
icebp
arpl
push
iret
sbb
push
sbb
ret
dec
aad
mov
fidivrl
pop
lahf
mov
je
repz
dec
jp
pop
movsl
cs
nop
idivl
popl
mov
scas
inc
or
cmp
pop
fimuls
add
mov
xchg
cs
fabs
inc
adc
xor
xor
cmp
icebp
push
aas
jl
ljmp
lock
xor
dec
lods
out
push
cmp
addr16
fs
mov
popf
int
xor
sbbl
or
out
cwtl
mov
dec
aam
sbb
xor
inc
mov
mov
pop
fisttpl
in
cmp
xchg
aam
insb
mov
adc
fs
stos
add
pop
adc
mov
xchg
cmp
pusha
dec
outsl
jmp
aad
mov
ret
mov
mov
sub
xlat
or
add
sbb
inc
xor
std
int
pop
clc
mov
pop
mov
adc
jmp
insb
jbe
enter
mov
mov
cs
fimull
cs
xchg
mov
jbe
push
xor
adc
fiaddl
inc
pushf
pop
sub
test
dec
lock
push
ja
mov
sbbb
pop
dec
push
pop
mov
scas
cmp
sbb
lret
fadd
loop
adc
pop
in
data16
xchg
xor
inc
mov
test
repnz
pop
aad
ret
fidivrs
decl
lret
es
cmp
jmp
pop
sbb
jmp
in
push
cvtdq2ps
sbb
sub
xchg
mov
cwtl
insl
inc
das
js
xor
rol
insl
adc
jp
out
addb
adc
mov
and
test
xor
or
add
mov
inc
pop
cltd
inc
xor
arpl
es
rcll
xchg
dec
cmp
hlt
mov
adc
push
jmp
pop
adc
add
or
rorb
mov
lea
lods
aas
jl
push
xor
lea
jb
test
out
dec
fldt
and
push
das
stc
sarl
xchg
cmp
aas
dec
repz
xor
cmpsb
fs
inc
cmpsb
push
sti
cmpsb
outsl
xor
icebp
dec
pop
push
pop
mov
or
mov
xchg
rcrl
scas
pusha
loope
push
ds
mov
mov
add
mov
ss
mov
call
mov
xor
jbe
push
xor
jp
lahf
dec
fs
and
stos
mov
lret
dec
sbb
dec
cmp
pop
push
ret
cmp
shll
pop
lea
lret
mov
pop
sub
sbb
or
dec
mov
sbb
clc
addr16
dec
mov
shll
int
mov
rorb
and
lret
cmp
dec
scas
dec
rcl
add
clc
jbe
mov
xchg
fnstcw
mov
ret
push
mov
mov
mov
push
pop
jae
lods
repz
and
dec
and
aas
or
cmc
addr16
enter
dec
or
ret
ret
sbb
push
xor
adcb
push
jmp
cmp
pop
mov
subb
cmp
shl
inc
test
iret
cs
sub
add
ds
es
loopne
sbb
lcall
mov
ljmp
or
adc
fisubl
dec
insb
adc
pop
ljmp
lret
adc
mov
inc
pop
xor
mov
cmc
mov
sbb
push
ds
fnsave
sub
lds
xor
or
sbb
mov
sti
xchg
lcall
dec
mov
adc
mov
push
out
clc
ljmp
std
add
nop
loopne
cs
insl
jne
xchg
dec
xchg
xchg
iret
cmp
rolb
std
mov
lahf
pop
or
jae
cmp
inc
jecxz
dec
bswap
enter
sbb
add
mov
into
xchg
inc
orb
jnp
jne
scas
mov
ret
mov
lcall
fcoml
sub
push
mov
test
mov
and
cmpsl
mov
iret
ret
cwtl
cmp
sub
xchg
add
inc
std
xlat
movsl
push
dec
fcmovb
jb
arpl
stos
dec
sub
add
aas
adc
mov
sub
add
dec
cmp
enter
sahf
add
xchg
dec
movzbl
push
mov
xchg
jne
mov
jge
jne
push
in
sub
pop
add
fdivl
mov
add
cmp
sahf
add
or
mov
adc
outsl
frstor
ret
push
push
movsl
or
adc
packssdw
xor
adc
int3
mov
push
mov
jmp
out
paddd
push
loope
cmc
or
mov
mov
mov
pushf
lahf
fdivrs
in
aas
xor
cmp
test
mov
lret
mov
mov
outsl
adc
pop
sub
push
js
mov
pop
mov
cwtl
enter
or
dec
jno,pn
lds
outsb
sbb
insb
or
dec
andl
dec
aam
dec
cs
push
ficoms
loop
pop
sbb
pop
shlb
pop
add
mov
jne
leave
lcall
dec
pop
call
jae
mov
inc
dec
int
out
pop
jae
icebp
mov
lea
mov
cmp
pop
pushf
lret
add
loopne
ret
loope
and
dec
cmpsl
scas
loop
sbb
jmp
sub
fwait
push
push
pop
mov
loope
add
mov
dec
push
test
mov
and
push
jg
nop
data16
xchg
dec
dec
fdivs
ljmp
inc
cmp
dec
mov
push
add
test
and
pop
sbbl
inc
push
cmp
dec
inc
xchg
inc
pop
xlat
notl
in
inc
into
and
add
scas
adc
sbb
xchg
cmp
mov
adc
jb
je
pop
dec
jmp
sub
dec
jbe
or
inc
jb
inc
xchg
or
rcrl
xor
aad
jns
sbb
insl
jo
sub
and
fwait
aad
inc
mov
adc
pushf
cmpsb
das
jge
outsl
cmp
and
or
cmp
inc
xchg
call
adc
add
aas
sbb
int3
xchg
test
xor
imul
pop
iret
xlat
in
outsl
in
mov
push
pop
stos
inc
add
cs
add
or
repnz
fcoml
inc
dec
fwait
movsb
imul
jns
xchg
inc
mov
or
mov
hlt
add
aas
std
adc
and
aam
adc
pop
sbb
data16
out
inc
imul
pop
push
jae
sub
mov
jl
mov
and
mov
adc
fucompp
lret
aad
jmp
sbb
cltd
mov
icebp
pop
ja
inc
sbb
xor
xchg
inc
jbe
cmc
mov
mov
aad
sbb
sarb
pop
popa
sub
mov
push
mov
pop
fistl
xchg
add
and
aaa
sbb
arpl
std
add
push
pushf
enter
cs
jbe
cmpsb
int
cwtl
mov
xor
jbe
inc
fisubrs
inc
push
xchg
mov
jno
movsl
pop
xor
sbb
xchg
mov
push
ficoml
icebp
dec
jmp
bound
mov
cmp
sarb
jmp
jns
xlat
mov
and
mov
pop
or
out
test
sbb
add
mov
testb
rorl
jmp
push
bound
pop
mov
gs
and
push
out
xchg
dec
inc
ret
inc
ljmp
jnp
andl
inc
or
xchg
push
adc
out
mov
dec
mov
push
xchg
dec
enter
xchg
pushf
stos
push
pop
dec
lds
mov
rol
xor
mov
sbb
pop
ret
je
mov
cmpsl
das
es
out
xchg
loopne
mov
test
push
jl
mov
je
fdivs
call
cmp
adc
loope
cmpsb
or
cmp
cmp
jge
cs
sbb
adc
int
mov
arpl
loopne
cltd
dec
pop
shl
fcmovnbe
cmp
mov
cmp
jns
mov
and
popa
rorb
cmpsl
add
out
stos
movl
sbb
dec
data16
inc
pop
pop
push
pop
ret
movsb
jno
xlat
stc
mov
add
adcb
pop
out
or
sti
jmp
mov
gs
cmp
cmp
inc
dec
pop
insl
mov
or
push
push
mov
pop
inc
xchg
rcrl
andb
push
out
dec
lret
xor
cmc
adc
push
mov
or
and
mov
cmpsb
stos
das
xchg
xchg
orl
mov
sbb
call
js
or
inc
mov
xlat
add
repz
add
inc
push
add
or
lea
mov
aas
inc
pop
int3
mov
icebp
cs
adc
cmp
pop
pusha
sub
mov
movsb
lds
fstps
fstpt
test
pop
nop
dec
jne
or
jle
dec
scas
add
sub
shlb
jmp
subl
mov
xor
push
mov
ss
mov
lds
pop
or
mov
mov
add
dec
mov
int3
sub
lcall
pop
js
fisubl
cwtl
push
mov
in
and
lret
loope
fucomi
pop
ss
add
mov
jg
iret
rolb
sbb
leave
mov
xor
andb
ljmp
aas
add
aad
stos
xchg
adc
movsb
ss
or
adc
pop
jmp
mov
jmp
aas
or
sbb
out
sbb
xchg
fnstcw
popa
and
aad
test
pop
out
inc
dec
movsl
movsl
and
sti
xor
push
cltd
sbb
adc
sub
negb
push
pop
lds
xchg
inc
adc
push
jae
mov
add
ja
out
in
fcmove
cmp
out
jo
inc
mov
sub
sbb
sbb
dec
cmp
lods
jp
dec
adc
roll
dec
das
cmp
pop
xchg
lret
data16
push
mov
and
and
leave
pop
mov
jne
mov
dec
mov
push
inc
cmp
int3
rcrl
jmp
sub
or
jbe
cmp
out
jge
jne,pn
pop
in
fs
add
dec
repnz
inc
stos
inc
xchg
test
filds
in
sub
sarl
and
cs
ret
or
dec
push
dec
push
adc
jg
inc
push
jp
mov
cmpsb
sub
xor
push
rcll
xchg
mov
sub
push
icebp
adc
jns
push
mov
push
js
push
movsl
js
sub
leave
fidivl
mov
call
mov
fdivs
or
in
pop
sub
dec
jo
test
add
shlb
fsubp
cmpsb
mov
pop
add
lods
imull
jne
call
xchg
inc
sub
shrl
enter
pop
insl
mov
pop
dec
push
dec
pusha
sbb
leave
dec
push
mov
outsl
lahf
popa
outsb
idivb
fsubs
lods
inc
ja
cmp
outsl
xorb
dec
add
and
push
fsubl
aad
add
lcall
mov
mull
mov
push
add
pop
xor
jmp
adc
pusha
fistl
ficoms
jae
loop
jo
mov
into
push
sub
scas
enter
mov
int3
pop
int
fcoms
adc
imul
add
ja
pop
jnp
mov
jecxz
xor
cmp
shrl
xchg
lcall
sbbb
dec
xchg
pop
sub
in
enter
shl
stc
jmp
es
fisttpll
mov
pusha
loopne
mov
lret
lds
pop
add
lds
push
rcr
enter
or
ret
add
lahf
shl
out
pop
sub
sar
aad
lcall
cld
dec
dec
or
shll
sbb
pop
mov
cmp
adcl
inc
cs
stos
push
fmulp
dec
cli
ljmp
jb
imul
and
mov
imul
aas
xchg
sbb
xchg
sub
data16
cs
jle
outsl
pop
mov
stos
leave
cs
fists
and
jo
inc
faddp
xlat
sbb
aam
push
insl
pop
mov
in
int3
mov
test
outsl
pop
sub
lret
sbb
push
adc
add
lret
leave
arpl
push
sbb
loope
lahf
lea
aam
insb
push
pop
aas
rorb
mov
pop
push
mov
sub
xor
xlat
aam
ret
inc
mov
add
xchg
cmp
repnz
xor
mov
jg
jnp
sub
mov
sahf
sahf
mov
dec
adc
dec
mov
sub
stc
jb
scas
aaa
dec
jb
cmp
pop
xchg
mov
mov
jne
jge
jmp
ss
sbbl
cmpsb
mov
xor
arpl
shrl
cmp
ds
jp
dec
inc
dec
sbbl
sub
dec
dec
dec
insb
jbe
jg
inc
pusha
xchg
fs
leave
in
add
addl
outsl
gs
mov
or
pop
bound
cmpsb
pop
xor
push
xchg
frstor
popa
jno
pop
mov
movsb
adc
in
out
repz
add
movsb
sbb
test
dec
adc
cs
insb
loopne
fisubrs
roll
xorb
std
rcrb
mov
or
clc
in
jmp
xchg
mov
and
inc
es
dec
mov
and
push
in
dec
mov
cmp
mov
dec
les
xchg
push
fwait
add
arpl
or
or
sbb
in
ds
das
lret
sbb
stc
jl
sub
inc
nop
shrb
sub
push
inc
cs
out
jo
cmovne
jp
iret
adc
pop
out
jbe
add
push
sbb
movsb
jmp
cli
stc
mov
in
lret
daa
fninit
push
jne
jne
mov
outsl
movsl
xor
cmpsb
xor
or
cltd
mov
icebp
xchg
ficompl
jo
lods
lock
icebp
cld
add
mov
fs
sub
cmp
sarl
push
pop
int3
cmc
fiaddl
dec
add
jg
js
cmp
jno
push
cmp
addr16
in
mov
inc
pusha
lods
jecxz
test
fsubs
sbb
xchg
and
ret
cltd
movsb
pop
in
cmp
enter
cmp
sbb
add
imul
dec
sub
nop
loop
lret
sar
lods
sub
daa
sbbl
or
push
cmp
pop
inc
dec
adc
cs
rorl
jg
iret
xchg
cmp
sub
fwait
add
mov
mov
pop
jecxz
dec
cmp
mov
lret
add
and
cmpsb
mov
inc
nop
add
repz
cmp
mov
mov
mov
lock
lock
fbld
inc
sub
lea
cld
out
push
sar
stos
shrb
cmp
push
icebp
cmp
xor
push
clc
push
inc
shlb
lds
cs
adc
jo
add
mov
sub
dec
mov
cld
mov
and
dec
sub
xchg
std
sar
incl
dec
xor
les
jne
add
dec
stc
adc
and
mulb
inc
mov
cwtl
lahf
xchg
mov
inc
or
shrb
push
sbb
mov
mov
js
data16
hlt
push
arpl
mov
arpl
mov
fimull
xchg
pop
or
arpl
outsl
mov
mov
pusha
xchg
add
stc
shll
and
mov
ljmp
fs
or
gs
adc
or
mov
cmpsl
inc
sub
and
pop
mov
dec
lods
mov
inc
xchg
stc
leave
imul
je
cltd
jg
pop
push
mov
mov
les
call
jne
mulb
sbb
outsb
aad
jo
add
cltd
aas
push
dec
cmp
dec
pop
out
pop
fcomip
je
add
imul
cli
pusha
mov
or
pop
sub
lea
pushf
dec
xchg
mov
in
dec
cmp
and
pop
cmpsb
jmp
sbb
pop
sub
and
cwtl
mov
test
cmpsb
aas
cmp
sub
xlat
push
icebp
or
mov
xchg
pop
jge
sub
dec
or
lea
pusha
pop
xlat
and
or
or
push
cmp
and
cmp
testl
mov
stos
or
in
mov
jne
dec
push
and
inc
test
and
mov
push
xchg
out
or
and
bnd
or
xchg
mov
xchg
xlat
test
mov
sub
ds
jmp
mov
ds
jp
cs
scas
mov
dec
scas
jmp
sub
repnz
mov
mov
jp
fistpll
pop
dec
sbb
jg
sbb
js
enter
push
lea
xchg
notl
jo
les
ja
iret
int3
inc
jne
ret
cmc
mov
fs
test
jo
stc
lods
out
push
mov
mov
adc
mov
pop
outsl
ret
xor
stos
mov
push
mov
pop
shlb
or
cmc
shlb
add
cmp
pop
pop
or
push
adc
pop
nop
pop
lods
and
pop
dec
add
cmp
cmpsb
add
sbb
and
mov
mov
xorb
push
ds
jnp
arpl
lcall
popf
mov
pop
pop
dec
jmp
xlat
inc
push
add
rcrb
fxch
sbb
cmp
xchg
push
data16
dec
les
mov
pop
mov
decb
and
pusha
ljmp
or
das
sti
jbe
mov
stos
xor
xor
inc
fisubrs
adc
rorl
or
push
ret
and
and
jae
repnz
xchg
inc
lret
adcb
sub
push
movsl
aas
pop
or
pop
jne
mov
xor
mov
xchg
inc
xor
jecxz
lods
mov
mov
mov
hlt
xchg
leave
pop
xchg
fnstcw
vmovd
jecxz
or
pop
test
rcrb
push
ret
and
inc
clc
bnd
push
adc
jmp
movsb
push
ds
fnstenv
lods
fnsave
pusha
lret
jmp
dec
enterw
dec
dec
int
mov
test
jnp
notb
or
xchg
bound
iret
stc
xor
fidivl
and
add
bnd
push
push
sti
pop
dec
fistpl
dec
fidivs
sub
sub
mov
push
shlb
xchg
dec
clc
repnz
add
call
int
loopne
out
cmc
adc
icebp
push
pop
in
inc
pop
ds
insb
stc
mov
adc
repz
add
or
pop
inc
addr16
cs
push
mov
lods
rolb
aaa
lock
cltd
pop
pop
ja
jge
adc
pop
mov
pop
call
stc
pusha
sbb
ja
sahf
daa
mov
cmpsl
xchg
divps
inc
mov
and
roll
mov
insb
lock
in
out
test
inc
mov
cli
mov
pop
pop
adcb
cmp
dec
repnz
jne
sub
mov
dec
lret
dec
xchg
sub
fwait
jmp
mov
dec
icebp
out
mov
jmp
cmp
gs
enter
cmp
pop
cld
sbb
insb
sahf
test
repnz
jge
dec
jmp
push
cmp
jbe
jnp
inc
sti
mov
addl
adc
mov
rorl
xchg
sub
ds
sahf
icebp
push
aad
inc
xlat
xor
outsl
xchg
jl
pop
adc
pop
int
in
cmc
sub
daa
inc
cmpl
les
pop
ss
push
mov
cltd
cmpsb
and
and
cld
shl
inc
leave
and
dec
mov
pop
push
stos
mov
xor
push
mov
out
cmp
lods
shl
in
jp
sub
jle
cmp
push
jge
cmp
lock
mov
movsl
and
sbb
pop
jl
jo
add
cmc
inc
lods
ret
icebp
pusha
dec
int3
das
outsb
stos
cs
cmpsb
int
push
or
insl
pop
cs
add
fildll
dec
jae
outsb
shlb
mov
sbb
cs
pop
mov
stos
fcoms
jmp
fcmove
add
xchg
fcoms
push
addr16
aam
fisttpll
out
push
loop
fbld
push
mov
xor
jmp
fiaddl
xchg
and
pop
cld
and
and
adc
mov
insb
or
push
cmp
shlb
pop
movsl
sub
js
es
stc
fsubr
add
sbb
jmp
pusha
popf
sarb
or
inc
xchg
movsb
andb
push
jp
cmpsb
in
sub
pop
jns
ret
mov
mov
xor
inc
inc
das
nop
inc
dec
loope
xchg
add
inc
and
and
cmp
je
mov
dec
cmp
mov
scas
sbb
and
jb
or
loopne
pop
insb
dec
nop
rcl
leave
cmp
jecxz,pn
sub
iret
sbb
sub
jns
adc
mov
mov
cmp
jo
pop
ficomps
and
fnstsw
stos
mov
push
mov
sbb
cmpsl
jnp
push
fadd
xchg
movsl
jb
pop
aas
mov
loope
and
sbb
fldt
pop
inc
inc
mov
roll
and
mov
jg
repnz
sub
enter
inc
xlat
mov
xchg
bndldx
sbb
mov
push
push
iret
add
mov
mov
add
sbb
or
jl
stc
xor
xor
jge
loopne
das
sub
ret
pop
pop
mov
add
pop
sub
jno
dec
imul
mov
push
or
sbb
jae
sarb
mov
loop
sub
adc
adc
and
out
jnp
mov
in
andb
inc
adc
sub
fadd
dec
pop
sbb
arpl
xchg
add
ret
movsb
es
rol
pop
rolb
xchg
inc
popa
std
andb
jb
and
add
or
fstpl
inc
test
adc
scas
adc
xlat
std
dec
dec
out
adc
in
movsb
or
jecxz
out
aam
or
add
cmp
cmpsb
ret
iret
sbb
xor
aas
cmp
pop
sub
mov
xor
cli
dec
sahf
les
cmp
pop
cs
inc
js
lret
insl
cmp
repz
mov
stos
cmp
jg
cmp
es
addr16
nop
enter
cs
xchg
in
push
push
pop
addr16
fs
and
pop
mov
cli
testl
fisubl
roll
add
sbb
stos
mov
mov
jo
data16
xor
dec
stos
imul
push
or
mov
xor
enter
les
xchg
sub
xchg
and
cs
jae
sub
in
inc
pop
movsl
scas
add
mov
pop
imul
data16
xor
xor
int
dec
mov
filds
repz
pop
and
jg
xor
loop
or
jbe
adc
int
xchg
inc
mov
cmc
push
sbb
dec
xchg
sbb
mov
inc
cmpb
aaa
stos
mov
cs
dec
adcl
xchg
and
das
pop
xchg
xor
inc
inc
dec
and
mov
sub
sub
or
popf
sbb
fwait
fwait
and
scas
dec
cwtl
addl
mov
xor
sbb
push
cmpsb
sbb
sub
ds
add
adc
pop
test
fwait
into
lret
mov
lock
jno
inc
inc
mov
in
mov
roll
pop
mov
jecxz
mov
movsl
jp
mov
dec
outsl
ret
mov
mov
pop
das
or
fldt
push
stos
call
outsl
out
pop
fs
mov
pusha
std
lret
out
or
adc
xor
cs
inc
negl
dec
adc
ds
or
xchg
push
in
mov
xchg
pop
sbb
adc
xchg
fisubrl
mov
add
cli
scas
jl
mov
mov
es
jge
sub
mov
add
inc
enter
mov
push
pop
stc
loopne
stc
dec
sahf
inc
call
lretw
lods
xor
shlb
adc
bswap
sbb
mov
repz
mov
pop
dec
pop
mov
inc
dec
pusha
fwait
or
mov
add
dec
test
or
cltd
shll
std
lret
out
aam
mov
mov
xor
push
jnp
push
sbb
lret
sbb
arpl
mov
mov
sub
ret
sahf
xchg
lods
aam
stos
ret
and
jmp
loope
dec
outsb
pop
push
dec
cli
pop
xchg
sbb
enter
iret
add
mov
inc
mov
rcll
and
dec
sbb
sub
xor
cli
dec
mov
cmc
jo
ficoms
mov
xchg
cmp
ds
or
mov
xor
mov
popa
cmpsb
stos
repz
push
pop
xlat
jae
mov
push
jp
lahf
and
add
or
adc
or
lcall
pop
jb
mov
jne
clc
dec
inc
jns
xor
push
out
out
stos
push
imul
call
pop
outsl
push
pop
mov
scas
mov
testl
loop
cmp
jle
movsl
outsb
divb
or
dec
mov
stos
push
and
pusha
xchg
dec
aad
subb
lret
mov
adc
aaa
rcrb
sub
mov
fsubrl
adc
jge
fisubrl
sub
les
out
in
dec
popf
xor
clc
and
dec
mov
jo
inc
pop
in
popa
dec
xlat
test
jb
pop
or
add
es
or
fmul
dec
push
adc
loop
fldenv
cwtl
cmpsl
cmp
fldl
mov
lahf
ljmp
flds
push
sbb
outsl
call
fwait
pop
dec
pop
pop
adc
les
lea
adc
jae
adc
pop
mov
das
inc
mov
cmpsb
out
inc
push
sahf
sub
push
mov
add
scas
or
jne
addr16
js
test
jo
unpcklps
inc
pop
push
or
insl
stos
and
mov
push
les
gs
mov
pop
sub
push
insl
subb
mov
or
and
mov
pop
sub
fadds
into
leave
sti
daa
push
dec
pop
mov
and
cs
rorb
ret
dec
mov
aas
mov
pusha
pop
and
rorl
popf
sbb
and
pop
xchg
xor
mov
aas
dec
inc
mov
push
aad
pop
cmc
xchg
mov
sub
jmp
dec
shll
xchg
nop
arpl
sbb
add
and
jno
xor
or
std
add
and
pushf
cmp
push
cld
push
jmp
inc
inc
out
lds
scas
je
rcrl
cmp
pop
pop
xchg
push
das
gs
or
push
push
pusha
mov
cmpsb
fcompl
adc
sub
mov
lahf
orb
mov
mov
insb
xchg
orw
jmp
inc
dec
mov
sti
or
mov
adc
into
addb
out
cs
leave
fbstp
das
push
cld
adc
jo
loop
dec
jge
scas
cmp
mov
addr16
rol
inc
xchg
pop
sbb
shrb
lahf
fwait
sbb
andb
pop
inc
and
mov
lahf
xchg
jo
sub
add
pop
les
addb
mov
push
rorb
jg
cmp
filds
mov
psadbw
int3
pop
add
add
ret
fimull
rorb
loopne
les
dec
jle
adc
rorb
push
adc
dec
mov
andb
jbe
and
les
jb
xlat
out
shlb
aaa
and
jg
outsl
mulb
sub
sbb
mov
cmp
mov
stc
and
inc
cmp
add
ds
mov
sbb
adc
push
hlt
pop
dec
repz
push
add
inc
cmpsl
push
push
jmp
imul
mov
shlb
xchg
dec
test
loop
pop
pop
stc
mov
mov
dec
pusha
mov
push
mov
xor
add
cmp
jle
scas
vxorps
filds
mov
lods
jmp
adc
jle
pop
ss
addr16
dec
and
mov
dec
lret
push
or
popa
push
lret
inc
adc
push
mov
xor
jo
in
cs
iret
mov
adc
cwtl
xor
pop
pop
scas
dec
push
mov
push
adc
xchg
push
in
push
fcomip
add
mov
xor
nop
lret
adcl
dec
outsl
cmp
les
dec
jg
rcrl
or
or
dec
lds
sbb
and
pop
lcall
jmp
sub
xor
frstor
xor
jbe
hlt
popa
mov
lret
xor
push
mov
jle,pt
inc
jb
jb
pop
and
std
data16
popa
inc
mov
xlat
mov
outsl
dec
jbe
sub
call
negl
push
jmp
addr16
mov
xchg
mov
cmp
sbb
sbbb
or
xchg
push
iret
and
mov
jge
pop
bound
mov
or
jge
inc
pop
jg
lea
mov
pop
and
stc
jmp
icebp
insb
rorb
popf
mull
or
jp
imul
call
mov
test
mov
sarb
dec
sbb
jnp
je
mov
fucom
inc
dec
or
ret
xchg
stos
stc
push
mov
lods
pop
dec
sbb
mov
pop
fbstp
inc
outsb
jp
ret
add
adc
sub
pop
dec
scas
loope
subl
int
sbb
sbb
sub
jp
insl
mov
cmpsb
stos
xchg
data16
cmp
ja
xor
xlat
cmp
pop
iret
shrb
dec
mov
fldt
mov
aam
mov
inc
cmpsb
sbb
jo
sbb
aas
hlt
sbb
cmp
subb
sbbb
std
mov
movsb
lahf
je
stc
popa
aas
xor
cli
xchg
mov
push
and
shll
rclb
jl
out
sbb
dec
stc
loopne
push
cmp
cs
push
push
cmp
dec
cmp
je
push
rorb
dec
shrb
mov
lock
and
lds
or
ret
or
pcmpeqw
jmp
js
jae
das
sarb
xor
gs
cmpsb
stc
shlb
xchg
and
dec
inc
wbinvd
push
dec
mov
stos
imul
and
pushf
sbb
and
shll
dec
mov
sub
fisttpll
pop
jbe
lret
xchg
mov
and
push
lock
pushf
dec
pop
xor
or
sub
in
stos
daa
imul
cmpsb
push
or
pop
aas
add
aam
ja
xchg
rcll
fcmovne
stc
add
test
subb
aas
sub
shrb
push
push
or
adc
adc
jmp
cmpsl
in
lret
sub
ljmp
in
cmp
mov
addps
mulb
lahf
push
and
mov
into
inc
adc
loopne
push
and
imul
sbb
cmp
sbb
inc
dec
and
inc
cmp
xchg
loope
pop
cltd
js
stos
push
inc
rcr
mov
clc
inc
jecxz
dec
sbb
dec
jae
mov
sbb
push
lods
or
xor
lret
xor
jae
lods
or
mov
cmp
sbb
pop
jmp
mov
je
out
shll
mov
push
pop
loopne
subl
adc
adc
dec
fwait
mov
sti
add
jmp
sbb
xchg
push
xor
sub
rcrl
cmp
ret
adc
mov
movsb
cli
repz
sbb
aad
call
sub
pop
stos
ret
and
lds
data16
sahf
test
jns
adc
test
jne
mov
ja
jg
push
jae
movl
pop
outsl
movsl
pop
push
and
inc
pop
and
pushf
pusha
adc
js
stos
sub
scas
insb
jmp
divb
shll
inc
fsubrs
inc
xchg
push
test
stc
addb
imul
push
and
jp
pop
adc
pop
inc
sub
dec
fwait
cs
ss
jle
pop
repnz
pop
or
mov
xor
fcomip
jle
inc
fisubrs
nopl
xor
push
cmpsb
pushf
imul
sub
dec
mov
mov
mov
dec
push
lcall
cmpsl
fstpt
push
fidivs
xor
xchg
pop
dec
pusha
jno
ds
push
les
or
outsb
lea
pop
shll
dec
aad
jmp
movsl
rorl
pop
pop
sub
cs
pop
jl
push
inc
scas
push
out
xchg
jmp
mov
dec
rcrl
and
pop
mov
sub
add
fisubl
xchg
ss
xor
pop
sbb
push
pop
insl
call
xchg
add
sbbb
add
rcll
push
adc
mov
push
mov
scas
insl
cltd
daa
xlat
gs
push
sbb
xor
addl
mov
mov
sbb
mov
inc
sar
pop
or
pop
gs
dec
jl
shrl
in
cld
sub
dec
mov
repz
fstps
inc
adc
subb
and
sarl
repz
and
fisttpll
xlat
repz
or
cmp
add
ja
pop
or
mov
mov
enter
mov
xor
cs
fwait
and
sub
jecxz
mov
mov
aam
js
jle
or
pop
lock
mov
mov
cmpsl
js
insl
mov
aas
dec
fiaddl
lock
gs
mov
xchg
jp
into
sbb
sub
and
inc
lods
sub
add
flds
aad
fistpll
push
orl
nop
jl
mov
gs
mull
leave
push
dec
pop
aas
fsubrl
cmpsb
jne
aad
lods
mov
loop
cmp
ja
mov
cs
jne
or
iret
pop
mov
mov
iret
jae
cs
and
jbe
movl
inc
enter
ja
push
push
xchg
dec
mov
fidivs
pop
push
xor
stos
ret
pop
add
movsl
and
pop
cltd
lret
in
fildll
push
jne
lcall
leave
cmp
pop
mov
dec
test
arpl
daa
push
jns
adc
notb
icebp
repz
or
dec
fldl
and
test
inc
cmp
ss
sahf
lcall
or
dec
add
sub
dec
clc
push
sti
lret
or
push
mov
dec
imul
sub
sub
ret
pop
test
jle
daa
xor
sbbl
adc
lock
repz
dec
pushf
cmp
xchg
fdivs
dec
sub
lret
rcrl
test
lods
repz
xor
gs
xchg
idiv
rcll
push
mov
outsl
fs
xlat
and
pop
ret
es
cmp
mov
imul
stos
pop
mov
mov
xor
push
xchg
rcl
or
mov
sbb
xchg
lret
mov
mov
dec
out
mov
dec
cmp
inc
jo
arpl
jmp
ret
loopne
jb
pop
lret
sub
pusha
sub
cmp
add
dec
call
enter
fstpl
aad
cmpsb
mov
jbe
adc
je
xchg
cmp
or
lds
sbb
jnp
and
cmp
dec
data16
fisubs
adc
push
sbb
stos
je
loope
pop
mov
add
dec
xchg
pushf
imul
inc
mov
fninit
ss
push
iret
pop
ljmp
iret
cmp
cli
dec
dec
mov
push
push
mov
push
test
enter
js
ljmp
push
xor
add
cmpsl
vpsubq
pop
jl
inc
or
sbb
cmc
sub
shlb
pop
mov
mov
mull
push
mov
into
pop
mov
sbb
dec
pop
outsb
cmp
loopne
inc
mov
xchg
mov
leave
fidivrl
push
leave
lcall
add
or
pop
mov
les
ror
pop
icebp
shrb
repnz
push
movsb
lahf
cs
mov
mov
add
pushf
int
iret
and
dec
dec
out
les
cmp
into
int
inc
insb
cmpsb
xchg
fmull
xchg
jne
mov
sub
push
dec
or
xchg
push
mov
mov
pop
push
ljmp
pop
pop
sub
mov
jo
push
pop
pop
xchg
jno
pusha
dec
mov
rolb
or
outsb
cs
mov
jmp
movsl
sbb
xchg
cmpsb
loop
pusha
loope
shr
add
xchg
and
pop
sbb
or
xor
fbld
repz
rol
pushf
mov
mov
imul
add
mov
subl
jecxz
lret
es
movsl
stc
and
call
mov
ljmp
jae
mov
push
adc
and
xor
mov
roll
cmp
xor
lea
xchg
and
sbb
stc
and
cmpsb
lahf
dec
movsl
mov
xor
jl
loope
pop
sub
mov
pop
jl
rorl
loope
jg
aas
sbb
jg
stos
add
jb
lret
mov
out
lret
aas
jg
and
mov
dec
pop
mov
into
jle
mov
adc
int3
in
add
leave
in
sub
push
data16
repnz
inc
call
mov
mov
sub
mov
call
add
std
inc
test
cmp
inc
loop
mov
fsubs
xchg
std
inc
ret
jmp
ret
fisttpll
dec
jae
sub
mov
adc
push
inc
mov
xor
daa
cmp
dec
adc
lods
leave
pop
mov
mov
sti
insl
mov
pop
ja
dec
rcrb
mov
call
imul
push
das
movsl
jns
sbb
or
or
inc
push
int3
pop
aaa
subl
sbb
inc
dec
pop
jmp
dec
cld
push
out
cmp
shr
out
or
add
or
sub
sbb
inc
movswl
sbb
daa
push
cmp
loopne
inc
sub
lock
xor
aas
and
and
fwait
add
inc
pusha
aaa
push
cs
mov
mov
addb
sbb
jmp
dec
fcmovb
mov
add
je
dec
inc
pop
lret
jl
aaa
jns
in
adc
pop
jns
lret
repz
dec
test
sbb
mov
aas
mov
decb
cmp
xor
out
dec
cmpsb
mov
mov
popf
mov
push
sub
fstpl
cltd
cs
pop
dec
adc
ret
dec
divl
jg
rorb
xchg
or
xchg
pop
loop
mov
pop
xchg
sbb
pop
cli
adc
call
fdivl
xchg
inc
cmpsl
or
inc
jle
or
imul
add
insl
out
js
shl
fbld
lret
fistpl
pop
inc
and
fucomip
push
outsb
dec
inc
into
sbb
ss
adc
pop
je
push
sbb
push
in
mov
call
mov
cs
adc
mov
sub
enter
pop
sbbb
sbb
push
pop
imul
fisttps
pusha
or
cmp
cmp
sub
pop
fisubrs
add
xor
sbb
rcrl
sub
addr16
leave
jns
xor
mov
push
push
std
pop
jmp
adc
mov
xchg
or
pop
push
data16
xor
mov
cltd
mov
ret
ret
out
push
and
bswap
gs
mov
xor
pop
in
mov
xor
add
or
push
adc
clc
mov
push
in
mov
xor
cmp
cmp
sub
mov
sbb
cmp
pop
cmp
stos
dec
sti
gs
jne
inc
arpl
xchg
leave
cs
lock
fidivrl
icebp
ljmp
into
test
dec
sub
clc
fimuls
cs
mov
out
push
dec
in
dec
and
lret
pop
insl
push
sbb
pop
rclb
rclb
clc
jmp
cmp
or
pop
mov
frstor
pop
mov
inc
push
enter
xor
jne
mov
inc
cmp
or
stc
push
adc
pop
cli
mov
xor
arpl
inc
pop
xor
mov
xor
cmpsb
pop
fcmovnu
bound
add
pop
ds
adc
js
pop
jb
pshufw
inc
lret
lcall
push
mov
pop
add
fdivrl
or
jbe
nop
repz
mov
subb
insb
dec
hlt
inc
push
inc
pop
lahf
aaa
mov
adc
adc
out
popa
mov
xchg
nop
loop
dec
pop
adc
pop
xorl
cmp
addl
sbb
imul
rolb
mov
xor
subl
jb
mov
popl
cmp
cmp
dec
das
clc
in
jmp
cmc
and
add
nop
lods
cmp
iret
or
adc
mov
clc
lret
mov
stc
inc
hlt
dec
inc
int
mov
rcrb
aas
loop
push
pop
mov
data16
jae
inc
adc
sbb
cmpsb
enter
inc
jb
sbb
fs
xor
mov
push
sbb
lock
xor
pop
lret
insb
sbb
mov
jmp
sub
pop
test
repnz
mov
cmp
cs
sub
in
push
pop
loop
fiadds
pusha
mov
mov
shrb
cmp
sub
test
mov
jecxz
mov
loop
push
mov
pop
sbb
push
movsb
pop
adc
mov
and
push
push
insb
xor
ja
test
lcall
mov
data16
orb
bound
loop
outsl
and
repz
sbb
jno
mov
ds
jne
adc
jae
sub
mov
aaa
and
inc
push
push
jecxz
inc
xchg
pop
data16
test
pop
jmp
insb
sbb
sbb
sub
adcb
adc
xchg
push
shrl
add
or
dec
cmp
les
lock
push
or
popa
in
ljmp
pop
ret
cmp
jg
icebp
dec
fisttps
fstpt
fmuls
jae
int
sub
and
les
aam
in
loop
xor
outsl
gs
or
pop
push
dec
loope
sub
and
ja
popa
movsl
or
imul
xor
push
mov
shlb
mov
push
stos
adc
js
iret
jg
iret
pop
call
clc
jne
sarl
cmc
dec
loop
dec
cs
fnsave
dec
jae
insl
lret
adc
xor
adc
jae
call
push
push
add
adc
sub
xchg
repz
insl
leave
les
xchg
fdivs
aad
inc
nop
add
mov
xor
je
add
cmp
mov
lret
pushl
add
push
and
jle
and
sub
dec
add
add
push
push
pop
pop
in
jbe
imul
or
lret
daa
psubb
inc
std
gs
loopne
sub
push
add
mov
or
cs
ds
ret
cwtl
sub
cmp
dec
faddl
or
jbe
shlb
sbb
cmc
mov
leave
aas
cmc
testb
shrl
stos
fldl
sub
xchg
xor
or
arpl
push
outsb
jbe
jmp
and
cmp
mov
mov
inc
stc
fstp
inc
sub
fcompl
cmp
push
sub
sub
jg
sbb
mov
add
dec
pop
fnstsw
add
scas
pop
add
out
mov
add
mov
xor
jae
inc
add
fisttpl
mov
cmp
sub
std
fisubl
lret
insl
fbld
je
dec
sarl
aad
xor
jmp
jp
mov
jl
push
cmpl
lods
cmp
stc
cmp
sbb
sub
sub
mov
imul
or
fistpll
shrl
mov
dec
loope
inc
mov
test
pop
popf
jle
jg
into
repz
add
imul
jmp
jmp
pop
cmp
sub
adc
div
jno,pn
fimull
jne
mov
xchg
xchg
or
lea
mov
add
test
repz
xor
cmp
lahf
or
test
xchg
mov
adc
fbstp
and
lret
es
out
or
orb
hlt
out
iret
fdivs
scas
leave
sub
leave
add
cmp
dec
cmp
push
add
inc
jbe
push
and
repz
lret
jmp
xlat
push
cmpsl
adc
dec
xchg
mov
scas
xchg
fisttpl
add
add
bound
adc
push
in
insb
subl
cmp
cs
data16
or
and
jb
xchg
mov
sbb
sub
pop
or
pop
cmp
push
add
mov
pop
push
xor
mov
cmpsb
loopne
cmp
fadds
adc
and
pop
mov
addb
inc
sbb
int
or
std
fadds
movsl
sub
pop
dec
js
jne
push
mov
test
pop
in
inc
lds
dec
loope
neg
or
fs
jg
dec
lret
negb
loop
icebp
mov
jg
adc
push
dec
xchg
mov
sti
stos
jo
insl
add
lods
inc
in
loopne
xor
sarb
shr
inc
adc
inc
sbb
inc
lds
sahf
jmp
pop
add
sbb
cmp
sbb
sub
and
push
mov
and
orl
or
cwtl
lods
sbb
sub
dec
cmp
mov
and
rcl
cwtl
mov
or
lods
idivb
loopne
repnz
mulb
fwait
inc
mov
les
pop
inc
inc
leave
mov
pop
cltd
or
test
jle
inc
push
mov
dec
aaa
xchg
lods
xor
xlat
pop
add
mov
sbb
icebp
insl
pop
subb
in
js
movsl
push
cmp
arpl
loopew,pt
cmp
mov
sahf
and
adc
jns
pop
dec
es
push
rcll
sbb
add
pop
sub
les
push
outsb
jg,pn
xchg
add
divb
push
push
dec
repz
mov
imul
adc
dec
flds
cmp
cld
stos
cmc
xorl
mov
shlb
and
push
inc
pop
pop
mov
insb
push
jbe
aaa
loope
xor
repnz
xor
add
in
lret
pop
loop
xchg
test
sub
pop
stos
xor
lds
fistl
or
mov
cmp
rcl
dec
fs
icebp
adc
inc
mov
mov
inc
pop
add
pop
and
ds
pop
mov
sub
or
mov
adc
imul
adc
xchg
gs
inc
sahf
sbbb
insl
ds
in
jl
dec
mov
fcoms
lret
push
dec
mov
call
pusha
mov
pop
cmp
mov
xorl
loope
xor
insb
xchg
jae
fidivrl
adc
mov
mov
lods
mov
push
int
inc
arpl
mov
fdivr
call
ss
test
mov
or
clc
pop
or
out
rcrl
call
jle
testl
cmpsl
cmc
sarb
mov
jae
movsl
sbb
adc
dec
or
stos
cmp
imul
rclb
or
and
in
sahf
mov
pop
cs
andl
dec
stos
cmpsl
jl
dec
add
inc
popa
repnz
push
loope
int3
sub
sub
and
cmp
stos
mov
sbb
adc
inc
fisttpl
xor
loop
dec
fidivrl
adc
pusha
pop
mov
leave
mov
jp
shrb
mov
inc
and
leave
aad
cmp
and
push
shl
add
sub
pop
shl
cmp
fdivs
mov
jp
add
int3
inc
xchg
push
xchg
rorb
xchg
sbb
jo
scas
ss
shl
fdivrl
inc
add
dec
fstpl
bound
int3
shr
jae
shl
lcall
movsb
icebp
sub
aad
xor
rolb
stos
inc
add
mov
repz
fsubrs
inc
mov
out
gs
leave
loopne
jo
cmp
lds
or
cmp
aas
sub
mov
adc
iret
sub
pop
pop
mov
mov
add
ja
xchg
or
add
pop
add
push
das
push
mov
rcrb
dec
push
pop
adc
add
aad
xor
jp
push
sub
int
mov
sbb
imul
cwtl
push
or
cmpsb
xor
fs
mov
lds
mov
icebp
pusha
mov
shll
mov
rclb
jbe
mov
cmp
ss
aaa
xor
or
sub
loope
sahf
push
xchg
cmpsb
sub
xlat
in
inc
xchg
lods
cmc
add
int
mov
aaa
and
mov
lods
fsubs
pop
jp
les
dec
add
xor
scas
jmp
push
pushf
pop
mov
in
xlat
rorl
pop
int3
andb
cmpsw
or
punpcklwd
push
lahf
mov
inc
mov
push
sahf
inc
inc
je
pushf
cmp
xlat
fimuls
push
mov
dec
lods
fisubs
xchg
call
jle
imul
mov
movsb
sub
in
push
or
dec
rcll
cmp
adcl
xchg
sbb
mov
push
adc
out
fdivrl
aad
cmpsb
inc
mov
cmpb
js
dec
adc
inc
jl
sub
mov
push
es
add
data16
push
mov
mov
xchg
push
xchg
jmp
stc
into
xor
dec
jnp
int3
mov
fwait
mov
cmp
lods
call
dec
xchg
pop
lret
sbb
mov
cld
es
jmp
and
ss
xor
and
fs
cmp
xor
int
push
pop
ss
shrl
dec
sub
cli
mov
push
mov
lret
ret
and
bound
mov
xchg
pop
jmp
call
jg
mov
push
mov
and
sbb
test
out
adc
and
outsw
inc
cmp
inc
push
mov
cmp
add
test
mov
xor
fwait
je
dec
jns
into
outsl
movsl
pop
loope
pusha
mov
dec
xorb
insb
adc
dec
aaa
mov
push
movsb
dec
and
cwtl
lahf
aas
inc
imul
inc
cli
mov
sub
xchg
aas
mov
in
ds
rcl
mov
cli
xor
and
je
sub
les
ret
jecxz
bound
inc
pop
mov
daa
mov
push
sub
xor
lahf
flds
pop
mov
jle
mov
pop
or
int3
ret
mov
cli
test
add
gs
aas
iret
push
das
jae
add
cmp
repnz
rclb
push
xor
and
cmpsl
mov
xor
in
xchg
adc
shlb
push
adc
dec
shl
jns
add
lcall
sub
shlb
adc
iret
lahf
dec
pop
pop
lds
scas
and
fwait
inc
mov
loop
aas
ret
push
mov
enter
or
mov
ds
leave
adc
push
jb
mov
cmp
or
cli
repz
or
loop
outsb
cli
xchg
cmpsl
push
test
cli
fcomps
fmull
insb
or
dec
xor
data16
ret
add
sbb
xorl
test
push
pop
cmp
jle
cmpsb
add
stos
mov
movsl
mov
dec
das
rcrl
mov
push
rorl
shlb
inc
fs
test
pop
mov
xchg
push
pop
or
push
sahf
xchg
push
movl
in
sbb
add
mov
cmp
push
jnp
out
out
lock
xchg
dec
loope
mov
add
je
out
adc
nop
sub
push
or
jmp
pop
cmp
sbb
incb
mov
or
xor
push
mov
xchg
aaa
lods
and
test
or
rcr
jne
or
cmpsl
mov
mov
sbb
cld
icebp
call
inc
ds
sbb
ss
pop
call
sbb
cmp
addr16
arpl
push
push
inc
mov
pop
leave
mov
mov
lods
sbb
outsl
xchg
dec
out
ret
icebp
sbb
cmpsb
pop
lock
sti
sahf
xorl
pop
lods
int
adcb
jo
inc
fisubs
sbbl
mov
dec
imul
decb
add
add
popf
xor
loopne
add
jge
xor
sub
inc
nop
mov
or
daa
or
leave
push
mov
in
aaa
stos
sub
pop
stc
xor
push
or
and
jb
iret
shlb
mov
cmp
push
fists
mov
cs
jo
add
and
jne
iret
stos
roll
jmp
or
lcall
mov
xchg
and
push
bound
cltd
rclb
bound
fstpt
pop
out
fwait
aaa
sbb
jns
cmpsb
imul
inc
fbld
xor
add
push
out
imul
fs
inc
cwtl
arpl
jle
lret
cmc
jmp
lods
stos
xorb
lods
push
cmp
dec
mov
jae
outsl
mov
lds
mov
lret
dec
push
xor
pop
sbb
pop
mov
mov
lret
dec
pop
test
xchg
inc
out
pop
pop
push
mov
popf
inc
jmp
mov
dec
icebp
add
mov
dec
inc
subl
or
add
cs
add
shr
les
adc
or
push
add
jg
and
mov
js
xchg
fidivrl
sarb
dec
int3
or
sub
mov
aas
sub
mov
dec
add
mov
or
das
cmpsl
std
ja
dec
push
or
fadds
stos
dec
jle
jo
repnz
pop
repz
shrb
xlat
xorb
push
xor
outsl
jae
push
js
sbbb
or
daa
cmp
cmp
lahf
insb
loope
scas
in
pusha
ret
lret
es
int
jmp
sbb
lods
adc
adc
mov
mov
jnp
hlt
mov
in
fiaddl
sub
mov
xchg
aad
jp
adcb
cmp
test
mov
pop
out
scas
adc
mov
jae
aam
xchg
xchg
js
stc
mov
add
sub
ljmp
inc
pop
jbe
mov
aas
aaa
scas
pop
push
and
leave
pop
sub
pop
pop
adc
dec
pusha
cs
mov
push
sub
push
mov
ljmp
and
or
inc
push
pop
clc
jp
inc
rorb
inc
lcall
loope
lret
dec
insl
out
pop
jl
cmp
test
xchg
lret
xchg
repz
pop
sbb
fwait
pusha
pop
dec
dec
pop
jle
sbb
mov
popf
es
push
lock
cmp
sbb
sub
pop
or
stc
or
mov
add
pop
mov
sti
adc
and
pop
or
inc
in
fdivrp
popa
xchg
push
inc
xchg
call
jl
and
pop
daa
leave
pop
mov
mov
xlat
outsl
in
test
fisttps
lret
scas
push
xchg
dec
xor
jmp
aas
sub
jne
loope
mov
cs
pop
cmc
mov
call
pop
popa
dec
xor
sti
mov
incb
pop
mov
stc
mov
sti
inc
aaa
adc
fs
nop
cmp
stos
repnz
xchg
mov
inc
aas
daa
pop
adc
js
imul
scas
in
mov
movsl
aas
mov
fwait
roll
addr16
sbb
mov
std
push
gs
jae
andb
jns
or
adc
bound
mov
leave
popa
insb
cmpsb
hlt
push
imul
pop
bound
sarb
lods
push
or
pop
lret
divl
inc
cmc
shll
pop
pop
inc
inc
mov
in
adc
inc
popw
inc
out
bound
lret
mov
mov
mov
pusha
adc
jnp
cmc
imul
xor
jne
out
push
nop
xorb
cmpsb
subb
arpl
push
aas
lcall
inc
mov
xlat
ja
jb
adc
fisubs
cmp
push
test
test
dec
out
ljmp
pop
les
mov
dec
sub
xchg
pop
adc
xor
mov
xor
push
insb
add
inc
add
aas
roll
rclb
stos
cs
xchg
push
stos
push
add
push
and
mov
push
cmp
xor
ret
push
pusha
mov
dec
test
cmpsb
xor
sbb
aad
js
pop
pop
or
ljmp
dec
sysenter
fdivl
dec
test
jne
push
aas
jbe
loop
or
je
xchg
fsts
lods
pop
imul
add
mov
por
dec
fcmovb
imul
js
mov
sub
scas
push
imul
dec
inc
mov
fbld
cmp
popf
mov
xchg
shll
inc
jmp
daa
or
rclb
pop
lea
pop
add
scas
leave
dec
std
pop
es
pop
mov
and
js,pn
daa
not
in
sub
xor
pop
jp
push
mov
sbb
fisubrl
dec
or
addl
pop
sub
scas
pop
addl
pop
mov
movsl
inc
xlat
repz
pushf
xchg
aas
outsb
dec
mov
lea
or
int
xrelease
dec
or
outsl
push
mov
pop
notl
fidivrs
jno
xor
add
icebp
xor
popa
hlt
lcall
cmpsb
jae
repz
stc
xchg
pop
inc
push
and
inc
loop
or
mov
or
push
in
sbb
mov
jle
mov
mov
mov
sbb
sbb
sbb
into
jmp
call
icebp
hlt
jmp
addl
cltd
movb
test
inc
sahf
push
cwtl
mov
fwait
cmp
xor
push
sbb
xchg
movsl
push
xchg
inc
aam
bnd
xchg
clc
cmp
dec
das
xor
fdivrl
rolb
nop
cmc
mov
pusha
stc
in
addb
daa
push
dec
pop
ss
stos
movsl
jo
adc
pusha
pop
ss
xor
mov
xor
inc
inc
in
mov
loop
aam
jl
pop
lock
push
add
lds
and
xor
jnp
sub
dec
fs
or
add
lret
pop
mov
cs
sbbl
mov
icebp
jge
xchg
test
inc
test
mov
int
sub
lds
push
into
in
or
jno
lcall
cli
push
xor
mov
data16
ss
or
imul
jne
loopne
cmp
jg
jge
popa
lret
in
dec
dec
rcrb
insl
inc
jle
jno
mov
cltd
jnp
push
call
int
jbe
pop
sbb
cmp
ss
aas
sti
out
lahf
jae
push
inc
mov
rcll
nop
dec
les
mov
jg
std
sbb
es
ficomps
jae
sub
out
out
shrb
adc
stos
dec
xchg
xorl
repnz
push
fildll
or
mov
lods
gs
xorb
xchg
cmp
mov
jo
pop
cmp
pop
push
xchg
mov
push
mov
sbb
arpl
mov
ret
jnp
jle
and
mov
add
mov
ret
dec
sbb
or
aaa
xchg
pusha
sbb
cs
fwait
mov
xchg
daa
push
pop
pop
mov
add
jae
fdivrs
jle
dec
xor
push
and
pusha
cwtl
andb
jo
sbb
imul
ret
dec
test
pusha
dec
inc
mov
pop
mov
mov
out
pop
leave
iret
ds
movsb
cmpl
xlat
mov
push
scas
scas
or
dec
jb
mov
les
aaa
lahf
mov
test
dec
inc
mov
xchg
jno
enter
data16
adc
ljmp
hlt
cmp
lret
andl
cmp
jns
or
pop
insl
push
xorl
decb
push
enter
std
nop
push
inc
sub
scas
pop
test
sbbl
xor
pop
mov
dec
loopne
jo
xchg
push
xchg
data16
fnstenv
lret
mov
push
sbb
rcrl
mov
xchg
dec
pop
or
cmp
pusha
mov
mov
dec
fisttps
loopne
int
mov
jae
add
xchg
jb
stos
std
call
dec
cmc
dec
mov
pusha
popa
push
jo
fildl
ret
sub
inc
and
sbb
jg
pop
lret
lcall
in
int
push
aas
or
iret
fstps
push
mov
add
scas
jmp
inc
inc
ficoml
cltd
mov
mov
cmp
and
dec
ret
sar
pop
mov
ja
add
add
dec
push
das
dec
fcoms
ja
lds
xlat
ss
mov
movsb
cmc
loop
mov
fsubl
jns
out
dec
loop
popf
jb
loope,pt
push
push
pop
or
lods
dec
adc
cmp
cmp
dec
scas
cmpl
fidivl
call
adc
fnstsw
leave
ss
sbb
xchg
repnz
roll
pop
hlt
mov
roll
movsl
sub
inc
nop
dec
pop
mov
xor
jp
pop
mov
aam
lret
xor
rcl
ret
mov
and
sub
shrb
test
cli
jae
add
enter
pop
call
inc
add
add
shlb
repz
sub
jbe
fisubrs
and
pop
aas
inc
andnps
cmp
or
sub
ret
sub
pop
addr16
jecxz
push
pop
xchg
lods
xor
or
adc
mov
push
mov
jnp
dec
fnstcw
xor
dec
xchg
and
xchg
inc
xlat
jae
push
sbb
or
aas
pop
lret
sbb
shlb
lock
sbb
dec
mov
testl
hlt
enter
cmp
pop
adc
aad
add
and
xor
and
pop
jmp
xor
pop
aas
cmp
add
lcall
je
enter
push
pushf
icebp
orb
mov
or
fstsw
pop
jae
loop
inc
jbe
pop
popa
and
and
and
fstl
jmp
or
pusha
orl
jb
mov
lds
push
dec
jmp
jge
lods
or
rorb
int3
inc
ljmp
pop
fsubrs
inc
jmp
out
dec
add
insb
mov
cmpsb
adc
push
xchg
fbld
mov
cmc
cmp
pop
js
or
mov
divl
jno
insl
xchg
add
mov
pop
mov
addb
push
adc
roll
adcb
cmc
stos
roll
popf
sti
ds
mov
ret
jg
psubusb
aaa
in
push
scas
mov
andl
xchg
pop
loope
stos
gs
cs
dec
push
cmp
scas
sub
call
sub
mov
inc
or
in
js
adc
push
repnz
sbb
shrb
ja
lret
sub
fwait
lea
lock
mov
adc
div
pop
je
mov
dec
cmpsl
xchg
adc
repz
mov
xchg
nop
adc
pushf
daa
in
or
mov
int
jecxz
mov
or
lcall
pusha
and
aas
or
in
call
les
xlat
sarb
sub
jg,pt
mov
inc
pop
test
ss
std
jns
pop
jge
jmp
adc
mov
cli
jo
popf
cs
bound
ret
inc
push
gs
xchg
mov
pop
cvtpi2ps
add
xor
mov
adc
pop
adc
lods
sub
scas
fnstsw
xchg
adc
adc
aas
push
cs
inc
rorb
je
mov
jp
or
repnz
lods
lret
jmp
imul
lahf
inc
jbe
lahf
push
mov
call
fldcw
inc
loopne
adc
pop
and
mov
ss
and
or
xchg
push
pop
jg
dec
mov
add
push
xchg
jle
lods
dec
lahf
jae
pop
cmp
add
hlt
test
add
add
stc
fcoms
daa
call
lods
mov
aas
cmp
or
enter
add
jecxz
cmp
dec
aaa
clc
rorb
xchg
sbb
xor
jno
subb
scas
movsl
loope
rcll
cmp
add
inc
cmp
cli
ljmp
push
das
fsubp
rcl
inc
and
pop
imul
push
pop
lea
hlt
enter
repz
js
sbb
push
and
inc
or
mov
gs
fiaddl
dec
cmpsb
rcr
mov
pop
fisttps
jmp
adc
push
lret
or
or
pop
cmpsb
pop
adc
push
adc
inc
and
shrb
adc
mov
inc
out
mov
loopne
repz
aad
pop
pop
jnp
cmpsb
iret
mov
jns
ret
sub
mov
pop
jecxz
sahf
cmp
jnp
das
xor
cs
sarb
push
les
into
stos
pop
jmp
mov
loope
repz
jo
in
sub
aas
pop
or
pop
jo
fs
mov
mov
movsb
mov
imull
jae
stc
ret
mov
insl
cmp
xchg
inc
insl
mov
mov
sub
mov
push
pop
movsl
out
adc
sub
xchg
adcl
lret
adc
or
ljmp
popf
out
adc
lods
pop
roll
scas
mov
mov
repnz
ja
dec
or
pusha
add
mul
fucom
lret
je
jno
sbbl
cmp
jnp
mov
pusha
jno
mov
sub
lds
inc
pushf
jne
xor
add
ret
dec
dec
dec
xchg
add
sub
sbb
push
shrl
mov
subb
mov
das
jmp
in
mov
xchg
pop
dec
pop
movsb
loope
xlat
popa
loopne
inc
jae
push
data16
addl
outsb
push
mov
scas
lret
addr16
out
and
fdivrl
das
subb
or
sbb
add
imul
dec
mov
mov
push
in
nop
cmc
shlb
jae
insb
leave
jmp
lahf
hlt
aas
sub
sub
mov
push
dec
enter
mov
add
add
dec
adc
sbbl
fwait
push
and
or
cmp
pop
push
sub
iret
sbb
loope
ja
cmp
pop
sbb
repz
ficoms
sbb
dec
dec
xorl
mov
int3
mov
ret
pop
push
fs
add
das
push
dec
pop
mov
jg
and
sbb
js
cmpsl
out
mov
sbbb
jp
rorb
mov
movsl
adc
jge
ror
lds
adc
fists
cmpsb
adc
mov
cli
fs
mov
sub
clc
push
and
cmp
push
mov
adc
push
enter
add
outsl
inc
movsb
push
mov
sub
sarb
dec
dec
in
mov
enter
dec
out
xor
aaa
into
scas
jno
mov
jg
inc
icebp
cmp
xchg
cmp
fidivl
jl
mov
mov
frstor
xchg
sbbb
add
jp
loope
xchg
add
outsb
pop
mov
mov
decb
outsl
inc
stc
incl
sbb
sub
ja
jge
adc
pop
dec
pop
push
js
push
xor
stos
xchg
mov
in
cmp
call
test
adcl
ret
mov
xor
scas
cmp
popa
xchg
cmpsb
jecxz
dec
fidivs
movsl
lcall
ljmp
ret
inc
aam
jo
jae
aaa
sbb
cmp
movsb
inc
pop
mov
pop
fbstp
sbb
sub
mov
cltd
pop
push
cmpsb
push
inc
sub
sbb
pop
pop
inc
pop
sub
bound
cmp
pop
loop
dec
and
xor
jecxz
insl
push
inc
push
or
adcl
inc
dec
int
stos
mov
xchg
ss
xchg
dec
push
jmp
jge
pop
fisttpl
ret
sbb
inc
push
mov
lock
rol
and
dec
xorl
test
jo
push
mov
rol
cltd
rcrb
lea
inc
jbe
fwait
test
aam
out
ja
jmp
or
icebp
push
jbe
add
xchg
gs
or
cwtl
mov
dec
mov
add
idiv
mov
sahf
dec
sub
or
xor
inc
dec
xor
xor
ret
mov
jg
fsubrs
push
les
lds
jmp
out
into
roll
ffree
dec
xor
pushf
add
cmpsb
addl
jge
inc
pusha
dec
lahf
movsb
sbb
xchg
pop
add
pop
cs
add
mov
loope
xor
cmp
in
and
je
andb
dec
outsl
jg
mov
mov
mov
adc
aas
mov
pop
inc
loop
pop
mov
mov
jnp
jg
inc
add
cmp
adc
push
ds
loope
fstps
dec
pop
sarl
pushf
arpl
adc
ss
jl
mov
test
pop
lcall
or
and
insb
add
pop
push
outsl
mov
pusha
cmp
jne,pt
sarb
add
insl
jbe
je
cs
or
adc
frstor
out
fxch
push
push
int
mov
stc
mov
incl
dec
ss
enter
ds
mov
inc
add
aas
push
jmp
adc
pop
sbb
cs
pop
mov
inc
cmpb
fnstenv
xor
and
dec
ljmp
add
add
pop
daa
push
mov
cmpsb
movsl
shrl
fmuls
inc
scas
and
test
sub
mov
int3
pop
xor
cmp
pmaxub
cmp
lahf
leave
dec
lds
xor
or
pop
inc
mov
ror
mov
lods
mov
lock
inc
xor
inc
fmuls
jne
sti
loope
scas
pop
mov
pop
dec
sbb
mov
ret
xor
call
sbb
stc
inc
mov
mov
int
inc
aas
mov
pop
scas
ret
xor
and
ja
inc
iret
mov
add
mov
jne
or
fnsave
sub
push
mov
stc
outsl
inc
cwtl
and
mov
je
insl
sub
dec
xlat
daa
dec
pop
sbb
pop
leave
cld
es
and
int
adc
cmp
push
push
or
ja
iret
call
pushf
sub
and
xchg
mov
fwait
sbb
aaa
test
mov
stc
aam
xor
pusha
ss
outsb
lods
inc
mov
pop
enter
cmp
xor
mov
sahf
bound
sbb
loopne
mov
pop
xchg
mov
fcomps
loopne
loope
cmpsb
fiaddl
call
push
dec
js
adc
inc
lods
sbbb
add
cmp
scas
or
gs
out
mov
fisttps
inc
loop
add
dec
shl
sub
movsb
lahf
fdivrs
mov
xor
jmp
movsl
add
pop
ja
add
dec
mov
pop
popa
cs
cmp
sub
or
into
or
pusha
dec
jbe
and
aas
cmp
cmp
clc
inc
enter
scas
push
mov
outsb
ret
mov
and
pop
add
mov
xlat
mov
sbb
cs
fucomi
sbb
cmp
hlt
push
nop
jg
pop
int
pop
pop
or
clc
sbb
mov
es
cwtl
mov
mov
sbb
sbb
scas
mov
pop
or
add
lods
jne
cmp
pop
dec
push
mov
jbe
pop
jp
and
cmp
and
out
popf
hlt
and
int3
fdivs
push
loopne
cmp
aas
push
sub
mov
adc
dec
jg
cs
push
jmp
shll
mov
pop
call
jno
push
jmp
es
cmp
scas
ret
orb
gs
icebp
push
xchg
mov
jecxz
pop
mov
or
pop
or
lcall
mov
sbb
leave
fidivl
mov
leave
cs
aaa
bound
mov
add
push
mov
cs
aas
adc
icebp
xlat
inc
push
int
inc
cmp
fs
pop
adc
inc
cmp
xor
pusha
in
shll
jle
or
mov
push
fcmovnu
sbb
xchg
mov
pop
cmp
or
or
mov
ljmp
lret
ficoms
js
outsb
pop
mov
mov
push
lea
imulb
call
inc
dec
int
inc
adc
out
add
xlat
add
adc
and
das
cmpsb
push
sbb
mov
sub
pop
cld
imul
dec
cwtl
push
sub
in
mov
inc
subl
mov
fsubp
imul
pop
outsl
xor
fistl
jnp,pn
dec
add
push
repz
dec
inc
je
loope
cmpl
jmp
mov
dec
pop
in
fcmovnb
je
mov
icebp
ret
jp
nop
rcr
nop
mov
shrl
add
pop
jp
lcall
xchg
mov
dec
mov
mov
adc
dec
and
js
pop
dec
movsl
jle
adc
mov
shll
lret
dec
add
rorb
jle
dec
cmc
and
jle
jg
imul
xchg
gs
nop
aaa
sbbl
pop
cltd
inc
mov
mov
in
xor
dec
inc
ljmp
clc
dec
adc
popf
dec
mov
decb
pop
cmp
fs
roll
add
xchg
mov
hlt
jle
add
imul
pop
dec
insb
lahf
push
push
test
pop
add
fnstsw
pop
int3
inc
jg
or
popa
stc
sbb
loope
xor
gs
js
faddl
int
clc
jne
in
sbb
int
mov
adc
out
dec
outsl
pop
rol
jb
movsl
jecxz
sbb
pop
dec
enter
xchg
sbb
jne
cmp
loopne
mov
aam
ret
jle
dec
cmpsb
std
cs
aas
test
jbe
jno
or
insl
pop
push
cmc
sbb
lods
and
or
xor
clc
push
out
add
sbb
pusha
lock
into
test
add
dec
mov
popa
jne
fiadds
loopne
lahf
inc
shlb
push
fwait
repz
jp
ja
push
flds
ret
cmp
and
jne
cmp
push
mov
repz
scas
pop
movl
jnp
sbb
hlt
mov
xlat
lahf
jg
mov
pop
jmp
inc
repnz
int3
repz
subl
mov
lods
aaa
repz
jbe
jecxz
movb
scas
sarl
test
test
aas
sub
mov
inc
shl
repz
xor
cli
inc
sbb
das
js
dec
cmp
je
xchg
addr16
mov
jl
loopne
inc
insb
pop
and
dec
dec
fistps
fistpl
jp
xchg
adc
adc
inc
xor
mov
and
dec
out
inc
arpl
pop
jmp
cmp
subb
fnstcw
mov
mov
xlat
imul
nop
scas
xor
jo
mov
push
mov
cmp
pop
cmp
nop
aas
fwait
enter
gs
push
mov
out
imulb
lret
lret
sbb
push
pop
ja
or
int
mov
lock
mov
adcb
push
or
out
dec
sub
inc
out
fwait
push
add
ss
sti
or
dec
and
and
pop
jo
test
push
add
aaa
cmp
cmp
fwait
repnz
shlb
lea
pop
mov
fiadds
xchg
cmpsl
inc
insl
rolb
pop
ss
xor
stc
sbb
mov
lahf
fsubrp
pop
shlb
or
jg
pushf
push
and
out
aas
loope
push
xchg
cmpsl
xchg
mov
mov
sbb
fsubp
or
pop
ss
shlb
popf
jbe
loopne
pop
sar
or
and
add
mov
outsl
sub
sbb
xor
pusha
hlt
fwait
ret
iret
mov
pop
dec
fwait
mov
pop
add
leave
faddl
mov
xor
fidivrl
or
and
out
jp
clc
js
data16
leave
xchg
xor
imul
aas
cmpsb
pop
jp
cmp
or
test
rcl
xchg
jmp
dec
insb
xchg
dec
scas
roll
ljmp
pop
dec
lret
pop
test
or
out
push
sub
sbb
pop
fidivl
jae
sub
xchg
jge
jb
jb
ror
leave
inc
xor
mov
jl
lret
xchg
xchg
mov
sub
jge
pop
and
inc
xor
stos
xchg
sbb
leave
outsl
pop
add
sbb
add
jno
add
jo
daa
dec
pop
inc
int
mov
stos
mov
lods
cltd
jg
xor
cmp
pop
pop
jnp
ja,pn
jnp
roll
inc
sub
pop
add
imul
push
int
loope
into
bswap
push
dec
idivl
shr
sub
jmp
mov
pop
jle
fisttpl
xor
cmpsb
int3
cmp
cmpsl
divb
dec
popf
popa
ja
pop
sbb
addl
add
pop
inc
dec
cmp
or
or
pop
xlat
adc
add
loopne
into
push
lret
popf
adc
jmp
lcall
sbbl
jno
push
fildll
mov
in
dec
and
mov
jbe
pop
mov
sub
ljmp
and
mov
xchg
dec
ret
subb
sub
or
adc
test
jmp
jmp
dec
stos
dec
ss
cmc
cmovle
pop
xor
or
cmp
lods
push
call
jno
or
sub
xor
jnp
cmc
mov
pop
jmp
out
adc
addb
adc
mov
repnz
leave
sub
xlat
mov
cmp
rcl
push
xchg
roll
shlb
cmp
sarl
daa
dec
cs
mov
cmp
xchg
xchg
push
leave
aad
inc
fisttpl
imul
xchg
dec
and
adc
lret
cmc
in
xchg
pop
mov
pop
inc
push
cmp
dec
es
lds
mov
sbbb
mov
lock
pop
inc
jae
bnd
mov
and
lds
cltd
xchg
stc
push
aas
mov
ja
pop
mov
inc
cwtl
adc
mov
pop
nop
push
dec
xchg
ja
mov
dec
mov
adc
inc
dec
sbb
mov
dec
ljmp
cmp
mov
jb
push
gs
add
sub
imulb
jmp
inc
cmp
ja
or
popf
dec
pop
js
add
adc
rcrl
pushf
ja
stc
leave
add
je
dec
lea
jo
cmpsl
cltd
cmp
mov
cmp
cs
pcmpeqb
mov
add
pop
xchg
pop
enter
jb
xor
or
xlat
cmc
test
cmp
jmp
dec
pop
cs
test
mov
sub
dec
or
inc
adc
mov
rcl
adc
cmp
dec
outsb
stos
dec
mov
mov
outsb
cmp
or
push
push
scas
adc
movsl
ljmp
cs
aaa
inc
dec
stos
popa
add
sub
pushf
push
jne
cmp
cwtl
inc
jp
or
inc
push
xchg
outsl
mov
jbe
popw
enter
gs
adc
pop
les
fstpl
mov
mov
imul
sbb
dec
add
ss
cmp
inc
les
bound
cmp
add
sbbl
jg
sti
mov
popa
lret
mov
xchg
push
cmc
idiv
cwtl
and
imul
fiaddl
leave
dec
out
push
xor
les
mov
push
mov
repnz
or
and
ficoml
imul
loop
mov
out
adc
sub
jb
or
fadd
or
pop
call
sub
aam
pop
icebp
repz
cmpl
add
clc
daa
mov
imul
in
repnz
dec
push
hlt
js
out
ljmp
mov
fwait
sarl
push
mov
add
data16
imul
inc
jg
sub
mov
cltd
fwait
xlat
in
mov
xchg
fisubl
xlat
mov
pop
loope
jno
pop
cmp
cs
fwait
dec
shl
lods
mov
iret
and
idivb
lret
dec
xchg
cmpsb
fsubrl
sbb
leave
lahf
popf
xlat
ja
rcl
or
dec
insb
sbb
cmc
push
stos
rclb
in
xor
dec
mov
loopne
mov
dec
jl
xor
sub
inc
pop
and
xchg
mov
dec
dec
loop
stc
mov
out
mov
stos
daa
aaa
mov
lretw
ret
es
pop
js
mov
fwait
bts
movsb
xchg
pop
dec
notl
jbe
cwtl
leave
pop
jae
pop
sbb
jmp
xchg
push
mov
add
lret
dec
inc
ja
cmpsb
mov
clc
mov
and
pop
push
lret
loopne
dec
test
dec
push
sub
mov
push
aaa
xchg
int3
sbb
dec
fwait
cmp
out
add
add
lahf
sbb
dec
movsb
js
inc
pop
aad
jg
and
dec
inc
movsb
lcall
or
dec
or
mov
and
add
shr
jp
ja
inc
in
jl
xchg
icebp
mov
shr
add
mov
cltd
pop
cmp
sbb
cmp
and
pusha
sbb
cwtl
pushf
test
sub
jle
xchg
call
mov
pop
test
xor
pop
xchg
push
cmp
popf
sbb
push
subl
stos
inc
xchg
and
xchg
pop
jle
and
add
outsl
cmpsl
adc
pusha
hlt
cmpsb
insb
jmp
out
mov
adc
repnz
dec
xchg
inc
xchg
in
lcall
jl
rcl
add
pop
sub
dec
ret
mov
push
dec
sub
mov
mov
mov
icebp
lods
dec
into
lret
mov
insb
lret
sbb
jge
iret
and
pop
stc
in
adc
sahf
inc
call
jbe
lods
and
imul
cmp
pop
jns
adc
pop
ficompl
mov
loope
lods
popa
in
pop
mov
movsl
arpl
xchg
sbb
mov
daa
inc
dec
adc
int
mov
sbb
push
mov
or
pop
sub
sti
cli
jmp
sub
adc
fwait
stos
xor
adc
xchg
pop
es
or
push
icebp
xor
sbb
call
fimull
jp
mov
adc
in
pusha
adc
rclb
daa
and
and
sub
mov
repnz
jbe
and
pusha
pop
xchg
fwait
dec
out
shrl
mov
xor
cmp
rdmsr
sub
in
gs
lahf
loop
leave
ret
adc
mov
push
movsb
and
push
mov
scas
inc
popf
sahf
clc
insl
jb
adc
sbb
shr
int
pop
dec
test
stos
jbe
xchg
ljmp
or
xchg
mov
stos
cmc
in
jg
addb
les
xchg
loope
mov
mov
pop
sbb
aas
enter
push
push
ror
out
mov
pop
push
test
cmp
lds
sarl
mov
push
pusha
pop
in
enter
testl
arpl
and
adc
inc
js
call
mov
cmp
frstor
jae
sahf
pop
dec
inc
adc
orl
push
iret
add
repnz
jns
popa
pop
ss
sti
test
xor
inc
xchg
lods
dec
dec
jae
add
insb
mov
push
negb
add
nop
mov
fs
in
adc
jae
dec
adcl
push
jl
and
orl
lods
cli
xlat
pop
pushf
mov
jg
cmc
mov
mov
and
sbb
cmp
jp
ret
push
jne
frstor
push
sub
iret
pushf
dec
movsl
loope
ret
inc
out
enter
fsubr
stos
pop
pop
jmp
dec
xor
jmp
pop
insb
mov
mov
fnstcw
jmp
xor
pop
adc
jae
loop
xor
mov
negb
outsl
pop
sub
mov
cs
mov
xchg
or
xchg
mov
fnstenv
jno
mov
pusha
in
mulb
xchg
pusha
and
dec
loopne
outsl
stc
jae
jle
cmp
cs
repnz
das
and
stc
or
inc
xchg
xor
inc
test
loop
jo
or
jae
push
jmp
stc
jmp
incb
rcr
xor
std
sub
jmp
pop
and
call
nop
xchg
and
fidivrl
mov
pop
push
sbb
jns
aaa
sti
adc
mov
jmp
inc
sti
popa
pop
add
or
dec
cs
xchg
icebp
jb
cmp
add
popa
push
inc
pcmpgtd
in
call
fs
or
data16
sti
adc
in
xlat
sub
ss
aam
fisubl
out
ljmp
mov
cmp
and
lret
sti
pop
pop
call
mov
loopne
xchg
adc
mov
mov
fcom
negb
into
inc
pop
or
mov
adc
push
pop
sti
xchg
call
jnp
push
cmp
andl
iret
jnp
mov
jo
xor
fwait
lret
vprotw
push
xchg
inc
jge
mov
fs
dec
lahf
adc
push
push
mov
lret
sub
push
or
inc
pop
xchg
call
jo
pop
dec
pop
jae
insl
idivb
mov
cmp
inc
and
push
dec
mov
int3
ljmp
mov
xlat
and
pop
sbb
int3
xchg
aas
dec
sbb
push
gs
mov
int
test
mov
cli
add
xchg
pop
testl
gs
jmp
les
jg
setp
leave
insl
mov
es
aas
sbb
pusha
jecxz
inc
dec
add
jo
jno
xchg
mov
or
lds
pop
movsb
std
add
mov
lock
mov
cwtl
jmp
lods
dec
push
add
xor
mov
inc
or
mov
stc
ljmp
js
or
fisubs
jnp
clc
push
in
push
roll
dec
jns
std
mov
sti
into
and
jecxz
lock
repz
mov
dec
sbb
sbb
scas
fwait
mov
mov
sub
pop
cmpsb
mov
sahf
push
cmpb
xchg
clc
mov
mov
push
rep
sub
fscale
sub
movq
pop
in
inc
mov
fadd
mov
daa
inc
daa
mov
mov
dec
pop
mov
adc
aad
stos
das
test
in
inc
or
mov
jno
scas
pop
popf
loopne
scas
shll
mov
pop
or
pop
icebp
test
lods
inc
or
bnd
fwait
cmp
sub
scas
pop
rcrb
dec
inc
sub
or
sub
pop
cli
jbe
insb
scas
xchg
stc
mov
add
lret
adcb
jl
xor
test
arpl
xlat
call
femms
jg
pop
xor
paddusb
cmp
sbb
add
mov
into
and
cs
les
adc
stos
push
stos
sub
or
cs
gs
mov
add
mov
xchg
adc
and
mov
lret
mov
push
cld
or
fmull
lcall
or
push
lods
sbb
add
fcmove
mov
bound
stc
add
stos
into
les
lret
cmovae
jnp
pop
cs
mov
imul
lret
push
pop
lret
loopne
mov
sarb
mov
mov
pop
dec
cltd
or
inc
fcompl
jne
mov
popa
mov
jl
movsb
xor
arpl
mov
cmpsb
pop
hlt
std
mov
sub
sub
cmp
or
or
aaa
pop
mov
into
adc
push
sbb
xchg
xchg
mov
lds
jns
or
popf
stc
and
popf
cli
shll
loop
pop
dec
gs
int3
cmp
repnz
pusha
sub
movsl
dec
mov
cmpsb
xor
adc
data16
and
or
push
mov
fimull
mov
andl
mov
fwait
iret
mov
pop
dec
mov
xchg
cs
sbb
imul
mov
mov
mov
shlb
jno
aaa
gs
pop
sbb
sub
inc
mov
xor
fnstenv
repnz
pop
push
push
stos
adc
xor
inc
arpl
pusha
subl
mov
imul
push
int
adc
sbb
push
cmpsb
xor
sub
imul
mov
or
add
in
inc
cltd
dec
sbb
loopne
sub
add
inc
scas
sub
rcrb
xor
xor
gs
or
leave
sahf
xchg
add
cs
inc
dec
or
cmp
mov
push
lods
mov
adc
add
xor
mov
inc
xlat
push
mov
pcmpgtw
xor
pushf
out
sub
loop
dec
aaa
xor
dec
jae
add
gs
cmp
jge
adc
pusha
cs
ljmp
imul
mov
or
shlb
rcrb
push
cmp
xor
inc
push
mov
jl
and
lret
call
pop
dec
add
pop
in
push
push
jb
pushf
push
dec
lcall
jae
mov
cli
lods
xlat
in
imul
ret
inc
imul
ret
insl
sub
mov
cli
dec
adc
sahf
and
xchg
dec
sub
jbe
call
lock
mov
mov
xchg
or
adc
aad
and
pushf
jne
jge
mov
call
mov
fwait
mov
mulb
cmpb
insb
sub
jmp
cwtl
ss
push
bound
rcl
sahf
sub
lret
jmp
mov
push
repz
mov
ja
jl
mov
fistpll
imul
orl
cmp
in
add
out
int3
xlat
push
pop
shrl
in
jp
aam
ss
mov
or
in
jno
iret
mov
lods
cmpsb
inc
or
cmp
sub
call
adcl
outsl
fimuls
stos
lds
dec
mov
lcall
movsl
pop
je
jnp
or
mov
sarb
faddl
cmp
cmp
fimull
das
je
mov
mov
add
sbb
and
rcrb
xchg
inc
add
xlat
xchg
and
xchg
les
int3
mov
popa
sbb
and
sub
cs
adc
dec
and
aad
leave
loopne
or
rcrb
pusha
sbb
and
aas
into
fdivl
inc
or
add
stc
data16
xor
inc
imul
loopne
mov
inc
adc
push
scas
dec
cmpsl
ret
dec
fs
xchg
pusha
aam
mov
popf
inc
xchg
mov
loope
int
pop
mov
dec
inc
insl
repz
and
aaa
inc
insl
inc
out
jp
pop
mov
push
in
xchg
inc
cs
mov
gs
les
rcrl
fisubs
mov
sub
sub
pushf
cmc
fadd
lret
loope
xchg
pop
pop
int
inc
jl
cs
cmp
sbb
outsb
xchg
dec
xor
popl
inc
cmpsl
add
jo
xor
pop
ret
mov
popl
lods
jno
clc
push
push
pop
stos
mov
jl
lods
xor
dec
mov
sahf
data16
adc
enter
fildll
movsb
call
cltd
inc
gs
mov
or
push
cmp
push
dec
xor
pop
pop
add
shll
dec
cmp
dec
inc
imul
mov
stos
loope
pop
arpl
or
leave
mov
and
pusha
test
fimuls
leave
int3
xchg
mov
or
out
adc
xchg
lods
pop
mov
mov
aam
pop
jae
leave
sub
add
call
dec
inc
xor
aad
xor
test
mov
loopne
xor
inc
movsl
ret
xlat
dec
fsubrl
fwait
mov
push
or
pop
mov
aad
mov
dec
cld
cwtl
scas
push
xchg
jp
dec
lcall
popa
in
or
cmc
rcrl
and
stos
dec
inc
cmp
xor
inc
sub
sbb
repnz
mov
cld
dec
filds
sub
fisubrl
stos
aaa
cmp
call
dec
cs
and
das
test
enter
lds
cmp
pop
sbb
stos
push
inc
ja
in
int
and
add
sbb
fidivl
filds
dec
mov
push
jecxz
or
aad
mov
xchg
cld
orl
add
loop
adc
xor
push
ret
sahf
fs
insb
dec
dec
inc
xor
loop
jmp
icebp
rol
fmul
and
nop
mov
insl
data16
mov
push
push
ja
mov
stos
mov
es
lods
pop
dec
mov
xchg
mov
daa
jmp
push
xchg
fwait
and
or
pop
iret
pop
pushf
test
push
aas
jge
out
pop
and
fs
push
add
add
out
fidivl
fwait
dec
or
mov
pop
ja
sbb
adc
and
mov
aad
shrl
push
xchg
xchg
cs
xor
clc
adc
and
jp
and
loopne
cmp
dec
xor
mov
inc
je
jg
out
popa
mov
add
in
shlb
or
add
and
ja
clc
enter
push
add
mov
sahf
lds
aad
xor
fwait
inc
push
lcall
lret
push
fdivrl
clc
lret
sbb
cmp
int3
jno
add
aaa
mov
add
push
sub
fcmovbe
dec
lods
sub
lcall
popf
clc
push
inc
je
dec
leave
fninit
fcomip
jmp
call
repnz
nop
jnp
outsl
subl
clc
pushf
jae
outsl
cmp
mov
enter
testb
inc
lahf
enter
xor
sub
pop
push
cwtl
stc
pop
mov
adc
fcomps
add
imul
js
dec
ljmp
outsl
jmp
adc
mov
xchg
xchg
inc
adc
icebp
stos
xor
dec
sti
sub
xor
stos
repz
jmp
jnp
dec
ss
rcrl
iret
xchg
mov
add
cmpsb
sub
mov
push
xchg
push
or
adc
jnp
lret
clc
adc
and
imul
mov
clc
fnsave
dec
mov
frstor
pop
into
pusha
add
loope
ret
cld
movsl
fcom
pushf
pop
aas
rorl
sbb
mov
int
cmp
ljmp
pop
mov
or
sbb
and
jo
fs
cmp
in
mov
cmc
out
ds
insl
int3
insb
in
sti
inc
jmp
and
sbb
outsb
inc
mov
ficoml
push
icebp
enter
push
clc
xor
roll
ret
adc
clc
mov
push
aam
inc
loop
or
sub
pop
pop
xchg
pop
add
data16
inc
lcall
aam
sbb
lret
daa
ret
mov
push
adc
test
pop
lahf
fsubs
jge
sbb
or
shlb
sbb
mov
mov
dec
mov
inc
pop
aas
jmp
filds
out
dec
adc
icebp
adc
mov
pop
pop
test
add
fildll
rcr
pop
cmpsb
sbb
sbb
leave
pop
rolb
dec
lods
aas
dec
insb
aam
xor
and
xor
aam
jg
adc
dec
cmp
inc
inc
sub
inc
pop
dec
gs
fdivrs
cltd
ljmp
aas
outsl
xor
or
mov
push
pop
cmp
mov
jmp
in
lret
js
add
loopne
mov
sub
in
lret
push
aas
mov
mov
pop
mov
cmc
add
jg
sub
mov
adc
cmc
pushf
and
inc
imul
mov
adc
mov
lret
jge
aas
mov
out
insb
mov
inc
rolb
sahf
insl
pop
adc
out
pop
xorb
je
call
push
adc
lds
add
pop
xchg
negb
mov
andb
xor
lahf
push
fldcw
leave
pop
adcb
dec
add
xor
xchg
fadds
mov
sti
xor
gs
pop
cli
sbb
push
insb
dec
jl
dec
xchg
jmp
scas
into
adc
subb
xchg
lock
pop
mov
jp
scas
dec
into
aaa
loopne
cmp
adc
cmp
sbb
push
pop
out
in
cs
or
test
xchg
mov
and
sub
ret
pop
inc
push
pop
pop
data16
in
into
enter
add
iret
dec
ret
stos
mov
xchg
mov
and
mov
xchg
faddl
stc
sub
outsl
dec
adc
dec
jge
lcall
jge
mov
loopne
xchg
adc
xchg
ret
test
out
ss
and
and
in
xor
add
daa
inc
mov
test
cmp
cmp
cmp
gs
inc
dec
pop
aaa
call
lods
push
ret
lret
movsb
js
lcall
test
ja
repz
fstpt
jb
sarl
cld
lahf
rclb
test
test
jae
or
jp
pop
pop
gs
jbe
or
dec
jb
adc
and
jmp
pop
xchg
dec
rcrb
loop
test
test
adc
mov
mov
dec
mov
stc
pop
xchg
jns
mov
dec
add
xor
inc
and
imul
std
mov
rcrb
daa
mov
lret
push
add
addb
inc
and
ja
scas
mov
cwtl
sti
in
aad
lea
jnp
jp
jmp
mov
ljmp
leave
cltd
pop
jne
sbb
sub
lret
shll
inc
ja
push
lds
lea
cli
popa
fidivs
push
scas
inc
in
dec
mov
popa
cs
mov
rcl
out
push
ret
dec
stos
ds
mov
int
cmp
repnz
inc
mov
pop
mov
popa
stos
fisubl
or
out
js
jae
pop
scas
arpl
stos
stos
sbb
inc
mov
sbb
cmp
cwtl
cmp
inc
push
or
pushl
xchg
jle
fisubrl
add
dec
jo
imul
lret
test
cmpsb
push
xchg
dec
incb
pusha
into
xchg
xchg
pop
sbb
test
lret
dec
mov
dec
popa
ljmp
fdivs
sub
sbb
cli
jge
xchg
mov
scas
pusha
mov
push
lock
xlat
add
jge
fsubl
push
ret
clc
aaa
bound
inc
mov
push
dec
lods
jmp
sub
dec
lret
push
xchg
or
xor
sub
or
loop
or
pop
in
stc
imul
push
push
je
xor
bound
inc
mov
push
stos
into
in
mov
xor
or
inc
out
dec
loope
xor
mov
or
shlb
dec
ficoml
pop
out
cmp
dec
clc
nop
or
loop
stos
mov
dec
xchg
pop
js
mov
or
adc
xchg
sub
pop
pop
dec
dec
jno
or
ja
xchg
stos
sub
mull
arpl
inc
rolb
dec
movb
mov
mov
dec
imul
or
jbe
adc
inc
popf
aas
xchg
xchg
adc
mov
mov
shlb
mov
fimuls
cs
mov
push
pop
jno
insb
jo
out
inc
xchg
insl
push
stc
js
movsb
int3
pop
aam
iret
mov
ficoml
stos
dec
and
out
jnp
pop
paddusb
jo,pn
mov
bound
xchg
pop
inc
and
call
jne
test
mov
punpcklbw
jg
or
push
mov
mov
fstl
cmp
int3
inc
ret
push
in
or
xchg
adc
imul
ret
mov
addr16
scas
add
lods
cmc
shrb
jne
ja
pop
scas
and
or
or
adc
stc
adc
outsl
push
adc
add
movsl
ret
pushf
lret
js
icebp
outsb
xchg
insl
cld
xchg
xor
pusha
out
dec
push
xchg
cmp
adc
in
pop
pop
imull
xlat
jae
mov
cmp
vhaddps
jmp
cmc
xlat
mov
xor
pop
popf
mov
inc
dec
sub
dec
pop
ss
mov
sbb
mov
sbb
mov
repnz
xchg
addb
enter
sbb
and
int
adc
or
push
sbb
pop
ja
xor
mov
pop
out
insl
ja
rcl
push
sub
into
pop
and
mov
sbb
jnp
mov
add
inc
shrl
and
push
ss
jle
or
add
dec
pop
and
sbb
testb
lods
outsb
inc
xchg
inc
inc
scas
test
rcrl
lahf
jno
pop
sahf
mov
pop
cmovno
repnz
test
cld
aas
xchg
lahf
cld
mov
jecxz
pop
push
or
push
push
and
add
mov
cs
ret
lret
sti
cmp
in
cmp
not
insb
sbb
cmc
scas
sub
adcl
lret
call
add
sub
mov
repz
loopne
insl
test
push
fcoms
sbb
scas
dec
popf
and
aas
mov
pop
mov
sub
imul
adc
in
aas
push
les
int3
mov
movsl
sub
popf
mov
gs
add
mov
out
inc
ret
mov
xchg
pop
aas
xchg
adc
repz
push
mov
pop
push
int3
mov
or
push
out
mov
sbbb
sbb
lret
es
notb
add
pop
xchg
mov
mov
jmp
pop
mov
xchg
jbe
xchg
xor
push
movsl
push
sbb
addr16
mov
mov
add
popa
test
pop
mov
cmpsb
lds
ja
sbb
lcall
adc
inc
sub
mov
add
jo
lock
sub
adc
xchg
fnsave
bound
in
mov
push
inc
fmuls
imul
rcrl
enter
push
cmp
and
data16
jmp
int
stos
inc
loope
dec
dec
xchg
stc
in
jmp
cmp
jae
mov
orb
xlat
je
cmc
mov
nop
rcrb
adc
adc
adc
lret
sti
aas
sub
or
push
pusha
sti
inc
sbb
sub
mov
lds
mov
cmp
adc
push
and
and
imul
mov
cmc
les
and
pop
addr16
sahf
push
sbb
es
pop
pop
inc
leave
jp
rcrb
popa
sbb
fists
lds
pop
push
mov
push
mov
dec
ss
jns
inc
insl
int3
cmpsl
and
xchg
pop
lret
adc
cmp
leave
add
outsl
dec
les
int3
mov
sbb
ljmp
lcall
mov
jae
pop
add
popa
and
stos
out
jecxz
rclb
jp
pop
sub
xor
mov
mov
sub
jmp
cmc
inc
mov
ret
mov
cmp
cmp
imul
fiaddl
fdivl
cmpsl
movsl
adcl
ja
inc
xor
pop
repz
jmp
into
mov
in
aad
xchg
aas
inc
into
mov
lret
scas
cmp
xlat
gs
mov
xchg
xchg
jae
shlb
sub
subb
pop
lods
pop
test
sub
imul
sub
sub
fcmove
sub
repnz
lock
xor
stc
dec
lahf
dec
jb
pop
mov
push
adc
dec
mov
mov
mov
mov
xchg
stc
pushf
movb
pop
pop
test
cmp
clc
adc
cs
lret
cld
cmp
jo
fcompl
dec
stc
jae
adc
push
stc
aam
sub
sbb
sbb
fcmovb
gs
xchg
pop
add
shrl
sub
or
mov
mov
add
bound
cld
dec
dec
xchg
mov
popf
adc
sahf
sub
cmp
sub
lret
push
push
jl
das
sub
insl
bound
pushl
cs
movsl
push
add
and
mov
cmpsb
inc
repnz
mov
addr16
or
outsl
pop
xchg
scas
mov
adc
push
ret
stos
or
sbb
fcmovbe
jmp
mov
bound
outsl
add
ljmp
mov
sub
das
repz
pop
iret
mov
add
lock
test
mov
jl
push
sub
in
test
ds
jg
inc
xchg
dec
stos
pop
adc
dec
pop
sbb
dec
test
pop
cs
mov
adc
cli
roll
push
ret
mov
xor
sub
in
adc
jg
insl
and
fsubs
stc
inc
lret
mov
stos
cmp
push
jl
fsubs
and
shlb
mov
pop
jg
ret
fisttps
cs
sbb
push
add
cmp
xchg
mov
stc
adc
jp
fistpll
pop
adc
dec
sbb
dec
xchg
data16
aaa
shrl
push
insb
add
jg
je
xor
push
andl
jo
dec
mov
in
imulb
fstpt
mov
inc
lret
xlat
sti
xor
icebp
xlat
jmp
jmp
leave
and
push
jg
mov
push
push
push
xchg
pop
ja
sub
into
and
dec
jmp
xorl
xor
sub
cs
stos
movsl
pop
imul
sub
enter
sub
mov
ror
push
dec
jo
add
and
enter
mov
sti
loope
and
cmp
jno
lret
ja
loop
sarl
ffreep
mov
cmp
add
xchg
lock
lods
mov
hlt
adc
or
mov
fsubrs
adc
loopne
iret
adc
pop
xchg
mov
push
pop
jnp
pop
push
mov
cli
popf
cmp
jl
and
push
mov
and
stos
and
fsub
sub
adc
lea
and
adc
clc
jl
pop
add
dec
pusha
cmp
dec
adc
pop
inc
ja
pop
mov
adcb
dec
gs
add
and
mov
adc
sub
adc
ss
pop
cltd
mov
inc
in
cmpsl
pusha
mov
fimuls
jo
mov
push
mov
roll
pop
xchg
and
hlt
xlat
in
adc
adc
mov
mov
add
data16
adc
in
ds
push
jmp
andb
push
lcall
xchg
sub
imul
mov
mov
fisttpll
dec
pushf
lret
daa
xorb
sbb
cmp
jecxz
arpl
jo
js
fiadds
imul
scas
sub
imul
xchg
fdivl
out
push
dec
test
dec
mov
shlb
ret
dec
mov
adc
cld
xorb
and
test
xchg
sub
sbb
outsl
sahf
xchg
leave
push
jb
loope
push
push
dec
jb
push
gs
fsubl
daa
scas
pop
in
push
pop
fcmovnb
adc
dec
push
cs
jbe
add
push
xchg
in
mov
push
adc
iretw
xchg
xchg
dec
lds
cmp
dec
inc
jne,pn
pop
xchg
jge
lcall
cmp
xchg
adc
int
imul
pusha
sarl
leave
cs
shlb
sub
pop
mov
shlb
roll
mov
sub
dec
pop
ljmp
sbb
cmpsb
mov
mov
or
jae
jle
pop
cli
outsb
jg
hlt
add
mov
inc
dec
loopne
mov
or
dec
data16
pusha
cmc
mov
add
xor
dec
stc
xchg
pop
loop
stos
dec
jns
xchg
dec
fildll
pop
sbb
pop
xchg
cmp
xchg
dec
cwtl
inc
das
popf
roll
adc
add
add
stos
inc
dec
or
or
stc
dec
lds
dec
stos
inc
dec
aas
push
inc
mov
add
cmc
inc
xchg
sbb
fnstenv
pop
lcall
loope,pt
cli
in
nop
xchg
ficomps
mov
js
inc
in
lret
cmp
aas
mov
cmp
arpl
test
fistps
out
cltd
iret
sub
mov
in
xchg
push
inc
cmp
divl
mov
fs
xchg
cmp
aaa
mov
scas
push
enter
or
xor
pop
insb
mov
orl
push
mov
or
pop
aas
pop
sub
ljmp
inc
leave
xchg
ja
je
inc
ja
movsl
adc
pop
pop
push
jge,pn
sti
fdivrl
fwait
or
nop
fsub
jmp
clc
xor
sahf
pop
add
pop
int3
aaa
xchg
push
pop
ficomps
sub
inc
cs
scas
pop
cmpb
icebp
outsl
pop
lahf
xchg
or
enter
test
mov
mov
inc
lea
arpl
cwtl
or
addb
cmp
je
popa
jae
fcomps
imul
dec
push
cwtl
push
sub
repz
mov
pop
xlat
stos
push
sub
lea
divb
mov
sbb
pop
jb
loope
pop
push
or
stos
add
les
lret
iret
inc
outsb
cli
dec
fisttpll
or
sbb
fwait
jg
lods
cmp
dec
sbb
cmp
inc
dec
pop
out
add
push
mov
inc
dec
jle
loopne
negb
jnp
sbb
dec
xor
in
pop
loope
mov
xor
xor
dec
out
sub
in
stos
nop
pusha
xor
fimuls
cmpps
mov
pop
jge
push
dec
push
les
getsec
and
decb
xchg
mov
sub
mov
lret
popa
push
pop
ds
jle
pop
xlat
jbe
sbb
or
pop
fmull
sub
sbbl
sbb
sub
jmp
loope
mov
inc
pop
jmp
popa
aad
or
ficomps
cmp
cwtl
mov
jmp
or
repnz
mov
jno
repz
pusha
jmp
mull
xor
into
and
adc
dec
test
mov
inc
mov
dec
sub
inc
mov
dec
pop
pop
orb
fs
daa
push
lahf
mov
dec
stc
adc
pop
jp
mov
loopne
jl
repz
push
add
sub
xchg
pop
and
aaa
lret
ret
push
push
xor
xchg
mov
sub
xor
lock
lcall
cmpsb
sbb
jmp
adc
sahf
scas
sub
ret
clc
sub
and
or
xor
mov
inc
lahf
add
loop
xchg
cwtl
jae
fs
add
sub
mov
xchg
ljmp
mov
lahf
pop
dec
je
xor
pop
leave
mov
or
and
mov
jle
xlat
jmp
jg
add
pop
mov
repz
jmp
mov
ret
faddp
or
insl
subl
ret
push
add
movsl
movsl
aas
pushf
pop
je
jnp
fstpt
pop
aad
ret
dec
scas
xor
mov
dec
dec
scas
lock
int3
mov
cmp
sbb
sub
in
push
pop
mov
cld
jle
sub
cmpsb
mov
gs
add
sbb
mov
sub
repnz
repz
out
add
loop
fnstcw
xchg
push
cmp
or
jne
sub
lcall
xor
incb
sbb
add
pop
in
cmp
imul
movsb
push
daa
bound
nop
xor
inc
int3
ror
push
outsl
and
les
mov
mov
xor
pop
pop
jo
mov
cmc
enter
dec
movsl
jnp
jp
add
jbe
dec
dec
inc
rclb
pop
aad
aam
mov
std
int
cmp
in
int3
xchg
dec
add
pop
inc
insb
lock
mov
jbe
push
mov
bound
add
inc
fwait
mov
add
imul
mov
shlb
inc
icebp
shlb
jnp
clc
fcoml
fs
popf
bound
cmp
sbb
popa
cmp
std
lock
xchg
orl
mov
sbb
stos
lea
das
sbb
scas
loope
repz
xchg
mov
aad
js
fs
mov
jg
push
pop
int
nop
sub
mov
fmul
fcomps
sub
cmp
repz
pop
out
lret
in
xchg
sbb
and
jb
dec
test
je
je
or
and
mov
push
push
sub
lds
adc
and
cmp
inc
xchg
bound
daa
js
sbb
icebp
push
sub
push
xchg
or
cmpsb
or
data16
pop
xorb
add
cmpb
xchg
or
out
jle
inc
pop
dec
dec
dec
push
sbb
sub
dec
xchg
test
lahf
out
xchg
mov
jmp
mov
xor
dec
or
xchg
movsb
lcall
lret
mov
mov
cmp
cmp
dec
push
stos
stc
and
xor
pusha
sub
into
pushf
lock
push
inc
xor
cmpb
and
push
test
jp
ja
add
jecxz
shll
xchg
sbb
or
stc
mov
cmc
mov
stc
sbb
mov
sti
xchg
ret
mov
add
or
push
cmp
stc
mov
mov
jl
leave
stos
inc
push
cmp
mov
aas
mov
mov
add
push
insb
movsl
xchg
mov
jno
in
stc
popa
push
add
lret
jbe
mov
mov
xchg
ljmp
rolb
sub
mov
ds
stc
inc
orl
pop
arpl
dec
inc
lock
stos
add
inc
scas
lret
cs
push
aad
outsl
cmpsb
jo
jp
push
les
and
icebp
jnp
dec
pusha
shlb
pop
sbb
loopne
push
mov
out
ljmp
scas
pop
dec
stc
pop
pop
push
out
sbb
pop
push
jmp
push
enter
inc
mov
dec
jge
xchg
lret
inc
add
dec
int
pop
dec
cmp
ljmp
inc
xchg
mov
psubd
in
pop
mov
dec
cmpsw
call
xchg
nop
and
jmp
jo
xchg
int3
mov
pusha
movsl
fwait
cmp
mov
les
xchg
mov
fdivrs
inc
in
in
push
inc
mov
pusha
mov
mov
push
add
and
xchg
jbe
add
pop
enter
adc
mov
adc
jecxz
inc
mov
mov
inc
mov
scas
daa
inc
movsb
flds
xchg
stos
add
iret
popa
lods
ficompl
rclb
push
and
dec
lret
mov
cs
call
jae
int
mov
fistpl
mov
cs
xchg
shl
pop
addl
inc
imul
sub
lahf
or
or
sbb
loopne
insl
xor
rcll
add
cmp
add
out
xor
ja
js
adc
xchg
inc
enter
xchg
mov
inc
xchg
stc
inc
outsl
inc
sub
inc
pop
and
inc
cli
pop
push
insb
mov
in
pop
mov
cmpsb
fisubrl
jne
iret
sub
dec
dec
jp
scas
mov
jmp
call
lods
jnp
dec
jae
sbb
cmc
stos
lret
mov
xorb
adc
inc
test
sbb
ljmp
stos
push
jg
lcall
pop
adc
jg
mov
push
push
or
ret
out
add
jg
into
subb
xor
flds
fidivrl
ds
fninit
mov
adc
insl
js
sub
addl
fcomi
push
jae
pusha
jmp
jnp
xchg
mov
xor
lahf
xlat
pop
call
inc
pop
dec
loopne
test
inc
push
int3
mov
test
aaa
dec
jbe
adc
or
inc
adc
mov
and
andl
and
adc
cld
or
sbb
jne
popf
push
pop
adc
dec
jp
inc
jmp
inc
aaa
movsb
mov
mov
mov
repz
cmp
xlat
sub
pop
inc
push
mov
pop
mov
call
sbb
fmulp
or
or
insb
adc
pusha
nop
xor
xchg
lods
sbb
outsl
fisubrs
nop
in
mov
add
jle
and
sbb
jbe
sbb
or
adc
dec
cli
push
fldenv
mov
iret
clc
rcl
push
divb
mov
addr16
adc
cs
lea
int
clc
ret
jg
mov
pop
pop
pop
scas
dec
das
cltd
std
push
dec
rcrl
or
ret
ret
sbb
and
and
pusha
pop
mov
gs
into
in
mov
inc
fcomp
cmp
lret
iret
in
xlat
cmovbe
pusha
out
sub
mov
adc
scas
pop
sbb
xor
xor
xchg
dec
jae
lretw
mov
loope
rorb
movsl
cs
cli
mov
jmp
mov
add
cli
sbb
inc
test
popa
js
jns
cmp
push
repnz
daa
push
mov
xor
rcrb
fistl
xorb
pusha
jge
addl
insb
jmp
jg
pop
mov
mov
or
push
ss
push
add
movsb
leave
pop
inc
insl
pop
cmp
in
insb
adc
xchg
jo
sub
imul
cwtl
test
fwait
or
inc
mov
jmp
mov
or
xlat
jmp
lods
leave
gs
pop
mov
out
jnp
adc
lret
inc
adc
jb
or
push
xchg
ror
cmp
inc
js
rcrl
mov
imul
jp
scas
xor
and
mov
mov
sub
pop
cmp
jne,pn
sbb
lods
repz
stos
mov
mov
xor
fadd
add
push
mov
push
xor
inc
aaa
movsb
inc
nop
pusha
jecxz
in
push
punpckhbw
jno
cwtl
int3
mov
cmp
or
movsl
ljmp
add
mov
jns
int
jb
filds
ret
adc
in
mov
push
jns
pop
mov
outsb
sbb
iret
mov
sub
adc
and
push
sbb
or
or
and
inc
ficomps
test
and
push
cmpsb
addr16
push
mov
cmp
jbe
cmp
inc
stos
hlt
int
jg
sub
roll
popa
repnz
xchg
cld
pop
or
scas
mov
mov
scas
pop
xlat
dec
call
les
inc
out
cwtl
nop
fwait
dec
adc
scas
cmpb
clc
cli
inc
push
loop
jbe
movb
data16
out
and
test
mov
push
mov
aam
and
mov
pop
ja
cmpl
gs
inc
jp
push
cmp
dec
mov
mov
jmp
insb
sub
sub
std
dec
pop
cmc
ret
push
jecxz
or
push
and
int
sbb
icebp
mov
cmpsb
xor
loope
jne
mov
xchg
inc
arpl
imul
nop
cmp
sbb
sub
add
inc
outsb
enter
push
adc
lret
add
jo
adc
cmp
cwtl
negb
call
mov
cmpsb
mov
pop
sbb
pop
cmp
outsl
imul
jg
sbb
push
inc
arpl
lret
aas
mov
add
neg
xchg
cmp
enter
pop
mov
nop
mov
sub
inc
mov
push
mov
add
mov
shlb
iret
js
lret
dec
cli
push
dec
aam
xchg
add
push
icebp
push
pop
mov
hlt
mov
addl
loop
dec
jns
jecxz
mov
inc
jbe
and
mov
lahf
into
test
add
dec
mov
pop
ret
push
pop
jnp
inc
pop
fidivs
mov
stos
push
pop
xor
sbb
add
xchg
push
sar
ja
out
jnp
cwtl
dec
ficompl
mov
in
lret
dec
movsl
cmpl
adc
rclb
jg
pop
pop
inc
pop
pushf
mov
adc
dec
lahf
adc
pop
aam
xchg
or
add
fcomps
mov
lea
push
dec
and
push
mov
and
push
test
fisubs
lds
ja
pop
lret
sbb
shl
xchg
xor
sub
jnp,pn
sarb
mov
add
inc
cli
sub
fucomp
mov
cmp
es
sbb
xchg
js
cmp
test
cmpsl
and
sti
and
sub
pop
push
fidivs
push
ja
jae
std
daa
adc
cltd
mov
in
mov
aam
shrb
and
cmp
mov
arpl
cmpsl
test
inc
mov
pop
fisttpl
in
add
push
push
test
cmpsb
or
stos
in
add
dec
xchg
xor
out
pop
lea
add
dec
addr16
dec
xlat
jmp
cltd
mov
clc
xlat
xchg
and
popf
mov
dec
and
xchg
cs
mov
shll
adc
daa
aas
decl
in
and
jecxz
int3
inc
inc
inc
dec
es
sbb
add
xor
mov
cld
movsl
mov
xorb
and
subb
cmp
sbb
push
dec
dec
fs
adc
pop
or
andb
pop
cmp
dec
dec
pop
gs
mov
bound
clc
adc
mov
js
cmp
int
inc
dec
dec
rcrl
inc
xchg
mov
lret
and
or
mov
add
sub
dec
popa
arpl
mov
fstps
and
dec
jecxz
sub
rclb
scas
mov
call
dec
imul
cmpb
dec
fcompl
xchg
ret
decb
xchg
adc
jecxz
add
ljmp
sti
movups
pop
fistps
xor
test
inc
fwait
shrb
iret
daa
loop
cmp
rcrl
jb
loope
stc
sbb
cmp
xor
movsl
fiadds
cmp
stos
jne
or
pop
in
and
mov
sub
lea
mov
push
or
ss
repz
jmp
add
pop
adc
add
sub
fimull
ficoml
sbb
outsl
leave
inc
loop
and
jg
cmp
add
mov
hlt
outsb
or
stos
out
jecxz
xchg
pop
mov
addr16
gs
push
push
sub
inc
mov
ljmp
mov
xor
sub
fstpt
shrl
dec
adc
js
movsl
jno
pusha
cmc
xor
fisttpl
loop
imul
mov
and
cs
add
jae
mulb
in
sub
imul
sbb
inc
or
xor
fisttps
aam
sbbb
pushw
xor
or
or
jne
ret
pop
mov
mov
jns
xchg
fnstenv
daa
jmp
xchg
pushl
and
ret
lods
mov
mov
clc
mov
stos
les
xchg
pop
scas
and
mov
shrb
xchg
sarl
lock
lds
pop
inc
dec
mov
cs
dec
imul
insb
jne
icebp
out
pusha
mov
or
jecxz
cs
out
divb
jo
sbb
repz
ret
repnz
fnstenv
jmp
dec
or
lret
arpl
jmp
jno
xchg
jg
int3
xor
icebp
jmp
jp
imul
mov
push
add
jb
scas
negl
insb
sub
mov
jo
clc
add
mov
lock
cmc
adc
outsb
mov
pop
pop
mov
or
sub
cmp
out
cmp
ja
movsb
mov
adc
insl
xchg
dec
sub
daa
pop
cmp
xor
xchg
scas
mov
int3
mov
xchg
xlat
xchg
sahf
dec
mov
adc
ret
mov
sub
shl
pop
cmp
scas
jb
push
out
loope
mov
or
adc
xor
mov
adc
xor
sbb
jne
pusha
mov
dec
jbe
in
inc
adc
push
mov
shll
sbb
test
jg
movsl
cmc
add
andb
lea
daa
icebp
stos
push
movsl
test
push
mov
insb
mov
or
or
mov
scas
pop
mov
add
cmpl
mov
lods
repz
add
jecxz
mov
xor
in
pushf
rolb
shll
das
jns
ja
push
and
cmpsl
ja
cmp
movsl
in
fsubl
and
out
jnp
lock
dec
js
xchg
mov
das
aaa
js
push
jle
cmp
dec
mov
xchg
in
and
or
xor
inc
das
mov
lods
push
push
pop
hlt
popa
xchg
dec
jmp
sbb
sub
dec
aas
mov
cmp
mov
xlat
and
xor
fwait
leave
lds
add
ret
loope
pop
mov
icebp
cmc
rorl
cmp
mov
popf
call
mov
xor
cli
aaa
data16
bts
cmp
jmp
inc
iret
ss
vpcmpgtw
mov
dec
pop
and
cld
sbb
sub
pop
stc
lods
int3
iret
pop
stc
bound
inc
daa
lret
mov
loopne
scas
adc
out
inc
mov
insb
push
in
sbb
ror
push
or
jne
jge
and
cmp
out
stc
pop
fidivs
mov
lods
dec
xchg
cmpsb
iret
int3
out
js
imul
or
cmpsl
lds
fidivrs
loop
mov
or
pop
sub
pushf
dec
push
cmp
pop
push
mov
push
and
adc
adc
fstpl
cld
xor
jg
stos
cld
xchg
adc
jmp
loopne
stos
and
ror
gs
fs
sub
inc
fidivs
add
cs
lea
cmpsb
pusha
sbb
push
dec
sbb
gs
xchg
subb
mov
lods
inc
clc
inc
and
inc
pusha
xlat
push
sub
fiadds
pop
cld
pop
lock
fwait
cmpsl
mov
adcb
adc
xor
nop
out
mov
int
addb
out
int
lret
je
aas
dec
push
inc
mov
daa
stc
les
jne
lods
lahf
out
dec
jo
sbb
enter
mov
inc
push
leave
mov
stos
out
push
cmp
mov
xchg
jmp
outsl
cmp
fs
cmc
jo
xchg
fistps
lret
mov
ror
dec
outsb
repz
add
pop
jne
out
addl
jg
subl
xchg
shll
inc
neg
dec
push
cmp
clc
addr16
into
inc
cmc
jmp
pusha
push
sbb
cmp
sbb
and
xor
mov
mov
inc
push
fcmovu
iret
popa
out
mov
xor
loop
leavew
inc
add
adc
aam
fists
jb
ds
sti
int
adc
sub
int3
push
imul
xchg
sarb
xchg
sbb
mov
jo
mov
jno
insb
pop
mov
in
scas
out
aam
jno
pop
hlt
dec
inc
and
adc
shrb
pop
dec
int
push
pusha
push
hlt
and
push
sub
test
mov
repnz
sti
mov
cmpsb
pop
xchg
leave
adc
cmp
pop
mov
insb
xlat
rclb
lea
inc
or
imul
jno
and
ljmp
hlt
lock
std
aam
dec
and
sbb
mov
sub
pop
xlat
aas
jb
inc
cmp
popf
sub
jmp
xlat
dec
lods
jne
sbb
pusha
pop
add
loopne
pop
or
into
pop
sub
dec
lea
mov
pop
pop
add
lea
lock
mov
cmp
add
sbb
pusha
nop
into
and
adc
and
cmc
push
ljmp
dec
pop
decl
push
stc
dec
shlb
dec
inc
inc
cs
push
xor
enter
mov
shlb
pop
lods
mulb
imul
nop
sbbl
aas
sub
fwait
push
push
push
or
mov
mov
sarb
sub
mov
nop
rcrb
jge
sbb
mov
jo
xorb
repz
xlat
leave
dec
inc
daa
fildl
pop
cli
jae
popa
dec
and
inc
xchg
jg
jge
push
fsubl
cli
cmp
rolb
mov
fcomp
mov
stc
shrb
pop
mov
cmp
jae
loopne
iret
mov
lea
xchg
pop
cmpsl
push
xor
stc
jo
insb
jnp
adc
lea
inc
data16
popw
jp
jmp
dec
and
sar
xchg
sbb
xchg
in
js
ffree
jo
clc
xlat
jae
or
adc
push
inc
cwtl
lds
push
test
sbb
pop
push
je
jno
sub
push
add
push
fildll
in
insb
hlt
jp
insl
cltd
enter
mov
sahf
and
cmp
lahf
aas
nop
and
cld
adc
js
scas
pop
or
int
inc
jg
scas
jmp
rol
pop
xchg
mov
outsb
mov
dec
mov
push
xchg
inc
dec
or
mov
stos
cmc
jno
in
jne
xchg
push
aas
xchg
pop
ret
xchg
pop
cmc
xchg
push
cmp
pop
xor
dec
and
xchg
mov
jae
sbb
or
sbb
pusha
dec
stc
fbld
xor
inc
cs
sbb
mov
out
jae
or
push
add
xchg
cmpsb
pusha
mov
mov
mov
mov
pop
push
pop
int3
roll
sub
dec
fwait
mov
inc
std
insl
mov
or
imul
lcall
jecxz
popf
xchg
into
lret
lret
into
cmp
pop
or
test
adc
cmp
sbb
mov
stos
push
lcall
leave
cld
ret
inc
sbb
pop
lcall
jmp
insb
pop
jno
adc
je
add
lock
sub
hlt
stos
mov
push
data16
stos
leave
mov
mulb
mov
add
movsl
fildll
and
dec
movsl
insl
popa
adc
shlb
jae
push
mov
inc
and
push
xchg
and
insb
std
or
cmc
fcompl
repz
int
fisubrs
xlat
repz
or
cmp
and
sarb
fcoms
pusha
adc
dec
push
cmc
nop/reserved
fsubrl
pop
sub
loope
dec
mov
sbb
jne
add
shr
pop
aas
jno
repz
mov
xor
inc
jle
les
nop
sub
cs
mov
fcmovu
dec
popa
pushf
repz
adc
mov
data16
rorb
lods
xchg
addr16
push
dec
or
packssdw
cwtl
push
dec
lret
flds
fisubrl
mov
ds
pop
gs
cmp
in
js
call
leave
adc
dec
cmpsl
ret
and
hlt
pop
mov
js
sbb
imul
and
loop
push
fs
jns
jns
xchg
jnp
push
mov
cmp
jecxz
fdivs
pusha
jae
inc
rorl
dec
push
pop
incb
mov
stos
inc
sbb
jl
jge
nop
mov
popa
xchg
xchg
fs
mov
repnz
test
or
push
out
aas
jne
push
lock
mov
jo
repnz
and
jo,pt
mov
test
pop
lahf
cmpl
mov
push
lcall
aas
test
or
insl
xchg
xchg
add
mov
inc
xchg
sub
imul
cmpsb
insb
ds
adc
out
or
imul
repnz
cs
mov
lcall
pusha
or
xchg
fdecstp
test
popf
mov
or
push
data16
mov
rorb
or
loopne
jne
sbb
insl
or
popa
cmp
push
clc
mov
xor
pop
int3
call
lea
movsl
mov
and
cmp
lret
fdivs
jae
mov
or
xor
in
std
subl
fadd
mov
pop
jbe
leave
sub
push
adc
pop
sbb
iret
repnz
jecxz
stos
adc
xchg
and
lods
jg
lods
ret
pop
jae
scas
pop
push
dec
mov
cmp
cwtl
inc
adc
roll
stos
adc
and
cmp
popa
xchg
mov
jmp
jl
icebp
dec
lcall
mov
adcb
mov
inc
pop
cmc
mov
inc
iret
jne
cs
inc
shrl
cmpsl
mov
jg
notb
jae
pop
dec
mov
call
xchg
adc
stos
mov
jmp
call
jne
cmp
mov
mov
cmp
dec
dec
imul
xchg
adc
mov
cmp
cmp
sub
mov
cmp
add
push
push
test
push
pop
sahf
mov
fdivr
push
push
int
rorl
xor
push
add
push
push
sub
jno
into
add
call
mov
out
imul
mov
leave
aas
xor
push
pop
jnp
aam
enter
rcll
xchg
sub
xor
fnstenv
and
jno
push
add
lock
xor
scas
jge
cmp
aad
sarb
movsl
mov
xor
inc
inc
mov
jae
mov
cmp
jno
scas
inc
xchg
inc
js
lock
shr
sbb
or
and
dec
cmpsb
pusha
or
pusha
insb
xchg
cmc
mov
and
jnp
jae
adc
inc
sbb
or
loop
mulb
sub
lods
arpl
and
ds
xlat
pop
or
mov
xor
hlt
mov
cld
mov
pop
dec
xchg
insb
dec
mov
sub
xchg
les
or
cs
jg
mov
mov
aas
push
enter
add
or
sbb
dec
mov
enter
dec
or
adc
add
loope
pop
sbb
inc
scas
dec
ljmp
jl
lret
insl
gs
adc
in
icebp
push
inc
adc
cmc
lds
andl
sbb
add
dec
pop
jne
jnp
jmp
sub
lds
inc
outsl
xchg
mov
int3
sbb
add
or
fcomps
pop
pop
cmc
sub
stc
ret
ret
fiadds
cmp
aad
mov
and
pop
and
cmpsb
mov
arpl
leave
jg
inc
aad
sbb
fistpll
pop
dec
inc
lods
sub
or
mov
js
fbld
dec
or
push
inc
dec
stos
roll
cli
pop
outsb
gs
mov
xorb
xchg
shl
pop
ret
mov
jecxz
inc
pusha
cmp
out
movsl
inc
lahf
push
add
jbe
mov
movlhps
fbstp
pop
cmp
and
xor
or
and
bound
push
dec
icebp
cmp
pop
rolb
les
sub
inc
shl
xchg
xchg
xchg
cmc
hlt
mov
lds
loope
int
and
jo
adc
imul
or
dec
out
cmp
pop
xchg
mov
push
gs
cld
jbe
add
pop
fisubrs
lret
mov
sbb
cmp
sub
adcb
loopne
cmp
fnstenv
pop
sub
incl
sarb
movsl
jge
int3
roll
scas
pop
lcall
mov
aas
sbb
jnp
je
loope
push
xchg
addb
ret
inc
inc
out
das
js
add
jb
loopne
loop
and
xorl
cmp
adc
lahf
loope
and
inc
stos
lret
movsl
jns,pn
stos
movsl
dec
jne
mov
mov
popa
je
imul
jae
jo
xchg
mov
dec
mov
pop
pop
cmp
push
std
adc
inc
xlat
mov
loope
jnp
add
adc
not
and
add
mov
aas
es
or
ljmp
movsl
xlat
inc
jl
add
dec
add
inc
iret
dec
jae
and
mov
fstl
sbb
mov
stos
mov
call
inc
loope
sub
pop
mov
jmp
add
test
inc
aas
inc
roll
mov
or
and
rorl
or
adc
sub
dec
dec
and
mov
jecxz
dec
call
enter
push
xor
dec
lahf
jl,pn
mov
xchg
mov
fisttps
popf
jg
cli
or
mov
jmp
scas
sbb
roll
decl
mov
cmp
add
stos
cmp
fcoml
insb
data16
dec
cmpsb
mov
sbb
lods
repnz
xchg
inc
dec
fiadds
xor
pop
das
sti
jg
sbb
add
lret
pop
cs
fimull
add
icebp
pop
lret
push
pop
out
dec
cmpsb
clc
dec
in
repnz
scas
jne
fs
and
push
repnz
mov
loope
xor
arpl
cmp
add
mov
sub
sbb
xchg
push
jno
pop
push
sbb
shrb
out
sbb
xchg
imul
cwtl
dec
dec
add
dec
sahf
ljmp
repz
hlt
adc
ret
push
scas
dec
adc
add
add
je
sub
mov
out
fcom
lret
stos
mov
stc
lret
imulb
mov
iret
cmp
repz
or
pop
cli
jg
cmpsb
pop
mov
pop
lret
outsb
xlat
jae
xchg
in
dec
inc
test
pusha
xchg
pop
and
scas
push
xor
mov
pop
dec
cs
inc
add
mov
mov
cmp
paddsw
je
mov
xlat
xchg
sbb
jo
inc
rcl
add
pushf
inc
mov
add
mov
scas
add
daa
popf
jmp
cmp
mov
jne
in
arpl
inc
jl
mov
stc
jp
pop
mov
and
adc
pushw
mov
jns
mov
mov
iret
sub
inc
push
repz
mov
shrl
dec
jecxz
lahf
lock
divb
sub
out
insb
or
push
cmc
and
je
inc
adc
aas
mov
fimuls
sub
into
dec
xor
sahf
ret
das
nop
pop
jb
ds
jg
xor
jl
pop
mov
xchg
lret
xor
adcb
push
adc
push
lods
stos
in
xor
jge
mov
shl
gs
in
stos
nop
and
sbb
call
stos
int3
sub
popf
in
add
test
cmp
mov
mov
aam
das
xchg
sub
loop
add
mov
ss
dec
xchg
aaa
mov
cltd
int3
lret
scas
or
jl
pop
divb
push
shr
fwait
outsb
pop
mov
adcl
mov
aas
cmp
pop
rcll
xor
test
dec
scas
mov
add
out
in
add
lds
jmp
push
mov
stos
andb
mov
jecxz
mov
dec
ja
sub
mov
mov
xor
adc
sbb
jl
mov
cs
in
mov
cli
data16
divl
add
sub
add
rol
sbb
jmp
xchg
xchg
icebp
ljmp
adc
cmp
lret
mov
pop
stc
in
mov
rolb
push
mull
xchg
clc
fnsave
sbb
jno
mov
sar
pusha
cmp
cmp
cmp
out
shl
fwait
loop
adc
adc
jp
pop
push
rol
imul
repz
leave
sub
mov
push
pop
xor
and
dec
push
je
cmp
std
lea
mov
enter
xchg
popa
adc
rcrb
or
hlt
add
xor
inc
repnz
pop
imul
lods
clc
inc
or
pop
out
adc
pop
clc
inc
mov
jo
dec
out
stos
sub
imul
pop
lea
dec
mov
out
xchg
dec
xchg
cmp
in
xchg
inc
add
lret
mov
mov
xchg
repnz
ljmp
dec
or
pop
pop
dec
and
out
push
and
jno
and
fldl
lods
xlat
loope
and
jle
cmpsl
mov
int
jo
xor
xchg
xchg
dec
add
lahf
fsubrs
pop
insb
adc
stos
pop
sub
add
or
lea
cs
js
pop
test
sbb
jnp
js
xchg
scas
fistpl
cwtl
lea
lret
lods
add
fiaddl
lea
pop
pop
aam
xchg
rcl
bound
test
frstor
add
call
fwait
loope
insl
push
adcb
and
sub
inc
pushf
pop
jae
stos
pop
shlb
fidivl
push
push
lret
ret
inc
outsl
lret
addr16
sub
push
adc
pop
shll
aam
in
sbb
mov
into
adc
outsl
imul
pop
push
mov
outsb
sub
add
xor
gs
adc
adc
cmp
xor
sti
pop
fcomip
roll
pop
idivl
jnp
repz
mov
lret
negl
xchg
rcrl
test
adc
movsb
or
xor
dec
hlt
mov
jp
jae
cmp
push
dec
add
inc
pop
in
iret
mulb
pop
and
xchg
loope
pusha
imul
mov
gs
stos
cmp
mov
push
mov
mov
or
sub
loope
sbbl
cmp
out
orb
mov
jge
and
add
js
hlt
stos
adc
and
jno
lds
ss
std
mov
in
xor
repnz
negb
push
aaa
xor
mov
sti
jne
jle
and
jo
fldl
test
icebp
xlat
adc
mov
pop
out
push
out
add
sub
lea
or
and
mov
cmp
cmpsb
popf
cmpsb
inc
jmp
cmp
xchg
int3
xchg
cs
shl
mov
sbb
and
icebp
loopne
or
loop
mov
movsl
pop
inc
mov
in
jmp
sub
adc
push
enter
mov
cmp
adc
sbb
popf
cmp
jmp
push
dec
les
mov
dec
and
std
outsb
pop
inc
repz
fwait
and
jno
mov
inc
pop
leave
pop
lahf
xchg
pusha
mov
or
mov
insl
aaa
push
arpl
addr16
xchg
sahf
push
daa
push
pop
int3
pop
cmpsb
fnstcw
mov
call
aam
pop
ss
jb
scas
les
or
gs
sbb
stos
in
mov
das
nop
cmp
pop
cmp
xchg
lret
jbe
jnp
stos
push
cmp
outsl
or
push
jle
or
out
shlb
dec
mov
repz
mov
inc
jae
hlt
push
pop
mov
scas
add
sarl
push
mov
stos
rolb
xor
adc
pop
mov
movsl
pop
je
loopne
push
dec
test
dec
cmp
xchg
data16
xchg
outsl
cmp
call
cmpsb
mov
cmp
pusha
pop
add
mov
cmp
cmpsb
cltd
gs
adc
inc
inc
jl
add
xor
mov
xor
push
out
scas
inc
mov
or
mov
leave
out
dec
sbb
aaa
out
pop
gs
fiaddl
ret
mov
pop
jecxz
mov
mov
imul
in
lret
mov
mov
filds
cmp
es
cmp
xor
sbb
push
mov
push
fdivrp
lea
out
and
sub
mov
aas
push
inc
or
jle
and
adcl
out
jae
test
in
add
jmp
jge
mov
daa
out
arpl
dec
mov
hlt
ja
mov
jp
mov
mov
leave
ds
test
mov
fptan
mov
into
insl
inc
xchg
and
dec
mov
xor
or
arpl
push
in
jo
aam
lret
add
inc
rolb
js
pop
in
adc
push
dec
iret
dec
fldt
movsb
cmp
js
pop
sub
xor
jg
mov
and
pop
xchg
orb
add
mov
aaa
dec
shlb
mov
shlb
sub
pop
leave
sbb
or
andl
fisttpl
pop
outsb
ja
push
subl
into
inc
inc
push
decl
stc
enter
push
fstpl
data16
and
cmp
es
test
pop
jne
cwtl
xor
lret
mov
or
dec
cmp
fwait
out
bound
pop
push
in
movsl
dec
stos
xchg
and
js
jmp
mov
cmpsb
lods
pusha
dec
pushf
push
cmp
inc
dec
mov
mov
xchg
rorb
sahf
inc
mov
and
dec
add
mov
popa
iret
push
mov
mov
jmp
mov
bound
lods
mov
or
outsl
push
inc
inc
dec
adc
dec
divl
mov
retw
ficoml
ret
pop
sbb
stc
or
inc
lea
xchg
pop
std
dec
pop
jecxz
mov
shll
insb
repnz
ficompl
gs
imul
push
ja
or
xchg
insl
mov
imul
ds
mov
idivl
xor
xchg
jne
fsubr
mov
shrb
pop
jp
adc
push
adc
pop
mov
mov
data16
addb
or
dec
inc
pop
sbb
adc
enter
data16
adc
xor
jns
lock
xlat
ja
cmp
test
ja
ret
pop
stos
jae
pop
mov
fstpl
xchg
mov
pushl
push
lods
fiaddl
xchg
push
pop
push
or
inc
and
stc
dec
jl
das
mov
lcall
fnstenv
mov
lea
xlat
pop
cmp
mov
sbb
inc
popf
jg
jg
push
sbb
fs
ret
adcl
rclb
add
daa
ja
sub
inc
cmpsb
push
shlb
into
loopne
cmp
orb
or
movsb
test
xchg
out
jmp
mov
bound
rcrb
nop
shrl
aad
icebp
ror
add
pop
arpl
cmpsl
int3
cmp
mov
dec
insb
inc
sub
lods
mov
scas
mov
dec
jo
xor
in
les
jmp
mov
lahf
mov
sbb
cwtl
icebp
popa
jl
or
repz
jecxz
dec
iret
pushf
loop
mov
fnclex
and
gs
mov
pop
pop
movsl
jo
push
pop
xor
adc
mov
cs
add
xor
push
push
stos
adc
div
mov
mov
push
sub
inc
adc
and
push
mov
fcomps
mov
loop
fwait
aas
dec
in
jae
imul
dec
xchg
jne
pop
loope
pop
stos
pop
or
pop
js
push
je
or
rcll
add
dec
mov
lret
cmpsb
and
rcll
ret
xchg
mov
cs
sub
frstor
jne
sbb
lahf
sahf
push
jmp
sub
mov
pop
adc
push
shlb
lods
and
push
mov
jmp
cmp
mov
push
xlat
inc
insl
je
call
sbb
and
sub
cld
imul
pop
jge
dec
call
cs
xor
xlat
and
or
cs
push
js
addb
and
cltd
push
fstpl
xor
dec
stos
sub
testb
mov
xor
mov
add
rcr
jae
mov
mov
repz
sub
inc
dec
xor
imul
push
sub
or
and
gs
pop
ret
fidivs
movsb
dec
adc
int3
mov
adc
ljmp
pop
mov
sarl
jne
loopne
push
scas
jmpw
in
and
movsl
in
sbb
imul
mov
rclb
inc
aad
lds
aas
ret
fsubrl
ja
cltd
into
pop
lea
test
lods
gs
das
xor
out
jge
bound
add
je
nop
divl
lea
out
adc
lods
mov
jmp
dec
cmpsl
jns
popf
movsb
gs
sti
push
push
mov
jmp
ljmp
inc
mov
jl
loopne
cmp
sub
popf
cmp
xor
aaa
xchg
pop
into
push
xor
push
lret
nop
enter
inc
sub
inc
lds
pop
sub
sbb
gs
fists
mov
ss
js
xor
lcall
or
jg
sarl
shrb
cmp
xchg
pop
pop
mov
lods
aad
pop
jl
cmp
dec
es
ret
and
xchg
cwtl
lret
mov
repz
sub
push
jnp
pop
lods
pop
cmp
in
lea
cs
and
sub
fwait
push
aam
push
or
xlat
out
in
aas
lcall
push
sub
cmp
sub
push
daa
add
xor
push
sbb
or
lahf
loop,pn
push
cmp
out
je
je
xor
popl
push
inc
xchg
ret
add
sbb
in
cmp
call
xor
cli
mov
addr16
icebp
jge
aas
jge
int
shll
push
lcall
lahf
lods
xchg
in
repz
nop
lds
jno
flds
adc
xor
xor
in
cmpsb
add
decb
pop
mov
adc
and
popf
rolb
ficoml
sub
sub
popa
aad
fsubs
lds
inc
pop
imul
sbb
add
shlb
nop
sbb
cmc
test
push
jae
jmp
sarb
and
rcll
cmp
jno
xchg
jg
jbe
sahf
jle
leave
pop
cmpsb
pop
shrb
aas
inc
pusha
leave
in
notl
fiaddl
bound
sti
lret
mov
dec
ss
stos
lea
lods
sti
mov
push
int3
sahf
fistpll
test
jae
int
ja
add
mov
ret
push
loop
pusha
pop
imul
arpl
adc
xor
cmp
imul
jg
aad
icebp
loope
sub
dec
mov
bound
jp
fildll
pop
fisubl
sbb
lahf
loope
pop
pop
les
orb
xchg
add
inc
cmp
ret
ds
add
xor
es
jecxz
ret
sub
cli
adc
fs
and
push
lret
in
cmpsl
pop
sbb
sbb
stc
mov
idivb
in
xor
cmpl
mov
fadds
inc
hlt
ret
inc
pop
sub
leave
cmp
adc
movsb
enter
ret
push
negb
jp
lahf
mov
cmp
xlat
push
cltd
scas
adc
inc
lods
and
out
lods
mov
pop
ret
add
pop
incb
push
fwait
mov
push
mov
mov
lahf
jmp
cmp
adcl
aam
bnd
lcall
das
gs
in
pop
mov
insb
jae
filds
and
lock
and
inc
jmp
shr
cs
cmp
sti
pop
movsl
int3
pop
add
movsb
aas
mov
repz
movsb
std
dec
inc
xchg
ret
mov
imul
fbstp
or
jae
clc
mov
and
lods
loopne
xor
cmp
xor
pusha
xchg
cli
pop
push
sub
fimull
repnz
fdivs
adc
sbb
mov
ret
cs
sbb
push
arpl
sub
pop
jmp
and
aam
fcoml
in
mov
pop
dec
mov
push
test
and
cmpsb
fnstcw
add
mov
sub
repnz
pop
mov
add
jbe
stos
je
scas
pop
adc
mov
outsl
dec
sbb
push
mov
pop
mov
frstor
iret
push
sbb
pusha
inc
push
mov
ja
test
dec
ficoms
jmp
aas
mov
pop
pop
mov
ret
jno
lret
lret
lcall
sub
sub
sbb
mov
sti
ret
popa
push
addb
adc
adc
push
cmpb
jecxz
stos
movsb
jecxz
shr
loop
popf
sti
out
fisttpl
push
pop
or
ret
scas
sbb
mov
xlat
ljmp
sub
lds
and
insl
and
dec
lcall
std
cli
pop
int
pop
xchg
jns
cmpsl
cmc
dec
or
inc
dec
push
dec
push
rorb
push
dec
mov
jl
push
adc
cld
ljmp
popf
daa
mov
mov
jl
adc
fisttpl
test
jmp
pop
cmp
repnz
and
out
cmovne
push
data16
sub
mov
dec
push
lock
cmpsb
stc
in
lods
in
out
mov
fisttpl
push
jmp
nop
in
lret
mov
cmpsl
push
pop
rolb
test
xor
sub
xchg
add
jge
jmp
call
jae
adc
add
sbb
insb
lret
add
arpl
call
leave
ret
jbe
push
pop
and
ja
add
repz
mov
inc
cmc
mov
pop
insb
inc
sbb
mov
add
mov
inc
mov
enter
add
shll
inc
jo
dec
loopne
and
pop
xchg
and
mov
dec
mov
lcall
out
popf
dec
pop
mov
mov
call
dec
dec
inc
fwait
hlt
insl
adcl
xlat
repz
insb
pop
and
je
fidivl
out
sub
icebp
sbb
adc
pop
or
sub
faddl
sub
pop
inc
cmp
std
mov
aas
sbb
push
das
out
dec
xchg
sbbb
sahf
stos
or
pop
jp
aas
xor
cmp
arpl
outsl
mov
push
mov
call
sub
loope
mov
dec
cmpsb
mov
cmp
add
fnsave
adc
cmp
add
push
pop
ret
repz
add
sub
cwtl
or
push
jg
xchg
stos
in
dec
dec
aam
data16
aad
jo
sbb
frstor
push
mov
pop
insb
inc
and
fcomps
rorl
fdivs
adc
adc
push
jmp
test
or
fcoml
rcrl
jecxz
pop
lock
and
pop
pop
pop
js
lcall
shrb
dec
orb
aas
xchg
push
xchg
push
mov
mov
lock
dec
cmp
xchg
inc
lret
aad
orl
xchg
jl
rorl
push
jae
test
inc
push
data16
xor
test
fs
push
mov
or
adc
jb
or
pop
mov
mov
push
les
pop
int3
negl
gs
push
daa
or
stos
fsts
and
jo
std
jg
int3
in
mov
mov
xor
in
and
pusha
cmp
mov
xchg
gs
sbb
mov
mov
sub
jo
aaa
pop
jg
es
outsl
ret
push
call
popf
add
lea
call
xchg
and
in
aam
lcall
movsb
or
jmp
mov
lret
sub
out
jg
or
mov
and
jae
sbb
aad
pop
push
or
pop
xchg
mov
subb
inc
outsb
int
inc
jp
pop
mov
loop
inc
pop
jne
push
lea
test
retw
or
test
and
leave
mov
inc
push
cs
into
in
jne
or
pop
adc
setb
jb
sub
enter
dec
aas
cs
fidivrs
sbb
repz
and
or
mull
lahf
sahf
pop
sub
lahf
xchg
std
push
dec
outsb
bound
pop
or
inc
jne
mov
enter
shr
inc
andl
mov
frstor
jo
jle
daa
scas
adc
jno
xchg
outsb
lock
lea
adc
mov
iret
sahf
jae
push
sbb
mov
in
xor
aas
pop
shll
lds
imul
lods
pand
das
out
rcl
mov
scas
ret
lret
fucomi
aas
pop
aad
test
jle
jge
in
ljmp
push
adc
pop
bound
lods
dec
sbb
inc
cmp
pop
repz
loope
mov
cmp
arpl
add
cli
js
jg
fcmove
mov
push
pop
arpl
xorb
pop
and
inc
fstps
xchg
stc
adc
add
jl
js
push
add
imul
jnp
cmc
pusha
sbb
add
push
out
and
sbb
mov
ss
mov
and
sub
ljmp
stc
lock
mov
pop
inc
std
stos
sbbb
repnz
pop
loop
inc
lods
mov
or
pop
sub
and
and
xor
dec
not
jmp
shlb
js
pushf
jg
add
xchg
xchg
lods
inc
adc
sub
clc
cltd
push
cmp
lds
dec
mov
les
in
xchg
scas
xor
aaa
cmp
mov
jp
jns
loop
lods
sub
fnstsw
inc
push
pop
daa
mov
or
xchg
imul
ret
call
das
dec
pop
ficoms
mov
jae
popf
sbb
inc
dec
add
shrb
jg
rdtsc
xor
cmpsb
mov
cmp
sar
mov
cmpsl
cmpsl
adc
sub
enter
or
fists
in
xor
les
pusha
popa
ror
lea
mov
addr16
decb
mov
or
pusha
mov
loope
adc
nop
push
flds
adc
xor
loope
xchg
fnstenv
dec
adc
sub
fwait
add
pusha
fsubrs
jae
mov
jne
outsl
inc
pop
outsl
or
lods
in
flds
fucomi
adc
les
enter
push
loope
cmovs
ds
mov
jecxz
mov
sub
jne
lcall
xor
mov
push
inc
test
int
adc
pusha
fisubs
imul
ret
pop
mov
push
sbb
rcrl
mov
test
sbb
mov
insl
or
inc
adc
enter
clc
int
outsl
add
pop
nop
sub
leave
dec
in
data16
icebp
and
cmp
ss
in
sub
xchg
and
popa
pop
push
inc
iret
cli
pop
xor
xlat
dec
int
lahf
das
and
ficoml
mov
mov
or
xor
aam
sub
jecxz
dec
test
push
fwait
or
sbb
pop
push
xor
and
pop
pop
mov
push
or
pop
dec
jb
push
cmp
je
jbe
or
pop
shl
mov
inc
inc
mov
jle
cwtl
inc
push
xor
popa
mov
es
sbb
mov
pushl
stos
dec
imul
cmpsb
push
repnz
push
bound
dec
adc
sub
fadds
cwtl
stos
cmp
sbb
jmp
add
jmp
es
jo
mov
adc
mov
gs
lock
dec
cmp
int
mov
int
xchg
repnz
adc
jae
mov
xlat
in
pop
xchg
sbb
inc
loop
clc
out
inc
xlat
mov
push
stos
dec
pop
imul
push
int3
cmpsl
sbb
sub
mov
ja
xchg
adc
sub
jmp
cmp
inc
cli
mov
cmp
les
ret
sub
cmp
xchg
repnz
dec
fadds
filds
inc
push
mov
pop
es
cwtl
pop
pop
gs
dec
lods
add
push
push
cld
mov
jmp
mov
cmc
fs
push
mov
jle
fists
dec
ds
rorb
loopne
xchg
jle
dec
push
rorl
sub
sub
out
mov
jno
or
ljmp
dec
sub
cmpsl
inc
mov
lds
inc
mov
push
jge
inc
mov
pop
cs
lret
mov
sbb
add
push
mov
pop
xchg
adc
pop
jae
leave
loopne
call
sahf
add
popf
sub
lods
mov
pop
inc
and
push
inc
jg
sbb
iret
clc
jno
add
xor
loope
sti
popa
cmc
cmpb
cmpsb
lods
dec
imul
push
add
scas
int
sub
dec
or
fsubrs
xor
jae
dec
mov
mov
cmpsb
and
dec
mov
js
cwtl
clc
ljmp
rol
jmp
lret
push
xchg
inc
gs
push
loopne
pop
sub
loop
outsl
cs
sbb
fstl
jae
fwait
sbb
into
pop
dec
iret
rclb
pop
xor
push
dec
fnsave
aad
mov
dec
clc
sahf
inc
imul
cmp
xor
xor
mov
std
sbb
ficompl
fmuls
sub
lret
lahf
jnp
pop
aas
cs
stc
repz
addr16
pop
fwait
pop
push
add
push
ds
push
loop
xor
dec
dec
out
pop
jecxz
and
cmp
stc
stc
mov
add
mov
mov
push
into
add
adcl
push
out
mov
arpl
stos
mov
dec
movsl
jae
into
push
cmp
mov
das
lock
js
cs
fistpll
xor
dec
push
popa
xchg
adc
sbb
mov
aas
adc
pushl
pushf
jmp
lretw
lea
data16
shr
pop
push
mov
aam
rol
dec
xchg
push
rep
xchg
push
lea
pop
mov
xchg
jbe
movsl
outsb
jge
subl
aaa
divl
and
mov
xor
sbb
cs
loope
inc
cmp
adc
dec
mov
das
pop
loopne
mov
xchg
inc
xchg
cs
mov
pop
inc
lea
iret
inc
insb
fbstp
dec
inc
cmpsl
sbb
aam
ffreep
imul
adc
push
cmp
adc
push
inc
into
insb
jb
pop
fs
add
rcrl
sub
xor
movsl
popf
add
sbb
lret
add
jae
jmp
push
and
aas
xchg
pop
stos
xchg
jnp
movsl
mov
fwait
or
jmp
les
arpl
orb
imul
sub
pop
add
add
mov
or
adc
or
and
dec
jo
test
mov
scas
pop
mov
mov
aas
push
add
ja
xchg
jmp
xchg
push
in
xlat
mov
jp
pop
rclb
js
sbb
xor
js
push
imul
aad
push
lret
subl
sub
icebp
outsl
adc
mov
dec
cmovb
cltd
sub
fnstcw
negl
add
lahf
mov
call
pop
push
xchg
xor
adc
fxch
push
addr16
xchg
push
jmp
fadds
xchg
add
int3
cltd
sbb
mov
test
gs
dec
insl
daa
loop
sbb
dec
inc
push
mov
movb
cmp
dec
pop
jae
gs
mov
aad
jbe
clc
cmp
ret
jg
add
xor
je
inc
mov
js
and
ret
rolb
lods
fisttps
xor
sub
dec
sub
pop
fnstcw
or
mov
fisttpl
ret
cld
inc
inc
mov
sbb
or
in
cs
jb
ja
rcll
xchg
adc
lret
cs
leave
xor
pop
push
jae
negb
stc
shll
cs
jmp
mov
filds
daa
sub
aas
and
pushf
pushf
sarl
pop
lret
pand
or
push
jle
sub
imul
dec
mov
loope
test
fisttpl
hlt
sbb
add
jne,pn
jno
cmpsb
dec
imul
and
adc
push
push
pop
ja
xor
arpl
addb
xchg
sbb
cs
sub
jno
push
nop
push
js
clc
inc
add
lock
xchg
jb
cs
inc
loopne
mov
stc
add
testb
out
insl
mov
or
ret
xor
ret
movl
lea
movsb
xchg
sbb
mov
sub
loope
mov
int3
or
jp
or
fsubp
int3
in
mov
dec
outsl
loope
in
mov
add
jecxz
in
stos
pop
stc
mov
inc
sub
repz
adc
push
xor
cmc
sbb
fisubs
mov
test
or
push
dec
inc
pop
pop
pop
xor
fnstsw
inc
test
xor
pop
sub
jne
lods
inc
ja
mov
imul
mov
inc
push
out
dec
pop
push
mov
mov
jnp
mov
rorb
inc
inc
inc
xor
imul
xor
mov
xor
ret
push
arpl
sub
ficoml
cli
inc
iret
insl
js
daa
movsl
and
and
mov
mov
or
jae
pop
push
ja
aam
adc
jg
lahf
aad
fisttpl
pusha
ja
pop
and
insl
mov
dec
add
jl
aam
adc
add
fwait
pop
rcr
imul
cmpxchg
pop
test
mov
and
repz
cmpsl
pop
and
cmpsb
cmp
sub
cmp
push
cmpsb
jo
jne
mov
inc
pop
fiadds
sub
test
xchg
or
js
bound
sbb
dec
pop
jns
es
push
pop
jo
jmp
push
dec
jo
jb
stc
inc
es
mov
sbb
sub
jne
mov
push
pusha
mov
mov
fs
fistps
nop
pushaw
mov
mov
jns
or
fldenv
pop
out
int3
cld
dec
cmc
xor
loop
mov
rolb
push
test
push
movsl
xchg
mov
int3
mov
inc
mov
in
fnstsw
daa
mov
sarl
jp
inc
ret
aas
popa
pop
out
ret
arpl
push
add
fisubrl
fs
negl
sub
push
cmp
xor
mov
add
dec
lahf
icebp
arpl
add
push
rcrl
movsl
int3
cmp
or
mov
pop
jo
jb
xor
or
pop
inc
hlt
and
lock
shll
adc
push
sbb
ficompl
addw
out
into
dec
sti
dec
and
or
push
adc
mov
push
int
xor
movl
subb
pop
pop
scas
dec
lds
inc
sbb
add
and
push
scas
lods
arpl
jmp
jmp
jnp
out
lahf
lret
adcl
rclb
fldenv
shll
int3
mov
ja
movsb
pop
xchg
fcoms
insb
insl
inc
xor
dec
iret
add
pop
in
cmp
call
or
lahf
mov
pop
add
xchg
enter
outsb
clc
mov
cwtl
cltd
jns
and
xchg
pop
lds
inc
pop
adc
push
mov
jg
loop
add
cmp
add
sahf
inc
les
insl
movsb
inc
push
inc
mov
pop
inc
sub
and
loopne
mov
sub
es
sub
daa
outsl
or
js
mov
ret
adc
stos
decl
lock
dec
jo
mov
jle
inc
inc
dec
adc
cs
lahf
icebp
jecxz
add
jns
xor
pop
daa
adc
xchg
int
cli
aas
cs
cmp
fwait
in
aaa
mov
sub
into
mov
ja
xchg
mov
aad
imul
repnz
fimull
xor
cmp
orl
and
pop
ror
mov
mov
lret
and
leave
mov
ficomps
push
inc
scas
arpl
dec
or
rcrl
mov
inc
mov
loopne
rcpps
jp
test
ja
shrl
aas
mov
mov
mov
sub
pop
dec
add
jecxz
mov
aad
loope
and
push
cmc
or
test
pop
loopne
stos
enter
mov
mov
rcrl
cmp
fists
lds
flds
cmp
push
jl
inc
pusha
push
addr16
maxps
mov
dec
rorb
pushf
loope
xchg
pushf
loop
pushw
call
decl
jnp
dec
push
pushl
idiv
dec
gs
cmp
inc
sbb
in
cld
push
scas
add
adc
sbb
movsb
xlat
jp
data16
xchg
aas
iret
or
adc
int3
fists
mov
movsl
or
mov
scas
xchg
mov
stos
sbb
stos
or
movsl
popf
inc
loopne
movsl
imulb
xorb
aaa
xor
jmp
sbb
sahf
push
sub
jecxz
sub
orl
aam
inc
lret
les
xorb
loope
idivb
dec
inc
dec
adc
pop
xchg
dec
add
inc
and
mov
mov
mov
dec
push
and
ss
stos
ret
and
out
sub
out
cmc
loope
jecxz
or
push
cli
shrl
cwtl
mov
xor
in
lret
enter
stc
mov
mov
cmpb
mov
sbb
lods
or
pop
loopne
sbb
dec
rcrl
inc
dec
mov
sbb
movsl
mov
inc
mov
es
dec
xchg
pushf
icebp
push
aaa
cmovns
and
je
push
cmpsb
dec
mov
decl
xor
aaa
jae
adc
add
sbb
ret
push
push
ffree
xlat
js
mov
std
into
insl
in
jl
dec
mov
cmp
mov
xchg
adc
jae
icebp
loope
cmp
ljmp
jae
dec
in
js
lret
cli
sbb
jmp
inc
aad
movsl
jns
ficompl
popa
mov
pop
xor
push
dec
push
icebp
or
cmpl
dec
jecxz
and
mov
add
sbb
xor
aas
std
sarl
mov
neg
jae
pop
mov
jae
sahf
sub
mov
jnp
push
pop
insb
cli
pushf
lahf
mov
stc
jmp
push
lret
jp
pop
or
mov
mov
dec
dec
cmc
push
cmp
movsb
mov
inc
pop
cli
and
inc
imul
xchg
sbb
sbb
jns
push
mov
sbb
aad
pop
popl
jo
gs
mov
add
out
xor
ja
xor
lcall
jb,pn
stos
mov
push
in
lret
and
ja
repnz
mov
jnp
lods
addl
outsl
call
xchg
jne
push
out
imul
ret
dec
adc
shl
or
sar
sti
pop
jne
jg
push
cmp
repz
ljmp
adcb
fsubrs
clc
xchg
dec
outsb
jne
das
dec
nop
cltd
jge
mov
icebp
dec
mov
dec
pop
das
adc
ret
jecxz
js
or
push
lret
fldcw
stos
repz
test
push
callw
sbb
xor
sub
xor
xchg
sub
sbb
fsubrl
bound
adc
inc
adc
cli
pop
pop
cmc
mov
int
xchg
cmp
ss
inc
fldcw
sahf
and
aad
fstl
outsl
call
pop
mov
push
ja
xor
out
mov
adc
lret
in
mov
arpl
inc
outsl
dec
dec
xchg
xchg
xchg
xchg
mov
outsl
lds
ror
or
mov
mov
rol
pushl
jae
push
inc
cmp
and
mov
faddp
adc
mov
sub
nop
inc
adc
jo
cmpsb
push
inc
sbb
and
lds
popa
push
xchg
mov
cmp
and
stc
xchg
fxtract
ret
push
imul
jle
push
mov
dec
lret
add
divl
shrl
mov
jns
ret
xor
pop
xchg
testb
stos
repnz
leave
pop
ret
mov
pop
leave
pop
and
jecxz
dec
subb
shlb
add
or
dec
insb
or
xchg
iret
pop
sub
adc
jl
add
dec
xchg
dec
push
ljmp
mov
arpl
jno
pop
jo
xlat
cmp
xor
insb
pop
scas
test
inc
mov
enter
or
sbb
cmp
arpl
cmp
push
xchg
xor
aam
in
add
stos
pop
cld
aad
cmpsl
repz
cli
lcall
js
push
xchg
sub
mov
jno
stc
fdivrl
cwtl
cs
mov
test
mov
push
cmp
fcomps
push
outsb
cmp
add
push
mov
jb
add
mov
in
fld
ljmp
es
je
cwtl
bound
addr16
ja
lock
jp
push
jb
jb
fstps
lahf
shll
repnz
mov
mov
mov
sbb
mov
xor
adc
and
pop
pop
jbe
gs
inc
mov
lret
mov
push
jne
arpl
int3
xor
add
sub
clc
cwtl
leave
mov
insl
fs
cli
cmp
jnp
cmp
xor
pop
cmpl
xchg
fdivrl
je
xchg
rorl
outsb
mov
jnp
jl
sub
mov
lahf
shl
jne
lods
mov
xor
cwtl
stos
dec
pusha
stos
xchg
cmp
sbb
cmc
cmp
sti
sbb
outsb
fmull
adc
aas
repz
sbb
ja
sub
ja
js
andl
mov
insb
or
mov
repz
mov
sbb
mov
mov
jecxz
cmp
sbb
cmp
adc
pop
xor
icebp
rcrb
sub
rolb
xchg
std
and
movntq
out
stos
int3
leave
pop
lcall
xor
cs
repz
enter
adc
ret
mov
mov
mov
clc
inc
xchg
adc
pop
out
data16
scas
es
test
xlat
fmull
cmp
jmp
cmc
lcall
jecxz
xlat
fwait
sub
popl
enter
popa
and
lahf
int3
cmpsl
dec
jo
push
fdivrs
enter
pop
or
dec
sub
pusha
loope
mov
repz
jno
fnstcw
pop
push
adc
popa
mov
mov
bound
outsb
imul
mov
mov
lahf
mov
push
add
or
popf
push
xchg
addr16
in
push
xlat
pop
ja
sbb
gs
lods
add
sbb
pop
cmp
je
in
pop
add
fisubl
mov
and
outsb
stos
mov
lret
sahf
jno
xchg
popa
out
lret
push
sub
jbe
cmp
rolb
mov
lret
and
inc
dec
testl
lret
push
xchg
xor
int3
idivl
ret
xor
xchg
sbb
cmp
pop
aam
inc
das
lret
mov
or
stos
aam
mov
inc
ror
cld
dec
mov
pop
daa
inc
pop
mov
jno
rcll
mov
push
movsl
lahf
stos
xlat
mov
inc
rorb
shrb
push
mov
inc
mov
adc
mov
sar
add
and
xlat
int3
stc
cmp
mov
dec
pop
fsub
lret
add
out
mov
sbb
mov
cmp
flds
sarb
repz
pushf
inc
cmpsb
iret
or
in
nop
mov
mov
jmp
xor
inc
stos
mov
xor
test
mov
jo
dec
xchg
xor
xlat
cs
aas
push
movsb
mov
fmuls
push
xchg
mov
mull
test
sub
fwait
cs
push
outsl
clc
dec
jae
and
push
push
push
mov
mov
outsb
jnp
shl
loopne
cs
mov
mov
xchg
pop
dec
push
call
clc
js
in
pop
mov
push
pop
insl
dec
cmp
jle
adc
adc
ret
pusha
push
es
and
arpl
repz
cmp
sub
or
ja
pop
or
cmpsb
ljmp
sbb
add
xor
cmpsb
test
orb
dec
dec
jnp
rcrl
call
mov
xchg
jb
subl
or
sbb
and
cmp
out
mov
xor
adc
cmc
mov
pop
aad
mov
icebp
add
cmp
and
je
in
push
loope
add
xchg
inc
jb
xor
addr16
pop
test
jmp
adc
lahf
pop
xor
fdivrl
or
xchg
jge
loopne
inc
mov
imul
in
lret
insb
shlb
add
pop
mov
xchg
rcr
in
mov
les
js,pt
mov
pop
jae
or
inc
dec
sarl
cmp
in
inc
testl
cmp
mov
cs
sarb
data16
aas
adc
jmp
or
adc
loop
cmpsb
dec
or
mov
sahf
popf
xchg
in
pop
cwtl
pop
mov
int3
or
loop
or
xor
pop
and
fisttpll
pusha
mov
cltd
gs
shlb
push
jbe
push
mov
and
or
fidivl
cltd
sbb
sbb
out
dec
adc
lret
dec
jne
dec
push
scas
cmpsb
mov
dec
into
loopne
sbb
popa
push
scas
or
outsl
cmp
dec
push
repz
frstor
or
sarl
cs
ds
movsl
add
repnz
stos
xlat
rolb
mov
xchg
xor
nop
insl
push
add
and
jge
jns
and
push
sbb
jbe
cmp
and
cmc
nop
sub
add
decl
xchg
xor
push
shl
sub
loopne
mov
std
inc
stc
movsl
imul
jno
xor
imul
dec
xor
sbb
loope
add
or
sbb
movsl
enter
cmpsl
push
push
lret
push
add
push
sbb
mov
sbb
call
call
int
aad
fsub
fsubl
ret
jno
lahf
xchg
add
repz
into
mov
fs
and
aam
mov
fistl
insb
dec
cli
ret
pop
mov
lret
aaa
inc
test
jne
mov
loope
pop
nop
xchg
data16
into
and
inc
call
xchg
dec
pop
mov
dec
mov
ret
cmpsb
shlb
push
es
jmp
dec
xchg
sub
jo
dec
dec
sub
lret
cs
pop
shrb
dec
dec
xchg
fsubrl
dec
arpl
xchg
ds
icebp
pop
jecxz
lock
popa
lods
xchg
es
js
mov
cmp
dec
shrb
shl
fildll
loopne
cmc
roll
xchg
and
lds
daa
negl
shlb
add
cmp
lock
test
lea
inc
dec
pop
test
jno
pop
inc
js
mov
imul
sbb
es
lcall
ret
mov
data16
push
pop
movsl
dec
inc
push
mov
pop
jae
fwait
jmp
pop
and
mov
xlat
ljmp
xor
xchg
jno
xor
ja
xchg
inc
mov
inc
xlat
jno
ja
sub
out
rcrb
pop
iret
jne
or
daa
rcl
jmp
popf
test
mov
lret
test
mov
out
xchg
shll
ret
in
inc
push
or
adc
ljmp
lea
ret
and
inc
mov
push
mov
rclb
mov
gs
fwait
lods
xor
mov
pop
cmp
lret
dec
shlb
pop
fstl
xor
pop
cmp
mov
push
fistpll
mov
scas
enter
or
or
hlt
push
inc
inc
jns
xchg
adc
imul
add
cmp
sub
movsb
pop
sub
push
int
xor
or
xor
cmp
cld
add
jecxz
jle
and
js
out
enter
mov
mov
inc
xchg
int3
adcl
pop
lock
mov
push
xchg
aad
dec
dec
scas
ret
adc
testb
cmp
xor
mov
pushf
cmp
out
cmc
data16
adc
push
lret
dec
loope
push
pop
enter
pop
inc
jbe
jmp
stc
das
je
sub
cmc
shrl
inc
add
adc
ret
ja
jg
fwait
lret
cmpl
ucomiss
inc
in
sarb
or
dec
mov
push
add
xchg
jmp
fwait
sbb
loopne
cmp
push
add
dec
adc
jmp
bound
sbb
das
jnp
mov
ficomps
testl
cwtd
cmpb
fldt
fwait
cmp
inc
and
inc
lods
push
jnp
sub
out
push
clc
sub
inc
or
xchg
push
lsl
stos
sub
pop
les
xchg
out
jnp
iret
dec
mov
mov
insl
movsl
test
pop
add
sub
lcall
mov
aas
pop
pop
lret
jecxz
repz
push
adc
gs
mov
mov
pusha
pop
cmp
lret
mov
repz
or
xchg
movsb
push
jmp
scas
mov
fists
dec
lock
mov
adc
or
dec
les
das
mov
mov
jae
pop
dec
jge
or
add
loope
jecxz
shll
je
push
or
push
pop
jmp
loopne
lods
inc
or
fld
imul
pop
jmp
loope
rcll
inc
ja
push
or
in
mov
iretw
sbb
lock
ret
mov
mov
pop
add
lret
sete
cmc
mov
push
mov
jmp
mov
xchg
xchg
and
xchg
add
pop
push
push
or
pop
mov
idivl
pop
xchg
xor
iret
fyl2xp1
push
cmp
fldenv
inc
and
dec
sub
cs
jmp
dec
mov
pushl
pop
and
push
std
sub
sub
mov
and
pop
mov
arpl
cs
sti
fistpl
xchg
dec
fisttpll
std
insl
dec
dec
push
sub
push
test
scas
orb
enter
cmc
adc
pop
fadds
movsb
iret
roll
mov
and
sbb
or
in
xchg
jmp
int3
jnp
mov
out
jo
mov
popa
pop
xor
sbbl
adcb
loopne
imul
pop
add
mov
call
pop
dec
loop
mov
add
sbb
jl
push
and
icebp
pop
clc
mov
xor
and
inc
fldl
push
aad
jg
jno
loopne
addr16
inc
jge
push
pushf
mov
sub
jle
mov
pop
enter
cltd
aam
aaa
inc
out
dec
adc
push
inc
sub
xchg
push
inc
cmp
lods
ret
ljmp
cmp
std
sub
lcall
das
inc
scas
andb
mov
push
xor
lret
js
xor
cmp
xor
std
rorl
cs
int
sub
repnz
pop
shrl
cld
pop
aaa
lods
sbb
adc
cmp
inc
and
mov
mov
addr16
loope
pop
insb
lea
add
mov
in
mov
cmpsb
sti
movsl
mov
xlat
pop
pop
sub
mov
mov
or
sub
dec
mov
aad
bound
dec
inc
mov
push
data16
jmp
and
inc
inc
loope
push
sbb
jnp
imul
push
sub
popa
jb
cmp
ds
add
cs
shr
jecxz
xchg
xor
and
lea
jg
mov
cmp
bound
push
pop
dec
ret
pop
fcomps
push
mov
sbb
mov
iret
in
mov
pop
lea
dec
or
add
mov
test
dec
aaa
cmp
sti
lods
mov
rep
lods
jbe
jo
das
dec
rcr
aad
lock
call
adc
or
dec
mov
repnz
aas
jmp
stc
pop
cmc
mov
sbb
inc
sbb
lea
push
cli
lea
xor
insb
jecxz
loopne
daa
fbstp
add
push
hlt
push
add
fldcw
xchg
push
stc
mov
ja
sbb
sub
mov
mov
and
dec
fisttps
ds
scas
icebp
nop
jecxz
test
xchg
sbb
pusha
adc
adc
clc
dec
pop
sub
data16
or
test
cs
mov
sub
mov
mov
lahf
inc
cmp
leave
mov
pop
out
loope
pop
test
sbb
lods
inc
xor
ret
lds
push
pop
or
pop
lock
in
xchg
and
les
stos
xlat
in
sub
xchg
cmpl
dec
shrl
fsubs
arpl
iret
jg
inc
mov
fbld
mov
xor
dec
lahf
jp
rcl
data16
adc
movsl
icebp
jl
les
mov
mov
sahf
movsb
or
cmpsb
xor
push
jecxz
mov
cli
ficomps
cmp
fxch
enter
in
mov
shlb
mov
xchg
inc
pop
fbld
fsubrs
jno
xchg
in
pop
shlb
mov
adc
call
lds
mov
pop
out
pop
xor
les
push
cwtl
mov
xchg
ja
stos
push
push
sub
jo
insb
shrb
fwait
mov
cmp
shll
scas
das
call
cwtl
inc
int
cmc
dec
lods
fst
fsubr
sub
mov
stos
or
ja,pn
dec
push
xchg
and
dec
int3
adc
inc
jmp
fists
aad
cmp
mov
fcmovnb
cmpsb
dec
fsubs
xchg
sbb
xor
cmp
pop
loopne
sbb
call
movsl
push
lret
stos
mov
pushw
cmpb
loopne
add
ss
xor
pop
popa
inc
add
fsubrs
mov
ret
push
out
cmpsb
and
xor
sub
xor
add
xchg
mov
ficoms
inc
xchg
and
into
cmp
mov
pop
mov
add
addb
jns,pn
sbb
sahf
pop
mov
sbb
sub
pop
jne
xchg
mov
inc
lds
xor
in
loop
push
add
mov
and
pop
jp
rdtsc
shr
pop
dec
xor
dec
dec
ja
shlb
cs
push
cmp
je
sbb
or
pop
dec
pusha
and
jne
pop
inc
push
xchg
add
pop
mov
int3
ficoml
pop
mov
xchg
pop
jg
push
dec
popa
or
and
test
mov
cmp
fisubrl
lret
jecxz
mov
std
pop
mov
mov
out
and
loope
pop
les
jmp
jb
loope
jae
lret
mov
mov
popa
rorl
je
cmp
pop
mov
sub
pop
sahf
mov
les
adc
cmp
jmp
cwtl
sti
mov
pop
leave
cs
rcrb
pop
jg
cmp
clc
mov
es
xchg
mov
cmp
popa
ret
mov
cmpsl
fs
sub
jbe
into
xchg
pop
adc
and
lcall
jae
or
pop
xlat
pop
or
hlt
xor
inc
aas
leave
or
jl
xor
add
push
das
test
mov
hlt
dec
lods
pop
xlat
fwait
aas
cmpsb
fdivs
into
mov
add
fidivl
sbb
and
push
add
sub
dec
imul
fldenv
gs
hlt
cmp
mov
std
outsb
mov
mov
jb
xchg
sbb
mov
pop
mov
mov
data16
mov
and
xchg
cmp
cmp
scas
or
jp
fdivrl
adc
cli
fdivrs
mov
fistpl
cs
es
inc
mov
fistpll
xchg
loop
outsb
ljmp
mov
add
addb
insl
stc
jmp
cmp
cld
fs
ljmp
cmpsb
jnp
mov
rcll
mov
mov
pop
mov
adc
mov
pusha
pop
mov
aam
mov
push
mov
mov
sbb
pop
sub
pop
jmp
sbb
popf
lretw
mov
out
ss
cmp
sbb
bnd
clc
jmp
pop
add
jg
lcall
clc
pop
pusha
mov
mov
outsb
pop
pop
cmpsl
sub
pop
enter
add
lods
stos
push
pop
jbe
push
cmp
mov
dec
ret
mov
xchg
jns
mov
push
scas
sub
call
mov
ret
rolb
adc
xor
sub
js
adc
or
cs
push
and
in
stos
inc
mov
fidivl
or
add
pushf
pusha
and
pop
cmp
cmpsb
popa
sub
mov
stos
ret
sub
add
daa
ds
dec
subl
roll
mov
jle
dec
aas
iret
push
lea
inc
int
rcrb
sbb
sbb
adc
mov
movsl
call
subl
add
adc
pop
cmp
mov
xchg
inc
dec
cs
fucomi
xchg
and
sarl
mov
arpl
aam
mov
icebp
out
loopne
inc
sti
mov
add
adc
cmp
decl
cmp
jl,pn
dec
pop
jmp
aaa
lret
outsl
xchg
shll
data16
mov
leave
das
cli
scas
or
loopne
ja
inc
outsb
xlat
push
outsl
movsl
and
mov
and
inc
cmp
repz
mov
push
mov
mov
sahf
stos
push
mov
pop
sbb
sub
dec
lea
jae
inc
add
mov
jl
mov
outsl
add
inc
add
cmpsb
dec
jae
fmul
jno
jg
inc
and
aad
jp
cs
add
cmp
adc
andl
pop
pop
lds
xor
add
enter
mov
mov
in
iret
xchg
loop
stos
jmp
rclb
pop
sbb
mov
pop
imul
jnp
mov
in
mov
dec
push
movsl
je
call
cs
fcmovne
inc
pop
or
imul
cmp
add
cmpsb
adc
mov
rorl
ljmp
fstl
call
adc
fimuls
addr16
ret
mov
or
loope
int
dec
push
out
adc
mov
cwtl
xchg
shl
enter
loop
push
jmp
je
add
jbe
cmpsb
pop
aas
xchg
pop
jmp
add
cmp
pop
inc
lods
jmp
xorb
jae
xlat
orl
loope
inc
out
addr16
cmpsb
imul
push
addr16
push
and
iret
and
and
fs
frstor
loopne
shlb
sti
leave
lds
or
pop
xchg
shrb
push
call
inc
dec
mov
into
scas
enter
out
jnp
dec
aaa
sbb
sub
push
fwait
pop
inc
mov
inc
jae
push
loop
enter
popf
sbb
mov
add
outsl
cmc
pusha
dec
fwait
popa
mov
adc
dec
cmpl
dec
ja
test
mov
rcl
enter
rolb
insl
adc
cmp
into
or
mov
xor
and
pop
iret
adc
or
leave
aas
pop
mov
sti
sub
push
xchg
xchg
and
xchg
frstor
add
dec
lret
xor
pop
cmp
push
pop
mov
push
pop
pop
test
cli
aaa
jbe
leave
nop
imul
loopne
and
cmp
xlat
lahf
fldt
add
and
adc
cli
xchg
dec
outsb
mov
sub
mov
push
aas
mov
hlt
cmp
xor
roll
pop
dec
jnp
cli
push
fs
mov
das
add
mov
xor
mov
les
dec
clc
mov
sub
cltd
pop
dec
and
orl
adc
bound
jmp
pop
ja
mov
cmpsl
mov
add
fdivr
stc
cli
adcb
add
cmp
lahf
pop
sub
lcall
adc
adc
push
mov
divb
pop
aas
cmpl
xlat
je
es
adc
and
fiaddl
cs
sti
pop
fcomip
clc
jle
or
or
fisubrl
adc
sbb
rclb
addl
data16
sbb
mov
bound
orb
jmp
pop
scas
shll
into
jbe
mov
sti
add
data16
cmpsb
scas
fstp
xor
aad
nop
lds
lahf
sub
rep
pop
inc
jnp
pop
pusha
mov
dec
mov
mov
stos
lret
cmpsb
mov
adc
or
pop
add
popa
rcrb
jp
repz
inc
bound
out
mov
cmp
cmp
imul
adc
push
testb
inc
pop
inc
cwtl
pop
sub
mov
iret
pop
std
jo
scas
stc
or
in
and
xor
xchg
mov
mov
pop
xor
std
stos
and
jmp
dec
ficomps
or
insl
xor
fcompl
lea
movsl
aas
mov
fdivrs
mov
adc
pop
jp
dec
sbb
fdivr
dec
or
cmp
sti
dec
mov
dec
push
jmp
sbb
fcompl
lea
scas
ja
orl
xor
xchg
sub
movsb
pop
or
jo
xor
sti
stos
pop
mov
mov
es
lods
jge
jae
cmp
inc
rcll
leave
mov
cmp
lret
stos
xor
or
lcall
jmp
nop
jmp
insb
sub
arpl
aas
jo
dec
std
dec
lds
pusha
scas
mov
xchg
fldcw
leave
sub
pop
add
incl
int
xchg
mov
cmp
jp
orl
ret
popf
mov
out
mov
cs
sbbb
sbb
ret
jnp
pop
or
xor
xchg
jbe
pop
jns
call
jmp
jo
or
call
pop
movsl
shrl
clc
lret
or
fisubs
push
adc
outsl
pop
sub
jno
ss
add
inc
inc
or
movsl
or
jo
pop
dec
adc
stos
fsts
or
cmc
fstps
loope
cs
and
je
push
push
mov
mov
pusha
test
sti
stos
cmpsb
mov
cmp
rcll
pop
jae
inc
mov
or
arpl
aam
adcb
jbe
jg
adc
imul
mov
aaa
pop
inc
or
mov
add
shl
cwtl
xchg
jge
ja
xchg
xchg
push
push
icebp
jp
xchg
loope
xchg
jmp
loop
loope
add
add
or
push
push
inc
outsb
pop
in
push
or
shlb
xchg
mov
mov
test
daa
fstpt
arpl
aas
adc
dec
push
into
inc
je
sub
dec
js
and
push
mov
jle
lock
xor
xchg
push
inc
daa
fldenv
inc
icebp
push
repz
cli
xlat
sahf
jmp
fnstsw
xor
mov
je
js
add
insb
mov
push
pop
or
push
mov
xor
cmp
imul
or
mov
cltd
xor
cmp
movsl
push
mov
iret
dec
jns
push
cmp
stc
xchg
fimuls
push
pop
jp
aad
mov
lret
pop
cmpsl
mov
adcb
jecxz
rclb
jmp
iret
inc
mov
sahf
xchg
idivl
sahf
sbb
xlat
cmp
and
popa
insb
add
and
mov
pop
imul
and
xor
int3
test
jae
adc
jmp
jno
push
inc
pop
loop
cmp
add
push
mov
mov
cld
pop
out
movsb
mov
mov
sub
aad
insb
dec
cs
test
dec
inc
dec
data16
repnz
adc
pusha
mov
sub
aas
stc
mov
push
jne
into
repnz
pop
and
push
outsb
jb
push
sbb
fnstcw
arpl
adc
dec
icebp
fmuls
lock
mov
xchg
inc
inc
out
ret
or
subl
or
inc
xor
mov
mov
popa
sbb
xchg
xor
pop
pushf
dec
mov
mov
mov
xchg
pop
cs
fadd
sub
mov
push
andb
test
dec
lds
xchg
shlb
mov
inc
cs
mov
push
filds
add
pop
xor
icebp
sub
push
inc
das
rolb
xchg
fsts
loopne
push
cmpsb
jnp
aas
scas
sahf
mov
ret
xor
inc
add
enter
bound
mov
mov
or
in
pop
fsubrl
aas
repz
xlat
cmpsl
pop
mov
jo
cs
dec
mov
imul
sub
test
in
add
jnp
bound
add
pop
pop
fcompl
mov
mov
in
xor
or
in
bound
pop
orl
or
jle
pop
clc
dec
repz
shrb
std
stos
aad
mov
xchg
sti
push
dec
sub
push
nop
leave
loop
xlat
jnp
enter
and
cmp
mov
repz
dec
sti
iret
shll
dec
and
sbbb
sub
cmpsb
stos
enter
jae
outsl
inc
jb
jle
jo
push
call
rorl
aas
xor
faddp
int
push
shrl
sub
and
pop
cmp
or
jns
sbb
ljmp
dec
pop
add
adc
xchg
inc
les
adc
shll
xchg
ficoml
sbb
movsb
xor
push
sbb
cs
insb
or
adc
subb
repz
iret
push
xchg
dec
aas
xor
push
loopne
mov
inc
mov
sti
ds
in
dec
adc
icebp
fcomip
push
adc
mov
pop
inc
push
jb
aas
push
fldt
repnz
popa
pop
push
ja
push
and
dec
pop
sub
xlat
adc
pop
imulb
dec
inc
jmp
clc
jne
pop
and
ret
loope
shlb
into
or
and
outsb
cmp
inc
and
lods
adc
int3
xor
in
jp
xchg
sub
stos
adc
jnp
jbe
out
lret
ffree
les
insb
jo
and
insb
pop
pusha
ret
mov
and
lret
pop
lea
push
rcr
in
sbbl
insb
adc
pop
jmp
cmp
sbb
or
xor
shlb
inc
add
repz
int
and
jge
mov
add
imull
xchg
inc
xor
dec
cltd
jg
aam
mov
jo
outsl
stc
pop
cmc
mov
rcrb
and
push
mov
push
imul
jp
cmp
shrb
adc
push
scas
out
int3
push
enter
xchg
sub
mov
xchg
popa
rcrl
fistps
insb
inc
fstpt
test
dec
mov
or
out
mov
jg
xchg
cmpsb
lcall
mov
in
mov
movsb
stc
sbb
fnsetpm(287
and
loopne
dec
shrl
mov
clc
mov
insl
mov
and
jae
ja
xor
dec
leave
pop
pop
fimuls
rcr
adc
imul
imul
aad
lds
pop
sub
inc
rcl
sub
pop
cltd
mov
xor
mov
mov
jg
or
pop
push
inc
sub
lret
jp
xor
mov
cmpsl
inc
ss
and
xor
jmp
xor
xlat
mov
ljmp
lea
popa
mov
add
dec
loopne
mov
sbb
mov
subl
lds
sbb
xchg
adc
mov
push
in
mov
push
jp
pop
ds
xor
mov
aad
adc
xor
ljmp
fsubrl
and
lods
cmp
lret
data16
clc
jno
pushl
lret
xchg
aas
fmulp
xor
das
lret
xor
les
adc
lods
movsl
fsubrl
add
xlat
mov
push
pop
fcmove
xchg
xor
xchg
loope
jns
jge
xchg
cvtpi2ps
sbb
rcrb
add
sbbl
movsl
jecxz
or
sbb
jbe,pn
and
lcall
cmpl
xchg
jne
mov
out
lret
test
enter
dec
imul
fcmovu
jecxz
ret
mov
sub
stos
scas
xor
ds
lds
xchg
in
iret
adc
test
int3
push
pop
dec
gs
and
loope
or
cmp
inc
lds
sub
mov
ja
jg
sbb
push
rcr
sbb
mov
ljmp
stos
mov
fimull
mov
push
dec
mov
mov
xor
cmp
subl
scas
out
fsts
and
rcrb
jge
js
into
rcll
jmp
mov
dec
mov
shl
fcmovbe
push
xchg
dec
or
icebp
xlat
xor
jge
in
into
sbb
mov
inc
add
testb
data16
rcll
or
test
inc
in
jnp
adc
imul
pop
or
sahf
inc
push
dec
pop
dec
push
pop
mov
jno,pn
xchg
lds
inc
and
dec
dec
aas
mov
stos
xchg
ljmp
scas
daa
push
call
xlat
pop
scas
sub
sub
lds
xor
mov
xor
cmp
insl
mov
test
icebp
shlb
pop
dec
lods
les
adc
push
stc
fdivl
jb
inc
inc
add
in
scas
and
ret
pop
jmp
cmp
subl
xor
test
inc
inc
mov
pop
imul
inc
jb
mov
xchg
aas
cmp
adc
ficoml
cmpsb
sbb
movsl
or
dec
dec
daa
dec
push
pop
sahf
jae
aaa
cmp
cltd
mov
push
sbb
xorb
pop
or
jnp
sahf
popf
ret
cmpl
lcall
inc
int3
sbb
mov
pop
mov
jne,pn
dec
xchg
sub
sub
dec
push
push
add
or
cs
test
and
inc
inc
push
std
rolb
outsl
in
sbb
sbb
repz
push
clc
out
fstps
imul
incl
jno
outsl
or
push
sub
cs
and
repz
sbb
push
pop
cmpsb
and
std
sub
leave
pop
dec
mov
cmp
inc
fistpll
mov
repz
dec
push
xchg
push
mov
leave
push
push
pop
dec
xchg
cs
sar
xorb
movsb
mov
cs
scas
lcall
sub
aam
out
stos
sub
pop
cs
xchg
xor
arpl
aam
cmp
jae
push
nop
mov
pop
bnd
pop
or
push
inc
or
dec
cmpsl
adcl
mov
mov
scas
popa
fidivrs
cmp
xchg
in
and
leave
pusha
fidivrs
inc
filds
mov
mov
adc
and
pusha
pushf
inc
sub
aas
sub
stc
cs
push
or
gs
pushf
enter
mov
fwait
movntps
cmp
jecxz
movsb
push
jp
push
push
push
ret
pop
add
push
cs
mov
xor
push
pop
xchg
fbld
ror
jle
add
inc
scas
dec
ret
sbb
test
xor
dec
ret
mov
push
les
jbe
jns
divl
or
cltd
loope
mov
mov
test
lcall
sahf
lcall
hlt
repz
jns
fwait
movsl
cld
movsl
xchg
mov
jbe
cltd
adcl
sub
cmc
push
aad
cmp
cmp
lods
xlat
scas
or
mov
out
shll
rcrb
sbb
xchg
pop
pop
popf
mov
daa
add
sub
cld
mov
out
repnz
roll
ficoml
cmp
cmp
cli
push
imul
inc
jg
fcomps
sbb
xchg
xchg
sar
loope
pop
roll
fisubrs
mov
dec
dec
dec
xchg
mov
mov
fwait
cmpsb
subb
inc
sub
stos
sbb
movsl
aaa
sub
inc
pop
inc
push
test
or
bswap
pop
data16
data16
pop
inc
jmp
pop
dec
movsb
fsubs
pop
mov
xor
push
sub
jo
subb
inc
jle
push
test
cmp
adc
dec
scas
xor
pop
mov
cltd
popf
aad
cli
jecxz,pn
fists
stos
push
mov
pop
pop
std
xchg
aas
and
inc
or
stos
test
sti
ljmp
flds
shlb
cs
jns
lahf
jmp
pop
testb
sub
xchg
mov
xchg
inc
nop
push
jp
dec
cli
sub
push
mov
push
fcoms
mov
outsl
mov
mov
pop
cmpb
enter
lds
lods
lahf
dec
mov
jg
cs
aas
jecxz
insb
jo
imul
jnp
fwait
push
fstl
inc
lcall
adc
int3
push
scas
in
or
test
mov
push
inc
mov
pusha
cmpsb
fcoml
clc
lret
call
roll
mov
mov
fnstcw
jnp
sbb
mov
in
inc
rclb
cld
push
add
cli
adc
mov
xchg
add
mov
inc
xchg
cs
push
add
scas
loopne
mov
add
mov
jmp
jae
sub
mov
inc
mov
adc
pop
idivl
inc
jecxz
popa
add
les
lret
inc
jg
fldcw
xlat
out
imul
sub
mov
in
je
std
sbb
mov
mov
stos
ret
push
bound
fwait
stos
add
movsb
push
mov
jmp
mov
fcmovnb
filds
pop
add
jo
xlat
pop
fdivl
and
ljmp
cmc
dec
xor
cmc
out
xor
in
jle
xor
xchg
outsl
sbb
popf
inc
dec
push
adcl
mov
and
lds
leave
mov
inc
mov
push
ja
movsl
fcoml
aas
sbb
mov
sbb
push
mov
addl
not
cmpsb
out
shl
dec
sbb
pop
jns
insl
sub
xlat
aad
push
xor
movsl
add
loope
lock
push
outsb
push
pop
shll
cmp
xor
ljmp
mov
les
ret
je
jae
xlat
add
fwait
loope
scas
fsubl
int
out
shrl
sbb
repnz
jmp
xlat
pop
fucomip
cmpsb
adc
stos
fidivs
out
sbb
or
std
in
push
mov
fisubs
rorl
pop
mov
sub
jo
scas
pop
adc
je
adc
clc
inc
ja
out
cwtl
loop
stos
xchg
push
mov
pop
mov
stos
mov
sbb
pop
imul
cmp
into
sbb
cmp
pop
jle
fs
dec
sub
movl
add
outsl
sbb
jmp
fyl2x
mov
daa
movsl
cli
aaa
test
popa
popa
mov
movsb
sbb
jnp
loope
int
fcomip
lds
or
and
pop
leave
push
cmp
add
leave
dec
mov
insb
pushf
cmpsb
stos
les
shll
shll
js
lea
cmp
arpl
add
inc
imul
pop
cvtps2pi
mov
fisubrl
jbe
dec
push
push
out
push
insl
sarb
pop
xor
jb
nop
xor
sub
or
or
stc
cmp
nop
add
lret
cmp
loope
xlat
or
lds
adc
inc
fcom
lods
pop
and
adc
xor
mov
jnp
cmpsb
xchg
sbb
fxch
dec
jmp
stos
loopne
andl
jmp
push
jo
nop
pop
test
xor
pushf
cltd
or
js
cmc
or
stos
or
dec
push
pop
outsb
fwait
cs
dec
clc
not
jb
cmpsb
xchg
jbe
sub
sub
push
iret
sbb
nop
loope
push
mov
mov
into
mov
je
in
pop
lods
daa
pop
iret
xchg
push
or
shll
dec
cmp
imul
mov
mov
jnp
sbb
testb
cmc
movsl
insb
sub
inc
mov
cmp
pop
shlb
sarb
mov
xor
cld
xor
aam
sub
out
fwait
data16
js
and
arpl
dec
mov
xchg
jge
jg
and
call
push
push
movl
in
push
in
sub
pop
int
add
pop
pop
or
jae
dec
cmp
lret
push
cmp
jno
cmp
push
dec
push
xchg
cmpsb
ljmp
and
mov
out
ret
cli
xor
pop
rcr
dec
pop
push
dec
out
xor
push
mov
shrl
mov
in
dec
in
das
xor
cwtl
enter
jl
xchg
jnp
popa
call
aaa
pop
cltd
rorl
movsl
adc
push
add
mov
jne
enter
mov
nop
adc
fisubrs
add
das
adc
cmp
ficoms
ds
test
inc
pusha
push
aaa
inc
cmpsb
stos
bound
jg
add
xchg
cmc
outsb
push
inc
aas
add
ret
pop
xchg
push
add
xchg
lahf
fsubl
mov
sub
dec
pop
push
cmpsb
out
ficoml
pop
imul
adcl
or
inc
xor
lret
pushf
test
dec
pop
je
sub
adc
pop
mov
hlt
iret
push
mov
sti
lods
loopne
sbb
movsl
pusha
movsl
in
ja
stc
cmp
les
xor
loopne
gs
inc
push
xchg
push
jg
js
aam
dec
nop
and
pusha
addr16
aas
mov
dec
dec
lret
mov
fwait
dec
and
into
pop
imul
jl
sarb
inc
leave
adc
stc
in
jb
mov
popf
xchg
inc
sbb
jmp
shrl
dec
push
and
inc
or
mov
cld
movsl
clc
mov
rorb
sub
mov
sbb
movsb
or
adc
push
mov
mov
in
ljmp
cmp
movsl
pop
and
pop
jb
add
fsubp
lret
push
cmc
push
xchg
dec
mov
sub
cltd
lds
mov
sub
popf
loopne
imul
lock
or
dec
test
leave
mov
push
scas
sbb
mov
insl
ficoms
sub
pop
pop
jae
mov
mov
inc
mov
aaa
inc
inc
pop
sub
mov
ja
scas
in
subl
jne
out
int3
fs
adc
in
adc
inc
arpl
out
aad
or
gs
in
mov
pop
lret
add
xor
mov
mov
insb
mov
sarb
aas
roll
cmp
xchg
push
or
dec
cmpsb
out
xchg
repnz
into
pop
loope
mov
xchg
push
sub
jle
cmc
lods
pop
test
xor
adc
jl
lret
fisttpll
or
sbb
shl
jmp
push
adc
pop
arpl
xor
adc
mov
jae
lret
dec
test
lret
pop
adc
cwtl
ret
cmc
dec
dec
mov
jmp
mov
push
ja
cmp
push
cmp
cmp
cmp
out
fdivs
jns
mov
rcr
fcmovnb
or
jge
jne
out
jb
mov
cmp
insb
inc
xlat
pop
mov
push
sub
enter
aaa
leave
dec
xor
stc
jmp
jnp
mov
mov
ficompl
or
sub
pop
xchg
leave
loopne
popa
cld
shl
fstpt
jae
in
pusha
xchg
pop
and
stos
xchg
or
mov
mov
xchg
ret
mov
push
lahf
add
or
mov
es
int3
cs
xor
mov
and
pop
dec
popf
mov
jmp
mov
dec
jo
xchg
shr
imul
xor
mov
mov
cltd
repnz
loopne
and
and
jmp
into
adc
mov
jbe
fbld
push
test
popf
mov
lds
dec
add
movsl
and
pextrw
or
lret
pop
loopne
imulb
or
xchg
mov
aaa
lods
cs
xor
inc
dec
fbld
mov
out
loope
sub
lock
mov
loopne
xchg
ret
inc
jne
movsb
add
mov
es
aas
jl
aam
and
in
xchg
leave
sahf
mov
sub
inc
adc
inc
jo
mov
call
adc
lods
sbb
adc
or
pop
rorw
xchg
or
in
lret
das
aam
mov
mov
jmp
popf
shlb
add
inc
pop
xor
lods
arpl
jnp
or
pop
xor
std
mov
ljmp
jns
rolb
xchg
div
insb
lret
pop
add
lock
push
and
pop
mov
gs
inc
test
push
jns
incl
sub
add
or
inc
std
xchg
sbb
dec
daa
fimull
mov
push
ja
lock
insb
mov
sbb
test
cmp
imul
int
and
inc
repz
mov
bound
andb
insb
inc
leave
in
scas
inc
out
adc
mov
jmp
and
repz
imul
fldcw
out
xor
ret
sbb
scas
seto
add
xchg
rcl
or
addr16
int3
rolb
inc
fwait
mov
push
xor
sbbb
rcll
inc
xchg
fadds
in
mov
dec
orl
adc
jge
sbb
hlt
or
or
push
xchg
outsb
in
mov
xchg
fmull
mov
rcrb
ss
jmp
cs
mov
and
or
lahf
or
lret
outsb
sbb
ss
xor
inc
pop
mov
mov
lret
in
insl
push
push
mov
outsb
popa
int3
pusha
dec
popfw
sarb
stos
push
jbe
xor
xchg
sbb
cli
jmp
imul
call
push
clc
in
lahf
imul
fprem1
sub
and
jns
xchg
fdivs
in
xor
sub
loopne
aad
xchg
call
aam
xor
movsl
cmp
cmpsb
mov
in
imul
lret
xchg
cltd
mov
dec
xor
sbb
lahf
cwtl
cmp
dec
pop
sbb
jns
dec
dec
sbb
push
pop
push
pusha
adc
int
jbe
stos
cld
xlat
xchg
mov
jb
xchg
mov
mov
aas
inc
into
push
push
in
mov
daa
roll
jb
rol
adc
pop
xor
fadd
mov
mov
fmul
data16
add
data16
lds
xor
add
ficomps
push
shlb
or
pop
fnstsw
into
cmp
insl
inc
pusha
sahf
mov
jne
jo
fcoml
loopne
ret
sbb
pop
or
call
mov
cltd
movl
into
scas
inc
jmp
fmuls
mov
pop
adc
or
pop
sub
mov
cwtl
mov
scas
fsubrp
sbb
mov
jne
fwait
lods
push
sub
mov
enter
sub
stos
xor
fisubrl
cmpb
mov
je
movsl
clc
push
cmp
mov
jbe
push
imul
out
inc
add
sbb
jmp
lea
cs
shrb
mov
xor
push
xchg
push
mov
sbb
insb
and
mov
push
pop
mov
add
adc
enter
fnstenv
jmp
cmp
xlat
ret
adc
adc
pop
mov
pushf
or
push
mov
out
cs
cmp
push
lds
int3
push
xchg
push
pop
shll
jg
jne
inc
fldl
jmp
xchg
mov
jl
imul
mov
leave
loopne
lcall
imul
sub
stos
in
aaa
sahf
sbb
mov
mov
lea
pushf
mov
sarb
fisttpll
mov
imul
pop
xchg
pusha
and
jo
add
mov
sub
movsl
test
mov
int3
and
scas
nop
stos
sub
pop
arpl
push
xor
mov
das
jle
aaa
dec
xor
ret
inc
add
inc
jg
imulb
dec
pop
movsl
adc
cmc
mov
lret
test
notl
mov
add
inc
icebp
mov
sbb
add
fwait
cltd
add
adc
call
sub
and
or
jb
pop
jecxz
jg
int3
inc
dec
dec
mov
nop
movsl
or
jl
dec
cs
enter
je
imul
xor
loope
xor
scas
mov
dec
xchg
jle
pop
scas
xlat
mov
lret
push
pop
aas
cmpl
daa
fld
mov
std
fcomps
xor
push
xor
je
sbb
addr16
pop
cmpsb
pop
movb
cmp
inc
loope
ret
mov
inc
cs
movsl
iret
mov
mov
jae
dec
push
cwtl
cs
dec
pusha
pop
inc
cld
insl
push
aaa
test
mov
sub
push
jne
xor
cs
lods
shlb
adc
sub
in
aad
std
jg
add
sbb
adc
pop
pop
push
shll
sub
jge
pop
sbb
mov
pop
stos
into
and
lret
movsl
sub
cmp
inc
push
inc
cmp
lret
push
lods
mov
es
pop
outsl
mov
adc
dec
lahf
dec
cld
cs
dec
xor
push
lret
scas
push
call
dec
jmp
adc
mov
out
fldcw
and
sub
icebp
fs
cltd
add
addb
jb
out
test
push
pop
orl
pop
mov
ficoml
inc
add
shlb
cmp
mov
les
pop
jp
lods
mov
shll
pop
inc
push
aad
sarb
cmpsl
xor
andb
mov
cmpsb
jg
into
hlt
cs
in
sub
sub
dec
sbb
andl
imull
mov
xchg
inc
stos
push
adc
rorb
mov
mov
hlt
popl
cmp
mov
lahf
iret
inc
inc
nop
leave
outsb
int
scas
xchg
jecxz
mov
lcall
xchg
pop
cmp
enter
push
scas
ja
xchg
jl
push
insb
mov
call
inc
inc
dec
pop
mov
shll
pusha
push
push
mulb
mov
xchg
cmpsb
push
daa
dec
cmpsb
adc
mov
sub
out
dec
sbb
sbb
ja
cmp
mov
scas
outsl
mov
lret
xchg
mov
xor
or
repz
sbb
mov
sub
aas
jecxz
xchg
adc
inc
lret
adc
imul
out
jnp
enter
flds
jl
les
loope
shufps
test
popf
dec
out
mov
pop
mov
xlat
pop
push
je
inc
loop
fcmovb
add
jnp
adc
fisubrl
repz
orl
shr
orl
mov
mov
ret
mov
jg
or
repnz
sbb
popa
nop
jmp
push
dec
fs
or
inc
adcb
xchg
mov
pop
xlat
mov
ror
add
mov
sub
mov
push
sti
cld
jp
hlt
aad
pop
call
lds
inc
and
jae
gs
inc
pop
insl
mov
sarl
mov
daa
inc
cmpl
adc
pusha
dec
pop
xchg
cmc
mov
sbb
mov
cld
lods
loope
pop
rolb
addl
lea
jo
push
sbb
pop
xor
xor
test
inc
mov
mov
or
sub
dec
shrb
orl
dec
fdivrl
sarl
jno
inc
jb
imulb
inc
or
ret
ljmp
scas
mov
mov
mov
filds
mov
adcl
gs
inc
mov
mov
insl
cmpsb
mov
fdivs
fwait
aad
ret
jmp
and
ficoml
in
stos
sbbl
mov
sub
arpl
inc
cmp
add
inc
inc
or
fstps
mov
leave
jbe
inc
fildll
ret
repnz
imul
push
inc
push
lds
ret
jno
xchg
out
sub
xor
sbb
cld
lret
arpl
fcmovbe
adc
popa
sub
mov
andl
inc
or
pop
push
movsb
dec
faddl
jecxz
dec
pusha
arpl
dec
sub
mov
dec
psubw
xchg
inc
pop
push
loope
jmp
rcl
pop
scas
or
ret
pop
outsb
xor
dec
sahf
mov
cmpsb
mov
mov
int3
xor
sub
lahf
aaa
inc
jge
inc
loopne
lea
stc
xor
loop
sbb
aaa
int3
mov
pop
pop
aaa
loope
pop
ja
movsb
inc
dec
pop
mov
and
jae
dec
add
mov
add
jns,pn
test
cli
xlat
mov
mov
jmp
xor
mov
inc
sub
pop
stos
imul
mov
sbb
insb
cmp
fcmovnbe
shrl
inc
pop
gs
fdivrl
stc
daa
aaa
pop
pop
hlt
test
clc
gs
out
cmpsb
jge
pop
hlt
xchg
fs
sub
sbb
fwait
xchg
jo
mov
out
ja
pop
mov
cmp
push
mov
sub
mov
sbb
xor
pop
dec
data16
add
sub
shlb
fwait
lods
int3
sub
pop
stos
jge
jnp
pop
mov
cs
mov
cmp
popf
nop
inc
sub
dec
add
out
scas
movsl
rcrl
jg
jnp
in
cli
inc
inc
data16
in
sub
cmc
lds
adc
popa
outsl
sub
jnp
and
imul
xlat
ds
leave
insb
lret
test
lcall
fcmove
dec
xor
sub
pop
fiaddl
roll
movsb
inc
cmpsl
mov
inc
jb
push
push
dec
mov
jg
rorl
inc
pop
lods
add
icebp
and
dec
scas
dec
or
pop
cli
inc
push
ror
push
mov
pop
cli
jg
loope
or
stc
mov
mov
mov
shlb
cwtl
mov
jae
xchg
push
inc
jecxz
rcl
cmpsl
out
pop
mov
imul
jnp
cmpsb
or
mov
jmp
dec
stos
inc
pop
ficomps
or
aam
mov
bsf
push
push
mov
cltd
pop
cli
js
xchg
and
mov
pop
mov
leave
adc
sbb
imul
dec
lea
out
jne
pop
lret
push
std
push
mov
idivl
jmp
fs
stc
fildll
aas
dec
xchg
shlb
sbb
and
gs
mov
pop
pop
and
jg
jae
inc
gs
cmp
call
pop
xlat
hlt
mov
mov
into
popl
adc
mov
aas
je
cmp
adc
mov
jne
sbb
in
push
pop
sub
lret
dec
dec
popf
or
sarb
mov
push
sbb
jo
in
repnz
push
ror
inc
and
rorb
cmp
pusha
inc
cmp
sbb
jecxz
pop
inc
into
gs
mov
fidivl
int
cmp
jmp
cs
xchg
nop
inc
push
ja
pop
sar
xchg
ljmp
or
popa
dec
jmp
ret
add
jne
rorb
jns
adc
mov
stc
push
mov
lea
push
add
mov
test
add
cmp
pop
shlb
sub
mov
shlb
rorb
clc
push
mov
xlat
jae
stc
and
imul
enter
cmovo
mov
xor
test
fs
dec
lcall
in
pop
loope
pop
repnz
xchg
xor
fcoms
call
out
cs
push
sub
pop
mov
xor
ret
mov
pushf
mull
or
jb
insb
fisubs
inc
xor
pop
xchg
push
dec
imull
movsl
jl
pop
ljmp
mov
repz
cmp
popf
dec
dec
ficompl
xchg
stc
aaa
pop
imul
div
xor
inc
push
adc
sti
lcall
lahf
and
inc
sti
aam
hlt
inc
cmc
add
cmc
lret
aas
mov
lds
add
insb
jmp
xor
sub
ror
das
das
sbb
rol
fidivl
ret
loop
inc
mov
cmp
push
ret
sbb
aad
jae
scas
dec
mov
dec
fcomip
or
jbe
cs
inc
mov
lret
aaa
lds
jmp
cmpsb
add
test
jp
mov
pop
or
cli
call
aad
imul
into
and
inc
pusha
xlat
push
out
in
inc
bound
cs
pop
pop
cmp
dec
icebp
sahf
mov
pop
add
ret
dec
shll
xchg
sbb
sbb
mov
sub
and
or
mov
pop
aas
pop
push
into
pushf
sub
movsb
adc
sti
add
push
test
dec
pop
daa
inc
xorb
shl
out
push
adc
imul
ret
sbb
iret
sub
jp
mov
pop
push
add
cs
stos
pop
xchg
and
arpl
pop
adc
pop
mov
cld
inc
aad
sahf
xor
mov
mov
xlat
add
inc
adc
loope
sbb
into
cmpsb
sub
outsl
cs
cmpsl
gs
pop
mov
xchg
enter
int3
pop
fucomip
pop
mov
loopne
roll
pop
dec
add
pop
mov
stos
shr
cmpsl
lds
mov
adc
mov
mov
ret
hlt
movsb
jo
jb
mov
imul
sbb
fadd
and
pop
call
xchg
sbbl
test
mov
push
push
loope
sbb
cmp
and
arpl
outsb
dec
scas
stos
sbb
fisttps
nop
cmc
movsl
sub
dec
mov
pop
inc
pop
cmpsb
cmp
orl
xchg
jnp
sub
xchg
ret
mov
mov
mulb
negb
push
pop
cmpsl
fldt
lods
and
dec
pusha
pushf
loopne
mov
std
dec
je
jmp
and
sbb
pop
in
ret
negl
inc
data16
fistl
icebp
lret
iret
adc
in
pushf
xchg
and
inc
and
mov
jl
cltd
xor
pop
pop
pop
adc
inc
in
pop
xchg
loope
push
mov
and
add
fiaddl
js
jne
inc
push
ljmp
es
pushf
dec
repnz
dec
jmp
cli
xlat
mov
in
lock
dec
mov
mov
mov
sub
psubsw
cld
pusha
pop
int3
test
stc
mov
stos
cs
int3
pop
scas
lea
fucomip
jge
or
pusha
pop
push
dec
mov
mov
pop
pusha
shlb
mov
jecxz
js
fadds
dec
cwtl
cld
jge
insb
inc
cmpb
loope
fdiv
cmc
bound
sahf
add
push
aas
push
scas
lods
inc
mov
lahf
jne
mov
and
decl
fnstsw
mov
orl
stos
dec
cmc
and
hlt
stc
lahf
push
adc
cs
add
in
das
lret
out
or
dec
xor
das
pop
es
sbb
and
icebp
cmc
stos
enter
into
add
xchg
pop
sub
mov
adc
icebp
dec
cmp
dec
xchg
pop
std
mov
and
adc
adc
mov
cmp
je
inc
aas
mov
sbb
cli
stc
and
and
mov
mov
lret
shr
pop
cmc
in
lods
addr16
push
jge
or
loopne
xor
or
arpl
mov
enter
xchg
outsl
cwtl
xor
aas
jae
or
inc
je
sbbl
add
gs
add
cwtl
jmp
push
inc
adcl
stos
cmp
inc
mov
gs
les
adc
shl
mov
sbb
or
add
pop
jmp
jno
cmpsl
inc
dec
outsb
loopne
add
inc
pop
inc
sub
clc
jbe
cmc
addb
adc
cli
cs
test
jb
pop
imul
imul
cmp
cs
dec
jge
sbb
jp
pop
push
call
es
movw
dec
ds
lahf
lahf
mov
scas
cmp
mov
sbb
adc
adc
scas
jmp
sub
lret
movsl
push
int3
lds
pop
jb
cli
xchg
cmpsl
dec
pop
imul
nop
pusha
jns
lea
jae
inc
mov
fxch
inc
lret
add
adc
ret
push
test
incl
repz
lds
push
jae
icebp
pop
inc
xor
ret
rep
sub
sbb
inc
adc
jo
xchg
ror
mov
clc
fildll
fiadds
xchg
dec
das
adc
je
xlat
fnstcw
inc
inc
and
pop
xorb
pop
fists
xchg
je
inc
push
push
call
pop
mov
sbb
dec
adcb
cwtl
movsl
dec
xchg
mov
dec
rorl
cs
insb
lahf
test
arpl
outsb
stos
int3
fwait
dec
ret
adc
xchg
in
mov
inc
stos
sbb
cwtl
shl
push
movsb
mov
dec
call
mov
jp
sti
mov
or
xor
rcll
dec
push
push
xor
mov
cli
push
mov
mov
mov
pop
fmul
aas
ds
and
jo
shlb
gs
adcl
pusha
cmp
mov
inc
mov
pop
cmp
mov
lret
leave
dec
sub
pusha
xchg
cmp
clc
repnz
pop
ficomps
mov
mov
inc
insb
push
sub
sbb
outsl
mov
push
jne
xchg
jns
insl
adc
mov
push
addr16
out
add
aam
loop
push
int
loopne
clc
loope
adc
pop
adc
lret
test
jmp
stos
dec
xchg
xchg
fs
lds
adc
or
orl
rcll
add
sub
mov
jno
test
pop
inc
nop
mov
pop
inc
mov
adc
int3
mov
scas
es
push
cwtl
xchg
fmul
lock
xchg
adc
mov
dec
push
add
push
mov
loop
mov
jne
aad
inc
add
das
lret
mov
lret
int
fsubrs
cmp
pop
xchg
mov
data16
lods
fsubrs
or
movsl
leave
mov
mov
xchg
jbe
pusha
cmp
shrl
fs
mov
in
xchg
mov
jg
push
inc
jmp
cmp
push
in
lds
add
int
jbe
cmp
call
shrd
addr16
lret
fidivrs
nop
xor
add
push
push
es
or
call
roll
push
pop
mov
xor
jns
dec
test
cmp
add
pop
movsb
lods
jo
lods
xchg
imul
or
inc
add
mov
xor
jns
inc
fnsave
dec
les
or
pop
mov
daa
add
mov
mov
inc
pop
mov
ss
lds
or
cmc
pop
inc
mov
push
xchg
mov
or
pusha
sbb
add
rol
adc
cwtl
mov
jle
adc
cmp
in
add
dec
lret
test
sub
mov
pop
sahf
push
cmpsb
add
pop
push
sbb
test
cmp
push
mov
push
adc
jne
or
cmpsl
pop
lret
adc
fnsave
xlat
cmpsb
jbe
outsl
imul
cltd
ror
aaa
mov
faddl
mov
icebp
popa
es
pop
mov
dec
inc
pop
loop
push
movsl
xor
adc
movsl
nop
sub
gs
inc
inc
mov
xchg
inc
add
and
mov
or
sbb
cmp
test
sbb
js
cmp
jae
je
inc
xchg
js
push
fcoms
int3
sub
movsb
loope
movsb
cmp
or
popa
cmp
and
inc
loopne
push
jle
inc
sub
movsl
sahf
sbb
leave
in
and
lods
add
jo
xlat
fstpt
dec
pop
pop
inc
movsl
jno
mov
std
pop
imul
sub
pop
xchg
pop
cmp
testl
sbb
dec
push
or
push
pop
mov
popa
mov
pusha
mov
and
lods
xchg
shlb
or
jmp
stos
hlt
push
out
mov
cmp
dec
push
cmpsb
std
into
pop
insb
cmp
dec
bound
repz
mov
cli
xchg
push
cmp
mov
push
sub
dec
inc
in
pop
jl
addl
mov
stos
jb
insb
mov
rorl
pop
pop
mov
sbb
loope
or
insl
es
arpl
add
lods
cltd
addr16
sub
sar
outsl
adc
adc
or
adc
loope
add
dec
mov
jg
ficoms
xchg
fs
lock
dec
daa
add
and
nop
clc
xchg
pop
pusha
inc
xchg
repz
pop
hlt
or
pop
cmp
jg
sub
loopne
mov
mov
mov
mov
adc
notl
mov
jae
sub
pop
js
lahf
mov
pop
aad
xor
sub
in
sub
out
xchg
les
mov
jne
lret
add
mov
in
test
stos
pop
xor
rcll
add
loope
enter
pop
popf
cmp
cmpsb
outsl
cmp
push
shlb
cs
rcll
inc
pop
in
sbb
push
add
cmp
lods
mov
out
incb
cmp
cmp
pop
pop
jl
ret
add
cmp
sbb
inc
out
rcrb
cs
pop
inc
sub
movsl
jmp
sub
fldl
dec
cmp
stos
enter
repz
xchg
sub
cmc
push
sub
push
jl
jmp
bound
test
cmp
pop
pop
data16
call
je
push
inc
xlat
dec
xchg
call
dec
cmp
js
dec
mov
fcompl
adc
mov
mov
jp
and
out
xor
outsb
lock
mov
cltd
push
mov
pop
insb
ss
mov
and
dec
push
inc
xor
daa
jle
xlat
and
pop
pop
out
sub
mov
out
test
loopne
add
enter
ds
cmp
flds
cs
loopne
push
and
mov
or
js
psrld
push
inc
in
in
jae
shlb
xor
push
stos
fdivrs
insl
push
enter
fwait
push
mov
cltd
and
sbb
push
stc
inc
test
lea
loope
js
dec
add
gs
rcrb
fld
loopne
lea
sarl
lock
mov
add
xor
sub
jmp
aas
pop
fldl
fwait
or
loopne
xor
sahf
jae
adc
cmpb
mov
jmp
push
inc
pop
leave
mov
mov
xchg
fists
cmp
dec
xor
pop
data16
xchg
or
mov
ljmp
mov
cs
xorb
movsl
fdivs
bswap
ljmp
popa
pop
xchg
sarl
ret
repz
ja
adc
mov
sub
shlb
or
xor
push
inc
adc
mov
adc
lea
sbb
movsl
mov
mov
cmp
jp
push
xor
and
outsb
movl
mov
mov
sahf
scas
or
push
sub
and
lods
stos
fisubl
mov
call
xchg
cmpl
push
pop
adc
mov
or
test
stc
mov
fnsave
dec
pop
add
lock
adc
add
insl
dec
lahf
cmp
dec
fistpl
cmpl
mov
mov
int3
add
stos
out
xor
addl
mov
frstor
fildl
push
jmp
clc
pop
repz
jne
cmp
lret
push
mov
pop
mov
push
jmp
shlb
pop
gs
dec
mov
enter
add
dec
ja
movsl
cwtl
xchg
or
or
cmpb
mov
dec
arpl
lea
mov
and
pop
lret
cmp
test
incl
xorl
adc
loope
pop
test
pop
cmc
xchg
sub
pop
subl
add
jb
add
mov
jbe
data16
int
xchg
cmp
add
mov
cmp
or
mov
mov
outsb
cmpsb
sbb
fidivrs
fsubp
aas
or
stos
dec
movsl
aam
fimuls
roll
pop
mov
enter
pop
cs
add
mov
sbb
pop
inc
stc
mov
or
mov
inc
rcrb
inc
std
mov
ja
in
das
jae,pn
push
mov
dec
mov
dec
std
imul
mov
stc
xchg
icebp
mov
adc
pop
xlat
mov
mov
sub
test
int
add
jl
call
xchg
xchg
lods
pop
inc
movsl
mov
mov
loope
mov
lret
sbb
cld
xor
bswap
jne
jmp
ljmp
add
mov
pop
or
pusha
pop
lods
loopne
dec
dec
add
lods
sbb
repnz
ret
inc
add
jg
inc
aam
mov
or
jno
sti
mov
mov
mov
fimull
add
sbb
push
pop
mov
cld
test
pushf
roll
dec
adc
pop
test
add
adc
jae
ds
inc
in
mov
ja
repnz
dec
xlat
push
mov
adc
pop
inc
mov
arpl
push
rolb
daa
lahf
call
mov
or
leave
lret
fdiv
jge
inc
imul
stos
sub
cmp
add
stc
or
push
mov
cmp
cs
xchg
push
repnz
xchg
fwait
hlt
mov
push
movsb
out
push
adc
push
pusha
stc
lea
pop
repz
imul
int3
mov
sbb
fdivrs
divl
or
dec
movsl
pop
mov
cs
enter
repz
jnp
insb
je
push
fdivs
mov
test
or
mov
inc
rcrl
xor
jge
xor
stos
popf
testb
dec
add
jne
xchg
fbld
mov
or
movsb
loop
inc
cmp
leave
jns
jne
arpl
aas
pop
xchg
mov
outsb
mov
jo
push
mov
loopne
ret
rclb
shrb
inc
lret
test
mov
stc
and
cmpsb
scas
mov
cwtl
aas
movsl
out
mov
cmc
pop
mov
push
sbb
mov
movl
es
mov
push
xor
imul
data16
pushl
push
jnp
and
push
dec
stos
fxch
cmpsb
mov
dec
and
shl
enter
cmp
std
test
sbb
jecxz
xchg
push
insb
push
xchg
rorb
jecxz
mov
lret
mov
sub
sbb
loope
sub
cs
rcrb
shrb
insl
xchg
dec
out
mov
xchg
pop
jns
ljmp
repz
dec
pop
jnp
stos
movsb
push
cmp
adc
push
stos
mov
cmp
pop
inc
add
push
insb
or
ja
or
pop
push
push
inc
mov
imul
lock
imul
adc
mov
pop
loope
jp
in
les
pop
jae
pusha
push
flds
inc
idiv
mov
dec
loop
call
je
enter
jae
stos
and
cwtl
mov
ds
dec
repz
insl
sbb
mov
sti
fwait
call
je,pn
stos
fadds
add
fdivrs
push
iret
and
dec
int3
push
inc
dec
dec
gs
cmp
enter
pop
xchg
std
mov
cmp
or
sbb
cmp
adc
lcall
jnp
pop
test
lods
xlat
imul
mov
lret
mov
call
ret
cld
cs
fs
int
pop
pop
std
adc
cltd
pushf
pop
call
stos
nop
cmc
mov
in
push
xchg
movsl
ja
push
sbb
dec
dec
jnp
mov
jne
rcrb
data16
mov
gs
idiv
into
inc
xor
paddd
sub
xchg
and
shrl
btc
push
in
cs
inc
inc
fidivs
jmp
xchg
lcall
or
mov
loopne
mov
add
xchg
mov
lods
fisubs
pop
test
dec
inc
xor
shll
pop
mov
inc
xchg
dec
inc
cmpsb
and
jmp
sub
pop
sti
ljmp
addr16
jmp
nop
sbb
std
ficompl
jne
lahf
cli
loopne
fimull
xor
mov
pop
mov
xor
sub
dec
out
jle
or
sub
or
out
aaa
push
jp
push
cmp
push
mov
mov
fwait
cs
cmpsb
addb
sub
lret
or
jae
dec
dec
pusha
or
popf
sub
push
out
mov
push
rolb
sbb
adc
xor
add
in
add
dec
mov
pop
out
loop
cs
into
inc
lret
add
daa
pop
leave
cmp
enter
or
and
ljmp
xchg
xlat
jmp
fisubrl
cmpsl
mov
pop
ficoms
xor
add
aas
pop
outsl
cmp
lds
pop
rorl
pop
mov
aad
pop
pusha
or
in
ja
cmp
ficoml
sbb
cwtl
sti
and
or
cltd
and
inc
sarb
push
jae,pn
adc
idiv
leave
stos
into
inc
dec
pop
lods
or
or
scas
sub
rcrb
stc
insl
push
imul
insb
pop
mov
outsl
mov
adc
jns
sbbl
xor
jno
dec
add
xor
or
ja
cmp
fisubrs
inc
pusha
dec
or
mov
pop
ja
out
psubw
lcall
and
mov
push
clc
jnp
push
adc
xchg
imul
aas
cs
cmpsb
icebp
test
or
inc
xor
add
pop
sbb
xchg
mov
dec
mov
insl
in
jb
jno
sub
push
xor
sbb
mov
pop
inc
sbb
sub
in
push
lods
xlat
sahf
cmpb
add
push
shrb
inc
les
xlat
sub
aas
pop
inc
mov
or
ja
lods
loopne
ja
push
or
adc
xlat
adc
test
in
adc
fimuls
and
rcrl
xchg
add
add
push
mov
add
iret
popf
out
mov
inc
sbb
fadd
fldl
movl
jae
addb
shll
jnp
and
jg
cmp
and
mov
enter
hlt
dec
xchg
test
mov
xor
mov
mov
or
adc
scas
mov
or
cmp
mov
xchg
ljmp
clc
add
loopne
lahf
or
cmpsl
loop
dec
ffreep
pop
leave
cs
hlt
or
sub
lahf
aas
jb
xor
stc
mov
pusha
or
mov
mov
add
ret
dec
inc
outsl
sahf
rolb
into
pop
push
leave
out
mov
mov
fsubs
mov
decb
loope
sub
pusha
pop
mov
popf
popa
or
fwait
cltd
pop
add
xlat
xor
pop
push
pop
or
add
jne
lds
mov
shr
xor
in
lods
out
xchg
shrb
sarb
xchg
lods
test
roll
pop
jmp
ret
mov
lret
in
loopne
add
cs
pop
inc
cmp
jae
roll
jl,pn
lcall
int
sub
pop
insb
mov
cli
mov
dec
dec
dec
fcoms
adc
ss
fs
add
and
lahf
es
fildl
fnstcw
add
insl
fdivs
add
fucomip
out
repnz
sub
mov
jae
icebp
js
cwtl
ret
and
push
xchg
or
std
movb
arpl
mov
pop
jmp
loop
addl
lds
popa
push
loopne
rcll
stc
lds
cmp
push
or
imul
dec
cli
push
xor
pop
pop
incl
and
fsubrs
mov
dec
jns
mov
cmp
mov
into
jg
cmpsl
pusha
shl
add
loope
shlb
mov
jae
nop
arpl
in
pop
aam
add
sub
jg
cmp
sbb
fsubrs
mov
pop
popf
inc
or
lret
stos
add
or
loope
mov
lds
dec
cmp
js
fldcw
sarb
push
cld
add
pushf
scas
sub
pop
mov
lock
ret
jl
pop
adc
sbb
cmp
lahf
shll
leave
call
dec
dec
aas
cmp
mov
push
xchg
leave
js
stc
dec
pop
add
aas
add
movsb
in
pop
xchg
rorl
or
popa
pop
into
aaa
mov
popa
movsl
push
jmp
insl
shl
std
lds
loope
and
cs
bound
xchg
pop
pusha
mov
or
insb
jo
adc
mov
cwtl
push
mov
dec
pop
sbb
test
insb
rorl
lahf
push
fldt
xchg
sub
insb
in
mov
pop
add
fisubs
xchg
iret
call
mov
mov
inc
mov
dec
popa
sti
add
cmp
cwtl
pop
ss
enter
mov
add
jp
dec
cs
add
push
dec
dec
pop
sub
pusha
dec
push
jecxz
xchg
dec
into
pop
call
divb
or
fs
add
or
cmc
ljmp
mov
push
enter
and
and
lods
sahf
shll
pop
xchg
rcll
cmp
sbb
sarl
cmp
inc
and
inc
sub
mov
cmpb
cltd
out
mov
cmp
adc
sbb
psubusw
mov
les
xchg
leave
sbb
xor
adc
push
cs
lcall
sbb
pop
add
adc
xor
lea
xchg
inc
sbb
ds
hlt
and
push
ss
dec
out
xor
cmovb
lcall
add
adc
stc
inc
adc
leave
inc
shrl
aas
test
daa
xchg
leave
xchg
lahf
fstpt
inc
and
cmpsl
sbb
cs
pop
std
dec
cmp
outsl
cmp
stc
and
leave
inc
or
inc
decb
into
xchg
aas
add
pop
mov
icebp
ss
enter
ret
mov
pop
out
jl
insb
jno
mov
outsl
pop
sbb
enter
iret
aaa
cs
xchg
test
mov
lret
sub
jnp
arpl
add
add
aam
data16
cmp
inc
insb
or
push
add
cmp
xlat
mov
add
cmc
icebp
pusha
aas
pop
push
pop
mov
pop
daa
pop
and
pop
mov
imul
adc
rcrb
pop
xchg
cwtl
pop
pop
pop
mov
dec
out
sub
push
mov
mov
inc
test
dec
sub
aam
push
jno
lret
aaa
shrl
inc
lds
adc
xchg
popa
jb
mov
mov
push
dec
mov
mov
or
cmp
leave
in
add
dec
mov
pop
inc
aad
mov
pop
pushf
add
fcompl
lods
je
imulb
sub
lahf
and
out
lret
cmc
pop
cwtl
lret
sbb
stos
add
sub
xchg
lea
pop
adc
test
dec
sub
cmp
jp
xchg
in
jbe
inc
test
cld
leave
lods
sbb
and
pop
cmpb
call
sub
aas
add
dec
cmpsb
or
cmp
push
push
out
mov
loop
stos
popf
notb
stos
jmp
addr16
lea
inc
xlat
jnp
scas
outsb
shrl
push
push
push
loope
ror
or
dec
sbb
xlat
repnz
xchg
inc
data16
add
jmp
xor
loopne
jo
xchg
inc
push
mov
xor
add
jo
push
dec
pop
out
pop
mov
and
mov
dec
mov
fimuls
dec
jne
mov
push
inc
jnp
pop
fwait
mov
aas
pop
jne
in
cmp
lahf
xor
lahf
pop
pop
inc
xor
add
cmp
aad
cmp
mov
push
cwtl
adc
xor
pop
rcrb
int3
out
mov
insl
pop
negl
or
xor
adc
into
call
mov
aas
mov
or
scas
enter
inc
dec
sbb
push
sbbb
pusha
pop
jb
aas
push
or
push
inc
dec
lahf
mov
push
sub
not
inc
clc
jecxz
inc
call
aad
cmp
cmp
push
lds
xor
in
inc
mov
stos
sahf
call
adc
jnp
inc
xlat
xlat
enter
mov
imul
xchg
or
mov
push
mov
jmp
xor
andb
pop
imul
and
mov
lods
push
pop
push
and
push
nop
mov
cmp
je
mov
insb
xchg
push
loope
fidivrl
push
gs
pop
and
js
dec
jmp
test
add
fs
mov
dec
and
cmpsl
adc
push
mov
mov
cmp
pop
xchg
sti
popa
pop
xor
daa
add
dec
push
pop
push
jmp
pop
addb
cmpsl
add
icebp
and
divb
cwtl
dec
sbb
or
ja
push
sahf
repz
mov
or
popf
add
loopne
sarl
fcomip
fdivr
loopne
insl
and
sti
mov
xor
push
fists
lods
inc
sbbl
or
add
mov
mov
ficoms
push
out
dec
idiv
out
adc
push
clc
movsb
out
lret
in
scas
mov
and
inc
dec
xchg
or
shll
push
jg
lods
inc
pusha
jo
push
call
scas
mov
mov
pop
lock
inc
dec
ja
stos
fwait
mov
lret
sub
and
inc
test
push
adc
sub
mov
xor
inc
mov
pusha
arpl
jae
or
shll
mov
jg
in
or
in
jmp
push
and
mov
icebp
mov
pop
insl
lea
movsl
cs
or
cmp
xor
inc
jg
lret
mov
cwtl
daa
mov
adc
js
adc
int3
testb
adc
xchg
cmp
mov
imul
sahf
pop
push
pop
cmpsw
loopne
in
push
mov
jo
jmp
sub
jmp
dec
into
sub
jl
mov
mov
test
pop
fdivrs
imul
xor
aad
jmp
std
mov
gs
or
adc
mov
adc
dec
cmp
mov
pop
adc
cmpsb
aas
iret
push
cmpsb
mov
sbb
xchg
lock
and
cmp
jl
fucomip
jg
jmp
in
cli
cmpsl
pop
repnz
jns,pn
xchg
stos
sbb
or
aas
pop
pop
psubsw
loopne
sarl
data16
sbb
cld
stos
imul
xchg
jp
mov
and
aas
pop
addr16
jae
aad
lock
fsubrs
iret
adc
mov
dec
je
sbb
lds
jno
fs
inc
mov
lahf
cmpb
jge
xor
push
and
rorb
je
aad
xchg
push
stos
xor
imul
xchg
js
test
mov
pop
add
mov
mov
dec
adc
cmp
leave
sbb
outsb
pop
pusha
cmp
nop
adc
imul
arpl
dec
jbe
xchg
xor
call
mov
jmp
inc
in
cmpsb
aad
xor
cmpsb
push
inc
addl
daa
add
jo
inc
sbb
adc
clc
dec
dec
xor
xchg
pop
inc
frstor
inc
or
cmpsb
lret
sbb
imul
addl
call
pop
lret
stc
dec
scas
push
pop
mov
mov
adcb
je
aas
and
inc
and
sbb
lret
out
sub
dec
and
int3
push
pop
js
jmp
in
xlat
xchg
sbb
mov
rcrb
int3
loop,pn
stos
mov
lock
cmp
scas
sahf
test
or
les
mov
aas
leave
sub
xlat
loope
jmp
lock
sbb
sbb
in
push
mov
and
leave
lds
mov
cwtl
push
push
pop
popa
ss
jb
jno
and
mov
sbb
ja
lcall
lahf
pop
pusha
loopne
mov
sbb
cmpsb
mov
fstl
mov
sbb
pop
pop
lods
mov
cwtl
repnz
aam
aas
pop
ja
or
mov
sbb
mov
addr16
cmp
jg
sbbb
sub
add
int
ljmp
inc
icebp
sbb
ret
dec
xchg
add
lea
dec
mov
in
inc
inc
mov
dec
cltd
in
jo
call
dec
lock
popf
jb
and
push
stc
jo
push
sti
dec
adc
movsl
sbb
fimuls
cmpsl
stos
dec
int
in
fstps
mov
or
lods
clc
jo
push
xor
mov
and
mov
and
mov
push
adc
inc
pop
int
sbb
mov
repz
mov
add
push
dec
inc
mov
push
sbbl
leave
hlt
push
xlat
push
inc
pop
sub
fisubrs
xor
sub
jo
lock
jg
fidivrs
aas
cs
insl
sbb
gs
jecxz
addl
call
rorb
les
mov
xchg
pop
aaa
inc
push
and
pusha
cmp
pop
add
and
or
cs
cmc
mov
in
add
scas
fistpl
sbb
in
push
rcrl
fildl
jae
bound
je
popf
xor
mov
dec
lea
into
xlat
sub
addr16
daa
push
mov
xchg
les
out
repz
frstor
scas
sarb
xchg
gs
add
mov
sbb
lahf
ret
aas
out
lret
and
into
adc
mov
pop
pusha
or
xchg
push
pop
xor
dec
mov
in
cmp
mov
jbe
mov
dec
and
jbe
dec
cmp
jno,pn
push
pop
xor
aas
hlt
dec
jmp
inc
mov
xlat
pop
adc
mov
arpl
push
cmp
lret
outsb
fbld
or
orb
mov
stos
xchg
or
pop
outsl
pop
cmpsb
sysexit
xor
faddl
ss
sbb
pop
xchg
push
ja
nop
stos
js
pop
into
jns
jge
inc
cs
rclb
xor
decb
xor
insb
jbe
and
pop
repnz
scas
xchg
ror
loopne
dec
repz
fnstenv
push
xor
ss
mov
adc
push
cld
xchg
rolb
arpl
add
jl
sub
adc
adcb
pop
addr16
mov
xchg
jae
loope
in
xchg
into
mov
xor
pusha
int3
scas
or
test
adc
and
inc
jecxz
rcr
adc
and
repz
mov
mov
dec
sbb
ja
fimull
aas
mov
aas
jecxz
add
cmpsb
dec
stos
and
fs
js
out
ret
pop
jnp
cmpsb
cs
mov
test
and
mov
movsl
ret
arpl
dec
adc
cmpsb
and
push
insb
nop
pop
aas
push
sub
push
aam
lret
dec
inc
mov
sub
test
sbb
xor
das
pushl
sarb
add
jbe
lds
xchg
xchg
in
pop
stc
stc
call
mov
sti
ficompl
hlt
mov
inc
pop
xor
or
rolb
pushf
subl
or
cmp
dec
inc
xchg
imul
int
in
or
adc
int
ss
ljmp
pop
sbb
or
push
arpl
out
sti
add
xchg
faddl
mov
mov
mov
xchg
idivb
xchg
cmp
inc
enter
popa
enter
popa
mov
das
ja
mov
mov
mov
lcall
lds
mov
add
fmuls
movsb
lret
jmp
je
dec
adcb
or
cmp
lret
mov
cmpsb
mov
xchg
inc
insl
mov
jmp
aad
pop
jmp
adc
loope
xchg
ret
cld
aaa
insb
in
into
adc
mov
and
dec
test
stos
ret
cmp
or
or
inc
iret
leave
lret
pop
xchg
aad
pop
jae
test
cs
cmp
sub
pop
push
arpl
lret
out
and
sbb
cmp
sub
jecxz
lock
jae
mov
or
fisubrl
shlb
mov
mov
in
mov
in
fwait
call
xor
cmpsb
stos
sarb
sub
adc
pusha
ss
sbb
dec
jae
mov
mov
mov
sete
cmc
jp
pop
or
mov
sbbl
sbbb
ficoml
inc
jl
fsubs
xlat
mov
mov
lock
fildl
testl
in
sbb
repz
jo
stos
imul
fdivl
inc
sbb
cli
push
lret
data16
sub
insl
ret
outsb
movb
sarb
jge
fisubrl
ss
dec
ret
cmp
insl
stos
add
xchg
cmp
insb
xor
stc
into
lock
sub
jmp
cmp
dec
clc
stos
imul
filds
out
ja
push
popf
push
xor
arpl
loopne
jmp
insl
push
mov
or
movsb
push
out
lods
mov
inc
xchg
push
dec
pop
sub
mov
xor
cmovbe
cmpsb
pop
cmp
xchg
rolb
insl
ds
gs
push
dec
jo
dec
imul
insb
pop
mov
lret
insl
jmp
xchg
dec
out
scas
aam
cmpsb
jo
sbb
rorb
jp
aas
fnstenv
out
cs
adc
sbb
cs
and
imul
insb
xchg
dec
cmp
clc
jne
push
xorl
sarb
mov
stc
gs
fimuls
push
pop
cmpb
xchg
mov
cmp
sbb
and
gs
lods
add
jle
inc
mov
rcrb
outsl
scas
pop
jmp
jmp
ret
inc
imul
adc
cmpsb
pop
cmc
stos
dec
clc
cs
imul
insb
and
or
sti
and
cmp
push
push
test
aas
fmull
push
inc
ja
pop
sbb
mov
jns
lahf
push
sbb
js
clc
lret
leave
dec
inc
out
jg
or
mov
dec
xchg
gs
jg
shlb
jmp
lods
adc
js
je
jnp
inc
stos
pop
xchg
scas
leave
lea
cld
call
inc
bound
adc
add
sub
pop
add
and
push
dec
pusha
clc
sub
mov
pop
out
pop
dec
and
push
call
mov
je
inc
or
insl
dec
es
lret
cmp
js
loopne
cs
or
xor
out
and
mov
sti
xor
dec
mov
dec
repz
loope
pop
dec
cwtl
enter
pop
push
in
pop
popa
jmp
sub
xor
mov
jl
sbb
cs
ja
adc
mov
test
jg
sbb
jns
jne
sub
push
add
cs
vfrczss
xlat
mov
std
insl
aad
fmulp
cwtl
int3
cmp
popa
mov
lock
ss
pop
fisttps
jmp
xchg
in
pop
jp
xchg
scas
push
dec
add
loopne
insb
dec
notl
cmp
dec
mov
loop
repz
mov
push
je
inc
ret
cmp
mov
ss
shrb
or
call
sbb
mov
pusha
cmp
xorl
lea
divb
pop
dec
rcrl
add
outsl
shll
fwait
push
movsl
les
mov
or
imul
jae
int3
sub
lcall
pop
fwait
pop
adcl
fstps
mov
lret
add
aad
int
nop
fsubrs
cmc
jmp
outsb
inc
sar
inc
loop
fbld
jae
xchg
xor
nop
push
add
jl
or
pop
idiv
xor
jecxz
shrl
mov
xlat
fsub
cmc
daa
mov
jmp
sbb
data16
cld
bnd
add
dec
dec
iret
xor
mov
inc
sbb
cs
pop
xor
push
ss
imul
addl
pop
jae
mov
and
cwtl
pop
aas
cmp
mov
inc
add
icebp
js
repz
jmp
sub
push
pop
xchg
mov
pop
jmp
pop
aam
jmp
cwtl
and
pop
mov
mov
cmp
stc
shl
dec
xchg
push
rolb
cwtl
nop
ljmp
ss
mov
gs
fisttps
es
adc
adc
mov
mov
dec
mov
lds
scas
shlb
push
inc
daa
mov
imul
stos
aad
xchg
xchg
nop
sub
mov
jge
cmpl
fldl
mov
mov
je
test
jae
out
ret
aaa
sti
out
in
cwtl
cli
and
data16
or
add
leave
mov
adc
mov
dec
lret
pop
add
pop
mov
lea
or
dec
pop
xchg
jno
int3
std
cs
jnp
cmp
cmp
xchg
lods
mov
xchg
or
add
cmp
pop
mov
inc
scas
pop
sbb
xchg
jae
lock
das
decl
cmp
aas
lock
int3
and
rcr
ljmp
add
movsb
xchg
xchg
pusha
cmp
scas
scas
cmp
lods
cmp
push
rcl
jecxz
adc
adc
scas
mov
mov
lret
das
and
jnp
aad
push
sbb
adc
adc
sub
cltd
inc
add
mov
cwtl
addr16
xchg
test
dec
sbb
daa
daa
dec
xor
aad
push
xchg
sbb
cmp
sub
xchg
insb
xor
daa
adc
leave
mov
arpl
and
pop
out
dec
push
inc
cmc
sti
pop
sub
dec
gs
xor
lods
sbb
add
out
jl
push
mov
sbb
jnp
scas
in
incb
inc
jmp
and
out
repz
adc
mov
idivb
movsb
mov
xchg
stos
sub
das
adc
addb
jo
pop
scas
ss
jae
movsb
out
movsl
test
mov
lods
scas
jge
pop
lds
xor
js
xor
fcoml
les
add
dec
pusha
cwtl
pusha
out
push
sbb
movsb
fisttpl
or
lock
gs
xchg
and
lahf
push
sbb
push
xchg
push
push
mov
gs
cmp
popa
jmp
stos
mov
insl
cmp
jge
sbb
sub
mov
pop
mov
mov
cs
xor
cmp
dec
out
addr16
mov
jg
pop
adc
xor
dec
sarb
add
jge
cmp
aam
addr16
leave
dec
ljmp
sub
lock
xor
orl
push
cmp
repnz
das
adc
or
pop
cmpsl
xlat
and
pop
jo
xor
mov
sysret
lock
test
push
pop
dec
pop
pop
xchg
cmpsl
jl
mov
imul
rcl
push
lcall
jb
clc
mov
dec
sub
pop
stos
dec
inc
test
mov
xchg
mov
dec
jl
icebp
cmpsb
xor
lods
inc
mov
test
pop
push
mov
sahf
inc
jno
out
xchg
jnp
repz
outsb
add
pop
lret
ja
int
cmp
aam
mov
push
xor
mov
dec
and
or
decb
es
jg
decb
cmc
sub
pop
xor
dec
inc
scas
sarl
sub
hlt
dec
pop
loop
mov
xor
mull
pushf
inc
or
inc
outsb
bound
cmpsb
inc
jae
test
sub
cs
cli
ds
rorb
dec
cmp
ljmp
cs
cmc
pop
pop
stos
popf
push
fbld
or
inc
cwtl
jno
ret
lods
jg
fistps
xor
xor
cmc
mov
shrl
enter
push
fiadds
imul
lahf
add
mov
xor
inc
imul
xchg
sbb
stc
dec
xchg
loope
dec
push
shlb
test
dec
push
push
dec
push
fsubrp
add
xchg
add
adcl
cmc
push
sub
push
push
fldcw
repnz
mov
dec
lret
push
sbb
and
jo
jp
fcmove
jmp
jecxz
xor
lock
cmp
xchg
loope
push
jno
add
cmc
icebp
imul
vdivsd
scas
lsl
stc
sub
gs
push
out
gs
mov
iret
cmp
lock
or
mov
pop
imul
loopne
jae
ror
dec
mov
mov
cmp
sahf
sarb
add
and
mov
push
out
mov
je
in
cmp
add
push
inc
outsl
and
push
imul
jecxz
sbb
and
dec
cmpsl
ljmp
stos
sub
mulb
push
sub
add
cmpsb
shr
clc
mov
pusha
and
add
mov
loope
mov
inc
ja
ror
cmc
xorl
mov
imul
and
cmpsb
xlat
add
mov
jbe
adc
outsl
and
stos
cs
sub
data16
in
pop
cmpsb
addr16
insb
cltd
or
gs
pop
mov
xlat
dec
mov
fidivl
outsb
es
add
les
outsb
inc
insl
pop
arpl
adcl
xchg
or
pusha
int
mov
pusha
lods
xchg
adc
shl
mov
mov
fdivrs
ds
leave
sti
ss
mov
loope
mov
in
push
add
sub
popa
or
cmpsb
repz
mov
lea
jbe
pop
cmp
cmp
push
dec
imul
xor
inc
dec
pop
call
dec
adc
cwtl
sbb
mov
xor
add
insl
inc
sbbl
lods
mov
xchg
outsl
ret
push
movsl
jae
jmp
jns
pop
pop
mov
in
mov
or
imul
lret
test
xchg
cs
inc
push
inc
outsb
shll
cmp
mov
stc
sub
xor
leave
rcl
or
std
mov
add
adc
daa
jne
inc
mov
enter
push
inc
cmp
aaa
pop
inc
push
out
roll
aaa
xchg
lods
mov
add
cmp
xchg
jg
js
cs
scas
push
inc
add
mov
test
inc
cmpsl
aad
lret
lret
jns,pn
cmpsb
mov
ret
sub
push
cltd
scas
rclb
push
add
movsl
push
push
js
cs
aas
add
sub
add
mov
aaa
scas
cmpsb
push
adc
shl
xlat
ror
mov
sar
lret
out
push
dec
in
sbb
adcl
pop
jmp
cmp
pop
adc
lahf
push
pop
nop
jne
subb
fsubrl
arpl
xchg
bnd
mov
sarl
pushl
and
sbb
aas
sahf
add
jmp
xchg
daa
add
xor
sbb
xchg
mov
sub
mov
inc
stc
cmpsb
add
or
outsb
pop
cmp
and
mov
jge
jge
xchg
xchg
add
fsubs
sub
xchg
push
inc
mov
push
es
aas
mov
sbb
shr
jns
or
cmp
sbb
fwait
push
add
cmp
inc
aas
pop
push
sub
dec
or
mov
push
push
push
push
or
out
outsb
pushf
stos
sbb
push
add
xor
push
pop
mov
into
punpckhbw
mov
cmp
cmp
and
sub
std
push
mov
cwtl
lret
mov
and
xor
rorl
cmp
xor
stc
inc
sbb
int3
push
repz
dec
or
sbb
movsl
out
in
push
lods
pop
out
dec
loope
xlat
shlb
lods
mov
lods
imul
adc
jnp
sbb
mov
mov
and
rol
dec
cmp
fbld
mov
add
pop
movsb
jns
mul
mov
jecxz
mov
jecxz
dec
xchg
out
sbb
or
lea
mov
sub
ficoms
sbb
in
pop
cmp
xchg
push
dec
pop
jmp
pop
fwait
inc
dec
jecxz
jbe
jb
pop
mov
in
orb
adc
int
pushf
push
sbb
mov
sub
outsb
scas
sub
ficomps
xor
mov
je
stos
adc
or
in
and
test
cmc
int3
data16
out
jge
pop
pop
jo
cmp
popa
pop
cs
mov
ficompl
pop
ljmp
push
daa
jae
insb
ret
or
cmp
jecxz
sbb
imul
cmp
dec
cwtl
sbb
push
jmp
jmp
pop
fnstenv
les
mov
mull
jg
lods
jg
push
ja
and
dec
jle
cmp
mov
and
push
and
in
loopne
lea
adc
add
inc
mov
ret
dec
lods
das
clc
negl
sub
pop
mov
pop
jb,pt
ss
lods
push
les
pop
or
xor
vpavgw
xor
daa
inc
push
or
lret
leave
push
or
dec
push
adc
addb
mov
je
mov
mov
leave
pop
jmp
mov
push
xor
inc
dec
xor
mov
dec
mov
pop
jge
mov
pop
dec
mov
jle
in
movsl
mov
and
or
or
adc
cmp
or
cli
xchg
pop
push
inc
ficoms
in
pushf
pop
leave
outsl
fdiv
cwtl
pop
push
fcoms
movsl
push
inc
mov
loope
stos
and
aaa
jmp
xchg
dec
rclb
pop
int3
push
test
and
mov
js
xchg
daa
out
movsl
sub
lret
clc
sub
repz
in
fcoms
sbb
inc
jge
mov
xchg
cmpsb
orl
ret
dec
adc
or
inc
cmpsb
negl
jne
add
sub
inc
and
inc
jnp
xlat
jl
mov
cmp
mov
inc
cmc
or
popf
dec
dec
mov
or
bound
mov
push
or
add
or
sub
pushf
push
or
push
popf
xor
decb
xchg
lea
sbb
ret
lahf
in
pop
popa
xchg
test
pop
mov
int
jge
inc
loope
inc
mov
pop
pop
inc
mov
push
mov
rolb
stos
sub
dec
add
push
add
sbb
nop
outsb
xchg
lret
jmp
mov
xchg
dec
ds
popf
lcall
inc
divb
std
inc
popa
dec
jmp
sbb
enter
clc
push
cs
xor
or
sub
add
mov
lds
ret
sbbb
xchg
sub
adc
and
mov
cmovge
pop
aas
or
xchg
cmp
das
xchg
cmp
mov
leave
mov
in
bound
fwait
push
jo
xchg
call
aaa
or
and
xor
inc
sbb
push
xor
or
loopne
in
call
sub
pop
mov
jge
cmpb
incb
dec
enter
mov
mov
cmp
dec
pop
sbb
mov
xchg
leave
loope
les
mov
mov
or
pop
mov
stos
movb
xor
adc
inc
adc
js
test
inc
roll
rcr
rolb
mov
mov
aas
gs
ret
lds
pop
cmp
mov
jecxz
dec
jl
loopne
dec
fcomip
out
add
sub
mov
cmp
pop
aas
lods
loop
aas
cmp
push
sbb
int3
inc
mov
cmpsl
lds
sbb
scas
mov
add
pop
sbbl
inc
xor
xchg
mov
inc
push
or
sarl
shl
test
clc
mov
add
dec
inc
scas
lret
andps
pop
ljmp
mov
mov
or
sbb
test
add
pop
push
sbb
adc
test
or
jbe
call
sub
xchg
fcomps
inc
rcrb
lock
testb
xchg
sub
cmp
adc
jmp
lds
js
sub
addr16
mov
lds
or
rclb
and
push
imul
xchg
jmp
loope
mov
sbb
jns
adc
add
cwtl
dec
jge
or
or
insl
gs
jge
mov
adc
sbb
push
out
scas
or
mov
sti
jg
mov
adc
mov
lcall
negl
add
xor
je
js
dec
jae
sti
scas
adc
lret
push
cwtl
push
pop
jo
mov
int
ss
pusha
dec
repz
mov
pop
cmpsb
cs
jl
jge
pop
mov
js
repnz
adc
mov
cmp
dec
mov
or
pop
mov
test
cwtl
rcll
and
pop
mov
es
out
mov
fildl
pop
inc
pop
mov
decb
mov
dec
mov
xor
dec
js
incl
cmc
xor
sub
mov
movsb
aas
push
cmovb
in
jb
mov
outsb
sti
lcall
jbe
or
sbb
int3
adc
sbb
push
pop
inc
pop
enter
call
mov
ret
dec
jp
nop
mov
adc
push
mov
adcl
std
divb
mov
and
xchg
stc
int
xor
jne
xlat
loope
pop
rcll
popf
mov
push
push
dec
icebp
lret
push
div
mov
jp
in
int
or
and
pop
mov
cltd
xor
jae
inc
test
push
push
adc
push
mov
xchg
dec
add
cmpl
stos
adc
repz
adc
outsb
mov
and
iret
out
popa
ss
leavew
frstor
inc
les
sub
fldl
sbb
js
xlat
imul
dec
jb
add
jno
mov
ret
cs
insb
add
imul
cmp
mov
fiaddl
stos
scas
cli
sbb
lahf
lret
inc
add
cmpsb
fidivs
cmp
imul
cmp
dec
rorb
jge
adc
imul
pop
into
aam
push
dec
mov
or
cmp
add
dec
ss
fldenv
lcall
and
sub
lahf
jae
xchg
js
loopne,pn
sbb
fs
cld
fidivs
mov
xlat
mov
pop
mov
cli
daa
mov
stos
cmp
pop
sarb
sub
push
lret
movl
movb
daa
or
mov
sub
sbb
icebp
add
lods
es
adc
ds
inc
hlt
jl
js
insl
and
pop
xchg
faddl
dec
hlt
jl
and
lret
mov
repnz
sub
cs
mov
or
push
in
adcb
push
leave
sbb
cs
mov
pop
lds
cmpl
adc
xchg
mov
loope
mov
pushf
mov
lahf
sub
sbb
pop
xchg
jg
loope
mov
mov
pusha
pop
xchg
and
push
daa
push
loope
xchg
add
mov
or
cmpsb
int3
push
cmp
inc
call
cmc
and
rorl
sub
pusha
addr16
pop
mov
movb
or
mov
xchg
fdivl
and
shlb
ret
mov
push
pop
jae
push
inc
shrb
gs
js
daa
and
sub
repz
loopne
push
and
gs
jo
push
pop
xchg
lahf
xchg
ljmp
mov
add
inc
cmpsb
fs
lret
int3
cmpb
rclb
sbb
or
add
int
popa
sarl
icebp
mov
aad
dec
xchg
outsb
jmp
add
addl
pop
jo
loope
push
xor
test
scas
jecxz
rorl
push
sub
lock
and
mov
lcall
pop
daa
cltd
popf
in
movsl
aad
int
sbb
lods
in
testb
dec
loopne
test
call
adc
inc
aam
adc
cmp
or
fucomp
pop
sarl
lds
shl
jg
xor
jns
cmp
in
dec
jbe
inc
jg
into
push
pop
pop
aaa
push
movsb
xor
jnp
mov
sub
jnp
in
jmp
les
pop
ljmp
ret
jmp
mov
decl
pop
inc
xchg
jno
adc
push
cmp
push
pusha
adc
mov
fdivs
add
pop
aam
sahf
jo
pop
sub
dec
mov
push
cs
mov
sub
add
lods
sahf
arpl
fstpt
cwtl
push
pop
jae
lcall
cs
jne
insb
cmc
push
push
mov
inc
in
jecxz
jg
adc
in
push
mov
leave
or
inc
pop
movsb
or
adc
fdivrl
cmc
add
fsubr
push
and
clc
xchg
aas
sub
mov
jecxz
dec
inc
cs
sub
mov
sbb
loopne
pusha
shlb
stos
insb
adc
sub
mov
mov
cmp
nop
xchg
cs
add
xchg
add
add
sub
leave
sub
fistpl
mov
test
fmul
outsl
mov
cs
xor
inc
nop
cwtl
lea
dec
imul
fidivl
or
cmp
mov
mov
in
xor
es
pop
in
xchg
pop
mov
cld
inc
push
jne
jg
js
in
mov
sub
or
push
mov
fimuls
xor
pop
aad
xor
inc
loopne
dec
xor
jl
bound
pushl
movb
pop
add
sub
push
pop
adc
xor
addb
push
mov
arpl
lahf
aas
mov
jmp
call
mov
push
jbe
stc
xor
stos
fsubrs
xorl
inc
gs
cli
xchg
mov
push
data16
ja
mov
cs
push
dec
mov
adc
mov
sbb
imul
inc
ja
cld
clc
jp
push
jmp
mov
lea
push
shll
lahf
inc
inc
inc
fcomp
inc
into
jmp
lods
testl
shrl
push
dec
push
sti
cs
test
std
or
bound
push
jecxz
adc
push
and
call
xlat
lods
and
and
sbb
pop
sbb
or
fidivl
mov
sub
hlt
imul
inc
xchg
dec
or
jo
js
push
inc
jne,pn
int
jns
inc
shlb
je
cmc
insl
loopne
jp
inc
dec
and
cmp
mov
sub
adc
negb
xor
fwait
pop
test
push
js
dec
pop
cmp
std
cmp
add
sub
lods
dec
pop
in
enter
pop
es
pop
les
jne
mov
cmpsl
xor
jo
lods
or
lds
mov
repz
pop
add
add
lahf
orb
sub
or
inc
jp
cmp
sub
loope
fimull
or
dec
and
pop
jecxz
imul
inc
mov
cmp
add
scas
and
aad
and
mov
daa
mov
adc
adc
xchg
dec
in
cld
inc
fildll
loope
sahf
jg
std
fidivs
fdivs
dec
cmpsb
ret
push
stos
dec
push
and
sbb
lahf
mov
pop
add
orb
ja
js
inc
push
adc
cmp
xor
and
ljmp
test
jb
aam
pop
xchg
mov
repz
add
stc
xchg
jne
js
and
mov
pop
inc
mov
mov
adc
push
test
jecxz
jnp
push
inc
pusha
mov
push
jmp
test
push
and
add
lcall
imul
inc
andps
loope
es
arpl
sti
pop
enter
xor
pushl
popa
lods
and
push
mov
or
fisttpll
pop
scas
out
stc
sbb
je
or
jnp
out
stos
xchg
xor
jecxz
cs
pop
sub
dec
sbb
sbb
cmpl
cs
sbb
xor
int3
inc
pop
fdivrp
test
mov
inc
loop
ljmp
cmp
decl
leave
pop
pop
bound
sarb
dec
imul
loop
fistpl
and
data16
frstor
xor
lods
and
jl
dec
cwtl
stos
sub
dec
mov
or
or
mov
dec
add
js
repz
lret
jns
out
stos
into
xor
add
jnp
movsb
add
repz
out
movsl
ret
hlt
dec
jmp
loopne
cmp
pop
cmp
loopne
rorb
faddp
clc
lock
jb
xor
jnp
sub
loopne
fisttps
lock
or
adc
insb
inc
inc
push
inc
repnz
adc
mov
fisttps
pop
pop
xchg
jp
je
push
flds
mov
stos
pop
push
imul
pop
insb
add
pop
jle
sbb
push
popf
sarb
lods
push
out
mov
imul
sub
or
inc
js
adc
add
jno,pn
xchg
pop
push
les
pusha
mov
orl
and
dec
sbb
loopne
xchg
mov
jecxz
cmp
movsl
fcoml
pop
call
mov
stos
gs
lods
inc
jl
jo
int
xor
ret
ds
cmc
push
cmp
dec
ljmp
rorb
xor
dec
je
xchg
sti
loope
or
adc
push
inc
test
cmpsb
push
adc
scas
pop
loope
pop
push
fistpll
out
inc
mov
mov
mov
out
iret
jae
inc
ret
aad
pop
int
sbb
push
dec
push
hlt
addr16
pop
out
and
sbb
or
cmp
dec
inc
jno
mov
and
dec
jle
cld
adc
push
push
out
sub
jmp
pop
mov
mov
mov
ds
dec
aas
cmp
dec
leave
mov
pop
sub
jecxz
xor
loopne
out
addb
push
mov
inc
xor
testl
cmpsb
adcl
clc
stos
mov
fnstsw
dec
sub
adc
iret
out
scas
loopne
push
hlt
adc
pop
xor
out
mov
dec
cmp
and
cmp
out
jle
mov
mov
lret
out
jg
pop
cld
inc
imull
pop
cmp
cs
sahf
xchg
faddp
push
fists
ss
xchg
and
cli
cmp
or
call
xchg
xlat
xchg
clc
lods
and
pop
in
idivl
aas
mov
push
or
mov
xor
sbb
cmp
dec
cmp
sbb
cmp
and
vmread
pop
rcrb
es
add
ret
enter
push
loopne
or
mov
push
inc
stos
mov
mov
mov
outsl
jmp
cmp
es
outsb
mov
lds
inc
pop
sbb
aas
push
call
cmp
add
xor
add
inc
xchg
and
mov
stos
aad
xorl
decb
jmp
into
xchg
sub
dec
pop
loop
mov
loopne
or
imul
leave
cmp
es
aad
sbb
ss
cmp
xor
pop
pop
add
xor
lds
leave
adc
cmpb
loope
cmc
xor
loope
rcrb
push
inc
push
pop
pop
in
add
jae
inc
jns
popf
sub
lret
je
rcll
xor
repnz
inc
xchg
and
outsl
and
dec
aaa
stos
xchg
xchg
jae
and
pusha
ret
leave
out
push
xchg
js,pt
mov
inc
nop
xchg
add
loope
iret
mov
inc
gs
rolb
jns
inc
or
ljmp
aad
cmp
loope
sbb
push
insb
pop
push
and
or
sarb
cmp
push
inc
sbb
jmp
mov
sbb
inc
push
inc
rolb
sarl
mov
mov
xlat
cmp
mov
addl
sub
into
cmp
adc
jge
scas
sub
cld
cmp
or
xchg
adc
les
enter
subb
dec
mov
dec
mov
adc
pop
shll
and
test
int
mov
int3
pop
or
repz
mov
xchg
test
arpl
mov
sub
int
cmc
adc
call
add
cmp
jp
add
sub
dec
xchg
push
fldcw
ret
mov
push
std
xor
and
jl
push
push
xor
jl
shrb
mov
adc
pop
mov
fdivl
mov
mov
int3
or
bound
imul
push
pop
sbb
stos
mov
push
push
cmpsb
cmp
fdivrs
lods
shr
ja
stc
cmpsl
dec
jg
jmp
movsl
das
cltd
fistl
mov
inc
jns
cs
jae
push
dec
test
or
or
cmp
inc
sbb
dec
jp
divps
addl
add
leave
mov
addr16
cmp
dec
popl
stos
movsb
jmp
aas
add
das
ror
or
jmp
add
jle
daa
mov
sub
stc
iret
insl
and
pusha
adc
dec
lret
imul
mov
std
add
push
xchg
lret
sbb
inc
mov
mov
jmp
je
or
mov
push
lahf
or
and
pop
adc
pop
mov
mov
mov
and
in
sub
rcll
les
sub
push
sbb
add
lret
insl
out
repz
xchg
arpl
dec
xchg
push
call
sbb
or
int3
and
adc
lret
pop
and
jae
mov
pusha
xchg
sti
stos
dec
dec
xor
pop
fisttpl
cs
mov
xchg
rclb
loopne
imul
gs
testl
ja,pn
int3
ret
cmp
addr16
lods
sub
dec
inc
pop
dec
std
inc
push
popa
adcb
mov
shlb
out
lea
adc
and
je
mull
cmp
pop
outsl
and
imul
sub
loopne
sub
aas
add
dec
les
push
cld
add
sub
hlt
cmpsb
pop
add
jmp
ljmp
repz
jnp
push
jo
loopne
pop
push
and
cld
adc
ja
mov
inc
adc
cltd
sbb
jo
dec
loop
mov
cmp
pop
jae
das
je
shrb
loope
aas
imul
fisubrl
mov
xchg
dec
or
and
outsl
pop
mov
push
xchg
mov
cmc
les
fisttpll
xor
fnstcw
das
leave
jg
icebp
xchg
pop
and
dec
ljmp
or
stc
and
dec
dec
pop
call
inc
nop
cmp
jp
lahf
and
stos
or
jg
cs
orb
push
jge
and
sub
dec
rol
rcrl
leave
xor
lahf
mov
add
inc
cmp
hlt
mov
outsw
xor
into
sub
adc
gs
push
push
repnz
pop
imul
mov
cmp
xchg
aam
dec
call
and
leave
mov
dec
cwtl
fiaddl
js
pop
jae
adc
xor
pop
sbb
cmp
lock
in
sbb
rorl
movsb
sarb
xchg
mov
push
lock
dec
push
sub
sbb
mov
sahf
add
jg
push
ds
mov
jne
std
xchg
cmpsb
cmp
mov
adc
sbb
loope
popa
fsubrs
sub
mov
or
lret
adc
daa
mov
inc
dec
out
test
repz
lahf
mov
or
ret
or
dec
mull
xor
add
mov
lret
icebp
bound
mov
sub
mov
xchg
add
test
popl
inc
mov
ss
adc
xor
add
pop
data16
cmpsl
or
inc
pop
int3
rcl
testb
push
pop
fiaddl
jmp
aad
loop
mov
mov
inc
inc
cmp
cs
fcmovbe
repz
imul
rcrb
mov
dec
xor
adc
outsl
jge
pop
das
add
jne
adc
ljmp
movsl
shrl
stos
push
add
repnz
jmp
jno
sub
popa
adc
pop
faddl
sub
dec
mov
popf
movsb
cmp
ja
and
mov
movl
into
ja
mov
mov
xor
je
mov
jge
cltd
fsubs
cmp
inc
mov
ffreep
dec
add
ss
push
icebp
ds
jo
mov
les
sub
mov
add
out
mov
mov
aad
mov
xchg
ljmp
pushf
dec
arpl
js
arpl
rcr
mov
cs
dec
lret
adc
ffree
jmp
pop
cwtl
inc
xchg
mov
pushf
jl
push
sub
sbb
jmp
xchg
in
decl
dec
mov
add
inc
inc
pop
loope
inc
cmp
outsb
scas
in
sub
push
or
jns
cmovs
add
mov
iret
mov
jae
lods
xor
js
mov
push
push
fld
jmp
xchg
cmp
sti
jne
mov
adc
int
mov
aaa
or
lret
stos
sbb
mov
add
stos
fs
cs
xor
push
js
pop
pusha
jnp
or
arpl
das
sub
imul
cwtl
movsb
xor
inc
xchg
cs
popf
push
insb
ret
pop
mov
ret
ret
fcomps
popa
mov
push
adc
pop
mov
pusha
mov
popa
dec
inc
stc
arpl
test
mov
shlb
repnz
pop
loopne
cmp
jmp
imul
cmp
or
cmpsb
cmpsb
lret
fisttps
push
xchg
stc
xchg
inc
sbb
mov
insl
mov
insl
push
mov
cwtl
mov
shll
lds
pop
stc
cmp
rcrb
xchg
mov
lea
and
adc
scas
shlb
dec
push
cmp
pusha
insb
push
add
lea
popa
dec
and
dec
mov
pop
loopne
adc
lods
pusha
call
jne
ret
insb
vmovsldup
pop
xchg
inc
jo
lret
cs
insl
dec
add
orl
lret
movsl
xor
sub
movsb
in
cmp
sbb
sarb
cmc
lret
mov
add
pusha
aad
arpl
in
into
cltd
ja
adc
dec
lea
adc
pop
mov
pop
push
cmp
aaa
dec
sti
lock
xchg
cmp
dec
or
mov
fyl2x
into
sub
mov
sbb
push
push
inc
sub
stos
into
add
daa
insb
sbb
rolb
pop
add
jo,pt
pop
xchg
lds
add
sti
loope
jmp
mov
cmpsb
mov
sbb
fwait
sbb
ja
xor
divl
jae
cli
in
lods
xor
add
cmp
pop
cs
lahf
add
inc
inc
sub
mov
add
insb
leave
adc
dec
in
pop
adc
pop
mov
adc
dec
jo
or
inc
pop
aam
xlat
push
out
xchg
add
dec
dec
mov
popf
in
cmp
jne
dec
shlb
or
xchg
jo
aad
psubd
pop
dec
adc
das
pop
and
push
popw
push
out
ret
dec
mov
sbb
mov
cmpsb
das
jmp
enter
cmpsb
scas
jo
subl
ret
enter
or
xor
pusha
and
test
ja
adc
gs
or
je
xchg
cmpsb
sbb
lret
inc
cmpsb
push
inc
sub
rorl
enter
mov
cmp
jae
jo
mov
aas
imul
pop
in
mov
or
xchg
cs
aam
cmp
icebp
sub
push
aas
aas
std
push
les
or
pop
jg,pt
les
je
js
aas
ja
xchg
add
or
pop
shr
mov
and
add
adc
int3
sarb
lods
lret
xrelease
xchg
jmp
and
stc
jne
and
dec
int3
mov
lock
call
rcrb
inc
inc
inc
mov
add
pop
popa
rcrb
xchg
int3
push
les
jl
xchg
gs
cmpsl
ret
push
and
mov
insl
notl
or
or
dec
nop
mov
cmpsb
mov
jl
inc
or
pop
lods
js
sbb
jg
mov
add
mov
jns
scas
aaa
sbb
xchg
cmp
rorb
mov
insb
mov
jb
xchg
shl
jae
std
cmpb
or
sub
cmc
cli
movsl
leave
insb
stc
jl
hlt
orl
xchg
ljmp
adc
into
dec
jnp
cmp
leave
xchg
sbb
rorl
repnz
loope
pop
dec
stos
xchg
sub
sub
movsl
push
jmp
pop
inc
push
mov
cltd
gs
sub
je
sub
bnd
ljmp
jp
cmp
cmp
pop
jne
inc
dec
xchg
fnstcw
ret
and
mov
in
cmp
nop
mov
les
pop
idivb
arpl
out
xchg
jl
dec
adc
inc
arpl
mov
mov
and
in
mov
xchg
leave
mov
lea
icebp
loope
sbb
jbe
pop
sub
mov
fisubrl
and
add
dec
test
cs
jbe
jae
and
rclb
pop
mov
fsubrs
jl
xchg
jae
and
lret
sbb
andb
lock
inc
ja
imull
js
stc
xchg
aad
jb
cs
les
xchg
jbe
sbb
stos
out
test
jmp
or
loopne
cs
lahf
mov
and
sbb
push
outsb
arpl
jne
rolb
addr16
cmc
xor
push
dec
pop
fs
xchg
jecxz
aas
push
movsb
xchg
sbb
or
mov
push
mov
movsl
or
call
loopne
sub
outsl
aam
mov
test
jns
xlat
fcmovb
cmp
mov
jle
xor
rorl
dec
mov
dec
inc
inc
xor
rolb
add
mov
jmp
pop
jae
and
pop
jmp
cmpsb
mov
mov
mov
outsb
sbb
aas
aam
add
hlt
push
mov
loope
dec
jnp
jb
ret
mov
sbb
xor
shll
adc
xor
or
in
push
sti
cmp
lea
pop
in
pop
cli
mov
fcompl
test
dec
subb
and
cmp
add
andl
lret
ficompl
cmpsb
cli
adc
adc
rorl
add
or
mov
mov
add
push
sub
pop
into
js
popa
add
jmp
mov
test
inc
inc
shll
popf
pop
xchg
xor
mov
mov
jg
push
dec
dec
adc
sbb
inc
pop
xor
inc
out
cmpsb
adc
pop
arpl
sub
xor
lods
into
sbbl
aad
les
ljmp
ja
addb
call
push
stc
jmp
or
or
ljmp
xchg
enter
sub
stc
push
mov
jbe
push
cmp
dec
cmp
sub
ret
inc
cmp
in
push
roll
cs
ds
inc
out
sub
test
arpl
xchg
scas
pop
mov
dec
decl
arpl
cmp
dec
inc
pop
test
sub
js
push
addr16
dec
jo
add
insb
enter
or
jmp
scas
cmp
push
pop
mov
lcall
rcrb
dec
or
repz
and
mov
cmpsb
jnp
fidivs
jbe
sbb
mov
nop
lea
pinsrw
sbb
subb
xor
jmp
push
pop
negl
stc
ret
aas
pop
mov
fsubrl
mov
int
dec
aam
pusha
xlat
lea
add
fiaddl
mov
cmpsl
pop
xor
imul
cli
dec
cmpps
jg
inc
and
stc
pop
mov
loope
lods
lock
cs
imul
and
pop
push
js
push
stc
dec
inc
jle
data16
loope
xchg
pop
sarb
scas
sbb
movsb
xchg
inc
movsl
les
xchg
and
push
call
xor
aaa
pop
pusha
jbe
pusha
ret
dec
cli
cmpsl
push
push
push
mov
dec
cld
insl
pop
xor
sub
or
stc
test
push
push
sub
jge
cmp
xor
call
push
dec
mov
pushf
lds
loope
insb
sub
inc
pop
lds
pop
xchg
cmp
loopne
lods
or
push
dec
test
fimuls
mov
leave
hlt
stos
add
jnp
mov
imul
cmpl
xchg
lods
pop
icebp
sbb
lret
adc
mov
sbb
mov
into
dec
leave
mov
xor
add
dec
clc
mov
out
inc
adc
pop
pop
js
pusha
cs
dec
adc
adc
dec
loopne
add
fs
ja
stos
sbb
lcall
lds
mov
cmpl
cli
push
imul
dec
lret
or
insl
xor
sti
scas
xchg
lahf
arpl
stc
xchg
aad
movsl
jnp
js
ret
mov
leave
cs
adc
dec
xchg
sbb
inc
inc
mov
cmpl
inc
into
rorb
inc
shll
lds
add
pop
pop
iret
js
fistps
cmp
gs
mov
pop
mov
adc
jp
pop
aad
dec
adc
leave
jae
and
xchg
sub
imul
dec
inc
je
lds
sbb
inc
push
movsl
sub
jmp
pop
es
sbb
js
sbb
sub
cmc
xchg
pop
push
pop
jns
lret
loopne
inc
negl
mov
scas
mov
fwait
inc
pop
mov
ljmp
inc
out
pop
lea
pop
jp
jmp
inc
cmc
dec
out
movsb
imul
jnp
call
push
cmpsb
or
jl
cmp
dec
sti
jl
xchg
mov
or
jbe
data16
or
sub
sub
jecxz
mov
aas
insl
xor
mov
pop
mov
clc
shrb
sbb
rorl
push
aas
jmp
mov
dec
pop
mov
xchg
repz
cld
inc
push
negb
movb
dec
and
push
sub
adcb
sub
push
pop
nop
adc
stc
jl
repnz
sub
xchg
cmp
sbb
testb
jg
mov
ljmp
leave
mov
add
clc
lret
cmp
push
sbb
fisttpl
in
mov
clc
repz
or
jns
sbb
stos
cmp
sahf
call
inc
int3
mov
fildl
and
outsl
add
pusha
add
fsubs
dec
outsl
sub
sbb
push
xor
fisttpl
pusha
pop
sbb
mov
lret
sub
add
fwait
push
xchg
mov
das
fsts
stc
fmull
outsb
or
lret
loopne
jns
push
sbb
inc
and
cmp
dec
or
mov
call
into
dec
inc
xchg
nop
testb
in
mov
jo
mov
mov
inc
popa
mov
adc
adc
mull
adc
xchg
daa
push
leave
aas
test
test
xlat
mov
pop
adc
pop
icebp
or
mov
mov
imul
faddl
jmp
stos
push
imul
ret
scas
dec
adc
test
dec
and
mov
and
mov
and
insl
mov
adc
out
jns
dec
cmp
in
inc
mov
push
jmp
dec
sbb
fistps
mov
mov
sub
pusha
leave
pop
inc
cmp
xlat
repz
mov
mov
pop
jae
iret
inc
dec
fildll
mov
dec
js
clc
inc
pop
or
mov
sti
out
jnp
dec
negl
jno
jg
mov
stos
xchg
sub
xchg
cs
cmp
cltd
in
or
add
test
les
dec
xchg
dec
icebp
pop
or
arpl
dec
xchg
rcrb
push
scas
nop
add
cmp
sub
out
lods
pop
sub
arpl
subl
and
mov
pop
jne
loope
adc
pop
dec
and
inc
dec
push
sub
pop
fsub
and
cs
popf
stc
jae
gs
xchg
adc
xchg
add
je
cmp
dec
insl
cmp
scas
lds
xor
and
ret
mov
jecxz
push
add
inc
push
inc
mov
sub
les
xor
imul
mov
inc
mov
jmp
push
sbbb
js
iret
or
dec
push
inc
movsl
push
mov
inc
andb
mov
cs
mov
dec
cmp
jno
inc
ret
and
inc
inc
inc
scas
dec
std
sub
fisubl
push
mov
cmp
js
inc
test
adc
test
fistps
sahf
loopne
cs
mov
cmc
in
mov
test
fucomi
int
xor
sar
pop
or
clc
dec
leave
int
sti
xorl
lret
jb
mov
xor
in
xorl
push
pop
loop
jae
cmp
sub
adc
jno
push
mov
mov
mov
mov
pop
sbbb
mov
cs
add
leave
dec
mov
lcall
fsubs
insb
nop
sbb
push
imul
sbb
movsl
or
push
in
ja
negl
jle
or
sbb
xchg
mov
xor
aad
cmp
sarb
scas
inc
gs
idivb
cltd
fadds
jmp
test
and
sub
imul
out
mov
mov
or
xchg
jne
pusha
es
or
jae
add
sbb
mov
or
adc
dec
and
pop
aas
or
jg
push
loopne
pop
sub
mulb
das
cs
pop
add
and
ds
add
pushf
mov
aaa
cmp
xor
or
pop
fwait
mov
add
hlt
les
pop
add
add
sti
mov
push
das
cwtl
cwtl
stos
sub
pop
jnp
jg
aam
pusha
das
dec
dec
pop
pop
push
out
cmp
jle
sub
jg
jae
out
mov
pop
pop
stos
xchg
fstpl
out
aad
inc
adc
into
xchg
push
mov
enter
jmp
sub
mov
clc
lea
inc
outsl
and
mov
jbe
cmp
sbb
gs
mov
sbbl
leave
imul
ljmp
insl
paddsb
aas
dec
dec
pop
jg
stos
xorb
rolb
sbb
adc
hlt
stos
cs
je
call
leave
cmp
dec
mov
out
dec
std
mov
clc
aaa
jecxz
or
popa
insb
dec
int
les
outsl
ret
pushf
dec
bound
pusha
std
shrl
out
inc
loopne
mov
mov
outsb
roll
lcall
sbb
jg
repz
cmpsb
rolb
fisubs
cltd
sub
mov
sub
xor
lret
iret
adc
sarl
shll
inc
out
insl
push
push
incb
cmpsl
mov
xchg
jbe
mov
jmp
xchg
ja
mov
sbb
int
and
cmp
mov
pop
mov
inc
xchg
jp
data16
mov
lds
cli
adc
sarl
dec
nop
pop
pop
jge
dec
push
push
lds
push
mov
jmp
jno
mov
nop
cwtl
sbb
pop
cmpsl
xor
mov
cmp
imul
loopne
mov
inc
sub
jge
mov
lods
cmc
sbb
les
pop
adc
ret
shrl
jl
insl
fidivs
rep
das
or
call
out
cli
mov
push
pop
sbb
pop
jnp
imul
mov
jns
sub
enter
stos
jmp
mov
addb
stc
dec
stc
lret
sbb
je
push
in
ret
sbb
dec
cmp
cmpsl
test
push
imul
pop
aas
pop
in
fimull
mov
or
or
sbb
js
push
lock
or
or
jne
insb
add
sbb
cmpb
in
push
push
jne
dec
int
rcrb
pop
in
inc
roll
fisubl
pop
or
pop
jmp
pop
or
arpl
scas
adc
push
pop
es
or
jle
aad
xchg
test
add
pop
push
lret
adc
sub
sbb
inc
mov
jo
fsubrp
fisttps
loopne
mov
ljmp
inc
mov
pop
xor
leave
pop
push
stos
add
xor
add
stos
mov
rol
cmp
push
sarb
cmp
stos
fwait
ret
dec
and
xor
leave
mov
push
pusha
inc
push
inc
nop
push
ja
mov
aam
rorb
cmpsb
xchg
cli
loope
lret
cmc
fimull
mov
mov
out
lcall
inc
sbb
cmpsb
lods
mov
jns
adc
data16
xchg
xor
pop
mov
cmc
in
subl
xor
vcmppd
lods
ret
mov
lret
push
pusha
or
xchg
popa
or
and
pop
cmp
dec
ret
cwtl
es
cld
sub
hlt
psubq
mov
sub
inc
ss
adc
sbb
adc
push
jae,pn
loope
lea
add
xlat
sbb
sub
push
in
xor
out
movsl
sub
lret
pop
mov
sbb
movsb
pushl
jmp
pusha
fcmovu
sahf
or
xor
in
push
ret
pop
jno
sti
inc
push
movsl
jns
xor
jno
idivl
jae
stos
xchg
enter
dec
repz
sarb
xor
sarl
loopne
mov
mov
dec
mov
and
push
pop
fidivl
movsl
js
adc
dec
mov
jmp
ss
int3
mov
mov
in
lahf
pop
jmp
pop
cmp
mov
inc
icebp
add
push
add
rcll
rcrb
dec
sbb
ret
xchg
lret
es
jbe
popa
icebp
popl
or
popa
push
daa
je
fstl
push
aas
inc
fidivrl
dec
movsl
mov
xchg
sub
imul
push
pop
ds
cmpsb
push
insl
sub
mov
pop
outsl
xor
jmp
stos
leave
aas
dec
scas
loopne
push
aam
inc
loope
inc
add
cmpl
inc
mov
inc
pop
dec
ljmp
or
jne
pop
ret
call
jg
fmuls
push
mov
fwait
sub
add
enterw
sub
scas
or
scas
push
das
fcoml
xchg
pushf
pop
cmpsb
fs
pop
inc
les
cli
sub
repnz
ret
mov
sbb
xor
gs
lcall
jg
or
add
cmp
or
lahf
int3
mov
dec
cmpsb
xorb
jae
cmp
jp
loopne
out
in
xchg
pop
hlt
mov
xchg
pop
mov
jmp
pusha
adc
outsl
and
dec
lret
nop
xchg
popa
push
push
mov
push
stc
mov
and
inc
push
mov
call
push
pop
pop
sub
adcl
cmp
push
cmpsl
loope
pop
cmp
push
xchg
cs
pop
fcmove
stos
push
lret
xadd
inc
aaa
stc
sti
xor
xor
jmp
push
fucom
lods
dec
mov
or
pop
inc
sahf
xor
xchg
fmuls
jmp
in
arpl
cwtl
and
mov
outsb
jne
lea
ss
fnstsw
and
inc
nop
mov
stc
xchg
pop
je
gs
push
pop
aaa
sub
popa
in
sub
call
sahf
insb
adc
popa
lea
inc
and
mov
repz
push
enter
inc
jae
shrb
add
out
lret
mov
mov
arpl
pop
xchg
and
ss
mov
add
push
push
mov
jle
push
xchg
or
mov
cld
pop
mov
and
fistpll
insb
or
ret
dec
loope
dec
mov
and
dec
mov
scas
out
inc
loop
pop
dec
dec
mov
mov
inc
ja
roll
xchg
dec
andl
lret
test
adc
cmpsb
repnz
dec
push
xchg
mov
adc
cli
jg
lea
pop
mov
aas
xlat
rol
jae
cli
adc
test
lahf
pop
lret
push
fwait
pop
ret
add
push
mov
add
dec
cmp
pop
cmpsb
sbb
jnp
jmp
inc
mov
rolb
and
les
mov
arpl
dec
aam
sbb
fdivrp
les
mov
pop
cmp
push
movsb
sub
sbb
sub
test
insb
jo
movsl
stc
mov
or
scas
xchg
jecxz
sub
dec
andb
out
pop
xor
and
mov
shrl
in
cmpsb
mov
pop
ljmp
dec
fistpll
fbld
mov
inc
sbb
push
jg
rorl
lods
adc
pop
add
loope
push
js
std
scas
push
inc
push
fisubl
and
mov
in
sarb
pop
test
repz
mov
xlat
sbb
xchg
cwtl
shll
dec
shlb
cmc
shll
pop
add
hlt
popf
pop
cmpsl
rolb
mov
push
xor
mov
shll
xchg
es
test
das
leave
xor
mov
je
data16
iret
or
test
mov
pop
adc
pop
add
xchg
outsb
jecxz
lcall
out
cwtl
lret
sbb
xchg
lods
fcoms
pop
dec
outsb
stos
add
xor
mov
dec
movsl
aaa
dec
mov
xchg
mov
sub
dec
dec
mov
outsl
xchg
jle
gs
xlat
stos
sbb
ja
pop
popa
inc
cmc
das
cs
xor
out
mov
dec
pop
add
xor
inc
int
popf
hlt
adc
scas
dec
sahf
and
inc
jb
and
jg
movsb
push
jb
out
rorb
pop
inc
and
inc
xchg
add
in
or
or
inc
test
jae
push
setno
fildl
or
inc
mov
jl
rcll
mov
call
cwtl
sbb
sbb
inc
test
aas
mov
mov
testb
dec
iret
cltd
dec
pop
push
dec
cmp
inc
movsb
fwait
test
outsl
or
outsl
movsl
scas
fidivrl
sbb
xlat
xchg
ret
int
jo
sbb
push
pop
mov
push
ret
cmp
adc
dec
mov
push
push
fld
mov
imul
movb
mov
mov
fnstcw
or
or
mov
mov
jae
adc
cmp
dec
popl
dec
mov
add
pop
inc
fidivs
pop
inc
mov
cmpsb
xchg
pop
pop
cmp
out
loope
ljmp
les
add
and
xchg
adc
xorb
fistpll
insl
inc
pop
push
movsl
pop
cmp
loopne
or
addr16
out
sbb
mov
add
adc
push
loop
imul
fisttpl
dec
enter
cmc
ret
js
mov
loope
lock
hlt
in
mov
adc
mov
aam
lcall
xlat
mov
add
dec
cmp
mov
mov
mov
add
push
stos
sarb
leave
xlat
std
enter
mov
insl
dec
pop
adc
mov
add
in
data16
dec
mov
das
clc
mov
dec
push
pop
pop
leave
imul
leave
xchg
call
xchg
das
ret
jbe
cmc
je
leave
sbb
push
mov
mov
pop
sub
clc
fdivrl
dec
ds
inc
xlat
iret
xor
push
hlt
pop
outsl
push
sbb
or
jp
mov
les
pop
ja
scas
sbb
mov
inc
dec
mov
repz
mov
jl
push
imul
inc
sar
lock
jb
or
inc
lahf
jae
push
xor
xor
cmc
shl
pop
pusha
dec
dec
mov
and
push
loopne
fcoml
dec
sub
add
sbb
pop
jbe
add
inc
in
mov
mov
mov
scas
sbb
addr16
add
aad
xchg
imul
or
push
cmpl
mov
mov
pop
jno
std
add
stos
sbb
call
insb
fcoml
mov
or
dec
and
lea
mov
sbb
lret
insl
add
xor
pop
xchg
in
lret
ret
adc
nop
add
aad
stos
stc
ja
xchg
xchg
popf
inc
into
bound
out
vpshaq
and
iret
data16
popf
call
pusha
jbe
sbb
pop
mov
in
rorb
into
cmp
rcll
mov
cmp
std
xor
cs
pop
cmp
imull
mov
push
or
xchg
sti
and
sahf
into
jecxz
pop
rcll
loope
adc
inc
mov
cs
int3
jne
fdivp
and
pushf
mov
pop
pusha
dec
pop
movsl
andl
mov
jnp
loop
je
and
ds
mov
sbb
cmc
dec
pop
jae
cmp
inc
pop
popf
out
repz
inc
repnz
inc
dec
inc
sub
push
push
rolb
add
outsl
push
jl
leave
dec
loopne
cmp
push
xor
jle
mov
xchg
mov
xchg
fidivrs
cmc
pop
lret
inc
ljmp
fisubs
sub
sahf
loopne
mov
pop
std
add
dec
pop
xchg
stc
adc
addr16
outsb
scas
fdivl
add
jnp
mov
cmp
sub
jb
jae
fsub
imul
or
jmp
pop
je
movsl
in
dec
gs
ret
add
insl
or
or
add
sub
movsl
push
sub
mov
adc
mov
test
sbb
and
shr
push
es
fldenvs
sbb
mov
jl
add
jns
add
dec
jge
inc
jae
mov
jno
jmp
fmulp
clc
add
mov
dec
scas
pop
push
lods
addb
inc
fbld
jecxz
mov
or
shl
pop
inc
pop
subl
ss
sbb
push
es
pop
loope
sbb
lea
stos
or
nop
push
pop
pusha
in
adc
pop
in
mov
daa
mov
loop
or
mov
pop
mov
sub
rcr
mov
or
pusha
cs
add
inc
lock
inc
icebp
jge
icebp
popf
jo
mov
add
jnp
lret
cmp
push
addr16
mov
dec
add
pop
fsubs
mov
std
sbb
mov
outsb
addr16
scas
push
inc
out
push
pop
sub
add
ja
inc
sar
add
cmp
rol
inc
add
mov
sub
dec
mov
sbb
arpl
mov
jmp
cltd
pop
gs
inc
out
mov
sahf
popa
rorl
fidivs
xor
mov
push
xchg
in
dec
cmp
loop
sbb
jbe
inc
sbb
push
dec
movsl
dec
sub
cli
fcomi
push
xorb
das
mov
cmpsl
aam
lods
scas
or
and
pop
cmpsl
nop
inc
cmc
mov
pop
lods
dec
pop
add
ljmp
pop
hlt
icebp
fcoml
aam
push
fsubrl
mov
sbb
outsb
or
clc
gs
mov
int
sbb
sub
xchg
pop
mov
pop
sub
out
ret
mov
ret
aas
adc
cld
dec
mov
inc
imul
loopne
incl
insl
jnp
xchg
ficompl
push
pop
mov
scas
fildll
sbb
fimuls
inc
scas
mov
cltd
int3
dec
dec
push
pop
leave
and
jge
aas
imul
shll
cmp
inc
xchg
lock
adc
pop
pop
mov
mov
xor
pusha
add
ljmp
in
sub
outsb
xchg
ljmp
hlt
xchg
test
in
cmpsl
sub
cmpsl
pop
repnz
xor
imul
lret
mov
jmp
icebp
notl
adc
test
pop
and
adc
mov
enter
lods
inc
stc
inc
cmp
cmp
int
lock
mov
movsb
mov
cmpsb
mov
push
pop
scas
scas
mov
iret
jecxz
aam
push
stc
pop
adc
clc
stc
ret
dec
and
sub
pop
clc
push
add
mov
dec
jmp
iret
adc
xor
inc
inc
les
repnz
pop
push
data16
add
jno
loopne
loop
xor
jecxz
mov
sbb
pop
out
ret
clc
jmp
add
jp
aam
xor
mov
insl
sbb
loope
cld
sub
cmpl
lret
push
inc
adc
outsb
push
jmp
ret
fildll
inc
cmp
dec
lea
adc
xchg
outsl
adc
bound
cmp
ljmp
push
call
outsl
sub
rol
pop
sub
xor
xor
push
addb
sub
pop
stc
sbb
inc
mov
push
jae
orl
dec
or
mov
mov
push
addr16
into
adc
xlat
fcmovnu
std
call
scas
or
push
leave
mov
push
jnp
pop
pop
jnp
dec
mov
outsb
xchg
repnz
dec
sbb
dec
sbb
pop
shll
sub
inc
scas
jns
ret
daa
mov
add
aam
jnp
jo
cmp
pop
out
add
pop
adc
sbb
leave
mov
lock
es
pop
fisttps
xchg
inc
xchg
cli
gs
push
sub
cmp
inc
stos
lahf
inc
lods
xlat
mov
adc
aas
aas
jae
jbe
inc
test
cmpsb
aas
fildll
dec
mov
mov
int
outsl
loope
dec
pusha
pop
xchg
mov
fcmovu
lock
popf
rcll
mov
or
mov
test
sbb
data16
fimull
add
mov
or
cli
sbb
and
cmp
mov
gs
sbb
cmp
or
mov
push
and
aaa
mov
adc
push
dec
or
add
and
xchg
mov
cs
mov
sbb
lahf
and
outsb
fmuls
data16
mov
addl
sub
fistpl
mov
fists
push
loop
xor
dec
into
push
mov
xchg
lret
fiaddl
std
rorl
sbb
lock
movsb
into
jmp
js
or
jae
aaa
push
cmpsb
in
sbb
push
jg
xchg
sbbb
xor
cs
push
adc
js
lret
dec
dec
lea
push
ret
cmp
push
fimuls
inc
xlat
push
fcmovbe
test
sbb
xor
inc
aas
fbld
cmp
push
inc
xchg
cmc
push
xor
mov
push
lods
pop
pusha
inc
addr16
lods
jae
aam
xchg
in
lret
add
ret
cld
lods
or
aad
jae
or
mov
jb
outsl
fcomps
outsl
cmp
xchg
and
cs
mov
mov
mov
lods
aas
cs
and
or
push
or
aaa
or
popf
cs
pop
les
js
ds
rorb
fidivrs
outsl
xlat
test
testl
push
adc
inc
arpl
stos
mov
inc
ja
shll
inc
sub
cmpsb
and
adc
lret
add
cmp
testl
or
adc
cmp
popf
mov
mov
sbb
popa
mov
stos
cs
les
sbb
adc
sub
add
push
fcomps
dec
dec
in
and
sbb
movsb
sbb
jmp
push
call
inc
push
rorb
add
pop
fbld
dec
cwtl
mov
mov
pop
in
dec
ss
pop
dec
enter
stos
iret
roll
or
movsb
dec
pop
xlat
push
cs
ja
mov
mov
dec
js
xor
inc
nop
enter
fsubrs
inc
out
jne
jnp
jnp
mov
in
inc
or
adc
cmpsb
inc
adcl
inc
loope
mov
test
adc
insb
dec
sbb
ljmp
into
lcall
xchg
or
cmovle
xchg
cmpsl
cmc
in
sar
xchg
in
push
aas
aas
insb
repz
adcb
mov
xor
add
repz
lock
jp
lds
and
jb
sarb
fcomps
outsl
inc
mov
popaw
fdivl
in
add
pop
imul
test
pop
lods
into
test
fadd
adc
mov
leave
cmp
jae
mov
mov
stc
outsl
pop
dec
mov
xor
mov
ss
push
iret
faddl
ret
sub
push
pop
dec
loope
cmc
cmp
ds
jmp
cmc
imul
jns
push
sub
pop
sahf
jae
aam
pop
or
mov
or
xchg
mov
push
loopne
mov
mov
sub
push
mov
dec
outsl
lds
jle
add
testb
cmp
xor
popa
out
mov
sub
mov
mov
aaa
imul
hlt
add
insb
adc
rcrb
pop
fisttps
gs
iret
dec
stos
cmpsl
add
ss
pcmpgtb
fcmovb
jno
inc
aaa
sub
push
pushf
push
call
std
addr16
dec
outsl
loop
cmp
rolb
mov
imul
cltd
dec
cltd
jmp
stos
jae
icebp
push
ss
je
rcl
xlat
add
imul
dec
push
ret
stos
mov
call
aad
inc
dec
cmc
je
ja
pop
inc
xchg
aam
inc
jle
bound
sbb
inc
in
es
sub
inc
mov
rolw
push
ret
adc
fxch
mov
scas
mov
movsb
popa
setbe
leave
cmp
jno
jmp
pop
popf
jmp
rclb
cmpsb
lahf
sbb
mov
and
ds
adc
cs
pop
outsb
ss
psubw
sbb
mov
dec
leave
and
rorl
pop
or
inc
je
lcall
pop
scas
add
mov
mov
std
or
xor
xchg
aad
paddd
dec
or
iret
xchg
dec
push
inc
mov
push
int
popf
mov
test
nop
inc
sarl
ljmp
stos
xor
jae
pop
dec
mov
mov
xor
lahf
mull
mov
in
and
or
out
roll
cmpsb
jo
or
mov
enter
addr16
or
nop
aad
pop
flds
js
lock
call
test
cmp
hlt
lret
mov
hlt
push
add
xchg
dec
pop
and
inc
dec
pop
or
sub
pop
push
in
and
call
xchg
mov
insl
cmp
mov
ljmp
notl
push
cmovle
ss
push
enter
cmp
test
sbb
and
nop
sbb
xchg
sub
and
or
test
jae
loop
inc
pop
mov
or
pop
sbb
mov
cmp
mov
mov
int3
xchg
mov
xchg
std
jb
pusha
cs
xchg
push
ds
or
stos
jne
lds
adc
call
scas
cmp
jnp
inc
cmp
aam
hlt
push
mov
mov
les
cmc
hlt
sub
xlat
loopne
stos
dec
bound
mov
in
sub
aaa
push
test
stos
pop
xchg
outsl
shrb
mov
or
jg
roll
sti
pop
loope
les
sub
inc
dec
repnz
push
lds
mov
dec
or
imul
cld
repnz
data16
sbb
popw
sbbb
or
popa
loopne
cmp
imul
inc
sub
add
push
int3
pop
mov
cld
sbb
push
test
out
or
push
insb
adc
ss
stc
jl
dec
je
test
or
jb
push
pop
ficomps
mov
mov
cmp
hlt
addb
pop
sti
mov
push
adc
lahf
inc
sti
fs
dec
xchg
inc
jp
imul
or
pop
cmpsb
leave
add
inc
cmp
mov
mov
mov
lcall
sub
mov
mov
out
loope
insl
pushf
jge
daa
xor
ljmp
pop
or
mov
leave
mov
loope
pop
sti
mov
rol
data16
pop
xchg
fwait
js
or
repnz
dec
fistps
cmc
cmp
cmp
bound
or
pop
js
pop
inc
mov
mov
sub
inc
pop
pop
jge
xchg
jo
pop
mov
imul
mov
clc
ja
fimuls
cmp
lea
push
pop
sbb
pop
mov
cmpsb
insl
xor
and
fisttpl
sub
outsb
popa
imul
popa
fildll
jae
pushw
pop
mov
cmp
daa
fbld
mov
test
ficoml
rorb
dec
push
xlat
inc
and
cmp
loopne
push
or
in
xor
jo
lods
cmp
ds
cld
cli
jno
mov
jl
das
adc
push
mov
lock
lret
rorl
inc
ret
adc
jp
scas
inc
adc
cs
cmpsl
shll
dec
mov
xchg
clc
sub
mov
mov
cmp
mov
mov
or
subb
push
lret
aaa
push
mov
sbb
sarl
cmp
hlt
sub
jecxz
add
enter
cmpsb
cmp
scas
jecxz
sub
push
add
mov
add
fstps
in
cs
orb
xchg
pop
push
mov
jl
mov
pusha
sbb
and
pop
xchg
and
dec
jbe
xchg
adc
push
jmp
iret
add
stos
je
js
mov
shll
cmp
push
popf
pop
sbb
or
hlt
add
mov
jg
jl
das
rcrl
xor
jbe
dec
jg
or
cwtl
mov
loope
insb
mov
push
out
or
push
loope
leave
mov
dec
push
pop
mov
movsb
inc
mov
mov
sub
sbb
and
mov
cmpsl
mov
lods
lods
or
sbb
dec
lods
aas
popf
mov
dec
sub
xorb
cs
mov
xchg
sub
push
pop
movsl
jbe
pusha
or
sbb
or
mov
out
lds
pop
dec
outsb
push
popa
test
mov
aas
rcl
enter
xchg
out
imul
push
je
int3
and
pop
add
inc
mov
mov
sti
inc
loop
inc
mov
mov
mov
cmp
mov
test
push
or
loopne
or
insb
sub
mov
fidivrs
pop
std
mov
sbb
insl
lret
stos
rorb
push
jo
out
clc
inc
jg
pop
add
sub
mov
inc
xchg
shrl
loopne
scas
xor
ret
xchg
or
pop
inc
adc
dec
push
jnp
mov
push
in
test
in
mov
mov
fbstp
inc
xchg
enter
daa
sub
insl
es
inc
push
push
sub
inc
push
fstpt
std
mov
mov
inc
mov
dec
xlat
add
rorb
scas
sarb
iret
push
inc
addl
fcomip
stos
out
mov
pop
pop
push
sbb
fildl
icebp
xchg
pop
mov
mov
jnp
stos
fidivrl
jecxz
cmp
dec
xchg
repz
orb
lea
call
mov
nop
sub
xchg
mov
cmp
dec
in
push
pop
sti
xor
cld
pop
sbb
or
stc
repz
jmp
sub
sbb
xlat
cli
mov
fmull
adc
sbb
jne
mov
js
dec
cld
ret
stos
jnp
popa
push
dec
aas
sbb
lods
inc
jae
movsl
jae
sbb
push
xor
mov
pop
icebp
hlt
adc
shr
aad
int
xchg
test
pop
pusha
sbbl
sbb
insl
ljmp
jnp
cwtl
xchg
out
mov
mov
adc
sub
inc
sub
outsl
cmp
into
mov
push
adc
and
xor
pop
jp
xor
in
mov
loop
mov
paddsb
mov
mov
inc
mov
fsub
inc
mov
mov
fsubs
and
lahf
pop
inc
sub
aas
out
cs
daa
out
in
jmp
fstpt
add
loop
cmp
push
add
std
pop
inc
xchg
movsb
data16
mov
std
pusha
fimuls
nop
mov
fwait
cli
popa
push
or
lcall
push
repz
or
sub
leave
sub
aam
add
mov
mov
jno
insl
data16
xor
mov
jmp
stos
out
jge
xchg
or
inc
movsb
xor
ljmp
and
jne
cli
inc
add
xchg
movsl
inc
lods
fisubs
lret
push
in
dec
mov
sbb
cmp
mov
mov
inc
pushf
dec
mov
mov
and
or
sti
mov
stc
pop
lahf
aad
dec
dec
jmp
mov
add
sbb
mov
mov
lahf
cwtl
call
cmp
stos
mov
jae
push
adc
out
insl
mov
dec
and
sub
adc
dec
dec
js
and
scas
movsl
aad
cwtl
xchg
adc
pop
repz
dec
sbb
and
movsl
xor
inc
xchg
bound
arpl
mov
je
lret
inc
aas
fstl
adc
jae
mov
or
inc
imul
push
roll
sub
out
nop
leave
xor
pusha
outsl
pushf
sub
loop
mov
xchg
out
ja
rcrl
rolb
push
xchg
in
les
cmp
jle
push
or
ficomps
sbb
ret
mov
xchg
fxtract
and
dec
jp
hlt
sub
and
cmpb
fmuls
or
lret
je
jp
mov
jo
jmp
push
pop
add
mov
and
dec
pop
mov
cmp
or
push
cmpsb
dec
cmp
dec
mov
xchg
mov
mov
xchg
arpl
lret
jno
and
clc
push
gs
fcmove
and
sbb
in
mov
fs
cli
lds
rcrb
jb
jbe
and
dec
inc
loopne
adc
mov
mov
sar
leave
shr
scas
ljmp
pop
mov
or
les
mov
or
push
mov
dec
sbb
xchg
or
and
add
cmc
fisubl
push
jmp
mov
xchg
add
ss
lods
outsb
xchg
cmpsl
adc
lret
mov
imul
fstl
call
cwtl
sub
or
xchg
shl
repz
lock
jl
jg
xchg
adc
or
aaa
xor
xchg
jmp
or
loopne
jp
sub
lock
jbe
xchg
test
cmp
mov
mov
and
mov
add
cmp
gs
es
pop
xchg
mov
fstl
and
lds
cltd
ljmp
dec
in
jge
jmp
fbstp
xlat
dec
and
pop
aaa
pushw
inc
mov
ds
je
pop
push
mov
enter
ss
xor
adc
rol
dec
dec
or
jge
jg
pop
push
push
loope
mov
cs
jecxz
add
mov
push
cltd
pushf
dec
jecxz
push
add
ret
lea
lret
and
xchg
outsb
aas
jmp
mov
mov
fs
jg
dec
jb
loope
mov
pop
jb
popf
cmpsb
sbbl
subl
xor
mov
filds
movb
xchg
jae
fdivrs
push
imul
jne
xchg
cmpsb
xor
das
xchg
sbb
lea
sub
popf
adc
xor
sub
pushf
sub
aad
mov
add
pop
js
int
adc
enter
jmp
lret
jae
jecxz
cmpsb
arpl
sub
pop
pop
adc
cmp
sbb
mov
mov
rorb
or
ret
or
jl
jecxz
sbb
mov
pop
jge
jae
jnp
pushf
xchg
or
dec
out
dec
jmp
mov
xlat
aas
imul
and
ret
shll
mov
inc
dec
xlat
inc
aas
pop
push
push
scas
xchg
js
cli
pop
push
loop
les
loop
daa
movsb
push
rolb
cmp
test
sbb
lods
outsl
pop
jns
aaa
sbb
lds
or
add
cmc
mov
arpl
popf
cmp
ja
mov
and
pop
pop
pusha
dec
xchg
dec
sbb
cmpsb
jns
rolb
ret
outsb
jecxz
sub
mov
mov
inc
dec
fnstsw
sbb
rclb
mov
es
aam
xchg
insl
dec
mov
sub
inc
mov
das
sub
pop
mov
jl
out
mov
xor
ljmp
xchg
add
mov
mov
nop
mov
jb
les
cmpl
and
mov
pop
out
xor
dec
jae
out
fucom
sub
cmp
sbb
pop
outsb
jg
sub
pop
fldl2t
add
jo
adc
add
adc
xor
pop
pop
pop
mov
frstor
pushf
inc
leave
adc
pop
or
sub
mov
cmpsl
sub
mov
jl
pop
dec
inc
inc
xchg
mov
jg
jbe
xchg
aam
sbb
sub
rol
dec
cmp
cs
pop
movsl
xchg
cmp
pop
mov
lret
dec
orb
dec
dec
sbb
dec
push
fists
cwtl
int
nop
cmpsb
jg
mov
sub
pop
fmull
and
fbstp
sub
lock
and
mov
das
fcomi
les
cltd
mov
xor
sub
pop
jae
call
call
and
adc
rorl
jge
je
aas
loope
adc
adc
lret
and
jae
pop
and
out
es
xchg
insb
cltd
lock
shlb
sbb
cmp
aaa
xchg
mov
cmc
jnp
dec
xor
dec
xor
add
mov
aas
dec
xor
cmp
lret
fcoms
adc
push
sbb
mov
cmp
fildl
mov
jp
dec
dec
imul
sbb
xchg
jg
loop
jnp
cmovge
enter
and
std
stos
stc
lret
pop
lret
pop
iret
cmp
mov
daa
cmp
pop
pop
sbb
sbb
mov
stc
clc
add
mov
clc
ffreep
lret
sbb
add
push
mov
cli
addr16
cmpsb
jnp
sub
sub
les
lret
add
sbb
and
and
or
pop
out
xor
xchg
push
adc
cli
sbb
push
and
pop
std
xlat
inc
or
rcrb
push
enter
sub
movsl
nop
xchg
or
xchg
push
jg
dec
cld
sbbb
iret
inc
adc
repz
cmpsl
and
xlat
dec
mov
in
jmp
cli
stos
loopne
xor
xlat
ror
sub
cmp
and
ret
push
dec
pop
cmp
pop
aam
leave
arpl
mov
adc
shl
das
mov
scas
sbb
or
add
and
lret
add
pop
lcall
jg
gs
sub
mov
rep
pop
xchg
addl
push
inc
push
add
lea
inc
jle
xor
push
jge
stc
and
inc
in
pusha
lret
xlat
cmc
push
shll
fwait
pop
mov
inc
or
or
lahf
mov
cmc
ret
mov
imul
imul
pop
jno
sbb
and
sub
adc
lret
call
xchg
sbbl
mov
xor
lds
jb
mov
mov
pusha
repz
xchg
movsb
lods
mov
fwait
addr16
dec
add
cmp
mov
xchg
data16
pusha
cmp
int3
popa
or
push
dec
cs
stos
xor
dec
mov
movsl
jbe
dec
daa
addr16
pop
test
jnp
cmp
ljmp
jne
dec
bound
int
mov
jno
js
lds
xorb
shlb
add
call
loopne
pop
aam
dec
mov
stc
cmp
push
pop
mov
and
sub
jge
loope,pn
repnz
or
insl
arpl
inc
in
dec
pop
imul
andl
loope
dec
test
lahf
mov
sbb
enter
cmp
inc
or
dec
je
rcrb
or
hlt
mov
inc
out
inc
stc
call
push
nop
push
pop
pushw
gs
pop
dec
xchg
stc
jae
leave
ret
in
and
xchg
out
dec
mov
ror
sbb
jl
loopne
aas
data16
jae
daa
in
xchg
pop
sbb
dec
adc
sub
insb
mov
std
jbe
ljmp
mov
stc
scas
fwait
xor
pop
and
and
mov
pop
jne
adc
sub
adc
call
fucomi
inc
and
mov
aas
mov
mov
repnz
xchg
mov
jge
jmp
jnp
cltd
call
mov
sbb
int3
and
add
scas
sbb
add
pop
adc
cwtl
loope
insb
sub
jmp
jg
jge
repz
stos
ret
scas
mov
jg
scas
adc
nop
dec
lahf
push
or
pop
sub
sub
mov
push
fldl2e
sub
pop
incb
mov
ret
inc
jne
push
inc
sbb
adc
dec
into
neg
push
movsb
loope
jl
data16
aam
dec
pop
jecxz
xchg
xlat
popf
dec
nop
loopne
iret
push
call
inc
push
insb
mov
inc
repnz
push
sbb
or
jle
out
dec
mov
pop
cltd
shlb
sbb
insb
xchg
lods
dec
fcomps
inc
lods
js
cmp
aad
fs
lcall
and
pop
scas
jle
subl
push
push
xor
loope
sub
jp
add
loope
rorb
mov
pushf
out
dec
test
and
test
data16
enter
mov
out
pop
mov
dec
mov
and
jo
jns
enter
in
mov
out
pop
mov
mov
int3
push
cmpsb
iret
mov
scas
add
xchg
clc
rcrl
pop
mov
rclb
mov
scas
sbb
gs
jg
and
shlb
dec
pushf
push
flds
sbb
xor
push
push
and
loop
bound
mov
repz
xchg
add
cs
js
jo
insb
movsl
and
stc
mov
inc
es
cld
xchg
cmp
pop
fdivs
les
xor
filds
popf
mov
je,pn
jb
stc
pop
mov
add
out
inc
test
jge
cmpsb
inc
into
outsb
loope
in
xchg
arpl
adc
repnz
mov
push
sub
filds
push
shl
pop
addl
idivb
inc
sbb
mov
inc
mov
popf
ss
lret
push
mov
cmp
sub
test
dec
sub
inc
cs
xchg
mov
js
mov
or
cmp
jl
pushf
jo
les
or
int3
stos
mov
gs
cmc
pusha
int3
dec
bound
fcmove
loope
xlat
sbb
call
dec
test
data16
std
xchg
call
mov
sbb
call
push
or
adc
inc
addr16
push
aas
mov
daa
cli
xor
xor
jmp
in
mov
cmc
dec
xorl
jo
push
movsl
jp
or
hlt
shlb
pop
xchg
pop
or
xchg
es
adc
xchg
inc
mov
sarb
cmpb
push
xchg
pop
dec
inc
lds
ljmp
pop
pop
mov
jnp
sub
push
mov
xor
push
adc
jle
shll
mov
in
push
stos
pop
add
sbb
push
jge
shlb
popf
sub
ret
sbb
mov
jbe
loope
imul
mov
loopne
or
mov
push
xor
out
push
fcoms
or
outsl
cs
inc
imul
out
lret
mov
fimuls
jb
test
icebp
push
scas
add
leave
mov
aad
adc
mov
punpckldq
test
aam
lds
test
fstps
sbb
mov
adc
cmp
dec
and
xor
fisubs
out
jb
test
stc
mov
lret
xor
ffreep
cmp
inc
popa
in
in
arpl
push
pushf
add
es
pop
sub
dec
cmp
dec
mov
hlt
push
xor
jle
xchg
repz
inc
nop
mov
outsb
insb
scas
hlt
jecxz
jae
inc
pop
sub
pop
mov
stos
push
or
into
sbb
inc
inc
pushf
or
stc
sahf
mov
nop
xchg
jecxz
or
lea
sub
jmp
or
adcl
ror
push
test
ljmp
jg,pn
cmc
add
and
cmc
cmp
stos
imul
in
xlat
push
jle
add
stos
mov
fadd
test
mov
or
mov
add
jg
sub
adc
ja
dec
mov
rorl
push
cmpl
pusha
adc
pop
mov
jo
mov
repnz
roll
sub
cmpsb
jno
cltd
adc
sub
rorl
xor
aam
loope
mov
mov
add
cmpsl
jns
imul
lds
jmp
cltd
sub
or
and
out
pop
inc
arpl
mov
aaa
dec
aas
mov
cli
pop
mov
imul
leave
mov
jo,pn
test
cmp
jmp
dec
pop
cmp
out
mov
inc
out
popf
test
mov
pop
loope
scas
push
gs
mov
lods
pusha
leave
cs
enter
loop
jg
fcmovbe
shll
adc
xchg
dec
iret
scas
jl
jae
pop
inc
leave
dec
pop
inc
and
into
add
popa
rorl
cmp
or
outsl
and
mov
scas
dec
dec
fdivl
sub
jmp
jne
jno
ret
aad
jae
sahf
pop
push
pop
sub
incl
shrb
bound
push
push
jae
in
mov
imul
sti
dec
jp
push
cmp
inc
lea
fmul
roll
push
pop
push
xchg
mov
pop
je
mov
dec
push
iret
or
sahf
lret
ficoml
aaa
pop
in
out
jno
push
pusha
mov
lahf
adc
or
or
dec
addr16
push
lea
mov
dec
shlb
pop
cs
or
sti
cld
jl
fimull
sbb
test
xchg
and
outsb
mov
mov
mov
mov
ret
add
scas
dec
mov
cmpsb
repz
mov
cltd
push
or
dec
cmpsb
mov
cmp
enter
push
cmpl
dec
cmp
cmpsb
xchg
dec
inc
std
push
sbb
imul
or
mov
sub
dec
dec
pop
enter
mov
xchg
pop
mov
rcl
ss
xor
pop
push
roll
or
repnz
call
cmp
popa
leave
jnp
mov
xchg
mov
mov
mov
jp
lahf
push
push
add
repnz
push
dec
sbb
sub
dec
add
sub
in
dec
xchg
mov
adc
pop
adc
xor
mov
jge
push
rcrb
dec
shl
insb
dec
mov
mov
xchg
aas
dec
adc
popf
scas
pop
sub
xchg
ljmp
lds
inc
mov
js
outsl
dec
cmc
inc
outsl
lcall
inc
jg
cwtl
ljmp
out
dec
in
adc
cmp
repz
scas
or
leave
xor
push
dec
xchg
out
mov
mov
xor
movl
lock
dec
pop
mov
jmp
sub
jp
fsts
lret
xor
dec
adc
mov
push
in
push
ja,pn
sahf
repnz
or
mov
jnp
cli
jmp
sub
mov
pop
repz
cmp
dec
jecxz
add
xchg
dec
call
push
inc
loopne
test
add
call
jge
repnz
pop
dec
inc
ja
dec
sub
std
je
shll
bound
inc
lret
cli
ficompl
aad
mov
mov
add
xchg
add
jl
rolb
int3
add
xlat
cmpsb
jae
mov
call
in
mov
cmpsb
rol
jl
das
mov
cmp
inc
jg
dec
ss
sbb
xor
fs
pop
mov
mov
sarb
push
cmp
aas
aad
mov
ret
add
xlat
push
sbb
push
sub
mov
pop
js
int3
inc
push
fcmovbe
aam
sarb
dec
pop
daa
bound
xchg
mov
mov
mov
fucom
xchg
sbb
mov
push
lock
add
or
enter
lret
xor
insl
inc
xchg
adc
dec
enter
stc
push
mov
pop
jmp
mov
xor
aam
std
xchg
xchg
ljmp
scas
mov
enter
mov
ljmp
xor
test
je
pushl
sbb
sbb
xchg
stos
and
aam
les
repz
pop
aas
cs
xchg
loope
mov
aas
mov
add
fstl
popf
xchg
or
push
xchg
imul
stos
lret
push
jo
call
or
inc
enter
push
mov
inc
pop
lret
xor
lret
out
pop
sti
xor
cmp
adc
int3
and
shlb
inc
aas
enter
leave
push
inc
bound
leave
je
jge
call
ss
mov
add
jecxz
mov
inc
xlat
inc
dec
ret
adc
and
out
loope
inc
cwtl
add
mov
xor
sub
mov
int
std
inc
sti
ljmp
lret
les
inc
mov
jg
jmp
inc
mov
sbb
lret
fcomps
fistl
imul
popa
pop
sbb
sub
lods
sbb
out
xor
arpl
or
lcall
mov
aam
cmp
pop
pusha
andl
ret
fmul
add
inc
ja
inc
xchg
call
xchg
and
leave
or
sarb
and
sbb
test
pusha
mov
mov
cmp
jmp
sbb
jecxz
int3
lds
or
outsl
mov
push
mov
or
mov
fsubrs
push
pop
dec
or
jns
repnz
mov
sub
dec
or
test
add
clc
stos
cs
leave
aas
and
pop
lahf
pop
fistl
ds
mov
or
scas
xchg
pop
xchg
aam
ret
ljmp
pop
mov
jg
xor
aas
cmp
inc
push
fnstcw
ja
outsl
jae
pop
add
rclb
fninit
dec
stos
enter
jne
cmpsb
rorb
and
cmp
leave
lret
adc
sbb
sub
sti
into
push
adc
iret
nop
adc
jl
xchg
loopne
enter
inc
and
lock
dec
pop
fists
mov
cmc
and
outsl
or
insb
pop
jge
or
test
push
daa
ret
mov
fimull
popa
push
aas
xor
loopne
das
loop
add
sbb
inc
jmp
xor
jne
jo
xchg
pop
cli
gs
lea
xor
int
ja
sub
test
arpl
shlb
cmp
clc
movsl
cs
push
ljmp
mov
fisttpll
aaa
stos
pop
scas
lret
adc
insb
or
repz
mov
push
nop
mov
pop
stc
adc
jmp
rorl
jnp
leave
mov
sbb
sbb
jo
or
dec
mov
sbb
mov
lretw
push
xchg
jnp
subb
sub
xchg
sbb
pop
fnsave
push
fnsave
push
clc
push
test
cli
and
add
stos
push
inc
test
sub
ds
lret
xchg
add
jmp
aaa
lea
int3
pop
dec
pop
pusha
sub
dec
mov
outsl
add
test
xor
push
mov
or
mov
nop
sbb
cmp
imul
sub
sub
jno
into
and
rorb
imul
pop
inc
jp
cs
cmp
push
adc
sbbb
xor
adc
nop
xor
dec
dec
mov
jo
rolb
repz
pop
jo
xchg
adc
jg
add
jl
sbb
cmp
shl
xor
add
mov
push
xchg
sub
mov
fstpt
dec
loope
mov
xor
mov
cmp
icebp
jae
out
sbb
cs
mov
adc
nop
jne
or
sub
out
dec
movsl
lcall
adc
lret
mov
bound
pop
dec
lret
push
aas
cwtl
sbb
sub
jbe
pop
hlt
insb
push
lods
into
shrl
dec
mov
cmc
or
cmp
cmp
cmpsl
pop
mov
insl
gs
loop
adc
inc
mov
sub
hlt
jmp
scas
xor
adc
call
lret
jl
int
dec
mov
lods
ds
wbinvd
mov
xor
push
mov
imul
sbb
jp
stos
xlat
pusha
mov
sub
or
pop
add
or
jo
fcmovnb
test
ficompl
movsl
jmp
mov
rclb
imul
pop
inc
pop
cld
addb
outsb
or
mov
add
shrb
mov
adc
dec
pop
stos
stos
cs
lods
hlt
jl
add
fadd
test
push
fdivl
and
shll
and
cs
push
mov
hlt
pushf
push
mov
add
sub
andb
leave
sbb
push
xor
cmp
adc
gs
pushf
inc
arpl
cmp
mov
into
scas
je
and
leave
push
mov
xlat
daa
loop
inc
rcll
mov
mov
cmpsb
loopne
hlt
jmp
push
inc
aam
leave
stos
mov
cmc
push
cmpsb
loopne
sbb
push
dec
push
into
push
inc
or
pop
xlat
ja
mov
inc
aad
idivb
sbb
orb
stos
pop
sbb
mov
sbb
sahf
pop
xor
int
js
cli
jmp
lods
cmp
mov
push
out
cltd
xchg
lds
test
sub
nop
sub
jmp
and
jp
popf
or
sbb
popa
pop
lods
setae
add
lea
loope
daa
ljmp
out
and
pop
xchg
ja
sbb
inc
dec
inc
out
dec
adc
dec
js
leave
and
mov
mov
divb
mov
andb
adc
gs
inc
push
mov
adc
jae
add
cmp
and
nop
rcll
sub
cwtl
test
sbb
or
loopne
sbb
mov
jno
adc
cmp
lahf
mov
sub
xchg
cs
jb
mov
pop
jmp
shlb
push
and
dec
imul
jl
filds
dec
pop
repz
or
lret
sbb
negl
movsl
cmp
sub
inc
sub
adc
xor
sub
enter
shlb
ret
mov
pop
callw
or
cs
mov
cmp
fildl
dec
dec
mov
movsl
lret
sbbl
push
push
ret
xlat
cmp
push
movsl
push
icebp
pavgb
cs
adc
sub
data16
in
ror
fildl
dec
mov
mov
js
pop
icebp
fisubrs
dec
gs
sahf
adc
jne
xchg
icebp
iret
push
add
jg
cli
sbb
push
sub
inc
push
fsubl
ffreep
and
cmp
enter
jae
add
std
idivb
ja
orl
fldl
js
sbb
popf
mov
inc
mov
ret
ret
jne
pop
dec
aam
faddl
jne
sbb
cli
sub
xor
fildl
mov
dec
mov
popa
adc
test
mov
mov
mov
inc
imul
sbbl
push
stos
pop
push
lds
ss
sbb
mov
aam
insb
mov
sbb
inc
xor
inc
repnz
pop
pop
mov
test
cmp
sub
inc
fstps
inc
and
jmp
inc
and
cmp
dec
divb
roll
faddl
mov
add
dec
notb
aaa
outsl
lret
out
xchg
fidivrs
hlt
test
shrl
inc
add
pop
arpl
pop
adc
popa
outsl
pop
xor
mov
xchg
rolb
int3
sub
push
arpl
roll
pop
ret
inc
bound
outsb
push
push
mov
lock
mov
lahf
mov
dec
dec
aas
mov
cld
lret
enter
jns
xlat
repz
test
push
rorb
pop
rep
rorb
rolb
push
mov
lock
adc
push
repz
fisttps
sar
ror
or
aas
dec
iret
jmp
jne
clc
xor
flds
adcl
andl
idiv
push
sub
mov
in
mov
popf
pop
xchg
or
repz
xchg
data16
aas
mov
dec
and
test
cmp
cs
rol
inc
jl
mov
icebp
cmp
dec
pop
subb
hlt
jecxz
pop
cs
gs
aad
push
push
and
sbb
mov
gs
adc
push
out
nop
lret
scas
clc
adc
xchg
test
push
mov
rorl
fbstp
jecxz
inc
dec
push
data16
mov
push
mov
pop
mov
and
fbld
add
popa
stos
insb
dec
push
test
dec
je
inc
push
push
mov
popa
add
sti
pop
shrl
add
gs
pop
ss
lods
jae
cmp
scas
rcll
jl
addr16
push
or
ret
loope
jmp
movsl
mov
mov
pop
xor
sub
and
pop
xor
adc
insl
in
pop
pop
add
ss
pop
es
jl
insl
loope
and
adc
movsl
aas
cmp
mov
pop
mov
sahf
inc
or
fs
lcall
sub
call
push
mov
test
xor
lahf
imul
push
insl
or
call
call
push
outsb
insb
sub
ds
sub
cs
sbb
mov
ss
ret
mov
pop
fidivrs
adc
pop
js
loope
addr16
or
xchg
mov
pop
out
movsl
leave
xchg
dec
add
js
adc
adc
jmp
or
ret
lahf
pop
cmp
roll
mov
aaa
lahf
gs
mov
lret
js
cmp
in
lock
jbe
mov
mov
and
or
mov
dec
test
idivb
sub
cmpsb
xlat
lods
and
push
aas
push
js
mov
xchg
sub
mov
add
stos
pop
inc
mov
adc
out
push
xchg
mov
sbb
fidivrl
rolb
repz
adc
pop
sbb
repz
mov
imulb
lahf
int3
pop
rorb
mov
stos
or
or
imul
dec
divl
dec
push
push
fists
enter
sub
dec
xor
in
popl
call
pop
inc
mov
popa
into
iret
ret
aas
jno
mov
sbb
cmp
icebp
lret
jmp
pop
adc
mov
adc
aas
adc
mov
and
inc
adc
inc
lret
shlb
inc
pusha
mov
testb
xchg
add
xchg
ja
sub
xchg
mov
sub
and
inc
pop
and
sarb
out
mov
jns
repz
push
fiaddl
loope
mov
sub
mov
jecxz
add
jmp
rorl
imull
xchg
push
aas
jbe
mov
cmp
sbb
jmp
hlt
loopne
inc
sub
mov
pop
sti
pusha
es
lret
fcoms
cmpsl
sbb
add
xchg
mov
dec
jae
lock
inc
and
inc
xlat
out
adc
push
ret
outsl
jmp
sbb
arpl
dec
clc
pop
inc
dec
call
or
push
arpl
inc
in
sub
fldl
xchg
adc
les
das
pop
scas
adc
ficoms
mov
imul
cmp
ror
sbb
dec
inc
or
iret
and
loopne
cld
xor
and
call
mov
mov
loope
xor
pop
jp
jg
pop
jl
aad
or
ljmp
enter
daa
sub
mov
lret
aam
std
xchg
repnz
push
ret
and
add
inc
ret
adc
arpl
inc
data16
daa
shrb
fidivl
pop
mov
sarb
inc
adc
negb
mov
xlat
adc
cmpsb
imull
cmp
pop
cmpl
pop
lds
inc
jg,pn
enter
pusha
ficoms
xor
pop
xchg
pop
outsl
mov
mov
inc
dec
sub
call
cs
and
cmpsb
xchg
dec
test
clc
shr
into
mov
inc
dec
movsl
pop
dec
dec
cmp
adc
jb
adc
mov
cmp
mov
cs
xor
movsb
xchg
repz
push
inc
push
fiadds
mov
cs
sbb
inc
dec
test
pop
mov
into
ja
into
lds
mov
mov
push
xchg
and
in
push
scas
add
das
jl
insl
into
push
imulb
dec
push
add
je
cmp
dec
into
dec
pop
pop
stos
push
dec
and
mov
bound
xchg
cmc
pop
jb
lock
adcl
scas
adc
xor
mov
cmpsb
call
enter
or
mov
or
fs
sbb
mov
dec
mov
sarl
xor
mov
imul
and
inc
ss
popf
loope
cmp
sbb
sbb
lods
retw
inc
daa
scas
sbb
pop
lret
pop
sbb
inc
and
out
js
add
cmp
pop
sarb
in
fmuls
add
push
fisubrl
add
dec
call
xlat
andb
fnstsw
pusha
fildll
dec
sti
ljmp
dec
in
loop
shrb
loope,pn
cmp
lahf
sbb
mov
push
adc
xchg
lret
sub
mov
adc
test
test
sub
push
dec
mov
sbb
daa
dec
add
in
lret
add
mov
mov
and
test
mov
ret
dec
inc
arpl
jmp
pop
call
add
jmp
add
jae
arpl
lret
lret
insl
xor
stc
cs
cmc
cld
idivb
adc
call
jae
ds
cmc
add
loope
mov
movsl
shll
inc
das
fnstcw
xor
insb
pop
sub
fbstp
loopne
dec
xor
adc
das
dec
out
jle
es
inc
mov
or
loopne
or
cwtl
and
fwait
jbe
push
pop
stc
js
push
mov
stos
or
dec
call
sahf
dec
pop
mov
mov
sub
pop
mov
or
cs
xchg
loope
lahf
cs
fstpl
insl
adc
cmp
dec
dec
pop
test
push
add
push
movsl
xlat
pop
inc
movsl
xchg
pop
adc
shr
in
jg
andb
aam
fcomp
mov
pop
movsl
cmpl
lret
push
inc
mov
push
add
sbb
push
add
mov
insb
mov
enter
dec
push
and
sub
loop
leave
imul
les
clc
psrlq
ret
fdivs
or
mov
mov
mov
popf
es
stos
xchg
insl
inc
les
lds
fidivs
rorb
inc
sub
and
xorl
xlat
fistpl
mov
in
jp
cs
and
loop
add
or
sarb
mov
push
and
adc
xor
icebp
andb
lahf
xor
xchg
pop
xor
sub
fwait
inc
xor
and
popf
dec
sub
and
mov
stc
mov
pop
sbb
mov
pop
xor
outsl
leave
outsb
pop
dec
xchg
mov
or
cs
and
lds
cmpsb
mov
movsl
ret
pop
push
adc
repnz
das
addl
ret
inc
cwtl
std
stc
lods
dec
pop
mov
fwait
xor
lahf
sbb
push
inc
or
pushf
push
cmp
push
and
enter
fsubp
mov
pop
fcoms
and
jns
lock
cmp
push
loopne
out
push
ret
xorl
sub
loop
cs
in
mov
xor
xor
cmp
cmp
data16
popa
mov
mov
push
sbb
mov
cmc
jne
inc
or
xlat
aaa
mov
pop
push
into
inc
pop
fwait
push
cmp
dec
pop
adc
mov
cs
mov
sahf
popa
inc
lods
lret
lcall
addl
sarb
push
cmpl
stc
jae
xchg
movsb
cmp
aam
and
inc
lahf
enter
nop
mov
cmp
or
push
and
cmp
sub
pop
lcall
cmpsb
mov
cmp
and
pop
sti
movsb
iretw
adc
loop
dec
jns
in
mov
jp
aas
daa
cmc
subl
les
mov
mov
in
or
xchg
jbe
and
movsl
fdivrl
cmpsb
into
cmp
add
in
jl
in
sub
jno
jecxz
and
incb
out
inc
insb
cmp
cmp
jge
into
cmc
imul
lea
pop
fisttps
dec
pop
and
or
lods
mov
inc
sub
mov
adc
xor
dec
imul
jp
dec
div
scas
outsb
gs
mov
pop
fidivrs
inc
movl
inc
jecxz
jnp
push
outsb
jne
and
sbb
mov
push
data16
cltd
dec
fsubp
and
aas
imul
sub
add
xor
mov
push
dec
xlat
dec
cmpsb
js
mov
je
pop
sub
dec
add
push
add
pop
test
fdivr
sbb
sbb
lods
inc
cs
es
pop
leave
pop
add
xlat
outsb
push
call
mov
dec
lods
add
sbb
xchg
jno
daa
or
stos
pop
cmp
or
push
pusha
divl
pushf
and
inc
pusha
push
test
mov
mov
xchg
insb
xchg
add
dec
fnstenv
cmpsl
mov
or
in
ret
inc
movb
jns
or
sti
xchg
mov
rolb
adc
movsl
push
jle
pop
je
into
jnp
xlat
xchg
stc
or
push
fcmovbe
sub
and
daa
cltd
fsub
cmp
jmp
xor
pusha
cmp
aas
inc
fwait
shlb
and
cmp
sub
rolb
or
call
pop
jnp
dec
mov
cmpsb
outsl
std
mov
stos
pop
filds
push
cwtl
out
rcrl
jge
hlt
push
stc
ja
and
ret
inc
push
pop
test
sahf
jnp
pop
fildll
mov
sub
pop
sub
lods
jmp
mov
inc
data16
jg
push
dec
dec
inc
js
push
aas
pusha
jno
inc
fwait
sub
pop
lret
adc
in
cs
xchg
ret
pusha
std
adc
xor
lcall
inc
ljmp
or
mov
orb
cmp
ret
xchg
out
pop
iret
and
shl
scas
aas
aaa
mov
mov
insl
or
mov
xorl
in
adc
pop
sbb
mov
sbb
dec
imul
rolb
cld
sub
ficompl
insl
out
pop
add
adc
dec
add
divl
movsb
popa
scas
add
add
pop
mov
push
iret
loopne
lea
pop
sbb
sbb
mov
inc
pop
sti
inc
or
js
mov
jns
xchg
xor
incl
or
loopne
xor
cs
push
call
into
inc
lret
pop
mov
cmp
or
shll
adc
in
inc
outsb
enter
push
arpl
sbb
adc
mov
dec
mov
pop
sub
adc
pop
nop
mov
xor
inc
lods
mov
pop
inc
mov
icebp
mov
scas
clc
sbb
sub
ret
stc
leave
mov
push
pop
rclb
pop
aad
xor
pop
pop
leave
inc
adc
mov
push
xor
aas
push
lret
jle
and
adc
gs
xor
bound
inc
dec
sub
push
pop
rol
mov
push
jnp
cld
lahf
and
mov
push
inc
mov
xlat
repz
out
sbb
shlb
or
and
mov
test
aas
cmp
adc
or
jmp
mov
sub
dec
and
mov
push
xchg
cmp
sub
adc
pop
xchg
xor
cmp
dec
jmp
dec
mov
lret
mov
dec
and
addb
pop
xchg
jnp
pop
test
inc
pop
jae
cwtl
popa
push
aaa
test
mov
repnz
push
or
data16
dec
inc
dec
cmc
stos
push
jle
jb
xchg
cmpsb
test
jecxz
in
scas
jg
int
dec
adc
push
xchg
ss
pop
or
arpl
insb
mov
mov
das
cld
stos
add
out
pop
dec
jl
sub
imul
pusha
fldcw
scas
xchg
outsl
xor
dec
call
or
orb
or
dec
add
mov
leave
push
push
mov
mov
sub
mull
jnp
test
mov
fisubs
ror
jp
push
and
cwtl
adcl
mov
int
in
sti
pop
test
lds
adc
push
cmp
or
loope
pop
addr16
andl
fiadds
jmp
add
ja
xchg
cmpsb
pop
mov
or
rcl
or
jbe
insb
les
sbb
sub
fnstcw
out
stos
dec
adc
popa
push
pop
stc
dec
pop
or
mov
mov
push
sbb
mov
jmp
pusha
les
js
ja
inc
adc
mov
clc
dec
adc
movsl
mov
pop
cmp
jg
sbbb
aaa
sbb
fiadds
cli
decb
push
arpl
test
fdivrl
sub
dec
add
inc
pop
mov
push
inc
jo
imul
mov
call
push
or
addl
mov
arpl
jno
mov
xchg
mov
jae
das
mov
lret
lcall
sahf
movsb
cmp
cmp
rcrb
pusha
jbe
push
fimuls
aas
sub
xor
addr16
pop
dec
sub
jge
movsl
in
cmp
or
jo
jecxz
and
cli
mov
inc
loop
jg
mov
pop
xor
sub
int3
mov
jae
ret
mov
mov
add
sbb
cs
mov
imul
inc
dec
cmp
arpl
push
test
sarb
lock
or
inc
xchg
dec
or
fisttpl
hlt
aam
or
lcall
cli
xchg
xchg
and
jae
jmp
inc
dec
daa
jnp
jl
xchg
jl
inc
fbstp
mov
and
push
cli
mov
cmc
cs
pop
mov
add
cmp
mov
movsl
dec
je
shlb
add
adc
push
push
lods
js
aas
ret
or
scas
fnstenv
out
mov
sbb
stos
jb
xchg
adc
lock
mov
aad
lea
xchg
rorl
jno
les
aam
cs
lret
inc
or
sti
call
cs
test
mov
mov
mov
cmpsb
add
xor
andb
cmpsb
sub
mov
xor
sbb
popf
and
fiaddl
push
pop
push
adc
clc
rep
es
nop
lret
cmpsl
cwtl
rcrl
dec
xor
int3
call
fsubr
xor
inc
push
xchg
jbe
sub
pop
cltd
test
rorl
mov
inc
xchg
push
inc
out
mov
cltd
inc
dec
pop
ficoml
dec
les
dec
pop
into
or
sbb
inc
fistl
mov
psrlw
jmp
jb
sbb
lods
fwait
xchg
das
dec
dec
loope
ret
dec
push
mov
ret
data16
sub
sub
les
outsb
mov
inc
adc
lock
aas
dec
sub
xlat
data16
test
call
dec
jb
es
mov
shrl
add
out
clc
fsubl
mov
sbb
push
cs
bound
cmp
stos
std
hlt
dec
out
enter
movsl
mov
mov
mov
push
lea
enter
cmovle
daa
pop
mov
sbb
lock
jl
pushf
ffree
subl
push
pop
inc
inc
aam
push
repz
inc
ret
iret
pop
test
sbb
or
daa
jo
sub
clc
pop
jmp
lret
mov
dec
aas
jg
mov
dec
mov
ds
cltd
sbb
mov
sub
add
pop
testl
shlb
cltd
pop
or
imul
jne
nop
js
adc
int
scas
add
xchg
add
daa
cmp
shrl
sub
inc
cmp
gs
aaa
push
dec
fsubs
js
pop
subb
and
mov
data16
ss
inc
mov
leave
stos
adc
data16
mov
mov
icebp
fcmovnbe
cmove
pushf
and
ret
pop
jl
icebp
push
cmp
pusha
ret
push
ror
lods
shrb
dec
nop
rcll
aam
sbb
cmp
lret
stos
inc
fisubs
inc
sub
js
jae
push
cs
js
and
sub
cmp
ds
mov
or
pop
add
sub
cmp
dec
data16
mov
int3
xchg
aad
add
call
mov
and
pop
shr
adcb
popf
sahf
cmpsl
mov
je
adc
mov
push
cmp
stos
in
test
out
ficoml
fildll
inc
xchg
sbb
shrb
ja
xor
rcr
cld
es
cmp
test
cmpsb
test
test
dec
sahf
jp
push
pusha
std
lret
pop
add
ja
inc
movsl
sub
sbb
stos
ds
out
mov
xchg
loop
mov
fs
fnstsw
dec
das
add
inc
pop
pop
sti
pop
sbb
pop
int3
inc
outsl
addl
mov
in
or
dec
popa
aam
mov
mov
sbb
or
or
jae
dec
mov
sbb
cmp
pusha
and
jecxz
ficompl
mov
in
add
aaa
push
fcompl
xor
jl
add
cmpsb
mov
scas
mov
cs
cmp
adc
xchg
xlat
ja
mov
orb
xchg
inc
mov
adc
fwait
mov
pop
loope
imul
sub
xor
lea
lahf
cmpsb
stc
std
cltd
mov
jae,pn
push
lods
and
sub
or
scas
jmp
push
adc
shll
cltd
jo
in
fwait
test
ja
ljmp
dec
ficomps
sbb
xchg
ret
and
shll
aas
push
and
out
testb
mov
mov
push
mov
jne
scas
add
dec
aaa
dec
xor
mov
data16
or
dec
jp
jmp
test
jbe
adc
cmp
dec
add
ret
mov
dec
pop
data16
andl
data16
jp
xor
pop
push
cmpsl
test
into
inc
mov
call
out
je
pop
std
dec
and
cmpsl
ret
sbb
adc
pop
mov
pop
icebp
xchg
lret
dec
push
mov
lock
jb
loopne
xlat
jle
lea
dec
xor
pop
hlt
fisubl
inc
jmp
add
mov
jp
and
push
int
jbe
mov
popa
adc
dec
or
sub
scas
add
adc
dec
push
pop
mov
cs
sbb
and
mov
test
jo
shrb
add
ljmp
les
mov
xchg
and
cs
lret
insl
pop
aad
js
pop
jae
test
and
subb
stc
stc
mov
repz
xchg
les
nop
add
popa
jl
aad
lds
into
pop
xor
mov
adc
fiadds
mov
or
aaa
mov
ss
cmp
mov
cmp
cmp
cmp
ds
je
popf
jns
shl
and
cltd
ljmp
sbb
popa
fldcw
jnp
mov
lahf
pop
jl
dec
mov
and
or
push
adc
leave
iret
inc
push
lret
dec
int
sub
xchg
inc
sub
cs
bnd
dec
sarb
mov
ret
jnp
jl
or
inc
popa
in
or
sub
cmp
mov
into
imul
adc
movsl
imul
mov
pop
mov
sub
or
mov
or
xchg
les
jp
pop
xor
sub
fiaddl
mov
push
push
mov
xor
xchg
pop
icebp
xchg
imul
in
or
cmpl
push
sbb
push
ljmp
and
ret
mov
cmpsb
adc
gs
popa
jne
in
pop
dec
mov
cmp
push
and
pop
or
dec
push
adc
or
in
push
icebp
cmp
pop
nop
pop
shrl
add
mov
push
in
in
icebp
xlat
in
aam
inc
fistpll
mov
mov
push
or
aas
or
push
and
call
add
cld
dec
dec
les
orl
lea
xor
xor
dec
mov
add
dec
mov
jmp
lret
mov
jb
in
push
add
cmp
popf
or
out
clc
loopne
ljmp
jae
scas
push
pop
rcr
push
lods
test
test
push
adc
mov
dec
jae
stos
in
rcrl
leave
adc
repz
dec
mov
and
inc
rolb
sub
inc
in
fwait
add
sub
mov
inc
outsb
popa
lret
xor
fsubl
pop
pop
negb
adc
lods
add
fdivrp
jae
or
sbb
in
sub
lock
jbe
lret
mov
inc
sti
movsb
not
push
mov
lret
lahf
lock
xchg
pop
movsl
adcl
aam
adc
fidivl
iret
sub
jne
add
xchg
jmp
mov
clc
inc
jle
add
xchg
fcmovb
push
dec
push
push
pop
ret
mov
mov
add
pop
inc
sub
xor
hlt
adc
pop
push
test
mov
and
dec
pop
push
mov
mov
lret
es
movsl
pop
shl
mov
add
inc
arpl
lret
lods
xor
mov
pop
pop
adc
inc
pop
cwtl
enter
cmp
mov
sbb
stos
mov
mov
cmpsb
mov
aam
sub
gs
mov
dec
push
jae
insl
and
fidivrl
gs
call
jne
jl
sub
sub
mov
mov
mov
push
pop
cwtl
movsl
in
and
ljmp
mov
cmp
daa
mov
mov
jg
add
jge
pop
and
push
pusha
add
imul
dec
es
dec
cs
mov
dec
pusha
cmp
cmpsb
dec
imull
inc
mov
movl
dec
outsb
lods
aad
mov
repz
or
dec
pop
push
push
sarl
add
or
mov
addl
incl
pop
aad
lea
push
mov
sbb
ret
add
mov
sbbl
pop
insl
add
or
sti
mov
jmp
aas
mov
or
xlat
jge
enter
xor
lret
and
pop
movb
hlt
out
sarb
mov
sbb
aas
dec
mov
mov
cmc
push
xchg
pusha
push
inc
pushf
jae
xchg
sub
stc
fisubrl
sub
sub
cs
int3
adc
mov
js
pop
mov
jmp
shll
push
nop
dec
inc
int3
add
jge
dec
push
inc
std
imul
in
out
pop
dec
lahf
rcll
cmp
call
sub
push
cs
push
mov
or
addr16
dec
ret
lret
or
popa
out
call
push
stos
mov
test
popf
pop
sub
push
xchg
cs
mov
or
mov
mov
lods
mov
xchg
dec
dec
dec
cli
lods
jle
stc
mov
inc
iret
push
or
or
xorl
xchg
dec
push
and
cmp
mov
cli
mov
xor
adc
insb
and
clc
pop
mov
cmpsl
stos
jns
push
dec
int
mov
jno
push
cld
ret
scas
inc
cmp
xchg
scas
jge
icebp
mov
icebp
mov
mov
mov
dec
mov
inc
adc
mov
pop
shll
pop
imul
dec
subb
lahf
jle
dec
pop
test
dec
movsl
push
fldl
pop
xchg
in
mov
fbstp
pop
mov
mov
pop
lds
and
lcall
cmp
scas
inc
mov
jl
mov
and
fiadds
push
jo
xor
shll
fs
jmp
test
js
and
unpckhps
in
xor
imul
mov
stos
lahf
pop
int3
and
sbb
lret
inc
fildll
addl
ret
sbb
or
pop
insl
or
push
xor
test
adc
icebp
fbld
mov
sbb
repz
mov
loope
das
insl
and
insb
sbb
add
sti
adc
dec
call
mov
xor
jnp
aaa
in
call
aas
in
pmullw
xchg
dec
mov
in
loop
lcall
xchg
pop
jg
and
ss
fmul
cmp
sub
nop
push
inc
and
inc
mov
jae
pop
loope
sub
mov
and
pop
ss
pop
cmp
cmp
mov
and
icebp
jecxz
inc
rorb
sub
rcll
mov
mov
cmc
xor
loope
jmp
pop
xchg
loope
daa
pushf
dec
mov
adc
cs
lods
lock
dec
pop
std
push
ret
inc
bound
jle
xchg
loope
adc
pop
pop
loope
repnz
sbb
cmp
xchg
cmp
flds
push
lret
jmp
pop
or
pop
ja
xor
adc
jg
mov
and
mov
and
jle
je
push
lret
mov
repnz
jbe
pop
adc
pop
inc
or
adc
mov
or
cmp
test
pusha
dec
enter
pop
or
mov
cmp
jecxz
in
aad
cs
dec
pop
push
gs
sbbl
cmp
cmc
es
dec
mov
outsl
jle
add
mov
lret
lock
cmpsl
sbb
xchg
cmp
fsubrs
mov
out
cs
loope
mov
dec
idivl
jmp
mov
dec
mov
andl
xchg
adc
out
mov
sbb
xchg
enter
repz
icebp
dec
sub
xor
adc
sbb
stos
add
jae
shl
push
dec
sub
aaa
pop
dec
pop
mov
popa
sbb
movsb
push
incb
mov
mov
scas
jmp
sarl
test
insb
ds
rorl
mov
adc
adc
mov
call
rorl
pop
dec
inc
dec
stos
mov
inc
stos
mov
sbb
xchg
dec
or
lock
inc
push
adc
adc
lcall
stc
loope
sbb
and
lret
mov
imul
or
popf
add
inc
sub
xor
lret
inc
mov
pop
jbe
and
pop
jo
mov
mov
loopne
sarb
cs
lret
sbb
cmp
xchg
negb
inc
push
or
stos
sub
jne
inc
mov
sub
adc
inc
xor
insw
sbb
push
cltd
js
mov
inc
pusha
aam
mov
adc
dec
pop
stos
adc
out
bound
rcll
dec
mov
aas
inc
dec
in
je
pop
and
jo
mov
pop
sbb
pop
add
loopne
mov
xor
orl
data16
stc
fcmovbe
insl
xchg
lods
repz
aaa
mov
xor
mov
sub
in
push
shrl
out
out
call
scas
pop
inc
jne
mov
push
sbb
inc
sub
stc
mov
arpl
push
stc
in
cmp
pop
sahf
add
pop
jmp
test
movsb
out
hlt
into
in
mov
aad
adc
ret
nopl
popf
and
jg
push
out
push
mov
cld
push
mov
rcll
dec
push
mov
cmp
and
inc
mov
mov
mov
leave
pop
add
pop
sarb
lret
sbb
stos
mov
and
outsb
ja
pop
add
pop
cmp
sub
jle
cs
cmovno
or
push
outsl
addb
xor
ss
push
xchg
lret
adc
pop
push
inc
cmp
push
xchg
mov
inc
or
mov
fwait
and
dec
xchg
movsb
rorl
in
test
sbb
movsl
aas
sbb
mov
adc
xor
out
js
aad
or
jo
adc
jnp
lock
popa
jae
or
cld
int3
cmpl
ljmp
mov
add
in
fisttpl
ja
test
xor
cwtl
lret
sbb
xor
mov
pop
jne
adc
rclb
sbb
dec
and
push
dec
sub
aas
push
nop
cmp
and
pop
jecxz,pn
iret
adc
mov
cmp
inc
fdivl
cs
ffreep
add
adc
dec
push
loope
movsb
sub
jge
pop
push
stc
mov
int3
repz
adc
dec
dec
mov
cmp
ficompl
pop
dec
jmp
enter
jmp
test
add
lock
das
fstpt
pop
sbbb
popa
imul
cmc
pop
fcompl
aaa
xchg
outsb
and
stos
insb
push
pop
or
mov
icebp
inc
push
mov
popa
add
xor
adc
stos
xor
add
andl
mov
xor
dec
mov
mov
xor
add
icebp
repz
cltd
pop
add
scas
cmpsl
jge
jmp
sbb
lock
ret
inc
jnp
lea
gs
and
dec
scas
pop
push
pop
mov
mov
pop
mov
mov
sub
dec
gs
xchg
idivl
add
ljmp
adc
pushf
push
jae
push
add
xor
dec
into
shll
mov
sbb
sbb
lahf
bound
pushf
cmpsb
push
lods
enter
mov
pop
repz
or
dec
pop
icebp
sub
jecxz
mov
in
xorb
js
xor
js
cmp
int
and
cmp
adc
pop
inc
data16
mov
je
test
and
sbb
cmc
aas
lods
push
pop
cs
xlat
pop
add
clc
leave
daa
insb
jmp
pushf
test
shl
lds
sub
jo
imul
loope
test
dec
pop
lahf
mov
jmp
mov
sbb
pop
into
jnp
pop
aas
inc
lock
cwtl
stos
dec
add
aas
push
inc
insb
sub
stos
sbb
pop
sub
cmpb
jbe
stos
adc
mov
aad
push
sarl
int3
pop
ret
adc
push
jo
dec
pop
fs
je
outsl
push
lds
or
inc
negl
pop
outsl
push
xorl
pop
dec
jecxz
dec
movsl
push
jns
mov
es
push
sbb
jle
imul
mov
or
outsl
enter
fsts
adc
mov
mov
mov
imul
or
add
cli
ficoml
int3
xchg
xlat
and
add
xor
shrl
adcl
mov
sub
add
sub
lds
and
cmp
fwait
jmp
pop
dec
iret
lcall
mov
test
jne
and
push
dec
mov
mov
pop
xchg
xchg
sub
lds
or
jmp
jb
je
push
fistl
cmp
subl
mov
out
add
pop
dec
les
std
push
ret
mov
sub
inc
cmp
popa
or
mov
adc
insb
and
shlb
shlb
xchg
mov
dec
or
mov
dec
ja
test
push
call
sbb
imul
cltd
cmp
fildl
sarl
inc
sub
sbb
cmpsl
or
push
or
mov
sbb
mov
int3
popf
mov
lahf
repz
dec
pop
push
stos
das
into
orl
hlt
addl
in
scas
push
mov
enter
add
pop
xchg
shlb
sarb
enter
push
pop
and
mull
imul
and
inc
inc
pop
xchg
arpl
pushf
mov
data16
sub
jae
pop
xchg
arpl
fmull
data16
mov
outsb
xchg
out
adc
push
fcoms
not
loope
les
stos
pushf
pop
xor
pop
jl
fldcw
lahf
pop
and
movb
das
mov
pop
pop
icebp
pop
sub
fdivrs
and
push
inc
fcomps
das
clc
data16
inc
dec
imul
pop
loopne
cmp
mov
dec
pop
push
xlat
push
rol
or
add
lret
or
in
dec
fsubl
and
mov
jmp
pop
mov
pop
xchg
ds
jl
ja
out
or
xor
pop
insb
nop
dec
icebp
notb
mov
test
cltd
aaa
ret
dec
xor
cmp
int3
jecxz
cmpsl
lret
and
fwait
lods
jmp
inc
daa
sbb
xor
repnz
mov
fistps
and
sbb
or
aaa
aad
andb
push
lret
es
jge
stos
fidivl
push
xchg
dec
push
mov
adc
xchg
sbb
cs
add
mov
cmp
movsl
sbb
sar
cmp
fcomps
pop
mov
lahf
fists
inc
orb
ljmp
jle
out
dec
ljmp
lods
xchg
adc
dec
hlt
add
push
test
fists
mov
lretw
mov
jmp
cmc
sbb
mov
cwtl
lea
cld
mov
and
adc
in
jo
call
pop
inc
push
addl
ja
xor
std
mov
pop
aas
push
push
xchg
dec
jge
or
or
addr16
cmp
jne
shll
std
stc
cmp
fstpt
fadds
jnp
mov
lret
aad
xchg
lret
push
or
loope
dec
adc
sbb
mov
repz
call
lods
addr16
add
pop
jecxz
jbe
cmp
jmp
mov
mov
add
mov
sbb
mov
cmp
mov
les
cwtl
adc
cmp
add
jns
arpl
push
lret
shlb
jne
mov
stos
adc
int3
fwait
cmp
dec
xlat
push
mov
xchg
dec
sbb
int3
inc
or
outsl
mov
cmp
gs
mov
jmp
sub
filds
filds
push
dec
xor
mov
int3
mov
jbe,pn
or
sahf
push
pop
add
idivb
fisubrs
cmp
xor
in
xor
call
outsl
jp
xchg
ficoml
lea
push
mov
inc
in
setge
inc
hlt
insb
pop
sbb
mov
xor
inc
cs
outsb
mov
outsl
mov
sbb
jg
mov
int
popa
stos
repz
cmp
lret
js
mov
add
pop
pop
pusha
mov
subl
add
hlt
gs
and
es
xchg
repnz
mov
fnsave
adc
ja
jp
push
xchg
cmp
inc
loope
popf
aas
jnp
xor
add
dec
fwait
popa
leave
test
cmpsb
dec
mov
jne
jecxz
xchg
cmp
push
mov
mov
sbb
aam
inc
push
push
or
fildl
enter
lods
xor
leave
out
loope
mov
clc
cmpsb
out
dec
cmp
push
push
or
rorb
inc
dec
xchg
mov
call
jnp
cmc
pop
pop
jnp
inc
lods
sub
add
in
pop
dec
push
stos
loope
jbe
loope
les
pop
dec
inc
fistpll
pop
cli
dec
lods
pop
pop
pop
push
xchg
jge
mov
movsl
ss
fstpl
repz
test
dec
add
sbb
cmp
pop
or
and
cmp
push
fstpt
mov
pop
cmp
repz
movb
inc
cmp
divl
cmpsb
leave
sbb
jmp
mov
jl
rolb
and
dec
jne
sbb
mov
add
xchg
lods
xchg
adc
stos
xor
jb
out
dec
sub
push
inc
inc
push
jl
mov
mov
fxch
je
adc
pop
jno
adc
jmp
pop
mov
push
xchg
mov
and
cmp
add
in
jnp
push
js
sbb
mov
lcall
cmpsl
jp
inc
sbb
loop
inc
mov
or
and
sub
sar
icebp
fldt
sbb
adc
add
mov
add
sub
jg
pop
push
jmp
fbstp
loopne
cmc
mov
clc
xorl
out
push
or
das
js
sbbb
pop
mov
add
lds
mov
xchg
stc
ja
call
pop
pop
pop
enter
mov
cli
dec
hlt
ret
idivb
sub
scas
push
insb
push
pop
push
decb
and
aas
mov
mov
mov
push
or
mov
mov
es
xchg
pop
push
fisubs
out
dec
sbb
mov
xchg
ret
inc
leave
aas
dec
fisubl
sbb
sub
aaa
push
xchg
stos
daa
pop
cs
jne
and
in
dec
xor
mov
test
lahf
jmp
or
das
dec
push
popa
pop
pop
test
sub
jmp
sbb
cmp
xchg
ds
pop
les
pop
inc
ror
inc
jb
xorl
rclb
and
add
fisttps
mov
cmpsl
lret
or
fwait
sub
push
mov
pop
shll
js
cld
fimull
addl
push
mov
aam
lods
imul
and
inc
enter
dec
pop
shrb
sub
nop
mov
imul
aad
inc
inc
repz
fsubrl
data16
pusha
sarl
xlat
popa
movb
dec
and
or
insl
adc
push
int3
push
js
adc
dec
outsl
data16
setno
pop
or
and
sbb
mov
bnd
xor
cmp
or
gs
cmpsb
sbb
cmpsw
stc
jae
imul
add
jnp
cmp
jae
stos
xchg
push
lods
call
ret
mov
add
or
push
and
js
dec
mulb
inc
aam
inc
xchg
stos
mov
leave
pop
inc
adc
and
xchg
mov
jp
add
jg
cmp
loopne
decb
cmc
stc
and
xchg
outsl
std
mov
out
fld
add
imul
out
lret
cli
loopne
or
mov
xlat
push
ljmp
and
dec
lahf
jnp
inc
repz
pushf
cmp
cs
push
imul
push
icebp
and
push
fsub
sahf
mov
scas
ret
jae
inc
push
and
ja
push
lea
loop
xor
mov
pop
in
push
lret
or
popf
data16
dec
xchg
cs
mov
lret
stc
fistpll
and
xchg
movsl
lcall
jl
mov
push
test
xor
std
in
cmpsl
dec
std
sub
add
inc
cs
xchg
xchg
idiv
cmp
lret
popa
loop
dec
cltd
xor
jmp
int3
sbb
gs
xchg
dec
pop
inc
pop
fidivl
imull
push
mov
sahf
ja
roll
aas
loopne
jo
in
jg
and
lods
pop
add
das
insb
cmp
cld
mov
push
aam
pop
mov
inc
hlt
aam
std
cmp
stos
icebp
mov
out
dec
adc
push
in
insl
loope
or
jl
cmp
and
lahf
ret
jp
lret
aad
repnz
fneni(8087
leave
mov
inc
divps
pop
xor
flds
jb
mov
shlb
or
je
popa
cltd
orl
lretw
rcll
mull
sbb
fisubs
scas
insb
aas
nop
push
dec
pop
cs
sbb
aas
mov
pop
cmp
xchg
cs
inc
ljmp
jle
loopne
push
cmp
or
in
jmp
pop
push
push
add
inc
xor
sub
inc
fcoml
enter
or
mov
rolb
jae
and
test
les
cmpsb
imul
adc
rcll
rcrb
xlat
nop
sub
call
enter
pop
pop
sub
ror
dec
lea
mov
arpl
mov
and
mov
mov
pop
pushf
lcall
inc
popa
cmp
lret
loope
pop
cmp
insb
push
sub
jbe
push
leave
fbstp
sbb
lods
outsl
cmpsb
lds
mov
push
mov
loop
mov
inc
stos
sbb
mov
push
outsb
ljmp
xor
pop
les
insl
js
and
and
popl
aad
mov
ficompl
dec
gs
jge
mov
mov
in
aas
mov
jl
push
xlat
jge
repnz
push
cmpsl
leave
mov
cmp
mov
jmp
and
rcrb
lret
inc
lock
add
mov
ret
aas
outsl
adc
mov
or
lcall
push
sbb
inc
xchg
adc
pop
push
mov
sahf
lock
insl
adc
notl
jbe
mov
xor
mov
jno
repnz
fsubr
inc
pop
mov
lds
add
mov
adc
mov
mov
rol
jae
fiaddl
dec
and
xchg
daa
bswap
movsb
iretw
dec
pop
in
jbe
insb
cmp
xlat
inc
or
js
sub
inc
cs
mov
dec
cmp
xor
xor
cs
sbb
shrb
add
stos
cmp
adc
fsubr
pop
jmp
movsl
rolb
dec
aad
xchg
stos
cltd
dec
sub
js
add
pop
gs
cltd
jae
jno
mov
loopne
out
mov
movsl
aas
xor
fidivrl
insl
leave
push
cmp
repz
or
stc
in
dec
pop
or
xchg
iret
mov
mov
testb
xchg
jnp
sbb
mov
dec
stc
sbb
mov
out
lahf
sbb
jb
pop
addl
adc
cs
out
mov
popf
mov
cmp
fstps
add
cli
adc
or
push
xchg
xchg
push
shl
test
xor
adc
cmpsb
movsl
loope
dec
leave
jecxz
aaa
test
jae
xchg
pop
stos
cs
arpl
gs
cmpsb
fcompl
sbb
ret
mov
mov
pop
push
jg
scas
mov
pop
xchg
jb
dec
pusha
fidivrs
adc
jecxz
dec
aad
cmpsb
ds
jg
and
push
movsl
jl
imul
add
pop
push
imul
xchg
sub
add
or
push
jne
pop
add
jne
jle
hlt
cltd
add
inc
cs
rcrb
aaa
push
xchg
cmpsb
sbb
jmp
lock
pop
or
mov
push
mov
jae
lret
or
dec
popl
in
add
mov
cs
movsl
sarl
test
daa
jo
dec
and
fisubrl
inc
push
int3
dec
dec
xor
and
cmp
mov
sbb
fwait
add
cmp
xchg
sbb
outsb
ljmp
jl
mov
xchg
or
loop
leave
lret
std
adc
sbbl
and
cs
or
add
lret
dec
pushf
cmc
call
es
test
loopne
js
ret
lods
jne
fistl
adc
sbbl
js
mov
dec
popa
pop
repz
stos
cs
push
nop
adc
les
push
aad
dec
nop
mov
ror
or
in
xchg
or
outsb
enter
cmc
rcrl
mov
int
push
push
ja
mov
pop
popa
mov
pop
fwait
int
mov
loop
inc
repnz
movsl
add
xchg
jge
test
in
mov
mov
ret
add
push
sub
xchg
divb
mov
bound
ficompl
outsb
pop
or
imul
outsl
sti
movb
aas
fstpl
addr16
push
dec
lods
dec
sti
hlt
aam
push
mov
icebp
stos
fnsave
aas
mov
rcrb
scas
inc
out
push
pop
int
enter
das
fadds
and
in
in
subl
pop
test
push
sub
inc
ret
dec
sub
mov
les
push
scas
dec
sbb
mov
or
movsb
fcomip
lret
data16
mov
leave
ret
pop
data16
push
scas
sbb
jle
jne
xor
mov
and
lret
aas
sub
push
pushaw
cltd
lret
iret
ret
xor
sbb
mov
dec
sbb
dec
dec
test
pop
pop
lea
fsubrs
and
cmp
and
or
loope
sti
shlb
cmp
mov
inc
push
bound
inc
push
sbb
or
lret
xor
inc
push
sbb
arpl
in
outsb
dec
test
or
ret
jb
xchg
pop
mov
push
pop
pushf
dec
adc
adc
jae
gs
inc
mov
pcmpgtw
dec
cmpsb
outsl
push
push
add
dec
pop
mov
repnz
call
pusha
std
xlat
mov
aam
pop
aas
lods
xchg
repnz
loopne
mov
std
xor
inc
xchg
js
lods
negl
jae
aaa
pop
outsl
insl
pop
xchg
cwtl
push
icebp
es
inc
add
and
jmp
js
fsubrs
and
dec
pushf
lock
lret
mul
inc
stc
orb
faddl
cmc
pcmpgtb
mov
iret
por
inc
test
xor
popf
aam
add
cmpsb
mov
xchg
mov
jne
mov
push
pusha
call
push
das
cs
pusha
stos
loop
pop
imul
fisttpl
cs
mov
pminsw
adc
hlt
dec
or
xchg
sub
pop
jbe
ja
cmp
das
dec
bound
sub
cld
dec
dec
or
fldcw
pop
xchg
jle
les
sub
jbe
cmpsl
cs
cmpsb
shrb
xchg
mov
adc
or
cmp
filds
stc
data16
aas
aas
pop
cmp
mov
iret
test
add
arpl
cmp
roll
out
jmp
imul
nop
ficoml
sub
pop
aad
and
pop
inc
arpl
add
loopne
shr
leave
dec
add
int
cwtl
push
arpl
sub
cmp
push
cmp
je
into
pushf
sub
pop
jnp
and
sbb
scas
pop
fldcw
inc
jnp
mov
or
out
xor
dec
cs
jno
pop
lret
xor
jnp
cs
fsub
sub
cmpsb
out
dec
pop
insl
pop
mov
jp
mov
xlat
nop
push
pop
fdivp
inc
xchg
adc
cmp
or
pop
lret
mov
jns
ficomps
scas
sub
fildl
dec
cmp
or
mov
rcrl
dec
jbe
sbbl
mov
es
dec
jnp
xor
ret
push
stc
pop
data16
or
js
pop
ja
or
cmpsb
mov
inc
push
cmp
add
cmp
inc
pop
and
stc
lock
or
pop
pop
into
dec
data16
cs
movsb
jle
add
fsubs
pushl
mov
idivl
fstpl
add
and
shl
pop
cli
jecxz
adc
dec
cs
cmp
iret
scas
xor
and
push
pop
mov
aam
mov
pop
cmp
lret
cmp
cli
or
bound
pop
add
or
adc
fdiv
aas
sub
imull
int
sub
sti
hlt
dec
inc
cmp
jne
ss
or
mov
pop
cmp
cs
sti
mov
pop
cmpsb
test
das
faddl
lods
mov
xlat
out
leave
pop
dec
sub
dec
pop
jl
pop
sbb
adc
add
mov
mov
pop
or
lahf
shlb
push
xor
js
jmp
add
fimull
mov
xor
fwait
mov
lret
dec
and
push
addb
mov
push
adc
xlat
cltd
push
pop
mov
loopne
push
push
shll
jno
mov
xchg
stos
dec
sub
jne
and
loope
test
movsl
mov
pop
adc
xchg
push
loopne
rcrl
test
inc
data16
xor
aas
pop
jae
aas
push
jmp
sbb
fnstsw
jecxz
cli
dec
push
lret
ret
call
leave
pop
add
pop
and
mov
or
adc
adc
addr16
out
mov
sahf
nopl
cs
mov
and
mov
xchg
sub
stos
int3
imul
lahf
or
ror
ds
push
sahf
lds
dec
pop
pushf
lock
xor
loope
and
xlat
push
testb
jge
pop
shl
rolb
negl
dec
mov
add
mov
or
jmp
in
add
pop
ja
loopne
inc
dec
xchg
and
insb
jo
roll
mov
ja
cmpsl
lcall
mov
fcoms
into
xchg
fldl
dec
adc
fcom
or
inc
scas
inc
lret
ficomps
dec
pop
add
loope
cmpsl
xchg
shll
pop
push
shl
push
mov
dec
and
cwtl
test
add
mov
or
jnp
pop
mov
cmc
pop
jnp
pop
out
insl
pop
scas
jp
inc
add
imul
sti
xchg
lds
adc
ja
stos
dec
mov
dec
in
daa
call
addl
add
pop
cmp
cmpsb
xlat
or
clc
jo
jge
xor
push
ljmp
mov
xor
arpl
test
in
enter
push
dec
lret
pop
push
mov
add
adc
pusha
dec
mov
push
out
push
pop
loope
jne
and
movsb
xor
cmp
and
sub
int
jae
ret
outsb
lret
push
mov
pop
pop
roll
mov
ds
aas
dec
cwtl
cmp
ret
out
popa
mov
sub
or
push
mov
dec
xor
pop
mov
hlt
popl
inc
inc
adc
scas
in
mov
or
xchg
push
enter
mov
cmp
test
mov
xchg
cmpsb
mov
pop
push
inc
or
push
sub
adc
dec
sub
cmp
xorl
push
gs
jbe
or
leave
inc
stos
out
xor
subl
dec
fs
leave
inc
add
mov
dec
clc
adc
dec
sahf
je
xchg
aas
jg
rorb
xchg
sub
pusha
cmp
xchg
outsb
ficomps
xor
dec
push
sub
fs
aad
shrb
jl
lea
xchg
daa
mov
jp
enter
adc
xchg
ss
js
or
dec
lea
push
negl
shll
lret
flds
push
cmp
mov
adc
and
pop
cmp
std
lahf
cmpsl
xchg
outsb
lret
push
inc
jmp
sti
fwait
or
testl
mov
sbb
mov
fnstenv
imul
jg
push
ljmp
pop
imul
sbb
sbb
js
mov
xlat
or
dec
lock
push
xlat
inc
andb
stos
adc
push
lcall
inc
ret
mov
call
pop
call
arpl
cmpsl
mov
js
shlb
out
es
scas
pop
cmp
scas
sbb
repz
leave
add
pop
pop
loope
in
movsb
pop
dec
rorb
fwait
lret
sub
mov
dec
jp,pn
in
scas
call
inc
xor
jg
xor
and
sub
movsl
imul
adc
cmp
sarb
sub
movsl
enter
xor
dec
lahf
mov
icebp
movb
ror
leave
sbb
xchg
imul
cmpsb
or
inc
out
push
loop
mov
add
andl
xor
or
mov
repnz
pop
lds
xor
xchg
push
arpl
add
test
movsb
mov
jl
out
jne
add
adc
pop
lret
dec
loope
jo
jle
mov
dec
xor
rclb
mov
pop
add
cltd
xchg
imul
cs
sub
lods
into
push
pop
xor
std
xchg
xchg
dec
jb
xchg
adc
cs
cwtl
fcoms
outsl
xor
jne
loopne
push
int
pop
cld
inc
xchg
push
pop
dec
pop
mov
sub
inc
xchg
cmpsb
mov
ret
pop
or
sub
out
and
mov
decl
adc
mov
dec
inc
out
mov
mov
lock
fimull
dec
loopne
mov
cmp
lds
mov
cmp
es
daa
adc
inc
adc
and
sbb
pop
push
xor
sahf
add
repnz
addr16
sbb
pop
loopne
mov
or
ja
or
test
fildl
ret
push
fxch
mov
dec
mov
and
jo
mov
das
call
pop
dec
mov
and
repnz
xchg
jno
inc
xchg
sub
dec
out
fwait
fs
movsl
xor
jb
inc
cmpsb
mov
lret
jl
out
push
inc
mov
xor
inc
stos
js
call
je
jp
add
pop
int
xchg
stos
mov
xchg
cmp
enter
ds
icebp
pop
int3
jmp
lcall
bound
xchg
mov
push
sub
std
mov
aaa
push
xchg
sbb
push
dec
or
fmuls
inc
inc
movl
mov
jne
mov
orb
lahf
rclb
pop
mov
pop
cs
mov
mov
cmp
inc
mov
cld
xchg
stos
shll
sub
add
pop
inc
icebp
out
dec
loopne
js
in
pop
cmp
or
inc
push
pop
rcr
jbe
mov
mov
sub
pop
mov
shl
pop
sub
cmp
lcall
fbstp
lret
addl
and
dec
mov
dec
dec
xchg
dec
or
adc
push
in
xchg
pop
xor
adc
or
cmp
mov
dec
leavew
addr16
ret
push
add
loopne
mov
pop
or
fsubs
mov
pop
mov
cmp
repz
mov
out
dec
xchg
pop
and
sbb
movsb
jmp
enter
mov
pop
push
add
shll
pusha
cli
cwtl
inc
xor
in
add
aas
pop
inc
push
push
mov
flds
push
les
in
jo
stos
je
mov
dec
stos
out
mov
enter
in
fxch
adc
int
mov
aam
mov
scas
or
xor
cltd
jbe
and
sarl
out
out
imul
arpl
iret
popa
push
push
pop
inc
jae
test
and
lret
or
shll
scas
mov
andl
cmp
ljmp
jae
xor
inc
jp
push
data16
xchg
ja
imul
stos
hlt
xchg
adc
into
imul
jmp
fsub
xorl
mov
ror
clc
ss
jmp
fcomps
mov
stos
xchg
sbb
lcall
pop
je
push
cmp
nop
cmpl
push
loope
dec
addb
ja
bound
leave
aad
je
fsts
enter
nop
push
sbb
mov
adc
dec
xor
sbb
fdivl
aad
jecxz
mov
sbb
cmp
div
int
mov
jae
jp
dec
xor
lods
jne
data16
dec
inc
cmp
cmp
aam
ret
pop
sub
add
jne
outsl
add
pop
pop
scas
mov
cli
adc
dec
add
pop
cmp
xor
sbb
inc
imul
mov
pop
std
daa
test
jmp
das
stos
push
adc
inc
and
mov
sbb
cmp
lret
lcall
scas
call
lahf
fistpl
orl
orl
pushf
aad
push
test
shll
sbb
std
fidivrs
pop
push
fs
mov
inc
pop
lret
pop
loope
cmp
outsb
aaa
rcrb
mov
popa
xor
push
jmp
xor
in
in
int
fwait
push
dec
pusha
add
cmp
gs
xor
mov
xor
dec
or
neg
or
mov
imul
mov
dec
push
ret
sub
sub
mov
mov
mov
repz
sbb
lahf
sub
push
push
lock
pop
jg
push
roll
xor
pop
add
pop
mov
pop
loope
lcall
cs
into
cmp
push
push
mov
std
xchg
dec
addr16
jo
mov
or
mov
inc
nop
imul
adc
test
dec
repz
fs
xchg
jmp
and
jae
in
dec
in
add
fdivr
and
mov
lcall
push
or
cmp
mov
das
lahf
outsl
shlb
lcall
ljmp
ja
rcpps
stos
fcomps
pop
cwtl
cmovg
and
lea
cmpsb
test
dec
dec
add
dec
jle
mov
or
lds
push
fimuls
inc
mov
cmpsl
lret
mov
les
mov
lods
fsub
cmp
loope
shlb
inc
mov
stc
push
imul
stos
inc
imul
shrb
dec
sub
dec
mov
dec
adc
gs
push
pextrw
lods
xchg
mov
mov
or
dec
and
mov
lds
or
idiv
jmp
and
stc
jnp
xlat
iret
jns
adc
dec
cmpsb
dec
mov
ds
inc
or
pop
pushf
aad
mov
adc
pop
mov
cmovb
sbb
cmp
into
call
or
inc
ret
lret
jae
add
mov
sarb
cmp
ss
pop
aas
ret
xchg
cmpb
xchg
sbb
adc
mov
repz
inc
cmp
data16
dec
cli
dec
xor
imul
inc
pop
mov
lret
add
xchg
dec
mov
pop
pushf
jno
insb
and
add
cmp
sub
incb
ret
xlat
stos
jno
sbb
push
fsubrs
or
pop
repz
movsb
fadd
jl
cs
out
vpsubq
pop
bound
or
pusha
push
gs
inc
adc
xchg
outsl
add
insb
cmp
movsl
call
push
mov
dec
shll
cmp
std
ret
mov
addr16
mov
xchg
sbbl
cli
jl
sbb
cmp
insl
xorb
dec
xor
testb
inc
push
pop
imul
sete
lret
aas
or
inc
sbb
sub
xor
cmp
imul
push
dec
imul
call
clc
push
mov
repz
lods
into
in
les
xchg
adc
je
sbb
out
data16
scas
or
jl
ret
loop
ret
pop
mov
pop
cmp
fiadds
adc
nop
ret
fisubs
sub
push
cs
loope
jmp
sahf
push
inc
xchg
sub
cmpb
jle
or
mov
sub
push
std
and
mov
mov
stos
dec
jo
dec
pop
mov
scas
shlb
insb
adcl
jmp
dec
imul
into
aaa
cmpb
xor
and
push
gs
jnp
repz
stc
fistpl
dec
jno
jmp
repnz
mov
mov
stos
mov
rclb
and
lahf
in
jae
lret
scas
outsb
mov
stc
fisubrs
jno
and
std
mov
shll
fistpll
movsb
aas
dec
insb
lds
in
clc
sbb
lret
in
out
mov
ss
fwait
ds
sti
loope
dec
call
rorl
into
lods
mov
aas
cmpsb
lock
pop
mov
ss
inc
rclb
movsl
mov
pusha
daa
mov
push
push
clc
mov
inc
pop
imul
adc
or
scas
ficoml
mov
lret
test
stos
dec
sub
inc
aas
mov
push
mov
ret
cmpsb
stc
inc
pop
int
into
in
and
cs
nop
cmpsb
dec
mov
es
jg
push
in
stc
jne
pop
imul
sbb
pusha
add
mov
pop
xchg
sub
bound
outsl
mov
mov
test
int3
mov
cs
and
fbld
adc
sbb
movsb
test
in
enter
jmp
mov
sub
add
cs
rcll
shll
out
fmulp
adc
test
and
js
pop
ljmp
inc
xor
arpl
push
and
push
mov
jns
or
xchg
imul
mov
cmp
popa
mov
dec
rcll
nop
adc
scas
add
and
rorb
mov
cmpsb
mov
jno
mov
add
mov
mov
cmpsl
stos
cli
test
pop
jmp
add
insl
add
insl
aam
insb
adcl
sti
scas
clc
sbb
cmp
add
addl
push
mov
scas
pop
mov
mov
pushw
lock
repz
aas
icebp
hlt
xlat
xchg
xchg
push
js
adc
pop
cmp
dec
cmpsb
mov
xor
cli
adc
sbb
lcall
punpckhbw
imul
pop
xchg
sbb
cmp
cmp
push
clc
insb
cmp
ds
push
xlat
mov
jne
arpl
nop
loop
fdivrl
mov
scas
scas
cli
pop
push
jmp
jle
mov
pop
lock
push
or
fimuls
scas
sub
adc
pop
or
jmp
add
rolb
clc
mov
add
and
ret
xor
outsb
sbb
jno
data16
adc
jb
fwait
icebp
inc
jp
idiv
add
mov
jae
insb
js
dec
add
pop
pop
sbb
out
push
mov
cmp
lds
mov
lods
mov
outsl
fbstp
mov
sub
add
push
xchg
aad
repz
cmpsb
out
or
fstpl
xor
jmp
jo
jae
test
stos
dec
mov
test
xlat
or
movsb
sub
mov
imul
fwait
adc
pop
fst
jae
dec
clc
mov
dec
push
and
fwait
mov
cmpsb
adc
mov
mov
mov
nop
mov
ret
popf
sub
xchg
mov
stos
dec
mov
outsb
ja
jo
or
das
mov
jnp
push
push
inc
xor
mov
push
inc
pop
inc
pop
rcrb
push
sub
push
sub
ds
jbe
push
mov
cmc
mov
sar
cltd
cmp
push
or
inc
cmpl
adc
xchg
mov
repnz
out
jae
sub
lods
pusha
add
jg
lea
jb
pop
imul
sub
test
jnp
add
fisubrl
adc
repz
orl
xor
add
cs
popa
cmpsl
roll
or
shlb
jne
pop
jp
jbe
pusha
rorb
js
je
lds
bound
jmp
or
sbb
hlt
adc
mov
into
stos
insl
inc
iret
sbb
mov
dec
dec
and
mov
loope
lds
in
jmp
xor
js
dec
or
and
sub
sub
sarb
sbb
mov
sub
xlat
js
mov
push
adc
push
dec
inc
cs
xchg
lret
stos
ja
stos
or
test
ficoml
cs
mov
push
clc
sbb
xor
jecxz
push
dec
popa
xchg
push
ja
jo
repz
and
mov
test
push
add
daa
sub
lods
movsl
pop
xor
or
sti
add
fnstsw
xor
inc
call
or
lahf
shrb
and
xor
jg
xchg
call
fisubrl
jmp
dec
ja
mov
xor
mov
dec
mov
int3
and
in
inc
stos
pop
test
cmp
xchg
jmp
ljmp
push
call
loop
divb
push
pop
push
nopl
jg,pn
sbb
cmp
adc
test
andl
dec
mov
xchg
dec
mov
notb
lahf
into
hlt
mov
inc
pop
scas
or
push
mov
or
inc
jae
gs
loop
dec
push
cltd
scas
ja
xorb
movsl
adc
test
inc
and
popa
lahf
imul
xor
mov
rorb
sbb
pop
bound
mov
push
jbe
sub
sbb
cli
dec
cs
sub
lret
cli
mov
lods
dec
lret
or
and
sub
mov
pusha
inc
sbb
pop
les
es
jnp
jl
mov
into
mov
or
into
pusha
pop
xor
mov
and
fldcw
mov
dec
or
sbb
mov
sbb
pop
pop
xor
repnz
stos
mov
push
and
dec
and
imul
aad
sbb
iretw
jmp
test
mov
adc
inc
mov
cmp
mov
mov
lods
cmpsl
dec
fsubrs
js
jbe
in
call
mov
gs
pop
adc
lahf
sub
cs
adc
xchg
xor
xlat
or
pop
mov
add
add
cs
sbbb
pop
adc
mov
mov
sub
adc
mov
adc
cli
fimull
mov
mov
clc
jl
and
push
add
leave
dec
gs
sbb
out
jmp
or
lret
sti
iret
ficoml
daa
lcall
lret
ret
push
push
adcl
dec
mov
push
mov
or
rcll
stc
jnp
mov
push
jnp
fsub
adc
imul
addl
sti
imul
xlat
push
fcoml
rcl
cwtl
orb
scas
sub
dec
scas
in
mov
pusha
out
mov
inc
push
mov
inc
mov
xchg
or
outsl
add
xchg
xchg
rorb
xchg
push
push
mov
mov
push
pusha
xor
or
cltd
mov
stos
ljmp
lahf
push
xlat
cli
or
aam
lds
sub
fs
push
imul
call
stos
xchg
scas
and
add
dec
xchg
inc
pop
repnz
stc
loope
xchg
scas
push
adc
aas
mov
daa
sbb
cmp
inc
xchg
pop
daa
cmpsb
adc
std
jne
es
xor
mov
imul
and
xchg
or
das
int
mov
and
shlb
dec
jp
stc
pop
xchg
inc
sub
test
std
mov
jg
xchg
mulb
loop
xor
das
cmp
mov
and
cs
hlt
loopne
push
mov
cmp
and
fadds
gs
jle
addl
fbstp
cmp
fmull
dec
xchg
push
lea
xchg
mov
and
xchg
sbb
cld
stos
mov
xor
dec
fistpl
cmp
test
and
clc
imul
add
xor
inc
enter
gs
sbb
sub
dec
repz
std
pop
or
mov
pop
inc
xchg
fwait
test
and
or
flds
cs
cmp
mov
icebp
fs
xchg
lret
aas
jae
cs
mov
sbb
jl
jb
sbb
repz
sbb
repnz
testl
push
in
lds
cs
fnsave
scas
sbb
cmc
fstps
and
fstl
and
js
dec
mov
xchg
dec
fcmovbe
stos
repnz
push
push
push
cmp
add
lret
arpl
mov
or
fs
aam
xchg
or
scas
sub
jne
fistpll
or
in
pop
jl
sub
add
cli
xor
dec
loopne
fmull
or
data16
xchg
cmp
mov
jb
pop
jmp
faddl
adc
mov
adc
dec
xchg
test
jae
push
dec
shlb
imul
xor
add
xchg
sbb
xchg
sbb
pop
in
dec
cs
andb
loope
fdivs
cs
ss
pusha
cmp
pushf
xchg
pushf
jae
nop
dec
add
cmp
and
js
ljmp
ds
jecxz
dec
or
ss
inc
push
sbb
pop
push
jge
aas
faddl
xchg
loop
cmp
stos
inc
mov
pop
mov
fldenv
sbb
xchg
cmpsb
rorb
cmp
mov
dec
xlat
outsl
mov
out
shrb
push
jne
jg
mov
adc
push
mov
inc
pop
or
ror
adcl
push
pop
add
mov
dec
pop
ljmp
dec
jbe
rolb
push
sbb
cmc
add
mov
or
mov
out
enter
sbb
je
loop
jmp
int
rcll
sub
and
mov
cmp
out
xchg
nop
aam
jg,pn
cmp
push
in
gs
test
dec
scas
sub
push
test
jle
inc
mov
test
fistps
frstor
sub
hlt
dec
cmp
cltd
inc
into
divl
pop
aam
xor
push
cmpsb
xchg
test
dec
push
and
popf
jle
pusha
int3
adc
into
test
pop
xchg
adc
into
pop
ds
mov
adc
mov
dec
stos
insb
lock
jecxz
pop
incl
lods
repnz
inc
loopne
cs
sub
sbb
shrb
push
and
xor
inc
lret
or
inc
xor
sahf
xchg
jo
push
push
stc
xchg
int3
xor
cmc
xor
fstpl
mov
xor
movsl
sbb
aam
addr16
pop
mov
xchg
push
inc
adc
push
cmp
test
mov
cmp
cmp
data16
pusha
pusha
faddl
imul
add
stos
and
aaa
xorl
pop
push
inc
lea
cli
and
arpl
push
and
shlb
mov
mov
xor
mov
xor
lods
push
cwtl
mov
pop
cmpsl
cs
pop
sahf
pop
xchg
push
xchg
mov
fisttps
mov
push
and
dec
mov
movsl
mov
pop
mov
adc
push
or
das
loop
negb
call
popf
sub
daa
das
es
ja
jae
in
adc
xchg
add
in
add
push
pop
inc
je
xor
jmp
or
sbb
js
pop
mov
push
xchg
into
icebp
mov
mov
dec
cmpb
test
ds
jno
movsb
icebp
lods
pop
mov
sub
daa
sbb
dec
mov
or
inc
and
imul
dec
test
add
dec
jmp
push
pop
xchg
xlat
lret
mov
jmp
push
sbb
lret
lea
stos
call
mov
add
push
repz
dec
mov
test
cmp
inc
add
scas
out
ret
pop
add
mov
mov
jl
mov
leave
mov
fdiv
add
fsub
stos
subl
mov
je
mov
in
mov
sub
les
outsb
xor
aam
xchg
dec
mov
jns
sbb
sbbl
or
dec
dec
dec
jecxz
je
out
fsubrl
mov
inc
loopne
xor
adcl
push
cmp
sbb
hlt
aad
pusha
xor
mov
and
lock
xlat
inc
mov
xchg
add
fwait
gs
jo
mov
test
jmp
jl
add
push
mov
imul
cmp
movsb
and
xor
pop
lret
lods
pop
fmull
mov
into
insl
jae
jmp
sub
sbb
dec
inc
loop
or
cmp
fsts
jmp
cmp
and
inc
inc
cltd
sub
loope
les
stos
pop
outsl
mov
push
fcoms
sti
inc
inc
jp
cmc
leave
imul
mov
arpl
scas
push
mov
cli
cwtl
inc
xchg
inc
ret
push
rclb
add
fchs
stos
jo
js
cmp
lods
decb
xchg
shlb
pop
inc
js
stc
call
imul
inc
scas
add
sub
pop
fstpt
shl
pop
not
or
jg
rorl
repz
jle
call
xor
add
cmp
or
or
pop
nop
jecxz
ret
scas
jp
cmp
or
cmpsl
cltd
dec
popa
cli
sub
loopne
xchg
inc
loopne
scas
je
sbb
out
gs
inc
xor
jmp
adc
mov
or
lods
es
jb
inc
or
lock
orb
mov
xor
in
inc
movl
inc
mov
mov
scas
hlt
dec
dec
outsl
jae
filds
mov
pop
movsl
ja
or
outsb
mov
fldenv
xchg
inc
sahf
je
adc
cmp
or
sub
and
push
cltd
or
sub
jae
stos
or
push
or
lea
lret
cmpsl
test
icebp
dec
cs
and
dec
cli
mov
adc
sbb
enter
insl
mov
pushf
mov
cmpsl
fstl
xor
add
pop
xchg
daa
cli
dec
mov
ficoml
fistpl
push
xor
pop
gs
fcmovb
mov
jp
inc
dec
sbb
pop
sub
mov
inc
std
xor
cmp
jae
add
cmp
push
xchg
inc
out
xchg
push
dec
sbb
sub
clc
dec
shlb
dec
ja
scas
sahf
pushf
pushw
add
and
sub
imul
outsl
scas
stos
dec
inc
test
cli
inc
push
ds
and
xor
push
push
sets
cmp
sub
stc
out
push
mov
add
fwait
out
pop
aas
mov
cs
xor
test
jb
cltd
popa
insb
sbb
dec
mov
jmp
or
nop
xchg
push
pop
shr
push
rorl
jne
mov
leave
pop
lahf
inc
jg
or
imul
in
ja
sub
cmpsb
xchg
cmc
or
inc
sbb
aaa
rol
inc
in
call
inc
mov
sbbl
pop
stc
push
pop
add
pop
scas
adc
pop
mov
inc
dec
ja
inc
sub
sub
insl
and
lods
sub
inc
dec
data16
sbb
in
pushl
out
insl
mov
cmp
scas
shll
jmp
pop
inc
mov
data16
mov
jae
lods
faddl
sti
ljmp
insl
or
imul
ret
std
lret
push
out
stc
nop
jnp
dec
jnp
call
or
pop
std
adc
lret
int
mov
adc
mov
bound
fldenv
push
adc
inc
and
pop
ret
mov
push
insb
sbbb
dec
rorb
or
pop
adc
mov
popa
mov
imul
jns
inc
das
xchg
push
xor
push
mov
int
rcll
cmp
pop
lds
in
jbe
inc
cmp
pusha
mov
clc
add
out
mul
jmp
sbb
mov
andl
mov
in
rorl
test
cmc
inc
jae
xchg
inc
xor
or
mov
inc
jg
int3
fcoms
push
adc
xchg
dec
sbb
jecxz
adc
addr16
xchg
mov
inc
roll
movsb
pop
in
cmpsl
pushf
inc
pusha
arpl
scas
sbb
jno
pop
shl
js
int3
mov
xchg
or
push
call
leave
sbb
loope
adc
out
lret
pusha
into
mov
test
lods
pop
repz
sbb
mov
lock
jle
mov
daa
aad
pop
addr16
sbbb
and
lea
pop
xchg
data16
aam
or
mov
cwtl
and
sub
sub
mov
adc
pusha
dec
mov
add
pop
decb
dec
sysenter
and
jnp
inc
arpl
lods
add
cs
pop
imul
mov
jne
mov
or
js
adc
in
pop
jno
dec
push
iret
outsb
nop
jnp
into
and
or
pop
shll
sub
loopne
enter
insl
jmp
push
pop
jbe
xlat
rcrb
dec
cld
jnp
pop
cld
sub
fmull
cmc
ret
outsb
flds
xor
add
rcr
call
and
out
and
mov
mov
cli
sahf
or
pop
lds
mov
cld
loop
xlat
sti
fbld
mov
dec
jmp
fsubs
pop
pop
lods
or
call
fidivrl
jb
xor
mov
pop
aas
mov
lods
xor
nopl
imul
lahf
xor
or
push
fistl
push
pop
inc
push
add
pusha
or
int
push
mov
xor
or
fsubs
rcrb
pop
and
sub
test
pop
dec
outsl
mov
push
mov
jbe
popa
push
stc
shl
gs
add
sbb
pop
dec
test
pop
jecxz
sbb
lret
mov
cmp
outsb
pusha
or
pop
pop
mov
dec
sbb
mov
dec
add
lea
fisubl
test
xor
arpl
cltd
in
inc
out
mov
inc
into
sbb
xchg
jne
lods
ret
push
lret
daa
push
nop
aas
leave
dec
cs
jnp
mov
pop
pop
pop
iret
dec
push
xacquire
ret
jno
sbb
add
arpl
xor
and
insb
adc
push
in
xchg
shlb
mov
leave
clc
lret
pop
push
fcomi
sub
inc
aaa
sub
add
rol
sub
push
scas
cli
xor
das
lret
mov
in
shll
mov
sub
inc
lret
stos
rcr
outsl
dec
lods
sub
xchg
jg
mov
sub
nop
imul
fistpll
pop
ljmp
repnz
adc
sbb
stos
push
inc
jecxz
jmp
xchg
test
mov
push
lds
adc
add
mov
repnz
push
sub
lcall
sub
arpl
movb
mov
fists
or
or
pop
jmp
pusha
ja
push
rorl
or
les
ret
pop
add
push
stos
cld
inc
inc
das
pusha
jecxz
sbb
aam
xchg
jbe
cs
and
movsl
mov
cltd
pop
add
xorl
mov
xor
mov
test
xchg
call
lds
mov
pop
add
dec
fisubrl
inc
test
cmp
les
dec
fucomi
stc
dec
pusha
xor
dec
cs
mov
push
ja
or
mov
in
pop
rcl
js
cwtl
push
or
inc
pop
cmp
ret
pop
fs
pusha
mov
ds
sub
jle
mov
imulb
lret
jl
out
sahf
or
aad
es
jmp
cmp
stc
fcom
mov
aas
push
push
inc
mov
je
xchg
and
cmp
lret
in
add
xor
dec
jne
mov
jmp
test
shlb
cmc
push
test
pusha
rclb
leave
jmp
pop
pop
ret
add
arpl
inc
pop
jnp
into
test
jge
cmpsl
std
inc
push
dec
cwtl
sbb
js
xchg
or
sarb
adc
lods
dec
fadd
test
lock
jne
lds
andb
aas
popa
jg
mov
imul
fsubrs
movsl
dec
mov
cmp
jb
or
rcrl
mov
stos
lock
mov
lret
jne
pushf
mov
pop
push
dec
adc
dec
pop
jl
shr
xor
xchg
adc
inc
rcrb
push
jp
mov
sub
sbb
or
loop
xchg
iret
sahf
dec
cmpsl
jno
add
pop
cmp
mov
jbe
cmpsb
stos
push
add
lea
out
mov
mov
mov
mov
stos
inc
sbb
push
in
aam
adc
dec
xchg
pcmpgtw
mov
push
aaa
xlat
jae
fmuls
push
movsb
adc
je
negl
iret
movsl
mov
push
inc
andl
xor
jl
push
push
pop
xchg
jo
ficompl
pop
orl
sbbb
sahf
jbe
mov
nop
mov
movsb
sub
in
roll
jp
sbb
mov
push
adc
jmp
mov
mov
push
dec
imulb
mov
inc
dec
loop
xor
pop
shlb
and
scas
out
data16
mov
imul
dec
cltd
dec
ljmp
dec
out
ljmp
push
dec
sbb
dec
dec
sub
dec
adc
leave
fldcw
sbb
mov
adc
jl
jecxz
sub
gs
data16
inc
iret
leave
dec
push
push
pop
imul
mov
lret
fistps
rcrb
push
mov
push
scas
ljmp
mov
das
rorl
je
int3
addb
in
dec
jmp
pop
jno
push
or
ss
or
cmp
sbb
lret
aam
adc
mov
xor
ja
cmpsb
fiadds
add
jb
xchg
dec
dec
sub
mov
dec
and
ret
add
rcrl
clc
mov
repnz
stos
js
xor
ljmp
cmp
scas
xchg
xchg
fisubs
rcl
inc
jo
push
push
iret
leave
dec
out
clc
add
iret
imul
push
mov
dec
addr16
pop
fldl
pop
push
add
dec
jle
and
scas
mov
das
pop
push
shll
rolb
inc
inc
add
out
xchg
pop
fidivrl
lahf
mov
popf
dec
ljmp
push
dec
mov
into
mov
jae
and
xchg
pop
push
add
inc
inc
int
xchg
xchg
aam
inc
adc
cld
sarl
mov
pop
and
add
imul
xchg
inc
testl
add
push
pop
sbb
js
add
test
mov
jg
aas
xchg
dec
jne
cmpsb
out
jmp
push
sbb
pop
sub
xchg
dec
sbb
sti
fimuls
cmc
adc
dec
add
jb
mov
ljmp
mov
fnsave
and
inc
in
lcall
inc
leave
test
mov
cmp
ja
or
rorb
add
dec
mov
ret
add
gs
or
push
iret
shll
mov
mov
shr
inc
jl
pop
pop
xor
es
ficomps
fisubl
and
push
dec
out
arpl
inc
test
dec
inc
andl
push
pusha
xchg
iret
dec
push
cmpsb
test
mov
data16
clc
mov
push
dec
ljmp
in
push
aad
dec
mov
sbb
jbe
xchg
pop
dec
push
add
dec
sub
dec
adc
push
inc
xchg
sbb
sbb
ljmp
push
pop
gs
mov
dec
adc
fstpt
inc
setle
imul
movsl
dec
fisubrs
push
sbb
stos
in
fwait
inc
push
nop
jo
cwtl
lret
popa
addr16
or
dec
mov
sub
mov
fdivrl
add
pop
push
mov
pop
dec
hlt
dec
adc
adc
push
dec
add
adcl
cmp
push
popa
mov
mov
les
mov
sub
mov
test
pop
dec
lret
out
mov
jle
add
push
and
loopne
or
sbb
xchg
aam
dec
dec
divl
mov
into
push
jg
xchg
jne
fnstcw
in
hlt
jb
dec
jnp
dec
inc
outsl
pop
push
dec
and
hlt
push
xor
rorb
imul
xchg
dec
mov
inc
sbb
mov
lods
outsb
gs
xorl
push
xor
into
or
dec
fwait
push
sbb
mov
jp
jp,pn
or
xchg
imul
iret
imul
sub
ljmp
push
cmp
pusha
xchg
nop
mov
or
aad
pop
fcom
adc
dec
fldcw
cmp
rcrb
fildll
mov
push
fisubl
mov
jmp
or
jmp
addr16
test
sub
push
sbbl
dec
xlat
xchg
loope
mov
cmp
inc
xchg
pop
lcall
pop
in
pop
cmp
push
push
loop
lods
aas
shll
addr16
rorb
loopne
ljmp
dec
popf
sbb
imul
sbb
into
push
and
movsl
dec
jge
and
divb
dec
xchg
mov
testl
xchg
xchg
in
dec
push
cltd
jp
out
andl
outsl
cmc
push
dec
cmp
push
cmpsl
je
aas
pop
jae
mov
dec
cmp
dec
inc
pop
mov
mov
dec
push
mov
inc
or
push
lcall
xor
mov
rcrl
dec
xchg
ss
repnz
hlt
xor
stos
xchg
pop
int
fisttpll
loope
jnp
fdiv
iret
pop
inc
mov
xor
sub
test
dec
int
hlt
nop
icebp
push
shlb
out
mov
movsl
out
daa
dec
adc
sbb
dec
push
aam
or
mov
ret
mov
ss
rorl
pop
mov
and
sub
push
cmp
iret
sub
push
sub
addb
or
pop
inc
push
jge
xchg
or
pop
sbb
jmp
pop
push
dec
dec
xchg
adc
popa
out
mov
xchg
test
pop
xchg
in
imul
push
ja
and
xchg
pop
add
pusha
mov
mov
pop
ljmp
inc
ja
push
imul
std
ss
cs
jecxz
hlt
inc
cmp
sbb
xchg
jb
add
mov
or
push
cwtl
pop
lds
scas
aas
stos
cmp
sub
daa
ja
addr16
inc
sbb
or
inc
push
lock
dec
xchg
movsb
mov
mov
xchg
fwait
push
into
push
xor
push
and
xor
pop
int3
ret
lods
scas
push
ljmp
sbb
inc
test
test
dec
jno
adc
jl
test
insb
cmp
sub
cmp
les
mov
loop
addl
inc
and
lret
jno
in
iret
pop
ljmp
bound
inc
or
inc
inc
orb
xor
dec
sahf
sbb
subb
dec
js
add
dec
loopne
dec
out
mov
or
insb
and
in
push
jno
test
call
inc
dec
ljmp
jmp
xchg
or
sub
mov
in
popa
cs
repnz
dec
insb
aaa
cmc
sbbl
sub
sbb
out
dec
adc
imul
mov
or
inc
int
es
add
repnz
fucomp
repz
push
fdivs
enter
shrl
push
roll
shr
xor
pop
mov
shr
inc
xor
aad
inc
add
jmp
out
test
inc
mov
int
inc
jle
sarl
push
pop
and
and
lcall
out
stos
lret
ret
rcrl
into
mov
dec
xor
pop
inc
cld
lret
adc
push
test
dec
nop
shlb
bound
jle
in
jmp
mov
std
adc
scas
push
test
add
ja
and
inc
or
pop
lea
or
cld
xor
adc
mov
inc
push
or
sahf
jns
out
lret
out
adc
dec
lea
dec
mov
inc
in
push
or
mov
mov
popf
jmp
sbb
clc
push
test
dec
nop
sub
dec
mov
dec
mov
xor
mov
repnz
call
lret
bound
dec
pop
or
pop
scas
sar
fcoms
push
inc
dec
and
xchg
cmpsl
jbe
mov
cmpsb
push
lret
xlat
je
sub
or
or
test
dec
mov
inc
xchg
int
movsb
push
ja
jb
rol
mov
sahf
dec
inc
push
call
cmp
sbb
push
sub
inc
pop
jge
mov
aaa
push
dec
xor
sub
inc
inc
pop
mov
and
push
jge
fnstcw
jecxz
sar
dec
xchg
inc
inc
pop
and
lahf
out
addr16
ret
jle
insb
pop
mov
sbb
lret
imull
or
sub
popl
mov
imul
mov
push
inc
test
out
push
nop
xor
mov
dec
fisubs
or
test
enter
mov
inc
aam
xchg
ljmp
push
or
lock
hlt
ss
cmp
cwtl
xchg
or
stos
jmp
pop
pop
xor
dec
cmp
add
movsb
mov
wbinvd
dec
inc
shrb
insb
lahf
ljmp
dec
adc
sub
push
jne
pusha
push
inc
push
inc
pop
cmp
inc
mov
push
and
and
inc
stc
jp
sub
jmp
dec
pop
pop
mov
stos
inc
aad
sbb
and
jmp
out
adc
dec
cmpb
or
cmp
push
test
jno
movsl
fstps
inc
jecxz
bound
int3
inc
cmp
sbb
cmpsb
and
or
stos
test
xor
pop
in
ja
ja
push
fcoms
inc
orl
dec
pusha
pushw
pop
imul
lret
das
inc
ret
cmp
dec
lea
sbb
mov
or
push
xchg
pop
out
push
out
icebp
stos
inc
jmp
inc
movsl
sbb
xchg
pop
xchg
aaa
or
xor
xchg
lods
int
dec
jl
sub
ss
dec
fsubs
mov
dec
lds
or
imul
xlat
hlt
stos
inc
fsubr
cmp
mov
mov
test
lret
mov
adc
pop
dec
test
dec
fmull
cltd
int
add
pop
inc
adc
dec
or
xor
cmp
daa
jo
cs
ljmp
push
repnz
movsb
lret
imul
ss
xchg
dec
pop
loopne
cmp
shrb
dec
xor
in
pop
lahf
pop
or
jge
fsts
add
decl
jb
push
sbb
dec
mov
jns
xchg
xchg
out
jl
mov
test
stos
loopne
inc
or
mov
or
and
cwtl
inc
mov
dec
add
gs
inc
xlat
adc
pop
lgs
imul
or
enter
add
lcall
inc
inc
enter
into
stos
and
addr16
jecxz
pop
inc
inc
ret
dec
push
and
mov
sub
jmp
push
inc
fs
pop
and
add
jp
jecxz
data16
cmpsb
ret
jnp
push
xor
test
mov
xor
cmpsl
arpl
data16
mov
inc
sahf
adc
add
in
pop
fldenv
into
and
fs
mov
inc
xchg
sub
cmpsl
jecxz
clc
mov
push
add
mov
into
jo
cmpsb
sahf
arpl
inc
pop
outsb
dec
jmp
dec
scas
jb
and
out
shlb
xor
sti
les
or
and
jge
cmp
nop
cli
sbb
clc
mov
jecxz
into
data16
lea
dec
sbbl
dec
adc
aas
inc
and
xor
push
inc
and
sbb
jns
inc
les
adc
mov
add
into
sub
and
mov
and
and
add
jecxz
ret
jmp
in
mov
pop
push
shlb
lock
push
rcrl
sbb
pop
in
daa
dec
les
je
or
out
mov
inc
testb
clc
mov
sbb
dec
test
ja
je
stc
ret
mov
push
mov
jae
sub
scas
or
or
mov
int
and
xchg
add
jecxz
mov
pop
xchg
call
dec
lds
pop
ljmp
or
into
pop
dec
sbb
add
leave
dec
jecxz
mov
into
in
fiaddl
inc
mov
and
hlt
in
clc
push
push
ds
inc
test
popf
cltd
aad
cmpsb
fs
adc
inc
das
into
pop
mov
add
loop
jecxz
clc
add
mov
mov
arpl
adcl
shll
add
fimuls
int
and
push
cli
add
out
dec
test
jp
rolb
inc
out
sbb
cmpsb
add
mov
dec
mov
sbbl
pop
fistl
inc
pop
cltd
inc
jge
fnstcw
push
cli
dec
and
mov
and
mov
test
sub
inc
cs
ljmp
jmp
mov
mov
orl
pop
fldenv
push
inc
cli
imul
into
sub
mov
xlat
cmpb
jo
ret
movsb
sti
push
sub
add
mov
push
and
outsw
popa
outsb
add
daa
loope
xor
and
pop
xor
xor
xor
pop
sbbl
loopne
sbb
sbb
dec
and
cmp
sbb
rcrb
test
lds
fcoml
push
and
or
mov
cmpsl
push
hlt
xchg
mov
mov
inc
arpl
or
push
adc
dec
push
mov
stos
jns
test
fs
push
loop
and
add
adc
jecxz
push
retw
mov
cld
and
sbb
mov
mov
ret
cmp
push
inc
addl
sbb
clc
push
test
xor
pop
cli
push
add
pop
shll
mov
pop
arpl
ss
xor
fnstcw
inc
jmp
movsb
jne
into
adcl
out
pop
mov
inc
jecxz
add
ljmp
and
push
pop
inc
sub
or
and
loope
or
stc
lock
test
and
mov
leave
inc
sbb
inc
pop
in
add
add
jecxz
ret
push
mov
sub
les
stc
outsb
jp
push
hlt
and
fdivr
pop
in
jp
les
data16
int3
aas
push
movsb
xchg
test
fsubs
mov
inc
cmpl
jecxz
pop
into
and
inc
add
mov
xchg
subl
inc
inc
call
cli
mov
pop
xchg
les
aaa
movsb
dec
into
insl
sbb
sbb
jb
xor
cmpsb
dec
inc
dec
cs
push
and
fs
jecxz
ret
adc
pop
sbb
mov
andl
cmp
mov
cli
mov
sub
pusha
add
cmpsl
les
or
inc
mov
add
adc
insl
andl
mul
hlt
mov
mov
incl
add
aas
rol
iret
jmp
and
push
cmp
les
movsb
aas
xor
test
add
imul
jge
cmc
jno
mov
dec
stos
ret
imul
sbbl
push
jmp
inc
xchg
mov
push
and
iret
push
inc
in
adc
movsb
add
iret
pushf
lret
and
pop
mov
and
loop
add
mov
dec
js
sbb
out
xor
fstps
mov
mov
into
push
ljmp
cmp
fs
inc
sub
jecxz
pushf
jecxz
xchg
fcmovnbe
and
rcl
push
mov
adc
popw
mov
clc
pop
mov
inc
bound
inc
fwait
clc
rcl
repnz
clc
notl
xor
xor
push
out
sbb
cmp
stos
add
sbb
jmp
mov
cmpsb
sbb
and
les
push
inc
push
xchg
adc
les
pushf
icebp
loop
fs
sahf
add
fmuls
fmuls
mov
inc
out
dec
cmp
out
dec
and
je
inc
inc
inc
push
inc
cmp
shl
add
or
push
lret
push
popf
mov
rol
mov
rclb
inc
fildl
and
cli
je
mov
and
test
and
decl
test
clc
lcall
notb
push
push
sub
int3
into
testl
mov
ret
push
inc
fdivrs
inc
sbb
jae
dec
into
loop
les
push
aaa
enter
sub
fs
pop
or
inc
jmp
jp
inc
cmpsb
cmp
inc
jecxz
push
jp
and
ss
mov
cmp
cli
mov
push
sub
lret
int
ret
in
mov
xchg
test
shll
gs
and
sbb
jecxz
aas
ret
lods
fmuls
jnp
ja
inc
push
sbb
pop
test
fcompl
cmpsb
in
les
pop
stos
test
fs
mov
mov
add
clc
ja
mov
dec
sahf
cmpsb
ret
sub
aas
sbb
pop
cli
ror
adc
pop
ret
pushf
jmp
jno
push
push
movsb
inc
fiadds
mov
movl
mov
aaa
adc
mov
push
push
test
push
arpl
push
aas
push
inc
gs
in
les
push
mov
mov
push
test
xchg
jecxz
ljmp
xor
mov
loop
ret
mov
insl
dec
sub
sahf
adc
loop
mov
mov
pop
and
cs
les
cli
sti
movsb
xor
in
push
pusha
test
dec
and
cwtl
xor
jnp
stos
mov
jecxz
mov
pop
sahf
lahf
out
pop
ficomps
popa
xchg
push
and
mov
mov
or
pop
cmpsl
cmpsl
bnd
movsb
add
cli
lock
lret
push
daa
fs
sbbb
mov
ret
xchg
dec
inc
std
mov
or
dec
aad
cmpsl
mov
repz
les
into
sub
add
add
add
movsb
int
std
into
xchg
adc
inc
sbb
enter
mov
jnp
iret
mov
leave
adc
pop
sarb
call
clc
scas
imulb
scas
inc
in
cmp
test
test
es
and
cli
add
push
inc
rolb
enter
mov
push
mov
mov
push
push
xor
push
inc
xchg
into
inc
and
fisubrl
cmpsl
in
cli
add
mov
push
pusha
fs
xlat
and
cmp
add
xor
push
shl
test
ret
jne
and
cmpsb
inc
lcall
pop
aas
and
aaa
push
and
jmp
sub
jp
push
stos
push
push
pop
roll
xor
pop
rcrl
adc
aaa
call
ret
ffreep
in
or
dec
movsb
jns
push
and
cmp
adc
repnz
lods
pop
loope
inc
fcoml
popa
ds
mov
jg
mov
int3
push
or
xor
pop
push
fiaddl
pushf
push
mov
rcrl
push
xchg
fs
clc
stos
sbb
hlt
int
xor
jecxz
pop
fs
loop
xor
mov
jnp
pop
push
rol
inc
ja
mov
pusha
and
push
sbb
icebp
into
das
mov
pop
movsb
adc
aas
test
xor
inc
mov
test
sbb
ljmp
mov
push
pop
pop
adcl
or
aam
ficomps
xchg
cmp
sbb
mov
push
loope
sbb
lods
lea
gs
out
add
jecxz
ret
sbb
cmp
or
rorb
in
and
jecxz
xlat
jecxz
mov
and
push
pop
aaa
in
and
hlt
add
mov
push
loop
test
or
cmpsl
dec
fisubl
xchg
push
add
icebp
add
loope
ljmp
pushf
cwtl
sub
adc
jno
andb
inc
push
lret
dec
das
dec
cld
ret
fsubs
ret
adc
in
jno
insb
pop
mov
sbb
xchg
ljmp
test
and
clc
mov
ret
mov
into
fwait
and
xchg
sub
aad
sahf
inc
clc
jp
and
adc
mov
jg
or
fisubs
or
sub
lfs
sub
std
ret
stos
mov
inc
nop
fstps
cmp
jmp
dec
leave
xor
lock
and
push
movsb
outsb
inc
das
test
fs
sbb
sar
pop
add
inc
mov
add
fstpl
arpl
inc
inc
lds
inc
inc
adc
mov
add
movsb
cmpsb
test
cs
cmp
sbb
pusha
ret
mov
mov
fsts
movb
cmp
push
xchg
movsb
ljmp
fs
inc
xchg
scas
inc
dec
or
mov
jecxz
and
pop
xor
pop
inc
lret
inc
jne
lahf
and
xchg
add
jecxz
sub
cmp
dec
flds
loop
clc
pop
cmpsl
repnz
mov
mov
into
out
inc
push
ret
inc
notl
inc
mov
cmp
arpl
dec
add
pop
xchg
inc
inc
sbb
outsl
add
fadds
clc
fdecstp
scas
hlt
or
test
lret
xchg
and
and
sbb
into
mov
mov
vphaddbq
arpl
inc
test
jmp
and
adc
xor
dec
add
cmp
dec
mov
les
push
test
fsubl
jp
push
mov
cwtl
xlat
adc
test
pop
mov
inc
pop
xlat
loope
cmpsb
or
push
in
mov
or
cli
mov
inc
test
fists
mov
test
fistpl
jecxz
ret
ret
pop
sbb
xchg
cmpsl
cmp
hlt
or
xor
push
inc
gs
xlat
sub
and
adc
pop
sbb
xchg
mov
test
push
nop
cmp
jns
jbe
fstpl
pop
pop
loopne
inc
jno
and
sti
in
insl
mov
or
pop
push
lods
inc
lret
cmpsb
and
jp
stos
and
push
fiadds
mov
xchg
aas
aas
test
adc
push
or
jns
lahf
adc
cmp
fcompl
cmp
mov
sbb
or
orl
sub
xor
jbe
repz
add
cmp
xlat
mov
daa
push
in
or
lock
push
mov
and
xor
scas
dec
lret
sub
pushf
arpl
cmpl
les
mov
pushf
xchg
adc
add
fcompl
sbb
push
sbb
xor
xchg
dec
push
push
and
add
mov
fucomi
cmp
sahf
arpl
mov
inc
fisubl
jg
or
les
pop
inc
add
test
cs
fptan
or
inc
jbe
push
das
mov
addb
mov
xor
testl
inc
inc
and
sbb
nop
les
movsb
push
adc
or
pop
orb
sbb
cmp
movl
daa
daa
mov
jmp
bswap
sub
add
fisubs
and
loope
xor
ja
daa
push
xchg
popa
int
fadds
int
and
mov
sbb
jecxz
sbb
push
cmpsl
ret
int
dec
mov
mov
sbb
push
ret
fisttpll
orl
movsb
adc
or
xor
jecxz
pop
and
and
sub
jmp
jmp
dec
int
mov
xchg
dec
clc
push
lret
push
jo
ljmp
dec
fidivs
sahf
fsubs
mov
loope
jp
nopl
inc
dec
and
add
xor
pop
into
in
dec
jbe
mov
xchg
inc
pushf
cmp
pop
and
xlat
mov
sbb
push
jecxz
add
std
dec
pop
int
dec
inc
sti
test
je
movl
into
pop
or
jecxz
adc
aad
fstpl
js
xor
push
pop
adc
nop
dec
mov
cwtl
adc
rclb
xor
mull
insb
push
test
sbb
and
shlb
jg
mov
repnz
into
rcll
or
pop
inc
cmp
dec
dec
inc
sub
leave
lret
lock
scas
pop
rorl
sbb
stos
daa
mov
and
sbb
pushf
js
xchg
rorb
dec
ss
dec
pop
cmpsb
ret
pop
pop
pop
rclb
mov
cmpl
xchg
inc
jle
pop
in
and
sqrtps
adc
test
pop
fs
add
cld
and
clc
fdiv
int3
adc
jecxz
xor
xchg
xor
out
popa
mov
dec
shll
pop
pushf
addb
cmp
hlt
movsb
test
jae
xchg
dec
sar
push
ror
xor
add
push
mov
cmp
movsbw
call
pusha
lea
je
bt
cmp
pusha
pushf
pushf
lea
je
pusha
call
mov
gs
fsubrs
pop
inc
insb
aam
daa
push
inc
jae
mov
xor
pop
mov
cmpsl
and
jns
lcall
jnp
mov
mov
or
inc
mov
dec
mov
push
push
test
push
sar
dec
xchg
pop
mov
jb
adc
mov
movsl
sub
or
lret
push
fs
loop
and
fs
jae
pusha
cmp
stc
sub
call
outsl
je
mov
data16
fwait
mov
pop
cmp
dec
mov
aam
cmp
jnp
icebp
mov
je
dec
push
gs
mov
lcall
int3
and
adc
in
sbb
ret
jns
add
test
insb
cwtl
mov
cmpsl
or
cld
mov
push
ss
or
test
add
xor
arpl
push
mov
fwait
loop
jge
ss
vshufps
sbb
cmp
repnz
pop
sbb
mov
cld
mov
movsb
mov
iret
sub
and
out
in
mov
jle
mov
or
loopne
inc
ljmp
and
adc
mov
imul
loopne
jne
jg
mov
sbb
jp
insl
fisubrl
cmpsb
mov
arpl
jae
jp
pushf
test
mov
lock
outsl
ficomps
loopne
sbb
jnp
cld
dec
clc
outsl
xchg
or
shrb
cmp
add
sahf
popa
insl
mov
push
rcrb
and
jp
loope
cwtl
scas
xchg
jne
stc
scas
sub
cli
loope
cmp
add
out
cmp
sub
inc
test
xlat
xor
enter
out
cmp
pushf
nop
in
mov
scas
icebp
push
nop
xor
or
jns
xlat
fsubrs
xlat
xor
mov
mov
iret
mov
outsl
inc
pop
add
fucomip
mov
xchg
and
xchg
pop
ja,pn
dec
and
loopne
into
aaa
pop
ud1
cmp
cmpsb
insb
mov
fdivrs
mov
test
dec
and
cwtl
addl
or
or
test
dec
and
dec
mov
sbb
jp
pop
xor
loop
scas
mov
jbe
or
stos
lea
mov
xchg
popa
add
and
push
or
pop
or
pop
nop
adc
adc
fnsave
sub
mov
adcl
mov
aaa
into
and
movsb
add
cmp
mov
lock
dec
nop
daa
test
jg
adc
imul
pop
lea
call
pusha
pushl
adc
call
movb
movw
pushf
lea
call
push
pushf
pushl
pushl
lea
jb
push
pushl
ret
dec
shll
pop
mov
cmp
sarb
or
pop
stos
aad
cmp
rorb
nop
mov
push
lcall
jg
les
and
gs
and
ss
dec
in
clc
std
fidivl
aad
or
adc
mov
shrl
fistps
dec
mov
out
fisubrs
cmp
cwtl
fs
add
dec
push
xor
fbld
push
pusha
lea
jne
cwtl
movb
lea
lea
lahf
push
pusha
lahf
not
lea
push
jmp
mov
or
inc
cmp
push
cld
stos
into
inc
stos
push
mov
xchg
fcmovu
and
imul
xchg
call
lods
push
push
test
dec
lret
jae
sub
add
or
rcr
jge
inc
jnp
sub
movsb
dec
push
pop
ss
adc
mov
dec
scas
pop
dec
and
cmp
or
xchg
cltd
mov
pop
lcall
jo
push
or
mov
adc
addr16
sub
jbe
push
hlt
loope
insl
rolb
xor
mov
mov
movsl
mov
es
movsb
orl
pop
pop
imul
jg
or
repz
sbb
and
inc
mov
mov
jg
mov
std
test
mov
push
cmp
inc
xchg
and
push
in
lods
in
adc
cmp
xor
inc
add
imul
test
test
adc
movsl
lds
ret
xchg
jns
xchg
sbb
inc
xchg
insb
xchg
jmp
mov
dec
jns
test
push
mov
cmp
icebp
mov
ret
daa
mov
add
adc
mov
cmpsb
popa
pop
inc
and
xor
mov
adc
cmp
pop
adc
sub
xchg
cmp
pop
xchg
jns
nopl
and
or
insb
outsl
aam
imul
mov
jns
idivb
cltd
jb
xchg
fidivrl
test
xor
add
mov
sbb
inc
mov
mov
aad
mov
mov
sub
add
jbe
divb
nop
mov
shll
push
push
sub
cmp
aas
push
cmp
js
push
xor
sub
sub
int
jbe
push
mov
add
jp
mov
fcoml
dec
inc
and
in
fldenv
mov
dec
cmp
fadd
xchg
jl
inc
pushl
movb
jmp
dec
lret
imull
stc
je
imul
out
pinsrw
in
mov
dec
jno
cwtl
lret
popa
iret
sbb
gs
xor
je
mov
ficomps
xor
cli
dec
pop
jae
jae
pop
pop
mov
jae
sub
mov
shll
jle
sub
mov
clc
cld
push
aam
jecxz
cmp
sub
lea
fisttpl
add
pushl
pushf
not
bt
pushf
call
push
lock
std
std
mov
sbb
lret
dec
sti
ret
int
lahf
pop
sub
add
ss
pop
outsl
pop
cmp
mov
dec
inc
pop
and
aam
push
les
in
frstor
test
or
xor
fwait
add
insl
adc
jmp
out
add
mov
xabort
sub
enter
fldl
cli
test
aad
fldt
subl
and
fsub
ret
add
int
mov
mov
loope
test
les
cmp
ljmp
fidivrs
lds
nop
pop
mov
adc
mov
pop
jns
mov
dec
sbb
pop
ret
cmp
lret
adc
adc
notb
loop
dec
xlat
addr16
push
sbb
mov
hlt
mov
inc
lret
mov
pushf
xlat
out
sub
lock
add
pop
adc
popa
rcrl
push
call
popf
lods
addr16
sbb
push
lods
dec
sbb
repz
movsl
pushf
stos
imul
fs
pushf
lods
ja
cmp
repnz
loopne
adc
sub
int
imul
insb
inc
cwtl
and
mov
push
or
andl
ja
and
sub
inc
enter
push
mov
mov
shlb
jo
fbld
stos
inc
stos
out
mov
push
dec
sbb
das
js
xchg
cwtl
and
pop
out
jp
fisubrl
jmp
loopne
mov
push
pop
pusha
mov
fidivl
lock
xchg
mov
cmp
mov
mov
cli
bound
loopne
mov
push
popf
jbe
or
mov
adc
sub
mov
jg
jp
mov
rcll
into
jp
fisttpl
adcb
jns
call
lock
pop
bound
add
ficoml
iret
test
jno
pop
add
dec
ss
dec
push
out
dec
inc
jp
fidivl
push
stc
fisttpll
cmc
inc
movnti
imulb
mov
jecxz
push
jns
xor
sub
mov
aaa
lret
adc
push
add
mov
ficompl
pop
icebp
mov
ret
iret
jp
fldenv
add
fisubl
aam
enter
loopne
jns
test
add
call
data16
dec
xchg
sub
popf
loopne
test
mov
xor
push
and
scas
cld
add
rcrl
insb
orb
daa
je
cmp
cld
std
add
mov
mov
mov
ja
or
add
mov
lds
add
or
movsb
push
push
out
enter
jne
sbb
or
jg
daa
xchg
hlt
or
inc
mov
jg
sarb
mov
push
nop
rolb
icebp
jge
lea
mov
data16
jmp
shll
je
push
lea
mov
push
mov
adc
mov
mov
repnz
mov
or
pop
inc
sub
decl
push
scas
fiadds
movsl
js
sbb
arpl
scas
fldl
xchg
push
je
scas
dec
aad
cli
rolb
mov
leave
jmp
cmpsl
jo
jle
xor
add
push
pop
stos
outsl
or
mov
imul
or
ja
mov
idiv
leave
pop
pop
dec
jp
xlat
rcll
popa
jb
sbb
fldt
std
jecxz
cmp
cld
inc
add
dec
into
movsl
test
je
inc
and
xchg
cmc
jge
popf
cmpl
iret
imul
std
outsb
push
fcompl
xlat
jbe
insb
pop
insb
mov
push
fsubrp
mov
push
pop
cld
lcall
dec
loopne
stc
cmp
sub
shll
add
and
outsl
add
hlt
and
xchg
xor
xor
sub
mov
mov
pop
mov
jg
nop
shll
xlat
jae
xor
cld
pushl
fildll
fcompl
stos
xchg
inc
in
cmp
ret
out
xor
push
movsl
pop
test
add
xor
pop
jmp
cmp
frstor
in
in
cmp
pop
add
insb
push
movsl
pop
mov
mov
sub
or
ret
jecxz
dec
cmp
pop
jp
mov
sarb
xchg
mov
xchg
jno
jp
sub
test
jle
shll
dec
sub
xchg
push
test
div
lds
mov
fstpl
es
adc
ljmp
pop
mov
or
mov
out
ds
adc
mov
pop
sub
loop
push
fistl
lcall
mov
add
imul
dec
pop
into
and
push
fbld
testb
sbb
and
jmp
in
jmp
mov
lea
loop
aaa
add
xchg
test
pop
jp
aad
mov
mov
jecxz
fs
sbb
scas
hlt
ja
dec
push
fnsetpm(287
ss
jp
aad
aaa
in
mov
leave
cmp
cmp
mov
mov
repnz
stos
pushf
jecxz
sub
ds
xchg
dec
adc
jns
add
dec
sbb
push
lcall
push
cwtl
stc
jp
aad
cmp
push
adc
adc
lock
push
jp
aad
mov
test
cld
lcall
mov
inc
rcrb
enter
outsl
pusha
ret
scas
lcall
mov
subl
scas
incb
subl
test
fsubs
push
jecxz
addr16
push
pop
hlt
add
imul
loope
arpl
sbb
aam
cs
dec
push
popa
ja
inc
and
or
mov
inc
push
movsl
mov
fsubp
arpl
push
scas
jp
aad
add
add
dec
gs
popa
addr16
outsl
js
add
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
dec
inc
push
dec
xor
cs
insb
add
fcmove
pop
sbb
sub
out
stos
sbb
aad
pusha
out
push
add
stc
lcall
cmpsb
push
cmp
sti
cltd
clc
push
call
push
test
dec
mov
cmp
jle
xlat
jecxz
aad
mov
cmpsl
aam
xchg
pop
shr
cmpl
mov
pop
xor
arpl
aad
pusha
in
mov
or
jmp
mov
xchg
push
inc
cmc
bt
test
cmc
add
push
mov
call
dec
test
add
cmp
gs
or
lahf
or
pop
inc
mov
push
data16
inc
dec
and
in
xor
int
sbb
add
or
fstpl
cld
mov
mov
leave
or
out
jmp
cmp
xchg
insb
mov
push
loop
clc
jge
aaa
mov
scas
mov
mov
pop
mov
mov
pushf
mov
or
ret
mov
pop
pusha
sub
js
loope
lret
mov
in
aaa
mov
outsb
adc
sub
push
in
stc
arpl
dec
sbb
out
mov
in
mov
leave
dec
int
nop
daa
add
loope
imul
fidivrl
fisubl
inc
fdivrl
out
stos
mov
mov
out
mov
mov
stos
dec
loop
inc
std
inc
lods
mov
cmp
rcl
fucom
mov
cmp
scas
outsl
dec
jp
aam
hlt
sub
popa
pushf
cld
lcall
test
lds
add
jge
leave
push
pusha
call
lea
movzbl
lea
push
pushl
jmp
div
in
mov
xchg
lahf
pop
dec
sub
cld
sub
cmp
mov
xchg
loopne
mov
cmp
xor
int3
xor
push
loopne
mov
cmp
cs
sub
sub
iret
inc
add
jno
cwtl
push
or
insb
orb
push
nop
loopne
sbb
mov
or
push
out
or
lock
les
and
jns
or
mov
shrb
imul
sbb
out
cltd
sub
add
xlat
mov
inc
mov
inc
out
scas
cmp
jmp
cmp
mov
loop
xchg
xchg
rolb
add
jmp
orb
xor
sub
dec
stos
scas
mov
pextrw
sbb
cmp
push
inc
sub
xchg
fsts
fbld
jg
xchg
pop
xchg
fisubl
mov
cmp
scas
xor
loope
jnp
inc
adc
mov
mov
lahf
pop
shrl
cltd
aad
push
pusha
push
subl
in
mov
pop
scas
adc
inc
sub
aaa
mov
xchg
das
dec
jle
cmp
sbb
loope
sub
sbb
add
cmp
sub
mov
mov
ss
pop
pop
sti
sbb
mov
jae
cltd
outsb
mov
in
add
popf
mov
mov
pop
adc
mov
xchg
sarb
rcrb
dec
not
jmp
ja
test
fidivrs
pop
push
xor
insb
xchg
cmp
pop
pop
insb
shlb
adc
push
or
xor
xor
nop
or
iret
adc
dec
xchg
fsubrs
push
or
cwtl
push
jmp
sbb
gs
lea
daa
pop
inc
fs
add
rorb
in
dec
xchg
dec
jno
imul
sbb
xchg
fsubs
ss
sbb
mov
roll
sbb
sbb
arpl
pop
fstpl
mov
and
jnp
push
mov
jg
jge
mov
jmp
sub
ljmp
jnp
and
and
xchg
sbb
imul
sub
cmp
int
push
hlt
push
fists
and
js
dec
pop
dec
mov
jne
bndstx
adcb
ss
sub
xor
loope
jg
in
push
fdivp
mov
std
in
xchg
cmpsb
nop
aad
xchg
addl
divb
sub
sahf
jp
shll
xchg
loopne
dec
imul
pop
and
add
mov
adc
mov
sarb
xor
mov
fs
das
sarb
mov
rcr
inc
int
imul
jns
int3
arpl
es
jmp
push
int
sub
or
clc
or
shll
mov
and
test
xchg
pop
jbe
or
pop
push
sbb
mov
loope
cmp
fwait
jne
sub
imul
mov
in
outsl
jnp
xorps
jp
rcrb
push
lahf
jbe
pop
inc
fs
sbb
push
mov
push
mov
or
sahf
es
sub
repz
inc
loope
ljmp
int
sub
inc
loopne
call
rolb
mov
cwtl
mov
jns
sbb
hlt
lret
imul
xchg
inc
sub
stc
inc
xchg
ret
xlat
popa
mov
jge
call
dec
inc
push
dec
inc
dec
xor
cs
insb
add
bt
pushf
cmp
pusha
lea
jb
bt
call
cmpsb
adc
inc
cmp
cmp
lret
cmp
repz
repnz
mov
sbbw
in
test
mov
fwait
bound
negl
test
loope
add
mov
out
mov
cld
cmp
jge
inc
dec
push
xchg
xchg
rcl
out
jo
mov
or
push
mov
cmpsb
lret
inc
inc
sbb
jmp
ss
pushf
sub
popa
jp
into
clc
inc
mov
push
lea
pushf
rorl
or
sarl
nop
aas
or
call
les
filds
test
pop
jno
fmul
call
mov
inc
dec
sbb
in
xor
cli
pop
mov
fnsave
addr16
js
outsb
icebp
mov
inc
out
or
jb
adc
or
fldcw
sahf
jnp
arpl
or
test
lret
loop
push
sbb
cli
orb
push
jp
into
cs
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
or
jg
ret
outsl
pop
int
xchg
shrl
repz
add
add
stos
repz
push
lahf
shlb
insl
cmc
dec
mov
sbb
pushf
cmpsb
sti
inc
rorl
sahf
xor
xor
pop
cmp
popa
sti
xchg
push
xor
addr16
movsb
cmp
repnz
loope
cmp
xlat
dec
stos
and
fwait
sbb
add
stos
outsl
xor
aad
lods
xor
xor
sti
loopne
dec
test
dec
jge
dec
mov
jnp
or
daa
stos
jb
inc
fcompl
call
int
inc
arpl
xor
xor
fs
insb
add
add
imul
jo
jb
dec
gs
fs
cmc
scas
fdivl
pop
aam
fmulp
outsl
jecxz
jbe
inc
scas
cltd
rclb
xchg
cmpsb
addl
mov
add
outsl
testl
pop
scas
xor
imul
inc
pop
jbe
insb
sub
loope
lods
mov
rolb
add
xchg
mov
pusha
jb
inc
into
push
xor
pusha
dec
ret
lcall
sbb
jmp
push
xchg
arpl
idivl
push
mov
adc
adc
arpl
pop
mov
jb
or
data16
sahf
pop
cmpsl
out
mov
ret
jno
xor
movsl
pop
mov
and
imul
dec
inc
sub
cmpsl
cmp
dec
mov
sbb
dec
mov
xchg
cltd
addr16
mov
mov
imul
cwtl
add
loopne
stc
sahf
pop
jge
xor
es
sbb
in
mov
jecxz
cmp
or
fwait
gs
jnp
int
sub
push
jp
lret
hlt
mov
inc
mov
inc
daa
jne
inc
and
jl
xchg
cmp
or
call
sub
jns
mov
mov
shl
or
dec
xor
adc
lret
jnp
pop
sub
adc
mov
addr16
dec
push
stos
lods
mov
pop
or
pop
sbb
jle
fwait
stos
pop
push
pop
cwtl
dec
sbb
mov
lods
popf
pop
stc
iret
push
sbb
in
inc
xchg
movb
fucom
sub
hlt
inc
pusha
ljmp
push
pusha
fldt
cmp
cmp
dec
scas
ret
lcall
xchg
mov
mov
xchg
mov
dec
lret
mov
mov
shll
mov
or
push
pop
cmpsb
jne
mov
std
pop
call
fwait
inc
negb
imul
shll
inc
lods
xor
dec
mov
and
mov
sbb
cmp
adc
xor
cmpsb
adc
pusha
aaa
cmp
fcomp
movsl
outsl
xor
lods
icebp
leave
jp
lret
mov
outsl
movl
subb
int3
adc
fscale
or
sarb
shl
dec
xor
out
test
or
jle
in
inc
mov
cmpsl
andb
lcall
in
jge
insb
lret
xor
cmpsb
ja
cmp
cmp
and
jmp
pushf
cltd
lods
xor
add
pop
stc
sarl
lret
jp
pusha
lea
jne
call
call
push
clc
jmp
das
jbe
out
ljmp
and
icebp
and
jae
subl
xor
adc
test
sbb
or
dec
add
push
sbb
enter
dec
aas
iret
adc
or
adc
fdivs
in
mov
gs
daa
jg
jmp
add
outsl
xor
xchg
sbb
dec
sbb
sbb
xchg
rcrb
mov
hlt
or
inc
int
stos
sub
leave
rclb
aam
mov
jnp
and
aaa
or
nop
cmp
sub
je
mov
dec
jl
in
add
add
mov
pusha
stos
xor
outsb
jp
leave
adc
or
nop
xor
shll
cmpb
leave
mov
scas
cmp
test
or
mov
pushf
out
pop
outsb
loopne
jns
aam
fstpt
pop
mov
lret
and
cmp
jo
inc
les
iret
cmp
out
loope
mov
jge
cld
sti
add
out
faddl
jl
fcomps
mov
lock
sub
jg
xor
lea
rol
js
push
push
jge
add
andl
xor
jnp
jl
cwtl
aaa
pop
mov
and
dec
xor
stc
int3
sub
mov
jo
or
rcr
and
mov
mov
mov
mov
popa
pushf
pop
add
in
in
cmp
sarb
sub
aad
jo
lahf
cmp
or
dec
out
or
dec
into
mov
fwait
data16
test
les
jne
mov
mov
xchg
loope
jo
into
pop
mov
ljmp
in
sub
adc
cwtl
loop
enter
jmp
push
push
and
mov
test
pop
cmp
es
inc
nop
xchg
movsl
cmp
test
mov
inc
nop
out
loopne
pop
fstpt
out
adc
mov
jnp
push
mov
int
adc
or
mov
cmp
inc
dec
outsb
repnz
sub
dec
repz
out
es
ret
les
movsl
hlt
xchg
cmp
jo
jg
dec
shrl
ss
lret
nopl
push
sbb
mov
add
fwait
jp
mov
dec
loop
pop
cs
addr16
sbb
xor
or
or
inc
ret
inc
test
ja
clc
dec
pop
push
out
cmpsb
adc
inc
lret
jbe
xchg
sti
pop
adc
or
es
insb
pop
push
sahf
lods
pop
sbb
mov
shrb
mov
push
adc
push
mov
ret
mov
xor
stc
out
inc
push
outsb
bound
cmpsb
sub
outsb
lods
add
inc
scas
fidivrl
in
pop
mov
push
in
sub
loope
add
lock
fcoml
sub
push
ret
ds
sbb
aaa
push
dec
cmpsb
push
pop
sub
cltd
jge
cmpsb
xchg
adc
mov
shll
mov
mov
stos
in
stos
inc
shl
mov
xchg
or
cmpl
add
sub
xchg
push
mov
shlb
jl
outsl
stos
dec
fwait
pop
dec
iret
lods
addb
lds
idivb
ret
mov
cltd
addr16
jp
scas
insb
xchg
test
test
pusha
mov
lea
jne
pusha
jmp
jmp
xor
and
mov
es
inc
lock
sub
orl
mov
push
jg
pop
nop
sub
imul
cmpsb
xor
test
movsl
inc
dec
mov
js
dec
push
sub
sub
sbb
cwtl
xor
movsw
mov
mov
jo
adc
pop
pop
lcall
jbe
repz
cli
aaa
addr16
out
or
std
xchg
xchg
pusha
jp
dec
fwait
mov
jp
loope
add
cmp
sbb
lcall
cmc
push
jmp
cli
sub
cmp
stos
shr
fisubs
notb
std
jge
jecxz
or
jl
pop
cmp
lds
mov
cmpsl
jnp
test
xor
scas
pop
xor
sub
dec
sbb
out
push
mov
in
jne
pop
xlat
dec
out
or
xor
mov
dec
adc
gs
add
pushf
in
jp
and
out
pop
loope
mov
lods
cmpsb
mov
fwait
add
or
and
add
adc
mov
loope
loopne
pop
stos
push
fnstcw
cmp
mov
mov
push
bound
dec
insl
pop
test
cmp
cmp
push
jnp
das
pop
fs
std
add
incl
or
push
jle
or
loop
adc
sub
xchg
divl
jp
lds
sti
lods
jmp
xchg
xchg
test
lahf
cmpl
sarl
and
jo
scas
sar
adc
jecxz
lods
aam
pusha
mov
stc
psubq
adc
jecxz
test
push
and
xchg
xchg
dec
and
ret
popf
jmp
push
mov
jge
pushf
rcrl
and
cmp
cmpsb
mov
lret
xchg
nop
sbb
imul
xchg
mov
and
add
or
xor
rcrl
dec
push
call
roll
mov
sbb
mov
std
lret
shl
rol
lahf
aad
call
repz
decl
dec
jl
lock
movsl
movsl
divl
jb
sahf
aas
das
push
enter
jl
mov
ss
mov
cld
mov
lret
xchg
lods
popf
push
stos
jmp
jne
int
lock
xor
pushf
lods
mov
xor
lret
mov
test
frndint
bound
ret
pop
popf
je
dec
cld
or
xchg
push
pop
daa
aaa
std
xchg
ret
jp
les
mov
mov
dec
loope
push
cmp
push
pushl
mov
lods
ss
jae
or
out
inc
imul
int
pop
jae
cwtl
mov
stc
mov
fcompl
inc
imul
inc
imul
sub
das
in
push
and
push
inc
pop
sub
mov
bound
cmp
or
dec
stos
jp
sti
and
int
mov
jo
adc
cmp
je
mov
loop
sti
inc
inc
sbb
ret
cs
gs
filds
pop
neg
pop
call
jnp
xchg
test
inc
inc
nop
mov
add
clc
mov
push
pusha
sahf
loope
cmpsb
aam
sbb
stos
adc
cmp
fs
xchg
test
cmpsl
jle
adcl
push
dec
jne
mov
cwtl
les
inc
loopne
jmp
or
pop
inc
cmp
inc
sbb
cmp
je
inc
adc
mov
in
push
call
push
sub
and
mov
add
push
and
rcll
ljmp
pop
inc
jno
mov
loop
jno
adc
fmul
mov
add
jbe
in
mov
pop
and
xchg
insb
lock
mov
jl
fisubs
mov
repz
push
std
neg
jns
jmp
cmpsl
xrelease
test
sbb
add
test
pushf
repz
loopne
data16
cltd
pop
ljmp
icebp
add
mov
jl
repz
push
daa
enter
das
pop
cwtl
pop
or
pop
inc
in
sbb
icebp
adc
and
xchg
xchg
or
mov
aas
push
xor
adc
mov
aas
pusha
insb
repz
sub
mov
or
sub
push
or
xchg
pusha
lods
adcl
cld
adc
lea
pop
icebp
popf
daa
bound
push
das
es
mov
test
daa
xor
rep
fisubrs
sub
icebp
push
sbbl
adc
out
cmp
jp
shl
and
sti
sar
pop
lea
add
pusha
neg
mov
call
jmp
movl
pushf
lea
jmp
rclb
lcall
imulb
aam
pop
dec
cld
fildl
cmp
std
cmp
outsb
mov
bound
xor
in
xchg
pop
lds
cmp
clc
push
test
cmp
ds
dec
fisubrl
xchg
mov
out
repz
push
mov
mov
jg
sub
adc
add
shl
jle
outsl
mov
push
daa
jne
loope
cmpl
push
cmp
xchg
out
test
sbb
jo
cld
or
mov
out
push
jmp
jmp
incb
js
xor
inc
cmp
add
jg
pop
movsl
es
jno
dec
test
xor
inc
ss
fwait
lret
xchg
dec
test
inc
nop
popa
decl
jge
sbb
je
and
int
lock
xlat
inc
in
push
out
push
lcall
cwtl
push
xchg
xor
push
out
fstps
sti
pop
fwait
dec
scas
push
jp
mov
ret
ficoml
jecxz
xor
pop
mov
pop
addr16
das
ds
push
jp
rorb
test
adc
dec
mov
neg
dec
mov
add
xchg
jnp
stc
aaa
mov
sub
lret
fildll
xor
jl
dec
add
les
xchg
adc
shl
mov
shrd
mov
ret
sbb
js
xchg
pop
lret
sub
pop
popf
js
inc
stc
lcall
xor
jecxz
dec
mov
sbb
push
adcb
adc
jnp
clc
das
aas
pop
cld
testl
testl
clc
sti
lret
pavgb
jp
mov
pop
dec
cltd
add
sbb
jg
shlb
or
sbb
testb
cltd
ficomps
shll
mov
dec
cmc
aas
test
les
mov
sbb
sbb
aad
out
xchg
dec
rcll
xchg
cltd
fstpl
sahf
pop
enter
insb
xchg
or
inc
sbb
jg
mov
hlt
ret
dec
and
les
fdivs
jp
in
xchg
mov
inc
inc
push
pop
es
jle
adc
mov
inc
in
in
inc
cmp
jne
dec
xchg
inc
and
loop
mov
xchg
jp
mov
cmpsl
pushf
pusha
push
pop
dec
cmpsb
push
inc
ret
inc
mulb
mov
inc
hlt
icebp
dec
pusha
stc
or
lds
cmp
stc
inc
xchg
out
pushf
lds
push
stos
cmc
xchg
cmp
outsl
bound
inc
lods
cmpsl
in
mov
pop
mov
lods
cmpsl
aam
pop
push
dec
xchg
cmpsb
xor
call
xchg
jl
pop
stc
ja
lcall
pop
clc
adc
dec
out
sar
push
cmpsl
xor
clc
mov
xchg
or
idivb
xor
jp
mov
adc
push
movb
pusha
lea
jae
call
cmpsb
and
rclb
fdivrs
dec
push
pop
pop
inc
in
push
cld
daa
int
cmpsl
mov
dec
xchg
xchg
jbe
je
mov
sub
cwtl
ljmp
mov
push
stc
xchg
dec
cld
mov
adc
or
shrb
xor
je
cld
jno
xchg
sbb
orb
or
add
adc
sbb
jne
movsb
or
push
dec
leave
imul
scas
adc
pop
pop
shll
jge
sbb
pop
pop
insb
push
and
aaa
push
ficoml
je
loopne
scas
dec
pop
add
pop
jg
loopne
repz
decl
xchg
push
test
mov
inc
rcll
inc
bound
xchg
lock
pusha
cmp
pop
dec
xchg
and
xor
mov
gs
lcall
test
shll
aam
jecxz
ljmp
fwait
push
mov
imul
pop
cmp
add
cli
andl
jp
gs
ret
add
ss
scas
adc
adc
push
mov
orl
xor
psubw
cmp
add
outsb
sub
les
push
jp
mov
mov
insl
and
cli
sbb
sub
gs
mov
inc
cmp
into
adc
jb
or
push
push
inc
dec
dec
inc
inc
push
push
xor
cs
insb
add
sahf
loope
dec
pop
sbb
sbb
xchg
jl
sbb
mov
cmc
push
movsl
cmp
fdiv
inc
jmp
inc
jae
pop
pop
jo
pop
cmc
push
jno
inc
xchg
out
xchg
ja
cmpsb
xchg
ret
inc
ljmp
dec
dec
roll
sbb
fisubl
into
jo
mov
xor
dec
xor
xchg
in
mov
ljmp
cltd
adc
xchg
popa
lods
lcall
js
fnstenv
cmp
iret
fistpl
rcrl
mov
xor
faddl
add
movl
and
je
add
pusha
pushf
jmp
jno
sbb
pop
lret
xor
add
sbb
xor
xor
jg
adc
int3
add
aaa
xchg
xor
aad
cmp
shll
sbb
stc
iret
sub
sbb
pushf
sbb
test
rolb
test
int
push
mov
jbe
cs
push
sub
aad
stc
fidivl
and
jnp
adcb
imul
mov
and
aad
adc
aad
in
xchg
jp
push
and
ljmp
ja
mov
push
xor
pop
je
lret
xchg
sbb
jo
orl
cmp
or
je
xchg
xchg
jo
adc
ljmp
cmp
addr16
cmp
mov
mov
mov
lods
mov
xchg
pop
cmp
imul
dec
das
mov
jae
cli
jns
popa
imul
push
ret
into
cwtl
movsb
pop
jl
sub
lahf
cmpsl
jae
dec
xlat
ficomps
jno
dec
push
and
jp
mov
loope
mov
cmpsl
sarl
sahf
dec
sub
push
sub
mov
int3
inc
mov
outsl
mull
lock
sbb
mov
fisubs
pushf
out
pop
push
and
imul
jg
mov
pop
mov
call
jl
and
mov
mov
pop
imul
pop
pusha
js
jae
jp
push
pop
sbb
bnd
push
ficompl
and
mov
or
negl
jmp
xchg
lea
jne
jmp
test
push
add
add
add
orl
add
push
push
add
add
add
ds
add
add
add
xor
add
add
add
aaa
push
add
add
add
test
add
add
add
cmp
add
add
add
add
add
ljmp
add
add
add
adc
add
push
aaa
push
add
add
add
je
add
add
mov
push
add
push
add
adc
add
add
add
push
outsl
jne
fs
arpl
push
decl
push
xor
gs
pop
dec
mov
pop
outsb
loope
scas
jae
dec
mov
test
sbbb
testl
scas
pop
ret
mov
xchg
insl
adc
jnp
mov
insl
inc
call
and
pop
mov
lcall
nop
ds
xchg
jle
iret
cmp
sbb
in
lds
je
dec
pop
pop
in
xor
cmp
mov
out
rorb
and
push
mov
call
mov
jbe
aad
and
pop
dec
insl
jecxz
in
lahf
ret
mov
popf
mov
aas
jp
mov
push
fs
popf
mov
or
xlat
loopne
js
jp
mov
imul
adc
pop
loope
fwait
data16
js
mov
jp
mov
sahf
inc
lea
mov
jg
enter
insl
sbb
dec
mov
xlat
push
mov
mov
cltd
dec
pop
ds
js
das
ja
mov
inc
dec
jno
push
loop
test
fucomi
fwait
movsl
and
shlb
out
mov
sti
lea
rcrl
in
sbb
push
shrl
and
inc
stos
mov
push
mov
leave
xchg
and
shld
loope
hlt
pushf
push
pushf
lea
jmp
idivl
sbb
inc
sbb
nop
jge
mov
push
mov
push
ret
jnp
mov
or
ja
or
jno
xchg
inc
test
lods
push
push
dec
lahf
data16
ret
xchg
mov
les
cwtl
je
inc
push
mov
enter
dec
inc
mov
mov
and
push
adc
sbb
jg
or
mov
aam
cmc
lahf
add
cmp
mov
mov
inc
or
inc
rep
mov
in
lret
jbe
test
fisttps
push
daa
nop
call
data16
aad
cltd
inc
mov
mov
repz
shlb
xor
arpl
mov
cmp
loopne
dec
sbb
cmp
and
mov
adc
xchg
add
ror
add
fimull
inc
sbb
and
popa
stos
mov
and
daa
push
cs
inc
jnp
loop
lock
mov
xchg
sbb
add
std
cmp
int3
movsl
stos
decb
mov
cwtl
pop
lods
loope,pt
inc
inc
jge
and
mov
test
mov
xchg
and
stc
sbbb
mov
pop
sub
mov
pop
out
cmpsb
pop
xor
and
cmp
jp
mov
fwait
dec
mov
lahf
scas
and
std
daa
stc
mov
andb
pushf
adc
movsl
add
aas
dec
xor
xor
inc
hlt
rorl
iret
and
jne
push
pop
inc
lret
xor
stc
dec
stos
int3
mov
movsl
inc
push
sti
test
jmp
add
push
int
mov
and
sub
out
nop
push
mov
xor
loope
pop
or
fiaddl
dec
mov
pop
and
add
xor
mov
adc
loopne
mov
xor
xorl
or
arpl
xchg
out
inc
pop
movsb
sti
call
xor
ja
popa
push
ss
add
push
push
pop
adc
pusha
xchg
mov
jae
push
lahf
or
push
mov
mov
push
fld
loopne
jle
pop
fwait
cli
and
jnp
mov
cmc
fdivs
lret
jle
mov
xchg
mov
or
inc
mov
add
ret
pminub
loop
lds
mov
mov
pushf
lea
jae
inc
mov
mov
inc
push
mov
mov
mov
lea
call
call
pusha
add
jmp
or
btc
mov
cmc
bt
cmp
pushf
jmp
mov
jmp
mov
in
test
inc
pusha
int3
jne
or
inc
mov
sbb
jg
mov
dec
jbe
aad
push
lahf
xor
inc
popf
add
rcl
dec
and
xor
movsb
cwtl
scas
and
test
dec
lods
stc
or
inc
inc
out
jp
add
inc
fisttpl
xchg
or
jbe
ljmp
mov
mov
add
push
jp
mov
adc
sub
fcoml
ffree
and
gs
mov
mov
dec
je
test
xchg
inc
dec
lock
jne
jmp
mov
push
lods
cli
or
and
push
jmp
dec
push
push
loope
std
aaa
pusha
je
pop
ss
adc
out
les
repnz
mov
in
lods
cmp
divb
adc
mov
mov
nop
mov
jecxz
and
pop
daa
stc
test
shll
ss
rcll
lock
divl
push
jmp
pusha
rclb
sti
and
pop
push
sub
shll
cmp
movaps
push
add
cmp
pushf
add
test
insb
sbb
xchg
stos
jg
xor
add
fiaddl
nop
sbb
test
shlb
es
push
rcl
push
add
cmp
in
adc
push
jnp
mov
jo
decl
fnstsw
mov
xor
push
lods
push
and
push
pop
push
sub
mov
aaa
sbb
or
inc
cwtl
addr16
adc
adc
je
mov
or
cwtl
addr16
mov
les
cmp
pusha
cmp
ss
arpl
outsl
mov
or
ds
and
add
mov
xchg
in
mov
rcrl
loope
cmp
scas
fdivl
fistpll
inc
pop
das
ficoml
sub
stos
scas
mov
mov
mov
fmull
insl
fstpt
inc
aad
xor
inc
scas
push
cmp
lods
ja
lock
xchg
sub
lahf
int3
inc
cmpsl
jne
push
xchg
inc
sbbl
cli
das
xchg
call
add
jnp
mov
xor
js
jns
xorb
jmp
out
aam
loop
cs
aam
imul
jb
mov
stc
pop
call
ret
mov
xchg
pop
mov
xchg
push
sarl
stos
repz
xchg
jp
push
add
mov
push
mov
mov
push
xlat
js
movb
jb
ret
out
sbb
int3
ljmp
pop
mov
push
and
cltd
jecxz
outsb
sbb
shrl
insb
cs
jno
fucomi
mov
lock
cmp
into
pop
fwait
in
push
dec
rcrb
ficoml
or
sub
or
mov
js
imul
xchg
fsubrl
fstl
scas
mov
mov
jne
sbb
and
and
inc
pop
jns
mov
mov
push
fs
jmp
xchg
adc
test
faddl
or
and
and
scas
and
sub
loope
mov
das
mov
outsl
jnp
add
jp
mov
sahf
lret
movl
insb
push
andb
loope
mov
adcb
test
jmp
fiaddl
jnp
sub
leave
popa
push
adc
pusha
sbb
mov
mov
inc
addb
jne
xchg
push
gs
xor
movsl
pushl
enter
push
push
andl
int3
sub
nop
or
cmc
or
push
cmc
gs
insl
xchg
and
pusha
mov
pop
stos
mov
add
addl
enter
add
lods
sar
jmp
les
inc
mov
mov
add
leave
dec
jnp
out
ret
jo
fcomp
sub
sahf
pop
shll
xor
lret
out
ret
pop
into
dec
pop
lods
pop
lock
gs
sbb
pop
clc
pop
iret
mov
gs
out
push
shl
fistl
rcrb
cwtl
pop
imul
into
push
sub
push
mov
call
xchg
sub
ja
xor
repz
pushl
pop
inc
cmpsb
adc
or
mov
dec
bound
adc
sbb
mov
pop
jecxz
or
fidivrs
and
sti
and
js
mov
push
addr16
cmp
push
insl
cmp
xor
aad
pusha
mov
sub
pop
roll
dec
mov
scas
jl
enter
out
lock
xlat
fwait
sub
jp
mov
sti
popa
xchg
jne
dec
pusha
pushf
pusha
call
addl
pop
in
sub
es
fadds
lahf
jecxz
jns
aaa
pop
and
pushf
jmp
rcr
add
sub
or
mov
ljmp
inc
gs
or
pusha
scas
rcrl
jg
push
dec
popa
movsl
mov
mov
gs
pop
roll
aam
add
jnp
jle
adc
jp
scas
mov
mov
add
movsbw
mov
shr
mov
sub
pushf
pushf
mov
cmc
mov
cmc
movb
cmc
not
push
jmp
test
xor
xor
mov
cwtl
lds
bound
mov
add
lock
lds
rolb
mov
mov
lret
or
aas
lds
push
sbb
movsl
fdivs
leave
call
ljmp
or
and
ljmp
xor
mov
push
sub
lods
lods
jl
mov
mov
adc
std
adc
mov
jmp
pop
xchg
mull
or
and
out
dec
cld
inc
pop
cmp
mov
and
cmp
sbb
shlb
mov
mov
cmp
les
movsb
inc
xlat
out
cmova
jno
mov
aaa
add
cmp
lds
inc
xchg
dec
je
shll
leave
je
cmp
popl
loope
clc
xchg
fsubs
cmp
les
mov
mov
cld
jmp
lods
or
sub
push
inc
ljmp
xchg
mov
gs
and
xlat
dec
sub
daa
out
push
mull
jp
jbe
fsts
movl
xlat
mov
cmp
insl
lock
push
bnd
in
jge
ret
jns
lods
dec
mov
repnz
in
xor
dec
adc
push
fildll
lods
lock
and
or
inc
push
lods
lods
or
in
stos
movsb
or
sahf
mov
rdpmc
into
sbb
out
adc
movsl
repz
aas
lcall
test
adc
xchg
outsb
filds
lods
mov
mov
into
or
jecxz
fbstp
sub
xor
in
add
jne
out
mov
lret
ss
adc
lods
xchg
pop
fucomp
sub
pop
cs
cmpsl
jp
lods
adc
loopne
sub
bsf
rcr
sbb
cmp
add
pusha
stc
mov
ror
mov
clc
cmp
stc
repnz
pusha
jmp
std
shr
shr
out
test
xchg
leave
scas
xchg
or
pop
sub
mov
mov
gs
sub
mov
mov
cmp
mov
mov
in
mov
fnstsw
or
add
lret
sub
adc
cwtl
xchg
pop
pushl
inc
xchg
inc
adc
mov
ret
inc
mov
cmc
xchg
leave
loopne,pt
xor
cmp
or
test
out
mov
aad
add
xchg
pop
jb
xchg
pop
cs
xchg
rolb
xchg
in
jae
les
adc
cmc
cmc
inc
into
sbb
ret
cmp
dec
jns
rcrb
leave
or
bound
cmp
es
inc
stos
sub
cmpsb
bound
je
and
jae
aad
mov
push
add
jl
dec
or
add
pop
xor
fiaddl
jae
cmp
movsl
loopne
xor
out
jp
dec
adc
sub
jp
stos
leave
xchg
mov
pushf
call
sbb
aam
jle
or
inc
stos
fsin
scas
xchg
jnp
aam
pop
insb
jo
or
aaa
int
sub
jae
sbb
fbstp
push
push
push
lods
ss
and
sub
das
mov
lret
int3
ss
scas
fsubrs
out
or
arpl
or
pop
test
lahf
in
lea
pop
imul
test
cmp
stos
fidivrl
out
or
adc
mov
enter
aaa
pop
xchg
rclb
xor
and
inc
xor
add
fadd
pop
test
and
inc
pop
std
sub
jo
push
pop
push
fisttps
and
aad
cmp
sbb
pop
jno
or
push
jle
dec
shrl
loopne
and
adcb
outsb
push
int3
loope
jb
dec
or
jp
jp
stos
ja
xor
pushl
mov
pusha
lea
jp
mov
jmp
rcl
xor
data16
xor
jge
lcall
icebp
xlat
imul
mov
add
push
pushf
shr
ljmp
decl
iret
add
add
ljmp
arpl
adc
and
imul
out
mov
mov
push
mov
mov
bound
lea
cmp
call
aad
out
sub
or
out
jp
test
repz
pushf
shr
stc
push
cmp
pusha
lea
je
pushf
pushf
cmp
pushf
cmp
call
push
push
mov
ret
into
pop
push
clc
ffree
outsl
xchg
jg
xor
and
pop
xchg
data16
shrl
mov
sub
pop
push
and
addr16
xor
adc
pop
dec
aas
push
lea
dec
aad
cmp
mov
or
add
arpl
test
gs
mov
push
inc
xor
rcrl
dec
add
mov
lret
cld
dec
arpl
sub
orl
jp
test
insl
sbb
xchg
xchg
cld
incl
cmp
sbb
ret
sti
mov
fstps
mov
and
sahf
xor
and
ss
mov
and
mov
les
adc
popf
ss
jg
ret
pop
and
sahf
ss
sbb
or
cmp
cmp
sbb
jno
xchg
cltd
movsb
testb
xor
cltd
sub
jnp
cmp
jg
mov
orb
les
shlb
adc
push
jae
or
loope
xor
addr16
pop
cmpsl
popl
or
mov
jbe
enter
lock
loope
test
ljmp
pop
inc
adc
popa
xor
add
push
adc
push
repnz
push
xor
mov
cmp
sub
inc
ret
test
mov
je
or
sbb
je
pop
dec
push
lea
in
shlb
arpl
ja
mov
push
aas
adc
popa
call
adc
mov
and
icebp
push
pushf
xchg
add
mov
jecxz
aad
fldenv
mov
loop
pop
iret
or
pop
mov
push
ret
aad
cmp
out
cmp
pop
pop
ljmp
jp
cmpsl
lahf
jb
jno
jne
hlt
sub
mov
loop
jo
into
cmp
repnz
cli
or
mov
add
lods
scas
cmc
lods
cltd
xor
imul
lea
shll
shr
dec
pop
lea
push
imul
mov
imul
xchg
sub
dec
cli
sarl
je
sbb
or
out
rcrl
pushf
mov
add
cwtl
and
std
jp
cmpsb
jmp
xlat
pusha
call
push
lea
call
jmp
pop
pusha
inc
or
daa
stos
inc
dec
push
in
subl
and
inc
lret
mov
sbb
arpl
mov
xor
fs
mov
mov
std
dec
lods
mov
daa
or
jo
test
sahf
jl
ror
shll
dec
jmp
sub
gs
xor
sahf
or
mov
aad
lock
push
fstps
xor
mov
cmpsb
fdivrl
fs
jne
push
pusha
movb
push
mov
pushf
mov
call
adc
lds
outsb
scas
je
push
sub
insl
lahf
add
mov
out
outsl
pop
push
ja
mov
scas
push
cld
test
ret
stos
dec
out
outsl
pop
and
adc
scas
fsubl
clc
or
dec
ljmp
aad
test
add
mov
hlt
mov
stos
aam
scas
mov
push
sub
testl
repnz
lret
jecxz
xor
jp
movsl
je
test
enter
jo
jecxz
add
test
imul
leave
jno
lea
and
xchg
sbb
mov
movsb
iret
push
sub
add
orb
sbb
mov
jecxz
adc
imul
mov
movsl
push
sti
xchg
or
stc
iret
call
cmp
push
jmp
decb
mov
jp
movsl
jbe
xor
and
mov
aad
pop
loopne
cli
cwtl
repz
fistpl
mov
fbstp
loop
jle
arpl
jge,pn
add
or
fbstp
jecxz
fld
fidivrl
and
addr16
sub
jecxz
add
js
sbb
sbb
push
dec
inc
dec
lahf
movsb
fldt
pop
jo
jnp
jb
shr
adcb
sbb
dec
mov
xor
lcall
or
sbb
mull
mov
cli
inc
in
ret
iret
add
aaa
jns
mov
lods
adcl
sarb
push
ret
inc
sub
xchg
stos
xor
pop
es
popf
mov
lods
incb
lret
xor
popa
jle
es
popf
or
xor
out
repz
dec
in
mov
mov
stc
mov
xchg
jmp
fs
jno
sarl
and
xchg
inc
push
sub
jge
sub
data16
mov
inc
int
pop
mov
add
and
test
jecxz
and
mov
out
inc
inc
lret
pop
and
inc
inc
dec
test
movsl
or
add
push
xchg
lcall
sbb
imul
out
out
dec
test
xchg
cld
jle
loop
mov
adc
mov
cmp
sub
int
dec
mov
movsl
cld
jl
and
and
mov
imul
sub
xchg
sti
divb
ret
aam
or
pop
ss
aam
mov
jno
push
lret
mov
mov
push
adc
xchg
push
cmp
cmp
pop
jl
int
pop
push
xor
fs
mov
inc
pushf
xor
sar
mov
sub
push
fnsetpm(287
stos
call
ficompl
push
daa
push
jae
hlt
and
or
mov
xchg
pop
int
in
aam
mov
xor
mov
push
sub
xor
push
loopne
jae
jp
mov
bswap
mov
pusha
xchg
movzbw
mov
movzbw
bswap
not
mov
mov
call
cs
mov
movsl
and
xchg
mov
xchg
jg
mov
jae
or
inc
iret
jp
xchg
inc
jae
dec
fldenv
push
cltd
and
jp
mov
iret
mov
sub
lret
stos
mov
inc
xchg
sti
jp
mov
lret
imul
and
pushf
pushf
mov
movb
pushl
ret
lods
insl
ficomps
inc
mov
lea
imul
inc
xor
cli
fadd
adc
pop
movsl
lock
ss
test
test
jae
push
cwtl
dec
add
ret
or
movsb
mov
jecxz
into
lret
test
stos
lods
test
call
test
xchg
push
push
bound
mull
sub
add
decb
sti
enter
jae
cmc
es
push
dec
movsl
stos
fiaddl
ja
pop
test
mov
sbb
shlb
xor
rorl
mov
mov
pop
xchg
cmp
xchg
mov
pop
add
popf
test
inc
sub
xlat
mov
mov
shrb
cli
adc
mov
bound
mov
iret
cmp
jg
bound
shll
mov
sbb
dec
jmp
fs
andps
rcrl
inc
mov
jb
xchg
in
dec
cmp
gs
inc
push
insl
pop
popa
sbb
fildl
out
dec
mov
ds
loope
jb
xchg
pop
pop
sub
in
jp
mov
leave
pushl
lea
call
pushf
lea
jb
pushf
push
pushf
movb
pushl
ret
push
lea
je
pushf
push
pushf
pushl
lea
jmp
cli
cli
jecxz
xchg
lcall
roll
sarb
bound
test
push
jmp
or
pop
mov
jg
lcall
adc
jmp
adc
aad
stc
mov
test
jg
xor
icebp
sub
je
cmp
icebp
jns
push
push
add
iret
fwait
gs
adc
out
add
mov
adcb
push
jp
mov
add
je
outsl
fs
gs
imul
add
cli
fs
sub
shl
mov
add
xadd
inc
shl
mov
rcr
add
test
rcl
shr
rcl
bts
clc
mov
adc
clc
add
pushf
bswap
jmp
lea
call
jb
push
movw
pushf
lea
jae
call
cmc
cmp
jmp
lcall
add
inc
mov
ljmp
mov
adcl
push
xor
lds
out
test
xorb
or
sbb
cmp
pop
lock
das
add
jle
mov
mov
sbb
lret
test
stc
add
call
jp
cmpsl
mov
mov
pop
mov
ret
enter
stos
test
mov
test
mov
in
or
sbb
lret
jns
cmp
mov
mov
aas
push
ss
inc
mov
mov
xorl
cmpsl
cmp
push
cmpsb
or
icebp
divl
xchg
ret
clc
dec
pushf
jb
mov
cwtl
adc
adc
push
fldl
out
and
stos
sbb
int
out
pusha
cmp
xorps
pop
push
int
bound
arpl
jbe
jp
sahf
mov
mov
nop
ret
ret
adcl
pop
mov
pop
ds
cmp
scas
cmc
and
inc
lret
imul
jo
sbb
notl
and
dec
pusha
outsb
cmp
es
test
push
adc
loope
clc
pop
cli
xor
jle
sar
or
cmp
fidivs
mov
ret
xorb
add
out
dec
push
aam
jae
cmp
cmp
into
outsb
inc
inc
xchg
inc
int3
fnstsw
stos
movsb
dec
mov
mov
mov
mov
xor
aad
xchg
mov
inc
aam
mov
js
push
call
into
sbb
call
jmp
daa
cmpsb
jmp
cmpsl
ss
sub
sub
repz
daa
push
xchg
push
push
rcrl
lret
mov
sahf
and
sbb
xlat
fdivr
incl
out
js
cmc
and
lods
adc
sub
bound
fs
xor
add
pop
push
daa
int
lds
cmc
mov
xor
aas
mov
inc
dec
fucomp
inc
jmp
cltd
xchg
ljmp
ret
jno
sahf
std
in
in
dec
sub
mov
sub
and
insl
stos
jbe
jbe
jle
popf
popa
out
aas
or
and
popf
jb
arpl
cmp
jp
imul
lods
pushf
inc
insb
sbb
test
jge
pop
add
lods
or
stos
test
adc
jno
xor
mull
sbb
inc
out
or
cmp
jo
adc
cs
sbb
ja
sub
les
addl
add
les
adc
mov
pushf
daa
jle
pop
sub
stos
xchg
jns
scas
cs
pop
loope
adc
mov
in
inc
xchg
sbb
xchg
mov
xchg
hlt
movsb
rolb
push
test
cmp
loope
in
jle
xchg
jge
xor
mov
dec
repnz
and
jle
dec
cmp
stc
loopne
outsb
imull
stos
inc
out
adc
xor
and
add
hlt
call
adc
pop
pop
sahf
hlt
test
or
mov
mov
shr
mov
aad
mov
test
fldln2
mov
mov
xor
xor
push
out
aas
in
inc
sub
fildll
lcall
or
or
xchg
fcomps
aaa
js
dec
push
jp,pn
popf
sbb
push
mov
adc
movb
mov
pushf
pushf
pushl
ret
jl
cmp
and
xchg
add
cmp
inc
lds
lret
popa
insl
cmp
loopne
test
fwait
and
inc
lds
dec
mov
addr16
setns
cmp
and
aad
in
stc
sub
mov
mov
imul
push
mov
fldt
push
xor
xchg
arpl
dec
jmp
aaa
xchg
aad
idivb
idivl
fwait
in
mov
push
xchg
int
jl
mov
add
pop
mov
stos
xor
sahf
fsts
subl
adc
and
mov
push
fwait
imul
push
sbb
mov
call
push
mov
imul
movsl
pop
inc
sub
jp
sub
sub
cltd
push
inc
fwait
push
sahf
addr16
xchg
inc
int
mov
je
xor
or
inc
insl
adc
mov
fldenv
movsb
xchg
jp
fwait
daa
cli
and
inc
imul
movsb
xor
fstl
or
loopne
mov
imul
js
dec
add
dec
xchg
and
sbb
add
insb
jg
stos
dec
push
cmc
mov
dec
ljmp
jecxz
in
mov
ror
push
mov
push
int
ds
cmp
dec
ret
jne
les
xchg
pusha
push
mov
jecxz
and
cmp
push
mov
add
pop
scas
hlt
inc
or
pop
pop
insb
out
mov
mov
bound
lea
push
cmpsb
call
cmp
out
pushf
dec
cmpsb
rolb
inc
pop
inc
nop
mov
mov
test
jae
mov
nop
mov
mov
js
lea
xchg
sub
pop
mov
sti
inc
dec
cmp
mov
mov
in
or
in
cmp
lock
test
add
sbb
pushf
add
out
mov
or
xor
idiv
inc
mov
sub
cld
or
popf
mov
mov
lahf
pop
into
dec
sub
sbb
lds
xor
cmp
test
stc
dec
aas
lds
ds
pop
jns
mov
fdivs
adc
test
add
adc
mov
fcomps
mov
sbb
cld
jb
ds
cmc
clc
hlt
push
fdiv
jnp
sub
sbb
repz
in
iret
lahf
jl
and
xchg
lods
xor
rcl
and
jp
cltd
inc
push
mov
xchg
pop
pop
jnp
xlat
mov
pop
and
testb
ds
cmp
push
adc
insl
lods
sub
es
ss
add
push
inc
sub
dec
shl
fs
mov
jp
inc
mov
ret
sbb
xchg
outsl
mov
jnp
xchg
jb
adc
pop
sub
sahf
sbb
shlb
add
cli
jbe
or
mov
loopne
push
in
imul
sahf
or
jg
fnstsw
jo
jae
jmp
insb
pushf
out
or
adc
sbb
or
dec
fstl
mov
xchg
test
mov
je
test
aam
add
xor
sbb
lret
nop
mov
ljmp
ds
add
inc
sti
pushf
xchg
push
test
mov
stos
sbb
iret
cs
out
aaa
inc
sub
or
pop
jns
adc
rcr
cmpsb
cmpsb
add
scas
push
inc
jmp
jg
push
lahf
xor
rol
pop
out
xor
dec
jp
cltd
cmp
and
xor
push
mov
and
movb
lea
jmp
call
test
push
test
mov
and
jge
vmwrite
pop
loop
pop
mov
cltd
int
sti
mov
insl
into
xchg
mov
fidivl
push
insb
js
and
outsl
cmc
jnp
adc
mov
fbld
jns
hlt
out
aaa
and
ja
jmp
ret
mov
and
mov
aam
out
inc
mov
mov
lret
imul
cmp
in
cmc
jnp
or
test
mov
push
lahf
mov
scas
pop
pop
lods
and
cmp
xor
leave
xchg
aad
cmp
cwtl
sub
lahf
int
cs
add
cmc
and
jp
xchg
test
imul
pop
stos
imul
xchg
imul
dec
xlat
lods
lods
adc
lods
sub
lds
xchg
jp
xchg
movq
mov
mov
xchg
mov
minps
jp
xchg
xchg
push
inc
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sub
scas
fwait
dec
cmc
pop
adc
test
std
mov
ret
mov
or
inc
int3
and
and
mov
out
rolb
and
pop
mov
pop
and
mov
xchg
sub
fisttpl
dec
enter
adc
dec
sub
lods
out
lret
addr16
inc
xlat
loop
push
imul
dec
xor
shll
lods
scas
mov
bound
das
jl
push
fsubs
mov
mov
loope
xchg
rcrl
stos
push
jns
push
mov
mov
mov
out
popf
fldl
js
arpl
test
mov
jp
push
or
into
jbe
out
popf
fnstsw
daa
sbb
pop
jne
sarl
add
sbb
lret
leave
push
sahf
mov
enter
inc
sbb
aas
enter
and
flds
jge,pt
xlat
dec
cmpsl
sarl
dec
sbbl
sti
pop
sbb
jp
insl
cs
fiaddl
jp
xchg
lea
jecxz
lret
dec
xchg
push
iret
or
in
xor
dec
jp
xchg
cmp
dec
outsl
popa
fs
imul
add
or
stc
iret
jmp
lods
pushf
inc
jmp
sbbb
out
xchg
mov
jge
jmp
jns
xchg
jno
dec
sub
xor
mov
fidivl
jle
sub
xchg
push
add
clc
pushf
cmpsl
push
sub
cmp
addr16
data16
mov
aam
outsb
mov
ret
mov
xchg
lods
push
mov
lea
jle
cmp
clc
test
add
test
clc
bt
pushf
test
pushf
mov
jmp
ds
les
in
fildl
cli
jne
cmpsl
fnstcw
sbb
cmpsl
imul
jg
adc
sarb
mov
mov
adc
cmp
std
dec
pop
sti
negb
inc
xlat
out
out
cmp
notb
push
dec
cwtl
cld
or
mov
mov
iret
and
add
dec
jb
cmp
sahf
inc
loope
inc
mov
andb
into
dec
cli
daa
xor
mov
pop
fnclex
mov
rorl
push
xor
xchg
pop
repnz
push
push
lea
adc
adc
cmp
cmp
xor
jmp
or
xchg
lea
lret
ret
cmp
adc
mov
jge
sub
pop
scas
pop
mov
aad
xchg
jmp
enter
jg
xchg
into
and
orb
jl
jge
loope
andb
loop
and
jle
lea
out
jns
mov
lods
sub
sub
stos
sub
and
sahf
xchg
or
inc
out
push
adc
push
pop
stos
jno
add
xchg
mov
cmp
jg
or
pushf
add
sub
ds
jge
mov
dec
test
jl
outsl
clc
inc
inc
push
mov
mov
xchg
fistl
dec
test
sbb
lock
dec
mov
call
inc
push
int
iret
shll
clc
inc
cmp
mov
add
xchg
inc
into
movsb
mov
adc
lcall
dec
pop
lods
mov
insb
jmp
and
xchg
mov
xor
ret
jo
jp
negl
in
lcall
in
outsl
cmp
ret
and
iret
push
push
cmp
and
test
and
adc
mov
andl
and
xchg
push
dec
add
mov
xlat
in
cmp
or
aaa
adc
xchg
add
mov
add
shl
cltd
mov
aas
sub
stos
lret
jnp
int
push
mov
dec
add
mov
cli
inc
fstpt
mov
decl
add
ds
cltd
aaa
mov
xor
mov
mov
movsb
pop
movsl
jp
push
imul
enter
mov
xor
stc
test
and
outsl
fcmovnbe
loopne
jb
mov
shrl
inc
hlt
fsubr
repnz
inc
push
shrl
dec
adc
xor
or
sbb
xchg
mov
and
adc
jmp
test
sub
xor
outsb
repz
aad
mov
nop
lret
fs
insb
dec
jge
divb
adc
xor
sarl
into
xchg
jae
fwait
cmp
pop
mov
mov
and
cmc
mov
out
mov
cmp
sbb
sahf
dec
pop
cld
mov
jae
mov
adc
sahf
push
inc
mov
inc
jnp
rol
mov
loopne
adc
push
out
scas
js
push
sbb
push
pop
loope
jno
jle
jp
xchg
dec
add
xor
sub
gs
xor
xchg
dec
subl
adc
mov
bound
movsb
lods
movsl
lahf
enter
inc
pop
cmc
lods
dec
sbb
out
insl
in
add
sbb
and
lea
mov
mov
ret
xor
add
mov
pop
outsb
pusha
insb
sbb
leave
sbb
sub
jne
shll
imul
push
shl
jne
and
xchg
scas
mov
sub
pusha
sarl
jne
int3
adc
nop
mov
rcrb
mov
int
outsl
aaa
xchg
fisubrl
mov
popa
and
xchg
xchg
je
mov
lea
aaa
mov
mov
mov
sbb
add
into
sub
imulb
mov
inc
xchg
ja
xchg
pop
out
fstl
sub
ljmp
movsl
cmpsl
jecxz
leave
jno
std
or
aad
push
orb
sbb
int3
shrb
movsb
loopne
sti
lods
fiadds
xor
enter
ljmp
shr
mov
lret
jnp
clc
pop
or
das
jge
out
std
xlat
aas
insb
andl
in
scas
mov
xchg
or
fwait
xchg
xchg
das
inc
push
sub
mov
jge
das
sbb
ljmp
inc
adc
lcall
mov
jmp
fstl
push
xchg
in
dec
imul
aam
sub
cli
mov
ret
jp
nop
or
adc
mov
insl
lret
shlb
lds
ds
jge
je
dec
es
arpl
sbb
imul
addr16
enter
popa
sbb
aas
add
push
adcl
test
sbbl
push
into
idivb
cltd
sahf
add
sbb
jp
mov
scas
push
leave
add
cmp
jae
mov
movsb
xchg
pop
cs
xchg
testl
mov
dec
xchg
push
call
mov
xor
push
repnz
pop
jmp
jle
sar
gs
sbb
aam
lods
add
addr16
mov
or
call
push
inc
add
scas
pop
out
stos
movd
mov
push
mov
jne
xchg
adc
add
idivb
mov
or
hlt
stos
sti
adc
rcl
call
lock
or
ret
popf
push
push
jge
lods
testl
mov
loope
ja
inc
xor
push
xor
loop
ja
inc
je
sbb
daa
pop
stc
mov
cs
dec
je
sbb
mov
jg
negl
clc
bound
or
add
ds
insl
jle
xor
inc
mov
or
push
mov
mov
push
jge
rclb
sub
adc
jp
mov
mov
clc
es
mov
fwait
lods
sbb
adc
or
pop
dec
or
ljmp
xchg
mov
sub
lcall
int3
leave
mov
push
pushf
les
and
inc
xchg
add
and
mov
lods
clc
bound
divl
push
mov
ror
fsubrl
push
jp
outsb
xchg
mov
mov
xchg
mov
or
cli
inc
pop
jp
clc
daa
je
insb
xor
push
xor
cmp
fldcw
jle
int
jp
lea
bt
mov
xor
rcl
sub
daa
and
push
inc
movsbl
shl
pushf
mov
shl
movzbl
push
mov
shl
push
bsf
btr
dec
mov
pusha
clc
stc
pusha
test
jmp
ror
inc
not
mov
cmc
clc
cmp
push
and
clc
bt
add
movb
pusha
pusha
movw
lea
jmp
and
mov
ljmp
push
scas
pushf
cli
insb
xor
hlt
adc
je
push
iret
and
sbb
push
mov
daa
jae
out
sti
xor
je
inc
sbb
or
out
mov
lock
xor
jae
pop
jb
pop
mov
and
add
adc
fs
pop
rorb
hlt
push
sub
lds
adc
add
rolb
orl
movsl
int3
pusha
pusha
movl
movb
pushl
lea
jmp
aam
dec
lret
adc
add
sti
ljmp
jne
cmpl
mov
pop
les
insl
clc
dec
and
mov
sbb
stc
iret
xor
ret
or
lds
in
jg
inc
dec
dec
adc
stos
adc
int3
mov
xchg
test
and
jbe
fcoms
push
nop
or
enter
outsl
inc
ficomps
xchg
sub
xchg
push
fildll
mov
nop
cltd
and
jp
mov
jno
cwtl
pop
sbb
xchg
mov
mov
xor
push
xor
sub
js
jb
sub
xchg
rcrl
cmp
pop
cmpsb
or
jle
sub
push
cmp
aad
inc
scas
or
push
inc
adc
cmp
xor
rcrl
push
int3
push
mov
loope
cmp
stos
jl
jo
ret
cmp
shll
sub
pushf
hlt
adc
les
cmp
int3
sbb
jle
push
sti
pop
adc
outsb
jns
in
xor
jg
push
pop
lods
fstp
xor
and
pusha
cmp
pop
mov
mov
popa
and
mov
daa
fcmovbe
sbb
mov
pushf
cmp
je
daa
and
sbb
pop
js
push
cmc
shrl
inc
movsb
cltd
inc
jne
out
ret
imul
jne
or
loopne
outsl
xor
ljmp
fimuls
dec
cmpsl
daa
cltd
negb
dec
push
loopne
pop
bound
mov
mov
push
push
cli
jle
dec
cli
call
stos
and
xor
inc
push
iret
in
dec
sub
jl
cmp
fwait
dec
test
punpcklwd
lcall
fcmovnu
jecxz
jnp
ret
sbb
mov
outsl
das
cmp
sub
jno
pushf
stc
in
push
out
push
dec
loopne
inc
sub
mov
sbb
sbb
outsb
inc
mov
push
in
sahf
pop
shrl
adc
dec
stc
push
pop
pop
push
mov
adc
add
dec
dec
pop
inc
xchg
out
dec
ficoms
orb
pop
into
mov
call
cmp
inc
lods
icebp
scas
pop
push
jl
fisubs
test
xor
fs
and
mov
pop
sbb
xchg
dec
fs
pop
testl
push
mov
xlat
mov
aad
mov
sub
dec
into
data16
lret
cld
dec
sbb
pop
dec
push
xchg
aam
dec
outsl
mov
scas
cltd
imul
mov
dec
dec
add
push
daa
loopne
pop
dec
inc
push
jns
add
inc
lret
hlt
pop
repnz
test
sbb
cwtl
in
repnz
mov
adc
adc
dec
jmp
ja
fsubrl
frstor
push
lods
pop
imul
test
addr16
call
inc
daa
int
orl
sbb
push
mov
sarb
imul
cltd
add
dec
sub
push
push
daa
lods
xor
stos
push
mov
es
arpl
mov
mov
pushf
pop
push
hlt
inc
int
pop
push
lret
push
sub
ror
push
ja
imul
ret
dec
or
inc
jbe
xlat
pop
or
xchg
into
in
ljmp
push
or
lcall
mov
cmp
jno
xor
scas
xchg
enter
sub
mov
push
mov
shrl
sub
push
inc
into
and
dec
mov
in
push
push
cmpsl
lock
inc
gs
rol
xchg
dec
dec
or
mov
mov
jg
test
push
inc
xor
pop
sbb
jb
call
sub
ljmp
jns
add
jo
lods
sub
pop
popf
push
inc
test
pop
sahf
dec
pop
mov
scas
movsl
fwait
pop
dec
cmp
sbb
addr16
call
cmp
jl
sub
jecxz
mov
push
stos
dec
aas
push
in
dec
hlt
call
xchg
movsl
dec
sbb
and
cmp
cmp
frstor
or
mov
jmp
adc
pop
sbb
pop
mov
lcall
pop
and
in
jmp
add
shll
dec
dec
sahf
ja
pop
inc
xor
add
dec
out
es
cmp
enter
lock
pusha
sub
int
rcrb
and
scas
das
hlt
dec
and
dec
adcb
movsb
ret
ss
or
or
push
shlb
push
sub
jne
call
clc
add
mov
pop
pop
scas
mov
aas
test
loope
mov
cwtl
gs
iret
dec
xchg
ljmp
lahf
mov
insb
dec
add
or
popa
call
subl
dec
dec
inc
sbb
ficompl
leave
dec
sahf
fucomp
inc
xchg
pop
xchg
mov
mulb
pop
xchg
test
cmp
xchg
push
xlat
xchg
dec
sahf
dec
push
dec
sub
mov
mul
dec
arpl
dec
cwtl
inc
inc
sub
addr16
das
push
pop
pop
jg
int3
enter
adc
adc
cmp
xchg
pop
push
xchg
sub
cmp
fs
sub
test
pop
xor
pusha
arpl
pop
sub
mov
add
dec
test
adc
lods
mov
cwtl
or
iret
add
sub
push
pop
xchg
insb
ret
pop
jmp
aas
cmp
sub
fmull
lds
sub
and
enter
sub
xor
test
and
push
pop
leave
out
ljmp
dec
ss
mov
xorl
dec
mov
negb
and
mov
mov
ficompl
dec
fisttpl
ja
mov
andl
arpl
mov
jmp
and
cmp
dec
daa
iret
insl
enter
sub
dec
icebp
scas
repnz
int
pop
movsl
push
add
mov
daa
popa
dec
repz
cmp
inc
rcll
dec
test
sub
call
jnp
or
adc
mov
dec
cmp
je
das
fistl
mov
and
sarb
hlt
rorl
addr16
std
push
ss
xor
dec
fbld
kunpckwd
adc
push
ret
cmp
dec
dec
sub
imul
stos
push
and
and
mov
fidivrs
shll
or
out
repz
bound
in
mov
sub
sub
pusha
popf
push
lret
arpl
ja
jge
es
cmpsb
or
testb
mov
cld
repnz
rorl
out
pop
psubd
push
and
mov
hlt
lea
repz
pop
sub
adc
add
mov
mov
test
lret
pop
and
icebp
aas
jp
fisttpll
setb
dec
mov
push
ja
dec
sub
jmp
out
test
icebp
mov
insb
jnp
add
and
mov
pop
push
pop
sarb
cmp
bound
pop
sub
icebp
inc
push
es
ljmp
dec
iret
push
shr
or
mov
mov
loopnew
dec
push
fisttpll
ja
xchg
imul
mov
push
sbb
stos
add
sbb
or
dec
mov
pop
insb
das
push
adc
dec
and
sub
dec
in
push
jno
aaa
stos
mov
lock
stc
inc
dec
mov
cmpsl
adc
inc
pop
lds
enter
push
mov
xchg
bound
push
loope
dec
ljmp
xor
push
dec
dec
pop
andb
aas
loope
sahf
push
dec
sub
aad
inc
in
sub
nop
dec
push
jo
fstl
mov
inc
pop
cmp
fdivrl
mov
inc
pop
cmp
sbb
sti
fstpt
mov
inc
pop
cmp
pop
sbb
cli
fidivrl
mov
inc
pop
cmp
pop
sbb
stc
fnstcw
mov
inc
pop
cmp
pop
sbb
clc
fdivrs
mov
inc
pop
cmp
pop
sbb
not
cmp
inc
mov
xchg
pop
mov
das
insl
stc
sbb
lret
cmp
add
mov
inc
cmp
jns
push
ret
cmp
inc
imul
sub
pop
inc
ret
cmp
inc
fidivrl
fadds
push
ret
cmp
or
int3
ret
dec
cmp
pop
add
popa
cmp
fcmovnb
stc
inc
cmp
sub
frstor
pop
and
mov
loop
lret
pop
jb
sarb
gs
in
loopne
mov
jnp
fmull
mov
lods
outsl
addr16
fisttpll
popf
fisubs
xchg
pop
les
inc
test
sbb
xchg
call
inc
popa
sahf
mov
mov
pushf
ret
lock
sahf
xchg
pusha
sub
inc
bound
clc
enter
cmp
mov
enter
and
and
out
pushf
pop
pop
push
and
arpl
add
pop
and
push
sarb
sub
mov
outsl
add
adc
jbe
xchg
inc
std
add
cmpl
sub
ret
dec
pop
incl
and
shlb
leave
lods
pop
push
subl
rcrb
mov
jmp
rcrl
and
mov
xchg
xor
pop
cmp
pop
jecxz
push
sub
push
inc
in
insb
insb
mov
mov
insb
jle
and
mov
fildl
mov
add
ret
add
or
pop
cmp
mov
jge
lcall
lret
push
sub
rorb
or
xchg
shrl
mov
in
sub
pop
mov
icebp
cmp
pop
repz
adc
stos
dec
and
shrb
ficoms
sbb
jmp
nop
out
xchg
ret
pushf
lret
movsb
loopne
loop
mov
lcall
loopne
subb
fwait
notb
add
add
mov
iret
mov
loopne
pop
mov
mov
or
jge
std
sbb
ret
leave
and
stos
hlt
daa
xchg
add
push
dec
ficomps
and
pushf
sub
mov
into
iret
inc
push
cmpsl
cltd
add
adc
and
pop
fiadds
sahf
add
inc
and
in
in
test
pop
xchg
les
fs
movsb
dec
jno
mov
ljmp
jae
jae
inc
push
sahf
adc
pop
aas
push
fiadds
dec
pop
mov
ds
sub
inc
dec
jle
push
dec
cmp
dec
sub
mov
es
sub
and
aas
sbb
push
daa
fnstcw
and
test
and
inc
leave
dec
push
fsubrl
repz
rclb
pop
xor
dec
enter
dec
loop
jae
pop
push
xor
bound
cmpsl
pop
jbe
push
fsub
inc
dec
push
shr
int
or
sub
jmp
inc
mov
dec
mov
lret
inc
push
dec
sub
and
push
dec
test
lods
dec
out
rcl
add
pop
or
test
pop
or
aam
jae
adc
jl
xrelease
cs
dec
lods
shr
mov
pop
pop
rolb
enter
fsubrs
mov
in
jg
in
adc
inc
mov
jmp
fsts
subb
lret
lea
sbb
shr
xor
or
sbb
xrelease
jecxz
mov
inc
iret
subb
stos
cmpsb
loopne
enter
push
flds
dec
adc
xor
cs
loopne
mov
pop
pop
adc
adc
push
aam
mov
add
dec
jl
sub
mov
xor
sbb
out
pop
cs
inc
sub
lods
dec
push
ret
leave
aas
daa
pop
shrb
inc
or
in
sub
push
mov
dec
pop
push
and
das
adc
jb
xchg
jne
adc
addr16
jae
xchg
int3
mov
adc
jno
je
jl
test
jge
mov
pop
add
jb
lods
dec
in
jp
inc
mov
push
addl
pushf
adc
xchg
cmp
adc
sub
rep
dec
jl
mulb
mov
aam
jmp
push
loopne
xor
sbb
mov
mov
dec
jp
popf
enter
je
push
jp
pop
push
ficomps
pop
das
mov
hlt
mov
aaa
imul
push
wrmsr
jo
cmp
imul
push
xor
mov
pop
inc
jno
hlt
jb
sbb
xor
inc
movsl
sub
loope
dec
mov
dec
loop
cmp
sub
aas
cmp
fisubrl
lret
sub
stos
or
cmc
je
nop
movsl
xor
in
cmp
cs
adc
adc
or
pop
daa
imul
psrad
mov
loopne
cmp
mov
ret
ds
pop
mov
pusha
loope
cmpl
gs
push
lods
mov
in
mov
call
call
outsl
or
and
cmpsl
push
leave
enter
jp
sahf
xchg
cmpsl
mov
mov
inc
cmc
fisttpll
add
pop
outsl
gs
and
or
adc
jl
aaa
cwtl
movsb
ret
filds
xor
fdivl
push
jo
push
mov
sbb
push
pop
jle
adc
mov
insb
xor
pop
outsb
shlb
mov
bnd
pcmpeqb
push
dec
hlt
aad
rcll
and
push
repnz
pop
xor
shll
leave
push
and
and
mov
stos
adc
xchg
jbe
push
push
lods
roll
or
push
xchg
into
icebp
lret
lea
or
aaa
pop
fcoml
sbb
dec
adc
push
adc
jl
pop
jnp
mov
insb
in
push
pop
aam
adc
in
mov
adc
not
inc
or
in
xchg
ds
pop
dec
test
notb
cmp
add
popf
inc
push
ds
xor
mov
stos
hlt
rcll
push
xchg
adc
fidivrs
xor
daa
add
xor
adc
les
push
iret
push
push
sbb
add
adc
int
xchg
imul
xor
loop
hlt
divl
lret
cld
dec
cmp
and
sub
push
aas
mov
inc
dec
push
xor
xor
sub
push
push
out
pushf
jb
mov
add
lea
dec
xchg
sbb
in
dec
inc
jns
inc
xchg
pop
scas
call
add
xchg
xor
or
xor
mov
xor
leave
stos
rclb
aad
pop
push
cli
outsl
push
or
sarb
shlb
mov
push
not
ret
inc
adc
adc
xor
sub
iret
xchg
outsl
sbb
mov
daa
cmp
aam
enter
repnz
rolb
es
xchg
outsl
bound
inc
xchg
xor
pop
repz
adc
pop
xchg
mov
ds
dec
movsb
int3
cmp
je
aaa
aad
movsb
push
enter
adc
sub
jb
into
adc
mov
push
fiadds
push
xor
stos
mov
mov
inc
jns
pop
and
or
dec
add
or
push
push
dec
in
mov
push
adc
mov
movsb
cs
or
loop
inc
adc
xor
push
rcrb
xchg
iret
into
dec
pop
mov
or
cmpsb
scas
ret
aas
inc
orl
pop
mov
mov
mov
pop
add
inc
pop
mov
inc
or
fucom
pop
mov
inc
mov
adc
ret
orb
insl
andb
stc
xlat
mov
mov
cmp
adc
xlat
jo
pop
stc
popf
dec
inc
jp
jns
cld
mov
cli
enter
mov
ds
xchg
sbb
std
jl
add
addl
popf
fwait
jg
jo
fbstp
push
fiadds
insb
js
ret
hlt
cmpsl
loopne
inc
lds
jmp
ljmp
test
push
pushf
cmpsb
inc
pop
aas
mov
mov
sti
push
pop
sar
pop
xor
rcl
aaa
mov
pop
test
in
in
jno
paddsb
pusha
jmp
sub
pop
js
sbb
mov
mov
aaa
movl
ret
mov
fidivrs
fdivrl
sti
sub
lcall
mov
es
sub
loopne
test
and
in
test
fs
ja
lds
or
jmp
outsl
and
outsl
insb
jg
imul
lock
test
inc
and
add
ret
fcomps
xor
push
dec
loope
aas
mov
fidivrs
ds
std
fnstsw
cmp
pushf
jl
cmp
inc
andl
and
loope
mov
and
loopne
mov
and
lds
cmp
inc
ret
loope
pop
leave
sub
fxch
sub
or
mov
or
and
adc
sub
sub
fmuls
rcrb
cld
inc
pop
out
in
pop
push
sbb
in
neg
inc
cld
lods
or
xchg
in
imul
test
cmp
popa
lods
clc
fldenv
xchg
mov
addr16
dec
ja
inc
cli
fcmovnu
loop
sbbl
sbb
inc
bound
inc
mov
stos
mov
xor
adc
push
add
cmp
mov
cmp
rolb
lret
jl
sub
or
inc
xor
mov
jmp
pop
in
shl
xor
jmp
inc
xor
pop
les
in
in
ljmp
flds
pop
or
pop
loopne
shlb
add
add
clc
mov
lretw
into
add
dec
mov
andl
aas
sbb
pop
and
aas
jb
fdivrp
or
test
add
mov
leave
cli
inc
pop
dec
push
dec
push
dec
add
dec
push
out
in
jecxz
adc
shrl
sub
dec
and
jecxz
pop
pop
inc
inc
pop
fldl
andb
push
mov
and
in
adc
sti
es
xchg
jg
inc
and
imul
jmp
mov
pop
push
inc
or
repnz
dec
sub
xor
sarl
push
mov
dec
jge
es
test
loop
in
mov
sahf
sub
and
fmulp
std
jp
mov
fstpl
pop
or
ljmp
shl
sbb
stos
sbb
mov
dec
inc
mov
fsubr
iret
jmp
lods
pop
mov
cmpsb
fisubrl
mov
mov
testb
dec
dec
push
cmpsl
push
xor
push
rcr
dec
pop
stc
inc
out
xchg
aad
xor
inc
ljmp
jb
fcompl
jmp
aaa
int3
add
rcr
es
ret
icebp
orb
or
mov
andl
enter
fdivrp
test
or
push
cmp
xor
das
push
mov
mov
dec
pop
cmp
ret
fadds
pop
inc
lret
imul
push
lcall
mov
dec
mov
push
mov
push
fdivs
out
lcall
pop
push
jle
fldenv
imul
ret
push
repnz
stos
pop
mov
mov
pop
adc
sbb
xchg
inc
mov
xor
or
mov
rolb
in
push
dec
add
mov
dec
sbb
scas
mov
leave
pop
sbb
ljmp
dec
cmp
inc
ret
aaa
sub
sub
mov
and
ret
aas
jl
fsubrs
dec
add
cmp
xlat
pop
xor
mov
add
cs
sub
notl
jns
or
paddw
xchg
outsl
cmp
in
test
or
fdivrp
movsb
dec
pop
jae
pop
lcall
dec
aaa
lret
or
cltd
jns
pop
jecxz
mov
inc
movsl
fcoms
push
icebp
mov
or
imul
sub
leave
imul
pop
jmp
adc
push
aam
stc
dec
xor
mov
jge
cld
loop
mov
add
mov
sub
or
aaa
mov
insl
arpl
jbe
push
dec
dec
sub
stos
add
call
sbb
push
pop
fdivrl
shl
les
in
in
test
movb
xor
cmp
ljmp
push
faddp
fscale
test
xchg
daa
mov
das
rcr
std
xor
mov
cld
sbb
pop
pop
mov
jge
mov
nop
add
imul
mov
push
data16
inc
and
test
outsl
sar
imul
xor
stos
movsb
mov
hlt
ss
in
into
in
int
or
test
into
dec
and
int3
sbb
mov
push
fs
add
jecxz
ret
cmpsb
mov
andl
and
xor
imul
push
aaa
xor
inc
dec
inc
cmp
sti
xchg
jbe
xchg
inc
jne
rcrl
or
mov
jo
in
push
mov
dec
lds
sub
test
sub
shrb
daa
ret
inc
orl
icebp
test
ljmp
stos
push
inc
and
lods
shrb
cmp
leave
cmpsb
and
aad
loopne
lret
loope
adc
xor
fisttps
lcall
inc
adc
push
lret
shlb
mov
sahf
add
pop
inc
cmp
or
sub
or
imul
inc
inc
rorb
and
outsb
sub
fadds
adc
jnp
add
xor
aam
mov
subb
push
inc
call
shrb
bound
pushf
jecxz
cmpsl
dec
insb
stc
out
push
xchg
mov
fistpl
jl
outsb
dec
jecxz
push
decb
pop
pop
pop
jb
sub
fisubs
push
aam
imul
ret
loope
hlt
je
jle
dec
addr16
push
jmp
lret
addr16
call
cltd
xor
flds
cmpl
ret
jmp
push
add
lds
fmul
mov
add
or
arpl
inc
daa
dec
xchg
inc
pop
dec
ljmp
enter
pusha
jle
leave
loope
loopne
pop
xchg
xchg
movl
imul
mov
or
xor
dec
cmp
les
lcall
inc
or
adc
addr16
inc
adc
rcrb
sbb
lods
in
hlt
cmp
cltd
js
jmp
sbb
ljmp
inc
ljmp
mov
dec
sub
cli
gs
dec
xchg
pop
dec
add
inc
sti
cmpsb
mov
sub
divb
enter
ret
js
ljmp
xlat
dec
push
inc
cli
insb
repnz
cmp
es
outsb
mov
sarb
sbb
xchg
pop
sub
popf
xchg
sbb
sub
jnp
fnstenv
out
mov
shll
pop
xor
dec
roll
jle
dec
notl
inc
xor
sub
add
jecxz
and
fnclex
cli
sub
mov
add
inc
or
xor
loop
and
out
or
and
inc
pop
inc
add
es
inc
jp
imul
out
cmp
cmp
sarl
ds
dec
scas
xchg
dec
sub
mov
mov
je
jmp
jo
mov
pop
xchg
mov
pop
push
in
lea
mov
mov
imul
cs
int3
cltd
push
insl
xor
xchg
outsl
mov
pop
lds
cmp
cmp
shl
mov
mov
inc
xor
lahf
unpcklps
push
das
and
cs
enter
fildl
jno
pop
pop
sbb
fdivr
mov
pop
pop
dec
and
mov
inc
scas
pop
fwait
sbb
int
pop
aam
inc
mov
inc
adc
sub
mov
inc
pop
or
and
add
cltd
cs
cmp
das
push
xor
movb
sub
inc
shl
push
xchg
mov
add
sbb
inc
and
push
push
pop
dec
aad
xor
lcall
mov
inc
sub
ret
jmp
pop
pop
imul
ds
es
mov
inc
xchg
jbe
inc
fcmovnb
inc
sbb
and
lret
jl
mov
es
xor
lahf
pop
push
xor
adc
dec
cmpsl
dec
push
xor
xchg
je
testb
xchg
jbe
ss
lret
mov
jne
sub
not
mov
xchg
ja
push
leave
aaa
pop
mov
jns
cmp
clc
fmuls
cmp
jnp
cmp
cli
fidivrl
pop
cmp
adc
loop
jl
sti
fcmovnb
mov
cwtl
movsl
sbbl
jg
aas
pop
nop
sbb
mov
dec
jecxz
mov
adc
lret
in
movsl
jmp
xchg
mov
pop
out
cmpsb
xchg
or
enter
push
out
mov
dec
sub
jmp
imul
dec
push
stos
mov
fwait
mov
inc
ja
inc
and
pop
or
ret
sub
push
lret
pop
jecxz
xor
inc
imul
call
sub
ret
rcl
popf
inc
dec
sar
lret
xchg
fisttpl
outsb
pushf
ss
or
int
sub
mov
push
pop
stos
outsb
int
repnz
repz
dec
pop
loop
jl
push
fwait
in
push
jecxz
mov
inc
pushf
xchg
pop
outsb
pop
mov
in
pop
aas
lea
fidivrl
dec
sbb
inc
xor
xlat
lret
dec
inc
ljmp
xchg
fwait
add
pop
cltd
cmpsb
inc
cmp
lret
jl
dec
pop
dec
jns
hlt
in
bnd
rcll
dec
imul
shl
sub
push
daa
ja
dec
mov
push
cli
and
mov
pop
push
mov
lret
xor
pop
sub
jl
shll
push
jecxz
je
sub
repz
out
jecxz
pop
pop
dec
push
lea
rcll
jle
imul
jp
xchg
enter
nop
pushf
push
push
cmc
out
pop
dec
int
mov
push
addr16
fsubrl
nop
adc
dec
and
out
push
daa
rorb
dec
mov
icebp
jecxz
out
pushf
cmp
xor
lret
jb
fiadds
push
jmp
inc
call
testl
sar
sahf
dec
fstpt
xchg
pop
mov
mov
out
fisubrs
std
jmp
or
imul
lds
dec
jnp
dec
arpl
dec
pop
imul
sub
stc
lret
mov
push
roll
mov
out
inc
dec
testb
dec
cmovp
into
shrl
adc
mov
sbbl
inc
mov
inc
sub
shrl
js
call
dec
cmp
cwtl
inc
orb
out
push
fucomp
push
jns
in
push
std
cmp
mov
sti
pop
in
mov
push
lahf
inc
cmpsb
ljmp
insl
xor
je
stos
outsb
sbb
add
in
pop
and
sub
xchg
jle
or
gs
enter
dec
imul
xchg
jb
jmp
xor
and
sub
cmc
stc
push
imul
and
inc
ds
int3
fdivp
mov
jp
scas
or
mov
inc
pop
sar
dec
in
aaa
mov
lret
pop
addb
mov
sbb
mov
stc
test
test
pop
inc
dec
repnz
push
neg
xor
in
je
or
ljmp
ret
jae
add
mov
int
in
inc
movsl
lock
adc
pop
and
and
aad
dec
cmp
dec
pop
lahf
pop
sar
push
push
sbb
dec
jo
dec
imull
xchg
pop
cmp
inc
xchg
les
decl
loop
inc
test
push
iret
push
inc
sub
inc
mov
leave
mov
mov
data16
cmpsl
ljmp
dec
test
dec
cmp
mov
jbe
pop
xor
sub
ret
shrl
mov
add
dec
enter
pop
daa
leave
or
imul
mov
hlt
pop
into
push
pushf
out
jnp
cmovnp
pop
lret
stc
pop
shl
std
push
outsl
mov
dec
and
inc
cmp
dec
inc
jo
clc
inc
dec
repnz
pop
adc
sub
pop
scas
insb
sbb
jno
jo
or
lea
mov
dec
mov
and
inc
jp
outsb
cs
imul
jnp
push
scas
jo
push
jmp
cmpsl
add
bswap
or
xor
mov
push
push
jge
call
or
pop
faddl
pop
out
dec
xchg
cmp
and
enter
mov
cmpsl
in
cmp
push
fninit
aam
dec
inc
sbb
dec
push
inc
mov
shrb
pop
inc
sbb
mov
dec
jmp
mov
stos
fld
or
lcall
push
and
pop
stos
or
inc
push
jmp
or
adcb
mov
lock
out
mov
ret
ljmp
sbb
push
mov
inc
pop
push
pop
out
dec
cmp
pushf
scas
cmpsl
sub
rcr
cmp
dec
lcall
das
or
push
jno
mov
push
inc
pop
mov
repz
inc
push
lea
aam
or
mov
or
in
cmc
ret
push
and
adc
aam
out
inc
sbb
dec
inc
cwtl
scas
enter
leave
lods
xchg
aas
pop
jno
popf
adc
adc
dec
mov
adc
out
fisubl
sarb
pop
call
push
mov
cli
int
jnp
adc
fdivrl
dec
or
push
pop
insb
ss
test
dec
or
mov
cmp
adc
jmp
aam
enter
or
loopne
jno
push
or
daa
add
and
pop
dec
inc
and
cmpsb
jge
add
or
dec
ficoml
adc
mov
pop
inc
inc
xor
cwtl
push
mov
arpl
enter
dec
loop
add
jecxz
test
pop
inc
jge
sub
xchg
bnd
dec
fs
test
jmp
cmp
add
cmpsl
push
jge
sbb
jnp
movsb
mov
adc
addr16
jb
and
cmp
fsubl
mov
adc
push
cmp
pop
cli
fisubrs
inc
call
aas
aad
inc
mov
xchg
orb
daa
add
inc
inc
xchg
add
dec
mov
adc
push
ljmp
xchg
dec
cmc
push
inc
jg
cli
xchg
loopne
mov
loop
dec
and
pop
call
push
push
and
fwait
add
jecxz
jmp
ss
mov
pushf
cmp
in
and
outsb
out
sub
jnp
cli
inc
push
fwait
mov
push
or
lret
push
daa
in
ljmp
xor
jle
sbb
add
xlat
and
pop
jb
adc
xchg
daa
mov
add
and
ss
xor
cltd
or
xchg
popl
ja
pop
clc
pop
in
ffree
popf
addr16
repz
dec
addl
mov
inc
dec
xor
or
les
pop
lds
arpl
sub
in
sub
mov
pusha
push
add
data16
cli
or
mov
inc
mov
sti
mov
xlat
dec
cmp
dec
fld
cmp
inc
xchg
pop
cwtl
xchg
ds
jecxz
rolb
dec
inc
xor
xor
xchg
xchg
enter
icebp
pop
fmuls
das
es
push
ljmp
pop
mov
mov
jge
or
call
sbb
and
jl
fwait
test
fcoms
jbe
or
xchg
fwait
pop
sub
and
inc
push
mov
dec
push
dec
lea
pop
outsb
mov
sub
fcmovnbe
cltd
cmp
enter
mov
dec
xchg
cmpsb
xchg
addb
push
push
or
pop
push
mov
inc
pop
mov
pop
mov
jp
sbb
in
aaa
iret
mov
inc
loop
pop
sbb
ror
mov
dec
jb
sbb
dec
js
adc
sahf
sub
loop
inc
pushl
dec
and
pop
push
pop
and
int
push
pop
push
mov
shl
ljmp
enter
jp
ret
out
mov
sub
bound
dec
dec
jge
andl
out
stc
push
stos
xor
sub
xor
out
sub
sbb
movsb
jecxz
ljmp
fdivr
sub
and
movsl
add
add
inc
or
cvtdq2ps
inc
jge
test
push
inc
cmp
add
inc
or
inc
pop
inc
imul
aas
jmp
lds
mov
dec
jge
sub
repnz
mov
xlat
push
imul
sub
xchg
adc
pop
fimull
jmp
pushf
mov
leave
iret
jl
data16
call
and
movntq
data16
into
dec
loopne
dec
push
xlat
push
out
sub
pop
das
or
int3
xchg
add
and
fwait
cmp
mov
sbb
mov
cs
fnstcw
mov
or
pop
les
cwtl
cltd
lock
sub
sub
sbb
rorb
mov
or
push
verw
mov
sub
sbbb
lods
sub
or
leave
dec
or
movsl
push
test
test
pop
test
push
fisubrs
popa
fcmovnb
xor
pop
mov
xchg
mov
dec
das
sbbl
popa
data16
rolb
dec
popf
fsubrs
and
and
ja
das
sbb
sub
xor
pop
inc
sbb
dec
arpl
dec
adc
inc
push
repnz
cli
push
mov
arpl
and
imul
push
push
mov
xchg
push
loop
lret
xorb
mov
mov
lock
sub
xor
roll
sub
xchg
and
lea
repz
sahf
leave
pop
pop
sub
ret
shll
iret
sub
lret
inc
pushf
bound
adc
push
in
sub
xor
and
js
adc
push
inc
dec
inc
in
inc
das
aas
aaa
sub
sub
inc
dec
add
dec
fidivs
pop
inc
xchg
cmp
addr16
imul
and
aaa
dec
movsb
ror
mov
or
out
cmp
pop
or
test
cmpl
mov
cli
xchg
dec
ret
inc
xlat
fidivrl
pop
pop
pop
bound
testl
enter
inc
push
push
inc
sbb
dec
decl
mov
or
fisttpll
xor
dec
push
inc
dec
mov
ficompl
call
inc
inc
push
push
inc
imul
mov
mov
pop
and
sub
mov
and
sub
or
in
pop
inc
mov
shlb
pop
inc
out
test
adc
dec
dec
test
dec
aaa
pop
push
in
outsb
lret
push
ficoml
orl
es
subl
push
pusha
fadds
pop
jp
call
addr16
inc
je
push
je
jl
push
fs
inc
xor
push
lret
cmpsb
pop
inc
cmpsl
inc
stc
dec
jb
dec
or
dec
jl
pop
and
sub
dec
dec
sub
call
pop
inc
lock
pop
mov
push
xor
fildl
adc
sub
or
inc
aaa
sti
loop
dec
int
cmp
jo
push
and
push
sbb
enter
mov
fwait
and
jecxz
dec
inc
pusha
jo
pop
pop
and
or
rcrl
bound
enter
sub
aas
test
inc
pop
jo
loop
mov
xor
or
or
jnp
test
inc
out
cmp
pop
push
enter
pop
lret
roll
sbb
pop
iret
inc
push
dec
mov
dec
das
inc
jbe
xchg
scas
aaa
xchg
dec
jg
andnps
iret
das
dec
scas
dec
das
push
mov
ljmp
orl
bound
inc
sbb
fimuls
fstpt
sub
das
pop
fildll
inc
or
inc
ficoml
andl
inc
das
inc
scas
fsts
sub
pop
and
or
pop
jbe
push
test
pop
dec
dec
pop
arpl
inc
test
in
inc
dec
inc
pop
call
inc
pop
dec
bound
push
sub
inc
sub
sub
jb
inc
inc
mov
dec
in
sub
jns
pop
mov
es
in
push
sub
fldl
sub
popa
dec
scas
inc
adcl
lods
dec
inc
loop
or
int3
jae
fsubs
pop
sub
or
push
int
orb
dec
cmovno
push
out
cmp
dec
int
loop
or
dec
dec
fcmovnb
dec
dec
push
dec
lods
dec
pop
lods
jp
leave
mov
jbe
inc
add
popa
inc
adc
addr16
dec
dec
lret
inc
stos
dec
pop
stos
jp
push
stos
sub
mov
push
or
inc
jmp
dec
adc
or
push
jb
lret
inc
aaa
inc
or
inc
ljmp
dec
clc
popf
push
fmuls
dec
and
lret
ret
dec
dec
dec
loope
xchg
dec
lcall
dec
cmp
push
fisttpl
pop
mov
mov
cmpsl
pop
stc
or
bound
pop
mov
push
lret
inc
orb
pop
pop
pop
dec
andb
rcll
inc
imul
jp
pop
jge
dec
jecxz
pop
push
jbe
add
lret
dec
inc
es
cmp
sub
inc
mov
dec
dec
loopne
pop
rcpps
pop
lret
aas
loopne
dec
das
dec
incb
dec
xchg
jp
aas
xchg
sub
arpl
inc
jle
pop
call
mov
sub
arpl
daa
dec
dec
daa
mov
add
lret
push
dec
push
jbe
popf
or
pop
lret
daa
dec
and
dec
cs
and
pop
inc
dec
pop
jbe
incl
jmp
push
sbb
inc
add
mov
dec
das
dec
cmp
inc
cli
dec
fwait
inc
inc
pop
jnp
push
and
pop
pop
pop
fmuls
fiaddl
pop
inc
js
xchg
dec
push
mov
xchg
gs
movsb
inc
pop
aad
ret
shll
add
outsb
stc
mov
ret
shrl
in
movsb
mov
pop
jo
outsl
lret
cmp
jae
mov
enter
ficoml
xchg
and
sub
call
test
xchg
daa
or
ret
push
loop
push
shll
pushf
pop
add
push
push
push
bound
lea
mov
add
aam
inc
xchg
out
fdivrl
pop
pop
push
jne
fdivrs
je
xchg
dec
push
jge
stos
pop
inc
sbb
es
sahf
xchg
aas
push
sub
mov
push
inc
dec
pop
shl
and
jg
add
dec
cmpsl
dec
in
mov
aas
adc
stos
scas
adc
dec
dec
xchg
jnp
dec
rorl
dec
inc
int
inc
sub
and
pop
in
dec
sub
sub
ljmp
inc
push
sub
push
or
pop
sbb
xor
and
test
inc
and
fsubp
sub
jl
cmp
in
imul
and
mov
dec
out
pop
lret
dec
sbb
adc
loopne
imul
fxch
inc
andl
adc
and
rcrb
aam
dec
test
mov
lds
sub
inc
push
into
sub
adcl
pop
xchg
inc
inc
pushf
lds
dec
inc
add
inc
movsl
xor
dec
xor
push
inc
jb
dec
inc
lock
dec
adc
lret
ljmp
pop
rcrb
or
dec
xor
sub
lret
dec
or
negb
dec
fisttpll
inc
and
pop
repz
mov
or
pop
and
js
fdivrp
inc
push
ror
mov
repz
mov
mull
lds
xchg
jns
cmp
dec
adcb
out
and
xchg
loope
add
dec
dec
push
and
daa
sub
sub
dec
into
and
push
dec
xor
ljmp
pop
repnz
and
rolb
push
sub
sbb
inc
pop
fs
cmp
inc
dec
dec
dec
or
jge
faddp
dec
inc
int
lock
daa
and
jne
xchg
jmp
dec
call
pop
pusha
mov
lret
add
or
pop
rcll
out
pop
push
es
stc
add
les
dec
dec
aas
pusha
pop
aaa
dec
addb
push
mov
cmp
cs
cmp
dec
lret
cmp
imul
es
dec
mov
push
in
dec
loopne
lret
in
add
iret
dec
add
adc
pop
add
mov
std
dec
cli
dec
mov
dec
mov
xchg
pop
or
dec
inc
inc
les
dec
pop
inc
fcompl
and
push
sbb
or
mov
push
sub
out
dec
sahf
add
dec
dec
ret
lret
dec
dec
pop
pop
cmp
sub
sbb
dec
lds
push
iret
sahf
dec
and
sub
pop
gs
test
add
jp
aas
mov
sub
cmp
push
xchg
sbb
dec
push
ja
call
dec
xor
sub
lret
push
test
dec
mov
push
add
dec
aas
lock
call
dec
push
dec
loop
inc
sub
mov
or
outsb
inc
loop
push
sbb
mov
dec
sbb
mov
mov
inc
dec
dec
lods
in
dec
fiadds
dec
andl
xchg
pop
inc
xchg
std
dec
sub
inc
inc
jb
mov
sub
cmp
jle
sbb
mov
jl
inc
dec
inc
pushf
adcl
mov
cli
pop
mov
sbb
inc
fistl
cmpsl
pop
lret
loop
inc
mov
inc
jnp
inc
sub
inc
lods
jmp
sarl
and
in
pop
in
inc
inc
and
push
xchg
push
mov
mov
les
ja
or
rcr
dec
pop
sbb
pop
movsl
dec
mov
testl
loop
inc
dec
jp
loop
dec
inc
mov
addb
xchg
lret
inc
xchg
push
pop
icebp
xlat
push
inc
dec
lahf
jp
ss
pop
pop
adc
xchg
dec
mov
pop
fdivrl
pop
aas
push
cmp
andb
dec
pop
subl
adc
dec
adc
mov
pop
add
dec
mov
pop
adc
dec
and
inc
into
push
ret
inc
stc
sbb
adc
jp
rcr
loop
push
inc
adc
daa
pop
into
add
rolb
push
mov
loopne
inc
adc
loop
pop
inc
push
loop
aad
out
loop
dec
aas
nop
loop
dec
iret
pop
inc
sbb
push
sub
sub
jb
push
out
push
cmc
mov
mov
or
sahf
in
jnp
xor
push
jbe
sub
pushf
ret
pop
and
xor
lock
dec
cmp
jg
dec
mov
jbe
loope
xor
xor
int
xchg
ret
xor
aaa
imul
imul
dec
sti
enter
sbb
sub
cmpsb
mov
and
pop
mov
pop
adc
leave
sub
add
mov
cs
pop
push
inc
loop
cmovno
enter
es
or
xchg
push
mov
stc
sbb
lret
loopne
push
push
fists
call
int
and
inc
dec
rcll
push
inc
dec
inc
add
inc
dec
push
lea
insl
gs
fidivs
sub
push
into
sbb
or
negb
aas
dec
pop
dec
int
movsl
jmp
cmpsl
dec
pop
insb
sub
inc
dec
xlat
dec
pushf
inc
inc
stos
js
push
or
loope
test
jmp
iret
pop
fiaddl
loop
adc
loop
push
pop
jmp
loop
push
jmp
mov
fidivrs
push
mov
dec
rclb
in
dec
mov
fiaddl
mov
enter
dec
mov
imul
ret
dec
mov
mov
xor
ljmp
sub
mov
xchg
dec
inc
cmp
inc
cmpsl
ffreep
int
andl
dec
push
daa
mov
mov
sbb
popa
push
pop
push
xor
pop
aaa
pop
jle
jge
pop
push
cmpsb
ret
stos
xchg
pop
fs
pop
dec
xchg
leave
aas
adc
pop
add
mov
pop
add
dec
fildll
icebp
dec
xor
or
incl
loopne
sub
inc
or
or
jmp
inc
cmp
cmp
daa
pop
inc
ret
cmp
or
enter
mov
sub
cmp
push
cld
dec
inc
pop
sub
add
inc
cwtl
aam
imul
cmpsb
or
in
add
jecxz
les
movsl
push
push
xor
data16
sub
test
cmp
add
add
or
fadds
sti
inc
mov
mov
fisubrs
cmp
pop
xor
cmp
fcmovb
mov
cmp
dec
inc
push
pop
pop
add
push
inc
mov
ja
inc
add
dec
and
sub
daa
sti
leave
lret
cld
lcall
jae
mov
inc
xor
and
hlt
lret
test
xor
pop
dec
daa
jecxz
inc
repnz
leave
pop
out
rolb
fs
test
out
rorb
jae
cltd
sub
out
push
fnstcw
outsl
xchg
xchg
arpl
inc
xor
dec
adc
cmp
ljmp
mov
inc
jecxz
jbe
push
ds
cs
repz
jb
sbb
and
dec
lahf
cmc
sbb
pop
push
inc
dec
dec
leave
rol
lret
ljmp
push
imul
pop
rcr
cli
loop
cld
jns
popa
jae
inc
dec
dec
push
lds
iret
out
call
outsl
push
aas
pop
inc
aad
fst
mov
jne
jge
pop
dec
push
inc
dec
lret
int3
jmp
dec
jb
insb
pop
inc
push
pop
fimull
aam
stc
loope
sti
jp
bound
dec
dec
push
dec
into
enter
out
dec
outsb
push
inc
dec
shl
neg
jbe
jle
pusha
or
add
orl
dec
mov
stos
sbb
adc
xchg
fwait
cmp
xor
mov
pop
wbinvd
adc
daa
das
sub
movsl
dec
lods
cmpsl
scas
pop
lcall
add
aaa
pop
cmp
mov
mov
add
mov
test
dec
mov
lods
sbb
adc
lcall
xor
mov
push
push
or
xchg
mov
cmpsb
dec
scas
test
push
push
sbb
xchg
dec
sahf
cwtl
xorb
cmp
mov
mov
icebp
inc
dec
sar
sbb
mov
cli
int
in
lret
sub
inc
push
pop
adc
adc
dec
xchg
xlat
dec
push
push
mov
sub
cmp
dec
sti
repnz
inc
leave
cmc
sbbb
ljmp
adc
bound
lock
xor
dec
cmpsb
push
test
sahf
adc
and
decl
pop
dec
push
xchg
movsl
inc
mov
push
sub
pop
mov
cmpl
mov
xor
jo
adc
mov
inc
fists
push
aam
sub
and
decl
mov
and
sbb
lds
xchg
mov
and
cmp
sub
sbb
cmc
gs
bound
mov
dec
inc
dec
lods
jae
jp
push
and
jb
inc
adc
mov
cmp
out
xor
push
sarl
outsl
filds
mov
into
jecxz
cmpb
lahf
push
dec
add
sub
shlb
inc
xchg
addr16
fidivrl
cmp
sub
or
xor
inc
jge
pop
movsl
fsts
dec
pop
xchg
pop
and
stc
mov
ds
notl
or
jge
inc
jecxz
and
and
pop
jge
push
cmp
add
into
pop
jbe
adc
jp
faddl
inc
dec
add
fdivrl
inc
dec
sbbb
jbe
leave
addr16
cli
sbb
dec
dec
pop
pop
push
mov
inc
xor
movl
inc
and
lds
mov
push
pop
and
int3
enter
push
addl
fnstsw
mov
out
sbb
adc
dec
pop
xor
lds
cmp
mov
sbb
cmp
xor
fisttpl
lcall
icebp
pop
inc
bound
mov
dec
pop
addr16
mov
dec
and
daa
loope
cmp
adc
ljmp
fistpl
push
call
out
cmpl
push
popa
jnp
inc
sbb
sub
pop
pop
pop
push
inc
rcll
cmpsl
pop
push
pop
flds
test
pop
aas
ret
fists
push
push
sub
dec
xlat
inc
inc
inc
cld
add
dec
aas
push
and
dec
fimull
dec
mov
jg
push
leave
or
adc
add
int
sub
cwtl
xlat
insb
cmp
sbb
bound
leave
scas
inc
mov
xchg
call
dec
adc
push
inc
daa
pop
dec
mov
jge
inc
shrb
jae
fcoml
mov
inc
dec
pop
inc
fisubl
mov
mov
jl
stos
insb
dec
jb
dec
push
inc
inc
mov
push
loopne
daa
pop
popf
cld
aad
or
sahf
pop
inc
out
xor
xor
dec
cmp
dec
ret
iret
dec
mov
mov
pusha
popf
sbb
daa
inc
into
mov
in
pop
add
mov
int3
in
pushf
loop
or
lret
add
loope
aas
sub
and
in
push
movntq
lods
cmp
mov
jg
jl
test
loope
inc
or
fisttpl
test
sbb
stos
inc
dec
bound
pop
or
sub
test
aad
inc
sub
mov
cmp
mov
push
inc
push
xor
push
cmp
xor
cwtl
popf
gs
add
dec
into
lret
lret
ret
and
out
dec
sub
sahf
pop
popa
fstp
movsb
mov
ja
es
or
cld
leave
jg
jp,pt
pop
lahf
leavew
inc
mov
repz
or
daa
subl
lods
lea
mov
sbb
and
mov
cld
pop
fstpl
cmp
dec
loop
sub
jbe
inc
jae
test
pop
enter
fs
dec
loope
adc
xchg
xor
iret
movsb
andb
pop
mov
in
cwtl
inc
inc
out
sbb
cli
xchg
jle
and
lcall
bound
inc
dec
fmuls
mov
dec
lret
jne
insl
mov
daa
fiadds
popa
ljmp
dec
sbb
cmovns
stos
ds
loop
dec
jno
xlat
xlat
cld
daa
mov
mov
test
fst
cmp
pushf
push
mov
inc
inc
xchg
shll
sti
adc
dec
cmp
loop
and
repnz
cmp
sub
xor
add
mov
pop
popa
ret
gs
loope
es
ja
push
lahf
cld
js
popa
and
inc
sbb
fnstcw
outsl
cltd
xchg
push
test
xlat
pop
jb
pop
out
sbbl
cmp
jbe
mov
push
lock
add
mov
dec
lret
dec
adc
xor
cmp
into
jmp
shlb
dec
gs
dec
pop
sti
push
sbbb
jmp
inc
push
addr16
negb
add
add
inc
cmp
rorl
jnp
dec
cmp
jge
cmp
push
pop
cmp
mov
mov
sbb
mov
into
xor
sub
push
frstor
test
inc
daa
addr16
dec
and
push
cmp
sub
aas
cmp
mov
mov
jb
sar
icebp
cmpsl
pop
outsb
xor
aad
loop
fcmovu
mov
cmc
cmp
mov
xor
aad
cmp
mov
mov
push
dec
mov
dec
cmp
cmpsb
cmp
push
inc
jae
add
xchg
jg
jnp
fimuls
mov
adc
pop
push
xchg
dec
inc
testb
fwait
xlat
mov
insl
sub
jle
sub
xor
and
or
lret
push
xor
ds
dec
add
std
inc
cmp
jmp
pop
pusha
addb
addr16
xlat
incl
add
cmp
rol
leave
pop
push
push
insb
pop
cmp
movq
lret
cmp
xor
incb
into
and
repz
adc
or
cli
add
inc
and
in
push
dec
out
and
inc
es
fiaddl
in
sbb
nop
add
or
cmc
xchg
mov
jbe
adc
pop
add
leave
pop
push
xor
mov
xor
addr16
pop
push
iret
inc
inc
jae
sar
loope
orl
shll
xchg
pop
inc
mov
pop
xor
loop
add
popf
sbbl
popa
icebp
pop
nop
sub
mov
xor
jne
shlb
push
fimuls
popf
sub
pop
pop
mov
pop
hlt
cmp
test
and
jp
pop
pop
mov
mov
and
popf
imul
ds
mov
xor
rorb
add
jp
sub
lds
inc
sbb
enter
leave
inc
inc
fisttpl
dec
frstor
pop
hlt
inc
loop
dec
push
inc
dec
sub
inc
xchg
movb
pop
mov
inc
and
and
sbb
inc
add
imul
cmpsb
mov
test
jle
push
pop
inc
inc
cmpsb
stc
add
in
sub
movsb
fadds
push
add
inc
sub
inc
cmp
inc
cmp
inc
cmp
xor
inc
inc
and
jbe
inc
push
and
sbb
and
sub
lcall
inc
xor
ret
sbb
push
pop
mov
add
fsub
not
pop
and
ljmp
jecxz
rorl
dec
pop
enter
push
or
ja
fisubl
or
jge
ljmp
xor
jle
fidivrs
fimuls
fisttpll
loope
fisubrs
mov
xchg
and
rcrb
dec
pop
pop
out
gs
and
sbb
shlb
push
je
repz
orb
mov
dec
fdivrl
inc
mov
adc
add
stc
pop
pop
xchg
pop
mov
movsl
in
dec
ljmp
cmpsl
push
cmp
fs
sub
outsl
adc
xor
pop
inc
cmp
xor
andb
stc
mov
jle
sahf
xor
lret
or
test
adcl
roll
inc
cmp
rolb
sub
lret
rcll
mov
xor
and
jle
fldl
add
or
adc
in
loope
xchg
repz
pop
es
ds
jo
ds
ror
push
dec
repnz
sarb
add
xchg
imul
jge
sahf
inc
cmp
sub
pop
pop
dec
cltd
mov
icebp
sahf
jne
jmp
dec
dec
or
fisttpll
int3
data16
inc
dec
xchg
sub
inc
adcl
pop
leave
inc
in
ret
push
sub
push
call
ds
sub
clc
cwtl
jbe
inc
add
outsb
and
ljmp
popf
cmp
addr16
gs
imul
ret
jp
fistps
push
stos
int
sbb
lods
jmp
test
and
add
xchg
dec
daa
popf
mov
lds
aaa
push
cmpb
movb
jmp
inc
dec
rol
inc
mov
cmp
inc
dec
ret
les
inc
fsubs
js
ror
xorb
or
rcrb
ror
pop
notl
test
or
int
sub
loopne
dec
pop
pop
ret
inc
inc
sbb
inc
movb
pop
fisubrl
sub
leave
ficompl
enter
test
nop
pop
and
shll
inc
mov
jmp
loop
lods
cmpsb
out
ja
mov
out
les
sbbl
pushf
cmc
push
inc
fneni(8087
adc
xchg
or
imul
and
xchg
inc
add
movsl
inc
dec
pop
pop
fldl
int3
ds
cmc
test
and
inc
or
or
xchg
push
mov
repnz
pop
pop
inc
inc
sahf
sub
loope
ror
inc
jbe
nop
pop
or
sub
push
cltd
inc
pushf
ds
pop
or
adc
inc
les
sub
roll
and
out
cmp
dec
sbb
fdivrp
ja
daa
fidivrs
inc
sub
cltd
add
sbb
dec
or
fs
or
mov
std
inc
scas
popf
dec
loop
sbb
push
mov
inc
sbb
lea
xchg
xchg
fs
in
sbb
inc
mov
and
cmpb
lds
or
es
ret
lds
jns
cli
lods
addr16
cmpsb
mulb
lcall
loop
inc
adc
jp
adcb
jb
add
mov
rcrb
or
imul
rol
add
std
adc
pop
jge
fwait
sub
jbe
pop
cltd
shll
cld
imul
outsb
fimuls
je
cmc
xor
loope
add
sbb
mov
or
adc
addl
ljmp
fistl
cmp
push
inc
adc
push
sbbl
popf
sub
iret
pop
jo
cmp
pop
cmp
nop
jmp
inc
sbb
js
mov
fdivrp
inc
pop
arpl
dec
cltd
movsb
add
outsb
stos
push
lcall
arpl
adc
add
add
aam
add
mov
dec
push
xchg
jle
inc
dec
das
add
les
int
or
xchg
aad
dec
push
jecxz
dec
jle
sub
icebp
push
sarl
fadds
lock
iret
addb
subl
mov
inc
dec
or
mov
inc
push
pop
fsubl
ftst
inc
decl
inc
sub
adc
mov
lret
stos
sub
push
sub
dec
or
pusha
andl
push
fucomp
or
pop
outsl
ljmp
imul
dec
ficompl
lcall
imul
mov
jnp
adc
pop
leave
inc
xlat
mov
dec
gs
sbb
sub
cmpsb
sub
add
inc
and
arpl
andb
mov
testl
leave
cmp
je
mov
cmp
fcoms
cmpsb
lds
ljmp
inc
pop
and
rcrl
enter
push
je
add
mov
loope
sbb
adc
cs
aad
inc
mov
push
sub
scas
repnz
sub
dec
xchg
fimull
ret
dec
pop
pop
xchg
dec
xchg
movsl
inc
or
test
jb
sub
dec
test
inc
adc
push
cmpsl
sub
adc
cmpsb
push
adc
sahf
push
and
or
dec
repnz
ljmp
sub
dec
mov
pop
dec
aam
rcrl
inc
jecxz
daa
push
jg
push
push
shll
enter
dec
dec
dec
pop
jbe
ret
inc
pop
cmp
ret
enter
dec
adc
ja
sub
in
inc
pop
ret
enter
pushf
ret
imul
add
cmp
bound
pop
ret
enter
lret
inc
inc
cmp
aas
mov
cmp
push
addl
push
ret
enter
int
mov
stos
ret
enter
adc
mov
sub
inc
adc
or
pop
enter
inc
out
cmp
addr16
ret
inc
sub
xchg
inc
das
push
ja
cmp
fs
dec
inc
testl
mov
pop
inc
adc
push
scas
jno
ficoml
in
dec
inc
adc
sbb
daa
inc
xlat
mov
ror
enter
jno
fiaddl
es
sub
sub
ret
or
push
sbb
addr16
pop
frstor
loopne
enter
jecxz
es
push
sub
mov
inc
xchg
pop
dec
push
ret
enter
lret
push
add
push
shl
enter
sub
imul
fwait
out
xchg
push
ret
enter
pushf
mov
pop
xchg
inc
cmp
pop
ror
adcl
inc
aam
rorl
inc
jecxz
dec
dec
ja
sub
into
or
inc
enter
inc
daa
aas
jg
pop
push
shll
enter
int
mov
rorl
fistpl
dec
sub
out
push
dec
pop
xchg
sbb
enter
push
adc
push
lods
dec
mov
mov
cmp
push
addl
push
ret
enter
lret
mov
and
aaa
cmp
mov
aaa
jns
shl
enter
sbbl
aaa
push
pop
mov
push
ret
enter
xor
push
dec
or
ret
enter
out
pop
pop
inc
pop
jns
ret
enter
push
dec
pop
and
mov
pop
ljmp
pop
enter
push
pop
push
hlt
inc
and
inc
inc
ret
enter
xor
fiaddl
cmp
ret
enter
push
inc
bound
ret
enter
addr16
jmp
sub
push
adc
mov
mov
test
dec
in
fiaddl
cmp
roll
mov
pop
jg
pop
push
shll
enter
dec
fwait
mov
mov
push
ret
enter
fwait
add
ret
aad
pop
inc
mov
ret
enter
pushf
mov
pop
mov
push
ret
enter
jno
pop
mov
sbb
loopne
sbb
dec
mov
push
pushf
ret
bound
enter
adc
inc
inc
adc
shl
inc
enter
jns
pop
xchg
mov
push
enter
xor
sbb
inc
aam
ret
jle
xor
cmp
xchg
sub
xchg
pop
xor
enter
dec
pop
jbe
mov
mov
cmp
push
addl
push
ret
enter
int
adcb
push
xchg
inc
xchg
enter
bound
push
sbb
pop
xchg
inc
cmp
pop
ror
sub
push
pop
push
inc
shl
push
push
int
push
xchg
enter
dec
pushf
dec
ss
dec
ss
shl
enter
jecxz
les
pop
adc
pop
enter
pop
add
cmp
fs
test
inc
aam
ret
incl
ja
dec
dec
rorl
push
pop
ret
es
enter
lret
mov
jns
inc
cmp
pop
pop
cmp
addr16
inc
pop
sbb
inc
dec
leave
enter
dec
daa
inc
mov
add
sahf
add
push
dec
bound
inc
dec
xor
push
xchg
dec
out
cmc
xchg
cmp
pop
push
cmc
jns
pop
cmp
cmp
cltd
add
dec
pop
xchg
dec
pop
push
dec
aad
int
in
sbb
aad
iret
loopne
inc
vcvtps2ph
cmp
inc
into
ljmp
rorl
inc
cmpsl
pop
daa
rolb
enter
vpsubd
dec
aad
iret
pop
jno
mov
jp
mov
sbb
pop
mov
push
jge
dec
cmp
inc
jo
mov
punpckldq
dec
inc
aad
sbb
xorb
pop
roll
inc
out
pop
aas
ficomps
divb
xor
pop
sub
add
bound
jmp
sbb
sub
and
dec
mov
inc
incb
pop
dec
ret
cmp
enter
xorb
cwtl
inc
addb
xchg
adcb
clc
inc
push
mov
dec
jge
inc
xchg
push
inc
inc
inc
inc
push
mov
cmpsb
inc
std
inc
pop
pop
cmp
pop
cltd
add
push
pop
bound
leave
adcb
push
out
rorl
ret
cmp
lret
out
cmp
sub
push
sub
movsl
adc
loop
inc
dec
xor
inc
pop
and
push
inc
pop
sub
inc
push
enter
call
push
xor
dec
rclb
es
inc
fsubrs
dec
mov
fcomps
inc
pop
mov
out
adc
push
fcomps
pop
adc
bound
push
inc
aad
sbb
pop
sbb
push
add
pop
mov
xchg
cld
dec
push
rcrb
repnz
dec
fcoms
inc
out
hlt
xchg
cld
sbb
push
push
fists
inc
cwtl
inc
pop
push
mov
fiadds
dec
pop
inc
xchg
sub
aam
bound
sti
inc
xor
inc
mov
cmp
rorl
ljmp
pop
inc
and
inc
out
cmp
popa
pop
out
pop
dec
js
pop
dec
fchs
inc
dec
pop
inc
ret
sbb
es
inc
fiadds
out
cmp
sbb
or
cmpsb
xchg
add
rorb
bound
push
mov
pop
push
punpckhbw
js
dec
dec
mov
daa
sahf
lods
jno
xchg
iret
sbb
xchg
dec
mov
pop
mov
fs
aas
or
or
sub
push
cmp
out
dec
cmp
out
call
mov
fiadds
sub
inc
and
dec
fiadds
mov
push
in
inc
and
std
xchg
inc
mov
mov
inc
pop
sbb
xlat
ret
mov
incl
cmp
rorl
bound
inc
fcoms
or
dec
jno
or
adcb
inc
adcb
and
or
cmp
dec
in
inc
mov
push
inc
xorb
cmp
imul
or
pop
inc
nop
loopne
push
outsl
in
and
pop
out
sbb
daa
dec
jge
xor
dec
add
and
or
dec
add
inc
sub
cmp
dec
cmp
lcall
ret
cmp
test
cmp
pop
imul
or
mov
pop
lret
call
inc
test
test
mov
ret
ret
cmp
inc
sub
cmp
pop
fadd
out
cmp
or
cmpsl
inc
xchg
cmp
adc
and
repz
or
push
dec
rolb
inc
popf
or
pop
mov
clc
pop
xchg
add
xchg
out
popf
out
xchg
out
pop
out
xchg
out
aam
xchg
out
push
out
out
int
xchg
dec
dec
xchg
jb
pop
jb
pop
jb
pop
jb
pop
jb
pop
jb
pop
jb
pop
jb
pop
jb
pop
jb
pop
jb
pop
jb
pop
jb
pop
jb
pop
jb
pop
adc
inc
mov
mov
pop
inc
ja
pop
push
xlat
pop
inc
push
shll
mov
dec
pop
inc
ja
xchg
dec
mov
inc
sub
shll
stos
ror
sbb
inc
or
test
add
dec
push
push
cmp
loope
dec
mov
adc
ja
inc
and
inc
adc
scas
pop
add
cvtps2pi
inc
nop
add
sarb
inc
push
sbb
dec
cwtl
pop
addb
lret
dec
into
std
inc
daa
inc
into
pop
jge
inc
into
push
jge
aas
cmp
pop
dec
ret
sub
popa
jnp
call
xor
fiaddl
popf
in
pop
cmp
pop
jae
inc
push
test
push
xchg
icebp
gs
inc
rcrb
xchg
dec
test
aaa
dec
jb
pop
jb
pop
jb
pop
jb
cmp
sub
pop
dec
int3
testl
aaa
fstps
pop
cmpsl
fnstcw
pop
movsl
lahf
aaa
dec
jns
sub
sub
sub
push
sub
inc
pop
inc
push
or
and
dec
aaa
pop
push
out
push
aaa
cmc
rcrb
xchg
sub
push
outsb
sarl
cmp
inc
out
cmp
rorb
xchg
dec
mov
sub
fs
inc
dec
xor
mov
xor
and
rorl
pop
pop
aam
cwtl
push
sbbb
push
and
out
cltd
ret
cmp
dec
test
test
dec
ret
inc
add
loope
inc
test
and
adc
pop
dec
push
pop
into
pop
inc
dec
push
inc
push
mov
push
push
cmp
or
cmp
xor
inc
xchg
push
movsl
dec
mov
jb
pop
jb
stc
xlat
dec
orb
inc
in
inc
lcall
sub
fs
pop
call
aad
mov
xchg
orb
push
xchg
push
orb
sub
rolb
shrb
inc
mov
dec
xor
inc
xchg
inc
mov
cmp
rorl
or
fisubl
sbb
cmp
push
mov
cmp
push
jp
out
cmp
inc
out
inc
xchg
xchg
push
pop
xor
adc
and
push
daa
cmp
sbb
or
add
std
pop
mov
mov
dec
xor
call
pop
xor
add
neg
dec
daa
mov
push
pop
dec
je
cmp
dec
notl
in
movaps
jb
cld
inc
fiaddl
popf
in
dec
cmp
in
scas
mov
dec
into
std
inc
es
inc
ficoms
inc
xor
dec
mov
push
sbb
cli
pop
jb
pop
rcl
fsubrl
pop
xor
inc
icebp
roll
push
mov
add
dec
cmp
dec
adcb
out
xchg
and
cmp
loope
out
cmp
imul
jp
inc
rcll
ret
cmp
call
movsl
push
push
test
lcall
cmp
inc
cmc
mov
push
je
fmuls
xor
sbb
rorl
fstps
dec
mov
cmp
test
dec
out
pop
inc
ss
dec
mov
inc
pop
push
pop
pop
dec
jle
stc
xlat
pop
sbbb
pop
and
popa
pop
out
cmp
loope
out
cmp
cmpsl
xchg
pop
dec
adc
pop
adc
ljmp
fmuls
inc
adc
push
mov
mov
add
push
or
gs
xchg
push
das
dec
icebp
dec
inc
sub
pop
inc
icebp
sub
dec
lret
pop
mov
push
pusha
movsb
push
stc
push
icebp
scas
push
ds
pop
mov
dec
dec
icebp
iret
xchg
inc
pop
dec
sarl
rcr
pop
inc
mov
aas
roll
pop
je
cmp
rorl
pop
adcb
inc
and
movl
cmc
xchg
dec
addb
cmp
pop
popa
pop
in
inc
and
or
pop
scas
push
lds
mov
xchg
push
adcb
aad
dec
addb
xchg
dec
xchg
cmp
cmp
imul
lret
inc
sub
push
les
push
aad
dec
cmp
adc
pop
sbb
decl
push
cmp
fwait
pop
andb
push
pop
sub
or
jge
xchg
dec
jb
pop
xchg
mov
inc
mov
aas
xchg
push
movsl
push
hlt
pop
rclb
jno
sub
or
pop
ret
and
dec
fisubrs
sbb
dec
mov
dec
imull
xor
dec
jb
dec
adc
dec
sub
push
jmp
andl
sub
data16
add
incb
sub
ret
cmp
out
ds
cmp
pop
cmpsb
ret
cmp
or
mov
pop
es
cmp
lds
roll
movsl
ret
cmp
or
lods
inc
inc
cmp
xchg
jne
xchg
and
inc
data16
dec
rcrb
in
dec
and
lahf
sub
cmp
dec
jp
dec
mov
dec
xor
dec
mov
dec
out
sub
insb
sub
ret
call
ret
gs
add
add
andb
rcrl
push
ret
stc
add
add
add
add
pop
xchg
dec
out
pop
push
push
jp
inc
and
or
pop
mov
cmp
fisttpll
cmpsl
bswap
dec
sbb
jno
or
aas
loope
out
cmp
imul
out
cmp
imul
out
sti
sbb
inc
xchg
dec
sarb
into
aas
sbb
pop
pop
pop
sub
hlt
negl
pop
cwtl
sar
aaa
sar
aad
pop
inc
je
dec
adc
push
sub
lea
lret
ret
imul
dec
cmp
and
out
and
out
jle
out
sbb
mov
pop
pop
mov
push
clc
mov
push
xchg
mov
push
ss
aas
rcrb
popf
sub
jns
mov
dec
pop
dec
js
dec
mov
jb
test
inc
aad
sbb
inc
cmp
filds
sub
test
dec
sbb
pop
lds
mov
ficomps
pop
shl
lds
mov
ficoms
push
es
pop
dec
ret
xchg
lret
scas
iret
add
or
dec
cmp
dec
xorb
dec
inc
sbb
xorb
mov
xchg
dec
addb
cmp
pop
loope
out
cmp
pop
jp
push
rcll
loop
push
dec
bound
push
xor
dec
adcb
and
test
mov
xchg
fcoml
pop
aas
mov
mov
ror
dec
into
std
inc
es
inc
ficoms
aas
xor
dec
mov
pop
inc
fcmovnbe
add
pop
inc
dec
xor
inc
loopne
push
adc
nop
xchg
pop
cmp
dec
cs
jns
test
jns
test
jns
or
dec
into
std
inc
pop
inc
cmp
inc
roll
adcl
inc
pop
adcb
pop
xchg
push
movsl
pop
adc
dec
ret
add
push
je
sti
inc
inc
inc
push
popa
adc
dec
pop
dec
test
mov
ret
addb
cmpsb
sbb
dec
out
mov
dec
repz
adc
ficompl
dec
pusha
out
pop
pop
pop
sbb
pop
and
sub
sub
ret
pushf
pop
or
pop
out
mov
gs
or
fwait
inc
inc
lret
pop
cmp
or
and
andb
pop
xor
dec
dec
sub
pop
inc
iret
or
add
mov
popl
cltd
pop
es
pop
pop
pop
rcrl
pop
pop
cmp
add
xor
mov
dec
dec
cltd
dec
scas
mov
dec
scas
test
insb
popa
das
and
inc
pop
aas
inc
add
adc
mov
push
lret
scas
mov
mov
int3
out
xchg
push
inc
clc
dec
xchg
dec
inc
cltd
inc
pop
dec
jne
mov
sub
call
dec
orb
inc
jge
dec
into
aas
jge
dec
xor
pop
fs
inc
or
push
or
push
rcrl
stos
sub
lds
subb
xchg
cmp
imul
out
cmp
dec
mov
cmp
adcb
add
dec
cmp
inc
cltd
mov
xchg
dec
pop
xorl
pop
roll
ret
dec
into
std
inc
out
xchg
push
data16
dec
mov
inc
push
mov
or
repz
enter
dec
into
dec
add
dec
out
pop
inc
repz
inc
and
out
cmp
ljmp
dec
bound
push
aas
ficoms
es
inc
fimuls
dec
cmp
pop
fisttps
cmp
push
dec
dec
lods
push
lret
addb
in
dec
dec
jecxz
out
in
insb
and
push
dec
call
xor
ficoml
or
lret
dec
push
arpl
dec
out
mov
push
cmp
out
jb
pop
mov
pop
shll
out
mov
ret
add
lds
pop
insb
adc
out
sub
out
push
pop
into
push
xlat
push
repnz
pop
mov
dec
call
fucomi
sub
mov
in
push
cmpsb
or
dec
ret
in
flds
sub
rclb
lahf
sub
sub
sub
sub
call
add
add
add
add
add
add
mov
out
dec
xchg
decb
imul
inc
push
inc
into
jecxz
dec
fwait
sub
mov
mov
pop
pop
mov
mov
cmp
loope
fstpt
out
inc
fldenv
cmp
dec
push
inc
nop
pop
cmp
inc
dec
mov
mov
inc
cmp
aas
xchg
pop
mov
cmp
rorl
adcl
push
mov
cmp
push
cltd
loop
rorb
popf
out
sbb
dec
or
dec
mov
pop
pop
fs
inc
push
jb
stc
and
pop
std
inc
out
cmp
jg
push
leave
dec
pop
cmp
or
lret
inc
and
push
pop
into
pop
sbb
xchg
into
rcrl
inc
dec
out
dec
into
dec
cmp
sub
push
xchg
dec
loopne
inc
pop
inc
je
dec
sub
xor
dec
shll
jp
xchg
or
or
or
aas
inc
mov
adc
cmp
fldl
inc
enter
inc
adc
inc
es
rorb
es
inc
decl
fs
adc
inc
and
push
into
push
ret
pop
mov
xchg
imul
movb
jge
inc
cmp
pop
iret
adc
inc
mov
ret
clc
pusha
inc
inc
xor
pop
inc
mov
pop
pop
in
lcall
cmp
inc
sub
in
and
inc
pop
push
mov
int
inc
fistpl
aas
mov
sbb
pop
pop
mov
dec
cmp
push
mov
cmp
jp
dec
rcll
pop
dec
lods
iret
loop
push
inc
dec
sarb
inc
ror
jp
pop
roll
cmp
ret
jp
push
roll
cmp
jp
out
cmp
cmp
imul
out
cmp
test
pop
notl
push
lea
push
out
insl
pop
push
sarb
insl
shll
and
sub
iret
mov
dec
int3
xchg
ret
inc
pop
bound
shlb
sub
lcall
aad
sbb
ret
loop
pop
dec
lods
or
aaa
dec
dec
in
dec
adc
stos
mov
push
dec
jg
in
dec
sbb
rcrb
push
pop
or
push
xlat
mov
and
pop
loop
push
dec
lea
jnp
dec
sub
or
inc
cltd
ret
mov
inc
sub
frstor
mov
pop
dec
pop
push
sub
or
dec
imul
bound
pop
mov
or
in
inc
and
imul
out
cmp
imul
pop
sub
leave
xchg
mov
inc
cmp
imul
ljmp
sub
inc
dec
es
aas
ficoms
fldl
push
jge
pop
cmp
pop
or
fdivs
xlat
imul
loope
out
cmp
popa
pop
out
cmp
into
jp
push
ror
jp
push
rorl
jb
push
xor
lret
inc
lods
mov
fadds
inc
lods
pop
cmp
inc
pop
cmp
add
fmulp
mov
jge
pop
inc
fimuls
daa
xlat
cmovp
inc
mov
mov
cmp
add
dec
inc
and
ror
push
inc
push
mov
mov
insb
out
inc
cmp
out
inc
into
or
mov
shr
inc
jnp
mov
aas
insb
mov
pop
popa
inc
adc
fstps
dec
xor
aam
movsb
inc
pop
push
or
or
or
xor
cmp
out
lds
mov
fs
rorb
pop
fs
push
or
push
rcrl
push
pop
cmp
inc
pop
negl
push
sub
adc
out
or
aad
pop
mov
and
rorb
movsb
inc
sbb
dec
or
lret
pop
bswap
adc
adc
mov
mov
cmp
push
inc
jmp
mov
ret
pop
and
imul
popa
jmp
inc
out
enter
dec
jecxz
lret
adc
and
xchg
arpl
inc
lret
iret
pusha
fcompl
jnp
cmp
add
fadds
push
out
push
cmp
out
rcrl
outsb
inc
lahf
js
dec
mov
popf
sbb
push
jnp
test
fnstsw
sbb
or
mov
sub
mov
mov
adc
push
les
dec
xlat
fcomi
mov
dec
sub
jl
pop
jb
mov
sbb
cmp
iret
lcall
gs
mov
loopne
mov
pop
cld
xor
inc
mov
pop
or
fstpl
jns
dec
sbbl
int
imul
cmp
jae
dec
fstpt
dec
loopne
cltd
cmc
or
inc
test
imulb
xchg
jmp
dec
fwait
pop
cltd
fcmovnbe
mov
sahf
dec
mov
dec
inc
ret
dec
push
sub
or
jge
dec
lahf
adc
cmpsb
or
jecxz
pop
dec
pop
fsub
popa
lcall
jnp
mov
cwtl
aad
push
aam
ja
out
adc
test
and
push
mov
push
dec
mov
inc
dec
pop
addr16
sub
pop
pop
push
stos
add
fs
or
sub
vphaddwd
pop
fcmovb
sbb
inc
movb
pop
int3
dec
xor
xchg
or
aam
push
cmp
jg
orl
or
adc
or
roll
cmp
pop
pop
ret
cmp
inc
sarb
pop
add
inc
cmp
sub
mov
int
test
cmp
push
ret
cmp
or
cmp
xchg
inc
add
sub
push
in
daa
push
pop
sub
ret
cmp
or
rolb
aam
mov
int3
test
dec
pop
xchg
ret
cmp
or
sbb
pop
inc
ret
sbb
clc
dec
nop
inc
sub
sbb
cmp
pop
inc
ret
cmp
dec
pop
mov
dec
inc
adc
roll
adc
sbb
pop
movb
cmp
pop
pop
mov
push
call
push
push
sub
aad
push
cmp
pop
fcmovb
push
mov
movb
cmp
dec
int3
mov
mov
push
adc
adc
inc
pop
cmp
pop
faddp
rolb
or
pop
pop
inc
or
js
xor
push
pop
push
ret
cmp
ffree
mov
push
nop
aam
xchg
sub
fwait
ret
cmp
or
inc
inc
pop
cmp
cmp
or
xchg
inc
sarl
aad
inc
or
sub
inc
push
lret
sbb
ret
cmp
or
addl
xchg
nop
and
pop
sub
push
pop
cmp
or
pop
or
lea
push
sub
cmp
pop
and
xchg
pop
mov
ret
cmp
add
rcrb
sub
cmp
dec
add
ret
cmp
pop
sbb
and
sub
adc
cmp
mov
or
mov
movb
addb
ret
cmp
pop
push
inc
push
cmp
pop
adc
bswap
cmp
int3
jmp
dec
push
mov
aam
push
fdivrs
pop
or
inc
inc
cmp
pop
adc
aam
xchg
inc
pop
cmp
cmpl
mov
inc
mov
ret
cmp
sbb
pop
mov
sub
or
xchg
lds
orb
fiadds
cmp
pop
ret
cmp
ret
dec
push
cmp
pop
add
mov
sbb
sbb
cmp
adc
jl
les
dec
sub
test
inc
inc
cmpb
pop
fcmovnb
cltd
xlat
cmp
or
adc
push
test
rcr
cmp
add
inc
ret
cmp
or
mov
cmp
inc
sbb
cltd
pop
pop
ret
cmp
cmp
cs
pop
cmp
sbb
sbb
aad
cmp
or
lret
ret
dec
cmp
ret
cmp
inc
cmp
sub
sub
xchg
dec
push
cmp
sub
cmp
pop
fadd
leave
das
sub
fst
and
iret
cmp
dec
dec
lret
scas
in
push
sub
inc
and
ja
dec
push
lds
add
into
ja
add
outsb
popf
enter
dec
adc
cmp
js
dec
jl
sbb
dec
leave
test
out
mov
jmp
push
fildl
aaa
sub
dec
mov
lock
cmc
dec
and
push
xchg
sub
push
dec
lods
xor
xchg
int
call
xchg
jmp
ljmp
sub
mov
dec
inc
pop
cld
sub
leave
call
push
mov
in
pop
cmpsl
clc
push
cmpsl
std
je
mov
add
and
fwait
lds
pop
hlt
inc
ja
fsubrl
rolb
dec
jo
jmp
and
dec
dec
pushf
fs
sub
insl
xor
cltd
pop
pop
jo
dec
je
test
push
call
or
lret
fstl
arpl
cmp
mov
nop
xchg
xchg
jecxz
and
rcll
aam
cmp
je
mov
loopne
mov
sub
push
or
cmp
inc
xor
dec
sbb
jae
aaa
incb
dec
cmc
or
hlt
push
add
pop
dec
xlat
dec
mov
test
dec
cmpsb
lahf
or
call
push
or
mov
jns
insl
addr16
ds
pop
mov
jb
jecxz
repz
sbb
mov
lret
dec
out
pop
cli
xor
fsubrl
adc
jno
lock
imul
sahf
lds
pop
and
xor
into
mov
loope
or
push
fsubl
dec
into
addl
imul
dec
jecxz
dec
inc
lock
mov
push
dec
dec
scas
mov
cmovb
xchg
inc
push
jge
jecxz
mov
test
int
jmp
cli
arpl
lea
std
push
xchg
testb
jne
je
mov
cwtl
data16
addb
lods
ficoml
inc
outsb
pop
mov
addr16
or
arpl
dec
stc
cmpsl
push
nop
sbb
mov
dec
imul
insb
iret
sbb
or
test
dec
das
out
gs
imul
push
cmc
cmpsb
jbe
or
and
pop
fdivl
in
mov
mov
add
xor
mov
mov
mov
adc
cmp
dec
pop
mov
sub
gs
pop
fsub
push
cmpsb
jnp
movsb
sbb
lret
stos
into
jecxz
xor
mov
stos
push
sbb
pop
lock
rclb
push
cmp
cmp
push
rclb
or
out
in
repz
or
add
lret
xchg
mov
push
lods
lahf
dec
adc
push
or
jmp
pop
mov
arpl
xchg
addr16
mov
sub
inc
sub
imull
push
adc
rorl
jecxz
in
pop
andnps
mov
rol
clc
dec
test
xor
lock
push
data16
pop
pop
int
jnp
jno
pop
jge
push
shl
pop
add
mov
stos
dec
icebp
js
mov
cmpsl
test
add
das
push
pop
jno
mov
aas
lret
xchg
pop
lcall
or
and
ret
jp
xchg
movsb
dec
add
pop
xchg
or
inc
fisubrl
ret
mov
lahf
dec
mov
out
test
cmc
adc
in
iret
sbb
add
inc
push
clc
sub
cmc
je
push
test
xchg
addr16
push
push
xchg
cmp
xlat
mull
test
mov
xchg
das
dec
mov
flds
jg
xor
or
test
mov
add
mov
and
xchg
pop
cmpsl
dec
sub
dec
mov
das
sahf
dec
insb
lods
bound
or
dec
sub
pop
call
fwait
mov
xor
arpl
mov
pushf
dec
movsl
test
cltd
jge
testl
daa
xchg
dec
mov
mov
dec
testb
popf
push
sub
mov
outsb
idivb
dec
dec
push
insl
stos
aas
or
stc
push
and
sbb
dec
repz
cmp
dec
ss
pop
sub
xchg
pop
sbb
rcl
sub
imul
repz
inc
mov
addr16
adcb
inc
xor
enter
xchg
fsubrl
sub
lahf
stc
inc
js
dec
push
jecxz
dec
sbb
into
adc
outsb
or
push
out
xchg
push
adc
push
cld
mov
push
sub
mov
push
xor
jge
or
and
cmp
sub
adc
xor
fistl
mov
pop
jg
dec
aas
push
mov
cmp
lods
prefetch
dec
mov
mov
inc
je
cmp
int3
dec
dec
pop
pop
xor
test
xor
mov
dec
out
int3
fisttpl
sar
pusha
stos
stos
ljmp
dec
lea
xchg
and
push
pop
push
dec
in
repnz
pop
test
scas
mov
jnp
inc
loopne
dec
lret
lcall
sub
imull
femms
dec
add
js
cld
fwait
mov
xchg
ret
int
arpl
mov
loopne
lret
cmpsl
add
test
sbb
fistps
mov
dec
mov
or
push
and
dec
push
jl
dec
xor
fs
push
and
icebp
push
add
addr16
sub
iret
fwait
inc
dec
scas
dec
xlat
mov
mov
dec
shrl
nop
loop
xor
dec
leave
push
test
popa
cmp
jb
cltd
dec
lock
dec
mov
cmp
push
xor
mov
in
shlb
inc
movsb
cs
dec
and
jns
sti
dec
push
dec
cli
stos
push
sub
or
fisttpl
dec
ds
cmpsb
adc
pushf
pop
or
lcall
add
dec
jnp
ljmp
ss
push
repnz
push
inc
pop
xchg
gs
dec
push
jmp
jp
xor
dec
arpl
and
push
movsb
cmp
cltd
stos
ficoms
decb
inc
pop
or
out
sub
inc
adc
std
pop
jo
push
cmc
imul
jbe
das
aam
lea
mov
pop
in
shlb
cmpl
out
stc
daa
ds
dec
movl
mov
mov
jle
sbb
jmp
ret
leave
mov
or
jae
dec
jle
cmp
jnp
mov
xchg
lods
or
out
dec
xorl
pop
and
shr
xor
pop
xchg
sub
pop
add
or
decl
dec
jbe
push
rol
inc
shlb
sub
xchg
jae
dec
pushf
inc
mov
shrl
pop
jp
inc
mov
mov
xor
add
fistl
dec
pop
rcrb
leave
mov
mov
dec
pushf
decl
xlat
xchg
mov
jb
jns
xorb
in
cmpsl
mov
pop
or
mov
jmp
jae
push
jp
out
outsl
mov
dec
in
push
adc
fisttps
mov
repnz
pushf
cmpsb
dec
insl
dec
das
push
and
adc
xchg
lds
stos
mov
int3
dec
or
aas
dec
push
adc
mov
ljmp
pop
xchg
dec
test
fidivl
loope
xchg
add
insb
cli
aaa
cli
scas
push
ds
or
mov
sbb
xchg
jecxz
inc
in
outsb
jmp
dec
lea
sarl
fs
fsubs
fimuls
insl
xor
push
jo
dec
movsb
mov
cmpsb
nop
xchg
lahf
addb
sub
adc
jg
jmp
jne
mov
inc
xor
mov
sub
cli
sbb
or
push
sbb
dec
dec
cmp
mov
inc
nop
cmc
sub
push
or
and
jp
push
dec
mov
add
xchg
movsl
jmp
fildl
jge
dec
fnstenv
insb
loope
mov
jecxz
mov
fsubrs
pop
aas
icebp
mov
sub
cmpsb
test
sub
cmp
jecxz
mov
loope
inc
jnp
es
arpl
xor
mov
cli
adc
push
lret
or
xchg
cmp
lea
stos
push
out
jmp
in
push
jnp
call
lcall
fmulp
imul
jecxz
dec
shrl
cs
fdivrp
mov
out
dec
mov
sbb
push
rcrb
inc
dec
jle
cmpsl
subl
or
ljmp
sub
fwait
sti
mov
dec
xchg
movsb
add
imull
dec
cld
xchg
adc
mov
cmp
les
imul
and
int3
rorb
pop
jae
dec
and
mov
push
mov
xchg
add
ret
mov
std
inc
xchg
fsubs
sub
iret
sbb
into
jmp
add
mov
scas
xor
dec
ficomps
dec
sbb
int
pop
dec
nop
mov
jp
pop
push
scas
xor
lods
jae
lds
mov
cli
dec
in
add
mov
add
mov
sahf
dec
lahf
push
xchg
jge
mov
cmp
in
leave
jecxz
ret
into
stos
jmp
and
mov
dec
rcl
dec
mov
int3
scas
imul
dec
repnz
mov
aaa
mov
push
sbb
xor
mov
andl
aas
pop
xchg
push
xlat
rep
lret
es
jp
push
push
mov
cmp
jae
mov
ss
dec
add
dec
into
in
in
mov
mov
push
mulps
idiv
push
jle
shrb
dec
shrb
mov
fwait
cmpsl
cmc
adc
rolb
sbb
cmpb
mov
fmul
scas
aad
imul
push
dec
pop
push
dec
xlat
test
adc
cmpsl
movb
inc
sbb
pop
sub
adc
loope
or
stos
mov
dec
and
push
and
fdiv
addr16
push
ljmp
stc
orb
push
sbb
pop
cltd
fistps
fs
clc
xchg
fld
push
cmp
insl
pop
push
jle
mov
add
mov
lods
push
xchg
pop
dec
mov
xorl
push
cli
dec
outsl
xchg
sub
add
pop
dec
roll
inc
lahf
nop
mov
jb
xchg
ret
dec
sub
xor
or
shrb
insb
lods
lea
repnz
pop
paddd
rolb
mov
xchg
and
cmp
dec
es
sbb
jl
inc
add
jae
ljmp
pop
mov
inc
out
loope
insb
inc
movsl
ljmp
loopne
cli
mov
mov
dec
xchg
addr16
cmpsl
dec
cwtl
cmp
ljmp
sbb
xor
inc
mov
pop
mov
cmp
ja
mov
push
add
and
je
popa
add
dec
cmc
lahf
ja
sbb
push
push
mov
xor
fmuls
or
daa
fs
ds
jecxz
cmovnp
jg
xlat
stc
dec
cwtl
lea
imul
jno
fisttpll
in
xchg
out
cmpsb
push
mov
stos
sbb
in
mov
dec
addr16
js
or
adc
add
cmp
fstpl
or
cmp
je
dec
subb
stos
cwtl
or
pop
add
cltd
mov
lahf
out
dec
or
mov
cmpsb
dec
xlat
loop
xchg
testb
dec
add
imul
fstpt
sbb
clc
orl
addr16
dec
fs
push
cwtl
push
call
lods
nop
mov
mov
bound
add
dec
add
xor
sub
dec
ret
or
dec
stos
sahf
imull
inc
mov
or
xchg
stc
cmp
dec
clc
scas
mov
mov
adc
sub
in
dec
add
aaa
and
jl
sub
fcmove
push
incb
jmp
jb
aas
dec
in
xchg
pop
or
cmp
dec
push
out
sub
push
es
mov
les
adc
outsl
push
scas
stos
lret
test
adc
jnp
dec
push
push
loop
adc
sub
push
xor
cmp
les
pop
out
test
mov
mov
movl
pop
dec
aad
loop
inc
dec
ficomps
jp
int
jmp
pop
xor
mov
mov
cltd
cwtl
mov
mov
and
arpl
or
dec
cmp
int3
and
cltd
dec
pop
in
out
popa
imul
pop
lret
lods
xchg
test
or
xchg
cltd
lahf
jp
cmp
mov
mov
popa
das
push
hlt
mov
sti
mov
cwtl
sahf
nop
push
test
fists
dec
call
out
xorb
mov
inc
dec
das
fwait
bound
inc
dec
mov
or
mov
int3
dec
and
cmpb
movsb
rorl
out
dec
repz
ljmp
cmc
adc
and
pop
xchg
js
dec
pop
movsl
jb
dec
pop
and
xchg
lea
shll
dec
mov
aas
xchg
out
stc
pop
push
repz
jbe
sub
into
and
jno
adc
arpl
mov
lock
and
test
dec
out
out
cld
mov
pusha
mov
sbb
int
call
or
pop
fstpt
jns
das
inc
std
adc
loopne
add
dec
ret
dec
cwtl
and
call
rorl
pop
xlat
test
dec
sti
mov
iret
jmp
adc
push
roll
loopne
push
jae
lcall
dec
movl
aaa
dec
dec
jecxz
mov
das
sub
dec
in
iret
mov
es
add
xor
leave
or
fstpt
ret
cs
jns
icebp
shll
loop
dec
lds
push
or
ds
xor
ja
shl
dec
xchg
inc
sub
or
mov
xchg
iret
push
xchg
lret
in
pop
xchg
dec
fildl
dec
pushf
inc
les
jnp
mov
dec
push
cmc
xor
mulb
int3
orl
out
add
inc
jl
dec
sbb
or
mov
lahf
mov
push
enter
adc
cmpsb
aaa
push
cmp
push
jo
push
mov
aas
shr
aad
push
or
push
fadds
out
mov
or
cmp
bound
call
adc
inc
cmp
adc
pop
popa
sub
iret
cmp
push
dec
adc
push
jbe
out
cmp
jge
xchg
aad
aas
in
shl
rcrb
into
and
sub
in
cli
xchg
adc
inc
aas
cmpsb
cmc
lret
insl
pop
push
mov
dec
sbb
loop
jo
add
pop
dec
dec
rcr
mov
push
xchg
fdivrs
repnz
and
aaa
dec
push
jl
ljmp
jbe
sbb
mov
sub
stos
sub
push
aas
dec
fldt
subb
jl
cmp
fstps
xor
cwtl
test
andb
les
shll
or
mov
inc
mov
push
push
add
je
fmulp
push
sbb
rclb
stos
int
push
push
pop
in
jmp
jbe
cli
mov
call
sbb
sub
mov
pop
mov
add
xchg
dec
inc
addr16
aas
das
adc
pop
data16
je
add
dec
shll
ds
inc
jae
hlt
iret
mov
lods
dec
fldl
dec
xlat
orl
xor
jl
aad
mov
sarl
xchg
stos
add
ret
dec
adc
aam
cmc
test
jge
inc
aad
pop
imul
jnp
xchg
inc
xor
fisttpl
outsl
sti
jp
cmp
in
xlat
dec
insl
inc
arpl
addr16
out
adc
or
jecxz
int3
xchg
inc
test
shrb
sub
mov
sbb
aas
add
xchg
lahf
in
jge
dec
jne
sbbl
jns
shrb
andl
mov
dec
fs
sub
in
jp
mov
in
pop
subl
mov
stc
ret
dec
push
mov
add
cmp
in
inc
mov
cld
dec
test
roll
pop
or
xchg
dec
cmp
pop
aaa
sbb
jne
dec
push
loopne
in
push
imul
add
pusha
lret
dec
cmovp
out
cmpb
jno
mov
test
in
dec
xor
inc
push
out
dec
pop
mov
and
push
pushf
les
imul
dec
adc
or
test
in
mov
cwtl
adc
pop
lods
repnz
add
dec
or
fbstp
xor
dec
and
shl
add
add
jmp
jae
data16
out
jnp
imul
test
dec
in
push
mov
leave
loopne
sub
push
clc
ret
cli
inc
rcrb
add
fsubrp
and
dec
out
in
lds
stos
xor
dec
sbb
mov
xchg
addr16
or
dec
push
pop
ret
lods
push
dec
cwtl
jnp
rcr
jns
dec
cmp
hlt
add
push
ror
dec
bound
sub
mov
or
jbe
lea
orl
lcall
mov
xchg
dec
es
loopne
push
rcrl
inc
int
dec
aas
mov
data16
jno
inc
dec
jnp
in
sbb
mov
push
imul
sbbl
add
mov
outsb
mov
mov
cmp
nop
aas
cmp
call
sub
pop
jno
mov
xor
fwait
sub
and
dec
xchg
cmp
inc
mov
cld
sub
aaa
xchg
dec
cli
xor
gs
mov
pop
insb
push
in
ret
negb
push
dec
mov
pop
mov
sbb
inc
push
sbb
mov
cltd
xchg
dec
fwait
addl
dec
push
pop
jle
mov
lcall
pop
pop
dec
push
pop
js
test
mov
in
mov
dec
mov
scas
lcall
test
mov
sub
and
sbb
push
outsl
cmp
xor
mov
add
in
clc
xchg
lds
imul
adc
jg
movsl
repz
das
push
pop
hlt
call
add
lcall
jns
lods
jbe
rcrb
push
test
ffreep
xor
mov
aas
and
into
movsb
dec
xchg
dec
lock
ror
in
pop
mov
push
jmp
jge
dec
mov
add
out
ret
mov
bound
vrcpss
imul
xorb
xor
rcll
dec
sub
nop
test
mov
push
sub
mov
push
aad
ret
jne
dec
int3
aam
aas
xchg
mov
ljmp
push
call
sbb
or
jns
sbb
loop
sub
pop
xchg
dec
xor
sub
iret
mov
xor
ret
mov
rcll
fcmove
ret
pop
xchg
lret
jge
sub
xchg
push
jns
adc
shr
and
inc
jg
inc
sbb
adc
mov
pop
pushf
push
jb
pop
jecxz
and
cmp
and
jb
lea
rcl
cwtl
imul
repnz
fwait
jge
xchg
xor
mov
pop
dec
negl
mov
call
test
hlt
dec
and
dec
xor
mov
icebp
or
rclb
dec
lods
sahf
sbb
rorb
add
pop
dec
stc
andb
cmc
testl
movl
dec
mov
outsl
aaa
testl
shl
imulb
call
or
aaa
ljmp
push
cli
push
dec
pop
sub
cmp
mov
lret
xchg
jno
push
arpl
mov
insb
orb
movsb
cld
mov
mov
les
inc
sub
pop
mov
in
outsl
repz
jle
imul
sub
testb
dec
jne
insb
add
push
loopne
dec
jge
pop
leave
sbb
or
jecxz
push
addr16
movsl
stos
pop
sarl
repz
pushf
daa
dec
pop
cmc
xchg
scas
jmp
dec
xchg
cmp
dec
test
int3
lea
or
inc
push
rorl
cmc
sub
dec
push
dec
pop
push
inc
adcl
lea
or
aaa
aad
push
push
icebp
in
sti
push
adc
dec
mov
dec
incb
push
test
mov
leave
and
mov
add
pop
scas
xchg
dec
ret
push
movsl
aas
cmpsl
clc
push
arpl
pop
inc
in
dec
dec
inc
movsl
mov
or
lret
dec
dec
ret
push
iret
ljmp
pop
mov
push
dec
adc
pusha
into
rorb
sarb
shr
ljmp
pop
xor
mov
inc
popf
mov
or
lret
xor
jl
xchg
dec
mov
imul
sbb
orb
mov
pop
nop
dec
jp
sbb
testb
sbb
mov
and
sub
lahf
fcmovnbe
dec
jne
test
push
sahf
je
jg
push
out
sub
mov
push
push
outsl
dec
ja
push
inc
cmpb
push
push
prefetch
roll
repnz
dec
mov
fsubrs
or
xchg
ds
xchg
adc
dec
test
popf
push
scas
fwait
ja
push
sub
dec
mov
outsb
xchg
fnstenv
dec
cmp
lret
lods
leave
mov
adc
lret
scas
insb
jle
mov
popa
dec
jne
dec
fwait
xor
sub
mov
push
loop
das
mov
push
pop
jns
flds
jge
shrl
int
les
xor
jo
sbbl
cmpsl
sub
push
arpl
mov
dec
pop
imul
inc
push
xchg
sti
cwtl
dec
orb
and
push
pop
iret
sbb
add
sub
pop
int3
push
push
fistpl
arpl
cwtl
dec
adc
inc
sub
loope
inc
fwait
xchg
dec
negl
subb
hlt
xchg
lea
push
sbb
xor
pop
outsb
inc
push
cld
dec
jns
sub
add
call
bound
std
sub
inc
pushf
into
inc
out
mov
dec
jo
cltd
jae
mov
dec
xor
data16
push
pop
or
jp
scas
scas
dec
test
mov
mov
xchg
rcrl
das
mov
adc
cmp
and
and
xchg
mov
rorl
ds
movsl
pushf
imul
lcall
cmova
inc
pop
loop
data16
cs
xor
in
cli
add
fst
iret
sbb
push
ljmp
insl
dec
mov
fidivrl
pop
mov
adc
insb
loopne
mov
xor
jl
pop
push
out
ret
std
adc
dec
outsb
hlt
cmpsb
fisttpll
mov
mov
fwait
jbe
dec
cmp
gs
jmp
int
dec
xor
mov
dec
shl
in
dec
xor
dec
mov
mov
xchg
xlat
add
dec
jle
or
aam
inc
icebp
sub
pop
pop
xor
xchg
push
inc
shlb
push
sub
cmp
ljmp
arpl
xlat
inc
data16
clc
pop
stos
subb
mov
sub
ss
inc
ret
xchg
cmpb
arpl
rcll
scas
and
dec
shl
mov
lret
iret
or
das
push
or
dec
mov
lea
dec
xor
fcmovnu
xorl
inc
pop
jo
push
icebp
mov
jp
insl
into
xor
ja
inc
daa
mov
fidivl
dec
mov
xor
cmp
fistl
flds
shrb
add
pop
or
jns
xchg
out
lret
addr16
xor
insl
imul
add
lahf
fdivrl
push
into
cld
dec
jle
and
sub
dec
jb
lods
adc
cmp
jecxz
mov
cwtl
sbb
sub
jne
cmp
or
mov
cwtl
mov
dec
int
imulb
arpl
aad
sub
jg
dec
aaa
pop
mov
insb
stc
dec
xor
sar
pop
pop
push
dec
cmpsb
pushf
lock
das
cmp
cmp
aas
xchg
fiaddl
in
mov
dec
fildl
popa
ja
inc
or
ds
sbb
cmpsl
int
mov
inc
mov
dec
cwtl
cmp
inc
fnstcw
insl
xor
rclb
movsl
loope
jbe
dec
pop
rcll
adc
ret
jns
mov
out
mov
pop
jge
fcompl
add
adc
mov
xchg
lea
inc
sub
dec
hlt
mov
cmpsl
das
pop
pop
dec
ljmp
dec
and
mov
in
dec
leave
test
rcr
push
pop
mov
lds
add
ss
pop
mov
dec
imul
pop
inc
repz
inc
mov
dec
jmp
and
mov
andl
outsl
inc
rorl
lret
icebp
cmp
lock
dec
ljmp
xor
inc
lret
sub
sub
hlt
push
orl
in
add
push
adc
push
addb
jl
sub
daa
xchg
pop
inc
dec
dec
stos
mov
jp
dec
push
movsb
icebp
sbb
xchg
dec
sbbb
fimuls
dec
cs
dec
popf
adc
imul
xchg
pop
out
aaa
lcall
je
nop
adc
enter
xchg
int
mov
xor
lds
jl
sbb
cmp
int
lds
dec
mov
test
xchg
sbb
push
xchg
dec
sbb
pop
jp
or
mov
out
addr16
cwtl
dec
or
in
inc
dec
fmuls
add
mov
ds
jno
push
lcall
dec
pop
icebp
adc
aam
and
pop
push
arpl
dec
hlt
fxam
jecxz
push
and
mov
cli
mov
push
pop
lods
and
mov
dec
mov
sub
inc
dec
lea
ds
or
dec
xor
sbb
std
dec
faddl
jle
es
sbb
mov
loop
testl
mov
loope
lea
mov
fcoml
pop
dec
outsb
pop
xchg
mov
insb
and
loop
push
xchg
push
jnp
cmp
sbb
fistpll
lret
jecxz
aaa
xor
icebp
xchg
iret
cmp
mov
mov
mov
cmp
xlat
imul
cli
mov
or
cltd
mov
out
dec
dec
ljmp
lods
mov
subl
pop
dec
cmpsb
sub
jl
or
mov
dec
out
add
sub
mov
jge
dec
jmp
mov
sub
loope
in
mov
jo
push
dec
mov
sbb
mov
sbb
mov
dec
out
pushf
push
imull
mov
pop
imul
imulb
ret
aad
xchg
and
jmp
fidivrl
mov
adc
dec
imul
nop
mov
adc
lret
daa
cli
jns
cwtl
xchg
pop
outsl
jo
movsl
jp
adc
dec
pop
jge
mov
push
in
jp
adc
popf
int3
xchg
xchg
addl
mov
adc
mov
xchg
subl
cmpsb
mov
pop
cmp
mov
push
cmpsb
mov
pusha
adc
push
pop
mov
lea
mov
mov
pop
sub
push
das
cmp
push
mov
inc
addb
test
sbb
add
mov
jge
leave
icebp
sub
cmc
jecxz
and
out
dec
mov
sbb
lods
cli
push
push
jecxz
mov
mov
inc
adc
movsl
data16
sahf
inc
enter
inc
mov
jae
mov
fidivrl
dec
in
mov
sub
mov
scas
test
pop
or
mov
pop
subl
jg
scas
xchg
out
xchg
scas
xchg
int
subl
addl
dec
std
fcmovb
mov
jbe
daa
jns
and
jg
into
fsubs
je
test
arpl
aam
test
dec
pop
mov
ret
nop
das
stos
mov
inc
cli
lahf
xorl
mov
cltd
repz
jp
cmp
lahf
and
pushf
insl
in
dec
and
and
xchg
xor
into
xchg
xchg
jp
adc
sbb
sub
add
jle
mov
les
add
pop
mov
pcmpgtw
push
les
pop
into
inc
rcll
inc
sub
les
cmpsb
mov
data16
lods
pop
jne
adc
or
cmc
aad
les
inc
cmp
or
les
out
pop
push
lods
pop
daa
ss
sub
dec
jecxz
lods
dec
add
xor
adc
loopne
push
lea
ret
out
repz
mov
push
push
push
push
pop
xchg
mov
hlt
lcall
sbb
jle
mov
mov
mov
dec
pop
jle
xchg
rolb
sub
aaa
inc
outsl
add
push
inc
es
jg
jmp
push
inc
imul
push
mov
fs
icebp
cmp
jns
dec
pop
ja
daa
sub
adc
in
repnz
icebp
cmp
jno
mov
aad
mov
push
out
push
hlt
adc
jecxz
pop
es
fidivrs
mov
pop
daa
mov
cmc
dec
pop
jb
push
fs
bound
fiadds
test
adc
addl
sahf
scas
sarb
scas
imul
in
pushf
movzbw
movsbw
mov
pushf
mov
mov
pushl
ret
mov
stos
add
scas
sub
mov
and
jnp
subb
in
and
inc
adc
push
cmc
jns
arpl
js
pop
inc
cld
and
or
icebp
out
mov
sub
enter
or
xchg
dec
call
sub
xlat
jmp
addl
rorb
jno
pop
insb
lretw
push
add
sahf
push
rcrb
fs
inc
or
lahf
mov
jp
or
fs
ja
pusha
mov
bswap
movsbl
mov
push
bswap
mov
push
movsbw
movsbl
mov
not
movzbw
not
bswap
mov
jmp
mov
cmp
cmp
mov
bt
mov
cmc
mov
pushf
or
movw
call
jle
add
mov
mull
push
cmc
sbb
mov
imul
pop
scas
clc
or
mov
std
lahf
jo
sub
add
loopne
popa
lods
push
mov
mov
movsb
or
ret
jg
pop
dec
cltd
jl
or
mov
xor
and
jno
rolb
mov
xchg
insb
pushf
and
insb
fsubs
stc
xorl
jo
xchg
popf
push
mov
sahf
mov
mov
lret
or
por
jno
in
cmp
adc
push
mov
sbb
cmp
les
fwait
sarl
mov
and
mov
jbe
push
or
dec
roll
repnz
jb
sbb
jb
pop
adc
mov
dec
daa
mov
mov
test
sbb
ds
mov
sbb
xor
fs
das
repz
loop
andl
inc
cli
add
inc
xchg
sub
std
rcl
sahf
ljmp
xchg
push
fnstcw
jns
lret
pop
xor
jae
inc
outsb
test
or
add
lret
out
divb
int3
das
jns
fisubrl
mov
ss
int
mov
les
enter
stos
testl
mov
das
mov
mov
cmc
clc
shrl
jmp
popf
test
xor
outsl
aad
out
xchg
gs
dec
popf
shrb
jge
movl
xor
ret
shrb
inc
mov
xor
lods
dec
adc
test
shl
xchg
movsl
mov
hlt
push
pop
arpl
stos
add
sbb
or
jnp
sahf
jle
push
cmpsb
mov
inc
dec
ficomps
mov
mov
sbb
mov
ljmp
dec
xor
outsb
fiadds
jne
push
and
shl
cmp
call
repz
jp
rcl
cmp
xchg
mov
and
sub
lret
sarb
or
jmp
cwtl
out
cmp
xorb
xchg
pop
sbb
mov
sti
mov
or
loop
shl
cs
aad
cs
xor
call
sti
dec
mov
arpl
sahf
xor
or
inc
and
call
pusha
jmp
call
ljmp
push
pop
mov
jmp
cmp
fldenv
and
cld
adc
iret
pop
loopne
repnz
xchg
adc
frstor
mov
xchg
hlt
inc
pop
xor
into
test
pop
hlt
shlb
hlt
cmpsb
loope
jbe
add
enter
sub
add
fs
add
push
jp
or
test
xor
or
sbb
scas
push
jg
fldl
mov
push
call
ss
mov
add
xchg
mov
movsl
push
dec
popf
in
cld
xchg
call
mov
stc
adcl
inc
dec
push
sahf
in
mov
mov
lret
mov
jae
aaa
ret
pop
sub
mov
dec
stos
sarb
pop
stos
dec
ss
jg
repz
push
and
enter
into
aam
gs
lock
sbb
or
or
cmc
xchg
mov
add
dec
stos
ss
pop
stc
mov
push
lods
adc
or
xchg
imul
pop
out
xor
inc
pop
pop
add
fwait
sahf
mov
push
xchg
arpl
imul
or
rep
and
rcr
test
and
fdivrl
push
cmp
xchg
test
mov
es
xchg
cmp
push
lcall
popa
std
jge
push
stc
pop
ss
fnsave
das
test
in
lea
cmp
lcall
inc
jl
sbb
sar
adc
jle
scas
jmp
push
cmc
sbb
icebp
add
and
insb
cmp
jp
or
cmp
bound
ljmp
jmp
jns
cltd
cmc
insb
insl
mov
rol
iret
jnp
in
test
xchg
xchg
xor
jb
rol
mov
or
lcall
mov
push
dec
out
lret
gs
jo
or
mov
pop
push
cltd
dec
xchg
imul
ja
shll
rcrb
push
jg
adc
add
mov
add
xor
ja
mov
mov
cmp
stos
xor
ljmp
das
adc
and
adc
std
and
xor
mov
rorl
ja
add
rcl
fdiv
cltd
mov
push
mov
mov
sbb
sbb
sbbl
dec
aam
fadd
dec
and
xor
mov
jge
jp
or
inc
aad
inc
sbb
orb
push
inc
xor
add
cmp
mov
mov
cmp
xchg
jecxz
in
add
mov
pop
scas
mov
mov
xchg
xor
bound
addl
cmpl
adc
sbb
movsb
repz
loope
or
adc
je
inc
push
xchg
push
push
cltd
in
pop
jp
pop
xor
add
mov
dec
push
aad
test
scas
push
je
or
push
push
dec
into
vcvtps2dq
xor
mov
ds
loope
scas
add
jns
imul
sub
in
mov
jl
push
mov
repnz
mov
pop
xor
loopne
pop
xchg
push
mov
arpl
jae
or
lcall
das
jp
pop
sbb
shr
xor
inc
filds
lret
dec
mov
push
cmc
jmp
inc
inc
mov
xor
test
outsb
dec
cld
push
cmc
fldl
push
movsl
lcall
mov
or
sub
inc
cltd
cmp
fdivrs
je
dec
into
or
pop
lods
je
adc
cmp
repz
mov
les
imul
lock
xchg
xor
popa
dec
add
mov
dec
mov
xor
cld
sbb
ss
mov
push
pop
jmp
cmpl
jno
in
sub
movb
sub
jno
clc
push
pushw
popfw
mov
jmp
pusha
jmp
xchg
pop
leave
adc
lret
and
movsl
push
das
lcall
push
stos
or
push
and
adc
xlat
adc
and
int
push
stos
xor
push
roll
pop
jecxz
push
adc
or
fwait
ja
push
add
mov
jecxz
jne
lods
loopne
rcr
adc
sbb
into
adc
dec
push
js
mov
or
inc
shl
mov
ja
lock
ret
lods
mov
pop
jmp
push
lcall
xor
jmp
push
and
cwtl
cltd
mov
mov
aas
push
rcll
std
outsl
jbe
cmc
aam
xor
jne
in
dec
stos
mov
stc
xchg
nop
adc
jae
mov
jge
out
mov
stos
push
adc
test
cmc
pop
sbb
jo
mov
inc
and
imul
jbe
daa
test
mov
jno
push
pop
in
mov
imul
jp
add
xor
bound
pusha
sub
mov
das
push
mov
lcall
mov
cmp
adc
cmpnltps
pop
push
inc
fidivrl
push
dec
rcr
sub
mov
mov
ret
addr16
jmp
jbe
in
pop
popf
cmp
lods
push
mov
jge
das
lock
jae
mov
fisubrl
push
stos
adc
in
inc
dec
jae
push
mov
stos
pop
stos
jno
scas
add
je
push
aas
push
push
xor
dec
ret
or
sbb
jp
lds
popf
fs
mov
inc
sbb
test
sbb
mov
mov
fwait
mov
sarb
mov
and
xchg
fs
jnp
xchg
filds
nop
sbb
lret
data16
out
sti
jo
adc
andl
xchg
out
jmp
adc
test
jle
or
in
popf
adc
push
lock
and
pop
dec
jge
push
das
call
mov
sub
mov
push
fcomp
gs
das
cli
inc
adc
arpl
sub
dec
nop
mov
shrb
insl
pop
clc
sub
sub
dec
or
pop
andb
pop
xor
es
pop
lret
stos
aas
push
sbb
mov
inc
jnp
ljmp
shll
xchg
jge
gs
mov
arpl
lea
jns
testb
popa
into
push
sub
mov
fldcw
mov
insl
nop
pop
scas
shll
leave
mov
imul
adc
push
inc
shll
mov
push
push
lea
test
sti
jmp
fs
jmp
mov
add
inc
xchg
int3
add
test
fwait
mov
fildl
fisubs
stc
jl
jmp
xchg
dec
movsl
cwtl
jb
nop
test
mov
movsl
inc
jo
call
rcrb
aaa
mov
xchg
mov
fldt
scas
lock
xchg
cmp
fwait
adc
or
rorl
jae
xor
cmp
pop
jae
pop
aam
cmp
add
add
add
aaa
cli
or
or
add
hlt
push
hlt
mov
sub
xlat
xchg
sub
andl
cltd
push
mov
mov
mov
inc
mov
sbb
mov
inc
rcrl
repz
aas
mov
int3
mov
mov
inc
dec
daa
jno
cmp
mov
loopne
fisttps
jnp
cmp
mov
adc
outsb
push
add
or
xchg
inc
jb
dec
imul
fwait
jae
insb
cmc
mov
mov
push
sub
mov
sbb
dec
mov
test
sbb
outsl
xchg
inc
rorb
stos
je
mov
popa
in
sti
inc
mov
adc
cmovae
loope
lret
movsb
jg
push
and
into
idivb
add
and
pop
inc
loop
icebp
dec
xchg
ja
dec
push
mov
jo
push
lea
iret
push
pop
and
sbb
shll
mov
cld
push
int
loop
add
inc
jmp
xor
mov
xor
mov
dec
in
inc
lock
pop
pop
sub
ds
sahf
xor
ror
jp
add
popf
test
cwtl
faddl
inc
stc
ficoml
adc
dec
insl
flds
ror
test
ficoms
scas
inc
sbb
cmp
adc
pop
dec
aam
setp
push
push
pop
xchg
lods
bound
jmp
ds
push
ja
arpl
mov
int3
pop
imul
fsubl
sub
or
push
xor
int3
jp
add
shlb
addr16
dec
pop
xor
rorl
in
xor
fwait
jp
add
pusha
bt
pushl
rol
test
jmp
lret
dec
mov
jp
pushf
jmp
cli
xlat
add
pop
add
jae
dec
mov
xchg
outsb
xlat
cmp
into
and
xlat
inc
enter
push
xlat
xchg
mov
jp
push
push
ja
cmp
fsubr
fidivl
aas
push
pop
push
fwait
sub
fcmovne
or
rol
outsl
fistl
sbb
insl
jbe
push
sbb
lods
sub
movsb
xchg
lahf
icebp
out
fucomp
ss
mov
movsl
scas
mov
bound
popf
into
js
xor
aad
mov
popa
jne,pn
push
push
and
in
stos
pusha
add
mov
in
xchg
ret
out
mov
adc
in
sbb
xchg
stos
and
and
gs
push
push
insb
push
roll
mov
add
test
fstp
pop
mov
pop
pop
testl
pop
addr16
sub
xor
pop
shl
jp,pt
cmpl
cli
xor
jl
es
icebp
push
imul
adc
lcall
incl
repnz
stos
fisubs
cmp
mov
loop
mov
subl
inc
xchg
mov
jmp
dec
sbb
pop
nop
insb
int3
fwait
jge
sbb
xchg
mov
jae
jnp
add
ret
es
inc
mov
mov
jno
movsl
add
out
icebp
jl
mov
mov
outsb
ret
pop
or
sbb
push
sub
sub
xchg
std
orb
adc
or
and
popa
mov
movsb
movsl
mov
xchg
call
push
sbb
xor
inc
imul
mov
sbb
push
hlt
sbb
mov
or
cmp
mov
clc
gs
xor
cmp
pop
pop
mov
lock
fisubrs
mov
or
movsl
xor
daa
les
push
or
sti
data16
lea
sbb
dec
sbb
outsl
icebp
cld
lea
inc
sbb
mov
or
negb
bound
xchg
or
pop
inc
jmp
jp
into
mov
scas
aaa
jle
sbb
add
pushf
call
xor
imul
fs
ror
ljmp
in
fxch
ljmp
inc
cmpsb
or
xor
shlb
movsb
push
xor
and
les
scas
mov
adc
mov
push
jl
inc
fisttps
imul
aas
cmc
cmpsl
pop
xchg
into
pop
and
pop
gs
jp
push
xchg
sbb
xor
mov
xor
and
jnp
pusha
pushl
lea
call
pushf
movb
pushl
mov
pusha
lea
jmp
call
jmp
imul
aad
inc
ret
stos
xchg
mov
inc
ss
dec
hlt
mov
lea
loope,pn
test
adc
icebp
sahf
mov
cmp
mov
in
rolb
dec
es
pop
push
xlat
fiaddl
jge
les
loope
or
test
leave
movsb
nop
adc
movsb
andb
inc
dec
pop
cmp
mov
add
mov
imul
sarb
mov
mov
insl
aaa
in
fidivrs
lea
cmpl
es
mov
cmc
sub
mov
mov
and
jnp
rcll
mov
scas
subl
mov
or
pop
dec
xor
lret
jno
mov
divl
test
mov
fs
xchg
in
push
fisttpll
jb
pusha
jo
pop
sub
mov
xchg
jae
xor
outsl
mov
bound
push
lret
in
imul
repnz
xchg
das
stos
jne
pushf
es
jbe
or
icebp
adc
roll
fwait
lods
lds
mov
dec
cltd
and
sti
in
stos
aam
in
or
mov
cmp
sbb
mov
mov
push
inc
xchg
mov
mov
lahf
mov
xlat
adc
in
inc
loop
rorl
insl
or
in
mov
fnstsw
mov
push
outsb
ja
pop
and
add
xchg
pop
push
andl
mov
icebp
mov
fadd
sub
cmp
inc
int3
jp
add
gs
gs
fucomi
xor
xor
mov
jmp
mov
bound
inc
mov
push
outsl
std
dec
push
push
fidivs
dec
jp
sti
cmp
and
leave
sbb
inc
dec
push
jae
or
aaa
pusha
cmp
pop
xor
mov
push
xor
rcrl
cmpsl
lods
fwait
inc
mov
pusha
mov
test
sub
and
ljmp
sub
xchg
fdivp
dec
mov
jnp
push
lock
sbb
adc
sub
and
mov
mov
inc
mov
das
jno
lret
pop
imul
mov
test
popf
pusha
adc
movb
push
lea
jae
push
pushl
lea
jne
pusha
pushf
push
stos
movb
pushf
lea
jmp
sub
pop
pop
cwtl
mov
cmp
dec
cmp
sarb
mov
mov
xchg
sbb
sbb
sbb
xor
add
jle
fcomps
ja
add
add
sbb
stc
fwait
sbb
sbb
outsl
add
ret
scas
je
rol
jae
fcompl
cwtl
into
mov
fidivrl
pop
inc
stos
sub
mov
stos
inc
repz
rorl
mov
mov
lods
sub
daa
add
mov
repnz
movsb
push
imul
cmp
add
pushl
pusha
pushl
pushf
lea
jmp
sub
pushf
call
mov
jp
and
cmpsb
push
imul
add
fisttpl
rcll
int3
mov
mov
mov
mov
mov
fstpt
mov
jo
dec
out
mov
outsl
pushf
addr16
adc
lods
dec
push
mov
sbb
enter
shl
sbb
xchg
sub
rcrb
inc
push
mov
lret
test
in
incl
xor
cld
dec
adc
loope
dec
jp
stc
aaa
hlt
and
daa
xchg
xchg
outsb
mov
test
cwtl
int3
repnz
subb
dec
pusha
and
cwtl
pop
adc
mov
aam
fidivs
add
push
cwtl
pop
cmp
mov
es
lea
pop
mov
testb
or
adc
loop
xchg
fstpl
seta
sbb
push
sbb
push
push
mov
adc
and
and
xor
jp
stc
xor
arpl
jmp
stc
jbe
pusha
gs
mov
fisttpl
pop
loop
outsl
jae
xor
hlt
or
js
lds
xchg
xorb
jle
and
fs
testl
pop
jnp
out
test
mov
sub
fsubl
add
cmp
out
or
pmulhw
roll
stos
jns
cld
or
xchg
fwait
sub
mov
aad
stos
ss
mov
lock
push
lock
fisttpll
bound
xchg
clc
push
into
cmc
sbb
mov
sbb
mov
mov
xor
les
shlb
jecxz
mov
mov
mov
cmp
ret
lods
outsb
mov
jo
out
and
pop
cmpsl
sbb
sbbl
jmp
adc
popa
icebp
adc
mov
or
scas
stos
mov
xor
add
or
cmp
call
sbb
xor
inc
push
loopne
in
jge
leave
lgs
clc
dec
xchg
xchg
rcrb
add
mov
dec
insl
xchg
mov
mov
xchg
xchg
aas
daa
je
stos
imul
push
mov
fwait
sbb
cli
push
jge
fwait
or
stos
cmpsl
out
cltd
das
mov
stos
xchg
ss
ror
mov
sub
js
test
mov
outsl
push
mov
movsb
pop
jge
xchg
clc
loope
xor
sbb
inc
scas
int3
jecxz
add
sbb
cmp
into
xlat
pop
imul
cli
inc
lods
scas
mov
pop
sub
es
jns
xchg
jg
adc
xorb
push
xor
inc
sbb
sbb
fs
mov
inc
stos
and
pop
lret
or
cmpsl
sbb
mov
push
bound
fstpt
insl
pusha
aas
mov
xchg
loopne
nop
or
mov
push
cltd
lea
sbb
mov
adc
xor
mov
rcrl
test
divb
outsl
sbb
or
les
cltd
jg
or
mov
xor
sti
inc
addr16
inc
cmpsl
cmp
adc
cmp
jbe
adc
inc
inc
cmp
jno
into
mov
pop
sbb
fdiv
imul
cmp
sub
jmp
mov
push
cltd
clc
ret
cld
mov
dec
xchg
mov
cwtl
adc
icebp
sub
movsb
fistpl
es
rorb
push
jnp
int
fldt
push
lods
mov
fadd
cmp
ljmp
xor
dec
nop
sub
inc
sbb
stc
pop
sub
mov
or
push
nop
inc
sbb
inc
pop
pop
daa
out
lods
add
inc
mov
or
cmp
pop
push
not
pop
mov
lahf
aam
cmp
xchg
adc
pop
popa
hlt
mov
in
inc
sbb
cltd
test
cld
push
lods
xor
movsl
xor
sbb
add
dec
and
sub
adc
outsb
mov
xchg
sub
mov
xor
dec
dec
es
inc
mov
dec
adc
jp
cmc
adc
cmp
bts
mov
cmp
call
dec
jmp
mov
dec
sub
int
mov
sbb
mov
xchg
fldenv
out
jno,pt
xchg
jp
cmc
fstl
mov
inc
hlt
push
mov
xor
mov
lret
pop
lods
mov
push
jp
cmc
inc
mov
dec
in
mov
cmp
mov
sbb
fcmovnb
test
cmp
pop
fisubrl
test
into
scas
dec
jne
je
sahf
lds
push
cmp
popf
andb
lret
xor
aam
icebp
int
iret
fcompl
push
adc
jge
lahf
mov
icebp
push
mov
jbe
lcall
insb
jb
adc
xor
inc
fists
mov
xor
repz
xchg
movsb
lods
mov
mov
mov
data16
es
adc
push
test
fistpll
and
push
adc
js
xor
popf
or
mov
sub
mov
mov
rcll
push
in
pop
cli
xor
jmp
js
mov
add
xchg
cltd
inc
addr16
nop
jno
mov
incb
jmp
mov
lcall
lret
fildll
rcr
iret
xchg
rol
ret
lret
popf
ja
cmove
test
pop
pusha
cwtl
fdivl
xor
adc
sbb
ret
aaa
enter
ljmp
mov
jp
mov
lret
mov
inc
mov
icebp
pop
cmpl
sub
jns
in
inc
ret
loop
cld
lods
mov
cs
cwtl
jp
pop
inc
ret
loop
mov
push
cmp
pusha
xor
and
cs
mov
clc
aad
pop
das
and
add
pop
popf
out
dec
or
fidivl
mov
daa
pop
dec
and
lea
fwait
and
enter
hlt
xchg
jp
repz
pop
decl
or
lcall
add
mov
mov
test
ret
rcrl
ret
sbb
test
ret
cmp
shrl
push
fxch
sbb
mov
mov
cs
nop
std
mov
mov
pop
cmpsl
lcall
out
inc
in
movsl
push
lock
cmp
rcl
fsubrp
insb
mov
mov
rcll
mul
rcrb
and
out
stos
imul
adc
sub
addl
cmp
repz
pop
lea
jle
pushf
lea
jne
setb
movsbw
cwtl
pushf
movb
movzbw
jmp
inc
jnp
cmc
or
pusha
cli
mov
mov
dec
in
pop
aas
cs
pop
mov
insl
pop
sub
push
push
lahf
call
imul
cmpb
adc
call
leave
push
sub
scas
test
mov
xchg
in
adc
sub
mov
push
inc
pop
pop
dec
mov
mov
arpl
gs
arpl
repnz
dec
sbb
jo
adc
aaa
push
shlb
mov
mov
mov
cmp
js
loopne
inc
inc
dec
adcl
sub
jle
xchg
inc
sub
test
pop
mov
insb
test
hlt
pop
add
pusha
mov
cmpsl
jne
push
out
mov
cmpsl
enter
and
inc
dec
inc
or
xchg
and
push
rcrl
je
negb
cmp
inc
in
lret
mov
and
push
lods
adc
pop
sbb
sahf
pop
fisttpl
repnz
xchg
aad
mov
or
pop
lahf
loop
add
xchg
arpl
jp
lock
fbld
movsb
mov
mov
lret
push
cmp
stos
push
cltd
insb
xchg
repnz
xchg
or
push
lea
mov
xchg
or
out
cmp
ds
jns
mov
fwait
stos
ret
and
mulb
inc
cmp
mov
cld
pop
add
pusha
out
pusha
xor
lds
or
sbb
stos
in
jge
rclb
lods
mov
mov
rclb
cmp
outsb
sarb
clc
sbb
insb
aad
outsl
xchg
cmp
lods
testl
jnp
in
push
imul
bound
inc
pop
mov
jp
mov
push
adc
clc
xchg
addr16
mov
pop
test
sub
inc
inc
dec
pop
cwtl
sbb
push
outsb
bound
jmp
aad
mov
pop
jne
out
loop
clc
lds
es
imul
out
loope
leave
pop
jb
dec
jae
shll
push
add
fisubl
in
xor
int
pushw
js
dec
xchg
outsl
jp
lock
sbb
xchg
fldl
adc
sbb
je
xchg
add
jns
stos
out
jns
mov
out
pop
push
int3
sbb
sub
adc
out
mov
sbb
imul
sbb
aas
push
and
daa
sbb
xchg
cld
mov
lds
mov
add
xor
mov
push
out
or
xchg
mov
ds
ss
and
pop
mov
ja
push
adc
stos
cmp
and
lock
jle
fs
ja
movzbl
movsbl
pop
movsbw
mov
movsbw
pushf
mov
lea
mov
movzbl
mov
movb
mov
not
bswap
call
fistpll
and
mov
lods
pop
cmp
xchg
mov
insb
shl
pop
cmp
dec
xchg
sub
push
xlat
lret
subb
xchg
negl
cmp
filds
aam
outsb
or
push
pop
dec
cmp
shll
js
sub
mov
popf
jae
filds
sbb
pop
loope
add
jg
inc
xchg
jecxz
mov
jp
mov
cmp
inc
dec
es
push
adc
fadds
mov
mov
aad
cli
adc
xor
fucomi
inc
push
call
frstor
lods
jne
lret
xchg
fldenv
aaa
jp
out
and
rcrb
mov
movsl
pop
mov
aad
filds
pop
enter
mov
fnsave
mov
sub
mov
add
xor
es
mov
jmp
sub
adc
dec
pop
jno
imull
stos
or
jp
test
sbb
dec
push
mov
rcrb
sahf
imul
push
mov
sarl
fstps
int
fucom
mov
test
mov
mov
loopne
mov
stos
adc
push
adc
cmp
add
fildl
in
cmp
dec
fwait
jb
sti
jns
popl
out
xchg
in
out
fdivs
mov
jg
push
pushf
test
loopne
inc
inc
out
fisttpl
jns
fsubr
mov
mov
jp
cwtl
cmpsl
les
cli
or
push
imul
cltd
jl
mov
or
or
xchg
movsb
cmp
repz
push
cmp
xchg
aaa
mov
add
je
mov
js
dec
hlt
outsl
adc
inc
sbb
imul
addr16
bnd
in
jmp
inc
pop
xchg
mov
dec
fs
add
fcomps
sub
mov
out
adc
test
and
dec
pop
lret
cmpsb
jg
mov
inc
rol
jp
out
dec
nop
or
mov
or
dec
push
stos
xor
dec
pop
fisttpl
sub
cmpsb
roll
or
in
push
push
push
mov
xchg
test
sbb
das
lock
push
jae
jae
pop
lahf
mov
mov
jnp
and
aam
stos
cld
or
xchg
shll
mov
hlt
or
int3
sbb
xchg
and
lahf
mov
mov
push
sbb
stos
das
mov
insb
rcrl
repnz
jg
jbe
movsb
and
mov
jp
cmp
aad
sub
in
mov
mov
imul
bnd
or
jmp
xor
sbb
shr
setp
std
or
cwtl
cmp
push
iret
pop
out
and
adc
inc
jbe
rclb
mov
ljmp
add
fcoml
mov
leave
jl
sar
jl
mov
cmpsl
jb
popf
mov
std
imul
scas
js
mov
arpl
mov
test
cmp
out
shrl
push
sub
lds
fs
jg
adc
int3
jp
jmp
out
lea
je
pusha
cmp
call
cltd
pushf
hlt
cmc
fwait
push
call
mov
ret
mov
add
or
add
pop
add
fwait
mov
or
cli
sub
cmpsl
dec
push
out
sub
or
jl
push
sbb
add
mov
fildl
push
stc
or
jmp
ret
adc
and
test
test
inc
jp
in
xor
popf
or
or
mov
andl
or
shrl
loop
fidivrs
jl
add
mov
fs
xchg
xor
in
mov
jb
cmpsb
mov
movsl
cmp
scas
xchg
adc
sbbb
addr16
inc
sbb
sbb
xlat
xchg
inc
loop
push
mov
std
inc
rcr
loop
int3
jb
add
sub
lea
fwait
push
repnz
push
fs
addr16
jp
fsubl
gs
ljmp
dec
pop
cmp
int3
stc
mov
lea
iret
repnz
push
xor
pop
aaa
sbbb
xchg
clc
fmul
mov
add
js
flds
pushf
mov
push
push
in
and
shr
and
rcrl
jp
rolb
mov
sahf
mov
ret
icebp
idivl
rclb
sub
sti
add
jp
ljmp
movsb
xchg
ds
or
cmp
push
ss
jns
out
xor
ds
nop
fdivrs
mov
insb
dec
xor
scas
xor
aad
icebp
mov
clc
in
jg
inc
int
clc
popa
sub
ds
repz
das
or
dec
stos
xor
hlt
int
mov
adc
daa
ja
daa
std
inc
sub
mov
jg
mov
or
nop
push
leave
shll
mov
dec
dec
mov
shlb
dec
enter
or
xor
sub
dec
icebp
sub
or
dec
popf
mov
push
fs
hlt
leave
sbb
add
movsb
mov
mov
pop
fists
sbb
xchg
stos
cmp
pop
imul
cmp
pop
out
cmp
push
gs
out
and
or
shll
add
jmp
dec
pop
ja
and
inc
arpl
adc
sbb
push
add
insb
jae
es
addb
add
loope
loope
xor
inc
and
ljmp
dec
xchg
nopl
inc
pop
jp
call
mov
sub
fstpt
cltd
sahf
sub
cmpsl
mov
jp
call
push
pusha
pushl
pushf
lea
jmp
inc
rcr
mov
cmc
clc
cmp
push
pushl
call
clc
ror
movb
not
cmc
pusha
clc
call
scas
neg
fidivs
nop
or
repz
adc
xchg
jnp
ret
and
fmul
fsub
push
je
insb
mov
movsl
sarb
out
jno
lahf
mov
push
out
mov
rcll
sub
adc
sbb
rorl
js
fdivl
stc
lea
movsl
sub
push
or
cmp
ror
jne
jge
xchg
cltd
bound
mov
mov
push
in
xor
and
fs
scas
mov
dec
pop
pop
and
dec
jp
call
cmpsl
dec
push
out
pop
lret
fstpl
jl
dec
cmp
add
mov
xchg
scas
sti
stc
fstpt
repnz
push
sbb
cmp
push
lret
int
push
out
aad
mov
lret
cwtl
mov
push
sbb
stc
xchg
sbb
xor
and
std
bnd
and
push
popa
jmp
adc
mov
inc
add
and
add
loop
ss
inc
mov
inc
xchg
jp
out
dec
shl
cs
and
sub
push
mov
scas
test
ss
jo
push
jne
push
jp
jmp
mov
mov
mov
and
jle
push
popf
jecxz
jp
call
fs
jne
pusha
xor
bt
pop
mov
sbb
not
adc
add
not
shl
push
shl
mov
test
test
cmc
test
pusha
lea
je
call
lret
lret
jp
jecxz
cmp
jp
add
ret
and
pop
movsl
mov
repnz
cltd
pop
add
outsl
fldenv
test
repz
jno
sub
sbb
add
pop
pop
pushf
stos
adc
loopne
add
out
cld
mov
lock
dec
jmp
dec
repnz
mov
push
jp
mov
popf
mov
xchg
sbb
out
mov
ljmp
ret
cmc
bt
movb
cmpb
pushf
movb
lea
jne
aas
xor
bswap
mov
sar
mov
or
add
mov
mov
stc
call
sbb
xchg
lcall
add
in
hlt
push
add
pop
xorl
mov
or
mov
add
jmp
dec
out
fidivrs
xor
sbb
sbb
sbb
and
sbb
mov
push
cltd
cmp
sbb
push
data16
hlt
cmpsb
push
mov
cmpsl
sar
push
out
lret
sub
movsb
add
pop
push
or
or
ds
aas
add
fwait
loope
add
mov
repnz
movsb
jp
movsl
mov
mov
montmul
cmpsb
les
fnsave
mov
cmpsb
mov
inc
cwtl
cli
scas
js
movsl
mov
jp
repz
add
cmpsl
mov
aad
and
mov
or
clc
lret
sbb
pop
stos
outsb
test
dec
jno
xchg
lahf
sub
adc
mov
add
xchg
lcall
xor
adc
fmuls
out
stc
loopne
mov
jp
push
aas
mov
movsb
stos
call
imul
mov
mov
aad
outsb
fwait
dec
aas
scas
ret
mov
mov
add
jbe
into
adc
and
call
cltd
sbb
push
sarl
and
popf
scas
cltd
add
fadd
mov
add
mov
xor
lahf
insl
mov
lods
fs
mov
xor
popf
popf
xchg
out
data16
or
fidivrl
lds
lcall
aad
pop
arpl
lret
aas
add
mov
rcrl
leave
push
popa
cmp
jge
popa
and
dec
fsubp
lods
jl
into
movsl
jp
in
push
sub
ficompl
out
ret
iret
inc
sub
mul
or
dec
jns
xchg
mov
repnz
mov
mov
cwtl
mov
data16
cmpsb
adc
and
int3
push
pop
xchg
cmp
imulb
push
sub
xor
dec
xor
cmpsb
pop
ja
cmpsl
jle
xor
in
add
jg
sub
inc
dec
fwait
and
mov
dec
push
movl
cmp
les
test
jp
lods
test
js
nop
push
and
cs
cmpb
shl
or
mov
call
fsubl
xchg
mov
pop
lock
mov
aas
ja
dec
ret
rcll
test
sbb
xchg
mov
ljmp
sub
pop
rcr
data16
mov
mov
fimull
inc
adc
mov
dec
mov
ljmp
adc
imull
fucom
sub
fbld
cmp
divl
mov
pop
mov
popf
add
lods
pop
loop
movsl
out
jns
cmovg
mov
xchg
jp
jecxz
push
aas
mov
xchg
mov
imull
xor
or
and
mov
adcl
cmp
mov
xchg
fidivs
pop
and
stos
cmpl
push
jns
push
jg
ret
mov
or
jno
xor
mov
inc
imul
aad
outsb
aaa
add
add
mov
fcompl
mov
stos
shrl
mov
call
mov
mov
pop
idivl
mov
mov
les
lcall
xchg
or
lret
pop
addr16
imul
cmp
scas
mov
fldt
xchg
push
lahf
out
pop
dec
stos
mov
pop
mov
and
loope
pop
add
and
xchg
lcall
or
subb
fnstcw
push
xor
cmp
std
shr
test
es
and
jl
push
sub
cmp
dec
cwtl
pop
sub
aaa
rorb
push
out
jp
loop
in
popf
jl
pop
cmpsb
int3
mov
sbb
fsubrl
and
out
mov
xchg
add
std
loopne
in
cld
or
out
mov
sub
movsl
push
xchg
jo
pop
pusha
dec
std
fbstp
jnp
xchg
cmc
jp
loopne
pop
adc
pop
dec
ljmp
bound
push
mov
xchg
imul
in
mov
sti
xor
sahf
mov
rcrl
js
jg
outsl
push
or
and
fucomp
inc
cmp
loop
mov
add
mov
testl
and
fcoml
sbb
lret
andb
mov
movsb
lock
int
ss
sarl
cmp
xchg
fnstsw
lock
push
loope
xor
loop
mov
dec
dec
hlt
vlddqu
cmc
inc
insl
call
flds
push
loopne
or
push
add
add
add
mul
cmc
lods
push
mov
or
xchg
add
jp
jecxz
jo
sbb
dec
lods
in
sbb
cmpsb
ja
loopne
push
jp
test
fs
movsb
add
es
sarb
or
jae
mov
aam
lcall
push
ljmp
imul
jp,pt
loope
sarb
fcoms
aaa
push
leave
inc
push
andl
jb
mov
testl
pop
pop
pop
xchg
fiadds
lods
cmp
xchg
dec
clc
inc
in
xlat
lds
sarb
in
and
f2xm1
mov
add
mov
insl
enter
adc
leave
mov
fcoml
mov
adc
mov
or
and
aam
jp
loopne
pop
inc
mov
inc
inc
jmp
pushf
jmp
clc
cmp
jno
pop
arpl
out
mov
inc
call
fsubs
or
push
cltd
outsl
mov
jae
call
push
clc
cltd
dec
rcrb
rorl
adc
fs
mov
pop
push
andl
cltd
or
jno
sbb
jns
fimuls
ss
lcall
or
popf
adc
pop
mov
jbe
cmpl
sbb
add
jecxz
nop
out
loopne
dec
shll
push
sbb
pushf
inc
and
test
mov
pusha
out
je
lret
fsubs
and
mov
sti
cli
xchg
lea
jae
call
movb
movl
call
pop
sbb
into
cmpsl
sarb
iret
adc
gs
imul
cmp
rcrl
gs
sub
mov
shll
test
mov
pop
jne
imul
std
sbbb
ljmp
dec
scas
mov
pop
stc
adc
and
lret
sub
pop
cmp
jp
xchg
and
in
sbb
jo
es
repz
push
clc
sbbb
mov
mov
lret
pop
mov
mov
mov
sarl
stos
addr16
mov
repz
ret
sub
pop
jle
imulb
stos
xorb
ss
ficompl
mov
sbb
outsl
mov
dec
mov
test
imul
sbb
test
sbb
pop
xlat
jle
push
popa
inc
cmp
fimull
in
stc
adc
ss
test
mov
ljmp
sub
inc
push
jp
filds
push
sub
aam
and
sub
ja
mov
vorps
xor
jle
iret
mov
or
sub
int3
popf
loopne
outsl
lcall
mov
pusha
or
test
adc
movsl
sub
ret
aaa
jp
fimuls
loope
cltd
bound
add
bound
filds
fidivrl
dec
xchg
inc
fldcw
jle
gs
and
sbb
xchg
mov
outsb
adc
std
fwait
sub
clc
bound
rcl
stc
imul
mov
loopne
dec
dec
sbb
add
inc
repz
cmc
es
mov
stc
mov
inc
cmp
add
sbb
mov
jnp
adc
mov
movsl
das
mov
jp
fimuls
cmp
imul
push
push
mov
xchg
cmp
push
ds
mov
or
xchg
sub
pop
xchg
pop
adc
ret
jge
stos
test
out
sarb
add
repz
xchg
jle
mov
mov
fnstenv
inc
pop
sbb
sub
sbb
cltd
loopne
sbb
pop
das
sbb
cltd
push
arpl
adc
pop
imul
leave
xchg
xchg
sahf
push
push
daa
std
sbb
jl
popf
inc
out
adc
lea
ret
test
test
js
popl
out
xchg
add
fwait
test
xchg
rorl
mov
inc
or
xchg
or
push
jnp
dec
adc
pop
test
cltd
and
xor
das
mov
gs
nop
lock
xchg
mov
or
inc
orl
push
mov
mov
xchg
test
sbb
xlat
or
jnp
sti
or
fsubr
cmpsb
sbb
and
rclb
lods
nop
jle
iret
clc
daa
aam
push
lret
scas
mov
arpl
mov
decb
popa
out
pop
sub
mov
mov
popf
sub
ss
xor
and
bnd
outsb
das
cmp
adc
sbb
cwtl
xlat
popa
clc
popa
xor
rcrb
inc
jo
mov
outsb
iret
cmp
daa
int3
cs
mov
jmp
les
sbb
mov
imul
dec
or
jae
int3
in
add
fnsave
and
mov
dec
cwtl
mov
dec
push
mov
pop
lods
aaa
add
iret
bound
hlt
dec
push
data16
xor
mov
pop
das
int
mov
fildll
cmp
and
bound
faddl
dec
lret
pop
imul
neg
aad
aaa
les
jl
xchg
pop
popa
es
jg
aam
scas
ja
jp
fildl
or
and
mov
push
lret
mov
cmp
push
lea
xchg
stos
popa
in
inc
in
iret
pop
xor
mov
loopne
loope
adc
iret
lea
jns
push
fcmovnb
fnstsw
sub
mov
jp
pop
mov
sub
mov
or
fisubrs
xchg
and
mov
shlb
pop
imul
mov
nop
fnstsw
pusha
mov
mov
sub
dec
and
jns
mov
mov
scas
ss
adc
sbb
loop
sub
push
into
dec
mov
cltd
jae
sub
cmpsl
minps
int
jo,pn
cmp
pop
mov
shrd
shlb
into
pop
pop
mov
push
add
inc
lahf
and
into
jmp
cld
xor
xor
andl
sbb
push
jecxz
lahf
ds
pop
push
sbbb
repnz
pmaxub
fnstenv
and
call
orb
pop
xchg
xor
mov
sarl
or
pop
and
mov
push
les
push
cli
mov
ss
leave
movsl
xor
lahf
and
das
int
add
mov
fistpl
lds
mov
movsb
pusha
sbb
sbb
clc
imul
add
push
outsl
repnz
mov
out
and
push
insl
adc
push
imul
jmp
enter
sub
add
jp
fxch
adc
xor
shll
ret
imul
ficoml
cld
nop
loope
lods
pop
mov
push
xor
inc
pop
mov
pop
mov
cltd
xchg
decl
sbb
cltd
cmp
cltd
xlat
lret
xchg
push
sub
enter
or
aam
lcall
loopne
out
repz
mov
add
xlat
data16
mov
addr16
in
out
sbb
iret
push
clc
data16
sbb
xor
sub
imull
lods
inc
xchg
in
add
out
jne
int3
cmpsl
sahf
imul
add
mov
sbb
pop
mov
imul
jg
test
mov
stos
xchg
je
js
mov
pop
xchg
xchg
mov
das
int3
adc
arpl
mov
out
sub
add
xor
ja
cmpsl
or
xor
pop
adc
push
cmp
xchg
push
std
sub
and
pop
call
fistpl
xchg
pop
fbstp
je
push
jp
flds
addr16
test
inc
or
or
mov
icebp
mov
mov
push
sbb
int
pop
stos
push
inc
mov
repz
adc
jecxz
dec
push
push
sbb
in
repz
fldenv
es
daa
sahf
push
dec
mov
rorl
inc
mov
or
popf
push
pop
in
loope
arpl
rcrl
sub
and
pushf
mov
test
xchg
pop
mov
rorb
sbbl
out
mov
jle
insb
mov
adc
jecxz
xor
cmp
mov
sub
cwtl
xor
jecxz
add
pop
xlat
repnz
cmp
dec
mov
aas
push
add
loopne
popa
mov
and
add
jle
lods
test
aad
scas
add
and
cmp
lods
inc
dec
daa
clc
pop
push
mov
jo
jno
adc
data16
pop
dec
dec
cwtl
and
int3
ja
das
loopne
sbb
dec
mov
fwait
out
cli
sarb
rcr
jnp
daa
addb
or
cmp
sub
adc
adc
push
insb
and
ret
add
scas
mov
adc
mov
jnp
ss
add
add
mov
pusha
test
cmc
add
cmc
mov
call
int
lock
inc
int
inc
rorb
int
movsb
add
sbb
mov
xor
cmp
adc
sub
mov
cmpsl
jl
or
inc
aam
mov
jo
xor
loopne
dec
cmpsl
rorl
inc
cli
out
shlb
fcoml
mov
fsub
lods
cmp
push
ds
jp
xlat
aas
mov
pushf
pushl
ret
insb
push
sbb
push
sub
cmp
js
adc
scas
hlt
fistpll
dec
aad
jmp
jl
or
pop
xor
push
scas
hlt
fisttps
xchg
xchg
jbe
add
sbb
xor
jmp
pop
enter
xchg
add
sub
dec
mov
mov
adcl
dec
push
pop
mov
fsts
repnz
ja
jle
loop
pop
fcoms
xchg
xchg
jmp
js
lret
mov
inc
jmp
add
xlat
pop
xchg
lods
stos
mov
xchg
es
sub
imul
dec
mov
nop
xchg
add
scas
or
dec
xlat
add
dec
ja
or
mov
in
loope
enter
aas
add
rcrb
fwait
lock
or
jp
xor
jl
insb
das
inc
bound
and
jecxz
jo
mov
jecxz
mov
les
jne
xor
in
xorl
cwtl
fadd
sbb
call
dec
cltd
rcrl
fsub
dec
mov
pop
lcall
adcb
popf
xor
jecxz
dec
and
pop
jne
adc
test
out
insl
and
movsl
jecxz
xor
into
aaa
stc
and
mov
and
loop
jnp
pop
pushf
movsl
icebp
mov
inc
rcl
insb
xor
mov
xor
jecxz
pushf
adc
pushf
pushf
pushf
pushl
ret
sub
fcomip
dec
jl
js
sbb
push
xchg
dec
xchg
ret
cmp
shlb
in
idivb
jge
testb
sbb
xchg
imul
fwait
push
shrl
push
adcl
mov
fadds
lods
push
lahf
test
mov
test
jns
mov
test
lar
push
inc
sbb
mov
imul
and
jo
testl
shll
aam
inc
xchg
jbe
pmulhw
inc
lock
popf
lea
es
mov
not
les
push
in
in
jo
sahf
int
and
push
mov
sahf
in
cltd
insl
test
test
xlat
and
in
jmp
popa
cwtl
bound
mov
inc
mov
add
mov
lock
jl
and
addb
sub
jp
aaa
mov
pop
cmp
add
lods
or
dec
xchg
push
pop
add
xor
fnstsw
pop
inc
mov
arpl
mov
push
cwtl
cs
mov
jp
aam
sbb
mov
and
adc
ja
bswap
mov
pushf
pushl
movw
push
lea
jmp
aam
push
mov
mov
add
or
sbb
scas
and
push
dec
nop
adc
jbe
insb
and
xor
push
xlat
js
pop
inc
and
incb
mov
sahf
add
xor
pop
outsl
add
mov
repnz
cmp
sub
inc
pop
rorl
sbb
mov
jmp
test
jne
jecxz
mov
pop
xchg
in
mov
int3
dec
sub
pop
xor
xchg
fcomip
mov
ljmp
fildl
or
sub
fdivr
enter
rorb
bt
cmp
call
adc
in
or
arpl
hlt
gs
cld
push
or
in
cmpsb
lock
cmp
sti
mov
or
mov
pop
sbb
sti
ljmp
and
mov
insb
inc
push
je
cld
cmp
in
lret
push
xchg
mov
pop
or
arpl
push
and
inc
loop
push
sarl
adc
stos
gs
movhps
cmpsb
es
push
bound
cli
bound
sar
inc
and
fs
call
stc
cmp
push
call
sbb
test
cltd
lock
cmp
aas
out
shr
jge
lock
fs
adc
sub
push
addr16
repnz
mov
adc
sub
andps
add
push
mov
or
lock
movsl
lret
jmp
jb
je
insb
sbb
movsb
into
fs
loope
add
jbe
push
xor
lds
notl
into
pop
icebp
or
inc
cmpsl
dec
push
xchg
loopne
in
and
nop
stos
sbb
lcall
adc
insb
mov
mov
sub
aaa
hlt
movsl
dec
call
mov
push
mov
pushl
lea
jmp
push
pushf
mov
push
mov
call
cmp
pushl
cmc
bt
add
cmp
popf
push
movw
movb
lea
jmp
lea
movb
pushf
mov
movl
movb
lea
jmp
mov
lea
rcl
mov
movl
call
lea
jo
push
dec
cmc
push
pushf
jmp
add
push
jmp
rep
std
mov
shl
mov
test
clc
pushl
popf
push
mov
pushf
push
lea
jmp
neg
pushf
mov
pushl
bswap
clc
add
test
sub
test
pushf
test
mov
clc
call
pushl
popl
movb
mov
pushf
lea
jmp
mov
cmp
test
bswap
bt
mov
add
jmp
call
cwtl
clc
pushf
sub
push
jmp
stc
jmp
mov
push
pushf
pusha
mov
call
jmp
push
mov
jmp
bt
pushf
bts
ror
mov
cmp
shl
bsr
sub
xor
dec
not
inc
pushf
ror
pusha
not
add
movsbw
and
neg
cmp
xor
inc
jmp
pusha
mov
mov
pusha
pushf
lea
jmp
jmp
push
stc
pushf
not
cmp
not
bt
clc
clc
sub
cmc
bt
pushf
and
pusha
push
mov
jmp
mov
push
mov
pushf
mov
pushf
pusha
pushf
lea
jmp
jmp
push
push
pushl
popl
pushl
pushf
push
lea
jmp
sete
mov
jmp
call
jmp
pusha
mov
call
mov
call
xor
pusha
inc
pushf
push
ror
stc
push
bt
neg
cmp
cmp
xor
movw
call
test
add
push
call
push
push
mov
call
mov
pushf
cld
call
jmp
mov
pushf
mov
lea
jmp
jmp
pusha
mov
push
pushf
pushf
call
cwtl
push
bt
clc
sub
call
cmp
bt
sub
mov
pushf
pushf
call
pushf
popl
movb
jmp
push
pushf
popl
jmp
call
push
pusha
mov
push
jmp
pushf
pushf
pusha
movw
mov
pushf
pushf
pushf
lea
jmp
mov
sbb
shr
cmp
sbb
add
pusha
mov
jmp
and
mov
sub
bt
xor
cmp
mov
test
pushf
bt
sub
bt
bt
jmp
mov
mov
rcr
mov
bt
cmc
bt
not
cmc
push
not
pusha
and
call
mov
push
push
push
pushf
lea
jmp
and
pusha
mov
mov
call
jmp
jmp
or
and
mov
dec
bt
jmp
lea
cmc
bswap
jmp
call
jmp
and
mov
movb
call
lea
js
push
pushf
popl
pusha
pushl
popl
mov
pushf
lea
jmp
push
lea
push
push
call
cmp
stc
and
clc
bt
cmp
pushf
pushf
pushf
pushl
lea
jne
not
push
xorb
lea
movzbw
bswap
movsbw
mov
pop
pushf
pusha
push
lea
jmp
mov
push
lea
jmp
bswap
lea
call
pusha
mov
pusha
push
mov
lea
jns
push
push
push
mov
pusha
mov
push
lea
jmp
pusha
pusha
mov
call
cmp
call
pushf
mov
mov
push
mov
movb
lea
jmp
pusha
rcr
notl
shrd
mov
clc
sub
test
stc
bt
pushl
and
pushf
mov
pushf
pushf
popl
jmp
clc
neg
xor
mov
stc
sub
pushf
clc
add
pushf
call
mov
pushf
pushf
lea
jmp
call
bsf
sub
call
shl
shld
sub
clc
cmp
push
xor
rcr
movzbw
bswap
rol
setge
movzbw
movzbw
lea
shld
movzbw
pushl
sub
pushf
clc
lea
sub
sar
or
mov
rol
add
jmp
mov
pusha
jmp
pushf
pushf
add
pushf
mov
pushl
mov
lea
jmp
push
push
jmp
xor
call
add
pushl
xor
movb
mov
clc
add
test
cmc
jmp
push
pushf
popl
pushf
push
mov
pushl
popl
push
lea
jmp
mov
pushl
pushf
movl
mov
lea
jmp
movsbw
mov
call
bsr
mov
test
mov
cmp
mov
mov
cmc
add
cmp
pusha
stc
jmp
stc
movb
jmp
mov
cmp
pushl
clc
bt
add
cmc
test
sub
jmp
pushf
call
mov
movzww
cmc
cmc
stc
xchg
pushf
add
mov
push
inc
bt
pushf
pusha
ror
add
je
cmp
pushf
add
clc
jmp
bswap
mov
mov
lea
push
bswap
pushf
mov
pusha
pushf
push
pushl
lea
cpuid
push
sub
cmc
mov
cmpl
jmp
pusha
pushf
popl
jmp
pushl
popl
mov
movb
pushl
push
lea
jmp
sar
mov
add
add
call
pusha
movzbl
cmp
clc
clc
test
xor
movb
add
bt
pushf
clc
pushf
not
mov
add
cmp
jmp
mov
mov
lea
jns
pushf
pushf
popl
push
pushf
pushl
pushl
popl
push
lea
jmp
mov
jmp
bswap
cmp
stc
mov
push
pushf
clc
add
mov
lea
jmp
push
xor
stc
jmp
pushf
pushf
mov
pushf
pusha
lea
jmp
xchg
jmp
mov
clc
bt
sub
push
jmp
rcl
mov
rcr
cmp
pop
clc
pop
sub
setno
pop
lahf
cltd
shld
pop
aam
bswap
neg
pop
aad
adc
add
std
pop
xor
bswap
bts
popf
cwtl
sets
cwtl
jmp
sbb
sar
rcl
mov
clc
sub
push
mov
mov
pusha
push
mov
lea
jmp
btr
shld
mov
movsbw
add
xor
xor
bt
call
dec
mov
test
cmc
test
xor
bt
cmp
bt
cmc
sub
cmp
jnp
clc
bt
neg
pusha
mov
pushl
pushf
dec
cmc
xor
jmp
mov
pushf
mov
pushf
mov
pusha
mov
pushf
mov
movw
movb
pushf
lea
jmp
dec
stc
cmp
stc
xor
bt
xor
mov
mov
stc
sub
call
dec
pushf
jmp
pusha
movw
xchg
pushf
pushf
movl
pushf
lea
jae
push
push
push
pusha
pushl
ret
neg
movw
call
clc
movb
call
mov
movw
pushl
pushf
pushf
popl
pushf
pushf
pushl
popl
mov
mov
pushf
movb
lea
jmp
push
call
jmp
jmp
lea
je
bt
call
shld
push
push
movw
pushl
mov
jmp
push
mov
pushf
movl
jmp
xadd
ror
rcr
call
clc
pushf
cmp
add
jmp
mov
pushl
pushf
pushf
push
lea
jmp
push
mov
push
pusha
pushl
mov
lea
jmp
call
pusha
pushf
popl
call
pushf
popl
jmp
call
push
bt
cmc
jmp
shl
test
shr
cmp
push
or
call
call
jmp
pusha
mov
call
jmp
pushl
popl
movl
pushf
pushf
lea
jmp
mov
movl
movw
movb
mov
lea
jmp
add
jmp
jmp
push
call
movb
push
movb
pushl
popl
push
lea
jmp
mov
pushl
jmp
jmp
add
jmp
jmp
pushf
mov
movl
mov
pushf
mov
mov
pushf
lea
jmp
pushf
push
lea
ja
shr
daa
mov
dec
lea
bsf
sub
aam
setl
call
mov
pushf
pushf
pushf
mov
lea
jmp
pushf
popl
pushl
pushl
popl
movb
lea
jmp
push
mov
lea
jp
pusha
pusha
pushl
pushf
popl
lea
jns
pusha
pusha
push
pushl
popl
movb
movb
lea
jmp
call
mov
call
movw
jmp
stc
cmp
cmp
sub
push
pushf
call
sar
cmc
bts
ror
add
not
shrd
neg
stc
ror
cmc
sbb
and
sbb
shld
cmc
bts
mov
clc
add
je
pusha
mov
pushl
pusha
movw
lea
jmp
bt
jmp
call
mov
push
call
movw
bswap
jmp
call
aaa
aad
jmp
clc
mov
dec
neg
cmc
mov
clc
test
add
push
call
pusha
shr
mov
mov
push
pushf
popl
mov
push
call
push
jmp
pusha
pusha
mov
movb
mov
jmp
jmp
jmp
mov
pusha
jmp
not
mov
adc
jmp
mov
movw
mov
pushl
lea
jmp
mov
pushf
lea
jmp
mov
mov
mov
pusha
pushl
push
pushf
lea
jmp
jmp
bt
call
pusha
mov
movw
pushf
mov
lea
jmp
mov
pushf
jmp
call
call
clc
sub
push
pusha
lea
jmp
and
cmc
mov
rcr
add
sub
push
sub
xor
lea
bsf
ror
rol
mov
jmp
bt
movzbl
push
add
add
pushf
clc
rcl
neg
pushl
bswap
btc
ror
pop
bt
push
and
btr
stc
pop
inc
mov
clc
cmc
push
cmp
sub
call
mov
mov
push
mov
push
sete
mov
pusha
mov
pusha
mov
xchg
lea
setno
movsbw
mov
lea
repz
shl
btr
push
pushf
clc
mov
shr
bswap
sbb
rcl
push
rcl
btr
shr
bswap
push
shrd
rcl
lea
pushl
ror
cmc
push
shrd
not
ror
sub
mov
call
mov
add
call
pushf
mov
call
jmp
call
cmc
xor
test
jmp
neg
cwtl
clc
mov
clc
pusha
add
pushf
mov
pusha
pushf
call
pushl
mov
call
jmp
pushl
popl
pushf
pushf
pushl
lea
jmp
shl
bt
mov
cmp
pusha
add
pushl
push
pushf
push
lea
jmp
pushf
mov
push
pushf
movb
movb
pushl
ret
shll
dec
jle
jle
aaa
jle
mov
jle
xchg
jle
test
jle
mov
jle
jns
jle
jge
jle
jge
jle
jge
jle
jge
jle
mov
jle
jle
jle
mov
jle
js
jle
aaa
jle
jle
jle
jle
jle
mov
jle
mov
jle
jbe
jle
mov
jle
test
jle
jle
jle
xchg
jle
mov
jle
js
jle
jno
jle
mov
jle
jne
jle
mov
jle
mov
jle
mov
jle
jp
jle
jle
jle
mov
jle
mov
jle
js
jle
mov
jle
jg
jle
jg
jle
jg
jle
jg
jle
jbe
jle
jle
jle
jns
jle
jno
jle
jns
jle
je
jle
jne
jle
jp
jle
mov
jle
jae
jle
mov
jle
jns
jle
mov
jle
mov
jle
xorb
adc
aaa
jle
xchg
jle
xchg
jle
aaa
jle
jnp
jle
js
jle
jle
jle
jle
jle
xchg
jle
jae
jle
jne
jle
mov
jle
jge
jle
jge
jle
jge
jle
jge
jle
jne
jle
mov
jle
xchg
jle
jp
jle
mov
jle
jle
jle
jnp
jle
mov
jle
jns
jle
xchg
jle
xorb
mov
aaa
jle
mov
jle
jne
jle
jle
jle
js
jle
jbe
jle
jbe
jle
xorb
fwait
mov
jle
xchg
jle
mov
jle
mov
jle
ja
jle
jae
jle
js
jle
xorb
test
jg
jle
jg
jle
jg
jle
xorb
cmc
jbe
jle
mov
jle
jne
jle
jns
jle
js
jle
mov
jle
jbe
jle
jns
jle
jne
jle
test
jle
jno
jle
jle
jle
lea
jle
jae
jle
mov
jle
mov
jle
xchg
jle
mov
jle
js
jle
xchg
jle
jp
jle
jne
jle
xchg
jle
mov
jle
ja
jle
lea
jle
jae
jle
jge
jle
jge
jle
jge
jle
jge
jle
mov
jle
mov
jle
test
jle
xchg
jle
jg
jle
mov
jle
jne
jle
jne
jle
xchg
jle
mov
jle
jp
jle
jns
jle
jle
jle
jp
jle
jnp
jle
xchg
jle
mov
jle
jbe
jle
js
jle
xchg
jle
mov
jle
jle
jle
test
jle
lea
jle
jle
jle
jp
jle
mov
jle
jne
jle
jg
jle
jg
jle
jg
jle
jg
jle
xchg
jle
jne
jle
jns
jle
aaa
jle
mov
jle
jns
jle
lea
jle
jp
jle
mov
jle
mov
jle
xchg
jle
lea
jle
jle
jle
jle
jle
lea
jle
xorb
aaa
jne
jle
jle
jle
xchg
jle
lea
jle
mov
jle
jg
jle
xorb
insl
jle
jle
js
jle
jns
jle
jle
jle
jg
jle
jge
jle
jge
jle
jge
jle
jge
jle
xchg
jle
mov
jle
xchg
jle
mov
jle
jle
jle
mov
jle
jbe
jle
jae
jle
aaa
jle
jle
jle
mov
jle
jns
jle
xchg
jle
ja
jle
jle
jle
lea
jle
ja
jle
mov
jle
jp
jle
mov
jle
jne
jle
jne
jle
mov
jle
jle
jle
test
jle
jbe
jle
jns
jle
xorb
test
jg
jle
jg
jle
jg
jle
ja
jle
xchg
jle
jne
jle
jbe
jle
jne
jle
jle
jle
lea
jle
xchg
jle
jbe
jle
mov
jle
mov
jle
jne
jle
xchg
jle
mov
jle
xchg
jle
aaa
jle
jle
jle
jne
jle
test
jle
jp
jle
clc
cbtw
cmc
cmc
stc
cwtl
jmp
mov
cwtl
lahf
mov
bswap
sets
lahf
not
mov
jmp
jmp
pushf
mov
pushf
push
lea
jmp
jmp
pushl
popl
push
pushf
pusha
lea
jmp
sub
jmp
pusha
ror
pop
xchg
movzbl
pop
not
cmp
xor
cmc
pushl
sub
bsr
rcl
bt
neg
pop
shl
ror
xor
shl
shl
cmc
add
clc
shrd
bsr
test
xor
dec
movzbl
stc
bt
test
mov
pushf
stc
test
or
mov
call
lea
call
mov
movw
mov
pushf
pushf
lea
jmp
push
pusha
mov
call
pushf
push
jmp
neg
pusha
mov
jmp
bswap
pusha
mov
pusha
pushf
jmp
pushf
mov
call
push
lea
jbe
popl
push
pushf
movw
lea
jmp
mov
pushf
push
pushf
lea
jmp
call
mov
movsbw
lea
cld
cld
mov
call
clc
shr
pusha
pushf
pushf
call
js
pushf
push
call
pushl
mov
pushf
mov
pushf
mov
movb
lea
jmp
jmp
jmp
btc
mov
cmp
mov
bt
cmc
push
cmp
add
pusha
pusha
pushf
mov
movb
movb
pushf
lea
jmp
rdtsc
bsf
shld
mov
btc
mov
call
rcl
mov
rol
pusha
mov
cmp
bt
cmc
sub
push
shr
pushl
jmp
rcr
ror
push
inc
mov
pushf
stc
clc
add
push
jmp
jmp
pusha
mov
mov
push
lea
jmp
mov
call
call
mov
bswap
neg
mov
cmp
ja
clc
stc
add
call
pushf
call
mov
pushf
push
mov
pushf
lea
jmp
mov
push
pushf
call
call
cwtl
shld
lea
stc
jmp
lea
jne
clc
bt
pushf
cmp
xor
call
stc
movzbl
bt
xor
bt
stc
clc
cmc
sub
jae
neg
pushf
call
dec
movb
clc
push
xor
pushf
xor
cmp
cmp
clc
test
cbtw
cmp
pusha
jmp
pusha
setae
mov
clc
mov
movb
sub
stc
bt
shl
pushf
pushf
pushf
mov
lea
jbe
pushf
pushf
pushl
popl
push
pusha
movl
push
lea
jmp
jmp
adc
lea
or
cwtl
mov
call
rcr
adc
not
mov
clc
jmp
mov
pushl
lea
jmp
lea
jne
push
pushf
inc
push
cmc
cmc
ror
cmp
pushl
pusha
lea
stc
bt
pushf
add
pushl
pushf
add
pushl
push
cmp
cwtl
test
sub
jmp
pop
pushf
jmp
mov
pushf
lea
jmp
mov
movw
push
pushf
lea
jmp
mov
pusha
lea
jmp
jmp
and
bsr
shrd
lea
pop
sub
bswap
mov
push
pushf
popl
pushf
mov
mov
xchg
std
mov
call
call
push
pusha
mov
pushf
push
mov
lea
jmp
call
mov
push
pushf
push
lea
jmp
call
pushf
pusha
stc
add
pushf
bt
movb
test
add
clc
sub
jmp
pushf
call
pusha
push
mov
pushf
mov
call
mov
push
jmp
xadd
jmp
mov
pusha
mov
movb
mov
mov
push
pushf
mov
mov
mov
push
lea
jmp
mov
call
push
lea
jne
bsf
shl
bt
mov
call
add
add
btr
bt
setb
and
mov
test
neg
movsbw
mov
call
pushl
popl
pushf
pushf
movb
lea
jmp
xor
shr
add
and
bt
sar
or
not
jmp
pushf
mov
push
pusha
movb
jmp
pusha
mov
pushf
pushf
pushl
popl
pushl
lea
jmp
push
pusha
pushl
popl
push
lea
jmp
or
rdtsc
pushf
test
mov
push
sub
mov
call
rcl
shl
bt
das
mov
sub
cmp
mov
rcr
shl
adc
pusha
mov
clc
add
stc
cmc
cmp
mov
shrd
jmp
movl
call
pusha
cmc
add
test
cmc
movb
call
clc
sub
movb
lea
jg
push
movb
mov
pusha
mov
pushf
mov
lea
jmp
xor
pushf
push
inc
pushf
pushf
pushf
push
decl
pusha
mov
pushl
lea
jne
pushf
mov
pushf
jmp
bt
rol
bsf
mov
shl
pushf
or
test
mov
cmc
call
jmp
bswap
rol
or
push
sar
not
sub
setp
shr
add
pop
stc
neg
movzbl
movsbl
pusha
rcl
rcr
lea
call
push
pushf
call
push
movl
call
rcl
bts
aam
bsr
movzww
clc
xchg
cmp
add
call
xor
jmp
jmp
mov
sub
inc
mov
pushf
cmp
cmc
bt
sub
cmp
jmp
push
call
push
pusha
mov
jmp
pushf
push
mov
push
pushl
popl
movw
pushf
pushl
lea
jmp
pusha
mov
pushf
lea
jmp
pushf
pushf
pusha
pushf
popl
pushl
pushf
call
cmc
mov
bt
bt
pushf
cmp
sub
movw
add
jmp
jmp
add
shrd
cmc
mov
push
bt
movw
sub
stc
cmc
cmc
cmc
add
jmp
push
pushf
popl
jmp
jmp
pusha
mov
stc
xor
push
cbtw
pushf
bt
cwtl
cmp
call
jle
pusha
movw
mov
pushf
movb
pushf
lea
jmp
pushf
popl
pushf
pushf
pushf
pushl
popl
push
movb
lea
jmp
mov
pusha
lea
jmp
push
sub
movw
shl
call
add
jmp
movl
push
mov
pusha
mov
mov
push
lea
jmp
shrd
dec
shr
mov
pusha
mov
stc
sub
pushf
pushf
shl
jmp
xor
bt
xor
call
jmp
push
mov
mov
movb
movw
mov
lea
jmp
pushl
call
mov
mov
mov
pushl
pushf
lea
jmp
mov
push
movb
lea
jmp
pushl
mov
pushf
pushf
mov
call
call
pushf
movw
pushf
popl
call
cmp
mov
pusha
add
pushf
push
pushl
mov
mov
push
lea
jmp
pushf
movb
inc
jmp
push
pushf
mov
pushf
pushl
ret
movl
mov
push
push
pushf
pushf
lea
jmp
add
call
neg
sbb
bt
jmp
call
push
pushl
popl
pushf
movb
lea
jmp
push
ror
test
clc
lea
jmp
pushl
popl
movb
pushf
lea
jmp
divl
jmp
clc
stc
mov
clc
test
sub
call
push
mov
movb
lea
jmp
mov
pusha
mov
push
jmp
setns
mov
setno
cwtl
mov
movzbw
pushf
bswap
mov
pushf
pushl
ret
sub
call
mov
sub
mov
pushf
mov
push
pushl
pushl
pushl
lea
jmp
mov
mov
movb
movw
pusha
lea
jmp
