push
push
add
pusha
jo
add
sbb
ret
add
adcb
shlb
rcrb
fstl
pop
ret
pusha
nop
add
in
and
push
push
pop
push
lea
push
push
add
inc
sbb
sar
rorb
not
sub
mov
or
shr
rep
ret
adc
loope
pop
movsb
xor
mov
or
push
inc
jle
repnz
cmp
cmp
or
pop
lea
pushf
and
jns
adc
sbb
enter
pop
or
in
mov
add
pushf
orl
cli
jne
push
pop
or
call
push
mov
pop
and
les
push
add
push
and
xor
sub
push
add
addr16
dec
test
test
sqrtps
and
lea
adc
push
cld
mov
add
xor
mov
push
loope
and
push
std
jl
or
jne
jmp
or
ret
add
daa
sub
or
jo
sub
sub
cltd
inc
cwtl
decb
cmc
dec
in
pop
pusha
loopne
lea
push
push
notb
push
in
je
cld
cmc
pop
fimull
xor
push
xor
push
push
add
and
push
adcl
fimull
cmp
xor
pop
push
mov
adc
mov
pop
cli
push
rcrl
push
movb
or
mov
mov
and
and
and
and
call
arpl
dec
stos
push
sbb
test
insb
xchg
sub
adc
test
rorb
iret
lahf
adc
pop
sbb
adc
or
std
dec
mov
xor
push
call
and
in
inc
insb
nop
sbb
jmp
sarl
aad
stos
inc
and
xchg
scas
mov
adc
push
add
pushf
sbb
add
pop
adc
icebp
xchg
cmp
aad
inc
pop
std
adc
jb
add
push
xor
ror
mov
xchg
mov
push
imulb
fisubrs
add
dec
out
push
lods
jbe
jne
push
repz
jecxz
and
shll
push
add
insl
inc
sub
adc
mov
adc
fmul
insl
adc
sbb
push
sbb
clc
adc
add
push
and
or
adc
aad
push
mov
pusha
xchg
hlt
pop
inc
and
imul
outsl
sub
cmp
arpl
sub
push
push
nop
mov
mov
adc
inc
mov
sbb
fwait
and
sub
inc
jg
add
outsl
push
push
push
sbb
test
or
cli
xchg
add
sbb
aad
insl
add
sbb
out
xchg
push
push
outsl
jmp
add
jo
pop
pop
pop
xchg
fs
pop
jle
hlt
lcall
sbb
int
das
sub
jno
mov
loopne
mov
gs
push
pop
mov
lcall
jp
les
or
xor
cmc
sub
pop
aam
xor
ss
sbb
jp
pop
inc
lret
rol
dec
mov
adc
pop
and
xchg
fstl
fldenv
stos
imul
or
clc
cli
xchg
imul
push
orb
lds
mov
or
or
mov
mov
jmp
sub
push
xchg
pop
inc
pop
ret
dec
loopne
fcompl
adc
xor
aam
sbb
push
push
dec
mov
scas
pop
add
push
jno
cli
jge
notb
dec
fldenv
lea
fisubrl
adc
push
or
sub
cltd
add
and
add
push
push
jge
addr16
adc
xor
test
cmp
add
cmpw
jne
in
dec
cmp
hlt
push
push
inc
fbstp
ss
mov
test
cmp
in
or
rolb
or
or
add
push
push
nop
add
or
push
and
push
cmpsl
mov
test
sub
and
call
mov
jb
out
xorb
adc
fdiv
adc
add
ljmp
xor
cmp
jne
or
push
dec
mov
push
pop
add
add
sub
lea
test
jp
mov
sbb
and
stc
loopne
and
and
ljmp
inc
push
push
mov
sub
enter
lret
aas
push
jl
inc
add
testb
push
pop
xor
add
call
insb
andb
xchg
cmp
inc
stc
inc
movl
jb
xchg
mov
dec
push
out
sbb
push
sbb
sub
ret
sub
cmp
push
in
iret
aam
inc
mov
jo
push
mov
sbb
testb
in
fsts
adc
mov
stos
or
shll
add
inc
or
roll
aaa
pop
dec
leave
inc
mov
lea
push
dec
insb
mov
and
adc
shrb
push
cmpl
nop
push
cltd
jbe
add
shlb
mov
dec
mov
jno
jne
inc
lret
addb
push
and
mov
cmp
inc
push
jae
xorl
icebp
inc
xor
add
push
push
call
clc
sahf
popl
add
adc
or
fldenv
push
push
testb
mov
test
sub
aam
add
xchg
jmp
inc
ret
xchg
les
cmp
cmp
cwtl
leave
mov
insl
sbb
enter
push
push
push
imul
call
adc
test
inc
adc
sbb
jmp
xor
inc
mov
push
sub
push
xchg
bswap
mov
dec
mov
lret
push
mov
orl
incl
mov
push
ficoms
dec
loopne
mov
push
cmc
movsl
addr16
andl
xchg
push
aaa
xchg
rcrb
mov
push
cmp
test
sbb
jecxz
in
repz
xchg
and
add
and
push
fs
lea
clc
inc
jg
dec
push
inc
in
js
xchg
test
push
add
push
xor
pop
int3
mov
push
cwtl
push
sbbb
sub
inc
mov
or
cltd
or
pushf
sub
push
xchg
push
mov
out
jno
add
inc
xchg
ja
push
pusha
xor
sub
loope
das
loope
jg
xchg
xor
aam
enter
jb
pop
pop
jp
and
cmpsb
or
mov
sub
mov
adc
stos
mov
cmpsl
test
data16
leave
and
dec
in
mov
adc
int3
loope
inc
dec
rep
push
nop
inc
mov
add
push
xchg
mov
push
and
pop
cmc
fsubs
adc
iret
dec
sbb
pop
jno
or
or
jo
dec
pop
or
lret
or
dec
jecxz
call
pop
mov
xchg
int3
jle
pop
adc
inc
imul
rclb
sti
fadds
jecxz
mov
sbb
js
push
repnz
std
mov
xchg
jns
mov
movsl
and
mov
ret
mov
or
mov
les
adc
dec
pop
mov
sbb
sbb
sbb
sbb
sbb
adc
lock
jns
cmpsb
push
dec
push
call
cmp
add
pop
sbb
mov
pusha
test
fldt
ret
sbb
cs
fcoml
out
adc
sub
push
call
jmp
insb
test
sub
addl
xchg
cmp
sub
sbb
arpl
sub
nop
cltd
xor
and
sub
push
cltd
int3
add
mov
mov
and
adc
mov
pop
adc
test
rorl
adc
add
pop
or
pushf
mov
mov
sbb
cmp
cmp
test
mov
push
fidivrl
inc
add
push
test
fwait
int
pop
sub
push
dec
sbb
xchg
inc
test
gs
mov
pop
jne
xor
cmp
gs
pop
out
adc
add
cltd
sbb
ja
pushf
add
je
cmp
add
lea
lret
icebp
xor
push
cmp
dec
mov
xchg
push
pop
jne
sahf
loop
or
and
call
sbb
add
bswap
test
mov
shll
and
or
mov
pop
push
sbb
and
adcb
cmc
inc
das
or
mov
mov
and
pop
xchg
sub
mov
mov
adc
pop
movl
adc
and
imulb
xor
push
mov
cmp
inc
mov
dec
enter
push
adc
xor
add
mov
push
inc
cvtps2pi
mov
cmp
les
out
or
movl
jns
xor
mov
cmc
xor
dec
pop
xor
and
insb
mov
push
fsubrs
rcrb
sub
push
dec
push
pop
lcall
dec
xchg
mov
push
dec
adc
mov
pop
or
mov
cmp
addl
test
sbb
or
sbb
incl
call
fnstcw
or
ret
xchg
and
and
inc
in
into
push
sub
jne
mov
pushf
xor
sbb
mov
mov
sub
pop
nop
adc
setb
rorb
sbb
bound
lcall
adc
std
and
mov
jne
push
faddl
add
push
sbb
pop
loopne
fimuls
xor
mov
push
repz
adc
add
dec
cmp
or
push
test
popf
mov
imul
push
in
aad
pop
sub
movlps
fwait
push
jns
mov
dec
rorl
add
add
sub
decb
sub
orl
dec
aaa
mov
push
in
jo
adc
xor
lock
mov
addr16
dec
mov
rcr
add
in
jmp
clc
adc
and
push
xchg
or
xchg
push
xor
out
mov
and
or
push
pop
or
dec
cmp
bound
push
add
pop
inc
jns
lock
out
or
mov
inc
xor
mov
test
stos
or
mov
adc
test
lock
pop
test
aad
push
imul
jmp
inc
rorb
or
es
add
add
sub
mov
scas
rep
xchg
ja
lahf
mov
mov
mov
jns
xchg
sub
popa
pop
add
jl
inc
sub
je
xor
push
xchg
test
pushf
dec
or
pop
lret
lea
sarl
cli
or
adc
cmp
inc
aaa
adc
mov
fisubl
sub
jne
into
pop
mov
jp
adc
or
cmp
sub
inc
dec
ds
push
adc
pop
sub
and
nop
or
jne
sbb
push
lcall
out
or
je
adc
adc
dec
jge
cmp
pop
dec
adc
dec
fs
lret
cltd
cmp
dec
pop
sub
push
jne
shlb
push
mov
sbb
cmp
popa
cwtl
insl
xlat
sbb
or
sbb
pop
je
add
test
xor
push
adc
xlat
or
ja
inc
mov
add
xor
push
enter
push
jne
cmpsb
jbe
cmpsl
mov
dec
push
sub
add
out
push
data16
or
mov
jns
ds
sbb
leave
and
es
gs
pushl
inc
inc
push
mov
push
push
mov
inc
and
cwtl
lds
enter
adc
push
push
call
bound
inc
test
push
and
mov
jl
dec
and
lds
cmp
das
push
sbb
test
test
sub
dec
mov
jnp
push
in
inc
mov
adc
push
lret
sbb
or
arpl
mov
inc
dec
je
add
int3
int3
pop
xchg
cmp
ret
je
jmp
call
shll
adc
push
mov
and
sub
pop
pop
out
adc
orb
and
sbb
divb
roll
mov
cmp
fidivrs
push
add
adc
push
out
pop
add
ljmp
daa
jo
je
pop
and
sbb
or
nop
xor
inc
adc
daa
mov
xor
sarb
cld
push
xorb
cmp
lds
lea
lock
mov
test
inc
ds
cltd
and
or
cmp
or
sub
les
aas
and
rolb
lds
inc
xchg
lds
adc
xchg
inc
nop
pop
test
ror
je
insl
shll
sub
addb
lods
mov
rorb
or
test
xchg
shlb
jno
in
and
pop
push
adc
mov
dec
adc
adc
mov
ds
rolb
out
sbb
xchg
cmovno
loop
or
xor
lods
and
sub
sbb
sub
es
ds
adc
lock
xor
adc
jmp
mov
fsubrl
pop
add
sub
les
xchg
leave
inc
pop
mov
xchg
sub
jmp
push
movsb
xchg
in
mov
or
jmp
enter
push
call
inc
push
jl
add
push
orb
pop
and
and
xchg
test
cmp
fs
push
or
or
mov
push
ljmp
push
and
cmp
jmp
arpl
jmp
popa
push
rorb
xor
adc
jecxz
xchg
mov
leave
jp
into
sub
adc
adc
fildll
and
das
sbb
mov
sub
add
scas
inc
add
push
sbb
inc
jnp
xchg
adc
mov
bound
popa
adc
inc
popf
bound
in
inc
lret
dec
push
xchg
popf
jmp
and
mov
lods
shrl
outsl
xor
push
scas
test
add
fisttpll
insl
dec
add
add
mov
or
lods
mov
push
jns
push
std
mov
bound
or
sbb
push
dec
or
and
adc
sbb
mov
jae
mov
adc
adc
pushf
or
inc
mov
mov
and
sub
roll
xchg
pusha
xchg
or
mov
imul
jle
sbb
jno
adc
mov
faddl
xchg
mov
pop
pop
sub
add
jecxz
inc
xor
fldenv
and
lock
sbb
pop
inc
rorl
adc
jl
scas
inc
pushf
push
int3
and
les
or
push
mov
imul
andb
clc
push
jne
or
xor
jns
add
mov
inc
pop
or
adc
dec
sub
cmovb
ja
xchg
or
cmpl
push
pusha
xchg
inc
nop
xor
pusha
or
xchg
out
repnz
sbb
xchg
sbb
faddl
adc
mov
addb
cmp
or
cli
sbb
lea
rorb
xor
mov
fsubrs
sub
clc
dec
mov
fimull
fisubl
sti
mov
and
mov
mov
jo,pn
mov
or
sbb
cld
or
in
sbb
shrl
sbb
cmpl
incb
push
jae
pop
lahf
lcall
arpl
out
push
push
adc
adc
jno
adc
mov
add
jmp
sub
or
cmpb
adc
mov
add
sub
and
loopne
mov
xchg
fsubl
mov
es
cwtl
pop
and
adc
push
mov
neg
sbb
pop
loop
fs
scas
sub
scas
jle
mov
push
shr
nop
push
pop
neg
lea
int3
divl
aas
jmp
cmp
dec
push
jne
pop
jmp
sub
or
sbbb
and
outsb
sbb
push
mov
rcr
add
or
jge
push
or
pop
dec
ret
hlt
mov
sub
fs
mov
test
pop
adc
jno
adc
roll
add
imul
add
ds
test
lahf
movsb
mov
in
cmp
cs
cmp
xchg
push
icebp
call
mov
and
lret
cmp
dec
add
movsl
push
adc
or
mov
push
pop
sbb
mov
push
xchg
ror
push
cld
xchg
or
mov
xor
dec
repnz
psraw
lret
push
hlt
gs
nop
adc
pusha
inc
adc
adc
sub
pop
arpl
inc
sub
adc
push
mov
and
xor
cmp
cmp
cmp
xchg
in
add
int
mov
cltd
mov
stc
sub
or
std
enter
push
add
fildl
data16
adc
lods
push
inc
int3
adc
push
in
push
xor
pop
or
dec
push
movsb
mov
mov
adc
add
adc
xor
xchg
add
inc
inc
fs
sub
ljmp
dec
and
add
dec
inc
mov
sbb
push
jbe
test
push
push
adc
lea
in
js
push
rclb
mov
mov
jo
jl
and
pop
test
and
push
mov
xor
sbb
sub
mov
ret
push
call
sbb
pop
test
inc
sub
adc
mov
cmp
xchg
jecxz
int3
mov
adc
dec
popa
movsl
rorl
mov
and
lea
jg
sbb
movsb
inc
pop
fidivrs
xor
rolb
add
push
loope
push
das
cmp
xor
cmpsb
push
mov
dec
in
push
std
fwait
sub
out
adc
add
xor
and
or
call
inc
sub
fs
decl
das
push
jmp
imul
push
pushf
dec
stos
add
sub
dec
js
sub
xor
sti
pop
int3
mov
test
push
faddl
jbe
dec
jmp
loopne
adc
mov
sbb
inc
or
mov
test
popa
push
mov
sbb
sbbb
jne
jo
test
and
je
es
in
dec
sub
push
pop
cmp
sbb
out
rorb
mov
inc
inc
xchg
inc
push
mov
test
jl
pop
mov
dec
jg
orb
adc
insb
nop
je
pushf
pop
push
repnz
xchg
add
xor
lds
data16
cli
or
ficompl
inc
ljmp
and
int
or
mov
inc
movsb
adc
lods
add
es
sub
std
jne
cs
or
adc
inc
outsb
int
mov
andb
push
or
rolb
or
dec
push
lret
xlat
push
and
cli
nop
data16
ljmp
and
and
jae
hlt
insb
int3
push
sub
sti
push
cld
movsb
xor
dec
inc
mov
jb
call
xor
icebp
psrlw
sti
xor
fwait
pop
adc
cld
in
dec
sbb
mov
cmp
mov
or
stc
push
cmc
jge
in
jle
dec
inc
xchg
lcall
xlat
or
dec
add
loope
xchg
dec
push
cmpb
icebp
aad
sub
mov
test
test
mov
sbb
xchg
mov
sub
pop
push
fstl
mov
sbb
add
sbb
or
lds
mov
mov
and
fstpt
roll
dec
inc
add
or
or
inc
xchg
jl
push
call
sub
popa
and
mov
dec
mov
cmp
call
aam
scas
dec
dec
lock
out
shll
jns
dec
xor
pusha
mov
fmuls
cmpsb
pop
mov
adc
outsb
mov
call
xor
mov
mov
mov
adc
mov
imul
cmp
mov
in
or
daa
push
xor
and
mov
fwait
adc
cmp
divl
sbb
popf
mov
jbe
cmpsl
mov
dec
push
mov
roll
or
or
into
inc
adc
das
xlat
sub
sahf
fwait
mov
push
lret
popa
xchg
inc
jle
int
aas
ds
sbb
daa
imul
xor
dec
aam
pop
jmp
mov
movsl
dec
xchg
call
lcall
and
cmpsb
enter
adc
popa
lods
adc
or
adc
pop
push
test
and
mov
inc
xchg
sbb
lcall
inc
sbb
adcb
insl
cmp
pop
mov
adc
or
inc
dec
mov
call
pop
fadd
add
testb
jp
popa
call
popa
sti
xor
inc
cmp
repz
inc
inc
push
xchg
in
jmp
scas
jge
lret
sub
adc
pushf
clc
dec
ficomps
pop
scas
or
pop
push
add
xor
adc
lea
inc
adc
inc
add
icebp
jno
aad
les
xchg
dec
sub
ljmp
aas
dec
stos
es
repz
and
push
push
test
push
shlb
jnp
movsl
pop
mov
pop
nop
loopne
fisttps
cmp
push
sub
movsb
xchg
or
or
adc
and
and
inc
std
push
mov
push
enter
mov
mov
dec
xor
in
mov
xor
mov
shl
divb
or
call
es
cwtl
sarl
adc
sbb
xor
dec
sub
call
cwtl
adc
sub
sub
push
fs
xor
loop
push
push
xchg
popa
mov
sbb
adc
and
dec
rolb
fs
sbb
jl
dec
dec
sub
sbb
cmp
mov
ret
in
nop
rcl
repnz
adc
add
daa
jl
cmp
or
loop
gs
mov
call
sub
add
jo
call
or
rorl
pop
jmp
fs
cmpsb
pop
scas
dec
aam
xor
fs
add
test
or
pop
sbb
inc
cmp
pop
cmpsb
cmpsl
push
pop
inc
mov
push
aad
das
rcrl
fsubr
int
mov
addl
pop
cmp
cmp
add
enter
daa
enter
add
call
xchg
movsl
xchg
mov
cli
mov
or
xorb
push
movsl
pusha
xchg
movb
jne
ja
xchg
or
repz
movsl
lea
jmp
mov
fdivrl
js
frndint
out
pop
pushf
pop
sbb
xor
cmp
mov
mov
mov
fdivs
mov
xlat
push
mov
test
fs
jbe
lahf
lds
xor
pop
and
lahf
xchg
xchg
jle
pop
lock
enter
inc
imul
stos
std
xchg
push
inc
xchg
mov
imul
loop
cltd
mov
push
or
scas
mov
and
nop
mov
jns
push
mov
add
xor
mov
in
adc
cmpsb
or
in
imul
sub
out
push
mov
jno
xchg
jb
sbb
repz
movsl
pop
int
or
fcompl
cltd
mov
je
addr16
push
std
fsubrl
int
mov
mov
mov
or
push
test
hlt
icebp
cmp
dec
jne
shll
and
or
faddl
push
shrb
inc
add
out
iret
xor
mov
xor
sbb
dec
jns
or
pop
sub
out
sub
sub
xor
in
xor
and
cli
adc
lods
lcall
and
sbb
xchg
js,pt
fwait
sbb
test
out
mov
sub
popf
add
adc
enter
das
mov
xchg
rolb
xor
pop
clc
mov
mov
popf
and
sbb
fwait
and
jnp
xchg
hlt
dec
pop
pop
mov
mov
or
and
repz
aam
scas
adc
loope
add
lock
sbb
or
push
and
leave
cltd
sub
add
call
adc
lret
mov
and
push
icebp
push
stos
aaa
stos
jo
sub
adc
sbb
xor
pusha
and
fisttps
xchg
push
test
inc
dec
and
cmpsb
pop
stos
push
dec
movsl
sub
jae
imul
sbb
cmp
lock
mov
adc
push
mov
ret
lds
xor
sbb
xor
ljmp
shrl
leave
cmp
fists
add
pop
mov
or
shrl
clc
mov
mov
pop
int3
or
arpl
or
xchg
mov
or
push
add
push
add
loopne
jno
xchg
jl
ss
sub
loopne
xlat
mov
adcb
cmp
push
ftst
xor
push
push
daa
push
sbb
out
push
mov
push
inc
add
mov
inc
sub
cmpsl
fs
and
leave
in
imul
jae
adc
mov
sbb
pop
push
mov
push
mov
sub
mov
int3
mov
jmp
flds
adc
push
and
in
adc
push
repz
fdivl
data16
xchg
scas
dec
pushf
cld
mov
movsl
lds
pop
dec
jne
repnz
rcll
shl
push
call
add
icebp
mov
popa
inc
roll
mov
or
xchg
mov
inc
dec
jne
hlt
pop
ret
xor
rcr
sbb
or
test
cltd
or
lods
call
mov
outsb
out
xchg
ljmp
jge
xchg
jg
ret
or
pop
sar
mov
mov
inc
inc
cmp
add
repz
adc
divl
sbb
pusha
aam
push
cmpsb
cmpsb
cmp
add
in
or
cmpsb
loope
jo
leave
notb
lcall
sbb
inc
xchg
push
das
int3
in
cltd
adc
and
jne
jle
or
add
inc
aam
mov
jle
nop
dec
xchg
and
lods
inc
jg
insl
and
xchg
mov
stc
push
dec
addr16
out
out
pop
lea
add
cmp
mov
adc
mov
dec
in
stos
jecxz
data16
test
xor
sub
sbb
push
xchg
sub
int3
jle
insb
mov
or
adc
and
sbb
xor
das
mov
addl
xchg
cmp
xrelease
and
ret
and
xor
adc
sub
xchg
add
sarl
je
shr
xor
in
jmp
adc
sbb
ja
jge
cwtl
xchg
cmp
or
and
dec
test
jo
lea
jno
sub
daa
push
test
dec
mov
sbb
or
push
xchg
cmpsl
xchg
ret
mov
pop
not
pop
push
xor
insl
nop
adc
mov
lods
movsb
lock
jne
clc
leave
leave
sbb
std
nop
xchg
sbb
mov
jl
cwtl
mov
xadd
add
or
or
and
push
inc
sub
sub
lret
movsl
int3
lret
sbb
jbe
inc
mov
inc
inc
xor
movsb
push
sub
scas
sbb
adc
dec
rcrb
pop
xor
loopne
add
imul
xchg
sbb
and
rolb
rorl
sub
inc
clc
shl
inc
test
add
in
add
sbb
mov
jmp
psubsb
add
fcomps
pop
push
mov
pop
fisubs
pop
xorl
add
sti
sarb
add
movsl
mov
insb
inc
push
inc
test
push
sbb
jne
xor
adc
xor
xchg
push
jo
mov
dec
sub
fdivl
aam
mov
imul
push
cs
push
das
out
mov
push
imul
enter
pfcmpgt
pop
cmp
popf
outsb
test
inc
cmp
push
fs
iret
call
sbb
insl
int3
dec
inc
fidivs
and
inc
nop
inc
lea
mov
lret
insl
sbb
out
push
insb
sub
push
clc
rcrl
rcll
mov
jle
cs
push
and
push
push
push
jno
adc
fs
cmp
jae
pop
fidivrl
push
push
stc
add
push
add
xchg
or
data16
add
lds
cmp
push
xchg
mov
jg
ret
add
ret
in
adc
or
les
xchg
pop
xorb
xorl
adc
adc
mov
cmp
ret
pop
adc
adc
add
std
sbb
and
testb
adc
mov
jle
loopne
mov
push
mov
mov
fisttps
sahf
fmull
push
inc
and
popf
popa
push
adc
pop
jge
push
xor
push
push
jle
adc
aaa
jns
cmp
jae
jmp
dec
add
push
push
fisttpll
or
in
push
jg
or
mov
add
jp
dec
arpl
sub
sti
adc
call
aad
cmp
gs
pop
push
orb
jg
xchg
xor
ret
dec
or
test
inc
sub
push
cmc
repnz
push
adc
cmp
test
jo
push
push
imul
cmp
mov
sub
pop
xchg
jae
dec
jbe
repz
push
cmc
sbb
mov
repz
add
xor
ret
adc
les
pop
pop
ret
in
rorb
pop
out
dec
test
andb
cmp
adc
sub
pop
xorl
jb
lea
lods
cmp
xchg
jo
jne
pop
jg
test
push
push
mov
notb
mov
scas
mov
add
fimuls
iret
dec
fs
adc
mov
or
je
push
es
inc
mov
xor
loop
dec
push
mov
jo
out
xor
jl
pop
mov
or
loope
push
aam
and
shll
inc
push
mov
sub
sub
cmc
mov
adc
push
dec
pop
pop
fldt
dec
xchg
lds
and
pop
push
pop
leave
lcall
mov
add
pop
das
aaa
loope
sub
jmp
dec
xchg
out
add
pop
add
or
icebp
mov
xlat
add
lds
and
je
ret
or
add
push
xor
wbinvd
cwtl
icebp
push
inc
lds
clc
adc
sub
push
scas
sbb
sub
decl
jle
fcmovb
jle
xchg
cmp
cltd
add
push
std
mov
push
cmp
das
jne
rcrb
sbb
xor
xor
scas
jge
lcall
cmpl
test
sub
frndint
push
mov
call
pop
push
xor
pop
adc
xor
push
sub
push
inc
cmpl
dec
or
lock
in
xor
loop
and
cmp
push
mov
lds
pusha
xor
sub
mov
lds
xor
out
and
adc
out
add
sarb
call
xor
add
push
addl
inc
sub
cs
mov
and
loopne
popa
push
inc
jns
dec
xor
test
mov
jmp
sbb
fwait
enter
push
arpl
popf
xchg
dec
mov
lock
jnp
push
idiv
mov
push
add
push
push
pop
adc
dec
and
or
xchg
xchg
pusha
cmp
mov
repz
add
push
dec
and
jnp
nop
add
hlt
jmp
mov
je
push
pop
mov
push
loopne
mov
es
cmpsl
fadd
shr
push
add
les
lret
cmpsl
mov
test
push
pushf
pop
mov
sbbb
call
inc
inc
fsubs
jl
xlat
xchg
mov
or
or
mov
pop
test
push
xchg
mov
dec
or
stc
call
fs
leave
mov
jb
rcrb
xchg
ss
pop
push
sub
pop
enter
adc
decb
xor
cs
inc
adc
ret
dec
jo
add
jbe
xor
cmp
ret
mov
push
push
xchg
or
jge
insb
mov
xchg
push
mov
adc
jnp
outsb
mov
shr
daa
inc
push
inc
xchg
or
xor
in
addb
jo
call
mov
pop
loopne
sbb
clc
cltd
inc
jge
add
aas
in
xor
test
add
aad
cwtl
add
adc
shrd
add
ljmp
loope
hlt
call
icebp
int3
push
cmp
jb
adc
jmp
sub
in
sub
mov
je
jbe
sahf
sbb
fbld
dec
in
cs
call
cld
pop
or
add
lods
lock
push
adc
in
test
mov
sbb
push
pop
xchg
add
sti
shlb
cli
cmp
jne
push
add
push
dec
call
or
push
lods
or
std
into
mov
mov
xchg
lea
sbb
pushl
pushf
enter
mov
sub
fwait
sub
add
outsl
add
mov
cmpb
and
cmp
mov
fadd
je
add
sbb
adc
lock
mov
movsb
adc
pusha
cmp
je
movzwl
jmp
mov
cmp
sub
cmc
push
pop
sub
mov
ret
cmp
aam
aaa
call
or
daa
call
inc
xchg
subb
jne
add
mov
add
mov
cmc
test
inc
pop
call
mov
test
in
sahf
loopne
lea
xchg
xrelease
mov
in
pop
.byte
rolb
dec
into
stos
out
pop
fadds
imul
fisubl
filds
mov
shlb
ret
and
xchg
pop
sub
aaa
add
lods
ficoms
cmpsb
loop
cmp
adc
jp
add
inc
dec
jge
jmp
inc
and
dec
or
arpl
xchg
out
mov
sbb
loop
adc
xor
jb
xor
add
lret
mov
push
rorb
xchg
filds
js
inc
add
mov
dec
xchg
pop
jecxz
pop
cmc
mov
ss
jae
add
imul
enter
cmp
ja
add
fdiv
sti
inc
xchg
in
add
loopne
xor
fucomp
jbe
orb
push
stos
dec
and
cmp
mov
faddl
jle
mov
jl
dec
pop
add
and
xchg
dec
lret
mov
jg
xchg
cmp
add
gs
sub
sub
push
cmp
shlb
add
ficompl
mov
clc
pop
push
add
adc
mov
adc
jp
out
dec
add
mov
mov
sbb
incl
cwtl
pop
sub
aas
xchg
repnz
arpl
inc
add
mov
cmpsb
cld
jmp
xor
rclb
lods
movl
xchg
aad
lods
in
push
mov
sbb
add
int3
mov
adc
mov
ljmp
fildl
andl
push
adc
scas
add
aam
add
xchg
jg
add
lods
dec
add
add
jnp
fidivs
lret
pop
mov
cmp
lock
jae
scas
pop
outsb
into
xchg
push
cwtl
aad
xchg
xchg
or
orb
pop
dec
les
cld
rolb
add
hlt
aad
sub
in
add
enter
add
cmpsl
outsl
into
int
add
jge
xchg
bound
inc
adc
adc
sbb
add
push
inc
or
test
imulb
jg
pop
scas
mov
test
mov
dec
incl
ret
and
mov
fstpl
sbb
xchg
adc
add
adc
and
xor
shlb
gs
lods
sub
imul
mov
shrb
fsubrs
or
data16
push
mov
or
adc
je
xorl
cmp
lahf
cmp
inc
or
sub
jae
rolb
cmpsl
in
es
out
lods
push
or
inc
dec
mov
fldt
es
xchg
add
or
and
sub
mov
and
and
imul
cmp
mov
xchg
ss
add
or
dec
or
and
and
or
xor
jns
xor
test
or
xchg
jl
xor
ret
dec
subb
dec
pusha
enter
add
adc
push
sbb
xor
popa
mov
add
sub
test
cmp
and
and
and
push
scas
enter
mov
arpl
lahf
adc
leave
fsubl
add
add
loopne
jle
imul
outsb
cltd
inc
cmp
dec
orb
sbb
xchg
jge
nop
testb
inc
add
add
cmp
jo
fscale
gs
inc
add
mov
dec
or
or
rcrl
addl
xchg
and
cmp
mov
pop
inc
bound
dec
hlt
loop
fs
jg
inc
pop
out
inc
adc
cmp
inc
insb
sub
mov
fnstenv
loopne
lea
jbe
push
xor
arpl
fs
sub
add
imul
push
pop
or
enter
ljmp
mov
add
sbbb
cmp
or
pop
or
or
sub
inc
pop
adc
rorl
or
loope
and
pop
xor
dec
mov
pushf
adc
das
out
jo
dec
add
jns
sbbb
sbb
add
adc
movb
jnp
jl
cmp
fisubs
shl
jo
add
cmp
add
cld
pop
rorb
push
repz
es
and
pop
push
or
push
pushf
sub
rcl
dec
add
clc
repz
jae
pop
dec
add
scas
cmpsl
add
inc
jb
sub
and
jae
and
inc
jns
jmp
test
sbb
outsb
insl
dec
js
js
aaa
scas
add
mov
cmpsl
add
jl
cmp
push
dec
sub
lods
add
rcpps
cli
aas
and
add
jb
push
inc
mov
add
sub
icebp
sbb
and
repnz
and
sarl
inc
sub
mov
dec
push
or
push
push
fadd
pop
xor
ss
sbb
mov
sub
mov
and
adcb
into
and
scas
add
dec
push
loop
mov
mov
inc
mov
pusha
xchg
lods
add
insb
jne
push
outsl
cmp
jb
popa
arpl
jns
fs
mov
insb
cmp
sub
je
gs
sbb
inc
jb
popa
out
push
arpl
jno
aaa
dec
outsb
push
scas
andl
aaa
xor
iret
and
add
and
sbb
adc
push
push
inc
faddl
dec
imul
sbb
aaa
cmp
shl
fs
imul
fisubrl
xlat
adc
dec
jo
cmp
shll
sahf
adc
adc
cmpsb
push
adc
call
inc
gs
xlat
add
fidivl
xchg
mov
or
inc
fiadds
outsl
mov
dec
inc
mov
push
push
sub
test
insl
sub
into
cmp
fdivrs
push
inc
mov
inc
lods
adc
nop
sbb
sub
or
pusha
dec
mov
add
push
pop
jae
loopne
add
int
mov
push
push
and
out
js
dec
arpl
jno
je
bound
cld
jne
cli
in
inc
dec
push
cmc
add
les
and
pop
add
incl
add
mov
cmpsl
or
cmpsl
adc
inc
adc
adc
test
lahf
es
adc
push
imul
cmp
or
mov
adc
mov
add
add
xchg
or
adc
push
addb
adc
or
or
push
add
adc
add
jbe
push
add
sub
sub
mov
sbb
inc
or
pmulhrw
clc
mov
adc
icebp
sbb
sub
or
or
test
cmp
lods
cs
jae
lds
int3
push
addr16
pop
xor
sub
and
push
push
nop
lret
adc
adc
push
popf
cmp
add
sub
mov
dec
cs
dec
or
adc
sub
or
dec
leave
push
inc
or
mov
es
mov
jl
loop
pusha
cld
outsl
arpl
adc
add
lcall
mov
cltd
in
push
les
push
or
push
rclb
mov
jo
sbb
int3
push
add
inc
dec
or
popa
sbb
push
or
xor
mov
rcrb
cmpsl
and
push
cltd
jne
popw
dec
sbb
jno
call
lds
into
bound
pop
mov
push
adc
inc
in
push
push
rorb
dec
or
pop
clc
ja
cmp
inc
add
inc
aam
stc
dec
cmp
and
jne
cwtl
movsl
inc
dec
or
test
loopne
test
gs
cld
or
int3
xchg
mov
jne
push
push
or
mov
push
loopne
loopne
add
cmp
je
daa
rolb
ret
and
jle
or
adc
es
and
movsb
in
cltd
cld
cmp
shl
je
fadd
arpl
gs
in
push
enter
sbb
add
and
mov
sbb
inc
sbb
inc
iret
bound
xor
or
push
sbb
cmp
clc
xchg
sahf
push
jne
imul
cmp
cmovbe
mov
inc
loopne
jo
add
sbb
cld
push
push
add
notb
test
jge
hlt
push
sahf
and
mov
jmp
push
add
mov
in
je
push
add
dec
mov
xor
sbb
xchg
adc
jmp
jne
sbb
jmp
inc
push
pop
pop
push
leave
into
mov
push
pusha
pop
sub
push
repz
jmp
loope
push
test
xor
ret
xchg
dec
and
and
push
dec
pop
scas
rolb
insb
enter
sub
push
subb
test
add
xor
push
mov
orb
addb
mov
adc
lahf
xor
mov
cmpsl
pop
pop
shl
push
ret
int3
pop
add
push
and
or
mov
or
cmpsb
sahf
jle
add
cmp
movb
stc
loop
jmp
lea
add
iret
push
xor
call
jns
inc
or
mov
test
test
popaw
mov
lods
push
in
push
mov
push
pop
add
xchg
sbb
mov
dec
lret
xchg
dec
xchg
mov
imul
call
sarb
jl
jg
lahf
pop
andb
into
adcb
je
and
inc
or
mov
push
pusha
cmp
cmp
sub
mov
adc
leave
fs
call
loopne
pop
divb
push
mov
inc
cwtl
inc
jbe
scas
pop
adc
repnz
hlt
gs
stos
jmp
and
cmp
mov
lret
call
push
sub
stos
mov
test
loopne
dec
add
push
push
push
call
fsubrs
popa
xor
mov
and
hlt
sti
minps
sbb
or
mov
cli
rclb
cmp
jbe
jnp
jmp
test
mov
cmpl
jne
mov
or
call
popl
sbb
ret
ret
xchg
add
inc
pushf
mov
mov
lret
mov
std
jmp
std
push
push
adc
mov
and
test
ret
insb
push
and
sbb
jno
push
sbb
sub
sbb
loope
push
inc
in
cmp
ret
pop
xchg
xor
rcrl
pop
pop
ljmp
leave
xor
adc
push
call
xor
insb
add
jmp
out
or
sbb
push
lahf
mov
ret
cmp
adc
subl
cmp
imul
pushf
popa
sbb
sbb
push
xor
push
add
push
gs
imul
pop
and
jp
dec
dec
int3
inc
dec
jg
xor
mov
inc
imul
dec
je
in
insb
arpl
xor
mov
cmp
jbe
add
and
js
in
dec
jl
inc
shrl
cmpb
pusha
ja
jb
fstpt
dec
jne
imul
jns
ficomps
mov
cmp
pop
gs
dec
pop
je
xor
add
push
pusha
bound
and
inc
and
and
cmp
dec
mov
and
dec
mov
inc
cld
or
sub
dec
inc
xchg
fsubl
inc
mov
sub
add
and
lcall
push
inc
mov
push
inc
test
lds
lock
fldcw
pop
pop
lods
or
mov
dec
pop
add
les
out
jecxz
je
bound
cmp
dec
push
incl
jo
bound
mov
or
or
xor
or
jp
add
inc
mov
inc
jg
movsl
leave
cmc
arpl
test
mov
shll
dec
test
out
and
lret
or
or
mov
clc
fildll
sbb
xchg
dec
movsb
insb
push
inc
sbb
pusha
xchg
dec
cmp
mov
or
rclb
pop
xor
xor
add
mov
cli
arpl
decl
fidivs
and
push
rcpps
bound
sub
imul
inc
sub
sbb
adc
insb
push
cltd
sbb
dec
jae
arpl
ss
push
outsl
popa
je
sub
imul
stos
jae
push
pop
jo
outsl
mov
outsb
aad
mov
push
nop
or
jb
imul
nop
sub
cmp
xor
push
sub
cltd
push
jne
repz
inc
xchg
xlat
push
js
outsl
jns
jbe
dec
insb
mov
add
scas
and
mov
loope
call
je
jbe
js
jp
jl
sbb
sub
inc
push
dec
xchg
push
pop
cmpsb
scas
stos
pop
mov
scas
lahf
mov
lahf
incb
push
inc
sub
xchg
enter
or
sbb
and
mov
nop
in
mov
cmp
test
jo
jne
dec
outsl
and
imul
rorl
pop
and
je
mov
cs
sbb
ds
cmp
xor
push
xor
in
jns
jns
and
and
inc
and
sub
scas
fs
les
test
jne
and
aaa
rorl
insl
inc
sbb
inc
and
and
addr16
insb
mov
push
sub
shrb
fmull
jne
xor
insb
and
popa
loop
shll
or
inc
mov
mov
cs
add
and
push
xor
outsb
andb
mov
and
dec
jmp
stc
inc
jb
inc
inc
movsl
imul
lods
sbb
dec
sbb
pop
filds
imul
mov
divb
mov
jge
cwtl
outsl
imul
inc
push
dec
clc
jo
dec
frstor
ret
jl
and
xchg
jae
and
dec
enter
mov
sbb
mov
lahf
cmpb
orl
popa
pop
sub
cs
mov
leave
call
pop
fisttps
pop
bswap
jmp
cmpsb
rol
mov
or
sbb
stos
into
add
scas
xchg
adc
cli
je
pushf
inc
int
jge
insl
jecxz
fsubl
mov
adc
add
inc
or
sbb
cltd
push
loope
test
sub
fiadds
cmp
scas
add
mull
dec
mov
outsl
enter
pushf
cltd
mov
popf
cmp
sub
jo
push
jbe
add
sbb
mov
and
sub
aaa
mov
fwait
movups
repz
xchg
xchg
dec
mov
add
std
cli
loope
xchg
mov
push
pop
mov
cld
and
stc
mov
pop
sub
add
pop
xor
ja
or
sub
mov
cmp
jmp
dec
jnp
fwait
dec
cmc
xor
setge
fnstcw
in
lods
subb
xchg
sahf
lret
jmp
jne
inc
fcmovb
sub
jp
in
add
inc
jmp
inc
nop
aaa
jecxz
lock
pop
pop
cmp
jns
sahf
add
jnp
sub
loope
mov
repz
jg
and
jecxz
ret
adcb
ja
add
and
js
aaa
adc
mov
jne
pop
imul
push
jle
mov
repnz
nop
in
jns
add
es
cld
mov
push
int
pop
mov
pop
std
add
mov
push
imul
shr
ds
cmp
les
std
jo
xor
jbe
repnz
clc
and
ja,pt
jnp
and
cmp
lret
loope
hlt
xor
add
popa
test
lret
add
xchg
push
push
push
pop
inc
push
inc
dec
pop
inc
dec
jne
es
out
and
mov
jmp
nop
and
es
lods
lahf
lea
aam
inc
cltd
lret
addr16
cltd
xor
pop
adc
lds
sub
sbb
xor
popf
dec
sbb
sbb
sbb
test
push
jno
aas
pop
test
cmp
adc
mov
xor
faddl
and
adc
xor
enter
sbb
inc
imul
xchg
push
dec
std
dec
jo
dec
inc
push
xor
inc
ret
xor
push
jae
ds
dec
pop
push
nop
in
inc
ljmp
xor
jne
xor
xor
frstor
je
adc
pushf
sbb
pop
xor
xor
outsl
insl
push
ja
loopne
lret
add
or
dec
pop
add
dec
in
dec
ffree
push
das
xor
or
ret
cmp
sub
lret
sub
jne
sti
sub
push
out
mov
jae
dec
jp
cmp
adc
insb
xchg
dec
outsl
jae
je
sbb
stos
inc
sub
stc
rolb
xor
adc
adc
inc
int3
shrb
dec
outsw
test
sahf
push
das
enter
ret
loope
jo
gs
cmp
push
dec
inc
aad
mov
adc
fiaddl
xor
jp
cld
insl
jl
je
aam
das
insl
stc
in
les
cltd
xor
dec
jmp
cs
sub
push
or
cmp
test
icebp
mov
mov
outsl
repz
mov
js
nop
shrl
pop
add
sbb
sbb
sub
pop
or
or
add
add
or
or
adc
adc
sbb
and
inc
int3
jb
pop
jne
ds
sbbl
jo
cs
dec
push
push
arpl
outsl
ja
cld
push
xor
bound
pop
movd
xchg
inc
stc
jbe
cmp
push
.byte
.byte
cmpsb
add
add
adc
add
sbb
add
add
add
add
add
xor
add
add
add
add
add
dec
add
add
add
xor
add
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
add
add
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
insb
add
add
add
add
xor
cmp
xor
xor
bound
xor
add
addb
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
inc
add
imul
outsb
add
and
push
add
jae
imul
and
dec
add
data16
jb
insl
add
je
imul
and
push
add
arpl
push
add
add
jns
and
inc
add
add
and
dec
add
add
add
add
sldt
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
jbe
inc
add
jo
jns
and
dec
add
add
insb
add
add
add
xor
or
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
xor
xor
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
push
imul
and
push
add
jae
imul
and
dec
add
data16
jb
insl
add
je
imul
and
push
add
arpl
push
add
add
jns
and
inc
add
add
and
dec
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
inc
add
jo
jns
jb
imul
je
sub
inc
add
add
add
add
add
add
add
add
add
add
add
add
push
imul
and
push
add
jae
imul
and
dec
add
data16
jb
insl
add
je
imul
and
push
add
arpl
push
add
add
jns
and
inc
add
add
and
dec
add
add
add
add
insb
add
add
imul
je
jae
and
push
add
jae
add
jbe
add
add
add
or
add
dec
add
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
jb
popa
add
arpl
outsl
add
jns
add
js
add
add
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
push
add
jae
imul
and
inc
add
je
imul
jb
jne
jae
and
xor
xor
xor
cmp
add
xor
push
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
xor
xor
add
add
add
add
adc
add
push
add
add
imul
inc
add
imul
add
add
add
add
add
add
xor
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
or
add
add
xchg
jo
loopne
enter
aas
jo
adc
mov
adc
push
dec
mov
ret
cld
mov
adc
push
dec
mov
adc
mov
adc
dec
test
and
adc
es
mov
out
and
adc
pushf
push
pusha
inc
sbb
mov
and
dec
lods
mov
pop
or
sbb
jnp
addb
repnz
and
add
dec
das
xchg
push
and
std
adc
cmp
imul
nop
and
in
clc
and
sbb
dec
dec
xchg
jns
mov
mov
adc
sbb
aaa
and
inc
or
mov
push
adc
xchg
inc
stos
mov
rcll
fisubl
and
mov
mov
and
xor
in
mov
adc
sub
add
dec
dec
xchg
popa
and
pushf
mov
dec
testl
inc
mov
jnp
mov
xchg
stos
and
sbb
jmp
or
xchg
mov
sbb
mov
adc
and
daa
add
dec
lcall
and
and
inc
dec
je
loope
mull
add
add
dec
sbb
jbe
mov
dec
mov
mov
push
inc
sub
ret
add
das
add
dec
jp
lock
mov
inc
xchg
mov
and
dec
test
jmp
dec
and
inc
pop
mov
inc
jns
or
daa
ss
cs
jbe
test
dec
ret
xchg
jecxz
arpl
and
and
cmp
mov
adc
and
add
dec
insb
xchg
js
xlat
and
cmp
mov
dec
mov
cmp
mov
xchg
inc
sti
sub
cmp
loope
cmc
mov
adc
xchg
inc
cwtl
cmpsb
mov
aas
add
dec
stos
xchg
mov
mov
inc
push
mov
pop
and
dec
fisttpll
and
and
inc
je
mov
dec
repz
cltd
xchg
or
adc
and
inc
sub
sahf
inc
or
enter
test
xchg
inc
mov
dec
inc
add
dec
dec
add
dec
test
int
roll
mov
dec
addl
mov
mov
dec
inc
les
push
jle
out
adc
flds
or
mov
push
and
push
inc
test
and
inc
aaa
push
or
andb
and
push
inc
xchg
add
and
dec
ja
xchg
lods
inc
out
mov
cmp
addr16
mov
movl
adc
xor
xchg
int3
and
inc
out
std
mov
pop
adcl
xchg
xlat
and
inc
incb
add
mov
add
mov
add
mov
add
mov
add
add
add
add
add
add
pop
inc
add
cmp
add
add
add
and
add
popa
or
add
pop
add
cs
add
dec
mov
add
inc
add
inc
add
je
or
je
or
xor
add
pop
pop
ret
mov
call
pushl
ret
call
pop
sub
add
ret
call
mov
call
pushl
ret
mov
call
pushl
ret
mov
call
pushl
ret
mov
call
pushl
ret
push
mov
push
push
lea
push
push
call
mov
add
pop
ret
mov
push
lea
push
pushl
push
call
push
push
push
call
pop
ret
push
mov
push
push
push
push
push
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
cmpl
jne
mov
push
pop
mov
mov
mov
cmpl
je
cmpl
je
pushl
pushl
pushl
call
pushl
mov
pushl
add
pushl
call
pushl
mov
pushl
add
pushl
call
cmpl
mov
jne
pushl
call
andl
pop
jmp
mov
add
call
mov
pop
pop
pop
leave
ret
pusha
mov
call
popa
ret
push
pushf
pusha
mov
call
popa
popf
ret
push
mov
push
push
mov
movl
call
pop
sub
add
cmpl
jne
mov
jmp
mov
mov
movl
call
pop
sub
add
mov
add
pop
leave
ret
push
pushf
pusha
mov
call
popa
popf
ret
push
mov
push
push
push
push
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
mov
movl
call
pop
sub
add
cmpl
mov
jne
push
call
xor
cmp
setne
mov
pushl
call
pop
push
mov
mov
add
push
call
cmpl
je
mov
add
add
cmpl
je
mov
mov
mov
sub
add
push
call
test
mov
jne
push
call
mov
mov
mov
sub
add
mov
test
je
test
je
movzwl
jmp
mov
sub
add
add
push
pushl
call
mov
add
jmp
addl
mov
cmpl
jne
mov
add
movl
mov
call
pop
sub
add
movzbl
shl
cmp
jne
andl
jmp
xor
cmp
jne
cmp
jne
pushl
push
pushl
call
andl
pushl
call
andl
pop
pop
pop
pop
leave
ret
int3
pusha
mov
mov
cld
mov
xor
movsb
mov
call
jae
xor
call
jae
xor
call
jae
mov
inc
mov
call
adc
jae
jne
stos
jmp
call
sub
jne
call
jmp
lods
shr
je
adc
jmp
xchg
dec
shl
lods
call
cmp
jae
cmp
jae
cmp
ja
inc
inc
xchg
mov
mov
push
mov
sub
rep
pop
jmp
add
jne
mov
inc
adc
ret
xor
inc
call
adc
call
jb
ret
sub
mov
popa
ret
int3
int3
int3
xchg
mov
add
mov
add
stos
mov
add
mov
add
mov
add
ret
add
mov
add
mov
add
mov
add
add
add
add
add
add
ret
outsl
popa
fs
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
je
jb
arpl
fs
jae
add
mov
je
popa
insb
inc
insb
insb
outsl
arpl
add
je
popa
insb
inc
jb
add
push
dec
inc
dec
xor
cs
insb
add
mov
jae
addr16
outsl
js
add
inc
push
xor
cs
insb
add
int3
jo
loopne
enter
cld
adc
dec
and
inc
ss
mov
data16
pop
cmpb
shlb
movsb
adc
add
cld
mov
inc
xchg
in
mov
add
shll
xor
bound
out
and
xchg
add
mov
cli
xchg
repnz
mov
add
jb
xor
jp
push
pop
cmc
cs
ljmp
push
fldcw
inc
cmpsl
loopne
mov
mov
add
inc
xchg
cli
or
incl
pop
sub
js
inc
push
add
fldcw
mov
sbb
or
add
sbb
inc
aam
call
sbb
dec
pop
sub
push
cmp
inc
cmp
cwtl
pop
out
stos
orb
int3
dec
das
push
pop
in
fidivrs
out
pusha
int
lods
mov
lds
pushf
add
xchg
adc
push
pop
adc
sbb
mov
mov
scas
mov
movsl
lock
fld1
mov
cmpsb
out
push
xlat
aad
lods
and
ljmp
xchg
xchg
addl
jns
inc
add
xor
arpl
sub
lcall
jae
gs
mov
imul
sub
ja
popa
push
out
mov
sbb
insl
call
jo
movsl
arpl
mov
xor
fdivrl
jns
push
aad
rcr
xchg
sub
or
sub
sbb
mov
repnz
mov
dec
jno
repz
inc
mov
sbb
pop
in
insl
push
mov
hlt
movl
test
add
std
in
leave
add
fldcw
arpl
cmp
or
cmp
imul
jno
mov
cmp
aam
dec
std
test
or
insb
add
mov
mov
xor
filds
inc
iret
or
roll
stos
lods
xor
cmp
xlat
add
push
popa
sarb
and
les
add
shld
sub
add
or
and
jmp
outsl
das
adc
dec
push
sarl
inc
fdivl
add
add
adc
out
mov
mov
push
movsl
in
lahf
xor
mov
pop
js
stc
rorb
add
push
loope
add
insl
or
add
hlt
cmp
lahf
bound
sbb
xor
dec
loope
repnz
ds
push
cmpb
sbb
hlt
or
adcb
cmc
fnstenv
mov
ljmp
mov
add
sub
rorl
pop
popa
mov
into
nop
sub
mov
aam
add
fadds
shll
push
imul
inc
mov
sarb
sub
add
add
or
jno
push
and
daa
adc
or
leave
and
mov
outsl
orb
mov
add
push
stc
ficomps
leave
sbb
shlb
add
cmp
shrb
cmp
mov
insb
mov
mov
lcall
or
dec
scas
ja
popf
adc
adcl
jae
or
add
insl
or
jp
iret
push
in
decl
xchg
cmp
scas
add
mov
pop
jge
call
mov
add
add
ret
pop
push
testl
jno
insb
sbb
add
jbe
aam
loopne
add
mov
ficoml
rcrb
addr16
outsl
fistpll
mov
mov
jbe
pop
mov
call
xchg
shll
cmp
fisttps
icebp
addr16
cmpsb
fldl
mov
add
mov
fisubrl
or
or
pusha
jp
add
ret
out
fists
addr16
mov
add
imul
sbb
outsl
and
push
xchg
ja
int3
add
inc
or
add
es
lds
add
sub
add
ret
add
mov
sahf
fldcw
mov
fs
es
add
insl
add
test
ss
jmp
addr16
pop
jb
push
add
add
mov
jnp
cmp
mov
fwait
mov
xchg
add
out
fdivrl
or
lock
add
mov
push
add
push
mov
testb
ja
outsl
pusha
inc
mov
out
cwtl
jle
jo
ud0
cmp
subpd
add
and
push
clc
rorl
popa
add
push
js
add
mov
push
addl
dec
ret
cmp
add
notl
pusha
rorb
add
ds
push
shrl
or
filds
cmp
aaa
push
clc
mov
mov
inc
add
pushl
les
adcb
and
add
push
xlat
int
push
ficoms
fldenv
jp,pn
mov
mov
sbb
add
or
loopne
add
add
xor
ss
pusha
cmp
bound
gs
data16
ja
incb
push
jne
pop
jbe
pusha
sbb
je
xor
enter
imul
sub
add
xor
mulb
sub
xor
int
bound
jne
add
add
push
xor
loop
nop
add
adc
and
es
test
sub
insb
rolb
push
sub
imul
outsb
ficoms
outsl
je
arpl
ficoml
mov
adcl
jo
jb
fs
and
addr16
out
inc
outsl
data16
popa
fisubs
jb
jo
inc
jge
sub
addr16
scas
inc
scas
insl
cmp
jae
int
cs
xchg
bound
sbb
and
imul
mov
aaa
popa
jae
fsubrp
outsl
or
sar
lret
xchg
jo
mov
dec
cmpsl
mov
outsb
rol
xchg
insb
or
mov
sbb
popa
imul
out
shl
bound
xchg
int
jl
sbb
into
inc
outsb
outsb
jne
imul
xlat
fdivrl
jne
pushf
add
push
mov
push
adc
push
andb
sbb
pop
sub
and
loopne
test
push
incl
jmp
adc
movsl
pop
test
shr
imul
or
test
in
cs
enter
and
xor
add
mov
or
xor
mov
lret
imul
pop
or
add
sbb
or
or
xor
inc
dec
js
or
ret
and
push
push
push
flds
adc
add
or
cltd
push
and
mov
add
ffreep
cmpsl
xor
or
mov
scas
pop
add
leave
cmp
setne
push
call
stc
mov
sub
and
cmp
sbb
incl
andl
adc
cmp
xchg
into
push
or
das
addb
orl
mov
adc
loope
dec
test
sbbb
pop
pop
mov
dec
pusha
aas
mov
xor
dec
popa
mov
add
jbe
push
cld
mov
push
fidivs
add
nop
js
push
repz
movsl
mov
cld
lcall
repz
cmp
mov
iret
lahf
shrb
out
lock
or
fadds
adc
sub
and
push
mov
mov
push
aaa
adc
xorl
dec
cmpsb
test
sbb
xchg
mov
pop
jg
call
pop
testl
out
sbb
and
cmp
lahf
inc
dec
xchg
shrl
pusha
pusha
or
sub
or
stc
addl
adc
push
xchg
testb
sub
xchg
loopne
clc
ds
roll
sbb
into
add
or
push
and
dec
leave
sub
sbb
lock
push
add
mov
inc
or
xchg
inc
call
hlt
xor
adc
push
cmc
js
mov
or
mov
xor
pushf
sbb
test
adc
xor
mov
adc
or
add
jl
andb
add
pop
add
push
xor
jno
jl
and
lcall
mov
dec
jle
stos
test
jo
add
add
push
retw
lcall
jecxz
lahf
gs
push
xchg
push
inc
ret
sbb
cmp
rol
icebp
sub
inc
fbstp
mov
push
imul
xchg
shr
jo
loopne
add
sub
in
push
and
icebp
lea
pop
sub
add
lods
adc
dec
movl
sbb
bound
dec
push
adc
xor
fs
shrb
xor
push
mov
xchg
sub
iret
mov
orb
repz
jg
nop
andb
pop
adc
das
and
lret
sbb
pop
push
mov
negl
inc
push
sbb
sub
add
jge
rcrb
test
pop
out
std
mov
dec
testl
inc
or
pop
mov
stc
cmp
dec
roll
out
adc
or
or
push
push
incl
inc
out
iret
add
ror
rorl
test
sbb
das
nop
xchg
mov
fldenv
mov
lcall
inc
or
inc
in
jnp
add
imulb
imul
xchg
dec
sub
jmp
mov
jmp
or
or
lods
lret
shll
mov
mov
and
mov
loope
mov
mov
test
iret
sti
out
mov
or
daa
fsubl
dec
outsl
xchg
sarl
add
xor
add
mov
cmc
rol
fldt
adc
sbb
bound
lahf
mov
leave
cmp
pusha
mov
xchg
add
mov
sbb
pop
fisttpl
inc
mov
cltd
push
ret
inc
pop
jo
test
adc
xor
jo
xorb
lds
stos
mov
decb
sbb
stos
add
test
xor
add
pop
add
adc
add
subb
dec
or
das
jge
cmpb
adc
mov
daa
xor
adc
fisubl
sub
cmpsl
xor
sub
aaa
mov
std
out
lods
cltd
cmp
xor
add
orb
push
cld
mov
mov
push
negb
das
inc
lret
cmp
data16
arpl
dec
xor
inc
mov
mov
flds
add
les
mov
fsubrl
repnz
cmp
into
mov
call
cltd
ret
or
dec
sti
cmp
or
lahf
lret
push
nop
jne
xchg
sub
jno
loop
lds
pop
push
pop
rorl
bound
jle
test
sbb
xor
or
sub
fiaddl
data16
out
in
adc
repz
add
push
jo
bswap
mov
aas
xlat
sub
test
adc
adc
push
clc
add
sbb
mov
jl
xchg
and
jecxz,pn
sub
cmp
mov
arpl
sbb
inc
xor
push
push
sbb
xchg
xchg
movl
mov
bound
or
test
cmp
adc
fs
cmpsb
scas
xchg
or
leave
dec
sbb
push
sti
and
cltd
adc
int3
call
cmc
out
adc
add
mov
sbb
push
repz
rcrb
add
js
sbb
test
notb
nop
subb
add
or
add
scas
int3
outsb
js
out
cwtl
and
icebp
push
jnp
mov
sbb
jg
jle
cltd
xchg
inc
jnp
dec
xor
sub
mov
and
and
sub
ret
cmp
cmp
repz
dec
xchg
loopnew
paddw
nop
push
test
xabort
call
dec
inc
fs
or
and
iret
mov
mov
idivb
mov
inc
aaa
jno
test
pushl
cmpb
xchg
add
adc
mov
mov
push
add
ljmp
rolb
xchg
stc
dec
je
or
into
pop
je
mov
test
pop
dec
stos
jmp
xchg
and
pop
gs
adc
xorb
call
mov
jo
fildl
loop
ret
adc
clc
dec
jb
andl
dec
pusha
add
loop
mov
inc
ss
pop
in
mov
cmp
repnz
stc
pop
addb
enter
roll
inc
test
and
mov
or
push
mov
pop
inc
into
daa
adc
dec
adc
lcall
lea
pusha
sarl
icebp
cmp
and
and
cmpsl
mov
test
adc
xlat
or
or
gs
icebp
addb
xchg
addl
push
enter
add
pop
adc
bound
shll
adc
push
sub
cmp
lock
imul
adc
dec
or
cs
add
cld
test
into
mov
inc
fildl
adc
nop
xor
xor
sbb
add
shlb
xor
mov
cltd
ret
xor
enter
xor
add
mov
pushl
push
jecxz
lods
sbb
dec
xchg
adc
sti
mov
add
adc
sub
cmpl
mov
test
xor
and
js
lds
xor
sub
fbld
add
jne
fiadds
jmp
and
testb
lcall
jl
sbb
dec
pop
and
shlb
push
inc
and
lret
lahf
ret
push
sti
dec
pop
adc
rorl
sbb
dec
test
adc
je
lea
inc
hlt
enter
out
rcrl
int
adc
fsubrl
lea
push
call
loope
je
pushf
push
jbe
ret
insl
hlt
add
push
out
xchg
lock
pop
jle
jne
leave
xor
popa
ret
into
shlb
shr
push
jl
mov
repnz
movzwl
inc
cmp
adc
xchg
add
std
push
mov
xor
adc
jl
dec
add
enter
xorl
sarb
sbb
adc
push
fadds
sub
mov
sbb
inc
add
adc
movsb
adc
and
add
push
adc
dec
xor
xor
call
test
pop
loop
fs
push
mov
sub
inc
mov
roll
and
ret
loop
iret
pop
xchg
pop
daa
or
jo
inc
xchg
jp
adc
fstl
mov
enter
orb
xor
lock
adcl
je
call
pop
sub
lds
push
mov
add
call
xor
push
inc
fistpl
jmp
cmp
sub
mov
mov
mov
or
or
sti
add
inc
lods
and
int3
mov
xor
pop
ret
mull
push
ret
call
push
pushf
clc
jle
or
sub
or
or
subl
ss
pop
rcll
add
pop
test
xor
sub
cwtl
xor
add
xchg
jle
mov
int
mov
in
dec
call
or
ret
roll
xor
jne
sbb
xchg
pushl
int
add
jno
sbb
test
sub
repnz
xor
cmpsl
dec
movsl
iret
outsl
dec
xor
dec
mov
adc
inc
push
mov
testl
or
dec
or
gs
push
je
lods
aam
int3
decl
or
je
inc
adc
xchg
cwtl
xchg
or
mov
or
cmpl
adc
mov
call
lcall
inc
ss
or
ja
xlat
xor
inc
dec
push
mov
icebp
clc
sbb
cld
nop
jge
call
jmp
pop
pop
sbb
lds
and
add
xchg
mov
inc
push
insb
cmp
xchg
popw
adc
aaa
call
gs
sbb
xor
pop
inc
xor
xchg
enter
sub
stos
mov
adc
sar
dec
xor
xor
fisubrs
and
insb
ret
or
popa
xchg
int3
testl
call
push
add
add
repz
lea
movsb
xchg
push
add
and
mov
testl
lock
sbb
call
mov
xchg
xor
add
push
inc
mov
push
adc
xor
clc
or
sub
ret
sarl
mov
dec
hlt
mov
rolb
lret
clc
fcompl
inc
add
and
jge
call
push
bound
mov
sbb
dec
and
pop
push
inc
push
xabort
stc
or
mov
mov
push
xchg
xor
cmp
inc
jbe
mov
out
adc
and
xlat
scas
mov
loopne
inc
pop
cmp
fcmovnb
pop
lret
rdtsc
mov
imul
ds
enter
mov
mov
sbb
les
jl
jp
insb
adc
add
rep
xchg
and
jno
pop
pop
in
dec
and
inc
popa
dec
addb
rep
xchg
adc
xor
repnz
test
rorb
adc
rcrl
andb
jo
mov
sbb
je
inc
inc
dec
jne
pop
lret
dec
add
cltd
test
pop
mov
ud2
mov
js
dec
xor
in
cmpsb
pop
dec
or
addb
in
sub
sbb
cltd
testl
cmp
mov
jne
and
cwtl
mov
dec
decl
inc
cmp
jne
icebp
and
pusha
fsubp
popa
popf
xor
add
mov
addb
add
add
cmp
push
insb
lret
sub
cld
dec
fcoms
or
shr
pop
and
rolb
cmp
repnz
inc
decl
mov
adc
enter
dec
mov
push
fildl
cs
repnz
sub
push
sbb
clc
gs
into
sub
fs
mov
call
add
sub
jge
cmp
jb
mov
je
call
int
call
setnp
mov
pop
jmp
dec
hlt
xchg
jg
pop
dec
orb
or
and
push
dec
dec
imul
subl
cmp
mov
jle
test
mov
sub
je
inc
mov
mov
xchg
pop
or
in
mov
dec
mov
or
daa
add
mov
and
arpl
push
cmp
fists
je
inc
sbb
ljmp
cwtl
push
pop
pop
jo
stos
iret
and
por
lret
push
inc
push
cmpsb
push
pop
mov
sbb
mov
jne
sbb
and
jmp
jne
push
test
jmp
adc
sbb
push
jmp
addb
insb
add
and
xor
negl
fcomps
rorb
jns
cmp
pop
sbb
pop
cmp
jne
mov
and
xor
jne
and
or
repnz
fimuls
repnz
adc
or
cs
inc
dec
sub
adc
test
clc
add
aaa
dec
cltd
add
xor
mov
shl
and
loope
sub
xchg
outsl
or
dec
sbb
rorb
or
roll
pop
mov
leave
fnsave
ds
int
negb
add
in
or
repz
or
sbb
or
or
or
jecxz
int
and
in
inc
fldl
roll
int
les
leave
adc
or
xorb
bnd
cwtl
push
les
push
dec
sbb
and
fisttps
sub
jmp
adc
jmp
jbe
inc
cs
jo
push
aad
jo
dec
push
loop
insb
dec
inc
mov
jae
nop
push
inc
les
rclb
mov
dec
and
inc
les
xchg
inc
mov
dec
pop
inc
cmpb
push
or
or
add
rcl
or
xor
je
movsb
jns
nop
push
dec
mov
popa
or
sub
enter
cli
mov
sub
and
or
pop
orl
sbb
or
test
add
rcrb
jmp
fs
pop
fs
shll
mov
mov
fcomps
pusha
mov
and
sub
dec
popa
and
lods
lock
inc
pop
sahf
pop
sub
ds
pop
lret
adc
mov
mov
or
into
and
push
enter
push
push
xchg
std
mov
repnz
cli
or
lret
bound
jp
repz
cmpsl
adc
and
add
jb
xlat
jl
cld
inc
xor
jle
dec
nop
add
es
xor
mov
adc
and
sbb
pop
loop
add
sbb
addb
cs
sbb
dec
sub
ljmp
lcall
and
sub
adc
ds
push
repz
add
add
loopne
add
push
jo
mov
push
es
test
adc
repnz
sahf
mov
sbbb
jnp
out
dec
jg
push
ds
repz
add
mov
movsb
movsb
in
or
popa
aas
and
cwtl
fdivrp
movsb
mov
inc
ret
pop
pop
add
mov
xorl
cmp
stc
xor
fldl
adc
xlat
or
or
sub
mov
stc
adc
push
or
adc
dec
in
jle
xchg
aas
shll
test
cld
std
mov
add
sbbl
or
cmpsl
or
or
or
or
call
dec
fmul
loopne
cmp
bound
adc
sub
or
popf
or
lds
mov
cwtl
mov
pusha
fmuls
fadds
jbe
xor
pop
or
mov
cmpsl
xchg
cmp
insl
das
adc
inc
in
call
xor
movsb
sub
pop
cmp
and
add
mov
leave
call
mov
jmp
out
aas
outsl
ds
jmp
or
mov
in
push
fwait
dec
pop
or
fs
clc
mov
push
inc
jmp
jmp
dec
push
sahf
xchg
loope
ret
bound
nop
push
inc
clc
aas
and
das
gs
repz
and
cli
aad
ret
lahf
push
enter
addb
les
test
and
nop
or
jnp
cld
andl
loopne
cmc
pop
fisubl
inc
mov
mov
push
or
adc
jae
adcl
push
xor
mov
jno
jg
or
and
dec
fsub
push
cmpl
out
dec
mov
popa
loop
push
adc
or
loope
xchg
jg
fwait
jbe
mov
int3
mov
and
out
and
and
push
adc
push
cmp
push
push
cmp
fmuls
adcl
mov
jge
add
sbb
mov
ja
push
enter
shlb
jmp
push
les
xor
ss
inc
jg
sub
jle
es
push
aas
in
in
insl
mulb
cld
add
sub
sub
add
push
and
push
push
pop
jmp
and
or
adc
cltd
cmp
mov
and
cmp
es
xlat
popa
mov
int3
or
cs
clc
outsl
inc
mov
add
mov
loopne,pn
push
add
mov
adc
add
add
inc
jp
push
push
push
test
push
and
adc
xor
xlat
and
inc
movsl
pushf
push
dec
adc
and
enter
and
sbb
in
je
test
rorb
xchg
jecxz
aam
jbe
test
push
movsb
ja
dec
lea
cli
cltd
jno
push
or
adc
and
imul
add
mov
pop
out
jnp
mov
and
push
fbld
test
loope
call
add
adc
or
rcrb
ret
inc
test
idivb
xorl
push
je
and
adc
adc
out
lret
or
cmp
inc
inc
xchg
jno
jge
nop
imul
push
push
add
pop
dec
adc
push
adc
js
add
and
jp
subl
lea
mov
adc
or
cmp
xor
push
sbb
xor
cmp
add
dec
add
adc
bound
or
jbe
jmp
mov
call
cmc
mov
lock
jo
hlt
out
pop
rcll
dec
mov
xor
sbb
dec
mov
daa
out
xchg
pop
adc
or
adc
jne
xor
jmp
sti
push
push
sub
call
sbb
inc
sub
dec
roll
nop
fcoml
adc
xchg
push
lret
mov
push
insl
repz
aas
push
inc
inc
enter
lret
in
jo
inc
jmp
movsl
mov
push
sbb
xor
adc
sub
adc
push
add
in
ja
add
outsl
mov
pop
sub
xor
inc
sbb
jle
sbb
ja
stos
add
inc
sub
je
cmp
and
inc
or
add
jmp
mov
ret
push
sub
icebp
loopne
dec
clc
cmp
shr
mov
mov
cmp
dec
sbb
add
xchg
sbb
hlt
inc
js
ja
sub
add
ret
cmovns
push
xchg
icebp
push
call
out
mov
jo
cs
or
sub
xor
or
pop
sub
fildl
push
push
stc
dec
in
mov
loope
shl
gs
or
push
lds
mov
add
xor
mov
xchg
lret
cwtl
push
and
push
fs
in
in
or
cmp
mov
inc
fmul
push
inc
fmuls
mov
rorb
call
movhlps
sub
pop
cltd
inc
mov
pop
clc
nop
aam
pushf
sub
sub
and
das
mov
mov
adc
cltd
in
and
adc
inc
aas
fadd
mov
lods
xor
adc
pop
lock
push
adc
and
add
pop
mov
outsb
mov
jno
aaa
mov
pop
mov
nop
stos
push
xor
inc
arpl
sbb
add
je
cmp
mov
orl
jge
out
rolb
xor
push
jl
mov
cmp
clc
push
pop
rolb
adcb
ds
add
popa
icebp
adc
xor
sbb
add
push
jae
inc
adc
or
repz
int3
or
int3
movb
and
push
nop
in
mov
and
add
push
in
add
scas
and
lret
pusha
and
daa
mov
sahf
sbb
cmp
and
cmp
test
data16
mov
adc
lret
or
or
loopne
inc
js
dec
mov
or
xchg
sahf
arpl
push
mov
xor
mov
push
xchg
xor
and
fucomip
call
sub
dec
mov
dec
fsubrl
dec
adc
or
lds
push
jle
sub
and
cld
or
add
pop
nop
xor
nop
icebp
dec
sub
dec
repnz
inc
lock
mov
mov
loop
cmp
iret
daa
mov
pop
sbb
or
sub
pop
insb
pop
or
jbe
xor
inc
lea
sahf
mov
dec
ja
and
add
mov
jmp
outsl
ljmp
sub
dec
lret
lods
add
sbb
lcall
hlt
or
jae
or
repnz
sahf
stos
mov
and
pushf
shrb
daa
aad
andb
addr16
jle
gs
adc
les
test
sbbb
pop
push
push
add
push
add
xchg
and
xor
add
aaa
js
jg
clc
jae
je
jbe
mov
jle
push
push
push
xchg
stc
jae
xchg
mov
xchg
popf
arpl
xchg
jno
jle
adc
ja
push
pop
and
push
push
adc
add
cmp
or
mov
add
fsubs
loope
sahf
iret
test
andl
inc
xor
call
into
nop
push
or
stos
or
les
or
xor
out
xor
add
shrb
iret
jmp
push
mov
push
lds
xor
adc
jnp
mov
loopne
add
cmp
loopne
out
stos
xor
cmp
push
add
mov
and
or
mov
inc
add
pop
es
sar
cmp
cmp
stos
add
loopne
jl
push
sarl
insb
addb
shrb
bound
cmp
push
push
loop
sbbl
jo
fcompl
sahf
sub
or
jae
pop
xchg
nop
inc
add
call
pop
movsb
add
popa
mov
out
sub
stc
sub
add
arpl
lret
ljmp
xchg
adc
rcr
out
jmp
mov
test
mov
sbb
cmp
add
lock
sub
sbb
iret
aas
push
push
fistps
push
pop
add
mov
adc
adc
dec
jne
add
scas
add
xchg
sbbb
pop
loopne
push
push
xchg
stc
sbb
sbb
sti
mov
test
aam
aaa
jl
xor
add
je
xchg
aad
push
jl
push
xor
add
push
mov
orb
lahf
cld
inc
cwtl
imul
rolb
jle
popa
add
and
add
pop
shrl
imul
mov
loopne
addb
jmp
jle
dec
sahf
js
mov
or
imul
clc
shr
test
xchg
cs
sbb
data16
mov
add
jg
lea
mov
xor
or
mov
push
cltd
add
daa
loop
lea
inc
lcall
test
add
pop
push
cmp
cwtl
sub
es
pop
inc
fxch
arpl
adc
mov
inc
push
cmp
inc
aas
jb
test
sarb
je
cmp
pop
dec
mov
add
pop
push
repz
int3
mov
add
add
pop
adc
mov
pusha
jb
sub
data16
cmc
push
mov
repz
ret
test
mov
cmp
pop
sub
and
dec
arpl
mov
push
cmp
icebp
dec
sub
adc
sbb
cld
mov
adc
mov
jle
fstpl
cmp
jns
cwtl
ljmp
add
push
ss
dec
into
sub
xor
mov
xchg
rclb
mov
sub
or
add
mov
scas
push
inc
aam
cld
jo
push
icebp
cmp
stos
jp
or
push
out
mov
push
mov
dec
inc
outsl
dec
xor
gs
xor
loopne
jge
add
ljmp
idivb
adc
dec
mov
out
cmp
sub
lahf
and
add
stos
enter
pop
clc
and
jnp
jg
xchg
or
add
mov
add
rorl
push
pop
inc
cmp
sbb
cld
cli
mov
lret
cmp
inc
ret
xchg
or
iret
dec
fstpt
mov
mov
xor
push
xor
jno
adc
sub
clc
inc
cmp
add
xor
adcl
xor
mov
pop
and
jb
sbb
sbb
cmp
adc
sub
int3
mov
loope
sub
add
add
call
test
je
mov
subl
sbb
sbb
cwtl
and
add
add
xor
jmp
push
leave
sbb
cld
cmp
leave
test
sub
in
dec
sub
push
push
xchg
add
adc
xor
sahf
add
sbb
mov
les
xor
inc
cmc
cmp
enter
jne
outsb
clc
inc
push
pusha
aaa
cld
call
stc
std
aam
add
mov
add
and
dec
lahf
ds
inc
jl
mov
or
mov
shll
xor
aam
push
js
push
loope
and
dec
insb
cmp
inc
cs
add
fcmovnbe
mov
xor
inc
add
push
pop
dec
popa
enter
mov
and
add
cld
ret
outsb
hlt
jae
fwait
mov
push
js
aas
icebp
sub
or
mov
nop
dec
add
adc
push
in
xorb
inc
lcall
hlt
aaa
pop
pop
dec
xchg
cltd
andb
mov
scas
pop
sbb
mov
inc
lock
iret
inc
dec
cmp
imul
std
sub
add
dec
ret
inc
adc
ljmp
cmp
mov
shrl
test
mov
push
mov
xchg
and
dec
jae
adcl
adc
bound
xchg
add
sbb
sub
sub
pop
pop
adc
in
rcrl
adc
or
cmc
pop
xchg
push
aaa
insb
add
outsb
sub
inc
mov
inc
jl
jo
ret
pop
fisttps
stc
add
pusha
scas
shrb
or
cmpsb
jl
jp
add
or
xor
stos
jl
cmp
in
push
call
and
and
push
add
mov
dec
xchg
shll
push
jo
fmuls
or
adc
cld
jle
lds
rol
data16
mov
test
and
add
loopne
pop
or
xor
js
lahf
fs
push
jp
repz
sbb
test
out
sbb
jmp
inc
jle
andb
cmp
xchg
mov
pop
or
aad
dec
pop
bound
pop
jg
cmp
lds
jae
add
xchg
in
mov
jmp
addr16
mov
jmp
jno
push
lods
repz
inc
mov
pop
jae
sbb
add
rolb
cmp
pop
cmp
add
xor
enter
add
jecxz
lahf
xor
cld
or
jno
add
addb
pusha
fidivrs
xorl
pushf
movsb
and
adc
cmp
adc
nop
pop
shrb
adc
pop
rcrb
xor
ss
sub
sub
flds
sarl
ds
push
cmpsl
decb
iret
xor
push
mov
roll
mov
andb
in
test
ror
leave
mov
mov
nop
sbb
xchg
loop
xchg
inc
inc
jmp
out
cs
mov
ficoms
pop
push
cmp
xor
push
fs
stos
adc
fs
in
dec
dec
add
scas
bound
in
mov
movsl
adc
mov
push
add
fstpt
loope
mov
jns
xchg
out
sti
js
pop
out
test
adc
loope
aas
xchg
cmp
adc
add
cmp
jg
push
dec
shll
sbb
aam
fs
xor
pusha
add
stos
adc
xor
cmp
insb
ja
mov
and
or
dec
adc
rolb
movb
mov
inc
cmp
jp
cld
in
sub
scas
cltd
cwtl
fistl
fwait
stos
or
sbb
sub
mov
xor
in
sbb
cmove
adc
ret
arpl
in
adc
inc
mov
add
dec
or
mov
loope
es
dec
dec
mov
xor
sbb
push
xlat
or
xor
add
sbb
lea
fcmovbe
add
stos
rcll
push
push
test
sub
es
cmp
and
push
add
push
cmpsb
push
xchg
push
pop
push
cld
dec
lcall
jmp
mov
les
js
or
mov
scas
leave
gs
ljmp
stc
inc
stos
enter
pushf
daa
shlb
inc
xchg
sbb
or
pop
icebp
decb
cmp
out
or
adc
mov
gs
jne
aas
in
xor
push
fisttpl
xchg
sub
loop
xor
push
data16
push
xor
outsl
ret
add
scas
stc
pushf
jnp
dec
lock
sbb
jecxz
dec
jnp
pop
mov
stc
outsb
xchg
jb
in
pop
repnz
inc
or
filds
inc
enter
lahf
xchg
sbb
iret
loope
xchg
test
and
or
pop
popa
movsl
pop
scas
xor
jo
jmp
loop
stc
add
add
inc
add
xchg
leave
add
jo
pop
xor
dec
jo
lret
loop
jb
pusha
cmp
loopne
add
jge
xchg
sbb
jbe
xor
sub
add
into
dec
in
inc
mov
push
sub
test
rol
add
jge
pop
sbb
pop
mov
inc
xor
cmp
push
lahf
adc
mov
dec
faddl
sbb
movsb
add
push
xchg
add
jno
enter
cmp
and
inc
xchg
adcb
push
cli
add
ficoms
and
jnp
call
popf
sti
out
mov
cmpsl
and
daa
mov
lds
push
jmpw
adc
fistpl
cmp
inc
jg
cmp
adc
or
xchg
xor
outsl
dec
xchg
lret
fmul
movb
jg
aas
enter
test
sbb
jl
cmpsb
and
push
fucomp
xchg
les
xchg
dec
sub
scas
or
xlat
and
ret
push
inc
pop
loop
cltd
hlt
inc
out
push
test
mov
and
test
mov
sub
add
cs
sbb
cmp
push
xor
adc
add
adc
test
stos
rolb
adc
push
or
sbb
cmp
mov
mov
mov
sub
lods
inc
push
pop
or
adc
addr16
cmp
dec
push
pop
in
addl
mov
hlt
sbb
xor
imul
nop
fidivl
mov
pop
sub
sbb
mov
inc
xchg
dec
inc
sbbl
test
adc
jg
rorl
in
xchg
lods
sub
cli
inc
int
shl
inc
sub
test
fsubr
jno
cmp
cs
pop
inc
cmc
cmp
fadd
sub
or
jecxz
scas
add
xchg
push
add
push
ret
aas
pop
dec
mov
push
jecxz
andb
xor
fwait
or
inc
add
add
pusha
mov
enter
std
je
test
pop
or
test
test
add
lcall
test
or
add
add
loopne
sahf
fscale
test
sti
jne
push
ficoms
lock
xor
lods
and
push
repnz
cltd
aaa
add
arpl
push
je
dec
push
lret
dec
adc
orb
jns
filds
sbb
pop
mov
sbb
pop
cmp
lret
insb
add
lcall
xor
sub
mov
jle
sub
cmp
enter
or
test
sub
xor
xchg
cmpl
mov
addr16
sar
in
mov
sub
incb
add
sbb
xchg
jle
sub
cli
dec
cmp
and
and
add
test
fistpll
xlat
cli
cmp
xor
cltd
jp
xchg
ret
or
push
lods
pop
jle
loope
adc
dec
or
or
loope
rolb
nop
mov
mov
lock
popa
adc
jle
mov
push
sbb
pusha
xor
repnz
push
cld
add
xor
xchg
out
out
mov
sbb
out
sbb
popl
pop
repz
inc
xchg
pusha
add
push
ficoms
or
or
call
stos
inc
loopne
out
and
icebp
in
shll
add
gs
mov
sub
inc
mov
daa
xor
test
cwtl
adc
sub
clc
mov
aam
mov
aas
cs
iret
mov
jg
rclb
sub
or
cmp
inc
cmpsb
loopne
inc
ret
mov
popf
or
mov
adc
lods
cmpsl
mov
jo
pop
dec
mov
mov
mov
xor
inc
fs
call
sub
mov
cld
xor
and
movzwl
adc
sarl
mov
and
cmpsb
xchg
adc
inc
or
mov
jne
mov
and
mov
les
or
daa
mov
and
mov
adc
add
mov
dec
outsb
lret
mov
add
loopne
add
dec
loop
sub
cmp
mov
add
dec
jo
adc
add
xchg
adc
push
iret
add
add
or
and
cli
sbb
sbb
loop
sub
sub
sub
loop
mov
push
push
xor
or
jno
les
nop
sub
idiv
cmp
stos
and
in
sbb
adc
push
mov
add
mov
or
pop
mov
imul
cmp
pop
lock
cmp
xchg
daa
jb
in
dec
adc
insb
push
call
or
jp
xor
nop
out
or
aaa
adc
loope
jno
loopne
cld
mov
test
or
xor
mov
add
xchg
loop
or
mov
sbb
push
adc
enter
in
and
xchg
rcr
mov
or
lea
je
add
push
ret
push
dec
mov
roll
lock
inc
pop
add
mov
dec
out
or
push
inc
inc
jle
push
cld
test
xchg
aam
popa
push
xchg
mov
xor
call
and
and
push
stos
int
jnp
outsl
mov
in
adc
mov
push
bound
or
inc
in
aad
fcmovnbe
icebp
iret
push
or
mov
hlt
cwtl
inc
inc
cmp
shrl
push
dec
adc
or
sbb
in
push
mov
pop
test
pop
pop
je
testb
jne
ds
push
sbb
subl
xlat
lock
cmp
jb
sbb
pop
jmp
nop
sbb
bndstx
enter
jae
xor
push
inc
orl
pop
add
sbb
std
mov
push
adc
pop
sbb
add
testb
cmp
aas
jbe
mov
inc
or
aam
outsl
sub
adc
mov
jmp
iret
push
xchg
pusha
clc
dec
jno
sarb
mov
xor
movsb
mov
call
testb
sbb
lret
or
ss
inc
mov
sbb
adc
cld
testl
aam
dec
sbb
cs
inc
jmp
lods
shl
je
cmp
leave
sbbl
sti
in
mov
jge
or
push
cmp
ja
loop
pop
mov
mov
push
push
imull
lock
rclb
mov
dec
rclb
pop
mov
inc
adc
ljmp
xchg
bnd
sub
or
popa
outsb
int3
add
mov
arpl
or
les
sub
add
jne
cwtl
loopne
add
nop
or
outsl
fs
jecxz
popa
outsb
mov
jle
inc
js
je
push
push
pop
jge
movsl
push
aad
mov
outsl
inc
das
dec
inc
imul
outsb
addr16
gs
push
adc
add
ja
data16
or
dec
or
js
push
insl
and
mov
je
popa
outsl
inc
mov
mov
cmpl
push
dec
cwtl
dec
xor
and
fs
mov
addr16
outsl
arpl
push
push
inc
cmp
pusha
