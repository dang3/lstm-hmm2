das
aaa
push
mov
sarb
dec
aas
xor
adc
adcb
mov
dec
pop
leave
inc
test
lret
mov
test
inc
fsts
out
cmp
icebp
add
jle
dec
sbb
xor
inc
mov
xor
jp
shll
inc
pop
bound
xorb
mov
cli
adc
gs
mov
push
mov
mov
mov
ja
fcomps
daa
sub
aas
mov
sub
and
or
push
in
andb
shrl
pusha
jne
dec
cmp
inc
scas
mov
pop
and
in
jecxz
xchg
movsb
jae
mov
jbe
xchg
jb
stc
sbb
lret
mov
sub
clc
push
xchg
lea
fcomp
mov
pusha
cld
sti
fwait
sub
decb
je
stc
mov
push
idivl
fisttpll
sub
pop
sub
pushl
lea
not
movzbw
mov
push
push
jmp
mov
pushl
pushf
xchg
movsbw
pushl
popl
pop
setb
push
call
lea
call
pusha
pushl
pusha
pushf
lea
jmp
sbb
rcl
sub
or
sub
sar
mov
test
cmp
sub
cmc
jmp
push
lea
je
clc
pushf
add
push
pusha
cmp
mov
pushf
jmp
add
inc
js
je
jb
arpl
jae
jmp
lea
ja
rcl
dec
adc
dec
add
sub
bt
mov
push
clc
cmp
pushf
jmp
sets
push
add
mov
clc
shl
pusha
pushf
movb
push
lea
je
pusha
push
mov
pusha
movl
xchg
jmp
test
add
xchg
iret
sub
aaa
jg
jo
nop
aaa
mov
pop
push
outsb
pop
into
mov
or
inc
jl
inc
push
outsb
mov
lds
pop
ret
out
dec
arpl
mov
xchg
cld
out
sbb
shr
and
sti
lods
aam
jae
push
mov
nop
out
shlb
xor
int3
loopne
pop
mov
out
sub
imul
adc
pop
sti
mov
nop
cmp
lret
hlt
jno
pop
pop
fs
push
mov
sub
and
or
jb
sti
jno
int3
negb
cltd
push
mov
neg
mov
repnz
xchg
pop
popf
pushl
and
cmpsl
jmp
mov
in
mov
scas
sbbb
les
imul
push
bnd
mov
inc
mov
lret
push
fwait
inc
xchg
fisubrl
cs
mov
mov
fcomps
rcrl
adc
aam
push
mov
mov
jns
imul
jmp
test
sub
mov
cmc
clc
stc
cmpb
push
pusha
movb
call
cwtl
outsl
xchg
scas
into
dec
andl
sbb
stc
xchg
pop
xor
sbb
lds
add
mov
mov
in
or
xlat
lods
jne
or
icebp
cmp
sahf
push
ds
push
jne
push
stos
jns
mov
or
sbb
test
mov
jp
daa
andb
das
dec
pusha
cmpsl
dec
pop
mov
std
pop
pop
je
scas
movsb
push
aaa
mov
mov
xchg
pop
cmc
sbb
mov
nop
push
imul
dec
xchg
scas
pop
hlt
pop
and
stos
jp
sbb
lret
orl
fidivs
test
iret
cmp
mov
sbb
add
dec
sub
pop
shlb
cmp
cvtps2pd
push
and
addr16
xchg
sahf
push
mov
sub
loopne
dec
fisubrs
mov
imul
js,pn
dec
cmc
rcr
aam
in
pop
inc
hlt
loope
jbe
dec
and
out
subb
sub
out
ds
jmp
out
out
imul
into
cwtl
push
xor
or
setle
pusha
add
and
lods
cmp
xchg
fsubl
dec
cmp
lock
sbb
xor
xchg
mov
gs
xchg
pop
pop
xchg
sbb
lcall
add
jg
push
pop
push
outsl
cmove
aas
aaa
dec
shlb
dec
xor
xchg
pop
pop
ss
xchg
add
imul
xlat
repnz
rcl
push
lds
aaa
call
mov
mov
mov
imul
sar
mov
cmp
outsl
std
pusha
add
pop
ja
mov
jp
push
lret
test
pop
data16
or
pop
out
js
pop
jmp
movsb
outsl
and
bound
jg
jnp
push
adc
adc
cmp
call
lret
nop
pushf
mov
push
cmc
adc
ja
shr
mov
push
and
cmp
rcrb
lret
mov
xchg
frstor
cwtl
nop
fcoml
inc
aas
pop
push
push
sbb
xorl
ds
loop
dec
and
mov
dec
xchg
add
inc
mov
sbb
leave
pop
push
outsl
and
jp
and
hlt
cwtl
mov
andl
sub
dec
and
lahf
xor
arpl
and
sbb
dec
inc
xor
mov
mov
stos
jp
mov
and
add
add
setle
lea
pushf
mov
movl
pushf
pushl
popl
pushf
mov
pusha
pushl
ret
inc
pushf
cmc
not
mov
cmp
clc
cmp
add
pushl
call
clc
mov
ror
mov
clc
stc
cmc
stc
cmp
call
jmp
cmp
shl
mov
stc
add
push
shr
mov
pusha
jmp
mov
lea
je
clc
sub
bt
cmp
push
push
jmp
lods
fidivrs
xor
mov
outsb
out
leave
mov
dec
sub
scas
data16
filds
data16
push
mov
cmp
fists
mov
adc
js
mov
jmp
mov
ret
fildl
pop
rcrb
sbb
push
xchg
cmp
repnz
popa
aaa
push
sbb
shl
sub
es
xchg
cmpsl
ljmp
push
or
out
stos
pop
loope
loop
cltd
xchg
push
orl
push
xor
mov
sbb
sbb
pop
xlat
cld
stos
jp
push
and
movl
mov
pushf
push
mov
lea
jmp
cmpb
pusha
pushl
lea
jne
inc
sbb
mov
stc
test
stc
push
add
jmp
pushf
call
lea
lea
pop
mov
pushf
movw
lea
ja
pusha
lea
jb
cmp
test
cmc
cmpb
pushf
pushf
pushf
pusha
lea
jne
pushf
shr
mov
clc
jmp
call
pusha
movl
pusha
mov
mov
pushf
lea
jmp
cmp
pusha
push
mov
lea
jae
xchg
sbb
cmp
pusha
mov
sar
setns
shl
movsbw
mov
shl
pop
rcr
mov
bt
xor
pushf
movb
repnz
pusha
jmp
mov
dec
into
dec
jp
in
jns
jle
mov
push
fidivl
mov
sbb
out
xor
fnstenv
or
push
sub
mov
out
or
add
repnz
test
mov
popl
jp
testb
cmc
jmp
add
stc
push
test
lea
jno
jne
pushf
jmp
lea
jae
inc
pushf
cmc
clc
mov
cmc
pop
stc
and
mov
rcr
mov
bt
clc
sub
cmc
call
test
xor
pushf
stc
stc
call
and
das
arpl
sahf
aas
out
fisubrs
arpl
arpl
arpl
into
arpl
outsl
ds
aas
arpl
fisubs
das
arpl
in
fisubrs
out
arpl
mov
sahf
in
arpl
mov
mov
cmp
sub
sub
mov
bsr
cmc
mov
call
jne
gs
xor
fs
insb
add
fsubr
pop
or
add
mov
dec
ror
sub
rol
mov
test
pusha
jmp
add
stc
movzwl
bsr
mov
push
bt
pusha
add
cmc
call
xor
shr
mov
test
test
cmpb
pusha
push
call
arpl
xor
xor
div
cwtl
mov
mov
rcr
test
es
data16
out
ret
sbb
arpl
add
scas
bound
call
test
mov
xor
mov
fadd
jae
and
icebp
mov
pop
mov
insl
ror
sub
loope
loope
jp
sbb
adc
mov
dec
pop
mov
jmp
repnz
call
bt
add
test
pushf
test
movzwl
and
bt
not
inc
mov
call
mov
jmp
mov
inc
mov
dec
or
pop
loop
push
adc
rcl
jge
mov
or
inc
inc
dec
add
mov
mov
sahf
pushl
inc
dec
test
cs
scas
gs
outsb
xchg
psrld
mov
cmp
fdivrl
cmp
cmc
mov
push
aas
vshufps
call
push
setno
mov
lea
call
enter
push
push
push
push
jmp
je
jnp
sbb
repz
adc
lods
sti
rcl
mov
data16
in
mov
and
pop
xlat
mov
jmp
das
sub
add
mov
pop
nop
sbb
cmp
insb
daa
jno
insb
adc
jmp
inc
scas
orb
lds
xchg
pop
inc
and
sbb
adc
xchg
pop
mov
push
stos
jp
mov
or
bound
add
adc
pusha
call
inc
ficoms
mov
push
or
out
dec
inc
xchg
test
call
and
repnz
jmp
inc
jb
stos
pop
pushf
call
mov
push
stos
push
enter
xchg
mov
push
sbb
pop
popf
xlat
out
pushf
push
ret
out
adc
or
fmull
gs
in
push
mov
les
dec
fndisi(8087
in
mov
lods
rol
orl
jno
push
cmp
adc
ret
dec
not
call
mov
push
repnz
pushf
pushf
lea
jne
shl
mov
dec
jmp
fisubrs
loope
or
int
pop
pop
lahf
fcomps
adc
pop
xor
xor
outsb
inc
adc
adc
lea
arpl
xchg
push
sahf
adc
mov
int
movsb
mov
xchg
faddl
inc
insb
loopne
and
sub
push
sbb
and
dec
loope
lea
mov
ficoml
jp
jge
jp
popf
mov
inc
and
adc
push
inc
and
not
not
not
movl
cwtl
lea
jmp
clc
cmc
rol
jmp
stc
arpl
lods
pop
and
add
mov
mov
lods
pusha
ss
stos
sbb
icebp
cli
inc
sub
sub
mov
mov
rcrl
sbb
sub
clc
hlt
arpl
ljmp
sub
dec
arpl
inc
inc
out
sahf
xor
xchg
pop
xor
xchg
pop
xlat
mov
push
push
movswl
jo
rol
lret
adc
iret
mov
arpl
enter
sbb
inc
and
ret
inc
sub
inc
xor
mov
xor
std
and
mov
or
cmc
shl
mov
pop
dec
jg
inc
fstpt
or
or
bound
btr
adc
mov
push
bt
bt
cmpb
pushf
pusha
jmp
lea
jb
bt
pushf
pushl
cmp
call
push
xchg
jae
fbstp
movsl
ret
lret
insl
add
into
ret
imul
push
pop
dec
adc
cwtl
lea
std
stos
lret
jne
aas
mov
je
xchg
sbb
orl
cld
inc
aad
mov
in
gs
cmp
cmp
testl
or
test
std
adc
mov
cli
jbe
cmp
mov
ljmp
add
subb
mov
jb
cmp
xchg
xorb
adc
or
jl
das
push
in
icebp
loope
int3
div
sbb
lds
addb
outsl
cmp
cmp
popf
ljmp
cmp
mov
push
sbb
fidivl
imul
push
xor
adc
mov
mov
scas
loop
xor
repz
into
sub
outsb
in
cmp
mov
nop
cld
aaa
jl
sbb
jp
stos
mov
lahf
mov
pushf
pushf
lea
ja
push
pusha
lea
jb
push
stc
jmp
jmp
mov
pushf
pusha
mov
lea
jmp
pusha
lea
jne
cwtl
mov
pusha
pusha
movl
push
lea
jmp
mov
movl
mov
movb
mov
pushl
ret
push
pushl
popl
stc
bt
cmc
stc
cmp
pushf
lea
ja
xor
and
sub
bswap
sbb
call
pushf
mov
pushf
push
mov
movb
pushl
ret
bt
call
cmp
pushl
call
push
pusha
movl
pusha
pushf
lea
jmp
pushl
lea
jne
bt
sub
and
not
cwtl
test
mov
cmp
inc
sar
sets
add
pusha
adc
not
mov
cmc
test
push
lea
je
cmp
jmp
pushf
cmp
push
lea
je
bt
push
jmp
add
add
aad
rcr
neg
sbb
push
bsf
mov
movsbw
and
movsbl
sub
shrd
and
btr
push
cmp
das
push
sets
bts
lahf
ror
push
bsr
btc
xor
push
lea
lea
pushl
mov
pusha
movb
mov
pushf
jmp
cmp
push
pushf
lea
jns
push
lea
jne
push
pusha
pusha
inc
call
mov
lea
jne
sar
aas
sub
test
sub
setge
mov
shr
add
adc
shl
rcr
mov
push
test
jmp
lea
je
pushf
pushf
lea
jnp
pusha
adc
push
mov
pushf
pushf
lea
jmp
lea
lea
pushf
stc
stc
sub
pushl
jmp
lea
jb
pusha
cmp
jmp
cmp
jmp
and
bt
add
pushf
push
lea
jmp
lea
je
pushf
pushf
lea
jmp
jmp
mov
neg
shl
cmc
bswap
add
bts
neg
movzbl
mov
call
movl
pusha
call
push
mov
lea
jns
dec
stc
cmc
xor
pusha
cmp
mov
sub
pusha
pushf
lea
call
clc
cmp
clc
cmp
pushf
lea
jae
pushf
pusha
cmp
call
cli
pusha
sub
int3
leave
into
push
dec
clc
ret
mov
cmpsb
mov
cmpsb
ljmp
mov
in
lret
stos
loope
rorl
cmp
dec
in
pop
push
lods
inc
mov
test
inc
call
add
jecxz
les
inc
stos
jp
jbe
mov
arpl
pop
dec
test
and
dec
psubsb
scas
inc
out
inc
pusha
dec
xchg
popf
jnp
pop
pop
xor
rorl
sub
push
xor
dec
orl
or
xor
imul
clc
xor
add
and
or
pusha
pop
xchg
xchg
test
mov
mov
cli
lods
test
mov
subl
pop
xor
fcoml
push
mov
dec
out
jne
ljmp
xor
insb
and
sub
push
push
int
stos
jp
fldcw
mov
dec
fidivrs
ret
clc
lock
lahf
clc
fistps
dec
movsl
leave
dec
out
hlt
pop
gs
add
mov
inc
enter
xchg
mov
jle
pop
jg
fcoms
mov
or
movsl
lahf
ja
shl
push
into
outsl
rcr
mov
mov
add
int3
stos
jp
out
je
lea
jo
ja
clc
pusha
cmc
imul
clc
add
pushl
pushl
lea
jmp
push
cmpsb
and
cli
lds
scas
out
dec
das
addr16
cmpsl
das
movsb
push
into
xlat
aas
rcrl
ret
xchg
cmpsl
call
in
cmpsl
int3
rorb
daa
jns
sub
xor
call
xlat
lcall
lret
stos
jp
repz
inc
lock
add
btr
sub
push
rcr
rol
dec
mov
shl
add
xor
add
sar
shl
mov
call
push
push
push
lea
jne
pushf
pusha
lea
jmp
cltd
add
or
dec
popf
sbbl
lds
mov
hlt
mov
ficoms
aam
dec
adc
add
push
hlt
cltd
test
call
push
gs
in
inc
add
fcompl
push
ljmp
and
add
subl
xlat
out
cs
out
cltd
mov
pop
fistpl
ja
xor
fisubs
movsbl
movzbw
call
ror
call
pusha
pushf
movl
push
pushf
pushf
movl
movb
pushf
mov
movb
lea
jmp
add
pop
ds
into
push
cmp
cmp
test
out
push
das
fstl
in
and
xchg
pop
cwtl
mov
enter
ds
jnp
lock
sar
push
fildll
ret
xchg
or
rorl
sub
xchg
lret
jp
pop
out
aam
inc
sub
push
outsl
or
mov
cld
mov
mov
lahf
mov
ds
push
imul
popa
int
pop
adc
xchg
arpl
jl
ret
out
mov
aam
std
push
out
jg
add
mov
test
mov
aam
jbe
xor
sub
stc
adc
ficoms
fs
adc
xor
pushf
mov
add
pushf
jmp
test
sub
push
pushl
popl
pusha
pushf
bt
cmp
call
xlat
and
out
inc
inc
xor
fdivs
je
pop
repz
pushf
xor
cmp
pop
adc
mov
in
cwtl
pop
enter
xor
fidivrs
mov
pop
adc
sbb
in
mov
movsl
sub
cs
or
dec
inc
iret
mov
or
jno
sahf
dec
cmpsl
mov
dec
xchg
jnp
adc
js
data16
xlat
popf
pop
xchg
jmp
js
dec
cs
dec
dec
fcoml
iret
fs
lret
mov
jg
andb
jnp
rcrb
push
loopne
outsb
cmp
cli
inc
mov
mov
inc
sti
mov
lods
pop
cld
pop
pop
push
fdivl
push
jl
jnp
xchg
xor
fs
cltd
xor
adc
fistpll
or
sub
mov
push
pusha
pop
bts
mov
stc
cmpb
call
stc
or
jmp
push
sub
pusha
pushf
cmp
movb
lea
js
push
lea
ja
jmp
lea
ja
jmp
test
push
movb
push
jmp
cmp
xlat
xor
cmpsb
push
test
mov
shll
inc
test
xor
out
jbe
add
add
add
pop
dec
sub
cld
scas
ss
mov
push
mov
adc
das
movsb
or
mov
popf
ficompl
pop
hlt
icebp
pop
or
add
mov
push
jle
mov
mov
out
cmpsl
insb
loopne
xchg
xchg
mov
movsb
mov
sub
fwait
adc
add
jno
jp
mov
jp
or
and
pop
add
pusha
pusha
push
movl
pusha
push
lea
jmp
ljmp
rorb
stos
or
add
sub
iret
arpl
sbb
inc
jns
cli
mov
enter
test
xor
std
lahf
adc
pop
je
arpl
out
jae
push
cmp
lahf
xchg
cwtl
xor
jg
loop
mov
xchg
lods
out
adc
push
xchg
mov
hlt
or
call
inc
mov
bt
movb
test
not
stc
add
push
push
jmp
pushf
mov
call
call
pushf
mov
ja
pusha
lods
push
cmc
ror
pushf
jmp
call
pushf
call
lret
sarb
add
ds
fwait
cld
pop
adc
cld
adc
hlt
rcr
nop
fldt
lods
adc
xchg
cmp
cwtl
mov
dec
ret
ds
sub
xor
inc
adc
push
inc
cmpsb
addl
push
sbb
add
mov
fcmovnu
xor
xor
jle
enter
add
sti
ljmp
enter
sbb
inc
lods
loop
incl
dec
in
inc
and
movsl
lods
and
mov
sub
xchg
outsb
int
inc
xchg
mov
daa
jno
jo
jge
cld
ja
jp
cmpsl
mov
das
dec
packuswb
addb
xchg
movsb
test
push
hlt
lods
xchg
out
lock
idivl
xchg
jnp
add
mov
int
lret
sarl
xor
mov
cmc
test
cmp
cmp
call
pusha
pushf
jmp
pusha
push
pushl
inc
movb
mov
lea
jmp
pushl
popl
pushf
pushl
ret
stc
movb
add
jmp
jmp
or
adc
add
add
add
sbb
add
add
add
add
test
add
pop
adc
add
pop
adc
lea
jne
lea
mov
jmp
cmp
pushf
lea
jbe
call
movb
lea
call
jmp
pushf
lea
jne
not
push
pushf
movb
pusha
lea
mov
not
pusha
lea
movb
call
lea
jne
mov
mov
cmc
pushf
add
stc
cmc
call
cmp
push
pusha
lea
jbe
movsbw
bswap
bts
sub
cmc
mov
inc
not
mov
sub
ror
mov
stc
add
sar
jmp
mov
push
lea
ja
cmc
stc
imul
cmc
add
pushf
push
lea
jmp
pushf
pushl
movl
jmp
movsbw
jmp
call
cmp
pushf
pushl
add
jmp
lea
jne
mov
movzbw
adc
sub
add
mov
add
neg
add
rol
rcl
adc
ror
mov
clc
cmc
test
push
lea
je
pushf
add
jle
cmp
bt
sub
cmc
clc
bt
jmp
inc
pushf
push
pushl
pusha
lea
jmp
add
pusha
add
addb
add
adc
pop
add
add
add
adc
add
dec
sbb
add
add
add
jmp
movl
push
mov
mov
movb
push
push
pushl
ret
pusha
pusha
lea
je
push
test
sub
push
cmp
call
mov
pop
pushl
ss
add
stos
mov
imul
subl
or
adc
mov
lahf
dec
aaa
or
gs
xlat
mov
mov
in
dec
scas
cmp
test
mov
cmp
xchg
fists
repz
or
sub
int3
inc
jmp
int3
out
inc
or
xchg
popf
daa
cmp
jo
lahf
jecxz
test
lret
popf
pop
popf
push
mov
or
and
xor
jmp
pusha
add
addb
add
adc
pop
add
add
add
adc
add
dec
sbb
add
add
add
in
or
fiadds
add
pop
push
fidivrl
lock
fists
insl
cmpsb
sub
ja
pop
shl
ds
and
loop
roll
pop
int
xchg
cld
es
and
insb
inc
loop
cld
sbb
xor
pop
fcoms
push
mov
sti
out
aad
mov
enter
adc
outsb
aad
mov
xor
lret
push
hlt
xor
inc
test
aam
jge
sub
xchg
inc
inc
sbb
xchg
sahf
xchg
out
loop
xor
push
cmpsl
addb
xorl
xchg
aam
push
pop
inc
xor
ljmp
push
cmc
add
mov
jmp
pop
stos
jne
or
dec
movsb
sub
jae
insb
push
rorb
and
and
ret
sbb
and
ret
sub
and
sub
fwait
mov
sbb
add
adc
aam
push
outsl
push
fstpl
movsb
push
mov
cmp
push
mov
push
mov
repnz
jl
jb
pop
xchg
push
mov
push
sub
pop
dec
nop
clc
shr
movsb
call
jecxz
jnp
sub
inc
out
test
lret
icebp
std
rcrl
mov
jno
mov
xchg
pop
stos
jp
jge
loope
rorl
xchg
ret
stos
jmp
lea
je
bt
bt
call
push
movsl
add
inc
inc
push
test
cmp
mov
sub
lods
stos
sub
lods
in
in
fisubl
out
subb
roll
out
loopne
xor
sti
pop
push
daa
mov
or
pop
cmp
mov
in
xchg
xchg
fbstp
add
iret
jge
xchg
hlt
mov
inc
jle
icebp
cmp
rcrl
push
pop
mov
adc
jp
movsb
mov
and
call
push
jmp
call
push
lea
jb
pushf
bt
pushf
call
call
repnz
pusha
jmp
cmp
cmp
movw
pusha
jmp
jmp
lea
je
cmc
cmc
push
cmp
call
lea
jbe
bt
add
shr
pushf
sub
shrd
xchg
mov
shl
and
mov
xadd
bsr
jmp
cmc
repnz
pushf
pusha
pushl
lea
jne
not
movsbw
not
pushf
movb
jmp
mov
call
stc
add
jmp
fisubrs
outsb
out
orps
xor
xchg
jg
shlb
pop
clc
pop
adc
dec
movsl
repz
mov
iret
sbb
mov
mov
pop
xor
dec
dec
addr16
int3
mov
adc
pop
xchg
into
sbb
gs
outsl
in
and
std
mov
in
xchg
fdivs
mov
call
jle
xchg
sbb
and
push
adc
jp
insb
repnz
or
rcl
mov
bts
stc
cmc
push
push
shr
sar
mov
bsf
dec
push
dec
push
inc
lea
push
bsr
mov
movzbw
rcr
pushf
test
mov
btc
not
mov
call
hlt
add
sub
inc
into
push
xor
daa
sbb
mov
mov
push
cmp
xchg
and
xchg
pop
mov
lock
out
or
sbb
iret
jb
movsl
aas
xchg
lret
outsb
and
je
cmp
pop
inc
ret
iret
inc
or
enter
push
stos
jp
adc
adc
pop
add
xlat
add
add
jp
adc
cmp
sbb
or
xchg
pop
adc
xor
fildl
in
add
aam
cmp
fimull
in
inc
stos
jp
jp
loop
scas
and
in
clc
adc
push
add
sbb
aam
xor
mov
insb
add
jmp
std
aam
push
cmpb
xchg
sbb
pop
mov
jne
mov
adc
push
sbb
cmp
fsubrl
add
mov
jno
lahf
out
xchg
bound
jp
jno
int
mov
pusha
lea
jae
stc
cmp
push
pushf
call
test
pushl
popl
call
push
cmp
jmp
pushf
mov
movl
call
call
pop
stos
in
and
or
out
aad
cmp
pop
adc
outsl
xchg
sbb
sbb
mov
popf
mov
push
fidivrl
push
xchg
aam
addr16
mov
data16
aaa
jl
mov
mov
jo
xor
push
sahf
movsb
sahf
cmc
lea
js
ror
pusha
xor
stc
cmp
lahf
lea
lea
bswap
movsbw
mov
push
mov
call
lea
je
jmp
lea
jae
btr
movsbl
btr
mov
mov
mov
bts
add
shl
mov
push
stc
bt
sub
clc
test
cmp
repnz
call
call
pushf
inc
pushf
bt
not
call
pushl
lea
ja
stc
imul
test
cmc
test
jmp
jmp
sub
inc
pop
bound
push
outsl
sbb
test
adc
mov
lock
lret
sti
cmc
je
pop
enter
pop
lock
cld
stos
es
or
dec
clc
fdivs
xor
dec
je
add
outsb
inc
cs
stos
jp
cmp
clc
jmp
mov
movb
lea
je
pusha
jmp
push
add
pushf
cmc
mov
test
cmp
cmc
pushl
test
pushf
lea
je
cmp
add
jmp
pushf
lea
ja
bt
bt
push
imul
jmp
movl
pushf
pushl
jmp
lea
jne
pushf
mov
pusha
push
mov
lea
jmp
shlb
out
das
pop
mov
xor
sti
repz
lahf
adc
leave
xchg
cs
and
sbb
push
inc
and
push
inc
dec
sbb
sbb
aad
repnz
orb
fdivrs
or
das
cmpsl
adcb
dec
jne
sbbl
ret
or
loop
es
inc
ds
in
push
mov
enter
mov
in
hlt
mov
jbe
lret
cmp
xor
lods
xor
icebp
sbb
sbb
adc
lcall
push
or
mov
adc
xchg
stos
jp
inc
fsub
cmc
mov
cmp
pushf
pusha
jmp
call
jae
pusha
lea
jb
push
cmc
cmp
cmp
cmpb
call
push
movb
jmp
lea
je
bt
add
stc
cmp
push
lea
jb
cmp
cmp
pusha
pushl
movw
lea
jae
test
and
sub
mov
ror
push
rol
mov
bts
and
shl
btr
mov
stc
movl
cmc
clc
sub
cmc
cmc
test
repnz
pusha
push
lea
jb
pushf
lea
jne
xchg
mov
cmc
cmp
push
pusha
sub
sar
lea
cmc
pusha
sub
cmc
push
pushf
cmc
pushl
popl
pushf
test
movb
cmp
pushl
call
neg
pushf
dec
clc
pusha
push
xor
push
inc
jmp
push
lea
jae
pusha
mov
lea
jmp
and
xchg
jp
aam
push
cmpsb
out
or
or
inc
movsb
mov
lods
cli
mov
jnp
jg
addr16
cmpb
les
clc
mov
mov
scas
cld
gs
adc
add
pop
dec
jo
xchg
xchg
pop
les
mov
mov
lahf
stos
faddl
ljmp
jo
scas
orl
syscall
insl
nop
pop
ja
pop
mov
addr16
pop
outsl
adc
and
and
cwtl
mov
dec
mov
add
jb
inc
mov
dec
popw
daa
mov
lea
push
or
mov
sub
dec
test
and
pop
xchg
loop
rcr
out
inc
inc
mov
jno
or
inc
sub
jnp
dec
out
cmc
cltd
mov
mov
jle
imul
shr
mov
fdivl
inc
ret
or
cmpsb
mov
daa
dec
cmp
ficoms
jp
roll
cmp
dec
ficoms
xchg
scas
cmpsl
outsl
sub
bnd
or
sub
inc
sti
shrl
pop
jne
cmp
xor
das
xlat
in
popa
and
in
jecxz
movsb
enter
rolb
push
lret
sub
loopne
in
inc
push
and
shlb
mov
ret
fs
jmp
movb
lea
jb
stc
cmp
pushf
mov
push
lea
jae
neg
mov
xor
clc
bsf
mov
btr
movzbl
bsf
mov
mov
pushf
cmp
xor
jmp
int3
push
push
stc
xor
dec
xchg
xor
push
into
dec
push
cmpsb
subl
push
and
sysexit
mov
in
mov
inc
aam
scas
sbb
lds
xchg
hlt
lods
je
sub
andb
in
inc
mov
pop
sub
push
push
mov
dec
movl
jmp
in
pop
shrb
and
and
out
jbe
mov
idivb
lods
cli
lret
adc
jb
pop
cmp
in
mov
mov
rcrl
jp
jmp
inc
and
test
lea
jb
bt
cmp
pushf
cmpb
pusha
call
lea
jne
call
pusha
cmc
pushl
popl
cmp
clc
call
pushf
sub
stc
pushf
cmp
call
ja
mov
inc
pusha
inc
not
movb
or
xchg
adc
bt
mov
mov
shl
rcl
movb
mov
mov
pusha
mov
pushf
pushf
xchg
bsf
ror
mov
stc
clc
mov
sub
call
cmp
call
pusha
movl
pushf
lea
jmp
cmp
mov
lea
jae
and
neg
movzbw
neg
mov
dec
movzbw
lea
xor
mov
mov
mov
pushf
push
xor
bt
pusha
repnz
movb
lea
jne
shr
shr
lea
mov
xor
and
sub
neg
shld
sbb
test
mov
jp
clc
clc
cmp
sub
stc
cmp
cmc
pushf
pushl
popl
bt
cmp
pusha
pushf
lea
ja
pusha
stc
sub
btc
cmp
bswap
pushf
sub
add
stc
mov
not
call
popf
rdtsc
nop
pusha
movl
jmp
call
add
cmc
stc
pushl
ror
cmp
pushf
pushl
stc
xor
jmp
push
lea
mov
mov
bswap
jmp
testb
outsb
add
lds
shlb
sub
or
int3
pop
push
std
xchg
and
pop
lods
iret
xchg
mov
in
movsl
in
dec
lahf
jge
mov
adc
mov
xor
sub
xchg
stc
repnz
subl
stos
jp
xchg
stos
dec
movb
bswap
mov
push
pusha
lahf
lea
mov
call
pusha
call
movb
movw
lea
ja
jmp
lea
je
pushf
not
lea
ja
mov
bswap
not
call
push
pusha
call
movl
pushf
pushf
movl
movl
pushf
pushl
lea
jmp
call
outsl
cwtl
fistpll
inc
sbb
lret
push
je
sti
pushf
xor
mov
xor
fcmovnbe
cmp
int
pushf
push
pop
xchg
mov
ss
les
jge
je
ljmp
popa
jmp
rolb
scas
pop
scas
mov
data16
mov
mov
or
xor
adc
mov
add
pushf
adc
addl
or
rorl
mov
pop
adc
aam
mov
adc
adc
imul
xchg
push
sbb
andl
sbb
lret
sbb
adc
inc
mov
dec
add
mov
cmpsl
add
into
xlat
push
sbb
mov
lret
jne
add
pop
xor
mov
adc
test
subb
fisubrs
mov
pop
fs
xlat
fwait
int
js
out
jns
xchg
sahf
xchg
pop
stos
jp
addb
mov
pushl
pushl
mov
pusha
pushf
pushf
pushf
pushl
ret
add
sbb
fwait
les
jge
xchg
cli
rclb
mov
sahf
adc
mov
call
movsl
mov
xor
sysexit
or
out
jmp
scas
xchg
popa
rorb
in
out
add
pop
or
stos
jp
push
jmp
movl
call
shrl
push
iret
xchg
inc
pushf
cmpsb
inc
test
add
data16
push
mov
scas
jecxz
stos
gs
xor
pop
jp
mov
jp
jo
jo
pop
push
push
cmp
lret
popf
rorl
out
lret
cli
scas
inc
unpckhps
cmp
insb
add
push
pop
in
adc
push
jp
dec
lsl
dec
and
sarb
mov
bound
rcrb
push
stc
aad
dec
pop
xor
or
pop
pop
mov
repz
adc
xor
jp
out
inc
rorb
call
jnp
jl
repz
shll
adc
xchg
mov
es
inc
movsl
scas
or
outsl
cmc
ljmp
mov
lods
cmpsb
mov
mov
sbb
inc
femms
add
imul
dec
jp
or
lea
addr16
stos
xor
std
cmc
push
rcr
hlt
mov
xor
sub
push
mov
sti
jno
insb
adc
sti
push
pushf
push
cmp
jp
fisubs
gs
gs
xor
cs
insb
add
sbb
jns
dec
movsl
jbe
xor
pusha
cmpsl
mov
movl
iret
pop
xchg
pop
push
imul
faddl
test
or
mov
pop
pop
scas
mov
js
out
out
cltd
xor
rcll
lods
ret
ret
mov
int3
cmpsl
lods
rorb
push
push
add
pop
xor
aam
js
imul
mov
jo
aaa
cld
stos
jp
push
and
pusha
pushf
jmp
clc
add
stc
pusha
cmp
cmp
call
not
movsbw
bswap
lea
jmp
nop
addr16
or
sub
cmp
jp
pop
sbb
ss
or
pop
enter
repz
push
cmpsl
stos
ficoms
das
pop
in
or
adc
scas
loop
sbb
das
push
sbb
mov
push
pop
pop
mov
insb
ljmp
mov
loopne
std
movsl
xchg
jne
adc
out
fucomip
and
in
imul
sub
or
push
stos
jp
mov
mov
test
jmp
mov
or
pushf
xor
stc
mov
clc
sub
call
lea
ja
mov
stc
bt
sub
lea
bt
shr
add
lea
mov
mov
dec
mov
clc
repnz
push
pushf
pusha
pushf
lea
jne
pusha
lea
movb
movsbl
bswap
mov
bswap
not
lahf
movzbw
lea
push
movl
call
jmp
bt
jmp
movl
call
lea
jb
clc
cmp
push
mov
mov
jmp
push
movl
mov
call
bt
xor
stc
bt
push
sub
std
bt
jmp
lea
ret
cmc
test
pushf
mov
push
lea
je
cmp
jmp
lea
jne
mov
ror
mov
push
cmc
jmp
not
not
mov
movsbw
lahf
movsbw
lea
jmp
stc
pusha
cmp
repnz
mov
lea
jne
rcr
test
shld
mov
bts
ror
sub
shl
xor
call
pusha
movzwl
jmp
imul
jmp
daa
repnz
mov
nop
clc
lcall
clc
jo
xlat
subl
pushf
cmpsb
dec
test
test
add
sti
xor
pop
cmp
pop
xor
and
add
pop
stos
lret
xchg
movsl
pusha
nop
stos
mov
mov
pop
mov
or
and
ljmp
xor
stc
adc
fstl
lcall
aaa
sti
lock
negl
jmp
cmpsb
push
in
sub
xor
lret
sub
lods
out
daa
stos
jp
xlat
insl
packsswb
pop
push
scas
xchg
adc
fnstsw
jno
or
xchg
jmp
adc
push
jecxz
sub
and
and
jecxz
mov
aas
xchg
cmp
repz
imul
sbb
clc
in
push
cmp
sbb
mov
pop
mov
dec
add
and
add
je
sub
inc
and
icebp
or
mov
pusha
jmp
movzbl
shl
mov
push
add
pusha
test
call
pusha
movl
push
pushf
mov
lea
jmp
bswap
lahf
cwtl
mov
movzbl
pusha
mov
lea
movsbl
movzbw
lea
mov
call
bt
repnz
pushf
movb
lea
jne
bswap
not
mov
movb
pushf
bswap
mov
pushf
not
lahf
lahf
lea
pushf
pushl
pushl
call
mov
lea
jb
pusha
stc
cmc
cmp
jmp
call
rol
cmp
neg
push
mov
pushf
dec
stc
mov
pusha
xor
test
bt
clc
bt
sub
mov
shr
push
mov
jmp
rorl
lea
test
xlat
pop
push
jo
lock
mov
into
cwtl
xchg
sbb
xchg
push
cltd
jbe
mov
or
jl
sub
mov
and
xchg
sub
mov
jmp
in
or
add
push
lea
ja
not
bt
cmc
add
and
mov
jmp
rol
cmc
test
jmp
mov
pushf
lea
ja
cmp
rcr
pushf
mov
sub
clc
shld
clc
sub
add
jp
mov
bt
rol
mov
call
inc
clc
xchg
rol
mov
call
mov
ja
pop
sub
and
and
js
ret
ja
cltd
jg
jb
adc
inc
jp
inc
pusha
inc
insb
or
sub
aad
mov
and
jge
dec
jecxz
mov
push
movsl
xchg
ss
js
push
mov
stos
fistpll
cmp
cs
cmp
data16
dec
jp
pop
jl
rcrb
lods
inc
sub
mov
imul
or
push
lcall
fstpt
hlt
dec
das
dec
sub
mov
sub
in
xchg
pop
xor
clc
testl
ss
pop
dec
outsb
dec
bound
mov
jno
int
mov
add
lods
lock
mov
jl
jne
test
ret
push
lret
and
lds
lret
out
nop
cltd
jb
add
test
add
adcl
or
cmpsl
je
xchg
mov
js
psraw
xor
lahf
xchg
jmp
sub
cltd
lea
fldt
rcrl
or
mov
out
lret
cmpsl
sbb
cld
dec
movsb
inc
sahf
in
sbb
arpl
pop
loop
outsb
inc
mov
out
fiadds
stc
jmp
push
js
cwtl
xchg
call
daa
xchg
xor
pop
dec
jo
cmp
aad
out
pusha
subb
push
dec
lahf
int3
lahf
dec
loope
push
aaa
mov
fisttps
mov
or
cmpsl
inc
enter
int
dec
mov
pop
enterw
pop
les
mov
fdivrs
iret
adc
and
fildll
jmp
ficoms
push
and
jne
bswap
shl
shld
xadd
mov
bswap
btc
sub
shrd
mov
stc
bt
push
sub
call
cmp
jmp
pushf
jmp
lea
ja
pusha
push
lea
jb
push
pusha
push
mov
cmpb
jmp
shr
test
pushf
movb
stc
cmp
pushf
pusha
lea
je
jmp
xchg
lods
add
add
test
sbb
xor
shr
cmp
cmc
neg
inc
push
not
dec
xor
or
clc
xor
mov
setae
inc
pushf
rol
shl
neg
jmp
test
bt
sub
bt
call
push
call
cmp
jmp
pushf
call
lea
jae
cmp
sub
push
call
rcl
pusha
mov
bt
push
cmp
cmpb
mov
movb
call
not
or
bsr
clc
mov
clc
bt
test
cmc
and
stc
bt
clc
add
clc
pusha
add
pusha
call
repnz
pushl
pushf
lea
jne
pusha
pushl
mov
pusha
lea
jmp
clc
pushf
push
or
pusha
jmp
add
xor
adc
push
add
xor
insb
ja
add
adc
add
add
add
cmpb
push
lea
jmp
call
call
inc
mov
lea
jmp
mov
icebp
popf
cmpsb
sub
sbbb
daa
subb
mov
mov
mov
xor
jle
loope
test
lahf
rclb
sahf
imul
fwait
jbe
out
mov
sub
sarl
insl
fistps
lods
mov
ret
fptan
jp
pop
jle
or
cmp
mov
insb
push
std
jbe
stos
or
adc
jbe
xor
aaa
xor
lods
cli
xor
rcrb
mov
ja
push
pop
or
cs
sbbb
jecxz
cmp
mov
pop
jecxz
cmp
sbb
lret
stos
pop
jns
push
or
and
lret
lahf
out
nop
sbb
in
mov
jp
push
sbb
imul
imul
adc
inc
into
cwtl
hlt
mov
cmc
es
dec
and
pop
test
test
insb
int
push
or
push
aam
mov
sbb
cli
icebp
std
push
inc
insb
jmp
xor
push
dec
and
ret
mov
dec
mov
stos
jp
mov
lods
cmp
pusha
mov
pushl
jmp
sub
bt
movb
stc
cmp
call
mov
dec
movsl
pop
add
mov
cli
xor
push
jne
sbb
stc
adc
xchg
cmp
push
xor
fadds
addr16
in
adc
leave
scas
hlt
mov
out
xor
stos
pusha
mov
mov
pop
cmp
nop
mov
jae
mov
xchg
pop
sub
movsl
or
rcr
xchg
or
xor
xchg
mov
js
aas
adc
cmp
push
stos
jp
es
rorb
daa
or
push
pop
cs
fcompl
xor
repz
mov
adc
loope
aam
imul
mov
push
negb
insl
add
ret
dec
mov
push
push
fisubs
pusha
inc
dec
arpl
inc
andb
inc
mov
rorb
jp
or
subl
mov
mov
xchg
shr
data16
stos
and
cmpsb
stos
jp
pop
out
mov
jae
push
cli
adc
fistpll
mov
xor
lret
mov
mov
mov
add
fwait
adc
add
test
fadds
repnz
rol
imul
mov
pop
jp
pop
xor
inc
and
dec
inc
pop
xor
xchg
hlt
int
insl
out
enter
or
dec
inc
call
mov
loope
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
cmpsl
loopne
add
test
xlat
adc
mov
mov
bt
mov
push
pushf
clc
add
pusha
clc
test
movzwl
sbb
shrd
bsf
pushl
mov
mov
jmp
imulb
pop
into
dec
xor
add
stos
ljmp
mov
sbb
xchg
push
xchg
pop
in
xchg
ret
repz
js
sbb
adc
adc
mov
push
lahf
clc
cmc
mov
insb
addr16
stos
daa
dec
pusha
stos
and
jp
cli
add
daa
mov
pop
mov
cmp
jae
xchg
sti
rcrl
adc
fisttpl
push
sbb
js
cltd
cmp
push
xor
mov
xchg
push
mov
dec
mov
ds
gs
pop
sbb
or
cs
out
jge
push
mov
popa
push
packuswb
cmpsl
mov
hlt
cmp
mov
mov
xor
ja
lock
mov
jge
sahf
leave
push
or
incb
notl
lahf
rcrl
mov
rcrl
jb
rcrl
mov
aaa
cld
push
cmp
add
lds
or
pop
gs
mov
fbstp
stos
jp
loop
sbb
add
mov
mov
add
bt
cmp
pushl
pusha
pushl
popl
stc
test
bt
pushf
cmp
pushl
pushf
pushf
lea
ja
cmc
shl
jmp
mov
daa
rorb
in
and
test
ret
imul
add
push
dec
cmp
xchg
fsts
mov
es
test
mov
or
sahf
test
adc
mov
lret
push
xchg
out
push
mov
aas
jnp
and
sub
and
iret
and
sbb
sub
add
movsb
mov
les
sbb
inc
pusha
insl
mov
lods
gs
mov
jp
flds
add
mov
mov
jne
jb
push
jne,pt
xor
xchg
pusha
call
pushf
setbe
movsbl
lahf
mov
pusha
call
call
sub
bt
dec
mov
call
jmp
jmp
call
clc
stc
add
pushf
call
pop
bswap
lea
mov
lea
jmp
call
push
pushf
pusha
lea
jae
bt
jg
stc
pushf
add
jmp
aas
mov
dec
in
mov
mov
xor
inc
mov
and
add
xor
and
scas
test
dec
mov
stos
into
inc
xor
push
push
inc
push
push
pop
adc
das
or
and
jns
dec
cwtl
mov
pop
xchg
fdivl
mov
mov
push
test
mov
stos
jp
jne
insl
mov
mov
lea
jbe
push
mov
rcr
inc
movzbw
bswap
add
shr
xchg
stc
mov
add
jo
cmc
rol
add
pushf
movl
ror
stc
mov
sub
push
test
pusha
jmp
lea
je
pusha
test
call
movw
lea
call
call
lods
lock
scas
scas
out
dec
jne
and
mov
mov
test
pop
xchg
test
clc
loopne
jb
or
stos
sbb
loopne
sub
push
pop
mov
add
cmpsb
jae
xchg
mov
jecxz
add
test
adc
lods
xchg
jp
ljmp
add
pop
stos
in
movsl
cltd
sahf
sub
popf
mov
dec
sti
pop
sbb
jge
dec
stos
jl
in
fnstcw
inc
aad
insl
aad
inc
pusha
mov
mov
lret
out
add
jg
shl
pop
cmp
push
icebp
xor
and
sub
mov
adc
xchg
gs
jmp
push
xchg
popf
mov
ds
inc
inc
repnz
inc
fists
es
pop
dec
pop
mov
lds
out
add
xchg
adc
rcrl
jmp
int3
dec
int
sub
scas
and
into
ficoms
fsubr
pushf
lea
call
clc
adc
movzbw
setle
mov
jmp
dec
bt
xor
test
sub
cmp
stc
pushw
popfw
pusha
inc
call
repnz
pushf
lea
jne
push
pushf
movb
not
mov
setns
pop
lea
pusha
mov
movl
pusha
mov
push
push
pushl
ret
stc
or
pushl
mov
lea
je
bts
movsbw
sub
rol
add
push
pusha
sub
sub
shr
shrd
mov
mov
mov
rol
clc
setge
bts
add
shrd
movb
shrd
add
sar
btc
mov
stc
push
test
shr
call
call
pushf
pusha
lea
jne
jmp
dec
sets
inc
shr
xchg
bsr
movzbw
shr
mov
push
bt
mov
mov
pusha
mov
btc
mov
push
call
push
mov
lea
call
jmp
pusha
stc
pushl
popl
movb
pushf
bt
cmp
call
rcl
sub
rol
sar
sub
add
rcl
shrd
mov
rcl
add
mov
mov
mov
jmp
bswap
bswap
dec
mov
cmp
bt
stc
test
cmpb
push
pusha
lea
jne
aas
lea
bt
sub
btc
mov
inc
add
cmc
and
or
xor
mov
jmp
pusha
lea
jb
bt
cmpb
pusha
lea
jne
call
sti
or
in
adcb
jg
pusha
cmpsl
outsl
dec
inc
inc
das
push
loopne
out
cltd
and
fbld
inc
shlb
test
lds
push
sub
insl
add
jnp
adc
int3
addr16
sahf
push
xor
cmp
lret
and
jns
mov
rcrb
pushf
push
push
out
push
mov
bound
ja
sub
lds
test
xchg
fdivrp
adc
bnd
mov
aad
push
repz
xchg
push
popa
mov
in
ja
push
ja
xor
stos
jp
popf
mov
cmp
jmp
lahf
add
push
mov
cmp
fwait
xchg
mov
pop
je
cwtl
adc
scas
adc
mov
push
pop
and
sahf
adc
insb
inc
inc
and
xchg
std
cmp
push
jp
sbb
dec
jge
xchg
sbb
aam
mov
aaa
jl
stos
jp
or
sub
push
or
mov
add
jmp
push
stc
test
cmp
pusha
pushf
jmp
mov
std
ss
sbb
ret
mov
push
push
lods
fcom
test
decb
xor
add
lret
and
adc
stc
push
mov
mov
repnz
jp
sub
push
movb
add
test
jmp
movl
push
pushf
pushf
movl
movb
pushf
pushf
lea
jmp
push
jmp
push
push
lret
repnz
jg
pop
xchg
pop
divl
sbb
xlat
outsb
in
jp
stos
data16
mov
lcall
mov
or
dec
inc
pushl
sti
fimuls
jbe
jle
imul
pop
das
gs
repz
stc
loopne
add
mov
push
adc
fs
push
mov
mov
addr16
lret
shr
sub
stos
jp
pop
sub
xor
lea
jmp
lods
movb
clc
ror
jmp
lea
jne
das
dec
sub
cmp
shr
jmp
pusha
mov
cmp
push
cmc
cmpb
mov
lea
jne
inc
cmp
sub
rol
test
mov
cmp
setg
add
stc
mov
call
pushf
pusha
lea
jne
pushf
inc
pushl
call
test
cmp
call
lea
je
shrd
btr
bt
and
mov
shrd
sbb
neg
mov
add
rcr
rcl
mov
pushf
push
pushf
pushf
test
movb
mov
lea
je
mov
shl
dec
add
rol
mov
pusha
cmp
mov
add
call
stos
pushf
lea
jmp
call
movl
call
call
movsbw
movsbl
mov
mov
mov
lea
jmp
adc
lods
les
sub
cli
cwtl
xor
jo
pop
xchg
xor
rclb
adc
and
fwait
cmp
fistl
push
out
movsl
repz
loopne
gs
addl
mov
xchg
pop
push
repnz
or
and
mov
pop
xchg
cli
bound
fistpll
sbb
xor
fsubl
andl
inc
shlb
ret
cli
xor
lret
push
xchg
sbb
enter
loopne
out
jbe
call
mov
pop
push
xor
iret
jp
inc
shl
int
or
mov
loopne
sbb
jb
dec
jbe
out
inc
cmpsb
jns
fidivs
inc
jge
in
test
xorl
jge
out
mov
pushf
sbbl
shlb
in
mov
xor
xchg
lods
jns
pop
js
pop
sbb
add
repz
testb
jns
mov
call
inc
mov
orb
xchg
inc
mov
mov
ret
mov
jae
jg
push
daa
scas
out
cli
cwtl
dec
add
sbb
adc
xor
jle
aaa
les
push
jae
push
pushf
cltd
inc
stc
sub
xchg
xlat
cli
adc
sub
xchg
frstor
aam
std
sbb
mov
pop
xor
loope,pt
push
add
repnz
dec
lds
or
mov
lods
test
es
push
std
mov
xor
or
dec
cmpsl
in
inc
lret
pop
jmp
icebp
sbb
icebp
jnp
cld
pop
xchg
push
fsubs
inc
insb
lods
mov
outsb
hlt
into
add
mov
mov
call
lea
ja
push
pushf
cmp
call
push
lea
jae
setl
bt
push
cmc
mov
xadd
shl
rcr
mov
adc
xor
bt
lea
mov
pushf
stc
bt
sub
push
repnz
call
pushl
add
push
stc
jmp
pushf
lea
je
bt
pusha
pusha
add
test
cmp
jmp
pushf
movl
pushl
pusha
push
call
sbb
add
fwait
push
mov
bound
or
or
lock
push
pop
repz
popa
inc
or
das
arpl
flds
jo
not
cmpsb
cltd
lcall
into
inc
mov
jp
mov
nop
stc
add
mov
xor
loope
cmpsb
sbb
sub
or
fstpt
ret
add
mov
mov
xor
adc
xor
rep
jp
sub
or
ret
jmp
pop
lock
into
dec
ret
jo
sub
popa
imul
es
cmpsb
dec
rcll
scas
int
loope
dec
and
mov
add
lds
movsb
and
dec
movsb
sub
mov
insb
and
jecxz
add
jecxz
in
test
stos
jp
iret
push
jmp
popf
cwtl
sub
scas
out
addr16
call
inc
or
xchg
xchg
in
and
cmp
scas
xchg
sahf
enter
mov
mov
push
or
inc
mov
jbe
cmp
jmp
mov
adc
mov
stc
clc
bt
or
pusha
pushf
lea
je
movsbw
add
cmc
bsr
cmc
sub
shld
btr
jmp
clc
cmc
pushl
popl
pusha
cmp
jmp
lea
call
pushf
lea
jb
pushf
pushl
ret
cmp
test
test
movw
pusha
lea
je
clc
sub
push
pusha
cmp
call
lea
jne
shl
shrd
mov
bt
cmc
jmp
not
bts
xor
pusha
bts
movzbw
mov
pusha
add
clc
ror
shl
bt
mov
cmp
stc
jmp
lea
movzbw
mov
pusha
push
pushf
pushl
ret
ror
cmc
cmp
cmp
xor
stc
clc
test
cmp
push
movsbl
lea
movsbw
not
mov
call
shl
sar
bt
sar
xor
movsbw
pusha
xchg
bswap
mov
lea
lea
pushf
mov
call
mov
bswap
call
mov
push
push
test
bt
and
cmp
cmc
pusha
bt
add
pushl
pushf
lea
jmp
not
not
pusha
mov
lea
pusha
call
movzwl
add
mov
sub
jae
cmp
pusha
pusha
add
pushf
pushl
call
sub
cmc
pusha
pusha
cmp
repnz
pushf
pushf
push
jmp
lea
jbe
dec
push
bt
jmp
lea
call
pushf
call
lea
je
pushf
jmp
call
call
lea
jne
clc
btc
stc
movzbw
mov
lea
bsr
bsr
sub
movzbw
rcr
bts
sbb
mov
pushf
pusha
sub
jmp
pusha
rep
movzbl
not
bswap
mov
pushf
pushf
lea
jmp
mov
pushf
push
pusha
lea
jmp
push
adc
lea
push
pushl
ret
push
lock
std
std
and
clc
ret
jno
cmp
iret
iret
sub
mov
pop
cmp
xor
loop
sbb
jge
mov
inc
jle
jo
push
pop
lds
out
frstor
adc
test
inc
push
addr16
xchg
in
cmpsb
xor
xchg
push
mov
lock
cmpsb
and
jmp
sbb
and
pushf
mov
pushl
pusha
lea
call
jmp
fsubrs
call
sub
out
aam
fcmovnu
je
push
sbb
fdiv
cld
xchg
pop
xor
js
loop
xchg
cmp
aaa
mov
dec
sbb
adc
mov
jnp
repnz
std
fs
xor
mov
ficoms
je
lock
shll
nop
icebp
mov
push
pop
fwait
pop
xor
loop
dec
dec
xor
cmp
and
xor
leave
repz
and
sbb
je
cmpsl
stos
mov
insb
stos
jp
mov
fs
jb
pusha
test
movb
call
inc
mov
xor
push
mov
stc
fidivrs
mov
idiv
jbe
push
fnsave
inc
dec
fsub
mov
aad
add
jns
lret
les
sbb
insl
icebp
push
pop
add
out
aad
jb
sub
xchg
pop
or
loope
xchg
add
out
fmull
js
cli
cwtl
fcomip
xor
ja
pop
rcrb
dec
arpl
dec
lret
imul
cmpsl
or
jae
adc
out
mov
mov
and
sub
movsb
sub
add
pop
clc
hlt
lea
pop
aaa
or
sahf
adc
into
and
into
and
pop
aam
daa
xchg
fstl
mov
cmp
inc
or
stos
jp
fisubl
rol
pusha
push
sub
jmp
push
mov
call
xor
sub
not
call
jmp
jmp
jmp
pushf
lea
jne
pusha
push
lea
jmp
shld
or
sub
ror
lea
pushl
mov
call
lea
ja
call
pusha
movb
inc
pusha
pushl
not
call
add
cmc
jmp
btr
or
inc
mov
rcr
not
sub
btc
bsf
rcl
mov
pushf
bt
clc
sub
pusha
pushf
pushl
popl
pusha
test
cmp
pushf
jmp
int3
popf
jmp
btr
mov
and
cmp
btr
shld
mov
xor
stc
mov
jmp
sub
stc
cmp
pushf
movb
lea
ja
jmp
pop
add
shl
shr
btc
bswap
bswap
mov
shrd
add
shl
add
pushf
pushl
mov
lea
mov
push
pushf
push
jmp
jmp
cwtl
add
and
push
es
bound
inc
int
add
push
sub
push
ret
insl
xchg
and
xchg
pop
test
sbb
sub
iret
push
xchg
xlat
mov
mov
fistl
aas
adc
aam
jae
push
jg
sbb
stos
jp
inc
fsub
movb
mov
jmp
nop
jp
cli
sarb
pop
pop
xchg
jns
sbb
add
aas
mov
ds
dec
push
in
inc
mov
popa
in
inc
sub
js
cld
jnp
bound
cmc
adc
sub
inc
mov
or
stos
jp
cmp
mov
fidivrs
pusha
cmpsl
dec
out
or
orb
xor
scas
xor
cmp
adc
mov
pusha
dec
in
aam
inc
std
mov
ja
push
pop
xlat
repnz
xor
pop
adc
sub
jnp
arpl
sar
test
add
outsb
ret
leave
stos
jp
icebp
ja
lods
bt
mov
push
ror
mov
jmp
lea
jne
pushf
mov
pushf
mov
jmp
test
cmp
cmp
mov
jmp
popf
cpuid
nop
jmp
ret
outsl
test
adc
or
insl
adc
in
mov
fmuls
rcll
scas
mov
sbb
push
dec
stos
stos
xchg
inc
sub
pop
test
bound
lret
push
fistpl
dec
lahf
mov
nop
aas
pop
lret
je
cmp
das
pop
insb
repnz
xor
outsb
test
mulb
mov
scas
aam
jle
iret
and
adc
jne
xchg
cmp
fwait
rorb
fidivrl
imul
cld
aaa
shlb
xor
push
xor
adc
pusha
nop
rcll
pop
test
pop
stos
and
jg
fisttps
mov
dec
and
adc
mov
mov
pop
jae
outsb
sbb
mov
jg
pop
jo,pn
inc
jo
adc
or
fwait
mov
rolb
mov
stos
sub
pop
inc
mov
inc
pop
aas
cltd
adc
sbb
ficompl
and
sahf
sbb
hlt
xchg
xchg
cli
mov
xchg
js
mov
add
dec
pop
xchg
jmp
sbb
xor
ja
jnp
pop
cltd
subb
push
and
and
ret
aaa
push
cs
xor
push
rol
cmp
rcll
and
and
mov
out
jp
jae
push
test
js
sub
push
mov
and
xchg
loop
and
sbb
sub
das
xor
loopne
ds
int3
loopne
iret
bound
mov
outsl
pop
rolb
imul
jae
adc
cmpsl
mov
inc
xchg
mov
loopne
pusha
xchg
outsl
sahf
arpl
pop
inc
and
fwait
dec
adc
out
shlb
inc
rolb
out
aam
push
mov
in
jg
pop
lds
add
adc
mov
cmp
sub
mov
pop
inc
outsl
xlat
aam
mov
adc
sub
andb
call
shl
cld
movsb
pop
movsb
push
into
sahf
cmp
xor
sbb
xchg
sub
lahf
insl
push
out
hlt
jle
fisubs
sbb
std
xchg
into
push
sub
cs
inc
xor
es
xchg
jge
outsb
sub
iret
xor
sbb
xchg
nop
into
outsl
sub
cmp
sbb
xchg
mov
lahf
pop
push
dec
hlt
mov
dec
sbb
ror
lods
sub
scas
lahf
popf
push
hlt
and
das
sbb
xchg
scas
into
push
sub
ror
pop
lods
inc
mov
into
xor
xor
or
enter
aas
out
call
jb
nop
cmc
test
xchg
push
inc
loopne,pt
cmp
add
fwait
sbb
jne
add
inc
push
mov
ret
mov
xchg
cmp
xor
insb
and
and
sbb
cmpsl
leave
aam
xor
mov
push
adc
jb
pop
push
and
daa
dec
push
inc
fdivrl
insl
jo
adc
leave
mov
cmpsl
ljmp
mov
inc
loop
push
ror
rorb
or
daa
jae
mov
jge
sbb
xchg
xchg
pop
inc
lahf
out
pop
pop
enter
dec
aas
jg
insb
cwtl
push
sub
jecxz
and
adc
fmul
fmuls
adc
cmp
mov
sub
subb
into
pop
lods
into
stos
cmp
out
aas
add
pop
arpl
addr16
scas
pop
inc
lahf
mov
mov
loopne
clc
dec
rolb
mov
and
xor
sub
pop
and
push
test
push
xlat
and
mov
sub
das
lock
out
out
add
cwtl
xor
cmp
dec
scas
orb
and
lahf
pop
sarb
bound
imul
hlt
mov
and
std
xchg
and
outsl
adc
push
unpcklps
out
fcmovnbe
loopne
xor
enter
mov
sbb
push
clc
sbb
mov
mov
repnz
cmc
dec
inc
arpl
lds
aad
arpl
fidivrs
fidivs
adc
and
mov
push
pop
test
xchg
jnp
xchg
mov
jl
adc
pusha
test
aaa
iret
sub
push
xor
hlt
push
cmpsl
mov
mov
sub
jmp
sub
cmp
out
outsl
out
das
add
jle
xlat
add
enter
loopne
scas
out
das
push
push
mov
notb
cmp
add
mov
mov
xor
sti
xchg
cmp
lds
dec
shr
cmp
scas
sub
xor
test
lock
inc
imul
pop
stos
int3
jnp
mov
sub
outsb
enter
mov
push
pop
cs
xor
mov
xlat
xor
xor
pop
xor
pop
mov
jge
jmp
mov
andb
sbb
adc
into
push
inc
xchg
lea
sub
xchg
mov
fisttpl
daa
ds
pop
test
push
shl
or
adc
pop
and
mov
dec
cs
add
jl
or
mov
mov
sbb
iret
push
std
or
push
pop
retw
inc
fwait
xorb
pop
and
xchg
bound
pop
lahf
rorl
pusha
pop
jae
outsl
cmp
inc
lret
aas
fs
loop
sub
mov
xchg
lahf
xor
fistl
push
fs
and
jmp
ds
ss
aaa
mov
mov
pop
push
adcb
lret
pushf
dec
dec
repnz
cmp
loopne
std
cld
cmp
adc
or
scas
pop
popf
insl
repz
fs
int
jae
int
push
test
fisubrs
aas
jnp
nop
sub
repnz
xor
lods
adc
inc
adc
dec
int
jb
push
xor
inc
pop
mov
aam
jle
xchg
clc
rclb
dec
adc
and
aad
lock
inc
clc
cs
cmp
mov
fcomps
xchg
push
cmp
ja
mov
mov
ret
mov
shrb
jo
and
adc
insl
lds
in
mov
jmp
shl
adc
jb
shlb
sub
lret
repnz
cmpsl
mov
outsb
mov
pop
fdivrs
ss
bound
mov
pushf
jg
daa
push
sub
lret
push
mov
xchg
xchg
pop
call
out
pop
pop
mov
sbb
pop
cmpsb
ror
bound
lock
lret
dec
xchg
xchg
pop
shrb
inc
dec
stos
mov
int3
jle
das
mov
sbb
mov
mov
push
fidivrl
mov
dec
js
into
mov
xchg
dec
test
adc
shlb
xor
pop
jmp
pop
fiaddl
jge
rorb
cmp
mov
inc
lock
or
daa
loopne
scas
mov
aaa
out
popf
jo
xor
into
lods
pop
das
jge
rorb
cmp
mov
aam
pop
out
dec
aas
cli
out
hlt
mov
cmp
mov
push
jp
lahf
xchg
mov
iret
mov
mov
jmp
popl
and
rolb
js
bound
cmp
iret
pop
cwtl
or
adc
jecxz
cwtl
lods
sub
pop
insl
int3
push
ret
or
enter
add
daa
enter
daa
and
xchg
jo
dec
xor
and
les
and
adc
jecxz
iret
xlat
into
clc
dec
and
insl
iret
roll
arpl
cs
cmp
mov
insl
gs
outsl
cmp
rcl
mov
mov
sbb
dec
pop
mov
jo
pop
xor
inc
pusha
imul
mov
shrl
enter
mov
pop
les
sti
cmp
mov
push
push
push
into
mov
setg
dec
lock
scas
and
cmp
lea
pop
push
sub
fbld
cmp
not
call
rcr
adc
cmp
cmp
icebp
scas
cmp
sbb
je
outsb
movsb
jo
xor
lods
fisubs
xchg
or
aaa
in
insl
jae
lea
push
bound
lcall
dec
cmp
push
mov
iret
add
or
sar
xchg
jnp
rolb
int3
mov
addl
iret
aaa
pop
xor
ja
fisubs
into
lock
std
xlat
nop
roll
in
icebp
std
shrb
sub
mov
iret
add
cmp
rcl
frstor
test
lea
mov
iret
xor
or
loopne
sarb
outsl
rcl
scas
push
pop
sub
and
test
sub
iret
or
add
and
mov
adc
pusha
cmp
sti
rolb
call
test
fildl
pop
lcall
jmp
addr16
int3
push
outsl
and
iret
shl
lret
push
push
cs
mov
lahf
xchg
shrb
jne
rcrl
hlt
xor
cmp
fimuls
out
cs
out
cmp
test
xlat
jae
into
call
inc
and
ret
shll
push
cmp
cmp
nop
in
negl
sbb
jg
es
lret
iret
dec
xchg
scas
sbb
push
movsb
sbb
stos
movsl
jecxz
loop
std
jb
cwtl
lock
rclb
shrl
xchg
insl
lock
int
das
inc
xchg
or
rorl
cmp
xlat
nop
sub
sbb
mov
or
and
and
and
push
xor
sub
dec
cmp
pop
das
mov
aaa
loopne
ret
repnz
daa
jmp
sub
rcr
loopne
frstor
cli
mov
push
push
cs
test
in
and
or
mov
sbb
jb
cmp
addr16
pop
sub
mov
fadd
mov
push
fnstenv
jg
pop
adc
jecxz
xlat
or
or
aaa
add
divb
mov
std
fstl
lock
rolb
rcl
ja
cs
jmp
insl
xchg
int
push
dec
mov
add
pop
pop
mov
outsb
jb
sbb
mov
rcl
and
mov
fwait
mov
pop
enter
jno
jae
ret
imulb
jg
popf
outsb
clc
lock
into
inc
mov
sub
hlt
sub
cld
and
out
ss
push
ret
out
cmp
aam
in
pop
dec
mov
jns
scas
addr16
push
ret
nop
fisubrl
aas
out
sbb
outsl
pop
adc
cs
out
sub
cmp
mov
addl
cs
sub
popa
xchg
ficompl
fidivl
push
test
pop
and
scas
lret
mov
pop
and
sbb
mov
pop
sbb
aam
pusha
idivb
cmp
popf
mov
shlb
xlat
scas
movsb
into
inc
adc
iret
insl
dec
and
das
hlt
cmp
and
sbb
sti
fcom
and
dec
lods
sub
sbb
cmp
xor
test
arpl
lea
mov
scas
aaa
inc
jg
push
mov
pop
scas
ja
xor
push
xchg
rol
xor
lods
sbb
jae
push
sub
shll
into
jno
fwait
int3
pop
xchg
dec
jge
andb
dec
xor
dec
scas
mov
cli
xlat
add
mov
outsl
fisttpl
jo
inc
lock
andb
loop
loop
push
out
ja
lahf
sbb
xor
lock
sbb
into
adc
cmp
xor
sub
shlb
and
rcrb
mov
notl
shrl
cmp
aam
xlat
xchg
xor
call
pop
in
xor
cmp
cmp
sub
pop
pop
xor
pop
hlt
xor
ficomps
xchg
sub
test
pop
lods
pusha
adc
and
shlb
xchg
pop
mov
mov
jbe
push
xor
fidivrs
inc
test
lahf
adc
add
das
add
pop
scas
enter
mov
cmpsl
dec
pop
aad
xchg
lock
inc
call
xor
cmp
xchg
inc
outsl
addr16
cmp
jbe
test
dec
pop
mov
lds
jge
popf
outsl
ss
pop
push
insb
aad
pusha
int
xchg
push
addr16
xchg
out
das
pop
or
ja
sbb
dec
pop
lock
out
fisttps
fstl
lahf
xchg
xlat
lods
mov
outsb
mov
fwait
je
dec
in
dec
loopne
xor
jo
inc
notl
mov
push
push
adc
adcb
bound
xchg
xor
mov
das
negb
push
lcall
xchg
dec
mov
stos
leave
pop
fstps
loop
popa
mov
mov
pop
xchg
or
push
test
pop
ficoml
inc
aad
pop
mov
outsb
pop
sub
pop
adc
mov
mov
pop
addr16
sub
test
nop
mov
adc
call
out
inc
ds
cmp
xor
dec
loop
stos
divl
adc
cmp
jbe
pop
sbb
push
ror
push
inc
aam
adc
mov
bndstx
aaa
shrb
out
pop
sub
sub
mov
adc
adc
xlat
in
adc
adc
jge
cmpsl
les
loopne
mov
sbb
and
pop
aam
das
adc
insl
negl
mov
push
push
push
shlb
mov
inc
dec
aas
dec
mov
nop
pop
add
rcrb
jg
and
iret
adc
fistl
pop
mov
mov
nop
fcoms
xor
hlt
pop
xchg
xor
xor
push
dec
flds
cmpb
xor
xchg
andb
jl
push
sub
out
xor
pop
xchg
mov
dec
dec
js
mov
cwtl
push
sbb
cs
fnsave
pop
mov
add
mov
outsl
jg
shrb
lret
call
mov
out
lret
fstpl
ja
cmpsb
lret
push
adcb
xor
mov
shlb
pop
dec
das
inc
jle
xor
test
das
js
aas
aaa
jge
cmpsb
mov
add
or
xorl
fdivrl
or
sbb
inc
pop
sub
sub
fsubrl
cli
inc
in
and
push
popa
aas
rol
int3
sbbl
cmpsb
orb
fmuls
fisubrl
cmp
gs
adc
lret
sbb
pop
adc
xor
cmp
or
sub
adc
mov
mov
popf
inc
adc
lret
fisttpl
out
sub
cmpsb
aam
and
and
cmp
sub
or
lods
cs
mov
fcomps
shrb
lret
sbb
adc
jo
or
mov
ds
shlb
or
or
sub
mov
xlat
lret
lods
jae
dec
cmp
mov
adc
in
or
sub
icebp
shlb
add
push
adcb
jo
xchg
sbb
pusha
jg
sarb
ret
xchg
inc
ja
add
xchg
adc
sub
xor
shr
pop
lea
pushf
cmp
and
sub
xchg
into
jae
sub
mov
lods
insl
sub
lods
in
inc
dec
aam
movsl
sub
sub
and
and
adc
dec
enter
iret
cmp
cmp
mov
out
out
mov
aam
int3
adc
lock
push
and
cmp
adc
shlb
cs
cmp
xor
adc
bound
adc
pop
mov
fwait
sbb
std
lea
in
pop
push
add
or
sbb
test
xchg
pop
pop
sbb
nop
outsb
das
push
fadds
aam
test
pop
daa
out
repnz
aaa
xor
call
fsubrs
jo
aam
test
pop
and
nop
das
push
shlb
mov
fsubr
adc
das
in
shrb
out
xor
call
sarb
test
pop
push
xorb
in
and
push
fstpl
and
xchg
scas
test
pop
das
outsl
xor
insl
adc
test
pop
mov
xor
inc
nop
xchg
aas
shlb
inc
pop
add
or
push
xor
call
sahf
js,pn
hlt
out
aam
cs
gs
test
and
cmpsl
loopne
dec
xor
das
divl
push
call
and
es
test
pop
lds
test
and
rorb
ja
das
divl
mov
outsb
nop
es
out
scas
test
pop
int
xor
adc
sub
nop
nop
das
pop
rcrb
test
pop
mov
cmp
sub
test
cmpsl
rcpps
xor
mov
jle
xorb
call
dec
rclb
test
pop
mov
xor
das
push
rclb
push
xor
dec
adc
nop
std
das
xor
pop
ficoms
xor
nop
xlat
das
psrad
sbb
xchg
push
call
daa
shlb
mov
sbb
and
rcr
aam
shlb
test
pop
jle
sub
test
pop
pop
mov
in
sub
mov
data16
daa
rcrb
mov
push
in
nop
cmp
test
pop
fisubs
xor
lahf
nop
xlat
das
pop
rorb
lock
and
or
rcrb
xchg
pop
push
xor
cmpsl
nop
imull
rorb
test
pop
mov
js
sub
rorb
xchg
pop
into
push
xor
xchg
outsl
test
pop
cwtl
call
add
popf
nop
adc
pop
into
push
xor
cmpsl
test
sbb
inc
das
sbb
nop
push
xor
nop
iret
das
outsl
rclb
sub
sbb
push
pop
sysexit
dec
sub
pop
out
mov
test
cmc
pop
sub
call
mov
nop
int3
das
rcl
test
pop
in
loopne
sub
xchg
mov
xor
das
xor
pop
xchg
fidivl
loop
out
xchg
repz
adc
xor
lcall
cmp
xor
sub
iret
xor
repnz
sub
repnz
mov
shlb
scas
xor
call
lahf
rcrb
xor
shr
test
pop
add
push
loopne
mov
pop
out
xor
es
xchg
dec
rorb
push
cmp
adc
test
pop
out
lahf
xor
push
nop
out
scas
rclb
add
lods
call
adc
das
mov
outsl
test
pop
divl
nop
cmpsb
das
add
pop
inc
jo
xor
popf
lock
dec
pop
outsl
pop
xor
shr
adc
std
add
ret
iret
or
lahf
sarb
shlb
cmp
lods
xchg
pop
or
add
dec
and
lock
inc
jne
fsubr
lods
xor
sub
jmp
add
pop
or
xor
out
fdivrs
int3
push
xchg
inc
jb
not
and
test
push
data16
in
int3
es
rclb
loopne
outsl
hlt
cmp
ror
pop
aaa
cmp
mov
cld
sbbl
test
test
call
mov
test
lds
cmp
push
scas
andb
outsl
jmp
outsb
xor
lcall
mov
shl
mov
mov
out
aas
call
insl
push
rorl
jnp
into
mov
out
cmpl
and
ss
pop
in
and
loopne
loopne
sbb
lret
xlat
sbb
lock
fmuls
mov
dec
mov
das
jae
fwait
int
push
rolb
addb
rolb
mov
add
jae
adc
mov
xor
cmp
lds
or
mov
mov
sbb
jle
or
movsw
jmp
aas
adc
dec
dec
mov
push
hlt
pop
sbb
roll
xchg
inc
shrb
xchg
mov
jecxz
lret
pop
lahf
jnp
push
rcl
mov
adc
xor
fmul
ss
jno
je
lret
shrb
or
nop
test
cmp
mov
in
or
shrb
jae
cmp
pop
sti
mov
mov
mov
lods
dec
pop
shll
mov
jle
popf
bts
mov
sub
pop
in
test
jmp
pop
mov
rclb
les
js
in
insb
dec
movups
daa
fwait
mov
mov
fidivrl
in
sub
cltd
push
call
lock
sbb
shl
test
mov
adc
push
jg
pop
mov
pop
outsl
ds
and
xchg
adc
lret
and
push
xlat
adc
mov
sub
push
cli
outsb
mulb
mov
inc
int
pop
lahf
pop
out
rcll
addr16
mov
insb
push
mov
xchg
mov
repnz
stc
pop
addr16
test
dec
cmp
test
movsb
setp
lods
gs
in
sbb
fucomi
cmc
mov
nop
lock
cmpsb
inc
pop
mov
push
loopne
xor
iret
mov
mov
ds
push
xchg
push
dec
xor
and
gs
cmpsb
mov
mov
inc
sbb
fcompl
dec
lods
xor
mov
in
add
cmpsl
xor
mov
lods
jecxz
hlt
outsl
hlt
xor
call
loop
mov
hlt
adc
jne
sbbl
push
xchg
adcb
cmp
punpckhbw
add
aam
xor
jmp
xor
push
mov
or
push
adcb
aam
mov
shl
shrb
jle
out
rcl
push
subb
loop
rclb
sub
lcall
jae
ja
sub
jg
add
bswap
rclb
push
xor
pushf
pop
push
sub
xor
pop
inc
rclb
mov
dec
mov
jle
lret
inc
popf
or
push
cmpsl
sub
mov
test
mov
sbb
sub
pushf
sahf
popf
mov
andb
and
xor
mov
sub
aam
push
sub
xchg
add
int3
pushf
aaa
popf
cmp
lret
push
sub
sub
sub
jle
lret
je
pop
jg
lret
insb
add
lcall
addb
lahf
jle
lret
inc
xor
lods
stos
mov
adcl
imul
iret
dec
js
call
add
or
iret
mov
sti
mov
adc
sub
xchg
mov
push
mov
fs
nop
adc
mov
cli
adc
push
aaa
pop
inc
fwait
out
int
int
inc
imul
jb
mov
das
mov
shrl
pop
fwait
pop
jmp
push
xor
dec
and
xchg
inc
mov
mov
sar
mov
adc
dec
arpl
jbe
push
dec
jmp
lahf
push
mov
ds
push
cld
aad
mov
call
sbb
inc
dec
popf
sbb
jns
and
fstpl
rcll
mov
xor
pop
outsb
jo
dec
pop
xchg
adc
shl
lock
lods
mov
shrb
into
xchg
test
movb
sub
rcrb
roll
xor
adc
scas
maskmovq
mull
mov
and
nop
out
mov
lods
int3
aad
cmp
out
mov
pushf
xchg
int
aas
leave
pop
and
pushf
ret
rolb
aad
mov
aad
daa
fdivrs
sarb
xor
pop
sub
cmp
cwtl
xor
out
das
jno
jbe
inc
rcrb
pop
aam
push
cld
lock
scas
push
push
roll
mov
cwtl
mov
push
pop
ret
and
loopne
sbb
mov
and
fimull
loopne
push
pusha
mov
inc
dec
scas
pushl
mov
inc
jb
dec
xchg
sbb
xor
jmp
and
dec
inc
movsb
sub
or
push
iret
jg
adc
xor
push
mov
or
sbb
pop
cmpsb
stc
pop
scas
and
shr
xor
aam
out
pop
nop
or
jo
pop
das
xor
xchg
ret
sub
lock
push
hlt
leave
or
mov
shl
pop
mov
pushf
sarb
mov
scas
sbb
out
adc
jbe
fdivr
cmp
jo
cmp
sbb
mov
shrl
iret
je
pop
or
add
out
pop
daa
xchg
pop
mov
rcrb
in
push
fbld
rorl
add
js
bound
sub
mov
cmp
cmp
push
ficompl
add
mov
and
xchg
andl
loop
sbb
xchg
cmp
pop
es
aaa
inc
jmp
adc
bswap
mov
lods
pinsrw
notb
iret
aas
xor
push
xchg
and
pop
hlt
adc
popf
cmp
ror
and
add
cmp
push
popa
repnz
clc
dec
bound
arpl
adcl
add
mov
orb
xor
ljmp
xlat
add
pop
shl
mov
div
adc
mov
lods
stc
bound
iret
adc
outsl
cmp
xor
call
or
add
clc
sahf
cwtl
das
scas
add
and
or
arpl
jg
scas
push
xchg
cli
sub
and
mov
sahf
iret
lea
out
add
dec
fsubrp
sub
daa
dec
xor
pop
cmp
fwait
mov
adc
mov
inc
movsl
shrb
pop
mov
hlt
adc
jo
std
cmp
icebp
jae
lahf
xor
pop
dec
roll
je
adc
xorl
add
adc
jnp
push
inc
movl
xchg
xor
sbb
sbb
fimull
push
lret
lds
andb
inc
sbb
sbb
je
sbb
xor
scas
ret
in
test
mov
sbb
lds
push
pop
adc
cmp
mov
mov
dec
lret
mov
xor
hlt
jmp
and
pop
pop
xchg
push
rorl
std
into
dec
bnd
sub
shlb
aas
jmp
add
fidivrs
iret
shlb
mov
pop
dec
xlat
mov
shrl
loopne
add
fmuls
pop
shlb
mov
sbb
aam
fimull
inc
movsb
cmpsl
ret
lock
adc
adc
and
scas
movq
int
mov
ret
adc
in
mov
bound
inc
mov
sub
push
xlat
push
adc
scas
sub
rcrb
pusha
mov
push
pusha
loop
xor
adc
mov
dec
lods
xor
fildll
out
sbb
leave
into
sub
bt
jg
lahf
in
and
sbb
fimuls
dec
pop
jns
xlat
and
call
hlt
dec
call
mov
mov
imul
lods
and
sub
sbb
mov
cmpsl
push
and
inc
adc
pop
sub
push
cmp
lret
clc
and
mov
adc
sub
jo
scas
call
ss
or
scas
sbb
sti
in
lods
lds
or
pop
ret
loopne
xor
xor
dec
jae
mov
mov
pusha
inc
pop
xor
mov
mov
sarb
push
stos
fiaddl
push
iret
xor
sub
cld
lods
sub
cmp
mov
notb
adc
ret
divps
push
sbb
pop
out
les
test
shrl
dec
movsl
push
push
sbb
and
cwtl
test
pop
mov
mov
cmp
loop
sti
dec
ret
sbb
rcrb
out
loopne
mov
sub
or
sbb
jmp
push
cmpsb
rorb
insl
mov
pop
loopne
xchg
pop
scas
xchg
xchg
ror
in
mov
in
pop
mov
sti
loop
mov
xor
xor
in
lahf
bound
pop
sahf
repz
push
pop
iret
stos
out
cmpsb
loope
xor
or
jmp
and
iret
rcrb
cmp
jbe
out
js
in
cld
dec
jo
xchg
sti
adc
lock
mov
xor
cmp
dec
push
aaa
out
in
adc
leave
push
mov
sbb
xor
and
pop
mov
cmp
loopne
in
ds
loop
fcoms
xor
ret
pusha
jnp
add
mov
inc
inc
push
rclb
dec
mov
inc
test
xorb
notl
adc
jmp
hlt
jae
push
adc
xor
movsl
xor
sbb
push
ja
mov
iret
sbb
add
loopne
fcoms
cmpb
enter
mov
xchg
xlat
xchg
popf
fdivs
dec
outsb
adc
das
nop
sti
lcall
sbb
mov
jno
cmc
sti
test
xchg
add
pop
adc
mov
adc
sbb
ror
aad
add
sbb
push
mov
lret
call
jb
outsl
addr16
scas
in
sub
sbb
or
scas
lea
pop
pop
sbb
mov
fmuls
notl
cwtl
aam
call
fsubs
dec
mov
fwait
repz
mov
pop
xchg
mov
sbb
stos
sub
mov
push
mov
adc
into
mov
adc
aam
pop
or
movsl
nop
and
mov
xor
and
mov
jnp
and
scas
arpl
push
push
popa
cli
xor
jo
arpl
sbb
adc
fninit
inc
mov
push
adc
daa
jo
xchg
cmp
comiss
lds
pusha
scas
mov
stos
push
push
dec
loopne
lods
mov
ret
bound
mov
cmp
fsubrs
lock
xor
pop
pushf
cmpsl
inc
dec
subb
lods
mov
loope
cmp
das
pop
mov
inc
das
xorb
sbb
mov
lods
or
sbb
sub
hlt
call
xchg
mov
mov
cs
inc
pop
adc
and
addr16
das
loop
sti
out
sti
test
in
lods
cli
cmp
dec
pop
cmp
ja
adc
cld
lock
xsavec
orb
cmp
inc
mov
xchg
mov
xchg
cld
js
rorl
das
fdivr
mov
mov
push
loopne
adc
lods
mov
iret
and
pop
insb
adc
mov
xchg
or
pop
rclb
ret
and
dec
pop
les
loopne
bound
adc
ret
pusha
pop
xchg
lods
fsincos
mov
ficomps
pop
es
in
sub
int
movnti
movsl
clc
out
cld
add
dec
rolb
into
dec
aas
and
push
cmpsb
test
adc
xlat
lahf
int
in
mov
jnp
pop
mov
mov
and
sarb
repz
sbb
pop
rclb
xchg
rcll
bound
sti
fcoms
push
stos
cld
iret
lret
fisttpl
dec
xchg
movsb
mov
cmp
pop
loope
lods
push
cltd
sarb
sub
mov
pop
sahf
xor
cmpsl
stos
in
push
mov
std
xchg
adc
sbb
sub
push
xchg
rcrb
enter
and
outsb
or
inc
bound
in
repz
scas
xlat
sub
and
jge
inc
lods
mov
das
jne
or
ljmp
jne
jge
ret
repz
and
sbb
push
iret
sub
lar
rcrl
stos
aam
lock
cmp
iret
mov
js
push
fstl
lock
adc
push
cltd
xlat
and
push
mov
hlt
ja
adc
pop
sub
cmc
jmp
dec
pop
pop
adc
pop
das
mov
pop
cmp
les
sbb
insb
xchg
push
fsubs
mov
sar
pop
cld
iret
and
addb
call
inc
cmp
add
add
and
ror
std
jp
xor
loopne
cmp
nop
mov
push
push
and
push
cmp
mov
addb
jl
stos
call
stos
pusha
xlat
mov
mov
xchg
or
mov
mov
orb
sbb
loopne
adc
divl
push
gs
jne
xor
fnstenv
je
pop
repnz
mov
cltd
xor
lahf
and
xorb
cmp
mov
mov
cmp
mov
icebp
and
lods
test
push
mov
ret
and
and
fisttpl
shlb
das
push
in
sbb
mov
nop
mov
fmuls
cmp
aam
adc
loope
lods
adc
pop
add
stc
push
xchg
outsl
ss
xor
inc
sbb
cmp
xor
and
or
pop
push
xchg
sub
enter
bound
sahf
mov
out
das
and
je
jg
das
mov
mov
out
push
xchg
jl
bound
add
push
mov
loopne
pusha
mov
arpl
cld
insl
pop
adc
mov
mov
popa
jo
cwtl
jnp
repz
and
or
jnp
int
int
xor
mov
inc
arpl
sub
rorb
bound
pop
mov
out
or
lret
lock
cli
scas
mov
jmp
das
xchg
test
out
test
cmpsb
dec
add
stc
cmp
pop
xchg
add
in
js
hlt
add
jl
aaa
flds
add
fs
leave
mov
sbb
imul
mov
rol
loopne
mov
adc
mov
cmpsb
es
push
xchg
mov
in
xchg
lock
jo
xchg
mov
cmc
cmp
imul
adc
cwtl
inc
shl
mov
aaa
aam
add
mov
out
fsubr
xor
mov
sub
pushf
pop
adc
shrb
push
mov
test
shlb
mov
hlt
adc
test
pop
out
xchg
adc
xlat
dec
jp
mov
mov
cwtl
mov
dec
xchg
bound
aas
arpl
and
loopne
cmp
mov
xchg
and
push
daa
xor
add
cmp
nop
xor
js
xor
jo
mov
jmp
inc
adc
dec
and
or
out
lods
test
add
xor
jnp
sub
sarb
cmpsl
mov
sbb
xor
sub
icebp
mov
pop
push
dec
xor
sub
movsl
add
dec
fsub
push
push
adc
xor
lock
or
add
push
xchg
bound
gs
insl
pushf
sub
shrl
dec
push
loopne
add
enter
cmp
sti
mov
pop
sbb
mov
fistl
dec
mov
scas
mov
ret
sbb
lret
sbb
inc
std
xor
xchg
fbstp
cmp
ljmp
mov
fistl
fstpt
out
call
or
outsl
dec
loopne
jmp
fcmovne
popf
aaa
int
stc
stos
repnz
in
ret
inc
inc
repz
loopne
imull
loopne
jmp
adc
mov
add
dec
push
andb
add
jnp
or
and
pop
sbb
rclb
ss
dec
lods
adc
es
add
cmp
fadds
xor
outsl
adc
fwait
sbb
push
call
push
jnp
dec
sub
rorb
sbb
rclb
sub
adc
test
ret
mov
hlt
cmpsl
aaa
call
jp
ret
sbb
in
sub
xchg
out
dec
cmpb
cld
pop
xor
mov
dec
std
xorb
mov
and
lret
std
lods
sub
push
stos
sub
shrb
cmp
and
xchg
cwtl
and
mov
mov
ret
xchg
adc
rclb
xor
and
cmp
test
jns
packsswb
sbb
pop
push
adcl
xor
hlt
mov
mov
xor
xchg
xchg
cmp
xor
in
cmpsl
adc
movsb
adc
inc
cmp
xor
call
cmp
cltd
xor
sbb
xchg
lcall
cmp
xor
pop
clc
nop
cmp
xor
sub
xchg
mov
gs
shlb
xor
out
push
shlb
adc
mov
clc
push
mov
and
call
xor
lock
bound
pop
call
je
mov
bound
stos
mov
andb
mov
jmp
mov
or
adc
rol
inc
outsl
mov
adc
mov
ja
and
lret
mov
adc
fbstp
sarb
outsl
mov
push
pop
enter
notb
mov
cmp
jnp
out
mov
movsl
notl
jmp
xor
mov
mov
ret
rorl
mov
adc
sbb
loopne
sub
rcrb
clc
bound
nop
push
inc
or
lock
loopne
lcall
sti
jnp
push
ljmp
push
adc
mov
nop
dec
cmp
fisubrs
stc
addr16
clc
das
sbb
xor
and
mov
cwtl
sbb
adc
dec
lods
pop
test
xor
rol
xor
sbb
push
clc
sub
and
jo
inc
push
lock
pavgb
test
fiadds
loope
or
xlat
inc
fisttpl
xchg
or
xorb
jo
sub
mov
popa
lods
sub
pop
cwtl
in
mov
out
in
xchg
outsl
lcall
ss
cmc
and
adc
mov
or
mov
pushl
aad
mov
jo
pusha
xchg
loop
lahf
icebp
xor
das
push
adc
aam
xor
jle
inc
cmp
adc
pop
sub
sub
cmp
jnp
sbb
mov
ret
cmp
ja
cmp
xor
xor
ds
push
idivb
nop
dec
jno
mov
mov
orl
xchg
inc
mov
fldenv
std
cmp
dec
sbbb
nop
xor
add
push
mov
sbb
out
repz
cmp
xchg
sbb
rclb
xor
jle
adc
push
rcl
or
movsb
jmp
or
scas
movsb
mov
test
ljmp
mov
addb
cs
xor
loope
rcrb
sarb
clc
pop
fsubl
adc
ljmp
inc
mov
shrl
mov
test
arpl
jge
fsubl
stc
sub
scas
mov
aaa
repz
lock
les
cmp
loop
ds
aam
cmp
lock
inc
pop
outsb
add
pop
sbb
enter
push
sahf
pop
lods
add
jnp
inc
pop
mov
jecxz
mov
mov
out
call
adc
mov
clc
pop
shr
sub
mov
mov
mov
inc
cmp
xor
dec
jle
lods
lret
push
fdivl
insl
lret
xor
adc
and
fisttpl
sub
cmp
movups
gs
xor
mov
and
shlb
or
adc
sbb
int3
sub
mov
pop
sti
mov
inc
js
mov
and
stos
es
mov
in
pop
mov
push
out
push
bound
cmp
dec
jnp
cmp
pushf
sbb
xor
add
movsb
std
jnp
xchg
test
and
lds
add
out
inc
push
out
sbb
adc
lahf
sub
mov
mov
add
iret
cmc
push
mov
jnp
arpl
and
push
jg
lods
dec
test
cmp
pop
andb
pop
mov
mov
out
push
mov
mov
cmp
pop
jnp
pop
ljmp
hlt
sbb
in
int
xor
out
xor
xchg
add
das
pop
xchg
inc
icebp
lret
mov
adc
lret
sub
and
bound
xlat
sbb
cmp
jecxz
popf
mov
or
mov
jnp
in
pop
cmp
push
scas
xor
dec
test
popa
cmp
iret
outsl
sti
xor
fcomip
enter
enter
sub
xchg
loopne
push
sarl
lret
sarl
jl
std
stc
add
js
xchg
frstor
mov
rol
and
adcb
add
pop
jnp
cmp
leave
add
xchg
movsb
adc
push
lods
test
popa
cmp
dec
mov
jle
lods
insl
mov
int3
inc
and
popf
cmp
sub
mov
mov
test
and
cmpsl
out
jl
sbb
lea
adc
jno
xchg
popf
cmp
push
cmpsl
xor
xchg
cmp
mov
push
sbb
ret
pop
mov
rcrb
push
adc
adc
nop
cmp
icebp
or
orb
js
jne
gs
cwtl
push
adc
add
sub
push
das
xor
bound
sbb
cmpsb
shll
sub
int
pop
rorl
dec
inc
loopne
dec
cmp
xchg
ficoml
lds
rcl
rolb
sbb
je
jae
and
pop
out
xor
push
call
loopne
shlb
and
pusha
fcom
dec
rorb
sti
in
cmp
clc
repz
xlat
lods
cli
popf
push
popf
inc
mov
push
sbb
or
sub
mov
ret
and
adc
aad
adc
sar
pusha
cmp
sbb
pusha
mov
psadbw
jmp
dec
dec
popf
mov
or
xchg
stos
inc
and
shlb
movsl
bound
shrb
insb
adc
add
xchg
sbb
divps
xor
cmpsb
aam
sbb
cltd
bound
fisubrs
pushf
pop
adc
repnz
out
enter
pop
mov
sbb
fstl
dec
imul
mov
sahf
jmp
ljmp
ja
rorb
jnp
xchg
adc
inc
scas
fmul
push
mov
mov
jge
test
fildl
cltd
lods
sub
jg
aam
mov
fs
imul
add
pop
stc
push
pushf
xor
jnp
sahf
push
fstl
dec
mov
xor
sub
jnp
in
push
sbb
mov
xor
xor
pop
inc
cvtdq2ps
or
fwait
adc
pop
inc
fadd
aaa
in
faddl
in
std
je
and
xlat
and
mov
loopne
jle
mov
and
cmc
das
icebp
xchg
sub
les
dec
sbb
sbb
rcrl
push
jg
sub
sub
pusha
xor
xor
iret
scas
xchg
lods
pop
sbb
or
rolb
pop
call
and
push
test
shr
xor
fists
xor
sbb
adc
add
sub
call
lods
nop
call
vcvtdq2pd
pop
daa
fisubrs
cmovle
lock
xchg
aam
adcb
in
in
nop
cs
sahf
leave
js
push
dec
fcompl
mov
sbb
or
fsubrp
int3
lock
stc
test
aam
sahf
xlat
xchg
pop
clc
ret
push
push
push
inc
or
sahf
mov
jle
mov
adc
push
mov
stos
iret
fistps
mov
addr16
and
adc
arpl
sub
ror
sub
jnp
int3
ret
cmp
bswap
iret
sub
xor
push
inc
xor
add
popf
push
std
push
mov
fisubrs
xor
test
and
push
jne
sub
subb
pop
je
in
and
xor
xchg
shlb
sbb
sbb
lea
out
push
push
out
push
xchg
xor
cmp
sub
mov
jg
mov
mov
mov
das
pop
sub
mov
insl
test
mov
mov
js
rcl
jnp
xchg
in
bound
dec
mov
stc
or
cmc
add
adc
jg
pushf
popf
idivl
dec
mov
dec
lds
adc
in
mov
dec
pop
sbb
xchg
mov
repz
repnz
pop
aas
mov
xor
xchg
in
add
subl
jae
inc
xor
loopne
loop
pop
insl
or
bound
adc
and
mov
les
call
aaa
mov
pop
dec
add
sub
mov
jb
in
pop
in
pop
xchg
adc
arpl
jmp
inc
adc
dec
rcrb
shll
movsb
mov
pusha
std
push
and
push
sbb
cltd
push
shlb
movsb
dec
aam
dec
inc
comiss
fisttpl
repnz
jle
nop
jo
ljmp
popf
fcom
pop
pusha
mov
mov
popf
jne
push
jbe
iret
or
mov
jmp
pop
lock
mov
insl
xchg
mov
pop
insl
mov
xor
add
shr
icebp
sahf
adc
in
lods
lret
adc
cmp
inc
and
dec
jb
rorb
scas
aas
mov
jne
or
pop
out
vpminsw
in
inc
iret
and
jne
popa
dec
pop
inc
repz
mov
inc
xorb
call
pop
push
xchg
adc
and
xchg
mov
divps
inc
mov
enter
sub
and
push
fldt
cmpsl
or
enter
pop
jg
aaa
bound
rolb
in
clc
ljmp
pusha
mov
sub
or
in
inc
push
out
scas
hlt
xor
xlat
mov
insl
and
imul
bound
call
xor
xlat
jbe
xor
cmp
pop
shl
or
xor
ds
mov
je
sahf
xor
test
xor
aas
scas
lea
add
dec
mov
jno
orb
mov
test
movsb
inc
loop
fdivrl
cmc
adc
pop
shrl
cld
pop
sbb
push
shlb
push
imul
cmp
into
insl
push
psraw
xor
icebp
aas
mov
or
xchg
stos
adc
mov
into
das
mov
dec
in
dec
pop
fbld
push
data16
push
loop
jmp
addr16
dec
xor
aaa
adc
stos
testb
andl
outsb
repnz
mov
mov
sahf
sub
pop
xlat
ja
loopne
push
xor
pusha
jp
or
gs
jge
movsb
rcrb
into
mov
push
xchg
and
or
cltd
andl
lea
mov
out
push
mov
clc
ds
pop
cmc
ret
int
fldt
add
pop
insb
cltd
mov
xchg
xlat
xchg
sub
jle
mov
and
fildl
lea
shll
lahf
imul
bound
xor
xor
icebp
xor
fwait
int
jp
lahf
sahf
xchg
das
jmp
divb
clc
mov
sub
and
dec
ret
lret
aad
push
dec
pop
jbe
pop
mov
adc
mov
subb
xor
xchg
scas
push
cmc
push
add
mov
or
xor
rcl
mov
inc
jnp
mov
sbb
adc
xchg
jle
pusha
insb
imull
stos
mov
mov
xchg
dec
xchg
loop
push
call
iret
dec
push
dec
iret
cmp
shll
lret
bound
xchg
fs
cmpsb
jle
pop
jp
or
adc
pop
cmpsb
adc
sbb
and
mov
xchg
leave
adc
xor
cmpsb
rorl
jle
sbb
sub
adc
xor
js
and
jle
loopne
adc
sub
adc
int3
loop
pop
jnp
or
stc
push
out
mov
or
pushf
adc
nop
inc
int3
mov
adc
lods
jmp
pop
aaa
xor
hlt
pusha
aas
jg
out
push
dec
mov
enter
or
mov
cmp
jmp
int3
push
push
xchg
pop
mov
ret
push
dec
mov
es
iret
cmc
mull
stc
jb
das
sbb
and
jecxz
shrb
mov
cmp
and
pop
stc
or
jne
xor
sbb
loopne
mul
les
dec
test
rorb
cwtl
dec
sbb
pop
outsl
call
inc
ljmp
jae
cld
repnz
int
dec
aaa
sbb
cs
sub
pushf
pop
shrb
and
js
bound
inc
cmpsl
sub
xchg
dec
out
mov
ret
xchg
or
fcmovnu
jle
push
incb
pop
and
fisubl
jge
ds
fcmovnb
push
adc
cltd
subl
pop
push
jle
ficomps
pop
mov
fadds
fiaddl
clc
mov
xchg
inc
shlb
lods
mov
push
fsts
dec
mov
aaa
push
inc
aam
insl
mov
out
pop
sub
rclb
hlt
les
dec
push
mov
xchg
jne
nop
mov
bound
xor
fwait
sub
xor
data16
pop
outsb
nop/reserved
in
pop
cld
or
enter
mov
jmp
scas
enter
mov
outsb
fistpl
dec
pop
adc
and
add
aam
dec
cs
in
in
hlt
dec
outsl
inc
shr
into
test
sbb
or
lods
jmp
fcmovnbe
dec
dec
aad
cs
pop
cli
jmp
or
cmp
ss
add
aas
dec
jb
xor
std
insb
mov
dec
movsb
cs
xor
out
shlb
jmp
pop
in
jae
sahf
cs
jmp
call
inc
and
lods
stos
loopne
push
stos
les
test
adc
cli
mov
filds
stos
rorb
lods
mov
mov
push
daa
fisttpl
pcmpeqw
sbb
ficomps
push
shrb
rcl
out
movsb
sub
shrl
iret
ret
or
jo
repnz
dec
pop
out
dec
fmull
sbb
das
xor
testb
xchg
pop
loopne
hlt
sahf
adc
push
sahf
xchg
dec
jae
xor
mov
mov
js
fcmovnb
cmp
and
comiss
aaa
outsl
test
mov
cwtl
shlb
or
push
pop
and
adc
mov
push
shrb
loop
int3
repz
push
push
xor
push
add
sbb
jp
aad
rcr
or
or
lods
add
pusha
push
mov
and
mov
cmc
call
cwtl
nop
rorb
movsb
or
pop
imul
sbb
sbb
hlt
lret
push
lock
pop
loopne
movsl
jmp
aaa
pop
xchg
popf
jnp
and
pop
push
cmp
cs
subb
jle
jne
xor
ret
push
stos
sarb
lods
repz
sbb
lock
jmp
and
mov
push
inc
fcmovbe
loope
scas
dec
mov
inc
dec
xchg
push
jle
mov
inc
dec
orb
and
lret
cld
rcrl
jbe
popa
sub
xor
movsb
xchg
and
rol
fists
sub
mov
clc
loopne
mov
jno,pt
mov
or
add
mov
pop
pop
imul
insl
mov
je
jno
adc
sbb
frstor
popf
inc
imul
sbb
into
jmp
ret
les
fwait
sbb
cmp
jbe
out
out
jle
sbb
dec
and
pop
cmp
mov
sub
cmpsl
stos
ficoms
jl
rcrl
jno
pop
pop
xchg
cmp
pop
fsubrs
push
mov
ds
xchg
cmp
or
ds
mov
dec
sbb
xor
outsl
push
sub
lock
rcr
sbbl
hlt
mov
xorb
sub
push
es
add
test
scas
xchg
sub
das
nop
cmp
cmp
js
into
addb
ja
cmp
daa
in
mov
mov
push
lods
push
inc
repz
mov
jmp
frstpm(287
hlt
jecxz
cmpsl
movsb
aad
pop
pop
jo
aas
or
cmp
out
clc
call
paddusb
mov
xor
shlb
loopne
xor
enter
mov
daa
shlb
sub
mov
xchg
adc
jno
xlat
or
xchg
push
push
fsubrs
xchg
and
mov
xor
mov
loopne
movsl
or
adc
pop
ljmp
fcmovnb
lods
fcmovne
sub
xor
inc
jo
cmp
arpl
daa
nop
add
sub
bound
xlat
inc
sbbb
ljmp
sub
xchg
dec
xor
int
call
adc
push
shlb
adc
sub
scas
outsl
push
ret
inc
pop
jle
mov
sub
cmpsl
hlt
in
mov
js
int
test
mov
xchg
sbb
int3
inc
dec
jne
jb
xlat
pop
fsubrs
loopne
lret
mov
and
sahf
fdivs
sti
mov
fstps
cmp
out
xchg
arpl
in
push
and
ret
sub
fwait
adc
test
inc
sti
dec
inc
iret
cwtl
insb
repz
cwtl
insl
adc
insl
fmull
lods
fstp
add
sbb
mov
push
nop
cmp
mov
mov
mov
cmp
xchg
xor
xor
xor
je
jle
jae
or
inc
andb
mov
aam
fisubl
ljmp
mov
clc
repz
lods
dec
je
cmpsl
jge
bound
lret
sahf
push
fmull
ret
and
adc
cmp
scas
lods
jmp
leave
mov
jnp
push
sbb
iret
out
ret
adc
mov
scas
adc
test
pop
sub
cwtl
into
xchg
scas
out
cmp
repnz
cmp
xchg
push
pop
ja,pt
pushfw
lods
jbe
call
pusha
dec
cmpsb
test
push
inc
jnp
mov
mov
and
sub
and
mov
lea
jbe
sbb
pop
fldl
push
mov
push
lret
adc
in
repz
jg
mov
fdivl
jmp
mov
add
out
insl
push
cmp
in
dec
pop
sbb
mov
gs
push
shrl
sbb
push
and
xor
sarb
pop
push
mov
hlt
adc
call
mov
inc
sub
adc
cmpsl
cli
cmpsb
mov
push
jnp
add
enter
cli
pushl
and
push
cmpsb
les
sbb
out
repnz
sbb
sub
sti
leave
je
shlb
aaa
fwait
ds
shl
push
cmp
adc
sbb
mov
add
cwtl
sti
adc
cmp
pop
sub
call
sbb
or
in
addr16
bound
rorb
push
repnz
push
das
js
subl
jl
lahf
call
xor
xchg
aas
loopne
or
mov
sarl
sbb
je
jb
int
adc
push
lds
in
xor
aad
je
add
inc
sub
rcrl
call
push
sub
fmul
xor
dec
or
or
sti
fldt
lods
add
fadds
pop
aas
int
in
sti
cmp
lods
inc
loopne
cmp
ret
cwtl
cmp
mov
hlt
test
mov
dec
call
call
lock
negb
mov
and
inc
mov
jecxz
movsb
adc
mov
mov
repz
mov
cmp
inc
sub
into
add
in
out
and
pop
adc
or
sub
stos
cmp
cwtl
lret
mov
xchg
sti
push
mov
and
mov
xor
jnp
push
fwait
push
call
jae
outsb
dec
jecxz
fnsave
aaa
lahf
mov
aas
mov
mov
out
fsubrl
xchg
jmp
test
in
push
in
int
cwtl
aaa
or
jl
loope
adc
sbb
push
cltd
cwtl
test
mov
clc
sub
push
xor
inc
xor
repnz
loopne
xchg
xchg
add
js
icebp
loop
sahf
test
push
enter
dec
add
inc
dec
xchg
aad
aas
out
in
sub
add
sbb
fnstsw
fidivrs
jno
bound
and
jg
dec
repnz
sub
jmp
lods
mov
mov
pop
orl
or
mov
bound
pop
and
int
jle
shl
fs
xlat
adc
jae
adc
pop
das
lods
in
sbb
sub
jmp
shlb
xor
rcl
cs
xor
cmp
dec
xor
ret
cmp
iret
dec
adc
xor
xchg
sbb
xor
stos
push
inc
pop
pop
inc
fmuls
xlat
dec
inc
outsl
cs
dec
jmp
pop
jge
cmp
repz
aad
inc
mov
cs
sub
sub
int
jns
xor
or
mov
mov
loopne
enter
inc
pop
jbe
fmul
pop
rcll
sbb
rcll
mov
repz
xlat
call
lea
popf
sub
xlat
stos
sub
sbb
nop
adc
ret
push
movsb
dec
cmp
push
mov
into
add
scas
fs
sub
testl
inc
nop
outsl
sub
xor
nop
int3
ss
and
idivl
mov
xor
loopne
es
push
es
repz
xor
cmc
xchg
cmp
ret
lods
mov
and
sub
and
mov
sub
outsl
inc
adc
jg
push
jle
shrb
sbb
inc
sbb
xchg
fildll
ljmp
xchg
lahf
outsb
scas
xchg
mov
loop
enter
outsl
test
pop
add
jns
rolb
repnz
int3
xchg
scas
mov
inc
adc
pop
iret
sub
je
dec
mov
mov
enter
bound
test
lahf
fcomps
loopne
lods
sbb
fmull
mov
lcall
xchg
fisubrs
and
push
xor
xchg
add
push
jb
inc
or
nop
cld
mov
xor
adc
pop
dec
push
cmpl
nop
rcrb
lods
jno
sub
daa
outsl
iret
mov
dec
outsl
bndstx
pop
in
lahf
pop
das
out
loopne
scas
pop
xor
iret
dec
fsub
fildll
sub
sbb
jmp
adc
xchg
scas
pop
lods
dec
or
and
in
lock
sub
outsl
lods
sub
jg
loopne
out
es
pop
dec
cs
dec
xchg
aas
rorb
fisttps
sar
sbb
dec
xor
mov
pop
adc
jle
mov
and
lahf
enter
fdivrl
mov
into
sahf
sub
scas
hlt
insl
xor
cmp
ljmp
mov
xor
or
dec
xor
push
insl
outsl
call
mov
mov
push
and
mov
rcrl
push
dec
test
lock
call
adcb
ja
pop
adc
sub
pushf
push
inc
loopne
mov
cmp
insb
push
xor
jo
adc
xchg
sarb
movsl
and
dec
lods
nop
mov
dec
outsl
mov
addr16
or
sarb
shrb
xor
mov
jg
pop
insb
iret
stc
adc
sarb
icebp
int3
lock
imul
icebp
enter
daa
mov
ss
hlt
adcb
adc
push
xor
sar
jp
sbb
outsl
movsb
push
push
adc
loopne
mov
cmp
cmp
xor
test
xor
adc
jle
fbstp
lea
int3
adc
dec
stos
js
shrb
pop
adc
cmpsb
sbb
and
adc
add
jge
cld
xlat
gs
or
shr
sbb
pop
xor
or
sbbb
addb
jle
cmp
dec
mov
dec
lcall
or
bswap
push
push
sbb
pop
jo
jg
jno
mov
fmull
hlt
cmp
out
xchg
pop
sbb
mov
adc
push
lods
ds
pop
xor
mov
mov
lea
ljmp
adc
dec
mov
inc
or
push
sub
or
and
pusha
je
adc
or
push
sbb
xchg
loope
fisubs
lods
sub
ret
into
add
sbb
call
outsl
lret
pushf
shl
cmp
add
and
mov
adc
mov
imul
outsb
adc
pop
enter
sub
mov
cmc
adc
int3
lret
add
in
repz
mov
and
scas
ss
les
inc
adc
sbb
push
lock
orb
add
push
cmpsl
sub
mov
cmp
adc
xchg
adc
or
pop
loope
mov
aaa
adc
mov
add
jmp
mov
xchg
int
dec
add
cmp
imul
rep
sub
cwtl
xor
lock
and
daa
pusha
dec
mov
andl
pop
xor
jno
mov
test
cli
stc
jo
xor
jb
mov
pop
imul
js
sbb
mov
dec
mov
dec
cmovle
in
inc
pop
or
imul
xor
pop
imul
or
xchg
jne
dec
lret
ds
ret
nop
leave
sub
jl
fs
dec
sub
mov
es
adc
mov
test
mov
call
fs
jmp
je
inc
daa
sahf
subb
mov
loopne
std
inc
in
adc
mov
pushf
popa
data16
test
paddd
sarb
mov
daa
or
mov
shll
fdivs
jl
push
push
rorl
es
shl
pop
jecxz
inc
daa
aas
and
hlt
jo
and
pop
ror
jecxz
pushf
xor
dec
push
adc
in
xchg
cs
mov
push
test
aad
iret
stos
aaa
dec
dec
test
mov
pushf
adc
push
sbb
add
and
sub
mov
push
mov
xor
decl
ret
mov
sbb
test
fisttps
iret
out
mov
mov
push
mov
sbb
xchg
int3
or
xchg
lods
adc
bound
aas
cmc
movsb
mov
and
rolb
pop
push
xor
hlt
int3
push
bound
mov
jns
dec
lret
call
jae
arpl
push
sbb
push
xor
lods
mov
push
fld
in
les
into
dec
push
push
bound
and
and
xor
jo
fwait
or
dec
push
fldt
push
clc
pop
out
es
adc
adc
inc
jecxz
pop
mull
cmpsl
sbb
cmp
outsl
sub
jge
aad
int3
int
sbb
pop
or
cmp
shll
scas
dec
jae
push
cmp
ja
ss
mov
lret
mov
or
jecxz
lea
dec
aaa
subl
pop
adc
ret
xchg
ret
add
pop
pop
push
mov
xchg
sbb
cmp
mov
sub
and
test
xor
ret
and
adc
ret
inc
das
pmaxsw
sub
mov
ds
in
dec
das
icebp
sub
inc
dec
adc
out
iret
sub
pusha
mov
xchg
jg
ldmxcsr
sbb
aas
andb
iret
pusha
cwtl
push
push
out
or
rorb
scas
dec
and
add
test
pop
pmulhuw
shrb
dec
scas
test
roll
out
popf
and
xchg
xor
std
hlt
lods
xlat
push
push
push
jge
test
cmp
sub
cmp
pop
pop
jne
les
lds
ds
shlb
lahf
jge
leave
cmp
popl
pushf
fdivs
neg
je
cmp
ret
adc
iret
mov
sub
ds
inc
cltd
dec
sbb
arpl
sbb
pusha
xchg
sbb
xchg
xor
cs
out
aam
iret
out
sar
scas
xlat
mov
jno
pop
xchg
jmp
or
push
jne
cltd
adc
aad
out
jbe
test
lods
xor
and
xorl
out
mov
cmp
sub
push
sbb
push
xor
pop
rcr
dec
ljmp
in
pop
mov
ss
lods
jae
xchg
sbb
lahf
fwait
nopl
jle
cmp
mov
gs
and
mov
je
ljmp
push
push
dec
xchg
lahf
inc
xor
jecxz
mov
pop
jge
jge
cmp
jnp
push
inc
cmp
ds
or
dec
cmp
xchg
leave
xchg
icebp
dec
in
cmp
adc
lret
pop
pop
cmpsb
mov
and
push
sub
mov
gs
out
das
xor
test
push
into
add
push
push
sbb
cmpsl
and
fcoml
sub
or
cld
dec
add
sbb
fcoml
and
mov
test
inc
js
mov
mov
mov
push
movsb
mov
mov
add
fstl
pusha
push
ss
inc
sbb
pop
js
orb
aaa
out
fwait
push
in
fsubrl
arpl
dec
shrl
mov
push
mov
and
cmc
icebp
sub
mov
sub
stos
mov
pop
and
push
rclb
lods
sbb
or
repnz
mov
mov
pop
xchg
and
ror
and
shll
subl
push
popw
jo
mov
in
mov
pop
sub
lret
repz
xchg
cmc
das
push
pop
in
cmp
int
sub
lods
mov
inc
dec
notl
push
ret
cld
push
jl
mov
fildl
sub
test
ss
sti
shrb
in
cld
arpl
loop
push
or
scas
out
jl
imul
jb
push
arpl
pop
scas
arpl
jge
jnp
lcall
adcb
mov
push
inc
adc
test
test
sbb
xchg
into
into
fisubrs
inc
or
cmp
orl
outsl
jo
mov
push
test
in
xchg
sarl
insl
cmp
sub
cmc
in
inc
cmp
in
pop
jge
jp
sbb
jge
mov
test
into
mov
inc
cmp
inc
xor
mov
hlt
and
rcrb
subl
add
mov
add
notl
ss
xor
or
adc
int
xchg
jecxz
sub
xchg
push
push
ret
fisttpll
xchg
out
je
repz
cmp
sub
adc
icebp
sbb
imul
jno
sbb
repnz
pop
dec
pop
mov
call
insb
in
xlat
cmp
hlt
into
out
jecxz
add
out
iret
roll
sti
xchg
arpl
test
int3
and
fisubs
push
call
push
rcrb
cld
lret
nop
xor
fcomp
rcrb
mov
mov
push
inc
rcpps
cmpsl
test
js
enter
mov
aas
xchg
push
popl
mov
pop
xor
loopne
in
int
js
in
stos
xchg
pop
push
add
ret
adc
les
xchg
fists
js
sbb
or
jo
sbb
ja
shll
inc
iret
je
cld
and
jae
pusha
adc
cltd
popl
aam
mov
iret
adc
sub
jo
xchg
mov
outsb
add
xchg
lods
jp
popf
pop
pop
popl
push
aam
sbb
pop
jle
add
and
movsl
adc
shrb
push
in
xor
jo
fcmovu
add
loop
aam
jle
jno
dec
negl
sbb
sbb
jo
ret
mov
daa
not
das
lock
jo
icebp
mov
pusha
in
fimuls
adc
rcl
push
jae
lods
bound
int3
add
adc
clc
add
dec
mov
mov
jnp
jne
inc
das
test
sbb
je
test
pushf
cmp
and
orl
nopl
push
sarl
xlat
push
xor
lock
ljmp
aad
cld
adc
xor
imul
adc
in
cmp
jmp
mov
push
adc
xor
std
jae
int
hlt
jp
adcb
sbb
out
repz
testb
lcall
ficoml
sbb
sub
lret
inc
idivl
je
and
hlt
call
push
dec
dec
xchg
pop
loop
adc
and
cld
rolb
movsb
and
enter
out
test
insb
mov
aam
hlt
scas
push
insl
add
pushf
xchg
lret
mov
js
mov
mov
stc
mov
cmp
fidivs
or
cwtl
popf
pop
mov
mov
push
repnz
pop
fsts
std
sub
mov
pop
hlt
sub
sub
sbb
inc
dec
lahf
out
push
mov
scas
mov
pop
in
scas
dec
mov
add
popf
in
mov
sarb
pop
das
cmp
add
int3
dec
sub
sbb
mov
outsb
mov
andl
dec
pop
iret
iret
push
mov
jo
pop
loopne
add
mov
aam
cltd
jmp
out
push
iret
mov
and
push
popa
rcrb
jle,pt
push
sub
jg
sub
lods
sbb
mov
sub
bound
loope
or
inc
insb
dec
out
movsb
ja
je
xor
sub
mov
mulb
jge
and
lahf
aam
in
into
ljmp
adc
or
push
push
sarb
or
int
jae
cmp
std
lods
daa
outsb
push
pop
sbb
enter
dec
nop
jae
call
and
popa
fcompl
mov
mov
fistps
es
das
inc
mov
rolb
inc
lret
cltd
js
js
cwtl
mov
outsb
out
cmp
sub
decl
mov
jo
sub
pop
adc
mov
das
push
je
cltd
mov
jge
icebp
sbb
ret
rclb
repz
push
adc
sbb
xchg
jle
jae
incl
out
int3
mov
lahf
fisttpl
imul
insb
mov
arpl
xor
fisubrs
sbb
pusha
mov
std
fchs
xor
mov
pop
mov
imul
les
fsubl
mov
fistps
mov
xchg
pop
jnp
pop
insb
and
lahf
or
add
jnp
pop
data16
pop
cs
mov
bound
das
sbb
inc
cli
outsl
loopne
lcall
mov
lahf
dec
push
jae
iret
dec
aaa
rcrb
andb
mov
jnp
fidivrs
sbb
inc
loope
or
jns
sbb
popa
lods
sub
fnsetpm(287
lods
test
out
mov
movsl
mov
xchg
push
movb
mov
fsubrl
cmp
shl
push
rclb
clc
loopne
jg
xchg
xor
sub
sbb
pop
fcoml
cmp
sbb
incb
sub
lahf
shll
jp
mov
inc
out
push
pop
push
jae
push
pop
push
lods
roll
inc
mov
dec
jne
xlat
xor
xor
jmp
push
mov
movsb
jo
push
dec
scas
xor
sub
adc
inc
adc
xor
addr16
leave
xor
divl
add
xor
dec
enter
ja
add
xchg
fbld
fsubl
ret
call
lods
mov
arpl
fsqrt
xor
outsl
or
sub
divb
andnps
xor
out
fcmovu
xor
sub
jmp
inc
das
mulb
mull
out
call
push
cmpsl
into
mov
pop
fisubs
jmp
mov
adc
out
push
es
rorl
popf
clc
rcrb
fcmovnbe
push
repz
rclb
notb
sbb
mov
lcall
test
xor
mov
push
shlb
mov
cmp
lret
fsubrl
icebp
dec
pop
les
jae
pop
cld
stos
ss
sbb
dec
int
mov
sbb
or
xchg
rcl
adc
adc
and
sub
fisttpll
jle
adcb
int3
lret
sub
pop
js
xchg
jp
mov
sbb
leave
and
push
cmp
cmp
and
push
das
enter
mov
adc
rcr
mov
xchg
mov
xor
subb
rorl
sarb
push
pop
xor
js
jecxz
jo
das
jo
loopne
out
js
cmp
push
xor
gs
shrb
xor
fldenv
jnp
and
test
pop
popa
lods
xchg
fsub
imulb
xlat
cmp
std
mov
lock
out
mov
push
sub
and
or
and
and
fdivs
iret
cmpsl
dec
movsb
cmp
int
insb
cltd
or
out
jg
adc
imul
pop
je
mov
lds
test
cmp
out
ret
cmp
mov
cld
jle
jle
aam
lahf
fdivl
out
sbb
xchg
push
addr16
sbb
or
and
scas
inc
mov
jge
inc
pop
cmp
push
stos
sbb
shl
fldt
out
ja
out
adc
adc
or
lds
je
push
pop
mov
pop
jo
add
cs
scas
mov
arpl
out
fisubl
jae
dec
les
lret
cmp
jo
xor
cmp
outsb
rcll
xchg
sbb
xchg
pop
addps
lcall
cmp
dec
mov
stos
and
scas
dec
popf
adc
inc
push
repnz
cmp
push
sahf
sbb
rorl
in
push
int
push
rorl
insl
mov
mov
daa
lahf
fimuls
push
adc
cmp
pop
dec
push
lds
cltd
punpckhwd
lret
outsb
push
es
fnsave
sbb
repnz
in
and
ficomps
sbb
shrl
rcr
cmp
and
mov
push
adc
ds
stos
das
cmp
sbb
ret
jg
and
fsubrl
shrl
xor
xor
cmp
cmp
adc
data16
push
xor
or
fcomi
sub
icebp
daa
pop
arpl
jne
rcrb
mov
push
xor
ficomps
pusha
test
dec
rcll
dec
mov
inc
cmp
sbb
sub
test
adc
je
xor
imul
mov
mov
pop
lock
mov
mov
dec
aas
mov
loope
and
aas
jl
xor
out
xor
mov
add
adc
xchg
mov
cmpsb
sbb
xchg
das
inc
adc
add
mov
and
loopne
hlt
les
shrb
loopne
cs
rcr
cwtl
imul
add
lods
push
pop
xor
mov
cmp
fsubs
ja
add
push
repnz
adc
rclb
mov
xchg
aas
sar
clc
iret
shl
mov
imul
dec
dec
push
xchg
mov
das
jmp
shlb
mov
jo
stos
pusha
push
dec
mov
cmpsl
xchg
sbb
sbb
jae
mov
dec
adc
or
mov
clc
dec
rol
jl
les
lea
icebp
pop
jo
cld
lea
dec
jnp
pop
in
mov
imul
jns
sbb
push
lahf
shrl
push
sub
add
mov
lods
enter
adc
lods
fcompl
and
outsl
sbb
test
ljmp
addr16
lods
xchg
jge
add
sbb
push
pop
popa
adc
push
movsb
fwait
call
mov
dec
cs
cmpsb
push
repz
pusha
hlt
iret
mov
out
cli
outsb
rcll
pushf
xchg
loopne
test
adc
scas
or
icebp
popa
insl
imul
and
mov
js
scas
test
testl
out
les
xchg
and
in
lds
mov
iret
jmp
cmp
xchg
frstor
xor
sub
sub
xor
shrb
ret
fcmovnb
addr16
sub
dec
mov
add
stos
pop
xor
loopne
lods
fbld
ds
sbb
test
xchg
and
sub
out
pop
jg
push
mov
insl
mov
in
and
das
mov
sub
push
push
iret
out
xor
sbb
sbb
pusha
clc
rcrb
inc
sbb
in
enter
cs
pop
dec
push
and
outsb
scas
rorl
hlt
int
adc
insl
add
fnstcw
push
sbb
cmpsb
rolb
mov
push
shl
loopne
lock
xor
adc
sub
lahf
xor
pusha
das
test
sbb
pop
sbb
ljmp
jg
mov
sahf
das
bswap
cs
inc
jp
xchg
xor
cmp
pop
mov
push
mov
sbb
loopne
ret
xchg
sub
hlt
and
sbb
repnz
xor
push
gs
xor
lahf
add
cmp
nop
scas
test
int
enter
daa
out
int3
dec
lods
in
xor
mov
cmp
fdivrs
mov
scas
scas
out
fcoml
nop
fcomps
repz
xor
push
sbb
nop
bound
jno
mov
add
cmp
jp
idivb
in
sub
push
cmp
xlat
sub
or
mov
es
aas
mov
adc
and
or
mov
pop
es
jbe
xchg
sub
je
lret
adc
lea
loop
movsb
jg
dec
cmp
xorl
push
shll
subl
scas
out
sbb
cmc
cmp
sub
or
xor
and
jo
ljmp
enter
gs
cld
clc
fistpl
movsl
adc
xchg
test
imul
adc
leave
xorb
js
sbb
adc
test
sbb
dec
aad
sbb
mov
cmp
or
data16
sub
aas
in
mov
test
ret
push
in
es
std
movsb
mov
xor
cmp
mov
out
lods
iret
push
movsb
scas
cwtl
movsb
int3
adc
mov
es
xchg
mov
aam
repz
mov
adc
add
or
sub
hlt
cmp
jg
jg
daa
inc
test
sbb
sahf
int3
and
fsts
scas
mov
movsb
sbb
cmpb
mov
sub
xchg
jne
je
jl
ret
xor
movb
pop
js
bound
daa
testl
mov
add
outsb
adc
push
out
fildl
adc
sbb
lcall
push
fistps
add
aaa
adc
jecxz
pop
popa
adc
ret
push
sub
xor
adc
out
adc
jle
sbb
mov
pop
out
sbb
mov
adc
jle
sbb
insl
cmp
enter
out
adc
dec
inc
sti
sbb
sbb
pushl
testl
std
fwait
mov
add
lahf
and
int3
or
xchg
popl
popf
pop
aad
push
psubsw
jg
mov
data16
pop
das
clc
insl
ss
mov
pop
adc
cmpsl
add
test
hlt
inc
sbb
pop
sub
sub
sub
addr16
add
lods
lea
mov
mov
sar
jae
mov
int3
xchg
std
sbb
mov
push
sbb
pop
lahf
jb
xchg
cmp
and
jbe
sti
sbb
out
sub
in
sbb
inc
cmp
cmp
stos
ja
sub
cmp
je
jl
jmp
lock
and
mov
js
adc
and
call
adc
fadd
mov
movsl
pop
jb
pop
int
hlt
mov
and
adcb
into
lret
mov
iret
xor
jge
sarl
push
or
or
mov
sub
add
cld
push
cmp
sbb
sub
shll
into
adc
mov
jne
shr
xor
cmpsl
xor
pop
in
pushf
cmp
pop
dec
adc
loope
flds
xor
fistl
push
call
mov
in
pop
dec
ret
xor
rcrb
stc
rcrl
xor
xchg
push
cmp
jmp
in
cmp
out
mov
das
jae,pt
iret
dec
outsl
mov
push
xor
cmp
aaa
fst
sbbb
inc
dec
cmpl
out
pop
lahf
daa
iret
xchg
out
and
cmpsl
loopne
mov
mov
inc
mov
adc
pushf
shlb
mov
ret
cmp
jns
or
push
and
mov
inc
ret
jle
xor
inc
outsl
and
pop
mov
mov
jle
imul
pop
out
or
adc
je
add
mov
cmpsw
test
dec
sub
cmp
mov
push
sub
loopne
mov
mov
sbb
adc
popf
sbb
xor
stc
neg
xchg
mov
mov
gs
loopne
int3
pushf
jl
sbb
sub
mov
jmp
jl
push
lods
sbb
adc
dec
subb
cmpsl
pusha
dec
inc
lods
xlat
je
sub
mov
icebp
and
outsl
pop
xchg
les
sub
or
mov
das
icebp
and
aas
xchg
lods
push
and
or
out
cs
ljmp
xchg
cs
das
scas
leave
or
pop
pop
loopne
mov
inc
push
xchg
in
adc
sbb
dec
inc
pop
leave
insl
iret
lcall
ret
fisttpll
cmp
aam
or
cltd
pop
lods
nop
jl
dec
or
outsb
sub
rorb
das
movsb
push
lods
cmpsl
and
xchg
inc
testb
pop
push
test
push
and
and
adc
dec
fimull
arpl
scas
stos
das
in
stos
mov
stos
pop
fisubrl
into
into
sub
mov
cmpsb
enter
iret
add
sub
pop
mov
lock
adc
dec
jb
or
js
cltd
mov
sbb
hlt
rcll
je
xor
test
push
nop
jmp
sbb
ljmp
and
pop
insb
cmc
cld
add
pushf
xlat
lods
add
out
pop
push
iret
gs
cwtl
lds
hlt
push
sbb
push
xchg
mov
xor
rclb
in
aas
cmpsb
mov
pop
cs
stos
rcrb
sti
cli
and
rclb
ds
out
push
lods
loop
jne
icebp
addr16
call
ljmp
les
in
js
sbb
sbb
adc
scas
cmp
adc
sub
pop
push
inc
sti
xchg
fmul
cs
insl
lods
jecxz
lcall
les
popf
dec
xor
or
mov
inc
add
std
push
test
dec
in
into
aad
mov
xor
test
pop
jns
adc
clc
push
das
mov
inc
jecxz
int
sub
rorb
insb
scas
sub
push
aaa
xor
xchg
aaa
mov
xchg
ljmp
push
test
xchg
jnp
xor
mov
into
fdiv
sbb
ja
push
std
cmp
xor
sarl
scas
adc
xlat
fnsave
into
or
fdivp
sub
xor
push
jge
sahf
dec
out
cmc
out
mov
mov
lahf
mov
push
div
xor
js
mov
xchg
ss
sbb
sbb
jb
fisttpll
add
fldt
lcall
inc
hlt
in
adc
lcall
cmp
xor
mov
pop
ja
enter
jg
xchg
mov
and
jae
js
test
mulb
sub
lock
pop
xchg
jg
jle
pop
popf
orl
fstpt
jmp
mov
jl
xchg
inc
xchg
enter
xchg
lret
dec
faddl
andnps
jnp
fucomip
es
scas
outsl
rclb
dec
inc
dec
cmp
iret
mov
xor
in
enter
mov
push
or
testb
call
mov
pop
leave
xor
xlat
pop
test
testl
shrb
unpcklps
ljmp
shlb
fisttps
daa
push
and
int3
sbb
js
push
or
jb
cmp
mov
pop
xchg
ret
dec
scas
jo
jg
and
xor
xor
clc
lret
mov
outsb
lods
mov
es
mov
adc
ror
bound
inc
and
xor
lods
add
push
call
sub
xor
fistl
and
add
ljmp
out
fsub
testb
pop
mov
sarl
aas
xchg
cld
adc
jnp
mov
bndstx
adc
and
push
les
push
dec
pusha
pushf
daa
mov
and
filds
push
mov
jns
aas
ja
sbb
loop
push
sahf
mov
test
jne
push
xchg
push
sbb
cmpsb
lock
pop
in
fidivl
cmp
scas
sub
adc
lret
or
inc
roll
sbb
inc
pop
notl
xchg
punpcklwd
daa
mov
ret
sbb
scas
adc
mov
adc
out
pusha
mov
cmpsb
cmpb
daa
and
dec
call
iret
subb
inc
mov
push
rol
add
call
movsl
mov
adc
arpl
cmp
popf
popf
mov
mov
lods
fcompl
lods
repnz
rep
rcrb
or
xor
addl
sti
cmp
outsb
cmp
or
ds
outsl
fistl
mov
mov
pushf
sub
xchg
or
popa
sbb
push
cmp
out
pusha
daa
mov
jg
outsl
fists
mov
sarb
jns
mov
sbb
cmc
pusha
cmpsl
out
pop
mov
sub
mov
cmp
shr
aad
xor
add
jl
sahf
inc
loopne
jl
inc
aaa
roll
in
lea
in
mov
xorb
pop
dec
aam
add
sbb
adc
pushf
out
loope
sub
shl
and
call
mov
and
je
lock
nop
aaa
call
xor
into
pushf
mov
shr
cmp
fcompl
enter
sub
adc
adc
sti
punpcklbw
sbbl
xchg
cmp
cmp
daa
adc
call
lods
sub
mov
popf
mov
mov
gs
cmpb
sbb
sub
cmc
push
es
lods
sub
xchg
or
sbb
lahf
xor
sbb
jno
cmpsl
sbb
xor
rclb
shr
mov
mov
mov
jmp
adc
and
adc
mov
mov
push
mov
faddp
sar
sbb
mov
mov
out
and
inc
mov
dec
cmc
rorb
ret
push
push
mov
neg
add
lods
lock
imul
sub
lret
pop
and
jae
out
js
in
inc
loopne
adc
out
ss
xor
cmp
scas
data16
or
lahf
adc
subb
test
lods
xchg
adc
out
ret
pop
and
push
dec
pop
ror
sbb
into
xor
pop
xor
scas
mov
ret
repnz
jo
xor
leave
mov
add
mov
scas
subl
mov
mov
fbstp
mov
in
xchg
mov
movsl
imul
sbb
fstpt
push
lret
xorb
ds
inc
cs
mov
es
xor
test
mov
in
mov
jns
inc
pop
loopw
pop
xchg
mov
out
inc
inc
paddb
fs
inc
mov
dec
gs
adc
pop
addr16
xchg
inc
push
fimull
sbb
mov
or
xor
lock
je
loopne
push
out
and
dec
adc
cmpsl
xorb
xchg
jb
xchg
pop
scas
xchg
sbb
fidivrl
xchg
pop
enter
loopne
adc
xor
lcall
xor
xor
fdivp
fnsave
mov
sti
xor
test
cld
aad
call
js
in
test
enter
xor
iret
inc
repz
xor
out
out
out
mov
in
call
lods
push
jno
mov
lea
dec
movsb
cld
push
lahf
xor
add
int
adc
out
pop
data16
xchg
xor
scas
sub
into
lcall
jle
cmp
or
ljmp
aam
fsubrs
cli
mov
out
cmp
mov
mov
cmc
mov
ds
insl
jmp
and
dec
add
lcall
ds
add
fildll
dec
cs
dec
aad
adc
negl
dec
outsb
lock
insb
sub
push
pop
sub
int
lret
xor
outsl
push
push
mov
pop
insb
out
in
adc
push
push
and
rorb
dec
in
insb
mov
cmp
jle
sub
adc
daa
mov
aad
mov
or
fbld
and
dec
out
scas
push
xor
movsb
adc
rclb
insl
adc
jecxz
repz
mov
repz
mov
sbb
cld
movl
repnz
shrb
xchg
lods
clc
rclb
mov
clc
mov
movsl
ja
sub
adc
lea
das
xor
aas
dec
pop
mov
fnstsw
lock
mov
xchg
shlb
mov
mov
ss
mov
xor
xor
cld
hlt
hlt
test
mov
in
push
pop
inc
jl
shll
loop
call
in
mov
mov
adc
mov
adc
xorb
cmp
mov
xor
jmp
sbb
adc
push
mov
xor
in
shlb
adc
les
cmp
adc
mov
dec
aas
repz
lods
int
cs
add
jbe
out
loopne
call
sbb
fs
je
pop
mov
mov
out
hlt
pop
lret
mov
lcall
add
xor
testb
daa
cli
in
call
in
dec
jnp
movsb
ret
rolb
repnz
dec
jl
ss
cwtl
xor
lock
and
inc
and
rcl
mov
js
mov
popl
stos
adc
pop
push
mov
mov
push
cwtl
or
pop
jbe
ljmp
lods
mov
in
cmp
fsubl
sub
mov
jecxz
mov
mov
test
sbbl
inc
cmp
cmp
shl
nop
enter
mov
sbb
daa
sub
mov
jo
popa
inc
xchg
fsubl
inc
in
shll
mov
mov
xchg
inc
jnp
adc
cltd
xchg
sub
sti
add
sub
je
cs
push
outsl
or
arpl
in
punpcklbw
rorb
cli
ss
and
fldt
sbb
mov
shlb
inc
jns
jae
in
sahf
xchg
mov
lods
mov
sbb
leave
xor
pop
mull
iret
mov
arpl
in
dec
orb
ret
dec
push
out
pusha
cli
adc
aaa
scas
outsl
jo
cmp
lods
das
and
ja
mov
adc
enter
pop
popf
pop
cwtl
pusha
and
adc
imul
jo
mov
adc
xor
shlb
aas
mov
fwait
xchg
dec
test
rol
mov
dec
pop
fsubl
adc
nop
inc
dec
xlat
sahf
or
adc
jl
sahf
subb
mov
jle
das
jg
and
lods
fs
fldt
lods
jno
fisubl
dec
sti
aam
popf
jl
mov
jae
sub
add
iret
add
test
and
movsb
out
add
int3
push
mov
inc
test
in
insb
scas
mov
xor
xchg
inc
cmp
xor
ja
push
arpl
push
outsl
repnz
std
ja
test
into
stos
jecxz
dec
xor
jne
xor
or
rcr
iret
lods
aaa
push
xor
lods
inc
jl
inc
mov
nop
push
rcrb
divl
insl
and
dec
jmp
push
dec
add
xchg
or
lods
stos
inc
mov
inc
xchg
pop
cmpsb
cmc
loopne
mov
lock
cmpsl
js
rorb
dec
sub
ss
pop
jg
das
cwtl
test
dec
push
jmp
std
inc
pop
push
xchg
pop
mov
cwtl
lahf
push
add
push
loop
dec
push
in
leave
xor
ss
es
or
aas
adc
shll
shrl
mov
xchg
push
xchg
cmp
clc
insl
or
lods
lock
pop
push
in
lods
pop
jmp
insl
shrl
andl
inc
out
jae
jge
inc
mov
ficomps
dec
stc
lret
and
and
iret
or
jl
cmp
sub
lods
dec
cmpsl
xchg
sbb
scas
sub
jl
push
aaa
ret
xchg
adc
cwtl
insl
dec
shll
jns
dec
out
sub
nop
outsb
mov
ljmp
mov
push
sub
ja
fnstsw
sbb
rcr
and
mov
inc
sub
into
mov
vmread
lret
mov
mov
mov
loop
sbb
mov
int3
inc
sti
mov
pop
hlt
dec
leave
cmp
repz
xor
cmp
scas
dec
or
sub
lahf
push
lods
and
aaa
cmp
call
loop
rcll
dec
adcb
sbb
sbbb
sub
shll
jmp
and
sub
daa
sarb
imulb
rclb
push
stos
jmp
shlb
adc
push
xchg
dec
in
jb
popf
rolb
jbe
rcrb
pop
pop
pop
and
xchg
movsb
push
subb
imull
pop
popa
dec
or
mov
sbb
jns
repnz
mov
popf
sbb
or
cmpb
sub
fwait
pop
xchg
dec
sbb
jp
mov
fmull
pop
push
ret
sbb
mov
adc
add
pop
test
jo
js
je
push
xchg
push
push
sbb
sarb
enter
leave
stos
xchg
mov
aad
mov
xorb
sbb
stos
pop
mov
in
into
sbb
xor
pop
scas
lods
test
xchg
jmp
dec
push
mov
push
lcall
iret
orb
in
cmp
or
arpl
jmp
test
outsb
filds
popl
les
and
jb
jg
aam
dec
test
adc
iret
xorl
cmp
xor
sub
enter
jmp
das
icebp
jbe
adcb
xor
nop
cmpsl
xor
fs
sahf
loopne
and
pop
push
js
mov
pop
mov
mov
add
adc
aad
inc
ljmp
in
bound
push
add
dec
repnz
push
sbb
mov
imul
cwtl
movsl
inc
inc
bound
push
or
lods
test
nop
es
xor
add
jle
sbb
sub
ret
pop
iret
hlt
fwait
cmpsl
lahf
shr
xor
stc
inc
fcmove
ficoms
daa
loopne
ret
lret
nop
cmp
dec
into
clc
xor
lret
iret
xchg
sbbl
movsl
sahf
mov
xchg
lret
repnz
lods
mov
pop
aam
pop
xor
pop
frstor
dec
dec
adc
addr16
movsb
dec
dec
push
out
sbbb
ficomps
imul
mov
fbstp
fildl
js
xchg
sahf
in
mov
orl
in
xor
mov
xor
inc
jp
pop
test
pop
scas
mov
call
and
push
xor
shl
sarl
daa
sub
xchg
push
push
movsb
adc
lods
lock
mov
jnp
jle
cli
addr16
andb
sbb
adc
push
cmp
call
daa
lods
and
cmpsl
push
push
cmp
jo
shl
daa
rorb
dec
cwtl
and
pop
mov
cld
dec
gs
push
pop
sti
inc
jge
js
js
xchg
lods
scas
aas
push
bound
sub
and
add
rcrl
fsubl
nopl
and
xchg
dec
iret
loope
ss
jb
mov
pusha
or
push
inc
xchg
mov
cmpl
inc
cld
dec
shlb
xchg
das
cmc
xchg
sbb
sub
imul
notl
mov
and
xor
mov
or
jne
movsb
mov
add
insl
cmpsl
jae
cltd
pop
push
jnp
clc
mov
shl
aam
mull
bound
icebp
roll
iret
ljmp
loopne
int3
lret
shlb
int3
scas
xlat
adc
inc
inc
push
push
sarb
dec
sub
adcb
push
inc
lods
inc
xchg
jnp
pop
pop
shll
mov
pop
stc
mov
xor
cmp
jne
ret
mov
dec
push
cmp
popf
push
sti
popa
repz
rcl
les
ret
adc
je
fsts
cmp
cmp
iret
pushf
pop
xor
adc
scas
mov
inc
ds
jle
mov
jecxz
inc
shl
mov
test
push
hlt
rolb
out
popa
or
xchg
pushf
sbb
push
sahf
hlt
adc
fsts
sbb
rorb
cmpsl
adc
cmc
insl
test
into
mov
movsb
or
inc
sahf
in
dec
fnstenv
add
sub
inc
aad
jae
xchg
push
inc
hlt
inc
jne
popl
jg
out
push
mov
jb
call
call
xchg
not
inc
mov
outsb
push
sub
mov
pop
lea
sbb
add
add
sbb
call
mov
scas
sbb
xchg
inc
or
loop
xchg
or
mov
jb
andb
dec
xchg
icebp
mov
std
movsb
fdiv
daa
cmp
push
mov
and
inc
hlt
out
pop
adc
test
imul
sbb
adc
bound
imul
call
pop
popa
mov
daa
cmp
in
pop
mov
inc
repnz
nop
icebp
lock
clc
mov
push
and
dec
cs
fimull
dec
test
cmp
inc
jg
jne
xchg
push
es
or
imul
repz
outsb
insb
xor
into
adc
mov
add
cmc
rorl
pop
fcoml
mov
js,pn
add
ljmp
bound
mov
lahf
mov
adc
pop
test
adc
lods
inc
aad
jne
stos
lret
push
sarb
iret
mov
arpl
imul
and
xor
and
mov
cld
fistpl
cmpsb
or
sub
pop
out
pop
dec
inc
jnp
cmp
sbbb
sahf
jl
and
xor
shlb
dec
adc
mov
cmp
test
out
lods
mov
ljmp
loop
movq
cmp
and
inc
pop
mov
stc
cs
repnz
adc
push
push
out
out
daa
sahf
xchg
sub
mov
push
pop
push
adc
rorl
cmp
arpl
cmp
hlt
outsl
sbb
in
ret
jnp
cld
fisubrl
mov
cld
lahf
into
sbb
sbb
cmpb
adc
sbb
loopne
bound
leave
testl
ja
aas
xchg
sbb
rcr
test
mov
xorl
pop
movsb
lahf
repz
aam
scas
cmpsl
dec
aad
mov
pop
dec
movsb
andl
cmpl
gs
lods
loop
iret
mov
sahf
push
inc
add
dec
outsb
sbb
leave
jl
imul
lods
cmpsl
mov
dec
adc
mov
in
je
pushf
ret
mov
dec
pusha
adc
lods
xchg
mov
fbld
xchg
lret
sbb
in
or
in
fmuls
xor
movups
mov
mov
add
jmp
adcl
mov
push
xor
dec
out
lret
cmp
loop
mov
and
mov
lods
sbb
lods
cltd
call
xchg
mov
push
xor
xlat
cs
daa
inc
data16
shl
xor
mov
cmp
daa
pusha
sbb
gs
xor
xor
sub
pop
jl
jg
adc
in
pop
js
mov
sbb
out
or
in
jae
xor
mov
pushf
jg
jnp
pusha
push
in
sbb
mov
sbb
loopne
daa
aas
je
out
jle
ja
subb
xor
sub
popf
push
pop
cmp
idivb
fwait
inc
xchg
sbb
jecxz
aad
and
movsb
push
aaa
into
test
iret
sbb
lds
loopne
out
mov
jnp
pop
aas
jle
stos
fbld
xchg
enter
mov
je
lock
cmp
mov
or
sbb
pop
lcall
push
pop
aam
mov
push
outsl
sub
shlb
pushf
movsb
mov
mov
adcb
cmp
rolb
xchg
mov
shll
dec
sub
clc
xor
xchg
cmp
sbb
push
sbb
jbe
call
mov
mov
out
xchg
shl
jmp
push
lods
pop
inc
call
pop
jo
inc
pop
in
push
pop
xor
mov
cli
lahf
inc
rsqrtps
negl
jle
sbb
mov
and
lret
push
mov
adc
mov
sbb
cmpsl
pop
sub
ljmp
add
imul
jl
dec
jb
ja
fsubs
xchg
imul
out
push
mov
in
out
rcr
lods
push
dec
add
psadbw
and
jnp
test
cld
adc
pop
adc
rorb
fiaddl
in
in
mov
iret
enter
add
push
cmc
fsubrs
xchg
lods
adc
sub
enter
push
nop
mov
pop
adc
pop
ljmp
pusha
mov
cld
sub
jmp
in
lods
mov
scas
test
adcl
imul
sbb
nop
pop
adc
fsubp
cmpsl
push
add
call
stos
repnz
sarl
cmp
mov
jge
xor
roll
imul
insb
pop
loopne
mov
loope
adc
fists
frstor
add
mov
jg
push
pop
jmp
mov
loop
mov
scas
xchg
insb
fs
fsubs
jle
mov
sub
fwait
sub
xor
inc
cmpsl
dec
ja
pushl
jecxz
cwtl
xor
fsubrl
in
repz
add
lcall
in
scas
aaa
and
leave
or
mov
mov
scas
xchg
daa
pop
cmovle
jmp
and
hlt
jnp
ds
pushf
xor
cltd
jne
aad
shl
lret
in
es
sub
mov
mov
and
cld
add
shll
sbb
push
dec
enter
add
dec
pop
or
dec
push
inc
jg
fwait
push
push
xor
pop
mov
jmp
adc
xor
gs
ss
clc
repz
adc
jno
xchg
je
push
dec
xchg
adc
out
divl
ret
push
out
dec
push
popa
int
fsubrp
mov
loop
inc
and
mov
xchg
xchg
adc
js
inc
jl
dec
xlat
je
xor
adc
cmp
mov
cs
sub
and
rorb
and
inc
mov
inc
pop
adc
jbe
movsb
mov
clc
xchg
xor
rolb
adc
loope
loopne
je
jmp
movsb
setg
test
movsb
add
sbb
jb
add
pop
pop
add
test
lods
adc
out
mov
lahf
mov
and
mov
scas
aad
push
fadd
das
outsl
shr
sti
ret
and
scas
fnsave
rclb
out
je
cmpsb
es
push
mov
ljmp
ficompl
aas
dec
lahf
fdivr
jge
mov
enter
negb
mov
lock
pop
add
out
pop
cltd
js
inc
xchg
scas
mov
shl
cmp
push
in
and
pop
add
mov
push
jle
fcomip
push
jns
inc
loop
lock
movsb
jbe
xchg
lods
pop
push
cmp
jne
sbb
cmpsb
sub
xor
mov
xor
xchg
jns
add
mov
data16
add
inc
or
xor
or
mov
dec
pop
mov
negb
adc
insb
mov
or
xor
sub
pop
mull
cltd
dec
cmp
pop
int3
jg
aad
adc
mov
in
pop
arpl
mov
lods
sbb
xor
or
outsl
aam
xor
mov
dec
xor
call
pop
out
mov
lods
maskmovq
divl
in
shlb
into
in
lret
mov
xchg
test
lods
lret
push
fstl
xchg
dec
adcl
jmp
cmp
loopne
aad
jl
cmp
cmp
sbbb
xor
inc
ljmp
cwtl
xchg
pusha
pop
pop
sbb
scas
aaa
mov
ss
bound
add
bound
movsl
push
xor
test
mov
fnstenv
movsb
pavgb
ret
mov
pminsw
aas
das
in
and
insl
lods
lret
lods
xchg
dec
arpl
ljmp
push
mov
inc
std
ret
sub
sarl
bound
sbb
fisttpl
out
sbbb
pop
jg
mov
push
sub
cli
adc
mov
icebp
das
lock
add
insl
jge
sahf
and
mov
mov
sub
sbb
aaa
dec
pop
lods
jnp
in
shl
inc
sbb
aaa
nop
mov
fdiv
cmp
adc
jmp
je
shlb
mov
and
sbb
frstor
lods
or
mov
aaa
pop
xchg
adc
fcmovb
cmpsb
pop
xchg
int
mov
and
cmc
sub
jb
and
xor
das
dec
ds
pushf
bswap
sub
push
xor
inc
hlt
dec
xor
lret
mov
dec
sub
rorb
jl
movsb
adc
cmp
iret
out
daa
lea
adc
pop
inc
sbb
push
mov
cmp
adc
add
call
sub
push
pop
aad
inc
mov
sub
add
aaa
or
loopne
popf
lret
inc
lods
lea
popa
or
in
mov
mov
pop
or
mov
test
addr16
sbb
xor
aam
add
std
mov
jno
mov
inc
or
nop
jo
clc
fstpl
les
lods
pop
negb
push
sub
inc
lods
dec
in
in
adc
arpl
inc
lods
mov
add
mov
lret
icebp
sbb
sahf
imul
out
xor
insl
add
mov
xor
jecxz
dec
fistps
aam
into
add
cli
dec
pop
sub
sbb
sbb
nop
dec
jns
mov
push
fstpl
sbbb
mov
lret
push
jge
push
lods
lock
out
outsl
cmpsb
lods
popa
mov
divb
clc
inc
xchg
aam
push
pop
scas
inc
fstp
fldt
lods
sbb
or
sbb
or
pop
jge
mov
cld
out
das
cmc
jne
out
pusha
lods
lock
fisttpll
es
sbb
inc
fdivs
push
push
lock
insl
add
adc
sub
divl
cs
mov
xchg
xor
adc
sub
out
jp
mov
mov
aas
xor
jo
mov
sbb
call
jno
and
jnp
scas
fidivrl
subb
aaa
mov
xchg
sbb
rclb
ud1
das
movsl
xor
mov
cmp
pop
mov
sbb
ss
inc
sub
push
jbe
imul
insl
sbb
jge
sub
nop
jmp
mov
mov
pop
shlb
cmp
and
mov
pop
jno
ss
mov
lea
adc
fsubrl
stos
stos
outsb
jno
fmuls
cmpsl
shl
xchg
and
xchg
inc
and
mov
jo
jnp
adc
aaa
insl
fadds
iret
sbb
lret
adc
cmpsl
call
push
inc
sbb
arpl
icebp
mull
sub
and
mov
and
mov
fbstp
cmpsb
loop
decl
insb
aas
add
jle
stos
lock
jo
pop
mov
in
sbb
xor
lret
fisttpl
add
aad
cmp
js
add
pop
insl
ror
mov
push
sub
dec
push
dec
and
jle
or
repnz
mov
sti
arpl
aad
xor
pop
ja
mov
movsb
and
add
fdivl
mov
mov
xchg
mov
push
popf
pop
lds
sub
aaa
out
sub
adc
in
movsl
add
fsubrs
fadd
and
inc
cmp
shl
jmp
ret
mov
adc
mov
lea
jmp
loopne
push
dec
sti
jmp
stos
fstpl
adc
mov
and
push
ss
lock
jmp
rclb
icebp
sub
imul
mov
sbb
mov
xchg
dec
jnp
hlt
jecxz
jle
subl
and
or
pop
adc
sub
jae
push
xor
xor
aas
xor
adc
jo
loop
mov
mov
in
or
or
enter
iret
push
adc
and
pop
call
mov
and
dec
pop
add
dec
xor
dec
cmp
repz
lods
mov
xor
cmpb
add
ss
mov
or
sbb
scas
push
mov
mov
xlat
imul
xor
scas
shrl
imul
mov
pop
nop
shlb
imul
lock
mov
outsl
daa
rorb
rorb
or
dec
or
andb
jnp
add
sbb
psubq
jnp
adc
ja
mov
xchg
dec
in
imulb
movsl
push
inc
je
inc
lods
mov
loopne
push
sub
inc
shlb
int
mov
int3
lcallw
mov
iret
mov
nop
nop
jle
xchg
enter
mov
mov
gs
mov
add
in
jns
pusha
movsb
xor
jg
sti
jnp
jae
call
ds
rep
and
and
int3
imul
cwtl
xor
and
hlt
fdivrs
aam
sbb
push
aas
fisubrl
inc
xor
test
adc
push
adc
cmp
iret
fimull
test
cmpsb
loop
cwtl
pop
imul
or
clc
ljmp
fsubl
les
cmp
and
out
imul
sbb
xlat
dec
xlat
cmp
das
push
sbb
pop
cmc
pushf
xchg
xor
mov
cmp
cmc
nop
sarl
mov
insb
mov
xchg
les
stos
sbb
adc
subb
bound
xor
mov
icebp
and
ret
outsl
bnd
data16
push
jge
cmp
cmp
cli
mov
into
and
sub
ss
sub
sbb
and
imul
mov
dec
movsb
mov
push
adc
pop
xor
mov
add
aaa
pop
jmp
sub
out
xor
mov
adc
adc
loope
leave
inc
rclb
aad
pusha
dec
aas
xchg
popa
lods
fisubs
movsl
imul
je
into
xorl
out
dec
jp
aam
mov
ss
push
stos
leave
mov
mov
xor
popa
clc
lret
testl
test
movb
mov
xchg
and
dec
cmp
in
pop
cmp
sbb
or
dec
adc
insb
mov
das
push
arpl
movsl
xor
mov
in
add
scas
int3
xor
inc
jns
pop
push
and
mov
js,pn
ret
std
int
fwait
cmp
adc
les
lea
cld
clc
js
movsl
mov
xor
test
push
les
int3
sub
add
mov
mov
dec
and
lea
xor
sub
lods
jo
adc
outsb
sub
ret
arpl
aad
jns
xchg
adc
jnp
add
pop
jg
mov
fucomip
fisubrs
jl
push
fistps
std
daa
fimuls
sti
clc
stos
or
pop
and
mov
pop
shlb
mov
mov
movsb
and
sbbb
jp,pt
adc
pop
xor
mov
cmp
outsl
out
xor
jmp
xor
jbe
cs
dec
xchg
mov
rorb
gs
loop
movsb
mov
adc
push
jle
push
sbb
adc
adc
lods
and
lret
jbe
lcall
lcall
fstl
imul
rcrl
cmp
lcall
mov
pop
dec
mov
fistps
jmp
xchg
pop
test
mov
push
pop
daa
rcrb
or
pop
cmp
shl
jnp
imul
or
mov
lret
nop
cmp
push
adc
dec
clc
xor
cmp
imul
adc
popf
in
sub
gs
in
jno
sahf
xchg
imul
lock
out
mov
cmp
roll
pop
test
in
stc
xchg
pusha
call
lret
mov
add
sbb
icebp
xchg
imul
sti
pop
aam
mov
inc
loope
scas
ss
mov
jge
or
mov
mov
das
cli
adc
jbe
loopne
sbb
push
push
mov
inc
sarl
insb
ficoml
fsubs
and
int
sbb
xor
or
adc
stos
push
adc
cld
mov
lock
loope
mov
jecxz
fs
aam
fwait
in
divb
fiaddl
jle
or
cs
jae
adc
push
call
sti
daa
sub
pop
mov
xchg
or
iret
pop
cmp
insl
addr16
lahf
sysret
sub
xchg
mov
repnz
lods
mov
fwait
dec
sti
sub
sub
nop
shlb
data16
jns
add
out
rcll
cmp
xchg
xchg
iret
sbb
jl
lock
bsf
pop
out
pusha
jle
mov
rcl
pop
mov
xlat
pusha
movl
dec
jle
int3
leave
pop
lea
adc
sbb
xor
mov
adc
cs
mov
inc
in
lods
das
add
lahf
cmp
in
mov
sbb
repz
jecxz
dec
xor
pop
push
out
mov
bound
bsr
or
cltd
sbb
in
or
test
test
mov
ss
les
lret
jnp
and
test
add
add
lahf
mov
sbb
adc
les
pop
out
subb
inc
and
cmp
sub
leave
pop
movsb
ficoms
jmp
push
jp
aam
pop
mov
add
xchg
data16
or
xor
ret
pop
and
inc
dec
mov
out
jl
pushf
lods
cmpsb
dec
call
lods
adc
cmp
dec
aam
mov
loope
outsb
jmp
mov
in
mov
xchg
out
int
mov
int3
jae
addr16
xchg
imul
mov
inc
and
movsb
loop
adc
aaa
sbb
push
sbb
sbb
loopne
sub
ret
int
xchg
shr
adc
cmp
mov
idivl
pop
out
test
push
repz
leave
ret
lret
push
ret
lahf
xor
fnstsw
bound
sub
test
aaa
mov
dec
popf
jnp
sahf
jmp
jae
and
cmp
jae
mov
push
sub
pop
mov
mov
aaa
call
fistps
lahf
repz
sbb
and
sbb
or
cmp
xor
rclb
jbe
xor
cld
or
pop
mov
pop
aam
ret
lret
sub
dec
xchg
bnd
jl
mov
pushf
mov
xchg
mov
lret
das
lahf
sbb
adc
pop
rcrb
pop
int
push
or
jle
push
shlb
loope
sti
mov
mov
cwtl
pop
test
push
xor
cmp
and
mov
sub
scas
dec
jmp
xchg
clc
icebp
xchg
shrb
lods
push
shlb
ret
mov
pop
repz
fwait
cmpsl
xor
push
iret
and
adc
xchg
cld
popa
mov
xor
gs
jle
out
das
fcoms
daa
xor
push
pop
xlat
jg
push
dec
loopne
cmp
lods
push
lahf
mov
adc
cmp
adc
xchg
xor
adc
loop
out
jae
data16
cmp
push
push
ja
ja
cmovnp
pop
nop
andl
and
mov
pop
dec
xor
xor
inc
lds
xorb
xor
test
xor
lret
test
xor
outsb
pop
scas
sbb
or
sub
shll
cmp
movnti
ret
xor
daa
push
ljmp
adc
lods
add
add
fcmove
mov
pop
xchg
xorb
xchg
repnz
shll
shlb
test
or
mov
xchg
lods
lock
mov
cwtl
sarl
adc
fisubs
cmpsb
adcb
xchg
inc
cmpb
jmp
into
sarb
lret
and
push
imull
aad
insb
push
push
cs
insl
adc
sbb
jecxz
mov
ds
add
pushf
cmp
jb
js
adc
iret
cmp
cmp
lods
pop
clc
mov
fildll
push
sbb
dec
adc
lahf
into
jmp
sarb
inc
aas
xor
shr
ret
loopne
loop
out
nop
or
in
aad
and
mov
fst
into
sub
int3
adcb
jmp
or
jb
movl
cltd
jno
jns
and
or
and
sbb
inc
pop
mov
dec
or
out
inc
adc
jecxz
jmp
adc
mov
cmp
jl
and
lods
repz
enter
jo
call
nop
lods
push
sub
pop
lods
adc
mov
sbb
inc
xchg
pop
xchg
mov
fildll
push
sub
aam
xor
sub
clc
sbb
imull
xchg
mov
arpl
jae
pop
in
les
in
into
xlat
mov
out
inc
ret
dec
enter
jl
jmp
fcoms
test
inc
cmp
out
loopne
jae
jecxz
jnp
iret
sbb
lea
enter
mov
lock
mov
cmp
dec
push
cmpsl
xor
cmc
fs
dec
pop
in
in
dec
in
xchg
hlt
cmp
loope
xchg
loope
cmc
icebp
data16
out
scas
mov
cli
dec
hlt
cld
fisttpl
inc
xor
xchg
add
int3
fsubl
mov
repz
dec
mov
adc
jnp
cmpsl
sbb
lret
and
lret
clc
outsl
enter
adc
and
pusha
bswap
cmp
or
sbb
outsb
aam
jae
mov
or
lods
inc
test
in
mov
and
jmp
dec
push
into
xchg
jle
xchg
mov
xor
jmp
push
xchg
pop
lods
mov
daa
sbb
fs
push
loop
mov
into
inc
mov
bswap
sub
popf
or
pop
pushf
and
loopne
inc
cs
in
mov
sub
and
arpl
push
xorl
sub
jae
sbb
mov
pushf
pop
inc
mov
add
dec
ucomiss
and
add
sbb
ljmp
sbb
pop
inc
clc
jo
adc
xchg
push
xor
or
mov
in
fs
lods
xor
es
xchg
adc
js
or
fimull
xchg
dec
call
fwait
and
popf
and
popa
sti
nop
sub
push
lods
mov
push
inc
mov
jo
fwait
pusha
cmp
mov
sbbb
mov
jp
xchg
std
sub
mov
push
xor
lahf
mov
mov
in
insl
lods
cmp
int
xchg
pop
add
cmp
aaa
inc
dec
cmpsl
rclb
lods
ds
adc
call
sbb
das
pop
sub
shrl
and
in
lods
shl
xlat
cmp
lods
mov
addr16
push
ds
shl
es
jae
inc
or
jns
mov
movsl
push
int
lock
or
cs
mov
adc
dec
das
fistps
add
mov
mov
xor
dec
iret
mov
aas
in
shl
fwait
lods
fcmovnb
loop
out
orb
push
adc
xor
shrl
xchg
adc
mov
dec
xor
pop
cwtl
rol
iret
pop
lods
add
das
xchg
popf
jo
mov
scas
jmp
and
fidivrl
mov
loopne
or
sub
ljmp
jns
inc
or
daa
xor
mov
outsl
test
pop
loopne
imul
std
mov
test
dec
xchg
or
push
div
xchg
adc
push
je
pop
test
les
sub
xor
enter
adc
out
mov
xor
mov
sbb
dec
sub
adc
adc
jl
bound
sti
lea
in
cmp
xlat
clc
fcos
push
pop
mov
shll
movl
mov
xor
mov
push
mov
inc
js
xor
int
or
ss
pop
xor
into
test
scas
cmp
xchg
xor
bound
cs
pop
imul
dec
jge
dec
in
jg
shll
daa
adc
mov
and
int
fwait
daa
adc
pusha
ud1
icebp
test
loopne
daa
pop
stc
push
or
lcall
mov
loopne
jge
loope
cmp
or
sbb
notl
std
push
mov
push
and
lds
mov
out
sub
add
or
adc
popa
cmp
hlt
push
xor
pop
mov
xchg
jmp
inc
sub
inc
sbb
jecxz
mov
enter
push
xchg
and
push
or
ds
sti
aas
repz
or
add
insb
rcll
xor
pop
enter
and
std
pop
fidivrl
rcrl
ss
popa
add
add
xlat
adc
pop
xchg
fldt
mov
rcrb
out
je
fmull
and
cmp
push
in
lods
sahf
xor
jnp
lock
inc
push
jbe
cmp
and
mov
push
call
sbb
out
pop
dec
pop
xor
xor
lcall
je
or
xor
push
cld
and
adc
xor
sbb
addb
cmp
cwtl
rolb
sub
movsb
fdivrl
das
or
or
or
mov
and
lea
cwtl
adc
arpl
jl
dec
mov
jne
mov
dec
xchg
shl
stc
xchg
adc
cmp
jne
stos
insl
xor
scas
leave
arpl
xchg
imull
gs
fistl
popa
jp
adc
cmp
imul
push
inc
mov
and
in
cmp
iret
sarb
cmp
lcall
adc
lods
iret
cmpsb
push
lcall
cltd
push
jb
pop
add
add
lock
out
mov
xor
sbb
xchg
xchg
das
pop
cmpsl
jg
call
arpl
pop
or
pop
jge
bound
dec
int
adc
mov
xor
push
arpl
das
test
adc
xchg
jmp
lods
add
arpl
jg
mov
fwait
int
lock
jo
aaa
call
pop
dec
lcall
ror
das
lea
adc
faddl
xor
add
pusha
inc
loop
test
jne
xchg
mov
or
sarb
popf
and
jno
xor
roll
lock
xlat
pop
push
adc
jno
push
adc
mov
jmp
mov
jle
pop
adc
ret
scas
mov
out
inc
adc
lods
icebp
xchg
mov
mov
mov
and
and
popa
stos
add
rclb
pusha
cld
daa
jecxz
jbe
xchg
das
movsl
aam
dec
jle
pop
add
lods
cmpsl
mov
push
lret
xlat
mov
adc
lahf
mov
xchg
mov
into
push
sbb
aad
jae
inc
xchg
pop
mov
mov
hlt
xchg
iret
jb
xor
pop
adc
shrb
outsb
test
aas
scas
adc
ror
mov
dec
add
and
pushl
jbe
andb
aad
sub
adc
or
sub
sub
push
jge
pop
push
jnp
cltd
or
mov
dec
mov
adc
and
add
sti
imul
sti
mov
hlt
jb
call
xor
movups
xor
adc
loopne,pt
and
xchg
sahf
pop
movsb
add
mov
xor
hlt
out
jecxz
mov
jb
imul
lret
dec
push
in
or
cltd
mov
mov
js
out
hlt
add
cmp
mov
jae
aaa
push
sbb
push
cwtl
and
sub
cs
mov
rcrb
aaa
xchg
popa
es
jl
pop
mov
add
ss
adc
int3
add
adc
dec
push
dec
push
aas
jge
jns
sbb
pop
cmp
aaa
or
movsl
mov
mov
aad
insb
push
sbb
xor
adc
in
ss
cmp
test
shlb
enter
mov
call
scas
out
pop
or
outsb
repnz
loop
fiaddl
mov
cmpl
mov
cmpb
xor
mov
adc
xor
cmp
cmpps
cld
arpl
fs
stos
xor
fstl
fnstsw
inc
lods
movsb
sbb
ds
xor
and
mov
ror
iret
jo
ljmp
push
push
fisubrs
xchg
mov
add
sbb
fnsave
fidivl
and
int3
pop
mov
std
mov
inc
jae
aaa
pop
inc
xor
rorb
and
lea
and
icebp
icebp
and
lods
das
movsb
push
popa
repz
jo
sbb
test
jl
movsl
inc
icebp
aaa
jne
xor
cli
sbb
ja
testb
nop
das
std
and
cmp
fdivl
mov
sbb
push
sahf
les
pop
adc
addb
add
dec
mov
mov
mov
test
jo
mov
cs
movsl
pushl
fistps
jns
xor
xor
addr16
adc
push
push
cs
pop
push
adc
sub
loopne
std
addb
fmuls
push
jnp
cmp
push
mov
insb
and
call
mov
movsb
mov
xchg
inc
in
popa
and
scas
clc
cmpsl
jl
dec
dec
sub
test
lcall
fdivrs
lcall
addl
mov
shlb
push
jp
mov
push
or
cs
jmp
add
outsl
push
les
ds
push
xor
js
pusha
lahf
or
hlt
sbb
call
jb
jmp
les
addr16
orb
mov
jmp
outsb
lods
clc
sbbl
cmc
mov
jg
js
inc
dec
stos
in
lcall
pop
idiv
xchg
sbb
in
rorb
std
rorb
lret
push
stos
dec
int3
loop
lahf
loopne
push
outsl
hlt
adc
pop
subl
int
lds
cmp
insb
xor
adc
cli
in
push
sbb
pop
hlt
addr16
imul
mov
mov
dec
sub
fists
cmp
adc
cmpsl
lret
nop
cmp
cmpsl
adc
roll
loop
ficoms
imul
cs
fwait
iret
repnz
ret
iret
xchg
adc
fistps
cmp
arpl
dec
mov
cwtl
dec
lahf
loope
dec
pop
iret
add
pop
xor
iret
outsl
fildl
rcrb
mov
xor
cmpsb
ds
rcrb
mov
or
jo
push
push
mov
push
leave
call
mov
jmp
ss
out
cmpsb
into
cmp
rcr
sub
jle
dec
insb
addb
xchg
cmpb
outsl
pop
xchg
out
jo
movsb
jnp
in
addr16
pop
cmp
stos
xor
xor
lcall
xor
xor
xchg
out
aam
in
mov
mov
lods
fdivl
xor
dec
sbb
lea
std
imul
adc
push
adc
out
test
es
mov
notb
and
out
loopne
push
jno
sahf
cs
jge
stc
cs
mov
mov
lods
sub
iret
xor
outsl
push
iret
jns
and
jg
pop
dec
pop
cmp
sahf
xchg
ss
dec
pop
in
popa
out
int3
in
adc
in
mov
ds
xor
push
sbb
xchg
xchg
iret
aam
shl
cmc
in
and
fistps
enter
shrb
mov
lcall
nop
and
std
jne
push
aas
mov
aaa
pop
jo
movsb
sarl
fucom
sbb
jne
push
aam
xchg
filds
movsb
xchg
fists
jo
call
adc
mov
mov
jae
repz
jecxz
mov
mov
push
xorl
mov
arpl
cmc
dec
clc
fstpt
sbbb
mov
insl
jg
mov
xor
push
icebp
cmp
ds
sahf
jo
xchg
xchg
sub
push
xor
cmp
push
pop
out
pop
sub
fldt
mov
adcb
ljmp
adc
mov
xlat
iret
mov
pop
cmp
sbb
jb
adc
push
push
xchg
movsl
mov
lods
add
adc
pop
mov
int
sarl
jae
and
test
pop
xlat
add
int
mov
test
push
hlt
jmp
xlat
insb
jle
movsb
dec
mov
sahf
pop
aam
sub
jno
leave
lods
push
stos
rclb
dec
clc
mov
add
lea
push
fsubrs
sub
das
cmp
pusha
sub
mov
int3
in
clc
mov
adc
xlat
cmp
mov
mov
inc
mov
nop
lea
and
cmp
and
jo
inc
lahf
popf
pop
pop
dec
sbb
add
aad
cli
jno
push
cmpsb
call
or
cmp
ss
scas
adc
and
sbb
jne
push
inc
or
je
xchg
cld
ss
test
push
push
lods
dec
xorl
js
popa
pusha
inc
mov
rcrb
mov
or
adc
and
and
add
cmp
push
pop
mov
insl
pop
xor
ja
data16
sub
outsb
bound
lock
pop
mov
sbb
fcmovne
and
push
push
or
dec
push
icebp
dec
adc
cmp
lods
adcb
inc
lods
cmp
paddq
jp
out
inc
xorb
adc
pop
adc
les
test
das
adc
cmp
lret
mov
inc
add
outsl
jae
pop
or
out
jmp
std
nop
add
adc
fmulp
ja
ljmp
aad
xchg
mov
mov
es
sub
xor
adc
push
dec
adc
int3
dec
sub
insl
mov
ja
mov
sbb
adc
outsb
aam
adc
je
push
cld
xor
call
lret
adc
cmp
mov
dec
ljmp
sub
xor
push
or
pop
fs
shll
sub
sub
pop
in
push
adc
add
dec
sbb
scas
mov
aas
mov
add
pop
cmpl
les
call
leave
sbb
enter
cmp
lods
lods
out
dec
mov
lods
adc
push
loop,pn
sub
cs
cmp
test
xor
pop
fdiv
call
mov
popf
pop
sub
data16
movsl
pop
lock
cmp
pushf
fistpl
shrl
or
mov
ss
sbb
sub
into
jp
mov
out
das
es
mov
shr
and
clc
stos
call
pop
sub
push
jmp
aad
jle
mov
adc
test
scas
adc
jno
add
fiaddl
sbb
scas
push
cmp
mov
lods
mov
ss
aaa
pop
add
clc
clc
pop
pop
mov
xor
jl
mov
or
aaa
xor
add
sbb
push
push
push
pop
leave
cmp
and
aam
lods
aas
ja
hlt
pop
xor
mov
adc
scas
cmpsl
pushf
ret
mov
shlb
xor
or
xchg
xor
push
dec
clc
jp
push
pop
bound
mov
call
mov
fcoml
iret
xchg
lret
mov
fcom
and
jbe
loopne
out
mov
cmp
dec
xchg
stos
fiaddl
jecxz
mov
outsl
dec
loop
mov
cs
inc
bnd
inc
frstor
adc
flds
rcr
jb
in
sarb
dec
pop
push
into
inc
sarb
insb
adc
mov
ret
andl
out
adc
sbb
add
adc
or
adc
jne
mov
pop
add
pushf
iret
dec
loopne
subb
aaa
pop
inc
fiadds
mov
pop
jb
jl
daa
pop
fstpt
out
clc
xor
cmp
cmpsb
mov
xor
xchg
push
dec
pop
hlt
cmp
daa
mov
jbe
mov
or
cmpsb
mov
scas
sub
cmpb
and
pop
gs
dec
or
movb
loopne
push
adc
stc
inc
push
js
push
js
cld
push
arpl
ret
ret
aas
push
shlb
mov
pusha
enter
xor
sahf
pop
fisubl
repnz
cmc
pop
xchg
jge
sub
xor
popf
sub
sub
sbb
enter
adc
lret
cmpsb
maxps
sbb
cld
push
sub
adc
sub
cmp
scas
enter
jg
mov
pop
rcl
xor
sub
push
push
stc
sub
mov
lahf
xor
enter
into
fmul
sub
hlt
inc
test
sbb
lahf
xor
lret
adc
jno
popa
decb
xchg
in
sti
fists
int3
imul
out
adc
adc
aaa
outsl
loop
mov
or
xor
jecxz,pn
mov
das
out
in
mov
cmp
mov
pop
clc
mov
test
jle
roll
mov
xchg
and
push
lcall
sar
mov
outsb
pop
into
xchg
movsb
jae
loope
stos
fiadds
mov
sbb
shll
movsb
rclb
push
insl
ret
notb
xor
bound
into
incb
in
xor
and
mov
xor
mov
es
and
cmp
stc
pop
and
ret
mov
xchg
xchg
call
mov
mov
insb
imul
adc
mov
adc
jg
pop
loopne
jecxz
mov
fchs
repnz
outsl
je
push
fmull
in
add
jno
sub
test
mov
pusha
inc
mov
sbb
and
je
add
pop
pop
sbb
inc
test
pop
mov
dec
aam
es
bound
push
data16
and
ss
cmpsb
cwtl
arpl
arpl
push
in
cmp
cli
loopne
shlb
or
arpl
sub
add
cmp
pusha
cwtl
xchg
mov
adc
push
shlb
test
inc
bound
rclb
push
ss
push
mov
mov
mov
test
push
outsl
loop
pop
mov
xor
das
push
adc
call
pop
push
leave
aam
push
xor
hlt
fld
sub
aam
sub
test
pop
jno
sub
dec
xor
loopne
subps
push
das
aas
fimull
cmp
sbb
sete
push
movsl
xor
sub
aam
bnd
mov
fcoml
test
dec
cmpsl
jl
pop
aam
cmp
shlb
aam
mov
mov
lods
outsb
loop,pn
cmpsb
rcrb
adc
xor
mov
jnp
push
xor
inc
adc
adc
mov
mov
mov
xor
call
jecxz
mov
cmp
cmpsb
jg
cmp
mov
xor
negl
int
sbb
lods
cld
adcl
mov
hlt
jecxz
daa
shrb
cmp
mov
xchg
sub
push
out
ja
pop
ret
andb
rolb
out
pop
scas
mov
mov
imul
dec
jl
adc
sysret
mov
xchg
pop
fsubl
mov
jecxz
frstor
or
mov
fs
inc
xchg
xor
cmp
das
insl
dec
push
shll
call
pop
xchg
cmp
adc
int3
jp
pop
push
and
pushf
loope
shl
cs
out
xchg
divl
in
les
pop
add
ret
mov
bound
jb
mov
dec
mov
jg
pop
test
or
aad
pop
je
jbe
addb
insl
cmpl
sbb
adc
ss
fimull
ret
int3
jl
jne
andnps
jae
xor
incb
into
jbe
sbb
and
in
sub
cs
xchg
repz
xor
into
push
push
bnd
xor
sbb
add
addr16
stc
iret
sbb
icebp
push
out
notb
mov
inc
adc
inc
dec
out
es
mov
cli
sub
sahf
inc
rol
and
push
lock
adc
lds
sub
add
shll
dec
mov
out
insl
and
inc
lret
scas
mov
push
loope
aam
sub
pusha
add
rcr
enter
adc
nop
rcrb
inc
xor
cld
cwtl
push
push
xchg
dec
pop
inc
ror
bound
xor
arpl
iret
repz
lock
es
sub
or
push
into
ja
and
jns
xor
test
fisttpl
and
and
into
inc
sbb
repnz
insb
or
xor
sub
xchg
out
mov
cmp
not
xchg
pusha
fldl
add
aad
insl
xor
inc
addr16
inc
jmp
and
mov
xchg
mov
daa
mov
test
scas
fbld
xchg
xchg
mov
mov
jbe
xchg
add
adc
add
in
or
outsl
push
and
sbb
pop
push
cmp
jb
stos
out
popf
and
jmp
mov
push
mov
test
lods
das
lock
xor
mov
icebp
movsb
mov
adc
dec
mov
or
xor
fwait
ja
mov
jg
roll
jnp
dec
fwait
iret
mov
shlb
push
in
adcl
sub
insl
outsl
sbb
mov
push
dec
push
rorb
jo
ret
push
clc
je
aam
sbb
cmp
add
test
and
cld
rcrb
add
call
pop
xor
xchg
mov
xor
das
mov
sahf
add
push
inc
daa
inc
pushf
les
xor
iret
pusha
mov
aas
scas
xchg
mov
sbb
adc
xchg
sbb
and
pusha
push
out
dec
or
push
dec
dec
mov
rclb
cmp
neg
or
sub
decl
lock
pop
mov
lods
and
lcall
in
movsb
sbb
pop
jl
sbb
mov
xor
icebp
insl
mov
mov
pop
sub
add
and
or
pop
mov
and
repnz
data16
xor
cmpb
movsb
nopl
push
push
lock
pusha
fwait
adc
cmp
cmc
cmpl
lods
and
pop
ror
inc
jmp
pop
nop
pusha
test
mul
addb
nop
adc
psubq
jle
or
or
or
push
bound
pop
addr16
dec
cwtl
xchg
mov
jnp
call
stos
dec
or
jo
jne
push
andl
ret
push
ljmp
xor
fsubrs
ficoml
mov
add
rorl
setl
xchg
add
pop
pop
outsb
test
cmp
shll
test
push
leave
sub
pushl
loopne
mov
xor
mov
iret
inc
push
stos
and
filds
push
xchg
jns
loopne
sbb
movsb
push
add
subb
iret
pop
shl
je
dec
xchg
pop
inc
fcmovnu
out
mov
fcomi
mov
stc
mov
pushf
cs
dec
jl
rdpmc
adc
mov
mov
std
shll
fbld
xor
jl
or
movsl
mov
inc
loopne
inc
js
movsb
adc
iret
adc
dec
cmp
rcr
xor
adc
xor
adc
cltd
das
adc
je
jg
sbb
ret
ljmp
aam
scas
sbb
mov
xor
and
clc
cmp
inc
jmp
jne
imul
or
push
stc
call
std
outsb
das
nop
cwtl
negb
lea
int3
mov
icebp
push
dec
es
lea
adc
shr
fdiv
or
ss
inc
pushf
mov
sub
iret
test
xchg
dec
inc
add
ret
mov
jmp
adc
cmp
lea
test
sub
xor
aaa
lods
and
dec
fstpl
and
scas
sbb
inc
or
aam
jle
mov
mov
shlb
push
jle
dec
pop
ret
loopne
xorb
cwtl
sbb
jne
adc
pop
sahf
clc
mov
bound
dec
outsb
lods
jnp
push
mov
adc
jnp
dec
ret
mov
movsb
cli
les
xor
sub
iret
dec
out
sub
and
jne
mov
addr16
cmp
icebp
loope
scas
in
jbe
testl
push
cmp
jmp
mov
cmp
sbb
or
cmp
push
out
xor
decl
mov
xor
ret
in
aas
das
push
push
test
mov
xor
pop
in
mov
fldl
adc
push
lcall
xor
popf
cmpsl
mov
xlat
pushf
cmp
mov
lods
inc
scas
bound
pop
fucomi
scas
int
jne
xchg
popf
std
std
into
js
packuswb
scas
add
jmp
into
xor
xchg
mov
loopne
push
leave
adc
aas
loopne
ss
pop
push
mov
sahf
std
hlt
push
loopne
xchg
mov
mov
or
jnp
mov
fst
dec
leave
stos
rcrb
sbb
and
jmp
sbb
ret
out
mov
push
and
pavgb
cli
adc
push
outsl
nop
xor
rorb
jne
addb
mov
mov
call
mov
lock
xchg
scas
xlat
mov
into
hlt
xor
mov
add
sahf
jne
lods
shlb
xor
adc
lea
or
sub
xchg
mov
jns
dec
sub
fs
xchg
push
xchg
imul
and
pop
test
pop
loopne
pushf
jbe
sbb
push
shlb
cmpsl
or
aaa
push
lods
lods
adc
test
jo
sti
sbb
xor
test
and
cmpsl
add
xchg
lahf
gs
aas
cmp
push
jge
xchg
out
xor
aam
and
push
aam
xor
test
adc
xlat
aam
pushl
daa
jb
cmpsl
push
xor
rcll
adc
fistpl
xor
mov
xor
inc
rorb
push
insl
push
int3
hlt
les
repnz
xor
fdivl
push
call
enter
and
sbb
adc
push
aad
pop
xor
iret
idivl
shlb
adc
stos
nop
dec
push
int
cmc
popf
std
xor
mov
clc
xor
insl
xchg
aam
pop
push
xor
jge
pop
and
popl
push
mov
pop
cmpb
dec
sbb
xlat
nop
out
test
pop
xchg
scas
and
xor
rorb
test
push
enter
aaa
ds
push
scas
leave
xor
repz
popf
adc
hlt
sbb
rorb
mov
xor
xchg
out
fisubs
aas
push
push
jmp
mov
lods
inc
ficoml
out
or
icebp
out
fisubs
mull
and
add
xchg
add
adc
lods
or
das
inc
repnz
xchg
adc
xor
int
aam
mov
in
mov
sub
jae
and
and
bound
push
xor
rcl
mov
iret
jmp
mov
getsec
dec
fwait
lret
sub
and
pop
mov
xor
rep
scas
sti
ds
jb
lahf
mov
pop
shr
mov
jns
rorb
test
shrb
mov
push
cmp
rolb
sbb
cli
jnp
out
and
sub
sahf
xlat
scas
jnp
cmp
fmuls
sub
sub
das
or
or
cmp
test
fistpll
jne
inc
sbb
mov
xor
test
daa
mov
das
mov
xor
lret
adc
ja
dec
mov
orb
into
add
mov
fadd
rol
pop
cs
aas
shlb
jl
add
pop
lds
jl
push
mov
adc
bound
lods
jo
xchg
leave
aaa
inc
push
xor
dec
cld
sub
popa
dec
xchg
cmp
aam
xor
arpl
lea
jae
mov
mov
decl
stos
cmpsl
pop
and
scas
mov
inc
shrb
int3
addr16
or
mov
jno
xor
dec
rclb
jecxz
int
xor
or
loop
sub
jnp
jl
dec
movsb
inc
cmp
lods
lret
adc
lcall
daa
sbb
shlb
repnz
pop
dec
loopne
mov
pop
or
sti
bound
mov
leave
mov
cmp
sub
sbb
js
adc
mov
out
push
xor
or
xchg
mulb
loopne
push
pop
inc
sbb
add
mov
lods
addr16
jnp
cmp
sti
sbb
xorl
mov
push
jo
movsb
or
pusha
cmp
lods
jns
mov
jle
stos
mov
xchg
hlt
rcrb
and
data16
fsubl
jns
mov
inc
bnd
pop
xchg
jp
mov
psllq
xor
dec
xchg
cmp
pop
xor
sahf
add
mov
xor
das
in
jns
push
pop
subb
fcoms
cmp
scas
fdiv
dec
mov
andb
xor
test
dec
sbb
jb
xor
xor
pop
jbe
pop
xor
rorl
rcll
xor
mov
lods
lahf
movsl
mov
sti
xor
ss
mov
push
xor
ss
rdpmc
sti
xchg
stos
or
add
inc
or
popa
adc
xor
mov
push
sbb
fstpl
addr16
cwtl
xor
lock
mov
ljmp
iret
dec
inc
rcrb
fmull
mov
gs
popl
or
pop
neg
in
aas
push
idivb
aas
aaa
inc
mov
cltd
ss
cmp
jle
inc
dec
or
jmp
fcoms
dec
xchg
out
xchg
cmpsb
inc
mov
jbe
pop
aas
jae
fsubl
sahf
jmp
loop
sub
mov
xchg
inc
jne
iret
push
lods
cwtl
adc
push
xchg
sbb
sub
repz
loopne
test
push
jecxz
clc
mov
pop
mov
or
call
or
push
rorl
xor
arpl
sbb
mov
jnp
bound
aaa
ds
pop
sbb
sbb
outsb
adc
stos
sbb
jb
adc
xchg
fsubrp
or
xor
inc
pop
test
cmp
dec
push
push
jg
out
loopne
js
sub
imul
or
popa
jl
sbb
add
inc
test
mov
rclb
pop
xor
iret
jnp
clc
lods
std
cmp
repz
and
push
out
xlat
sub
xchg
cmp
pop
xchg
adc
outsb
or
fmuls
lods
cmp
pop
mov
jle
push
not
cmp
test
push
jne
sar
sti
cmp
test
insl
jp
sub
sahf
cmp
shlb
rep
hlt
inc
daa
and
into
add
pop
jge
mov
int3
mov
pop
lret
add
cli
cmp
jo
jl
push
lds
mov
push
addb
jo
and
ret
shlb
push
ds
in
xchg
sbb
jnp
xor
lahf
int3
stc
sub
or
pop
xor
addr16
sbb
in
fs
mov
pop
jmp
xorb
jge
fscale
data16
outsb
cmpsl
sub
adc
roll
sbb
fidivs
lods
cltd
movsb
into
push
xor
cmc
jecxz
push
insb
popa
cltd
cmp
testb
jmp
outsl
scas
and
repz
out
cmp
ret
hlt
ljmp
pop
mov
shll
xor
pop
call
mov
jecxz
adc
pop
addr16
push
mov
sbb
pusha
sbb
into
mov
adc
repnz
adc
sub
adc
scas
sbb
ljmp
je
mov
sahf
les
rolb
addr16
bound
jecxz
testl
loope
out
scas
rol
inc
pop
mov
lods
jb
loop
sahf
fisubl
mov
xchg
mov
stc
xor
jge
inc
aad
mov
sub
jl
sbb
mov
cltd
fsts
call
outsb
outsl
je
aam
cmp
std
and
jmp
loopne
lods
lret
jns
xchg
xor
dec
inc
and
xor
insl
or
mov
jle
and
nop
xchg
sbb
ret
fucomp
mov
jno
mov
hlt
inc
mov
or
sbb
push
adc
xchg
cmp
dec
ljmp
mov
xor
loop
hlt
pop
ss
jmp
mov
leave
add
imul
mov
mov
mov
sahf
jl
sbb
or
fwait
imul
push
pop
fstpt
and
sub
call
sub
icebp
push
and
dec
adc
and
fisubrs
dec
bound
out
pop
jns
cmp
add
movsb
pop
in
adc
add
es
sub
pop
iret
dec
lods
in
push
jl
sbb
dec
and
int3
sub
mov
cmp
mov
xchg
popf
fistl
jae
cmp
inc
pop
cmp
loopne
bound
push
xor
inc
cmp
js
and
leave
scas
jmp
or
and
push
data16
jl
xor
ret
nop
repz
je
popf
sbb
clc
int
inc
cltd
movsl
nop
lods
mov
mov
mov
jmp
loopne
fs
mov
andl
in
push
bound
out
jecxz
fdivl
pop
test
sub
fucom
cmp
mov
fidivrs
pop
add
imul
adc
mov
nop
adc
adc
insl
jbe
jb
mov
mov
roll
lfs
es
das
aam
popf
loop
jno
loopne
lods
inc
not
or
adc
adc
push
int3
push
incb
into
mov
lahf
mov
movsb
js
and
int
xchg
push
inc
sbb
addr16
shlb
sahf
dec
inc
iret
repz
sbb
ds
test
and
lcall
inc
rclb
mov
and
dec
cmp
xor
mov
jmp
dec
lods
test
aaa
mov
fwait
pop
or
xor
ret
mov
adc
clc
dec
lea
add
fdivs
daa
cmp
and
sbb
push
jae
xor
rol
ret
out
xchg
imul
inc
pop
test
dec
jle
enter
and
jge
cmpsl
shl
es
ds
xor
xchg
in
test
cmpsl
dec
jae
xor
xor
inc
cmp
jb
cmpsb
mov
rclb
and
insl
pop
cmp
push
pusha
jno
out
les
jge
pop
aam
mov
sti
add
sbb
je
cmc
jl
cmp
repnz
mov
sarl
call
test
cmpsl
int3
adc
xor
pop
jge
lret
adc
sar
shlb
std
iret
cli
cmp
decl
outsb
ficoml
insl
mov
and
cmpsl
pop
adc
xor
jnp
scas
dec
gs
repz
shlb
push
aas
aam
and
mov
and
dec
roll
push
outsl
xor
shrb
pop
rclb
xor
mov
dec
fildll
jo
xor
xchg
inc
aas
dec
test
dec
movsl
xor
rclb
dec
fcomi
jl
inc
or
mov
xor
dec
insl
aam
lcall
rclb
xor
adc
dec
cmp
xor
mov
adc
in
fcmovnb
and
scas
lcall
shll
dec
xchg
jbe
loopne
fwait
jle
aad
pop
loopne
mov
add
clc
dec
push
jmp
pop
mov
iret
shl
rcrb
xor
mov
and
inc
daa
into
sbb
and
inc
xchg
out
xchg
scas
rcr
aam
das
sub
cs
dec
es
sbb
mov
arpl
xor
shrb
sbb
out
dec
sub
mov
and
cmp
xor
in
out
or
popf
or
push
xor
xor
ds
aam
push
add
loop
fidivs
lahf
pop
pop
cmp
xor
sub
mov
loop
pop
xchg
pop
cmp
dec
pop
rcl
roll
aas
ret
jmp
rol
fisubrl
mov
xor
rolb
daa
scas
xchg
rcrb
lahf
xor
sbb
xor
ljmp
pop
lcall
pusha
and
mov
cmpsl
adcb
mov
inc
je
in
lea
add
repnz
xor
push
lea
and
into
mov
and
dec
adc
pop
call
repz
dec
cs
mov
push
pop
or
mov
rcrb
adc
sbb
fidivl
shlb
pop
sub
cmpsl
mov
jae
pusha
cmpsb
clc
sbb
push
fcmovne
push
movsb
jg
mov
jnp
push
push
mov
push
cmp
insl
jae
push
lret
xchg
lods
mov
xchg
popa
xchg
cmc
stos
jge
aad
pusha
jge
mov
aas
icebp
mov
repz
int3
jle
push
xor
outsl
mov
sub
call
mov
push
scas
cwtl
cmp
cltd
cmp
in
nop
push
sahf
enter
ss
adc
and
pop
nop
lock
jno
adc
movaps
pop
pop
dec
jl
adc
out
push
mov
outsl
pop
xor
sbb
cmpsl
or
add
loopne
loop
jae
pop
int3
inc
push
adc
xchg
adc
movsl
and
cmp
xor
aam
outsl
xor
loope
push
pop
mov
xchg
punpckldq
bound
dec
sbb
fsubrp
imul
filds
fstl
adc
out
rorb
loopne
adc
xor
test
aas
jne
cmp
mov
xchg
mov
xchg
mov
lcall
shrb
jge
shlb
test
pop
mov
jae
outsl
enter
bnd
leave
insl
xor
in
andb
fnstsw
adc
xlat
std
mov
cmp
xor
push
pop
repnz
xor
rcrb
mov
and
fcmovbe
push
repnz
out
xor
rcrb
push
and
scas
mov
cli
mov
push
dec
test
jbe
mov
repnz
xlat
xor
rcrb
dec
cmp
testl
mov
and
mov
mov
pushf
and
lods
test
sahf
cltd
mov
fistpl
cmp
movl
sub
sarb
jge
xor
mov
mov
andb
lock
loopne
xor
aad
mov
cs
pop
xchg
cld
cmp
xchg
ret
int3
sbb
xor
rcrl
mov
das
mov
jb,pn
mov
das
outsb
imul
mov
iret
insl
add
sub
loopne
fwait
shl
push
mov
xor
pop
mov
fisubrl
add
aas
out
xor
rclb
jo
sbb
cmpsl
dec
adc
xchg
das
inc
xchg
repnz
push
scas
lcall
call
or
lods
xchg
pushf
test
inc
push
scas
mov
xor
xchg
inc
push
dec
dec
sbb
dec
adc
rolb
inc
ret
and
enter
jne
cld
pop
or
movsb
adc
loopne
dec
into
push
xchg
adc
push
ljmp
mov
and
mov
pop
mov
shlb
add
pop
xchg
dec
xor
xor
pop
and
fcmovb
pop
lret
fdivl
xchg
mov
sub
dec
je
xchg
out
in
rolb
push
mov
fucomi
lods
mov
lcall
out
dec
mov
mov
push
or
jb
lahf
scas
fidivrl
pop
andl
push
dec
movsb
jecxz
mov
lahf
cld
pop
lods
xchg
lods
ror
mov
dec
test
inc
shrl
xor
pop
xchg
ucomiss
cmp
and
sbb
insb
in
enter
jae
jne
pop
push
xchg
mov
adc
andb
adc
adc
icebp
or
pop
or
ss
fdivs
mov
dec
nop
xchg
outsl
in
mov
shll
stos
jle
in
adc
jnp
nop
push
adc
dec
add
dec
pop
cld
sub
das
outsl
jnp
jb
call
js
mov
fs
cmp
xor
jns
add
and
jb
popa
push
mov
xchg
cmp
dec
inc
mov
jo
aas
adc
mov
mov
jnp
into
xchg
and
mov
adc
push
dec
xor
fdivrl
ds
mov
ret
push
push
dec
outsl
bound
dec
xchg
ret
ds
or
adc
loopne
fiaddl
mov
xor
shlb
mov
jae
xlat
pop
lahf
loopne
inc
mov
or
pop
clc
shl
xor
xor
xor
iret
jmpw
movsl
jle
inc
rclb
adcb
out
sbb
mov
lahf
hlt
inc
xor
adc
or
xor
push
mov
xor
adc
cmp
mov
jb
xor
push
mov
xor
mov
jb
cmpsl
sahf
cmpsl
adc
in
dec
lea
mov
repz
test
xor
sub
lock
xor
jae
sbb
les
ret
scas
push
in
push
in
add
sbbw
call
repz
cmpsb
sub
dec
xor
ds
or
cmp
xchg
mov
loope
jmp
add
mov
jae
adc
xor
ljmp
fisttpl
mov
xor
push
cmp
ljmp
dec
outsl
cmpsl
aam
push
cmp
mov
out
aas
leave
xor
cmovo
andps
int3
mov
fwait
pop
outsl
pop
je
mov
test
and
xor
lods
fstpl
mov
push
jae
rep
lea
add
mov
das
out
cmpsl
sbb
sub
aam
pushf
out
xchg
stos
out
data16
fisubs
mov
insl
mov
cs
repz
xor
xor
adcb
xlat
out
cmp
cmp
icebp
shll
aam
shll
xor
cmpsl
sahf
xor
je
jle
repz
cmp
push
loop
cld
repnz
mov
pop
shlb
test
loop
emms
fwait
rcrl
popa
xor
inc
seta
out
test
inc
frstor
out
adc
addl
mov
addb
inc
dec
icebp
ljmp
aad
lods
pop
xor
fsubr
std
cmpsb
scas
xorb
and
cld
jge
cltd
adc
sbb
repz
sti
ds
xchg
mov
xor
lods
push
into
sbb
es
lahf
cmp
aam
iret
push
mov
sub
mov
sbb
outsb
fs
cmp
push
jmp
scas
test
sub
in
mov
dec
pop
mov
out
sbb
ljmp
xor
popf
jns
mov
xchg
mov
shlb
jl
sub
jo
sbb
aam
les
int3
js,pt
scas
fdivrl
in
nop
sarl
and
mul
mov
das
and
lods
jmp
bound
dec
cmpsb
pop
sbb
shll
mov
lods
and
mov
loop
mov
cli
mov
jbe
fistpl
jle
pop
jbe
cmpsb
adc
movl
dec
ss
xor
ficoms
jmp
test
ds
fildl
mov
mov
jb
pop
sbb
add
ret
addl
pop
mov
inc
xlat
cli
test
ficoml
jae
call
fst
cs
testb
std
js
mov
xor
adc
mov
add
sub
inc
mov
hlt
cmp
mov
jge
and
ja
es
aam
inc
mov
fnsave
fs
mov
jle
dec
add
adc
out
mov
scas
mov
js
dec
out
or
dec
mov
adc
adc
or
mov
js
adc
scas
fcmovbe
mov
jns
insb
test
int
notb
and
notb
mov
adc
jecxz
jne
mov
jmp
jb
decb
test
fcmove
rorb
loop
jne
add
notl
mov
pop
adc
push
pop
mov
and
rcrl
mov
lock
scas
xchg
in
inc
or
hlt
or
lds
lret
roll
cmp
xor
xor
mov
mov
dec
enter
repz
insb
scas
cwtl
loopne
xor
ret
adc
fimuls
sbb
shlb
arpl
mov
ret
mov
jmp
cli
jb
jo
add
test
mov
mov
pop
mov
iret
add
mov
lock
cmpsb
add
pop
xor
rorb
pop
loopnew
adc
adc
shl
fidivrs
nop
pslld
shrb
sbb
adc
in
push
pop
sbbb
xor
arpl
mov
cwtl
iret
sbb
das
lcall
xor
push
std
inc
jo
mov
test
sahf
lods
test
loope
or
push
cmp
lods
in
pop
cs
lods
and
cmp
or
roll
lods
or
mov
dec
aad
sbb
into
adc
pop
es
xchg
je
push
sbb
in
imul
int
sbb
cltd
out
push
ss
popf
add
scas
pop
dec
pop
dec
divl
es
jmp
lods
repnz
adc
add
inc
outsb
mov
xor
and
xor
sbb
mov
cmp
ret
jl
loope
sbb
adc
insb
inc
sub
mov
imul
mov
outsb
and
mov
je
sbb
ret
ret
pop
aad
jno
das
in
xorb
imul
in
ret
shll
or
mov
mov
mov
sbb
or
adc
pop
iret
jbe
push
push
push
xchg
cmpsl
notl
stos
xor
das
adc
xchg
sub
shld
xor
xchg
ret
cmp
ud2
dec
pop
xchg
jmp
mov
aad
hlt
push
rorb
movsl
inc
and
hlt
adc
aam
test
and
fists
push
push
jle
fbstp
xchg
adc
cmp
sub
pop
push
or
lds
sar
loopne
fimuls
fidivl
xchg
xor
inc
sbb
dec
sub
daa
sub
mov
out
aam
inc
repz
jb
jne
dec
sti
repnz
mov
out
nop
push
pop
pop
xor
hlt
idivl
scas
adc
stos
std
sub
xor
ss
jb
ficoms
stos
and
lahf
test
sub
jge
push
and
sub
lret
sub
ficoms
test
scas
addb
xor
ss
sub
xor
stos
mov
ja
aam
xor
rolb
sbb
jle
push
sub
ja
mov
hlt
shll
scas
sub
push
mov
xorb
sub
hlt
inc
out
pushf
fldenv
imul
aad
scas
sub
xchg
cltd
dec
adc
icebp
in
int
ss
lret
dec
cli
sub
ss
push
repnz
mov
outsb
sarb
sub
push
adc
mov
andb
inc
cmpsl
adc
dec
cmp
cs
cmp
iret
out
out
sbb
call
push
dec
mov
mov
jge
lahf
jle
push
outsb
cmpsl
or
pop
xchg
lahf
pop
xor
pop
xchg
mov
and
push
mov
jbe
shlb
and
xchg
hlt
jmp
xor
ror
scas
outsb
loop
mov
daa
repz
cs
adc
lahf
aaa
xchg
into
lret
inc
rol
mov
outsb
add
pusha
iret
xor
xchg
movsb
popf
cmp
out
adc
mov
testl
lahf
stc
xor
test
pushf
dec
insl
inc
in
aam
or
or
sbb
dec
aad
mov
xchg
sub
pop
loope
add
outsl
repz
pop
popw
daa
fisttps
hlt
scas
test
out
or
outsl
shrl
mov
scas
dec
iret
les
out
pop
fdivrl
pop
cwtl
xor
or
and
filds
scas
mov
cs
and
sbb
lret
xor
clc
lahf
fcomp
xchg
into
rorb
pop
mov
fiaddl
lahf
dec
jne
ss
pop
mov
insl
call
dec
mov
scas
mov
out
adc
adc
pop
adc
outsl
sub
adc
adc
insb
xor
xor
or
and
or
xor
fsubrl
inc
loopne
jmp
shlb
cmp
addb
push
dec
xchg
fnsave
inc
data16
lahf
and
js
in
push
xor
dec
sahf
loopne
scas
and
mov
jno
outsb
pop
sahf
rol
push
imul
das
shlb
and
xor
ficomps
and
fistl
lcall
push
loopne
xor
mov
sub
sub
xchg
insl
les
dec
mov
lahf
and
and
and
cmc
ss
jbe
test
cmpsl
jp
cli
xor
and
bound
or
and
jmp
test
fcoms
jnp
mov
popf
add
lock
pop
rcrb
sbb
pop
inc
enter
or
jno
es
hlt
movsb
cmp
sub
pop
arpl
mov
or
int3
xor
les
jmp
out
aam
or
mov
repnz
rclb
ficoms
xlat
ja
adc
pop
mov
mov
popa
loop
sbb
aam
jne
cs
jg
jbe
xor
scas
pop
or
repz
mov
scas
sbb
cltd
sbb
mov
pop
aad
adc
loope
pop
xchg
in
push
out
in
movups
mov
shlb
lods
mov
sarb
clc
inc
xchg
sbb
loopne
cli
out
adc
lcall
fs
push
enter
xchg
xchg
fcoms
mov
arpl
clc
imul
aas
shll
ja
cmp
xor
bound
daa
lahf
inc
cmp
xchg
dec
dec
adc
sbbb
fwait
xor
aas
cmp
loop
mov
testl
inc
xchg
mov
lods
add
mov
or
mull
outsb
and
pop
repz
lret
inc
mov
mov
fistps
jge
cmp
sbb
adc
mov
test
int3
and
mov
out
fldcw
push
sbb
adc
pushf
lds
add
jl
aam
adc
jae
push
data16
mov
and
lds
push
xorb
sbb
mov
loope
sbb
sub
insl
pop
in
into
push
jge
mov
mov
cmp
mov
adc
cld
ret
mov
mov
jae
aam
dec
xchg
pop
pushf
cmp
mov
fs
int
adc
int3
fs
dec
sub
sbb
jmp
sub
in
ret
inc
jnp
pop
fst
adc
das
adc
ljmp
cmp
adc
rorl
ljmp
int3
sub
inc
insb
fwait
xor
icebp
inc
dec
inc
mov
mov
fdivs
mov
jecxz
pushl
xchg
iret
mov
shrb
inc
lea
sbbb
cmpsl
cmp
cmp
jp
mov
add
or
pop
fildll
dec
cmp
insl
iret
icebp
lods
sarl
rclb
das
iret
pop
sub
dec
pop
pop
sbbb
out
iret
mov
xlat
adc
in
mov
sbb
xchg
cld
insb
sarb
les
mov
jo
inc
jnp
adc
aad
cmp
shlb
add
pop
outsl
js
int3
bound
cmp
adc
or
ds
mov
and
push
dec
movsb
fwait
inc
xchg
test
adc
inc
and
enter
cwtl
xor
or
insb
push
enter
and
js
sub
or
mov
lea
sub
push
rorl
or
ss
cmp
lods
xor
xchg
call
sbb
mov
or
daa
xor
mov
or
sbb
push
int
movl
sub
add
xchg
push
rcrb
cmc
push
push
pop
lcall
mov
or
test
mov
mov
hlt
iret
mov
push
dec
push
cwtl
push
xchg
ficoms
lcall
mov
popf
jecxz
idivb
sti
pop
movsl
in
sbb
push
xor
das
bound
enter
inc
repz
xor
push
add
adc
xor
cmp
mov
mov
lahf
inc
faddp
jl
sahf
into
adc
sub
jge
enter
sub
adcb
and
pusha
bndldx
pop
xchg
push
add
push
fildll
jg
fmuls
push
loopne
or
call
iret
sub
pop
call
int3
mov
sbb
loopne
data16
adc
add
adc
popf
hlt
loop
mov
or
or
mov
into
sahf
nop
inc
push
aad
rolb
mov
and
iret
mov
rcr
mov
lods
push
jns
pop
push
adc
mov
push
inc
sbb
sbb
adc
sti
jp
cmp
sbb
push
shlb
cmpsl
or
enter
data16
pop
clc
sub
sbb
out
out
jae
sub
pop
aam
dec
dec
pop
insb
ljmp
jno
hlt
xchg
jnp
dec
je
mov
pop
adc
sahf
pop
aad
adc
jae
bound
cs
or
roll
pop
cmp
insl
cmp
jo
lds
or
jp
or
ljmp
mov
in
mov
nop
into
mov
mov
loop
mov
cmp
push
mov
enter
push
lds
sbb
jo
out
lods
mov
push
and
pop
pop
jns
sub
ds
sub
sarb
adc
insb
enter
les
xchg
adc
pop
inc
outsl
mov
sbb
or
pop
xor
loop
adc
hlt
push
loop
sbb
aas
cmp
hlt
cmp
mov
pop
xor
mov
popl
fsubrl
pop
fistpll
mov
jg
test
mov
pop
push
mov
adc
pop
call
in
mov
pop
pop
test
jmp
ret
rorb
cmp
stos
add
sarl
es
adc
mov
out
cs
or
fnstenv
push
cmpsb
inc
call
lods
mov
test
xchg
sub
dec
loopne
iret
es
jo
xchg
das
insl
xor
sbb
ror
sbb
outsl
xor
sbb
lahf
pusha
add
lods
push
mov
aaa
mov
xchg
insl
shrb
xchg
cs
scas
pop
pusha
mov
cmpsb
test
out
dec
pop
scas
sub
iret
adc
pop
jg
xchg
sub
mov
pop
outsb
es
das
outsl
cs
loopne
iret
inc
sbb
fistps
sub
ljmp
lahf
sbb
scas
adc
mov
inc
mov
pop
sarb
or
sbb
scas
inc
sub
jmp
mov
mov
cld
pop
lahf
sub
arpl
or
jae
dec
cmp
stos
fisttps
xor
inc
adc
push
das
adc
adc
xor
lods
sub
mov
pop
es
and
lahf
lock
hlt
outsl
xor
nop
mov
jnp
sarl
orb
adc
das
sub
add
pop
in
adcb
test
push
sbb
pop
push
outsb
fcoms
loop
fcomps
popf
mov
xor
lds
mov
clc
cmp
xchg
jmp
mov
dec
addb
push
mov
je
xor
cld
ret
test
outsl
adc
std
mov
arpl
or
aaa
push
cmp
add
add
add
or
arpl
mov
inc
pop
pop
pushf
loope
in
out
mov
leave
lods
jbe
fnstsw
insb
hlt
push
imul
sub
inc
sub
cs
pop
lock
mov
jbe
push
call
loop
push
aaa
call
clc
mov
mov
xchg
and
or
and
push
mov
mov
test
sahf
fbld
cmc
adc
cmp
sub
xchg
loope
test
lods
xor
stos
xor
cmp
and
imul
in
shr
les
dec
jns
xor
xor
in
loopne
mov
xchg
jl
push
and
jnp
and
cwtl
dec
add
jne
out
mov
cmp
lods
dec
lret
mov
ret
divb
je
sbb
jmp
push
fistps
cmpb
sbb
mov
roll
clc
es
dec
adc
sbb
or
cmp
mov
bound
repnz
mov
idivl
jp
jp
jae
sarb
rolb
mov
xor
push
sbb
sub
jle
iret
aas
cmp
lret
mov
call
xchg
sbb
jnp
pop
lcall
and
cmp
das
hlt
jae
inc
add
mov
xchg
hlt
pop
push
cmp
aas
pop
mov
pop
imul
push
pop
in
nop
cmpsl
jg
jbe
les
test
lods
in
jecxz
lret
popf
or
lock
lods
popa
sub
jo
cmp
stc
js
mov
in
xor
mov
push
aas
arpl
pop
lods
cmpsl
sarb
xchg
inc
sbb
add
adc
add
cwtl
xor
sbb
jle
mov
pop
fistpl
push
mov
lods
jns
cmp
and
mov
cmp
lahf
xlat
or
mov
mov
shrl
mov
cltd
test
inc
sahf
rol
cmp
sti
mov
stos
jmp
xchg
pop
jl
jp
add
in
fs
cmp
and
xchg
adc
pop
xchg
add
nop
jmp
out
jmp
pushf
aaa
sub
adc
adc
and
sub
hlt
shrb
scas
fdivrs
or
ret
call
inc
das
icebp
cmp
out
insb
cmpsl
push
jg
popa
mov
mov
rol
mov
xchg
adc
add
inc
pop
sarb
jmp
add
fucomp
jmp
jmp
rolb
stos
pop
call
or
xor
add
pusha
add
scas
add
out
add
jne
inc
lret
add
fwait
cli
xchg
jnp
test
fidivrl
jmp
adc
sbb
lock
sbb
and
iret
ljmp
pop
dec
dec
mov
popf
mov
sbb
aas
sub
outsb
and
sbb
add
rolb
lahf
cmpsl
shlb
int3
jne
fldcw
jle
shrl
pop
push
dec
sub
mov
jo
cmp
mov
cmp
insb
mov
adc
pop
and
mov
sarl
sub
jp
dec
mov
cmp
icebp
leave
mov
das
adc
fwait
popf
sbb
hlt
mov
fdivl
xorl
lea
pusha
jne
inc
loop
jae
rcr
pusha
lea
mov
lock
sub
and
xchg
daa
pop
sbb
mov
pop
pop
jle
inc
push
jmp
dec
stos
fadd
and
and
and
loopne
call
pop
pop
sub
push
mov
sbb
out
or
les
mov
enter
mov
icebp
jne
pop
js
decb
inc
and
jp
push
mov
push
sbb
or
sbb
cltd
daa
xchg
dec
pop
mov
cmp
pop
bound
sub
les
ss
mov
inc
or
fsubl
movsb
mov
xchg
aaa
fmulp
outsb
cmp
and
mov
sbb
inc
iret
in
jl
pmulhw
lods
mov
das
imul
adc
fildll
cmp
mov
pop
mov
loop
sbbl
call
mov
jno
mov
pop
add
fisubrl
dec
sub
xchg
leave
jle
stc
mov
xchg
test
js
and
xchg
push
jae
ja
fiadds
repnz
mov
and
iret
scas
stos
shlb
and
subl
add
popa
pop
add
adc
lret
in
clc
jo
out
daa
xor
iret
addb
sbb
jnp
mov
call
enter
mov
addb
xor
test
jle
sbb
add
inc
xchg
bound
and
adc
call
stc
pop
pop
and
in
test
xchg
adc
in
fwait
mov
loope
scas
push
setno
lock
insb
jecxz
sbb
jns
repnz
adc
subb
ret
push
mov
cmp
iret
xor
pusha
dec
mov
pop
lret
shr
mov
pop
ret
jge
xor
testl
out
xor
inc
clc
les
clc
push
push
mov
sbb
mov
out
aaa
push
cmp
mov
iret
jge
adc
lods
adc
jnp
pop
daa
mov
adc
add
or
mov
cwtl
inc
cmp
jmp
aas
sbb
sarb
and
lods
dec
divl
xchg
testl
jne
lahf
or
adc
jle
adc
dec
pop
fsubrs
out
cmp
mov
dec
jae
pop
lea
outsl
movsb
shlb
sar
btr
arpl
mov
add
jecxz
push
mov
add
loopne
mov
pop
xor
lock
sahf
cmpsl
fsub
xchg
inc
test
cs
les
psrld
push
movsb
iret
pop
fstl
fldenv
inc
mov
push
jmp
cmp
es
ret
sbb
mov
and
jp
dec
mov
pushf
sbb
iret
ffreep
shrl
cs
inc
xor
in
call
xor
dec
jmp
jecxz
adc
lahf
xor
aad
inc
jbe
ss
test
popa
jle
xor
add
mull
adc
xor
jmp
add
jo
dec
pop
push
jmp
or
adc
int
jmp
testb
pop
das
jge
mov
pop
loopne
int3
mov
mov
or
stos
mov
adc
scas
or
fisubrs
adc
or
enter
mov
int3
cmpsb
dec
mov
cwtl
sub
mov
clc
adc
out
xchg
add
cld
int
pop
and
push
sbb
imul
bound
aad
scas
mov
sti
pusha
in
pop
ret
les
cs
xchg
add
int3
jle
and
fiadds
adc
clc
and
lret
mov
ds
mov
pop
scas
jecxz
cld
lret
adc
in
or
lds
fwait
cmp
xor
mov
jnp
push
or
cmp
std
pop
adc
inc
and
xor
mov
int
sarb
stos
loop
push
aam
aam
pop
mov
dec
or
mov
dec
or
ficoms
mov
mov
cmpsl
mov
fsubl
push
ss
xchg
mov
mov
pop
jg
dec
pop
cmp
xchg
adc
lds
xlat
pop
out
sbb
jae
jo
jle
adc
test
push
out
out
rolb
lret
dec
nop
ficompl
lods
cmp
push
inc
int3
push
xor
fdivrs
mov
dec
jmp
mov
mov
clc
add
insb
ret
jmp
xor
mov
jle
mull
sub
rcr
lods
rolb
fmull
sub
xor
mov
inc
and
iret
outsb
mov
pop
xchg
push
xor
rorb
mov
mov
jle
mov
adc
shlb
es
das
dec
inc
out
rorl
mov
bound
and
nop
insl
jl
mov
outsl
adc
cs
test
sub
loopne
pop
jmp
xor
xchg
cmp
lahf
cld
and
pusha
lret
pop
inc
out
and
jae
int3
cmp
mov
mov
xor
das
jae
loopne
jnp
negb
mov
sbb
ljmp
jl
test
dec
sbb
orb
xchg
xor
adc
sub
lock
cmpxchg
adc
rcrb
add
lods
bound
dec
lods
inc
xor
dec
popa
mov
mov
xor
out
outsl
das
ffree
les
jp
cmp
fiaddl
sbb
mov
iret
cli
bound
sub
jge
mov
lahf
xchg
jae
int3
push
fistps
cmp
bound
bound
sbb
out
testl
pop
xchg
pop
jge
pop
cs
sub
inc
mov
jnp
sub
pop
clc
cmp
fucomp
add
mov
pop
movsb
cmpps
test
ds
jae
sub
pop
aad
push
clc
adc
sbb
insl
mov
jecxz
ljmp
ds
jae
add
loopne
bound
shlb
enter
mov
lahf
mov
cmp
cmpb
pushf
and
fistps
aam
and
jl
pop
dec
lods
and
insb
hlt
xorb
ret
mov
xor
shll
inc
je
dec
mov
loopne
and
mov
cwtl
mov
call
jo
mov
dec
mov
pop
sbb
jb
or
outsb
shll
and
mov
int3
aam
call
xor
loop
jnp
push
mov
fdivrl
mov
mov
xchg
cmpsb
lmsw
aaa
insl
mov
movsl
iret
jbe
mov
adc
mov
pop
xor
jnp
mov
inc
loope
fldt
dec
mov
cld
out
rcrb
mov
sub
mov
cmp
jae
adc
mov
xchg
mov
or
inc
xchg
int
mov
xor
addr16
dec
adc
sahf
jo
nop
imul
insl
jbe
pop
arpl
push
js
fmul
test
in
jb
sub
out
sub
jecxz
jg
sbb
int3
dec
ret
mov
jae
jge
pop
push
sbb
clc
mov
lcall
fwait
test
or
dec
js
call
jb
bound
mov
insl
mov
mov
ds
xchg
or
mov
xlat
and
sub
ret
jge
leave
pop
icebp
cmpl
mov
testl
lret
sbb
fmull
inc
sbb
jae
push
sahf
adc
pop
mov
sbb
mov
cmp
jecxz
jne
lahf
ror
mov
in
xor
inc
hlt
xor
inc
inc
dec
sti
dec
cwtl
scas
mov
sub
lcall
and
enter
inc
imul
scas
pop
cwtl
adc
std
jl
aam
add
dec
push
arpl
fdivl
icebp
movsb
jmp
ret
nop
jo
daa
aaa
sub
int
cmp
xor
shr
inc
push
mov
jae
xor
aam
ds
xor
jb
aam
xchg
lret
ljmp
es
pop
jge
and
scas
cmp
insb
cli
pushf
test
mov
call
into
inc
cmp
jbe
leave
out
je
cmpb
xor
and
iret
or
imull
clc
out
orb
lahf
int
mov
shl
loope
xor
mov
stc
sti
xor
inc
inc
jp
xor
adc
pop
sub
jmp
orl
scas
or
shrb
lea
addr16
bound
stos
pop
push
jle
jb
loop
lahf
jmp
in
lods
pop
dec
adc
pop
push
jmp
mov
pop
cmp
popa
xchg
mov
xchg
and
jae
pusha
out
pusha
loopne
xor
sbb
lea
sbb
jnp
stc
in
call
mov
xor
insl
jge
inc
outsb
add
shlb
lret
lods
pusha
jmp
jmp
sub
pop
push
cmp
in
lods
or
cmp
pop
lods
pop
and
sahf
fisubl
movsb
lods
stos
fisubrs
call
imul
clc
fldt
adcb
fidivl
mov
js
xor
sbb
add
mov
jne
or
xor
dec
ja
mov
and
into
in
rolb
push
imul
out
sahf
ljmp
gs
dec
daa
push
fildl
push
mov
shlb
out
xchg
inc
mulb
inc
es
dec
mov
fidivl
out
call
adc
push
es
pusha
dec
mov
lock
std
cmp
iret
ret
push
test
cmp
cmp
inc
test
cli
mov
pop
enter
sub
nop
adc
add
inc
add
ret
add
mov
xchg
cmp
and
or
addr16
and
in
fldt
xor
mov
and
mov
mov
aad
mov
sub
out
jecxz
cmp
jle
jns
pusha
test
or
inc
aas
in
cmp
dec
rorl
xchg
idivl
nop
sysexit
bound
mov
sbb
sub
sti
out
or
adc
mov
push
xchg
out
mov
xor
loop
mov
mov
scas
sub
rcll
pushf
mov
lahf
sub
into
xor
hlt
fcoms
jmp
push
xchg
adc
xchg
insb
or
enter
adc
pop
fmuls
iret
xchg
pop
xor
movl
or
push
in
sti
leave
mov
insb
movsb
sub
sbb
mov
das
jmp
ss
push
or
pop
pop
nop
call
cmp
sub
test
fisubl
dec
fsubl
les
test
xor
loopne
xlat
cmpsb
mov
cmp
jle
lret
jnp
push
pop
faddl
int
pop
xor
mov
lcall
and
pop
sbb
iret
or
xchg
push
jmp
aad
pcmpeqw
into
test
mov
outsl
jecxz
or
cmpsb
out
andl
pmaxub
test
movsl
mov
addl
mov
push
popa
or
test
sbb
add
subl
data16
mov
aaa
fadd
or
adc
js
mov
mov
loopne
push
or
enter
cltd
or
cmp
pop
mov
add
xchg
pop
arpl
es
cmp
lret
xlat
sbb
cmp
ret
dec
jmp
sbb
ret
in
push
into
arpl
outsb
fs
pushf
xchg
xor
call
jl
sbb
jae
or
loop
mov
jge
mov
and
sub
sub
decl
xor
fldl
daa
sbb
lods
mov
enter
push
stos
fucomp
sbb
imul
iret
xor
popa
test
ljmp
xor
gs
loopne
mov
lods
inc
fcompl
in
bound
adc
mov
into
cmp
ret
mov
inc
sbb
icebp
in
mov
mov
pop
and
push
sub
test
sbbb
xchg
enter
jo
lea
or
xchg
cltd
lock
pop
adcl
jl
mov
les
ret
sahf
sub
or
lods
push
or
sub
jne
sahf
sub
into
add
xor
cmpb
sub
jbe
scas
lods
mov
mov
xor
popf
lea
lods
xchg
lods
xchg
inc
pop
mov
test
pusha
popa
ss
lea
cmpsl
movsb
lods
xchg
mov
xorl
das
nop
adc
pushf
movups
nop
or
das
xchg
out
sbb
sub
and
mov
mov
and
fnstenv
arpl
in
mov
cmp
iret
imul
add
cmpsb
mul
xor
aaa
mov
dec
ror
and
xchg
sub
int3
and
inc
jo
adc
sbb
lahf
aam
js
mov
les
std
push
test
aam
or
or
add
lods
outsl
sub
mov
adc
mov
pop
cld
fldt
add
sbb
adc
jmp
xchg
test
sbb
sbb
xor
sub
outsb
das
sub
fiaddl
dec
pop
xor
mov
xchg
adc
mov
mov
adc
rcr
outsb
bound
sub
js
movsb
bound
nop
xchg
pop
xor
int
pop
adc
cli
xlat
jl
mov
rorl
and
flds
loopne
add
int3
iret
sub
rcr
in
jle
dec
xchg
dec
out
testl
sub
and
call
lea
mov
out
xor
pop
pop
rcl
dec
shrb
scas
xchg
mov
scas
lcall
fwait
pop
mov
cmp
rcrl
loopne
sub
xchg
jecxz
and
test
jg
mov
jecxz
scas
rcrb
xchg
mov
iret
lock
aas
test
mov
rolb
shl
mov
sbbb
xchg
cld
adc
cmc
mov
jne
push
clc
mov
jecxz
mov
jbe
mov
les
jbe
mov
aam
fistpl
or
aaa
pop
xor
cmc
xchg
xchg
dec
mov
jle
sti
mov
push
lods
lret
mov
jne
hlt
cmp
rcll
out
xor
add
in
mull
stos
incl
inc
jae
mov
insl
fimuls
dec
cmp
xchg
push
cmp
xor
xchg
push
sbb
mov
es
mov
mov
cmp
lods
sub
and
lahf
cmp
sarb
sahf
inc
mov
lock
sub
ror
ret
sub
push
mov
pop
fld1
int
jae
or
add
dec
mov
js
es
pushf
hlt
loop
js
mov
push
inc
xorb
je
cmp
cmp
and
push
sub
jae
xchg
test
pop
daa
fnstenv
xchg
dec
push
test
ds
and
rcrb
xchg
sbb
cmp
and
insb
sbb
mov
jl
mov
mov
int3
pop
xorb
out
enter
pop
push
mov
jb
sub
push
push
cltd
cmp
xlat
push
adc
sti
sub
sbb
pop
call
add
nop
in
scas
ss
lcall
outsl
xchg
add
pushf
or
inc
adc
or
popa
sbb
mov
lahf
sub
mov
les
mov
pop
incl
and
adc
and
pop
and
dec
jle
call
mov
pop
aad
das
rol
adc
pop
sub
or
xor
mov
or
movups
je
les
and
xchg
insl
sbb
scas
sarb
xor
daa
jle
fcmove
jne
xchg
mov
les
bound
sub
or
imul
loop
or
add
xor
outsl
xchg
outsl
stos
outsl
mov
outsl
pop
pop
pop
mov
sbb
addr16
push
test
jp
sbb
or
jp
lods
push
lahf
sub
mov
shll
push
adc
popa
mov
mov
pop
jmp
lods
mov
sbbl
sub
pusha
dec
push
js
cwtl
ret
sahf
insl
cs
dec
in
loop
mov
mov
fstpt
cmpsl
xor
jle
sbb
cmp
or
dec
nop
xor
ffree
adc
mov
das
xor
or
out
in
xor
stc
adc
das
loopne
enter
xor
addl
sbb
push
pusha
adc
fcmovne
and
and
jns
pop
lods
pop
cmc
inc
push
mov
xchg
jl
adc
jae
cmc
xorl
repz
cmp
push
pop
sub
jle
mov
xor
repz
xor
bound
pop
inc
pop
mov
pop
xor
iret
cmp
push
xlat
xor
lods
mov
movsb
xor
sbb
fs
int
notl
mov
das
fisttps
sbb
fdivrs
sub
js
and
inc
scas
lahf
icebp
mov
or
fisttpl
pop
movsb
shl
out
xchg
mov
dec
push
xlat
jl
lcall
jnp
xchg
in
xchg
scas
jp
jmp
scas
lods
iret
jns
adc
adc
icebp
push
or
xor
lock
or
aas
lock
pusha
fistpll
popf
je
inc
mov
rcrb
adc
xchg
mov
idivl
negl
data16
jo
or
xor
insb
hlt
and
inc
push
aad
adc
xchg
xor
add
jmp
shlb
adc
xchg
and
cmp
mov
cmp
and
and
jnp
in
jbe
subb
cmpsb
xchg
sahf
insl
imul
shr
es
hlt
sbb
dec
push
sub
xchg
pop
pushf
imul
test
in
push
in
adc
sub
jae
btr
cmp
outsl
out
pop
aam
pop
push
sub
dec
adc
les
sub
sbb
int3
pop
ret
sbb
aas
movsb
jmp
aaa
test
jb
or
cmp
into
fsubl
sub
aam
fldenv
in
jb
mov
adc
es
test
jle
inc
mov
or
cmp
mov
sbb
and
mov
jg
adc
push
and
mov
dec
adc
es
mov
enter
das
dec
mov
add
xor
cmp
aam
cmp
stos
shll
fistpl
fildl
mov
ret
jg
dec
fadds
int3
nop
insb
add
sbb
int
cwtl
aas
inc
sti
mov
push
iret
xor
rcll
mov
loop
jmp
mov
sahf
jne
outsl
out
jmp
adc
shlb
sbb
cmpsl
icebp
fstps
call
mov
jle
divb
mov
imul
inc
sbb
xchg
inc
adc
mov
repnz
add
bound
das
jnp
sti
shrb
ret
les
mov
cmpl
cmc
mov
pusha
and
mov
xor
mov
inc
bound
insl
jp
cli
sub
add
dec
jbe
push
pop
add
pop
jp
and
rol
bound
push
pop
adc
rcrl
stos
or
loope
fldl
sub
jge
stc
mov
loopne
adc
mov
xor
lock
mov
outsl
mov
ret
adc
xchg
ror
je
mov
outsb
aad
aas
mov
xor
mov
mov
push
xor
stc
jmp
xor
mov
daa
pop
xchg
js
xor
jmp
push
call
inc
mov
in
dec
mov
shll
inc
push
lahf
mov
aad
mov
mov
or
clc
push
inc
gs
ficoml
mov
cmp
call
iret
test
pop
movsl
bound
out
mov
sub
mov
jmp
mov
mov
outsl
call
lcall
js
call
lods
jbe
or
add
add
popf
int3
pop
push
sbb
movsb
jle
push
rorb
push
sahf
in
test
dec
arpl
rep
popf
xchg
loopne
cmpb
xchg
sbb
jg
mov
mov
cmpb
sub
jmp
inc
cmp
sbbl
and
inc
cmpsb
pushf
push
and
in
mov
mov
xchg
xor
cmp
jbe
mov
xchg
aam
ret
xor
aam
sub
rorb
arpl
or
sarl
or
xor
lcall
cmp
lock
cmpsb
and
int3
xchg
mov
mov
push
nop
adc
fchs
test
or
cmpsl
or
rcll
and
jo
xchg
sbb
add
inc
sahf
inc
adc
mov
dec
xchg
pusha
cmp
adc
popf
movsb
sub
ljmp
movsl
jo
pop
int3
xor
test
scas
xor
jb
js
jbe
adc
popf
ret
push
or
adc
movb
mov
cmpsl
cmpsb
push
dec
int3
sahf
mov
scas
outsl
or
push
push
outsb
or
push
xchg
inc
lea
call
pop
sbb
sbb
pop
aas
jae
pop
cmp
jle
and
pop
adc
bound
int
pop
mov
xchg
ficomps
or
in
push
mov
sbb
cmp
inc
sub
jnp
push
dec
xorb
ret
cmp
cltd
cld
repz
or
mov
leave
xor
iret
push
movsb
and
popf
sbb
dec
dec
mov
dec
stos
lahf
addr16
mov
cmpsb
inc
movsb
push
sub
cmp
movsb
mov
xchg
cmp
xchg
outsl
fistps
je
xor
jmp
loop
aam
icebp
mov
negl
add
ret
or
dec
clc
jecxz
push
pop
and
lods
cld
bswap
mov
xlat
dec
ja
rcl
add
mov
mov
inc
inc
imul
leave
pop
pop
cs
cmp
rcrl
sub
xor
testb
sub
xchg
mov
adcl
and
pusha
sbb
int
nop
jl
mov
jg
dec
push
fs
mov
add
mov
shrl
mulb
mov
fsin
and
jecxz
xor
pusha
loopne
xor
jo
loope
in
cmpsb
cmp
and
call
in
or
push
iret
mov
mov
push
out
sub
sahf
sbb
or
inc
adc
xchg
loop
bnd
push
and
mov
mov
push
cmp
push
xchg
adc
adc
scas
adc
mov
push
cs
pop
dec
xchg
jle
lahf
mov
ret
jecxz
add
dec
sub
aam
push
adc
and
push
mov
xlat
jae
dec
mov
adc
fwait
mov
aad
or
lds
adc
mov
mov
mov
popa
xor
push
enter
and
in
lods
add
sub
add
lock
pop
pusha
jne
mov
add
mov
sbb
push
icebp
xlat
test
in
popf
insl
cmpb
push
cmp
je
dec
fbstp
sub
push
dec
in
js
aas
mov
inc
aaa
dec
icebp
shrl
fistpl
or
jmp
pop
sbb
loop
pushf
iret
sub
jnp
rolb
sbbl
addb
adc
dec
mov
movsb
mov
mov
cmc
xor
enter
in
xchg
pop
sahf
rorb
sub
scas
adc
pusha
push
popf
dec
rol
pushf
adc
mov
aad
cmp
dec
sub
js
mov
jle
mov
xor
sbb
cmpsb
fstl
jmp
sbb
cmp
std
aam
push
xor
es
fcmovne
jb
shlb
cmp
add
jb
int3
fcmovnbe
cmp
pop
gs
mov
adc
vpshufhw
cmp
jge
mov
sahf
es
repnz
mov
fisttpl
inc
sub
and
or
push
inc
sbb
aad
sahf
int
popa
push
ror
cmp
jle
rcl
xor
inc
bound
cmp
xchg
adc
out
sub
lcall
rcrb
xchg
or
xchg
dec
fcoml
jp
and
xchg
scas
cwtl
pushf
aas
push
mov
stos
ret
lret
addl
jne
icebp
xor
mov
mov
xchg
loopne
dec
mov
push
inc
push
jne
dec
lret
push
add
addr16
xchg
fbld
mov
daa
dec
push
push
dec
int3
inc
cmp
test
xor
jae
loopne
add
adc
push
adc
pop
ljmp
cmp
mov
or
push
jecxz
mov
fucomp
xor
fdivp
cmp
insb
inc
test
mov
gs
sbb
lret
fidivrs
scas
call
rcrb
test
push
mov
pop
in
mov
insl
mov
push
xor
jnp
or
test
pusha
je
jle
mov
jmp
xor
cmp
fs
sub
or
push
in
mov
es
fildl
sbb
ret
adc
mov
mov
imul
push
das
dec
hlt
iret
and
xchg
inc
pop
pusha
sub
push
ja
nop
insb
cmp
sub
push
lods
pop
data16
push
les
scas
pop
loop
jp
rorb
mov
add
or
movsb
ljmp
mov
adc
fs
lahf
aas
call
xchg
les
add
inc
xor
fidivl
lret
mov
dec
lahf
dec
push
mov
sbb
test
mov
loop
sub
mov
mov
aaa
lahf
mov
jg
xor
imul
xor
icebp
mov
rorl
loop
setne
clc
push
sarb
clc
cwtl
pop
adc
add
bound
push
pushf
cs
imul
fidivs
nop
jl
ret
les
cs
cs
rolb
mov
cmp
push
sbbb
mov
sub
mov
call
outsl
fimuls
mull
sub
movsb
pop
xlat
gs
fistpl
hlt
xor
iret
in
or
sarb
push
fisubl
popf
aad
jb
fisttpll
daa
shrb
jmp
faddl
inc
inc
adc
fstpl
aam
call
int3
xor
ds
lcall
pusha
mov
add
ret
mov
fidivl
mov
in
push
jle
or
jb
in
adc
ror
stc
movsl
rolb
addr16
inc
jnp
les
push
lcall
nop
or
mov
adc
cld
jae
ret
push
dec
mov
xor
jge
sbb
jp
mov
sub
lea
inc
jae
adc
pop
aas
adc
pusha
iret
lods
mov
je
sbb
lods
and
and
scas
xchg
insb
xchg
int3
jae
xor
adc
push
mov
jmp
sbb
es
add
pop
lds
sbb
push
lcall
xchg
sbb
add
sbb
rcr
nop
cs
mov
sbb
cs
cmp
and
pop
rclb
addb
lock
jecxz
pop
xor
mov
js
mov
rclb
ret
call
or
push
mov
sub
jb
cmp
dec
or
mov
into
fcomps
out
fildl
mov
in
sub
fiadds
xchg
lods
into
fistl
fistl
or
xor
sub
sti
xor
or
rolb
fistps
clc
mov
add
mov
xchg
mov
les
xor
jmp
add
sub
or
popf
iret
lods
lods
pop
call
or
add
jmp
cmp
mov
push
sbb
fs
popf
dec
rcrb
test
and
add
test
cltd
jecxz
or
push
pusha
out
addr16
imul
sbb
inc
pop
jle
add
mov
fcomps
pop
scas
aas
imul
add
loope
pop
or
fwait
mov
lret
fldl2t
sbb
pushl
aaa
mov
jle
mov
cmp
sarb
stos
sub
jl
or
das
rorb
jbe
aaa
dec
or
pop
into
std
lock
sbbb
fdivrl
mov
test
mov
jecxz
or
dec
cwtl
sbb
cmp
xor
lea
sub
inc
sbb
out
mov
fnsave
add
outsl
lea
pop
loope
bound
adc
sbb
mov
mov
stc
ret
jmp
jg
push
aaa
es
cmc
daa
mov
ss
push
xchg
mov
xlat
ret
mov
jg
popa
jp
cs
inc
out
test
ja
mov
push
jmp
call
ficoms
leave
sahf
adc
jne
fmuls
pop
mov
adc
inc
arpl
movsb
pop
std
adc
adc
mov
adc
sahf
ljmp
pushl
int
xchg
lahf
xor
ss
or
lahf
loopne
out
push
hlt
xchg
loopne
mov
scas
and
adc
fcomi
int3
imul
nop
jae
push
fisttps
mov
and
mov
in
int
frndint
pop
lea
xchg
mov
fsub
pusha
sbb
jo
imull
sbb
repz
jbe
inc
pushf
movsb
pop
enter
push
pop
outsb
push
sbb
adc
pop
cmp
adc
pop
mov
mov
addb
xor
fisttpl
or
enter
mov
adc
cmp
mov
cmpl
lods
in
call
and
lods
rcrb
sbb
in
mov
push
shrl
add
push
into
sbb
enter
dec
lds
int
mov
and
pop
xor
out
nop
push
ret
iret
ss
add
shr
fists
or
inc
ljmp
lahf
ds
push
into
mov
mov
aaa
cmpsl
or
loopne
sub
lret
and
vandnpd
adc
mov
out
ds
xlat
pop
push
inc
mov
clc
inc
pusha
jecxz
cld
or
mov
daa
and
in
xor
xlat
mov
mov
xchg
sbb
mov
aam
or
insl
jle
xchg
pop
jecxz
mov
ja
pop
addr16
aad
xchg
mov
push
lcall
pushf
fldenv
cmp
insb
xor
test
iret
dec
cwtl
sbb
cmp
cmp
xor
rcrb
adc
mov
mov
cmp
in
shlb
fdivrl
cld
mov
adc
adc
test
sti
and
rcpps
cmp
sahf
pop
imul
and
lahf
loopne
mov
in
cmp
sub
cwtl
std
cmp
xchg
mov
and
adc
in
push
xchg
imul
push
adc
in
ds
ret
cmp
stc
push
mov
sbb
cmp
jg
lret
add
cmp
xchg
adc
outsb
sbb
fstpt
add
pop
xchg
subb
mov
cmpsl
and
pop
mov
sub
ret
xlat
movsb
push
and
mov
xchg
sbb
mov
aaa
pop
cmpsb
movsb
in
push
nop
scas
pop
xchg
repz
in
and
aas
jmp
lcall
cmp
outsl
andb
and
insb
fdivrl
jae
pusha
and
push
pop
dec
or
outsb
adc
pushf
sub
les
mov
testl
repz
arpl
in
scas
lods
and
jo
pusha
add
dec
jbe
movsb
fnstcw
jg
adc
fsts
pusha
push
sbb
add
adc
cmp
out
inc
mov
test
pusha
mov
mov
lret
pop
xchg
stos
ljmp
cvttps2pi
daa
fldenv
enter
leave
dec
sahf
pop
imul
jne
ljmp
sub
push
iret
outsl
sahf
jo
mov
cmp
les
sub
cmp
mov
sub
imul
xchg
je
enter
inc
in
pop
pop
jae
dec
jg
inc
add
ljmp
nop
xor
jge
scas
outsl
mov
ficoms
lods
push
int3
push
xor
push
lea
pushf
aam
loopne
mov
jecxz
in
dec
mov
add
mov
jb
mov
jo
mov
scas
add
int
fsubrl
sbb
push
jb
lods
orb
mov
outsb
popa
pop
aam
xor
fiadds
fsubrl
lcall
fsubl
inc
dec
mov
nop
mov
mov
adc
repz
sti
lock
clc
andl
add
test
mov
gs
jns
into
lods
rcll
xor
add
dec
incb
xor
aad
adc
scas
in
sbb
xor
adc
mov
aas
pop
ds
push
adcb
adc
icebp
pop
pop
sub
sub
data16
je
xor
rorb
mov
dec
ret
imul
xor
sbb
xor
pop
cmp
mov
pop
dec
gs
and
dec
roll
shrl
sbb
lret
std
and
iret
jns
lcall
ret
fidivs
dec
into
inc
movsb
pop
jo
dec
cmp
insb
mov
out
push
add
lcall
lcall
xor
add
scas
sbb
outsl
sub
movsb
mov
les
add
pop
jns
and
jle
mov
scas
cmp
arpl
arpl
and
push
mov
mov
loop
aam
scas
push
imull
sti
jle
mov
ljmp
add
iret
fisubl
or
pop
loopne
mov
lea
xchg
fdivl
outsb
cmp
adc
test
sti
xorps
mov
jge
mov
push
mov
push
testb
fimull
or
push
mov
mov
jo
test
inc
outsl
test
pop
pop
mov
mov
sub
nop
fdivrl
xor
jno
mov
inc
cmp
mov
aad
loopne
or
ds
cmpsl
and
test
outsb
lret
jecxz
xchg
pop
pop
dec
xchg
mov
and
mov
mov
gs
lea
movsl
jge
lret
bound
sub
or
aam
xor
stc
mov
stos
das
in
roll
mov
mov
lock
cmp
xchg
das
out
fildl
insl
pop
mov
push
pop
movsb
cmp
push
add
inc
xor
add
in
in
arpl
push
aaa
clc
sub
jnp
int3
loop
mov
and
jo
inc
insl
lcall
cmp
movsb
jle
into
pop
lods
inc
adc
xchg
xor
pop
pusha
mov
outsb
push
loop
push
mov
rolb
mov
push
paddsw
jp
jne
roll
aam
sbb
jae
pop
aas
pop
lods
xor
nop
pushf
sti
call
popa
incb
enter
lock
sbb
dec
adc
orl
adc
jnp
cmpsl
mov
cmp
xchg
mov
sbb
adc
jne
sub
sahf
push
cs
rorb
inc
fld
mov
loopne
cmp
push
sbb
jecxz
popa
movsb
adc
divb
push
pop
sub
add
sbb
mov
cmp
xlat
jp
adc
shlb
jecxz
mov
imul
xor
lods
push
loop
sbb
in
das
or
loop
inc
mov
xchg
repnz
das
lods
jno
and
fcmovnu
int3
pushf
mov
sbb
rolb
push
shrl
lods
pop
rcrl
jno
xchg
mov
mov
cmc
das
rclb
enter
ds
data16
lahf
xor
cmpsl
jns
dec
ja
cli
jae
rclb
jmp
xorl
std
xchg
out
popf
add
lods
mov
push
outsb
sub
shll
mov
jb
or
adc
pop
in
or
cmp
pop
rclb
dec
sub
nop
in
adc
push
mov
adc
mov
mov
dec
into
mov
data16
xchg
enter
pop
adc
call
insl
fimuls
out
add
sbb
loopne
xchg
and
adc
es
sub
mov
xor
xor
xor
dec
je
cli
data16
mov
sbb
shrb
adc
aam
and
sbb
aaa
jnp
xchg
adc
mov
fldenv
or
loop
or
ljmp
mov
scas
push
xchg
lret
imul
lock
scas
xchg
mov
lea
sbb
mov
imul
cltd
xor
jmp
push
push
loopne
shrl
xor
outsl
jae
push
add
adc
les
mov
jg
divb
push
xchg
dec
inc
lods
leave
out
pop
sub
aas
inc
xchg
xor
cmp
and
fnstcw
adc
adc
and
jle
jns
sub
loopne
jnp
inc
repnz
in
mov
cmp
push
lcall
stos
sbb
sub
jnp
sbb
iret
pushf
aam
mov
jne
pop
add
sub
xor
insb
scas
sbb
add
sbb
iret
mov
addb
or
negb
cmc
iret
push
es
call
pop
sub
sub
bound
adc
and
mov
push
sbb
mov
push
mov
in
repz
adc
rclb
lahf
cs
aas
nop
push
adc
mov
nop
arpl
push
shlb
xchg
jns
mov
les
cltd
jl
mov
out
xchg
mov
mov
jg,pt
mov
push
adc
xlat
xorb
and
hlt
mov
sti
jo
dec
pop
in
dec
and
mov
lock
shlb
mov
mov
loop
xor
cmp
std
scas
sub
pop
dec
add
jns
pushf
rcr
bound
scas
push
or
in
jg
out
sbb
pop
sbb
cmpsl
arpl
call
sub
in
xlat
push
pop
push
dec
sbb
xor
and
mov
out
pop
xchg
loopne
shlb
lret
mov
in
mov
repnz
movsl
and
fdivs
cmp
out
minps
aaa
adc
std
scas
sub
inc
out
fcoml
sub
dec
mov
mov
jae
idivl
push
in
bound
adc
iret
iret
testb
jle
fs
adcb
adc
aaa
mov
addr16
mov
pop
mov
dec
and
add
or
sbb
movups
or
mov
cmp
cmc
rorb
or
dec
cmpsl
push
sti
pop
cmpsb
pop
call
sub
scas
xor
mov
add
rclb
ja
repnz
pop
shrb
sbb
and
test
mov
daa
mov
ficoml
jmp
inc
fisubl
jge
mov
sub
andb
inc
xchg
sti
add
iret
sbbb
dec
cwtl
and
xor
sbb
push
addb
daa
push
in
cmp
pusha
cmp
or
xor
pop
nop
lods
xchg
jge
ljmp
sbb
sub
pop
and
sbb
test
cmp
rorl
cmc
popa
into
loope
aam
inc
pop
test
bound
push
aam
xor
xor
pop
jmp
js
pop
ss
cmp
jg
or
pushf
imul
movsb
cmpsl
push
lahf
xchg
pop
sbb
fsubrl
movl
sbb
fisttps
jl
mov
pop
outsl
sbb
push
lock
je
clc
pop
clc
rdtsc
mov
cmpsl
cmp
fdivl
in
popa
in
mul
xchg
ds
ret
ljmp
push
dec
rcl
cli
fwait
fwait
xchg
icebp
cmp
movl
mov
rclb
mov
mov
pop
sub
xchg
popa
mov
cmp
popa
xchg
aam
cmp
das
hlt
jecxz
fucomp
pop
mov
sbb
and
xor
nop
cmp
cs
cmp
in
inc
adc
xor
in
add
mov
push
aas
add
sbb
mov
ljmp
daa
sub
call
sbb
rcr
stc
dec
inc
adc
and
dec
cmp
jno
and
dec
or
dec
jnp
bound
push
pop
jnp
xchg
pop
xchg
mov
rol
scas
xchg
enter
iret
in
orl
cmp
jmp
jne
cld
pop
mov
mov
jb
fwait
mov
lods
testl
cld
ds
loopne
add
sub
adc
test
inc
insl
and
pop
push
inc
jp
mov
lods
mov
ljmp
ret
inc
daa
xor
fidivrs
adc
lods
push
mov
leave
fisubs
push
sbb
xchg
xor
cli
xor
test
cmp
ss
cmp
insl
cs
lret
int
lcall
xor
xchg
and
mov
inc
movsb
js
inc
inc
xchg
and
jae
pop
jno
ret
xorb
cmpsb
decb
imul
fld
movsb
push
int3
data16
cmc
mov
adc
and
outsl
mov
ljmp
pop
jmp
pusha
wbinvd
xchg
mov
movsb
lahf
pop
mov
inc
into
jmp
or
sarb
subl
call
leave
popa
cmp
sbb
jle
mov
jae
mulb
rorb
xchg
jp
inc
in
dec
mov
mov
fadds
cmp
imul
dec
inc
sbb
bound
aaa
xchg
fadds
gs
stos
xchg
into
call
pop
sahf
subb
and
scas
aad
and
mov
xchg
test
mov
jg
mov
rcl
sbb
pop
in
sub
cmpsl
shrb
mov
aam
shlb
lods
cwtl
xor
call
sti
inc
or
jle
cmpb
pop
mov
mov
dec
loopne
mov
mov
inc
bound
adc
push
imul
xchg
and
bound
lea
push
pop
xor
sti
jno
scas
hlt
icebp
push
rol
xchg
pop
aam
sbb
mov
push
loopne
xor
mov
repnz
and
hlt
pop
add
mov
xor
outsl
pop
rclb
xchg
outsl
cs
lea
repnz
add
in
fisubrl
loopne
adc
out
sbb
outsl
cmp
sub
outsl
jb
repnz
imul
or
outsl
int3
push
aam
xor
mov
aas
cmp
xchg
add
mov
pop
pop
or
cwtl
fiadds
pop
sub
cs
insb
ret
into
dec
addb
cs
ret
adc
jne
mov
icebp
popa
repnz
xor
in
cli
outsl
cmp
add
cmp
ljmp
adcl
lret
push
dec
js
jl
popa
jne
pop
cmpsb
decb
xor
mov
aas
fisubs
jo
mov
jl
mov
aam
dec
push
pop
inc
sahf
cs
or
mulb
out
mov
or
sub
jge
lods
inc
loopne
cmpsb
cmp
movsl
adcb
dec
jne
pop
mov
mov
mov
jno
push
dec
test
dec
in
sbb
pop
sub
mov
mov
mov
xor
lahf
nop
out
jo
sbb
repz
xor
sti
pusha
out
pop
xor
roll
xchg
ror
dec
sub
fwait
cli
push
es
shll
xchg
mov
out
dec
lods
test
xor
inc
and
add
rclb
push
jmp
mov
xor
loopne
xor
mov
in
repnz
xor
fsub
push
icebp
inc
xor
jb
dec
test
jp
and
js
mov
push
jae
outsb
xchg
insl
xor
jle
cmp
push
cwtl
aam
rsqrtps
push
sbb
popa
xor
cmp
cmp
cmp
repz
inc
ss
repnz
call
inc
popf
or
cld
mov
movsb
xor
out
dec
in
rclb
sbb
push
push
icebp
xor
mov
rorb
or
or
inc
test
lret
mov
push
loopne
jo
adc
rclb
loopne
mov
dec
popf
adcl
aad
insl
pop
xchg
or
aam
mov
cwtl
out
les
int
cmpb
push
add
xor
movsl
pushf
rorb
nop
and
sarb
mov
sub
adc
pop
and
jmp
loopne
inc
and
rcrb
or
push
sbb
jmp
fcoml
repnz
lods
push
insl
xchg
xor
add
cwtl
sub
shl
faddp
loop
pop
adc
mov
dec
sbb
outsl
pusha
mov
jg
push
xsaveopt
pop
sbb
or
sbb
aas
adcb
int
xchg
out
or
out
loopne
push
es
scas
dec
lods
test
iret
imul
mov
in
mov
push
fimull
popl
sbb
or
jl
scas
adc
shrl
jo
ret
stc
rorb
sbb
in
lock
out
cmp
mov
mov
aad
pop
lods
push
pop
pop
dec
inc
push
inc
inc
insl
push
insl
jns
pop
stos
and
push
cmc
jge
cmp
sub
int
stos
jns
xor
or
jb
xor
inc
sbb
das
dec
repz
test
xchg
jnp
insl
das
shlb
push
xchg
aas
aad
stos
clc
das
mov
jl
loop
or
ficompl
loop,pn
adc
inc
repz
pop
inc
mov
mov
jbe
repz
push
lea
mov
adc
dec
daa
int3
ds
fmull
stc
lahf
xor
mov
lds
cmovb
fisubrs
pop
pop
cld
loop
test
and
or
arpl
fdivr
faddp
jb
pop
inc
sub
pop
xchg
jmp
jae
pop
jns
loop
outsl
mov
cmova
fwait
pop
push
andl
out
and
test
rorb
mull
jg
adc
jo
cmp
imull
cmp
xchg
pusha
dec
iret
lods
xchg
xor
fstp
mov
pop
xchg
sbb
pop
ret
jle
iret
dec
cmp
les
daa
sbb
xchg
and
cmp
scas
dec
sahf
cmp
jns
mov
idivb
cmp
fisttpl
inc
imul
adc
cmpsl
iret
sub
sar
fwait
stc
shrb
push
mov
sbb
dec
into
subb
push
xchg
cmpl
ss
push
mov
adc
cmc
popa
scas
aaa
ds
ds
daa
movsb
adc
lods
dec
sbb
mov
lahf
jb
in
jmp
insl
fcoml
push
shll
cmc
cmp
aaa
aas
lods
stc
test
xchg
sub
fs
pop
push
jle
or
out
ret
pop
pop
xor
fcmovne
xchg
das
pop
lods
inc
rorl
sti
inc
push
scas
adc
push
adc
sti
in
and
jmp
xchg
mov
sub
sbb
push
xor
dec
scas
jmp
push
jl
lret
imul
jae
xchg
add
mov
cmpxchg
mov
cmp
mov
adc
shlb
inc
ss
mov
jne
jmp
fidivl
xorl
movsl
cmp
sahf
push
xor
roll
mov
sbb
test
sbb
inc
or
xchg
addb
add
lock
push
popf
jo
dec
pushf
cmp
xor
pop
ss
push
fs
jecxz
mov
dec
or
inc
push
jne
add
push
cmp
dec
mov
adc
push
aas
pop
cmp
rorl
lret
dec
lret
cmp
adc
sub
sub
enter
mov
mov
or
cmp
and
pop
mov
cmp
loopne
lds
sti
xor
xor
mov
sub
lods
decl
add
inc
enter
fisubs
int3
jbe
xor
rorb
push
aam
xchg
mov
out
std
ret
enter
fucom
lock
adc
inc
loop
jne
outsl
lods
divl
push
push
popf
test
push
sub
dec
shrl
je
add
push
xor
sub
sub
cs
imul
add
push
lret
or
cmp
push
cmp
movsb
lods
test
lock
sbb
sbb
and
push
mov
push
dec
inc
outsb
push
scas
dec
repz
add
jo
dec
insl
arpl
ret
call
add
pusha
into
stc
jnp
push
shlb
icebp
out
inc
mov
daa
push
push
fbld
push
add
mov
inc
aam
xchg
sbb
xchg
jnp
mov
jecxz
cmpsb
or
scas
shrb
sub
addb
sbbl
pusha
cmpsb
pop
xchg
js
sub
cmpb
scas
les
or
inc
jp
sub
pop
adc
pop
xor
sar
push
aaa
cmpb
mov
out
lock
jle
addr16
mov
cmp
xor
dec
call
inc
inc
imul
pop
add
mov
lods
lock
les
into
aam
insb
pusha
sarl
push
jns
jmp
nop
mov
sub
add
or
fwait
aas
xor
jae
call
pusha
push
icebp
adcl
adc
aas
ljmp
enter
jne
aas
jmp
rorb
xor
std
movsb
jno
in
jae
int3
fdivrp
xor
xor
sbb
clc
mov
lds
or
daa
int3
rorb
pop
pop
insl
or
pop
fucom
sub
aaa
mov
mov
xchg
adc
mov
inc
leave
xchg
or
je
shll
dec
iret
mull
sbb
cmpsl
aam
int
lods
and
mov
nop
and
adc
jne
ret
add
data16
sub
and
jmp
pusha
jmp
push
leave
mov
cmp
bound
push
push
mov
adc
es
testl
sub
push
inc
push
outsl
sub
fwait
std
aas
mov
add
gs
mov
cld
dec
and
pusha
mov
roll
fs
push
lds
test
out
rclb
inc
shr
push
pop
call
sub
aas
test
push
mov
inc
lock
jle
orl
xchg
dec
test
pushl
push
xorl
rorb
stos
mov
add
orl
iret
aad
jle
inc
bound
mov
xchg
outsl
pop
idivb
loope,pn
out
pop
push
inc
adc
dec
adc
or
loop
jno,pt
movsl
push
daa
mov
push
popa
push
jae
pop
jg
adc
or
mov
xor
bound
xor
in
dec
push
mov
mov
bound
pusha
or
inc
lock
and
mov
adc
lret
pop
dec
jo
repnz
jg
fistl
mov
xchg
jg
and
je
int
mov
popf
pop
adc
std
jle
mov
enter
ret
sbb
cmp
mov
and
roll
int3
mov
and
jb
and
push
push
lods
fistps
xchg
lret
jecxz
mov
loop
ja
dec
in
call
mov
test
xchg
and
adc
mov
xchg
sti
or
popa
push
inc
rolb
and
push
iret
cld
mov
cmp
ds
jmp
loop
aaa
push
ss
lods
pop
add
sti
mov
or
adc
push
rclb
scas
or
fcmovb
jne
test
into
push
iret
pop
push
pusha
xchg
stos
fdivs
jne
add
inc
jle
jnp
leave
or
sbb
jge
cmp
add
xor
loope
mov
mov
and
mov
pushf
sub
or
es
cmp
adc
mov
loop
mov
testl
mov
jb
jg
sbb
scas
xchg
aam
ret
stc
popa
and
mov
pop
cmp
xor
imul
adc
inc
shl
sbb
shrb
lds
sub
std
jmp
xor
mov
div
cli
popa
add
pushf
arpl
xor
test
add
push
xchg
ss
popa
lahf
dec
mov
ret
adc
pop
ja
sub
pop
xor
mov
adcb
push
lods
je
lret
pop
pop
movsb
and
push
repz
es
andb
fiaddl
lea
dec
lret
lock
xchg
cld
jae
ret
shl
inc
nop
scas
fs
jne
repnz
pop
lret
aam
mov
pop
into
jge
aam
and
lahf
aam
cmp
mov
add
repz
pop
cmp
mov
cmp
fcoms
sub
mov
push
lock
and
xor
test
mov
or
test
fdivr
jmp
popl
and
cmpsb
aas
in
mov
ret
dec
push
into
shlb
sbb
jg
sub
lock
pop
add
jnp
and
sub
fisttpl
jmp
std
jns
add
add
loopne
out
out
or
inc
mov
or
jge
xchg
dec
dec
dec
pop
mov
jns
xor
add
cmpsb
das
mov
idiv
jge
hlt
or
inc
imul
decb
add
stos
sub
cwtl
pop
and
push
jo
xchg
jno
push
inc
shrb
clc
cmp
mov
pop
movsb
mov
xor
cmp
fstl
ror
ficoml
aam
sub
and
adc
shrb
pushf
sbb
mov
fistpll
mov
pop
mov
adc
scas
sub
lea
shlb
mov
dec
sti
clc
hlt
or
mov
cmp
lods
pop
loop
repz
pop
ret
xor
sub
in
mov
cld
jmp
or
loopne
pop
adc
adc
cmp
outsl
cmp
pop
sti
filds
sbb
jno
adc
stc
pop
lods
jmp
imul
nop
js
cmp
mov
adc
push
xchg
or
fs
les
push
dec
inc
in
inc
jns
mov
mov
mov
push
popf
cmp
xor
mov
icebp
xor
loopne
or
and
sub
fs
cltd
test
fisubs
push
add
and
and
pop
mov
cmp
pop
xchg
in
fstps
adc
lods
cmp
mov
sbb
push
gs
lock
push
sub
popa
out
fiadds
or
pop
adc
inc
mov
imulb
clc
int
push
mov
cmp
mov
push
iret
pop
sbb
cmp
fsubr
xchg
push
sub
js
fisttps
ljmp
dec
loopne
adc
jmp
dec
mov
int3
push
nop
fdivrl
add
cmp
out
fwait
xor
sub
lods
dec
fidivs
xor
sti
xor
add
add
sbb
negl
pushf
test
aaa
mov
xchg
push
jge
and
mov
jne
mov
imul
sbb
and
inc
ja
pop
mov
les
cmp
ljmp
jg
xchg
push
lcall
ret
ja
outsb
sbb
xchg
sbb
mov
xor
ljmp
mov
daa
sub
int3
sub
or
test
jl
cmpsb
mov
jg
mov
in
enter
cmc
push
xchg
mov
jo
mov
adc
pop
enter
in
testl
inc
int
enter
mov
sbb
divl
push
sub
cmp
das
cmp
xchg
mov
mov
cmp
pop
inc
xchg
xchg
fists
ds
push
mov
cmp
sti
jne
mov
mov
aam
cs
insl
xchg
pop
mov
push
push
pop
inc
push
push
mov
push
sbb
sbb
shll
push
push
cmp
inc
aad
icebp
dec
cwtl
mov
lret
mov
inc
imul
jns,pn
test
inc
dec
mov
lock
enter
dec
lret
xchg
orb
int
popa
inc
mov
iret
cmp
lods
pop
sub
in
push
nop
insl
xor
cmpsl
les
rcl
ss
mov
cs
adcb
xchg
mov
call
xchg
popa
dec
aad
pop
and
add
sbb
mov
pop
ret
in
incl
inc
outsb
xor
and
scas
or
jne
push
adc
and
faddl
sub
shrb
cmp
adc
fcomps
push
adc
movsl
sub
or
push
or
movsl
cs
ficoms
fsub
cmp
lods
or
dec
jb
xor
lcall
add
adc
pop
dec
push
push
mov
movsl
jb
scas
sbb
fnstcw
mov
stos
inc
pop
insb
push
frstor
inc
pop
jb
lret
insl
jae
outsb
ljmp
jns
dec
cmp
insl
dec
dec
icebp
ss
ficompl
xchg
cmc
and
push
adc
shrb
mov
jecxz
scas
int3
test
or
xor
or
into
orl
mov
scas
jbe
js
nop
adc
lods
scas
dec
mov
mov
mov
or
push
xor
push
test
xchg
into
add
mov
movsb
jo
inc
fs
add
xlat
sub
js
mov
in
pop
lods
les
cs
ret
popa
test
cld
jae
pusha
mov
sbb
fistpl
scas
cmp
add
flds
mov
cmp
cmp
in
push
int3
lret
les
sbb
insl
push
and
jo
jecxz
xchg
repz
call
xchg
mov
fsubs
daa
rorl
cmp
push
jg
inc
jge
clc
cmpsl
xchg
out
add
insl
stc
jbe
xorl
xchg
push
inc
insl
das
out
imul
shlb
sub
aam
and
lahf
aaa
lods
push
cmp
jmp
or
sar
push
in
cwtl
cmp
xor
stc
pusha
scas
jmp
mov
insb
movsb
in
sbb
stc
and
mov
inc
jo
pop
and
in
or
shll
jge
mov
pusha
ret
inc
movb
aam
mov
xor
les
lock
and
lret
hlt
div
int
xlat
call
cmp
add
mov
xchg
aaa
mov
loope
cmp
andb
dec
xchg
aam
rorl
lock
jmp
mov
rcrb
sbb
sub
popl
push
das
adc
je
inc
test
cmp
shlb
sbbb
cmp
mov
mov
ret
lock
mov
xchg
sub
jecxz
out
mov
loop
fsub
cmp
loopne
imul
movsl
push
data16
pop
mov
je
int
imul
incl
mov
push
mov
or
push
iret
adc
es
adc
das
mov
lret
mov
inc
repnz
mov
mov
clc
rcll
movsl
lret
dec
push
add
test
pop
add
sub
rcrb
adc
mov
sub
scas
shll
push
jnp
adc
jl
ljmp
sub
shlb
cld
cmp
inc
adc
push
fcomps
sbb
cmp
fdiv
in
xor
or
xchg
cs
stos
mov
xchg
mov
pop
scas
cmp
out
and
xor
clc
adc
in
cmp
and
bound
jmp
sbb
addr16
mov
mov
rcl
mov
fistps
sarl
pop
sub
jl
bound
andl
lods
xor
ss
movsb
and
xor
mov
sbb
aaa
mov
mov
test
add
adc
fdivrp
fldt
xchg
adc
aam
das
xchg
jecxz
cmp
mov
and
mov
ds
xor
add
xchg
adc
sbb
dec
dec
ljmp
sbb
es
pop
sarb
aam
cs
mov
sahf
xor
adc
and
mov
add
xchg
dec
xchg
shl
push
or
in
sub
sti
imul
and
and
cmpsl
and
paddusw
in
sbb
mov
sub
dec
movsl
outsl
xor
nop
and
jns
fmuls
bound
mov
gs
sbb
call
les
mov
mov
shl
mov
lods
lcall
cld
hlt
xchg
jno
inc
mul
iret
outsb
sub
aaa
pop
mov
mov
arpl
in
dec
jmp
mov
enter
daa
xor
cld
nop
popa
std
mov
out
fnsave
and
pushf
stos
sbb
lods
push
inc
xchg
jns
loop
lock
inc
mov
imul
test
outsb
xgetbv
jmp
ljmp
xor
sbb
fstps
mov
ficompl
pop
mov
popf
sub
outsl
ds
and
dec
push
xchg
mov
mov
adc
into
mov
mov
push
cmpsl
scas
pop
mov
mov
fistpl
or
mov
lcall
sti
inc
mov
sbb
inc
xor
pop
xchg
push
mov
and
bound
ret
mov
cmp
and
rol
enter
mov
add
mov
and
stc
cld
imul
mov
aad
aam
cmp
aam
fimuls
outsb
lods
push
rcl
and
inc
jo
movsl
in
or
and
inc
pusha
xchg
mov
das
sbb
jle
mov
out
or
adc
call
out
xchg
jmp
adc
lock
aam
jl
dec
add
push
jno
les
jnp
shlb
pop
pop
mov
sahf
cs
aaa
cld
test
into
in
xchg
scas
xchg
call
enter
xorb
test
imul
or
imull
jl
daa
outsb
mov
mov
jmp
stc
scas
mov
int3
in
in
xchg
cmp
loop
clc
xchg
inc
add
adc
outsb
sar
cs
insl
jnp
mov
and
clc
shrd
jecxz
mov
push
push
pushf
or
lods
xchg
mov
pusha
loopne
or
xor
jl
push
push
jg
pop
fcmovnu
sbb
outsl
cmp
lods
fisubrl
mov
imul
xchg
fcmovnb
lea
mov
push
jbe
cmpsb
or
loopne
ret
das
jnp
add
outsb
pop
add
xchg
pop
insl
adc
add
stc
adc
adc
push
push
jbe
mov
add
imul
and
lods
shrb
mov
mov
rorb
in
jmp
test
imul
ret
push
adc
jae
push
ss
adcb
xor
lret
inc
arpl
xor
mov
jo
call
loopne
test
clc
jae
aas
int3
lret
sbb
sar
mov
out
icebp
jmp
push
pop
inc
push
or
fldcw
sub
pusha
sar
outsb
adc
fistps
pop
aas
mov
movsb
push
push
push
dec
cmp
iret
insb
push
mov
mov
xor
jnp
jle
stc
push
adc
loopne
mov
xor
pop
adc
nop
mov
fidivrs
inc
cltd
shlb
push
out
les
out
les
push
pusha
mov
mov
mov
jecxz
nop
jp
mov
mov
mov
push
loope
iret
imul
push
shl
in
inc
inc
lcall
adc
test
ror
mov
fs
xor
ret
mov
inc
xchg
daa
pusha
std
test
jg
cmovg
lahf
push
add
inc
pushf
in
push
push
adc
outsl
repnz
xchg
loop
cmp
lods
pop
xor
lds
or
movl
mov
dec
andb
insl
dec
push
sti
xor
inc
xchg
bound
lahf
jo
or
mov
jecxz
and
inc
mov
cmpl
mov
call
movups
jg
movsb
sub
mov
xchg
adc
sub
jne
int
push
pop
jecxz
xor
xor
mov
nop
loop
daa
fistps
dec
pop
xor
jg
int
in
add
and
sub
push
sub
sbb
and
xor
loopne
cmp
adc
icebp
xor
jmp
mov
popa
pop
jae
sbb
cmp
and
sub
mov
rol
lds
dec
xchg
popa
fiaddl
xchg
sub
mov
nop
loopne
mov
adc
ret
or
sbb
dec
movsb
cmpsl
push
jg
add
mov
inc
shl
pushf
cwtl
pop
pop
in
xor
add
test
sbb
mov
dec
dec
cmp
test
test
adc
in
ret
mov
fucomi
xor
in
pop
lret
jb
lods
add
testb
shll
sbb
cmp
stc
scas
out
in
filds
call
xor
test
in
sbb
shlb
lea
dec
lods
push
mov
add
ljmp
int
fdivrs
scas
dec
xchg
add
in
dec
test
add
jg
xchg
aam
les
sub
sub
iret
sbb
pop
cmp
inc
push
sti
pop
cmp
xchg
pop
out
xor
insl
xor
out
jo
push
js
pop
test
xor
or
pop
xorb
adc
xchg
jbe
andb
mov
rcll
sbb
mov
cmpsb
loopne
bound
sbb
xchg
cmp
jge
out
fcoml
xor
out
fsub
sub
cmp
jle
mov
pop
or
lcall
add
push
fst
lds
adc
sbb
mov
mov
or
mov
pusha
pop
lcall
into
xor
test
push
nop
ret
movsb
std
dec
inc
cmc
xchg
mov
xchg
mov
outsb
pop
xchg
mov
dec
out
call
lock
je
push
jle
jnp
push
jle
xor
lea
cmc
pop
mov
xor
lods
movsb
inc
adc
jo
sbb
movsl
subl
jle
xchg
mov
clc
fbstp
lock
sbb
push
repnz
mov
lods
mov
mov
sub
push
xchg
push
fistpl
out
add
or
aas
clc
sarb
daa
xchg
fiaddl
lods
push
pop
sbb
mov
lret
add
int3
sbb
call
ljmp
sbbb
mov
push
lods
jo
lods
loop
fmulp
nop
mov
inc
jmp
in
sbb
or
pop
aaa
or
mov
lods
inc
rolb
pop
mov
outsl
mov
cmp
fmull
push
idivb
mov
adc
shlb
out
xor
in
cmp
es
rorl
lods
inc
pop
fmuls
scas
nop
enter
lret
xlat
les
adc
jae
aaa
int
cli
xor
cmp
jecxz
enter
fstps
out
jl
call
jne
lds
in
inc
pop
enter
cmp
xchg
xchg
fs
mov
add
xchg
mov
xor
mov
mov
sub
mov
outsl
cmp
push
add
fsubrl
fnstcw
mov
sbb
mov
jo
adc
mov
call
movsl
jnp
fcoml
imul
jns
gs
dec
iret
lret
int
aaa
mov
sbb
dec
mov
cmpsl
addb
sub
push
xor
lods
add
ja
adc
add
jo
fdivs
pop
fimuls
in
inc
iret
loop
and
shrl
xchg
xchg
mov
cmp
adc
sbb
pop
mov
push
and
scas
sbb
in
sbb
fidivrl
dec
adc
and
mov
aas
lods
push
outsb
adcl
cmpsb
lods
adc
mov
push
test
xchg
adc
jne
dec
lock
or
int
mov
shr
inc
or
bound
std
jmp
mov
sahf
gs
dec
push
lcall
xor
ds
push
shrb
jne
jecxz
sbb
nop
outsl
inc
cmp
stos
add
push
sub
jl
ret
pop
and
jo
das
push
mov
clc
stos
xor
int3
sbb
sub
adc
flds
movsl
iret
lahf
addr16
mov
push
mov
mov
mov
lea
add
mov
jmp
lods
push
mov
jns
nop
popf
rorb
stos
add
mov
add
lock
add
push
and
fsubr
sbb
dec
mov
lods
idivb
adc
xchg
inc
jmp
mov
inc
push
push
or
and
or
jl
adc
jnp
sbb
loopne
popf
sub
adc
ret
dec
cmp
ljmp
lods
sbb
cmp
mov
shrl
arpl
jg
rcll
lret
lods
mov
add
enter
adc
aam
or
mov
mov
sub
call
rclb
lods
mov
lret
fmull
jecxz
scas
dec
ss
rol
inc
mov
int
push
les
xor
fisubrl
popf
pop
int
mov
mov
fisubrl
cmp
paddusb
jp
adc
add
or
stos
push
mov
dec
xor
icebp
xchg
stos
nop
dec
pushf
xor
jne
cmp
or
lret
jp
push
mov
rolb
adc
int3
shlb
mov
into
in
xor
cmc
pop
dec
out
adc
adc
dec
and
mov
inc
ljmp
ret
xor
dec
lcall
imul
das
push
fnsave
call
scas
push
test
inc
in
sub
sub
and
mov
dec
fcmovnu
outsl
clc
adc
xchg
pop
das
or
push
inc
or
mov
push
ja
popa
dec
xor
sbb
in
adc
or
adc
xchg
rclb
lahf
insl
out
int
repnz
rolb
mov
out
icebp
jg
inc
adc
rol
aas
shrd
movsb
mov
mov
dec
fcmovbe
jge
adc
movsl
movb
pop
shll
lea
ffree
mov
mov
icebp
jmp
lret
hlt
testb
emms
or
or
call
jmp
pusha
jne
daa
in
push
adc
lock
pop
cmp
jl
outsl
sub
mov
mov
push
fwait
mov
dec
sbb
ret
mov
sbb
jno
mov
mov
push
mov
fidivl
movl
mov
cmc
sub
pop
mov
jb
mov
lods
leave
push
insb
inc
sub
stos
dec
sbb
sbb
mov
sub
adc
iret
mov
inc
lcall
daa
inc
and
cmp
divl
jmp
popa
lea
jl
jnp
pop
adc
add
xchg
push
xchg
inc
xlat
insb
sar
xor
fxam
out
cmpsl
inc
ficomps
dec
and
xor
and
add
push
cs
push
stc
and
les
jl
push
iret
dec
movsl
lods
loopne
int
stos
jmp
cli
sbbl
xchg
outsb
xor
cmp
and
adc
sbb
dec
push
ja
insl
andb
pop
stos
outsb
shl
push
fdivrl
mov
ds
icebp
xchg
and
or
out
sbbb
and
xchg
je
adc
aad
sbb
shlb
jp
adc
or
ds
xchg
cmp
jne
xor
xchg
mov
iret
lods
cmp
shrl
mov
sub
sub
xor
push
ja
in
and
lahf
xor
cmpsl
repz
mov
div
lock
sub
jmp
and
add
cld
sbb
adc
repnz
push
gs
mov
mov
aaa
inc
push
rcll
shl
mov
aad
ss
nop
xor
mov
out
push
jmp
pop
add
xor
inc
shll
cmpsl
cmp
add
and
or
jge
lods
inc
adc
nop
test
movsb
iret
push
icebp
in
cs
aas
nop
sahf
push
jmp
xchg
mov
xlat
xchg
jne
mov
push
scas
sub
gs
jg
and
sbb
out
mov
cmp
cmpsl
jp
push
xor
loopne
scas
lock
pop
shll
sbb
stc
mov
test
sub
pusha
ret
idivb
and
clc
repnz
pop
sub
mov
cmpl
jg
bound
inc
push
andl
pop
xor
xchg
xor
push
mov
call
jno
xor
lret
lods
fsubr
pop
add
xor
shr
adc
sbbl
cwtl
test
mov
add
adc
push
push
subb
mov
aam
repnz
or
hlt
arpl
shrl
xor
jg
test
xchg
shlb
sarb
sarb
fstpt
movsb
xlat
mov
jnp
mov
push
dec
sahf
adc
inc
cmp
imul
pop
rorb
inc
cs
movsb
push
idivl
fbstp
sti
daa
andb
push
pop
aam
xchg
shlb
test
imul
mov
dec
xor
movsb
cmovge
push
mov
inc
cs
and
sub
sbb
push
lahf
insl
xor
xlat
inc
jg
push
cs
xlat
sahf
mov
sub
xor
xlat
inc
push
sub
cmpsl
push
dec
test
jbe
push
sub
mov
add
das
xor
mov
cwtl
sub
xor
pop
dec
popf
sub
xor
ss
sub
test
pusha
loop
sub
je
pop
shlb
pop
ret
popf
mov
out
pusha
mov
pop
and
push
pop
mov
cs
test
sub
inc
shrl
add
sub
int
mov
push
xchg
cmc
insl
out
popf
xor
mov
dec
push
ror
loop
sub
push
nop
lahf
pop
xchg
jge
in
mov
loop
into
call
sub
aaa
and
mov
das
repnz
xchg
dec
pop
sub
sahf
movsl
lea
inc
push
adc
cmpsb
adc
lahf
rcrb
adc
mov
cmp
bnd
pop
rcrb
mov
xor
nop
into
xlat
inc
dec
sub
int3
daa
add
push
repnz
outsb
xor
aam
add
and
test
jns
cmp
pop
repz
inc
push
or
mov
xor
and
push
addr16
push
insl
ja
ret
pop
repnz
xchg
inc
pop
rorl
pushf
mov
push
repnz
sahf
dec
nop
mov
sahf
pop
push
js
cmp
xor
dec
mov
scas
inc
and
cmpsl
sub
add
pusha
dec
loop
cmc
mov
xchg
mov
loopne
test
xchg
popw
dec
ficoms
ds
mov
or
mov
xor
cmp
sub
push
aas
outsl
sbb
scas
pop
lds
ja
iret
or
push
rclb
fs
mov
cmp
jbe
xchg
into
jecxz
scas
fs
fildll
test
adc
into
inc
fwait
call
clc
outsl
inc
sbb
out
xchg
adc
jecxz
addr16
adc
dec
iret
xor
lahf
dec
push
and
dec
adc
loop
shrb
dec
into
rol
jge
xor
pop
shrb
lods
sbb
jl
cmpsl
pusha
push
xlat
loopne
pop
pop
adc
test
subl
cli
shl
and
imul
rclb
xchg
pop
xor
repz
cmp
xor
xor
jl
divl
xchg
xor
hlt
pop
push
fidivs
sub
and
sub
and
cmp
cld
mov
fmul
rcl
add
shl
clc
in
loopne
mov
jle
mov
in
aaa
fs
in
inc
inc
lret
add
push
jl
jecxz
or
stos
sahf
insl
fstpt
cmp
pop
xchg
lods
lea
outsl
push
sar
lods
sti
mov
xor
outsl
jle
cmc
cmp
mov
bound
loop
add
orb
fdivr
pop
sub
std
lods
sbb
repnz
out
lods
pop
and
lods
rcrb
mov
pushl
movsb
mov
pop
xchg
stos
outsb
sbb
rorl
mov
push
ds
or
stos
lods
leave
int
scas
sti
fnsave
xchg
subl
dec
cmp
cmpsl
sti
adc
test
das
or
insl
or
mov
shlb
cmp
push
mov
sub
inc
cmp
imul
cs
lods
cmc
push
jmp
mov
push
push
pop
mov
jmp
sahf
aam
xor
jns
xlat
addb
loop
jo
sbb
push
or
pop
decl
aam
mov
ss
ds
fiaddl
icebp
fsubrs
dec
xor
movsl
push
lret
lcall
fcompl
adcb
xchg
xor
mov
repz
push
inc
cmp
ds
adc
mov
sbb
or
shrl
lods
jp
sbb
shll
test
cmp
addb
ljmp
xchg
push
repz
stos
adc
sub
jns
hlt
fcoml
in
ret
mov
ret
sub
aas
pop
mov
jmp
sbb
push
das
sub
adc
and
add
inc
clc
arpl
push
in
icebp
jle
and
ss
divl
ljmp
test
mov
in
and
add
sar
inc
inc
out
js
movsb
or
inc
inc
out
outsb
pop
xchg
lods
cmc
insb
inc
and
mov
jl
rcl
inc
adc
insl
popf
enter
xchg
ret
mov
cmp
mov
iret
enter
xchg
jns
xchg
sub
sbb
repz
insb
sti
xor
clc
rcrb
xchg
in
iret
adc
movsl
jo
repz
push
jno
dec
aaa
mov
cmp
and
xchg
popa
je
stos
adc
xor
inc
dec
fadds
inc
mov
fisubs
adc
call
cmc
xchg
xor
pusha
push
rcrb
xor
pavgb
xchg
sti
or
add
nop
rorb
pop
sub
ljmp
aad
xchg
dec
cmp
pop
andb
shl
sub
xchg
mov
and
filds
dec
mov
add
imul
popl
xorb
aaa
inc
jo
sbb
xchg
loopne
testl
in
cmp
xor
push
inc
cmp
jecxz
mov
inc
mov
dec
aas
fprem
and
jne
sub
inc
cwtl
inc
daa
xor
and
shlb
hlt
mov
dec
fisubl
cwtl
movsb
xor
mov
xchg
push
sub
fistpl
in
sub
pop
repz
sbb
mov
xor
push
xor
sti
push
repnz
addr16
lahf
cwtl
inc
out
push
adc
sahf
fsubrl
andl
test
int3
xchg
sbb
gs
cmpsl
movsb
aas
mov
ret
repnz
jge
popf
or
xchg
insb
adc
sub
ret
mov
sub
cli
sbb
dec
bound
leave
test
mov
enter
xchg
jnp
ret
cmp
adc
les
inc
push
pusha
sbb
push
arpl
adc
sub
ficomps
xor
sbb
ret
hlt
fists
push
aas
cmp
mov
lahf
loop
sahf
movsb
xor
mov
test
sti
movsb
daa
push
mov
lods
icebp
mov
movsl
jge
ret
jae
icebp
loopne
popf
jbe
dec
aaa
mov
les
test
inc
bound
mov
sub
and
adc
loopne
int3
adc
cs
inc
nop
mov
sub
fmuls
idivl
sbb
and
cmp
test
and
rolb
gs
mov
push
popa
and
adc
aam
repnz
lret
sbb
mov
mov
out
lahf
or
out
lock
and
jnp
xor
jns
push
and
imul
setp
mov
push
push
cmp
pop
dec
dec
adc
outsb
xor
aam
outsl
and
sahf
scas
pop
loop
xchg
pop
loopne
das
ret
mov
andl
jecxz
xor
push
push
mov
push
insb
mov
or
in
inc
adc
adc
xchg
daa
mov
pop
cmp
jmp
jnp
lock
rcl
xchg
lods
jp
mov
mov
add
imul
add
in
xor
sbb
mov
sbb
jo
cmp
lods
mov
sbb
push
bound
aad
push
pop
or
leave
lret
dec
xchg
pop
dec
out
das
inc
jnp
test
sub
movsb
fs
jns
aam
cld
lds
shr
out
scas
into
xor
xor
pop
js
xlat
jb
enter
xor
cmp
and
jo
stos
dec
push
rcrb
pop
fbstp
outsb
push
inc
push
loope
fisubrs
sbb
fcoms
cmp
xor
cmpsb
movsb
jg
push
xlat
je
inc
xchg
cmp
sbb
and
cmp
jl
pop
cmpsl
dec
daa
dec
adc
push
pop
aam
test
sbb
inc
std
lock
movsb
xchg
xchg
and
lock
in
add
mov
shr
xbegin
repnz
mov
xchg
push
push
inc
xchg
std
jle
pusha
dec
push
push
xor
mov
pop
mov
xor
daa
data16
rcrb
iret
xor
popf
iret
xor
adc
les
pop
in
and
aam
in
dec
mov
adc
scas
popf
pushf
dec
inc
adc
add
xlat
and
mov
hlt
mov
fsubrl
jbe
sbb
fmuls
pop
add
lcall
push
dec
or
push
and
into
jecxz
aas
jb
pop
inc
and
pop
fdivrl
sub
and
in
into
adc
mov
push
adc
sbb
lock
jo
inc
adcb
mov
outsb
enter
mov
and
loope
in
jmp
mov
mov
fcomps
sbb
imul
cld
push
fwait
cmp
insb
sbb
movsb
mov
mov
push
cmp
mov
fisttpll
dec
es
mov
lods
push
loop
and
loopne
in
mov
loopne
shrb
mov
and
or
pop
jle
jae
xor
les
aaa
add
movsb
sub
addr16
movsl
arpl
mov
in
in
dec
jg
push
sub
mov
xor
in
cli
ja
in
cmp
or
sbb
push
inc
out
inc
cmp
rol
jbe
add
jnp
jecxz
add
sbb
insl
icebp
je
mov
bound
inc
sbb
xor
push
mov
data16
mov
cld
pop
dec
shrb
bound
lods
cmp
jmp
adc
push
xor
enter
pop
sub
fwait
mov
cmp
jl
mov
and
decl
mov
dec
cvttps2pi
loope
inc
test
out
and
iret
mov
insb
pop
in
adc
in
sbb
sbb
dec
push
stos
adc
or
into
in
sbb
adc
sbb
bound
jmp
test
push
xor
lock
cld
lods
add
jbe
loopne
js
sub
lods
shrb
int
xchg
dec
into
ret
push
or
jle
cltd
pop
lret
push
cmp
repz
iret
dec
pusha
js
lahf
aam
jmp
out
shlb
aaa
loop
cmpsl
pop
dec
adc
and
xchg
scas
std
outsb
mov
inc
es
xor
and
nop
xchg
aaa
cmp
sbb
sarl
clc
rorl
xchg
dec
sbb
push
ret
ljmp
call
out
cwtl
pusha
divl
push
mov
sbb
cmp
nop
cli
in
push
int3
ret
nop
cli
jge
int
lret
in
xor
sti
mov
cwtl
push
cmpsl
mov
popa
int
into
pop
pop
cmp
lods
mov
cmpsb
and
jle
sbb
lahf
push
jo
mov
ret
test
dec
and
das
ja
dec
mov
sbb
scas
addr16
ss
add
and
int3
das
rorb
xlat
pushf
rclb
sub
cmp
xchg
inc
add
push
pop
push
or
repz
ss
jno
xlat
xor
push
imul
cmp
push
outsb
cmp
pop
jne
data16
push
rep
dec
and
mov
sub
mov
sahf
xor
aam
cli
mov
pusha
jo
xchg
rolb
shrb
int3
add
iret
cmp
mov
mov
inc
pop
xchg
hlt
add
jb
cmpsl
bound
call
sti
rcrl
imul
xchg
mov
adc
hlt
clc
xchg
int
pushf
jnp
xchg
mov
in
sbb
insb
fdivrl
pop
sbb
sub
cli
cmpxchg
adc
and
push
dec
pop
js
aas
pop
mov
adc
jbe
xchg
call
xor
push
cmp
aas
repnz
pop
and
inc
sbb
adc
mov
sbb
incb
js
mov
mov
int3
cwtl
call
adc
idivl
mov
adc
sub
sub
lea
bound
adc
out
add
xor
adc
cmpsl
ss
sub
push
push
scas
mov
call
sbb
cltd
and
adc
aas
nop
inc
adc
mov
push
xchg
push
fs
mov
in
and
pusha
int3
pop
js
xorb
pop
dec
dec
fisttpl
sub
cmp
mov
and
cltd
jo
sahf
adc
mov
xor
scas
mov
jno
fmul
jb
sbb
subl
or
mov
pusha
or
push
push
pop
iret
nop
push
mov
sub
into
jg
xor
pop
sbb
push
mov
out
lods
dec
sub
push
sbb
movsb
cmovne
jnp
bound
je
stos
faddl
cmpsb
int3
push
xor
into
fcomps
pop
dec
adc
ss
cs
iret
adc
cmp
dec
jl
jg
mov
add
in
xchg
shl
lods
sbb
jg
in
out
pop
dec
rcll
dec
mov
sub
rcl
cmp
aam
pop
sti
pusha
jo
sub
jae
cmovnp
test
inc
sbb
rcll
dec
xchg
push
es
in
sbb
push
insb
cmp
fdivrp
sbb
pop
cmpsl
call
dec
fistpll
xor
loopne
rorb
xchg
or
xor
btcl
pop
aas
ret
or
cld
adc
and
push
adc
pop
mov
xor
xor
movsl
bound
enter
das
pushf
sbb
push
inc
lds
push
mov
arpl
cmovge
cmp
adc
or
mov
cltd
adc
clc
pop
scas
push
dec
arpl
iret
out
loope
das
xor
nop
mov
cmp
hlt
xor
cmp
mov
cmpb
pop
jle
lock
mov
add
mov
xor
mov
inc
iret
repnz
xchg
daa
stc
dec
xchg
and
xchg
imul
lods
or
push
clc
and
imul
sbb
fildll
cmp
addr16
pop
dec
or
or
pop
cmp
or
mov
cmp
test
inc
inc
push
sbb
jmp
mov
out
and
jmp
call
jnp
fwait
jmp
imul
pop
movnti
jnp
mov
and
sub
cli
dec
cmpsl
nop
inc
mov
roll
push
xor
inc
pop
loopne
mov
or
xchg
imul
push
add
pop
pusha
xchg
int3
mov
adc
sub
push
xchg
cltd
xlat
mov
bound
sarl
jb
fidivl
cvtps2pd
dec
push
aam
rorb
lcall
inc
jne
mov
adc
xor
js
cmp
dec
pushf
sti
cmp
xor
add
xor
mov
mov
imul
xchg
stos
int
fs
pop
sub
or
adc
cmp
sub
pop
imul
cmp
and
fwait
jnp
fs
decl
ret
mov
cmp
cmp
aam
jg
out
sbb
ds
clc
jmp
cs
repz
sbb
xor
mov
rolb
rolb
btc
lcall
aad
pusha
repz
dec
cwtl
dec
es
xchg
arpl
in
ffree
push
mov
push
sub
cs
and
sbb
xchg
mov
cld
fxch
xor
jl
loopne
cwtl
aas
cmpxchg8b
iret
scas
hlt
push
sub
xor
lds
or
sub
mov
lods
rol
mov
or
lahf
movq
sbb
adc
iret
sahf
fsubrs
inc
das
jl
fcmovne
sub
sub
stos
mov
sbb
outsl
call
or
std
jno
in
imull
or
adc
push
dec
and
bound
data16
or
cs
aam
sub
cmpsl
hlt
call
out
cmpsb
sbb
add
out
xchg
xchg
lret
cltd
cmpsl
xchg
ja
fsub
out
mov
fst
mov
jp
das
fwait
sbb
sbb
mov
cwtl
inc
xor
int
loopne
adc
sahf
movsb
mov
jecxz
mov
adc
mov
cltd
shr
sub
or
and
loopne
lods
mov
xchg
xchg
pop
divl
mov
or
mov
push
or
andb
loopne
xlat
int3
mov
ds
loopne
push
roll
adc
in
scas
repz
fs
enter
xor
jge
std
fcompl
add
fidivrs
push
arpl
adc
jb
lret
test
push
insb
mov
jle
jge
fcompl
test
pusha
clc
iret
outsl
and
add
out
mov
popf
ret
xchg
xchg
jle
xor
mov
sub
mov
std
ret
sub
sbb
mov
inc
mov
push
lret
sbb
xchg
and
and
fs
and
popf
mov
iret
or
sub
cmp
pop
mov
mov
punpcklwd
outsl
aas
dec
jo
push
insb
mov
xor
call
shl
fildl
fcmovnu
hlt
push
push
sbb
or
stc
jg
cmp
xchg
ret
daa
std
and
pop
jb
pop
shlb
push
xor
jo
das
mov
or
pop
rolb
xchg
or
lods
insl
fsub
mov
xchg
jo
mov
lret
test
rclb
fcompl
fisubrl
mov
push
pop
mov
dec
push
repz
push
inc
orb
xor
bound
mov
cmp
aad
sbb
fs
int3
pop
xor
mov
lock
sub
push
sti
scas
lret
mov
scas
popf
mov
cltd
scas
test
sbb
call
pusha
push
cmpsl
xor
mov
jmp
mov
shrb
xor
inc
pop
frstor
enter
cs
adc
aam
sbb
out
mov
sub
xor
xor
pop
daa
pop
les
rolb
xadd
mov
adc
jb
jbe
outsl
fstl
imul
cs
jnp
sbb
test
ret
push
fst
out
subl
mov
sub
xor
sbbl
xor
mov
lahf
xchg
push
test
push
xorb
add
aam
xor
rcrb
paddq
mov
xor
xorb
in
aam
les
pop
fadds
mov
jae
sahf
dec
mov
cltd
xor
ss
vmwrite
lahf
and
pop
adc
test
push
add
movsl
ficoml
xor
sbb
sqrtps
aam
in
xor
fmul
fs
comiss
in
or
adc
loopne
and
bound
pop
add
sti
xor
rorl
push
xcrypt-cbc
cmpsl
xchg
xchg
orb
xor
push
and
in
jno
cmp
in
sarb
divl
xchg
sub
sbbb
xchg
adc
fdivrl
test
fdivrl
ret
push
or
setnp
and
dec
aad
mov
int3
addb
shl
mulb
lods
scas
pop
dec
adcl
xchg
nop
notl
punpcklbw
hlt
daa
lock
pcmpeqb
jnp
cmp
imul
cs
mov
rclb
sub
xor
insb
adc
pop
xor
ds
xor
xor
fsubrl
push
mov
xor
nop
and
ds
pop
test
cmpsl
rcll
cmpsl
int
xchg
xor
cmpsl
cmpsb
movsb
pop
mov
mov
inc
es
xor
or
inc
cwtl
jle
outsl
xchg
iret
sub
lea
push
xchg
cmovge
pop
cs
das
loopne
aas
mov
fucomip
pop
sub
out
sub
mov
lahf
sbb
shrb
out
xchg
add
xlat
loopne
adcb
cmp
and
fnstenv
insl
pushf
mov
stc
int
out
mov
adc
mov
jae
shlb
clc
hlt
mov
call
lahf
out
xlat
mov
push
and
pop
xchg
xchg
mov
insl
xor
jmp
pop
aaa
and
sbb
adc
in
call
out
outsl
cmp
in
sbb
mov
mov
xor
clc
adc
shrd
push
pop
movsl
xchg
or
xorl
into
xor
xchg
dec
lods
or
ljmp
pop
ljmp
movsl
xchg
iret
dec
pop
mov
jb
nop
data16
loopne
push
in
shlb
xor
push
jno
rolb
sbb
lods
mov
fcompl
cmpsl
out
jns
add
mov
ret
outsl
ficoms
xor
xchg
add
stos
sahf
out
shll
pusha
js
jp
inc
inc
repnz
lahf
jo
sub
imul
or
fsubs
popa
jo
sbb
bound
int
mov
pop
or
sbb
lds
mov
pushf
add
dec
push
cs
cmp
xor
shll
jmp
xchg
insl
xor
iret
dec
pusha
bound
in
insb
adc
jno
lea
sbb
aaa
bound
or
dec
jmp
lods
ljmp
enter
gs
add
xchg
mov
jle
jo
pop
or
xor
xor
pop
je
pop
nop
lahf
cmp
lret
outsb
cli
mov
and
xchg
jg
and
sub
push
mov
insb
lret
xor
add
fisttpl
jl
into
pop
and
and
scas
inc
lods
jno
pop
jmp
pusha
push
push
daa
jle
xchg
pop
test
fsubr
mov
add
pop
cmp
pop
add
in
cwtl
in
pushf
cmp
ficompl
imul
mov
inc
insl
push
into
ss
mov
inc
fldt
inc
jmp
daa
fucomp
mov
or
dec
and
push
jnp
lock
call
mov
fnsave
mov
clc
xlat
in
mov
cmp
mov
mov
inc
xchg
xchg
aaa
stos
cmc
sar
jne
test
sbb
sarb
mov
dec
ja
out
rolb
bound
sub
scas
mov
jl
sub
and
xor
cmp
mov
push
popa
or
and
or
inc
or
sub
push
cmp
adc
dec
xchg
sbb
and
outsl
mov
stc
jp
pop
scas
in
mov
adc
xor
inc
subb
data16
adc
mov
jnp
ja
jo
sti
mov
pusha
inc
insb
imul
adcl
imul
lret
rolb
les
sbb
add
inc
push
rol
call
es
aam
sub
jmp
fwait
xchg
inc
jecxz
jne
cs
test
mov
iret
push
inc
pop
push
lods
daa
xchg
fs
mul
mov
add
mov
movsb
or
pop
call
mov
mov
dec
outsb
lret
sbb
adc
loop
cwtl
adc
pop
movsl
inc
icebp
cmp
in
data16
pop
aad
dec
fdivs
jg
mov
aad
mov
sbb
or
out
aad
lock
in
and
mov
out
lcall
xor
add
int
iret
cmpsb
loopne
in
shl
xlat
lock
les
es
rolb
aaa
sbb
leave
mov
mov
fwait
mov
adc
mov
jae
dec
inc
lret
mov
sbb
fs
ror
leave
lock
sahf
mov
jo
call
icebp
sub
int3
es
sub
js
lret
movsl
inc
mov
xchg
adc
pop
add
lods
add
xor
sbb
push
loopne
bound
cmp
call
jo
enter
pushf
dec
sar
pop
cmp
pop
mov
out
jb
lods
inc
faddp
mov
addl
sahf
cld
punpckhbw
loopne
rol
mov
sbb
pop
inc
insl
bound
sahf
popa
dec
pusha
jb
push
or
iret
or
lods
out
loopne
cli
cmc
cld
mov
adc
imul
fcoml
push
adc
jae
pop
pop
mov
push
cmpsb
mov
sub
pop
clc
mov
dec
lods
mov
adc
adc
js
ret
jno
cmp
loopne
pop
add
push
repz
loope
cmp
outsl
shlb
daa
imul
jns
mov
jae
sbb
inc
shlb
cs
outsb
dec
cmp
lods
aaa
jo
pmuludq
or
fstl
jg
mov
push
xchg
repz
fldcw
insb
test
jb
mov
pop
rclb
cmp
idiv
mov
aas
int3
xchg
das
adc
xchg
jecxz
mov
xorl
call
sbb
bound
xor
sub
sub
sub
fistl
repz
mov
insl
push
jnp
add
xchg
loop
lcall
fcompl
insl
xchg
mov
hlt
lret
test
call
mov
xchg
ja
pushf
rorb
sub
pop
mov
ret
dec
mov
imul
into
dec
add
sbb
xor
mov
mov
mov
loope
add
and
jg
int3
pop
in
xor
es
xchg
dec
lods
lahf
ljmp
xchg
sbb
sub
pop
xchg
mov
sub
mov
negb
loop
pop
std
loopne
ds
orb
cmp
xor
mov
aas
fcom
cmp
pop
jbe
push
lahf
xorl
push
fdivr
test
sti
f2xm1
cmp
mov
sub
movsb
fsubl
dec
or
push
xchg
movsl
out
add
add
jle
call
je
xor
pop
cmp
push
jbe
mov
sub
stos
adc
lods
dec
imul
lret
mov
and
fsub
aam
cmp
xor
test
repnz
jnp
fwait
cld
mov
clc
mov
scas
add
inc
cmp
xchg
jne
nop
shrl
xor
lret
push
sahf
cmp
stos
dec
nop
mov
mov
pop
dec
jmp
push
cmpsl
andb
dec
mov
jno
add
cld
fistpl
nop
jmp
jge
fisubs
dec
test
cmp
loop
mov
test
stos
jne
mov
jmp
sarl
cmp
xor
cmpsb
lock
lock
fidivl
inc
xchg
adc
mov
xlat
adc
ja
loop
push
das
aad
cmp
mov
aaa
ret
mov
lret
mov
ret
mov
xor
add
lods
enter
inc
dec
and
mov
cmp
dec
fdiv
sub
or
and
aam
scas
scas
out
xchg
mov
sub
sbb
mov
and
fwait
out
add
sub
mov
mov
out
fidivrl
pop
xor
push
or
mov
es
nopl
int3
lahf
and
out
sbbb
or
sahf
std
adc
ret
ljmp
ja
add
repnz
mov
loop
mov
xchg
aam
ret
mov
dec
xchg
bound
xor
bound
cwtl
add
mov
mov
adc
sarb
data16
ret
dec
addr16
dec
adc
imul
fcoms
mov
fsubp
push
arpl
clc
inc
cs
pop
in
jl
lret
call
shrb
lods
add
push
out
test
adc
mov
into
dec
push
and
fisubrs
int
cwtl
test
cmp
add
dec
mov
cli
lahf
mov
xchg
pop
pop
ret
and
scas
call
les
mov
nop
fstpt
sub
add
clc
cmp
std
xchg
popf
shll
loopne
xchg
pop
insb
xor
sbb
pop
in
adc
add
pushf
sbb
out
mov
xchg
daa
jge
mov
add
hlt
mov
mov
rcrb
sub
add
ljmp
cmp
add
xchg
adc
sbb
inc
xchg
pop
xor
mov
xor
and
ja
add
adc
xchg
sahf
les
cli
sbb
vmread
jnp
sub
rclb
ljmp
out
mov
jnp
push
in
sbb
insl
mov
lcall
cmp
fmul
int3
imul
ror
xor
fists
xchg
or
call
shrb
push
xchg
test
in
add
inc
push
outsl
jge
dec
lahf
es
test
loop
and
or
adc
sbb
cmc
adc
dec
pop
ljmp
mov
lods
add
call
xchg
or
fistpll
mov
movsb
and
aas
mov
andl
bound
cmpsb
stos
mov
dec
test
loopne
add
aaa
rcrb
es
adc
sub
pop
lock
jnp
add
addr16
bound
pop
sbb
lahf
call
shr
and
mov
xlat
xor
xchg
adc
popf
cltd
cmpsl
outsl
push
sbb
push
mov
mov
xor
clc
insl
dec
sub
sub
xchg
inc
bnd
fsubrs
shl
les
and
sbb
xor
icebp
xor
jecxz
or
adc
pop
shll
inc
mov
jl
pop
add
ds
fwait
mov
and
insb
and
sbb
mov
mov
jae
pop
add
mov
push
jnp
xor
sbb
inc
jae
shlb
cld
lahf
lods
sbb
adc
and
push
push
popf
push
shlb
outsl
and
mov
pop
fldt
sbb
jnp
sbb
and
mov
adc
mov
cltd
fs
mov
adc
add
ret
addr16
ja
xor
pop
iret
adc
sbb
push
sti
adc
sbb
pop
jnp
sahf
outsl
inc
lret
lods
aad
add
mov
adc
fistl
ud1
pop
sub
xchg
mov
dec
call
push
and
inc
xor
es
adc
sbb
inc
and
insb
lahf
lcall
fdivl
adc
sub
dec
popf
ja
jnp
into
clc
mov
in
mov
dec
cmp
jo
pop
push
bound
out
jge
cmpl
xchg
push
loopne
cmpsb
mov
push
out
push
jp
xchg
xor
jne
inc
adc
push
mov
pop
imul
cltd
repz
adc
dec
xor
or
sub
sbb
xor
cmp
in
fldl
cmp
jne
adc
in
cld
mov
into
pop
mov
fs
and
in
cs
rolb
dec
or
inc
adc
mov
adc
or
clc
mov
stc
out
hlt
mov
rol
pop
lahf
aad
movsb
sti
jmp
mov
push
cltd
pop
gs
ror
and
push
movsb
cmp
lret
fisubrl
xchg
or
daa
xchg
iret
orl
pop
mov
jne
xor
sbb
and
adc
or
ds
cld
fwait
test
call
pop
aam
adc
fmuls
ret
rclb
mov
jns
jecxz
cmp
cld
xlat
sbb
xor
xor
cli
mov
or
or
pop
outsb
cli
dec
fcompl
or
nop
rclb
decl
out
fucomi
aaa
pop
jnp
mov
ret
int3
mov
mov
mov
jecxz
in
lcall
in
fbld
jo
sub
jns
pop
testl
xor
inc
pushf
das
int
mov
repnz
pop
jle
ss
inc
cmp
xchg
call
aaa
addr16
xchg
adc
jl
xorb
ds
sbb
rcrb
cmp
ds
hlt
ret
daa
loopne
cli
mov
push
lahf
out
arpl
pop
nop
dec
sub
mov
and
xchg
inc
dec
shll
adc
imul
das
ret
and
adc
pop
call
lock
mov
lock
pop
or
sti
xor
push
fdivp
xchg
dec
adc
mov
cwtl
lahf
and
lea
shrl
cmp
mov
sbb
push
cmova
sbb
lret
add
ficomps
fiadds
rorl
and
pop
loop
imul
pusha
jnp
hlt
sub
out
or
sub
fst
fdivrl
mov
add
push
lret
sbb
fstpt
or
ljmp
je
push
inc
scas
and
bound
mov
insl
sub
mov
mov
imull
pop
outsl
xor
popf
lods
lods
adc
jnp
iret
or
or
and
xchg
imul
iret
bound
mov
xchg
repnz
movsb
in
adc
fstpt
cmp
imull
xor
hlt
inc
xor
dec
pop
sub
push
adc
push
out
repz
or
sbb
and
mov
or
ljmp
mov
fadds
iret
jl
fidivrl
dec
fcomi
xchg
add
and
xchg
sub
sbb
xor
xchg
xor
call
rorl
les
xchg
push
mov
dec
pushf
mov
pusha
mov
and
daa
rcr
mov
arpl
mov
mov
xor
shl
mov
adc
xchg
sbb
dec
orb
cwtl
xchg
mov
adc
jae
clc
xchg
xchg
in
into
sub
sub
sbb
mov
in
add
pop
pop
lret
ja
and
mov
inc
test
pop
insb
mov
push
mov
hlt
mov
cmp
pop
repz
pop
aam
sahf
scas
cmc
rolb
out
xchg
cmp
and
ror
aas
xor
je
and
cltd
xchg
push
iret
sahf
pop
nop
push
mov
fistl
stos
call
inc
and
imul
sub
or
jp
or
bound
xchg
cmp
pop
mov
push
mov
es
mov
dec
sbb
and
adc
lock
cmpl
bound
ljmp
adc
adc
call
lods
ljmp
push
xor
and
test
mov
mov
push
push
sahf
out
lods
iret
jbe
stos
push
jp
inc
ss
sar
insl
loopne
cmp
adc
push
add
imul
jp
test
jmp
call
push
shl
loopne
push
ret
movsb
pop
inc
bound
jmp
and
mov
sti
push
fstps
add
inc
pop
xor
mov
call
call
fisubl
mov
out
pusha
push
adc
lods
xor
int
sbb
scas
push
addl
out
mov
xchg
sbb
pop
jb
sbb
aas
push
hlt
ja
scas
idivl
jl
inc
rorl
cmp
add
into
adc
jo
fimull
nop
dec
or
pop
sub
jo
cmp
outsb
mulb
cmp
jbe
js
sub
mov
fmull
mov
cmpsb
into
pop
xor
sbbb
call
les
sahf
mov
jns
loop
out
and
inc
rorl
or
scas
mov
jne
pushf
loope
add
push
jmp
xorb
jmp
and
jno
je
pop
data16
xlat
mov
and
cmp
clc
mov
pop
stos
aam
pop
adc
jmp
nop
iret
shlb
adc
sbb
loop
push
adc
gs
mov
and
xor
push
pop
shl
subl
lods
lods
loopne
add
mov
or
jo
xor
rolb
adc
pop
cmpsl
mov
xchg
lahf
addb
pop
scas
jb
xchg
fcmovnu
fisubs
and
jge
push
rol
xor
into
fcomps
cs
mov
adc
jmp
in
mov
add
pop
adc
add
sbb
fisttps
iret
mov
xor
gs
sti
jno
dec
lahf
js
adc
in
pop
and
hlt
test
jbe
jg
sub
outsl
bound
out
cmp
xchg
imul
jl
push
push
xor
es
pushf
mov
push
fsts
jne
lret
int
test
ds
push
icebp
xor
sub
add
ss
pusha
xor
notl
sbb
adc
dec
pop
daa
push
xchg
mov
jnp
xor
sub
xchg
out
out
pop
sbb
mov
rolb
sbb
fnstcw
and
or
test
sbb
nop
daa
pop
push
dec
push
call
outsl
jmp
iret
repnz
test
lods
lods
rorl
mov
sbb
xor
mov
mov
or
jb
jg
xor
and
adc
out
adc
icebp
sbb
loope
enter
cmp
mov
xor
loopne
sub
nop
int3
je
push
das
inc
fdivl
dec
and
lret
xchg
lret
sub
pop
and
sti
cmc
pushf
sahf
ficoml
sub
fdivrl
lret
int3
xchg
je
jo
scas
hlt
in
in
mov
sbb
ss
xor
pop
mov
popa
fldenv
adc
mov
enter
test
divps
aaa
fsubrs
loope
stos
iret
js
jle
mov
sti
jo
in
jecxz
mov
sub
xchg
sub
push
lods
and
xor
dec
and
xor
or
pop
jae
adc
jle
jnp
lds
and
icebp
aaa
sub
dec
aam
pop
adc
dec
cmp
adc
push
pop
call
inc
rcll
in
bound
aas
xchg
add
mov
sarb
sbb
xor
test
jl
sub
add
pusha
fdivrp
lcall
sub
sbb
sub
mov
in
repnz
pop
xchg
pushf
enter
lods
or
xor
sub
sbb
gs
xor
mov
mov
add
mov
rol
in
popw
int3
mov
movsb
aam
rcrb
jecxz
fadds
cmc
imull
adc
mov
cmpsl
xlat
cmp
inc
je
mov
jle
ds
pop
int3
or
lahf
comiss
sbb
mov
in
jo
xchg
mov
add
lahf
mov
lret
push
out
test
xlat
sub
cmpsl
mov
in
push
daa
or
dec
push
icebp
push
or
scas
shrl
cmp
lret
cmpsl
adc
loopne
mov
aas
push
or
adc
mov
mov
scas
stos
mov
imul
mov
or
push
mov
sub
pop
nop
shlb
inc
adc
pushf
shlb
sbb
mov
in
iret
scas
fimuls
xor
sub
inc
adc
popa
jl
inc
mov
bound
cwtl
pop
and
into
mov
jmp
inc
pop
push
jle
cmp
jmp
sbb
adc
push
fwait
mov
les
push
rcll
in
ret
or
or
repnz
repnz
push
fcompl
pop
sub
or
out
mov
mov
cmc
jg
lcall
and
or
jae
nop
and
sti
inc
jmp
testl
mov
push
call
outsl
sbb
lods
sub
mov
jecxz
std
loope
push
sub
add
outsb
outsl
cmc
cmovb
fsubrp
adc
mov
cmp
iret
clc
stc
popa
mov
cmp
js
xor
push
fisubl
pop
push
jl
ljmp
dec
xor
push
or
mov
bound
mov
call
pop
clc
fwait
mov
mov
xor
sti
push
outsb
xchg
jmp
xchg
decl
xor
cmp
repnz
pop
call
pop
shll
or
mov
je
call
jo
movsl
stos
clc
out
dec
ljmp
sub
sbb
jle
imull
xor
pop
pop
jl
adc
andb
jb
dec
roll
mov
xor
and
xchg
jae
push
pop
sub
dec
fbstp
sub
push
lahf
lock
lods
xor
test
clc
add
cmpsl
loope
xchg
xor
dec
lcall
ss
into
and
hlt
loopne
dec
call
cmp
sti
xchg
nop
loopne
add
cmp
xor
push
std
pop
sti
sbb
loopne
fstps
loop
or
psubb
pushf
sub
ucomiss
jle
pusha
push
icebp
hlt
jae
aad
hlt
addps
xchg
inc
daa
dec
sahf
divl
cmpsb
int
cmc
sub
shld
lahf
jge
and
xchg
psubq
aam
xor
rorb
rcpps
adc
dec
mov
fsub
les
ss
dec
mov
adc
or
pop
in
shlb
bsr
sbb
data16
ds
push
mov
or
xchg
xchg
scas
mov
push
stos
and
pxor
cmp
adc
rorb
xchg
scas
psubusb
stos
fsub
ljmp
mov
and
mov
mov
stos
xor
je
dec
imul
shlb
mull
aaa
mov
pop
lods
fisttpll
iret
ss
push
cmp
fisttps
fwait
cmpsl
rcrb
outsb
push
push
enter
sub
xor
sbb
sub
sahf
in
in
mov
xor
dec
xchg
dec
lods
popf
push
dec
cmp
dec
loopne
lcall
cmpsl
stc
xchg
or
sbb
sub
and
mov
pop
ss
xchg
lret
mov
dec
jle
sti
imul
enter
mov
sub
shr
hlt
push
repnz
push
add
shlb
iret
cmpsl
ds
stos
xor
in
inc
repz
inc
push
xor
and
xor
push
insl
cmpsl
divb
int
in
xchg
jmp
and
adc
cmpl
and
fisubrl
data16
call
shrb
into
test
xorb
out
mov
sbb
ss
sub
jb
dec
and
repnz
test
xor
in
push
sub
xchg
aas
xor
mov
scas
xchg
bound
ja
icebp
adc
aam
pop
add
xor
xor
repnz
sbb
aam
pop
lret
inc
lods
mov
push
fmuls
xor
loopne
jnp
xor
in
add
mov
mov
aam
call
jg
push
sub
jb
repnz
jb
xor
mov
repnz
adc
out
xor
push
je
sub
cmpsl
add
mov
xor
repnz
fdivl
aam
out
int
fwait
scas
dec
mov
shrb
xchg
sti
hlt
mov
xor
xor
das
adc
inc
or
hlt
cs
jb,pt
and
cmpb
cmp
mov
xor
push
cmp
xor
push
sar
cmpsb
in
mov
jb
imul
aam
push
or
lods
add
lods
insl
mov
in
push
lods
sub
das
cmpsl
int
xorb
cwtl
sub
cmp
repz
push
das
clc
loopne
into
xor
movsb
and
andb
push
mov
das
cmp
loopne
out
xchg
pop
cwtl
push
test
pop
test
dec
test
nop
in
ror
xchg
mov
or
xchg
adc
push
lock
pop
adc
push
xor
sbb
mov
dec
ret
out
or
jmp
aas
test
jp
and
push
cs
and
pop
xor
enter
test
pop
pop
jo
imul
hlt
sub
cmpsl
adcb
lahf
jb
mov
out
repnz
jg
xor
test
and
or
push
sub
dec
xor
pop
mov
xor
hlt
hlt
and
dec
dec
pop
push
adc
inc
rcl
xor
adc
insl
repnz
xor
jno
movsl
push
mov
xor
bnd
hlt
repnz
xor
repnz
repz
addr16
push
imul
icebp
aam
repnz
mov
shlb
test
cmp
and
push
xor
xor
nop
and
xor
adc
repnz
hlt
xchg
rcl
mov
adc
dec
mov
and
movsb
outsb
or
push
out
fisttpll
dec
fwait
xor
xor
inc
sbb
inc
xcrypt-ecb
cmpsl
mov
mov
cmp
xor
pop
sbb
xor
movsl
sbb
ds
jle
pop
push
nop
insb
out
mov
pop
xchg
inc
enter
pop
fiaddl
adc
mov
mov
movsl
mov
and
sbb
outsb
mov
into
fmuls
loope
sbb
iret
jmp
in
or
or
xor
add
shrl
loopne
adc
mov
jle
aaa
mov
sbb
data16
test
xor
add
pop
mov
mov
imul
dec
cmpsb
cmp
xor
das
out
and
xchg
adc
jns
repz
or
xchg
ljmp
faddl
sbb
pop
pop
pop
add
cmpsb
jp
mov
sub
and
cmpsb
in
out
jne
scas
or
dec
xchg
ja
cmp
clc
aaa
mov
mov
lret
iret
xor
call
mov
rorl
leave
lods
dec
sbb
loopne
push
insl
addr16
mov
sub
wrmsr
jg
addb
inc
arpl
pop
sub
aas
scas
es
iret
ucomiss
loopne
out
and
jmp
pop
rorb
scas
insl
xor
imul
fs
std
adc
fs
lret
mov
sbb
sahf
cwtl
sub
das
loopne
lods
push
test
std
dec
cmp
in
movb
xchg
and
pop
pop
js
outsl
ja
subb
sbb
xor
jecxz
loopne
cmp
shrb
dec
int
dec
int
xchg
and
int
out
arpl
xchg
xchg
mov
add
rcrb
scas
or
ds
inc
and
pop
sbb
push
mov
mov
int3
test
fdivrl
jge
jae
inc
cmp
decb
push
cld
adc
sub
nop
jmp
and
xor
xor
fsubr
aas
pop
add
dec
and
cmp
rorl
fsub
or
mov
test
loopne
hlt
cmp
mov
inc
lods
mov
fnsave
xor
insb
xor
in
cmp
fucomi
inc
cwtl
add
push
push
xchg
xor
cmp
xor
sbb
lods
pop
ljmp
hlt
and
sbb
push
or
fsubrs
xchg
aam
jle
xchg
ljmp
flds
int3
and
mov
add
ret
and
lcall
mov
sbb
negb
stos
hlt
mov
call
push
or
and
adc
scas
pusha
jg
and
lods
sub
mov
jno
pop
paddusb
cmpb
and
out
fbld
loop
cmp
cmp
cmp
enter
cmp
or
xor
int3
and
push
imul
cmp
inc
fcompl
jno
sti
xchg
popa
hlt
sarl
xor
fmuls
or
jno
cmc
cld
aad
mov
aam
pop
push
lret
mov
rcll
adc
out
adc
jae
and
adc
cmp
adc
cmp
add
insb
add
test
shr
lcall
or
add
pop
movl
imull
xor
int3
adc
and
jecxz
lahf
movsb
sub
inc
test
lret
jg
mov
xor
mov
sbb
fstp
or
dec
adc
or
test
lret
mov
push
testb
movsb
fucomi
push
mov
dec
cmp
in
fst
adc
jmp
and
ss
inc
std
stos
lods
mov
mov
ja
mul
pop
push
push
jbe
push
loopne
xor
nop
mov
out
add
jecxz
lret
adc
mov
xlat
popa
pop
adc
mov
aam
xor
shrl
ror
adc
lods
out
fdivrl
ss
pop
jl
sub
jecxz
insb
dec
and
adc
movsl
cltd
or
cmp
xorl
inc
hlt
enter
mov
dec
and
pop
aad
out
stc
repz
jae
rcr
int3
loop
pushf
sbbl
sbb
ljmp
loopne
loopne
test
addr16
cmp
pop
shr
adc
and
addr16
rorb
xor
clc
enter
enter
pop
insb
pushf
cmp
mov
lock
cwtl
xchg
or
fmuls
lods
in
shrl
rol
nop
stos
rolb
aam
mov
call
shr
fsts
cmp
xor
xchg
sub
out
fcoml
xchg
lds
sti
cmp
addl
mov
pushw
testl
stos
ret
xlat
or
jg
pop
mov
push
ds
inc
aad
inc
std
int
pop
inc
popa
roll
and
mov
sar
dec
nop
xor
das
pop
rclb
or
mov
or
in
jg
scas
sub
pusha
popf
push
jmp
mov
jg
repz
nop
cld
xchg
roll
push
es
and
mov
int3
or
pop
js
insl
sub
mov
cmp
ret
aas
sub
dec
adc
popf
filds
imul
xchg
insb
push
mov
gs
lods
data16
xlat
in
add
idivl
bound
in
mov
outsb
movsl
mov
pslld
popa
filds
adc
push
xlat
jo
push
xchg
js
bound
jae
pop
or
sub
ljmp
insb
sub
sbb
adc
ljmp
push
loopne
leave
jo
xchg
pop
cld
sub
dec
pop
mov
cmp
sub
push
lods
fadds
lea
pop
xor
lock
lods
xchg
and
mov
mov
add
sbb
pop
loopne
mov
rorb
pop
lahf
dec
add
mov
xor
xlat
xchg
lahf
scas
pop
lea
daa
xchg
cmp
aam
sti
cmp
or
fbstp
psraw
cmp
sbb
jmp
mov
cmp
jge
inc
dec
mov
ret
inc
es
mov
test
xchg
lods
das
aad
inc
push
add
ds
xchg
mov
dec
pop
cmp
pop
sahf
adc
rclb
repz
dec
daa
adc
push
adc
repz
mov
push
add
fs
push
xor
mov
jg
push
sbb
pop
xor
pop
mov
adc
add
mov
mov
outsb
andl
in
jl
jbe
jmp
jo
sti
push
mov
shlb
jl
xor
dec
mov
mov
fs
and
imul
xchg
lret
dec
xor
xor
out
mov
jl
xor
dec
fs
subb
adc
dec
push
into
ja
lods
mov
movsb
xchg
lods
movsb
in
pop
call
mov
cmp
cwtl
ss
jg
mov
sbb
xor
in
sbbl
push
mov
lahf
ja
in
push
test
ljmp
pop
xor
das
lock
xor
cs
lock
cmp
pop
xchg
aas
jl
out
fisttpl
pop
mov
xor
test
cmp
cmpb
fldcw
iret
mov
cmpsb
ret
mov
pop
xor
xchg
lods
popf
or
icebp
and
jmp
jg
jp
sti
jg,pn
fwait
or
pop
jecxz
es
jmp
pusha
call
mov
shrb
idivl
shlb
mov
push
jne
mov
imul
aas
pop
fadd
jmp
lds
xchg
cltd
test
sub
or
xor
sarl
push
mov
mov
and
cmp
loope
sub
int
addb
sub
popa
dec
jnp
stos
lods
les
xchg
outsl
xchg
clc
cwtl
lahf
fsubrs
pop
pushf
mov
shrb
popf
aam
fbstp
and
ss
push
orb
jnp
lods
sub
int
addr16
outsb
ret
adc
pop
inc
xor
xlat
ret
and
repz
fstpt
jl
mov
lods
ret
repz
aaa
hlt
iret
push
adc
jns
mov
pushf
and
xchg
xor
into
outsl
mov
into
sbb
adc
mov
unpcklps
ret
pusha
lods
pop
clc
push
or
outsb
sbb
pop
pushf
int3
or
leave
ss
pop
push
outsl
std
ss
data16
repnz
arpl
lcall
sbb
sub
xchg
test
dec
ret
shl
inc
adcl
lahf
js
test
loopne
mov
sbbb
dec
pushf
popa
push
jle
hlt
and
loopne
daa
call
jo
pop
xchg
enter
and
mov
cwtl
adc
lock
pushf
sub
stos
ret
or
jo
popa
nop
ss
stos
adc
rol
and
pop
js
repz
stc
insb
mov
pop
fisubs
pop
push
repz
ficoms
sub
jo
dec
call
push
xchg
jo
mov
or
imul
lcall
jmp
jmp
in
cmp
movsl
call
inc
mov
dec
mov
das
fs
mov
inc
sub
and
test
xchg
shlb
daa
xchg
pushf
xlat
xchg
bound
pop
adc
in
xor
pop
xor
sub
mov
sbb
dec
sbb
iret
sbb
sbbb
pusha
xchg
insl
inc
leave
out
int
dec
int
das
int
outsl
int
mov
sbb
jge
sub
pop
lret
lcall
add
dec
gs
sbb
sbb
jl
pop
pop
mov
xlat
test
cmpsl
sbb
in
enter
int
xorb
pop
pop
or
dec
insl
ds
shrl
aam
and
jne
and
jmp
add
jle
xor
outsl
jae
push
movsb
bound
in
adc
adc
xchg
lret
and
sbb
push
das
mov
leave
sub
or
add
punpckhwd
jl
push
lds
pushf
sbb
jle
sbb
xor
xorb
or
in
ret
xchg
aas
xchg
push
out
jno
jge
rcll
sub
dec
mov
sbb
xor
push
in
dec
jmp
fcmovu
xchg
xchg
jae
je
lret
mov
int
pop
int3
sub
inc
movsb
mov
mov
xor
scas
cmc
jo
add
addb
jmp
rcll
shl
mov
daa
lds
enter
rcr
cmp
test
frstor
cld
push
rcrb
lock
mov
jg
mov
out
lods
mov
loope
adc
mov
clc
mov
int
lds
pusha
sbb
les
and
pop
push
lods
in
out
rorb
mov
pusha
mov
mov
call
mov
rolb
jbe
int3
mov
push
pusha
hlt
int3
inc
enter
dec
pop
lcall
mov
xchg
cmp
inc
xor
jmp
pop
pop
xchg
inc
sbb
xchg
jnp
xchg
daa
test
repz
mov
jbe
or
pop
xor
xor
xlat
daa
mov
adc
fs
dec
adc
mov
adc
dec
add
add
xchg
jno
adcb
ss
pop
movsl
ret
or
js
and
out
sbb
ret
sub
dec
adc
adc
xor
and
jnp
ljmp
push
push
cmp
mov
pop
in
std
cmp
mov
mov
stos
icebp
scas
add
mov
jne
xor
lahf
enter
pop
inc
push
pop
cmpsb
andb
pop
xchg
and
cmp
lahf
pop
sub
xor
sub
das
xchg
lock
test
mov
add
cmp
jo
mov
mov
lea
or
adc
loop
pop
sti
orl
xor
out
sub
sbb
and
insl
xor
push
jmp
lods
lock
enter
jg
rcl
lret
adc
and
aam
or
adc
fsub
shlb
stos
sbb
out
sbb
pop
add
or
repnz
sub
js
and
and
cmpsb
cmp
insb
std
les
into
pop
inc
icebp
lahf
outsb
add
addb
add
adc
push
test
fldenv
mov
pop
repz
test
aaa
inc
stc
inc
in
shlb
cmp
mov
jecxz
movsl
scas
or
leave
rcr
pop
xchg
sub
loope
jo
jo
pop
adc
mov
sub
sbb
repnz
rcrb
enter
popf
adc
mov
xchg
xchg
xchg
pop
insl
jle
movsb
or
xchg
push
pop
xor
std
repz
push
and
mov
inc
movsb
scas
jmp
or
jbe
sub
insb
repnz
or
enter
sub
jmp
in
adc
mov
xchg
es
lret
mov
mov
jne
loope
data16
pushl
xor
sbb
hlt
int
clc
shl
sarl
pcmpgtb
sub
shrb
adc
fdivrl
xor
mov
dec
pop
dec
or
mov
or
jecxz
sbb
xchg
movsb
xchg
push
sbb
and
ret
add
mov
add
ljmp
cmpsl
add
and
rclb
xchg
xchg
testl
dec
cld
adc
or
int
fidivrs
jle
xor
rorb
sbb
cmp
popf
lcall
push
adc
pop
sbbb
test
and
leave
sti
rorb
in
sub
add
std
lds
inc
xor
xor
fcompl
mov
dec
insl
xchg
adc
push
pop
sahf
out
cmp
and
in
cmp
ud1
xor
xchg
addb
mov
fnstcw
jp
repnz
shlb
lret
scas
dec
pop
mov
xchg
jae
daa
mov
dec
repnz
call
insb
dec
rcrb
test
jl
mov
add
xor
pop
cli
dec
pop
or
test
flds
xchg
mov
push
dec
sbb
ss
dec
mov
jb
dec
inc
dec
push
sti
adc
int
lea
cmp
into
rcll
shl
rcrl
test
lahf
ja
sbb
jge
pop
sub
adc
cmpsb
dec
mov
xor
ss
dec
out
mov
hlt
sti
lds
fisubrl
xchg
andb
dec
shrl
rcrb
cmpsb
dec
jl
jge
test
xchg
lret
ret
mov
out
and
stc
pop
mov
dec
xchg
xchg
shrl
icebp
int
pop
aas
int
rcll
mov
gs
sbb
inc
shl
insl
jnp
or
or
push
lret
adc
in
iret
dec
or
into
push
out
test
repz
cmp
add
std
das
add
arpl
xor
orl
and
pusha
xor
jo
in
lods
stc
xor
ss
push
dec
add
int
mov
nop
inc
sub
les
sub
and
xor
out
xchg
push
cmp
cmp
psubb
nopl
popa
pop
xor
sbb
cs
imul
in
lret
inc
cmpb
xlat
add
or
test
scas
lea
cmpsb
cs
pop
and
mov
adc
mov
movsl
pusha
xor
mov
aaa
or
push
shrb
popf
adc
roll
and
add
dec
jno
sbb
ljmp
inc
push
jge
add
stc
mov
xchg
sbb
test
dec
pop
lods
movsl
dec
xchg
jp
cpuid
ja
xchg
andb
cmp
popf
fwait
in
and
dec
pop
popf
jae
mov
in
lret
inc
popf
mov
push
mov
push
mov
xchg
mov
add
cmp
rclb
jo
adc
jbe
pop
mov
mov
sbb
push
dec
call
push
je
xor
and
mov
std
sub
adc
and
ror
fildll
dec
xor
adc
push
enter
subb
pop
sti
mov
sub
mov
add
orb
fwait
ss
gs
clc
clc
mov
pushf
clc
notl
enter
and
pop
xchg
jle
and
mov
mov
in
sarb
sbb
mov
push
imul
std
out
shll
add
scas
sub
out
sbb
ret
mov
movsb
in
and
push
in
jne
shlb
push
jecxz
mov
dec
xchg
es
jns
loop
xor
push
jecxz
mov
mov
mov
in
int
loop
mov
icebp
enter
out
mov
mov
sti
rolb
mov
popf
mov
xlat
mov
adc
mov
mov
xor
push
sbb
hlt
fbstp
dec
inc
gs
push
call
pop
or
pop
mov
es
std
outsb
popf
xor
cmp
aam
xchg
pop
shll
mov
rcll
cmp
sub
inc
pop
push
cmp
add
and
out
inc
dec
jo
sbb
loopne
pop
aaa
pop
sbb
xor
insb
in
fistl
lods
inc
dec
rol
bound
inc
sbb
insl
jae
mov
outsl
ljmp
cmc
xor
sbb
push
cmp
in
leave
mov
mov
cmp
cmp
dec
pushf
adc
mov
subb
mov
in
lods
xchg
sbb
addr16
sahf
bound
jnp
add
jg
jbe
scas
js
sti
cmp
inc
adc
lret
cs
shr
xor
or
push
jo
cmp
adc
test
sbb
leave
mov
or
add
call
adc
xlat
jo
mov
add
adc
and
roll
shl
jp
jg
pmulhw
or
or
xor
mov
cli
mov
mov
in
pop
adc
pushf
jge
sarb
sbb
lea
mov
dec
sub
pusha
cwtl
popa
stos
int
rorb
or
pop
cltd
cmp
push
mov
add
add
pusha
jle
clc
lcall
into
mov
inc
jb
out
lock
sub
mov
icebp
xor
lahf
push
lods
mov
mov
lret
dec
sub
repnz
jbe
xor
int
xor
mov
mov
inc
dec
addr16
push
inc
aaa
iret
inc
and
cmpsb
mov
mov
cs
pusha
imul
add
push
mov
lock
sbb
xchg
mov
popf
in
add
and
test
adc
andb
xchg
ret
mov
inc
inc
jp
movsb
cmp
iret
pusha
in
adc
movsl
je
add
pushf
fsts
xchg
sub
aaa
in
nop
fstl
jecxz
cmp
test
and
call
dec
jno
shlb
rcl
xor
movsb
adc
and
jg
into
pop
aad
lods
gs
xor
inc
rolb
push
fistpl
push
rolb
and
mov
push
fcmovnbe
xchg
lock
sbb
jns
pusha
rcl
shlb
add
fldenv
outsl
jle
jnp
mov
dec
lods
cmp
sbb
in
daa
and
in
ret
test
enter
add
shll
addb
lret
and
cs
or
adc
pop
insl
cmp
dec
jmp
adcb
pop
fiaddl
arpl
stc
jns
add
add
jmp
adc
rorb
lret
rclb
fwait
in
imul
outsb
sub
lock
mov
or
fcompl
add
and
mov
adc
scas
inc
xor
xchg
sbb
mov
ja
test
and
orl
cmp
cmp
pop
lock
xorb
repz
mov
in
imul
or
out
pop
shll
cmpsb
pop
fsubrs
sbb
dec
test
add
call
mov
pop
sub
imul
in
dec
pop
ljmp
jg
push
cld
sbb
outsl
sar
ret
cmp
jmp
gs
bound
cmp
xor
xor
inc
into
sbb
jnp
adc
add
mov
mov
into
push
into
mov
sbb
pop
orb
xor
or
push
dec
push
enter
inc
jecxz
int3
mov
lock
jo
sbb
stc
sar
jae
sub
int3
inc
jg
movq
jecxz
cmp
fld1
sbb
and
adc
sub
repz
mov
shrl
cmp
push
jle
mov
xchg
insl
pushf
jge
push
subb
xor
add
aad
aas
jae
divps
out
mov
sti
sub
pop
in
pop
call
jecxz
pop
add
fwait
ljmp
shlb
call
iret
or
sub
enter
daa
xlat
sti
push
data16
bound
lods
mov
cwtl
loop
inc
aad
fldl2e
jl
loope
out
cmpsb
jo
push
pop
pcmpgtd
xor
inc
mov
sar
test
dec
fucomi
leave
xor
ja
mov
das
popa
xchg
and
and
sbbl
pop
outsb
fdivrs
in
pop
xlat
nop
push
xchg
sbb
sub
sbb
dec
adc
bound
ftst
adc
xor
cmp
adc
in
cmp
cmpsb
enter
cmp
iret
mov
mov
adc
loope
push
pop
mov
jbe
ret
scas
sbb
and
fcompl
dec
orb
outsb
nop
cwtl
lds
pop
clc
dec
xchg
fsts
in
loope
adc
scas
mov
jae
scas
and
stos
loopne
scas
es
mov
xchg
dec
enter
mov
ret
jae
into
sub
push
ror
daa
push
dec
mov
mov
out
mov
or
ds
stc
adc
mov
cmp
ret
repnz
jecxz
dec
aas
lret
out
pusha
pop
add
and
in
ds
or
push
loopne
in
adc
lock
pop
shl
popa
xor
rcl
aam
sub
into
shrb
lahf
fs
xchg
shrb
scas
test
and
cmp
cs
in
and
jns
int
mov
jo
and
xchg
add
jge
insl
mov
pop
jnp
mov
ss
sahf
cmp
pop
pop
jno
xorl
bound
jmp
and
mov
pop
mul
sbb
sbb
sub
test
mov
xorb
xchg
movsl
add
jnp
jle
dec
mov
sbb
cs
repz
mov
ss
xor
sub
xchg
sub
mov
sbb
push
nop
fistpl
ds
sub
mov
nop
sub
push
pop
pop
out
mov
scas
in
jg
loopne
hlt
pavgb
sahf
movsb
lods
fdivs
jo
xchg
cmp
jb
fisubs
cmp
xor
addl
pop
testl
adc
sub
sahf
jge
shrb
pop
pop
imul
imul
pushf
sbb
outsb
adcb
test
mov
xchg
stos
mov
inc
cmp
cmpsb
in
xor
jb
lcall
out
outsl
nop
push
fld1
adc
addl
popf
mov
sbb
and
je
ljmp
popf
push
xlat
inc
xor
jge
sbb
sub
lret
add
rclb
test
pop
rol
mov
jno
movsb
test
lret
fildl
mov
xor
sbb
pop
insl
push
add
xchg
lcall
les
jno
lahf
lea
mov
xchg
mov
daa
jnp
setge
nop
cmp
jl
sub
mov
shll
sbb
pop
outsl
mov
sub
fisttps
aaa
loopne
fldl
or
gs
cmpsl
out
fdivr
scas
js
ljmp
call
cmp
cmp
and
cmpl
pop
in
dec
dec
test
cmpsl
xchg
lock
xchg
in
xor
adc
imul
xchg
sbb
das
cmp
jb
xor
dec
out
cmp
sbb
mov
icebp
adc
adc
bound
andl
gs
xor
icebp
adc
xchg
mov
mov
jns
inc
sub
mov
jmp
xchg
xor
mov
mov
cltd
pop
adc
cmp
test
cs
nop
divl
push
sti
cmp
sbb
xor
push
jg
push
cli
adc
lods
inc
push
pop
lahf
jp
scas
arpl
sbb
jae
shlb
push
and
and
sbb
fmul
add
pop
push
pop
scas
inc
ds
xchg
cmp
sbb
pushf
pop
cmp
lock
jle
mov
addr16
lds
push
es
cmp
inc
jecxz
or
ss
sbb
sub
sbb
imul
jg
lcall
cmp
mov
repz
and
inc
or
pop
clc
or
cmpsl
jnp
lcall
sbb
mov
ja
je
dec
xchg
je
aam
into
fisttpll
into
pop
sbb
jge
pop
or
gs
or
or
xchg
sub
adc
mov
and
sti
enter
pop
aaa
mov
cs
js
adc
cmpsl
cmpb
push
aas
shrb
xor
inc
push
pop
pop
loop
jae
adc
pop
shr
pop
paddusb
cmp
pop
loope
push
pop
jb
stos
sbb
rorb
dec
fs
int3
out
rcrl
out
shrl
fmull
and
bound
push
loop
or
ret
xor
int
pushf
pop
jecxz
cmp
loopne
or
push
xchg
out
sbb
xchg
loopne
bound
sub
int
addb
inc
xlat
testw
jp
lods
push
adc
push
fisttps
xchg
rcl
mov
nop
cld
xchg
test
pop
or
int
mov
into
sub
out
xchg
jg
lahf
out
adc
xchg
mov
aas
adc
out
lods
xchg
cmp
aas
and
jmp
jecxz
mov
enter
ds
rorl
insb
pop
insb
stos
mov
cmp
pop
je
dec
iret
or
mov
fimuls
movsl
jb
mov
sub
iret
shl
jo
mov
push
das
sub
adc
rol
mov
dec
lcall
sub
cmp
in
sub
iret
mov
push
cwtl
sbb
sti
lea
mov
rcrb
iret
cs
and
add
mov
mov
xchg
test
std
mov
sub
jl
lea
subb
aaa
and
push
loopne
sysenter
xor
ret
fistpl
aaa
out
scas
cli
xor
push
stc
cmp
loopne
sub
fwait
sub
inc
sub
fldcw
ja
push
mov
and
in
jno
es
ficoml
mov
mov
jnp
cmp
sub
push
add
mov
lock
sbb
cwtl
iret
sar
adc
jmp
cmp
movsb
aas
xchg
imull
fistpll
ss
or
mov
out
adc
lea
jp
outsb
adc
fsubrs
pop
clc
inc
iret
jmp
test
rorb
pop
mov
sbb
loope
add
pop
jb
sub
ss
or
mov
sahf
mov
and
adc
dec
xchg
ret
outsl
loopne
dec
das
xor
sbb
mov
push
addl
cmp
xor
lods
mov
lock
jge
es
pop
xor
or
jmp
mov
popa
lret
xor
call
lock
cltd
sbb
sub
mov
and
stc
cld
xor
and
dec
sbb
movsb
fildl
mov
nop
stos
jmp
fisttps
jb
or
adc
sbb
aam
pusha
std
or
scas
das
outsb
xor
nop
or
cmp
sahf
pop
or
out
sbb
xchg
lds
push
push
pop
cmp
sub
xor
ds
add
and
in
lahf
jge
jg
jl
cwtl
jnp
adc
mov
mov
jge
cmpsl
sbb
ds
sbb
pop
inc
bound
into
adc
sub
outsl
icebp
stos
mov
sub
dec
insl
mov
mov
hlt
add
mov
cmp
mov
pop
push
mov
dec
bnd
outsb
pop
adc
pop
mov
test
or
mov
std
xchg
stos
loopne
sub
gs
lahf
jecxz
pop
sub
jge
out
inc
cs
cli
pop
jbe
fistps
adc
rcr
xlat
setl
dec
jecxz
dec
push
ror
xor
inc
mov
sbb
adc
xor
mov
stc
ret
scas
popf
enter
push
cmp
sub
pusha
and
push
ret
mov
xchg
and
idivl
pop
ficompl
add
cmp
xor
adc
mov
xchg
inc
xchg
mov
ja
stos
insl
cwtl
in
fs
mov
mov
out
sbb
outsb
fists
pop
negl
jmp
xor
sub
and
sub
xchg
add
and
and
aam
mov
cmp
mov
sbb
scas
lea
push
sbb
fbld
shl
or
sahf
cmpsl
jne
rorl
xor
sub
adc
sahf
sbb
scas
sub
sub
cmc
rorb
cli
je
lods
dec
add
adc
scas
sbb
lea
cmp
pop
sub
imul
adcb
shr
jl
sbb
daa
mov
add
and
fists
pop
fisubl
cmpsb
rcrb
cwtl
xor
nop
nop
dec
inc
dec
push
lahf
pop
xor
xor
xor
sub
inc
stc
jle
jge
jne
test
jle
rol
sub
rorb
mov
outsb
xchg
cwtl
loopne
mov
addl
sub
xorl
js
stos
add
inc
dec
fwait
insb
roll
mov
jp
hlt
sbb
fnsave
dec
ss
mov
lret
bound
lahf
stc
in
sbb
out
cwtl
cmp
and
test
stos
rcll
xor
lahf
imul
pushf
mov
push
xlat
xchg
jns
aad
ret
xor
xor
mov
popf
arpl
cmpsl
sbb
outsb
pop
in
outsb
fdivrl
icebp
lock
push
dec
sbb
mov
xor
mov
je
les
and
fcoms
mov
repnz
xor
gs
jo
mov
out
insl
mov
shr
adc
fistpl
imulb
stc
cwtl
cmp
push
cmc
or
lods
push
mov
shrb
outsb
call
pop
daa
or
and
jg
jmp
or
and
js
xchg
push
scas
movsl
push
addb
xchg
xchg
lret
jb
hlt
jg
das
mov
rcrl
popa
pop
cmp
and
pop
lock
outsb
add
scas
sbb
pusha
sub
fstpl
nop
xor
add
dec
push
sbb
jnp
and
xchg
xchg
xor
das
xor
jae
aad
pop
mov
xchg
call
cmp
loopne
adc
adcb
add
cld
sar
jns
mov
shl
loopne
loopne
push
mov
bound
mov
xchg
test
call
inc
in
lods
pop
jmp
int3
and
inc
mov
loop
fistl
sbb
dec
rcr
xchg
fwait
js
add
mov
xor
stc
pop
inc
xchg
push
mov
aam
mov
test
xlat
xor
adc
popf
adc
arpl
adc
mov
in
adc
ss
pop
leave
sarb
negb
fisttps
out
aaa
in
xchg
movsb
pop
int3
sub
lret
cmp
jl
loopne
nop
mov
dec
push
test
jnp
adc
adc
xor
mov
inc
nop
mov
or
aas
mov
mov
sub
mov
pop
mov
dec
fwait
pushf
repnz
adc
push
dec
adc
cmp
inc
push
push
iret
pop
fsts
fdivrs
mov
sub
iret
xor
fcomip
scas
xlat
das
mov
and
int3
adc
mov
pop
xor
movsl
pop
and
int3
mov
jmp
pusha
xchg
stos
mov
arpl
push
xor
int3
stos
push
lret
rcrl
push
and
call
cs
pop
cwtl
aas
loopne
ds
pop
bound
mov
lods
and
mov
pop
mov
sub
jmp
push
out
or
push
mov
aad
inc
in
fsts
push
adc
leave
inc
gs
popa
mov
idivl
cmpsl
cmp
or
mov
aam
sub
push
mov
dec
iret
mov
pop
es
addr16
push
sbb
loop
movsl
in
push
push
insb
and
pop
bound
int3
imul
xor
or
enter
sbb
ss
xchg
mov
xchg
inc
dec
push
mov
inc
push
inc
ds
lods
or
xchg
das
andb
mov
add
fildll
fsubrp
sub
sbb
and
mov
aad
data16
fldt
out
xor
mov
jl
loopne
sbb
ss
add
push
jbe
hlt
adc
je
stc
je
xor
xchg
mov
loopne
ret
cmp
inc
js
xchg
jno
shll
negb
jmp
mov
cmp
das
ret
cmp
stos
jne
push
sub
xchg
pop
fadds
jle
mov
call
add
add
pop
scas
lods
repz
push
or
mov
int3
pop
scas
in
sbb
xchg
push
add
xchg
outsb
pop
xor
adc
fstps
les
cli
les
push
ja
sub
push
pop
call
shrb
inc
mov
push
cs
adc
xchg
mov
xchg
pusha
sub
xor
and
in
jno
arpl
or
movsb
or
pop
mov
movsb
mov
jbe
fcomps
adc
mov
scas
jmp
insb
int3
hlt
jo
sub
inc
mov
rcrb
dec
xor
jbe
push
dec
jo
lods
rcrl
pop
mov
or
adc
adc
adc
rcrb
test
pop
push
push
xor
call
fidivrs
mov
or
jnp
xchg
stc
xor
ljmp
push
jbe
jae
lret
sarl
or
inc
mov
mov
push
sbb
xchg
pop
xor
out
mov
push
cmp
into
incb
xchg
cmp
jae
fdiv
scas
sub
inc
sbb
in
push
lahf
mov
inc
sbb
adc
stos
dec
shlb
cmp
mov
adc
enter
leave
pop
dec
imul
outsl
inc
sbb
call
bound
aam
inc
adc
and
adc
mov
sbb
lock
popa
rcll
sbb
pop
jno
lods
mov
mov
dec
rolb
aad
sbb
rcll
mov
sbb
push
add
insl
outsl
inc
testl
jp
in
int
mov
imull
mov
add
movsb
mov
mov
lea
adc
fildll
dec
sbb
adc
cmovs
inc
jmp
sbb
je
jle
clc
invd
test
faddp
xor
xor
les
inc
lds
mov
loop
sub
pop
push
or
add
fdivs
or
dec
or
loopne
popa
ret
xchg
sahf
add
out
dec
xchg
jno
or
icebp
in
shlb
mov
iret
icebp
pop
inc
jmp
js
jmp
cmp
loopne
shll
push
stos
and
loopne
xchg
cmpb
or
pop
or
repnz
fldl
cmpsb
ret
adc
sbb
lcall
push
dec
dec
adc
fdivr
mov
ret
arpl
popa
lods
xchg
mov
leave
xorb
test
mov
xor
xor
jle
das
dec
cmp
daa
nop
sbb
jg
cmpsb
movzwl
jb
jb
mov
aas
das
jnp
ljmp
pop
inc
inc
mov
push
lock
ret
and
push
cld
mov
nop
pop
dec
dec
cli
lods
sti
jo
push
lds
xchg
test
ret
pop
test
push
sahf
iret
pop
xor
mov
and
dec
xchg
or
fisttps
jmp
loopne
imul
pop
sbb
sahf
outsb
xorb
and
mov
dec
push
shll
jl
pop
push
nop
ret
or
out
call
fistps
out
push
imul
jecxz
mov
not
ds
andl
out
les
mov
scas
push
pop
mov
xor
aam
lock
fidivl
test
push
cmp
out
xor
cmp
test
dec
ss
cld
shrb
imul
cs
cmc
in
out
icebp
pop
push
push
jle
imul
push
push
bound
cmp
xor
pop
fsubrp
xchg
iret
jl
jl
xchg
push
sbb
int
ss
add
mov
jle
lods
int
adc
mov
popf
int3
mov
xor
xchg
sub
cmp
jecxz
mov
movsb
cwtl
aad
pusha
mov
wrmsr
jmp
outsb
aas
and
aas
das
xor
dec
xor
pop
mov
or
adc
das
or
sahf
mov
test
mov
mov
pop
push
in
lods
pop
mov
fidivrl
js
and
jns
sbb
lods
addl
fsubrl
xor
xchg
roll
adc
cmp
scas
ret
iret
shrl
sub
dec
push
and
mov
jnp
push
inc
fdiv
pop
cmpsb
pmovmskb
call
xor
xor
push
aam
and
insb
sub
fmulp
lods
mov
mov
mov
lods
cs
dec
push
or
mov
sbb
ds
aad
pop
push
cmp
rolb
xchg
cmpsb
jle
or
inc
jnp
dec
scas
jae
push
les
cmp
mov
xor
mov
aaa
mov
ja
ret
push
jae
push
inc
ss
xchg
mov
and
sbb
mov
daa
mov
xchg
cmpsl
out
and
movsb
in
and
insl
dec
and
push
mov
add
les
stos
fistpl
into
pop
mov
mov
xor
and
test
or
jne
ljmp
fildll
adc
into
jge
add
cmp
cs
in
xor
ljmp
jmp
imul
push
icebp
inc
xchg
arpl
jmp
dec
xor
int
cmp
mov
call
aaa
incl
mov
mov
hlt
mov
push
loopne
fs
sbb
movsb
sahf
aam
cmpsb
rcll
fcmovnu
and
sub
out
test
mov
cmp
xchg
push
jmp
jmp
xorl
sbbb
loopne
adc
cmc
sub
mov
and
push
add
subl
mov
xchg
inc
scas
sub
rcrb
nop
xor
insb
jecxz
into
pusha
pushf
xlat
sub
mov
enter
lahf
call
pop
mov
jmp
xchg
pushf
sbb
call
mov
les
push
aam
pop
enter
aam
pop
loope
xchg
enter
jg
jl
cmpsb
les
xor
fcomip
cs
add
mov
lret
popa
test
repnz
lods
mov
lods
inc
inc
aaa
add
jmp
insb
daa
arpl
xor
nop
mov
lods
movsb
icebp
inc
cld
xor
sbb
loopne
fildll
dec
or
and
aaa
rcrb
push
xorl
es
adc
xchg
inc
pop
xchg
scas
dec
sahf
mov
jae
jle
mov
jg
dec
sahf
jecxz
and
rcrb
iret
les
push
push
rcr
filds
fiadds
addr16
loopne
xchg
jae
pop
imul
aaa
xor
out
pop
jnp
divb
push
pop
xlat
shlb
ja
repz
pop
mov
xor
and
xor
pop
call
mov
xchg
cmp
movl
mov
rclb
jne
imul
sarb
les
adc
clc
add
pop
xor
push
rorb
movsl
sub
and
xor
mov
clc
pop
adc
mov
jbe
subl
nop
sub
adc
bound
outsb
xchg
add
mov
lahf
sarb
push
outsb
cmpb
adc
je
out
adc
lcall
in
sti
mov
in
aad
not
je
cld
pop
sbb
nop
bound
notb
lods
outsl
jmp
rol
pusha
push
cmp
ret
mov
inc
mov
mov
loopne
sbbl
sbb
sbb
fwait
xor
jnp
mov
loope
out
push
mov
jmp
jne
sbb
scas
aas
icebp
dec
ret
out
loop
les
inc
bound
int3
jge
dec
jp
fnsave
stos
shl
xor
lods
xchg
lret
fucomi
ss
lahf
sbb
pop
loopne
lock
xchg
push
loopne
mov
mov
dec
and
loop
out
adc
pop
xor
mov
adc
jmp
jle
in
into
ljmp
lret
jo
in
mov
sarl
gs
not
adc
push
dec
lods
ljmp
dec
out
pop
pop
fs
cmp
dec
int
bound
das
fstpt
test
lods
stos
fs
popf
dec
inc
movsb
out
clc
out
adc
rcll
or
xchg
lods
loop
xor
mov
mov
xchg
jmp
shrl
adc
repz
bnd
movsb
lods
mov
fsubrl
push
lods
pop
push
push
and
aas
mov
lock
fcomps
fcoms
rclb
pop
pusha
add
jle
gs
outsb
loop
cwtl
mov
js
jbe
sarb
sbb
inc
push
in
mov
js
lahf
mov
sbb
movsb
mov
sbb
dec
loopne
jge
aam
out
testl
hlt
push
test
and
or
mov
ret
push
push
dec
out
scas
testb
sub
jnp
jae
jmp
and
sbb
lock
mov
clc
nop
dec
push
out
add
push
outsl
int3
out
jmp
dec
xor
jmp
outsb
or
xchg
fldl
push
loop
sahf
lock
sub
cmc
pop
sub
sbb
mov
in
xor
enter
mov
out
xor
imul
push
je
or
inc
mov
pop
out
adc
insl
mov
fidivrs
sub
out
cwtl
aaa
je
test
push
xor
mov
pop
or
push
push
mov
pop
sbb
fdivs
mov
dec
mov
cmp
inc
xchg
mov
daa
fistpl
dec
jg
arpl
push
sub
push
adc
rolb
sub
fcmovne
enter
adc
push
mov
jp
mov
ss
push
loopne
lret
xchg
push
adc
sub
mov
pop
pop
or
jmp
jns
dec
add
sbb
xchg
inc
aam
sub
mov
jnp
out
andb
scas
stc
jb
mov
andb
xor
shlb
jg
fidivrs
adc
aas
test
cmp
int3
mov
int3
cmp
and
mov
mov
jns
fdivs
cmp
cs
adc
ja
xlat
test
fs
lret
pop
cwtl
testl
mov
movsb
jmp
shl
push
in
fiaddl
mov
dec
into
call
xor
push
push
push
movsb
cwtl
or
bts
pop
test
mov
jge
cmp
sbb
push
cmp
jmp
pop
cmc
mov
movups
mov
stos
jecxz
sahf
or
mov
push
sub
and
ja
iret
sarl
movsl
arpl
nop
mov
and
lods
xchg
cmp
mov
bndldx
jnp
in
rcrb
pop
clc
mov
pusha
mov
adc
inc
jmp
scas
dec
fs
sub
das
mov
dec
jl
loopne
and
movsb
out
push
es
add
mov
in
repz
push
dec
pop
movsb
cmp
pop
mov
mov
push
inc
popf
or
sub
stos
inc
insb
repnz
inc
loope
dec
push
sub
and
xor
xor
fucomi
jns
data16
lds
sbb
les
xchg
and
mov
in
cld
int3
lret
cmpb
add
and
aad
rep
push
loop
mov
push
xchg
mov
mov
scas
out
cwtl
add
jecxz
insb
dec
dec
pop
sub
stos
in
push
push
pushf
daa
ret
mov
mov
cwtl
xchg
scas
testl
xchg
in
push
jnp
aad
out
xor
jno
sub
jp
loopne
repnz
aam
loop
jmp
cld
mov
pop
fdivrs
fucomi
test
insl
cmpl
loopne
bound
dec
jo
xor
add
sbb
lods
adc
xor
sub
ljmp
ret
jl
mov
push
shlb
pop
movsb
test
divb
push
inc
jmp
sub
fcmovb
bound
inc
mov
sarl
lcall
aaa
aad
add
dec
cld
into
dec
ds
test
pop
loop
pop
aaa
and
bound
cmp
sub
scas
scas
cmp
jle
loop
es
or
clc
loopne
loope
ljmp
mov
cltd
lods
jbe
into
cmp
nop
fwait
jge
dec
sub
sti
fidivrs
clc
mov
cmpsb
lods
bound
push
cmp
daa
pop
xchg
jle
mov
cs
mov
fnsave
in
mov
popa
push
xchg
pop
xchg
adc
into
xchg
xlat
lods
daa
inc
or
test
mov
repnz
imulb
dec
push
pop
xor
ret
rclb
ror
inc
lods
je
xorl
jnp
jb
pop
ret
daa
add
jl
push
xchg
xor
sub
push
sbb
xchg
int
mov
push
mov
mov
cltd
leave
pop
call
push
push
sub
xchg
jbe
clc
ds
pushl
insb
dec
das
scas
clc
addb
adc
sub
fildll
sti
mov
adc
repnz
lds
lods
mov
stc
jmp
or
call
jle
enter
add
xchg
mov
jne
pop
xchg
imul
mov
sbb
sbb
xchg
xlat
bound
mov
adc
bound
or
repnz
call
arpl
fildl
mov
push
cmp
adc
jb
and
loopne
bound
mov
jb
adc
lock
gs
dec
push
sbb
test
in
addr16
test
and
js
jecxz
cmp
movsb
loopne
xor
aad
sbb
jnp
movsl
dec
iret
repnz
push
jnp
imul
and
sarb
push
mov
out
jae
daa
stc
movsb
data16
fsubrs
and
xlat
or
adc
dec
sub
jle
mov
mov
inc
jge
xchg
sti
sbb
jb
mov
in
js
iret
jmp
pop
data16
pop
imul
xchg
outsw
mov
push
cmp
stc
call
vpsllw
dec
xor
push
mov
cmp
inc
scas
lahf
and
aad
scas
rolb
jb
andb
inc
push
push
lods
mov
jg
xor
push
sbb
jecxz
addr16
cmc
xchg
das
les
testl
mov
sub
mov
lods
mov
inc
cmp
cmp
and
mov
dec
enter
adc
aad
xor
sbb
outsl
lods
push
and
push
add
cmpsb
mov
add
and
push
cmpsl
add
pusha
into
jo
mov
and
push
andb
push
arpl
and
push
mov
xor
fstpt
pop
mov
mov
inc
addb
clc
rcl
lret
daa
loopne
es
jns
mov
mov
pop
xor
jmp
dec
leave
iret
mov
inc
sub
in
mov
inc
jno
cwtl
js
loopne
inc
xor
xchg
jno
and
cmpsb
in
sahf
mov
cmp
into
jo
xor
dec
adc
mov
xor
aam
popf
xchg
xor
insb
iret
cmp
push
lods
cmpsl
mov
xchg
sahf
imul
lods
dec
pop
ja
xchg
aam
in
cmp
push
and
dec
push
dec
jle
sahf
icebp
inc
xchg
sub
inc
imul
out
xchg
js
aad
xchg
in
xchg
imul
jnp
lods
daa
dec
mov
stos
out
mov
lods
shrb
jecxz
shl
jge
incl
sahf
rolb
lea
sub
push
into
andb
loop
fscale
sbb
cmp
fnstcw
imul
xchg
push
mov
mov
xchg
cmp
popf
mov
lret
sbb
mov
repz
cltd
sub
adc
sub
jbe
add
xor
mov
movsl
sbb
imul
shlb
lods
cwtl
mov
dec
imul
xlat
inc
mov
sub
aad
push
lods
mov
xchg
mov
push
hlt
mov
sbb
inc
adc
and
je
mov
movsb
adc
stos
bound
inc
aaa
sub
aas
popf
lods
and
stc
inc
inc
mov
and
mov
scas
scas
aas
lock
mov
mov
push
jmp
outsl
mov
mov
stos
rcll
pop
lcall
insl
xor
jb
pop
jmp
or
push
xchg
in
adc
test
jmp
movsb
mov
jle
xchg
cmp
bnd
sti
pop
xor
xlat
push
loopne
jp
mov
jb
enter
push
jo
dec
rolb
sbb
xor
pop
loopne
sti
cmp
clc
fsubr
xor
sbb
adc
lret
addl
pop
xchg
xlat
or
fbstp
mov
mov
popf
fs
mov
ss
pop
lcall
sbbw
insb
and
push
and
insb
mov
pop
mov
jle
mov
into
xorb
pushf
int
lods
xor
xor
mov
mov
pop
and
jg
jo
ds
dec
mov
sbb
clc
repnz
cmp
addl
repz
aaa
repz
dec
push
cmpsb
out
jmp
cmp
and
cmc
inc
sahf
cmp
test
aam
or
cmp
ja
lods
dec
xchg
sbb
cmpsl
or
out
add
sub
in
xchg
xor
mov
je
das
add
insl
jmp
rcr
sti
fidivl
shr
into
lods
cmp
mov
cmp
push
shl
push
pop
loopne
mov
mov
in
sti
mov
ds
mov
xor
int
xor
insl
fdivrl
push
loope
cmp
in
push
addr16
fistps
shrb
mov
pop
in
sbb
adc
sbb
sub
insl
call
jbe
inc
in
ss
data16
nop
nop
xor
dec
adc
mov
ds
xor
into
and
dec
and
test
repz
das
jnp
sbb
push
pop
sbb
mov
leave
cli
adc
pop
sub
ficoml
fisubl
scas
rcrb
repz
fiaddl
lods
lock
and
and
lret
mull
outsb
es
push
cld
mov
adc
in
fistl
adc
ds
daa
cmp
insb
xchg
cmpb
xor
dec
push
outsb
lret
rclb
sub
inc
lods
push
fisttps
jno
cmp
shl
hlt
xlat
pop
cmpsb
lods
aaa
and
aaa
aas
pop
and
rcll
add
dec
out
inc
movsl
out
aas
cmp
test
xor
iret
call
add
lret
cmp
push
lods
mov
bound
adc
mov
sti
pop
test
popa
dec
in
int
cs
std
shrb
push
inc
lret
inc
add
mov
call
fisttpll
push
jge
lods
jo
iret
lcall
mov
jo
fsub
shlb
js
call
mov
jbe
fcmovnbe
or
outsl
xor
testl
xor
cmp
xchg
push
jge
pop
push
mov
mov
arpl
lcall
and
cmpsl
sbb
jnp
sbb
pusha
push
out
sub
add
divl
rcl
fists
iret
fdivl
mov
addb
mov
into
lods
cmpsl
sbb
mov
xorl
lret
int3
insl
lahf
lret
sub
mov
cmp
in
sub
cltd
cli
movsb
imul
stc
or
xchg
mov
cltd
add
pop
xor
mov
enter
mov
lods
mov
fwait
call
rolb
xchg
mov
lods
jnp
adc
xor
mov
in
or
in
shll
sahf
inc
icebp
jle
jecxz
dec
sbb
push
pop
mov
mul
mov
sub
test
ficoml
or
test
incl
add
push
and
cmp
clc
loopne
outsb
out
adc
test
iret
rcll
push
andl
adc
mov
jle
cmp
sub
inc
push
in
addr16
clc
pushf
push
sub
cmp
pop
mov
xor
push
mov
sub
pushf
fadd
popf
pop
mov
and
push
jge
sbb
add
sbb
ret
cmp
sub
mov
shll
lock
lcall
stos
loopne
ds
out
cmpsl
sti
mov
addb
daa
enter
sub
lahf
nop
mov
cmp
movsb
or
xchg
cmp
sbb
dec
xchg
pop
outsl
and
pusha
rcll
loop
cwtl
and
insl
and
and
adc
rcrb
iret
pop
sub
pop
mov
gs
or
cld
jbe
jmp
pop
pop
aaa
pushf
pop
aas
ret
mov
add
mov
and
insb
sub
pop
push
adc
ret
cwtl
out
aam
cmp
xor
sbb
mov
xchg
pop
into
adc
test
xchg
mov
sarb
xor
ss
jb
mov
ret
test
sub
repnz
je
sub
bound
fimull
jae
in
shrb
add
mov
fisubrl
mov
out
out
or
push
adc
adc
mov
sub
idivb
cmpsb
jo
dec
lods
sub
loopne
pop
in
addr16
jle
cmpsl
sbb
out
jmp
push
xor
mov
mov
call
lret
sahf
mov
mov
xchg
jbe
sub
icebp
mov
les
shl
test
call
xchg
das
push
jle
xorb
sbb
adc
lods
repz
add
mov
jmp
fildl
in
xor
inc
push
pusha
ret
je
lock
leave
xchg
es
sarl
mov
pop
rcr
ficomps
aaa
jns
jne
push
mov
mov
xchg
lods
cli
fdivrs
pop
mov
pushl
xchg
jg
js
push
test
int
mov
aad
fcomps
jnp
cld
out
cmpsl
shrb
lods
cs
cmp
mov
lock
mov
or
xor
lcall
push
push
repnz
ss
pusha
pop
imul
inc
mov
and
mov
cmp
loopne
mov
xor
sub
fiadds
arpl
je
ret
cmp
sbb
xor
and
sbb
sarb
in
cmp
push
repnz
push
sub
call
push
mov
cmpl
insl
adc
or
adc
test
jae
mov
icebp
out
mov
or
out
scas
sub
insl
adc
lods
popl
nop
mov
adc
sbb
sarl
sarb
ret
cmp
push
sbb
gs
xor
lcall
lahf
adc
xlat
mov
mov
aad
movsb
adc
inc
and
int3
mov
sbb
xor
mov
fidivrs
mov
cmp
stc
push
sub
loopne
xorl
mov
mov
out
enter
xchg
xlat
lahf
nop
lret
adc
xor
sub
xchg
dec
mov
sbb
dec
das
mov
xor
cld
sarb
pop
push
test
jae
mov
and
jae
inc
jmp
lods
cli
movsb
pcmpeqw
push
pop
fidivl
inc
test
mov
mov
jnp
out
call
cmpsl
inc
push
jg
and
jb
cmp
push
incl
pop
outsl
sbb
ds
ret
add
xor
adc
xor
pop
mov
pop
mov
mov
ljmp
imul
scas
je
pop
fisttpll
sub
sbb
into
fstpt
cltd
push
push
bound
xorl
shlb
and
ret
adc
enter
inc
and
rol
out
fsubrl
or
ror
lea
imul
sub
ret
push
fdivrl
in
jmp
pop
xorl
aaa
addl
cmp
mov
inc
in
scas
scas
std
cmp
add
cld
stc
pop
mov
lcall
or
push
movsb
mov
mov
int3
ret
push
jns
sub
test
in
cwtl
xor
call
and
add
push
ud1
imul
push
loopne
fmul
scas
cmp
movsb
cmpl
rclb
jp
outsl
xor
in
xor
iret
mov
lock
xor
add
ret
jnp
rclb
int3
push
mov
dec
and
mov
xchg
push
dec
fdivl
int3
pop
bound
mov
popa
pop
das
js
call
cs
sarb
xchg
arpl
push
xchg
mov
lahf
mov
test
insb
xor
out
pop
fs
mov
add
imul
dec
xor
enter
or
faddl
ss
push
das
lock
mov
cs
scas
arpl
mov
push
jbe
sti
cmc
adc
sub
and
push
push
xchg
inc
fbld
xchg
scas
into
cmp
inc
mov
lcall
dec
cs
sub
test
aam
jae
add
movsb
lods
sub
enter
sbb
outsl
ret
jnp
xor
jns
adc
ja
call
or
xor
cmpsb
stos
and
stos
mov
adc
shlb
pop
sub
xlat
shlb
pop
mov
nop
jnp
out
hlt
add
sub
xor
sub
mov
lods
pop
mov
popf
addl
push
lret
mov
xchg
lods
sti
push
push
in
int
jbe
pop
cltd
imul
mov
and
in
enter
sarl
xor
jp
nop
imul
push
push
xor
ret
in
jae
ficoms
xor
mov
xchg
sub
sbb
sub
divb
mov
ljmp
ljmp
xor
nop
cmp
xor
mov
loopne
or
fsts
lods
xor
call
xchg
repz
negb
jo
jmp
scas
les
xor
in
or
sub
cvtpi2ps
es
lock
add
daa
mov
lods
cmp
adc
adc
xchg
cmp
xor
mov
in
mov
adc
dec
ja
adc
rcrb
pop
inc
aas
mov
mov
mov
iret
sarl
je
dec
sub
adc
fsubl
mov
push
and
ljmp
out
xor
sub
or
in
js
add
and
insl
and
repz
lea
jnp
rol
pop
xor
adc
cltd
pop
adc
mov
stos
inc
pop
adc
mov
idivb
add
movsl
sti
pop
mov
sub
adcl
scas
dec
lods
cmp
cld
in
cmpsb
mov
jo
xor
push
lods
xchg
xchg
cmp
mov
and
jae
loopne
subb
add
sbb
jnp
rclb
sub
in
js
divl
or
filds
mov
sarl
fcomps
xor
subb
mov
push
inc
loopne
ret
iret
push
lods
std
mov
iret
stos
ja
fisttpll
mov
mov
pushl
pop
in
xchg
divl
add
jecxz
xor
xchg
out
jmp
sbb
gs
xor
cwtl
out
push
jae
iret
scas
adc
cltd
sub
pop
outsl
cmp
out
dec
push
ret
lock
imul
popa
loopne
nop
in
xor
xchg
scas
fmuls
adc
mov
xchg
sub
sbb
icebp
jnp
inc
ret
mov
mov
ds
xchg
mov
mov
cmp
jle
jg
adc
rorl
lock
test
fstpt
cmpl
mov
sbb
sub
les
jge
mov
loop
pop
loopne,pn
mov
pop
insl
cltd
leave
mov
je
call
repz
bound
sbb
mov
out
and
sbb
rolb
sbb
xchg
sub
mov
ja
push
sub
adc
adc
jae
pop
out
inc
filds
dec
jmp
add
leave
lods
inc
add
sbb
dec
adc
fldcw
test
daa
cmp
out
mov
sarb
js
pop
movsl
arpl
jo
adc
bound
or
aas
mov
int3
dec
in
dec
movsb
add
mov
jle
mov
por
in
loop
outsl
aaa
subb
add
jecxz
ja
inc
clc
outsl
mov
and
aas
dec
jne
outsb
lods
je
call
sbb
pop
mov
adc
shll
mulb
data16
cmpsl
push
lret
stc
popa
jecxz
jns
lods
sub
mov
mov
call
int
into
in
call
es
pop
jns
repnz
inc
sbb
xor
rcrb
push
inc
lods
dec
xor
xlat
mov
xor
out
cmp
cltd
cmp
jae
sbb
scas
loopne
inc
or
pop
clc
popf
in
aaa
lahf
aas
daa
lret
add
xchg
mov
jmp
sub
lods
add
out
imul
iret
and
rolb
ss
bound
adc
dec
call
test
and
pop
scas
test
ret
xor
jae
jp
push
or
ljmp
mov
xlat
jl
xchg
loope
adc
mov
dec
call
sbb
sbb
cld
xchg
pushf
jl
inc
xchg
movsb
lock
push
or
push
sti
jge
in
ret
jge
and
push
faddl
hlt
jmp
and
adc
iret
and
sti
add
iret
sub
or
dec
pop
sub
mov
push
sbbb
fxch
mov
and
push
push
vaddpd
scas
lods
clc
xor
inc
insb
jl
movsb
insb
mov
cmp
cmp
gs
mov
push
dec
or
popl
dec
cvttps2pi
dec
int3
dec
jmp
outsb
xchg
shlb
pop
dec
jle
ljmp
jecxz
out
or
jnp
test
outsb
mov
inc
xchg
or
mov
lods
imul
jb
xor
rolb
in
lods
sti
cltd
out
or
dec
loope
in
cvttps2pi
sbb
aas
shlb
mov
aaa
out
or
cmp
xor
lods
jmp
rorb
add
call
or
lods
jmp
into
pop
cltd
incb
stos
aad
out
sub
sbb
sbb
and
mov
mov
jmp
push
lods
pusha
ljmp
int
testb
scas
add
sub
jmp
mov
inc
lods
loope
xor
and
pusha
add
mov
loop
mov
lahf
push
jns
cmp
jle
es
add
scas
lea
dec
outsb
push
sahf
or
dec
jmp
aaa
xchg
in
mov
mov
popf
xor
ja
leave
sbb
lock
imul
jg
jns
stos
adc
inc
adc
repnz
js
dec
test
mov
xlat
mov
int
sar
jl
adc
mov
jo
and
dec
repz
xchg
adc
cmp
xor
add
call
rclb
sbb
fstpt
adc
xor
xor
push
dec
add
fcomip
shl
sbb
sub
daa
dec
loopne
iret
xlat
xlat
test
sbbb
lret
xor
into
movsl
lock
dec
sbb
push
inc
mov
add
mov
je
jae
test
jecxz
push
nop
add
call
pop
scas
les
imull
shrb
push
insb
sbb
sbb
inc
mov
push
ja
sub
mov
cmp
push
pop
xor
stc
and
pusha
jecxz
lods
movsl
xor
cmpsb
enter
jge
outsb
stc
and
loop
stc
daa
fbstp
pop
xchg
or
jmp
outsl
pop
test
rcrl
jo
mov
mov
ss
into
inc
or
push
add
dec
mov
iret
pop
push
push
dec
aam
rol
call
mov
push
das
mov
mov
rorl
neg
xor
js
xor
out
inc
jp
popa
cmp
push
xchg
mov
pop
lret
mov
iret
dec
mov
push
xor
dec
data16
or
in
xchg
pop
loopne
dec
lock
ss
xlat
daa
ret
ds
insb
sahf
into
sub
ja
data16
adc
scas
sub
mov
jae
aas
mov
pop
popa
sbb
iret
fmuls
std
xchg
movsb
mov
or
xor
xor
xchg
in
jge
xchg
out
aam
cmp
nop
dec
mov
fcmovne
add
xchg
icebp
hlt
cmp
addr16
sarb
icebp
bound
and
test
add
rclb
mov
mov
push
ja
cltd
jns
loopnew
cmpl
scas
add
cmp
mov
fldenv
dec
mov
xchg
popa
jb,pt
rol
mov
mov
popf
push
out
mov
pop
dec
jle
lock
nop
inc
cwtl
sub
xor
daa
jle
adc
out
mov
lods
push
cwtl
and
jb
arpl
vphadduwd
out
xor
pop
stos
movsl
scas
ficomps
sbb
aad
call
cmp
lock
orb
cmpsl
loopne
push
mov
enter
sbb
imul
sub
jb
mov
dec
rclb
push
push
mov
mov
ficomps
push
adc
jb
xor
dec
in
push
mov
lods
in
xor
xchg
shll
pop
js
dec
enter
iret
cmp
mov
les
out
push
test
pop
pop
mov
fnstenv
cmp
sbb
aaa
xchg
out
inc
test
ret
lods
cwtl
jns
mov
stos
mov
loopne
mov
pop
push
dec
mov
pop
out
lret
pop
push
iret
and
dec
sub
cmp
jmp
pop
addl
das
in
sar
aad
jo
mov
lea
aas
test
mov
mov
jecxz
pop
mov
adc
iret
scas
outsl
rorb
sbb
dec
pop
adcl
xadd
lods
std
call
ljmp
testl
lods
sub
fstpt
lret
cmpsb
xor
mov
xorb
mov
add
cmp
mov
sub
dec
in
push
jl
fistl
stc
mov
mov
pop
inc
std
fidivrl
sbb
rorl
xor
sub
test
clc
js
pushf
mov
hlt
ret
andb
xor
add
push
iret
je
in
push
je
cmp
lods
lds
push
xor
sub
test
ret
xlat
lods
sti
pop
into
jl
std
pop
in
mov
popa
sti
scas
lods
push
lret
ljmp
add
idivb
into
dec
ret
cmp
mov
sbb
dec
xchg
pop
cmp
sbb
add
xor
jae
pop
xchg
add
int
sbb
iret
mov
xchg
decb
inc
pop
aaa
aad
lds
xor
push
pop
out
fmul
xor
shrb
daa
clc
pusha
movsb
pushf
adc
and
sbb
sbb
xorb
pop
push
in
pop
ret
into
inc
pushf
sbb
dec
sub
call
or
nop
lods
mov
push
mov
adc
pop
cmpsl
mov
jo
or
iret
sub
and
xchg
adc
lea
daa
jae
xor
sub
push
pop
es
pop
sarb
jb
jns
lods
dec
std
out
mov
aas
or
iret
sti
ss
daa
mov
sub
out
loope
fildll
sbb
repnz
hlt
sub
inc
js
cs
add
push
or
mov
pusha
adc
das
enter
sbb
sub
add
mov
js
outsl
fbstp
mov
lcall
mov
iret
push
push
enter
and
adc
and
dec
mov
jo
fisubrs
scas
adc
pop
pop
mov
or
xor
jmp
sarl
sbb
shl
std
xlat
sbb
daa
sub
or
out
loop
mov
iret
into
lods
mov
jecxz
jb
js
dec
or
es
cmpsl
dec
rorl
dec
cmp
hlt
das
clc
outsb
xor
dec
cmpsb
xor
loopne
mov
fcoml
dec
icebp
lods
movsb
jecxz
movsl
adcb
jl
pop
pop
call
lods
enter
pop
inc
iret
push
inc
mov
pop
out
sub
sahf
xchg
sbb
mov
jg
stc
cwtl
mov
lods
mov
shlb
adc
enter
xchg
addb
xor
mov
sub
adc
mov
mov
push
inc
daa
out
shlb
dec
mov
cwtl
rorb
leave
or
inc
jnp
xor
mov
dec
jns
adcb
or
cmp
cmp
pop
scas
pop
das
jg
sub
push
outsb
mov
add
push
orl
xor
mov
arpl
or
std
mov
out
inc
lods
cmp
push
movsb
jmp
mov
push
or
jmp
adc
out
or
xor
mov
out
ret
dec
jnp
fwait
xchg
int
inc
in
push
push
sub
daa
and
cltd
inc
js
test
lcall
int
adc
lods
dec
xchg
mov
push
ror
and
or
sub
hlt
divb
int
jne
sub
cmp
fstpl
test
sbb
out
loope
out
dec
fldcw
adc
jnp
or
test
rcrb
push
adcb
incb
ret
or
mov
pop
movsl
jmp
in
rolb
cmp
pop
jp
mov
jo
xor
inc
mov
lret
sub
lods
add
scas
xchg
xlat
push
rcr
and
sbb
loopne
xorb
mov
xor
bound
add
sub
clc
push
cmp
cltd
pop
cltd
sarb
or
in
mov
jecxz
push
lcall
sbb
aam
push
jge
mov
out
jnp
aaa
clc
fdivl
inc
mov
aas
lahf
insl
ss
shrb
sahf
pop
pop
mov
std
mov
test
mov
cmpsl
push
mov
adc
dec
sub
jecxz
lahf
adcl
add
push
or
inc
mov
stos
push
es
ret
aam
and
jmp
add
pop
cmpsb
clc
or
lcall
je
mov
jnp
loopne
mov
mov
jo
ljmp
loopne
mov
sbbb
fcomip
out
sbb
sub
subb
and
mov
xchg
dec
mov
cmp
xor
push
pop
dec
jae
filds
aaa
adc
push
fs
jmp
xchg
jmp
xor
xchg
cmp
pop
xchg
jg
out
pop
daa
fdivrl
ja
and
fimull
jne
fwait
sbb
cld
ret
sbb
adc
cltd
call
movsb
cmp
shlb
mov
sarl
xchg
test
mov
pop
cmp
and
inc
fsubrl
cmp
push
addl
in
mov
lds
movsl
jecxz
and
mov
xchg
iret
adc
mov
das
cwtl
shlb
sub
mov
nop
popa
xor
pop
fnstsw
mov
xor
fs
scas
aaa
scas
and
pop
sarl
in
and
dec
repnz
mov
insl
and
dec
add
sub
scas
sar
js
xor
jnp
call
sub
lods
rorl
jno
and
loopne
clc
xchg
and
lods
fstpt
jno
pop
xchg
and
xchg
shrl
mov
sbbb
nop
cmp
xchg
fs
mov
in
clc
adc
xchg
sbb
inc
or
pusha
push
hlt
jnp
dec
loop
or
lahf
inc
clc
mov
add
mov
cli
ds
lods
pushf
dec
ljmp
push
fmull
movsl
ret
xchg
inc
mov
push
lcall
mov
push
pop
int
daa
dec
cmpsl
mov
out
ret
inc
inc
mov
ja
mov
in
lods
mov
cs
dec
test
lods
out
and
pop
pop
pop
stos
add
shlb
or
stos
push
sbb
das
in
xchg
jnp
movsl
inc
or
das
mov
roll
cmc
pop
enter
xchg
xchg
add
dec
fwait
mov
lret
sbbl
pusha
sbb
lcall
pop
or
inc
arpl
jns
mov
sub
rorb
decl
out
cmpsb
into
xchg
out
rcrb
and
push
push
dec
adc
fptan
and
push
adc
test
mov
insl
inc
ljmp
dec
clc
fdivrs
movb
xor
xor
js
aad
sbb
pop
dec
pusha
xchg
sub
fiadds
enter
mov
rolb
imul
pop
out
and
movsb
pushf
mov
cltd
pop
push
ja
add
sub
or
cmpsl
pop
mov
bound
out
shll
lods
jns
pop
adc
ror
in
inc
push
jp
xchg
sbb
mov
pop
inc
jo
lea
or
dec
stos
xchg
xchg
ret
or
iret
push
dec
pop
push
out
push
fs
lods
or
mov
mov
jle
dec
stos
adcb
lcall
xor
and
mov
add
nop
jnp
scas
and
mov
mov
sub
outsb
pop
mov
mov
imul
cmp
lds
push
xor
sub
scas
xchg
and
repnz
movsb
and
imul
mov
cmpsl
adc
gs
pop
xchg
call
hlt
sub
jb
and
sub
test
cld
or
lods
arpl
push
mov
add
test
outsl
push
pushf
sub
rolb
cmp
or
sub
sbb
mov
ror
push
or
xchg
cmp
sbb
mov
jecxz
mov
pop
pusha
inc
mov
shrb
add
cli
popa
icebp
in
mov
add
push
stc
mov
and
add
lods
js
ret
cmp
scas
inc
pop
dec
xorb
sbb
dec
cmp
xor
filds
sbb
cmp
push
mov
mov
xor
lea
or
roll
movb
adc
aam
push
sub
dec
xchg
mov
and
ds
out
push
jb
xorb
scas
mov
dec
inc
mov
clc
xor
adc
push
xor
sbb
mov
call
daa
cmp
xor
stc
jp
mov
lods
xchg
ss
call
rclb
and
add
push
fadd
xor
mov
sarb
push
mov
and
les
rol
lds
in
jmp
sar
out
js
data16
fs
inc
into
mov
mov
ret
aad
or
fstps
inc
mov
sub
js
sub
bnd
xchg
loopne
sti
adc
insb
xlat
cs
or
sbb
sub
xor
push
je,pt
cmc
imul
loope
xor
push
adc
int3
pop
ret
mov
mov
mov
call
jae
dec
bound
mov
push
inc
mov
xor
scas
inc
cmp
arpl
rolb
in
xlat
jp
inc
xlat
sub
and
mov
jns
leave
add
mov
cmpsl
fisttps
and
pop
rorl
loope
add
call
adc
adc
mov
aaa
add
loopne
pop
les
pop
sub
das
ret
adc
and
cmpsl
repnz
lea
aas
imul
out
jbe
cmp
adcb
dec
lret
ds
inc
pop
dec
fsubs
pop
mov
adc
sbb
lock
negb
movsl
xor
pop
adc
or
xor
add
jbe
lds
call
movsb
push
and
and
lods
orl
ret
sbb
pop
in
sahf
sub
cmp
loope
scas
mov
sub
dec
or
lcall
pop
cmc
jle
movsb
push
mov
add
adc
push
cmp
mov
cmp
adc
dec
jp
lock
enter
jmp
jg
bound
mov
jmp
lods
pop
mov
loopne
mov
mov
rcrl
mov
loope
test
or
movsl
xor
call
mov
fcmovne
adc
mov
xor
dec
mov
mov
mov
dec
inc
mov
jmp
mov
mov
clc
jmp
xor
fs
fsts
push
xor
mov
js
imul
dec
in
aam
in
shlb
adc
dec
cmp
xchg
cld
call
push
xor
and
flds
addr16
mov
shrb
inc
addl
call
cs
pop
push
push
ret
pop
adc
dec
popa
outsb
js
rolb
popa
push
and
mov
lret
cmp
lods
lds
xor
or
jl
scas
or
cmp
add
pop
push
jnp
dec
movsb
int
push
xor
bound
inc
push
ret
dec
dec
push
jmp
sahf
dec
or
and
adc
lods
out
or
ret
ljmp
cmp
ret
out
mov
pop
lods
add
insb
push
sbbl
sub
fs
pop
adc
adc
or
das
inc
inc
sbb
xor
inc
loopne
inc
jnp
daa
adc
push
iret
out
aam
mov
rclb
popf
mov
pop
or
popf
jbe
and
jne
xchg
jae
sub
sbb
adc
iret
in
xchg
in
bnd
mov
cwtl
jg
movsb
push
jae
pop
jmp
aad
xor
fs
sub
inc
xchg
mov
jp
jnp
call
in
xchg
adc
fistl
lret
aas
adc
inc
or
xlat
mov
mov
push
cmp
scas
and
lea
xor
pop
stc
aas
jmp
sbb
sbb
jns
movb
addr16
test
push
nop
sbb
hlt
pop
inc
or
or
sti
xchg
xchg
or
lcall
sub
jnp
subb
or
push
sti
cmp
pop
aad
adc
cwtl
xchg
jp
fs
adc
sub
sbb
xchg
sub
sbb
jge
push
rcl
enter
cmp
shlb
push
lcall
call
in
push
adc
sarl
insb
addl
pop
lock
sahf
jnp
mov
inc
pop
xor
and
pop
scas
mov
test
mov
popf
jno
cmp
cmp
in
mov
es
test
xor
cmpsb
jne
pop
cmp
iret
cmc
rol
shlb
xchg
fcomps
xor
mov
insl
mov
orb
adc
scas
pop
cmp
psubb
pop
or
inc
pusha
insb
test
or
push
movl
sbb
imulb
mov
push
into
jnp
sub
loop
sub
mov
xchg
stos
pop
cmpsl
or
cmp
cmp
xchg
pusha
in
icebp
ret
hlt
movb
cmc
push
cmpsb
sbb
mov
pop
push
lret
les
dec
mov
mov
das
scas
fnstsw
xor
mov
adc
mov
pop
mov
inc
sbb
aam
adc
mov
out
icebp
insl
jne
rclb
cs
and
movsb
testl
and
mov
cmp
mov
out
lds
sbb
sub
lods
sti
sub
int
mov
xlat
ret
loop
xchg
xchg
push
insb
pop
dec
repnz
popf
leave
arpl
rolb
imul
aam
jp
add
add
and
adc
add
movsb
scas
mov
popf
stos
pop
adc
or
push
cmp
sbb
cmp
adc
push
pop
pop
pop
shrl
into
shl
rol
or
and
and
add
xor
movsb
outsl
add
cmc
and
adc
jecxz
test
jbe
pop
je
std
jns
xor
rcll
in
mov
xchg
cmp
lret
pop
int3
lret
inc
repz
add
mov
sbb
push
test
xchg
adc
inc
shll
nop
aaa
ds
cmc
hlt
adc
adc
pop
sti
or
fildl
cli
inc
push
add
cmc
cmp
sub
js
mov
xor
xor
inc
fsubrs
mov
adc
add
mov
ljmp
subl
xchg
mov
pop
jnp
enter
nop
fmulp
lock
adc
mov
cmp
mov
add
mov
and
or
adc
iret
fcmovne
xlat
jnp
and
mov
jnp
jmp
mov
xor
dec
add
es
movsl
sahf
stos
out
push
mov
xchg
cmp
int
ret
scas
scas
sbb
mov
sbb
and
mov
mov
lods
pusha
sub
loope
or
lahf
daa
shlb
jnp
sbb
sbb
xor
xor
or
incl
lret
sbb
jne
push
pop
xor
inc
dec
daa
lock
call
stos
pop
js
pop
cmpsb
mov
loope
inc
mov
insb
mov
jle
std
stos
movsl
lds
mov
sbbb
jnp
scas
in
popa
inc
movsb
les
sbb
adc
push
mov
mov
jb
addb
pushf
sub
rcl
and
cmp
ret
fnstcw
mov
cmp
mul
in
mov
lods
xor
popf
fcos
or
cmc
fcmovnbe
jne
stc
cmpsl
inc
negl
subl
mov
into
ss
fwait
lds
xchg
inc
lock
imul
jmp
and
push
cmp
or
jnp
rolb
mov
mov
jae
or
and
and
lahf
xor
dec
mov
inc
aaa
xor
ljmp
mov
cwtl
pop
iret
push
lret
mov
push
sub
mov
scas
cmp
das
aad
aaa
mov
sbb
mov
stos
sub
jbe
xchg
pop
pop
in
jnp
movsb
jle
pop
jnp
jbe
or
cmpsl
xor
pusha
lock
fstpt
sarl
shlb
sub
ss
clc
mov
inc
ret
jmp
xchg
inc
es
add
in
adc
adc
mov
test
mov
shll
dec
cs
in
rcll
nop
push
or
mov
mov
sbb
cmp
adc
js
loopne
out
and
dec
clc
pop
pop
frstor
pop
in
push
xorl
js
cmc
jmp
mov
shrl
xor
xchg
xor
pop
inc
mull
add
push
sar
mov
scas
pop
int3
aam
imull
stos
enter
fsubrl
movsb
repz
imul
ficoml
pop
sub
pop
xor
loop
push
mov
jno
and
mov
das
xchg
adc
ss
fcomi
dec
stos
arpl
scas
into
out
mov
aam
inc
paddq
mov
and
in
cmp
sub
fcmovnbe
xchg
xchg
sbb
sub
loop
adc
adc
outsb
insl
roll
jae
xor
into
push
push
in
mov
push
xchg
mov
sub
mov
movsl
xlat
roll
sahf
dec
sub
mov
add
mov
jbe
std
scas
mov
pop
call
sahf
and
adc
push
fcomps
or
xor
add
inc
mov
sbb
sbbb
repz
dec
orb
aam
cmp
mov
cmp
jecxz
stc
mov
sbbl
push
das
push
inc
mov
ret
inc
adc
jne
push
sbb
push
aas
out
push
xor
test
loopne
loope
fdivrl
scas
mov
adc
xchg
xor
cmpl
lea
stos
xor
dec
mov
out
push
cmpb
aam
dec
and
ds
imul
dec
nop
outsb
push
mov
xchg
mov
call
jle
and
xor
stc
popa
cmp
iret
xchg
mov
insl
push
xchg
push
fstl
daa
fisttpl
arpl
xchg
xor
shll
lahf
addr16
ror
adc
iret
setne
andb
imulb
lock
jg
sub
cmp
in
add
push
push
js
adc
pop
xchg
cwtl
push
clc
xor
inc
and
pop
ja
scas
dec
mov
std
sbb
inc
pop
mov
jl
cmc
mov
jecxz
sahf
push
jo
sub
pop
sar
ja
rol
divb
sub
mov
mov
bound
cmp
nop
pop
adc
insb
inc
sbbb
adc
dec
cmp
add
pop
call
std
ret
mov
ds
ds
cld
lods
mov
sarb
enter
aam
cltd
in
cmp
loopne
je
mov
mov
xchg
pop
fcomp
aam
iret
jg
mov
jmp
test
jmp
and
aaa
or
outsl
shlb
jg
add
sbb
flds
sub
pop
xchg
outsl
xchg
dec
dec
stc
and
sub
cmc
cli
inc
xor
fcompl
popf
leave
add
repnz
cmp
mov
hlt
jnp
xchg
in
fdivs
ficoml
add
cmp
cmc
push
das
int3
test
xor
mov
pop
aas
mov
rcll
idivl
jno
adc
in
ljmp
in
inc
xchg
mov
loopne
jo
cmp
jmp
xchg
jno
pop
setbe
xchg
jp
call
xchg
daa
adc
jns
movsb
xor
and
xor
or
cmp
test
jg
xlat
adc
mov
sbb
inc
inc
test
aaa
lock
pop
bound
adc
push
xchg
and
dec
rcrb
add
sbb
cltd
sbb
and
lds
jne
pop
sbb
push
or
pop
pop
push
in
pop
adc
outsl
mov
subl
jae
scas
fs
xchg
cld
iret
addb
dec
cld
cmp
push
mov
or
dec
mov
ret
loopne
sti
adc
lea
jle
adc
ss
hlt
lahf
rorb
dec
cmp
mov
mov
ja
add
sbb
adc
xor
cmpsl
jnp
test
bound
sub
and
and
fists
sub
push
mov
shlb
mov
xor
xor
pop
es
push
sbb
mov
pop
stos
adc
leave
cmovae
and
jecxz
js
aaa
stos
add
cmp
push
enter
lock
sbb
sbb
dec
push
repz
jg,pt
cmp
mov
dec
jmp
sti
mov
push
sbb
aaa
jmp
push
hlt
pop
mov
aad
sbb
xor
adc
jne
bound
adc
sbb
insl
cmp
iret
push
mov
sarl
inc
adc
ds
je
adc
call
es
adc
mull
push
lahf
test
adc
jg
movsb
les
jp
aam
nop
std
shl
into
inc
sahf
mov
jmp
xor
inc
add
mov
int3
pop
sub
out
lcall
mov
les
mov
xchg
cwtl
fimull
movsb
cmpsl
mov
xor
idivl
xor
sbb
das
xor
ss
push
mov
pop
xor
movsb
pushf
push
ljmp
andb
inc
jns
fs
lods
imul
pop
rorl
cmp
lods
jg
pop
movsb
cmp
mov
pop
mov
lcall
iret
popa
pop
aaa
movsl
xchg
cmp
testb
dec
repnz
dec
or
cwtl
inc
sub
insb
jnp
push
int3
jne
adc
push
ret
addl
sub
imul
sub
repz
push
lret
into
rolb
scas
adc
and
nop
sub
add
int
push
jg
fs
adc
lret
lret
popf
ja
ja
pop
dec
out
aam
adc
daa
xchg
nop
test
mov
lock
pop
xor
xchg
jmp
cmp
shrb
adc
cmp
das
sbb
xor
call
lret
daa
test
fildll
mov
jo
or
inc
shll
cmc
aam
das
lods
movsb
fldt
xchg
hlt
sbbl
leave
and
inc
in
push
insb
iret
pop
call
repz
xchg
imul
xchg
filds
sbb
mov
test
cmp
int3
ret
lret
outsl
mov
loope
sahf
mov
add
ja
mov
ja
mov
dec
xchg
adc
mov
mov
cmpsb
adc
mov
mov
sti
xorb
ret
scas
mov
out
xchg
addr16
shlb
insl
test
pop
jnp
aad
jne
jo,pt
aam
xchg
aam
je
mov
popf
or
and
clc
pop
arpl
or
jo
adc
lahf
popf
or
jp
popa
cmp
or
mov
adcb
cmp
fidivl
mov
mov
push
add
mov
fcompl
lods
xchg
cmp
adc
xorb
into
out
nop
popf
xchg
std
mov
cmp
mov
cmpsb
pop
xchg
arpl
sarl
xor
nop
les
dec
mov
mov
add
push
lock
pop
push
xchg
test
call
call
iret
imul
daa
test
mov
popf
dec
outsb
shrb
jo
cmpsb
mov
movsl
data16
push
jno
mov
in
and
js
aaa
sbb
xor
sub
bound
push
adc
rclb
jecxz
loope
repnz
mov
sub
lods
adc
xchg
inc
xor
dec
or
push
pop
lret
faddl
cmpl
call
pop
xchg
leave
nop
jo
ret
xlat
dec
sbb
lods
xchg
sti
daa
pop
and
and
int3
push
lock
pop
add
pop
add
testl
push
xor
cltd
adc
add
inc
pop
mov
adc
lods
iret
fucomi
mov
xchg
fwait
or
gs
jo
sub
inc
dec
mov
dec
push
iret
and
js
rolb
jge
mov
outsl
jo
leave
lcall
xor
enter
fdivrs
sub
pop
sbb
shlb
add
out
cmpsl
adc
jnp
leave
in
mov
test
cli
xchg
jmp
cmp
mov
jecxz
xor
inc
sbb
sbb
fsubrl
scas
xchg
xchg
xchg
in
into
aam
iret
inc
out
lcall
test
pop
inc
mov
xor
popf
jp
xor
mov
push
addr16
xchg
ss
or
mov
and
lock
xor
jo
mov
sti
jmp
or
pop
mov
sbb
outsb
mov
das
sti
pop
fucomp
mov
sbb
jl
jnp
pop
outsb
cmp
addb
xor
fsubr
sub
mov
push
adc
pop
mov
rcll
les
xor
fwait
mov
sbb
scas
add
ret
in
lock
dec
or
jae
and
roll
mov
leave
in
inc
cmp
push
mov
dec
cld
and
movsb
pop
into
das
mov
mov
mov
dec
adc
xor
inc
scas
sbb
mov
incb
shlb
jl
loop
xchg
mov
inc
std
pop
push
sbb
mov
mov
mov
xchg
sbb
les
sarl
jg
movsl
adc
repnz
add
and
jbe
inc
rclb
jl
out
jae
mov
cmp
lret
fsubrl
mov
pop
insl
xlat
dec
out
test
sub
cmp
sub
xor
lret
xchg
fisubrl
sbb
push
and
aam
cmp
lahf
jecxz
jge
jnp
fldcw
dec
in
push
and
adc
je
hlt
xlat
sti
out
or
scas
jecxz
mov
xor
jmp
iret
test
dec
and
push
xchg
out
ret
mov
jle
pop
adc
or
pop
cmpsb
in
sbb
and
xor
insb
sub
repnz
lods
add
xlat
pop
inc
mov
in
inc
jmp
push
out
and
or
sbb
hlt
adc
adc
xor
sub
jecxz
xchg
xor
xor
cs
rcll
inc
adc
xchg
jns
insl
xor
push
xor
xor
test
lds
sub
into
adcb
mov
push
lcall
jge
call
and
loopne
jae
sahf
repnz
movsb
inc
mov
std
call
lods
nop
and
mov
add
ss
nop
mov
jecxz
ficompl
sub
xor
mov
nop
das
adc
fstpt
adc
mov
ljmp
mov
adc
test
clc
pop
push
add
jg
lods
xor
xchg
jbe
int
mov
inc
cli
js
inc
shlb
hlt
mov
cmpsl
sbb
lods
dec
pop
cwtl
das
test
aam
and
push
jecxz
test
mov
lret
add
call
xor
dec
fnstenv
das
loop
cmp
out
mov
loop
fadd
test
pop
loop
sbb
rcrb
mov
cmp
xchg
aaa
ret
outsl
int3
adc
popa
fldz
pushf
inc
outsl
test
xlat
lret
aam
push
and
pop
fs
mov
sahf
mov
stos
notl
iret
lds
notl
aad
sbb
cmp
mov
sbb
out
cmp
jge
mov
in
mov
test
jnp
stos
shld
sub
das
shlb
ljmp
add
stos
adc
xor
sub
adc
pop
inc
pop
jb
mov
js
xor
mov
mov
lret
jl
in
lret
dec
movb
nop
push
inc
add
sahf
jl
xor
rclb
and
xchg
push
cmpsl
clc
shr
sbb
add
mov
movsb
and
fdivl
push
xor
jno
sbb
shrl
mov
sbb
call
ss
rorl
jle
fstpl
ja
inc
push
cmp
hlt
loope
xchg
stos
rcrl
repnz
outsb
call
and
jns
lods
ret
ljmp
lods
pusha
mov
push
add
jae
xorb
push
jge
pop
popf
call
cltd
dec
push
adc
and
cmp
and
jp
rdtsc
dec
push
jae
inc
loopne
push
jbe
and
adc
xor
sub
and
dec
mov
add
sub
iret
fildl
std
sahf
lods
sbb
imul
shll
jg
ror
sbb
push
stos
out
pusha
fistpll
stos
push
gs
mov
lods
mov
sbb
or
int3
in
xlat
push
aas
loope
ds
add
pop
cmp
xor
xchg
int3
clc
adc
cmpsb
and
xchg
iret
popf
jmp
pop
jecxz
push
fsubrs
jmp
and
mov
cmpl
icebp
pusha
mov
pushf
imul
mov
nop
sarl
out
ret
outsl
pop
mov
je
inc
lds
dec
sub
test
movsb
sub
push
push
jbe
and
movsl
repnz
nop
cltd
add
pusha
pop
cmp
xchg
popf
test
std
jmp
push
ret
jno
in
data16
xor
lahf
adc
mov
jl
in
push
mov
mov
testb
cmc
dec
xchg
sub
push
adc
fdivs
adc
das
fstl
mov
jo
xchg
and
faddl
push
mov
xchg
jg
pop
inc
dec
stos
ret
fisubrs
mov
sahf
dec
jge
cmp
mov
pop
dec
lds
push
add
pusha
or
sub
mov
mov
or
jmp
xor
or
insl
lods
jp
repz
stc
dec
push
mov
test
in
sti
add
cmpsb
in
pop
int3
popa
xchg
clc
jg
fsubrs
xor
es
jmp
stos
push
pop
xor
in
jmp
inc
and
hlt
movsb
fs
loop
aaa
xchg
clc
pop
pop
mov
jmp
jno
loopne
lcall
sbb
jns
push
add
enter
mov
inc
push
les
stos
cltd
int3
sbb
out
shlb
push
cmpsl
je
sub
jne
xchg
add
sub
adc
inc
shr
insb
xchg
fcompl
or
cmp
imul
iret
es
mov
aam
fisubrl
stc
mov
nop
inc
into
mov
imul
jecxz
adc
cmpb
push
aam
fdivrl
mov
or
in
adc
jns
xor
imul
fisttpl
lret
jbe
push
mov
js
sbb
cmp
dec
or
dec
xor
adc
or
adc
addr16
lock
and
loopne
dec
add
cmp
icebp
adc
shrb
inc
push
push
inc
xchg
out
cmpsl
in
cwtl
mov
insl
mov
sarl
stos
inc
popa
xchg
jb
ret
add
and
and
pusha
pop
xlat
pop
addb
jnp
jnp
xchg
jmp
xchg
faddl
insb
lods
divb
or
cli
das
ss
jnp
pop
cmp
push
or
std
frstor
sub
push
xchg
out
dec
cmp
iret
cmp
mov
xchg
iret
addr16
jecxz
daa
out
sub
inc
std
inc
adc
fbld
sbb
push
out
xor
or
aam
mov
cmp
fbstp
mov
dec
or
xchg
xchg
ret
adc
mov
mov
or
jo
pop
int
lea
in
nop
mov
divb
jmp
add
pop
mov
rcrb
mov
sbbb
lods
mov
mov
mov
call
cmp
sub
mov
push
mov
jg
into
push
sbb
dec
out
pop
imul
faddp
and
mov
scas
sub
xor
push
xor
and
xor
into
jne
test
sub
aad
sub
adc
push
and
ja
ds
imul
cmp
dec
push
push
mov
ljmp
mov
cmp
pop
nop
sarb
sub
scas
sub
sbb
cwtl
les
sbb
dec
mov
adc
call
mov
fs
fimuls
jmp
dec
push
addr16
sub
cli
sbb
pop
paddusb
push
push
push
out
inc
push
mov
lods
ss
in
aad
sub
std
fimull
mov
pop
popa
outsl
jne
mov
inc
mov
cmpl
dec
push
sbb
mov
mov
lea
sub
sub
cmpsl
insb
cmp
adc
int3
add
push
and
and
sbb
lods
mov
loopne
jae
dec
push
ljmp
and
pusha
daa
bound
and
pop
aas
adc
inc
push
daa
pop
call
outsb
fildll
mov
mov
scas
dec
pop
es
pop
sahf
mov
enter
pop
cmpsb
xchg
mov
mov
into
sarl
mov
mov
pop
lahf
outsl
ret
and
aam
inc
dec
mov
ss
ret
int3
sub
push
pop
adc
inc
test
cmpb
add
push
lock
mov
adc
mov
push
mov
sub
sbb
fidivrs
lods
jnp
lea
jmp
cmp
mov
fldt
shld
fsubp
jae
and
cld
dec
push
mov
mov
mov
fsubr
je
xor
loopne
leave
xlat
imul
into
add
xor
xchg
push
test
call
int
push
in
dec
or
and
leave
jl
xchg
rcl
inc
sahf
in
adc
cmpsb
or
push
cmp
outsl
jbe
cmpsb
cmp
cs
sbb
scas
shlb
jle
dec
and
dec
lock
gs
in
js
and
push
lock
hlt
outsl
dec
xchg
xchg
mov
mov
cmp
insl
rolb
lods
and
pop
loope
imul
les
push
sbb
das
push
and
hlt
test
and
int
movsb
out
imul
and
and
sbb
sub
or
xor
mov
xor
shrl
mov
cltd
cmp
and
lock
pop
sub
push
push
nop
and
shrl
insl
in
pop
imul
loope
pop
push
add
or
jnp
call
push
sbb
add
mov
pop
cmp
sti
es
mov
sub
jns
scas
mov
jmp
inc
in
jmp
cmp
dec
adc
adc
xlat
aas
ss
push
data16
pusha
lods
dec
lahf
mov
jns
dec
adcb
push
add
pop
cs
cmp
jae
xchg
sub
jge
mov
cli
int3
or
fs
daa
pop
lods
ss
test
mov
xor
or
xchg
xor
out
pop
or
pop
xchg
adcb
jns
adc
mov
test
das
cmpsb
adc
and
and
sarb
and
pop
mov
dec
mov
in
les
pushf
jecxz
cmp
and
es
cmp
imul
adc
fldl
add
lret
lea
ret
mov
popf
mov
sub
pop
inc
test
adcb
rclb
xor
das
fcoms
iret
jmp
xor
lret
dec
or
imul
jmp
mov
sub
push
loop
sub
xor
out
push
call
in
clc
inc
adcb
pop
fistpl
pusha
out
mov
movhps
lods
inc
out
aas
push
loop
cmpsb
stos
push
and
dec
mov
dec
fnstcw
or
test
cmpsl
mov
jne
adc
je
adc
pop
clc
pop
ljmp
in
xor
jle
mov
xchg
arpl
mov
shlb
jle
xor
xor
mov
loopne
loopne
jbe
pushl
and
xor
and
test
mov
cmp
fistpl
dec
iret
std
rorl
pop
push
jae
push
mov
xchg
fadd
rcr
cmp
sbb
int
cs
iret
sbb
loopne
jle
rol
dec
out
fisubl
daa
add
shl
stos
jns
push
xor
jnp
dec
sub
xor
fldl
cmp
cmp
adc
sub
std
xchg
xchg
mov
adc
sub
call
mov
mov
adc
lods
dec
testb
andb
push
pop
cld
negl
fiadds
fsubr
aad
out
hlt
xchg
out
xor
punpckldq
pop
fldt
push
mov
nop
sbb
lcall
sub
xchg
cmp
cmpsl
mov
es
daa
mov
jg
iret
fstps
shll
adc
xchg
xor
ret
cmpsb
jo
mov
adc
mov
sub
mov
and
popa
ror
sub
mov
and
pop
loop
mov
subl
lret
pop
clc
out
ret
sarb
ja
mov
daa
or
or
lods
pop
fpatan
xchg
dec
lods
insb
add
in
loopne
outsw
xchg
adc
pop
bound
daa
sub
out
jle
fbstp
and
push
jg
mov
jecxz
repnz
call
dec
mov
or
pusha
adc
loop
inc
movsb
aaa
mov
mov
xchg
nop
cmp
decb
cmp
jmp
mov
rcr
out
into
aad
fsts
jns
in
imul
adc
lods
jo
sbb
sahf
mov
and
out
jp
jle
push
push
xchg
mov
jecxz
xor
and
enter
fists
repnz
sbb
or
mov
clc
xlat
scas
adc
sub
ss
popf
dec
mov
and
dec
xchg
inc
push
cltd
dec
int
or
adc
lea
adc
and
psubd
xor
push
xchg
dec
cmp
mov
or
pusha
xorb
jmp
xchg
sbb
jle
iret
pusha
into
or
sbb
incb
mov
xor
lcall
jmp
fldl
xor
mov
js
sahf
adc
cmp
adc
insb
out
mov
pop
rorl
fcmovnbe
enter
push
rclb
sbb
subb
rcl
push
sub
inc
lods
jnp
flds
mov
xchg
jbe
shlb
xor
xchg
repz
push
dec
jl
popa
daa
jno
stos
fdivrl
jge
fisubrl
inc
xor
add
shrb
add
mov
jecxz
xor
and
ret
insl
xchg
mov
and
nop
xchg
outsl
jnp
repz
push
sub
int
test
cmp
out
ror
imul
or
adc
ljmp
push
mov
nop
dec
lahf
pop
mov
jecxz
adc
sbb
test
adc
mov
lret
xchg
push
jp
dec
shr
push
hlt
jle
aad
mov
incl
inc
adcb
dec
mov
push
mov
sub
push
hlt
mov
fsubr
inc
push
pop
jb
sbb
icebp
cmp
inc
push
push
mov
xor
push
push
mov
mov
loop
popa
inc
pop
jae
inc
jnp
jbe
fnstsw
mov
inc
arpl
orl
xchg
and
mov
xchg
mov
jl
movsb
jo
and
lret
mov
in
mov
add
jg
dec
cmpsl
mov
clc
sarl
mov
clts
les
or
insb
out
rorl
lock
out
scas
into
cli
xor
jg
cmp
test
or
aas
sarl
in
mov
cmp
sbb
cs
push
sub
xor
and
int3
lret
add
cs
xchg
xor
dec
mov
inc
test
int
mov
push
jbe
xchg
aam
popf
sti
lahf
js
xor
cmp
mov
movsl
push
jne
xor
out
sub
jl
sbb
movsb
aam
dec
cmpsb
push
ret
xor
rolb
jbe
subb
mov
inc
cli
mov
call
outsb
ja
sub
push
imull
ljmp
cmpb
sbb
cmp
pop
dec
mov
cmp
xor
jno
rcr
pusha
mov
andl
mov
sbb
add
pop
mov
in
mov
fisttpl
mov
mov
in
push
jp
test
cmp
fwait
mov
mov
paddb
popf
andl
mov
scas
arpl
inc
push
std
sti
ret
pop
dec
pop
mov
in
out
sbb
pop
sub
mov
and
jp
in
sub
lahf
adc
jecxz
jmp
jp
push
aaa
cld
add
inc
movsb
test
daa
jmp
das
in
and
negl
xchg
pop
push
ds
mov
xor
add
shlb
cmp
cld
pop
fadds
in
ret
inc
mov
dec
scas
mov
lahf
incl
xchg
movsb
mov
mov
sbb
mov
sarb
je
aas
nop
rcrl
ja
outsl
or
cmp
cs
jo
movsb
fnstenv
imul
dec
incb
call
insb
inc
in
fstpl
fldt
dec
mov
mov
sbb
adc
pop
sub
das
mov
pop
cmp
mov
iret
clc
sub
add
cmp
lock
shrb
int
mov
mov
and
movsl
pop
xlat
cmp
gs
add
xor
fidivrs
sahf
sti
adc
lea
sbb
or
push
xor
mov
cmp
mov
dec
sbb
psrld
cld
push
movntq
mov
daa
test
jle
add
sbb
pop
inc
pop
push
stc
imul
sub
pop
sub
push
jnp
or
jns
in
xor
popa
popf
sbb
pusha
je,pn
das
mov
dec
out
mov
push
adc
adc
sbb
xor
push
adc
push
loop
stc
jge
cmp
dec
pop
cmpsb
jno
jge
cli
mov
inc
dec
lods
push
push
popa
lahf
xor
loop
jp
jmp
sbb
push
inc
std
jo
mov
mov
adc
push
adc
mov
push
cs
ljmp
lret
cwtl
ds
or
mov
int
xor
ret
dec
mov
nop
popa
xor
shrb
outsb
popa
ja
cs
gs
add
clc
leave
pop
sub
add
or
aaa
cmpsl
mov
and
fldenv
in
pusha
xor
fs
int
cwtl
sbb
clc
mov
jmp
sarl
mov
push
mov
rcrb
inc
mov
outsb
ljmp
pusha
scas
xor
xchg
jecxz
pop
adc
out
test
jae
in
test
dec
fdivs
repz
adc
push
lret
shlb
int3
sub
nop
shlb
pusha
push
mov
sbb
repz
push
mov
push
sub
hlt
push
aaa
divl
sbb
arpl
inc
cltd
shll
cltd
sub
and
push
fwait
mov
cmp
xor
rcr
test
nop
xchg
xlat
add
rol
sti
scas
cmp
pop
jle
push
shlb
roll
jb
push
and
popf
outsb
pushf
arpl
mov
mov
pushf
movsl
cli
imul
shl
push
bound
and
adc
sub
xchg
mov
sti
push
sbb
mov
movsb
cli
inc
mov
sub
jg
xchg
cmp
imull
and
push
out
mov
outsb
loopne
imul
mov
js
stos
sbb
bound
loop
xor
xchg
and
rol
bound
xor
mov
cmpsl
push
cld
ret
sbbb
and
dec
scas
cmp
call
jbe
xchg
xor
lock
cmc
out
jae
icebp
dec
data16
out
mov
lods
dec
loop
stos
rcll
adc
adc
aas
das
mov
mov
scas
ss
pop
mov
adc
imul
ret
icebp
pop
xchg
mov
cmp
add
jmp
xor
cmp
add
and
cwtl
sahf
sub
daa
xchg
aas
dec
mov
sbb
lret
adc
loopne
add
out
dec
pop
les
and
repz
int3
loop
nop
pop
out
cmp
fimuls
lods
or
rorb
mov
sub
jge
lds
iret
mov
loopne
clc
mov
add
sub
ror
jge
test
adcb
pop
mov
xchg
test
addr16
inc
iret
lock
inc
or
jmp
lods
or
xor
test
gs
adc
lock
lock
sub
and
rclb
int
lcall
cltd
enter
stos
mov
aas
adc
shr
xchg
insb
adcb
jecxz
push
popf
arpl
adc
hlt
and
cmpsl
mov
xchg
rcll
popf
add
in
lock
fdivs
subb
xor
out
cmp
and
movsb
push
outsb
push
xor
xor
xor
mov
pop
rorl
cmpsb
cmc
dec
sahf
loop
and
mov
fbstp
push
mov
icebp
clc
mov
aam
loopne
xchg
lahf
mov
inc
jecxz
into
clc
aam
les
pop
cmpsl
cltd
ja
stos
test
pusha
insb
fisttpll
hlt
push
lock
jo
into
adc
sbb
negb
iret
sbb
pop
das
imul
jmp
shlb
push
ljmp
pop
cs
mov
notl
mov
mov
shll
dec
push
dec
xor
test
xchg
cmp
lahf
mov
icebp
lods
add
shlb
jmp
mov
outsl
lods
xorl
push
jl
loopne
dec
xor
cmp
pushl
xor
add
into
jmp
stc
xor
js
bndldx
aaa
leave
or
fcomp
sub
xchg
out
sub
push
mov
ret
repz
in
cmpb
and
out
mov
or
stos
sbb
inc
ret
mov
sbbb
popf
jecxz
push
sbb
fmul
fwait
mov
xchg
les
cmp
hlt
cmp
cmpb
lock
push
and
inc
das
loopne
andb
mov
fs
sub
jbe
add
xor
push
jns
xlat
push
sbb
repz
scas
mov
fnstcw
pusha
mov
pusha
or
xor
outsl
jmp
pushf
arpl
push
xor
and
add
fdivrl
addl
xchg
push
cmp
stc
cld
add
cmpl
mov
into
faddl
xor
xlat
push
mov
rcrb
jae
ja
es
adc
jp
scas
data16
outsl
call
call
fs
loope
fsubrl
push
xchg
jge
repz
xor
pop
xchg
lcall
cmp
sbb
in
pop
insl
sub
addr16
mov
daa
xchg
dec
jle
dec
adc
lods
in
adc
mov
dec
inc
jae
adc
pop
mov
pushf
adc
mov
xchg
mov
cs
cmp
sub
ror
mov
pop
cmp
or
push
pop
push
jns
and
or
cmpsl
add
jle
jo
xor
leave
idiv
rorl
push
mov
push
cmp
or
push
add
xchg
cmc
xchg
pop
mov
loope
jns
or
xchg
inc
nop
add
cmpsb
ss
stc
cmc
sub
insb
out
mov
jmp
js
xor
or
enter
adc
add
sbb
orl
add
stc
or
jg
aas
mov
or
aaa
or
insb
sbb
inc
xlat
push
into
dec
xchg
lds
cs
outsb
xchg
lahf
mov
mov
out
sbb
push
xor
das
xchg
subl
cs
cld
mov
insl
outsl
xor
jl
pusha
clc
pop
xor
ja
cmpsl
loopne
adc
cmp
jmp
lock
pop
bound
sti
push
xor
shl
pusha
pop
psubusw
xor
out
jae
xor
fcmovnb
dec
and
push
into
mov
shr
xor
cmpsl
daa
fs
jae
mov
mov
sarb
aam
mov
ds
cltd
mov
hlt
aaa
cmp
sbb
and
test
pop
jne
sub
int3
sbb
push
jecxz
in
mov
fwait
in
shrl
div
cmp
adc
fwait
mov
loopne
pop
out
data16
push
shlb
dec
pop
shll
pusha
adc
dec
mov
push
sbb
inc
and
push
mov
loop
inc
pusha
push
iret
xor
test
das
insb
stc
cs
in
xor
dec
jp
popf
call
pop
lock
push
leave
xor
cmpsl
jbe
sbb
lahf
xorb
mov
xlat
jo
mov
sub
xor
repnz
out
in
and
xor
push
jnp
xor
aas
out
int
cmc
sub
bound
mov
aam
push
dec
push
repnz
jge
and
shr
or
loopne
xor
movsb
xor
fcoml
jo
mov
xor
xor
test
and
pop
lea
filds
sub
loope
inc
cwtl
test
sbb
xchg
loopne
arpl
lods
rclb
test
imul
inc
push
repnz
push
and
ficomps
pop
hlt
fdiv
dec
test
fucomi
mov
lods
xor
xor
dec
cmp
mov
dec
xchg
add
sub
sbb
fstpl
adc
rorb
xchg
mov
das
fisubrl
das
mov
dec
xor
hlt
and
cwtl
adc
std
das
cmp
pop
hlt
sbb
ds
sbb
nop
inc
imul
and
outsl
cmpsb
and
adc
adc
cmpsl
and
daa
xchg
sbbb
fidivl
fadd
push
xchg
in
xor
nop
mov
dec
adc
adc
repnz
das
adc
notb
xor
and
xor
xor
xor
cmp
and
dec
xchg
xchg
sub
cli
xchg
sarb
pop
repnz
xor
aam
mov
mov
sbb
dec
jb
out
cmpsl
int
cmc
xor
popf
dec
sbb
subb
shlb
int3
nopl
push
jge
and
gs
cmp
movsl
fcompl
divl
mov
loop
push
push
jle
and
mov
mov
dec
test
loop
ja
xchg
dec
push
push
push
mov
sbb
ret
add
and
xor
and
cld
data16
or
pop
scas
inc
inc
in
adc
jmp
loope
add
sti
cmpl
int
mov
sbb
mov
push
cmp
ja
pop
dec
dec
addr16
cmpsl
inc
pop
fcomps
xchg
pusha
xchg
adc
sarl
cmpb
fwait
ret
mov
xor
les
adc
mov
mov
cmpsl
mov
mov
add
push
popf
ja
xor
mov
loop
clc
and
mov
and
or
pop
sahf
sub
adc
inc
and
fmuls
aaa
xchg
adc
ss
and
push
and
lods
addr16
ss
outsl
in
icebp
test
ljmp
xor
aam
adc
daa
les
ljmp
fsubrl
lock
mov
jnp
push
and
dec
repz
push
ret
inc
std
lods
or
adc
or
shlb
inc
cmp
lods
ss
jecxz
xor
lods
jns
test
mov
mov
mov
gs
mov
ss
sarb
mov
lds
pop
jo
jle
dec
std
test
stos
loop
adc
scas
inc
clc
mov
inc
push
sbb
mov
repnz
ds
or
jo
std
pop
mov
pusha
jo
test
addr16
sub
pop
sbb
add
punpcklwd
sbbb
mov
jb
and
iret
roll
xchg
jge
test
dec
mov
mov
fsub
pusha
test
pshufw
inc
push
pop
xchg
pop
xchg
inc
mov
jnp
stc
push
dec
push
add
out
lea
sub
popf
add
jle
fsubrs
out
mov
sub
lret
rcrb
sti
cmp
mov
shrl
xor
push
sbb
push
test
outsl
lods
loope
je
cmpsb
adc
or
add
nop
or
gs
nop
sub
lea
imul
mov
call
or
aam
bound
aam
push
inc
fwait
sahf
hlt
cmp
mov
xchg
dec
xchg
outsb
sti
fldl
and
ja
xchg
movl
inc
insb
jae
sub
movsl
add
sbb
hlt
mov
and
jp
mov
repz
pop
das
mov
push
cmp
dec
dec
js
cmp
mov
jmp
push
mov
xorb
dec
loopne
or
outsb
sbb
inc
test
rcl
cmp
push
dec
add
ret
inc
pusha
inc
loop
cli
xorl
xchg
nop
xlat
mov
shrl
pop
xchg
stos
sbb
pusha
inc
xchg
pop
mov
push
adc
xor
sbb
sub
dec
mov
pop
and
push
adc
pop
lods
je
out
xor
pop
push
aad
adc
mov
mov
xor
xchg
sti
cltd
je
mov
pusha
not
xor
ret
call
jnp
rolb
jnp
xchg
dec
into
and
das
adc
or
cmp
jmp
sahf
sbbb
cmp
jno
cmp
cmp
sahf
adcl
int
inc
aaa
cmc
andl
sub
popf
add
jnp
jmp
frstor
mov
inc
push
std
cmp
loop
sbb
lock
es
add
xchg
sahf
dec
xchg
loope
ds
pop
xorb
shrb
dec
lods
scas
push
jg
sub
sbb
jo
pop
jmp
pop
sub
pop
cmpsb
enter
dec
cmp
adc
push
xchg
fsubs
mov
sub
push
fisttpll
or
mov
mov
int
mov
adc
add
sbb
loop
repz
addl
xchg
and
pop
and
sbb
les
fsubl
push
fisttpll
jbe
nop
add
cmp
xchg
jo
ss
sub
cmpsl
push
ret
sarl
xchg
loope
cmpsl
xchg
cmp
push
iret
cmpl
rorb
sub
in
sbb
bound
xchg
pusha
jl
sub
cmpsl
sub
loop
mov
cmp
xchg
sbb
xor
hlt
pop
sbb
test
mov
rorl
jae
arpl
inc
jmp
add
dec
adc
jge
notb
sahf
pusha
jns
sub
jl
dec
push
mov
or
lahf
push
outsb
pop
cmp
pop
mov
xchg
lret
cs
cltd
jbe
xor
testl
hlt
daa
in
div
popa
adc
das
jns
daa
cwtl
or
sub
dec
in
adc
pop
sbb
hlt
adc
xor
dec
mov
pop
mov
enter
mov
push
js
lret
sub
mov
lret
pop
loop
dec
xor
sbb
jno
push
fdivrp
repz
mov
inc
dec
mov
clc
fcoml
imul
adc
fimull
jg
lods
jmp
dec
mov
sub
movsb
sub
adc
mov
jg
sbb
test
jl
iretw
repz
mov
fcomps
pop
dec
movsb
cld
ret
mov
rcrb
shl
and
jno
dec
add
mov
cmp
xor
xchg
mov
sub
cmpb
lahf
cmp
jbe
mov
sub
or
jecxz
cmp
pop
scas
dec
scas
add
in
jo
ret
mov
push
jp
mov
or
mov
add
iret
inc
xor
bound
test
add
pop
pusha
jae
mull
mov
sub
pop
and
xchg
popf
add
int
jns
pushf
aas
fwait
jbe
or
pop
rclb
dec
js
stc
mov
and
cmp
insb
cmp
ret
repnz
aaa
inc
pushf
jnp
and
cwtl
xchg
add
mov
adc
and
sub
movsb
clc
in
push
jbe
add
mov
jle
das
mov
daa
adc
inc
fwait
lcall
or
pop
inc
mov
repnz
inc
scas
pusha
popf
mov
cmp
scas
sub
test
mov
pushf
jle
fdivrl
adc
mov
mov
xchg
mov
loopne
insb
imul
shufps
add
int
icebp
lea
sub
lods
dec
push
cmpsl
and
jbe
push
fcmovu
and
ret
loopne
adc
das
mov
dec
mov
mov
xchg
and
loopne
dec
sub
mov
mov
xor
mov
add
insl
mov
pop
inc
cmp
daa
jge
lret
frstor
pop
loopne
dec
int3
ret
dec
pusha
mov
bnd
sbb
dec
push
and
mov
js
adc
pop
fsubs
xor
xor
push
xor
ljmp
jnp
add
jae
aad
scas
bound
jo
out
imul
cmp
sbb
enter
mov
loopne
mov
mov
xchg
xor
add
push
rcll
and
lret
and
push
fisubrl
fldcw
sub
add
dec
push
mov
xchg
xchg
pop
movsl
daa
std
fs
push
dec
sbbl
bound
sbb
jl
shlb
sbb
ljmp
cld
jmp
xor
pop
mov
data16
adcl
fstps
in
jmp
test
cmpsl
aas
xor
nop
xor
mov
mov
xor
sbb
xor
adc
xlat
mov
dec
adc
adc
xchg
ljmp
cwtl
ds
sub
push
mov
lahf
or
leave
inc
or
add
and
loop
push
repz
xor
in
scas
dec
add
imul
les
inc
and
sbb
inc
adc
gs
enter
andl
cmp
cmp
call
push
jbe
lods
pop
push
pop
in
shlb
aam
push
sti
cs
cmpsl
jle
inc
lods
loop
aas
cmpsl
int3
pop
insb
or
rcr
push
scas
push
das
mov
mov
adc
inc
mov
ljmp
push
fisubrs
loop
mov
jmp
pop
ss
sub
xor
mov
sbb
sbb
cmp
and
sub
sub
clc
lods
in
and
jne
push
sub
mov
and
repz
xchg
js
das
jmp
mov
lcall
es
inc
loop
sub
mov
mov
aas
dec
jo
push
pop
xor
ror
jo
nop
int
into
out
enter
jle
xor
push
int3
add
adc
xchg
fdivrl
nop
jnp
lahf
sti
xchg
shlb
mov
xchg
xchg
add
push
setl
sbb
pop
data16
mov
fimuls
loope
popa
in
jb
imul
xor
leave
das
popa
and
push
filds
mov
xchg
push
push
mov
rorl
add
lods
inc
js
pop
and
rorb
popf
mov
lods
repnz
jp
pop
adc
out
push
outsl
and
popf
push
repz
push
mov
lods
adcl
in
mov
jb
mov
je
pop
jecxz
sub
rorb
mov
cmp
xor
sub
mov
jle
xor
scas
cs
push
sahf
mov
xor
in
pop
popa
ret
xlat
adc
in
or
in
add
pop
fsubs
jae
sahf
pop
mov
sub
ret
pop
pop
clc
lahf
mov
fnstcw
mov
out
cmpsb
pop
in
scas
push
repnz
sub
aaa
daa
jae
out
jne
xor
fs
push
movl
iret
push
stos
jle
call
fiadds
xor
rolb
dec
dec
jae
cmp
gs
cmc
sbb
ja
loop
and
call
mov
mov
xor
mov
inc
mov
jnp
adc
mov
in
and
lret
or
pop
out
xor
xor
lods
stos
loopne
and
dec
mov
add
scas
insl
push
popf
adc
lods
xchg
das
or
dec
iret
and
hlt
push
pop
mov
movsb
mov
jl
outsl
cmp
shl
bound
out
adc
sub
adc
cmp
sarb
sbb
xor
dec
mov
inc
jne
pusha
shlb
cmp
cmc
aas
icebp
mov
mov
or
std
cmp
lea
adc
or
les
movd
daa
mov
pmaxsw
sbb
push
bound
leave
cmp
or
jecxz
ret
pusha
push
push
adc
leave
xor
mov
mov
pop
ds
xchg
sub
hlt
sti
jmp
rcrb
adcb
mov
xchg
xchg
xchg
sub
cmp
out
mov
sub
mov
push
stos
mov
dec
pop
call
sbb
xchg
std
xchg
scas
push
out
subb
push
icebp
mov
jne
out
xor
in
loop
mov
jmp
movsl
fimull
push
pop
mov
adc
mov
xor
jo
lock
dec
cltd
in
loop
lods
cld
sub
mov
mov
lret
out
lret
pusha
aam
fucomi
and
movsl
jo
test
adc
pop
loopne
or
sbb
pop
test
pushf
outsl
xor
fwait
pop
mov
in
or
mov
inc
cmp
push
pop
lret
jo
insl
aas
ljmp
lds
push
repnz
aad
out
test
dec
mov
inc
scas
loope
fldt
mov
add
aad
loopne
stc
cmp
sub
mov
mov
cs
sbb
and
out
movsb
inc
mov
clc
and
es
call
test
testb
xor
ror
sub
fs
jnp
adc
mov
pop
stos
inc
aam
ss
mov
cmp
add
pop
mov
sar
shll
push
jnp
enter
das
pop
pop
xor
pop
cmp
mov
inc
adc
xor
lret
dec
push
inc
aam
ja
and
inc
pop
xor
test
cmp
xchg
jmp
insb
or
pushl
gs
and
add
push
ja
xor
in
lea
rorl
jge
into
cltd
loop
push
pop
dec
xchg
data16
jae
fadds
pop
add
xor
or
lods
das
sub
test
inc
xchg
and
add
popf
imul
imul
jne
add
imul
lahf
xorl
sbb
cwtl
pop
push
jle
jg
iret
adc
jp
mov
into
cmp
add
mov
into
testl
loopne
push
xor
sub
daa
dec
inc
push
dec
clc
jle
mov
jo
add
adc
int3
out
loopne
sbb
addr16
sub
sbb
sub
jle
outsb
icebp
mov
out
push
mov
aad
aaa
xchg
jge
lret
scas
imul
fidivrs
pop
mov
popa
xor
in
jmp
jmp
sbb
and
pushf
shll
icebp
sub
movsb
insb
in
jbe
orl
jb
xor
mov
fcmovnb
rol
outsb
dec
jne
inc
lret
pop
push
and
stc
loopne
jne
out
mov
jge
jns
aam
arpl
cmp
xorps
sbb
push
adc
jno
mov
bound
das
js
pushf
ds
iret
pop
xchg
out
jmp
push
in
aaa
xchg
jae
stos
and
and
out
add
movsb
xchg
frstor
in
sbb
cltd
inc
test
loope
push
inc
paddsw
int
cmpsb
or
movl
adcl
iret
inc
add
sahf
mov
jns
cmp
out
jmp
divl
movsl
pop
mov
stos
test
mov
lahf
cmp
int3
xor
jae
sub
jnp
jle
ljmp
decl
adc
cmp
xchg
mov
xchg
mov
mov
cmp
js
into
sti
enter
lahf
aas
mov
sub
xlat
add
rorb
sbb
mov
sub
mov
jo
movsl
xor
or
or
add
or
mov
in
or
cli
fdivrl
in
jmp
xchg
lods
add
ss
daa
jbe
insb
jp
lods
adc
push
mov
jecxz
lods
aam
push
cmc
pop
push
imull
mov
jmp
in
jnp
and
sub
and
shlb
xchg
mov
loopne
push
push
fs
mov
mov
movsb
aam
fcomp
mov
fisttpll
cwtl
popf
jnp
ftst
inc
call
inc
sbb
arpl
mov
insl
inc
dec
jp
mov
test
mov
adcb
call
and
in
mov
add
ret
lea
and
and
or
jl
lret
lahf
enter
in
adc
imul
sti
and
jle
adc
sbb
outsl
push
mov
jle
rdpmc
inc
xchg
loop
arpl
dec
rcrl
test
int3
mov
movl
mov
mov
xchg
clc
sub
mov
or
and
iret
ficompl
xlat
mov
sbb
cmp
inc
mov
pop
movsb
cmp
test
xchg
popf
jmp
xorl
js
clc
sub
mov
das
outsb
movsl
sub
jmp
adc
popf
or
cmpb
mov
cmp
push
mov
rolb
shlb
sub
add
cs
mov
fistl
lahf
ds
fdivs
rolb
sub
in
cs
inc
scas
fsubr
out
jle
mov
das
cltd
add
dec
aaa
pusha
pop
dec
xchg
pop
hlt
add
emms
bound
test
dec
pop
xor
mov
cmpb
fidivl
cmp
iret
adc
addr16
das
push
pop
shll
cmp
pop
xchg
push
pop
xchg
mov
push
es
repz
fprem
sub
dec
lcall
mov
push
dec
aaa
add
sub
cmpsb
dec
xchg
cmpsb
bound
fsubrp
movaps
out
or
add
push
xchg
aam
fmuls
mov
pop
pop
push
xchg
scas
cmp
fcomps
dec
outsb
pop
pop
mov
inc
mov
xorb
mov
mov
loope
add
mov
jecxz
dec
pop
push
inc
ror
les
ret
fsubs
sarb
pop
cmp
adc
pusha
adc
and
mov
jo
aas
and
jecxz
xchg
mov
movsb
rol
popf
pop
ljmp
and
jnp
fwait
lret
mov
dec
pop
and
mull
cmp
adc
add
jnp
stc
push
fistpll
sub
jg
or
sarl
or
and
push
into
stc
lret
jecxz
dec
insl
dec
hlt
jmp
test
gs
dec
xchg
dec
adc
sub
mov
xchg
daa
shr
sarl
add
mov
popf
pusha
call
and
xlat
aas
dec
mov
pop
out
mov
xor
pop
sbb
lcall
roll
repz
dec
out
cmpsl
cmp
sbb
ja
and
cmp
ds
repz
in
mov
jbe
lea
jge
lock
sbb
sbb
orl
push
or
stos
sti
jne
lahf
daa
into
sub
sub
push
xchg
pop
or
loope
stos
jae
xchg
mov
xlat
faddp
lods
adc
xchg
lods
mov
dec
xchg
mov
jne
jle
in
jns
std
pop
mov
mov
testb
sub
scas
ja
and
lahf
test
bound
aam
and
xlat
push
mov
hlt
aas
sbb
lret
ficoms
sarb
aad
xchg
push
rolb
mov
push
add
sti
mov
xor
push
push
pop
std
cmp
cmc
and
mul
dec
es
sbb
pop
ret
adc
xorl
xchg
test
mov
data16
in
push
inc
add
mov
or
adc
mov
mov
negb
sarb
xbegin
push
pop
push
div
mov
mov
jbe
mov
out
xorb
out
mov
dec
add
dec
pop
ret
xchg
pop
iret
push
cmpsb
or
jnp
sarl
push
inc
adc
cwtl
push
xor
cmp
xchg
in
mov
jb
pop
and
push
pushf
sub
shlb
mov
push
test
pusha
pop
leave
jbe
dec
push
pop
sbb
cmp
int3
sbb
xchg
cltd
sti
mov
cmp
cs
mov
and
mov
pop
cmp
jp
out
mov
rcr
sbb
inc
pop
test
push
mov
js
and
loop
pop
lret
dec
cld
xchg
scas
cmp
add
inc
loop
stos
gs
call
and
iret
dec
icebp
mov
sub
jle
arpl
outsl
push
xchg
mov
xor
add
sbb
daa
jg
jle
pop
jo
loop
push
loopne
movsl
sbb
movsb
popf
or
aas
iret
int
mov
imul
out
add
and
or
insb
xchg
mov
dec
ffreep
aas
pop
outsl
fisttpl
cmp
cmc
pop
test
push
cmp
adc
cmp
pusha
aad
mov
push
das
xchg
out
ds
mov
aam
insb
mov
lahf
mov
xor
add
cwtl
push
add
pusha
stos
inc
out
in
jns
andb
mov
imul
lahf
xor
in
jnp
and
ficoml
orb
sahf
ret
adc
insb
xor
or
in
adc
add
xchg
push
xchg
pop
mov
lods
inc
inc
and
cmp
ret
test
cmp
je
mov
sbb
repnz
aam
mov
les
xorb
mov
roll
xchg
or
inc
fs
jb
stos
xor
mov
int
shlb
xchg
adc
xchg
mov
push
pop
ds
mov
push
mov
sub
xchg
lcall
pop
sub
insl
mov
xor
pop
insb
xchg
out
jmp
xor
dec
fdivs
xor
xchg
pop
mov
movhps
imul
into
out
jp
inc
inc
inc
adc
xor
inc
fcomps
xorb
out
call
push
add
aaa
sub
call
xor
stos
aaa
test
jnp
out
xchg
mov
js
jmp
push
mov
leave
jb
in
inc
push
or
adc
inc
bound
jmp
lods
jmp
jb
mov
movsb
push
push
aam
std
decb
in
fwait
idivl
mov
jo
pushf
out
pusha
inc
test
arpl
jl
test
sbbl
mov
adc
ja
mov
nop
inc
das
adc
mov
adc
add
jmp
dec
lods
and
popf
pop
cmp
cmp
xor
and
add
sbb
sbb
int3
add
mov
adc
jae
int3
ret
aad
cmp
js
in
mov
mov
mov
rcrb
mov
dec
jecxz
jne
pop
lds
pop
jbe
cmp
stc
mov
roll
sbb
adc
pusha
cmp
js
lock
sarl
and
mov
mov
mov
iret
popf
sahf
inc
and
fadd
insl
cmp
mov
mov
and
jo
lock
mov
xor
jmp
mov
jge
cmp
lods
inc
hlt
dec
mov
out
dec
pop
add
setge
adc
arpl
icebp
loopne
and
mov
and
lock
pop
pop
adc
xor
pop
mov
pop
clc
inc
int
jae
enter
jo
sbb
cmp
push
rolb
outsb
xchg
mov
mov
mov
jo
mov
adc
and
or
ror
jbe
sbb
mov
les
push
js
and
add
orl
and
insb
flds
inc
movsb
jmp
stos
xor
mov
pop
cmpps
in
pusha
push
xor
jne
add
sbb
add
lock
fsubrs
cmp
mov
pusha
push
enter
inc
cwtl
mov
jo
into
pop
and
arpl
lods
mov
cmpsl
xchg
inc
es
popf
pop
or
lods
mov
int3
or
decb
iret
pop
xor
sub
nop
adc
int
shrd
mov
and
into
cmp
mov
insl
lret
lret
mov
cmp
jo
or
out
call
imul
jbe
inc
jno
push
sub
and
pop
inc
shl
push
jnp
sub
data16
scas
xlat
xchg
mov
scas
jl
xor
inc
in
int3
dec
xchg
outsb
rcrl
xchg
adc
scas
fs
xor
mov
dec
push
cwtl
mov
sti
inc
jmp
mov
add
push
shll
fwait
xlat
arpl
mov
xchg
and
das
mov
adc
fucomp
enter
nop
sub
imul
push
and
and
js
pop
scas
mov
fidivs
sti
in
test
fsub
push
aas
push
xchg
fmull
cwtl
mov
in
add
sbb
repnz
adc
inc
in
lret
mov
add
mov
mov
mov
push
mov
jno
aam
jo
xor
mov
rorb
mov
xor
pop
lock
mov
int
xor
fisubrs
sahf
jno
das
xor
sub
rclb
xor
lcall
dec
sbb
out
rcl
ror
sahf
and
fucomi
cmp
fisubs
or
jecxz
mov
mov
mov
call
ret
lcall
jge
test
repz
or
je
sahf
xor
mov
aaa
cmp
cwtl
sbbl
or
lahf
mov
fdivrl
popa
xor
and
xlat
clc
lock
das
mov
sub
xchg
xorb
push
ret
imul
outsl
pop
nop
ret
mov
sub
mov
pushf
ret
and
jl
mov
stos
xchg
or
shrb
mov
xchg
cmp
mov
pop
mov
das
xchg
mov
fidivrl
enter
inc
or
push
xor
xor
loopne
es
bound
jg
pusha
add
inc
lods
adc
leave
and
mov
mov
notl
call
cmp
add
in
push
cmp
lds
mov
adc
mov
cmp
and
and
test
clc
xlat
aaa
insl
fsubrl
pusha
inc
stos
mov
in
xor
neg
cmp
cmp
add
xchg
outsl
jecxz
divb
pop
dec
sti
jmp
jne
add
push
in
ret
adc
mov
clc
push
push
dec
fistl
dec
cmpsb
fmuls
lock
ljmp
xor
mov
ljmp
fs
xchg
cmp
add
mov
add
loop
mov
sbb
std
jo
sarl
dec
pop
imulb
fidivrs
outsl
andb
pop
iret
fsub
fnstcw
cmc
fdivrp
cmp
loop
inc
xor
jo
mov
scas
pop
dec
mov
in
dec
call
imul
cmp
js
jge
out
clc
aaa
dec
cmp
shrl
push
add
and
push
scas
shlb
dec
pop
pusha
and
fldcw
in
iret
ret
outsl
lea
push
lods
pop
out
je
push
incl
and
add
and
loop
out
fisttpll
psubusb
pop
mov
sbb
lcall
mov
xchg
adc
shr
scas
dec
adc
or
dec
adc
cmpsb
sub
jbe
ficomps
jecxz
ret
rcr
pop
sti
mov
aad
ds
adc
pop
bswap
fbld
mov
mov
mov
mov
mov
movsb
std
data16
xchg
scas
sbb
mov
and
push
bound
mov
push
sbb
fsubr
ljmp
sub
out
xlat
or
je
mov
adc
xor
or
inc
mov
sbb
cmpb
mov
lret
iret
clc
lret
add
aas
sub
jecxz
in
pop
loopne
sbb
xor
add
fcomps
or
test
xor
xor
repz
inc
rep
ficoml
inc
and
push
and
sbb
outsl
push
sub
arpl
gs
fsubp
xor
mov
dec
sub
add
mov
fists
sub
pop
mov
and
sub
jmp
mov
popa
int3
jno
and
cmp
fsubr
mov
lret
loope
aam
push
xorl
subl
pop
pop
ret
inc
pop
mov
lock
dec
push
orb
movsb
or
roll
fists
adc
lods
inc
jl
mov
jge
out
and
mov
sbb
loopne
xor
iret
ss
es
in
mov
adc
fstps
cmpsl
fdiv
ret
insb
jne
xor
push
and
jo
jns
ret
repnz
mov
out
pop
mov
pusha
sub
dec
scas
bound
jle
mov
ja
mov
out
popa
lahf
and
mov
fucompp
sbb
and
and
repnz
inc
mov
sbb
jnp
pusha
jl
in
cmp
ljmp
test
out
pushf
inc
dec
cmp
adc
sarl
cs
xchg
push
adc
aas
push
cmp
mov
push
mov
mov
cmp
bound
mov
lahf
cld
lods
jle
fs
mov
arpl
lret
shr
int3
in
jae
cmp
cmpl
or
cli
mov
lock
jge
sub
movsb
cmp
inc
loope
pop
lods
call
pop
push
sahf
pop
sbb
jne
xor
and
sahf
addr16
xor
xchg
jmp
out
jns
hlt
mov
mov
repnz
xchg
adc
mov
push
enter
push
dec
out
sub
sbb
sub
mov
out
fadd
sbb
xchg
insb
xchg
bound
dec
fisttps
pop
or
jg
aaa
repz
hlt
xor
lahf
mov
es
adc
loop
push
add
das
xor
pop
sbb
cmp
aas
pop
adc
add
cmp
int3
inc
shlb
jns
lret
ret
inc
add
arpl
test
aaa
sbb
out
adc
iret
lahf
sub
cmp
imul
push
cmp
mov
nop
lock
imul
negl
scas
repz
out
std
sbb
sub
sbb
pop
and
call
xor
and
clc
sub
xor
into
mov
fsubs
into
cwtl
sub
shlb
sbb
clc
sbb
cmp
add
sub
lock
mov
xchg
push
jo
testl
lretw
imul
aaa
push
sbb
mov
push
inc
int3
xor
daa
adc
pusha
mov
ss
shll
aam
jg
xchg
sub
xchg
jp,pt
push
outsb
pusha
loop
push
pop
pop
pop
jnp
mov
in
outsl
and
stos
push
pusha
ss
cmp
adc
adc
or
pop
cmp
stos
fcmovb
dec
xchg
cmp
pop
push
andl
cmp
in
lods
clc
xchg
jle
movsl
rcll
stc
pop
push
jmp
xchg
popf
out
jae
fistpll
cmp
add
mov
int3
loop
adc
push
xchg
push
int3
fmul
mov
jnp
push
mov
dec
outsl
test
adc
mov
mov
sbb
mov
out
fmull
test
shl
jnp
fisttpl
xchg
jp
jbe
rolb
leave
pop
aam
inc
inc
mov
jmp
add
inc
or
mov
aam
xlat
cmpsb
jae
ret
pushf
rclb
lds
call
addr16
jmp
ret
imul
adc
jb
movsb
addr16
ds
stc
sbb
jle
mov
xchg
push
push
jae
imul
sbbb
fildll
loopne
add
mov
ror
cmp
fistpll
jnp
jle
mov
jmp
xchg
in
jae
pop
xor
pop
aam
jmp
test
mov
jno
pop
std
or
or
jmp
xor
cmp
push
fs
ret
dec
aad
insb
mov
inc
ret
lods
clc
cwtl
xchg
jge
lret
adc
xlat
rcr
mov
and
or
add
insl
in
sub
xorl
inc
mov
in
pop
xlat
ret
iret
push
dec
pop
mov
orl
loopne
fimuls
adc
lahf
xor
ret
popf
insl
push
fdiv
jnp
cmpb
cli
adc
jns
loop
int3
sub
xor
adc
pop
dec
test
adc
add
imulb
cmc
inc
mov
cmp
mov
xchg
dec
jno
mov
fidivrl
shlb
push
fcoml
repnz
shrb
mulb
int3
pop
cli
and
aam
rcrb
hlt
aam
and
sbb
and
mov
lahf
std
inc
jecxz,pt
das
mov
push
or
cmp
sbbb
icebp
aas
sbb
jno
test
fwait
movsl
dec
lret
push
mov
loope
fisubl
mov
orl
mov
dec
xor
cmp
push
scas
clc
mov
lds
push
out
jns
sbb
ret
push
lds
das
mov
jle
cwtl
cltd
pop
push
sarb
jle
insb
loope
add
xor
shrl
pop
loop
xor
sbb
dec
pop
cmpsl
cld
inc
push
mov
adc
sbb
fists
add
aas
xchg
mov
or
cmp
popa
dec
out
mov
mov
fs
loopne
sbb
sarb
adc
sahf
pop
lods
pop
into
jg
cmpsb
scas
xor
jmp
and
xchg
xchg
lahf
ljmp
cmp
and
xchg
iret
aad
int3
imul
add
adc
sbb
rol
scas
pop
adc
cmpsb
std
push
xchg
stos
xor
das
sbb
test
add
lret
push
xchg
lods
xorb
cwtl
sbb
aaa
xlat
inc
ljmp
fldl
pop
pushf
mov
jae
sub
mov
jle
sub
insb
mov
xchg
add
xor
sub
mov
inc
dec
mov
or
jo
aaa
push
dec
int
call
das
test
call
pop
aaa
mov
cs
mov
pop
shll
fcmovnb
dec
adc
sbb
xchg
mov
and
or
ja
xchg
arpl
dec
push
jo
cmpsl
ret
and
mov
pop
dec
mov
in
cmpsb
xchg
adc
sbb
xchg
rorb
testl
imul
popf
xchg
mov
imul
cmp
add
cli
add
xor
mov
pop
test
rorb
icebp
mov
push
das
jp
dec
dec
subb
xchg
repnz
mov
arpl
pusha
sarb
pop
in
jl
sub
das
test
pop
jnp
lods
sbb
pop
js
dec
fnstsw
push
ss
vandnps
xor
sbb
jle
cmp
and
or
notb
inc
or
or
add
jmp
add
mov
insl
xor
sub
fisttpl
cmp
or
and
fmul
bound
repz
cmp
lods
adc
mov
andb
int
jb
das
and
pop
inc
iret
adc
bound
lahf
stos
nop
shlb
js
xchg
push
mov
sahf
mov
dec
lock
mov
dec
jge
push
dec
adc
lds
aaa
das
pop
and
mov
rol
lea
sub
loop
cmpl
pop
fdiv
sbb
pop
lahf
in
cmp
fistl
jle
jmp
call
sbb
outsl
sbb
jns
push
or
push
mov
jbe
aam
sub
mov
fldcw
jae
jecxz
pop
outsl
push
mov
loopne
xor
test
cli
cs
mov
add
cwtl
sahf
movsl
fcompl
xlat
pushf
push
leave
rorb
xor
cmpsb
xor
aas
js
fisubrs
pusha
outsl
cwtl
sub
lret
jl
int
pop
loop,pt
mov
movsl
shll
aaa
ljmp
add
xor
add
shlb
mov
fnstcw
jo
xor
inc
mov
cmpl
daa
arpl
popa
mov
fnstenv
xchg
das
test
push
insl
mov
push
adc
in
iret
iret
int
rorl
pop
mov
pop
push
call
pop
push
data16
stos
in
je
mov
shll
ljmp
sbb
mov
jg
or
push
xor
fstps
jl
mov
mov
aaa
jnp
fimull
mov
mov
jmp
mov
fistpl
les
in
adc
add
mov
and
in
shrb
stc
rcll
mov
xchg
mov
insb
stc
jo
mov
sbb
daa
xlat
cltd
adc
xor
mov
push
xbegin
lods
call
dec
push
std
mov
push
out
adc
mov
sti
mov
inc
sub
jle
mul
ret
jmp
jecxz
fbstp
enter
into
adc
fcoms
pop
call
lret
cmc
lcall
pusha
sbb
pop
je
jl
sub
xor
test
mov
cmp
sub
hlt
jle
mov
xchg
les
lods
mov
jge
cmpsb
imul
stos
jecxz
call
pusha
add
push
pop
ja
js
or
call
sar
imul
lock
jecxz
cmc
jne
fld1
mov
pop
ss
xor
test
test
aam
push
add
ss
cld
push
mov
xchg
xor
mov
cs
inc
fsubrl
aas
data16
loope
je
enter
and
call
lods
adc
and
mov
push
aam
loopne
cmpsl
jg
mov
neg
ror
mov
rorb
jp
add
push
xchg
sub
jmp
sti
mov
ss
jmp
cmpl
xor
pushf
lock
adc
lods
push
jo
fsubp
les
cli
mov
cmp
add
inc
jecxz
rolb
movsb
xor
jbe
mov
cmp
push
movsb
clc
add
rcl
cmp
adc
sub
sets
sarb
pusha
lods
fiadds
jmp
pop
pop
inc
in
adcb
xor
fcmovnb
jle
das
mov
idiv
data16
push
scas
sbb
stc
jge
cmp
and
and
adc
lods
mov
push
add
and
pop
clc
insl
outsb
shrb
ljmp
aas
mov
shll
imul
bound
dec
xor
lds
cli
or
clc
jle
and
or
inc
mov
mov
push
shll
xchg
dec
fisubl
xlat
fisubrs
nop
dec
xlat
dec
jnp
out
cmp
jmp
push
das
mov
dec
pushl
sub
pop
push
aad
pop
test
into
mov
repz
test
or
sbb
jae
mov
imul
scas
lret
movups
jnp
pusha
cmp
cmpsl
xchg
or
int
movsb
jbe
mov
aad
out
cwtl
enter
add
aas
jle
fneni(8087
mov
and
in
cli
sub
leave
or
push
inc
add
cs
jb
lcall
jp,pt
and
pop
xacquire
push
mov
xor
mov
push
rcrl
ljmp
cmp
cmp
dec
xor
pop
jl
scas
adc
rorb
sub
repz
int
xlat
in
js,pn
jo
stos
into
and
cltd
imul
scas
and
mov
push
stos
aaa
repz
sub
pop
xchg
lret
shlb
mov
mov
and
lds
sub
imul
push
adc
cmpsl
into
mov
into
inc
data16
sbb
add
mov
and
outsb
xchg
jae
popa
xor
mov
negl
lods
adc
xchg
cmp
sbbb
cmp
mov
fdivrl
addr16
hlt
and
movsl
or
jne
add
adc
xchg
movsl
inc
lds
or
scas
or
mov
sub
push
aas
cwtl
push
divl
mov
mov
ret
popa
pop
rclb
xchg
or
push
icebp
aaa
push
fld
pusha
inc
lock
lods
mov
rorb
pushf
daa
mov
daa
cmp
cltd
rcr
aam
xchg
lret
xor
bswap
in
test
add
lods
movsb
rclb
or
and
push
sahf
push
fsubl
cmp
fs
and
cs
lret
xor
pop
jo
sbb
push
xchg
inc
pop
xor
ret
or
fistpll
jg
dec
pusha
sbb
mov
out
rol
push
xor
or
sbb
stc
cmpsb
sub
es
cltd
sub
popa
sahf
subb
sbb
ss
add
push
cmpsl
mov
lods
ret
lret
in
sub
enter
mov
jae
out
mov
imul
pop
jmp
lock
icebp
into
jmp
sbb
xchg
push
hlt
adcl
inc
mov
dec
jmp
out
inc
and
jo
xchg
ret
jns
xor
mov
adc
jne
push
inc
and
push
cmpsl
sub
jns
mov
ljmp
or
shlb
push
ret
fildll
repz
cltd
cli
outsl
cmpl
jne
aaa
shll
adc
add
push
mov
sbb
stos
pop
addr16
ss
push
jns
sub
dec
bound
xor
mov
add
push
bound
or
lods
popf
std
cmp
sub
lahf
pop
loopne
sbb
mov
xor
inc
jge
push
push
push
insl
sub
jge
jb
fcoms
push
xchg
lods
arpl
mov
pop
mov
pop
cmp
aas
arpl
push
cmp
and
hlt
clc
popf
or
stos
andb
push
xchg
inc
mov
ret
sti
xor
lock
adc
jo
or
mov
adc
int3
add
test
frstor
mov
rolb
mov
push
xlat
mov
xor
das
mov
adc
and
sub
xchg
pop
ljmp
enter
push
sarb
enter
or
adc
and
mov
aam
mov
adc
popa
mov
add
sbb
inc
mov
jmp
mov
cltd
or
mov
cmp
out
lds
ljmp
jmp
das
test
clc
or
sbb
mov
jl
popf
outsl
push
scas
dec
xor
xor
inc
in
sarb
jle
ret
out
movsb
xor
lahf
imul
or
push
movsl
mov
addr16
testb
push
pushf
lods
imul
fcoml
xor
sbb
cmp
pop
testb
int
loopne
jnp
jle
pop
mov
lahf
add
add
movsb
aam
xchg
aam
addr16
sbb
into
cmp
jl
imul
lret
pusha
std
je
and
addb
cwtl
shlb
and
jne
mov
loope
lods
call
hlt
dec
push
xor
in
loop
xchg
pop
mov
lcall
lock
incl
lods
jmp
mov
sbb
stos
add
xchg
punpcklbw
nop
sahf
repz
jmp
je
pop
push
test
adc
movb
sbb
add
rorb
movsb
ret
sbb
jb
stos
cmpl
adc
dec
cmp
clc
cmp
stc
adc
push
loope,pt
ljmp
or
cmp
push
call
cmp
cmc
int
cmp
je
mov
out
sub
push
jp
inc
aaa
fsubr
outsb
int3
mov
imul
setge
add
ljmp
int
push
xchg
movsl
mov
fstpl
adc
sbb
shlb
shll
cmp
mov
mov
lret
and
lods
adc
test
mov
fistpl
adc
fs
outsb
inc
rorl
popa
pushf
in
outsl
iret
mov
adc
xchg
xor
shll
push
lods
sbb
cmp
sbb
xor
sarl
icebp
sbb
and
push
sarb
mov
dec
sub
imul
lahf
cs
push
and
mov
pop
movsl
jb
push
adc
add
lods
cmpsb
sub
call
dec
pop
mov
out
add
inc
imul
shlb
dec
or
mov
cmpsb
sub
xor
dec
cmp
ficoml
mov
sti
and
ss
data16
lods
xchg
cwtl
sub
dec
xor
jmp
call
add
sbb
addr16
jle
test
pop
sub
ret
bound
sbb
lods
imul
loope
dec
mov
popl
shll
mov
out
divb
pop
insb
push
adc
jne
mov
sbb
pop
lahf
movsb
jnp
or
dec
bound
fbstp
and
jle
push
subl
lods
sarl
ljmp
or
stos
arpl
std
pushf
inc
push
jge
xor
gs
and
lea
stos
fsubs
adc
push
dec
mov
aaa
or
iret
xor
pop
inc
cs
rcrb
rcll
mov
call
cmpsl
scas
adc
testl
rolb
fcoms
cmp
notb
fsubl
push
mov
enter
jnp
fiadds
jbe
idiv
aam
and
cmpsl
addb
aas
adc
shll
jnp
andb
or
adc
xchg
fisttps
cmp
inc
mov
and
outsl
pop
sbb
test
mov
inc
xchg
xchg
mov
xor
cmpl
fucomi
nop
push
xlat
aaa
sar
roll
pushf
jo
or
out
rcrb
cmp
sbb
lea
pop
or
rorb
cmp
mov
das
inc
jmp
movsl
or
cmp
das
sbb
shr
enter
pop
es
sub
xor
mov
sbb
std
jle
mov
xchg
clc
into
je
stc
jl
out
fsubrl
inc
ss
pop
or
xchg
push
ret
mov
jle
adc
sbb
clc
mov
out
sbb
xor
mov
icebp
and
inc
xor
out
jbe
cs
shrl
pusha
cmp
add
lods
jno
pop
or
inc
add
push
push
dec
insl
add
nop
stos
push
sub
or
mov
fdivs
sti
addb
loopne
push
cwtl
das
push
leave
loope
adc
icebp
mov
sub
jmp
mov
and
or
pop
jno
inc
pop
sbb
sub
adcl
and
or
cmp
mov
fists
bound
push
jns
xchg
jg
cmp
pop
fimuls
xchg
stc
adc
pop
call
dec
sbb
xor
lods
lcall
sbb
sbb
adc
mov
test
or
clc
pop
addl
inc
adc
scas
outsb
out
dec
push
loope
xor
push
popa
xor
cmp
les
push
and
mov
jo
dec
adc
lea
imul
inc
add
ds
push
jae
cmp
inc
mov
es
dec
add
or
test
divl
dec
fs
leave
cmp
popf
jecxz
cmp
imul
adc
arpl
sub
push
jmp
loopne
fdivrl
sbb
leave
xlat
les
cmp
push
jle
cmp
js
push
in
ss
int
scas
rolb
cwtl
pop
das
adc
out
imul
shlb
das
shrb
xlat
jge
das
mov
ljmp
aas
rcrb
xchg
shll
push
aam
mov
out
cmpl
sti
sbb
xor
pop
pushf
pusha
mov
bound
xchg
push
push
mov
ret
stc
pop
dec
add
add
das
mov
sub
push
sbbb
push
cs
ja
mov
fbstp
cmp
pop
mov
into
pop
lods
clc
das
and
scas
push
in
test
xchg
daa
repz
arpl
xor
pop
inc
rolb
iret
mov
adc
add
cvttps2pi
pop
xor
sbb
lcall
sbb
fstl
lods
mov
mov
loop
das
dec
stos
adc
mov
out
mov
ret
jmp
mov
aad
adc
sub
cld
or
mov
mov
aad
lods
es
sbb
loopne
sti
inc
lcall
mov
push
scas
orl
lret
add
iret
jmp
sbbb
int
cwtl
loopne
sub
jl
cmp
cmp
mov
dec
shll
push
dec
outsl
out
sub
jg
comiss
lea
ror
sbb
xor
sbb
add
outsl
rcrb
mov
and
sbb
cmp
pop
pushf
stc
into
jmp
inc
in
loope
adc
lods
test
outsl
push
dec
ljmp
or
shl
jne
aas
adcl
into
mov
cmp
and
lock
dec
aas
pusha
xor
mov
mov
mov
rcrl
add
mov
lahf
mov
testb
imul
cltd
rep
out
dec
int
sti
jae
mov
mov
lea
jle
push
hlt
push
xor
sbb
xchg
into
imulb
cs
mov
jns
out
mov
xor
mov
inc
movsl
loopne
add
insl
lods
push
imul
and
lret
cmp
lock
mov
cwtl
adc
cmp
sarb
nop
int
adc
ja
mov
shrb
lahf
jl
das
sbb
jo
xor
xor
lahf
shlb
outsl
shl
cmp
mov
xor
mov
outsb
xor
mov
ret
ss
push
insb
mov
std
sarl
fsubl
dec
jl
sbbb
cmp
inc
out
xor
xchg
dec
pop
dec
jbe
mov
xor
pop
lret
add
dec
jne
mov
int
enter
dec
sahf
push
jmp
repnz
dec
add
in
jno
in
cli
lea
or
add
sahf
add
iret
add
xor
jne
add
loopne
jle
inc
inc
aad
out
push
mov
adc
pushf
fwait
cmp
das
sahf
std
xor
out
jbe
cmp
andb
xchg
in
pop
scas
std
sub
and
rorb
xor
cmp
push
jp
xor
mov
icebp
out
xchg
mov
cmp
xor
mov
dec
mov
sub
test
cmpsl
inc
iret
sub
in
cmpsb
push
shr
int
jp
mov
push
inc
and
aad
mov
jb
pop
es
lods
dec
lea
test
test
adc
shrl
inc
dec
jle
adc
jp
or
adc
cmp
cwtl
dec
push
fstp
or
sbb
ja
jo
sbb
subl
mov
add
dec
icebp
mov
call
pop
mov
or
hlt
loopne
sbb
cmp
sub
sbb
jo
adc
orb
mov
mov
mov
pop
lret
mov
xchg
adc
je
scas
les
loopne
ds
rcrb
cmpps
outsl
dec
hlt
hlt
or
mov
and
jns
xchg
jl
lret
or
jns
lret
mov
fucom
out
das
sbb
lret
dec
cmp
mov
push
cmpb
add
mov
idivl
es
sub
cmc
mov
movsl
aas
loop
fidivl
add
and
inc
jb
fisubrl
outsb
loopne
inc
mov
cmp
push
mov
mov
jl
pop
mov
mov
mov
call
ficoml
popa
jl
xor
xchg
jne
addr16
mov
sbb
dec
cmp
ficoms
xor
aad
fwait
or
inc
and
pop
das
mov
cmpb
scas
cmp
ja
imul
lods
jae
ds
dec
mov
jne
or
cmpsb
pop
jge
imul
mov
mov
inc
iret
daa
mov
fisttpll
loopne
aam
and
aas
arpl
mov
loopne
lods
jno
and
or
fbstp
repnz
jmp
sbb
in
in
aam
add
nop
dec
lods
jnp,pt
xchg
ss
jmp
rcrl
ret
or
lods
lods
or
jno
mov
fcomps
rcrb
mov
push
mov
cld
das
ret
cs
mul
push
hlt
jecxz
out
mov
dec
cmp
lret
aam
dec
popf
jp
mov
inc
push
sub
sbb
mov
lahf
pop
mov
xor
lcall
dec
pop
clc
push
adc
sahf
cmp
adc
pop
xchg
mov
mov
add
xor
mov
sbb
adc
adc
pop
sbb
data16
enter
imul
xchg
push
test
fwait
shrb
les
or
aad
pusha
ja
sahf
insl
fcomp
adc
sub
jg
pop
ret
roll
push
nop
and
je
xor
bound
push
mov
mov
shl
lret
dec
mov
mov
lret
ret
rdpmc
cmp
sub
nop
loopne
xchg
push
xchg
push
pop
mov
mov
lds
cmp
lods
hlt
enter
lock
addr16
mov
xchg
mov
das
fwait
lock
pop
and
sub
mov
insb
dec
cmpl
cmp
pop
cmp
dec
sbb
mov
sub
call
mov
arpl
bnd
outsl
jne
movsl
outsl
or
dec
sbb
xor
fidivrl
dec
jno
shlb
repz
and
mov
xchg
aam
xchg
sarl
movsb
stos
loop
test
je
sbb
and
inc
sahf
pusha
sti
jecxz
shll
fst
adc
aam
and
nop
dec
sbb
pushf
das
pushf
mov
sbb
in
xchg
xor
mov
mov
add
loop
shll
and
cmp
inc
ret
adc
push
in
xor
mov
jmp
or
sbb
jnp
ja
clc
or
sbb
lea
mov
mov
add
out
stos
lret
out
lods
sbb
scas
jno
add
xchg
rcl
in
jmp
xchg
mov
sahf
nop
xchg
sbb
movsb
and
cmp
pushf
das
ja
xchg
loopne
dec
sbb
adc
inc
and
cs
push
mov
mov
fadds
test
pusha
inc
imul
xchg
xor
int3
xor
sti
inc
sub
int3
loope
ss
loopne
cmpsl
cmpb
lods
out
adc
sub
adc
pop
inc
setb
xchg
sbb
data16
aam
loope
jns
popf
dec
rcll
jecxz
das
aaa
nop
scas
xor
jb
mov
sbb
xor
loopne
xor
jecxz
jne
adc
lods
add
in
pusha
rcr
cs
gs
addb
dec
or
sub
sub
mov
and
imulb
lods
mov
adc
mov
pop
push
lret
xlat
jle
jle
les
and
out
dec
jmp
adc
call
lahf
pusha
sub
cmpsl
cmp
out
cmp
mov
dec
cs
sbb
add
in
cmp
ret
and
pop
mov
jb
xorb
popl
cmp
pop
out
push
ljmp
mov
push
popa
and
cmp
mov
fnstcw
and
or
scas
vmwrite
add
push
jmp
add
mov
sahf
sbb
daa
sti
subb
fildll
fs
mov
xor
rcrb
jg
shl
in
inc
jp
arpl
inc
ja
cmp
jg
mov
movsl
cmpsb
test
sbb
and
xchg
cmpb
rcr
stos
sub
ja
rorl
jns
testl
sub
cmp
and
mov
xchg
and
mov
xorl
mov
fcmovu
notb
lahf
and
es
and
out
pop
jmp
add
cmpsb
pop
mov
mov
in
lock
lods
sub
xchg
imul
roll
mov
leave
sbb
xor
out
fisubrl
les
or
sbb
fldt
frstor
daa
xor
mov
lock
fisubrl
adcl
mov
pop
lea
enter
or
aad
mov
push
test
xor
pop
cmc
inc
lea
es
mov
js
mov
imul
repz
sbb
addr16
test
mov
pop
stos
ja
and
inc
add
stos
mov
in
std
loop
adc
orl
sbb
in
hlt
in
mov
in
cmp
dec
lods
das
cld
or
hlt
call
pushf
add
and
pop
sbb
call
jbe
xor
mov
fidivl
push
jno
fdivl
out
pop
aad
mov
push
mov
pop
mov
dec
lods
push
sub
push
adc
or
add
pop
jno
dec
mov
inc
jno
rorb
jp
movsb
outsb
shlb
cmp
lds
jnp
pop
dec
aaa
lock
cmpsb
jge
cmp
mov
arpl
addr16
scas
mov
jae
cmp
test
sbb
lods
mov
imul
sarb
or
push
clc
jae
clc
out
adc
jmp
cmp
add
pop
adc
mov
push
inc
sbb
xor
icebp
dec
arpl
pmullw
lds
pop
pop
sbb
cmpsb
or
mov
lods
daa
nop
push
in
or
xchg
mov
push
add
lods
mov
out
cmpsl
inc
or
mov
jecxz
xor
cmpsl
sub
into
rcl
dec
dec
mov
mov
nop
sub
inc
mov
sbb
mov
addr16
jne
repnz
pop
movsb
mov
out
mov
sbb
mov
movsb
out
fidivrl
jl
inc
mov
mov
jae
testl
sti
push
mov
jns
pop
sti
dec
jmp
mov
out
jl
inc
sub
adc
jge
inc
outsl
mov
mov
mov
insb
fs
loopne
sbb
xor
pop
inc
or
rcrb
sub
out
push
out
jl
mov
push
or
and
push
int3
outsb
xchg
in
sahf
jg
lods
mov
mov
inc
divb
out
cmp
mov
mov
es
add
push
sbbb
jl
loope
sarl
lods
testb
push
loop
pop
jno
mov
and
or
out
ss
pop
rol
xor
orb
lds
dec
jae
lret
sub
mov
xchg
sti
lods
fdivl
faddl
sub
in
jne
fnstenv
sbb
sub
xchg
lret
jecxz
lods
je
mov
movsb
cmpsl
popa
pop
cld
inc
xor
or
mov
addr16
inc
out
cli
ja
shr
adc
nop
rolb
inc
pop
pop
scas
jle
aam
inc
mov
pop
xchg
lock
xor
popa
fsts
fdivrl
rclb
sbb
lcall
sub
push
mov
ret
xor
and
fbstp
inc
ss
into
and
repnz
movsb
decl
pop
jg
add
or
pop
jp
mov
dec
das
push
movsl
lret
and
pop
arpl
pop
sbb
mov
mov
adc
xor
insl
cmp
ds
sbb
mov
ss
sub
aas
pop
xchg
arpl
inc
lret
jecxz
pop
int
scas
xlat
sbb
and
les
and
aam
adc
adc
adc
aas
sub
loopne
xchg
sbb
jecxz
xorb
gs
xor
cmp
bound
pop
pop
push
outsl
jns
inc
faddp
movsb
cld
push
popa
enter
jo
shlb
dec
ret
cmpsl
aas
add
cmp
inc
mov
dec
je
aas
dec
fldt
mov
bound
out
fldt
loopne
bound
mov
mov
xchg
loopne
pop
mov
insl
cmc
call
adc
ljmp
insl
inc
pop
dec
daa
push
jmp
rcll
or
dec
mov
push
push
leave
xchg
in
das
push
jnp
mov
iret
xlat
dec
cmp
test
out
ret
sub
cmc
pop
lret
and
mov
les
sub
push
xchg
pop
cli
dec
fimuls
and
outsl
and
mov
in
loope
arpl
fimuls
and
movsb
mov
add
sbb
mov
mov
inc
call
dec
clc
out
pop
jl
and
pusha
add
push
push
adc
or
into
fisttpll
jp
or
pop
pop
iret
fisubl
pop
adc
adc
mov
cmp
imul
pop
xchg
stos
andb
or
call
or
pop
inc
lds
scas
sbb
jae
lock
mov
fdivl
in
into
mov
outsb
push
cmp
loopne
or
shlb
xor
or
pop
pop
test
addl
pop
xchg
fcoml
adc
mov
sub
lds
in
les
push
add
jl
insb
cld
push
stos
rcrb
or
xchg
mov
ljmp
mov
sbbb
mov
mov
sti
inc
pop
push
rorl
int3
mov
ret
push
xor
ret
inc
and
pop
mov
loopne
jmp
test
jo
nop
push
xor
mov
sti
inc
and
jmp
xchg
dec
test
inc
pop
cmpsl
and
into
push
jns
cmp
xchg
movsb
sbb
es
or
call
xchg
out
subb
mov
fmull
mov
dec
push
or
jno
mov
lock
mov
in
je
and
std
cmpsl
in
enter
jp
adc
pop
bound
push
push
lods
cmp
mov
push
test
aam
sbb
je
mov
shl
inc
push
push
add
fimuls
roll
fwait
xor
nop
jae
mov
cmp
imulb
add
cmp
mov
shrb
mov
das
mov
aad
imul
lea
lods
fcom
sbb
cli
dec
jnp
pop
pop
mov
mov
pop
in
fldcw
ret
xor
iret
rclb
aaa
mov
stos
dec
mov
out
arpl
in
lods
fnstsw
push
mov
call
push
lahf
sbb
sti
je
sub
lret
sahf
cmp
fwait
pop
sti
je
clc
mov
xor
popa
mov
mov
add
orb
jo
filds
pop
aad
pop
xor
jecxz
pop
push
shrl
push
adc
ret
and
movsb
add
xchg
iret
mov
jnp
nop
testl
cmp
cmp
addl
or
cs
or
lods
arpl
mov
xlat
push
arpl
xchg
xchg
jno
je
int
addb
out
jmp
lods
imul
pop
daa
adc
fs
mov
pop
sbb
push
mov
jmp
lcall
dec
cmp
jns
and
test
imul
sub
add
push
and
push
push
outsl
leave
fsubs
call
adc
ret
lods
std
push
xor
xchg
xor
lea
sbb
outsb
hlt
js
and
push
jbe
mov
pop
lds
test
in
lock
or
xor
jle
inc
xchg
push
lods
jo
leave
xlat
aaa
out
or
and
int
add
loopne
sub
dec
hlt
xor
pop
into
push
int3
or
mov
loope
and
mov
mov
inc
mov
pop
lods
int
jo
cmp
push
mov
repnz
dec
pusha
mov
and
inc
rorl
pop
cwtl
bound
add
int3
ds
mov
movsb
or
sbb
mov
cmp
jmp
shll
addr16
xor
cs
pop
and
xchg
pop
cmc
inc
loope
cwtl
ss
fldt
out
sbb
loope
insb
arpl
xor
push
out
mov
ljmp
pop
push
push
out
test
mov
stos
and
out
jecxz
lods
dec
xchg
rclb
or
lods
aaa
push
rcrl
xlat
bound
test
adc
xchg
inc
jb
xor
aad
fiadds
push
mov
fdivrs
test
xor
pop
insb
les
pop
lock
adc
adc
ret
jne
jecxz
flds
fdivr
cmp
lods
inc
ja
mov
inc
mov
xchg
and
out
or
xchg
in
out
jb
lret
mov
jae
gs
xchg
mulb
outsl
fistl
je
dec
std
xor
int3
lods
add
iret
sub
je
pop
xchg
lret
or
rcrb
cmp
add
lods
aad
pop
or
and
adc
std
add
cmpb
and
lods
sub
mov
movsl
imul
xchg
lods
cmp
xor
faddl
mov
dec
mov
fsubl
mov
push
lret
shlb
imul
cmp
push
aas
xor
fimull
pop
sub
es
repnz
push
and
adc
mov
or
mov
outsl
push
test
cmp
lods
inc
or
fildl
pop
xchg
je
popf
ja
and
mov
add
ret
leave
popa
call
ret
bound
cwtl
mov
scas
scas
add
cmc
dec
xlat
jg
pop
mov
movsb
jle
mov
add
pop
mov
cli
lods
scas
inc
into
lods
in
and
xchg
mull
jecxz
out
xor
cmp
push
sbb
fists
imul
adc
shl
nop
jns
clc
mov
push
jmp
es
or
mov
mov
jecxz
hlt
js
xor
and
pop
jmp
popf
fwait
loope
aaa
inc
inc
sub
inc
dec
jns
xchg
and
sahf
mov
mov
and
adc
je
or
push
jnp
loopne
cs
sbb
push
aaa
mov
xchg
xor
adcb
nop
into
jmp
cltd
dec
repz
inc
pushf
outsl
and
adc
lods
sbb
jle
sub
and
js
inc
das
push
sub
cmp
mov
cmp
cmp
pop
mov
sub
into
add
cltd
les
push
dec
cmpsb
rcrb
and
ret
mov
ljmp
fidivs
mov
out
mov
sbb
sub
stos
test
rcrb
icebp
ret
jmp
xor
and
imul
pusha
in
lods
lods
or
fsubl
scas
lahf
and
add
push
inc
les
lcall
ljmp
mov
add
mov
cmp
xor
aad
jge
cmp
push
dec
jecxz
adc
pcmpeqd
aad
inc
push
cmc
pushl
or
shr
std
lods
outsb
aaa
mov
jno
cmp
dec
lods
jecxz
addl
push
les
pop
rorl
out
pop
and
add
sahf
in
loop
dec
sti
dec
mov
lcall
mov
xchg
xchg
iret
xlat
push
out
xor
jle
cmc
out
daa
push
scas
and
mov
sub
pop
movsl
test
psubsw
in
scas
aaa
scas
dec
test
sbb
lods
jne
xchg
inc
jle
movsb
sbb
mov
push
or
xor
scas
loop
sub
nop
pop
hlt
daa
les
rcl
and
ret
dec
pop
aaa
movsb
cmpsb
call
jecxz
in
or
pusha
or
ret
mov
push
iret
lret
dec
xchg
sbb
xchg
scas
repnz
sbb
cmp
and
inc
sub
das
out
inc
test
mov
sbb
mov
or
jo
aas
or
sbb
pop
ds
xor
call
xchg
lock
mull
and
or
push
mov
pop
scas
subb
adcl
test
scas
sub
das
es
nop
mov
or
mov
fs
add
std
xchg
and
jle
rolb
mov
mov
push
jecxz
in
jnp
loopne
cmp
loopne
repz
sub
lret
adc
pop
faddl
inc
add
mov
adc
ret
xchg
in
dec
mov
std
and
fwait
mov
pop
inc
sti
lods
xchg
xor
cmp
stos
test
sub
movsb
cmp
ret
jle
cld
test
mov
call
mov
adc
sub
mov
adc
adc
sbb
adc
jmp
cmp
rolb
lcall
sbb
dec
in
notl
inc
popf
int3
daa
out
popf
jl
xor
push
or
mov
dec
xlat
lods
cmpl
push
add
push
mov
rolb
das
popa
mov
es
mov
bound
xor
push
and
pop
pop
inc
ss
test
adc
fiaddl
aam
test
adc
or
roll
sbb
push
pop
loop
push
lahf
clc
jo
xchg
jae
xor
cmp
adc
arpl
and
mov
scas
push
adc
push
ror
lret
push
mov
xor
sahf
cli
xlat
pop
or
inc
aas
iret
pop
jo
aas
mov
cmc
aaa
jmp
jae
dec
pop
insl
popa
cmpsl
mov
mov
inc
pop
add
jmp
dec
mov
push
adc
dec
pop
adc
stc
inc
sti
scas
sbb
jge
lcall
scas
rorb
pop
pop
push
jle
add
xorb
ret
dec
cmp
int3
std
cmp
pop
push
sub
jl
jge
gs
iret
pop
pusha
and
or
push
icebp
in
sbb
xchg
ss
xchg
lahf
into
xor
pusha
loop
fs
scas
xor
jmp
imul
sbb
sbb
leave
pushf
xchg
pop
es
xor
out
inc
std
sub
xor
push
or
shl
jae
push
pop
loop
rclb
fadds
lods
adc
popf
mov
movsl
frstor
inc
fsubrl
int3
insl
lods
in
sub
adc
sbb
add
pop
scas
xchg
dec
mov
les
call
mov
rcl
sbb
xchg
cwtl
rcrb
mov
movsb
and
out
jne
mov
mov
push
cmpsb
jmp
test
adc
mov
mov
push
lea
and
cmp
lahf
and
mov
xlat
xor
pop
mov
adc
fiaddl
int3
sbb
pop
dec
sub
push
arpl
ss
sub
lahf
or
xor
stos
es
push
mov
dec
pusha
lods
das
and
and
add
xor
fdivl
ss
ljmp
pop
shll
pushf
push
push
frstor
loop
fsubrs
jno
mov
pushf
adc
sbb
psubsw
aad
pop
sbb
imul
les
mov
out
orb
jp
jne
in
push
mov
sbb
rol
xchg
jb
mov
sub
xchg
cmp
lcall
adc
add
pop
pop
xor
inc
sub
cmp
xchg
cmpsb
mov
adc
mov
sbb
jl
or
xor
adc
dec
mov
adc
daa
cmp
xor
sarb
es
mov
jne
fstl
loopne
aad
shl
dec
clc
test
lock
andb
jge
in
push
sub
lahf
shlb
bound
shl
sti
pusha
cmpsl
sbb
sbb
test
jae
test
inc
sahf
cmp
jbe
pop
ljmp
ds
int3
repnz
jo
cmp
mov
mov
inc
xchg
pop
in
and
lods
jo
xor
mov
and
or
aaa
push
das
xchg
or
cmp
sub
movsl
fwait
or
inc
and
jo
in
push
xor
fwait
andl
push
cmp
loope
and
adc
add
jg
mov
xor
sbb
imul
rcl
dec
inc
repz
dec
or
xor
adc
test
xchg
mov
pop
sahf
and
push
sbb
ds
sbb
repnz
push
shr
mov
sbb
xor
lea
sub
add
xchg
aas
push
mov
enter
push
fsubl
popf
dec
jmp
test
push
or
sub
aad
mov
add
jmp
test
ja
xchg
inc
push
insb
xor
mov
rcll
sub
dec
lods
xchg
aad
outsl
jnp
lret
in
je
xchg
pushf
negl
mov
inc
xor
repz
or
jecxz
sbb
fcmovnb
xchg
mov
jno
ja,pn
imul
repz
mov
dec
mov
adc
push
pop
orb
outsl
xchg
sub
test
in
sbb
daa
sahf
in
cli
cltd
pop
stc
ja
push
jle
xor
mov
mov
push
inc
mov
icebp
jo
leave
mov
cmp
xor
push
jl
dec
add
or
lods
sub
adc
inc
xchg
lock
add
lds
movsb
gs
out
ffree
mov
xchg
movl
inc
xchg
ret
inc
jl
pop
out
and
cmc
xor
or
aas
xor
mov
xlat
push
xlat
push
xchg
mov
aaa
mov
pusha
mov
jg
add
jns
lods
pop
je
lahf
xchg
ds
adc
pusha
add
push
cmp
aas
shl
fiaddl
push
and
dec
push
cmp
inc
xor
jnp
dec
sti
clc
stos
jno
mov
xor
ror
shll
fcomp
jl
out
int3
xchg
and
sbb
icebp
cmpsl
xorb
test
in
stc
in
dec
add
xchg
das
rorb
sub
adc
cmp
sarl
xchg
call
sbb
shlb
sub
inc
ficomps
push
add
or
testb
adc
jp
loopne
and
or
cmpsl
mov
pop
jne
push
or
ret
xchg
mov
push
jo
mov
jo
aas
lcall
test
adc
mov
push
jo
ret
xchg
dec
fs
jl
in
xor
xchg
jle
jl
jle
std
dec
xor
jmp
fsubrl
mov
fidivrs
push
push
hlt
or
call
xor
and
sbb
mov
add
lock
int3
dec
lret
ljmp
add
test
mov
aaa
jmp
or
xchg
jae
mov
in
pop
mov
shlb
mov
xor
sbb
push
fcmove
and
ljmp
int
pop
inc
mov
xor
lock
push
call
lcall
loope
pop
mov
mov
data16
sbb
pop
add
ljmp
push
add
pop
test
rol
jns
mov
ljmp
sub
pop
aad
icebp
aas
mull
pop
jmp
mov
lret
jmp
xor
stos
sub
nop
out
les
or
push
jg
cmp
and
mov
ss
or
mov
or
and
out
jmp
xchg
rclb
loop
jo
sbb
loope
ljmp
xor
sysenter
adc
imul
loope
js
cmpb
sbb
mov
pop
test
push
jbe
scas
movsl
sub
mov
fstl
loopne
mov
in
lahf
sub
movsl
cmc
cmp
out
aas
imul
daa
insb
sarl
clc
xor
inc
jmp
jle
sarb
flds
dec
xchg
je
std
rcrl
adcb
cld
cld
and
pop
aaa
inc
clc
xchg
xor
or
fistps
and
insb
shrl
mov
adc
jbe
add
ljmp
mov
iret
pop
and
mov
out
pop
popa
jp
mov
loop
dec
or
push
aas
add
aad
xchg
or
cs
push
mov
das
outsb
sub
jb
sub
sahf
cmp
scas
fnstsw
xchg
adc
popa
pop
xchg
sub
push
aam
pavgb
sbb
into
mov
and
cmp
cmpsl
rcll
loopne
push
fwait
or
cmc
jl
and
loopne
repnz
mov
cs
scas
hlt
push
xor
call
sbb
and
fidivl
push
cmp
jl
in
les
scas
mov
mov
repnz
adc
fdivl
push
xor
into
mov
or
jge
fsubs
mov
push
js
sub
sub
test
pusha
sub
pop
subps
or
and
jne
add
dec
test
inc
test
pop
imul
aas
inc
adc
xor
mov
push
push
rolb
adc
pop
fcomip
loopne
punpckhbw
lods
jns
addl
ficompl
hlt
xor
mov
adc
std
rcrb
das
mov
loopne
lods
pop
sbb
push
push
inc
xor
pushf
sti
sbb
mov
outsb
dec
and
and
add
jle
es
into
cmpsl
cmp
repnz
scas
xor
aam
and
mov
xor
cld
and
push
aam
xor
test
push
adc
aas
xor
icebp
sbb
or
insl
add
loopne
mov
popf
arpl
and
xor
rclb
divl
xchg
pusha
fcomps
mov
hlt
inc
and
je
test
adc
xor
stos
jno
cmp
and
push
pop
jns
cmp
sub
xor
addr16
and
adc
or
xchg
mov
mov
xor
pop
mov
pop
push
das
xorb
inc
shll
cmp
xor
aas
stos
out
pop
loopne
push
and
and
xchg
sbb
nop
shr
movsl
aam
ds
nop
xor
jg
scas
xor
xor
imull
and
mov
mov
adc
out
pusha
int
push
adc
sbb
nop
outsl
sub
loopne
and
pop
fisubs
dec
push
push
jmp
mov
xchg
fimull
mov
pushf
nop
cmp
mov
xor
xchg
repz
fistpll
into
cs
cmpsb
hlt
sahf
aam
xor
clc
mov
dec
add
dec
xor
sub
mov
adc
repz
sbb
mov
adc
lock
dec
pop
aas
and
xor
aas
pop
int
shlb
sub
dec
jae
and
ja
add
shr
mov
iret
jmp
mov
mov
push
dec
lret
sub
and
hlt
mov
xor
rep
aas
insl
std
jb
push
sahf
xchg
pop
aam
loope
test
and
out
sbb
push
xor
xor
dec
jne
adc
push
xor
out
xor
add
xchg
xor
fildl
lods
push
cltd
sbb
xchg
inc
sti
out
xor
inc
cmp
rcl
xorb
pop
rcll
mov
pop
dec
xor
test
push
push
xchg
cs
add
icebp
lods
cld
xorl
lret
and
pop
xor
or
scas
push
add
dec
pop
dec
sub
pop
leave
aam
mov
insw
movhlps
sti
cmp
fiaddl
mov
mov
lahf
mov
dec
jo
movsb
mov
loopne
and
orb
pop
ficomps
adc
lock
test
adcl
push
fisubrs
out
shlb
push
fnsave
pop
mov
std
cmp
xor
lret
scas
cmp
pop
and
and
lahf
mov
xchg
cltd
aaa
orb
xor
pop
cmp
lds
and
lods
hlt
xorl
xor
imul
repz
xor
shlb
cmpb
push
lods
incb
test
push
scas
adc
push
cmpsl
cmc
mov
xor
xor
dec
xor
or
mov
mov
pop
xor
repnz
sub
repz
xor
pop
jle
cmpsl
inc
dec
aas
aam
in
dec
imul
pop
repnz
xor
call
xchg
adc
mov
dec
xchg
xchg
mov
sub
jle
mov
lods
out
divl
orl
pop
inc
jo
pop
inc
adc
icebp
pop
scas
cmpsl
xchg
add
cmp
push
in
test
xchg
or
adcl
xchg
pop
mov
bound
lods
sbb
call
fisttpll
and
repnz
pop
xchg
adc
ret
pop
xchg
dec
push
int3
testl
out
and
push
sub
fcmovnb
call
mov
lds
in
data16
fnstenv
lods
mov
adc
mov
scas
jp
das
ja
scas
test
jo
xor
cld
aam
pop
pop
xchg
in
das
mov
cwtl
xor
xor
push
cmp
push
adc
lods
jmp
mov
popf
arpl
mov
test
ficomps
addb
adc
faddl
xrelease
mov
sbb
sbb
sub
inc
ffreep
cmc
popf
sbb
jecxz
add
push
jg
repz
out
aam
sbb
dec
ljmp
lcall
in
and
lods
arpl
je
pop
popf
sbb
insl
insl
mov
sub
push
sbb
iret
jecxz
cmp
xor
in
push
ret
cmp
or
loop
xchg
ljmp
sbb
or
inc
pop
sahf
ror
stos
xor
cmp
or
push
push
rep
pop
mov
mov
data16
movsb
mov
push
ss
fadd
roll
mov
fsubs
popf
mov
pop
stc
mov
dec
dec
mov
adc
xor
sub
and
inc
inc
jecxz
adcb
test
jmp
sbb
sbb
jle
add
mov
data16
push
adc
dec
jmp
movsl
mov
lock
mov
push
jns
mov
je
mov
add
inc
std
jo
xchg
out
or
mov
sbbb
push
adc
popf
mov
lods
xlat
iret
pop
cmp
mov
popf
sarb
bound
jnp
xorb
pop
jmp
cmpsb
mov
adc
je
sbb
push
mov
sub
scas
sbb
mov
imul
fsubl
xlat
mov
cmp
es
hlt
jbe
das
leave
inc
cmp
fstpl
pop
out
inc
ds
dec
mov
loopne
add
subb
subl
xor
aad
js
cmp
std
adc
lea
cmpsl
pcmpeqd
addb
mov
popa
xor
xchg
add
inc
clc
bound
push
out
pop
aas
cs
clc
dec
lcall
sbb
test
flds
jl
scas
cwtl
adc
lahf
dec
mov
jmp
jmp
mov
aam
das
jae
xchg
adc
mov
pop
pop
out
xchg
arpl
mov
jno
sub
bswap
repnz
pop
test
int
aad
adc
enter
adc
cmp
pop
push
or
icebp
push
xchg
leave
outsb
adc
das
xchg
ljmp
push
and
in
mov
sbb
lods
jbe
bound
sub
dec
scas
xor
xor
xchg
sbb
dec
add
xor
shlb
mov
adc
or
fidivrs
add
jae
sti
push
mov
pop
pushf
dec
fistpll
cmpsl
xchg
mov
cwtl
and
mov
cmp
adc
mov
sbb
repz
subb
ret
pxor
and
adc
clc
dec
add
jp
or
and
fisubrs
push
pop
stos
sti
pop
xchg
dec
mov
sbb
in
jmp
cmpsl
xchg
loope
jle
or
call
insb
sub
leave
xchg
push
jno
popa
loope
sbb
das
hlt
pop
and
dec
mov
call
fsubr
movsl
push
dec
inc
mov
sub
shlb
or
or
iret
push
sbb
mov
popf
pop
xor
je
cmp
push
mov
arpl
or
iret
icebp
xchg
cmp
hlt
bound
cmp
fmull
shl
push
mov
ret
pop
sarb
dec
out
lods
sbb
lods
sub
std
ret
loopne
iret
lods
mov
or
sub
pop
fld
pop
inc
cmp
xchg
jnp
inc
pop
cmpsl
in
mov
push
xchg
jecxz
push
lahf
xor
sub
xchg
lret
push
je
lahf
xor
int3
and
pop
adc
mov
inc
inc
xchg
jne
xor
repnz
pop
xchg
cmp
lods
lock
fdivl
xchg
das
in
xchg
xor
sbb
addr16
call
pop
push
mov
cld
loopne,pn
inc
mov
dec
xchg
cmp
lea
fsubp
cmc
mov
sbb
std
fsubr
negb
jecxz
iret
aam
icebp
daa
adc
sbb
pop
inc
lret
shlb
sub
push
push
lods
adc
or
push
insb
add
popf
shll
jb
push
inc
mov
cwtl
pop
std
pop
and
lods
and
push
mov
das
out
pop
out
jnp
divl
jnp
insb
lcall
hlt
jae
lret
pop
rcr
mov
ret
xchg
mov
outsl
xchg
xor
jle
mov
adc
xchg
lods
jmp
in
push
imul
dec
mov
cmp
and
xor
rep
je
out
jnp
xor
mov
out
repnz
test
fidivl
dec
fnstcw
push
or
enter
imul
sub
in
mov
and
in
loope
les
inc
inc
inc
cltd
fists
mov
sub
cmp
fstpt
jmp
inc
add
fldt
loope
mov
push
test
bound
adc
push
lock
lcall
push
bound
jmp
adc
pop
sub
push
or
lods
jle
add
ss
int
sbb
arpl
outsb
and
aaa
jns
aam
int
xor
pop
cmp
xlat
in
xchg
test
inc
xchg
cwtl
shll
sbb
sub
pop
scas
stos
adc
movsb
mov
icebp
mov
out
pop
or
mov
jae
sbb
mov
shr
mov
mov
sub
xor
ss
mov
mov
mov
les
push
pop
or
mov
jns
movsb
or
push
int3
ret
fnstenv
pop
mov
add
pop
cmpb
mov
mov
lret
insl
mov
rcl
mov
ret
scas
in
int3
test
clc
in
fadd
ljmp
jl
shrl
dec
loopne
movsb
out
aam
ss
or
fsubr
xchg
jg
lret
in
ret
push
adc
pop
and
mov
xchg
add
sbbb
add
mulb
add
movsb
mov
mov
mov
mov
pop
hlt
xor
inc
out
dec
aaa
loop
cli
shll
test
add
stc
cmp
xchg
mov
push
cmpsb
adc
shl
push
aaa
mov
inc
lea
xor
pop
andb
pop
sarl
repnz
lods
arpl
jl
add
and
popf
pop
push
insb
test
pop
mov
repz
sub
and
shlb
jo
dec
jbe
iret
lahf
push
popa
xchg
pop
pop
or
push
jbe
and
in
xchg
adc
jmp
adc
sub
dec
push
xchg
cmp
push
je
adc
insb
adc
push
mov
fimull
mov
jmp
icebp
push
xadd
xor
dec
lods
jl
ficomps
mov
loop
jmp
jl
pop
cmp
jp
ret
xor
mov
das
bound
lods
xor
sub
mov
loop
xchg
in
jnp
das
push
cwtl
jnp
mov
sbb
pop
mov
ret
lret
mov
int
jp
dec
or
das
add
in
loopne
fwait
adc
cmp
jle
into
je
xchg
mov
adc
and
lret
sbb
jnp
stc
outsl
scas
cs
lret
loope
cmp
pusha
cmp
cli
test
mov
xor
sub
aaa
sbb
jne
andb
mov
cmpsl
and
jmp
xor
pop
or
into
push
je
out
in
xor
jo
dec
and
fistl
daa
cld
jp
sub
test
out
mov
cmp
jnp,pn
xor
adc
lock
cmp
ja
mov
repnz
jecxz
jl
rorl
and
stos
into
jmpw
sbb
cmp
cmc
mov
jmp
sbb
jb
xchg
les
lods
movsl
out
sub
scas
ret
sub
in
and
or
je
cld
mov
bound
call
inc
aad
xor
rcr
sti
fdivs
fmuls
lods
cmc
ljmp
lds
aaa
mov
shll
out
lcall
mov
ja
mov
xchg
xchg
sub
bnd
push
rcll
stos
xor
add
push
jne
xor
sbb
dec
mov
mov
stos
mov
lods
mov
push
lds
in
sbb
ds
pushf
scas
fsubr
mov
stos
or
enter
lds
jl
jae
mov
or
addl
ds
subl
jmp
mov
and
sti
les
cwtl
cld
shlb
aam
lods
cmp
ljmp
add
xchg
pop
ret
mov
jnp
rclb
cmp
adc
div
xchg
out
sbb
jnp
adc
nop
sti
or
enter
cwtl
nop
ret
mov
pop
add
push
mov
mov
cmp
stos
dec
sub
push
mov
pop
or
pop
iret
mov
push
lea
xchg
dec
sbb
leave
lea
test
hlt
ret
push
push
mov
mov
loopne
into
jns
ret
incl
iret
xor
out
fwait
negl
push
xchg
xor
lock
xor
loope
cmpsl
xlat
pop
jl
lcall
sub
push
dec
js
rcr
arpl
mov
xchg
push
mov
lods
outsb
loop
lods
jge
adc
mov
and
lods
rcrl
mov
test
and
fstpt
fidivrl
call
mov
or
lret
icebp
dec
adc
ret
pop
rcll
fdivrl
mov
movsl
jo
push
dec
dec
cmpsb
movsb
inc
jae
mov
or
push
mov
ss
sbb
inc
insb
notb
adc
fisttpl
fimuls
add
pop
loop
iret
scas
lret
add
mov
dec
jns
popa
xchg
rcrb
sub
or
hlt
sahf
cmp
imul
in
add
sarl
lea
testl
div
inc
jnp
test
mov
out
sbb
je
leave
test
test
inc
cmp
jo
mov
mov
lret
fistpl
add
aaa
fimull
movsl
mov
xchg
andl
inc
es
lahf
xor
lea
jb
movsb
push
jno
pop
add
das
adc
push
lret
push
xor
and
icebp
lods
fistps
lahf
ds
out
sub
imul
scas
in
xchg
push
inc
in
out
out
shrl
divb
jae
rolb
sub
fadds
push
out
and
daa
movsb
shl
in
scas
arpl
adc
cmp
loopne
in
sbb
cmp
mov
int
shlb
pop
in
push
pop
and
fimull
cmp
ja
clc
add
in
sub
sbb
nop
mov
orb
mov
jo
push
std
cltd
stos
mov
sarb
cwtl
sub
sub
lods
mov
pusha
lock
sbb
fdivrl
sbb
xchg
int3
xchg
lods
xchg
mov
adc
add
jle
push
xchg
or
mov
xchg
mov
andl
sbb
rolb
push
inc
sbb
push
mov
sbb
rorb
stc
rolb
pop
sbb
xchg
pushf
popf
jle
fidivl
and
cmp
out
popf
and
and
test
cs
jb
sub
hlt
or
push
insl
mov
hlt
rolb
loop
les
ret
sbb
pop
int
cmp
js
pop
inc
dec
jecxz
add
test
cli
loope
sub
adc
fucom
sbb
jae
test
movntq
jae
daa
sbb
add
filds
jae
test
inc
mov
xchg
frstor
fsubl
or
popa
push
sub
adc
push
stc
scas
leave
hlt
popf
dec
mov
or
or
lock
mov
pop
mov
rorb
lahf
movsb
cmp
and
ret
adc
jmp
sub
insl
cmp
arpl
jmp
ret
lock
lcall
mov
loope
sub
jne
mov
cmp
push
sbb
mov
xchg
xchg
jmp
das
movb
dec
sti
testb
mov
bound
lods
enter
dec
movsb
cwtl
inc
jns
fcompl
sti
mov
out
test
insb
adc
in
push
js
rolb
aas
mov
xor
pop
cmp
aam
dec
pop
jae
mov
sbb
outsl
or
xlat
fisubs
fwait
adc
push
pop
inc
adc
ljmp
sub
pop
inc
stc
cmpsl
sub
loopne
inc
mov
adc
scas
xor
dec
lock
sbb
mov
add
inc
adc
xchg
int3
es
adc
adc
arpl
filds
jo
arpl
std
jbe
pop
push
mov
stos
aas
add
imul
shrl
cwtl
shlb
jl
cwtl
xchg
jge
lret
xor
in
xor
adc
jl
lahf
outsl
push
sbb
xlat
movsb
pop
xchg
loop
lds
push
sub
loopne
nop
insb
hlt
mov
imul
aad
xchg
mov
faddl
cmpsl
insb
mov
ljmp
stos
cmpsb
fld
hlt
into
in
jne
in
popa
push
inc
xchg
in
mov
out
and
mov
mov
or
es
pfacc
add
adc
movsb
aas
je
mov
addr16
iret
hlt
xor
fbstp
sbb
int3
push
jmp
pop
mov
cmpsl
lds
inc
ljmp
and
and
jle
cld
xor
sub
loopne
icebp
or
sub
sbb
lds
cwtl
lods
cmpsl
fldt
repz
stc
xor
out
sub
pop
jo
sub
test
jae
imul
dec
lods
adc
out
adc
movsb
inc
call
lds
stos
stos
jg
sbb
cmp
dec
inc
jl
rcrb
negb
dec
call
cld
jne
cs
fstpl
cmp
adc
lods
scas
iret
inc
push
movsb
cmp
test
cld
nop
cmp
loopne
inc
inc
enter
out
pushf
xor
cmp
enter
repz
jo
cmp
shlb
mov
aad
cltd
jbe
into
scas
xor
pop
mov
lahf
sub
shll
xchg
and
jo
push
sbb
mov
lret
add
shr
aas
in
cmp
aad
jg
xor
inc
adc
mov
mov
and
test
xlat
lods
push
scas
lods
push
daa
sub
push
dec
cmpsl
jae
mov
or
bound
xor
fisttps
dec
xor
loopne
bound
and
movsb
or
out
in
fisttpll
pop
cld
mov
fmull
inc
je
bound
repz
divl
ja
push
sbb
pusha
cvtps2pi
lret
fildll
leave
loop
pop
xchg
inc
lret
jo
lea
std
out
repz
xorb
and
rcrb
in
lods
lods
pop
stc
xchg
sbb
pop
adc
push
hlt
in
daa
stos
inc
xor
dec
jge
les
dec
lods
cmp
scas
push
sub
jo
cmp
cli
xchg
mov
xor
push
jns
adc
sbb
mov
lods
je
das
or
clc
jbe
sub
movsb
enter
je
xchg
mov
pop
gs
xchg
xor
and
fimuls
out
mov
sahf
rcr
lret
imul
insl
aad
scas
push
mov
mov
scas
lret
jno
shll
mov
or
inc
div
or
mov
icebp
stc
jne
jl
xor
dec
inc
sbb
arpl
aaa
sarb
sbb
in
jo
jle
or
or
mov
sbb
xor
clc
mov
push
call
popa
lcall
or
mov
mov
out
or
mov
mov
jl
mov
xchg
jo
mov
loop
sub
or
pop
and
mov
cmpsl
fdiv
fidivl
scas
les
dec
fsub
sbb
mov
xchg
mov
out
cwtl
cmp
clc
daa
sub
mov
sub
sub
ljmp
subb
shrb
cmp
jae
punpckhwd
pop
iret
xchg
outsb
and
out
cmpsb
ss
std
sbb
nop
scas
or
fs
xchg
insl
sub
mov
mov
test
leave
iret
jle
cmp
jo
fnstsw
xchg
xor
pop
xchg
mov
movsl
iret
mov
bound
mov
scas
iret
pop
outsb
cwtl
ss
dec
mov
out
sbbb
ret
pop
jo
fs
icebp
pop
movsb
out
loope
test
mov
out
mov
cmp
sbb
outsb
push
xlat
fsub
sub
sbb
mov
push
jecxz
rcrb
jo
ds
cmp
lods
jb
rcrb
mov
pop
jg
scas
lods
xor
pop
cmp
call
sub
out
jbe
jno
mov
dec
xchg
daa
lock
fadd
or
sarb
sub
out
lahf
das
and
lods
add
ret
push
adc
lcall
jno
sahf
iret
jg
and
icebp
adc
in
jmp
gs
push
shlb
xchg
push
adc
sub
inc
into
add
xor
out
mov
movl
repnz
shlb
lock
pushf
and
iret
push
push
xor
int3
out
sarb
sbb
sbb
fwait
adc
fldt
les
outsb
ljmp
or
mov
xchg
inc
add
dec
sub
aam
add
enter
and
lahf
xlat
shr
cmpsl
aas
shl
xlat
or
imul
mov
mov
cmp
cmc
mov
int3
stos
or
push
repnz
and
movsl
out
pop
rcll
jmp
cmpsl
mov
mov
mov
mov
jb
clc
testb
inc
out
outsb
movsb
and
mov
xchg
adc
mov
or
lods
mov
push
addb
cmp
repnz
aas
inc
mov
xchg
outsl
ficompl
aaa
movsl
sarb
dec
loop
psubb
jecxz
int
je
jo
cmp
and
lahf
in
arpl
rol
stc
shl
push
or
cmp
shll
out
push
addb
cmp
fwait
divb
rcrl
fstl
and
aaa
push
iret
lcall
xor
xor
repnz
aaa
insb
inc
jbe
jno
dec
sbb
outsb
test
aad
xchg
nop
loopne
adc
gs
cmpsb
mov
push
xor
in
sbb
and
push
lods
into
bound
sub
test
and
adc
xor
dec
fldt
shl
nop
sbb
xchg
rcrl
lods
dec
mov
sub
je
loop
aad
push
movsl
mov
aaa
shlb
pusha
rclb
aas
addr16
sahf
jns
adc
or
xorl
inc
add
dec
xchg
push
shlb
stos
fimull
xor
rolb
pop
les
inc
mov
mov
in
insb
push
adc
pop
ds
hlt
add
in
icebp
in
xor
mov
mov
scas
adc
dec
xor
iret
or
shlb
jb
dec
frstor
xchg
add
xchg
shr
jne
jmp
add
cli
mov
shr
es
out
mov
jge
cmpsb
dec
scas
nop
push
fmuls
loope
dec
movsb
mov
out
rcpps
push
sub
call
add
addb
or
jle
adc
and
or
or
shlb
push
sbb
push
mov
cld
scas
enter
push
imul
call
jb
scas
lret
sbb
mov
adc
lahf
test
xchg
lock
sbb
neg
cmp
add
das
pusha
hlt
sub
inc
sbb
fistpll
lcall
mov
mov
adc
subw
push
cmp
and
nop
lock
scas
arpl
push
fistl
sub
mov
je
add
sub
sbb
stos
enter
shlb
dec
int
rcll
xchg
push
fdivr
add
mov
mov
xor
shlb
ss
mov
fimull
sub
das
adc
xchg
ljmp
adc
xchg
insb
xchg
xchg
insb
int
xchg
cmc
sahf
in
mov
and
xchg
enter
call
shl
mov
aad
repz
int3
clc
pop
mov
push
xchg
das
loopne
shr
fcmovbe
xor
aad
pop
pop
js
es
cmc
pusha
cmp
xor
aas
nop
dec
cmpsb
dec
xor
adc
loopne
lods
mov
in
shrl
test
daa
xor
clc
xorl
in
cmp
or
adc
jp
out
lods
jnp
movsb
jp
movsb
daa
mov
popa
sti
call
push
lock
cmp
fwait
push
call
and
adc
jne
or
xchg
andb
cmp
pushf
adc
mov
push
cmp
ja
popf
pop
imulb
adc
aam
push
pop
adc
sub
jae
cmp
in
cmpsb
xchg
jg
push
mov
mov
mov
or
sbb
fimuls
mov
clc
adc
jnp
lahf
xchg
inc
aas
dec
hlt
js
popf
and
in
iret
in
shrl
inc
inc
sarb
sbb
xor
mov
jne
xor
shlb
mov
sbb
jg
test
in
insl
or
icebp
dec
movsb
xchg
cs
push
mov
in
or
push
lahf
sub
aas
popa
scas
jnp
dec
nop
push
jne
xor
jae
mov
mov
jle
clc
movsb
int
xor
jmp
xchg
cs
sbb
fldt
sub
cmp
dec
inc
mov
push
push
ljmp
adc
into
and
cs
dec
prefetch
lods
jecxz
and
popa
push
aas
adc
push
mov
icebp
aam
push
jle
pushf
or
dec
xchg
shlb
mov
push
xchg
cmp
jne
movsb
scas
mov
jae
sub
scas
add
push
addl
jae
push
cmp
push
orb
shrb
pop
jg
pop
xor
add
push
inc
push
mov
jmp
mov
loop
clc
std
movsl
fildll
adc
mov
xor
xchg
iret
push
cmp
jecxz
mov
mov
push
mov
andb
push
cltd
pop
and
and
sbb
test
mov
adc
inc
mov
xor
loopne
and
sub
pusha
vaddsubpd
jo
flds
cs
and
cmp
cld
iret
imul
xor
loop
xor
push
xchg
sub
xor
iret
mov
divb
in
add
ret
adc
jbe
cltd
insl
in
cmpsb
mov
rorb
fimull
jbe
pusha
enter
out
xor
mov
dec
or
js
lahf
mov
inc
xchg
hlt
inc
sarb
push
lret
push
ja
in
mov
mov
push
and
or
pop
jg
popf
jmp
push
aaa
scas
repz
cmp
adc
pop
lods
sbb
ljmp
fwait
xor
jnp
call
pop
inc
cmp
popf
xor
jecxz
dec
loop
mov
loope
cmp
fimull
popf
mov
repz
push
pop
popf
cwtl
scas
inc
mov
sub
lock
pusha
ffreep
lea
ja
aam
jmp
or
ds
adc
lret
lahf
push
dec
shlb
pusha
or
cmc
pop
jecxz
push
mov
aam
jge
pop
loopne
xchg
mov
pop
dec
sub
loopne
insl
cmp
mov
les
sti
rclb
test
movsl
cmp
or
aad
jmp
icebp
sahf
and
and
movsb
or
jbe
shlb
adc
movsb
xor
rcrb
js
mov
hlt
dec
pop
push
les
adc
xor
adc
shl
adc
and
jo
rorb
lock
ss
sub
mov
loope
and
das
cmp
aas
or
fadd
movsb
add
add
int3
adc
lret
lods
mov
cmovo
mov
aas
shr
mov
and
mov
pop
mov
lahf
xor
or
mov
sbb
imul
test
pop
imul
sbb
jmp
xchg
adc
bound
dec
jecxz
pop
pop
mov
mov
fs
lods
sub
pop
sub
cmp
negb
jmp
mov
cmp
aaa
ljmp
add
push
lods
adc
movd
movsb
jmp
push
cld
loope
sub
rol
xor
sbb
adc
cmp
dec
addr16
mov
sub
pushf
mov
pop
lret
or
inc
popa
das
mov
out
mov
cltd
xchg
lods
imul
sbb
xor
aas
adc
mov
push
cs
test
repz
jo
sbb
adc
out
out
pop
add
xor
jecxz
adc
cld
lahf
inc
pop
hlt
nop
jmp
add
xor
push
pop
adc
sub
in
not
popa
mov
xchg
sbb
xor
add
cmp
pop
and
enter
mov
jge
or
popf
outsl
scas
sub
pop
mov
pop
scas
fldcw
mov
cmp
push
cmpsl
mov
mov
jecxz
fnstcw
pop
sbb
pusha
cld
cli
sarb
shlb
sbb
push
mov
cmp
int3
addr16
cld
loopne
nop
dec
inc
rclb
aam
pusha
xor
mov
shlb
lret
ret
aam
push
insb
sub
push
stos
mov
jecxz
in
and
jb
data16
in
cwtl
movsb
jmp
and
int3
movsb
jmp
in
xor
mov
leave
rcll
popf
clc
repz
sub
push
dec
inc
cmp
pusha
cs
pop
lods
das
mov
rcrb
inc
cmp
stos
pushf
inc
int3
pop
pop
adc
sbb
movsb
nop
xor
jmp
loop
dec
push
les
xor
int3
testl
push
pop
xor
mov
push
xchg
aas
cmp
sub
int3
jne
outsl
dec
and
mov
rorl
mov
dec
add
mov
lods
jge
jo
jno
sbb
push
mov
push
cwtl
lods
sub
hlt
es
and
xchg
add
mov
xchg
inc
loopne
dec
lea
fcompl
leave
and
sbb
mov
mov
dec
cmp
data16
std
ds
xchg
jbe
std
or
faddl
fimull
push
or
dec
mov
out
jbe
push
daa
adc
fwait
pop
daa
adc
push
cwtl
fxch
sub
ret
lahf
ljmp
addl
inc
int3
imul
ret
fiaddl
or
shlb
mov
cmp
movsl
adc
sub
xchg
rcl
jg
jae
sub
push
push
das
sbb
pop
in
mov
iret
jo
mov
int3
movsb
lock
push
cmp
sub
or
cmp
dec
ret
shr
jae
pop
jle
shlb
loope
stos
out
call
sbb
sbb
push
test
aam
lock
cmpsl
jae
bound
das
mov
ljmp
push
jecxz
inc
pop
pop
xor
sub
add
add
and
inc
and
scas
cmp
lret
loope
lock
sbb
push
xlat
xor
int
call
xchg
mov
lock
call
jns
adc
sub
int3
sar
adc
sub
imul
or
push
mov
lods
clc
ret
adcb
jg
loope
xor
in
mov
add
pop
bound
jo
mov
pop
daa
loopne
rol
jne
in
pop
shlb
std
andb
add
loop
and
and
mov
enter
mov
in
add
ja
sub
and
testl
sbb
inc
sbb
sbb
loopne
and
aam
sub
push
nop
add
inc
mov
mov
jns
xor
mov
fnstsw
add
mov
mov
fbld
cmp
add
js
andb
bound
jmp
mov
xchg
out
mov
lods
jmp
mov
les
xchg
mov
cmp
cmpsb
cld
jae
add
jnp
jp
faddl
shlb
jno
pushf
cltd
mov
cmc
and
shll
jae
test
pop
enter
sbb
jo
fsubr
pop
push
jmp
xor
jge
mov
mov
lock
mov
mov
mov
cmp
mov
test
jne
xchg
sbb
in
outsb
into
adc
fmull
ds
fcmovnu
ret
sub
pop
dec
stc
out
jmp
jecxz
pop
pop
and
mov
lret
jno
push
push
mov
jnp
xor
adc
cmpsl
jnp
mov
rclb
xchg
pushf
enter
inc
mov
shlb
xchg
mov
pop
clc
sub
mov
dec
pop
lea
adc
enter
int3
sbb
xor
dec
mov
fcoml
rorl
subb
lret
test
ds
jle
mov
into
mov
sub
xor
mov
data16
imul
pop
cmp
xor
push
cld
mov
cmp
xchg
pop
in
mov
sbb
and
cltd
fcmovu
call
push
jle
xor
add
iret
pop
pop
fcomps
add
inc
lahf
nop
fistl
mov
js
xchg
shll
cmpsb
data16
sub
fsubrl
sbb
call
shr
cmp
inc
xchg
fimull
nop
stc
lods
adc
inc
test
data16
sub
sub
push
jge
mov
insb
test
xchg
inc
xchg
aam
inc
mov
adc
jae
outsb
inc
add
and
or
sbb
or
lret
insl
xchg
aaa
dec
sbb
fcomps
or
cmp
out
cld
lahf
testb
clc
daa
and
jl
aas
fsubp
test
pushf
mov
fildll
sti
ror
cmpsb
lret
add
cmp
mov
test
cmp
sbb
mov
sbb
pop
lods
jg
into
push
push
mov
mov
jmp
mov
sti
adc
mov
outsb
fisubs
dec
lods
and
dec
cmpsl
xchg
shrl
jbe
pop
sbb
jo
xor
sub
jecxz
stos
mov
loope
sub
cmpl
xor
mov
fadds
sub
inc
jbe
test
push
aas
mov
sbb
test
xor
shrl
pop
fcompl
daa
iret
fcmovnu
jo
fiadds
ja
pop
sbb
test
push
repnz
mov
addl
pop
push
mov
push
mov
mov
adc
mov
cmp
and
lods
pop
cmpb
pop
dec
push
aas
and
sbb
loopne
and
clc
jo
bound
in
pop
mov
jae
or
lock
sub
push
xchg
rolb
lods
aam
fdivl
rolb
lret
shrl
jle
bound
sbbb
push
jo
sbb
movsb
mov
sub
dec
cs
sub
cld
xchg
inc
into
pusha
mov
call
xor
roll
and
adc
cmp
xor
lahf
enter
std
aad
push
adc
in
adc
or
pop
xor
pop
xchg
pause
jnp
jns
sbb
and
in
into
rcl
sbb
mov
mov
or
punpcklbw
sub
test
sub
icebp
mov
mov
dec
insl
push
mov
fadds
jge
ret
or
or
fisttps
xchg
sbb
push
lea
into
int3
sub
in
mov
dec
enter
xor
sbb
fcmovnbe
push
sub
push
lods
jle
adc
mov
sub
xchg
mov
insl
xchg
lret
cli
test
iret
call
cmp
call
mov
cld
neg
adc
and
inc
xchg
mov
enter
push
xor
xor
call
cmp
fmuls
sbb
leave
aaa
das
inc
in
or
ret
cwtl
sbb
inc
divb
fadd
jge
daa
xchg
push
jl
paddq
adc
call
test
push
pop
repz
inc
jo
inc
fldl
hlt
lock
xchg
test
adc
lock
scas
inc
call
loopne
jg
out
sub
jp
jo
push
scas
movsb
pop
xchg
sahf
jo
mull
jne
xchg
jo
ljmp
pop
daa
inc
insl
push
lret
fsubr
mov
adc
inc
std
sub
xchg
jmp
jnp
fistps
and
jo
pop
adc
lock
iret
mov
mov
gs
inc
dec
in
setg
and
lds
lods
cltd
mov
cvttps2pi
inc
sbb
ret
shrb
cmp
fcom
popa
inc
int
fldenv
add
and
add
jmp
lods
sbb
cmp
add
mov
cld
mov
iret
aam
imul
sbb
fisttps
insl
popa
aaa
scas
pop
cld
iret
arpl
cmp
cwtl
xlat
push
jp
imul
inc
push
mov
negl
mov
mov
or
xor
ret
mov
xchg
mov
fnstcw
pop
mov
adc
pop
call
lret
fisubl
and
por
popa
dec
mov
xor
sub
inc
imul
pop
je
scas
lods
and
test
ret
shlb
fidivrs
dec
int3
jle
xor
adc
in
sbb
adc
ret
fdivl
dec
nop
aad
xchg
iret
test
cmp
sub
xor
into
xor
mov
fisubs
sub
and
stc
mov
sub
mov
push
iret
mov
lahf
push
fbstp
jb
cmpl
sbb
jnp
push
adc
adc
test
dec
jl
iret
pusha
mov
aaa
push
lcall
jo
mov
push
mov
dec
punpcklbw
cmpl
mov
scas
orb
or
adc
xchg
lock
jmp
dec
in
cld
mov
stc
or
lret
call
ficoms
add
cmc
cltd
ret
dec
lahf
jae
fldl
fisttpl
ljmp
jnp
int
cmp
enter
addr16
or
jge
cltd
sbb
sub
repz
lea
out
add
lock
dec
gs
jbe
cld
stc
jae
mov
enter
into
in
or
or
out
scas
sbb
inc
jae
push
push
loopne
pushf
push
int3
jle
das
inc
and
enter
shlb
or
and
xlat
scas
call
das
lahf
int
mov
xor
into
mov
push
mov
rclb
push
jnp
inc
aaa
mov
pop
aaa
and
rorl
in
mov
aas
jo
sahf
cmp
fstpl
cltd
imul
fstpl
in
add
jp
adc
bound
mov
pop
clc
mov
cmp
jge
dec
inc
jl
mov
sbb
sti
fld
lea
icebp
cmp
sub
jle
or
pop
sub
rolb
loop
mov
xor
fstpl
out
or
cmpb
arpl
sub
cwtl
and
je
adc
iret
lea
lcall
pop
jb
fnstsw
shlb
dec
inc
cmp
jmp
arpl
or
dec
xchg
daa
or
jne
push
cmp
sub
lahf
jl
loopne
lahf
adcb
sub
pop
push
push
addr16
addl
push
out
daa
sub
outsl
movb
add
vmovss
outsl
daa
std
mov
add
push
inc
lret
clc
push
mov
insb
mov
lret
int
negb
scas
mov
ja
data16
mov
add
shlb
outsl
aaa
lea
push
ret
or
pop
test
ret
lret
jbe
outsl
dec
jo
cltd
lcall
mov
cmpsb
cmp
jae
jg
call
notl
test
sarb
mov
aas
mov
mov
call
aam
mov
test
dec
aad
and
push
adc
lock
inc
orb
push
mov
stos
jbe
orl
hlt
pusha
cmp
push
jbe
push
aas
add
cld
pop
or
in
push
and
leave
jo
add
pop
lret
loopne
lods
es
jle
divl
mov
or
out
sub
das
jns
pop
ret
fldt
mov
adc
ret
decb
adcl
fcoml
hlt
pop
fs
out
cmp
es
daa
mov
cmp
sbb
rclb
mov
fstpt
lret
or
inc
jge
push
add
jmp
and
daa
push
std
mov
aam
ljmp
insl
pop
or
sub
push
stos
xor
and
inc
call
das
fistl
aaa
dec
aaa
jb
lock
or
jle
aas
icebp
movsb
jmp
bound
out
or
cs
mov
push
loope
mov
in
pushf
int
jecxz
inc
fnsave
push
fcmovbe
data16
fcoml
mov
scas
repz
ficompl
jne
pop
xor
mov
xchg
dec
into
dec
inc
mov
sub
pusha
fldt
xlat
jo
mov
loopne
std
jb
mov
pushf
lret
roll
push
xor
mov
or
ljmp
mov
ljmp
pop
imul
sub
jle
shll
call
scas
iret
stos
pop
lods
and
ss
add
push
xchg
jo
jae
shll
fcmovne
mov
pop
inc
push
xor
xchg
aam
pop
int
enter
fdivrs
pushf
jmp
mov
mov
cmp
xchg
mov
xchg
mov
fnstenv
adc
fmul
stos
mov
sub
cli
and
pop
inc
nop
imul
pop
out
mov
push
rorb
out
aas
dec
call
pusha
cmp
xchg
test
cmp
mov
hlt
mov
pop
mov
sarb
sahf
outsl
sbb
out
adc
nop
pop
lret
push
or
pop
ja
cmpsb
mov
divl
fbstp
sbb
push
jae
movsl
jecxz
pop
shlb
icebp
mov
ljmp
pop
cmpsb
mov
adc
cmpsb
daa
into
lock
loope
cwtl
movsl
outsb
pop
and
incl
adc
loopne
adc
sub
xor
sub
mov
iret
stos
insb
shlb
lock
aas
adc
fstl
push
push
outsl
inc
xor
jnp
in
mov
and
adc
subb
dec
outsl
js,pt
mov
ret
clc
sub
mov
movsl
out
fstpl
adcb
lods
js
dec
adc
xor
call
or
scas
test
mov
dec
mov
add
aaa
and
int3
loop
enter
es
aad
jns
cmp
mov
or
jnp
pop
mov
es
pop
dec
push
and
push
pop
mov
adc
divl
push
cltd
dec
and
jnp
jns
movsb
pop
and
mov
xchg
sbb
das
mov
xor
xchg
in
hlt
bound
mov
dec
mov
lods
and
scas
cmp
push
and
das
xchg
outsl
sbb
lds
xor
pushf
and
and
inc
inc
push
test
sbb
xor
mov
pop
out
pop
rclb
inc
sub
fdivl
dec
jle
cwtl
insb
mov
iret
xchg
in
scas
lods
hlt
je
jg
lock
or
jo,pn
in
cmp
mov
rcr
lods
or
fs
and
test
pop
sub
ds
add
test
dec
gs
mov
cmp
inc
loop
xchg
loopne
or
test
sti
sarl
pop
ret
cmpsb
orl
or
jmp
movsl
into
out
popa
out
or
hlt
mov
inc
test
nop
cmp
xchg
clc
ret
sub
int3
dec
mov
xor
dec
negl
xchg
mov
movsl
jmp
push
into
inc
int
arpl
inc
xor
arpl
ffree
mov
and
dec
scas
shrb
cld
add
scas
dec
adcl
fs
or
cmpl
cmpsl
adc
mov
rcrb
pop
jo
cld
sbb
scas
sub
shl
push
popa
inc
mov
rcrl
dec
cltd
mov
stos
inc
mov
ret
inc
push
ja
cld
dec
enter
pop
fnstenv
dec
lock
arpl
push
mov
mov
dec
push
and
into
push
faddp
jo
icebp
sub
movsb
push
shlb
ret
push
mov
mov
lods
lods
dec
pop
fbstp
fadd
insl
es
insb
xor
lods
call
mov
dec
and
push
popf
ds
loopne
mov
aam
ficomps
lods
add
or
movsb
fnstcw
and
movsb
inc
adc
in
xchg
sbb
and
jle
test
pop
xor
or
or
dec
loopne
sbb
sub
js
push
out
dec
cs
sbb
cmpsb
xchg
mov
mov
nop
xchg
andl
inc
jl
add
outsb
cmpsb
fidivl
pop
loopne
das
ret
sbb
pop
insl
cmp
mov
sbb
mov
mov
jne
mov
xchg
orb
sbb
ror
popa
mov
inc
stc
mov
aam
add
pop
pop
add
jnp
jae
adc
popf
lock
inc
inc
incb
push
scas
or
popf
inc
fdivl
stc
nop
lea
xchg
loopne
cld
and
rorb
dec
jmp
xchg
and
fdiv
fistl
jl
pop
out
fsub
and
push
scas
cwtl
adc
loopne
inc
xor
roll
insl
jo
adc
filds
push
shl
imul
clc
adc
and
sbb
push
je
fsub
adc
popf
pop
lock
xchg
push
outsl
mov
aam
cmp
pop
mov
iret
cmp
mov
cmpsb
lcall
jo
ja
mov
mov
sub
sti
xor
xchg
xlat
jnp
nop
and
jge
stos
cmp
movsb
or
mov
push
loope
pop
pop
pop
xchg
and
or
pop
sbb
and
and
bound
int
rorb
adc
mov
int3
cmpsb
xlat
sar
sbbl
bound
clc
pusha
js
fildll
or
xor
xor
lods
lods
pusha
pop
mov
mov
ss
push
sahf
lods
clc
jmp
sub
push
cmpsb
dec
sbb
out
cli
outsb
popf
mov
iret
inc
fwait
mov
stos
xchg
push
out
mov
xor
imul
fwait
cli
ds
xchg
sbb
lret
nop
sbb
outsl
push
adc
daa
loopne
mov
stos
push
cmp
cmpl
imul
je
jl
enter
xchg
mov
adc
idivl
add
stos
xchg
dec
inc
xchg
scas
fnstcw
imul
push
in
mov
xor
or
jbe
xchg
rolb
clc
fsubr
hlt
jecxz
outsl
or
lods
inc
rorl
enter
je
inc
mov
outsb
and
ret
arpl
aaa
adc
loope
or
push
xchg
shr
call
sti
pop
pop
jg
jmp
pop
pop
sub
inc
mov
test
adc
fucomip
adc
cmp
mov
jp
in
lods
test
mov
std
or
enter
sbb
and
push
imul
jg
inc
or
xor
push
or
stos
js
and
push
add
pop
int3
jo
dec
scas
push
aam
call
mov
push
pop
loope
movsb
push
push
sbb
aad
and
mov
test
cld
jg
mov
mov
scas
xchg
ffree
adc
pop
mov
sti
xchg
test
add
call
popfw
lret
movsb
pop
pop
jb
ljmp
xchg
jne
jmp
clc
insb
jl
jno
test
mov
mov
adc
imul
mov
xchg
lods
sbb
insl
lret
call
push
enter
mov
xor
and
pop
adc
dec
std
enter
lods
out
test
scas
sbb
cmp
cs
mov
jmp
daa
cmpsl
movsb
insb
xchg
and
push
add
push
cmp
enter
push
xor
imul
int
and
rorb
push
lret
xor
cmp
les
lock
add
and
ret
cmp
sub
gs
fcmovu
and
xchg
lcall
lods
repz
inc
push
push
stos
pop
outsl
mov
sar
sbb
data16
lret
add
and
jo
mov
dec
out
testl
insl
push
leave
dec
xor
es
sbb
jbe
and
shrb
fcmovb
les
cs
fwait
add
push
lock
stos
xchg
and
add
or
aaa
iret
shll
jo
pop
mov
mov
xlat
pop
jbe
clc
fistps
cltd
lret
mov
insl
jnp
jle
jo
aaa
enter
and
xor
movsbl
mov
stos
aas
aaa
mov
popf
adc
int3
pop
adc
sub
xor
cmp
add
lcall
aam
mov
push
jecxz
aas
mov
sub
add
mov
arpl
stos
add
mov
mov
xor
xchg
add
xchg
cltd
mov
call
mov
cs
mov
shlb
data16
loop
adc
sub
rolb
inc
pop
and
sub
or
out
lret
xor
mov
cmpb
xchg
dec
cmpb
ucomiss
pop
adc
fsubrs
sub
xor
cmp
mov
rol
lods
fwait
cmp
das
mov
and
and
inc
ds
mov
imul
addr16
mov
movsb
pop
xor
mov
sti
hlt
nop
inc
mov
test
xchg
xchg
xor
imul
mov
pop
xor
test
mov
int
aam
pop
push
jmp
ret
leave
lods
bound
imul
test
adcb
out
fcomps
mov
fsubs
sub
mov
xchg
mov
mov
pop
test
pop
js
sub
push
ret
mov
sbb
mov
sub
aam
mov
ficomps
dec
inc
jae
scas
ret
adc
cmp
cmp
cmpsl
xchg
out
sarl
jmp
int
sbb
push
mov
pop
out
sub
mov
enter
xchg
push
xor
mov
movsb
fisttpl
subl
mov
movsb
jl
inc
pop
sti
std
lcall
dec
adc
jecxz
add
sub
loope
call
rolb
xor
xor
rcll
mov
popf
cmp
push
jp
sbb
aas
fs
pop
jmp
mov
inc
xchg
mov
mov
jmp
and
push
out
cmpsl
or
mov
jae
es
scas
push
adc
ficomps
or
daa
popa
popf
and
dec
and
and
mov
in
jmp
icebp
std
xchg
jnp
fisubs
jp
std
cld
adc
xchg
or
cltd
insl
outsb
mov
ljmp
or
push
daa
jne,pt
daa
mov
scas
mov
push
inc
pop
cli
mov
in
push
push
sub
repz
lahf
and
xor
repz
inc
fdivs
inc
jg
bound
inc
mov
xor
daa
inc
push
sarl
in
pusha
xchg
notb
test
xchg
jmp
pop
js
scas
aam
lods
rcrb
jae
imulb
xor
mov
xlat
adc
and
adc
dec
aam
loope
or
jecxz
push
sub
xor
in
or
sbb
stos
dec
dec
bound
aaa
or
pop
dec
subl
shl
dec
ja
mov
mov
fs
push
fildl
test
es
lret
jne
push
rclb
push
xchg
sar
xchg
mov
and
and
xchg
addr16
xlat
cmp
jl
enter
lods
jmp
jmp
call
dec
jecxz
fsubr
jns
inc
insl
mov
jae
lahf
sti
mov
lea
fwait
mov
out
into
fld
mov
ss
cmc
fprem
mov
mov
mov
arpl
js
test
ret
je
aam
dec
hlt
sbb
cmpsl
mov
out
data16
stc
xchg
iret
mov
adc
cmp
or
pop
shrb
clc
in
mov
std
mov
sbb
mov
jno
push
pop
fdivs
pushf
adc
pop
push
std
dec
mov
xor
out
xchg
cmp
inc
adc
dec
imul
out
mov
pop
cli
push
aaa
mov
add
mov
sub
mov
mov
lret
jmp
sub
xchg
jle
mov
or
sub
sti
pusha
and
ljmp
ds
and
aam
lods
xor
adc
push
or
and
xor
fs
pop
xchg
iret
dec
mov
bnd
sahf
pop
enter
sbb
sahf
and
aas
jg
dec
lret
jge
jmp
clc
cmp
mov
lret
jecxz
or
or
mov
rclb
loope
mov
rcr
jo
xchg
loopne
daa
out
inc
inc
sub
outsl
push
and
dec
jb
ds
pop
stos
push
lods
push
icebp
cmp
jmp
add
push
test
xor
fldt
rorl
xor
daa
out
mov
xchg
mov
test
and
lret
sbb
test
xchg
pop
push
ljmp
repz
push
cltd
push
xor
mov
mov
test
pcmpgtd
mov
loop
call
dec
mov
scas
pop
fmull
inc
or
pop
pop
jae
out
stos
mov
xor
cmp
mov
frstor
pushf
test
mov
pop
cmpsb
xchg
mov
or
in
bound
mov
sub
sbb
xchg
xchg
or
cmpb
daa
test
icebp
sub
or
jb
xchg
ja
adc
push
xchg
mov
jmp
sub
sub
js
xor
cmp
pushf
insb
push
mov
xor
outsb
test
and
pop
jnp
fs
and
push
mov
dec
sbb
pusha
xchg
cld
pop
adc
int
ret
in
scas
xchg
imul
jp
ret
pop
loopne
mov
ret
fs
fs
inc
jmp
cmp
rolb
je
mov
mov
jg
mov
pushl
pop
inc
push
push
xchg
mov
mov
pop
push
mov
adc
sub
jl
jns
jmp
adc
adc
mov
xchg
xor
ds
pop
aas
xor
shlb
xchg
repnz
shrb
push
inc
sub
cmp
lock
jns
lcall
and
add
pop
mov
xchg
ss
and
sub
ja
fisttpll
cmp
dec
fwait
or
clc
pop
jnp
mov
xor
sub
lods
jo
ljmp
and
jae
xchg
xor
cmpsb
call
in
jo
arpl
out
jo
mov
adc
shrb
cmc
fisttpl
lahf
div
xchg
sub
loopne
push
cmpsb
in
fcmovbe
push
pop
xor
fstl
mov
rcl
imull
adc
mov
pop
in
add
int3
repnz
fnstsw
flds
inc
stc
cmp
std
stos
push
cmp
data16
scas
orl
jle
fnstenv
jb
lcall
and
lods
dec
cmp
mov
shrb
loope
outsl
pop
jl
inc
push
add
xchg
sar
bound
lods
push
outsl
enter
into
sbb
ss
leave
shll
hlt
mov
add
popf
call
adc
scas
dec
out
pusha
mov
and
lret
push
scas
mov
mov
dec
pop
cltd
mov
and
mov
mov
xchg
jnp
pop
or
ss
decb
add
das
xor
push
in
cmc
aaa
xor
addr16
mov
or
xchg
loop
push
dec
lcall
mov
fsubl
jecxz
sub
lods
pusha
sbb
test
mov
jbe
sub
lret
cmp
shlb
mov
push
shrl
bound
adc
mov
in
push
xchg
shlb
cmp
mov
shl
lods
bound
fisttps
fsubrs
fldl
test
xlat
push
mov
fadds
push
test
mov
fidivs
mov
or
insb
and
sub
mov
imul
inc
jle
mov
cli
mov
sub
sti
aaa
leave
lods
xchg
push
sbb
lret
loopne
xorl
or
sub
xchg
add
shrb
sub
sbb
sbb
popf
cmp
mov
and
call
mov
ja
aaa
cmp
in
leave
shll
clc
xor
adc
cmp
xchg
test
icebp
mov
dec
add
fisubl
andb
pop
dec
inc
test
clc
insl
adc
inc
xor
xchg
inc
and
mov
mov
scas
push
subb
xor
sbb
adc
pop
adc
aas
adc
cmp
sbb
movsb
push
push
stos
xlat
sbb
mov
sub
mov
push
rorl
mov
mov
aaa
jl
aad
mov
lods
lods
mov
push
dec
mov
or
xchg
lods
out
cs
scas
jo
inc
popf
cmp
repz
mov
push
xchg
adc
hlt
aad
dec
push
int
xor
enter
add
js
js
fnstenv
mov
scas
mov
aad
dec
push
dec
fsubrp
daa
sbb
inc
fs
push
or
in
or
rorb
pop
and
pop
pop
xchg
sub
in
inc
stos
push
lret
into
loope
cs
push
and
mov
test
xor
rcrl
popf
xorb
and
mov
sub
dec
sbb
dec
in
aaa
imul
dec
fwait
inc
aad
add
js
lahf
out
pusha
adc
mov
outsb
push
mov
jp
pop
jb
adc
dec
xor
adc
sub
jle
sub
rclb
mov
push
repnz
popf
xchg
jle
loope
jb
and
pop
mov
jmp
dec
add
mov
jnp
mov
ss
in
xchg
ss
lcall
clc
mov
push
pushl
gs
daa
xchg
cltd
clc
push
mov
movsb
xor
sbb
fsubs
rclb
xlat
ss
cmp
mov
aam
fwait
call
xchg
pushf
lds
mov
cmp
jp
jl
jg
push
pusha
in
push
add
int
dec
aas
pop
sbb
or
dec
rcr
sub
nop
adc
jns
imul
xchg
nopl
pusha
adc
sbb
clc
pusha
sub
pop
lcall
push
mov
sbb
mov
sub
lahf
push
cwtl
dec
mov
lret
dec
sub
ret
xor
sub
push
sahf
repnz
fs
aad
jmp
sbb
lret
mov
cmp
bnd
cltd
rorb
push
push
addr16
pop
sarl
xor
push
mov
fnstcw
std
or
pop
lcall
hlt
xchg
inc
jmp
prefetcht2
push
cmpsl
sbb
jp
and
movb
pusha
adc
jmp
lcall
mov
aam
test
adc
and
xchg
sarb
mov
aad
xchg
xchg
nop
dec
movsb
cmp
push
push
aaa
or
cmp
mov
push
lods
in
fistps
cmp
xchg
dec
xor
and
ret
scas
insb
or
in
jne
sub
sbb
lock
push
xlat
or
aaa
sub
lcall
test
fcoms
mov
push
pop
adc
icebp
adc
mov
in
cwtl
sub
outsb
push
pushf
movsl
sbb
hlt
int
pusha
push
xor
cmp
aam
les
in
ret
in
mov
addr16
aad
loop
mov
out
xchg
test
pushf
push
outsl
or
iret
pop
loop
or
std
jl
sub
in
mov
add
inc
add
lahf
xor
ret
cmpsl
sarl
daa
cmp
xor
push
adc
mov
push
sar
push
add
test
fildl
add
fildll
lock
jecxz
stos
test
pop
or
sbb
jb
sti
stc
add
lods
push
sub
popa
imul
pop
add
cmpsl
push
in
dec
mov
inc
test
adc
sbb
mov
or
jb
and
inc
push
pop
into
xor
jo
jge
rclb
xor
xor
divb
adc
shlb
adc
push
js
jecxz
pop
mov
ljmp
nop
call
loope
mov
mov
push
out
aas
loopne
popa
test
sub
in
rclb
pushf
and
adc
pop
dec
out
icebp
jle
hlt
adc
shlb
sub
cmp
jnp
outsb
test
jns
or
call
push
fldl
cli
sbb
jle
inc
ret
lahf
pop
lods
je
xchg
mov
jl
push
mov
clc
adc
loopne
shrl
repnz
ljmp
mov
pop
push
pop
shrb
shrl
rcr
aam
iret
shll
jl,pn
shrb
dec
mov
scas
fisttps
pop
fnop
jne
xor
or
lahf
daa
hlt
addb
in
adc
dec
dec
movsb
cwtl
lea
ret
sbb
test
xchg
add
xor
push
sahf
shr
fmull
pop
adc
cmp
push
inc
fldenv
cmpsb
and
outsb
xlat
cmp
mov
and
xor
scas
enter
mov
sbb
or
xor
popa
sbbb
rcrb
adc
scas
sub
push
mov
das
pop
push
xor
xchg
out
loopne
cmpsl
or
sahf
ds
pop
pop
int3
imul
cwtl
js
fdivrl
scas
out
shlb
xchg
push
mov
dec
orl
dec
scas
mov
and
in
add
fisubl
pop
in
mov
lahf
and
dec
sub
dec
mov
cmp
jmp
inc
repz
mov
lods
test
cmp
sub
mov
push
cld
mov
adc
sub
loope
adc
fs
mov
arpl
int3
or
jl
xor
pushf
cmpsl
jecxz
rorl
decb
outsb
es
incb
pop
nop
add
mov
dec
mov
jnp
ret
mov
movsl
sbb
nop
insb
enter
or
lds
sub
pusha
mov
cld
xchg
imul
push
mov
ds
les
sub
and
adc
inc
add
lret
aas
xchg
shlb
inc
shrb
and
rol
fwait
or
mov
out
sahf
out
nop
or
lods
cmp
testl
sbb
data16
les
cmpl
call
and
clc
dec
rcr
mov
adcb
pushf
and
cmp
xchg
sbb
arpl
push
sahf
pop
pop
dec
sbb
mov
mov
hlt
jecxz
adc
xlat
inc
jb
jmp
push
xchg
psubd
mov
fdivrl
js
clc
insl
jge
test
icebp
shrb
call
dec
xchg
out
cmp
aad
jnp
popl
lahf
lods
mov
and
cmp
repnz
movsb
iret
mov
scas
lahf
bound
incb
stos
icebp
pop
je
les
inc
xor
cmp
clc
and
cwtl
sbb
movsl
pop
mov
das
xor
push
nop
call
sub
pop
out
test
jl
sbb
adc
xlat
or
adc
mov
aaa
mov
xor
outsb
repz
addr16
rcrb
xlat
ret
or
stos
je
ror
sbb
aam
movsl
push
mov
inc
ljmp
add
sbb
pushf
call
mov
adc
xor
testl
add
xor
push
out
les
scas
xor
movsb
out
jp
shrb
cmpsl
xor
dec
lret
push
xchg
or
in
sub
mov
pop
aaa
pop
jge
lods
xchg
mov
push
cmpsb
sahf
dec
gs
and
iret
lods
mov
das
jle
repz
mov
lahf
sub
test
sbb
pop
test
xor
xchg
repz
adcl
mov
jle
int3
lret
mov
sub
in
ja
fcomps
mov
fidivs
ljmp
mov
scas
lahf
rcrl
repz
pop
dec
jns
scas
loop
push
insb
push
fcomps
fs
dec
fildll
out
xchg
fldl
ficoml
xchg
xor
fstps
push
mov
icebp
stos
int3
pushf
cmp
xchg
xchg
in
pop
adc
movsb
mov
mov
scas
sub
mov
enter
xor
movsb
pop
fldcw
lods
popf
xchg
mov
ret
cmp
mov
cmp
ljmp
jl
mov
xchg
dec
shr
bnd
addr16
push
mov
test
clc
xchg
push
mov
mov
dec
aam
xchg
jl
pusha
shl
daa
fdivrl
mov
xor
ret
call
ljmp
shll
push
es
loop
div
push
push
sbb
sbb
pop
xchg
jl
adc
lea
lock
loop
mov
mov
or
pop
lods
mov
in
loopne
xor
lea
jmp
sub
pop
addb
test
push
cmp
cltd
or
int
repz
xchg
lock
mov
cmp
pop
dec
mov
sbb
rol
jl
mov
pop
into
stos
mov
push
out
adc
fsubrs
psubq
add
jns
dec
out
jns
adc
mov
dec
and
and
cwtl
sbb
mov
rolb
ret
and
or
out
bsf
push
jo
ss
leave
and
in
add
cs
bound
pop
push
mov
adc
out
fidivs
out
test
test
inc
lock
rcrb
push
or
mov
mov
mov
jl
mov
repz
incl
sahf
rclb
mov
cmp
xchg
enter
xchg
out
mov
out
cs
enter
dec
mov
add
scas
mov
stos
insb
sahf
sub
sbb
jb
gs
sub
cmp
xchg
jae
popf
test
inc
sbb
jnp
mov
int
mov
add
dec
mov
aad
sub
dec
jge,pn
rcr
addr16
fidivl
sahf
add
fimuls
scas
out
mov
loopne
test
mov
rcrb
pop
in
pusha
ljmp
mov
lret
sarb
or
mov
inc
adc
loopne
sub
inc
pop
je
push
cld
in
xor
jp
and
mov
cs
dec
mov
mov
andl
sbb
clc
out
ds
xor
cmpb
sbb
cmp
fisubl
push
or
sub
je
cs
jmp
sbb
jnp
pop
jecxz
mov
mov
in
jae
adcb
jbe
hlt
test
subl
mov
mov
sbb
push
and
dec
jl
jg
and
inc
out
daa
inc
pop
enter
push
mov
int3
and
ficompl
cwtl
pop
fidivs
mov
mov
stos
div
std
call
js
sub
xchg
cmp
xor
movsb
lret
cmp
pop
inc
daa
xchg
xor
sbb
clc
pop
inc
push
test
addr16
fcoms
movsl
mov
pop
scas
test
rolb
insl
xor
mov
shlb
xor
sbb
fsubl
shrl
cmpsb
fcompl
mov
hlt
jne
push
xlat
cmp
test
sbb
mov
mov
cmpb
mov
pop
sbb
repnz
or
xor
mov
movsb
in
nop
clc
sarb
xor
les
ffreep
data16
xchg
aaa
or
xlat
fs
aad
rcrb
adc
mov
js
pop
gs
xor
outsb
sbb
sbb
test
inc
push
cs
mov
adc
lcall
pop
pop
cmp
mov
inc
add
push
jp
or
xchg
xorb
adc
ficoms
adc
addr16
push
fstpt
mov
pusha
repz
push
push
mov
lock
aaa
rorb
xchg
or
dec
jmp
push
pushf
and
and
mov
movsb
arpl
mov
loope
cmpsl
clc
mov
ret
fsub
cwtl
jg
mov
cmpsl
ret
aam
adc
bound
mov
insb
shlb
andb
sbb
dec
xlat
iret
jecxz
lock
dec
imul
adcb
aad
adc
dec
and
dec
push
pop
stc
jl
lods
lahf
xor
ss
push
pop
enter
loop
nop
js
dec
mov
pop
lahf
dec
pusha
push
aad
mov
clc
mov
out
pop
addr16
xor
sti
jmp
mov
jmp
sub
jns
rcrl
stos
in
or
in
jb
addr16
lods
lods
stc
sbb
cmpsl
xor
pop
push
rol
or
dec
imul
lods
cmp
lret
dec
mov
adc
cmpsb
jnp
sub
bound
hlt
adc
enter
sub
andl
insb
enter
xchg
or
lods
xchg
out
cmpsb
mov
cmpsl
sbb
xchg
iret
xlat
mov
or
cmp
fcomps
add
jne
dec
lahf
addr16
shrb
lea
in
cmp
inc
pop
xor
hlt
iret
sub
mov
outsl
add
mov
ror
clc
rorb
fmulp
in
addr16
add
lcall
dec
cld
and
daa
arpl
mov
out
adc
fs
dec
cwtl
jmp
mov
xor
lods
xchg
andl
lcall
aaa
ss
in
data16
bswap
scas
sub
mov
xor
mov
inc
ljmp
hlt
pop
jne
lods
in
insb
fidivs
inc
push
ret
int
lods
sar
push
mov
fwait
mov
jl
lea
jp
sbb
inc
xor
mov
inc
push
sarb
jge
xchg
loopne
ret
std
and
mov
xor
ret
roll
fcmovnbe
jno
cmpsb
mov
daa
add
nop
dec
jb
lahf
xor
subl
fucomp
inc
mov
sbb
push
inc
aas
or
dec
pop
ss
jle
loop
xchg
enter
mov
mov
xchg
pop
mov
pop
aad
lods
data16
pop
scas
imul
adc
jecxz
push
cmp
ja
enter
lock
call
ror
mov
into
iret
and
test
addr16
mov
sbb
int
pop
daa
mov
sahf
sbb
push
sbb
mov
jecxz
dec
fdivrs
xor
xchg
fistpll
push
loop
loopne
pop
sub
fisttpl
mov
outsl
xchg
leave
adc
jnp
rcll
push
dec
push
mov
push
andb
pop
push
lahf
inc
dec
pop
sbb
add
xchg
mov
pop
call
adc
pusha
mov
sbb
adc
call
lds
lds
add
data16
cmp
cmpsl
adc
fimull
mov
push
out
adc
xlat
dec
in
xorb
int
call
popf
sub
or
cmp
sbb
imulb
jbe
rcrl
sti
mov
loopne
subb
cmp
mov
out
cmp
in
rclb
ja
push
data16
xchg
scas
shll
jmp
mov
clc
sub
jne
sbb
push
xlat
jo
scas
sub
adc
xchg
mov
mov
mov
fs
aaa
aas
cmp
xor
xchg
pop
add
scas
iret
sbb
sbb
push
scas
dec
rcrb
dec
cli
fld
loopne
out
pop
jnp
loop
pop
icebp
inc
cwtl
iret
mov
outsl
jnp
fildll
sarb
mov
pop
outsl
jmp
dec
push
shlb
mov
dec
cmp
es
lock
and
mov
and
sbb
mov
cld
mov
sub
mov
fsubrl
outsb
xor
das
jp
mov
in
into
shlb
lret
fidivl
and
add
ficompl
mov
sbb
fdivl
gs
push
in
xor
adc
sub
aaa
jb
inc
dec
dec
inc
xor
pop
jl
lret
cmp
std
xchg
out
xor
int3
xor
scas
in
push
push
js
bound
sub
out
xor
push
lcall
lock
daa
mov
xor
fcomi
pop
push
adc
scas
out
movsl
pop
jmp
rol
adc
pop
aad
add
lods
or
cmp
test
imul
pop
mov
jle
dec
mov
xchg
outsl
push
xor
lods
daa
nop
or
rcll
loopne
mov
sub
fisubrs
pop
sub
mov
mov
fidivs
pop
sub
adc
pusha
jle
mov
lods
clc
push
test
push
xor
icebp
mov
fisubl
or
cmpsl
fidivrs
inc
push
dec
popf
xorl
gs
jmp
jg
aad
cs
in
in
arpl
xchg
and
das
aad
xor
mov
out
scas
sbb
jmp
sub
dec
ret
ljmp
pushf
sbb
mov
popf
sbb
rcrb
xor
sbbl
fisubrs
cmpsl
mov
xorb
std
shlb
sub
push
shlb
movsl
iret
ljmp
xor
call
fnsave
icebp
and
hlt
popa
pop
mov
xchg
loopne
jp
xor
xchg
mov
push
shrl
pop
add
cmp
in
add
andb
cmp
and
mov
inc
or
leave
enter
aad
sbb
ret
bound
fwait
mov
imul
repnz
ljmp
mov
xor
cmp
mov
pop
iret
vpgatherdq
loop
lcall
les
aam
iret
cld
push
pusha
mov
add
cld
jae
cs
or
jmp
mov
dec
inc
pushl
pop
iret
pop
inc
jmp
mov
xor
rdpmc
movsl
jae
cmp
mov
enter
test
pop
std
push
mov
lds
push
movl
and
push
lahf
lock
mov
dec
push
adc
push
in
outsl
fucomi
imul
into
push
cmp
inc
sbb
adc
mov
xor
sub
lods
nop
pop
xor
lock
xor
xchg
inc
dec
data16
mov
arpl
shll
push
xchg
sub
adc
push
or
iret
or
imul
popf
js
das
loopne
repnz
aad
and
cmp
jo
xsaves
out
cwtl
and
dec
pop
pop
lret
lret
mov
and
pop
mov
fisubrs
mov
xchg
mov
test
push
cmp
cs
mov
aaa
in
repnz
xor
and
fbstp
inc
call
jecxz
movsb
mov
dec
cmp
je
nop
push
mov
sbb
jmp
xchg
dec
dec
sub
or
inc
pop
stos
arpl
sub
adc
or
adc
sub
jecxz
sti
push
jle
mov
jmp
cmp
in
les
jns
add
dec
dec
imull
sbb
xor
clc
lds
mov
inc
xchg
mov
cld
mov
lds
cmp
jge
jb
cwtl
sub
fcoml
je
lds
jmp
xchg
sub
notl
push
cwtl
aam
imul
xchg
clc
xchg
outsb
cwtl
mov
mov
enter
jp
fs
mov
pushf
sub
pop
mov
and
pop
cwtl
iret
rorb
out
mov
cmovo
jno
loope
cmc
or
xchg
adc
data16
popa
test
sbb
jl
xorl
lods
xlat
jp
and
mov
bound
dec
mov
jmp
add
std
push
xchg
lods
dec
push
and
inc
pop
inc
inc
add
adc
adc
pop
ret
push
sahf
xchg
xor
loop
dec
xchg
cmpb
idivl
cmp
jb
into
push
in
mov
jns
xor
cmp
bound
xchg
lods
js
rcll
jno
mov
lods
je
ficoms
push
test
dec
cwtl
mov
xor
pop
js
popf
out
into
jo
ret
shlb
pushw
movsb
jb
pop
jo
add
getsec
mov
sbb
push
push
jge
rcrl
pop
jo
mov
cmpsb
push
xchg
pop
pop
lahf
arpl
mov
cs
ss
pop
shrl
js
jb
dec
or
dec
add
aas
sbb
mov
add
sbb
sub
sbb
popf
and
mov
sbb
mov
aas
sub
sbb
mov
bound
cmp
mov
cmp
repz
xchg
in
mov
cwtl
in
jnp
cmp
pop
nop
icebp
adc
pop
push
inc
js
xchg
jae
js
repnz
std
lds
fcmovnb
jnp
adc
ficoms
out
or
xchg
adc
pop
mov
adc
outsl
aas
cld
sub
pop
sbb
in
stos
jmp
adc
xchg
shlb
or
adc
imul
fisttps
and
sahf
cli
add
mov
mov
pop
xor
xchg
and
jns
dec
int
clc
out
sbb
loopne
hlt
ret
cld
pop
repnz
clc
enter
rolb
add
sbb
sbb
out
pop
mov
push
int
xor
xlat
sub
xor
jb
pop
out
push
subb
cmp
dec
mov
mov
aas
repnz
mov
add
push
rorb
mov
dec
pop
mov
adc
xchg
in
mov
lahf
inc
iret
cmp
mov
iret
sbb
aad
pop
push
cmp
xchg
ljmp
mov
or
cmpsb
push
adc
adc
aaa
add
and
push
fs
hlt
cmc
out
pop
sub
or
aam
test
mov
xchg
test
mov
and
xlat
dec
arpl
aam
and
cmp
push
and
clc
inc
out
movsb
mov
in
push
lods
cmp
loop
ret
push
loopne
pusha
sbb
lods
xchg
lea
rcl
inc
sub
cmp
xor
lds
gs
pop
push
or
cmpsl
xor
mov
fucomp
mov
or
dec
add
xchg
jae
xor
loope
fcoml
sub
push
das
sub
leave
aas
add
dec
jns
pop
pusha
rclb
jmp
push
push
adc
push
std
stos
sub
loope
scas
inc
pop
cmpb
mov
sbb
xor
mov
mov
insb
jmp
dec
dec
mov
inc
fdivrl
stc
cmp
lods
nop
or
cmp
sbb
sbb
inc
cmp
test
push
dec
enter
sbb
adc
pop
std
or
ret
shl
sti
mov
inc
arpl
hlt
fldt
aam
out
daa
jae
popa
cltd
pop
lods
incb
sbb
inc
xlat
rcrl
loop
mov
das
xor
repz
xorb
addr16
or
pusha
jle
ret
inc
adc
sbb
pop
fsub
adc
xor
inc
iret
sbb
cmp
pop
jp
outsb
movsb
int
adc
popf
icebp
adc
xchg
xorl
fmull
mov
or
push
das
pop
aam
or
push
aad
and
enter
cwtl
rolb
lds
mov
lds
or
dec
push
daa
mov
addr16
push
das
mov
das
cmc
pop
cs
mov
mov
pop
lahf
aas
cmp
mov
pushf
lcall
xchg
add
adc
addl
jo
into
in
pop
lods
xchg
xor
add
push
ret
pop
ja
add
sub
iret
call
mov
push
and
shlb
and
and
out
not
cld
loop
inc
nop
arpl
push
mov
jmp
pop
or
pop
cmpsl
popl
push
jmp
dec
out
and
mov
mov
mov
jns
jle
pop
int
ret
sbb
jmp
rcrl
push
gs
enter
lods
lods
inc
pushf
repz
xchg
push
jp
inc
xchg
sbb
icebp
cmp
sub
movsb
push
mov
loopne
adc
inc
cld
js
cltd
repz
clc
or
pop
dec
sbb
push
sub
test
mov
xlat
cmp
shll
adc
or
adc
icebp
fsubrs
cmpsb
loopne
dec
mov
mov
in
dec
rcrb
sbb
sub
dec
repnz
ds
testl
js
adc
pop
mov
mov
inc
bound
jmp
sbb
and
xchg
mov
fdivrs
rcrb
fsubl
adc
pop
dec
ss
call
scas
lahf
inc
bound
negb
dec
lret
pop
push
xchg
pop
ficomps
mov
ljmp
jb
dec
es
xor
mov
sub
dec
xor
xchg
aam
lea
and
addr16
dec
xchg
rolb
scas
arpl
push
xor
cs
loop
cli
mov
push
inc
mov
push
xorb
push
add
bound
int3
jbe
cmp
jbe
mov
push
iret
mov
daa
jne
pinsrw
call
and
jg
scas
jae
lods
mov
ror
nop
mov
fsubrl
clc
inc
dec
daa
add
in
pop
sbb
adc
adc
mov
clc
aas
xlat
inc
js
call
shr
push
rolb
outsl
push
in
sbb
into
fidivrs
sub
lahf
call
cmp
cmpb
daa
imull
aam
push
xor
fsubl
mulb
and
rcrb
ds
popf
pop
mov
mov
arpl
inc
stc
jle
and
cmp
mov
in
push
pop
adc
aaa
and
cmp
sar
xor
inc
mov
mov
fisttpll
fnstsw
clc
xchg
outsl
cmp
jb
dec
mov
fcoms
add
sub
das
cmp
adc
xchg
js
adc
mov
shlb
icebp
out
aam
xchg
adc
and
add
jl
pop
lods
xor
jecxz
loope
lods
push
add
cmp
scas
jns
mov
add
mov
xor
or
jno
es
lock
mov
mov
ds
popa
sarl
pop
pop
daa
cmp
aad
dec
ret
add
pop
inc
movsb
jge
popf
dec
enter
into
ds
les
cs
jne
sahf
mov
aas
sti
mov
aas
test
xor
sub
xorl
mov
addr16
adcb
mov
stc
push
push
movsb
xchg
rcrb
push
adc
mov
and
jo
shl
inc
shlb
imul
mov
lcall
mov
dec
cmp
shll
jae
nop
test
xchg
pusha
jp
js
out
jp
icebp
jnp
pop
pxor
pushf
ja
addr16
aad
ret
ret
cmp
adc
rcll
and
xor
iret
insl
jns
outsl
mov
lret
sarl
push
rcrb
jmp
pop
pop
inc
iret
insb
fdiv
shl
mov
dec
cmp
dec
fstl
adc
call
pop
loop
jmp
cmp
mov
sbb
lret
ret
or
pop
pushl
idivw
loop
and
adc
test
inc
or
sarl
or
subb
inc
adc
out
loopne
or
mov
pop
jp
and
mov
xchg
jo
inc
xchg
xlat
imul
jae
dec
mov
in
packsswb
xor
mov
pop
fmull
rcrl
cmp
test
lcall
pusha
ds
and
sub
mov
mov
push
xor
dec
lahf
pop
mov
ss
jecxz
mov
lret
or
gs
fidivl
and
adc
clc
in
xor
inc
nop
xchg
mov
xchg
repz
lea
mov
insb
inc
mov
jl
notb
bound
xchg
rcll
push
xchg
xchg
adc
lods
lods
cli
out
sub
stos
lods
and
mov
fucom
xor
bound
push
and
mov
xor
fstpl
and
mov
cli
fcomp
push
or
shlb
int
push
insl
pop
xor
add
fptan
sub
and
mov
lcall
jmp
jle
pop
rcr
in
arpl
test
push
cld
pop
das
mov
or
shll
dec
aad
sub
jg
lods
je
cwtl
push
sti
nop
aas
cld
pushf
cmp
xchg
inc
in
pop
sbb
dec
add
lea
cmp
xor
hlt
sti
and
lret
add
scas
sub
pop
mov
aam
and
ljmp
iret
jmp
lock
mov
mov
jnp
mov
and
jl
int
mov
nop
or
pop
cmp
shlb
jle
and
movsb
addb
xchg
frstor
add
movsb
add
and
mov
aad
dec
xchg
mov
sub
sbb
xor
jb
xchg
push
pop
scas
mov
ds
ja
into
into
in
pop
sub
push
mov
in
adc
xor
pop
mov
mov
daa
xor
dec
sahf
xor
inc
mov
or
add
dec
jle
adc
subl
aaa
dec
jns
out
jle
sub
sbb
aas
xor
enter
and
mov
ljmp
jle
sarb
mov
call
mov
sti
mov
add
cltd
jle
mov
ror
push
inc
adc
adc
rcrb
mov
xor
sbb
pop
jb
sub
pop
mov
rep
arpl
cmp
fisubl
lods
clc
mov
aam
test
push
mov
add
sar
mov
dec
push
aad
sar
daa
jo
lcall
stos
out
in
mov
adc
adc
add
and
ljmp
mov
mov
movsb
mov
jbe
pop
fwait
inc
cmp
pop
pop
push
fcoms
fdivs
jge
jmp
in
ljmp
enter
lret
push
popa
iret
and
or
pusha
dec
add
xchg
sti
frstor
and
rorb
add
pushf
push
std
lret
cli
inc
push
cmpsl
and
pop
outsl
adc
hlt
mov
pop
test
mov
mov
sub
add
push
js
fdiv
push
lret
sub
sbb
or
rclb
test
aaa
xchg
mov
xchg
fstpl
call
cmp
outsb
aaa
cmp
test
cmc
in
mov
xlat
incb
stc
loope
scas
rolb
inc
jmp
inc
and
cs
arpl
scas
lahf
subb
jmp
inc
insl
enter
popf
and
aam
loopne
mov
aam
mov
xor
and
sub
js
loopne
xchg
jne
movsb
lods
mul
dec
pop
adc
add
rcrb
jmp
out
xchg
add
ret
popa
xchg
sub
movsb
cli
xor
xchg
iret
pusha
xor
cmc
inc
jo
movsl
cltd
outsl
lock
fsubl
cmp
adc
fmulp
push
jecxz
lahf
lea
adc
sbb
xchg
xor
sarb
sub
sbb
sbb
fnstcw
loop
push
xor
and
dec
inc
test
add
cmpsb
out
shl
jg
pushf
sahf
push
pop
call
xchg
iret
fstpt
fcmove
leave
push
sub
nop
cmp
dec
cwtl
repnz
out
adc
cmp
push
daa
push
arpl
out
or
out
sbb
aad
and
aam
pusha
scas
dec
cmp
iret
mov
pop
mov
mov
jo
sub
cmpxchg
mov
adc
xor
cmp
subl
mov
scas
mov
pushf
cld
pop
iret
outsl
sahf
loopne
dec
in
out
pop
cs
mov
cld
lods
ds
jg
adc
sbb
imul
mov
xor
loop
lret
xor
pop
iret
ds
lods
pop
iret
out
adc
addr16
mov
adc
mov
mov
lcall
aas
rcrb
push
call
cs
adc
xchg
fidivrs
je
test
test
mov
jno
inc
inc
adc
and
lcall
inc
into
jecxz
add
mov
or
dec
loope
inc
lods
js
cwtl
cmp
std
lods
cmp
jne
mov
or
mov
xchg
rorl
int
enter
cmp
pop
inc
pop
rorl
inc
push
jbe
ret
sbb
push
sbb
fadd
cld
inc
xor
dec
jae
pop
pushf
dec
testl
das
pushf
mov
sti
push
pop
or
gs
pop
rcrl
rorb
add
pop
jnp
add
and
dec
sub
pushf
ja
and
add
dec
jmp
sbb
sub
movsl
loope
pop
loop
mov
jecxz
xlat
iret
movsb
pop
xchg
pop
mov
and
scas
jmp
sahf
fisttpll
lea
cltd
mov
pop
int
std
jnp
xor
or
lcall
pop
or
je
gs
adc
dec
push
pop
movsl
sub
loopne
or
xlat
addr16
popa
repnz
fs
out
cmp
ljmp
xor
pop
ficoms
fimuls
in
repnz
dec
shrl
jg
sbb
lods
into
dec
dec
icebp
xor
out
jl
mov
ret
and
fdivl
ret
sub
jg
or
or
sub
ljmp
pcmpgtb
lods
jle
mov
inc
out
push
xor
adc
mulps
nop
sbb
cmp
add
xchg
push
ret
adc
repnz
push
rclb
adc
loopne
sub
prefetcht0
sti
sub
sarb
sub
leave
je
sub
and
jp
pop
xlat
mov
popf
inc
inc
jg
mov
push
push
cs
shlb
jb
pop
or
shr
dec
and
add
mov
sub
sbb
xor
mov
push
pop
rep
or
mov
clc
jo
xor
mov
pop
clc
cmc
fsubs
adc
dec
cmp
xchg
sub
and
mov
das
dec
jg
xlat
or
loop
leave
pop
add
jo
lods
mov
cltd
je
fisttps
add
sbb
adc
xor
lock
mov
jp
scas
xlat
mov
xorb
push
fldt
or
and
jo
push
inc
jle
ret
shlb
dec
push
lock
in
adc
cwtl
xlat
imul
sub
inc
mov
hlt
stos
stos
pop
push
mov
jo
cmp
mov
dec
aad
or
mov
mov
mov
mov
xor
dec
lea
mov
push
sbb
sub
je
cltd
call
cmpsl
into
add
xor
cs
sub
pop
stos
jecxz
addr16
daa
jnp
push
add
mov
add
mov
or
jmp
es
adc
mov
and
stos
xor
lods
hlt
lcall
aaa
sub
cwtl
cmp
roll
xchg
jg
movsb
xor
jp
data16
mov
lods
cld
mov
data16
aad
and
call
jge
mov
and
cmp
mov
xchg
subl
inc
test
stc
popa
mov
sub
dec
lock
data16
ret
in
push
inc
in
shl
das
and
sub
xlat
or
cwtl
push
pop
data16
xchg
sub
add
and
loopne
enter
fisttpl
loope
push
mov
repnz
imul
in
or
jle
ja
jne
mov
jns
xor
mov
mov
lahf
lea
adc
or
stos
or
xor
movlps
xor
sbb
push
sbb
jle
or
leave
scas
xchg
js
sbb
sbb
push
cmp
jl
testb
mov
xor
roll
sbb
and
rclb
mov
mov
adc
sbb
mov
pop
mov
loop
jnp
iret
sbb
cmp
mov
sbb
pop
jp
lods
pop
push
outsl
dec
pop
addr16
push
daa
mov
xchg
sbb
enter
lret
mov
pop
insb
or
inc
dec
fwait
push
pop
pop
push
cmpxchg
nop
fs
enter
bswap
xorb
aad
ret
xchg
iret
or
fisubs
loop
mov
cld
xlat
push
adc
orl
mov
mov
fwait
stos
mov
jmp
lcall
push
mov
or
outsl
sbb
mov
shlb
sbb
scas
mov
insb
dec
pop
bound
pusha
in
and
fstps
das
movsl
test
clc
pop
add
in
mov
push
insl
or
xor
push
or
xchg
out
and
in
mov
js
movb
push
iret
les
imull
daa
add
dec
xchg
movsb
cmp
cmpsb
ljmp
push
sbb
mov
jl
sub
test
insb
je
jp
shr
pop
xor
adc
mov
sbb
pop
cmp
enter
cmp
aam
in
loop
pop
xlat
fnstsw
clc
jo
jle
psubsw
arpl
arpl
outsl
sar
in
enter
pushf
inc
imul
ret
mov
divl
xor
push
mov
adcb
cwtl
into
aad
popf
and
dec
rorb
fwait
out
cmp
notb
xchg
cmp
inc
stc
dec
daa
sub
dec
fldt
loopne
icebp
dec
iret
insl
fmuls
dec
in
mov
add
popa
loope
fmull
sub
test
pop
inc
scas
sarb
das
jb
lcall
lods
jp
mov
mov
mov
in
aam
shrb
movsl
mov
jg,pn
mov
adc
pushf
push
test
xlat
sub
frstpm(287
in
popa
fwait
mov
push
push
imul
cmc
out
mov
push
mov
sbb
jl
jmp
or
sbb
or
jl
cmp
mov
das
and
cmpb
addr16
mov
mov
addr16
inc
icebp
sbb
mov
movsl
push
arpl
in
js
xchg
mov
mov
push
push
pusha
fistpl
xchg
mov
sub
pop
sbb
repz
outsb
mov
fisttpl
xchg
pushf
push
lret
ss
scas
push
mov
aas
mov
push
xor
xchg
shlb
mov
pop
repnz
stos
mov
fisttpll
sahf
xor
out
popa
pop
pop
sbb
hlt
insb
dec
dec
fidivs
push
outsb
mov
xlat
popa
out
lea
dec
fst
cmp
sti
stc
mov
jl
aas
das
mov
sub
mov
xor
sbb
or
pop
sub
gs
cmp
mov
lcall
jmp
dec
sarb
cmp
loope
xor
jnp
sbb
lods
add
sbb
mov
mov
cmp
lret
pop
or
push
add
adc
jo
insl
iret
add
ja
sbb
subb
sahf
jecxz
cmp
ss
cmp
push
push
mov
mull
jmp
dec
adc
mov
sbb
pop
out
push
mov
jmp
mov
pop
scas
mov
mov
enter
add
inc
dec
sbb
cmpsl
push
rep
jnp
xor
aas
push
mov
shlb
jnp
das
out
shrb
jecxz
sarb
jnp
pop
cld
push
les
add
cmp
adc
jnp
leave
mov
sbb
xchg
mov
nop
ja
call
scas
das
jg
lcall
cmp
xchg
mov
jno
je
jns
xchg
call
cmp
mov
jo
out
mov
scas
pop
jl
shr
xor
xchg
adc
in
les
call
xor
jns
sbb
mov
dec
mov
ret
outsb
add
dec
je
or
cld
push
das
in
wrmsr
outsl
dec
fsubl
xchg
js
aam
popa
in
dec
or
orb
fimull
aad
pusha
in
cmp
xchg
or
insb
in
mov
push
jg
pop
jne
xor
mov
ror
mov
aad
add
sbb
adc
push
pop
gs
mov
mov
xlat
add
mov
jle
in
mov
sub
adc
xor
outsl
ficomps
sbbb
nop
aam
scas
in
int3
or
mov
and
adc
scas
daa
cmp
jo
shlb
mov
pop
and
and
int3
xor
fimuls
mov
scas
cld
dec
sbb
mov
xchg
and
ss
dec
inc
into
and
shl
in
adc
andb
pop
outsb
shr
lret
mov
and
shl
cmp
xor
enter
lahf
cmp
xor
jns
loop
inc
pop
inc
xor
inc
push
scas
repnz
mov
jg
addr16
xor
addb
fisubrl
push
movb
and
ret
sbb
xchg
and
mov
jecxz
orb
adc
nop
inc
aad
pushw
call
in
dec
jno
xor
or
enter
in
pop
stc
mov
testl
xor
push
sti
clc
ss
lods
or
cs
mov
sbb
add
xchg
xlat
rorl
aaa
enter
xchg
jo
movsb
mov
test
loopne
pop
mov
aas
clc
lret
pop
fistpl
je
pop
lods
pop
enter
mov
or
sub
push
fmul
pushf
lods
fmuls
and
test
xor
and
mulb
cmp
sub
hlt
and
or
iret
xchg
push
loop
movsb
inc
dec
mov
cwtl
loope
sub
adc
sub
movsb
xlat
rcr
jge
cmp
mov
insl
xor
or
mov
mov
pop
mov
mov
ret
rol
xor
jns
push
shll
mov
or
xor
xor
mov
bound
inc
mov
stos
adcb
mov
cltd
and
lods
pop
aaa
lahf
add
aas
inc
sarl
mov
cmp
andl
and
jmp
adc
shr
inc
cmpsl
pop
cmp
xchg
sub
and
cwtl
aaa
jne
ss
pop
xchg
shr
ljmp
fwait
loopne
fistpl
mov
push
xor
arpl
mov
in
dec
mov
add
pop
jns
push
mov
mov
push
xor
aas
pop
push
pushf
xchg
mov
xor
ret
test
fiadds
jno
cmp
jmp
test
sbb
fmuls
sbb
sbb
inc
jae
test
pushl
sbb
mov
cwtl
or
and
test
sbb
dec
ret
mov
push
inc
stos
pop
addb
sti
jmp
mov
addr16
sub
js
fucomp
loopne
mov
ret
lods
mov
push
jo
jo
fs
xchg
fcompl
popa
and
push
cmc
mov
out
test
jo
cmp
push
aam
adc
pop
push
fwait
mov
scas
lods
shlb
mov
aam
push
shrb
pop
shrl
stos
and
add
adc
rorl
xchg
jecxz
mov
xor
lret
loopne
xlat
stc
lods
cmovle
mov
dec
loope
or
jecxz
pop
aaa
js
sub
jp
repnz
out
xchg
imul
jmp
insb
inc
add
sahf
pop
js
popf
call
adc
add
dec
ss
popf
push
and
es
movsb
mov
adc
pop
notl
jne
add
pop
mov
xor
mov
push
sbb
mov
add
daa
push
jnp
xchg
jl
fs
mov
sbb
add
pop
or
lea
and
pusha
fstpl
lret
push
or
scas
sarb
and
push
mov
in
pextrw
adcb
iret
xchg
push
shl
rorb
mov
test
test
xchg
dec
int
cltd
ljmp
outsb
jmp
sbb
pushf
aas
outsl
and
jae
fucomip
insb
and
add
sbb
pusha
mov
lret
rcrb
jp
jne
push
jae
scas
pop
cmp
or
push
ficomps
outsl
jno
inc
jns
and
bound
imul
lahf
insb
imul
or
dec
or
jmp
mov
mov
mov
fdivp
je
hlt
sub
pop
fdivrs
hlt
lret
scas
aas
adc
lods
mov
mov
push
xchg
mov
or
xor
xchg
xchg
cmp
push
sbb
jp
mov
adc
xor
fdivs
dec
in
add
sub
fdivrl
dec
jl
mov
repz
insl
push
mov
mov
int3
mov
push
repnz
jbe
pop
pop
cmp
shll
adc
outsl
cwtl
mov
mov
orb
fcoms
sbb
mov
mov
add
mov
test
cwtl
movsb
fisttpl
int
std
mov
loope
mov
insl
push
adc
ljmp
movsb
div
test
adc
or
xor
sbb
insl
ljmp
jb
loop
push
add
sub
bound
dec
cs
push
jge
xchg
jb
fs
into
xor
push
std
jns
jo
xchg
lods
insb
jmp
sahf
sub
imul
push
mov
ret
mov
out
dec
movups
jecxz
jae
inc
iret
xchg
push
push
lock
lcall
scas
sbb
out
jle
movsb
add
xchg
aad
sbb
sti
xchg
sbb
loop
xor
jo
or
js
mov
repz
sbb
aaa
imul
push
or
or
aad
mov
ficomps
mov
imul
inc
jns
shr
fmuls
inc
mov
pop
dec
mov
sahf
xor
lahf
mov
mov
push
xor
lret
out
mov
dec
mov
adc
fdivrl
xadd
jbe
cmp
ret
adc
sub
mov
xchg
add
ret
dec
mov
mov
or
jb
lahf
in
sbb
jo
mov
lock
adc
jns
mov
xchg
dec
cwtl
cmp
daa
mov
inc
and
sub
jnp
into
sub
lock
add
pushl
inc
clc
xchg
fwait
sarl
dec
push
movsb
cmc
add
stos
push
or
pop
mov
adc
leave
in
dec
mov
xor
mov
fmulp
sub
pop
in
mov
outsb
push
jns
adc
cmpsl
cmp
push
push
rcrl
sahf
and
pop
fadd
movsb
xor
xchg
inc
push
call
xchg
push
sbb
jno
adc
stc
lods
cmp
sub
cld
in
xchg
fdivs
sbb
lret
mov
mov
test
push
aaa
icebp
mov
cs
shlb
inc
mov
or
notl
testb
stc
ret
loopne
cmp
dec
sbb
int
in
test
fiadds
aas
je
mov
inc
xor
sub
adc
pop
jae
std
inc
fcomi
cmp
std
and
popf
push
dec
aad
mov
push
stos
add
add
leave
mov
cmpsl
and
sbb
pop
sbb
xchg
cmp
pop
mov
mov
sub
mov
pop
xorb
lea
mov
xlat
or
ret
jne
iret
mov
in
push
mov
ss
addr16
push
je
cmp
in
loopne
rol
and
shlb
lods
and
rol
bound
movsb
or
sub
mov
mov
sarb
jb
inc
push
fsubl
jne
sub
scas
push
and
ds
dec
add
daa
jmp
push
in
mov
sbbb
lcall
sub
iret
fistpll
xor
daa
out
ja
sbbl
out
fucomp
add
lods
fcomi
sbb
add
rol
xor
add
or
popf
mov
push
mov
fnstenv
push
in
cmpsb
mov
or
rcll
dec
lcall
mov
jno
insb
ja
dec
mov
cmp
stos
push
jne
fisttpl
mov
xor
andl
mov
inc
shrl
mov
cltd
mul
mov
fistl
sbb
mov
mov
insl
sbb
enter
jg
mov
aam
push
pop
ficoms
repnz
xor
sub
xlat
arpl
pop
lods
cli
es
fisttpl
call
jne
repz
cmp
cmc
adc
mov
or
xchg
aad
xor
xchg
ds
adc
pmulhw
add
cmp
lods
std
mov
sbb
cmp
sub
test
add
sbb
repz
call
xor
xor
sub
movsl
jp
test
std
ret
pop
cmpsl
out
jne
inc
adcl
cmp
daa
into
insl
mov
outsl
sbb
lods
cmp
out
lcall
icebp
rorb
mov
out
movsb
jmp
or
xor
mov
movsb
or
bound
cmp
xor
push
rclb
dec
jne
mov
add
pop
loopne
mov
call
cld
push
rep
pusha
push
or
cmc
adc
cmp
mul
dec
fucom
xchg
or
add
sbb
iret
into
sub
fmulp
dec
sbb
insb
dec
inc
jo
xor
in
jo
daa
fcompl
cmp
popf
push
or
std
mov
xor
ret
dec
cs
frstor
sti
pushf
and
sbb
xchg
mov
dec
inc
jb
xor
sarb
pop
js
cmpsb
outsl
ret
dec
jb
adc
fdivs
adc
mov
rcr
jo
add
enter
pop
movsb
daa
dec
jo
mov
clc
insl
lret
rcrl
mov
pusha
adc
test
out
scas
lret
mov
fistpl
aad
mov
mov
inc
adc
sbb
fldenv
es
out
in
clc
pusha
xlat
push
mov
sub
test
push
adc
iret
scas
dec
repnz
test
add
in
imulb
cld
enter
xchg
out
popf
aam
adc
mov
push
inc
iret
mov
mov
add
mov
mov
and
pop
mov
das
ja
cmpsb
add
xchg
ljmp
in
out
test
movsb
push
jl
push
xchg
push
pop
dec
lcall
mov
sub
push
fdivrl
xor
dec
mov
cwtl
jbe
out
das
adc
sbb
dec
ret
or
popa
jae
pop
inc
in
inc
mov
dec
and
jae
mov
add
add
mov
fldt
pop
xor
sbb
loopne
fbld
lret
mov
loopne
and
dec
rorl
inc
mov
pop
insl
aam
cmpsb
mov
or
out
mov
enter
and
xchg
pop
clc
lods
and
in
shr
sti
gs
sub
lea
sarb
lods
mov
repnz
xlat
lahf
xor
inc
mov
lahf
cmp
or
mov
insl
shr
mov
gs
into
xor
jecxz
adc
xchg
jmp
fimuls
movsl
and
and
xor
ds
addr16
mov
xchg
cmp
add
push
not
lods
out
int3
sbb
pop
ffree
and
and
xor
xchg
cwtl
das
sbb
jg
lret
and
or
cmp
adc
hlt
nop
dec
mov
hlt
daa
mov
fmull
stc
sbb
flds
mov
test
mov
out
mov
push
push
adc
push
dec
in
fisubrl
lret
pop
out
cmp
mov
and
xchg
adc
imulb
arpl
pop
mov
arpl
sahf
stc
and
adc
jne
and
push
rorl
daa
sarb
fidivs
in
arpl
push
mov
mov
mov
add
mov
push
and
outsl
mov
addb
mov
inc
out
into
aad
lahf
adc
dec
jbe
fidivl
adc
movl
hlt
pop
aas
int3
or
ds
mov
jmp
dec
rcrl
adc
xchg
cmp
pop
cli
das
jecxz
xchg
adc
and
inc
fdivrl
scas
pushf
aas
lret
add
or
jne
xor
or
ret
adc
dec
or
in
negb
decb
pop
data16
sbb
das
hlt
pop
movsb
fstpt
jne
mov
jmp
cli
sbb
outsb
lods
clc
jb
jl
faddl
add
cmp
push
or
dec
test
xor
xor
dec
pop
pop
xor
jle
cmpl
enter
cmp
cmp
mov
dec
pop
insb
repnz
dec
mov
fldenv
fincstp
pop
sub
cmp
jmp
mov
scas
add
mul
shll
mov
les
xchg
pop
filds
ljmp
pusha
fidivrl
push
jo
mov
inc
pusha
lahf
add
push
pushf
inc
sbb
out
add
push
and
sbb
pop
xor
loop
or
dec
mov
out
jnp
cmpsb
adc
loop
pop
mov
dec
cli
xchg
jecxz
or
aad
xchg
mov
dec
xchg
sub
mov
movsb
xor
test
xchg
lahf
xor
jl
ja
fiadds
cmp
stos
int3
les
or
inc
sub
push
mov
mov
leave
lret
daa
and
lods
cmp
jg
pop
pop
cmp
lret
adcb
test
xlat
sbb
fisttps
ds
mov
mov
lds
mov
arpl
jo
mov
movsl
fldlg2
in
jl
nop
out
sub
pop
cmpb
pop
icebp
xchg
pop
test
adc
sbb
arpl
or
test
jo
int
loopne
bnd
das
mov
sbb
lea
jle
lret
jb
push
out
xor
daa
dec
mov
outsl
dec
adc
je
jbe
imul
out
jecxz
lods
call
sbb
mov
pusha
outsl
sbb
in
in
mov
cmp
dec
inc
repz
or
sbb
dec
call
jl
push
mov
and
cs
lods
sbb
xchg
jle
sahf
mov
jl
test
mov
adc
inc
lahf
popf
ss
cwtl
out
sets
movsl
popa
mov
push
aam
lea
rcrb
mov
pusha
mov
inc
pop
js
out
lcall
loopne
mov
lods
cmp
test
push
mov
xor
into
sbb
add
mov
mov
stos
xorb
sar
mov
hlt
sti
mov
gs
add
mulb
mov
outsl
shll
xor
add
push
mov
test
cmp
rcr
ss
dec
xor
push
mov
mov
movsb
adc
xchg
mov
repz
cmpsb
fiadds
mov
enter
pop
lcall
sbb
cmp
xor
xchg
cmpsl
push
pop
movsb
dec
ficomps
inc
sub
cmp
lahf
out
negb
icebp
out
dec
sbb
arpl
fwait
fcmovb
cltd
dec
in
xorb
inc
add
jns
inc
sti
lods
dec
movsb
insb
lea
push
mov
lods
fmull
sub
ss
addr16
dec
dec
push
sub
xor
nop
loopne
out
out
aam
mov
iret
xchg
mov
repz
inc
xchg
jmp
inc
enter
ds
push
mov
es
cmp
arpl
mov
or
test
ret
cmp
push
and
fwait
lahf
sub
out
xchg
clc
cmp
pop
repz
sbb
adc
test
fistpl
inc
mov
pop
xor
sarb
fstpt
xor
mov
mov
mov
jnp
js
stos
sub
aad
inc
call
add
es
dec
test
xchg
jb
or
inc
ret
les
fwait
inc
dec
xchg
ret
cld
push
jmp
jg
mov
jl
jp
loop
scas
cs
aam
mov
pushf
cs
pop
hlt
test
aam
and
push
pop
and
aaa
mov
adc
scas
stos
or
push
fcomps
jg
xchg
adc
mov
push
nop
dec
jle
push
cmp
mov
sarb
xchg
cmp
outsl
rcr
cmp
rorb
int3
pop
pop
mov
fsubrp
or
js
cltd
inc
mov
jecxz
cltd
push
mov
aad
inc
pushf
push
sti
fmulp
or
pop
mov
lret
xor
or
addr16
loop
pushf
aam
aaa
rcrl
xor
loop
jp
sbb
shrl
dec
iret
mov
ja
lods
lock
call
jge
fiadds
pop
sbb
lock
aam
je
push
addb
mov
cld
pop
iret
dec
pop
pop
pop
cmc
or
pop
xchg
xchg
dec
pop
sub
incb
popf
test
arpl
bound
fldl
xor
inc
mov
ret
push
shlb
inc
adc
pop
pop
xor
cmp
push
push
ror
mov
mov
mov
xor
mov
and
sub
push
jl
xor
jbe
imul
jo
andl
fbld
mov
mov
je
sbb
xchg
das
adc
movsl
mov
cwtl
ljmp
xchg
push
push
jle
sbb
pop
fmuls
sub
pop
cmp
lods
xor
sbb
mov
mov
lea
mov
testl
mov
add
fdivs
fisttpll
arpl
int3
jno
or
aad
aam
insl
sti
xchg
sti
js
lahf
cmp
pop
pop
jbe
xchg
pop
mov
sbb
xlat
outsb
mov
js
lea
add
mov
xor
or
mov
push
bnd
mov
mov
cmpsl
dec
and
ret
ret
repz
ljmp
push
les
jnp
sbb
push
sub
adc
shlb
jg
cmpsl
adc
fldl2e
or
push
jge
push
mov
adc
add
lods
in
xchg
mov
and
in
in
xor
or
clc
das
push
ljmp
push
adc
cmp
xchg
sub
xchg
sub
xchg
adc
xchg
rclb
call
push
sbb
stos
jns
insb
in
mov
hlt
call
push
add
inc
pushf
push
pop
push
pop
sub
jns
xchg
xlat
push
mov
mov
popa
xchg
or
jae
iret
add
mulb
call
cli
push
push
fldcw
xor
sub
mov
aaa
clc
das
xchg
in
mov
or
pop
add
add
rcrb
mov
sub
iret
or
jg
test
push
je
and
jo
cmp
inc
push
idivb
fildl
aad
mov
outsb
cmp
sbb
sahf
sub
xor
fldt
pushf
dec
and
fistl
xchg
xor
test
push
jl
mov
add
push
push
int
ffreep
nop
sti
xchg
ficompl
out
test
in
bound
push
push
cmp
testb
notl
hlt
cmp
push
sbb
mov
lock
mov
or
and
shrb
mov
ror
and
nop
mov
rclb
fadd
inc
int
pop
mov
cmp
stc
outsb
and
arpl
push
lods
mov
push
sub
dec
fnstsw
call
imul
cs
popf
jge
lahf
mov
in
jp
mov
pop
popf
daa
loopne
xor
ss
pop
pop
sub
lods
sahf
fmull
push
mov
andl
dec
lret
sbb
fsubl
push
and
add
sub
pop
ss
mov
outsb
idivl
jl
pop
jg
fidivs
nop
jmp
cmp
mov
mov
pop
dec
pop
adc
cmp
cmp
push
mov
mov
dec
xchg
sbb
lock
jo
add
or
adc
popa
test
sbb
xor
inc
add
test
stos
jb
mov
jo
mov
orl
sbb
pop
or
or
dec
jecxz
out
mov
movsb
fimuls
mov
xor
dec
ficoml
pop
das
mov
mov
lods
jmp
insb
xchg
je
test
and
mov
pusha
mov
adc
ljmp
cmc
jecxz
push
rcrl
js
shrb
mov
rol
das
jae
push
fdivrl
add
sbb
dec
stc
and
pusha
adc
jno
mov
mov
lahf
xchg
lahf
push
sub
adc
pop
in
and
andb
stos
adc
js
xchg
jl
inc
jo
test
cli
int
pop
dec
mov
dec
inc
je
lea
fcoml
sbb
pusha
out
lret
fistpl
imul
movsl
ud0
popa
stos
loopne
cmp
xchg
scas
dec
and
test
popa
and
jmp
inc
add
adc
sbb
mov
rcrb
mov
out
xchg
aaa
mov
lret
jno
movsb
and
or
push
call
and
mov
cmp
fcmovne
ljmp
es
daa
scas
xlat
imul
fcmovnb
sbb
jo
pop
movsb
in
sbbl
jecxz
pop
mov
push
js
push
jo
stos
inc
inc
repz
inc
jmp
loop
enter
cmpsl
sbb
jbe
add
xor
adc
ja
subl
push
cmc
jns
in
sub
mov
and
inc
dec
jns
sub
jmp
or
in
cmpsl
rcrl
cmp
sub
mov
insb
xchg
sub
pop
lret
popa
inc
xor
cmp
mov
subb
nop
xchg
xor
sub
mov
fidivrs
lock
lret
add
rcrb
sti
addb
and
and
enter
cwtl
mov
sbbb
add
movsb
or
clc
and
cmp
xchg
lahf
das
das
ficomps
mov
xchg
mov
xchg
mov
daa
fdivl
inc
lea
sarl
pop
push
sub
std
mov
mov
jb
xor
rol
mov
gs
mov
sub
xchg
inc
test
ljmp
sti
imul
rclb
sub
xor
sub
xor
pop
cmp
scas
sub
push
out
sub
and
xor
jb
pop
cmp
lret
pop
scas
in
pop
fcomp
mov
push
jecxz
in
jnp
inc
mov
dec
flds
cs
ret
iret
and
xchg
push
push
push
xor
jbe
mov
arpl
mov
int3
cli
faddl
stos
rolb
sbb
in
in
xor
ja
jns
xor
cmp
ja
clc
shr
push
popa
out
mov
inc
ljmp
cmp
imull
cmpsl
mov
jge
mov
add
sbb
xchg
lahf
or
xor
dec
hlt
xchg
pop
sub
cmpsl
xor
and
sbb
or
aaa
xchg
scas
cwtl
rol
lret
sbb
popa
test
mov
shll
scas
xchg
lock
push
dec
lret
jnp
mov
sbb
adc
lds
jmp
lods
mov
bound
cwtl
shl
push
mov
lret
outsl
fdivrp
jne
mov
mov
scas
jge
repz
lods
mov
faddl
cmp
mov
imull
or
sbbb
out
mov
inc
out
ljmp
or
add
cmpsb
xor
movsb
mov
jmp
stos
and
inc
into
sti
stos
pop
movsb
adc
les
cmovle
pop
scas
pusha
aaa
xchg
mov
frstor
aad
add
pop
shlb
icebp
dec
lds
gs
sub
mov
mov
gs
mov
iret
dec
aam
dec
call
arpl
mov
int
xchg
jp
fnsave
movsl
push
scas
les
pop
xor
mov
dec
addr16
mov
stos
and
mov
mov
pop
cmp
adc
cmp
outsl
jbe
fimull
repz
imull
xor
cmp
jo
mov
mov
adc
das
int
push
adc
negb
in
sbb
jbe
sub
jbe
mov
xchg
loopne
jle
sub
loope
inc
nop
sub
inc
subb
into
int3
sbb
shrl
js
rclb
and
sbb
sub
mov
lods
rolb
pop
ret
adc
mov
push
cmp
sbb
and
sub
xchg
call
mov
adc
das
pop
inc
or
arpl
cmp
and
or
mov
out
and
xor
inc
cmpsl
nop
pop
xor
sbb
pop
shrb
fildl
pop
into
pop
dec
mov
sahf
les
and
sub
pop
pushf
jnp
bound
aaa
sbb
and
repnz
mov
int3
shlb
das
enter
in
or
outsl
aam
outsb
dec
mov
setno
adc
cmp
loopne
and
rorb
dec
test
xor
rclb
jo
sbb
clc
gs
adc
push
notl
cmp
orl
daa
scas
pop
les
dec
adc
es
lods
addb
jbe
rcrb
xor
iret
xor
inc
jl
je
mov
mov
pushf
mov
lret
out
jecxz
adc
data16
ret
adc
sahf
push
loopne
inc
fs
popf
xor
pop
xor
es
mov
repz
sbb
iret
pop
pop
stos
lret
dec
add
pop
in
cmc
push
pop
and
dec
sub
adc
mov
sbb
loopne
xor
mov
aad
dec
cmpsb
mov
loopne
imul
movsb
and
cmc
and
mov
rcrb
push
jecxz
or
xlat
cwtl
mov
sahf
leave
iret
aas
pop
add
pop
and
mov
leave
iret
pop
xor
outsb
cmpb
movaps
out
repz
pop
test
add
repnz
loope
xchg
out
enter
popf
sbb
mov
pop
push
push
pusha
xor
sub
xchg
fildl
dec
pop
shrb
fnstsw
test
mov
xor
adc
xchg
stos
fdivs
pop
pop
dec
fiaddl
mov
pop
popa
out
pop
je
mov
sbb
jo
js
aad
mov
lods
cmp
push
daa
scas
call
cmpsb
xchg
shlb
pop
imul
xchg
mov
lea
mov
mov
xchg
aad
in
mov
mov
add
shl
cmp
or
fcoml
rol
push
sbb
repnz
loop
ret
into
jno
icebp
stos
dec
pop
inc
mov
pop
and
sub
fists
mov
stc
cmp
and
mov
outsl
pushf
jbe
mov
xorl
jmp
sub
mov
aaa
mov
push
and
pusha
xchg
cmp
push
sbb
sbb
xor
mov
testb
aas
aas
xchg
inc
filds
lcall
dec
add
lret
bound
cmp
sbb
daa
pop
mov
and
xchg
shr
sti
pop
out
mov
aaa
popf
cmp
mov
inc
pop
orb
test
jo
jl
or
ja
xchg
outsb
mov
mov
mov
cmc
ret
cmp
pop
inc
or
jns
push
out
insl
push
imul
mov
jl
mov
divb
jmp
pop
jnp
jbe
rorl
sahf
shlb
frstor
lods
mov
fstl
out
jge
daa
sbb
cs
inc
shll
cmp
pop
jae
lods
mov
movsl
push
add
outsl
iret
sbb
enter
lcall
pop
outsb
jmp
loop
flds
arpl
cld
jns
xor
adc
mov
sub
inc
call
loopne
and
icebp
sub
jnp
jnp
dec
pop
jbe
push
test
cwtl
ret
sbb
xor
nop
das
inc
outsl
aaa
and
mov
mov
repnz
icebp
dec
jecxz
sbb
jl
jo
xlat
mov
fcom
sub
movsl
mov
sub
iret
mov
int
mov
xor
out
xor
sub
pushf
cmpsl
jl
sbb
js
sarb
xorb
call
jo
aad
std
push
fcompl
mov
cmp
addr16
sub
inc
fs
inc
into
sbb
js
inc
sahf
pop
and
dec
push
inc
rcrb
dec
data16
fdivrl
adc
lock
sbb
mov
fs
cmp
iret
fst
adc
lods
popa
stc
adc
fmul
ds
imulb
cmp
jb
fdivrl
mov
lods
test
jns
cmp
push
fidivrl
fadd
and
jns
cltd
sub
dec
xor
lds
stc
adcb
xchg
mov
fistl
xchg
pop
dec
aas
test
push
xor
mov
inc
cld
cmp
dec
mov
cmp
js
or
fsub
in
shlb
js
es
adc
cld
push
ret
popa
das
jbe
data16
imul
cltd
mov
pop
imul
fcoms
daa
insl
ret
dec
and
xchg
push
and
scas
jl
or
xlat
jo
sbb
adc
hlt
dec
mov
push
ret
arpl
jecxz
dec
push
lock
xor
js
ljmp
loop
inc
xchg
out
sarb
mov
nop
lods
lods
ficoml
in
outsb
addr16
ds
push
jl
std
mov
adc
pop
arpl
mov
nop
jnp
cwtl
in
sbb
call
cmp
mov
or
push
enter
xor
mov
pop
adc
xor
mov
das
test
out
xchg
test
popf
fistl
je
repz
rclb
pop
or
mov
mov
jecxz
xor
ret
mov
xchg
sub
pop
cmp
xor
xor
stc
cmp
mov
sbb
pop
pop
xorl
sub
xchg
jo
lea
hlt
lret
push
lds
scas
jl
inc
pop
adc
or
push
xchg
testl
xor
mov
lods
mov
cld
pop
daa
jge
push
mov
add
jnp
jo
xchg
mov
dec
rclb
js
mov
scas
xchg
jo
sbb
dec
lock
sbb
jmp
push
lods
std
or
dec
movsb
inc
push
jb
xor
add
push
jl
cmp
dec
test
inc
insl
lahf
shl
mov
xor
mov
jo
xor
sbb
call
cmp
insb
mov
jg
adc
inc
mov
add
xchg
dec
out
push
into
sti
pop
jae
fcomps
fiadds
arpl
cmp
and
cld
nop
shl
mov
sbb
adc
clc
inc
std
push
cmp
pop
mov
jno
aad
inc
test
mov
dec
das
xlat
or
arpl
sub
pop
lret
pusha
cmc
push
jnp
adc
pop
fcmovnbe
xor
leave
std
pop
mov
inc
xor
fistpll
add
rdtsc
xor
adc
movsl
mov
jo
sub
xchg
in
ds
inc
les
movsb
es
xchg
adc
push
push
inc
into
pop
jbe
sub
dec
outsb
add
adc
pop
jbe
jl
cmp
sbb
test
and
push
jle
ljmp
push
movsb
insb
movsl
scas
orb
inc
inc
mov
scas
sbb
sahf
xchg
ds
idivl
fidivl
dec
cmpsb
fs
adc
clc
cmp
in
sti
nop
xchg
ds
mov
push
in
push
pop
movsb
jo
mov
fidivrl
jns
into
jne
mov
jp
sbb
dec
adc
xor
push
pop
lcall
and
and
adcl
mov
test
test
inc
push
or
and
inc
adc
xor
shrb
mov
inc
nop
pop
scas
push
push
clc
xchg
sub
jl
mov
dec
xchg
pop
push
sbbb
je
pop
rorl
adc
nop
sarb
and
dec
mov
test
push
fsts
jb
push
flds
in
hlt
add
adc
cmp
dec
orb
mov
xor
xor
stc
inc
call
or
in
or
sub
dec
jo
loopne
gs
adc
loope
ret
shlb
push
stos
mov
mov
jmp
pop
jmp
lods
jo
lret
adc
cmp
sub
mov
cld
cmp
pop
xchg
bound
and
lock
lods
adc
addr16
xchg
fldt
add
imulb
jnp
add
push
ds
test
push
jl
movsl
notb
mov
pop
stos
aam
cmp
leave
aam
jae
pop
sahf
aam
jg
xor
loopne
in
mov
inc
mov
sub
dec
iret
mov
negb
mov
imull
dec
pusha
inc
sbb
or
adc
movsb
dec
mov
xlat
mov
cli
jb
mov
in
ja
sub
push
mov
pop
mov
mov
xor
ret
out
and
daa
inc
xchg
add
inc
cwtl
lret
adc
jge
shl
dec
sub
enter
adc
sbb
xchg
outsl
fcompl
lret
cmp
xor
leave
add
xchg
inc
scas
scas
and
mov
call
call
inc
iret
push
call
push
lods
cmpl
enter
es
shr
data16
ret
mov
dec
aas
in
pop
mov
push
inc
or
adc
cltd
sub
xchg
sbb
and
mov
adc
mov
mov
xor
scas
int3
or
jb
dec
aam
sbb
inc
mov
fisubrl
mov
mov
shrb
mov
out
jbe
sbb
cmp
adc
push
aam
test
inc
pushf
adc
xchg
shlb
mov
dec
push
les
mov
imul
sbb
xor
and
cld
das
pop
rclb
adc
les
scas
mov
jp
aaa
pop
pop
movsb
and
mov
adc
pop
ret
cmp
fists
add
cwtl
add
hlt
xchg
hlt
fadd
rcrb
push
and
scas
orl
adc
mov
push
out
ror
pop
int
xchg
in
pop
adc
xchg
cs
pushf
adc
jne
mov
sub
arpl
pop
outsl
adc
dec
insl
insb
adc
dec
negb
rclb
pop
and
sub
lcall
jle
clc
xchg
add
cmp
push
clc
push
fcoml
mov
int3
mov
cs
lahf
lcall
xor
sbb
imulb
cmp
rol
out
fistl
pop
les
mov
xchg
das
lret
mov
nop
xchg
punpckhwd
adc
jo
adc
xchg
inc
mov
sbb
add
test
push
mov
pop
mov
mov
lods
pop
lret
in
repz
je
cmp
mov
cld
xchg
mov
dec
push
jle
test
loopne
imul
sbb
or
mov
cltd
jnp
iret
jne
aad
push
inc
dec
jnp
pop
shll
iret
loopne
mov
adc
ds
adc
arpl
ret
call
xor
and
pop
fidivrs
ja
out
add
daa
sbb
adc
decl
repnz
popf
lret
fistpl
and
sbb
push
sbb
ret
inc
stos
adc
fbstp
dec
loope
push
and
inc
jecxz
int3
cmp
xor
das
lahf
es
es
xorb
adc
in
lods
sub
xor
jle
in
dec
dec
scas
pop
jmp
add
lods
inc
mov
inc
frstor
sbb
and
xchg
and
or
inc
jl
add
aaa
fstl
lahf
mov
xchg
cwtl
scas
xor
or
sub
cmp
lahf
add
and
and
sub
jp
and
out
jmp
sbb
and
aaa
cmpsl
pop
mov
pusha
or
mov
rcpps
fists
sahf
or
decl
fcoms
sub
outsl
xor
jns
jne
bound
in
cmp
xor
mov
dec
push
scas
mov
or
inc
dec
pop
jae
jb
or
int3
pusha
pop
outsb
jae
add
dec
xchg
fdivs
jmp
scas
unpcklps
fisttpl
lahf
shll
jnp
mov
or
call
lret
test
pusha
xchg
gs
mov
sbb
test
jae
shrb
fwait
jne
scas
ds
jno
cli
push
es
lea
or
movsl
or
jge
pop
stc
sub
nop
nop
pop
movsl
dec
bound
adc
clc
cmpsb
bound
repz
out
arpl
xchg
data16
dec
jmp
jns
or
out
call
scas
sub
xor
xor
xorl
lods
xchg
jg
outsl
add
mov
movsb
scas
les
les
daa
push
cmp
scas
fmul
jnp
mov
ret
es
scas
cmp
mov
fcomps
paddq
xlat
mov
test
and
sbb
cwtl
and
dec
shlb
call
imul
pop
das
repnz
data16
sahf
mov
test
out
je
cmp
je
jo
shrb
push
rcrl
dec
lods
repnz
data16
lock
in
jp
ljmp
cmp
add
das
dec
pop
mov
sbb
nop
dec
fidivl
scas
xlat
pop
fcomps
jg
fistpll
cmc
sbb
test
daa
fdivs
addr16
mov
loope
sahf
push
out
lcall
mov
das
pusha
dec
cwtl
mov
xchg
inc
aaa
xchg
dec
lea
sub
pop
cmpl
cmp
sub
in
pop
mov
jb
popf
jg
mov
les
fwait
sbb
sbb
push
int
push
data16
mov
inc
nop
out
in
pop
mov
shlb
cmp
fwait
cmp
cltd
mov
scas
cmpb
xor
cmc
mov
sbb
push
xor
cmp
jo
popf
cmp
mov
cmp
add
lret
std
les
inc
dec
xor
les
mov
in
cmp
std
mov
pop
mov
mov
xor
cltd
insl
or
jmp
lea
jb
mov
add
xchg
adc
fisttps
add
adc
xor
lret
sbb
mov
adc
jmp
test
pop
movsl
sbb
adc
stc
push
fisubl
rorb
repnz
mov
and
es
pop
sahf
cmp
jecxz
outsb
push
push
xchg
fs
out
fldcw
inc
stos
pop
sbb
adc
and
dec
add
pusha
pop
mov
xchg
jle
xchg
cltd
sub
lcall
cmc
testb
aaa
sbb
into
mov
inc
dec
stc
sub
ds
jae
dec
jg
mov
dec
loopne
xor
jl
sahf
in
push
fsubl
sbb
fcompl
fdivrl
jle
in
fdivrl
sbb
xchg
pop
call
mov
lcall
adc
lock
dec
xchg
pop
push
sbb
sub
jno
xor
jo
xchg
iret
daa
adc
insl
popl
sub
dec
cmp
clc
dec
add
or
stc
mov
stos
hlt
daa
jle
sub
jl
mov
sub
and
mov
loopne
roll
fsts
js
cvtdq2ps
mov
cmc
dec
push
addr16
xor
lahf
cmp
mov
addl
ffreep
rclb
enter
xchg
mov
cmp
sahf
sub
arpl
push
pop
cmp
ds
leave
out
push
pop
xor
stos
test
mov
or
hlt
lods
jmp
subb
mov
push
pop
test
jmp
ret
movsb
pop
mov
lahf
push
jl
roll
inc
pop
jle
inc
add
cs
cltd
repnz
mov
arpl
rclb
loopne
jns
add
pusha
pop
movsl
xchg
rclb
shrb
cmpl
push
outsl
icebp
cmp
out
xchg
std
or
jo
mov
xlat
nop
or
add
mov
sub
fadd
fldt
mov
inc
jae
clc
xor
push
adc
jnp
adcb
jmp
rorl
sbb
movsb
dec
in
in
xchg
rcll
jle
pop
lods
lea
ret
call
dec
xlat
sbb
cld
xchg
js
pop
nop
pop
push
jl
sbb
lea
and
shll
sarl
jnp
in
repnz
sbb
mov
sub
inc
das
in
cmp
cwtl
push
pop
mov
and
mov
mov
inc
js
shll
in
xor
ret
dec
pop
inc
cmp
mov
lds
mov
jmp
mov
cmp
clc
into
dec
gs
push
jg
xchg
and
iret
rcl
es
scas
lods
xchg
inc
lahf
push
nop
pop
xor
jns
xchg
dec
jle
movsb
push
insl
dec
repz
lret
aam
cmp
push
popa
add
lret
lods
and
pop
test
xor
fs
std
sbb
in
pop
leave
sbb
shrl
mov
jns
scas
sahf
or
pop
jae
xor
mov
mov
jnp
int3
test
es
jl
mov
adc
push
sub
test
pusha
sub
jns
xor
xchg
sbb
aaa
sub
loop
test
enter
lods
bound
pop
add
rorl
fisttpl
sahf
jl
test
rol
int
sbb
adc
pop
call
sub
fucomi
cmp
xor
xlat
push
xor
test
cmp
bound
mov
and
into
fwait
pop
push
inc
ja
out
test
aaa
add
dec
and
cmp
cmp
out
push
in
mov
addl
cmp
mov
lea
push
bound
imul
bound
out
mov
lahf
test
sub
in
popa
std
sub
xor
in
data16
mov
addb
mov
jecxz
pop
xchg
repz
fstl
rcl
lcall
mov
imul
adc
and
adc
fadds
jle
pop
fmul
cmpsb
mov
and
repz
jne
sbb
orb
xchg
mulb
mov
pop
aas
ret
gs
jns
idivl
jae
shlb
mov
push
and
adc
iret
shlb
cwtl
loope
scas
loopne
aaa
fst
mov
fdivl
cmp
loopne
inc
mov
test
and
cld
repnz
sti
jl
mov
pushl
jmp
mov
xchg
mov
sahf
aas
ret
pop
jge
ja
cmp
in
mov
stos
rorb
sub
iret
lods
mov
imul
sub
imul
loope
cmc
enter
imul
push
sbb
adc
icebp
cmp
adc
xor
jecxz
aam
push
sub
and
mov
adcb
test
popl
mov
sti
xchg
stos
xchg
fmuls
mov
inc
push
lcall
fldt
insl
das
mov
test
add
mov
push
mov
adc
jmp
sbb
cmp
jmp
or
lods
mov
sti
adcb
lods
loop
fstpt
mov
jo
movsb
add
xchg
adc
shll
push
faddl
shlb
add
rclb
xchg
fld1
mov
adc
push
or
cmovo
into
inc
in
cmp
movsb
dec
movsb
jo
mov
jmp
or
inc
push
fs
addr16
fwait
pop
push
fstp
adc
fsts
fnstsw
pop
xor
das
shlb
daa
xchg
push
mov
rolb
jl
rcr
pop
jge
stos
sbb
out
out
xrelease
push
sub
cmp
jle
dec
cmp
rcrl
test
cmp
xor
scas
push
pop
in
incl
pop
dec
cmpsb
iret
ljmp
cmp
jne
icebp
fsubl
cmpl
ss
adc
inc
jl
lahf
fs
loop
mov
not
adc
movsl
sbb
sub
shll
insl
paddd
enter
jmp
and
pop
mov
subb
in
fidivl
mov
fists
sbb
or
mov
push
jmp
inc
mov
mov
pushf
dec
sub
cmc
out
cmp
or
ret
leave
or
xchg
lea
test
jb
pop
jge
inc
rorl
push
out
xor
push
xor
lahf
aaa
mov
cwtl
inc
inc
nop
ss
xchg
arpl
xchg
jl
mov
adc
ret
xor
das
call
je
inc
fisubrl
xchg
mov
aam
mov
mov
xchg
cld
jae
outsl
dec
xchg
sub
fcmovb
mov
pop
in
mov
xchg
inc
and
mov
fucomi
xchg
ss
xchg
pop
ror
pop
fsubrs
hlt
inc
sbb
xchg
and
aam
mov
pushf
and
and
sub
out
jmp
mov
mov
ret
lods
sbb
pop
sub
push
xor
loopne
fldcw
xchg
test
xor
incl
pop
cmp
flds
in
into
pusha
ret
scas
sbb
mov
ret
mov
ficomps
inc
cmp
mov
pop
pop
adc
xor
sub
dec
push
shl
jg
pushf
push
sbb
addr16
push
pop
sbb
cmp
lods
dec
cmc
rcll
lds
incb
lds
xor
mov
push
push
mov
lock
mov
fwait
jnp
rcll
sarl
adc
mov
nop
pusha
jg
pushf
sbb
fidivs
iret
mov
pop
sub
add
rep
mov
xchg
inc
ja
ret
ljmp
in
dec
xchg
xor
outsl
pop
adc
sahf
sarb
cmp
lea
and
sub
xchg
shr
xchg
lcall
cmpsb
jo
inc
add
jge
and
out
ja
jg
mov
lea
push
int
or
popf
cmc
jbe
jb
inc
in
sbb
lods
into
rcrb
xchg
and
cmp
and
pop
adc
sub
or
popf
sub
pushf
inc
lea
sbb
mov
push
imul
inc
sbb
xor
jge
bound
ficoms
aaa
mov
cmc
push
and
fucomi
mov
cmp
xor
aas
cmpsw
nop
jae
adc
sbb
or
ret
mov
repnz
leave
iret
es
inc
popa
lcall
dec
mov
lods
shlb
js
and
jne
repnz
push
sti
push
and
add
insl
inc
pop
shrb
adc
fsubrs
adc
mov
dec
and
in
dec
leave
push
shlb
xchg
mov
inc
sub
insl
or
adc
shrl
jnp
xor
xchg
jl
call
push
movsb
mov
push
xchg
pop
adc
mov
inc
and
js
mov
add
cmp
mov
ss
mov
sbb
cmp
shlb
insl
ret
inc
mov
ja
arpl
mov
nop
mov
dec
fisttps
in
lahf
mov
in
in
loopne
xchg
add
cmp
adc
iret
testl
mov
int
stc
and
rorl
divb
in
rcl
mov
fisubl
dec
fiaddl
push
or
or
mov
int3
fimuls
jo
data16
jecxz
inc
stc
and
jae
mov
clc
mov
das
jne
dec
fsts
scas
jg
ret
jnp
pop
mov
pop
push
sub
daa
lahf
bound
stc
and
test
mov
imul
ret
into
lahf
pushw
and
repnz
lock
jo
dec
add
lret
lods
pop
adc
jo
mov
nop
push
in
cmpsb
stos
int3
xor
mov
int3
push
pop
add
mov
jle
mov
sub
jmp
std
and
inc
sbb
or
or
sbb
sbb
popa
dec
push
pop
xor
icebp
jecxz
inc
add
arpl
mov
inc
daa
mov
mov
icebp
jle
test
dec
adc
jae
sub
push
jp
push
rol
je
or
lds
add
pop
mov
mov
pop
and
xorb
into
jmp
jbe
outsb
add
jne
pop
sbb
test
repz
mov
mov
dec
lahf
jo
lods
xor
bound
mov
mov
dec
and
xlat
test
arpl
adc
adcl
dec
sbb
mov
pop
dec
jb
jo
lret
stos
insl
jno
dec
fcom
insl
call
in
testb
ror
daa
xor
adc
pop
insl
jno
and
add
int3
movsb
mov
and
not
call
push
in
mov
push
sarb
rol
aam
insl
xor
xor
cmp
push
dec
cmp
repz
mov
shrb
xlat
and
push
jo
push
inc
fldcw
pop
mov
jle
cltd
xchg
or
adc
inc
dec
std
scas
addr16
jae
dec
pop
fiaddl
xor
sbb
cmp
mov
add
and
lret
lods
dec
pop
pop
movsb
xor
and
clc
popa
fldcw
stos
mov
pusha
cs
ljmp
push
inc
arpl
rclb
js
outsb
dec
sbbl
ret
pop
jg
push
mov
fnop
cs
jb
add
outsb
aad
hlt
das
orb
loop
lret
mov
dec
subb
sbb
mov
or
jno
sub
jmp
out
rcrb
jo
push
repz
stc
outsb
push
push
cmp
cmp
dec
sub
push
mov
push
int3
xor
sub
lock
xchg
test
ljmp
jle
in
cmp
dec
lahf
push
scas
adc
fwait
aas
inc
lret
cmp
mov
pop
fcmovnu
outsb
cld
and
cs
sbb
jmp
cld
ds
pop
cmp
pop
and
sbb
pop
iret
mov
xor
out
rcrl
push
cmp
xchg
and
mov
sarl
pushf
sahf
sbb
adcl
test
std
and
test
or
mov
push
shlb
lret
cmp
and
xchg
push
fmuls
jecxz
cmp
pop
sbb
jns
lods
movsl
dec
in
cwtl
je
je
and
adc
adc
jge
mov
and
push
shrb
jns
push
jae
push
pop
fimuls
mov
push
lcall
into
insl
pop
mov
xchg
or
arpl
xor
nopl
sbb
sbb
cmp
jp
mov
push
repnz
mov
cmp
mov
cmp
sbb
sbb
rdtsc
test
push
imul
repnz
sbb
mov
into
pop
and
lds
pop
rorb
dec
xor
and
sbb
xlat
dec
push
ljmp
xor
mov
push
mov
xlat
out
jnp
inc
out
ret
push
data16
addb
add
jno
mul
insb
lock
push
inc
das
inc
outsl
sbb
dec
push
pop
cmpsb
lret
mov
rcll
inc
scas
adc
mov
push
ret
inc
xor
loopne
sub
inc
ja
or
sub
jmp
movsl
iret
jecxz
stos
outsl
rclb
dec
sbb
push
mov
cmp
sbb
sbb
inc
daa
xor
cli
es
pop
loopne
lret
fmuls
mov
shlb
or
adc
push
jecxz
fsubrs
pop
sub
mov
ror
xchg
inc
test
iret
sub
out
adc
pop
add
daa
pushf
dec
and
cmp
cmp
lcall
pusha
and
pxor
xor
mov
lret
or
or
shr
out
ja
out
mov
mov
in
push
mov
xor
ja
fdivrl
inc
or
lods
sbb
test
jle
std
rclb
test
mov
cmp
mov
inc
test
xchg
sub
jecxz
cmp
pop
je
mov
push
jnp
sbbl
ss
call
sbb
or
xor
cmp
jge
loopne
leave
cmp
sbb
loope
cmp
push
pop
cmp
pop
or
add
das
xor
add
sarl
push
movsb
mov
call
lea
je
or
incb
imul
in
add
mov
mov
jge
enter
adc
sahf
xor
mov
in
adc
outsl
sbb
push
pop
sub
sub
adc
shrl
test
clc
fcompl
ja
clc
xorb
les
xor
dec
in
mov
sub
es
mov
pop
outsl
daa
lock
cli
int3
xor
or
xor
dec
mov
push
mov
js
je
cld
gs
mov
cmpb
rclb
mov
jecxz
test
push
or
scas
xor
std
dec
lods
fwait
imul
lcall
pop
repz
mov
popa
outsb
mov
std
rcr
mov
adc
xor
shl
sti
enter
push
insl
push
mov
test
in
or
mov
movsl
pop
shlb
rcr
adc
or
lock
cs
mov
xabort
dec
add
adc
leave
icebp
repz
sbb
out
nop
orb
jmp
push
push
ja
mov
out
into
stc
es
jno
inc
jne
ficoml
mov
dec
jl
xlat
loop
outsl
or
bound
push
out
ficoms
int
mov
mov
ljmp
dec
or
int3
mov
cmc
pop
repnz
data16
or
sarb
and
mov
aaa
adc
aam
mov
lods
imul
mov
mov
jne
ret
jo
lods
std
or
and
sbb
mov
nop
mov
cs
mov
jns
mov
push
mov
dec
movsb
stos
sbb
icebp
pushf
ret
daa
cmp
popf
mov
xchg
inc
testb
push
mov
in
cmp
jno
dec
lcall
lods
cmp
jecxz
inc
mov
aas
lret
out
xor
xlat
outsl
xlat
and
dec
xor
in
lret
add
ja
call
insl
mov
lcall
popf
cld
jae
iret
add
jle
or
loopne
pop
outsl
jb
mov
scas
out
jbe
mov
or
fld1
cmp
mov
inc
daa
push
inc
adc
cmp
int
fsubp
xor
cmp
or
sbb
and
lods
in
movsl
into
icebp
ret
loopne
mov
dec
jae
push
inc
fimuls
sbb
sbb
mov
mov
popf
dec
test
add
cli
cmp
push
jb
push
inc
and
xor
push
cmpb
mov
inc
lock
mov
rcr
xor
xchg
leave
sub
mov
mov
cmp
mov
adc
lahf
sub
and
push
cmpsb
scas
movsb
mov
lods
test
sub
scas
mov
notl
inc
jmp
pusha
das
inc
lret
mov
adc
sub
in
shlb
lods
dec
mov
std
add
scas
repnz
arpl
fsubrl
lock
outsb
pop
jmp
xchg
adc
xor
daa
in
jecxz
xchg
dec
push
popf
pop
push
push
xchg
inc
cmpsl
push
jbe
test
add
call
mov
inc
push
jmp
mov
bound
jl
pushf
int
xor
loopne
aas
inc
nop
js
push
shlb
in
adc
mov
bound
cmp
mov
lds
xchg
stos
jae
xor
rcrl
push
dec
and
std
and
adc
adc
mov
xor
fstl
repnz
mov
aad
sub
add
nop
lahf
fwait
data16
adc
cmp
shlb
mov
roll
add
cwtl
bound
jecxz
push
enter
lock
pop
daa
or
xor
xchg
fcoml
jl
sub
xor
and
sub
sub
cmp
inc
xchg
ret
sub
pop
mov
es
pop
rcr
xchg
xor
push
mov
iret
test
dec
out
dec
push
imul
jae
pusha
bound
filds
or
cmp
push
mov
xchg
call
mov
mov
adc
testl
and
add
mov
or
or
jb
fidivs
imul
push
jecxz
jbe
adc
int3
fistpll
xchg
lret
mov
or
rcrb
in
mov
adc
mov
xor
lods
stos
adcb
inc
mov
pop
sub
fldenv
call
mov
in
xchg
ret
in
or
mov
dec
popf
addr16
add
in
cmp
mov
nop
mov
adc
aad
in
es
cmp
pop
push
mov
mov
push
popa
jle
je
xchg
data16
adc
xchg
xchg
movsl
add
jns
mov
jle
cmc
ljmp
inc
int
imulb
mov
mov
mov
pop
pusha
sar
lret
lods
repnz
int3
push
incb
pop
shrl
loope
stc
shll
xchg
out
loope
ret
addb
in
pop
out
sbb
out
adc
mov
jne
or
jp
adc
in
sarl
cltd
leave
sub
cmp
loop
adc
push
jl
testl
jb
pop
fdivrl
imul
mov
dec
mov
xchg
sarb
mov
lret
adc
mov
adc
enter
add
sti
lret
and
stos
jge
inc
daa
andb
cmp
das
and
or
pop
cmp
ror
push
jae
mov
adc
mov
sub
cs
insl
into
dec
insb
push
jbe
sbb
inc
rcr
dec
hlt
ret
pop
push
cmp
mov
movsb
add
das
pop
push
iret
adc
out
aaa
add
xor
rorb
out
iret
insl
scas
jmp
gs
fisubrl
cmp
aaa
insl
push
inc
cmpsb
es
mov
xor
mov
and
lret
out
or
pop
xor
mov
or
inc
movsb
les
pop
leave
cmp
pop
sub
jbe
lods
mov
cwtl
pop
mov
test
insb
enter
cmp
call
and
fdivrs
jo
movsb
cli
int3
jae
call
lret
ret
out
scas
adc
xchg
faddl
in
in
test
and
lcall
pcmpeqd
stc
mov
pop
xor
dec
lea
xchg
pop
lahf
cs
lcall
inc
or
pop
xchg
cmp
cmp
insl
cmp
xor
cld
aad
or
addr16
outsb
pop
jle
js
mov
or
enter
mov
adc
leave
sbb
cwtl
movsb
test
mov
aas
dec
mov
lock
inc
jae
ljmp
pop
xchg
scas
popf
iret
mov
cs
repz
cmp
xchg
lret
mov
aas
jmp
mov
ds
xchg
pop
outsb
nop
jnp
movsb
cmp
andb
test
jnp
push
in
dec
or
mov
xchg
out
xchg
jnp
xchg
push
push
push
or
xor
pop
in
in
daa
test
pop
out
xor
mov
push
or
movb
mov
out
xchg
dec
std
daa
cwtl
adc
fdivp
enter
sbb
loopne
jo
mov
xor
cmp
aad
je
call
dec
cmpsl
inc
push
hlt
cmp
mov
or
enter
arpl
cmp
scas
xchg
addr16
mov
fadd
nop
mov
sub
cltd
jge
push
out
dec
aaa
sbb
pushf
lahf
mov
loopne
sbb
dec
push
ret
pusha
fcmovbe
mov
stos
int
fldenv
xchg
fnstsw
inc
je
imull
cld
mov
add
and
dec
inc
mov
loopne
xchg
out
pop
fadd
jo
adc
cld
cmpsl
cmp
sbb
loopne
data16
call
cmp
jecxz
jo
rcll
cmp
incb
subl
adc
push
frstor
sahf
xor
aas
scas
in
setp
mov
xor
sub
cld
xchg
and
add
test
push
scas
and
scas
jbe
movsb
xchg
mov
adc
filds
call
notl
xor
iret
out
mov
scas
pop
fwait
mov
sarb
mov
jle
cmc
push
pop
lods
push
mov
cmp
and
das
cmp
adc
sub
mov
and
loopne
pushf
sbb
aam
out
pop
mov
out
xchg
mov
xchg
aaa
daa
cmp
adc
shrb
rclb
and
xrelease
pop
test
jno
ret
or
lcall
fbstp
pop
cmp
scas
xor
imul
test
repz
scas
xchg
add
pop
sub
out
loopne
test
into
loopne
fdivs
testl
adc
and
rcll
sbb
cld
add
idivl
mov
inc
mov
sbb
subb
enter
testl
fwait
inc
lcall
lahf
scas
lock
rep
push
cmpl
adc
fsubrs
adc
in
adc
pop
push
xchg
in
clc
dec
sarl
adc
sti
mov
out
jecxz
call
sub
or
insl
rcrb
out
push
bound
fstpt
push
pop
aaa
mov
sbb
mov
pushf
inc
shrb
lea
cmp
cmc
mov
mov
imul
jne
daa
and
iret
stos
mov
roll
mov
xchg
dec
sahf
js
sahf
or
inc
call
in
pop
cmp
js
bound
cmpsb
jge
push
iret
sub
insl
fidivs
mov
xchg
push
das
pusha
xor
jmp
pop
mov
fs
inc
xor
ds
sub
jl
aaa
sahf
cmp
xor
shl
push
and
sub
scas
sbb
sbb
mov
xor
aaa
mov
lock
cli
adc
test
add
push
and
sbb
sub
jo
or
and
mov
ret
mov
jo
or
shlb
imull
dec
mov
out
mov
repnz
js
daa
shlb
int3
sbb
cmp
fs
inc
fdivrs
les
aam
inc
sub
test
cmp
mov
hlt
loop
mov
shlb
rol
gs
push
test
sub
push
lahf
and
adc
mov
sub
out
sub
xorb
or
inc
xchg
or
sub
repnz
add
or
rcl
xor
out
xorb
adc
jae
and
xor
out
sub
mov
popa
or
mov
jns
das
scas
fldt
popa
sbb
fwait
mov
sbb
mov
call
shlb
sarb
dec
cmp
daa
outsb
xchg
mov
in
jo
xchg
push
out
pusha
dec
mov
xorb
mov
aad
or
mov
imul
call
das
stc
sub
sub
jbe
adc
test
ja
push
sbb
ds
adcb
adc
mov
es
pop
in
imul
rcrb
push
sbb
or
dec
es
mov
xchg
mov
sub
mov
pushf
pop
adc
in
jecxz
pop
dec
ss
jecxz
push
mov
repz
nop
fidivrl
dec
ss
aas
cli
pop
or
or
aaa
pusha
mov
add
int
jmp
fdivrl
lret
cmp
sbb
aaa
jnp
or
shr
pusha
pop
lods
or
daa
sbb
jbe
adc
ret
aad
ret
sbb
movl
scas
xor
xchg
jg
xchg
movsb
cmp
out
popf
sbb
sbb
pop
stc
shll
incb
call
push
adc
mov
aas
in
add
and
dec
ljmp
sbb
push
in
push
mov
pop
sbb
fistpll
iret
shll
repz
and
xchg
mov
dec
push
shlb
dec
pop
in
adc
movsb
scas
das
and
aaa
xchg
jne
xor
std
adc
test
lea
das
push
pop
nop
xor
lret
sbb
into
xor
sbb
ret
pop
xlat
scas
out
imul
mov
test
xchg
add
inc
push
push
add
std
push
pop
lods
mov
leave
scas
and
pop
lods
jg
mov
in
push
movsl
lods
add
test
sar
sbb
lahf
jg
call
sarb
cmpps
cmp
push
xlat
mov
enter
ret
cld
pop
pop
filds
push
js
ret
xlat
lods
push
out
sbb
mov
shlb
pop
add
xchg
or
ret
cmp
jmp
int3
add
dec
repnz
data16
inc
mov
mov
sahf
and
rcrb
bound
pop
popl
and
dec
out
cmp
pop
in
and
cwtl
cmp
pushl
lret
out
pop
int3
rcl
mov
call
xor
loope
mov
nop
mov
jae
sbb
mov
mov
ss
dec
dec
push
sbb
in
pusha
mov
das
insl
test
mov
pop
add
call
pop
loope
add
xlat
xchg
mov
es
daa
jo
jmp
popf
popf
push
das
in
and
jmp
mov
arpl
sbb
lcall
test
and
and
inc
imul
mov
mov
cli
pop
gs
out
add
daa
loope
sbb
lahf
into
sub
mov
loop
test
and
adc
ror
daa
aad
xchg
sahf
into
jne
bound
pop
in
xor
test
ss
cmpsl
mov
and
outsl
dec
cwtl
add
inc
cwtl
lcall
stos
les
fnstsw
xor
lret
fnstsw
je
inc
sub
scas
repz
or
in
pop
ftst
cmp
mov
adc
xor
add
sub
xor
mov
xchg
repz
sub
dec
sbb
mov
pushf
shll
and
mov
iret
aas
lods
addr16
fbld
mov
cmp
adc
scas
add
xchg
add
sbb
push
movsb
ret
idivl
mov
ss
iret
lret
sti
jbe
pusha
cmpsl
ljmp
sbb
push
jns
pop
mov
xor
inc
enter
jp
outsl
iret
push
cmp
lods
mov
xor
insl
gs
jns
mov
push
mov
mov
add
sub
mov
sbb
rcrb
lcall
mov
jecxz
sub
frstor
ss
cs
cwtl
stos
aam
daa
mov
xchg
adc
shrb
das
push
sbb
mov
adc
cmp
push
test
rol
push
cmpb
xchg
mov
movsb
ds
incl
in
or
adc
and
ret
aam
stc
fnstcw
xchg
cmp
xchg
leave
call
jecxz
sbb
cmp
roll
addr16
aam
mov
andps
das
clc
mov
jecxz
xchg
inc
mov
aaa
push
in
test
jl
dec
xchg
cmp
dec
stos
bound
xor
sbb
xorb
ss
inc
sti
push
pop
push
shrb
and
mov
data16
mov
xchg
pop
cmp
getsec
daa
sarb
xor
xor
scas
cwtl
xchg
lods
call
dec
and
push
mov
jmp
xchg
xchg
lods
mov
out
add
insl
and
push
xor
enter
inc
in
adc
xchg
mov
jo
sbb
pop
es
aam
ficomps
xor
mov
out
or
push
jp
xor
paddq
sahf
fnstcw
adc
push
push
pop
rclb
sbb
repz
mov
xchg
int
jl
sbb
cmp
mov
xchg
pop
addr16
aas
pop
stos
es
and
dec
fadd
adc
dec
fstpl
sbb
mov
adc
sub
sbb
out
xor
repnz
ret
pop
lods
jp
pop
and
xor
movsl
and
dec
mov
addr16
daa
stos
mov
mov
enter
lock
mov
add
push
iret
sub
xlat
pop
cltd
test
bndldx
mov
mull
aaa
imul
lea
ds
add
pop
fcoms
push
dec
xor
mov
cs
mov
test
rolb
out
xor
pushf
add
cmp
test
andb
ret
mov
sbbl
jl
jnp
shlb
adc
push
cltd
es
imul
fstps
dec
loopne
stos
subb
and
loopne
nop
inc
js
icebp
pop
cmp
adc
jmp
xchg
cltd
mov
xchg
add
mov
adc
aas
or
in
sub
sahf
mov
aam
rolb
mov
scas
pop
pushf
lods
dec
aaa
clc
cmpsl
sbb
imul
push
cmpsb
faddp
sbb
es
mov
das
pop
lds
ret
xor
shl
test
inc
sbb
fadds
inc
fsubl
pop
out
test
jl
dec
sarb
xchg
xor
lock
inc
adc
jmp
scas
bound
inc
rcrb
sub
scas
pop
addb
pop
aad
ss
add
int3
insb
or
fcoms
enter
push
mov
jmp
sub
xor
push
sbb
int3
jne
test
lods
pop
push
sub
sbb
push
xchg
jle
add
xchg
jg
adc
pop
pop
addb
add
push
sbb
pop
xchg
arpl
dec
lock
xor
ret
jmp
aad
dec
and
lea
cmpsb
mov
mov
rclb
pop
hlt
jg
in
es
push
push
push
ret
mov
ss
es
pop
cmp
ljmp
push
outsb
adc
stc
imul
inc
loop
fstp
dec
test
out
insb
push
int
sarb
fists
push
test
rorl
sti
jb
int3
leave
aam
cmp
fsubrl
mov
jmp
jmp
hlt
push
std
cmp
add
mov
dec
jg
and
and
cmpsb
js
jns
sbb
rolb
cmp
sbb
test
adc
mov
push
adc
adc
inc
fisttpll
cld
lods
jae
or
cli
pop
aas
jcxz
arpl
mov
adc
rclb
sbb
ljmp
cmp
movsb
sbb
pop
mov
xchg
test
enter
sub
pop
ret
cmp
pop
mov
xor
push
movsb
or
xchg
test
rcl
mov
lock
insl
fistpll
jecxz
pop
xchg
ffree
xor
or
inc
add
jae
or
jp
cmp
jmp
insl
data16
pushf
repnz
or
hlt
mov
call
enter
das
cmpsb
ret
int
sub
pop
add
addr16
scas
mov
sar
push
pop
in
push
mov
inc
ds
xchg
into
rolb
and
out
xor
pop
xchg
hlt
adc
or
mov
xor
mov
mov
rol
add
mov
add
cs
sbb
sbb
push
pop
lds
xor
adc
shrb
nop
xchg
ds
adc
push
pop
xchg
dec
mov
mov
mov
add
xchg
pop
test
bound
arpl
das
pop
aad
fcoms
sub
and
call
lods
ret
pusha
shlb
pop
popf
jmp
pop
call
inc
adc
les
xor
and
bound
mov
ds
addr16
and
fisttpl
adc
inc
fisubs
xchg
mov
mov
xchg
push
aad
xchg
sub
dec
add
ss
fdivrs
aam
sub
jo
popf
jmp
idivb
inc
push
ret
mov
fists
push
push
push
sbb
jmp
dec
jl
call
mov
test
mov
sahf
push
push
cmpsl
adc
mov
mov
into
mov
test
int
jecxz
add
xchg
and
sbb
sub
mov
lods
sbb
aam
sbb
push
mov
mov
loopne
dec
push
mov
jle
sub
adc
lods
fisttps
leave
outsb
fstpl
cltd
adcb
sbb
das
ds
adc
push
sarb
les
rclb
mov
clc
adc
pop
cs
int
jecxz
or
xor
shlb
mov
xlat
or
outsb
dec
ret
mov
pop
fnstsw
or
sub
movsl
sbb
fcmovnb
cwtl
pop
leave
push
push
xchg
movsl
sahf
test
out
lds
pop
lahf
adc
mov
dec
insl
mov
sub
and
inc
arpl
das
mov
jg
addb
push
orl
and
arpl
mov
inc
inc
into
push
pop
adc
icebp
cmp
sub
sub
or
push
mov
out
push
aas
stc
je
cwtl
fldenv
lahf
xchg
sbb
mov
movsl
xrelease
out
dec
add
mov
es
orb
inc
adc
inc
les
jnp
ss
adc
adc
aas
scas
and
je
call
adc
add
sar
dec
insl
push
lahf
mov
shrb
imul
inc
jnp,pn
mov
lea
or
adc
xor
pop
fs
cmp
jmp
js
loope
daa
xchg
jnp
icebp
ficomps
in
push
and
sbb
rcll
mov
loopne
imul
or
mov
and
sti
xchg
mov
xor
fisubl
push
je
ret
lcall
int3
jecxz
and
daa
int3
xchg
insl
sub
mov
fisubs
push
cmp
lods
aas
sahf
cmp
ds
mov
dec
sahf
lret
fnstsw
mov
xchg
aas
mov
sbb
popa
fisubrs
sahf
cmc
cmp
sbbb
jl
adc
scas
negl
jge
fucomip
movsb
repz
fwait
loopne
fcmovb
push
jmp
je
stos
in
test
adc
ffreep
lods
or
jg
fiadds
int
or
mov
push
fcmovnbe
add
loopne
fdivs
fwait
push
sti
enter
popa
test
mov
pop
sub
test
jp
and
mov
pop
mov
aaa
fisttpl
sbb
mov
push
je
call
js
pop
jl
fmul
rcll
ja
mov
xchg
jecxz
jle
outsl
test
dec
push
fildll
cs
js
pushf
or
int
adc
das
or
lcall
fcomps
das
add
mov
and
sub
ret
or
iret
dec
jo
call
mov
fmull
insl
jb
aas
or
test
mov
outsl
es
sarb
shlb
les
cmpsl
fs
pop
les
popf
pop
dec
js
push
fistl
dec
push
push
sahf
enter
jp
jl
jo
add
pop
jmp
pusha
in
pop
loopne
subb
and
jo
mov
in
sub
dec
daa
sbb
rorb
fdivs
loopne
into
stos
xchg
ljmp
mov
mov
or
ret
add
pushf
mov
sub
and
cwtl
mov
nop
and
xchg
push
enter
mov
hlt
enter
dec
or
xchg
adc
shlb
ret
adc
movsb
aam
imul
push
mov
fdivr
ss
cs
cwtl
test
cmpsl
xor
int3
ret
dec
into
lock
out
hlt
jo
lods
and
fbstp
pop
pop
das
mov
lahf
cmp
call
ret
xor
cmc
cmpsb
fdivrl
into
sahf
and
repz
xchg
pop
mov
mov
jecxz
out
je
fwait
and
inc
int3
fmuls
out
out
xor
xchg
inc
sbb
fwait
std
fdivrl
scas
mov
int3
jnp
popf
insl
scas
dec
bound
lock
aam
call
adc
fnstenv
cltd
cmp
iret
add
stos
cmp
lea
pushf
lds
std
xor
push
scas
daa
ret
pushf
and
mov
lods
mov
jbe
fdivr
pop
xchg
fwait
sub
imul
hlt
add
cmp
jo
pop
jne
dec
and
lods
pusha
dec
push
repz
shrb
xlat
iret
jmp
push
fld
jecxz
test
das
adc
inc
jecxz
jecxz,pn
pop
jg
inc
and
cmp
popf
sub
jae
loopne
cmpl
lret
xlat
jo
out
pushf
dec
mov
insl
test
adc
mov
das
out
pop
out
pusha
int
add
push
add
mov
xchg
xchg
cmp
push
xor
mov
shlb
xchg
jl
std
test
rclb
loopne
je
lock
dec
div
xchg
push
outsl
mov
aas
nop
xchg
add
sbb
movsb
cmove
fsubs
outsl
cmp
pop
or
rcrb
repnz
cmp
sti
in
push
fwait
outsl
cli
in
pop
movsl
into
test
pop
adc
add
ud1
int
mov
nop
xor
mov
fwait
pop
pop
mov
rolb
or
aas
xor
and
and
and
shrl
loopne
cmp
outsl
aam
leave
sbb
les
scas
insb
push
inc
popa
mov
push
incl
and
mov
jmp
or
call
cli
lods
adc
iret
lods
or
and
int3
jl
mov
ljmp
outsb
mov
insl
push
es
and
lret
xchg
movsb
pop
loopne
dec
in
dec
or
xchg
jo
in
sbbb
ret
iret
aam
sub
jge
and
cmpsl
jl
fwait
xor
scas
data16
push
int3
in
pop
cwtl
filds
mov
test
adc
movsl
inc
movsl
cltd
sahf
imulb
xchg
in
xor
cltd
sahf
mov
insl
insl
hlt
ja
call
das
and
inc
or
stos
mov
lods
lret
and
sbb
std
ficomps
int3
or
psrld
adc
pushf
mov
test
mov
popa
out
xchg
into
lea
sahf
arpl
adc
lock
push
std
xor
mov
jmp
push
lret
pushf
mov
clc
in
inc
mov
lods
daa
sbb
sub
jecxz
and
insl
int3
mov
adc
push
lock
and
push
int3
push
idivb
cmp
cmp
rcrb
mov
dec
sbb
into
enter
int3
rcrb
jge
jl
test
jne
mov
lods
push
cmovge
out
roll
add
adc
je
mov
push
mov
jp
dec
sub
pop
aam
shl
lds
or
dec
add
scas
push
pop
cmp
xor
pop
cmp
push
dec
xor
in
ja
cmp
iret
into
mov
sbb
mov
jno
add
out
and
das
and
aaa
clc
mov
mov
push
xchg
xchg
sbb
fistpll
cmc
es
andb
and
lcall
leave
pop
addr16
or
lods
and
bound
test
inc
dec
xchg
and
sbb
fs
push
out
fwait
jl
into
xor
ss
cs
ss
sbb
sub
and
push
dec
loopne
fisttps
mov
mov
xor
mov
adc
addb
aad
int3
es
pop
xorb
xor
imul
rorb
and
fisubrs
pop
stos
lods
scas
movsl
jmp
adc
push
je
pop
test
xor
pop
pop
in
in
repnz
cmp
mov
dec
test
jle
cmp
and
fsubrs
mov
sub
shrb
xchg
bound
dec
cmp
push
outsl
test
push
out
shlb
repnz
xchg
xlat
add
inc
cmp
dec
mov
cmp
inc
mov
hlt
lods
jo
xchg
mov
rcrb
addb
imul
pop
in
dec
enter
outsl
push
leave
cmp
out
fsubrs
mov
insl
femms
cmp
cs
mov
into
movsl
xchg
sub
shll
mov
mov
xor
sub
cwtl
lods
out
ds
lcall
sbb
arpl
in
pop
scas
arpl
cs
push
jl
mov
lods
iret
pop
ds
jno
inc
das
dec
or
sub
lock
mov
pop
or
cltd
sub
lds
mov
fs
sub
das
and
dec
ljmp
adc
fs
sub
mov
cld
and
or
push
ret
add
lcall
sti
mov
xchg
les
ret
test
mov
les
movsl
scas
mov
inc
arpl
mov
shlb
push
imul
int3
xchg
mov
fcompl
fsubrl
clc
insl
sub
lods
jmp
jno
ja
test
sbb
stc
das
mov
sti
rcr
in
xchg
lcall
inc
in
and
xchg
xor
nop
adc
bnd
push
shlb
inc
or
jg
in
or
fcomp
sub
pop
rcll
icebp
add
out
push
fldt
mov
and
xchg
insb
in
xchg
test
dec
mov
mov
aam
ljmp
xchg
imul
xchg
orb
sub
int3
xchg
push
ss
push
xchg
jl
popa
mov
scas
mov
mov
std
pushf
xor
adc
cmp
and
mov
adc
or
dec
in
dec
sbbb
push
stos
scas
subb
mov
mov
shrl
fcmovnbe
aas
andl
and
and
mov
sbb
or
clc
xor
into
js
inc
xor
jecxz
dec
mov
lds
scas
enter
out
shlb
cmpsb
push
jecxz
js
sub
jo
xor
sbb
test
mov
pop
fsubrl
push
popa
mov
sbb
and
ret
xor
fs
push
int
add
jle
jae
adc
lret
fstpt
arpl
pop
dec
cs
subb
ljmp
addb
loop
in
push
adc
repnz
adc
pop
sub
mov
inc
and
popf
and
and
stos
das
shl
and
pop
hlt
iret
lcall
fnstcw
xor
cmp
iret
loopne
push
enter
mov
div
sbb
mov
jne
jle
push
and
imul
pusha
lods
push
lahf
mov
dec
cltd
adc
repnz
sbbl
add
cmpsb
or
push
daa
sbbb
and
lea
scas
nop
lds
sub
ret
xchg
cld
mov
addb
xor
fs
insb
push
add
mov
push
push
fstp
jno
adc
mov
int3
and
aas
sbb
and
mov
ret
xor
aas
movsb
adc
sbb
es
and
imul
mov
cmc
jl
xchg
enter
cmc
and
inc
mov
sub
insb
ret
cli
test
rorl
mov
dec
in
pushl
cmp
das
mov
xchg
ret
inc
jno
adc
sub
adc
mov
jo
rcrb
int
mov
bound
xor
adc
lods
rol
cmpsl
clc
adc
lods
push
add
adc
sbb
mov
fwait
push
xchg
daa
push
lea
mov
int3
push
pushf
dec
insl
aas
pop
aad
repz
int
add
mov
mov
push
sbb
push
inc
or
pop
lock
out
mov
lahf
push
adc
xor
syscall
sahf
lret
les
sub
add
or
daa
cs
mov
fstpl
out
adc
rclb
inc
jmp
ret
mov
scas
in
mov
or
mov
lahf
xchg
into
jle
push
adc
inc
mov
pushf
sub
mov
pop
shrb
sbb
lods
mov
stos
xor
dec
cmp
mov
out
inc
sbb
or
dec
jmp
dec
shrl
in
pop
sub
pop
loope
lahf
mov
daa
rcrb
adc
adc
pop
mov
xchg
in
xor
std
jns
xlat
lods
popa
out
es
pop
mov
inc
cld
scas
lret
jnp
add
es
cmp
lea
lods
mov
inc
adc
scas
pushf
es
sub
daa
les
and
adc
cmp
mov
sbb
fisubrs
outsb
jge
cmp
nop
pop
add
adc
ds
cmp
aas
pop
pop
mov
movsb
push
in
hlt
xchg
and
into
adc
and
inc
aam
xor
mov
mov
xchg
scas
jge
rolb
into
loopne
imul
mov
sbbb
in
mov
nop
mov
and
movsb
das
mov
hlt
mov
lods
fisttpll
lcall
mov
cld
scas
xlat
das
jae
vpcomd
cmp
ja
mov
lahf
movsb
test
clc
sbb
xchg
rol
push
out
loopne
test
mov
mov
xchg
lahf
jne
xchg
stos
dec
push
mov
loopne
push
aam
in
push
mov
mov
adc
xor
fisttpll
inc
out
ret
push
dec
ror
mov
enter
enter
xchg
aaa
lret
inc
adc
aas
and
sub
ffreep
xlat
xor
xchg
adc
xor
jne
or
fbld
dec
int
packsswb
sub
mov
pop
and
lahf
andl
int3
scas
pushf
sbb
and
xchg
sar
shlb
or
mov
in
sub
shlb
add
lea
xchg
popf
into
lods
sub
movsb
shlb
push
das
clc
pusha
lahf
jo
mov
jb
call
and
in
xor
shlb
sarb
loopne
jno
lock
in
push
jl
nop
nop
imul
mov
enter
shlb
clc
bound
popf
jp
push
adcl
call
cmp
js
cmp
add
cmp
sub
in
clts
outsl
xchg
or
fcompl
jae
adc
push
mov
xlat
lods
nop
or
adc
insb
in
or
xor
adc
dec
jle
pop
xchg
and
push
movsb
aaa
js
adc
xorb
lahf
sbb
leave
bound
mov
mov
fsts
adcb
mov
fidivs
hlt
fstps
sub
xchg
or
or
sahf
fstl
adc
cmp
mov
addr16
inc
mov
lods
sub
int3
cs
data16
lret
fnstenv
arpl
lahf
mov
fidivrl
mull
xchg
loopne
aam
mov
and
hlt
fmulp
mov
xchg
sub
lcall
inc
pusha
pop
lock
mov
jg
pop
pop
xlat
cmp
lods
dec
pop
out
sbb
xchg
inc
xor
jae
sub
sub
sub
movsb
jo
pop
mov
lods
pop
inc
mov
daa
dec
mov
pop
and
rdmsr
test
popf
inc
push
mov
outsl
pop
sub
data16
rorb
xchg
cmp
nop
in
adc
inc
cmp
mov
cmp
pop
adc
push
sarb
lods
jns
mov
ret
mov
lock
xlat
xor
sub
js
mov
inc
xor
push
sub
mov
pop
fidivrs
and
xchg
in
sbb
sbb
mov
bound
cmp
hlt
cvtdq2ps
cmp
mov
pop
cmp
and
jmp
std
pop
push
into
mov
iret
mov
adcb
shrb
cmpsb
call
push
addl
cmp
aas
shr
dec
arpl
aaa
out
outsb
rclb
punpckhbw
int3
sub
mov
insb
push
loopne
jmp
bound
cmp
sbb
adc
mov
jmp
pop
sbb
inc
xchg
push
int
mov
bound
push
call
adc
jle
or
aas
dec
in
shll
xor
ss
jae
aam
dec
xchg
mov
pushf
imul
filds
fldenv
sbb
pop
fcmovnbe
out
test
data16
jnp
jg
dec
mov
test
pop
rol
add
adc
je
lcall
aad
fstpt
cld
pop
iret
imul
ds
clc
cmpsl
cld
and
rolb
adc
cmp
fcom
js
mov
insb
sub
jp
or
cmp
pusha
xor
mov
pop
xor
adcb
fcmove
cmp
push
cvttps2pi
pop
cmp
mov
jg
cli
or
test
fwait
jle
aas
jo
push
cmp
iret
lock
sub
or
bound
push
out
mov
bound
pusha
jnp
call
jmp
mov
fwait
jnp
push
xor
jb
nop
call
and
vaddsubps
or
fstpt
mov
jo
daa
sbb
sbb
dec
outsl
sahf
xor
adc
pop
ds
sahf
mov
loope
adc
outsb
fisubrs
or
popf
inc
xchg
mov
jb
xor
repnz
jae
arpl
in
shll
mov
inc
add
std
enter
outsl
mov
pop
inc
sti
dec
lods
mov
repnz
aaa
jecxz
shlb
jmp
pop
clc
out
insl
das
std
mov
lock
jecxz
jo
mov
scas
rcrb
arpl
jg
mov
cmp
xchg
and
adc
cld
push
pop
jno
pop
inc
nop
push
mov
mov
fcmovnu
jne
lods
pop
adc
shlb
aas
ficomps
push
cmp
popa
arpl
xor
movsl
in
mov
cmp
call
push
mov
jo
xor
test
mov
cmpsl
loopne
insl
dec
arpl
loop
cmp
pop
jnp
xchg
fs
scas
movl
mov
psrlq
pop
and
dec
xchg
sub
mov
movsl
cmp
push
je
pop
dec
test
sbb
out
push
imulb
lret
insl
lods
mov
cmp
push
pop
pavgb
out
pusha
jg
or
fdiv
push
mov
aad
sub
lock
cltd
cmpsl
aas
int
sahf
aaa
push
rorl
inc
adc
aas
adc
lret
rorb
fucomi
pop
stc
lea
push
fstpt
mov
fnstsw
jb
jns
xor
les
dec
aas
lret
in
loopne
std
out
mov
adc
stos
cmc
mov
les
das
push
mov
ss
das
cmp
lods
hlt
push
mov
and
pop
push
ret
sub
aas
mov
sub
mov
or
negb
mov
inc
adc
or
fs
pop
leave
pop
dec
imul
jg
push
in
repnz
sahf
mov
inc
pop
jbe
into
dec
xchg
scas
jne
sahf
rclb
add
jae
fistpl
icebp
push
jbe
ja
test
and
or
pop
or
xor
mov
inc
dec
divl
push
sahf
into
stos
daa
imul
pop
loopne
out
adc
mov
ss
fidivrl
jmp
or
dec
or
mov
xchg
xor
adc
xchg
xchg
sub
lea
jbe
hlt
push
imul
sti
xor
sbb
mov
mov
iret
jmp
bound
sbb
push
repz
mov
outsl
cmp
inc
int3
dec
mov
and
outsb
movsb
dec
shll
add
les
test
dec
mov
mov
sub
xchg
shrl
xchg
enter
cmp
in
cmp
mov
ret
js
xor
xchg
pop
or
arpl
es
cwtl
sbbb
and
xorb
lret
icebp
cld
xchg
rorb
mov
pop
imul
fcmovu
xlat
out
adc
or
inc
xor
out
sbb
mov
mov
push
or
xor
sbb
sbb
mov
int
xor
inc
add
xor
fwait
cmpsl
lock
rcll
mov
cmp
jle
jle
sbbb
scas
adc
sbb
pop
pop
leave
mov
and
push
sbb
inc
lea
rorl
into
std
scas
rcl
mov
mov
cwtl
ror
cs
cwtl
ror
and
push
mov
mov
enter
andl
fs
ret
call
dec
out
sarl
out
js
and
ret
push
enter
mov
sbb
sbbb
sub
call
jbe
mov
or
or
jnp
pop
pushf
jmp
lret
call
cld
outsb
mov
jg
or
fwait
mov
das
push
and
rcrl
push
or
fcoml
mov
xlat
cwtl
cmc
push
in
aad
mov
dec
xor
mov
xor
xchg
out
ficoms
mov
dec
lods
shlb
mov
pop
test
mov
mov
cmpsl
shlb
daa
jnp
or
ret
test
out
pushf
pop
cmp
insb
int3
lret
dec
sbb
and
mov
in
add
or
call
inc
inc
xlat
pop
dec
add
push
sbb
out
pop
mov
add
loop
mov
loop
inc
lods
leave
mov
jnp
pop
xchg
xchg
push
lods
lahf
adc
ds
ror
cld
addr16
inc
push
in
test
push
pop
arpl
and
push
xchg
cmpsl
scas
and
xor
and
pop
movsb
sbbl
and
add
test
push
insb
push
outsl
and
inc
cmp
cmpsl
dec
mov
pop
add
out
and
mov
fistps
nop
inc
mov
and
aas
adc
je
fistl
shrb
and
cwtl
ret
loopne
xor
sub
stos
les
push
addr16
shlb
adc
insl
js
sbb
sub
hlt
xchg
xchg
add
push
cwtl
insl
and
outsb
add
pop
mov
adc
adc
je
jmp
mov
xor
pushf
pusha
mov
mov
fs
pushf
mov
mov
push
xor
cmp
push
pop
sub
fidivrl
movsb
loope
xor
aam
pop
adc
iret
movsl
test
add
into
or
rcrl
loopne
jg
and
das
jae
xchg
shrb
fucomi
mov
cld
shrb
inc
hlt
inc
iret
xchg
xor
out
jne
aas
lods
inc
jge
lcall
adc
leave
push
xchg
movsb
jecxz
enter
lods
jmp
movsb
cmp
sbb
imul
pop
jmp
sbb
sbb
rcr
lahf
out
iret
push
sbb
pop
aad
jo
add
and
pusha
push
out
cmp
xchg
push
add
sub
mov
fcomps
mov
ljmp
fstp
or
lcall
xor
dec
into
mov
outsb
icebp
push
in
stos
xor
nop
scas
xor
aam
stos
and
dec
popa
sub
mov
shl
jb
test
xchg
cmp
sbb
lods
sarb
repnz
rolb
pushf
xor
ja
jns
xchg
mov
adc
scas
shl
xor
push
insl
adc
xor
lods
mov
push
fwait
enter
mov
pop
lahf
dec
mov
inc
dec
iret
fmul
mov
test
bound
sub
mov
sbb
scas
int3
js
sbb
jl
xlat
or
pop
dec
out
mov
sbb
popf
adc
lea
cmc
push
out
repnz
rclb
adc
ds
or
rcll
dec
repnz
jae
fistl
pop
cmc
shlb
add
hlt
fwait
push
ja
les
rclb
loope
out
jmp
adc
mov
mov
inc
and
mov
adc
popa
decl
dec
jo
adc
jle
out
fmuls
adcb
push
pop
fimull
and
hlt
sbb
dec
sub
aaa
fistl
dec
aad
add
arpl
push
movsb
adc
dec
mov
movsl
scas
aam
mov
mov
xchg
xor
into
and
clc
xor
jl
js
movsb
push
lods
inc
lods
insb
insb
mov
iret
sbb
jle
mov
push
lods
mov
mov
jl
test
insl
cmp
xor
push
cwtl
jnp
sbb
sbb
movl
adc
iret
rorl
pop
lahf
sub
pop
scas
pop
lret
shll
data16
aam
mov
mov
aas
and
mov
mov
scas
mov
mov
ret
sbb
cs
pop
cld
jmp
pop
enter
lods
movsb
sub
js
stos
jle
or
cld
mov
and
scas
lods
cmp
or
bound
adc
in
push
scas
inc
popl
in
lods
or
aam
shlb
mov
mov
pop
in
xor
adc
rcl
repz
ja
addr16
push
lods
hlt
enter
xor
dec
lock
test
and
aam
loope
fsubl
adc
inc
mov
bound
fcomps
pusha
dec
dec
jo
test
std
push
scas
mov
mov
lcall
sbb
loop
xchg
popf
jge
mov
pop
gs
pop
movsl
and
inc
mov
sub
fldt
push
lahf
ds
ret
mov
loop
xor
pop
push
pop
mov
cltd
jo
xchg
aaa
adc
xchg
out
dec
push
dec
rsm
fmul
cmpsb
adc
leave
inc
lock
adc
cmpsb
cmpsb
dec
and
pop
push
mov
sti
and
stc
and
mov
xor
mov
mov
popf
mov
xlat
push
fisttpl
xchg
xchg
aad
fists
jae
inc
call
mov
fadd
rclb
popa
sub
je
add
call
sub
jno
adc
cmp
dec
push
jmp
sub
mov
adc
mov
iret
scas
push
clc
bound
mov
sub
mov
in
inc
ror
add
mov
aam
mov
es
push
xor
add
sarb
jg
mov
aam
cmpsl
out
iret
xor
xor
push
imulb
insl
mov
and
or
mov
cli
add
bound
insl
pop
adc
cs
inc
mov
adc
loope
mov
cmp
and
pop
cld
mov
je
or
sbb
imul
mov
mov
or
pxor
popf
mov
lds
xor
subl
imull
xchg
nop
fs
ja
mov
int3
test
enter
aaa
jbe
and
nop
xor
mulb
mov
in
loope
adc
mov
xlat
push
mov
cmp
push
nop
inc
dec
adc
xlat
sub
add
or
and
fwait
xor
push
inc
sti
cmp
mov
push
loopne
or
sbb
cli
sbb
sbb
insb
sub
add
das
xor
in
or
les
les
adc
dec
scas
imul
stos
lahf
jl,pn
imul
hlt
xchg
ret
jne
adc
bound
das
cmpsb
push
pop
jg
jecxz
int
sub
movnti
adc
jae
outsb
adc
aaa
sbb
mov
and
test
inc
cmp
cmp
notl
cs
das
and
nop
sbb
outsl
test
bound
js
pop
or
sbb
das
adc
push
cmp
mov
adc
sbb
inc
aas
jae
lock
lret
loopne
xchg
dec
push
xchg
adc
lea
ret
push
inc
aaa
and
push
into
lcall
cmp
xor
cmp
imul
subb
loopne
rcll
daa
cli
dec
lret
pop
mov
in
rcll
pop
xchg
mov
xor
inc
xchg
jno
push
sbb
push
pop
test
cmc
push
pop
sbb
sub
xor
push
loop
mov
out
mov
and
leave
cmp
mov
pushf
sub
and
lret
in
cmp
inc
insb
scas
sbb
sub
sbb
push
pop
or
sub
cmp
sbb
sbb
pop
sbb
cmp
fcmovne
loope
and
addr16
test
sahf
xorl
nop
xchg
iret
xor
xor
and
std
lods
mov
mov
std
lods
mov
mov
ror
bound
dec
cmp
js
ja
pusha
adc
jle
dec
fildll
mov
mov
pop
xor
popa
dec
xor
fstpl
and
and
nop
mov
cmp
mov
sti
push
out
mov
scas
and
adc
pop
ffree
rorb
js
shlb
xchg
add
lods
jo
lods
xor
dec
jno
repnz
jg
push
scas
leave
insl
cmp
gs
inc
cmp
xor
mov
and
inc
push
pop
jbe
cmp
sarl
mov
lcall
enter
mov
iret
xchg
pop
cmc
das
lcall
push
fstpl
shrb
xchg
out
inc
iret
inc
enter
jle
sbb
jp
cmp
jmp
icebp
out
fsubrs
imul
rcll
pop
sbb
dec
mov
repnz
je
test
push
cmp
cmp
popf
and
inc
dec
inc
ds
sub
lods
fldt
xor
into
or
xchg
sbb
test
sbb
jp
out
in
push
cmpsl
xor
push
pop
pop
ds
lods
xchg
test
mov
add
mov
jmp
data16
cmp
sbb
fldt
xlat
mov
jne
cs
cmp
mov
sub
push
aad
add
pop
lods
enter
push
in
and
xor
sbb
cltd
push
cmpsb
pop
pop
mov
movsb
and
repz
scas
xor
ret
and
test
mov
addr16
mov
cmp
dec
cmp
mov
mov
rorb
fwait
add
mov
pop
xor
in
inc
sete
scas
add
mov
clc
in
fmuls
cs
dec
test
call
jp
aam
ljmp
cmp
scas
hlt
les
mov
add
pusha
out
xchg
mov
cmp
mov
mov
ret
jbe
cmp
push
cmpl
sbb
scas
stos
xor
ret
movsl
dec
call
in
mov
std
adc
add
and
loope
ret
and
pushf
mov
test
movsl
sub
sub
or
nop
xor
mov
mov
pop
idivb
push
hlt
xor
dec
sub
jae
adc
xchg
mov
in
push
mov
movsl
dec
out
enter
mov
mov
mov
lret
sbb
pop
push
adc
mov
scas
nop
add
or
push
test
cmpsb
jnp
ljmp
rorb
lahf
and
js
rclb
nop
mov
mov
inc
mov
pushf
loop
aam
push
daa
inc
rol
ret
mov
mov
lods
outsl
push
lret
jle
xlat
pop
inc
push
push
pop
cmp
fadds
jbe
aaa
push
mov
dec
cmp
cmp
les
lods
or
repnz
cmp
xchg
cmp
xorl
mov
xor
cmp
mov
fldl
and
outsb
sbb
dec
pop
fcom
cs
jae
stos
mov
add
jle
arpl
sbb
xor
nop
sar
xor
xchg
mov
or
cmp
scas
jge
sub
insl
sub
sub
imul
jno
pop
roll
adc
and
push
repz
xor
movsb
jne
cltd
mov
ret
jecxz
mov
cli
lods
mov
lock
lahf
xchg
sbb
test
aad
rol
sbb
nop
iret
xor
jg
es
frstor
sti
fadd
pop
movsl
cmp
aam
ss
in
addr16
cmp
inc
js
mov
insl
and
dec
stc
xor
pop
mov
stos
aam
xor
and
imulb
cmp
adc
idivb
sbb
out
aam
negl
out
xchg
cs
aam
in
test
iret
mov
imul
mov
jbe
lods
rcrb
repnz
popl
sarb
dec
out
pop
dec
mov
iret
cmpsl
rcrl
xlat
inc
mov
push
pop
fmull
loopne
fsubrs
push
sbb
ljmp
push
out
adc
jmp
pop
cmp
shll
mov
jo
popf
sub
sbb
adc
stos
mov
jl
jnp
sbb
adc
cld
xor
pusha
sbb
or
jle
sub
cltd
std
mov
jo
pusha
mov
xor
push
push
push
decb
sub
test
pop
cmp
fstl
push
pop
aam
xchg
push
aam
in
xchg
mov
mov
pop
push
pop
adc
clc
dec
ret
iret
mov
add
inc
mov
pop
xor
inc
mov
mov
fstps
cltd
test
jg
lret
xor
mov
xor
scas
das
aam
jg
pop
jno
and
adc
adcl
repnz
and
xor
into
xchg
insb
in
out
jnp
lods
hlt
push
mov
aam
mov
pop
and
push
xlat
dec
out
and
or
jne
pop
and
mov
or
sub
sbb
add
sub
cwtl
in
xor
sub
ljmp
dec
add
lcall
or
popa
jg
call
notb
loopne
mov
dec
jae
cmp
and
icebp
inc
push
addr16
mov
sub
xor
nop
adc
lret
nop
adc
sahf
in
ret
int3
lahf
ss
call
divb
int3
inc
adc
int
xor
sub
xchg
and
push
outsb
arpl
ljmp
jo
sbbb
push
loop
fsubr
xor
in
mov
xchg
mov
divl
js
xor
int
nop
sbb
sbb
mov
int3
hlt
xchg
fsubrs
push
jmp
or
mov
mov
dec
and
lret
adc
aas
jns
xor
mov
out
push
pusha
dec
or
into
push
sub
bound
xchg
xchg
push
inc
imul
rclb
and
jge
aam
clc
xor
or
mov
sahf
or
xor
and
push
aam
loope
ret
loop
add
sub
push
nop
ja
xchg
ljmp
inc
dec
pop
loope
in
bswap
inc
mov
imul
and
pop
movsb
sbb
or
pop
test
mov
jb
adc
iret
pop
and
bnd
adc
dec
pop
or
xchg
pop
pop
adc
les
adc
insl
icebp
jmp
rcpps
into
jnp
adc
icebp
iret
ja
jbe
lods
bound
jge
loop
fcmovnb
mov
xchg
out
mov
mov
fistpll
xchg
cli
mov
rorb
rclb
lahf
sub
add
inc
bound
xlat
out
cmp
iret
pop
gs
es
into
push
and
cmp
in
jb
subl
jg
roll
and
lahf
xchg
xchg
pop
inc
xchg
xorb
xchg
mov
dec
fisubl
and
cmp
daa
fucomp
fimull
pushf
lock
fldenv
ret
test
mov
shl
dec
shrb
in
xchg
jge
dec
cmpsb
mov
imul
mov
sbb
mov
or
repnz
xchg
inc
lret
pop
cmp
fsubrl
inc
sub
lahf
es
mov
int3
jbe
or
cmpb
fcoml
xlat
movsl
push
or
sbb
pusha
lahf
xlat
rcll
mov
lods
sub
test
pop
inc
lds
push
aam
jbe
outsl
jb
mov
sar
test
cmpsl
fdivs
xor
jmp
in
inc
or
mov
jecxz
lret
clc
shl
or
mov
insl
jl
not
jmp
adcb
pop
in
xor
add
xchg
sbb
rorb
ret
fucomip
les
xor
cmp
lods
xor
add
fadd
mov
ret
pop
or
xorb
inc
jb
mov
ja
xor
shrl
aaa
ficoms
lock
xor
test
pop
xor
dec
ljmp
loop
mov
ret
xor
adc
pop
das
enter
sub
xor
dec
int
xor
cmpxchg
xor
add
les
add
or
jo
jnp
xor
data16
add
fdivs
cmp
adc
notb
movsb
xchg
int3
jno
aas
daa
fs
adc
repnz
int
sbb
jecxz
lock
jmp
xor
int
test
fdivrl
lahf
mov
incl
movsb
xchg
fisubrs
lret
sbb
jns
or
das
cmp
out
dec
fistl
movb
mov
dec
rorl
push
iret
pusha
sbb
pop
pop
in
xchg
jmp
sbb
adc
aad
inc
pop
sub
cmpsb
mov
lock
pop
mov
and
pmaxub
inc
cmpsb
mov
int
mov
dec
call
ficoms
clc
insb
pushf
sub
aas
dec
sub
push
cmpb
nop
mov
test
lock
enter
adc
loopne
and
sbb
ret
and
pop
jo
mov
lret
and
add
hlt
jo
inc
sbb
sbb
push
lock
jl
inc
dec
pop
dec
jnp
or
mov
test
adc
sub
push
lock
adc
ja
cwtl
jnp
iret
outsl
movntq
mov
das
push
mov
outsb
and
dec
sbb
mov
lret
mov
pusha
nop
enter
add
gs
xlat
ja
jo
lods
inc
push
mov
das
call
pop
rol
sbb
shrb
or
cld
sbb
hlt
dec
orb
outsl
and
imul
mov
sahf
inc
mov
or
mov
call
mov
rdmsr
ficoms
sub
cs
cld
mov
jne
xorb
jle
je
jmp
pop
jne
decb
dec
dec
xchg
arpl
ret
or
fsubrl
xlat
aaa
shlb
lcall
add
xor
lret
pop
lahf
inc
or
dec
push
stos
leave
insb
xchg
pop
jnp
sub
cmp
daa
test
sub
sbbl
sbb
fs
insb
test
hlt
xor
xor
shrl
movsb
outsb
test
shl
xor
rolb
adc
aaa
pop
mov
movsl
sbb
loop
mov
jmp
rolb
loopne
xchg
push
cmpsl
push
hlt
jl
mov
cmpsb
hlt
cli
mov
adc
sbb
sahf
sub
shlb
dec
lret
int
enter
iret
lods
xor
push
pusha
loop
push
lret
and
into
test
daa
xor
sahf
mov
test
mov
fldenv
mov
rcrb
lahf
pop
push
jae
popa
pop
jl
insb
mov
sbb
cmpsl
daa
jecxz
and
push
pushf
in
std
cmp
ds
add
adc
lds
inc
jg
test
ja
sub
ljmp
mov
cs
add
dec
xor
mov
cmp
std
pop
jcxz
mov
or
mov
pop
push
cmp
popf
inc
mov
call
add
mov
inc
aam
jmp
hlt
sbb
test
shll
adc
lods
lcall
ret
aaa
push
push
das
ret
int
jmp
mov
add
aaa
and
iret
ljmp
mov
lret
mov
cli
insl
jo
aas
int
adc
and
fimull
sbb
aam
mov
and
dec
bound
shlb
lea
or
dec
mov
arpl
mov
das
mov
aas
mov
ret
je
fbld
dec
ret
jmp
stos
push
mov
rcll
ljmp
pusha
push
push
adc
push
mov
sbb
push
addb
in
das
repnz
cmp
xchg
xor
aam
je
dec
or
hlt
xor
movsb
aam
push
pop
stos
clc
mov
aaa
movsl
mov
xor
dec
in
test
or
mov
push
xchg
dec
insb
mov
push
dec
pop
lods
and
fwait
stos
push
enter
pusha
lea
xchg
add
movsl
movsb
dec
call
inc
imul
mov
push
fcompl
inc
fmull
movsl
cwtl
fmul
xor
jp
jecxz
and
in
inc
scas
and
in
imul
test
adc
xor
insb
jecxz
jge
scas
or
cltd
mov
pop
or
das
sbb
dec
jl
push
adc
imul
imull
and
clc
shll
lret
out
call
or
test
in
loopne
das
dec
sub
cmp
icebp
lds
ret
sub
adc
testl
mov
xor
mov
das
cmp
pop
pop
pop
ret
cmp
call
xchg
test
or
inc
nop
fs
imul
lods
mov
jp
dec
sub
outsl
push
pop
cmp
movsb
dec
inc
pop
mov
mov
adc
fcmovbe
dec
cmp
or
imul
lea
cmp
shl
fbld
call
rclb
adc
xlat
dec
fst
jle
aam
cmp
pop
xor
jb
add
std
xor
loopne
ja
inc
add
dec
inc
test
movsl
insb
jl
cmp
xor
xchg
dec
lods
add
add
pushf
sub
addl
xchg
pop
xor
out
xor
loopne
sub
lahf
sub
mov
std
call
sbb
arpl
mov
shrb
movsl
leave
stos
repnz
sbb
or
jecxz
or
pop
ss
rclb
push
repnz
add
dec
push
pop
sarw
insl
loop
push
xlat
ja
mov
pusha
add
rorb
sbb
and
and
xor
fs
lods
aas
cltd
xchg
mov
xorl
jo
inc
jecxz
push
mov
or
sub
test
inc
aaa
xchg
xchg
push
hlt
ja
adc
dec
jmp
icebp
inc
in
orb
enter
pop
out
xor
sbb
loope
les
sub
pop
test
in
int3
dec
je
stc
sbb
dec
pusha
push
xor
aad
nop
push
adc
adcl
orl
pusha
call
pop
xor
cltd
adc
jb
pop
jl
push
mov
and
daa
out
cmp
adc
sub
lret
and
adc
mov
dec
and
addb
push
rcll
aad
cltd
push
sbb
pop
lods
insb
mov
jbe
aaa
loope
add
pop
adc
out
rolb
addl
adc
sub
mul
xchg
add
mov
xor
jl
inc
push
cmp
mov
cmpsb
aam
scas
mov
daa
lods
mov
in
cmp
adc
jb
loopne
mov
xchg
cmp
popf
adc
lea
daa
fdivl
adc
dec
pop
dec
xor
pop
pop
out
push
pop
lods
lahf
inc
call
aaa
enter
out
pop
pop
mov
cmc
inc
inc
sub
pop
dec
adc
js
push
fmuls
add
roll
lods
adc
sarl
lret
xor
or
lahf
sbb
cmp
mov
mov
cmpsl
sbb
xor
in
lods
sbb
xlat
gs
shlb
imul
pop
mov
test
nop
mov
cs
fdivs
lods
lret
scas
push
inc
xchg
mov
cmp
cmp
mov
cld
lret
mov
outsb
movsb
pop
xchg
cmp
dec
add
dec
mov
repnz
dec
jo
call
in
cltd
add
fmuls
roll
cwtl
pusha
pop
mov
and
in
test
bnd
or
xor
cli
dec
fnstenv
subl
lahf
adc
js
shrb
and
cmp
pop
pushf
mov
in
adc
dec
jle
or
push
mov
das
pop
bound
cmp
push
xchg
lods
cwtl
nop
jnp
out
lock
ss
fildl
aad
popa
adc
push
in
xor
mov
mov
ds
pop
in
jb
cmp
adc
jbe
pop
loopne
or
xor
fsubrs
add
imul
fmuls
out
push
movsb
lods
jbe
adc
jo
into
inc
or
ficoml
xchg
pop
push
mov
int3
outsb
pop
push
fadds
sub
jg
js
dec
std
jnp
shrl
pop
sbb
sbb
lret
lcall
xlat
mull
das
or
pop
mov
jle
nop
adc
mov
ja
das
push
sub
dec
je
loop
js
pop
and
sbb
idivb
psubusb
sbbb
mov
and
ret
adc
rorb
popf
sbb
les
mov
jmp
shll
jmp
sub
dec
pop
adc
scas
add
xorl
ljmp
push
ds
outsb
pop
clc
into
enter
jmp
dec
xchg
inc
and
sub
out
adc
pusha
push
aas
mov
fnsave
mov
mov
mov
nop
aam
cmp
mov
test
adc
add
jbe
cmp
sbb
loopne
sub
and
outsl
mov
loopne
mov
aad
fsubrs
fwait
icebp
pushf
or
adc
sahf
or
dec
jnp
xchg
dec
dec
fsubrs
sarb
adc
jg
inc
sub
inc
pop
or
aaa
popf
nop
andl
jae
add
sbb
ror
xchg
and
mov
mov
jp
mov
mov
lcall
jnp
fidivrs
xlat
ja
mov
or
mov
out
scas
xchg
mov
or
sbb
mov
mov
adc
pusha
fsubp
xchg
xchg
test
inc
cmp
push
inc
sti
rorl
sbb
subb
inc
pop
aad
mov
push
les
scas
dec
fldt
ss
xor
loopne
lods
cmpsb
pop
or
or
inc
jecxz
mov
cmp
repz
cmpb
lds
adc
maxps
lock
nop
add
addr16
arpl
or
adc
inc
mov
dec
out
adc
sbb
ror
jnp
push
mov
popf
push
fnstenv
outsb
movsb
sti
pop
pop
sub
push
and
cmp
sbb
xor
xor
add
or
movsb
dec
jbe
hlt
inc
add
pop
shrb
lods
mov
inc
clc
je,pt
scas
arpl
mov
in
jl
push
pop
cmp
dec
cmp
test
xchg
jle
jo
lods
sti
push
or
or
xor
mov
gs
fcoms
jns
adc
add
add
xchg
das
mov
sti
pop
push
lcall
sub
dec
pop
pushf
or
mov
daa
mov
cmp
incb
mull
enter
bound
test
fs
ss
lcall
sbb
inc
mov
xchg
pusha
repnz
andb
push
popa
mov
mov
and
loop
jno,pt
xor
sbb
pop
rcr
clc
mov
jg
add
push
scas
imul
xor
aas
fisubrs
adc
add
popf
mov
shlb
jnp
push
aaa
aad
enter
add
jecxz
jl
rcrl
dec
adc
pusha
idivb
jnp
ficoms
add
aaa
and
bound
mov
mov
push
pop
out
mov
ret
jle
xor
sub
push
sub
xchg
rclb
enter
leave
jbe
push
ror
and
xorb
pop
add
sub
cltd
fnsave
jbe
cmp
loop
mov
jge
pop
push
aam
loopne
das
dec
pushf
aaa
adc
lcall
ret
xchg
cmp
test
lcall
lahf
subb
xor
fsubrl
mov
mov
mov
sar
xchg
ret
pop
rcr
mov
xor
scas
jno
ffreep
mov
sbb
shl
loopne
xor
mov
xchg
test
das
mov
test
jnp
xchg
pushf
or
push
xor
sarb
cmpsl
sbb
adc
test
dec
mov
dec
xchg
pop
ret
fimuls
add
jne
call
adc
shlb
push
mov
adc
inc
and
imul
mov
mov
fbld
mov
mov
mov
mov
leave
xchg
mov
scas
test
cmp
pop
stc
sub
add
out
outsb
pop
out
and
std
mov
mov
mov
sbb
dec
ljmp
mov
push
fidivl
popf
icebp
mov
mov
addb
add
mov
xor
iret
jle
adc
test
or
leave
pop
in
jns
mov
rcl
lret
rcrl
decl
negb
xor
in
pop
cmp
out
add
daa
pop
ljmp
cmp
fsubrl
jle
js
push
add
inc
adc
ss
jmp
rcrb
adc
mov
pop
cmp
xor
mov
mov
hlt
xchg
mov
push
or
inc
lock
mov
mov
iret
lret
cltd
movsb
mov
scas
in
pop
ljmp
cld
sbb
pop
loop
mov
push
xchg
mov
scas
add
jne
xor
testb
xor
fcoml
inc
and
in
or
std
call
pop
or
push
inc
mov
subl
inc
ret
or
aad
andb
hlt
les
dec
add
push
imul
es
pusha
ret
idivb
xchg
iret
dec
sarl
or
cmpsl
repnz
in
xorb
jle
lods
add
je
push
jmp
popf
xchg
fistps
popa
repnz
daa
mov
inc
lret
mov
or
sub
in
in
push
or
stos
iret
push
mov
mov
imul
mov
pop
shlb
xlat
jmp
loop
inc
jo
sbb
xor
and
mov
jge
adc
inc
aaa
jo
je
xor
inc
adcb
sbb
adc
shlb
sbb
lock
shlb
adc
in
outsl
mov
mov
xor
rcrb
lock
add
lods
in
aas
xor
xor
pop
inc
negb
call
imul
mov
test
sub
fnsave
mov
jge
cmpsb
nop
sbb
mov
pusha
mov
push
mov
ljmp
mov
mov
incl
xchg
outsl
clc
sub
jo
nop
push
push
mov
cmp
or
idiv
jp
push
dec
das
insl
lahf
or
and
ljmp
mov
push
outsl
dec
inc
cs
xor
cmp
sbb
or
pop
adc
pop
sbb
push
jmp
lods
dec
lea
adc
mov
aaa
shr
lahf
lahf
push
xor
pop
mov
mov
repz
rcll
scas
andps
psllw
jnp
xchg
nop
mov
xchg
shlb
sarl
aam
repz
and
lahf
sbb
and
or
lahf
arpl
repnz
xchg
push
jbe
add
in
jo
mov
xor
dec
rcr
ljmp
pop
push
loopne
aas
jmp
shrl
or
lods
or
mov
stos
movl
push
or
mov
int3
pushf
mov
lods
cmova
jg
sbbb
sbb
cmp
test
and
lods
arpl
mov
mov
inc
push
mov
adc
push
out
mov
mov
stos
cmp
sbb
push
fsubrl
scas
push
aad
mov
xor
pusha
repz
mov
cmp
xor
aaa
dec
daa
jae
rorb
adc
jo
push
push
push
jnp
adc
add
dec
sub
out
js
mov
in
pop
mov
jb
or
jo
std
call
push
mov
pop
test
scas
add
pop
stos
mov
icebp
jmp
clc
hlt
pusha
shlb
sbb
xor
shll
in
dec
std
xchg
loopne
sub
fdivs
int
xchg
daa
xlat
lock
shl
repz
lods
xor
lahf
out
add
das
mov
aad
and
jnp
scas
xacquire
push
and
adc
push
mov
out
jns
xchg
push
push
out
repnz
mov
sbb
xor
iret
xor
pop
call
xor
in
js
cmp
and
inc
xor
sub
ficoms
xor
insl
std
leave
adc
pop
cmc
inc
ljmp
xchg
dec
out
lret
adc
pop
test
xchg
pop
cmpb
sahf
mov
sbb
jnp
int3
mov
lret
mov
sbb
les
sti
lods
cmp
or
cmp
xchg
popf
mov
imul
lret
ja
jb
enter
pop
lods
mov
movsb
mov
xchg
stc
jbe
lea
pusha
fsts
sqrtps
xor
mov
sub
repz
and
jmp
push
adc
adc
xchg
push
and
and
cwtl
sub
aam
mov
push
xchg
push
mov
xor
das
pop
aas
fnsave
loopne
cmp
dec
das
roll
cmp
les
testl
int3
mov
adc
sbb
into
xor
mov
sub
jae
xor
das
stos
fucomi
imul
rcl
enter
inc
and
cmpb
cmp
adc
adc
mov
lods
insb
aaa
mov
out
mov
xchg
or
stos
test
in
stos
sbb
mov
movsb
jb
int3
xor
xchg
mov
cmp
in
or
adc
hlt
sbb
shlb
adc
xchg
jecxz
jl
xchg
in
pop
mov
ret
inc
cmpb
mov
mov
adcb
dec
and
mov
addr16
sbb
mov
push
xchg
mov
cli
push
sti
insl
das
adc
lret
imul
lret
std
rol
mov
or
jecxz
call
clc
lods
roll
rorl
push
mov
das
inc
xor
pop
lea
addb
sbb
cltd
mov
orl
or
sbb
aas
inc
pop
adc
xchg
and
nop
loopne
xchg
idivb
js
mov
sub
add
imul
push
sbb
xor
cmpsb
shlb
nop
push
inc
into
mov
mov
mov
sub
xchg
mov
call
cltd
cs
jmp
pop
xchg
in
mov
push
aas
sub
scas
xchg
pop
mov
push
imul
xchg
fists
mov
dec
das
cmpxchg
mov
and
jg
outsb
loop
out
nop
mov
adc
das
and
mov
test
xlat
sbb
jb
mov
lea
add
dec
pop
aad
jae
shrb
add
loop
rorl
adc
jnp
addr16
mov
add
je
sub
fdivs
pop
in
xchg
insl
dec
mov
xchg
add
mov
xor
adc
ficoml
shrl
adc
adc
mov
stos
fs
pop
aam
sbb
lea
mov
or
lds
cmp
es
mov
repnz
enter
xor
das
es
pusha
int3
sti
push
inc
int
sub
decl
cs
pop
shrl
push
xor
cmpsl
and
in
push
stos
fwait
and
stc
mov
mov
es
out
filds
es
pop
mov
xchg
int
and
adc
incl
sbb
jge
or
cltd
mov
mov
mov
rcrl
xchg
cmp
add
movsb
mov
push
push
push
js
jle
pop
test
xorb
sub
jbe
xchg
into
cmp
dec
mov
arpl
pop
mov
dec
enter
add
aam
cltd
mov
mov
ja
mov
pop
stc
shlb
xchg
ret
shrb
sbb
xchg
imul
inc
pop
aam
out
push
mov
and
sti
xchg
xchg
loop
loopne
aas
dec
sar
rol
outsb
call
insl
jmp
mov
ljmp
mov
cld
test
lods
mov
jle
xchg
cmp
push
ret
xor
add
mov
bound
or
jmp
mov
aam
xchg
pop
out
orb
cmp
iret
aam
rcrl
pop
test
sub
je
sarb
fcmovnb
mov
into
fisubrs
pop
and
ja
outsb
xor
clc
xchg
data16
sbb
adc
adc
mov
aam
clc
outsl
adc
cmp
xorb
int
jp
pop
xlat
push
jmp
sub
add
inc
mov
out
cs
pop
mov
out
and
mov
cmp
xchg
jbe
mov
sub
mov
sub
movl
iret
pusha
fdivp
adc
sbb
jo
inc
mov
inc
dec
adc
push
cmpl
sarb
iretw
lahf
mov
lret
div
je
mov
adc
xor
and
add
sbb
cld
push
loope
std
sub
pop
xchg
add
rol
stc
notl
mov
pop
mov
adc
adc
cmp
ds
jge
insl
pop
notl
push
call
mov
sbb
les
pop
xchg
mov
ds
das
sub
sbb
test
out
mov
das
pop
rolb
pop
xor
nop
call
inc
jo
inc
rcl
fst
cmp
iret
push
sbb
shrb
sbb
sub
cmp
push
call
cmp
cwtd
dec
jbe
pop
or
xchg
dec
xorb
fstpl
addr16
sub
mov
dec
xor
xchg
push
mov
ret
sub
cmp
mov
push
xor
cmp
imul
adc
rcr
rclb
aad
mov
cmp
divl
fucomi
add
jo
in
fs
mov
mov
scas
add
sub
scas
in
pop
aam
enter
iret
mov
aas
movsb
xchg
mov
jbe
mov
fmuls
in
enter
arpl
popa
sub
inc
jb
add
jae
jge
mov
adc
testl
rcll
jecxz
je
xor
adc
jmp
cld
ljmp
xor
xchg
jne
adc
or
push
mov
out
mov
sbb
loopne
clc
pop
lods
sbb
xor
shlb
xchg
enter
movsb
xchg
ds
test
dec
dec
adc
lahf
xor
rcrb
je
sarl
iret
fnstcw
fsubl
mov
int3
enter
popa
sbb
mov
inc
xor
rorb
dec
loop
and
movsl
dec
test
es
pop
out
scas
xchg
out
mov
and
jae
enter
mov
xchg
jae
ud1
jne
lods
int
pusha
jle
aaa
loope
roll
pop
mov
cmpl
aam
imul
imul
ss
jne
fcompl
push
inc
fsub
push
adc
dec
mov
bound
sbb
sti
clc
add
xchg
inc
cmp
push
cmp
bound
shrb
jae
inc
bound
mov
mov
xor
cmp
psllq
sbb
pop
xor
inc
aaa
xor
inc
pop
xlat
rcrl
jae
push
bound
int
xchg
mov
mov
js
aam
movsb
sub
nop
sbb
rol
mov
call
cmp
sub
in
pop
mov
cmp
jno
adc
daa
fwait
xor
ret
aam
loop
fcoml
xor
cmpsb
in
int
aaa
push
orb
xor
mov
jp
xchg
stos
dec
xor
xor
test
push
sbb
ljmpw
lea
jl
push
mov
jge
cli
jmp
subb
mov
mov
or
cmp
imul
call
push
mov
sbb
xchg
seto
jge
mov
cmpsb
roll
ret
and
push
and
adc
cltd
jmp
jno
movsb
mov
enter
loopne
and
mov
hlt
js
sbb
and
pop
outsl
mov
call
jno
loopne
aam
xchg
out
cmpsl
out
cmp
cld
cmp
inc
lea
adc
xorl
or
lret
xchg
jnp
adc
and
enter
push
adc
and
incl
inc
push
sti
lods
jmp
ja
xbegin
cld
scas
lock
aas
adc
aas
aaa
rclb
jmp
nop
out
outsl
sti
push
call
pop
int3
lods
lods
jae
push
repnz
pop
imul
mov
push
lods
loope
or
inc
mov
jbe
dec
or
sub
jl
shr
mov
rclb
cmp
pop
inc
adc
mov
fistpll
ljmp
jb
cmpsb
add
iret
adc
out
ja
dec
lock
divb
loopne
dec
bound
arpl
hlt
dec
cmpsl
cmc
pushf
add
push
push
scas
mov
shlb
add
pop
loopne
cwtl
mov
pop
or
mov
pop
inc
aaa
pushf
enter
xor
lock
shr
push
pop
je
xlat
sarb
or
push
push
fstpt
leave
push
cld
cmp
jg
in
adc
push
xchg
adc
pusha
imul
jbe
out
dec
xor
call
jne
jmp
jbe
adc
loopne
jmp
sbbb
lods
sub
mov
xchg
pop
cwtl
cld
pop
iret
mov
aas
insl
jae
cmp
mov
andb
or
lods
mov
mov
cld
adc
pop
addl
jecxz
daa
jle
xor
and
dec
dec
test
loope
cs
das
jae
stc
outsb
mov
or
call
lret
ja
enter
mov
mov
fcompl
push
imul
mov
insb
int3
insl
mov
mov
jno
jg
jae
xchg
xor
fwait
out
nop
orb
scas
mov
cmp
xor
aam
push
sbb
in
lock
aad
popf
leave
bound
pmullw
int3
dec
jne
into
cmpsb
mov
aam
dec
std
adc
mov
sbbl
call
sbb
jle
ja
sub
mov
rcrb
cld
mov
int3
ret
arpl
mov
and
pop
inc
into
gs
dec
inc
dec
mov
clc
and
sbb
mov
das
call
aas
nop
or
pop
jnp
sub
arpl
or
iret
and
arpl
xorb
xor
scas
test
stos
cmp
fcomps
or
push
jno
mov
mov
mov
sbb
mulb
fadds
jge
in
fbstp
mov
push
xor
out
mov
add
outsb
daa
es
cmp
xor
jmp
icebp
mov
shlb
popf
jge
jo
rorb
mov
xchg
mov
mov
add
ss
test
ljmp
arpl
jo
adc
out
call
jge
in
fisubl
xlat
in
mov
test
pop
xor
mov
jnp
jmp
add
loope
mov
dec
iret
dec
std
cs
xor
orb
repnz
scas
je
in
and
scas
or
hlt
rolb
push
lods
add
lods
sahf
daa
clc
orb
divb
push
dec
orl
push
cmp
and
jo
orb
mov
daa
lea
mov
daa
icebp
lods
sub
test
int3
jmp
jne
xchg
mov
and
out
cmp
or
mov
sbbb
repz
ds
sbb
sub
xor
mov
lahf
or
xchg
mov
cmp
or
xor
pop
cmp
data16
xrstor
cmp
mov
call
xor
inc
fldln2
mov
ret
lahf
push
and
cmpsb
mov
int
in
jmp
mov
in
pop
mov
adc
mov
sbb
hlt
call
mov
pop
das
pop
mov
stc
cmp
filds
jo
dec
fisttpl
fdivrl
jmp
xor
xor
xchg
into
pop
dec
mov
mov
add
mov
pushf
sbb
insb
fnstenv
and
sbb
pop
and
push
les
dec
sub
adc
pop
test
dec
inc
rcl
dec
and
aam
lods
jmp
aaa
cltd
mov
pop
cmp
subb
mov
lock
call
jle
cmpsl
pop
enter
push
xor
lcall
sbb
jl
push
enter
push
lret
mov
xor
outsb
pop
bound
je
fbstp
pop
dec
cmpsl
in
add
cli
jg
dec
nop
add
orb
outsl
push
int
aas
jbe
and
std
lock
push
dec
fistl
and
out
ja
imul
dec
mov
movsb
fcom
xchg
xor
dec
orb
test
jnp
mov
mov
scas
ss
sbb
adc
aaa
es
xchg
adc
loop
add
lret
mov
outsl
enter
outsb
inc
in
pop
jge
lret
adc
repz
mov
popf
cmp
pop
rcr
mov
xchg
xor
sub
shr
loopne
mov
xchg
popa
and
nop
movsb
rclb
inc
or
mov
lret
push
call
insb
clc
iret
lcall
leave
pop
cmp
leave
pop
gs
js
xor
sbb
xchg
aam
rcrb
insb
mov
add
lret
pop
pop
pop
outsb
cmpsl
repz
sub
push
cwtl
jnp
dec
ss
cmp
and
inc
dec
push
aam
out
jmp
jne
xor
dec
mov
sbb
sarb
dec
mov
mov
or
pop
add
pop
mov
xchg
hlt
add
test
pusha
in
pop
fcmovne
iret
cmp
bound
or
cmp
ficoml
loop
lret
dec
nop
mov
and
xor
clc
pop
xchg
adc
fs
test
sbb
mov
mov
and
lcall
xlat
jno
fisubrs
mov
outsb
mov
mov
rcl
xorb
cmp
push
insb
sti
jnp
iret
xchg
mov
mov
test
inc
ret
sub
movsb
xor
xchg
lea
int3
push
imul
xchg
mov
and
bound
mov
mov
daa
pop
call
adc
push
outsl
push
dec
mov
imul
add
ret
cmp
fnsave
daa
sub
mov
jae
jmp
lods
cmp
cmp
movsb
test
popf
jo
mov
hlt
rcrl
ljmp
fnstsw
iret
inc
scas
fwait
call
lods
lods
jp
xchg
add
sbb
adc
or
jmp
mov
push
xchg
loop
aas
call
adc
jecxz
insl
pop
movsb
mov
fstps
ret
dec
xchg
dec
jp
shlb
jg
inc
into
or
mov
cmp
sarb
aaa
xchg
xor
call
add
jo
fdivrl
iret
adc
xor
in
adc
xor
shlb
stos
dec
loop
lods
call
sub
push
or
xor
adc
cmp
push
add
sub
shrb
in
lahf
inc
lods
shlb
pushf
add
xor
jae
into
and
aas
fisubs
sahf
cltd
test
test
sbb
into
popf
rcrl
int
cmp
pop
stos
lock
jecxz
mov
inc
loopne
imul
mov
aaa
adc
arpl
xchg
mov
test
aam
xlat
std
test
or
cltd
adc
fmuls
ret
jnp
xchg
int
lcall
xchg
fisubrl
add
sbb
push
subl
pop
aam
movsb
xchg
repnz
add
sbb
add
fistl
push
mov
pop
cmp
add
jbe
cwtl
dec
pop
or
ds
cmp
jmp
test
fistl
ret
and
loop
lods
push
insl
fwait
push
jbe
out
mov
xchg
std
aas
idivl
sti
ja
pop
pop
je
stc
inc
movb
stc
dec
loop
jnp
pop
cwtl
movsb
cmp
push
xor
mov
iret
mov
cli
out
popa
mov
lahf
xchg
push
push
or
dec
lret
mov
adc
inc
mov
cmp
add
add
lret
repnz
xor
sbb
pmuludq
cmc
inc
fistps
add
sahf
insl
lret
pop
outsl
and
addr16
aam
and
dec
sahf
test
fadd
or
xchg
sbb
clc
jmp
mov
jne
mov
loop
xor
sbb
and
mov
rclb
xchg
lahf
jno
movsb
xchg
movsb
fcoml
and
mov
testb
xchg
xchg
mov
mov
mov
sub
push
push
das
dec
aam
fwait
mov
dec
push
pushf
mov
rol
scas
fwait
jo
dec
pusha
and
xchg
clc
out
pop
hlt
and
loop
sub
jle
xor
xchg
xor
mov
xor
mov
mov
sbb
push
xchg
test
das
mov
mov
lea
push
xor
ret
imul
dec
pop
mov
pop
and
push
ret
movsb
icebp
xchg
fcmovnb
loop
jl
cmp
or
and
inc
fsubl
subb
jno
xor
lahf
xor
out
movsb
xor
mov
nop
xchg
pop
cmp
inc
mov
xor
xchg
jns
sub
or
orb
daa
andl
lods
jg
call
stc
pushf
inc
xor
mov
pusha
mov
and
sbb
call
xor
test
ret
je
xor
mov
mov
daa
gs
mov
pop
push
xor
sub
dec
xchg
repnz
mov
cmc
stos
call
jecxz
cmpsb
faddp
and
cmpsb
dec
hlt
bound
cs
mov
divb
mov
pop
test
or
shlb
pop
ret
jmp
mov
mov
mov
outsb
cmpsb
mov
xlat
push
insl
xchg
jnp
xor
ror
mov
or
test
sub
and
stc
aam
mov
and
call
push
dec
popl
mov
mov
pushf
jo
add
inc
es
popf
sub
pop
ret
xchg
dec
ror
movsb
jae
into
jns
inc
add
add
in
aad
sbb
xchg
insl
ds
xchg
xor
xchg
xchg
sub
add
cmp
lods
stos
jmp
data16
and
in
mov
sub
inc
jp
xor
sbb
mov
outsb
inc
inc
dec
dec
push
and
std
mov
pop
fwait
loop
jp
mov
adc
mov
and
sbb
je
push
mov
sbb
in
pusha
or
hlt
in
xchg
add
lods
sub
add
movb
pop
xchg
jle
inc
ds
sbb
ds
xor
stc
nop
jg
insl
sbb
lahf
push
sbb
mov
rcl
inc
aas
jbe
jge
inc
jmp
cli
mov
sbb
xchg
outsl
shll
iret
popa
inc
pop
dec
je
fists
mov
lods
icebp
pushf
call
sbb
lret
test
cmpl
add
iret
gs
insb
adcb
fdivrl
mov
movsl
adc
pop
sarb
mov
pushf
pushf
pop
push
movsb
inc
ret
push
outsl
pushf
jb
insb
test
and
popa
dec
divl
add
dec
divl
add
test
push
and
loopne
inc
push
push
sahf
mov
dec
jo
aad
testl
out
jb
ret
sub
jno
daa
mov
test
dec
mov
into
xor
pop
movsl
add
mov
push
js
dec
pushf
mov
mov
mov
push
dec
je
xor
in
add
nop
rorb
in
sbb
xchg
push
mov
dec
jo
or
xor
mov
adc
xchg
mov
hlt
jmp
jp
adc
mov
inc
loopne
ja
enter
mov
pop
and
pop
mov
push
das
popa
scas
push
enter
fistpll
inc
xor
sbb
jae
lods
je
or
imul
jmp
adc
shlb
dec
ljmp
jmp
insl
xchg
adc
test
jmp
mov
mov
mov
cwtl
cwtl
mov
lods
dec
push
popa
lret
cld
stc
cld
cmc
sub
dec
xor
push
pop
pop
sub
outsl
test
sahf
pop
mov
and
and
lods
addr16
mov
sub
xchg
into
mov
add
pop
lahf
loope
mov
mov
xchg
sbb
fdivrl
sub
shrb
push
inc
add
cmp
adc
sub
das
and
rorl
xor
jle
dec
lcall
sbb
xlat
in
push
pop
ret
stos
sbb
stos
jmp
cs
jb
lahf
fsts
rol
push
std
push
lods
rclb
mov
push
outsl
out
xchg
or
js
and
adc
add
push
xchg
push
outsl
nop
mov
mov
shrl
mov
ficoml
int3
insb
add
outsb
call
mov
arpl
test
cmp
mov
aam
push
push
neg
mov
lods
inc
filds
ret
mov
mov
outsl
arpl
jne
or
sarl
xchg
les
call
pop
cmp
jo
xor
jle
xchg
xchg
sahf
fsubrs
dec
les
imul
loop
jns
sbb
fcmovnb
cmp
jge
jbe
adc
xor
mov
in
leave
popa
cld
insl
inc
adc
and
pop
mov
sub
inc
jp
outsb
cmp
sub
push
and
cmp
inc
lods
jbe
ret
mull
aam
add
xor
or
imul
pusha
lahf
call
xor
lret
mov
inc
rcr
rcl
cmpsb
daa
cmp
mov
psrld
or
jge
sub
mov
cmp
filds
adc
adcl
mov
add
push
sbb
add
jle
dec
push
mov
jo
cmp
mov
fs
ret
mov
scas
sub
jmp
sbb
leave
cmpsb
neg
mov
mov
xlat
sub
mov
nop
in
dec
adc
lcall
sub
jle
xchg
xor
mov
inc
ljmp
mov
add
mov
out
pop
call
ficoml
cmpsl
xor
insb
push
inc
push
out
pop
or
and
iret
iret
enter
and
jbe
mov
mov
jns
pop
push
repnz
mov
ja
pop
scas
push
cmp
push
add
call
test
mov
ljmp
mov
cmp
cmpsb
dec
imul
int
std
jge
movsb
sbb
test
nop
insl
mov
mov
jbe
rolb
jo
fildll
ret
sbb
adc
mov
outsb
aaa
or
jnp
lahf
cld
sub
cmpsl
fdivs
out
inc
repnz
xor
cs
sub
jo
and
addr16
shrb
xlat
lods
add
ror
aas
xchg
add
into
jnp
add
xchg
int3
adcl
sub
clc
lea
mov
in
inc
push
test
inc
sbb
dec
out
push
jmp
das
push
cld
stos
jecxz
idivb
out
dec
cmp
sub
in
shr
call
aam
jle
ss
iret
jno
lods
fldl
outsb
jnp
int
mov
xchg
fcmovb
xor
gs
dec
loop
shrb
jb
mov
jg
aas
sbb
sbb
or
xor
inc
sbb
sbb
lock
or
and
adc
jae
mov
gs
in
outsl
sar
call
out
pop
ss
jnp
fdivs
loopne
aam
fisubs
pop
dec
jp,pt
adc
aam
das
xor
xor
out
loop
pop
mov
xor
clc
rcrb
inc
aas
xchg
pop
push
cmpsb
push
fwait
xchg
idivb
das
pop
fdivl
lods
pop
xchg
inc
xchg
mov
push
push
enter
xchg
movsl
cli
int
cmp
test
cmp
ss
adc
mov
sub
xor
sub
je
rorb
stos
sbb
pusha
rorl
dec
sbb
sbb
fcoml
fnsave
mov
adc
xor
mov
pusha
stos
sbb
inc
mov
xchg
xchg
mov
aaa
jecxz
bsf
jmp
out
scas
push
bound
and
xchg
lods
add
jle
shll
cmp
push
pop
mov
loopne
adc
xchg
clc
scas
lahf
or
das
ficoml
dec
pushf
mov
mov
in
lcall
into
arpl
out
pop
mov
xchg
cmp
mov
shlb
pop
rolb
add
sub
jmp
lock
sarb
mov
xor
adc
inc
pop
lret
inc
sub
mov
out
push
stos
lock
pusha
sti
out
xchg
out
cmp
inc
incl
idivl
loopne
and
icebp
cmpsl
rcl
cmp
adc
test
dec
scas
xor
fisttpll
xchg
xor
ret
dec
inc
scas
push
ds
rcll
outsb
aad
aas
or
push
filds
inc
loope
and
fidivs
push
pop
mov
and
iret
mov
repz
nop
mov
mov
lret
test
mov
cmpsl
cmp
out
push
mov
cmp
loopne
aam
cmp
xor
jns
sahf
repz
scas
pop
adc
insb
adc
inc
lcall
or
repnz
or
adc
sub
aad
sub
lahf
pop
out
mov
xlat
fildll
push
movsb
shl
xchg
sub
out
mov
and
jne
dec
daa
jl
xor
inc
and
dec
ja
xchg
in
mov
ss
pop
insl
mov
xchg
cmp
pop
inc
push
fmul
iret
pop
in
jp
out
movsb
sub
push
or
imul
out
xchg
pop
into
cli
cs
push
dec
inc
jae
sbb
mov
add
pop
and
arpl
scas
xor
mov
mov
loopne
je
xor
test
sarb
fdivs
stc
dec
cli
lahf
push
mov
fs
jge
dec
mov
loop
dec
adc
call
mov
mov
movsb
push
pop
nop
cmp
in
add
ficoml
dec
outsb
mov
fisubrs
jnp
int3
ds
scas
cmp
mov
xor
into
rcll
rcrb
push
mov
push
sub
jecxz
jo
mov
shrl
jmp
mov
ret
into
jl
repnz
sahf
dec
aam
mov
or
cmp
inc
adc
adc
pop
aas
fsubr
lods
lds
out
scas
test
xchg
cmp
loopne
jecxz
jbe
mov
mov
ret
out
outsl
shrb
mov
cmp
pop
aas
hlt
mov
xchg
sub
and
lahf
mov
mov
aad
dec
lods
mov
dec
jb
dec
ss
clc
xchg
sbb
cmpsl
xor
sbb
cwtl
test
push
and
in
int
xlat
mov
inc
enter
and
inc
mov
outsb
jmp
cmp
dec
jbe
cltd
bound
push
nop
add
xchg
addsubpd
xor
sub
dec
dec
cwtl
dec
sbb
bound
and
or
aaa
mov
adc
xchg
pop
sub
aam
aaa
aaa
clc
jb
jae
xor
and
rclb
call
sub
aaa
dec
shrb
mov
cmp
adc
fmull
sbbl
mov
fsubrl
inc
ret
mov
mov
cmp
pop
int
mov
out
mov
mov
int
jl
xor
hlt
and
add
sbb
sub
das
loopne
adc
in
pop
aad
int3
mov
mov
mov
sub
xchg
imul
loope
dec
imul
jb
pop
cmc
sub
inc
cmp
mov
dec
pop
xchg
fdivrl
inc
lds
inc
mov
cs
mov
mov
jnp
nop
pop
ss
into
jp
mov
sar
mov
sub
inc
imulb
imul
push
xor
lock
enter
xchg
sub
xor
hlt
xchg
rorb
andb
sub
cmp
sti
xorb
add
xor
mov
cltd
pop
dec
nop
xchg
addr16
jle
adc
mov
orb
popa
out
cmp
or
fsubrs
popa
xchg
sbb
out
inc
xchg
mov
notb
dec
in
inc
and
mov
insl
inc
aaa
in
pop
enter
loop
inc
ds
das
push
lods
adc
cmp
pop
call
mov
cmpsb
push
dec
xchg
out
shrb
jae
cwtl
aaa
rcrb
and
lea
cmp
out
xchg
cmp
imul
in
dec
aad
mov
add
mov
daa
and
cmp
cli
pop
pop
call
dec
adc
jne
enter
sub
and
xchg
jo
fcomps
mov
pop
fcmovnb
aaa
or
xchg
aas
fbld
cmp
lods
jl
xor
add
lret
pushf
mov
dec
not
jge
and
inc
pop
pop
jmp
scas
xlat
cmp
lcall
mov
mov
sub
imul
and
mov
adc
sub
in
push
xchg
mov
fcmove
xchg
pop
in
xchg
cld
rolb
sub
iret
dec
mov
test
sahf
stc
fistps
mov
or
lcall
out
jo
xor
sti
rolb
pop
sbb
add
in
test
mov
push
lods
in
mov
xor
xor
mov
lods
push
xchg
mov
pop
insb
popf
xor
jnp
mov
imul
test
sub
add
shrl
call
pop
movsb
adc
sbb
xor
xchg
push
test
and
cmp
adc
add
fistps
push
les
rol
mov
cmpsl
andl
jno
pop
ret
sahf
mov
pop
mov
mov
aaa
cs
mov
popa
aam
cmp
adc
call
js
mov
aad
lods
pop
adc
adc
or
or
rol
adc
push
and
repnz
in
je
push
outsl
test
xor
mov
call
sysexit
in
mov
call
mov
out
xor
cmp
xor
loopne
push
fmuls
mov
cs
fsubrs
and
dec
mov
dec
lods
cmp
fldt
mov
into
aam
push
js
xor
std
movl
out
mov
es
mov
adc
fs
mov
add
cmpsl
cmpl
clc
mov
mov
cld
mov
divb
cmp
mov
dec
stos
test
clc
mov
out
push
call
jo
sub
jae
jle
xchg
mov
movsb
pop
and
daa
sti
mov
outsl
hlt
adc
xor
fldl
or
cmp
fnstsw
in
xchg
in
mov
cmp
and
lods
sbb
jl
mov
in
sub
in
orb
cmpb
pop
mov
mov
shl
add
push
sub
shll
shll
fistps
mov
mov
scas
inc
popf
mov
dec
and
test
pop
fldt
iret
jle
lods
xchg
scas
push
in
test
jo
xor
or
sub
lods
mov
mov
sahf
adc
push
dec
pop
out
sub
push
ret
les
mov
push
arpl
fisubrl
data16
popa
inc
mov
movsb
aam
adc
add
xchg
xor
and
xchg
cmp
out
pusha
std
push
jle
or
sbb
outsb
enter
stos
mov
cwtl
adc
xor
or
sbb
adc
jmp
fdivrl
xchg
mov
jmp
mov
sbb
test
iret
aaa
ret
cmp
aas
iret
inc
sahf
sbb
mov
push
lods
out
sbb
repnz
add
insb
or
xor
call
das
mulb
in
jmp
hlt
jo
pop
loope
insb
hlt
scas
mov
sbb
in
jmp
dec
test
mov
lds
bnd
mov
xlat
xchg
and
out
sbb
in
sbb
pop
sbb
or
ss
push
lret
ret
add
testl
pop
call
aam
faddp
xchg
inc
in
jnp
adc
dec
lret
adc
sub
cwtl
cmp
mov
aam
or
mov
pop
nop
push
shll
push
pop
adc
cmp
getsec
mov
add
lea
jp
cmpsl
mov
and
and
pop
fwait
xorl
mov
xchg
xor
rclb
lahf
and
sub
sarb
xor
inc
ds
add
mov
fstl
push
xchg
inc
js
popa
mov
push
adc
bound
pop
push
cmp
in
sbbb
mov
sub
mov
xor
xchg
or
pop
mov
es
les
gs
dec
ret
sub
popf
jae
and
pusha
int
insb
lret
icebp
jge
je
insl
jnp
clc
jle
mov
sub
imul
ret
test
cmpsl
adc
loop
dec
aas
jecxz
pop
nop
and
xchg
andl
movsb
cmc
test
xor
data16
xlat
inc
int
mov
push
inc
cs
bound
jg
adc
jle
inc
test
mov
movsb
bound
iret
mov
hlt
repz
fldl
outsl
in
mov
test
jge
lock
mov
or
aas
lahf
cmp
cld
int3
dec
or
ljmp
and
fisubrs
jo
mov
jle
and
inc
inc
in
adc
and
jae
shlb
int
push
mov
aad
pop
int3
jns
js
sub
loopne
bound
lods
sbb
adc
fucom
and
mov
jl
push
xchg
xchg
gs
jno
jmp
jecxz
out
into
cli
mov
mov
cmpb
mull
adc
call
loop
inc
pop
and
dec
xlat
mov
xor
out
push
dec
fwait
movl
xor
hlt
movsb
pop
mov
sub
das
lock
fmul
call
test
xor
xchg
sbb
mov
sbb
inc
xor
mov
jmp
xlat
cmp
addr16
rcrb
cmp
push
mov
inc
mov
sbbb
daa
mov
cli
orb
cmp
jecxz
cmp
pushf
mov
mov
call
fnsave
push
popf
xchg
add
ret
push
or
rorb
mov
mov
es
sbb
in
cmp
push
xchg
jbe
addb
push
dec
sub
xchg
hlt
fstpt
inc
int
in
das
repnz
out
add
mov
mov
push
adc
rcr
mov
jns
jnp
sbb
mov
push
mov
mov
adc
into
and
bound
cmp
imull
lds
in
pop
jns
inc
dec
fdivrl
jg
push
ja
xor
lea
rclb
fsubrl
inc
sub
ds
pushf
pop
adc
int3
push
jge
cmpb
aam
and
call
stos
ss
and
and
rolb
push
scas
xor
test
lret
lods
mov
mov
insl
fdivl
mov
sub
pop
mov
dec
insb
in
sahf
jmp
repnz
nop
ss
mov
push
and
lods
mov
push
mov
push
cmp
or
fstl
ficomps
xor
iret
mov
push
ss
movsb
daa
movsb
fisttpll
sub
xor
inc
mov
pop
or
pushf
dec
lret
hlt
shl
mov
pop
out
rclb
femms
mov
rolb
push
push
test
xchg
pop
loopne
hlt
jbe
fsubrl
popa
sbbb
sbb
fists
js
rdpmc
and
push
aam
gs
jnp
push
add
add
cwtl
stos
mov
sbb
iret
adc
shl
jae
aaa
adc
in
stos
aad
clc
cs
jbe
cmp
push
cmp
mov
mov
lods
push
pop
mov
iret
ljmp
insb
dec
popa
inc
data16
pop
sub
bound
shl
inc
push
sub
loopne
arpl
dec
in
mov
les
mov
decl
ds
outsb
xchg
and
shl
mov
movsb
out
loope
mov
xor
fiadds
sbb
aas
in
dec
or
mov
out
mov
cmp
js
dec
cmp
jmp
mov
ret
aaa
pop
sbb
push
aaa
jge
popf
dec
loopne
clc
pop
pusha
lcall
lods
cmp
adc
movsb
int3
lock
cmpsl
std
mov
lock
lock
ret
fsubrs
ljmp
adc
hlt
movlps
sub
call
in
push
adcl
out
js
adc
pusha
inc
xor
out
les
ljmp
stos
cld
dec
ljmp
lea
sbb
xchg
xlat
and
sub
ret
xor
jnp
jb
jnp
jo
and
fmulp
mov
loopne
outsb
subl
lret
leave
xor
or
shrl
jns
cmp
lret
mov
fidivrs
cmpb
cmp
testl
mov
jnp
pop
lret
out
arpl
test
xlat
test
push
sub
movsb
cmp
pop
and
call
int
xchg
sbb
adc
adc
das
js
psraw
jnp
xchg
loopne
jle
dec
fldl
cwtl
pop
sbb
je
popf
out
aas
scas
or
fcompl
shr
xlat
sbb
mov
cmp
mov
and
js
cmp
shrl
test
addr16
inc
mov
dec
sbb
jg
lods
lret
and
loope
cmp
cmp
mov
add
stos
sahf
ljmp
insb
out
mov
jl
bound
iret
mov
or
sub
xor
push
call
sbb
insl
add
lcall
xchg
movl
cmp
lock
enter
sahf
push
sbb
clc
sbb
shlb
lods
xchg
and
test
mov
shrl
mov
push
minps
jno
push
add
add
push
imul
out
sub
clc
ja
lock
fwait
les
or
push
fmull
icebp
or
mov
jmp
jo
adc
sbb
dec
int
push
lahf
test
add
in
adc
shlb
cmc
inc
xor
insb
sbb
out
or
loope
jp
add
sbbb
push
addl
xor
scas
sbb
adc
push
and
hlt
or
rolb
shlb
mov
mov
and
add
cmp
inc
push
je
push
xchg
int3
insb
int
sbb
xchg
xor
sbb
dec
movsb
ret
add
inc
mov
das
clc
mov
fsubr
iret
mov
xchg
mov
bound
fwait
add
iret
notb
mov
mov
fists
and
setl
push
aam
push
je
addb
test
pop
pushf
jnp
inc
mov
out
inc
and
in
dec
imul
jl
sbb
pushf
mov
add
sub
push
in
pusha
movsb
push
fcmovnb
repz
call
xchg
stos
mov
pop
cmpsl
in
loopne
and
lock
jl
scas
movsb
jo
movsb
iret
test
jecxz
test
sbb
or
push
sub
shlb
push
mov
cmpsl
in
aad
hlt
and
sub
push
cmp
cmp
sub
pop
xchg
jle
push
loope
mov
out
mov
cmpsb
fdivl
adc
lahf
add
mov
stc
adc
aam
jmp
fadd
cmp
or
jg
jl
add
insb
sti
inc
adc
shrb
mov
fxch
inc
int
rorb
sbb
in
add
or
enter
push
jmp
subl
mov
mov
push
jmp
sbb
scas
adc
fildl
lahf
push
inc
pop
pop
adc
je
testl
push
insl
jge
dec
lds
adc
or
cmp
mov
jecxz
sbb
adc
and
jnp
rclb
cmp
pop
xor
in
mov
adc
aam
push
add
popa
cmp
xor
out
add
in
cld
mov
pushf
push
mov
leave
xchg
jg
push
xchg
xor
loope
sub
mov
out
adc
cs
fcoml
fwait
jmp
fsts
int3
mov
and
dec
das
and
dec
jne
jnp
push
pop
loopne
sbb
divb
insl
xlat
xlat
shll
sub
pop
mov
pop
pop
adc
jl
rcl
lcall
xlat
xorl
fs
mov
inc
scas
pushf
sub
sti
xor
popa
jge
or
dec
gs
add
loope
in
cmp
mov
mov
xchg
lods
mov
stc
xor
push
mov
les
insl
mov
and
data16
fmul
push
xor
insb
push
cmp
sahf
pop
sbb
dec
push
cmp
dec
mov
lds
and
xor
push
outsb
rol
rcr
sbb
loop
aaa
enter
adc
mov
pop
pop
sahf
jae
xchg
mov
cli
fcoml
std
iret
push
add
push
jge
add
mov
pop
je
jle
jmp
fnstcw
bound
adc
jmp
fsubp
or
cmpsl
scas
int
out
in
mov
push
adc
and
addb
lods
jecxz
cld
jp
icebp
insb
idivb
pop
push
dec
mov
pop
jbe
xor
sbb
sub
pop
jbe
sub
fimuls
jno
outsb
in
add
and
daa
pop
dec
mov
scas
mov
es
fadd
sbb
mov
call
leave
and
dec
enter
sbb
mov
and
dec
repnz
adc
pop
adc
dec
notb
xchg
outsl
test
out
push
or
idivb
dec
stos
push
xchg
and
into
call
ret
aas
es
shlb
cwtl
sti
dec
hlt
js
sbb
xor
xchg
sbb
mov
sbb
jnp
test
imul
mov
xorb
add
dec
rcrb
jge
cwtl
push
mov
jmp
cs
push
sbb
call
xor
xor
dec
movsb
push
adc
add
pusha
mov
sbb
add
out
mov
mov
loopne
jp
pop
fbstp
fcomi
nop
test
fnstsw
sub
iret
lods
hlt
xor
faddl
outsb
xchg
das
das
daa
sti
sbb
sub
add
pop
ficoml
sbb
lea
mov
loopne
popf
sbb
repnz
or
aaa
rorb
cmp
das
pop
sbb
adc
sbb
fwait
lret
jg
push
icebp
data16
jp
add
ficompl
xor
lock
xchg
xchg
mov
imul
add
and
mov
sbb
mov
push
jnp
sbb
jge
pop
push
in
hlt
jmp
pop
and
sbbl
por
mov
jae
dec
ss
xchg
lock
jle
jb
mov
mov
sbb
mov
int
pop
mov
xchg
sub
sub
sub
sub
cmp
test
movlps
insl
mov
jp
pop
sbb
lods
mov
xor
pusha
xchg
dec
ss
cwtl
xor
adcb
cmp
push
xor
xor
jl
pop
cmp
icebp
mov
mov
hlt
cs
xchg
and
and
pop
and
adc
mov
or
int3
shll
mov
arpl
inc
sbb
mov
push
add
xchg
add
mov
xor
jmp
and
js
or
and
and
mov
mov
sbb
shll
jge
dec
aam
pop
aam
xchg
aam
or
pop
mov
jecxz
iret
pop
sbb
popf
movsl
in
das
rorl
mov
mov
sbb
add
popf
rolb
push
fsub
mov
ret
mov
jae
punpckhbw
xchg
sub
jae
cmp
cmp
jmp
ret
adc
leave
fbstp
pop
jae
sub
lret
lock
pushf
mov
mov
mov
js
fmul
subb
rol
cmp
aad
and
xor
and
mov
push
lods
nop
sub
cmp
rolb
pop
sbb
dec
cmp
xchg
fs
loopne
pop
xchg
xor
in
xor
cmp
loope
not
popf
inc
clc
lods
jge
pushf
or
movsb
push
fistpll
loope
stos
sub
pop
sbb
fnsave
dec
mov
and
in
nop
jmp
xchg
xor
outsl
movsb
popf
out
rcr
ret
sbb
lcall
inc
pop
arpl
sbb
sbb
cmp
push
stos
fists
cwtl
ret
int
js
inc
pop
xor
insl
lcall
mov
out
es
aam
xchg
sbb
sbb
fsubrl
add
xchg
nop
sbb
orb
stos
dec
ror
mov
cmp
test
ds
xor
pusha
clc
jno
add
mov
xchg
xor
mov
cmpsl
xchg
adc
jnp
mov
rorl
out
adc
mov
add
repz
and
inc
push
and
shlb
jle
mov
in
pushf
test
push
popa
pop
mov
lret
lods
andb
push
inc
xchg
fldl
push
cltd
pop
pop
lret
shlb
jnp
and
imul
mov
popa
call
int
loopne
inc
movnti
mov
sub
mov
push
insl
imul
arpl
sbb
pop
xchg
push
and
js
mov
adc
repz
scas
push
pop
clc
loop
sarl
subb
and
ficoms
lret
mov
lret
and
std
in
cmp
into
xchg
ss
xchg
rorl
mov
jg
push
mov
add
mov
adc
dec
cmpsl
sub
mov
call
dec
pop
loopne
and
outsl
jae
bound
call
cmp
clts
hlt
pop
or
rcll
movsb
filds
fdivrl
inc
push
daa
jae
pop
call
nop
and
mov
fnstenv
ficoms
adc
adc
lods
pop
out
dec
call
push
push
cmp
mov
dec
xor
sbb
mov
scas
inc
sbb
hlt
mov
lea
popa
mov
pusha
push
int
push
adc
xchg
adc
and
pop
les
sbb
add
das
loopne
pop
shrb
movsb
sub
loop
repnz
pop
les
mov
cmp
mov
mov
cmp
jbe
iret
sbb
adc
inc
int
pop
cmp
or
inc
fbld
inc
cmpsb
int3
mov
jo
sub
adc
jbe
mov
dec
push
lret
addb
in
ret
sarb
jne
or
cwtl
iret
mov
jp
mov
or
xor
sub
repnz
iret
insb
ss
aad
fdiv
xlat
cmp
rclb
int
loopne
pushf
and
nop
xchg
cmp
aam
xlat
mov
mov
pushf
out
mov
int3
mov
lds
push
pop
sti
loope
mov
mov
sarb
loop
add
cmp
sbb
jns
push
pop
shl
mov
dec
arpl
popa
arpl
cwtl
insl
hlt
mov
mov
push
xchg
or
aad
daa
aas
adc
cmp
mov
or
push
decl
sub
imul
mov
into
aaa
ja
shlb
daa
pop
repnz
fistpll
mov
lods
xchg
insb
or
daa
iret
adc
add
and
js
pop
lods
sub
in
aam
xchg
stos
test
scas
push
outsl
ret
jbe
clc
jge
arpl
mov
mov
xchg
shl
sahf
xchg
push
xchg
add
sub
adc
test
sbb
adc
push
fs
pop
xor
dec
int
loope
sub
nop
jns
stos
mov
xchg
daa
inc
repnz
in
xchg
and
jns
xor
call
call
int
adc
scas
dec
pop
mov
mov
inc
dec
rcll
inc
int
pop
shl
push
and
mov
jmp
adc
mov
mov
adc
push
lret
test
repz
mov
push
xchg
clc
and
js
sbb
cwtl
jno
cs
ds
or
pop
nop
pop
xor
and
rcrb
sbb
mov
sub
sbb
shll
flds
jb
loope
cmp
dec
and
out
and
or
mov
cltd
enter
sbb
mov
cmpl
add
mov
dec
mov
dec
sub
nop
xchg
mov
mov
push
iret
sarl
stc
add
leave
xchg
push
and
rol
cmp
xorl
int3
das
aam
int
mov
or
lahf
aas
mov
jecxz
xlat
lcall
inc
ljmp
inc
leave
shlb
xor
nop
rorb
inc
repz
mov
mov
enter
xor
sub
adc
shrl
sbb
sub
xchg
push
jbe
cmp
or
mov
push
mov
movsl
pop
int3
loop
cmp
push
push
mov
dec
enter
adcb
in
push
out
mov
test
shrl
mov
imul
jno
sbb
inc
std
or
mov
jecxz
ds
in
inc
push
jbe
xor
iret
ljmp
faddl
lods
push
rcll
inc
sub
bound
push
xor
mov
mov
test
and
and
fs
les
int
int3
mov
mov
sbb
pop
mov
mov
jg
loopne
xchg
push
inc
cmp
std
rcrl
or
cmp
icebp
xor
clc
xor
cs
and
je
cs
loopne
rorb
orb
js
lods
mov
cmp
push
enter
test
cmp
mov
and
imul
es
aam
jo
inc
aas
sub
in
cmp
mov
inc
ja
dec
or
fistl
mov
mov
adc
dec
cs
lret
push
mov
nop
mov
cmpsl
xor
int3
sbb
test
adc
jae
ss
xor
stos
inc
add
aas
adc
cmpsl
dec
adc
mov
les
jmp
lods
mov
cs
cli
sarb
aas
pop
sti
cmpsb
push
dec
sbb
xor
inc
and
sbb
fsubs
cmp
fdivrs
cmp
mov
pop
xor
adc
lcall
cs
sbb
lods
lds
out
adc
mov
push
jb
mov
mov
ret
push
xor
stos
pop
or
loop
movsl
fisttpll
push
out
mov
adc
xchg
add
fwait
aaa
imul
popf
sbb
push
dec
cmpsl
adc
adc
pop
mov
bound
aam
int
icebp
push
rcrb
mov
orl
adc
imul
leave
fstp
out
imul
sub
and
mov
in
test
mov
xchg
in
mov
insl
mov
out
ret
les
sub
fisubl
push
mov
cmp
mov
outsb
jns
shlb
jbe
lcall
jl
dec
clc
cmp
int
xor
pop
mov
fnstsw
outsb
int3
mov
gs
xlat
xor
lods
push
sbb
mov
inc
mov
pop
int3
pop
xor
push
int3
rdmsr
cmp
pop
or
sub
jno
sub
mov
mov
test
sbb
punpckhdq
int
dec
dec
shlb
call
scas
jae
xchg
ud1
das
pop
cmp
adc
arpl
enter
into
dec
test
scas
jmp
into
and
hlt
fxtract
pushf
insb
lock
shl
shrb
dec
data16
neg
inc
in
mov
fistps
jbe
in
jbe
add
popa
icebp
adc
jo
sbb
fbstp
ss
mov
sbb
shrl
mov
std
add
rclb
or
sbb
mov
dec
clc
and
mov
subl
data16
jmp
sbb
aas
cwtl
stc
fsubrl
aad
andb
aad
test
pusha
inc
mov
lock
mov
xchg
pop
push
adc
sbb
decl
jmp
and
popf
pop
aad
jle
adc
es
insb
push
push
mov
xor
sbb
fsubs
sti
out
sub
xchg
inc
sbbl
mov
in
cmp
mov
movsb
and
shl
mov
fcomip
push
fwait
or
pop
enter
jge
lret
ss
insl
hlt
mov
in
js
in
repz
mov
adc
mov
sbb
adc
mov
xchg
mov
mov
fistl
aas
lahf
pop
insl
lods
and
sarb
andb
das
clc
and
and
add
pop
stos
inc
inc
mov
lahf
dec
jge
pop
xchg
sbb
rclb
jb
adc
in
out
xor
test
jecxz
add
loopne
js
push
xor
pminub
mov
mov
call
in
push
shlb
adc
sub
nop
xor
push
rorl
push
cmp
jle
rcr
sub
jecxz
jnp
jg
fimuls
pop
movsb
scas
outsl
mov
cs
xchg
insb
in
js
lcall
out
lahf
cld
sub
add
outsl
sarb
adc
out
add
cmp
xchg
and
sub
jmp
aas
xor
arpl
mov
push
scas
adc
int
andb
push
loopne
lods
dec
cli
mov
ja
dec
xor
lods
dec
test
mov
rorb
ljmp
adc
fildl
push
pop
ljmp
pop
jl
loopne
jecxz
and
pop
sbb
stos
iret
cltd
shl
dec
push
jmp
in
shl
jno
cmp
mov
jae
scas
insl
jmp
rcr
pushf
rclb
jae
arpl
dec
and
mov
aaa
sub
pop
es
scas
cli
lock
ss
and
jl
mov
pop
jae
movsb
lods
addr16
xor
adc
test
pop
lods
adc
push
push
xor
stos
rcll
in
inc
ss
mov
mov
mov
ljmp
xor
xor
cmpsl
mov
sub
pop
loope
xchg
rorb
adc
aaa
xchg
shrl
je
popf
sbb
sarb
ds
lock
nop
pop
jmp
scas
gs
jne
xchg
jno
comiss
adcl
jae
movsb
inc
call
push
clc
fnstcw
jo
lret
inc
pop
adc
xchg
in
sahf
movsb
bound
adcl
mov
mov
popa
fs
in
pop
js
adc
mov
out
mov
push
and
lods
les
jp
adc
mov
mov
aaa
sbb
jmp
movsb
sbb
test
adc
dec
lahf
ucomiss
insb
out
cmp
xor
pop
fisubs
fidivs
add
push
or
imul
or
cmp
mov
popa
pop
shrb
add
dec
pop
cwtl
mov
in
push
mov
loop
sbb
and
out
adc
jns
xchg
and
xchg
or
dec
outsb
iret
iret
sbb
and
mov
in
arpl
mov
xchg
push
sarb
cmp
adc
pop
faddp
hlt
sbb
xor
dec
dec
xchg
jo
push
shr
stos
sarl
loope
push
push
mov
adc
shlb
sbbb
mov
xor
in
mov
das
mov
or
xchg
aaa
adc
call
fisttpll
mov
or
adc
lea
or
mov
das
aaa
and
jg
pop
aas
sub
jge
push
mov
fbld
xchg
sbb
rol
adc
cwtl
inc
lcall
and
sahf
cmp
jo
iret
fisttpll
pop
sbb
popa
nop
das
lcall
pushf
arpl
push
cmp
cmp
daa
xchg
in
mov
sub
sub
fwait
sbbb
nop
cmp
mov
jmp
lods
test
mov
vaddsd
gs
ret
stos
pop
sbb
mov
push
jo
leave
add
jns
sar
pop
and
mov
or
or
pushf
cmp
sbb
cwtl
rorb
mov
bound
dec
out
mov
mov
cmp
jecxz
mov
out
add
and
test
jnp
sbb
in
jb
pop
mov
test
sbb
cltd
imul
enter
mov
fwait
nop
jo
cmp
fmull
int
mov
test
fadd
sub
xchg
data16
cmpsl
xor
cmp
cmp
xor
cmpsb
scas
test
insb
jnp
mov
push
pop
and
pop
in
les
dec
daa
sbb
pop
les
mov
push
cmp
mov
inc
cmpb
cmp
dec
pop
aam
fs
jl
or
lock
std
out
dec
xchg
ret
popf
pusha
cmp
call
adc
cmp
ret
mov
pop
mov
jae
jo
xchg
daa
jecxz
push
lret
jge
nop
imul
aam
mov
mov
fcompl
dec
popa
dec
inc
es
pop
dec
sbb
pop
adc
lret
sbb
aam
cmp
dec
shl
mulb
sub
cmp
incb
sbb
sbb
mov
loop
add
popf
mov
push
sbb
jge
fs
or
loopne
ret
mov
sbb
ss
xor
ret
sahf
xchg
es
call
and
sub
pop
sbb
lock
mov
in
sbb
outsb
or
or
cmp
mov
add
xchg
or
mov
pop
stc
lret
cmp
dec
das
imul
pop
dec
arpl
filds
or
int3
sub
or
jnp
outsl
loopne
ret
mov
mov
dec
mov
xchg
int
and
inc
movsl
shrb
mov
jg
jnp
or
ret
xor
das
pop
mov
ror
call
inc
ds
jo
cmp
and
cli
cltd
mov
call
push
mov
inc
pop
enter
shrl
or
int3
mov
pushf
jae
addr16
pop
fdivrl
aas
rcrb
push
cmp
les
nop
cmp
xchg
pop
loopne
jecxz
xchg
clc
sbb
cmp
sbb
mov
hlt
sub
cmp
in
jo
xor
sub
sbb
jle
movsb
sbb
cmp
lods
and
add
push
fwait
je
inc
dec
cmp
pop
mov
push
imul
mov
jb
xchg
incb
lods
push
out
inc
lea
aad
fmul
fidivs
mov
sbb
test
andb
dec
jg
inc
rcr
cmc
mov
ret
add
jg
repz
arpl
mov
mov
xchg
test
xchg
jp
and
cmp
mov
dec
inc
mov
cmp
sub
push
movsl
push
aam
push
pop
aad
lea
dec
sbb
in
cs
push
push
orb
in
sub
in
push
aad
inc
pop
jae
icebp
pop
adc
jecxz
push
andb
pop
movsl
inc
sub
and
xchg
aas
sub
loopne
stos
and
nop
mov
jecxz
jmp
sti
nop
lods
rcrb
fstl
xor
shld
mov
hlt
dec
iret
ljmp
inc
sub
xor
mov
xchg
pushf
push
push
mov
idivl
cs
mov
hlt
push
xor
xor
inc
mov
mov
inc
js,pn
out
and
add
ret
fcompl
cs
lods
or
mov
loop
xor
xor
and
movsb
subb
adc
push
addr16
inc
push
and
pop
adcb
test
push
rcll
fdivrl
flds
call
mov
das
and
cmp
fisubrs
cmp
orl
adc
jecxz
aam
shrb
xor
nop
sub
cmp
test
jmp
pop
mov
cmc
push
jmp
add
xor
xchg
dec
pop
push
mov
lods
adc
mov
cs
xchg
lods
xchg
sbb
dec
shrb
pop
stos
push
cmc
cld
rclb
aam
and
pop
sub
pop
test
pop
mov
xor
mov
daa
inc
adc
cmc
rorl
xchg
dec
call
adc
xor
lods
cmp
out
push
in
out
gs
sbb
pop
pop
or
push
mov
mov
in
mov
lret
call
pop
jmp
adc
inc
mov
cmp
dec
cwtl
inc
add
popa
push
jns
xor
push
xor
setns
hlt
sub
test
fisttpl
aaa
je
sub
xchg
cmpsb
aas
mov
enter
cmp
mov
mov
or
and
aas
into
sbb
testl
push
xor
jo
pavgw
adc
or
inc
cmp
push
sub
xchg
insb
and
sub
outsl
hlt
fsubl
mov
xor
mov
sbb
push
sub
test
sarl
adc
adc
mov
pop
test
adc
cmpsb
nop
cmp
xchg
outsb
fsub
jmp
pop
fstp
aas
iret
sbb
call
xchg
clc
mov
mov
jae
out
aam
mov
mov
xor
cld
xlat
sbb
iret
scas
fdiv
xchg
shll
outsl
lret
and
adc
mov
lock
mov
mov
mov
cmpsb
stos
pop
mov
xor
mov
mov
mov
pop
xor
sbb
and
push
pop
xchg
sub
iret
pop
nop
inc
dec
aas
pop
sbb
dec
shrb
jnp
pop
push
ret
and
mov
pop
fdivrl
cmp
mov
inc
xchg
push
out
cld
cmp
mov
lahf
mov
rorb
ds
enter
das
xchg
dec
adc
popf
fmulp
mov
cmpsb
adc
aam
xor
xchg
aaa
pop
mov
sbb
mov
ret
cmp
leave
lock
xor
mov
push
fisubl
jo
int3
divb
pop
pushf
mov
mov
ljmp
mov
add
aam
dec
xor
jecxz
dec
inc
fsubl
arpl
cs
test
pushf
nop
xor
cmp
jmp
sub
add
pusha
fnstenv
nop
pop
hlt
push
aaa
cli
jo,pn
fbstp
push
out
cmp
sbb
clc
insb
in
call
or
push
dec
call
inc
adc
jle
int
mov
das
xor
inc
cmpb
push
push
pusha
push
ljmp
push
scas
jl
insb
adc
lods
mov
jle
cmp
sbb
xchg
pop
xchg
sbb
cld
lods
jp
outsb
fldl
cmp
add
shll
test
test
xor
add
cli
jl
xchg
scas
sbb
push
adc
mov
pop
ret
pop
mov
ret
xchg
popf
add
out
call
ds
int
shll
cmc
stos
and
lods
das
xchg
scas
mov
dec
psubusw
mov
lea
adc
jo
mov
cltd
arpl
sahf
test
test
les
ss
adc
adc
mov
outsl
mov
xor
adc
test
dec
mov
inc
repnz
rclb
into
pop
imul
enter
sbb
push
out
popf
sahf
rorb
lahf
dec
in
ljmp
push
ds
add
frstor
jg
lods
pop
mov
call
xor
aas
xchg
fidivl
push
xchg
inc
xor
push
mov
inc
in
ror
mov
sub
push
adc
leave
mov
push
mov
or
mov
fcomi
or
pop
mov
mov
mov
cmp
bound
test
leave
enter
pop
and
imul
lcall
pop
xor
mov
adc
jbe
mov
inc
cmpsl
xchg
out
pop
ret
shlb
sbb
mov
inc
push
cmp
xor
xchg
loope
adc
adc
adc
xor
xlat
loopne
mov
push
mov
shlb
cltd
mov
addb
aaa
stos
add
inc
sbb
fidivrs
xchg
in
les
pushf
test
push
pop
adc
movsl
adc
js
push
std
jo
xchg
jl
xor
xchg
jne
mov
fnstenv
mov
aam
sbb
in
lds
xor
xchg
mov
add
pop
dec
cld
shrl
push
in
adc
scas
adc
ss
outsl
lcall
and
ret
and
out
sbb
xchg
clc
cs
addr16
dec
mov
test
push
jae
cs
ficomps
xchg
into
push
mov
insl
arpl
scas
filds
aas
sub
xchg
inc
jae
testb
outsb
lods
hlt
fldt
mov
adc
jnp
pop
fdivrs
cs
pop
mov
in
jns
jb
fs
push
jp
sub
pushf
clc
adc
and
adc
pop
adc
outsb
or
sub
pop
cmp
aam
cmp
xlat
mov
ret
rcl
pop
dec
mov
xchg
rcrb
lea
les
mov
push
mov
mov
push
mov
pop
repnz
stos
sbb
rolb
cmp
mov
incl
rcl
add
pop
test
inc
ds
mov
sbb
outsb
aaa
jle
sahf
add
mov
and
sub
not
movsb
xor
xor
cmpb
pop
jl
xchg
out
call
mov
aam
lea
adc
ljmp
ds
mov
ret
jmp
push
pop
shrb
lret
sub
lods
je
xchg
adc
dec
dec
push
and
sub
sub
dec
divl
movsl
pop
xchg
pop
mov
ds
rolb
push
and
sub
push
cli
movsb
lods
adc
ficomps
jb
ret
pop
pusha
popf
lret
rclb
pop
mov
lea
sub
pusha
sub
bound
jno
iret
leave
mov
jbe
nop
fstps
movsb
ret
cmpb
cmpsl
mov
or
and
jg
enter
ja
insb
jbe
fistpll
out
sbb
xor
jecxz
xor
popf
sbb
sbb
mov
push
and
mov
sbb
cmp
test
xor
mov
leave
scas
js
adc
outsb
xchg
adc
mov
loope
inc
add
or
jmp
lcall
iret
mov
jnp
imul
pop
in
pop
mov
dec
push
pop
dec
aam
adc
jnp
sbb
mov
and
out
iret
shll
adc
shlb
push
movsb
jg
dec
mov
int3
pop
dec
adc
in
movsl
cmp
lcall
mov
outsl
sub
insl
daa
or
dec
lods
sbb
add
stos
xchg
cmp
cli
inc
sub
inc
int
adc
ljmp
cli
data16
pop
xor
mov
jo
lret
pop
add
divb
movsb
jmp
imul
rsm
lea
sbb
adc
movsb
cmp
adc
int3
lods
imul
popa
dec
xor
sbb
push
orb
xchg
in
cmc
mov
fucom
or
inc
aam
sub
pushf
inc
and
cmp
and
loopne
mov
shll
mov
je
movsb
bound
pop
andb
push
or
insb
div
dec
jmp
inc
sub
pusha
sbb
mov
mov
xor
pop
sub
mov
in
cmpsb
cwtl
xchg
rcr
xorb
mov
rorb
fstl
and
or
push
pusha
sahf
add
xchg
sbb
mov
das
adc
pop
xchg
mov
jae
cmpl
mov
ret
sti
addr16
aad
lcall
mov
xor
in
mov
test
xchg
mov
xor
mov
sub
sub
mov
xor
pop
adc
mov
dec
adc
sub
hlt
xor
pusha
jns
ret
add
int3
adc
int3
popf
pushf
shlb
push
mov
lcall
xchg
daa
mov
fdivrs
shr
adc
shrb
mov
movsb
or
data16
sarb
ror
sar
sbb
and
or
jmp
addr16
pop
inc
mov
or
xor
fstl
pop
add
test
and
cmpsl
imul
loope
iret
lods
test
aad
sarb
and
push
sbb
xor
sub
xchg
dec
adc
sub
or
daa
fdivrl
dec
in
mov
int
call
call
arpl
nop
stc
cmpsl
mov
loopne
inc
push
cmp
xchg
jg
in
mov
jo
mov
push
test
sbb
mov
insb
inc
imul
or
popf
lea
xor
or
xchg
jno
push
loopne
in
lods
rolb
ret
sbb
fistps
and
pop
aas
ret
mov
fldt
mov
aad
fiaddl
sbbb
int3
loopne
rcll
leave
adc
xchg
cmp
mov
jl
adc
cmpb
js
mov
movsb
iret
popf
movsb
add
insb
mov
clc
stos
inc
subl
rcrl
test
fmull
sbb
pop
out
mov
aaa
xchg
xor
sbb
shlb
jb
sub
js
sarb
dec
dec
outsl
aaa
fistl
ds
jns
fildll
mov
cmpsl
jnp
decl
outsb
pushf
sbb
sbb
popa
xchg
and
stos
int3
mov
ds
pop
sbb
sbb
nop
and
ror
xor
sbb
inc
and
and
stos
mov
cmc
out
mov
je
xchg
pushf
cmp
xor
push
or
fsubp
xor
adcb
fiaddl
lahf
xorl
or
mov
sarb
adcb
inc
test
xor
rorb
mov
in
sbb
cmpxchg
lret
fcompl
lds
aam
daa
cmp
mov
and
inc
xchg
test
cmp
adc
lea
daa
and
int
xchg
mov
outsb
insl
xlat
sti
xor
lods
es
dec
cmpsb
pop
mov
test
or
jecxz
push
and
sub
and
movsl
gs
pop
dec
cmp
sbb
es
xchg
movsb
pop
adc
clc
xchg
jmp
aad
adc
into
sub
sbbb
pop
pop
xchg
xor
dec
add
sub
cld
adc
jl
mov
xor
sbb
mov
das
dec
xchg
add
or
or
int3
cs
fxch
add
xlat
inc
mov
jb
ja
sahf
iret
lea
xchg
push
ret
movb
and
call
cmp
jle
mov
push
rorl
jno
sbb
cmp
dec
sbb
adc
fmull
ret
and
clc
and
pop
xor
repz
call
ret
out
mov
jl
ficoml
and
xchg
jnp
xchg
xor
and
movsb
dec
int3
call
jne
lret
lods
popa
fldt
sub
mov
xor
fwait
mov
sbb
in
or
jnp
inc
sarl
jmp
mov
adc
std
xor
jg
or
and
mov
nop
dec
scas
xchg
test
fsubrl
int
aad
nop
pop
ret
or
push
mov
fnsave
push
pop
ret
loop
xchg
mov
sbb
test
pop
mov
cmp
test
popf
xor
and
xchg
jmp
sbb
in
mov
rcll
jge
xchg
mov
adc
inc
push
adc
repz
mov
cmp
lods
mov
mov
fs
jecxz
shl
mov
int3
insl
dec
sbb
and
sub
jmp
pusha
rcll
aad
std
xor
adc
sub
repz
addl
in
clc
jge
cmp
insb
mov
or
je
push
pushf
xor
xchg
rcl
test
mov
jbe
push
sbb
xor
jno
mov
out
xchg
iret
push
and
mov
sahf
cld
jns
cmp
cmpsl
adc
je
and
mov
cmpsb
sar
stos
aam
sahf
out
push
xor
cmp
xor
fistpll
stos
aam
add
test
shr
mov
stos
mov
rcrl
test
inc
das
mov
aam
sub
jg
pop
test
xor
push
adc
movsb
jmp
push
xchg
dec
xor
xlat
cs
mov
xchg
jae
in
sahf
shlb
mov
aad
outsl
mov
loop
cmp
ret
repnz
shlb
call
mov
sbb
jae
out
bound
adc
imul
sub
imul
bound
pushf
adc
adc
loopne
fisubl
movnti
rcll
js
jnp
std
out
imul
sub
jmp
std
nop
ljmp
push
adc
into
sbb
push
loop
sti
loop
sub
jge
adc
mov
adc
cmp
movsb
cwtl
aaa
ja
gs
jbe
daa
leave
mov
lods
movsb
or
movsb
add
or
out
dec
loop
or
into
and
dec
inc
cmp
and
or
jl
fwait
sbb
pop
daa
or
test
lcall
pop
dec
cmp
or
popf
jne
loop
lock
int3
inc
xchg
int3
nop
sbb
cmp
or
clc
mov
fisubrl
or
xor
mov
xor
cwtl
xor
out
shrb
movsb
in
mov
adc
outsb
test
pusha
fldenv
es
cwtl
and
sub
pop
lahf
push
addb
sbb
sub
rcrb
sbb
pushf
xchg
scas
cs
aas
sub
sbb
pop
dec
push
clc
mov
xchg
pop
or
adc
shlb
mov
popf
sub
mov
lea
sub
cmp
int
sarb
nop
mov
ja
out
pop
cs
mov
xchg
dec
jo
cs
ja
mov
jb
mov
pop
cmpsb
or
xor
mov
push
sub
das
hlt
pop
fidivl
mov
cmp
aam
rclb
test
enter
out
inc
cmp
cmpps
ficoml
imul
cld
fmull
push
aaa
lock
cli
mov
adc
js
xor
pushf
mov
lret
ret
aaa
dec
arpl
and
jnp
sub
pop
push
mov
add
daa
js
pop
pop
jnp
push
call
mov
pusha
jb
lods
dec
mov
jne
and
loop
int
mov
sub
mov
mov
xor
adc
dec
cmp
enter
inc
pop
mov
mov
jae
jmp
xchg
jbe
daa
xchg
fldcw
or
scas
add
leave
mov
fsub
xchg
shrl
inc
jne
repz
dec
adc
ret
dec
xlat
mov
lods
inc
test
mov
xchg
cmp
dec
push
mov
and
add
pushf
sarb
mov
aam
call
fwait
xchg
cld
push
cmp
stos
jmp
xor
pop
cmp
mov
cwtl
sub
mov
adc
xor
daa
outsl
pop
aam
mov
xor
cmpsl
dec
xchg
lods
pop
outsb
mov
rol
in
add
xchg
test
jge
fcmovnu
jne
push
and
out
cld
arpl
push
push
ficoms
sub
nop
jno
push
into
cmp
lcall
xchg
cmp
adc
sbb
push
lds
scas
push
mov
std
and
mov
es
dec
imul
in
xor
mov
sub
jo
clc
lret
and
pop
shll
ljmp
cmp
mov
xlat
pop
pop
sub
out
mov
add
and
bound
jo
push
pop
lods
outsb
jne
xor
bound
popf
imul
outsl
repnz
lds
in
mov
fs
sub
int3
cmp
xor
jecxz
je
fstpt
mov
xchg
pop
jnp
adc
push
das
inc
inc
cmpsb
and
mov
dec
andb
push
jno
je
aam
xor
mov
sbb
pop
mov
mov
sahf
mov
pop
scas
sub
sarb
pop
cmova
fiadds
clc
pop
insl
mov
aas
dec
ret
iret
dec
and
mov
rcrb
mov
nop
mov
cmp
lds
mov
push
jg
shll
ss
adc
lret
stos
dec
frstor
inc
add
adc
les
cltd
push
inc
xor
push
ret
xor
inc
mov
aad
or
data16
loop
mov
add
pop
lcall
loop
pop
adc
dec
and
pop
pop
adc
aaa
or
lds
addr16
xor
and
outsb
out
mov
sub
cmpsb
mov
addr16
in
in
and
pop
sbb
je
pop
or
loope
hlt
pushf
dec
adc
and
cmp
ljmp
xor
xor
stc
lods
push
adc
call
push
cmp
fnstenv
xchg
sbb
sbb
pusha
ss
sti
addb
aam
lret
or
mov
adc
xor
jp
inc
or
ss
test
cmp
ret
pop
daa
stc
xchg
lret
or
dec
xor
sarb
rorl
cmpb
out
xlat
adc
push
inc
addr16
insb
mov
sahf
int3
mov
jge
rcrb
mov
in
mov
fwait
popf
fcompl
out
lret
push
lods
fldl
cmp
sbb
ja
xchg
push
add
scas
cmp
ljmp
imul
addb
mov
jge
xchg
lea
out
mov
push
jecxz
dec
pop
push
cmp
aas
les
or
cmp
jle
call
sbb
cmc
cld
je
out
rcll
lcall
test
shr
sbb
cmp
sbb
cltd
stc
mov
push
mov
adc
adc
sbb
push
jno
pusha
or
rorl
add
sub
into
es
cmp
ficoml
call
mov
mov
rcrb
mov
inc
scas
sub
push
mov
push
sti
xchg
xor
fcmovbe
push
or
add
add
pushf
cmp
dec
push
mov
das
loop
fbld
insb
cmp
cmc
push
adc
xor
inc
std
testb
mov
push
xchg
idivl
bound
rcrb
push
sbb
shl
mov
jae
push
lahf
mov
negb
xor
and
mov
and
pop
add
in
mov
sti
inc
stc
xchg
fadd
xor
jae
leave
rol
filds
adc
int3
inc
mov
push
pop
out
xor
insl
pop
imul
ss
aaa
mov
sbb
les
push
popa
lcall
hlt
insl
movsl
and
dec
push
scas
in
enter
das
into
sbb
jnp
stos
xor
push
xchg
je
insb
cwtl
cmp
jo
xchg
pop
lahf
shlb
addr16
and
jb
aas
adcl
rcrl
inc
js
jbe
outsb
mov
mov
sbb
in
mov
push
pop
clc
xchg
mov
movsb
adc
lods
iret
xor
xchg
ss
mov
idivb
ret
adc
aad
lock
ljmp
mov
mov
sub
mov
mov
cmp
stos
js
push
xor
jae
aaa
popa
es
loopne
mov
xchg
mov
aam
adc
out
lods
xchg
push
xlat
sub
sbb
test
or
sbb
call
sbb
test
pop
xor
test
adc
clc
cld
jp
sarb
outsl
out
enter
and
rcl
xor
jnp
push
cmp
hlt
lock
sub
bswap
mov
in
cmp
cs
in
imul
sti
mov
pop
aas
aam
ficompl
and
xor
leave
les
adc
icebp
cld
shlb
out
sbb
jnp
jle
je
jg
jl
mov
enterw
lcall
mov
mov
sar
mov
lea
cmp
imul
lods
xor
movsb
jae
outsl
fimull
scas
movsb
into
inc
jb
pop
sbb
lods
popf
xor
hlt
fmuls
jbe
ljmp
pop
xlat
jmp
notl
loopne
mov
int3
adc
dec
in
add
dec
iret
and
loopne
lret
mov
mov
sbb
sub
rolb
xchg
lret
push
pop
test
ja
and
js
bound
pop
mov
cmp
test
ljmp
lods
shll
cmpb
movsl
cmpsb
inc
jns
paddsb
jb
pop
out
dec
leave
mov
mov
adc
jl
cmpsl
stc
lock
insb
rcrl
and
jmp
xor
cmp
xor
pushf
ret
push
test
xor
sub
sbb
testb
jle
jne
sbb
cmpsb
iret
in
cmp
jle
jb
jb
popa
loopne
shr
pop
pop
lock
aas
inc
push
fsubl
ljmp
push
cmp
hlt
mov
inc
fdivrl
aad
call
hlt
sti
fisttps
mov
xchg
mov
in
adc
movsl
add
jmp
andb
stos
daa
aaa
adc
pusha
mov
cmp
mov
jmp
sbb
fsubr
ja
pop
inc
add
add
cmpsb
arpl
call
mov
int
insl
and
dec
jge
xchg
sbb
or
ret
sbb
or
mov
ret
dec
mov
arpl
das
sub
out
or
cmp
push
push
lcall
xadd
cmc
mov
jmp
lods
in
adc
std
aam
mov
testb
and
aam
cmpl
sub
xchg
rclb
cmp
jnp
pop
pop
leave
jne
int
lret
outsb
adc
xchg
testl
fucomi
cltd
movntq
out
lods
cwtl
sahf
mov
add
push
jmp
out
lock
mov
in
mov
lods
jae
jo
mov
lods
fs
hlt
pop
bound
sub
cmp
xor
dec
cmc
lea
inc
sub
aaa
cmp
xchg
rclb
xor
jmp
cmp
rcl
repz
jnp
ret
enter
or
data16
cmp
push
dec
or
imul
xchg
jp
ret
adc
jne
pop
mov
fisubrl
je
fstpt
and
insl
push
mov
es
addb
dec
pop
push
push
cltd
cmpsl
add
stos
sti
into
mov
sbb
mov
nop
ret
xor
sti
mov
and
cmp
adc
sbb
xor
aaa
dec
icebp
xchg
or
mov
dec
ja
jmp
outsl
xor
jmp
cmp
stos
js
xor
lret
or
popa
xor
scas
xorl
arpl
shlb
fimull
lods
test
pop
jge
rcl
nop
fldt
into
inc
scas
mov
pop
sub
push
and
cmpsl
sub
shl
call
and
xchg
mov
adc
or
and
dec
sub
sub
out
sbb
mov
repz
cmp
dec
sahf
movsb
and
les
push
mov
and
ja
iret
pop
das
fcomi
icebp
sbb
adc
dec
clc
int3
mov
lea
aaa
dec
movsb
pop
insb
mov
sbb
and
in
or
and
xchg
aam
pop
jne
add
xchg
repz
jae
aas
adc
int
sbb
dec
icebp
cmp
test
push
mov
add
sar
adc
pop
xchg
clc
iret
and
xchg
iret
mov
add
push
cltd
sbb
stc
push
cld
cmp
fstps
xlat
and
cmpsl
in
bound
nop
mov
xlat
hlt
dec
int3
and
dec
mov
movsb
lods
jecxz
sbb
inc
mov
lret
rcll
call
into
lea
sahf
xchg
mov
mov
das
scas
or
xor
aad
loope
ljmp
mov
or
movsl
mov
outsb
sub
mulb
and
ss
add
stos
lods
clc
fsin
pop
push
loop
pop
stc
jbe
or
decb
xor
stos
dec
inc
repnz
push
and
xor
stos
push
call
rcr
mov
push
jg
cmpsl
adc
notb
call
mov
scas
das
or
or
push
and
sbb
and
add
inc
mov
mov
cmp
iret
xor
push
and
jecxz
in
pop
repz
or
mov
xchg
in
cmpsl
dec
pushf
popf
pop
rclb
mov
dec
aam
mov
shlb
pop
and
int3
cli
jns
sbbb
iret
enter
add
jle
xor
xor
shll
fsubrs
pop
xchg
sbb
xor
or
fbld
arpl
mov
sahf
int3
fldcw
adc
or
xchg
enter
pop
div
pop
clc
js
and
cmp
ret
enter
cmpb
and
ficoms
dec
mov
std
or
fwait
adc
dec
add
mov
pop
cwtl
jmp
add
adc
and
or
inc
and
ret
pusha
mov
mov
jmp
jmp
in
cmp
mov
aam
xchg
mov
out
lods
jmp
popa
push
adc
pop
dec
out
nop
dec
insb
mov
sub
jnp
scas
add
or
push
inc
fistps
sbb
scas
int3
call
orl
and
cmp
push
out
sub
xor
ljmp
jle
push
les
sti
jecxz
cmp
pusha
popf
mov
rorb
scas
jmp
lahf
pop
xor
aam
mov
and
sti
and
push
fnsave
outsl
loopne
cmpsl
pop
or
jg
ss
or
jge
adc
repnz
int
cli
sub
and
jo
cmp
push
mov
jge
sbb
pop
mov
jbe
fcomps
cmp
xor
jg
scas
push
xor
and
scas
sbb
cmp
pop
dec
mov
es
mov
shlb
outsb
loop
xchg
cmp
sbb
push
js
mov
sub
jle
ds
sub
and
clc
push
add
cmp
jp
adc
xchg
xorb
aad
xor
xor
out
jbe
lcall
mov
insb
fists
jl
lods
mov
sti
in
dec
imul
nop
cs
dec
pop
mov
xor
lahf
push
call
fs
scas
punpckldq
push
cmpsb
cs
fincstp
mov
pushf
notb
shlb
stos
mov
mov
mov
enter
shlb
jbe
mov
je
add
sbb
scas
xchg
outsl
add
out
dec
cmp
cmp
and
cmp
fsubl
aaa
or
cwtl
mov
adc
cwtl
mov
inc
push
hlt
sbb
mov
roll
scas
pop
arpl
lods
addr16
out
cmp
repnz
mov
aam
lret
loopne
cmpsb
in
inc
shll
pop
call
sub
shl
pop
adc
inc
clc
imull
aad
dec
clc
scas
sarb
lods
out
scas
test
mov
inc
loopne
dec
dec
mov
xor
shlb
xor
adc
rorl
leave
lret
fisubl
fwait
outsl
shl
sahf
cmp
int3
lock
xchg
call
ret
inc
in
test
push
fistpl
mov
std
repz
arpl
inc
adc
dec
adc
mov
dec
scas
and
mov
mov
or
mov
shlb
hlt
popa
cmp
mov
ss
sbb
adc
mov
les
push
or
cmp
test
lods
cmp
sub
push
ficomps
adc
dec
jle
jg
jo
xor
call
mov
xchg
mov
in
push
inc
jmp
cmpsb
shlb
gs
push
cmp
or
rorb
dec
sbb
mov
adc
rcrb
add
int3
ret
ds
mov
push
jne
pop
xor
stos
cwtl
push
or
sar
aad
jmp
cmp
int3
bound
push
imul
int3
sbb
daa
movsl
mov
lods
jle
enter
hlt
into
sub
ds
in
jle
sub
sub
push
lods
cmpsb
int3
xchg
xchg
aam
iret
xor
insl
lahf
mov
pop
into
push
push
lcall
or
add
test
sub
movsl
mov
mov
mov
jl
sarb
and
lock
dec
and
in
dec
pop
dec
ret
and
mov
push
push
jge
jge
iret
lret
and
lock
push
push
idiv
scas
lods
fisttpl
sbb
lods
movsb
loope
xchg
rorl
fldt
mov
mov
or
mov
lock
jnp
sub
dec
out
outsb
lret
jmp
stc
in
mov
adc
int
iret
in
xor
adc
rcr
inc
cmp
pop
xor
xor
addr16
loop
push
mov
in
sbb
or
xchg
in
mov
add
sbb
sbbb
test
mov
cmpsl
outsl
les
repnz
or
cmp
pop
addr16
jg
mov
imul
das
sbb
out
push
lds
int
push
cmp
jle
and
inc
or
dec
loop
sbb
xchg
fbld
dec
xor
or
mov
sub
and
cmp
std
not
mov
mov
or
sub
andl
loopne
mov
add
mov
mov
enter
xor
push
popf
add
push
or
call
push
sarb
fisubrs
xchg
add
xor
jg
outsl
adc
les
and
leave
pop
mov
lds
insb
rcrl
enter
bound
cmp
xchg
push
mov
rolb
dec
outsb
mov
lea
ret
clc
test
xchg
loopne
mov
test
shl
mov
out
rcrl
jecxz
xor
lods
xor
les
pop
sarb
pop
pusha
aaa
mov
mov
push
iret
mov
in
inc
push
xchg
hlt
mov
jmp
adc
lcall
lods
dec
sbb
jge
std
addr16
out
lret
test
and
loope
sahf
cmp
ja
xchg
les
xor
dec
cld
sbb
clc
lock
and
daa
ret
cld
xchg
mov
sub
fucomi
out
push
mov
ret
jg
mov
sub
cltd
sbb
mov
insb
shlb
push
xchg
inc
jne
cmp
fwait
push
cmpsl
mov
add
lods
out
cmpsb
in
sbb
xchg
sub
scas
repnz
je
mov
or
ret
dec
lock
sahf
or
rolb
js
sub
mov
inc
insl
adc
mov
inc
adc
mov
fnstenv
xlat
rcll
lods
xor
push
fistl
int3
jmp
pop
sub
mov
das
dec
lret
pop
test
les
in
aam
mov
mov
jne
ljmp
push
cmp
xchg
mov
icebp
movsb
fdivl
lods
jae
test
in
cmp
lods
popa
cmpsl
cli
aaa
mov
xor
leave
push
repnz
xor
or
bound
lcall
pop
lods
xchg
popa
adc
ret
fucomp
hlt
sbb
cmp
adc
adc
jae
sbb
push
fsubrl
fpatan
lods
test
adc
movsb
ret
sahf
cmp
nop
scas
push
cmp
fadds
sahf
movsb
ret
nop
leave
jo
jecxz
jo
add
xchg
sarb
xlat
das
sub
pushf
cmp
sbb
sub
sbb
mov
mov
xor
xor
in
cmpsb
aad
cwtl
shl
aam
lret
iret
js
pop
pusha
test
push
pop
cmp
lods
cvtps2pi
push
stos
insl
sub
mov
iret
movsb
sbb
sti
out
mov
test
mov
add
add
pop
mov
call
mov
jmp
aam
in
mov
iret
out
ret
adc
jp
in
lods
xor
sbb
sub
sbb
int3
mov
sti
call
fsubl
in
cmp
xor
imul
jl
out
cmp
sub
repz
mov
xchg
pop
sti
int
aaa
je
add
or
insl
ror
aas
push
repz
mov
icebp
cmc
hlt
sub
insl
inc
adc
shlb
movsb
mov
xchg
inc
bound
sbb
xor
mov
popf
mov
mov
js
cmp
sbb
dec
call
out
repnz
mov
sub
iret
mov
xchg
pop
push
or
sar
mov
xchg
sub
aas
xchg
cmpsl
daa
aam
cmp
or
adc
push
ret
mov
movsb
into
pop
adc
sub
aad
jns
xchg
dec
dec
inc
cmp
adc
int3
cmpsl
jmp
pop
data16
mov
sbb
mov
pop
ds
jl
xor
std
in
xchg
inc
or
mov
jno
stos
push
xchg
mov
mov
fmull
mov
adc
int3
gs
add
sbb
enter
mov
sub
aaa
jmp
pop
aad
sub
mov
out
or
ljmp
aam
sbb
sub
inc
sbb
push
in
in
sub
adc
insb
int
popa
pusha
mov
aas
jae
mov
fdivrs
mov
push
pop
ret
into
lahf
js
and
adc
sbb
shlb
mov
or
push
stos
cli
add
jne
cmp
and
sub
sbb
enter
inc
mov
aaa
in
add
sub
test
xchg
pop
pop
pop
lock
add
ret
add
and
adc
mov
mov
mov
lahf
xor
and
jg
or
pop
sbb
pop
gs
mov
jo
dec
sbb
pusha
loopne
jo
adc
mov
push
and
mov
adc
ffreep
imul
lods
lds
lods
scas
mov
pop
std
add
xor
and
cmp
mov
repz
add
out
adc
jae
test
clc
pop
mov
mov
cmp
es
add
mov
inc
jbe
fsubrl
pop
lcall
mov
insl
cmp
inc
scas
adcl
repnz
jmp
xchg
std
fs
call
jne
push
mov
shr
scas
pmaxsw
jl
adc
adc
pop
ficompl
sbb
jae
push
mov
pop
pusha
xor
sbb
popa
mov
sub
out
scas
xchg
roll
pop
mov
inc
jo
push
pusha
out
pop
outsb
leave
in
scas
std
addr16
call
xor
scas
cmp
into
scas
dec
push
xchg
or
ret
js
imul
sbb
sub
cltd
xor
cmp
les
adc
dec
dec
mov
dec
aaa
sbb
test
es
dec
addr16
adc
sub
je
lcall
mov
cld
bound
pop
xor
xor
mov
icebp
mov
mov
jmp
and
pop
sbb
mov
insb
mov
call
push
inc
fucomi
lods
and
ss
sub
pop
add
ret
jnp
fisttps
adc
jg
mov
imul
bound
push
xor
jb
jge
movsb
arpl
jecxz
jbe
push
jmp
sub
cmc
addr16
or
out
dec
shr
sub
adc
movsb
testb
and
rorl
or
mov
test
mov
orl
call
push
dec
cmp
inc
xchg
inc
add
mov
push
inc
lods
xor
fldl
or
and
xchg
lods
cwtl
sbb
mov
dec
shrb
and
nop
shlb
adc
shr
inc
cld
pusha
xor
jne
insb
dec
dec
es
enter
jp
inc
aad
cs
pusha
sub
jo
and
ljmp
mov
dec
inc
ljmp
pop
push
mov
rcrl
orb
mov
lcall
xor
and
mov
sub
inc
ss
call
test
fldt
mov
ss
sub
and
shr
shlb
cmp
xor
ds
dec
sbbb
inc
and
sub
jmp
mov
nop
mov
inc
je
and
adc
ret
fistpl
lret
fldz
fistpll
inc
cld
dec
fwait
outsb
or
sub
bound
inc
cwtl
xchg
xchg
in
sbb
jecxz
sbb
lahf
mov
sbb
pop
sub
xchg
mov
fwait
jne
cwtl
xlat
int3
stos
mov
add
data16
call
rclb
lock
rdtsc
aam
pusha
mov
pusha
add
adc
pushf
popa
data16
cmp
inc
mov
rclb
into
adc
xor
outsb
lret
insb
inc
mov
rcl
push
adc
cwtl
sub
mov
mov
sub
mov
adc
adc
cmp
lret
push
or
fisubrs
push
pushf
and
jl
adc
cld
rcrb
pop
adc
inc
sub
nop
sti
shl
iret
push
rcpps
scas
rclb
pushf
imul
fwait
cmp
int
and
mov
int3
mov
push
lods
punpckhbw
sub
dec
xor
lods
fsubrl
enter
dec
pop
pop
mov
fadd
stos
jno
dec
lret
fiaddl
mov
inc
and
rclb
adc
lods
lret
pop
iret
dec
popa
out
fmul
aam
push
fdivs
in
outsl
adc
adc
and
icebp
add
push
mov
mov
in
sbb
mulb
dec
sbb
mov
xchg
push
xchg
ds
scas
loopne
lahf
mov
mov
mov
mov
movsb
pop
outsl
dec
xor
shl
mov
jae
fdivs
clc
fcom
mov
clc
cmp
mov
inc
pusha
push
sarb
mov
enter
into
push
sarb
xorb
xchg
loopne
adc
cmp
mov
shl
jb
ficoms
into
add
adc
xor
mov
inc
ja
int
push
pop
xor
nop
out
das
adc
cmp
in
mov
add
hlt
and
xchg
aad
das
adcb
lahf
cmp
das
mov
pop
test
pop
pop
push
cvtps2pi
xor
sbb
notl
dec
xor
shlb
shlb
xor
xor
ja
jae
inc
imul
iret
push
jbe
je
jno
pusha
jo
sbb
clc
sbb
push
and
push
int3
xor
aam
cmp
out
adc
mov
movsl
out
and
push
sti
jnp
aam
lea
lods
cmpsl
lahf
repz
pop
out
xor
out
fmuls
and
adc
sarb
pop
bound
dec
lock
ret
mov
mov
scas
pop
repnz
dec
adc
lds
and
xchg
les
ja
push
lahf
outsb
pop
cltd
xor
and
sub
cwtl
enter
cmpsl
arpl
dec
xor
test
pop
adc
xchg
and
out
jae
aas
loopne
push
shr
test
aam
outsb
aam
call
fcoml
shrl
xchg
rorb
je
cmpps
adc
cs
cmp
ficomps
push
sbb
sbb
pop
push
push
push
push
xor
insl
xchg
xchg
xchg
cmp
loopne
int3
and
aam
push
push
movsb
arpl
sub
movnti
call
push
push
lret
push
push
rcl
xor
test
pop
std
in
in
push
bound
and
pop
xchg
sbb
jmp
and
fsub
jg
sbb
out
mov
into
fwait
pusha
xchg
sbb
subb
lds
sub
xor
shlb
adc
outsl
dec
push
popa
pop
pop
aam
bound
sbb
cmp
mov
out
push
loop
outsl
nop
aas
rcrl
aam
test
out
iret
mov
pop
mov
jp
jecxz
cmc
dec
insl
leave
sbb
push
dec
adc
xchg
dec
gs
ds
push
push
out
push
inc
shrb
fcoms
sbb
ds
push
fnstenv
xor
pop
mov
cmc
lds
gs
mov
out
loopne
sub
xchg
push
cmp
scas
xchg
je
lock
or
xchg
and
nop
sbb
mov
and
lods
xor
mov
inc
mov
mov
pop
cmpsl
add
mov
mov
lahf
push
push
lods
in
adc
add
shrb
rcll
cs
lods
xchg
or
sbb
test
fs
subb
shrb
lods
sbb
out
mov
and
fwait
jno
hlt
lock
add
aaa
inc
push
add
orb
inc
xchg
adcl
int
pop
movsl
jno
adc
insb
jo
add
aaa
xchg
sbb
jbe
and
jge
minps
shrb
or
mov
mov
adc
add
fcmovnb
lahf
jmp
fstl
inc
jo
outsl
nop
sbb
stc
and
addr16
movsb
call
mov
or
in
cld
adc
cld
mov
push
out
sbb
jne
shlb
adc
sub
mov
cmp
pop
ljmp
gs
push
xchg
aas
in
dec
jne
inc
out
or
jns
adc
cld
sarb
sub
lods
dec
mov
enter
pop
sub
sub
enter
pop
push
rorb
mov
nop
cmp
ret
cmpb
push
outsl
shlb
into
mov
cli
loopne
rorb
gs
add
cvtps2pi
push
pop
dec
fwait
iret
int3
mov
repz
sbb
dec
aam
clts
shrl
lret
pop
xchg
jmp
xor
pop
ljmp
jp
aam
inc
adc
mov
push
jb
mov
sub
ljmp
movsl
fildll
mov
xor
nop
push
pop
aam
and
pop
xor
ucomiss
pop
xor
lcall
hlt
sub
sarb
lea
lar
lods
mov
lea
das
cmpsl
xor
xor
rorb
and
cs
push
xor
aaa
outsb
push
outsl
push
sub
shlb
mov
cmp
adc
das
and
sbb
sbb
push
xchg
fsubrs
pop
scas
enter
bound
mov
outsb
stos
pop
nop
fwait
sub
pop
dec
inc
push
xor
jge
xor
cmpsb
les
xor
sub
push
adc
cmp
xor
mov
mov
dec
repnz
cmp
inc
mov
je
ret
les
lret
fistpl
int3
xchg
xor
sub
scas
adc
loopne
push
outsl
call
xchg
xchg
mov
sti
xor
jbe
scas
test
sub
mov
add
in
das
cmpsl
je
mov
mov
push
inc
lods
pop
lahf
ret
orb
sub
data16
pop
ret
scas
cmpsb
rcrl
add
xlat
mov
mov
dec
mov
push
sub
jae
pusha
jae
dec
mov
mov
rep
hlt
pop
aaa
test
lahf
arpl
imul
inc
sarl
or
fwait
jmp
dec
loop
jno
arpl
adc
lcall
dec
push
lret
stos
cld
cmp
or
into
imul
mov
iret
jl
test
inc
out
in
pop
xchg
or
cs
rorb
shll
stos
sbb
xor
mov
lods
jae
push
nop
ret
inc
arpl
out
test
mov
ret
xlat
xchg
fsts
popa
and
mov
int3
daa
xchg
mov
ja
rolb
jg
movsl
adcb
cmc
push
pop
outsl
test
aas
xchg
push
pop
adc
sbb
cmc
iret
adc
xor
mov
pop
dec
push
add
fcoml
mov
mov
push
fisttpll
inc
in
lcall
xor
shlb
cmp
push
push
pop
push
loopne
adc
mov
test
test
pop
dec
stos
andl
inc
pop
xchg
mov
imul
mov
or
dec
enter
xchg
mov
sti
dec
inc
xor
mov
pop
fstpt
and
cmp
iret
xchg
dec
mov
out
mov
adc
pop
mov
push
pop
mov
repz
cmp
push
stos
iret
in
sub
inc
shlb
sub
pop
outsb
push
cli
push
and
ret
lods
pop
fwait
and
and
pop
in
adc
mov
aaa
and
adcb
pop
shrl
out
out
scas
cmp
and
cmp
les
js
mov
sub
xchg
xchg
jb
push
inc
adc
pop
or
sbb
or
in
dec
push
pop
insb
fs
subl
xchg
std
inc
rorb
out
rorb
fisubrl
jmp
lea
pop
and
xor
xor
pop
xor
and
imul
inc
jnp
xor
shrl
xor
call
lret
test
pop
cmp
ds
sub
into
lcall
ror
test
aam
test
rcll
inc
shl
xchg
fdivrs
lret
pushf
ljmp
mov
daa
adc
arpl
add
adcb
outsl
xor
or
movsb
mov
scas
das
mov
fs
xor
ja
shlb
lods
mov
stc
xchg
jl
sbb
or
push
jne
inc
loopne
inc
or
and
daa
adc
adc
inc
lods
push
outsl
pushf
add
cmp
add
rclb
pop
push
bound
dec
mov
pop
in
jnp
and
test
sysenter
sub
jmp
mov
cwtl
jo
lcall
pop
sub
xor
xchg
mov
fists
jmp
addl
jbe
sub
jl
repz
add
aas
xor
lods
dec
test
dec
in
jg
and
enter
xchg
adc
popa
stc
push
xchg
sbb
sti
jmp
cmp
sbb
fdivs
adc
mov
mov
test
push
pusha
divb
xchg
out
or
adc
xchg
xor
xorb
sti
mov
negl
loopne
cli
arpl
iret
sub
andb
pop
sbb
mov
les
nop
push
aam
sbb
sbb
dec
stos
jmp
addb
sbb
xor
push
or
push
lods
into
popf
pop
andb
adc
dec
xor
inc
adc
int
add
mov
ret
mov
pusha
sbb
popf
scas
jp
cli
cmp
mov
pop
mov
adc
jne
sbb
aaa
pop
aaa
xacquire
mov
loop
push
or
ljmp
enter
and
xlat
mov
lods
fsubr
into
or
cmp
dec
inc
test
nop
rorb
cmpsl
insb
in
jnp
xor
push
mov
bound
add
arpl
out
cmpl
adc
sti
mov
int
xchg
je
scas
nop
in
push
lcall
sahf
mov
xor
mov
mov
enter
adc
cmp
mov
pop
or
repz
lods
sahf
add
les
push
push
xor
xor
dec
or
lock
pop
daa
adc
cmp
je
mov
and
cmp
sbb
lods
adcb
add
ss
ret
xlat
scas
cmova
jle
xchg
cmp
jne
cmpsb
hlt
test
jl
dec
ficoml
add
and
push
cwtl
ljmp
test
jle
mov
pop
or
sub
push
scas
movsb
pusha
add
jl
lock
mov
sub
sub
push
sub
pusha
xchg
bound
mov
or
mov
sbb
or
cld
loop,pt
sub
pusha
xlat
and
jg
mov
mov
pop
int3
push
mov
lahf
push
aas
xchg
aaa
punpcklbw
cltd
push
sub
sbb
mov
sub
in
add
fdivrs
sub
or
movsl
sub
leave
andl
jns
fisubs
cmp
xchg
xlat
sbb
call
ljmp
and
les
sbb
adcl
or
xchg
shll
jecxz
nop
cmp
ret
movsl
sbb
xchg
dec
aad
cmp
and
xchg
cmp
mov
xchg
jmp
bound
push
sahf
push
xor
lock
cmp
lods
jne
rcll
int3
xor
adc
and
rcr
out
outsl
mov
mov
popa
cmp
mov
sbb
mov
sbb
xchg
xchg
jmp
movsb
ret
ror
lods
loopne
jae
fcom
mov
fistpl
cmpsb
pop
add
jmp
les
mov
aad
mov
fidivrs
in
xor
shlb
push
push
mov
and
lods
mov
mov
lcall
loope
aam
xor
outsl
sub
sub
inc
or
dec
xor
jae
scas
fmuls
sbbb
ret
sub
mov
sbb
cmp
sub
inc
loopne
adc
adc
shlb
fistps
dec
adc
mov
push
fstpl
adcb
ficoml
lret
fists
xlat
add
ljmp
xor
nopl
mov
add
nop
in
push
mov
rolb
and
xchg
pop
push
movsb
clc
rclb
lock
out
lods
out
jp
mov
outsl
push
into
out
aad
iret
mov
xor
pop
sbb
mov
pop
xchg
aad
or
xor
rclb
ret
mov
and
push
and
lods
mov
fnstenv
xor
mov
arpl
lods
out
push
out
jns
ja
xchg
outsl
adc
pop
cwtl
mov
or
paddusb
lods
and
test
xor
adc
test
fidivl
mov
xor
ljmp
adc
push
xor
nop
stos
aad
cmpl
mov
pop
lds
sbb
decb
stc
xchg
out
aad
cmovl
test
pop
xchg
aas
push
xor
jg
push
jl
or
sub
push
adc
add
xchg
mov
jo
cmp
jg
mov
sbb
push
mov
aam
mov
and
repz
push
int3
push
sbb
inc
jle
fnstsw
xor
jmp
clc
push
jg
bound
cmp
lcall
mov
cmp
xor
mov
sbb
frstor
movups
shrl
rclb
lods
daa
pop
int
or
jbe
shrb
adc
pop
xor
mov
xorb
sbb
jno
aam
cmp
fiadds
mov
pop
popa
xchg
jns
sbb
sahf
jae
aam
jmp
dec
insb
adcl
mov
scas
push
mov
jl
adc
lock
cmc
inc
jnp
rol
cmp
xor
jnp
rep
push
add
icebp
sub
push
or
lahf
add
mov
popf
push
sarl
mov
pushf
cmp
pushf
push
adc
xchg
fadds
out
cmp
jle
nop
sub
cmpsb
jne
enter
or
nop
outsl
mov
mov
push
test
cld
sbb
fadd
in
dec
les
jo
popf
xchg
icebp
loopne
bound
cmc
mov
outsl
sub
xchg
call
cmp
mov
sbb
repz
jbe
xor
negl
in
fcoml
shrb
adc
lods
ret
xchg
repz
je
movl
jo
or
lret
cmp
hlt
jbe
neg
xor
sub
jne
add
sbb
pop
cmp
pop
sahf
leave
pusha
test
fsubrs
iret
or
out
sub
das
pusha
scas
sbb
lret
mov
lods
mov
push
sub
jecxz
faddp
sub
or
popa
cmpsl
xor
lret
mov
xchg
les
and
lds
xchg
pop
or
push
dec
inc
adc
sbb
cmp
xlat
sbb
mov
add
inc
lea
sub
jle
add
popf
lcall
inc
cmpsl
add
sbb
adc
adc
pop
lret
push
insl
pop
push
mov
sub
mov
mov
lret
push
sarl
mov
xor
fidivrs
stc
ja
xlat
dec
pop
pop
dec
inc
hlt
sbb
xchg
inc
push
fisttpl
sbb
sbb
lods
rclb
add
adc
inc
jbe
test
jb
cmp
mov
mov
ret
jg
in
xchg
push
sarb
cmc
and
sbb
outsb
xchg
mov
lods
add
inc
lcall
pop
cmp
sahf
xchg
aas
rclb
aas
cmp
into
pop
shrb
int3
ds
sbb
mov
ret
sub
lods
and
mov
pushf
push
push
enter
mov
rcrl
test
ror
out
shlb
xchg
add
sbb
testb
stos
jno
sub
daa
pushf
fstp
xchg
adc
and
andl
mov
xor
das
adc
nop
add
enter
fst
lcall
nop
cmpsl
jae
cwtl
mov
call
addl
sub
xor
adc
mov
xor
push
lahf
mov
or
shrb
inc
data16
sbb
jle
xchg
std
ror
and
pop
mov
int3
xchg
and
push
lods
andb
dec
push
sbb
jg
loopne
or
cmp
or
sti
xchg
cli
insl
cmp
enter
xor
sarb
pushf
inc
pop
into
enter
mov
fwait
xchg
ljmp
mov
ret
dec
xlat
stc
jecxz
mov
and
push
scas
inc
sbb
mov
push
pop
inc
adc
aaa
fldcw
cmpsb
lea
mov
nop
sub
jae
and
loope
cld
xchg
and
hlt
adc
dec
rclb
test
jbe
jmp
xor
fcmovu
inc
nop
inc
adc
jno
cmp
xchg
notb
sub
xlat
jecxz
inc
aas
pop
ljmp
ret
aad
push
fs
inc
sub
jbe
in
cmp
pop
lea
cs
lods
and
or
test
aam
jo
mov
fcmovb
scas
push
cmpsb
leave
je
pusha
xchg
sahf
shr
iret
inc
jnp
adc
enter
xlat
dec
sbb
cmc
cmp
scas
data16
mov
and
adc
xchg
int3
mov
outsl
sbb
sbb
mov
xor
mov
and
shrb
sbb
sub
outsl
sbb
and
mov
and
pop
enter
rcr
xor
mov
pop
xchg
ficomps
clc
and
mov
xorl
fcmovnb
push
sti
add
pop
roll
sarb
mov
inc
mov
call
xor
sub
xor
icebp
inc
out
mov
inc
clc
aaa
movsl
xchg
dec
xor
pop
inc
cmp
ret
repz
or
fadd
xchg
insl
aad
push
bound
outsb
mov
cmpl
or
xchg
daa
in
orl
mov
fsubrp
push
mov
aas
pop
and
pop
jp
nop
mov
push
pop
test
pop
sub
cmpsl
add
fists
mov
shrb
sbb
sbb
rolb
lea
mov
shlb
cld
aas
fdivs
mov
xor
clc
pop
es
cwtl
adc
lods
push
pop
mov
sub
or
xchg
pop
rcl
movsb
hlt
les
and
mov
push
psadbw
dec
test
fcmovne
into
fbld
xorl
dec
in
rcr
mov
ficomps
int
pop
jo
out
push
mov
movb
outsb
dec
fidivrl
jp
pop
stos
fsubrs
dec
mov
jb
inc
ljmp
xor
sbb
pop
pop
test
push
int
ja
push
test
lar
push
loop,pn
sbb
lcall
scas
cs
sbb
push
xchg
xor
addb
jl
and
das
add
xchg
mov
push
enter
mov
test
sbb
movsl
adc
aam
adc
sarb
sarb
cmp
ror
sub
insl
mov
enter
xchg
test
enter
push
jmp
or
inc
mov
out
jle
push
sbb
or
adc
mov
push
or
ret
clc
shll
insl
aaa
jge
adc
fldl
cmp
adc
xchg
ret
addb
jns
jge
mov
out
lds
cmp
or
imul
add
repz
out
fadds
push
sbb
lahf
shlb
fsubrs
mov
fidivl
add
lods
fists
push
xor
aad
test
sub
subl
pop
rcrl
push
add
jae
mov
int3
in
mov
mov
and
xor
iret
aas
mov
aas
movnti
stos
stc
insl
in
sbb
sub
insb
pusha
adc
lods
rcrl
add
sbb
xor
int3
nop
add
sub
lods
rcll
mov
lahf
sub
into
jecxz
lods
mov
jns
adc
xor
in
add
pushf
ljmp
sbb
push
mov
sbb
outsb
cmpsb
lea
jg
ret
push
fnstcw
mov
subl
aaa
shrb
fsubl
mov
xchg
cmp
andl
sbb
mov
pop
and
xchg
aas
inc
fstpl
sub
lea
jb
in
cmp
push
imul
frstor
mov
cmpsl
xchg
iret
xchg
xchg
or
xor
rclb
jae
outsl
cmpl
sub
xor
lea
xor
cs
pop
js
enter
sub
push
cwtl
push
xor
mov
sbb
sbb
adc
or
xor
inc
mov
sahf
sbb
es
mov
in
out
sub
xor
movsl
push
mov
dec
test
in
pop
mov
pop
jne
xchg
popl
les
imul
dec
bound
out
enter
push
je
dec
pop
shll
daa
data16
loop
jbe
or
pushf
mov
lret
add
cmp
je
mov
out
adc
inc
cmc
ljmp
cmp
bound
or
and
jns
sahf
lock
sahf
pop
lods
int
rol
pop
mov
mov
sbb
out
jne
aam
stc
cltd
pop
insl
rclb
xchg
mov
sub
or
imul
lahf
add
loopne
leave
lret
fimuls
mov
stc
out
and
int
ror
rcll
dec
xchg
stos
enter
lods
add
cmp
outsb
inc
and
and
pop
js
dec
mov
and
jp
mov
xchg
out
jbe
lahf
out
mov
adc
adc
jae
mov
int
jg
sbb
enter
cmp
mov
les
fcmovnbe
mov
daa
mov
test
in
imul
insb
jmp
sbb
fstpt
adc
or
mov
mov
and
push
scas
imul
cs
sbb
loopne
jo
iret
scas
pop
jbe
arpl
call
dec
arpl
mov
fldt
rolb
xor
mov
popf
mov
or
dec
jl
pop
ja
orb
push
hlt
push
jge
adc
and
cs
adc
xor
movsb
shlb
shrl
and
insl
pop
outsl
decb
fidivrs
pop
and
lss
push
enter
fwait
xor
aad
push
popa
ss
insl
loopne
aam
adc
sub
xchg
cmp
leave
and
sub
sbb
push
add
push
pop
jmp
inc
out
fidivl
je
pop
shl
lods
fcoml
pushw
cmpsb
mov
cmp
mov
sub
mov
jecxz
and
loopne
test
lods
cmp
add
in
xlat
int3
mov
or
out
shlb
jb
pop
push
adc
xlat
fnstenv
mov
cs
xor
and
mov
pop
mov
jne
iretw
cmp
int
subl
push
scas
mov
shlb
jg
lods
dec
cmc
shl
jo
push
out
pop
cmp
mov
ficomps
jmp
out
dec
dec
and
in
repnz
lret
adc
cmp
xchg
pushf
cmpsb
pop
insl
push
lods
dec
xchg
sti
dec
cmp
lcall
lock
rorb
sub
inc
push
xchg
add
jecxz
add
jo
mov
add
and
and
aaa
mov
xlat
add
sbb
call
pop
dec
cmp
mov
ficomps
out
xor
pusha
aam
test
add
mov
mov
xchg
cmpsb
add
mov
movsb
push
rclb
loopne
jae
lods
daa
cmpsb
xor
push
nop
call
cli
sub
xchg
mov
lods
out
add
sti
jecxz
and
jmp
jae
int
cmc
pop
rorb
sbb
aaa
add
mov
cli
sbb
mov
xchg
pop
cltd
ja
outsb
xor
xchg
inc
jae
ljmp
insb
jle
out
or
cli
ja
dec
in
test
sbb
dec
out
outsl
mov
cmpsb
dec
sub
test
and
jg
adc
mov
mov
cs
test
shr
insl
shlb
lods
push
idiv
sub
das
pushf
xor
push
push
clc
pop
adc
or
cs
rcrl
outsb
lods
sarl
dec
push
sub
rcrb
pop
loopne
mov
dec
mov
les
mov
cwtl
sub
sub
jo
aas
lahf
dec
pushf
lea
cmp
pushf
lret
push
pop
aam
mov
and
add
jbe
cmp
dec
sub
jmp
xlat
sbb
adc
ret
loop
jno
or
daa
pop
ret
cmp
pop
dec
push
loop
push
cmpsl
xor
xlat
adc
mov
xchg
adc
in
sbb
mov
fdivrs
jle
dec
push
hlt
lods
fisubl
data16
xor
ja
cs
cmp
sub
inc
mov
mov
jae
mov
jo
lcall
test
popf
mov
or
push
xlat
sub
cs
lret
and
or
cli
or
jl
and
movsb
dec
insl
js
xchg
sub
adc
xchg
xchg
cltd
push
pop
lcall
lods
pushf
andb
pop
mov
movsl
fdivr
cltd
ljmp
lods
pop
pop
inc
sub
insl
xor
inc
push
mov
addr16
mov
jp
scas
xor
daa
xchg
gs
mov
pop
add
push
mov
sbb
or
cwtl
xchg
daa
mov
bound
repnz
push
out
out
jo
mov
rorl
add
loopne
int3
imul
fisubl
das
movsl
and
rclb
stos
dec
out
jno
cmp
inc
movl
dec
inc
sub
orb
fnstenv
sbb
xor
cmpl
xlat
mov
push
cmp
push
loopne
mov
inc
sub
loope
fbld
mov
cmp
js
jns
outsb
dec
mov
jle
mov
inc
or
xor
ret
pusha
push
test
add
in
pop
ljmp
add
ja
adc
adc
mov
ss
cmp
rorl
xchg
xchg
out
iret
sbb
bswap
mov
xor
pusha
sbb
fcompl
and
ja
out
lret
fistps
mov
shrl
inc
lahf
cltd
push
lds
popf
repnz
or
mov
fldt
bound
pop
mov
mov
imul
sbb
jmp
out
jge
fdivl
mov
in
lods
fwait
push
mov
dec
test
dec
cs
sub
add
mov
dec
mov
lret
outsl
and
adc
setle
sub
cmpsb
rcr
imul
and
cmpsb
pop
pop
sub
xchg
fbld
shlb
ds
push
pusha
into
loop
mov
adc
rorb
cltd
and
loop
push
cmp
fsub
into
icebp
int3
or
das
jnp
push
mov
fsubp
pop
push
add
ret
cmp
mov
mov
iret
jo
sar
cmp
dec
into
cmp
sarl
jg
ljmp
jg
xor
and
sub
xchg
rcl
push
and
scas
addr16
xchg
mov
insl
out
popa
inc
cli
and
dec
and
lods
xor
add
mov
stc
daa
xchg
into
lcall
sub
test
clc
sbb
sti
xor
dec
pop
lea
mov
jno
mov
enter
mov
es
popa
dec
clc
and
loopne
dec
and
dec
push
push
and
les
mov
into
fdivrs
add
inc
pushf
pushf
cmp
je
mov
fsubs
int3
roll
aam
sbb
int3
rorb
scas
shl
xchg
fildl
xor
add
fcmovnbe
or
push
shl
mov
lahf
cmp
arpl
inc
iret
xlat
cmp
mov
lahf
mov
sti
pop
les
ret
stos
rcrl
aam
cltd
adc
fsubr
bound
pop
ret
push
push
aam
add
dec
adc
psrlw
sbb
jne
aas
sub
cmpb
sbb
mov
call
push
addr16
js
inc
int
js
int
shll
clc
pop
and
lret
and
shr
mov
push
xchg
aam
cmp
int
in
call
cmp
xchg
pop
push
push
jb
pop
rcl
or
call
setb
out
sbb
jmp
mov
cmp
rcrl
cmpsl
inc
xor
movsl
xlat
out
pop
shlb
inc
or
shlb
xor
mov
pop
ret
cmp
pop
pop
mov
xchg
xor
lds
aas
push
loopne
fs
ret
push
andb
fisttpl
xor
ljmp
pop
push
shrl
lahf
mov
add
fcompl
dec
xchg
mov
in
int3
gs
jge
or
jmp
mov
rorl
bound
pop
aad
mov
add
mov
test
push
pusha
dec
clc
xor
jno
xchg
lret
sahf
imul
shl
mov
sbb
loopne
cmp
mov
es
sub
loop
push
js
lahf
push
inc
push
jge
or
mov
out
ret
aas
push
fs
into
sbb
repz
add
insl
xorl
call
movsb
lods
dec
pop
or
and
cmp
sub
mov
or
sbb
sbb
mov
fs
mov
rolb
inc
push
adc
sub
jne
out
push
ret
mov
dec
mov
js
int
xchg
fwait
cmp
call
in
aam
fsubr
sub
xorb
lea
loopne
xor
popf
xor
cmp
jmp
push
ud0
pop
inc
shl
fsubrs
lock
shr
pop
push
lcall
sub
js
lret
mov
cmp
jp
rcll
add
rolb
shl
xor
push
sbb
sar
mov
in
adc
rcll
stos
cmpl
imul
cld
iret
lods
imul
pop
scas
test
test
loopne
push
dec
mov
push
aas
imul
fildll
scas
add
andl
shrl
cmp
pusha
and
push
dec
cmp
in
aad
les
xor
ss
cmp
bndldx
adc
std
jno
push
pop
rcrb
fsubs
xor
test
cmp
dec
mov
xchg
sub
outsb
and
and
fsubrs
std
mov
je
out
ds
cmc
push
mov
andb
stos
aam
ret
push
ja
push
std
iret
pop
or
out
stos
lods
inc
add
and
cltd
pop
pop
pusha
iret
addr16
clc
aam
jecxz
test
push
xor
mov
fistpll
mov
cmp
add
jl
mov
lea
xlat
daa
rorl
dec
add
dec
rclb
cs
das
mov
pop
pop
cli
out
or
pop
psrld
push
sbb
aam
aas
inc
in
xchg
sub
sub
mov
fsubl
arpl
push
test
loopne
das
or
fcomi
push
shrb
movl
bound
sub
sbb
fidivl
fsts
jno
mov
iret
test
inc
push
insb
in
mov
mov
fs
das
adc
iret
mov
outsb
sbbb
out
add
lret
cmpsl
push
mov
sbb
arpl
xor
mov
ret
mov
sub
cmc
ret
rclb
inc
das
adc
dec
cmp
loopne
es
call
adc
ja
push
shlb
test
xor
xor
mov
iret
gs
sahf
repnz
xchg
mov
lcall
jne
loopne
xchg
out
lods
and
or
jbe
mov
push
and
lods
jle
or
add
fsubrl
and
mov
repz
mov
pmuludq
sbb
negl
sahf
daa
mov
daa
test
pop
cmp
xor
cmp
leave
lahf
jl
lods
jge
mov
mov
outsl
rolb
fsubrs
lahf
into
inc
jo
outsl
cmp
and
mov
rcrb
mov
cmp
dec
hlt
add
out
in
mov
aad
gs
adc
lcall
loop
sarb
pop
imul
lahf
jecxz
dec
nop
push
jge
rcll
sbb
repnz
inc
xchg
das
rcrb
push
pop
mov
xor
mov
call
rcr
lahf
fwait
mov
pop
je
in
xchg
enter
loopne
and
mov
xchg
rcll
enter
lret
and
loopne
or
jmp
add
out
mov
and
dec
xor
outsb
push
test
sbb
cwtl
movsl
imul
inc
lahf
es
pop
jge
scas
js
pop
sub
pop
icebp
and
adc
pop
mov
or
push
data16
nop
sbb
lock
aas
inc
inc
adc
inc
enter
ss
xor
pop
jns
and
int3
xor
pop
divl
fcomi
pop
ljmp
jns
xchg
adc
jo
push
pop
mov
jnp
mov
cmpsl
lods
loope
pop
iret
incl
cld
data16
dec
stc
mov
popa
loopne
push
fnstcw
xor
xchg
push
adc
mov
lds
mov
jmp
cmp
test
sbb
adc
jg
iret
xchg
jo
mov
push
xchg
add
mov
mov
mov
jns
pop
and
int
hlt
jge
jg
lcall
adc
js
ret
nop
sub
outsb
lea
divb
sbb
push
adc
iret
adc
push
jae
jecxz
mov
fsubrp
lds
and
pop
xor
dec
cs
xchg
enter
data16
adc
ret
xchg
sub
out
push
insb
adc
cmp
mov
sub
int
inc
sub
scas
sti
fldl
in
decl
pop
neg
mov
mov
xor
sub
mov
cmp
ljmp
jno
lods
loopne
ss
out
and
sti
not
leave
jno
pop
xchg
das
shrl
lret
in
mov
cmp
mov
popl
xchg
in
jns
orb
cld
into
lods
lret
call
lods
out
clc
mov
loopne
pushf
dec
and
cwtl
pop
or
scas
cmpsl
call
xor
inc
sbb
int
movsb
sub
mov
ss
test
jb
iret
scas
daa
es
push
cmpsb
mov
out
xlat
popf
insl
jno
pop
stc
push
loopne
push
sbb
enter
insb
push
test
jecxz
jl
lods
xorb
ja
mov
mov
mov
xor
aam
fldl
lods
outsl
cmp
and
mov
iret
imul
or
pop
cs
xor
sti
and
adc
jle
movsb
bound
ds
hlt
adc
sbb
cld
rolb
mov
or
int3
lods
pop
xor
shlb
aaa
idivb
and
push
xchg
std
inc
pushl
push
sti
dec
das
dec
jbe
dec
sti
sbb
mov
test
sarl
sub
fadd
dec
shrb
mov
inc
mov
hlt
ja
sbb
sbb
testl
xchg
shl
aaa
sub
mov
out
sub
mov
int
in
lcall
je
daa
sbb
rcrl
out
xor
sbb
xchg
test
scas
xor
jp
jmp
ret
aam
test
push
mov
ss
lods
xchg
mov
cmp
roll
xor
pop
dec
mov
sbb
ds
sbb
adc
xchg
push
jno
bound
mov
mov
fcompl
push
daa
sbb
insb
aam
push
aam
jmp
js
popf
adc
push
sbb
inc
inc
mov
aaa
cltd
mov
frstor
mov
cmp
xchg
insl
test
insb
int3
dec
fdivrs
push
mov
cmp
pop
enter
mov
je
into
mov
mov
das
leave
jg
repz
bswap
pop
push
push
or
mov
rolb
shl
xchg
pop
jae
mov
aas
cwtl
aas
push
jo
sub
rolb
mov
stos
aam
xchg
mov
and
aam
xchg
outsb
jae
and
loop
sbb
pop
out
sbb
or
stos
aam
aad
sbb
ret
or
push
sub
cld
data16
and
jae
inc
push
jnp
pop
es
lahf
rolb
lahf
add
test
ret
inc
cmp
push
nop
fwait
inc
fcmovbe
jnp
das
pop
aas
insl
push
test
add
lret
movsb
cmpsb
add
lods
cmp
sub
cmpsl
mov
cmp
mov
test
jnp
ret
mov
data16
dec
dec
pop
mov
push
outsb
in
jecxz
mov
pop
into
mov
jae
imul
mov
in
xchg
pop
cmp
xchg
fcmovnb
icebp
xchg
in
mov
xchg
xchg
inc
cmp
adc
cmp
jnp
out
push
jl
lahf
mov
push
lock
vunpcklps
mov
push
jnp
and
loopne
cwtl
ret
cs
xchg
mov
mov
hlt
push
shll
loopne
fcompl
ret
lea
out
and
enter
sub
je
lods
jg
sbb
fisubs
xchg
bound
fildll
adc
cmp
mov
dec
loope
sbb
ss
xchg
ret
push
shrb
jo
shrb
cld
mov
outsl
loopne
and
pushf
rclb
xor
mov
adc
jae
mov
lods
add
int3
int
pop
sbb
add
pop
pushf
lods
das
mov
pop
or
pop
in
lret
push
adc
cwtl
imul
xchg
out
add
mov
inc
push
jno
addr16
dec
out
xchg
in
adc
and
jp
mov
add
dec
cmp
or
add
mov
push
jb
jmp
lcall
movsb
jns
mov
aam
xor
mov
sbb
jae
std
mov
pusha
adc
into
lret
popa
or
in
aas
mov
insb
adc
pop
pusha
jnp
mov
sbb
adc
push
push
inc
xlat
aas
add
jle
ficoml
imul
and
mov
sbb
mov
insl
xor
adc
adc
test
gs
scas
cmp
arpl
and
pop
ja
mov
jbe
sub
ss
cmc
aad
sub
hlt
aam
sbb
jnp
xchg
sbb
negb
out
mov
dec
rorb
sarl
jge
pop
mov
jmp
dec
ljmp
cmpsl
push
xchg
stos
lret
divl
mov
push
xchg
add
shlb
lds
fcmove
stos
or
cmp
pop
pop
ss
jl
in
ret
std
in
inc
xor
call
mov
pop
shl
pop
sarb
and
into
adc
repnz
pop
gs
sub
insb
sbb
jmp
xchg
adc
rcl
sub
cli
fcomip
cmc
cmp
mov
adc
jmp
sbb
jle
mov
adc
push
add
cld
aaa
in
icebp
adc
pop
sbb
cmp
nop
leave
add
adc
jl
sub
out
pop
pop
mov
mov
adc
aas
or
mov
xchg
icebp
fcmovne
inc
and
sub
push
add
popf
inc
push
out
jmp
ss
push
clc
adc
jo
into
add
mov
push
repz
pop
js
adc
lds
aaa
adc
jmp
cltd
xchg
dec
aas
jbe
and
popa
jg
scas
clc
popa
pop
call
lret
rorb
psrad
fsubrl
out
jns
sub
mov
jmp
aas
pop
dec
and
push
jl
add
mov
mov
cmp
dec
stos
iret
shlb
xor
sti
fildll
cmp
push
sbb
jo
sbb
test
add
push
push
aaa
dec
pusha
test
fldt
jl
enter
cmp
xlat
xor
aas
decl
xlat
or
movsb
fcmovb
mov
icebp
pop
mov
cmp
inc
inc
adc
mov
pop
lea
jo
cmp
shlb
inc
xor
mov
sar
sbb
mov
xchg
movsl
inc
repnz
outsl
pushf
sti
mov
cmp
stc
add
je
lahf
xchg
cmp
clc
xor
sub
pop
add
xor
dec
push
cs
cmp
out
push
out
mov
push
dec
add
ja
inc
jl
mov
adc
sub
push
jmp
out
out
pop
or
dec
mov
inc
cmc
lds
push
add
xchg
lret
out
xor
adc
jae
lahf
shl
xchg
rcrb
scas
iret
jo
and
scas
roll
frstor
into
es
xchg
mov
cmp
scas
lahf
push
pop
pmullw
clc
pop
aaa
sub
jbe
mov
add
incl
in
repz
into
ss
les
push
sub
fs
cwtl
lret
lds
daa
sub
dec
push
push
sub
pop
xchg
bound
mov
call
je
sub
out
xor
sub
jmp
lods
or
repnz
push
xor
mov
jo
jg
shrb
fs
push
mov
fdivp
adc
inc
dec
jl
cmp
mov
js
mov
xchg
loope
sahf
push
inc
outsl
inc
int
and
rolb
cmpsl
push
sbb
lret
sbb
sbb
lods
out
add
mov
pop
mov
popf
fidivrs
mov
aaa
push
cmp
push
ja
mov
push
out
sti
sub
inc
adc
shlb
sbb
xchg
dec
mov
fstps
cmpsl
jae
insl
shr
or
scas
push
leave
int3
loop
lods
push
add
iret
xor
imul
fsubl
sbb
lods
cwtl
or
xlat
inc
in
ljmp
dec
lods
push
mov
fnsave
mov
lods
mov
sbb
push
inc
and
or
lods
int3
rclb
lods
shrl
daa
sbb
xor
inc
or
xchg
ja
shlb
iret
aaa
and
mov
iret
cwtl
mov
arpl
loop
lods
rcl
clc
les
jge
out
or
stos
mov
adc
cmp
fsubl
jo,pt
cmp
gs
inc
repz
pop
imul
mov
andb
jae
testl
push
mov
movsl
pop
imull
fimuls
test
mov
mov
jge
mov
clc
sub
sbb
sbb
sti
dec
cli
push
shrb
push
jo
jno
mov
clc
rclb
lock
out
push
adc
dec
and
dec
add
ds
cld
adc
lret
dec
lods
jno
int3
fimuls
data16
cmp
ret
outsl
adc
jmp
into
les
mov
xchg
fsubrl
adc
push
aaa
mov
xor
pop
test
nop
dec
cmp
dec
xor
cmpsl
dec
imul
imul
adc
or
pop
push
and
dec
pop
lahf
xchg
or
clc
gs
ret
pop
jae
scas
jnp
fs
mov
lods
dec
rcll
call
cwtl
ret
scas
lods
sbb
mov
pop
cmp
cs
lods
dec
inc
push
jl
pop
pop
daa
sub
stos
aaa
add
mov
mov
pop
push
cmp
roll
xor
jbe
inc
mov
cs
pop
dec
add
into
je
in
das
ss
int3
pop
pop
add
fcoml
push
addb
pop
loopne
jg
sub
rcl
and
es
pop
fisubrl
ret
test
push
jnp
sbb
mov
lret
ds
and
sub
fcoml
sub
add
aam
shrb
sbb
adc
cmp
and
dec
mov
mov
inc
or
scas
mov
jle
mov
insl
aaa
push
jns
mov
fstpt
and
pop
pop
mov
ss
pushf
push
inc
in
mov
mov
dec
and
shr
shlb
mov
adc
pusha
adc
or
add
cmp
clc
popa
adc
pop
adc
and
mov
lahf
cli
and
jg
push
mov
js
push
xchg
fistps
xchg
lods
mov
mov
movsb
int
andl
call
mov
aam
hlt
popa
sarb
cld
mov
clc
scas
sub
fs
or
in
inc
pop
mov
movsb
icebp
jmp
cmp
fadd
cmp
test
xchg
out
andl
jge
sbb
pop
push
das
in
outsb
sub
jb
dec
adcl
jp
psrlw
sub
int
xchg
or
pop
mov
mov
cmpsl
movsb
in
enter
fcompl
xchg
lods
int
mov
in
outsb
int
out
add
scas
and
popa
and
jnp
sub
push
test
xor
sbb
cmp
lret
mov
loopne
mov
xchg
sbb
fldenv
or
adc
and
jmp
enter
dec
push
rcrl
or
fistl
fists
repz
cmp
cld
rorb
stos
fcompl
jne
repz
sub
nop
mov
sub
push
ret
sub
enter
push
ret
cs
lahf
adc
rorb
subl
hlt
rolb
mov
or
aad
shll
xchg
enter
ss
enter
inc
jbe
pop
and
lock
scas
and
notl
jae
mov
cmp
jg
fistps
jmp
xchg
mov
and
mov
mov
and
outsb
and
jge
push
mov
shlb
push
pop
gs
int
jnp
adc
jmp
cmpsl
xor
test
xchg
xor
dec
mov
xor
rorb
movsb
cmp
int3
aaa
ss
or
sub
call
sub
hlt
andb
les
mov
aam
rolb
cwtl
jb
jge
nop
fcomps
xor
dec
sub
adc
xor
movsl
push
sbb
xor
shrb
push
aaa
mov
enter
pusha
popf
adc
sahf
lods
lahf
jle
in
pop
psubsb
pushf
sub
or
add
sub
daa
pop
adc
cmc
sub
test
pushf
and
dec
or
mov
clc
adc
sarl
and
mov
sarl
add
add
jb,pn
add
mov
orb
and
pop
lcall
das
lods
mov
lahf
lahf
lock
lock
or
xchg
jg
testl
and
adc
call
mov
mov
jae
mov
cmp
lret
lahf
stos
bound
jg
pushf
cmp
cs
fwait
push
fdivs
jnp
mov
xchg
enter
clc
sbb
sub
jae
or
xchg
cwtl
xchg
outsb
int
xchg
fidivs
jae
call
icebp
push
out
hlt
das
jmp
cmp
pop
ljmp
push
int3
adc
lods
fildll
mov
adc
scas
xor
int3
popl
lds
cmp
cmp
enter
orb
into
shrb
inc
mov
adc
arpl
aam
mov
je
aaa
mov
inc
fdivrs
lds
xor
fmull
adc
add
dec
pop
mov
cmp
in
lock
lock
out
push
in
fidivrl
pushf
cmp
jg
pop
in
stc
cld
xor
mov
inc
mov
and
and
into
aad
nop
mov
sub
and
lcall
xchg
mov
adc
cmp
bound
sbb
adc
dec
mov
aad
aaa
xor
add
cmpb
ss
lret
fimuls
out
sbb
jp
ss
sub
popa
les
pop
or
nop
mov
enter
mov
clc
push
in
cwtl
imul
lret
nop
bound
sbb
lods
scas
inc
int
dec
sub
push
or
add
ljmp
shlb
mov
cmp
pop
jns
jl
and
xor
stos
fcmovne
icebp
and
inc
ret
adc
and
and
aas
and
js
or
das
add
fcoml
add
xor
lcall
mov
cmpb
inc
mov
cmc
cmp
and
and
imul
mov
out
enter
lods
cmpsl
loop
rcl
cmpsl
cmp
lret
loop
pop
adc
mov
xor
adcb
mov
daa
aaa
movsb
lock
std
sarb
shr
popf
rcrl
add
jnp
adc
pop
mov
scas
mov
mov
andb
jp
xchg
fsubl
mov
std
test
in
mov
nop
sbb
push
cmp
jo
aas
int3
mov
adc
mov
cmp
fcoml
mov
pusha
sahf
int
fdivrs
jmp
das
int3
ds
fnstsw
mov
sbb
cmp
adc
movsb
and
int
cmp
xor
cld
and
mov
mov
and
ss
lret
iret
push
jle
jns
xor
clc
lea
adc
fistps
and
daa
cs
aam
xchg
mov
ds
add
sub
lret
in
jnp
sub
dec
sarl
dec
aam
lds
cmp
or
repz
push
cwtl
mov
mov
nop
pop
adc
aam
adc
enter
jb
punpckldq
in
lahf
fnstcw
push
xchg
jns
jg
inc
ficomps
cmc
movsl
xchg
jg
sbb
fcompl
fidivrs
cli
sbb
lods
pandn
mov
inc
les
sub
insl
cli
fists
push
mov
jp
dec
call
add
lret
sarb
push
push
sbb
ror
mov
xchg
bound
sbb
mov
xchg
arpl
adc
lds
mov
push
mov
xchg
out
shrb
xor
jnp
in
inc
sbb
jmp
rolb
pop
sahf
inc
cwtl
sti
bound
or
das
jo
stc
cs
pop
setbe
aas
mov
push
rol
and
cmp
into
std
popa
mov
lods
dec
push
jne
insb
mov
std
sub
sub
int3
push
sub
scas
pop
aas
xchg
inc
add
movsb
mov
sbb
shlb
sti
and
sub
les
in
scas
lahf
lahf
rcrl
lods
dec
sti
dec
pop
fdivrl
addr16
sub
or
imul
ret
xor
fisttpl
add
cli
test
mov
stc
sarb
xchg
ss
push
sbb
ljmp
lahf
and
inc
xchg
sbbb
add
sti
sahf
and
loop
int3
jbe
sbb
fisttpll
mov
pop
cltd
inc
or
and
pop
aas
xchg
int
cltd
and
lahf
aas
pop
xchg
fwait
mov
pop
iret
xchg
rolb
mov
adc
cmp
xor
nop
aam
xchg
cmc
insl
fucomi
cwtl
mov
nop
aaa
xor
mov
or
movsl
jge
jmp
out
and
mov
xchg
bound
scas
outsl
inc
fstpl
lds
add
arpl
and
xor
std
sar
xorl
jb
mov
lods
jp
sbb
mov
adc
jmp
and
fidivrl
mov
ret
sti
jo
sub
mov
data16
cmp
dec
clc
lods
jb
adc
loopne
iret
push
data16
cli
dec
mov
jne
push
mov
push
stc
or
xchg
sub
dec
xchg
dec
push
das
divb
mov
jl
sub
ljmp
pop
cmp
je
sahf
bound
popa
mov
mov
pop
out
pop
mov
leave
and
loop
sub
mov
mov
sub
mov
add
insl
and
mov
je
js
lea
pop
cld
imul
pushf
shl
sbb
inc
neg
rep
xchg
imul
lahf
adc
add
into
rorb
das
jae
cmp
jge
rcr
fucomip
cmp
mov
enter
xchg
mov
mov
push
xor
mov
je
xchg
or
lahf
shlb
mov
loop
dec
out
fmuls
jno
mov
dec
mov
pop
sbb
lcall
sub
in
jne
cld
pop
clc
mov
mov
in
and
fdivr
addr16
fistps
xchg
jmp
pop
dec
push
cmp
sub
cmpb
in
jnp
mov
sbb
dec
jno
mov
inc
mov
push
and
in
mov
add
jge
rcr
lods
mov
sti
fs
out
fstp
mov
or
sub
arpl
cmpxchg
pop
and
sub
mov
push
scas
sti
int3
sbb
mov
out
add
je
dec
clc
dec
xor
sbb
cmp
push
cmp
add
scas
add
outsb
add
add
dec
call
jnp
rcrb
cwtl
ret
stos
xchg
in
leave
jl
xor
daa
mov
mov
mov
or
jae
xor
fmuls
sbb
gs
xchg
sbbb
push
sub
inc
sti
cmp
push
pusha
jbe
out
dec
push
xor
icebp
test
leave
nop
arpl
jmp
sahf
mov
and
and
push
mov
pop
jge
jns
mov
mov
or
adc
mov
icebp
daa
fildl
ret
lret
out
mov
scas
nop
lret
adc
cmpl
sub
xor
add
insl
rcrl
int
mov
imulb
xor
or
gs
enter
and
xchg
ja
loope
dec
mov
out
in
pop
dec
enter
ja
dec
loopne
xlat
enter
lock
das
das
pop
test
std
pop
iret
cs
inc
and
rep
mov
shl
cwtl
mov
les
pop
dec
pushf
jns
ret
outsl
and
sub
xor
jb
mov
outsl
and
imul
pop
jo
scas
add
jnp
and
movsb
xchg
fdivrs
enter
push
lea
jge
je
adc
mull
add
cwtl
mov
mov
sbb
js
cmp
aaa
push
mov
and
adc
jg
xchg
mov
into
inc
fcomps
inc
clc
pop
ds
out
push
add
dec
xchg
sti
int3
mov
cmp
outsl
mov
nop
loop
or
sar
fstpl
jo
dec
cmp
push
mov
cmp
xlat
loope
in
scas
ss
mov
pusha
frstor
scas
icebp
pop
outsl
xchg
in
call
xor
mov
pusha
pusha
mov
mov
jnp
mov
or
shrl
xor
mov
iret
dec
push
lods
xor
lods
into
or
and
mov
adc
sub
dec
mov
lock
xchg
lahf
popa
or
addl
mov
add
mov
sub
insb
inc
popa
rcrl
insb
bound
jns
inc
push
int
mov
mov
scas
jmp
in
or
pop
bound
bound
mov
push
xor
aaa
pop
mov
int3
push
push
and
sbb
mov
inc
xor
dec
xor
mov
aas
sarl
into
shrl
xor
mov
pop
add
dec
lods
popf
pop
sbb
cmpsb
andb
dec
sub
ret
enter
cmp
push
dec
cmp
out
aam
xor
lock
outsb
movsl
push
xchg
rolb
pop
clc
out
dec
jmp
out
out
ss
push
pop
hlt
js
fsts
movntq
sbb
lods
pop
push
xorb
dec
scas
cmc
iret
xor
std
cmp
cmp
inc
fwait
xchg
dec
call
fnstenv
fdivl
lret
push
pop
or
mov
cmc
test
push
xor
mov
and
inc
out
into
lea
mov
popa
pop
sti
mov
pop
fsubrs
scas
stos
addr16
std
xchg
mov
and
mov
lahf
pop
inc
lahf
jmp
icebp
push
sub
add
adc
adc
adc
mov
fsts
sbb
push
dec
aam
lds
and
cmp
mov
sbb
and
jl
cltd
sub
jo
repz
sbbb
mov
jl
dec
jge
sbb
mov
adc
sub
mov
xchg
and
loopne
mov
test
ror
cmp
xor
xchg
mov
dec
push
cmp
jo
jp
dec
nop
out
iret
in
adc
insl
popf
mov
loope
adc
jnp
xor
leave
sub
and
jmp
and
call
fnstcw
push
push
sbb
jno
sub
das
scas
push
data16
addr16
jle
pop
es
sub
xlat
dec
jg
scas
fdivp
lcall
jp
inc
or
andb
sub
mov
or
xchg
and
int3
dec
and
xor
ret
push
adc
rol
or
mov
xchg
cmpsl
mov
mov
xor
shlb
mov
fbstp
aaa
lods
in
outsl
popa
rcrl
push
push
xchg
sbb
mov
fmuls
pop
lret
mov
inc
ret
out
sub
insb
stos
mov
fnstcw
idiv
mov
popa
jo
inc
dec
movsb
pop
mov
pop
inc
and
push
mov
sbb
xor
adc
jns
mov
mov
push
cld
jbe
bound
cmp
popa
repz
jle
nop
lds
stc
aam
fdivs
out
cmp
js
mov
dec
lods
mov
adc
ret
pusha
mov
sbb
shll
arpl
mov
and
aad
sbb
xchg
aas
push
lock
or
das
xor
adc
or
stos
cmpsl
and
mov
adc
jae
adc
repz
cmp
sbb
jle
loopne
mov
mov
sub
imul
mov
ret
mov
cmpsb
mov
dec
xlat
cmp
out
sbb
mov
jo
push
fists
sub
rcl
lods
popf
andb
pusha
aas
pop
cmp
and
adc
fisttpll
and
or
jo
negl
sbb
std
xor
pushf
popf
imul
call
add
dec
and
add
mov
sub
xor
sbbb
shll
repnz
mov
or
push
lock
inc
fists
stos
and
into
push
inc
out
pop
negl
orb
dec
xor
in
mov
or
xchg
testl
jo
push
stc
je
call
scas
enter
and
in
repz
xchg
mov
mov
jae
imul
out
xor
enter
test
add
push
adc
push
dec
and
push
das
xor
enter
xchg
dec
xor
lahf
dec
arpl
or
lods
std
fistpl
movsb
push
mov
lock
movsl
sti
jl
cmc
fistpll
rolb
xor
out
mov
xchg
daa
lods
mov
mov
outsl
cmpsl
or
fld
in
pop
lcall
xchg
popa
sbb
rcrl
mov
arpl
enter
stos
outsl
sahf
sub
leave
jg
mov
sti
cmp
pop
sahf
shl
enter
jecxz
xorb
enter
imul
aas
das
and
insb
pop
and
sbb
cmp
push
les
lods
into
mov
scas
adc
pop
dec
pushf
in
pop
mov
pop
jo,pn
rcrb
sub
aaa
mov
pop
cmp
mov
mov
icebp
cld
and
xorl
lds
sahf
les
push
aam
sahf
enter
scas
xor
mov
xor
push
loopne
lock
subb
nop
mov
repz
aad
dec
movsb
in
pop
ljmp
sbb
sbb
dec
aad
xchg
dec
sub
mov
adc
or
scas
mov
rorb
jecxz
int
shrl
dec
and
or
mov
mov
xchg
push
fwait
jbe
lods
pop
repz
sbb
in
cwtl
bound
push
cmpsb
mov
mov
ljmp
and
push
enter
mov
cmp
push
lahf
xor
repz
pushf
ss
pop
or
das
and
insl
enter
aam
aad
repz
pushf
in
adc
push
pop
mov
lret
pop
jg
cmp
xchg
or
insl
out
jl
imul
daa
xor
mov
cmp
jecxz
push
inc
clc
cld
xchg
vmovsd
push
or
or
enter
pop
shr
test
push
fdivrl
and
cmp
push
jg
and
adc
dec
xchg
data16
dec
xor
add
ret
shlb
pop
dec
mov
adc
pushf
popa
jp
push
jae
daa
pop
dec
test
dec
clc
lods
mov
dec
jbe
imul
addl
mov
fdivr
rcrb
fiaddl
and
jne
rcr
popf
or
test
in
hlt
shll
jp
sbbb
or
add
mov
cmp
aaa
jb
mov
pop
rolb
mull
cmp
std
sbb
or
jmp
and
pop
enter
ja
add
enter
movsb
out
mov
jnp
pushf
mov
push
dec
clc
sub
aas
fwait
mov
push
mov
xchg
call
dec
pop
and
cmp
int3
add
inc
enter
fwait
mov
les
lods
sarl
scas
push
daa
sar
pushf
pop
in
mov
icebp
ja
pop
jae
and
jnp
cmpsl
int3
lea
sarb
shll
push
mov
xchg
and
mov
aam
push
mov
mov
mov
xchg
aaa
in
mov
maskmovq
scas
jge
rol
jl
stc
jmp
dec
mov
adc
xchg
jecxz
cmpsl
jns
ljmp
arpl
cmp
dec
mov
mov
gs
xchg
lods
push
test
adc
sarb
pop
loopne
xchg
insl
pop
mov
cmpl
test
pop
pop
and
pop
cvtps2pi
shlb
cs
mov
ds
ds
popa
and
lcall
iret
je
test
cmp
test
int3
dec
lret
fsubrl
pop
lcall
lret
adc
repz
sub
stos
scas
roll
enter
test
pop
arpl
test
aas
pop
in
outsl
enter
test
push
dec
mov
int3
sub
jns
pop
mov
mov
xchg
mov
pop
xchg
scas
aam
xchg
outsl
pop
sub
xchg
mov
pop
sub
fnstcw
and
sub
insl
addr16
js
filds
popf
cmpsl
sub
nop
fwait
lods
push
ljmp
or
movsb
add
and
cs
and
xchg
fnstenv
jbe
rorb
pop
mov
out
dec
fwait
push
jge
xor
outsl
or
lods
jmp
cmp
mov
inc
xchg
sbb
das
mov
jbe
in
jecxz
andb
aaa
mov
outsb
add
or
pushf
adc
cmp
imul
mov
repz
adc
cld
sbb
iret
sub
xor
push
xlat
mov
pusha
shr
rcrb
cmpsb
xchg
pop
or
fnstenv
inc
xor
filds
and
xlat
iret
pop
ret
ds
cwtl
mov
push
popa
and
lcall
mov
cmp
sti
jbe
sarl
add
push
and
push
push
cmc
pop
push
pop
cmp
push
test
out
int
rol
inc
lods
inc
jne
outsb
test
jle
cmpl
push
jl
xchg
push
cwtl
and
aam
adc
xchg
iret
jne
or
inc
fucomip
adc
gs
out
rcl
pop
pop
lret
lcall
pop
lret
lcall
pop
das
sub
pushf
enter
pop
ja
and
enter
or
and
enter
rolb
pop
add
cwtl
mov
jmp
enter
xchg
test
cs
shrl
scas
push
sub
xchg
inc
pop
sub
xchg
dec
aam
sbb
shll
pushf
lret
dec
inc
sbb
sub
or
les
sbb
fidivrs
jl
lock
push
lea
sarl
les
sbb
es
xor
xchg
mov
outsl
aam
xor
push
arpl
in
sti
xchg
ficoms
pop
repnz
mov
and
xor
sbb
jg
test
xor
inc
movsb
clc
jp
dec
sub
fimull
xor
adc
add
mov
xor
lret
out
lds
sub
into
bound
pop
xor
sbb
pop
pushf
jbe
mov
into
ljmp
jmp
imull
aam
fcoms
mov
mov
scas
fs
aam
cwtl
sti
in
leave
lahf
push
xchg
pushf
fidivrl
jmp
and
xchg
pop
pop
xchg
adc
dec
hlt
jle
pop
jne
ljmp
dec
pop
out
pusha
lock
mov
ss
xchg
out
push
lahf
dec
inc
out
ljmp
mov
push
mov
test
inc
xchg
xor
pop
xor
popf
cltd
add
jne
xchg
push
lds
sbb
sbb
push
sub
mov
xor
or
call
movsb
pop
jnp
ret
bound
lds
pusha
sub
mov
test
jle
xlat
jo
inc
mov
std
xlat
push
ds
jno
es
jb
ds
gs
push
ss
mov
mov
jecxz
pop
mov
add
jmp
jb
movsb
lea
sub
movsb
jge
mov
inc
imul
adc
sbbl
pusha
jge
mov
push
adc
aam
mov
jnp
adc
enter
fs
jecxz
nop
loop
sti
pusha
ljmp
push
lods
in
out
lods
nop
test
sub
or
pusha
mov
imul
sub
push
push
fldt
cmp
out
cwtl
add
and
jl
std
call
xor
fists
in
movsb
inc
or
pusha
sbb
fcmovne
cs
dec
lods
push
sbb
repz
sarb
lods
dec
lods
insb
mov
jecxz
and
cmp
add
xor
xor
lret
xchg
loopne
je
aad
ret
fwait
movsb
std
sbb
fcomi
push
lods
fwait
sahf
xor
in
in
jnp
test
jae
fildll
mov
stos
testb
push
jmp
adc
loop
ljmp
sti
ficomps
call
jle
pop
clc
js
leave
adc
fwait
lods
daa
addr16
adc
mov
and
cs
jno
iret
jg
mov
pop
jae
sub
sub
jmp
jo
pushf
sbb
scas
inc
test
test
cmpsb
ficoml
adc
nop
pop
rcrl
or
mov
mov
sub
iret
push
mov
sbb
add
fisttpl
mov
mov
push
lea
cmp
pop
sbb
vmread
addr16
inc
pop
xor
add
sub
adc
jbe
lahf
push
and
pop
xor
ds
sub
and
mov
fcompl
sub
xor
sbb
xor
fisttps
aaa
adc
shr
cs
das
mov
xchg
jg
dec
xchg
jo
adc
out
aad
push
fidivs
inc
aas
jns
mov
jo
fistl
inc
popa
dec
pop
adc
test
loope
ficoms
test
ljmp
cmp
fcoml
fcoms
sarb
add
pop
ss
sub
mov
aaa
adc
ror
outsl
call
mov
cmp
lods
mull
lahf
pushf
lods
mov
adc
cmpsl
xor
in
clc
push
lds
fcomip
inc
push
shl
xchg
dec
cmc
clc
mov
dec
jmp
push
xor
mov
mov
or
add
and
sbb
push
jno
sub
jle
iret
out
xor
sbb
pop
inc
add
clc
pop
imul
add
jns
mov
mov
pop
xchg
jp
and
test
pop
test
inc
aam
dec
pop
mov
adc
rorb
rclb
fs
nop
ljmp
das
mov
mov
loopne
div
or
fidivs
jge
mov
ficoms
push
mov
addl
cmp
fcoml
sbb
and
outsb
adc
arpl
xor
shrb
ss
mov
call
sbb
adc
jbe
and
and
cmp
mov
dec
jmp
es
push
jge
lock
xchg
and
lret
jae
mov
test
out
rorl
and
mov
rolb
iret
and
ret
ss
stos
and
movsb
enter
mov
jmp
jg
and
xor
bound
test
cmp
inc
fistl
mov
xchg
adc
lock
pop
mov
xor
out
pop
cmpsl
xor
iret
rcrb
in
jae
sub
or
std
shl
nop
mov
xchg
fstpt
sbb
fisttps
sub
das
xchg
xchg
jmp
xchg
daa
fisttps
sub
pop
loopne
jae
lahf
outsl
pusha
cmp
jnp
mov
rcr
shlb
lods
in
insl
jnp
adc
adc
and
das
fcoms
xchg
inc
fistpl
call
scas
cmp
sbb
or
ret
mov
in
inc
iret
stos
jnp
js
mov
addb
or
mov
adc
mov
jecxz
sbb
repz
adc
test
push
aad
sub
cwtl
jae
xchg
scas
bound
daa
jne
push
call
push
das
sbb
inc
iret
stc
mov
sbb
fidivrs
in
and
scas
sub
test
adc
bound
or
daa
add
cmpsl
sbb
outsl
cmp
loopne
insb
dec
and
add
in
out
pop
pop
jb
or
or
ds
jecxz
xchg
movb
insb
pop
jo
or
sbbb
and
out
repz
or
push
shrl
push
shlb
jp
jg
and
mov
pop
push
inc
xchg
pusha
add
fcoms
xchg
daa
rorb
loopne
dec
mov
out
xor
int
sub
aam
xchg
fwait
loop
cwtl
cmp
mov
sbb
lods
cs
cmp
out
pop
dec
mov
xchg
cs
clc
mov
sbb
jnp
cmpsl
cmp
sbb
or
data16
stc
jmp
shrb
add
orb
movsb
xor
mov
in
lret
mov
arpl
or
mov
and
mov
nop
fiadds
xor
std
xor
scas
sbb
pop
int3
adc
mov
aam
in
mov
and
push
and
rclb
jae
xor
pop
imul
cli
das
cmc
test
sbb
outsb
rcrb
and
stos
cmpb
add
pop
mov
xchg
test
sarl
ret
xchg
fcoml
jae
sahf
mov
push
or
lock
xchg
ja
ret
adc
js
xor
pushf
cmc
cs
loopne
sub
jbe
push
mov
ds
add
or
sub
bound
adc
mov
das
rcr
into
lahf
mov
or
cmp
dec
and
int3
jne
dec
or
addr16
aam
jl
push
jnp
nop
mov
mov
xor
xor
shlb
aas
das
sbb
clc
and
iret
inc
push
rol
sub
fcompl
jnp
mov
aad
xor
cmp
imul
aas
jnp
and
jge
out
inc
arpl
add
push
mov
fisubrl
dec
mov
in
adc
xchg
jae
or
sti
jmp
xor
subb
rolb
pop
outsl
xor
sub
pop
fisttpl
addr16
mov
es
inc
inc
rorb
pop
dec
in
push
xchg
sub
sub
ret
stc
js
out
inc
dec
lahf
xchg
jne
or
outsl
mov
enter
cmc
sub
pop
pop
push
pop
push
jmp
cmp
fmull
push
push
inc
sbb
lods
outsl
add
sbb
cmp
cmpsl
xchg
repz
jno
sti
pusha
clc
sti
out
lods
cld
in
out
mov
sbb
mov
or
addl
push
lods
rcrb
jg
inc
daa
out
pop
fcompl
xchg
mov
pop
arpl
daa
das
or
cmp
in
mov
loopne
mov
xor
mov
lock
sbb
sub
xchg
ds
mov
daa
or
cmpxchg
push
cmpsl
xchg
into
call
bound
das
pushf
inc
ljmp
mov
les
daa
lods
repnz
push
xchg
loopne
popf
mov
adc
xor
ss
pop
pop
lahf
pop
xor
je
mov
jns
mov
dec
push
call
in
int3
xchg
ret
mov
movsb
fxam
out
rolb
inc
notb
dec
mov
lea
mov
iret
pop
jno
push
iret
pusha
pop
jmp
xlat
mov
rdtsc
call
iret
sub
fstpt
je
adc
fwait
or
sub
push
and
fdivl
incb
in
mov
cmp
enter
lods
push
arpl
imul
js
cmpsb
ret
inc
cltd
rcr
jle
addr16
pop
and
decl
repz
mov
inc
mov
push
push
call
and
addr16
ss
cltd
jmp
push
jg
sti
xor
mov
clc
int3
or
fcomip
sub
loop
pop
jge
rol
blci
test
jbe
mov
sti
jg
dec
fdivrl
inc
loop
out
or
aaa
push
xchg
adcl
pop
mov
jle
je
das
clc
push
aaa
nop
jnp
and
imul
inc
and
pop
lods
pop
sti
jo
cmp
insb
sub
bound
mov
add
das
pop
in
dec
push
mov
xlat
sarl
out
cmpsl
or
in
push
jo
lds
xchg
push
jmp
xchg
fcomp
imul
ret
ja
pop
xor
adc
dec
xor
mov
loopne
comiss
add
inc
pop
cmp
imull
jge
out
xchg
shrb
cmc
xor
inc
out
repz
push
pop
pop
adc
mov
and
lea
jle
sti
frstor
aaa
cmp
mov
scas
idivb
sub
aam
xor
jmp
data16
push
or
push
loopne
lcall
xchg
xchg
sub
int
adc
pop
adc
test
shlb
rorl
xchg
xchg
scas
lock
pop
loopne
mov
loopne
pop
pop
mov
jecxz
or
cwtl
sbb
les
popa
fwait
and
popa
jns
hlt
jbe
addl
lods
mov
xchg
sbb
clc
dec
and
aas
fistpl
pop
sbb
adc
lahf
fwait
xlat
push
jb
push
ljmp
xor
test
jl
dec
and
cmpsl
xchg
mov
clc
das
rcl
loop
jbe
push
int
xor
pop
rcl
cmp
jne
iret
push
push
sahf
enter
pop
popf
mov
mov
mov
lock
push
mov
pop
loopne
div
scas
xor
jmp
pop
xchg
or
lods
cmp
mov
clc
sbb
shlb
and
dec
loopne
and
in
push
push
outsl
cmp
jns
pop
xchg
psubb
mov
aad
daa
outsb
mov
inc
in
aam
cs
shr
pushf
pop
xchg
call
sbb
in
lahf
cmp
sbb
lods
hlt
push
or
movsb
mov
push
out
loopne
rcr
mov
aas
xlat
repz
ja
push
pusha
mov
jae
xchg
imul
pop
adc
sarb
int
push
jns
jle
mov
cs
lret
fs
call
lahf
sub
and
outsl
fwait
stos
cmp
int3
pop
test
ret
out
daa
cwtl
das
iret
shl
aam
rorb
insl
lahf
roll
adc
xchg
pusha
and
lock
push
push
pop
jne
fistpll
iret
inc
mov
jae
out
ds
ret
mov
inc
lods
pushf
or
sbb
in
lret
xchg
lea
mov
mov
loopne
adc
fcoms
frstor
jecxz
mov
in
rcrb
mov
lods
xor
inc
cmpb
mov
dec
shrb
pushf
push
rcrb
cs
sbb
test
jge
pop
mov
loopne
adc
cld
xchg
mov
adc
in
movsb
adc
lock
lods
pop
dec
push
andb
testl
mov
shr
scas
inc
ljmp
cmpb
pusha
adcb
daa
inc
xchg
sbb
mov
lods
push
loopne
pushf
popf
aam
adc
lea
leave
or
andl
cmpsl
jae
mov
je
ret
ret
std
lcall
in
outsl
sub
rcr
mov
sbb
xchg
xchg
cmp
sub
xchg
sbb
lock
pushf
jge,pn
addr16
out
mov
and
repz
test
cwtl
adc
adc
or
pop
inc
jno
push
mov
xchg
xchg
shrl
cs
inc
jmp
mov
lea
and
sub
jnp
rcl
xor
mull
rorb
out
je
and
mov
ret
adc
mov
je
into
cli
lods
lahf
dec
mov
insb
mov
adc
int3
lret
icebp
push
add
lock
sbb
sarl
pop
cmpsl
xor
punpckhdq
mov
idivb
inc
test
adc
mov
xchg
cmp
pop
adc
enter
sbb
mov
pop
inc
or
das
mov
shll
int3
adc
sbb
jne,pn
rorb
inc
add
lahf
imul
xchg
inc
pusha
pushl
or
scas
mov
fimull
xchg
mov
hlt
xlat
loop
nop
sahf
xchg
sbb
pop
pop
xchg
popf
xor
xor
test
inc
inc
xlat
aas
inc
outsb
mov
adc
or
adc
pop
cmp
push
mov
aam
cmp
inc
mov
aam
cmp
pop
mov
aam
cmp
dec
mov
mov
push
and
push
sub
jnp
push
ret
mov
test
popa
sbb
scas
js
push
test
dec
ret
cmp
jo
lods
jne
add
sbb
dec
repnz
loop
stc
fisttpl
jp
loopne
add
bound
out
fstpt
cmp
and
daa
pusha
dec
mov
xchg
lods
pop
loopne
lret
xchg
jnp
inc
daa
call
mov
negb
sub
dec
add
and
bound
lea
jae
mov
ficomps
mov
xchg
shl
sahf
mov
jecxz
jno
cmp
cmp
fcompl
in
cwtl
mov
mov
mov
push
mov
fcom
shlb
out
sub
cmp
out
push
out
outsb
xchg
das
cmp
insl
mov
rorb
jl
in
sbb
ds
push
shll
aas
and
mov
xchg
inc
pop
loopne
outsb
sahf
mov
nop
jno
nop
mov
aad
arpl
mov
daa
lahf
mov
test
shlb
iret
pushf
call
mov
jecxz
jo
xchg
cwtl
pop
cmpsl
xchg
cvtdq2ps
sbb
pop
pushf
cs
sbb
mov
add
sbb
rclb
add
push
push
adc
xor
int3
push
icebp
push
repnz
jae
arpl
mov
dec
xlat
sbb
sub
andb
stos
inc
out
sbb
shr
aaa
shll
pop
and
jae
addr16
enter
jg
cmp
pop
pushf
aam
jo
push
sbb
jo
pop
lret
inc
xchg
dec
push
mov
pushf
dec
sbb
daa
ljmp
pop
adc
inc
arpl
add
iret
aas
fwait
mov
sub
push
addb
dec
aas
aas
lods
pushf
sbb
icebp
inc
lock
pop
pushf
pushf
mov
jmp
mov
sbb
pop
mov
dec
pop
imul
popf
cmc
je
inc
rcrl
arpl
aam
ds
ret
ljmp
mov
jnp
test
mov
fwait
arpl
xchg
in
dec
xor
daa
shlb
lods
outsl
fidivl
xor
rolb
aas
mov
clc
inc
xchg
sub
hlt
jo
and
jbe
pop
jl
xor
sar
fcmovne
xor
jnp
cmpsl
test
pop
adc
ret
and
mov
out
add
int3
ds
sbb
sub
daa
xchg
rcrb
xchg
mov
fists
dec
addr16
cld
js
lahf
das
sahf
push
jg
and
fwait
mov
push
sbb
ror
inc
mov
jne
insl
mov
cs
lods
inc
xor
pop
ds
push
mov
stc
fldl
sahf
ljmp
js
out
pop
fsubrp
xchg
xchg
icebp
mov
ljmp
push
das
adc
lods
inc
xchg
jnp
bound
pusha
clc
popf
pop
cmp
fs
mov
das
sbb
jge
jae
sbb
pop
jmp
bound
dec
rcr
pop
adc
lods
push
out
outsl
int3
ret
xor
subb
pushf
repz
ret
shlb
aam
xor
pop
or
cmpsb
mov
or
scas
enter
arpl
mov
or
or
sti
sub
cwtl
pop
imull
pop
sub
adc
bound
cmp
pop
test
lds
sbb
test
pop
outsb
adc
xchg
and
or
scas
xchg
dec
cld
lods
mov
mov
pop
pop
dec
rorb
clc
add
or
xor
inc
sbb
push
das
std
pop
cmp
jp
aas
jmp
pop
cmp
flds
sbb
daa
ds
scas
adcb
scas
pushf
push
insl
aam
and
into
xor
mov
xchg
nop
mov
sti
pop
inc
push
out
cwtl
and
aam
dec
rolb
pushf
add
les
xor
insl
and
lods
je
jo
test
xor
fildl
jne
sub
out
pop
aad
cmpsl
pop
out
mov
cmp
cld
sbb
ds
lock
jno
xchg
cmp
pop
cmp
cmp
sbb
cmp
mov
lahf
rolb
ret
fistl
ljmp
loope
lods
fwait
lret
push
sbb
pop
pop
imul
call
cld
aad
loope
mov
dec
xchg
mov
push
xor
dec
movsb
lods
mov
sahf
dec
push
mulb
pop
shl
fwait
mov
xor
cmp
cwtl
adc
xchg
sub
lock
lods
cmp
or
cmpsb
push
mov
mov
mov
inc
mov
lahf
loopne
sarl
dec
cltd
mov
adcl
iret
push
dec
mov
sub
and
jecxz
and
outsl
cmp
push
xor
rcrl
cld
rcrb
hlt
or
jmp
dec
jns
fs
roll
mov
std
clc
mov
loop
push
jmp
fsubrl
mov
hlt
push
adc
xchg
push
clc
add
mov
icebp
es
jg
pusha
xchg
mov
or
lods
ds
dec
adc
call
icebp
addr16
mov
mov
bound
outsl
add
push
fwait
mov
sub
movsl
shlb
inc
loope
inc
adc
push
das
jbe
dec
adc
xchg
into
lods
xchg
xlat
push
aas
mov
loope
fsubrl
mov
push
or
aas
pop
xor
mov
xor
xchg
pop
pushf
pop
sti
js
xor
lods
push
test
stos
sbb
aaa
rcrb
adc
xlat
test
test
pop
mov
sbb
adc
leave
scas
ret
loop
aaa
lret
jle
push
icebp
push
outsb
fdivrs
mov
orb
push
leave
jbe
push
push
inc
jl
and
push
lahf
les
outsl
ficomps
fidivrs
mov
or
pushf
or
sbb
loop
jb
pop
fcmovne
fcmovne
jbe
dec
mov
shrb
mov
clc
test
dec
and
popa
dec
xchg
pop
aaa
int3
lcall
sub
jl
cmp
out
cmpb
jg
divl
pop
mov
xor
push
sub
cltd
sub
ret
pop
stc
mov
icebp
aad
xor
xor
dec
iret
xchg
decl
xchg
scas
dec
repz
pop
pop
cmpb
inc
pop
iret
jmp
xchg
adc
dec
shrb
jbe
xor
in
jle
jnp
xchg
mov
xchg
mov
pop
pop
push
and
pushf
icebp
lods
jno
sti
sahf
mov
aaa
mov
sti
mov
push
and
ret
or
inc
mov
sti
sbb
pushf
aaa
nop
shlb
jg
push
rorb
push
sti
mov
fucomip
cmpsl
mov
push
mov
dec
out
out
enter
bound
ja
scas
push
mov
pop
aas
cmp
xchg
ljmp
jl
xchg
test
mov
cld
pop
mov
ss
clc
cs
insl
jmp
push
mov
xchg
ret
dec
fstpl
cvtps2pd
and
hlt
in
enter
in
mov
mov
fnsave
shlb
inc
mov
sbb
into
or
aas
pop
dec
shlb
mov
arpl
jle
out
mov
shrb
fdivs
mov
or
mov
mov
fnstenv
test
sub
enter
mov
sbb
icebp
sbb
and
movsb
iret
daa
sub
das
xchg
cmc
pop
sahf
mov
adc
mov
dec
pop
inc
fdivl
mov
std
cmp
xor
inc
push
ss
in
xor
lea
out
fchs
repnz
lods
add
fst
push
testl
js
icebp
into
mov
nop
movsb
jecxz
out
and
sub
dec
lods
jecxz
mov
stos
loopne
cs
aad
mov
adcb
in
test
xchg
decl
lods
mov
out
mov
in
icebp
xor
icebp
mov
subl
aad
mov
mov
xor
adc
dec
cmp
lret
pop
add
xlat
xchg
and
jno
xor
or
cmp
push
lods
pop
mov
cmp
jns
push
ret
insb
push
or
mov
jle
das
clc
jns
lods
sbb
xchg
mov
test
iret
mov
cmpsb
mov
insl
adc
or
sbb
icebp
push
xchg
pop
mov
lods
cmp
push
mov
inc
shl
push
mov
cmp
in
and
mov
lcall
sub
ret
fnstenv
mov
jo
call
fstpl
mov
inc
rcl
xchg
mov
xchg
or
pop
aas
sbb
or
daa
pop
int3
mov
adc
ficoms
or
das
mov
sarb
popf
pop
fsub
adc
in
mov
test
fldcw
test
imul
pop
mov
inc
pop
pop
mov
ja
dec
fidivrs
xor
or
rcrl
movsb
imul
fidivs
iret
jns
add
cmp
aad
sahf
jb
inc
call
enter
push
fdivrs
or
iret
sub
sub
in
stos
insb
push
or
shll
adc
ret
je
ret
test
cld
dec
cs
nop
mov
push
push
pop
push
ljmp
mov
pop
cmp
cs
loopne
jmp
mov
dec
xlat
mov
call
mov
xor
rcrl
call
mov
sbb
dec
scas
adc
leave
out
hlt
xlat
fdivrs
cmp
mov
cs
movsb
mov
jg
xor
outsl
dec
adc
lods
inc
enter
jb
adc
imul
jmp
sub
fucomip
les
dec
cltd
dec
xor
dec
mov
sub
lock
lods
inc
add
mov
dec
loopne
lock
je
es
test
les
out
mov
movsl
out
xor
test
cmpsl
mov
mov
das
test
stos
enter
jecxz
scas
mov
add
push
dec
lock
cwtl
fnstcw
push
iret
xor
and
data16
xor
adcl
js
sbb
popf
xor
rorl
fwait
shrb
adc
cwtl
inc
pushf
mov
nop
xor
push
or
xor
loopnew
fldt
dec
sub
add
int3
mov
pop
lret
sbb
out
ja
in
xlat
addl
sbb
and
cltd
xor
jae
cmp
mov
dec
push
lods
xchg
or
or
out
icebp
sub
ret
int
add
hlt
pop
or
js
test
adc
lock
cli
jge
sub
push
rol
sbb
mov
lods
sbb
pop
orl
mov
fcompl
cltd
jno
rol
sub
jb
mov
lahf
mov
fisttps
shlb
daa
movsl
stos
mov
out
test
sub
stos
xchg
imul
movsb
jle
mov
sbb
in
fadds
xor
and
ds
rcrb
fcomps
ret
movsl
jnp
or
iret
push
adc
daa
stc
mov
inc
xchg
xchg
hlt
aad
adc
movsl
popa
mov
mov
in
adc
dec
add
mov
scas
mov
aad
or
jno
mov
cmp
int3
lret
inc
lock
xorb
push
into
push
and
pop
mov
movsb
lods
adc
repnz
call
adc
bound
cmp
rclb
lret
push
test
shrb
sbb
fisubl
lods
rcr
mov
test
es
push
mov
adc
divb
inc
xor
push
cmp
loop
fcmovu
cmp
xor
push
or
or
and
mov
jg
ret
inc
inc
mov
insb
in
xor
enter
outsb
in
adc
aaa
cltd
xchg
les
dec
adc
enter
andb
bound
adc
fcoml
sub
mov
fistps
or
mov
insl
mov
popf
pushf
cmp
clc
xchg
add
es
or
and
sub
sti
shlb
dec
or
add
or
sub
outsb
jmp
lds
loope
std
sub
pop
mov
fnsave
aad
xor
movsl
push
mov
mov
and
sbb
or
sbb
daa
les
out
sbb
in
sub
or
cmp
dec
push
bound
add
rorl
push
cltd
mov
out
mov
mov
dec
lods
in
dec
push
loopne
pop
jnp
ljmp
sbb
xchg
pop
push
iret
xor
test
xor
pop
addr16
adc
adc
and
jge
in
lret
jge
inc
mov
ror
es
dec
cs
fxch
pop
sti
sub
icebp
subl
or
jo
mov
pop
xchg
sub
or
push
shlb
adc
leave
mov
jo
push
rol
sbb
pushf
dec
outsl
pushf
adc
in
mov
cmp
xchg
out
push
mov
data16
in
int
push
insl
clc
xchg
out
adc
lods
mov
sub
popf
push
test
pop
std
sub
xchg
nop
sbb
inc
mov
shl
sbb
in
rolb
mov
nop
jge
mov
mov
inc
and
iret
pop
mov
pop
pop
push
mov
inc
mov
xchg
mov
mov
lcall
ss
cs
inc
sbb
in
cmp
inc
cmp
jmp
xchg
shrl
clc
movsb
push
dec
inc
jge
pop
and
sbb
mov
int3
icebp
shrl
and
fs
sub
into
and
pop
xchg
hlt
and
aaa
shr
clc
pop
cmp
loopne
and
dec
sub
in
ljmp
mov
sub
das
pop
push
out
enter
daa
mov
pop
pop
insl
push
cs
pop
mov
lods
push
adc
hlt
pop
shrb
lahf
jo
insb
xchg
lock
es
xchg
mov
sarb
mov
cmp
outsl
jle
mov
jge
mov
fdivl
xor
xchg
imul
into
add
in
arpl
dec
mov
rcll
add
sti
mov
mov
sahf
outsb
andb
pop
pop
sbb
repnz
test
cs
mov
das
cli
sub
adc
shrb
adc
xor
fdivrl
xchg
inc
cmpsl
and
dec
rcr
les
lea
lahf
in
jne
div
xchg
pop
loopne
and
sub
pushf
pusha
rorb
sbb
lock
adc
lods
loopne
and
int
mov
xchg
inc
sar
popf
loopne
pusha
mov
sub
lods
pushf
sarb
hlt
xchg
or
xor
fwait
pop
jg
out
test
nop
rorl
pop
dec
sub
jbe
mov
pop
inc
dec
sub
in
lods
shll
pop
test
xchg
add
adc
jae
fdivrs
cmp
popa
inc
or
cmpsb
cmp
jge
xlat
and
jmp
call
jae
nop
imul
notl
adc
jg
mov
iret
out
mov
mov
pop
das
fucomi
or
aaa
mov
call
mov
clc
int3
insl
into
xlat
sbb
xor
jecxz
int3
or
sbb
sub
cmp
sbb
ss
hlt
or
stos
pusha
imull
jns
xchg
pop
mov
xor
repz
sbb
sub
push
popf
and
sbb
std
pop
xchg
jg
push
sbb
jg
push
out
int
cltd
xor
in
fnstsw
movsb
lcall
mov
sbb
sbb
ret
inc
or
call
and
mov
mov
dec
mov
int3
imul
mov
pushf
sahf
imul
mov
push
sahf
xchg
or
dec
fldcw
mov
jno
adc
out
adc
inc
or
push
or
push
mov
rcrl
sub
out
mov
xor
sahf
sub
mov
pop
bound
lods
mov
dec
mov
or
nop
pop
add
xchg
jo
xchg
or
sub
mov
and
dec
jo
loop
push
adc
arpl
mov
je
and
push
xor
mov
and
mov
push
pop
pop
loopne
and
jl
mov
pop
sub
lods
mov
insl
ljmp
imul
xchg
mov
jo
push
push
out
nop
xor
pop
mov
mov
addr16
xor
mov
mov
mov
mov
sbb
mov
jnp
cli
shl
push
mov
int3
and
xor
scas
pop
or
and
ljmp
sub
xchg
pushf
pop
lds
mov
shrl
xchg
fbstp
push
dec
xchg
push
and
outsl
pop
mov
aas
mov
mov
imulb
loopne
out
mov
pop
popf
jg
push
icebp
push
sub
pop
sbb
sbb
push
ds
cmp
in
xchg
lcall
push
test
pop
xor
jl
outsl
out
pusha
popa
or
push
lahf
push
sbbb
jnp
bound
pop
orl
js
inc
popa
pop
jbe
push
imul
mov
mov
mov
and
cmp
enter
rclb
int
push
cmp
pop
lea
dec
lods
and
ljmp
inc
push
xchg
fsubrs
pushf
pop
data16
adc
xchg
inc
rcll
push
subb
push
or
and
dec
arpl
fists
pop
xchg
and
sub
mov
xchg
pop
je
sbb
xchg
aas
push
mov
mov
and
mov
or
mov
enter
aam
mov
adc
faddp
pop
sarb
das
cltd
loopne
pop
mov
push
mov
xchg
in
and
cmp
pop
sbb
clc
pop
shlb
adc
daa
pop
mov
and
enter
loopne
xor
mov
test
xor
aam
mov
rorb
xchg
lock
mov
sbb
das
daa
insl
mov
push
es
das
adc
jo
pusha
adc
and
jge
cli
sbb
shr
xor
loope
mov
jae
mov
jae
mov
pop
in
sub
add
in
insl
imulb
mov
dec
sbb
insb
push
push
aad
add
movsb
adc
lcall
int
or
ljmp
loop
pushf
xor
sti
sbb
cmp
dec
scas
inc
popa
test
mov
pop
test
test
xlat
popf
nop
lock
inc
mov
cmpsb
rcll
mov
sub
adc
push
aam
mov
push
daa
js
nop
or
mov
orl
inc
pop
out
or
call
icebp
jne
imul
call
cwtl
rorl
pop
test
jo
push
aam
int
fsubrl
or
ss
mov
das
int3
movsb
pusha
and
add
adc
lods
xchg
xchg
push
mov
pusha
gs
mov
shrb
hlt
std
pop
sar
call
xchg
clc
insl
out
notl
mov
aas
xor
lock
or
xchg
dec
sbb
and
mov
pop
int
xchg
dec
and
das
dec
fistps
and
cmp
hlt
dec
rcrb
pop
xchg
int
aam
popf
es
in
lds
sub
mov
sbb
xchg
lods
lahf
and
pop
mov
test
pop
pusha
sub
mov
inc
into
and
dec
inc
ss
cmp
dec
jo
rolb
xchg
cwtl
rcr
out
stc
into
lret
add
jo
outsl
lcall
mov
call
std
sub
xchg
mov
push
sbb
add
push
xor
rcrl
ja
cmp
lods
cmpsl
jge
and
or
sbb
les
loopne
cs
out
into
fstp
xchg
out
sub
insl
repz
inc
xchg
mov
cli
mov
ficoms
pop
sarb
fst
daa
lea
shlb
int
fwait
movsl
sub
repz
xor
testl
ljmp
pop
sub
and
inc
jg
pusha
aam
loopne
xchg
pop
aam
rorb
lods
movsb
rclb
jbe
sbb
mov
jne
cmp
faddl
fidivs
cmp
fs
mov
ja
sarl
xor
jnp
fcmovnb
cld
aad
pop
xor
xorb
xchg
xlat
filds
mov
mov
push
jmp
and
loopne
sbb
idivl
xor
push
lods
or
fs
js
dec
and
push
adc
je
scas
out
lods
jle
pop
mov
cmp
shl
xor
ret
jle
and
popf
loopne
mov
lret
test
in
rcrb
lock
pushf
push
ret
xchg
push
push
adc
sub
sub
push
popf
adc
shlb
scas
movl
cmpsl
sbb
jnp
or
in
pop
daa
cltd
adc
xchg
int
outsl
lea
adc
pop
pop
dec
xor
push
mov
inc
xchg
bound
je
sbb
in
mov
sub
jnp
cmp
pop
push
pop
jnp
jae
pop
add
adc
stos
scas
sarb
shlb
rolb
jno
sahf
loope
mov
push
call
sub
pop
fwait
xor
xor
add
sti
jnp
or
outsb
pop
sub
je
out
pop
jae
addr16
in
es
and
jmp
cwtl
mov
sbb
jnp
das
movsl
adc
rcrb
and
sbb
sbb
lret
das
addb
clc
ret
int3
imul
sub
mov
xchg
fldt
push
push
out
sbb
xchg
and
mov
or
shlb
shlb
or
call
xchg
or
cmpsl
cmp
mov
dec
js
sub
rcl
push
test
icebp
adc
push
movsl
xchg
xchg
shll
mov
inc
fildll
arpl
stos
pop
loope
cltd
mov
jmp
mov
jo
xchg
test
pop
imul
stc
or
sahf
into
inc
mov
loope
sub
out
sbb
cmp
sub
jle
lods
mov
dec
dec
rorb
add
push
gs
das
cmp
shlb
mov
arpl
sub
ja
mov
sub
sub
aaa
out
push
test
inc
movsl
jo
xchg
popf
adc
into
lock
arpl
mov
andb
flds
aaa
scas
rcll
aam
sbb
cwtl
pop
push
jle
sub
pushf
inc
push
add
popl
rcrl
xor
xlat
aaa
shlb
adc
pop
stos
aam
test
rcrl
or
pand
ss
or
lret
mov
mov
shlb
mov
jecxz
push
dec
imul
iret
jns
push
mov
mov
dec
pushf
cmp
mov
lods
xchg
mov
lcall
out
es
xor
gs
cs
cmp
jo
mov
sbb
mov
pop
and
jle
mov
out
add
mov
and
add
int3
int
ret
xor
pop
sbb
mov
jo
add
notl
ficompl
pop
iret
mov
les
xlat
dec
pop
xor
je
negl
cmc
xchg
std
shll
push
push
pushf
lret
add
jecxz
dec
clc
pusha
push
dec
jge
negl
cmp
mov
push
jnp
call
pop
xchg
das
push
out
mov
dec
sbb
inc
fcomps
sub
outsl
add
xchg
cmp
mov
fsubs
push
mov
and
loopne
and
xor
aad
rol
add
cltd
sarb
clc
fisttps
das
out
xor
sub
cli
not
clc
push
aam
mov
xchg
dec
push
cmp
shrb
sbb
or
shrb
dec
fst
add
jns
clc
jle
not
adc
add
and
lods
cmp
movsb
jbe
push
repz
sahf
out
xchg
xchg
or
sahf
ret
mov
mov
ja
pop
dec
daa
rcrb
bswap
inc
ds
or
das
rol
or
lock
int
std
jmp
xchg
mov
cmp
pop
ljmp
shr
popa
push
dec
xor
in
pop
sbb
in
jno
faddl
enter
mov
push
jecxz
and
fnstenv
mov
ljmp
in
arpl
fcompl
xlat
mov
mov
jo
jmp
or
jne
push
push
mov
lock
pop
out
aad
xchg
fs
mov
xlat
mov
xor
pop
scas
sarl
xor
arpl
pop
popa
mov
add
out
mov
jnp
push
adc
mov
loopne
and
aad
cmp
cmp
pop
ds
xor
jmp
mov
add
in
cli
scas
int
push
in
sti
cli
adc
sub
pop
pusha
mov
pop
rol
pushf
inc
arpl
lods
xor
and
les
mov
mov
mov
jns
mov
fnstcw
jo
icebp
pop
xor
div
lret
push
icebp
pop
or
and
xor
mov
sub
and
stc
mov
aas
sbb
pusha
push
sub
andb
push
xchg
push
fsubs
in
mov
cmp
dec
repnz
pusha
call
in
iret
mov
arpl
mov
dec
sub
ret
jge
sbb
pop
jmp
or
insb
sub
pop
pop
cmp
add
xor
int
jge
push
enter
rcll
call
idivl
outsl
roll
inc
sbb
fwait
pusha
adc
xlat
rorb
xchg
add
mov
pop
add
fsubr
gs
lods
mov
in
cmpsb
lods
inc
test
jg
sub
in
pop
cmp
dec
imul
loope
xchg
int3
scas
fisttpll
add
dec
imul
rcrl
sbb
xchg
push
loopne
les
test
or
inc
push
lea
jns
xchg
sbb
xchg
bound
or
sbb
lods
rclb
ljmp
mov
or
in
xchg
popf
popf
lods
xchg
mov
jle
loop
ror
out
stos
insl
in
xorb
mov
pavgb
aas
or
mov
das
adc
jmp
imul
xchg
repnz
outsb
movsl
jmp
mov
inc
and
iret
mov
iret
popf
inc
xchg
cmp
sbb
loop
lret
cmp
add
xor
dec
add
ret
cmp
pushf
sbb
rcrb
int
loopne
or
std
ljmp
pop
xchg
push
nop
add
sbb
aam
popf
lods
cmpsb
lods
add
mov
sub
jle
inc
or
gs
xor
cwtl
xor
add
mov
adc
scas
stc
addr16
divb
addr16
cmp
repnz
mov
xlat
dec
mov
pop
scas
pop
out
in
sub
adc
rorl
mov
les
mov
push
xor
cmpsb
mov
mov
jecxz
cmp
mov
out
scas
jmp
in
and
mov
mov
pop
adc
frstor
jp
fsubrl
into
pop
cmp
ret
sahf
sbb
repz
dec
dec
xor
stos
adc
sbb
pusha
cmp
movl
repz
and
and
ds
mov
js
mov
in
inc
jl
ret
jge
xchg
pop
sub
sub
inc
outsl
or
pushf
jge
mov
in
call
xor
mov
or
ss
test
vmwrite
pop
and
lock
in
adc
je
ud0
pop
sbb
clc
jp
inc
into
push
sarb
arpl
mov
mov
pusha
xchg
sbb
dec
popa
dec
cmp
pop
xchg
fucomi
repz
or
pop
insl
sub
cs
jmp
xchg
pop
xchg
and
enter
dec
test
mov
inc
mov
adc
mov
adc
pop
dec
dec
daa
mov
outsb
fsts
addl
fdivrl
jmp
pusha
outsl
test
jmp
insl
aad
add
dec
sub
icebp
add
mov
js
rcl
cli
test
jo
loop
xor
mov
mov
fistps
mov
mov
das
add
xchg
push
mov
in
and
repnz
mov
fistl
inc
adc
test
push
jbe
mov
add
loop
xchg
subb
and
jbe
xor
shll
ljmp
and
push
xor
aam
push
mov
negl
add
jecxz
inc
push
jbe
cld
les
pop
cmp
inc
and
fsubrs
xchg
xchg
add
pushf
sbb
xchg
push
or
iret
jnp
sbb
scas
pop
sub
sbb
dec
dec
icebp
push
bound
clc
sub
leave
pop
mov
jecxz
outsl
test
cmp
pop
cmp
cmp
aad
sbb
and
sub
push
das
and
dec
movsb
xchg
or
xchg
or
cmc
call
fstps
cmp
sub
int3
sahf
call
repz
and
loop
xor
mov
jo
out
xor
pop
das
or
xchg
pushf
jl
das
ss
popf
aas
call
into
call
cmpl
xchg
sub
xchg
and
in
push
mov
and
push
push
movsb
ja
jae
cmp
scas
mov
lahf
mov
movsb
out
inc
repnz
pop
cwtl
ja
sbb
enter
aas
aas
sarb
scas
dec
and
popf
bound
movsb
daa
dec
mov
lods
cld
aaa
loope
mov
test
hlt
mov
jle
cltd
int3
mov
mov
xor
aaa
lcall
pushf
cltd
mov
rol
int
sub
pop
or
mov
jae
call
sbb
aaa
imul
xlat
out
icebp
mov
cmp
clc
jmp
pop
inc
push
std
dec
mov
sub
stos
repz
out
push
and
addr16
pop
call
cmc
sub
inc
push
push
lock
pop
inc
test
xchg
rorl
std
lcall
fisttpll
sub
pop
daa
test
lahf
ror
inc
mov
cmp
insl
dec
icebp
fsubr
clc
arpl
sbb
pushf
mov
hlt
jg
xor
fdivrl
clc
pop
out
int
out
sahf
clc
pop
subl
sub
gs
xlat
cmp
push
pop
dec
xchg
rcrb
hlt
inc
push
jl
and
or
in
add
xchg
push
push
addr16
ds
push
fsubp
hlt
shrb
mov
ret
mov
hlt
aaa
push
out
mov
fsin
out
clc
or
fldt
push
out
mov
loope
test
xor
mov
xchg
mov
les
fdivs
mov
xchg
sbb
lods
lods
mov
xchg
push
enter
lock
sub
test
mov
jecxz
lahf
dec
push
aam
in
sbb
sbb
sbb
or
push
dec
in
hlt
popf
sub
cmp
or
push
nop
pop
clc
test
repz
lret
call
mov
sbb
cs
mov
push
push
stos
insl
scas
mov
mov
dec
lds
aaa
fistps
mov
dec
insl
pushf
push
xchg
jge
scas
je
shr
xor
and
mov
mov
or
xor
pop
add
cmp
adc
mov
aaa
stc
sbb
xchg
sbb
add
cwtl
push
enter
xchg
sar
shll
mov
cmp
sbb
mov
call
dec
into
adc
sub
sbb
ljmp
shrb
mov
loop
fsubs
int
lds
mov
pop
loope
xor
in
ss
mov
or
in
rclb
xor
std
or
mov
sbb
sbb
or
ret
in
aam
adcb
pop
sbb
js
aas
inc
push
mov
int
je
enter
inc
or
push
in
inc
xchg
addr16
xchg
push
in
fistl
mov
pushf
and
or
sarb
sbb
sbb
xor
sbb
xor
in
mov
call
and
mov
xchg
in
popf
jge
icebp
xor
xchg
cmpsb
cwtl
insl
movsb
popa
and
jmp
sti
into
mov
hlt
leave
sbbb
lods
sbb
mov
sbb
jmp
les
scas
xor
popa
in
xor
aas
and
and
popa
and
push
hlt
or
mov
push
push
lock
mov
js
jo
movsb
dec
xchg
sahf
add
xchg
mov
out
sbb
rcrb
add
das
addr16
arpl
popa
push
imul
and
testb
mov
mov
inc
cld
repz
fmuls
mov
xor
pop
push
mov
mov
in
mov
loopne
pop
xor
push
mov
and
loop
test
int3
mov
mov
mov
bound
mov
sbb
das
fnstcw
inc
cmp
push
pusha
pop
mov
pusha
pop
or
popf
aaa
int
pushf
lods
lock
mov
fmulp
xchg
sub
or
dec
sub
mov
fidivrl
add
push
call
mov
out
pusha
ljmp
aad
xchg
pusha
sbb
jo
rolb
lods
imull
int3
mov
push
xchg
mov
pop
cmp
aaa
xchg
lea
mov
mov
xchg
mov
fucomi
jecxz
dec
nop
lods
mov
dec
sahf
xor
xchg
test
out
pop
pop
js
bound
add
sti
fistpl
mov
xchg
pop
popf
outsl
aas
icebp
pop
cmpsl
ljmp
push
mov
mov
fisttpl
cs
cmp
es
xchg
sbb
inc
outsb
jbe
jmp
lret
rcll
cmp
sarb
pop
push
nop
call
lcall
into
scas
xor
inc
ss
sub
cmc
mov
dec
clc
std
pop
loop
shll
iret
addr16
jo
popa
xor
fbstp
sti
push
xor
ljmp
pushf
shlb
push
dec
aam
mov
push
das
or
dec
cmp
xchg
push
aaa
xor
and
adc
mov
jge
fnstsw
fsubr
add
pop
and
fldl
in
add
xchg
into
outsl
addb
insl
mov
shrl
mov
add
cli
rcl
fiaddl
xor
inc
adc
jmp
nop
xchg
adc
aas
lods
rolb
and
jge
shrb
int
adcb
aas
pop
mov
lods
inc
aaa
sub
add
out
mov
xor
iret
sar
loop
in
ja
dec
and
pop
dec
inc
pushf
out
adc
leave
pop
inc
inc
in
inc
aam
cmp
mov
cld
das
xor
mov
jns
ja
mov
jne
mov
movsl
notl
aaa
lock
add
push
fs
insl
lock
jg
call
lcall
adc
xor
push
inc
dec
fistpl
xchg
test
or
push
xor
jecxz
mov
in
hlt
int3
into
sbb
mov
and
push
mov
je
es
or
push
sbb
adc
loop
cwtl
add
and
push
cmp
mov
mov
mov
jae
pop
mov
popf
pushf
sbb
pushf
lret
adc
mov
mov
adc
aas
imull
fdivl
and
into
pushf
sub
shlb
adc
add
iret
cmp
jle
cmp
xchg
enter
sbb
call
insl
lods
adc
mov
push
pop
xchg
cmpsl
adc
inc
inc
jmp
jnp
xchg
and
or
add
adc
aaa
scas
mov
lret
mov
cpuid
sbb
fldl
pop
lret
cmp
mov
sbb
add
ror
aam
in
and
lahf
rorb
sbb
inc
and
cmp
mov
push
scas
xor
xchg
xchg
das
in
aam
push
fistl
or
push
adc
mov
aam
mov
adcl
and
in
jb
mov
or
icebp
pop
ret
cmp
imul
mov
mov
add
je
aas
out
arpl
cmpxchg
and
xor
lock
mov
das
rclb
hlt
dec
mov
xchg
clc
mov
mov
dec
clc
pusha
pop
jo
mov
or
popa
mov
xorl
std
out
in
aaa
insb
inc
mov
les
call
adc
xchg
shr
rorl
loopne
fistpll
adc
movsb
das
punpcklbw
cmp
inc
push
scas
clc
subl
imull
ret
mov
aam
in
inc
in
rcrl
popf
inc
das
cmp
mov
out
or
push
enter
nop
jns
das
xchg
imul
loope
outsl
out
scas
jl
inc
adc
dec
popa
xchg
ret
inc
jge
ds
mov
push
insl
cltd
pop
or
scas
pop
ljmp
gs
and
adc
aam
test
push
cwtl
enter
inc
xor
dec
xor
jmp
jne
push
cmp
rclb
bound
mov
cmp
call
dec
ror
mov
les
jno
add
por
loop
xor
xlat
mov
int3
push
cwtl
or
xor
adc
sub
and
pop
bound
ds
add
inc
jl
dec
xor
pop
mov
and
sub
mov
notl
fdivl
shr
sub
pop
xor
hlt
cmp
inc
leave
or
mov
jbe
inc
call
scas
outsl
ds
adc
sarb
dec
add
push
push
aas
adc
je
call
mov
popf
aam
cmp
and
sbb
cli
push
leave
push
lds
sub
sub
xchg
gs
cmp
in
or
sub
cmp
test
adc
lods
or
mov
stos
mov
mov
and
loop
bound
add
jae
add
pop
or
sahf
dec
inc
mov
mov
andl
out
mov
fwait
mov
mov
loope,pn
sbbb
insl
pop
out
add
lock
scas
std
jge
lea
inc
stc
lret
jle
insl
cld
pop
pop
sub
add
test
or
jmp
inc
push
inc
outsl
rclb
std
lock
cmp
icebp
insl
loopne
ds
inc
xor
enter
sbb
loop
lahf
sbb
inc
mov
arpl
add
adc
and
rcrl
adc
or
pushf
outsl
xor
lock
pop
movb
out
popa
ret
sahf
jbe,pn
lods
hlt
clc
iret
lock
jmp
pop
das
shll
pop
add
xchg
repz
pop
or
orl
jns
cwtl
mov
mov
mov
and
pop
xchg
outsl
fcompl
and
xchg
xor
lret
sbb
xlat
or
in
dec
je
mov
dec
test
pop
leave
dec
shrl
nop
push
xchg
lcall
aam
jno
ret
cmp
jo,pn
stc
xchg
push
and
jle
int3
into
imul
out
xchg
cmpsb
dec
aaa
cmc
lods
xchg
fimuls
mov
movsb
aad
inc
push
add
aam
push
pop
add
in
mov
aad
sub
mov
arpl
fidivl
cld
push
mov
leave
mov
stos
xlat
shl
ss
cmp
push
sub
rclb
popl
lods
fistpl
inc
stos
mov
xor
in
inc
test
daa
in
jb
hlt
loopne
lahf
test
jne
fnstsw
inc
test
popf
jne
xchg
inc
shll
mov
sbb
fldt
or
pop
mov
mov
pusha
fidivl
shlb
sahf
cs
jge
les
cmc
ja
push
in
cmp
mov
mov
leave
dec
fcomip
xchg
dec
adc
push
jo
mov
scas
mov
ret
push
cli
cwtl
mov
icebp
xor
out
jnp
mov
pavgw
or
push
popf
outsb
std
sbb
lods
pop
and
sbb
in
sub
in
das
lret
push
aad
adc
cld
aaa
ja
inc
xor
dec
scas
jecxz
test
inc
mov
cmpsb
dec
and
adc
into
icebp
test
in
sbb
jns
or
fwait
push
mov
jnp
aaa
pop
pop
imul
shlb
fwait
rol
ffreep
sbb
aam
roll
int
clc
pusha
in
and
stos
cltd
push
push
fsubrl
jnp
jle
lods
sbb
jbe
mov
sub
mov
mov
lods
jmp
repz
adc
add
sbb
xor
jnp
sub
mov
out
das
mov
cmp
ljmp
sub
sahf
dec
push
pop
mov
sbb
mov
add
fistl
and
push
lods
int3
xchg
xor
dec
push
mov
mov
fsubrl
lret
xchg
pop
lret
jo
push
xor
lods
pusha
dec
jecxz
inc
lahf
nop
sbb
xchg
cwtl
cmp
and
pop
js
and
sbb
les
in
lcall
mov
test
xchg
outsb
jae
rcrb
das
sarb
push
fcos
xchg
lock
lock
xchg
call
mov
cmp
pop
fiaddl
cli
sub
lods
pop
xor
fisttpl
add
std
mov
dec
lahf
jmp
dec
dec
aas
lock
mov
xchg
xchg
test
jmp
fnstcw
sub
sbb
jnp
sahf
mov
lds
sbb
mov
sbb
jg
loopne
shr
xor
sti
mov
stc
cmp
dec
ret
lods
ss
fisubrl
jecxz
insl
out
call
popf
imul
stc
or
and
sbb
mov
jle
jecxz
mov
push
inc
pusha
out
daa
mov
mov
push
outsb
daa
push
pop
and
test
loop
cmpl
xchg
std
push
mov
push
cmp
ret
pop
std
lret
mov
push
cmpsb
mov
inc
ret
adc
jle
push
xlat
jo
test
cwtl
test
lods
inc
cmc
pop
mov
jge
dec
push
shr
cmp
cli
repz
lods
adc
pop
repz
out
xchg
outsl
push
pushf
jo
sti
addr16
pop
pushf
dec
ljmp
call
loop
loop
lods
sbb
bound
inc
cmp
scas
lods
xchg
xchg
mov
cmp
xchg
mov
sarb
pop
js
adc
fisttpll
test
pusha
aas
ljmp
jae
lret
adc
push
fcmovb
xlat
cmp
sbb
lods
nop/reserved
mov
and
das
push
rorb
mov
scas
fidivrs
imul
fnstsw
push
dec
ret
sub
mov
ljmp
jae
mov
or
shr
dec
inc
add
push
push
sahf
push
mov
enter
push
fstpl
int3
mov
inc
jg
sbb
cmp
imul
iret
shrb
fistps
call
sbb
push
adc
fistps
push
pushf
test
cmp
jmp
fxch
enter
aad
iret
xor
xor
jle
repz
xchg
mov
jge
add
pop
leave
int
sub
mov
add
outsl
in
xor
mov
sbb
push
ret
into
dec
lods
sbbl
sahf
dec
incb
pop
pop
lods
and
out
xor
gs
roll
daa
add
and
sarb
cmp
jae
das
fidivs
and
cmp
adc
or
sub
mov
jns
and
xchg
and
mov
cmp
sub
pop
push
leave
aam
jmp
in
sub
test
cmp
aam
inc
pop
out
lock
cs
das
stos
ficoml
test
adc
add
sbb
mov
clc
jg
clc
loopne
mov
push
adc
inc
sub
popf
mov
shlb
push
sub
push
jbe
outsl
out
cltd
sti
xchg
inc
pop
test
pop
mov
gs
jnp
jbe
ljmp
add
loope
rcll
cmpsb
loope
jmp
notl
lret
add
ja
xchg
lods
shlb
xor
dec
and
xchg
sbb
lods
imul
xchg
push
adc
out
pop
push
dec
dec
lea
jecxz
inc
out
mov
jmp
lret
iret
jecxz
push
dec
lret
cmp
daa
scas
movsb
scas
mov
out
in
add
pop
jae
xor
pop
and
dec
sahf
cwtl
icebp
push
loopne
int3
xchg
mov
sub
inc
push
fld
adc
popa
jecxz
mov
adc
lods
sub
mov
imul
enter
sub
dec
mov
cltd
sbb
mov
ljmp
mov
loope
mov
adc
push
xchg
cmp
adc
add
mov
sub
hlt
rorl
and
inc
stos
shlb
mov
push
add
sbb
sub
inc
push
loop
xor
dec
ja
orl
mov
daa
mov
sbb
into
inc
mov
sbb
dec
xchg
pusha
test
fcomps
inc
in
sbb
ss
push
or
push
cmp
pusha
dec
or
xchg
jle
sti
ss
outsl
jle
popa
xchg
rolb
inc
or
mov
ja
lods
and
mov
xchg
mov
insb
sub
mov
leave
dec
mov
subb
xlat
cmp
lcall
xchg
outsl
stos
adc
cmp
dec
mov
dec
das
ret
lds
mov
nop
sbb
fcmovne
call
dec
push
in
repz
pushf
inc
enter
xor
sub
mov
lods
movsb
mov
ja
int3
jmp
jp
cmp
dec
add
xor
lods
add
or
in
pop
movsb
mov
jno
or
movsb
xchg
cmp
lahf
ficompl
adc
sub
bound
mov
lock
push
mov
pop
je
push
mov
pop
das
pop
xor
jmp
jnp
cwtl
push
mov
xor
xor
xchg
aas
push
iret
pop
adc
xchg
int3
xchg
sahf
pop
sbb
jmp
mov
xorl
mov
sbb
adc
or
adc
cli
jbe
xor
pop
in
inc
cmc
push
inc
xchg
lods
aam
repnz
add
fidivl
test
nop
in
mov
sbb
adc
push
insl
cmpsl
mov
clc
xchg
pop
push
lods
push
mov
push
jg
add
sub
test
sbb
aas
mov
fistpll
leave
jo
lcall
inc
out
xchg
sbb
inc
pop
cmp
jecxz
test
adc
stos
rolb
jno
sbb
ficomps
cs
cmp
push
bound
push
xlat
xor
inc
pop
jo
and
pop
mov
pop
jl
or
pop
lods
int3
aaa
cmpsb
xor
out
std
lret
cmp
test
pop
mov
sub
dec
out
cmpsl
jae
and
pop
les
xor
dec
cmp
movsb
mov
fiaddl
or
ret
pushf
pop
mov
adc
rorb
test
cmc
mov
jmp
fstpt
pop
dec
scas
out
mov
cmp
mov
jno
out
mov
cmp
xchg
ucomiss
mov
shlb
jo
popf
scas
jmp
mov
movsb
mov
adc
in
push
xchg
pop
push
mov
push
out
mov
repnz
cs
sahf
sub
adc
xchg
enter
sub
aas
cmp
mov
mov
out
aad
sub
xchg
cmp
lods
sub
jl
lahf
xor
cs
int3
movsb
fs
jmp
mov
les
inc
fucomi
out
out
sub
mov
out
test
cmp
or
in
ljmp
xor
mov
fildll
mov
das
and
cmp
aas
iret
insl
leave
lods
into
xlat
fsubl
lods
jmp
iret
outsb
stos
outsl
lods
cs
inc
lods
jecxz
mov
push
pop
sub
enter
lret
or
aaa
rorl
aas
les
sbb
mov
pushf
cmpsl
popa
push
leave
mov
or
jno
jle
enter
repz
movsb
in
movsb
fdivl
jmp
stos
mov
pop
pop
popa
scas
out
cwtl
push
repnz
mov
mov
mov
mov
push
jg
push
pop
or
out
fildll
das
movsb
je
clc
ljmp
dec
cmp
and
fadds
pop
xor
stc
adc
xorb
fistps
ja
pop
les
adc
mov
out
mov
xor
test
iret
adc
xorb
push
mov
repz
pop
fmuls
aas
lods
nop
mov
cs
add
rorb
pop
push
fimull
cmc
adc
xor
int3
rol
test
jo
aad
dec
pop
in
movsb
jno
in
mov
inc
xor
push
ficoml
dec
push
xlat
aad
and
pop
pop
and
or
inc
imul
nop
inc
test
std
xor
notl
sub
jnp
insl
push
test
mov
in
enter
sti
mov
imulb
push
mull
lahf
mov
repnz
jp
sarb
cli
mov
dec
mov
xchg
lea
ret
xorb
dec
cli
ljmp
sbb
xor
test
xchg
cmp
inc
add
loop
out
xlat
insb
jno
jmp
xchg
imul
cld
dec
clc
xchg
fistpl
fisubs
xchg
inc
push
das
jmp
subb
mov
stos
repz
and
mov
ret
jg
adc
leave
out
push
nop
bound
cmp
cmc
insl
clc
stc
mov
iret
scas
es
imul
or
lods
pop
lea
or
in
fcoms
cld
sub
xchg
sti
call
and
fcomi
mov
idivb
xchg
jnp
pop
mov
or
and
fcmovnu
and
test
aam
in
push
in
enter
dec
clc
popa
jecxz
cmp
sahf
fdivl
adc
mov
xor
xor
std
subb
jmp
inc
lea
inc
cmp
loop
repz
jo
iret
dec
add
add
adc
xor
mov
sbb
arpl
mov
dec
jge
xchg
aad
pop
mov
outsb
sub
mov
stos
adc
fisttpl
push
jp
ficoml
dec
pop
inc
pop
sti
push
loop
cs
cli
movsb
inc
mov
jmp
xor
cmpl
push
ret
stc
lret
inc
rcll
push
sahf
jns
fs
jge
outsb
xchg
lods
call
out
jb
cmp
xchg
push
dec
iret
mov
in
push
mov
or
lods
fisttpl
scas
enter
loop
lods
fsubl
xor
jne,pn
xor
sub
xor
fstps
pop
jl
jae
or
les
pop
call
cmp
repnz
fstps
inc
cmp
jmp
idivl
dec
mov
cmp
mov
xor
lods
mov
das
and
pop
je
nop
jle
add
jne
call
pop
pop
mov
sbb
and
aad
inc
daa
jnp
or
cltd
movsb
sub
std
or
sbb
xchg
in
repnz
aam
or
movsb
iret
adc
push
sub
sbbb
mulb
sub
and
sub
fbld
cmp
cs
std
jp
push
scas
jns
jmp
xchg
in
in
sbb
out
repz
jmp
mov
outsl
out
in
cmp
lea
les
xor
mov
and
ficompl
push
xchg
jne
loopne
mov
sarb
in
das
adc
mov
movsb
pushf
cs
lods
mov
out
mov
popf
paddusw
adc
push
das
xor
movaps
ljmp
outsl
pop
dec
test
jbe
lret
popf
mov
inc
cmp
test
cmp
dec
ss
cli
mov
mov
fisttpll
cmp
xor
bound
or
inc
jp
pusha
adc
jp
mov
iret
add
aaa
xor
idivb
fldcw
insb
adc
xor
push
jge
pmulhuw
push
mov
cmpl
pop
jnp
push
lods
scas
cmp
cltd
out
inc
cmp
das
mov
repnz
repz
subb
adc
cs
movsb
in
aas
rcll
cltd
cs
popa
pop
dec
stos
inc
scas
in
hlt
and
push
mov
mov
xor
lret
adc
mov
out
and
xor
xlat
push
push
test
jecxz
stos
psubd
sub
xchg
stos
sub
inc
lds
repnz
testb
jnp
mov
fwait
ja
mov
xchg
lods
mov
pusha
iret
mov
push
mov
mov
fstpt
sub
dec
ffree
or
jge
fidivrl
sbb
inc
xchg
dec
fdivs
jno
dec
add
sub
jb
push
std
and
cmp
cmp
sub
cs
and
push
int
jnp
xor
in
push
mov
fstpt
mov
popa
subb
mov
cwtl
fmuls
xor
mov
adc
pushl
iret
das
js
lock
stc
incl
in
bound
mov
xchg
lods
je
scas
xchg
xchg
fists
stos
fcmovnb
in
int
and
push
fsubrl
outsl
cwtl
and
ds
jae
xor
je
sarb
ss
fistpll
push
ja
cs
pop
ja
mov
fldl
iret
pop
movsl
cmc
push
int
mov
mov
addb
lods
inc
mov
cmp
dec
shl
sub
lea
dec
rcrl
test
cmp
sub
adc
lods
cmpsb
pop
sbb
pop
mov
ficompl
cmp
inc
cmp
je
cmp
rcrl
rclb
or
test
test
mov
xlat
lods
adc
insl
xchg
movsb
pop
pop
adc
dec
mov
sbb
js
mov
xlat
jnp
repnz
loopne
bound
ss
sbb
push
push
add
js
mov
cmp
sbb
jle
bound
and
mov
sbb
mov
data16
ss
sub
iret
jne
push
shl
cwtl
adc
fdivs
fnstsw
mov
hlt
insl
xchg
or
cmp
cmp
cld
fisubs
mov
fsubrl
out
cwtl
cs
jge
push
push
jo
aad
sbb
jmp
push
nop
mov
cltd
pop
movsb
sbb
adc
roll
jg
or
fs
jo
adc
ret
mov
scas
push
sbb
mulb
push
in
daa
aas
xchg
or
xchg
jae
xlat
call
push
push
in
jnp
loop
sbb
aaa
enter
cmp
lods
jb
sar
push
add
nop
jge
pushw
push
sti
dec
cmp
adc
xchg
cmp
pop
mov
mov
lock
mov
inc
out
inc
xor
int
into
fsubs
xor
push
imul
dec
cld
xchg
mov
testb
aad
cmp
movsb
lret
dec
fcmovnbe
push
jae
lock
mov
xchg
push
lret
popf
jo
sbb
dec
call
ss
das
adc
inc
mov
pop
and
out
dec
sbb
xchg
sbb
lods
dec
loope
mov
pop
in
ret
jo
push
mov
call
sarb
xchg
shll
mov
aad
pusha
rorb
out
in
pop
outsb
loop
sbb
mov
das
sarb
aam
pusha
repnz
je
aam
inc
jecxz
xchg
cmpl
xorl
xchg
xchg
add
or
stos
mov
test
loopne
xchg
scas
mov
pop
scas
arpl
leave
in
clc
jnp
and
adc
daa
cmp
sub
cmp
enter
jnp
pop
test
scas
adc
and
xchg
mov
sub
pop
in
pop
bound
andb
jo
lcall
lea
iret
or
sbb
push
iret
xor
addr16
pop
adc
enter
lcall
iret
inc
push
cs
pop
adc
cmp
aam
mov
jecxz
jns
addr16
adc
push
push
cmp
or
xor
push
fs
cwtl
je
cmp
ljmp
stos
jg
and
mov
pmulhuw
scas
loop
jne
movsl
iret
and
lret
pop
mov
jbe
mov
pop
shlb
jbe
mov
lret
xor
cmp
jecxz
subl
inc
aaa
mov
xchg
lock
addb
dec
sbb
loopne
pop
lock
inc
xorl
enter
in
and
add
xor
gs
call
pop
sbb
ds
sub
hlt
sbb
and
mov
or
sub
mov
add
imul
popa
adc
or
mov
stc
or
dec
pushf
push
daa
icebp
lods
test
fcmovnb
int
lds
inc
rol
sbb
jge
pushf
sti
push
adc
dec
test
dec
insl
cmpsl
les
and
mov
roll
mov
jno
lods
inc
pop
jo
push
call
stos
pop
cmp
jns
ret
pop
add
scas
xor
insl
xor
push
push
jmp
repz
dec
pusha
jnp
addr16
aam
cmpsl
lods
movsb
shrb
push
dec
orl
mov
incb
shrb
xchg
shrl
clc
sbb
mov
out
std
ss
inc
sti
pusha
jge
pop
es
add
clc
call
cmpsb
mov
stos
mov
jne
mov
iret
xor
ljmp
jne
ds
lods
xor
cmpsl
add
xor
scas
imull
cltd
repz
ret
adcb
stos
adc
pop
pop
rclb
cmpl
bound
addb
cmp
mov
cmp
xor
fwait
repnz
call
andb
dec
jle
jb
int3
and
lahf
or
imul
ljmp
push
sbbb
aam
lods
mov
and
out
hlt
cmp
fs
pop
mov
and
outsb
test
js
and
and
push
jne
pusha
xchg
sbb
sbb
sbb
roll
enter
mov
lods
lock
outsl
sub
lods
dec
icebp
dec
push
movsl
mov
ret
out
push
cmpsb
and
cs
mov
rcrb
fcmovnu
mov
and
dec
ret
test
jo
pusha
mov
dec
sub
aaa
int
pop
test
push
add
mov
add
jle
stc
inc
ds
xchg
stc
mov
jmp
mov
lcall
pop
xor
addl
push
xchg
outsl
dec
pop
ds
aaa
push
inc
xchg
pop
call
and
jecxz
xchg
push
lock
mov
xor
outsb
sbb
push
or
or
sub
lds
in
sub
outsb
cmp
push
cltd
imull
or
cmp
dec
fcmovbe
pop
pop
push
mov
icebp
cmp
xchg
iret
aam
lret
push
and
push
es
outsl
ret
loopne
dec
xor
aam
filds
mov
sub
push
mov
aam
or
shlb
call
movsb
mov
pop
add
in
and
mov
fmuls
xchg
insl
movsl
mov
jo
xchg
pushf
lahf
lea
sub
ss
push
mov
es
subb
mov
mov
test
cld
xchg
pusha
into
lods
cs
shll
and
pop
xor
adc
ja
mov
sub
test
nop
push
sahf
xor
pop
add
mov
lea
lods
sub
push
sbb
xor
movsl
xchg
sub
int
jg
sub
xor
and
mov
test
pop
shll
in
call
rcr
dec
in
xchg
pop
pop
mov
mov
fs
in
into
daa
xchg
inc
jecxz
sti
sbb
ret
fisttpll
faddl
les
enter
jnp
shll
inc
jne,pn
sub
jbe
mov
xchg
or
pop
cmp
add
jp
and
sar
mov
jecxz
pop
pop
xlat
les
sbb
ret
push
dec
loop
das
xor
aam
faddl
xor
jno
xchg
inc
xchg
push
sbb
mov
push
push
sub
aam
sub
loopne
dec
push
ds
xchg
xchg
sbbb
fcomps
mov
fwait
push
sahf
aas
cld
movsb
push
and
mov
lods
ds
push
mov
dec
push
fisttps
in
push
cmp
hlt
pop
fwait
les
xchg
in
xor
sti
mov
scas
imul
inc
jg
jg
or
jg
push
fistpll
out
jb
and
pop
inc
test
push
push
and
cwtl
iret
push
aad
in
filds
nop
ds
pop
popf
push
adc
lea
xchg
fadds
lods
xchg
xorb
sub
sar
movsb
hlt
outsl
inc
lods
in
clc
lret
repz
push
mov
js
and
in
adc
lock
jnp
in
mov
push
mov
movsb
xor
fs
bound
sub
sub
jb
and
clc
pop
or
lock
sbb
cmp
mov
xor
mov
xchg
add
jno
push
rcrb
cmp
add
add
mov
arpl
inc
jge
push
test
jg
inc
repz
mov
lods
mov
aam
sbb
xor
aaa
inc
sub
scas
inc
int3
shl
test
jp
mov
push
mov
sti
pop
cwtl
and
aaa
paddsw
lahf
movsb
and
sbb
lods
aam
push
and
nop
xor
jg
pop
mov
add
movsb
pusha
mov
aam
mov
aam
jg
push
cmc
imul
rol
es
int
insl
xchg
insl
pop
cmp
jae
xor
icebp
mov
sub
subl
bound
ret
mov
pop
pushf
push
add
sub
add
pushf
and
pop
or
iret
adcl
sub
or
gs
dec
jmp
jge
repnz
mov
jmp
push
mov
cmp
sbb
or
adc
jae
jnp
int3
and
and
cmc
repz
enter
adc
xor
stc
mov
mov
dec
repz
in
pop
mov
jp
pop
in
fucom
cmp
ljmp
mov
lods
mov
jbe
jmp
pop
mov
sarb
push
jo
sub
icebp
xchg
cmp
jmp
xchg
cmpl
and
or
pop
mov
pusha
jb
push
lcall
nop
dec
mov
push
dec
scas
incl
jecxz
inc
add
or
inc
into
cmp
and
inc
mov
fisttpl
repnz
imul
mov
stos
in
test
pop
mov
int3
movb
test
cmp
dec
xor
and
add
jge
xchg
and
cmp
out
cmp
sub
jbe
mov
add
mov
or
dec
scas
aam
insl
cwtl
sahf
dec
int
int3
ds
lods
and
jp
stos
hlt
push
push
mov
rol
sub
jle
dec
push
aad
in
and
adc
mov
mov
add
sub
push
loop
jecxz
insb
ja
lock
lahf
fldt
mov
xor
pop
dec
sub
jge
jmp
xchg
adc
xchg
push
aam
loopne
dec
xor
mov
hlt
outsl
or
cmp
dec
push
hlt
mov
clc
xchg
shrl
repnz
add
push
push
and
or
dec
ss
xor
pop
mov
out
fisubl
dec
push
pusha
into
and
push
pop
sub
dec
sub
push
adc
je
call
mov
fcmovnbe
push
jl
and
mov
mov
bound
cmp
or
test
add
les
and
sbb
pop
mov
xchg
and
mov
inc
jmp
lcall
mov
aaa
adc
aam
test
sbb
push
sbb
in
pop
inc
dec
or
pushf
int
mov
lahf
lcall
pop
je
cs
ds
in
ss
out
mov
jg
mov
pop
dec
rorb
fdivp
insb
inc
push
sahf
dec
test
mov
fldt
inc
sbb
adc
dec
les
cltd
ficompl
mov
loopne
mov
pop
fdivrs
lods
fistpll
pop
mov
sbb
aam
mov
out
jno
xlat
or
mov
or
mov
fdivl
xchg
out
repz
mov
scas
je
popf
pop
mov
repz
jle
inc
xchg
movsl
cmp
and
pop
push
ljmp
sarl
mov
inc
shr
loop
mov
cs
mov
fmul
enter
cmp
jmp
xchg
mov
push
inc
xchg
outsb
fisubs
popf
fistl
stos
scas
aad
rorb
aad
cmc
and
punpcklbw
sub
push
rorb
nop
pop
insb
shll
arpl
push
jg
push
pushf
jo
out
scas
and
push
roll
ljmp
inc
sub
xor
call
and
test
push
and
sub
mov
mov
hlt
adc
in
aam
pop
and
pop
adcl
add
test
xor
js
dec
dec
mov
push
pop
and
out
jl
das
mov
and
dec
inc
mov
xor
arpl
or
jle
add
xor
ja
call
leave
and
sbb
mov
popl
xchg
push
outsb
pop
push
mov
sahf
jp
or
cmp
out
add
sti
push
leave
in
jle
cs
inc
and
test
insb
ja
and
imul
mov
prefetcht2
lret
iret
jno
popa
aam
pop
push
nop
push
xchg
cmp
ljmp
into
outsl
mov
inc
addl
mov
aas
aam
cmp
push
popa
cmpsl
std
add
ja
out
jecxz
loopne
insl
push
ret
sarl
pusha
aaa
aad
pop
push
lds
rorl
sar
testb
mov
mov
call
ljmp
mov
adc
dec
jae
xor
push
cmpsl
sbb
inc
mov
dec
push
loop
add
call
out
jnp
and
sbb
push
sbb
xchg
rorb
cmp
mov
and
mov
and
pop
inc
push
iret
pop
and
lods
inc
sbb
addr16
lcall
sbb
pushf
push
push
daa
push
push
sbb
cmpsb
push
sbb
xchg
push
mov
idivl
rolb
cld
inc
roll
mov
and
in
adc
lods
cmp
inc
cltd
shrb
lret
sbb
inc
jnp
mov
mov
sbb
push
int3
gs
dec
mov
push
push
cmp
push
xchg
hlt
repnz
in
cmp
xchg
sti
test
pop
aas
cmp
inc
xor
sub
adc
mov
fmuls
inc
cmpsb
repnz
sub
mov
mov
repz
push
gs
or
bound
cmp
cmp
enter
mov
pop
jg
add
nop
sub
or
cmp
cmc
pop
push
jmp
shlb
mov
adc
sbbb
test
pushf
cmp
movsl
mov
jle
cmp
ss
and
lds
ds
or
lods
in
scas
pop
push
and
out
jg
cmp
in
sub
inc
mov
icebp
ret
stos
mov
xchg
mov
mov
or
into
leave
int
imulb
sbb
in
xor
mov
iret
add
push
das
xor
loopne
into
lret
mov
push
popa
lods
insb
loope
sbb
mov
ror
pop
addb
cs
ret
mov
adc
ss
dec
rcll
dec
jae
adc
push
sub
inc
and
mov
cmp
lret
call
pushf
cmpsl
jl
out
mov
inc
pusha
or
or
xchg
call
mov
mov
movsb
pushw
shl
dec
movsb
xorb
inc
insb
cmp
jns
jb
adc
xor
popf
fsubrl
jl
mov
pop
ret
std
mov
or
movsb
stc
sub
lahf
sbb
pop
sub
adc
bound
popf
pusha
outsb
pop
es
mov
pusha
pop
add
cmp
cs
xlat
shrb
repz
mov
mov
data16
jb
dec
lret
ret
mov
pop
mov
xorl
enter
push
pop
ja
gs
cmp
add
and
pop
push
dec
shrb
pop
cs
dec
shrb
icebp
cld
adc
bound
pop
sbb
pushf
sbb
adc
fisubrs
cmp
fstp
inc
test
sbb
enter
sbb
xor
jne
adc
arpl
lret
mov
fs
cli
fwait
push
xchg
jecxz
or
jns
mov
pop
loop
push
and
jmp
inc
xchg
cmp
pushl
cmp
pop
add
aas
out
enter
decl
jmp
cwtl
lahf
cld
xchg
imul
xor
pop
inc
ljmp
push
inc
out
jmp
add
or
icebp
leave
mov
dec
jo
ja
addl
stos
fistps
aaa
fisttpll
push
dec
fstpl
sub
cs
out
popf
rcl
lahf
adc
mov
fimull
into
shll
pop
push
adc
popf
das
sbb
fstpt
cmp
rolb
inc
cld
pusha
test
test
fs
dec
iret
fcmovnu
rcrb
jae
sbb
ret
or
scas
sub
xor
lret
lahf
divb
fnstenv
popa
rcl
or
cmc
dec
dec
int
jo
jp
scas
dec
ljmp
sub
pop
sub
daa
insb
cmpb
sbb
data16
jo
pusha
push
je
jp
ret
mov
fsubl
and
xor
add
rcrb
jb
push
jb
icebp
jbe
jmp
lret
lock
lahf
ljmp
xlat
push
jno
rclb
jno
outsb
pop
xchg
popf
push
scas
mov
lods
cmc
pop
insb
xchg
in
mov
icebp
or
lods
fidivrl
shrb
fimuls
imul
int
mov
pop
mov
push
rclb
lods
test
push
sbb
cmp
and
xchg
cld
cmp
cmpb
outsb
mov
insb
aaa
mov
pop
xlat
ljmp
loopne
andl
sbb
mov
push
aam
pusha
xor
cmp
or
leave
xlat
jge
movsl
jecxz
pop
pushf
addr16
jl
jg
mov
push
xchg
or
pop
add
jle
xchg
pop
add
pop
aam
and
bound
arpl
pusha
mov
lods
push
sbb
sbb
ljmp
sub
shl
fidivl
aas
nop
out
rcrl
xchg
jbe
push
add
mov
or
js
jno
mov
mov
shrl
movsl
fs
lods
fists
pushf
pop
into
cmpsl
int
popf
pusha
ds
sahf
das
xchg
shl
jmp
daa
scas
sub
and
dec
outsl
es
sbbb
mov
sub
bound
sahf
mov
ljmp
push
lahf
pop
jmp
int3
and
xchg
sub
pop
testl
ret
cld
into
test
aad
fdivrl
int
push
out
imulb
xlat
outsl
pushf
cs
push
jmp
jno
daa
adc
movsl
mov
cmc
call
fisttpl
push
test
and
into
mov
dec
shlb
xchg
lods
movsl
push
and
inc
cmpsl
arpl
inc
or
sbb
mov
jns
mov
or
adc
and
arpl
cmpsl
ret
pushf
cmp
pop
dec
pop
js
jne
cli
jnp
imul
scas
xchg
stos
push
pop
and
mov
dec
out
push
out
mov
mov
pop
mov
cmp
mov
cmp
mov
add
jl
aad
mov
icebp
or
cmp
sub
inc
fsubl
add
arpl
cmp
addr16
jmp
and
sub
fs
fucomip
mov
sub
subl
mov
mov
dec
nop
xchg
jge
adc
xchg
insl
fisttps
movsb
inc
repz
xor
cwtl
mov
jbe
stos
iret
cmp
fsubp
dec
outsl
fwait
ja
lods
jns
dec
dec
pop
xor
out
mov
cmp
aaa
xor
sbb
mov
and
sub
inc
cmc
hlt
jo
or
cmc
aam
jnp
mov
bound
in
iret
xor
pop
hlt
add
push
xchg
xchg
sbb
adcb
push
add
jns
int
aas
outsl
jge
mov
dec
jns
and
xor
sahf
lods
dec
or
mov
scas
repz
call
mov
ror
jo
pop
subl
in
jge
mov
loopne
push
xor
mov
sub
ret
jbe
out
lds
cs
push
mov
adc
mov
cmp
xchg
pop
jge
insb
loopne
cmp
popf
sbb
xor
push
outsl
sub
sbb
bound
mov
stos
das
mov
in
shlb
mov
jmp
je
push
inc
lods
stos
cmp
stos
pop
mov
repnz
and
ljmp
push
fistpll
or
enter
pop
movsb
jns
out
mov
push
sti
mov
dec
adc
push
sub
fsubrs
adc
jg
adc
das
movsb
mov
ficoml
nop
mov
shll
lods
xchg
mov
jl
loopne
pop
push
jae
and
mov
jmp
inc
dec
in
mov
dec
stos
decb
inc
daa
cmp
lods
xchg
int3
hlt
xchg
jp
out
push
inc
pop
pop
daa
xor
ljmp
fld
arpl
xchg
pusha
and
iret
push
jl
xchg
pop
je
mov
inc
push
in
or
lret
scas
dec
ja
in
sti
iret
cmp
mov
int
lock
push
xor
cwtl
scas
inc
cmp
popa
repnz
out
sub
pop
adc
test
fsubrs
insb
cltd
loope
adc
cmp
mov
push
add
xlat
push
dec
mov
jge
rcll
adc
push
sub
push
push
and
loopne
imul
mov
push
outsb
testl
aaa
leave
jne
adcl
mov
sarb
push
cmp
inc
ret
jnp
sar
aad
in
push
add
daa
out
out
mov
daa
xor
aaa
pusha
push
and
mov
xor
jb
lods
lods
push
cmc
mov
or
iret
jge
fucomi
outsl
lods
cmp
les
loop
movsb
sbb
lahf
ret
cmp
lds
adc
aad
mov
popa
xchg
jo
add
or
orb
das
andb
cmp
idiv
clc
in
adc
nop
xchg
dec
xor
insl
rol
cld
jae
insb
and
cltd
repz
pushf
lret
sbb
daa
call
inc
loopne
icebp
mov
mov
mov
mov
inc
add
je
movsl
cmp
sub
or
dec
cmp
fldt
lods
sbb
aad
scas
dec
fisubrs
mov
pop
fbld
int
popa
decl
mov
subl
or
dec
js,pt
mov
dec
xor
data16
sbb
imull
movsb
bound
sub
add
lods
xor
fildll
mov
loope
fildl
sbb
sbb
nop
jl
mov
popa
lods
mov
lods
mov
cmp
cmp
pusha
stos
add
or
out
lcall
in
scas
aad
imul
aam
scas
cmp
iret
fisubrs
orb
pop
cld
movsb
mull
xor
mov
push
pushl
imul
gs
cli
rcll
xor
cmp
enter
and
imul
lock
scas
push
fstps
pop
aaa
enter
lahf
outsl
scas
mov
push
insl
clc
lods
push
int3
repz
stos
rol
adc
cmpb
test
mov
rclb
sarb
add
adc
sub
push
faddp
xchg
add
dec
push
dec
out
jmp
mov
mov
pop
aas
jae
nop
mov
push
loop
xchg
jge
lahf
mov
ss
out
cmpsl
cmovl
pop
pop
subl
push
sub
cmpsl
push
dec
sub
repz
mov
pushf
pop
fxch
cmpsb
cmp
rcl
pop
mull
dec
outsl
or
out
jo,pn
test
cmp
mov
idiv
lret
lcall
mov
pop
jge
into
mov
cmpsl
jae
rcl
cwtl
mov
mul
lock
fbstp
mov
int
xor
xchg
fldcw
xor
pop
imul
pop
xchg
jl
jg
mov
xor
adc
mov
ss
in
int3
sbb
int3
mov
mov
mov
xchg
pop
and
rcrb
test
jae
les
out
das
jmp
cli
push
mov
test
jp
mov
pop
or
nop
lods
sbb
pop
repz
imul
xor
cmpl
push
pushl
fisubs
pop
cltd
sub
pop
popa
inc
ljmp
mov
shl
push
and
sub
imul
cli
lahf
push
xchg
sub
cmp
and
pusha
loopne
ss
rcrb
adc
test
loope
shll
pushf
inc
adc
mov
jo
imul
adc
lcall
mov
adc
cwtl
mov
pop
popf
scas
ror
jo
cld
test
dec
xchg
mov
rclb
sub
pop
les
push
int3
out
adc
pop
xor
jmp
or
and
nop
dec
xor
fcoms
push
into
rorb
in
shrb
iret
add
lock
pavgb
fistpll
int3
das
out
adc
int3
mov
cld
mov
hlt
movsb
fwait
scas
jnp
rorb
dec
xchg
sub
fucomp
pushf
stc
adc
mov
inc
ljmp
push
nop
sub
add
mov
aad
mov
push
dec
sbb
add
mov
sbb
insl
cmpsl
jae
jle
lahf
testl
jle
or
shl
adc
sub
sub
push
sub
hlt
sbb
and
orb
ss
mov
push
lahf
outsl
push
jo
out
imul
jg
mov
pushf
ss
mov
cmp
xor
imul
notl
jns
xor
dec
xchg
sahf
int
shrd
popa
jle
cmpb
in
mov
das
jo
pop
adc
ss
mov
jnp
jno
cmp
xchg
dec
xor
stos
orl
ret
mov
jno
es
je
fadds
clc
cmp
or
adc
mov
rcll
and
cmp
adc
decb
mov
rclb
mov
and
lock
lods
repz
jo
push
notl
repnz
fsubrp
mov
sti
add
stc
dec
push
subb
cld
sti
mov
dec
cld
sahf
andl
xor
mov
add
and
insb
mov
lods
test
hlt
sahf
in
scas
mov
gs
adc
inc
test
adc
cmp
inc
xor
jnp
push
dec
cmpsb
xchg
xchg
mov
out
aaa
xor
inc
mov
push
xchg
cmp
xchg
push
bound
dec
xlat
in
cmp
in
or
dec
mov
jmp
xchg
test
rcrl
push
lods
or
mov
jg
jae
sbb
mov
fildl
adc
jle
sarb
pop
inc
in
shll
lret
push
mov
pop
pop
and
aas
xlat
push
cwtl
dec
mov
test
pop
xor
lahf
jmp
shl
aam
xor
xchg
jnp
movsl
xlat
fimull
loope
repz
pusha
xor
scas
cmpsb
fistps
das
xor
mov
push
jnp
mov
lods
jl
js
addr16
xor
lret
in
pop
pop
push
sub
clc
adc
shlb
mov
xchg
lock
repz
adc
jmp
out
push
fsubl
test
dec
pop
sbb
mov
sub
loopne
decb
mov
cld
arpl
arpl
andl
or
fisubrs
outsl
push
mov
sub
or
add
and
mov
mov
adc
xor
nop
loope
bound
cld
stc
or
push
das
hlt
push
outsl
add
call
lcall
rorl
mov
sbb
shrl
rcr
xor
mov
rolb
push
cmp
clc
not
cmp
xchg
out
or
lods
sbb
xlat
test
int3
fisubrs
shlb
call
jne
jmp
or
je
repz
out
dec
lret
cmp
mov
lods
pusha
and
mov
fdivrl
mov
mov
es
and
ds
inc
lcall
ret
ret
pop
pop
xchg
cmc
cltd
and
xor
movsl
in
pusha
dec
push
dec
pop
jmp
scas
fs
push
divl
pop
aas
and
enter
pop
and
stos
xor
lods
jnp
lods
aas
orb
jne
loope
insb
mulb
into
shl
lcall
xor
inc
pop
cwtl
and
jg
mov
mov
aas
jmp
or
pusha
mov
sub
hlt
pop
pusha
stos
xchg
pop
sbb
jnp
pop
les
cmpb
aaa
stos
scas
and
inc
stos
out
jne
xor
adc
sub
stc
inc
pop
sbb
es
inc
add
mov
lods
push
lea
fnsave
call
lods
stc
sbb
daa
cmp
daa
in
icebp
inc
sbb
cmp
xchg
aas
and
mov
dec
in
inc
cltd
xor
dec
fnstsw
outsl
inc
and
and
push
ja
bound
mov
lahf
dec
ficomps
add
fiaddl
inc
dec
sub
test
imul
mov
mov
imul
mov
sbb
ret
punpckhbw
pop
and
cmp
xor
nop
sarl
xchg
test
rcrb
jmp
and
inc
mov
mov
push
repz
pop
mov
hlt
iret
and
inc
mov
lods
scas
mov
mov
pop
dec
jle
pop
mov
push
push
mov
test
cmp
sub
ret
add
lods
xchg
pop
test
into
push
fidivl
cmp
addr16
jge
adc
push
lea
addr16
jg
lret
push
pop
popf
mov
cmp
mov
mov
in
stos
bound
test
aaa
dec
ret
mov
xor
fwait
scas
and
nop
dec
pushf
dec
lahf
scas
dec
mov
adc
rcrb
mov
les
enter
pop
das
fbld
mov
jnp
or
cmpsl
out
scas
sbb
loopne
cmp
xor
xor
into
rorb
rolb
subb
xor
fcoms
popa
and
jp
xor
je
cmp
fs
and
jnp
adc
xchg
movsl
fucomip
pop
movsb
notl
inc
pop
test
cmp
sbb
xor
aad
pushl
dec
and
cmpsl
inc
repz
pop
dec
cmp
das
adc
or
cmp
scas
ja
jl
repnz
scas
push
dec
lahf
lods
cmp
int3
xchg
outsb
adc
lds
mov
xor
lock
cmc
jecxz
xchg
lods
fnstenv
xor
push
ljmp
cs
fnstsw
ficomps
imul
aas
cmp
fisubs
outsb
sbb
cld
push
add
and
rorb
test
bound
jle
shll
sahf
ss
dec
scas
inc
or
cld
out
xor
cmpb
aam
or
lea
sti
enter
loop
les
call
and
mov
mov
fsubr
adc
sub
sub
popa
iret
mov
cmp
enter
aas
jmp
ss
out
out
cmp
sub
jmp
std
mov
push
xchg
cmp
adc
mov
test
adc
and
pop
je
pop
nop
mov
cmp
dec
xor
adc
sti
mov
arpl
xchg
mov
mov
scas
pushf
and
add
test
sahf
out
cwtl
movsb
jl
xor
and
and
sbb
imul
mov
sub
movsb
bound
add
pop
fdivl
adc
ret
std
add
test
and
sbb
pop
nop
cmp
in
scas
jbe
jnp
or
inc
bound
cmp
fimuls
adc
xor
pop
int3
mov
cmp
cmpsl
adc
mov
data16
dec
adc
cmp
outsl
mov
push
in
mov
mov
mov
push
cwtl
lods
jl
mov
shlb
in
jbe
xor
xchg
adc
shlb
jnp
cs
das
stc
in
pop
mov
xchg
loopne
jo
push
xlat
mov
test
dec
add
outsb
push
shll
in
xlat
pusha
jmp
ret
lea
push
push
les
dec
or
insb
fsts
mov
and
and
and
and
push
sahf
and
dec
sub
call
jns
in
adc
fadds
mov
test
daa
and
mov
outsl
rorb
xor
xor
aam
in
dec
pop
mov
cmpsb
mov
mov
and
iret
insl
xchg
inc
iret
aam
inc
sub
fmul
mov
xor
push
ds
sbb
outsb
mov
and
mov
loopne
cltd
push
sub
mov
and
sbb
or
lods
lods
fistpl
std
wrmsr
jle
inc
into
pop
push
test
cmp
iret
or
rol
pop
xor
arpl
subl
cmp
popa
mov
insl
dec
cli
shrb
pop
mov
cmp
push
rclb
mov
lods
mov
mov
sbb
jecxz
push
into
mov
inc
mov
pusha
sub
or
nop
push
push
push
jmp
bound
xchg
lods
push
or
subb
in
mov
aaa
pop
inc
aam
add
hlt
cmp
sahf
pop
xor
xchg
orb
bound
pop
scas
xorb
dec
cmp
loopne
lods
adc
add
cwtl
add
lock
iret
popf
stos
aas
loop
fstpl
sub
shlb
mov
dec
mov
jb
lock
pushf
mov
xchg
rcl
inc
lahf
mov
shlb
and
push
add
jo
mov
andb
xor
adcb
dec
fsubl
sbb
sub
adc
sub
pushf
fcmovnbe
jl
cmp
shrb
sbb
mov
jle
sbb
clc
jl
test
bound
jno
xor
outsb
adc
mov
sub
sbb
pop
cs
lods
sub
cmp
cwtl
sbb
xor
lcall
aas
adc
pop
pop
fnstenv
adc
std
pop
cmpsb
mov
into
lea
cmp
cmpsb
sar
mov
js
mov
or
ljmp
lods
lock
mov
out
stc
leave
jg
sbb
xchg
pop
ja
push
int
jo
adc
iret
jmp
arpl
int3
inc
xchg
cs
jne
mov
hlt
ss
repz
mov
std
add
iret
imul
lret
sarb
sbb
push
jnp
and
aam
add
mov
inc
ja
pushf
or
dec
sub
cmpps
xlat
dec
and
jle
or
push
jb
jl
cld
sub
push
in
mov
outsl
mov
fildl
cli
mov
xor
sarb
mov
loopne
lods
xor
jecxz
lods
pop
pop
ret
outsb
dec
push
aam
fdivr
inc
test
cltd
sbb
cld
aaa
mov
jl
and
xor
subb
adc
mov
test
mov
shll
aas
rolb
in
and
pop
mov
sarb
xchg
insl
jno
int
enter
inc
enter
push
test
jle
rcr
leave
dec
das
mov
data16
push
psubb
out
jp
cltd
xchg
dec
or
pusha
push
loopne
sub
jg
das
xchg
or
add
mov
adc
lock
into
test
xchg
enter
fsubp
enter
test
popf
mov
test
enter
not
or
cmp
ljmp
mov
sarl
aaa
sub
fst
xchg
xor
pop
addr16
leave
out
inc
sbb
push
and
cmp
adcl
mov
inc
lea
pushf
insl
adc
movsb
adcl
or
cmpl
adc
pop
cmp
adc
enter
lret
pop
insb
int
lods
fadds
sbb
add
aaa
cmp
dec
adc
pop
loopne
nop
adc
dec
add
push
cld
mov
sbb
cmc
aam
push
adc
jbe
xchg
sub
push
mov
xlat
addb
call
popa
insb
or
dec
movntq
inc
jns
aam
fdivrs
mov
cli
lods
shlb
mov
movsb
push
fucom
xchg
test
scas
jnp
out
jecxz
mov
movsb
xlat
std
lahf
mov
in
call
out
xor
mov
or
xor
sub
adc
and
sub
ret
xor
fcomps
fdivl
xchg
lods
add
sub
iret
mov
dec
outsl
scas
shl
mov
push
adc
fwait
inc
push
out
lahf
mov
mov
lds
pusha
cmp
inc
mov
adc
sbb
sbb
in
xchg
sbb
punpcklwd
push
inc
iret
xor
or
in
xchg
cmpsl
int3
xor
and
fs
mov
cmp
mov
jge
nop
mov
sub
dec
mov
js
xor
xchg
xchg
das
les
xchg
enter
adc
daa
dec
sub
cmp
dec
dec
or
pop
into
aad
ficoms
or
popf
daa
or
popf
movsl
nop
iret
aas
sub
loopne
xor
mov
movswl
cwtl
xor
sbb
outsl
push
mov
pop
mov
push
xor
jmp
lahf
sub
push
add
loop
pop
sub
insl
xor
les
aam
add
rcll
into
lock
pop
xor
call
js
jecxz
xor
jmp
add
popf
mov
ja
repz
sbbl
dec
fs
cmp
js
xor
inc
mov
dec
add
xor
mov
cwtl
stos
xchg
cmp
lea
fwait
movsb
subl
push
aam
pushf
pop
shlb
fmull
jmp
pop
sarb
mov
adc
mov
loope
cmpsl
int3
sbb
jo
lret
and
fisttpll
insl
mov
lcall
addl
dec
shll
adc
bound
repz
cmp
adc
xor
lock
decb
jle
daa
or
aaa
sbb
je
jmp
popf
jp
loopne
aam
rcl
mov
inc
in
mov
addl
popl
and
into
dec
loopne
cmp
sub
sbb
pusha
ja
adc
outsl
and
mov
das
adc
dec
fsubr
int3
push
or
adc
add
fldenv
fisubs
mov
xor
leave
scas
mov
push
das
jae
inc
jl
pop
fimuls
add
mov
jge,pn
rorb
test
cs
aam
pushf
insl
sar
in
and
rolb
movsl
sti
das
pop
lock
jmp
fcmovnb
mov
lods
aam
and
mov
pop
mov
jge
mov
mov
nop
xor
xchg
cmp
in
sub
dec
mov
xchg
repnz
pop
popf
iret
xchg
adc
and
ret
dec
pop
iret
adc
cli
lret
mov
into
cmp
lret
mov
ljmp
inc
aaa
notl
mov
xor
fidivl
sbb
movsb
icebp
paddb
cmc
imul
sbb
xor
ljmp
xor
push
jp
sti
call
flds
cmp
mov
add
cmp
push
xor
cmp
pop
and
gs
xorb
lods
push
xchg
bound
pop
add
xlat
or
push
xor
dec
jno
cmp
das
jg
cltd
cmp
popa
push
inc
shl
xor
enter
aad
movsb
ret
xorb
addl
sarb
stos
mov
sub
arpl
scas
rorb
fimull
and
loop
xchg
pop
out
push
mov
dec
xor
sub
or
fdivr
sub
dec
mov
es
xchg
addr16
pop
xchg
xor
dec
adc
sub
test
loopne
push
imul
cli
and
adc
xchg
outsb
push
xchg
adc
out
jae
or
mov
cwtl
mov
arpl
cs
in
mov
sbb
dec
or
fists
add
iret
and
jnp
jl
in
rclb
ret
aad
push
or
jmp
mov
jo
pop
jge
rep
shld
sbb
daa
cmpsl
pop
out
jnp
in
les
and
xchg
lahf
mov
lahf
sbb
fsubl
cmp
iret
ljmp
xorb
and
push
fsubrs
mov
in
ret
inc
lds
lods
inc
lock
test
jp
shrb
sub
xor
cmp
or
scas
pop
pop
push
mov
lods
xchg
insl
popa
xor
or
jne
jno
xor
mov
adc
add
mov
fildl
and
dec
clc
push
push
jge
jno
das
jmp
daa
cmp
addl
xor
test
jecxz
cmc
je
es
mov
mov
js
fmuls
push
dec
mov
popa
fidivl
out
dec
mov
xor
xchg
sbb
addb
incl
loopne
lock
gs
push
pop
xor
and
mov
sbb
rcrl
stc
sub
sbb
jo
shl
fs
icebp
outsl
out
aam
dec
xor
push
orb
dec
pop
or
add
lods
fcomip
fcoms
lret
push
add
dec
jecxz
mov
fs
inc
mov
je
jmp
push
mov
sub
shr
jae
in
xchg
and
inc
js
adc
aam
jne
lea
adc
push
sbb
stc
mov
push
mov
hlt
cmp
js
pop
je
add
xchg
lcall
adc
sbb
and
and
cmp
jmp
insb
addr16
movsb
rorb
or
mov
js
cmp
mov
mov
mov
int3
push
cmp
sbb
mov
sub
aas
ret
fucom
adc
test
imul
push
es
push
or
subb
cmp
hlt
dec
cmp
daa
rorb
rcr
xor
stos
addr16
shl
jne
mov
sti
and
xor
test
mov
out
mov
lock
cmpb
test
cmp
xor
dec
inc
mov
jns
frstor
adc
loope
xorb
cmp
cmp
xchg
mov
shrb
and
bound
xchg
sub
iret
add
js
loop
dec
dec
in
and
pop
ljmp
adc
arpl
loope
enter
pop
push
mov
shlb
in
and
cli
sti
divl
fimuls
cmp
inc
dec
add
loopne
dec
hlt
xor
mov
leave
sub
je
adc
clc
cmp
ret
mov
leave
test
fs
mov
aaa
jle
repnz
scas
sbb
push
fcompl
mov
or
pop
pop
mov
shll
loopne
add
dec
in
adc
test
scas
push
jb
pop
ficoml
xchg
dec
clc
push
dec
or
xorl
xchg
cltd
mov
add
push
pushf
movsb
jmp
clc
push
inc
push
fbld
lret
pop
test
shufps
xor
mov
pop
xor
xor
inc
pusha
xchg
xchg
testl
jo
pushf
xchg
mov
or
data16
pop
dec
inc
ss
sub
in
inc
mov
dec
dec
lret
jmp
adc
daa
jmp
sbbb
dec
xor
ja
or
shlb
popa
jecxz
icebp
cmc
mov
cs
int
imul
fisubs
sub
cs
dec
fcoml
inc
xchg
test
rcrb
ja
jno
push
scas
into
lods
out
sub
jmp
sbb
les
fnsetpm(287
imul
sub
jae
in
pop
mov
cmp
lods
data16
sub
jnp,pn
clc
hlt
push
cmp
dec
dec
pushf
sub
mov
sbb
pop
pop
mov
fs
xchg
div
dec
adc
iret
and
sbb
pop
cmp
sbb
and
pop
mov
mov
aam
loope
sub
ds
cmp
lods
push
sub
repz
je
cmp
bound
jecxz
jbe
lods
and
jecxz
imul
outsl
dec
in
out
push
shlb
mov
push
rcll
mov
ljmp
bound
adc
adc
cld
jecxz
sahf
jo
out
xor
sub
xor
lock
aaa
dec
push
add
cmpl
jb
shl
shll
pop
sbb
fisubs
add
push
shrl
pop
pop
or
sub
jecxz
ljmp
movsb
icebp
jnp
push
lods
or
cld
mov
jmp
hlt
repnz
es
adc
add
rcrb
jmp
mov
sub
mov
cmp
or
scas
cmpsl
test
movsb
dec
out
mov
cmp
mov
adcb
xorb
adc
and
and
test
shl
out
lds
pusha
push
ret
in
jo
pushl
arpl
lods
outsl
nop
hlt
sysenter
arpl
cltd
and
test
fstpt
fcmovbe
movsb
cmp
std
in
and
iret
push
out
jno
hlt
jo
shlb
fisubs
outsl
outsl
sti
ret
cmc
rcrl
mov
hlt
lock
fdivrl
mov
insl
push
daa
mov
arpl
mov
lods
nop
cmp
insl
jo
out
sub
push
mov
mov
out
nop
js
adc
sbb
xor
repz
mov
xchg
cmp
mov
jl
leave
call
sub
xor
jb
lock
jno
icebp
pop
xlat
lea
iret
adc
lods
sbb
xorl
push
mov
jnp
pop
faddl
mov
ja
je
cmove
mov
or
pop
aas
out
ret
adc
adc
xor
mov
adc
scas
inc
lahf
adc
aas
xlat
ds
cmp
int
loopne
jecxz
mov
mov
sbb
adc
mov
test
shrl
cmpsl
sbb
outsb
pop
mull
fisubl
push
nop
inc
xchg
xchg
das
push
cwtl
sbb
push
neg
fwait
jmp
lea
call
adc
scas
dec
pushf
add
cmpsl
sub
call
scas
lods
enter
inc
mov
mov
dec
pop
icebp
das
push
adc
in
ret
jmp
cmp
and
stc
push
and
cmp
push
cmc
mov
cmp
jp
lods
mov
call
adc
sbb
outsl
lahf
mov
adc
adc
jg
sub
jns
jbe
shrb
pop
test
adc
jmp
adc
pop
test
das
inc
mov
bound
sahf
mov
movsl
iret
dec
push
xor
loope
imulb
cmp
jnp
sub
xor
les
repz
les
mov
arpl
dec
mov
loop
xor
int3
sbb
cmp
adc
mov
fistpl
movsb
xor
fisubl
inc
lcall
orl
clc
loopne
dec
fcoms
xor
mov
flds
mov
in
es
jl
popa
je
lea
xor
stc
aam
fdivr
insl
ret
out
clc
xor
push
cmc
xchg
xor
stos
insl
sbb
jl
pop
jnp
push
aaa
xor
loope
dec
out
push
dec
mov
xchg
arpl
xor
decl
popa
push
sbb
idiv
jnp
cmp
loopne
jbe
xchg
jno
rol
addb
sbb
jnp
cld
cmp
test
mov
outsl
adc
xor
aam
addr16
sub
not
sub
xchg
lods
add
push
jae
and
sub
lods
movsb
push
push
flds
xor
jle
xchg
and
fdivl
out
jb
jecxz
in
ret
clc
mov
enter
fdivl
jne
les
push
sbb
out
dec
jle
int
push
adc
test
stos
sarb
sahf
xchg
shrb
iret
lods
or
fs
mov
and
jle
mov
and
mov
pop
mov
lret
adc
ds
nop
in
inc
adcb
jp
xchg
mov
xchg
xor
lods
mov
sbb
lcall
pop
sub
xchg
xor
fs
mov
adc
cmp
icebp
jnp
pushf
sahf
sti
xchg
das
push
and
into
jl
mov
into
loope
fs
mov
cmp
sbb
adc
push
lods
inc
sub
adc
mov
fcmovne
out
xor
add
scas
bound
movsb
mov
cmp
in
pop
scas
test
sub
std
sub
out
jnp
lods
xor
jmp
enter
mov
or
adc
in
mov
shll
daa
dec
push
push
or
adc
mov
cld
std
pushf
loop
pop
bound
sbb
daa
in
jbe
push
push
into
test
mov
and
imul
xor
xchg
pop
fdivr
clc
repnz
pop
push
mov
scas
sar
push
xor
xor
pop
cld
xchg
pop
pop
mov
xor
mov
shl
mov
pop
xor
sbb
push
xchg
jmp
int
xchg
mov
fmul
lods
and
mov
arpl
pusha
mov
or
out
mov
xchg
mov
jo
lret
push
push
insb
test
mov
xor
repnz
inc
std
sbb
dec
test
sbb
movsb
push
orb
xchg
mov
jbe
lahf
pusha
adc
adc
ret
pop
sub
jl
js
in
sub
mov
xchg
sbb
add
pop
push
xorb
mov
xchg
insb
shl
adcb
cwtl
incl
icebp
push
ljmp
pusha
mov
mov
es
pusha
pop
dec
insl
push
fnstenv
popf
dec
lods
pop
xchg
jmp
xor
adcl
cs
push
mov
iret
outsb
stos
xor
sub
out
xor
lods
cmp
sub
add
sbb
mov
bound
sbb
dec
into
jle
stc
iret
jo
inc
das
inc
test
movsl
push
stos
int
xor
cmp
cli
pop
aaa
cmp
imul
jae
sbb
mov
fdiv
inc
cli
inc
aam
inc
adc
mov
fcoml
daa
xlat
arpl
aad
data16
jle
repz
adc
mov
in
adc
outsb
adc
lret
pop
jmp
lea
lret
inc
xor
xchg
adc
or
xchg
xchg
stos
fld
stos
jp
mov
or
iret
jnp
jle
mov
jecxz
orl
cmc
adc
mov
dec
cmp
mulb
nop
xor
xlat
mov
jg
adcl
jns
ds
pop
jnp
push
movl
xor
pushf
cmp
mov
shl
rclb
loopne
mov
lahf
jae
add
sbb
dec
dec
jns
inc
pop
sub
xor
ret
shrb
cwtl
pushf
xor
enter
cwtl
mov
test
xor
adc
inc
xchg
mov
test
loop
fsubr
hlt
enter
and
xor
push
mov
mov
cs
sub
push
add
ficomps
enter
dec
mov
lret
in
addr16
adc
push
out
xor
jnp
pop
xchg
pop
or
lar
testl
int
test
jle
mov
dec
jle
out
xor
lods
jo
sbbl
ja
cmp
mov
rep
adc
loope
and
leave
pop
sub
push
mov
xchg
fdivrs
rclb
cmp
add
mov
xchg
and
or
and
movl
mov
and
adc
enter
xchg
es
testl
mov
jge
addr16
aas
sub
cld
xchg
fiaddl
inc
into
sbb
add
or
mov
rclb
push
cwtl
sub
mov
mov
cmc
jns
add
or
xchg
sub
ret
cmpsl
test
adc
adc
pop
test
shll
cwtl
out
hlt
out
mov
dec
mov
int3
es
aas
mov
fdiv
enter
scas
fdivrl
test
inc
xor
push
sub
rcrb
sbb
hlt
jae
pop
pop
enter
mov
jle
xor
cmpsl
push
lahf
jnp
outsb
pop
cmp
scas
xchg
and
dec
add
lods
inc
pop
call
out
jl
mov
adc
mov
xchg
jnp
aad
loop
or
into
loop
call
xor
xor
jg
in
sub
je
push
punpckldq
sti
hlt
insl
popa
mov
dec
insl
shrb
jns
pop
xor
cmp
jmp
sbb
mov
push
xor
dec
in
xor
fs
bound
nop
inc
sub
scas
sti
or
adc
mov
mov
pushf
stc
pop
pop
cld
into
mov
or
jl
xor
or
insl
aaa
sbb
sub
das
push
pushf
mul
ret
xor
sbb
mov
add
xor
lods
rcr
lcall
jne
and
ret
push
sbb
cld
js
mov
dec
adcl
popf
xchg
sbb
in
mov
mov
pop
stc
js
jae
add
call
nop
cmp
pop
js
gs
fcompl
jo
push
fwait
jae
bound
in
and
mov
arpl
rorb
iret
push
jmp
into
cmp
or
mov
leave
cmc
xorb
lea
out
cli
xchg
and
xor
cmp
test
push
into
inc
jmp
or
pop
ljmp
xchg
loop
pop
rorb
sub
mov
cmpsb
xchg
mov
cmp
call
lcall
lret
loopne
jb
inc
inc
shl
popa
xor
movsl
xor
xchg
outsl
add
jg
pop
shl
cs
lds
ja
je
movsb
push
sbb
or
cld
lods
call
inc
mov
lods
xor
ret
dec
ficompl
push
scas
repnz
test
mov
sahf
call
loope
lods
xchg
add
rclb
ja
nop
into
jns
xchg
rcrb
mov
push
roll
xor
fsubrp
cld
sub
in
ljmp
sub
fbld
insb
repz
ror
xchg
push
jle
test
movsb
mov
sub
stos
pop
mov
in
jb
in
sbb
je
into
pop
leave
sbb
je
pop
pop
repz
ret
pop
repz
shlb
inc
nop
push
xlat
aad
sbb
ljmp
data16
stos
sbb
adc
fstpt
mov
cmp
pop
nop
dec
fisubrl
or
cmp
sbb
mov
mov
or
into
sahf
jo
sub
rcrb
ret
sbb
dec
xor
aad
enter
fdivrp
jle
dec
sbb
and
cmp
jl
mov
lret
push
mov
addl
mov
in
icebp
xchg
pop
pop
sbb
dec
hlt
divps
xor
mov
pop
ror
inc
in
xor
mov
xchg
fistpll
aam
aaa
jle
and
pop
xchg
push
loopne
das
sbb
inc
push
ret
mov
xchg
sbb
in
adc
dec
sbb
inc
mov
xchg
ss
add
pop
inc
or
lret
test
repnz
pop
push
pop
sbb
pop
sub
lahf
mov
arpl
aad
hlt
cwtl
hlt
pop
stos
addl
test
test
xor
sub
dec
aas
mov
dec
xor
jl
das
or
pop
sub
in
movl
jge
sub
pop
or
jg
fdivs
fidivrs
lea
inc
jo
xor
adc
pop
clc
xor
std
in
pop
int
call
lock
jecxz
push
mov
xchg
mov
insb
dec
adc
cmp
sub
movsl
leave
lock
ss
dec
mov
lret
cmp
mov
cmpsl
ljmp
sbb
xchg
aad
mov
pop
fnstenv
inc
push
xchg
sbb
adc
fs
stos
loopne,pt
jp
adc
mov
mov
sub
sbb
push
sbbb
sbb
outsb
adcb
adc
int
push
out
loopne
sub
ret
mov
mov
repz
pop
call
dec
adc
je
jnp
mov
pop
or
test
call
cmp
sub
or
bound
fnstenv
mov
push
popa
mov
xchg
sbb
sbb
push
es
adc
in
pop
inc
sbb
and
cmp
xor
idivl
shlb
sub
pusha
fidivrl
icebp
ret
into
loopne
mov
sbb
pusha
or
lahf
faddl
lods
pop
iret
lods
repz
aaa
fnstsw
movsb
outsl
push
pusha
xor
push
iret
into
aas
adc
pushf
pop
push
lret
lahf
pop
sbb
in
popf
mov
mov
and
mov
mov
test
jecxz
xlat
and
and
xchg
aam
stos
sub
mov
sub
pop
inc
hlt
pop
jecxz
iret
xchg
roll
aam
das
test
pop
movsl
jae
and
cli
xor
call
pop
adc
mov
lret
dec
inc
pop
mov
push
in
push
les
popf
notb
xchg
shl
xor
adc
mov
pop
popf
sbb
jno
fadd
ss
daa
scas
sub
inc
popf
out
fcmovu
push
mov
inc
clc
mov
in
sub
shl
xlat
std
bound
mov
inc
fwait
pop
shl
xlat
sub
repnz
xor
cwtl
mov
or
lods
cmp
xchg
shlb
pop
jle
daa
mov
push
mov
mov
xchg
out
adc
adc
add
sbb
jne
cmp
loopne
and
popa
or
fisubrs
ljmp
int3
gs
dec
scas
jne
enter
sbb
sbb
bound
push
loope
cmc
lcall
pusha
fists
push
add
hlt
mov
mov
fists
inc
out
add
call
mov
cwtl
or
mov
fs
loopne
xchg
jne
jecxz
xrelease
xlat
and
jb
pop
mov
sub
push
cs
lock
pop
jmp
add
adc
cwtl
lods
mov
and
ja
xor
xchg
fildl
xchg
pusha
lcall
sbb
cwtl
inc
imulb
ds
scas
iret
in
add
adc
pop
jb
sti
sbb
pop
pushf
ja
mov
xor
sub
jo
insb
mov
dec
xchg
sub
sbb
inc
call
shr
mov
sti
sub
jp
loop
shr
cmp
push
xor
mov
xor
jnp
mov
push
stos
out
inc
dec
push
aam
jae
ror
jp
mov
movsb
nop
mov
mov
call
pushf
mov
cmp
dec
imul
jmp
aam
inc
negl
iret
mov
add
mov
pop
mov
in
out
call
jmp
sbb
xor
mov
cmp
adc
test
push
test
fstl
aaa
loope
mov
push
pop
scas
cmp
sbb
xor
int
mov
fisttps
in
jge
fcoml
push
hlt
shlb
sub
lds
push
mov
fst
lahf
scas
out
leave
jge
arpl
sbb
xchg
cmpsl
mov
cld
fcmovbe
pop
jge,pn
sarl
sbb
xor
mov
mov
repz
shrb
mov
stos
xor
jae
sarb
imul
fisttpll
insb
lahf
in
les
inc
push
dec
cmpb
bswap
cmp
out
fwait
rcrb
fistps
or
into
cld
int3
mov
inc
and
xchg
sbb
repnz
sbb
jns
pop
xlat
add
shlb
mov
add
popa
sbb
ret
call
xor
push
loopne
mov
adc
out
call
xlat
and
add
std
sbb
inc
push
add
lock
sahf
out
iret
sahf
sbb
cmp
inc
fisubs
movsb
fcmovnbe
pusha
xchg
sti
jmp
xor
movsb
pop
jne
mov
aad
lret
add
rolb
test
jo
out
or
xor
lock
scas
subb
call
xlat
cmp
in
cmp
outsb
sarl
push
test
push
minps
cmp
push
dec
adc
jbe
sub
popf
xor
jae
fildl
sti
mov
fisubs
cmp
insb
inc
jb
lcall
repnz
shrb
fcmovnb
cs
adc
mov
sub
push
mov
or
pusha
inc
sbb
jle
jg
cmovb
mov
and
inc
sub
add
rep
xlat
lret
fmul
jo
lret
adc
adc
imul
push
addr16
outsb
sahf
outsb
lret
dec
ret
inc
add
lock
in
lret
stc
lock
fbld
mov
push
insb
nop
pop
cmp
and
scas
aas
inc
hlt
cld
xor
mov
iret
pop
ret
mov
dec
dec
add
mov
and
or
mov
cmp
jae
dec
cmp
pop
jmp
das
test
add
sub
sub
lock
adc
idivb
fcompl
mov
push
sahf
pop
les
out
popf
fbstp
pushl
sbb
mov
sarl
or
mov
mov
sbbl
shlb
in
call
mov
clc
mov
stc
ffree
push
mov
leave
sbb
cwtl
jle
enter
xor
sub
jecxz
mov
iret
clc
movsb
loope
fistl
je
ret
je
icebp
xchg
cmpsl
mov
and
fs
decb
lahf
sbb
pop
js
sbbb
cmpsl
dec
out
aam
cmc
adc
es
and
imul
add
and
push
test
jno
cmp
lods
inc
subl
and
adc
int
xchg
xor
adc
rorb
shlb
outsb
daa
add
lahf
jo
mov
add
iret
ss
and
cmpl
cs
push
insl
testl
and
cmpsl
movsb
inc
hlt
cmp
sub
xor
in
mov
int
lock
xorb
jle
mov
and
xchg
xorl
pop
fnsave
and
faddp
jbe,pt
js
stc
add
push
fcoms
mov
cmp
idivl
lea
xor
cmp
mov
lret
je
movsl
cmpsl
pop
push
fcmovne
sub
mov
ja
orb
ret
xchg
int
in
or
inc
dec
enter
icebp
outsl
xor
mov
imul
clc
je
divl
xchg
lods
sub
aas
cmpb
mov
lods
jb
or
sbb
push
ljmp
mov
mov
shl
ljmp
xor
shlb
dec
mov
sub
and
add
iret
mov
sub
inc
or
mov
sbb
mov
movsb
adc
jmp
ja
jmp
fs
into
call
xchg
add
nop
or
test
mov
push
stos
mov
insb
pusha
xorb
inc
shlb
jne
scas
int3
xchg
push
jmp
lods
mov
cmp
cmpsb
pop
xchg
int
mov
mov
not
cltd
dec
cli
fstps
mov
pusha
repz
sahf
icebp
outsb
xchg
mov
mov
and
xor
dec
mov
jns
cmp
mov
jo
lret
bound
push
out
lods
inc
sarb
dec
dec
xor
and
loope
or
sbb
cmp
roll
inc
push
xlat
scas
cmp
jle
push
add
mov
xchg
xchg
sub
fwait
into
mov
cs
lds
ret
or
cmp
stos
sbbb
push
insl
pushf
aas
mov
pusha
mov
loopne
push
in
orps
or
shll
mov
lea
stc
dec
jmp
cmp
mov
jecxz
sbbl
sbb
daa
pushf
push
ss
sub
inc
sbb
push
pop
loopne
inc
pop
xchg
fidivrl
insb
stos
call
sbb
sub
aaa
xor
xor
xor
movsb
fimuls
mov
sbb
mov
push
lret
sub
repnz
or
adc
xchg
pop
call
nop
in
outsl
push
imul
neg
pop
mov
add
int3
repz
sahf
nop
in
push
dec
nop
testl
mov
pushf
sbbb
cmp
fisttpl
xchg
stos
xorl
push
roll
pop
mov
inc
cs
jle
and
mov
in
ja
cmp
jo
mov
in
or
push
insb
pop
and
inc
mov
and
xchg
push
push
outsb
les
jnp
dec
addr16
addr16
ret
pop
pop
jae
sub
out
cmp
push
loope
test
fisubrl
inc
imul
sbb
fwait
push
xor
movsb
cmovle
div
xchg
jl
sub
dec
notl
mov
fld
push
loop
jne
pop
pop
les
aas
popf
push
into
add
jne
adc
lds
jge
inc
or
xorl
add
mov
mov
mov
mov
bound
mov
xchg
push
adc
add
push
iret
cld
stc
sbb
dec
jb
xchg
xor
jae
fstpt
fldt
js
lods
aas
or
mov
sbb
ffree
sub
sbb
das
pusha
sbb
xlat
inc
outsl
push
or
ljmp
call
push
pop
cs
out
jecxz
lret
mov
xchg
ds
out
lahf
inc
pop
call
movsb
xor
push
rolb
mov
ror
and
ljmp
fcomp
call
popaw
xlat
mov
mov
dec
inc
xor
out
in
std
ljmp
sub
push
dec
insb
mov
jo
inc
aaa
add
dec
pop
arpl
push
sub
pushf
movsl
adc
lods
inc
dec
add
out
loop
xor
jnp
pop
mov
daa
mov
in
and
dec
mov
mov
and
mov
addb
mov
and
clc
pop
outsb
jb
lahf
cld
int
jl
xchg
iret
lret
mov
iret
int
or
xor
addb
sub
enter
jae
mov
jns
dec
mov
mov
sub
aad
out
xor
pop
sbb
jb
xor
loopne
adc
movl
xor
sbb
hlt
mov
ja
add
lods
xchg
fcompl
and
mov
xor
add
fucom
lret
daa
mov
std
xchg
mov
xchg
sbb
sub
pop
lods
and
lods
stos
sahf
insl
jbe
jl
movsb
lods
movsb
mov
in
daa
pusha
into
inc
mov
je
mov
mov
loop
add
loop
fimuls
movsb
insl
and
adc
addl
xchg
les
movsb
xchg
sar
mov
cmpb
stc
mov
xchg
std
les
lods
fninit
adc
es
sub
addl
or
pushf
add
sbb
cwtl
aaa
out
lret
sbb
rclb
xchg
dec
adc
xchg
xor
out
mov
insl
clc
push
je
sbb
rsm
mov
jle
std
sub
decl
lret
jl
xchg
sbb
loop
jg
cmp
and
push
xchg
lret
ja
test
loopne
sub
adc
dec
ljmp
sbb
adc
aad
jns
xchg
dec
pop
mov
sub
bound
xor
pop
popf
inc
popf
pop
sbb
push
and
in
loopne
daa
mov
mov
aaa
repz
lea
jae
dec
les
xor
aad
xlat
daa
push
jge
outsb
fisttpll
leave
and
bound
std
jecxz
pcmpeqb
push
or
sbb
fsubrs
adc
into
mov
mov
and
shr
jo
lcall
push
jo
add
cltd
mov
lea
push
ds
dec
lea
sub
sbb
add
lods
shll
push
jmp
cmp
sub
mov
inc
lods
sbb
mov
in
inc
int
xlat
mov
lock
push
pop
xlat
movsb
test
ljmp
int
or
pop
imul
imul
imul
and
in
sti
xchg
popf
bound
imul
aaa
insb
cmp
lahf
ss
cmpl
and
jp
out
shll
mov
call
sbb
into
add
pop
insl
or
ljmp
add
out
in
mov
mov
add
das
xchg
daa
mov
mov
push
fisubs
jbe
insl
cmpsb
aad
mov
mov
test
adc
cmp
dec
andb
daa
aas
mov
cmp
lods
pushf
call
cmp
push
scas
shll
test
cmpsl
arpl
ret
bound
mov
inc
jae
sub
enter
xor
xor
lahf
pop
mov
ja
mov
dec
dec
pop
pusha
push
cmpsl
sub
sti
out
imul
cmp
push
xor
adc
in
fdivrs
mov
rorb
cmp
popf
rcr
fwait
lock
pop
in
inc
fldcw
mov
pop
sbb
jle
sub
push
mov
pop
ds
sbb
pushf
sbb
hlt
gs
dec
les
out
lea
push
mov
mov
into
inc
fwait
addr16
push
or
sbb
xchg
loope
scas
jbe
jl
mov
in
cmp
leave
xlat
mov
mov
std
das
or
outsl
lods
jecxz
addr16
pop
jbe
xchg
aaa
push
bound
mov
jo
movsb
xchg
pop
jo
push
bound
loop
fadds
call
filds
aaa
clc
aam
adc
das
xchg
adc
lock
dec
mov
add
jo
cmpsb
add
mov
neg
push
and
push
mov
out
sti
andb
xor
dec
addr16
pop
push
shrl
xor
jg
xbegin
daa
mov
imul
add
mov
push
iret
pop
or
jns
jl
dec
pop
mov
push
pop
mov
shll
sbb
sbb
outsb
inc
ret
xchg
out
push
jg
andl
cmp
sub
pop
mov
add
sub
popa
sbb
lods
inc
mov
pop
mov
daa
push
ss
aas
and
inc
sbb
mov
jg
xchg
scas
idivl
mov
enter
xchg
pop
out
sarl
sahf
xchg
mov
cs
aam
call
jnp
inc
inc
and
lods
mov
or
cwtl
xor
in
pop
jb
out
rcr
mov
cwtl
push
mov
fmul
adc
dec
jnp
or
pxor
fisubrs
mov
adc
sub
icebp
aam
or
out
jmp
and
inc
inc
movsl
ds
jle
jnp
and
xchg
xchg
jmp
push
mov
lods
or
or
xchg
int
das
xadd
sahf
leave
ficoml
push
rcrl
movsb
cs
arpl
mov
push
andb
or
dec
fidivrs
ja
test
and
pop
adc
lea
adc
jg
and
icebp
and
and
push
cmp
or
push
sbb
imul
iret
push
sub
lods
pop
repz
mov
rorb
sahf
xor
fldenv
cs
sub
add
pop
xlat
sbb
adc
lret
pop
add
data16
xor
aam
jmp
cmp
mov
jae
or
test
add
adc
xor
add
imul
mov
adc
push
jns
sub
jae
pop
jecxz
xor
ret
xor
iret
lods
or
and
ror
push
jl
push
mov
shrb
mov
stos
inc
sbb
push
vmptrst
adc
pusha
lret
jne
sbb
dec
jbe
into
jmp
ds
sub
xlat
sub
aam
addr16
sbb
sarb
sahf
push
shll
inc
call
push
pop
fistpl
shrb
cmpsb
dec
sti
shlb
call
sbb
jg
push
cli
mov
nop
dec
xor
sub
fcmovnb
dec
insb
sbb
mov
inc
gs
mov
rcll
andb
insb
and
ljmp
out
repz
xchg
lea
jae
sarb
adc
or
rcrb
movl
xor
rcr
call
mov
stos
jnp
rcll
and
fcmovbe
sarb
in
daa
rcrb
and
mov
test
scas
pusha
fsubl
shrl
call
push
and
enter
jo
add
fdivrl
ret
iret
adc
mov
psubb
mov
lods
adc
mov
or
enter
add
pop
sub
lahf
pusha
test
jo
sahf
fdiv
mov
adc
xchg
or
imul
loopne
ret
xchg
xchg
mov
shlb
pop
sub
cwtl
sbb
imul
xor
mov
pop
cmp
test
call
mov
push
push
adc
and
sbb
or
fsubs
mov
sub
adc
lods
sti
iret
xchg
sub
mov
rcl
fs
adc
pop
enter
jne
int
push
rclb
adc
movsl
push
xorb
mov
add
inc
nop
je
xor
xor
sub
daa
or
hlt
sbb
cmp
lods
xor
or
xchg
lock
fadds
cmp
out
rclb
aam
pusha
addb
inc
inc
pushf
in
jae
insl
push
fnstenv
mov
repnz
aaa
sbb
add
pop
cmp
out
add
sub
aaa
mov
xchg
hlt
sti
push
lret
mov
xchg
sbb
mov
nop
and
mov
dec
ljmp
rcll
cmp
sbb
arpl
push
xchg
mov
jb
xchg
or
and
mov
cmp
xor
iret
xchg
shlb
ja
jae
mov
clc
sarb
scas
loopne
repz
mov
push
add
fwait
cmp
outsl
call
mov
pop
jle
ret
and
mov
out
aam
sub
jo
jmp
jg
pop
sub
xchg
ror
bsr
add
jns
mov
push
in
pop
jle
mov
push
push
lods
jle
loope
xor
adc
cmpsb
cmp
adc
xor
pop
jae
lock
dec
sahf
int3
push
out
ljmp
pop
frstor
add
vcvtps2dq
lock
pop
jne
jo
xchg
fdivl
mov
jns
jle
mov
xor
ds
and
daa
fisubl
cs
add
pop
into
add
lock
inc
inc
cmp
pop
and
mov
out
inc
jp
call
mov
xor
xor
cmp
dec
imul
movsb
out
cmpsl
aam
xchg
pop
xorl
jae
or
or
pop
mov
ds
or
popa
fs
mov
les
jmp
out
cs
or
jecxz
jo
mov
or
dec
xlat
aad
fistpll
adc
sub
cli
mov
or
jne
mov
loopne
shrb
fisubl
sbb
jmp
call
js
mov
adc
pop
test
inc
push
jnp
popf
mov
push
lods
mov
cmp
pop
xchg
popf
shll
push
pop
pusha
and
lret
roll
xchg
mov
adc
aam
xor
call
lret
mov
push
adc
pop
mov
cmp
lods
mov
enter
mov
repz
aas
dec
jbe
sbb
cli
fs
movsb
iret
pusha
sub
in
iret
ss
cwtl
xor
push
push
sub
push
ljmp
xor
int
bound
lret
pop
cmp
cli
inc
stos
mov
sub
out
dec
mov
test
icebp
adc
gs
call
cmp
mov
mov
or
std
xchg
inc
clc
cmpb
not
inc
inc
cmpsb
dec
adc
test
push
fstps
pop
std
mov
fnstenv
xor
cmp
mov
mov
and
loope
cltd
dec
lods
fbstp
mov
cmpsl
dec
adc
mov
test
xor
ss
int3
add
push
jp
cmp
dec
dec
pop
mov
scas
mov
jo
scas
sub
cmp
lahf
add
mov
pop
aas
or
or
mov
dec
inc
jecxz
mov
adc
or
rolb
loopne
or
and
adc
pop
js
shll
jge
stc
mov
lahf
jecxz
lea
and
arpl
in
and
fistl
lods
insl
mov
cmc
xchg
sbb
fmull
loop
mov
lea
movsb
jo
cmp
pop
jmp
scas
fisttps
lret
std
ja
das
pop
or
dec
ror
and
jl
mov
orl
mov
rclb
mov
popf
cmp
fcompl
inc
add
xor
xor
shll
jmp
add
push
pop
sub
or
aas
xchg
aas
bound
cmp
sbb
out
sti
fdivrl
pop
sbb
cmp
leave
shlb
sti
mov
inc
loope
jg
sub
ror
sbb
adc
enter
pop
adc
pop
or
jnp
popa
movsb
inc
cmpsl
push
jne
in
mov
popa
sub
inc
dec
mov
out
pusha
ret
jo
out
test
testl
pop
scas
shll
adc
aam
or
loopne
lcall
xor
xlat
mov
ja
mov
or
iret
dec
repnz
push
pop
jecxz
jl
pop
test
aaa
cmp
ds
cmpsl
fcom
adc
pusha
adc
push
and
shlb
cmp
or
dec
jns
dec
rcrb
sub
cmp
sub
test
test
loope
sbb
fcomps
shrb
mov
stos
cmp
cmp
jl
xchg
nop
out
mov
mov
jecxz
fadds
aad
test
out
mov
cwtl
cmpsl
pusha
iret
or
or
js
sbb
insl
fmulp
rcrl
adc
sub
popa
push
or
aam
pop
mov
data16
adc
inc
mov
cmp
mov
mov
add
loope
rorb
rcll
sub
push
psrad
hlt
sub
cmp
je
sub
mov
cmc
pop
mov
sbb
mov
in
fisubs
and
jl
mov
dec
popf
lahf
xor
loop
stos
push
icebp
aaa
lods
lods
imul
in
aaa
pop
jno
cld
cmp
mov
aam
mov
push
jne
adc
mov
sbb
lock
jl
adc
pop
in
aaa
cmp
sbb
xor
dec
adc
mov
pop
pop
xor
call
xor
pop
nop
dec
and
cwtl
mov
mov
out
out
ja
mov
pop
mov
ljmp
imul
or
xchg
pop
pop
bound
adc
jle
pusha
std
push
lods
sub
mov
imul
out
inc
pushf
and
subb
mov
ja
mov
cmp
clc
sub
or
sbb
mov
xchg
lock
pop
mov
sbb
xor
cmc
das
test
adc
loope
xchg
test
xor
popa
mov
jns
mov
shr
xchg
or
cmp
pushf
mov
pop
and
data16
add
aad
rcr
nop
push
and
enter
jo
lret
les
lock
hlt
mov
nop
hlt
sub
popa
mov
add
dec
sbbl
daa
rcr
fdivs
sbb
jp
and
das
jns
iret
cwtl
adc
js
mov
fmuls
sbbb
xor
push
outsb
lods
repz
in
sar
dec
filds
das
cltd
es
bound
sbbb
mov
pop
test
ror
mov
mov
out
push
enter
leave
mov
xor
test
push
xor
mov
test
iret
cwtl
adcl
dec
test
lcall
js
push
addr16
mov
hlt
mov
dec
test
adc
xor
mov
imul
sub
pop
sti
dec
loopne
inc
loopne
std
mov
jmp
daa
fsub
fidivl
and
adc
adc
iret
push
pop
sarb
lods
cmp
insb
pop
mov
ljmp
push
and
lahf
mov
cmpb
sbb
mov
jb
fisubrs
fstps
cmc
hlt
jg
dec
imul
pop
cmp
mov
fstpt
in
or
sub
pushf
sbb
pop
push
loop
and
fisubrs
lods
push
and
xor
lods
mov
inc
out
pop
sbb
mov
scas
inc
sub
arpl
shl
jb
xchg
inc
mov
lret
adc
xchg
pop
pop
sbb
aam
add
popf
inc
stos
fwait
lahf
dec
push
mov
push
sbb
out
aam
mov
insl
or
bound
dec
sbb
mov
jne
in
rcrb
sbb
jmp
push
pusha
jle
sbb
sahf
mov
aad
dec
mov
adc
lods
ss
ffreep
aam
or
lods
jmp
add
lea
dec
mov
or
jg
movsl
rcrb
dec
repnz
adc
aam
leave
nop
xor
ljmp
das
subb
shlb
nop
pop
fidivrs
fdivl
mov
js
pop
xor
fcmovne
iret
or
shll
xor
stos
in
loope
jno
testl
aas
lahf
xor
repz
and
jge
popa
mov
mov
das
orl
xchg
fnstsw
lahf
mov
jl
cs
jle
movsb
jmp
adc
pop
aam
push
int3
ret
xlat
std
iret
cmpb
mov
pop
mov
jbe
mov
dec
jmp
sbb
cmp
xor
gs
sub
ffree
dec
icebp
adc
push
jae
jo
push
add
sub
mov
dec
out
enter
ja
xlat
xchg
into
popf
mov
dec
pusha
shll
xor
and
ret
div
into
jmp
xchg
nop
shr
push
lret
xor
fcomp
out
pop
add
movsb
or
lods
es
xchg
out
push
test
add
jnp
pop
inc
test
jno
and
test
cmp
loopne
mov
testl
lcall
sbb
add
or
movsb
and
repnz
jl
icebp
or
and
in
inc
pop
out
sbb
arpl
das
test
stos
jae
popf
adc
xchg
mov
roll
cmp
ficoml
sbb
mov
mov
ja
scas
ret
dec
fiaddl
lock
push
js
sbb
sti
loope
mov
xlat
cmp
iret
adc
push
sub
call
inc
dec
movsb
scas
scas
ffree
and
dec
fstpt
inc
pop
arpl
dec
and
incl
mov
mov
mov
cmp
lahf
inc
mov
out
pusha
or
adc
addb
jmp
lahf
dec
pop
and
adc
mov
adc
jl
fildl
sbb
push
outsl
nop
pop
dec
daa
into
ss
popf
je
add
push
add
iret
mov
adc
in
ret
lcall
cwtl
inc
lods
add
cmpsb
andl
mov
mov
mov
aaa
mov
or
push
pop
and
pop
xor
int3
mov
fwait
lds
cs
mov
enter
das
ret
adc
mov
cmpb
wrmsr
sarb
rorb
cld
cmp
lods
mov
adc
loop
mov
insl
call
es
lods
adc
mov
faddp
pop
dec
lret
jne
cmp
ret
mov
shr
je
pop
decl
push
mov
fs
mov
cmp
sbb
sub
addl
xchg
jecxz
xor
rol
push
cwtl
mov
and
and
out
int3
enter
ds
in
push
ret
lods
cmc
pop
mov
dec
ljmp
lods
dec
sbb
stos
xor
xchg
jl
pop
pop
aaa
scas
insb
mov
ror
test
mov
xchg
mov
loop
xor
pop
xchg
xchg
sub
lods
das
popf
loopne
xorl
dec
pop
loopne
rorb
sub
sbb
adc
jae
fldt
sbb
mov
test
dec
les
jle
jnp
mov
ret
push
dec
sbb
xor
inc
std
out
and
mov
cmp
test
ret
repnz
adc
sbb
sbb
in
pop
jno
mov
add
addb
int3
sti
and
pop
js
cwtl
rorb
xchg
jg
ficompl
cltd
jmp
lfs
adcl
scas
jnp
fisttps
jle
dec
sbb
das
inc
decl
push
les
scas
push
mov
iret
jge
nop
dec
out
or
rcll
jae
and
sbb
fnstenv
out
icebp
in
mov
test
out
fisubl
cmp
mov
loopne
xor
adc
out
pushf
vbroadcastf32x8
hlt
xor
pop
push
iret
push
mov
mov
nop
push
not
test
test
imul
addr16
mov
stc
dec
mulb
mov
mov
leave
lods
pop
jnp
je
pop
cmpsl
push
dec
and
mov
dec
sbb
pop
push
sub
daa
mov
ja
xor
and
mov
nop
outsl
imul
pop
fisubrs
add
mov
push
aam
dec
enter
nop
jg
mov
lods
call
arpl
pop
movups
cmp
test
movsl
mov
add
fsubrl
mov
dec
enter
lock
aad
lea
lods
int3
pxor
mov
fimuls
xchg
mov
in
outsb
mov
sbb
aaa
testb
je
xor
push
cmp
lret
and
shll
aaa
int3
fld
mov
ds
ret
and
push
fprem1
std
pop
fucomi
push
cmp
and
push
lock
out
lahf
out
loop
iret
sti
imul
nop
call
or
mov
pop
pop
mov
in
int3
sub
in
das
int3
dec
pop
mov
jns
imul
jl
adc
cmp
pop
jge
xchg
test
daa
lock
subl
jmp
fdivl
mov
jl
adcl
add
aam
adc
sbb
int
cmp
sbb
icebp
and
jb
push
dec
fstps
xchg
repz
repz
hlt
or
pushl
sbb
mov
addr16
xor
xchg
imul
fsubrl
add
dec
lock
inc
sbb
and
sub
mov
pushf
ret
loopne
add
aad
sub
cmpb
clc
and
subl
push
jle
icebp
sub
dec
xor
fisubs
mov
orb
add
inc
out
or
out
negl
mov
cmp
xchg
mov
jno
push
pop
or
xchg
ret
lds
lods
sbb
sub
add
ljmp
fwait
xchg
frstor
orl
mov
jg
loope
xor
aad
pop
shrb
in
mov
pusha
cmp
push
scas
inc
imul
xlat
adc
jl
or
xchg
dec
repz
jae
jmp
aam
fidivrl
mov
dec
pop
loopne
mov
call
icebp
fs
sqrtps
lods
add
mov
cwtl
in
jl
sub
xchg
lret
ja
ja
sarb
and
fs
ljmp
push
int3
or
ficoms
mov
faddl
xchg
push
jnp
push
pop
jmp
clc
movsb
sbb
adc
das
mov
lods
ljmp
movsb
cmp
data16
adc
nop
add
mov
ljmp
pop
pop
mov
test
imul
in
sub
pop
add
mov
xchg
xorl
movsb
sub
dec
pop
in
jns
add
shll
scas
mov
adc
cmpsl
bound
fstp
cmpsl
loope
and
mov
mov
mov
testl
sbb
out
xor
or
add
xor
not
fcoms
xchg
insb
aas
sub
or
xor
adc
and
adc
ljmp
mov
xor
adc
stos
jmp
adc
outsb
stos
sub
push
ret
cmp
cs
lock
in
arpl
lea
mov
sti
add
iret
mov
mov
cmp
sahf
andb
xchg
adc
xchg
inc
mov
mov
inc
popa
repz
cli
pop
pop
or
daa
movsb
pop
cmp
sbb
lods
dec
insb
mov
xor
cltd
pop
test
movsb
mov
dec
cmpb
inc
inc
xor
inc
nop
xlat
pop
imul
mov
lock
lock
clc
mov
mov
pop
mov
outsb
fisttps
shlb
repnz
pop
arpl
jl
inc
push
mov
mov
pop
and
and
lahf
jne
push
sahf
xchg
in
or
cmp
sub
sbb
test
xor
out
lods
bound
adc
outsl
xlat
cwtl
sbb
jg
pop
stos
jecxz
in
push
inc
cmp
outsb
movsl
inc
scas
sahf
call
cmc
fidivrl
into
xor
sub
enter
pop
pop
adc
cwtl
push
and
jb
cmp
sub
lods
mov
xchg
bound
mov
clc
add
jae
lret
xchg
adc
mov
adc
fnsave
decl
shrl
ret
xor
adc
out
fbstp
cmp
adc
pop
and
pop
out
push
mov
into
mov
sbb
rclb
xor
jmp
pop
and
pusha
xchg
loop
pop
jne
pinsrw
cmp
xchg
sub
out
pop
js
lahf
fs
adc
jp
mov
mov
push
sub
inc
xor
hlt
hlt
jnp
fdivrs
mov
jno
out
rcrb
add
push
xor
add
sbb
movsb
movsl
stos
aam
stc
pusha
and
jl
and
outsb
lock
sub
sub
in
xchg
out
repnz
popf
jo
scas
fsubl
cmp
mov
mov
sbbl
mov
jno
sbb
inc
popf
mov
lds
lods
mov
push
sbb
ljmp
adc
pop
xchg
xor
call
jp
mov
popa
sbb
or
mov
ret
xor
xor
call
xor
js
enter
adc
lret
sub
xchg
mov
mov
lods
lahf
dec
pop
shll
ficompl
or
das
mov
hlt
or
jecxz
push
cli
push
fdivr
cltd
in
fisubs
dec
xchg
add
xchg
lods
sbb
xor
sbb
jmp
cli
popf
lods
or
pop
scas
adc
daa
sbb
adc
sub
push
push
in
shll
jae
and
pop
enter
mov
mov
popf
mov
pop
inc
inc
loopne
jbe
out
xchg
arpl
pushf
jl
xchg
mov
mov
push
mov
xchg
inc
mov
out
add
movsb
dec
stc
lret
pop
lds
mov
scas
aad
adc
xor
mov
jnp
add
std
or
sbb
xor
jnp
lods
ret
into
mov
mov
loop
or
push
mov
in
jmp
mov
adc
mov
and
mov
lods
pushl
push
adc
cmp
xor
repz
lcall
mov
data16
lods
loope
lcall
sahf
test
dec
in
iret
mov
popa
hlt
mov
aam
sbb
and
sti
shlb
sahf
movsb
rolb
pop
out
add
mov
dec
es
adc
nop
mov
vpunpckhqdq
call
stc
push
mov
adc
mov
add
ret
lea
arpl
mov
pop
sti
stc
mov
add
clc
out
popa
int3
pop
add
jb
mov
pop
mov
les
jnp
movsl
mov
xor
sub
fsubl
cmp
shll
outsl
imul
mov
pop
rorb
and
push
and
icebp
and
or
mov
and
dec
or
jbe
addl
sbb
adc
pop
outsl
sbb
jl
mov
lret
pmulhw
or
cmp
popf
sbb
xor
cmp
inc
ljmp
add
divb
lock
mov
lods
sub
int3
and
xlat
addr16
add
aam
sti
repz
and
scas
or
in
iret
lea
mov
sbb
adc
fldl
enter
lods
fs
enter
sub
push
jnp
xchg
xor
and
daa
jmp
xor
movsb
movsb
scas
pop
loop
lret
aam
mov
adc
add
xor
clc
fsub
movsl
scas
je
sbb
loopne
mov
push
shl
test
ds
xchg
addr16
inc
adc
fcom
in
daa
jae
mov
mov
mov
jge
inc
repnz
cli
nop
ret
xor
sub
lds
push
daa
xor
lods
call
push
je
int
inc
sub
add
lahf
ficompl
and
jae
and
xor
inc
nop
push
sti
xlat
add
and
cld
cld
xor
and
jnp
jle
pushf
call
mov
leave
sbb
sub
rclb
jmp
dec
inc
jl
pushf
rorb
adc
jle
aas
mov
cmp
dec
xor
cli
fldt
jnp
movsb
mov
fidivrs
fwait
jl
push
jbe
dec
add
nop
xor
hlt
sub
popa
sbb
fmul
fnstenv
adc
or
sub
int
mov
lods
jns
test
in
mov
call
lods
int
int
adc
add
lods
nop
daa
roll
lods
mov
lret
dec
adc
popf
mov
nop
mov
nop
ja
cmp
mov
mov
rcr
bound
inc
pop
and
fwait
insl
ret
mov
and
fstpt
pop
mov
repz
push
les
jmp
add
inc
sub
mov
fimull
mov
jnp
imul
dec
mov
mov
jns
pop
mov
out
xor
fcmovbe
into
fsub
and
jbe
cmp
movsb
int
jne
or
adc
inc
int3
mov
hlt
rorl
cltd
jnp
dec
mov
jbe
lds
cmc
movsl
push
sbb
ja
bound
mov
dec
xor
loopne
repz
sti
mov
jp
test
inc
cmpsl
sahf
lods
sbb
imul
pop
xor
jecxz
shlb
jbe
lds
xchg
stos
ja
xlat
jle
xor
imul
or
push
jmp
mov
cmp
rorb
sar
jno
xor
or
lds
or
mov
xchg
add
rcl
out
clc
ret
sub
mov
sub
cmp
and
sbb
jae
and
les
test
pushf
add
outsl
stos
icebp
and
sbb
js
aaa
dec
add
jo
out
xor
adc
cmp
test
lfs
cmp
pop
xchg
out
and
jle
pusha
jle
loop
cld
in
jo
pushw
xor
mov
rcrb
sbb
or
scas
rcrb
xchg
cmpsb
int
mov
inc
xchg
add
push
add
inc
out
sbb
and
sbb
cmp
sub
jg
dec
xor
lds
push
enter
mov
pusha
jmp
add
lods
mov
aad
lds
out
shrl
pushf
mov
test
and
out
js
add
aam
out
xor
adc
xchg
xor
pop
or
mov
fidivrl
negb
jle
in
inc
push
dec
out
insb
push
test
stos
xchg
xchg
pop
dec
push
rcrb
add
insb
lret
jge
and
enter
pop
mov
pushf
fmuls
das
in
movsl
jp
pop
cs
add
shlb
std
jge
cmpsb
enter
rorb
int
xchg
xor
and
movsb
scas
push
or
fnstcw
enter
pop
scas
into
lcall
sub
ds
leave
imul
aas
and
frstor
aam
cmpsl
lahf
cmp
pusha
inc
mov
std
xor
repnz
jno
adc
jne
aas
loopne
scas
add
clc
outsl
pusha
xchg
sbb
cmpl
sarl
mov
mov
daa
int
jmp
cmp
cmp
xor
cmpsb
ss
dec
out
incl
or
cld
subl
iret
jmp
stc
ret
stc
scas
or
or
mov
push
ret
jmp
adc
flds
sbb
jge
dec
decl
mov
loopne
ja
test
jae
and
pushf
xor
push
addr16
mov
fs
mov
mov
jae
daa
loopne
lea
push
imul
lods
add
dec
imul
pusha
scas
cmp
sbb
sub
enter
mov
lods
aas
adc
add
mov
jmp
decb
sub
or
inc
scas
cmpsb
lcall
insl
cmp
jae
int3
int3
mov
sub
sbb
loop
sbb
mov
cmp
and
fdivr
faddl
mov
cmp
xorl
std
js
mov
sbb
and
inc
or
sub
add
stc
push
mov
rorl
pop
cltd
aas
mov
add
cwtl
xchg
xor
cmc
jae
sahf
fisubl
std
and
test
dec
adc
aaa
fsubl
stos
jp
pop
data16
pop
cmp
pop
flds
ds
fisttpll
sbb
dec
hlt
pop
loopne
ds
scas
sbb
xchg
lret
sub
mov
add
pop
pop
lahf
insl
inc
xor
fisubl
sbb
add
popf
sbb
cmp
and
xor
push
jbe
cmp
stos
rolb
jmp
pop
mov
pop
pushf
iret
xlat
fistl
push
or
adc
sahf
or
imul
mov
mov
call
lea
add
jns
mov
mov
into
adc
mov
and
mov
fwait
mov
inc
cmp
pop
and
aaa
dec
mov
fcmovne
sar
xchg
aad
aas
jns
ret
xor
insb
rolb
inc
repnz
repz
and
dec
insl
jg
sub
sbb
subl
sbb
data16
inc
pop
pop
jecxz
int
int3
gs
ss
aaa
mov
daa
xor
push
test
push
jecxz
popa
das
ffreep
shlb
fcomp
cmp
sub
fdivs
daa
loope
out
daa
adc
jo
mov
lds
push
loop
pop
call
add
and
rcr
jecxz
xor
sub
call
pop
mov
pusha
sbb
mov
loopne
mov
sti
dec
repz
insl
ja
fwait
pop
mov
pop
rcll
sbb
repz
shll
pop
clc
inc
and
test
aad
or
jnp
push
cmp
dec
sub
push
xor
mov
cmp
repz
movsb
idivb
dec
loop
adc
lods
jge
inc
dec
ret
mov
leave
sub
enter
getsec
js
repz
nop
mov
adc
stc
ljmp
adc
cmp
movsl
dec
push
fstpl
lahf
cmp
mov
push
ror
inc
mov
pop
push
mov
cli
mov
in
daa
ja
xchg
ror
test
into
clc
mov
and
dec
cmp
mov
call
sub
pop
xor
bound
xor
xchg
inc
mov
orl
push
xor
cmp
fldt
mov
hlt
xchg
dec
sub
push
mov
fistps
xchg
insb
mov
mov
xchg
insb
or
and
iret
dec
xchg
push
ret
int3
arpl
cmpsb
jp
sbb
ss
sub
and
inc
mov
je
mov
fs
or
cltd
adc
pop
aad
adc
adc
dec
les
sbb
int3
faddp
adc
lock
outsb
bound
cmp
enter
mov
push
xlat
scas
xchg
shrl
stos
lock
call
ss
sub
ljmp
call
jo
sub
cmpsb
cmpsl
or
daa
fadds
mov
cmp
loopne
or
out
jae
bound
popa
push
add
pop
jecxz
xchg
into
cmpsl
cmp
aad
sub
xor
cmp
stos
fstps
movsb
xor
enter
push
adc
aas
or
or
sub
aaa
push
test
and
enter
rol
push
sub
inc
out
adc
dec
rclb
out
clc
call
sub
adc
pop
mov
paddd
loop
mov
js
add
imul
mov
ficoml
xorb
lods
out
call
fldcw
xchg
mov
dec
sbb
mov
and
adc
loopne
xchg
or
mov
add
stc
mov
nop
nop
popf
scas
inc
lock
nop
pusha
decl
adc
mov
fsts
shll
movsl
repnz
arpl
jo
and
cmp
sbb
mov
sbb
cmp
insb
pop
ret
push
sub
jo
jle
dec
pusha
cmp
inc
mov
clc
inc
xchg
gs
daa
fwait
and
adcl
out
or
ja
sbb
fwait
in
lock
sbb
rclb
bound
push
in
ljmp
jo
into
pop
dec
mov
inc
push
lahf
ss
loopne
push
add
bswap
cs
or
repnz
sbb
adc
pcmpeqb
push
std
jbe
mov
push
call
add
fstps
rcrl
add
push
das
or
out
mov
mov
adc
cmc
mov
add
pop
adc
mov
sbb
popf
sub
xor
dec
jg
ret
xchg
pop
js
xor
in
in
sbb
pop
mull
mov
xchg
vpcmpeqw
pop
lods
lods
mov
orl
cwtl
fsubrs
cmp
pop
int3
andb
push
arpl
xor
insl
aad
cld
jnp
or
push
lahf
out
sbb
inc
movsb
adc
out
adc
adc
or
pushl
add
cmp
pop
xor
sbb
fistl
jmp
inc
divb
aam
fists
call
and
pop
jo
in
int
jns
std
popa
pop
jecxz
fwait
cmp
sbb
push
mov
push
into
and
mov
dec
dec
mov
sarb
test
and
and
into
pusha
lret
and
jecxz
mov
addl
pop
outsb
jg
dec
push
pop
adc
out
mov
pop
arpl
dec
inc
and
pop
lret
mov
imul
cld
jnp
pop
clc
mov
adc
addr16
or
lds
mov
pop
cli
mov
mov
xor
popa
jo
loope
jge
mov
push
mov
jne
idivl
xlat
mov
lods
lcall
jbe
mov
pusha
stos
movsb
dec
in
stos
nop
adc
adc
das
lret
cmp
int
adc
in
shlb
cmp
clc
idivl
test
jl
les
push
pop
mov
xorb
stc
push
push
jge
shlb
dec
loopne
and
outsl
cs
and
pop
xchg
xor
ret
add
dec
and
mov
push
and
cs
ds
inc
nop
ret
int3
insl
aam
or
xlat
call
mov
test
mov
ljmp
lods
adc
adc
sub
jmp
jo
cmp
inc
pop
mov
lcall
and
test
aam
shrb
jl
xchg
loope
push
inc
adc
lock
mov
sub
add
cmp
call
mov
loope
or
je
inc
jbe
xor
pusha
sbb
add
or
inc
lock
rorl
xchg
movl
ds
dec
xor
in
nop
pop
aad
or
aad
xchg
dec
mov
push
clc
jno
fists
in
jge
aaa
mov
mov
cmp
fs
sahf
or
inc
lock
faddl
xor
ds
nop
insl
sub
jnp
mov
icebp
inc
mov
cmp
add
std
scas
testb
jg
je
or
and
or
cmp
pop
sbb
hlt
fildll
and
rolb
mov
sbb
mov
pop
test
addr16
lock
ds
inc
inc
jo
xchg
pop
das
inc
pop
sbb
dec
iret
xchg
stos
loope
sub
sbb
dec
xchg
jb
das
bound
rolb
jb
loop
sub
aas
sahf
fst
flds
std
sbb
or
ficomps
xor
out
push
or
out
out
cmp
push
iret
inc
fcoms
movsb
pusha
and
cmp
lods
out
arpl
sbb
dec
fisubs
aam
inc
push
push
mov
push
mov
or
jbe
jl
ret
fildll
idivl
cmp
call
and
dec
rdmsr
jbe
inc
fdiv
mov
aad
iret
repz
cmpsb
mov
rcll
pop
loopne
cmp
xor
and
imul
pop
in
bound
cmp
cmp
fsubs
push
pop
aaa
inc
sub
adc
cmp
inc
pop
gs
jecxz
sub
divl
arpl
test
arpl
and
add
adc
push
pop
stc
add
leave
jmp
inc
out
pop
xlat
dec
jbe
jg
xchg
inc
int3
ret
cmp
comiss
mov
inc
iret
sub
xor
lods
push
daa
mov
jnp
dec
pop
out
sbb
int3
lret
or
iret
adcl
mov
bound
dec
mov
xchg
lods
push
ds
cmp
pop
iret
lcall
aam
shrb
mov
int3
xchg
shlb
fldl2t
jno
fcoms
rcr
call
pop
in
out
fmul
and
nop
in
xor
ficoml
cmpsb
out
loop
fstpt
inc
xor
bound
jne
mov
sub
fwait
push
xchg
cmp
pushf
mov
xor
inc
bound
int3
cltd
or
int
mov
insb
shrl
lock
aaa
inc
dec
fcoms
bound
dec
xlat
mov
sti
and
xor
mov
jne
sbb
sbb
cmpsb
inc
jmp
dec
dec
mov
adc
adc
pop
test
aad
xor
sbb
jnp
adc
mov
and
sub
ss
enter
pop
mov
loopne
mov
rcrl
outsl
sub
adc
jo
shll
loop
rorl
ds
sub
js
xor
add
daa
xchg
jo
repnz
fsubl
or
into
test
add
pop
in
es
jp
lret
test
xlat
pop
enter
scas
int3
sti
lahf
push
add
sub
mov
movsb
adc
cmp
jnp
pusha
pop
mov
xchg
xchg
ret
push
or
loope
sbb
or
loopne
push
adc
push
pop
lods
mov
jle
hlt
pop
mov
ret
out
jns
pop
adc
mov
lods
lods
jne
jbe
push
mov
xchg
pop
xor
or
cmp
dec
movsb
in
cmp
test
jp
pop
adcl
and
imul
popa
lds
ficoml
je
xchg
rorb
das
push
aam
nop
mov
rcl
aas
sahf
mov
mov
cmp
mov
daa
repnz
xor
mov
outsl
adc
sub
aam
adc
out
sub
xor
andb
fucomp
cld
lock
cmp
mov
adc
jg
rclb
xor
mov
lcall
mov
jecxz
lods
insl
mov
fisubrl
mov
cmp
fildll
pop
push
sub
scas
nop
ss
dec
es
add
mov
push
ss
sub
mov
fadds
jne
popf
cmp
mov
adc
mulb
xchg
jg
mov
dec
mov
xor
pop
pop
dec
mov
mov
repnz
mov
fcmovnb
dec
pop
or
test
jle
mov
pop
push
adc
shrb
shl
mov
sahf
int3
inc
bound
lods
stc
sbb
daa
loop
cmp
and
and
sbb
cs
in
out
in
fmull
add
mov
lods
jecxz
iret
push
mov
mov
push
orb
dec
xor
cmp
js
pop
cmp
sti
outsl
xlat
push
js
js
rclb
push
shlb
and
jp
add
test
jmp
repnz
push
mov
stos
inc
insl
push
aaa
adc
adc
pop
mov
enter
outsb
xchg
pop
push
fcmovnu
das
movd
movsb
xor
mov
pop
lret
lahf
loopne
jbe
fucomip
bound
mov
inc
add
movsl
mov
cli
enter
imul
add
push
scas
adc
cli
aas
push
bound
xor
into
notl
movsb
fxch
and
and
push
mov
movsb
insb
ja
cmp
bound
adc
out
adc
sub
aam
xor
cwtl
dec
jno
inc
jne
add
cmc
pop
add
shrl
cmp
andb
mov
popf
xor
jae
mov
push
xor
sub
dec
call
sbb
fs
mov
mov
iret
jne
jae
lock
gs
ss
ficoms
jnp
pop
pop
sbb
ss
and
ja
js
mov
int3
aas
rol
pop
stos
push
xchg
xor
fisttpl
ljmp
sahf
sub
jg
test
or
mov
adc
mov
fadd
out
pop
pushw
aam
mov
hlt
adc
cli
outsl
inc
xor
mov
sahf
out
cmp
xchg
mov
inc
adc
popa
iret
aad
xor
mull
daa
add
fdiv
je
loope
adc
nop
push
lods
pop
mov
adc
je
cs
in
xor
and
mov
sahf
clc
xchg
cmp
cmp
fs
sub
cmp
xchg
fsubrl
xor
jbe
mov
mov
movsb
sbb
xor
mov
and
xlat
or
lea
jg
or
push
fcmovu
clc
rorl
sub
or
mov
cmpsb
scas
scas
stos
mov
cmp
add
movsl
repnz
call
int
test
enter
inc
sbbb
push
rclb
adc
adc
sti
jmp
adc
xchg
lock
ljmp
jnp
nop
ljmp
in
add
in
push
mov
and
sbb
jnp
xchg
pusha
jle
jecxz
cmc
inc
rorb
mov
jle
fstl
jbe
jnp
push
shrl
pop
call
lods
xlat
ljmp
into
imull
fucomi
mov
mov
cmp
cld
enter
lret
add
cmp
out
rcrb
icebp
inc
and
mov
xor
pop
jmp
and
sub
mov
fisttpl
mov
xorb
std
loopne
aad
jno
lods
lods
testl
lahf
mov
lods
mov
inc
fsubrp
and
adc
in
mov
inc
xor
sub
sbb
mov
out
fisttpl
outsl
fisttpll
adc
pop
adc
or
inc
call
xor
adc
mov
mov
sarb
push
por
mov
faddl
in
stc
and
dec
jecxz
lods
popf
xchg
test
sub
js
add
fmul
dec
jmp
xor
in
gs
xlat
add
inc
aas
cli
xchg
popl
dec
rcrb
and
clc
enter
mov
and
sar
arpl
rolb
and
sub
sbb
das
ret
cmp
sub
push
sbb
jae
pop
in
pop
test
mov
and
push
in
add
or
adc
inc
cs
lret
movsb
mov
outsb
stos
aaa
jb
loopne
pop
mov
mov
test
and
lret
xchg
push
scas
dec
sub
and
mov
cmp
dec
mov
dec
cmp
xchg
add
mov
ljmp
jbe
pop
fs
push
pop
xor
jg
xor
jmp
pop
lea
push
mov
bound
mov
cmpsb
xor
mov
rclb
dec
cmp
lock
lahf
iret
cmpsl
dec
repz
lcall
dec
xchg
cmp
push
xchg
pop
movsb
sbb
inc
or
dec
pop
and
push
div
sub
clc
es
outsl
pusha
lods
clc
cmp
dec
imul
push
cmp
leave
add
pushf
cmp
and
mov
repnz
je
daa
lcall
mov
jne
enter
add
mov
es
sbb
xor
add
sub
std
xchg
adc
cmp
and
sbb
cmp
lahf
jb
cmp
mov
jae
and
lods
loop
orb
mov
ret
das
sbb
pop
aad
rep
push
sti
xor
call
mul
and
pop
ds
ss
push
adc
fs
fadds
or
sub
sub
dec
xchg
aas
aad
cmp
shl
fmull
rclb
and
aad
xor
shlb
mov
add
pop
xor
jo
or
mov
inc
pop
mov
mov
or
inc
shl
scas
inc
hlt
lds
mov
repnz
inc
clc
sarb
aas
pop
pushf
sub
inc
push
pop
pop
outsl
gs
xchg
mov
dec
test
add
mov
aam
xchg
icebp
push
dec
imulb
inc
cmp
data16
fldenv
mov
push
jnp
std
push
or
adc
ret
fnstenv
cmp
iret
scas
seta
inc
ret
mov
mov
lods
nop
sbbb
sbb
iret
push
xchg
fdiv
mov
ja
inc
cs
fldt
sti
jge
cli
out
mov
pop
cmp
hlt
jne
lret
loopne
nop
xor
aas
inc
loopne
lea
aas
fdivrp
shll
outsb
loopne
ret
addr16
dec
cmp
mov
jmp
ja
pop
xor
ficomps
in
mov
sub
loopne
dec
lods
mov
add
jl
xor
inc
adc
sbb
das
rclb
nop
mov
mov
test
pop
aas
mov
adc
add
jp
cmp
mov
adc
insl
sub
xor
and
sub
cwtl
lock
fiaddl
push
pop
and
push
aaa
stos
push
inc
jecxz
pusha
pop
add
add
adc
shll
dec
pop
mov
out
stos
test
sbb
out
sbb
ret
jo
pop
mov
mov
cld
rorl
loopne
cmc
mov
rcrb
push
dec
xchg
in
adc
lds
mov
or
xchg
fstps
dec
int3
jg
sbb
lret
inc
sub
or
inc
sbb
ja
jg
dec
pusha
clc
add
in
cmp
cmpsb
das
sub
mov
xrelease
lods
adc
jnp
shlb
shlb
sbb
xor
mov
fwait
test
pop
xor
push
adc
pushf
imul
mov
fcomps
and
jbe
popf
and
push
xor
or
andl
or
jmp
inc
decl
adc
push
mov
jecxz
aad
mov
and
inc
std
sbb
out
jae
inc
shl
lock
icebp
bound
loope
addb
ja
xor
fcmovnbe
xor
adc
push
xchg
das
rcl
jmp
in
leave
dec
cmpsl
mov
pushf
fmulp
dec
fisttps
aaa
pop
ds
mov
sub
inc
or
add
cmpsl
jae
or
enter
cmp
enter
mov
nop
stos
xor
jle
repnz
repnz
ds
fmuls
loopne
bound
xchg
push
sbb
mov
out
jl
cmpsb
ror
cltd
and
icebp
or
lods
sarl
shlb
jecxz
and
stc
adc
in
rcll
sahf
lahf
lock
jmp
loopne
sbb
inc
fistpl
jg
testl
inc
add
repnz
loopne
adc
in
aad
mov
adcb
jp
aad
lret
xchg
fistl
dec
push
adc
or
jae
jg
stc
mov
jns
push
jnp
mov
xor
rcrb
add
xor
mov
in
lods
std
and
sahf
cs
dec
cmp
jg
sub
pop
iret
lods
mov
pop
lods
mov
push
sbb
add
jnp
std
sbb
in
clc
shlb
lea
les
lahf
mov
lret
pop
sbb
call
mov
enter
arpl
lods
imul
push
lcall
pop
add
xor
les
mov
jg
int
mov
pop
pop
fdivl
wrmsr
subb
lods
fdivl
ljmp
jle
fcmovnbe
sub
mov
test
adc
push
ds
lahf
loopne
les
mov
adc
aam
cmp
add
scas
cmp
cmp
sub
and
xchg
movsb
mov
jnp
dec
fdivrs
in
in
add
mov
or
and
cli
subb
xor
xchg
enter
jp
mov
ja
pop
subl
xchg
pop
sbb
inc
dec
prefetchnta
inc
test
mov
out
popf
js
xlat
mov
sbb
mov
sbb
fsubl
out
iret
fstpt
lret
sbb
push
lods
insl
andl
inc
shlb
lock
xor
cwtl
in
jmp
sub
int3
pop
push
shrl
add
nop
lock
lahf
out
mov
push
xor
lcall
xchg
or
sbb
sbb
rcrb
push
lahf
mov
nop
xchg
mov
push
sub
adc
jge,pn
testl
add
dec
mov
xor
lcall
jp
xchg
je
dec
sbb
push
mov
pop
out
js
and
push
xor
mov
out
cwtl
add
and
push
aad
sbb
jae
loop
cld
xchg
loopne
mov
orb
pop
aad
fsts
int3
mov
cmp
adc
in
adc
out
jo
shlb
clc
lods
test
and
pop
jae
mov
icebp
enter
sahf
adc
aam
xor
sub
inc
mov
mov
pop
sub
inc
orl
pop
push
pop
mov
andb
addps
jae
sahf
mov
adc
mov
jmp
mov
mov
lret
jmp
lock
xor
jmp
imul
xorb
dec
push
hlt
mov
test
push
xchg
push
mov
out
fiaddl
loopne
pusha
rorl
ret
mov
out
stos
ficompl
pop
cmp
outsl
inc
dec
pop
pop
sti
mov
xchg
into
sbb
in
repnz
jnp
pusha
lret
sahf
outsb
sub
and
loopne
lods
aad
and
lods
jg
mov
jmp
xchg
inc
popa
addr16
into
cmp
repnz
lcall
aad
xchg
sub
xchg
sarb
pop
mov
int
aad
jl
sbb
aaa
sub
and
add
ljmp
pop
fwait
cmp
adc
xchg
sbb
or
je
xor
cltd
ficomps
xchg
jae
cmp
outsl
pop
outsb
clc
pop
faddl
pop
insb
and
loopne
mov
int
sbb
pop
push
movsl
add
pop
test
mov
pusha
push
adc
ror
pop
arpl
push
sete
fildll
ret
out
push
shl
lret
xor
jnp
and
push
in
mov
scas
mov
les
or
daa
xchg
ret
inc
and
or
rcll
sti
mov
xor
mov
fisubl
ret
pop
xchg
xor
sub
jns
mov
imul
add
pushf
fstpt
jecxz
repnz
inc
bound
cmpsl
adc
cli
mov
adc
pop
scas
outsl
adc
shr
inc
lcall
jae
inc
jmp
stos
shll
inc
jmp
jnp
addr16
push
les
and
shr
scas
and
jle
out
shrl
dec
mov
outsl
imul
rorb
adc
sub
push
retw
add
xchg
rclb
mov
xor
shl
call
loopne
dec
cmpsb
jns
mov
int
mov
shlb
out
int
faddl
mov
sbb
ret
lock
loopne
push
aas
pop
int
aam
in
faddl
repz
xchg
jge
and
mov
inc
push
jns
sbb
dec
iret
lock
adc
cmp
shlb
add
shl
fwait
xor
inc
into
mov
jge
or
or
xchg
sbb
rorb
jl
scas
xchg
or
jp
mov
xchg
pop
int3
out
push
movsb
aam
push
mov
mov
fstpt
xchg
enter
ds
push
pop
aaa
inc
mov
sbb
xor
jle
repz
cmp
iret
push
into
xchg
leave
in
mov
into
xchg
xlat
imul
call
adc
fwait
loop
adc
into
pop
and
jmp
sahf
cmp
imul
adc
jmp
call
push
xchg
lods
mov
lock
push
jnp
mov
cmp
push
ljmp
lahf
xchg
cmp
sub
popf
push
pushf
xor
push
push
mov
jge
iret
call
inc
jl
push
loope
lret
in
push
dec
cmpsl
inc
push
in
fs
mov
pop
lods
filds
pusha
and
cmpsb
xor
jecxz
xorb
call
pop
or
push
mov
mov
stos
insl
pop
popa
dec
mov
adc
hlt
jle
sbb
mov
movsb
mov
sub
scas
fstpl
hlt
into
inc
fsubs
mov
mov
loopne
std
mov
push
sub
pushf
popf
pop
nop
pop
push
push
mov
enter
scas
rol
mov
jo
mov
notl
mov
inc
and
pop
or
or
mov
cmp
ret
daa
testl
pop
lods
inc
push
sbb
outsl
push
cmp
int3
jmp
sarb
push
bound
nop
jecxz
lret
inc
imul
nop
bound
les
imul
cmpsl
sbb
adc
fstl
enter
mov
adc
pop
pushf
jl
jo
jo
xchg
lods
pop
mov
faddl
outsb
insb
rorb
bound
iret
call
inc
repz
inc
jg
xor
aam
in
ret
cmp
iret
ss
mov
mov
ss
mov
xor
and
push
jae
sbb
enter
fstl
bound
pop
aaa
leave
jg
xor
nop
cmp
mov
xchg
and
andb
rcr
inc
clc
and
or
out
pop
sbbb
or
or
mov
jo
push
cmp
push
shrb
in
sbb
lea
mov
ret
pop
push
das
imul
push
test
out
jge
mov
jne
fcoml
adc
dec
lret
adc
push
jae
xor
push
jnp
inc
popl
and
mov
hlt
xor
test
inc
xchg
call
xchg
notb
cwtl
push
mov
into
in
into
outsl
xchg
lods
loop
mov
xchg
insb
lods
xchg
cmp
sub
sbb
jmp
movsl
push
popa
pop
mov
mov
cmp
xchg
aam
fcmove
cmp
xor
and
idivb
aaa
iret
mov
cwtl
mov
sub
jp
xor
mov
rclb
daa
adc
mov
and
ja,pt
xor
ror
adc
clc
call
enter
sbb
aad
sub
dec
aas
inc
fdivl
test
sbb
lods
mov
mov
adc
jmp
shlb
mov
mov
fsubl
icebp
mov
pop
cli
enter
mov
nop
call
push
or
in
sbbl
inc
xchg
sub
inc
int3
mov
jbe
into
xchg
mov
pop
jmp
js
dec
dec
cmp
pushf
es
push
or
outsl
push
out
jle
and
jg
jmp
jecxz
sarb
bound
ror
add
mov
dec
mov
push
loope
dec
push
cmpsl
dec
inc
in
daa
jns
xchg
mov
pop
cmp
jmp
lods
jns
xchg
lds
pusha
dec
adc
adc
bound
xor
pop
das
xor
psubsb
into
subl
jl
xor
scas
clc
sbb
mov
outsb
aad
lods
in
call
dec
je
sub
scas
adc
ret
imul
jmp
stos
pop
cmp
orb
push
mov
inc
les
pusha
xor
lods
testl
dec
and
das
or
mov
jae
or
mov
jnp
jb
adc
inc
push
fdivrs
mov
jp
inc
and
negl
les
inc
xor
sbb
inc
mov
cmc
push
lock
imul
xchg
xchg
std
icebp
cmp
scas
push
lock
nop
push
mov
pop
popa
dec
xor
into
pop
cmp
je
es
jo
iret
mov
test
jnp
les
scas
sti
add
sbb
mov
pop
lods
adc
xor
movsb
dec
dec
inc
lods
in
mov
sbb
test
adc
test
sbb
ret
add
dec
xor
mov
into
data16
inc
je
int3
cmp
out
adc
stos
clc
aas
pop
dec
lret
mov
xor
test
xor
mov
dec
adc
shrb
sti
sbb
scas
popa
inc
andb
mov
das
loope
jns
fldpi
movsb
or
pop
add
xchg
xor
xchg
nop
adc
jmp
out
andl
inc
xchg
pop
jnp
pop
leave
icebp
mov
shlb
das
inc
mov
jg
cmp
xlat
sub
or
inc
bound
out
fcomps
arpl
gs
and
adc
mov
dec
xor
int3
xchg
mov
sbb
jno
cmc
xchg
in
std
stos
out
xchg
sti
filds
ds
lods
mov
in
shlb
fistpll
inc
adc
call
cmp
mov
fs
sar
mov
int3
mov
or
clc
sarb
bound
nop
jbe
xchg
rclb
mov
jae
call
cmpb
xor
push
mov
dec
repz
xor
or
adc
pop
enter
ss
in
mov
sbb
mov
sti
or
pop
sub
andl
lods
cs
push
or
xchg
dec
nop
sbb
lds
fsubl
add
jecxz
sbb
xorb
imul
mov
lods
int
xchg
test
mov
mov
cmp
inc
popa
and
jle
sbb
jbe
sarl
sub
cmpsl
mov
xor
shrb
jae,pt
jle
mov
les
jne
les
cmp
movaps
test
test
shrb
mov
mov
mov
pushf
cltd
lds
add
das
enter
into
adc
addl
mov
jae
aam
push
aaa
push
mov
push
iret
pop
mov
call
sbb
notb
sub
mov
and
pop
clc
jae
xor
xor
sbb
cmp
hlt
fsubl
inc
mov
pusha
adc
sbb
add
icebp
jb
sub
pop
cltd
std
fdivrp
mov
pop
add
pop
out
scas
imul
addb
push
xor
push
pop
cmp
sub
jmp
es
xlat
xor
xor
jp
in
inc
xor
sarb
movsb
xor
sbb
lods
push
push
out
pop
bound
int3
sbb
dec
add
push
jge
into
mov
pop
push
jne
sub
jp
mov
xor
call
push
xchg
insl
inc
fwait
cmp
lock
lahf
sbb
fisubl
pop
outsl
or
push
mov
ret
add
scas
jbe
mov
add
cmp
xor
adc
or
xor
ret
cmp
call
dec
xchg
je
lock
pushf
mov
rcrb
pop
inc
push
das
mov
mull
pusha
adc
jp
mov
push
scas
mov
mov
rorl
and
pop
hlt
pop
dec
push
iret
div
add
xchg
pop
dec
push
or
das
and
icebp
rcr
int
lahf
pusha
subb
out
mov
lods
mov
fdivrl
jae
sub
fmull
pop
mov
cmc
std
mov
cltd
int
sarl
jmp
sub
adcb
mov
dec
sbb
inc
mov
sbb
adc
cmpsb
fcomip
sub
sbb
dec
aam
jb
push
and
jbe
in
scas
cmpsl
xor
jno
je
lods
push
cmc
lret
jo
mov
into
jp
in
js
ss
aam
sub
push
jmp
jae
lods
sub
mov
push
lods
and
cmpsb
pop
fs
stos
dec
sub
fs
jp
in
xchg
imul
cmpsl
sbb
sbb
add
xor
lds
call
xchg
or
stos
mov
xchg
dec
and
sarb
pop
lret
mov
call
cmp
outsb
insl
xor
nop
lods
mov
xchg
cmp
sti
maxps
mov
add
fs
sub
push
scas
addl
adc
lahf
push
and
adc
fwait
lret
mov
sub
mov
into
sbbb
mov
bound
mov
out
cwtl
int3
les
or
lock
xor
imul
adc
and
bound
and
rorb
sbb
sbb
shr
push
pop
or
or
adcb
cli
aam
mov
movsl
fs
rcrl
jbe
cmp
sbb
lahf
es
jl
pop
addr16
mov
lods
push
or
aad
in
push
subb
neg
repz
xor
jnp
inc
xor
adc
sbb
inc
xlat
pusha
mov
xchg
xchg
jl
popf
jmp
jo
scas
fistl
xchg
dec
pop
jnp
bound
fistpl
mov
pop
sub
push
scas
xor
lods
nop
pop
mov
cltd
mov
cwtl
lods
imul
adc
sbb
jno
sub
sbb
sbb
stos
xchg
aas
xchg
pop
sub
adc
pop
adcb
push
movsl
out
jp
pusha
js
jnp
mov
stos
inc
lret
enter
mov
sbb
loopne
xchg
cs
insb
hlt
pop
jne
mov
movsb
jecxz
or
adc
mov
out
fists
push
cwtl
push
inc
sub
sbb
pop
in
pop
lret
mov
or
mov
sub
sti
enter
icebp
icebp
jmp
divl
in
cld
js
ds
mov
mov
ret
sbb
movl
jns
insb
jle
mov
test
push
aas
pop
dec
es
sbb
int
and
enter
and
inc
into
xchg
jle
xchg
mov
dec
stc
jo
out
loop
lret
xchg
jo
lds
dec
sbb
push
jne
sub
jmp
jns
int
pop
mov
xlat
mov
xor
pop
das
xchg
mov
sub
mov
fwait
sbb
imul
xchg
sbb
mov
call
lcall
mov
sub
xor
sub
cmpsl
fistps
push
push
nop
pop
cld
pushf
dec
fdivl
and
and
xor
mov
into
in
adc
je
mov
nop
fcomp
mov
or
lret
pop
rcrb
std
std
out
lahf
mov
roll
add
dec
or
popa
in
mov
stos
daa
dec
in
push
bound
jo
mov
outsl
into
in
cmpsl
insb
push
ds
xor
push
sbb
add
push
jnp
lret
and
scas
cmpb
scas
and
fidivrs
dec
xchg
sbb
mov
xchg
push
mov
pop
sub
fcoml
mov
lods
rclb
sub
adc
dec
cltd
xchg
js
movsb
je
test
scas
lods
mov
pop
addr16
andl
test
inc
xor
mov
add
mov
scas
sub
hlt
rcrl
inc
mov
pop
jl
mov
inc
mov
shlb
xorl
je
nop
inc
pushf
movsb
popf
jp
mov
repz
xor
sbb
int3
mov
cli
out
and
lds
push
pop
pop
pop
adc
push
shl
and
lret
push
in
shll
ret
popf
mov
vmread
xor
mov
add
mov
idivb
inc
xchg
test
push
pop
cld
xchg
adc
xchg
call
das
push
mov
out
bswap
out
inc
iret
inc
xor
push
shll
pusha
jmp
aaa
out
dec
sub
sbb
nop
push
pop
and
popa
sbb
lds
sarb
jl
push
sub
stos
add
movsl
xor
andl
sub
adc
cs
fsubrs
insl
sub
mov
mov
shll
or
cld
lods
ljmp
cs
out
std
hlt
insl
adc
shlb
push
sbbb
in
sbb
and
stos
push
push
leave
push
aam
sbb
xor
mov
push
add
jnp
lahf
pusha
lahf
enter
adc
and
dec
daa
inc
aaa
fldenv
bound
mov
sahf
loop
cmp
lret
scas
movsb
data16
push
mov
call
iret
std
movsl
pushf
clc
add
pop
dec
jno
ret
test
das
sub
loope
in
inc
dec
lcall
imul
sub
lods
add
sub
mov
out
xlat
aas
xlat
mov
mov
pop
jno
enter
dec
popf
inc
sbb
mov
cmpsl
add
js
push
lahf
lret
data16
bts
and
xchg
xor
nop
mov
push
sarb
sbb
push
call
push
push
adc
subl
sub
rcll
mov
imul
cld
push
xlat
pop
mov
sti
scas
push
sarl
cwtl
pusha
orl
push
or
xchg
nop
std
add
clc
cmp
mov
pop
sub
sub
rolb
adc
test
push
and
mov
repnz
cs
xor
mov
adcl
cltd
sub
js
arpl
push
sbb
sub
arpl
test
js
shr
pop
xchg
inc
inc
into
lock
adc
rcrb
sarl
aas
mov
mov
cmp
xchg
fsubs
test
mov
mov
shlb
arpl
movsl
icebp
sbb
lods
arpl
xchg
jbe
in
leave
fidivrl
and
lock
dec
int
sbb
das
leave
push
iret
and
xchg
shll
cmpb
sbb
fcomp
in
add
std
mov
mov
scas
xlat
addr16
inc
mov
cmp
into
out
aam
stos
fdivrp
and
add
out
or
jmp
decl
and
sbb
push
mov
adcl
and
sbb
xor
test
ljmp
test
push
inc
dec
sbb
idivl
insl
shlb
mov
inc
xchg
dec
sub
dec
dec
fldt
iret
adc
cs
test
sbb
mov
addr16
movsl
cmp
iret
lods
std
xchg
fdivr
sub
push
push
mov
cmp
outsb
mov
and
loopne
out
adc
push
xor
mov
dec
jmp
mov
sub
jle
adc
mov
xchg
scas
push
and
ja
outsl
int
call
loop
out
jns
sbb
adc
pop
jo
call
add
push
fcomi
jae
addr16
inc
dec
jmp
or
xchg
jp
dec
fbld
mov
test
and
mov
adc
scas
jmp
xlat
movsb
fldcw
loop
mov
or
jnp
sub
or
xchg
adcb
in
bsf
dec
in
popf
jge
clc
xor
xor
sbb
sbb
fdivl
in
jne
addr16
and
mov
call
sbb
sbb
adc
or
pusha
bound
jne
in
inc
aam
adc
xlat
inc
or
sar
sarb
mov
pop
cmp
repz
jg
pop
jne
addr16
std
push
cwtl
les
sbb
pop
pop
or
andb
adc
push
loopne
jb
das
cli
rorb
out
xchg
push
mov
les
ficompl
sub
xor
bound
shlb
mov
mov
mov
xor
sbb
sub
mov
fimuls
and
add
mov
xchg
cmpb
ret
pop
pop
loop
xchg
xchg
lods
jg
inc
xor
mov
pop
fwait
mov
mov
dec
lahf
wrmsr
dec
jmp
xor
jae
cmp
scas
cld
sbb
and
cmc
sbb
jo
enter
fcmovbe
popl
inc
mov
lods
push
inc
and
nop
rcr
fsubrl
aad
push
adc
int3
or
inc
cmp
lret
bound
jnp
mov
mov
data16
mov
mov
push
or
lods
fnsave
pop
pop
in
push
adc
xchg
test
mov
nop
ss
movsl
sbb
mov
and
aam
xchg
lods
stos
jecxz
or
into
out
aaa
ja
clc
daa
scas
adc
int
pushf
adc
daa
sbb
push
sub
sub
jmp
adc
push
or
sub
push
cld
fadd
daa
mov
xchg
movsb
insb
inc
mov
xor
es
adcb
ret
shlb
mov
fnstenv
clc
mov
sbb
jl
dec
or
enter
movsb
xor
lahf
scas
sbb
mov
fsubr
push
and
call
pop
clc
push
or
shlb
in
stos
jmp
pop
popf
xchg
jmp
jae
cltd
inc
jns
xchg
and
jmp
pop
cmp
jecxz
jmp
lods
sub
dec
dec
cmpsl
mov
aad
xlat
xchg
xchg
pop
test
imul
in
adc
sbb
in
popa
in
cld
sti
out
adc
scas
insl
arpl
movsl
adc
sub
sbb
sahf
pop
xlat
xor
rorl
fisubrs
mov
and
test
or
xchg
daa
aam
int3
popf
jp
js
cld
popf
cwtl
subb
push
hlt
and
adc
subb
dec
sub
out
sub
or
stos
movsl
or
rcll
xor
sahf
bound
loopne
iret
call
aam
cs
lods
adc
fmulp
jae
push
dec
add
jmp
shll
cwtl
ss
and
push
xor
pushf
loopne
rorb
adc
stos
xchg
xchg
mov
push
nop
outsl
adc
clc
shrb
jnp
mov
popa
push
jnp
arpl
cmc
xor
adc
xchg
ja
mov
out
lahf
add
aas
jp
or
iret
or
mov
jg
arpl
scas
mov
fdivl
mov
jecxz
pop
int
adc
sti
xor
sbb
adc
pop
scas
xor
sub
jl
push
push
rorb
push
test
sbb
adc
push
jge
loopne
lods
insl
sub
push
in
push
pop
mov
or
hlt
inc
arpl
mov
mov
repnz
mov
int
xor
inc
inc
push
xchg
sarl
cmp
jns
xor
xor
fisubrs
jecxz
pop
sub
enter
jp
sti
pop
inc
in
lea
mov
dec
cmpsb
add
xlat
jo
insl
or
outsl
push
pop
aad
loopne
ljmp
adc
dec
mov
cs
call
sub
ficoml
dec
jl
es
iret
jle
pop
xor
mov
jecxz
notb
sbb
or
cmp
rorb
xlat
fucomip
xchg
adc
xchg
aas
mov
or
mov
cmp
rolb
adc
mov
push
shlb
mov
pop
sub
mov
cmp
movsb
mov
dec
fistl
mov
call
or
imul
sub
je
xchg
stos
imul
test
sbbb
jbe
adc
into
sbb
push
mov
sub
push
sbb
fisttps
es
mov
cmpsl
jl
sbb
pop
xlat
ret
pop
iret
sub
lods
xor
rol
fnstsw
or
or
gs
adcb
movsl
and
insb
cs
mov
xchg
das
xchg
mov
jecxz
mov
cmp
xor
in
arpl
sub
pop
sub
pop
xor
jl
rcr
movsb
cld
sbb
sub
jae
aaa
and
movsl
clc
add
jns
mov
fsubl
sbb
jae
and
xor
dec
dec
push
lahf
enter
xor
iret
sbb
popf
data16
xchg
add
dec
and
scas
dec
or
out
xor
sbb
jle
out
bound
jecxz
popa
clc
hlt
jl
mov
call
inc
fistl
push
cmp
iret
lods
rcl
xchg
sti
mov
push
scas
jb
dec
clc
xchg
jne
fisubs
and
test
xchg
mov
and
popf
sbb
fisttpll
fldl
mov
movsl
sbb
out
in
or
data16
cmp
pop
fadds
adc
jg
lea
xor
jmp
or
pusha
test
cmp
push
xor
xchg
pop
jmp
es
out
rcll
notb
push
jmp
mov
subb
rcrb
rol
mov
mov
in
aam
popf
and
sbb
ds
nop
mov
out
jecxz
popf
push
xchg
mov
and
aas
jg
out
push
enter
ss
mov
xor
dec
notl
pop
imul
mov
out
fidivs
adc
jne
push
xor
and
cmp
adc
cld
adc
xor
lret
scas
aaa
sahf
cmp
ret
sub
clc
mov
mov
mov
je
xchg
movsb
fldt
cltd
insb
mov
push
mov
jp
jle
mov
jnp
mov
repz
mov
sub
mov
sub
push
cmp
mov
je
clc
shlb
mov
push
mov
push
pop
xor
push
ret
ret
scas
jne
xor
movsb
dec
cmp
popa
inc
test
cmp
or
loope
rcrb
sub
xor
jg
xor
xchg
cmpsl
repnz
sahf
xor
andl
lods
stos
xchg
aam
mov
mov
pop
rcrb
push
hlt
hlt
dec
adc
or
imull
mov
ret
dec
nop
test
add
ss
sbb
pop
pop
mov
and
fistpl
xor
and
xchg
stc
inc
xor
mov
add
inc
outsb
sbb
int3
or
movsl
and
lods
adc
jg
ret
shr
outsl
aaa
out
pop
pushf
jmp
jmp
and
inc
dec
pop
movb
adc
cmpsb
xor
sbb
popf
fsubl
lods
add
lock
pop
and
movsl
dec
aaa
push
pop
jmp
jg
sub
pop
out
cmp
push
dec
xchg
loope
lds
mov
mov
scas
iret
imul
pop
cmp
sti
clc
cmp
xor
mov
aam
xor
in
pusha
add
cs
cmpsb
pushf
dec
pop
inc
fsubl
xor
mov
nop
adc
lret
cmp
pop
icebp
in
clc
movsb
js
outsb
insl
dec
mov
daa
aam
sub
ror
int3
jns
adc
rcl
cmp
or
bswap
xorb
and
push
mov
push
add
les
ss
addl
push
sbb
lods
call
jbe
push
or
pop
adc
xor
mov
mov
int
lea
subl
mov
int
mov
adcb
cmp
push
cmp
in
ljmp
enter
xchg
lock
iret
stos
rorl
sbb
ret
push
lahf
mov
xor
fsubs
rol
cmp
adc
ret
mov
enter
aam
paddusb
out
push
dec
das
push
clc
int3
cmp
mull
sbb
jb
fadds
ret
sub
sub
sarl
push
sbb
sbb
shl
pop
outsl
jns
adc
pop
jo
inc
mov
dec
xor
outsl
xchg
sub
subl
mov
ljmp
jg
mov
cmp
push
rcrl
pop
pop
js
push
loop
das
data16
scas
dec
lods
mov
shlb
add
dec
xor
jo
mov
add
mov
xor
xor
or
adc
dec
aaa
bound
into
pop
pop
sbb
push
xor
lods
nop
mov
jecxz
sbb
pop
push
and
sahf
lods
sbb
pop
aaa
cmpsl
stos
es
jo
es
xor
cmp
movsb
sub
push
es
bound
shlb
pop
cmp
fsubrs
es
in
jo
cmp
cmp
pusha
dec
xor
jmp
mov
lods
xchg
popa
jge
xchg
shrl
addr16
call
pop
sub
pop
or
dec
fsubl
pop
cmpsl
xor
dec
sub
in
into
pop
cmp
fchs
call
imul
dec
mov
pushf
orb
sub
mov
call
fidivrs
adc
ljmp
xchg
insb
xchg
in
push
ss
bound
call
ljmp
and
adc
mov
sti
daa
xor
mov
mov
es
xchg
pop
cmp
int
call
push
clc
adc
lahf
call
jb
push
mov
sub
inc
and
sbb
cmp
inc
cld
pop
pop
fildll
scas
and
mov
adc
fwait
sub
adc
dec
mov
mov
enter
or
xor
out
mov
jle
sbb
sub
iret
adc
inc
addr16
es
adc
sub
outsb
push
negl
pusha
fs
orb
fsubrs
pop
xchg
out
push
mov
inc
leave
pop
adc
test
in
cmp
les
xchg
add
loopne
jecxz
ds
inc
xchg
into
stos
mov
lcall
jl
rolb
xor
dec
push
nop
lock
mov
push
clc
sbb
into
int3
inc
and
jae
mov
lods
int3
fldenv
int3
movsb
outsb
push
scas
insl
dec
aad
icebp
popf
imul
jg
xchg
popa
ljmp
push
fdiv
adc
test
int3
push
aaa
dec
cmp
fstps
jo
daa
ror
add
pusha
in
or
push
xor
dec
loop
repnz
ret
lea
cs
jle
ja
jb
aam
leave
mov
lods
xlat
out
sahf
or
push
inc
nop
dec
mov
pop
dec
inc
mov
cmp
sub
sbb
push
adc
stos
fcmovne
testb
mov
cmp
and
aas
int3
movsb
sub
xchg
xchg
mov
dec
out
push
cmp
pop
pop
inc
and
outsb
insb
jp
sbb
out
cwtl
js
int
add
mov
xchg
adc
jnp
roll
mov
movsb
add
xorl
pop
mov
cmpb
loop
ljmp
outsl
and
lcall
iret
icebp
pop
push
xchg
cs
and
mov
mov
ljmp
jecxz
shlb
mov
jbe
movsb
jo
mov
xlat
adc
pop
pop
adc
jb
inc
mov
dec
jbe
lea
mov
sub
pop
arpl
mov
ljmp
lret
mov
pop
arpl
fidivl
sbb
xor
nop
pushf
pop
fcmovnbe
push
clc
das
shl
lcall
push
js
cld
mov
insl
push
inc
psrad
movsb
pop
clc
sub
sete
xlat
xor
pushf
es
inc
enter
adc
push
lret
pop
adc
outsb
inc
xlat
sub
mov
jl
rcrl
pop
or
dec
loopne
sti
cs
sahf
xor
push
sbb
repz
xor
cld
hlt
mov
loopne
and
and
movsl
stos
aad
aas
or
clc
sub
pop
into
adc
loop
cmp
js
aad
int3
scas
xlat
fimuls
rcl
stos
jb
dec
xchg
and
add
sahf
nop
or
mov
mov
jle
loopne
in
push
jl
sbb
outsb
push
gs
insl
jmp
fisubrl
add
call
jo
fmul
dec
aam
sub
push
pop
sub
push
les
stos
adc
add
push
clc
dec
mov
daa
xchg
jo
adc
fiadds
mov
addr16
mov
lock
mov
or
adc
push
and
lea
and
fidivrl
and
cmp
mov
out
loopne
mov
cmp
adc
mov
repnz
je
push
adc
iret
adc
and
pop
mov
test
adc
lods
xor
adc
test
pop
test
aam
das
ja
repnz
push
mov
and
fwait
jns
inc
les
out
push
pmaddwd
pop
and
cmp
mov
mov
xchg
xor
adc
pop
pop
iret
rcrb
lock
orb
xor
xchg
aad
and
xchg
jo
rolb
cmp
ds
dec
xor
and
and
xchg
cwtl
and
and
pop
mov
fidivs
enter
fstpt
push
aam
or
xor
mov
mov
mov
sbb
ret
push
push
movsl
bound
fcmovne
dec
cmc
daa
fisttps
aam
cmp
in
lods
sbb
jb
nop
sub
dec
push
das
and
sbb
in
adc
arpl
int
inc
adcl
jmp
fdivrs
enter
out
ljmp
nop
inc
es
loopne
xchg
gs
push
rorb
jmp
aaa
mov
jle
out
and
and
ftst
lods
int
les
mov
mov
hlt
mov
das
int
jg
jmp
jnp
sub
mov
call
int3
add
repnz
mov
push
arpl
mov
aam
and
mov
shlb
repz
mov
fucomip
shl
lahf
fistl
jp
movsb
dec
movsl
je
pop
aaa
aad
jns
pop
fmull
sbb
jae
lea
sbb
pop
push
pop
out
sbb
jge
mov
mov
mov
cli
or
pop
dec
das
mov
repz
lret
xor
push
mov
pop
jmp
xchg
pop
shrb
jp
push
push
shlb
mov
out
in
sub
bound
fildll
mov
add
testb
and
push
and
push
fmul
mov
enter
lahf
movsb
rol
bound
cmc
or
cmp
push
sahf
int
xor
and
scas
xor
sbb
clc
dec
mov
xor
movsb
and
outsb
sahf
jmp
aam
or
xchg
cmc
adc
jmp
sbb
mov
xchg
xchg
and
xor
mov
xchg
jo
ss
push
daa
xor
push
jmp
pop
pop
xor
mov
mov
pusha
fstl
fsubs
xlat
insb
test
test
jge
push
ret
sar
xor
fdivrl
into
dec
leave
xor
push
sbbb
or
pop
push
gs
shrb
push
push
push
loop
xor
bound
decb
xchg
lahf
push
pusha
or
sub
mov
mov
cmpsb
mov
add
pop
mov
sahf
pop
rclb
pop
out
adc
ss
sbb
push
xchg
pusha
mov
xchg
mov
xchg
shrb
adc
or
jns
jbe
rclb
sbb
dec
das
aaa
sub
jg
push
and
cmp
mov
pop
ja
dec
xchg
sbb
test
jne
iret
mov
lods
pop
xor
bound
hlt
rclb
subb
dec
cmp
push
pop
pop
mov
inc
cltd
andb
pop
pop
ret
mov
outsl
push
loopne
xchg
mov
lock
inc
push
push
jns
mov
and
ljmp
xor
outsl
insl
js
scas
fs
and
popa
cmpsl
pop
shrl
adc
lods
cld
aas
aas
cmc
test
je
pop
mov
bnd
xor
fdivrl
data16
push
hlt
sbbb
shlb
or
aad
cs
xor
ss
int3
mov
mov
xor
sub
js
je
pop
js
leave
lret
cmp
in
mov
push
or
lods
nop
cmpsl
test
add
lahf
into
xor
das
and
dec
xchg
and
mov
mov
pop
xor
pop
sub
and
cs
test
xchg
scas
out
jecxz
add
in
lahf
dec
arpl
jo
aad
sub
push
sub
jo
mov
and
or
sub
in
aaa
sub
sub
adc
aam
xor
enter
dec
je
mov
sbb
daa
orb
xor
jmp
out
aaa
jo
cmp
dec
sbb
or
out
fdivr
cld
js
and
mov
mov
push
add
outsl
in
loopne
and
mov
sbb
in
add
fsubrs
mov
cltd
mov
push
jge
pop
lods
mov
cmp
ret
xor
or
dec
adc
or
pop
lock
dec
dec
pusha
mov
xchg
insb
cmp
sub
and
fcoml
ss
cmp
and
movsb
ja
test
call
sbb
lahf
sarb
das
ret
rorb
xor
out
and
pop
sub
jnp
push
sub
inc
xchg
subb
insl
insb
jno
jmp
fstpt
pop
mov
push
push
test
mov
fimuls
inc
and
js
inc
push
adc
cmp
jp
popf
lret
xor
sahf
outsl
ficoml
loopne
pop
shl
hlt
rol
in
cmp
push
cmp
scas
or
sub
rcll
test
dec
mov
xor
xor
jbe
sti
mov
mov
or
cmp
or
adc
xlat
and
pop
rcll
xchg
cltd
out
rolb
lods
inc
bound
repnz
xchg
in
outsb
data16
xchg
ja
cmp
scas
out
cmp
into
movsb
outsl
shlb
push
or
clc
test
sbb
and
jae
or
pop
push
xchg
and
mov
xchg
adc
fsubrp
fnsave
js
mov
cmp
push
or
push
popf
ret
in
setg
fnstcw
sti
xchg
xchg
xor
outsl
arpl
mov
repnz
pop
test
sub
in
shl
add
aaa
push
jmp
stos
mov
popf
mov
inc
cmp
adc
loop
nop
jl
push
and
adc
sbb
mov
lods
sbb
loope
pushf
inc
mov
jmp
inc
mov
test
or
pop
out
push
out
scas
jecxz
xor
in
dec
dec
mov
insl
dec
outsb
xor
add
in
arpl
rcrb
pusha
loopne
sti
xchg
mov
inc
cmp
sub
jg
mov
insb
je
popa
das
jecxz
push
sti
sbb
xor
mov
or
xor
loope
mov
sbb
pusha
sub
cmpsb
aad
lods
ds
jmp
sbb
fists
out
cmp
test
push
in
pop
int
hlt
ljmp
dec
or
xor
and
lds
cmp
adc
jns
push
adc
push
and
fisttps
shrl
mov
sbb
push
xchg
dec
push
pusha
imul
lret
adc
jmp
jge
cmp
or
call
decl
test
lahf
into
sub
ret
jns
scas
sarb
mov
mov
mov
xor
jle
andl
das
and
cltd
les
sub
fsts
inc
jle
jg
adcl
mov
adcl
xchg
xchg
das
movsb
mov
movsl
fnsave
xor
pop
aad
es
aaa
pop
jmp
inc
pop
in
pop
mov
sub
xor
adc
sti
popa
fildl
aad
and
sbb
int3
shr
fsubrs
adc
in
int3
sarl
xor
sub
jnp
mov
xor
push
shll
xlat
jo
xor
lcall
adc
test
adc
cmp
bswap
mov
mov
sbb
pusha
js
xlat
jmp
sbb
adc
mov
ljmp
jno
adc
sbb
mov
xor
aam
fcmovbe
or
push
stos
int
mov
jo
aam
push
repz
popf
ja
inc
push
cmp
mov
sub
push
scas
outsb
mov
mov
xor
jge
das
repnz
sub
push
xlat
pushw
mov
xor
dec
enter
aaa
jne
insl
adc
mov
inc
pop
xlat
xchg
push
movsb
mov
or
incb
cmpsb
xchg
outsl
das
adc
mov
dec
pop
jbe
xchg
fmull
or
xor
xchg
mov
test
js
divl
pop
fisttps
sub
rcl
lahf
sarl
cwtl
scas
paddq
xchg
scas
sbb
leave
push
lds
std
sbb
inc
push
adc
mov
ds
sub
mov
jno
pop
dec
and
lds
xor
loop
ret
outsl
fbld
out
xchg
out
xchg
xor
push
and
adc
xchg
xor
fisubs
rcrb
and
jle
sub
hlt
cmp
int3
imul
cmpsb
int3
push
hlt
lahf
mov
xchg
into
cmpsb
in
cmpsl
cmp
int3
lcall
mov
inc
lock
sarb
xor
mov
out
fisttpll
pop
push
pop
cld
mov
sbb
repnz
jmp
iretw
sti
ljmp
addr16
insl
inc
shrl
sub
push
cmp
popf
or
enter
sbb
daa
jnp
hlt
jle
iret
cmp
in
loopne
jnp
cmpsb
int3
cmp
dec
loope
in
sub
int
int3
and
mov
bound
jmp
sahf
dec
xchg
and
insl
sti
mov
pop
std
mov
std
inc
cmp
sbb
aam
inc
xlat
rorb
lods
das
test
xlat
stos
cmc
sti
rcl
std
inc
rorb
jmp
addr16
scas
xchg
xor
jmp
in
jbe
sahf
pusha
aad
pop
add
outsl
out
sbb
sbb
rolb
aad
fst
fdiv
add
fildl
iret
sbb
orb
inc
push
ret
xchg
adc
push
out
add
rcll
fisttps
jns
push
xchg
outsl
bound
xchg
call
ss
mov
push
dec
stos
cmp
clc
pop
mov
dec
popa
dec
dec
rcrl
nop
fistl
pop
adc
nop
je
aaa
mov
inc
hlt
mov
adc
les
pop
fwait
pop
clc
repz
or
orl
adc
pop
cmp
xchg
or
out
shrb
push
ret
or
rol
fcmovbe
hlt
cmp
pop
push
call
mov
sbb
sub
loopne
movd
cmpsl
dec
in
aam
push
bound
out
dec
gs
scas
xor
fsub
adcb
xchg
cmp
sub
cmp
and
stc
push
addr16
dec
push
icebp
mov
das
jmp
cmp
and
mov
cmpsb
or
in
out
mov
lcall
cs
xchg
inc
and
rcr
fdivrs
mov
out
insl
jge
lcall
sti
pusha
movsl
enter
cmpsb
clc
lock
test
pop
xor
jecxz
sub
or
xchg
mov
sahf
xchg
cmpsl
enter
pusha
xor
daa
dec
test
in
out
aaa
dec
mov
ss
jecxz
enter
clc
fsubrl
out
adc
pop
mov
es
das
into
test
outsl
push
mov
aam
sbb
das
clc
cmc
scas
aam
repz
in
test
aaa
mov
push
push
iret
scas
std
sahf
mov
adc
popa
lret
pop
movsb
hlt
mov
push
push
pop
cmp
out
test
ja
or
sub
mov
cmp
mov
lock
out
mov
dec
dec
mov
bound
pusha
lea
and
sahf
xor
rorb
pop
enter
sub
movsb
sarl
add
lods
ficompl
data16
fstpt
jge
sbb
int3
fucomip
stos
insl
movsb
mov
aas
cmpb
sbb
jb
cmp
pop
bound
or
addr16
mov
lret
push
adc
pop
loop
fistps
popf
fcmovb
mov
mov
lock
pusha
mov
imul
xchg
add
repz
in
fisubl
adc
stos
adc
push
test
out
pop
repz
shlb
cmp
xor
sbb
inc
mov
or
outsb
sbb
jbe
rclb
lea
in
call
ljmp
ja
mov
inc
outsb
mov
loopne
cli
movsb
push
push
loopne
and
adc
shlb
fs
and
pop
or
jp
arpl
fwait
sbbb
ds
jnp
cs
mov
ffree
into
cs
sarb
push
dec
cmp
fs
sbb
fisubs
fisubs
aas
aas
mov
lods
mov
jecxz
movsb
add
cs
nop
test
lock
shll
cmpsb
xor
xor
int3
pusha
call
daa
add
loopne
rcrb
inc
popa
sbb
adc
jns
and
les
std
cli
jle
sub
ds
xchg
call
cmp
push
cmp
addr16
icebp
mov
addr16
xor
in
sub
mov
jle
and
inc
adc
adc
out
cmp
pop
repz
ljmp
jl
cmp
fwait
mov
shl
sbb
jle
jnp
rclb
mov
xlat
subb
nop
mov
adc
lea
and
sbb
mov
arpl
cwtl
test
mov
cmpl
movsl
rcrb
lahf
hlt
push
ljmp
pop
out
stc
ss
adc
and
or
cmp
arpl
enter
and
in
sti
mov
lret
or
and
cmp
push
fwait
mov
test
lret
mov
xchg
clc
test
divl
neg
xchg
adc
sahf
hlt
pop
jns
fs
dec
xchg
notb
jl
mov
ljmp
cmp
xchg
gs
xchg
aam
xchg
setg
cwtl
daa
jge
adc
addr16
in
mov
mov
pop
enter
mov
push
sub
scas
or
add
add
insl
into
and
jno
jno
cmp
sahf
insb
add
addr16
xor
push
mov
ss
inc
nop
call
in
mov
xorb
pop
cmp
or
sbb
dec
insb
stos
div
jecxz
into
in
std
pop
rorb
enter
nop
cmp
andb
sarb
lods
sub
mov
cmp
pop
and
push
sbb
mov
and
shrb
xchg
and
cmp
aas
inc
mov
outsb
xchg
push
jle
or
out
xchg
push
ret
jbe
add
jb
push
test
dec
imul
arpl
sbb
mov
adc
jno
scas
sti
aad
js
xor
in
hlt
jbe
sti
xor
xchg
call
add
pop
cmpsl
xchg
push
mov
mov
jecxz
cmp
or
aad
push
push
pop
pop
mov
mov
imul
push
fidivl
push
in
js
mov
push
rolb
js
jns
inc
sub
dec
mov
inc
pop
inc
add
insb
icebp
jnp
push
jbe
cwtl
sub
ret
and
dec
lea
sbb
pusha
out
lret
xor
imull
sahf
aas
jae
int3
imul
or
scas
cmpsb
inc
push
scas
xor
daa
gs
jo
pop
loop
push
imul
int
ds
ljmp
adc
adc
jne
pop
lods
in
push
or
sub
and
cmpsb
inc
xchg
in
popf
test
fldcw
ror
pushf
jb
outsl
in
aad
fistpll
dec
daa
nop
ficompl
xor
mov
fbld
outsb
daa
push
in
jo
pop
lret
cmpb
sbb
insl
adc
in
into
pusha
push
push
jmp
das
es
xor
cmc
loop
sti
mov
inc
mov
orl
into
xor
and
ljmp
push
xchg
into
int3
js
test
sub
cmc
xlat
xor
pop
mov
fsubr
sbb
lods
je
hlt
out
or
pop
rclb
es
sub
push
jmp
lods
inc
push
mov
push
and
adc
mov
push
pop
popf
sub
sbb
ret
sub
lahf
adc
sub
and
jge
adc
rcrb
popfw
fcompl
repz
mov
xchg
arpl
sti
dec
xor
loope
sub
scas
adc
cmpb
into
mov
nop
jge
mov
sub
lret
scas
loopne
cmp
fwait
mov
dec
mov
xchg
imul
leave
lods
je
arpl
into
jns
loop
sub
push
sub
mov
mov
add
or
pop
jo
and
loopne
jecxz
inc
addb
popa
jecxz
adc
sahf
cltd
bound
scas
aam
das
in
pop
nop
das
xchg
shlb
adc
loope
int
add
iret
mov
int
jae
fcompl
pushf
inc
add
xor
daa
mov
aaa
pop
pop
xor
aam
nop
les
pop
fcoms
in
rolb
dec
rclb
sub
jbe
out
sbb
les
and
scas
mov
idivl
scas
and
xchg
mov
fst
pop
loopne
xlat
divl
xor
mov
pushf
das
adc
xor
int3
negb
and
adc
adc
push
push
fimull
push
imul
mov
out
mov
lret
cs
ret
aam
subb
mov
pause
mov
out
xchg
mov
aas
push
lods
lea
mov
aas
dec
mov
lcall
in
iret
out
lods
sbb
pop
xor
and
add
pop
mov
aaa
out
in
fildl
es
add
popf
jl
push
mov
cs
jle
pop
and
push
adc
test
xchg
pop
out
sbb
leave
test
mov
out
mov
push
aad
or
sar
inc
mull
fstp
cltd
ficoms
xchg
cmp
pop
pop
sub
daa
cmp
sbb
and
xchg
iret
insl
mov
and
pop
scas
mov
jbe
or
popf
jge
mov
jge
out
sbb
mov
xchg
shlb
push
lods
mov
pop
lahf
jmp
cld
or
iret
sub
fprem1
outsl
fistps
cmp
jae
push
cmp
bound
jmp
mov
pop
cwtl
jo
call
xlat
mov
iret
xor
xor
mov
pop
xchg
jmp
cmp
dec
aaa
sub
lret
cmp
lea
or
movsl
push
pop
xchg
cld
adc
test
sahf
cmp
js
loope
rolb
jne
mov
dec
iret
movsb
daa
ret
sub
lods
cmp
cmpsl
lock
pop
push
sub
push
rorl
cmp
test
jae
jae
adc
add
clc
imul
mov
aaa
movsl
push
outsl
xor
jmp
rcrb
mov
xchg
xor
sbb
xchg
negl
iret
cs
mov
mov
xor
jle
or
push
dec
loop
lcall
xchg
cld
and
pusha
stc
mov
mov
jle
inc
enter
mov
xor
or
mov
dec
andb
cmp
das
jg
push
or
aad
mov
xor
loopne
jb
int3
xor
repnz
int3
jmp
aas
out
ss
mov
xlat
dec
ss
repnz
rcrb
aam
add
push
dec
and
call
loopne
mov
adc
xor
pop
cmp
cmpsl
lahf
push
nop
dec
fdivrl
sahf
cmp
lahf
jo
cmpsl
fisttpl
ds
btr
dec
inc
loope
pcmpeqb
push
mov
lea
test
arpl
adc
daa
xor
cs
inc
inc
movsb
xchg
xchg
imul
cwtl
jae
jb
cmp
jb
or
jne
mov
push
xor
pop
push
adc
std
and
mov
ja
xchg
lahf
push
inc
faddl
les
insb
mov
fdivrp
cld
aas
test
push
insl
test
mov
push
int3
mov
imul
sti
add
xor
jo
adc
push
mov
rol
cld
enter
and
lods
pushf
loop
mov
into
sti
xor
push
cs
ficoms
dec
jns
sbb
pop
xor
subl
cmpsl
inc
inc
sub
je
add
inc
cmpsb
ret
aam
dec
lods
push
xchg
jae
xor
test
fdivrl
lods
cmpsb
jge
xor
sub
nop
clc
lahf
sub
xor
sub
mov
jle
filds
cmp
inc
or
sbb
popf
int
xchg
outsb
mov
mov
mov
xchg
mov
mov
pop
fxtract
mov
out
dec
lods
cmp
shll
sbb
repz
outsl
adc
push
lahf
xor
ret
push
movsb
mov
inc
div
mov
push
jns
andl
push
cmpsb
cmp
mov
fisttpll
sbb
xchg
push
mov
mov
xchg
popf
repz
fnstsw
in
cmp
jo
ret
adc
mov
sub
sub
movsl
and
ret
adc
sub
push
adc
mov
dec
sbb
jae
sub
sbbl
jecxz
mov
aam
push
dec
cmp
and
mov
sbb
subb
cmp
nop
mov
dec
mov
jo
push
clc
jnp
sub
cmp
xor
xor
cmc
ficoms
xorb
cli
xchg
mov
mov
gs
shlb
mov
pop
test
dec
loopne
cmpsb
es
mov
mov
dec
ret
test
imulb
jge
call
mov
bnd
inc
cltd
lret
int3
roll
scas
aad
shll
jl
popf
sbb
lock
mov
cmp
call
aas
mov
inc
cmpsb
mov
imul
adc
sti
mov
and
and
icebp
adc
jae
sbbb
shlb
fistpl
in
cmp
push
xlat
stos
mov
xlat
loop
dec
test
bound
data16
jns
inc
mov
rcr
loopne
fmull
xchg
adc
insl
push
xchg
cmp
mov
sub
test
clc
mov
in
push
pop
flds
xor
sti
cmpsl
sbb
mov
sub
int
adc
enter
loop
addr16
nop
sbb
pop
out
dec
xchg
lods
push
add
or
bnd
ss
loopne
and
fsubrp
and
mov
mov
xchg
js
lods
lahf
divl
and
dec
ficompl
sbb
pop
adc
notl
pushf
insl
iret
aaa
cmp
mov
repnz
push
jmp
loop
jnp
aaa
mov
sti
push
iret
add
xchg
mov
lret
fdiv
inc
lahf
dec
std
out
push
aad
mov
push
jnp,pt
inc
xchg
cmp
inc
fadds
inc
xor
sti
sbb
pop
insb
jl
out
es
and
nop
mov
sar
sub
and
sbb
fldl
out
inc
call
dec
sbbl
icebp
sub
push
jno
and
rcll
sub
popa
adc
xchg
jns
mov
mov
pushf
lahf
xor
adc
sbb
hlt
push
jbe
ret
sub
xchg
shll
ds
push
xor
sbb
pop
jecxz
js
jle
or
movsb
or
sbb
test
movsb
stos
pop
into
cmc
scas
push
xchg
int
test
mov
pop
repnz
cmp
fidivl
mov
loopne
jecxz
movsb
rclb
sbb
mov
test
test
mov
fistpl
test
dec
js
mov
movsl
shlb
dec
xlat
xchg
sbb
add
push
mov
movsw
lds
fildll
shll
mov
add
insl
cmc
fcmovb
inc
sub
jne
xor
push
or
nop
insl
test
leave
jo
shl
adc
mov
xor
push
dec
call
movsb
addr16
jmp
cs
xchg
lods
xor
sarl
lcall
sahf
loop
imul
jle
adc
adc
repnz
xor
movsl
mov
out
sub
push
adc
repz
popa
and
lret
les
arpl
gs
gs
repz
test
inc
shrl
sub
pop
jno
adc
lea
int3
and
out
mov
fsubr
cmp
inc
fidivs
xor
sbb
add
popf
shlb
scas
pop
mov
sarl
pop
imul
mov
mov
aam
sub
or
push
adc
jl
and
xchg
xor
mov
data16
inc
rcrl
sbb
in
aam
jbe
jle
jl
lods
cmp
jg
fisubrl
leave
mov
xor
push
rclb
jne
roll
push
mov
push
dec
insl
insb
dec
mov
pop
mov
loope
pop
lahf
mov
lods
mov
adc
clc
movsb
add
scas
sbb
cld
sbb
cld
mov
iret
pushf
dec
pop
shlb
scas
sbb
fisubs
mov
xchg
sub
dec
popa
popf
inc
push
insb
lds
jp
xchg
outsl
mov
xchg
adc
je
jmp
mov
add
iret
sti
shll
inc
mov
jne
push
jne
bound
fdivrs
lods
clc
outsl
xchg
adc
js
fcompl
xor
xchg
ret
adc
adc
sbb
mov
sub
push
push
fs
sar
inc
lcall
out
out
rolb
pop
jbe
mov
mov
insl
out
iret
in
pop
mov
xchg
sti
leave
cltd
clc
sub
dec
roll
inc
inc
dec
rcrb
int3
aaa
pop
or
imul
cmpsb
dec
out
cmc
jp
lods
cmp
hlt
or
stos
lods
leave
rorl
ds
je
fldt
push
popa
sti
pop
and
pop
outsb
push
stos
ds
adcb
inc
mov
xor
mov
repnz
push
push
aad
ja
mov
orl
cmp
jecxz
pop
mov
cld
push
mov
add
push
fdivrl
sbb
jo
mov
clc
mov
fcomps
rcl
outsb
incb
mov
call
push
add
pop
mov
std
pushf
jge
mov
ret
aam
mov
jle,pn
mov
gs
aaa
subb
bnd
jno
in
fsubrs
rcr
pop
stc
or
xor
jbe
ret
sbb
inc
mov
jae
lea
insl
in
movsb
push
stos
pop
jno
std
mov
inc
add
lods
sbb
hlt
cmp
sbb
adc
xor
push
jle
cmp
push
mov
sub
adc
mov
cmp
bswap
push
mov
rclb
shlb
pop
scas
sbb
es
xlat
iret
imul
sub
fwait
stos
in
mov
or
std
in
push
mov
notl
mov
sub
sbb
xchg
rclb
pop
dec
dec
arpl
jp
xchg
mov
adc
mov
pop
dec
cmp
fadd
xor
daa
pop
sbb
pop
orl
cmc
lds
call
rcrb
mov
addr16
ret
xchg
fimuls
sub
add
or
iret
iret
ss
mov
sbb
adc
dec
rclb
bound
sub
nop
mov
sarb
and
js
mov
rcll
rclb
shrb
in
mov
nop
xlat
in
testl
sbb
test
call
scas
mov
mov
xor
mov
cmp
aam
xor
notb
pop
or
and
xchg
dec
out
je
mov
mov
aam
daa
xor
xor
and
lret
push
inc
cmp
xchg
out
sbb
dec
and
pop
cwtl
dec
cld
movsl
lret
repz
rclb
jecxz
and
pop
lea
and
sbb
add
xlat
ljmp
in
mov
bound
dec
js
inc
inc
push
jb
xor
push
sub
hlt
pop
sbb
push
and
or
mov
popf
dec
cmp
or
shll
lcall
pslld
mov
lea
mov
sarl
mov
inc
and
jae
mov
shr
faddp
and
push
subb
ljmp
jo
pusha
xchg
fstl
jnp
in
clc
cmp
das
xlat
adc
cmp
out
xor
ds
jbe
xor
and
lods
into
lods
mov
pop
xor
addb
push
mov
push
cmp
add
add
cmp
aaa
add
imul
dec
xchg
xchg
dec
mov
dec
lods
pop
hlt
cmpsl
fistl
mov
call
adc
std
and
test
loope
jle
cmpsb
and
mov
dec
out
pushf
jne
loop
push
dec
dec
test
out
mov
js,pn
cmp
repnz
fistpl
les
lods
sub
jp
mov
cmp
loope
adc
dec
fisubs
sub
out
adc
jnp
imul
cltd
pop
fistpl
mov
mov
lods
pop
pop
cld
imul
call
imul
dec
mov
inc
and
jbe,pn
mov
sbb
lods
or
pop
jg
jecxz
shlb
shrb
mov
ret
in
mov
leave
js
pop
and
mov
testl
sbb
push
jge
mov
pushf
fsubrl
ss
fucompp
jmp
mov
pop
xlat
xchg
popf
movsb
jns
fnstcw
loopne
out
sub
mov
push
in
shll
test
xor
xchg
pop
jno
push
movsb
jnp
push
and
pop
add
mov
clc
xchg
bound
add
aas
dec
lods
cmp
mov
xchg
xor
pop
imul
xor
and
xor
popf
mov
das
outsb
jle
mov
add
adc
xchg
inc
movsl
stos
mov
loopne
and
push
unpcklps
xchg
shlb
cmp
sub
pop
jp
sbb
imul
and
xor
sub
push
daa
jne
andb
movups
xor
or
push
mov
push
out
mov
outsb
jns
cmp
gs
push
ret
loop
hlt
iret
pushf
mov
sub
stos
or
mov
das
popa
sar
rorb
mov
xor
inc
mov
aam
lea
lea
loop
movsl
add
mov
or
jbe
sti
jg
xchg
inc
test
int3
mov
lods
and
ja
cmp
sbb
xchg
lock
or
pop
pop
pop
add
xor
cmpsb
pop
push
cld
mov
pop
adc
daa
xchg
cmp
sarl
test
scas
les
cmp
rol
pop
pop
popf
lods
mov
add
sbb
outsl
xchg
orb
push
sbb
or
lea
stos
in
clc
cmp
inc
fstl
and
xchg
and
nop
dec
xor
int
test
mov
cmp
add
pop
shll
mov
sub
xchg
push
xorl
sbb
xchg
pop
jg
add
sub
lret
lret
je
mov
int3
mov
dec
and
mov
enter
fadds
int3
aad
sub
inc
lock
iret
inc
mov
shrb
mov
rorb
bound
xchg
cmpsb
outsl
orb
mov
xor
jbe
andl
pusha
iret
rcrl
rcll
xchg
mov
addb
cmpsl
call
xchg
insl
mov
nop
sbb
xchg
jg
inc
dec
push
clc
or
dec
out
pop
pop
pop
mov
mov
mov
push
or
cmp
sbb
jl
dec
jp
into
lods
addb
jg
ja
pop
cmp
or
mov
or
ret
adc
fs
and
fcoml
pop
iret
mov
fidivrl
psubq
mov
cmpsb
dec
sub
push
jg
ljmp
pop
out
into
movsb
dec
jg
adc
mov
scas
loop
fisubrs
mov
repz
push
push
or
mov
stos
adc
xor
adc
inc
ret
xor
sub
daa
fs
xor
jae
nop
fiadds
lcall
cmp
ret
lcall
xchg
ret
mov
or
sbb
scas
lcall
nop
sub
dec
cmp
sbb
push
push
pushf
sahf
fs
mov
add
sbb
dec
test
adc
ds
lock
rolb
jg
mov
and
mov
adc
jnp
pop
inc
xchg
pop
inc
rclb
push
and
inc
int3
and
int3
and
dec
sbb
xor
pop
add
pop
clc
iret
inc
push
cli
cld
loop
pop
cld
cmp
pop
adc
sti
int3
test
sub
aad
enter
and
mov
xor
xor
test
sbbl
cmp
mov
daa
xor
ret
push
sarb
shl
aam
pop
mov
push
push
outsb
unpckhps
push
cs
sbb
sub
pushf
xchg
xor
scas
into
mov
test
clc
andl
cmp
lcall
frstor
xor
xchg
mov
adcb
out
mov
cmp
in
bound
dec
xchg
sbb
dec
shll
mov
adc
xchg
add
jo
bound
repnz
push
mov
loop
dec
daa
rorb
cmc
sahf
cld
in
mov
mov
shlb
jge
sbb
pop
call
push
outsl
loop
out
bound
rcrb
adc
insb
jne
or
mov
adc
out
inc
dec
jmp
and
rorb
jb
add
xchg
mov
ja
fidivrs
cmp
add
mov
add
xor
inc
pop
inc
pop
stos
in
sub
jg
scas
lock
and
xor
sbb
lods
ds
iret
push
xor
sbbb
js
pop
sbb
xchg
adc
lock
or
out
adc
xchg
cld
cmp
enter
pusha
adc
hlt
ja
rclb
xchg
test
mov
addl
sbbb
out
addr16
dec
xlat
pop
jb
das
xchg
and
push
pop
xchg
popl
repnz
add
push
jp
sbb
in
cltd
and
or
jle
xor
xchg
fsub
sarl
push
fnstcw
jb
push
push
dec
pushf
push
popf
push
shlb
jg
sub
jne
pop
cmp
fldt
cmp
xchg
cmp
push
lods
cmc
nop
or
divl
sub
popa
sub
mov
add
xor
mov
pop
movsb
push
int
lahf
inc
and
pop
mov
ror
dec
push
jecxz
sbb
fisubrl
or
mov
adc
cmpsb
cmc
sbb
mov
test
pop
subb
or
iret
enter
ret
push
nopl
and
mov
xor
lods
ja
adcl
jmp
sbb
jmp
shl
sahf
mov
mov
mov
jnp
jmp
sahf
pop
enter
ja
jnp
cmp
xor
lods
and
xor
and
into
push
xchg
adc
sub
sub
bound
hlt
mov
ror
adc
std
cwtl
pop
fsubrl
lret
push
cwtl
rclb
cmp
outsl
mov
jmp
add
adcl
fsubrl
mov
shlb
mov
pushf
aam
sahf
xor
pop
mov
ss
push
daa
dec
iret
out
pop
pop
psubusb
cmp
shlb
sub
data16
cmp
in
test
inc
insl
shll
sub
push
xor
lret
xchg
and
call
das
loop
das
clc
je
cwtl
idivl
fnstsw
push
iret
repz
shlb
aad
sbb
dec
push
xor
loopne
out
cltd
pop
add
jnp
add
hlt
adc
je
dec
xor
dec
daa
loopne
lods
ret
mov
cmpsl
xchg
lods
mov
mov
jns
pop
icebp
popf
and
xor
outsb
jge
inc
imul
xchg
jns
dec
jg
cmpsb
sbb
xchg
fstpt
xchg
call
adc
lea
xor
inc
repz
xchg
mov
adc
add
aad
adc
and
andb
push
jnp
bound
cld
dec
in
mov
call
mov
push
shlb
push
fmull
aad
nop
pop
pop
jo
adc
xchg
nop
jb
rcrl
int3
fimuls
adc
cld
push
scas
xchg
les
insl
mov
mov
add
mov
push
cmp
cmp
into
loop
pop
push
mov
and
xor
mov
xor
movnti
xor
nop
andb
mov
add
add
bound
or
mov
nop
int3
subb
mov
insl
addr16
cmp
lahf
rcll
xchg
aam
xorl
cld
mov
in
test
hlt
xor
leave
cmpsl
imul
mov
loop
addr16
lret
scas
and
cmp
imul
sub
jle
popa
lds
lahf
pop
xor
jae
pop
sub
and
rolb
fdivrs
jl
sub
add
mov
mov
sbb
inc
mov
out
fdivr
push
in
mov
rorb
aam
scas
mov
mov
pop
mov
mov
adc
popf
sub
mov
in
lahf
cmp
in
dec
rorl
push
cmp
and
jge
shll
xor
loopne
test
arpl
mov
fcoms
inc
jns
repnz
pusha
iret
add
pop
xor
pusha
push
xchg
sub
add
jbe
add
movb
int
dec
icebp
and
dec
pop
int3
insb
in
adc
int
cs
fs
pop
dec
arpl
imul
outsb
lret
lods
add
jp
ror
popa
jg
insl
iret
xchg
and
add
mov
sahf
lea
in
dec
sbb
mov
pushf
and
or
cld
add
int
or
mov
int
sahf
stc
sbb
sbb
les
mov
xor
popa
out
inc
cmp
jl
or
jo
xor
mov
xor
lods
dec
pop
ja
add
adc
imul
das
add
jge
aad
push
mov
dec
sbb
jnp
int3
jo
mov
cltd
push
adc
test
mov
push
lods
sbb
gs
mov
adc
inc
dec
pop
mov
ficoms
mov
fisttpll
xchg
mov
pop
push
mov
pop
jg
fidivs
popf
push
out
jecxz
aad
xor
inc
push
jae
jae
pop
dec
fdivl
push
das
adc
data16
lret
dec
outsl
jmp
jmp
mov
sahf
and
jle
ret
jl
mov
sbb
and
mov
push
sbb
adc
mov
adc
cmp
stos
ret
hlt
shlb
arpl
dec
inc
xor
mov
xchg
pop
mov
loop
out
sbb
shrl
mov
dec
add
lds
add
stos
push
add
hlt
adcl
sbb
adc
ret
pushl
jl
jecxz
push
mov
dec
pop
mov
out
cmpsb
push
movsb
popf
jnp
in
adc
and
sbb
sbb
cmp
in
jb
lds
jecxz
sub
jnp
jle
xor
cmp
test
call
iret
cmp
jo
push
scas
arpl
sub
inc
and
pop
cmp
push
test
push
stc
testb
enter
inc
test
jle
lcall
rclb
push
idivb
loope
scas
jl
ljmp
ret
pop
insl
xchg
sub
mov
push
mov
out
pushf
xchg
pop
aam
in
out
add
xorl
fdivl
and
repz
cld
and
sbb
xchg
mov
pop
lods
prefetcht2
js
adc
push
pop
aad
jb
nop
mov
dec
push
adc
sbb
sub
jge
test
cmp
lock
push
das
bound
dec
imul
jnp
push
bound
fdivrl
add
andb
cmp
push
aam
xor
adc
sub
sbb
ja
cmp
rolb
jmp
and
mov
lahf
cmpsl
mov
push
cld
cmp
cmp
in
jle
lea
sahf
dec
dec
sahf
push
lock
adc
andb
mov
add
imul
notl
sub
es
adc
push
shrb
arpl
hlt
bound
out
dec
add
outsl
jnp
jle
imul
lea
push
cmp
fimull
in
out
enter
xchg
mov
lcall
insb
adcb
xchg
cmc
aad
imul
mov
fidivrl
push
in
sbb
ror
sub
push
jecxz
jecxz
cwtl
enter
push
data16
insb
call
xchg
leave
into
and
in
lret
es
nop
and
shrl
xor
cmp
jge
xchg
in
mov
mov
or
jbe
xor
adc
fstpt
adc
dec
pop
add
lock
clc
outsb
lods
xlat
fcoml
iret
and
fisubrs
int
push
and
loope
pusha
aad
jmp
bound
jecxz
push
incl
loop
popf
mov
es
ja
cmp
jmp
ret
cmpb
push
pop
inc
popa
aas
enter
clc
xchg
dec
mov
lods
inc
lahf
sub
adc
mov
mov
into
mov
xor
call
adc
int
leave
lods
push
add
in
pop
xor
cmp
push
pop
or
lret
cltd
rol
pusha
in
in
xor
fwait
das
shl
add
inc
aaa
lret
fidivrl
jns
daa
sbb
pop
mov
mov
call
jge
adc
insb
dec
xchg
adc
daa
push
das
jnp
dec
jle
out
jno
mov
roll
mov
test
popf
pushf
pusha
outsl
into
cmp
andb
stos
jae
lcall
inc
and
fildl
mov
js
fsts
inc
das
mov
jg
cmp
pop
nop
mov
insb
aam
adc
fsub
cmpsb
fcomps
sbb
mov
jle
mov
ret
ja
push
xor
mov
inc
sbb
mov
pop
sbb
pop
mov
mov
cmp
sahf
imul
nop
push
test
loop
and
inc
xchg
xchg
push
rcrb
aaa
ja
not
sbb
nop
cli
push
popf
cmc
cmpsl
aam
push
cmpsl
and
jbe
clc
mov
mov
cmpsb
out
xor
and
scas
clc
sub
cmp
inc
repnz
js
adc
mov
add
cltd
or
mov
mov
lods
sti
pop
sbb
cmpsl
adc
sbb
gs
inc
fmuls
mov
cmp
fs
inc
test
push
push
jge
fidivs
gs
and
ja
pop
dec
mov
mov
jnp
push
pop
mov
aam
push
and
sbb
fcoml
push
aam
mov
add
mov
xor
je
xor
cmp
mov
cmpsl
sub
rcll
fisubrs
jo
mov
push
cwtl
scas
adc
fs
hlt
das
mov
adc
iretw
jne
inc
adcl
shrb
inc
test
dec
sbb
loope
dec
push
movsb
cld
mov
in
or
call
add
and
sarl
pop
fadd
ljmp
pop
cmp
cmp
or
out
cmpsl
jl
and
call
fdivl
ret
push
repz
bound
loope
xchg
sub
hlt
dec
cmp
inc
fdivrs
sti
xor
pop
dec
dec
cmp
insb
mov
add
dec
nop
xor
jl
xchg
sbb
ljmp
xor
mov
daa
popa
or
addb
xchg
fdivr
enter
fwait
lods
mov
shlb
rclb
adc
lcall
mov
cmp
cmp
call
stc
sbb
mov
iret
inc
mov
xor
push
out
cwtl
decl
arpl
mov
xchg
inc
jo
ss
das
fisubs
xor
and
mov
add
faddl
dec
jns
mov
push
mov
jg
lods
int
int
ljmp
aas
pop
xor
fs
sahf
xor
push
stos
mov
aam
lcall
hlt
mov
cltd
pushf
push
rorb
ror
xor
das
out
movsb
insb
leave
jae
enter
push
xor
enter
jg
sarl
mov
ljmp
cmp
cmp
notb
ja
inc
cmp
inc
sub
push
pop
addr16
clc
push
loopne
mov
shrl
push
andb
push
pop
and
adc
inc
inc
mov
pop
mov
call
push
mov
out
inc
lock
fisttps
clc
je
outsl
imul
xor
and
dec
test
enter
rcr
dec
mov
fsubl
mov
fstps
lret
push
xchg
and
adc
iret
mov
enter
jo
cwtl
adc
fdivr
arpl
sbb
push
and
nop
packssdw
scas
das
dec
rol
sti
jge
cmp
add
sahf
xchg
jb,pt
cs
dec
popf
xorb
bound
dec
pusha
xor
jo
divl
cmp
cmp
push
call
adc
mov
jae
popf
lods
ret
xchg
fcoms
cwtl
mov
in
cltd
sbb
cmc
data16
adc
stc
bnd
jg
mov
sbb
insl
hlt
push
adc
xor
scas
cmp
rcr
dec
scas
test
lods
dec
out
xor
mov
dec
shlb
popf
cmp
adc
push
jnp
in
push
aas
jb
jnp
pop
je
fdivrs
les
xchg
in
xor
xor
pushf
jg
cmp
imul
out
movsb
jmp
aaa
pop
mov
mov
fiadds
fisubs
mov
adc
xchg
jecxz
xor
xor
fistpl
or
and
ja
add
jge
and
jb
sub
push
inc
xor
test
and
loope
mov
imul
out
popf
push
fcomip
cmp
lret
adc
dec
pop
std
jo
jo
lret
push
pushf
mov
push
sbb
push
sub
push
aam
in
insb
sub
das
or
cli
push
pop
out
inc
dec
or
mov
mov
roll
mov
sub
mov
lret
sbb
sbb
sahf
je
shrb
mov
or
add
inc
ret
mov
subl
ret
xor
inc
xor
xchg
test
mov
mov
popa
jl
mov
test
das
sub
adc
sbb
scas
adc
sub
iret
or
insl
sbbl
sub
sub
iret
push
ret
lods
test
shl
popa
in
push
loop
mov
cmp
in
mov
pop
mov
and
rcrb
jno
outsb
in
or
lea
push
jo
xchg
in
bound
in
mov
ret
nop
pop
mov
sub
mov
mov
pop
les
add
test
loopne
and
mov
cmp
sbb
adc
cwtl
cmp
push
or
insb
das
lods
sbbl
sub
cmc
mov
imul
bound
cmp
xlat
jge
shl
adc
sbb
lock
inc
mov
inc
mov
lea
add
pop
and
aam
or
push
pop
ret
sarb
movaps
and
push
out
test
cli
in
and
mov
das
xor
arpl
lods
mov
dec
popf
imul
cltd
sbb
xchg
enter
popf
lods
dec
cmp
push
jge
or
mov
mov
lea
push
andb
mov
jle
popf
cs
xor
cmp
popf
push
into
imul
dec
cmp
xchg
adc
mov
sbb
dec
dec
lock
lea
mov
cmp
dec
pop
pusha
cs
xor
pop
push
mov
inc
mov
pop
jns
or
pushf
out
es
cwtl
pushf
mov
insl
or
arpl
fadds
stc
andb
jmp
xchg
xchg
movsl
mov
adc
inc
xor
xor
js
pop
cmpsb
push
ss
aad
inc
ja
mov
insl
insb
js
nop
aam
minps
cmp
or
out
pop
out
je
push
sbb
adc
std
cmp
mov
push
sbb
mov
mov
push
movsb
xor
and
dec
mov
sbb
repz
ror
sbb
insl
mov
mov
das
and
scas
inc
jo
mov
in
jnp
dec
cld
data16
enter
hlt
std
mov
les
sub
or
imul
xor
call
loope
pop
and
or
inc
test
scas
fdivs
test
js
xchg
cmp
call
fcoms
mulps
adc
out
push
aam
or
out
repnz
out
xor
jno
pop
xchg
mov
sub
sub
pop
es
or
or
adc
sub
sub
rcrb
cmp
mov
pop
outsl
sti
das
mov
lahf
das
xor
std
sub
jne
addb
sub
out
int3
out
xchg
bsr
dec
mov
mov
inc
fldt
dec
idiv
xor
std
sbb
repz
shlb
enter
repz
hlt
call
gs
mov
out
and
shll
or
mov
push
rolb
sbb
cmp
adcb
sub
push
idivb
loope
adc
pop
rcl
xchg
ja
and
je
int
scas
cmp
ja
daa
aam
call
pop
jp
mov
outsb
lret
pop
jl
lds
je
mov
les
out
outsl
pop
pushf
xchg
mov
pushf
cmpsb
mov
xor
inc
lret
cmp
lods
mov
testl
jns
sbb
movsl
xchg
jmp
push
push
xchg
dec
bound
mov
sbb
bound
test
cmp
ret
pop
iret
push
mov
das
mov
adc
dec
pop
nop
push
adc
mov
push
lock
xor
movsb
pop
test
jbe
sub
mov
ljmp
popa
shrl
xor
mov
pop
lret
push
or
xchg
nop
adc
adc
adc
or
push
push
cmpsb
out
gs
and
cmp
sbb
aad
push
push
inc
mov
enter
rorb
psadbw
xchg
ljmp
lret
js
or
sti
cmp
jmp
mov
fcmovnu
lret
in
push
xchg
subl
ss
mov
sti
shr
inc
cltd
mov
out
mov
pop
cmp
test
daa
outsb
mov
out
pop
add
bound
outsb
popa
das
pop
out
mov
add
sub
pop
or
inc
mov
jg
mov
cmp
sub
jbe
and
shrl
clc
or
popa
lods
pop
std
and
aas
dec
into
fstl
sub
out
scas
mov
cmp
std
inc
mov
sarb
jmp
mov
jb
jb
mov
xchg
mov
xchg
lcall
mov
push
loop
mov
xor
push
cmp
aaa
and
jge
into
xchg
and
fs
ljmp
adc
and
scas
mov
arpl
fcomps
or
leave
push
aaa
xor
nop
cmc
aam
fdivl
in
das
filds
cmpsl
xor
sbb
fdivs
sub
cmp
sbb
aas
sub
std
rcll
int
je
into
movsb
call
inc
pop
loopne
add
shrb
adc
xchg
sbb
ret
cmp
cmp
push
push
iret
shlb
dec
gs
mov
mov
nop
pop
pop
test
and
sbb
push
out
mov
pop
push
jecxz
outsl
mov
notl
xor
or
dec
out
dec
sahf
mov
shll
cs
mov
pop
nop
in
pop
xor
and
jns
jge
jne
mov
xor
xlat
dec
sub
xchg
imul
xchg
xor
nop
bound
bound
movsb
inc
iret
je
ret
fwait
cmpb
ds
adc
and
pop
sahf
add
and
push
jle
fidivl
add
adc
aad
das
testl
bound
cmc
and
notb
jmp
dec
xchg
inc
fsubs
mov
pop
cmp
ds
sbbl
sbb
sub
repnz
jmp
out
adc
scas
ret
lahf
mov
xor
push
jge
out
cs
cmp
inc
mov
pop
xor
in
out
jno
out
out
jmp
jg
daa
pop
mov
cwtl
into
jno
cmp
cld
mov
push
lods
sahf
data16
inc
test
mov
push
or
and
sub
cmpsl
clc
movsl
sti
or
jle
jg
and
stos
mov
sub
mov
pop
aas
inc
enter
pop
clc
xchg
fmuls
mov
ret
loope
call
sub
les
and
inc
movsl
inc
jle
cmp
cmp
xor
nop
sub
into
mov
lcall
inc
and
xor
cmc
inc
fs
mov
sub
fildll
clc
push
inc
js
push
push
daa
sbb
out
shll
mov
ret
xlat
and
fists
aas
out
ja
push
daa
pop
mov
mov
cmp
fdivrs
loopne
dec
jle
call
mov
int
in
mov
cmp
mov
mov
scas
push
mov
and
inc
sub
insb
shl
scas
sub
mov
and
hlt
out
pop
dec
xor
fs
int
push
push
inc
jo
and
ja
xchg
jmp
jns
addl
mov
sahf
scas
sub
push
or
out
xchg
mov
jge
mov
dec
data16
pop
mov
js
push
mov
iret
gs
stc
adc
pop
sbb
imul
adc
lahf
pop
mov
mov
sbb
cmp
ret
fadds
mov
adc
push
int3
pop
fdivr
pop
inc
dec
xchg
sub
dec
inc
push
hlt
scas
cmp
aaa
shr
pop
xor
ljmp
sub
dec
push
mov
rcrb
push
daa
nop
xor
jg
out
in
xchg
jge
push
push
pop
and
cltd
xlat
mov
ljmp
in
jle
imul
mov
stc
mov
in
mov
jae
repz
jg
adc
test
and
imul
xlat
xchg
xor
sbb
out
or
iret
fildl
sub
or
mov
adc
jo
into
leave
cmp
push
jge
cmp
pop
test
mov
xor
mov
rcrb
xchg
test
and
xor
xchg
movsb
cmp
pop
test
cmp
mov
dec
xchg
iret
xchg
dec
pusha
xchg
pop
dec
pop
push
jbe
pop
jg
cmp
rclb
in
mov
push
jae
scas
das
int3
add
xor
xor
pop
or
dec
jb
rclb
fidivrl
pop
je
sbb
imul
ja
push
add
pop
fadds
loop
unpckhps
das
adc
jle
inc
or
hlt
cwtl
arpl
xchg
sub
jmp
jl
ror
enter
cmpsb
cmpsl
and
je
pop
movups
ficompl
ljmp
xchg
mov
adc
dec
push
and
push
mov
xor
adc
sbb
jns
out
es
xor
mov
or
ds
xor
nop
lret
pop
xchg
repz
xor
xchg
subl
mov
aaa
or
fisubs
ds
jb
xor
xchg
push
int3
imul
cli
xor
cs
jecxz
sbb
fwait
sbb
jge
lods
dec
mov
lods
xchg
fisubrs
das
out
lods
inc
icebp
mov
fisubrs
nop
andb
clc
loope
push
mov
jmp
mov
push
lea
lods
add
mov
mov
or
xchg
lods
call
xor
jp
insb
addb
test
add
sbb
inc
pusha
ljmp
fdivl
pop
cmp
inc
push
sub
sub
bound
dec
cmp
ja
enter
xorb
les
sbb
shlb
sbb
push
das
fs
or
xchg
adc
jp
dec
dec
xor
dec
pop
jmp
mov
pop
cmp
outsb
scas
notl
cmp
mov
pop
scas
ljmp
lret
mov
mov
aas
int3
and
and
sbb
icebp
cs
jg
pmuludq
xor
pop
dec
or
aas
loopne
xor
jmp
shl
pop
xor
pop
movsb
jae
adc
or
cmp
xchg
popf
frstor
aam
aaa
sbb
movsb
sahf
ss
jp
nop
outsb
clc
out
fidivl
fisttpll
hlt
gs
ljmp
repnz
mov
fsts
pop
adc
cmove
jle
xor
mov
cmp
cmp
test
pop
iret
inc
hlt
jle
outsl
xor
mov
add
scas
shrl
pop
dec
mov
sub
jecxz
dec
jle
xchg
mov
xchg
dec
aam
mov
jbe
push
in
pop
aam
int3
mov
mov
inc
sbb
pop
test
nop
mov
mov
lcall
out
test
aaa
dec
sbb
dec
add
movups
xchg
sarb
shll
xor
outsl
sti
and
jmp
repz
lret
xlat
add
xor
jle
push
loopne
fprem
xor
aas
or
dec
mov
data16
popf
inc
pop
js
cmpsl
repnz
inc
or
mov
out
pop
test
mov
test
jge
cli
xchg
lods
movsb
xor
into
pop
test
push
mov
sbb
pop
pop
xchg
lds
adc
push
shrb
das
xchg
cmp
push
mov
ret
outsb
jns
clc
adc
xchg
add
es
stc
and
insl
imul
adc
fistpll
push
das
cmp
iret
mov
sbb
jmp
mov
push
push
je
push
jne
jmp
scas
mov
hlt
add
in
inc
jle
notb
push
mov
sbb
jmp
or
dec
cmp
dec
mov
mov
sarl
icebp
mov
pop
loopne
pop
rdmsr
rcrb
js
int3
leave
movsl
enter
adc
jo
sarb
sbb
cltd
cwtl
xor
or
rcll
lock
ss
push
jne
xlat
jg
je
inc
fs
inc
mov
bound
cld
mov
add
pop
add
sub
addr16
movsb
adc
stc
in
testb
repz
sbb
inc
fildl
sbb
xor
insl
and
inc
sbb
jae
iret
bound
adc
xchg
cli
int3
xchg
or
jno
leave
xor
adc
push
shrb
or
mov
jns
xchg
loopw
int
stc
ret
clc
sti
add
cmp
mov
sti
and
aas
xchg
mov
jno
push
in
sub
mov
inc
or
or
sub
xchg
pop
jmp
mov
in
jp
adc
sub
fnstcw
bnd
pop
sub
push
dec
pop
add
xchg
movsb
push
pop
adc
add
push
xchg
out
sub
jnp
jno
dec
rolb
sbb
sahf
aam
inc
jle
shlb
jbe
mulb
addr16
adc
push
pop
adc
ljmp
filds
mov
inc
notl
ss
adc
mov
test
insl
dec
cs
sub
cmp
or
mov
cmp
mov
cwtl
cmp
and
sub
sbb
add
movsb
scas
fimull
push
fnstcw
imul
out
cmp
dec
cwtl
push
das
lea
cmp
fs
inc
test
loop
incb
and
aam
cmp
ljmp
xchg
cmp
cld
in
lock
add
hlt
fldt
pop
in
and
popa
sbb
fdivrs
in
mov
fwait
and
out
bound
shrb
pop
das
dec
mov
lea
clc
sarb
mov
lods
rcrb
out
ljmp
daa
mov
xchg
or
in
les
fmul
add
mov
in
std
cmp
in
xor
cmp
andl
sub
mov
sbb
jl
xchg
mov
mov
sbb
js
cwtl
cmp
je
into
and
add
xor
cmp
imul
jge
inc
imul
das
ja
sbb
xor
cwtl
or
test
fiaddl
mov
enter
dec
adc
loop
mov
outsb
xor
adc
jnp
sbb
loopne
sub
jo
rcr
clc
mov
stos
rclb
push
jb
jb
inc
not
sarb
lret
popa
or
add
sbb
pop
lds
hlt
scas
fstpl
mov
jmp
out
arpl
iret
sbb
jo
imul
xor
ret
adc
hlt
adc
lods
rorl
jnp
mov
les
sbb
iret
mov
or
test
stc
js
push
mov
test
lods
int3
inc
in
aam
mov
mov
es
movsb
fnstcw
je
pop
lods
pushf
scas
cwtl
js
jecxz
cld
adc
lods
push
aaa
inc
sub
lods
adc
lea
add
mov
dec
push
lods
in
push
jae
mov
outsl
adc
insb
xlat
jae
cmp
mov
in
movsb
daa
fistpll
mov
std
mov
inc
mov
out
mov
inc
add
mov
xor
pop
arpl
shlb
sub
lods
sbb
and
enter
dec
lret
in
dec
xor
jle
inc
nop
into
repz
push
movzwl
rcrb
jmp
cmp
aaa
fsubrl
repnz
stos
js
push
push
pop
inc
or
mov
pop
xor
and
enter
xor
jg
pop
push
mov
out
das
stos
out
push
jg
shrl
paddusb
out
cmpsl
or
or
insb
sbb
mov
fidivl
aam
ljmp
mov
push
xchg
jl
icebp
xchg
popa
mov
daa
sub
jmp
sbb
push
shlb
mov
call
repz
ret
and
pop
mov
ss
scas
movsb
inc
add
out
xchg
es
adc
test
or
lret
outsb
mov
mov
or
push
pop
hlt
or
inc
inc
ss
rorb
sbb
aam
enter
scas
or
je
fcompl
or
cmp
test
sbb
out
add
int3
sub
push
imul
sbb
push
lds
adc
sbb
mov
sub
lret
jnp
fidivl
mov
enter
ret
lcall
push
mov
je
sar
jle
pop
cmp
xor
push
sub
mov
inc
cld
mov
movsb
test
clc
and
dec
movsb
cmp
adc
int
dec
mov
fmul
jno
inc
or
adc
xor
icebp
xlat
and
idivl
pop
add
shlb
js
xor
sbb
mov
ds
aam
xor
sub
pop
xchg
and
lods
lods
and
shll
push
jo
fwait
sub
pushf
adc
test
mov
mov
xor
adc
mov
and
cmpsl
movsb
dec
iret
cmp
rol
notb
loop
ljmp
shl
mov
outsl
adc
sub
fucomip
cmp
jle
fdivp
mov
adcl
mov
in
shl
mov
inc
pslld
ljmp
lods
loopne
mov
jge
ret
lea
enter
inc
sbb
fsubr
inc
cmpsl
or
pop
mov
dec
xchg
mov
push
add
add
cld
or
dec
inc
pop
cmp
jnp
mov
cmpsb
mov
sub
int
gs
jg
rol
cmp
lock
mov
adc
cld
fistpl
je
inc
sbb
rcrb
test
scas
enter
int
pop
lock
jns
fcomps
cmpsb
sbb
nop
add
xor
test
lret
adc
lock
lahf
mov
pop
mov
add
mov
aaa
sub
les
dec
xchg
dec
jnp
jno
xchg
in
daa
adc
mov
or
aaa
xor
sub
sti
mov
xchg
push
inc
sub
mov
js
push
in
sbb
dec
pop
ljmp
inc
or
pop
lods
lcall
xor
push
shrb
insl
xlat
loop
or
cmp
arpl
testl
lods
lds
add
inc
xchg
cmp
dec
jnp
xchg
fsubl
push
std
dec
ja
pop
adc
inc
js
aaa
inc
xchg
cld
loopne
test
int
xor
push
cmp
add
pop
xor
mov
cmp
dec
orl
mov
data16
shrl
stos
outsl
out
lahf
push
ret
dec
repnz
out
mov
nop
xchg
test
sub
jg
jle
or
mov
imul
fsubp
mov
test
or
mov
mov
pop
push
jnp
jo
mov
idivl
jl
jecxz
adc
push
lock
movl
enter
rol
lds
jae
sub
xor
mov
adc
push
sar
mov
pop
push
ljmp
imul
fists
repz
inc
push
mov
mov
insb
mov
outsb
pop
mov
movsb
adc
or
jo
sub
or
mov
jmp
adc
lret
jl
int3
pop
cmp
push
mov
jnp
pop
dec
push
aaa
add
or
jmp
les
pmaxsw
mov
adc
xor
mov
jl
mov
mov
xchg
je
mov
xchg
mov
inc
jl
lds
sbb
test
cs
adc
pop
mov
hlt
dec
mov
lock
repnz
in
and
pop
call
mov
jne
add
sbb
jge
movsb
mov
test
clc
or
sub
mov
into
mov
repz
aaa
cltd
mov
mov
cmpsb
std
sarb
iret
jmp
sti
lock
or
push
jae
mov
cmp
std
and
cwtl
adc
outsb
xchg
xor
and
out
sbb
test
jbe
rcll
or
sarb
sbb
sbb
push
in
lock
loopne
pop
inc
shr
xlat
scas
sub
and
mov
and
inc
aaa
push
xor
adcl
jo
and
inc
lret
nop
imul
jmp
cld
mov
pushf
das
inc
daa
pop
and
adc
lcall
in
jo
sub
sti
xlat
sub
std
scas
jo
std
and
mov
repnz
adc
push
sbb
sbb
xorb
jecxz
dec
and
in
cmpsl
and
int
xchg
in
push
jne
jecxz
fwait
lock
jnp
lahf
loop
pusha
adc
xlat
push
add
xlat
sbb
mov
fstp
xchg
mov
outsb
movsb
repnz
ret
movsb
pusha
and
sti
in
xor
in
enter
xchg
pop
cmp
fstps
xor
xchg
fs
xchg
out
or
adc
sub
and
bound
cmp
ja
mov
xor
pop
sbb
dec
das
xor
outsb
adc
int
adc
shl
jge
xchg
mov
dec
sub
lret
bound
mov
jno
aad
nop
mov
mov
push
inc
add
ror
cmpxchg
lods
add
aas
in
push
mov
and
addl
psubsw
dec
dec
cmpsb
out
bound
mov
js
in
iret
pop
sbb
push
lcall
ss
pop
pop
cmp
xor
dec
popf
and
scas
imul
je
sahf
xchg
dec
jnp
sub
pop
lods
mov
int
test
dec
pusha
shrl
cmp
sbb
outsb
cmpsb
enter
pop
test
aad
jbe
adc
int3
loop
or
xchg
cmp
in
xorb
iret
mov
stc
xor
and
mov
lret
mov
ljmp
add
mov
imul
mov
mov
dec
xor
in
add
test
cmp
aas
jnp
dec
fs
mov
xchg
and
push
mov
sub
popa
sbb
push
xor
mov
inc
inc
and
stos
push
adc
bound
pop
mov
out
sub
test
push
fimull
ljmp
js
adc
jnp
xchg
or
daa
orb
sub
and
nop
mov
out
stc
testb
xchg
sbb
mov
frstor
mov
rcrb
inc
js
call
lock
hlt
daa
je
loopne
in
xchg
adc
cmpsb
outsl
inc
mov
sub
bound
xchg
jg
in
push
ret
ja
imul
cmc
dec
sbbl
push
popf
adc
jnp
fcmovb
add
adc
into
mov
mov
enter
sub
jl
push
push
pop
cmp
scas
push
out
sub
int
jmp
push
iret
sahf
out
add
data16
sbb
jno
cmp
iret
outsl
xchg
gs
adc
test
xor
and
outsl
push
ss
pop
mov
fmulp
inc
loop
sbb
jnp
pop
jle
out
cld
popa
cld
dec
sbb
icebp
mov
sub
cmp
pop
mov
adc
adc
and
leave
lds
add
jns
cmp
cmpsl
and
mov
push
mov
aas
add
jne
push
in
jmp
hlt
icebp
pop
lods
aad
cmp
nop
aam
add
pop
aaa
push
data16
push
shrl
adc
jp
ret
lds
xchg
and
cltd
jp
mov
in
mov
popf
insl
das
xor
lret
xchg
hlt
shlb
leave
mov
dec
fnstcw
dec
out
cmc
testl
or
mov
cmp
call
dec
push
jns
push
adc
or
jbe
into
mov
cmp
cmp
jmp
lret
ds
insl
push
lahf
mov
jns
or
cmp
jbe
dec
shrl
bound
cwtl
sahf
mov
sahf
sub
xor
cmp
inc
cmp
mov
popf
adc
iret
scas
xchg
ds
sub
xor
iret
imul
add
ficomps
add
pop
xchg
sahf
fsubl
int3
ds
rolb
cmpsb
dec
in
adc
mov
fcompl
push
pop
xor
adc
rolb
adc
outsb
arpl
xor
out
push
push
add
adc
cmpsb
loope
test
push
cmp
add
push
rcrb
or
jb
leave
mov
push
shrl
call
xor
data16
fsub
adc
or
ret
in
mov
lds
adc
or
pop
cs
cld
or
xor
dec
incl
stos
int
loopne
mov
add
mov
adc
jg
fcmovnb
adcl
pusha
lods
ret
adc
jp
clc
lock
enter
aam
adc
shlb
jnp
andb
push
jae
and
xor
and
jae
pusha
pop
test
mov
rcrl
gs
cmp
sbb
mov
cmp
and
into
sbb
adc
fisttpl
imul
js
add
mov
subb
lods
xor
fsubrp
or
data16
mov
fisttpl
xlat
xor
sbb
and
pop
mov
dec
test
in
testb
pop
and
jne
cwtl
mov
jmp
mov
xchg
sub
iret
add
mov
sbb
jle
xchg
testb
and
mov
mov
mov
xor
jo
mov
sbb
mov
or
jl
movsl
test
andl
aas
das
frstor
xchg
mov
or
testl
insl
std
pop
cwtl
mov
xor
sub
pushf
inc
es
into
jae
push
or
sub
push
jecxz
fsubrs
adc
xchg
xor
adc
lods
sarb
imull
lret
cmpsb
dec
dec
inc
outsb
jae
js
hlt
adc
pop
push
ret
ds
xchg
rcl
push
sahf
popf
insl
ja
mov
out
movsl
cmp
push
xlat
sti
sub
ds
or
or
dec
lahf
fldenv
es
ljmp
stos
daa
pop
mov
subb
xor
push
loopne
ret
in
addr16
sbb
in
jmp
std
add
push
mov
xor
adc
loopne
and
xchg
jnp
inc
std
xchg
stos
orl
cmp
cmp
or
push
nop
xchg
out
push
mov
lahf
jo
popf
rcrb
fwait
lods
imul
filds
popa
loopne
inc
cwtl
aam
adc
fmul
sarb
ret
ljmp
push
mov
call
cmp
loop
mov
ret
or
lahf
jge
adc
xchg
jmp
push
xor
das
lods
push
roll
lret
aaa
inc
sahf
push
mov
fiaddl
repz
and
mov
dec
xchg
xchg
mov
add
pop
aad
mov
cmpsl
loopne
mov
add
popa
jl
cmp
push
aas
cmp
outsl
lods
lahf
jle
movsb
dec
cmp
jno
lods
cli
lods
je
mov
dec
push
and
cmp
push
pop
add
nop
push
mov
rclb
or
and
je
movsb
mov
cvttps2pi
sahf
xor
loopne
add
xor
mov
test
xchg
add
sbb
lock
sbbl
das
and
xor
push
mov
ja
ret
mov
mov
cld
and
dec
or
loopne
cmp
rclb
sar
inc
sub
push
mov
jne
mov
icebp
push
clc
xor
xchg
out
jne
xor
das
push
cmp
filds
push
pop
or
js
sub
outsl
jo
xor
sub
ss
std
lock
in
and
mov
push
data16
movsb
xor
insb
and
and
push
add
jns
scas
jp
fbld
shl
pop
rcll
shlb
mov
shlb
ret
imul
aam
mov
adc
dec
roll
xchg
adc
push
outsl
dec
and
sub
inc
bound
add
jle
pop
imul
fnsave
cmp
cltd
adc
jae
insl
outsb
jo
or
lods
or
pop
adc
movsb
inc
and
ret
mov
jnp
inc
call
inc
pop
scas
xor
sbb
out
fdivl
std
cmp
popf
mov
nop
mov
out
test
mov
call
int3
cmc
adc
sbb
rorl
rclb
inc
int3
mov
pextrw
popf
add
addps
lods
popa
lcall
sub
pusha
fimull
jge
sub
mov
mov
sub
inc
mov
pop
pop
dec
or
insl
mov
outsl
jno
std
inc
mov
repnz
push
mov
or
fcom
dec
stc
xchg
add
or
xor
mov
mov
shll
das
sub
cltd
and
inc
cmp
sbb
sbb
adc
and
adc
iret
xchg
adc
shlb
popa
nop
xlat
jp
lock
int3
jg
sbb
jmp
push
mov
ss
or
pop
jp
or
pop
rcll
movsb
es
cld
aas
or
adc
hlt
adcb
lock
jbe
insb
hlt
mov
out
ret
jae
push
ljmp
fisubs
data16
pop
lcall
sub
shr
adcb
popw
scas
mov
lret
push
jmp
fcompl
pop
mov
sub
fmull
jns
ljmp
repnz
pusha
jg
jb
cmp
jecxz
pop
xchg
adc
jno
push
fdivl
clc
jmp
sub
inc
ljmp
cli
sub
orb
repz
xchg
dec
es
jmp
adc
or
mov
mov
fdivrl
or
xor
cs
xchg
call
mov
sbb
lock
jnp
rolb
nop
lods
pop
fsub
ficoms
imul
jle
pop
cmp
outsb
or
out
addl
dec
repz
stos
jecxz
jns
sub
jecxz
or
pop
dec
inc
scas
daa
adc
insb
jg
jnp
dec
pop
push
scas
jl
lods
mov
xor
andb
mov
in
dec
jae
sarl
push
xor
loop
jge
cmp
mov
fisubl
mov
add
aam
ja
mov
pop
pop
lds
xchg
lock
xchg
add
pop
movsb
test
cmp
subl
jae
pop
clc
ja
mov
dec
shl
fmull
mov
loopne
jnp
adc
inc
xchg
mov
outsb
push
fimull
mov
jge
push
rorl
nop
xor
or
fnstsw
sti
in
sahf
stos
std
add
fsubrl
fdivs
pop
sub
lods
test
test
enter
arpl
jne
sub
and
pusha
cmp
pop
insb
sub
and
rcr
adc
stc
mov
ret
fyl2x
mov
sti
dec
push
js
data16
pop
mov
push
aaa
rcll
pop
sub
adc
jmp
nop
push
movsb
mov
xor
lods
stc
rolb
rcl
lock
mov
scas
or
mov
jp
imul
scas
or
fsts
divl
arpl
js
sar
lock
mov
push
decb
lock
dec
mov
test
xchg
popa
push
sub
rcrb
jge
shl
and
mov
xlat
cmp
mov
or
jmp
cmp
jl
sub
sbb
dec
mov
lcall
popa
jp
inc
iret
cmpsb
rorl
rcll
pop
pop
push
push
cltd
mov
or
mul
cmpb
mov
push
xchg
jecxz
inc
loopne
ret
insb
ficomps
repnz
aam
add
lock
xor
pusha
les
int3
out
cmp
jns
sub
shrb
cmp
cltd
loopne
inc
pop
sbb
call
shlb
lret
dec
mov
mov
lods
cmp
fisttpl
jb
push
dec
jb
cmpsl
iret
popf
sbb
xor
cmp
cmp
or
movsb
mov
lods
cmp
pusha
jl
hlt
fcompl
jnp
lea
fcoms
notl
jb
jnp
out
clc
or
cmp
jg
cmpsl
in
adc
ret
rcl
aas
inc
pop
pusha
cs
addr16
aaa
mov
sbb
adc
bound
or
mov
mov
mov
frstor
pusha
test
cmp
andb
xchg
sbb
lods
not
push
pop
lods
pop
int3
std
test
rcl
test
inc
xor
jo
mov
or
or
ficomps
mov
pusha
sbb
push
adc
mov
lahf
xor
or
fdivr
xor
scas
jmp
mov
aaa
setns
dec
sub
dec
pop
lock
jnp
test
outsb
sbb
xchg
mov
dec
add
lret
mov
mov
pusha
and
dec
mov
push
addr16
cmp
and
lahf
jle
lahf
pop
dec
jae
fbld
out
addr16
add
pusha
mov
shll
and
mov
scas
adc
aaa
repnz
pusha
push
push
in
adc
jae
lods
vpsubd
jns
cmp
xchg
dec
or
lods
jl
xorl
cld
jmp
in
mov
add
loopne
jmp
mov
fwait
fdivp
jecxz
mov
jnp
lahf
adc
outsb
jae
das
or
mov
cmc
cmp
mov
xor
rclb
xchg
les
ret
lahf
cmp
stos
ja
iret
mov
sahf
mov
adc
icebp
mov
into
push
je
clc
in
lods
xlat
inc
mov
shll
push
ret
xchg
stc
psrlq
mov
cs
mov
or
sub
iret
cmp
int3
xor
xlat
jmp
pop
dec
push
adc
and
jl
or
aad
push
fbstp
ret
mov
ljmp
ror
xlat
jbe
or
ljmp
push
mov
pushf
insl
shrb
lock
adc
ret
jnp
loopne
mov
fsubr
adc
out
sbb
cltd
sub
push
sbb
mov
out
mov
pop
adc
and
sahf
mov
lret
push
movsb
adc
jae
add
les
lods
test
xchg
loopne
adc
ljmp
fists
xor
inc
inc
movsb
aad
test
push
icebp
xor
jbe
push
into
loopne
pop
andl
scas
bnd
sbb
iret
dec
aam
jae
jne
out
push
rol
jns
dec
rcrb
inc
dec
cmpsb
push
adcb
jo
fldt
sub
mov
std
push
imul
nop
inc
iret
jns
movsb
scas
or
sbbb
xchg
icebp
sub
js
or
bound
lret
inc
fwait
ljmp
adc
cmp
cmpsl
and
and
lods
xlat
test
js
lcall
loope
cwtl
sbb
mov
in
xchg
pop
xchg
sub
jae
fildl
xor
adc
jnp
jle
mov
inc
mov
pop
dec
dec
leave
dec
mov
call
xchg
out
in
sbb
mov
cmp
bound
or
push
and
scas
leave
and
xor
ds
push
pop
aaa
or
xchg
pop
mov
subb
cmp
xchg
xor
and
dec
ret
cmc
in
xchg
les
idivb
adc
mov
cmp
pop
call
or
fs
xchg
dec
jbe
fdivrl
mov
out
add
sbb
ret
rorb
dec
push
push
pop
mov
fcomps
or
jle
dec
aas
hlt
sbb
daa
add
scas
sar
sub
jo
sub
ljmp
mov
out
push
bound
mov
dec
xchg
aaa
sti
jmp
ja
or
stos
insl
adc
and
and
mov
insl
rclb
arpl
jbe
sub
insb
or
loopne
push
xlat
and
das
rcl
cmp
sbb
fmuls
andb
jg
mov
iret
stos
jnp
lcall
cwtl
outsl
pop
pop
xor
sub
movl
push
cmc
sar
jo
add
and
std
jle
inc
jecxz
adc
jp
icebp
scas
mov
push
or
adc
dec
sti
or
dec
pop
call
jnp
bound
xchg
les
nop
test
mov
xchg
ret
pop
insb
mov
fisttps
in
add
leave
inc
adc
bound
xchg
sbb
mov
jge
push
xchg
pop
jmp
dec
pusha
rolb
aas
xor
jecxz
clc
outsb
and
jle
xor
movsb
or
ficoms
mov
cmpb
int
pop
out
ljmp
mov
loop
add
test
fcmovnu
xorl
popa
dec
mov
mov
pop
popf
jmp
popa
shr
in
mov
arpl
mov
inc
out
and
jo
movsb
pop
daa
ret
xor
dec
or
xorb
js
adc
or
inc
incb
push
xor
sbb
inc
cmp
xor
sarb
xor
es
aaa
sub
lahf
or
mov
cmp
outsb
hlt
movsb
lods
adc
adc
bound
pop
pop
adc
add
and
lret
xlat
add
pop
shrb
fists
test
mov
mov
rcl
fadd
push
adc
adc
dec
push
pop
jp
bound
stc
addb
xor
shlb
arpl
into
imul
movsb
fucomip
aam
xor
pop
cmpsl
popw
and
push
inc
js
je
cmp
pop
sub
adc
cld
add
sahf
in
xchg
adc
cmpsb
push
inc
in
out
dec
cmp
jmp
sbb
pop
aaa
fcomip
in
je
xor
ds
add
fildll
popa
mov
or
xchg
inc
xchg
mov
mov
rep
mov
out
mov
add
or
into
xchg
andb
inc
push
je
pop
cmp
mov
or
negl
call
stc
xchg
cmc
scas
nop
cmp
xor
adc
pop
jo
mov
push
pusha
sbb
or
mov
mov
nop
pop
sub
jnp
pusha
jmp
push
test
adc
jmp
out
iret
push
jbe
mov
push
ss
pop
jbe
sbb
push
or
inc
pop
cmp
and
sub
pminub
aaa
or
adc
ss
cmpxchg
sub
test
xchg
call
jbe
gs
cmpsl
subb
add
dec
ret
jnp
add
or
and
jo
in
adc
outsb
push
addr16
call
mov
ds
mov
ds
repnz
daa
fnstsw
xchg
cs
jge
jae
cmpb
daa
lret
dec
cmp
addr16
call
pusha
inc
mov
xor
or
sti
adc
xlat
or
mov
xor
push
and
fisttps
push
in
lds
cwtl
jno
in
rcrl
add
mov
jge
sub
repz
je
adc
adcb
sub
negb
lcall
popf
aam
mov
xor
xor
adc
xor
or
add
repnz
pop
nop
pop
pop
popf
sbb
rcr
enter
and
ljmp
adc
or
push
stos
leave
add
xchg
outsl
gs
push
enter
inc
cld
les
movsl
sbbb
jl
xchg
orb
stc
jno
mov
cld
shrl
xchg
xor
shr
imul
fidivrs
mov
cmpsl
dec
xor
iret
mov
xor
pop
pop
hlt
xor
stc
cmp
jg
sub
test
rcrb
and
scas
lds
add
mov
fcoms
jp
into
loop
cli
mov
inc
push
fstl
sbb
shr
int3
mov
pop
aaa
icebp
insl
cmpsb
fldcw
adc
add
mov
fisubrl
inc
xor
mov
divps
stos
add
xor
cs
adc
sti
aad
imul
jb
fbld
lods
dec
daa
out
imul
xorb
out
out
pop
jg
lods
icebp
test
sahf
cmpsl
ror
testb
daa
xchg
ljmp
or
xlat
jecxz
push
and
lds
inc
out
clc
sbb
xor
xchg
mov
divb
repz
xor
push
xor
enter
mov
sbb
sbbl
mov
xchg
aas
popa
das
rorl
or
das
inc
push
adc
pop
mov
or
in
sbb
pop
jl
or
xor
push
in
xlat
fs
inc
mov
jl
jp
dec
fistpll
and
push
push
ret
jbe
mov
in
bound
imul
xchg
jmp
sub
add
jg
int3
sbb
clc
fstpt
aas
pop
jnp
push
arpl
or
ds
int3
movsb
imul
mov
in
aaa
jnp
in
xchg
cmc
jl
or
jae
lahf
test
xchg
in
in
jg
dec
sbb
rorb
stos
popf
incl
mov
lea
xor
js
push
loope
inc
or
mov
lods
jge
fstpl
dec
lret
mov
hlt
adc
pop
jge
push
fstp
shrb
loopne
divl
xchg
cmp
cmp
xor
arpl
or
fdivrs
stc
das
mov
adc
mov
cmp
cmpsl
push
push
movsb
xchg
pop
pop
in
bound
dec
ret
repz
push
shr
divb
cld
in
int3
xor
jle
fucomip
repz
outsl
scas
push
popa
repz
mov
mov
lods
mov
jmp
or
cmp
fidivrs
clc
out
push
xor
sub
and
pop
pop
btc
mov
push
out
out
sbb
pop
lods
fisttpll
pushf
cmp
jo
jnp
iret
aas
add
push
mov
ud1
cmp
mov
dec
aad
push
in
cmp
jge
jae
sub
adc
and
adc
push
push
in
jl
mov
shl
add
mov
mov
add
push
and
orb
clc
fdivl
xor
push
sbb
mov
pop
cmp
cmp
mov
andb
cwtl
lret
scas
enter
popf
cmp
nop
sbb
aaa
cmp
mov
mov
xorl
push
loop
jbe
xor
jb
sbb
inc
mov
jp
xlat
mov
add
stc
mov
xchg
adc
rorb
mov
ror
ss
ljmp
add
hlt
pusha
std
int3
into
and
xchg
dec
xor
push
nop
jmp
xchg
cmp
dec
sahf
in
and
push
xor
pop
jl
aaa
pop
xor
jae
push
add
fidivs
push
xor
xchg
shlb
ficoml
addr16
xchg
clc
mov
sbb
test
pop
sbb
fwait
cmp
repnz
xchg
scas
aad
inc
fldt
pop
cmpsb
pop
fists
pop
pop
sbb
lcall
lods
pop
js
mov
inc
or
mov
xchg
lds
popf
imul
or
xorl
out
shrl
nop
sbb
pop
sbb
xor
lods
cmp
and
loope
or
clc
aam
push
xor
daa
movsb
sti
mov
ret
sti
lods
lret
sti
mov
sbb
scas
ja
popf
aas
push
mov
mov
test
push
fstps
bound
xor
push
fildll
jmp
add
and
cmp
popf
jp
and
mov
mov
je
sub
pusha
adc
insb
pop
mov
jne
pop
mov
adc
push
dec
mov
pop
scas
int3
maskmovq
testl
mov
das
sbb
sbbl
lods
cli
in
xchg
lods
mov
cmp
xor
inc
jns
popf
pop
and
add
mov
lods
fisttps
imul
sub
bnd
or
out
inc
es
adc
mov
mov
xchg
andb
sahf
dec
incb
cs
pusha
pop
movsb
jmp
mov
ret
repz
bound
inc
in
enter
mov
jne
mov
out
popf
push
mov
push
or
push
shlb
lods
pop
aaa
mov
sar
mov
ja
or
repz
sarb
cmp
add
into
add
cmp
pushf
adc
mov
push
add
push
adc
xchg
fs
lret
hlt
jae
fbstp
add
pusha
subl
mov
inc
jnp
and
je
jns
mov
fildll
xor
cmp
dec
xor
movsb
insl
scas
mov
sub
mov
xor
xor
cmp
lea
or
loopne
fsubp
fcmovb
jne
jmp
pusha
enter
aaa
rorb
and
pop
out
shrl
adc
cmpsb
fbstp
jmp
leave
std
popf
int3
sub
imul
xchg
data16
xlat
sahf
or
push
scas
jmp
stos
lret
mov
push
mov
cmp
and
test
mov
add
sub
pop
stos
cmp
sbb
lret
outsb
cld
push
paddusb
out
inc
inc
pushf
mov
xchg
push
mov
loopne
pop
cld
cmp
xchg
cld
dec
mov
repz
lods
out
ljmp
rcrl
pop
into
cmp
rolb
mov
scas
inc
out
jle
iret
je
das
cmp
xchg
inc
add
xchg
fiaddl
push
dec
aam
pushl
shrb
lahf
push
jl
jle
daa
scas
jmp
mov
jnp
sti
es
jbe
xchg
xor
fidivrs
jp
loop
decb
lahf
sbb
xor
pop
in
jmp
divb
icebp
mov
mov
das
movsb
xchg
iret
das
dec
push
mov
call
les
pusha
jmp
inc
in
orb
push
cmp
sahf
or
fptan
mov
popf
sbbl
xchg
add
mov
mov
xchg
jl
outsl
sub
inc
mov
ljmp
idivb
or
lea
pop
xlat
mov
outsl
gs
popa
push
jno
lods
jg
outsl
test
mov
aam
ja
cmp
and
mov
out
mov
ds
repz
rcrb
inc
scas
movsb
lcall
xor
int3
pop
gs
scas
scas
xlat
mov
jp
ljmp
test
clc
test
insl
cmp
dec
or
or
inc
mov
in
movsl
adc
punpckhbw
scas
mov
rcrb
or
notl
sbb
cltd
push
clc
ja
movsl
inc
shrl
adc
adc
xor
je
adc
sbb
cmovp
jg
gs
scas
dec
imul
push
cmp
sub
inc
inc
arpl
xchg
int3
cmp
sbb
aam
push
popf
ss
push
test
mov
popa
inc
in
xchg
push
gs
jecxz
and
rolb
aaa
shlb
jle
fsubl
cmp
inc
sbb
inc
or
cmp
adc
sbb
js
fsubl
jg
mov
inc
fs
inc
cmp
das
shrb
clc
xrelease
xor
jecxz
xchg
pop
mov
out
push
orb
pop
or
aam
rol
add
gs
add
loop
and
jp
ret
xchg
xor
cli
sbb
ljmp
mov
jecxz
push
add
xor
cmp
sbb
mov
push
into
ret
enter
imulb
movsb
fwait
rclb
scas
mov
std
dec
fimull
jns
imull
cs
cltd
adc
xchg
sbb
mov
in
push
add
mov
std
mov
int3
adc
xor
aad
out
fstpt
mov
push
pop
int
mov
imul
jmp
cmp
loopne
test
rol
js
fisttps
mov
add
fadd
loope
jno
das
out
mov
fidivrs
movsb
sub
mov
xor
cmp
inc
jg
mov
lret
lea
push
shlb
stc
adc
iret
loopne
mov
jmp
adc
sub
pop
or
in
push
mov
iret
adc
xor
pop
pop
mov
adc
sbb
pusha
neg
int3
ret
jge
cmp
dec
lret
out
jae
inc
jmp
aad
fstpl
jbe
pop
cmp
jecxz
sbb
aaa
imul
push
cmp
aam
and
hlt
pop
test
dec
ret
or
ret
dec
cmc
int
std
jge
insl
push
and
out
cmp
std
cmc
mov
in
out
test
sti
pusha
and
popf
add
dec
cmp
xor
jbe
adc
jmp
ljmp
sbb
xchg
dec
outsl
jecxz
fidivrl
imulb
xchg
sti
dec
insl
pusha
inc
fisubs
adc
jnp
pop
popa
stos
pop
and
insb
push
dec
mov
mov
mov
add
sahf
xorl
xchg
sub
pop
popf
mov
adc
sbb
push
scas
into
push
push
loopne
mov
xchg
dec
movsb
les
or
int
clc
cmp
sub
iret
jecxz
pop
and
pop
sarb
shlb
call
push
and
push
out
sarl
dec
stos
int3
push
xchg
outsl
loopne
movsb
adc
mov
pop
or
bswap
dec
push
test
sub
xchg
loope
adc
sbb
push
ja
mov
cs
mov
test
mov
imul
fsubrp
jmp
add
mov
mov
pop
inc
xlat
xor
adc
fmull
sbbb
mov
jg,pt
xchg
sbb
dec
xor
dec
je
mov
bound
adc
push
enter
push
and
xor
jp
lods
fsubs
cmp
aam
xor
add
inc
int3
lret
xor
or
add
xchg
sub
rcrl
mov
xchg
ljmp
push
mov
cmpsb
mov
cld
outsl
adc
push
bound
aaa
pop
std
pop
enter
aaa
call
and
cmp
ret
out
and
mov
push
idivb
sbb
pushf
mov
shll
pop
pop
or
sbb
cmp
mov
or
sbb
mov
sarl
fcmovnu
lods
dec
cld
mov
cmpsl
sub
adcb
xor
fisubrl
lcall
loopne
sub
fbstp
aam
stc
xor
lahf
lahf
shrb
out
rcr
pop
push
bound
jns
aaa
leave
pop
lret
add
pop
xor
xor
dec
xor
aad
xchg
adc
jnp
sbb
xor
test
mov
and
mov
mov
lods
ja
mov
add
shlb
mov
mov
dec
mov
nop
jmp
fdivl
out
mov
xchg
pop
and
push
pop
repnz
shlb
aaa
pop
cmc
xor
lods
and
mov
mov
mov
scas
xor
mov
jnp
mov
jl
push
lods
in
lret
xchg
mov
das
loopne
test
inc
leave
enter
add
add
test
rcr
popa
popl
test
ficoms
dec
popa
sub
push
pop
xchg
in
aam
push
in
sbb
imul
jp
dec
outsl
aam
pop
shlb
cmp
mov
xchg
inc
movl
loop
lea
xor
dec
sub
cmp
add
rorl
inc
fimull
mov
inc
sub
ss
push
or
in
xor
pusha
insl
cvtps2pd
and
mov
xchg
inc
fwait
stos
push
lret
movsb
lods
in
push
fsubrs
lods
in
sbb
mov
into
jo
pusha
imul
out
cmp
or
xchg
leave
push
mov
stos
cmp
imul
int
out
xor
cwtl
adc
mov
pop
add
in
adc
mov
or
fbld
jno
shr
or
mov
mov
push
pop
xor
or
or
outsb
ja
fmull
es
hlt
xchg
aaa
jp
movsl
cmp
or
pop
push
lea
testl
mov
xlat
sbb
jmp
lods
xchg
lahf
loop
rolb
cld
mov
or
and
or
inc
shll
jmp
mov
sub
pop
push
sub
inc
rclb
mov
mov
negl
xor
es
xlat
adc
cmp
outsl
in
mov
clc
adc
jno
andb
jge
aad
push
push
int
out
into
sahf
inc
inc
adc
paddsw
int3
dec
add
leave
in
fimuls
popf
adc
sahf
xor
out
xchg
sbb
iret
sub
bnd
xchg
in
ja
movsb
jo
insb
lods
lahf
cmp
sub
arpl
mov
mov
js
repz
mov
add
in
cmp
push
fs
push
fadds
addr16
vmwrite
popa
cmpsl
addr16
fiaddl
ja
add
mov
pop
mov
das
lea
test
xor
clc
xor
aaa
mov
cmpl
pusha
sub
cmpsb
scas
adc
iret
xor
push
repz
aad
jmp
push
or
push
mov
or
imulb
dec
aam
pop
shr
sbb
add
pop
test
shr
iret
lods
xor
rorb
jmp
lods
cmp
sahf
inc
mov
sbb
ret
sub
into
and
sbb
mov
fildll
push
jnp
add
inc
jb
pop
out
xlat
mov
jae
push
add
iret
jecxz
and
dec
xchg
cmp
fsubl
lods
int
aas
lret
jmp
mov
add
in
jno
and
push
sbb
add
and
xor
push
xor
imul
outsl
lret
mov
add
or
ror
notl
ss
ss
add
stos
mov
cmp
push
adc
inc
je
xor
pop
adcb
mov
lret
cmp
out
lret
repz
clc
je
sti
in
or
fiadds
out
xor
jbe
orb
movsl
adc
and
and
xor
cmp
jo
fsubrl
pusha
inc
xorb
fcmovnbe
icebp
ror
and
or
lahf
out
or
xor
or
inc
push
popa
fcompl
adc
dec
call
loopne
adc
add
dec
push
mov
sahf
and
add
aaa
pusha
nop
clc
ret
xchg
popf
js
dec
jp
mov
and
aad
aas
adc
xlat
cmp
fistpl
lods
pop
sub
and
icebp
mov
sbb
mov
out
mov
mov
sub
sahf
dec
cmp
mov
aam
pop
mov
idivb
cmp
popf
sub
imul
ljmp
aam
lea
sbb
bound
push
jae
dec
sbb
sbb
jge
mov
xchg
mov
cmp
jecxz
loop
cmp
mov
mov
xlat
push
mov
iret
shrb
std
ljmp
and
cmp
xchg
add
mov
loop
stc
addr16
mov
divb
xchg
sbb
adc
enter
xor
xchg
xlat
push
rol
cmp
cmp
das
or
nop
iret
mov
jo
test
sbb
push
and
divl
sarb
xchg
and
cmp
nop
add
xchg
mov
dec
sub
jo
xchg
popf
mov
pop
and
xchg
mov
adc
cmp
or
clc
test
adc
and
adc
mov
jnp
xor
or
bound
cmp
ja
pusha
sbb
dec
and
lods
xchg
add
rcl
fisttpll
or
mov
cmp
nop
sub
insb
stos
xbegin
mov
xchg
sub
repnz
test
in
sbb
fbld
xchg
movsl
adc
push
pop
ljmp
movsb
insl
mov
lods
and
cmp
outsb
dec
out
lret
mov
lods
das
pop
inc
mov
and
lods
inc
adc
xchg
push
clc
mov
dec
ja
fs
outsl
aam
jmp
sbb
lods
xor
sar
cmp
jecxz
dec
and
mov
dec
outsl
ret
bound
cmp
jg
addb
mov
mov
cmp
into
jg
mov
int
pop
and
dec
out
pusha
jbe
fcoml
ljmp
or
mov
stc
xor
cmp
sub
jmp
imul
movsl
mov
out
mov
sbb
mov
ljmp
jnp
add
sub
jmp
sub
std
pop
add
dec
addr16
int3
mov
mov
imul
loopne
cmp
fnsave
popa
mov
fs
cmp
pushf
mov
jnp
in
out
add
leave
push
insb
outsl
sbb
add
pop
sbb
pop
incb
rorl
out
mov
insb
addr16
jo
subb
pop
in
sub
sub
mov
movsb
std
push
mov
add
insb
sahf
in
ss
and
ret
jbe
outsl
xor
pusha
ljmp
bound
popw
push
loop
pop
dec
out
sbbl
outsb
mov
sbb
jns
mov
js
xchg
dec
mov
inc
aaa
pop
inc
icebp
mov
add
inc
xor
xor
jg
jae
sub
int3
jne
aam
ret
mov
outsb
orb
jmp
aad
push
scas
mov
jnp
hlt
loopne
jmp
mov
dec
sahf
adc
les
ja
notl
add
test
pop
bound
xor
outsl
ficoms
movsb
and
cltd
test
pop
mov
xchg
and
dec
fidivs
add
jle
mov
mov
enter
pop
int3
adc
mov
cld
notl
dec
lods
into
inc
push
scas
jle
xchg
in
sbb
scas
adc
pop
xlat
inc
shlb
aad
movsb
sub
or
stos
ds
push
pop
rolb
inc
push
adc
jmp
cmpsb
call
in
mov
mov
mov
dec
and
rcrb
xlat
xor
push
adc
js
push
aaa
and
pop
inc
loopne
xor
or
sti
sbb
popf
inc
pop
out
movsb
mov
sub
addb
sub
daa
xor
rorl
cld
jae
orl
jle
mov
pop
mov
cmpsb
outsl
loopne
or
pop
mov
mov
shlb
testb
int
inc
dec
cs
imul
mov
call
sub
cmp
shll
cmp
js
xchg
add
in
pusha
out
and
lods
cltd
mov
pop
sub
mov
xchg
inc
sbb
dec
mov
lahf
dec
jae
scas
adcb
sbbl
out
int
fdivrl
movsb
mov
bound
pop
mov
cld
jl
lock
insb
mov
into
adc
inc
rcrl
inc
adc
cmpsb
imul
sti
add
idivb
scas
shlb
imul
repz
addb
in
mov
nop
scas
mov
cmp
rclb
mov
leave
cmp
jno
aam
adc
sbb
inc
mov
mov
sub
cmp
inc
idivl
xchg
mov
cld
movsb
loope
call
mov
or
faddl
std
inc
shll
or
inc
sbb
jp
sub
xor
sbb
scas
xor
sbb
sarb
call
mov
mov
push
fstpl
cld
dec
jecxz
mov
xor
js
sub
je
in
or
lea
jnp
int
mov
testl
test
sub
scas
dec
dec
mov
sbb
or
jne
rcrb
loop
mov
cmp
leave
add
push
out
adc
pop
insb
icebp
xor
xchg
nop
dec
loop
testb
movsb
cmpsb
js
insl
popf
push
xchg
sbb
sub
je
outsb
mov
mov
enter
push
xchg
pop
mov
sub
es
les
push
adcl
clc
pop
cmp
pop
xchg
test
xchg
jo
mov
push
insb
or
pop
jl
ljmp
stos
adc
mov
jp
jns
in
dec
sub
call
mov
addr16
jecxz
sbb
sub
sbb
inc
jge
call
arpl
xchg
loopne
loop
adc
mov
cmpsb
pushl
lahf
push
scas
jle
pop
call
pusha
adc
rcl
clc
jmp
fcomp
cs
push
fcoms
sbb
cmp
xor
out
or
int3
ret
test
dec
je
push
jmp
cmc
xorl
xchg
addb
jae
insl
pop
es
aas
jecxz
cmpsb
in
push
push
inc
bound
inc
lods
movsl
xchg
jle
test
es
jo
les
insb
test
inc
pop
clc
dec
out
pop
stos
push
cmp
mov
pop
insb
inc
push
jecxz
ljmp
cmc
scas
xchg
in
cld
js
loopne
pop
or
mov
mov
mov
aam
fwait
shrl
push
push
mov
clc
int
pop
in
out
jg
jmp
pop
lahf
adc
in
adc
push
pop
sbb
fadd
fstpt
mov
add
mov
xchg
outsb
cmp
in
fsubrl
cld
or
xor
xchg
mov
imul
dec
test
add
sub
sahf
dec
call
loopne
jnp
or
add
cmp
mov
in
pop
mov
cmpsl
in
jle
xor
sub
int3
out
movsl
pop
daa
dec
out
xchg
leave
nop
pusha
popl
fisubrl
fldl
dec
adc
in
lds
or
dec
dec
or
adc
movb
pop
sbb
add
out
cmp
in
js
xchg
mov
insb
int
out
in
xchg
push
xlat
jp
movsb
lret
push
jle
add
mov
push
push
inc
sarb
cs
xlat
mov
icebp
mov
lods
imul
mov
in
cmpsb
mov
mov
adc
or
aaa
add
sub
pushf
cld
mov
pmaxsw
pop
int
push
mov
hlt
sbb
rcrb
rorb
fwait
xor
fcoms
jmp
pop
ljmp
addb
and
mov
or
mov
xor
clc
scas
jg
xor
and
mov
push
pop
and
pusha
or
jle
mov
jo
jl
in
push
imul
sbb
mov
call
inc
cmc
aaa
add
iret
loop
mov
ret
cmp
xchg
out
adc
enter
loopne
xor
loop
push
popa
je
xchg
adc
shlb
enter
inc
cwtl
xor
js
in
leave
in
sbb
rcr
push
outsl
cltd
ror
cwtl
jbe
shrb
or
cmc
adc
adc
sbb
jne
ret
add
mov
xchg
xor
sarl
push
dec
mov
mov
or
mov
mov
les
imul
lds
ficompl
test
push
xorl
push
xchg
xchg
jne
inc
inc
sbb
stc
add
push
ljmp
repz
imul
rorb
dec
lds
cmp
movb
adc
repnz
push
mov
popf
jge
test
mov
xor
fstl
and
jle
lods
bound
in
aas
fildl
rcrb
pop
mov
add
add
rorl
rolb
inc
jmp
mov
fmull
xchg
add
xchg
call
icebp
pop
cmp
sub
fs
in
rdmsr
daa
adc
lret
dec
pop
gs
test
idivb
popf
and
jae
loop
sarb
sarb
mov
data16
std
fnstsw
lea
push
jmp
mov
pop
dec
xlat
loopne
ds
insl
enter
int
sbb
xor
xchg
and
sbb
lock
lea
in
jnp
imull
xor
jp
cs
lods
loop
pop
adc
scas
ja
ret
test
sbb
cmp
in
bswap
pusha
pop
outsb
mov
lock
or
clc
bswap
jns
sarb
es
cmp
jmp
scas
add
addr16
inc
sub
addl
add
push
mov
outsb
fmull
fildll
pop
sbb
sub
push
pop
movsb
inc
xor
call
push
std
call
pusha
inc
repnz
rorl
mov
jmp
lea
add
mov
ss
or
xchg
cmpsb
cmpsl
dec
shr
into
adc
lahf
jecxz
sbb
sbb
movsb
rorb
inc
pop
sub
scas
lret
dec
xchg
lods
mov
orb
mov
insl
add
fcmovu
jmp
nop
jmp
adc
mov
mov
bound
fdivrl
divl
ror
mov
ret
cmp
fcomps
lahf
popa
push
jbe
imul
mov
inc
fdivp
xor
imul
idiv
insb
adc
sahf
hlt
shr
xor
lcall
fdivrl
mov
int3
xchg
fldt
cmp
push
xchg
mov
pop
aam
int
add
dec
lods
push
sub
inc
ret
inc
add
sub
jg
andb
lods
adc
pop
cmpsb
jne
cld
or
push
sbb
xor
mov
fwait
xchg
pop
or
js
shrl
push
mov
mov
loopne
lea
call
packsswb
nop
or
add
cli
jge
push
rolb
lods
lods
sbb
ss
scas
filds
out
movsl
call
mov
sbb
mov
dec
pusha
lcall
hlt
mov
push
and
and
daa
lods
test
mov
jne
ljmp
jl
sti
inc
jno
pop
push
mov
push
pop
xor
in
pop
movsb
cmpsb
mov
dec
rol
cmp
mov
jle
pusha
roll
sbb
push
enter
mov
jp
sbb
push
pop
and
call
outsl
lds
inc
iret
or
lcall
sarb
dec
lods
or
insl
mull
adc
rcrl
clc
pusha
test
add
xchg
or
int3
jmp
roll
jne
or
xor
movsb
popf
push
fsubr
dec
pusha
movsb
and
shlb
adc
jg
les
xor
adcb
out
scas
hlt
xor
ljmp
xor
int3
xchg
test
insl
dec
ja
out
and
xchg
in
lds
pop
pop
adc
jnp
inc
and
cmp
outsl
sbb
pop
jae
cltd
sub
xchg
mov
adc
adc
cmp
stos
mov
xor
mov
adcl
cmc
xlat
ds
cmp
pushf
repz
or
out
hlt
sti
mov
sub
cs
enter
sub
or
rcrl
pop
fs
cmp
sbb
jge
adc
clc
enter
dec
cmp
mov
push
ss
add
add
xor
js
pusha
add
xor
fwait
aas
add
mov
adc
inc
mov
push
xbegin
pop
loop
test
cmp
js
repz
call
push
sarb
outsl
imul
mov
push
and
popf
add
andb
aad
test
subb
fwait
push
loopne
cltd
sbb
into
xchg
popfw
xor
int
adc
xchg
mov
push
jl
mov
dec
fistl
jo
mov
add
push
xor
insb
ljmp
shrl
push
and
xor
or
or
push
sbb
fcoms
outsl
aaa
pop
pop
dec
int3
add
into
or
pop
pop
sub
aas
ss
dec
push
and
and
das
fndisi(8087
loopne
ret
pop
adcl
pusha
push
dec
add
xchg
pop
divb
loope
clc
aad
pop
out
nop
sbb
fs
ljmp
xchg
cmp
daa
adc
inc
popf
sbb
jo
pop
lods
push
jo
mov
lret
cmp
pop
dec
test
nop
out
add
enter
adc
cmp
aas
clc
movsl
and
call
mov
js
and
ret
dec
adc
out
and
lahf
push
inc
lret
pop
push
jp
mov
mov
das
ss
stc
fs
ds
sub
mov
xor
insb
or
pop
push
scas
lret
movsb
push
sbb
scas
scas
push
out
add
divb
in
cpuid
mov
pop
push
daa
call
stc
sub
xchg
js
enter
call
loopne
aam
pop
xor
pop
cmpsl
push
pmaxub
loopne
insl
test
and
aam
xor
fistpl
push
scas
dec
xchg
jbe
outsb
fistl
and
dec
dec
cmp
cmp
pop
mov
mov
cmp
fcmovu
enter
xorl
add
and
outsb
out
cmp
mov
fs
pop
negb
aaa
popf
adc
xlat
shlb
push
pop
xchg
movsb
or
daa
cmp
data16
or
dec
jae
out
sbbb
seto
adc
xor
or
xor
jae
sbb
xchg
dec
push
mov
push
sarl
adc
leave
ja
sbb
fnstsw
xchg
xchg
aaa
xor
mov
fs
add
jp
popf
and
cmpsb
imul
adc
mov
movsb
repz
add
jecxz
iret
sbb
push
push
xor
sahf
cmpsl
syscall
aaa
inc
xchg
mov
fiaddl
jo
cmp
dec
jle
xlat
inc
test
xor
scas
jecxz
rol
mov
jl
cmpsl
shlb
xlat
fbld
iret
sub
fdivr
push
mov
in
fcoms
in
jecxz
and
into
jmp
xor
sbb
mov
add
jno
cs
stos
or
and
add
imul
mov
adc
pusha
dec
pop
push
aam
or
jecxz
fimull
fisttpl
je
push
and
lods
out
insl
jle
xor
in
jno
std
mov
aaa
out
xchg
or
sub
loope
sub
push
and
movsb
mov
outsb
enter
add
jnp
bound
cmpsl
adc
adc
ror
das
inc
inc
aad
sub
push
xor
mov
xor
mov
cmpb
adc
pop
aad
push
mov
adc
xor
mov
mov
inc
stos
outsb
movsl
ljmp
fcoml
mov
sbb
pop
loopne
pop
xorb
aaa
test
xor
hlt
add
lods
or
xor
mov
xchg
lds
das
aas
cwtl
adcb
or
cmc
and
sbb
mov
lret
popf
push
lahf
and
xor
data16
test
icebp
dec
dec
mov
lods
cs
pusha
add
call
lcall
popf
adc
pop
pop
add
clc
mov
repz
adc
addr16
outsl
jns
lret
mov
push
in
mov
call
adc
daa
adc
jp
dec
push
inc
loopne
sub
adc
dec
mov
into
dec
loope
lods
in
lds
lods
rolb
dec
xor
into
xchg
out
lods
dec
shrb
sar
fadds
popf
pop
and
cmpsb
stc
movsl
mov
imul
ret
pop
out
out
les
inc
xchg
sbb
scas
popa
mov
lahf
ret
aad
mov
cltd
push
insl
add
lods
aaa
adc
cmpb
mov
mov
xchg
jae
imulb
add
hlt
push
mov
add
inc
lahf
lock
and
inc
and
aas
ficoms
jo
mov
jae
or
mov
aaa
leave
and
mov
idivl
loopne
cmp
inc
mov
mov
xor
mov
jmp
sbb
cmp
imul
sub
mov
rcll
jae
jle
stc
push
mov
xor
iret
stc
mov
dec
cld
pop
outsl
mulb
stc
mov
pop
push
xchg
and
call
xlat
sub
jecxz
ret
xchg
pop
int3
jnp
cmpb
cmp
inc
movsb
in
push
jne
mov
dec
or
movsb
adc
stos
iret
ret
je
sub
into
aaa
fdivrl
fisubl
sbb
mov
test
std
jae
add
cmpsl
lods
mov
inc
stos
sub
jge
and
add
test
push
add
movsb
xchg
insb
shlb
mov
mov
inc
xor
jo
mov
call
jae
inc
inc
jle
xchg
mov
mov
in
int3
mov
cmp
out
jl
xchg
testl
loopne
and
jnp
and
mov
lret
ror
js
push
cmpb
push
jecxz
pop
add
cmp
cmp
fstp
xchg
pop
das
std
mov
out
xchg
sbb
add
push
aaa
gs
rolb
mov
mov
dec
jo
in
loop
mov
mov
sub
xor
sbb
call
ret
enter
mov
movsl
jo
mov
cmp
mov
orb
inc
loopne
push
lds
or
mov
rorl
or
pop
shrb
sub
jp
mov
or
shll
pop
mov
cmp
dec
subl
iret
mov
sbb
in
add
mov
es
fistps
pop
xlat
push
mov
das
ret
js
or
inc
or
xchg
and
adc
xor
pop
jbe
icebp
into
sbb
cmpsl
mov
pop
pop
js
cmc
cmp
sbb
add
dec
or
imul
arpl
add
jno
add
jmp
je
cmp
fildl
das
fldcw
lods
call
add
xchg
sub
or
subb
xor
xchg
int3
jo
fcmovne
pop
outsb
mov
mov
scas
dec
xchg
mov
and
mov
mov
push
fwait
out
aam
dec
movsb
arpl
pop
fdivrp
aam
in
scas
enter
aam
lock
pop
aas
mov
pop
mov
xor
out
loopne
and
imul
dec
pop
ret
mov
aaa
dec
fadd
pop
xor
or
nop
push
gs
sub
in
fcompl
je
push
fists
inc
pop
pop
bound
adc
xor
mov
xchg
jmp
popf
adc
outsl
inc
push
mov
repz
mov
inc
adcb
and
push
cmc
xor
and
xlat
mov
aam
push
orb
fisttpll
adc
enter
sahf
lahf
sbb
or
inc
and
out
and
jae
fs
xchg
pusha
mov
push
jle,pt
ret
pop
xchg
ss
dec
lods
mov
jmp
add
or
cmp
push
aam
fnstsw
xchg
shr
and
mull
or
lock
mov
in
pop
mov
fs
cmp
add
call
in
or
sub
mov
clc
addb
push
loop
sbb
push
sub
int
lret
and
sub
pop
sbb
leave
pop
mov
jle
addr16
mov
push
pushf
adc
hlt
fsts
pop
sub
jae
bound
js
sbbb
in
mov
out
mov
fcmovnu
push
jmp
mov
outsl
pop
das
dec
cmpsb
sub
call
popa
movsb
jl
scas
mov
mov
hlt
jnp
test
pop
and
sbb
call
pop
scas
or
mov
mov
dec
cli
into
int3
stc
adc
ret
andl
in
sbb
daa
lahf
test
das
xor
pop
sbbb
mov
push
xor
mov
sub
push
insb
push
or
xor
aam
inc
cmp
and
into
insl
mull
fistpll
xchg
or
loopne
jbe
mov
fists
xor
dec
and
fs
ja
mov
lea
mov
insl
test
or
mov
lods
dec
jns
in
mov
rcll
inc
pop
mov
mov
xor
orb
lods
popf
or
movsl
pop
flds
pusha
xchg
xchg
or
mov
adc
lret
push
inc
adc
pusha
outsb
sti
mov
xchg
xchg
aam
bound
lret
mov
jmp
jbe
das
and
and
aas
mov
inc
in
stos
mov
repz
les
fwait
xchg
std
leave
in
ljmp
aam
jnp
push
jnp
jecxz
push
daa
in
xchg
sub
mov
cmp
int
lods
in
mov
xor
xor
push
mov
xor
orl
ljmp
pushf
sub
leave
hlt
wrmsr
or
lock
pop
sub
mov
xor
xor
into
je
inc
test
mov
jge
adc
cmp
cli
pop
dec
jnp
push
sub
jmp
adc
sub
sub
sar
sbb
rorl
ret
in
scas
inc
mov
es
fstpl
and
rcrb
pop
fadd
jle
ljmp
cmp
shl
shlb
dec
daa
movsb
outsb
push
jp
inc
mov
mov
outsl
mov
ror
lods
mov
sbb
call
or
int3
repz
xor
mov
jmp
add
jecxz
das
insl
hlt
dec
js
int3
cmpsl
adc
mov
xor
push
or
jns
std
sahf
mov
icebp
jmp
mov
insl
ret
dec
inc
mov
xor
mov
xchg
movsl
pop
imul
pusha
jmp
push
sbb
rcr
jnp
movsl
scas
cmp
jmp
push
popf
adc
mov
les
adc
fisubs
lock
call
enter
sub
out
bound
mov
ljmp
mov
mov
je
xor
sub
mov
mov
shll
in
xor
js
sbb
jb
in
paddw
popl
aaa
sbbl
dec
jg
and
int3
jnp
mov
pop
dec
jno
dec
mov
sbb
mov
xor
sahf
ja,pt
xchg
das
jo
in
xor
loop
add
xchg
mov
fisubrl
dec
pop
and
arpl
cld
js
and
adc
xor
faddl
fldl
mov
mov
dec
push
je
cwtl
mov
ret
fistpl
hlt
jge
push
outsb
enter
or
lcall
sub
fmull
xchg
rcrb
adc
in
mov
loopne
test
das
and
out
fistl
in
mull
jmp
cmp
rcr
adcl
pop
push
divb
out
addr16
xor
pop
sarb
pop
push
xor
or
mov
ret
loopne
out
int
adc
rolb
outsb
push
iret
sbb
mov
jle
das
sahf
mov
push
mov
mov
std
mov
cwtl
mov
loope
xchg
pusha
icebp
sub
xor
out
xor
std
into
call
scas
jno
mov
js
jns
test
int
je
movsb
dec
pop
jp
add
xchg
data16
je
rorb
fildll
jnp
xorb
aam
pop
call
push
push
mov
inc
mov
mov
jo
or
das
aas
mov
adc
mov
mov
sti
or
add
push
repz
pop
mov
sub
push
xor
adc
cld
or
xchg
cmp
loopne
xchg
test
mov
mov
bound
jae
aas
cltd
enter
mov
mov
pop
push
lock
repz
in
insl
lock
push
adc
pusha
jecxz
fsubl
sti
sbb
jb
pop
fimuls
btcl
incl
jnp
mov
xchg
mov
mov
pop
add
daa
jmp
push
out
jecxz
pusha
adc
dec
push
in
cmp
xor
outsb
daa
mov
pop
xchg
aam
add
ror
call
cmp
fwait
jo
and
sub
push
add
aaa
dec
xchg
cmpsb
in
push
jae
mov
mov
sub
sbb
sub
xchg
adc
push
push
mov
adc
es
inc
sub
push
xchg
xor
and
push
fnstcw
pop
and
add
adc
jo
popf
pop
outsb
in
push
inc
sub
inc
lahf
popa
inc
test
sbb
push
aaa
pop
cmp
mov
mov
inc
dec
cmp
cmc
movsb
pop
sti
mov
int3
nop
sbb
out
xchg
xor
mull
repz
mov
into
inc
or
ja
fldcw
jge
scas
out
aam
data16
xor
adc
adc
push
aaa
cli
mov
les
cmp
or
bound
jg
lods
clc
pop
test
out
jno
call
inc
sub
sbb
and
shrl
enter
cmp
decb
sbb
mov
pushf
mov
loope
dec
roll
inc
rcrb
cld
inc
xlat
xchg
xor
mov
insb
hlt
insb
mov
int
arpl
add
mov
inc
adcl
loopne
rorb
dec
js
adc
lret
dec
dec
cmp
and
cmp
lds
jecxz
pop
int
int
mov
imul
cld
nop
lds
xchg
jnp
sbb
push
js
mov
cli
adc
mov
dec
inc
lods
sbb
push
push
pop
dec
mov
out
scas
fs
mov
cmp
or
xchg
int
shll
pop
sbb
push
and
inc
or
push
push
cmp
hlt
ss
jbe
mov
decb
dec
cmp
sub
clc
xor
sarl
mov
in
xchg
call
ret
jg
fcoms
add
sbb
stos
iret
or
mov
loopne
add
clc
sbb
cmc
push
add
aam
sar
pusha
ret
aam
mov
jnp
call
imul
iret
fcoms
cltd
loope
mov
jmp
nop
pop
faddl
xchg
pop
mov
add
das
mov
pop
aam
cs
in
inc
sbb
mov
mov
out
ss
aas
xor
mov
repz
adc
push
jno
movsb
inc
and
add
cmp
mov
das
and
pusha
xor
subl
xor
mov
je
xor
jmp
dec
pop
inc
out
pusha
mov
mov
dec
push
jnp
mov
inc
inc
pop
cmp
xlat
mov
xor
jmp
shr
jb
push
dec
leave
and
notl
fidivs
sub
xchg
mov
mov
je
xchg
orl
loop
jno
insb
or
pop
mov
and
loopne
aaa
push
popa
or
mov
leave
xlat
mov
sbbb
and
inc
ds
xchg
xchg
push
and
mov
adc
dec
les
mov
xchg
pusha
dec
dec
push
and
xor
xor
pop
mov
mov
xlat
cmp
xor
mov
clc
icebp
mov
into
jne
cmpsb
movsb
inc
sbb
fidivs
and
xor
jne,pt
mov
xor
cmpsl
test
lods
cld
daa
xorps
sub
sbb
and
mov
mov
out
adc
filds
in
push
and
cmp
dec
bound
ret
mov
cmc
ror
adc
inc
iret
jmp
mov
sub
pop
decb
fs
pop
mov
pop
je
ss
cli
movsb
neg
out
cli
xchg
jo
sbb
pop
repnz
outsl
fisttps
mov
ljmp
bswap
xor
or
out
xor
mov
push
or
xchg
out
cmp
movsl
mov
pop
fisubs
hlt
rcrl
mov
sub
sar
subb
push
jne
sbb
cmp
dec
push
fcomps
sbb
jg
loopne
cltd
insl
xchg
xor
sbb
xor
push
push
mov
popf
cmp
sub
shr
push
xor
adc
int3
lods
leave
out
insb
sbb
movsl
and
int
sti
push
sbb
add
rolb
xchg
sbb
sti
out
cmpsb
jae
push
cmc
xlat
adc
jg
pop
jae
pop
pushf
cmpb
pop
das
mulb
jge
add
jg
pop
addb
popf
icebp
out
ja
fcmovnbe
iret
add
pop
mov
fistps
bound
lods
adc
sub
cmpsl
test
mov
mov
aad
sbb
inc
int3
and
mov
mov
sub
lods
arpl
lock
xor
repz
lcall
adc
out
pushf
inc
jp
add
fdivl
fidivrs
sbb
dec
sbb
jge
shrl
sahf
mov
push
and
sub
sarl
aaa
mov
inc
xchg
or
cmp
imul
repnz
rcrl
scas
dec
aam
xor
or
dec
jmp
xchg
push
ljmp
pop
pop
inc
cld
loop
scas
mov
adc
icebp
das
hlt
ja
scas
shll
dec
xchg
xchg
aaa
mov
daa
xor
jecxz
inc
lds
sahf
xor
pop
and
add
dec
pop
sarb
adc
adc
or
or
and
mov
sbb
jge
sahf
fdivrs
mov
in
mov
cld
fcmovb
scas
jl
mov
mov
sar
xchg
sbb
xchg
in
xchg
mov
movsl
dec
mov
ja
cmpl
ficoms
push
ja
into
or
push
cmp
and
cmpsl
xor
dec
jae
out
pop
clc
and
xor
xchg
dec
jle
arpl
jo
jge
call
push
cmpsl
lea
xchg
sub
adc
std
mov
push
and
xor
xlat
mov
adc
in
shlb
dec
push
pop
jb
cmp
mov
cmp
nop
in
cltd
dec
mov
pop
aad
pop
int
sbb
shrb
nop
mov
leave
push
pushf
mov
icebp
xor
inc
pop
jge
jb
in
in
pop
imul
ud0
cld
fcomip
cmpsl
push
aaa
jecxz
sub
stc
mov
mov
aam
outsl
add
std
adc
mov
lods
cmp
mov
mov
nop
shl
scas
nop
mov
push
push
pop
and
mov
xchg
mov
rclb
leave
clc
ret
pusha
jns
and
pop
pop
and
aam
inc
in
mov
push
in
or
out
xchg
popf
xchg
repnz
mov
cs
lcall
imul
jbe
comiss
cmp
mov
mov
xchg
fisubrs
push
sbb
push
jg
test
pop
jle
jecxz
shlb
clc
adc
fmull
xor
cmpb
and
mov
idiv
sbb
jnp
add
sti
mov
sbb
jecxz
in
mov
sbb
adc
adc
pop
sub
mov
and
add
adc
add
cmp
icebp
push
mov
xor
push
adc
sbb
repz
mov
jb
pop
mov
dec
dec
ret
push
loope
rol
xlat
or
int3
mov
and
push
adc
mov
mov
xor
jmp
pushw
aaa
in
inc
jo
pop
or
stos
push
insb
cmp
iret
push
inc
mov
adc
mov
mov
push
dec
xchg
iret
dec
xchg
cmp
daa
add
pop
cmp
aas
adc
lods
movsb
sbbb
mov
xorb
es
push
and
out
dec
and
pop
test
pop
sbb
xlat
push
shr
cmc
jg
or
pusha
pop
lret
xorl
sbb
nop
xchg
sti
outsl
mov
int
xor
aas
cmp
fwait
orl
lret
cmpsb
lods
add
cld
mov
sbb
std
add
scas
sbb
and
fstps
adc
fistps
or
push
xor
hlt
loopne
decb
inc
loope
dec
test
push
loop
mov
clc
sbb
sub
insl
arpl
fdivrs
pop
movsb
push
loopne
push
enter
into
adc
inc
xor
shll
push
test
dec
xchg
jge
xchg
jecxz
clc
xor
push
sbb
in
rcr
nop
in
rcl
adc
sarb
fildl
in
call
or
gs
nop
into
adc
xchg
call
nop
cmp
dec
pop
movsb
cmpsb
call
adc
adc
xchg
das
seta
mov
mov
dec
and
xor
push
xchg
adc
cld
sub
jae
jecxz
shrb
cli
sbb
jge
push
dec
dec
cmp
cld
jb
sub
call
and
pop
add
push
cmc
push
pop
loop,pt
mov
insb
mov
nop
arpl
push
lock
sub
ret
mov
jl
int3
int3
fistpl
jp
fdivs
mov
int
sub
test
or
sbb
cld
inc
shlb
or
fldenv
adc
and
mov
dec
push
stc
fisubrs
popf
movsb
push
fnstsw
lods
xor
push
lods
or
and
jmp
xchg
jmp
xor
sub
sbb
push
sub
les
adc
js
out
xor
sub
jge
or
xor
pop
aad
into
inc
leave
lock
sub
shlb
pushf
ficoms
pop
clts
pusha
and
lret
dec
fiaddl
add
adc
mov
test
xchg
or
outsl
or
iret
push
in
imul
jge
sub
rorb
clc
push
clc
jnp
les
out
roll
mov
inc
out
and
hlt
daa
sarb
cmp
and
or
inc
jbe
loop
nop
mov
loope
rdtsc
mov
xor
and
out
push
outsl
mov
int3
dec
mov
aas
rcrb
sar
das
sbb
mov
or
mov
call
xchg
sub
aam
pandn
loop
daa
loopne
ds
cmp
lret
aam
or
mov
loopne
in
mov
jecxz
xlat
sarl
lods
sahf
in
add
or
xchg
inc
xchg
or
movsb
pop
aad
andb
xor
fisubs
cmc
enter
mov
dec
movsb
and
jmp
mov
add
lret
inc
push
or
cmpsb
sbb
lret
or
push
pop
pop
or
xor
sti
mov
mov
aad
clc
ds
lods
rcl
xor
sbb
out
jnp
push
jnp
push
adcb
std
pop
push
add
movsw
pop
out
ds
outsb
xor
pop
sub
ret
fdivr
scas
aas
pop
cmp
js
adc
ret
mov
fmull
push
das
push
sbb
pop
into
setl
iret
jmp
xchg
fsubl
stos
mov
sbb
xchg
add
add
cmp
jae
in
iret
loope
pop
pusha
mov
fwait
mov
mov
add
or
sub
outsb
aas
jmp
mov
xor
push
cmpsl
sbb
adc
cmpsl
cmp
hlt
lahf
push
mov
push
push
std
or
das
lock
aad
inc
fistl
cs
rolb
mov
fdivr
inc
mov
rcl
mov
scas
xchg
repz
push
sbb
cmp
cmpb
arpl
nop
adc
xor
pusha
ljmpw
mov
pop
sub
cmp
jmp
daa
lods
data16
push
push
xor
ss
mov
xorb
and
out
sbb
dec
inc
roll
pop
cmp
aad
test
sub
push
outsl
push
out
and
jae
jae
dec
pop
lock
js
out
lock
xor
cld
adc
sub
mov
and
in
mov
out
mov
sbb
lea
into
push
clc
clc
hlt
es
sbb
jne
pop
mov
jp
xor
xchg
repnz
push
dec
adc
imul
pop
dec
xchg
das
dec
jnp
dec
cmp
in
ret
into
xchg
mov
roll
mov
mov
add
sub
sbb
nop
mov
and
jo
jg
add
neg
out
cltd
jns
loope
xchg
inc
ret
test
faddl
push
jbe
pop
and
arpl
cmp
mov
ljmp
fmull
lods
mov
popf
and
xchg
mov
es
rep
mov
movsb
outsb
adc
sarb
mov
and
add
in
aam
hlt
xchg
jge
adc
fsub
jmp
xchg
test
mov
push
leave
pop
out
data16
pop
dec
aas
enter
lret
aam
testb
and
ljmp
or
adc
mov
jnp
xchg
lods
add
cmp
xchg
cmp
or
shll
sub
or
aad
mov
pop
or
sub
add
loop
xlat
mov
mov
inc
in
xchg
cltd
mov
fstl
mov
cmc
xchg
into
aad
mov
out
aam
aaa
sub
rorb
popa
int
lock
and
xchg
mov
dec
xchg
xor
pop
leave
adc
dec
jmp
lods
outsl
fisttpl
sub
ret
xchg
add
sbb
adc
cmp
push
jnp
xchg
rorl
out
jle
ret
pop
scas
pop
mov
repnz
dec
adcl
fsubr
mov
rcr
and
adc
mov
stos
xchg
sbb
adc
xchg
xchg
jnp
iret
ret
xor
call
dec
iret
stos
cmp
sbb
lods
mov
ljmp
sub
dec
aas
pop
js
gs
xor
iret
sub
mov
loopne
xor
in
enter
adc
push
push
mov
mov
pusha
pop
lock
mov
call
mov
push
into
and
mov
xchg
cmp
and
imul
jo
loop
xor
bound
jbe
pop
mov
jns
ficomps
nop
lock
fsubrl
jae
dec
jno
iret
lahf
mov
and
lahf
out
xchg
xor
insb
pusha
pop
aam
add
add
nop
clc
or
mov
jp
inc
fs
hlt
fisttps
xchg
daa
adc
in
jg
mov
test
dec
ja
test
xlat
outsl
jnp
cmp
add
sbb
pop
inc
sub
adc
pand
add
scas
jne
icebp
mov
setg
sarb
sub
push
rcr
sahf
add
lock
loopne
sbb
int3
es
xorl
cmp
aam
inc
arpl
pop
shlb
nop
mov
jbe
call
pop
dec
pushf
imul
mov
shlb
cmpsb
and
clc
nop
pop
aam
xchg
mov
xchg
into
xchg
xchg
dec
and
bound
xchg
movsb
scas
je
mov
mov
ret
insl
fstpl
pop
pop
adc
cltd
mov
stc
adc
jo
sti
dec
jno
or
fbld
aas
dec
xor
sub
push
lcall
icebp
nop
lahf
rorl
sub
jb
unpcklps
popa
fdiv
jno
cmp
enter
adc
ret
xchg
mov
jmp
lds
and
xor
subb
xlat
jg
and
or
aas
shlb
push
xchg
mov
sbb
fimuls
or
sub
xchg
push
xor
push
dec
push
and
inc
push
cmp
inc
xchg
dec
rcll
movl
subl
icebp
aas
adc
test
sbb
pushf
mov
cmp
imul
stc
push
sti
popw
add
in
orl
popa
out
imul
xor
sti
pusha
in
push
sbb
push
out
mov
out
or
jg
aam
fcompl
lock
adc
loope
mov
cmpsb
pop
push
out
test
sub
dec
sbb
outsl
mov
mov
out
xor
xor
daa
dec
aaa
xor
pop
sti
bound
scas
insb
inc
shrb
bound
dec
sbb
fwait
inc
inc
loopne
sbb
rolb
pushl
and
xorb
in
scas
sbb
xchg
push
mov
iret
outsl
pop
int3
mov
lds
mov
int3
sbb
bound
stos
pop
mov
sarb
shr
mov
lods
popa
insl
dec
imull
pusha
mov
xor
jecxz
fs
ss
push
pop
xchg
repz
rcrb
mov
jb
push
xchg
and
mov
and
or
insb
push
or
iret
and
fistpl
lods
inc
cltd
inc
mov
add
fimuls
dec
pushl
push
adc
inc
out
lahf
lods
fidivs
xor
mov
jmp
xchg
aad
or
jl
shll
mov
not
pop
orl
cmp
mov
xchg
and
fcomps
pop
mov
leave
int3
xor
pop
sti
mov
cmpb
and
cltd
scas
aam
orb
pop
push
nop
xchg
add
inc
clc
pop
xchg
add
out
pop
add
pop
pop
adcb
setle
add
nop
push
xorl
inc
pop
movsb
sti
insl
add
jge
mov
out
mov
xchg
enter
inc
xchg
daa
cld
cmp
xchg
and
out
fisubrs
dec
or
sub
add
adc
movsb
xor
xchg
out
jmp
dec
cs
rcll
pusha
xchg
push
movsb
jg
jo
sbb
shrl
int
arpl
roll
push
popa
rorb
cmpsl
iret
outsl
push
in
ss
mov
imul
dec
test
rcrb
sub
dec
xor
outsl
pop
clc
and
scas
mov
pop
add
cmp
dec
lods
mov
lock
imul
sbb
jp
nop
scas
jo
das
stos
test
sbb
adc
pop
les
add
add
int3
pushf
test
mov
xchg
xchg
sbb
repz
jbe
adc
mov
mov
test
cmp
jecxz
test
push
lcall
lea
or
cmp
jmp
mov
jo
jne
jmp
out
jle
mov
test
adcb
call
sub
aaa
into
insb
popf
cmpl
or
sti
push
sub
out
fcoms
cmp
dec
mov
push
mov
mov
outsl
sbb
and
push
jl
loope
cmpb
sbb
mov
pusha
mov
pop
mov
jle
popa
clc
lret
xchg
push
push
movsb
sti
mov
inc
sets
jmp
cmpsl
sbb
and
sub
idivb
mov
int3
filds
jmp
loop
in
xor
add
fwait
mov
loope
das
andb
dec
bound
and
fcomps
mov
and
push
cmpsl
lock
push
adc
pop
fsts
cmpsl
or
sbb
push
jle
aam
add
pusha
adc
jmp
pop
xchg
aad
nop
xorl
add
add
loop
sub
push
cmpsb
pop
gs
cltd
mov
jp
xchg
ljmp
mov
mov
andb
mov
xchg
xor
adc
out
lcall
icebp
inc
mov
std
hlt
dec
cmp
and
and
cltd
mov
js
fisttpl
mov
mov
and
xorl
xor
pusha
jnp
mov
test
in
or
lods
ret
ret
or
fisubrl
pop
cmp
js
xor
mov
shlb
jnp
dec
hlt
push
cld
les
fimuls
jle
push
mov
std
ljmp
cmp
add
push
adc
cmp
xchg
adc
push
mov
data16
pop
mov
das
lock
cmp
inc
sub
and
cmp
into
and
xchg
cmp
mov
aad
rol
adc
imul
add
gs
cmp
fadds
cmp
mov
mov
loop
rorb
xor
data16
mov
adc
lock
jg
stc
pop
cli
je
mov
aaa
mov
pop
mov
and
and
ret
xlat
popf
push
push
incl
cmp
int3
jo
sahf
mov
sbb
inc
test
push
clc
pop
sub
or
rclb
mov
dec
ljmp
cmp
iret
xchg
outsl
push
xor
xor
and
dec
cld
outsb
pop
loope
jns
xor
mov
pop
jge
gs
mov
stos
mov
repz
js
push
jo
sbb
es
andl
inc
push
or
xor
xor
sub
push
cwtl
xor
mov
mov
rorl
mov
xor
ja
test
fstpt
sub
mov
fldenv
lods
mov
xlat
cs
mov
mov
jl
stos
cmp
sbb
mov
lock
dec
imul
inc
pop
data16
jmp
pop
popa
sbb
in
add
sbb
fs
dec
into
xchg
jl
xor
call
xor
mov
add
loopne
jb
xchg
mov
add
cmp
js
sub
push
xor
fldl
xchg
pop
popa
cmc
mov
pop
test
je
xor
push
push
xchg
inc
push
cmpsl
push
mov
dec
cmp
dec
jmp
insl
or
jecxz
push
lock
jno
loopne
cs
out
shll
rol
out
fdivrl
lods
pop
or
mov
lods
fidivl
ss
xor
jl
mov
sarb
sti
add
cmp
inc
dec
xor
pop
or
fwait
and
inc
xchg
cmp
arpl
loope
pop
aad
xchg
dec
cmp
pushl
dec
add
fcom
pop
or
cbtw
ret
xchg
aas
mov
mov
inc
addr16
popf
pop
xor
jnp
push
aaa
xchg
and
mov
mov
jmp
mov
and
mov
in
sarl
lods
rolb
cmpsb
mov
mov
int
repz
call
fidivl
and
sti
mov
cltd
fstpt
rcrb
cmp
jo
or
popa
or
sub
call
arpl
cs
jnp
push
mov
sub
int3
dec
sbb
add
adc
jae
orb
jnp
iret
push
xorb
cwtl
or
ljmp
rclb
fcomps
mov
sbb
inc
mov
ret
in
aad
into
imulb
pop
mov
cmp
pop
dec
les
xchg
das
lods
add
cmpsl
in
adc
mov
into
pop
cmpb
jnp
insl
das
mov
fdivr
push
dec
lods
iret
or
mov
data16
int
or
xchg
or
push
lods
push
jge
aaa
jo
repnz
jo
in
rorb
xchg
aaa
jmp
push
pop
inc
pop
addl
mov
cmp
jne
daa
pop
fsts
das
mov
cmp
shl
xor
cmpb
jmp
cmpsl
testl
cmp
lods
mov
dec
jp
cmp
xchg
adc
pushf
loop
xor
fnstenv
push
sub
out
test
pop
mov
add
xlat
subl
sbb
push
or
pop
aad
je
ror
pop
les
push
ljmp
scas
cld
lods
push
jge
mov
mov
ret
inc
jp
cmpb
in
xor
outsb
mov
and
stos
dec
fstl
shll
push
xor
std
or
adcb
or
inc
movsl
int
cli
pushf
mov
sub
jmp
rcrb
test
mov
divl
std
cs
fninit
test
xor
aas
inc
sbb
adc
mov
nop
and
dec
shll
ds
fnsetpm(287
xor
sbb
out
lret
ljmp
cli
clc
mov
loop
iret
cmc
add
push
js
aaa
jp
hlt
roll
mov
push
subl
jne
ljmp
pusha
outsb
xchg
int3
and
cmp
lea
xor
jae
nop
loopne
movsb
pop
push
call
out
iret
lods
rcll
imul
lods
or
jne
jge
nop
adc
hlt
ficomps
aaa
sti
icebp
bnd
mov
adc
xchg
xchg
mov
shl
clc
xchg
clc
orl
jecxz
pusha
sbb
test
sbb
call
xchg
call
inc
inc
inc
pop
xchg
nop
inc
das
dec
cmp
fidivrl
pop
sub
nop
sbb
repz
mov
roll
negb
iret
cs
and
scas
jle
cmp
daa
rcrb
inc
iret
adc
sub
push
add
xchg
mov
cs
pop
aad
sbb
repnz
adc
imul
rclb
std
insb
mov
repnz
xchg
scas
inc
xchg
cmp
pop
mov
rclb
popf
gs
loop
cli
xchg
adc
xor
mov
xor
pop
mov
lahf
adc
in
adc
cmp
xor
sbb
xorb
bound
or
shll
xor
aaa
inc
or
ret
and
dec
xor
xor
pop
out
inc
js
sbb
adc
mov
scas
loop
adc
dec
lret
push
xchg
pop
inc
mov
xchg
rcll
mov
mov
pop
pop
clc
loop
lahf
loopne
and
leave
and
lods
adc
andb
mov
mov
dec
lods
jnp
cs
sbb
and
or
js
shrl
bound
mov
insl
arpl
cld
aam
add
fsubs
lods
or
xchg
jle
jmp
addb
ds
xor
sub
les
push
mov
mov
lods
xor
dec
pop
jae
xorl
dec
pop
fnstenv
fmul
std
push
mov
les
popf
sub
cwtd
pop
xor
in
mov
jne
ljmp
cltd
jbe
dec
inc
js
das
lret
js
lret
mov
rcrl
mov
into
mov
cmp
fildl
mov
mov
hlt
mov
out
sub
js
dec
lods
mov
dec
sub
mov
add
and
shlb
mov
pop
jno
into
pusha
iret
xchg
adc
sbb
add
adc
sbb
iret
add
js
mov
cmp
dec
pop
add
push
push
les
push
push
cmp
mov
fimull
cmp
push
test
or
outsl
push
leave
in
xlat
repnz
aaa
rcrb
xor
insb
mov
lods
hlt
es
pusha
pop
iret
out
push
pop
pop
in
fsub
mov
push
push
dec
insb
adc
lock
xchg
push
push
mov
cmp
aam
pop
add
les
test
jl
cmp
pop
xchg
adc
sarb
mov
enter
in
stos
fnclex
jo
and
sub
mov
mov
and
out
int3
pop
loope
outsl
mov
push
fildl
sti
cmc
ss
ds
loop
push
and
xchg
lcall
mov
cmp
xor
dec
js
push
xor
mov
push
jno
mov
pop
xchg
mov
je
cmp
fstps
push
inc
scas
push
mov
loop
nop
mov
pop
jmp
aas
and
lock
mov
sbb
pop
mov
and
scas
sub
cmp
adc
inc
aaa
dec
insb
aas
inc
and
ljmp
test
outsb
jmp
loop
pop
fidivs
sbb
jne
in
je
pop
dec
ss
fsubrl
sub
jmp
in
insb
cmpsl
xlat
add
or
xchg
pop
arpl
push
adc
xchg
xchg
mov
and
mov
test
mov
call
hlt
xor
rclb
imul
inc
xor
jl
lods
outsb
sbb
mov
dec
lods
sar
sub
sbb
aas
jge
mov
adc
fisubrl
loopne
push
and
jmp
push
mov
sarl
pushl
loop
loopne
popa
pop
int
or
or
push
int
lods
les
dec
push
mov
pop
dec
test
pop
sub
add
aaa
push
mov
fidivrs
test
sub
inc
in
push
or
jmp
imul
inc
dec
stos
pop
sbb
mov
mov
or
cmpsl
rclb
std
or
aad
ret
adc
lcall
call
scas
sbb
in
negl
iret
repnz
movsb
push
leave
in
cwtl
je
roll
aas
sbb
lods
mov
jecxz
ljmp
push
or
cld
mov
xchg
stos
sahf
dec
subb
jg
das
push
xchg
iret
loopne
mulb
xor
or
sti
add
in
lock
loop
out
mull
xor
mov
jl
cmpsb
add
subl
xor
push
icebp
loop
mov
mov
or
sbb
das
adc
mov
dec
adc
daa
mov
sbb
test
ds
shll
push
pop
mov
lods
fisubs
mov
adc
dec
mov
mov
mov
fistps
iret
inc
iret
mov
mov
xor
sbbb
push
cmp
mov
shlb
in
push
out
xchg
mov
aam
cmpsb
insl
jmp
mov
push
fsubp
fcmovnbe
pop
fcmovnbe
js
ficoml
shlb
mov
out
hlt
lahf
pop
dec
xchg
mov
cmp
loopne
push
sub
ret
ljmp
pop
xor
lods
ficoms
cmp
sbb
stos
xchg
sub
out
stos
inc
bnd
cmpsb
xchg
cs
lods
nop
and
or
out
cmp
aam
lock
cmpsb
mov
pop
shll
dec
mov
or
cs
sub
cmp
int
fdivr
mov
jg
fcmovnbe
adc
scas
dec
inc
inc
out
adcl
sbb
hlt
nop
shll
xchg
xor
sarl
es
inc
test
in
cli
loopne
les
xchg
call
add
fcompl
mov
or
cmp
nop
inc
sbb
in
bound
lahf
movsb
fwait
jnp
push
xchg
or
fmull
pop
lahf
xchg
shlb
ret
lahf
sar
scas
sub
push
sarb
test
inc
and
clc
xlat
sub
xchg
hlt
shll
fistpll
sbb
outsb
mov
cld
and
stc
fisubs
call
icebp
xor
or
adc
leave
fs
mov
mov
xchg
ja
iret
cmp
push
rcll
xor
jge
push
and
jg
movsb
xor
mov
js
sbb
fcoms
mov
xchg
pop
inc
adc
iret
bound
ljmp
imul
int3
mov
jge
or
repz
cmp
adc
mov
aam
xor
cmp
cmp
test
xor
pop
sti
dec
jmp
adc
push
jo
xor
sub
xor
or
aam
je
adc
popa
hlt
cmp
xor
sarb
mov
mov
push
jb
xor
or
iret
dec
xor
push
xchg
xchg
scas
push
das
enter
push
loope
cltd
lods
and
lods
jle
mov
into
loop
out
das
sub
dec
mov
data16
xor
push
orb
adc
std
or
add
dec
mov
push
xchg
ja
stc
ret
inc
adc
ja
pop
popf
push
je
fistpll
js
ljmp
push
cmp
or
insb
loope
mov
in
and
mov
sbb
jbe
aam
push
sti
js
xor
dec
push
imul
loop
inc
mov
orb
sahf
xchg
cmp
or
cld
pop
xchg
in
xchg
pop
iret
sub
mov
push
pop
jne
adc
or
ja
cs
push
jmp
js
sbb
mov
push
icebp
jnp
lods
outsb
xor
loope
add
cmpsb
and
sahf
outsl
aam
push
fildl
push
mov
scas
bound
pop
shrb
repz
pop
mov
ret
daa
mov
mov
push
loop
bound
inc
pop
jge
leave
mov
dec
cmpsb
ret
dec
cmp
cmpsb
cmpl
jbe
call
inc
ds
in
loope
mov
rclb
push
and
outsl
in
es
pop
pop
mov
pop
add
adc
sbb
out
ret
xor
pushl
pop
insb
cmc
mov
sbb
jnp
lret
lock
cmp
je
lahf
jns
ja
sbb
dec
aad
inc
adc
in
adc
adc
sbb
or
pop
outsl
sbb
pop
mov
mov
xchg
cmc
or
push
mov
es
mov
mov
mov
cmp
jge
lahf
in
xchg
pop
mov
mov
fcmovnu
and
lret
pushf
in
loopne
je
or
adc
pop
cld
or
mov
or
add
mov
lods
xor
inc
xor
pop
int
sbb
inc
das
sub
lret
aad
xchg
in
out
bound
popf
push
xchg
sbb
outsb
xor
shlb
mov
pushf
jno
cld
in
push
pop
jb
lret
dec
lea
sbb
shrb
cmp
mov
fistl
call
dec
ds
ret
add
test
lret
or
iret
xor
inc
jecxz
popf
pop
fstl
shl
lock
frstor
push
sub
in
sub
sub
dec
rcl
sbb
mov
mov
cmc
stc
lds
ss
inc
repz
loop
sub
xor
mov
or
push
and
dec
aad
sbb
and
dec
adc
mov
ja
xchg
shlb
or
or
cld
in
cmp
or
sub
jle
cmp
inc
or
hlt
jae
mov
movsb
cs
add
inc
popa
xor
mov
cwtl
out
jp
sbb
in
jnp
mov
adc
adc
xor
and
hlt
jmp
push
dec
pushf
into
lods
and
sbb
stc
xor
rclb
and
push
adc
xchg
cmpb
jns
mov
imul
jecxz
je
call
pop
pushf
xchg
nop
lods
push
and
gs
out
pop
dec
cli
js
rcll
mov
ljmp
xor
gs
hlt
icebp
cmc
fsts
cmp
push
pop
cmpb
sahf
mov
imul
lock
icebp
adcl
mov
fcomps
jae
add
dec
nop
adc
mov
shlb
add
outsb
imul
dec
jae
fbstp
jecxz
mov
cmp
and
lds
fildll
adc
es
mul
sub
clc
mov
xor
mov
push
cmp
pop
das
pop
inc
ds
fidivs
pop
sbb
pushf
xor
xlat
cmp
inc
repz
jne
mov
xor
inc
and
rep
xor
jecxz
push
cmp
dec
shl
mov
js
push
ret
dec
or
mov
cmpsb
xor
ss
ds
ret
rolb
mov
rorl
lods
pusha
sub
lahf
jle
jne
bound
xchg
pusha
dec
xor
pop
dec
dec
pop
push
mov
push
and
fldl
in
pop
or
mov
sub
dec
jbe
cmc
xchg
pop
push
xor
dec
fcmovne
call
xor
xchg
adc
shlb
shrb
pusha
adc
and
pop
inc
sbb
jle
cmp
call
pusha
repz
push
mov
lahf
xchg
jmp
sti
sbb
fcomps
subl
sub
das
fsts
mov
push
dec
rolb
cmp
mov
jo
daa
nop
jnp
rcl
xor
dec
cli
xor
sar
xchg
jl
xchg
pop
mov
ud0
mov
test
repz
jmp
add
mov
push
mov
push
das
sbb
cmp
pop
jle
insl
out
ret
movsl
dec
clc
jnp
xchg
adc
imulb
call
add
inc
js
mov
sub
add
out
loop
adc
icebp
sti
dec
push
aad
in
mov
sub
fbstp
add
sbb
nop
mov
imulb
jne
jmp
xor
loop
inc
mov
rclb
jne
out
or
jge
push
sbb
pop
testl
cmpsb
jmp
fsubrl
adc
and
sbb
pop
cmp
int
jnp
push
jo
sub
call
jle
ret
in
push
add
aaa
jnp
xor
fsubp
add
mov
sub
fcoms
inc
in
xor
das
fisubl
out
sahf
imulb
mov
mov
xchg
lahf
sbb
fwait
dec
xor
scas
mov
mov
pusha
sbb
pop
enter
push
xor
repz
jbe
outsl
shrb
fldlg2
lods
inc
cli
inc
add
in
xchg
dec
mov
xchg
int3
in
in
pop
nop
sbb
lods
in
push
jo
xchg
arpl
and
loop
pop
jns
pop
sbb
or
mov
xchg
mov
movsb
mov
jmp
aam
outsl
or
adcl
inc
add
fisubrl
popa
or
mov
mov
mov
jmp
clc
jnp
inc
shl
lret
scas
fists
push
orb
testl
rcll
cld
adc
fists
cmp
lods
cmp
scas
negb
xor
sub
cs
lret
movsb
cmpsl
xlat
pop
imul
sub
mov
mov
int3
xchg
daa
bound
sarb
sahf
popa
pop
lret
add
inc
popf
xchg
sub
int
imul
les
mov
test
push
mov
cmp
call
out
gs
push
lods
jb
fcomip
fmuls
fst
cmc
mov
jp
sti
popf
sbb
notl
inc
int3
dec
cmp
clc
mov
rorb
push
adc
push
stos
das
xchg
test
scas
out
inc
xchg
jle
and
pusha
cmp
icebp
out
jg
xchg
adc
scas
rolb
mov
jae
dec
sbb
popf
mov
int3
mov
sbb
adc
mov
loopne
xor
or
loop
mov
lods
push
shll
mulb
pop
pusha
mov
cs
aaa
sbb
jle
sub
ret
cltd
pop
das
pop
lods
sub
adc
jno
daa
adc
dec
aas
int
push
jg
sub
sbb
mov
in
dec
js
iret
dec
iret
mov
js
push
adc
and
jo
sti
inc
mov
mov
cmc
mov
popf
mov
jb
mov
dec
sub
jge
ret
jb
mov
xchg
inc
adcl
rcr
daa
adc
mov
inc
and
xchg
or
push
iret
sar
lods
xchg
adc
jo
test
outsl
adc
aad
popl
pushf
or
stc
fcoms
xor
jo,pt
or
or
pop
xchg
test
xor
xchg
out
in
dec
daa
leave
call
icebp
enter
xchg
xchg
das
ds
out
mov
mov
sti
dec
int
xchg
pop
sahf
sbb
adc
pop
or
movsl
adc
pop
andl
jb
push
nop
mov
das
inc
xor
addr16
ret
int3
sarb
adc
jnp
shll
add
subb
jo
in
fninit
nop
mov
sbb
enter
or
pop
mov
xchg
sbb
shrb
jne
loopne
xor
cmp
or
dec
cmp
fidivrl
pop
or
sarb
shlb
mov
dec
faddp
out
pushf
pop
adc
mov
loop
xchg
pop
adc
lcall
push
bound
cmpsb
pop
pop
push
mov
xor
xor
ds
andl
mov
nop
mov
cmp
cwtl
and
push
ja
cmp
mov
or
sub
incl
icebp
push
adc
sbb
shrl
bound
xor
pusha
loopne
roll
sbb
fldt
jb
mov
lret
fwait
xor
je
int
adc
repnz
pop
and
loopne
push
fiaddl
pop
shufps
mov
or
in
scas
sub
mov
leave
mov
adc
xor
jae
mov
push
lock
loope
fimuls
out
adc
jnp
mov
add
clc
xor
scas
test
out
add
pop
ss
adc
rcll
inc
out
push
scas
fsub
aaa
loope
repz
sbb
dec
mov
enter
mov
out
pop
sbbb
scas
incb
outsb
sub
xor
dec
push
pop
add
jbe
je
inc
frstor
rcrl
sbb
push
out
mov
aad
add
inc
dec
push
repz
push
mov
jecxz
outsb
adc
adc
xchg
adc
lds
in
cmp
addb
fiadds
push
mov
mov
out
pop
out
stos
xchg
stos
jge
je
pop
les
aam
fbstp
xchg
cs
xor
arpl
lea
frstor
xor
cmp
cmpsl
push
inc
dec
scas
enter
and
sbb
pop
jnp
sub
push
adc
cmpsl
sbb
imul
mov
inc
dec
push
out
inc
andb
lock
scas
xchg
adc
hlt
xor
adcb
and
jae
addr16
pushf
sbb
gs
xchg
mov
xor
in
addr16
iret
jge
xchg
iret
push
fsubr
add
cmp
insb
pop
xchg
shrb
mov
dec
icebp
fisttpl
mov
mov
ljmp
xor
mov
ss
cs
lods
add
rcr
adc
push
or
sbb
subl
jns
jae
ljmp
mov
and
xchg
xor
lds
rclb
in
adc
popf
sbb
adc
xlat
pop
call
test
mov
loope
dec
pushf
push
pop
clc
cs
and
add
fmul
add
mov
and
cmp
inc
pop
pop
lock
stos
push
mov
adc
push
rclb
dec
mov
mov
inc
sbb
scas
fdivrl
and
mov
clc
xchg
pusha
out
push
aam
mov
push
pop
mov
cmp
pop
mov
jecxz
push
mov
inc
ret
mov
lods
fistps
aad
ret
adc
sbb
and
aas
fidivs
or
fdiv
xor
sarb
jle
in
xchg
push
jmp
roll
adc
ret
dec
test
sbb
ja
pop
int3
adc
mov
or
movsl
outsb
clc
dec
push
xor
and
cmp
push
stc
mov
jnp
jle
mov
ret
inc
xor
negl
xor
inc
add
jle
xor
ret
and
jbe
lret
rcrb
sti
jge
mov
dec
in
scas
ja
add
pop
adc
fstl
mull
xchg
inc
pop
shll
sub
insl
adc
mov
sbb
xchg
iret
mov
rclb
and
sbb
xor
dec
xchg
xchg
fidivrl
ret
dec
jmp
mov
inc
adc
push
xor
adc
cmp
pop
jo
sahf
dec
mov
mov
cmp
fisubl
call
adc
lret
mov
test
push
das
out
cmc
jle
pop
ljmp
inc
leave
adc
mov
push
aam
clc
bound
pop
xor
mov
inc
mov
push
shlb
mov
push
pop
cmp
add
sbb
and
pop
les
mov
add
pop
jb
loop
mov
push
les
pop
jns
popa
push
mov
fcmovnu
popf
or
push
les
imul
out
push
and
nop
push
movsb
test
or
mov
xchg
push
push
loop
mov
mov
out
mov
jecxz
push
push
rcll
shrl
dec
mov
xchg
and
add
mov
loopne
nop
xchg
and
push
mov
xchg
jno
push
nop
scas
pop
sub
or
lea
repz
pop
sbb
jbe
push
and
xchg
scas
cmpsb
dec
orb
lahf
roll
aam
icebp
and
fildll
popf
xor
xor
sbb
rol
cmp
scas
and
cwtl
xor
xor
lods
xor
cmp
in
mov
ds
lods
inc
pop
mov
pop
sbb
adc
iret
mov
call
insb
xor
rclb
and
mov
lahf
mov
add
cmc
divb
test
lods
loopne
aad
push
jmp
add
fimuls
es
out
movsb
nop
out
gs
sub
adc
scas
adc
pop
hlt
xor
js
loope
adc
int3
and
out
fbstp
or
push
pop
nop
insl
cs
or
into
repz
xchg
stos
push
icebp
cwtl
and
xlat
cld
aad
fistl
cs
sbb
and
in
sub
sub
outsl
and
push
lds
shll
push
ret
fs
lods
in
jmp
xchg
das
std
mov
mov
addr16
mov
push
jmp
cmp
dec
fimuls
lds
sbb
mov
adc
jge
dec
decl
jg
jecxz
jae
dec
ret
hlt
lcall
fwait
or
jae
movl
fdivrs
hlt
mov
xor
pop
sahf
push
mov
and
shl
dec
jnp
pusha
xor
mov
popa
pop
ljmp
jge
mov
sub
popf
imul
cmp
dec
in
jmp
sahf
mov
mov
mov
mov
pop
jo
jb
aaa
lret
divl
mov
bound
jb
nop
add
insl
jp
daa
adc
orb
scas
stos
push
pop
xor
pop
repnz
inc
adc
fs
sbb
sbb
cmpsl
insl
add
stc
xor
sbb
fwait
call
pusha
or
jns
jne
add
dec
jmp
dec
inc
or
adc
add
std
mov
jecxz
inc
loopne
pusha
xchg
popf
or
push
mov
cli
and
cmp
imull
imul
dec
sub
push
pop
lea
jp
xlat
adc
pop
xor
stc
in
pop
add
xor
push
push
loope
movsb
mov
mov
loopne
mov
rcrb
clc
sub
outsb
mov
jmp
sub
fidivrs
dec
mov
cmpsb
xor
and
xchg
push
mov
rcrb
xchg
mov
cs
push
add
inc
ljmp
jae
jmp
dec
cmp
aas
adc
loop
loopne
movsb
cmc
out
mov
mov
push
pop
jae
add
add
test
jno
call
fs
ret
cltd
imul
jae
ret
and
sbb
aad
mov
in
sub
and
mov
ja
mov
xor
cmp
shlb
xchg
xor
sub
scas
mov
add
std
mov
mov
iret
mov
mov
out
dec
sarb
neg
push
movsl
jo
rclb
adc
dec
xchg
daa
mov
sub
jb
push
or
push
loopne
ret
xor
stc
fimuls
cmp
bndldx
pop
or
push
and
push
or
fmulp
dec
and
mov
cmp
clc
insb
or
mov
lcall
and
clc
mov
add
scas
pop
push
jg
notl
popa
adc
lock
in
shll
mov
mov
xor
mov
mov
int
test
test
xchg
push
pop
add
push
add
scas
inc
lods
insb
inc
cmp
out
inc
paddusw
fcoml
dec
mov
fstps
rorl
fimuls
mov
iret
insb
jb
stos
mov
mov
ss
out
test
nop
aaa
pop
mov
xlat
adc
pop
test
cwtl
jle
cmp
aaa
pop
pop
adc
cs
dec
nop
mov
test
pusha
jmp
stc
repz
and
std
clc
pop
jne
ret
cmc
ret
add
aas
lods
movsb
sahf
js
inc
and
inc
xor
or
push
mov
stos
xchg
rolb
add
hlt
add
lret
mov
xlat
dec
mov
es
es
shlb
testl
adc
mov
mov
sbb
rcr
pusha
shlb
jo
or
dec
shr
ss
fdivrs
fldenv
stc
int3
adc
adc
mov
nop
xor
push
inc
push
add
inc
scas
and
andb
jge
pop
outsl
loopne
and
cld
xor
cmp
mov
adc
stc
clc
xor
xor
arpl
and
sbb
dec
jle
mov
or
or
notb
push
addl
jecxz
popa
jo
mov
sbb
mov
xor
pop
aad
dec
bswap
adc
mov
stc
push
xchg
and
cmp
into
xchg
pop
sarb
push
dec
and
or
aam
sbb
bound
sbb
sbb
mov
dec
inc
das
cmp
mov
in
enter
jg
or
adc
nop
and
daa
subb
lods
xchg
cmp
adc
bound
adc
pop
nop
cmp
out
adc
or
or
sar
call
jle
lcall
jge
ljmp
add
test
lcall
loop
xchg
gs
sbb
lock
jmp
popf
neg
push
mov
push
loopne
mov
add
mov
loop
or
cmp
push
clc
mov
movsb
mov
cmp
daa
and
cmpsl
lfs
inc
pop
out
jp
arpl
cmp
pop
sub
mov
das
cld
mov
popa
xchg
add
int3
testl
and
fsubrl
rcl
adc
xchg
dec
xchg
inc
push
cmp
cltd
and
rorl
out
mov
jae
mov
add
sub
jg
sub
rcl
cmp
xor
inc
jo
lret
mov
in
xor
rcr
add
outsb
sbb
lret
mov
popf
push
add
jnp
pop
pop
dec
data16
lahf
fildll
sub
shll
sbb
shl
icebp
xchg
jle
dec
xorb
jae
pop
inc
xor
jo
stos
imul
mov
lret
xor
xor
out
scas
test
jae
in
int3
xchg
ss
or
sub
jae
or
int3
add
cmp
int
test
in
dec
inc
jne
jbe
btcl
dec
lods
sbb
fcomps
movsb
sub
int
xchg
cmp
xor
loopne
ret
mov
outsb
and
mov
push
iret
arpl
jmp
ss
jae
aas
sbb
pushw
lahf
popf
adc
xor
pop
jae
cmp
pop
mov
out
push
scas
lcall
and
cmp
iret
inc
ror
scas
aas
pushf
loopne
rcl
push
lods
int
mov
dec
imul
mov
jg
xor
xchg
pop
add
ss
loopne
ja
sbb
push
fbld
sbb
mov
inc
adc
cs
aam
xlat
outsl
cmp
je
and
mov
mov
sarb
cmp
mov
roll
mov
repz
testl
push
ss
xor
scas
stos
xor
sarb
jno
das
fistps
cs
and
xlat
int3
push
shlb
adc
test
xchg
scas
in
subb
dec
gs
shlb
cmpsl
push
stos
inc
pop
jno
cmp
out
popf
loop
out
pop
adc
cmp
loop
int
orb
adcl
data16
push
xchg
xchg
jmp
les
sahf
xchg
in
ret
outsb
cmp
jg
pop
and
cmp
xchg
scas
sub
test
jbe
jno
pop
dec
xchg
test
fs
xchg
push
or
push
mov
add
sbb
xorl
push
stos
stos
jb
mov
vandnps
sbb
cmp
mov
jmp
aas
jle
sub
andb
arpl
rolb
mov
xchg
cmp
sbb
fnstsw
out
mov
lods
je
ret
rcl
and
mov
mov
inc
out
call
xchg
fidivrs
movsb
out
jb
and
js
and
out
dec
xchg
mov
jmp
mov
or
test
sbbb
imull
cmp
lods
js
lea
pop
adc
call
scas
cmp
xchg
ja
cmp
adc
outsb
les
addr16
lods
add
daa
out
mov
insb
leave
mov
pop
jnp
sbb
jmp
insl
xor
jo
daa
into
test
imul
add
lods
cmp
int3
push
jo
test
inc
adcl
pop
sbb
das
push
sub
jl
rcl
notl
add
adc
jae
push
xor
jecxz
es
ss
mov
mov
mov
jmp
push
sub
je
test
fbld
sbb
xor
dec
lret
pushf
push
into
mov
aam
shlb
fs
lods
movsb
js
cwtl
rcr
call
add
dec
dec
rorl
adc
ja
mov
js
and
and
das
out
in
data16
fsubs
xchg
stos
bound
mov
xor
pop
popf
or
adc
rcrb
andb
mov
or
xchg
mov
adc
dec
lods
loope
push
cmp
push
pop
add
mov
sarl
sbbb
jnp
push
mov
mov
push
xor
shrb
or
mov
lahf
mov
aad
jo
ror
adc
mov
testl
mov
sbb
lahf
arpl
pop
sbb
add
push
inc
clc
xor
nop
das
rorb
iret
adc
lret
lods
je
pop
and
jl
sarl
add
loopne
mov
es
shll
loopne
pop
stos
popf
jg
faddl
pop
arpl
jnp
cmp
pop
cmpsl
out
mov
fsubl
lds
lret
cmp
inc
scas
insb
dec
and
in
mov
les
sub
fsts
adc
adc
xor
and
cmp
inc
push
inc
std
mov
jne
push
dec
sbb
nop
push
outsl
sub
or
sub
in
loopne
cmpb
shrl
adc
loopne
movsb
mov
cmpl
mov
jnp
out
pop
cmpsb
pop
test
push
aam
movsb
daa
out
pminub
or
adc
mov
mov
ret
insb
iret
ret
adc
or
lcall
imul
ss
or
repz
pop
pop
jmp
sub
cmp
xchg
sub
into
loopne
scas
mov
int3
sub
inc
loop
mov
ror
lahf
adc
push
rorb
inc
mov
bound
jae
mov
aad
into
inc
or
leave
mov
mov
dec
fnstenv
insl
pop
popa
and
mov
mov
hlt
xchg
push
fdivrs
pop
jne
or
dec
add
adc
or
sarl
out
inc
sarl
dec
inc
mov
sbb
test
outsl
push
xor
js
sub
pusha
roll
inc
nop
adc
pop
mov
sub
mov
xchg
cmpsl
lods
or
xor
push
push
dec
push
mov
das
scas
stos
or
and
mov
lock
xorl
adc
lock
jo
cmp
fnstsw
shl
and
es
mov
mov
mov
push
int3
dec
xchg
fbstp
pop
dec
pop
imul
adc
jecxz
cmp
shrb
mov
shr
cmp
mov
xor
xor
outsl
jo
adc
cmp
or
and
sub
jns
shrb
in
mov
int
repnz
jbe
sbb
outsl
pop
pop
jbe
pushf
les
test
jmp
clc
outsl
lods
xlat
stos
shlb
pop
mov
or
test
mov
pushf
adc
mov
dec
xor
inc
sub
fists
add
sub
push
ret
cmp
mov
add
xor
icebp
cmp
loope
insl
lods
insb
jnp
pusha
cmp
fnstsw
push
scas
leave
leave
inc
dec
mov
sbb
call
mov
jmp
jnp
mov
sbb
fpatan
bound
leave
adc
out
adc
cltd
mov
sti
add
iret
cmp
insb
mov
or
adc
call
imul
push
loope
sub
push
mov
jecxz
and
enter
arpl
sub
cltd
jnp
mov
test
sbb
psubb
fs
dec
int3
leave
add
test
pop
and
cmpsl
xor
sti
lods
mov
mov
insl
pop
movl
adc
fdivrs
mov
in
pop
jne
stc
repnz
enter
adc
jns
icebp
mov
pop
jbe
ljmp
adc
mov
pushf
mov
shlb
pop
ljmp
data16
mov
jle
enter
pop
enter
test
into
pop
cmp
ret
fdivrs
push
out
sub
jp
cmpsl
sub
sarl
sahf
jnp
mov
inc
lds
and
jnp
or
sub
adc
out
sbb
mov
xor
ret
xchg
jns
cwtl
or
aad
adc
movsl
mov
ret
inc
mov
add
push
push
jns
loopne
mov
cmp
into
adc
das
sti
sub
mov
sub
stc
push
sub
ds
je
roll
aad
cmpb
push
or
push
int3
ror
aas
jo
mov
int3
clc
data16
fstps
movsb
cmpl
and
and
rol
or
inc
popf
loop
push
xlat
push
scas
sbb
inc
sub
or
cwtl
and
aad
push
and
aad
shlb
pop
sub
cmp
out
sbb
jmp
enter
cmp
call
pusha
xor
aaa
adc
fdivs
loopnew
out
cmc
or
cmp
push
dec
xor
dec
js
das
sbb
jp
adc
in
ret
dec
lea
mov
lahf
repnz
jl
loopne
mov
pusha
xchg
ret
xchg
mov
pop
pop
mov
sarb
xchg
mov
mov
inc
cld
sbb
xlat
sbb
pop
arpl
jl
mov
test
out
mov
mov
xor
cmp
sti
mov
into
insb
add
ret
jmp
pusha
mov
mov
in
cmp
mov
sti
fs
out
lcall
sub
mov
xlat
inc
call
xor
js
adc
cwtl
adc
add
sbb
insb
xor
fs
rcll
cmc
dec
dec
fwait
movsb
orl
sbb
xor
pop
pop
pop
xchg
xchg
or
subb
leave
out
scas
ret
xchg
addr16
mov
mov
push
mov
or
ret
add
dec
fldcw
sub
das
xchg
jo
sub
test
pop
pushf
arpl
xchg
nop
xchg
cmc
sub
jno
lds
or
mov
sti
sahf
mov
sbb
clc
js
or
lret
or
sbb
sub
jae
add
inc
and
xchg
leave
popl
aaa
cwtl
xor
sbb
lea
inc
adc
xchg
cli
xlat
lock
inc
jmp
repnz
pusha
mov
xlat
mov
call
add
mov
ss
cmpsl
dec
mov
jnp
jo
pop
cmpsl
add
hlt
out
push
jl
pop
jle
mov
xor
push
cmp
mov
out
cmp
mov
and
lods
pop
pop
or
cmp
pushf
mov
mov
jp
push
enter
pop
jbe
add
xchg
mov
das
cs
ja
mov
fdivrs
mov
aaa
adc
push
sti
xchg
jmp
sbb
in
push
int3
enter
into
xor
or
in
ss
sbb
pop
pop
sub
je
mov
mov
inc
mov
cmc
int3
inc
xchg
fsts
pusha
fsubrs
xor
mov
and
stos
rorl
push
mov
sub
and
sbb
repnz
nop
notb
sub
lret
rcrb
sub
pop
pusha
data16
ljmp
adc
and
jnp
pop
leave
dec
xchg
sub
adc
mov
mov
inc
mov
shl
pusha
test
xchg
ljmp
add
jns
dec
shrb
lea
push
xor
out
imull
xor
mov
insb
into
sbb
stc
in
sbb
and
pop
lss
rorb
inc
ss
stc
xor
jge
scas
roll
jmp
out
ds
xchg
loop
fmuls
movsb
mov
imul
lods
nop
pop
iret
dec
inc
push
mov
shlb
or
sti
bound
inc
dec
cmp
and
or
cltd
out
mov
fcomps
jmp
or
imul
mov
cltd
packuswb
cwtl
pop
fucomp
adc
sarb
pop
sub
adc
out
mov
in
aam
lret
push
pop
popf
push
cwtl
in
jo
ja
lret
data16
movsb
sbb
das
nop
dec
xlat
xor
lret
mov
xor
ret
repnz
mov
hlt
or
movsl
lods
jne
sbb
loop
xchg
xor
rcl
fldl
jmp
movsb
fcomps
insl
sti
ror
xchg
mov
leave
push
push
xchg
emms
jl
popf
movl
shll
sarb
fildll
gs
jns
push
lret
mov
lahf
mov
pop
outsl
ret
rcll
inc
mov
cmp
out
testl
xor
nop
shl
inc
mov
imul
push
sbb
and
leave
data16
jnp
pop
sub
xlat
xor
sub
or
out
adcb
in
dec
dec
jo
add
sarb
inc
inc
repz
loopne
and
mov
lahf
push
dec
xor
aas
xor
test
cmpsl
add
mov
cmp
mov
ja
ljmp
iret
hlt
dec
pop
daa
cmp
lret
or
dec
xor
lret
push
sbb
cmp
or
sbb
jnp
repz
fsubrl
jae
jns
aam
push
lcall
hlt
mov
scas
es
xchg
mov
jmp
sub
in
aam
push
dec
mov
mov
enter
dec
xor
sub
jmp
mov
xor
sbb
or
sub
mov
gs
mov
adc
call
add
mov
hlt
adc
sbb
mov
fwait
movsb
jnp
negl
adc
jbe
push
imul
push
rclb
leave
or
pop
xchg
repnz
jge
cwtl
mov
cmovns
sbb
call
xchg
subb
adc
dec
mov
pop
mov
into
pop
jnp
hlt
sub
cmp
out
test
or
out
cmp
jp
adc
push
and
in
stos
add
or
ljmp
xor
cmc
push
jnp
or
sub
pop
mov
and
shll
sub
jae
into
inc
mov
lcall
xchg
scas
std
push
int3
push
push
xchg
sbb
jnp
mov
or
nop
cmp
or
movsl
sbb
cli
xor
cmpsl
sub
rol
mov
sarl
popf
and
lret
lock
ss
or
pop
hlt
jp
scas
clc
or
adc
repz
cmc
add
mov
mov
mov
lea
sub
push
movsl
push
xchg
test
imul
loopne
push
or
push
add
scas
imul
adc
push
bound
xchg
js
fadd
push
call
inc
enter
fists
call
push
push
popf
cmp
adc
dec
and
popf
xor
sti
mov
xchg
mov
js
or
movsb
sbb
aaa
or
imul
or
iret
lods
xchg
cmp
add
mov
jb
icebp
ret
pop
jmp
xor
out
sbb
xor
mov
bound
vfrczps
jl
fcoml
mov
sbb
sub
dec
pop
mov
add
push
iret
scas
jae
fistl
push
fwait
imul
stc
repz
push
push
push
mov
ret
mov
mov
out
jmp
out
mov
iret
rcrl
test
jb
cmp
jp
aaa
cli
add
pushf
seta
dec
xor
int3
out
out
mov
scas
lcall
mov
and
and
add
call
pop
shlb
and
push
mov
cld
mov
mov
movsl
push
mov
out
fisttpll
std
movsb
mov
mov
data16
fisubrl
imul
jge
or
sbb
inc
not
test
add
or
mov
dec
sub
mov
and
ljmp
jmp
ljmp
int3
cs
in
adc
adc
xchg
pop
and
adc
test
adc
div
lods
mov
mov
js
inc
aad
cltd
or
out
fiaddl
test
adc
movsl
adc
mov
mov
mov
add
lods
imul
mov
ljmp
xchg
xchg
push
data16
xchg
int3
lods
xlat
shlb
xor
cmp
push
push
and
xchg
aam
jg
insb
rcrl
aam
mov
mov
stos
push
push
xlat
push
inc
test
add
jne
push
sti
call
sarb
adc
jecxz
jp
push
sti
sub
mov
out
mov
jnp
bound
lods
ret
pusha
call
lret
inc
cmp
pop
xchg
dec
fnstcw
jae
imul
jecxz
xchg
xor
lcall
es
jne
out
and
gs
cmp
lret
ret
and
mov
out
push
pop
stc
dec
or
push
inc
cmp
and
mov
test
sbb
sbb
and
mov
aam
popf
and
incb
lea
ret
xor
pop
adc
rclb
xchg
jmp
repnz
pop
stc
cs
cmc
push
into
xchg
shl
mov
pop
movsb
in
jp
inc
movsl
dec
inc
pop
adc
scas
xchg
dec
jmp
jbe
mov
je
xor
mov
gs
push
push
into
push
cmp
bound
ja
xor
out
jb
mov
jnp
mov
popf
aad
push
sbb
pop
pop
dec
pop
add
out
mov
stc
mov
ffreep
jo
or
mov
push
fstl
jno
ret
mov
nop
mov
sub
adc
push
mov
push
dec
and
xor
repz
jae
loope
mov
sub
outsl
out
into
cs
pop
jl
int3
jmp
cwtl
cmpsb
cld
in
popf
and
add
xor
stos
sbb
cmpsl
adc
xor
orb
fninit
and
adc
or
xor
cmp
pop
aad
mov
push
dec
js
repz
roll
andb
xor
cmpsl
mov
mov
loopne
loopne
lcall
or
add
cmp
sbb
lahf
jnp
cmpsb
xlat
enter
mov
andl
sahf
cmp
sub
xchg
out
jae
lods
pop
adc
int3
sub
xchg
pop
cwtl
xor
xchg
inc
cmp
and
movsb
add
movsb
into
enter
or
prefetcht0
xchg
jl
dec
out
dec
sbb
pop
scas
mov
push
mov
aam
scas
sbb
rcrl
mov
pop
not
mov
mov
mov
lret
lcall
loopne
xchg
ja
adc
shr
xchg
daa
movsb
push
push
ss
out
mov
and
sar
mov
in
addr16
out
movups
add
sbb
add
orl
adc
bound
cmp
insb
xchg
push
aaa
sbb
int3
push
test
and
in
xor
push
lahf
and
xchg
xchg
dec
pop
jp
aaa
jnp
xor
lods
out
test
pop
jo
mov
scas
push
outsl
test
mov
xor
ja
jbe
rorb
andb
roll
cmp
sbb
clc
lods
xor
jnp
adc
mov
rclb
mov
lods
icebp
sbb
lods
inc
push
fs
xchg
cmp
xor
lret
adc
mov
mov
mov
fwait
scas
push
pop
mov
push
mov
jl
mov
push
push
mov
lods
pop
insb
xor
fs
mov
outsl
pop
out
xchg
cmc
pusha
cmpsl
adc
sbb
mov
adc
loopne
inc
shrl
push
lret
sbb
aas
sbbb
cmpsl
xor
pop
lods
mov
insl
jns
adc
jge
sub
or
andb
add
xor
sub
push
mov
jmp
xchg
jne
dec
lods
pop
lret
ss
mov
cmpsl
sub
pop
shrb
dec
clc
outsb
mov
mov
xlat
lcall
cmp
xbegin
cmp
add
mov
sub
xchg
xchg
jge
xor
fnop
fidivrl
push
iret
ja
mov
adcl
repnz
movsb
ret
cmp
pop
or
clc
sbb
mov
jne
adcl
js
shlb
shlb
inc
das
addr16
cmp
xor
lock
into
mov
jmp
mulb
divl
adc
push
mov
jo
fldt
pop
mov
clc
fcom
movb
test
cld
rcrb
pop
mov
mov
push
dec
xchg
fnstenv
jecxz
mov
mov
xor
add
jno
fwait
shll
pop
insb
sbb
loopne
dec
sarb
iret
xlat
movsb
push
test
and
xor
sub
cmpl
jge
mov
pop
aas
iret
mov
fidivs
dec
push
and
pop
pop
xlat
mov
sbb
aad
pop
xchg
cmpsl
std
cmp
sbb
loope
fwait
jecxz
or
cmc
jmp
lcall
ljmp
xchg
call
notl
mov
or
xor
cld
xor
enter
leave
mov
outsb
ljmp
dec
jae
arpl
push
insl
mov
jnp
and
rcll
das
test
js
in
or
test
inc
in
mov
sti
cmp
and
loope
lcall
jb
dec
mov
arpl
and
sub
xor
dec
mov
sbb
ljmp
mov
imul
inc
mov
xchg
add
insl
scas
xor
in
pop
adc
add
pop
fisubrl
jmp
cmp
loopne
jle
xchg
cmp
pusha
mov
scas
dec
int3
pop
push
adc
mov
sbb
cs
pushl
sbb
add
in
jg
adc
roll
addb
lods
xchg
pop
cmp
aas
in
ficoml
mov
movsb
test
cmp
sbb
ficompl
xor
pop
bound
fnsave
sub
in
out
nop
jge
or
test
loop
mov
xor
push
xor
sub
jnp
insl
mov
mov
loop
popf
stc
scas
dec
cmpsb
dec
pop
sub
into
sub
xchg
sbb
jnp
call
cmc
and
xor
jecxz
into
sub
adc
lret
ret
xchg
loope
pop
call
pop
cltd
pop
pop
add
mov
mov
in
sub
shrb
ljmp
or
fstpt
sub
in
mov
xor
mov
sarb
std
inc
nop
pop
sarb
enter
jo
xor
nop
in
push
mov
dec
xor
adc
xorb
jle
sub
push
add
pop
les
mov
jmp
fcoms
jno
xor
add
insl
xor
dec
aas
out
cmp
or
cltd
sbb
jl
bound
mov
call
pop
insl
sahf
push
cmp
pop
jae
add
and
bound
adc
int3
dec
ret
pop
pop
shlb
subl
mov
mov
mov
lret
xchg
jle
dec
in
nop
hlt
lods
add
mov
sbb
stos
cld
bound
loopne
jle
sbbb
ljmp
in
mov
loop
sbb
or
adc
jnp
xor
in
mov
jne
inc
icebp
pusha
iret
add
shrl
add
xor
jecxz
js
dec
push
cli
fmul
or
and
lcall
xor
jle
push
leave
mov
xchg
sarb
jecxz
addb
dec
fisubs
and
loop
ss
lds
jg
cmp
xor
jno
jmp
xor
ret
rorb
ucomiss
xor
jl
inc
and
fmull
pop
and
icebp
cld
xor
sbb
outsl
or
adc
shlb
cmp
shl
inc
dec
sub
inc
mov
adc
cld
mov
lods
ret
inc
movsb
insl
mov
xchg
xor
lret
cmp
scas
jmp
lret
lcall
test
icebp
jg
xchg
inc
mov
jmp
lcall
fisubrl
sub
sbb
mov
push
ss
mov
andl
xor
adc
adc
stc
mov
cmp
push
add
jge
ja
fdivs
push
add
mov
jmp
or
push
orb
filds
mov
faddl
jo
cmp
aam
loop
and
dec
jge
mov
jl
pop
dec
popf
mov
adc
lret
shrl
dec
ss
cwtl
int3
sub
icebp
rclb
sub
mov
sbb
adc
mov
push
in
loope
push
pop
mov
or
andl
xchg
out
and
lods
sbb
push
push
in
and
adc
test
out
pop
lret
or
xchg
out
or
int
mov
sbb
ret
jbe
test
clc
cmp
or
pusha
mov
fldt
jnp
or
jl
xor
test
push
cltd
cs
negb
jo
xorl
xor
shlb
int3
mov
sti
jmp
mov
scas
imul
stos
cmp
fimuls
inc
shll
scas
dec
jle
ja
xor
xlat
inc
xchg
nop
pop
inc
mov
jl
lods
fsubr
mov
xchg
sbb
xlat
outsb
jno
sub
jo
cmp
lcall
jne
and
mov
mov
push
push
fidivrs
and
ljmp
inc
das
mov
pop
in
insl
sbbb
sbbl
and
lods
pusha
sahf
pop
and
cmp
jae
xor
mov
fsts
scas
xor
int3
repz
repz
lods
sub
aas
mov
or
mov
rolb
mov
in
pop
stc
cmp
aaa
jns
pushf
ficomps
inc
call
mov
add
xor
sbb
mov
mov
or
bts
lods
push
and
ss
xchg
test
cmp
pop
mov
pop
add
xor
jmp
hlt
xchg
decb
mov
cmc
mov
pop
cmc
rcll
push
in
imul
lods
shlb
mov
xchg
xor
out
mov
subl
inc
cmp
out
daa
mov
iret
mov
sub
call
daa
lock
or
outsl
inc
cs
mov
jno
lret
add
xor
int3
mov
cmpsl
out
lods
fs
aas
mov
lgs
bound
imul
rclb
jle
xchg
jecxz
test
fistl
adc
inc
lods
std
xor
test
xlat
jecxz
pusha
out
out
fisttpll
mov
loopne
mov
movsb
or
divb
mov
add
jae
dec
cmp
in
test
into
fwait
mov
xor
dec
dec
popa
add
xor
pop
cmpsb
leave
xor
call
fists
add
adc
mov
bound
xchg
mov
cmp
cmp
mov
jmp
lods
dec
adc
das
lahf
rorl
xor
insb
roll
mov
pop
hlt
mov
jo
imul
clc
lods
sbb
cmp
xor
enter
fdivs
fmul
push
iret
jae
shlb
pop
sbb
call
cld
negl
cmp
jo
out
push
dec
cmc
mov
xor
lock
jns
test
or
push
and
cmp
sub
test
mov
or
cmp
das
fidivrl
pop
lret
xlat
xor
xor
stos
push
pushf
loopne
hlt
les
shlb
push
mov
or
cmp
les
out
out
jl
jmp
or
push
out
sub
mov
loop
pushf
sub
scas
lds
rcrb
inc
mov
jmp
jge
mov
test
and
movsb
jmp
push
mov
insb
out
scas
jle
cmp
mov
mov
dec
stc
movsb
jmp
jg
dec
and
cltd
cmpsl
outsb
cmpsb
lock
mov
and
pop
add
sbb
xor
and
enter
mov
ficomps
dec
pop
daa
pop
ja
icebp
stc
sbb
int
repz
pop
mov
push
xor
xor
movsb
ret
pop
or
add
jmp
cld
jns
add
add
std
dec
lea
lods
call
mov
add
xor
mov
sbbl
mov
sub
cltd
mov
push
aad
push
inc
shlb
arpl
push
jl
or
outsb
push
fdivrl
adc
psrlw
enter
xor
fmul
push
insl
out
xchg
cmp
push
iret
mov
ss
adc
minps
int3
xlat
inc
sbb
xchg
dec
cmp
lock
add
dec
pop
inc
loopne
ljmp
cmp
cmp
jno
sub
cmovl
shr
stos
or
cmp
aam
xchg
xor
ss
enter
cwtl
adc
and
fdivr
rclb
fistl
jb
mov
add
add
jae
jns
sarl
lret
jmp
popa
fs
sbb
call
insb
rorb
pop
insb
xor
and
pop
scas
fcoml
jnp
mov
jns
inc
dec
inc
call
pop
loop
fwait
mov
test
and
scas
mov
mov
jae
lock
lock
scas
scas
loope
sbb
pusha
les
jecxz
in
iret
jbe
insb
addr16
ds
fisttpl
lods
xchg
rclb
loopne
ficoms
das
es
fs
sub
or
or
mov
scas
int
adc
mov
movsb
outsl
orb
incb
addr16
testb
scas
xchg
rol
scas
and
enter
mov
dec
faddl
repnz
fiaddl
loop
adc
pop
dec
xchg
pop
jecxz
ds
mov
outsl
adcb
or
adc
pop
jle
lods
mov
loop
jo
lods
mov
lods
fstps
sub
fimuls
mov
rclb
and
loope
stc
popa
mov
dec
xorb
lcall
mov
scas
jbe
aam
lods
dec
mov
ja
dec
xorb
mov
sbb
arpl
push
imul
mov
add
or
cmpsb
insb
xor
cmp
xlat
shrb
movsl
js
out
mov
orb
lret
sarl
ret
std
test
and
sbb
pusha
rcrl
nop
in
cmp
sub
jne
aaa
xchg
jecxz
pop
pusha
mov
mov
call
mov
sti
dec
arpl
rcll
jns
cmp
xchg
movsb
sti
jnp
xchg
cmp
xor
mov
xor
jo
xor
sub
mov
sub
dec
dec
mov
dec
or
and
pusha
lods
int
pop
in
mov
and
push
test
push
enter
sbb
cmpsl
fdivl
int
scas
stc
xchg
push
pushf
mov
fbstp
pop
movsl
xor
push
iret
hlt
outsl
and
lods
push
pusha
mov
mov
add
hlt
cmpsl
sbb
call
xor
xchg
add
jle
pop
out
mov
and
popf
psubusb
je
mov
int3
ret
pop
iret
nop
push
imul
nop
jnp
loopne
test
adc
cs
cltd
mov
sbb
and
jle
mov
ret
or
and
cmp
sarb
in
cmp
push
cmp
mull
andw
fsubs
pop
pushf
mov
lret
dec
sbbl
inc
sbb
aaa
xchg
nop
lock
in
pop
out
jp
mov
or
inc
in
out
movsb
push
xchg
jo
popf
lods
inc
in
out
cmp
ret
cwtl
adc
xor
aaa
jl
in
adc
fnstenv
jns
clc
sbb
or
enter
rcr
call
jge
sbb
sub
mov
int
xor
jp
movsl
enter
xchg
cmp
cmp
std
mov
mov
push
pusha
or
or
dec
jp
das
jnp
test
mov
sti
lods
in
je
aad
aad
mov
xor
lea
sbb
or
xor
fldl
pop
insl
orl
fst
cltd
pop
rorb
jno
push
and
int3
inc
mov
jp
cwtl
in
xor
aas
pop
dec
pop
lock
mov
enter
sub
jnp
inc
xchg
inc
push
loop
and
in
mov
pop
loopne
push
fcomps
mov
rorb
stos
adcb
sub
mov
mov
cmp
mull
imul
inc
sbb
into
aas
pop
fcoml
mov
ljmp
inc
mov
push
mov
lahf
test
or
shrl
repnz
enter
loop
leave
mov
andl
inc
hlt
xor
mov
pop
xchg
in
addr16
cmpsl
cs
cltd
outsl
push
nop
mov
mov
xor
mov
add
mov
fdivrs
push
je
adc
pop
sub
rcrb
sbb
add
fdivl
mov
movsb
xchg
mov
sbb
mov
cmp
arpl
mov
mov
loope
push
cmp
cs
add
sbb
jp
lods
cmp
jecxz
jl
push
rcrl
test
mov
popa
fisttpll
xlat
sub
mov
test
aaa
cmpl
repz
mov
mov
push
dec
iret
out
paddusb
mov
mov
lea
dec
or
dec
loope
test
loop
nop
and
adc
in
inc
inc
mov
pop
adc
lret
xor
mov
fstpt
scas
faddp
jmp
add
adc
aaa
pusha
push
inc
sbb
and
xchg
push
push
or
or
mov
cs
jo
fisttpl
sahf
and
lods
bound
fs
xchg
aaa
rcll
add
scas
xor
jns
cmp
ss
or
add
jnp
ret
cmp
mov
dec
push
dec
cwtl
jo
cmp
insb
mov
sub
mov
shll
cmpsl
push
add
repz
push
xchg
jl
faddl
aas
nop
loopne
mov
fisttpll
add
and
repz
ja
or
cmp
mov
adc
aaa
jne
inc
xchg
jb
movsb
subl
add
or
pop
subl
rorl
push
add
outsb
movsb
mov
push
std
xchg
hlt
inc
fs
arpl
xchg
adc
pop
or
inc
mov
push
popf
test
pusha
popa
std
adc
sbb
ljmp
xchg
jns
ljmp
into
stos
inc
sbb
int
loopne
pop
add
out
jo
mov
fsubr
insl
cltd
lods
pusha
jecxz
repnz
sub
sub
ljmp
and
sbb
call
adc
mov
inc
lea
xchg
dec
andb
or
jns
sti
addr16
sub
int3
dec
fists
adc
push
pop
pushf
leave
clc
mov
mov
lods
and
cmp
dec
mov
sbb
mov
out
xchg
loopne
push
mov
mov
mov
or
jns
jecxz
xchg
or
int3
lret
xlat
or
rcrb
das
sbb
push
xchg
cmp
subb
mov
nop
add
and
test
jne
popa
dec
sub
mov
mov
mov
push
xchg
scas
scas
stos
mov
pop
sbb
sbb
addl
inc
cmp
ret
lahf
gs
inc
jmp
pop
ja,pt
push
cmc
rorb
mov
iret
mov
adc
movsb
or
cmp
pop
shlb
rol
outsl
mov
rcll
imul
pusha
sub
xor
dec
mov
xor
je
push
loopne
test
sub
push
rorl
push
jnp
andb
fnsave
sub
insl
sbb
pop
adc
das
aam
loop
xlat
int
adc
cs
cmp
push
mov
loope
and
xchg
mov
mov
sbb
fidivrs
ret
dec
mov
pushaw
sahf
mov
pop
mov
cwtl
jmp
add
pop
scas
fcoml
pushf
jnp
mov
cld
outsl
sub
div
bound
push
subl
push
movsl
es
adc
lea
mov
mov
cmpsb
in
jge
data16
mov
mov
push
fbld
mov
xchg
pusha
push
stos
mov
cwtl
mov
mov
adc
sub
cmp
test
adc
popa
push
in
shll
aam
mov
and
push
pushw
or
cmp
loopne
cli
scas
cmp
enter
cmpl
out
movzwl
movb
pop
das
sbb
xor
and
dec
call
add
in
add
and
inc
pop
sub
mov
lods
dec
enter
xchg
add
iret
mov
xchg
push
out
stos
jecxz
aad
pop
pop
jns
jne
ficomps
stos
cmc
das
shlb
dec
push
adc
iret
lods
shl
xor
cmp
je
push
add
std
jae
lock
int3
stc
xor
aas
subb
adc
adc
pop
adc
push
and
mov
or
pop
cmp
ljmp
mov
aaa
fisubrs
in
not
add
in
movsb
fstpl
in
call
xor
data16
and
sbb
xchg
mov
adc
sub
jno
xor
push
ficompl
loop
fmull
xchg
xchg
mov
lods
bound
fwait
popa
sub
pop
mov
imull
cli
popl
out
mov
lds
shrl
mov
pop
lret
lock
and
adc
push
jl
jge
popa
xchg
mull
or
and
pusha
xor
xor
lds
rcll
stos
xor
mov
lcall
mov
sti
sbb
pop
popf
xchg
and
push
out
addb
enter
sbb
and
inc
or
sbb
inc
jns
out
or
dec
cmp
or
cwtl
and
mov
push
jne
leave
ss
mov
xchg
sbb
int3
lret
push
mov
adc
clc
pop
xor
arpl
loop
je
test
dec
push
fnstenv
cmp
add
inc
insb
cmc
push
scas
pop
or
pop
mov
mov
xor
nopl
xor
inc
and
mov
das
cmpsb
xor
lods
ljmp
inc
inc
arpl
dec
sub
mov
iret
mov
sbb
lret
rorl
jo
fdivl
mov
ss
mov
pop
sbb
adc
popa
or
dec
pop
repz
adc
push
dec
in
movsb
and
adc
xchg
jae
add
mov
call
dec
shrb
push
fwait
mov
inc
pop
addr16
pop
adc
outsl
sti
jge
jmp
xchg
loop
pop
lods
call
or
addr16
or
lods
mov
mov
mov
insl
and
cmp
fsubl
inc
sbb
inc
divb
mov
pop
stc
xor
and
mov
or
or
dec
dec
mov
rclb
add
call
ret
xor
cmc
pusha
xchg
jmp
aaa
adc
jle
push
arpl
aam
xor
addl
loopne
es
hlt
ret
cmp
pop
outsl
mov
dec
loope
mov
int
in
xor
sub
jle
lea
pop
fcom
jns
jo
cmp
xor
xor
cmp
and
sbb
dec
loop
leave
mov
sbb
lahf
pusha
xchg
xor
fbld
or
sarl
and
adc
shl
iret
xor
iret
cmp
repnz
pop
mov
adc
lret
insb
cmp
adc
mov
loopne
xchg
xor
xor
push
sti
call
push
movsl
mov
xchg
or
inc
sbb
loopne
int
mov
mov
sub
sbb
push
or
rcrb
bound
push
sub
aaa
adc
movb
gs
outsl
data16
push
add
lods
or
fldl
stos
or
cld
addr16
pop
daa
sti
push
scas
lret
dec
mov
xchg
shl
cmpsl
xor
pop
sbb
jne
jmp
cs
out
fmull
in
xor
lea
call
sahf
ljmp
lea
popa
jmp
inc
aaa
xchg
xchg
scas
inc
cld
and
push
loope
sbb
mov
loope
jg
in
sti
punpckldq
clc
lret
pop
addl
sbb
xchg
sbb
mov
test
scas
cmp
pop
arpl
and
daa
pushf
mov
xor
aam
icebp
scas
stos
sub
xor
xor
and
adc
repz
out
cltd
outsb
mov
aaa
sbb
loopne
cmpw
adc
sti
mov
cld
adc
mov
jecxz
push
add
es
mov
aaa
stc
push
mov
jae
and
cwtl
sbb
cmp
mov
loop
fistpl
jbe
inc
pop
pop
sub
leave
testl
jecxz
test
lods
out
mov
cmp
incl
inc
rolb
xor
xlat
xor
sbb
mov
mov
jle
and
shlb
fdivrs
filds
popa
jae
lds
movsb
rcr
adc
jb
jae
insl
fwait
push
shrl
add
clc
and
out
adcl
fsubs
cmp
inc
ljmp
adc
dec
test
in
sbb
mov
movsl
sbb
fdiv
sub
loop
shll
flds
mov
stos
and
push
test
mov
pop
push
jo
xlat
test
pop
sarl
sbb
inc
or
mov
invd
jae
leave
push
cld
into
adc
cmp
jbe
ljmp
add
leave
jp
inc
sbbb
xchg
enter
xchg
sbbb
testb
pop
mov
cmpsb
cld
inc
and
add
cmp
les
popf
sbb
adc
ja
das
xor
adc
paddq
mov
adc
sub
and
xor
bound
out
enter
or
jmp
dec
xor
push
sbb
sbb
or
jno
pop
loop
xchg
rol
mov
pop
mov
mov
stos
lahf
and
stc
xchg
aam
add
pushl
mov
mov
stos
js
cmc
xchg
jecxz
int3
sbb
mov
iret
loop
fisubrl
sbbl
insb
jle
inc
pop
push
adc
psllw
jae
xor
or
lods
mov
adc
leave
jo
int3
pop
rclb
cmp
pop
sub
mov
push
pop
hlt
mov
mov
movsb
pushf
xchg
aaa
loopne
cltd
pop
clc
inc
lods
jg
push
in
aaa
push
shlb
shll
aas
repnz
sbb
test
dec
pop
push
xchg
popl
pop
shr
and
ret
loop
xor
pop
loopne
pusha
sub
lock
inc
test
adc
pop
cmc
xor
aad
fsubs
add
jno
mov
mov
jg
pushl
imul
fwait
or
mov
push
in
call
mov
aad
mov
mov
adc
adc
clc
pop
mov
sbb
dec
cmp
inc
mov
pop
fsubr
in
gs
dec
pop
mov
fs
sbb
mov
mov
ljmp
in
or
int3
test
jge
adc
sbb
pop
jne
jge
out
call
xor
jge
and
or
inc
sbb
xor
add
or
xor
shrb
xchg
push
jo
xor
xor
jnp
push
mov
or
or
rcl
lock
push
out
mov
mov
push
fnsave
sbb
int3
daa
xor
movsb
sub
or
ja
fsubrl
daa
xchg
dec
iret
jl
push
xor
push
xor
mov
cmpsl
clc
sbb
cmc
push
fstpt
pop
push
pop
jecxz
push
pushf
testl
stc
out
imul
pause
aaa
cli
xchg
aaa
lahf
cmp
jmp
xor
add
test
fbstp
dec
adc
sbb
mov
fwait
lahf
dec
lret
seto
fs
scas
bound
pusha
sub
jge
sbb
rcll
pop
nop
mov
nop
add
lds
scas
shl
adc
push
iret
aas
push
xor
jmp
or
aam
je
mov
nop
sub
les
out
shlb
pop
xchg
lods
sbb
outsl
jae
mov
or
shl
fxch
out
pop
mov
dec
cmp
push
cs
cld
sbb
pop
decl
fs
nop
lock
out
imul
lcall
movsb
dec
push
pop
in
cmp
lea
jo
aad
pop
jge
mov
popf
arpl
std
negb
test
clc
jno
jge
inc
mov
mov
cmp
fistpll
fisubrl
gs
jo
push
sarl
jmp
mov
test
scas
and
dec
jmp
pop
pop
jge
jno
push
movsl
sahf
xchg
sbb
push
xor
and
sbb
mov
and
dec
push
imul
clc
mov
inc
inc
inc
add
movsl
ffree
orb
pusha
cltd
mov
push
shll
xchg
add
lahf
pop
dec
sahf
jl
push
xor
jo
and
jge
fimuls
and
add
ret
pop
cmp
hlt
into
pop
and
nop
popf
mov
dec
and
imul
ret
xor
inc
and
loopne
and
daa
repz
pop
nop
push
mov
jge
sub
mov
mov
xorl
pop
mov
dec
jbe
push
call
scas
jmp
enter
fldt
add
stos
mov
jns
and
data16
pushf
aam
push
mov
push
xchg
add
inc
mov
scas
mov
paddsb
loop
inc
daa
cmp
xor
cmpsb
sahf
or
xor
cmp
aaa
lret
adc
in
mov
jp
call
popaw
xchg
fucomi
imul
lods
cmp
icebp
insl
dec
stos
ljmp
inc
mov
hlt
dec
sub
pop
mov
adc
sbb
ljmp
mov
pusha
das
pushf
shlb
jo
adc
and
add
mov
mov
adc
fistl
notl
cld
add
adc
hlt
movsb
cwtl
scas
cmovo
pusha
pop
sahf
test
or
das
mov
cmp
jns
mov
icebp
rcll
mov
arpl
cmc
or
mov
jb
sbb
loop
mov
ret
sub
cs
sahf
lret
push
aam
mov
xor
fsubs
js
je
shlb
sbb
in
cmp
jmp
inc
out
cmp
xor
xlat
test
into
out
dec
outsb
jle
lods
jecxz
cmp
dec
shlb
out
add
aad
pop
mov
jmp
xchg
pop
inc
xor
les
jge
jecxz
dec
scas
or
xchg
stos
cmp
jo
rorb
iret
shlb
int
js
dec
loopne
popa
push
jl
popf
aam
cmp
push
xor
and
popf
data16
jne
imul
cwtl
call
daa
jp
andb
push
xchg
xchg
ret
jle
xchg
imul
cli
dec
cs
mov
jae
fidivrs
sti
jae
adc
lcall
gs
dec
cmp
sarb
aad
jno
inc
aad
xlat
add
xchg
movsl
int
mov
inc
xor
bound
popa
cmpb
into
mov
or
push
jmp
jnp
cmp
sti
or
ret
cltd
or
sbb
xlat
jmp
movsb
sub
mov
mov
lcall
lea
pop
inc
xchg
pop
cmp
sub
pop
add
outsl
and
lret
les
mov
cmp
popf
mov
dec
mov
xor
mov
add
pop
push
and
jbe
mov
sbb
loopne
dec
pop
dec
cli
jecxz
pop
iret
movsb
ss
sbb
stos
call
lods
lods
das
repz
mov
and
es
ret
shlb
fdivr
imul
outsl
pop
xor
push
and
test
pushf
sub
call
adc
mov
xor
iret
mov
std
dec
in
aad
xchg
mov
rcl
adcl
mov
adc
fmuls
in
das
shll
add
pop
xlat
imul
shl
jns
inc
popf
add
jmp
adc
sub
pop
xor
sbb
ss
rcr
cmc
and
jecxz
pop
push
fstpt
mov
mov
adcb
jns
cmp
adc
sarl
aam
stos
sahf
adc
les
into
push
addb
subl
mov
inc
push
jg
js
xchg
sub
and
addb
lods
iret
fcmovb
into
fimull
mov
orb
stos
pop
test
xchg
scas
std
dec
movsb
inc
push
adc
add
movsl
xor
sub
sub
cs
gs
not
call
xor
cltd
cli
lret
fcom
sub
or
mov
ficompl
xchg
fucomp
adc
xchg
movsl
lods
jne
arpl
inc
pop
repz
fidivs
or
add
sbb
loopne
push
cmp
in
adc
in
sub
das
jmp
push
and
add
xor
sub
aam
pop
jbe
jae
ret
lock
sub
bound
or
fs
jg
mov
cmpsb
inc
notl
je
sahf
into
jmp
call
out
sbb
shlb
mov
mov
inc
xchg
xchg
jl
jb
xchg
loopne
sbb
repz
pop
rolb
push
dec
movsb
fs
adc
das
and
xchg
xor
and
pop
jnp
subl
add
and
mov
in
dec
repnz
dec
mov
cmp
push
daa
fsts
push
pusha
shlb
je
notl
or
inc
mov
arpl
jnp
gs
cmp
cmp
ret
test
hlt
fistpl
in
xor
jb
cmp
and
push
les
mov
sbb
push
adc
xor
pop
inc
call
push
test
in
loope
jno
lods
and
dec
xor
lahf
mov
ss
xchg
rcl
dec
enter
daa
mov
add
mov
mov
addr16
inc
pop
push
inc
cmp
mov
sbb
int
shll
loopne
mov
xchg
jge
imul
movsb
cmp
adcb
and
jnp
jmp
inc
pop
pop
adc
dec
frstor
cmp
sbb
xor
int
add
mov
xor
cmpsb
cs
mov
xor
sub
lods
std
int
adc
ficoms
jnp
push
inc
lods
movsl
fdivs
jae
add
sub
add
loopne
and
fisttps
fnstenv
mov
push
leave
adc
jge
sbb
and
and
iret
xchg
scas
and
in
xchg
mov
xor
adc
lea
mov
pop
adc
xchg
add
xchg
int3
push
clc
imul
aaa
and
xchg
and
mov
inc
cmp
jmp
and
xor
jecxz
jnp
shlb
adc
int3
fildl
sub
ffree
xor
rcll
mov
sar
and
dec
adc
sub
insl
jmp
and
and
out
scas
sub
scas
sbb
cwtl
mov
scas
fildll
imul
aam
nop
push
clc
daa
arpl
les
fisubl
pop
sbb
mov
xor
add
cmovno
lret
lods
pusha
fistpl
pop
aaa
mov
jl
dec
xchg
test
inc
xor
pushf
pop
or
and
lods
cwtl
xlat
fdivrl
sub
aaa
jmp
jo
add
adc
xor
and
and
pop
sti
out
push
dec
das
insb
mov
mov
adc
lret
inc
imul
out
adc
jnp
pop
mov
ljmp
push
mov
call
das
dec
sub
gs
xchg
jg
add
mov
cmp
pop
sbbb
push
sbb
jl
xor
push
mov
push
in
sbb
mov
pop
fldt
pop
mov
inc
jmp
pop
dec
mov
cmp
pop
push
aas
pop
adc
call
xor
jbe
ljmp
and
xchg
dec
fidivrs
in
scas
stc
fidivl
add
add
sub
mov
and
pop
dec
enter
and
xchg
jb
rorb
or
into
std
xlat
dec
fstl
or
std
inc
std
cmp
sarb
xor
sbb
pop
fsubrl
and
xor
in
mov
and
jmp
add
or
adc
cmp
sbb
daa
sub
add
mov
lods
clc
dec
add
bound
rclb
iret
aaa
das
mov
xchg
sbb
shrl
das
mov
jns
xor
ja
pandn
inc
cld
hlt
mov
movsb
sbb
sbbl
add
frstor
int
fcomi
adc
rorl
jne
mov
mov
dec
mov
fimull
in
cs
ret
dec
jmp
sbbb
sahf
je
test
jnp
pop
xor
push
repnz
dec
and
dec
arpl
push
iret
mov
fldt
push
outsb
aam
ss
pop
pushl
cmp
mov
push
aam
pushf
fwait
mov
or
sbbl
adc
mov
mov
mov
sbb
cld
xor
setne
jg
pop
out
jge
dec
mov
fiaddl
mov
add
push
mov
lahf
inc
add
jns
xchg
jns
addr16
rcrb
movsl
sub
sub
push
test
dec
shll
sbb
test
fcmovnu
or
jecxz
movsb
pop
push
out
cld
iret
ret
mov
mov
mov
xchg
xlat
movsb
mov
incb
xchg
pop
add
adc
lea
pop
jae
xchg
cltd
pop
lods
push
lret
cmp
jmp
mov
add
movsl
jae
jbe
push
std
cmp
lret
sarb
lods
aaa
scas
mov
mov
dec
rorb
test
push
in
mov
shll
rorl
push
add
ret
into
adc
sbb
and
adc
pop
fsubrs
mov
dec
gs
add
out
out
int3
or
mov
jg
stc
mov
ret
pop
mov
leave
pop
mov
jmp
mov
push
lds
outsl
pop
mov
int3
imul
xchg
or
orl
xor
or
mov
test
add
into
push
jo
insl
aam
xchg
test
fmull
inc
in
lret
lcall
mov
mov
pop
add
inc
movsl
jbe
xchg
movsb
sub
jo
push
out
dec
pop
push
push
inc
sbb
js
xor
lock
push
rcrl
das
mov
xchg
out
shl
shrb
and
ljmp
loop
andb
mov
fmul
or
cmpsl
adc
je
leave
xlat
xor
nop
shll
lods
inc
fdivrl
bnd
loop
fwait
push
ret
dec
nop
pop
cmc
mov
loopne
xchg
fdivrs
pop
mov
inc
call
ror
add
push
sbb
sti
push
sarb
insb
iret
jae
hlt
mov
push
es
popa
sbb
sahf
stos
mov
dec
and
insb
xchg
leave
pop
jle
outsb
sbb
test
les
add
pusha
aam
jmp
daa
icebp
jbe
orb
sbb
mov
fisubrs
call
and
jle
andl
sbb
leave
sub
mov
je
xchg
lock
pop
push
das
inc
outsl
aad
dec
push
scas
mov
xchg
push
and
int
lret
popf
mov
inc
xchg
aam
popf
xchg
push
inc
push
shrb
add
add
je
push
sahf
mov
xchg
mov
or
sbbb
call
jmp
lods
sbb
iret
jo
outsb
das
cmp
icebp
push
push
xchg
sbbl
cltd
mov
mov
fildll
cmpl
sub
dec
dec
xchg
mov
add
inc
jmp
movsl
ljmp
sub
ret
push
cmpsl
out
leave
cmp
sbb
sti
sub
lods
ret
and
sar
movsb
pusha
sahf
mov
cmp
cmpsb
dec
jno
outsb
add
sub
adc
fsubl
push
sar
sarb
cs
cmp
pop
add
fistpll
subb
push
lods
ret
loop
sbb
test
xor
enter
shrb
sbb
lods
dec
das
sub
shlb
add
xchg
push
jg
jnp
add
bound
dec
lret
ficoml
jne
rcl
xor
push
jmp
jo,pt
xchg
scas
sub
xor
aam
dec
mov
imul
and
dec
mov
lods
mov
sbbb
mov
je
cwtl
cmp
sub
pop
in
cmp
outsb
ja
adc
xorb
mov
into
xchg
sub
loopne
or
pop
out
insb
or
push
cwtl
scas
lret
lahf
out
lods
mov
mov
jmp
add
pop
cmp
into
rorl
lret
mov
mov
jg
in
push
aas
xor
call
adc
push
lahf
cmp
mov
lcall
and
lods
ljmpw
add
test
pop
sbb
outsb
cmp
mov
es
push
push
or
pop
movsb
cmp
test
out
arpl
pop
adc
jmp
add
xlat
pop
nopl
mov
arpl
je
mov
mov
lahf
and
xor
mov
shll
fldt
jne
bound
subb
pushf
shrb
jne
cwtl
bound
jp
arpl
pop
insb
hlt
pop
push
push
in
orl
je
or
cmp
inc
lods
fdivr
dec
mov
arpl
push
enter
adc
add
adc
orb
pop
enter
xor
loopne
fstpl
mov
pop
pop
xor
lret
inc
mov
xor
xchg
lock
sub
push
pop
pushf
cmp
cmpsl
and
out
jge
sub
aam
sub
xchg
mov
or
cwtl
aad
sbbl
push
scas
cmp
inc
sub
call
xor
jecxz
lods
aad
call
add
lea
jae
jne
and
add
in
in
jecxz
ss
xchg
or
jbe
pop
cmp
cmp
xchg
repz
lds
pop
sub
mov
lahf
sbb
push
iret
dec
jg
test
jbe
xor
pusha
dec
lock
in
cmp
push
cmpsb
loopne
sub
pusha
les
sbb
mov
test
inc
mov
add
cltd
xchg
subl
adc
ja
mov
jo
pop
push
jno
cmpsb
adc
enter
sub
mov
popf
and
fnstenv
enter
out
and
sub
rclb
adc
cmp
cs
and
sbb
and
mov
rcl
lds
scas
and
and
test
movsl
imul
fnstcw
es
cmp
jecxz
stos
rcrb
cmc
add
cmp
push
mov
cmp
test
and
popf
out
fistps
int
xchg
jge
or
jl
orl
aaa
sarb
notl
cmp
adc
mov
shlb
sub
dec
jo
fisubl
loope
dec
xchg
xchg
add
jb
or
push
iret
add
jo
fildl
sbb
add
ret
add
push
mov
mov
jo
adc
pop
mov
adc
adc
rorb
fcomp
dec
mov
mov
aaa
jnp
andl
adc
sub
aam
enter
cmp
loopne
mov
xor
or
fbld
push
fsubr
test
cmp
call
mov
and
add
das
lahf
xorb
std
xor
push
inc
movsb
push
cld
hlt
xor
jbe
sbb
into
push
or
cmp
jge
dec
pop
outsb
outsl
mov
pop
call
cmp
jl
aaa
mov
inc
rolb
mov
inc
test
xchg
rolb
sub
nop
cs
insb
sahf
sub
mov
mov
push
jg
xchg
ret
mov
or
adc
mov
repnz
cmp
and
and
sti
paddq
loopne
dec
mov
cmpsb
and
fcompl
out
dec
stos
jae
push
inc
into
movsb
ret
xchg
ja
adc
sbb
mov
ret
and
dec
out
aad
jmp
mov
jg
cmp
pop
es
aad
jecxz
call
enter
push
fnsave
jg
or
adc
int3
movb
or
shlb
push
cmp
insb
xchg
mov
sbb
mov
call
mov
sti
ljmp
mov
lret
ljmp
adc
xor
stos
adc
in
loopne
adc
and
xchg
icebp
sarl
mov
jg
icebp
fdivrl
cs
es
movsb
hlt
inc
xlat
callw
jle
pop
nop
lret
xchg
addr16
mov
pusha
dec
sahf
hlt
jnp
and
pop
push
mov
jae
ror
push
ss
lods
negb
popa
push
mov
sub
and
inc
push
lods
pop
shrb
push
add
mov
push
inc
xor
mov
mov
lods
das
fstps
ds
iret
je
popa
pop
dec
xor
mov
rorb
fiaddl
bnd
call
repnz
dec
ret
pushf
outsl
mov
push
icebp
cmpsl
std
popf
out
mov
popf
sub
cmp
xchg
les
pusha
pop
ja
push
jnp
add
pop
jecxz
adc
aam
ret
inc
dec
adc
test
cmp
inc
pop
out
in
aaa
mov
test
insl
lret
bound
push
icebp
jle
pushf
mov
idiv
jae
xor
lret
push
mov
fcoms
in
scas
mov
mov
insl
mov
insb
mov
or
mov
mov
addr16
mov
movsb
sub
icebp
and
push
and
xchg
adc
je
lods
pop
jge
lret
push
js
and
shlb
adc
iret
or
mov
sahf
sbb
ret
faddl
ds
clc
rcll
fwait
sti
movsb
outsl
std
lods
fnstenv
xchg
movq
pop
sub
mov
xorb
aas
xor
fists
and
and
shl
jg
nop
mov
inc
mov
jle
add
push
push
bound
imul
jo
inc
mov
push
outsl
pushf
dec
xchg
ljmp
sbb
data16
jnp
jle
popa
xor
jnp
mov
in
add
jae
xor
adc
add
outsb
idiv
lods
std
jne
das
xchg
and
ljmp
sbb
add
mov
repz
pusha
pop
and
leave
ret
jmp
out
jb
sub
mov
xchg
lret
add
pop
and
mov
jbe
out
scas
add
rolb
in
imul
pop
mov
stos
cli
cmp
mov
pusha
adc
xchg
xchg
loopne
or
mov
sub
and
dec
fldl
in
mov
jecxz
push
adc
sub
cmp
pop
ja
adc
adc
aam
bound
adc
pusha
cmc
pop
sub
aam
test
pop
mov
out
jb
cld
cmp
mov
push
xor
sti
repnz
jecxz
and
aad
setno
data16
lahf
pop
in
xor
shlb
stc
rcrl
or
not
insl
jnp
add
into
add
ja
dec
xor
les
xchg
mov
in
xchg
xchg
call
sub
mov
rorb
lods
lock
fwait
xchg
or
sub
xchg
cmpb
xchg
mov
out
cmp
rcll
enter
jge
out
in
fcmovnbe
cmpsl
int3
stc
mov
out
cwtl
loop
xchg
mov
mov
xor
insb
xchg
cmp
xchg
popa
mov
push
and
or
mov
jp
aas
popa
or
xchg
push
add
inc
inc
mov
push
mov
repz
pop
mov
fcompl
xor
pop
lock
push
pop
and
shlb
imul
adc
xor
mov
cld
cmp
pop
sub
jo
mov
sub
ret
cs
adc
call
xchg
int
adcb
dec
or
call
add
in
call
cli
insb
int
xchg
cmp
xor
ljmp
sbb
lods
xchg
mov
mov
xor
push
adc
mov
lods
lods
shlb
dec
bound
mov
mov
fdivs
cmp
sbb
mov
or
and
sbb
sub
bound
and
das
mov
inc
loopne
inc
dec
setbe
adc
test
in
popf
mov
aas
lods
aaa
sub
jno
mov
or
xor
add
movsb
mov
aas
je
jmp
movsb
fistpll
sbb
push
mov
cmp
mov
das
out
pop
mul
xor
lret
in
or
mov
jle
maskmovq
notl
lds
add
enter
sbb
sbb
jp
ret
addl
xor
lods
dec
aam
and
and
mov
loopne
sbb
jns
and
pop
push
push
fsubrl
push
loop
roll
int
jmp
stos
dec
xor
push
push
dec
out
pop
in
mov
lods
sub
add
cmp
in
ret
pop
push
or
push
xchg
bound
daa
inc
inc
push
in
lock
adc
repnz
dec
pop
cmpsb
xchg
mov
mov
hlt
bound
dec
or
inc
cmp
xchg
mov
fildl
pop
pop
fsubr
push
mov
jg
inc
std
aad
jl
into
ficompl
mov
add
test
shr
int
movsb
stos
js
pop
stos
xchg
js
cmp
pop
xchg
bound
fistpl
arpl
jno
stos
das
nop
hlt
xchg
push
pusha
jnp
jnp
mov
adc
pop
jl
xchg
popa
les
outsl
call
fcmovnb
mov
stc
mov
inc
add
shl
sbb
jnp
js
ljmp
add
rcrb
jl
ds
mov
sti
fistps
pop
mov
rcl
lods
xor
cmp
inc
add
adc
divl
and
add
lods
cmpsl
cmp
and
or
das
push
mov
adc
daa
sub
aaa
hlt
xor
jo
jnp
int
sbb
mov
push
pushf
sbb
jnp
test
pandn
dec
mov
fildll
cmp
adc
mov
movsb
pop
dec
jmp
mov
push
dec
xorb
data16
loopne
lods
dec
ret
adc
out
sbb
mov
cmpsb
sbb
and
jmp
lods
loop
pop
mov
das
outsb
cld
imul
ds
rclb
sbb
pop
movsb
xchg
lods
pop
movl
inc
dec
inc
xor
xor
inc
and
dec
ds
int3
jb
ljmp
repz
xchg
int3
arpl
inc
adc
mov
sbb
jns
jb
jl
pushf
lods
iret
aas
int3
xor
cmc
test
or
sub
sahf
mov
shlb
ja
xchg
enter
shlb
imul
cmp
clc
pop
sub
data16
movsl
add
pop
adc
xor
shll
mov
push
and
mov
insb
std
shr
jecxz
bound
cmpsl
adc
out
adc
dec
pop
int3
sti
lret
bound
jae
aam
push
adc
shld
mov
fcoms
dec
pop
js
xlat
loope
mov
jnp
shll
and
out
cmp
data16
xlat
cmp
in
add
clc
mov
fs
inc
dec
cmpsl
add
mov
lea
ret
loopne
test
shlb
cld
cmp
loope
pop
pop
pop
push
sahf
push
or
pop
fldl
ljmp
push
pop
mov
xchg
adc
in
dec
add
push
bound
sbb
and
and
or
mov
std
jl
mov
cli
loope
mov
push
dec
xchg
mov
and
outsl
xchg
imul
movsb
jnp
jo
push
es
outsb
xor
dec
and
push
cmc
xor
addb
adc
dec
sbb
rcl
lods
clc
or
aad
mov
out
cmc
rclb
xchg
lods
cmp
dec
mov
lret
adc
jnp
bound
addr16
dec
fnsave
mov
xor
popf
loope
inc
std
add
lahf
push
adc
int3
lock
loopne
lcall
and
repnz
mov
sarb
sbb
loopne
and
shll
push
dec
sbb
push
sbb
cmp
add
pop
add
fpatan
jns
or
outsl
sbb
stc
xor
mov
fadds
mov
repz
mov
movsb
add
loopne
arpl
mov
mov
sbb
jns
push
dec
roll
je
pop
mov
int
test
cmp
sbb
sbb
scas
lock
adc
por
scas
pop
sarb
xchg
setle
aam
lods
fildl
scas
ss
sub
js
mul
mov
lods
sbb
pand
add
pushf
dec
dec
cmp
xor
and
scas
sti
cwtl
hlt
dec
inc
xor
mov
movsl
sbb
and
ja
enter
and
jmp
xlat
dec
xchg
faddl
adc
add
lahf
inc
rclb
dec
xor
sti
xchg
iret
ret
sub
aad
sbb
and
xchg
mov
jle
xor
enter
fdivs
or
fsubp
popa
in
xchg
jne
xor
movsb
or
imul
inc
push
fistpl
adc
dec
shlb
rcr
int3
dec
call
outsl
pusha
clc
push
popf
mov
movsl
fdivrl
mov
lret
mov
mov
aad
pop
jb
ljmp
or
mov
adc
mov
std
subl
xchg
dec
xor
orb
aad
sub
mov
in
stos
fnsave
aam
push
clc
xchg
repnz
lret
push
out
bound
xchg
shrb
push
cmp
fcoml
and
mov
jp
jle
push
or
jle
pop
adc
sbb
mov
loopne
add
cmp
push
xchg
or
iret
add
and
ja
and
adc
jns
push
aas
pop
mov
ljmp
les
nop
jb
xor
jbe
call
jbe
lcall
mov
pop
mov
cltd
lods
filds
rcr
sahf
std
push
sub
sbb
xchg
jle
in
mov
jl
stos
lods
ficoms
hlt
and
sbb
lcall
frstor
test
dec
mov
mov
fisubs
cmp
scas
into
out
adc
mov
mov
push
jns
movsb
out
jecxz
push
xchg
pusha
test
add
inc
stc
and
or
loope
fadds
test
dec
fs
cmc
jne
sub
jne
pop
ljmp
dec
mov
mov
movsb
es
addr16
sti
cmp
iret
push
lea
jl
pop
adc
fildl
lods
test
ret
outsl
push
inc
pop
ja
push
mov
pushf
fwait
or
int3
sub
je
mov
dec
xor
ret
aaa
jg
leave
sar
and
xlat
cmp
mov
xor
cmp
or
push
cmp
sub
xchg
es
aaa
mov
push
or
in
aas
sbb
ja
enter
sub
fsubrl
or
mov
int3
and
rcrl
stos
mov
mov
cmp
push
or
mov
clc
loopne
aam
mov
stc
outsl
sbb
ror
jecxz
dec
inc
imul
mov
dec
rol
mov
into
lock
int3
repz
divl
or
loop
pop
rol
mov
jb
xchg
xor
stos
shll
push
cmp
adc
test
xchg
ds
jo
or
jg
xlat
or
data16
mov
mov
mov
pushf
loope
lods
scas
push
mov
repnz
mov
lret
loop
popf
or
inc
mov
hlt
mov
bound
cmp
sub
jecxz
orb
les
cmpsl
jnp
data16
ret
cmp
ret
mov
push
nop
lcall
xor
jns
inc
jne
add
stos
out
adc
mov
and
rclb
pusha
adc
dec
jecxz
dec
jne
xchg
xor
les
sbb
adcl
sbb
rclb
pop
je
xor
push
pop
push
in
lcall
pushf
xchg
aam
out
adc
rol
push
mov
das
es
xorl
rcr
sbb
sti
push
stc
dec
pop
aaa
lcall
call
rclb
add
pusha
and
lcall
enter
sarl
out
arpl
cmp
faddl
xor
shll
fcoms
lahf
sub
xor
adc
in
mov
lock
sub
sbb
cs
pslld
stc
test
fists
pop
cmp
cmp
dec
sbb
in
lock
sub
in
adc
push
pushf
call
sub
mov
ret
dec
dec
fmuls
jo
jmp
cmp
mov
cmovo
rcl
inc
rorb
jne
scas
rclb
out
jg
xor
call
sub
aam
ror
sar
mov
pop
xor
cmp
xlat
dec
aas
pop
push
inc
outsl
lahf
mov
daa
cwtl
xor
mov
cmp
adc
out
iret
xor
lret
aas
push
and
dec
inc
shl
fsub
sub
lods
int
and
xor
das
pop
rcrb
outsb
xor
aam
add
cwtl
nop
pop
das
daa
shl
pop
push
aaa
test
ja
mov
jo
sub
shlb
mov
inc
xor
call
pop
rorb
pusha
pcmpeqw
nop
gs
scas
shr
test
pop
push
pop
xor
das
push
rolb
push
and
pop
xchg
xor
scas
nop
out
das
das
shrb
test
shlb
insl
movsl
xor
call
mov
ss
pop
inc
xchg
aas
call
adc
cld
or
test
aad
and
js
sbb
push
aam
xor
gs
nop
test
mov
lahf
mov
aas
loopne
dec
sub
test
and
adc
and
shlb
imul
inc
nop
or
test
pop
js
shlb
call
das
shl
test
pop
outsb
es
call
int
lea
pop
rclb
nop
out
mov
mov
push
repnz
xor
call
rcpps
fnsave
jecxz
shlb
test
pop
aaa
xor
push
nop
imulb
mov
inc
test
pop
fstl
nop
out
rolb
test
addr16
adc
std
xor
das
push
test
pop
xlat
xor
call
xor
sbb
std
das
mov
imulb
xor
call
loopne
fcomps
aam
pop
and
fstl
gs
nop
das
jle
loopne
xchg
nop
pop
das
pop
sarb
sub
mov
data16
cmpsl
jge
out
xor
call
call
or
cmp
nop
xchg
das
es
pop
lahf
xlat
xor
call
and
pusha
or
lods
test
or
pop
nop
xchg
das
rorb
test
pop
cmpsl
divl
call
mov
cmpb
xchg
aad
or
das
into
rorb
test
pop
xchg
xor
call
cwtl
shr
test
cmpb
popf
fnsave
adc
das
into
rcrb
test
pop
cmpsl
lea
sbb
sbb
adc
xor
nop
xor
xchg
iret
xor
nop
nop
call
lods
shr
test
adc
cs
pop
xor
call
lahf
mov
shlb
scas
adc
cmp
mov
xor
call
in
test
pop
sub
xor
hlt
jne
lcall
rclb
out
xchg
shl
adc
xor
lcall
cmp
xor
rclb
mov
sub
leave
aam
test
pop
adc
mov
xor
xor
das
rcl
test
cmpsl
lahf
rcrb
pop
push
out
xor
das
popf
shrb
sub
test
pop
mov
out
lahf
das
outsb
shlb
test
pop
dec
or
nop
push
mov
cmp
jg
aas
call
dec
rclb
test
pop
scas
push
xor
das
lods
rclb
adc
test
pop
mov
xor
call
jle
test
pop
add
inc
nop
jo
xor
call
mov
jb
xor
pop
rclb
pop
sbb
fwait
add
rorb
scas
fucomip
mov
sbb
push
mov
aas
imul
insb
adc
inc
sub
pop
mov
scas
sbb
fisttps
bound
push
xchg
add
mov
mov
loop
scas
inc
pop
adc
outsl
dec
fwait
pop
lret
loopne
add
and
jmp
loopne
loopne
sub
iret
push
pop
push
pop
lcall
dec
jnp
mov
and
inc
cmp
loopne
and
push
fildl
xlat
fs
push
xchg
out
or
adc
xchg
sahf
xchg
and
leave
or
inc
stos
and
mov
movsl
mov
ja
mov
adc
scas
jl
and
fsub
in
jbe
bound
fildll
out
xlat
ret
sub
inc
in
cli
jbe
andb
daa
loop
add
pop
xchg
adc
imul
fbstp
push
ret
aas
push
mov
in
xor
icebp
ja
sub
jmp
mov
adc
ret
dec
lahf
daa
mov
xchg
mov
push
aaa
rorl
lahf
dec
push
pop
jne
cmp
int
cld
into
adc
jmp
push
mov
jb
inc
cmpsl
movsb
clc
rolb
dec
ret
sbb
pop
xchg
xchg
pop
lahf
jl
add
inc
cmpsl
test
lods
push
adc
shll
pop
mov
inc
and
sub
cmp
rcrb
push
cwtl
xlat
dec
mov
loop
pop
rol
sub
mov
clc
xor
das
xchg
stc
push
add
pop
pop
sbb
mov
lahf
pop
sub
jmp
xor
lock
cmpsb
dec
mov
repnz
pop
mov
cmpsl
sub
inc
jbe
fiadds
fstpt
xor
push
and
push
mov
mov
cld
lea
mov
mov
aas
mov
pop
loop
push
dec
aad
cwtl
nop
mov
sub
or
dec
sarl
add
iret
cmpsl
nop
fistpl
mov
fcomp
mov
xor
es
jbe
xor
push
aaa
and
ss
and
pop
dec
pop
pop
adc
lods
test
dec
push
push
fbstp
and
nop
cwtl
test
mov
fsubl
lcall
xorb
adc
ror
and
xor
aaa
mov
pop
sbb
sub
lcall
mov
enter
cltd
loopne
xlat
mov
mov
mov
mov
sub
mov
push
pop
or
pop
jmp
mov
dec
out
mov
outsl
mov
pop
scas
xchg
lock
xchg
cmpsl
and
mov
mov
mov
popf
sbb
nop
fcmovnbe
std
out
in
std
xchg
cltd
xor
out
and
fsubrs
rep
fldcw
pop
xchg
mov
mov
jl
adc
cmp
loopne
dec
xor
ja
call
fsubrp
sbb
addr16
mov
xor
xor
fidivrs
sbb
popf
nop
push
sbb
or
cmp
sub
mov
hlt
sbb
pushf
aas
outsb
xchg
frstor
dec
cmp
iret
push
jp
aaa
xchg
sbb
aas
sbb
in
rcrl
sti
mov
scas
mov
mov
push
arpl
iret
xchg
fldt
xchg
or
lret
mov
popa
rcrl
data16
aas
xchg
out
stc
adcb
shrb
mov
ret
cmp
xchg
out
pusha
cmp
andb
xor
test
mov
movsl
pop
xor
lret
pop
xor
mov
into
sub
aad
fs
rclb
ds
mov
push
insl
cwtl
push
jno
sar
les
mov
mov
popa
adc
nop
clc
in
es
xor
mov
push
push
push
or
bound
hlt
cmp
push
push
movsb
scas
push
inc
das
xor
lahf
mov
lahf
mov
mov
or
jge
nop
mov
xchg
jg
vprotb
iret
cmp
xor
scas
sbb
ss
xchg
mov
xor
hlt
pop
fistpll
jecxz
nop
in
pop
inc
adcl
movsb
aaa
push
add
mov
out
jge
adc
in
adc
aas
inc
int
aam
call
scas
push
sbb
push
pusha
push
xlat
cmp
xor
pop
cld
loopne
mov
pop
repz
pop
mov
nop
shll
jmp
sar
ds
test
lahf
mov
dec
call
std
negl
cwtl
sbb
stos
pop
inc
outsb
popa
mov
stos
lahf
sub
pop
cmpsl
cmpsl
loopne
add
mov
adc
sub
mov
inc
sahf
mov
push
xor
mov
nop
daa
push
aas
cmp
or
aad
lds
or
mov
dec
ret
in
lock
inc
xchg
push
mov
outsl
sahf
aas
dec
ss
xchg
cmp
mov
repnz
add
popf
cmpsb
lods
dec
fidivrl
mov
scas
push
cld
and
test
xchg
inc
pop
popa
pop
icebp
pop
push
and
das
dec
aas
lahf
push
push
cmpsl
cmc
sti
dec
iret
jns
pop
xor
ljmp
pop
adc
mov
sbb
das
xchg
jle
add
xor
bound
iret
dec
dec
je
xor
aam
adc
adc
pop
push
sbbb
adc
pushf
into
sahf
push
shl
aaa
repnz
movsb
in
movsb
imul
cmp
inc
adc
xchg
fistpll
fcmove
mov
std
das
cmp
enter
xor
shlb
mov
std
sahf
cmp
dec
add
in
add
adcl
into
outsl
imull
imul
adc
adc
pop
adcl
repnz
xor
push
cmpsl
adc
ret
xor
in
mulb
fsubl
xor
scas
mov
repnz
test
xor
sbb
mov
pop
push
pushf
add
mov
push
xchg
mov
lods
or
mov
iret
mov
xor
xor
xchg
movsb
mov
enter
out
xchg
jg
xlat
mov
shl
xchg
inc
add
xor
out
das
gs
mul
fcmovbe
sbb
pop
or
fsubrs
sbbb
mov
push
xchg
mov
pop
xchg
xor
mov
aas
sahf
inc
subb
jge
fiadds
jecxz
lahf
rol
mov
cld
push
das
and
fwait
jmp
das
jne
fdivl
fadd
mov
add
add
lahf
roll
xor
jmp
scas
imul
shrl
mov
and
sub
mov
add
dec
testl
sub
push
cmpsb
xchg
fisttpl
repnz
xor
outsb
mov
mov
clc
adc
mov
lahf
mov
xor
xchg
lods
xor
jg
fnsave
iret
adc
fwait
mov
mov
mov
pop
pop
sub
imul
iret
ja
enter
mov
mov
aas
aaa
dec
dec
xor
or
mov
shrl
mov
nop
cmpsb
ret
mov
aad
shll
dec
das
stos
xchg
rsqrtps
xlat
xchg
pop
sarl
adc
lahf
mov
loopne
insb
and
nop
nop
mov
cmp
adc
push
nop
in
pop
sub
push
test
or
mov
inc
xor
mov
mov
aad
push
popa
in
nop
stos
push
ficompl
push
mov
xor
mov
mov
sub
mov
lods
mov
movsb
push
outsl
xor
popf
aad
adc
lods
mov
fcmovu
cltd
mov
ficoms
fildl
fwait
mov
sub
rcrb
push
sub
nop
sarl
cmc
daa
out
xlat
sub
xor
ficoms
pop
pushf
mov
ret
andb
push
pop
int3
push
stos
sbb
ds
es
fsubr
pop
fdivl
or
xchg
inc
jno
in
test
imulb
xor
rorb
mov
je
ljmpw
xchg
jbe
rcrb
sub
out
dec
push
inc
aam
inc
and
scas
xchg
daa
repz
loopne
mov
sbb
sti
inc
and
leave
lahf
add
hlt
sti
lea
pop
mov
jb
inc
xor
cmp
xlat
xor
xor
jb
outsl
inc
packuswb
aas
ss
js
lret
push
lahf
xchg
pushf
inc
pop
std
ljmp
sti
ret
scas
test
push
mov
dec
cmp
fiadds
or
jb
xor
jno
lret
pop
dec
lahf
movsb
data16
out
outsb
lock
jo
cmp
sarl
jae
adc
shr
cmpsb
pop
push
int3
in
lret
inc
das
rcll
adc
mov
jge
pop
dec
int
and
dec
jnp
fadd
stc
clc
icebp
dec
inc
mulb
es
bound
push
fwait
xchg
and
aaa
xor
nop
in
test
push
aam
xchg
shlb
sbb
into
pop
popf
enter
fmul
sbb
xor
sbb
xchg
fsubp
out
shl
movsb
inc
cmp
lahf
cwtl
xor
push
adc
jge
test
aas
fmull
mov
ss
mov
scas
inc
xor
pop
xchg
dec
fwait
sbb
ljmp
cmp
mov
cmc
fidivrs
lret
call
mov
fisubs
mov
loop
popf
xchg
mov
scas
mov
xchg
lods
adc
fimuls
sub
or
or
in
lcall
add
push
jle
jb
scas
dec
movsl
or
lret
lea
push
sbb
aaa
test
cmp
inc
xchg
or
iret
xor
ss
es
rorb
pop
je
jle
inc
into
mov
adc
mov
mov
mov
fs
jbe
push
jno
pop
fmull
lcall
adc
adc
in
bound
std
mov
scas
fstl
shlb
ja
rclb
jns
repz
mov
cwtl
sbb
dec
aam
sub
sbb
adc
iret
ja
pop
adc
int
cmp
cmpb
lods
xchg
push
lahf
incb
push
cmp
ss
mov
xchg
ds
mov
adc
fdivrl
arpl
mov
das
dec
mov
out
loopne
movsb
jbe
shl
and
test
arpl
cld
nop
nop
dec
pop
push
mov
sbb
or
nop
mull
repnz
out
cmpsl
sbb
nop
nop
mov
and
xchg
daa
inc
cmpsl
popa
add
sub
sub
outsb
pop
outsb
das
or
mov
mov
out
pop
jb
arpl
mov
pop
push
dec
xor
cmp
dec
xchg
push
into
mov
imul
sub
xchg
js
sbb
in
jge
mov
fcompl
popf
scas
filds
scas
rcl
add
cmp
js
lahf
dec
faddl
pop
xchg
out
pop
cmp
lods
mov
out
mov
adc
es
cwtl
lds
xlat
and
xchg
lock
addr16
adc
xor
nop
outsw
out
sub
scas
cwtl
lock
outsl
push
out
mov
cs
dec
jge
cmpsl
xor
xchg
pop
pop
mov
outsl
outsl
scas
xor
xor
adc
and
inc
ss
push
sbb
pop
mov
int
sub
pop
mov
insl
lahf
ret
jnp
imul
int
in
ds
dec
int
adc
enter
xchg
in
std
mov
shrb
pop
and
push
pushf
fisubl
push
loopne
outsl
sub
push
jge
ret
or
push
into
aad
dec
aam
pop
notl
nop
lods
dec
test
jecxz
outsb
int
rorb
outsb
sti
out
and
lock
int
dec
jb
outsl
cmp
push
jg
xchg
imulb
adc
int
enter
sub
lods
mov
shl
jge
ret
dec
mov
cld
sub
sub
test
xor
lods
das
jo
cmp
mov
outsb
mov
lahf
out
das
scas
fists
pop
test
pusha
pusha
sub
and
test
out
outsl
push
outsl
mov
mov
dec
int
inc
sahf
repz
loopne
loopne
xchg
push
sub
ljmp
adcl
adc
xchg
xlat
xor
cld
pop
insl
adc
rcl
push
dec
mov
push
rclb
xchg
das
mov
adc
pop
int
mov
out
fmull
mov
outsl
push
outsl
imul
fnstcw
pushf
cwtl
push
fdivp
outsl
sbb
outsl
push
push
push
fimull
push
pusha
cs
mov
inc
mov
jle
fmull
xchg
stos
add
xchg
out
adc
xor
loopne
je
addr16
inc
rol
push
cltd
and
add
pop
outsl
mov
fisttps
and
xchg
scas
dec
into
push
call
or
mov
outsb
and
mov
mov
mov
int
sub
sti
pop
das
push
outsb
cmp
ds
xchg
sub
jae
mov
push
adc
mov
cwtl
pop
out
aas
sub
cwtl
push
sbb
xchg
popa
loopne
pop
adc
and
mov
aam
add
push
mov
lods
mov
jg
adc
mov
xchg
mov
push
rcll
nop
cltd
fidivrs
xor
sbb
pusha
call
xchg
sub
sub
iret
push
and
sub
fadds
sbb
sub
aas
xchg
loopne
jmp
mov
adc
fsts
and
popf
out
push
int
mov
adcb
int
loopne
cmpsb
pand
loopne
loope
pushf
fst
scas
and
mov
iret
and
in
lods
cmpsb
das
outsb
dec
sahf
loopne
push
sub
repnz
jmp
sub
outsb
push
insl
jno
inc
rcl
sbb
push
in
cs
popf
int
pusha
outsl
xor
sub
pushf
dec
shr
sub
shl
outsl
sub
sub
lock
push
outsl
cld
sbb
test
lods
sahf
mov
test
xchg
mov
fadd
test
xlat
outsl
shl
pushf
add
mov
das
pusha
stos
fcmove
mov
out
dec
lahf
insl
das
sub
xchg
mov
pusha
cmpsb
mov
setg
and
xchg
pmulhuw
push
lock
cmp
test
pop
adc
xor
cwtl
pop
cmpsb
sub
scas
call
mov
mov
rorb
dec
popw
clc
lock
sbb
adc
aas
and
ds
dec
add
mov
movsl
xchg
sub
inc
pop
rcl
and
in
int3
lahf
loope
mov
sub
mov
and
ds
loopne
mov
aam
pushf
and
sub
lock
xchg
dec
sbb
fmulp
lahf
jp
subb
cltd
mov
xchg
subb
xchg
mov
call
ret
adc
jmp
inc
push
sbb
sti
xchg
dec
sbb
jl
mov
rclb
push
loopne
rclb
xchg
pop
je
sbbb
or
dec
sbb
mov
dec
dec
mov
lods
lea
mov
call
popf
xor
xor
cltd
mov
adc
loopne
pushf
mov
aam
sbb
popf
xchg
lcall
inc
fisubs
mov
adc
aas
push
sahf
jns
mov
loop
jnp
loop
mov
rcll
and
xchg
sbb
mov
jg
inc
push
xchg
aaa
adc
mov
or
or
fwait
stc
nop
int
sbb
and
rclb
ret
enter
cs
xchg
mov
arpl
dec
sti
or
xchg
mov
out
push
fildl
cltd
aad
or
jle
jle
ret
jo
add
mov
mov
cmp
test
sbb
sub
jb
int3
xchg
into
popf
sarb
sub
ficoml
adc
xchg
inc
push
jb
xchg
aas
shlb
mov
jo
sete
push
out
scas
xchg
adc
mov
popa
mov
gs
xchg
push
popf
dec
mov
outsb
lods
daa
sti
pop
enter
shll
cmc
push
xchg
or
push
call
fldln2
test
pop
fidivrs
dec
xchg
rclb
stc
pop
aas
shl
lods
and
adc
hlt
push
shl
lods
push
ljmp
and
adc
add
aas
jne
mov
outsl
xchg
adc
mov
cmp
or
cmp
inc
push
jo
rcrl
test
sbb
es
dec
pop
dec
mov
mov
daa
lock
hlt
push
movsb
sbb
aam
xor
adc
pop
outsl
xchg
outsl
fwait
mov
loopne
pop
ret
and
and
arpl
and
cli
mov
dec
loop
pop
ret
xchg
bound
pop
mov
pushw
int3
ss
repz
xlat
pop
lahf
jns
daa
adc
xor
clc
loopne
das
lret
call
xchg
stos
test
cs
push
nop
dec
out
ret
adc
xor
mov
ror
int
ss
pop
repnz
mov
enter
pop
sub
jae
mov
sub
loopne
das
repnz
in
fisttpl
cmovae
ror
repz
int
cwtl
shr
pop
xchg
jo
arpl
pop
inc
lock
ficomps
loopne
or
daa
std
push
popa
scas
mov
outsb
hlt
pop
pop
lods
mov
inc
push
popf
cld
adc
lods
movhps
fisubrs
daa
ja
mov
mov
inc
call
dec
jle
cmpsb
sbb
or
jo
adc
dec
mov
les
jne
loopne
pushf
dec
push
cmp
xchg
sbb
imul
pop
gs
adc
call
sub
lea
outsb
inc
loopne
out
int
mov
mov
call
insl
pop
jne
lock
rcrb
scas
nop
push
adc
mov
sahf
hlt
inc
nop
pushl
in
out
into
ret
aad
outsb
lret
dec
sahf
mov
and
pop
fistl
adc
adc
int
xor
imul
mov
in
xchg
adc
movsb
pop
in
mov
int3
xor
inc
idivl
jns
fxch
adc
jb
push
out
push
sub
das
and
adc
test
mov
xchg
subb
jno
add
call
pop
and
testb
es
loopne
sbb
push
and
cmp
fidivrs
push
out
xlat
xor
jecxz
mov
inc
outsb
rol
pop
xchg
mov
inc
fstpl
dec
inc
pop
or
rcr
xchg
outsb
pushf
sub
push
push
push
push
xor
aaa
pop
rorl
pop
dec
ret
push
vpsllq
cmp
sarb
pop
adc
cmp
shlb
jg
pusha
sbb
rol
jns
fidivs
ljmp
sahf
mov
movsl
cs
aaa
jmp
and
sbb
dec
insl
push
mov
out
pop
cmc
xchg
mov
lock
jno
lods
loopne
sti
dec
mov
repz
xorl
sbb
scas
pop
hlt
inc
xor
add
mov
out
fsts
call
jle
aas
pop
sbb
outsl
jno
xor
pop
outsl
fildl
divl
jbe
arpl
cwtl
movsb
clc
add
mov
xchg
and
insl
subb
test
scas
sub
push
xchg
jb
call
in
jge
aas
movsb
out
xchg
sbb
lahf
sub
daa
adc
out
adc
lock
mov
out
push
mov
push
fwait
into
lcall
stos
lret
bound
cmp
cli
outsb
push
pop
lahf
inc
insl
xchg
or
aaa
lods
gs
aaa
lret
mov
mov
push
mov
push
push
sahf
lea
xchg
ss
cmc
mov
cmp
test
sub
add
stos
cs
data16
push
scas
aaa
jge
xchg
push
and
dec
in
stos
cmpsb
xor
negb
or
cmpsb
daa
mov
cs
inc
push
stos
mov
mov
dec
add
outsb
or
and
lret
push
mov
push
pop
cld
pop
test
dec
icebp
adcb
xchg
or
and
mov
mov
jge
out
dec
insl
test
dec
jg
out
outsb
xor
je
or
clc
push
mov
scas
ror
pusha
dec
cmp
in
xor
push
and
out
mov
pusha
mov
shr
dec
push
sarb
scas
loopne
or
in
mov
adc
mov
scas
subb
loop
loop
in
movsb
mov
mov
popf
xchg
nop
adc
pop
adc
insl
repnz
add
out
insl
cmp
fcomps
xchg
outsb
iret
mov
lahf
scas
das
and
into
loopne
xor
cmp
mov
xor
mov
scas
mov
shl
or
out
xchg
mov
into
mov
sbbb
nop
stos
dec
popf
mov
mov
out
outsb
pop
out
daa
push
cmpsb
mov
subb
movsb
and
mov
dec
mov
pop
popf
nop
loopne
xchg
adc
iret
sub
lods
add
jge
jno
je
pop
add
xor
adc
stos
test
scas
push
out
cmp
lret
clc
cmpsl
jmp
loopne
push
lahf
push
repz
sub
mov
in
shll
mov
loopne
push
mov
push
in
ja
nop
jb
inc
mov
push
xor
mov
out
xor
insl
xchg
jg
insl
int
inc
into
ss
icebp
lods
call
loopne
mov
xor
das
sbb
enter
nop
dec
into
inc
add
inc
loopne
fisubrs
mov
xchg
das
andb
aaa
nop
scas
xchg
scas
mov
xlat
mov
popa
movsl
iret
sahf
insb
fmulp
adc
jp
dec
xor
out
inc
xor
and
push
int
xor
outsb
adc
out
addr16
pop
dec
cltd
loop
pusha
cmpb
inc
dec
or
aam
add
data16
inc
adc
inc
pop
dec
pop
adc
rcll
call
mov
aas
xchg
lahf
push
and
xchg
mov
add
jae
into
lret
dec
add
xchg
pop
mov
rcl
call
loope
jl
add
pinsrw
jae
dec
test
lods
mov
xchg
pusha
bound
sbb
xchg
xchg
clc
outsb
mov
add
xor
push
dec
xchg
lcall
mov
sahf
pop
xor
das
call
xor
mov
sbbb
dec
cmp
daa
mov
stc
outsb
xor
out
xlat
push
lret
cmp
xor
push
xlat
cmp
cmpsl
push
popf
push
sbb
pop
add
sub
adc
inc
sub
fcmovne
aas
mov
das
ret
jns,pt
or
and
and
outsl
xlat
mov
sub
sbb
push
negb
enter
lods
cmpsl
test
mov
dec
dec
divl
inc
data16
xor
push
mov
inc
and
xor
add
xchg
mov
inc
sbb
in
mov
lcall
adc
in
ljmp
stos
popa
sbb
or
shlb
mov
push
push
jmp
inc
outsl
dec
roll
andb
dec
leave
xchg
out
mov
lea
sti
je
imulb
mov
mov
or
cmp
xor
mov
xchg
jb
cs
or
imul
push
inc
mov
inc
lcall
jmp
repnz
stc
test
aas
pusha
leave
cmp
sahf
in
aas
mov
xor
pop
int
lods
sti
add
scas
pushf
pop
ret
out
fbld
rorb
ret
xchg
and
sbb
std
or
outsb
hlt
xor
mov
pop
inc
dec
sbb
testb
adc
fcom
and
xchg
outsl
outsb
nop
bound
scas
movsb
rclb
out
rclb
jbe
lcall
xchg
out
outsb
inc
dec
sbb
add
loope
mov
push
incl
xlat
jmp
icebp
and
lock
xor
out
jmp
push
mov
call
scas
cmpsb
mov
rorl
sti
and
mov
jecxz
fists
rol
mov
sbb
arpl
adc
fucomi
das
and
xor
xchg
jo
sbb
and
in
jge
insb
es
fildl
mov
nop
pop
jl
sub
scas
iret
mov
shlb
cmp
les
pusha
cmp
sbb
adc
aaa
lea
xor
nop
arpl
addr16
push
xlat
mov
je
das
xor
loopne
loope
sbb
mov
adc
hlt
sub
out
xchg
jmp
mov
adc
xlat
lcall
loopne
add
inc
sbb
insl
scas
lea
jae
nopl
mov
int
cmp
loopne
mov
loopne
jle
aaa
cmp
adc
inc
or
cltd
in
push
dec
mov
into
scas
xor
repz
loopne
out
lods
popa
xchg
add
aam
pop
jo
xor
fsubrl
adc
push
das
aam
lods
lods
pusha
aam
arpl
push
in
rorl
pusha
push
lahf
setg
xchg
outsb
lds
lret
scas
aam
out
rcrb
xchg
dec
sub
mov
cwtl
xor
rorb
outsl
pop
dec
outsl
adc
sbb
mov
and
and
enter
rol
xchg
mov
sub
cmpsb
into
mov
dec
cs
out
ror
fisubrs
loopne
inc
cmpsb
das
pop
dec
outsb
push
lods
dec
ss
or
aam
xor
call
iret
pop
sub
push
cmp
popf
int
incb
xchg
mov
in
push
cmp
fsubrp
loopne
int3
cmp
xchg
loopne
fdivrs
pop
jg
and
mov
xchg
adc
loope
cmp
daa
xor
out
add
and
rolb
sbb
loop
mov
mov
push
loopne
or
rorb
dec
jle
sbb
aam
call
in
dec
adc
in
adc
mov
sbb
inc
add
rcl
enter
rcrb
call
adc
rclb
loopne
jge
xchg
fisubrs
cld
xor
jmp
aas
xlat
mov
call
jo
sub
adc
clc
mov
and
mov
and
rcrb
xor
jnp
and
xor
fsubrl
mov
lock
cli
jg
sbbb
xor
ret
adc
loopne
jae
aas
rclb
sub
mov
pop
loopne
mov
bnd
aas
loopne
fidivrl
sub
cmp
push
pop
xor
push
sbbb
push
aas
das
shlb
mov
xchg
rclb
sub
lds
in
dec
xor
mov
stos
jb
pop
or
adc
outsl
lret
xchg
pop
adc
mov
imul
outsb
nop
ljmp
aam
sti
dec
xor
nop
inc
out
push
movsb
pop
adc
mov
mov
outsl
dec
xorb
sub
rcl
sub
unpcklps
or
sub
test
and
fsubrs
out
rol
imul
ss
push
and
iret
in
loopne
and
outsl
ror
scas
iret
aam
scas
aam
cmp
daa
push
dec
aam
nop
sub
iret
push
je
loopne
push
loopne
sub
test
pop
dec
shlb
call
outsb
shrb
jb
int
xor
sbb
aam
nop
dec
das
xor
das
sarb
xor
outsb
push
into
aam
nop
scas
das
xor
or
fdivs
inc
call
out
sub
pop
call
scas
nop
rorb
cwtl
add
repnz
aam
call
lea
aam
enter
mov
test
pop
out
int3
unpcklps
shr
nop
aam
mov
call
int
shr
lods
nop
in
add
call
rcl
das
test
pop
fidivl
outsb
aam
sub
into
nop
test
scas
rcrb
in
xor
pop
and
and
subb
iret
in
add
repnz
scas
xor
dec
xor
out
xchg
push
dec
rcl
loopne
sub
mov
pusha
nop
cld
pop
rol
lock
mov
out
call
or
cs
pop
mov
sub
pop
call
lods
shlb
psubusb
loopne
daa
sbb
dec
nop
sub
das
jne
xor
call
into
sarb
test
pop
aas
or
nop
das
inc
ror
shlb
test
pop
adc
outsl
call
fcmovnbe
scas
test
jl
jecxz
out
das
out
dec
test
pop
sub
pause
pusha
das
idiv
rorb
call
out
rolb
xor
das
insl
rclb
lods
xor
mov
loopne
mov
dec
mov
nop
das
inc
shrb
inc
pop
into
dec
xor
das
push
shr
test
pop
inc
pop
cs
adc
adcb
test
pop
outsb
scas
xor
in
shlb
out
pop
jp
xor
sub
rolb
test
sbbb
sub
mov
push
and
out
nop
pop
das
dec
shrb
mov
and
inc
das
push
jbe
iret
das
mov
fmull
and
adc
sub
rorb
mov
outsb
out
das
test
lahf
into
push
in
aas
scas
aam
xor
das
stc
rolb
std
andb
pop
addl
rcrb
adc
aam
sub
out
mov
loopne
xor
adc
push
ja
in
je
int3
sub
clc
push
loopne
sub
push
jo
sub
je
int3
sub
insb
lods
push
sbb
push
jo
sbb
xchg
loopne
into
mov
das
or
outsb
push
sbb
push
jo
sub
in
sub
pusha
and
sub
je
int3
sub
push
jo
sub
je
int3
mov
lods
push
sbb
and
int3
loopne,pn
sbb
das
jo
sub
je
int3
sub
push
push
jo
sub
loopne
mov
xchg
das
je
int3
sub
push
jo
sub
popf
in
or
and
pop
xchg
loopne
mov
sbb
push
jo
sub
je
int3
sub
sub
push
lock
loopne
mov
das
sub
je
int3
sub
push
add
mov
in
jo
sub
test
sub
je
int3
sub
push
jo
sub
jl
or
pusha
push
xchg
and
mov
das
mov
out
jo
sub
je
int3
sub
insb
lods
push
sbb
push
jo
sbb
jo
sub
je
int3
sub
push
jo
sub
in
sub
pusha
and
test
call
out
pop
push
js
push
mov
sbbb
dec
sub
sarb
or
lret
push
inc
psubsb
fsubs
lea
enter
int
or
mov
lret
out
push
lods
sti
paddq
adc
sub
rolb
sub
adc
and
rcr
ror
xchg
sahf
fsts
sub
rclb
ja
sbb
ds
inc
lods
dec
roll
andnps
adc
mov
adc
iret
ss
faddp
int
xchg
lret
jle
out
into
lret
cmpsb
adc
cmp
adc
fcmovnu
mov
jge
scas
dec
andb
popf
mov
and
mov
sbb
lea
inc
adc
mov
iret
push
pop
into
pmulhw
sbbb
ror
mov
rclb
iret
add
sub
ret
hlt
nop
adc
adc
mov
mov
adcb
pminub
xchg
ret
dec
xchg
push
mov
dec
push
outsl
fcmovnu
dec
and
sbb
into
iret
rcrb
xchg
testl
adc
xor
dec
loopne
adc
int3
shrb
fistps
and
mov
mov
xor
shlb
push
adcb
orl
fimuls
jle
dec
mov
sub
jge
xchg
insl
popf
int
out
ds
int3
hlt
jo
nop
in
or
sub
jbe
push
dec
mov
or
adc
sub
cwtl
mov
mov
add
js
push
lock
enter
mov
filds
data16
div
mov
xchg
mov
mov
fadd
mov
xchg
inc
adc
cmp
shrb
aas
or
add
xchg
fistps
rol
xchg
jns
scas
and
cmpb
xlat
sbb
enter
sub
sub
scas
mov
scas
inc
sub
xlat
mov
sbb
sbb
adc
xchg
and
andb
push
dec
out
out
mov
xor
pushf
aaa
sbb
out
nop
aam
xchg
or
iret
push
pop
pop
sub
jnp
std
rcrb
out
mov
adc
cmp
rcrb
incl
test
mov
push
cs
push
jle
mov
daa
mov
dec
sahf
adc
punpckldq
enter
pop
loop
push
lret
inc
hlt
lea
xchg
loop
inc
mov
xchg
push
inc
push
sub
iret
cmpb
cmp
xchg
das
sub
fisttps
jo
xor
std
lahf
mov
xchg
int
outsb
out
stos
push
jge
sub
iret
dec
push
jge
sub
out
push
pop
loop
xchg
push
sar
test
daa
xchg
outsb
lcall
xorb
jg
jne
xchg
cmpsl
sbb
shlb
out
xchg
push
sub
pop
ret
int3
subb
adc
int3
enter
shrb
lret
inc
inc
ds
lret
dec
inc
push
push
lret
push
inc
sub
fiadds
push
lret
xchg
inc
cmpb
pop
into
inc
dec
cmpsb
lret
sub
push
and
cmp
out
fcomps
xchg
cmc
mov
lock
jl
adc
mov
inc
and
dec
iret
pop
dec
pop
mov
cmp
mov
in
lret
in
cmc
les
adc
clc
xchg
inc
mov
mov
lahf
lea
adc
mov
nop
data16
cltd
xchg
sub
subb
pop
xchg
lock
data16
popf
pop
adc
xchg
fstpt
push
push
add
mov
rcrb
in
pop
icebp
pop
pop
fbld
stc
add
repz
jb
pop
pop
mov
aam
and
cs
sbb
adc
imul
adc
pushf
outsl
xchg
pop
in
repnz
mov
push
jle
push
cmpsl
inc
ret
cltd
pop
pop
xchg
into
movsl
xchg
xchg
mov
outsb
in
dec
movsb
mov
adc
sarb
dec
into
pop
stos
mov
int3
call
test
jmp
outsl
sbb
adc
push
push
fwait
divb
sbbl
inc
fdivrp
mov
dec
bound
das
cmpsl
push
cli
mov
xchg
les
push
mulb
cld
adc
add
mul
cwtl
xlat
cmp
ret
aam
movsb
mov
push
jmp
mov
xor
mov
movsl
incb
shrb
sub
push
push
jb
test
push
mov
sbb
popf
scas
lahf
pop
mov
adc
shrb
call
push
mov
arpl
lds
pop
nop
mov
pop
cmp
lods
pop
lock
gs
sbb
ss
mov
das
mov
ret
in
aas
mov
push
cs
sbb
lock
dec
icebp
mov
andb
bound
test
test
pop
cmc
mov
fiadds
shlb
mov
push
movd
mov
pop
incl
xor
dec
mov
daa
pop
pop
es
cmpsl
ja
inc
inc
stos
and
into
fistpl
xchg
fwait
mov
push
shl
ficoml
jne
mov
repnz
ret
in
stos
repnz
pop
cmpsb
jbe
mov
mov
xor
gs
inc
inc
pusha
xlat
sbb
and
adc
sub
mov
pusha
mov
popf
push
cmp
mov
idivl
push
lret
bound
pusha
ljmp
xor
lret
mov
call
mov
xchg
mov
lds
sub
xor
aas
inc
dec
pop
cmpsb
ffree
mov
adc
adc
adcb
mov
rcl
mov
mov
mov
xchg
push
inc
sbb
xchg
sub
sub
or
xor
or
imul
sbb
cmp
cs
adc
daa
push
outsb
sarb
adc
lock
sub
fs
and
dec
lret
mov
pushf
add
push
mov
ss
adc
stos
clc
adc
xchg
push
shrb
mov
std
cmp
inc
jge
sbb
mov
call
mov
xor
lock
pop
dec
lahf
lahf
rclb
movsl
cwtl
out
push
ds
xchg
sbb
movsl
inc
decl
aas
inc
lea
aam
into
test
add
cmc
pop
jb
int3
bswap
dec
lea
push
xor
aas
dec
mov
bnd
arpl
adc
mov
pusha
mov
stc
push
imul
mov
ljmp
scas
std
out
jg
fcoms
cmp
fnstcw
inc
mov
cs
sbb
xchg
js
xchg
insb
add
adc
test
xchg
or
fisubl
xor
mov
dec
mov
lret
int
pop
mov
js
dec
outsb
xchg
icebp
arpl
mov
scas
inc
push
cmp
divl
test
push
arpl
das
adc
int
adc
or
pop
fisttpl
add
sub
dec
adc
adc
nop
sub
dec
int
mov
adc
or
out
leave
das
sub
xor
sbb
sbb
push
scas
enter
adc
add
imull
repz
pop
xchg
or
fwait
mov
sarb
les
pop
pop
mov
sub
mov
mov
mov
cmpsl
xlat
jecxz
mov
xchg
mov
mov
push
scas
nop
aaa
es
lods
ret
jo
and
je
xor
dec
mov
pop
push
pop
outsl
inc
dec
jns
stos
adc
and
enter
lahf
adc
insw
xor
mov
inc
in
pop
enter
cmovp
jle
lea
xor
mov
mov
mov
mov
xor
push
xor
xlat
stc
lods
test
lret
gs
lahf
mov
xchg
gs
cld
lahf
sub
cmp
ds
mov
mov
mov
xor
std
jb
jb
jno
cmp
jbe
add
incl
shrl
lock
in
sbb
rorb
sbb
rolb
js
sbb
mov
cmp
or
adc
call
sub
push
fucomi
lods
mov
push
cltd
mov
mov
ja
mov
or
out
arpl
dec
jl
or
rolb
push
stos
cmp
sarb
into
add
inc
shr
mov
pop
adc
lock
or
iret
test
nop
outsl
fistl
repz
inc
xchg
bts
sbbl
std
idivl
popa
mov
dec
out
pop
scas
fadds
push
inc
mov
mov
testl
mov
xlat
pop
lea
pop
push
ja
popf
dec
add
dec
push
cs
in
scas
xor
inc
insb
mov
pop
inc
xchg
jne,pn
outsl
pop
cmp
nop
pop
ret
aad
push
iret
testb
rcrb
xchg
int3
mov
shrb
or
mov
aam
or
ror
sahf
pop
paddq
fstps
push
pop
mov
dec
or
insl
xor
and
xor
pusha
lret
push
or
sahf
lods
pop
shrb
fldenv
cltd
lea
gs
movsb
dec
cmp
sub
push
inc
aam
mov
mov
lret
mov
dec
pushf
loope
adc
inc
in
inc
inc
and
movsl
jge
and
subl
jb
xchg
or
out
xor
imul
dec
cmpsl
sub
rclb
mov
mov
sbb
push
das
addb
mov
adc
ret
and
movsl
sub
mov
aam
push
shrb
sub
scas
imul
push
cmp
mov
sub
jne
cmp
fimull
rorl
and
mov
fmuls
dec
loopne
push
dec
cmc
pop
sbb
cmc
pushl
gs
ds
out
dec
fimull
shlb
outsb
sub
rorb
loopne
in
aas
xchg
outsl
lret
fmull
inc
dec
gs
sbb
movsl
mov
xchg
fwait
lret
jb
xor
push
aam
negl
inc
sub
testb
dec
push
pusha
sub
repnz
out
outsb
popa
cld
test
add
xchg
leave
push
inc
into
push
ret
adc
mov
sbb
inc
andps
jle
out
andb
add
dec
pushf
gs
test
lock
cs
fsubrs
mov
sti
add
fistl
mov
aam
shl
arpl
outsl
jae
pop
aas
in
push
xor
xor
je
movsb
jmp
sub
and
and
jbe
daa
int
ja
dec
add
in
scas
movsb
dec
out
mov
xor
sub
in
jb
pushf
shrb
bound
pop
lea
adc
loop
aam
out
jmp
in
mov
ficoms
mov
lahf
andb
push
int3
ja
dec
inc
cwtl
adc
or
dec
push
shl
loope
cmp
jmp
shlb
xchg
rolb
or
in
setp
push
movd
sub
inc
adcb
fcomi
push
ud2
lea
xor
cltd
sbb
adc
adc
int3
push
xor
insl
das
fdiv
pusha
mov
add
mov
fbstp
adc
fistps
shrb
and
and
push
call
adc
adc
test
mov
lock
das
jg
in
sbb
xchg
jo
pusha
pop
inc
adc
test
sbb
sbb
cmpb
aam
pop
push
inc
and
paddsb
mov
repz
aaa
pop
mov
and
das
mov
push
mov
outsb
cmp
jge
and
lea
enter
xor
cmpsl
outsb
xor
imul
or
sbb
sub
int3
nop
mov
or
or
xchg
sub
lahf
lahf
ja
vpsrad
push
lds
inc
das
std
pop
lea
mov
lret
jg
clc
pandn
mov
mov
push
pop
dec
into
iret
sbb
sub
or
or
xor
cmp
fisubrs
insl
adc
int
inc
push
sub
inc
adc
mov
and
xor
std
nop
scas
or
pop
mov
add
adc
popf
xor
sbb
mov
xlat
scas
xchg
and
das
inc
cwtl
xchg
jmp
adc
xchg
sub
rclb
in
and
xor
or
mov
ficoms
fmull
mov
sub
adc
pop
pop
outsl
mov
add
das
decl
aaa
and
setno
das
adc
sbb
xor
pop
imul
jl
cmp
xor
call
dec
mov
xchg
pusha
adc
adc
sbb
sahf
cs
iret
pop
sub
sub
or
pusha
push
je
shrd
ds
adc
xlat
mov
sub
sub
loopne
or
push
xor
lods
outsl
lret
push
shrb
xchg
adc
xchg
sub
dec
outsl
and
shrb
paddusw
push
sub
cmp
test
mov
fwait
push
das
cwtl
pop
enter
xor
fcoms
cwtl
call
shl
and
cmpsl
mov
fimull
das
push
jo
enter
js
mov
mov
out
loopne
mov
repnz
es
cmp
addb
fs
or
incb
lock
pop
pop
enter
jp
inc
dec
inc
loope
inc
inc
mov
jmp
mov
stos
mov
xor
xlat
addr16
or
out
mov
rorb
adcb
fcmovbe
add
dec
cmp
mov
cmp
cwtl
jmp
cmc
xchg
cmp
aad
pop
push
mov
dec
xlat
xor
add
cli
test
out
int
mov
and
lock
scas
adc
cmp
aaa
sbb
fcomps
add
andl
aaa
inc
lahf
fisttps
es
sub
xor
popf
push
sbb
addr16
testl
test
push
add
xchg
push
pop
pop
xchg
dec
call
inc
mov
sub
dec
cmp
or
push
fmulp
js
push
and
into
adc
insl
out
dec
rcr
out
mov
mov
stos
es
les
and
enter
mov
sub
loopne
testb
cli
lock
lahf
les
js
and
sahf
sub
das
and
xor
fcomps
test
into
pop
cwtl
mov
das
aas
ja
ds
arpl
xchg
xor
ja
popa
fcomps
mov
mov
sbb
ret
xchg
push
xchg
es
xor
fidivl
stos
fsubs
outsl
mov
clc
shrb
stc
adc
rclb
and
inc
outsl
mov
or
dec
xor
mov
sub
rcrb
iret
enter
push
and
jnp
orl
scas
cmc
mov
notl
cwtl
fildl
adc
adc
das
sbb
pop
clc
stos
add
xchg
int3
dec
cmp
mov
cs
gs
pop
into
dec
scas
cmp
xor
shlb
mov
cmpsb
ret
imul
dec
mov
cmpsb
test
sahf
pop
ffreep
das
pop
inc
mov
dec
xchg
cmpsb
lahf
and
mov
cmp
addr16
jo
xor
xchg
cmp
push
nop
scas
fstpt
mov
loopne
lea
xchg
mov
js
jo
xchg
pop
dec
sbb
fwait
pop
mov
sbb
push
lods
adc
nop
cs
push
cmpsl
jns
popf
ret
loopne
int
dec
mov
pop
xchg
cmc
dec
sub
enter
gs
xchg
lret
nop
cmpsl
mov
xor
nop
jns
or
inc
scas
mov
test
loope
mov
mov
iret
mov
js
fdivrs
dec
dec
push
cs
xadd
into
xchg
scas
cmpsl
mov
mov
pop
data16
adc
es
push
into
add
das
xchg
test
out
pop
lahf
call
push
fisubs
into
adc
dec
jge
shl
fldcw
push
xor
rcr
vpmacssdqh
dec
sub
mov
pop
rorb
sub
rol
fcomps
adcb
push
mov
call
stos
dec
sarb
shlb
xor
hlt
and
dec
repnz
les
ror
or
leave
sarb
ficomps
clc
or
int3
sub
xor
loopne
sbbl
cwtl
sar
js
shlb
pop
fadds
hlt
cwtl
cli
and
outsb
fs
cmp
ja
jle
xchg
lcall
xor
fisttpll
arpl
mov
mov
push
and
push
pushf
insl
clc
cmpxchg
les
int3
dec
fidivrs
sub
push
jbe
pusha
sub
xchg
rorb
xor
dec
mov
xchg
cmp
inc
mov
les
rcrb
stos
outsl
rorb
fisttps
jno
orb
rcrb
sub
xor
push
enter
pop
shlb
cmp
and
or
lea
adc
sbb
mov
jg
and
arpl
and
xor
test
das
or
and
inc
enter
sub
out
fsubr
je
sub
jle
xchg
aad
out
rcrb
push
out
pop
and
and
pop
xchg
jo
lea
jbe
repnz
pop
dec
and
call
nop
pop
mov
jne
enter
jle
sahf
nop
adc
aas
mov
jge
clc
out
pop
ret
cmp
or
xchg
sub
out
movsb
inc
movsb
popf
mov
inc
gs
lahf
sub
xor
aam
and
adcb
dec
jecxz
pusha
and
les
add
adc
idivb
sub
mov
sti
push
mov
adc
mov
lods
adc
enter
and
push
mov
sahf
mov
sub
lea
jg
out
in
xor
pusha
xchg
xor
sbb
xor
fdiv
scas
and
xlat
outsl
push
call
enter
bt
enter
sub
cwtl
bndstx
mov
cs
fidivs
cmp
dec
vcvtss2si
aas
cmp
sbb
aad
mov
fidivs
call
ficoms
or
rclb
shl
mov
out
xor
sahf
pop
sub
mov
enter
fiadds
push
out
cmp
add
jge
pop
lods
pop
rorb
push
mov
dec
les
test
shrb
pop
xor
out
xor
and
outsl
outsl
xor
pop
fisubl
daa
and
xchg
js
jl
mov
ror
jmp
mov
pop
mov
mov
sbb
scas
outsl
lahf
and
xor
enter
mov
dec
fsubrs
mov
sarb
pop
xor
pop
lock
inc
outsl
mov
nop
test
je
adc
orb
xchg
outsb
sahf
mov
xor
int3
inc
sub
aad
rorb
mov
ret
xchg
mov
adc
rcl
mov
cmp
xchg
les
xchg
xchg
xchg
cli
sahf
or
into
in
push
imulb
add
mov
xchg
mov
call
ja
data16
mov
sbb
aaa
movsb
add
out
rcrb
loop
fisubs
xchg
cmp
sahf
scas
enter
mov
decb
pop
inc
pop
push
adc
lock
es
cmp
mov
icebp
xchg
xor
mov
js
das
fsts
enter
dec
mov
cli
int3
xor
shr
data16
jo
cmp
add
push
mov
sbb
out
cmp
cmp
movsl
pop
out
clc
or
push
adc
out
aad
iret
jge
mov
ja
enter
cmpsl
out
pop
cmp
inc
aaa
and
repz
adc
movb
or
scas
jmp
into
lahf
sarl
sbb
add
in
lahf
sub
ret
push
pushf
jle
push
addr16
cmc
jecxz
pop
sbb
dec
dec
adc
call
ss
into
in
push
mov
push
mov
or
test
push
popf
enter
push
push
adc
fadd
mov
jbe
pop
mov
enter
mov
clc
jle
jno
or
adc
je
dec
adc
popf
mov
mov
test
fsubs
rcl
das
movsl
test
dec
in
lret
pop
in
push
mov
repz
cmp
enter
jecxz
scas
fdivrs
cmp
mulb
aas
cs
mov
pop
aam
mov
dec
rcl
inc
mov
cmp
inc
std
test
push
mov
iret
pushl
xor
scas
cmc
push
sub
xchg
push
les
addr16
push
insl
xor
push
test
add
xor
xor
out
sbb
and
push
sbb
ror
adc
or
scas
inc
addr16
lret
enter
shlb
xchg
xor
xlat
and
out
es
outsb
add
inc
cmp
jl
xlat
out
pop
iret
pop
test
decb
sub
cmp
shll
push
addl
mov
enter
push
aad
scas
mov
addr16
sub
or
mov
xchg
cmp
xchg
enter
dec
sti
push
fsubrl
adcb
out
push
in
jl
mov
das
test
ja
insb
sub
shlb
pop
ror
pand
xchg
rolb
sub
or
or
jne
adc
pop
clc
jecxz
xchg
adc
adc
pop
pop
movsbl
cmp
push
inc
push
xchg
imull
aaa
pop
test
inc
nop
inc
jne
enter
shll
int
xor
sub
cmp
and
mov
jbe
adc
dec
mov
xor
mov
or
or
call
bound
fldl
insl
dec
mov
aaa
pop
and
cmp
dec
pop
shlb
fisttpl
in
insb
mov
lcall
and
xor
into
or
rcrb
rolb
xor
mov
rorb
mov
in
push
lods
dec
gs
fstpl
xchg
nop
xor
rcr
and
fsub
bswap
mov
or
fdivrs
roll
scas
iret
push
sahf
decb
inc
push
push
sub
cmp
xor
jbe
cmpsl
dec
jnp
or
add
fisttps
xor
mov
cmpl
adc
push
xor
stos
xor
pop
aas
ja
cmp
pop
jl
ret
out
dec
cmp
sbb
testl
test
jno
ret
pop
pop
lock
or
xor
and
lock
sbb
xchg
outsb
icebp
fdivrs
xabort
adc
dec
xchg
cmc
iret
jmp
cmp
jne
hlt
gs
cwtl
mov
xchg
xor
pop
push
movsw
mov
cmp
pop
shll
xchg
or
fmuls
nop
enter
in
ffree
and
or
adc
sarl
or
clc
sub
fsubs
lret
mov
scas
out
cli
in
lods
xchg
shl
mov
cmp
sbb
sub
sarb
nop
nop
dec
rcrb
mov
int3
shl
pop
adc
je
call
xchg
decl
adc
mov
faddp
and
mov
pop
shlb
pop
sahf
pusha
xor
mov
and
jae
dec
into
and
outsb
mov
mov
ror
scas
ficompl
nop
mov
out
je
fsubr
repz
jb
xchg
sub
js
scas
andb
mov
or
inc
mov
inc
arpl
out
cwtl
cpuid
mov
add
xchg
aam
and
mov
outsb
pushf
insb
lret
jmp
add
popa
jbe
push
dec
mov
inc
pop
cmc
inc
dec
aaa
cmc
cmpsb
ja
and
push
mov
data16
mov
mov
add
push
jnp
dec
cmp
fsubrs
lret
int3
push
mov
gs
mov
daa
bound
inc
ficoms
cmp
mov
xchg
frndint
sarb
jl
stos
and
rcl
int3
enter
dec
jno
dec
and
mov
ss
lods
mov
rorl
call
loopne
pop
out
and
call
lock
fs
adc
adc
outsb
pop
fimuls
dec
sbb
xor
test
push
sarb
ret
test
jo
stos
push
sbb
ss
inc
out
push
in
shlb
xor
cmp
testl
adc
repnz
and
movsb
cmc
xchg
call
shr
shlb
sahf
jb
pop
repz
das
movsl
cmc
sub
cmp
in
sub
cmpsl
xor
mov
pop
stos
ror
jle
or
xor
push
sub
enter
pop
leave
xor
int3
xor
cmp
cmpsb
stc
xchg
aad
adc
enter
cs
pop
jl
test
push
rol
pusha
enter
inc
arpl
scas
iret
jno
jg
pop
dec
mov
sub
repnz
inc
das
xchg
dec
fstps
pop
repz
int3
fisttps
rorb
xchg
ror
dec
aaa
loop
xchg
iret
sbb
adc
cmpsb
test
lahf
loop
fdivrs
mov
aaa
mov
pop
adc
lcall
xchg
dec
test
iret
mov
cltd
js
inc
ja
push
iret
push
nop
test
or
mov
fsubs
push
dec
loop
nop
imulb
in
loopne
mov
cmp
jp,pt
jle
int3
das
test
dec
fs
cmc
xchg
xor
pop
loope
xchg
inc
add
or
scas
gs
mov
jecxz
inc
jnp
rcr
sbb
lock
add
stos
fucomip
lock
insb
inc
dec
xor
ficomps
inc
movups
pop
cwtl
fbld
adc
stos
lret
int
cld
xchg
and
call
push
xor
daa
test
push
push
mov
xor
imul
iret
xchg
ret
nop
lcall
test
or
sbb
and
xlat
test
scas
or
sub
out
mov
adc
cmovp
push
pop
lretw
inc
call
cmpsl
fsubs
aam
mov
pop
popl
outsb
mov
push
sub
shlb
and
scas
push
gs
in
insb
push
insl
movsb
mov
icebp
ficompl
mov
nop
pop
sarb
xor
cmp
cmp
std
xchg
lods
mov
cmpsl
sahf
jg
lret
shlb
pop
outsl
and
ja
sub
rcr
xlat
enter
dec
sbbl
or
inc
dec
rclb
xor
sbb
fcomp
in
xlat
xor
push
xor
jge
add
push
adc
push
ss
and
sub
xor
daa
and
lahf
cmpsb
movhps
mov
mov
ret
cmp
push
into
pop
jl
push
int
mov
add
fimull
cmpsb
fnstsw
add
xchg
jb
push
mov
push
lock
daa
lahf
js
into
jbe
enter
push
sbb
jge
rorl
imull
jno
bnd
adc
call
aaa
shlb
jae
fbstp
mov
pop
fsub
fisttpl
hlt
xlat
in
dec
sbb
outsb
xchg
rol
loopne
outsl
adc
adc
pop
jge
out
outsl
lock
jns
mov
imul
jne
outsl
jl
js
xor
std
sbb
dec
dec
mov
and
xor
sub
hlt
clc
push
sbb
int
imul
je
add
dec
push
mov
test
cmpsb
cmpsb
cmpsl
lahf
xchg
push
es
std
lea
pop
inc
jl
mov
repnz
insl
and
int
stos
push
stos
fs
dec
rcr
notb
mov
int
fldcw
scas
xor
push
or
das
sub
lods
aam
xor
cmpsl
dec
mov
mov
stos
jmp
scas
ja
adc
outsl
shrb
dec
aas
adc
dec
popa
outsb
or
loopne
fisttpll
jo
imul
in
call
add
jge
stos
xor
pusha
stos
jo
adc
mov
push
cmc
in
push
sub
pop
sub
sub
adc
cmp
pop
mov
mov
or
xor
iret
inc
pop
iret
xor
pusha
mov
enter
cmpsl
sahf
lahf
repnz
dec
bound
push
adc
dec
negb
jecxz
out
nop
clc
dec
in
outsb
xchg
adc
repz
cli
fistl
iret
cmpsl
nop
xlat
sbb
xor
or
outsl
fisubl
inc
bound
adc
lret
fists
jmp
roll
decl
mov
dec
pop
sbb
xchg
fnstcw
out
inc
andb
pop
adc
xor
lahf
xor
into
shlb
pop
out
adc
xor
sbb
push
pop
lods
aas
in
pop
loope
lahf
and
outsb
das
std
cs
sahf
shlb
test
pop
int
jl
out
nop
jo
xor
sbb
ds
sbb
pop
insl
lock
push
xor
mov
pop
das
in
jg,pn
aam
rclb
test
pop
cmp
xor
call
fcoml
cs
mov
pop
shl
test
pop
lea
psubb
dec
call
adc
inc
hlt
test
pop
sub
xor
out
cld
sub
xor
push
das
lods
cs
test
dec
rcl
test
pop
std
pavgusb
call
adc
das
jo
shlb
fisttps
nop
insl
lock
adc
call
adc
pop
shr
sarb
mov
cmp
fsubrp
pusha
test
mov
mov
cs
mov
pop
scas
pop
and
sub
mov
rclb
adc
rorb
subb
out
sbb
mov
sbb
frstor
sub
subb
mov
popf
je
scas
and
subb
shrb
lcall
out
push
insl
xor
sub
or
and
lcall
int
outsb
popa
sub
outsl
xlat
xor
fnstsw
xchg
sub
cltd
movsb
test
nop
jg
mov
adc
iret
xchg
pop
mov
sub
bnd
lret
sub
lock
ret
or
mov
sub
adc
lahf
scas
jmp
and
shrb
cs
dec
in
addr16
daa
dec
mov
jle
imul
and
sub
aam
lahf
into
push
scas
jae
aam
pop
sub
into
mov
jbe
xlat
and
add
xchg
lahf
or
pop
xor
lahf
das
dec
mov
call
lahf
sahf
adc
mov
adc
out
adc
mov
lahf
lock
xor
mov
in
sub
sbb
test
scas
enter
lahf
icebp
inc
lock
pop
int
adc
sahf
dec
out
mov
lahf
sbb
pushl
ret
jbe
aad
lahf
fidivs
out
sarb
fidivs
mov
and
pop
adc
popf
les
adc
stos
mov
jo
out
outsl
call
aam
adc
lahf
sbb
dec
faddp
sub
mov
adc
and
adc
xor
fadds
sbb
lahf
rcrb
mov
enter
cs
into
pusha
push
pushf
and
hlt
jg
fisubs
testl
mov
pop
out
out
cmp
clc
cmp
xchg
dec
jae
aas
lahf
dec
bound
stos
das
jecxz
fdivrl
in
in
sbbb
rcl
adc
add
sbb
xor
lahf
shll
sahf
insl
lea
lret
or
lahf
scas
ficompl
stos
das
rorl
push
and
test
in
cmp
xlat
and
fadds
rcrb
outsl
sub
xchg
mov
shlb
or
mov
xorb
and
nopl
enter
shlb
sbb
mov
pop
leave
pop
ss
rorb
add
lods
and
xor
pop
cpuid
sub
and
sub
sub
das
or
sti
jge
adc
mov
xlat
imul
sbb
iret
mov
orb
jne
daa
and
lahf
pushf
loopne
push
aam
jne
out
lods
mov
outsl
dec
push
ss
mov
imul
adc
lahf
sbb
test
sub
test
or
mov
in
cwtl
adc
pop
int
outsb
jae
call
aas
lds
fcomp
xchg
pop
jb
stos
sub
sbb
imul
pop
lods
and
aas
ficoml
out
sub
jge
sbb
int3
xchg
test
sbb
sbb
pop
ret
loopne
jg
aas
je
ret
dec
jge
clc
iret
xchg
aas
int
sub
enter
out
aas
iret
lret
pop
push
push
popf
aas
movsb
pop
rcrl
repz
loopne
mov
test
lahf
pop
shlb
lahf
adc
scas
enter
dec
pushf
xor
sbb
pop
sub
pop
testl
or
sub
sahf
into
dec
or
scas
fisubrs
and
xor
cs
mov
xlat
mov
sub
shr
or
cld
notb
mov
sub
xchg
mov
in
xor
xor
std
fistpll
push
mov
lea
push
dec
mov
and
and
adc
dec
or
lods
adc
leave
dec
sub
into
pusha
cwtl
pop
les
pop
cltd
jo
cmp
push
addr16
pop
scas
cmp
dec
lock
and
inc
mov
outsl
adc
lods
or
in
inc
xor
dec
push
iret
lods
mov
and
pusha
add
adc
mov
daa
dec
mov
or
shlb
loop
testb
push
jle
lahf
sub
cmp
mov
lea
cmpsb
lahf
sub
test
and
sbb
dec
push
iret
nop
cmp
xchg
out
pop
lock
push
mov
lahf
into
pop
scas
int3
cmp
cmp
pop
dec
push
into
xor
shrb
lahf
test
and
aad
sbb
or
inc
arpl
faddl
dec
out
cs
mov
es
inc
cmpb
pusha
sub
rolb
rcr
shlb
pop
mov
inc
into
aas
push
aas
imul
adc
or
add
pusha
and
aas
rolb
sub
ja
and
mov
scas
je,pn
jle
and
and
cmp
sub
xor
jae
xor
xor
push
lahf
lea
push
or
pop
xor
ss
lahf
lahf
pusha
das
mov
pop
mov
xor
sarb
adcl
fisubrs
aam
and
rorb
das
outsl
jne
push
sbb
adc
scas
sbb
add
popf
insl
std
jge
cmpsb
lahf
pop
iret
mov
cmp
leave
adc
pop
cmp
mov
int
jge
cmpsb
lahf
pop
jge
adc
sahf
mov
or
lods
test
adc
adc
setno
sahf
loopne
lret
cmp
aam
adc
adc
stos
cmp
popf
push
inc
sub
lahf
xchg
fimuls
sub
lods
loop
mov
jno
nop
aas
lahf
jo
stos
in
das
repz
lret
sub
add
fisubrs
add
hlt
iret
push
aas
pop
pop
adc
repnz
das
lock
aam
fwait
cs
insl
jg
outsl
and
fbld
mov
xor
sbb
aam
cmp
cmp
and
pop
test
imul
xchg
fildll
sub
push
cmp
sbb
ljmp
mov
mov
nop
clc
jno
jle
in
cmpsb
lahf
pushf
adc
aam
test
mov
pop
aaa
push
std
ja
push
pop
inc
push
nop
repnz
fucomp
movb
outsl
cmp
jle
add
aas
popf
inc
das
jne
mov
jns
add
pop
lahf
cmpsl
xor
inc
out
xor
jns,pn
cmp
lahf
cmp
mov
aas
out
das
and
push
pop
adc
clc
das
test
into
fstpl
shr
xchg
fsubr
cs
sub
dec
push
lahf
lahf
test
fadds
aas
pop
setne
adc
movsb
sub
lret
sub
dec
outsb
mov
lahf
shlb
dec
sbb
push
xlat
dec
sbb
ds
sbb
outsb
cltd
rcll
pop
cmpl
stos
lahf
pop
shlb
lahf
adc
scas
cmp
sbb
shlb
sub
mov
lahf
jl
push
into
loop
lahf
cs
das
int
xor
ljmp
aam
adc
sub
mov
sub
and
out
lods
mov
stos
or
jge
out
sub
test
mov
xchg
outsb
je
dec
int
mov
ds
lahf
insb
and
out
mov
ljmp
or
push
mov
and
jge
and
and
fistpl
push
aad
or
xor
cmp
and
dec
in
sub
scas
pop
sti
adc
jae
lret
lahf
std
xchg
out
ss
pushl
mov
jns
mov
stc
loopne
xor
or
nop
xorl
push
pop
jo
insl
jge
mov
lahf
lods
das
mov
pop
sbb
cmp
test
pop
repnz
aas
aam
sub
jp
xor
bt
mov
push
stos
sete
and
mov
outsb
imul
adc
test
rclb
sub
lahf
dec
es
sub
jns
sbb
sub
inc
into
push
das
mov
fwait
pop
and
sub
lret
lahf
std
xchg
cmp
sub
and
lahf
aas
xorb
lahf
ror
int
movsb
cmp
shl
sbb
sub
mov
ja
mov
push
jge
jmp
ror
xchg
dec
in
cs
xor
sarb
lods
xor
arpl
mov
je
or
inc
cmp
pop
jge
scas
xor
push
shlb
push
push
push
mov
dec
jge
mov
push
cs
sub
cmp
xchg
lods
add
cmp
xor
jae
out
lock
aam
inc
fbld
jnp
cs
cltd
mov
out
hlt
sub
xor
pop
inc
test
je
aaa
sub
and
sub
subb
mov
mov
mov
add
lahf
push
xchg
xor
mov
lahf
cmp
fidivs
sub
xor
pop
aad
jge
clc
inc
enter
mov
iret
xor
xor
pop
lahf
scas
shlb
enter
and
out
lods
lds
loopne
push
iret
les
and
xor
cmpsl
mov
cmp
dec
push
test
dec
popa
jg
mov
dec
push
pop
sub
test
rcl
adc
ljmp
mov
dec
enter
sub
pop
inc
sarb
lea
cmpsl
paddq
stos
int
cmp
dec
sbb
push
popl
popf
mov
pop
sub
lds
fwait
rolb
xor
cmp
jle
cmp
jge
into
xor
scas
clc
add
aad
mov
jo
xchg
sbb
or
add
pop
pushf
pop
push
leave
lock
mov
and
rcll
loopne
lahf
rcrb
sub
mov
xchg
and
loopne
push
mov
inc
mov
loopne
adc
pushf
out
sub
sbb
loopne
lret
leave
xchg
xor
dec
pop
xlat
into
mov
lods
stos
push
push
sbb
rcrb
das
xchg
or
repnz
push
fwait
mov
add
adc
mov
loopne
shlb
lret
sub
fidivrl
xor
push
int
das
das
loop
pop
and
in
loopne
out
nop
loopne
ljmp
out
and
pop
sub
dec
sub
cmpsl
mov
dec
xchg
inc
loopne
sub
cltd
mov
xor
mov
movsl
je
lock
sbb
in
loop
loopne
rcr
scas
nop
mov
pop
adc
mov
sub
popf
addb
mov
aad
pop
gs
adc
pop
outsl
mov
xchg
es
scas
fldt
pop
cmp
add
into
mov
out
std
sahf
gs
pusha
dec
pushf
mov
loopne
mov
sub
scas
pop
and
pop
aad
mov
loopne
mov
ror
test
sub
sub
cwtl
and
ljmp
jle
call
in
cs
into
pushf
adc
pop
pop
clc
xor
mov
scas
nop
out
das
push
pusha
xor
adc
call
scas
xor
test
pop
andb
outsl
loopne
pop
gs
outsb
nopl
insl
xor
and
enter
rorb
ja
dec
ret
push
pop
lea
dec
shrb
inc
loopne
mov
movsl
jg
psubsb
add
lret
push
push
sub
pop
xchg
out
cld
icebp
outsl
loop
loopne
jge
dec
das
pop
pusha
xor
lods
call
add
daa
loopne
lods
jmp
dec
sub
cs
test
int
das
popf
dec
xor
xchg
rcrb
mov
std
loop
loopne
std
nop
das
das
aas
pusha
jl
ret
loopne
sahf
shrb
cmpb
mov
mov
and
xchg
insl
xor
repnz
into
xchg
xlat
sti
loopne
jo
das
fcmovne
cmp
fnstsw
sub
out
loopne
int
xchg
dec
out
loopne
rorb
shrb
jne
or
cs
loopne
fistps
in
mov
xor
call
movsb
cmpsl
jo
nop
loopne
push
shrb
test
sub
dec
xor
call
ret
int3
fadd
lods
cltd
ds
das
out
rcl
push
loop
loopne
jg
pusha
dec
xor
call
lcall
lcall
ljmp
sbb
jo
xchg
loopne
dec
dec
mov
outsb
xchg
gs
in
rcrb
repz
stos
loopne
mov
gs
call
pop
xchg
icebp
cs
push
rep
fcmovnu
mov
stos
cmp
test
lods
lods
fcompl
iret
cmpsl
sub
add
int
xor
xor
sub
push
jecxz
js
jno
loopne
xchg
jns
adc
xor
push
adc
adc
rclb
push
xlat
sbb
and
scas
dec
sbb
lock
and
push
xor
push
rcr
in
inc
shrb
int3
inc
cmp
mov
pusha
aam
and
rolb
in
loopne
fdivrl
inc
mov
in
push
dec
fsubrl
sbb
hlt
lret
setp
xchg
rcrb
outsb
cwtl
pop
setl
mov
int
sbb
sub
fistps
nop
ret
xchg
scas
cwtl
push
aam
movsb
xchg
das
mov
xchg
dec
mov
xchg
int
setl
mov
cmp
dec
push
or
xchg
nop
mov
sahf
add
xchg
enter
xor
adcb
push
pop
adc
xor
sub
test
xlat
and
test
mov
mov
xor
mov
enter
sub
xor
cwtl
sbb
xor
cmp
mov
nop
mov
sub
shrb
cwtl
sbb
sub
xchg
hlt
mov
mov
test
dec
xor
mov
cwtl
sbb
cmp
mov
nop
mov
sub
lods
push
sub
xchg
mov
inc
jg
sub
dec
into
push
push
xor
cmp
xchg
pop
xchg
sub
add
pop
pop
lahf
dec
mov
mov
xchg
jmp
jle
mov
arpl
aam
xchg
add
sbb
and
fwait
pop
sbb
sub
repz
cld
push
lock
inc
out
mov
push
dec
addr16
adc
scas
jb,pn
jg
xor
out
adc
xchg
into
pop
xor
adc
pop
push
adc
mov
mov
aam
icebp
sahf
mov
push
test
pop
xchg
mov
adc
jae
mov
jle
xchg
jo
hlt
push
push
pop
repnz
xchg
fistpl
hlt
je
dec
push
pop
shlb
aas
xchg
hlt
add
mov
dec
mov
loop
outsb
mov
adc
push
repnz
rcrb
xorb
shr
loopne
jno
inc
hlt
scas
icebp
sbb
shrb
push
ja
jge
mov
aam
sarl
fisubrs
std
movsb
inc
mov
jle
push
pop
xchg
out
je
push
mov
rcl
jg
inc
cmpsb
push
das
xchg
into
in
cmp
cmp
xor
push
std
xor
out
hlt
into
pop
push
mov
xor
mov
bnd
jae
repnz
mov
jae,pn
jnp
xor
jae,pn
cld
jnp
xchg
les
push
xor
repnz
pmuludq
shlb
mov
stc
sub
ret
fistpl
dec
fistps
push
mov
dec
les
adc
xor
pop
pop
xchg
pop
xor
pop
stos
pop
enter
sbb
push
pop
pop
cltd
call
pop
mov
pop
divps
int3
outsl
pushf
push
dec
test
adc
dec
push
lahf
mov
jb
rorb
dec
pop
add
outsl
movsb
xchg
add
stos
fidivs
outsl
je
fs
push
xchg
push
push
ficomps
mov
jge
push
clc
outsl
popw
and
xorb
sbb
js
lds
int
adc
jmp
mov
inc
lcall
shrb
lret
mov
and
or
mov
cs
dec
repz
lock
outsl
sub
lret
data16
adc
lods
arpl
add
cmp
lock
ret
jmp
cmpsl
and
sub
adc
outsl
daa
repnz
pop
xchg
adc
lods
pop
xchg
xchg
add
lahf
das
sahf
pop
cmp
mov
xorb
sahf
aam
pop
inc
pop
adc
jnp
shrb
popa
cmp
in
mov
sysenter
outsl
in
out
xchg
iret
xchg
dec
sbb
std
aad
outsl
mov
xchg
ja
jmp
movsl
and
outsl
sub
cld
fisubrl
and
outsl
mov
fisubrl
aas
jg
neg
fmul
das
int
ficoml
enter
fsubl
repnz
in
mov
pop
pop
add
fsubrl
mov
aas
or
lods
push
inc
xor
and
fld1
jl
shlb
mov
hlt
shrb
ljmp
mov
lea
xor
xchg
in
sarb
je,pt
sbb
push
adcl
clc
cs
and
shll
push
sub
mov
sbb
jmp
fcoms
mov
dec
cmp
movsl
cmpsb
fcompl
outsl
push
frstpm(287
mov
fidivrs
das
loopne
shlb
jmp
out
loopne
mov
adc
jmp
rclb
fisttps
imul
call
add
xor
dec
pop
test
mov
out
mov
jecxz
aaa
mov
enter
sti
pusha
jmp
push
push
push
call
or
insl
lock
insl
leave
loopne
or
loope
ret
mov
xchg
fisubl
dec
fstl
adc
rcrb
and
jl
jnp
jge
fsubl
nop
pop
test
xlat
outsw
or
pcmpgtw
scas
add
iret
rolb
in
roll
shl
inc
pop
jl
cli
fsub
add
lahf
cmp
mov
pop
pop
xor
in
pushl
shld
nop
mov
clc
outsl
sbb
sub
std
cmp
clc
fimuls
pusha
dec
inc
fbstp
cs
scas
xor
in
pop
mov
sub
rcl
das
loop
arpl
cmp
scas
repz
rclb
push
repz
mov
loopne
cmpsb
jmp
loopne
icebp
aad
fbstp
cld
push
hlt
and
mov
dec
lahf
negl
iret
movsl
mov
jno
sub
jecxz
mov
cmp
movhps
fmul
dec
sar
mov
sti
jo
mov
fwait
mov
outsl
add
stos
loope
adc
stos
sub
test
cwtl
xchg
and
movsb
mov
inc
push
sub
test
and
shlb
into
mov
xchg
das
daa
push
fildl
inc
xor
lahf
inc
xorl
in
dec
adc
mov
lock
fldt
push
inc
inc
inc
mov
orb
int
test
mov
stos
ret
imull
loopne
sbb
das
dec
push
rcrb
add
fildll
fsubrs
jge
std
cwtl
mov
out
lock
jl
push
das
cmp
loop
and
mov
sub
mov
push
mov
insl
daa
mov
pop
shlb
xor
mov
pop
notl
inc
cld
jno
out
lock
outsl
shlb
pop
dec
mov
insl
pop
add
cld
in
test
and
dec
out
mov
adc
mov
or
pushf
push
scas
mov
pop
or
mov
popf
adc
mov
jmp
mov
mov
sub
push
xchg
sbb
xor
pop
pop
pusha
adc
sbb
insl
push
imul
outsb
adc
jne
lods
cs
adc
scas
mov
jle
inc
xlat
mov
sub
test
out
popf
fistpll
daa
lahf
push
in
xchg
das
out
mov
xor
scas
in
jle
cmc
push
lea
and
sbb
jg
jno
fisttpl
lods
pop
cmp
rcrb
pop
adc
and
out
xorb
and
xchg
sbb
shl
shlb
push
mov
shrb
dec
std
mov
and
ror
xor
jae
mov
ret
mov
adc
in
aad
mov
repz
pop
xchg
cli
enter
rcl
js
in
pusha
faddp
dec
lcall
dec
out
jge
dec
rorb
pop
dec
pushf
out
xchg
inc
mov
call
jecxz
mov
sub
enter
movsb
iret
jmp
pushl
pop
mov
cs
jge
xor
mov
mov
mov
mov
pop
mov
add
mov
insl
xorb
and
inc
sarl
jecxz
lods
sarb
nop
xor
inc
imul
fdivp
aam
enter
in
xor
int
pop
test
xchg
cmp
push
fstpt
pop
das
iret
std
and
scas
xchg
add
das
jb
sub
xchg
jl
pushf
inc
and
sub
in
adc
leave
jmp
mov
stos
call
popw
popa
xchg
adc
pop
mov
loopne
dec
cmp
aam
int
dec
cs
dec
mov
lock
fcomps
insb
push
adc
das
push
data16
pop
aas
subb
xchg
inc
mov
xor
sub
data16
mov
sbb
ror
push
fwait
xlat
movsl
dec
data16
push
outsb
call
cmovbe
pop
and
xor
call
jecxz
mov
and
cmp
pop
sbb
mov
sbb
dec
mov
mov
fcmovnu
test
mov
mov
jns
dec
outsl
mulb
dec
test
dec
push
shl
lahf
sbb
sbb
shl
fdivl
pop
enter
lods
push
les
push
cmp
mov
adc
lahf
and
dec
inc
push
xchg
rol
and
idivb
mov
cmpsb
loopne
pop
sarb
sub
and
pop
push
adc
rcl
pop
and
fstpl
repz
cmp
sti
lahf
cmp
push
adc
xchg
lret
sbb
pop
pop
add
fcoms
rorb
addb
push
sub
and
aas
ror
inc
pop
fisubrl
aas
out
push
iret
ljmp
cmpsb
jle
into
les
sbb
push
pop
dec
bound
rcrb
daa
gs
ljmp
dec
fnstcw
mov
popf
mov
adcb
int3
sbb
das
testl
dec
pop
push
pop
xchg
iret
dec
call
into
dec
adc
mov
cmpb
aad
jmp
xorb
pop
aad
mulps
jbe
cld
mov
push
in
mov
out
rcr
and
scas
shl
and
xchg
aaa
ret
and
ss
push
call
lock
mov
outsb
loop
scas
mov
mov
subb
sbbb
dec
and
lods
out
mov
push
mov
push
sub
out
lods
adc
add
shrb
aas
data16
out
shrb
mov
repz
int
dec
push
rcl
fidivrs
daa
xlat
ljmp
das
scas
rolb
aad
aaa
mov
outsb
psubusb
rorb
and
mov
sbb
and
cmp
pop
xor
repz
xor
scas
cli
xchg
xor
fs
xchg
loopne
and
popf
in
mov
and
movsb
cmp
outsl
sub
pop
aas
rorb
jae
outsl
xor
fadd
inc
jae
aad
movsl
ja
push
int
rclb
sbb
push
xor
sbb
popa
push
out
aaa
mov
cmc
aas
add
jmp
out
and
dec
int
into
popf
inc
xchg
and
add
clc
lcall
jl
or
sahf
nop
mov
fadds
mov
cmpsl
ret
lods
leave
push
jb
getsec
xor
sub
inc
mov
mov
pop
xor
scas
lock
add
xor
xchg
adc
or
xchg
nop
pop
cmp
push
into
adc
jb
or
sti
pop
js
sti
pusha
inc
aaa
jbe
scas
adc
fisubrs
mov
mov
mov
rorb
pop
lcall
adcb
cmp
pavgw
rcrb
mov
lock
push
loopne
xlat
add
lods
pop
adc
xlat
sbb
add
pop
sbb
xchg
xor
cmp
xchg
cmp
and
outsl
int3
fcomps
sti
int
cmp
mov
pop
cmp
pop
daa
nop
outsb
dec
jae
adc
dec
jne
mov
les
cmp
pop
mov
and
mov
xadd
shlb
mov
jb
or
adc
in
test
loop
mul
repz
das
lahf
iret
ret
lods
fidivs
mov
out
lods
into
jge
and
or
sahf
js
xor
or
adc
lahf
fstl
nop
mov
xchg
lock
jb
fiaddl
lret
pcmpgtw
fiadds
dec
jns
iret
mov
xor
gs
mov
fsubrl
test
adc
cld
fcmovnbe
scas
fistps
cmp
dec
mov
fisubrs
loop
or
xor
lret
pop
sub
fs
fstpl
dec
aad
cmp
jne
call
ret
pop
sbb
mov
pop
inc
cmp
sar
and
adc
or
ret
or
fstps
lcall
in
lahf
jnp
int
cmp
jb
cmpsl
das
push
nop
cs
lock
sbb
cmp
movsl
xchg
ret
movsb
jecxz
lret
rcrb
xchg
sbb
shr
outsl
popa
cmp
or
pusha
shl
inc
pop
pop
ss
outsl
out
scas
test
add
xchg
outsb
orb
scas
iret
repnz
pop
mov
adcb
xchg
hlt
mov
inc
jnp
std
and
clc
cmp
cmpsb
jg
mov
and
push
jle
aaa
lcall
loopne
scas
sbb
dec
call
cld
pop
pop
push
aaa
fsubs
jo
cmp
xchg
xor
mov
ds
dec
sub
es
dec
faddl
outsb
mov
mov
push
loopne
mov
pmaxub
repnz
lock
outsb
mov
mov
jmp
fistps
in
cs
aas
and
pop
jg
in
rorb
fimuls
in
dec
shll
test
pop
std
jno
fmulp
mov
shl
lret
cs
dec
mov
into
lock
lret
jmp
and
clc
xor
decl
add
push
or
jbe
loopne
mov
mov
sub
out
cld
fsub
shlb
dec
call
jns
scas
popa
mov
fcompl
cwtl
in
mov
and
adc
scas
sbb
repnz
dec
bnd
pushf
ds
mov
repnz
popf
pop
pop
or
mov
push
dec
dec
cmp
push
ret
gs
mov
dec
push
mov
shrb
sar
in
dec
and
call
dec
mov
aad
dec
xlat
pop
clc
push
out
adc
nopl
inc
lahf
andl
sbbb
insb
scas
xchg
xchg
cwtl
aad
outsl
dec
rol
imul
hlt
and
icebp
scas
cwtl
imull
outsl
ffreep
into
push
mov
fiadds
int
stos
mov
cmpsl
mov
dec
enter
sbb
dec
and
xor
shrl
sub
aam
loopne
add
clc
das
aad
pop
imulb
sub
sbb
xor
pusha
popf
mov
pop
mov
add
scas
mov
bound
xchg
popf
or
sub
xchg
jo
mov
pop
mov
test
movsb
and
aas
dec
pop
sahf
nop
testb
pop
call
rorl
and
fisttpll
xchg
fisttpl
cmpb
mov
push
xlat
sub
inc
inc
xchg
rclb
dec
jg
fdivr
dec
sbb
xor
iret
hlt
jle
sarl
fmuls
mov
push
adc
xor
shl
les
fmuls
and
fidivs
mov
mov
test
fsubr
rolb
push
add
fcoml
das
xchg
lods
repz
outsb
lea
and
nop
fucomip
iret
fwait
mov
shlb
cmc
rcr
popf
xchg
dec
lods
adc
pop
xor
sbb
push
ss
call
mov
pop
mull
adc
xor
push
repz
push
cmp
or
mov
sbb
popa
mov
out
jecxz
in
xchg
pop
xor
shr
jl
int
sahf
clc
dec
popa
xor
cmp
nop
gs
xchg
inc
sub
enter
xor
fisubs
fistpll
scas
xor
cmp
cltd
stc
or
call
fisubrs
popf
cmp
lahf
test
les
into
push
adc
adc
cltd
dec
pop
jmp
cmpsb
sahf
nop
dec
push
xchg
inc
xchg
outsb
pop
aas
pop
loopne
inc
ds
clc
shlb
inc
out
sbb
popf
mov
mov
shr
xor
ror
mov
in
clc
scas
sbb
adc
mov
push
mov
push
ret
dec
mov
sub
and
negb
shrb
mov
outsl
mov
in
inc
and
mov
ret
scas
cmp
and
lcall
push
pop
add
push
and
seto
adc
arpl
push
sar
mov
out
push
jnp
in
bswap
sbb
fists
popa
xchg
in
clc
loop
cmp
into
lea
xchg
outsl
and
xchg
xchg
pop
sbb
jle
push
loopne
iret
iret
fdivrl
cmp
icebp
dec
dec
nop
lret
insl
movsl
lea
aaa
repnz
fsts
lret
pusha
cmp
movl
ss
xchg
push
scas
add
lock
in
and
inc
out
scas
jle
pop
in
jns
scas
je
jp
ljmp
xchg
jg
adc
and
aam
and
xchg
push
std
jge
jmp
prefetch
dec
mov
ja
rolb
push
sarb
lahf
aaa
lea
mov
sbb
call
es
mov
sahf
push
add
das
test
movsl
ja
or
sbb
scas
pop
in
repz
mov
mov
mov
scas
icebp
loopne
jae
mov
xor
fwait
adc
pop
rcrb
push
jp
data16
cmp
mov
and
cmp
shrb
mov
sbb
cmp
scas
mov
cmp
rorb
jbe
cs
nop
inc
jle
xchg
xchg
or
mov
cmp
iret
loopne
inc
rolb
mov
imull
pop
int
into
push
scas
sahf
outsb
std
mov
mov
clc
test
ljmp
jb
mov
iret
push
clc
push
mov
lods
arpl
enter
cld
or
movsb
push
clc
ficomps
jae
aas
loopne
pusha
shll
ds
mov
lcall
adc
xchg
pop
hlt
clc
and
clc
or
dec
loope
sub
mov
aas
nop
cmpb
adcb
dec
mov
aaa
mov
inc
test
filds
lea
js
xchg
das
push
push
pop
and
in
cld
pop
mov
sbb
inc
into
xchg
lcall
jge
js
rorb
ss
xor
pushl
adc
loopne
sub
mov
test
scas
pop
ss
xchg
pop
and
call
cwtl
mov
outsl
lahf
push
in
inc
push
pop
mov
aas
push
or
jecxz
dec
fimuls
dec
push
loopne
clc
sahf
mov
iret
clc
aaa
pop
cs
test
aam
stc
divl
jb
mov
daa
insl
mov
popf
sbb
aas
pushf
xor
ds
aas
mov
dec
inc
or
jecxz
scas
sub
test
and
repnz
decl
mov
cs
int
xchg
nop
add
push
pop
popf
mov
shl
daa
cwtl
into
lock
outsb
test
scas
lock
xchg
lods
rcrb
adc
cmp
xchg
dec
imul
dec
lods
xor
mov
fstpt
lock
xor
scas
fisubs
cmp
xlat
sub
xchg
aas
dec
adc
movsl
xchg
gs
ror
outsl
ds
xor
dec
mov
loop
repz
cmp
cmp
rorb
outsl
enter
xor
sbb
movsl
jne
scas
mov
pop
and
mov
lock
fisttps
call
lahf
jo
out
cwtl
into
outsl
ja
in
out
and
mov
rol
test
push
hlt
lret
popf
iret
add
das
pop
dec
push
xor
mov
jle
mov
xchg
xchg
loopne
std
xor
vpshuflw
ret
lahf
lea
sti
jge,pn
xor
push
sbb
mov
in
push
add
js
jbe
lahf
rcrb
and
fisttps
lfence
rcrb
cmp
xchg
pop
cmc
ja
repnz
adc
pop
xchg
dec
mov
lahf
aas
inc
adc
call
aas
cld
shl
cmp
popf
clc
adc
std
dec
rorb
das
mov
xchg
inc
jne
add
fsubl
lods
jb
lcall
jge
push
lea
ss
rcrb
push
movsb
icebp
mov
pop
roll
jle
jne
movsb
lock
call
pop
enter
mov
mov
jecxz
pop
bound
lock
test
jg
sahf
jge
adcb
mov
call
scas
lahf
clc
gs
xchg
mov
das
mov
js
add
fwait
push
mov
lock
dec
dec
fsubrs
test
in
lea
ret
xchg
inc
out
and
das
cmp
cmp
cmpsl
inc
mov
inc
ljmp
xchg
xchg
movsb
lock
adc
mov
cmp
dec
pusha
orb
pop
sbb
mov
outsl
pop
cmp
test
fidivrs
lods
scas
lahf
dec
sar
mov
and
push
push
test
pop
xchg
inc
push
movsb
jp
push
loopne
fsubl
pop
pop
adc
call
aas
cmp
and
xchg
mov
out
and
lds
pop
test
lock
xor
psrlq
js
add
pusha
movsb
dec
sub
cmpsl
aas
ret
or
loopne
push
call
cmp
and
fs
jmp
repnz
mov
repz
in
loopne
and
test
cltd
aas
or
shrb
movsl
lret
mov
nop
jge
and
mov
pusha
push
es
cmp
xorb
sub
popf
xlat
fsubp
dec
scas
insl
mov
mov
loopne
cs
dec
pop
das
dec
push
xchg
stos
hlt
nop
fcoml
mov
les
das
cmp
je
cmc
xchg
sub
outsb
cwtl
push
das
pop
addr16
dec
push
mov
lock
push
mov
adc
dec
dec
and
sub
iret
mov
pop
movsb
xor
mov
iret
dec
ljmp
xchg
mov
mov
mov
idivb
insl
sbb
xor
ss
inc
xlat
shr
cmpb
jns
xor
mov
pop
rcl
adc
scas
into
shlb
dec
movsb
adc
mov
lea
test
test
lret
cs
cs
loopne
imul
rclb
mov
mov
and
or
mov
clc
mov
dec
aam
das
pop
call
sub
pop
sbb
jae
sub
add
jnp
sbb
xor
out
push
clc
repnz
inc
shll
sahf
out
mov
orb
test
jbe
dec
cmpsl
mov
mov
sbb
aaa
das
loopne
pop
daa
mov
mov
out
cmp
push
ret
xchg
movsl
scas
xchg
in
test
dec
or
in
nop
mov
or
outsb
sar
mov
pop
dec
lods
lcall
cs
sbb
push
stos
std
aaa
repz
lods
out
repnz
xor
xchg
sub
lock
cli
cmp
std
movsb
cs
lods
sub
pop
and
scas
jb
push
cmpsl
pop
mov
iret
mov
pop
test
pop
arpl
shlb
mov
jo
sahf
push
lahf
dec
das
fisttpll
mov
add
pop
inc
xor
dec
jle
pop
pushw
xlat
cmp
ror
pusha
arpl
push
je
fidivrl
adc
push
fildl
xor
dec
pop
faddl
nop
xlat
mov
fneni(8087
pop
outsl
pusha
pop
shlb
dec
lret
xor
dec
out
pop
and
xchg
loopne
rcr
andl
add
lock
xchg
into
popf
dec
add
inc
lock
lea
adcb
cwtl
clc
iret
jae
call
jg
dec
cmp
mov
mov
jns
dec
inc
insb
lock
lock
nop
outsl
iret
sub
mov
shll
xchg
jmp
scas
sahf
inc
push
orb
pusha
mov
dec
repz
out
pop
ljmp
repz
add
mov
add
adc
scas
mov
lods
cwtl
rol
outsb
das
mov
jmp
sbb
fucom
and
das
pushf
adc
xchg
mov
sbb
fstpl
lret
inc
sub
dec
mov
inc
xchg
fidivl
fdivrs
dec
pop
jge
int
rorb
jmp
outsl
scas
lea
dec
int3
out
in
dec
xchg
cwtl
sahf
adc
mov
xor
push
iret
and
push
mov
xchg
scas
sarb
aas
in
rcl
shrb
adc
cld
xchg
ds
ss
idiv
cmovs
ja
sub
cwtl
adc
arpl
add
pop
fdivrl
in
cld
xchg
movq
sbb
fstpt
adc
mov
int
call
pushf
push
jle
mov
loopne
dec
push
push
and
pop
mov
add
push
xchg
outsl
sub
cmpb
int
into
or
xchg
xchg
pop
pop
dec
push
push
inc
rcrb
push
jne
pop
lods
push
shl
mov
push
mov
rclb
mov
rclb
sarl
add
mov
call
fcoms
cmp
lret
sar
enter
mov
shr
mov
bound
xlat
sub
mov
mov
scas
cwtl
into
outsl
test
imul
test
outsb
loopne
in
sti
lea
ds
mov
add
sarl
enter
adc
mov
pop
or
mov
repnz
sahf
call
sahf
add
andb
xchg
mov
pop
rolb
fidivrs
bound
movsl
out
mov
nop
lahf
loop
clc
out
xchg
mov
cmp
pop
call
loopne
cs
jnp
and
scas
inc
shl
mov
loopne
push
jo
cs
mov
or
rolb
fisubrs
test
clc
or
xchg
out
movsl
inc
std
popa
fmull
notrack
adc
arpl
clc
sub
pop
fnstsw
push
dec
test
rcl
sub
in
in
xor
pusha
in
push
rorl
lock
popf
mov
das
pop
xor
clc
rorb
out
test
outsl
pop
pcmpeqb
pop
xchg
int
enter
xchg
mov
into
out
call
ljmp
sbb
hlt
lock
mov
scas
and
or
outsb
into
aas
loopne
push
loope
push
or
sbbl
enter
mov
pop
sahf
mov
pop
jns
outsl
jg
mov
fs
nop
sbb
xchg
mov
int
lods
mov
dec
cmp
adc
mov
push
je
iret
sahf
xchg
and
dec
cmp
into
mov
fs
aaa
lock
mov
mov
repnz
jg
test
sbb
and
popf
xchg
sbb
rolb
pop
or
lock
aas
and
fst
lea
addr16
outsl
mov
test
loope
pusha
mov
jg
mov
shrl
dec
dec
fwait
cld
int
sarb
inc
sbb
je
das
test
mov
cmp
insl
aad
push
das
out
lods
mov
nop
orb
push
xchg
scas
or
mov
iret
inc
loopne
cltd
mov
int
dec
push
test
sub
cld
popa
xor
sbb
fmuls
xchg
jo
jle
xor
dec
repnz
es
or
push
jge
ds
push
scas
movl
mov
adcb
lret
mov
out
push
loopne
addb
mov
push
inc
xlat
lea
scas
les
rorb
loopne
inc
and
test
nop
loopne
test
aad
xchg
scas
lretw
das
lock
lock
rolb
sbb
fsubp
adc
dec
ret
sbb
pop
cmc
out
jge
pop
nop
pop
outsb
lret
js
or
pop
pop
and
or
ds
dec
rcl
es
fwait
jge
lahf
in
pavgb
xlat
push
mov
pop
mov
lahf
sti
aam
xor
aaa
xchg
dec
pop
rol
das
inc
imul
data16
pop
hlt
cmp
dec
popf
pop
pop
aad
push
jge
into
shlb
jecxz
movsb
xlat
mov
mov
mov
popa
daa
pop
mov
push
lock
jnp
out
dec
fstpt
jne
sub
std
dec
add
dec
xor
mov
jae
pop
push
loop
mov
das
dec
insl
leave
or
imull
adc
push
outsb
popf
xor
lahf
int
and
dec
jg
mov
popa
and
mov
paddq
jg
pop
pop
mov
ret
inc
imull
data16
jo
xor
pop
xor
lods
dec
in
or
popf
mov
sbb
addr16
jno
call
inc
inc
outsl
repz
cmp
mov
pop
das
rcrl
inc
sti
cs
dec
pop
mov
in
dec
cmpsl
test
into
pop
into
repnz
and
xchg
or
sahf
mov
or
pop
mov
cmp
pop
not
xadd
in
fdivl
and
mov
icebp
addb
dec
jae
mov
lret
sub
lahf
push
or
dec
xchg
lods
shlb
enter
lahf
rcrb
sahf
mov
das
loopne
fbstp
or
inc
pop
lock
pop
int
aam
dec
pop
js
scas
mov
cmp
out
data16
fisubs
or
dec
in
mov
dec
scas
clc
int
mov
pop
scas
rclb
data16
negl
test
ja
outsb
iret
std
dec
fwait
dec
push
pop
lds
dec
and
xor
outsb
sbb
inc
push
adc
adc
mov
or
xor
pop
into
adc
xchg
and
aas
addb
sub
mov
fistl
lahf
and
ret
dec
mov
pusha
pop
mov
aas
fsubr
push
mov
rclb
subl
push
arpl
in
clc
mov
xor
filds
outsb
mov
das
jo
xchg
sbb
testl
das
dec
jbe
incl
inc
cwtl
pop
lahf
scas
iret
cs
sahf
into
pop
mov
scas
mov
adc
out
mov
push
and
mov
sahf
adc
jae
fdivrl
jne
jo
mov
adc
xchg
ja
scas
mov
loopne
or
jge
dec
gs
int
pop
lock
adc
je
dec
jmp
jno
inc
cmc
xchg
mov
cwtl
sahf
push
in
pop
push
lock
mov
dec
cmp
outsl
pop
mov
enter
cmp
scas
fldl
sbb
adc
mov
add
jb
push
xchg
popf
push
pop
push
notl
loopne
clc
sbb
nop
inc
ja
sub
fadd
jl
es
lahf
xor
mov
xchg
xchg
out
sub
scas
imul
je
and
xchg
mov
pop
add
shlb
mov
adc
sub
pop
or
iret
aas
push
jle
pop
push
dec
adc
test
stc
jb
push
int
xor
repz
cmpsb
push
fisubrs
decl
iret
out
mov
inc
nop
and
jl
je
mov
das
jle
jg,pn
lock
pop
lea
testl
jge
rcll
xchg
pop
jnp
mov
fcmovnu
scas
cli
dec
mov
into
add
and
inc
jecxz
or
mov
loopne
push
outsl
dec
pop
data16
xor
pop
int
aaa
dec
outsb
jmp
cmp
cmp
leave
xchg
mov
push
fistpl
add
in
dec
lods
dec
mov
insl
out
fldl
mov
movsb
insl
outsl
and
imul
cmpsb
mov
scas
loopne
pop
push
inc
cld
orl
and
cmp
imul
sbb
lods
pop
call
ss
push
pop
xor
arpl
inc
push
or
cld
mov
inc
idivl
rolb
mov
push
pop
femms
lock
jae
mov
adc
mov
jae
mov
push
adc
jge
xlat
pop
inc
call
adcb
cmpb
scas
cs
ret
pop
mov
push
cs
lock
inc
adc
jbe
test
mov
mov
push
scas
rorb
add
pop
gs
mov
cmpb
sub
aas
xor
cld
sbb
pushf
cld
mov
dec
or
pop
imul
into
dec
shll
pop
enter
adc
mov
rorb
test
add
into
mov
push
testb
popl
outsb
xor
dec
pop
bound
mov
jg
test
lret
insl
out
cmc
fs
ja,pn
ror
push
push
mov
js
out
mov
xchg
mov
cltd
mov
add
sbb
lock
jmp
adcb
andb
scas
pop
movsl
and
pop
cmp
lahf
enter
mov
sahf
enter
ja
sbb
inc
das
loopne
in
and
dec
jp
test
scas
xchg
rclb
push
mov
adc
fistpl
mov
pusha
movb
mov
leave
adc
daa
push
loopne
outsl
pop
jo
mov
rolb
jo
cs
lea
mov
push
dec
shrb
ficomps
in
mov
mov
or
dec
bnd
out
fmuls
or
pop
xchg
pop
xchg
sbb
push
lock
jle
popf
mov
sbb
xchg
imull
aas
ss
xchg
decb
xchg
inc
mov
sub
dec
sub
sbbb
mov
pop
push
push
rcl
lcall
pop
adc
pop
arpl
into
mov
dec
lea
jmp
jg,pn
scas
imul
cmp
inc
aas
inc
cmp
outsb
pop
in
xchg
mov
jnp
scas
into
dec
and
and
out
sbb
jo
and
add
daa
cmp
jae
sahf
fistpl
lcall
jae
sub
jnp
das
das
sbb
sub
dec
pop
push
xchg
scas
cmp
inc
add
lcall
repz
push
scas
jecxz
in
lods
dec
testb
push
scas
jns
add
and
jg
outsl
xchg
pop
lods
mov
jno,pn
mov
dec
pop
inc
lods
push
mov
sub
pop
jmp
rorb
jb
xor
fstpt
mov
mov
mov
sbb
insb
out
add
fmull
lock
stos
sbb
pop
nop
add
pop
adc
dec
sub
int
mov
lods
dec
adcl
into
jnp
inc
or
outsb
test
or
cmp
xor
xor
in
in
mov
mov
adc
ljmp
dec
mov
xor
adc
loop
push
das
pop
dec
push
xchg
ret
or
adc
add
sarb
dec
pop
xchg
into
push
add
rolb
cwtl
or
imul
dec
sub
jno
dec
sub
lret
fistpll
inc
imul
bound
inc
push
in
sub
sbbb
pop
mov
hlt
lock
sahf
xchg
dec
inc
inc
fsubr
xchg
arpl
in
test
addr16
orb
xchg
xchg
sub
and
xchg
les
je
inc
sub
mov
bound
inc
fildll
stos
pop
pushf
inc
dec
fstpl
inc
inc
decl
dec
add
or
test
rcrl
in
inc
test
lahf
pop
jge
test
cli
lret
and
insl
pop
das
into
cmpb
pop
dec
mov
test
das
fwait
stc
outsb
mov
gs
dec
movsb
fnstsw
aaa
ds
loopne
loope
iret
sub
dec
in
push
into
inc
mov
cwtl
int3
dec
subb
sarb
mov
scas
aaa
add
aad
xchg
hlt
xchg
mov
outsb
mov
imul
or
loope
inc
inc
add
cwtl
mov
jae
jmp
jge
out
fisttpl
scas
pushf
fwait
xchg
or
adc
shll
dec
rclb
mov
cltd
and
dec
jne
jecxz
outsl
pop
aas
idivl
xlat
movsl
ljmp
call
popf
pop
xchg
loopne
cmp
lock
jae
xchg
jne
sbb
sahf
outsl
movsb
hlt
das
inc
mov
cltd
jmp
adc
popw
dec
cmp
sarb
lock
ficoms
sbb
inc
shl
fadd
pop
jne
scas
call
cmp
das
sar
dec
push
mov
fdivrs
mov
pop
cmc
fmull
mov
cld
mov
sahf
fsts
sub
in
ja
rcrl
lock
icebp
xchg
addr16
in
mov
das
hlt
notl
in
ror
cs
je
popf
push
dec
movsl
xor
dec
xor
test
fistpll
xor
mov
scas
push
in
push
fadds
nop
xor
push
ret
ja
mov
fadd
cmp
dec
out
pop
mov
fs
pushf
lods
or
scas
clc
push
cmp
call
cmp
ret
nop
dec
hlt
dec
rclb
loopne
repnz
sahf
adc
hlt
aas
pop
pushw
push
jb
movsl
repz
int
sahf
adcl
xchg
nop
inc
pop
ficomps
hlt
outsl
loopne
stc
add
xor
hlt
jmp
movl
xlat
and
ficoms
jae
inc
ret
mov
sti
pop
aas
mov
into
push
aaa
add
popf
mov
in
xchg
inc
cmpsb
mov
das
push
dec
mov
pop
fnstsw
mov
ror
call
rorb
out
mov
mov
cs
shrb
jno
inc
lcall
xchg
filds
mov
outsb
mov
mov
jecxz
cmp
xor
inc
xchg
fldt
into
scas
repnz
sbb
xchg
insb
inc
fisttpl
dec
pop
or
jge
lahf
cwtl
or
pop
divl
lods
mov
gs
or
pop
subl
push
rclb
jb
lcall
in
loopne
pop
dec
nop
xchg
mov
std
lret
pop
cmc
xor
repz
mov
lea
rolb
inc
out
cwtl
push
ss
xorl
sahf
pop
lahf
xlat
xor
push
dec
inc
jle
push
sti
es
mov
ret
and
sub
xor
jbe
lock
cmpsb
fiadds
cmp
clc
cmp
and
push
fdivl
imul
rcll
repnz
pop
pushf
push
mov
cld
xor
ds
psrld
popf
push
or
out
pop
xchg
das
jmp
lahf
cmpsl
xchg
nop
int
sahf
ret
pop
adcb
lret
inc
xlat
sbb
mov
lods
jb
int
push
fstl
insl
rclb
sahf
cmp
fwait
mov
nop
mov
arpl
std
cmc
clc
outsl
push
inc
imul
mov
popf
jge
jecxz
nop
pop
mov
fldl
sti
aaa
cmp
mov
pop
push
jg
insl
das
loop
movsl
mov
xorb
ljmp
loop
loop
movsb
lods
and
popa
shrb
mov
arpl
cmp
push
sahf
inc
jns
movsl
sub
shrl
or
dec
pop
push
sbb
jg
pop
fsubp
imul
out
and
jo
and
pop
frstor
ret
into
pop
test
dec
test
lea
pop
mov
mov
push
sbb
sub
inc
cltd
mov
aad
mov
dec
ret
loopne
pop
rorl
inc
pop
dec
loop
jmp
inc
notb
adc
mov
stos
orl
mov
dec
push
pop
xchg
dec
mov
std
popf
xlat
clc
int
pop
in
push
fwait
addr16
add
ljmp
out
sub
adc
dec
cmp
sub
inc
sub
std
mov
adc
movsb
addb
push
dec
xchg
xor
jle
rorb
subb
ret
arpl
mov
mov
rcl
loopne
and
jmp
push
clc
ret
lock
addr16
shr
sub
mov
inc
mov
xchg
stc
push
in
adc
std
repz
dec
mov
xchg
ficoml
jle
movsb
nop
aad
and
adc
mov
xor
sub
add
mov
pop
ret
out
popf
addl
fistpll
lea
pop
loop
mov
xorb
rclb
repnz
enter
cmp
movsb
std
and
pop
adc
ds
mov
push
rcr
mov
scas
mov
mov
push
das
cs
xor
inc
pop
jnp
and
push
cli
iret
test
jecxz
mov
or
lds
adc
jl
mov
inc
jno
push
test
ret
shlb
mov
xchg
es
jbe
adc
test
sub
cld
neg
sbb
shrb
lret
mov
xchg
dec
fiadds
mov
cmovbe
pusha
inc
sbb
mov
or
pop
lock
adc
popa
xor
adc
xorb
std
jns
movsb
lret
inc
dec
xchg
mov
imul
pop
fimull
add
push
or
push
outsb
inc
cwtl
lea
lods
inc
scas
xor
mov
or
dec
dec
jmp
and
mov
jle
adc
int
ljmp
out
xchg
cmp
sahf
mov
pop
faddp
push
mov
dec
push
ficomps
iret
call
out
fidivs
pop
je
loope
mov
dec
jb
or
insl
xchg
pop
jmp
xor
xor
rcrb
shrl
mov
jge
jge
insb
xchg
sti
call
out
call
mov
clc
aad
dec
mull
lock
inc
out
sbb
push
aas
dec
jmp
dec
loopne
into
mov
sti
rorb
lcall
iret
pop
shlb
lcall
and
in
lret
insb
into
lock
lahf
inc
push
add
lods
push
jnp
sbb
adc
repnz
fists
int3
stos
fiadds
sub
gs
pop
mov
fildll
pop
ss
les
movsb
outsb
scas
adc
jae
mov
aad
add
popf
fwait
add
mov
imul
ret
sbb
jbe
stos
mov
nop
sahf
test
xor
cmpsb
dec
aas
out
ss
sbb
push
and
dec
mov
push
lods
mov
push
in
notb
mov
xchg
fwait
popa
in
lods
xchg
xor
bound
mov
inc
xchg
sbb
aad
loop
pushf
shlb
inc
pop
mov
imulb
sub
xchg
sarb
or
dec
fildl
xlat
inc
aaa
in
lcall
inc
enter
pop
xchg
mov
push
mov
jae
inc
fdivl
repz
in
xchg
add
inc
and
bound
andl
pop
ss
ret
test
dec
cs
push
jl
lahf
cmp
mov
nop
adc
push
pop
cmp
add
mov
out
push
inc
mov
mov
sahf
bound
lock
addr16
jb
fnstenv
cli
sarl
add
jl
lods
push
xor
mov
xchg
sub
dec
shl
cmp
mov
mov
jae
jnp
std
adc
dec
es
xchg
data16
inc
xor
cmp
add
jb
inc
adc
xchg
sub
lock
xor
pusha
pop
ljmp
jp
mov
pop
or
pushw
mov
fsts
xchg
mov
adc
push
movsb
xor
dec
imulb
and
subb
and
mov
aad
mov
dec
aam
lock
popf
pop
test
pushf
sub
shlb
xor
add
fisubrs
pop
fstps
sub
inc
mov
xor
cmp
subl
cmp
scas
cltd
mov
mov
push
hlt
jns
dec
or
jae
dec
cmp
rcrl
aaa
push
xchg
fwait
cmpsb
mov
or
dec
mov
mov
sbb
pop
scas
ljmp
mov
sbb
loopne
mov
mov
out
push
add
mov
stc
xor
out
xor
cmp
fldenv
repz
call
jg
frstor
inc
das
jmp
xchg
or
mov
mov
imul
scas
mov
out
test
mov
add
cmp
adc
mov
jo
mov
and
pop
test
mov
mov
lock
loop
mov
or
fisubrs
inc
lahf
mov
neg
cmp
sub
ret
and
xchg
stos
imul
into
jnp
nop
ret
aas
lcall
jb
dec
push
mov
or
outsb
lret
data16
ss
in
sbb
dec
iret
fists
mov
pop
xchg
inc
xchg
adc
sbb
cmp
roll
pop
inc
mov
cmpb
rorb
jo
fstps
lahf
and
loope
mov
shl
dec
adc
popa
testb
fisttpll
ja
mov
stos
or
and
cmp
int
xchg
xchg
jne
push
in
subb
jecxz
sbb
sahf
adc
faddp
aad
nop
lds
inc
js
ja
lahf
mov
mov
test
pop
jl
inc
aaa
mov
in
mov
fs
jp
lret
aas
xlat
pop
insb
mov
in
stos
inc
dec
mov
cld
imul
jne
and
sbb
mov
leave
xlat
sbb
xlat
push
jnp
lret
clc
out
pop
cmp
push
mov
mov
loop,pn
mov
inc
pushf
inc
gs
pusha
mov
into
iret
mov
lahf
ret
repnz
orl
dec
push
fisubrl
xor
repz
clc
cmp
inc
or
fstps
pop
ret
jb
xchg
xor
pop
lret
jl
jae
test
scas
aaa
jmp
inc
subb
call
cmpb
iret
js
jg
shlb
shll
xlat
fidivs
lret
adc
repnz
pop
outsl
mov
jns
add
pushf
xchg
sub
insb
in
ja
lret
push
cltd
jae
loop
ret
jge
int3
jb
ljmp
lods
jmp
sbb
dec
jnp
mov
pop
and
add
flds
fwait
scas
push
leave
inc
and
pop
pop
jne
fwait
aad
ljmp
gs
mov
dec
fsubl
push
rcrl
mov
sahf
aaa
ss
in
or
cmc
dec
fwait
push
rcrb
cmp
add
je
popf
pop
hlt
aam
or
pop
rolb
jmp
sub
xor
push
jo
outsb
inc
imul
imul
mov
jb
dec
test
shrb
ror
mov
popa
xchg
or
scas
mov
in
iret
lods
jp
mov
mov
push
std
jmp
fstpt
and
and
push
lods
and
and
sbb
lret
popa
sti
int3
mov
addr16
mov
fisttpl
pop
repnz
dec
lcall
cmp
shll
mov
jmp
and
call
add
je
dec
mov
dec
pop
scas
xor
jg
sahf
inc
sub
scas
pop
shr
mov
push
daa
cmp
aam
pop
es
pop
xor
nop
or
inc
or
movsb
aaa
mov
mov
stos
mov
xchg
dec
aaa
pop
popf
js
out
jmp
push
mov
rcrb
mov
jg
mov
inc
mov
mov
inc
xor
sub
mov
push
mov
xor
cmp
aad
je
add
nop
and
inc
dec
call
xor
cmp
sahf
pop
lcall
fisubl
jle
stos
cmp
loope
sub
xor
outsl
or
dec
dec
call
mov
out
ror
enter
dec
mov
xor
shrb
inc
xchg
xor
test
in
stos
and
pop
xor
int3
ret
or
int
pop
inc
pop
pop
repnz
jg
xor
test
aaa
adc
out
jne
add
in
mov
das
dec
mov
pop
roll
mov
pop
mov
jns
repnz
jnp
lahf
aaa
xchg
pop
xchg
inc
mov
dec
ljmp
xchg
cmp
dec
mov
addr16
dec
idiv
bound
cmp
add
fbstp
jmp
mov
ja
stc
out
push
iret
pop
out
leave
inc
mov
pop
cmp
pusha
inc
out
das
pop
aaa
shrl
jo
fcmovb
int3
xchg
pusha
stos
pop
pop
xchg
imul
lcall
gs
aaa
mov
incl
loopne
mov
cmp
imul
push
popa
mov
rcrb
dec
loop
dec
outsb
leave
sbb
jg
ljmp
xor
movsb
mov
mov
adc
stos
bound
jp
cmp
pop
in
mov
andl
cmp
sbb
push
sub
into
orb
sub
mov
out
cmpsb
fcmovb
cmc
xchg
xlat
ret
stc
push
mov
cmpsl
cmp
fcompl
dec
cli
sub
shll
xlat
fdivl
push
ss
scas
lret
pop
add
sbb
pop
dec
ja
in
aas
and
push
pop
pop
inc
test
pushf
pusha
mov
xchg
push
sbb
inc
daa
std
pop
pop
pop
jge
data16
addr16
aad
ja
cmp
fiadds
cmpsb
out
dec
mov
sub
rcll
xlat
jp
movsb
mov
lret
in
ljmp
dec
aad
ror
mov
shr
int3
jb
mov
rcl
xchg
mov
jno
out
jl
mov
sbb
fwait
hlt
mov
lahf
js
xchg
push
sahf
inc
imul
pop
jle
sub
icebp
fs
xor
sti
jb
loope
movsl
clc
jp
push
push
shll
mov
out
and
aas
stos
into
pop
mov
cmpb
notb
sub
cli
pop
xor
lods
xlat
cmp
out
movsb
in
outsb
mov
inc
and
repnz
xlat
loop
mov
xlat
push
jne
xchg
cmp
addb
negl
popa
mov
repz
jb
cmp
scas
lcall
dec
sub
jno
into
adc
lods
iret
dec
add
jae
push
call
mov
mov
call
call
adc
mov
cmp
out
sbb
mov
int3
adc
mov
mov
mov
push
arpl
mov
mov
pop
fiadds
popf
jmp
mov
xlat
xchg
xchg
xor
sti
mov
inc
cmp
mov
xchg
mov
lahf
jb
lret
mov
testl
and
hlt
mov
jl
push
enter
nop
push
cmp
in
sbb
aad
clc
jae
dec
cmp
rcl
pop
rcrb
and
sbb
stos
xor
mov
pop
rcrb
push
sub
bound
shlb
lahf
lret
jns
sbb
andb
and
mov
push
les
mov
inc
lods
addr16
outsb
sbb
pop
mov
insl
addr16
push
mov
fs
addl
rorb
ja
jb
aad
and
jo
ficompl
insb
fisubl
rcrb
jg
lods
sub
mov
ljmp
int
mov
cmp
repnz
aaa
jnp
loopne
jnp
shrb
scas
cli
shlb
inc
das
out
repnz
pop
cmp
add
jecxz
mov
push
repz
lret
mov
popf
mov
fs
daa
ds
cmp
sbbl
xchg
sub
inc
add
mov
jbe
lret
mov
dec
dec
mov
adc
xor
mov
cmpsl
js
inc
jbe
xchg
jp
sub
shr
fcoml
mov
pop
nop
popa
or
adcb
scas
xlat
push
xchg
arpl
inc
addb
icebp
cmpsb
stos
push
push
data16
data16
mov
int3
adc
inc
mov
shl
enter
loopne
imul
xor
iret
dec
pop
push
repz
xor
add
pop
adc
xchg
or
hlt
push
fwait
add
pop
dec
rclb
xchg
mov
pop
into
in
imul
fdivl
cld
mov
cwtl
xchg
ja
pop
aas
fs
sbb
xchg
out
add
loopne
sti
and
jo
ja
rcl
dec
and
icebp
xor
mov
jecxz
mov
imull
mov
mov
jb
xchg
fwait
mov
push
pop
outsl
sti
mov
rorb
call
clc
bound
mov
xchg
lret
int3
lods
adc
leave
xor
fidivrl
xchg
cmpsb
mov
mov
ja
aad
adc
mov
sbb
jge
cmp
sub
jno
xor
idiv
sahf
cmc
sarl
sbb
cmp
loop
rcrb
aam
stc
cmp
jge
sahf
cltd
and
mov
mov
sti
xor
push
ljmp
pop
mov
ss
mov
loopne
scas
mov
push
pop
clc
xor
data16
jb
dec
jb
xchg
add
movsb
pop
adc
rcrb
add
inc
sti
outsb
icebp
push
and
cmpsb
loop
xor
fisubl
inc
xchg
cmp
fbld
mov
js
xlat
add
popa
inc
in
jae
leave
lods
loop
sahf
out
add
cmp
enter
fcoml
mov
mov
push
fists
fidivrl
das
aad
dec
fisttpl
lahf
fdiv
repnz
jp
mov
repnz
insl
cmp
cmp
ficoml
addr16
ss
fldenv
push
push
jb
or
in
xchg
lods
pop
mov
jmp
xchg
mov
pop
mov
pushf
sub
insl
sbbb
scas
xchg
mov
ljmp
and
xlat
in
aad
insl
lcall
fisubs
lret
mov
mov
sub
dec
rcr
mov
stc
mov
fbld
dec
fidivrl
cwtl
cmpsb
push
mov
mov
cmc
and
add
movsb
lret
mov
add
adc
ficomps
aad
mov
push
out
lahf
push
xor
xlat
testl
cmp
xchg
in
stos
popf
jb
inc
xor
mov
sahf
push
call
or
mov
pop
mov
and
call
pop
cmp
mov
dec
outsl
insl
inc
movsb
inc
mov
add
lock
add
cli
dec
pushf
pop
test
bound
enter
adc
lods
mov
insl
sahf
push
mov
cmp
push
mov
mov
div
xor
pop
aaa
pop
pop
std
out
loop
cltd
scas
jo
rclb
pop
cs
loope
sbb
sub
add
shlb
cwtl
xchg
outsl
jbe
dec
pop
testl
fwait
and
mov
aaa
inc
cmp
push
movsb
mov
ficoml
jne
jle
negl
sti
fidivrs
divl
adc
out
mov
push
jmp
pop
test
outsb
pop
imull
jle
cmp
xor
hlt
xchg
push
xchg
dec
add
sub
cmpsl
mov
mov
andb
and
pop
jp
std
dec
repz
sbb
sbb
inc
nop
jmp
mov
fwait
pop
inc
sub
jle
mov
cmc
rol
xchg
mov
nop
jno
cmp
jnp
mov
repz
push
shlb
scas
or
mov
xor
popf
dec
leave
popa
mov
in
add
add
arpl
cmp
insl
mov
jb,pt
nopl
daa
lret
lcall
pop
imul
negl
sahf
mov
mov
jbe
dec
das
pop
push
testl
jo
xor
in
dec
jno
mov
sbbl
jno
push
xchg
dec
jecxz
xor
movsb
popa
inc
dec
dec
out
ret
scas
xchg
jecxz
mov
xchg
shll
xor
push
std
psubb
aaa
push
shll
aas
fadds
clc
mov
mov
adc
mov
and
mov
xchg
inc
pop
or
lret
mov
xchg
lds
mov
fiaddl
or
imulb
lret
iret
movsb
pop
dec
mov
pop
lods
pop
popf
pop
xchg
sub
add
xchg
dec
mov
jmp
cmc
sbb
pop
pop
loop
mov
scas
push
divl
mov
in
sub
mov
pop
adc
icebp
mov
and
jno
stos
dec
cmp
popf
call
jae
push
xlat
cmpsl
mov
pushf
iret
mov
ret
mov
xchg
lea
xor
xlat
add
fstl
jno
mov
clc
call
popf
sahf
lods
aas
cltd
inc
cltd
mov
ja
xor
jns
dec
ljmp
cmp
fidivl
fstl
jbe
int3
aad
sbb
das
out
jl
inc
push
pop
or
mov
repz
out
out
inc
loop
push
out
lock
add
inc
cmp
repnz
cmp
fcomp
and
addr16
push
ret
lods
cmp
inc
pop
insl
push
rcrl
push
sahf
or
aas
fsub
adc
into
xchg
inc
or
sub
pop
jae
jb
mov
and
ljmp
sub
imul
add
xor
jno
fcmovbe
dec
mov
aad
sub
dec
js
bound
mov
mov
mov
dec
pop
cmp
xchg
mov
jno
cmpsl
add
add
mov
sbb
cmp
nop
inc
mov
lahf
popa
push
std
mov
icebp
mov
std
subl
inc
pop
fnstcw
xorl
inc
inc
mov
add
jp
pop
dec
dec
mov
cmpsb
xchg
pop
loop
icebp
out
push
push
inc
jecxz
jo
mov
andl
xor
into
xlat
rorl
cmc
mov
addr16
push
xchg
cli
stos
mov
movsb
ljmp
cwtl
pop
mov
addr16
popa
pop
in
and
sbb
mov
aad
mov
pop
mov
mov
mov
dec
dec
fiadds
xchg
sbb
mov
lret
jne
and
sub
lcall
fcomps
pop
scas
and
bound
bound
and
mov
jmp
push
mov
filds
addb
fcmovb
lcall
inc
inc
pop
add
gs
mov
icebp
jb
jmp
fildl
rolb
notl
fidivl
push
push
sti
hlt
stc
pop
data16
rorb
stos
jp
movsb
xor
lock
sbb
push
data16
mov
loop
lods
addl
pop
negl
loope
sub
jb
mov
ficoml
pusha
pop
inc
push
mov
cli
inc
push
shll
divb
fildl
sub
iret
aaa
cmp
into
push
mov
sbb
scas
jecxz
insb
push
insl
mov
adc
pop
sti
push
subl
divl
aad
in
dec
mov
mov
cmp
jo
imul
jecxz
sbb
cltd
lods
dec
pop
xor
std
or
lahf
ret
xor
sahf
arpl
je
push
mov
fnstsw
ljmp
mov
pop
xlat
sbbl
ror
jo
dec
xchg
xor
jb
or
adc
push
lahf
mov
mov
xchg
jb
mov
push
jb
jae
mov
clc
sti
xchg
jle
dec
movl
push
imul
xor
mov
sub
jg
mov
adc
lods
or
repnz
enter
add
xchg
aas
cmp
push
add
inc
popa
aas
js
cmpsl
bswap
adc
scas
xchg
rclb
jo
enter
shrb
rorl
jnp
fidivrl
cmp
arpl
jge
aad
int
xchg
dec
iret
xor
jle
inc
ss
xor
lods
xor
inc
adc
iret
add
mov
jmp
andb
xor
std
aad
pop
pushl
push
mov
cmc
int
jge
and
sbbl
mov
fwait
movsb
mov
je
repz
jb
fdivl
stos
insl
popf
mov
dec
nop
jae
or
in
icebp
add
jle
cmp
mov
fwait
movsb
push
dec
or
and
das
stos
jp
lcall
pop
inc
xor
iret
enter
aaa
lahf
ljmp
xor
outsl
lret
push
pop
inc
xor
jae
and
mov
mov
dec
dec
popf
jg
das
ret
out
dec
fstpl
xor
jp
inc
rorb
mov
aas
jle
jne
arpl
and
out
mov
jo
sahf
lret
cmp
jecxz
lods
mov
pop
test
ljmp
xor
pop
inc
mov
mov
push
or
pop
fldcw
xchg
addr16
scas
adcb
sbb
mov
shr
mov
lret
mov
mov
call
push
jmp
ja
lock
mov
fs
push
lret
lahf
enter
test
cmp
sahf
and
inc
sub
fwait
repnz
ja
mov
sbb
fldenv
xchg
push
hlt
nop
mov
std
adc
dec
jge
inc
outsb
pop
lods
sbb
dec
je
test
andl
mov
inc
repnz
jp
xlat
pop
push
sbb
pop
faddl
mov
int
js
ret
ja
add
inc
sti
mov
push
cmp
div
sti
in
jo
jle
notl
cmp
popf
sbb
lcall
movsl
mull
mov
xchg
mov
mov
rorl
mov
ficoms
out
xchg
mov
jbe
out
xor
into
pop
add
gs
lods
cmc
or
jecxz
add
xchg
or
push
aad
scas
fs
in
jle
jmp
xor
jmp
in
cmp
or
cli
mov
rorl
jne
scas
lahf
or
dec
push
shlb
lcall
jns
cmp
loope
out
movsl
nop
loope
xchg
or
push
aad
fidivrs
mov
fidivl
outsb
dec
xchg
outsl
sub
mov
ds
pusha
xor
gs
mov
push
xor
xchg
xchg
and
mov
sub
out
push
js
out
or
ljmp
add
rcl
das
jle
or
jle
imul
pusha
fstl
iret
jnp
test
xchg
inc
inc
cmp
xor
add
jo
mov
arpl
mov
cli
fidivrl
lea
filds
jp
inc
pop
inc
inc
and
add
mov
pushl
andb
jnp
xchg
inc
test
jmp
lret
push
fstpt
mov
cmp
mov
mov
jecxz
lods
lods
loop
cmp
loop
cli
xor
dec
xorl
jnp
sbb
xor
mov
push
leave
sarb
and
test
or
rol
loopne
and
mov
sub
xchg
les
and
jo
sbb
loopne
shlb
loopne
jae
aas
shlb
into
and
push
scas
repnz
insl
es
out
cmp
sub
repz
sub
out
popf
lea
or
and
loopne
adc
pusha
outsb
xor
xchg
and
xchg
sub
ss
pop
aas
adc
aas
shlb
sub
outsl
sarb
jecxz
scas
fistl
fisubrs
out
sub
aas
outsl
das
xor
add
adc
dec
inc
sub
xor
push
lods
repnz
into
xchg
push
pusha
aas
rcr
cmp
and
cs
popf
loopne
dec
mov
fmuls
shlb
xchg
outsl
jnp
fmuls
sub
aam
enter
lahf
ds
dec
repnz
in
lock
fldt
loopne
mov
cs
mov
shl
pushf
pusha
aam
or
and
loopne
lock
cmpsb
shrb
dec
daa
sbb
popa
rol
outsb
xor
aas
loopne
outsl
popf
iret
push
das
repnz
iret
les
enter
add
rclb
fimuls
das
vpaddq
into
mov
jae
aas
outsl
mov
mov
push
mov
jae
lock
cmpsb
rcrb
lock
cltd
rol
shrb
hlt
das
dec
dec
xor
add
mov
das
repnz
in
mov
outsl
fimuls
sub
rolb
test
hlt
loopne
cmpsb
outsl
fldt
ss
shrb
outsl
jae
loopne
fisttpl
inc
shrb
mov
sbb
loopne
cmp
mov
outsl
and
push
push
jl
das
cmpsb
sbbb
mov
jae
lock
mov
jge
xchg
mov
adc
sub
insl
adc
sub
in
aas
das
andb
mov
rcl
xor
push
and
lods
add
pop
mov
mov
jae
lock
sub
in
out
cmp
push
sub
js
outsb
aas
dec
jo
xchg
mov
shrb
sbbb
scas
aas
outsb
dec
pushf
loopne
sub
in
lock
aam
sbb
sub
add
ds
pushf
subb
adc
dec
push
outsl
outsl
das
mov
fildl
shrb
outsb
push
shlb
cmpsb
mov
shlb
mov
mov
mov
mov
jae
aas
das
pop
sub
pusha
pop
and
sbb
lods
add
loopne
adc
mov
outsl
push
fimuls
das
cmpsb
outsl
sub
pushf
repz
mov
push
lock
dec
mov
lock
or
push
rcrb
cmp
dec
hlt
adc
fmul
fstps
subl
addr16
pop
dec
xor
loope
ds
das
lcall
cmp
push
dec
pop
ljmp
stc
lahf
fdivp
enter
cmp
nop
into
sub
push
loop
lods
and
sbb
outsl
mov
mov
out
mov
das
pop
aam
and
loopne
lea
inc
das
pop
mov
dec
pop
adc
inc
das
adc
call
adc
movsb
out
pushf
or
xor
xor
lea
fiaddl
mov
shrb
into
sub
xor
mov
iret
ss
dec
and
mov
cmp
and
push
ffreep
outsb
mov
jg
mov
nop
repnz
inc
das
shl
pop
ds
xlat
das
test
cmp
inc
jg
rcrb
loop
push
cs
xchg
pop
mov
cli
mov
int3
pop
das
and
xchg
pop
xchg
xchg
outsb
movsb
mov
mov
and
loop
outsb
mov
loopne
outsl
xor
fcoms
mov
jo
repnz
xor
xor
xlat
mov
sahf
pop
das
push
xor
sbb
fidivrl
mov
sub
fwait
add
faddp
scas
push
xor
iret
adc
or
lahf
xor
int3
adc
cli
sbb
jae
lock
mov
enter
pop
pop
xlat
nop
sub
xlat
jo
xor
dec
pop
fildll
sub
filds
jecxz
sub
or
out
and
or
jmp
mov
cmp
sub
out
sub
repz
jge
repz
and
push
xor
call
pushf
xor
shrl
sti
lahf
enter
lcall
and
outsl
jmp
daa
cmp
xchg
pop
addl
stc
push
das
xchg
jg
xchg
cld
push
xor
mov
sbb
lahf
int3
inc
or
xchg
xor
ret
test
sbb
xchg
xchg
test
pop
and
xor
and
cmp
xor
fdivs
int3
call
lahf
lahf
xor
das
rorb
lea
push
fdivl
push
sti
xorb
iret
das
lahf
rorb
test
jle
push
jg
iret
cmpsb
mov
loopne
mov
dec
repnz
xor
in
sahf
dec
sub
ret
popf
scas
cmpsl
xor
pusha
mov
outsb
push
and
stos
xorb
sahf
std
add
pshufw
je
in
adc
pop
dec
sub
scas
imul
pop
subb
and
mov
lods
andl
outsb
adc
and
mov
aam
xchg
pop
xchg
sbb
jb
mull
mov
sub
jp
sarb
sbb
jle
pop
fldl
into
outsb
jo
xor
cmp
mov
mov
cwtl
aad
movb
push
push
mov
outsb
int
dec
aam
insl
xchg
and
mov
mov
mov
sbb
rcr
mov
mov
das
push
fsubp
mov
xchg
in
lcall
and
shr
shll
ficoms
mov
mov
push
jmp
fisubrs
mov
mov
insl
mov
xor
scas
out
jmp
das
mov
pop
xor
lret
mov
mov
sub
pop
std
xchg
xchg
and
sbb
xlat
aas
mov
outsl
test
xlat
into
mov
mov
jl
mov
mov
xor
std
out
int
fnstsw
xlat
push
mov
xchg
cmpsb
xor
pop
xlat
clc
mov
push
sti
jne
pop
shrb
into
sti
sub
sbb
xlat
pop
mov
cmpsl
push
shll
push
pushf
cmp
push
sub
sbb
sahf
das
out
jb
xor
ret
pop
xor
xor
xchg
inc
rclb
and
mov
cmp
shll
in
fcoms
mov
clc
mov
ret
aad
dec
push
test
mov
dec
cwtl
sbb
subl
sarb
loopne
sahf
es
aam
sarb
xor
sbb
mov
subl
fdivrl
inc
jb
xor
ret
pop
cs
sub
fsubrl
test
nop
sub
or
xchg
aas
popf
clc
push
in
and
pop
jg
es
loopne
in
jne
fisubrs
into
in
sub
das
into
pop
push
pop
cmp
xor
ret
pop
xor
xchg
rcl
lock
cld
inc
rol
dec
mov
push
cmp
xor
xor
daa
sub
sub
xchg
sub
test
xor
sbb
and
es
test
scas
dec
mov
sti
sti
xchg
mov
stc
add
nop
in
clc
shr
test
pop
hlt
mov
cld
call
cwtl
rorb
xor
repnz
mov
xor
das
dec
ror
test
aaa
cmp
xor
jno
pop
dec
xor
popf
and
nop
sub
test
pop
jge
xor
cmp
or
loop
hlt
dec
sub
dec
outsb
push
pusha
jns
xor
xorl
test
stos
xor
sub
mov
iret
cmp
stos
loop
and
sub
mov
push
ljmp
test
fadd
in
or
add
push
test
popf
ja
test
sbb
sub
out
sub
divb
packssdw
push
out
call
mov
movsl
data16
pop
iret
xor
mov
out
sbb
mov
mov
jb
xlat
cmp
pop
repz
sbb
das
pusha
dec
add
mov
repnz
push
jp
fst
jle
lea
mov
pop
push
rol
xor
jl
pop
fbstp
xchg
cli
pop
fcmovbe
sub
pop
xchg
mov
loopne
or
dec
jg
das
adc
adc
jg
hlt
xor
nop
mov
sbb
pop
mov
push
and
jno
sbb
jg
sub
sub
mov
popf
xchg
outsb
pop
adc
rep
pop
and
addb
out
jg
rclb
jae
jno
and
jg
cmpsb
inc
fs
jg
outsb
inc
icebp
cmp
insl
or
pop
inc
into
sub
xchg
mov
jae,pn
inc
outsb
jmp
jg
outsl
inc
loop
jg
push
stos
outsb
and
push
mov
fimuls
push
outsb
loop
jg
minps
and
fimuls
push
mov
xor
test
or
pushf
mov
xor
mov
adcb
xor
aas
ds
inc
jg
jg
jmp
jg
iret
outsb
sbb
test
pushf
xor
sahf
aas
push
outsb
fdivr
sbb
mov
sti
inc
xchg
int3
lahf
out
push
shl
call
shr
loop
jle
sub
int3
inc
jg
sub
sub
aam
hlt
call
mov
rolb
insl
sarb
lahf
hlt
aam
jg
lea
fcoml
xor
sub
push
lods
ljmp
inc
jg
mov
movsl
adc
sub
in
xor
sub
mov
sar
pop
hlt
in
jg
outsb
xchg
in
clc
sbb
loopne
cmpsb
pushf
out
popf
cmpsb
push
das
clc
pop
loopne
jle
in
dec
jg
outsb
cs
sti
mov
call
xchg
jle
dec
push
push
cld
fs
jg
outsb
xor
out
fildll
outsb
lock
scas
xor
mov
rorb
test
outsb
jmp
jg
outsb
out
jg
pusha
inc
out
loop
jg
into
outsb
into
mov
in
rcrb
cmp
sub
jg
xor
jg
mov
imul
jb
mov
cmp
pop
xchg
xchg
out
dec
or
and
rcll
jg
imul
repz
xor
pop
mov
outsb
pop
pushf
sub
jg
lahf
push
nop
mov
into
movsb
es
dec
gs
rolb
xor
push
fistpll
cli
lock
pop
in
jg
sbb
scas
lods
mov
mov
loopne
addr16
mov
rorb
jnp
pop
repz
mov
lods
jg
mov
in
jg
or
pop
inc
std
adc
xorb
pop
dec
sub
into
mov
shlb
into
xchg
sub
cmp
mov
sarb
add
into
inc
das
sahf
mov
shr
inc
jg
int
loop
jg
lods
lock
jg
outsb
dec
lahf
push
das
lods
je
lock
and
dec
push
in
hlt
inc
sti
jg
outsb
xchg
dec
and
std
outsb
xchg
push
rorb
aam
xchg
popf
xor
mov
jg
lea
dec
jg
outsl
inc
push
pop
push
popf
sahf
outsb
pop
push
push
nop
insl
jle
inc
inc
pop
mov
push
inc
jg
inc
push
pop
cmp
mov
or
loopne
jno
arpl
jg
mov
pop
sti
jg
cli
loopne
addr16
push
push
imul
loop
into
jg
enter
in
outsb
cs
xor
jg
das
cli
das
xchg
outsl
lahf
jo
outsl
hlt
sbb
rcll
push
sbb
pop
and
adc
add
sbb
pop
call
mov
dec
adc
adc
cmp
jae
lock
sub
pushf
cmp
xor
fadd
sub
int3
pop
cmp
aam
in
mov
or
cmpsb
adc
call
sub
lods
sub
sub
std
xchg
xor
push
outsl
lock
sub
pushf
int
pushf
mov
dec
sub
popf
mov
lock
xchg
das
cwtl
sub
dec
pop
sbb
andb
pushf
cs
insb
test
pop
mov
xor
cmpsb
std
lods
lock
in
fsubrp
fnsave
adcb
ja
cmp
pop
fstps
pop
lahf
mov
shlb
dec
fbld
cmp
pop
xor
xor
pusha
popf
adc
and
mov
xor
xor
sbb
loopne
adc
hlt
cmpb
insl
xor
push
dec
ljmp
out
dec
gs
insl
aaa
or
sbb
fs
inc
mov
fdiv
pushf
jb
adc
mov
rorb
out
stos
xchg
rcl
repnz
jae
sti
dec
lods
dec
push
pop
ljmp
clc
incl
das
sbb
aas
push
xor
cs
lahf
dec
push
out
ja
and
jg
xor
sbb
push
call
pop
push
adc
dec
shlb
and
mov
nop
pop
das
notl
adc
out
aad
fbstp
and
shlb
sbb
pop
sub
pop
or
cmp
nop
sahf
jle
ret
adc
nop
lock
lahf
sub
popa
movsb
push
mov
xor
rcrb
and
addr16
movsb
jb
shrb
pop
mov
outsl
xchg
xor
xor
cmp
es
int
lret
inc
lods
ss
jg
mov
enter
into
xchg
enter
jge
sarl
xor
jg
cmp
mov
sarb
aad
mov
das
push
aad
into
scas
push
jg
dec
popf
std
jb
aam
shrl
shlb
sub
test
lods
lods
nop
and
mov
outsb
and
mov
pop
lea
fstl
fnstsw
scas
xchg
mov
test
pop
lcall
fsub
xor
out
aam
xor
test
cmpsl
pop
adc
xor
push
mov
mov
dec
lahf
nop
xor
das
rol
test
popa
test
outsl
aas
das
mov
call
mov
dec
dec
xchg
lahf
mov
sub
imul
insl
pusha
dec
mov
mov
out
push
mov
rcr
dec
nop
dec
mov
fld
mov
ret
mov
dec
mov
jmp
dec
jmp
das
pop
and
insl
loop,pn
js
sub
into
and
loop
outsb
push
mov
push
in
pop
push
xor
cmp
pop
jno
inc
das
shlb
inc
jmp
jg
outsl
aam
sub
jne
rorl
mov
arpl
jns
jae
dec
mov
fcmove
fisubrs
sub
add
xor
clc
out
mov
in
pop
mov
aam
imul
push
ljmp
mov
jge
lock
xlat
mov
pop
pop
daa
lods
stc
cmp
dec
mov
mov
push
dec
and
add
cmp
mov
ret
shlb
pop
adc
mov
push
imul
add
jg
in
testl
incb
nop
add
std
cs
push
pop
lock
mov
adc
mov
idiv
or
sti
jg
or
xchg
mov
jb
jg
js
aad
jge
push
iret
movsl
or
xor
test
jg
dec
scas
inc
inc
cs
inc
cmp
adc
mov
cwtl
pushf
adc
inc
popa
mov
enter
outsb
inc
stos
mov
les
adc
xchg
xlat
in
jbe
outsb
xor
aaa
cli
lahf
test
es
sbb
lret
sub
jbe
outsb
fmuls
daa
outsb
out
cs
push
and
xchg
mov
outsb
in
jg
mov
leave
cs
es
and
mov
and
into
scas
xor
outsb
rcl
mov
xor
mov
outsb
xchg
in
dec
push
shrb
mov
push
pop
hlt
in
xor
sahf
std
ret
mov
lea
sub
insl
pop
movd
inc
jg
jg
pop
loopne
jle
int
push
imul
dec
outsb
push
adcb
cmp
hlt
inc
dec
xor
inc
rorb
and
mov
decb
out
pop
sahf
jge
popf
jno
or
adc
fistps
popf
in
push
xor
pushf
push
rcrb
data16
ds
add
pusha
sub
test
dec
and
stc
nop
aam
test
pop
xor
aam
test
pop
jge
cs
and
dec
call
inc
dec
jle
xor
push
pop
cmp
popf
popf
cmp
adc
push
push
out
sti
cmp
movsb
fidivs
std
sbb
repz
std
push
sahf
imul
mov
mov
enter
call
je
inc
mov
fidivrs
push
int
jg
shrl
sub
xor
je
jbe
movsb
into
fldcw
into
or
sbb
xor
push
jge
sbb
mov
mov
cmp
dec
push
dec
pushf
add
mov
f2xm1
je
in
popf
mov
adc
cmc
mov
push
inc
mov
movsb
jb
lahf
mov
cmp
mov
dec
pushf
ljmp
jle
out
mov
movd
es
js
lret
xchg
insl
jnp
pushf
stc
lock
xor
mov
hlt
mov
mov
cmp
es
jg
outsb
mov
add
in
jge
movsb
jb
pop
inc
jns
lock
inc
icebp
out
fistpl
pop
es
jg
push
andl
fbstp
lea
ror
adc
xchg
pop
lock
jmp
sahf
jg
mov
xchg
lea
sti
jg
inc
cmc
shl
icebp
dec
dec
cmp
xor
fistps
data16
fucomip
cmc
f2xm1
popf
call
mov
aaa
inc
push
out
mov
jg
xchg
ljmp
mov
jg
pop
lock
out
pop
push
iret
inc
jg
push
int
inc
int
gs
mov
aaa
int
loop
lock
cmc
xor
scas
add
nop
ljmp
jg
loop
adc
mov
pop
movsb
mov
mov
push
clc
enter
jge
pop
pop
jg
inc
mov
sbb
icebp
push
jb
out
adc
push
jmp
sahf
jg
loop
sahf
jb
call
outsb
xchg
scas
mov
sahf
data16
outsb
aad
add
mov
xchg
mov
nop
addl
xchg
jg
aaa
and
sahf
popf
and
lahf
xor
shlb
cmp
xchg
sahf
sahf
enter
test
and
xchg
sub
jnp
cs
sahf
les
scas
sbb
nop
and
mov
jae
sub
fistpll
lahf
dec
movsb
rcr
je
jae
inc
dec
shll
lock
cmpb
call
movsb
xor
dec
mov
pop
sub
scas
je
cmp
dec
sbbl
in
cmp
sbb
mov
sub
imul
add
sbb
dec
lahf
sbb
inc
cs
mov
sbb
mov
loop
sub
pushf
cmovnp
lcall
aad
sub
push
xchg
pop
inc
stos
jg
dec
cmp
in
pop
into
dec
sub
adc
shrb
dec
push
out
enter
xchg
pop
in
jg
and
sub
push
and
lea
out
jg
rclb
jb
jno
push
cmp
popf
loop
jg
loopne
outsb
ljmp
jg
mov
push
jbe
lahf
adc
popf
inc
cmp
dec
and
int
adc
leave
sub
inc
jg
enter
loop
aaa
aam
lcall
fcoml
pushf
loopne
pushf
pusha
sbb
dec
cmp
scas
imul
in
mov
outsl
loopne
pushf
sahf
adc
into
popf
sbb
cwtl
jg
mov
lahf
pop
xor
xlat
jno
leave
mov
adc
std
mov
mov
mov
jg
mov
shrb
pop
add
rcrb
xor
mov
scas
nop
aas
es
adc
cs
dec
lret
imul
dec
add
pop
mov
adc
shl
scas
jg
jo
jmp
rcrl
sub
jmp
into
adc
js
cs
scas
jp
sbb
insl
sbb
cmc
jmp
nop
or
sbb
nop
pop
push
mov
sbb
dec
jmp
nop
sbb
adc
and
loopne
mov
sub
das
jmp
push
sbb
and
into
subb
nop
hlt
xor
push
xchg
enter
sub
push
push
ret
jg
dec
cs
lahf
adc
xchg
imul
push
jb
rorb
sub
adc
outsl
push
fdiv
fucomp
sbb
outsl
mov
jge
mov
xor
mov
popa
outsl
out
scas
mov
mov
mov
sbb
movsb
jp
cmp
loopne
pop
jle
sbb
sub
insl
fldenv
popf
jg
mov
and
sbb
dec
jg
dec
push
iret
sub
jg
fldl
popf
inc
or
das
jno
into
inc
dec
jg
loope
out
das
aad
jg
in
lods
shr
outsb
mov
xchg
cmp
fldt
push
dec
xchg
jmp
nop
xlat
pop
xor
sub
int
xor
das
cs
mov
jle
push
shlb
mov
icebp
add
jg
jno
mov
push
jle
and
jb
mov
pop
inc
stc
and
ljmp
data16
int
loop
das
sar
mov
xchg
scas
jg
push
loop
das
roll
addl
loop
das
jb
mov
xchg
scas
jg
aad
insl
das
mov
mov
lea
imull
fisttps
lea
xchg
outsl
mov
jg
insl
das
dec
movsb
xchg
jb
push
xchg
inc
outsl
insl
das
inc
int3
jg
insl
das
dec
movsb
xchg
jb
push
xchg
inc
outsl
insl
das
inc
int3
jg
push
jmp
das
pop
cltd
dec
inc
jo
cltd
shrl
jmp
das
xchg
jg
aaa
push
xchg
das
scas
popf
xor
cmp
scas
sub
out
lods
loop
das
scas
jg
mov
jle
sub
scas
outsb
sar
mov
shrb
in
lods
std
popa
scas
mov
enter
test
dec
outsb
in
mov
outsb
xchg
test
movsl
aam
pop
xchg
movsl
lds
lcall
jbe
or
push
xor
movsb
test
gs
xchg
sbb
xchg
loopne
xor
jg
lods
je
sub
int
jg
xor
rcr
fisubrl
push
lret
mov
rolb
lods
xchg
mov
mov
aad
mov
pop
add
mov
dec
inc
sbb
sti
imul
pop
or
mov
adc
mov
add
sub
stos
dec
mov
lods
jle
sahf
adc
or
xor
cs
rcl
movsb
iret
jo
and
and
pxor
imul
loop
jle
jg
test
mov
in
out
in
pop
mov
outsb
mov
mov
loop
mov
and
imul
rorb
fbld
repnz
jae
xor
jp
aam
mov
rorb
into
sbb
shlb
decl
imul
pop
mov
mov
sbb
xchg
and
shrb
dec
imul
popa
mov
ror
je
daa
jle
mov
subb
cmc
mov
shrb
rclb
xchg
outsl
pop
idivl
rclb
movsb
push
lea
adc
jg
jno
mov
shr
imul
or
mov
cmp
mov
rorl
pop
push
jmp
add
xchg
jg
je
xchg
and
jg
int
in
pop
lret
vdivsd
int
or
adc
lods
test
inc
int
jle
stos
push
mov
mov
xchg
mov
pusha
mov
lods
mov
fisttpll
scas
outsl
fistpl
faddp
mov
pop
mov
mov
push
or
pop
inc
jg
rorb
inc
popf
pop
jg
inc
adc
test
sarl
jg
rorb
scas
in
mov
into
jg
inc
popa
lahf
xchg
inc
scas
dec
arpl
xchg
arpl
aas
push
inc
push
aas
ljmp
push
sub
lods
sub
or
xchg
jg
bound
lea
jg
and
cs
call
mov
or
jg
andl
push
push
arpl
mov
and
pop
int
jg
imul
dec
jnp
cmp
inc
inc
pop
int
jns
push
aad
or
mov
pop
ja
cs
test
data16
scas
stos
push
mov
fistpll
pop
arpl
subb
sub
nop
out
in
jg
jp
lods
in
ljmp
mov
mov
jge
inc
int3
jg
lods
jo
dec
data16
cmc
fistps
in
fsubl
incl
rorb
push
aad
dec
loopne
push
push
xchg
hlt
inc
dec
mov
movb
pop
rorb
inc
lret
jne
iret
sahf
push
xor
and
nop
adc
scas
dec
add
std
scas
mov
insb
push
aaa
lods
out
add
pop
fst
jge
or
sbb
push
js
scas
pushf
addr16
jg
lahf
loopne
mov
aas
adc
in
pop
imul
mov
xchg
pop
cld
pop
pusha
arpl
std
aam
arpl
pop
jg
je
repnz
ljmp
or
hlt
and
jl
addl
aad
add
scas
jo
popf
jo
mov
jg
scas
loop
ficoms
xor
jmp
ds
dec
cs
shrb
in
jg,pn
into
ss
jle
sbb
pushf
sbb
mov
int3
jg
jno
mov
outsb
movsb
mov
jle
sbb
outsb
cmc
jecxz
push
adc
sahf
cs
pop
out
andl
ja
scas
gs
jb
mov
addr16
add
and
das
movsl
in
cs
addr16
pop
inc
mov
jb
mov
das
test
mov
jo
and
sub
sub
mov
pop
filds
cs
pop
mov
mov
inc
jo
shrb
jle
push
incl
xchg
das
in
cld
push
adc
aam
aaa
mov
jle
cmp
jns
sub
xor
sbb
cli
jo
and
stc
lfs
mov
rcrb
loopne
mov
mov
adcb
xor
add
nop
jg
sub
fmuls
xor
jle
bndstx
push
rorb
popf
aam
test
sbb
cmc
addb
repnz
cmp
mov
mov
icebp
in
push
jmp
shl
clc
ficoms
mov
shl
mov
push
mov
or
out
into
xor
sahf
insl
xor
pop
and
mov
inc
xchg
jmp
loopne
in
pop
outsl
jb
sbb
scas
adc
inc
add
ljmp
hlt
mov
shl
outsb
jb
mov
jg
dec
lds
jecxz
mov
lahf
jae
jg
rclb
data16
jg
insb
mov
jle
sbb
mov
movb
jg
mov
mov
lock
pop
and
inc
test
mov
jg
adc
cld
test
push
ja
jg
mov
inc
pop
pop
jg
ss
pop
cwtl
mov
cwtl
xlat
mov
popa
scas
inc
inc
int3
jg
add
sarl
outsb
sbb
add
jg
add
cmpsl
adc
lea
shlb
or
add
sbb
dec
rolb
shl
jnp
jg
rorb
dec
movb
jg
or
sub
push
push
out
mov
add
add
rorl
add
or
int3
jg
nop
int
or
fsubl
insl
xor
mov
add
jg
outsb
aad
test
repnz
rorl
mov
mov
add
jg
mov
jle
jecxz
movsb
ror
sti
jg
mov
test
xchg
jg
mov
mov
lods
out
xor
xor
int
cmp
in
sub
stc
mov
mov
pop
mov
fbstp
pushl
jp
dec
lock
sub
leave
cs
orb
mov
je
jmp
outsb
add
scas
icebp
pop
mov
outsl
adc
aad
pop
pusha
mov
jg
sbb
adc
outsb
cmpb
lahf
xchg
jg
aaa
push
xchg
fildll
jg
jg
cmpsb
outsb
pop
psubusw
lahf
int
je
push
push
aaa
lods
pop
insl
loop,pn
dec
cmp
mov
lahf
scas
jg
add
lahf
into
xor
xor
aam
pop
xchg
insb
dec
mov
mov
loop
jg
pusha
test
aam
jg
xchg
jp
lahf
cmp
scas
inc
mov
jle
pop
lahf
push
pop
jg
sahf
mov
inc
mov
xchg
mov
cmp
repz
push
cmp
shr
ds
lahf
pop
pop
jg
push
and
jle
loop,pt
mov
mov
lahf
cmc
mov
pop
mov
addl
clc
ret
insl
ret
out
outsl
sub
mov
jg
and
dec
stc
pop
cs
jne
nop
xor
bound
testl
clc
stc
pusha
push
in
cmp
leave
out
lret
or
inc
imul
jg
enter
cmp
lret
pop
scas
jg
imul
inc
roll
shlb
pop
js
jg
xorb
and
rep
mov
scas
mov
ja
jecxz
decl
pusha
rorb
jo
stos
inc
inc
mov
mov
aam
jmp
std
je
aad
push
shlb
jecxz
adc
adc
inc
adc
add
mov
insl
xor
xor
cmp
sbb
rcll
lret
incb
and
or
mov
pop
scas
or
into
repnz
sti
pushf
into
or
sti
pushf
rolb
xchg
pop
mov
repnz
sub
das
sbb
mov
jmp
mov
cwtl
jg
mov
or
fucomip
push
jle
push
jg
popf
add
jle
jo
jb
les
jle
inc
pop
fs
scas
jp
lahf
inc
popl
iret
movsl
lahf
inc
lock
dec
add
popf
repnz
popf
dec
pop
pop
push
test
xlat
inc
mov
push
pop
pop
pop
pushl
mov
push
rclb
xchg
inc
cwtl
pop
pop
sub
lahf
movsl
dec
mov
rcrb
dec
mov
sub
mov
push
dec
mov
mov
das
out
sbb
xor
scas
out
sbb
xor
jle
mov
lahf
cmp
mov
lahf
pop
imul
dec
lahf
sbb
xor
xor
rolb
dec
nop
fildll
jle
mov
popf
jae
lods
jb,pt
pushf
sahf
push
ja
popf
jnp
and
outsl
jnp
popf
jg
loopne
repz
sahf
push
mov
scas
nop
adc
xor
rcrb
movsb
lock
std
sbb
pop
pop
pop
sub
cs
mov
std
sbb
sub
mov
shrb
es
jg
xchg
adc
aaa
aas
jl
scas
or
jno
lcall
jmp
mov
inc
sbb
jg
inc
outsb
stos
fsin
mov
outsl
packsswb
repz
mov
outsl
push
mov
mov
inc
push
mov
jg
sti
cmp
movq
adc
pop
sti
dec
test
int
je
clc
push
xchg
scas
pop
xor
sub
iret
adc
sbb
sub
bound
mov
jg
rorb
insb
pop
pop
jg
out
adc
arpl
arpl
push
sub
and
adc
push
shrb
push
push
loopne
ljmp
mov
xor
sbb
out
inc
jp
mov
roll
scas
sub
dec
inc
pop
into
rcrb
add
int3
jg
scas
adc
out
adc
out
jg
shlb
sti
enter
lods
pop
pop
jg
and
lret
fucomip
das
arpl
push
das
mov
into
jle
mov
dec
jle
cmc
push
adc
pop
sub
rorl
add
lahf
dec
ljmp
cmp
aaa
ror
cmp
push
rorb
imul
rcl
mov
loopne
jb
dec
imul
mov
loopne
in
je
mov
inc
mov
jnp
mov
fdivrl
arpl
pop
mov
add
popf
mov
xchg
aas
insb
mov
and
mov
jne
lea
add
jg
xchg
mov
inc
sbb
ret
mov
rep
xor
int
mov
dec
xor
popa
and
sub
inc
repz
lea
inc
mov
out
push
dec
clc
lcall
test
outsl
test
adc
xor
popa
and
and
inc
dec
sbb
push
mov
sbb
push
jg
iret
cmpsl
call
sahf
push
iret
rorl
idivl
iret
dec
dec
in
test
clc
lods
xor
and
loop
inc
nop
push
rcll
pusha
fists
shl
aas
cmpb
sub
xlat
in
fistps
jg
xlat
mov
mov
inc
push
sub
loopne
push
scas
call
dec
cmp
das
loopne
push
stos
sahf
mov
dec
lods
daa
dec
sbb
and
fisubrs
and
adc
mov
lods
std
cs
inc
xlat
outsb
addr16
es
int3
rclb
xchg
addr16
push
push
arpl
lcall
sbb
sub
mov
sub
dec
jle
jbe
outsb
imul
outsb
jae,pn
movzwl
es
and
and
cs
mov
pop
ja
adc
jae
jg
outsb
pop
jnp
and
sbb
xor
push
sub
xor
jnp
jbe
outsb
mov
inc
in
aaa
lcall
inc
sar
cmp
and
inc
push
pop
xlat
movsb
pop
das
xlat
in
out
movsl
aas
xchg
or
rorb
movq
dec
sbb
in
xchg
dec
adc
dec
aaa
imul
testl
push
int
addb
dec
jno
out
cmp
pushf
fildll
mov
sbb
je
jmp
into
test
pop
lock
pop
ficomps
push
outsb
xor
nop
inc
pop
mov
xor
add
int
and
mov
test
outsl
shlb
cmc
mov
sub
lahf
mov
dec
jecxz
rcrl
icebp
jecxz
xchg
out
lock
outsb
xchg
mov
das
cmc
and
loopne
insl
outsl
sub
jg
jo
aas
mov
jg
pop
shrb
jmp
mov
pop
and
sarb
out
pop
popa
gs
jmp
repz
xor
inc
idiv
jo
call
dec
mov
leave
jo
sti
arpl
xor
outsb
sbb
xor
jbe
xor
incl
pop
int
dec
xor
push
cmp
add
adc
xchg
xor
xchg
pop
pop
cmp
mov
xor
sbb
pop
scas
fisttps
xor
rorb
sub
cs
clc
xchg
jg
add
sbb
daa
int3
jo
and
cvtps2pi
mov
aam
pop
hlt
aam
push
pushf
call
aas
hlt
fdivl
das
mov
lcall
add
andb
out
or
nop
rcrl
lahf
pop
xor
das
jge
jno
lret
dec
repz
pop
push
xchg
jbe
push
sahf
mov
adc
push
sbbb
sti
pop
and
push
shlb
test
sub
xchg
xchg
xchg
in
into
xchg
lcall
mov
jmp
sub
jge
push
imulb
fsubrl
daa
fwait
push
pop
sub
cmp
and
mov
dec
scas
and
xchg
mov
sub
scas
scas
mov
lahf
arpl
mov
divb
popf
xchg
pop
mov
xchg
scas
scas
cmpsl
pop
arpl
outsl
dec
lret
ds
std
imul
out
pop
mov
lods
pop
push
ljmp
jg
sti
push
nop
scas
mov
rcr
jg
mov
insl
rol
sahf
dec
jnp
sbb
add
in
xor
jg
mov
and
test
mov
nop
xchg
jg
cli
cmp
stc
cs
mov
out
std
add
movsb
pop
mov
cmp
add
outsl
sub
outsl
mov
out
jg
inc
jp
cmp
pop
stc
cs
mov
icebp
nop
xchg
xor
sub
data16
scas
inc
icebp
nop
fbld
aad
sbb
popf
inc
lds
int
push
nop
scas
dec
cmp
scas
inc
inc
mov
adcb
mov
in
mov
jg
push
inc
out
xchg
lock
cmp
cs
out
rorb
xor
sti
pop
nop
xchg
filds
and
sti
jg
push
outsb
into
das
popa
or
iret
mov
daa
outsb
loopne,pn
jle
or
pop
call
out
nop
mov
outsb
loopne
jg
outsl
mov
scas
fbld
repnz
roll
jg
pop
outsb
cmp
icebp
jbe,pn
outsb
mov
mov
mov
and
cmpsb
outsb
pop
out
in
inc
iret
loop
lock
outsl
add
and
pop
jno
mov
data16
xor
push
jmp
pop
cmp
outsl
mov
xchg
jg
xor
je
or
dec
outsb
mov
cmc
mov
loope
push
dec
and
rcrb
inc
stc
in
inc
mov
cs
je
inc
xchg
cs
push
jbe
dec
in
sub
pop
jg
dec
xchg
cs
outsb
xchg
mov
jp
jle
movsl
mov
sub
into
pop
pop
pop
jg
scas
ljmp
pop
add
jle
mov
popf
adc
dec
and
pusha
inc
repz
push
mov
jg,pn
add
pop
mov
jp
cs
pop
ss
lods
jg
cmp
andps
scas
xchg
jg
outsl
push
mov
dec
pop
scas
aad
xor
pop
ret
jg
cmp
push
arpl
dec
sahf
pop
jg
mov
loop
jg
repnz
dec
cmp
mov
popf
mov
jbe
mov
ret
mov
into
lea
insl
push
jne
dec
into
jg
xchg
adc
movsb
test
scas
adc
in
mov
pop
fidivs
call
lock
sub
popf
mov
push
adc
jo
mov
ds
dec
sti
jo
adc
adc
add
loopne
je
cs
pushf
sahf
xchg
and
cmp
stos
data16
fwait
std
mov
arpl
xor
pushf
outsb
sar
sub
lahf
push
lahf
jle
insl
das
push
ljmp
popf
xor
pop
out
fnsave
rorb
cs
push
or
dec
mov
ds
push
lahf
mov
outsl
scas
pusha
fbld
addr16
imul
rorb
pusha
adc
arpl
mov
mov
out
mov
addr16
out
stos
mov
loop
sub
dec
stos
popf
and
xor
orb
mov
lds
mov
loop
repnz
cmp
mov
xor
push
xor
dec
nop
lock
test
xor
push
mov
sub
xadd
jo
lret
push
mov
mov
cs
int
push
cs
mov
pop
xor
int3
xchg
mov
lods
cwtl
sbb
push
cmp
pop
jl
aaa
jo
repz
cs
iret
mov
pop
ss
or
fsubrl
mov
mov
je
lret
push
into
mov
rcl
shlb
xchg
rolb
std
xor
sub
iret
mov
ficoms
test
xlat
loopne
xor
cli
icebp
mov
stos
das
push
pop
ljmp
jo
xor
cmpsl
fcomip
xlat
scas
dec
and
in
fistpll
lret
or
inc
fisubrs
fildll
sahf
lods
leave
ds
divb
into
jg
cmp
scas
jb
scas
outsl
test
pop
jg
and
ds
cli
popa
and
sub
sbb
pop
adc
mov
outsb
and
dec
lret
xchg
sub
negl
pop
mov
std
ds
ror
dec
inc
ljmp
ficompl
std
sbb
mov
std
insb
fcom
pop
and
mov
jg
addb
xchg
xlat
mov
outsb
xor
test
repnz
ds
jg
xchg
fcoms
aas
iret
sahf
les
mov
aas
jle
shrl
scas
jg
call
xchg
xor
call
shr
and
outsl
jae
jge
pop
adc
lcall
mov
pfacc
sbb
ds
int3
jg
mov
lret
mov
sub
push
xchg
pop
std
lahf
jae
add
xchg
jg
aaa
lock
std
sbb
inc
xchg
push
ds
sub
or
push
sub
outsl
mov
mov
cld
aaa
dec
ja
inc
lcall
dec
cs
jae
pop
std
test
jg
xchg
repz
aaa
sub
std
sahf
sahf
pop
sub
xor
cmp
jg
mov
jecxz
std
sub
and
fistps
in
mov
fistpl
lock
loop,pt
jg
push
lahf
ja
push
scas
adc
inc
jg
sub
dec
ds
push
cmpsb
mov
inc
lods
cmpl
cmpb
gs
sahf
pusha
sub
mov
je
push
stos
test
pop
mov
std
sahf
pop
jg
out
inc
dec
jp
push
jle
shrl
xchg
add
dec
push
inc
pushf
imul
mov
mov
int
rolb
jne
jo
push
fists
outsb
movsb
sti
jg
push
mov
mov
shrl
fbstp
adc
dec
ja
mov
xchg
jg
pusha
lret
outsb
aaa
dec
outsb
push
dec
imul
push
aad
ljmp
rolb
scas
std
mov
inc
jb
data16
sarl
mov
jecxz
push
aam
int
je
stc
scas
aaa
dec
ja
mov
mov
loop
and
int3
movsb
jmp
push
xchg
jg
in
movsb
jmp
push
out
lods
popf
insl
inc
imul
sbb
jne
xorb
popf
incl
ja
mov
pop
int
je
cmc
pop
sub
cmp
cmp
inc
popa
and
xor
loopne
sti
jg
mov
dec
test
push
push
in
pop
inc
int3
jg
lea
out
jb
inc
cmp
fists
ja
mov
sti
lcall
mov
xor
das
push
xor
push
jbe
jg
ja
cmp
aam
decb
xor
popa
stos
pop
inc
adc
pop
ss
loopne
mov
iret
fdivrp
add
cmp
repz
pop
pusha
adc
ret
montmul
cmpsb
rolb
into
dec
rclb
push
adc
cmpsb
jge
popa
push
sub
cmp
loopne
sbb
sti
lcall
push
rorl
gs
jecxz
dec
sub
arpl
mov
cmp
insl
imul
push
cmpb
and
mov
jg
push
xchg
pop
clc
fbstp
adc
sub
xchg
dec
jne
jg
scas
outsb
daa
and
pop
sub
shl
jno
pop
pop
sub
daa
inc
jg
outsb
shrl
cmp
sbb
test
insb
mov
clc
sbb
mov
outsb
pop
aaa
sub
jns
jle,pn
pop
sbb
xor
inc
jg
outsb
sarl
cmp
es
test
sub
mov
and
iret
xor
outsb
rol
fcomip
lret
xor
xor
pushf
add
sarb
lret
cmp
out
loop
jg
mov
iret
xchg
call
call
dec
jmp
movlps
ja
mov
shl
out
inc
out
jg
iret
sti
fistps
xlat
mov
adc
add
push
das
scas
mov
fistps
cmc
sub
dec
cmp
clc
mov
adc
fldt
fisubrs
sbb
out
add
jb
push
adc
jmp
add
push
jmp
fldt
mov
jg
pop
out
xor
push
in
inc
rclb
rorb
cmp
out
pop
repz
fnsave
jmp
sbb
or
mov
cmp
xor
pop
fstpt
add
pusha
in
push
fsub
jg
add
add
iret
or
into
fdivrp
adc
mov
popf
xchg
push
push
outsl
loopne
daa
xor
lcall
mov
inc
jae
adc
pusha
and
mov
and
push
in
popf
dec
gs
xchg
mov
or
cmp
outsl
xorb
sub
jl
dec
shrl
sbb
out
repnz
mov
xchg
sbb
ljmp
ljmp
ljmp
push
out
mov
dec
daa
jg
aas
popf
mov
pusha
subl
xor
neg
dec
pop
xor
xor
xor
outsb
popa
sbb
cmpsl
inc
xor
mov
pop
scas
sahf
xor
out
nop
fisubrs
int
xor
aam
test
pop
or
adc
jge
sub
jae
xor
xor
call
shrb
and
sub
push
imul
outsb
pop
arpl
fimull
xor
jg
cmpb
scas
shl
mov
les
rclb
bound
pop
in
jns
dec
insl
jns
mov
jge
dec
xchg
jge
into
cmp
lahf
cmp
in
into
add
sub
pushf
add
mov
dec
or
push
or
ret
cmp
mov
adc
push
adc
jbe
cmp
shrb
jp
xchg
mov
pop
les
jmp
notb
int3
clc
je
int3
sub
cmp
psrld
mov
xor
ret
jg
inc
cs
inc
imul
out
sbb
jbe
dec
xchg
fs
inc
mov
mov
mov
popf
in
cltd
out
jo
push
sub
cmp
fsub
out
into
into
xor
call
xor
lea
pushf
repz
sti
fnsave
out
push
sub
and
stc
nop
cs
ljmp
out
das
into
sbb
and
jo
cmp
pop
rolb
xor
mov
movsb
mov
fs
push
mov
cmp
in
ljmp
sub
mov
push
sub
arpl
icebp
add
mov
mov
cmp
mov
loop
mov
dec
ror
or
int
push
xor
push
mov
inc
std
mov
popa
push
das
cmc
mov
push
mov
in
psllq
xor
sub
scas
jg
ljmp
cmp
or
cmp
add
inc
cs
jg
push
loopne
ss
cmp
cmp
outsb
add
cs
jg
add
bound
cmp
out
add
lods
xchg
data16
and
push
mov
push
ljmp
dec
xor
jae
mov
pop
pop
jg
jge
dec
inc
int
adc
push
int
dec
jnp
sbb
loop
mov
cs
sbb
out
imul
xorb
push
mov
popa
and
and
jns
sub
int3
jg
push
jmp
mov
fildll
sub
mov
sbb
bound
iret
and
push
outsb
fdivrp
popa
push
outsb
cmc
mov
outsb
sbb
pushl
push
cld
lahf
fists
pop
jg
in
outsl
xchg
mov
jno
das
jbe
fisubrs
test
and
push
aad
sbb
inc
jmp
shrb
cmp
cmp
fisttpll
std
inc
in
push
out
push
in
lock
dec
add
xchg
push
sub
mov
out
pop
andb
loope
and
add
ror
push
jle
out
aas
int
je
jo
cmp
rcrl
cs
loopne
jns
rcrb
jg
jne
shr
push
shr
push
rorb
pop
cmc
mov
rcl
cmc
mov
fisubrs
test
out
adc
nop
sti
loop
jo
scas
pop
dec
aad
rolb
jne
into
out
aas
sti
push
in
mov
gs
int3
notb
das
mov
add
pop
xlat
adc
pop
xchg
push
inc
jg
add
scas
std
rolb
adc
inc
aad
out
cmp
scas
add
scas
mov
inc
stc
lahf
mov
jns
sti
sbb
dec
mov
dec
pop
outsb
pop
xor
mov
scas
das
sahf
rorb
jne
int
xor
das
mov
cmc
push
xchg
jg
je
sbb
pop
sbb
into
sti
lret
dec
shlb
xchg
lock
or
xchg
std
jb
cld
sub
gs
inc
mov
dec
xchg
test
mov
jge
popf
xor
nop
inc
cmp
push
rep
lods
popf
aad
fistps
std
jmp
stos
out
popl
pushl
sahf
xor
repnz
dec
or
movsl
or
jg
scas
pushf
mov
pusha
cmp
pop
sti
cmc
mov
das
dec
std
xor
call
xchg
fisttps
loop
xchg
jg
aaa
and
xchg
xchg
fistps
fldenv
pop
jg
sbb
push
cltd
dec
dec
dec
aaa
int
je
into
aaa
ss
xchg
popf
test
jg
popf
pusha
pusha
mov
jnp
sbb
sbb
call
cs
mov
scas
jg
loop
lods
xchg
test
scas
jg
mov
add
outsl
repz
pop
fs
scas
sbb
inc
mov
fildll
push
jbe
scas
sub
dec
daa
inc
shll
decb
and
pop
xlat
loope
dec
scas
jg
lock
rcr
in
mov
and
insb
sub
pop
insl
push
scas
pop
xor
add
subl
lods
mov
jbe
and
sbb
in
sub
or
shrb
insb
and
push
pusha
mov
bound
and
push
in
ret
nop
fsubrs
or
mov
imul
scas
mov
in
outsl
push
xchg
inc
imul
cmp
mov
ss
pusha
add
mov
je
scas
dec
push
pop
shrl
gs
mov
scas
int
pusha
outsl
lret
and
scas
cmp
jg
popa
xchg
pop
sahf
cltd
scas
pop
pop
jg
jo
dec
imul
xchg
and
mov
mov
subl
cmc
push
scas
icebp
int
lods
das
inc
inc
mov
data16
and
dec
and
rorl
and
inc
mov
scas
pop
pop
jg
inc
jae
insl
call
and
stos
test
lea
lea
mov
xlat
xchg
mov
insl
popa
rorl
out
or
push
mov
mov
xor
mov
adc
cmp
add
lea
cmp
cwtl
jg
inc
jne
push
test
sbb
cmp
stos
jge
dec
nop
mov
dec
popa
data16
pop
dec
into
mov
xor
mov
mov
pop
jg
pop
sbb
push
push
ljmp
data16
sbb
pop
jg
call
push
mov
push
push
outsb
cmp
sub
push
mov
rol
mov
jg
pop
fimuls
jo
jo
jg
and
scas
adc
jg
mov
popf
pop
jg
call
xor
jg
adc
mov
dec
add
add
jg
andb
in
dec
jg
bound
mov
dec
sub
into
jg
push
fisttpl
pop
imul
lea
mov
jg
lea
filds
clc
push
es
repnz
hlt
push
decl
lds
cmp
inc
sti
loopne
int3
outsb
inc
out
in
fldl
iret
mov
pop
jne
mov
sub
pop
jae
lock
paddq
enter
fidivl
scas
loopne
mov
or
incb
jb
dec
jb
and
jg
jmp
idiv
pop
xorl
shlb
stc
lods
jo
repz
pushf
sbb
push
out
mov
mov
mov
std
icebp
jp
in
and
std
lret
jle
mov
outsb
and
les
bound
dec
orb
pop
pop
cmp
outsl
cli
mov
lahf
cmp
fnsave
or
lahf
or
insb
iret
aad
fstpl
jg
push
aas
jge
mov
mov
jg
insb
jle
enter
mov
dec
adcl
rcr
cmp
push
mov
shr
dec
fistpll
mov
push
fisubrs
std
cmc
ret
jge
fldcw
mov
adc
cmp
test
std
mov
and
dec
fcmovu
mov
push
xor
and
out
ret
mov
inc
lcall
iret
in
iret
or
mov
sbb
pop
mulb
jno
push
lahf
adc
adc
mov
jo
mov
xchg
sub
and
jg
sub
icebp
mov
and
and
mov
cmp
out
cmp
punpcklbw
xor
cmp
fistps
lods
sub
dec
in
jge
fstl
sub
frstor
xor
sbb
jge
pop
xor
enter
dec
aam
adc
cmpb
jg
and
push
and
pop
mov
into
jg
inc
push
loop
daa
xor
out
jg
xor
aas
inc
fwait
iret
popf
pop
jg
push
std
fucom
aam
mov
push
outsb
scas
clc
gs
data16
rcrl
pop
fdivs
sub
jle
dec
jnp
sbb
push
ljmp
jg
int
shl
fmul
pop
stos
cmp
sar
jmp
sarb
or
inc
int3
jg
sbb
outsb
xor
aam
scas
xchg
inc
mov
cmp
and
pop
mov
call
call
ja
cmp
andb
fistpl
dec
jg
sub
scas
sub
iret
inc
or
das
jg
outsl
mov
jns
push
push
rcl
scas
gs
rolb
push
mov
frstor
jg
and
fstl
cmp
cltd
fstl
jg
push
std
fnstsw
fistpll
and
sub
movsb
js
inc
out
pop
sub
insb
popa
popf
dec
push
lcall
sbb
movsb
in
jo
jmp
sahf
pop
jg
mov
iret
sti
clc
fwait
or
mov
decl
cwtl
inc
jg
jo
push
mov
jo
push
jge
adc
hlt
dec
cmp
hlt
mov
insl
rolb
jg
fcomip
pop
dec
jge
mov
fucomp
mov
dec
dec
cltd
jge
pop
jg
inc
rcrb
jge
insl
inc
jns
cltd
jge
dec
push
mov
out
xchg
movsb
cld
or
adc
into
mov
xor
cs
lahf
lret
xor
jle
test
jae
dec
push
test
sub
dec
rcrl
sbb
mov
mov
or
mov
add
mov
insb
mov
cs
imul
push
cmp
rcl
add
into
scas
jg
add
jle
pop
shl
mov
rol
inc
sub
shlb
je
inc
mov
in
or
subb
loop
mov
lahf
fcom
icebp
jp
lods
pusha
in
xlat
adc
dec
daa
pop
pushf
pop
mov
std
adc
scas
pop
mov
push
scas
outsl
dec
movsb
loop,pt
cmp
xor
jne
jmp
xor
or
lods
dec
push
lock
sbb
adc
sarl
adc
cltd
sahf
cld
and
icebp
dec
xor
or
mov
pushf
mov
andb
andb
xchg
arpl
and
lcall
arpl
arpl
std
xchg
nop
arpl
arpl
dec
movsb
arpl
adc
dec
mov
mov
aad
rorb
cmc
cs
pop
mov
lods
jae
inc
dec
stos
mov
mov
dec
jl
out
enter
enter
repz
cmp
je
cmp
dec
jno
jge
and
pop
sub
mov
es
sbb
add
ds
gs
jge
fists
mov
jle
aas
sbb
push
rcr
std
scas
and
mov
cmpsl
cwtl
test
loop
pop
add
fs
in
sub
push
mov
into
gs
sar
and
std
in
cmp
pop
xorb
pushl
mov
sub
fcompp
andb
scas
push
push
rolb
movsb
lea
std
inc
mov
test
sahf
lods
and
pop
stos
jg
ja
out
pop
pop
cltd
jnp
cmp
mov
push
pop
mov
jg
ja
cmp
pop
lret
mov
jg
jo
dec
push
pop
sarl
lret
mov
mov
cmp
call
test
out
jg
or
out
stos
sub
out
subb
sarb
jg
mov
jg
mov
jo
imul
jg
or
out
jg
adc
and
mov
lods
aad
jg
lock
mov
or
int3
adc
sbbb
outsb
dec
out
shl
inc
and
pop
xchg
adc
insl
push
dec
dec
aaa
xor
dec
ret
mov
mov
jg
and
lea
dec
test
pop
sbb
sub
fbstp
cmc
mov
das
mov
scas
push
daa
loope
push
repz
mov
inc
cmp
sbbl
inc
pop
cmp
fs
and
fdivrp
aad
nop
sub
jge
cmp
pop
mov
mov
test
jle
jge
loope
push
shll
cmp
and
ss
mov
fnstenv
mov
adc
imul
pop
mov
xor
lahf
fildl
adc
push
insl
dec
jno
stos
mov
xor
sub
arpl
sbb
push
pop
ljmp
mov
jle
addr16
mov
cmp
jge
fistps
popf
dec
sub
cmp
lret
outsb
sbb
mov
jle
mull
jmp
jg
add
int3
jg
ss
push
jg
add
pop
xlat
stos
dec
sub
popf
pop
push
je
call
cmp
inc
int3
jg
sbb
xchg
and
aas
imul
mov
addb
shl
test
jg
dec
and
cmp
jg
daa
pmulhw
mov
mov
and
cmp
into
xchg
jg
mov
jmp
and
loop
pop
jg
mov
inc
ja
std
popf
pop
jg
xchg
jp
mov
fdivs
lret
imul
xor
lret
or
dec
fimull
std
aam
jg
xor
xor
bound
jg
dec
stos
or
out
inc
cmp
and
mov
xor
pop
sarl
and
and
adc
fdivl
jg
dec
iret
and
or
adc
std
frstor
or
or
fldcw
xlat
xorl
imul
push
rorb
or
das
sti
nop
inc
into
mov
das
or
xchg
aas
push
xor
outsb
hlt
fcmovnbe
lahf
mov
adc
adc
outsb
into
jg
pusha
xchg
push
dec
scas
in
inc
dec
jmp
cmp
pop
cltd
fbld
pop
ja
idivl
lahf
inc
mov
std
mov
lock
and
xchg
sti
jg
jbe
scas
in
cs
jg
xchg
mov
adc
inc
jg
mov
pushf
jg
js
jbe
jg
and
jge
mov
shll
mov
movsb
bound
leave
adc
jg
push
or
adc
adc
sub
int
jmp
jg
mov
mov
adc
fdivp
pop
cs
push
sbb
mov
lock
pushf
scas
jg
outsl
out
and
mov
sub
insb
jb
lahf
sti
aaa
push
jg
sti
mov
cs
repz
outsb
dec
sti
jg
jg
loopne
mov
outsb
sarl
mov
or
cmp
dec
fistpll
incl
nop
mov
in
pandn
mov
jg
mov
mov
dec
test
sbbb
dec
xor
mov
mov
jo
mov
imul
sub
fcmovnbe
adc
in
js
aaa
cmp
jge
jno
imul
and
and
jp
pusha
lret
mov
mov
jle
das
adc
hlt
pop
into
daa
mov
and
and
inc
stos
adc
shrl
mov
cmp
add
push
add
loopne
aam
sbb
mov
aam
dec
movsl
mov
in
push
mov
dec
fwait
es
aas
pop
xchg
xchg
imul
stc
popf
lahf
fbstp
scas
cmp
add
js
jb
or
ret
push
jle
mov
je
xchg
aas
hlt
adc
cmpsl
imul
dec
shlb
mov
mov
jmp
addl
arpl
aad
lods
loope
stos
or
lods
inc
jp
pop
popf
add
lods
idivl
jb
les
pop
jns
stos
inc
lret
jno
jmp
mov
inc
popf
pop
test
sub
sub
insb
fstpt
dec
test
lahf
int3
and
shll
rol
fnstcw
scas
fcoms
adc
fmull
jo
popa
lea
jae
mov
inc
jae
repnz
xor
cmp
and
fdivs
jno
imul
inc
call
scas
cs
in
inc
enter
int3
and
and
ficoms
lea
jo
cmpsb
ficomps
sub
lret
cmp
fdivrs
cwtl
outsb
sysret
dec
jl
sbb
push
aas
adc
sub
mov
fcompl
pop
out
fists
adc
ss
adc
xorps
xor
adc
jno
loop
and
dec
xchg
sub
sub
or
xor
test
ss
call
xchg
push
mov
adc
push
int3
and
mov
imul
rcr
nop
dec
andb
unpcklps
int3
push
insb
movsl
lret
sub
shlb
scas
outsb
sbb
lods
xbegin
mov
fstpt
xorb
dec
inc
fistps
mov
lea
pop
cmp
pop
les
mov
push
and
adc
sbb
xchg
sub
adc
adc
jg
xor
cwtl
xor
mov
inc
xor
scas
jge
stos
aam
iret
push
lds
mov
test
aas
jecxz
pop
cld
iret
xchg
into
test
cmp
mov
mov
aas
mov
iret
out
xchg
iret
test
xor
in
mov
outsl
jl
sub
inc
aaa
push
xor
icebp
push
xor
out
xchg
pop
mov
cwtl
aam
xchg
nop
mov
xor
inc
xlat
cmp
scas
inc
shl
dec
push
mov
and
xor
adc
sub
into
aaa
imul
ss
out
scas
push
ja
sbb
movsb
mov
mov
enter
mov
push
xchg
xor
xchg
aad
stos
hlt
dec
int3
jle
fists
movl
mov
iret
movsl
fbld
xchg
xlat
mov
das
aas
je
call
aas
into
movsb
push
cmpsl
aaa
scas
dec
daa
stos
push
rclb
bound
mov
fbstp
test
mov
fbstp
pop
sarb
ret
pusha
jecxz
inc
sub
xor
jmp
push
icebp
push
outsb
adc
xlat
insl
xor
pop
cmp
push
js
ds
pop
cmp
popa
mov
not
int
fisttps
lds
pop
mov
xor
lahf
push
icebp
push
adc
fistps
ret
dec
out
mov
push
mov
fisttpll
movsl
mov
addr16
mov
outsl
mov
mov
adc
mov
or
repnz
scas
xchg
push
xchg
lahf
pusha
pop
cli
sub
adc
or
in
cmp
clc
pushf
dec
in
fisubrs
sbb
jnp
das
in
inc
imulb
scas
jb
sub
test
add
scas
cli
jae
aas
pop
sub
pop
adc
mov
lahf
xchg
mov
pop
xchg
mov
cmp
rcll
int3
out
movsb
xor
lods
xchg
or
aas
sub
outsl
rcll
push
repnz
jns
lods
push
mov
cs
adc
dec
movsb
and
ficoml
rcll
dec
rclb
into
pop
jne
sub
lods
nop
lock
leave
jo
mov
loopne
lahf
push
add
je
mov
sub
das
lods
in
pop
xor
hlt
xchg
iret
lahf
mov
je
mov
aas
dec
mov
stos
mov
iret
lods
aad
cwtl
cmp
popa
adc
fildll
hlt
xchg
int3
ret
sbb
mov
sbb
das
pop
out
sahf
cltd
cmp
scas
shrl
pop
mov
jo
aad
and
mov
push
pop
rcrb
pop
callw
dec
int
popf
outsb
mov
out
push
into
test
sbb
xchg
aas
out
xchg
loop
pop
dec
push
sbb
push
xchg
lock
stos
sarb
lret
nop
lods
push
fwait
cmpsl
shlb
sub
out
out
es
cmpsb
out
fwait
mov
cmpsl
sbb
popf
push
mov
fs
ljmp
inc
mov
loopne
pop
jecxz
rolb
mov
push
das
repnz
push
clc
ds
dec
mov
sub
into
xor
sbb
iret
xchg
inc
int3
pop
pushf
push
jns
div
nopl
enter
pop
inc
mov
push
dec
cwtl
out
push
cmp
enter
ffree
and
mov
dec
mov
mov
cs
out
cmc
pop
ficomps
cmp
paddd
ja
in
xchg
das
gs
push
ficoms
pmulhuw
push
shlb
pop
incb
jg
mov
bound
xor
ret
lock
std
push
push
fisubrl
and
and
lods
shr
mov
ret
mov
inc
inc
dec
cmc
cmp
out
cmp
dec
mov
pop
jmp
cmpsl
movsb
negl
pop
sbb
dec
pop
shlb
adc
cs
xlat
mov
mov
cmp
push
stc
cmp
nop
sub
repz
jb
aas
outsl
push
lahf
mov
loop
xlat
cmp
out
and
push
mov
rorb
cs
pop
xchg
push
xor
test
mov
inc
mov
jg
sbb
lods
test
daa
push
and
shrb
sahf
xor
mov
mov
imul
mov
jmp
pop
cmpsb
inc
pop
in
sbb
inc
sbb
mov
cld
and
popw
xbegin
popf
cmp
pop
nop
push
in
push
ffreep
jo
dec
pushf
jne
fnstsw
dec
inc
clc
dec
sbb
inc
jle
pop
repz
fucom
lahf
rorb
push
nop
es
gs
fdivl
paddw
dec
pop
aaa
mov
in
jne
cmpsb
enter
into
mov
shlb
xchg
sar
stc
movsb
and
arpl
push
lods
shl
mov
mov
push
and
fucomip
pop
imul
sub
pushf
outsl
aam
aad
call
outsl
popf
mov
lea
lahf
data16
push
repz
leave
lahf
xor
scas
inc
xor
aam
movsb
testl
jo
xor
jecxz
pop
bnd
lret
into
movsb
out
xchg
adc
push
mov
lock
dec
cs
sbb
pop
pop
push
test
jecxz
das
xchg
pop
mov
push
ljmp
clc
dec
repnz
mov
lods
push
aad
inc
sahf
lods
test
mov
test
mov
or
outsl
jno
outsl
loopne
call
ficoms
lahf
stc
jnp
fcom
mov
push
push
sbb
aad
lock
outsl
mov
out
in
mov
mov
mov
call
mov
repz
xor
ret
inc
outsb
xlat
mov
pop
cvtps2pi
test
jae
pop
cmc
pop
lods
ret
fsubp
jo
pusha
stos
shrb
test
sbb
mov
lods
adc
sub
adc
push
mov
movsb
cmpsl
daa
ficompl
stos
mov
mov
aam
jb
dec
les
lretw
lea
lret
insl
mov
std
fidivrl
popf
cmp
xchg
lcall
mov
mov
out
push
rol
aad
out
lods
faddl
and
mov
mov
outsl
inc
push
pushf
push
das
xor
decb
mov
sbb
dec
lret
jle
inc
push
push
cmp
enter
adc
clc
sub
pop
in
mov
sub
pop
in
mov
sub
aam
inc
mov
pop
xor
das
out
xchg
testl
loopne
or
or
xor
pop
pop
sbb
movsb
cmc
mov
xchg
cmp
hlt
jae
jecxz
adc
in
rcl
adc
jne
sahf
mov
or
adc
pop
aam
sarb
pop
ss
sbb
sbb
xor
sarb
dec
popf
jae
pop
inc
outsl
pop
inc
lock
fidivl
xchg
addr16
xor
das
pusha
daa
ss
out
cltd
adcl
mov
loopne
mov
addr16
dec
lds
sub
arpl
outsb
mov
mov
jg
outsl
dec
into
rclb
outsl
pop
xchg
jg
leave
mov
mov
mov
cld
sub
dec
insl
adc
rorl
adc
jnp
bswap
push
xchg
testl
dec
mov
test
test
lods
mov
push
push
mov
movb
pusha
mov
test
lahf
mov
mov
insl
out
mov
inc
fmuls
xchg
outsb
mov
test
mov
outsb
sub
cmc
pop
jmp
adcl
mov
mov
adc
mov
addr16
nop
mov
loopne
in
and
popf
dec
leave
scas
gs
xor
scas
daa
adc
jmp
aas
dec
pop
and
push
outsl
xor
das
popa
aam
pop
testl
mov
addr16
shlb
dec
lahf
data16
jp
push
sub
scas
jmp
pusha
das
adc
lahf
sub
mov
push
lods
repz
shl
sti
xchg
les
mov
int
jg
sub
pop
insl
push
cmp
push
mov
in
out
out
pop
push
inc
ficoml
xor
aam
adc
fwait
or
jmp
xchg
jge
outsb
adc
dec
add
insl
hlt
enter
imul
fbstp
mov
into
addl
xchg
jle
and
jle
push
dec
xchg
movsb
pusha
dec
in
sub
repz
xchg
sti
lock
clc
sbb
inc
out
inc
xor
sahf
popf
scas
sub
push
setle
lea
xor
pusha
push
mov
jg
cs
dec
or
inc
test
xchg
and
iret
clc
mov
xchg
pusha
mov
xor
insb
and
jmp
dec
xchg
and
adc
cmp
cli
dec
daa
mov
ljmp
popa
jge
icebp
addb
out
movsb
pop
mov
sahf
ja
insl
xor
lock
jg
sbb
xlat
dec
sbb
push
and
push
pop
mov
push
hlt
jae
arpl
and
dec
sub
inc
xchg
jbe
test
sysenter
popf
pop
inc
fidivrs
nop
dec
sarl
movsl
arpl
add
call
push
cmp
ficomps
popf
and
ds
test
paddusb
pusha
lahf
or
sbb
ss
bswap
fdivrs
ret
jg
mov
shl
scas
imul
lcall
pop
lahf
mov
mov
or
add
pop
movsb
mov
fnstcw
pushl
scas
lahf
sub
mov
in
mov
inc
sub
pop
dec
xchg
mov
sub
aas
pop
sbb
pop
jle
push
enter
das
fucomp
cltd
mov
jl
push
inc
cmp
mov
iret
mov
dec
js
sbb
push
call
adc
add
out
sub
adc
lea
sub
clc
gs
pop
shr
pop
pusha
mov
scas
aas
notl
lret
shlb
inc
int3
aas
orb
nop
cmc
pop
aas
sbb
cmp
xlat
pop
aas
in
ss
mov
xlat
mov
xchg
xor
filds
ficoml
sbb
lahf
adc
pop
mov
scas
xor
in
dec
lret
out
ret
lcall
dec
ss
jmp
cltd
xchg
mov
aad
movsl
out
bound
cmp
shr
mov
outsb
jbe
out
sub
pushf
dec
out
enter
scas
insl
and
leave
in
xor
fwait
movsl
mov
pop
repz
jge
imul
dec
dec
daa
dec
mov
mov
and
pusha
dec
das
xchg
ja
jle
jecxz
xchg
xchg
je
shlb
jge
push
inc
dec
shrl
adc
dec
loope
out
aam
mov
leave
setbe
or
xchg
outsb
mov
add
mov
mov
sbb
sbb
enter
ss
pcmpeqb
iret
and
cmp
sbb
sub
fcom
dec
xchg
pop
mov
insl
jmp
pop
pop
aaa
pop
jns
icebp
out
out
push
add
and
pushf
xchg
setne
stos
pop
sahf
ljmp
daa
jge
xor
inc
pop
pop
ficomps
pop
jbe
sub
pop
es
sub
lahf
movsl
cmp
les
lock
lret
dec
xchg
outsb
mov
dec
popf
inc
or
iret
mov
cmpb
mov
mov
or
jmp
std
stos
dec
cmp
adc
mov
xor
sahf
dec
jle
cmp
inc
sub
rorb
mov
jecxz
stc
ds
div
xor
movsb
jecxz
pop
pop
outsl
jle
movsb
nop
je
fisttps
sbb
js
mov
push
jle
xadd
sbb
mov
xor
fwait
mov
fidivl
aas
imul
test
inc
dec
scas
aas
lea
andb
cmp
lock
aam
and
xor
sarb
int
cmp
ss
dec
xchg
sub
dec
mov
into
dec
adc
fcmovnb
movsl
inc
repnz
mov
add
rolb
ljmp
and
jo
lock
jo
sbb
movsb
mov
or
xor
rol
add
or
popf
push
into
mov
dec
ss
nop
push
jl
shrb
xchg
cli
sub
cs
xchg
dec
adc
nopl
add
insl
pop
iret
idivl
pop
fidivrl
int3
es
fcoms
cmc
dec
xchg
push
imul
cmp
aas
fnstcw
mov
and
fsts
mov
iret
into
in
mov
mov
movsb
rcrl
pop
mov
cmp
outsl
mov
das
movsl
jmp
enter
sub
lea
aaa
daa
mov
pop
dec
push
pop
push
dec
fldt
dec
popf
cmp
push
lahf
jno
jecxz
dec
dec
repnz
mov
pop
daa
sub
aas
adc
test
dec
ds
lock
pushf
add
shrb
xor
mov
out
adcl
data16
loopne
dec
arpl
ret
adcb
in
lock
xchg
and
daa
lcall
fnstcw
popa
loop
xor
iret
inc
movsb
ret
dec
mov
xor
lret
fiadds
cmp
lret
ja
adc
imul
repnz
iret
jno
out
idivl
div
pop
xlat
je
mull
dec
je
subb
aas
or
mov
jnp
or
insl
scas
add
lahf
jge
pusha
je
iret
xchg
outsl
out
add
out
pop
outsl
leave
ret
add
scas
js
mov
xchg
test
mov
pushf
scas
jb
cld
pop
out
mov
pop
cmp
out
dec
mov
mov
lret
mov
or
or
rcr
inc
fsub
ds
int3
mov
movsl
mov
cs
adcb
sub
and
shrb
in
and
mov
or
or
popf
inc
ss
cmp
shl
lods
sub
call
and
inc
aaa
mov
xor
shlb
andb
adcb
mov
enter
sub
mov
jl
pop
dec
push
push
iret
pop
scas
dec
xchg
into
scas
dec
sbb
iret
sub
fldl
inc
out
popf
jle
sub
rcll
into
std
pop
push
jg
sub
mov
inc
test
dec
orb
jo
fsubrl
adc
jo
fcomps
xchg
push
int
mov
xchg
mov
sub
repnz
addr16
mov
and
dec
mov
push
dec
rorl
arpl
rorl
mov
aas
fwait
pop
aad
push
clc
clc
sar
sub
mov
pusha
xchg
jno
adc
push
push
sarb
icebp
iret
sbb
fcmovbe
push
inc
insb
fmull
jb
ja
cmp
or
sub
xbegin
inc
push
popf
clc
inc
xchg
xchg
in
jmp
and
and
mov
jecxz
pushf
push
xlat
lods
in
lea
mov
popf
movsl
mov
in
lahf
loop
pop
imul
call
adc
test
xchg
outsb
sbb
inc
and
push
jb
fcoml
mov
fwait
mull
out
adc
bound
movntq
out
dec
jns
lret
ret
xchg
scas
mov
aaa
pushw
xchg
xchg
cmpsl
mov
orb
xchg
pop
std
sub
nop
scas
mov
dec
shlb
pop
sub
inc
pop
out
jecxz
xchg
repnz
ljmp
adc
push
ret
pandn
cmp
push
stos
adc
in
sub
outsl
inc
mov
mov
xchg
or
mov
jle
loope
ror
xor
movsb
adc
lods
mov
scas
lcall
push
outsl
inc
mov
scas
inc
in
xchg
jno
or
pop
pop
out
xor
lahf
pop
lods
xchg
cmp
adc
movsb
fwait
clc
push
shll
pop
aas
pop
jle
inc
repnz
mov
out
inc
xchg
add
pop
or
dec
xor
mov
mov
dec
aad
jb
jbe
pop
mov
push
push
jbe
xor
xchg
sub
jbe
rcr
adc
popf
xchg
jbe
adc
rcr
xor
and
mov
sbb
jmp
mov
or
test
dec
cmp
push
decb
push
scas
stos
out
out
push
addr16
mov
mov
push
jmp
daa
daa
mov
add
call
xchg
clc
mov
cmpsl
rcrb
cmpsl
sub
xchg
shlb
and
loopne
xchg
ljmp
jne
clc
clc
mov
or
call
sbb
cwtl
xchg
mov
jge
daa
inc
push
jmp
inc
add
mov
mov
mov
shlb
push
push
dec
mov
jne
jae
pop
shlb
ja
push
mov
loopne
loopne
ljmp
push
mov
divb
cmp
xchg
aad
mov
ds
xor
sub
movb
popf
xchg
jge
lahf
and
inc
ffree
push
arpl
rclb
sbb
jns
out
cmc
jbe
xor
push
subb
int
mov
in
lahf
jle
clc
and
mov
fidivl
stos
sarb
gs
outsb
adc
cmp
fisttpll
testl
sahf
out
inc
xchg
mov
out
lahf
or
push
xor
mov
sub
mov
gs
pop
xor
xor
xchg
popa
pop
or
sub
rcl
mov
fstpl
pop
xorb
shlb
mov
scas
repz
dec
xor
mov
rcl
bound
cmp
dec
insl
dec
inc
scas
adc
adc
mov
movsb
sbb
js
mov
aam
data16
aaa
pop
pop
push
push
cmc
push
pop
outsb
or
pop
adc
xor
cmp
out
outsl
mov
fsubr
lahf
outsl
shll
cmpsl
shlb
test
lods
in
fnstsw
pop
and
push
mov
add
sahf
xorb
call
xor
stos
inc
dec
nop
pop
repnz
movsb
movsl
data16
xchg
mov
or
fsubp
shrl
inc
loop
mov
loop
into
pop
xlat
inc
popa
push
pop
fnstenv
in
test
pop
test
stos
shr
cmp
sahf
mov
mov
lods
clc
data16
fst
loopne
pop
adc
daa
mov
jle
mov
cmpsb
cmpsb
push
idiv
mov
push
pop
out
push
sbb
dec
dec
clc
and
movsb
jb
mov
div
push
negl
movsb
push
test
scas
scas
pop
sub
sbb
jle
call
pop
js
mov
dec
sub
xor
xchg
xor
shrd
lea
mov
lahf
daa
mov
push
pop
inc
ljmp
jmp
imul
xchg
repz
mov
pop
dec
in
mov
rcrb
fmuls
cmc
add
fdivs
inc
xor
inc
xchg
mov
xor
vmovq
dec
lret
cmpsl
adcl
mov
iret
jo
xor
mov
xchg
cmpb
jg
jo
pushf
cs
in
xchg
fimuls
push
pop
imul
lret
stos
lock
ficoms
das
jl
pop
scas
add
cwtl
adc
pop
js
scas
idiv
pop
xor
jbe
mov
push
ficoml
shufps
sbb
out
xor
rcll
pop
mov
dec
aam
dec
sahf
xor
jge
mov
mov
fst
pop
out
das
mov
mov
sti
mov
xchg
xchg
push
cmpsl
je
inc
test
cmpsw
push
xor
inc
repz
xor
mov
jbe
mov
ljmp
mov
cwtl
push
pop
lods
scas
and
pop
test
push
dec
inc
jg
sti
mov
push
outsb
enter
push
ja
adc
inc
mov
mov
daa
out
cmc
mov
in
pop
inc
sbb
pop
mov
mov
xchg
jg
cmc
fisubs
icebp
sarb
pop
mov
fiadds
test
push
paddusb
js
xchg
pop
sahf
std
inc
sub
in
fwait
add
out
aad
rol
loopne
push
add
rclb
push
inc
mov
jmp
stos
nop
xor
out
sub
arpl
into
out
sbb
xor
inc
icebp
mov
test
mov
jmp
jge
jno
scas
ss
out
into
cmp
pop
push
fildl
xchg
jnp
jg
jnp
fs
fst
mov
jbe
push
scas
fwait
push
lods
ret
inc
mov
xor
ss
test
inc
jl
jle
xchg
movsb
sbb
stos
sbb
mov
xor
xchg
rcr
mov
lret
pop
movsl
cmp
mov
pop
mov
push
cs
jbe
stos
cmpsl
inc
sahf
inc
sub
fstpt
mov
cmp
pop
push
pusha
rcl
aas
lcall
outsl
sahf
mov
inc
sahf
or
xchg
mov
inc
sahf
xor
cmp
retw
negb
dec
mov
lahf
mov
iret
xor
xchg
ds
jo
jae
xchg
pop
fstpl
aad
sbb
daa
xchg
push
ss
xor
mov
popa
out
popa
out
rcrb
outsb
lret
cwtl
mov
out
decb
mov
not
lea
int
xor
add
mov
fwait
pop
popf
fs
sti
ds
push
add
std
dec
cmp
test
push
sub
out
vandnpd
jno
adc
inc
ss
ds
test
jmp
sbb
sub
jg
mov
inc
cmp
cmp
push
js
cmp
int
xchg
clc
loop
fidivl
mov
pop
or
test
scas
aaa
fcmovnbe
pop
gs
cli
aaa
mov
xor
cmc
or
lahf
push
mov
in
into
lahf
repnz
not
mov
fisttpl
into
xchg
mov
loopne
insl
das
es
and
adc
pop
popf
push
test
int
mov
and
mov
mov
lahf
xor
insl
out
push
push
mov
cmpsl
mov
add
lahf
mov
shlb
test
testb
sahf
sbb
push
imull
lret
xor
xchg
out
not
lahf
ja
xchg
mov
dec
scas
xor
pop
xor
inc
and
pop
bnd
mov
dec
lret
mov
fists
addb
push
call
clc
cmp
lcall
pop
aaa
test
divb
jne
in
addr16
cmpsb
ffreep
mov
sarb
push
sbb
nop
push
mov
iret
mov
mov
lods
nop
push
nop
call
lock
cmp
scas
popa
mov
movsb
mov
movsb
xchg
inc
push
int
lahf
movsl
inc
inc
xchg
lea
test
mov
pmaxub
imul
or
push
insl
pop
loop
mov
mov
mov
jmp
cs
add
sbb
jbe
and
mov
pop
dec
lods
cmc
mov
gs
pop
call
lcall
cmp
push
ja
test
inc
xor
xchg
mov
sahf
ljmp
and
push
sarl
push
mov
mov
mull
popa
inc
jbe
inc
mov
xchg
jns
mov
fiaddl
out
sbb
push
stos
pop
dec
ljmp
xor
icebp
aad
jbe
stc
dec
and
mov
cwtl
mov
push
int
push
std
mov
pop
stos
and
cmp
shlb
stc
mov
push
sti
scas
xor
orb
jae
lret
imulb
pop
sub
mov
mov
cmc
xor
fbstp
test
push
nop
je
push
dec
push
fsubr
fcmovb
jge
add
shll
fldz
scas
pusha
jle
movsl
jecxz
cmp
cmpsl
ljmp
sbb
mov
jae
or
clc
in
mov
mov
das
mov
fldt
add
leave
outsb
fistl
mov
pop
jle
inc
arpl
js
into
or
scas
ss
dec
dec
sub
sahf
inc
subb
cmp
xor
out
push
es
fwait
pop
js
ljmp
outsl
dec
push
dec
jp
pop
scas
mov
push
sub
mov
or
jbe
cmpsl
fisubs
mov
js
aas
out
jg
addr16
pop
mov
jno
adc
push
fidivrs
pop
xchg
mov
jp
dec
cwtl
aaa
rclb
cmc
loop
addr16
jb
loopne
leave
decb
es
cmc
incb
jp
lahf
xchg
push
int3
dec
cmp
loop
nop
and
sbb
mov
add
sbb
mov
ss
push
int3
addr16
mov
push
inc
mov
mov
push
in
jge
test
andb
mov
icebp
es
lods
mov
mov
sub
sti
iret
pop
iret
inc
iret
mov
sahf
cs
dec
call
mov
scas
out
dec
pop
daa
xor
movsb
bound
loopne
add
inc
lret
mov
jp
mov
idivl
test
out
mov
adc
mov
or
cmpsl
inc
clc
dec
aam
inc
xor
pop
scas
add
jae
ja
push
inc
push
or
inc
xchg
iret
aaa
push
jne
xchg
out
fbld
lahf
push
cmp
mov
neg
push
lahf
sub
je
iret
push
cmp
iret
xchg
mov
test
inc
push
pushf
pop
pushf
ja
ss
das
fidivrs
xchg
adc
pop
cmpsb
fs
xor
les
scas
lods
cmp
addr16
adc
mov
mull
popa
mov
das
enter
bound
lods
roll
icebp
xor
aaa
mov
cmp
inc
les
js
lock
scas
mov
into
lods
lahf
std
fistl
mov
divb
ds
scas
lcall
fldcw
add
data16
dec
subl
cmp
lods
enter
sbb
ror
mov
stc
addr16
testl
cmp
imull
js
xor
push
push
aad
cwtl
sarb
pop
xchg
enter
jno
loopne
push
lods
popf
push
aaa
adc
mov
dec
and
lcall
mov
mov
dec
inc
stc
adc
sbb
pop
imul
cs
lahf
and
push
mov
movsl
idivl
pop
or
inc
and
pop
nop
lret
push
add
xchg
jecxz
popa
dec
pop
and
mov
lahf
jnp
dec
mov
nop
scas
add
push
mov
mov
clc
out
lret
lods
pop
mov
jb
jbe
dec
xchg
jae
arpl
mov
cltd
inc
ss
in
subl
cmpb
or
es
lret
jp
mov
rclb
cmpb
push
movsl
or
imul
nop
inc
xor
aaa
aaa
jno
shll
std
int
movsb
das
in
aas
xor
xchg
xchg
insl
out
mov
dec
and
mov
push
jo
push
lret
mov
sahf
inc
leave
push
dec
fcmovb
outsb
cmp
popa
mov
mov
sbb
std
inc
mov
push
aad
ljmp
xor
xchg
ljmp
push
loope
ret
add
add
jbe
repnz
imul
push
mov
jecxz
imul
sahf
dec
dec
xchg
arpl
mul
inc
xlat
xchg
jp
mov
add
mov
inc
xchg
mov
popf
pop
pop
add
xor
lods
jge
dec
inc
fbstp
fwait
out
fsts
lods
mov
mov
jb
add
push
dec
sbb
lret
pop
loop
popf
je
or
lahf
imul
iret
loope
sub
mov
scas
xchg
out
push
stos
outsl
xchg
out
mov
push
mov
pop
fisubrs
sub
dec
mov
pop
test
cs
loope
ja
jmp
jno
out
testl
ds
jge
pop
mov
loope
popf
xchg
subl
loopne
mov
jecxz
pop
ja
mov
push
dec
pop
insb
div
outsb
aas
inc
jge
loop
cmpsb
inc
push
inc
mul
xbegin
loop
pop
in
iret
dec
pop
in
adc
int
or
mov
jecxz
outsb
sti
sbb
add
jecxz
mov
jns
cmp
test
ficoms
int
int3
add
test
jbe
mov
lcall
ljmp
add
cmc
or
sub
and
outsb
popf
lahf
insl
dec
sbb
aad
nop
bound
loop
out
enter
mov
clc
mov
std
pop
lahf
xor
out
scas
or
pop
sahf
ret
or
inc
add
adc
stos
sbb
push
ja
inc
in
imul
dec
clc
mov
popf
cwtl
mov
inc
xor
pop
xor
push
fldt
push
dec
cli
pop
and
push
fimull
out
lock
pop
dec
cmp
add
stos
mov
jg
pop
test
pop
bts
clc
sbb
inc
xor
test
mov
movsb
pop
out
jb
popf
cmpsl
je
inc
into
pop
cmp
add
xchg
stc
cmpsb
pop
inc
subb
xlat
inc
or
popf
push
pop
aaa
inc
addr16
dec
inc
xor
lock
xor
xchg
daa
dec
bound
popf
push
mov
sbb
push
aad
and
daa
mov
or
push
jmp
lods
shll
inc
repnz
cmpsb
aaa
inc
cmp
jbe
pop
loopne
loop
dec
lret
jo
add
cmc
mov
dec
cmp
notb
dec
jbe
out
pop
insl
or
ljmp
clc
popa
jo
add
xchg
mov
call
xchg
movsb
fnstenv
pop
sub
dec
jae
loopne
xchg
loop
cmpb
nop
jecxz
into
mov
mov
xlat
push
cmpsl
mov
push
inc
div
pop
dec
inc
clc
mov
mov
shrl
pop
es
pop
pop
fidivrl
testl
notl
pop
xor
mov
std
dec
cmp
daa
out
jne
cmpsb
jl
inc
rcll
in
mov
fdivs
sbb
pop
out
mov
add
push
lahf
push
lods
ret
pop
test
repz
scas
sbb
ret
mov
push
push
jmp
or
or
add
nop
jno
jne
aaa
xchg
movsb
insb
add
push
dec
xchg
aas
xlat
mov
mov
push
enter
scas
dec
inc
daa
sahf
aas
testb
mov
fucom
push
and
int
sub
add
out
aad
arpl
pushf
fst
lret
inc
ja
popf
or
or
sub
and
mov
push
push
scas
xor
jo
pop
mov
hlt
pop
dec
popf
dec
dec
enter
mov
in
mov
sbb
sub
xorb
cmp
jnp
mov
xor
cmp
repz
lret
pop
jle
lcall
inc
inc
cwtl
lods
gs
cmp
jecxz
aaa
ljmp
push
movsb
dec
rcll
insb
movsb
out
loop
pop
mov
mov
mov
cmp
cmp
sahf
mov
xchg
fs
sub
test
aad
xchg
mov
mov
mov
lods
sti
outsl
mov
inc
jb
jnp
adc
xchg
js
popa
lcall
xchg
push
andl
lahf
xlat
ficoms
cs
clc
mov
dec
cmp
mov
lods
push
mov
push
lds
or
aas
push
mov
mov
movsl
loop
cmpsl
sbb
pushf
push
popa
jns
aad
xchg
cmp
into
mov
push
rcll
jge
and
sub
loopne
je
lcall
sar
ja
pop
push
and
xchg
mov
sti
mov
cmp
sub
xor
push
xchg
fsubrs
inc
dec
into
jns
cmpsb
pop
jne
js
or
stos
mov
cmp
and
jmpw
fiadds
aad
in
jmp
pop
push
movl
insb
sarb
xchg
mov
add
adc
mov
and
cmc
fildl
mov
cmp
movsb
imul
mov
push
cmp
push
jb
lods
std
push
ss
popf
dec
inc
and
test
xchg
dec
mov
ja
add
sti
pop
cs
out
insl
loopne
inc
shl
data16
fdivrp
pop
inc
sbb
lea
xor
mov
pop
loopne
xchg
js
jg
sbb
mov
push
jecxz
add
mov
xor
mov
mov
mov
mov
xor
dec
pop
xchg
ljmp
jge
out
xrelease
ret
xchg
ljmp
jno
movsl
sbb
push
out
push
gs
imul
mul
icebp
jne
jmp
leave
fidivs
xchg
sub
push
sbb
imul
mov
xor
jge
cmc
jmp
add
xchg
jge
imul
jmp
clc
mov
clc
in
and
push
mov
addl
imull
dec
cmp
pop
pop
sahf
mov
sahf
or
mov
jle
testl
mov
sti
rcrb
push
lods
pop
jae
dec
pop
nop
int
je
xchg
aaa
loope
dec
out
incl
pop
lret
pop
push
insl
filds
shrl
inc
xchg
cmc
jecxz
mov
pop
cmc
fs
cmc
add
rcrl
mov
mov
test
pop
xchg
xchg
jo
fucomip
shll
push
imul
mov
test
movsb
xchg
adcl
mov
mov
je
mov
mov
fiadds
inc
jbe
jl
sahf
push
or
mov
testb
aas
and
mov
call
push
aad
push
call
insb
leave
and
ljmp
pusha
scas
sbb
push
inc
rolb
test
out
xchg
popf
mov
lods
cmp
xchg
dec
mov
add
pop
repnz
dec
call
xor
lods
imul
mov
pushf
lds
mov
inc
jb
mov
pop
std
stos
mov
mov
stc
cmp
fdivs
jmp
lahf
inc
mov
dec
push
xchg
je
mov
fistps
sbb
cmp
clc
xchg
pop
enter
cmc
fisubl
out
push
push
dec
pop
pop
push
pop
fst
xor
insb
jg
aaa
dec
or
push
imul
iret
fdivl
inc
mov
and
push
adc
or
int
push
movsb
aas
mov
cmpb
stc
int
jg
ljmp
ss
loopne
out
ja
daa
pop
pop
mov
je
ja
shl
inc
sti
cmp
and
pop
xchg
xchg
mov
mov
popa
lds
pop
divl
or
sub
frstor
out
add
fcomip
jecxz
inc
mov
xlat
jmp
mov
inc
jbe
into
mov
inc
std
mov
pop
movsl
add
lods
add
push
dec
push
pop
or
js
mov
push
sub
mov
fnstsw
ljmp
ja
jb
mov
out
stos
xchg
aas
xor
xchg
jne
gs
mov
cmc
lods
mov
cmpsl
jnp
push
dec
or
in
push
jne
test
push
add
or
push
push
jmp
add
out
or
mov
mov
out
pop
dec
mov
push
addb
pop
out
mov
pop
aaa
cmpl
in
add
daa
mov
jbe
out
push
jge
data16
or
pop
repz
lcall
xor
mov
in
pop
push
ja
xchg
inc
shrb
xchg
mov
xchg
jp
xlat
mov
decl
mov
repz
lcall
push
hlt
into
mov
or
push
mov
mov
xor
adc
mov
sbb
mul
xor
cmp
cmp
je
mov
rcl
ljmp
jmp
jp
lret
inc
lds
rorb
in
sbbb
testl
mov
mov
mov
mov
jmp
cwtl
outsl
add
in
lods
addb
movb
dec
xlat
xchg
push
push
popf
scas
dec
cmc
sbb
insb
rclb
stos
push
cmp
jge
flds
push
xchg
stos
mov
mov
fildl
mov
aaa
scas
pop
cmp
arpl
jne
out
aad
dec
iret
xchg
xchg
mov
stc
sbb
jns
sbb
push
xchg
in
dec
sub
pop
insl
testl
mov
jo
inc
lock
jne
adc
ja
stos
negl
aaa
inc
cmp
mov
mov
xchg
mov
shrl
xchg
mov
flds
popf
mov
jne
mov
and
clc
addr16
dec
je
add
lret
movsb
mov
enter
add
leave
std
cmp
xchg
jne
pop
mov
xor
ja
out
dec
lock
out
push
jecxz
inc
loop
call
sti
hlt
stos
cs
add
out
int
inc
push
add
testl
jnp
mov
in
xchg
mov
inc
mov
scas
pop
loop
aas
jbe
loopne
and
orb
inc
jp
out
pop
fs
sub
inc
iret
jne
or
repz
je
push
dec
add
inc
imul
push
aas
popf
jb
xchg
gs
popf
mov
jle
add
xor
or
scas
es
xchg
push
outsl
pop
test
stos
dec
add
lock
dec
mov
imul
mov
sub
dec
push
repz
mov
fisubs
mov
loope
mov
out
mov
lahf
jbe
sbb
inc
jns
leave
adc
mov
xchg
lods
inc
bnd
incb
jecxz
dec
fcompl
js
jle
or
std
push
dec
repz
push
or
fwait
rclb
mov
test
fstps
inc
mov
cmc
jg
jmp
lods
sti
incl
cs
pop
mov
pop
add
push
lret
ss
sbb
mov
or
inc
cwtl
lods
or
loop
cmp
repnz
cmp
dec
mov
mov
cmpsl
cltd
lods
fcmove
mov
out
test
pop
cmc
push
or
aaa
shlb
andl
js
dec
or
cmp
repz
fldt
cmp
add
orb
push
into
aad
mov
mov
and
negl
je
jnp
rolb
jo
into
es
int
push
aas
and
aad
jns
idivl
jl
push
test
jno
test
pcmpeqw
inc
push
or
sarb
lcall
push
jecxz
outsl
jns
jne
push
xor
inc
js
dec
dec
ss
sbb
ljmp
sahf
push
js
test
mov
call
or
inc
inc
push
mov
pop
or
mov
jns
mov
je
push
or
dec
or
fldl
xchg
ljmp
mov
call
mov
gs
mov
enter
mov
cmp
int
pop
mov
mov
mov
mov
mov
aad
mov
sub
mov
mov
pop
push
shll
dec
shrb
mov
jmp
das
dec
adc
or
divl
idivl
cmpsb
push
jg
inc
fmull
inc
lret
sbb
jb
cwtl
aaa
xlat
notb
or
clc
xchg
fdiv
push
xlat
loope
xchg
and
push
clc
xor
push
pop
scas
rcrb
cmpsb
xlat
mov
hlt
jns
outsb
in
inc
addr16
icebp
pop
out
mov
daa
stc
mov
and
jns
push
cmp
fidivl
jge
xchg
push
std
in
xlat
add
and
mov
iret
ljmp
jmp
add
stos
xchg
xor
jbe
inc
or
dec
lods
dec
mov
call
aad
out
filds
pop
adc
cmp
xor
flds
jns
mull
aaa
sbb
in
cmpb
cmp
xor
pop
lods
repz
subb
pop
jge
inc
push
push
xlat
btr
test
inc
push
pop
movsb
popf
mov
subb
sbb
jg
pushf
pusha
mov
mov
mov
jmp
and
out
jmp
insl
sahf
jge
jg
fisubs
jmp
into
jmp
xor
lret
inc
pop
pop
out
jne
pop
mov
mov
mov
pop
push
gs
dec
add
inc
aas
scas
popa
dec
xor
imul
xchg
push
andb
push
out
testl
mul
cs
test
out
add
pop
rorl
xchg
pop
mov
xlat
cmp
fisubrs
in
orb
mov
daa
jnp
mov
xor
clc
push
mov
stos
scas
jbe
popa
fucom
adcb
push
add
mov
push
or
push
xlat
insb
and
dec
out
push
aad
mov
inc
push
lods
or
add
das
out
into
cltd
cmpsl
popf
jae
pop
add
test
mov
or
sbb
dec
lret
push
mov
fimull
pop
scas
andl
out
pop
cs
push
and
sbb
mov
push
or
push
adc
or
call
xor
fs
pop
sbb
mull
fbstp
sub
mov
into
imul
jge
stos
jbe
lret
xor
lcall
loope
dec
mov
jbe,pn
repz
aad
sbb
fs
aad
push
jp
push
jae
lahf
add
push
cmpsb
or
jb
add
in
inc
dec
push
xor
ljmp
add
loop
loope
bound
push
das
inc
loope
mov
ljmp
add
mov
sbb
add
mov
inc
mov
mov
mov
movsb
jecxz
js
dec
sbb
fldl
xlat
cwtl
push
jmp
test
cmp
fimuls
mov
push
popa
cltd
inc
mov
push
lods
sub
addl
dec
popa
mov
in
decl
add
aaa
std
jmp
in
pop
loop
cmpsb
mov
popa
lea
xchg
sbbl
or
push
xlat
hlt
nop
push
dec
xchg
push
cmpsl
fbld
enter
jge
push
jae
movsb
cmovnp
movsb
sti
push
lahf
mov
pop
mov
dec
lods
lods
rorl
mov
cmp
into
jle
ja
rcl
mov
mov
divl
cltd
dec
xor
jne
and
inc
cmpsl
ja
testb
popa
xor
insb
mov
mov
movsb
xchg
and
scas
inc
dec
data16
lahf
cmpsb
gs
jecxz
std
cmp
jbe
fidivl
das
ljmp
sahf
mul
negb
push
add
popa
inc
out
pop
push
mov
das
mov
and
add
xchg
mov
add
mulb
data16
iret
jae
ja
dec
push
xlat
shl
lods
pop
jmp
std
inc
mov
pop
roll
push
hlt
mov
or
cmpsb
outsb
jmp
gs
ljmp
jo
inc
mov
dec
ret
mov
pushl
jo
xlat
add
call
mov
ret
mov
iret
stos
imul
lods
rcrb
popw
and
jge
lahf
dec
adc
mov
icebp
rcrb
imul
out
mov
mov
mov
scas
scas
mov
and
add
xor
out
add
pop
cmp
mov
cmp
inc
sub
add
int
pop
mov
and
push
xchg
inc
xor
add
cmpsb
inc
lcall
popa
sar
push
jmp
sti
sub
pop
xchg
leave
lds
rclb
add
mov
popf
ret
adc
or
dec
adc
mov
in
adc
jno
pusha
pop
mov
pop
stos
mov
push
sub
lods
cmpsb
mov
cmpsl
push
sub
pop
jmp
ds
fucomp
data16
das
adc
in
jo
cmp
add
sti
xchg
popf
dec
dec
xchg
mov
insl
lcall
jne
add
jne
jg
push
push
pusha
dec
inc
fcoms
testb
jb
aad
jo
std
imul
mov
or
jmp
dec
xchg
mov
xor
mov
pusha
popf
js
popa
scas
mov
mov
mov
jns
scas
jge
lods
mov
push
pop
xchg
pop
dec
aaa
inc
jl
test
testl
or
inc
divl
jl
ja
xchg
or
mov
not
int
mov
cmp
mov
add
mov
mov
mov
popa
mov
rcrl
jle
lret
inc
mov
fidivl
push
lahf
mov
push
pop
lret
mov
mov
pop
orb
enter
mov
lea
dec
and
inc
jecxz
adc
xor
mov
popf
dec
orl
repnz
dec
pushf
push
negl
push
mov
stc
lods
sub
icebp
scas
mov
das
lret
lcall
ljmp
xor
mov
outsl
inc
pushf
bound
dec
cmpsb
xchg
insl
popl
push
push
push
mov
cwtl
insl
ret
scas
mov
mov
data16
clc
jle
mov
test
mov
out
push
ret
cld
pop
inc
xchg
out
mov
outsl
testl
stos
addr16
insb
add
push
pusha
add
add
xchg
pop
popa
lds
push
push
movsb
sarl
push
adc
js
mov
sub
mov
mov
jl
mov
lahf
mov
mov
into
push
loop
outsl
mov
add
lahf
add
sub
add
xchg
int
dec
fistpll
push
or
mov
push
or
inc
movsb
push
mov
imul
or
push
arpl
jl
dec
pop
pop
fnstcw
popa
xlat
movb
mov
xlat
pop
inc
mov
aaa
push
fildll
jmp
rep
dec
pop
adc
movsb
inc
ljmp
and
jg
mov
push
inc
xlat
ss
popf
lds
lahf
out
xor
mov
test
ja
or
pop
mov
push
lret
rcl
pop
cld
xchg
and
fistl
pop
jmp
imul
shll
lods
addb
cmpsb
sub
shrb
pop
lods
xchg
insl
movl
or
fwait
xchg
popf
insl
divl
popa
mov
xor
cmc
stos
xchg
adc
out
movl
dec
js
mov
mov
dec
mov
cmp
lods
cs
and
mov
xor
push
fstps
neg
adc
rcrb
dec
in
cmp
sahf
out
jne
sarb
rorb
xchg
fbstp
xchg
lods
add
das
xor
and
xor
and
or
jne
mulb
mov
mov
mov
out
jp
je
push
dec
fldt
jg
push
outsb
add
jmp
fisttps
jecxz
xlat
pop
cltd
add
sub
inc
dec
cmp
push
cmp
xchg
insl
mov
mov
cmc
outsl
popa
push
das
aad
outsb
or
mov
adc
inc
mov
and
pop
jmp
imul
push
push
call
cmc
mov
pusha
mov
scas
mov
mov
add
xchg
js
adc
icebp
pop
aaa
testl
scas
inc
and
pop
std
xchg
mov
sahf
dec
mov
sub
cmpb
jmp
adc
fwait
inc
jg
sub
xor
js
into
bound
jmp
inc
xchg
xchg
pop
mov
popf
or
cmp
push
pushf
outsb
shr
mov
dec
pusha
pop
cli
js
pop
mov
and
aad
xchg
mov
aad
addr16
mov
nop
cmp
jg
xlat
mov
push
inc
inc
add
cmp
mov
cmc
and
loopne
and
jbe
idiv
sarb
pop
lods
jno
xor
jmp
xchg
mov
cmpsl
aaa
inc
mov
fs
push
inc
and
inc
and
mov
cmp
lahf
inc
pop
mov
pop
mov
icebp
sub
cmp
cmc
pminub
dec
mov
inc
popa
jne
out
cmpsl
scas
mov
cltd
dec
jo
ljmp
das
sbb
dec
cmp
fs
inc
jo
jl
mov
sbb
dec
jns
pop
mov
mull
rcrb
add
sti
jge
bound
inc
push
dec
scas
in
ljmp
xor
outsl
inc
imull
incl
jle
addl
outsl
xor
mov
inc
insb
sti
movsl
mov
in
jbe
or
add
adc
fidivl
ljmp
icebp
adc
add
fdivrs
jge
pusha
dec
stos
push
jbe
dec
add
mov
xor
push
out
add
xchg
dec
das
xchg
or
jle
scas
jo
stos
movsb
test
adc
out
aaa
movsb
push
shll
xlat
cs
push
push
sti
pusha
dec
mov
lea
bound
sub
out
xchg
add
xchg
xor
add
xor
or
inc
in
out
daa
push
repnz
test
ss
pop
notb
mov
mov
lcall
mov
cmp
mov
arpl
cs
push
clc
aad
push
mov
add
iret
imull
pop
bnd
gs
bound
xor
xchg
testl
in
push
gs
test
cmp
sahf
push
pop
pop
pop
mov
insl
cmpsl
or
dec
negl
jnp
cmp
incl
loop
inc
in
mov
adc
and
xor
jo
fs
movsb
adc
ljmp
inc
incl
jle
cmp
out
jle
xchg
sub
cmp
mov
jo
mov
sub
jo
nop
enter
movsl
sub
testb
mov
sub
push
xchg
loopne
cmpsl
rcll
enter
add
sub
or
into
cmp
or
out
fmuls
aam
and
in
fcom
loop
and
ret
clc
test
mov
xor
jmp
dec
ret
in
lcall
cmc
in
mov
dec
or
insb
cmpb
jge
jns
in
add
int3
pop
imul
hlt
mov
cmp
jno
adc
dec
adc
loope
jge
iret
movsb
bound
inc
pop
mov
pop
adc
push
xchg
popf
scas
sarb
pop
mov
sub
rorl
lcall
mov
xor
xchg
xor
mov
mov
cmpb
aaa
aaa
outsl
mov
pop
push
fdivrl
pop
mov
cmp
divb
sub
daa
pop
inc
and
pushf
sub
loopne
xlat
dec
dec
shrb
mov
mov
shll
jg
popf
lods
dec
aaa
mov
stc
aam
adc
subl
rcrb
xor
jbe
lret
pop
sub
mov
mov
int
mov
jg
cmpsl
pop
mov
cmpsl
daa
fmul
adc
iret
ljmp
xor
jne
outsb
loop
pop
or
jge
stc
push
leave
icebp
and
ja
mov
lods
mov
gs
fimull
andb
call
xor
pop
cmc
movsb
adc
adc
icebp
shr
lds
adc
sub
outsl
xchg
lods
and
xor
ja
jmp
pop
pushw
jp
or
push
sub
cmp
lret
push
ljmp
push
stos
push
mov
push
imul
sbb
sub
cmp
leave
push
flds
jmp
push
cltd
jne
lea
or
arpl
jae
popf
ja
fadds
jnp
fwait
or
out
outsl
or
dec
jae
popf
xchg
lods
test
adc
out
jnp
jg
fiaddl
or
add
inc
or
psubusw
cltd
das
pop
aas
pop
iret
pop
fistps
ret
pop
add
hlt
pop
mov
pop
inc
jae
pusha
out
xchg
jo
jo
jo
jo
jo
jo
jo
jo
jo
jae
test
mov
pop
frstor
scas
fwait
dec
mov
ljmp
mov
std
sub
lds
sti
fucompp
mov
outsl
jle
dec
lods
icebp
mov
ja
jnp
jg
add
push
or
jae
add
adc
and
xor
ret
or
or
or
or
or
or
jb
add
adc
and
xor
ret
or
or
or
or
clc
fdivrs
movl
stos
fnstsw
stos
sub
les
aam
imulb
sub
aam
jbe
sub
jae
xchg
fsubrs
movb
arpl
into
adc
enter
push
mov
mov
pushf
ja
jnp
jg
add
outsl
pop
push
aad
pop
mov
jae
mov
outsb
mov
push
outsb
push
jle
push
push
mov
pusha
fisttps
sub
into
lock
sub
sub
stos
mov
push
add
sub
pop
scas
out
xor
shlb
jnp
jg
add
je
popf
lods
out
mov
add
dec
jle
jno
enter
ja
jnp
jg
cwtl
mov
ja
jnp
jg
add
dec
mov
xor
das
addr16
std
sbb
hlt
stos
dec
dec
sub
xchg
cld
outsl
dec
nop
mull
scas
adc
xor
aad
aas
rcr
iret
lea
fdivrs
jg
xor
fimull
pop
pop
outsb
sbb
fxch
lea
cmp
clc
lods
test
out
lds
jns
adc
push
jmp
xor
adc
and
int3
xabort
or
lret
pop
loop
push
cmp
sub
loopne
mov
sub
pop
sub
test
xchg
jle
sbb
mov
pop
test
xor
test
dec
push
bound
mov
lock
push
pop
xorb
xchg
cwtl
lds
cmpb
into
xchg
shr
pusha
jle
sahf
push
scas
push
mov
push
jge
or
push
cmp
push
in
push
std
push
lea
lods
push
mov
push
pusha
push
jo
pop
push
adc
data16
jbe
jle
push
lock
addb
push
mov
iret
sub
jo
jo
jo
jo
jo
sbb
jo
jo
jo
jo
add
pusha
mov
jo
jo
jo
jo
jo
jo
jo
jo
jo
add
push
sahf
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
push
push
in
das
std
es
push
pop
pusha
pop
jo
sbb
adc
and
rcr
loopne
lock
sbbb
pop
dec
pop
pop
pop
outsl
pop
jg
subps
pop
das
pop
iret
pop
fistps
lcall
lahf
pop
scas
pop
mov
pop
outsb
pop
jle
push
pop
push
pop
cs
ds
into
pop
ficomps
pop
mov
scas
pop
mov
pop
insl
pop
jge
or
popf
xor
imul
or
add
leave
xor
jae
fcmovbe
lcall
adc
cmc
pop
movsl
pop
insb
pop
sbb
ja
dec
int
cwtl
outsb
pop
jbe
jle
das
pop
inc
ret
fcomps
enter
loopne
mov
mov
icebp
sub
je
je
je
je
je
je
add
je
je
je
je
or
dec
pop
push
or
adc
jo
jo
jo
negb
push
fiadds
out
ret
inc
or
or
pop
or
jge
or
or
or
or
or
or
or
jae
adc
jnp
jg
add
pop
loopne
lock
adcb
dec
mov
inc
jo
jo
jo
negb
into
push
pop
mov
jbe
jle
push
in
jo
and
nop
mov
lret
cmp
scas
leave
or
popf
leave
inc
in
mov
or
dec
cld
insl
not
mov
mov
or
or
fcoms
rol
mov
mov
pop
jo
jo
jo
jo
push
dec
es
sub
and
test
mov
adcb
sbb
mov
lods
leave
push
leave
or
sbb
xor
in
test
sbb
addr16
or
rcrl
fwait
pop
mov
fs
xchg
je
pop
data16
das
xlat
rol
push
leave
and
xchg
mov
movsl
clc
jae
xchg
jnp
fcoms
in
sbb
mov
ja
popf
aaa
lods
sahf
ficoms
rcrl
subb
fisubl
pop
xchg
popf
dec
xchg
aad
mov
mov
imul
pop
mov
xchg
insl
stos
xchg
test
inc
test
xor
shlb
rcrl
mov
mov
push
cmpsl
fisttps
adc
jo
jae
jbe
lods
sub
cli
pusha
xchg
jo
jo
jo
jo
idivb
arpl
sub
test
jl
cmp
aam
fwait
sub
inc
test
sub
xor
xchg
mov
dec
bound
pop
mov
mov
mov
ljmp
leave
lahf
leave
scas
leave
mov
xor
add
je,pn
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
pop
jge
jo
jo
jns
test
lock
mov
test
jg
pop
pop
test
insl
fistps
lcall
lahf
push
push
test
into
movsl
fdivrp
insl
sbb
data16
pop
jnp
addb
fdivrl
sbbb
movl
inc
sub
sub
mov
pop
negb
scas
pop
dec
push
sbb
push
icebp
push
lea
test
push
jo
cmp
rolb
and
push
push
cmpl
ja
jnp
nop
lock
fidivl
push
ja
xchg
leave
rcrl
push
mov
xchg
lcall
push
jo
adc
xor
shll
icebp
rclb
je
je
je
je
je
or
je
je
je
je
je
je
je
je
je
je
nop
inc
dec
jo
jo
jo
jo
jo
or
ds
into
cmp
int3
cmp
leave
mov
sahf
leave
scas
xor
sarb
mov
sub
je
je
pop
cwtl
lea
testb
or
jo
jae
adc
cwtl
rorb
xorb
mov
pop
test
setge
fldenv
pop
iret
pop
fildll
mov
je
je
arpl
cmc
lock
mov
fsts
cltd
inc
pop
add
aad
mov
lock
lock
push
push
jno
xchg
mov
arpl
jg
nop
repz
testb
sub
out
jg
mov
pop
mov
jbe
xchg
aas
shll
fwait
je
je
jg
or
or
or
or
xor
pop
ds
mov
cmp
sbb
incl
push
popf
push
lods
cs
fsubp
jl
sahf
fisubrl
daa
push
insl
push
jge
or
jecxz
mov
jne
enter
test
xchg
cwtl
fs
in
ja
jnp
jg
movsb
sbb
daa
std
dec
jo
jo
out
and
pop
jecxz
inc
decb
arpl
cwtl
sub
dec
xchg
push
mov
push
push
pusha
lock
or
and
mov
imul
fistl
or
mov
push
incb
mov
sahf
push
scas
push
mov
push
insl
push
jge
or
shlb
adc
xor
repnz
movsl
je
pop
das
stos
lods
test
jae
pop
jge
movsl
sub
pop
sti
nop
stos
push
decl
rclb
xor
sbb
mov
fiaddl
jb
and
adc
sbb
test
fdivs
jnp
movl
mov
sbb
mov
ja
jnp
mov
fmuls
adc
call
subb
out
movb
push
clts
pop
push
das
push
iret
push
filds
out
idiv
int3
xchg
leave
add
mov
prefetch
sbb
les
mov
shrb
xor
inc
jae
mov
pop
fsubrl
ja
sub
xor
inc
dec
push
pop
into
xor
popf
jae
pop
cmp
stos
push
jg
pop
mov
push
pusha
shlb
fdivp
rcl
sub
es
push
out
mov
stos
push
aad
mov
mov
in
lea
sbb
xor
pusha
fsubrs
ja
pop
xor
scas
lret
adc
mov
adc
outsl
outsl
inc
fsubrp
ljmp
into
insl
cmp
popf
test
inc
push
jbe
push
push
lock
sub
sub
dec
jo
lods
xchg
mov
sub
jo
jo
out
call
out
test
test
in
bswap
cmp
push
add
mov
dec
pop
lods
pop
push
push
xor
mov
lret
aas
lods
nop
inc
test
mov
jo
jo
jne
pop
daa
data16
jbe
stos
jle
lea
ljmp
cmpxchg
push
or
lock
ljmp
cmp
adc
dec
ja
cmp
mov
add
push
test
imul
int
imull
cmpl
lods
int
test
sub
vsubpd
push
js
call
test
pop
sbb
xchg
lret
xchg
dec
xchg
cwtl
cmp
xor
rcll
adc
push
mov
into
jo
out
mov
mov
outsl
xor
dec
cwtl
jnp
and
mov
outsb
jbe
dec
push
mov
or
lods
out
dec
xchg
test
add
outsl
pop
pop
or
les
popf
lcall
dec
mov
jb
movb
cmp
sbb
aaa
nop
sub
out
xor
lea
inc
sahf
unpcklps
mov
ficomps
pushf
rolb
sub
push
mov
ss
aas
fnstcw
std
push
sbb
xor
fstl
aaa
std
je
je
je
je
je
je
pop
pop
jo
in
mov
add
pop
sub
ljmp
imul
jnp
jg
add
mov
dec
lods
lock
adc
clc
xchg
push
push
icebp
sbb
adc
sbb
cmp
call
adc
scas
push
mov
insl
jmp
sbb
leave
int
in
cmp
adc
inc
je
je
jl
jnp
xor
pop
jge
add
dec
mov
insl
jo
jo
jae
testl
out
dec
mov
mov
es
pop
adc
fimuls
mov
sahf
push
mov
je
dec
fdivl
push
sub
fmuls
mov
icebp
int
mov
sbb
xor
and
test
lret
xor
adc
push
xor
cld
data16
push
int3
lods
add
and
mov
or
inc
sahf
mov
leave
pop
leave
outsb
leave
jle
push
cmp
test
nop
dec
pop
mov
ljmp
mov
std
push
int
fst
jp
dec
out
stos
sub
out
cmc
data16
jbe
jle
push
lock
mov
dec
xor
xchg
leave
jg
rdtsc
pop
adc
aas
je
je
je
je
je
je
je
je
pop
sub
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jge
or
mov
in
dec
ds
ljmp
inc
popf
push
mov
jo
or
lods
shlb
loopne
jle
and
mov
lock
jg
lcall
cmp
lods
nop
iret
test
decl
inc
dec
mov
push
je
pop
data16
push
daa
push
mov
sahf
xor
mov
insl
je
je
je
je
je
pop
ds
jo
jo
jo
jo
jo
jne
push
pusha
xorl
adc
xchg
loop
out
test
xchg
loopne
idiv
in
in
pop
ja
andb
adc
jnp
xor
int
jmp
test
sub
adc
and
sub
popf
nop
lea
adc
jmp
int3
or
xor
int
push
fisttps
out
push
incl
popl
lahf
push
scas
mov
jle
int
scas
dec
in
jo
jae
fdivs
or
scas
cmp
int
adc
adc
int3
dec
pop
popf
jbe
cs
inc
push
call
dec
xor
out
call
push
out
fidivs
xchg
xor
fidivl
out
mov
out
ficoms
pop
out
xor
popf
ljmp
fs
or
je
mov
or
dec
in
sub
popf
popf
lods
dec
int
pop
decl
ja
andb
xor
lock
mov
lock
xor
push
fildll
scas
test
pop
test
push
test
ds
into
jge
lods
in
sbb
jo
mov
data16
outsb
xchg
jbe
repz
cmpb
jnp
mov
sub
inc
fimuls
test
fsubr
jo
loop
test
mov
mov
mov
jo
lock
xorb
ljmp
or
pop
jg
or
push
lods
push
sub
ds
mov
inc
sahf
and
sub
lods
fstl
je
je
pop
xor
inc
out
ss
pusha
sub
sub
adc
test
xchg
cwtl
rcr
loopne
nop
jo
jo
jo
mov
outsl
test
das
test
addr16
or
or
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
insl
test
insl
or
in
mov
jo
jo
jo
jo
jo
jno
rolb
adc
rclb
cltd
lock
sbbb
pop
mov
sub
pop
and
sbb
push
clts
pop
push
das
lret
aas
sbb
fistps
lcall
mov
pop
pop
outsb
push
mov
fnsave
jo
jo
jo
jo
add
push
mov
jo
lock
adc
popf
shlb
lock
jo
jo
jo
cmpb
or
lods
pop
adc
je
je
je
ja
push
lahf
leave
scas
leave
mov
leave
outsb
leave
jle
push
leave
cs
ds
into
xor
pusha
jbe
testl
pop
or
mov
mov
mov
mov
mov
xchg
lock
push
fidivl
fadds
popf
xor
xchg
imull
xor
stos
cmp
ljmp
or
dec
rcll
dec
test
arpl
aam
in
leave
sbb
lret
xor
sub
repz
out
jne
mov
popf
sbb
sub
in
mov
repz
movsb
sub
jne
out
adc
sub
pop
cltd
push
orl
ja
inc
adc
mov
xchg
cmpsb
xor
enter
mov
rorb
pop
adc
and
cmp
fisttps
lds
vmovmskps
aad
vshufps
jp
mov
in
or
ja
cmp
sub
rcrl
jo
dec
cmp
divb
repz
scas
inc
inc
adcl
mov
push
scas
mov
or
push
push
sti
dec
in
fisttps
movsl
xor
mov
sbb
push
mov
push
in
inc
inc
jbe
or
scas
cmpsb
mov
push
jno
inc
sarl
or
dec
and
iret
add
jb
push
movsb
cmpsb
adc
je
je
jbe
clc
sub
lds
pushf
add
pop
leave
sbb
aad
outsb
adc
data16
sti
negb
js
pop
inc
push
sbb
fld
icebp
sbb
movsl
push
xor
call
scas
enter
mov
out
imul
movb
or
rorb
fbstp
shl
push
dec
mov
lods
stos
sub
push
push
pusha
inc
or
call
jae
inc
xchg
out
jns
jb
inc
pop
arpl
sbb
aaa
adc
and
jp
push
push
lahf
pop
inc
push
pop
repz
mov
dec
mov
popf
fadds
dec
push
lret
or
jo
adc
fnstcw
pop
xlat
arpl
mov
push
flds
shlb
je
je
pop
push
das
jbe
ret
test
leave
popa
sbb
push
push
lock
xor
cmpsb
jle
sbb
sub
and
sub
lods
aas
mov
xchg
pop
push
mov
data16
sbb
pop
push
stos
mov
jns
sub
leave
popf
icebp
mov
pop
jnp
ficompl
lcall
pop
popf
jp
mov
in
xchg
adc
enter
into
stos
push
or
daa
mov
int3
sbb
cmp
push
push
scas
push
cmpsb
jp
insl
jne
push
push
cltd
push
mov
push
sbb
enter
shr
pop
pand
sub
fcompl
lahf
sub
pusha
inc
inc
inc
test
scas
mov
mov
pop
xchg
lahf
push
push
lret
call
leave
push
cmp
outsb
sub
mov
add
sub
aam
cld
sub
adc
iret
lret
xchg
out
and
lods
ss
mov
xor
aaa
push
sub
or
test
jo
jo
push
call
jecxz
repnz
sub
insl
lahf
das
cmpsb
nop
push
rolb
in
ja
movsb
cmp
pop
and
jecxz
lock
push
mov
jbe
sbb
repnz
popf
push
hlt
mov
mov
test
sbb
sub
sbb
fbstp
push
ljmp
or
xor
mov
iret
js
fcoms
addr16
xor
addr16
jg
inc
jmp
ljmp
in
dec
dec
cmc
cmp
jo
jo
jo
jo
mov
sub
fmull
push
xchg
adc
je
je
je
je
je
pop
push
mov
jo
jo
mov
clc
mov
xchg
fiaddl
and
push
out
push
xor
xor
lea
cmp
pusha
push
sbb
jo
jmp
std
jb
sbb
sarb
adc
shll
mov
mov
sbb
daa
pop
add
dec
lcall
or
adc
or
aaa
xor
adc
push
cltd
lods
cld
push
push
popa
pop
adc
in
ds
and
pop
repz
jnp
nop
insl
mov
inc
call
in
mov
js
or
adc
push
mov
push
cmp
cmp
scas
mov
mov
icebp
loop
ljmp
outsl
fcmovb
xchg
imul
xlat
psubusw
ljmp
jge
dec
lret
sbb
mov
jmp
inc
sti
xchg
sub
int3
pop
xor
dec
ds
xor
push
stos
cs
sub
mov
jb
in
imul
sbb
push
push
push
or
sub
and
fcmovnbe
mov
int3
xchg
ror
add
shrb
cs
push
lock
mov
push
mov
insl
push
lods
imul
testl
jae
movsb
xor
inc
push
pusha
jo
mov
jmp
cmpsl
rcl
pop
pop
cmp
aam
fildll
jae
les
xchg
cmc
test
int3
dec
dec
xor
cmp
add
jnp
pop
dec
xor
xchg
or
or
sub
push
push
dec
repz
mov
dec
pop
fsubr
mov
lock
mov
add
cmc
sbb
xchg
mov
and
fdivl
out
xchg
lods
test
mov
sbb
imul
jmp
fiaddl
lods
mov
das
rcll
pop
jmp
nop
daa
dec
call
out
adc
fwait
jg
xor
fistl
scas
sbb
pop
fmuls
or
mov
cmp
stos
pusha
aad
out
bound
or
cwtl
jo
mov
stos
xor
and
out
adc
mov
imul
jle
pop
cmc
push
dec
mov
les
int3
pop
lods
cmp
xor
iret
push
lret
aaa
push
insl
push
out
daa
push
jns
adc
pop
push
cmc
lock
call
movsb
gs
in
pop
lea
jo
inc
outsl
daa
sub
sbb
inc
jnp
lahf
mov
pop
int
jnp
cmp
xor
push
jl
lods
popf
aaa
lods
es
cmp
inc
out
mov
repz
jg
packssdw
jle
outsb
cltd
sbb
test
fcmovb
xchg
xchg
sbbl
ss
sub
mov
mov
mov
call
mov
adc
pop
push
mov
icebp
int3
cltd
cmp
inc
lods
mov
aaa
leave
push
int3
insb
lret
sbb
adc
aaa
not
int3
sbb
fsubs
fists
sbb
pop
lcall
mov
cmp
jle
es
push
xor
xor
fldcw
and
lahf
filds
inc
call
out
fstpl
or
pop
test
xchg
clc
dec
jo
out
sub
jnp
lods
call
pusha
call
rcr
aaa
je
je
je
je
inc
sbb
es
imulb
in
mov
testb
jp
pop
fcmovnbe
cs
decl
ljmp
gs
lock
xor
mov
mov
fimull
cmp
sbb
and
dec
mov
pop
push
mov
fwait
sbb
imul
mov
mov
add
add
in
call
mov
sbb
out
lods
lock
cmpb
and
in
int
sbb
icebp
fs
mov
cmp
xchg
adc
ljmp
dec
loopne
dec
xor
cmp
int
push
sbb
mov
or
xor
inc
mov
sti
mov
push
jge
mov
inc
ljmp
or
arpl
lds
stos
popf
pusha
mov
cwtl
int3
sub
lods
popa
sub
scas
cmp
out
outsl
adc
mov
lahf
popf
push
popa
sub
in
xchg
xchg
divl
movl
out
loop
sbb
mov
push
repnz
mov
mov
call
movsb
hlt
into
push
mov
mov
into
stos
popf
xchg
ds
mov
ds
testl
orb
es
mov
aad
test
mov
cmpb
push
cmpsb
jb
jecxz
sub
dec
adc
xchg
loopne
int
xchg
test
push
out
cmp
outsb
shr
pusha
stc
mov
add
xor
and
mov
lods
out
push
loop
sub
outsb
sub
mov
out
mov
jge
jnp
dec
pop
sub
iret
sub
test
push
or
jbe
adc
jbe
aas
mov
daa
xchg
mov
pop
inc
aaa
pop
push
fmuls
or
aaa
popf
loop
sbb
jnp
adc
roll
xchg
dec
iret
ss
fbstp
adcb
push
jmp
das
lock
jo
clc
and
xor
xchg
sub
push
jmp
sti
out
nop
orl
adc
call
test
addr16
mov
inc
loope
gs
sub
sahf
lcall
ja
movsb
out
jns
push
inc
xor
mov
mov
mov
mov
jg
out
or
or
jno
fsub
mov
sub
loope
lahf
mov
sub
stos
mov
stos
ds
stc
pop
mov
in
xor
dec
xor
ror
icebp
out
in
fs
inc
out
stc
fidivs
into
bound
and
stc
or
loope
std
js
xchg
rcrb
pop
std
mov
xor
outsb
subl
sub
mov
imul
mov
mov
xor
out
and
mov
mov
jo
or
fadd
jg
mov
fbstp
sbb
jmp
mov
pop
imul
aaa
sbb
adc
mov
leave
sbb
ret
leave
jmp
xchg
pusha
lahf
aaa
push
adc
xor
popf
xchg
in
xor
add
fidivrl
sbb
ljmp
jnp
popf
pop
dec
push
sub
mov
mov
xchg
push
mov
aas
mov
pop
adc
inc
insl
pop
jnp
xor
ja
int
adc
je
mov
xchg
xchg
jne
xchg
insb
pusha
and
xchg
popf
pop
adc
call
mov
popf
pop
lds
inc
ds
and
jbe
rorb
mov
xchg
sbb
sub
dec
jl
cmp
repz
aaa
lods
push
xchg
cs
jl
pop
into
scas
fdivs
ja
adc
jnp
or
nop
inc
stos
sub
js
sbb
int
adc
inc
xchg
sbb
pop
jb
cmc
shr
not
out
sub
mov
push
mov
jmp
push
dec
sub
sti
clc
mov
enter
or
and
mov
loopne
clc
jecxz
rolb
shlb
inc
movups
add
int
lods
or
das
mov
outsb
ljmp
xchg
pop
push
inc
lods
mov
sub
hlt
lods
mov
ficoml
lahf
adc
and
and
and
in
mov
scas
insb
mov
and
xchg
inc
fdivl
cwtl
mov
mov
mov
mov
sti
dec
js
jo
imul
movsl
or
sub
fsubrl
mov
inc
sub
jb
push
mov
jo
imul
data16
test
xchg
cmp
mov
add
xchg
sub
pop
es
mov
inc
scas
pop
sti
xchg
enter
mov
adc
pusha
cwtl
arpl
pop
pop
lock
pop
xlat
jns
js
xorb
pusha
inc
cmpsl
adc
sti
dec
adc
mov
adc
fmull
data16
mov
mov
mov
pop
nop
inc
rolb
bnd
xor
shl
movsb
jbe
jmp
addl
dec
sbb
lcall
cmpsb
xor
lahf
xchg
dec
mov
out
add
sub
call
out
adc
aaa
lret
movsl
push
jmp
iret
push
pop
bound
mov
aas
movsb
outsl
out
fcomp
cmc
cmp
push
xchg
test
push
push
cmpsb
outsb
mov
aad
out
jnp
adc
push
in
cmc
scas
out
xchg
jo
push
sbb
jle
mov
sub
ljmp
and
icebp
pop
je
mov
ss
out
and
out
adc
jle
inc
mov
xchg
push
mov
inc
push
push
andl
add
sahf
and
lds
mov
and
push
mov
scas
ja
inc
adc
inc
test
add
mov
push
out
adc
jp
nop
testb
mov
lods
inc
arpl
sub
orb
mov
sub
std
ret
fstpl
das
mov
daa
xchg
lods
mov
loopne
outsb
int
mov
sbb
sbb
jnp
xorl
push
inc
add
call
iret
add
mov
lea
dec
adc
push
pusha
cmp
xor
setae
xor
nop
pusha
lea
insl
push
ret
rorb
jbe
jg
add
sub
pop
dec
xor
jp
fistps
push
push
cmp
push
push
loop
ss
jno
mov
aad
fs
lods
jg
arpl
push
sbb
or
push
cmp
sbb
fisttpll
push
mov
rcrl
mov
push
adc
je
dec
sbb
adc
inc
test
ret
jbe
xchg
movsl
mov
adc
push
adc
cmp
fsubrs
xchg
iret
nop
push
cltd
aaa
mov
lock
xor
sbb
sbb
stos
in
jne
adc
pop
and
mov
inc
pop
out
and
pop
call
test
cwtl
dec
ljmp
sar
adc
fisttpl
cmp
dec
sahf
sti
mov
xchg
pop
imul
pop
jle
outsl
movsb
sub
shll
pop
fidivrl
dec
push
cs
pop
rolb
inc
jne
repz
mov
and
adc
jo
pop
sub
test
push
pop
movsb
xor
insl
imul
subl
xchg
lret
out
dec
sahf
int
lea
fcmovb
repnz
mov
cmp
mull
mov
xchg
xor
xor
popf
dec
insb
adc
mov
movsb
mov
mov
push
mov
push
pop
mov
adc
ja
nop
add
adc
xor
loopne
outsl
rcrb
test
sbb
ja
jnp
jbe
xchg
fmull
sbbl
arpl
jo
adc
xchg
int
or
sti
mov
sub
mov
mov
insl
mov
aas
dec
rclb
mov
addr16
and
imul
cmp
mov
idiv
enter
mov
in
test
sbb
pusha
sub
and
cltd
clc
dec
ja
movsl
inc
scas
sub
jne
and
pusha
xchg
jo
into
cmp
pop
jo
sub
jg
movsb
in
xor
test
xor
fimull
loopne
pop
push
shr
and
lcall
mov
out
lahf
shlb
push
lods
out
ss
push
inc
fisubl
push
sub
test
fsubl
shr
mov
push
lock
sbb
bound
es
lods
xchg
push
cmp
pop
jae
jecxz
add
cwtl
divl
out
xor
xchg
pop
mov
lahf
pusha
into
fistps
repz
mov
dec
or
imul
outsb
lret
cs
sbbl
inc
mov
xchg
mov
jp
cmp
test
lea
cmp
je
outsb
lahf
fsubs
adc
cmp
outsl
or
push
adc
ja
pop
jmp
mov
lcall
jnp
inc
adc
dec
mov
mov
outsb
clc
push
pop
add
sub
pop
nop
mov
adc
ficoml
jne
jmp
fcoml
fsubl
pop
ljmp
ja
sahf
inc
xlat
dec
sub
jg
out
cmpsl
out
xchg
cmp
cs
cli
das
int3
ja
in
pusha
or
adc
jne
inc
fsubs
push
call
lahf
aaa
mov
jb
sub
mov
divb
cmp
dec
dec
ljmp
dec
fnsave
ja
out
outsl
repnz
adc
jg
add
xor
mov
xor
pop
fdivr
sbb
push
aaa
mov
jnp
pop
adc
lods
xchg
dec
adc
fisubs
out
and
sub
lock
adc
adc
insb
xchg
mov
sarb
push
mov
jmp
and
xor
daa
outsl
inc
add
movsb
ja
mov
mov
sub
out
orl
addr16
imul
mov
test
insb
xchg
push
shrb
xchg
mov
scas
iret
lods
cld
cmp
jo
adcb
jg
xor
sub
stos
inc
xor
push
test
movsb
or
inc
sbb
pop
or
xchg
in
lds
inc
test
pusha
xchg
lock
enter
into
divl
fdivrs
add
imul
and
jle
mov
fdivrl
add
pusha
lea
cmp
dec
inc
xchg
pusha
mov
dec
xor
mov
inc
push
movsb
and
adc
sbb
mov
cs
lahf
dec
mov
fsts
aad
into
pop
inc
movb
aaa
cmp
inc
inc
mov
fldcw
lret
or
insb
lahf
xchg
or
pop
sbb
dec
cwtl
imul
mov
mov
push
sbb
xor
jae
aad
aaa
int3
pop
out
xchg
sahf
lds
test
xor
push
push
addr16
inc
sbb
clc
mov
xchg
push
mov
pusha
jg
popf
enter
pop
mov
dec
fdivrs
cmp
adc
mov
or
psrld
lods
inc
enter
or
push
pop
push
mov
xor
out
xchg
xor
adc
mov
or
mov
iret
sub
sbb
gs
shr
adc
mov
xchg
mov
hlt
aad
addr16
imul
xchg
clc
sahf
clc
jbe
outsl
jnp
movsb
popa
out
mov
jnp
insl
inc
movsb
push
jmp
sbb
pop
iret
outsb
inc
dec
inc
sub
cltd
mov
popf
pop
ljmp
daa
mov
sbb
movsb
arpl
push
push
sub
inc
fstl
into
aad
ja
xchg
lock
ljmp
ds
in
sbb
pop
out
push
popa
lahf
dec
hlt
dec
adc
sbb
push
dec
pop
mov
pop
ss
inc
cld
out
jle
ja
inc
or
mov
call
ret
scas
fcoml
mov
mov
gs
pushf
and
add
inc
scas
pop
jnp
inc
cmpsb
xor
dec
lock
adc
push
xchg
pop
inc
mov
cmp
addr16
jo
call
inc
xor
jle
addb
adc
push
mov
movsb
stc
out
outsl
xor
mov
iret
sahf
and
pop
xor
xlat
int
push
cmpsl
cmp
cmp
xor
dec
or
xor
into
mov
outsb
dec
jbe
jle
aaa
cld
mov
movl
sbb
adc
push
lea
and
test
scas
nop
pop
fildll
inc
fs
mov
push
repz
xor
out
jle
out
lea
mov
arpl
test
push
fsubrs
lahf
stos
dec
sbb
fsubrl
cmpsl
mov
jb
xor
pusha
call
push
ret
int3
inc
lods
sbb
xchg
jne
sti
pusha
ja
push
xchg
xor
adc
icebp
jbe
int
in
clc
fs
out
sbb
call
int
ret
jne
or
test
loop
in
fistps
insl
or
pop
lahf
pushf
insl
jae
xor
push
lcall
sbb
enter
sub
out
icebp
cmp
in
arpl
fdivs
and
mov
push
ja
int
data16
jl
sub
xchg
mov
lds
data16
mov
popa
adc
mov
xor
dec
fadds
repnz
or
lcall
mov
cmp
mov
mov
or
pop
divl
cmp
out
xchg
cmc
cmpsl
ja
test
out
cmp
mov
sub
or
ret
jnp
jp
sub
stos
pusha
dec
mov
dec
popa
xchg
insl
test
data16
push
into
and
push
and
adcb
cmovg
and
adcb
fadds
mov
in
loopne
xor
push
xchg
pop
ror
subl
xor
push
jne
adc
cmp
into
sahf
cltd
pop
push
dec
push
data16
cmc
fnsave
out
data16
cmpl
mov
gs
nop
test
push
inc
and
dec
pop
ja
mov
jecxz
ret
push
mov
and
shll
jecxz
repz
adcl
out
clc
push
lret
gs
add
push
and
push
pop
lds
xlat
push
pusha
frstor
mov
sbb
rcrl
or
inc
and
dec
dec
movsb
out
push
push
or
and
sbb
subb
icebp
mov
in
clc
mov
mov
push
mov
stos
push
popa
jne
push
cmc
dec
inc
repz
jnp
mov
insl
out
xor
test
sbbb
leave
push
les
sbb
pushf
xchg
sub
arpl
jne
das
test
ficoml
lcall
aaa
sbb
dec
xchg
sub
push
or
into
arpl
push
ret
int3
ss
pusha
mov
iret
mov
js
add
cmp
sbb
adc
jns
sub
cmp
loopne
inc
out
lcall
pop
inc
xor
into
bound
idivb
adc
pop
jmp
sbb
xchg
fidivrl
sub
mov
inc
or
test
jp
out
dec
sub
fdivs
adc
or
xchg
inc
test
sub
push
adc
aam
and
lret
xchg
push
pop
lods
pop
scas
popa
adcb
jne
clc
shrb
push
cmpsl
movsb
xchg
call
pop
xor
aad
mov
push
adc
out
push
aas
fsts
scas
loopne
jbe
xchg
push
jl
xor
hlt
xor
or
mov
imul
lods
dec
test
cmpsb
call
or
call
sbb
pop
cli
pop
and
mov
in
in
rcll
fcompl
jle
xor
mov
sbb
mov
push
pop
icebp
and
mov
lods
add
fwait
decb
faddl
adc
adc
iret
cmp
popf
sbb
sub
or
mov
movsb
sbb
fcomip
arpl
pop
xor
xchg
cwtl
mov
and
add
int
hlt
inc
lea
rorl
xor
sub
pop
pop
pop
insl
cmc
aas
jg
xchg
addr16
iret
pop
or
and
add
xor
jno
int3
push
je
xor
sub
dec
out
arpl
add
pop
cmp
pop
fwait
les
fimull
aaa
sub
inc
cli
mov
pop
inc
test
cmp
cmpsl
out
push
push
das
pop
jae
ja
inc
mov
icebp
dec
dec
sub
lods
jmp
mov
lods
cmpb
pop
les
faddl
clc
inc
mov
inc
sub
enter
nop
xor
ret
aad
cmp
jae
inc
out
fcmovu
lea
stos
jns
mov
mov
jnp
dec
cmp
jne
cmc
sti
std
dec
push
mov
scas
adcb
or
lods
mov
jnp
movsb
dec
in
push
lock
cmp
sub
mov
nop
je
adc
clc
stc
inc
lahf
ljmp
cmpsb
lret
call
lea
outsl
aaa
dec
fcomp
es
push
lea
push
push
lret
test
lea
iret
fcoms
push
mov
push
xchg
pop
or
sar
test
push
scas
mov
iret
xor
das
movsb
xor
xor
xchg
mov
and
xor
int3
xchg
xor
adc
jle
rorb
ljmp
popf
dec
jg
sub
pop
sbb
nop
dec
jo
movsb
aam
outsl
cltd
pop
js
cwtl
and
ja
jnp
idiv
mov
adc
dec
sbb
push
cmc
push
out
adc
fsubrl
dec
and
jns
sub
loope
stc
scas
mov
adc
pusha
fdivrl
push
or
imul
into
cmp
in
rorb
scas
jae
push
out
nop
pop
nop
ja
mov
inc
jnp
inc
stos
push
test
cmp
pop
out
cmp
stos
popf
test
and
popf
sbb
xor
outsb
jle
idiv
sub
sub
arpl
push
lret
leave
cmp
or
lret
xlat
int3
enter
iret
adc
push
xor
ljmp
mov
pusha
jo
pop
push
push
test
adc
mov
push
mov
dec
lods
addr16
sbb
sub
dec
ss
inc
lahf
fbld
xlat
enter
push
dec
push
adcb
mov
mov
mov
mov
std
fmuls
pusha
sti
lcall
mov
jg
dec
cmpsb
movl
sbb
mov
jne
pop
insb
sahf
pop
mov
mov
adc
imul
mov
add
push
dec
je
push
pop
xchg
int3
mov
sbb
add
cmp
mov
int3
pop
mov
jbe
rclb
iret
clc
xor
push
sbb
ret
fadd
mov
ficoms
in
mov
cld
adc
push
enter
out
push
lods
dec
iret
dec
ljmp
adcb
mov
add
xorb
xchg
push
sub
leave
mov
ficompl
test
lcall
mov
xor
sbb
lods
loope
cbtw
mov
mov
shll
ljmp
xor
xor
scas
into
fisubrs
pop
lcall
fsts
push
aam
cmp
or
push
aas
inc
pop
enter
outsl
pushf
xchg
cld
imul
and
dec
xchg
dec
push
icebp
mov
fs
push
in
ja
jns
dec
stc
nop
pop
adc
in
aad
movnti
pop
das
add
or
xchg
xlat
test
insl
mov
lds
jb
aaa
jmp
test
xchg
jne
popf
in
sbb
ja
inc
xchg
out
notl
int3
movsl
js
pop
imul
test
inc
push
or
iret
pop
out
mov
push
push
idivl
pusha
cs
pop
sub
xchg
pop
cmp
push
movsl
clc
sub
add
jl
lods
or
push
and
fldt
ss
mov
mov
adc
push
test
cmp
push
hlt
mov
jbe
shll
inc
int3
divb
pop
and
cmp
ja
int
nop
outsb
movsb
inc
jae
adc
dec
sbb
addr16
sbb
das
faddl
cmc
add
out
out
outsb
mov
aaa
loope
outsb
in
add
ss
testl
aam
aas
shlb
ja
dec
cmp
pusha
or
decl
push
pop
test
jmp
rorl
and
subl
and
rorb
fcompl
jo
movsb
jae
sub
je
dec
xchg
push
mov
xchg
jbe
jle
das
cmc
sub
je
enter
jnp
data16
ljmp
adc
mov
and
or
xor
xchg
adc
push
cmpsl
jae
and
adc
mov
bound
xor
outsb
adc
jl
in
push
pop
lret
arpl
loopne
inc
addr16
inc
dec
inc
ja
sbb
call
test
cmc
mov
adc
push
loope
shlb
mov
sub
loope
dec
xor
push
mov
jg
lods
sub
pop
adc
sub
test
inc
xor
and
sahf
mov
xor
sub
fmull
aaa
out
ret
pop
add
dec
lods
lods
xor
stos
sahf
popf
mov
cmpsb
lods
stc
xchg
mov
dec
xor
mov
jmp
das
cmpsl
xchg
in
and
jo
jae
sbb
iret
xchg
in
xor
call
sbb
ja
push
jle
cmp
xchg
add
gs
xchg
outsb
mov
xchg
fnstsw
call
adc
push
push
sbb
cwtl
sub
push
mov
rcr
dec
repz
add
push
and
inc
sbb
adc
and
lds
les
fmul
ds
rcll
ja
pop
std
clc
pusha
notb
add
mov
std
aam
lods
insl
int
mov
xor
sbb
push
adc
dec
into
pop
mov
xor
dec
add
inc
mov
jbe
in
xchg
push
cmp
fcomps
imul
scas
js
inc
jg
add
adc
cmpsb
dec
sub
sbb
xor
orl
mov
movsb
fwait
xchg
dec
repnz
jl
cmp
inc
addr16
rcll
sub
mov
cmp
outsl
push
pop
mov
dec
dec
sti
rcrb
xchg
clc
xor
test
or
das
sub
mov
mov
outsl
stos
push
imul
xchg
int
outsb
lcall
movsb
imul
mov
pop
outsl
and
cmovnp
adc
dec
xchg
jg
mov
jg
pushf
jno
movsb
fists
sub
xor
pop
mov
movsl
adc
xor
push
mov
call
push
jmp
divps
fmuls
sahf
xor
and
clc
dec
and
jg
sub
xor
lods
xlat
adc
mov
cmc
icebp
push
jnp
mov
testl
imull
xchg
mov
xor
inc
fadd
xchg
sub
test
lcall
out
mull
cmpb
jp
jg
sub
mov
ja
nop
aaa
jns
cmp
aam
adc
and
pop
mov
xchg
sub
sub
adc
xchg
inc
xchg
popa
adc
sub
cmp
jg
pop
out
aam
cld
lahf
nop
push
mov
sub
xchg
imul
sbb
xchg
mov
and
jnp
dec
dec
popf
inc
jbe
jle
repz
sub
xrelease
or
insl
push
push
pop
mov
sbb
pop
loope
jo
and
pop
iret
scas
mov
inc
fstpl
mov
ljmp
dec
call
movsb
repz
xchg
sahf
imul
fisttpll
ja
das
pop
jae
lods
inc
push
pop
stc
inc
sub
sub
cmp
mov
out
daa
xchg
sub
jo
out
fdivl
sbb
cli
push
pop
xor
xor
test
xchg
clc
pop
negb
inc
mov
adc
mov
cmp
js
in
test
insl
adc
pushl
or
xor
outsl
int3
adc
ja
xor
es
sbb
push
iret
cli
loope
daa
mov
mov
jg
mov
mov
add
pop
adc
pop
stos
sbb
mov
jmp
and
push
cmp
lea
out
movsl
sti
mov
fsubl
adc
mov
ja
movsb
jmp
aad
mov
pop
jne
mov
bound
dec
fmul
push
cmp
mov
mov
sahf
push
aad
push
sbb
iret
dec
add
mov
fdivrs
imul
ja
xchg
mov
movb
add
fdivrl
push
pusha
mov
add
inc
dec
ljmp
movsb
aas
out
sub
call
dec
popa
xchg
les
mov
dec
mov
xchg
pushl
add
xchg
lods
jns
scas
jle
pop
cmp
and
or
sub
cmp
inc
fsubs
jbe
jle
push
cwtl
push
test
mov
pop
subb
lret
or
icebp
into
icebp
scas
sub
fcoms
test
lds
xchg
push
push
push
and
inc
or
push
pop
xchg
call
xchg
js
mov
clc
xor
fcompl
sub
xchg
in
lds
fstps
scas
movsl
push
data16
cltd
xchg
mov
adc
outsb
sbb
mov
add
nop
adc
adc
fisttpll
xor
out
cmp
nop
mov
lods
notb
out
mov
outsl
faddl
mov
inc
inc
ja
xor
adc
lds
loop
cli
incb
inc
aam
jae
ja
mov
pop
out
adc
xor
adc
cmp
cltd
insb
push
lds
jg
lods
cltd
xchg
and
pop
icebp
jmp
xchg
or
int
cmp
xchg
xchg
mov
mov
loope
cwtl
pusha
in
lret
push
cmp
cmc
call
fsts
dec
adc
or
push
in
popf
jae
pop
xchg
cmp
loope
sti
into
push
jno
adc
arpl
sbb
pop
pusha
daa
ljmp
pop
xchg
inc
test
pop
out
mov
movsl
inc
or
xor
add
sbb
aad
or
fistps
loope
xor
inc
iret
filds
ss
repnz
dec
adc
xor
fisubrs
xor
xchg
mov
xchg
inc
ss
and
test
repz
loopne
push
aaa
pushw
shrb
xor
out
lahf
iret
int
push
test
pop
inc
addr16
sub
imul
xor
mov
mov
pop
inc
cmc
adc
xor
jg
movsb
adc
inc
addr16
jg
clc
cmpsl
pop
cmp
and
lock
popf
rep
jge
adc
mov
ja
test
pop
pop
out
in
cmpsl
inc
dec
push
pop
idivl
or
add
and
and
insl
movsb
push
in
push
xor
or
ud1
pop
js
inc
outsl
inc
mov
xchg
scas
outsb
mov
sub
movsb
pop
mov
sub
inc
adc
sbb
mov
repnz
popf
clc
lods
xchg
mov
sub
imull
add
and
ljmp
out
mov
dec
push
fnstenv
mov
push
lret
bound
in
xchg
mov
insl
and
scas
pop
inc
icebp
adc
dec
cmpb
push
popf
jne
sub
js
test
out
cmp
and
sub
call
sbb
mov
in
mov
mov
or
mov
inc
call
fsubr
and
out
pop
cwtl
adc
mov
add
fcoms
mov
aaa
cmp
dec
nopl
mov
push
jno
mov
push
xchg
shll
mov
ja
jnp
jg
mov
cmc
xchg
add
popf
ljmp
in
sbb
jmp
fwait
jle
cwtl
mov
and
add
ficoms
out
xchg
or
sbb
ljmp
fists
cmp
push
pushf
dec
mov
adc
insl
in
outsb
mov
test
daa
adc
stc
jno
xor
ret
mov
nop
enter
jbe
push
mov
jle
xor
xchg
imul
cwtl
std
stos
inc
test
clc
fwait
lea
cmp
pushf
or
lock
lea
xchg
mov
hlt
addl
jb
sub
into
mov
dec
jbe
repnz
pop
push
in
out
and
mov
cmc
xor
inc
pusha
sbbb
adc
sbb
push
jle
and
cmp
xor
push
iret
lahf
ja
insl
sbb
mov
mov
rorl
jo
cmp
cs
and
mov
push
dec
outsl
pop
adc
imul
in
ja
pop
andb
inc
ds
jo
jo
jnp
lods
mov
mov
and
cmpsl
sti
mov
mov
xchg
push
dec
sbb
inc
adc
mov
xlat
dec
jg
inc
push
dec
mov
je
fwait
or
popa
or
push
lock
sub
pop
jno
addl
shl
fistpll
stos
mov
or
clc
ja
cmc
cmp
jg
mov
ja
jnp
dec
or
iret
sti
jecxz
nop
prefetch
or
dec
xchg
push
ret
icebp
aad
push
nop
mov
loop
popf
mov
mov
xchg
add
ljmp
cmp
xchg
push
je,pn
mov
sub
sub
sti
das
sbb
mov
or
mov
popa
pusha
cmpsb
push
loopne
cmpsl
clc
das
mov
outsb
inc
into
jne
or
leave
ror
lret
loopne
lock
adc
nop
lea
outsl
jo
fidivrs
pop
mov
mov
ljmp
je
jnp
js
xor
int
pop
dec
push
jo
divb
into
int3
inc
out
xor
mov
mov
or
fnsave
xor
lea
call
push
je
js
negb
mov
loop
stos
mov
push
mov
data16
stos
pop
push
cmc
push
pusha
stos
push
js
test
mov
push
mul
sub
int3
xchg
pop
mov
and
cmp
xchg
lea
mov
fldcw
pop
pop
jp
xchg
in
mov
dec
or
insl
push
dec
cmp
inc
or
into
lret
test
out
insl
orb
push
jmp
xor
pop
jns
pop
cmp
inc
test
mov
rolb
jp
mov
rcl
dec
popf
aad
jg
cmp
pop
leave
iret
sub
cmc
andl
xchg
inc
jbe
ds
jnp
sub
gs
mov
ds
gs
lds
adc
and
mov
cmp
cmp
out
sub
jge
in
adc
push
xchg
test
fistps
cmp
xchg
lods
ja
sub
aaa
and
mov
mov
out
push
fst
mov
je
mov
fsubr
and
cmp
lock
insl
outsb
jae
dec
gs
xchg
in
js
mov
dec
xchg
cmc
xor
mov
jecxz
out
mov
movlhps
xorb
pusha
call
aaa
mov
iret
stos
nop
sub
xchg
lods
pop
out
adc
and
cs
adc
xchg
mov
pop
dec
cld
mov
arpl
and
cmp
rol
jae
iret
cmpb
rcr
inc
nop
movsb
cmp
lahf
mov
stos
xchg
inc
lods
xor
call
pop
repnz
iret
shr
pop
popa
data16
sbb
cmpsb
cmpsb
dec
cmpl
sbb
jl
sbb
dec
outsl
lret
ljmp
aad
pop
xchg
test
and
jg
lods
push
push
push
pop
xchg
mov
adc
aaa
dec
mov
and
pop
xchg
mov
mov
aam
addr16
mov
pusha
faddp
push
inc
mov
push
fcomps
aaa
inc
and
loopne
outsb
movsl
fdivrl
loop
fdivs
ja
movsb
push
outsb
or
call
lea
or
loop
jo
adc
or
icebp
cmp
mov
xor
mov
int3
pop
aaa
daa
sub
and
sub
outsl
mov
shll
stos
idivb
xor
dec
stos
cltd
adc
lods
xor
ret
js
xor
fwait
dec
push
dec
aas
xor
sbb
movsl
in
gs
test
mov
pop
sahf
and
mov
pop
icebp
sub
cmp
stos
negl
sub
stos
push
and
push
cmp
ja
nop
xlat
jp
lsl
lods
mov
or
icebp
sbb
cmp
sub
pop
push
jle
push
andb
mov
sub
addb
fimull
and
sub
xchg
inc
push
cmc
mov
xor
pop
sarl
xchg
movsb
scas
sar
mov
push
xor
mov
fdivp
and
mul
and
aad
inc
mov
in
out
jecxz
sub
cmp
inc
outsl
cmpsl
dec
xor
mov
aad
xor
and
jle
fnstenv
data16
and
nop
adc
push
fdivl
mov
cmp
xchg
dec
ljmp
popf
sahf
in
mov
pop
out
xor
push
test
lret
mov
mov
enter
call
mov
dec
iret
lods
lret
jmp
xchg
mov
mov
cmp
jb
in
ret
jge
adc
mov
sub
fsubrl
fdivs
ljmp
cmp
inc
int
ret
push
out
jae
lods
or
aas
xchg
xchg
xchg
mov
xor
int3
loop
es
subb
jg
lods
and
xchg
sub
call
xorl
lahf
jp
push
fnstcw
cltd
in
mov
jae
loopne
mov
pop
xchg
pop
mov
jmp
jbe
icebp
cmp
xchg
cmc
cmp
in
iretw
pop
jnp
cmp
insb
lea
loopne
adc
dec
scas
pop
cmp
push
outsb
fdivl
incb
pop
test
inc
and
mov
inc
xchg
std
icebp
pop
xor
popf
stc
popa
and
xor
add
xor
iret
push
pop
push
push
or
std
rcr
inc
push
adc
xchg
push
or
inc
mov
js
lahf
scas
xlat
imul
mov
xor
call
lea
mov
adc
scas
xchg
inc
mov
mov
scas
pusha
xor
push
out
push
mov
lret
jbe
enter
lods
push
movsl
and
cmp
push
cmp
pop
sub
xchg
cld
arpl
clc
movsb
repz
cli
pop
nop
shll
test
xor
xchg
jo
fsubrl
cmp
jecxz
xor
pop
int
lea
mov
sahf
push
in
fdivrs
xor
mull
ja
mov
inc
bound
fisttpll
push
cmp
inc
sahf
jne
jge
arpl
outsl
mov
out
lods
mov
adc
add
xadd
adc
insl
rolb
lods
xchg
test
or
mov
pop
shl
outsl
scas
setbe
andb
pusha
das
lods
jbe
ja
xchg
mov
pop
pop
fcmovb
lcall
insb
fsubrs
push
and
inc
cmp
testb
lret
cmp
addr16
mov
xchg
pop
into
rolb
pop
fs
popf
mov
or
lea
cs
outsb
xor
test
lcall
frstor
in
mov
in
out
mov
mov
daa
pop
xor
lea
mov
cmc
mov
pop
xchg
pop
dec
fisubl
xchg
aas
jle
cwtl
inc
and
repz
push
xchg
inc
insb
push
int
es
push
cmp
sbb
mov
pop
outsb
xchg
adcb
outsl
outsb
stos
mov
pop
and
icebp
xchg
adc
mov
lock
mov
aad
inc
xor
das
movsb
push
adc
inc
sub
sbb
mov
push
lods
sub
dec
pop
dec
lock
es
bound
loopne
popf
iret
xchg
xor
mov
dec
mov
or
subb
xchg
mov
adc
out
push
jg
je
lods
push
add
mov
cmp
sub
sub
mov
add
or
pop
idiv
jmp
pusha
inc
push
and
mov
aaa
adc
fcomps
fisttps
js
nop
pop
insl
testl
pop
sub
cmp
fldcw
lret
stc
cs
ficoms
lods
push
adc
jbe
mov
dec
sbb
cwtl
and
mov
inc
inc
push
arpl
dec
fsubrs
movsl
mov
loopne
sbb
mov
lahf
mov
jmp
inc
test
xchg
cmpsl
mov
adc
insl
call
stos
sbb
test
xchg
popf
mov
mov
outsl
fmuls
add
adc
and
insl
jge,pn
or
cmp
popa
dec
loopne
rorl
jo
mov
inc
aad
xchg
inc
jge
xor
outsl
out
cmp
inc
ja
jo
sub
push
or
stos
xchg
loop
out
or
mov
adc
dec
add
cmp
test
imul
sahf
jge
or
call
xorb
cmc
int3
pop
insl
test
mov
xchg
jnp
movsb
mov
enter
push
idiv
sub
testl
pop
push
jbe
rcrb
inc
cltd
push
cmc
dec
cwtl
hlt
arpl
mov
cmpsl
popa
sub
addr16
sub
cmp
test
jge
imul
test
fcoms
xor
in
sbb
in
xchg
sub
clc
xlat
cmp
or
mull
push
popf
stos
xor
add
mov
lock
xor
sub
nop
mov
jnp
stos
out
fadds
movsb
mov
call
pop
nop
mov
mov
clc
mov
adc
rcll
nop
xor
and
inc
jns
and
insl
daa
push
jae
adc
movsb
mov
ja
inc
int
lahf
fisubrs
dec
aaa
leave
loop
insl
xchg
sbb
cmp
mov
outsl
clc
push
sub
fimuls
mov
cs
adc
ja
movsb
lret
sti
xor
cmp
mov
popf
ss
xchg
cmp
lea
bound
mov
clc
jae
addr16
nop
pop
lds
test
xchg
pusha
sub
xchg
inc
cmp
call
xor
or
incl
nop
enter
mov
xor
shll
mov
or
jnp
jg
add
call
ljmp
sbb
int3
push
mulb
orl
movsb
icebp
jo
mov
out
lock
fidivl
pop
sbb
aaa
jns
daa
or
adc
lea
mov
adc
outsl
push
iret
xchg
incb
mov
mov
sti
stos
xchg
and
xchg
jp
notb
dec
imul
push
test
imul
push
ficompl
mov
inc
testl
xorb
popl
xchg
pushf
inc
lahf
xchg
push
out
imul
inc
aas
ljmp
adc
call
lods
cwtl
popa
sub
sub
in
pop
pop
cmpb
sbb
adc
dec
jo
faddp
clc
popa
inc
push
js
xchg
mov
fmuls
cmp
cmp
int
jnp
pop
lret
xor
rclb
jnp
movsb
lock
or
call
jae
aaa
leave
xor
dec
cmp
in
scas
mov
adc
iret
mov
inc
or
push
movsb
push
ljmp
sahf
inc
fcmovbe
adc
out
pop
sbb
fstps
test
or
pop
sbb
jmp
dec
jo
out
xor
sbb
test
pop
dec
jns
inc
shlb
aaa
inc
loop
ss
adc
loopne
pop
jnp
mul
int
push
in
inc
push
aaa
push
add
movsl
cmp
icebp
mov
cmpsb
loop
pop
popf
lods
lds
inc
movsl
dec
das
sbb
xor
inc
iret
pop
mov
ficoms
mov
or
add
xor
lods
movsb
add
adc
or
outsb
mov
out
lret
mov
jbe
push
dec
dec
loop
imul
lods
pop
pusha
movsl
pop
leave
xchg
pop
pusha
jo
movsb
push
sub
inc
aad
ljmp
imul
outsl
out
cmp
pop
iret
dec
push
and
popf
test
call
pop
xchg
scas
and
imul
pop
mov
arpl
adc
xchg
inc
xor
std
les
popf
in
hlt
mov
movsb
lods
mov
xchg
dec
inc
dec
sub
std
pop
lock
sub
dec
ljmp
pop
xor
movsb
xor
fcomps
push
and
add
sub
inc
and
bound
inc
push
js
call
scas
xchg
insl
in
add
stos
jle
dec
sbb
stc
xchg
dec
cmp
add
lock
push
jecxz
lds
xor
pop
mov
push
test
pusha
xor
into
mov
add
aam
sub
push
push
xor
dec
or
es
js
pop
clc
pop
jbe
movl
ljmp
push
adc
jns
or
clc
rorb
js
mov
enter
or
es
lcall
push
lods
mov
mov
push
cmp
popf
imul
lods
mov
fistps
ljmp
cmp
iret
ds
clc
dec
jle
loop
add
cmp
dec
jb
mov
scas
jo
inc
dec
mov
add
rcrb
icebp
dec
sub
insb
xchg
adc
and
cmc
mov
xor
jg
out
lret
iret
mov
and
xchg
scas
mov
ss
fistpl
std
cltd
or
clc
push
js,pt
popa
sbb
cli
push
xchg
lret
push
push
mov
push
call
inc
addr16
outsl
ret
xor
repnz
out
pop
mov
xor
mov
push
movsb
pop
and
popf
inc
sbb
lcall
push
out
push
aaa
push
das
xor
nop
pop
add
std
icebp
pusha
test
adc
xchg
cmp
push
mov
shrl
mov
xor
pop
cmp
push
pusha
cli
xchg
shl
enter
mov
lea
dec
mov
push
lahf
faddp
mov
cmp
adc
cmp
lea
popf
ficomps
fs
push
ja
lahf
dec
and
jbe
std
dec
jp
mov
xchg
into
pop
push
sbb
cmp
adc
cmp
adc
clc
lods
push
fisttps
outsb
adc
mov
sbb
hlt
nop
test
inc
xor
or
push
repnz
test
in
subl
icebp
aad
andl
xchg
mov
pusha
xor
and
dec
adc
fisttps
or
stos
mov
inc
sub
fcoms
sbb
aad
xor
ss
adc
jle
and
addr16
add
mov
std
mov
pop
cmpsb
push
movq
pusha
mov
fwait
and
push
cmpsl
fldcw
xchg
into
sahf
lds
movsb
mov
test
jnp
cmp
and
outsb
xor
pop
addr16
mov
mov
aaa
sti
lea
rorb
data16
shrl
mov
mov
in
inc
push
push
cmpsb
xchg
mov
sbb
inc
push
adc
les
lods
inc
adc
stos
pop
fsubr
xor
arpl
dec
out
clc
cs
xor
outsl
inc
movsb
lret
adc
adc
imul
push
jnp
movsb
jo,pn
and
outsl
ja
popf
xchg
ja
pusha
push
pusha
in
loop
mov
xchg
xchg
jge
mov
xor
pop
ds
pop
pop
clc
mov
xchg
lretw
inc
xor
stos
push
pop
call
out
push
iret
hlt
jecxz
jo
mov
adc
push
jmp
jbe
add
xor
adc
int3
adc
cmp
push
jg
or
out
and
in
loop
xchg
mov
aam
push
std
cwtl
mov
inc
push
or
mull
adc
fsubl
xor
or
push
lret
mov
push
dec
test
sahf
mov
pop
je
je
and
add
call
leave
lret
xor
sbb
js
cli
ja
pusha
jae
movsb
jae
jbe
mov
lods
lock
fcoms
dec
lods
cmp
aaa
repz
xchg
ja
xchg
pop
jmp
int3
mov
mov
iret
insl
aaa
out
sahf
mov
push
cmpb
adc
jle
cmp
jnp
ss
lret
mov
lods
clc
nop
mov
pop
lret
dec
cs
inc
or
clc
dec
mov
mov
mov
mov
mov
shl
lret
jno
push
call
or
sahf
das
in
cmp
xor
test
dec
inc
cs
fldl
xchg
idiv
fcoms
push
or
nop
mov
push
mov
fst
pusha
ror
ljmp
adc
cwtl
dec
lods
fdivrl
ja
inc
clc
mov
inc
jge
jg
add
addr16
pop
iret
mov
jne
clc
dec
xor
std
pop
icebp
jge
clc
sub
cmp
lods
outsb
xchg
into
jne
sarl
lea
mov
or
es
cmc
or
push
xchg
fbld
adc
jae
xor
lods
add
fidivrl
sbb
push
jl
push
fildll
lods
loop
xchg
in
jo
mov
ds
or
lods
or
sbb
jle
xchg
fidivrs
out
movsb
jl
xchg
xchg
fsubs
in
sub
pop
dec
popa
sub
dec
pop
lahf
das
mov
les
pusha
pushaw
add
jbe
dec
je
subb
out
hlt
andb
pusha
es
clc
mov
out
ds
push
testl
pop
mov
pop
mov
xchg
inc
andb
jnp
and
repz
mov
jno
and
pop
orl
sbb
ja
aad
mov
pusha
lret
xchg
push
add
pop
and
cmp
mov
push
ljmp
std
into
pusha
xor
lret
mov
std
push
out
in
das
dec
out
push
div
iret
sbb
ss
ja
inc
add
pop
jo
out
test
xchg
lods
mov
sahf
mov
test
loopne
js
testb
imul
inc
mov
and
aaa
insl
aas
inc
push
adc
fiadds
push
gs
push
rorl
xchg
xchg
clc
push
and
xor
or
dec
and
mov
shll
adc
push
mov
in
lods
sbb
out
dec
aaa
dec
mov
out
dec
xor
push
int
cmp
lahf
aas
lret
outsb
dec
lds
mov
adc
xchg
mov
popf
jbe
lahf
adc
sahf
pop
iret
dec
mul
jne
pusha
clc
imul
cmp
jle
popf
mov
inc
mov
dec
outsb
xchg
cmp
mov
jne
pop
and
cmp
adc
adc
inc
fdivs
xor
mov
or
dec
iret
lahf
push
jae
mov
mov
andl
ja
dec
lret
sub
mov
adcl
pop
mov
aaa
flds
pusha
xor
enter
out
jge
add
fimuls
sahf
rorb
xor
mov
scas
dec
jns
xchg
mov
in
stc
jge
nop
mov
cmp
fadds
fmuls
xchg
mov
movsb
fiadds
add
sbb
jo
push
sub
xor
pop
js
mov
popa
xlat
xor
xor
cwtl
test
dec
xchg
cmp
sti
xor
aad
iret
aaa
mov
adcb
pop
push
scas
aaa
pop
push
insb
inc
sub
dec
lods
and
fmuls
mov
mov
adc
cmp
push
add
sub
fcoms
dec
adc
fwait
dec
cmp
adc
mov
loopne
faddp
pop
push
jne
push
clc
jle
pop
je
adc
loopne
outsl
in
scas
push
xchg
outsb
inc
std
push
jo
jo
add
insl
scas
xor
pcmpeqd
xchg
jo
xor
xchg
in
pop
inc
xchg
xchg
movsb
pop
xchg
xchg
mov
icebp
negb
incb
int3
xor
push
mov
dec
inc
jle
push
cmpsl
aaa
data16
inc
jns
adc
aam
inc
mov
cmpsb
movsb
xchg
push
xchg
sahf
movsb
xor
fmuls
push
mov
xchg
aaa
lods
dec
or
fists
clc
or
mov
xor
imul
adc
ja
movsb
pop
push
into
imulb
cwtl
outsb
push
neg
int3
add
dec
xchg
sbb
in
fcmovu
xchg
int
jbe
in
pop
hlt
xchg
cs
sub
mov
adc
sti
test
dec
imul
mov
fmull
jbe
adc
mov
lods
lods
inc
xchg
pop
adc
push
xor
divb
inc
sbb
fimull
jae
call
cmpsl
incb
cmp
test
lods
fildl
and
push
or
ljmp
cmp
clc
insb
fsubrl
mov
cmc
aaa
lahf
cmp
es
out
xchg
push
push
mov
int3
addr16
sbb
push
mov
clc
inc
outsb
adc
outsl
mov
lea
adc
hlt
sbb
mov
icebp
xor
cld
frstor
jg
add
adc
je
ja
pop
jge
frstor
es
ja
out
sub
addr16
mov
add
and
and
ds
push
jns
and
xlat
fdivrs
out
mov
repnz
xchg
adc
subb
or
mov
dec
clc
jp
mov
jecxz
add
imul
sbb
lock
enter
fidivs
in
call
push
adc
je
add
adc
pop
sti
xchg
stos
mov
push
mov
add
push
lea
jg
lods
xchg
or
je
pop
test
fldenv
fcoml
scas
pusha
or
imul
call
or
xor
lds
push
inc
mov
es
ja
pop
pop
jnp
inc
aad
cmp
into
sbb
or
dec
rclb
scas
das
cmp
xor
add
xchg
jbe
icebp
cmp
fcoms
xor
xchg
popf
push
dec
movsb
push
cmp
adc
shll
outsl
add
inc
push
sub
push
aaa
iret
js
leave
outsb
or
dec
add
pop
lret
movsb
lods
outsl
jge
inc
lret
mov
shufps
adc
cmp
xor
mov
dec
mov
jne
imul
sbb
sub
pop
push
jo
mov
push
dec
int3
enter
adc
cs
and
rorl
add
xlat
int
sti
mov
movsl
sbb
xchg
cmpsb
inc
jmp
popf
cmpsl
pop
sbb
popl
sub
xor
cwtl
lea
data16
fdivl
lahf
aas
pop
pxor
sbb
je
fmulp
in
test
aaa
arpl
clc
mov
xchg
cwtl
sbb
ficoml
mov
xor
idivl
cmp
xchg
lock
je
jge
enter
cmp
dec
clc
pop
mov
sbb
ret
mov
lahf
cmp
inc
iret
gs
add
inc
dec
pop
mov
insb
push
test
fildll
in
enter
mov
iret
cmp
call
xor
push
mov
or
adc
scas
cs
arpl
fildl
out
xchg
leave
push
cmp
stos
rclb
xor
call
xchg
inc
fmul
mov
leave
adc
jg
ja
nop
sarb
mov
and
in
iret
scas
aaa
insl
xor
outsl
mov
sbb
jge
cmp
xchg
cwtl
mov
xor
mov
xchg
fcmovb
jl
rcrb
adcb
mov
cli
push
cmp
pop
in
test
dec
xchg
adc
fidivs
jge
dec
cs
dec
aaa
xor
out
in
mov
mov
xchg
cwtl
pop
fisttpll
mov
inc
xchg
scas
mov
push
mov
inc
cs
mov
sub
rclb
jo
decl
xor
pop
adc
mov
in
psadbw
dec
nop
out
aaa
ja
xchg
imul
or
jmp
ja
cmpsl
mov
pushf
sarb
fisubrs
dec
jge
or
lahf
jae
lods
sub
push
lds
out
jl
adc
call
jmp
aaa
xlat
lods
fsubr
xchg
add
pop
or
imul
data16
aam
push
gs
mov
cmp
adc
xor
call
inc
movsl
cmp
push
clc
mov
or
or
pop
enter
aas
idivl
xor
push
out
push
outsb
jnp
jnp
inc
sbb
push
test
pop
xor
adc
ja
jmp
in
or
jns
test
xchg
shlb
nop
add
push
mov
sbb
test
lods
in
rorb
shr
adc
pop
jne
popa
xor
and
fisttps
mov
mov
lahf
lock
dec
jbe
xor
mov
push
lods
pop
mov
shlb
dec
mull
iret
sbb
adc
mov
dec
in
xchg
push
fildll
push
sub
mov
push
out
je
das
adc
insl
call
adc
jno
adcl
test
fdivl
ja
std
lahf
clc
jb
adc
ljmp
popf
mov
clc
fsub
or
adc
inc
cmp
push
iret
cmp
inc
dec
jg
cmc
xchg
faddl
mov
fisubrl
adc
outsb
jnp
inc
inc
int
repz
xor
arpl
test
in
popa
adc
das
mov
mov
mov
xor
std
xchg
in
data16
cmp
clc
test
clc
mov
dec
adc
push
lea
adc
nop
xchg
call
lret
sub
jbe
test
shlb
iret
xor
into
xor
in
mov
jnp
mov
push
bound
neg
push
push
jne
xchg
mov
pop
insb
jnp
andb
push
adc
nop
mov
shlb
inc
mov
clc
and
andb
popl
push
dec
insl
push
add
xor
sub
pushf
xchg
rcl
mov
testl
imul
cmpb
push
add
ljmp
out
jno
gs
fimuls
or
enter
dec
sarb
mov
notb
movsb
sub
pop
data16
cmp
mov
pop
stos
dec
out
ljmp
jmp
adc
mov
mov
aaa
ficoms
test
mov
movsb
mov
js
push
ja
jae
dec
js
jns
sbb
sahf
aaa
jb
fcmovne
cmp
xchg
out
push
jge
ja
jecxz
mov
scas
fsubrs
fildll
push
jg
inc
testb
lea
loop
jbe
or
filds
into
sub
in
mov
push
or
dec
jne
loop
testl
mov
mov
xor
in
rcrb
lock
lods
push
xor
cs
fdivrp
iret
pop
pop
orb
pop
jne
dec
fiaddl
aas
mov
pop
lret
rcrb
mov
out
jg
iret
negl
fdivrl
jne
ret
push
xchg
mov
jnp
jg
add
mov
xchg
cs
bound
je
adc
dec
test
clc
ja
nop
scas
and
or
lods
in
fisttps
call
mov
xor
mov
pop
movsb
pop
addr16
push
mov
icebp
inc
insl
mov
jo
enter
pop
adc
loopne
jecxz
lahf
movsb
add
xchg
cmpsb
jp
adc
xchg
mov
mov
xchg
scas
push
movsb
jbe
cmpsl
mov
push
into
xchg
inc
andl
or
dec
jmp
xor
mov
push
mov
outsl
jp
adc
ret
sarb
or
aad
push
sub
sbbb
popw
call
mov
pop
pop
movsl
mov
dec
fsubrs
xor
lods
jnp
mov
mov
cmp
inc
out
adc
arpl
mov
push
idiv
mov
gs
and
into
mov
pop
mov
and
ds
add
data16
fcmovnu
repz
push
sub
add
icebp
jmp
dec
lret
sbb
outsb
push
inc
fisttps
in
fwait
sbb
or
jns
dec
push
popf
fmull
inc
test
xchg
xchg
ret
int3
mov
push
pop
fdivl
lock
lcall
paddusb
add
xchg
insl
cmp
ret
outsb
xchg
fwait
xor
sti
adc
pop
scas
lods
dec
jl
mov
jg
sub
sub
mov
inc
cmp
std
xchg
mov
call
loop
into
fdivrl
pop
out
mov
or
jg
iret
data16
pop
sub
dec
nop
ja
fcoms
mov
popf
pop
fiadds
lods
cmp
push
inc
ss
push
pop
or
adc
push
jbe
and
cwtl
xchg
fdivr
adc
repz
push
scas
xchg
or
stos
sahf
xchg
dec
cmc
or
pop
inc
push
lds
xor
jge
and
sahf
push
inc
or
xchg
xchg
jnp
inc
push
sub
ficoms
ja
outsb
push
dec
xchg
xchg
xor
pop
cmp
sbb
fsubrl
or
cs
insl
ds
push
stos
nop
push
rcrb
loop
gs
int
dec
inc
pop
xchg
sbb
into
test
sub
fisubl
movsb
push
adc
ss
dec
xor
cld
or
cmpsl
int
inc
imul
xchg
addr16
xchg
jg
add
ljmp
ficomps
cmp
incb
mov
lea
and
jl
aaa
mov
cmp
push
add
mov
fidivl
fsubp
cmp
out
sbb
data16
or
xchg
adc
int
jg
xchg
push
xor
jmp
cmp
popf
push
nop
sub
in
inc
xor
dec
xor
pop
mov
jnp
dec
insl
adc
mov
outsb
cmp
push
xchg
lock
xchg
in
adc
ja
lods
add
xor
add
ja
mov
aad
and
cld
jle
jnp
movsb
mov
push
or
fbld
dec
enter
xlat
fmulp
inc
push
aas
daa
movsb
mov
fists
adc
lds
jo
in
cmc
scas
and
cmpsb
push
pop
fsubrs
pop
cmp
enter
call
in
mov
inc
xor
xchg
ja
int3
mov
push
push
mov
push
aaa
imull
test
push
ja
nop
repnz
ljmp
xchg
icebp
daa
pop
cmp
cmpsl
repnz
mov
scas
dec
lods
aas
xchg
aas
sahf
lahf
xchg
in
mov
out
repz
fisttpll
das
and
pusha
xorb
out
in
sbb
pop
lahf
pusha
mov
loope
push
push
out
sbb
push
das
hlt
scas
movsb
daa
dec
test
mov
pusha
dec
pop
lock
insl
sahf
dec
test
ljmp
fcoml
or
jo
into
outsl
nop
jecxz
mov
sub
movsb
testb
andb
lret
lea
jge
call
adc
aad
imul
xchg
push
and
movsl
data16
pop
cmp
dec
test
lahf
aaa
mov
jg
outsl
call
push
popf
scas
jge
inc
jne
out
lods
jge
mov
adc
addl
push
and
popa
aam
xchg
nop
in
insl
jo
clc
and
dec
shrb
pop
push
xlat
lahf
out
jne
notb
xchg
mov
stos
jg
xor
lods
addr16
inc
mov
enter
mov
testb
inc
push
and
jle
fmull
push
shrb
xchg
xor
xchg
push
int
mov
ja
gs
push
mov
ljmp
adc
cmp
bswap
popa
shrb
mov
idiv
mov
inc
clc
and
cmp
clc
pop
sub
jg
push
jbe
push
pop
mov
ljmp
pop
and
or
lods
dec
or
jne
pop
mov
push
xor
adc
pop
imul
shl
pop
icebp
pop
mov
test
mov
fists
data16
shlb
xor
test
push
mov
cwtl
mov
insb
and
jg
jge
ja
xor
or
pop
popf
test
push
dec
adc
sbbl
mov
dec
xlat
ret
setbe
std
xchg
mul
jbe
mov
add
adc
loopne
xor
leave
aam
jb
push
dec
jg
out
orb
dec
popf
pop
mov
mov
mov
pop
out
in
sti
jo
movsb
out
cmp
js
les
adc
insl
je
dec
enter
ficoml
mov
movsl
fcoml
pop
fists
jne
lea
xchg
inc
sbb
scas
aad
dec
in
sbb
jecxz
dec
mov
push
xchg
mov
pop
push
int3
pop
lock
sti
aas
adc
mov
sar
inc
jne
ljmp
add
jne
adc
cmp
decl
mov
lret
in
mov
xchg
iret
jle
fidivrs
repz
mov
xor
subl
jge
dec
mov
sarl
or
add
sub
icebp
fcom
imul
and
dec
insl
mov
dec
inc
aaa
push
sbb
xorb
out
fdivs
ja
aaa
cmpsl
cmc
ljmp
mov
sti
push
push
dec
dec
scas
adc
into
lock
imul
lea
adc
ret
imul
cmp
test
pop
cmp
xor
push
outsb
ja
cmp
popa
incl
jp
aas
fcos
out
enter
dec
adc
ljmp
lock
xor
enter
jg
popf
scas
gs
in
cmp
xchg
iret
std
cmp
mov
xchg
int3
jmp
pop
dec
jno
mov
fistps
mov
inc
xor
loop
pop
lds
sub
ljmp
and
mov
xchg
call
push
out
in
pop
xchg
popf
dec
xor
push
jbe
scas
pop
lods
or
xchg
push
rcrl
popf
ds
in
test
and
in
dec
shl
into
enter
adc
in
pop
lret
cmp
jl
dec
lock
out
and
push
orb
scas
scas
cmp
pop
sti
cltd
sbb
sub
pop
mov
jge
dec
and
lret
push
fildll
jnp
jg
jns
add
pop
fstl
jne
inc
dec
dec
xor
sbb
fsubs
or
pusha
inc
lods
scas
int
jbe
lret
movsl
movsb
push
xchg
loopne
push
lahf
in
sbbl
mov
and
push
mov
inc
jae
sub
and
decl
gs
or
cmp
ja
movsb
push
xchg
sbb
ja
lods
ficoml
push
cld
lahf
aaa
jno
adc
pop
xor
shll
add
int3
popf
cld
adcb
dec
xchg
jae
xchg
shrb
movsb
lea
push
add
or
aad
lcall
inc
lea
test
xchg
loop
pop
dec
push
gs
into
mov
jne
or
add
fidivrs
int
sti
bndldx
push
jg
mov
adc
mov
pop
or
lret
sahf
int
aaa
in
mov
in
scas
in
inc
mov
aad
lahf
out
push
jle
dec
fcoms
popf
fnsave
ror
loopne
loopne
and
mov
mov
sahf
dec
xor
inc
add
out
aaa
nop
out
clc
out
xor
pop
push
pop
mov
popf
clc
out
inc
lock
mov
xor
inc
mov
pop
and
aas
sub
lret
mov
dec
cmpsb
xchg
or
clc
inc
mov
cmp
xchg
xchg
mov
pop
outsl
rolb
xor
pop
mov
adc
pusha
gs
mov
push
mull
jno
lret
punpckhdq
xor
leave
push
cmp
in
pop
scas
xchg
int
popf
cmpsb
int
cmp
and
outsl
sub
mov
dec
mov
or
mov
decb
std
aaa
lods
pop
push
xchg
shlb
movsl
pop
sbb
pop
push
mov
mov
jle
xchg
or
inc
fisubrs
mov
inc
jge
sbb
out
adc
loopne
outsb
jg
popa
and
lock
pop
mov
popf
sub
imul
cmp
pop
jo,pt
jo
mov
loopne
pop
arpl
jne
or
pusha
inc
movsl
rcl
mov
pop
scas
popf
pop
fstps
clc
rolb
mov
dec
in
sbb
idiv
mov
inc
xor
inc
and
jne
aaa
sbb
outsl
jne
pop
jne
shrd
jl
dec
lods
addr16
push
xor
insl
rolb
pop
out
lock
cmpb
pop
dec
cmpsb
sti
lahf
push
sahf
push
lahf
mov
mov
wrmsr
cmp
out
dec
cmp
dec
int
pop
and
cmp
outsl
adc
jne
ret
pop
xchg
cmp
sbb
xchg
aad
sbb
xor
scas
xchg
fucomip
arpl
addb
out
fmull
ja
mov
pop
int
push
cmp
loopne
andb
xlat
xlat
mov
jl
aas
out
push
dec
mov
mov
jo
repnz
or
das
mov
out
out
insl
lock
jae
loopne
dec
repnz
mov
pop
notb
xor
sahf
loop
push
sbb
js
sahf
popf
fistps
nop
adc
xchg
nop
pop
lea
incl
lahf
popa
fstpt
xor
pop
rcrb
test
pop
lahf
pop
xor
jl
jp
add
rcl
adc
fwait
outsb
incl
jmp
mov
stos
or
mov
out
mov
cmp
outsb
cwtl
dec
push
cmp
es
popf
insb
cmp
adc
sub
jae
mov
push
fsubrs
mov
filds
stos
jae
mov
push
imul
repz
jmp
pop
call
sbb
add
push
lock
jg
lret
lret
mov
lds
iret
pop
sub
sub
adc
push
inc
add
fsubrl
je
stos
push
rcl
mov
sbb
aaa
hlt
aad
ds
repz
in
std
lcall
out
adc
cmp
jecxz
enter
mov
stos
cwtl
inc
sbb
bound
stos
sbb
push
mov
in
cmp
adc
inc
push
mov
dec
hlt
rcrb
add
dec
mov
mov
fwait
sub
push
pop
dec
xlat
push
inc
add
adc
sub
fcomip
dec
fcomps
lods
and
mov
fwait
xchg
push
cmc
pop
lahf
les
in
les
mov
testl
cmp
pop
dec
lret
mov
nop
adc
sbb
ret
xor
dec
cltd
push
flds
sub
scas
jle
inc
or
stos
add
aam
jmp
fucomi
sub
cltd
xor
inc
fnstsw
sti
sub
pop
mov
sbb
int
cld
add
jno
test
add
out
rcrb
outsb
cmp
add
lods
js
push
mov
sub
aam
ds
test
dec
push
cmp
jle
add
pop
jnp
add
repnz
xchg
mov
sub
mov
cmpsb
loopew
cwtl
xor
fsts
jae
sub
pop
mov
sbb
xchg
add
fadds
jp
call
test
fstpl
push
popf
cmp
xchg
sub
cwtl
xchg
repz
cmp
fidivrs
stc
xchg
lods
pop
sahf
add
iret
pop
cmp
dec
add
js
dec
or
lds
mov
pop
inc
dec
add
mov
mov
add
xor
lds
pop
dec
mov
push
add
std
or
stos
pop
das
cmpsb
add
rcrb
sub
fcmovbe
pop
or
add
lret
push
add
fwait
cmp
and
pop
mov
pop
lods
shlb
jbe
decl
fcmove
jne
sbb
loopne
pop
and
pop
push
mov
jge
pop
addr16
enter
cmp
aam
dec
jae
push
filds
inc
pop
orb
mov
dec
stos
xchg
pop
scas
pop
lret
ja
clc
push
imul
sub
dec
mov
lock
lods
shrb
mov
push
adc
mov
xchg
ret
sub
or
or
mov
cld
mov
add
test
add
and
outsb
mov
cmp
ret
stos
add
xchg
dec
hlt
sub
fcoms
jp
xchg
lds
inc
jo
loop
insl
faddl
sbb
loopne
dec
dec
iret
sbb
jns
stc
add
jecxz
js
push
repnz
pop
sbb
fnstsw
sub
nop
dec
std
cld
fmul
push
lods
dec
dec
stos
test
cltd
rcrb
scas
adc
push
frstor
das
lret
icebp
fmuls
fwait
orb
add
jge
and
scas
test
mov
or
add
jns
pop
divl
jp
sbb
popf
sub
dec
mov
push
xor
insb
sbb
dec
loop
add
xchg
into
sar
cmp
dec
mov
popl
into
sti
scas
or
test
mov
in
pop
xchg
add
mov
sub
aas
inc
lret
inc
loop
adc
outsb
cmp
pop
add
push
mov
out
push
cmp
cmp
aaa
and
icebp
and
sub
mov
mov
es
loop
fimuls
loop
call
insl
adc
test
fsubl
js
xchg
cmp
inc
add
lods
nop
cmp
push
push
cs
and
imul
lods
nop
clc
lock
push
mov
movsb
adc
jecxz
pop
lret
sarb
lock
adc
jge
inc
or
pop
lret
fwait
mov
cmc
adc
nop
int3
xlat
pop
xor
and
leave
adc
ret
add
psubw
scas
cmp
jns
repnz
fisubrl
inc
pop
adc
enter
mov
sub
dec
aam
mov
inc
jnp
add
orl
add
subb
and
sahf
push
aad
mov
jg
and
nop
rol
fwait
inc
xor
add
cltd
add
enter
cmp
nop
mov
jg
cs
pop
js
fwait
mov
sub
push
mov
test
sbb
jb
call
movsl
pop
push
jae
ret
or
push
dec
pop
dec
lock
mov
jmp
dec
lock
inc
mov
int3
adc
dec
mov
shl
andb
push
xor
cli
out
pop
pop
mov
f2xm1
lock
cmpsb
mov
add
dec
movsl
jnp
add
cld
mov
dec
add
mov
fsub
aas
lcall
jle
loope
std
lret
push
mov
pop
mov
cmc
push
lock
cmpsl
pop
and
in
jg
int3
add
lods
out
or
push
negb
mov
in
xor
push
enter
lods
mov
jae
scas
mov
push
int3
add
mov
jle
xchg
popl
aas
mov
pop
cmp
jnp
iret
add
and
test
lahf
out
fwait
mov
mov
sub
add
sub
and
mov
add
test
pop
or
xor
dec
xchg
add
into
mov
jns
call
or
jl
cmpsl
sub
and
dec
gs
xchg
add
cmc
js
inc
push
add
sbb
or
stos
mov
push
jg
jge
and
cmp
xor
subb
mov
mov
cmp
pop
testb
ljmp
add
push
rclb
ret
or
xchg
xor
or
push
loop
cmp
ret
loopne
arpl
nop
in
push
cmc
decl
dec
mov
and
cs
ja
xchg
push
add
sub
outsl
cmp
fbstp
mov
xor
mov
and
adcl
dec
mov
sbb
call
jo
sbb
cltd
aam
orb
add
sub
add
ss
fcomip
add
in
pop
xlat
mov
sub
push
in
pusha
add
js
push
ja
sub
test
enter
inc
loop
rolb
lea
pop
sti
push
push
subl
gs
sbb
call
add
lret
ljmp
jbe
scas
push
dec
mov
int
or
aad
ss
int3
adc
scas
arpl
inc
stc
xchg
xchg
adc
negl
inc
ret
pusha
les
xchg
imul
fisttps
cmpsb
dec
stc
call
bound
clc
xor
sbb
ds
mov
repnz
or
adc
in
psadbw
inc
addl
in
or
fistl
das
inc
or
adc
fsubrl
mov
jl
mov
sub
and
enter
scas
xor
rol
xchg
dec
fcomp
sub
adc
mov
xlat
imulb
enter
cmp
pushf
dec
xchg
xchg
sub
mov
insb
iret
push
cmp
xchg
push
in
in
mov
fcomps
loop
ja
adc
inc
imul
dec
popf
and
pop
mov
fistpll
sub
ror
shll
ja,pt
add
movl
inc
outsl
jl
push
cmp
cld
inc
stos
in
sbb
aaa
mov
lret
mov
push
pop
add
inc
cmpsb
jecxz
add
pop
push
xchg
pop
xchg
add
fbstp
int3
loopne
cmp
nop
and
sub
pop
fnstcw
andl
pop
int3
jnp
ja
xchg
sub
dec
cs
pusha
mov
add
popa
pop
push
mov
ja
add
sub
aaa
add
test
popl
mov
cmp
repnz
stc
enter
pop
add
into
mov
cld
add
sbb
add
out
into
insl
cmp
pop
sbb
jae
pop
mov
dec
fcoms
inc
adc
pop
out
sub
rclb
mov
fdiv
lret
popf
and
push
movsb
adc
sbb
andb
rol
dec
push
jno
jmp
es
in
jmp
lods
fsubs
jo
add
pop
pop
add
repz
inc
rcrb
hlt
push
shrb
push
cmp
enter
dec
sbb
adc
sub
fdivl
sbb
sub
mov
out
xchg
add
adc
jo
or
push
inc
add
icebp
movsl
hlt
and
pop
mov
add
sub
jb
add
xchg
popf
jae
add
dec
dec
sbb
imul
or
stc
shll
add
add
fisttpll
pop
lock
fidivs
imul
xchg
xchg
add
movsb
or
push
loop
adc
out
ficoms
sarb
jb
cmp
jb
popa
xor
xchg
add
filds
ret
mov
stc
lcall
pop
adc
movsl
mov
and
or
add
pop
out
jl
xchg
fmull
in
test
push
jecxz
lods
lret
or
ss
jp
add
in
stos
cmp
cmp
mov
or
adc
or
das
std
cmp
pop
nop
sub
cwtl
add
fs
icebp
xchg
dec
mov
jl
aam
cld
ret
inc
pop
and
int3
rcrl
sbb
inc
cmp
pop
arpl
sbb
jle
leave
out
mov
sbb
pop
inc
mov
xchg
mov
pop
sub
decb
lret
dec
sub
mov
add
add
lods
push
mov
call
sbb
les
fiaddl
repz
jb
push
add
cmp
adc
andb
jnp
add
test
out
sub
and
lods
inc
rol
jns
pop
mov
cli
cmp
test
leave
push
jg
mov
xor
push
movsl
xchg
add
sbb
adcb
pop
js
arpl
jecxz
pusha
cmc
dec
gs
test
cmp
pop
fldcw
cmp
mov
hlt
movsb
pop
pushf
aad
dec
cli
mov
mov
push
data16
push
jo
out
xor
jecxz
cmp
sub
push
ds
aaa
sub
sub
mov
iret
jmp
sbb
mov
add
leave
push
ja
std
cld
jg
loope
mov
stc
test
stos
nop
xor
pop
cltd
movsl
sbb
shll
es
jg
movsb
mov
add
mov
sets
pusha
xchg
and
iret
enter
das
jg
fs
repnz
mov
sub
pop
add
mov
or
sub
mov
clc
mov
sbbb
push
jnp
xor
pop
sahf
lret
dec
xchg
xchg
out
aaa
mov
pop
cmp
or
lods
pop
jnp
jae
fnstcw
inc
das
dec
into
jbe
mov
sub
pop
inc
xor
inc
ret
dec
pop
inc
pop
mov
pushf
add
filds
jo
std
inc
xorl
stos
pop
lds
ja
jne
test
repnz
cli
addr16
add
add
cmp
stos
sysenter
sub
rorb
pop
pop
sar
dec
pop
add
add
mov
lret
push
and
data16
out
dec
shlb
add
dec
dec
punpckhwd
popa
jecxz
push
or
mov
fsubrs
sbb
insl
cmp
movswl
and
pusha
testb
add
ds
ja
inc
stos
lds
push
sub
loopne
add
adc
mov
push
xor
push
dec
add
push
les
push
xor
sbb
orl
test
mov
stos
push
cmp
mov
adc
mov
cmpl
dec
cmp
cmp
xor
xchg
cwtl
add
je
jle
mov
pushf
rolb
lods
rolb
dec
mov
or
cmpb
push
adc
clc
fs
pop
mov
inc
add
js
push
mov
and
dec
sub
xor
enter
fdiv
cmp
shlb
in
mov
jae
adc
or
imul
jnp
out
addr16
jb
dec
mov
dec
xor
push
decl
mov
push
loop
in
outsb
repnz
inc
jns
dec
testl
xchg
test
xorb
sahf
sub
pusha
xchg
into
mov
adcb
push
add
add
xchg
movsl
cmp
jno
lea
lret
je
add
out
movsl
pusha
and
add
xor
testb
ret
icebp
loope
mov
cmp
popa
add
fstpt
add
inc
sub
mov
jge
aas
pop
lea
add
outsl
or
or
push
pop
adc
add
sbb
dec
in
fsubl
jge
jo
xor
fldenv
xchg
jae
push
in
pop
int3
add
sbb
addr16
push
fwait
mov
iret
mov
out
push
bound
lods
leave
sbbl
mov
add
or
add
ret
sbb
sub
int
aam
add
out
push
lods
mov
add
cmp
jmp
add
xchg
inc
addr16
fdivs
xor
lsl
cmp
mov
jnp
stc
mulps
call
or
mov
pxor
lods
xchg
add
lret
mov
in
push
sub
aas
adc
add
cwtl
jae
lods
arpl
mov
jo
jno
add
inc
add
cmp
xor
mov
or
test
or
mov
insl
aad
je
mov
aaa
sbb
sbb
mov
test
js
push
mov
push
mov
add
out
xlat
add
push
loope,pn
insb
cmp
ror
adc
insl
fists
xchg
hlt
daa
pop
push
andb
or
sbb
jnp
outsb
add
hlt
loope
cs
xor
lds
movsb
sub
inc
mov
mov
int
dec
roll
add
sbbl
out
add
clc
push
add
imull
lock
lahf
mov
scas
sub
dec
mov
in
int
inc
sub
sbb
or
hlt
int
sbb
rcl
pop
add
sub
lods
addb
push
jge
mov
inc
add
mov
add
add
into
loop
jno
adc
mov
xchg
sub
outsl
bound
dec
mov
pop
pop
fscale
sbb
orb
add
jno
xlat
outsb
xor
add
rclb
or
std
sbb
test
push
jge
mov
mov
mov
pop
insl
inc
xchg
mov
outsb
fistl
inc
push
add
xchg
fcomip
icebp
push
pop
sbb
sub
push
icebp
cltd
fdivp
jle
ficoms
jle
add
rcr
mov
into
data16
cmc
iret
cltd
pop
cltd
push
aad
bnd
mov
jmp
rorl
lods
fidivrs
lret
sub
mov
loope
inc
inc
jbe
add
inc
mov
subl
call
sub
imul
xchg
outsl
in
sub
dec
lods
and
insl
or
or
loopne
jl
push
mov
mov
hlt
mov
popf
mov
and
dec
cmpsb
push
sub
sbb
shll
vcomiss
ret
mov
mov
add
insb
stos
insb
lods
movsl
mov
loopne
cmpl
cmp
bound
testb
push
xor
push
decb
stos
mov
orl
xor
inc
mov
fdivs
fsubrs
xor
fcoms
lret
inc
stc
jg
jge
push
call
inc
xchg
sbb
pop
xorb
mov
mov
in
jmp
xchg
adc
xor
sbb
in
and
jnp
mov
fstpt
lret
ja
sti
pop
popa
out
sub
push
lret
cltd
mov
xor
cmpsb
or
sub
xchg
mov
movsl
in
cmp
fs
xor
xor
xor
sub
stc
adc
jp
sbb
mov
xor
and
mov
insb
and
imul
push
xchg
pusha
xchg
ljmp
lea
xlat
push
pop
add
into
hlt
jb
push
lock
and
test
inc
sahf
imul
filds
loop
and
mov
push
jbe
jecxz
das
add
mov
leave
push
pop
cmp
jge
sbb
push
stos
sub
dec
ret
movsb
out
ret
pop
enter
pop
xor
repz
cld
xor
mov
pop
xchg
popa
in
pop
imul
repnz
insb
out
fcmovu
mul
imul
scas
sub
scas
and
mov
hlt
jl
dec
mov
ret
hlt
pop
xorb
add
bound
fistps
adc
sub
adc
pop
outsb
and
icebp
dec
xchg
push
cmp
mov
inc
leave
and
dec
out
add
stos
inc
or
stos
sub
push
jge
dec
out
ljmp
enter
lcall
int
test
or
and
or
pop
fimuls
imul
aaa
jl
adc
inc
outsb
aam
aad
cmp
repnz
nop
in
in
ret
mov
lret
push
push
aad
xchg
fcomps
sbb
dec
add
mov
pop
stos
and
mov
mov
pop
mov
cli
xor
mov
mov
cmp
fsubp
xcrypt-ecb
cmpsl
or
out
repz
lods
stos
and
xchg
lcall
xchg
fwait
pop
push
xorb
pop
popl
dec
pusha
inc
add
out
jae
adc
fld
cmpsl
mov
imul
sarl
or
sub
sub
jbe
div
push
dec
iret
xor
dec
jns
enter
shll
xchg
repnz
xchg
pop
rorb
les
test
out
test
cltd
jne
ss
lret
rcrb
outsl
sar
rorb
add
stos
sub
xchg
mov
jno
inc
add
jns
ret
ss
pop
inc
lret
sbb
repz
test
mov
ja
fwait
repz
pop
fcoml
incl
inc
leave
int3
add
jne
jne
cmp
ljmp
arpl
jle
dec
push
push
mov
cwtl
aam
jp
in
mov
jge
in
inc
movsb
add
cmp
in
cmp
mov
dec
and
int3
mov
icebp
pop
fstl
icebp
cmp
jge
sub
fsubrp
ds
outsl
mov
out
into
fisubs
sahf
sahf
into
sahf
arpl
cs
lea
je
not
not
lea
movzbw
movzwl
push
jmp
clc
pushf
xor
pushl
cmp
bswap
push
lea
movzbw
bswap
jmp
or
cld
aam
dec
lods
addl
cmp
clc
mov
jg
decl
mov
inc
in
arpl
pop
push
add
test
pop
adc
pop
test
adc
fdivr
cmpsl
mov
mov
mov
push
mov
cs
push
aad
sbb
jmp
cmc
mov
jb
push
ds
sub
cmp
add
call
jmp
imul
stc
pusha
cmc
call
cmc
mov
xor
test
movb
pushf
clc
sub
pushf
test
shr
jmp
mov
call
jmp
sbb
jp
int3
or
lods
xchg
xchg
mov
pop
jns
jbe
sbb
mov
stos
jo
loope
out
roll
call
xchg
mov
sub
jns
and
add
pushf
js
int3
cmp
cmp
inc
mov
enter
in
cmpsb
cs
es
mov
ljmp
pop
cmp
aad
or
pop
js
sbb
cmp
mov
dec
loopne
cmpsl
insb
sub
sub
lret
stos
sub
clc
mov
cmp
call
jno
push
pusha
movl
pusha
movb
lea
jmp
jmp
dec
bt
call
call
lea
jb
cmp
push
test
bt
cmp
call
bswap
movb
pusha
mov
call
dec
push
mov
xor
test
push
sub
jmp
push
movl
call
bt
ror
push
pushf
push
stc
xor
cmc
bt
mov
cmc
cmp
lahf
lea
pop
lahf
lea
bswap
lea
jp
pop
pusha
call
mov
jmp
or
negb
jmp
adc
xor
bnd
jb
add
mov
push
std
outsb
out
neg
mov
imul
add
ljmp
xchg
dec
inc
int
mov
push
mov
lods
pop
xchg
mov
mov
mov
fildll
pop
xor
cwtl
cmp
test
imul
cmp
jge
stos
sbb
adc
mov
outsb
sbb
jnp
and
sub
jge
das
fs
sub
repnz
mov
sti
lods
aam
pop
adc
add
loopnew
xorb
mov
std
push
push
inc
mov
rorb
gs
or
push
sub
ljmp
popa
adc
arpl
arpl
push
and
cmp
cmp
cld
jecxz
sub
orl
xchg
mov
bound
movsl
imul
mov
sbb
repnz
fistl
and
rclb
sub
scas
stos
pop
shlb
push
lahf
push
mov
in
and
or
mov
call
dec
push
xchg
imul
hlt
jge
in
cld
jo
jno
inc
insl
inc
inc
add
push
push
test
daa
sub
or
bound
lea
cwtl
out
push
cmpsl
popf
mov
xchg
mov
or
cmpsl
dec
out
pusha
dec
stos
xor
test
push
pushf
pushl
pushf
lea
je
push
add
call
jmp
lea
ja
cmc
imul
clc
bt
push
add
movw
movb
pusha
lea
jmp
mov
mov
movl
push
lea
jmp
pusha
xchg
pusha
pushf
dec
cmp
push
shl
pushl
setne
lods
movb
movw
cmp
stc
xor
bt
cmc
neg
push
call
jmp
pusha
pushf
adc
movb
pushf
pushf
movb
lea
jmp
sbb
out
insl
into
push
data16
aaa
fbstp
fcoms
pop
pop
js
js
test
xchg
and
push
xchg
hlt
pop
xchg
pop
lds
ja
push
dec
test
inc
dec
sbb
rcll
ds
add
sbb
outsl
in
sub
movnti
call
rep
cmc
iret
push
inc
jmp
lea
je
pusha
pushl
push
push
lea
jmp
lea
jmp
sub
shl
sub
and
lea
lea
jb
stc
sub
cmp
stc
test
pushl
jmp
mov
test
test
inc
or
bound
fdivr
aaa
pop
pop
nop
cwtl
jg
clc
xor
lds
mov
jns
fcoms
inc
int
cmp
cltd
xchg
push
repnz
xor
cli
jb
daa
movsb
dec
std
jle
leave
push
cmpsb
out
xchg
cmp
add
mov
inc
pop
ret
and
mov
push
fbstp
aam
add
mov
or
lods
test
fmuls
or
push
aaa
mov
cmp
shll
ljmp
cmp
push
imul
push
rorb
fs
lcall
add
sub
dec
sbb
insb
cmp
mov
in
add
and
fsubl
xchg
adc
cmp
and
sub
lret
and
int
cmp
mov
adc
jo
sub
and
sbb
sbb
pop
mov
inc
jge
jb
aam
sbb
mov
aad
scas
mov
cmpsl
mov
cmp
mov
pushw
or
lea
and
hlt
hlt
or
lods
dec
clc
inc
fildl
cmc
inc
adc
mov
cmp
cmc
cmpb
pushf
call
jmp
adc
cltd
adc
mov
inc
imul
cmpsb
push
jg
or
push
into
lods
imul
push
arpl
cmp
cmp
aam
jae
mov
cmp
cmp
shl
mov
ret
push
ds
mov
jge
mov
das
adc
mov
mov
fcmovnu
mov
xchg
adc
pop
jae
dec
lcall
sbb
or
pop
push
ja
xchg
mov
fistps
je
dec
cmp
in
cmp
sarb
fdivl
lock
mov
scas
cmpsl
data16
or
shr
cmp
mov
xchg
hlt
mov
mov
testb
gs
and
aas
fdivs
push
scas
daa
out
mov
out
cmp
mov
sub
and
xchg
add
mov
cmp
aad
adc
sahf
repnz
jmp
in
in
mov
xchg
sahf
push
out
pop
pop
test
jnp
jnp
mov
xor
call
pop
fwait
xchg
sti
adc
in
out
pop
sbb
pusha
pop
sahf
add
aad
xchg
or
movsb
jecxz
pushf
cltd
jmp
pop
mov
xchg
lahf
xor
cmp
push
xor
int
pop
jge
test
mov
mov
je
push
aas
xor
adc
stos
xor
fimull
and
fs
ja
stc
stc
clc
sub
stc
not
add
cmp
test
mov
rcr
rcr
pusha
mov
test
repnz
push
lea
jne
setnp
bswap
jmp
movl
push
pushf
pushl
movl
pusha
lea
jmp
pushf
lea
jae
clc
dec
mov
ror
mov
rcr
stc
mov
cmc
jmp
mov
mov
sbb
cltd
mov
sahf
xchg
adc
jbe
adc
or
das
inc
xchg
cwtl
and
fstps
fsts
cli
push
popf
jno
xor
sbb
ja
jo
cmpsl
out
ljmp
push
cmp
icebp
cmp
sbb
push
push
cwtl
adc
imul
shlb
ret
mov
test
inc
sub
sub
lock
shl
cwtl
hlt
fdivs
fcoms
hlt
fildll
pop
pop
enter
stos
and
pusha
sub
insl
stos
xor
jecxz
dec
out
push
scas
xchg
push
jne
or
and
sub
sysexit
jle
jecxz
out
or
push
mov
cmpsl
jmp
xor
icebp
jge
sbb
cmove
mov
sbb
cmp
enter
rcrb
in
in
and
add
ret
stos
xor
mov
fcomps
dec
xchg
test
scas
jmp
mov
ljmp
sbb
fidivl
adc
ret
xchg
cwtl
push
mov
xchg
clc
pop
or
push
push
jae
imul
mov
idivl
jl
ljmp
or
test
mov
test
xchg
dec
or
add
push
addr16
aad
jae
cwtl
adc
xor
mov
sub
sub
inc
push
or
push
add
sub
adc
sti
lcall
or
inc
xlat
xor
ret
xor
pop
mov
push
arpl
xor
mov
cli
repnz
sbb
fs
cmpsl
ljmp
ljmp
inc
call
dec
fldl
inc
or
sbb
data16
sbb
pop
adc
mov
stc
scas
fwait
pop
rorb
test
push
pop
data16
lods
mov
fwait
mull
add
fisubrl
ror
add
iret
inc
cmp
inc
rolb
data16
fdivl
in
int
push
nop
dec
or
fstpl
fst
fstp
xor
je
je
xor
push
dec
push
int
repz
aaa
adc
rorb
std
mov
jae
pop
jl
add
add
cmpsl
or
in
loopne
pusha
mov
pop
sub
idivl
inc
outsb
lret
lods
push
sbb
or
cmp
jnp
add
ret
mov
sub
cmp
sarl
sbb
cld
shr
into
or
pushl
es
shll
leave
and
lods
push
cmpsb
or
cmp
dec
insb
aam
addr16
insl
jle
push
test
insw
adc
mov
fisubl
pusha
imul
je
leave
test
idivb
aaa
xlat
out
and
stos
dec
add
or
inc
imul
int
test
rclb
jae
ja
inc
insb
mov
stos
cmp
stos
inc
clc
incl
pushf
pushl
cmp
call
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
sti
push
mov
test
mov
mov
mov
mov
test
pushf
add
jge
pusha
sub
push
pusha
call
jne
pusha
mov
mov
lea
jmp
add
jnp
mov
scas
or
addr16
test
dec
loopne
mov
ficoms
andb
xchg
popa
cltd
cli
push
cmp
cmpsb
fistpll
std
mov
mov
fisubs
jecxz
lahf
cwtl
adc
xchg
mov
aam
jae
mov
cmp
jno
xchg
jge
push
loopne
cmp
mov
ja
sbb
inc
lret
sub
pop
inc
es
sub
mov
or
mov
repnz
xchg
cmpsb
add
mov
test
push
push
push
cmp
idivl
test
xchg
mov
mov
adc
xchg
jb
jno
negb
jae
sbb
cmp
mov
xor
pop
ja
or
mov
jns
cmpsb
rorl
pop
and
pop
nop
xchg
or
mov
arpl
mov
pop
ja
insb
sbb
inc
pusha
pop
imul
push
jp
sahf
ficoms
xor
xchg
xchg
pop
add
xor
ja
inc
or
xchg
ljmp
sbb
movsb
loopne
int3
iret
orb
notb
enter
inc
xor
inc
dec
rorb
dec
pusha
dec
inc
sub
push
cmp
mov
adc
ret
std
pushf
or
xchg
xchg
in
stos
cmp
sbb
bswap
pusha
lea
call
lea
pusha
lea
call
sti
dec
out
out
loopne
iret
inc
mov
mov
cs
pop
and
cmp
leave
scas
xchg
jge
ja
sbb
lds
imul
and
stos
cmp
cmc
push
clc
pushl
lea
je
push
cmp
lea
pushf
pushf
pushl
call
jb
loope
scas
inc
cs
loope
mov
pop
aaa
sbb
and
ljmp
push
cltd
and
add
sbb
std
xor
pop
idivl
xor
das
inc
jmp
inc
out
out
xchg
adc
mov
rcr
xor
sbb
pop
mov
ds
repnz
cmp
push
mov
repz
rcrl
mov
rcr
icebp
sbb
jbe
jbe
mov
inc
lock
les
loopne
lcall
and
mov
xchg
xchg
cmp
push
cmp
mov
sbb
add
pop
adc
sti
shlb
jle
cmp
sub
push
cmp
mov
in
jl
adc
icebp
mov
mov
cmp
jge
jo
and
fs
outsl
inc
adc
jbe
loop
and
lods
test
rorb
xor
std
adc
cmp
cld
pop
movb
pushf
pushf
pushf
lea
ja
clc
cmc
push
movb
add
sub
test
cmp
or
jmp
push
lea
je
cmp
call
btc
bt
push
bsf
bswap
shrd
bsr
mov
sub
sub
jmp
test
clc
mov
call
test
mov
outsb
dec
jae
pushf
fistpl
cld
je
fwait
pop
push
xchg
aas
shll
xor
mov
xchg
mov
mov
dec
inc
dec
xor
test
aas
cmp
xchg
mov
out
mov
loope
dec
subb
outsl
xor
mov
pop
push
sbb
push
mov
in
adc
je
movsl
or
jae
jg
pop
sar
mov
xor
adc
cmp
add
pop
lea
jb
cmc
bt
push
cmp
push
push
lea
jae
shr
mov
btr
mov
bswap
xor
push
adc
mov
rcr
cmp
mov
cmc
jmp
lea
jne
xor
cmp
mov
rcl
call
add
mov
cmp
test
mov
pushf
bt
test
cmp
test
push
lea
je
clc
call
jmp
mov
lea
jae
pusha
lea
jne
pushf
call
pushf
mov
call
pushf
sub
jmp
push
lea
call
cmp
sub
pushf
pushf
lea
jne
push
jmp
push
mov
push
mov
pop
push
mov
pop
pop
sbb
xor
cli
cmp
cmpb
popf
mov
repnz
inc
ljmp
shlb
pop
insb
adc
cmpsl
pop
aas
pop
xor
lahf
mov
xor
adc
pop
sbb
xchg
dec
test
adc
cmp
cmc
mov
push
movsl
and
xchg
sbb
mov
stos
mov
cltd
into
xchg
and
dec
dec
jbe
or
lret
insb
fsts
or
cmp
daa
in
stos
and
lret
stos
addb
or
cmp
cmc
cmp
pusha
jmp
call
jmp
mov
not
pop
push
pushl
ret
not
mov
pushf
pushl
ret
lahf
lea
lea
jmp
push
push
movb
lea
je
bsr
cwtl
shl
xor
bswap
aaa
mov
bts
mov
jmp
push
xchg
lods
jecxz
sub
xchg
rcl
fdivrl
cld
adc
jo
out
add
clc
fs
xchg
xchg
mov
lcall
xor
ss
test
pop
std
cmp
aam
jns
fisubl
sbb
dec
xchg
jnp
xlat
mov
sahf
out
movsl
and
pusha
pusha
call
pop
and
sub
and
inc
inc
push
pop
lds
lcall
rcrb
jo
pop
mov
cltd
iret
xchg
sbb
push
jg
popa
stos
sbb
and
test
or
or
into
test
fdiv
push
test
das
adc
and
jo
je
sbb
push
push
pop
and
data16
insb
ret
cltd
mov
dec
jl
xchg
mov
loopne
xchg
lret
icebp
jno
out
cmp
dec
aaa
push
jmp
outsl
movsb
mov
sub
pushf
jmp
stc
adc
lods
mov
rorl
popf
movb
pusha
jg
fs
outsb
xchg
inc
repz
repz
xchg
mov
inc
jl
pop
adc
xchg
push
mov
cli
jo
jl
sub
push
jns
adc
jno
jge
push
sbb
push
out
add
test
sbb
jge
mov
test
icebp
mov
cltd
loopne
or
push
dec
cs
xchg
jno
jge
push
jbe
pop
mov
adc
fcoml
std
jno
sahf
jecxz
icebp
fnsave
xor
lahf
fiadds
test
dec
inc
punpckhbw
ret
dec
mov
mov
xor
xor
mov
cmp
lahf
mov
mov
aaa
mov
ficompl
add
sub
fwait
lods
mov
push
int3
sahf
jne
dec
ret
and
mov
jg
bound
rcrl
and
hlt
sbb
pop
or
jp
rcrb
gs
mov
push
cli
std
inc
and
dec
pusha
push
scas
mov
cmc
xchg
jo
arpl
testl
mov
dec
arpl
fcmovnb
or
adc
sbb
mov
inc
or
xor
inc
lods
test
cmp
loopne
int
popa
insb
aaa
push
test
add
mov
int
pusha
sub
inc
mov
xchg
into
dec
mov
xchg
push
jbe
jb
push
int
mov
xlat
call
sub
lds
xor
inc
ljmp
push
fsts
stc
cld
mov
loopne
lods
xchg
repnz
jge
jno
push
mov
scas
sub
lods
test
push
pop
adc
in
xor
fisubl
negw
shld
ljmp
inc
or
xor
xchg
fidivs
adc
shll
jbe
pop
dec
mov
and
inc
add
out
ljmp
cmp
push
loop
arpl
jbe
sbb
push
xchg
xchg
sti
mov
adc
xor
mov
push
pop
add
sub
sbb
sbb
fwait
lods
cltd
sbb
aam
fsubs
lret
into
mov
into
stos
in
xor
add
fs
cmp
mov
int
aam
lret
cmp
aaa
or
jmp
cmp
ljmp
insb
aaa
push
cmp
int
lahf
mov
jo
xchg
fidivs
inc
iret
cmp
aam
int3
pushf
sbb
fistpll
mov
int3
movsb
mov
es
pop
sarb
sbb
iret
lret
push
add
mov
sbb
mov
rcr
movsl
ret
pop
idivb
adc
mov
inc
add
mov
push
cmp
xchg
fdivr
pop
cmp
nop
sbb
cmp
pushf
push
sti
xor
dec
lea
ja
push
dec
neg
sub
cmp
shrd
not
movzbl
add
add
call
pusha
pushf
lea
jb
stc
cmpb
push
lea
jne
shl
mov
test
clc
add
call
rorl
jmp
jge
pushf
cmpsb
inc
data16
test
shll
rcrl
jno
xchg
out
out
loop
pop
xchg
repnz
inc
push
cmpsl
jmp
out
in
xchg
in
hlt
inc
test
stos
data16
sbb
dec
add
pop
cltd
das
cs
add
das
leave
add
bound
movsl
iret
add
xorl
lock
lret
xchg
adc
xor
addb
pop
pop
dec
out
pop
rcrb
fdivs
clc
push
cmpsb
or
stos
leave
out
inc
xor
shrb
repz
and
dec
inc
outsb
out
pop
test
inc
mov
pop
imul
cmp
sbb
sub
jle
or
pop
daa
movsl
imul
and
add
movw
pusha
pushl
pushf
lea
jmp
test
mov
clc
bt
push
cmc
test
call
mov
mov
movb
movw
pushl
ret
pushf
pusha
movl
pushf
push
push
push
lea
jmp
js
test
in
jg
pop
push
scas
int3
sub
jecxz
inc
test
stos
inc
dec
inc
push
mov
orl
xlat
mov
test
lods
int
xchg
cmp
xor
pushf
fnsave
arpl
adc
add
inc
enter
in
lods
cltd
std
sbb
in
in
xor
push
ficomps
fcoml
lcall
mov
ljmp
dec
add
mov
jmp
pop
sub
inc
xor
xchg
cmp
jl
xor
clc
shll
jbe
push
xor
or
ds
test
cltd
popa
int3
cmpsl
pop
aas
js
js
dec
inc
inc
dec
out
movsb
aam
xchg
fsts
xor
ljmp
jge
mov
js
stos
and
ret
mov
dec
mov
cmp
or
popf
jge
mov
icebp
cmp
loope,pt
fcmovu
xchg
loop
fstl
mov
orb
popf
inc
imul
insb
sub
aam
sarb
push
push
sahf
pop
out
pop
xlat
lcall
in
andb
xchg
jo
pop
jnp
cmp
push
or
add
mov
testl
jae
adc
mov
daa
sti
mov
and
and
icebp
ficoml
and
add
mov
mov
mov
adc
stc
push
stos
orb
fwait
mov
out
push
mov
pop
push
hlt
mov
and
xor
mov
ret
xchg
mov
clc
mov
xor
mov
cltd
jb
fwait
mov
cmpsl
cmpsb
pop
rorb
adc
adc
arpl
ss
ss
xlat
sbb
dec
sbb
lods
cli
mov
sbb
ss
leave
pop
mov
push
ds
xor
lret
insb
in
mov
jb
jne
xor
sbb
pop
lods
nop
pop
jo
movsl
lahf
clc
push
add
push
mulps
fnstcw
sarl
jmp
sti
jmp
pusha
dec
call
call
push
cmpsb
scas
push
mov
adc
cmp
push
adc
jns
sbb
push
jle
push
in
xorb
jg
mov
in
fwait
ret
and
jle
enter
sub
mov
xchg
out
andl
mov
dec
mov
mov
lds
mov
inc
mov
mov
cmpsb
into
mov
jae
sbb
pusha
or
icebp
movsl
leave
dec
test
dec
in
mov
scas
gs
inc
mov
pop
bound
push
ds
jno
push
fcoms
cmp
mov
xchg
clc
scas
movsl
sar
mov
shrl
into
jnp
sub
pop
push
pop
push
js
orb
mov
inc
call
jecxz
or
pusha
lea
je
movzbw
pusha
lea
lea
mov
movsbw
movzbw
bswap
movzwl
call
lea
jne
jmp
mov
movl
jmp
cmp
bt
mov
call
call
add
cmc
bt
mov
mov
mov
cmp
stc
stc
test
jmp
lea
jae
clc
call
adc
imul
mov
push
sbb
push
lcall
lahf
leave
inc
xchg
and
xchg
pop
movsb
push
out
aam
imul
xchg
inc
cmp
dec
and
dec
dec
rol
mov
rcr
aad
jne
xor
push
jne
stos
orb
cmpsb
pushf
cmp
call
mov
push
clc
stc
xchg
mov
jge
pop
mov
mov
fstl
xor
enter
adc
or
cmpsb
or
add
and
mov
lcall
imul
imul
mov
push
lret
xor
imul
imul
sarl
hlt
clc
aam
xchg
pop
je
orb
mov
stc
test
test
jmp
add
dec
outsl
arpl
inc
jb
add
dec
out
adc
mov
data16
dec
roll
mov
mov
add
rcrb
mov
leave
pop
insb
and
shrb
in
loope
clc
aam
jae
adc
stos
orb
test
in
cld
jae
cmp
clc
repnz
pusha
push
pushf
jmp
test
push
jle
mov
adc
rcll
adc
xchg
xor
xor
cli
negl
fsub
scas
mov
pushf
aad
add
jle
mov
mov
arpl
jle
mov
sbb
pusha
test
sub
inc
mov
cmp
int
jno
cmc
pop
loopne
sub
or
sbb
adc
popa
mov
lret
xchg
mov
lods
mov
xor
xor
xchg
inc
mov
stos
leave
and
adc
xor
lcall
lret
iret
pop
ds
aad
insb
and
xchg
les
sbb
sbb
stos
orb
stos
movl
jmp
bt
jmp
jmp
push
mov
sbb
jle
jnp
imul
push
outsb
test
mov
sub
cs
orb
addr16
cmp
xor
mov
cwtl
fsubrl
mov
dec
and
dec
arpl
inc
dec
fs
orb
xchg
clc
pusha
pop
shr
shr
pushf
sub
mov
jmp
pusha
pusha
movl
push
mov
movl
push
pushl
ret
pusha
jmp
mov
lea
jmp
stc
neg
push
pushf
dec
bt
jmp
pop
scas
enter
add
sti
jae
cmp
cld
jnp
adc
je
push
add
push
out
test
dec
orb
lds
add
push
mov
mov
in
ror
lods
mov
stos
orb
rolb
neg
call
mov
leave
mov
cmp
jns
pop
mov
pop
rcrb
inc
imul
and
fnstsw
cmpsb
push
xchg
jl
cld
test
or
fs
pop
js
arpl
sahf
lret
xchg
mov
mov
and
pop
adc
push
mov
insl
lahf
mov
neg
cmp
mov
rcr
lods
mov
dec
or
sbb
ficoms
gs
push
clc
je
xor
hlt
jg
orl
sbb
adc
pop
xor
sti
xor
aaa
stos
orb
jge
push
dec
jmp
mov
push
pushf
pusha
lea
jmp
stc
call
cmp
mov
jmp
bt
sub
pushf
pusha
cmp
movb
pushf
movb
mov
lea
ja
push
imul
test
call
shr
cmp
cmp
mov
bswap
movsbw
pusha
add
bt
and
add
lea
bts
mov
push
jmp
inc
lea
sub
not
sete
stc
xchg
mov
shl
xchg
mov
neg
and
mov
stc
call
xchg
pushf
mov
pushf
call
add
mov
jmp
shld
mov
shld
shld
mov
movzbw
sbb
mov
cmc
pushf
cmp
xor
mov
pusha
repnz
pusha
lea
jne
add
mov
bswap
stc
sub
bsf
cmc
not
bts
mov
cmp
cmc
test
bt
sub
pushf
stc
bt
pushl
popl
cmp
cmp
pusha
lea
ja
bt
sub
neg
add
btr
cmc
add
mov
push
shl
mov
cmp
pushf
test
repnz
jmp
push
movb
mov
push
mov
push
pushf
lea
jmp
movl
jmp
pop
pushf
call
test
stc
clc
cmp
jmp
je
and
push
lahf
ror
rcl
and
push
add
push
btr
sar
sar
push
pusha
inc
pop
das
mov
cmc
test
pusha
lea
je
rcr
dec
inc
jmp
movsb
cmp
dec
xchg
not
push
pop
jbe
stc
pop
cmp
cmp
ds
scas
jae
loop
imul
fs
rorb
fwait
push
lahf
cwtl
je
adc
jl
adc
iret
push
mov
push
fstpl
pop
mov
shll
popf
xchg
fs
jp
adc
cld
cmpsb
iret
mov
in
add
sub
sbb
adc
loope
push
in
lahf
sbbl
mov
out
mov
mov
push
pusha
pushl
lea
jmp
add
dec
outsl
popa
fs
imul
add
pusha
xor
xorl
jbe
fsts
inc
scas
pop
push
mov
test
jmp
ficomps
push
jno
out
inc
push
xchg
ret
dec
and
int3
and
out
std
pop
cmp
pusha
gs
outsb
sahf
movsb
and
in
xor
in
lret
pop
data16
icebp
jns
xor
pop
mov
aad
pop
ja
mov
sahf
fwait
out
inc
or
out
add
loopne
inc
stos
and
stos
adcb
out
push
pusha
lea
jb
pushf
movw
pushl
ret
pusha
setne
jmp
pushf
mov
adc
pushf
lea
call
jmp
pop
mov
jbe
xchg
fstps
icebp
jns
xchg
pop
test
xlat
sbb
dec
jl
sub
test
lret
mov
ret
idivl
loope
in
jmp
xor
sub
js
cltd
push
add
mov
ljmp
sbbl
fcoml
jnp
sbb
cld
negl
push
in
call
pushf
lea
ja
dec
not
sub
sbb
add
bts
mov
or
clc
and
mov
cmc
push
cmp
repnz
mov
mov
lea
jne
call
movsb
insb
lret
sbb
test
daa
shrl
mov
cmpsb
popa
sub
popa
out
lods
and
out
xchg
pop
daa
imul
or
jl
cmp
hlt
ja
push
rcrb
jb
add
jno
push
jge
mov
mov
push
stos
adcb
lahf
std
mov
incl
sbbl
mov
xchg
add
iret
jno
inc
shrd
aaa
mov
call
fnstenv
xor
into
add
hlt
arpl
repnz
pop
sbb
mov
stos
push
pop
jae
sub
and
xor
out
inc
jp
adc
xor
loopne
xchg
inc
sub
scas
ret
mov
subl
adc
das
leave
adc
not
not
mov
stc
jns
cmpb
pushf
mov
lea
jmp
add
pushf
clc
movzwl
neg
shrd
mov
push
movb
stc
add
pushl
bt
mov
cmp
pushf
test
pusha
pushf
call
setne
setbe
dec
shr
rcl
clc
ror
xor
and
pushf
call
pusha
jmp
push
mov
pushf
lods
test
pusha
xor
cmc
stc
lea
jo
neg
pushf
dec
pushf
cmp
xor
pushf
inc
push
call
lret
push
mov
xchg
test
jno
mov
ds
xchg
pop
sub
shl
xor
je
inc
stos
data16
fidivrl
pop
lock
jmp
inc
lods
or
inc
xor
xlat
pop
jp
sub
lcall
cmp
mov
pop
xchg
int3
les
iret
cltd
clc
cwtl
jno
cmp
loop
scas
sahf
xor
pop
cltd
mov
mov
pop
mov
jmp
mov
push
lock
mov
jmp
adcb
fldl2t
fisttps
add
lret
add
test
push
push
sub
call
lods
ss
jp
pop
bound
nop
mov
jo
xchg
decl
fiaddl
cmp
pushf
cld
fstps
jle
jle
iret
and
mov
addr16
cmp
jecxz
or
inc
ret
aas
pop
lea
lods
out
data16
scas
arpl
fwait
daa
mov
scas
sub
clc
pop
loop
add
clc
ret
mov
fisttps
cmc
add
sbb
mov
movsb
enter
rcr
lret
push
sarl
pusha
shll
sarb
and
jge
adc
pop
lods
or
divl
in
call
and
out
aam
sti
dec
mov
repnz
jecxz
aam
cmp
imul
or
jo
push
mov
jo
mov
out
jbe
xor
push
sub
cld
shll
sbb
lret
push
stos
adcb
cwtl
movl
mov
lea
movzbw
lea
pushf
jmp
sti
or
dec
mov
scas
int
in
lds
in
or
imul
mov
lea
loop
mov
iret
xchg
mov
cld
aam
add
mul
cmp
leave
loopne
sbb
cmp
cld
xlat
mov
ja
lock
stos
adcb
xor
mov
xchg
repz
xchg
popa
jmp
lret
lods
movsb
mov
imul
enter
jo
mov
add
mov
jmp
js
xchg
cmc
mov
popf
icebp
hlt
cwtl
cmp
aas
push
add
iret
cmp
aaa
fnstenv
push
cmp
sub
jae
xlat
add
cmp
mov
mov
xorl
loop
addr16
xchg
int3
daa
imul
imul
mov
cld
je
adc
out
mov
dec
ret
dec
in
xchg
scas
push
lock
std
std
mov
int3
ret
jo
fnstsw
leave
int3
aas
pop
sub
add
adc
pop
inc
ss
cmp
mov
in
sbb
out
and
aam
push
movl
fcomps
fstpl
add
push
inc
es
in
xchg
push
mov
adc
orb
dec
repnz
jmp
adc
icebp
decl
inc
and
sbbl
pop
pop
lea
not
pushf
lea
lea
jns
bswap
lahf
movzbw
pop
push
movb
pushf
push
lea
ja
pusha
lea
jb
cmp
cmc
call
fldt
insb
pusha
dec
out
fistpll
pop
lock
pop
mov
fcomi
fistl
data16
push
cs
xor
aaa
jg
call
or
fs
les
stos
sbbb
and
adc
out
mov
xor
fidivl
sbb
sarb
jb
das
fisttpll
scas
test
ret
sub
jp
push
cmp
idivb
stos
sbbb
andl
and
fs
jae
cmp
cmp
jne
pusha
pushl
pusha
lea
jae
stc
cmp
jmp
cmc
stc
jmp
cmp
sub
pushf
push
pusha
inc
push
lea
call
jmp
call
call
jne
seta
pushfw
rol
or
or
mov
cmp
clc
stc
bt
xor
pushf
cmc
test
pusha
neg
call
xor
loope
movsl
sub
push
lcall
cwtl
sarb
lahf
mov
jmp
faddl
xor
lods
aas
mov
sub
adc
hlt
cwtl
cmp
inc
fidivrl
cmpsb
popa
sub
or
stos
mov
sti
pop
in
js
outsl
mov
test
test
xor
xor
push
push
pop
mov
push
xchg
fiaddl
jae
sub
add
jecxz
out
pushl
xor
hlt
jg
loop
cmp
add
pop
insb
mov
insl
cmpsb
lock
lock
cmp
pushf
xlat
sbb
stos
sbbb
xor
mov
dec
out
or
pop
push
mov
popf
daa
mov
add
mov
mov
ds
out
jmp
add
ljmp
cmp
push
lahf
jne,pt
push
jle
fdivp
movsb
iret
jne
add
bound
mov
adc
sub
mov
sbbb
sub
mov
pusha
pushl
ret
movl
movb
pusha
pushf
lea
jmp
xorl
gs
push
fists
notl
mov
push
mov
pop
pop
cmp
insl
imul
jmp
in
int
lock
sub
inc
int
lods
aam
cli
shll
dec
aam
inc
push
ja
fs
leave
test
ficoms
inc
aam
clc
xor
add
iret
inc
cmp
and
sub
cmpsl
xor
lahf
lods
cmpsb
inc
or
lret
popa
push
sbb
ficoml
ss
fnsave
cmp
mov
gs
das
les
mov
outsb
inc
push
xchg
jge
lcall
fidivrl
inc
and
mov
xchg
out
lea
jmp
shll
sub
and
mov
dec
outsl
cmpsl
inc
dec
mov
in
xor
xchg
test
xor
jmp
xorb
or
mov
mov
dec
cmp
int
add
sbbl
push
pop
shll
pop
repnz
fnop
call
add
jge
push
dec
int3
inc
inc
jp
aad
pop
jl
fcmovb
hlt
or
das
ret
out
fs
add
xchg
lret
test
xor
ds
push
inc
dec
xor
xchg
sbb
stos
sbbb
out
mov
or
movl
lea
je
cmc
or
ja
push
pusha
mov
lea
je
stc
sbb
aad
sub
shrd
jmp
cwtl
push
mov
cwtl
lahf
lea
pushl
jmp
lea
js
jb
cmp
pushf
cmp
mov
pushl
call
lea
jb
stc
cmc
push
clc
cmp
pusha
movb
lea
jae
shr
btr
or
sub
mov
sub
mov
pusha
mov
btr
mov
mov
xor
test
bt
test
bt
repnz
jmp
test
pushf
or
push
call
jp
stos
lods
and
dec
test
sar
mov
sarl
xor
push
js
ret
mov
add
jecxz
push
pop
push
xor
mov
adcb
imul
mov
inc
test
mov
xor
sbb
jno
jbe
sbbb
test
rcrl
out
add
xor
pushf
pushf
pusha
lea
jmp
clc
mov
stc
xor
pusha
inc
jmp
inc
mov
jns
aaa
mov
push
rcrl
mov
stc
adc
and
and
clc
dec
sub
jmp
testb
jb
adc
inc
mov
push
push
fcoms
add
fldlg2
adc
pushf
lock
jae
std
push
ss
repz
xlat
dec
sbb
xor
sbb
test
lea
push
jge
cld
mov
xchg
neg
adc
push
cwtl
je
xor
push
pop
push
pushl
stos
sbbb
fidivrl
push
jmp
call
or
or
mov
fistpl
pushf
sti
xor
pushf
jmp
sub
jno
arpl
cmp
cld
pop
sbb
xor
pop
pop
mov
flds
sub
loope
cld
sbb
sub
jae
out
test
mov
add
pop
fwait
mov
mov
and
mov
dec
out
arpl
sbb
inc
enter
ret
mov
jge
sbb
mov
adc
adc
mov
jno
jo
push
and
mov
add
mov
js
icebp
sbb
imul
cmp
and
stos
bound
ret
in
fs
orl
pusha
jb
idiv
and
mov
xor
cmp
xchg
fbstp
push
stos
sbbb
cld
add
cmc
cmp
call
cmp
add
sbb
push
cmp
cli
rclb
mov
lds
and
xor
iret
or
add
mov
dec
bound
jl
repnz
sbb
sub
mov
lea
sbb
xchg
pop
lahf
mov
mov
je
adc
dec
inc
inc
or
push
cs
mov
enter
inc
insl
cmpsb
or
negl
movsl
call
xorl
hlt
repz
outsl
imul
daa
sub
lret
stos
sbbb
or
add
add
add
inc
fsts
add
pop
add
push
jb
push
pusha
pusha
push
lea
jmp
sub
into
pop
aas
imul
mov
xor
pushf
mov
mov
sahf
out
or
pop
xlat
adcl
xchg
dec
aaa
xor
scas
xchg
inc
lea
sub
dec
data16
sub
sbb
cmp
push
gs
pushf
cmp
sbb
xchg
aam
hlt
jl
pop
aaa
pop
or
sub
pop
cld
xchg
pop
les
outsb
push
and
iret
cmpsl
repnz
mov
inc
mov
dec
dec
pop
leave
mov
or
dec
mov
sub
loopne
stc
sub
neg
bsr
cmc
mov
clc
stc
clc
sub
cmp
pushl
cmc
call
mov
pushf
lods
jmp
jmp
mov
push
pushf
lea
jmp
stc
neg
pushf
call
call
movsbl
ror
mov
and
cmp
rcr
cmp
mov
pushf
call
not
add
rol
mov
pusha
test
pushf
call
add
add
or
movsbw
mov
bt
mov
jmp
lahf
mov
mov
int3
and
mov
cmp
add
mov
mov
mov
cld
or
lock
add
outsb
pop
xchg
and
lea
jae
cmc
pushf
movb
push
cmp
mov
pusha
pushf
pushl
lea
ja
pusha
setl
call
movsbl
mov
pushf
lea
call
jmp
ja
cmpsl
out
in
jecxz
adc
pop
sbb
mov
loopne
stc
sbb
sti
xchg
aaa
outsl
push
lds
xor
push
mov
pop
jge
shlb
xor
fisubrs
arpl
gs
xchg
stos
sub
jns
cltd
mov
lahf
sbb
clc
add
sti
ja
push
inc
mov
cmp
xor
stc
leave
pop
hlt
pushf
ljmp
jo
aaa
pushf
mov
push
fldt
xchg
push
pushf
movl
pushl
mov
jmp
push
pusha
movl
push
pusha
call
lea
jb
bt
call
lea
mov
push
movb
pushf
mov
lea
pop
push
pushl
ret
pop
mov
pusha
mov
lea
jmp
mov
lea
jne
neg
call
arpl
test
mov
dec
in
inc
add
pop
lock
daa
dec
ja
sbb
lcall
test
inc
and
lods
loope
dec
cmp
hlt
mov
dec
cmpsb
test
jl
lret
add
xchg
lret
orb
cmp
lret
xchg
xchg
repnz
sarb
push
xor
mov
xor
add
add
leave
adc
pushl
lea
jmp
pusha
xchg
pop
pop
xchg
fldl
es
imul
xchg
xor
sbb
std
adc
sub
push
pop
xchg
aaa
call
test
and
into
mov
lods
push
mov
jb
push
cs
mov
sbb
xchg
mov
lods
jb
push
cmp
mov
cli
push
stos
bound
in
rolb
movsl
int
dec
cmp
mov
ja
ret
pop
adc
adc
stos
aad
cmpsl
movsl
jmp
jecxz
cmp
xchg
pop
pop
xor
pop
test
push
ja
adc
jns
push
sahf
and
and
ret
xor
ds
andl
cld
pop
mov
mov
mov
mov
stos
test
or
in
sbbb
dec
movsl
mov
and
mov
pop
jg
sbb
call
ret
loop
xor
pop
mov
cwtl
push
imul
in
call
cmp
mov
imul
sbb
popf
outsl
movsb
repnz
ret
xor
das
pop
jo
lahf
ret
fstpt
pop
orb
mov
imulb
dec
dec
rorb
inc
cli
jbe
lcall
add
and
sbb
sbb
jnp
sti
pop
stos
andb
pop
addr16
pushl
popl
pushf
pushl
ret
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
outsb
cltd
ds
mov
out
stos
jne
test
xchg
cmpsl
loopne
outsl
dec
andb
or
stos
mov
lret
pop
ljmp
push
imul
sar
stos
andb
add
pop
jmp
lea
jne
push
test
sub
aaa
dec
test
mov
shr
jmp
pop
push
mov
pop
not
call
pushl
popl
pushf
mov
pushl
ret
mov
jmp
and
xchg
push
aad
stos
orb
rol
imul
cs
ljmp
jo
mov
and
fistpll
pxor
fldcw
dec
pop
outsl
add
fs
addb
in
xchg
sub
nop
push
xlat
stos
vunpcklps
push
sbb
xchg
jl,pt
or
xchg
notb
or
adc
jno
cmpsl
mov
movsb
das
aaa
adc
sub
add
je
stc
outsb
test
xor
hlt
pop
je
xchg
cwtl
sarl
cmp
mov
out
mov
je
pop
fdivr
mov
sbb
out
jge
sbb
xchg
lcall
add
push
mov
xchg
repz
inc
dec
and
stos
andb
inc
add
push
popa
xlat
popf
js
movsl
bound
lds
and
in
in
bound
insl
shl
jp
sub
jle
out
push
outsb
push
add
and
ljmp
dec
pop
in
mov
push
paddusw
xor
mov
les
jmp
and
lock
jge
ret
fs
xor
push
repz
adc
cmp
fsubrl
ds
lea
push
movl
pusha
pushl
call
clc
cmpb
movb
lea
jne
movsbw
shld
rcl
mov
push
test
lea
jno
add
stc
cmp
stc
cmc
movzwl
sub
sar
or
mov
push
bt
pusha
movb
add
cmp
pusha
jmp
movsb
ds
cmp
hlt
xchg
xor
xchg
mov
fdivrp
xchg
mov
cmpsl
lods
cli
shl
adcb
sub
out
and
ljmp
lahf
pop
push
fcoms
push
fs
imul
insb
mov
push
mov
dec
sub
shrl
fldcw
das
pop
lcall
xchg
sti
xor
loope
and
or
or
imul
ret
stc
xchg
pop
insb
cmp
and
ja
in
add
fs
test
stc
pushf
clc
mov
repnz
call
sbb
and
shll
outsb
inc
inc
clc
sub
cmpsb
pushf
mov
adc
out
or
mov
dec
dec
cmp
mov
ficoms
lea
stos
mov
lcall
cmpsl
sbb
cmp
int
inc
xchg
jb
sbb
nop
mov
inc
dec
and
clc
jbe
mov
push
test
add
arpl
repnz
mov
pop
in
fcom
xlat
aaa
out
gs
std
aad
xor
mov
adc
gs
out
push
cmp
popa
jg
push
ss
test
lods
pop
stos
xchg
stos
cmpsl
stos
andb
in
xlat
pop
xchg
cwtl
dec
out
xchg
fdivs
push
negl
xchg
gs
sub
outsl
jecxz
popa
jle
out
lock
jle
mov
xchg
aas
in
jae
hlt
icebp
leave
pop
jo
xchg
je
leave
fadd
or
das
cmpsl
stos
out
xchg
out
jb,pt
gs
test
xor
jnp
jb
test
xlat
jl
sbb
sub
cmp
call
push
and
roll
imul
out
mov
inc
xchg
scas
aad
pop
xchg
sub
xlat
xchg
sbb
push
fdivrl
fadds
dec
dec
and
out
cmpsb
mov
mov
out
bound
cld
add
or
pushf
call
cmp
pusha
lea
ja
lea
pusha
pop
mov
setge
mov
movzbl
lea
xchg
movzbl
mov
movsbw
pushf
lea
mov
mov
jmp
mov
adc
pop
xchg
sti
mov
jl
pop
mov
pop
sbb
or
lods
fs
ljmp
mov
xchg
sti
lods
lret
jnp
mov
pop
insb
cmp
inc
and
gs
mov
stos
subb
stos
xchg
pushf
lea
jae
bsf
mov
neg
mov
bt
cmc
bt
mov
cmp
xor
pusha
stc
stc
repnz
push
jmp
pusha
cmpb
pusha
pushf
lea
jmp
lea
ja
pusha
jmp
lea
jb
bt
pushf
pushf
jmp
sub
pushf
rep
movzbw
mov
pushf
pushf
movb
lea
jmp
lea
je
pusha
add
jmp
jl
in
sub
pop
pusha
inc
invd
shr
inc
mov
or
mov
clc
nop
cmp
lcall
inc
and
xor
add
cmpsb
xchg
xor
cld
pop
push
xor
jecxz
jecxz
mov
inc
leave
xchg
mov
frstor
xchg
cmp
icebp
mov
or
adc
sti
mov
outsb
test
pop
lahf
out
push
outsl
enter
loopne
mov
popa
aaa
dec
sub
xchg
sub
dec
jb
call
jmp
lea
jb
clc
clc
cmc
pusha
cmp
push
call
bt
bt
stc
call
jmp
call
repnz
movw
movb
pushl
pushf
lea
jne
call
fs
add
push
cwtl
aas
pop
push
sbb
ja
aaa
jo
mov
jo
into
mov
in
adc
outsl
sbbl
shrl
imul
in
jecxz
jno
lahf
aas
hlt
test
mov
jae
sbb
adc
push
push
cmc
mov
and
mov
fimull
mov
pop
jns
mov
add
bound
inc
dec
roll
leave
mov
int
stc
push
adc
out
int3
orl
test
cli
pop
andl
xchg
mov
mov
xchg
stos
daa
sub
push
or
push
adc
adc
adc
bound
enter
cbtw
out
lret
sub
iret
mov
jecxz
inc
or
mov
subb
bt
push
scas
xchg
jge
mov
aad
in
inc
push
bound
movl
mov
xor
jl
dec
pusha
sbb
inc
pop
jne
leave
jne
popf
inc
leave
lds
or
pop
aas
add
stos
jne
negb
jno
mov
dec
inc
adc
sbb
pop
sbb
jnp
add
mov
ret
sub
add
call
pushf
mov
pushl
mov
push
pushl
ret
lea
jne
jmp
clc
or
pusha
lea
jne
shrd
mov
jmp
jmp
lea
call
pusha
adc
pusha
call
scas
pop
adc
imul
dec
loope
outsb
and
mov
orl
push
pop
enter
jae
pop
lret
mov
or
sbb
xor
cmp
repnz
pop
popa
inc
sub
out
push
sub
cmpsb
dec
stos
subb
call
dec
dec
popa
imul
cmp
sti
pushf
mov
mov
rcrl
test
jnp
or
push
test
xorb
outsb
cmp
push
aaa
pop
jl
mov
xchg
scas
sub
data16
loopne
mulb
sub
std
insl
popf
and
mov
or
fwait
inc
mov
or
add
xor
in
cltd
jg
fwait
adc
fcmovnbe
jl
mov
stos
subb
and
inc
and
fiaddl
and
fs
jmp
movl
call
pushf
push
lea
ja
inc
pushf
movl
stc
not
mov
pusha
call
call
stc
mov
stc
jmp
out
add
inc
add
inc
loopne
and
sub
lcall
in
fwait
mov
ret
pop
mov
sbb
xchg
ficompl
addr16
lcall
cs
and
mov
cmp
dec
orl
mov
push
mov
or
dec
inc
ljmp
mov
icebp
test
sub
pusha
or
call
cmp
movsbw
call
call
mov
and
scas
or
pop
shll
xchg
cmp
push
pop
xor
push
cld
mov
iret
mov
lcall
or
push
cmpsl
stos
or
fwait
add
std
fmuls
ja
out
inc
mov
sub
loope
es
pop
xlat
pop
push
ficompl
mov
mov
jl
fwait
xchg
mov
enter
out
sub
out
movsl
leave
test
cld
stos
and
stos
pusha
jno
add
push
mov
mov
xor
subb
push
push
lahf
inc
add
sub
stc
pushl
stc
cmc
pushf
clc
cmp
pushf
call
pushf
jmp
movl
movw
push
pushf
pushf
lea
jmp
cmp
inc
dec
test
les
xchg
pop
and
and
mov
or
inc
inc
outsl
out
iret
js
push
jge
mov
xchg
cli
mov
xchg
pop
stos
subb
cmpl
ret
fs
jmp
cmc
ror
cmp
bt
push
pushf
xor
stc
cmc
jmp
call
cmc
cmp
jns
pushf
xor
lea
jmp
push
push
lea
jne
test
xchg
movsbw
mov
jmp
lea
jne
sbb
xchg
movzbw
and
mov
pushf
dec
sub
btc
push
stc
lea
call
jmp
and
lahf
aaa
pop
pop
pop
mov
lock
adc
xor
cwtl
test
ret
sub
jl
inc
and
orb
and
stos
or
into
jmp
mov
xor
xchg
xchg
jnp
mov
insb
cwtl
adc
mov
jp
sbbl
adc
imul
lret
jle
jmp
mov
pop
xor
xor
jae
push
js
xorb
mov
repnz
pop
sub
or
dec
mov
dec
lock
stos
xchg
sub
xchg
popa
mov
pusha
pop
push
movsb
fnstsw
outsl
inc
and
aaa
mov
inc
call
outsb
cmpsb
or
loope
rorl
cmpsb
lea
or
bt
clc
sub
call
adc
push
lret
lods
vcvtsi2ssl
outsb
and
xor
inc
es
aam
push
push
add
push
push
pop
aad
shrb
inc
xchg
or
aas
mov
fdivs
xor
out
push
pop
pop
adc
cld
je
arpl
xor
push
xchg
cltd
out
nop
sbb
out
out
mov
xchg
fcom
rorb
mov
movsb
insb
arpl
sub
mov
test
das
arpl
inc
cmp
clc
btc
bsr
push
movzbw
push
movzbw
daa
btr
daa
push
aas
movzbw
lea
push
xor
and
aaa
mov
clc
test
call
rcl
mov
stc
stc
add
bt
call
inc
fdivrs
mov
ljmp
imul
or
and
and
test
xor
mov
in
movsl
imul
ret
nop
icebp
fcoms
fwait
pop
imul
mov
pushf
bound
or
xchg
xchg
ret
xor
pop
mov
or
mov
jo
pop
mov
int
scas
xchg
adc
je
in
sbb
orb
inc
jmp
test
sub
xor
push
movl
movw
call
pushf
test
pushf
lea
je
clc
jmp
push
mov
pop
inc
mov
std
jbe
popa
test
enter
jne
mov
sbb
popf
pop
repnz
jne
test
out
xchg
nop
stos
mov
sbb
lret
push
das
and
addr16
adc
sbb
imul
rorb
push
or
sub
inc
outsl
push
int
mov
hlt
adc
xchg
in
xor
sub
jge
cmp
push
sub
mov
xlat
repnz
aaa
push
adc
xlat
push
rorl
push
dec
loope
or
xor
das
arpl
into
das
aas
cs
das
arpl
fidivrs
sahf
in
arpl
out
fidivrs
arpl
arpl
arpl
into
arpl
outsl
ds
aas
arpl
fisubs
das
arpl
in
fisubrs
out
arpl
mov
sahf
in
arpl
mov
pop
ret
incl
add
je
outsl
fs
gs
imul
add
add
sub
or
cmp
lea
add
sub
add
cmpsl
insb
sbb
outsl
mov
fs
cmp
add
outsl
jo
sbb
and
adc
lea
outsl
or
int
sbb
pop
nop
lods
cmpsb
mov
imul
mov
xor
mov
sub
imul
mov
push
je
outsl
xchg
imul
sub
mov
fnsave
sar
nop
cmp
enter
imul
cltd
mov
jmp
dec
lea
jecxz
stos
fldenv
inc
scas
test
shlb
addr16
or
pop
xlat
in
stos
sbb
pop
fs
xor
pop
inc
sbb
cltd
adc
mov
sbb
sub
pop
hlt
das
cltd
push
sbb
mov
pop
xor
negl
leave
xor
out
dec
mov
push
xchg
mov
jno
stos
mov
lcall
jne
mov
dec
xor
cmpsl
std
into
sub
rol
adc
clc
ss
out
jno
rcrb
push
xor
push
rcpps
popf
dec
loopne
sub
fimuls
mov
jg
iret
andb
pop
add
pop
imul
adc
js
cmp
jle
ss
mov
outsb
fisubrs
rcrb
pop
arpl
addr16
scas
pop
inc
outsl
lahf
mov
test
into
enter
scas
pop
xor
pop
inc
pop
mov
sub
mov
aam
lods
aam
sbb
aam
repnz
push
xor
call
fstpt
dec
into
sub
iret
cli
outsl
mov
in
aas
xor
cmp
ficompl
fcmovbe
mov
aam
ljmp
and
rolb
add
mov
in
subl
mov
cmp
jbe
daa
or
lea
loop
sbb
fmuls
sbbb
dec
pusha
movsl
pop
daa
push
je
leave
sub
sub
inc
pop
or
jle
mov
xchg
int
stos
add
xor
es
popa
sub
das
cld
jg
and
push
rcl
adc
hlt
std
xor
imul
sbb
stos
and
inc
cmp
jecxz
enter
fwait
dec
cmpsl
rol
iret
arpl
addr16
sub
sbb
add
and
inc
lret
outsl
sbb
jb
inc
mov
pop
int3
xchg
mov
fwait
xlat
rclb
adc
adc
push
or
adc
aaa
jge
hlt
into
dec
shrb
hlt
dec
in
xor
nop
sarb
rolb
sahf
inc
adc
dec
and
adc
fcompl
xchg
test
dec
pop
insl
inc
sub
repnz
cmp
cs
dec
adc
aam
xor
fidivrl
sub
test
xchg
out
xor
inc
adc
sub
xor
repnz
in
xor
call
xchg
mov
lock
sub
sub
ret
addr16
xor
test
add
outsb
nop
lahf
das
mov
into
test
pop
pop
mov
imul
nop
test
add
aas
nop
out
pop
mov
scas
shlb
test
roll
pop
decl
ljmp
xor
mov
scas
daa
and
and
out
push
out
sub
sub
pusha
and
add
or
inc
jno
pop
ja
or
pop
mov
xor
sbb
push
sbb
fistps
adc
outsl
out
sbb
scas
int
iret
std
outsl
int
add
rolb
push
cmpb
outsb
xor
lock
pushf
mov
mov
lock
aam
aas
scas
xchg
ljmp
notb
cmp
inc
negb
cmpl
incb
mov
pop
loopne
out
xor
jg
lea
mov
sar
jp
cld
ret
or
out
pusha
insl
pop
les
pop
outsl
rcrb
cld
ror
aam
add
xchg
push
imul
mov
dec
das
ficomps
std
imul
inc
das
mov
xchg
and
test
and
cmp
jo
and
xor
dec
repnz
mov
mov
inc
rcl
xor
mov
outsl
clc
pop
mov
outsb
xor
call
clc
or
sbb
push
xchg
pop
xor
mov
sub
ja
adc
lock
fists
aam
xor
jnp
mov
outsl
out
popf
mov
push
out
jns
cmpsb
adc
pop
sarb
push
orb
ds
xor
fstl
std
xchg
push
shlb
ds
aam
sub
call
mov
pop
cmp
sarl
cmpsl
out
hlt
lahf
pop
xor
das
mov
pop
test
and
xor
nop
ljmp
out
shr
rclb
test
pop
outsb
int
mov
pop
das
popf
outsl
adc
jle
mov
loop,pn
fdivr
push
sahf
aam
nop
lea
jo
sarb
mov
xor
cmp
lcall
mov
xor
nop
lods
pop
rcrb
and
out
test
rorb
cmpb
addb
lahf
or
and
and
pop
adc
mov
push
lea
sbb
sub
cmp
pop
dec
dec
xor
push
aas
pop
push
pushl
inc
push
pusha
mov
mov
lock
ficoms
ja
push
push
pusha
xchg
hlt
out
pop
ds
and
push
mov
mov
mov
cs
adc
pushf
mov
ror
loopne
outsb
pushf
mov
mov
jle
cmp
stos
outsb
push
shrl
and
dec
daa
test
insl
loopne
mov
popf
ficoms
mul
adc
sub
cmpsb
loopne
cmpsb
cmpsl
scas
push
int
xlat
and
in
fimuls
mov
jae
ret
loopne
mov
aam
nop
ss
loopne
mov
jb
lock
xor
sub
jmp
movsb
push
rcl
jno
jge
or
loopne
sbb
iret
or
cmpb
sub
push
pop
mov
sub
mov
jae
lock
cs
lods
sbb
int
in
fistpl
lock
sbb
sbb
nop
les
jae
int3
pushf
lahf
ror
pushf
adc
std
sub
out
xor
aam
das
daa
xchg
xlat
call
and
mov
sub
loopne
mov
adc
inc
aad
and
pop
pusha
out
cmpsb
loopne
mov
loopne
pushf
dec
dec
enter
daa
imul
aam
test
pop
sbb
xor
das
stos
sarb
leave
pop
cltd
insb
cs
adc
sti
cmp
hlt
pop
aam
push
xorb
loopne
and
dec
and
mov
adc
stos
sbb
mov
mov
push
fbld
in
adc
mov
add
je
cmp
xchg
or
push
lock
jg
mov
aam
or
mov
daa
jns
fisubs
mov
mov
xlat
pop
sbb
pusha
sub
pop
push
inc
adc
decl
mov
ss
jo
sub
jo
into
ds
sbb
mov
aas
xchg
and
int
jg
icebp
rorb
imul
add
jne
hlt
scas
pop
push
cmp
xchg
jnp
lods
mov
iret
cmpb
into
popf
xchg
std
fwait
aaa
jg
lahf
or
sarb
and
and
and
cs
loopne
repz
enter
dec
xchg
push
adc
and
pop
pop
repz
push
into
rcl
andb
and
out
xchg
inc
jg
xchg
and
rorb
sahf
rcrb
dec
cs
fndisi(8087
bound
ja,pn
into
inc
or
pop
nop
ja
test
jne
adcl
imul
in
sbb
lea
mov
jge
mov
xor
in
push
fistpll
sub
xchg
clflush
loopne
sahf
mov
and
shrb
mov
adc
jecxz
and
arpl
jle,pn
xor
sub
sbb
bound
inc
push
inc
xchg
and
pusha
in
sub
pop
mov
imul
aaa
dec
cmp
push
ret
adc
adc
push
fsubs
fcmovnu
jecxz
out
jmp
out
fdiv
fdiv
cmp
dec
dec
dec
fwait
dec
lahf
xchg
dec
sbb
push
push
lock
lock
clc
dec
lea
push
lea
pop
into
clc
lea
and
push
xchg
outsl
jb
jbe
shrb
outsl
pop
dec
pop
lahf
pop
add
dec
pop
xor
and
outsl
xor
cmc
into
sahf
mov
les
push
aaa
out
fildl
or
mov
xor
out
cmp
dec
xchg
pop
cld
cmp
pop
cmp
or
scas
or
cs
repz
out
or
popf
into
bound
xchg
cmp
inc
lahf
jmp
pop
dec
push
pop
mov
push
iret
shrb
sub
sub
xchg
arpl
xor
nop
mov
sub
xchg
inc
push
sbb
pushf
pop
pop
aas
outsl
mov
rcrb
stc
xchg
sbb
dec
stos
fwait
push
in
xor
pushf
nop
dec
aam
xchg
out
lock
cmovnp
dec
fwait
sub
dec
push
xchg
xchg
cmpsb
fbld
ljmp
lahf
push
fimuls
dec
test
js
pop
cmp
dec
xchg
in
pop
mov
xchg
push
xlat
cmpsl
xor
fstpt
adc
ffreep
daa
dec
pushf
pop
pop
jle
mov
dec
cs
cli
jmp
sbb
lahf
popf
push
scas
cs
push
push
inc
rcrl
dec
cmpb
xor
cltd
leave
and
call
test
insl
adc
sbb
cs
or
daa
arpl
jo
lcall
mov
mov
inc
out
sbb
jmp
mov
lahf
outsb
loop
ja
fdivs
xchg
sub
and
lock
subl
andb
push
pop
mov
mov
subps
inc
mov
in
cld
xchg
add
inc
shlb
dec
pop
daa
cmpsl
cmpsl
adc
xor
stos
mov
mov
pop
lock
pop
fisttps
dec
and
pop
adc
addr16
pop
aas
pop
mov
mov
add
mov
nop
sub
rclb
pop
jbe
out
add
lret
inc
pop
repnz
mov
movsb
movsb
mov
jge
loopne
into
cmpsl
xchg
arpl
xchg
inc
cmp
push
lcall
add
in
in
ljmp
nop
outsl
push
cmpsl
sbb
in
jns
insl
test
or
cli
inc
add
loop
mov
add
mov
insb
sti
gs
adc
loop
stos
push
icebp
loope
addl
add
jg
sbb
jp
test
and
sbb
inc
cmovo
ja
push
lods
pop
stos
insl
jne
sbbb
cmpb
dec
sbb
mov
lahf
xchg
dec
decl
mov
outsl
fnstsw
cwtl
lret
aas
xchg
or
cmp
movsl
rolb
scas
movsl
ficoms
pusha
xor
gs
mov
pop
out
add
out
in
mov
stos
push
or
mov
jmp
push
lret
outsb
jb
or
xor
outsl
xchg
aaa
insb
xor
faddl
ja
adcb
cmc
movl
pop
push
aaa
and
aaa
lock
sub
pop
je
inc
pop
and
push
push
pop
ja
push
into
jnp
mov
pushf
stos
dec
cmpsb
xor
push
sub
les
xchg
pop
iret
fisubs
ss
loopne
pop
mov
call
dec
ficoms
sub
imul
into
xchg
mov
xchg
sbb
sbb
sbb
mov
lock
and
and
int
bound
lds
push
sahf
pusha
lds
shlb
jg
nopl
aas
xor
call
call
scas
mov
lods
outsb
cmp
addb
das
jle
xor
hlt
sbb
repnz
pop
aas
loopne
xchg
xchg
mov
jae
popa
roll
mov
clc
shl
pop
clc
ds
push
dec
iret
push
mov
loopne
inc
mov
arpl
nop
pop
call
repnz
clc
lods
aas
aaa
out
aas
push
shr
decb
cmp
daa
pop
xor
push
lret
ljmp
scas
insl
pop
ja
mov
jmp
add
and
xor
mov
jnp
mov
cmp
dec
ss
pop
loop
rorb
cmp
les
out
pop
pop
fs
mov
inc
cmp
rcl
dec
fisttps
xchg
fdivrs
shl
cmp
xchg
imul
out
ss
outsb
movb
lea
fdivr
repz
int
aas
cs
es
sub
xchg
push
cmpsl
dec
mov
mov
imul
stos
mov
shlb
data16
subb
int3
pop
xchg
rclb
fsubr
add
dec
lods
lock
fcom
imulb
dec
lahf
sbb
out
rol
rclb
fcmovu
xchg
pop
jb
sbb
idivb
jnp
into
sub
fs
ret
cltd
push
push
stc
inc
xor
sahf
ret
xchg
outsl
into
mov
mov
loopne
repnz
jb,pn
push
movl
mov
lret
jle
scas
or
in
lret
mov
inc
int3
xchg
fists
gs
call
cmovge
loop
mov
enter
adc
or
aas
bound
out
push
sahf
sub
enter
into
movsb
cmc
out
dec
or
mov
out
fists
push
test
adc
rcrb
sti
lods
repz
inc
outsb
imul
dec
xor
xchg
insl
cmp
cwtl
fdiv
sub
adc
jbe
jo
xchg
jg
xor
dec
cmp
or
ja,pn
jb
mov
ds
adc
mov
shlb
or
lret
mov
push
mov
dec
fistpl
pop
mov
sahf
sub
mov
and
addr16
xor
ds
sbb
int
xlat
sahf
push
mov
xchg
inc
xchg
cmc
andb
fldt
scas
js
cwtl
cmpsb
pop
inc
mov
pop
fcmovne
xchg
not
enter
out
xchg
repnz
jbe
lds
dec
sub
push
sub
mov
sub
pop
mov
ret
popf
xor
loopne
cltd
mov
jg
adc
xor
test
dec
jl
pop
jne
test
mov
mov
mov
out
dec
adc
enter
push
data16
in
cs
call
aaa
fistpl
lods
mov
cmpsb
out
rorl
push
push
arpl
ss
pushf
sbb
and
inc
pop
fisttpl
loope
aas
and
mov
and
jge
call
xor
pusha
mov
mov
into
mov
xchg
shlb
popa
out
mov
das
pop
pusha
ja
pop
pop
pop
push
inc
clc
aas
push
in
inc
mov
lock
and
add
jnp
jbe
xchg
repnz
mov
scas
shlb
rorb
pop
and
xor
sahf
push
push
nop
push
js
mov
mov
shrb
jbe
out
lods
cmc
push
dec
lahf
dec
sahf
sub
sbb
mov
mov
cmp
jne
das
outsl
xchg
dec
popa
shrl
fmuls
push
xchg
out
adc
mov
sub
adc
lahf
cmpsb
pop
cs
fwait
lea
dec
xor
jge
and
fmull
xchg
aad
xor
arpl
pusha
xor
push
rcr
lock
fdivrl
dec
xlat
inc
into
loop
sub
jle
mov
and
dec
xor
and
movsb
inc
call
jnp
addr16
mov
mov
repz
add
sub
inc
mov
add
test
rdpmc
int
out
xlat
fisubl
mov
cmpsb
adc
or
sahf
hlt
out
inc
pop
icebp
jecxz
pushf
ss
push
ret
je
xor
mov
mov
dec
sbb
divb
and
push
jl
adc
addr16
add
mov
or
inc
jg
aas
push
inc
and
rcr
sbb
lock
sub
adc
and
mov
test
adc
cmp
dec
xor
das
lds
xor
pop
lds
aas
out
loopne
cmp
aas
push
sahf
jno
push
jbe
add
aaa
adc
ds
sub
sub
adc
push
fidivrs
ja
pop
movsb
mov
sub
dec
adc
push
fidivl
ss
shl
adc
and
rcll
jae
movsb
mov
cmp
into
mov
into
test
pop
into
iret
and
mov
xlat
movsl
fmuls
jne
fistpll
ret
in
cwtl
jno
push
inc
outsb
sahf
push
lea
dec
out
xor
dec
shlb
lahf
aaa
mov
push
repz
jo
insb
fstpt
xlat
decl
out
adc
les
xor
adc
pop
inc
aaa
movsb
filds
std
mov
bound
out
sub
loopne
ja
stos
pop
daa
ss
jbe,pn
mov
mov
mov
je
fildl
shll
jnp
and
loop
fsubl
adc
gs
pushf
xchg
out
movsl
jae
cld
push
push
xchg
and
outsb
mov
sbbb
scas
dec
pop
mov
ret
scas
and
jcxz
dec
ds
in
testl
push
dec
cs
dec
pop
adc
mov
push
das
xor
adc
imul
fstl
sub
lock
loopne
into
mov
adc
and
movsl
mov
add
dec
sbbl
scas
int
nop
pop
and
dec
push
rol
orb
push
xor
dec
cli
xchg
and
jae
out
sub
nop
shrl
stos
icebp
and
sti
std
icebp
outsl
iret
dec
test
xor
ja
es
popf
mov
divps
pop
and
cmp
loopne
cltd
daa
and
push
mov
andb
into
cltd
scas
cs
and
ds
lods
loop
sub
in
inc
cmp
mov
and
pop
mov
push
push
sbb
fisubrs
mov
in
xchg
cmp
adc
int
dec
outsl
into
jo
adc
or
pop
sbb
dec
cmp
idivl
outsb
xchg
fnstsw
dec
dec
mov
adc
sahf
mov
int
loopne
jae
sub
popf
cs
std
push
cmp
int
sub
lods
dec
aas
ret
mov
decb
cmp
push
jge
subb
or
stc
sahf
rcrb
in
xlat
jo
mov
add
int
mov
lea
cmp
int
fbstp
lock
scas
dec
push
call
sub
and
test
push
lahf
pop
daa
in
je
mov
mov
pop
jae
enter
or
and
decb
scas
rcrb
outsl
or
cs
mov
sub
incb
xchg
cs
sub
cwtl
test
xchg
pop
in
xchg
dec
inc
mov
pop
jecxz
cltd
xor
push
data16
inc
sbb
and
mov
mov
mov
fstp
std
xchg
xlat
xchg
or
mov
movsl
sub
adcb
test
and
in
cli
int
rol
scas
outsl
mov
aad
xchg
mov
sahf
ss
outsl
push
adc
scas
sub
cmpb
cmc
push
das
lcall
das
push
pop
push
mov
rcr
loop
in
lea
daa
lods
and
cmpsl
popf
repnz
shl
in
push
and
xorb
dec
pusha
pop
in
outsl
aaa
mov
std
arpl
xor
fimuls
push
outsl
insl
out
movsl
out
fisttpll
dec
and
decb
outsl
and
lds
dec
in
aad
push
test
scas
sbbb
xchg
dec
outsl
push
push
movsl
aam
jo
subl
enter
and
aam
sub
adc
or
lock
or
call
sub
hlt
outsl
sub
sub
hlt
lret
lea
fcom
cmp
push
add
pop
fadd
out
and
lret
sub
adc
inc
or
add
sub
loopne
repz
sbb
mov
xor
adc
ret
add
mov
test
pusha
aam
ljmp
mov
insb
xchg
fmul
rorb
and
adc
ljmp
sub
lcall
and
call
jbe
mov
and
adc
test
push
push
adc
fcomps
mov
shlb
add
and
or
push
lea
inc
insl
or
pop
or
sbb
and
cmp
or
add
aam
inc
dec
add
jae
sub
or
rcll
lcall
jp
sbb
daa
xor
enter
or
mov
enter
mov
and
and
jp
sub
cmp
and
in
addb
add
sub
xor
loopne
mov
in
cmp
outsl
inc
call
jae
andl
sbb
fisubl
faddl
or
js
push
dec
pusha
and
cs
int3
test
push
inc
and
xor
lods
aam
and
stos
scas
call
outsb
xor
or
xchg
push
lock
repz
pop
sub
fmuls
shlb
xor
jmp
mov
cmp
aaa
imul
call
mov
out
xor
sbb
ds
xchg
iret
enter
mov
or
push
and
in
push
lea
fidivrl
hlt
movsl
ret
cwtl
pop
mov
sbb
inc
push
outsl
sahf
sub
les
lock
sub
fdivl
fucomi
push
jns
adc
call
lret
int3
and
xor
sub
mov
cmp
fadds
push
and
hlt
sbb
outsl
jp
ds
fwait
imul
adc
push
xor
mov
ljmp
ja
push
fsubrs
push
aam
sub
jbe
addr16
aas
js
ljmp
mov
dec
loop
jo
push
xor
inc
hlt
push
fwait
ret
pop
ret
aas
ss
and
pop
jbe
or
mov
popa
jno
hlt
ficoml
cmp
inc
adc
mov
mov
loopne
add
adc
nop
mov
lods
ret
xchg
xor
mov
push
xor
leave
jb
mov
adc
testl
loopne
xchg
push
lcall
fdivrs
andl
inc
dec
inc
and
in
jb
inc
sbb
and
dec
andl
adc
sub
adc
lock
ret
add
mov
roll
ljmp
test
out
fistl
mov
adc
fsub
mov
je
fs
add
lret
and
hlt
cmp
popf
adc
lret
mov
sub
pop
fiaddl
xor
dec
ja
sbb
fmuls
mov
or
sub
cmp
lret
push
adc
vunpcklps
cmp
adc
mov
cmp
out
jmp
xor
out
iret
mov
stos
jae
adc
cli
and
xchg
call
cmp
jbe
inc
xlat
push
sub
dec
mov
inc
lods
daa
xor
mov
inc
cs
pop
hlt
lock
and
call
pushw
cmpsb
rcll
loopne
aam
jb
ds
es
or
xor
mov
imul
adc
sbbb
and
mov
scas
adc
sysenter
sar
jg
cmpsl
jbe
sbb
xor
test
lcall
or
test
hlt
adc
movb
mov
lds
ljmp
push
dec
shl
add
push
mov
xor
mov
mov
popa
test
enter
cmp
das
and
fmuls
cmp
cwtl
ss
or
xor
enter
hlt
insl
insl
cli
mov
popa
or
ficoms
mov
stos
jle
mov
xchg
jo
fwait
imul
enter
push
mov
loop
push
daa
loop
enter
mov
inc
pop
loopne
hlt
je
das
or
shlb
mov
loopne
aam
cwtl
add
loopne
nop
inc
fdivs
xor
rcrl
bound
xor
ret
fisubrl
push
cs
sbb
out
fdivl
ss
pop
and
arpl
inc
ret
fcomp
imul
lods
adc
xchg
lcall
hlt
cmp
jo
lcall
outsl
add
sub
sub
jnp
cmp
aaa
adc
sub
xchg
sbb
insb
rcrb
xchg
or
xchg
mov
add
fcomps
xor
xor
or
mov
xchg
xor
dec
cltd
mov
mov
and
sub
std
fcom
mov
inc
inc
xor
pushf
push
jo
mov
test
out
outsl
loopne
lcall
rclb
and
pop
xor
bound
arpl
xor
in
add
sub
in
loopne
int
imul
dec
repz
mov
push
lcall
xor
or
fcmovb
jnp
and
jnp
decl
aam
xor
dec
hlt
lret
and
sub
test
int
sarl
lret
fiaddl
inc
fcoml
xor
sbb
subb
sub
daa
push
lock
xor
fidivs
xchg
lcall
adc
add
xor
cmp
repz
mov
subb
in
mov
les
mov
js
add
aad
test
fisubl
or
and
shlb
sub
hlt
in
mov
adc
and
xchg
cmp
sub
mov
and
mov
movsl
xor
call
lret
dec
je
aad
adc
mov
sub
dec
arpl
mov
iret
push
sub
xor
adc
fadd
inc
cmp
mov
xor
fsubrs
fsts
jo
es
adc
jnp
xorb
or
jns
fs
mov
xchg
daa
mov
into
and
test
insl
aam
js,pn
or
ret
es
fimull
rorl
sar
insb
inc
cmp
imul
push
jecxz
sbb
cmp
lock
mov
mov
shl
dec
out
hlt
pop
sub
and
ja
fdivs
push
lods
dec
mov
movsb
sub
test
fisubs
hlt
rcl
cmpsb
push
push
lret
cli
ljmp
cmp
and
fsubs
iret
pop
push
adc
xor
jno
xor
dec
mov
fcomps
push
fadds
call
sub
xor
js
xchg
jmp
cmp
mov
enter
in
call
jae
mov
mov
push
das
sub
daa
push
mov
cmp
adc
ja
in
adc
add
hlt
aam
or
inc
lahf
in
loop
inc
and
aam
arpl
cmp
lods
or
pushf
add
lock
clc
dec
inc
mov
lods
roll
mov
adc
hlt
fidivl
and
mov
movsb
push
insl
and
sar
mulb
jb
iret
cltd
sub
fmull
cmp
cmp
xchg
sub
repz
negl
out
sbb
fsubl
inc
mov
mov
xor
scas
daa
push
std
mov
sub
fsub
sahf
insb
jp
lcall
pop
push
int
mov
jns
loop
test
sbb
mov
inc
in
movsb
jne
shrb
fimuls
push
stos
lret
inc
jb
mov
cmp
add
push
fisubs
and
xchg
les
xor
xor
jge
inc
jge
lock
pop
push
xchg
loopne
das
push
cs
repz
out
inc
je
sub
and
sbb
std
dec
push
pop
dec
push
push
inc
xchg
xchg
call
add
in
or
dec
into
ljmp
lret
insb
cmc
cmpsb
jmp
fadd
loopne
scas
sub
or
das
pop
sub
test
loop
les
dec
cli
iret
fdivs
pop
or
and
gs
scas
in
in
cli
push
rorb
adc
sbb
imul
cmpsb
adc
hlt
leave
adc
aam
xor
jmp
call
jbe
xor
aas
inc
xchg
adc
call
xor
fstl
fsub
ficomps
sbb
hlt
jnp
and
and
cmp
call
sub
adc
xor
or
cmp
pop
and
scas
test
outsl
xor
test
cmpsb
push
fs
aam
cmp
inc
ljmp
popf
xchg
jp
and
outsl
pop
jo
dec
cs
or
jnp
jns
mov
mov
push
sbb
insb
and
pop
faddl
pusha
out
movb
ja
lock
and
std
repz
sub
fbld
dec
ficoms
aaa
mov
sbb
cmp
ret
call
popf
ljmp
dec
pop
rolb
or
adc
adcl
xor
and
lods
out
ja
push
rcrb
ljmp
sti
fdivr
xchg
aad
mov
adc
add
push
and
push
xchg
mov
into
mov
inc
sbb
mov
push
xchg
imul
or
shlb
out
adc
jo
mov
hlt
xchg
fdivl
inc
dec
or
cmpsb
test
sub
ljmp
mov
mov
mov
adc
sub
nop
inc
fstl
or
jle
ds
xor
lods
jb
xor
fcompl
dec
hlt
inc
adc
ljmp
lret
adc
cli
enter
push
jmp
xor
pop
mov
and
mov
sbb
cmp
dec
enter
test
cmp
pop
je
add
inc
in
fidivrl
mov
fiadds
enter
push
add
shrb
inc
mov
dec
dec
adc
out
enter
add
sub
or
sti
adc
aam
fmuls
mov
mov
dec
sbb
popa
push
mov
mov
cmp
or
adc
or
sbb
push
enter
ss
js
mov
pop
sub
push
sub
push
pushf
sbb
sub
sbb
sbb
pop
pushf
orb
and
push
xchg
sbb
es
push
sub
sub
shlb
push
xlat
and
push
pusha
or
lret
push
loopne
out
je
sbb
xchg
xor
daa
mov
hlt
lret
or
sbb
push
outsl
nop
jae
roll
jae
stos
push
push
sub
cmp
jo
shufps
int3
lea
dec
scas
sub
inc
sbbb
aas
jae
and
xchg
in
into
push
lea
arpl
adc
xor
cmpsb
rorb
xchg
and
mov
or
xor
xor
lret
cmpsb
xchg
sbb
or
sbb
je
or
mov
lea
sbb
adc
icebp
leave
fiaddl
lods
shl
out
pop
subb
rolb
mov
shlb
xor
add
sbbb
xchg
lahf
ss
clc
ss
or
xchg
mov
repz
imul
sbb
test
pusha
lret
lret
jle
xchg
sub
test
xchg
jg
pusha
int3
rcrb
mov
xchg
push
ror
gs
ss
xor
pop
sbb
lea
rclb
fdivl
push
inc
leave
mov
adc
aam
mov
shlb
sbb
or
pop
ds
jo
es
xchg
orb
sarl
sbb
xchg
pop
adc
push
or
push
jo
pop
adc
adc
or
scas
sbb
adcb
push
push
decb
sahf
xchg
xlat
push
rolb
mov
sbb
aaa
out
xorb
sbb
shl
shl
lods
rclb
jo
add
aam
adc
xor
es
leave
data16
inc
int3
rolb
adc
sub
adc
rcrb
cmc
xor
insb
in
xchg
or
sbb
pop
pop
inc
lock
sahf
loopne
nop
jl
jo
sarl
int3
aad
sar
std
sbb
jo
cmp
sbb
fildl
sub
pop
mov
xor
xchg
rcrb
mov
add
xchg
int3
hlt
sub
add
fisubl
or
xchg
mov
test
rorb
mov
mov
xlat
cmp
pop
mov
jo
mov
fiadds
push
int3
sti
mov
or
or
lret
push
dec
push
mov
jnp
ret
stos
sub
and
aas
push
or
fldcw
mov
push
sub
cltd
loopne
push
call
rol
lock
rcr
mov
in
jae
add
out
mov
decb
pop
xlat
jmp
loopne
test
dec
or
scas
xorb
sub
cwtl
gs
dec
push
lock
mov
sub
dec
test
shrb
pop
test
sub
lock
sbb
cmp
and
pop
enter
push
lds
ja
sbbl
clc
fstl
jae
int
sub
cmp
lahf
loope
rorl
mov
dec
loope
vunpcklps
xchg
loopne
scas
dec
je
push
out
push
movb
mov
mov
adc
pop
jae
hlt
pminsw
std
icebp
xor
pop
and
out
rclb
in
outsl
arpl
fdivrs
cld
iret
outsl
into
or
mov
out
ljmp
movsb
pop
loope
jmp
fstps
rcr
stc
pslld
cmp
imul
xor
lahf
in
jge
dec
push
jmp
loopne
cltd
fnstenv
outsl
in
lret
pop
mov
in
insl
in
xchg
je
shlb
sahf
jo
inc
mov
inc
xor
xor
dec
jno
dec
fsubrl
and
je
adc
aas
pop
dec
cli
adc
es
pop
aas
adcb
xor
sbb
cmc
rcll
ficoms
arpl
jl
wrmsr
fisttpl
pop
mov
rorb
cmpsb
repnz
cmp
aaa
pop
pop
pop
mov
mov
popf
push
pop
jle
xor
orb
cmp
xlat
adc
mov
cld
imul
rcr
imulb
adc
shrb
push
sarb
sahf
push
sub
push
inc
rcrb
and
push
xor
push
data16
rorl
dec
dec
scas
fcompl
ficomps
fstpl
ret
mov
rcrl
fnsave
loope
int
out
dec
mov
xor
adc
sar
jo
adc
outsl
add
stos
cwtl
repnz
sub
lock
fimull
cmp
mov
xchg
push
scas
mov
lea
sahf
dec
pop
or
mov
scas
push
icebp
sub
cmc
notl
cwtl
and
cmp
inc
clc
inc
pushf
dec
dec
int
in
mov
enter
stos
add
inc
mov
fwait
lahf
mov
les
xlat
scas
cwtl
dec
incl
sti
cwtl
add
test
jmp
out
repz
in
sti
aad
jecxz
or
shl
iret
sarl
out
inc
daa
inc
rclb
rclb
mov
orb
add
cmp
pop
dec
xor
lea
into
push
das
das
push
sub
xchg
das
aam
sbb
lods
pop
loop
sbb
pop
jg
xor
daa
data16
pop
or
test
jmp
or
call
adc
fsubrl
dec
or
test
lea
add
adc
rolb
test
xor
mov
imul
ds
mov
inc
popf
movsl
mov
and
mov
aas
xor
cs
enter
mov
adc
cwtl
xor
add
mov
sub
enter
int
fmuls
rolb
xor
loope
in
in
sbbb
cmp
push
cmp
sub
add
push
mov
or
int3
xor
or
sub
lods
pop
xchg
test
xchg
pusha
pusha
mov
dec
leave
mov
or
int
mov
adcb
lods
cmp
mov
cmp
ret
push
push
add
jl
mov
scas
cmp
lahf
mov
and
ds
jg
ds
dec
fldl
push
sbb
fcoms
addr16
enter
incb
outsl
push
loopne
pop
popf
sarb
lcall
jmp
pop
mov
ds
sahf
jmp
sub
shll
push
mov
push
data16
jne
pop
cmc
mov
fisttps
out
sbb
mov
sub
dec
nop
sub
imul
pop
push
scas
jecxz
mov
sub
mov
es
lds
lcall
icebp
ljmp
aam
lahf
call
mov
ja
jmp
pop
push
push
push
jae
decl
pop
xchg
inc
out
mov
aam
das
mov
and
scas
ljmp
lahf
out
adc
inc
cmp
pop
repnz
fdivrs
pop
int3
cmpsb
rcrb
push
xor
push
sahf
in
mov
and
popf
adc
adc
lock
sub
pop
dec
lds
nop
in
popf
clc
jle
cmpsb
mov
cmp
sbb
pop
pop
dec
push
shl
jae
aas
jmp
dec
negl
lock
loopne
pop
hlt
aas
lahf
mov
dec
ret
pushl
sbb
or
pop
jnp
push
xchg
repnz
dec
add
loope
and
arpl
shlb
das
fcompl
jl
rcrb
jmp
aaa
or
popf
lock
cwtl
mov
and
clc
lahf
int
nop
jo
popf
pop
push
cmp
out
ret
fildll
popa
jns
in
xlat
aam
ds
xor
cmp
outsl
sbb
in
xorb
mov
pop
xor
arpl
call
fdivr
outsl
shr
adc
out
mov
cmp
mov
stos
ficoml
xor
ret
shlb
lods
movsb
xor
shll
icebp
push
hlt
or
sub
or
leave
test
and
jae
sub
push
jo
add
sahf
jg
mov
adc
out
dec
push
mull
stc
outsl
adc
insl
std
fwait
xor
lret
ffreep
sub
sub
in
insl
out
mov
imull
adc
mov
call
xor
or
sbbb
mov
xlat
pop
dec
push
sub
mov
out
pop
mov
pusha
ret
push
leave
arpl
adc
popf
jge
xchg
std
mov
scas
mov
push
lock
outsl
in
lods
or
int
sbb
lea
adc
dec
xor
mov
insb
lods
xor
sahf
mov
inc
out
movsb
xlat
lea
sbb
jmp
outsl
jecxz
xor
out
scas
sar
push
fimuls
adc
sbb
lock
sub
decl
sbb
movsb
jmp
and
fildll
xchg
cs
out
mov
in
jae
mov
adc
jle,pn
bound
dec
sub
stc
test
lods
or
sbb
popf
ljmp
mov
lds
prefetch
mov
jg
adc
jmp
fmull
jo
sbb
adc
aad
xor
pop
inc
mov
inc
out
mov
aaa
fisttpll
lock
sub
int
aam
xor
sub
mov
cmp
mov
and
adc
nop
stc
sbb
or
outsl
icebp
adc
fdivr
or
jge
cmp
and
fldt
fisttps
sbb
lea
movsb
mov
popf
fs
das
in
xchg
xor
xchg
loop
cwtl
adc
cltd
lret
or
sbb
pop
and
adcb
loop
pop
dec
adc
lock
jmp
mov
aas
adc
or
mov
std
adc
es
mov
outsl
loope
jo
sbb
popf
bound
xlat
or
pop
xchg
xchg
sub
into
jge
rcll
cmp
sbb
pusha
loope
xor
subb
push
aaa
inc
jmp
out
call
sub
or
mov
cmp
adc
jge
sbb
cmp
pop
or
cmp
push
loop
mov
mov
jo
shrb
aad
fnstcw
lods
sub
xchg
outsl
sbb
mov
cmp
loopne
or
pop
out
push
mov
popf
addr16
clc
mov
jg
std
jnp
xlat
test
xorb
loopne
out
adc
sbb
test
cmp
mov
fwait
push
scas
adc
sbb
lock
dec
fcomip
cs
sub
in
sbb
jg
repz
push
sub
out
into
sbb
fstl
jbe
pop
sarl
popa
add
sbb
sub
shr
loopne
aaa
in
fstpl
mov
pusha
ficoms
in
jle
sbb
popa
out
aam
xorb
mov
jle
pop
lea
inc
mov
std
dec
cltd
xor
sub
inc
cmc
sub
sub
lea
cmp
mov
insl
mov
inc
shlb
push
sahf
comiss
adc
int
aas
loopne
clc
std
sbb
in
dec
out
push
out
leave
mov
call
mov
ds
sbb
jge
out
cmpb
mov
decb
inc
outsb
aas
mov
ret
xor
mov
in
loopne
out
mov
into
jle
dec
inc
pop
sub
mov
call
fsqrt
div
aas
pop
int
fisttpll
icebp
and
cmp
in
add
lods
inc
sbb
subb
sub
lock
test
mov
or
and
push
sti
loop
mov
rorl
mov
dec
shl
push
push
clc
int
xor
jb
add
fimuls
push
imul
push
outsl
push
sub
xor
movsb
push
scas
lahf
nop
sub
cmp
mov
or
mov
adc
sub
popf
mov
push
std
inc
test
lock
adc
dec
das
dec
xor
xor
add
cmp
cmp
out
lea
sbb
rolb
cmc
push
mov
fsubs
andl
fs
sub
jns
jo
ret
nop
cmp
xor
adc
fbstp
pop
pop
jge
insl
add
xor
xchg
push
insl
in
lea
ds
mov
cmpsl
sub
inc
in
movb
xchg
mov
shl
pop
fxch
xchg
lea
jle
rcl
sub
and
hlt
dec
xor
inc
push
enter
jo
and
sbb
xchg
sub
sub
lock
popf
int
jecxz
lods
movsl
out
outsl
mov
lods
sub
dec
sbb
adc
std
sub
adc
inc
mov
push
sbb
push
loopne
pop
call
push
outsl
cmp
movsb
mov
rcll
xchg
add
ficoms
xchg
and
sar
mov
scas
pop
adc
mov
xor
and
xor
xor
ja
lahf
sub
int
cmp
in
fwait
sub
mov
ficomps
xor
push
fists
sub
fcmove
decl
outsb
push
dec
out
sbbl
push
jle
adcb
aad
adc
pop
dec
cmp
lahf
outsl
pop
sub
jbe
cltd
push
jle
sub
fisttpl
lea
xor
loop
lods
adc
adc
ror
xor
fcompl
adc
xchg
int
sub
ret
xor
adc
int
sbb
je
out
popl
sub
rcll
rcrb
dec
shll
mov
addr16
je
ja
jbe
mov
in
xor
sbb
lock
in
lea
mov
in
pusha
outsb
clc
jmp
aam
aas
test
loopne
jge
outsl
xchg
xor
mov
fdivp
xor
inc
scas
adc
xor
je
push
sub
push
mov
dec
xchg
pop
inc
cmpb
icebp
xchg
jno
dec
out
and
cmpl
nop
inc
scas
dec
xor
and
sub
loop
push
std
sub
out
and
ret
in
lahf
sub
adc
aas
xchg
cmp
xor
filds
mov
or
push
sub
andl
pop
std
mov
js
sbb
push
inc
inc
je
jge
or
shll
or
and
sbb
test
and
das
out
iret
sahf
jg
push
insl
sahf
mov
ss
and
rol
sub
push
and
mov
iret
fnstcw
inc
out
hlt
rcrl
lahf
and
fdivr
dec
pushf
test
add
push
jmp
sbbb
loop
jg
pop
cld
fildl
push
mov
add
mov
fstl
das
das
lds
loopne
pop
out
jge
idivb
push
adc
mov
xor
cmp
fxch
movsb
mov
jecxz
insl
pop
pop
xor
jae
loope
popl
pop
imul
movsb
shl
sahf
outsl
sbb
mov
aad
or
outsl
fbstp
aas
out
mov
in
sbb
mov
iret
adc
mov
comiss
dec
loop
xor
dec
icebp
jg
rcl
and
mov
add
aad
into
sbb
int
and
lret
outsl
int
pop
xor
sbb
lea
sbb
insl
mov
sar
fdivrs
scas
orb
aad
or
jo
sbbb
push
filds
subl
or
popf
sub
jo
dec
xor
dec
adc
pop
cmp
cmp
scas
sub
sahf
xchg
cmp
loopne
adc
cltd
jb
ror
jle
pop
pusha
cmc
mov
out
pop
mov
xor
dec
std
sub
xchg
push
xchg
mov
call
nop
pop
mov
jge
mov
fnstcw
ficoms
push
add
inc
lea
btc
adc
jne
lahf
aas
aad
loopne
jp
in
out
fcompl
sbb
loope
mov
adc
sahf
ret
das
mov
ss
ficomps
dec
or
lea
pop
iret
push
ljmp
stos
sub
call
clc
jle
xor
shr
adc
cmc
test
xor
outsl
fsub
adc
mov
test
in
inc
std
iret
cli
or
cmp
jb
mov
dec
scas
outsl
xor
and
lods
push
xchg
push
jge
sbb
inc
xor
mov
xchg
or
cmc
pavgb
or
and
fldenv
popf
xor
pop
xchg
int
sbb
lahf
ss
cltd
into
outsb
jge
sub
dec
das
iret
sub
mov
sub
shl
mov
nop
mov
ds
cmp
dec
out
mov
jg
ret
cmpsl
xor
mov
rdpmc
fisubrl
mov
movsb
add
aad
mov
sub
and
xchg
push
jne
lcall
pop
cmp
sub
leave
lods
mov
rorl
movsl
xlat
and
cmc
sar
adc
ds
push
push
inc
scas
mov
insb
xor
jbe
sbb
sub
fcmovbe
subl
shlb
fnstenv
jmp
push
outsb
cmp
nop
inc
fdivp
xchg
xor
call
jae
jb
sti
aaa
scas
xchg
out
xor
movd
xchg
icebp
ret
out
lea
aaa
lock
mov
dec
pop
mov
ret
mov
loopne
filds
cmpsb
pop
xchg
outsl
push
pop
jo
sub
icebp
pop
inc
in
sub
pusha
sub
lahf
popa
jno
je,pt
fnstsw
out
cwtl
cmp
adc
outsb
push
movsb
imul
movsb
icebp
dec
fsubl
stc
les
in
adc
rcrb
fdivs
pushf
cltd
sbb
cmp
andl
adc
adc
shr
inc
push
ljmp
js
dec
fsubrs
push
push
adc
rolb
sub
cwtl
xorb
cld
sub
xor
call
test
pop
notb
sub
mov
ror
push
imul
call
mov
pop
mov
jmp
pusha
divb
jge
xchg
dec
dec
sub
or
sarb
cmc
mov
divb
sarl
in
inc
mov
int
pop
dec
mov
add
sbb
iret
lahf
lods
pop
aaa
and
lahf
shl
popf
xchg
loopne
loopne
mov
cmpsl
dec
test
pusha
mov
adc
push
int
lahf
mov
sub
scas
adc
adc
je
dec
xchg
sbbb
repnz
pop
loop
icebp
std
out
ds
jle
jmp
mov
sub
xor
hlt
pmaxsw
sbb
lcall
lahf
adc
pusha
xchg
jbe
pop
sahf
xor
sbb
rclb
cltd
xchg
adc
sarb
scas
and
dec
mov
outsl
push
lret
jecxz
ds
adc
inc
sbb
dec
aam
jl
mov
shlb
jge
or
push
add
insl
lock
rcl
shlb
cs
sahf
iret
out
aad
cmp
mov
sbbl
scas
pop
jg
xlat
in
sbb
sbb
inc
push
cmc
into
in
cs
in
adc
in
imul
mov
sarb
pop
mov
mov
mov
xor
jae
std
cmp
cmp
xor
pop
and
pop
xchg
adc
int
scas
loope
das
and
xor
push
jbe
in
add
xchg
loope
mov
mov
loopne
pop
addr16
leave
inc
outsb
movsb
adc
pop
mov
push
mov
outsl
stc
jecxz
inc
nop
call
pop
mov
jmp
testl
movsl
loopne
pushf
cltd
mov
leave
sub
shll
scas
sub
sar
jge
test
pop
nop
into
xchg
mov
sbb
insl
cmp
xor
push
scas
repz
into
rcl
mov
je
fsubr
ret
pop
cmp
jge
add
pop
out
outsl
bound
inc
nop
shl
adc
nop
adc
jne
jle
aam
dec
xor
inc
xor
leave
jge
jb
fmuls
dec
push
dec
pusha
leave
xchg
sub
pop
cmp
cs
adc
inc
test
adc
cmp
mov
gs
inc
je
adc
lods
lods
shll
dec
mov
mov
lahf
ret
ret
cmp
shll
popa
and
test
pop
sbb
hlt
sbb
lret
in
enter
popl
sarl
jg
push
lea
adc
push
and
push
push
frstor
mov
add
jge
int
fsub
sbb
cmpsb
std
inc
sub
cmc
push
push
mov
and
push
jg,pn
pop
mov
inc
sub
insl
rcrl
mov
aad
cvtps2pi
xor
cvttps2pi
jge
loopne
into
ror
mul
aaa
loope
jle
jle
fsubrs
jae
cltd
outsl
jle
lea
scas
and
aas
aad
dec
repz
pusha
or
fiadds
xchg
das
sbb
cltd
sti
or
or
in
mov
int3
call
leave
popf
out
movsl
adc
lds
cmp
lea
mov
lahf
inc
out
clc
cmpb
mov
pop
out
mov
scas
push
jbe
adc
cmp
mov
lret
adc
mov
pusha
dec
adc
ds
inc
inc
movsb
das
fdivrl
mov
rorb
push
sbb
out
mov
mov
rclb
dec
add
test
fistps
dec
fimuls
lret
je
xlat
sahf
into
adc
jge
insl
int
fsubrs
lock
cmp
mov
nop
stc
dec
fnstsw
cmove
cmpb
outsb
int3
fs
ds
sub
cltd
dec
ret
xor
ljmp
inc
arpl
scas
or
or
jno
cmp
mov
cmp
popf
push
movsb
cmp
in
das
in
xor
int
int
xchg
pop
stc
dec
out
lahf
int
or
mov
loope
jg
xor
test
and
dec
and
and
in
pop
or
xor
into
inc
js
fidivrs
pop
ret
outsb
dec
push
sti
jecxz
adc
aaa
stc
les
dec
stos
or
pusha
stos
mov
iret
xchg
int
pop
dec
dec
cmc
push
push
in
adc
jg
ret
cmp
jb
inc
adc
push
adc
iret
sahf
int
btr
xor
fwait
jmp
pop
dec
popf
std
add
mov
shl
and
adc
pusha
pusha
pusha
inc
in
ds
fldt
in
testl
iret
ss
std
loopne
xchg
dec
dec
faddp
rol
mov
jmp
movsl
jo
aad
out
fcoml
adc
add
aas
sub
mov
push
xor
insl
mov
dec
call
xor
dec
insl
icebp
fistl
fisubl
pop
cmp
outsl
mov
mov
or
stc
sbb
push
sbb
std
inc
cmp
sbb
xor
loopne
aam
jle
xor
and
mov
or
loopne
mov
xchg
and
dec
sbb
or
jg
outsl
adc
sub
outsb
cmpsl
or
cltd
cmpsb
rolb
push
int3
into
sarb
leave
je
addb
sbb
pusha
enter
jne
mov
inc
shrb
lahf
mov
pop
rcl
adc
push
or
js
movsl
add
popf
mov
stos
mov
pusha
xor
test
pop
or
je
pop
xchg
mov
cltd
lds
and
or
push
into
adc
pusha
imul
int3
sahf
adc
xchg
hlt
mov
push
sbb
test
gs
aad
scas
xor
in
popf
push
aas
aam
xor
lcall
fldl
ret
in
mov
fcomp
leave
clc
loope
pusha
pusha
inc
xor
into
ljmp
iret
push
sahf
push
outsl
rolb
leave
les
mov
cmp
pop
out
mov
adc
and
jg
add
xchg
and
outsl
push
xor
jae
inc
in
pop
xor
xlat
outsb
mov
mov
or
scas
push
inc
fistpll
ret
jp
mov
lods
xchg
and
in
mov
jp
inc
or
cmp
lahf
aaa
or
dec
in
out
pusha
cmp
lret
dec
call
dec
push
sarl
cmp
scas
push
repnz
aam
sbb
add
fistps
inc
xor
leave
testl
dec
cmovp
pusha
xor
adc
cmp
inc
mov
push
dec
out
xor
mov
dec
loop
adc
outsl
dec
sbb
fstp
aas
lods
loope
adc
std
rolb
dec
dec
scas
lahf
test
lret
xor
push
clc
pusha
lret
xchg
test
ja
push
cmp
fbstp
pcmpeqb
pop
xor
xchg
nop
lods
negl
popf
frstor
mov
adc
aam
add
push
mov
fwait
dec
outsl
repnz
outsl
add
dec
dec
lds
ja
jmp
loopne
lea
mov
mov
inc
jne
jne
fidivs
icebp
in
movsb
lret
xor
out
out
roll
jg
xchg
push
das
jge
sub
ds
shlb
clc
popa
and
mov
pop
ret
and
in
dec
int
push
repz
stc
iret
popf
nop
sbbl
outsl
pusha
pop
sub
stc
xor
lods
fsubrp
sub
sbb
cmc
and
inc
and
jle
lods
aad
sbb
loope
fsubl
leave
sub
sahf
jp
scas
in
mov
clc
ljmp
sub
outsl
sarb
pop
stos
insl
xchg
aas
cwtl
pusha
xchg
scas
pop
and
sbb
sbb
xor
adc
into
inc
movsb
cmp
fnstenv
cs
loop
dec
lds
or
push
xchg
lea
aaa
mov
push
pop
movsb
sbb
arpl
push
lods
mov
fidivrl
mov
stc
scas
adc
xchg
out
push
std
lods
xchg
clc
push
push
cmp
aad
mov
adcl
fldt
push
dec
xchg
notb
shrl
mov
std
cmp
outsb
lahf
outsl
adc
lds
mov
and
dec
mov
push
dec
mov
icebp
jge
pop
cmp
push
sti
enter
xlat
push
shr
es
in
dec
jmp
lea
and
mov
xchg
les
jmp
enter
xchg
jo
pop
sub
xor
jo
repnz
fnsave
or
fsubl
xchg
lock
or
dec
icebp
repz
sbb
inc
or
mov
inc
dec
sbb
push
ss
ljmp
test
int
inc
mov
cmp
shr
and
sub
leave
fisubrs
mov
ljmp
sarl
xor
and
lock
dec
int
cmp
loope
and
cmc
mov
and
cmpsl
scas
or
mov
repnz
pop
fnstenv
aas
cmp
push
pop
divb
iret
pop
fucomp
or
and
dec
xor
out
test
fdivr
cmp
dec
punpckhwd
popf
testl
mov
mov
lret
mov
mov
test
add
filds
subb
mov
aaa
inc
push
dec
dec
mov
icebp
les
xchg
adc
out
push
mov
rcll
xchg
in
lahf
out
in
xchg
das
dec
ja
pusha
cs
movsl
push
push
mov
js
cmp
jo
iret
lea
dec
xor
aaa
jle,pn
call
mov
shlb
sbb
pop
mov
sti
push
pop
fwait
adc
push
cmp
xchg
mov
lock
cmp
dec
ret
sbb
dec
nop
mov
push
mov
dec
inc
add
mov
sahf
inc
pop
xor
iret
push
aaa
xor
call
nop
xchg
cmp
push
out
adc
ja
mov
xor
rorb
xor
xor
and
push
cs
test
jbe
sub
mov
in
jge
or
repnz
je
jp
push
bound
adc
call
fnstenv
jae
jle
push
in
dec
in
testb
sub
decb
push
or
pusha
xchg
jp
psllw
inc
jne
nop
dec
das
inc
cmc
in
lods
cld
and
cld
ret
push
sahf
fldcw
add
sub
aam
shll
push
pop
mov
push
mov
mov
ds
mov
pop
inc
mov
aad
jno
dec
dec
xchg
lods
das
xlat
push
ljmp
sbb
xor
or
cs
shrb
lcall
into
lods
xor
push
mov
paddb
shl
sub
pusha
int
sti
push
fmuls
pushf
sbbl
addb
jbe
shrl
mov
xor
pop
repz
test
movsb
stos
cmp
jb
mov
ror
pop
jno
pushl
lods
mov
loopne
xor
into
leave
push
insl
iret
and
fidivs
push
pop
cs
cmp
pop
stc
cld
mov
pop
dec
mov
outsl
aam
std
scas
es
sub
enter
ljmp
std
std
clc
sub
and
adc
hlt
mov
xchg
mov
lahf
aam
dec
outsb
adc
cmp
std
xor
mov
out
xor
lret
outsl
pop
loopne
insl
flds
scas
arpl
popf
sbb
ss
mov
adc
mov
push
mov
lock
in
sahf
loopne
xchg
push
repnz
punpcklwd
aas
shlb
out
lahf
push
call
lock
and
inc
sbb
int
sub
std
repnz
nop
push
push
mov
into
dec
mov
mov
mov
mov
adc
jle
cmp
repnz
movsb
nop
inc
mov
dec
fidivl
icebp
and
fisttps
push
out
fisubrl
mov
sahf
jle
xchg
pop
loopne
pusha
mov
aam
int
add
push
push
into
ror
sahf
mov
inc
xor
mov
xor
movsb
aas
out
pop
outsb
lds
scas
xchg
cmp
into
mov
jo
push
adc
leave
std
jne
push
cmc
pop
xor
dec
lahf
xor
fwait
nop
dec
in
push
shl
sti
aas
ja
clc
dec
pop
ds
iret
xchg
decl
ror
nop
adc
or
lods
adc
bound
shll
adc
fnsave
int
push
nop
aad
shr
xchg
jg
outsb
dec
out
push
frndint
fists
mov
inc
call
cmpsl
call
int
std
adcl
movzbl
loopne
cmp
xor
std
pop
mov
jg
lock
enter
push
pushf
arpl
sbb
mov
loopne
pop
loopne
jp
and
adc
lea
ss
bound
lods
and
scas
push
out
jmp
push
pop
ficomps
incb
add
adc
xchg
dec
into
xor
sahf
shl
iret
push
jle
outsl
sbbl
jecxz
mov
enter
cmp
negl
push
mov
aas
xchg
das
outsl
sbb
pop
dec
outsl
xlat
lds
in
sti
mov
mov
loop
shlb
add
cmp
pop
mov
out
adcl
pop
stos
add
cld
pop
dec
adcb
int
jo
shr
adc
pop
sub
push
xor
xor
jmp
push
iret
push
sarb
jge
in
mov
mov
rcll
mov
jecxz
mov
jns
out
outsl
icebp
scas
in
adc
fcoml
jo
jo
pop
xor
mov
lods
lret
scas
or
insl
std
inc
data16
jo
pop
adc
jge
movsb
out
jle
or
dec
leave
and
aas
sub
fidivl
mov
in
jge
iret
dec
xchg
mov
mov
lods
xor
into
cmp
adc
aas
dec
jle
loope
aas
jle
aam
add
xchg
push
mov
cltd
sbb
ret
mov
lahf
push
adc
mov
lahf
lea
ficomps
fmull
push
fstpl
xchg
and
lds
xor
fsubp
ret
xlat
scas
dec
lock
loope
mov
and
sbbb
cmp
int
lret
sub
fsubs
push
out
in
xchg
popf
scas
sub
movsb
in
int3
cmp
mov
adc
aad
hlt
in
lods
rorb
mov
aas
outsl
sbb
aaa
lods
int
add
ljmp
orb
sub
xor
sbb
insl
movl
mov
jnp
add
mov
sahf
sub
aam
rcrb
out
lds
lahf
xor
dec
xchg
lahf
push
dec
sub
xchg
les
arpl
ret
sub
movsb
jge
lea
arpl
outsl
repnz
fisubrl
outsl
and
xor
adc
das
addr16
adc
aas
jge
cmp
pop
adc
push
dec
insl
rcll
lcall
cli
std
aas
clc
lea
or
push
nop
push
jecxz
cmp
or
scas
fstp
outsl
and
push
xchg
in
mov
mov
pop
push
mov
xor
and
daa
sub
ds
cltd
jne
jo
lcall
cmpsl
sahf
add
nop
xor
shr
adc
mov
xor
push
repnz
sub
dec
cmp
lret
orl
mov
push
daa
prefetchwt1
or
pcmpeqd
jge
sub
cld
data16
and
adc
mov
xchg
mov
mov
mov
movsb
and
sub
or
shll
nop
loopne
mov
int
or
dec
xor
sub
xlat
mov
mov
outsl
cltd
dec
ret
jecxz
out
push
pop
adc
idivl
xchg
push
daa
aas
adc
and
cmp
int
aaa
fcmovne
and
jge
shl
inc
out
rcr
xchg
jo
jg
cmp
adc
push
pop
inc
mov
pop
and
xor
push
sarl
or
inc
mov
hlt
clc
mov
or
or
dec
pop
je
scas
test
adc
pop
push
and
sbb
call
loope
adc
push
xchg
fsubr
sub
and
mov
call
std
sbb
adc
rcrb
arpl
es
fdivrs
pop
mov
cmp
enter
sub
int
call
adc
sti
popf
adc
sahf
inc
sub
imul
adc
mov
sub
mov
and
sub
int3
mov
call
aas
and
inc
inc
packsswb
and
pop
jo
xor
aam
in
nop
lea
mov
loopne
sub
mov
sbb
xchg
enter
mov
ja
int
arpl
es
adc
lods
rolb
and
cmp
xchg
mov
shlb
push
jnp
cld
xor
push
xlat
xor
xchg
ret
dec
mov
rcrl
call
lahf
das
dec
and
or
leave
pop
xor
dec
push
sbb
fildl
sub
dec
push
lods
ja
jae
add
or
call
rorb
cmp
sub
add
lds
cmp
sbb
jbe
sub
lods
mov
leave
dec
inc
jmp
xor
push
iret
das
testb
mov
or
xchg
xor
fisttpll
cmp
sbb
insl
mov
sub
stc
mov
pushf
aam
enter
int3
mov
add
loopne
mov
dec
mov
dec
test
adc
fmuls
add
shlb
xchg
and
xor
fstl
inc
scas
imul
aam
adc
sahf
add
sbb
xchg
or
and
sbb
adcl
xor
inc
mov
sbb
rolb
out
out
xor
fwait
push
stos
fidivl
pop
dec
jnp
jg
call
rcll
push
cmp
rcl
xchg
push
pop
pushf
nop
in
xlat
adc
roll
sbb
fildl
push
add
push
sbb
lahf
and
in
aad
xchg
mov
sbb
bound
ficomps
fstpl
and
mov
data16
gs
imul
stos
push
add
stos
imul
std
popf
mov
cltd
ret
fisubrs
jecxz
dec
sbb
push
adc
fsubl
adc
shlb
adc
roll
nop
xchg
xchg
pop
sbb
xchg
push
in
jo
push
movsb
cmp
adc
in
adc
in
sub
jecxz
pop
mov
push
and
test
pop
push
ss
aaa
fs
aas
popf
ljmp
mov
rcrb
pop
or
jae
adc
pop
mov
ret
add
add
mov
pop
mov
mov
in
xchg
lods
cmc
add
jbe
cli
addr16
xlat
jp
pop
lock
dec
test
push
leave
add
xchg
sbb
sub
lahf
pop
jo
add
aas
xchg
add
inc
mov
in
push
jmp
and
imul
mov
mov
loopne
and
xchg
inc
scas
in
lods
sbb
push
cmpsb
mov
pop
sub
jmp
mov
xor
sub
call
cmp
pusha
and
decl
repz
stos
lock
lods
lret
sub
sbb
cmpl
out
or
frstor
xor
jne
or
add
pop
in
xchg
jecxz
or
add
psubsb
pop
lahf
or
mov
loopne
ljmp
add
xor
jmp
mov
movsl
cmp
cmc
add
inc
cli
addl
jge
mov
bound
add
xchg
repnz
add
sub
xor
mov
std
in
test
daa
cs
cmp
mov
out
ja
pop
add
mov
repz
dec
inc
sbbl
imul
ja
sti
sbb
adc
jno
push
xchg
or
add
jmp
jbe
add
mov
add
add
inc
mov
in
add
test
or
shrd
jg
call
into
xchg
ljmp
pop
sbb
loope
sub
cmp
sbb
lret
sbb
fwait
push
or
imul
push
pop
jns
add
je
xor
jns
sbb
psrlw
mov
aaa
arpl
add
push
xor
popf
int
sbb
lds
sahf
adc
sub
stos
aas
test
push
les
movsb
jg
add
cmpsl
inc
movl
jge
insl
cmpsb
cmp
add
sub
fwait
pop
fbld
out
jp
add
push
jge
mov
pop
pop
jno
lcall
add
mov
aaa
pop
dec
cmc
mov
lret
add
stc
add
or
negl
mov
fldt
lahf
add
jo
inc
stos
cmpsb
dec
mov
loopne
sub
xlat
sub
mov
mov
push
push
into
icebp
lock
ds
add
xchg
sub
sub
mov
dec
cwtl
or
lret
add
dec
push
cli
jne
imul
and
insb
aad
mov
inc
and
adc
js
add
mov
or
and
gs
sub
mov
mov
inc
in
loope
sbb
imul
bound
add
mov
add
sbb
cmpsl
out
sti
in
add
lds
dec
jns
mov
add
ljmp
sub
xchg
in
movsl
lahf
add
imul
mov
add
add
mov
cltd
and
lock
lret
push
push
dec
xor
add
inc
int
jl
hlt
or
push
pop
or
add
jno
dec
push
jl
add
mov
or
xor
jbe
add
cmc
mov
and
scas
adc
push
faddl
cwtl
cli
cmp
adc
jae
dec
stc
xchg
les
mov
sbb
negb
popf
xchg
add
std
cmp
lock
stos
pop
xchg
inc
dec
test
imul
imul
pop
add
jo
push
stos
std
insb
jne
mov
cltd
pusha
popa
xchg
std
fldl
sbb
cmpsl
mov
int3
hlt
jne
pavgw
test
mov
or
clc
loope
stc
pop
int3
jne
pop
mov
and
dec
into
mov
test
shll
sub
jne
add
sbbl
xorb
pop
cs
or
pop
push
bound
sub
ljmp
mov
or
jp
mov
fwait
cltd
jmp
add
push
imul
sub
dec
or
jo
add
push
sbb
add
movsl
jne
cmp
adc
or
mov
mov
testl
xchg
mov
push
sub
xchg
int3
sti
mov
std
push
dec
mov
jae
push
insl
imul
hlt
mov
push
xor
adc
or
add
fwait
je
int3
lret
lods
jle
cmp
pop
lods
mov
mov
dec
inc
dec
std
int
imul
aaa
add
int
add
stos
mov
push
and
add
add
imul
xor
add
jb
cltd
add
inc
lret
mov
push
popa
jmp
loope
arpl
or
add
adc
fstpl
test
xchg
rclb
gs
in
add
add
mov
es
lret
cmc
xchg
dec
adc
shl
inc
fsubrl
and
scas
mov
mov
jmp
insl
pusha
adcl
pop
sub
call
incb
pop
sbb
sbb
stc
bound
rcrb
add
lcall
add
aad
jo
icebp
sub
mov
insl
inc
mov
add
add
test
cmp
int
fsubs
arpl
mov
sbb
mov
int3
add
fwait
out
and
add
or
daa
cwtl
loopne
pop
cltd
push
or
rcr
inc
add
sahf
insl
fiaddl
ret
or
add
test
mov
push
fists
pop
or
add
and
mov
enter
jbe
jb
add
push
xchg
imul
mov
jg
pop
subb
add
mov
sbb
es
mov
add
pop
lcall
jns
add
testl
mov
test
int3
subb
lret
adc
mov
and
adc
cmp
mov
stc
pop
mov
or
mov
pop
sub
push
add
mov
or
andb
lret
int3
mov
lea
and
sbb
addr16
pusha
adc
fs
ds
popf
cwtl
jbe
mov
test
nop
add
or
sub
and
sbb
test
loopne
sub
sahf
mov
lods
jl
popf
xlat
add
lahf
or
xor
jg
std
out
adc
addl
push
or
inc
add
dec
or
xor
std
lock
xor
les
cmpsb
push
and
xlat
pushf
add
pop
jo
das
rolb
jno
or
mov
lock
adc
lret
inc
lods
mul
fdivr
cmovae
sub
push
dec
push
js
sahf
dec
lea
xchg
sub
outsl
dec
cmp
or
cmp
inc
int3
jmp
sbb
pop
inc
dec
adc
pop
xor
adc
and
push
sbb
mov
and
fcoms
adc
es
in
cwtl
rcrb
out
outsl
adc
addr16
les
fsubrs
les
pop
sbb
fs
mov
sub
mov
shr
repnz
divb
daa
call
popf
das
fbld
dec
fmul
or
xchg
sbb
or
popf
push
push
and
jle
lods
mov
movups
and
mov
sbb
adc
mov
add
sbb
xor
jle
push
adcl
in
xchg
jno
sbb
das
adc
inc
bound
cmp
dec
push
fiadds
push
inc
pop
cmpl
aas
shlb
pop
insb
fldl
pop
sub
aad
push
addb
cmp
xchg
std
mov
movsl
cs
scas
jb
out
fsubl
les
pop
mov
sub
push
xchg
orb
add
mov
jae
iret
mov
xor
arpl
out
rclb
sub
ja
push
jle
fistpl
mov
ror
into
call
inc
stos
xorb
jo
jae
out
xor
popf
scas
call
mov
push
pop
lods
stos
stos
rcr
fdivrs
push
push
outsb
pop
xor
pop
ret
sarl
imul
in
sub
fcoml
jbe
dec
das
stos
dec
xchg
int3
push
das
repz
lods
sub
xor
dec
nop
push
jg
dec
pop
out
dec
dec
dec
cmp
stos
inc
sbb
lret
sbbl
sub
loope
xor
xor
pushf
dec
lret
adc
pop
push
nop
xor
in
popf
rcrl
cltd
scas
jge
repnz
fisubs
or
loopne
aam
adc
out
mov
adc
pop
xor
xor
test
xchg
outsb
and
push
out
pop
loopne
mov
inc
popf
pop
adc
ret
sub
fsubl
aad
xchg
add
cwtl
dec
iret
cmpsl
scas
hlt
pop
xor
pop
enter
das
test
shll
cmp
dec
sub
das
xchg
or
xchg
loopne
scas
pop
aam
ja
sbb
xchg
inc
movsl
lds
inc
dec
lret
dec
lock
jg
cmp
mov
push
and
lods
dec
jns
jg
mov
call
dec
sbb
mov
push
mov
fistps
lahf
lods
or
enter
ja
inc
dec
push
mov
mov
cmpl
in
mov
dec
pushf
aas
mov
iret
pusha
jge
add
xor
push
outsl
mov
cmpsl
push
xchg
mov
dec
leave
mov
lods
lcall
pop
daa
lret
stc
test
dec
insl
pop
push
inc
cmpsb
dec
xor
jae
mov
push
cltd
ljmp
jb
mov
lods
outsl
ret
inc
fmuls
cld
pop
push
cmpb
in
mov
call
xchg
sub
subl
push
push
dec
xchg
xchg
cmp
loope
test
adc
pop
xchg
dec
xor
xchg
into
pop
ljmp
mov
push
adcb
ja
out
xor
dec
push
adc
pop
push
jae
shlb
and
arpl
jb
lock
iret
mov
inc
mov
inc
xchg
gs
sub
lcall
outsl
lahf
hlt
xchg
fldl
lret
pop
sahf
cwtl
pop
pop
mov
int
add
mov
pop
sub
fdivs
mov
rclb
roll
mov
rcl
or
cmpsl
pushf
xor
fisubrl
inc
aas
mov
rcll
mov
sub
outsb
dec
in
pop
dec
cs
lret
inc
into
repz
sub
rcl
jecxz
dec
pop
pop
push
pop
out
in
mov
dec
dec
jns
jbe
jnp
test
out
mov
movsb
xor
mull
adc
adc
lods
mov
jb
xchg
je
pop
dec
cmc
dec
add
dec
iret
lahf
popf
jb
add
out
xchg
add
xchg
outsl
lahf
add
mov
jns
xchg
imul
inc
push
cwtl
mov
push
mov
je
std
xor
fwait
bound
pop
xor
fwait
pop
pop
xor
shl
dec
mov
xchg
iret
cmpsl
add
dec
add
mov
lahf
xlat
fwait
inc
subl
fildll
ss
push
jno
pop
fwait
mov
cmpsl
nop
jg
into
or
enter
ja
dec
xchg
xchg
sar
sub
shlb
fwait
pop
movsl
in
out
lcall
cmp
push
aad
mov
push
dec
dec
outsl
xchg
mov
sub
scas
and
and
adc
cmp
mov
cmp
test
mov
popf
xor
aaa
stc
les
sbb
fsubs
inc
fcomip
imul
daa
cs
dec
cmp
sbb
xchg
cmp
lock
and
or
sbbl
mov
adc
popf
fcoml
xchg
sub
in
xchg
add
nop
push
add
push
movsb
sbb
xchg
add
pop
adc
add
lahf
pop
sbb
aad
and
hlt
push
fisubs
daa
sahf
pop
add
mov
ljmp
loop
scas
mov
das
add
scas
outsb
cs
scas
insl
sub
mov
xor
mov
jb
repnz
xor
mov
je
ja
divl
mov
xor
shr
mov
add
inc
mov
shll
rclb
enter
adc
pushf
pop
in
xchg
push
add
pop
sbb
clc
add
movsb
xchg
fwait
push
adc
arpl
fisubl
cmpb
lods
jge
jecxz
push
mov
rorb
jns
pop
movsb
daa
icebp
lock
mov
and
jl
add
jns
dec
mov
push
jmp
inc
and
or
and
das
iret
repz
out
dec
dec
add
scas
clc
je
xor
push
cwtl
push
jmp
int3
dec
cmc
test
add
ljmp
add
mov
dec
xor
insl
add
in
mov
cmp
mov
inc
call
mov
pop
rcll
in
dec
or
adc
lods
pop
inc
cltd
xchg
movsl
cmp
leave
cwtl
pop
hlt
add
movsb
addb
scas
pop
add
mov
popf
add
sbb
add
mov
imul
sub
pop
dec
sub
cmc
pop
cmp
stos
movsb
or
sar
mov
or
xor
sub
push
add
mov
mov
or
adc
mov
sub
push
js
fmuls
adc
pop
add
push
lock
jo
adc
jmp
cmp
sbb
mov
or
push
xchg
gs
sub
popf
mov
xor
pop
sbb
in
rcr
mov
lea
push
xor
inc
mov
add
xor
add
add
xchg
push
add
in
push
lret
or
pop
push
mov
mov
jb
aaa
jg
popa
sub
xor
jo
xor
xor
movsl
cltd
mov
mov
xchg
ds
in
lcall
or
cmpsb
sub
mov
add
jne
mov
cli
addr16
fcmove
inc
mov
sarl
mov
andl
addr16
mov
je
mov
lcall
shl
mov
aas
jno
add
repnz
test
and
ds
sub
pushf
add
imull
jae
leave
in
add
push
insl
push
into
push
fiaddl
ret
xor
rcl
jbe
mov
notb
add
push
in
ds
ss
adc
xor
sub
adc
icebp
dec
jo
jmp
inc
leave
out
push
fwait
mov
push
add
jle
mov
jne
testl
cmp
sbb
sbb
and
adc
insb
mov
pop
mov
sub
lcall
jne
adc
sub
or
add
inc
ret
pop
hlt
xor
pop
popf
cmp
arpl
outsl
push
jmp
add
scas
insb
lock
cmp
mov
dec
jae
gs
pop
add
and
add
sbb
mov
xor
sbb
xchg
sub
sub
jne
or
addl
cltd
pop
sub
dec
aaa
in
test
or
push
xchg
inc
pop
aas
int3
das
or
add
fiadds
inc
jge
add
mov
dec
add
out
push
sub
cli
out
into
or
lds
lea
add
pop
out
xchg
add
nop
into
jle
push
pop
add
or
pusha
insl
add
jae
call
int3
fidivrs
jecxz
rcrl
outsl
jge
jno
sub
cwtl
out
rol
add
sti
xchg
das
repz
add
gs
shll
add
or
jno
fwait
adc
dec
dec
pop
jnp
mov
pop
rol
cs
je
push
add
xchg
js
add
mov
push
pusha
lock
fbld
in
sbb
movsl
mov
jbe
fiadds
popa
or
mov
add
cmpsb
stc
cmp
mov
push
out
ss
nop
incl
jo
mov
dec
sub
pop
mov
lcall
push
je
add
mov
lods
add
test
mov
shrl
fbstp
dec
and
push
aam
adc
stc
lret
jae
vpmacssdqh
inc
sbb
push
popf
mov
add
idivl
repz
pop
movsb
into
test
xorb
cmp
push
xchg
jns
mov
cli
loopne
and
or
add
pop
cwtl
sbb
lock
lea
lret
push
cwtl
out
test
push
mov
outsl
in
sub
dec
pop
dec
lds
mov
jmp
popa
ret
sub
dec
add
or
xor
push
pop
jno
stos
xor
shll
in
mov
jbe
movsl
mov
or
xor
mov
push
xchg
cmp
arpl
add
sub
push
lret
adc
add
inc
push
mov
and
pop
sub
sbb
ds
outsb
rolb
push
adc
fmull
add
ret
aam
jle
pop
test
sub
push
sbb
or
cmpsb
add
popf
jns
mov
or
jge
sbb
outsb
cltd
filds
jmp
stos
frstor
das
negb
mov
sub
add
mov
shl
adc
push
aam
xchg
fadds
xor
call
mov
movsl
in
std
sub
mov
enter
push
in
add
push
push
xchg
pop
add
in
cmp
in
add
sbb
push
hlt
pushf
xchg
rolb
or
out
xchg
push
or
cli
mov
add
std
sub
sub
mov
add
dec
mov
ja
mov
je
mov
or
sub
dec
push
cmp
ret
xchg
pop
pushf
push
mov
aas
cmp
cmp
mov
pop
push
push
cmpsl
nop
add
xchg
dec
dec
andb
mov
pop
cmpl
jae
and
jg
or
call
jae
or
sub
dec
sbbb
lods
xor
fnstcw
cmp
cmp
ret
xchg
add
lcall
and
stc
jbe
add
outsb
fdivl
add
mov
sub
xor
jg
les
sbb
rcll
add
insb
test
loop
pop
pop
sti
add
in
test
mov
ja
ret
mov
ret
add
push
fcoms
dec
mov
cmp
add
rcrl
in
aad
add
bound
add
pop
jnp
push
xchg
in
add
lcall
dec
incl
sbb
adc
adc
outsl
xlat
xchg
push
jno
addl
add
xchg
inc
outsl
mov
iret
test
jmp
les
adc
jg
inc
mov
int3
decb
pop
push
mov
mov
filds
inc
outsl
stos
cmp
add
pushf
sahf
fwait
or
adc
test
int
sbb
aam
stos
xchg
int
fldcw
sbb
popf
icebp
insl
imul
data16
mov
in
mulb
xchg
or
add
jne
sub
andb
pop
dec
icebp
mov
push
mov
rorb
add
cmp
push
mov
mov
jnp
das
pop
int3
into
shlb
pusha
pop
mov
pop
into
ljmp
add
shl
add
pop
push
sbbl
push
out
lahf
aaa
xlat
scas
out
pop
cld
arpl
pop
inc
push
add
aam
mov
cmpsb
iret
add
mov
mov
add
int3
fstpt
out
aas
jae
clc
adc
scas
fisubl
sbb
lea
dec
nop
sub
mov
sbb
xor
lods
xchg
push
dec
rclb
stos
mov
pop
loope
jo
push
gs
in
mov
add
mov
dec
pop
cwtl
shlb
lods
jns
or
adc
xor
subb
into
add
mov
das
jne
add
out
jo
les
cmp
nop
mov
call
and
fstps
daa
mov
sub
inc
add
mov
lods
or
imul
dec
popf
mov
or
test
adcb
call
cmp
push
test
pop
push
sub
xor
adc
lret
cmp
arpl
sub
sbb
xchg
movsl
ret
xchg
pusha
js
cmp
jae
xchg
mov
push
pop
sub
gs
mov
sbb
pop
add
adc
das
pop
jnp
add
push
cmp
jmp
cmp
mov
outsl
aad
test
add
mov
or
jo
xor
jnp
push
loop
or
add
test
add
inc
inc
outsb
xchg
add
repz
nop
push
out
prefetch
ds
call
inc
push
mov
inc
add
sti
add
loopne
cmpsl
mov
xor
jg
andb
sbb
or
inc
cli
lods
addl
stc
lcall
or
sub
test
inc
cltd
enter
rclb
xor
mov
push
fwait
repnz
jns
mov
ret
pop
xchg
pop
insl
test
adc
je
lock
iret
add
sub
or
aad
add
adc
loope
push
cmc
je
xchg
xchg
movsl
cmpsl
xor
test
ss
xchg
dec
add
and
div
icebp
sbb
adc
adc
dec
jae
or
add
or
inc
aaa
fldcw
sub
push
mov
sub
xchg
call
pop
and
fistps
add
add
dec
mov
sub
insl
and
cmovl
fldln2
leave
ja
mov
xorb
hlt
test
pop
cltd
pop
xchg
cwtl
jle
pop
fsub
xor
cltd
lret
movsl
lock
mov
lea
insl
jo
flds
aas
pop
sti
mov
arpl
cmp
sub
nop
xchg
adc
adc
push
jg
pop
hlt
dec
mov
lret
dec
add
jl
insb
inc
inc
movsb
cmp
jns
mov
mov
int3
push
lcall
sub
jae
popf
dec
fcmovu
loopne
cmpb
out
pop
or
sub
add
add
clc
dec
fldl
add
cmp
jmp
push
push
xchg
jbe
arpl
add
lcall
add
dec
mov
lret
xchg
adc
or
in
push
sbb
sub
mov
xchg
cs
lret
pop
jno
iret
pop
jne
insb
es
sub
imul
idiv
add
test
pop
ja
mov
repnz
popf
add
lock
loopne
jns
pop
mov
pushf
cmp
loopne
insb
ljmp
int3
mov
les
xor
xor
dec
mov
or
or
lret
add
pop
mov
jo
mov
insl
jmp
aam
jne
cli
rcrl
pushf
adc
stos
stc
sbb
push
jno
pop
aaa
dec
insb
push
adc
insl
fwait
pop
daa
inc
jp
xchg
sbb
rclb
pushf
test
xchg
jo
pop
mov
mov
bound
mov
leave
mov
mov
lods
insl
cmpsl
or
mov
push
inc
cmp
push
or
mov
movsl
mov
loopne
popa
mov
out
inc
pop
or
cld
mov
sbb
popa
or
sbb
pop
mov
mov
je
pusha
jne
jb
iret
into
pop
sub
pushf
jae
add
test
mov
ljmp
push
cmp
add
int3
loop
adc
jbe
push
aas
mov
push
stos
cwtl
lods
sahf
adc
fld
ja
addr16
es
mov
sub
and
jno
pushf
rcrb
mov
popf
and
rorb
or
add
pop
insl
push
dec
inc
xor
xchg
nop
subl
dec
add
scas
bound
aam
ljmp
push
stos
jae
push
xor
out
adc
push
sbb
jp
pop
mov
sbb
lds
out
or
clc
loop
add
inc
pop
dec
inc
jb
cmp
push
int
mov
adc
mov
add
imul
inc
repz
add
iret
call
pop
or
outsb
dec
cmpsl
leave
xor
fdivl
fisttpl
fnstsw
cmpsl
mov
xor
inc
xchg
push
xor
pop
subb
adc
xor
cmp
pop
movsl
call
pop
xchg
mov
push
into
inc
xchg
jb
ss
gs
insb
je
sbb
mov
or
lods
add
ds
xor
mov
icebp
pop
lahf
inc
add
push
call
push
or
fs
add
cmc
mov
cltd
neg
add
stc
hlt
insl
add
jno
mov
cmp
jne
int3
sub
or
add
in
jb
cmp
dec
jno
jp
dec
int3
inc
mov
cmp
enter
sbb
jb
sub
mov
cs
sub
sbb
mov
cs
pushf
fsubs
push
or
xlat
lret
aas
movsb
xor
adc
push
clc
lds
sbb
sti
push
xchg
int3
xbegin
gs
stos
add
stos
scas
mov
xchg
lret
mov
adc
mov
mov
rol
es
popa
pop
mov
adc
outsl
inc
lods
add
jp
stc
fcomp
inc
inc
jae
sbb
daa
pushf
inc
into
loopne
dec
add
jmp
cmp
ret
xchg
pop
shll
xor
lret
sub
data16
xor
lcall
mov
mov
jo
inc
cmpsl
fs
or
cwtl
popf
or
add
lcall
cmp
adc
pop
pop
pop
adc
sub
aas
push
in
orps
or
add
push
jg
lret
adc
test
jo
fadd
adc
xchg
lds
cltd
xor
in
xchg
cmp
jl
pop
es
push
sub
pop
adc
mov
xlat
adc
sbb
cmp
stc
repnz
mov
data16
js
and
addb
jp
psrld
jg
pop
sbb
movsb
nop
push
mov
adc
vpmullw
add
lods
add
icebp
inc
sbb
test
sbb
or
ficomps
mov
ret
or
in
cltd
mov
add
or
inc
add
bound
call
add
and
les
inc
movsb
addb
mov
mov
loope
add
cwtl
imul
sarl
mov
cltd
lret
add
push
cmpsl
aam
imull
dec
notb
lods
jge
xor
mov
jns
cmp
repz
pop
xor
bound
loop
test
xor
aad
xchg
sub
xor
sub
add
pop
and
sbb
mov
add
mov
or
call
dec
adc
add
sahf
scas
inc
or
addl
out
mov
dec
mov
adc
insb
ds
mov
ja
mov
add
faddl
add
jmp
push
cli
add
push
movsb
iret
mov
jge
dec
add
pop
stos
add
cmpsl
jb
clc
xchg
xor
inc
fidivrs
cmc
add
pushf
cltd
jl
test
pusha
arpl
add
xlat
xchg
pop
add
pushf
mov
and
or
clc
mov
xor
push
jne
daa
and
jns
stos
cmp
add
aas
cwtl
into
mov
cmp
mov
xchg
enter
jg
add
inc
std
es
or
mov
pop
movsb
leave
xor
nop
mov
or
add
jp
or
test
cmp
je
int3
cmc
dec
mov
fcomps
jne
dec
mov
into
jnp
or
out
iret
cwtl
adc
sub
in
push
jo
add
pop
fsubl
test
sbb
rorb
lock
sets
add
mov
mov
add
mov
xchg
out
add
cmp
in
sahf
imul
lahf
sub
or
or
xchg
or
fiaddl
shlb
xor
mov
iret
icebp
mov
sub
jo
add
or
sub
push
sbb
jae
pop
or
lret
rcl
add
scas
pavgb
sti
inc
cmp
outsl
movb
shrl
push
ret
pop
in
aad
add
cmp
js
mov
push
push
add
push
stos
iret
adc
add
dec
add
mov
cmp
lret
add
xor
mov
inc
je
movsl
and
lahf
pop
int
dec
test
sarb
jnp
adc
xchg
cmpsl
mov
xor
cmp
adc
test
add
sub
testl
and
push
and
rolb
add
sbb
jg
jb
add
jbe
mov
xor
stos
and
xchg
push
sti
xor
ja
push
add
repz
mov
add
cmp
or
cmp
testb
out
jae
loopne
add
mov
push
sub
stos
repz
adc
fnstsw
lods
testl
sub
imul
rolb
add
rolb
cmp
and
shlb
ss
push
movsl
les
mov
xchg
leave
xor
lret
jg
push
sub
addr16
test
add
je
dec
sub
imul
bound
or
sub
fcoms
aas
pop
xchg
jg
dec
cli
add
inc
mov
sbb
dec
jns
push
inc
out
adc
nop
js
scas
hlt
mov
add
push
lret
inc
stos
or
repz
in
adc
test
mov
add
inc
adc
dec
scas
mov
push
add
ljmp
mov
adc
outsl
mov
cmp
jno
push
int3
xchg
sbb
sub
int
enter
call
in
pushf
or
adc
adc
mov
push
or
jo
cmpsl
lods
clc
add
aas
movl
adc
fcomps
cmp
sub
and
sti
sbb
and
or
xor
or
dec
and
sub
sub
mov
inc
inc
mov
pop
inc
mov
test
mov
inc
push
mov
daa
mov
pop
lret
ror
movsl
ja
rolb
sbb
or
adc
or
inc
xor
sbb
mov
adc
int3
sbb
adc
adc
jg
mov
xor
dec
int
adc
sbb
push
lahf
sub
and
repnz
aam
sbb
and
cmp
dec
xor
ljmp
sbb
mov
and
and
sbb
mov
and
call
or
test
xor
sub
pop
mov
cmp
mov
call
enter
es
movsb
call
cmp
xchg
push
sbb
add
cwtl
pop
xor
pop
xchg
push
sbb
inc
cmp
cmp
inc
adc
add
aad
push
lock
inc
adc
and
inc
es
lods
jl
ret
sub
sub
push
sub
das
dec
sub
enter
push
pushf
int3
rcrb
rcrb
xor
sub
xchg
pop
dec
dec
and
adc
insl
scas
in
adc
sbb
and
jle
mov
or
rcll
and
pusha
lock
cmp
adc
sbb
test
xor
shll
xor
hlt
addr16
mov
push
ljmp
adc
movsl
xor
and
in
mov
sti
sbb
mov
aad
scas
cwtl
add
nop
das
cli
mov
das
sahf
jnp
sbb
pop
dec
shll
mov
push
pop
push
fmull
int
inc
pop
pop
mov
cmp
ja
cmpsb
sub
pop
shrb
pushf
lods
jo
sbb
or
insl
push
ret
cmp
in
jecxz
and
pop
pop
rcll
jg
xor
fisubs
js
lcall
cwtl
test
sbb
sbb
ja
or
xor
je
dec
into
scas
jl
les
add
outsl
xchg
mov
into
scas
jne
cli
mov
test
scas
mov
xchg
int
nop
in
jecxz
jo
mov
xchg
shlb
mov
divl
jle
loopne
out
cwtl
fidivrl
lea
sbb
add
jns
sub
and
adc
fwait
sub
call
movsb
andl
mov
push
adc
lds
shl
mov
jp
je
inc
mov
sbb
cmp
push
sbb
xchg
fsubp
add
and
daa
scas
and
and
sub
push
sub
aaa
pop
jne
jbe
add
pop
loopne
aam
and
push
int3
les
dec
inc
mov
xor
outsb
lahf
inc
pop
pop
loopne
mov
xor
jnp
inc
aas
pop
cmp
xor
pop
call
sbb
cmp
pop
xor
cmp
shrb
sbb
push
insl
es
xor
hlt
xchg
push
mov
dec
call
mov
push
pop
dec
and
int3
and
nop
call
pusha
addr16
adc
cwtl
cmp
xor
push
push
in
mov
pop
sub
adc
daa
aas
and
jge
cmpsb
sbb
xor
pop
sti
ljmp
adc
sarb
into
adc
pusha
bound
ss
adc
add
lahf
xchg
in
sbb
pushf
fistps
sub
jo
lret
decb
rol
xor
sbb
orb
or
push
or
int3
adc
push
xchg
and
les
sar
mov
jb
sarl
fsubrl
hlt
and
pop
mov
jge
inc
sub
dec
mov
sub
andb
out
std
xchg
mov
fs
ja
dec
ss
movl
filds
clc
fmul
mov
cmpsl
sub
ds
insl
or
xchg
sub
test
mov
enter
nop
std
lahf
les
sbb
mov
aas
add
adc
scas
pushl
shl
es
das
fwait
mov
bswap
pop
shlb
scas
pavgb
xchg
mov
dec
pop
rcrb
insl
sub
lods
out
xor
movsb
andb
mov
mov
imull
mov
pop
cld
lahf
outsl
cmpb
push
and
addr16
scas
lahf
mov
shr
in
pop
ficoms
call
outsl
bound
out
mov
shll
das
test
outsl
xchg
cmp
stc
sub
adc
push
mov
pushf
add
loopne
sub
adc
mov
test
jecxz
lods
icebp
mov
dec
add
outsb
hlt
scas
sub
mov
test
jbe
mov
add
mov
es
scas
mov
push
aam
fs
insl
fsubrs
ja
rcrl
enter
cmp
cld
and
cmp
dec
pushf
pop
or
es
adc
nop
mov
testl
adc
icebp
pop
dec
fidivrs
ds
jg
adc
sub
push
adc
xor
aas
aas
cmp
jle
cmpsb
or
sbb
cmp
mov
xor
test
nop
push
mov
and
mov
and
and
cli
mov
dec
pop
out
leave
pop
push
jnp
mov
jp
repz
sbb
sarb
and
pop
sahf
out
mul
push
frstor
daa
int
adc
and
data16
adc
sar
lret
and
and
add
xchg
pop
push
cld
mov
fbld
jl
and
adc
sub
adc
repz
sub
xchg
cmp
push
es
jg
or
pshufw
shl
mov
push
push
dec
mov
out
addr16
mov
in
ficompl
inc
pop
sbb
scas
sub
cwtl
pop
push
push
cmpsb
jge
xor
out
fbstp
iret
call
sub
nop
popf
push
into
jns
push
rorb
in
xchg
pop
xor
enter
pop
cmpsb
in
in
insl
lahf
dec
jecxz
nop
fsubl
mov
jl
movsl
jnp
inc
adc
aam
in
rclb
es
iret
vpmacssdd
andps
lods
jle
dec
push
xlat
sub
shlb
push
jg
fidivrs
sub
add
dec
mov
scas
mov
std
add
cld
aas
test
scas
out
lds
aaa
popf
dec
mov
lea
call
rclb
cmpsl
outsb
lods
out
cmpsl
pop
xchg
xor
mov
pop
xor
mov
adc
call
sti
xor
ret
mov
add
mov
nop
adc
aam
fisttpll
in
inc
pop
xchg
dec
push
arpl
daa
sbb
movsb
sbb
inc
jne
in
inc
push
lock
adc
lea
pop
dec
jo
pop
mov
mov
popa
stos
iret
repnz
shrb
sub
cmp
or
scas
call
or
mov
shlb
sub
xchg
push
bound
xchg
fcomip
sbb
pop
jecxz
arpl
rcrb
mov
fsubrp
imul
xchg
xor
paddd
cmc
pushf
das
aam
icebp
sub
bound
mov
rorb
mov
fcompl
inc
pusha
inc
test
repz
cs
mov
into
in
ss
rcr
in
ss
nop
pop
cwtl
mov
xchg
iret
inc
mov
nop
adc
push
xor
mov
mov
and
clc
scas
outsl
xor
sub
add
and
mov
in
xor
xor
in
push
sar
inc
pop
push
stc
cmpsb
jmp
arpl
ljmp
xchg
outsl
sub
das
rcrb
dec
pop
mov
sub
push
nop
sbb
and
pushf
pop
addb
ja
dec
sbb
das
jae
cmp
xor
push
imul
jp
inc
scas
cmp
nop
cmp
dec
lock
adc
push
iret
ljmp
jg
out
daa
data16
scas
loope
outsl
cmp
fimuls
addr16
loopne
mov
arpl
lock
enter
push
sub
jp
das
iret
decl
mov
jg
shrl
adc
pop
mov
mov
in
movsl
dec
out
in
push
orb
adc
lock
rol
jne
enter
lods
cld
xchg
push
xchg
add
fiaddl
arpl
jl
inc
test
dec
sub
lock
adc
mov
mov
xchg
and
outsl
outsl
and
std
sbb
or
int
cs
enter
cld
xor
out
pop
pop
ja
and
stos
dec
adc
adc
cld
mov
nop
xchg
mov
add
ja
popf
xor
in
xor
das
int
cmp
sahf
fistpl
negl
push
faddl
adc
push
pop
mov
dec
imul
aad
std
stc
lock
sub
bswap
enter
and
push
pminsw
adc
xchg
and
inc
mov
lret
dec
adc
imul
pop
aam
out
sbb
mov
dec
dec
xchg
shlb
das
mov
rorl
push
nop
in
push
pop
lods
not
adc
loopne
sub
test
dec
xchg
cmc
jb
xor
inc
test
movzbl
test
mov
cmp
nop
hlt
clc
fistpl
sub
ljmp
shlb
jo
fcomps
nop
adcb
pushf
sti
push
imul
rolb
pushf
jp
cmp
repnz
push
dec
mov
mov
cmp
xchg
lods
pop
xor
out
aas
rorb
nop
pop
int
push
fistpl
aam
adcb
jnp
nop
cwtl
insl
lods
icebp
push
jle
jle
push
addr16
fld
popf
out
popf
xchg
in
out
fildl
aas
in
mov
sub
pop
subl
add
inc
mov
sub
hlt
lods
sti
mov
cmc
mov
lock
fcmovb
mov
movsb
lahf
inc
sbb
fwait
mov
outsl
pop
and
nop
cmp
cmc
ss
addr16
or
popl
or
out
test
adc
pushf
mov
out
es
out
cmp
mov
jne
pop
lock
rorl
mov
adcl
xchg
bound
dec
out
and
imul
int3
mov
das
aam
sub
cmp
push
nop
jo
xor
sbb
sub
mov
add
pop
lcall
mov
shl
rcrb
std
push
test
sarb
cmp
or
pop
adcb
lds
shrb
xlat
jmp
mov
sti
wrmsr
cmp
xor
sbb
adc
clc
in
lret
sub
push
jb
aaa
mov
push
rcrb
pop
setle
and
push
cwtl
call
in
cmp
negl
jnp
and
ret
fidivrl
push
scas
insb
cld
cs
into
dec
sub
mov
movsl
ficoml
rclb
mov
mov
shrb
fsubrp
fiadds
subl
xchg
push
inc
cmpsb
mov
adc
test
fldcw
enter
ja
sub
adc
pop
test
fmul
sub
cs
fs
mov
pop
out
mov
rolb
ret
scas
dec
clc
ret
scas
test
out
ficoml
lea
jo
xor
adc
mov
sahf
push
popf
out
arpl
ret
mov
leave
call
xor
adc
cltd
test
nop
mov
inc
jo
dec
cli
outsl
aad
rorb
shrb
insl
repz
bswap
jo
bound
jp
jl
gs
xchg
sarb
jp
call
out
xchg
xchg
fisttpl
sbb
les
inc
cwtl
mov
andb
or
mov
int3
add
adc
sysexit
call
in
cmp
mov
lahf
ficomps
and
dec
lock
lret
rcl
or
sbb
xchg
lahf
in
call
cmp
clc
hlt
sbb
ret
cmp
cmp
ficomps
pop
mov
movsb
xchg
push
test
jmp
push
aam
int
bound
pop
mov
pop
iret
xor
and
nop
cli
jo
lea
cmp
sub
jle
mov
into
mov
lock
aam
loopne
xor
fisubrl
jo
lods
mov
fistpll
xchg
cld
pushf
scas
aaa
fsubs
dec
cwtl
inc
push
jg
gs
mov
lods
and
mov
inc
jae
adc
sbb
mov
jno
sahf
popf
xor
sbb
add
fnstenv
and
xor
mov
push
mov
into
test
int
jp
jmp
mov
stos
in
call
lods
insl
push
or
das
sbb
cld
mov
ffreep
aad
mov
fildll
adc
daa
sub
lret
mov
int3
clc
into
xor
jl
leave
pop
int
shlb
push
sarl
cmp
sbb
adc
cmp
adc
pop
sbb
jl
testb
xor
dec
rorl
push
cmp
movsb
adc
lods
fistpl
mov
push
pop
xchg
aam
dec
fs
fisubrl
addr16
cli
mov
mul
push
mov
adc
test
mov
sarb
xor
movsb
sbb
outsl
sbb
icebp
fbstp
and
mov
test
adc
and
mov
fisubrs
jl
pop
in
insl
xor
orl
xor
out
shrb
dec
xchg
mull
stos
mov
mov
aam
pop
rorb
aas
sbb
pop
mov
jg
outsl
roll
mov
xchg
xchg
test
mov
nop
mov
lea
pop
out
lcall
jbe
and
lahf
pop
and
jae
push
enter
mov
lock
int
outsb
scas
mov
mov
mov
mov
mov
addr16
into
imul
mov
jae
ja
pop
cmp
clc
daa
cmp
out
jnp
jg
xor
pushl
pusha
inc
jnp
push
push
mov
sub
mov
enter
rol
pop
popl
sbb
scas
jb
and
adc
xchg
popf
pop
test
adc
mov
push
cld
mov
andb
aas
adc
sub
adc
sbb
outsb
mov
or
or
lods
or
ja
mov
xchg
inc
movsb
jl
pop
insb
cld
mov
ljmp
das
adc
addr16
gs
inc
loop
mov
jge
pop
xchg
jge
mov
cmp
pushf
adc
mov
push
dec
movsb
aas
jg
jae
mov
dec
pop
dec
aaa
fsubs
mov
lock
xor
mov
jo
xor
stos
xchg
outsl
adc
and
jl
shr
insb
mov
xor
sarb
jb
sar
jae
stos
push
xchg
ljmp
data16
and
xchg
movsb
movsb
sysret
sbb
ja
setns
lock
xor
xchg
sub
out
xchg
push
out
mov
mov
dec
lock
adc
pop
loope
sub
push
push
jbe
cld
adc
jg
mov
inc
mov
mov
and
lcall
fldenv
mov
pop
cmc
or
pop
outsl
nop
push
stos
call
addr16
jecxz
mov
pop
gs
xchg
aas
in
pop
addr16
pop
fistl
inc
mov
cmpsb
scas
std
and
decl
sbb
sti
popa
mov
pop
lret
into
mov
lock
mov
pop
mov
sbb
mov
scas
lods
bound
test
mov
fprem
mov
adc
ljmp
pop
dec
jbe
das
in
mov
sub
sub
icebp
sub
vpcomd
xchg
mov
cld
inc
dec
int
add
inc
xor
xor
shrb
cmp
movb
mov
lds
aas
dec
sbb
aaa
repz
xchg
loopne
sbb
lcall
push
adc
sbb
cmp
aam
and
cmpsb
jg
or
push
sub
xchg
push
push
push
mov
cmpsl
xchg
in
push
pop
push
and
add
adc
dec
adc
cmp
popa
pop
outsl
xchg
and
dec
pop
jp
les
xchg
mov
push
ja
fisubrl
push
outsl
nop
mov
lahf
sahf
xor
das
pop
rcrb
test
and
sbb
mov
sub
ds
negl
fdivs
scas
and
mov
lock
push
iret
inc
mov
stc
mov
lock
dec
enter
imul
and
lret
mov
cmp
das
nop
jno
lock
mov
rolb
dec
nop
mov
sub
int3
cs
sub
mov
lods
wrmsr
daa
vmwrite
pop
iret
sub
roll
mov
jge
add
sbb
movsb
cmpsl
xchg
iret
pop
es
movsb
xchg
iret
rcrl
sub
pop
in
sub
es
fdivs
imul
adc
out
mov
mov
punpckldq
sbb
cmp
xlat
push
cli
mov
loope
cltd
push
push
loop
dec
out
sub
add
lods
push
ret
cmpsb
pop
jo
mov
stos
shlb
cmp
ds
mov
fsts
xchg
cmc
sub
mov
and
and
jo
int
icebp
sub
dec
and
dec
sub
data16
aam
outsl
adc
shll
pop
mov
mov
icebp
mov
fcoms
dec
xchg
and
pop
xchg
sbbl
mov
jae
loope
sbb
adc
jmp
test
outsb
ss
int
jb
lret
add
jg
add
jo
push
inc
mov
jo
cwtl
gs
pop
mov
adc
sub
call
inc
movq
lahf
imul
sbb
in
addr16
loopne
mov
push
lahf
ljmp
test
jp
mov
sbb
push
sti
pop
pop
dec
dec
shlb
into
dec
jl
lock
ja
add
or
adc
or
icebp
xlat
mov
adc
mov
ss
mov
lahf
xor
pop
int3
adc
gs
adcl
outsb
rcrb
cmp
aaa
xchg
lods
xor
shll
pop
nop
and
stc
sub
call
xchg
or
cmp
test
lds
in
test
sub
sub
sub
push
cmp
iret
cli
cmp
push
movsb
je
lock
ret
fnsave
sub
and
push
subb
aad
pop
fxsave
inc
js
xchg
cmp
sbb
test
pushf
push
xchg
pop
lods
dec
shll
xor
and
sbbl
push
iret
scas
daa
rclb
and
push
sbb
js
hlt
mov
or
sub
test
into
scas
push
and
add
jnp
xchg
push
aas
adc
repz
adc
js
out
and
sbb
push
pop
pop
pusha
lock
mov
call
pop
sub
or
jne
xchg
pop
and
inc
mov
inc
les
jl
outsl
cmp
std
sarb
jp
cmp
xor
push
add
cmp
xchg
cmp
scas
sbb
xor
sbb
enter
mov
sbb
aaa
xor
arpl
mov
inc
and
xchg
sbb
inc
add
jl
xchg
adc
divl
movsb
cmpsb
popf
cmp
push
sbb
jb
jae
ss
das
push
cmp
add
out
fstps
mov
icebp
iret
fdivr
pop
jmp
push
inc
mov
ja
pop
mov
popf
fsubl
mov
out
cltd
inc
sti
fistps
int3
ret
xorl
adc
adc
ffree
mov
nop
es
cmp
mov
push
adc
popf
dec
sbb
cmp
sahf
es
mov
lods
pop
jb
sbb
xor
std
lcall
dec
xor
rolb
int
sbb
das
xor
mov
nop
fcom
aas
rorb
xor
stc
adc
shll
nop
js
movsl
dec
rcrb
push
ret
cld
push
sbb
jg
shrl
pop
ja
not
das
inc
out
fbld
fcompl
xchg
mov
loopne
xchg
sub
jae
scas
push
inc
cmp
into
and
test
mov
cwtl
imulb
xlat
scas
ret
aaa
xor
mov
sub
push
imul
adc
mov
mov
jg
dec
outsb
inc
lea
call
fsubs
nop
lods
cld
hlt
aam
sysret
xor
fs
inc
inc
cltd
stos
daa
push
jl
int3
pop
das
into
and
fldl
jecxz
cmp
cmp
pop
fsubrl
sub
cld
in
cld
cwtl
dec
inc
jbe
pop
xchg
int
xchg
mov
dec
push
push
lods
std
sbb
pop
lods
test
sbb
dec
push
sbb
xor
pop
dec
aad
lods
xor
sarl
shl
shr
sub
outsb
pusha
clc
or
xchg
sti
stos
xor
clc
out
lods
xchg
jg
subb
cwtl
and
and
push
andb
dec
jo
cmp
adc
mov
call
scas
xlat
lock
sbb
and
jecxz
shll
scas
addr16
pushf
mov
ja
fsubl
xlat
js
cmp
xor
lock
push
std
jle
inc
imul
ret
shlb
inc
mov
jnp
add
cmpsb
sbb
fwait
pop
push
data16
pop
fisubl
inc
dec
jne
nop
sub
jns
rolb
cwtl
mov
clts
sarl
inc
dec
enter
loope
arpl
sbb
pusha
jb
cmp
aam
outsb
cmc
addr16
and
lods
outsl
add
out
pop
ja
push
inc
adc
sar
and
jl
ds
dec
xchg
into
call
dec
ucomiss
movd
sub
sahf
call
into
loopne
and
lods
ja
hlt
in
call
scas
push
pop
fsubr
jo
imul
gs
mov
pop
cmpsl
out
aaa
push
and
cwtl
mov
jne
inc
frstor
and
cmp
and
pop
shrb
adc
sbbl
bsr
test
push
call
mov
packsswb
rcrl
ret
jne
adc
inc
lods
jbe
popa
daa
xor
frstor
cmpsb
jge
mov
addr16
mov
xchg
sbb
repnz
std
enter
jmp
icebp
outsl
or
pusha
loope
std
dec
clc
out
xor
repnz
pop
rcl
pushf
jne
mov
aas
repnz
imul
xchg
dec
inc
xchg
cmp
xchg
int3
fbstp
fs
pop
test
lea
jnp
out
jg
xchg
and
jmp
inc
dec
mov
es
mov
push
cmp
pop
int3
stos
dec
sahf
jle
cld
out
push
cmp
add
arpl
aaa
xchg
mov
jb
lock
iret
sub
test
into
das
and
pop
or
dec
add
or
repz
cmp
lods
hlt
mov
das
mov
lods
dec
mov
cmc
call
loopne
lcall
mov
gs
inc
push
cs
mov
negb
js
negb
jo
iret
mov
in
sbb
push
xchg
xchg
in
sbb
jo
out
scas
test
push
test
xchg
test
aam
je
loopne
ret
add
mov
into
int3
loop
jnp
insl
sub
and
sbb
inc
or
ret
cwtl
mov
mov
sbb
out
push
cwtl
push
aam
sbb
cmp
ds
iret
lret
shrl
scas
into
pop
cs
lahf
mov
pop
outsb
xchg
and
xchg
out
pop
pop
and
jg
pop
das
jle,pn
test
xchg
test
pop
pushl
xor
std
pushf
xchg
cwtl
cs
adc
xor
sahf
test
add
lahf
scas
push
xchg
movsbl
fmul
push
rol
push
loop
lods
movsb
movsl
daa
inc
lods
pop
pushf
cld
sti
sub
ja
jp
push
sahf
xor
mov
mul
cmp
xor
and
pop
addr16
rep
mov
sub
mov
xchg
jo
cltd
ficomps
out
xchg
call
ret
inc
xchg
jbe
addb
aas
mov
dec
nop
ljmp
lock
and
clc
fsubrl
push
fucomp
and
cmp
lock
inc
insb
cs
aaa
sub
mov
stc
loope
mov
add
mov
rorb
fcoml
cmp
test
fcmovnu
cmpb
and
fcmovu
sbb
xchg
nop
rorl
mov
es
mov
fcmovnbe
outsb
cld
add
enter
in
das
add
inc
jp
cmp
jo
aam
test
loopne
fbstp
pop
cmpsb
not
lock
inc
aaa
shrl
mov
pop
lds
adc
mov
push
data16
xchg
or
fsubs
lock
pop
lods
arpl
mov
stos
rolb
cmp
sbb
in
mov
adc
sub
in
dec
sub
lahf
jns,pn
insb
loopne
or
sbb
in
insl
pop
push
dec
out
fnstenv
mov
ds
xchg
lock
pushf
mov
mov
sar
mov
xchg
enter
pop
sub
jl
dec
rcrb
jle
fcoms
push
adc
pushf
sbb
les
daa
and
sbb
xor
lock
cmpb
cmp
push
jne
js
rcrl
cmp
push
outsl
mov
arpl
lea
push
cmpsb
ss
lods
lret
mov
adc
rolb
inc
fcmovnb
clc
out
mov
cmp
fists
sbb
flds
xor
in
cmp
fistpll
movl
xchg
std
jecxz
pop
cmpsl
pop
xor
pop
mov
xor
das
loopne
rclb
jno
leave
jle
and
ja
scas
xor
out
nop
outsl
das
loopne
bound
test
pop
outsb
out
xor
cmp
sbb
pop
nop
xor
and
jecxz
ret
pop
lock
or
xchg
cmp
out
rcll
xlat
xor
nop
out
and
les
add
pop
aam
sub
xor
shl
out
mov
sub
mov
push
inc
mov
nop
and
pop
rolb
lahf
movsl
and
xor
sub
pop
xchg
lret
sub
mov
addb
jecxz
cmpsl
lods
pop
fcoms
and
mov
int3
and
and
pop
ja
and
mov
adc
daa
pusha
je
inc
sub
int
mov
jno
xlat
aas
inc
sub
push
jb
test
mov
sbb
mov
fxam
fs
push
lods
iret
xchg
lods
ret
lds
je
or
or
iret
mov
inc
into
mov
or
pop
mov
lcall
push
cmc
ror
call
push
pushf
movl
pushf
lea
jmp
movl
pushf
pushf
call
lea
jae
jmp
pusha
pushf
call
jmp
rcr
sub
mov
add
cmc
mov
rol
stc
mov
call
testl
daa
jb
add
into
subl
or
out
negb
daa
imul
sbb
fcoms
jmp
or
mov
cld
ja
stc
jmp
lret
mov
sub
in
xchg
outsl
dec
stc
sbb
call
cmp
enter
xchg
push
cltd
inc
push
and
sti
jl
fwait
int
aam
pop
roll
jge
jno
and
mov
cmpl
pop
out
mov
jbe
lods
das
xchg
test
in
test
stos
add
xor
sub
into
daa
xchg
cmp
or
in
movsl
in
lret
lods
push
or
pop
mov
and
mov
xor
mov
aad
imul
add
xchg
jmp
stos
and
test
js
xchg
inc
rcrl
ljmp
pop
mov
in
lret
ja
cmp
insb
push
and
inc
mov
out
add
stos
add
mov
int3
inc
pushl
bt
pusha
rol
movb
stc
jmp
xchg
or
and
xor
mov
push
push
rclb
lahf
fcoms
add
fdivl
shrl
lods
xchg
mov
inc
push
imul
or
xor
jbe
loopne
dec
dec
add
sbb
in
push
add
mov
sarb
nop
sbbb
mov
jbe
pop
mov
xlat
or
or
std
ficoml
lret
sub
xchg
or
sar
lock
sti
xor
mov
clc
mov
push
arpl
inc
and
lret
inc
imul
jecxz
inc
enter
shr
in
and
jmpw
mov
adc
lret
add
rcl
fwait
fs
mov
push
cmp
mov
lret
cs
jmp
jmp
jecxz
inc
xor
xor
inc
xchg
loope
loop
idivb
mov
add
es
mulb
loope
add
clc
mov
or
insb
add
adcl
xchg
shr
out
pop
mov
mov
xor
cmp
pusha
out
stc
adc
add
clc
sbb
or
movl
pushf
movzbw
push
mov
clc
bt
cmp
jmp
pusha
adc
sbb
mov
sub
bts
mov
adc
stc
mov
jmp
movsbw
mov
jmp
movb
jmp
stc
cmc
pushf
cmpb
pushf
jmp
dec
test
push
clc
mov
xor
jmp
push
clc
mov
shld
mov
pusha
bts
jmp
test
mov
subb
push
pop
mov
cwtl
jo
jg
aas
xchg
sti
lock
int
dec
mov
dec
mov
xchg
push
aas
pop
ss
and
or
les
pop
cld
mull
mov
aaa
push
jns
fcoms
mov
es
mov
push
push
push
lcall
orb
dec
movsb
popl
fs
lods
add
mov
sbb
mov
mov
mov
stos
add
or
bound
repz
mov
lods
mov
stos
xchg
test
es
movsl
jmp
mov
cmp
pushf
jge
xor
or
idivb
push
jge
sbb
popf
mulb
movsl
popf
cmpsl
add
push
jne
aaa
jp
jbe
push
fidivl
inc
jmp
jmp
pushl
popl
pushf
push
push
pushf
pushl
ret
add
pushl
mov
pushl
mov
lea
jmp
mov
jmp
cmp
popa
xchg
mov
push
aas
cmp
push
jg
adc
jg
jg
orl
sub
pusha
ljmp
shll
scas
es
adc
in
add
adc
stos
gs
enter
das
and
jecxz
jb
outsb
popf
into
mov
sbb
xor
bound
in
call
les
enter
movsb
rorl
call
lea
shr
or
mov
not
sbb
sar
shr
add
mov
not
mov
pusha
mov
mov
lods
stc
pushf
bt
ror
call
add
call
jmp
lea
je
clc
push
sub
clc
movw
cmc
cmp
call
lea
ja
call
lea
jae
jmp
call
jae
pushf
movsbw
movzbw
mov
not
xchg
mov
pushf
not
pushf
pushf
mov
jmp
pushf
call
add
test
pushf
pushf
cmc
cmp
pusha
mov
jmp
mov
into
pop
fwait
cmp
xchg
sbb
push
fstl
fs
sub
or
mov
cli
in
or
decl
fcomp
notl
jle
inc
sub
ja
mov
fnstenv
rorb
dec
insb
daa
or
insb
pusha
mov
push
lea
jne
cwtl
pusha
movb
call
nop
or
scas
mov
cmp
cmp
fwait
jl
cmp
mov
jb
mov
in
lret
adc
jecxz
test
cmc
jge
and
mov
mov
sbb
lock
lods
jne
xor
repz
cmp
aam
dec
inc
adc
sbb
push
jnp
sbb
add
popf
cmpsl
jmp
mov
call
imull
in
xchg
and
xchg
fidivl
push
jp
cmp
mov
inc
test
enter
mov
pop
cmpsb
pop
mov
sub
stc
cmc
fsts
pop
push
stc
adc
out
push
ja
insb
js
mov
adc
inc
push
dec
das
inc
adc
in
stos
or
adc
pushl
popl
mov
cmp
pushf
cmp
push
lea
ja
shl
sbb
sbb
sub
pushf
shr
lea
add
clc
clc
mov
mov
cmp
mov
cmc
bt
repnz
pusha
lea
jne
pusha
pushl
mov
lea
jmp
mov
add
jl
stc
cmc
cmc
test
jle
je
call
lea
ja
stc
push
imul
cmc
cmp
add
pusha
movb
pusha
pushl
lea
jmp
in
sbb
aad
cld
enter
imul
jl
xchg
je
sbb
pop
sub
xchg
fists
fdivs
mov
mov
cmp
ljmp
mov
ja
sti
fidivrs
jae
push
pop
dec
je
adc
inc
enter
xor
lret
into
gs
scas
es
loopne
loopne
pop
dec
cmp
mov
push
adc
insw
cmp
xchg
inc
xchg
jbe
push
push
scas
jo
pop
xor
xchg
pop
xor
pop
pop
push
push
mov
mov
mov
push
sahf
jmp
adc
and
fwait
adc
hlt
mov
negb
stos
or
pop
pusha
jmp
inc
cmc
mov
pushf
jmp
cltd
outsb
sub
ljmp
test
inc
dec
dec
loop
insl
es
lahf
xor
ds
mov
mov
cmp
dec
sbb
mov
mov
dec
sbbl
mov
and
rolb
push
and
movsl
sub
dec
test
add
xchg
cmc
ret
shrl
pop
adc
lret
mov
je
mov
xchg
std
stos
inc
adc
xor
sub
stc
es
ficoms
xchg
mov
or
icebp
lret
movzbw
bt
bt
sub
rcl
mov
add
shl
mov
jmp
bt
test
pushf
call
pushw
popfw
pushf
jmp
add
gs
in
movsl
sub
dec
in
test
fsubrl
int3
negb
data16
lds
dec
xor
fnsave
xchg
idivl
push
mov
dec
outsb
and
cs
ja
popl
cmpsb
gs
mov
jge
cmpsl
fnstenv
imul
inc
or
test
lcall
loopne
inc
imul
insb
popf
add
insb
loopne
stos
leave
loop
adc
aas
aam
push
stos
or
xchg
stos
push
cmp
pusha
pushl
lea
ja
call
pushl
movl
pushf
lea
jmp
call
cmc
push
add
pusha
pushf
push
lea
jmp
movb
lea
ja
shl
sub
shl
and
call
movl
mov
pushf
pusha
pushf
lea
jmp
pushf
sub
movl
lea
jmp
lea
ja
pushf
lea
jmp
cmp
call
pushl
jmp
lea
call
pushf
movb
lea
jae
cmp
xor
call
movb
movzwl
clc
jmp
mov
push
bswap
mov
not
mov
pusha
pushl
pushl
push
pushl
ret
pop
lods
movsb
sub
ljmp
cmp
fdiv
xlat
adc
push
or
in
cli
imul
ja
pop
sbb
push
or
pop
lock
add
enter
jns
push
jb
adc
jle
stc
xor
or
out
cmp
pusha
add
ret
dec
stos
or
cmc
iret
lea
jne
not
jmp
pushf
movb
lea
ja
cmc
sub
clc
shl
shl
shr
add
xor
mov
bt
sar
setle
mov
bt
repnz
call
push
mov
jmp
add
clc
movb
bt
test
cmp
pusha
lea
jb
call
movl
pushf
jmp
push
mov
movl
pushl
jmp
lea
je
pusha
call
movzwl
adc
neg
jmp
movl
pushf
pushf
mov
movw
lea
jmp
jmp
call
pushf
movl
push
pushf
pushf
lea
jmp
lea
call
pusha
call
cld
or
pop
adc
subb
add
int
aam
shr
stos
pop
in
pop
callw
dec
dec
icebp
stc
icebp
std
cli
xchg
lcall
stc
sub
cltd
cmp
mov
mov
cmpb
out
insl
or
add
stc
jb
adc
and
or
dec
xor
cld
mov
adc
insl
and
call
add
jnp
lret
lcall
or
lea
ja
call
mov
cmpb
mov
movb
lea
jne
bt
shl
mov
cmc
push
push
add
clc
pusha
call
lea
call
push
clc
pushf
cmp
pushf
lea
jae
push
cmc
clc
push
cmp
push
call
pusha
movw
movl
push
mov
push
push
lea
jmp
xchg
mov
jp
bswap
mov
movsbl
pop
bswap
pop
sets
movsbw
movzbw
pop
pushf
pushf
push
movw
mov
push
pushf
movzbl
push
mov
mov
movw
pushf
pushl
ret
jmp
std
pop
jg
push
pop
adc
clc
pop
js
sbb
push
mov
dec
xor
leave
adc
mov
aad
xchg
xor
subb
mov
clc
push
popf
fs
incl
outsl
mov
pop
xor
je
sub
scas
int
sub
mov
and
xchg
out
out
data16
stos
or
push
imul
movzbl
movsbw
pushl
popl
mov
push
cwtl
bswap
mov
push
mov
pushf
lea
pusha
pushl
mov
movl
jmp
pop
push
xor
jg
ljmp
std
cli
xor
mov
iret
ret
and
cld
and
cmp
push
imul
jnp
adc
sbb
shrb
dec
xchg
pop
sbb
aad
push
notl
dec
cltd
mov
dec
lods
popf
dec
sbb
ss
cmpsl
int
push
fstpl
loop
cmpsl
jae
mov
push
push
and
mov
lret
les
adc
aam
push
sub
dec
jne
sub
insl
mov
and
les
fcoml
adc
fstl
jns
aam
dec
movsl
or
pop
sub
jecxz
inc
mov
cwtl
cmp
sbb
lods
dec
int
xor
outsb
loopne
cs
cmpsb
jae
lods
push
fisubrl
add
lcall
rcll
jns
push
mov
addb
movsb
push
insl
dec
xor
pop
mov
loopne
push
je
sbb
hlt
js
fisubrl
xor
pcmpgtw
jl
int3
call
lea
pop
xor
ja
into
lret
jae
mov
or
mov
jge
int3
gs
or
mov
adc
mov
jne
xchg
cmp
sub
add
fwait
pushf
xchg
cmp
pop
xchg
cld
aam
jnp
mov
fistl
pop
xor
lret
or
mov
xchg
jnp
pop
scas
push
jge
lcall
and
push
dec
idiv
inc
jmp
test
test
call
xor
push
pop
lcall
pusha
mov
mov
inc
lea
push
call
call
add
xchg
xor
add
jmp
xchg
or
loope
dec
push
popa
insl
xor
mov
dec
orl
movsl
or
jbe
inc
inc
movsl
or
in
mov
into
and
into
add
stos
adc
stos
xchg
mov
pushf
add
not
cmp
mov
movw
test
test
pusha
call
lea
add
inc
mov
inc
mov
cmc
test
pusha
repnz
push
lea
jne
movzbw
movb
setl
lea
push
seta
not
call
not
push
bswap
mov
pushl
call
call
str
push
jmp
push
call
icebp
imul
into
pop
mov
pop
pusha
pop
movaps
test
sub
add
aad
xchg
sub
mov
arpl
pop
and
pop
mov
xchg
repnz
push
adc
test
and
loopnew
xchg
add
out
stos
adc
hlt
xchg
push
pusha
call
lea
ja
setno
inc
call
call
push
ror
mov
pusha
pushl
pushl
inc
test
not
push
add
jmp
pushf
movl
pushl
movb
jmp
dec
bt
sbb
mov
stc
pusha
test
movb
cmpb
jmp
faddl
es
std
cmp
and
xchg
jno
sahf
mov
jns
cli
xor
enter
lcall
loopne
leave
stos
mov
jp
mov
icebp
mov
aad
xchg
fisttps
andl
ret
add
loopne
pop
cmp
mov
xchg
fcoml
inc
dec
inc
dec
jne
rorb
shlb
lea
inc
sub
dec
gs
mov
jl
loop
pop
or
push
pop
enter
push
call
push
sub
inc
lods
and
mov
outsb
cltd
pop
pop
cmc
cmp
ds
xlat
push
js
mov
js
push
fists
or
das
subl
cmp
insb
sahf
jecxz
les
mov
inc
insb
pusha
test
cmpsb
pop
or
mov
imul
or
jo
in
push
push
or
nop
stos
es
scas
xchg
add
ds
push
push
mov
pop
loopne
jb
inc
add
inc
leave
movsl
jmp
cmp
cmc
cmc
sarl
cs
add
subl
push
stos
adc
es
or
cmp
xchg
add
mov
aam
hlt
pop
xchg
jl
cmp
xchg
outsb
or
cmp
ret
push
aas
pop
ds
fnsave
sti
nop
xchg
xchg
push
adc
arpl
or
loope
mov
loope
aam
and
popa
sbb
mov
enter
das
movsb
das
jns
jmp
xchg
sbb
dec
cs
add
ss
xchg
sbb
adc
into
xchg
sbb
outsb
inc
aaa
sbb
cmc
cmc
leave
and
xchg
loopne
outsl
inc
ss
aaa
sarb
push
hlt
xchg
fwait
xor
mov
jne
mov
les
sub
iret
in
and
aad
out
jne
inc
or
hlt
cmp
pop
cmp
enter
or
addr16
stos
adc
imul
jne
adc
bts
movzbw
lea
mov
rcl
sub
bsr
bt
movzbw
mov
bt
jmp
rep
movzbw
movw
bswap
mov
push
mov
movl
movw
lea
jmp
cmpsl
add
and
sub
cmp
add
adc
pusha
push
cmp
and
sub
mov
outsl
int3
dec
jge
and
adc
imul
and
mov
fists
outsl
mov
and
or
jecxz
or
lds
sbb
out
xchg
jno
mov
adc
dec
sub
mov
mov
jge
dec
rcr
inc
or
pop
fwait
xor
and
pop
rclb
adc
frstor
cmp
mov
and
mov
mov
inc
cmp
sub
xor
push
scas
and
push
adc
js
adc
mov
lods
jge
mov
push
pop
push
mov
aad
shlb
push
mov
push
jge
or
pop
outsl
stc
psubusw
scas
int3
test
out
add
inc
adc
int
inc
xchg
sbb
mov
add
aas
hlt
and
pusha
xor
dec
dec
in
sbb
mov
xchg
stc
push
sub
sub
or
pusha
dec
sbb
add
mov
push
or
xor
nop
jg
xchg
pusha
mov
fbld
int
fs
loope
dec
dec
in
fldcw
xor
js
sub
pop
dec
xor
xor
sbb
and
sub
push
mov
shl
aas
push
pusha
mov
in
push
popf
outsl
inc
mov
dec
xchg
int
shl
lock
sub
das
push
cld
mov
lods
int
rcr
es
and
enter
or
jl
sub
dec
fs
ret
push
enter
jb
lcall
mov
cmp
mov
or
rclb
hlt
loope
push
ret
pop
or
jecxz
mov
shrb
sub
das
dec
and
inc
push
daa
and
adc
mov
push
mov
aam
push
outsl
mov
divl
jmp
sub
adc
mov
dec
inc
int
jg
scas
iret
faddl
aas
shlb
shlb
pop
sahf
out
mov
les
pop
sbb
sbb
cmp
lods
negb
test
or
and
rcrb
mov
fistps
and
jae
pop
shlb
dec
rorl
aad
iret
xchg
pop
loopne
fstl
sub
out
scas
xor
inc
push
adcb
mov
nop
and
or
mov
mov
xor
out
pop
xor
js
adc
int
pop
xor
cmp
scas
mov
adc
into
iret
add
lea
fildl
out
dec
pusha
rolb
adc
ret
mov
je
int3
cmpxchg
scas
testb
and
cmp
das
dec
sbb
aad
enter
ss
push
dec
in
mov
rorl
loopne
mov
je
xor
enter
fimuls
add
lods
int3
sbb
icebp
mov
fistpl
mov
cmpsb
inc
cwtl
adc
cmp
mov
scas
insb
xchg
jne
sbb
pusha
sbb
je
xor
jo
enter
stc
adc
cmp
push
insl
popa
orl
jmp
bound
loope
jmp
xchg
rcr
test
ret
pop
mov
sahf
cwtl
adc
xor
xor
xor
mov
repnz
cmc
ret
aam
vscalefss
dec
sbb
jg
sub
ss
outsl
cwtl
outsb
cmp
insl
iret
mov
sub
mov
pop
sub
mov
rclb
arpl
repnz
dec
popf
les
jb
mov
test
pop
pop
rcll
iret
decb
jbe
repz
dec
adc
es
cmpsb
iret
cmp
or
fcompl
sbb
sbb
loopne
arpl
pop
mov
push
iret
push
jae
mov
jno
pop
sahf
lahf
cmpsl
sti
adc
aad
cmp
sub
mov
mov
in
xor
push
incl
xor
adc
mov
pusha
adc
push
imul
in
cmp
cmp
hlt
add
push
adc
adc
das
scas
test
mov
pop
adc
dec
fistps
pop
adc
cmp
adc
enter
outsl
or
sub
mov
adc
ss
ss
push
adc
adc
lea
inc
fmuls
fcompl
icebp
sub
mov
insb
mov
cld
push
cmp
xchg
inc
bound
push
test
aas
fimuls
fstps
sub
mov
sub
xor
lea
je
ja
xchg
jecxz
adc
clc
fs
insb
mov
scas
and
test
pop
dec
das
aad
subl
jecxz
mov
pop
aas
add
mov
mov
jge
rcl
cs
mov
or
jns
mov
lds
lcall
movhps
push
and
sub
fstp
cmp
loopne
cmpsl
dec
popa
out
mov
xor
arpl
scas
ficompl
adc
rcl
rorl
pop
mov
sub
adc
ljmp
pop
lcall
in
adc
push
or
mov
mov
sub
scas
xchg
adc
mov
enter
loope
test
inc
sub
or
inc
add
cmpsb
dec
incl
jne
jg
sbb
stos
jo
xor
jmp
adc
rcl
add
adc
mulb
das
jg
and
inc
rcrl
mov
sub
inc
mov
and
xor
jl
hlt
and
movsb
iret
dec
faddl
hlt
cmp
btc
pushf
dec
rclb
fsubrs
inc
cmpsl
enter
outsl
sarl
std
pop
mov
add
jae
scas
push
and
das
or
xlat
movsb
into
ja
movsl
mov
and
pop
aad
or
lock
mov
outsl
push
js
out
add
ret
mov
xchg
push
push
and
and
subl
out
mov
daa
and
sub
jno
push
ret
mov
jle
iret
and
mov
jge
imulb
mov
clc
and
mov
jecxz
nop
dec
sub
scas
iret
in
insl
push
jo
fs
mov
jmp
mov
adc
ret
dec
sbb
jns
lret
addr16
sbb
iret
lcall
cmpsb
pop
mov
pop
ret
jno
mov
sub
ljmp
mov
js
insl
fwait
mov
mov
mov
mov
pop
dec
xchg
enter
sahf
je
jnp
hlt
rcrb
fadds
mov
inc
aas
adc
rcrb
add
dec
sbb
cmpsl
js
dec
lock
jne
in
outsl
adc
lods
adcb
insb
popf
adc
stc
inc
mov
mov
mov
xor
fdivl
pop
out
enter
xchg
push
xchg
fsubs
mov
sbb
enter
push
cs
movsb
ss
mov
mov
jbe
add
or
mov
push
jae
inc
mov
cmp
rorb
push
push
in
clc
xchg
adc
sub
test
jb
movsb
outsl
insb
adc
lods
orl
adc
pusha
xchg
fistps
pop
add
adc
movq
push
push
loopne
lahf
jl
mov
scas
pop
cwtl
inc
enter
inc
out
mov
or
jb
adc
adc
xor
sarl
jns
ljmp
jmp
push
pop
pop
mov
adc
sub
ret
mov
cwtl
fstpl
jo
out
push
push
sbb
daa
jno
mov
xchg
sbb
comiss
mov
into
iret
mov
push
cltd
fs
lahf
inc
mov
xor
inc
nop
orl
or
in
and
lret
push
jp
push
jne
fidivs
and
lods
xchg
out
sub
ret
outsb
xor
out
mov
push
roll
aad
push
js
push
pop
int
pop
add
test
push
fs
adc
and
adc
mov
loopne
xlat
or
fcomip
test
adc
and
cld
popf
psraw
hlt
mov
mov
add
js
mov
inc
and
insl
stos
and
lret
pop
jecxz
cwtl
adc
in
lcall
or
gs
out
adc
and
clc
sti
push
je
lahf
jecxz
fistps
fcompl
in
loopne
clc
jge
bound
clc
add
sub
adc
loope
inc
pop
jns
xor
sub
xchg
mov
fdivl
sub
ljmp
divb
cmp
or
mov
lods
dec
ja
xlat
insl
insb
cltd
pushf
aas
cld
pop
loop
mov
mov
enter
lods
push
jno
lock
in
in
fs
dec
js
aad
outsb
je
adc
lea
fmuls
out
sub
shrb
cmovns
mov
dec
je
pushf
notb
mov
shll
cltd
push
out
sahf
les
adc
cmp
loopne
outsl
andl
shrb
pop
push
xlat
or
sahf
stos
sahf
mov
or
pop
inc
cs
cs
adc
aad
cmp
mov
push
int3
roll
int
lahf
xor
mov
outsl
roll
stos
fistps
and
fwait
lods
je
fildl
mov
scas
and
outsl
fs
cmp
call
pop
inc
cwtl
pop
sahf
or
cmp
nop
aaa
fucomi
enter
loopne
cld
add
out
adc
cld
nop
sbb
fisttpl
cwtl
clc
ljmp
lahf
inc
push
scas
jecxz
cmc
je
and
sub
fmuls
sub
mov
xchg
cmc
int3
fs
and
adc
and
mov
je
call
jle
sbb
cs
lods
int3
xor
cmpsb
das
pop
adc
or
cmp
lea
xchg
push
pop
scas
sbb
lock
ret
fdivrs
sbb
js
dec
in
orb
and
ljmp
add
xor
imul
mov
sbb
cmpsl
daa
xchg
prefetch
or
cli
lret
lret
push
xorb
repnz
fistpl
outsl
jo
aas
mov
fcompl
sbb
mov
adc
loopne
test
jg
jp
inc
mov
cli
lods
fistl
int3
mov
add
loope
scas
ret
out
jp,pt
adc
cltd
or
pusha
push
bound
orb
push
xor
inc
lods
jo
lock
xorb
cmp
lods
push
pop
dec
ficoml
dec
lods
out
push
or
and
adc
cmpsb
lahf
mov
into
hlt
adc
or
das
int
cmp
mov
xor
xor
inc
loope
xor
sarb
js
xor
call
dec
aas
movsb
push
dec
lea
pop
sbb
into
xchg
adc
sbb
into
or
adc
push
cmp
sub
xor
jbe
mov
leave
je
outsb
sub
mov
rcl
jbe
xor
ret
dec
inc
add
aaa
dec
adc
mov
mov
dec
pushf
fsub
fs
jne
and
lock
cs
imul
lods
adc
jne
jg
cs
xchg
jg
scas
mov
lret
fsubrl
mov
lsl
mov
and
ds
xor
inc
addb
dec
push
xor
int3
cmp
mov
mov
xor
mov
cmpsl
inc
scas
mov
aas
push
xor
sub
add
sbb
sbb
push
pop
cs
inc
add
loope
jb
out
xchg
scas
cwtl
nop
fs
test
dec
mov
xchg
aad
into
orb
in
cld
aaa
jno
shrb
xor
push
ljmp
pop
jo
xor
xor
push
jo
sbb
fnstcw
dec
outsl
sbb
dec
aaa
jmp
notb
fs
test
add
cs
lods
sbb
clc
lcall
sub
push
xchg
loopne
pop
fsts
lea
stos
push
ret
movsl
in
push
fisttps
in
jb
xchg
in
ss
cmp
pop
ja
cmc
adc
scas
fsubr
jo
lods
adc
sbb
push
shlb
mov
imul
orl
sub
cmpb
dec
cmpb
ficoml
mov
stos
cmp
push
les
adc
fwait
pop
pop
jg
shl
nop
jae
dec
and
mov
repz
pop
mov
sbb
sbb
stc
filds
ljmp
jo
inc
pop
out
mov
cmp
loopne
push
dec
pop
out
popa
cmp
mov
mov
and
sub
je
aad
inc
out
and
or
pusha
clc
in
sub
fsubrs
sub
xchg
mov
mov
stos
push
lahf
sbb
add
jo
fdivs
jl
adc
adc
xor
js
cmpsl
add
out
loop
xchg
xchg
daa
push
out
in
es
push
push
out
subb
subl
adc
pop
cmp
lret
push
daa
fildll
fldcw
in
xchg
push
insb
loope
xchg
call
xchg
sub
and
mov
push
aam
mov
cmpl
xchg
adc
adc
es
ret
lcall
clc
sbb
scas
pusha
and
aas
pop
sub
fistl
mov
push
xchg
int3
adcb
mov
movsl
mov
mov
mov
cmp
lods
ss
lahf
or
mov
cmp
pop
jne
das
scas
mov
and
pop
jns
and
push
jnp
or
inc
shll
nop
pop
cwtl
mov
pop
mov
sahf
dec
movsb
sub
inc
adc
dec
lea
test
fwait
pop
and
mov
mov
out
mov
cmp
aam
adc
push
popf
xor
dec
adc
or
pusha
shrb
int3
out
repnz
int3
cmpsb
or
lock
mov
test
mov
push
mov
stos
fs
pandn
loop
xchg
clc
lods
movsb
mov
mov
das
mov
imul
shrl
jge
mov
call
hlt
cmc
and
iret
lahf
cmp
arpl
insl
and
lods
popa
ds
adc
or
push
enter
pop
stos
lret
jge
xchg
xchg
je
and
mov
xchg
testl
cmpl
dec
hlt
jle
rolb
adc
scas
mov
movsl
lods
out
fmull
or
adc
sub
fldt
add
stos
fwait
mov
pop
les
xor
push
ljmp
fisubrl
xor
cmp
jo
shlb
cmpsl
fildll
cmpsb
mov
gs
stos
aaa
push
cmc
jg
insl
loope
lods
jmp
xlat
and
ljmp
rolb
roll
ror
xor
test
push
push
pop
scas
js
and
adc
ret
ljmp
cmp
mov
xor
outsb
and
aad
mov
lea
iret
mov
xchg
or
xchg
xor
mov
push
sbb
xorb
push
mov
push
repz
push
mov
xor
out
bound
jl
vsqrtss
add
sbb
jae
cs
xchg
rcl
movsl
and
pop
lods
arpl
shlb
dec
scas
in
sub
xor
cli
pop
jecxz
mov
out
les
sub
and
icebp
xor
gs
cltd
roll
dec
int
and
sahf
addb
loopne
scas
das
adcb
and
mov
sbbb
inc
loopne
lods
int3
ljmp
mov
mov
sbb
loope
and
shlb
mov
and
adc
adc
pop
mov
loope
and
insl
adc
adc
arpl
rcrl
stos
sbb
outsb
mov
adc
xor
adc
xor
push
xor
adc
mov
and
scas
ss
xchg
lahf
ror
xor
adc
scas
adc
rorl
gs
addb
xlat
mov
adc
xchg
setnp
shrb
insl
push
mov
test
adc
xchg
mov
pushf
or
jae
enter
sbb
shlb
add
out
hlt
inc
mov
rclb
pop
xor
insl
movsb
fistpll
xchg
sahf
rol
sahf
add
mov
lea
push
mov
lock
mov
push
insl
pop
fstl
andb
cmp
incl
lock
push
repnz
xor
lcall
das
push
mov
mov
push
addr16
adc
mov
pop
enter
sahf
cmpb
xchg
movups
int
mov
mov
dec
scas
aaa
lods
aaa
adc
pop
mov
push
into
mov
sbb
test
das
daa
cmp
rcll
repz
fistpll
das
rorb
imul
push
shrb
loopne
sbb
hlt
push
xchg
lock
mov
in
cs
mov
hlt
pop
push
shlb
std
cmp
or
mov
lahf
scas
in
lods
testb
testb
aas
push
sahf
sbb
shlb
xchg
outsb
enter
pop
xor
clc
sub
lods
adc
jge
movsb
into
mov
or
addl
sub
mov
cmp
clc
loope
inc
sub
inc
jae
es
in
sub
push
mov
pop
add
shl
and
dec
push
leave
adc
and
lds
ficomps
daa
arpl
fwait
lahf
push
aaa
push
fnstsw
es
pop
jb
inc
adc
cmpsl
adc
test
add
enter
xchg
mov
xor
jecxz
ljmp
aad
out
mov
addb
or
adc
dec
add
push
xor
in
add
shll
xor
mov
test
js
push
sbb
adc
outsl
adc
pusha
lods
jae
mov
cmp
lods
sbb
or
mov
xor
sub
int3
ds
inc
xchg
sub
mov
popf
insb
jb
push
lock
xor
andb
lds
ror
lret
xchg
mov
sbb
sbb
sbb
mov
xchg
sarb
add
add
sub
jecxz
int3
fcoml
cmp
sbb
cmp
and
icebp
adc
lods
or
push
lahf
shll
mov
xor
cmp
mov
xchg
xchg
arpl
push
jmp
sahf
push
mov
xor
cmp
jmp
in
lahf
sub
xchg
arpl
cmp
or
inc
cli
mov
in
pusha
jmp
xor
es
push
scas
or
inc
pop
mov
hlt
mov
xchg
fwait
decl
sbb
scas
xor
insl
adc
pop
push
enter
push
sbb
int3
cmpsl
adc
scas
jmp
adc
scas
inc
push
push
push
and
rcrl
mov
mov
shlb
test
out
call
movsb
push
lahf
and
pusha
inc
ficompl
popa
and
xor
shlb
push
inc
pop
jae
psrlw
xchg
lock
mov
add
mov
push
xchg
mov
fisubl
das
add
testl
test
fidivrl
and
or
hlt
les
inc
pop
dec
or
int
sbb
movsl
sub
notb
stos
mov
xor
push
xchg
mov
lods
adc
or
mov
xor
push
or
lret
shlb
int3
rol
xor
es
outsb
pusha
xchg
iret
adc
scas
into
xchg
into
add
ret
cld
mov
inc
xchg
or
sbb
or
pop
outsl
sub
xchg
xor
push
testl
repz
mov
adc
pop
fsubrl
je
insb
test
pop
pop
cs
pop
ljmp
or
clc
mov
lcall
push
mov
cmc
mov
daa
daa
xor
mov
pop
aad
negb
cmp
mov
lds
dec
push
sbb
dec
out
hlt
xchg
mov
ja
inc
sub
and
or
movsb
sahf
dec
not
cmp
mov
dec
sub
xchg
and
dec
jp
inc
jnp
rcl
pop
popf
cmp
mov
push
lahf
stc
imul
ror
or
stos
sahf
es
lods
jns
movsl
add
sub
out
push
pop
jns
das
push
mov
scas
xchg
int
int
xor
push
stos
out
mov
mov
jb
repnz
pop
test
push
out
movsb
das
and
nop
pop
push
jne
cmc
bound
push
in
jne
js
fwait
test
sahf
dec
sarb
sbb
cmpsl
pop
push
mov
jecxz
pop
jne
dec
jle
xor
ret
in
xor
adc
push
frstor
and
sbb
xlat
adc
je
mov
bound
mov
test
ja
mov
xchg
leave
in
mov
mov
adc
mov
pop
mov
out
ret
mov
pusha
sbb
xor
shll
sub
jl
rcrb
mov
jo
mov
mov
movsb
xor
adc
pushf
movsb
mov
add
pusha
ljmp
pop
dec
dec
pop
cmp
in
shr
leave
push
cli
xchg
inc
xlat
lret
test
jo
loopne
andb
push
dec
lock
and
rorl
sub
test
push
or
lods
xor
mov
xor
scas
ja
filds
lods
outsb
aas
movsb
or
andb
fisttpll
cmp
out
fldt
test
jl
je
dec
xor
adc
ret
xchg
lods
cmpsl
push
lods
xchg
xlat
lcall
out
popa
and
scas
cmpsb
fldcw
stc
dec
ss
cmpsb
dec
cmpb
cmp
sub
nop
pop
fcoms
ss
adc
xchg
lods
fistpll
pop
xlat
call
adc
not
shll
mov
pusha
and
add
mov
aad
daa
push
push
and
and
mov
ljmp
xchg
lods
cmc
and
movsb
mul
fcmovnb
xchg
adc
enter
dec
mov
js
mov
iret
xor
sbb
mov
dec
and
xlat
jno
into
xchg
jmp
push
ret
mov
cmpsb
xor
daa
stos
dec
cltd
mov
nop
ja
xor
mov
mov
in
cli
push
movhps
lods
adc
push
or
and
fs
out
in
pop
imul
push
adc
test
add
mov
arpl
repz
add
ficoms
daa
lods
dec
leave
enter
daa
add
es
scas
divb
adc
dec
cwtl
aas
fucomi
insb
bound
push
ficoms
jp
adc
pop
in
mov
or
xor
jo
into
rol
outsb
cmp
orb
cld
imul
js
aad
and
inc
or
int3
ds
shrl
shrl
mov
or
sbb
or
aad
jnp
adc
xor
outsl
dec
push
das
and
packsswb
filds
addr16
push
adc
cmp
jns
pop
xor
int
roll
mov
iret
cmp
pusha
xor
xor
in
fcomps
shll
and
mov
add
jle
cmp
xchg
fstpl
and
lcall
adc
fcoml
mov
mov
test
mov
mov
cmpl
outsb
pop
loop
xchg
or
loope
int3
outsl
xlat
scas
mov
pop
or
icebp
sub
cltd
and
in
mov
sahf
adcb
cmp
jg
shrl
pop
scas
pop
or
xor
enter
repz
dec
test
call
add
and
sbb
cmp
mov
aas
or
in
push
pusha
scas
or
sub
mov
xchg
mov
inc
mov
xlat
testl
sub
stos
popf
cmp
and
out
fidivrs
xor
adc
jo
and
push
stos
push
repz
int
lock
xchg
adc
test
jb
and
jmp
adc
adc
jae
rolb
imul
jb
xor
xchg
shll
jne
mov
cmc
test
add
fldlg2
push
adc
out
inc
mov
aaa
xor
push
les
sti
loope
sbb
push
lods
xchg
dec
cmp
rol
push
pop
mov
inc
xor
add
push
mov
nop
xor
into
mov
sbb
jecxz
pop
cmp
mov
mov
in
cmp
sub
adc
iret
dec
and
lods
sub
cmp
clc
xchg
addb
fists
add
dec
loop
and
push
imul
and
pushf
out
out
outsl
aad
subb
sbb
lock
inc
sbbb
ret
es
mov
outsb
fisttps
xor
or
outsb
xchg
adc
xchg
test
outsl
cmc
mov
mov
mov
push
lock
inc
call
jg
push
mov
add
jno
hlt
je
sub
arpl
into
fsub
lods
cmp
movsl
and
shrl
cmp
xorb
je
adc
jge
sbb
adc
shrb
inc
fdiv
sub
and
addr16
jecxz
xchg
adc
cs
sahf
in
mov
and
pop
lcall
ja
lret
dec
lahf
add
aad
inc
test
adc
add
inc
pushf
sahf
lock
out
xlat
mov
loopne
lods
cmp
xchg
inc
pop
aad
jne
les
inc
xchg
or
das
mov
mov
les
push
ss
out
dec
mov
loopne
mov
xorb
popa
mov
fidivrl
lcall
rorb
in
outsl
lods
sbb
push
sbb
mov
adc
fnstsw
call
mov
test
fidivs
jecxz
pop
xor
push
jl
cmc
movl
jo
fdivl
lods
xchg
ljmp
sbb
mov
mov
jge
adc
ja
inc
loope
push
insl
mov
push
sub
cmp
jle
stos
and
aad
adc
nop
lods
mov
add
lods
inc
fucomi
push
mov
cmpsl
bound
push
mov
sbb
jo
jnp
ret
lods
test
mov
scas
sub
lods
pop
jne
pushf
push
lcall
in
movsb
rclb
xchg
sbb
fmull
push
push
lret
or
xchg
or
outsb
mull
push
lods
out
in
shrb
xlat
or
orb
cmpl
decb
pop
pop
dec
mov
add
ucomiss
xchg
add
orb
dec
nop
mov
aaa
mov
and
jo
ror
pop
aaa
dec
mov
adc
push
inc
cs
sub
lods
scas
mov
sbb
push
cli
iret
fwait
mov
mov
ret
fimull
mov
loopne
or
adc
lods
mov
cmp
pop
nop
or
inc
mov
fs
xor
js
je
sbb
mov
and
in
in
mov
rol
fcompl
loope
xchg
lock
clc
add
cmp
xor
jmp
rcr
cs
cmpsb
lret
push
orb
sub
xlat
lods
outsl
aad
lds
jb
lcall
popa
rcrb
inc
xchg
adc
push
call
jbe
fistpll
sub
add
lods
xchg
dec
jmp
mov
adc
mov
fwait
rolb
jae
bnd
inc
push
psubusw
xchg
lahf
mov
enter
mov
adc
jmp
lods
rclb
push
clc
ror
pop
xchg
jmpw
push
lods
fcmovnu
push
or
cmp
outsb
jmp
xchg
int3
and
ficompl
nop
or
jp
repz
in
add
add
lods
add
adc
push
mov
sub
rcl
insb
out
and
daa
loope
movsb
push
mov
mov
pop
inc
or
iret
jnp
popa
xchg
test
das
fstp
dec
sahf
sub
or
and
mov
mov
movsl
xchg
mov
add
inc
fnstcw
sbb
aas
out
adc
push
mov
push
hlt
mov
aas
lcall
pushf
push
push
scas
clc
xchg
test
bound
inc
jno
or
pop
mov
pop
push
xchg
nop
iret
fadd
rorl
add
lds
dec
adc
push
jp
jns
push
pop
sbb
push
jb
inc
fisubrs
pusha
mov
fisttps
push
je
fstps
sbb
pop
rol
and
push
mov
iret
push
xchg
aaa
cs
shl
incl
or
push
or
sbb
mov
dec
sub
sub
movsl
jo
enter
ficoml
test
adc
cmp
aad
adc
adc
icebp
mov
scas
and
fstl
insl
mov
push
jnp
into
jae
jl
sub
in
sbb
mov
es
mov
xor
mov
adc
mov
fldt
adc
lock
loope
fdivrl
cmp
push
add
lods
push
xor
and
mov
adc
int
xlat
fisttpll
std
stos
adc
std
mov
add
stc
icebp
pushf
dec
arpl
cwtl
lods
inc
das
mov
xlat
test
xor
test
in
sub
sub
jb
xor
xchg
jo
pop
mov
xchg
dec
or
popf
and
push
push
sbb
mov
inc
adc
push
or
mov
jge
pop
mov
fisttps
rorl
jo
jnp
push
rcll
ja
or
nop
pop
sbb
cmpsb
inc
mov
jmp
adc
outsl
shll
pusha
fsubrl
sub
mov
xor
xlat
fdiv
push
mov
iret
test
mov
lret
mov
mov
jle
pop
cmc
sbb
and
push
fwait
stos
outsb
lods
lods
or
xor
je
lret
out
mov
push
dec
ficoml
dec
lock
xchg
jmp
mov
jmp
mov
push
jo
lahf
mov
adc
jbe
dec
adc
push
and
je
inc
das
test
int3
jge
or
xchg
xor
pushf
add
and
mov
out
in
pop
gs
push
popl
lret
cmp
test
fdivs
push
cmp
xchg
rcl
iret
jp
push
cmp
sbb
rcr
cmp
mov
out
and
scas
scas
andb
jmp
xor
dec
rorb
jg
ss
and
add
lret
pop
or
aas
push
mov
dec
add
cwtl
sahf
jae
adc
add
adcb
out
xchg
and
push
push
lods
cs
jbe
dec
and
add
jno
pop
ljmp
test
int3
xchg
pusha
mov
pop
roll
and
lods
jne
rorl
incb
iret
sbb
lea
jl
inc
jg
sbb
sub
add
scas
hlt
mov
or
lret
enter
xor
iret
js
ret
filds
inc
loop
push
sbb
out
sub
mov
mov
push
xor
cmp
inc
aaa
sbb
loop
movsl
into
scas
scas
push
imul
add
rorl
idiv
rcr
sbb
and
mov
push
or
cmp
mov
lods
sti
aam
shrb
sub
jl
mov
movsl
sub
clc
inc
out
insb
and
dec
hlt
cmp
pop
and
xorl
cmpl
push
cmpsb
inc
aaa
loop
cltd
adc
scas
into
ret
pushf
mov
xlat
in
fstpl
xor
rcrl
scas
jp
mov
sub
lahf
xchg
pop
sbb
cmc
lahf
jg
adc
push
jae
and
in
out
adc
ret
mov
xor
popf
fldt
and
push
cld
sarl
pop
lahf
xchg
cmp
jmp
xlat
jecxz
and
je
pop
mov
jo
xor
hlt
repnz
cmp
jmp
in
or
sbbb
lret
cmp
push
les
sub
or
adc
or
cmp
mov
es
inc
shrb
pushl
fistpl
sarb
xor
pop
in
jp
mov
loopne
lods
cmp
sahf
clc
sub
sbb
ret
pusha
jae
jo
out
xchg
lock
adc
outsb
cvtsi2ssl
es
push
push
dec
sub
xchg
mov
jp
jnp
test
in
and
ljmp
jge
add
hlt
mov
adc
xchg
jns
or
mov
xor
jno
mov
adc
jmp
loop
rcrb
sahf
mov
addr16
ja
jne
mov
lea
xchg
and
adc
cmc
shl
pushf
inc
xor
mov
mov
xor
and
sbb
scas
sub
push
cmp
mov
xor
arpl
cmp
dec
nop
cmp
daa
lock
fidivs
out
fdivrl
stc
adc
jg
inc
jecxz
sahf
in
xor
stos
jb
add
jecxz
jle
push
cmp
add
je
loopne
dec
andb
push
and
push
out
cli
sbb
sbb
mov
icebp
outsl
in
test
jo
shl
pop
aaa
mov
push
jae
mov
stos
imul
scas
cwtl
xchg
fdivrl
jne
test
pop
out
out
mov
cmpsl
outsb
loopw
int
movsl
push
add
idivb
mov
mov
and
cmc
push
es
sti
loop
xor
sbb
and
hlt
popf
mov
mov
xor
iret
mov
lahf
xor
mov
lret
mov
add
inc
aas
sub
add
fs
inc
or
xor
pusha
xchg
dec
fs
pop
stc
xchg
jbe
pop
mov
cmp
iret
call
sbb
sub
sbbb
gs
int
cltd
sub
arpl
inc
int
ljmp
cmp
repnz
push
cmp
jl
aad
inc
sub
dec
fildll
mov
clc
lock
rorb
shll
aaa
push
xchg
lret
pop
cltd
shlb
adc
xor
lahf
and
inc
cmp
nop
and
dec
xor
cltd
movsb
mov
shrl
fs
or
xchg
fnstsw
inc
lock
push
scas
pop
mov
sub
jb
aad
xor
out
xchg
push
aad
xor
xor
push
or
push
mov
or
sbb
in
iret
mov
mov
sbb
or
pop
mov
lods
xchg
aas
shll
pop
jne
mov
push
sbb
cmova
sbb
sub
jmp
xchg
push
xor
icebp
xor
push
pop
shrb
xor
or
push
sub
ret
and
les
daa
fs
jno
or
pop
mov
add
pop
notb
mov
popf
inc
and
dec
outsb
jle
xchg
xchg
lahf
jnp
lret
sahf
mov
inc
lahf
xchg
and
mov
dec
or
int3
int
jmp
sub
or
ljmp
xchg
adc
test
filds
cltd
mov
cld
add
xchg
out
mov
shrl
add
jno
loopne
cmp
fdivp
fwait
inc
sub
out
dec
lods
xor
jae
xor
aad
das
pusha
adc
mov
xorb
jne
or
or
lods
sub
adc
adc
sbb
sbb
jns
add
adc
addr16
movsl
jmp
mov
cmp
fcmovnb
push
cmp
bound
mov
addl
clc
adc
lcall
scas
mov
push
add
mov
fistpll
sbb
xor
inc
cmp
mov
dec
ds
fsts
out
loope
mov
adc
add
push
mov
scas
pop
in
xor
inc
lods
loope
push
jno
xor
cmpsl
mov
xor
jmp
sub
dec
adc
inc
loop
push
scas
sbb
iret
out
rclb
pop
xor
outsb
fnsave
popf
in
sarb
js
in
sti
popl
leave
mov
outsl
rolb
jp
scas
sub
pop
pop
xor
out
dec
add
aaa
xor
mull
dec
repnz
inc
cmp
call
scas
pop
in
fs
rcrb
adc
ret
pop
lock
xor
and
jbe
ljmp
add
cs
iret
lcall
fmuls
inc
ljmp
lods
test
shll
loop
mov
int3
scas
xor
dec
jp
nop
mov
dec
adc
dec
sub
out
jp
aas
xchg
jb
cmp
pop
mov
imul
add
jmp
lods
jne
adc
dec
push
cmc
mov
xchg
and
or
mov
scas
cmp
clc
and
pusha
popa
jmp
xor
sub
cs
imul
sub
bound
push
and
mov
ret
call
push
dec
out
xor
jl
loop
fsubr
cli
mov
movsb
aas
mov
lods
imul
sbb
loop
notb
xor
jbe
sub
fildl
adc
jle
pop
and
shll
loope
pop
or
jns
cmp
xorl
and
mull
int3
adc
clc
test
mov
lods
mov
fld
daa
hlt
call
inc
clc
sbb
push
mov
xchg
xor
mov
pop
in
cmc
mov
sti
fistpll
dec
mov
clc
push
cltd
push
pop
shl
ret
and
adc
fistpll
cmp
in
cs
sbb
call
lods
loope
pop
xor
lret
add
jns
xor
fidivs
add
aaa
xchg
sti
pop
xor
clc
inc
push
xchg
mov
rcl
test
out
inc
fisubs
push
scas
pop
ja
in
cwtl
xor
mov
shll
test
in
push
push
pop
pushf
adc
out
fs
ret
or
push
xchg
fstpl
sbb
xchg
cmc
xchg
xor
js
pop
xchg
lds
mov
scas
aad
xor
pop
aaa
sbb
outsl
dec
subb
or
scas
cmp
mov
ljmp
sbb
lods
mov
lcall
xor
cmp
dec
pop
xchg
inc
daa
push
mov
xchg
lahf
iret
or
lds
cmc
cltd
adc
je
adc
cmpsl
and
bound
out
cmp
ss
mov
push
push
lret
sub
sub
mov
inc
orb
add
lods
fs
adc
lods
ret
mov
sbb
negl
lea
pop
imul
mov
fnsave
jmp
sbb
push
les
mov
xlat
jno
sbb
scas
fwait
loope
orl
mov
insl
cmpsl
insl
je
movq
pop
aam
and
lods
lea
adc
push
out
enter
popf
lahf
pop
jmp
sti
sahf
out
sub
decb
mov
xor
fcomps
add
shrb
clc
movsb
sub
daa
ficompl
push
sahf
jns
pop
jle
push
aad
and
jae
mov
in
adc
inc
jmp
cli
lods
xchg
inc
cmpl
ds
inc
push
push
fisttpl
mov
xor
loopne
pop
mov
xchg
sub
daa
icebp
in
lret
dec
js
scas
xchg
push
mov
movsl
mov
lret
loop
lea
and
sub
iret
lods
loop
and
push
xchg
xor
out
mov
push
cli
jl
push
cmp
cmp
in
popa
rorb
idivl
ss
mov
cmp
push
das
shll
or
outsl
and
mov
and
add
enter
test
dec
sub
and
lret
xchg
jo
lock
aad
addr16
or
test
shll
and
xor
pusha
mov
pop
mov
adc
fs
or
dec
ja
jbe
bnd
jmp
in
mov
mov
and
lds
lea
jmp
data16
mov
ret
mov
inc
outsl
xchg
inc
movl
sub
adc
stos
outsb
rcrl
gs
mov
shrb
mov
pop
cwtl
orb
push
mov
in
sub
xlat
jmp
jo
pop
repnz
int
loope
lods
and
add
jno
or
outsl
fistpl
int3
in
and
and
cmp
adc
pusha
sbb
cli
das
aad
jecxz
inc
das
shr
pop
in
ja
adc
mov
pop
mov
cmp
mov
scas
pop
ror
xchg
or
leave
cs
shrl
adc
push
aad
shll
loop
shlb
mov
push
mov
cld
sahf
or
mov
mov
lods
xlat
inc
adc
pop
scas
fmull
inc
dec
jge
xchg
addr16
inc
icebp
dec
mov
push
sub
addr16
inc
jo
jo
and
lock
dec
mov
sub
js
mov
pop
or
cmp
push
and
push
or
mov
popa
rorb
sub
das
scas
lods
fstpl
lret
out
fstpl
stos
inc
movsl
mov
loope
sub
sub
xor
movsl
pop
call
std
sub
xor
imul
push
push
int
insb
sbb
pop
das
dec
mov
adc
mov
adc
test
xchg
cmp
pop
pop
sbb
pop
jp
test
push
xchg
sub
and
sub
xor
lods
add
fmul
cmp
push
mov
lds
ljmp
cmp
adc
call
cmp
arpl
push
loop
xchg
sub
jp
int
xor
popa
jae
rolb
sti
loopne
outsb
fidivs
je
pop
adc
xchg
cmpsb
cmp
fadd
shrb
negl
mov
mov
adc
cmp
pop
mov
jb
int3
shrb
fldt
xchg
and
das
mov
shl
dec
outsb
sub
pop
sub
je
sbb
xchg
loope
mov
push
xor
jae
call
out
adc
lods
icebp
adc
and
mov
lods
inc
cmp
fisttpll
jle
xchg
pop
cmp
fadds
cmp
aam
sub
lret
icebp
xor
repz
cmp
sub
scas
adc
jo
out
inc
aam
movsb
ljmp
jle
aad
adcb
outsb
adc
je
out
sub
push
jp
ficompl
fs
fidivrl
insl
or
mov
add
ss
sub
adc
mov
push
jmp
cs
pop
cld
cmp
mov
imul
mov
mov
daa
push
and
xor
outsl
fidivl
push
push
pushf
dec
loop
pop
push
lods
popa
mov
mov
dec
mov
dec
hlt
scas
mov
adc
frstor
dec
sub
scas
add
js
jno
cs
cmp
or
arpl
out
les
xor
push
dec
push
fistpll
call
xchg
pop
lods
pop
dec
mov
sbb
nop
dec
sahf
out
sub
xor
add
push
loope
pop
pop
pop
mov
filds
test
inc
clc
aas
adc
cs
sub
repnz
aas
pop
mull
int3
xchg
outsl
xor
push
and
mov
fildll
clc
pusha
out
dec
loopne
push
mov
inc
cmp
xchg
aaa
xor
lahf
mov
cmp
mov
imul
xchg
pop
pop
adc
pop
ljmp
in
jbe
es
or
jae
mov
sbb
je
xchg
icebp
dec
push
sub
fstpt
inc
xor
clc
loope
imul
icebp
cmc
dec
push
jge
xchg
push
cmp
nop
dec
roll
into
or
mov
sti
jne
xor
pop
scas
pop
out
mov
and
inc
or
ja
mov
scas
repz
cmp
scas
jo,pt
dec
daa
mov
push
pop
pop
aas
cmp
popl
decl
divl
shr
fsubr
nop
and
mov
cmp
adc
les
mov
add
fmull
out
call
insb
dec
lahf
dec
cmp
pop
lods
xchg
sar
mov
xchg
lret
data16
pushf
xchg
mov
add
movsb
mov
fmull
or
xlat
aas
sahf
out
xchg
push
xchg
xchg
imul
rcll
shrl
sbb
jns
cmp
sbb
sbb
pop
mov
stos
je
jle
shl
lcall
mov
mov
and
les
jmp
dec
adc
push
push
sahf
loop
cmp
aam
jecxz
fdivp
mov
repz
ja
pop
das
loope
adc
mov
je
sbb
xor
js
imul
cmp
sbb
xor
push
dec
in
dec
iret
and
xlat
jb
cmp
popl
mov
adc
sub
scas
int3
push
jge
js
jmp
xchg
ja
iret
loop
push
call
and
cmp
js
pop
xchg
in
lods
filds
rolb
popa
and
filds
mov
xor
mov
and
adc
and
aad
sub
les
lods
jge
xorl
ja
push
push
push
inc
fsubr
sub
jle
xchg
add
in
outsl
cmpsl
adc
enter
nop
xor
stc
sti
iret
mov
shll
int3
adc
adc
lret
xor
pop
hlt
out
call
xchg
pop
call
iret
xchg
dec
test
vandps
mov
xchg
mov
push
movsb
orb
iret
push
or
cmp
mov
inc
jb
call
int
aaa
out
mov
je
cmp
fbstp
movsb
in
test
shr
jae
jmp
inc
and
lods
push
js
sub
dec
cmp
add
pushf
stos
cmp
push
pop
ja
lcall
loopne
int3
out
add
push
les
mov
decl
mov
xor
test
outsl
sbb
loop
rcrl
aad
mov
dec
or
andl
push
int
jg
cmp
cmc
push
xchg
pop
adc
lcall
loopne
lods
cmpsl
test
add
test
xor
dec
and
ljmp
inc
cmc
add
sub
mov
mov
sbb
enter
lahf
push
mov
ret
and
scas
bound
scas
xor
jb
xor
mov
mov
mov
iret
dec
mov
neg
cs
sbb
mov
fidivs
sbb
xorb
arpl
aaa
je
out
jge
xor
lods
fs
xchg
outsl
daa
dec
inc
jnp
and
es
cmp
loope
mov
and
jmp
call
xor
mov
lds
or
or
mov
xor
pop
rolb
pop
cmc
scas
movsb
cld
insl
pop
loopne
inc
cs
lods
and
xchg
insb
test
xor
xchg
cmp
fld1
mov
arpl
push
adc
pop
add
nop
jb
fnstcw
incb
divl
pop
scas
xor
or
sbb
mov
shlb
xor
mov
nop
pop
test
lods
push
jb
scas
sub
lahf
movsb
mov
adc
in
movsl
mov
jge
gs
mov
cmpsl
fsts
adc
adc
xchg
insb
and
push
stc
je
cmpsl
adc
xor
mov
push
pop
cmp
xlat
rorl
sub
xlat
popf
imul
adc
movsb
lret
xchg
ss
or
and
add
push
aad
lods
mov
mov
push
dec
sarb
js
out
das
and
pusha
orb
ljmp
pop
aas
pop
or
ret
push
add
push
imul
mov
rolb
flds
gs
outsb
adc
sub
test
xor
stos
mov
cmp
repnz
test
decb
loop
adc
adc
mov
inc
stc
sub
xchg
mov
mov
cmp
test
dec
pop
jns
scas
add
in
mov
xchg
rcll
jecxz
test
stc
and
cmp
enter
pop
and
push
inc
cmp
mov
daa
adc
sub
addr16
and
mov
sbb
fidivl
out
xor
push
mov
or
std
push
cld
orb
scas
in
call
pop
sbb
xor
sub
fs
xchg
push
sar
xor
xor
lods
xor
call
mov
gs
or
fdiv
fidivrs
inc
imul
outsl
mov
adc
sbb
sub
loop
dec
ds
xchg
inc
inc
ret
jns
cmp
pop
jbe
rorl
pushf
je
int
xor
push
and
lea
orb
sbbb
dec
mov
dec
adc
int
ja
jno
push
int
mov
mov
hlt
call
adc
dec
imul
sub
adc
cwtl
pop
aad
movsb
test
push
arpl
inc
push
bound
int3
xchg
loop
push
push
test
mov
pop
mov
jb
jae
xor
sbb
int
dec
jne
jo
enter
fs
push
pop
cmc
daa
out
leave
add
lret
mov
xor
lods
rclb
dec
test
add
push
push
sti
or
aas
push
or
das
push
push
loop
lods
adc
out
icebp
pop
fidivrs
outsl
xor
fs
push
push
push
push
test
shrb
pop
rolb
adc
outsl
fs
adc
push
out
push
sbb
cmp
cmp
jg
lods
add
or
dec
dec
rorl
ljmp
sub
jno
adc
and
mov
js
cmc
scas
lods
push
popa
add
or
dec
pop
xchg
push
push
mov
mov
repz
push
mov
add
inc
adc
adc
sar
xor
shlb
insl
insb
shll
xor
sbb
fs
xchg
mov
adc
loop
dec
add
lods
rcrl
adc
jae
adc
je
cs
je
lock
xor
lods
push
aam
mov
aad
and
cld
sub
ss
int3
ret
jno
pop
ret
push
jnp
adcb
shlb
mull
clc
je
push
adc
std
pusha
mov
decb
aaa
lock
xchg
mov
push
mov
sbb
lret
or
xor
sbb
xor
xor
sahf
xchg
scas
iret
divb
stos
aad
jp
mov
adcb
stc
or
in
repnz
mov
cmc
repnz
lods
aas
cmp
push
cltd
hlt
xor
lret
or
fmuls
imul
imul
adc
lods
arpl
je
out
sub
fwait
push
xor
cmpsl
and
jecxz
insl
push
std
faddl
std
idivl
xchg
out
pop
lret
fsubs
addr16
sub
lods
repz
scas
in
loopne
mov
and
xchg
loope
push
rorb
enter
inc
out
sahf
mov
sub
push
fnstcw
clc
sbb
out
fbstp
xchg
mov
push
jne
scas
sub
outsl
push
in
into
add
fsts
std
shlb
cmp
mov
jmp
mov
xlat
pop
int3
insb
js
push
in
inc
movsb
je
imul
or
xor
cltd
xor
push
out
jo
movb
jne
movsl
mov
cmc
in
cmp
int3
pusha
ret
or
lret
jg
rcl
loope
dec
sbb
mov
cmpsb
and
xor
xchg
pop
jp
cmp
xchg
pushf
or
ljmp
fdivs
mov
mov
int
fldcw
mov
popf
nop
inc
and
dec
mov
nop
call
jg
xchg
cmp
pop
lret
in
mov
jno
adc
out
mov
add
outsl
jbe
or
into
hlt
xor
or
cld
mov
cmp
in
dec
add
pop
inc
cmp
aad
sub
or
cmp
xor
inc
bound
mov
dec
mov
mov
mov
xchg
push
cmpsl
lods
cmc
jae
aad
xchg
cmpsb
push
sbb
inc
iret
lods
adc
jnp
cwtl
jg
or
jmp
mov
rcll
dec
int3
insb
sub
inc
xchg
mov
sti
pop
lods
dec
jae
lods
or
xchg
cmp
xchg
fs
mov
cmp
mov
cmpsl
mov
movsb
int
or
shl
aas
push
icebp
rolb
insl
repnz
enter
mov
inc
jae
aad
fs
and
rcll
call
aad
mov
xor
rol
push
add
popf
push
or
js
pop
fdivs
jle
cmp
call
shlb
cmp
out
dec
nop
movsb
cwtl
leave
xchg
in
mov
ds
pop
xchg
cmp
insb
cmp
ss
repnz
sub
cmpsb
divl
movl
test
scas
xchg
testl
int3
mov
pop
xor
test
leave
fnsave
mov
mov
movsb
lods
xchg
jle
imul
lods
adc
push
jb
adc
mov
or
into
fldl
lods
cmp
adc
sub
adcb
xchg
lods
lahf
push
out
xor
mov
push
mov
lahf
jge
imul
fimull
lret
xchg
pop
sbb
loopne
cltd
push
lret
cli
shr
xor
and
or
cmpsb
jecxz
orl
mov
jecxz
fcoms
scas
adc
lret
sub
in
fists
stos
fisttpl
and
in
cmp
loopne
push
adc
ret
jle
mov
rcrb
and
xchg
into
loopne
dec
into
and
in
sahf
adc
and
cmp
push
repz
mov
scas
adc
andl
xchg
jg
pop
xchg
mov
ret
add
sub
int
aas
ss
outsl
pop
push
cmp
pop
mov
sahf
push
push
aam
adcl
mov
loopne
xlat
push
adcb
and
push
xlat
rol
divps
lahf
in
xchg
std
and
pop
cs
scas
pop
and
int3
cvtdq2ps
inc
in
icebp
ja
fisubs
pop
nop
loopne
int3
and
sbb
dec
popl
mov
push
sub
nop
enter
das
mov
jecxz
lock
into
pop
push
les
lahf
and
aam
popf
mov
inc
cmpsl
shrb
int
dec
faddp
daa
sahf
scas
insl
mov
push
push
scas
dec
fidivrs
mov
pop
sub
dec
fdivr
pop
outsl
adc
mov
wrmsr
and
inc
nop
adc
das
adc
and
into
sahf
out
adc
xor
adc
lahf
insl
ror
into
or
xor
and
outsl
rclb
scas
pop
mov
fmulp
daa
sahf
fcompl
fidivrl
mov
mov
popa
dec
loopne
xlat
imul
and
dec
int
push
ds
scas
rol
xor
jb
ds
ds
into
insl
fidivrs
btr
sub
or
xor
loopne
mov
sbbb
ja
mov
hlt
pop
mov
mov
dec
jo
adc
mov
ror
and
in
rcr
pop
and
daa
in
lock
and
shlb
fimuls
das
hlt
mov
sub
inc
and
mov
scas
inc
jo
movsl
call
push
cmp
pusha
sbb
pop
lahf
not
mov
jns
adc
or
and
jmp
lods
xchg
and
lea
xchg
bound
sub
outsl
xchg
std
add
inc
jmp
adc
xchg
adc
js
push
push
ret
int3
add
cmp
push
adc
lock
ja
jmp
jg
stos
xchg
jge
stos
or
xor
lods
mov
xchg
cmpsl
xor
stos
out
imul
push
jecxz
loop
and
lods
outsl
mov
inc
pextrw
xor
dec
lea
lret
fadds
cmp
pop
mov
dec
bswap
jo
jg
insl
lods
cmp
cmc
daa
add
adc
cli
iret
out
stos
xchg
lcall
dec
mov
push
aad
push
mov
adc
mov
xchg
je
xchg
and
adc
inc
push
xchg
push
lods
xor
sbb
out
pushf
dec
scas
insl
mov
test
mov
mov
push
pop
lahf
jmp
ljmp
xorb
dec
or
jae
movsb
into
ds
test
push
xchg
mov
fisubl
movsl
push
test
inc
cmp
jecxz
and
loope
lock
xchg
cmp
or
shrb
test
cmpsb
pop
sbb
sub
mov
jmp
sbb
mov
int3
ror
dec
adc
fsubs
movsb
mov
push
xor
pop
iret
dec
mov
and
push
and
and
xor
orb
sub
mov
and
loopne
push
mov
es
dec
lock
div
mov
shrb
hlt
fisubs
push
lcall
dec
out
pop
mov
mov
dec
mov
cmp
sub
xchg
fidivs
rolb
jmp
xchg
shl
mov
and
adc
iret
pop
outsl
push
in
shl
mov
push
aam
mov
pop
outsl
inc
dec
inc
out
adc
nop
mov
enter
fmulp
jle
loop
mov
sarb
cmpsl
and
push
push
adc
push
fcoms
shrb
aas
and
lahf
and
jg
daa
int
or
outsb
sbb
xchg
xor
mov
les
mov
push
popf
push
iret
rorb
cwtl
int
aas
scas
dec
das
scas
dec
ss
clc
mov
aaa
iret
pop
lods
ret
xchg
adc
aaa
ficomps
ljmp
adc
adc
xchg
ds
mov
dec
rcrb
cmp
scas
inc
push
sub
pusha
jae
nop
dec
sarb
iret
mulb
call
iret
cmp
pxor
sub
popa
inc
scas
sub
lods
sahf
arpl
mov
rcl
adcb
sarb
push
mov
out
xlat
jo
or
xor
lcall
call
mov
and
and
mov
iret
sahf
fnstsw
mov
dec
push
mov
shrb
dec
pop
ljmp
push
call
fistl
xor
pushf
push
pop
iret
nop
shlb
xchg
das
or
push
rclb
mov
shr
jle
pusha
je
xor
js
xor
sbb
fs
add
push
dec
adc
lods
repnz
test
mov
addr16
inc
into
and
pop
push
popf
jp
push
and
loope
adc
daa
sbb
in
cltd
sub
std
lods
and
dec
dec
es
mov
cmp
orl
xor
sub
push
imul
cmc
inc
popf
mov
cmp
mov
or
add
xchg
in
xor
mov
loopne
cmpsb
jmp
mov
xchg
into
mov
push
jnp
gs
xor
xor
jmp
cmpsl
jae
inc
daa
mov
xorb
sbb
fmull
int
test
adc
lcall
pop
and
add
jnp
lret
adc
scas
fcoml
sbb
mov
scas
fucomp
jmp
sbb
stos
xchg
jb
stos
push
add
sub
lret
repz
add
jl
ja
push
bts
int
das
mov
pop
popf
fisubl
push
adc
xor
jnp
scas
inc
movsb
add
cltd
sub
in
pop
sbb
lods
cmp
call
fmull
adc
cmp
xor
sub
js
xchg
cltd
movsb
mov
push
cmpsl
fmuls
movsb
xor
icebp
dec
call
adc
and
dec
rorb
in
jnp
jae
popa
cmp
incl
sbb
call
cli
jb
loop
shll
jbe
mov
mov
out
and
pop
xchg
dec
dec
sbb
decb
adc
addr16
ret
jb
fldt
jl
enter
inc
push
cmp
lods
xor
mov
scas
rclb
and
insb
or
je
push
in
pusha
mov
pop
sub
popf
jnp
cs
int3
insl
xlat
xor
out
rclb
xchg
test
or
into
adc
jbe
push
repnz
xor
push
loopne
cwtl
or
push
repz
shrb
push
addr16
outsl
in
lret
xor
rclb
imul
shlb
and
pop
loop
shrb
adc
and
ja
adc
sub
outsl
jae
adc
jg
push
wrmsr
fcompl
shl
fwait
jb
into
or
in
mov
sti
into
icebp
jl
pusha
cmc
xlat
mov
scas
lods
dec
sbb
fildll
pop
xchg
and
push
pushw
push
push
loopne
and
push
enter
scas
rorl
out
dec
mov
mov
pop
call
sub
jle
mov
pushf
lahf
std
shrb
fnop
and
mov
cmp
and
xchg
out
push
lahf
enter
sub
sub
pop
ret
xchg
push
mov
out
scas
cmpb
and
cmp
or
cmp
movsb
push
rclb
xlat
sahf
push
aam
movb
into
cvtps2pi
into
mov
sub
xor
bswap
int
sarl
dec
aas
mov
push
test
mov
push
sbb
inc
das
shlb
lock
push
aad
adc
loopne
jge
adc
rclb
mov
rclb
pusha
xchg
dec
arpl
pop
pop
call
push
rcr
stc
add
nop
mov
xor
loope
lock
aas
dec
xchg
aas
nop
into
mov
idivb
mov
xchg
sarb
xchg
xorps
rorb
xchg
xor
popf
xchg
std
aas
mov
xor
push
fbld
ds
xor
cs
mov
pushf
scas
cmpb
mov
sti
mov
and
popf
out
out
fsts
cmp
sub
cld
rcll
out
xor
mov
aas
mov
adc
or
mov
fs
popa
test
jle
imull
sub
pusha
ljmp
xchg
je
and
push
adc
icebp
and
mov
fadds
std
cltd
cmp
sbb
xchg
mov
aas
sub
pop
and
imul
imul
es
cmp
scas
mov
cmp
add
pusha
sub
popl
rcrb
dec
lock
mov
xchg
sub
mov
xchg
mov
lods
push
xor
jmp
mov
shlb
lds
push
shrb
mov
mov
xor
insb
xchg
adc
dec
enter
push
add
sbb
insb
cmc
dec
js
mov
cmp
rolb
or
ret
sbb
add
adc
jb
leave
dec
fpatan
ja
lret
mov
cmc
sti
lahf
or
xor
aad
or
cmp
mov
cltd
adc
popl
push
xor
cmpb
fists
inc
hlt
dec
jg
mov
pusha
lea
shlb
mov
aas
fs
mov
incl
clc
cld
imul
loope
or
inc
and
adc
lods
add
lods
jo
dec
xchg
and
daa
jmp
mov
aad
lret
retw
mov
cli
jae
lea
lods
adc
mov
inc
mov
outsl
xor
sub
cli
push
add
cmc
xchg
mov
jo
filds
psubb
pusha
lods
push
mov
fidivrl
sbb
jg
dec
inc
push
clc
mov
fsts
faddl
and
test
int3
and
lock
icebp
lock
les
out
sub
sti
xor
je
adc
clc
lods
push
or
mov
out
repnz
mov
mov
mov
sarl
aas
cmp
adc
imul
cmp
loop
fsubs
xor
push
mov
clc
cmp
shrl
movsl
push
mov
inc
jl
jno
cltd
mov
lret
test
sub
or
pop
and
in
dec
jmp
mov
into
sarl
mov
mov
sbb
data16
and
aam
ljmp
ljmp
jecxz
pop
add
fsub
sub
ja
jge
xor
adc
scas
adc
xor
das
and
mov
ret
add
fcompl
mov
popa
fisttpll
pop
push
adc
shlb
je
sbb
xchg
testl
test
lods
jge
mov
aas
mov
cmp
jl
sbb
mov
push
dec
fxch
pop
aam
lock
adc
jno
mov
add
xchg
loopne
into
mul
lods
idivl
pop
dec
repnz
xor
loopne
ds
out
mov
inc
mov
push
popa
lahf
fs
aad
pop
scas
push
jg
lods
enter
or
cld
cmp
lahf
dec
push
test
jecxz
pop
sahf
loop
dec
push
xchg
or
clc
jb
push
adc
scas
mov
dec
fwait
std
sarb
jnp,pn
mov
loopne
sub
cs
push
sub
call
rcrl
adc
shlb
aad
popa
xlat
mov
aas
cmpsb
sbb
ficoms
or
shlb
jns
cmp
xlat
movsb
xchg
mov
rol
cmp
cmp
dec
adc
mov
add
jne
jb
rol
lods
iret
adc
push
ds
mov
inc
out
bound
sub
scas
mov
data16
shlb
jp
int3
shrl
loopne
lret
adc
pusha
adc
cmp
jecxz
push
mov
adc
in
shlb
sbb
aam
sbbb
das
rclb
and
adc
lods
adc
call
out
pop
movsl
lret
loopne
sbb
and
pop
and
adc
dec
ret
enter
int
xlat
lret
inc
mov
lss
and
shrb
cwtl
adc
outsl
nop
into
mov
int
aam
push
testb
cmpl
shlb
fcompl
pop
ss
in
cs
and
jns
faddl
and
out
loopne
inc
fcmove
outsl
and
in
hlt
call
incb
rcrl
dec
lcall
ljmp
lods
in
cld
imulb
shrb
lods
push
and
ss
mov
orb
adcb
add
inc
call
sub
mov
rorb
out
testb
sub
rol
xorb
or
andnps
cs
sub
rclb
rclb
and
lahf
enter
shlb
pop
push
add
pop
outsb
xor
nop
into
in
pop
mov
sahf
or
into
pop
mov
scas
fiaddl
scas
lahf
das
mov
xchg
push
push
sub
or
js
fimull
push
scas
xor
shrb
nop
outsb
sub
mov
das
mov
repz
lea
into
push
das
pop
rorb
into
xor
scas
das
and
inc
pushf
mov
nop
fists
pop
and
outsb
pop
adc
add
scas
adc
push
push
call
xor
pop
out
mov
and
outsb
adc
fisubrl
outsb
push
aas
mov
mov
cmpl
aad
and
sbb
adc
sbb
and
mov
int
lods
je
in
sub
cmp
mull
or
add
in
add
arpl
lods
imul
jno
out
dec
mov
pop
adc
je
pop
mov
or
fldcw
jecxz
mov
mov
ljmp
loope
mov
xor
sahf
jnp
cmp
insb
jmp
insb
pop
repz
cmp
inc
fstl
cltd
mov
decb
sub
enter
add
cmpsl
or
mov
xlat
ds
push
dec
sbb
shlb
stc
shrl
and
dec
cs
hlt
fsubr
adc
test
jmp
pmulhw
mov
sbb
xchg
shlb
out
loope
sub
rcrb
mov
cmpb
cmpl
scas
pushl
call
test
inc
sbb
add
cli
fstl
lcall
sbb
sbb
mov
mov
fildll
mov
pop
push
xor
mov
add
rorl
das
mov
js
add
lods
lods
sub
ja
insb
orb
enter
inc
inc
inc
sbb
cmc
cmpsl
call
add
lea
pusha
mov
add
in
insl
mov
and
mov
xchg
scas
pushf
adc
lods
clc
test
inc
cmp
jl
pop
sahf
mov
fwait
pop
negb
lods
cli
dec
cmc
sub
je
or
pop
idiv
adc
sbb
push
pop
scas
adc
or
xchg
rorl
cmpsl
insl
add
outsl
leave
int3
push
ret
movsl
xchg
adc
dec
fstps
mov
subb
out
push
sti
jge
mov
mov
pop
clc
xor
in
sbb
lret
and
lock
xchg
mov
push
push
cwtl
lods
std
loop
add
loopne
jne
xor
jno
popa
arpl
frstor
stc
test
iret
cmpb
out
pop
sahf
sub
sub
les
popl
dec
insb
sti
push
cld
pop
mov
andl
adc
test
xchg
jno
and
scas
out
inc
bound
inc
incb
xchg
mov
cltd
push
into
sub
daa
jge
ja
call
fcmovnb
jle
adc
divl
xor
clc
addr16
sub
pop
mov
ljmp
aam
jg
stos
adc
aaa
add
fmul
mov
je
iret
xor
dec
inc
add
je
clc
bound
movsl
icebp
xlat
xchg
mov
sub
pop
mov
movsl
scas
cmp
pop
lret
dec
aas
inc
inc
arpl
xchg
sub
je
or
scas
jp
mov
and
andl
xor
push
orl
mov
sbb
sti
dec
mov
mov
lea
subb
xor
sbb
scas
test
inc
push
fcmovbe
lcall
loop
pop
cmp
shll
sub
jl
mov
sbb
jg
xlat
je
out
mov
mov
imul
sub
aad
inc
inc
stos
xor
fildl
fists
xor
mov
sub
cmpsl
cmp
lods
cmp
push
js
aad
sbb
mov
sahf
test
jne
jae
js
das
imul
inc
sub
int3
and
popa
mov
out
rorl
loopne
add
or
jl
sub
mov
lcall
add
inc
fldenv
jnp
mov
xchg
mov
xor
inc
and
mov
sub
or
loop
lcall
mov
rcrl
test
push
sti
mov
lods
sar
jns
mov
mov
cmp
add
inc
outsb
jp
xor
loope
xorl
es
jmp
flds
push
fs
push
or
mov
aad
and
push
out
fldcw
dec
push
jae
jl
test
cli
cs
pop
js
pusha
cwtl
je
push
hlt
sbbb
lahf
in
mov
loope
mov
aas
das
testb
and
cmpsl
ret
loopne
mov
jbe
gs
mov
mov
or
enter
ljmp
jns
mov
push
xchg
jecxz
pop
mov
rcll
mov
orl
push
nop
loope
mov
clc
and
cmp
adc
mov
lret
and
jmp
mov
mov
dec
fisubs
mov
mov
mov
mov
cmp
cmp
xor
xchg
dec
xchg
hlt
repz
daa
in
xchg
mov
pop
and
xor
in
rorb
out
and
shll
aas
xor
sbbb
int3
loope
mov
test
mov
mov
cmpsl
insl
cmpsl
adc
cwtl
and
push
jge
jns
ljmp
push
and
sub
cli
mov
push
adcl
adc
loope
mov
clc
test
lea
mov
cmp
pop
adc
scas
out
test
fimull
dec
sub
adc
fdivs
les
dec
std
int3
mov
adc
and
push
sub
out
add
pop
xchg
add
push
add
adc
repnz
or
sbb
cs
cmp
ljmp
pop
or
mov
ja
push
data16
mov
pop
shl
push
mov
out
jmp
dec
mov
fs
lods
js
repnz
and
mov
inc
or
outsb
jno
lods
inc
xchg
inc
xor
call
addb
lods
movsb
xchg
or
pop
loop
mov
and
rcrb
dec
push
mov
scas
js
pop
hlt
filds
daa
jg
dec
out
call
add
inc
adc
and
push
sahf
loop
notb
xchg
call
and
daa
int
or
je
popl
mov
sub
es
dec
decl
in
pop
xor
fnop
cmp
dec
lock
sahf
or
cmp
jo
lcall
aad
test
pop
mov
adc
push
dec
cli
xchg
ret
push
inc
shl
int
ror
sbb
push
xchg
mov
dec
lods
xchg
xor
mov
adc
and
ljmp
sbb
push
adc
xor
inc
cltd
daa
xor
pop
pop
aad
cmp
mov
cmp
cmp
and
lods
mov
pop
ljmp
sbb
test
outsl
loope
lea
int
enter
inc
push
pop
inc
and
inc
inc
sub
jg
and
sub
pop
scas
jl
xor
sahf
arpl
test
js
inc
jae
xor
jno
or
cs
inc
test
std
mov
insb
jge
xchg
cwtl
daa
add
lods
lods
test
push
popa
fisubrl
movsb
pusha
or
mov
imul
pop
pop
into
inc
lods
ret
mov
sbb
stos
fidivrl
sub
lahf
out
mov
int
pop
sahf
add
jecxz
cmp
inc
fsts
fnsave
cmc
jge
lds
xor
fbld
mov
mov
out
ret
push
mov
fsubs
dec
inc
pop
jnp
mov
rcll
mov
or
imulb
add
int
fnstenv
dec
out
dec
sets
or
jno
cmpsl
jae
and
std
pusha
dec
pop
xor
aad
in
lret
repnz
adc
fnsave
aas
mov
cld
or
arpl
das
sbb
lds
ds
mov
sbb
shll
cmpsb
lds
jne
les
out
dec
sarl
cmpsl
adc
xor
mull
cltd
pop
and
sub
enter
aas
aas
jge
adc
mov
fldenv
and
add
adc
xchg
sbb
ja
dec
cmp
sub
xor
rcrl
lret
push
sbb
stc
lret
inc
cmpl
xor
jae
iret
cmp
scas
jb
cmp
call
inc
mov
mov
ljmp
xor
ret
cmp
sbb
jno
mov
scas
push
add
jmp
outsl
fwait
aad
and
fs
xor
sub
pop
hlt
cmc
aad
pop
mov
mov
stos
sub
and
fbld
pusha
or
add
leave
cs
or
jb
stos
adc
sti
out
test
sbb
push
cmc
adcl
test
push
dec
fdivl
scas
in
stos
push
mov
lods
adc
adc
cli
subb
xchg
or
mov
cmp
inc
dec
pop
iret
aam
xchg
imul
sub
or
jecxz
subl
xchg
clc
lods
scas
mov
jecxz
pop
xchg
out
sbb
je
ja
inc
sub
out
inc
mov
aaa
or
outsl
aad
jge
lea
out
mov
mov
adc
adc
adc
xor
out
xor
inc
add
add
shr
imulb
lods
popa
scas
mov
jg
mov
mov
pop
movswl
cmpsb
lret
mov
sbb
gs
loopne
push
scas
ficompl
repnz
pop
or
and
sub
inc
add
out
ret
mov
or
xchg
fimuls
mov
sub
cmp
sarl
add
mov
xorb
imul
push
les
in
adc
mov
mov
mov
xor
and
js
add
out
je
repz
inc
and
mov
out
xchg
cmp
cmp
sbb
scas
inc
mov
push
push
dec
fldcw
or
adc
or
push
xlat
jne
and
int3
es
repz
fisttps
mov
fbstp
sbb
fs
adcb
in
cs
ffreep
cmp
mov
sbb
or
add
movsb
fiadds
xlat
adc
xchg
mov
test
add
push
lds
or
sub
jl
mov
mov
pusha
mov
cmp
or
std
lret
rcll
unpckhps
js
lret
push
dec
rolb
mov
loopne
pop
shll
jmp
ret
xorl
arpl
push
mov
jg
cmpsb
mov
outsl
int3
inc
push
loope
dec
ret
cmpsb
insb
mov
jbe
mov
mov
and
lods
xchg
movsl
jecxz
push
sbbb
aaa
dec
fs
dec
movsl
sub
call
imul
adc
in
sbb
push
push
cmp
hlt
clc
lock
push
clc
insl
ja
lea
and
add
adc
sub
inc
fisubs
and
push
in
or
js
in
dec
xchg
inc
hlt
sbb
in
test
pop
and
and
mov
iret
mov
jae
lock
test
push
gs
adc
mov
dec
pop
mov
out
jecxz
mov
movsl
mov
sub
mov
or
fmull
les
sbbl
mov
jmp
cmp
sbb
je
in
movsl
aas
sub
or
mov
lahf
stc
mov
sbb
shr
je
loope
insb
and
mov
mov
mov
mov
cmp
adc
sbb
mov
mov
jp
pop
leave
outsl
stc
insb
test
nop
fstpt
inc
lods
imul
lods
cld
mov
jmp
push
jmp
arpl
adc
inc
push
shlb
xchg
mov
repz
inc
xlat
adc
ret
cld
loopne
outsl
nop
sti
xor
outsb
mov
mov
jo
mov
jno
push
add
je
js
in
inc
jg
fsubrs
mov
inc
or
dec
loop
and
das
ret
imul
sbb
sub
mov
aaa
cmpsl
xor
push
mov
imul
ror
xchg
and
add
dec
iret
aad
scas
stos
cli
pop
xchg
imul
call
cmp
push
dec
xor
mov
mov
jns
pop
dec
pop
adc
mov
pop
pop
adc
and
sub
push
cli
xor
inc
lea
mov
and
xor
addl
mov
fdivrs
nop
xlat
daa
sahf
add
adc
mov
jmp
js
or
xor
adc
jmp
in
xor
adc
fidivrl
call
xchg
js
sbb
xor
push
mov
cli
mov
decb
pop
pop
push
scas
loopne
xor
fldenv
enter
mov
cmpsl
mov
push
cmp
into
xor
repnz
orl
mov
arpl
dec
mov
sub
popf
or
xchg
out
jge
cmp
mov
test
jmp
jp
adcb
adc
jns
mov
pop
pop
sar
dec
adc
mov
ja
mov
repz
mov
pop
loopne
jnp
ss
pop
push
xor
xor
inc
mov
or
int
inc
outsl
ja
scas
pop
sub
iret
call
and
lods
and
fs
imul
mov
jb
mov
inc
adc
clc
shrb
push
aam
dec
pop
pop
mov
xchg
add
mov
dec
sub
test
push
xorb
adc
inc
mov
pop
inc
aad
adc
cmp
sbb
dec
cmpsl
call
sub
loopne
and
fs
loop
cmp
jecxz
add
lret
movsl
in
lods
dec
ss
sub
sbb
lea
aad
imul
sub
sub
and
cmp
sbb
adc
lods
shlb
pop
cmp
cmp
shrl
in
sub
and
sub
push
iret
pusha
jle
insl
sub
rcll
fistpl
and
and
jmp
roll
in
insb
int
adc
scas
addr16
hlt
xchg
mov
xor
lods
push
jp
ja
ss
shlb
test
xchg
rolb
repz
mov
cwtl
adc
cmp
ficoms
mov
int3
andb
sbb
outsb
or
xchg
js
call
push
shll
xchg
mov
insl
jne
cmp
daa
pop
pop
mov
imul
aaa
sub
nop
and
insb
sbb
mov
push
data16
lret
sbb
push
icebp
dec
loope
scas
sub
push
ficoml
xchg
add
add
sub
ljmp
scas
neg
scas
xchg
inc
sbb
push
mov
dec
ds
adc
je
hlt
jnp
mov
lds
imul
xchg
dec
test
shrb
je
jl
pop
xlat
imul
test
push
bswap
adc
iret
dec
jmp
lods
push
push
jge
pop
das
inc
lahf
in
add
ljmp
shr
adc
mov
fcomi
add
movsl
mov
in
xchg
sub
push
push
mov
fiadds
and
bound
das
movsb
jo
push
jne
mov
faddl
sbb
xchg
cmp
mov
add
out
pop
jmp
orb
xor
cmp
cmp
call
cltd
adc
xlat
mov
mov
cmp
xchg
pop
movhps
fs
mov
aaa
jmp
push
icebp
lods
lods
and
fbld
cmp
xchg
int3
cs
aaa
in
inc
or
mov
jno
jnp
jb
sbb
or
js
fdivrl
aaa
and
xor
lods
pop
test
mov
push
je
mov
lea
mov
mov
lret
lods
in
cmp
add
cmp
ret
push
pop
hlt
rol
inc
lods
rcrb
cmp
sub
dec
push
push
scas
adc
pusha
or
data16
fs
rorl
xchg
ds
shl
mov
dec
notb
pusha
jo
sbb
out
jecxz
movq
aad
dec
jnp
arpl
popf
inc
out
enter
sbb
mov
das
enter
xchg
sub
out
sahf
xchg
scas
adc
scas
leave
xor
push
pop
xor
out
pop
lods
adc
or
prefetch
or
imul
das
out
add
ljmp
ljmp
sbb
xchg
jbe
cltd
dec
in
repz
stos
lods
sub
sub
jmp
loopne
sub
and
adc
gs
sarl
sub
cmpsb
nop
enter
popf
mov
cmp
in
xor
cmpsl
lcall
and
iret
aad
ljmp
mov
xlat
stos
xor
mov
aaa
stc
mov
xor
outsb
das
push
lods
insl
adc
xchg
sbb
loopne
mov
loope
xor
mov
pop
adc
cld
scas
or
and
lcall
push
add
je
xchg
fdivrl
rclb
dec
in
push
and
movsl
mov
push
loop
xor
push
in
scas
lcall
cwtl
insl
jg
pop
inc
xor
int3
inc
addr16
addl
jae
std
test
push
test
in
xor
data16
fmull
shrb
lea
enter
ror
adc
adc
inc
fnsave
mov
jge
push
je
sub
add
in
ret
test
mov
push
mov
xchg
add
cwtl
sahf
mov
and
mov
mov
addl
loope
fld
pusha
inc
int
fs
mov
int
add
inc
cmp
cli
call
imul
inc
mov
and
fists
insb
int
outsl
stc
das
xlat
adc
jo
lods
adc
xorb
mov
jno
repz
mov
int3
push
inc
adc
test
sub
lods
xor
insb
mov
and
dec
jne
ja
cmp
in
fldt
adc
loop
push
adc
or
fildll
inc
js
loopne
pushf
in
cwtl
mov
mov
scas
dec
in
mull
jecxz
in
out
xchg
inc
fs
add
inc
rorb
call
pushf
push
push
push
push
inc
fldt
adc
stos
sbb
mov
test
mov
cmp
mov
mov
adc
mov
push
add
repz
sti
xchg
out
pusha
out
xchg
mov
pop
jl
xchg
ficomps
das
add
imul
xchg
int3
repz
or
shrb
cmp
cmc
add
aad
icebp
or
out
sbb
inc
out
push
lods
call
pop
fisttpl
mov
dec
sarb
mov
jo
adc
xchg
shrb
jne
movsb
pop
lcall
or
sbb
fs
fwait
sarl
fldl2e
fstpt
push
es
sbb
lahf
push
push
mov
scas
and
lret
jns
adc
xor
ficomps
xor
sbb
mov
or
imul
push
lods
out
mov
mov
iret
pop
lcall
and
stos
mov
dec
or
dec
sbbl
fistpl
xorl
ljmp
inc
xchg
pop
or
or
adc
ss
dec
js
int
imul
and
leave
cmc
insl
xor
pop
fildl
cltd
loop
cmpl
and
or
and
sub
fdivrp
xlat
cmpsl
sahf
push
adc
mov
adc
pushl
test
sbb
push
icebp
mov
sub
cmpsl
mov
aam
push
cmp
sub
adc
or
lock
push
cmpsb
rcrl
rcrl
pusha
xchg
ss
fnstenv
dec
inc
adc
enter
pop
pop
mov
adc
sar
jb
add
mov
aad
lret
mov
imul
xor
or
lret
sub
add
adc
mov
mov
mov
adc
in
mov
rcrb
mov
xor
mov
call
push
mov
jle
iret
sti
adc
je
das
mov
lods
enter
sbb
jne
jbe
xor
mov
add
cmp
in
loopne
push
xchg
mov
xchg
adc
movsb
adc
pop
xor
in
inc
mov
imul
cwtl
insl
push
and
leave
cmp
shrb
mov
addb
lods
adc
inc
out
push
mov
add
cmp
jle
adc
xchg
arpl
scas
push
mov
inc
sbb
insl
cli
fsubl
js
push
iret
mov
mov
and
icebp
dec
cmpps
ljmp
or
lods
nop
push
xchg
mov
mov
into
cmp
cld
xor
rcrl
inc
push
dec
out
hlt
in
adc
fbld
ja
out
into
popa
pop
sub
ljmp
cmp
fldt
daa
sub
dec
adc
ds
cmovp
and
or
jne
lea
sub
jo
mov
cs
jnp
push
pop
test
mov
outsl
sahf
xor
out
shlb
push
adc
rorl
idiv
jge
mov
xor
mov
cs
mov
filds
adc
cmp
xchg
or
repnz
mov
adc
imul
add
arpl
loopne
lahf
fldl
dec
jecxz
push
je
xchg
ret
push
or
fmuls
in
rclb
add
and
xor
push
or
lods
fsubp
add
fstl
stc
aad
sbb
xchg
fs
jns
pop
xor
sti
ja
inc
mov
clc
ljmp
sbb
mov
popf
xchg
jecxz
push
or
xchg
rol
addr16
das
and
pop
and
fs
imulb
pop
scas
loope
cld
pop
shl
and
or
loopne
stos
js
cmp
cli
ficoms
jne
or
lret
inc
jg
movsb
pop
xor
mov
mov
adc
fisttpll
xchg
xchg
imul
repnz
push
dec
lret
jbe
add
nop
addb
lds
repz
out
and
dec
push
sub
mov
nop
sub
inc
pop
push
nop
sbb
mov
scas
or
insl
popf
lds
fdivl
cs
pcmpgtd
in
das
jno
push
jle
or
push
nop
xor
adc
cli
adc
sub
or
xor
int
lock
sub
daa
mov
popl
hlt
cmpsb
push
int3
sub
mov
sub
daa
popf
lods
shrl
jne
dec
sub
xor
mov
mov
rolb
jecxz
and
fidivrs
push
rcr
dec
ds
jmp
mov
movsl
adc
bnd
adc
push
lahf
popf
push
xor
or
stc
mov
adc
pusha
push
test
mov
rorb
pop
sbb
mov
iret
cmp
or
pop
mov
sahf
xor
lock
and
add
xor
inc
loopne
fs
aas
divl
cmp
xchg
mov
or
jp
rcll
mov
f2xm1
test
lea
nop
mov
pusha
nop
xchg
rorl
fimull
sbb
jo
leave
fmuls
xchg
cwtl
ljmp
fsubrl
or
push
lods
or
xchg
sti
sarl
xor
push
mov
pop
fbstp
dec
pop
adc
pop
lods
and
push
rcrl
add
adc
xor
mov
clc
xor
pop
pop
jge
xchg
pop
push
pop
pop
lock
cwtl
rcll
push
in
dec
pop
xchg
adc
lods
jle
add
mov
jo
scas
arpl
inc
mov
adc
fs
orl
lods
outsl
mov
push
pushf
int3
subb
mov
push
cmp
shll
xchg
shlb
lea
push
adc
ja
int
in
rcl
xlat
movsb
push
sbb
aaa
insl
push
aaa
stos
insl
cmp
pop
xchg
adc
adcb
xchg
das
push
xor
pop
fs
movsb
imul
add
add
mov
or
and
push
cmp
popa
cwtl
inc
rorb
mov
xchg
test
inc
xchg
dec
aad
adc
dec
mov
filds
inc
lods
lods
or
in
mov
fsubr
outsl
notl
icebp
add
je
ja
adc
pop
lods
push
inc
scas
sbb
sbb
icebp
stos
das
popa
pop
aaa
ret
push
adc
lods
scas
jp
cmp
xlat
std
neg
mov
call
jne
xor
xchg
stos
lock
insb
outsb
jecxz
loopne
lods
jns
pusha
bound
and
je
test
push
lea
lods
loopne
add
adc
push
mov
sbb
push
out
scas
mov
push
push
in
mov
nop
jb,pt
mov
mov
cmp
outsb
dec
xchg
clc
jo
into
aad
cmp
test
aaa
fs
sbb
movsl
loope
scas
clc
jecxz
popf
push
add
mov
insb
int
sahf
pusha
push
cmpb
cli
xchg
xchg
aad
dec
mov
push
std
mov
aas
mov
mov
cld
cmp
mov
and
or
jno
jge
dec
mov
je
gs
lahf
xor
jge
add
imul
scas
lods
sub
cmp
pop
push
dec
in
cmp
mov
lea
cld
push
fs
cmc
add
and
dec
push
jbe
and
insl
loop
popa
dec
xor
repnz
arpl
and
fisttps
xor
imull
cmp
ret
add
das
loopne
jmp
dec
data16
loope
jecxz
pop
das
dec
in
adc
inc
popf
pop
inc
nop
jl
and
pause
xchg
movsl
fxam
sub
out
cmp
and
dec
inc
cmp
loopne
xchg
or
cmp
adc
icebp
push
loopne
popa
xor
sbb
cmpb
into
push
cmp
push
adc
adc
pusha
pop
add
push
pop
push
xchg
pop
inc
mov
mov
test
jecxz
cmpsl
push
add
and
mov
mov
and
clc
lods
fbld
fisttps
push
dec
enter
pop
das
sahf
sub
cli
ja
daa
roll
rcr
or
push
js
mov
pop
jge
cmp
xchg
xor
pushf
mov
jno
sub
jg
call
lods
nop
push
mov
pop
int3
sbb
aaa
pop
cmp
xchg
dec
jp
fnstsw
jle
dec
pusha
pop
into
shl
push
movsb
js
daa
dec
iret
xor
in
sbb
push
das
clc
sbb
jae
ljmp
out
in
fdivrl
std
clc
sarl
inc
or
ds
or
xchg
or
negl
mov
mov
cmp
pop
in
ljmp
jg
push
push
ljmp
out
adc
cld
jne
cli
pop
insl
mov
mov
push
inc
movsb
inc
sbb
sub
ror
outsl
ds
jnp
imul
cmp
scas
stos
xchg
test
shl
inc
mov
cwtl
or
fisubrs
scas
sarb
push
push
cmpsl
mov
mov
xor
xchg
mov
fcomps
push
lods
stos
cld
xor
inc
jp
add
lret
push
xor
cmc
xchg
incb
je
pop
add
mov
or
daa
popa
sbb
dec
or
sbb
sub
xor
dec
iret
cmpsl
and
push
push
add
shrl
inc
int
adc
scas
mov
fs
dec
mov
push
std
je
sbb
push
icebp
xor
and
popf
xchg
xchg
xchg
scas
pop
add
mov
popa
and
cmp
lods
inc
push
cs
cmpsb
aad
xor
fstpt
outsl
lods
adc
cli
xor
push
jns
mov
nop
mov
je
insl
jge
xor
pop
adc
icebp
enter
push
mov
mov
xor
dec
lods
and
pop
fildl
mov
lock
fcoms
inc
into
mov
mov
aaa
stos
iret
int
dec
pusha
call
push
int
xor
das
push
sbb
outsb
rorl
gs
iret
and
push
jo
pusha
ret
loop
orb
inc
movsb
pop
adc
xchg
or
ljmp
pusha
test
dec
sub
cmp
les
sbb
mov
movsb
nop
push
out
push
dec
aas
dec
mov
movsb
mov
dec
addb
movsb
add
sarl
xchg
pop
mov
xor
xlat
stos
popa
lock
jae
mov
insb
out
add
sbb
xor
shlb
push
xor
ret
call
fwait
or
repnz
and
cmp
push
daa
dec
mov
adc
jg
insl
adc
dec
push
jg
sbb
dec
and
adc
int
jbe
sub
cmp
mov
inc
xor
dec
imul
out
lods
mov
lds
mov
jecxz
jl
js
mov
adc
adc
sub
xor
fimuls
sbb
pop
or
filds
mov
mov
mov
and
pop
scas
cmp
jne
into
fdivrs
call
adc
imul
push
insl
bound
pop
adcl
cmp
pop
test
ja
sti
jmp
imul
ljmp
ljmp
cmp
mov
movsl
mov
pusha
or
out
dec
dec
shl
es
jb
push
sub
mov
fwait
jecxz
pop
imull
xchg
pop
inc
cmpsl
imul
pop
clc
jge
sub
cmp
subl
mov
cs
xor
adc
fmuls
lds
call
imul
out
lret
inc
lock
push
cmp
jge
scas
movsb
or
lods
mov
mov
jmp
ds
jl
test
push
xor
push
dec
loop
loopne
in
mov
xor
scas
mov
xorb
lcall
push
pop
pop
sub
inc
mov
sbb
sbb
je
mov
adc
pop
pop
mov
idiv
cmp
in
test
adc
mov
jns
lret
adc
dec
cmp
pop
fldcw
xchg
add
pop
cmpsb
fcoml
mov
lret
lcall
adcl
xchg
sub
pop
cli
imul
jo
sti
xlat
into
mov
lods
cmp
sbb
adcl
inc
adc
and
lret
rcll
mov
cmpsl
fimuls
mov
sti
sub
lods
jbe
dec
aam
in
mov
add
scas
clc
fadd
push
adc
aam
movsb
dec
pop
mov
pop
shrb
int3
aas
inc
push
scas
push
push
fstps
push
jns
aaa
jp
or
mov
adc
sub
ret
add
fs
arpl
in
cmp
lret
adc
or
scas
and
faddl
lds
jecxz
adc
and
je
movsb
aaa
in
insl
test
mov
adc
in
pop
imul
pop
arpl
fisttpll
mov
das
clc
sti
mov
pop
lods
dec
xlat
popa
dec
jo
in
cmp
test
subb
inc
das
jns
loop
call
jecxz
testl
or
jl
jo
cmp
adc
scas
addr16
jno
lods
xor
sbb
dec
xor
lods
out
bound
out
push
or
inc
in
sbb
in
lods
and
inc
xor
je
pop
popa
mov
mov
clc
push
and
inc
js
je
pusha
xchg
loope
jo
lret
pushf
lods
mov
bound
mov
xor
jmp
fs
cmpb
leave
mov
adc
push
xchg
mov
outsl
in
add
call
pushf
shl
orb
mov
xchg
pop
push
pop
imul
repnz
cs
mov
cwtl
push
or
inc
dec
daa
out
jb
lods
xchg
add
inc
lret
faddp
ljmp
push
xchg
out
mov
xor
scas
mov
cmpsb
mov
cs
mov
cmp
jne
mov
mov
std
xchg
gs
sbb
sub
xorb
and
lods
push
xchg
or
js
mov
xor
pop
add
mov
cmp
dec
sub
push
mov
xlat
hlt
stos
leave
pop
cmp
sbb
xor
pop
cmc
mov
popa
daa
sub
cmpsb
pop
ffree
movsb
insb
jno
cmp
aam
push
mulb
cmpl
xchg
jmp
mov
cltd
insb
xor
xor
lods
hlt
adc
mov
jns
pop
push
adc
cmp
dec
icebp
sub
or
fdivl
mov
dec
clc
int3
lock
adc
nop
fwait
icebp
jne
push
scas
add
add
mov
repz
sub
or
dec
ds
adc
mov
sbb
sarb
sbb
cmp
arpl
dec
inc
js
sub
dec
aad
loope
xor
movsl
outsl
les
jne
mov
or
or
sbbb
push
loopne
pusha
adc
test
mov
xor
das
push
in
negl
mov
negb
scas
add
jl
sub
movsb
daa
lahf
sbb
les
adc
mov
dec
push
inc
fildll
movsb
dec
mov
push
xor
aaa
mov
loopne
or
iret
sub
push
ss
shrb
shl
and
and
adc
outsl
jle
lahf
push
mov
inc
push
andl
lods
xor
mov
fdivr
cs
iret
dec
pop
push
in
push
push
lcall
iret
add
out
out
xchg
ljmp
xor
mov
cld
push
mov
inc
or
mov
es
je
out
ds
cmp
and
pop
cwtl
repnz
adc
ja
shrb
xchg
ds
insb
add
inc
clc
sbb
jecxz
mov
das
inc
jge
sbb
fs
xchg
test
inc
adc
inc
sbb
dec
mov
je
call
rep
insb
out
insl
and
gs
call
outsb
mov
pop
xor
shrl
xchg
mov
movsl
popl
jne
push
push
add
rorl
ja
cwtl
sub
cmc
xchg
out
nop
lret
lret
mov
mov
cmp
push
cmp
jns
jbe
popa
rcrb
test
push
arpl
mov
cmp
sbb
sbb
or
ret
and
adc
shr
adc
lods
test
xchg
cs
xchg
cmp
xchg
mov
outsl
xchg
sarb
daa
cmpsl
movsl
cmp
ficoml
mov
dec
adc
lods
popf
fimuls
mov
test
adc
lds
sub
test
pusha
push
lahf
hlt
xor
xorb
pop
dec
enter
filds
and
dec
dec
lahf
pop
movsb
aas
jmp
xor
mov
or
shrl
pusha
mov
jbe
xchg
test
jle
cmp
lcall
jb
aaa
sub
jne
cmp
adc
subl
add
dec
jp
icebp
pop
mov
and
xor
dec
in
scas
test
add
adc
mull
add
xor
mov
int3
outsl
push
ss
mov
pushf
jecxz
mov
push
call
fcomps
dec
scas
inc
sub
push
sbb
pop
adc
je
dec
or
mov
sbb
js
in
loop
sbb
jns
daa
and
xlat
xchg
mov
call
or
add
mov
ja
add
adc
push
arpl
jnp
mov
push
adc
cltd
inc
and
xchg
andb
fisubl
jp
xchg
cmp
je
out
xorb
out
movsb
pushl
aad
jge
xchg
lods
rolb
inc
push
jecxz
dec
push
hlt
mov
mov
dec
stc
stc
icebp
mov
add
inc
jl
sub
sbb
lods
divb
sbb
cmp
or
inc
mov
scas
sbb
pushf
fildl
int
dec
movsb
nop
insb
xor
or
sbb
movsl
ds
add
scas
xor
dec
popa
xlat
repz
dec
xchg
or
xor
test
xchg
jecxz
and
idiv
sbbb
lods
pushf
sahf
push
dec
fwait
push
imul
dec
xlat
dec
out
je
lock
ss
mov
out
mov
rorb
mov
fs
ljmp
and
push
mov
sarl
popa
adc
loopne
dec
add
mov
fildl
sbb
jg
cmp
add
mov
cmp
xchg
add
out
sub
pop
scas
pop
xchg
ficoml
out
pop
movsb
out
jecxz
dec
aaa
pop
xchg
push
add
xchg
addb
xor
inc
das
xor
mov
and
int
decl
xor
jbe
adc
inc
mov
cmpsl
imul
jecxz
subb
sar
sub
push
lret
mov
sbb
add
lcall
aas
rorl
loop
mov
dec
push
lods
std
mov
or
add
pop
mov
lret
pop
scas
sarb
stc
dec
pop
ds
pop
scas
xor
rcrb
inc
mov
sbb
scas
push
fidivs
mov
inc
ret
and
mov
jmp
int
xor
test
aas
sbb
lea
adc
mov
jl
dec
adc
push
jmp
dec
in
cs
loope
out
test
je
xchg
mov
or
aaa
push
adc
adc
insl
movsb
out
enter
sbb
es
int3
push
fnstenv
cmp
stos
or
pminsw
xor
xchg
inc
les
and
out
xchg
pop
mov
and
mov
popf
jae
fists
jb
dec
roll
scas
stc
cmp
add
xlat
jmp
clc
jmp
push
int
cmp
dec
ucomiss
mov
inc
cmp
fstpt
xor
jno
push
jnp,pt
cmpsl
pop
arpl
dec
cmp
pop
call
or
pop
mov
adc
aad
xchg
inc
inc
les
push
js
adc
mov
das
pop
insb
mov
add
fsubrp
add
cwtl
out
in
dec
js
cltd
insl
fmull
xor
pop
xchg
scas
jno
fidivrl
push
imul
xchg
push
xor
cmp
aad
cmp
mov
daa
push
movsl
lret
aam
xor
push
xor
xor
pop
sbb
into
repz
arpl
call
not
fs
sub
dec
iret
inc
dec
or
inc
or
mov
xchg
dec
cmp
outsl
rcl
xor
out
movsl
in
mov
xchg
out
orb
and
cmp
push
ljmp
js
adc
inc
push
sub
cs
repnz
push
and
add
sbbl
inc
je
push
mov
push
push
xor
test
sub
stos
inc
out
sarb
mov
movsl
imul
lods
inc
dec
push
test
or
je
cmp
sub
adc
push
gs
sub
sbb
in
add
das
fs
push
aaa
aad
dec
inc
scas
js
fdivs
mov
xor
mov
adc
dec
cmpsl
xorb
jno
lods
int
xor
aad
push
outsb
cmp
xor
lods
outsl
dec
fnstenv
mov
mov
and
jl
leave
lret
jg
loopne
or
mov
insl
mov
cmp
stc
or
lods
dec
pusha
les
mul
dec
adc
add
andl
sbb
mov
push
adc
shll
inc
aad
mov
frstor
mov
adc
lods
inc
scas
and
orl
add
sahf
lods
sub
or
mov
cwtd
data16
aaa
ds
paddusb
in
adc
ja
inc
adc
add
push
lods
out
dec
das
scas
cmp
or
cmp
scas
int3
mov
jo
adc
cmp
int3
or
aad
mov
jge
lahf
dec
sub
femms
scas
inc
sahf
pop
xchg
add
mov
xor
insb
add
mov
cmp
das
stos
cs
cli
fbld
adc
push
roll
xchg
xor
test
stc
xor
mov
aad
pop
scas
and
adc
xchg
pop
xchg
out
sbb
push
outsl
sbb
dec
mov
jns
loop
jmp
aaa
and
int3
inc
scas
xchg
rolb
push
fs
rcl
or
das
xor
jnp
add
dec
pop
lods
push
jae
cmpsl
and
std
movsb
inc
and
aad
lahf
cmp
push
dec
mov
add
int3
lret
mov
test
xor
cmp
fidivrs
inc
jnp
imul
mov
add
xor
daa
dec
dec
lock
dec
in
push
imull
into
lret
mov
repz
xchg
movsl
sbb
mov
and
and
cmc
pushf
call
ret
push
adc
rorb
sub
mov
outsl
jmp
xor
adc
sbb
dec
sbb
add
shlb
add
je
in
push
lret
stos
xchg
xchg
test
movsl
imul
jecxz
nop
xor
iret
lods
dec
shll
pop
sarb
das
sub
movsl
adc
and
movsb
rcpps
inc
popa
incl
xor
push
int3
xchg
jae
jns
arpl
adc
xor
or
jo
daa
dec
das
outsl
add
dec
dec
iret
jecxz
imulb
hlt
jne
pop
mov
sbb
loope
cmp
in
jae
pop
lea
and
mov
dec
adc
mov
sbb
nop
gs
sbb
pop
rcll
mov
pushf
sub
enter
xchg
movsb
lcall
cld
lods
ds
imul
mov
aaa
neg
pop
mov
add
daa
movsb
loopne
mov
adcb
decb
roll
js
out
cmpb
cmp
cmp
in
hlt
jl
adc
jl
cmpsl
out
adc
outsl
cltd
pop
sarl
out
fwait
sub
push
repnz
add
adc
mov
js
and
inc
xor
xor
iret
mov
jne
sbb
scas
push
repnz
pop
dec
loope
cmp
shr
incb
push
xor
xchg
xor
daa
pop
mov
and
cmp
out
fisubrs
cmp
inc
arpl
and
pop
icebp
lods
dec
push
ret
stos
insb
test
sbb
xlat
jns
roll
loop
std
xor
add
xchg
or
jl
fs
inc
aas
xchg
pop
movsb
rcr
cltd
xchg
push
and
stos
shll
jne
cltd
dec
fsubl
lds
adc
xchg
dec
sub
jae
fbstp
push
or
sbbb
xchg
je
dec
jmp
int3
xchg
loope
and
mov
arpl
pop
ret
xchg
xchg
imulb
into
sub
scas
xor
adc
std
mov
shrl
and
int
adc
sub
adc
sub
xor
fistpl
popf
push
lcall
mov
outsl
dec
das
lahf
push
ss
shrl
fistpll
loop
xchg
test
and
mov
xchg
nopl
icebp
into
jbe
in
fdivl
dec
shrl
jae
xor
rorl
in
push
je
arpl
mov
mov
sub
and
daa
push
mov
test
mov
and
lods
call
iret
out
pop
shrb
mov
dec
pop
aad
push
lods
inc
rolb
pop
inc
push
fnstenv
sahf
xor
repz
fs
lcall
cmpsl
mov
movsl
xchg
push
mov
push
in
fadds
ja
scas
jns
fadds
or
fmul
push
fildll
xor
mov
fdivrs
and
push
adc
mov
or
sahf
mov
push
jb
lea
mov
lods
fbstp
mov
fsts
push
add
jge
fsubs
xor
icebp
pop
std
sub
or
lods
or
cwtl
in
mov
stc
pop
inc
cmp
test
jae
lahf
xchg
sbb
push
or
pushf
push
cmp
or
popl
out
push
mov
loop
sub
adc
scas
push
fidivrs
test
cmp
shrl
adc
ja
pushf
push
int3
pushf
pop
mov
push
pop
xor
sbb
mov
outsb
loopne
adc
and
push
adc
xchg
mov
fldcw
mov
mov
and
or
cmpsl
js
movsb
add
pusha
jg
cli
ret
mov
mov
scas
pop
mov
cmp
mov
rcr
xor
popf
pop
lods
mov
cmc
cmpl
in
scas
outsl
cli
hlt
mov
adc
cmp
lahf
pop
shlb
sarb
xchg
jl
xchg
idivl
rcl
outsl
inc
fisttpl
sub
bound
imulb
outsb
mov
scas
andb
xor
push
testl
jnp
push
rcrb
into
mov
outsl
sub
scas
rorb
xchg
scas
mov
jnp
or
xor
mov
inc
ds
or
sub
xchg
rorb
mov
push
out
mov
es
cmpsl
stos
imul
clc
mov
clc
dec
mov
sarb
ficoml
cmp
cmc
nop
ds
xor
cmc
popf
inc
inc
loopne
popl
add
shll
imul
flds
mov
cwtl
jbe
je
push
iret
cmpb
sar
sub
leave
jae
insl
pusha
aad
rolb
insb
sbb
movsl
out
test
mov
mov
xor
lods
xchg
sahf
jg
mov
mov
in
mov
aaa
rorl
jmp
jge
xor
adcl
into
into
mov
dec
pop
pop
arpl
mov
mov
inc
dec
ds
aaa
scas
xchg
xor
push
and
adc
sbb
push
mov
push
jbe
in
xor
outsl
push
out
xchg
mov
or
scas
xor
dec
add
loopne
pop
inc
sbb
add
bound
or
jns
out
adc
mov
or
in
or
push
loopne
pop
orb
jo
fidivrs
mov
and
and
jecxz
icebp
mov
xchg
call
cmp
lods
push
sub
cmp
in
sub
pusha
je
adc
das
cmp
sbb
cmp
jl
das
imul
scas
adc
sbb
pushf
in
xchg
leave
mov
xor
adc
jbe
mov
cmp
je
dec
mov
add
push
or
insl
jmp
push
push
es
cmp
ficomps
push
aaa
cmovae
and
sbb
add
mov
mov
popa
mov
pusha
mov
lcall
outsb
adc
js
add
jp
sbb
and
loop
jp
iret
aad
dec
dec
xchg
cmp
fnstcw
loopne
and
mov
loope
test
cmp
jp
sar
mov
adc
in
and
lret
subb
push
or
movups
jecxz
mov
push
outsl
jmp
or
add
xlat
cmpsl
decl
ja
mov
lret
sub
in
mov
js
fs
dec
or
into
sbb
lods
fst
and
shlb
int3
fnclex
mov
cmp
lcall
jne
in
push
dec
xor
jbe
arpl
sub
mov
push
int3
addr16
aam
cmp
jmp
push
dec
in
push
push
xor
lods
out
sahf
mov
mov
adc
aad
loopne
popf
into
stos
pop
fistpl
cwtl
dec
int3
add
loop
fldt
adc
flds
mov
in
dec
cld
jp
pop
adc
mov
sub
lret
mov
sbb
iret
sbbb
sub
int3
sub
ja,pt
aad
add
pop
inc
pop
fimuls
je
divl
shlb
sbbl
out
xchg
inc
lret
aad
or
fs
lea
dec
insb
adc
inc
bound
int3
push
cmpsb
xor
ss
xor
or
mov
lods
push
xor
dec
out
sbb
movl
and
or
sub
pop
jo
mov
mov
test
mov
das
cltd
sti
sbb
insb
pop
push
lds
xor
sti
mov
aad
or
iret
adc
and
xor
scas
inc
out
out
sti
lret
cmp
sub
test
inc
adc
cmp
out
fdivp
adc
push
shlb
mov
lods
movsb
loopne
aam
lock
jno
into
inc
mov
cmp
jno
cmp
sbb
mov
mov
stc
inc
mov
gs
daa
pop
clc
and
xor
stos
cltd
movsl
jne
outsb
ret
add
and
and
in
hlt
mov
cmp
pop
into
ret
xchg
jmp
pop
outsl
int
addb
sub
and
movsb
inc
mov
jo
pop
xor
adc
clc
add
ret
pusha
mov
mov
xor
lods
mov
sub
js
adc
cmp
jb
cmp
lret
repnz
pusha
and
ret
mov
pop
inc
into
inc
mov
adc
inc
xchg
cmp
stos
sahf
pcmpeqb
add
adc
pop
mov
jg
hlt
mov
sub
jno
call
sbb
xchg
ss
adc
stos
imul
or
and
lods
dec
adc
leave
repz
mov
xor
std
or
insl
inc
xor
push
js
jmp
scas
add
push
imul
add
lea
mov
or
push
pop
jge
ljmp
insb
sub
stos
popf
std
out
and
sub
sub
push
jo
jl
jmp
xlat
push
aaa
lahf
or
lods
fcoml
jmp
ret
xor
out
adc
mov
and
je
and
imul
cmp
pop
inc
push
pushf
xor
mov
and
jmp
mov
mov
or
jmp
lds
xchg
int
push
sbb
scas
xor
xchg
cmp
data16
and
cmp
mov
sub
popf
push
lret
xchg
pop
xchg
out
mov
pop
dec
insl
jae
shrd
inc
clc
das
add
jmp
popf
push
mov
xor
mov
cmc
ficoml
and
or
jl
and
icebp
into
aam
stos
ret
jmp
adc
icebp
pop
xlat
pop
sub
call
pop
lock
adc
sub
jo
test
arpl
loop,pn
cmp
push
xchg
xor
test
cmp
jo
notb
push
ret
pop
out
je
jb
inc
sbb
fcmovb
lods
cs
xor
sbb
jmp
or
or
das
mov
fistpl
mov
adc
out
sub
mov
out
lahf
loopne
repz
aaa
shll
fsubrs
jbe
mov
lods
lret
jnp
dec
dec
ret
out
stos
mov
xor
xchg
mov
fs
xchg
in
xor
movsl
or
fdivl
jecxz
xor
fldl
xor
lds
pop
popf
test
fs
dec
xor
dec
test
adc
add
enter
pop
sub
pop
aaa
or
fs
sub
fcmovnu
int3
int
push
dec
pusha
and
xchg
xchg
outsb
out
pop
imul
dec
jnp
pop
popf
jge
ljmp
adc
psubb
jo
xchg
iret
ss
add
ljmp
and
push
jl
or
jl
scas
sub
and
push
sub
pop
sbb
imul
adc
aad
and
dec
mov
adc
mov
test
inc
jae
clc
jp
or
call
cli
pop
push
lcall
fnstcw
xor
adc
mov
imul
aad
and
in
xchg
test
ja
push
hlt
sbb
and
or
movsb
jmp
fadd
imul
test
adc
pop
mov
jmp
xor
push
pusha
ret
cmp
lret
mov
and
dec
data16
cmp
mov
cmp
inc
mov
push
adc
inc
mov
rcll
jbe
dec
jne
adc
or
cmp
lcall
lahf
mov
mov
dec
add
pop
mov
sbb
clc
jae
xor
adc
aaa
lret
jns
cmp
ljmp
and
shll
push
xchg
mov
hlt
cmp
mov
sti
push
mov
daa
rolb
pusha
scas
xchg
cmp
roll
cmp
leave
and
jl
push
sub
cmpsb
rcrl
lods
test
mov
jge
inc
fwait
sub
in
icebp
in
incb
int
mov
loope
sbb
inc
or
cmc
sbb
out
out
lods
subb
pop
in
imull
mov
popf
cltd
ja
icebp
std
into
inc
jne
mov
push
clc
cs
pop
or
hlt
jmp
out
jle
adc
dec
adc
aaa
lods
cmp
sub
fisubrs
sub
int
icebp
outsl
mov
dec
lea
jecxz
je
leave
jae
inc
and
test
and
in
pusha
lods
out
xchg
test
mov
mov
rolb
lcall
add
pushl
pop
je
cli
in
adc
jne
mov
inc
daa
pop
cmp
xor
mov
xlat
rcrb
vmovntdq
rolb
jne
insl
push
ret
inc
xchg
xchg
jmp
stos
push
adc
pop
pop
cmp
sahf
add
mov
mov
xor
cmp
pop
push
jl
or
das
andb
or
ret
jecxz
jecxz
lcall
ljmp
dec
mov
mov
je
rcr
out
push
imul
nop
enter
mov
lods
fildll
and
lods
cmp
sbb
rclb
adc
mov
scas
add
sbb
scas
int
mov
loope
jae
mov
mov
cltd
sbb
leave
cld
mov
out
test
inc
test
jns
sahf
add
sbb
mov
scas
xorb
lcall
dec
js
mov
mov
aam
jbe
mov
pop
mov
test
or
or
adc
bound
loopne
icebp
jae
sub
aas
ret
cmp
mov
outsl
mov
cmp
sbb
cmp
pop
sub
push
loope
pop
enter
repz
dec
cmp
mov
pusha
in
adc
jns
xchg
orb
mov
in
xchg
bswap
pop
mov
cmp
sbb
add
adc
or
clc
lods
jl
fstpt
adc
shrb
sub
pop
add
iret
jb
mov
aas
lods
in
or
adc
lods
mov
pop
or
inc
xchg
or
aad
ficoml
xor
js
xor
sbb
stos
cli
in
fabs
cld
hlt
and
scas
inc
daa
call
loope
adc
test
xchg
cmpsl
add
iret
adc
insb
stos
psubw
loop
add
xchg
int
xchg
jno
push
inc
xor
aad
imul
adc
push
pushf
out
inc
xchg
scas
xor
push
pop
sbbl
bound
xchg
popf
jb
or
and
mov
and
mov
pop
mov
and
dec
aad
in
and
and
mov
mov
sub
xor
and
mov
xor
cmc
sbb
or
pop
xchg
js
push
cli
push
mov
mov
mov
lods
mov
mov
adc
mov
mov
call
jl
adc
imull
aaa
adc
and
cmp
adc
jb
sar
add
xor
jg
inc
into
inc
adc
bts
test
add
loopne
mov
adc
cmp
fnsave
pop
fxch
clc
lods
sbb
mov
adc
popa
sub
shll
dec
mov
xchg
lods
mov
cmp
loopne
dec
scas
dec
push
cmp
out
inc
sub
pop
add
xchg
or
into
push
push
adc
push
aam
cmp
add
push
pushl
fdivl
mov
enter
xlat
jmp
in
scas
mov
mov
loope
mov
mov
xchg
inc
push
popf
dec
aas
cltd
add
xor
pusha
push
insb
out
xchg
rol
xlat
fldcw
jo
loope
or
mov
sub
scas
pop
adc
movb
sub
mov
mov
push
xor
adc
sub
push
cld
pop
adc
inc
ficoms
sbb
push
inc
outsb
rcrb
and
cmp
mov
faddl
pusha
sbb
insl
movsb
das
xchg
jns
mov
jo
cs
lock
das
cmp
mov
lock
repnz
pop
mov
mov
popa
shl
ljmp
loope
pop
out
sub
sub
popf
scas
xchg
push
mov
and
jge
cmpsl
mov
mov
xchg
je,pn
cmp
mov
push
outsb
lods
lods
push
mov
jl
cmp
ret
mov
das
dec
lods
xchg
pushf
inc
pusha
cmp
in
jl
js
outsl
jb
ds
mov
add
gs
xchg
inc
push
inc
cmp
cmp
pop
adc
clc
inc
dec
pop
daa
das
adc
out
mov
mov
aad
mov
aad
mov
and
cmc
xchg
sar
daa
rolb
loop
mov
jmp
sbb
ret
jbe
ret
jmp
icebp
sbb
inc
scas
add
or
xlat
gs
call
xor
int3
jae
xor
cmpsl
cmp
xor
imul
iret
fiaddl
or
and
sahf
psubsb
xchg
lods
add
pop
in
hlt
gs
loopne
in
jbe
dec
xlat
scas
fidivrs
xchg
ja
bound
inc
pusha
xchg
es
iret
addb
rolb
outsb
push
adc
cmp
jns
mov
and
inc
insb
push
loopne
addl
mov
mov
inc
xchg
adc
lods
mov
mov
dec
jecxz
adc
cld
xor
out
pop
cmovbe
jno
sub
add
or
jno
dec
cmp
mov
pop
clc
push
pop
adc
sbb
loop
pop
mov
sbb
adc
data16
and
out
adc
and
inc
cmpsb
dec
lcall
adc
movsl
out
xor
pcmpgtw
frstor
cltd
in
add
mov
mov
jnp
ljmp
and
mov
inc
or
xor
test
das
call
adc
je
jns
cltd
sub
leave
adc
mov
shr
mov
push
xor
outsb
in
iret
lods
loopne
mov
loopne
mov
dec
scas
lcall
outsb
imul
mov
pushl
fdivrl
adc
lods
add
cmpb
dec
dec
lahf
repnz
inc
inc
adc
lock
mov
push
pop
push
push
push
mov
and
push
int3
push
cmovno
movsl
leave
xor
cld
mov
mov
in
adc
inc
add
fwait
jge
xor
mov
push
bsf
sbb
push
jo
ret
xchg
fsubs
rolb
inc
pop
nop
lret
loopne
push
sub
and
push
sub
insl
insb
and
cmp
and
mov
shlb
add
sbb
inc
fs
sar
imul
adc
mov
sar
fucom
and
and
orb
jno
in
add
outsl
pxor
xlat
mov
scas
push
pop
mov
pop
adc
sbbb
loopne
cmc
lret
outsl
popa
pavgb
dec
loopne
loop
rcrb
jge
lea
rclb
mov
jl
pop
pop
loopne
mov
and
xor
lcall
or
xorb
xchg
loopne
cmpb
popf
fdivp
and
addb
or
in
mov
call
inc
inc
xor
and
mov
add
rcrb
jecxz
sahf
in
fisubs
mov
add
pop
and
loopne
scas
into
gs
mov
into
pop
scas
dec
dec
aaa
or
sbb
call
ss
into
mov
stos
fidivrl
nop
push
push
and
int
lock
cmpsl
mov
jg
lahf
scas
pusha
popf
mov
aaa
outsl
pushf
inc
mov
push
sbb
lock
push
adc
mov
push
fistps
sub
ss
adc
xchg
loopne
cmc
aad
adc
icebp
xor
inc
mov
push
nop
xchg
pop
out
lahf
into
xlat
out
pop
into
rol
pop
daa
sub
jbe
das
dec
xor
outsl
jecxz
test
lcall
fisubrl
andb
rorb
add
nop
dec
loope
arpl
rorb
sarl
cs
xor
adc
mov
mov
jo
dec
sub
fimuls
orl
into
push
push
sbb
lahf
and
call
adc
xorl
jle
ds
push
aad
mov
push
dec
pusha
andb
call
mov
pusha
jg
lods
popa
cmp
cmp
xlat
xchg
or
lods
fsubrl
push
mov
dec
jge
setne
pop
pop
push
jo
lods
xlat
pusha
inc
adc
test
add
jg
mov
sub
sbb
outsl
mov
imulb
movsb
and
cmp
mov
fxam
mov
mov
sbb
push
lods
mov
sbb
xchg
aas
and
cli
decb
cltd
loope
jg
movsl
in
jnp
push
or
lret
and
xor
push
mov
out
lods
inc
scas
test
test
shlb
testl
mov
arpl
rorb
sub
idiv
sbb
xchg
xor
lods
ljmp
nop
lods
stos
jp
inc
es
xor
ljmp
pusha
outsl
test
mov
fs
fistl
mov
xor
and
pusha
push
js
ja
push
cs
mov
movsl
fs
addr16
jns
push
pusha
rcll
cmp
lcall
adc
adc
inc
out
fimull
xchg
add
faddl
cmp
addr16
xchg
lahf
xor
subps
int
in
jns
aad
adc
mov
test
xchg
xor
cmpl
xchg
cltd
loope
dec
into
iret
insb
sbb
ror
and
das
rorb
out
pop
je
jbe
mov
andb
cmpsl
adc
pop
and
js
shrb
test
mov
andb
or
jbe
inc
pop
mov
popa
pop
or
movsb
in
fs
push
iret
lods
cli
jl
mov
fidivrl
inc
inc
adc
lods
sub
stc
scas
fcomps
mov
lods
shlb
mov
push
xchg
adc
mov
sbb
les
fucom
inc
adc
scas
push
adc
and
sbb
dec
mov
pop
sbb
iret
or
adc
jmp
dec
ret
xor
je
movsb
enter
loope
pop
xlat
lods
shlb
jle
punpcklbw
ror
push
outsb
data16
xchg
imul
clc
andb
lods
pop
leave
jne
mov
jle
sbb
sbb
enter
mov
sarb
test
xlat
mov
fdivrs
pop
mov
orb
mov
inc
xor
sub
inc
inc
nop
push
scas
lret
and
push
sbbb
div
push
shlb
mov
mov
inc
mov
loopne
aam
loopne
pop
and
mov
lahf
fisubrl
and
adc
mov
xchg
push
cld
mov
int3
mov
scas
add
sahf
dec
orb
mov
ds
psrlq
xchg
orb
push
sbb
je
adc
popf
dec
dec
sbb
inc
push
outsl
call
and
sarb
cmp
sbbb
and
divl
push
loopne
cmpb
sbb
hlt
popa
stos
mov
xor
enter
es
xorb
cs
mov
std
pop
das
daa
jg
sub
out
scas
outsb
rcrb
add
outsb
out
lahf
xchg
loopne
sarb
pop
rorb
daa
sahf
scas
insl
push
call
sub
into
sub
and
and
pop
cmpsl
dec
xchg
iret
int
insl
int
rcrl
mov
pop
stos
jge
xchg
pop
popf
dec
push
xlat
rcll
scas
xchg
or
mov
push
arpl
mov
shll
outsl
mov
mov
dec
or
xor
ficompl
pop
push
lret
push
push
fistpll
push
lock
adc
dec
repnz
fnstsw
rorb
pop
outsb
call
and
popf
mov
mov
and
jle
push
nop
jge
jo
fistps
lahf
call
imul
pop
dec
pop
mov
jg
or
push
inc
xchg
in
mov
mov
sahf
pushf
insl
pop
lea
xchg
add
and
lea
lods
cltd
push
mov
xchg
pop
mov
adc
mov
fdivp
push
pop
dec
push
sub
cmp
movsb
xlat
jmp
adc
pop
scas
jecxz
mov
xchg
scas
sbb
js
adc
xor
sub
ja
fisttpll
pop
sub
cmp
mov
adc
mov
cwtl
lods
dec
adc
mov
paddb
ret
insb
cwtl
mov
mov
popa
int
testl
in
and
or
dec
out
aam
pop
jnp
mov
mulps
dec
js
push
push
jl
inc
sub
imul
fdivl
pop
inc
add
push
push
jle
sbb
jmp
roll
outsb
cmp
call
mov
mov
in
pop
or
mov
dec
add
jmp
int3
push
fmull
sbb
sbb
mov
insl
scas
leave
fisttpll
pushf
dec
sub
jb
dec
subb
dec
adc
lods
sahf
negb
push
shrl
ret
sbb
inc
movsl
jg
fists
aas
int3
mov
push
jl
adcb
jbe
and
out
fs
test
add
movsb
sbb
incb
movsl
add
push
cwtl
xchg
js
ficoml
xchg
int
jne
xchg
cmpsb
lret
add
and
dec
jb
movsb
into
and
aas
mov
sub
xchg
mov
dec
clc
idivb
fmuls
xor
ss
sub
out
pop
adc
repnz
jp
mov
mov
mov
xlat
mov
fs
sub
sbb
lods
stos
fimull
jno
push
push
sub
and
sbb
jmp
jg
mov
stc
lahf
push
xlat
cmpsb
mov
jnp
add
adc
sbb
adc
push
cmp
and
test
loope
pusha
xorl
repz
add
inc
fs
lods
jecxz
inc
loope
inc
adc
pop
xchg
cmp
mov
aaa
bound
or
dec
xchg
addb
lock
daa
sub
mov
shll
xor
xchg
and
iret
movsl
imul
sub
rcrl
mov
pop
out
jo
adc
lds
push
fs
insl
jecxz
xor
arpl
pop
pop
mov
loop
sub
ja
aad
int3
ds
jbe
sbbb
pusha
jae
fisubrs
sub
pop
mov
push
adc
inc
lds
repnz
ss
xor
lea
incb
sub
std
lcall
out
mov
ljmp
cmpsb
push
andb
mov
mov
cmp
inc
or
add
daa
mov
mov
outsb
xchg
cmp
or
stos
shl
ds
lods
repz
pusha
push
nop
mov
dec
or
adc
push
xor
movsb
push
sub
in
insb
imul
scas
add
iret
scas
mov
push
dec
lods
lret
or
fdivl
jge
cmp
cmp
out
test
adc
arpl
push
jns
adc
insb
test
dec
xchg
popa
pop
push
xor
arpl
inc
ss
fadd
aaa
pop
mov
mov
push
jnp
lods
xor
cmc
lods
pop
or
and
js
aas
jmp
dec
pop
sbb
shll
sbb
call
outsl
pusha
mov
pop
addr16
cmp
lods
fstl
mov
pop
cs
insb
loope
mov
js
lods
push
cmp
lods
jecxz
xor
mov
sbb
enter
xlat
cmp
popa
fisttps
push
fsubl
adc
ds
add
mov
add
cmp
and
rcrl
subl
add
loopne
das
cmp
xor
insl
xor
mov
lods
test
jg
push
stos
scas
js
stc
or
jp
push
imul
add
mov
out
jae
cmpsb
in
lock
dec
xor
mov
xchg
and
mov
cmpsl
lret
aas
rdtsc
aas
je
mov
test
dec
pop
lods
fsubrl
and
in
jne
mov
sbb
cmc
jae
shr
incb
mov
cld
int
cmp
pushl
repz
sbb
jl
sub
lods
sub
sub
mov
jno
jb
rorl
add
dec
add
or
or
aas
add
jo
mov
fmull
daa
lods
jle
andb
jo
xor
mov
push
adc
lock
cmp
loope
pop
pop
lea
fcompl
pop
sub
mov
mov
cmpsb
xor
scas
cmpsl
lret
scas
testl
sbb
bound
xor
inc
xchg
out
xor
aad
not
add
cs
pop
mov
lods
sbb
shr
pusha
push
xor
scas
rcrl
loope,pn
movsb
dec
dec
xor
dec
jbe
outsl
scas
fdivp
jmp
inc
add
sub
sub
pop
mov
fldl
mov
ret
les
jne
pop
sbb
mov
jns
jmp
lods
in
icebp
sbb
and
test
cmp
das
lods
loopne
loop
iret
out
pop
aaa
adc
add
pusha
xor
out
fs
sub
sbb
es
xchg
outsl
movsb
sbb
in
insl
mov
push
sub
loope
scas
fdivs
mov
nopl
jae
fsts
pop
in
inc
lods
out
fadds
push
lret
adc
fldenv
push
dec
icebp
repz
scas
cmp
sbb
mov
pop
test
out
push
pop
les
bswap
xor
mov
or
push
cmp
repz
fistps
inc
mov
push
jo
mov
pop
mov
out
shl
fbstp
add
and
cmp
je
hlt
jbe
fdivs
int3
jae
call
xor
jnp
fsubrs
cmpsl
cmp
add
repz
xchg
jb
mov
sub
adc
loopne
jne
jnp
xor
int3
fbstp
mov
xor
movsb
js
in
pop
jge
inc
jecxz
test
xchg
adc
cmp
imul
sub
sub
xor
test
ret
loop
adc
mov
lea
xor
inc
stos
jo
mov
sub
sbb
cmpsb
lcall
mov
out
pop
daa
loopne
lea
lret
leave
inc
ret
in
lds
mov
arpl
mov
decl
movsb
and
stc
lods
jo
ljmp
mov
or
lea
mov
hlt
push
inc
fucomi
pusha
add
popf
int3
ret
rclb
frstor
inc
je
inc
push
and
ret
xor
pusha
mov
dec
lcall
inc
hlt
ja
fsubl
cmpl
loopne
imul
pop
rcr
sbb
scas
push
adc
pop
loop
rcrb
mov
xchg
es
gs
adc
sbb
cmp
adc
inc
add
sub
into
mov
out
add
lock
mov
push
lods
sub
mov
mov
ret
dec
xor
xor
dec
sub
xor
sub
nop
and
inc
rcrl
in
mov
das
pusha
fisubl
dec
fsubrl
rorl
xchg
adc
mov
iret
jbe
mov
pop
xchg
out
push
imul
add
add
ror
mov
sub
shrb
add
dec
xor
jb
lods
push
mov
ja
sbb
cmc
daa
movlps
stos
enter
adc
or
ret
or
mov
and
xchg
pop
mov
or
mov
adc
fists
push
or
test
call
sbb
cmpsb
lock
xor
cmp
jne
in
lcall
adc
xlat
mov
sahf
xchg
lcall
mov
sbb
jge
subb
adc
xchg
inc
mov
mov
mov
scas
icebp
movsb
pop
push
pop
imul
clc
pop
jecxz
clc
out
xor
call
jecxz
in
push
adc
imul
dec
sub
ja
arpl
pushw
cmpsl
add
inc
xlat
xchg
ret
xchg
push
shl
test
jge
push
jno
jnp
scas
daa
and
flds
inc
xchg
bound
lods
cltd
aaa
mov
sarl
scas
jns
lods
sbb
imul
mov
pop
js
in
in
mov
daa
in
push
dec
xchg
aaa
jge
out
in
rolb
cmpsl
adc
movsl
xor
cmpsb
add
dec
jge
mov
loopne
inc
adcl
mov
mov
jnp
ljmp
jl
insb
icebp
xor
dec
xor
push
sbbb
filds
leave
les
adc
push
push
xor
fdivrl
lods
xchg
lret
rcrb
mov
dec
fisttpl
fidivl
repnz
dec
sub
sub
in
arpl
dec
mov
cmp
mov
fcompl
or
mov
jl
scas
pop
lahf
inc
inc
push
xchg
inc
jne
enter
and
mov
push
cmp
nop
lds
sbb
shl
xor
mov
adc
loopne
ss
mov
sbb
push
notl
jne
sub
clc
rolb
push
test
xchg
dec
inc
mov
pushf
outsl
pop
shll
scas
xchg
cmpsb
cwtl
andb
push
adc
out
scas
inc
pop
and
xor
xor
lods
pushf
xchg
cmp
clc
dec
jle
inc
mov
or
jg
add
into
mov
loopne
cli
mov
add
sub
jb
int
repz
nop
cmpsb
andb
push
scas
sub
jns
xor
add
adc
ljmp
cs
xor
pop
and
xor
push
jnp
lds
nop
out
jmp
lods
mov
adc
cmp
mov
pop
mov
and
sub
mov
or
mov
ret
sub
repz
push
xchg
rorl
or
pop
insl
imul
dec
mov
jge
mov
cmp
lret
pop
jbe
xor
xor
push
lods
or
inc
loope
adc
lret
fsubl
jle
fdivl
jge
in
push
or
nop
and
pop
and
in
sbb
int
dec
ljmp
cmp
push
lahf
adc
lock
subl
mov
jmp
cs
jns
mov
lods
das
jmp
lods
lds
fldt
jg
lods
jns
xchg
sbb
push
mov
sbb
out
rclb
xor
repz
popf
cmc
ret
pop
and
hlt
je
add
out
xlat
jg
lods
rcr
adc
das
xlat
jne
cmp
gs
test
orb
dec
cmp
repz
dec
dec
out
in
lods
iret
repnz
enter
jl
scas
in
stos
sbb
test
lds
dec
lret
dec
or
fistpll
lret
inc
pusha
and
gs
repz
int
aad
std
or
jmp
mov
pop
push
cmp
scas
pop
fidivs
loopne
xor
xlat
int
test
dec
lock
xchg
cmp
lods
dec
cs
jae
adc
mov
pop
inc
adc
dec
fs
jl
jae
jmp
ljmp
fmull
cmpsb
popf
pop
in
xchg
mov
cli
xor
roll
or
adc
jno
xor
inc
lcall
out
cmp
mov
adc
int3
es
aaa
push
pop
in
cmc
in
mov
popa
sub
sub
jns
aaa
fildll
and
lahf
int
std
lea
mov
push
push
xor
push
xor
mov
sbb
mov
pusha
lock
pop
add
int3
xchg
outsl
mov
pop
gs
mov
and
jle
scas
pop
jne
cmpl
repz
xor
mov
sbb
and
lods
aaa
or
and
sub
stc
lods
aas
mov
insb
sbb
pop
dec
lret
popf
dec
mov
cld
cli
stc
inc
lods
add
aas
xor
adc
mov
jg
pop
pop
insl
cmp
push
and
adc
ss
into
sbb
fistl
xchg
arpl
xchg
add
jo
les
cmp
fwait
push
rcr
push
ds
cmp
sub
scas
add
pop
adc
lret
shlb
dec
sub
aad
adc
and
mov
xor
xchg
ljmp
add
outsl
js
lock
cmp
sbb
stos
popf
pop
sbb
lcall
push
addb
out
sub
scas
push
cwtl
in
fildl
icebp
push
lcall
cs
loopne
jmp
or
mov
out
jge
into
repnz
js
xchg
aad
imul
cmpsb
pop
cmpb
lods
inc
jmp
pushf
sub
jecxz
lret
xor
shrb
push
aaa
jp
adc
leave
push
xor
imul
pop
lock
rep
repz
adc
jecxz
insl
dec
ljmp
dec
lods
jbe
movsb
add
and
aad
sbb
push
ljmp
lock
lods
jo
mov
fnstsw
out
push
stos
jnp
jmp
pop
sub
inc
mov
data16
shlb
mov
cld
xchg
dec
push
dec
sbb
shrl
xor
div
or
sbb
or
and
xlat
sbb
and
int3
sbb
mov
mov
mov
xchg
iret
and
mov
jne
cmpsl
xchg
mov
jnp
and
mov
jnp
lret
pusha
dec
sahf
mov
rcll
mov
cltd
test
fistps
pop
pop
fistl
inc
outsb
cmp
push
lods
dec
adcl
js
mov
fdivl
dec
jbe
inc
mov
es
mov
push
adc
mov
not
mov
out
mov
jg
out
mov
lods
clc
sbb
repz
jbe
push
out
enter
push
in
push
es
mov
loopne
cltd
sbb
mov
mov
inc
cs
inc
outsl
inc
js
inc
fisubrs
pop
push
lods
push
sbb
gs
ret
into
add
jb
mov
mov
jno
movsl
jnp
push
mov
mov
loopne
sbb
jae
xor
mov
fcomps
cmp
jmp
jbe
dec
inc
pop
and
pop
and
adc
lods
or
bound
lods
pop
sbb
fidivrl
or
mov
fists
xchg
sub
push
pop
dec
and
mov
cwtl
adcb
imul
std
fdivrl
mov
push
jbe
or
inc
pop
xor
scas
mov
mov
dec
cli
add
orb
jb
daa
movsb
pop
add
xchg
push
mov
out
jmp
pop
paddd
jnp
clc
lods
test
and
mov
cltd
fcoml
out
jecxz
or
push
in
aam
sbb
mov
mov
pop
arpl
aad
fcomip
cs
dec
add
jo
push
push
fiaddl
xchg
add
xchg
adc
outsl
out
and
push
or
cltd
jg
push
add
push
sub
fs
mov
jp
xchg
cmp
xchg
jmp
adc
loope
dec
loopne
adc
test
int
cmp
jno
outsl
sbb
lods
call
sub
hlt
test
jle
bound
lods
lods
cmp
add
imul
sbb
xchg
mov
inc
ljmp
pop
cli
sbb
rcrb
adc
mov
dec
mov
inc
cmp
sub
adc
push
cmp
je
adc
xor
jo
or
sub
sbb
xchg
loop
out
mov
scas
test
out
or
movsb
or
aad
push
cmp
shll
xchg
push
out
xor
push
shlb
shlb
sub
add
add
fidivl
add
data16
inc
imulb
ds
faddp
jmp
push
xor
icebp
pop
cs
call
mov
add
mov
cmp
rorl
sbb
popa
pop
ja
adc
or
lock
or
ljmp
adc
loope
mov
pop
std
xor
cmpsl
fcoms
mov
sbb
aad
shl
lcall
cmp
push
movsb
xor
adc
jae
ja
mov
jo
aas
decl
lods
imul
jns
jp
adc
lds
loop
pop
sbb
mov
adc
mov
xchg
sub
sub
fists
jg
ficompl
jne
sub
nop
je
fldpi
mov
test
pop
xchg
mov
test
xlat
jns
hlt
ja
inc
cmp
pop
jbe
das
lods
leave
hlt
aad
sahf
dec
mov
testl
add
or
pop
movl
xor
jns
and
pop
push
mov
fcompl
sub
push
cmpsb
or
int3
fstl
mov
xor
sbb
add
adc
sbb
les
repnz
xchg
in
aaa
jle
cmpsb
mov
or
out
int
adc
ficoms
inc
aad
xchg
mov
inc
fdivl
mov
sarb
or
push
mov
out
xor
cmc
ret
mov
pop
loopne
scas
lcall
xor
lods
mov
dec
dec
pop
int3
out
or
adcl
cli
lds
sbb
movsb
loopne
fldt
ficomps
cmp
out
lea
jb
xchg
cmp
mov
in
mov
dec
xchg
sbb
mov
xor
sbb
inc
sbb
into
adc
idivl
mov
mov
xor
jmp
or
and
pop
rcl
cmovbe
popa
xor
push
fcoml
popf
adc
test
cld
pop
mov
jecxz
mov
inc
les
es
std
mov
and
cmp
mov
sub
lods
cmp
or
push
xchg
jle
adc
dec
notl
jp
jl
repz
das
adc
fwait
dec
faddl
ljmp
aad
sub
jge
pushf
jnp
adc
std
scas
mov
aam
and
js
daa
fs
je
les
lods
sbb
aad
mov
int3
adc
out
sbb
fistpl
int3
xchg
cmp
jo
inc
add
cmp
je
and
data16
mov
push
cmp
shl
mov
mov
adc
jle
ljmp
xor
sub
push
push
mov
add
sahf
mov
scas
mov
imul
dec
push
inc
xlat
jno
lods
outsl
mov
jb
fistl
imulb
cmpsb
mov
dec
xor
jg
sahf
mov
stos
sbb
ja
iret
xchg
dec
sbb
mov
subl
enter
lea
movsb
faddl
mov
add
or
andl
add
push
and
pusha
add
sub
scas
divb
cld
cmpsl
inc
sub
jne
pop
loope
addr16
cmpsb
fs
push
sarb
fs
xchg
adcl
scas
nop
inc
push
stc
or
pop
ljmp
jmp
shlb
and
mov
mov
xlat
dec
movsb
push
mov
inc
mov
daa
nop
mov
jg
add
add
lods
push
xor
mov
decb
push
inc
scas
pusha
adc
hlt
gs
in
mov
dec
sub
loope
out
pop
push
cmpl
fdivl
pop
mov
jb
daa
daa
and
lret
aam
adc
jb
pop
lods
rcr
imul
xchg
xchg
fistl
loopne
loop
fcmovnbe
pop
aas
sti
imull
adc
or
dec
pop
pusha
pop
aas
or
dec
pop
sub
or
into
imul
iret
push
adc
js
daa
out
mov
mov
jns
adc
call
adc
pop
cmp
dec
jbe
shrl
es
add
divl
fistpl
xlat
jmp
cmpl
cmp
inc
inc
ss
repz
mov
lods
mov
mov
cld
out
ljmp
fs
ja
pop
xor
adc
push
lods
xlat
jmp
mov
adc
out
lods
adc
dec
ljmp
fidivrs
rol
iret
fmuls
and
or
push
jmp
xor
das
dec
call
popl
nop
and
ds
cld
and
dec
and
adc
ficoml
dec
repnz
pop
push
sbb
loop
dec
arpl
mov
cmp
daa
sub
loopne
xor
push
xor
jo
mov
ffreep
pop
dec
outsl
fiaddl
adc
xchg
mov
pop
push
xor
push
add
ss
inc
add
dec
sub
xor
and
push
cmp
add
movsb
sbb
outsl
jmp
popf
inc
push
push
insl
push
andl
sub
add
cmp
push
xor
push
xor
push
mov
pop
push
jecxz
jmp
jo
sti
shrl
int
je
je
inc
adc
jecxz
sar
aad
ljmp
loope
das
popf
dec
adc
loope
dec
mov
adc
cli
cmpsb
mov
testb
cli
sti
loopne
xor
sbb
xor
aaa
fildll
test
pop
xchg
adc
ret
pop
pop
xlat
cmpsl
cmc
xchg
inc
mov
push
dec
lods
sbb
jmp
sub
pop
xor
sub
push
je
push
mov
push
jnp
sub
push
mov
pop
jmp
aad
add
adc
filds
js
lcall
sarl
movsl
adc
sbb
jmp
pop
cs
repz
jnp
lahf
js
xor
imul
adc
mov
jl
push
pop
into
pusha
ss
test
and
push
xor
adc
bound
push
insl
jne
or
sbb
dec
xor
clc
jno
or
push
pushf
aam
es
aas
and
lds
xorl
xor
mov
sub
insl
cmpsl
push
xchg
or
popf
psrlq
iret
mov
popf
xchg
xor
addb
sub
rorl
mov
mov
push
cmp
mov
adc
pop
cs
in
lret
imul
enter
int3
fidivrs
fbld
pop
mov
sub
lds
ret
xor
in
sub
mov
ss
jno
pop
jmp
xor
test
ljmp
outsb
and
aaa
fwait
mov
push
mov
in
lods
inc
push
je
pop
inc
fs
addr16
mov
jmp
add
adc
xchg
les
mov
inc
adc
and
out
mov
dec
add
and
cmp
dec
jo
or
in
xchg
rorl
jp
and
dec
fbstp
adc
mov
jne
mov
mov
add
es
dec
mov
dec
push
jno
adc
pop
add
push
add
dec
or
xor
xor
mov
fs
fistpll
pusha
or
adcl
add
xor
dec
and
adc
test
fimuls
mov
js
cmp
jecxz
hlt
cmp
cmp
sub
xorl
fucomip
out
lahf
xchg
or
or
and
fbstp
xchg
sbb
out
adc
cmpb
push
sub
pop
xchg
mov
pop
insl
dec
xor
in
shrb
js
sti
jno
xor
or
or
xor
sub
pop
je
ljmp
sbb
mov
add
jno
enter
or
push
cmp
push
add
into
pop
pop
lods
dec
rcrl
out
xor
push
sbb
popa
xchg
add
lods
loope
adc
ds
call
scas
cmp
sbb
or
cmpsb
je
dec
inc
lret
mov
xchg
scas
fcmove
outsb
mov
push
xor
mov
push
sar
in
adc
out
into
mov
imul
andl
fdivrl
and
mov
sbb
jp
out
xchg
lret
dec
cmpb
xor
mov
inc
adc
inc
daa
pop
add
fwait
dec
cmp
push
fmull
pop
das
pop
push
fucomip
out
xor
mov
ljmp
fisubrl
frstor
fiaddl
add
push
das
adc
stc
adc
jl
int
push
and
push
inc
jno
inc
roll
in
imul
pop
jae
out
scas
rcl
adc
push
mov
or
lods
adc
nop
fucomi
idivb
xor
xchg
or
gs
push
out
je
enter
xchg
lods
pop
pop
clc
dec
push
pusha
sub
cmp
roll
inc
mov
imul
xor
adc
or
shlb
sbb
add
outsb
cmpsl
dec
aad
shrl
add
xor
adc
std
and
xor
lods
and
cmpb
iret
lods
test
scas
pop
int
clc
cmpsl
jae
jl
xchg
adc
adc
mov
add
sti
out
jmp
lock
icebp
in
ljmp
or
ds
sbb
mov
es
xor
adc
xchg
or
adc
cmp
rcrb
je
in
out
out
movsl
and
test
hlt
out
pop
inc
loop
movsl
xchg
adc
inc
cltd
les
xor
repz
imul
into
gs
pop
lods
inc
rorb
sahf
and
clc
mov
aaa
ljmp
jg
inc
call
fldt
aaa
dec
xor
jg
and
or
mov
cmp
in
outsl
popa
cmpsl
fcmovb
in
add
test
gs
sub
cmp
arpl
push
aad
ror
inc
sub
popf
and
andl
aaa
jno
jnp
ret
popa
stos
int
movsl
push
popa
xor
outsb
mov
xor
ret
pop
lret
shrl
ss
fs
adc
cmpsl
insl
je
xchg
xor
xor
bnd
fistps
pop
das
rorl
rol
mov
incl
sbb
cmp
fldenv
jl
pop
jne
xor
hlt
test
hlt
cld
mov
mov
push
rcll
push
cmp
sbb
and
dec
dec
or
outsl
nop
lock
dec
jne
je
and
jb
insl
adcl
roll
inc
insb
pop
inc
data16
mov
xor
rcr
daa
pusha
cwtl
mov
or
out
je
adc
add
xor
mov
sbb
negl
lods
nop
jmp
ds
push
push
movsl
lds
in
inc
lods
push
push
ds
shr
sti
bswap
xor
push
jo
outsl
scas
pop
js
lods
jle
call
aad
pop
iret
mov
mov
adc
aam
mov
add
movsl
rorb
std
jmp
push
addl
aaa
inc
sbb
push
testl
out
es
push
icebp
pusha
loop
add
sahf
cmpsb
lods
push
fidivrl
lds
adc
into
int
lahf
les
lods
push
cld
popf
out
xchg
adcb
lret
orl
pop
loop
cmp
lret
and
cltd
movlhps
mov
jecxz
js
mov
je
shll
js
iret
mov
pop
fwait
out
pop
sar
lahf
push
mov
cmp
cmpsl
stos
ret
jmp
and
add
cmp
loop
adc
pop
or
aad
lcall
mov
xchg
dec
sbb
mov
and
dec
hlt
or
aam
xor
scas
pop
rcrb
aaa
cld
mov
push
cmp
cmpxchg
cmc
or
andl
add
ja
pop
rcll
in
xor
pop
outsl
sub
xor
insb
sub
jmp
enter
or
hlt
lret
push
cmp
push
ds
bound
mov
aas
jne
and
or
outsb
jae
ljmp
scas
adc
in
cmp
jnp
xor
add
pop
mov
dec
cltd
ja
pusha
mov
insl
cmp
adc
cld
cld
ss
out
mov
bound
and
add
scas
call
fldt
lret
and
inc
out
mov
loopne
sti
aam
lods
xlat
mov
or
add
adc
add
js
cmpb
add
cwtl
add
call
clc
mov
sbb
sarb
push
scas
dec
dec
pop
fidivs
sub
std
in
adc
bound
test
cmpl
jae
xor
into
nop
push
daa
shrl
sbb
aas
lcall
inc
ret
in
orb
xabort
fdivrs
scas
push
cmp
or
xor
jecxz
sbb
sub
and
pop
pop
mov
or
adc
or
fs
sub
pop
rolb
adc
test
mov
mov
xor
jmp
std
inc
out
sub
imul
popf
sub
xor
imul
mov
cld
xor
in
dec
jl
int3
mov
dec
bound
push
lahf
pusha
out
and
lahf
sub
add
jnp
mov
dec
movsb
rorb
mov
xchg
js,pt
adc
out
mov
push
mov
lcall
push
pop
mov
cmp
xor
mov
lods
sarl
fcompl
xchg
loope
scas
lcall
push
inc
and
add
gs
pop
xor
jl
cmc
mov
add
lahf
das
repnz
lret
push
add
je
bound
in
adc
mov
sub
jl
sub
mov
or
dec
jbe
xchg
add
lret
in
push
insb
push
cld
nop
mov
lods
mov
ffreep
adc
xchg
adc
int
mov
jae
dec
stos
sbb
inc
push
xchg
mov
cmp
pop
push
mov
repz
or
dec
dec
add
or
testb
mov
mull
or
mov
fmull
les
notb
ret
js
mov
in
jmp
push
inc
cmc
js
xchg
jns
loope
ds
xchg
int
xchg
and
mov
aad
incb
andl
int3
je
aas
sbb
rolb
add
dec
sub
into
sbb
loope
daa
mov
jl
out
jle
fdivl
and
dec
xchg
insl
mov
iret
jno
loope
lods
xlat
dec
xchg
mov
je
mov
cs
cwtl
and
sub
not
xchg
cmp
xor
mov
cmc
jb
inc
mov
sbb
pop
xor
xchg
clc
pop
mov
mov
popf
outsl
xchg
lods
mov
jne
enter
fbstp
mov
mov
or
addr16
nop
in
fbld
adc
jo
negl
adc
mov
ljmp
pop
cmp
insb
inc
test
shlb
pop
mov
dec
xor
xchg
jb
xor
adc
jmp
aas
or
lret
sub
pushf
cs
xchg
lea
xor
fdivrs
imul
rcr
leave
add
jmp
mov
jge
push
int
das
push
or
pop
in
loop
dec
into
mov
inc
mov
fdivs
in
jecxz
push
fbstp
sbb
daa
push
loopne
sbb
lahf
mov
scas
cmpsl
jg
adc
jns
stos
mov
mov
lods
inc
jmp
push
mov
jns
adc
loope
fidivrs
pop
push
movsb
popf
push
pop
inc
lret
and
daa
or
and
cmp
gs
aas
je
add
mov
outsl
loopne
lret
pop
ljmp
sub
lea
push
xchg
adc
or
dec
gs
mov
and
mov
loopne
xchg
and
scas
aaa
dec
xor
into
lret
arpl
or
imul
inc
fildll
or
pop
adc
scas
mov
dec
insl
das
adc
mov
ljmp
dec
scas
in
pop
lock
and
int
dec
lods
jae
int3
cmp
xor
adc
xchg
push
sub
leave
sub
jne
test
inc
pop
lea
push
and
inc
arpl
ret
test
ret
popf
cmp
pop
hlt
or
mov
push
mov
flds
aaa
mov
addb
dec
sbb
or
pop
out
and
das
mov
int
jbe
xor
iret
outsl
fldenv
add
adc
orl
ret
std
scas
jp
call
in
jg
prefetch
test
dec
cmp
mov
xchg
xchg
and
and
fs
cmp
or
dec
aas
dec
jmp
fsts
mov
lods
jl
and
data16
lods
push
jle
popf
imul
jg
aad
mov
xor
das
sub
or
mov
pop
fimuls
fs
add
sub
clc
insl
xchg
sbb
lods
scas
mov
mov
push
fucom
inc
test
mov
xor
xchg
and
icebp
push
xchg
cld
loopne
and
adc
or
inc
mov
loopne
jge
add
push
push
imul
hlt
lods
xor
lcall
cmc
xchg
or
fisttpll
add
test
mov
push
outsl
mov
aad
pusha
dec
clc
push
add
dec
pushf
iret
pop
mov
movsl
data16
sbb
fsub
xchg
addr16
add
and
int3
sub
cmp
xor
insb
imul
adc
mov
xchg
arpl
mov
lods
sbb
mov
insl
push
repz
divb
dec
jg
fists
mov
xor
mov
adc
dec
pop
xlat
lds
mov
push
out
les
test
ja
mov
popa
push
popf
sub
in
rorb
mov
lock
push
or
cmc
inc
js
inc
int
in
xor
arpl
push
jmp
mov
dec
das
vmwrite
lcall
sbb
stc
pop
mov
cwtl
mov
xor
jb
nop
push
cwtl
xchg
roll
dec
mov
pusha
aad
dec
out
pop
pop
sub
bound
test
xchg
pop
imul
dec
loop
enter
popa
and
out
xchg
mov
jecxz
xchg
test
pop
cmp
mov
into
das
sti
scas
into
cmpsb
add
rorb
dec
repnz
or
mov
or
pop
xchg
cli
rorl
cmc
out
inc
pop
fiadds
dec
cld
lret
aad
int
dec
leave
xchg
out
adc
les
scas
pusha
fldcw
jnp
cmove
aam
lcall
test
lock
jmp
adcl
gs
sahf
xor
scas
and
and
xlat
movsb
mov
mov
push
push
mov
push
mov
push
sysenter
fsts
or
fisubrs
int3
adc
jo
fistps
xor
icebp
add
call
xchg
fs
aam
sti
sahf
mov
out
mov
add
pop
fistpll
mov
jl
mov
mov
xor
dec
xor
fisubl
sbb
mov
dec
adc
jne
mov
jmp
or
push
pop
mov
pusha
fs
iret
std
js
idiv
out
leave
aas
scas
xor
push
arpl
sbb
aas
add
loopne
push
xchg
mov
sbb
rcpps
mov
xor
rcl
fistpll
iret
fadd
fucomip
out
mov
fdivr
lods
and
sbb
push
pop
or
lods
aam
push
dec
les
mov
mov
int
or
scas
mov
testl
pusha
fisubrs
dec
xor
mov
push
mov
test
or
loop
or
outsb
das
cmp
cmp
aam
jae
ret
rorl
nop
mov
jae
popf
loopne
iret
pop
lods
jmp
mov
popa
fbstp
out
cmp
mov
lods
dec
das
insl
cmpsb
sbb
hlt
mov
pusha
dec
add
and
aas
mov
inc
lods
fidivs
cltd
mov
int
push
xlat
test
mov
pop
mov
or
lret
mov
lock
nop
fwait
add
es
cmc
movsl
shr
push
sbb
mov
jecxz
sbb
in
mov
inc
in
mov
and
push
mov
shr
and
movsb
bound
pop
pop
or
sbb
fisttps
xor
in
lea
sbb
sbb
test
and
push
mov
xor
ret
xor
push
hlt
fwait
mov
xchg
mov
scas
jb
mov
pusha
lret
out
fists
push
cltd
cmp
jl
cmp
in
divl
mov
sub
or
sub
shl
or
mov
and
scas
lea
pop
fisttps
cmp
push
andl
dec
movsl
rcrl
jl
rcrl
mov
fmul
xor
pusha
push
call
lods
xlat
outsb
cwtl
cmp
vaddsd
xor
mov
push
push
mov
or
imul
inc
movsl
str
and
adc
and
test
sub
push
js
or
rcl
lods
pop
lods
mov
fstl
movl
das
add
scas
loop
rcrb
xor
adc
pop
inc
pop
aas
and
inc
push
jmp
scas
cs
add
sbb
mov
inc
fidivs
fimuls
idivb
icebp
rcll
imul
out
pop
mov
test
ds
jl
es
or
rcrl
fxch
jp
sti
xchg
leave
xchg
out
int
mov
ss
cs
inc
push
js
mov
movups
lahf
inc
mov
jg
cmp
xlat
leave
cmp
xchg
cmp
dec
xlat
dec
xchg
pop
jb
or
sbb
lods
jg
aas
push
mov
loope
xor
in
pushf
cmp
adc
xor
mov
jecxz
aas
outsl
or
ss
out
cmp
xor
push
cmp
cmpsl
out
scas
xor
ret
stos
mov
jmp
addb
int3
adc
ja
lret
adc
ja
add
lcall
mov
push
imul
out
xchg
repz
sbb
imulb
test
dec
incl
push
mov
push
iret
pop
cmp
adc
or
mov
jl
jg
dec
jbe
jecxz
mov
cmp
pop
jne
xor
lret
pop
xchg
int
call
ret
out
and
mov
mov
xchg
ret
lahf
adc
xor
outsl
mov
inc
mov
frstor
xchg
lahf
jo
mov
mov
adc
imul
shl
cs
lcall
jbe
adc
jecxz
addr16
into
cmpsb
lods
mov
ss
js
inc
loop
sbb
inc
xor
xchg
inc
stc
and
mov
scas
sbb
adc
push
ja
aad
js
loope
xchg
lods
outsl
std
jle
mov
mov
xchg
repnz
cs
cmp
dec
nop
or
cmp
movsb
push
sbb
jg
mov
or
shlb
pop
inc
shlb
cmp
iret
je
daa
pop
shlb
add
dec
call
adc
push
push
jnp
movsb
lods
add
mov
sub
sbb
ljmp
dec
not
sub
sahf
roll
sbb
and
sbb
sti
xchg
add
push
loope
mov
pop
les
inc
and
call
adcb
stc
int3
sbb
lods
dec
repnz
hlt
cwtl
loopne
clc
mov
aad
or
shl
test
ds
std
jecxz
or
cmp
mov
push
loopne
push
sti
mov
adcb
add
mov
pop
cmpl
js
call
scas
xchg
mov
jno
push
rcpps
dec
je
push
lds
pop
jmp
shlb
sub
xor
xor
gs
fisubs
popf
mov
ljmp
inc
mov
rcl
add
push
dec
out
mov
lret
lods
mov
and
fs
and
jmp
mov
out
insb
xchg
jmp
xor
sub
lcall
js
loopne
fnstsw
sbb
cmp
scas
std
mov
jmp
xor
call
or
scas
imul
je
out
cmp
stos
jbe
sub
aaa
test
pop
mov
xchg
sub
xchg
dec
cmc
xchg
sub
data16
mov
adc
jl
pusha
call
jno
xor
fwait
jecxz
ret
cmc
xor
sbb
mov
rcr
test
jmp
sbb
sti
mov
fsts
sub
pop
pushf
push
cltd
and
popa
sti
pop
out
call
or
or
ja
dec
xor
cmp
xor
outsb
mov
lds
neg
imul
mov
leave
and
repnz
push
in
cmpb
cmpsb
shlb
je
push
int
mov
cmpsl
aam
ret
xor
lods
push
fnstsw
mov
out
out
dec
lods
pop
dec
frstor
mov
adc
cmp
add
adc
rcrb
or
and
xor
add
arpl
sbb
dec
cmc
cmpsl
cmc
mov
mov
jnp
jl
adc
out
xchg
push
push
cmp
mov
cmp
lods
push
add
out
das
xchg
dec
rcll
movsb
addl
in
jnp
orb
frstor
add
movsb
jle
add
jne
test
sub
add
push
mov
mov
pusha
data16
push
and
push
mov
lods
and
bound
xor
pop
lods
mov
xor
data16
mov
xchg
and
std
push
popf
cmp
frstor
or
nop
imul
iret
mov
sbb
jg,pt
imul
cmp
loop
shlb
cld
outsl
js
popa
mov
mulb
shr
xlat
lock
icebp
xor
in
push
or
movsb
mov
out
xor
or
mov
leave
clc
cmp
cmp
adc
or
sbb
cld
loopne
cmpsl
sub
mov
lock
inc
repz
inc
mov
push
mov
xchg
add
and
push
sti
xchg
mov
or
and
pop
add
nop
or
sub
scas
insb
cmp
pop
add
mov
iret
or
or
clc
mov
lahf
lock
pop
dec
movsl
cmp
cmp
mov
jne
repnz
mov
fists
or
mulb
ds
in
dec
fsubrp
or
dec
inc
push
sub
clc
pop
test
add
xchg
adc
adc
cmp
pusha
xor
in
mov
sbb
mov
mov
push
int
or
sahf
push
test
lahf
pop
jno
inc
imul
push
std
fsubrs
int3
iret
sub
or
push
rclb
sbb
sbb
fdivs
and
in
or
sbb
iret
jb
sahf
adcb
dec
add
sbb
and
loopne
js
add
adc
push
cmc
dec
ficoml
adc
xchg
cmp
paddsb
fstpt
fs
push
lret
xchg
nop
das
nop
add
out
insl
push
pop
cmp
negl
lock
adc
cmp
pop
sbb
in
out
cmp
std
aad
xlat
dec
xchg
sbb
insl
xchg
sbb
push
js
insl
sub
sbb
and
push
leave
jns
call
adc
pop
fs
dec
mov
inc
add
ljmp
and
ja
fwait
push
jns
inc
or
in
mov
lods
and
dec
sbb
pop
push
dec
in
cmp
cmp
pop
xchg
outsl
pop
shrl
pop
push
cmpsl
rcll
xchg
xchg
movsl
rolb
jge
or
push
inc
cmp
mov
shlb
adc
pusha
cmp
mov
repz
bound
push
push
or
xchg
add
push
outsl
cmp
adc
into
adc
test
cmc
push
icebp
in
pop
iret
jnp
sbb
repz
movsl
mov
mov
adcl
imul
sub
mov
inc
cmp
cmp
scas
sub
mull
movsl
mov
inc
adc
das
sbb
lods
inc
imul
arpl
jbe
sbbb
imul
rol
cmp
arpl
dec
stc
movsb
repz
mov
jecxz
outsl
movsb
ror
in
jp
shr
ror
cmpsb
lods
jae
mov
or
xchg
mov
push
xchg
jg
ds
outsl
iret
xchg
popf
pusha
add
sbb
xchg
andl
pop
xchg
and
pop
push
mov
rcrl
push
cld
xor
push
out
push
pusha
ret
loopne
dec
sbb
insl
push
lock
xor
inc
outsl
jl
outsb
scas
cmp
outsl
shlb
sarl
xchg
cmp
bound
cmpsl
add
pop
mov
in
clc
outsl
add
subl
mov
cmp
mov
xor
xor
xor
je
cltd
pusha
movsl
sub
mov
adc
mov
sbb
popa
push
shrb
lret
lahf
xchg
ficomps
and
xchg
mov
mov
mov
cmpsl
adc
and
popl
scas
pop
ja
add
insl
pusha
out
rcrb
mov
scas
mov
push
je
aaa
xchg
jne
add
sbb
mov
xor
cmpl
and
cli
pop
cmp
pop
mov
mov
jp
adc
clc
loope
add
shl
sti
and
add
and
mov
mov
movsb
mov
lret
psrlq
inc
dec
jmp
cmc
inc
mov
inc
roll
out
sub
cs
jmp
insb
sbb
jecxz
mov
xchg
mov
push
push
and
xchg
lret
add
lret
adc
shlb
lcall
lods
cmp
sbb
aad
or
hlt
ljmp
jo
imul
mov
lods
sbb
jecxz
xor
frstor
iret
arpl
cmc
lds
lahf
test
pop
push
push
mov
sbb
lods
aaa
in
ds
aam
pop
mov
stos
aas
sti
cmovl
pop
scas
lods
arpl
mov
aad
or
xor
frstor
and
in
call
cmp
bound
xchg
sahf
pop
inc
jmp
xor
mov
out
lahf
lret
mov
das
imul
dec
sub
jb
xor
adc
outsl
mov
cmpsb
pop
jne
clc
lods
in
aas
rcrl
lock
sub
fisttps
cmp
cmp
jg
cmp
into
push
or
jo
adc
movsl
fisttpl
lea
in
sbb
add
data16
shll
inc
xchg
inc
cmp
and
add
enter
push
xchg
and
dec
jl
mov
pop
mov
inc
mov
shl
dec
sbb
push
rdpmc
push
sub
lret
jae
add
xchg
dec
fld
dec
in
fdivs
inc
pusha
sbb
test
cmp
cmp
ds
rol
mov
lcall
aaa
loope
sub
mov
shlb
or
stos
call
scas
es
mov
notb
xchg
push
lods
sbb
sub
jle
or
dec
push
adc
mov
cs
xchg
sbb
mov
je
and
push
fldcw
mov
jb
call
mov
adc
scas
test
out
in
xor
and
xchg
xchg
sbb
movsb
das
data16
dec
pop
jecxz
loop
inc
push
movsb
js
aam
adc
lods
je
testl
jbe
xor
adc
scas
adc
sbb
adc
sub
and
decl
aad
mov
int3
nop
mov
dec
pushf
sub
je
push
jae
mov
sub
and
adc
sbb
adc
out
or
aaa
dec
pusha
nop
mov
movsb
test
add
add
outsb
xor
and
cmpl
mov
or
movsb
and
fildll
fstpl
push
aaa
jmp
xor
mov
mov
fisttpll
stos
dec
cmp
xchg
sub
dec
cmpsb
mov
or
cs
sbb
pop
sbb
out
lret
pop
cmp
shlb
iret
imul
jle
adc
mov
jnp
popa
imull
or
sti
movsl
lods
push
imulb
out
push
js
xor
mov
ljmp
ljmp
cmp
xor
data16
ds
lods
and
xchg
or
lock
nop
test
mov
ret
mov
loopne
ljmp
fcoml
xlat
inc
lret
push
shll
int
xchg
or
mov
jnp
or
lock
xchg
insb
sti
or
ljmp
insl
shll
dec
nop
xor
aam
fistpl
or
clc
inc
mov
movhps
loop
icebp
out
add
jns
push
aad
jecxz
inc
mov
dec
xchg
mov
cwtl
andl
pop
fwait
xchg
sahf
cltd
adc
sub
pop
sub
dec
xor
in
outsl
mov
lds
lds
pop
out
and
adcb
push
pop
ds
in
and
mov
ds
in
aas
jns
pop
and
mov
adc
call
xchg
push
call
fwait
mov
cmp
or
inc
lock
lret
fdivr
jb
cmc
cmp
movsb
cmp
mov
or
int3
in
mov
fcompl
fadds
icebp
add
pop
lods
fcoml
out
into
xchg
xchg
dec
cmpsl
loope
in
dec
add
and
add
or
adc
repnz
popf
add
jae
loop
jmp
lods
fs
jge
pusha
fs
cmpl
out
or
cmp
and
leave
sahf
in
sbb
pusha
inc
gs
enter
in
jo
cmpsl
out
outsb
mov
rclb
gs
add
int
xor
jle
xor
inc
xchg
sbb
mov
fucomp
stos
sti
mov
fmuls
push
out
notb
jne
mov
sahf
aaa
push
scas
xor
lods
or
mov
jbe
fdivs
and
cmpsb
mov
xchg
ficoms
push
xor
cld
pusha
and
or
rcll
pop
mov
xchg
lret
mov
fldl2t
nop
jo
and
sub
xlat
jmp
sbb
divl
lods
adc
xchg
add
sbb
fsubp
fst
insl
testl
outsl
fwait
sbb
jb
sbb
fcomps
dec
sbb
daa
cli
loop
xor
sahf
mov
aaa
out
xchg
jecxz
clc
stos
gs
andb
fiadds
pop
gs
pusha
subl
adcl
pusha
xor
xchg
ds
mov
sbb
cmp
xor
pop
push
add
adc
dec
xchg
loopne
int
dec
lds
lea
lods
sti
mov
test
sbb
fstpl
popa
jo
add
jo
push
or
aad
fstpl
mov
ljmp
mov
test
add
data16
mov
dec
mov
or
inc
orb
mov
xor
outsl
outsb
adc
sarb
pushf
das
mov
dec
or
and
push
scas
push
cmp
pop
das
faddl
adc
scas
mov
das
cmp
mov
or
data16
lods
xor
and
iret
lahf
sub
movsl
roll
cmp
popf
lods
es
push
lcall
addr16
adc
je
sbb
call
ljmp
mov
data16
mov
jmp
fs
add
xor
insb
or
add
sbb
push
pop
shlb
mov
or
xchg
xchg
mov
pusha
mov
sbb
flds
leave
dec
mov
jmp
adc
pop
inc
pop
popa
repnz
daa
std
mov
sbbb
mov
jb
movsb
push
lahf
repz
cmp
outsb
clc
std
mov
pop
or
cmpsb
jns
push
scas
dec
adc
lds
enter
add
call
push
loope
out
pop
movb
fs
in
js
xchg
pusha
testb
and
das
call
or
fsubrl
adc
loop
add
xor
outsb
adc
add
shrb
js
shlb
fbstp
and
sahf
fildl
xchg
pop
pop
adc
fcoml
jb
fiadds
repnz
rcrb
loopne
test
mov
and
lds
jnp
push
lahf
dec
sahf
mov
adc
repnz
shrb
add
sbb
ss
lret
int
outsb
xchg
arpl
mov
fistps
shlb
sbbb
or
dec
mov
pop
xchg
lods
pop
xchg
fisubs
xor
jmp
cmp
mov
cmpsb
das
push
insb
dec
mov
push
rolb
das
shr
mov
shlb
pop
scas
sbb
or
xchg
lahf
fst
shl
dec
sub
push
andb
rclb
push
add
push
sarb
rolb
adc
or
lea
mov
jle
cli
push
and
pop
out
sbb
sahf
xchg
or
fnstsw
fsubrp
fildl
and
jmp
adc
rcll
push
in
xor
fs
fistpll
iret
push
dec
push
js
out
cmpb
adc
xor
iret
xor
jo
mov
frstor
adc
rcrb
xor
enter
int
loopne
unpckhps
fidivl
xchg
aas
jnp
ret
popf
aam
jge
repz
xchg
mov
into
iret
es
mov
setb
outsl
mov
pusha
in
into
push
das
out
cmc
jno
lcall
int
into
out
das
mov
ds
xchg
aas
or
pop
adc
outsb
into
std
push
dec
push
mov
push
pop
mov
jo
pop
cmpsl
in
dec
es
ror
xorb
lods
shrl
adcb
lahf
hlt
push
pop
mov
jg
int
dec
int
adc
dec
push
nop
cmpsb
js
adc
loopne
ficoms
movlps
xor
mov
xor
frstor
orb
sub
in
inc
pop
xlat
in
xchg
xchg
lods
dec
pusha
in
lods
out
outsb
mov
inc
lock
or
nop
in
dec
popa
cmc
fdivs
adc
xor
push
sahf
lods
enter
and
push
popa
loopne
jg
and
mov
add
mov
sbb
push
and
xchg
aam
les
lods
xchg
cmpsb
push
aad
or
or
fstp
or
xchg
loope
mov
or
clc
int3
adc
mov
add
push
sub
dec
test
and
inc
insb
sub
jl
in
mov
jl
add
xchg
dec
pop
or
adc
pop
mov
mov
mov
xchg
clc
pushf
lcall
loope
dec
mov
dec
adc
xlat
push
ret
mov
dec
sar
push
in
sub
xor
mov
pushf
adc
add
loope
in
sahf
adc
scas
pushf
daa
lea
outsl
imul
adc
in
call
icebp
loop
lods
out
ljmp
sbb
fiadds
cmp
mov
pop
les
jns
fisubrl
or
sbb
or
fisttps
sbb
loope
iret
push
add
inc
int3
fidivl
lods
pop
stos
mov
scas
in
push
aam
data16
inc
xor
cmp
dec
or
addr16
inc
js
mov
mov
mov
in
iret
fisubrs
mov
xor
aaa
mov
add
cmp
out
xchg
xor
mov
test
sti
stos
leave
outsb
ljmp
lahf
cltd
inc
nop
pop
iret
adc
loop
dec
xor
cs
mov
sti
cmpb
xchg
xchg
mov
or
cmp
loopne
or
in
out
dec
popa
mov
mov
lock
add
testl
push
scas
mov
lds
cmp
fimull
mov
dec
std
out
scas
icebp
push
mov
push
fdivr
call
fisttps
movsb
out
aam
lods
dec
dec
sbb
aad
js
push
adcb
xor
lds
hlt
mov
scas
jae
movsb
in
dec
pop
xor
inc
cs
test
fcmovnu
adc
jp
jnp,pn
rorl
sbb
add
pop
or
mov
jmp
shl
aad
mov
mov
lret
fisttps
repnz
ret
inc
and
andl
leave
mov
aaa
add
adc
cmpsb
and
mov
mov
stos
adc
cmp
xor
mov
loope
cs
sar
jns
in
or
sti
pusha
and
adc
adc
nop
jo
or
xor
xchg
sbb
les
pusha
inc
movsl
ret
je
xor
jp
cmc
dec
sub
pop
adc
pusha
jmp
in
jle
mov
push
mov
inc
je
ss
lea
sub
dec
jns
xor
mov
jl
adc
and
call
cmp
fldl
lods
imul
lret
inc
inc
xlat
sub
fs
pop
movsl
and
sbb
les
test
xchg
std
jmp
jbe
pop
push
int
xor
lcall
jne
dec
test
enter
and
push
cmp
cmp
mov
jns
out
lods
movsb
mov
add
and
lea
cmpb
cmp
pop
inc
mov
and
daa
xorb
data16
lock
lods
and
fcoml
bound
shld
mov
mov
adc
inc
sub
mov
mov
out
xchg
dec
fistl
sbb
add
jle
into
test
mov
inc
xchg
lds
lock
xor
pop
dec
adc
dec
xchg
lock
outsb
mov
ret
stos
loopne,pn
add
sbb
sbb
pop
xor
adc
adc
rclb
imull
push
cmpsl
and
inc
add
and
mov
xchg
loopnew
jecxz
and
sub
cltd
add
into
fwait
adc
and
xchg
jo
scas
aas
lahf
pop
adc
jecxz
pop
scas
scas
and
xchg
cltd
and
jle
scas
dec
mov
insb
fcmovnu
sarb
shrb
rol
push
ror
shlb
sbb
shl
shlb
pop
or
outsl
lds
push
mov
mov
sahf
aas
push
lea
sub
cmp
clc
shll
sub
bswap
mov
fdivrs
push
dec
cmp
dec
pushf
rclb
mov
pop
mov
push
outsl
pop
shlb
out
call
movsbl
push
pusha
add
call
mov
push
push
div
outsl
pop
mov
imulb
add
mov
push
fildll
adc
jmp
pop
into
sarl
loopne
stc
xor
pop
divb
and
pop
aaa
pop
nop
mov
out
xor
xchg
xor
ds
fwait
mov
hlt
mov
xor
setg
shlb
ds
rclb
nop
pop
lock
fst
mov
test
fdivl
scas
dec
fimuls
das
cs
mov
das
xor
into
xchg
dec
sbbb
int
lock
xorb
lods
test
andb
into
call
xor
mov
mov
into
xchg
das
loopne
lods
xor
insl
pushf
lods
test
shrl
into
out
ret
outsb
fidivl
int
lahf
cmp
outsl
add
popa
cmpsl
push
lods
lods
adc
pop
enter
or
nop
inc
jecxz
cwtl
arpl
pop
mov
push
dec
int
add
inc
xchg
ss
jae
sub
and
push
and
push
mov
mov
ror
popf
xor
repz
sbb
sub
outsl
fs
leave
xor
in
jmp
decl
aad
push
mov
and
out
stos
cmc
call
lahf
push
cs
dec
adc
xchg
lahf
lret
pop
pop
inc
pop
or
or
mov
xor
inc
mov
mov
lods
push
dec
xchg
repnz
mov
jge
xchg
and
inc
adc
out
iret
jmp
daa
jnp
scas
adc
dec
fcompl
insl
xor
scas
cmp
inc
popa
xchg
outsl
or
adc
xorb
cs
fsts
xor
mov
icebp
push
in
aad
mov
gs
adc
scas
je
jp
dec
xor
clc
cwtl
pop
and
and
movsb
mov
adc
shl
add
fs
adc
lea
mov
inc
cs
jmp
ja
out
js
sbb
adc
mov
pop
or
add
lds
or
daa
jecxz
push
sbb
sbb
imul
jg
push
loopne
mov
xchg
mov
fs
fstpt
popf
sbb
push
push
pop
rclb
jae
and
fwait
or
lods
mov
mov
and
sub
jo
add
leave
fmuls
and
test
scas
fldcw
sub
push
or
mov
sub
xor
xchg
dec
in
xchg
adc
in
pop
xor
test
adc
inc
movsl
push
adc
and
iret
fucomip
push
mov
dec
movsl
movsb
sub
push
shll
mov
test
xchg
push
and
fldcw
add
adc
jp
ffree
push
outsl
adc
xor
push
lea
mov
in
hlt
pusha
sbb
inc
fidivrl
and
test
jl
mov
scas
out
popf
xor
sahf
add
scas
push
in
inc
adcl
sbb
add
int3
xchg
or
imul
sbb
es
lods
jge
add
xchg
fs
pop
xor
fcomp
in
adc
ret
push
or
js
ret
gs
in
mov
push
cltd
daa
sti
mov
mov
test
jmp
mov
nop
pop
fcmovb
stos
pop
fdivrs
sbb
loopne
scas
push
and
les
sbbb
jp
sahf
or
xlat
pushf
sbb
lret
call
fwait
xchg
scas
shll
inc
jbe
jmp
mov
dec
out
cmp
loopne
inc
scas
inc
mov
dec
push
fsts
jl
mov
pop
and
es
mov
adcb
lods
dec
jo
decb
stos
xor
inc
push
xor
not
sahf
fistps
dec
clc
mov
aad
and
push
mov
or
test
inc
jo
push
fistpl
and
xchg
cs
mov
inc
cltd
xchg
jecxz
pop
mov
in
cwtl
fwait
outsb
push
call
pop
and
popf
push
or
jge
scas
daa
mov
insb
int
movsl
xchg
jmp
pop
inc
xchg
jns
in
inc
scas
xor
push
pop
mov
jecxz
xlat
xlat
cwtl
inc
call
pop
mov
pop
scas
and
mov
sarl
mov
push
cmp
mov
mov
test
testb
push
or
jno
jo
lcall
cmp
adc
xor
out
dec
mov
push
rorl
cmp
cs
movsb
jo
push
outsb
sub
jl
sbb
cmp
out
lock
sbb
mov
fs
mov
add
sub
test
or
add
cmp
subl
nop
xorb
stos
cmp
imul
jb
movsb
mov
xorb
sbb
mov
pop
mov
out
pusha
lods
lds
cs
cmp
xor
mov
mov
cmp
sub
and
pop
imul
sbb
sbb
divl
xchg
in
adc
sub
or
je
mov
repnz
cli
jnp
inc
mov
pop
xchg
cltd
jno
pop
or
lods
lahf
das
dec
lods
movsb
lret
dec
mov
rol
cmp
push
push
xlat
jmp
push
cmp
push
nop
push
aaa
pop
push
scas
jb
movsb
mov
decl
jp
xorb
xor
lods
xchg
fsubp
bnd
cmp
ret
rcll
pop
stc
xchg
inc
outsb
das
sub
sub
adc
int
sub
mov
fisubs
je
clc
inc
cltd
cli
adc
dec
js
pop
mov
popa
inc
push
int
cmpsl
sbb
shr
loope
or
mov
out
cmp
aas
xchg
loopne
mov
inc
and
sub
aas
sbb
xchg
pusha
jmp
stc
sub
and
dec
sbb
fnstcw
sub
adc
pop
xchg
push
inc
push
shll
fs
loopne
jl
cmp
cmp
out
mov
adc
xchg
dec
testl
cld
out
add
mov
lahf
dec
lcall
ljmp
enter
cmp
mov
xchg
xchg
adc
xor
fwait
adc
push
fwait
fbstp
in
pusha
dec
test
xchg
stos
cmp
or
int3
sbb
js
push
push
mov
jp
push
sbbl
lcall
insb
mov
xchg
inc
aad
lea
dec
or
aas
imul
mov
xlat
in
mov
scas
inc
fs
sub
outsl
mov
call
mov
add
repnz
add
insb
inc
std
outsb
cmp
dec
in
ss
bswap
ficoms
int
inc
fxch
adc
ss
mov
cltd
pop
rclb
jmp
xchg
adc
dec
and
xlat
mov
lods
arpl
mov
jo
adc
mov
aaa
or
dec
xor
push
fdivl
jo
test
xchg
cwtl
pop
xchg
jns
movsl
out
jo
scas
push
mov
mov
add
fnsave
mov
push
lea
test
movsl
and
dec
fs
lock
int
fstl
sub
cmpsl
fucomip
pusha
cmp
lock
add
mov
inc
movsb
nop
mov
xor
adc
cwtl
test
or
mov
sub
add
es
add
jg
or
push
mov
inc
xor
cmpsl
pop
or
ret
fucomip
test
xor
rcrb
dec
in
mov
cmp
push
pop
mov
sub
scas
xor
xlat
mov
xor
insb
xchg
xchg
lods
neg
pop
call
sub
mov
push
pop
xchg
push
ret
xor
xchg
sbb
xchg
xor
cmp
and
nop
sahf
pop
sbb
mov
in
hlt
ret
cmpsb
dec
dec
dec
pop
inc
sbb
or
loopne
cmpsl
mov
adc
movb
jle
sub
mov
popf
add
adc
loope
jmp
sahf
and
nop
jno
cmp
add
scas
sub
call
repz
add
jp
dec
in
pop
pop
pop
push
xchg
jecxz
mov
mov
add
cmp
jo
inc
or
rcr
jne
inc
push
sub
dec
xor
xchg
ss
or
out
adc
sub
insb
xor
cmc
jae
call
fwait
mov
lcall
shll
push
jmp
sar
arpl
xor
xor
mov
popf
add
int3
loop
and
mov
adc
adc
repnz
cmc
or
push
hlt
cmc
mov
jp
dec
arpl
adc
jge
jmp
pop
mov
cmpsb
or
cs
push
loop
inc
inc
je
jo
leave
pop
cmp
aaa
lea
dec
bound
je
enter
mov
mov
fs
icebp
xor
mov
push
pushf
push
test
orb
pop
xor
cmp
pop
cltd
xor
loop
xor
pusha
sub
fnsave
xchg
add
push
lods
imul
cmp
inc
sbb
movsb
daa
pusha
cmp
jno
ja
sub
sbb
pop
dec
fld
in
lods
adc
mov
fndisi(8087
inc
or
xchg
xor
mov
pop
imulb
mov
into
fcompl
mov
jne
clc
je
inc
xchg
aaa
sbb
and
insb
jecxz
mov
push
mov
inc
in
test
das
bound
push
mov
and
addl
mov
lcall
add
mov
lods
movsb
fdivp
pop
dec
push
aam
push
pop
popf
lods
inc
mov
or
jge
imul
sbb
pop
jge
fiaddl
lods
movsb
pop
and
test
lods
arpl
adc
imull
cmp
push
imull
aaa
fsubl
mov
enter
xchg
roll
je
ljmp
add
and
xchg
jmp
xor
out
add
in
pop
cltd
mov
popf
and
xor
mov
mov
dec
sbb
scas
mov
sahf
mov
inc
jmp
push
push
cmp
xor
mov
adc
ret
adc
hlt
ja
inc
test
out
inc
jno
insl
scas
int3
xchg
sub
jo
cli
sahf
pop
mov
jp
lods
daa
flds
and
pop
and
jmp
mov
xor
lds
je
cmp
pusha
add
std
lods
inc
scas
addr16
dec
xchg
xor
mov
insl
dec
pop
add
aas
outsl
mov
xchg
lods
popl
push
jae
sbb
adc
addl
mov
xchg
roll
sub
outsl
or
imul
xor
mov
pop
push
or
xor
or
pop
mov
mov
jo
lods
pusha
push
lods
jmp
sti
je
xchg
cmpl
push
dec
cli
loop
mov
push
hlt
cs
lock
loope
fstp
jns
mov
rcrb
ret
cvttps2pi
add
das
mov
inc
jno
cmp
mov
fwait
and
out
gs
call
mov
addb
mov
sbbl
sbb
fsts
fmull
repz
xor
push
inc
sbb
clc
testl
dec
jno
inc
sbb
mov
push
mov
mul
jl
roll
into
aas
ficompl
jl
filds
adc
fs
dec
iret
mov
mov
mov
xchg
push
dec
xorb
and
jnp
repz
flds
mov
addr16
scas
jb
ret
dec
jmp
push
insb
int
push
pop
das
fsubs
adc
test
mov
loopne
add
ljmp
push
or
out
aas
sbb
mov
jecxz
adc
xor
jmp
andb
scas
adc
fst
push
popf
or
mov
pop
cltd
mov
push
sub
mov
jle
out
mulb
out
out
arpl
paddd
fisttps
mov
rol
xor
cmp
clc
insb
je
push
and
jle
push
adc
rolb
xor
nop
pusha
ret
stc
mov
inc
lods
stc
cmp
or
cmc
cmpb
jle
mov
fimuls
imulb
jecxz
mov
nop
cmpsl
lods
adc
lret
mov
dec
inc
gs
xor
dec
or
add
fs
ljmp
iret
lret
adc
int
xor
aad
mov
lods
jbe
jno
loopne
sahf
and
push
movsb
inc
sbb
mov
adc
enter
nop
inc
xor
push
filds
cmc
push
or
test
lods
jge
shr
lock
mov
call
fs
scas
cwtl
mov
jne
roll
stc
in
sub
inc
es
lods
clc
fninit
repnz
stos
int3
in
mov
dec
mov
in
lret
stos
xor
push
adc
popf
xchg
cmp
jae
cmp
fisubrs
or
negl
and
sbb
and
sahf
push
icebp
jle
ljmp
xorl
mov
add
and
mov
inc
push
mov
dec
sub
arpl
popf
jmp
ret
jne
mov
pop
cmpsb
cmp
out
inc
js
xor
repnz
fcoms
push
dec
fdivs
in
pop
and
xor
int
shll
xor
shrb
orb
cs
outsl
fmull
mov
xor
mov
sbb
sbb
mov
sub
clc
ret
dec
cs
cmpxchg
inc
out
in
jl
pop
sub
add
jecxz
cmpsl
lret
add
fnstcw
in
sub
in
lock
js
aaa
in
xorb
push
jae
outsl
ja
dec
or
mov
iret
xor
sbb
mov
mov
int3
out
pop
in
xor
movsb
push
or
lods
jae
std
into
sub
add
adc
jae
adc
jge
shrl
inc
dec
pop
int
pop
insl
mov
dec
dec
ss
sbb
cltd
fisttpl
xchg
and
inc
and
aas
outsb
aad
popf
lret
dec
or
adc
pandn
xor
sub
jae
div
imul
lods
repnz
add
jne
fs
das
mov
lods
xor
inc
hlt
es
sub
mov
push
fmuls
stos
out
testb
pusha
enter
adc
es
mov
add
jno
popa
imul
push
rolb
lock
test
dec
push
fisttpl
enter
int
ret
xor
mov
jb
stos
in
cli
jge
call
sbb
loope
inc
mov
dec
lods
imul
jmp
movsl
inc
outsl
outsl
mov
xchg
add
lret
mov
rcll
jp
movsb
movd
sub
insl
dec
xchg
aad
js
jo
icebp
cli
mov
iret
jb
inc
add
leave
bound
rcrl
mov
divl
sti
sbb
es
or
jle
aas
mov
xchg
cmp
dec
sub
pop
push
insb
push
call
and
incb
inc
fdivl
mov
mov
in
lods
stos
add
jecxz
pop
mov
es
jnp
cli
mov
loope
mov
lock
jl
jbe
loop
pop
mov
cmpsl
adc
rcrl
and
lods
jge
int
dec
dec
sbb
mov
jg
fisubs
ja
leave
push
xor
push
fs
xchg
mov
pusha
mov
dec
jnp
xor
mov
lods
aaa
jge
fdivrp
and
mov
in
add
mov
fstpt
stos
mov
xchg
lock
shlb
outsb
loopne
in
lds
lock
push
xor
adc
sbb
stos
adc
ret
add
mov
or
ret
xor
mov
lahf
shl
push
mov
pop
jg
pop
in
sbb
xor
test
daa
cmp
mov
jae
xchg
mov
and
xor
adc
dec
cmpl
sub
jns
ret
sub
out
dec
scas
jecxz
lock
adc
and
outsl
sarb
cmp
xchg
mov
push
mov
aam
xchg
je
add
mov
pop
mov
ja
push
and
mov
jmp
pusha
jae
shl
adcl
xchg
pop
mov
insb
xchg
lods
lret
xchg
pop
push
pusha
push
and
cli
test
in
adc
into
xor
mov
stos
or
jmp
dec
movsb
fistpl
dec
xor
mov
cwtl
movsb
out
mov
and
fidivrl
ds
cltd
repz
pop
and
test
or
lock
xchg
rorl
mov
cmp
scas
sub
idivb
sub
mov
mull
lods
pop
mov
fld
or
jae
aad
sub
push
xor
es
fadds
fsubp
xor
xlat
mov
fidivs
adc
inc
imull
add
jns
cs
sbb
inc
add
repz
lods
push
xchg
pop
cmpsl
and
je
lods
loope
xchg
adc
je
fdivr
loop
icebp
fisttpll
insb
fcoml
lret
mov
cmc
sbb
mov
dec
testl
pop
idivl
enter
movsl
jge
data16
movsb
lahf
rcrl
sbb
adc
and
rclb
mov
xchg
xor
cmp
test
xchg
ret
lods
xchg
in
add
lret
fdivrs
into
test
pop
jecxz
push
add
ljmp
js
lea
adc
lods
push
lock
mov
adc
stos
pop
jne
cmp
mov
test
fdivl
xor
mov
addb
cmp
adc
lods
and
mov
xchg
aad
push
mov
insb
jmp
mov
lods
pop
mov
xor
lock
js
dec
jne
test
rorb
inc
sub
pop
mov
mov
aad
jnp
sub
movsb
jb
fcoml
lea
out
andb
mov
add
mov
movsb
push
sub
icebp
adcl
xor
ss
pop
xlat
pop
dec
sbb
push
xchg
sbb
dec
xor
mov
andb
lods
ljmp
adc
gs
inc
add
test
adc
je
pop
push
call
adc
push
adc
out
test
je
sub
data16
incl
pusha
mov
xor
ljmp
fldcw
dec
mov
jg
lea
test
inc
inc
in
sbb
xchg
into
aad
insb
xchg
lret
add
pop
mov
lods
mov
loopne
cmpsb
cmp
xorb
sbb
mov
lods
ss
leave
rcrb
mov
mov
outsl
cmp
jmp
pop
loope
push
repnz
aam
fstpt
enter
loop
mov
out
fs
add
dec
sub
shll
sbb
and
adc
mov
leave
in
lock
mov
ljmp
imul
cmp
jne
fsts
lret
push
out
sub
rcll
xor
mov
add
xchg
inc
pop
jb
sbb
or
sbb
or
mov
inc
pop
mov
sub
movsb
add
or
mov
jnp
mov
repz
bound
mov
hlt
ffree
mov
jge
cmp
jo
adc
xor
iret
add
into
and
cmpsl
je
sbb
test
scas
iret
push
and
shrb
iret
push
add
rorl
xor
sbb
mov
pop
rcrl
xor
push
inc
mov
and
sub
pusha
jae
cmp
sbb
and
adc
scas
mov
iret
xchg
push
ror
or
sbb
xor
jp
sahf
xor
adc
fdivl
push
pop
jg
push
mov
cmp
adc
sub
sub
jecxz
push
int
push
or
roll
mulb
call
mov
and
mov
out
roll
insb
mov
adc
mov
mov
inc
adc
lds
dec
jo
add
fbstp
icebp
inc
repz
cmp
xor
xor
mov
lret
std
xorb
xlat
lods
jns
mov
xor
or
cmp
and
testl
in
fs
mov
cmp
fnsave
aas
cmp
sbb
add
inc
pusha
rclb
xchg
dec
mov
xor
adc
pusha
mov
js
pop
outsl
adc
rcll
mov
mov
mov
push
push
outsb
pushf
dec
lcall
fsts
lods
adc
sbb
scas
test
xor
mov
repnz
inc
xchg
sub
sub
mov
imulb
fs
cmpxchg
sub
or
fucomip
aad
sub
stc
inc
cwtl
sahf
cmp
push
in
inc
imul
aam
sub
xchg
mov
outsl
mov
test
inc
add
push
outsl
scas
jno
mov
cmp
pop
sbb
scas
and
mov
lods
xor
push
aam
mov
aaa
pop
sbb
ret
lods
addr16
adcb
adc
das
jl
in
enter
leave
rorl
sub
dec
xor
xchg
int3
ljmp
pop
js
movsl
dec
pop
imul
add
aas
scas
popa
xchg
in
negl
out
and
repz
pcmpgtd
subb
loopne,pn
loop
ror
cld
push
push
stc
mov
sbb
fcomi
insl
xor
aas
xor
ds
mov
fs
aad
adc
dec
pop
push
fxch
ret
mov
mov
loope
mov
sbb
mov
jmp
mov
mov
int
adc
and
fildll
push
jns
cmp
subl
cmp
inc
jl
pop
leave
xchg
cmp
icebp
or
xchg
and
xor
cmpb
mov
aas
xchg
jg
sbb
cmp
pop
push
popa
dec
sub
movsl
mov
fistpll
push
inc
ret
adcb
push
lret
pop
push
and
ljmp
in
pop
ret
xchg
outsl
imul
sbb
lahf
call
lds
mov
lret
sbb
rorl
aas
mov
fildl
cwtl
push
or
xorb
idivl
cmp
mov
int3
fiadds
and
stc
incl
xor
mov
lea
cwtl
data16
icebp
pop
pop
aad
xor
aad
aaa
fildll
stc
push
lea
faddl
sbb
mov
lea
push
xorb
cmp
jno
fdivrl
dec
inc
jmp
ss
out
fistl
loop
dec
mov
xor
lods
xchg
movsl
mov
int
dec
jno
xor
pop
call
shr
shrl
xchg
or
mov
aaa
lods
push
pushl
cmp
cwtl
sbb
icebp
das
imul
das
adc
movsb
je
lods
pushf
xchg
sub
jge
aad
mov
mov
push
jne
mov
mov
cmp
sub
sub
sahf
pop
imul
add
aaa
or
cmp
xchg
jbe
cmc
std
push
dec
jae
nop
push
in
cmp
dec
cmp
pop
pop
push
xchg
and
lods
mov
das
inc
or
lea
in
jmp
loope
jecxz
pop
push
jmp
call
out
xchg
inc
xchg
xchg
cmp
xchg
dec
sbb
push
mov
pop
ja
movq
pop
dec
sub
int
call
call
jne
js
mov
addr16
push
cmpsb
push
aas
lcall
rol
cmp
mov
sar
mov
lcall
leave
out
or
faddl
test
cmpsb
and
cs
lcall
mov
xchg
xor
outsl
lods
loope
outsl
and
mov
xchg
xchg
mov
cmp
aaa
andl
mov
fs
push
test
les
push
dec
test
das
xchg
inc
lods
jmp
gs
xchg
cmp
lods
notl
mov
orl
les
pop
and
mov
out
dec
jecxz
sbb
dec
outsb
adc
loope
std
mov
push
cmp
mov
lock
icebp
jge
repz
mov
iret
xchg
inc
sub
inc
out
fs
and
sahf
jne
mov
inc
mov
shrl
dec
ds
adc
push
xor
mov
out
call
sbb
pushf
aas
mov
fs
sbb
jmp
pop
sbbb
hlt
rcl
or
mov
xor
jp
xchg
mov
nop
sbb
push
lea
les
ss
sub
sahf
jnp
out
cwtl
add
adc
lods
or
dec
enterw
cmp
int
push
jns
cmpb
add
push
shll
repz
sahf
icebp
clc
cmp
clc
add
pusha
sub
dec
adc
pop
das
pop
inc
push
movsl
pop
into
mov
into
or
sti
cmp
shrb
out
dec
and
into
lock
loop
add
sti
insl
add
adc
cltd
aaa
mov
sub
out
mov
cld
loop
mov
add
es
jge
jmp
xchg
stos
imul
sub
iret
cld
push
jb
jmp
ja
cmp
cmp
in
loope
push
xor
sub
insl
sti
aaa
das
jecxz
testb
ljmp
and
mov
xchg
pop
xchg
movsb
xchg
insb
mov
ja
bsr
sahf
clc
lahf
les
mov
dec
push
je
iret
fcmovne
testl
and
daa
sbb
je
inc
push
push
push
stos
xchg
adc
dec
mov
cs
add
pop
js
xor
mov
out
imul
jns
push
out
and
push
mov
repnz
cmpsl
nop
shll
add
inc
jo
cmp
sub
pusha
cmp
pop
pushf
lahf
cmpsl
loopne
loopne
mov
lock
orl
adc
lods
mov
repnz
setge
cmpb
scas
out
sbb
cmp
push
jl
jg
xchg
ds
pop
nop
xchg
repnz
or
dec
rclb
adc
mov
inc
sbb
mov
imul
xor
adc
pop
imul
or
xor
es
ret
bound
scas
in
test
jnp
filds
mov
add
jecxz
and
sti
push
cmp
xlat
xchg
sbb
fistl
pop
cmp
mov
loope
sbb
and
in
scas
xchg
dec
cmp
insb
aad
je
xchg
int
scas
call
push
outsl
push
mov
aas
insl
rol
xor
jge
jbe
pusha
inc
fimuls
flds
sub
je
incb
or
sbb
test
mov
sub
mov
cmpsl
or
cmp
je
arpl
movsb
cwtl
dec
cmpsb
sub
aas
adc
add
loope
xor
dec
adc
iret
xor
cs
inc
pop
sbb
push
mov
xor
sbbl
sbb
xor
cli
adcl
scas
inc
ret
mov
imul
inc
js
lods
pop
loope
sbb
cmpb
and
push
or
sbb
mov
out
in
lods
push
and
outsl
je
movb
dec
cli
push
jne
hlt
lods
and
push
or
xor
xor
popa
sbb
push
push
mov
sbb
repnz
rcll
je
push
test
dec
cmc
xor
pusha
mov
mov
inc
lretw
push
mov
pop
out
push
imul
and
inc
adc
mov
pop
and
mov
call
lahf
popf
xor
pop
sarb
xor
lcall
cmpsl
and
dec
inc
aad
adc
add
sub
mov
mov
lret
xor
xor
add
mov
sbb
lods
push
inc
sahf
sub
rcr
sbb
fs
fs
int
addr16
mov
out
mov
pop
movb
repz
xchg
xor
or
fcomps
dec
aad
adc
mov
inc
sbb
cmp
mov
cli
fsubrl
lcall
popf
push
into
scas
cmp
sbb
xchg
push
sub
mov
mov
xchg
jbe
mov
fimuls
mov
mov
imul
rcrl
outsl
leave
inc
scas
pop
cmp
mov
stos
xchg
pmulhuw
data16
xor
mov
rorl
imul
adc
stc
loop
test
arpl
fidivrl
lea
mov
rorb
xchg
lods
sub
fcmovne
xchg
mov
stos
adc
inc
or
aaa
mov
mov
mov
mov
add
pusha
pop
mov
sbb
cmp
ja
je
push
es
pusha
xchg
ficompl
jno
mov
cmp
adc
push
into
inc
inc
rcr
and
pop
iret
mulb
fadds
jp
adc
fildl
adc
ja
fimuls
outsl
ss
xor
lahf
pop
clc
mov
pop
pop
shrb
adc
enter
inc
pop
push
call
out
hlt
and
inc
pop
jg
xchg
lcall
mov
push
shrb
fsubrs
ds
lret
call
filds
fbstp
cmp
push
ret
lods
push
scas
xchg
fsubl
lods
imul
andb
shrl
gs
push
mov
xor
jmp
mov
lods
sub
lret
rorb
or
out
popf
in
cld
push
xchg
roll
pop
lret
lcall
jnp
cmp
aaa
out
xlat
call
adc
pushf
sti
cmp
shrl
call
adc
push
xchg
or
mov
cwtl
ret
push
outsl
repnz
lods
xor
imul
xor
cwtl
xor
push
fimull
or
movsb
imul
jp
cmpsb
lods
aas
push
insb
mov
jbe
addb
xchg
imul
mov
push
xor
jecxz
dec
sbb
and
cmp
aad
dec
sub
std
push
clc
int
fs
lods
ss
or
into
xor
enter
loop
jmp
cs
and
cmp
stos
cli
aad
jmp
mov
lods
pop
int
and
bound
insb
aad
rol
cmp
cmpsl
jg
inc
mov
cs
jns
aad
cmp
pop
je
sbb
addb
dec
test
inc
pop
mov
add
xor
aaa
cmpsb
insb
in
fdivrp
ss
rorl
data16
rcrl
lods
test
mov
ds
sub
lahf
out
js
mov
sbb
adc
sbb
jno
jo
imul
outsb
and
stos
lea
mov
adc
push
das
mov
pop
mov
out
mov
cmp
icebp
and
jecxz
leave
pop
lods
sbbl
dec
clc
sarb
and
adcb
lods
xlat
and
ss
push
mov
int3
ret
cmp
scas
xor
mov
aad
popa
pop
fst
push
push
and
subb
fnsave
lods
movsb
xor
mov
paddd
ret
in
rcrb
clc
pop
xor
mov
sbbl
cmp
loopne
and
cltd
scas
adc
inc
aad
int
not
and
adc
add
movsl
mov
cltd
mov
lods
addr16
nop
jnp
cmp
xchg
cmc
das
lds
xchg
pop
cmp
movlps
ret
xor
or
sbb
lods
loopne
aad
in
jae
fs
and
mov
push
popa
sub
leave
push
xchg
pop
int3
jne
into
and
push
pop
rcll
ret
insl
ljmp
scas
pop
rcll
jg
sbb
ljmp
add
push
scas
mov
jne
test
aam
shll
push
cmc
pop
sub
and
in
je
cmc
cltd
stc
push
repnz
sbb
mov
movsl
clc
js,pn
mov
fists
pop
lea
xor
push
sub
sub
lods
lock
sub
sub
mov
add
test
inc
addl
fcoms
popa
loopne
xor
lahf
cwtl
test
aam
fnstenv
cmc
inc
and
popf
stos
mov
xchg
mov
sbb
out
jmp
into
push
sub
xor
enter
mov
push
push
lods
push
xchg
aad
stos
cmc
scas
ret
shrb
shlb
aas
popa
call
shlb
clc
cmc
ljmp
push
insb
aad
and
dec
imul
addl
lea
jl
mov
lock
int
negl
xorl
jae
insl
dec
and
jmp
mov
das
xchg
loop
je
rolb
jle
int3
ss
hlt
fcomp
inc
pop
xor
cmp
mov
lods
add
or
sub
jmp
push
fcoml
call
shlb
mov
ret
arpl
dec
xchg
fidivl
push
enter
lods
sub
adc
xor
mov
imul
fs
mov
movsl
cmp
adc
mov
cmc
test
lods
call
sbb
out
fwait
jg
mov
out
adc
js
cmp
popf
mov
leave
in
sub
aad
in
hlt
cli
dec
shlb
mov
jae
mov
sti
jmp
mov
fstl
dec
push
mov
daa
inc
mov
dec
out
aad
clc
push
cmp
push
jl
loope
push
mov
jp
cmp
pop
jae
push
add
inc
mov
push
hlt
rcll
loopne
mov
cltd
jp
mov
callw
cmp
pusha
xor
adc
jmp
rcll
cmp
in
data16
inc
aas
popa
pop
test
fistps
frstor
push
mov
aad
and
xlat
xlat
fsubrl
adc
mov
and
mov
xchg
sub
test
jmp
or
popa
call
aad
inc
xchg
fistl
in
dec
subl
xchg
fs
stos
mov
cmp
and
aad
sbb
jb
xor
pop
push
mov
in
pop
int3
sbb
es
test
popa
daa
jnp
pop
pop
int3
push
mov
movsb
add
shr
xchg
xor
imull
sub
or
pop
mov
dec
scas
lods
cwtl
je
push
cmc
mov
insb
cmp
mov
mov
mov
and
aad
mov
leave
dec
fmul
sub
or
out
outsl
enter
jno
orb
mov
mov
shll
out
dec
loopne
fwait
push
or
fimuls
dec
js
xor
pop
lods
in
and
sbb
mov
shlb
xchg
push
push
xor
add
fldcw
or
adc
dec
add
fxtract
sti
scas
or
jecxz
xor
mov
mov
sbb
mov
adc
daa
mov
mov
xor
jecxz
sub
adc
sub
cmp
cmc
ret
and
ljmp
imul
in
mov
addr16
and
outsl
mov
mov
sbb
pop
bound
adc
pop
arpl
and
adc
adc
jne
dec
add
dec
cmpb
pop
inc
push
fs
arpl
or
lods
mov
pop
dec
cltd
lcall
mov
into
je
sub
mov
dec
jl
cli
mov
jp
pop
xchg
xorl
out
mov
mov
mov
outsb
popl
pop
bound
out
les
jo
inc
xor
push
test
jg
aas
decl
loopne
imul
xchg
push
popa
test
rcll
scas
jnp
shll
movsb
mov
lods
xchg
not
insb
dec
jge
js
mov
fwait
push
or
je
jge
cmp
popa
je
jge
xor
cmp
pavgw
sub
mov
lods
mov
lcall
aam
inc
popf
mov
push
or
lahf
lods
mul
or
into
mov
mov
mov
xor
mov
bound
mov
push
test
je
xor
in
imul
xchg
jo
or
nop
decb
pusha
cmp
clc
popf
add
fwait
arpl
push
jge
stos
pop
lods
xchg
fcoms
mov
fs
or
sub
js
dec
dec
lock
lods
ds
lock
adc
pop
in
add
xlat
pop
inc
aaa
sbb
scas
mov
dec
push
jecxz
lea
sbb
int
push
loopne
push
fstpl
aad
push
sbbb
incl
pop
fs
pop
ds
mov
inc
push
arpl
cmp
xchg
ljmp
push
jmp
push
push
call
mov
test
shl
nop
imul
adc
mov
pusha
das
or
je
inc
das
popa
scas
lock
xchg
dec
or
in
shrl
ja
jne
les
fdivrs
insb
adc
inc
lods
call
sub
jmp
out
pop
or
xor
into
test
jae
mov
inc
lret
orl
mov
das
xchg
mov
rorb
dec
push
jne
or
cmpsl
mov
fs
dec
cs
pop
inc
cli
xchg
clc
movsb
and
jns
rcl
push
shrb
stc
aas
cmp
adc
lods
mov
shll
hlt
and
scas
jmp
inc
lret
icebp
xchg
cmp
xor
mov
sbb
or
jmp
xor
cmp
cli
pop
lods
or
xor
imul
mov
pop
push
xor
insl
jmp
data16
pop
xchg
jl
cmp
cmpsb
jmp
push
adc
push
repz
nop
int
movl
sbb
push
stc
pop
cmc
or
cs
lahf
fmull
das
je
outsl
dec
fcmovbe
aam
cmp
and
leave
insb
int
cmpb
in
inc
cmp
fisttpl
or
test
out
fisubl
mov
je
shrb
mov
fidivrl
rcrb
aaa
nop
add
mov
cmp
test
or
cmp
push
leave
cs
push
adc
cs
mov
shll
fs
mov
popl
out
call
cmp
push
cmp
lods
icebp
scas
clc
adc
push
cwtl
cmp
mov
imul
aam
aas
in
repnz
subl
inc
mov
mov
jo
adc
cmpsl
arpl
dec
mov
sub
int
mov
adc
icebp
jae
cmp
movsl
or
inc
cmp
xlat
mov
movsl
loope
push
dec
fs
scas
outsb
and
sahf
and
movsl
mov
iret
push
push
mov
jbe
xchg
fldenv
xor
loope
lods
fistpl
lods
xchg
sahf
jmp
xor
push
inc
loope
mov
mov
mov
push
xor
pop
adc
xor
fidivrl
stos
inc
pop
or
mov
mov
leave
sbb
call
push
cmp
stos
insb
roll
imul
jp
mov
lods
popf
jmp
lret
lcall
adc
sbb
sbb
xchg
mov
sub
inc
pusha
mov
adc
sub
fbstp
and
js
mov
push
notb
lods
hlt
int3
sahf
adc
xchg
push
movsb
xlat
rclb
mov
xor
lods
gs
into
sahf
cmpsb
sbb
xor
inc
and
out
js
inc
pop
shl
addb
test
xor
aas
movsb
rolb
fld1
fcomi
mov
rcrl
fwait
mov
sahf
jne
push
sbb
cmc
test
not
jo
fstpl
add
int3
popf
sti
sbb
xchg
in
test
inc
add
or
orb
test
or
fs
pop
loope
mov
adc
movsb
sub
add
mov
inc
xchg
popa
mov
inc
sbb
inc
ss
int3
loope
or
mov
cmp
sar
push
mov
aas
das
lds
xor
ljmp
jecxz
push
cmpsb
lods
int
js
xor
adc
fdivrs
fs
rol
mov
data16
mov
out
lcall
sub
push
sbb
and
stc
aad
jl
pop
cltd
adc
js
adc
add
push
inc
loopne
inc
rcrb
adc
aam
lahf
mov
sub
enter
sbb
imul
xor
movsb
jmp
fidivrs
cmp
fcomip
aaa
stc
and
ror
jne
scas
sbb
sbb
fcmovnb
lods
movsl
std
pop
shlb
sub
in
sub
das
sarl
sub
jno
add
cwtl
aaa
popa
fadd
fidivrs
and
add
adc
jge
lods
js
xlat
add
adc
aas
sub
mov
sub
jmp
jne,pn
call
cmpsl
stos
dec
call
fs
add
movsl
jb
inc
rcrl
mov
lsl
icebp
and
adc
jne
push
ret
xchg
leave
mov
push
mov
jmp
fs
bound
jle
mov
dec
rorl
fisttpl
xor
scas
test
mov
movsl
adc
push
std
popa
sbb
sub
iret
sub
daa
jne
or
daa
add
mov
call
test
mov
test
add
shll
add
aad
jl
add
mov
lock
sbb
mov
in
add
pop
je
pop
sub
jae
movsl
and
mov
int3
push
mov
jne
sub
js
push
jne
sahf
sub
and
std
cmp
mov
jecxz
mov
out
cmp
call
mov
jb
inc
xorl
mov
jnp
aas
call
test
xor
sub
popf
pop
xor
fmuls
add
sub
loope
cmp
mov
push
test
sub
inc
cmp
sti
fcmovnb
sub
daa
mov
push
or
stos
movsb
adc
icebp
sub
cs
push
movd
sub
jae
mov
adc
sbb
or
outsl
or
jle
sahf
mov
cs
cmp
mov
jg
scas
test
sub
movsb
pushf
cmpsb
sbb
outsl
ja
lock
gs
jo
orb
sbb
add
scas
xchg
add
pop
adc
mov
loope
add
add
adc
and
jo
sub
jo
aad
repnz
mov
sti
sub
sub
push
shll
dec
add
mov
or
bound
sbb
xorl
stos
mov
pop
std
mov
fs
cmc
popa
pop
jne
adc
sbb
add
out
push
enter
out
inc
icebp
inc
iret
push
mov
nop
cmp
jmp
das
push
xor
popf
sahf
jb
xor
push
lods
push
mov
pop
cmp
xor
or
sbb
pop
lods
mov
scas
add
jne
push
push
insb
loope
mov
out
and
shll
sbbb
lods
call
lea
cmp
mov
fistps
insb
dec
insb
adc
adc
jns
fstpl
jmp
adc
call
jge
jnp
xlat
jp
sbb
cmp
xchg
fisubl
pusha
loop,pn
add
push
cmc
xor
inc
dec
or
jne
mov
neg
mov
dec
xchg
leave
mov
and
cmp
or
mov
ret
in
push
and
pop
pop
inc
xor
shrl
clts
jecxz
arpl
xor
push
mov
sahf
add
mov
lods
imul
cmp
mov
jne
pop
rclb
adc
ss
jle
in
adc
out
pop
dec
inc
adc
addr16
mov
dec
xor
aad
bound
pop
sub
insb
ja
data16
pop
jmp
insl
push
aad
leave
cmp
insl
push
test
cli
sub
out
sbb
pop
mov
jp
xchg
daa
or
loopne
scas
and
addb
cltd
and
adc
cli
pop
cmp
mov
and
and
in
pop
aam
loopne
aam
aam
fdivrs
and
xor
outsl
pushf
add
pop
mov
pop
daa
push
pop
pop
je
mov
xchg
es
jp
and
leave
xor
and
out
jmp
and
mov
mov
xchg
fldl
stos
lods
fistpll
out
add
lret
sub
fimull
pop
xchg
mov
xchg
or
adc
jle
adc
sbb
and
sub
xor
adc
sub
aaa
jo
ljmp
in
sbb
out
andb
add
pop
sub
mov
divb
call
into
ds
outsl
shlb
cmp
and
into
fsts
xorb
adc
popf
subb
sub
out
dec
ret
jge
adc
xor
adc
nopl
jg
int
xchg
aas
fstp
mov
pop
movsb
jge
push
insl
push
stos
lods
lahf
sar
jg
mov
jle
push
pop
rcl
loopne
jmp
xchg
movsl
push
hlt
pop
iret
mov
aaa
das
dec
and
and
push
and
sahf
aam
jp
loopne
out
out
ficomps
pop
rcl
in
sbb
into
push
out
xlat
pop
shl
repz
mov
cmpsb
loope
mov
iret
call
cmpb
nop
ret
cs
and
cmpsl
outsl
mov
push
push
cs
ret
into
mov
xor
scas
out
das
div
sub
xor
shlb
or
dec
and
pmulhuw
inc
movb
fstl
lea
and
movsb
mov
rorb
fstl
push
adc
push
sub
test
ljmp
ljmp
movsl
addb
push
insb
out
pusha
push
je
add
add
mov
test
xor
sahf
enter
fsubrl
test
je
sbb
mov
jnp
jle
std
cmp
dec
sbb
or
dec
outsl
in
adc
mov
repz
sarb
cmp
mov
les
mov
fsub
dec
les
nop
jnp
xor
push
push
jle
xor
mov
fiaddl
and
int
pop
mov
cwtl
dec
pop
scas
add
dec
and
test
enter
dec
mov
sub
imul
cld
ret
jge
dec
shll
mov
in
adc
mov
faddl
pop
popf
scas
xor
and
lods
inc
loopne
pop
int3
dec
sub
mov
repnz
mov
flds
bound
push
std
cmp
lahf
dec
std
mov
lahf
bt
push
rorb
jecxz
mov
sub
mov
mov
andl
xchg
popf
push
pop
push
pop
add
sahf
jecxz
dec
xchg
jb
nop
shrb
lret
lods
aaa
dec
push
je
test
mov
out
mov
jle
push
bswap
insb
int
ljmp
and
cmpsl
stos
adc
pop
loop
mov
xchg
lds
mov
pop
adc
popf
add
push
in
push
jge
push
sahf
xor
js
add
adcl
sbb
sub
sbb
inc
mov
in
jmp
push
mov
cli
sub
xor
jecxz
pcmpgtd
lret
enter
adc
subl
sub
push
mov
outsl
aaa
fldl
jo
or
sahf
inc
mov
aaa
aad
sahf
and
call
push
sbb
dec
push
movsb
pop
add
aam
jmp
cltd
sub
outsl
pop
cltd
je
fabs
push
les
in
test
lods
jp
test
mov
jmp
test
in
pop
xchg
cmc
jp
inc
cmp
cwtl
adc
movsb
je
icebp
jg
or
mov
imul
je
dec
cmp
inc
test
leave
clc
je
jl
cwtl
scas
shll
aas
pusha
sub
push
xor
int3
lahf
gs
adc
outsb
je
add
push
mull
add
adc
gs
adc
sbb
pop
mov
jb
sbb
fiaddl
in
mov
dec
cltd
dec
sub
push
call
clc
pop
or
addb
or
adc
cs
lea
and
sbb
pop
sbb
aas
xor
sub
push
pop
test
pop
insl
adc
lods
sub
fnstenv
pop
fnsave
or
xlat
inc
inc
clc
pop
fisttpll
repz
shll
lods
xchg
sbb
mov
cmpsl
mov
fwait
mov
jecxz
cmp
dec
rcll
shlb
mov
fcomip
xlat
pop
inc
sahf
mov
sub
mov
fnsave
notb
lcall
push
in
lods
mov
enter
cmp
mov
in
fwait
in
mov
cmpps
adc
je
pop
out
test
xor
sarb
sbb
cmpsb
mov
cmp
add
sbb
lods
cs
pop
shll
aas
mov
sbb
cmc
dec
in
jae
push
xchg
inc
lods
pop
sub
xor
mov
fiadds
fdivrl
pop
xor
dec
cmp
add
push
lret
shll
xor
ss
mov
nop
fcompl
or
inc
xchg
lea
jb
cmpsb
imul
loop
fisttpll
inc
sub
clc
sti
mov
mov
cmp
dec
stc
add
xchg
loop
sbb
jae
lock
and
xchg
inc
pusha
fwait
pushl
aas
pop
mov
orl
aad
cmc
incb
sarb
dec
pop
insb
iret
sub
jae
adc
cmpl
sbb
cmp
mov
pop
data16
shlb
jb
jmp
or
sbbb
fidivrl
cs
mov
push
decl
stc
adc
jp
repnz
movsb
push
add
js
js
cltd
sub
jmp
push
or
mov
test
jae
mov
fildl
push
pusha
scas
js
inc
dec
pop
insb
gs
into
scas
clc
cmp
mov
mov
xor
shrl
call
imul
mov
xchg
movsl
push
insl
adc
pop
pop
sahf
int3
mov
adc
cmp
sbbb
lods
jecxz
xor
loope
and
cmp
mov
aas
add
mov
pop
add
leave
test
push
push
test
or
mov
mov
push
adc
jbe
sub
sub
int
in
scas
or
fdivs
aam
mov
into
push
sub
push
pop
mov
aas
cmpsb
sbb
loope
popf
data16
fs
adc
mov
shrb
pop
push
dec
mov
push
shrl
adc
rolb
xor
and
clc
mov
sbb
mov
std
cmp
jbe
jmp
mov
ficompl
out
xchg
xor
dec
rolb
xlat
pmulhw
xchg
sub
fistpll
mov
lcall
aaa
adc
test
mov
mov
scas
popa
stos
sub
cmp
icebp
lea
or
or
ljmp
add
out
in
dec
ss
das
int3
pop
punpckldq
cmp
rolb
lods
fstpl
jg
jo
xor
adc
adc
jecxz
mov
ret
and
andl
nop
rol
es
sbb
test
inc
jecxz
or
add
fisubl
nop
jo
icebp
inc
in
jnp
aas
es
call
cmp
xor
aaa
jo
or
mov
push
push
pusha
mov
ss
call
pop
nop
jecxz
xor
push
push
cmp
xchg
pop
cmp
add
xor
pop
xchg
jl
je
push
notb
xor
fs
mov
fcoms
jl
sbb
push
andb
sarb
pop
gs
paddb
mov
inc
into
sbb
push
dec
mov
xor
sbb
mov
xor
mov
and
into
mov
pop
adc
dec
rolb
inc
mov
xor
ret
jns
orb
dec
jne
push
scas
mov
in
out
fsubrl
fcomip
out
dec
ret
fdivs
cmp
in
cmp
jle
pop
push
lock
lods
add
scas
pop
cltd
cmpsl
adc
push
push
mov
fwait
popf
jl
xor
mov
jp
dec
pop
imul
adc
into
in
in
xchg
repz
hlt
mov
dec
movsb
xchg
cmpb
mov
scas
cs
ds
fldt
add
dec
jbe
adc
jmp
inc
lods
push
jle
rclb
mov
add
cmp
lea
adc
jl
shlb
loop
outsl
adc
cwtl
adc
iret
std
add
mov
xor
jmp
xchg
das
pop
filds
pop
ja
test
dec
cli
pop
push
jo
push
testb
sub
data16
adc
pop
jg
pop
insb
and
ret
popf
mov
rcrb
sahf
jae
xchg
xchg
push
jno
jp
xor
lahf
jo
std
rclb
rcrb
dec
clc
aad
fwait
dec
shll
xor
je
xor
push
stc
mov
scas
loop
outsb
aaa
imul
ret
call
mov
imul
jge
call
out
popf
jnp
jb
xlat
andb
loopne
es
ljmp
or
xchg
cmp
div
ss
jecxz
push
loope
fsubs
push
pop
jmp
imul
shll
push
lods
aas
pop
incb
fmuls
lods
sbb
lcall
dec
inc
add
pop
sub
xor
popf
sub
out
cmp
push
scas
addr16
sbb
sbb
mov
shlb
adcl
cmpb
xor
jp
mov
jb
popa
loopne
movsl
dec
int
shlb
lcall
xor
jp
mov
ljmp
jmp
add
add
and
rcl
dec
mov
add
push
shl
sub
je
and
test
and
push
mov
mov
fiaddl
mov
pop
aam
push
ljmp
lret
dec
scas
cs
int3
push
nop
adc
cmp
mov
cmp
mov
pop
fcmovbe
sub
xchg
xor
push
rdpmc
dec
int
inc
pop
lods
nop
imul
cmpsl
lock
and
mov
cs
adc
out
pop
jno
push
into
push
dec
std
and
mov
inc
push
fwait
mov
xchg
xor
shr
cmp
sbb
mov
jmp
jge
out
sbb
test
mov
push
std
mov
dec
popf
pop
cmp
cmp
push
jle
adc
mov
sahf
dec
xchg
je
je
push
mov
je
adc
add
pop
rorb
cmp
mov
out
xchg
xor
mov
jge
sub
cltd
insb
lods
movsl
pop
rolb
xor
dec
sub
mov
idivl
or
rcrb
ret
decl
mov
cmp
pusha
mov
jmp
idivb
icebp
lea
xor
xchg
out
mov
jbe
adc
xor
fiaddl
dec
stos
loopne
pushf
scas
push
pusha
xor
lahf
jo
mov
aas
ljmp
inc
pop
mov
dec
hlt
sbb
adc
mov
daa
mov
xchg
mov
inc
cmc
push
push
mov
imul
add
shl
xor
sub
add
scas
cmp
xchg
cmc
xor
bound
out
pop
xchg
xor
xor
jns
add
aas
into
mov
xchg
ret
fisttpl
dec
stc
bound
aam
out
xchg
and
arpl
cmpsb
cmpb
hlt
or
mov
das
dec
pop
mov
divps
mov
and
out
aas
dec
sbb
push
int
pop
popf
mov
add
loopne
subb
cs
in
xchg
jp
in
fsubrl
fs
mov
or
addl
or
pushl
pop
sarb
mov
jae
mov
je
mov
outsl
fs
outsb
lea
xlat
add
and
mov
push
cltd
out
xor
repnz
dec
mov
out
pop
sub
mov
push
adc
into
and
lcall
shr
push
lret
or
mov
cmpsb
xor
in
xchg
orb
pop
mov
adc
insb
int
cmpsb
or
fdivrs
dec
idivl
dec
push
incl
jmp
jnp
xchg
sub
fists
out
call
scas
cmp
or
ret
push
mov
stos
cmp
jno
xor
std
test
cmp
adc
lods
jle
dec
test
ficoms
cmp
mov
jmp
xor
jg
fucomp
push
fsubp
lods
lock
fstpt
xchg
jno
loopne
lods
in
cmp
mov
sub
xchg
mov
ficoms
xchg
movsl
ja
js
mov
in
or
cmp
cmp
mov
inc
sub
and
pop
and
in
stc
test
pop
jmp
mov
lahf
mov
aas
in
or
cvtdq2ps
inc
mov
mov
shll
jp
repz
and
xor
scas
test
mov
pop
loope
fsub
lods
lret
mov
push
pop
pop
cmp
mov
insl
push
testb
imul
ds
mov
int3
call
xor
pop
mov
pusha
fistpl
lea
sbb
adc
mov
sbb
bound
mov
fnstcw
and
out
xchg
movsl
aad
lret
mov
fs
scas
aad
jl
xchg
and
add
jae
mov
lret
call
je
or
rcll
ja
mov
push
mov
int
add
xor
dec
dec
jne
rorb
out
or
pop
push
push
dec
test
or
push
stos
xchg
fisubrs
pop
inc
add
clc
and
aam
nop
sar
add
scas
insb
insb
sbb
xchg
and
mov
mov
aaa
mov
dec
xor
dec
mov
xor
pusha
fwait
add
out
stos
push
cli
cmp
lods
dec
or
int3
mov
js
mov
and
movsl
mov
movl
xchg
sbb
data16
fwait
and
pop
sahf
xchg
cmp
lods
test
ja
sub
test
mov
rcrb
sahf
in
jge
ficoml
bound
icebp
ds
mov
mov
mov
in
pop
sbb
scas
push
je
stos
or
mov
xchg
dec
adc
pop
iret
xchg
jno
ljmp
xchg
jmp
xchg
cmp
adc
adc
popl
sbb
ret
nop
jle
adc
pop
push
add
inc
mov
call
cmp
jb
pop
orl
mov
and
jl
aad
xchg
sahf
movsl
dec
shlb
add
jg
add
push
and
ja
rcrl
shl
mov
psrad
movsl
xor
or
pop
sbb
mov
adc
pop
mov
ja
adc
inc
scas
or
movsl
decb
mov
pop
push
loopne
jge
cmp
js
mov
adc
xor
lahf
mov
js
fwait
and
shrl
xchg
shrd
mov
fcmovbe
xorl
insl
xor
in
xchg
xor
push
xchg
lds
cmp
xlat
mov
xchg
mov
mov
jo
sub
je
mov
outsl
xor
and
and
cmp
loopne
dec
or
mov
loopne
shlb
or
insl
hlt
adc
adc
lahf
in
cmpsl
xchg
mov
lret
orl
mov
adc
lret
test
arpl
dec
pop
jo
lcall
mov
xchg
cmc
out
mov
adc
xor
xchg
sub
pop
mov
xor
cld
ret
loop
lret
aas
and
sub
and
jo
outsb
aaa
jno
sbb
outsb
out
sub
push
outsl
xchg
push
frstor
adc
jne
dec
lods
leave
cli
stos
imul
fidivl
push
jmp
mov
lds
into
sub
add
cmp
jmp
das
add
mov
xlat
repnz
outsb
jnp
xchg
sub
movsb
lods
mov
ljmp
aaa
pop
callw
inc
adc
ret
lods
adc
into
and
sbb
jl
and
rclb
mov
mov
sub
mov
out
cmp
into
pop
jle,pn
insb
pop
and
xorb
int3
push
repz
adc
mov
lods
outsb
sub
sbb
cmp
cmpl
je
cltd
cmpl
or
push
pusha
das
or
aaa
xor
mov
orb
das
iret
movsl
dec
mov
andl
popf
dec
mov
adc
lods
mov
inc
jp
jns
dec
cmp
shlb
and
pusha
lods
pop
cmp
add
out
push
push
ljmp
adc
xor
out
pop
sub
jge
or
bound
mov
push
push
push
pop
sbb
push
adc
lods
call
add
lcall
sub
jl
mov
adc
jle
mov
cmp
out
and
jb
enter
inc
or
and
jmp
mov
rorl
imul
mov
jg
xor
pop
inc
lods
in
cmp
test
dec
jbe
inc
outsl
lods
cmp
fwait
mov
fnstsw
rcl
inc
or
and
adc
adc
lahf
in
jge
adc
pop
push
or
and
push
outsl
cmp
sub
pop
jmp
sbb
inc
lcall
flds
inc
sbb
mov
or
add
movsb
in
lcall
fs
sbb
insl
sbb
fwait
adc
ret
cmp
push
stos
adc
adc
ja
sbb
adc
ret
test
push
inc
fnsetpm(287
mov
jnp
inc
hlt
bswap
jmp
scas
mov
jae
add
aaa
pusha
rcrl
inc
xchg
dec
jp
cmp
pushf
hlt
mov
add
jg
sbbl
push
push
cmpsl
fsubs
js
inc
cmp
push
sahf
push
lds
cwtl
repz
fxch
sti
insb
icebp
lea
mov
mov
out
outsb
xchg
and
or
js
xchg
ljmp
sub
incb
push
jmp
js
inc
cmp
mov
xor
mov
lods
xor
movl
adc
mov
test
dec
jo
js
xchg
xchg
lock
add
and
mov
dec
scas
insl
mov
mov
test
add
jecxz
dec
push
std
fs
scas
rcr
xchg
je
inc
jecxz
push
xor
js
popf
sbb
int
lock
daa
add
sarb
mov
xchg
dec
aam
mov
mov
loope
pop
sub
cmp
mov
mov
insb
clc
xchg
add
sbb
mov
push
stos
adc
mov
adc
cmpsb
xchg
pushf
outsb
mov
sbb
loope
mov
or
sbb
int
adc
jge
js
add
lcall
push
or
mov
imull
cmc
mov
mov
add
jecxz
es
mov
sub
hlt
call
sub
pop
popa
push
inc
aad
es
pop
int
call
sahf
mov
cmp
rcrb
push
xor
sti
insl
lcall
sub
add
ss
je
jno
xchg
xor
fidivrs
mov
fidivl
lods
jbe
dec
jle
sub
push
popf
add
and
sbb
data16
push
call
psubw
shr
test
insb
mov
enter
mov
movsl
pop
in
lcall
out
mov
and
out
das
pop
push
mov
jb
xor
data16
popf
test
or
lcall
adc
sbb
mov
add
and
filds
lcall
push
add
in
lret
test
lret
cmp
enter
int
clc
lds
ljmp
xor
jl
je
in
enter
or
aaa
orb
adc
mov
enter
ja
leave
js
nop
mov
sbb
sub
pop
inc
mov
xchg
pusha
orb
ret
cmpb
imul
push
clc
insl
dec
les
pop
test
push
insb
mov
or
movsl
inc
push
not
mov
xchg
xor
jl
xchg
and
cltd
lret
inc
loope
adc
dec
jne
inc
push
or
fucomp
popa
mov
jmp
add
cmp
into
sbb
or
test
lret
mov
inc
cmp
loopne
adc
fnsave
mov
nop
inc
insl
aaa
pop
out
outsl
shl
jmp
jae
jle
cmp
mov
popf
pop
out
je
cwtl
jecxz
push
jg
fadd
fadds
sti
cmpsb
push
pop
enter
push
fsubrl
int
call
das
repz
dec
sarl
lods
out
xchg
clc
icebp
mov
cs
mov
add
add
call
rorb
jnp
mov
dec
mov
cmp
xchg
or
sub
shlb
sbb
mov
popa
imul
dec
cmpb
mov
call
dec
xchg
or
xchg
mov
ja
xchg
sub
lods
daa
pushf
or
test
fimuls
loopne
dec
in
lea
fyl2x
or
dec
push
adc
mov
repz
fs
dec
and
pusha
xchg
ds
outsl
or
mov
xor
pop
mov
out
pop
mov
aaa
push
jnp
notb
push
mov
cmc
cmp
sbb
aad
js
in
and
sbb
and
movsl
pop
imul
or
push
ljmp
xchg
jp
insl
jle
mov
xlat
cmp
xlat
xchg
jo
jbe
bound
add
xor
fmul
rorl
clc
mov
dec
imul
testl
mov
sub
push
xchg
mov
call
mov
shlb
aaa
dec
xor
mov
add
push
imul
adc
icebp
xchg
das
xlat
xchg
jae
sti
movsl
shlb
and
stos
sahf
aad
jne
test
out
mov
movsl
es
ljmp
jmp
imul
lods
hlt
das
enter
movsl
mov
test
call
pop
sub
dec
lods
test
cs
insb
dec
repz
bound
fcmovnbe
and
fldenv
dec
xchg
dec
push
shlb
loop
xor
hlt
mov
adc
outsl
pop
push
in
dec
jo
sbb
pusha
insb
loope
divb
mov
inc
mov
loop
stos
aas
js
rcrb
push
add
ss
jne
pop
xor
testb
fwait
adc
lret
movsl
add
inc
and
dec
je
out
cmp
adc
jle
clc
outsl
cmpl
int
shll
push
cmpsb
xchg
sbb
mov
jns
xor
or
jo
lods
cmp
dec
add
sub
cmp
inc
call
addr16
pop
imul
js
sbbl
lods
jno
or
jbe
int3
fldenv
pop
call
rcll
loopne
gs
jo
sarb
adc
xor
sub
dec
mov
pop
cltd
and
arpl
and
inc
dec
sub
add
les
je
adc
inc
das
adc
sbb
clc
jl
popf
aas
xor
mov
insl
stos
add
out
test
aaa
lcall
nop
lods
adc
mov
sti
in
fwait
ljmp
cmp
pusha
xchg
sbb
ds
jmp
ja
push
fildll
fidivl
sar
jae
scas
sub
pop
pop
dec
mov
jnp
mov
mov
shrl
pop
cmc
iret
cmpsl
pop
pop
and
js
addr16
xchg
dec
mov
jl
sub
dec
stos
or
adc
adc
pop
movsb
fs
fisttpll
enter
pusha
dec
test
lahf
dec
inc
cwtl
jecxz
in
fidivs
xor
iret
mov
sti
lods
test
call
frstor
out
jnp
dec
ja
sahf
jbe
adc
sahf
cmp
xchg
sub
pop
add
xchg
xor
or
mov
lahf
scas
sub
shlb
mov
inc
test
movsb
adc
test
rcll
jmp
nop
jo
mov
out
rcrb
push
add
adcl
loopne
sahf
movsl
popa
and
pop
sub
rorb
pop
pusha
adc
dec
xchg
nop
jge
sub
movsl
add
into
sub
sbb
jne
popf
mov
cmp
rolb
je
sub
or
lock
popa
les
adc
lods
repz
pop
mov
testb
jl
push
icebp
lods
pop
cmp
bound
cltd
aam
jge
stos
roll
mov
test
adc
xchg
inc
cli
push
dec
mov
push
rolb
movb
add
mov
mov
fisubs
push
pusha
sbb
ret
loop
aaa
mov
adc
jmp
out
fadd
in
mov
pop
lcall
jo
pop
stos
cmpb
mov
dec
and
mov
cmp
jle
loopne
lahf
arpl
loope
adc
and
repz
out
mov
cmp
lods
sahf
mov
adc
push
inc
inc
mov
leave
and
addb
stc
pop
push
gs
adc
pop
lea
movl
daa
pop
pusha
inc
or
or
into
pop
ret
cmp
mov
adc
cmpsl
adc
push
fxch
add
addr16
adc
adc
jmp
dec
int3
add
test
adc
xor
jbe
sub
sub
lods
sub
pop
aad
pop
pop
fidivrs
mov
popf
xor
push
aaa
repz
inc
rolb
xor
lods
xchg
shr
ss
insl
jecxz
fs
sbb
push
mov
leave
insl
or
jle
and
in
add
adc
lods
ffreep
jne
jb
fcoms
mov
nop
js
add
loope
insb
dec
fldt
arpl
add
or
add
mov
mov
fldl
sbb
mov
adc
cmc
dec
push
lock
shlb
or
sarl
clc
int3
pop
cmc
sub
push
inc
or
xchg
fninit
jbe
push
lock
in
inc
fmull
jg
cld
push
cs
scas
movsl
aaa
or
fnsave
enter
mov
mov
dec
scas
insl
cmp
bound
or
or
xchg
push
inc
stos
xchg
imul
je
ss
xchg
jo
dec
imul
fildll
xor
push
jmp
das
xchg
jmp
insl
cmp
mov
xchg
in
repnz
std
push
push
or
je
pop
mov
ret
dec
dec
inc
scas
xor
in
mov
fucomip
mov
sub
adc
aam
mov
ret
ja
fdivl
xor
movsb
das
jb
fimull
shll
outsl
and
mov
jno
xor
enter
add
pop
loopne
or
addr16
ss
pop
or
addr16
data16
rorl
sbb
scas
mov
jb
xor
sbb
leave
aam
sub
adc
insb
sbb
push
stc
sahf
das
sbb
shl
sbb
mov
les
xor
adc
clc
mov
adc
cltd
push
jecxz
jnp
jmp
ljmp
and
int3
or
adc
dec
add
pusha
adc
dec
pop
ja
clc
iret
out
cmp
adc
mov
addr16
push
inc
int
mov
push
fldcw
mov
das
out
mov
fiadds
adc
fmull
lods
mov
test
mov
xor
and
aad
les
repz
loope
stc
bound
das
mov
popf
ljmp
cmp
daa
and
jae
scas
xchg
sub
and
xorl
push
daa
xor
lods
pop
mov
out
add
mov
adc
andb
jnp
dec
xor
mov
ret
fbstp
push
shll
and
push
mov
outsl
xchg
in
popf
call
and
adc
xchg
iret
pop
loop
xchg
push
dec
adc
movsb
pop
loopne
stos
shr
lods
cltd
outsl
lds
scas
arpl
pop
jp
shrb
pop
sub
std
xor
scas
pop
sub
dec
mov
out
mov
jo
ja
fsubl
cmp
xor
test
repz
fdivrl
sub
fldt
rcll
jle
xchg
sbb
add
mov
xor
in
mov
xchg
into
mov
lcall
cld
add
jl
stos
subb
int3
xor
pop
fwait
jg
push
movsl
ss
clc
inc
mov
fwait
cmc
jmp
xor
jg
test
mov
xor
xlat
sbb
mov
fisubl
insl
insl
cs
lcall
loope
adc
insl
lds
jmp
sahf
sbb
rolb
add
or
push
mov
adc
push
js
xor
repz
add
mov
adc
loopne
ljmp
ret
xor
mov
inc
in
dec
adc
shl
fyl2x
push
loopne
push
shrl
je
push
jle
cmc
adc
cmp
mov
mov
jmp
loopne
jecxz
push
mov
mov
cmpsl
mov
mov
rorb
pop
cwtl
push
push
lods
xchg
sbb
rolb
push
ljmp
add
jno
addb
push
popf
scas
pop
xchg
int
pop
jp
cmp
pop
pop
nop
repz
push
mov
movsb
loope
cmp
push
gs
ficompl
scas
loop
pop
push
or
mov
mov
outsl
push
leave
call
jmp
xor
popf
cltd
xchg
scas
adc
and
in
scas
sbb
sub
popf
and
nop
mov
dec
push
and
jge
jecxz
fcompl
xchg
add
xchg
add
jp
dec
mov
cs
adc
outsl
outsl
movsl
mov
mov
icebp
aaa
push
lods
push
xor
subb
pop
sub
sbb
movsb
mov
or
call
inc
scas
lahf
fs
pop
sub
ja
adc
mov
popf
scas
jge
cmpsb
cmp
lret
adcb
mov
aas
aas
shrb
mov
testl
aas
xor
push
pop
and
sub
clc
aas
cmpl
scas
xor
ret
mov
push
add
push
push
mov
xchg
mov
divb
or
int
fidivs
dec
arpl
daa
mov
testl
test
jno
ds
imul
subl
ljmp
out
pusha
push
stc
call
cmp
mov
adc
push
pop
xchg
orb
movsb
hlt
push
scas
mov
cmp
lds
pcmpgtb
into
movsl
mov
repz
adc
aad
jne
std
add
rcl
lret
dec
xchg
out
outsb
push
mov
xchg
mov
stc
adc
js
aad
rcll
cmp
add
test
orl
incl
mov
in
inc
incb
ret
xchg
movsb
nop
out
mov
mov
jl
and
cld
add
shr
andb
fsubs
test
cmp
add
mov
sub
sbb
jmp
or
pcmpeqw
sbb
dec
loopne
jecxz
mov
mov
mov
cmp
loopne
mov
lahf
mov
outsl
push
mov
push
cmp
scas
pop
ret
nop
lods
cmp
pop
xor
faddl
sbb
push
into
pop
lea
or
ss
dec
push
je
out
xor
fimuls
fstpl
js
pop
adc
sbb
adc
cwtl
imul
scas
test
fildll
ret
or
push
mov
daa
jecxz
inc
icebp
stos
scas
jo
adc
incb
imulb
sbb
sub
jb
adcb
iret
cmpsl
add
pusha
mov
or
mov
not
stc
xor
bound
add
sub
lods
loopne
mov
fsts
cmp
dec
fdivs
mov
sub
in
fisubl
popf
dec
adc
mov
mov
sbb
mov
push
jno
sbb
push
scas
xor
les
scas
test
ja,pn
mov
mov
mov
sahf
pop
cmp
scas
pushw
and
sub
fs
popf
jge
fincstp
out
mov
sub
scas
and
aaa
lods
cmp
lds
pop
aaa
in
into
dec
cmpsl
and
mov
insb
pop
insb
mov
or
mov
mov
cs
xchg
push
and
daa
fcoml
shll
outsl
jae
incb
in
outsb
sbb
lock
xor
ficomps
ja
ret
test
and
jmp
xor
sbb
bound
xlat
test
sub
add
scas
into
jnp
jecxz,pn
lods
xor
push
fistpll
out
xchg
and
cwtl
fcom
pusha
std
sub
movntq
mov
mov
clc
sub
inc
aam
lods
mov
cmp
jae
aaa
inc
fadds
cmp
sub
enter
push
push
and
int3
mov
xor
mov
cmp
into
sbb
lret
lods
mov
xor
cmc
incl
adc
subl
xlat
and
xor
cmp
data16
int3
sti
out
xor
cli
inc
xchg
adc
jge
ficompl
test
or
wbinvd
std
pop
pop
enter
cmc
and
mov
mov
pop
and
mov
mov
mov
push
mov
push
aas
mov
xchg
xchg
jge
adc
subl
cmc
dec
dec
xor
and
pop
in
shll
xlat
xor
cmp
div
inc
orb
ss
lds
push
or
das
js
movsb
movsl
pusha
adc
scas
or
adc
add
push
test
stos
lods
jb
jl
xchg
jne
xchg
das
pop
rolb
add
jbe
pop
outsl
pop
aaa
adc
stc
js
push
int
ljmp
pop
cmp
mov
jbe
adc
push
push
ljmp
mov
xlat
push
andb
add
xchg
or
xlat
into
sbb
cmpsb
outsl
mov
dec
sbb
ds
lret
adc
mov
inc
aas
xchg
xchg
dec
cmp
sar
rolb
xchg
and
lods
xor
and
popl
lods
xor
jge
add
lods
mov
and
adc
movsl
or
dec
mov
data16
outsb
out
filds
cmp
jecxz
imul
scas
sarl
call
out
lret
jae
mov
call
fwait
adc
lds
mov
jae
lods
dec
jmp
fs
inc
orb
andb
cmc
movswl
out
pop
adcb
sbb
mov
or
subb
mov
adc
mull
pop
jbe
fwait
xchg
out
fsubrp
xchg
or
or
dec
inc
xor
mov
out
fucomi
out
sbb
and
cmpsb
movsb
sub
fs
adc
sbb
ret
push
adc
xor
and
je
lea
sbbb
nop
mov
out
cld
pusha
int
or
mov
bound
jne
pop
xchg
shrl
jno
inc
dec
shrl
lods
ror
mov
js
fs
mov
adc
repz
cmc
xchg
rolb
xchg
adc
movsb
or
push
test
es
enter
sbb
or
push
jae
jmp
ds
sbb
add
vpsrlw
mov
out
mov
out
loop
pop
fsubrs
mov
iret
in
loope
dec
movsb
fs
xchg
sbb
xor
xchg
dec
into
icebp
test
mov
sbb
adc
stos
std
cmp
jp
sarb
movsb
jge
and
out
idiv
mov
mov
js
mov
push
add
popf
jnp
fldt
mov
mov
adc
jmp
scas
sbb
dec
cli
lods
daa
js
loopne
pop
js
popa
out
push
fnstenv
test
fisttpl
mov
movsb
loope
mov
fcmovnb
inc
mov
popf
inc
add
lea
ret
test
jbe
jg
scas
push
lods
lock
ja
push
cmp
fdivrl
movsb
cmp
aas
lock
add
and
push
adc
sbb
jo
xor
lods
xor
in
repz
ljmp
mov
push
lret
jge
push
and
pop
hlt
sbb
lods
cld
test
loope
xorb
push
mov
rolb
add
std
mov
inc
rcrb
lods
inc
sub
stos
push
ret
mov
mov
call
pop
out
fcompl
pop
push
xor
out
movsb
xchg
lock
inc
xlat
jecxz
loopne
sbbb
call
push
and
xchg
add
mov
xor
and
sub
mov
ljmp
add
testb
xor
scas
mov
mov
or
inc
mov
add
int3
adc
pop
popf
xchg
adc
insb
mov
lcall
movsb
int3
cmp
repnz
pop
xor
movsl
call
es
dec
lods
lods
inc
in
push
or
add
hlt
ss
mov
out
jno
adcb
mov
rcl
jne
push
jo
mov
popf
pop
adcl
xchg
add
shrl
pusha
or
psllw
js
mov
stc
mov
inc
pop
pop
ljmp
dec
adc
pop
lods
mov
dec
mov
mov
imul
cmp
mov
cltd
mov
es
pop
mov
xorb
mov
xor
xor
mov
icebp
lcall
push
adc
adc
rcl
popa
xor
loope
fmul
in
xor
lcall
hlt
jle
jp
jnp
int
inc
mov
xchg
sub
cmpsl
scas
jnp
das
xlat
frstor
jge
xchg
mov
out
aad
loope
out
xor
insb
adc
pop
fisubl
daa
iret
pusha
call
dec
scas
dec
jge
adc
fsub
icebp
fidivrl
dec
xor
lods
or
stos
and
cld
xchg
pop
dec
and
inc
pop
mov
jae
adc
pusha
cltd
daa
aad
sti
lea
mov
mov
mov
add
sbb
dec
outsl
xor
lods
imul
mov
lret
mov
mov
aad
cltd
lods
mov
sbb
push
dec
loopne
push
negl
call
add
sti
push
or
inc
adc
stos
push
fs
out
leave
push
dec
cltd
lds
sub
mov
mov
mov
or
push
ljmp
jns
sub
jb
lods
xor
outsl
and
adc
mov
out
lret
add
adcb
in
test
mov
aad
jb
jecxz
shlb
addb
xlat
rorl
fidivrl
xchg
pop
outsl
or
stos
js
addr16
orl
mov
inc
les
clc
insb
dec
mov
fldl
lcall
scas
jmp
xor
push
add
jo
adc
and
dec
push
dec
filds
dec
sub
or
pop
mov
cmp
push
mov
add
ljmp
xchg
cmp
add
pop
inc
lods
clc
xor
mov
ret
or
pop
lods
hlt
mov
pcmpgtd
jg
xchg
adc
mov
or
vpshuflw
jg
xor
lods
pop
mov
or
pop
cmp
jne
test
adc
xlat
ljmp
pop
das
xorb
add
and
out
fimull
xchg
jge
push
rcrl
bound
cmp
inc
sbb
mov
cs
adc
pop
ss
call
adc
jecxz
je
icebp
push
push
xor
enter
das
insl
push
xorb
cmp
jge
nop
ja
lods
inc
adc
jecxz
js
sbb
mov
lea
out
scas
xor
xlat
cmp
data16
lret
jp
push
mov
add
sbb
pop
lods
mov
out
and
cmp
and
les
jl
push
xor
pusha
or
popf
hlt
ljmp
and
xchg
sbb
mov
jo
push
and
outsl
mov
mov
test
mov
fildll
std
loop
xlat
add
and
mov
fldenv
ret
cmp
cmp
jmp
and
xor
or
dec
adc
add
movsb
adc
push
fists
scas
mov
push
ljmp
fucomip
fnclex
dec
test
push
dec
es
jg
mov
dec
push
push
scas
fistpll
jl
xlat
add
xlat
add
fildll
ds
inc
adc
movsl
repnz
jns
mov
loop
adc
add
lea
test
lret
inc
add
mov
loope
mov
rcr
imul
pusha
hlt
jmp
jge
add
mov
leave
fs
popl
ret
push
rcrl
mov
mov
jne
inc
mov
add
xor
popl
add
dec
orb
lods
jmp
outsl
sti
fnstenv
sbb
lea
dec
adc
lcall
repnz
pop
push
mov
fs
lods
lods
cmp
mov
ljmp
push
or
ret
in
sbb
fs
push
ja
inc
adc
push
cltd
jge
add
add
dec
ljmp
push
cmc
fs
sub
mov
test
and
je
or
mov
adc
dec
enter
cmc
pop
adc
mov
bswap
repnz
lods
mov
add
adc
mov
jle
arpl
push
inc
in
add
cmp
inc
or
lods
cmp
outsl
xor
or
sbbl
push
mov
movsl
mov
lods
add
mov
in
jae
lret
jmp
jnp
int
jne
sbb
in
das
inc
lods
adc
mov
je
pusha
add
hlt
and
push
mov
dec
xchg
scas
std
call
lret
sub
mov
loope
fs
js
xchg
mov
mov
in
mov
fstl
mov
inc
lcall
icebp
mov
outsl
mov
in
or
es
lar
sub
movsb
mov
mov
int
popa
mov
insb
jecxz
ret
enter
dec
or
mov
shlb
xchg
lods
nop
popa
scas
enter
mov
jnp
clc
jnp
pop
sub
add
lods
mov
mov
inc
sbb
sbb
stc
mov
and
das
sbb
push
lret
lods
dec
sbb
push
divb
and
mov
jns
adc
push
xchg
test
je
xchg
aaa
std
and
add
xchg
adc
mov
sub
mov
sub
push
lods
fcmovnb
jp
sub
adc
scas
popf
mov
mov
inc
pop
bound
cli
xchg
call
cltd
xlat
popa
jbe
lret
add
lret
nopl
divl
pushf
call
and
cmp
pop
iret
in
xor
or
fisubl
add
and
inc
sub
repnz
js
clc
or
lret
xchg
mov
out
fwait
js
xchg
loopne
push
cmp
sbb
or
push
mov
pushf
arpl
outsl
shlb
ljmp
scas
xor
pop
push
lret
dec
add
mov
xor
push
adc
gs
lods
mov
pop
inc
outsb
dec
or
out
and
andl
scas
sub
in
daa
adc
sbb
js
inc
pop
cmp
int
mov
fistpll
daa
pusha
mov
or
jle
jmp
jno
test
divl
mov
repz
mov
xchg
cmp
cmp
adc
dec
pop
aas
lods
add
jo
shlb
in
bound
inc
fildll
cmpsl
ret
mov
sbb
popf
nop
aaa
ds
ljmp
add
stos
xchg
and
in
push
adc
pop
dec
daa
fs
nop
pushf
test
and
xor
test
out
sbb
stos
mov
movsb
lods
iret
push
xor
sbb
lods
outsl
mov
mov
add
pop
loop
nop
dec
add
repnz
push
add
rclb
cmp
or
push
rclb
dec
in
push
sti
popa
push
shrb
push
int
dec
mov
test
dec
lods
and
push
je
sti
jns
in
mov
ret
test
sub
int
push
sbb
sbb
shll
xorb
jecxz
scas
mov
inc
std
fdivr
mov
inc
sub
sub
lret
sarb
cmpsl
jl
fdivs
inc
mov
or
xor
inc
pop
nop
sbb
mov
ds
fdivs
mov
add
xchg
outsb
or
popf
adc
mov
mov
cmc
mov
jle
jo
out
aaa
loope
inc
mov
add
aad
int
pop
xor
je
and
rorb
adc
mov
lret
jo
cmp
cmc
cmp
jp
cmp
or
xlat
adc
push
cld
shr
lahf
mov
iret
lahf
cmp
sbb
test
or
jge
fs
aas
cmp
test
int3
imul
pop
mov
inc
iret
mov
lds
or
jae
sbb
imul
pop
and
push
fcoml
aad
sbb
inc
pop
in
xchg
icebp
add
xchg
lods
outsb
in
out
pop
pusha
je
js
mov
mov
fstpl
adc
outsb
jbe
loope
dec
in
fstps
aaa
or
cmp
rol
pop
inc
cmpl
scas
xor
pop
bound
rcr
adc
or
movsb
sub
ficomps
sbb
mov
xor
xchg
xor
icebp
cmp
les
stos
daa
or
adc
pop
dec
xor
mov
sbb
mov
pop
mov
dec
sub
push
cmp
les
ja
and
and
mov
ret
sub
mov
bound
inc
inc
xor
cmp
les
pop
mov
sbb
jo
cmpb
into
add
xor
sbb
mov
push
adc
insb
adc
clc
pusha
adc
mov
fcompl
sub
push
jne
les
daa
dec
add
add
insb
shrl
mov
push
mov
sub
xchg
pop
jecxz
call
fildl
sbb
pop
mov
push
das
dec
cmovbe
sarb
imul
adc
hlt
out
lods
out
pop
ds
int3
xor
movsb
rcr
push
ret
stos
jecxz
test
jbe
ja
xchg
mov
inc
cmp
cmp
movsl
clc
inc
mov
test
lahf
dec
cmp
inc
lods
add
push
loopne
ret
dec
lods
mov
shlb
xchg
lods
xchg
add
fs
inc
xor
movsb
sub
enter
popa
inc
cmp
sub
jl
cltd
in
aam
cmp
mov
into
in
or
xor
adc
sub
add
dec
mull
aas
push
mov
test
lods
orb
or
dec
or
lret
adc
jno
outsb
divl
push
shlb
cmp
in
sbb
jl
clc
cli
dec
sub
jp
push
push
scas
push
fs
adc
xchg
xchg
lds
pop
repz
xor
nop
jp
popf
invd
push
aas
cmp
push
adc
in
pushf
mov
imul
dec
xchg
ss
lahf
fadd
push
xchg
js
int
popf
incb
mov
jmp
scas
sbb
jl
cmp
add
xor
rorl
int3
cwtl
shufps
push
hlt
sbb
xchg
sub
sub
push
jo
mov
scas
cld
or
call
movsb
fs
adc
sub
jge
dec
gs
push
addb
sub
mov
cwtl
psubsb
aam
js
or
adc
int
loop
rolb
sub
xor
xor
fnsave
dec
xor
sarb
scas
xlat
loop
addr16
shlb
add
dec
inc
outsl
cmp
mov
add
adc
or
mov
stos
mov
daa
sbb
outsb
inc
push
xchg
jl
cmp
pop
jecxz
or
push
inc
or
idiv
add
int3
scas
add
popl
and
lret
sbb
jnp
xchg
ljmp
popa
push
test
out
enter
je
outsl
jo
or
leave
jge
push
cli
sub
ljmp
mov
leave
jge
adc
mov
daa
cltd
push
jge
push
fsts
jmp
in
jns
xor
jle
lcall
lret
ds
mov
stc
mov
xor
jns
es
jne
xor
movsb
int3
push
mov
sarb
into
xor
cmp
mov
fsubrs
sbb
dec
int3
aam
loope
and
scas
lods
test
cmp
popa
test
rcr
cmp
mov
sti
adc
mov
cwtl
bswap
clc
mov
cltd
jmp
lds
and
cwtl
aam
or
push
mov
js
lret
pop
xchg
add
xchg
xor
sub
jne
aam
mov
movsl
int
dec
or
pusha
xor
hlt
fs
pop
lods
pop
mov
neg
sub
cmp
lods
fcompl
adc
sbb
mov
cmovno
data16
and
or
mov
leave
push
xchg
das
subb
out
leave
scas
shl
mov
fsubs
call
sbb
jne
imul
mov
movnti
imull
out
xchg
mov
push
in
addr16
and
pop
int
push
mov
sbb
scas
ret
xchg
nop
lret
jo
adc
inc
mov
push
pop
adc
shr
lcall
cmpsb
sbb
lret
dec
jns
lods
mulb
les
sbb
mov
mov
or
in
sti
or
push
lret
push
fisubl
xchg
ds
je
imul
push
pusha
xor
push
mov
adc
iret
mov
pop
imul
cmp
xor
dec
xor
cs
push
fstps
pop
ss
dec
lds
pop
stos
xor
dec
sar
into
mov
dec
les
cmp
test
aam
test
push
jl
sbb
mov
shll
cld
add
and
mov
mov
faddl
inc
lea
call
psubd
movsb
inc
jo
int3
jns
frstor
sbb
xor
push
fcompl
jb
sti
cmp
loopne
loopne
sti
cvtps2pi
lcall
xor
call
stos
inc
mov
lret
rorb
jnp
inc
push
and
cmp
xchg
cwtl
int
add
xor
push
jb
adc
adc
add
bound
mov
sub
push
cltd
mov
add
test
xor
inc
adcb
bound
pop
cmp
orb
push
ds
xor
adc
call
mov
add
loopne
hlt
and
inc
repnz
fcmovnbe
xchg
inc
pop
fistpll
daa
into
jecxz
mov
repz
xchg
popf
call
imul
lea
lods
jae
and
pop
ficompl
fsubs
out
xchg
push
les
out
push
fsubs
sbb
iret
jg
sbb
adc
fildl
rolb
rclb
loop
pop
out
sub
pop
adc
sub
prefetchw
andb
negl
out
stos
xchg
scas
jp
sub
sub
cmp
shr
lods
mov
adcl
mov
sbb
clc
xchg
mov
imul
sarb
movsb
aam
and
adc
xor
mov
dec
cmp
imul
sarb
shlb
aam
es
fldenv
ret
adc
pusha
lods
subl
sub
adc
sub
push
into
xchg
xor
sbb
in
stos
push
sbb
sbb
icebp
int3
mov
cmp
or
xor
in
xchg
and
movsb
movsb
sbb
pop
movsl
nop
inc
out
inc
dec
dec
pop
fdivrl
out
adc
pop
sbb
enter
sbb
xchg
push
adc
adc
mov
movsl
into
jbe
mov
and
ret
sti
mov
xchg
jle
popf
jg
add
gs
dec
cwtl
jns
inc
xor
xchg
add
imul
sar
mov
fdivr
mov
add
jae
xchg
and
fdivrl
rcll
movsl
in
ret
jle
jge
mov
shl
repnz
repz
popf
insl
mov
jo
jg
fsubr
stos
jp
mulb
pushf
push
xor
scas
xor
cmp
lret
pushf
or
add
jmp
int3
adc
adc
pop
add
hlt
shrb
loope
mov
movsl
sub
lret
in
stos
aaa
jno
add
enter
movsl
or
arpl
popf
sbb
or
sub
in
mov
xor
insl
imul
lea
ss
imul
xchg
into
in
pushf
jecxz
addb
pop
jg
or
jmp
xor
fadds
xchg
into
loop
adc
call
or
push
adc
addr16
xchg
jb
out
fisubrs
lds
push
jae
jge
push
lret
pop
bound
adc
dec
out
dec
pop
pop
fsubrl
shll
push
aaa
int3
cli
xor
fwait
inc
mov
xor
or
and
je
enter
repnz
mov
ljmp
aam
fidivl
stos
repnz
inc
mov
std
add
mov
jecxz
dec
aam
push
xor
mov
adc
cld
push
jne
xor
jmp
jb
test
adc
das
into
shr
mov
into
mov
or
jl
jge
jnp
dec
fs
outsl
mov
and
sbb
in
ljmp
aaa
mov
mov
outsl
cmp
ja
pop
test
adc
mov
push
imul
pop
pop
lret
stc
fcoms
adc
sub
nop
dec
mov
subb
adc
sbb
fdivl
lock
and
fidivrl
addr16
repz
push
out
mov
out
cld
daa
loope
aas
add
pop
jb
or
sub
pop
addr16
mov
stc
push
test
or
rcr
xchg
jae
fbld
sbb
cld
push
push
xchg
leave
inc
mov
data16
inc
jg
xor
pop
jge
adc
push
testb
push
data16
nop
dec
inc
test
pop
mov
testl
and
xchg
pavgb
jbe
lea
push
shlb
ss
call
xchg
xor
bound
xchg
popf
clc
in
fs
push
xor
mov
aad
pop
sbb
jl
ss
aas
jge
adc
push
xchg
push
popf
test
int
mov
xchg
dec
fdivrl
mov
push
iret
movsb
pop
popf
cmp
cmp
call
xchg
cli
mov
dec
mov
test
adc
xlat
mov
inc
mov
xorl
sbb
shl
jg
xor
or
icebp
sbb
andl
fwait
xor
xchg
mov
imul
adc
xchg
push
movsb
xor
xchg
outsb
push
jge
adc
push
push
in
push
fdivl
pop
rorl
sub
xchg
inc
cs
jp
xchg
mov
xor
add
outsl
nop
inc
push
lods
ficoms
xorb
into
addr16
and
adc
adc
ljmp
mov
xchg
in
dec
inc
pop
popf
rol
mov
sub
xchg
rorl
or
popf
scas
xchg
pop
aad
dec
stc
add
test
decb
cmp
cmp
dec
mov
imul
test
pop
or
int
xor
bound
mov
stc
sbb
mov
rcrb
imull
fldenv
and
xor
cmpl
jg
sbb
and
or
cwtl
repnz
mov
arpl
and
test
mov
or
decl
sub
sub
mov
je
sub
jo
testl
mov
mov
pusha
cmpsl
ja
pop
sub
out
fstpl
pop
rorb
jp
cmpsb
dec
sbb
mov
cmpsl
pop
addr16
sub
jg
push
or
sbb
inc
jb
xor
shlb
outsb
mov
mov
pusha
call
sub
or
test
sbb
enter
sarb
sbb
adc
jo
jb
pop
ret
add
xchg
cmp
stc
xor
inc
sbb
dec
push
jae
movsb
cmp
sub
cmp
cmpsl
dec
mov
nop
lea
leave
dec
xchg
pop
aad
aas
addr16
xor
inc
xor
cld
repz
shrb
loop
sub
rcr
popf
nop
push
or
aam
push
inc
and
int3
cmp
pop
movsb
movsb
or
cmpsl
iret
xchg
mov
xor
and
les
mov
test
dec
jp
or
xor
mov
imul
sub
out
enter
lods
loopne
jno
movsl
pusha
int
fdivrl
add
sbb
push
int3
in
dec
jo
pop
mov
stc
push
or
xor
fdivr
mov
add
mov
sti
fisubl
inc
jo
cmp
mov
add
dec
je
inc
cwtl
xor
xchg
cld
xor
adc
gs
pop
int
jl
or
fwait
js
bound
lahf
dec
out
movsb
js
adc
xchg
sub
stc
sub
cmp
arpl
pop
inc
cld
add
ds
or
pop
vmread
mov
push
lods
clc
sbb
mov
dec
in
movsl
cmpb
and
sbb
shrb
les
popf
je
dec
ss
dec
inc
xor
data16
jp
sub
add
cwtl
ss
push
rcll
adc
cmp
into
into
or
push
rolb
jnp
sbb
xchg
lods
repnz
pop
xchg
mov
xor
shlb
stos
movsb
dec
into
test
jl
rorb
sbb
test
cmp
add
sub
mov
faddl
or
add
push
mov
xchg
sti
icebp
xor
push
fcoms
add
aas
das
push
pop
movsb
push
sbb
fisubs
pusha
and
ror
push
js
and
cmp
or
mov
mov
jno
jnp
add
push
inc
push
jp
sbb
xor
out
cld
push
or
stos
and
jl
dec
pop
movsb
mov
cmp
loope
jo
adc
jno
sbb
lcall
push
pop
pusha
popa
sbb
pop
dec
call
and
aad
cli
add
popa
cld
js
jl
icebp
jo
xlat
outsl
mov
outsb
sti
ja
lods
out
sub
jl
dec
adc
fwait
dec
cld
adc
cmp
pop
fsts
sarb
pop
dec
stos
addr16
test
pop
mov
in
testl
dec
std
sbb
jo
rorb
adc
dec
mov
lahf
outsl
movsl
imulb
mov
mov
pop
or
loopne
add
aad
push
xchg
je
dec
adc
xor
fcmovnu
pop
xor
push
int
sbb
xchg
jb
lods
iret
mov
adc
dec
data16
push
faddl
ljmp
sub
xor
mov
sbb
and
push
outsb
add
xchg
and
mov
and
in
fcompl
movsb
arpl
lea
or
pop
iret
mov
pusha
jne
pop
dec
jbe
fwait
stos
aaa
cmp
sti
addb
or
cmpsl
loopne
out
jl
inc
push
mov
jo
sub
mov
icebp
imul
mov
add
sub
jbe
pusha
cmp
dec
pop
test
cmpsl
add
or
lcall
jnp
sbb
arpl
sub
pop
mov
dec
add
out
adc
dec
rolb
sbbb
std
aam
adcb
dec
jecxz
push
in
movsb
mov
imul
sbb
inc
sbb
adc
xor
jns
shrl
js
inc
jp
cmp
stos
data16
fdiv
jle
xchg
out
fs
dec
into
sub
incb
sti
fcoml
xor
je
shlb
mov
sbb
das
mov
nop
or
cltd
nop
adc
insl
inc
in
mov
jle
dec
loopne
nop
jnp
and
mov
popf
and
push
js
imul
iret
inc
and
xor
adc
sbb
mov
into
adc
jecxz
sub
dec
into
push
jae
into
push
movsb
pushf
push
mov
aam
dec
mov
jo
pop
cmp
jg
adc
ss
testb
cld
int3
in
cmp
jp
fdivr
rclb
jnp
aas
sbb
add
or
out
cmp
loope
mov
fwait
jns
and
dec
dec
sbb
sbb
into
and
cmp
cld
adc
dec
out
lods
pop
add
sbb
xor
test
repz
sbb
ret
jbe
adc
jo
pusha
add
loopne
xor
xor
imul
push
xorl
add
cmp
pop
adc
mov
jp
add
test
sbb
movsl
add
jb
add
sbb
cmc
adc
sti
cmp
and
imul
movsb
stos
mov
and
not
out
faddl
mov
dec
pop
stc
movsb
mov
mov
repnz
and
jns
adc
cwtl
adc
or
push
js
cmpsb
leave
mov
je
mov
add
les
inc
pop
in
imul
nop
cltd
push
pop
jge
or
cwtl
xchg
dec
hlt
cmp
addl
sbb
push
dec
addl
sub
or
and
aad
ja
dec
sub
dec
test
pcmpeqb
sbb
mov
sub
mov
or
or
jp
stc
sbb
call
jns
arpl
inc
cmp
push
dec
es
jg
cld
jb
or
in
int
enter
cli
add
std
imul
lods
jp
js
push
lahf
rolb
mov
xor
inc
out
ret
push
sub
fisttpl
jp
shll
imul
xchg
movsl
or
stc
frstor
outsl
fmul
xor
fstl
pop
jle
adc
ret
mov
push
jb
js
outsl
jmp
mov
mov
xor
enter
or
adc
test
inc
push
jo
movsb
xchg
adc
js
and
out
inc
test
pop
sti
mov
adc
cmc
or
sbb
test
fidivrl
mov
add
cltd
leave
jle
xor
dec
add
mov
fbld
adc
ret
rolb
sbb
test
addr16
movsl
fcoml
rclb
popf
je
in
leave
icebp
add
jp
jl
pop
xlat
jnp
mov
movsb
dec
in
and
cmp
cmp
enter
das
adc
or
test
pop
les
call
test
inc
jnp
pusha
cmp
fdivl
and
leave
push
push
scas
outsl
subl
hlt
arpl
fbld
popf
push
repnz
push
popa
adc
dec
push
mov
js
xor
les
xor
dec
jae
xor
and
shrb
stos
mov
jo
icebp
xor
lods
or
inc
adc
sbb
mov
fsubl
or
sbb
cmpsl
leave
lock
add
sbb
pop
cmp
or
cmpsb
dec
pusha
jmp
inc
xor
addr16
rolb
lret
mov
push
popf
js
cmp
pop
jecxz
jp
cmp
nop
iret
ret
popa
inc
push
jb
sarb
xchg
or
cmp
xor
xchg
dec
adc
je
or
add
inc
cli
cs
xchg
into
jo
in
insl
ret
or
inc
in
xor
xor
stc
sbb
lcall
enter
fmull
je
and
fimull
loope
outsl
dec
pop
pop
addb
lods
dec
fsubrs
xchg
inc
loopne
push
fsubl
and
enter
lds
mov
in
gs
xorb
mov
shl
nop
aas
jnp
test
dec
jno
jl
mov
into
xorb
sahf
mov
xchg
cmp
pop
xor
and
cmp
jb
push
jne
call
lret
idivb
inc
enter
or
rorl
cmc
cld
movsb
es
cli
fidivrl
out
jo
cmp
js
xor
js
xor
sbb
je
inc
out
jnp
or
push
add
sbb
push
in
repnz
cmp
xchg
add
xchg
and
xor
es
push
ja
push
xor
pop
or
test
lods
push
and
add
push
mov
in
cmpl
cmpsb
pop
xor
lcall
in
sbb
lret
notb
into
xor
scas
pop
or
les
popf
sbb
scas
repnz
sub
adc
leave
mov
movsl
lcall
fwait
pop
test
js
push
in
pop
inc
stc
fsubrl
sub
out
outsb
repnz
sub
add
std
loopne
icebp
jno
pusha
xor
xchg
clc
push
out
push
or
test
mov
jnp
add
and
push
mov
push
jo
jb
push
ret
movsb
nop
jmp
fisttps
pop
cmc
dec
loopne
addr16
jo
xchg
push
add
jp
adc
add
scas
mov
je
cmc
pushf
divl
in
call
addb
adc
cmp
jmp
jo
adc
dec
push
in
das
push
xor
sbb
or
mov
sub
testb
push
pcmpeqb
test
add
mov
mov
std
and
jge
scas
sbb
into
idiv
stos
mov
inc
in
pop
sub
push
adcb
sbb
aas
pop
dec
xchg
mov
cmp
addb
mov
mov
jl
lahf
xor
testl
into
js
cmp
cmp
jbe
aas
push
add
push
inc
jns
js
and
pop
push
jl
sub
int3
pusha
jb
inc
pop
inc
adc
sbb
aaa
push
xor
jl
out
addr16
sub
insl
lcall
pusha
clc
repz
sub
sbb
pop
lods
xchg
cwtl
xchg
or
into
js
test
imul
or
out
add
out
sbb
sub
add
sub
pushf
sti
cmpb
push
or
dec
shl
pop
adc
jge
adc
aam
lods
pop
ja
adc
les
dec
out
dec
xchg
dec
adc
inc
cmp
dec
loope
iret
inc
pop
lock
xor
and
sub
mov
in
mov
shrb
dec
sub
and
arpl
imul
xor
xchg
mov
jl
jno
arpl
xor
adcb
rorl
int3
loop
maxps
insl
mov
pcmpgtd
into
jl
stos
xor
les
and
ja
sbb
scas
ret
jge
mov
cmp
call
sub
scas
in
sbb
inc
lret
mov
sub
ret
jae
insl
mov
into
xchg
adc
pusha
sub
fstl
jbe
pop
sbb
inc
xchg
dec
jns
or
hlt
lods
lock
cvtpi2ps
push
dec
jl
xor
xchg
xor
lea
adc
aad
mov
adc
cld
pop
mov
cmp
fwait
xchg
loopne
das
outsl
adc
in
call
cltd
aas
in
add
or
ja
mov
inc
cli
daa
adc
push
aaa
lret
dec
call
insl
in
repz
adc
lea
jecxz
outsb
movsl
cmp
inc
inc
int3
scas
push
sub
push
add
cli
ret
inc
adc
pop
adc
jns
fwait
push
jecxz
pop
cli
dec
ss
pop
or
jmp
xor
or
xor
into
loope
lcall
sub
or
cmp
push
mov
fldcw
fsubs
xchg
and
push
mov
int
mov
je
inc
and
xor
aam
mov
jbe
daa
jle
test
dec
fildll
mov
fidivs
shrl
test
aas
cli
aas
cmp
lods
pop
rolb
adc
add
into
adc
push
xor
dec
sub
adc
or
cmp
and
popa
sub
dec
lods
xor
adc
and
mov
push
cli
fisttpll
hlt
and
jecxz
push
cs
push
cld
mov
inc
movsb
mov
mov
or
and
mov
adc
mov
aam
or
cltd
xchg
sbb
stos
jae
cs
sub
mov
int3
push
xor
xlat
aad
inc
scas
mov
jno
adc
mov
lods
jns
sahf
lods
adc
mov
cmp
push
jo
xor
adc
xchg
das
dec
sbb
dec
lods
pop
sbb
loope
adc
adc
and
mov
adc
imul
icebp
scas
fists
jg
fbstp
mov
out
pop
add
addr16
rcl
push
scas
cmp
mov
mov
inc
mov
sbb
mov
jno
jb
shlb
lods
cmc
mov
scas
roll
popa
lods
outsb
mov
stc
fdivrl
cmp
rorb
add
pop
sqrtps
lret
sub
mov
push
push
lods
adc
and
dec
dec
test
inc
lods
cmp
xor
jns
or
lahf
mov
mov
push
mov
cmp
insl
cmpsb
loop
mov
loopne
insb
int3
movb
pop
outsl
shrb
or
out
jl
lods
xor
les
jo
stc
jae,pt
pusha
push
xor
nop
lods
push
xlat
or
jl
iret
or
sahf
mov
repnz
adc
adc
xchg
or
outsl
daa
lea
lahf
clc
int3
ds
idiv
ror
lahf
fistl
adc
sub
dec
lods
or
dec
mov
shlb
mov
rcrb
lods
cltd
push
ret
iret
mov
aas
pusha
loope
cld
adc
mov
xchg
dec
cmpsb
mov
mov
xchg
cmp
les
lret
faddp
fisubl
or
lods
mov
mov
sahf
aam
stc
cmc
mov
add
mov
or
push
adc
movsb
dec
test
fcompl
into
xor
adcb
mov
dec
dec
loopne
push
aaa
rorb
cmp
cmp
inc
ss
mov
dec
add
int3
rolb
sub
mov
clc
jns
sbbb
aam
xchg
fsubl
add
inc
xchg
adc
jae
lods
ja
mov
inc
adc
sti
add
clc
dec
dec
mov
sbb
outsb
adc
lods
rcr
fistps
pop
sub
mov
or
dec
sub
mov
add
mov
aad
adc
loopne
int
xchg
or
sbb
mov
stos
loopne
dec
push
mov
stc
mov
fcompl
sti
sbb
xchg
into
dec
insl
cli
sub
in
sbb
pop
mov
sub
and
mov
sbb
movsb
popa
hlt
push
sarb
sbb
sbb
dec
inc
inc
push
aad
int3
xchg
in
xchg
xchg
subb
dec
ja
add
loopne
jb
mov
push
pop
imul
xlat
stos
ret
cmp
loope
jnp
or
fists
in
test
adc
sarl
loop
dec
bound
push
lret
sub
loope
leave
ljmp
xor
jg
fsubr
adc
jle
mov
ds
pop
jp
pop
loopne
xchg
sub
pop
fiadds
lcall
sub
sbb
shrb
loop
mov
orb
adc
scas
pop
rorl
mov
dec
ret
adc
xchg
shlb
std
sub
mov
das
and
loopne
fstl
in
aam
lret
mov
and
pop
sub
pop
roll
cwtl
lods
adc
mov
xchg
sbb
push
leave
cmp
push
data16
scas
sbb
sub
pop
divb
jmp
shll
and
loop
adc
adc
repz
sub
dec
outsb
addl
inc
aam
ret
xor
lcall
cmp
add
mov
mov
ret
xchg
xor
or
push
jae
mov
add
sub
push
test
lds
dec
xor
or
xor
mov
lcall
lods
and
in
test
push
push
ret
popf
dec
sbb
inc
sbb
inc
sahf
testb
ret
fisttps
inc
add
mov
ljmp
adc
cmc
lods
xchg
fidivl
push
sub
or
fiaddl
push
xchg
or
and
adc
iret
jmp
sbb
pop
xchg
js
xchg
pushf
rorb
mov
daa
adc
or
subb
bound
nop
fdiv
mov
xor
orb
insb
roll
mov
movsl
sbb
pop
lahf
sbb
movsl
outsl
int3
decb
test
push
and
outsl
mov
jle
out
loop
addr16
cmp
inc
mov
js
inc
xor
cmp
and
cli
cmp
in
popa
jl
insl
jae
scas
fdivl
jecxz
je
pop
dec
dec
andl
pop
inc
lcall
and
xchg
fwait
movsb
gs
xchg
mov
sub
sbb
jecxz
rcl
xor
mov
or
out
lret
and
jg
pop
and
cmp
cmp
fnsave
jg
int
mov
cli
jnp
sub
jg
es
jp
fsub
cs
dec
mov
jmp
pop
add
adc
pop
dec
xor
dec
addr16
and
hlt
lods
insb
sub
or
popf
out
mov
scas
sub
inc
mov
movsb
insb
cmp
cmp
lcall
cs
pop
icebp
pop
ror
jg
sbbb
movb
shrb
inc
jnp
aas
xor
and
dec
mov
test
mov
mov
addb
mov
test
xor
pop
les
lods
dec
sub
push
lods
addb
shrl
scas
sbb
sub
cwtl
mov
and
sbb
jmp
mov
iret
and
das
push
and
push
test
and
pop
lods
arpl
mov
idivl
daa
ret
sbb
mov
dec
lcall
jecxz
and
mov
xor
mov
dec
es
das
sub
nop
jecxz
push
mov
push
adc
aam
mov
cwtl
and
adc
xchg
mov
pusha
fsubrs
pop
xor
data16
push
mov
xlat
mov
outsb
cld
xor
mov
lahf
mov
fistpll
fmulp
jge
cmp
mov
jo
orb
jecxz
fbstp
or
cs
rcr
jg,pn
mov
scas
movb
sbb
adc
shlb
xor
dec
ljmp
mov
shrl
insl
shlb
lds
mov
call
cld
insb
in
imul
dec
cs
jo
cwtl
loopne
xor
add
out
test
pop
fldt
test
jnp
add
int3
pop
push
sahf
sub
pop
divb
insl
pushf
pop
pop
mov
mov
out
xchg
nop
in
push
add
repz
xor
push
enter
pop
leave
xlat
add
mov
inc
or
addr16
xor
xchg
jns
adcl
scas
xchg
push
xchg
pop
outsl
pop
lock
push
fwait
std
jb
pop
adc
cmp
and
out
insl
jae
jl,pt
adc
stc
and
int
test
adc
loopne
lock
icebp
jg
cmpsb
add
pop
mov
dec
call
insb
pop
dec
mov
mov
fisubs
pop
mov
dec
jnp
sub
inc
mov
mov
add
into
fbld
add
pushf
add
insl
mov
fistl
iret
jb
add
rcrb
add
jg
aad
sti
imul
fcoms
and
js
movsb
and
xchg
lahf
std
call
cmp
mov
and
shrb
and
scas
subl
ret
pop
add
pop
pop
loop
mov
iret
dec
sbb
mov
outsl
add
rolb
data16
sbb
xchg
popa
inc
rcll
sbbl
mov
cmpsl
push
or
xchg
mov
jns
loopne
cmp
push
jbe
in
fmull
dec
add
push
int3
xchg
push
pop
arpl
sbb
cmpb
popl
pushf
mov
dec
test
sub
add
stos
pop
pusha
add
rcr
add
test
iret
dec
cld
sub
or
push
stos
stos
and
mov
cmp
add
and
mov
fs
jle
dec
jb
adc
push
inc
mov
pop
sub
or
test
fdivrs
test
ja
sub
imul
rclb
sub
shlb
popf
std
cmp
gs
aam
orb
movsl
mov
arpl
addb
mov
add
dec
mov
push
add
fsubs
cmc
cmpsl
mov
repnz
imul
cmp
mov
xchg
fcomps
daa
pushf
mov
pop
push
fs
scas
xor
mov
lods
ja
test
adc
pop
out
imul
xchg
jge
shrl
popa
add
dec
ret
push
jne
push
cmpsl
jae
test
cmp
xor
sub
movsl
sbb
cmpsl
sub
sub
frstor
mov
int3
cmpsb
dec
aaa
cmpsl
adc
nop
xchg
es
arpl
sbb
xor
pop
jns
into
popa
push
lds
inc
into
add
mov
insl
pop
outsb
sarl
mov
or
fsts
hlt
sbb
and
push
cltd
or
call
xchg
dec
icebp
and
sbb
push
nop
pop
add
fimuls
mov
mov
or
sub
out
fs
jmp
xor
out
ja
and
insl
mov
inc
sahf
and
sub
in
xchg
mov
push
jo
add
insl
mov
mov
push
adc
cmp
sub
cltd
push
pushf
pop
or
out
add
enter
xchg
int3
nop
dec
xor
inc
add
sbb
dec
dec
gs
sbb
add
dec
or
push
xchg
add
test
fs
lret
mov
dec
testb
jne
mov
sub
xor
inc
xchg
jmp
sub
and
aas
jge
add
cwtl
test
dec
mov
add
mov
sbb
add
dec
cs
mov
add
out
push
push
and
aad
cmp
ret
pop
cmc
addr16
aam
pop
add
pop
push
out
testb
shl
jecxz
icebp
outsl
aad
sub
or
dec
test
cmpsl
cmpsb
or
gs
dec
sub
push
mov
mov
cmp
push
mov
and
je
dec
jle
jno
inc
clc
das
mov
sysenter
dec
jp
out
dec
push
add
pop
xor
xchg
enter
cmp
mov
push
and
adc
adc
jmp
repz
out
pop
push
ficompl
add
add
rcrl
jge
loop
std
and
xor
add
les
fwait
push
xchg
lods
add
aaa
push
pop
sti
daa
iret
fldlg2
mov
outsl
dec
push
dec
iret
jo
push
shl
repnz
je
push
and
inc
jne
push
and
mov
jmp
push
in
pop
push
imul
add
in
call
adc
clc
sub
ljmp
call
mov
add
fdivrs
in
or
pusha
sub
xchg
sbb
mov
push
push
cwtl
push
test
jae
sub
jno
xchg
mov
int
mov
in
out
mov
movl
aad
pop
or
mov
xor
insl
inc
sub
xor
icebp
clc
add
ret
stos
fwait
out
cmp
mov
dec
push
negl
ss
push
out
loope
ljmp
cld
movsb
rorb
or
popf
push
add
dec
pop
add
call
push
dec
jb
outsb
insb
add
pushf
jle
arpl
cmpsl
and
xchg
push
fsubp
jg
push
mov
pop
mov
loopne
lock
gs
jg
push
out
inc
aaa
jmp
dec
scas
inc
mov
inc
xor
cmp
push
inc
push
cmpsb
push
pop
enter
out
add
insl
xchg
push
and
pop
add
xchg
pop
mov
mov
ficompl
xlat
jge
jb
inc
jmp
xchg
cmpsl
add
aaa
movsb
cmp
loopne
cli
lock
add
data16
mov
push
pushf
out
cmp
es
sbb
insb
push
push
push
sub
mov
mov
push
sti
mov
xor
es
rolb
iret
rcr
sbb
iret
xchg
mov
psrlq
icebp
mov
mov
fbstp
cmp
repz
in
inc
imul
loopne
movaps
clc
mov
mov
adc
scas
repz
repnz
jb
jg
insl
icebp
repnz
and
popf
xchg
and
aam
xor
mov
or
xor
and
ds
bound
rorl
jp
shll
add
shlb
movl
xor
loopne
mov
out
ds
fildl
or
and
test
cs
fdiv
and
clc
lods
js
les
loopne
insl
push
jne
xchg
add
adc
dec
sahf
inc
dec
mov
mov
pop
adc
lds
and
int3
mov
mov
scas
shl
sbb
ss
aas
push
push
lahf
ds
icebp
and
cltd
bound
mov
aaa
mov
pop
push
adc
mov
mov
outsl
add
mov
out
mov
cmp
pop
sarl
sbb
push
sbb
add
test
push
add
mov
idivb
pop
int3
inc
dec
out
cmp
add
mov
mov
cmp
pusha
dec
sub
cmc
sarb
xchg
bnd
xchg
mov
xchg
sub
lret
adc
out
in
add
jo
adc
loope
jge
add
popf
push
cltd
add
push
jbe
sbb
add
jge
ja
jno
mov
cld
add
test
movsb
xor
pop
pusha
repz
fmul
or
lds
xchg
add
mov
dec
mov
or
pushf
hlt
call
leave
add
add
pop
add
add
lock
addb
int
push
jae
jg
jecxz
insb
lock
js
xor
aam
jbe
jb
in
push
jmp
sti
gs
incb
sbbl
addl
cli
fldt
inc
xor
add
cmpsl
loope
add
insl
loop
sub
mov
cmp
dec
jnp
jp
pop
repnz
add
sub
xchg
add
outsl
dec
pop
xlat
add
dec
imul
push
pop
fcoml
inc
test
jl
sub
push
icebp
in
iret
lret
sti
iret
jecxz
fwait
clc
mov
test
sbb
inc
int3
lock
jnp
sbb
call
loopne
mov
stos
mov
adc
adc
test
sbb
jecxz
call
cmp
lahf
xchg
add
mov
push
xor
push
push
and
lahf
data16
adc
sbb
inc
int
cmc
xchg
add
mov
icebp
xor
pop
imul
cmp
mov
lds
sbb
add
fcompl
cli
add
jnp
arpl
and
inc
jb
xchg
clc
xor
add
inc
xchg
shll
dec
fnsave
inc
adc
inc
add
mov
rcrl
mov
aas
rcrl
inc
and
jecxz
cld
sub
xchg
add
mov
inc
xchg
or
ss
pop
push
cld
push
mov
xchg
stos
lea
and
add
les
mov
mov
mov
js
adc
stos
mov
cmc
add
sbb
pop
jle
movsb
and
call
sbb
sub
negl
outsb
paddq
pop
pusha
add
dec
roll
lods
sbb
xor
inc
sahf
sub
cmp
lds
mov
faddl
add
cmp
pop
push
xchg
adc
icebp
popa
dec
jl
pushf
stc
lea
mov
push
xchg
adc
outsb
add
xor
lds
repz
pushf
or
add
push
lds
idivb
lret
and
add
out
pop
jno
aaa
mov
xchg
push
xchg
jo
sub
inc
push
rolb
scas
pop
sbb
test
stos
out
cmp
pop
pop
sbb
in
dec
mov
xor
push
mov
addr16
ljmp
add
mov
fsubr
lods
xchg
add
not
fstp
insl
pop
jb
aas
fcmove
adc
jnp
fldt
loope
sbb
les
fistps
sbb
pop
push
clc
add
lahf
loop
add
sub
xorl
gs
xor
mov
jns
iret
cmp
fiadds
add
cmc
push
outsl
dec
aam
dec
lods
mov
lahf
lret
xchg
sbb
mov
test
mov
sbb
jp
pusha
add
popa
dec
fadds
adc
mov
data16
int3
adc
adc
dec
jnp
fsubrl
lea
in
jp
mov
dec
fstl
data16
stos
xchg
or
mov
add
xchg
pop
mov
mov
xchg
adc
cwtl
pop
add
sub
pushw
pop
dec
enter
push
jmp
stc
add
cmp
add
cmc
gs
stos
cmp
push
adc
sub
enter
shll
add
cwtl
mov
pusha
add
std
or
jge
adc
pushf
or
pop
rcll
push
fsubrs
add
outsb
pop
or
add
or
add
jns
lods
add
mov
xchg
loope
or
cmpsb
cmp
push
aas
xor
sub
cwtl
jno
fs
cmp
outsl
xlat
cmc
lret
mov
add
add
xchg
scas
and
negb
push
sbb
das
add
cmp
jbe
das
aam
add
dec
jp
rorb
sbb
cmpb
orl
mov
arpl
rcrb
aad
inc
cmpsb
lcall
cmpb
pop
push
push
pushf
sub
mov
inc
jmp
jp
rcrl
add
sti
jbe
push
fbstp
pop
aas
mov
clc
sbb
xchg
test
mov
call
xchg
nop
sub
scas
jp
push
jae
sub
fcompl
inc
loopne
sub
outsb
add
sarb
jle
into
jge
das
call
push
mov
gs
rcrb
out
mov
stc
and
sub
or
das
mov
pusha
xor
gs
mov
push
adc
xchg
xchg
lret
shrb
mov
adc
cld
inc
dec
das
pushf
bound
imul
fadds
gs
insl
xor
mov
sub
add
mov
add
cmpb
add
xor
adc
xor
mov
decl
sysenter
clc
add
add
or
or
mov
or
ret
push
scas
add
jnp
inc
fcomp
call
pusha
sbb
out
xor
out
mov
mov
push
and
add
cmp
lock
lret
push
aaa
pop
ret
jnp
add
call
jle
mov
pop
jns
adc
aaa
push
xchg
inc
mov
cli
sub
lea
into
add
pusha
push
pop
outsl
jno
int
mov
inc
mov
xor
insb
lahf
dec
clc
dec
ret
xchg
inc
mov
or
adc
idivl
mov
mov
cmpsl
enter
jl
cmp
mov
scas
scas
test
lea
popa
jb
push
push
cmpsb
test
ss
push
add
outsl
sub
push
mov
or
pop
mov
xchg
mov
loop
cmp
sahf
aad
cvtps2pi
cli
xor
stos
negl
or
add
push
mov
or
ds
pop
sub
nop
iret
cwtl
mov
mov
cmp
fisttpll
les
insb
and
jae
adc
pop
cmp
mov
lahf
cmpsl
push
adc
and
xchg
daa
adc
fdivl
sbb
mov
rcll
stos
and
hlt
lock
sti
cmpsl
mov
and
sbb
jmp
mov
add
enter
sbb
or
inc
sbb
inc
pushf
push
insl
xchg
and
popa
or
add
loopne
mov
mov
add
test
mov
pop
push
packuswb
les
add
in
call
dec
add
jo
aam
lock
xchg
stos
jae
pop
in
pop
push
fs
leave
sub
jbe
mov
xor
test
add
arpl
and
dec
ljmp
sub
sub
add
sarb
dec
daa
sbb
decb
sbb
addr16
xchg
roll
clc
mov
adc
rcl
and
ljmp
adc
fwait
push
push
inc
xchg
xchg
mov
test
push
add
cmpsl
mov
add
or
pop
cwtl
nop
add
popf
cs
and
ja
out
push
andb
rcrl
fidivl
mov
movsl
push
add
pop
mov
dec
js
add
add
stos
sub
outsb
jle
add
out
xchg
mov
movsb
inc
add
fcoms
push
arpl
loopne
add
dec
clc
xor
fimull
pop
push
icebp
add
mov
cmp
jp
sbb
ja
dec
adc
repnz
adc
rol
mov
push
movsl
lahf
cmp
sbb
inc
clc
fiaddl
mov
mov
btr
and
addr16
lods
jl
mov
cmp
clc
add
xchg
xchg
fdivs
mov
lret
mov
xor
jecxz
inc
jae
jle
cmpsl
mov
iret
out
fisttps
pop
mov
mov
orb
mov
add
fs
sub
adc
dec
cmpb
lock
mov
cli
fmuls
dec
bound
sub
mov
dec
dec
ljmp
or
cld
lods
loopne
fcomps
and
xorb
setbe
push
pushf
sbb
lcall
sahf
push
stos
pusha
or
sbb
add
jae
jnp
enter
test
mov
push
adc
pop
dec
lret
cwtl
inc
faddl
data16
adc
dec
and
cmp
test
xor
dec
popa
cmp
arpl
mov
icebp
mov
fwait
loop
xor
rcl
inc
mov
lret
ljmp
adc
je
outsb
xchg
out
flds
addr16
sarl
clc
push
xor
jmp
addl
sarl
sti
das
sbb
inc
mov
sbb
inc
mov
sbb
jp
insl
jb
pusha
insb
add
push
pop
addr16
in
and
cmpsl
add
dec
jne
imul
aaa
xchg
add
bound
or
push
adc
cmp
push
add
cmpsb
adc
repnz
addr16
add
jne
or
cwtl
mov
sub
push
push
xor
jae
lahf
cmp
in
mov
int3
push
push
je
adc
sbb
sbb
inc
mov
dec
add
out
or
dec
sahf
movsl
mov
add
jo
inc
mov
aaa
sub
pop
test
icebp
loop
lods
ljmp
push
add
push
and
mov
aas
outsl
lods
and
or
call
mov
std
sub
inc
xor
or
sub
jne
movsb
mov
fstpt
sbb
add
gs
es
jb
sbb
loope
or
mov
add
test
jp
fistpl
add
je
fs
add
daa
repz
pushf
add
dec
imul
push
cwtl
outsl
ficoms
lcall
xchg
add
sub
xlat
pop
push
ss
cltd
mov
and
adc
xchg
add
or
mov
add
fnstsw
faddl
hlt
sbb
enter
lock
push
mov
stc
into
inc
test
inc
mov
adc
push
mov
or
mov
push
add
cmp
and
mov
push
pop
ss
add
mov
leave
adc
or
leave
sbb
jle
int3
in
sub
imul
mov
lods
jmp
jp
adc
ret
insb
pop
enter
ret
sub
in
movsl
into
jp
or
faddl
popf
adc
jne
jo
adc
arpl
add
fisubrl
outsl
subb
adc
mov
loopne
sbb
fiaddl
pop
push
outsb
out
adc
sub
sub
jns
insl
add
and
inc
mov
and
add
call
sub
mov
int
shll
jmp
push
lahf
enter
pop
incb
aad
popf
mov
add
sub
jnp
jmp
add
ljmp
lods
sarl
adc
add
or
and
cmp
aas
adc
hlt
loop
mov
orl
sarl
sub
cmovl
repnz
add
push
mov
xchg
mov
xor
int3
enter
add
ret
stc
fiadds
add
push
push
jns
ljmp
dec
add
push
or
mov
icebp
xchg
out
sub
fcoms
loopne
mov
testl
cli
loope
int3
inc
xor
rcll
popl
shlb
mov
pop
add
mov
cmp
cs
mov
mov
fisubrs
push
inc
mov
aam
jbe
adcl
add
mov
mov
push
repnz
out
xor
pusha
dec
mov
dec
aad
pop
subl
sub
stos
rclb
pop
lret
ret
xor
add
push
jb
add
test
sbb
loope
bnd
mov
pop
cmp
aad
sub
iret
dec
nop
add
ret
or
cmp
and
outsl
push
insb
sbb
xor
fidivrl
pop
daa
pop
enter
cmp
movsl
push
xchg
lds
push
push
adc
pinsrw
dec
adc
push
enter
xchg
out
cmpsl
pop
add
jmp
jne
push
sub
div
cmp
scas
inc
fnstcw
add
pop
push
push
fwait
repz
lret
hlt
rolb
sarl
icebp
cwtl
add
data16
into
rcrb
dec
sub
mov
rolb
pop
add
nop
aam
xchg
cld
pusha
jmp
push
lds
pop
mov
sahf
out
sub
fmuls
iret
lock
test
daa
sbb
stos
lea
add
cmp
or
movsb
adc
adc
lock
xor
push
add
out
jmp
push
mov
pop
jo
outsb
add
pop
xlat
jmp
sbb
add
push
mov
sub
lahf
bound
mov
sub
fcoml
out
mov
ret
mov
push
add
lea
cld
inc
pop
out
fmuls
pop
mov
rorb
arpl
sbb
repnz
fidivrl
dec
mov
jns
xchg
xchg
js
test
or
jl
out
pop
jbe
insl
fucomip
lcall
xchg
push
sbb
add
js
and
fwait
cmp
add
sub
aaa
test
les
push
in
in
add
sbb
ss
fcomps
mov
lods
adc
inc
cmp
dec
pop
xor
xchg
and
sbb
dec
fcomi
cmpsl
or
xchg
adc
jmp
mov
sub
call
loope
inc
add
movsb
ret
mov
test
out
mov
sub
cmpsl
add
fsubrs
cs
push
jnp
ret
scas
add
pop
sub
imul
jnp
lock
ret
xorb
cs
lds
les
dec
inc
add
sbb
sbb
pause
loope
sub
push
add
inc
push
into
jns
popf
in
adc
and
ja
scas
enter
filds
sbb
repz
add
aad
sbb
pop
sarb
adc
jmp
mov
gs
sbb
movsl
cltd
cmp
sub
test
xchg
xor
inc
or
jle
das
ja
cmp
mov
movsb
mov
pop
rcrl
dec
push
and
adc
test
mov
jg
or
mov
popa
push
xchg
mov
jmp
adc
and
sbb
das
outsl
negl
add
test
xchg
lock
fs
inc
jmp
add
imul
dec
cltd
movsl
fcoms
and
cwtl
pop
jnp
xor
jne
cmp
push
sbb
bnd
pusha
pop
lea
sub
inc
or
aaa
ficomps
outsb
adc
mov
out
add
push
sti
xchg
inc
scas
ja
pop
cmp
sub
dec
and
adc
jae
ljmp
pop
mov
push
push
cmpsl
divl
pop
jb
clc
mov
stos
subb
scas
ja
adc
sbb
lea
add
mov
mov
mov
mov
fsub
push
shlb
mov
loopne
out
pop
jp
push
jmp
xor
mov
cmpsb
insb
jnp
or
sbb
pushf
add
test
lods
inc
push
add
cmpsl
shlb
add
cmc
xor
lock
cltd
jecxz
mov
cmp
maxps
int3
xor
je
subb
inc
andl
cmp
lcall
ss
repnz
fisttpl
sbb
xor
sub
jne
sbb
lods
sbbb
imul
or
nop
lods
test
add
js
jb
sub
mov
add
rorl
mov
std
push
adc
cmp
fiadds
inc
loop
lods
aas
xor
inc
sub
pushf
popf
add
rcll
stc
test
adc
cwtl
movl
lahf
nop
ficompl
add
out
je
leave
shl
push
cli
sarb
mov
int3
arpl
lea
push
mov
and
sub
int
lcall
ret
jle
in
iret
cmp
jg
jno
fs
int
xchg
and
outsl
mov
jecxz
test
dec
push
cmp
idivl
lods
stc
out
jns
cli
jp
push
insb
push
xlat
xor
mov
add
xor
clc
rclb
inc
push
mov
adc
stos
jg
js
dec
add
mov
sbb
jmp
pop
add
andl
push
pop
or
or
push
out
mov
test
add
xchg
std
pushf
into
dec
jo
out
pusha
add
mov
xchg
out
pop
pushf
dec
push
in
and
dec
movsl
rorb
mov
mov
jp
test
lret
clc
lea
sarb
add
fisttpl
cmp
sub
lods
ljmp
cmp
jecxz
aas
xor
xchg
push
fcomp
in
pop
add
push
outsb
rorb
iret
jecxz
cmp
push
sub
mov
adc
cmpsl
jle
in
add
mov
jl
add
arpl
jns
scas
call
lahf
xchg
stos
or
loop
ss
negl
hlt
mov
dec
rolb
jle
push
adc
lods
lret
sahf
pushw
add
cmp
ret
adc
jne
cmp
pushf
sub
imul
xchg
cmpsb
xor
xor
fisttpll
mov
movl
lods
xchg
cwtl
pop
add
cmpsl
add
mov
cmp
cmp
sub
sti
clc
sub
inc
push
mov
inc
ficomps
mov
repnz
lea
or
sbb
mov
push
dec
jb
add
fcoml
xchg
jno
xor
testl
int3
scas
sahf
into
inc
sbb
push
pusha
jl,pt
sbb
jo
out
mov
cmp
add
sbb
scas
jmp
add
shll
push
add
ja
rolb
negl
mov
xchg
or
adc
or
push
sub
xchg
pusha
fstl
dec
call
lods
ljmp
cmpb
out
push
push
es
jae
sbb
cmpsl
xor
mov
cmpsl
add
xor
rolb
movsl
les
repz
roll
cmpsb
stc
addr16
mov
xchg
dec
je
xchg
scas
in
pop
cmp
pusha
or
ret
jno
jnp
dec
xchg
push
bound
push
je
jno
test
sbb
push
icebp
cwtl
mov
and
add
mov
movsl
int3
xor
sub
ds
js
or
or
mov
xor
jo
dec
inc
loopne
xor
xchg
ds
jb
cmp
lods
pop
in
xor
cmp
insb
das
sarl
test
jno
cmp
fs
xchg
int3
std
dec
adc
adc
dec
sub
je
js
int
out
xchg
enter
pop
inc
fs
int3
outsl
outsl
jecxz
rol
mov
mov
adc
addl
push
add
push
cmc
clc
sub
cmp
lock
and
and
adc
sub
mov
iret
inc
mov
es
mov
xchg
pop
adc
lock
lds
push
or
mov
adc
call
add
ss
add
push
mov
adc
nop
sub
sti
out
adc
std
test
add
xor
inc
add
adc
and
movsl
pusha
sbb
pop
and
repz
stos
hlt
cmp
inc
add
mov
sub
inc
sub
ljmp
or
into
jb
pop
add
dec
and
and
imul
mov
add
mov
adc
nop
test
testl
fidivrl
push
add
notb
xchg
add
and
test
pop
mov
mov
sbb
sub
cmp
pop
decl
adc
hlt
test
dec
sbb
pop
daa
adc
and
enter
inc
inc
pop
mov
pop
lcall
add
add
jno
push
pusha
sub
nop
aam
xor
mov
ljmp
adc
inc
xlat
sbb
jae
fisubs
cmpsl
lcall
stos
pop
mov
mov
and
xchg
push
aam
shr
push
imul
inc
adc
adc
sub
mov
nop
lahf
call
jne
in
iret
cmp
lret
add
mov
aaa
mov
xor
add
in
loop
jmp
push
sbb
xor
or
mov
daa
clc
jp
and
dec
dec
mov
outsl
pop
push
sbb
sub
cld
out
or
add
jbe
add
and
inc
unpcklps
push
sub
pop
popa
sub
dec
test
jbe
shlb
xchg
nop
sub
out
jecxz
cmp
in
add
cmpsb
insb
push
sahf
fwait
test
push
aam
inc
gs
or
sub
lods
push
xchg
lahf
jecxz
and
or
adc
ss
mov
add
imul
loope
into
add
add
sub
nop
stos
xchg
shlb
in
xchg
cwtl
lock
in
dec
jge
std
push
mov
push
das
push
jno
fadd
fstp
out
call
out
cmpb
add
xchg
aam
xchg
sbb
mov
sbb
out
push
popa
cltd
mov
and
jg
loope
sub
lods
lahf
sahf
pop
imul
mov
push
int3
ret
adc
stos
or
shl
xor
mov
jbe
push
sbb
add
fisubl
adc
push
inc
mov
adc
pop
daa
outsl
xor
mov
and
mov
movsb
push
orb
and
push
jmp
pop
loope
testb
daa
lock
xor
fwait
shrb
and
in
and
dec
inc
sub
roll
push
aaa
xchg
or
nop
fdivrp
mov
add
into
aaa
mov
movsl
sub
mov
push
cmp
std
aam
mov
fsubl
out
cmp
sbb
insl
lret
test
addb
shr
mov
push
and
jne
dec
sub
add
cwtl
sbb
bound
ljmp
push
into
je
test
lds
fdivl
jmp
add
cltd
add
push
sub
dec
mov
adc
sarb
lock
jno
sbbl
dec
push
xor
cli
sub
in
adc
dec
and
pop
testl
push
inc
cmp
jno
fwait
xchg
inc
inc
cmpsl
add
rol
test
sub
adc
je
cwtl
js
add
jl
rep
fisubrl
add
aam
pop
ror
add
ja
inc
fildl
mov
mov
add
cmp
repz
add
cmpsb
mov
test
cmp
push
xor
add
inc
push
add
mov
ljmp
test
push
xchg
add
sub
pop
test
fcoms
cmp
fcomps
sub
in
clc
mov
xchg
lret
mov
or
outsl
popf
sub
and
add
inc
push
shlb
lea
xor
in
daa
add
sbb
imul
push
into
repz
and
mov
mov
mov
add
cltd
stos
or
cmp
pop
int
add
dec
adc
mov
inc
pop
add
mov
lahf
int3
xor
out
inc
das
cmp
fldcw
add
sbb
mov
sub
loopne
in
add
pop
dec
mov
mov
into
sbb
roll
stos
add
rcll
inc
test
push
ja
cmpsb
push
je
xchg
push
adc
mov
cltd
mov
sub
sub
or
data16
fcomi
lea
sub
jmp
je
inc
pop
repz
rolb
inc
add
stc
sub
pushf
sub
out
rclb
sub
outsb
cli
xchg
shrl
inc
das
add
pop
sub
sbb
out
pop
mov
ffreep
fimull
call
sbb
aad
in
aaa
inc
lods
andb
xlat
fwait
ja
push
call
add
and
cwtl
jbe
test
sub
mov
pop
das
sbb
int3
xchg
xchg
clc
fdivp
dec
mov
outsb
add
mov
faddl
jae
mov
insb
ss
and
mov
jle
fiadds
sub
xchg
sub
lcall
sub
add
out
fisubrs
in
mov
int3
mov
jb
pop
mov
pop
mov
out
pop
psraw
andb
sub
sub
xchg
push
jmp
or
cmpl
mov
test
int3
dec
fadds
mov
das
add
push
int
add
or
iret
push
add
mov
jl
xchg
daa
cltd
sub
sub
ret
loopne
repnz
roll
nop
insb
xor
inc
pop
clc
sub
adc
add
btc
pop
int
clc
add
lcall
and
fwait
andb
pop
loopne
push
mov
out
push
cmp
mov
arpl
test
add
mov
outsb
mov
hlt
int3
sub
push
jb
add
mov
ret
sub
fcomi
sbb
mov
jmp
jbe
adc
mov
lea
icebp
cs
std
add
sub
bound
xchg
adc
inc
sub
out
xchg
in
orb
add
add
sub
in
sub
add
fwait
mov
mov
and
jl
mov
push
ret
shll
sbb
in
sbb
lea
push
jmp
dec
mov
test
add
clc
add
lea
xchg
sub
fstpt
sub
xlat
sub
fwait
sub
ss
divb
jne
cltd
sub
xor
jecxz
notb
fwait
enter
ret
out
xchg
call
aaa
sub
mov
std
fwait
mov
leave
jbe
sbbl
push
orb
jmp
sub
add
scas
inc
xchg
lahf
lds
push
bound
add
andb
push
xchg
sub
stos
dec
das
add
pop
sbb
clc
add
dec
mov
dec
adc
stc
pmaxsw
shrl
add
pop
rcr
xchg
xor
inc
das
out
jmp
mov
dec
stc
add
or
mov
jle
aaa
adc
ds
mov
test
sti
in
adc
jge
ret
cs
cltd
loop
mov
jmp
sbb
sub
cs
orb
add
pusha
add
fcom
outsb
and
out
adcl
add
jae
add
cs
ret
lods
outsb
das
inc
ficompl
mov
pop
repnz
test
out
xor
mov
add
ljmp
mov
fwait
sub
rcrb
push
push
and
adc
push
jb
fs
sub
cmpsl
scas
pushf
xchg
and
fadds
sub
adc
add
lahf
add
cwtl
pop
loop
pop
add
cmp
inc
pushw
fisubrs
add
sub
in
rcrb
into
mov
testl
scas
sbb
inc
fxch
add
and
mov
jbe
daa
inc
add
stos
out
cmp
sbb
inc
sub
mov
adc
add
add
cs
mov
sahf
ret
imul
jb
neg
test
add
mov
mov
sub
out
sbb
lret
lea
xchg
add
jae
push
add
pop
sub
push
sub
sub
adc
rolb
add
faddl
imul
enter
xor
mov
cmp
nop
addb
add
subl
test
mov
fwait
jg
sub
xchg
call
sub
dec
ljmp
in
js
scas
addb
xor
fwait
rolb
das
inc
sahf
out
or
nop
mov
add
xor
mov
fistpl
sub
xchg
jle
fisubrs
mov
call
daa
ret
dec
mov
adc
repnz
ret
sbb
and
decb
imul
loopne
psubsw
push
aaa
lcall
xor
sub
loope
adc
mov
test
ds
adc
je
pop
push
adc
int
out
out
pop
int
mov
es
orb
add
adcl
sub
cltd
jns
mov
jmp
addr16
mov
pop
inc
stc
push
das
adc
xchg
das
sbb
in
scas
cli
mov
roll
dec
sub
in
fwait
iret
push
repz
mov
stc
cld
adc
add
ss
jb
add
stos
dec
mov
cltd
inc
mull
inc
sub
test
lcall
sub
popa
xchg
cmp
in
in
xchg
rol
mov
push
push
dec
cmp
xchg
add
mov
inc
add
xor
hlt
mov
mov
or
lock
jge
add
mov
dec
lahf
push
add
popf
mov
mov
sbbl
adc
pop
cmc
mov
aas
in
mov
insb
ret
mov
add
xor
adc
xlat
xchg
lea
lret
pcmpeqb
lock
push
fisubrl
test
xchg
ja
or
jns
mov
add
call
and
iret
ja
ret
add
jg
push
push
outsb
shlb
sub
and
mov
push
int3
cmp
test
pop
adc
sbb
jnp
rorb
mov
cld
fs
aaa
inc
adc
mov
lods
leave
add
lods
xchg
sti
adc
add
xor
adc
jecxz
fcoml
adcb
push
dec
lock
pop
sub
push
mov
jnp
add
sub
outsl
cmp
push
rorb
subb
lock
mov
and
xchg
adc
jae
mov
arpl
sub
test
cmp
jnp
jg
push
xchg
outsb
dec
into
nop
rcll
fstpt
jb
cs
gs
outsl
mov
add
jnp
add
into
sub
push
pop
mov
mov
addr16
gs
lcall
push
ja
aad
dec
sbb
iret
lock
pop
ror
pop
out
arpl
sub
and
dec
sbb
pop
negl
arpl
addr16
into
shlb
popf
cmc
jae
mov
push
out
or
popf
or
imul
ret
mov
jg
fmuls
sbb
mov
pop
subb
add
sti
jae
jno
mov
adcb
xchg
outsl
add
rcl
pop
pop
fdivp
fiaddl
int3
jb
jp
into
fcoms
iret
mov
add
dec
or
pop
bound
push
sub
mov
jae
cmp
repnz
movsb
push
outsb
xor
repnz
mov
int
fsubs
ja
sbb
push
fiaddl
add
xchg
dec
loopne
push
dec
popf
dec
jae
adc
jnp
sbb
push
cmpsl
pop
push
fs
jae
pop
xor
jnp
outsb
inc
adc
fcoms
pop
dec
jge
into
pop
sub
jl
nop
jnp
movl
into
scas
or
pusha
push
xchg
iret
push
dec
push
sub
lods
xchg
lods
and
adc
adc
jg
pop
ss
shrb
sub
pop
sbb
push
pop
shrb
xor
or
jb
push
mov
mov
sub
adc
sub
out
xchg
lods
mov
sub
arpl
subb
sub
jnp
jg
lods
shrb
cwtl
pop
xlat
movd
rorl
sbb
pop
fwait
popf
test
pop
sbb
outsl
int
popf
into
jnp,pn
push
jg
scas
iret
adc
ljmp
pop
stos
bound
pop
ja
sbb
arpl
scas
into
loope
mov
mov
cmp
pusha
mov
arpl
ja
sub
or
dec
dec
nop
sarb
lods
das
push
adc
jge
sub
lock
enter
pop
into
fwait
outsl
jbe
sub
jae
ret
ja
fsub
jnp
dec
xor
mov
ds
sub
dec
test
xchg
arpl
imul
jg
or
out
lods
mov
nop
into
adc
in
fdivp
test
cltd
fcmovb
fists
dec
add
lds
das
dec
jecxz
sahf
nop
lock
jmp
arpl
dec
jne
adc
sub
jno
cmp
add
aas
lods
inc
and
xchg
mov
push
add
outsl
jmp
jg
ja
fsubs
sbb
dec
fimull
test
push
cmp
fmull
pop
pop
stos
lock
push
in
cmpb
jbe
xor
mov
mov
mov
sub
jae
lods
pop
aam
or
scas
inc
call
insl
dec
and
xor
xor
sub
mov
add
or
push
adc
cmc
cmp
shl
push
test
btr
push
dec
mov
shld
push
mov
adc
setl
mov
clc
clc
test
mov
clc
mov
rcl
sub
call
pusha
pushf
clc
imul
pusha
stc
push
add
pushf
push
lea
jmp
mov
lea
bts
mov
clc
clc
pushf
call
call
rep
lea
mov
pushf
lea
jmp
jmp
jns
inc
sub
cmp
push
jns,pt
cmp
cmp
insb
cmp
sbbl
shll
xchg
scas
movsb
push
jg
je
inc
mov
shlb
cli
push
int
push
mov
push
into
hlt
js
adc
mov
jno
and
push
popf
adcb
push
inc
daa
inc
int3
inc
adc
jnp
adc
add
jecxz
add
and
popa
adc
or
and
es
ret
jo
pop
adc
cmp
lcall
push
cmp
mov
in
cltd
clc
mov
dec
les
rcrl
pop
mov
adc
fsts
test
cmp
scas
xchg
filds
mov
test
arpl
enter
inc
dec
call
cwtl
jo
mov
or
cmp
pop
xchg
add
inc
int
inc
and
mov
neg
push
push
nop
in
mov
test
push
and
das
jmp
xchg
test
aas
cmp
jge
dec
cmp
push
sahf
jbe
mov
or
or
xchg
jg
fldt
scas
sub
outsb
pushf
std
push
fcmovnu
xor
xor
jecxz
sahf
xchg
jp
xchg
pop
mov
and
or
or
xor
test
in
cltd
addr16
hlt
pop
jae
adc
leave
mov
loop
mov
addr16
test
js
test
cmpsb
dec
stos
test
repz
push
clc
imul
cmp
call
pushf
push
jmp
lea
jae
jmp
pusha
xor
clc
pushf
repnz
pushf
lea
jne
jmp
cmp
bt
or
call
and
pop
push
add
cmpsb
inc
or
mov
es
and
mov
data16
stc
icebp
call
cmp
inc
xor
enter
lret
stos
and
push
xor
xor
mov
std
push
pop
pop
hlt
mov
push
add
mov
icebp
cmpsl
andb
xchg
cmpsb
jns
mov
ret
out
and
sub
loope
xor
imul
out
jecxz
mov
mov
ret
scas
add
out
leave
lahf
mov
pop
ljmp
loopne
mov
pop
addl
aad
ja
in
scas
addr16
dec
or
sbb
out
aas
mov
xchg
xlat
inc
and
shrb
subb
test
je
movb
lea
jne
bsf
bsr
sbb
not
mov
jmp
stc
arpl
cmp
mov
adc
rcrb
sbb
lods
lods
mov
popa
mov
sbb
inc
test
cmc
mov
mov
adc
xchg
cltd
xor
fldcw
cmp
sub
mov
mov
or
and
in
xor
mov
mov
loope
ret
dec
add
out
jo
xor
and
sub
lahf
sbb
enter
fldenv
insl
int
je
or
stos
mov
mov
sbb
test
add
lds
mov
jae
mov
mov
pop
ja
lock
insl
movsl
mov
cltd
sti
jecxz
leave
lcall
adc
clc
pop
xchg
stc
cld
aaa
push
rcrb
imul
push
sbb
push
sbb
mov
les
fcomp
mov
outsb
mov
xor
jbe
icebp
pop
xor
popf
lret
jmp
sbb
and
pop
jl
fwait
ja
lock
pop
stos
test
pop
addr16
movl
push
call
les
je
ffreep
loop
inc
lahf
jns
fnstenv
notb
fyl2x
fsts
inc
cmp
and
pop
sub
subb
cli
lcall
jbe
popf
mov
pop
stc
rcrb
sbb
leave
loope
push
sbb
shr
inc
out
ljmp
clc
jo
push
cmp
or
rcl
pop
sub
push
and
lahf
sub
push
clc
xor
aas
xchg
pop
adc
hlt
cwtl
jae
mov
push
js
test
mov
cmc
pushl
pusha
inc
pusha
stc
jmp
lea
je
call
jmp
lea
jbe
bsr
push
mov
stc
pushl
add
bts
btr
xchg
mov
bt
dec
add
and
add
btc
shl
add
rcl
movl
sbb
rcl
shr
mov
call
call
xorb
rcll
hlt
adc
or
fsts
or
inc
test
fsts
inc
movsb
mov
addr16
mov
xchg
fnstenv
push
rcr
mov
cli
out
mov
int3
subb
aad
ja
out
ljmp
cmc
pop
sbb
jb
mov
sbb
test
mov
sub
and
rcl
imul
nop
cld
aaa
cmp
fwait
mov
stos
test
add
shl
add
jl
shr
sar
rcl
bts
or
mov
cmp
add
push
call
add
add
add
add
add
add
add
add
pop
add
pop
add
add
add
add
add
xor
popf
push
hlt
shlb
cmpsl
sbb
into
sub
and
aam
push
mov
fisttps
sbb
dec
sbb
icebp
stos
add
shl
sbb
add
incl
in
mov
jne
aaa
push
scas
adc
push
dec
inc
mov
push
xchg
js
cmp
xchg
mov
mov
sub
jle
icebp
int3
sub
xor
dec
scas
iret
scas
mov
mov
pushl
imul
mov
push
hlt
mov
pop
aaa
inc
add
and
aam
lcall
sbb
or
stos
stos
stos
scas
pop
test
push
push
jecxz
insb
or
pusha
xor
xchg
sbb
stc
or
test
scas
lods
mov
out
int3
arpl
mov
scas
xchg
sub
aad
test
jp
adcb
cld
xlat
aas
ror
daa
pop
ja
mov
or
jp
mov
test
ds
scas
cmc
lret
mov
sub
aam
sub
jmp
sub
mov
in
jns
leave
daa
cs
jbe
sub
cmp
adc
sub
and
cwtl
stc
cli
lds
and
ret
frstor
icebp
xchg
mov
jge
into
push
jo
sub
in
loope
mov
inc
roll
push
mov
mov
sahf
inc
aaa
mov
cltd
and
int
sbb
rcr
xchg
scas
insb
adc
mov
add
adc
lahf
sahf
push
jo
ret
dec
dec
repz
inc
in
push
divl
cmp
adc
lods
dec
out
stos
pusha
dec
mov
arpl
lods
test
fisttpl
adc
mov
pop
mov
mov
clc
imul
pop
loope
push
fsubl
shr
sub
xor
mov
and
mov
sub
hlt
sbb
xchg
xchg
jge
mov
insb
sti
add
inc
int3
imul
mov
pop
dec
loop
sub
incl
into
les
movsl
cld
mov
sub
subb
out
lahf
xor
xchg
leave
dec
cmc
ljmp
outsb
enter
out
aam
outsl
xchg
pop
mov
shr
jno
lock
xor
leave
add
imul
orl
or
aas
fmull
mov
js
mov
icebp
arpl
xor
mov
sahf
xchg
dec
iret
cmp
or
inc
clc
add
inc
or
cmp
aaa
xchg
out
lret
adc
neg
and
dec
jb
xor
aaa
aaa
sarl
je
vmovss
adc
mov
and
jae
jns
je
es
xor
push
aaa
push
push
and
into
mov
fcomps
aad
sbb
int
mov
sahf
mov
pop
insl
and
xchg
pop
mov
xchg
xor
lret
into
cmp
push
push
or
and
sub
jle
pop
cltd
call
xlat
loop
stc
push
mov
das
insb
lods
hlt
rolb
outsb
movsl
loope
push
loop,pn
repnz
xchg
push
push
adc
test
xor
mov
leave
mov
sbb
rol
mov
flds
lods
or
aas
clc
sub
add
jno
jp
insb
mov
push
pusha
rorb
pusha
xchg
mov
lea
sub
fwait
sub
popl
or
jl
jne
stos
and
cli
adcb
mov
xchg
pop
int
jmp
jnp
jne
aas
loope
cmp
add
sbb
int
mov
stos
sub
nop
adc
cli
stos
jg
icebp
int
shlb
addr16
stc
push
out
dec
sbb
stc
xchg
mov
push
lds
stc
jo
pusha
cmp
xorl
sub
cmp
adc
int3
mov
cs
push
das
adc
pop
stos
aas
cmp
sarl
mov
lcall
push
test
sbb
shlb
or
lods
arpl
stos
dec
xlat
btr
inc
sbb
inc
fidivs
jmp
and
mov
stos
dec
les
sub
aad
xchg
jno
fldcw
fwait
push
dec
mov
inc
imul
xor
pusha
call
inc
rcrl
js
mov
in
jle
push
stc
das
stos
pop
xchg
arpl
dec
leave
or
int3
xchg
inc
inc
sub
fbld
dec
mov
es
xchg
jnp
or
rorl
sub
rolb
rorl
mov
adc
sbb
cmp
pushf
out
mov
cmp
enter
loop
jge
and
aam
xchg
aaa
cmp
sub
sbbb
push
dec
sbb
sbb
ret
push
lea
xchg
aam
scas
in
mov
out
mov
push
pop
flds
or
xchg
imul
arpl
dec
push
popf
and
xlat
repnz
jle
or
cmp
mov
and
aaa
repnz
jbe
push
pop
jns
push
out
popa
adc
rcrl
imul
jo
outsb
and
pop
popf
mov
loop
xor
out
outsb
lahf
jo
dec
cld
imul
orl
mov
test
sbb
xor
shlb
mov
jno
out
cmpsl
nop
mov
imul
sub
mov
gs
repz
sbb
idivl
cmp
mov
pop
lock
hlt
push
mov
cmp
icebp
ds
xor
call
ret
adc
sub
idiv
scas
rorl
mov
out
xchg
addr16
cmc
adc
lcall
mov
xor
sahf
lret
pop
add
cmc
adc
les
cmp
pusha
or
insb
push
xor
sbb
cltd
dec
adc
icebp
scas
cmove
dec
lret
repnz
cmpsb
into
push
aas
shll
jae
and
sbb
in
stc
jmp
and
scas
pusha
mov
mov
rdmsr
xchg
xor
dec
mov
shlb
pop
int
loopne
push
cmp
insl
ror
cmp
js
xchg
leave
lea
and
out
test
insl
imul
or
decl
imul
insb
aam
dec
inc
sbb
loopne
cmp
in
pop
and
inc
inc
lods
push
jae
sbb
pop
cs
sbb
xchg
movsb
addr16
xor
scas
pop
push
mov
mov
or
outsl
xchg
push
sbb
repz
sarl
fstp
das
mov
rolb
mov
mov
pop
cmp
pop
rcll
icebp
stos
mov
jo
sbb
enter
out
and
inc
cmpsl
mov
movsl
mul
sub
push
or
roll
stos
rcrb
in
js
jae
mov
inc
cmpsl
or
scas
sbb
adc
push
xor
sub
test
inc
cmp
dec
xchg
mull
dec
add
jo
test
add
fsubrp
ret
test
push
out
jns
cmp
cmp
mov
pop
push
sti
mov
lock
das
mov
cmp
test
in
lcall
sbb
jne
add
nop
loop
imul
lock
scas
inc
xchg
test
jno
fxch
idiv
pop
and
ss
test
fstps
and
clc
addr16
cli
adc
gs
add
sbb
mov
xor
fwait
stos
subb
add
and
call
nop
lahf
xor
xchg
dec
aam
adc
or
xchg
inc
inc
pop
fidivl
cltd
lret
jno
in
xchg
lds
call
ljmp
sbb
mov
push
stos
mov
cltd
jge
jne
pop
aas
mov
adc
scas
jne
dec
jo
mov
pop
ljmp
mov
mov
ds
jecxz
stos
or
dec
cltd
or
pushf
popf
jmp
test
push
mov
ret
pop
sub
push
sbb
nop
jl
mov
sbb
andb
mov
push
dec
sbb
outsl
fcomi
lahf
pop
mov
xchg
imulb
push
mov
outsb
movaps
mov
xor
aas
mov
sbb
insb
dec
sub
adc
stos
and
dec
es
cwtl
fisubl
mov
xorl
dec
dec
xchg
ljmp
in
jno
shrl
xchg
in
xor
pop
mov
loop
imul
lret
fnstcw
mov
ds
lret
inc
pop
pop
out
sbb
movsl
cmp
adc
mov
data16
jmp
sub
mov
test
inc
repz
push
mov
mov
cwtl
dec
cmc
aas
pushl
in
sar
add
cld
enter
inc
xor
mov
mov
faddl
add
mov
enter
pop
pop
adc
sti
add
mov
inc
push
jne
inc
adc
dec
add
insb
jb
add
repnz
mov
aam
sbb
cmp
das
xlat
inc
shrl
jb
out
push
jns
cmp
je
pop
jge
sub
lcall
or
mov
in
int
int3
cmpsl
jecxz
dec
bt
push
mov
pop
dec
outsb
xchg
or
inc
pop
pop
fsubrs
push
or
pop
aas
scas
test
jb
sbb
clc
sbb
jmp
sbb
push
inc
cmp
push
xor
jp
xchg
fs
inc
sti
mov
push
inc
xorl
mov
mov
std
xlat
scas
cmpsl
adc
aaa
popa
xchg
adcb
rorl
pop
cmp
adc
jecxz
or
roll
shlb
mov
adc
fucom
aam
fxch
sbb
fmull
dec
mov
hlt
pop
sub
test
and
or
mov
mov
sbb
popa
pop
imul
imul
xor
imul
mov
cld
mov
addr16
add
push
cli
fnstenv
lds
out
add
push
jge
fiadds
pop
or
mov
cmp
mov
popf
fcmovu
jmp
negl
push
fcmovne
dec
aam
add
nop
lock
mov
andl
jno
aam
pop
pop
xchg
lret
sbb
sub
jge
xlat
iret
ret
cmp
dec
mov
cmpsl
or
data16
adc
hlt
int3
inc
push
cmp
das
jl
out
and
in
scas
lret
mov
mov
adc
jl
bound
imul
or
cli
adc
stos
mov
jle
or
sbb
mov
or
cwtl
clc
dec
lahf
lods
dec
and
mov
sbb
add
out
je
aam
lcall
shlb
fidivl
pop
lcall
fs
jmp
add
xchg
negb
dec
pusha
sub
in
lea
mov
cmc
jbe
dec
imul
nop
xor
or
sbbl
xchg
je
inc
pop
jbe
mov
clc
outsl
test
jb
dec
add
and
sub
insb
daa
or
aad
mov
repnz
push
sbb
sub
mov
ja
push
pushf
mov
xor
test
mov
push
call
call
pushf
lea
jae
jne
pushf
pushf
push
movw
mov
pushf
movw
pusha
mov
pushf
pushl
jmp
dec
mov
push
push
movsb
jg
jne
aad
push
sbb
sbb
std
stos
shlb
and
sbb
aad
pop
gs
mov
rorl
push
negl
adc
fistps
shll
add
dec
movsl
imul
test
mov
adc
popf
call
sbb
mov
stc
cmc
cmpb
push
pushf
movb
movb
lea
jmp
jmp
lea
jb
inc
clc
cmc
rol
pushf
neg
jmp
int
jg
push
out
jns
push
pushf
je
mov
repz
sti
jl
pop
or
push
adc
pop
sahf
stos
enter
adc
pusha
loop
das
xchg
in
mov
gs
xor
sub
jl
xlat
or
clc
mov
cwtl
movsb
loope
xchg
idivl
stos
movw
cli
adc
jl
xor
rcrl
xchg
pop
push
cli
push
fisubrl
js
adc
xchg
leave
out
or
or
dec
and
ds
into
hlt
mov
sub
xchg
mov
sub
imul
mov
in
or
dec
sbb
cmp
jo
mov
mov
icebp
mov
fidivs
daa
and
mov
stos
mov
js
sbb
inc
or
enter
aad
sub
mov
sub
cli
out
bnd
sarb
test
movsb
lea
jmp
jmp
push
inc
jns
or
lods
push
in
push
cmp
sub
or
pop
rolb
push
iret
inc
jns
or
inc
push
jb
jns
sub
add
or
pop
or
mov
or
push
lods
fcmovnbe
push
inc
lahf
jns
or
sbb
mov
aaa
push
cmp
lret
xchg
lds
or
pop
mov
push
jns
or
push
sarb
insb
or
pop
and
insb
or
add
adc
jg
inc
jno
or
jge
clc
dec
jns
or
pop
pop
mov
inc
sub
push
jns
or
jae
popa
sub
or
push
das
mov
jns
or
pop
mov
cmp
sub
or
add
inc
xor
xor
xchg
jns
or
pop
pop
inc
jae
sub
loope
or
sbb
jns
or
push
pop
xchg
jns
or
pop
push
jge
sub
dec
jns
or
pop
pop
jmp
jle
mov
loope
pop
mov
cmp
push
jns
or
cmp
movsl
pop
jns
or
pop
pop
xor
push
xchg
insb
or
pop
push
xor
add
or
mov
sahf
std
sbb
insl
or
pop
decl
arpl
jns
or
scas
cmp
popa
pop
pop
or
jns
or
nop
pop
sub
ret
jns
or
imul
inc
cmp
or
mov
arpl
jns
or
push
pop
das
xor
shlb
insb
or
push
and
inc
jno
or
or
ds
jecxz
icebp
sub
or
pop
or
jno
or
push
and
mov
insb
or
pop
pop
lcall
insb
or
ja
push
jns,pn
or
mov
mov
loope
pop
xchg
xor
or
out
cmp
pushf
pusha
pushf
lea
ja
clc
bt
pushf
imul
mov
cmc
mov
movl
add
pushf
pushl
lea
jmp
mov
movb
pushf
pushl
ret
call
jmp
lea
ja
push
lea
jb
call
pusha
cmp
cmp
call
lea
ja
mov
sub
shl
ror
test
add
test
mov
mov
mov
clc
test
bt
repnz
call
sbbb
pop
xchg
and
push
adc
mov
cld
cmp
xor
cmp
sbb
xor
mov
mov
fidivl
out
arpl
jecxz
mov
cmp
das
and
cmp
dec
add
mov
push
and
test
insl
rcrl
xchg
xor
pop
cs
push
insl
and
in
mov
push
ds
test
lcall
int3
lods
das
add
and
movsb
scas
stos
test
test
pop
add
jg
push
mov
notl
xlat
mov
lret
daa
sbb
loop
push
lods
notl
sbb
sub
lods
jge
or
mov
fidivrl
loop
mulb
mov
mov
add
mov
mov
mul
ret
addr16
fistl
push
cmp
pop
fdiv
in
jno
cltd
out
push
inc
test
call
movsb
stos
test
inc
and
pushf
pusha
movl
pushl
ret
push
pusha
push
movl
call
lahf
movb
pushf
mov
mov
lahf
movsbw
pusha
lea
mov
movl
push
pushl
call
test
lea
jbe
pusha
pushl
lea
je
push
pushf
mov
call
call
lahf
sub
imul
mov
stos
inc
insb
xchg
jne
mov
sub
in
and
ss
adc
in
pop
jno
mov
mov
mov
lods
es
shrl
xchg
xlat
lahf
xchg
xchg
aad
jno
mov
hlt
pushf
je
xor
je
aaa
jl
push
push
mov
ljmp
push
sahf
jmp
jmp
scas
out
insb
adc
push
mov
int3
cmp
jp
shll
movsl
jbe
lds
rcrb
dec
data16
in
pop
mov
fucom
sub
jg
cmc
lock
mov
jmp
dec
push
mov
xchg
pushf
jo
mov
idiv
push
pushf
mov
push
mov
in
push
test
mov
pushf
pushl
pushf
clc
test
mov
pushf
lea
je
cmp
jmp
jmp
fs
inc
sub
movsl
push
pop
loop
pushl
lock
mov
notl
xlat
mov
ja
mov
lock
lahf
insb
lods
or
pop
or
xchg
ret
mov
xlat
jl
cmp
fistl
push
pop
pop
cmp
stos
test
popf
js
call
clc
mov
btr
mov
jmp
mov
lea
ja
or
clc
neg
and
sub
btc
pusha
shl
btc
lea
add
and
bsf
mov
and
rcr
mov
pushf
repnz
push
pushl
lea
jne
pusha
setge
movb
pusha
setbe
mov
lahf
lea
lea
pushf
pushf
push
call
sub
movw
cmp
pushf
mov
lea
ja
cmc
clc
imul
pusha
add
pushf
lea
jmp
cmc
stc
pushf
test
mov
lea
je
shl
btr
add
shld
setns
mov
push
add
call
inc
lea
call
pushf
push
add
and
push
mov
sub
daa
pusha
mov
sub
pop
setbe
lcall
inc
adc
shl
lds
ret
jmp
mov
or
mov
pop
lods
cmpsl
sub
lods
inc
stos
test
add
jae
popa
addr16
outsl
js
add
xchg
test
jg
and
imul
test
mov
inc
push
add
test
push
cmp
call
jmp
shr
cmc
bts
mov
clc
dec
add
movsbw
pushf
mov
movb
push
pushf
mov
jmp
adc
mov
pushl
ret
lea
je
movsbw
mov
movsbw
jmp
pushf
lea
jb
call
dec
clc
push
jmp
pusha
pushf
pusha
movl
pushl
pushf
lea
jmp
pushf
pusha
mov
call
cmp
pushl
pusha
pushl
lea
jne
pusha
inc
call
call
pusha
pushf
mov
pushf
pushl
push
mov
jmp
pushf
popl
not
mov
movsbw
mov
std
lea
std
xchg
pusha
std
call
cmc
clc
sub
call
jmp
push
mov
movl
jmp
movzbw
dec
dec
jmp
call
pushf
push
pushf
mov
mov
mov
pushf
jmp
jmp
jmp
pushf
jmp
mov
mov
pushf
lea
jmp
mov
pushf
repz
popl
call
or
mov
jmp
pusha
movb
pushl
popl
mov
push
lea
jmp
push
mov
pushf
lea
jmp
pushl
popl
pushl
lea
jmp
mov
mov
pushf
pushl
pushl
lea
jmp
lea
jne
push
mov
pushf
mov
movw
push
lea
jmp
pusha
mov
pushl
call
pusha
mov
push
push
pushf
push
lea
jmp
xor
mov
push
cmc
add
pusha
mov
mov
pushf
pushf
jmp
pushf
mov
pushf
lea
jmp
jmp
call
pushf
pushl
mov
lea
jnp
push
pushf
movb
mov
call
push
pusha
jmp
mov
movw
pusha
jmp
mov
cmc
mul
call
push
mov
movw
mov
mov
push
pushf
pushl
pushf
popl
mov
movw
pushl
popl
movb
push
push
lea
jmp
mov
movsbw
dec
pusha
inc
mov
rcl
rcr
bswap
ror
not
movsbw
pop
lea
dec
bsf
and
ror
neg
and
bts
mov
test
call
pushf
pushf
popl
pushl
movw
jmp
bsr
pushf
cmc
mov
pusha
stc
clc
push
add
pushf
pushl
pushf
pushf
popl
jmp
mov
lea
je
push
mov
jmp
bsf
adc
lea
test
call
xor
mov
pusha
sete
dec
movzbw
cmc
bswap
ror
not
jmp
call
btr
mov
shld
mov
cmc
cmc
sub
call
movzbw
push
not
push
bswap
mov
pusha
jmp
call
or
adc
not
pushf
mov
pusha
stc
xor
bt
jmp
call
mov
call
lea
ja
btc
adc
mov
clc
rol
lea
pusha
sub
xadd
das
aad
dec
lea
bt
pop
and
shld
sub
pushf
mov
pusha
movzbw
bswap
call
call
mov
pushl
pushf
movb
pushl
lea
jmp
mov
lea
jns
pusha
push
pushl
pushf
popl
call
mov
pusha
mov
pusha
push
mov
pushl
jmp
jmp
inc
lea
jae
pushf
pushf
push
decl
pushf
call
jmp
movb
mov
push
pushl
pusha
push
lea
jmp
lea
js
push
pushf
rep
lea
lea
cmc
rcl
mov
sar
sbb
pop
bt
mov
push
pushl
popf
pushf
pushf
push
mov
lea
jmp
pushl
cmc
add
mov
lea
jmp
clc
sub
test
pusha
cmp
jmp
mov
pushf
pusha
mov
mov
pushl
pushf
movb
pushf
lea
jmp
jmp
push
jmp
call
pushl
jmp
lea
pushl
inc
bts
shrd
xor
clc
bswap
movzbl
pushf
mov
pushl
or
pusha
jmp
pusha
mov
jmp
pushl
mov
jmp
lea
jne
bt
bt
sub
jmp
bts
aaa
mov
adc
mov
cmc
stc
xchg
cmp
xor
pusha
pushl
clc
pushf
rol
movb
cmc
neg
movl
lea
cmc
jmp
xor
shrd
lahf
pusha
mov
rcl
stc
not
mov
clc
clc
sub
pushl
push
shl
call
jmp
ror
not
lea
neg
mov
test
add
pushf
pusha
mov
lea
jmp
inc
xchg
mov
setg
xchg
movsbw
not
setae
pushl
popl
mov
pusha
movl
pushl
pushf
mov
inc
inc
rcr
push
stc
rcr
ror
pop
xchg
dec
movsbw
lea
lea
btr
sub
sbb
mov
dec
mov
xadd
not
mov
ror
dec
add
add
rcl
push
mov
bt
inc
test
rcr
sub
shr
clc
rol
xor
bt
stc
neg
jmp
bt
pusha
test
cmc
pushl
popl
stc
add
movb
bt
pushl
popf
pushf
movl
pusha
pushf
lea
jmp
aaa
das
mov
sub
mov
adc
mov
test
bt
jmp
shld
rol
call
pushf
mov
jmp
pushl
mov
pushf
movb
push
pushf
lea
jmp
push
push
pusha
movw
mov
jmp
mov
call
test
xor
bt
cmc
cwtl
cmp
movb
test
sub
push
movb
jmp
mov
push
pushf
mov
lea
jmp
inc
push
call
push
call
jmp
sub
mov
test
test
cmc
call
mov
push
call
mov
pusha
jmp
mov
jmp
xadd
mov
and
pushf
ror
pushf
mov
bt
cmc
sub
test
pusha
stc
cmc
shr
mov
pushf
push
call
test
and
bt
pusha
jmp
mov
pushf
call
pusha
mov
push
repz
popl
mov
jmp
mov
push
pushl
call
call
call
mov
add
pusha
mov
mov
mov
pushf
mov
pushf
pushl
ret
pusha
mov
push
mov
pushf
push
lea
jmp
bswap
mov
movl
pushf
cmp
sub
clc
stc
jmp
movw
mov
pushl
mov
pushf
movl
lea
jmp
btr
movzbl
rol
and
mov
xor
mov
not
pushf
bsf
neg
bswap
jmp
movb
lea
je
stc
test
sub
pushf
xchg
clc
push
clc
clc
mov
cmp
sub
push
pushf
call
jmp
cmc
test
sub
call
jmp
pushl
popl
movb
pusha
pushf
lea
jmp
bswap
test
movzbl
not
sub
call
jmp
mov
jmp
mov
push
mov
pushf
push
call
jmp
bt
jmp
pusha
mov
pushf
pusha
pushf
mov
jmp
pushf
pushf
mov
pushl
call
push
pushf
mov
pushf
pusha
pushf
pushf
lea
jmp
jmp
lea
jne
call
clc
test
bt
shr
lea
jg
pushf
pusha
mov
jmp
pushl
popl
push
movb
mov
lea
jmp
cmp
sub
pusha
mov
push
pushf
lea
jmp
mov
jmp
movsbw
mov
cld
cld
call
setb
sub
add
mov
rol
not
rcr
mov
cmc
add
push
mov
pushf
push
lea
jmp
setp
call
bswap
rcr
mov
shr
inc
setg
cmc
mov
push
test
add
push
pushf
mov
lea
ja
mov
pusha
pushf
pushl
lea
jmp
shl
shrd
call
mov
jmp
mov
dec
seta
push
dec
movsbw
xchg
push
push
not
xchg
mov
movzbl
call
pushl
popl
jmp
mov
pushf
movw
lea
jmp
jmp
cmp
pushl
call
pushf
mov
mov
lea
jmp
jmp
push
inc
bts
pusha
rol
adc
clc
adc
adc
xor
jmp
pusha
jmp
call
jg
pusha
pushf
pushf
mov
pushf
mov
mov
pusha
pushl
mov
push
pushl
mov
pushf
repz
popl
pushf
lea
jle
push
movb
mov
pusha
mov
jmp
mov
pushf
mov
jmp
jmp
pusha
jmp
not
bswap
bsr
mov
mov
mov
pushf
pushf
not
test
not
stc
jmp
mov
pushf
mov
pushf
mov
push
jmp
mov
mov
mov
lea
jl
push
pusha
repz
popl
pushf
pusha
mov
jmp
pushf
mov
jmp
bsr
aad
bswap
mov
or
mov
pushf
mov
stc
cmp
sub
call
dec
xor
or
xor
sbb
ror
clc
pop
movzbl
bt
push
bsr
shl
mov
cmc
push
movb
sub
clc
jmp
lea
mov
push
pushf
push
jmp
call
mov
push
movb
call
xadd
mov
shl
mov
ror
shl
test
bt
mov
movl
call
dec
pushf
pushf
movw
movb
lea
jmp
pop
xchg
call
pushf
jmp
mov
call
shl
bt
rcl
daa
mov
stc
clc
add
call
jmp
jmp
mov
jmp
push
push
mov
mov
movb
push
mov
mov
movb
repz
popl
mov
mov
jmp
bt
add
pusha
pusha
push
lea
jmp
pushf
jmp
pushl
movb
mov
mov
mov
movw
jmp
pushl
mov
mov
movb
call
call
pusha
pushl
popl
mov
push
lea
jmp
mov
mov
mov
lea
jmp
mov
cmc
sub
pusha
pusha
shr
jmp
mov
mov
mov
pushf
mov
lea
jmp
call
add
call
test
mov
stc
sub
pusha
add
jmp
mov
mov
jmp
pushf
pushf
mov
pushf
mov
jmp
test
cmp
add
stc
xor
pushf
mov
movb
sub
mov
pushl
call
jmp
movb
pusha
jmp
jmp
pushl
popl
mov
lea
jmp
mov
call
pusha
call
add
pushf
movb
mov
pushl
movb
pushl
pushl
ret
pushf
popl
mov
pushf
jmp
call
xor
movb
cmc
sub
pushf
mov
push
pushf
push
pushf
lea
jmp
ror
mov
pushl
pushf
dec
clc
cmc
xor
jmp
movl
mov
jmp
pushf
mov
jmp
mov
pushl
pushf
popl
push
pushl
popl
movb
pusha
push
push
lea
jmp
cwtl
sub
add
shld
mov
adc
ror
shld
mov
call
mov
movl
mov
push
lea
jmp
jmp
xor
test
mov
mov
mov
jmp
cmc
test
xor
cmp
cmp
sub
pusha
jmp
mov
jmp
pushl
call
pushf
bt
lea
add
mov
and
lea
bts
add
call
push
repz
popl
call
and
setl
mov
inc
shl
btr
ror
add
pop
shr
dec
sub
sub
shl
jmp
pusha
mov
push
mov
call
movb
jmp
jmp
ror
dec
dec
rcr
rcr
cmc
lea
movzbw
bswap
sub
push
stc
sar
lea
add
cmc
cmp
mov
not
mov
adc
rcl
sets
add
bswap
shl
mov
shr
sub
bsf
lea
neg
xor
pusha
neg
not
lea
je
dec
add
rcl
xor
neg
xor
xor
setb
rol
not
movzbl
btc
shld
xor
stc
mov
push
cmp
sub
cmc
pushf
call
mov
mov
call
pusha
pushf
mov
jmp
mov
mov
push
pushf
pushf
lea
jmp
rcl
movzbl
mov
jmp
test
call
shld
movb
jmp
pusha
movl
lea
jne
shl
xorb
lea
pop
pusha
pushl
pushl
lea
jmp
jmp
pushf
pusha
mov
pusha
jmp
mov
call
push
call
call
add
pushf
pushl
mov
pusha
lea
jmp
mov
repz
popl
movb
pushf
jmp
movsbw
mov
or
clc
btc
btr
mov
pushf
clc
bt
test
add
pusha
push
mov
push
movb
pushf
lea
jmp
mov
push
push
mov
lea
jmp
jmp
xchg
jmp
cwtl
movsbl
pusha
pusha
mov
stc
sub
pushf
pushf
mov
movb
movb
push
movb
lea
jmp
pusha
mov
mov
movb
jmp
pushf
mov
push
mov
pushf
repz
popl
jmp
pushl
call
pushl
popl
pushl
movb
mov
pushf
lea
jmp
jmp
pusha
mov
pusha
push
lea
jmp
mov
pushl
call
lea
movb
movl
mov
lea
jmp
jmp
int3
xchg
int3
jae
xchg
int3
xchg
in
xchg
int3
je
xchg
int3
xchg
xchg
int3
mov
xchg
int3
mov
out
xchg
int3
jnp
xchg
int3
imul
int3
sub
xchg
int3
sub
xchg
int3
or
int3
mov
xchg
int3
mov
leave
xchg
int3
gs
ret
int3
lret
rclb
mov
xchg
int3
ret
int3
xchg
in
xchg
int3
sub
xchg
int3
dec
in
int3
mov
xchg
int3
or
xchg
int3
xor
xchg
int3
ret
int3
and
xchg
int3
xchg
in
xchg
int3
push
repnz
int3
pop
loopne
int3
sub
xchg
int3
lock
xchg
int3
or
in
xchg
int3
mov
xchg
int3
mov
out
xchg
int3
or
xchg
int3
aaa
in
xchg
int3
sub
xchg
int3
sub
xchg
int3
aaa
in
xchg
int3
and
xchg
int3
fs
int3
add
xchg
int3
lock
xchg
int3
jae
xchg
int3
imul
int3
mov
fstl
mov
xchg
int3
movsb
repnz
int3
mov
xchg
int3
scas
jmp
int3
jecxz
xchg
int3
movsb
repnz
int3
xor
int3
pop
loopne
int3
lret
rclb
mov
loopne
int3
jmp
repnz
int3
shl
xchg
int3
jnp
xchg
int3
mov
out
xchg
int3
xchg
in
xchg
int3
add
xchg
int3
sub
xchg
int3
sub
xchg
int3
nop
in
xchg
int3
loop
xchg
int3
sub
xchg
int3
imul
int3
inc
loop
int3
shl
xchg
int3
gs
shl
xchg
int3
je
xchg
int3
pop
jmp
int3
mov
xchg
int3
cltd
lret
sub
xchg
int3
push
repnz
int3
sub
xchg
int3
lock
xchg
int3
repz
xchg
int3
xor
xchg
int3
daa
into
xchg
int3
nop
in
xchg
int3
push
rclb
xor
int3
and
xchg
int3
or
int3
out
int
int3
mov
out
xchg
int3
imul
int3
jecxz
xchg
int3
sub
xchg
int3
sub
xchg
int3
xor
xchg
int3
inc
out
int3
xor
xchg
int3
mov
xchg
int3
xchg
xchg
int3
jecxz
xchg
int3
repz
xchg
int3
mov
xchg
int3
pop
jmp
int3
xor
int3
fs
int3
or
int3
push
rclb
xor
int3
xchg
in
xchg
int3
push
rclb
xchg
in
xchg
int3
mov
xchg
int3
inc
loop
int3
nop
in
xchg
int3
pop
loopne
int3
or
xchg
int3
xor
xchg
int3
mov
out
xchg
int3
mov
loope
int3
scas
jmp
int3
sub
xchg
int3
sub
xchg
int3
xor
int3
out
int
int3
ret
int3
into
jmp
xchg
int3
in
loopne
int3
lret
rclb
mov
xchg
int3
add
xchg
int3
nop
in
xchg
int3
out
repnz
int3
jecxz
xchg
int3
push
xchg
int3
fs
int3
ret
int3
shl
xchg
int3
jnp
xchg
int3
dec
loop
int3
stos
fstl
sub
xchg
int3
fs
int3
jmp
in
int3
jnp
xchg
int3
mov
out
xchg
int3
loop
xchg
int3
into
jmp
xchg
int3
sub
xchg
int3
nop
in
xchg
int3
aaa
in
xchg
int3
loop
xchg
int3
inc
loop
int3
mov
in
xchg
int3
inc
out
int3
shr
xchg
int3
jmp
fstl
mov
xchg
int3
shl
xchg
int3
pop
jmp
int3
or
jmp
int3
xchg
in
xchg
int3
sub
xchg
int3
or
repnz
int3
daa
into
xchg
int3
mov
xchg
int3
add
xchg
int3
jnp
xchg
int3
gs
xchg
int3
mov
xchg
int3
mov
out
xchg
int3
out
int
int3
imul
int3
sub
xchg
int3
sub
xchg
int3
mov
xchg
int3
jnp
xchg
int3
xchg
in
xchg
int3
push
fstl
je
xchg
int3
push
fstl
mov
lret
or
in
int3
cltd
lret
and
xchg
int3
mov
xchg
int3
gs
jae
xchg
int3
cltd
lret
or
int3
xchg
xchg
int3
sub
xchg
int3
movsb
repnz
int3
pop
loopne
int3
stos
fstl
scas
jmp
int3
mov
out
xchg
int3
jecxz
xchg
int3
shr
xchg
int3
sub
xchg
int3
sub
xchg
int3
into
jmp
xchg
int3
or
int3
shl
xchg
int3
ret
int3
pop
jmp
int3
add
xchg
int3
daa
into
xchg
int3
je
xchg
int3
xchg
in
xchg
int3
push
xchg
int3
push
rclb
shl
xchg
int3
and
xchg
int3
fs
int3
xchg
in
xchg
int3
repz
xchg
int3
stos
fstl
add
mov
pushf
mov
mov
push
movb
pushl
pusha
lea
jmp
shl
stc
clc
clc
shr
jmp
sub
cmc
movb
jmp
pushl
popl
pushl
lea
jmp
mov
pushl
pushf
mov
movw
mov
pushf
push
pushl
lea
jmp
call
mov
mov
pusha
repz
popl
mov
pushf
mov
jmp
mov
mov
pushf
pushf
call
mov
push
movb
repz
popl
jmp
movw
mov
mov
movb
pushf
mov
pushl
ret
mov
pushf
pusha
call
pusha
mov
lahf
mov
pushl
movb
divl
jmp
xor
mov
test
cmp
call
pusha
btc
test
pusha
mov
cmc
call
mov
pushf
jmp
pusha
mov
mov
pushl
movw
jmp
jmp
sbb
mov
test
cmp
add
mov
mov
push
lea
jmp
repz
popl
call
sub
jmp
ror
pusha
inc
cmc
bt
push
xor
lea
jl
push
pusha
mov
cbtw
call
mov
jmp
call
mov
jmp
call
sbb
pusha
mov
bt
pushf
jmp
pushf
jmp
add
pusha
shrd
movb
mov
mov
jmp
jmp
call
mov
call
mov
call
jmp
test
setb
sbb
shr
mov
or
pushf
neg
mov
stc
test
stc
sub
stc
stc
shl
pushf
call
push
mov
pushf
pushl
pushl
pushf
lea
jmp
mov
pushf
jmp
mov
movb
pushf
lea
jmp
cwtl
call
mov
pushf
jmp
call
bt
rol
shrd
btc
mov
shr
add
mov
pushf
mov
call
push
pushf
jmp
das
rdtsc
pushf
sub
lea
jae
push
push
pusha
mov
call
jmp
call
push
lea
cpuid
pusha
pushf
sub
cmp
bt
cmp
cmpl
jmp
jmp
pushf
mov
call
xchg
mov
not
stc
jmp
repz
popl
push
mov
jmp
rcl
mov
push
cmc
add
pusha
lea
jmp
mov
call
sub
pushf
shl
pushf
call
repz
lea
jmp
pushf
mov
pusha
movb
repz
popl
movb
mov
pushf
mov
mov
mov
mov
mov
call
shl
push
sub
mov
test
cmp
add
movb
pushf
movw
lea
jmp
mov
movl
mov
mov
pusha
lea
jmp
call
mov
movb
push
pushf
lea
jmp
mov
lea
jae
pushf
repz
popl
jmp
mov
mov
push
movb
pushf
mov
pushf
mov
pusha
mov
pushl
lea
jmp
mov
jmp
pushf
popl
call
pusha
pushl
popl
push
push
lea
jmp
pushf
popl
mov
pushl
popl
movb
push
lea
jmp
xchg
xchg
repz
popl
pushl
not
mov
not
dec
mov
pushf
setbe
mov
xchg
sete
jmp
mov
movb
mov
pusha
call
pushf
mov
movl
call
movw
mov
push
mov
pusha
call
pusha
pusha
mov
pushf
jmp
pusha
pusha
mov
call
jmp
push
pushf
mov
pushf
movb
movw
mov
lea
jmp
mov
movl
jmp
movb
mov
movw
movb
mov
movb
lea
jmp
call
push
mov
pushf
push
call
mov
movb
lea
jle
push
mov
lea
call
mov
pushf
popl
pushf
jmp
ror
pushl
popf
movzbl
mov
xchg
mov
lea
pop
mov
pushf
pushf
mov
pushl
ret
pushl
mov
jmp
mov
mov
pushl
ret
call
jmp
mov
push
mov
pushl
push
lea
jmp
jmp
mov
mov
jmp
pushf
mov
movw
pushl
ret
add
jmp
stc
pushf
mov
movb
add
mov
pushl
lea
jmp
test
stc
not
cmc
call
pusha
div
jmp
pushf
movb
pusha
mov
movb
movb
jmp
push
jmp
mov
pushf
inc
clc
test
cmc
xor
stc
sub
pushf
mov
movb
movb
pushf
pushf
lea
jmp
setg
and
sar
movzbl
pushf
cmc
cmc
xor
pushf
neg
push
jmp
push
push
lea
jne
adc
add
xor
mov
push
jmp
pushf
mov
pushf
pushl
movb
pushf
mov
pushf
call
mov
push
call
movb
pushl
mov
call
push
pushf
push
repz
popl
movb
mov
mov
push
jmp
shld
mov
xor
bt
stc
sub
dec
movzbw
neg
xor
or
or
shl
adc
neg
pusha
dec
not
inc
bsr
sub
xor
not
shl
sbb
call
or
call
shrd
mov
cmp
test
pusha
add
pushl
pusha
lea
jmp
movb
movw
pushf
mov
mov
pushf
pusha
call
mov
mov
movw
push
mov
movb
push
call
bt
cmc
pushf
and
jmp
dec
push
pushf
inc
inc
pushf
mov
not
push
movzbw
not
inc
setns
bt
ror
xchg
ror
not
movsbw
dec
shl
xchg
bt
movzbl
lea
or
sub
clc
sub
pusha
lea
test
not
mov
btr
movb
xor
add
rol
pushl
lea
jg
cmc
mov
setae
rcr
not
cmc
sub
push
bsr
xor
shl
bswap
bt
pusha
neg
pop
not
movsbl
dec
sar
xor
sub
lea
bt
xor
inc
movzbl
or
mov
push
sub
pusha
pushf
pushf
pushl
add
jmp
jmp
push
mov
call
push
movb
cbtw
jmp
mov
pushf
mov
mov
call
push
repz
popl
jmp
call
mov
pushl
pusha
pushf
jmp
pusha
lea
jns
pushf
mov
mov
pusha
pusha
mov
pushl
pushf
push
pushf
popl
pushf
movl
pushl
popl
movb
mov
mov
lea
jmp
stc
setb
cmc
mov
stc
mov
bt
call
push
call
bt
jmp
push
jmp
push
pushf
lea
jno
pusha
xchg
jmp
call
not
call
das
cbtw
bsf
notl
movsbw
cmp
bswap
btr
mov
test
pushf
test
sub
cmc
clc
and
movb
pusha
push
pushf
popl
jmp
mov
call
aas
sub
shl
mov
add
inc
mov
cmc
jmp
push
call
and
btr
xor
mov
jmp
mov
jmp
mov
movb
pushf
call
call
jmp
stc
clc
pushl
popf
mov
mov
lea
jmp
mov
pushf
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
lea
jle
pusha
lea
jne
call
jmp
pushf
pusha
rep
sbb
pop
pusha
add
mov
neg
pushf
cmp
clc
mov
call
xchg
pusha
pusha
pushf
movl
mov
call
cmc
mov
cmp
push
xchg
push
cmc
xor
cmc
rol
cmp
pushf
mov
clc
neg
pushf
push
not
cmp
test
stc
push
add
cmc
pusha
stc
jmp
pushf
pusha
mov
pushf
movb
pushl
ret
sub
jbe
div
push
jmp
call
xchg
not
repz
popl
movzbw
inc
pushf
mov
lea
mov
pushf
pop
inc
mov
inc
mov
sete
xchg
jmp
pushf
jmp
mov
mov
push
pushf
lea
jmp
pushf
mov
push
push
jmp
pop
mov
lea
inc
jmp
movzbw
mov
inc
rcr
xor
test
mov
mov
cmc
add
call
push
mov
jmp
movsbw
mov
cmc
add
pushf
movb
mov
pushf
jmp
not
push
mov
pushl
jmp
mov
pushl
lea
jmp
mov
movzbw
jl
movzbw
xchg
repz
movsbw
push
inc
xchg
mov
mov
movsbw
push
mov
pusha
inc
mov
lea
movw
xchg
movsbw
jmp
cmp
dec
cmp
movzbl
shld
test
movzbw
call
pop
mov
bswap
call
push
stc
sub
mov
call
pushf
dec
shl
sar
push
xor
sub
cmp
pushf
xor
neg
mov
stc
pushf
cmp
add
mov
push
mov
pushf
lea
jmp
jmp
pushf
mov
pushl
pushl
mov
movb
lea
jmp
lea
jae
pusha
mov
pushf
lea
jmp
pusha
jmp
stc
test
sub
jmp
push
repz
popl
call
mov
jmp
repz
popl
pushf
push
push
mov
jmp
pushf
pushf
popl
call
push
push
mov
pushf
pushf
popl
mov
pushl
popl
pusha
movb
mov
lea
jmp
mov
pushl
lea
jmp
neg
mov
cmc
mov
lea
bt
bt
lea
jne
ror
call
add
movw
mov
push
mov
pushf
mov
movb
mov
lea
jmp
pushf
movb
mov
pusha
pushl
pushl
ret
rcl
shl
seto
mov
sete
pop
bsr
rcl
dec
pop
xadd
lahf
pop
adc
aam
aam
jmp
pusha
dec
rol
rcl
xor
setae
xor
and
bsr
xor
bt
movzbl
shr
seta
shl
mov
clc
sub
test
clc
add
call
movb
mov
mov
mov
pusha
pushf
popl
mov
jmp
call
add
add
push
repz
popl
push
push
call
pushf
popl
call
mov
push
pusha
movl
pushf
mov
pushf
pushf
movb
mov
movb
pushf
mov
mov
mov
pushf
pushf
mov
pushl
pushf
lea
jmp
and
adc
stc
mov
clc
pushf
bt
add
push
pushl
pushf
pushl
lea
jmp
pushf
call
pusha
movzbw
movzbw
mov
jmp
mov
decl
movl
call
pushl
dec
push
dec
call
pusha
mov
pushl
mov
jmp
call
bswap
jmp
mov
jmp
movw
mov
pushf
pushl
mov
mov
movw
pushf
lea
jmp
not
push
call
pushf
inc
pushf
mov
clc
movw
rol
jmp
push
ror
call
mov
pushf
lea
jmp
call
lea
jle
pusha
pushl
popl
pushf
pushl
pushf
lea
jmp
push
jmp
movzbw
jmp
jmp
jmp
jmp
call
clc
add
jmp
push
pushf
sub
cmp
cmc
jmp
pushl
popl
push
mov
movb
lea
jmp
push
call
pusha
mov
jmp
pusha
push
call
pushf
mov
pushl
call
neg
adc
cwtl
mov
btc
stc
mov
push
pushf
not
pusha
cmp
not
clc
push
and
pushf
mov
mov
pushf
popl
pushf
pushl
popl
push
movb
pushl
push
lea
jmp
bsr
mov
push
clc
stc
call
mov
mov
pushf
push
repz
popl
mov
pushf
movb
call
cmc
sub
bt
movb
call
mov
movzbl
not
pushf
inc
jmp
pusha
mov
pushf
push
push
mov
pushf
lea
jmp
clc
sar
not
movzbl
bt
pusha
xor
pushl
cmc
pushl
jmp
aad
shl
aam
mov
shld
mov
shl
not
mov
stc
add
call
mov
bswap
mov
shr
sar
sub
mov
sar
call
pusha
mov
movb
mov
movb
pushf
lea
jmp
jmp
shl
jmp
movb
push
mov
call
call
add
aad
xadd
mov
shr
push
mov
bt
pushf
cmc
add
pusha
call
call
call
pushf
pushf
popl
call
pushf
mov
mov
jmp
and
call
call
call
call
call
jmp
pusha
add
call
mov
push
call
movw
mov
pushf
lea
jmp
mov
movb
call
push
pushl
mov
mov
mov
push
pusha
mov
pusha
repz
popl
pushf
mov
call
pushf
pushf
popl
movb
call
sub
call
pushf
jmp
and
mov
jns
clc
clc
sub
jge
push
mov
movl
pushf
push
lea
jmp
jmp
pushl
dec
call
pushl
popl
pushf
lea
jmp
stc
not
bt
ror
cmp
jmp
pusha
call
movb
jmp
dec
cmp
mov
neg
push
xor
push
add
push
jmp
mov
call
movzbl
rol
cmc
adc
xor
shld
neg
setle
or
or
pushf
add
bt
ror
call
jmp
add
pusha
lea
jmp
pushf
lea
pusha
lea
jne
push
pusha
mov
pusha
lea
jmp
repz
popl
pusha
mov
call
movb
or
pushl
cmc
xor
jmp
or
movzbl
cmc
stc
jmp
jmp
movzbw
pushf
lea
pusha
inc
btr
ror
call
pushl
pushl
popl
push
mov
pushf
pushf
lea
jmp
jmp
jmp
mov
pushf
movb
movb
lea
jne
push
push
movb
mov
pusha
movw
push
mov
pushf
movb
pusha
lea
jmp
pushf
popl
push
movw
pushl
popl
pusha
lea
jmp
jmp
pusha
pushl
popl
pushf
inc
movl
dec
push
xchg
movsbl
mov
not
inc
pushl
rcl
not
ror
lea
dec
rcl
bsf
lea
sar
dec
sub
jmp
pushf
jmp
movb
pushf
popl
jmp
mov
push
call
mov
pusha
jmp
mov
mov
mov
pushf
push
lea
jmp
add
movw
call
movsbl
dec
bts
inc
btc
and
stc
mov
pushf
cmc
sub
mov
movb
push
movw
mov
movb
pushf
movw
pushf
lea
jmp
jmp
push
push
pushf
mov
movw
pushf
jmp
das
shl
not
mov
cmc
cmc
stc
jmp
pusha
jmp
mov
movb
pushl
push
pushf
mov
push
movw
lea
jmp
mov
movb
movb
push
push
lea
jmp
mov
pushf
movw
mov
jmp
mov
movw
mov
pushf
movb
movw
lea
jmp
mov
mov
pusha
call
mov
mov
movw
push
mov
lea
jmp
pushl
popl
push
pushl
pushf
mov
lea
jmp
xor
call
movb
push
cmp
call
pusha
mov
mov
pushf
pushf
pushf
lea
jmp
push
mov
pushf
call
pushf
mov
pushf
pushf
push
jmp
push
pusha
mov
push
mov
pushf
movw
lea
jmp
call
cmp
pusha
movw
push
lea
jne
cmp
and
clc
xorb
pusha
pop
not
mov
push
pusha
lea
jmp
bt
xor
bt
cmc
neg
jmp
sub
jmp
call
pusha
mov
pushf
mov
pusha
call
mov
push
pushf
pushf
lea
jmp
mov
pushf
pushf
mov
mov
jmp
pushf
jmp
mov
pushl
popl
pusha
pushl
pushf
lea
jmp
pusha
call
mov
movb
jmp
mov
jmp
push
movw
mov
pushf
jmp
rol
lea
movzbw
inc
mov
stc
jmp
dec
push
cwtl
call
shl
shr
mov
stc
movzbw
sub
mov
cmp
cmp
cmp
test
add
jmp
mov
pushl
pushl
pushf
lea
jmp
add
push
jmp
aas
call
neg
shld
mov
bsr
sub
stc
shrd
not
xor
xor
shrd
rcr
setle
neg
bswap
dec
adc
pushf
xor
clc
xor
rcl
stc
add
xor
lea
add
test
movzbl
bts
mov
bsr
mov
pushf
jmp
lea
jle
pushf
pushf
pushf
mov
jmp
