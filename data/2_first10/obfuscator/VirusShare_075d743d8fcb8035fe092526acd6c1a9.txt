add
pop
add
add
addb
add
nop
add
addb
add
rolb
addb
add
add
add
mov
add
add
add
add
adc
add
push
pop
add
jo
pop
xor
add
add
mov
add
addb
add
jo
pop
xor
add
add
add
add
addb
add
cmpsl
add
addb
add
pop
xor
add
push
add
add
add
add
addb
add
clc
add
addb
add
and
add
dec
add
addb
add
cwtl
add
addb
add
jo
pop
xor
add
add
add
add
call
test
add
jo
pop
xor
add
add
add
add
adc
add
mov
add
jo
pop
xor
add
add
add
add
cmp
add
mov
add
add
pop
xor
add
add
add
add
pusha
add
add
lods
add
xor
add
jo
pop
xor
add
add
add
add
mov
add
and
add
xor
add
jo
pop
xor
add
add
add
add
mov
add
pop
scas
add
xor
add
jo
pop
xor
add
add
add
add
fadds
add
jo
pop
xor
add
add
add
add
lock
add
sbb
add
jo
pop
xor
add
adc
add
add
test
add
rolb
add
clc
add
addb
add
add
addb
add
jo
add
cwtl
add
orb
add
rolb
orb
add
call
sldt
adc
orb
add
cmp
orb
add
add
mov
cmp
add
mov
add
fadds
cmp
add
add
add
sub
add
push
add
add
js
add
jo
pop
xor
add
add
add
add
rolb
add
add
test
add
jo
pop
xor
add
add
add
add
call
mov
add
jo
pop
xor
add
add
add
add
adc
add
and
add
lods
add
add
pop
xor
add
add
add
add
cmp
add
rol
add
loop
add
jo
pop
xor
add
add
add
add
pusha
add
add
add
jo
pop
xor
add
add
add
add
mov
add
call
add
add
pop
xor
add
add
add
add
mov
add
int3
add
cli
add
add
pop
xor
add
add
add
add
fadds
add
ror
add
add
add
pop
xor
add
add
add
add
add
add
roll
add
add
add
pop
xor
add
add
add
add
sub
add
add
jo
pop
xor
add
add
add
add
push
add
add
add
jp
add
jo
pop
xor
add
add
add
add
js
add
hlt
add
stos
add
add
pop
xor
add
add
add
add
mov
fiaddl
add
add
jo
pop
xor
add
add
add
add
enter
and
add
repnz
add
pop
xor
add
add
add
add
lock
add
add
or
add
jo
pop
xor
add
add
add
add
sbb
add
into
add
add
pop
xor
add
add
add
add
inc
add
add
push
add
add
pop
xor
add
add
add
add
push
in
add
add
jo
pop
xor
add
add
add
add
nop
add
add
scas
add
add
pop
xor
add
add
scas
pop
add
add
add
jo
pop
xor
add
add
add
add
rolb
add
in
add
add
pop
xor
add
push
add
jg
add
push
add
dec
push
add
jo
add
cwtl
push
add
rolb
cmp
add
call
add
add
pop
xor
add
add
add
add
cmp
add
lods
out
add
add
jo
pop
xor
add
add
add
add
pusha
push
add
shl
add
add
jo
pop
xor
add
add
add
add
mov
add
aam
add
adc
add
jo
pop
xor
add
add
add
add
mov
add
call
add
add
pop
xor
add
add
add
add
fadds
add
cld
out
add
add
jo
pop
xor
add
add
add
add
add
add
adc
add
adc
add
jo
pop
xor
add
add
mov
pop
add
jo
pop
xor
add
add
add
add
inc
pop
add
adc
add
jo
pop
xor
add
add
add
add
push
add
add
pop
xor
add
add
add
add
addb
add
pop
add
inc
add
add
add
add
pop
add
add
add
dec
add
push
add
inc
add
inc
add
inc
add
add
add
push
add
xor
or
dec
add
dec
add
dec
add
dec
add
inc
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jle
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
adc
add
inc
add
insl
add
popa
add
jns
dec
add
insl
add
add
add
push
add
push
add
add
outsl
add
je
xor
inc
add
add
outsl
add
add
push
add
add
inc
add
insb
add
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
data16
add
dec
add
add
add
add
add
add
imul
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
add
add
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
push
add
push
add
add
outsl
add
je
xor
inc
add
add
outsl
add
add
sub
add
add
dec
add
add
insb
add
add
add
insl
add
jb
imul
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
popa
add
add
add
js
inc
add
add
add
adc
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
push
add
data16
add
dec
add
add
add
add
add
add
imul
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
xchg
add
add
outsl
add
insl
add
outsb
add
add
add
add
jae
and
push
add
popa
add
add
and
imul
jne
jae
add
add
add
add
add
arpl
jb
imul
and
je
push
add
jb
imul
outsb
add
insb
add
add
add
add
jae
add
add
data16
add
jne
jb
and
jae
outsl
add
je
ja
popa
add
add
add
add
popa
add
add
popa
add
add
outsb
add
add
jo
jne
jae
and
add
insl
add
add
add
outsl
add
and
insl
add
jb
add
add
outsb
add
outsl
add
sub
and
jo
insb
add
and
jbe
imul
je
and
inc
add
push
add
add
outsl
add
je
xor
inc
add
add
outsl
add
add
add
jb
add
je
imul
jae
cmp
sub
add
add
jns
add
sub
mov
data16
adc
dec
test
insb
push
push
pop
dec
rcll
cltd
rcll
dec
and
push
add
push
add
add
outsl
add
je
xor
inc
add
add
outsl
add
or
sbbb
test
inc
nop
xor
addr16
outsl
testb
push
push
dec
jb
jbe
push
jnp
xchg
jne
xchg
or
out
push
sti
jns
imul
inc
add
push
add
add
outsl
add
je
xor
inc
add
add
outsl
add
and
adc
in
dec
inc
insb
test
in
dec
push
pop
sub
gs
xchg
mov
push
mov
xor
test
arpl
lea
das
add
decl
decl
mulb
dec
jg
movsl
arpl
addr16
dec
insb
push
push
sbb
push
in
lret
push
sbbl
je
test
push
sbb
push
pop
dec
or
add
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
test
add
add
add
and
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
cmp
add
push
add
pop
add
jnp
jnp
jnp
dec
jge
add
test
imul
cmp
pushf
add
xchg
pushf
add
mov
add
cmpsb
mov
add
mov
xchg
add
pushf
add
test
jnp
xchg
add
movsl
add
movsl
add
movsl
add
movsl
add
mov
add
mov
add
mov
add
mov
add
mov
fiadds
cmp
movb
mov
add
into
add
add
ret
fiadds
and
out
xor
out
xor
out
xor
out
xor
out
add
iret
testl
and
incl
and
incl
cmp
testl
adc
incl
sub
testl
and
incl
sub
incl
xor
testl
xor
incl
cmp
incl
cmp
incl
xor
incl
xor
incl
cmp
incl
cmp
incl
and
incl
xor
incl
xor
incl
cmp
incl
cmp
incl
inc
ret
fiadds
imul
add
out
add
out
add
out
add
out
add
out
add
out
add
testl
inc
xlat
testl
dec
xlat
testl
dec
add
testl
arpl
out
add
out
add
testl
imul
add
testl
inc
out
add
incl
inc
jmp
add
incl
dec
out
incl
pop
jecxz
add
incl
push
out
add
incl
push
out
incl
pop
jmp
add
incl
inc
idiv
add
incl
dec
idiv
add
incl
push
idiv
add
incl
pop
idiv
add
incl
arpl
testl
imul
add
incl
arpl
incl
arpl
incl
imul
add
testl
imul
add
incl
arpl
incl
jae
incl
jae
incl
jnp
incl
jnp
incl
test
test
mov
mov
add
rcr
add
xlat
fiadds
mov
out
test
out
pushf
xlat
out
pushf
add
out
test
out
add
testl
mov
testl
mov
incl
test
incl
xchg
out
add
testl
xchg
out
incl
pushf
jmp
add
incl
test
incl
mov
incl
mov
incl
mov
incl
xchg
repz
xchg
idiv
add
incl
xchg
sti
incl
pushf
sti
incl
lods
out
incl
mov
testl
mov
out
incl
movsl
repz
movsl
idiv
add
idiv
add
incl
mov
incl
mov
incl
mov
idiv
add
sti
incl
into
iret
into
add
fcmovnu
add
rcl
add
xlat
add
fcmovnu
add
add
xlat
add
out
testl
sti
incl
incl
into
sti
incl
into
incl
idiv
add
sti
incl
incl
fdivrp
incl
fdivrp
incl
out
out
out
jmp
add
jmp
add
out
out
add
jmp
add
out
out
add
incl
out
incl
div
testl
push
testl
div
incl
idiv
incl
idiv
incl
sti
incl
incl
add
dec
jae
push
add
add
and
pop
add
add
mov
xchg
sub
add
add
add
add
sub
add
add
mov
mov
mov
add
mov
mov
add
add
mov
mov
jbe
jbe
mov
mov
mov
scas
or
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
test
js
mov
mov
mov
mov
sahf
adc
add
add
test
sahf
mov
fmul
aad
cmpsl
test
test
adc
add
add
cmpsl
cmpsl
mov
mov
mov
cmpsl
mov
add
inc
sahf
mov
iret
aad
fdivrl
mov
add
add
jg
rcr
mov
adc
add
sbb
jl
test
xchg
jge
or
add
sub
jns
jp
outsl
pop
pop
outsb
jnp
pop
pop
jnp
jns
jns
xor
sub
outsb
outsb
outsb
arpl
lret
xchg
imul
data16
add
add
add
pop
pop
imul
mov
add
addb
fcoml
push
and
add
push
cmp
push
pop
faddl
add
mov
mov
push
pop
cmp
add
add
aaa
cmp
ds
jb
addl
add
fdivl
ds
ds
push
add
add
inc
inc
inc
jno
xor
inc
inc
inc
cmp
sub
cmp
cmp
xor
xor
fdivs
xor
xor
cmp
cmp
add
mov
mov
jle
fcoml
mov
mov
popf
and
add
push
inc
pop
lcall
stos
nop
rcr
cltd
mov
mov
mov
pop
push
and
cltd
ja
mov
mov
nop
insb
inc
imul
and
nop
popf
les
add
vmovups
add
enter
enter
add
add
lret
inc
rcl
rcl
roll
xchg
rcl
shll
add
add
and
add
add
add
add
cld
aas
clc
aas
clc
pavgb
clc
add
aas
clc
add
aas
cld
add
aas
cld
add
aas
cld
add
jg
add
jg
add
aas
clc
add
aas
clc
add
pop
lock
pavgb
add
rolb
pop
addb
add
add
add
add
add
add
pop
cld
add
jg
addb
inc
pop
jmp
ud0
lock
lock
clc
aas
clc
aas
cld
jg
incl
andb
add
test
jg
popa
dec
adc
dec
pop
cmp
dec
jno
push
cmpsl
scas
xchg
push
jne
daa
jecxz
dec
xchg
cmp
jns
push
aad
sbbb
inc
and
cld
cld
call
jmp
cli
xor
incl
push
jmp
xor
mov
inc
je
inc
loope
sbb
sbb
cwtl
xor
faddl
push
popf
xchg
xchg
inc
out
xchg
cwtl
jno
sahf
mov
mov
dec
inc
push
in
test
mov
adc
leave
fcoms
ljmp
adc
lea
xor
aaa
mov
fcmovnb
sub
je
sti
sbb
inc
mov
mov
pop
arpl
call
std
or
push
push
repnz
shrb
lret
jbe
xchg
aas
paddusw
cmp
int
stos
sub
or
mov
insb
xor
dec
adcl
cmp
cmp
addr16
mov
lret
adc
test
insl
mov
xor
out
mov
xor
sbb
sbb
pop
aad
push
aas
sub
jmp
push
dec
mov
mov
pop
nop
mov
lahf
jg
cld
dec
pop
imul
sar
fwait
cmp
movsb
pop
dec
iret
lock
frstor
sbb
and
xor
fmull
sub
cwtl
pop
and
scas
jg
andb
jns
jbe
inc
call
add
jo
inc
sbb
mov
push
sub
dec
pop
adc
mov
fs
andb
jbe
mov
sbb
fs
insb
ret
xor
jmp
or
dec
pop
fcoms
cmp
shrb
sbb
and
addr16
stos
or
inc
mov
lcall
out
push
jns
xor
xchg
or
int3
jbe
lods
xor
jle
adc
sbb
push
or
fistps
sub
push
dec
or
mov
xchg
js
hlt
leave
add
clc
mov
xor
add
cmp
mov
xchg
push
arpl
xchg
out
mov
mov
push
aad
test
mov
shr
pop
pop
push
cltd
lcall
mov
mov
shlb
ljmp
push
pop
inc
fwait
into
xchg
or
fs
loopne
cmpsb
imul
jnp
jg
test
je
and
add
add
and
movsl
sahf
ja
in
lret
sub
fwait
jo
mov
push
and
aas
cmp
inc
stos
out
cmp
fwait
outsb
mov
xchg
test
sti
sub
lds
mov
pop
push
jb
pop
pushf
mov
repz
std
mov
jp
ret
ss
adc
sub
ljmp
jne
xchg
popa
cmp
mov
or
push
popa
idiv
je
pop
ljmp
adc
inc
cmc
rcl
sbb
sub
das
shlb
es
pop
test
inc
jmp
sbb
dec
and
mov
jno
push
adcl
loope
cmc
push
sbbb
fidivrs
mov
mov
arpl
or
sbb
jae
shlb
fstps
dec
insl
movd
sbb
jl
pop
leave
jp
inc
es
fldenv
jno
jae
xor
nop
push
xor
loopne
mov
out
pusha
lock
jmp
hlt
pop
sub
cmp
aam
pop
insb
fst
rcrb
repz
fisubs
push
je
roll
mov
fdiv
sbb
push
mov
icebp
mov
cmp
clc
sub
or
or
push
mov
inc
pusha
push
xchg
and
insl
pop
lret
leave
gs
into
sbb
loop
push
xlat
cmp
mov
mov
sub
xor
or
mov
push
ds
sahf
jg
sub
and
icebp
ret
mov
idivl
movsb
fs
mov
pop
cmp
mull
cmp
sub
fs
mov
ss
lods
cmp
inc
cmp
ficompl
fildl
bound
or
mov
insb
pop
leave
pop
or
sub
and
xor
cwtl
insb
addr16
dec
adc
cmp
jns
xchg
and
mov
cmpsl
mov
loop
push
icebp
push
stos
inc
mov
jecxz
insl
scas
pusha
ret
add
pop
mov
jb
sahf
pop
cmpsl
rclb
insb
fdivs
or
fstpl
rcl
pop
add
sti
jb
mov
mov
stc
xlat
jae
rolb
or
fldt
mov
push
pop
add
cmc
inc
and
hlt
xor
mov
mov
lea
add
in
jae
dec
cltd
sub
shll
clc
repnz
ss
sbb
push
add
js
sbb
lea
pop
sub
sub
insl
addr16
or
jnp
mov
incb
adc
cltd
push
xlat
xchg
mov
or
stos
adc
hlt
pop
and
dec
inc
outsl
aas
mov
stc
sbb
jne
push
nop
not
fidivl
mov
nop
inc
inc
test
divl
mov
jo
inc
imul
jle
push
imul
inc
cli
shr
push
mov
mov
cwtl
xchg
nop
pushf
inc
cmc
arpl
mov
inc
sub
stos
mov
loopne
pop
clc
mov
cmpl
cmpsl
std
xchg
test
nop
js
lret
adc
js
scas
push
clc
fwait
divb
ljmp
dec
scas
cld
vpunpckhwd
add
int
imul
cmp
xor
aas
ret
mov
jmp
xor
and
out
lock
dec
divb
js
idivb
inc
insl
push
xchg
cli
jb
lods
cltd
dec
cmp
cmpsb
dec
negl
fdivs
inc
xchg
or
aad
cmp
pop
mov
inc
movsb
sub
out
mov
out
es
jne
xchg
jmp
jno
xchg
sub
aaa
ljmp
sub
ret
scas
pop
daa
mov
stc
add
nop
cmp
movsb
pop
xor
inc
and
dec
leave
add
jno
sbb
xorb
and
cld
ret
add
cmpsb
stc
pop
cld
sahf
inc
mov
popf
repz
fisttps
repnz
lahf
mov
cmpsl
mov
mov
push
push
xchg
mov
test
scas
add
jne
jb
push
rorl
mov
pop
int3
push
dec
fdivs
dec
sarb
lahf
into
xchg
and
outsb
addr16
sbb
mov
leave
shll
fwait
insl
add
data16
jge
jp
lds
inc
in
pop
inc
adc
lea
aaa
mov
mov
adc
xchg
aas
call
cmpsl
cwtl
mov
mov
lock
fstp
test
lcall
imul
ret
sbb
jbe
push
cmc
mov
rcrl
aad
xchg
mov
xchg
gs
sub
stos
xor
popa
in
lds
icebp
sahf
cltd
add
sub
mov
addb
mov
or
insl
xchg
push
in
nop
mov
and
rcl
sbb
loope
psubusb
dec
leave
mov
xchg
lods
aam
enter
test
fmull
test
jbe
enter
jb
or
pop
je
outsl
addb
mov
xor
popa
xchg
stos
or
cmp
push
inc
adc
push
rol
into
cltd
push
push
aaa
rol
mov
adc
pop
mull
or
lods
inc
inc
test
insb
lds
rcrb
filds
popf
test
pop
cmc
imul
loope
into
push
mov
add
xor
push
or
or
push
cmp
fisubs
cld
push
or
leave
push
inc
mov
ljmpw
out
push
icebp
cmp
push
mov
or
stos
add
pop
xchg
and
jge
sbb
xchg
add
fistps
xchg
mov
mov
lar
sbb
jae
out
push
sbb
mov
mov
cmc
ret
cs
xorl
dec
mov
int3
and
cs
pop
sbb
je
mov
mov
aaa
xchg
and
jbe
adc
sbb
es
push
and
mov
mov
add
ja
lods
stos
jns
jb
repnz
cmp
pop
and
push
mov
cmpsb
divl
xlat
mov
mov
xor
stos
cwtl
pop
nop
push
jb
dec
pop
mov
adc
jle
jl
push
mov
repnz
repnz
mov
orb
jb
dec
mov
inc
jae
pushf
cwtl
xchg
mov
adc
jg
loopne
nop
out
sbb
inc
adc
pop
movsb
xchg
jl
jmp
push
call
movsl
mov
dec
pop
lods
adc
bound
sbb
fistpll
jo
ret
in
jge
test
roll
fcmovu
add
in
sbb
aaa
xor
movsl
cmp
xchg
popa
mov
xor
fucomp
and
jecxz
mov
in
cs
rorl
pop
dec
sarb
shlb
andl
add
ret
shrb
push
aad
mov
call
es
mov
pop
jle
mov
pop
push
and
mov
sub
inc
roll
inc
out
dec
bswap
cld
or
jg
mov
into
dec
mov
pop
aam
outsb
pop
and
or
push
mov
pop
push
and
out
cltd
xor
sti
pop
pop
inc
push
jae
mov
mov
inc
into
clc
dec
xchg
xor
adc
cmp
cli
fwait
loopne
mov
in
ljmp
cld
mov
dec
out
aad
fs
js
cmp
adc
push
imul
mov
call
add
dec
sbb
inc
outsl
push
sub
hlt
ja
mov
paddw
iret
push
divb
and
cmp
call
repz
xor
adc
loopne
pusha
inc
leave
aad
ud1
mov
and
lcall
jnp
sub
mov
fidivs
add
mov
cltd
or
divl
jmp
int
dec
int
inc
or
inc
aad
aam
loop
aas
les
or
mov
fiaddl
lea
in
xchg
sub
imul
and
sub
aad
loope
les
fsts
mov
aaa
in
dec
ljmp
or
pop
idivl
lahf
in
aaa
aam
inc
mov
jle
xchg
cmp
bound
mov
js
std
pushf
pusha
addb
sub
loopne
jns
pop
push
mov
xor
xchg
push
shll
addb
aaa
xchg
lcall
jne
mov
sbb
roll
sub
pushf
xchg
mov
fbstp
xlat
push
aad
pusha
sbb
or
insl
jmp
out
jmp
cmpsb
lods
dec
sbb
xchg
cmp
pop
out
les
dec
into
xlat
inc
pop
or
cwtl
rclb
inc
ljmp
jbe
sbb
repnz
pop
cmp
or
mov
adc
lret
imul
jle
out
sbb
or
stos
out
sahf
sub
xchg
and
and
sbb
in
sbb
lcall
pop
fsub
pusha
xchg
push
jne
push
jne
movsl
sub
add
aad
int3
test
mov
aam
push
push
pushf
inc
or
sub
aas
out
cmp
xchg
inc
and
shrb
aaa
or
cmc
insl
mov
pop
mov
and
xchg
jne
cmpsl
mov
push
pop
push
xor
cmc
popa
jg
dec
xor
mov
fcompl
into
stos
mov
sahf
sub
dec
call
or
push
add
lret
insb
cmp
sub
fnsave
roll
adc
lcall
imul
scas
mov
aam
repz
pop
and
lcall
dec
pushf
cmc
pop
lret
pop
sti
or
pushl
cmp
jl
inc
xchg
pop
pop
mov
stos
lcall
rorb
fnsave
fstpt
in
sub
mov
jb
pop
dec
lcall
push
rcll
stos
lock
in
ret
fimull
cmp
sarb
sahf
add
lret
inc
sbb
jnp
test
test
imul
sbb
out
sub
xchg
add
sti
mov
ljmp
pop
pop
jae
adc
aad
sbb
leave
ljmp
mov
fadds
xchg
push
push
clc
mov
jb
pop
xchg
sbb
pop
mov
popa
stos
jg
mov
xchg
iret
js
push
dec
rcr
mov
in
negl
jae
sbb
ja
cs
pushf
scas
xor
andl
xchg
xchg
xlat
jbe
dec
pop
or
sub
lds
mov
cmpsl
pushf
jne
scas
mov
lock
cmpsb
pop
aad
pop
dec
mov
sub
mov
push
cltd
sahf
into
test
push
es
or
das
rorl
stc
fmull
sbb
jmp
and
out
adc
movsl
sub
lods
into
push
and
aaa
nopl
jno
push
or
or
into
loope
icebp
jp
icebp
clc
mov
into
popf
sbb
hlt
xchg
pop
sub
cmp
les
and
imul
pushf
sahf
xor
xchg
adc
fnstsw
xlat
xchg
shr
pusha
cltd
xlat
aam
ret
cltd
mov
out
xor
jnp
out
sub
lods
add
outsb
fstps
push
lds
imul
frstpm(287
int
inc
imul
ljmp
sbb
mov
mov
mov
jo
pop
push
jl
adc
pop
ret
cs
jg
mov
mov
dec
in
sub
lret
fstpl
nop
es
rcll
orl
xlat
push
xchg
sub
sub
sbb
daa
inc
sbb
gs
jmp
leave
mov
or
nop
leave
ss
test
jno
adc
sub
scas
xchg
xchg
in
ss
cs
mov
jnp
fisubl
insb
icebp
and
repnz
clc
or
cmp
mov
fisubl
push
mov
mov
test
push
or
and
cwtl
lcall
std
sub
push
xor
in
mov
push
fcoms
cmpl
imul
xor
pusha
or
sbb
mov
add
mov
mov
inc
pop
enter
xor
inc
push
xor
cmp
sub
call
dec
push
test
gs
add
lahf
js
cmp
mov
mov
int
insb
xor
in
std
in
xchg
lods
dec
add
arpl
inc
cli
lds
xchg
fisubs
push
xor
and
fdivrs
mov
cwtl
test
mov
pop
xlat
xor
nop
popa
xchg
and
xor
movsb
and
ja
pop
rolb
pop
enter
icebp
fwait
stos
das
sbb
sbb
orps
mov
mov
pop
inc
inc
cmp
cmp
sub
into
dec
cmp
fstpl
pop
test
inc
dec
dec
pop
scas
and
sbb
mov
push
pop
xchg
sti
cmp
cmpsb
lahf
mov
mov
test
aam
push
test
in
cli
insl
stos
std
sub
ret
mov
push
cmpsl
std
or
push
js
arpl
add
andl
andl
faddl
arpl
lcall
popa
cmp
out
push
in
test
xor
call
add
xchg
add
call
addr16
sub
cmp
push
sbb
xchg
lds
clc
testb
push
sbb
sbb
subl
pusha
sbbl
rcrl
xor
fiaddl
pop
aas
inc
and
pop
leave
mov
pop
xchg
pop
mov
xchg
scas
fimuls
lahf
sbb
sub
dec
mov
inc
movsb
in
xchg
repnz
ret
jg
hlt
pop
jge
mov
cltd
push
mov
lock
jae
mov
xchg
pop
movsl
dec
push
xor
sub
ljmp
das
adc
mov
cs
mov
mov
xor
out
jl
dec
push
rol
cmp
add
jl
jle
mov
jle
push
cmpb
push
test
shrb
push
cmp
ret
in
pop
insb
insb
mov
mov
adc
int
fldenv
mov
jno
lahf
das
lods
lcall
pop
aas
pop
and
cltd
mov
dec
cltd
hlt
adc
sbb
scas
xchg
xlat
inc
in
or
stos
sub
sbb
fsubl
daa
cmp
stc
adc
and
xchg
aaa
popa
loopne
jno
adc
insb
push
clc
loop
lods
cwtl
loopne
mov
cltd
and
xchg
test
push
jne
mov
mov
mov
lret
ret
js
xor
lcall
call
push
sbb
sbb
jl
mov
cmp
arpl
fbld
ljmp
in
imul
hlt
test
dec
and
iret
sub
sub
ljmp
add
mov
adc
mov
xor
out
bound
lahf
into
jns
pop
fwait
rcrl
sub
outsb
mov
mov
pop
rclb
call
dec
stc
add
lea
pop
dec
mov
loopne
pop
xor
out
das
pop
mov
stos
and
out
jns
sub
jge
fists
add
out
popf
sbb
and
in
jle
cmp
es
cmpsl
cmp
movsl
adc
xor
mov
mov
cmp
cmpsl
into
mov
xor
xchg
add
pop
iret
mov
repnz
in
jns
mov
inc
outsb
lret
insb
inc
mov
filds
sbbl
pushf
add
jg
imul
outsb
mov
mov
add
fildll
xchg
dec
cli
rcll
in
fwait
std
lea
cmpsb
or
cmc
mov
mov
mov
inc
add
push
sbbl
fiadds
fdivl
icebp
dec
ffreep
adc
cmpl
push
lcall
aam
sahf
lret
cmp
xchg
addr16
pop
jo
mov
or
dec
addr16
js
popf
and
xchg
mov
lcall
mov
mov
jnp
rclb
mov
jns
clc
out
mov
inc
inc
rorb
lahf
out
mull
fcomi
test
xor
xor
fmulp
or
mov
mov
mov
mov
cmp
repnz
jnp
inc
xchg
ds
fdivs
testl
stos
aas
mov
push
int
scas
add
add
rorl
dec
cld
mov
mov
outsl
add
pop
xor
xchg
mov
fists
xchg
cmpsb
mov
ds
xor
icebp
mov
or
fiaddl
jle
jae
inc
sub
cmp
sbb
push
scas
inc
mov
pop
mov
gs
inc
dec
xchg
or
dec
andl
hlt
push
mov
mov
lea
xchg
int3
sub
lcall
cmp
dec
adc
repz
mov
mov
test
sub
push
mov
push
inc
jns
loopne
push
cmp
and
jp
hlt
inc
cltd
leave
adc
xchg
mov
mov
xor
mov
popa
mov
sub
adc
inc
adc
inc
adc
ds
cltd
fcoms
in
sub
lret
out
add
jnp
cs
inc
out
mov
adc
jp
xchg
notb
sbb
test
lahf
xchg
mov
add
cmpsl
sub
shl
into
mov
inc
in
push
push
dec
fists
mov
push
inc
lsl
mov
cmc
filds
mov
adc
dec
outsl
inc
scas
mov
add
pop
pusha
mov
and
ds
fstpt
fmuls
inc
adc
cmp
les
inc
mov
adc
jae
lods
mov
jb
mov
lods
jns
mov
aad
popf
aad
movsb
xchg
sub
bnd
push
in
mov
rcl
mov
std
jno
outsl
aam
jne
add
aas
mov
mov
movsl
sub
push
shl
das
push
dec
cmpsl
lcall
mov
mov
mov
daa
rclb
rorb
ja
in
es
add
mov
ss
aas
arpl
adc
int
pop
xchg
aam
jge
lock
mov
mov
xchg
addr16
popa
inc
ja
sub
cmp
push
hlt
jmp
data16
clc
mov
fwait
repz
pop
add
je
and
or
arpl
adc
xor
je
pop
or
mov
jle
jne
sbb
int3
mov
inc
adc
mov
sub
outsb
test
cs
xor
mov
mov
or
push
mov
pushf
lret
lock
pusha
adc
out
clc
scas
adc
jg
sub
or
xor
pop
dec
ja
int3
enter
lret
sarl
and
aam
cmc
xchg
ss
xchg
fmulp
sbb
sub
andb
inc
mov
cmp
les
mov
adc
lods
jecxz
clc
sub
and
push
pop
or
dec
jmp
add
xor
out
jecxz
and
xchg
out
xlat
enter
sahf
sub
lret
push
mov
stos
cld
mov
xlat
mov
mov
jle
aad
idivb
iret
aaa
dec
or
jp
sbb
mov
fmuls
loopne
test
xchg
jb
jl
jo
push
call
into
mov
fldt
hlt
fldl
pop
cmp
mov
push
into
leave
pop
lea
imul
add
add
lods
mov
std
push
mov
decb
pushf
in
daa
js
mov
mov
jne
push
mov
bound
sbb
aaa
inc
adcb
sbb
data16
push
xchg
lret
cld
arpl
rcll
mov
enter
add
jecxz
shr
in
test
mov
inc
lret
cmp
or
jmp
xchg
xor
mov
jp
sub
pop
sub
mov
sbb
mov
shl
mov
dec
sub
pop
fwait
dec
mov
cmpsb
xchg
mov
adc
ds
jecxz
inc
pop
inc
dec
push
jp
dec
je
shr
lcall
xor
pop
cli
sarb
dec
mov
cmp
and
xlat
call
ljmp
inc
in
jmp
xor
cmpl
test
dec
jae
fnstenv
rorl
cmp
mov
and
int3
loope
movsl
xchg
insl
jnp
addr16
inc
movl
xlat
inc
lret
push
fldcw
xchg
es
test
rcrb
pop
ljmp
add
lds
mov
jae
in
push
mov
mov
scas
push
dec
push
roll
inc
outsb
xorb
sbb
fdivrs
mov
aad
add
lds
cwtl
es
pop
cli
and
sbb
adc
push
mov
xorb
cmpsb
cld
mov
jo
cmpsl
insb
jne
inc
lcall
cmpsb
jbe
pop
mov
gs
pop
lcall
into
in
pop
insl
jp
pop
inc
rolb
out
cltd
jg
mov
pop
out
shl
pop
jno
fnsave
jb
xor
adc
xlat
dec
in
out
icebp
jno
mov
sub
lods
adc
xor
or
je
lods
xor
fisttpll
into
xchg
add
lods
ret
in
add
in
fdivr
jo
mov
xor
push
add
out
mov
mov
jecxz
xchg
ss
adc
popf
dec
sar
pop
aad
sbb
or
loopne
inc
ss
or
daa
pop
fs
pop
dec
popf
shlb
push
pushf
mov
push
adc
aas
lret
repz
pop
clc
out
mov
flds
adc
or
in
shrl
hlt
jo
mov
pop
rclb
dec
jns
lahf
lret
lret
pop
test
daa
imull
fcmovnbe
aam
loopne
xchg
jnp
pushf
mov
pop
ret
xchg
dec
movsl
scas
sub
xchg
leave
xchg
sti
cwtl
ss
mov
imul
inc
mov
sub
xchg
aad
mov
cmp
mov
xor
lret
out
mov
in
and
lea
xor
mov
fwait
xchg
imul
jb
sub
xchg
push
test
lret
shrb
inc
enter
mov
int
ss
popf
es
dec
cmp
jne
jp
cmc
jecxz
outsl
inc
xchg
xchg
rol
das
lock
mov
les
mov
stc
lea
out
insl
icebp
lahf
cmp
cmp
sarl
int
xchg
lret
or
xor
or
cmpsb
adc
call
xchg
lock
push
mov
movsb
and
imul
and
jp
or
dec
mov
outsb
and
stos
push
loop
cmp
xchg
xor
out
icebp
pop
iret
jnp
dec
mov
mov
mov
jo
or
push
ss
lret
xor
mov
sbb
repnz
cmp
popf
or
add
sbb
xchg
xor
lret
jecxz
cmpsb
pop
push
scas
sub
fcompl
xor
or
fists
int3
cmp
inc
fdivrp
adc
mov
pop
and
xchg
add
add
pop
filds
xchg
cmp
push
cmp
outsb
mov
push
movsl
or
repnz
jns
xor
sub
jmp
jp
gs
and
xor
mov
mov
je
or
adc
lcall
jmp
jmp
xchg
mov
adc
aas
adc
in
xchg
lea
sub
sub
and
dec
ja
xchg
or
imul
sarb
dec
les
sub
in
dec
test
xchg
push
roll
sbb
lret
add
fstpt
les
gs
sbb
insb
in
out
adc
mov
lods
lods
dec
push
rorl
test
jge
sbb
pop
mov
rcl
or
cmp
inc
arpl
push
test
out
into
jmp
addb
out
out
in
push
and
sar
push
inc
fbld
and
xchg
push
imul
dec
lods
pop
es
inc
mov
adc
lcall
sbb
add
inc
add
cwtl
inc
clc
jo
xchg
mov
in
gs
lods
xlat
fstpt
and
sub
mov
xor
cmc
inc
mov
xchg
nop
xor
sbb
pop
in
js
push
pop
test
mov
add
xchg
in
out
hlt
sbb
push
pusha
cmpsl
sbb
decb
xor
jo,pt
call
sahf
pop
dec
bound
cmp
inc
les
push
in
or
popl
push
call
aaa
cmp
and
fisubl
mov
push
in
inc
pop
mov
fldcw
mov
lsl
xchg
sub
fisttpll
dec
xor
ret
iret
imul
xchg
sub
pop
or
xchg
mov
cmpsl
sub
xor
je
fwait
imul
mov
insl
int
movsb
mov
scas
sbb
sbb
sub
mov
mov
or
xlat
imul
lret
hlt
mov
push
sahf
lock
jns
mov
sub
js
jo
add
push
jb
dec
dec
daa
pop
dec
jnp
add
or
clc
hlt
sarl
inc
loopne
cmp
push
test
aaa
xchg
sub
jle
xchg
cld
outsl
xchg
push
sahf
sti
int
clc
jge
sub
push
outsb
mov
cli
sti
pop
pop
cltd
add
ret
push
push
subb
push
jl
mov
or
mov
push
out
mov
mov
fdiv
test
dec
add
adc
mov
lds
in
out
rolb
push
fists
imul
dec
jns
push
into
xor
sub
inc
sbb
mov
mov
cwtl
inc
addb
sbb
xor
in
jb
scas
inc
jmp
lahf
push
pop
into
mov
pop
push
and
mov
mov
mov
xchg
out
push
stc
outsl
dec
mov
cmp
xchg
xchg
fnstcw
or
xor
push
push
xchg
imull
cmp
fwait
dec
fldenv
cld
loope,pt
mov
inc
popa
push
inc
roll
test
test
mov
mov
mov
es
addl
and
clc
push
cmc
test
nop
nop
dec
test
aaa
jmp
sbb
mov
jg
repnz
outsl
lods
sbb
sub
cli
loop
and
lret
out
sahf
loopne
pop
push
loopne
lahf
mov
movsl
mov
out
aam
in
and
cmpsb
scas
cs
or
push
cmp
and
lret
push
push
scas
ret
xor
cld
clc
cmp
ljmp
aaa
cltd
movsl
pop
out
imul
cmpsb
scas
push
shll
iret
sub
pop
loopne
decl
shrb
loop
insb
testl
sub
arpl
int
mov
pop
and
xor
rcr
fwait
pop
sub
movsl
adc
fcmovu
add
enter
xorb
jl
push
dec
cltd
std
sub
mov
cmc
lcall
or
pushl
xorl
andb
push
das
sub
sarl
mov
cmp
jo
mov
out
pushf
fildll
add
ret
imul
subb
adc
add
sahf
in
pusha
push
and
rcrl
icebp
cmpsl
lods
cmp
imul
test
and
adc
jo
outsb
jne
bswap
loop
dec
jge
mov
jmp
fisubl
and
cli
fsubs
cmp
movsl
jne
sub
ror
or
aad
xchg
pop
cli
mov
xor
out
add
loop
jo
stos
fs
loop
xchg
cmp
inc
loope
mov
mov
bnd
jle
xchg
test
jne
fsub
ljmp
fimull
push
add
repz
leave
fbld
pop
adcl
aaa
movsb
outsb
cld
icebp
aas
sar
mov
loopne
pop
out
jg
fs
imul
cmp
adc
scas
aam
dec
movsl
adcl
fwait
cmp
je
jne
mov
xlat
jae
xor
pop
ja
sti
push
xchg
jmp
mov
lods
adc
cmp
and
jg
sbb
lcall
xchg
aad
push
and
gs
aaa
cmpsb
sbb
jg
pop
jecxz
jecxz
pop
cmc
insl
addr16
cld
inc
push
push
mov
divl
cmpsb
ss
fucomi
shrl
dec
or
dec
mov
fbld
in
jle
push
sub
mov
out
jns
imul
xor
scas
les
sub
or
sbb
out
xchg
adc
dec
inc
fstps
inc
xchg
adc
xor
inc
jo
or
mov
testb
orl
das
push
leave
in
and
dec
dec
xor
nop
jl
sbb
jle
xor
jne
dec
push
jp
imul
mov
outsl
and
cmc
and
jo
mov
leave
psubusw
sbb
fwait
mov
mov
xchg
loope
lock
aad
adc
sbb
mov
jge
loope
mov
in
jnp
ja
push
lcall
pop
jg
shr
sarl
pop
out
sub
mov
cmc
loopne
gs
mov
pop
inc
aas
movsl
xchg
lock
jae
cld
nop
inc
arpl
inc
mov
enter
xchg
xorl
sub
xchg
decb
imul
xchg
mov
iret
lret
aas
movsb
bound
outsl
mov
mov
test
call
inc
mov
xlat
out
jle
xchg
pop
iret
xchg
adc
add
mov
xchg
fisttpl
mov
sbb
les
int3
cmp
loopne
push
cli
aam
sbb
es
cmpsl
jbe
pushf
out
test
cmp
xchg
xchg
mov
mov
cmp
lea
aam
lock
stc
fmuls
inc
lret
or
ljmp
popf
push
adcb
or
add
cmpsl
sbb
push
sub
rorb
ret
xor
cmp
push
adc
push
fmul
mov
ret
xor
call
aaa
mov
push
mov
fmuls
les
sbb
movl
pop
push
scas
leave
inc
fld
sarl
and
mov
jb
or
mov
xchg
std
leave
mov
push
fs
and
cwtl
outsl
movsl
push
cmc
push
lret
pop
mov
pop
insl
xchg
push
mov
lahf
ds
add
nop
add
or
jo
clc
mov
or
pushf
inc
sub
add
mov
dec
cmc
pop
add
imul
repnz
lcall
pop
insb
ret
shrl
insb
pop
pop
mov
stos
jmp
or
data16
ja
adc
or
inc
push
test
inc
lret
lea
xor
out
test
cmp
push
mov
shlb
jg
js
inc
sarb
pusha
xor
lret
mov
push
mov
cld
psrad
push
fcmovnb
cmp
jecxz
ljmp
dec
dec
lcall
and
push
call
test
push
aaa
daa
ficoml
gs
inc
mov
pop
xlat
mov
std
jecxz
jl
orb
pop
pop
jmp
push
movsl
sub
hlt
ds
gs
daa
or
inc
adc
adc
push
lock
iret
das
shl
inc
ja
xor
cmp
inc
dec
roll
cli
fs
mov
repz
movl
dec
cmp
xor
stos
inc
jecxz
adc
mov
jae
movsl
ja
push
popa
sub
call
cmp
ret
mov
jmp
imul
sbb
mov
ljmp
cmpsl
call
sub
push
pushf
mov
in
jnp
sahf
js
push
mov
ss
push
mov
pop
mov
inc
iret
outsb
mov
push
mov
mov
mov
cmp
rcr
push
ja
and
push
fcompl
add
push
dec
and
push
mov
iret
add
pop
lcall
mov
inc
and
xchg
xor
push
pop
pop
nop
push
enter
repz
enter
ss
outsl
xor
icebp
cmp
pop
popf
fidivs
cwtl
fs
fdivrs
sbb
nop
push
xchg
rcll
fyl2xp1
dec
inc
inc
test
scas
pushf
out
cmp
repnz
lds
shrb
jmp
jecxz
cmp
cmp
adc
lret
scas
mov
cmp
sbb
cmpb
iret
pop
ret
sub
cltd
jmp
xchg
loope
mov
pop
popf
or
xchg
xchg
lods
xchg
add
mov
and
jnp
xchg
and
cwtl
shlb
mov
sbb
xor
jge
mov
std
mov
aad
jl
adc
gs
xlat
lcall
popa
in
xor
ffree
int
lds
add
ret
idivb
es
leave
pop
clc
pop
loopne
stc
loopne
push
stos
dec
ss
sub
repnz
mov
adc
add
jle
xchg
pushf
push
ss
mov
aas
jb
in
fistl
aaa
xchg
cmp
mov
dec
mov
add
mov
fsubp
xchg
out
sbb
xor
je
dec
pop
push
and
sub
int3
cltd
ret
out
push
scas
jae
mov
xchg
les
pextrw
js
leave
bound
push
leave
repz
mov
lcall
xor
sti
push
push
out
jae
and
pop
sub
hlt
out
push
add
lods
mov
movsl
mov
lahf
int
xchg
jnp
and
enter
xchg
sub
sub
xchg
pop
popf
int3
dec
mov
adc
ds
pop
cmp
dec
inc
bound
or
cmp
push
daa
jmp
xor
stos
push
addl
xor
inc
cmp
jp
dec
or
sbb
push
mov
loope
sahf
daa
loopne
loopne
jnp
jb
mov
outsb
jb
in
sarb
or
mov
and
cs
push
mov
push
shlb
dec
mov
sub
or
push
mov
loop
repz
sahf
push
pop
gs
test
sarl
enter
or
mov
mov
gs
das
inc
adc
ret
fsubr
push
je
cmc
mov
mov
jmp
push
xor
pop
movsb
pop
jb
xor
mov
fsubrs
sbb
cmp
dec
orl
push
and
movsb
push
scas
or
or
adcl
aam
dec
pop
push
mov
mov
ds
mov
mov
test
sahf
push
test
mov
or
cs
dec
mov
mov
inc
cld
loopne
movsl
dec
sub
mov
mov
pop
mov
cmp
insl
dec
scas
xchg
mov
inc
mov
lcall
and
in
test
push
lds
ror
sti
add
inc
lahf
jnp
pop
scas
clc
or
shl
out
test
cmp
xor
pop
lock
push
sub
sbb
scas
add
js
lahf
push
mov
or
dec
pop
pop
dec
movsb
leave
cli
jo
sti
lahf
cmp
dec
sbb
xor
cli
xor
mov
mov
xchg
int3
and
mov
adc
or
push
inc
loope
call
sub
jmp
and
repnz
push
pop
jbe
les
push
jge
or
cmp
push
inc
repz
dec
outsb
cltd
loopne
inc
sbb
mov
and
sub
dec
inc
mov
dec
sub
jge
pop
rcrl
inc
pop
adc
test
and
leave
mov
sahf
loope
ret
mov
adc
mov
xchg
cwtl
jle
lahf
adc
test
xchg
or
xor
lret
not
loopne
jmp
xor
jb
pop
xchg
cmp
push
and
cwtl
sbb
or
adc
cmpsl
pop
add
stc
xlat
ljmp
sbb
add
scas
daa
pop
pushf
mov
pop
pop
aad
leave
icebp
sub
adc
loop
pop
movsb
add
jecxz
or
cmp
fstpl
and
dec
jae
push
cld
push
sbbl
es
repz
inc
pop
or
push
outsb
pusha
jmp
lcall
aad
hlt
in
or
repz
push
pop
mov
mov
inc
mov
mov
add
cmp
jnp
fiadds
addr16
adc
push
out
jmp
jmp
mov
andl
xor
and
sub
mov
mov
sbb
add
jae
mov
imul
ss
xchg
mov
or
mov
xchg
js
or
lret
or
push
xchg
dec
pop
daa
fs
add
mov
test
xchg
lcall
push
incb
add
imul
repnz
negb
xor
xor
adc
lods
rcl
movsb
cmp
lret
sub
ret
fdivrp
cmp
xchg
push
xchg
outsl
sub
sbb
lds
mov
and
jo
push
xor
lock
nop
jb
xor
xchg
rcrl
inc
pavgb
lock
adc
xlat
lock
and
mov
movsb
and
das
out
sbb
lcall
lahf
movsl
rclb
pushf
push
pop
inc
lret
xchg
stc
xchg
mov
pop
iret
mov
pop
test
hlt
js
cmp
notb
xchg
sub
pop
lock
inc
test
push
sahf
setp
orb
dec
or
fs
mov
sub
sub
add
lea
jg
fsubrs
inc
pop
mov
push
jle
test
in
mov
test
cmp
adc
push
insb
jae
push
adc
iret
pusha
add
call
xor
lds
mov
jle
lock
push
inc
pop
sbb
jno
fdivs
xor
push
mov
xor
xchg
jp
jmp
dec
add
xchg
out
mov
loop
adc
sets
xlat
inc
push
ljmp
test
cs
out
in
dec
fistl
out
xchg
mov
mov
cmp
jmp
cmp
adc
add
inc
scas
stos
mov
adc
mov
xlat
xchg
push
pop
lea
fnstsw
adcl
cmp
inc
push
fwait
int
notl
ss
outsl
mov
aaa
push
cmp
sub
cmpsl
mov
mov
rcrl
mov
ret
aad
adc
jge
inc
xor
sub
gs
mov
adcb
enter
push
adc
mov
lret
fistps
mov
jae
jne
sbb
loope
cwtl
push
sbb
sbb
sub
stos
aam
push
cmp
lock
mov
adc
leave
gs
imul
sbb
add
pop
loop
mov
mov
mov
aam
insl
in
notb
inc
xchg
mov
push
add
in
mov
ljmp
push
cmp
pushf
sbb
sub
ret
jae
test
and
fnstcw
pushf
dec
shlb
mov
mov
mov
mov
push
je
cld
xor
adcl
sahf
fcmovbe
cmc
cmpsb
xchg
add
xor
push
and
adc
daa
pop
pop
iret
dec
inc
dec
fwait
repnz
lods
ja
push
sar
movsb
sar
xchg
mov
jnp
fwait
and
mov
jmp
fbstp
xchg
fbld
rcrb
mov
add
inc
ja
xchg
xlat
ror
test
scas
dec
add
fcomip
in
pop
jb
push
cltd
loope
add
cmp
mov
icebp
test
mov
jp
leave
push
xchg
xlat
pop
in
iret
jns
jge
sub
jns
incl
aaa
xchg
hlt
fists
jo
aad
xchg
iret
addr16
and
popa
lcall
es
sbb
fists
mov
mov
push
rcrl
pop
test
shll
jae
and
dec
xchg
stos
mov
xchg
ljmp
lds
sbb
divb
push
push
or
jmp
fsubl
inc
xlat
dec
leave
cmp
fwait
mov
inc
sbb
fldcw
inc
sub
testb
mov
cltd
xor
pop
mov
sbb
xchg
xchg
xchg
decl
sbb
dec
scas
scas
and
jns
outsl
mov
mov
dec
out
subl
leave
daa
std
xchg
pop
and
cmpsl
ljmp
pushf
fisttps
out
or
jmp
dec
cmpsb
fnsave
nop
nop
xchg
int
sub
dec
xor
mov
lea
or
outsb
shll
repnz
pusha
test
mul
xchg
push
inc
cmp
vmovlpd
and
ds
sbb
jp
dec
pop
nop
mov
sbb
jae
pop
out
xchg
lock
js
sbbl
mov
scas
cmp
adc
aad
lcall
pop
je
ret
mov
jb
jo
out
call
push
mov
inc
roll
push
push
sbb
imul
inc
push
roll
ds
sub
and
repz
push
add
or
ret
shrb
data16
fs
inc
sbb
and
cmpsb
jmp
loopne
cli
lea
pop
add
rcrl
cltd
adc
les
xor
inc
incb
mov
jns
ret
pop
push
bound
mov
fldl
push
es
mov
xlat
stc
aam
loop
lock
test
fs
mov
insb
aaa
rcl
mov
shrb
imul
mov
xchg
and
insl
fs
unpcklps
lahf
cmp
wbinvd
xor
shrb
sbb
mov
and
jp
jno
sub
ficomps
mov
and
jne
cwtl
jge
xchg
cmp
adc
jne
lods
pop
outsl
mov
in
adc
daa
dec
push
imul
in
nop
aaa
xchg
mov
popf
movntq
ret
push
jno
push
push
aad
movsb
push
stc
cmp
xorl
rcrl
mov
lcall
loopne
mov
pusha
daa
push
push
cmp
and
push
adc
sbb
adcb
xor
ljmp
dec
cmp
mov
sub
lret
mov
les
jmp
mov
dec
push
es
add
dec
cmp
cs
dec
out
push
push
jg
mov
insb
cwtl
inc
arpl
lea
in
out
ret
sti
or
dec
movsl
addr16
cwtl
les
ds
rorl
loope
movsb
push
ret
push
lcall
cmp
xor
movsl
xlat
popa
nop
push
je
mov
mov
lea
push
in
in
and
in
fs
mov
in
and
mov
das
cwtl
cmovs
xchg
lock
dec
outsb
adc
jo
and
fadds
das
push
xor
ficoml
sbb
addl
dec
test
outsl
je
inc
or
pop
sub
dec
jae
inc
dec
cmp
adc
std
cmc
out
pop
sub
stos
mov
fistpll
dec
stos
mov
fsubrs
ds
xor
inc
lret
loopne
ljmp
mov
shlb
sub
sub
push
into
daa
loopne
or
mov
push
adc
clc
mov
cltd
js
dec
dec
xor
push
sbb
push
loopne
sbb
adc
popf
popf
pop
sbb
pushf
jnp
or
fwait
jo
sbb
push
fnsave
inc
adc
or
sub
adc
mov
rcrl
gs
filds
call
hlt
insl
nop
addr16
and
ror
push
pushf
test
call
lock
daa
sub
mov
stc
pop
mov
inc
mov
cwtl
mov
fistpl
in
adc
and
sbb
leave
inc
dec
or
dec
mov
test
xchg
dec
sbb
add
ljmp
aam
cmp
bound
movsb
ret
and
fdivl
test
icebp
mov
stos
pop
mov
or
loop
jecxz
jo
jp
inc
sbb
mov
xchg
add
les
hlt
xchg
push
aaa
in
ja
mov
clc
fistpll
cmc
jbe
sbb
mov
mov
xor
mov
out
xor
test
movsb
push
push
inc
inc
adc
mov
pop
movsl
mov
mov
scas
jns
jp
add
xlat
or
int3
sub
xchg
enter
out
cld
and
push
adc
test
enter
dec
push
fcmovbe
or
ret
mov
adc
rclb
push
data16
pop
lock
ds
int3
pop
in
inc
push
or
push
mov
cmp
les
xor
gs
xchg
aad
xchg
push
sbb
lds
pop
scas
mov
sub
sbb
loop
lods
mov
cmp
jge
sarl
xchg
sbb
stc
mov
dec
dec
lcall
cltd
popa
imul
imulb
sbb
sub
add
fsubs
pusha
nop
daa
lods
cmpsb
cli
stos
dec
mov
ficompl
sbbb
gs
dec
jns
jbe
imul
icebp
out
ret
and
add
lods
jmp
cmpsb
dec
adc
fistpl
lret
gs
xchg
lods
ret
rol
or
stc
jns
js
std
imul
gs
jp
aam
repz
arpl
iret
pop
adc
add
js
push
dec
repnz
or
lods
sarl
roll
sbb
sub
sub
mov
push
ljmp
lea
icebp
mov
mov
imul
jo
add
in
in
dec
cs
das
scas
jo
aam
into
movsb
cmp
dec
jg
mov
jmp
pop
les
push
adc
rol
xchg
jnp
mov
les
loope
or
loope
jnp
jns
push
xor
or
and
mov
push
pop
ds
cmp
jle
mov
push
dec
pusha
pushf
pushf
fwait
cmp
jp
scas
fsts
mov
lcall
loopne
dec
shll
push
aad
xchg
jl
gs
repnz
pop
stc
std
sti
ljmp
sbb
into
add
aad
xor
push
sti
in
jg
test
xchg
mov
ret
xor
cmc
or
xchg
lret
inc
lcall
sbb
dec
insb
stos
dec
cld
dec
add
aam
push
lds
mov
scas
cmc
cmp
gs
lcall
adc
inc
jb
and
mov
dec
mov
or
xchg
add
push
push
add
shll
mov
adc
mov
jno
cs
add
sar
mov
ss
pusha
jmp
pop
xchg
rcrb
inc
outsl
lret
mov
mov
dec
pop
test
jns
aad
fadds
xchg
and
mov
pusha
or
or
and
je
test
xchg
icebp
push
cmp
and
cli
scas
out
and
popf
xor
arpl
sub
mov
sub
pop
xchg
ret
repz
pop
adc
push
and
sub
repnz
aas
cmp
mov
sub
ret
pop
repnz
dec
sub
sub
arpl
stc
cmp
jp
sbb
pushf
mov
movsb
outsb
mov
add
imul
ret
add
test
pop
cmp
jg
sub
test
mov
int
xchg
fnstsw
inc
cmp
repnz
shl
pop
cmpsb
mov
dec
mov
add
aas
popf
xchg
mov
ret
lock
jl
xchg
mov
sbbl
jmp
xchg
adc
push
jo
xlat
ja
popa
mov
xchg
lods
jp
pop
or
adc
data16
dec
inc
mov
hlt
push
mov
repnz
dec
rorl
dec
shl
ljmp
pop
xchg
repnz
ret
cmc
bound
rcrl
testb
lret
xchg
dec
push
dec
dec
imul
lret
add
pusha
clc
test
imull
adc
cmp
repnz
sub
and
and
xchg
adc
scas
ljmp
mov
add
sbb
and
pshufw
add
popf
add
mov
lret
test
sti
leave
cmp
sub
cmpsb
movsb
loope
rcrb
fsubrs
cltd
and
xchg
call
sbb
cwtl
push
dec
mov
out
or
sbb
add
jl
mov
cmpl
lret
fs
into
push
lret
ja
lock
mov
add
fnstcw
repnz
mov
aas
clc
mov
loope
cmp
jns
cmpl
loopne
iret
or
mov
mov
xor
mov
fadds
daa
or
test
sub
add
adcl
sbb
pop
and
pop
das
ljmp
testb
mov
outsl
cwtl
lea
in
mov
in
mov
scas
xchg
xor
adc
imul
xlat
mov
imul
loop
or
leave
movsb
mov
add
add
xor
add
dec
in
add
push
push
ss
loopne
and
ss
test
mov
inc
pop
jecxz
push
jl
icebp
jle
dec
and
dec
cwtl
lcallw
pusha
jp
clc
in
lock
jl
popf
andb
sbb
mov
jb
das
and
inc
fisttpl
mov
and
dec
ja
xor
mov
pop
sub
gs
orb
mov
cld
fnsave
jecxz
lret
iret
mov
adc
fldenv
jecxz
scas
call
scas
aas
jo,pn
enter
pop
divl
mov
push
jge
shl
inc
mov
sub
popf
push
sbb
popf
out
je
leave
cmpb
fcmovne
loope
push
aam
lahf
push
adc
fstl
out
and
imul
je
pop
arpl
dec
jp
iret
inc
inc
jnp
movsb
negb
mov
ret
push
icebp
cmpsl
mov
inc
sbb
jo
repz
aaa
repz
mov
dec
daa
imul
dec
sahf
stc
int
outsb
hlt
gs
add
jne
int
idivb
clc
int
push
push
repnz
leave
icebp
pop
cltd
enter
movsb
fsts
stos
mov
aaa
inc
cmpsl
cmpl
sub
iret
mov
rcrb
not
lock
in
lock
rol
cmpsl
cwtl
mov
or
jns
out
scas
mov
jg
ficoms
dec
mov
jb
dec
push
mov
lods
add
pop
xor
pushf
pop
sbb
mov
rclb
mov
sbb
lods
and
jmp
cmp
pop
in
and
inc
pop
insb
jl
pop
lods
or
push
jbe
mov
std
clc
mov
sti
jecxz
xchg
dec
mov
icebp
test
xchg
and
sbbb
push
subl
out
inc
xchg
cmc
js
push
cwtl
sub
cmpsl
or
lahf
pop
sub
cmc
scas
insb
in
repnz
inc
inc
dec
inc
testl
pop
inc
imul
mov
dec
push
xor
adc
ds
inc
and
xchg
sbb
mov
adc
in
inc
stc
dec
xorb
add
adc
add
inc
xchg
pushf
push
scas
push
pop
sbb
outsl
addr16
push
int3
cmp
jge
stos
stos
mov
hlt
or
cmpsb
pop
notl
cld
mov
stos
push
pop
pop
ds
cmpsb
cmpxchg
mov
inc
orb
ja
cmp
cmpsl
fwait
es
mov
cltd
ss
xor
add
mov
test
cmc
arpl
fdivr
mov
cwtl
mov
hlt
push
sbb
xor
mov
pop
daa
fs
pop
mov
aam
fistpll
insl
insb
add
mov
scas
mov
push
lret
les
lahf
je
mov
addr16
mov
out
sbb
movsb
xorl
fnsave
lret
push
fcomip
push
cwtl
and
orl
jle,pt
xchg
fidivs
repnz
adc
mov
xchg
mov
ret
cmp
mov
push
inc
out
xchg
loope
push
push
test
pop
adc
pushf
pop
xchg
je
into
mov
scas
and
in
adc
sbbb
push
in
icebp
push
movsb
jbe
repnz
mov
add
fcmovu
push
cmp
inc
les
stos
jle
mov
push
xchg
add
jo
mov
mov
cmp
push
imul
inc
jno
pusha
aaa
mov
sbb
cmp
dec
pop
sub
in
insb
pop
out
xchg
adc
xchg
scas
imul
in
pop
aaa
xchg
mov
jecxz
enter
popf
popa
inc
jae
fstpt
aas
mov
push
xor
test
pusha
sbb
jbe
fiadds
mov
and
mov
sbb
scas
fsubrl
lcall
int3
cld
jmp
pop
test
stc
movsb
pop
stc
xchg
push
int
push
ffreep
out
adc
jae
test
cwtl
loope
add
jbe
mov
xor
cmp
ljmp
cmp
test
mov
cmp
cs
mov
lret
pop
pushf
mov
pop
xchg
mov
nop
pop
js
add
aaa
mov
dec
dec
fnstenv
mov
icebp
repz
iret
inc
es
sbb
sbb
adc
pop
jb
jns
adc
adc
repz
mov
pop
hlt
andb
in
jo
jb
jp
push
fildl
lahf
in
mov
cmp
mov
je
xchg
stos
mov
data16
mov
cs
xchg
mov
call
adc
lods
pop
sbb
sahf
jnp
jmp
xchg
repnz
lret
clc
addl
dec
xchg
adc
and
xchg
inc
pop
shrl
jmp
xor
jne
scas
imul
lds
xlat
xor
jae
sti
sbb
scas
mov
scas
les
dec
lea
stos
ljmp
xchg
cmp
cltd
es
icebp
mov
scas
aaa
pop
mov
imul
aaa
jg
push
daa
and
dec
sbb
and
lods
xchg
dec
stos
push
pop
stos
fdivrl
or
push
fisubl
mov
out
int3
xor
push
mov
hlt
mov
add
jno
mov
xor
cmp
outsl
insl
popf
scas
mov
leave
rcrl
dec
leave
mov
mov
addr16
loopne
fs
imul
mov
aam
cmp
fisttps
int3
scas
data16
xor
fs
cmp
push
mov
sub
fucomip
int
mov
scas
pop
dec
outsb
loope
sbb
pop
jmp
adc
push
ret
shlb
or
xlat
dec
fwait
ret
push
fcoms
adc
popa
xchg
out
int3
ret
push
js
push
mov
sub
aam
inc
movsb
imull
dec
mov
xor
cltd
mov
sbb
push
sti
jae
mov
jno
dec
movsl
push
icebp
and
pushf
int
jae
push
ss
push
outsb
fcoml
daa
in
sub
loopne
loopne
movsl
shrb
inc
std
mov
es
fwait
adc
out
divb
cmp
lret
xchg
movsl
mov
inc
push
sti
jg
inc
stos
test
outsl
cli
inc
mov
xchg
fst
sbb
xor
add
pop
testb
push
xor
dec
int3
nopl
pop
cld
lods
inc
daa
ficoml
push
mov
xchg
adc
mov
bts
mov
lahf
push
push
xor
sbb
push
push
cltd
ficoml
sbbl
push
sbb
inc
mov
jl
cmpb
ja
add
in
fidivs
xchg
movsl
ret
enter
bound
or
mov
push
rorl
mov
adc
dec
jg
or
outsb
arpl
jle
in
sbb
ret
inc
mov
outsb
clc
cmp
push
cmp
mov
add
cli
fisttps
mov
xorb
sub
adc
xlat
mov
push
pop
sbb
mov
clc
movsl
sbbb
pop
pop
and
inc
rclb
mulb
push
loope
popf
in
addr16
mov
xchg
hlt
enter
ret
xchg
movsl
xchg
repz
movsl
mov
xchg
das
push
pop
aam
dec
xor
std
int3
xorl
dec
push
bound
cwtl
push
pop
mov
adc
pushf
imul
pop
aas
std
push
test
cmpb
fnstenv
orb
pop
std
shll
stos
push
js
xor
cmp
sub
outsl
jno
mov
pop
hlt
xor
mov
es
sbb
test
popa
jle
add
pop
aad
pop
push
notb
shl
xchg
fs
jl
xor
or
leave
adc
mov
add
mov
test
lret
data16
inc
bound
fnstenv
daa
pop
and
movsb
fisttps
mov
test
loope
out
pushf
cld
fs
cmp
mov
ljmp
and
xlat
popf
jl
les
adc
xor
xor
aad
mov
sti
aad
rol
jecxz
jmp
out
cmp
jmp
mov
aad
xchg
mov
cmp
mov
push
push
sub
mov
aaa
faddl
jnp
inc
insb
lea
jae
test
pop
je
rolb
jle
daa
enter
or
push
inc
add
push
xor
ss
sub
and
mov
xchg
mov
lcall
xchg
cmp
insl
fs
lcall
push
cld
push
xchg
xchg
sub
adc
loope
or
fidivs
sbb
push
into
cmp
inc
pop
jle
push
pop
dec
and
cmp
push
rclb
and
fdivl
dec
jo
test
out
fsubl
pop
cltd
out
in
inc
es
inc
xchg
cmpsb
xor
mov
push
lods
mov
inc
je
inc
sub
out
testb
sub
and
imul
mov
into
and
and
in
jecxz
les
and
ja
jl
jne
and
lret
lret
mov
sahf
mov
mov
xchg
and
dec
cmp
out
or
neg
shll
mov
inc
call
mov
loope
int3
push
dec
pop
xor
rorl
movaps
cmpsl
adc
cmpsb
loopne
nop
xchg
loope
movsl
cmpsl
imul
push
push
push
dec
jae
stos
jns
lds
nop
out
push
pop
fisttpll
inc
adc
pop
pop
stos
jecxz
rolb
xchg
mov
inc
insb
pusha
and
xchg
pop
sub
int
subl
out
push
mov
push
mov
jnp
xchg
out
dec
aaa
sub
mov
mov
push
mov
dec
mov
jo
add
dec
xchg
adc
faddl
or
test
rep
insl
sub
inc
jb
jmp
jo
sbb
sbb
jno
add
xchg
loopne
xlat
ja
fwait
jbe
adc
in
insb
push
xchg
add
jmp
jmp
adc
xchg
dec
and
inc
test
mov
clc
das
adc
push
jg
pop
xorb
cli
fimull
lret
pop
pop
ljmp
test
lea
lds
clc
jp
rcrb
inc
mov
pop
aaa
cmpsb
jmp
dec
inc
mov
add
call
push
jecxz
notb
loope
fdivl
jae
addr16
pop
loop
test
test
mov
adc
sti
cmp
imul
loope
out
xchg
adc
sub
jo
mov
cmp
sbb
test
stc
mov
rcrb
rcrl
inc
mov
xor
push
xlat
jmp
shl
adc
adc
pop
or
xchg
pop
pop
dec
sbb
dec
sarb
add
jle
fdivrs
inc
aad
xorl
xor
push
lret
add
fbld
pop
lods
jecxz
sbb
cmp
loopne
dec
push
add
aam
fwait
jl
sub
xor
xor
stos
add
sbb
sub
inc
dec
jnp
lods
movsl
icebp
out
mov
cmpsb
rolb
ja
mov
sahf
sbb
insb
jle
inc
adcb
int
cmovl
pushf
popa
or
out
mov
testb
in
cmp
mov
mov
xchg
lret
sahf
lret
xlat
int3
in
push
pop
jg
xor
shrb
cmpps
inc
inc
mov
aas
add
jecxz
sbb
jo
mov
sbb
fwait
cmp
arpl
adc
push
outsl
add
pushf
call
std
push
pop
xchg
imul
xchg
jb
xchg
cli
sub
adc
movsb
push
std
cmp
cli
ret
mov
movsb
mov
push
dec
pop
pop
xchg
pop
rorl
xor
je
stos
and
adcb
fwait
pop
aad
mov
sbb
xchg
inc
je
cmp
or
rcrb
fldenv
xor
fiaddl
mov
xchg
addr16
cwtl
ficoml
daa
fsts
adc
popa
arpl
shrw
mov
adc
call
imul
scas
cs
sahf
insb
jl
sub
push
ljmp
mov
add
rcrb
cmp
lahf
inc
dec
daa
push
pop
push
mov
fdiv
cs
aad
jno
cmp
nop
mov
dec
mov
and
movsl
sub
aad
xchg
inc
jge
int
push
shl
decb
fcompl
shll
cmp
rorb
sti
ljmp
orb
lret
test
xchg
or
rolb
pop
push
sarl
mov
mov
fdivp
cld
jl
sbb
push
je
ds
loopne
jbe
stos
inc
xchg
inc
sbb
jno
fwait
sbb
cltd
fistps
mov
mov
mov
cmp
cmp
ds
xchg
aaa
iret
lds
cmp
adc
xchg
xor
scas
bnd
push
jp
xchg
int3
ss
lahf
pop
cmc
scas
test
fildl
inc
or
mov
pop
imul
sti
sahf
lods
cmp
in
mov
int
std
imul
rcl
add
lret
lods
add
and
sbb
fs
fld
or
cmp
loope
subl
out
mov
inc
insl
jmp
lret
sub
test
mov
ret
js
add
ja
insl
mov
mov
push
xchg
add
dec
or
mov
pop
shlb
xor
aad
or
adc
mov
std
iret
jae
sub
cmp
es
int
cli
cltd
jbe
dec
jle
sbb
xchg
add
dec
or
mov
in
lret
and
dec
jbe
out
xchg
cmp
dec
add
mov
xrelease
push
mov
fs
icebp
cmp
mov
pop
lret
add
jecxz
push
and
inc
dec
enter
xchg
push
jp
jg
push
outsb
loope
aam
adc
push
loopne
sub
sbb
jecxz
add
jmp
fldl
push
cmp
push
fistpl
lods
leave
fldl
in
jmp
ss
mov
adc
lock
stos
adc
in
or
jmp
arpl
movaps
dec
adc
sbb
arpl
test
insb
lea
orb
push
lcall
test
mov
cmp
dec
add
cmp
dec
xchg
lret
sti
pop
inc
dec
std
xchg
aas
inc
xor
arpl
call
cmpsb
adc
push
adc
xchg
push
inc
mov
or
cltd
inc
mov
into
and
fs
call
nop
test
push
mov
es
cmp
jle
sub
neg
lahf
sub
int3
sbb
sahf
pop
xor
inc
in
faddl
lahf
pop
or
in
sbb
loope
mov
mov
add
lea
add
fldcw
inc
cmp
dec
mov
cltd
and
in
cltd
imul
movsbl
cmpsl
adc
aaa
jmp
xor
lret
fdivs
jp
push
in
loop
sub
push
dec
aam
lcall
or
fwait
xlat
and
xor
ss
adc
xchg
cmp
adc
loopne
adc
mov
int3
dec
adc
xor
cs
sbb
lods
mov
inc
jno
loope
rolb
push
test
pop
mov
add
jne
pop
cmc
scas
cld
rcrb
add
cltd
ja
lods
add
mov
dec
add
mov
jb
fwait
and
dec
lea
mov
mov
ss
or
mov
mov
and
in
ja
in
lcall
mov
ds
add
cli
pop
jge
or
insb
into
fiaddl
push
jecxz
cmp
dec
in
jl
std
pop
rorl
mov
in
subb
jnp
adc
out
lcall
out
in
pop
jl
sbb
jne
mov
jmp
std
mov
push
fnsave
rol
push
fimull
pop
aaa
inc
or
lods
mov
sbb
idivl
stos
das
imul
out
test
orl
inc
mov
jge
or
insl
sub
pushl
mov
idivl
vmwrite
jb
push
push
rcrb
adc
lds
xchg
mov
adc
ja
fsubr
sahf
insb
mov
call
stos
mov
push
xor
sbb
inc
inc
addl
xchg
cmpsl
adc
dec
mov
sbb
test
lcall
jl
inc
push
ret
xor
cli
test
aad
add
inc
pop
mov
mov
stc
and
aam
jp
dec
sbb
sbb
fdivs
pushf
or
dec
mov
cmp
cmovne
cmp
mov
pusha
mov
das
mov
mov
push
add
inc
mov
lret
sbb
pop
mov
test
xor
stos
mov
add
pop
pop
imul
add
adc
in
push
dec
pop
mov
pop
add
insb
mov
cmp
xchg
rorb
fwait
movsl
ret
jnp
fsubrs
and
rorb
add
sbb
xchg
hlt
popf
cmp
icebp
das
rcll
mov
fbstp
loop
mov
mov
cmp
rcl
mov
in
aad
sub
push
sbb
or
add
adc
cmp
int
dec
and
jne
shll
pop
mov
fisubrs
rorl
lcall
repz
xchg
aad
sbb
arpl
jno
test
xlat
outsl
sbb
jnp
adc
loope
mov
or
push
ljmp
aas
mov
mov
mov
or
xor
push
xor
pop
adc
ja
std
lahf
mov
adc
dec
mov
and
cmp
pop
sub
mov
sub
cmp
test
cmp
mov
push
mov
jp
add
and
mov
lock
pop
daa
shlb
cld
xchg
lcall
jno
and
ret
adcb
fistpl
lret
sbb
std
mov
push
mov
repnz
stos
decl
into
lahf
divl
sbb
inc
js
xchg
mov
xchg
or
movsl
stos
nop
or
cwtl
or
adc
stos
outsl
dec
fiadds
push
stos
test
add
gs
enter
adc
daa
push
pop
inc
stc
imul
ja
add
sub
loop
loopne
cli
xchg
fsubrl
pop
in
push
negl
jno
movsl
cmp
xorl
pop
or
outsl
dec
mov
jecxz
mov
jnp
cltd
mov
fistpll
iret
scas
aas
and
push
ss
movsb
adc
aaa
aaa
insl
and
xchg
inc
jmp
xchg
pop
test
jns
cmp
pop
cmp
mov
xlat
sub
cmp
jno
mov
xor
xchg
nop
push
cwtl
dec
add
pop
xchg
xor
rcrb
cmp
pop
mov
or
ror
xor
out
mov
rcr
fucomip
pop
adc
mov
mov
cmpb
ljmp
add
inc
lret
fs
xchg
push
xlat
clc
mov
loope
or
jae
cmp
xor
xor
dec
or
test
pop
xchg
faddl
xlat
lods
push
xor
mov
hlt
cmp
xor
pop
test
rcrl
aas
enter
cmp
nop
inc
sub
xchg
add
aad
pop
movsb
loop
lea
jbe
icebp
pop
jl
pusha
scas
xor
xchg
pushf
sahf
sbb
cmp
lcall
mov
sub
jo
or
loope
mov
out
jl
sbb
mov
push
aaa
outsl
fs
xchg
cs
andb
mov
xchg
pop
int
shrl
mov
in
adc
xor
jo
lret
xor
fisttpl
loope
lret
jbe
inc
and
lods
shlb
pop
jge
stc
cmp
sub
out
and
xchg
pop
mov
stos
and
pop
xchg
scas
int3
mov
mov
or
sbb
xchg
in
sahf
stos
mov
fstl
xchg
pop
cld
ret
xchg
mov
xlat
jmp
pop
das
stos
dec
push
insl
jnp
cmpsb
push
cmp
sbb
addl
inc
rorb
xor
rorl
and
insl
aas
insb
popa
in
jb
das
xchg
pop
pop
sub
cmp
adc
ds
jmp
decb
in
adc
imul
push
in
dec
sbb
and
sar
divb
mov
push
dec
fsubrl
out
jg
mov
dec
mov
push
sub
fwait
test
or
scas
adc
loope
sbb
or
add
inc
fsts
loop
je
push
jo
lret
and
jo
repnz
push
xchg
repnz
mov
scas
xchg
js
sub
jno
scas
xor
jmp
int
call
jae
pop
and
push
xchg
jle
xchg
je
cmp
pop
add
clc
and
xor
sub
stos
mov
push
call
mov
rcr
xlat
aam
cli
ds
daa
jae
gs
rcll
jge
cmp
mov
sahf
add
cmp
lret
mov
or
xchg
add
sub
adc
outsl
mov
push
mov
rol
lcall
sbb
push
roll
or
lret
int
lods
push
in
ss
test
adcl
ret
dec
push
pop
cwtl
ret
sbbb
inc
or
mov
scas
adc
xor
je
loopne
mov
inc
pop
push
aam
data16
rcl
mov
movsb
fisubrs
cmc
enter
ror
add
jg
test
xor
xchg
es
fmulp
clc
push
loope
lret
and
negb
movl
inc
push
fiadds
push
sbb
cltd
lds
push
sub
jg
cmp
sbb
mov
push
das
lods
xchg
dec
in
inc
inc
mov
xor
cmpsl
mov
and
add
sub
cmpsb
sbb
mov
repnz
mov
fstpt
pop
ja
or
subb
mov
mov
cmp
data16
pop
adcl
and
data16
lcall
jb
pusha
push
xchg
pop
rcll
push
xlat
pop
or
mov
fs
sbb
add
or
inc
or
pop
enter
add
xchg
jns
xor
xor
fwait
jecxz
je
xor
jmp
shll
sub
xorb
mov
pop
aad
sub
xor
cmp
inc
push
or
lahf
lcall
pop
pop
jae
adc
cmpsb
repz
mov
xor
sbb
daa
xor
xchg
mov
cmp
arpl
xchg
sbb
loopne
push
pop
xor
fldl
fisubrl
mov
out
xchg
pushf
iret
leave
sarl
repz
jmp
hlt
inc
sub
jb
mov
cmpsl
and
dec
stc
fisttps
xchg
or
test
pop
in
cmp
jnp
inc
adc
inc
and
mov
cs
push
inc
mov
je
cltd
pop
clc
addb
push
sbb
and
shll
dec
mov
into
ficoml
pop
push
insb
push
adc
inc
sub
out
daa
mov
or
aaa
subb
mov
adc
aas
pusha
sub
sub
scas
aas
dec
push
ror
test
stc
shrb
sbb
pop
or
js
xchg
imul
mov
outsl
pop
pop
in
ret
out
loopne
pop
add
xchg
rcrl
pop
sub
cli
es
dec
lahf
imul
cmpsb
cmp
or
jne
inc
lods
adc
push
mov
mov
fidivl
mov
ss
pushf
sbb
aam
sub
adcl
lock
and
push
adc
gs
push
jnp
and
sti
ljmp
jecxz
ficoml
add
or
mov
ret
fdiv
inc
lcall
xor
call
hlt
push
in
mov
aad
inc
push
dec
push
scas
aad
into
pushf
rorl
pop
xchg
mov
rclb
daa
sub
je
in
out
rcll
xchg
jns
into
mov
jl,pn
mov
lock
sbb
mov
int
ja
add
or
lcall
sahf
mov
fisttpl
aaa
mov
cmp
pushf
aas
scas
adc
adc
and
cli
test
or
push
pop
sub
mov
std
jno
jns
shll
adc
sbb
dec
jne
adc
orb
ss
sub
shll
pop
sbb
jg
js
pop
adc
daa
mov
cmp
fcmovbe
push
adc
ss
out
cld
sbb
sbb
out
and
inc
lret
or
sbb
adc
mov
push
jnp
jl
sbb
pop
repnz
add
cmp
inc
lods
ljmp
mov
hlt
jne
sbb
lahf
out
xor
push
add
cmp
mov
int
mov
fsubr
cmp
and
add
inc
cli
fcoml
add
jp
cli
mov
in
out
mov
dec
cmpsl
inc
sarb
add
and
into
cmp
xor
add
jne
into
or
lds
dec
divl
mov
or
out
fildl
fwait
jecxz
sub
cmp
cmp
cmp
insb
mov
cli
cmp
dec
xchg
adc
repnz
jle
sub
dec
sbb
xor
lods
add
push
imul
xchg
shl
pop
in
adc
push
adc
je
push
nop
add
popa
ret
cmp
in
imul
out
mov
scas
inc
push
sub
sarw
scas
mov
and
xchg
pop
aad
mov
ds
scas
adc
xor
push
cmp
daa
dec
mov
bound
sub
int
mul
xor
repz
je
call
mov
and
pop
and
lcall
xchg
inc
scas
in
dec
insb
leave
hlt
push
lret
xor
nop
and
in
lds
inc
addl
dec
mov
repnz
cld
aam
pop
test
sarl
lds
ljmp
outsl
lcall
cli
ffree
roll
jns
ljmp
inc
pop
fiadds
sarb
push
in
in
and
cld
mov
sbb
add
rep
jp
sbb
test
pop
ljmp
cs
pop
mov
faddl
loop
mov
jmp
cs
cmp
and
shll
int
sbb
leave
out
fwait
enter
je
mov
ret
imul
and
out
cs
xchg
and
xor
es
or
mov
inc
add
inc
sbb
adc
jecxz
ljmp
faddl
aad
je
addr16
pop
fimull
iret
clc
push
insl
rcrb
jl
push
mov
mov
std
xlat
addr16
int
add
xchg
ss
clc
int3
sub
jp
push
iret
jmp
outsl
pop
out
xor
mov
pop
jbe
test
ret
test
xchg
push
mov
jecxz
mov
inc
cs
jne
ds
xchg
in
ret
cs
lahf
dec
je
lods
test
mov
insb
shlb
pop
iret
leave
mov
xchg
les
inc
mov
mov
mov
into
mov
mov
shlb
jae
xorl
xchg
jno
jne
adc
mov
sub
fimull
sbb
mov
xchg
aas
mov
sahf
push
fucomi
in
sub
out
mov
adc
xor
aaa
xchg
adc
and
jmp
and
jnp
mov
inc
xchg
push
mov
negl
add
xor
fnsave
xlat
jnp
decl
adc
jp
inc
shll
dec
cmp
mov
aam
lds
xor
imul
adc
frstor
mov
aam
dec
cmc
mov
dec
outsl
jp,pt
clc
dec
dec
ret
or
les
popa
and
adc
or
mov
in
lods
cmpsb
in
pusha
lods
rclb
sub
sahf
cmp
pushf
pop
adc
mov
int
aad
xchg
out
push
enter
jae
roll
inc
sbb
test
push
out
jle
jmp
sub
adc
mov
cmovno
cmp
dec
jnp
and
xchg
sarb
sub
lds
mov
mov
mov
sbb
stos
cmp
inc
or
mov
int
xor
addr16
ret
jns
movsb
mov
ret
daa
sahf
fisttpl
mov
out
push
addr16
loopne
std
mov
cmc
jo
and
rorl
cmp
shlb
sbb
lret
adc
mov
std
mov
mov
push
push
adc
adc
jp
xchg
aas
in
pop
sub
mov
fisubs
insl
sbb
rclb
jo
sbb
sbb
les
aad
jb
test
jbe
sahf
fld
filds
xor
push
movsl
jbe
ret
inc
imull
or
push
in
adc
mov
mov
adc
lret
pop
in
ljmp
pop
cmp
mov
mov
subb
push
adc
popa
lods
and
icebp
sahf
aaa
cmp
in
sub
jle
aad
xchg
push
xchg
sbb
pop
add
ljmp
or
cmpsl
stc
cmp
in
pushl
sbb
mov
fstps
outsl
cmpsl
fwait
es
hlt
mov
ret
imulb
or
in
ret
push
inc
pusha
pop
pop
sbb
push
xor
gs
lea
shlb
lcall
push
stos
loop
outsb
sub
xchg
call
call
mov
js
cmp
push
and
outsl
in
insb
pop
pop
loopne
xor
idivl
mov
mov
fiaddl
jno
mov
filds
mov
add
mov
mov
mov
push
push
rol
cmp
pop
mov
ja
popf
fs
mov
imul
mov
xor
mov
ja
fisubrl
add
les
fdivrs
dec
fmul
adc
sub
aas
mov
push
dec
sbb
roll
push
xor
mov
lods
cltd
mov
repnz
movsb
testb
adc
mov
mov
fidivl
xchg
xchg
jp
and
adc
jmp
aam
xchg
xor
cmpsl
daa
inc
movd
scas
xor
les
add
andl
arpl
lretw
dec
inc
mov
repz
inc
inc
in
adc
rcr
notb
mov
lods
hlt
popa
xchg
inc
out
pop
insb
popa
xor
call
into
jg
popa
lahf
or
sbb
loope
push
sub
xor
sub
mov
ja
or
leave
dec
flds
push
jns
mov
cwtl
aaa
std
jae
enter
mov
mov
pop
sbb
shrl
adc
sbb
dec
stc
sti
aaa
lds
hlt
jmp
lret
stc
or
jo
push
rcr
movsl
fadd
in
lret
pop
inc
inc
dec
cltd
daa
inc
push
cmp
mov
mov
stos
loope
cmp
mov
dec
and
mov
inc
pop
jle
mov
pushf
or
cmp
sahf
sahf
pop
es
out
stos
out
cltd
xor
gs
adc
cmpsb
xor
ret
shlb
sbb
sub
inc
sub
jge
lea
insb
aam
lods
push
sbb
outsb
shl
dec
or
inc
sbb
and
mov
cmp
mov
test
mov
jns
adc
xor
cmp
jle
test
xchg
cmp
or
sarl
adc
sbb
mov
adc
ljmp
leave
pop
je
cltd
xlat
gs
bound
testl
and
mov
sbb
mov
ja
xchg
mov
add
xor
fstps
dec
out
in
adc
insb
dec
add
fwait
lock
pop
mov
cli
mov
jnp
sti
mov
xchg
enter
mov
jp
jmp
cmp
xlat
sbb
sar
testb
jns
stc
and
loopne
push
int
int
scas
sarl
mov
inc
mov
xchg
inc
int
mov
pop
aad
in
dec
out
mov
outsb
xor
xchg
lret
movsb
lahf
sbb
push
mov
cmpsl
std
fnstsw
pop
fidivrs
mov
adc
add
test
stos
mov
sti
pop
inc
push
jne
cmp
jmp
xchg
sub
jge
rorb
mov
rclb
movsl
ljmp
mov
movsb
sub
in
jb
sbb
jecxz
sub
cmpsl
lea
mov
push
push
push
dec
jb
inc
jge
pushf
adc
loop
pusha
jnp
pop
cmp
dec
push
fildll
in
dec
aas
push
fldl
fimull
push
mov
sub
stos
dec
cmovne
stos
insl
mov
and
stc
clc
test
mov
xchg
sub
mov
mov
int3
insl
lods
lods
or
mov
mov
sahf
cmpsb
mov
nop
push
push
rcrb
mov
adc
or
dec
clc
xchg
into
sub
les
rcll
jne
mov
out
notl
push
insl
mov
xor
popa
jg
outsb
jae
cmovb
xchg
and
arpl
call
mov
mov
das
movsl
int
push
xchg
adc
fcompl
mov
and
jne
xchg
clc
dec
adc
ret
xor
out
dec
stc
xchg
cmp
xlat
mov
push
jb
sarb
jmp
cltd
add
repnz
sbb
xlat
outsb
jae
rolb
inc
out
dec
cmpsl
dec
cmp
in
cltd
sbb
or
dec
cld
jmp
cmp
adc
xchg
or
enter
cld
pop
cltd
jg
dec
ret
ja
mov
sbb
fnstenv
out
or
and
cmc
push
call
xchg
lock
add
out
pop
jmp
fistpll
fidivs
movsl
mov
inc
pusha
push
xchg
push
jno
shlb
in
lods
or
jle
add
mov
stos
leave
lock
xchg
inc
loopne
xor
xor
sti
push
fs
mov
adc
fisttpll
rorb
cmp
mov
push
jne
xlat
das
pop
out
jno
sbb
test
mov
popa
fsubr
mov
hlt
movsb
mov
sub
dec
jne
ret
inc
int3
repnz
mulb
push
rcrl
mov
mov
loope
outsl
xchg
test
cmp
xor
rcrb
cmc
flds
xor
je
jp
mov
pop
add
cmp
call
loopne
jnp
lahf
sbb
sar
in
cmp
dec
clc
xchg
test
out
inc
stos
rcrl
add
sub
ret
aad
ret
inc
out
adc
mov
ret
mov
es
rorl
jg
aad
sub
js
fstps
movsl
mov
and
jb
repnz
xor
mov
push
jmp
push
stc
ja
dec
cmpsb
sbb
jae,pn
out
ficomps
adc
rorb
or
stos
pop
fistps
mulps
pop
jmp
mov
lret
mov
icebp
test
es
out
ljmp
xchg
mov
cwtl
scas
addr16
dec
lock
dec
orb
popa
jg
pop
loopne
icebp
push
jle
stc
nop
lods
pop
std
pop
mov
les
xlat
scas
jne
pop
pusha
adc
jmp
push
loopne
shlb
or
cltd
xchg
sbb
sbb
pop
pop
sub
test
mov
cmp
cmp
mov
fsubl
and
in
cmp
or
mov
dec
shrl
fsubs
stc
inc
or
movsl
add
and
adc
xor
xchg
push
cmp
jp
push
bound
dec
jne
cmpl
jae
cwtl
jb
push
outsb
aaa
fwait
mov
imul
mov
jne
and
addr16
sbb
xor
mov
sbb
fmuls
mov
and
push
push
sub
fisubrs
jnp
call
push
dec
inc
add
xchg
loop
imul
lods
pop
mov
dec
jge
mov
or
sbb
mov
xchg
leave
mov
nop
fmull
test
mov
sub
pop
mov
cmc
ljmp
nop
stos
int3
insb
and
add
out
sub
mov
lcall
add
jns
inc
add
and
cmp
lea
cmp
and
xlat
xchg
cld
cmp
aam
int3
xchg
ljmp
cmp
cmp
add
xchg
mov
stc
push
jb
push
jnp
pop
movsl
mov
stos
sub
cli
and
add
rep
xchg
sbb
xchg
in
dec
sub
fcomp
out
int
sbb
sbb
fimuls
je
orl
loopne
mov
sub
sbb
iret
and
in
mov
lret
push
mov
jp
aaa
cmp
or
icebp
lea
adc
cmpsb
pop
xlat
mov
mov
loop
cmpsl
scas
mov
in
ds
mov
es
call
pop
jae
out
push
mov
pop
xchg
cmpl
sub
jno
lahf
aas
dec
inc
sub
mov
jo
mov
add
shl
rorl
adc
aaa
pop
push
sub
mov
jno
or
mov
mov
daa
mov
daa
out
lods
dec
dec
cmp
pop
cmp
mov
xchg
fmul
adc
pop
rclb
mov
ljmp
leave
lods
das
push
out
movsl
ret
movsl
pusha
xor
repnz
inc
pop
mov
pop
push
lret
fs
faddl
test
xchg
xchg
fidivrl
sbb
pop
cmpsl
add
inc
sbb
mov
or
scas
sbb
pusha
cmp
mov
xchg
stc
je
pop
out
je
push
imul
sbb
lods
mov
cs
push
addb
jo
cmc
ljmp
loope
or
jno
inc
cmp
test
mov
add
cmp
add
incb
rcrb
adc
sbb
adc
insb
mov
adc
in
test
add
sbb
mov
mov
pop
outsl
push
mov
es
idivl
adc
jg
inc
dec
and
dec
fsubrl
pop
cmc
ret
outsl
insl
lret
push
xlat
enter
push
pusha
xor
jno
je
push
int
arpl
sti
jae
add
and
push
lret
xchg
sub
ret
sub
xor
jp
mov
test
repnz
sbb
loop
lcall
and
and
or
daa
mov
loop
sbb
sbb
adcl
and
ljmp
sub
aaa
or
das
jo
push
ret
hlt
scas
mov
fildl
bound
jb
mov
cli
mov
pop
mov
push
scas
push
and
push
xchg
jge
fcompl
sub
mov
xor
xlat
test
into
xlat
pop
pop
sbb
mov
or
pop
jne
inc
add
jle
call
lret
lret
mov
cmp
dec
jnp
das
jb
stos
mov
xor
push
or
inc
add
nop
stos
mov
dec
mov
or
cmp
imul
lea
or
lds
rcrl
push
in
xor
daa
jecxz
sbb
push
add
sbb
cmpsl
cmove
adc
rcrl
nop
je
fldcw
cltd
or
insl
cmp
push
outsl
mov
cmp
cs
add
scas
sub
pop
pop
incb
add
dec
mov
stos
rcl
ss
test
jmp
xchg
test
jbe
push
subl
imul
bound
sbb
subl
lret
cmpsl
cli
cmp
cmp
sbb
push
adcb
popa
cs
imull
repnz
sbb
push
je
pinsrw
push
cmp
rolb
cli
add
bnd
dec
mov
mov
mov
or
cmc
js
testl
outsl
sbb
mov
sub
leave
push
ret
mov
mov
sbb
test
cmpb
sub
movsl
sahf
loopne
sub
mov
push
out
cltd
or
cmp
popa
and
enter
aas
pop
pop
es
fwait
jae
ret
push
arpl
xor
jg
bound
dec
add
xchg
jp
cmc
sub
dec
jp
sub
leave
fs
jle
outsb
pop
stos
mov
sub
fcmovnu
pop
shl
sahf
xor
adc
add
test
pop
loop
jns
ret
mov
in
cmp
dec
add
xchg
mov
xchg
dec
inc
enter
lahf
or
cmp
test
inc
push
fnstsw
int3
jbe
gs
sbb
pop
sub
in
sbb
ds
test
xchg
testb
mov
xchg
orb
sub
cmpb
pop
jle
fnstcw
mov
jl
std
inc
sbb
cmpb
sbb
jecxz
sbb
mov
pop
in
outsl
dec
pop
gs
jo
mov
and
pop
jns
inc
jno
push
test
mov
dec
aaa
pop
push
pop
dec
xor
loope
jae
sbb
adc
mov
inc
jb
cltd
js
std
sub
cmovo
test
inc
ret
stos
mov
add
cld
dec
or
lret
ret
xchg
and
hlt
data16
cmc
adcl
lahf
push
js
aaa
aaa
movl
jbe
nop
cs
push
jge
inc
and
data16
jne
aas
jae
xchg
pop
sbb
mov
adc
mov
pop
push
outsl
adc
push
mov
loope
push
mov
mov
mov
xchg
les
mov
adc
pushf
add
or
nop
es
imul
push
pop
mov
cld
xor
inc
push
rcll
dec
jmp
popf
lods
xchg
rolb
or
xchg
and
mov
idivl
aad
mov
mov
jae
ss
mov
mov
jo
inc
and
sbb
pusha
adc
nop
mov
mov
into
sub
add
out
mov
lock
pop
xchg
out
inc
jnp
lods
lret
cmpb
jl
xorb
pop
push
push
mov
push
xchg
and
mov
leave
ds
sub
fldt
jnp
cltd
cwtl
movsl
stos
push
imul
push
int
mov
and
cmp
mov
adc
or
popa
shr
test
insl
and
push
or
push
testb
mov
lret
pop
cmp
sti
inc
adc
cmc
push
test
aam
mov
aas
xchg
pop
mov
cli
js
add
movsl
filds
pushf
mov
and
je
dec
dec
sub
sahf
and
or
add
aam
push
nop
mov
movsl
push
push
dec
idivl
das
push
shll
rcrl
and
outsl
or
fists
push
pop
stos
dec
mov
cmp
push
addr16
cmp
popf
sub
push
dec
insl
and
mov
fiadds
inc
xor
andb
sub
mov
mov
sbb
inc
xor
out
dec
sbb
mov
push
clc
addr16
je
and
sbb
in
popa
dec
xchg
pop
add
inc
push
test
dec
push
imul
stos
pop
mov
idivb
daa
jne
insl
mov
xchg
adc
or
push
mov
shlb
add
mov
and
cmp
mov
in
or
push
jb
xchg
outsb
cmc
or
push
scas
aaa
adc
sub
xchg
mov
dec
popa
adc
in
aad
lret
andb
mov
add
and
pop
ds
pushf
cmpsl
test
push
dec
mov
jecxz
repnz
or
pushf
inc
sbb
or
and
xlat
sub
pop
repz
rcrb
xchg
shl
fmuls
cmc
xlat
dec
pop
push
mov
jnp
xchg
inc
lcall
push
xchg
cld
pop
ret
sahf
mulb
inc
mov
sti
scas
jno
sti
hlt
shlb
mov
jmp
aam
adc
cmpsb
in
mov
cmovns
xchg
loop
cmp
xchg
pop
xchg
repz
jge
push
push
and
cs
fiadds
sub
mov
mov
and
or
push
cmp
cmpsb
mov
fidivrl
test
pushl
xor
push
xor
dec
inc
xor
and
mov
call
cmc
jle
jno
cmpsb
mov
mov
das
sub
xchg
push
sbb
sub
push
pusha
mov
popf
filds
ret
iret
mov
and
outsl
fistl
loopne
sbb
mov
jns
adc
out
add
lahf
inc
xorb
sbb
insb
test
fiadds
movl
or
bndldx
cmpsb
call
xor
nop
sbbl
lock
lcall
mov
cs
lret
inc
icebp
or
jl
sub
jl
adc
clc
mov
inc
xor
cwtl
mov
daa
insl
mov
jecxz
adc
push
and
hlt
repz
dec
aam
xchg
or
xor
dec
out
push
jg
ja
adc
pop
cmp
int
and
test
ds
das
js
sub
or
cli
sub
pusha
cmpsl
lock
sbb
ficoms
or
jne
inc
lock
pop
inc
das
lock
mov
or
push
xor
cmovge
or
pusha
cmp
jmp
jnp
nop
sub
hlt
test
mov
pop
push
iret
jl
mov
jg
or
cwtl
xor
dec
mov
sub
fnstenv
mov
mov
jg
xor
scas
mov
fldt
and
push
stos
pop
cmp
idivb
call
sub
test
sbb
xchg
and
jns
cld
inc
xchg
pop
mov
or
aad
dec
int
add
xchg
repnz
icebp
and
mov
aaa
fists
subb
outsl
jle
xchg
cmp
sub
adc
xor
ret
add
sahf
sub
lret
mov
xchg
mov
adc
push
repz
dec
jecxz
push
cs
aad
imul
xor
sahf
mov
call
sub
push
sbb
bound
sbb
outsl
add
pushf
js
testb
fcoms
jmp
in
adc
xchg
data16
pop
or
mov
ret
sub
std
mov
sub
jo
fwait
sbb
in
mov
clc
add
push
mov
jne
xor
stos
dec
pop
int3
mov
sbb
mov
int
jbe
sbb
outsl
in
scas
xorb
xlat
adc
out
pop
jmp
push
mov
push
cmpsl
mov
sub
inc
pop
loope
mov
sahf
xchg
adc
sbb
loopne
scas
daa
sti
jle
xchg
push
insl
cmpsl
aam
adc
imul
in
and
jg
and
add
incb
dec
adc
inc
in
and
iret
and
and
inc
mov
stos
ficompl
jbe
ret
pop
push
arpl
mov
fldt
out
sbb
into
dec
rclb
mov
or
xor
daa
xchg
push
rorl
subl
subb
pushf
add
and
imul
or
cmc
cs
sbbb
xchg
and
shl
xchg
popa
xchg
hlt
jecxz
push
out
loop
adc
inc
push
mov
pop
cwtl
lds
lret
xor
rclb
and
jge
xor
sub
je
cmp
les
or
mov
push
mov
cmp
xchg
push
mov
flds
rolb
jge
xchg
outsl
add
push
cmpsl
xor
mov
hlt
cmp
xor
xchg
inc
loop
jnp
fs
arpl
sbb
or
push
jb
mov
cwtl
xchg
adcl
add
dec
movsb
cmpsl
insb
adc
and
bound
jbe
dec
sub
hlt
lret
rol
lcall
xchg
lret
sbb
lea
fisubrs
mov
adc
outsl
dec
idivl
cli
inc
adc
xchg
das
sub
mov
push
outsb
loope
jbe
push
xchg
sub
pop
xchg
push
mov
push
lret
test
dec
or
rol
pop
dec
inc
sub
dec
mov
xlat
es
fs
ja
das
or
lahf
and
mov
inc
test
inc
arpl
xchg
jge
xor
xchg
orb
lods
jl
in
rcrl
dec
std
mov
inc
nop
std
xor
and
or
and
push
fwait
jp
jo
adc
xor
push
cli
outsb
mov
jl
std
fs
mov
xchg
pusha
mov
jo
fmull
pusha
scas
add
sub
pop
push
xchg
in
pusha
add
fidivs
xchg
das
sub
das
popf
and
sub
fisubl
pushf
or
in
ffree
and
inc
imul
add
cmp
notb
xor
jecxz
xchg
int
jnp
cwtl
mov
lret
sbb
pusha
icebp
loope
ficompl
pop
out
jl
stos
push
xchg
loope
jg
and
or
movsb
cli
or
dec
xorl
jge
mov
xor
lea
xchg
push
mov
cltd
loope
add
jno
repz
arpl
cli
clc
push
push
js
pop
leave
mov
pop
outsl
mov
sar
pop
jb
test
out
and
push
and
add
jp
sbb
dec
inc
add
outsl
inc
and
sub
jge
pop
push
xlat
out
xor
fwait
inc
xchg
ffreep
cli
mov
jnp
scas
sub
mov
jg
pop
std
enter
mov
jnp
add
pushf
jnp
mov
pop
cld
mov
and
lret
mov
xlat
and
scas
ret
mov
mov
mov
iret
and
xchg
xorb
xchg
cmp
dec
jae
and
cwtl
or
lret
pop
mov
jae
std
in
into
sbbb
into
inc
fisubrs
fldenv
inc
add
jb
jnp
jbe
push
icebp
mov
cwtl
jnp
inc
dec
jo
dec
sbb
and
sub
imul
rolb
push
mov
mov
outsl
fucomi
push
lods
push
testl
pop
jl
cli
pop
mov
ja
lcall
test
fdivrp
cld
push
negb
xchg
hlt
mov
xchg
rcll
in
fsts
xor
lcall
jp
inc
enter
fildl
aad
mov
push
data16
icebp
and
or
pop
test
nop
mov
mov
lret
enter
incb
xor
mov
into
cli
cmpsb
pop
testb
inc
xor
xor
xlat
imul
data16
pop
mov
or
out
cmp
clc
lret
push
mov
mov
lods
popa
push
dec
shrl
stos
jmp
in
cli
lods
mov
pushw
add
jne
into
push
push
in
faddl
pushf
inc
xchg
scas
jns
mov
push
mov
divl
movsl
stos
xchg
push
push
mov
sbb
inc
sti
and
lret
cmp
push
sub
roll
test
popa
push
push
insl
sub
and
cmp
aas
arpl
imul
add
add
ljmp
push
mov
sahf
push
stos
push
push
mov
adc
add
add
jge
pusha
xor
neg
repz
jo
rol
sbb
add
imul
mov
pop
xchg
cmp
es
mov
lea
push
and
pop
out
jno
xlat
xor
enter
or
scas
call
repz
lahf
out
cs
xor
hlt
fldenv
cmp
sbb
mov
insl
or
mov
leave
cmc
and
test
ret
cmove
xchg
jl
fldt
add
pop
or
cmp
imul
or
aad
aaa
fistpl
daa
popa
mov
jmp
movsl
inc
aaa
or
inc
inc
lods
pop
adc
insl
xchg
xchg
jae
mov
sub
cwtl
sub
hlt
push
scas
adc
dec
insb
xor
test
jbe
test
sub
aam
call
cmp
pop
mov
ja
fwait
push
ret
add
mov
and
and
stos
xchg
push
negb
push
mov
cmp
pop
xchg
cmpsl
cmpl
repnz
shrl
pop
mov
and
or
mov
xchg
push
xor
adc
cmc
jne
push
ss
lret
dec
fldenv
rorl
sahf
stos
push
in
xchg
scas
sub
outsb
addr16
cmpl
and
outsb
mov
and
in
lahf
cs
and
mov
mov
mov
fs
xlat
xor
and
ret
jge
mov
mov
xor
mov
and
cld
scas
cld
nop
mov
sbb
daa
cmc
icebp
mov
cmpb
mov
dec
sbb
push
arpl
push
add
jmp
sub
out
lcall
ret
arpl
push
rcrl
push
pop
repnz
stos
stos
stos
js
xor
add
sub
and
out
mov
inc
cli
insb
jae
das
jle
jg
adc
push
aad
fiaddl
mov
out
aaa
ljmp
xchg
fwait
ss
dec
loope
lods
and
add
cmc
mov
or
add
xor
mov
sahf
int
data16
imul
sbb
pop
dec
mov
jmp
ds
jmp
xchg
ljmp
xchg
ljmp
sbb
sbb
inc
jmp
stc
aam
jb
pop
adc
pusha
sbb
enter
outsl
inc
adc
imul
cmp
and
fs
es
jns,pn
cmp
mov
loopne
test
adcb
lret
outsl
pop
jae
inc
cmp
push
imul
jne
lret
out
lret
sbb
sarl
jl
push
bound
cmpsb
lds
ficompl
aad
mov
sbb
ret
xor
in
xchg
notb
jp
je
mov
inc
push
mov
xchg
sbb
jl
add
dec
iret
jmp
mov
rclb
jno
xorl
out
jae
jo
dec
inc
pop
mov
leave
or
pop
sbb
shl
sbb
adc
mov
call
orl
mov
sti
push
decb
jmp
aaa
cmpsl
cmp
cmp
jmp
or
out
pop
imul
cmp
test
int
loop
fsubs
dec
add
pusha
cld
jg
cwtl
mov
cmp
and
int3
shlb
push
jl
cmp
test
cmp
ljmp
xchg
out
std
in
sub
shl
fidivs
xchg
jmp
inc
jle
imul
pop
or
xchg
dec
dec
pop
cmp
popa
jns,pt
aas
sub
cmp
mov
stos
ret
xchg
or
xchg
loope
push
mov
addr16
xchg
imul
pop
aad
insb
sub
cmp
jge
xchg
insb
aaa
jno
inc
aaa
or
mov
jne
jo
arpl
in
frstor
and
dec
inc
mov
fstpt
into
jo
jb
orl
sahf
pushf
aas
dec
aad
add
and
in
xchg
leave
mov
xor
ret
and
loop
jecxz
loop,pn
pop
dec
sub
push
mov
push
ret
mov
sbb
mov
aaa
mov
push
iret
stos
mov
or
inc
pop
mov
test
movsl
mov
xor
inc
test
ficoml
sub
sub
pop
or
xchg
push
or
pop
ja
loope
test
push
cmp
sub
adc
enter
dec
call
sbb
mov
in
sbbl
inc
ret
or
fstpl
aas
inc
hlt
adc
sbb
push
push
adc
mov
or
les
int3
xchg
lahf
adc
mull
outsb
cmp
mov
dec
xchg
je
outsb
inc
loopne
and
or
mov
popa
loope
push
js
popa
jmp
xchg
and
shrb
movsb
cli
sarb
outsl
add
daa
out
lods
or
dec
push
pusha
cmp
add
in
cmpsl
cmp
cmpsl
ret
cwtl
les
jb
shlb
loope
push
js
inc
add
or
push
mov
ficompl
aam
jmp
lcall
jle
arpl
dec
js
pop
mov
sub
fbstp
data16
mov
sbb
sbb
mov
jo
jbe
imul
gs
xchg
lret
cld
inc
sbb
jmp
aas
mov
popa
pop
or
ret
jns
jae
xchg
pop
cwtl
outsb
cmc
adc
xor
cli
or
stos
inc
cmpsb
xor
jnp
test
cmpb
stc
push
mov
xchg
cld
jo
dec
mov
inc
psubsw
cmp
outsb
out
aad
mov
lods
je
jb
xor
cmc
adc
and
data16
adc
adc
sbb
shrl
inc
mov
negl
in
movsl
jp
jne
jnp
jle
xchg
jle
mov
fsubs
pop
int
out
fldcw
lock
ficoml
or
sub
dec
divb
shlb
inc
rcrb
test
jp
movups
mov
jne
pop
sbb
sbb
adc
adcb
aas
pop
dec
out
mov
dec
xchg
push
jmp
xor
dec
les
cmc
mov
call
mov
sub
pop
mov
jb
aam
negl
cli
lret
lock
sbb
or
mov
cmpsl
mov
sub
test
movsb
fisttpll
and
test
loop
leave
out
adc
scas
out
mov
or
arpl
lcall
imul
or
cwtl
xchg
rcrb
xor
fcomp
inc
mov
cs
and
lcall
ja
push
xchg
into
adc
cltd
popf
dec
stos
mov
mov
cmp
xor
mov
movsb
lret
push
lods
mov
fstps
push
fwait
mov
or
push
dec
hlt
or
xchg
xor
and
adcb
pushl
mov
loope
sbb
clc
cmpsl
bound
sub
mov
inc
jmp
jg
and
and
mov
sbb
sahf
push
sbb
subl
sbb
sahf
mov
xor
adc
pop
lods
jne
sahf
cltd
rcrl
lock
lret
dec
gs
adc
or
pop
aas
and
xchg
mov
dec
or
mov
cmp
add
adc
lock
cmp
fiadds
push
sub
pop
inc
mov
push
cmp
mov
rep
je
loope
push
test
hlt
adc
mov
sbb
adc
mov
sub
push
pop
test
rep
sub
bound
fnstsw
push
sbb
sbb
inc
add
xlat
rolb
or
pop
pop
dec
mov
js
andw
mov
aam
mov
sub
xchg
jne
sbb
repnz
sbb
xor
jmp
ret
addr16
cltd
sbb
cwtl
std
in
mov
push
xchg
or
fcmove
mov
inc
jp
sbb
data16
mov
sahf
test
jg
aas
cld
decb
and
lods
cmc
daa
xchg
sub
mov
shll
jbe
loope
pop
imul
dec
pop
in
cmp
stc
int
push
and
daa
movsl
jge
hlt
jmp
test
inc
jo
sbb
cmp
jbe
iret
jge
aas
pop
pop
sbb
mov
dec
aaa
jbe
in
pusha
or
mov
scas
bnd
out
outsb
xlat
or
jae
rorl
adc
gs
mov
mov
idivl
nop
adc
push
rcll
and
vminps
lret
movl
xor
jo
inc
jnp
inc
add
lds
fists
rcll
xor
mov
nop
jp
outsb
test
popa
enter
fistl
int
addr16
dec
push
adc
and
cmp
scas
or
adc
jnp
fdivp
aad
push
sar
push
xchg
push
lods
cmc
cwtl
and
push
fmull
enter
fldl
lcall
pop
xchg
jbe
dec
push
ja
lea
ficoml
flds
dec
les
fcmovbe
clc
xor
mov
inc
inc
xchg
xor
mov
int3
lods
or
jl
and
pop
push
out
cmp
xor
lock
push
and
xchg
rcrb
iret
add
aas
mov
xor
lcall
mov
or
add
mov
pusha
popa
ds
mov
pop
mov
cmpsl
sbb
jbe
icebp
call
sti
jecxz
scas
jno
fisubs
xor
xor
test
xchg
rcl
addr16
pop
dec
jns
shl
test
fisttps
arpl
push
add
and
or
ds
inc
gs
rorb
pop
test
call
icebp
mov
std
and
cmp
das
cmp
add
fs
dec
pop
iret
pop
outsl
xor
push
push
insb
xlat
jl
cmpsb
sti
sbb
mov
add
mov
mov
inc
push
xor
or
push
cwtl
push
adc
into
aas
adc
aam
out
insb
add
std
mov
mov
and
add
jne
call
rolb
sub
mov
xchg
out
mov
dec
cli
int
scas
add
inc
leave
into
icebp
jl
pop
mov
inc
shll
push
and
dec
mov
xchg
mov
popf
xor
cmp
push
in
push
adc
insl
cmp
jno
push
lahf
lcall
movsb
sub
mov
je
xor
inc
loope
fnsave
sub
fs
out
js
xchg
push
mov
mov
mov
dec
insl
pop
mov
stos
mov
xchg
int
and
cltd
and
movsl
sbb
ja
bound
cmc
das
dec
movsb
or
xlat
sub
inc
push
pop
jbe
add
popf
pop
cmp
in
pop
and
sub
mov
inc
stc
stos
mov
rcl
xchg
cmp
mov
sbb
mov
jno
cmp
jae
aam
jno
jle
pop
xchg
and
xor
testb
mov
out
das
int
dec
pop
imul
cwtl
jg
mov
aas
and
xchg
loop
sbb
sub
outsl
mov
popf
pop
loop
cwtl
pop
clc
pop
push
adc
ror
and
add
cmpsb
mov
ja
dec
cmp
xchg
fsubs
and
cmc
icebp
sarl
xchg
addr16
sub
jne
adc
lahf
shlb
pop
add
inc
sbb
dec
push
jmp
stc
xlat
test
clc
xor
push
sbb
push
inc
mov
add
cli
mov
faddl
mov
jge
xchg
nop
sbb
sub
into
pop
mov
pop
popf
push
sbb
insb
xor
jle
or
pop
pop
subb
jb
movsl
xor
dec
mov
jno
and
cmp
xchg
cmpsl
lds
pop
testl
imul
cmpsb
jnp
fmuls
and
pushf
xchg
and
dec
repnz
out
ret
shrl
xor
dec
je
jo
lret
hlt
sbb
or
inc
cld
gs
imul
pop
and
and
outsl
sub
xor
ret
ss
lret
fdivs
std
out
pop
inc
or
ss
xchg
mov
nop
repnz
xor
sub
fs
jp
xchg
sbb
fstl
filds
repz
pusha
repz
and
jecxz
mov
add
xor
cmp
push
adc
mov
jl
inc
jb
jno
cmc
mov
jmp
inc
or
push
into
lret
leave
lea
push
mov
xor
sub
xor
xchg
call
or
je
and
mov
sbb
push
mov
xor
lock
ds
xor
jmp
mov
stc
xor
movsl
adc
push
movsb
mov
outsl
iret
cli
stos
int
sbb
in
dec
test
or
fstpt
rcrb
sahf
xor
pop
sahf
out
aad
push
mov
jne
aad
sbbl
fs
gs
shlb
dec
aad
test
mov
xor
jno
xchg
loope
stc
inc
jae
mov
lods
lcall
sbb
lcall
scas
cwtl
mov
jmp
xchg
popf
mov
testb
xlat
popf
arpl
add
int
jae
mov
filds
fcomp
push
add
stc
xlat
loope
in
push
mov
into
test
jle
and
mov
add
aas
stos
pop
mov
dec
pop
push
mov
popf
dec
mov
scas
dec
ret
testl
movsb
fwait
xchg
dec
stos
cmp
pop
stc
push
popf
cmp
mov
fdivrp
jo
jl
pop
shlb
add
dec
jnp
andb
mov
shlb
insl
ds
xor
leave
mov
or
leave
inc
adc
dec
jp
shll
jp
lret
fidivs
test
dec
lods
xor
push
pop
aas
push
pop
sub
rcrb
ret
nop
mov
jge
xlat
cmpsl
insb
or
pushf
lods
enter
ljmp
jp
shufps
fstpt
mov
and
xor
fisubrl
outsb
push
arpl
sbb
bswap
adc
sub
xorb
shl
jae
insl
icebp
lods
push
or
aad
subl
jg
adc
mov
jbe
add
std
testl
out
sbb
shrb
sbb
daa
in
adc
inc
mov
fbld
adc
lock
cmp
dec
pusha
mov
fmuls
mov
sbb
aaa
inc
movsb
or
sub
lret
sbb
sbb
and
nop
into
addb
cli
imul
xchg
sahf
jl
and
mov
xor
pop
daa
sbb
mov
ret
fisubrs
push
add
jnp
aaa
adc
dec
stos
mov
ret
jb
xor
cmpsl
out
jmp
ds
pop
inc
xor
inc
out
out
mov
repz
aad
cs
ret
push
js
jmp
adc
push
mov
xchg
sarl
dec
xchg
pop
iret
iret
push
jbe
pusha
stc
je
jae
dec
mov
fistpl
lret
das
add
xchg
cmpl
pusha
negb
into
mov
mov
xor
leave
jno
inc
mov
shr
sbb
add
je
jb
sbb
push
xor
jp
jne
push
scas
add
mov
bound
inc
outsb
xchg
lret
fnstsw
ss
jle
jecxz
xor
in
add
jnp
test
xor
loope
mov
cmp
pushf
dec
das
xor
push
push
push
pop
xor
dec
loop
mov
pop
fcompl
insb
in
mov
lock
aas
imul
outsl
sub
imul
arpl
cmp
xchg
cmpsl
push
dec
movsb
ja
mov
xor
sbb
std
or
or
mov
inc
pop
mov
dec
pop
inc
dec
pop
fwait
and
aaa
dec
fmull
iret
mov
ss
in
add
dec
dec
and
fs
adc
cmpsb
xor
iret
aaa
push
es
pop
and
insb
and
ret
jbe
nop
sbbl
pop
iret
cmp
les
jg
movsb
pop
xlat
cmp
sbb
push
fbld
std
xor
jnp
jecxz
jg
dec
imul
leave
mov
mov
lea
stos
arpl
js
scas
xor
call
mov
mov
sub
rcrl
inc
and
cld
inc
lods
lret
add
int
andl
sub
addb
popa
faddp
fucomi
imul
je
cmp
cmc
pop
jl
cmp
movsl
push
loope
jb
xor
mov
out
icebp
xchg
daa
mov
jg
aam
or
or
sahf
stos
push
shlb
sub
nop
fst
loop
imul
stos
sub
sti
movsb
ds
fistl
dec
testl
cli
mov
loope
jo
dec
mov
ja
cmp
jno
outsl
ljmp
es
dec
aam
push
jns
ficoms
push
test
shlb
sub
pushf
xchg
pand
rorl
clc
jp
repnz
inc
sahf
sub
or
or
lds
pusha
sub
ss
lods
cli
xor
add
or
inc
xchg
jno
ret
xchg
test
lahf
cmp
and
pop
std
pop
xchg
fsubs
add
mov
cmp
push
add
sti
stc
lret
jl
sti
loop
rol
addr16
xchg
jns
data16
jp
je
fs
add
ja
cmpsb
aad
xchg
and
out
cmp
and
dec
xchg
negb
push
push
fidivrl
xor
loope
jp
outsl
and
stc
popf
xchg
aas
mov
aam
mov
mov
mov
repz
aad
icebp
pop
mov
push
int
sbb
outsb
push
push
sub
and
pop
cmpsl
push
adc
push
lods
sbb
insb
jge
and
add
mov
cmp
dec
mov
pusha
cs
push
mov
or
hlt
hlt
lahf
adc
out
xlat
mov
pop
out
sbbb
adc
xor
pop
nop
mov
add
mov
pop
scas
faddl
and
lods
repnz
xchg
popl
lcall
ss
pop
mov
adc
outsb
out
iret
sub
aam
pop
sti
rcrl
xor
dec
jns
insl
iret
xor
adc
scas
push
pop
out
das
in
jmp
dec
xor
aaa
mov
jno
adc
mov
lock
jle
xor
push
mov
mov
jmp
add
xchg
cmp
mov
cmp
cmp
ret
dec
sub
je
dec
push
push
ret
or
push
ret
test
pop
lret
inc
enter
daa
and
xchg
add
sub
or
or
fwait
pusha
inc
in
fstpt
lret
jp
pop
cmp
add
bound
lock
sbb
frstor
mov
stos
fildll
int3
jno
aas
icebp
xchg
ds
jo
test
dec
mov
enter
xor
orb
stos
pusha
stos
jbe
cld
push
cli
or
mov
xchg
ja
lds
push
bound
mov
xchg
stos
mov
mov
push
cltd
pop
inc
in
sbb
cmp
je
mov
jecxz
sti
mov
out
les
mov
mov
rolb
lds
pop
add
mov
add
cwtl
mov
test
fistps
mov
inc
push
push
orl
jg
inc
pusha
xor
sbb
js
in
loope
add
mov
inc
sbb
fcmovu
pusha
xor
negb
das
js
call
dec
xchg
pusha
rcrl
std
ret
sub
fcmovb
mov
xchg
or
cltd
push
mov
int
sub
cld
pop
out
mov
aam
add
add
mov
rorb
mov
je
stos
aam
scas
jmp
sbb
cmp
cmpsb
in
jle
mov
hlt
stc
sbb
arpl
mov
inc
mov
inc
sub
or
sub
pop
push
shr
mov
pop
inc
sub
or
mov
fwait
inc
xchg
int3
xchg
loope
adc
ja
fnstcw
stos
ds
push
sub
outsb
adc
cmpsb
add
insb
out
fucomp
out
xchg
mov
push
push
sbb
je
stc
jmp
push
mov
push
insb
call
loop
rclw
movsb
cmp
xor
sbb
mov
push
mov
fsubrl
push
lock
shl
jo
fldl
adc
push
or
into
leave
xchg
cmp
push
lret
xor
sbbb
jne
or
mov
adc
sbbb
mov
ss
enter
add
dec
mov
inc
inc
xlat
mov
in
and
and
lahf
shll
mov
test
nop
out
sbb
mov
and
outsl
addr16
insl
mov
sub
fldt
scas
pop
and
nop
jl
hlt
pop
xchg
inc
sahf
scas
call
and
inc
pop
js
aaa
xor
ss
and
fxch
lret
push
and
mov
test
add
or
jge
out
add
outsl
in
sbb
and
xlat
inc
test
mov
fisttps
xorl
loopne
adc
mov
subl
pop
cmp
mov
addl
in
rcl
es
int
shlb
mov
and
outsb
in
jnp
ret
push
mov
dec
out
rorl
lods
frstor
mov
leave
aaa
fwait
mov
or
pop
pop
mov
jl
jnp
cli
leave
or
cmp
rcrl
inc
add
fistps
and
lret
mov
sub
mov
pop
in
arpl
mov
repnz
cmc
ficomps
add
sub
sbb
jae
cmp
add
out
push
popf
cwtl
sbbl
cmp
pop
lret
ja
pop
sahf
dec
xchg
sub
add
push
fcmovnbe
push
xor
lods
arpl
fcoml
and
add
adc
daa
jno
arpl
in
icebp
push
inc
pop
inc
pop
pushf
dec
divb
movsl
or
hlt
push
jne
scas
sub
fimuls
ja
add
add
stc
mov
mov
adc
dec
xlat
jp
inc
leave
lcall
inc
sahf
jnp
cwtl
mov
cs
loopne
push
das
sar
nop
sub
addl
mov
add
int
shlb
add
mov
cmc
xchg
insl
add
jle
scas
popf
iret
inc
xchg
pop
adc
sbb
dec
inc
jo
xchg
xor
xchg
out
call
stos
fdivrl
loop
pop
js
and
cwtl
jp
fs
mov
fnstenv
pop
dec
nop
mov
ljmp
dec
das
movsb
mov
or
xchg
arpl
jecxz
je
stos
mov
sub
hlt
outsl
pop
add
sub
adcl
push
or
adc
lahf
and
ss
xor
movsb
in
shr
lcall
and
lock
cld
jbe
cmc
push
and
push
mov
sub
xchg
orb
sbb
stc
mov
ds
add
add
or
dec
mov
cmp
xchg
int3
daa
pop
arpl
int3
jbe
pop
jo
ljmp
inc
cltd
push
ja
xor
icebp
fnstsw
insb
and
pop
pop
repz
aad
cld
loope
imul
sbb
les
loope
xor
jae
cwtl
push
push
js
mov
xor
in
lahf
leave
nop
out
repz
pop
ja
mov
dec
xor
andb
adc
and
sbb
stc
xor
call
push
and
lods
dec
loope
cmp
dec
fwait
rep
scas
sub
xchg
stos
in
mov
xor
cmc
mov
mov
sub
aas
ss
iret
rorl
xchg
mov
addr16
jno
stos
xor
sub
jge
add
sub
daa
mov
nop
ret
ljmp
xor
mov
lcall
pusha
test
dec
lcall
and
mov
lahf
int
pop
stos
sahf
add
push
fbld
cmpsl
cmp
jns
jle
ss
jle
jle
and
int
cmpsb
imul
cltd
xlat
jne
gs
pop
mov
insb
add
xor
pushw
and
mov
int3
adc
xor
jns
out
shl
les
enter
cmp
jecxz
fs
cmp
mov
mov
fisttpl
negb
cmpsl
cmpsl
inc
mov
pop
sahf
aam
jecxz
xor
lahf
test
mov
xchg
inc
inc
sbb
pushf
pop
sbb
pop
das
and
cltd
jae
inc
jo
in
call
gs
push
in
jl
dec
imul
lods
dec
pushf
movsb
sbb
xchg
adc
int3
mov
fwait
js
cmpsb
mov
popa
adc
call
xlat
push
std
or
push
inc
sub
xchg
pop
cmp
adc
imul
mov
jle
lock
lods
push
lods
daa
in
test
int3
mov
cmpsb
add
mov
repnz
and
movsl
jecxz
out
push
jae
push
arpl
inc
mov
and
inc
xor
mov
mov
xor
sbb
or
out
sbb
mov
test
icebp
xchg
lods
hlt
xchg
out
sub
movsl
sbb
outsl
loopne
je
into
pop
nop
ja
inc
loope
sarb
mov
pusha
sub
inc
xchg
inc
clc
cmp
adc
xchg
mov
enter
loop
add
push
push
pop
aam
xor
sbbb
mov
cmpsl
lcall
lcall
mov
mov
ret
pop
aam
jge
pop
push
movsl
fs
sbbb
xor
shll
stc
pop
lea
sbb
gs
adc
xor
xchg
xor
jbe
xor
imul
out
mov
cmp
mov
in
or
and
sub
mov
arpl
inc
int
jle
in
add
pop
dec
mov
and
and
bound
imul
and
mov
scas
push
jecxz
mov
cmpsb
mov
les
insb
repnz
test
cld
dec
pushf
lods
and
pop
xlat
popl
dec
ss
shlb
popf
inc
or
lock
out
pop
and
mov
sbb
jg
cli
add
test
inc
ss
jge
into
cwtl
imul
jo
or
cmc
stc
repz
inc
scas
add
xchg
lock
stos
pop
cmc
out
jnp
scas
pop
mov
pusha
sar
in
lock
push
iret
push
push
mov
inc
cmp
mov
mov
xlat
stos
jae
inc
or
lock
inc
add
xchg
adc
mov
mov
test
iret
popf
aad
stos
in
test
aam
popa
mov
sarl
pop
xchg
cmp
pop
cli
add
or
mov
rcr
sbb
mov
inc
jo
sub
or
mov
enter
cmp
fcompl
inc
dec
mov
mov
add
rorb
out
cmp
orb
mov
mov
push
add
mov
enter
mov
inc
mov
fistps
cwtl
cmc
sub
mov
and
add
adc
inc
cmp
mov
ret
dec
sbbb
lods
or
mov
aad
mov
inc
xchg
subb
iret
mov
negb
xor
test
inc
dec
cli
xchg
addr16
fnsave
mov
icebp
mov
push
out
mov
sub
and
shrl
push
enter
imul
lock
notl
out
add
and
lds
push
stos
xchg
cmp
cmp
inc
mov
data16
push
push
outsb
xchg
xchg
mov
test
jns
xchg
mov
enter
fistpll
mov
add
and
hlt
inc
adc
cli
mov
jnp
xchg
sub
repz
cmp
daa
scas
push
xor
pop
push
mov
lds
jnp
enter
rcll
sbb
dec
nop
sahf
and
in
lea
fs
test
push
scas
daa
lahf
push
into
out
add
cmp
insl
xchg
adc
arpl
data16
shl
add
lahf
push
and
lds
popf
dec
imul
shl
jns
cmp
ss
pop
inc
hlt
cmp
lcall
cmpsb
push
stc
arpl
sub
enter
mov
or
mov
jecxz
add
jae
xor
sub
xlat
imul
ds
sub
out
mov
or
or
addw
addb
mov
aaa
shl
pop
adc
adc
jb
xor
ret
or
lcall
mov
clc
lahf
pop
test
inc
mov
sbb
cltd
sbb
cli
adc
push
iret
pop
jmp
mov
repnz
jne
ret
dec
mov
fcomps
enter
pop
mov
insb
stos
call
hlt
or
sub
cld
daa
fisttps
popf
int
decl
and
faddp
nop
cs
sub
mov
insl
repz
cltd
cmpsb
pop
or
xor
xchg
jne
nop
or
inc
clc
pop
pop
in
push
imul
iret
cmp
lods
dec
xchg
mov
or
clc
or
fisubrl
pop
sbb
adc
rcrb
pop
fwait
mov
orl
mov
adc
faddl
inc
sbb
mov
pop
jge
xchg
lahf
stos
faddl
push
and
popf
jbe
insl
jle
push
jle
ret
push
push
xchg
mov
xchg
xor
hlt
pop
icebp
or
and
adc
test
and
cmp
in
clc
pop
or
push
movsl
lods
jecxz
outsl
fsubrl
negl
pop
and
stos
int
xor
inc
imul
inc
cmp
sbb
or
test
popl
movsb
sti
mov
pusha
xchg
aad
mov
fstl
mov
pop
mov
data16
adc
jae
xor
sub
leave
popa
push
sahf
adc
mov
jl
sti
sti
or
jmp
pop
cmp
pop
xchg
xchg
ud0
fisttpll
idivl
or
outsb
mov
adc
xor
in
sti
and
mov
inc
insb
cld
cmp
orb
mov
sub
mov
aas
es
and
and
sbb
stos
adc
dec
and
sub
jbe
dec
lea
addr16
outsl
sub
jo
adc
jecxz
mov
dec
movlps
test
in
bound
mov
adcl
nop
mov
cmpsl
mov
jae
dec
sub
mov
xchg
pop
cmc
idivl
push
fcmovnb
jbe
sub
pop
mov
sarb
cmp
or
popa
in
or
jns
push
inc
ja
xchg
mov
mov
push
jbe
ljmp
xor
loop
out
jo
lret
pop
je
enter
repnz
lret
push
aaa
xchg
outsl
mov
movsb
loop
rorl
fwait
mov
out
lods
push
pop
leave
stc
push
mov
add
movsl
push
jg
mov
gs
inc
push
fmull
inc
test
cmp
add
push
add
xchg
loope
push
imul
out
out
jae
insl
mov
bound
xchg
iret
dec
sub
shll
fadds
sub
push
adc
sbb
shlb
call
aas
inc
adc
push
fdivrl
lds
rcrl
lds
add
cltd
movb
movsb
lea
into
les
push
daa
add
hlt
mov
push
enter
cmc
jl
push
pop
das
ret
rcr
shrb
mov
test
ljmp
das
inc
cld
add
mov
or
pop
pop
mov
jb
or
cmp
pop
stc
lock
imul
push
pop
cmpsl
sti
jno
enter
push
pop
jbe
add
mov
push
adc
fwait
loope
out
dec
inc
jle
sahf
mov
jg
jb
fwait
rcrl
sub
mov
push
inc
lret
incl
xor
popa
push
popa
lret
scas
mov
test
mov
hlt
mov
mov
test
mov
xchg
mov
fucompp
imul
test
xor
jl
xchg
das
mov
xchg
sbb
in
movsl
mov
outsl
push
lahf
test
jp
lock
mov
pop
iret
dec
movsb
dec
out
xchg
jne
rcl
mov
shrb
loopne
movsl
push
test
out
lods
in
or
fdivrs
jb
xor
cmp
sbb
and
jno
pusha
inc
test
mov
mov
ret
xchg
pop
repz
jecxz
pop
dec
daa
jge
cmp
sub
pop
cmp
test
push
out
or
cmpsl
cld
push
leave
push
js
cmpsl
das
enter
dec
jecxz
mov
in
fistpll
nop
sub
ds
xchg
xchg
sti
jnp
test
mov
loopne
in
aam
sub
das
push
jmp
xor
cmp
lock
leave
stos
mov
sahf
mov
xchg
xchg
and
mov
cld
cltd
mov
pop
fstpt
dec
shl
mov
xlat
movsl
cltd
jns
aas
or
hlt
jo
nop
in
call
loop
ljmp
mov
int
or
pop
mov
push
mov
hlt
lcall
and
dec
dec
int3
lods
mov
xchg
or
stos
fmuls
pop
xchg
pop
dec
jp
std
dec
sub
or
cwtl
loope
adc
repz
movsb
xchg
fs
in
in
add
cmp
dec
sub
es
rcrb
push
push
cmpsl
or
outsl
iret
lea
inc
pop
pop
pop
popf
jno
cmp
adc
loopne
ror
jae
jae
roll
repz
add
adcl
clc
push
mov
aaa
jno
jecxz
add
stc
nop
pop
js
scas
fldl
push
stos
test
roll
adc
in
ss
xchg
fsubs
hlt
cmp
jb
mov
pop
in
sub
inc
rorb
inc
aad
dec
lds
or
aam
inc
pop
in
pop
inc
out
lret
and
jae
pop
fsubrs
mov
push
push
rorb
pop
xchg
xchg
xchg
test
popl
xor
repnz
inc
out
adc
xlat
stos
jae
negl
mov
cld
outsb
es
test
jns
adc
movsl
pop
pusha
cmp
call
sarl
jecxz
add
clc
aaa
cs
sbb
mov
movsl
and
adc
loope
sarb
fsubrs
jg
xchg
mov
cltd
xchg
leave
jo
jmp
ret
fidivl
sbb
repz
pop
pop
and
push
in
out
adc
add
testl
scas
xchg
rcrb
in
cld
mov
mov
sub
cli
pop
lahf
mov
scas
jbe
pusha
cltd
roll
std
inc
in
push
push
pushf
sub
data16
repz
add
mov
ljmpw
cltd
adc
arpl
cmp
aas
jecxz
lcall
out
pop
lret
push
and
call
lahf
cwtl
push
pop
out
fidivl
mov
push
dec
and
mov
mov
xor
cmp
sub
add
jns
aas
xchg
into
scas
inc
xor
inc
push
adc
mov
shl
in
rorl
mov
cmpsb
add
push
int3
data16
xor
cmpl
sub
das
or
jns
fsubl
loope
jae
js
mov
stos
xchg
jge
out
lcall
into
or
pushf
stos
inc
nop
jno
inc
pop
inc
adc
mov
mov
and
inc
adc
loopne
adc
testb
out
adc
loopne
loop
add
xor
lods
sbb
adc
inc
mov
push
mov
xchg
out
pop
ljmp
rorb
arpl
call
icebp
xchg
fstpl
xor
movsl
pop
imul
les
add
add
test
cltd
and
arpl
das
inc
stos
push
inc
jle
sarl
arpl
clc
sub
imul
pop
in
sbb
jl
daa
scas
push
mov
mov
cmp
fimull
outsl
mov
movsb
inc
ds
xchg
repz
cwtl
pop
loope
sbb
nop
out
movsl
int3
std
fidivrl
jecxz
int
popf
mov
jecxz
fistpl
add
and
xchg
jne
mov
xor
or
dec
hlt
xchg
je
insl
ds
inc
sub
or
mov
push
inc
mov
ja
cmc
sub
sub
popf
and
enter
mov
dec
ja
test
outsl
dec
aam
jae
not
sahf
mov
aaa
sub
add
cmp
ret
aam
fmuls
test
scas
into
sti
shll
cwtl
inc
int3
ds
xorb
jmp
add
scas
fcoml
lahf
rol
test
and
mov
mov
mov
enter
adc
jl
mov
mov
test
cmp
push
stos
mov
mov
pop
je
fcomps
fwait
push
jecxz
xchg
jo
jmp
push
mov
imul
and
cs
stos
and
std
add
in
push
sub
gs
bswap
and
cmpsl
dec
mov
mull
addr16
inc
popf
rorl
daa
sti
into
je
std
or
scas
cld
mov
nop
push
or
pusha
pop
int
adc
mov
pop
cld
lar
inc
filds
aas
lahf
and
sbb
inc
test
scas
or
or
pop
clc
pop
mov
js
inc
jmp
mov
jl
dec
cmp
pushf
xchg
jecxz
sbb
pop
mov
dec
mov
in
cmp
or
sbb
daa
aam
and
int
shll
push
icebp
mov
imul
paddq
or
mov
mov
adc
push
cmp
fdivr
adc
hlt
jmp
popf
fdiv
jecxz
inc
mov
in
inc
or
mov
aaa
popf
jne
popl
dec
adc
in
push
aas
jg
hlt
inc
orb
fsub
mov
pop
lret
jl
pusha
push
xchg
popa
out
jns
cltd
movsb
mov
shrb
popf
pop
hlt
fsubrl
sbb
sbb
int3
xor
jl
and
mov
stc
cmp
lret
push
sbb
jp
xlat
and
icebp
sbb
cltd
rclb
ja
adc
mov
add
cmpsl
adc
ret
std
jne
inc
addb
xchg
loopne
arpl
shll
roll
push
push
ret
inc
inc
in
mov
shrb
bound
pop
cmp
xor
add
ss
cli
sub
sbb
sbb
or
mov
lret
bswap
adc
data16
mov
shr
stc
jno
fidivl
scas
cltd
shlb
jb
loopne
add
dec
sbb
mov
jmp
cmc
push
fwait
pop
scas
jne
int
rcll
std
xor
cmp
push
inc
add
leave
rcll
cmpsl
dec
test
fcmovb
push
xchg
in
cmp
jae
mov
ljmp
adc
lret
call
sbb
rol
fcoms
lea
ja
or
add
and
dec
xchg
and
sti
ds
fdivl
rcl
pop
push
pop
cld
xchg
jge
push
lret
and
dec
divb
lods
lret
leave
jp
xchg
pop
dec
jecxz
add
inc
loope
dec
test
sub
dec
lcall
cmpsb
mov
sbb
mov
fbld
ja
xchg
pop
xor
and
loopne
repz
cmp
pop
stos
mov
lds
sub
or
stos
cs
pop
rcrb
xchg
mov
or
stos
push
addr16
xor
adc
mov
and
cld
nop
cmp
push
aad
sbb
pop
js
jb
cmp
push
jno
mov
stos
sbb
sub
xchg
xor
jnp
push
inc
push
adcl
jecxz
push
jecxz
cmp
gs
sub
fwait
out
fistpl
and
adc
sbb
jl
and
and
mov
adc
push
pop
shlb
or
cltd
fwait
xchg
mov
sub
dec
mov
js
outsb
sub
cld
mov
and
xchg
add
add
jne
in
mov
in
pop
popa
adc
push
cmp
dec
lcall
stos
filds
mov
xchg
aad
sub
addb
popa
add
jle
pop
je
hlt
inc
and
js
fs
xor
jnp
sbbl
jne
jle
es
js
addr16
out
and
fstl
fmull
je
push
rcl
les
in
push
push
lahf
push
popa
cwtl
cmp
push
adc
iret
jb
pop
sbb
sbb
xchg
cmpsb
xchg
jmp
bound
dec
repz
sub
outsb
lret
xchg
add
outsl
imul
pusha
mov
jbe
mov
sti
aaa
sub
mov
xor
fnsave
nop
pop
mov
lods
xchg
rcrb
divb
xchg
movsl
sbb
jns
push
rol
loopne
jae
push
enter
fidivrs
and
mov
sub
fsubp
mov
andb
lds
into
fdivrp
cld
ljmp
imul
daa
icebp
ret
pop
fldl
imul
adc
les
xchg
icebp
clc
repnz
in
mov
pushf
and
outsb
add
jne
loopne
les
ljmp
lcall
mov
dec
popa
dec
inc
leave
jp
or
lcall
les
fisubrs
mov
or
mov
dec
fildll
and
add
dec
popa
jg
xor
mov
lret
call
cmpsl
push
xchg
inc
daa
ljmp
push
scas
ret
or
insl
sbb
jne
fstps
pop
jb
dec
movsl
cwtl
and
loop
sbb
push
ret
and
sbb
jl
jno
popf
push
pop
jge
push
mov
cmp
test
aad
leave
and
in
mov
adc
pop
sbb
lcall
fldenv
sbb
pop
cli
jl
cld
mov
dec
sub
sub
shl
ret
sbb
outsb
inc
mov
xor
out
fwait
jge
jmp
imul
mov
sbb
insb
cmp
jb
stos
and
aam
pop
xor
pop
int
movsl
mov
push
std
and
das
push
inc
jge
arpl
adc
out
or
insb
sub
mov
xor
fistl
mov
daa
and
mov
fwait
jns
sub
xor
adc
sbb
outsl
or
das
and
mov
jmp
mov
loopne
jne
out
mov
ljmp
aaa
cmp
je
mov
scas
aaa
sub
xor
insb
stos
out
adcl
mov
lret
and
cmp
inc
mov
adc
in
cld
addr16
icebp
scas
xchg
xor
das
mov
cs
mov
lods
push
jecxz
insb
lds
or
push
fwait
loop
push
jo
rolb
inc
mov
push
push
lret
flds
and
insl
dec
mov
out
movsb
out
mov
sbb
sub
inc
loope
mov
adc
mov
jne
loopne
sbb
bound
fcompl
fcoml
and
mov
fidivl
or
outsl
rorl
sbb
xchg
cld
pop
mov
pop
jge
movsb
faddl
rclb
cmp
or
addr16
add
adc
and
xchg
gs
test
mov
dec
cmp
insl
push
or
sub
pop
frstor
lods
cmpsl
jl
mov
dec
stos
add
pop
mov
test
and
outsb
mov
inc
push
or
arpl
push
repnz
push
pop
fimull
mov
arpl
loope
dec
test
scas
js
mov
imul
imul
mov
scas
inc
loopne
jo
rcrb
leave
push
add
jmp
cwtl
movb
aaa
mov
jecxz
imul
sbb
lcall
and
lcall
sbb
in
jl
pop
or
iret
xor
repz
in
decb
sub
add
mov
mov
fldcw
cltd
cli
adc
test
or
mov
popf
inc
imull
repnz
xchg
add
mov
xchg
nop
xchg
mov
add
loopne
pop
mov
mov
pop
loopne
xchg
pop
fisttps
cmp
push
xchg
sbb
addl
mov
mov
into
sbb
pop
xchg
pop
xchg
cmc
adc
movsl
lods
pavgw
lds
mov
dec
scas
loopne
hlt
pop
dec
sub
and
leave
inc
mov
int3
test
mov
push
push
lea
xor
cwtl
pop
adc
dec
gs
out
jecxz
lea
into
and
loopne
lods
jecxz
fsubrp
out
pusha
ss
arpl
hlt
repnz
insl
add
or
inc
sub
jnp
mov
xor
adc
adc
int3
jg
mov
inc
movsb
in
adc
fldcw
mov
fsubs
xor
or
and
inc
repnz
clc
out
push
mov
sbb
push
jbe
adc
mov
pop
or
dec
cmp
inc
sar
scas
push
cli
mov
scas
and
sbb
mov
lods
and
cmc
test
mov
cld
mov
sub
lahf
cmc
mov
sub
pop
in
xchg
lock
jnp
push
addr16
jge
adc
sbb
jae
rolb
pusha
je
push
out
dec
mov
scas
jmp
pop
pop
enter
ss
cmpsl
pushl
test
adc
imul
pushf
das
mov
testb
jle
out
sbb
push
imul
cmp
fidivs
mov
add
int
repnz
pop
mov
loop
jne
stc
dec
hlt
rorl
mov
add
sub
jp
adc
jp
sub
insl
mov
jno
xchg
or
mov
stc
dec
jmp
xor
xchg
dec
lcall
inc
je
xor
call
xor
pop
or
sub
jne
stc
add
loop
sbb
jge
cmp
pop
or
xor
add
sbb
loope
inc
and
xchg
mov
or
pop
aam
mov
in
call
mov
pusha
sbb
insb
ror
bound
stc
mov
sub
pop
insl
fnstenv
or
mov
test
pop
into
out
hlt
or
movsb
xchg
testb
cltd
jmp
mov
cli
pop
lea
cmp
mov
jg
stc
mov
movsb
repnz
pop
popf
xchg
outsl
mov
mov
inc
in
test
or
sahf
add
fnsave
gs
lret
sti
or
dec
loop
add
adc
call
lret
xchg
xchg
out
popf
sub
clc
int3
gs
pop
jnp
stc
mov
sub
in
push
add
or
in
ja
inc
cmp
xor
add
lea
jae
push
repz
sbb
cmp
divl
leave
inc
add
lods
hlt
mov
fildl
ljmp
int
jge
popf
es
sub
mov
mov
pop
adc
mov
aam
in
jle
cmc
lcall
ds
or
gs
pusha
sbb
ljmp
push
mov
jecxz
jmp
test
aaa
mov
insb
mov
mov
add
mov
in
ljmp
int3
repz
jae
xchg
repz
divl
int
rcrl
jae
jns
or
mov
repnz
addr16
popa
jo
push
or
xor
mov
loopne
ficoml
insb
mov
dec
inc
push
notl
les
jns
xchg
mov
test
jl
mov
mov
jl
out
js
pusha
mov
xchg
mov
jbe
and
das
sub
add
xchg
out
ret
sbb
loop
popf
cmc
adc
sub
in
xor
mov
out
popf
dec
cwtl
inc
adcl
mov
push
or
outsb
and
mov
fimull
leave
aam
ljmp
cli
flds
rcll
jno
pop
add
mov
mov
cmp
or
add
mov
daa
sub
movsb
add
pushl
int
orb
mov
cli
imul
clc
in
cmp
nop
subb
cmp
jmp
sub
xor
rcr
inc
push
mov
push
stos
adc
sbb
and
sbb
loop
sbb
cmp
sub
test
test
mov
jle
out
dec
jge
pop
cld
sub
outsb
ljmp
cmc
pop
lods
mov
pusha
push
add
push
jnp
shrb
imul
mov
outsb
push
shrl
stos
lods
daa
push
lds
mov
pusha
cmc
mov
data16
int
test
lods
leave
cmpb
fwait
pop
shl
cld
add
adc
sti
fistpl
hlt
pop
push
push
inc
mov
pop
xchg
test
mov
jl
ret
push
imul
test
pop
pop
divb
sbb
jmp
loopne
sbb
jno
jge
mov
add
dec
je
out
dec
sub
out
inc
adc
mov
pusha
into
jbe
cmp
leave
shlb
fwait
jmp
xor
fs
jae
push
fcmovbe
pop
test
sbb
jge
push
leave
pop
test
xchg
dec
lret
jecxz
stc
jno
pop
popa
fimuls
sub
popf
push
testb
or
xchg
int
es
push
cmp
movsb
dec
add
pop
mov
les
bound
outsl
pusha
mov
mov
stos
pop
adc
addl
rcll
test
inc
cmpsb
cmp
icebp
push
test
add
xchg
xchg
stos
out
je
pop
and
dec
xchg
sti
cli
xchg
sub
inc
xchg
pop
fadds
sub
mov
mov
divb
cld
jmp
icebp
sbbl
inc
paddw
ja
fistpl
popf
fdivr
je
ret
cmpsl
in
and
push
mov
cmp
scas
js
xor
pop
scas
mov
cmpl
mov
mov
orl
ret
sbb
and
sub
cmp
aas
mov
push
mov
bswap
mov
iret
pop
sub
sarb
lock
or
in
mov
movsl
xchg
cmp
out
movb
mov
enter
leave
cmp
jae
push
rcll
mulps
testl
dec
mov
dec
mov
push
pop
fmull
rcrb
push
ret
sub
dec
imul
loopne
sub
jle
insl
insl
add
dec
sbb
and
out
std
xchg
pop
and
inc
sbb
mov
loopne
pop
repnz
adc
or
pushf
andb
jecxz
aas
adc
das
pop
fiadds
int
addr16
cmc
aaa
xchg
or
scas
pop
adc
fmuls
ret
or
and
mov
out
xor
repnz
ret
cmp
sub
push
imul
cmc
mov
fists
inc
daa
mov
inc
out
inc
addr16
dec
jb
lahf
cmp
mov
cmp
cmp
inc
js
ja
xor
shr
xor
loope,pt
mov
jns
jp
sub
jp
and
mov
test
sub
sbb
or
pop
inc
je
xor
lock
fwait
call
aad
or
nop
mov
or
jge
jnp
pop
vpminub
loopne
add
test
das
sarb
mov
dec
aam
movsl
daa
add
and
aaa
pop
inc
in
push
repnz
ret
lahf
cmpsb
mov
fistps
call
xchg
jecxz
sub
adc
stc
sbb
dec
lea
xor
xchg
lcall
out
mov
mov
pop
mov
xchg
sub
push
mov
jl
mov
int
fstps
inc
in
pop
xor
rcll
sub
adc
sub
sahf
adcb
cmp
sbb
mov
jb
adc
cmpsb
adc
ljmp
int3
and
jl
or
scas
xor
cmp
sbb
jnp
dec
outsl
stos
mov
xor
out
imul
jg
js
addb
ds
fldt
scas
pop
call
and
out
adc
int3
ss
xor
and
push
xchg
les
aad
and
push
mov
jge
and
sbb
pop
sbb
jl
adc
into
stc
xchg
int3
iret
icebp
addr16
cmp
and
xor
in
xor
jecxz
push
pop
stos
stos
xor
adcb
sub
leave
punpckhwd
enter
orl
ret
push
int3
xchg
sti
cmpsb
lahf
jae
inc
insb
push
add
sbb
js
dec
pop
pop
mov
sub
dec
mov
sub
enter
xor
xchg
pop
shlb
push
test
xchg
sar
jecxz
cmp
mov
pop
sar
sbb
inc
sub
cmp
pop
movsb
mov
pushf
jae
fisttpl
in
pop
aas
inc
sti
lcall
add
test
clc
mov
mov
xor
lret
call
or
sbb
push
dec
cmpsb
popf
mov
xchg
fcoms
shrb
jns
daa
test
or
shl
or
cmp
cmpsl
popf
ror
nop
sub
rcll
jb
jg
mov
dec
imulb
scas
in
dec
inc
arpl
sub
pushf
scas
sbb
adc
add
std
mov
outsb
jae
addr16
dec
loop
and
stc
mov
cmp
pop
std
stos
imul
out
sbb
xchg
mov
mov
cmpsb
push
decl
popa
in
mov
and
fs
fisubrs
or
dec
mov
jmp
push
stos
int
aam
sbb
sub
sahf
mov
adc
aaa
pop
imul
mov
ljmp
sbb
mov
sub
cmp
loopne
xchg
jge
inc
jo
inc
subl
push
cld
or
sbb
jmp
outsl
sbb
jb
mov
fiadds
sub
ja
sbb
imul
mov
pop
inc
cld
nop
inc
pop
lcall
xchg
jle
out
push
les
pop
mov
scas
mov
adc
jbe
int
add
push
cmp
ds
adc
xchg
leave
je
mov
adc
cld
rol
mov
or
daa
push
inc
adc
outsl
es
xchg
shll
shlb
int
mov
jecxz
or
push
repz
cmp
mov
repz
cltd
inc
jmp
xchg
lahf
in
add
cwtl
sbb
mov
mov
das
mov
daa
add
sub
and
mov
lods
mov
test
pop
shlb
pop
dec
mov
clc
push
rcll
mov
jbe
jo
mov
jmp
dec
pop
sbb
or
add
mov
scas
imul
push
xor
add
lock
les
jno
lods
ljmp
mov
dec
stos
and
mov
push
jle
imul
inc
mov
sti
in
dec
mov
test
shr
pusha
mov
dec
dec
cmp
jmp
dec
add
pop
in
cmp
and
je
mov
mov
cmpsl
fcoml
jnp
jno
lret
or
imul
in
sub
out
pop
push
or
test
ljmp
movsl
mov
daa
xor
sbb
fistl
loope
push
jns
push
push
sbb
loopne
xor
xor
mov
jge
clc
add
std
std
mov
cmc
movb
pop
outsb
adc
xlat
inc
es
jmp
inc
mull
sub
movsb
mov
shll
std
pop
test
cs
xchg
pop
push
push
arpl
mov
jmp
enter
xchg
sbb
mov
std
fists
push
push
pushf
je
pop
scas
and
mov
repz
je
das
inc
jo
inc
call
loop
jge
or
clc
aas
rorl
dec
or
loopne
mov
dec
or
das
loopne
sbb
inc
test
mov
add
loope
jno
sub
imul
push
add
arpl
loop
aam
mov
scas
jns
push
push
nop
push
mov
add
dec
mov
shl
inc
xchg
std
mov
mov
add
push
and
flds
xlat
push
sub
fwait
js
inc
addr16
leave
loopne
push
jns
andl
inc
fstpl
push
dec
push
mov
jbe
pushf
cmp
sbb
cmp
nop
cmp
shr
repz
mov
std
stos
in
dec
in
xchg
push
push
bswap
outsb
test
fsubr
push
mov
xchg
xchg
mov
jno
inc
cmp
in
mov
mov
leave
inc
in
inc
jecxz
mov
rcrl
inc
xor
arpl
divl
loope
adc
les
iret
xchg
xchg
and
fwait
rclb
scas
ret
popf
inc
sub
pop
mov
pop
ljmp
fistpl
test
cltd
and
lock
pop
repz
jne
aad
adc
pop
jnp
add
les
cmp
xlat
imul
ljmp
add
mov
icebp
dec
mov
xchg
stos
bound
cmp
add
call
pop
mov
pushf
or
shll
lcall
and
mov
dec
sbb
test
movsl
sti
outsl
movsb
scas
cmp
mov
dec
ret
or
mov
lea
aam
dec
in
jmp
les
xchg
das
je
xchg
icebp
in
daa
out
mov
out
cmp
fildl
popf
popa
ja
mov
dec
mov
add
leave
jns
inc
add
or
mov
cltd
fistpll
roll
fcomps
adc
mov
cmp
inc
jle
movsb
mov
pop
push
push
dec
jae
jb
rorl
jmp
lret
mov
dec
scas
imul
lret
cmp
call
sub
pop
sbb
cmp
sub
dec
inc
leave
into
mov
xchg
mov
testl
out
mov
push
inc
outsl
out
mov
imull
adc
cmp
cmp
xchg
or
jp
cmpsb
push
xchg
insl
fs
jmp
push
xor
pop
jbe
jno
lods
push
mov
outsb
xlat
scas
sub
adc
mov
mov
nop
jb
testl
dec
lcall
rorb
push
mov
add
xchg
inc
mov
test
in
or
mov
cmc
jb
lods
loopne
test
fbstp
je
push
ucomiss
cmp
outsl
mov
xor
jp
dec
mov
cmpsb
bound
movsl
popf
ds
inc
in
add
lds
ss
cmc
rcr
inc
testl
and
loope
mov
fnstsw
xchg
insb
test
lcall
mov
mov
xor
ficoml
mov
xchg
not
mov
imul
ret
mov
sarb
rcrl
adc
aaa
fs
sti
cmp
leave
adc
call
and
or
adc
push
add
adc
aas
dec
fisttps
xor
ljmp
iret
sahf
lahf
cmp
sub
sub
mov
imul
in
sbb
mov
fwait
aam
sbb
push
cltd
adc
lahf
in
testl
pop
in
stos
cmp
sbb
jle
xor
mov
sub
push
add
aaa
and
roll
or
xor
ret
jle
xchg
repnz
lcall
aaa
es
popf
mov
xchg
mov
lea
mov
cs
dec
stos
jb
adcb
mov
xchg
in
or
cmp
mov
dec
push
cmp
nop
cmp
lea
or
leave
push
push
mov
addr16
test
iret
cmp
rcll
mov
fstps
xchg
negl
movsl
call
notl
ficoml
lret
xor
mov
out
ljmp
cld
and
jb
or
sti
bound
ret
push
out
test
inc
and
cmp
jae
int
pop
and
pop
xchg
daa
sti
inc
rol
lret
je
mov
repz
add
data16
sbb
xchg
push
sbb
mov
icebp
lds
mov
pop
push
adc
sbb
jmp
popa
faddl
jp
push
jns
movsl
inc
sbb
mov
push
push
push
scas
pop
adc
shll
ret
or
movsb
pop
cmp
repnz
mov
sub
push
dec
pop
ds
clc
sub
gs
or
pusha
adc
jae
test
js
inc
jle
cmp
popf
test
cmp
dec
inc
imul
test
push
xlat
fnstenv
or
scas
test
loop
loop
orb
inc
mov
sti
into
mov
adc
mov
int3
dec
ja
push
loope
mov
and
sub
ja
ret
in
mov
jge
js
sbb
add
lock
inc
xchg
jne
adc
and
mov
cmp
out
imul
in
and
pop
lods
xchg
scas
in
test
clc
lahf
mov
lcall
ds
fldt
repz
adc
out
rolb
insl
out
sub
ja
add
in
dec
push
fidivrl
or
popa
loop
adc
push
pop
adc
mov
mov
add
cmp
pop
pop
sbb
jge
insb
mov
testl
ljmp
icebp
inc
jno
fisttps
sbb
pop
ds
xchg
hlt
call
and
addr16
mov
or
mov
mov
dec
ret
mov
ret
stos
cmpsl
mov
movsl
mov
pusha
dec
cli
add
cmp
stc
adcb
leave
pop
pop
mov
xchg
aaa
sub
std
add
adc
fisttpl
fiadds
stc
mov
mov
in
hlt
pop
push
mov
mov
sub
icebp
test
lods
xchg
aad
push
lahf
je
jnp
mov
in
or
dec
push
stos
into
and
lret
pop
out
add
xorb
data16
push
roll
sub
iret
shlb
mov
or
push
pop
mov
decb
push
ljmp
into
xchg
cs
ret
cltd
lods
adc
jnp
or
push
out
sbb
xchg
push
test
mov
lods
mov
and
pop
jmp
dec
cmc
mov
out
mov
sub
dec
add
ret
mov
shlb
test
mov
enter
jecxz
popf
add
lds
sarb
mov
pop
test
xchg
addr16
lcall
cmp
aaa
ds
test
mov
stc
adc
bound
les
mov
xor
in
mov
mov
mov
pop
pop
mov
js
icebp
lock
filds
dec
cvtps2pd
sti
sbb
adc
xorl
lea
aam
fs
or
lret
or
incl
fldt
jp
jp
inc
bound
inc
movsb
sbb
jns
sub
jnp
rolb
xor
pop
movsb
insb
xchg
add
cmp
add
adc
in
popa
add
dec
sub
mov
pop
das
fdivl
stos
mov
pop
lea
les
in
sbb
mov
rol
fidivrl
dec
test
out
pop
push
sbb
popf
and
add
and
push
push
test
push
xor
or
inc
mov
jmp
cmpsb
lock
and
ljmp
in
jne
dec
lahf
aad
fwait
in
pop
inc
push
sub
int3
mov
xor
jl
sti
xchg
mov
jae
repz
rcl
xor
dec
rcrb
mov
mulb
add
call
mov
lock
and
mov
pop
lods
enter
xchg
push
jno
imull
jb
cli
xchg
outsl
jbe
xor
jmp
push
cmp
popa
cmp
sub
xchg
leave
mov
and
ret
pop
pop
mov
mov
dec
hlt
repz
sarb
xchg
ror
loop
sbb
inc
dec
imul
and
jnp
lret
xchg
leave
xchg
dec
xor
outsl
lret
ror
clc
jg
add
out
dec
daa
mov
pushf
dec
or
sub
aam
sub
into
subb
cmpsb
mov
adc
mov
daa
inc
icebp
stos
pop
ret
xor
adcb
std
jmp
sti
mov
leave
movsb
cltd
dec
je
in
cwtl
pop
int
idivb
stos
dec
cwtl
mov
and
push
pop
push
imul
jg
dec
sub
sub
leave
and
adcb
cmp
mov
xor
arpl
xorb
jg
addl
push
mov
or
dec
out
sbb
test
cmc
inc
pusha
mov
pop
jne
mov
pop
jo
je
in
cmp
or
addr16
cwtl
jge
call
fs
or
and
cmpsb
repz
push
and
jle
adc
popf
sub
push
lods
hlt
cmp
adc
rolb
jns,pt
xor
add
out
mov
mov
adcb
in
pop
in
mov
loopne,pn
jecxz
orb
in
movb
pop
mov
and
cld
push
pop
push
daa
xchg
mov
lahf
jae
lcall
outsb
or
lahf
pop
pushf
or
or
and
out
data16
int
jne
sub
dec
leave
ds
mov
mov
popa
movsb
loopne
push
addr16
dec
mov
push
hlt
or
dec
dec
inc
jnp
js
and
lods
inc
insl
pop
ljmp
jg
jle
dec
cwtl
inc
clc
cmp
loope
sub
sub
inc
lock
push
les
sbb
pop
cmp
cmp
inc
or
mov
adc
or
dec
sub
cmp
outsl
jle
mov
es
or
jo
subl
fwait
pop
pusha
cmpsl
mov
in
push
orl
les
cmp
mov
pusha
hlt
xorb
je
cmp
inc
adc
mov
adcl
add
rclb
outsl
mov
je
in
lds
cltd
rorb
add
adc
jmp
fs
cmp
mov
ja
cmpsb
mov
lods
sbb
fwait
jo
cs
lock
mov
loopne
cmpsl
sbb
fcomi
ljmpw
adc
mov
jl
xor
push
fdivrs
sub
cltd
fcoms
pop
jp
js
pop
inc
and
xchg
or
icebp
jl
inc
pop
or
mov
dec
mov
mov
jecxz
mov
pop
pop
sbb
cmpsb
mov
stos
lock
lock
or
pop
adcl
jp
addr16
aaa
dec
jbe
mov
mov
orl
into
mov
dec
mov
sahf
fistpll
mull
adc
push
aam
jns
mov
ds
mov
dec
push
enter
cltd
imul
rorl
and
imul
add
xor
aam
push
cmpsl
stos
sahf
stos
lds
dec
xchg
mov
scas
mov
adc
mov
imul
fdivrs
inc
and
stos
xor
dec
xchg
and
xor
xor
vfrczps
ja
mov
dec
mov
push
mov
sub
xor
adc
js
push
loop
cmp
stos
jg
int
add
xor
mov
xchg
push
pop
aas
ja
out
fistpl
or
sbb
shlb
lods
jne
iret
inc
in
into
dec
sub
and
pusha
push
cs
pusha
aam
aaa
sub
mov
jg
scas
enter
mov
ja
pop
sbb
or
jb
mov
xchg
negl
dec
mov
in
sahf
arpl
adc
mov
jle
cli
cmpsb
rclb
in
outsl
mov
inc
fs
add
mov
roll
pop
pop
cwtl
lds
dec
add
cmp
out
cltd
repz
and
mov
sub
jae
test
into
dec
sbb
nop
xlat
outsb
jp
mov
ds
jbe
icebp
push
sbb
outsl
sahf
mov
mov
or
mov
mov
int3
adc
mov
lea
popa
cmpsl
push
daa
divb
mov
mov
dec
lcall
jmp
in
in
std
push
rol
or
xchg
mov
adc
and
mov
mov
out
lcall
mov
and
dec
lds
hlt
inc
test
push
xor
xor
adc
xchg
popf
jg
or
ss
cwtl
ja
xor
pop
lds
sbb
out
or
in
lods
jbe
fnstenv
push
cmp
loop
imul
es
jns
movsb
xchg
outsl
xor
out
xor
daa
repnz
xchg
in
inc
cli
cs
push
adc
lgs
mov
loope
push
bound
jmp
xchg
push
rorl
scas
or
mov
jb
out
push
sbb
xor
fisubrl
inc
jp
sub
cmpsl
pop
sbbl
sbb
popf
movsl
xor
ja
insb
fmuls
scas
push
ret
jg
push
cmpsl
dec
insb
in
pop
add
xor
jbe
fildl
mov
dec
insl
dec
adc
js
mov
arpl
pop
jbe
add
mov
jnp
cltd
xchg
adc
inc
xchg
jb
bound
clc
add
pop
hlt
mov
rcr
xorb
or
mov
xor
xlat
test
and
movsb
push
pop
jo
jnp
inc
test
xor
sar
insl
push
cmpsl
add
clc
hlt
ja
push
dec
push
movsb
push
fstpt
ret
loopne
in
mov
jmp
mov
sub
int3
xchg
into
mov
test
inc
daa
jecxz
adc
or
or
out
jb
or
test
inc
aaa
push
iret
out
arpl
xor
repnz
mov
int
in
fisttpl
cmp
call
or
jmp
repz
mov
adc
xchg
sub
xor
aaa
inc
xchg
in
mov
and
inc
push
pop
repz
pop
negl
mov
dec
add
lock
addr16
push
dec
push
xchg
out
pop
pop
pop
xchg
lds
cmp
pop
inc
xor
in
mov
and
ja
ja
stos
cmpsb
mov
inc
fs
xor
in
dec
sahf
fldcw
ret
jmp
mov
cmp
cmp
popa
test
lret
subb
es
scas
pop
mov
ret
movsl
lret
xor
shll
aas
cwtl
pop
ja
push
inc
mov
adc
mov
mov
mov
mov
jl
testl
out
divl
xor
push
and
movsl
adc
sub
xchg
icebp
xor
popf
push
sub
add
jmp
mov
cmp
and
into
rorl
pushf
and
mov
lds
pop
dec
leavew
mov
lods
int
stc
sbb
cmp
orl
cmp
cmc
imul
or
lcall
mov
sbbb
cmpsb
idivl
lret
cld
adc
inc
lcall
out
adc
ret
mov
add
stos
aaa
shl
xchg
inc
mov
xor
out
or
out
mov
fmuls
cmp
or
push
arpl
push
cmp
mov
enter
aad
push
xor
push
lahf
and
fs
jmp
cmpsl
dec
test
push
mov
push
mov
vmread
push
and
dec
cmp
subl
in
xor
push
mov
mov
jno
mov
leave
xor
dec
das
fisubrs
dec
jb
jns
out
lcall
sbb
testl
aas
and
inc
dec
enter
call
lods
jno
je
icebp
mov
leave
add
or
mov
cmp
lock
xor
fs
lods
test
jp
lret
test
pushf
clc
dec
imul
cmpsb
sbb
jge
pop
sbb
popf
xchg
scas
cmp
into
pcmpgtw
xchg
xchg
sbb
lds
push
dec
and
lret
lock
rorl
pop
mov
popf
or
dec
in
cmp
and
mov
xchg
ja
call
mov
lcall
or
insb
repz
movsl
mov
aas
lods
xchg
jmp
shl
cltd
mov
jne
xchg
subb
into
push
push
jle
in
mov
jmp
insl
xlat
add
mov
pause
and
je
and
fs
outsl
bound
adc
aas
mov
into
adc
aad
cmp
sbb
scas
mov
ss
rorl
mov
sbb
into
cmp
xchg
mov
rcll
mov
clc
orl
inc
jle
jno
fistpl
sub
jge
mov
insl
xchg
jno
and
cmpsl
pop
sbb
fldt
out
ljmp
imul
xor
sub
lea
push
pop
cmp
mov
nop
es
mov
push
sarb
or
sub
push
mov
in
xchg
add
xchg
adc
ja
ret
push
sbb
int3
jb
nop
xor
into
jbe
repnz
pop
das
and
out
loope
and
int3
sahf
in
mov
stos
lret
fsub
push
out
hlt
lahf
push
jno
aas
push
idivl
push
lock
ss
xchg
test
push
cmpsb
clc
adc
mov
sbb
adc
es
into
dec
ss
pop
ret
pop
mov
push
aam
add
cli
int3
inc
stos
cmp
imul
and
cmpsb
pop
lahf
sub
test
xor
and
jmp
sbbb
and
pop
nop
fdivl
push
cltd
les
inc
in
jno
loop
dec
cmp
aaa
xchg
fcmove
mov
jbe
push
popf
inc
pop
adc
adc
aad
out
dec
and
and
std
add
mov
dec
pushf
pop
dec
test
loop
cs
adc
ficompl
sub
out
fwait
ds
ficomps
movsb
push
mov
out
leave
mov
sub
movsl
inc
fcomps
loopne
ret
pop
pushl
mov
les
jb
push
inc
fidivrs
out
xchg
cmpsb
adc
aas
dec
or
fs
mov
jl
pop
outsb
call
sarb
inc
or
push
lods
repz
and
mov
xchg
pop
stc
push
loop
lahf
ficomps
jmp
add
inc
mov
fptan
je
or
movsb
mov
mov
push
pop
test
pop
sub
inc
xchg
or
inc
cs
xchg
cmp
rcr
mov
and
lods
ss
ret
mov
xor
and
dec
push
rcr
incl
in
dec
xchg
cmpsl
dec
cmp
jmp
testl
adc
sbb
push
mov
mov
lods
sub
jl
rorl
xor
das
andb
js
jb
stos
xchg
addr16
xchg
lock
insb
sti
cwtl
dec
mov
sbb
cmpsb
or
xor
and
aad
inc
ret
scas
leave
scas
out
inc
dec
popf
mov
xchg
mov
jle
push
mov
lahf
inc
mov
ljmp
jno
icebp
xor
lods
and
ds
out
ret
inc
mov
or
mov
xor
loop
jns
js
jno
add
adc
test
dec
mov
push
cmp
shr
popa
enter
add
inc
xchg
clc
sti
fldcw
imul
lods
sub
es
pop
lea
sub
andb
inc
std
int3
cltd
out
cmpsl
imull
mov
adc
incl
aas
push
cwtl
lret
in
test
jp
gs
push
in
call
sub
xor
call
insl
add
clc
xor
loopne
out
das
and
cltd
popf
cmp
loopne
rorl
inc
sti
sub
mov
mov
mov
jmp
add
dec
xchg
dec
jmp
xlat
push
scas
jb
pop
cmp
stos
scas
aas
dec
jno
mov
in
jg
cmp
inc
dec
cmp
les
inc
add
test
lcall
jge
mov
aam
or
mov
inc
add
pop
adcl
cmp
testl
ret
sub
xor
mov
dec
and
inc
loop
shlb
push
fsub
mov
fnstsw
push
jne
pop
adc
sub
mov
dec
movsl
mov
adc
mov
adc
mov
test
mov
fdivrl
xor
pop
aad
or
test
dec
mov
hlt
fwait
aam
push
out
repnz
fwait
xor
jge
nop
lods
mov
and
mov
test
faddl
xchg
sti
mov
jns
xor
inc
push
rorl
ret
jecxz
pop
adc
or
repz
and
dec
jne
inc
stos
mov
ret
mov
jl
std
jge
add
dec
out
ja
push
test
into
std
stc
cmp
scas
jle
or
insb
fisttpll
aaa
ret
mov
sti
out
dec
adc
popf
jge
mov
mov
call
scas
pop
or
adc
mov
in
mov
mov
pusha
in
cli
loop
mov
movsb
sub
mov
daa
xchg
scas
mov
xor
push
push
cmp
inc
push
xchg
sbb
xchg
in
mov
xor
cli
movsl
clc
xor
call
mov
stc
push
xchg
adc
fiaddl
push
in
enter
or
leave
in
jnp
fistpl
mov
add
xchg
in
int
test
addr16
enter
mov
add
sub
mulb
in
dec
lock
inc
aaa
stos
mov
push
mov
in
in
cmp
mov
add
repnz
or
std
shll
jo
jbe
cld
dec
sub
aam
push
aaa
lea
xor
push
data16
lcall
sti
or
xor
add
jo
out
adc
iret
fcomp
scas
cli
ja
in
inc
xchg
inc
or
dec
inc
fcoml
jle
jno
movsl
icebp
aas
icebp
loope
add
int3
pop
dec
ret
mov
addb
mov
fsubr
dec
pop
fchs
std
xlat
arpl
pop
pop
mov
mov
loop
hlt
movsb
and
adc
popf
fs
push
sub
mov
add
push
scas
popf
imul
push
push
sbb
bound
cwtl
push
sub
or
test
xchg
pop
adc
push
xchg
add
roll
leave
jno
sbb
pop
xor
notl
ss
sbb
dec
test
and
mov
outsb
jbe
xchg
mov
push
mov
enter
mov
dec
sbb
in
cli
leave
cmp
mov
scas
adc
push
mov
jnp
xchg
ret
ljmp
xchg
sub
dec
jnp
into
jmp
inc
popf
dec
shrl
push
cmpb
xor
movsb
ret
in
push
in
dec
out
shll
popf
cmp
cld
mov
je
leave
leave
sbbb
fwait
dec
lret
test
push
fstl
jg
xchg
lcall
inc
popa
fimuls
push
cwtl
ret
lcall
push
pop
call
lcall
add
cmp
loop
adc
xor
mov
cmp
mov
and
in
adcb
sarl
scas
jo
adc
movsb
jecxz
mov
test
inc
bound
lods
daa
outsb
fcoms
sub
insb
repz
push
dec
push
call
mov
mov
adc
lret
inc
daa
xor
hlt
incb
xor
into
dec
insb
sub
imul
pop
idivl
inc
sbb
add
mov
inc
pop
xchg
or
lock
jnp
lcall
in
mov
punpcklwd
imul
inc
push
loopne
cwtl
adc
aaa
bound
shlb
mov
es
scas
adc
and
push
imulb
ret
inc
fadds
jno
adc
outsl
mov
mov
mov
push
arpl
lds
sahf
xchg
into
push
xor
push
inc
insl
pop
xchg
xor
into
cmpb
xchg
xor
push
je
jne
cs
in
mov
lcall
std
lret
sub
cmovns
lret
shl
mov
mov
jg
orl
sub
mov
aaa
ljmp
mov
mov
push
push
repnz
rorl
xchg
pop
sbb
inc
pop
sti
movsb
testl
push
out
dec
pop
rclb
fimull
ret
lret
mov
mov
fstpl
add
cmc
ret
je
dec
adc
or
jle
icebp
pushf
add
pop
sti
rolb
push
adc
or
and
mov
cwtl
jmp
mov
or
jnp
sbb
xchg
shll
mov
daa
adc
je
push
adc
mov
in
aad
adcb
stos
mov
dec
es
push
xchg
pop
pop
test
roll
mov
imul
nop
mov
pushf
mov
sahf
and
aaa
sbb
lods
pushf
loop
inc
cld
pushf
fdivrl
adc
out
mov
adc
jno
loope
mov
in
scas
vpslld
mov
add
add
inc
mov
imull
xchg
push
sbbl
and
cs
lock
push
ret
inc
push
and
dec
cmp
jle
mov
pushf
inc
scas
and
jnp
into
dec
xchg
or
decl
sub
test
adc
bound
xchg
ss
fs
mov
inc
insb
add
sub
fdivrl
mov
xchg
xor
jmp
jl
fdivs
or
or
test
hlt
adc
xlat
pusha
call
sub
sub
pop
int
jne
and
int3
xchg
cmp
dec
and
cli
or
aaa
imul
inc
repz
out
xchg
push
hlt
lret
jmp
in
dec
icebp
into
or
jne
stos
incb
test
cmp
fnstenv
addl
mov
mov
mov
in
sub
mov
movd
jns
mov
out
sti
push
push
pop
sbb
lods
pop
in
and
jg
es
adc
push
cmp
test
xor
movsl
adc
out
out
repnz
sarl
mov
mov
push
movsb
adc
aam
int3
fldenv
push
es
cli
rolb
push
stos
cld
pop
add
jmp
cmp
or
dec
rcr
stos
gs
mov
push
out
shrl
mov
xor
push
cmc
test
dec
mov
and
mov
xchg
stos
pop
or
xor
setnp
inc
or
xchg
jle
ss
sahf
cmp
fcmovne
mov
pop
xchg
icebp
jne
jns
pop
mov
int3
fldcw
int3
div
mov
mov
bound
add
roll
sub
pop
jae
aad
or
mov
jnp,pn
mov
daa
xor
sbb
lret
and
outsl
inc
int3
addb
adc
mov
movsb
aam
mov
xor
mov
or
adc
lret
cs
adc
mov
sub
inc
xchg
lods
imul
pop
inc
nop
mov
sahf
pop
je
add
fcompl
mov
shlb
jns
xchg
mov
pop
xchg
lret
shlb
outsb
jle
xor
popa
rorl
out
pop
xor
popf
dec
insb
fbld
dec
push
ret
dec
mov
push
scas
xchg
mov
sub
dec
dec
out
sub
pop
fwait
cmpsl
pop
mov
test
xor
pop
das
xor
je
inc
mov
push
scas
roll
and
loope
jmp
mov
xlat
xchg
test
mov
ror
jle
inc
scas
inc
lods
scas
sbb
les
adc
sub
fildl
xchg
lock
ja
ljmp
call
or
jecxz
add
xchg
out
pop
into
cwtl
fiaddl
rol
add
jae
pop
test
repnz
out
dec
cmpsl
mov
or
xor
or
or
test
mov
pmovmskb
cmp
jle
cmpsb
fldl
out
inc
std
punpckhwd
repnz
shrl
adc
mov
cmp
xor
mov
add
jnp
stc
mov
sbb
nop
and
push
mov
xor
push
cmp
xor
mov
dec
pop
push
lock
cmp
or
push
xor
sub
jne
push
stos
aad
inc
jne
sahf
jg
out
dec
arpl
mov
xor
test
sub
xor
in
adc
negl
mov
out
xor
inc
pop
adc
clc
aam
stos
and
inc
adcl
mov
push
jno
add
mov
pusha
sbb
pop
push
cmc
push
dec
out
dec
or
rorb
sbb
stos
push
jb
sbb
sbb
xchg
sub
mov
insl
push
mov
mov
sbb
fisttps
mov
xchg
mov
aaa
jno
mov
dec
scas
rol
inc
mov
imul
lret
mov
cmpsl
loop
stc
push
pop
gs
cmp
sahf
pop
fsts
xor
shrl
or
pop
adc
test
sub
add
in
pop
jb
xor
and
pop
cltd
inc
fdivrl
adc
cmp
fcmovu
jg
js
imul
cmp
fstp
mov
pop
xor
and
adc
inc
jl
xchg
inc
ret
les
shll
push
jo
aas
jae
movsl
aam
jns
pusha
jecxz
xlat
std
jg
movsb
xor
rolb
and
xor
mov
leave
out
divl
jbe
fldenv
and
push
sbb
jecxz
sbb
sbbb
jno
inc
cmp
fbstp
jle
inc
xor
jno
clc
jno
popa
xor
mov
inc
scas
imul
mov
test
leave
pop
push
roll
cmp
push
idiv
sub
lahf
out
scas
movsl
sbb
xor
mov
dec
pop
mov
das
xchg
add
fnsetpm(287
inc
test
xchg
pusha
and
jae
mov
xor
or
sub
fwait
sub
push
cmc
je
sahf
dec
add
pop
jle
xor
cmpsb
cltd
clc
data16
add
mov
pop
in
jmp
push
pop
inc
adc
gs
adc
cwtl
jg
loopne
shll
jnp
and
or
sub
out
dec
inc
sub
addb
push
add
sarb
pshufw
dec
jl
lahf
sub
cmpsl
stos
adc
je
adc
sub
and
inc
fs
push
xor
sub
dec
adc
in
adc
pop
jmp
repnz
mov
and
pop
outsl
rorl
add
daa
jmp
fdivrl
mov
and
xor
inc
aas
orl
adc
and
cltd
sbb
dec
imul
cmp
xorl
movsb
mov
jle
mov
pusha
mov
lret
icebp
or
insl
pop
mov
and
xchg
dec
or
push
push
xchg
sub
sbb
int
and
push
and
push
or
or
jp
in
jge
out
and
sbbl
out
sub
mov
out
lret
rolb
inc
lea
mov
mov
fsubr
cltd
fadd
mov
jle
inc
fidivrl
jmp
rorl
jbe
sbb
shrb
ss
adc
fidivl
push
add
adc
mov
inc
lret
repz
addr16
rep
cmpsl
pop
pop
mov
jb
ljmp
xor
rolb
xor
mov
jmp
test
mov
fstpt
loopne
pop
std
cwtl
sub
mov
dec
cld
or
loop
mov
xorl
test
dec
iret
repz
sub
push
xor
ljmp
addr16
push
jmp
pop
and
xchg
mov
mov
xor
pop
subl
jge
dec
aad
cmp
fstp
or
add
loope
fmuls
ljmp
lret
inc
sbb
mov
jae
pop
jbe
mov
fnstenv
mov
popa
mov
mov
pop
pop
in
pop
mov
mov
pop
outsb
push
xorl
or
dec
addr16
or
fwait
cltd
jmp
mov
pop
mov
fcomps
mov
dec
dec
divb
int3
cmpsb
or
push
xchg
je
inc
ficompl
mov
xchg
sub
push
xor
shll
mov
jl
mov
jp
mov
mov
pop
mov
fs
call
testb
fisubrs
cmpsb
mov
cltd
sub
sarl
dec
daa
jecxz
loope
imul
or
or
mov
pop
jle
xor
push
cmpsl
outsb
mov
shlb
push
nop
sbb
repnz
ds
rorl
sbb
pop
jbe
rorb
int
sub
scas
hlt
pop
pop
cmp
dec
jecxz
push
cltd
jns
pop
lods
jge
sbbb
fistpll
adc
loopne
aam
pop
mov
les
fmulp
xor
mov
fistps
push
daa
push
lock
test
inc
mov
adc
ss
jmp
inc
out
push
mov
lret
out
popa
xchg
jl
cmp
sahf
popa
pusha
sub
mov
movsl
pusha
test
mov
push
sbb
xchg
lds
cmpsl
mov
pushf
dec
pop
fcoml
rolb
dec
pop
stc
sahf
dec
dec
lcall
jnp
pop
shlb
lret
rolb
in
scas
or
jg
mov
adc
mov
cld
test
shrl
push
into
loop
and
daa
aad
xchg
fucom
sahf
mov
cwtl
fadds
out
rolb
test
adc
sbb
xchg
add
ficoms
inc
ja
scas
movsl
arpl
bnd
repnz
mov
sbb
push
repz
in
pusha
inc
pop
or
sbbl
cmp
push
xlat
dec
mov
or
lahf
and
mov
imul
push
jp
jmp
pop
fwait
rcrl
mov
ret
popa
add
scas
sbb
xorl
sub
lods
pop
imul
inc
test
iret
adc
gs
mov
sti
xor
imul
movsl
mov
xor
jo
shrb
in
cwtl
jne
stos
imul
mov
push
add
push
jnp
ret
test
pop
mov
jmp
pop
xchg
das
mov
adc
andl
mov
sbb
arpl
inc
test
pop
shrb
decl
or
stos
nop
pop
push
ds
fstpl
mov
rcl
inc
movsb
xchg
mov
repnz
inc
push
push
xchg
inc
insl
sub
es
insl
pushf
stos
mov
jbe
inc
fdivp
out
call
mov
jmp
cmp
sub
mov
add
lahf
pusha
cwtl
pop
jne
pusha
inc
pop
pop
adcb
adc
sahf
pop
mov
adc
iret
data16
int3
jae
mov
rclb
mov
mov
inc
dec
ss
pop
add
inc
cld
add
les
mov
fstl
and
rcrb
add
mov
mov
std
out
cmp
ret
push
outsb
cmp
iret
les
inc
adc
hlt
ljmp
push
outsb
dec
pop
gs
xlat
lahf
stos
xchg
in
iret
dec
mov
mov
mov
mov
mov
sub
mov
jne
sahf
jle
aad
cmp
mov
lea
mov
aas
jb
jns
push
push
hlt
inc
push
repz
leave
sahf
pop
mov
lock
sahf
sbb
jle
push
lahf
inc
dec
xchg
rorl
outsl
cld
sbb
pop
add
xchg
arpl
add
and
cwtl
sub
aad
imul
pop
pushf
xchg
xor
idivl
mov
push
push
mov
jge
cmp
jbe
cld
jmp
sub
and
lods
fwait
sbb
adc
pushf
xchg
out
push
dec
loope
das
pop
lock
cmp
jmp
lcall
push
cmpsb
dec
sbb
lock
or
popa
out
mov
out
xchg
ret
adcl
sbb
insl
outsb
into
dec
out
addr16
push
adcl
pushf
clc
aam
push
cmp
push
mov
ss
mov
sub
cmp
ret
aas
hlt
leave
push
adc
mov
lods
lods
sub
lahf
in
push
xor
xor
dec
lea
mov
xor
adc
xor
fcomi
jecxz
lcall
pop
cli
hlt
lret
lea
rclb
icebp
cld
iret
lods
push
mov
and
mov
and
insl
dec
daa
int3
addr16
movsl
fmuls
in
adc
mov
pushf
aas
pop
push
and
cwtl
cmpsb
inc
repnz
or
push
in
inc
outsb
jle
pop
xor
ret
cwtl
xchg
ret
jp
dec
loopne
sbb
push
mov
cmp
add
cmp
int3
shr
cltd
test
mov
orl
push
dec
dec
cld
jo
and
mov
mov
addr16
imul
scas
sbb
fidivl
mov
push
inc
pop
imul
xchg
clc
leave
or
nop
push
gs
sub
nop
jle
daa
into
push
xchg
mov
mov
mov
add
mov
out
in
jbe
mov
mov
test
sbb
sub
sbb
cli
sub
outsb
loope
mov
mov
mov
adc
jne
sub
out
sbb
inc
xor
jle
and
int
cmp
shl
jb
cmp
adc
inc
push
in
and
add
add
xchg
jb
pop
adc
sub
add
int3
jge
cs
xchg
mov
test
sbb
dec
xchg
add
sub
ret
test
inc
icebp
sbb
shll
or
or
scas
inc
jg
stos
xchg
jns
gs
cmp
mov
cmc
add
lods
or
push
xorb
mov
outsb
pusha
aaa
out
jecxz
push
inc
jl
aas
push
scas
xor
fdivl
imul
aad
jo
and
mov
lea
call
stos
repnz
push
push
in
add
fdivl
lret
xor
repnz
es
cmp
loope
call
cld
in
dec
jge
add
mov
jp
jns
and
xor
or
pop
call
jns
cmp
mov
repnz
test
fists
mov
jno
test
nop
addl
test
pushf
fstpt
xchg
loopne
outsl
pushf
mov
jnp
cltd
divl
push
repz
mov
and
dec
arpl
sar
push
outsl
mov
fiaddl
out
inc
cmc
lret
movsl
repnz
sub
xchg
mov
ds
test
xor
mov
xchg
and
dec
push
nop
daa
push
bound
jl
inc
inc
stc
jnp
sarb
add
in
adc
push
cmp
das
cmp
pushf
popf
lock
cmp
in
sub
mov
in
inc
ret
xor
roll
mov
int
xlat
xor
lcall
int3
inc
arpl
adc
cmp
inc
jb
cld
jb
shrl
sbb
pop
mov
scas
fsubrs
sub
mov
jb
stc
adc
mov
jp
or
pushf
cmp
test
jns
aaa
push
lock
fbld
or
out
pop
add
sub
mov
mov
mov
mov
xor
dec
inc
fiaddl
jae
in
pop
insl
orb
pushf
xchg
mov
scas
mov
inc
cs
aas
and
mov
test
mov
mov
lds
push
repz
adc
scas
mov
mov
pop
imul
jb
sub
sbb
fwait
je
loopne
insb
out
adc
bound
mov
xchg
in
mov
xchg
test
inc
aam
mov
xor
push
das
add
sub
pop
pop
aam
adc
adc
xor
das
cltd
imul
aad
xor
incl
xchg
rorb
aaa
clc
or
sahf
loopne
adc
ss
mov
mov
add
sti
in
popa
dec
cltd
cmpsb
clc
mov
mov
sbb
nop
scas
sbb
inc
jle
push
inc
sbb
adcb
sub
aam
jmp
pop
movsl
sahf
dec
jb
xlat
mov
cmp
add
add
dec
sti
cmc
inc
mov
cmc
xchg
call
sbb
pop
sub
fidivl
or
or
pop
mul
jmp
fmuls
inc
dec
ljmp
mov
test
dec
and
fs
jb
push
push
mov
hlt
push
out
pop
lds
je
outsl
push
jnp
or
xor
lds
enter
push
pop
out
icebp
push
int3
lret
dec
adc
pop
loop
aad
mov
adc
scas
pop
xlat
aas
sbb
or
and
push
cltd
scas
stc
insb
fidivrs
lret
pop
cmpsb
jge
in
out
or
jge
add
xchg
fsubrl
les
loopne
sti
push
scas
cltd
jmp
lods
imul
mov
adc
popa
pushf
xlat
push
mov
incb
and
lcall
mov
jecxz
dec
lock
jmp
aad
add
cmp
test
adc
xor
push
mov
stos
dec
inc
repz
pop
out
sbb
jno
add
pop
sti
inc
js
hlt
arpl
mov
mov
xchg
pop
add
movsl
inc
gs
out
jnp
outsb
dec
push
xor
das
xchg
mov
pop
xor
loope
aad
mov
mov
dec
sub
adc
fcmovbe
inc
test
push
iret
ds
popa
push
rcrl
insb
pop
sbb
mov
movsb
sub
cmp
or
xchg
mov
std
fdivs
das
pop
clc
xor
shll
sbb
inc
fbstp
push
xor
xor
lds
mov
sbb
and
push
dec
movsl
cltd
clc
pop
call
jne
xchg
mov
mov
divps
cmp
xor
mov
jp
pushf
dec
jmp
pushf
ljmp
jne
pushf
mov
pop
jecxz
je
dec
lret
add
movsb
mov
adc
repz
adc
fwait
repnz
push
nop
lahf
je
mov
or
ja
inc
jns
mov
stos
dec
push
scas
fwait
jns
and
fisubrl
aaa
mov
push
gs
adc
aam
xor
mov
or
std
pop
clc
xchg
sub
pop
int3
mov
adc
stos
or
add
mov
mov
stos
arpl
iret
inc
cmp
xchg
sbb
call
sub
sbb
mov
loope
xor
nopl
jl
mov
cld
adc
jns
xchg
orb
pop
mov
movsl
lret
pop
es
and
sahf
retw
lods
or
xor
movzbl
shll
push
outsl
fadds
icebp
sub
xor
xlat
enter
out
mov
dec
js
xchg
enter
clc
jl
lahf
jecxz
pop
scas
mov
ss
add
fcoml
dec
adc
xor
adc
push
dec
mov
call
and
ds
cs
jecxz
cs
les
sbb
mov
sti
mov
cmc
jbe
div
sbb
pop
lcall
dec
out
mov
lods
xchg
mov
inc
insl
adc
int
xor
xor
in
and
push
lock
pop
xchg
divl
loop
or
aas
std
addr16
les
mov
inc
jo
mov
mov
or
outsl
ljmp
and
movsl
aaa
push
inc
xchg
stc
pop
mov
inc
push
add
adc
jmp
mov
inc
jp
push
sub
lods
fdivs
ds
adc
fistl
fwait
int3
es
popf
fbstp
push
sbb
negb
push
or
cld
jnp
dec
pusha
int3
push
add
sub
push
lock
pop
inc
idivl
nop
jo
push
sbb
and
iret
lahf
jecxz
jle
cmp
pop
jmp
icebp
inc
sbb
push
shl
pop
ficompl
mov
aas
icebp
jecxz
mov
fstpl
popl
or
sbb
pop
cmpsb
xchg
notl
pop
cmp
adc
cltd
in
test
call
pop
mov
add
mov
mov
pop
orb
bound
mov
callw
iret
dec
push
push
and
ljmp
mov
or
loope
mov
mov
xchg
push
jmp
movsl
jp
push
pop
xchg
gs
xor
dec
movsl
xchg
mov
and
jns
popa
in
jmp
scas
and
imul
jl
jp
push
insb
cltd
add
cmpsl
or
push
xor
arpl
mov
mov
pop
lret
fstps
enter
mov
movb
add
rol
mov
cmp
cmp
pop
int
cli
dec
mov
sbb
cmp
lock
dec
in
inc
les
es
xor
mov
mov
loop
mov
out
jne
scas
jbe
scas
jmp
add
push
outsl
movsl
xchg
mov
das
rclb
inc
cmp
pop
adc
out
jle
pop
aas
mov
or
push
repz
sub
cwtl
ret
dec
xchg
adc
nop
sub
mov
adc
pop
xchg
nop
out
idivl
test
lds
cli
push
inc
les
bound
cltd
mov
cli
jecxz
lock
sbb
out
fstl
daa
fistps
xchg
shrb
in
sbb
leave
xor
mov
jbe
mov
jge
into
mov
fistps
mov
ficoms
fstl
insl
stos
jmp
jmp
xor
stos
in
aaa
add
bound
xchg
or
fiadds
cld
pop
jns
pop
adc
push
xor
jle
call
int
shlb
les
mov
mov
fs
jg
lods
imul
test
pop
mov
sbb
pop
pop
pusha
inc
pop
ds
gs
ja
testl
inc
jae
les
adc
push
popf
loop
repnz
push
mov
xchg
inc
sub
sbb
les
jecxz
dec
add
add
lret
adc
push
pop
mov
mov
cli
imul
push
inc
lds
push
aaa
cltd
mov
mov
xchg
lock
and
pop
push
xor
icebp
mov
mov
mov
mov
and
ficoml
imul
jp
popf
pop
mov
adc
jo
clc
cmp
out
xchg
adc
dec
int
nop
jmp
push
jl
addr16
push
iret
clc
lret
mov
pop
shrb
jo
push
mov
inc
fisubl
dec
pop
inc
mov
pop
and
aaa
or
dec
jle
js
push
mov
shrl
pop
push
sub
mov
add
bound
int3
in
push
sbb
xor
xor
jno
pmaxub
stos
pop
lret
push
sbb
dec
fwait
and
cs
pop
pop
lret
aam
shlb
lock
cmpsl
les
sbb
and
mov
insl
pop
or
sub
mov
loope
scas
dec
add
cmpsb
pop
insl
lods
sbb
dec
rcrl
sbb
sbb
jne
and
imul
xchg
aaa
hlt
jmp
cmp
imul
add
mov
pop
xchg
adc
out
cmp
jl
mov
nop
scas
push
loope
sub
outsl
jb
cltd
sub
nop
outsb
cmp
push
mul
mov
ds
bound
mov
divl
cmc
adcl
pusha
mov
xchg
xor
xor
sub
mov
and
cli
adc
lods
jg
testl
cmp
rcrb
fwait
jecxz
sub
mov
push
push
dec
dec
pop
sarl
pop
pop
ficoms
dec
test
xchg
sub
in
jg
repz
pop
jp
bound
adc
lcall
push
ja
jne
sub
mov
out
mov
dec
fisubrs
mov
sub
xor
test
pop
fsub
sbb
xchg
lods
ret
aaa
cmpsb
sbb
xchg
jmp
addr16
loopne
aad
push
jae
cs
mov
mov
xchg
push
mov
jae
mov
sub
in
adc
or
imul
das
mov
popa
jns
mov
scas
ret
cmc
push
and
sub
push
push
adc
dec
fisttps
stos
push
push
test
jmp
mov
and
cmp
movsb
xor
into
stos
push
xor
nop
and
dec
mov
mov
dec
xor
fwait
aad
mov
sbb
xchg
call
jne
mov
dec
ljmp
xlat
mov
adc
sub
push
push
insl
adc
jno
pop
imul
nop
test
movsb
cmp
mov
icebp
daa
enter
and
repnz
sbb
sub
cmp
pop
pop
sub
out
repnz
sbb
dec
repz
lret
cmp
jne
out
iret
cs
push
fcmove
xchg
cmp
pop
pop
and
sub
xchg
mov
dec
ds
pusha
dec
rorb
out
lea
in
movsl
xor
cwtl
cmp
jp
inc
add
mov
add
or
sbb
mov
push
adc
aas
sbb
mov
pop
and
arpl
pop
add
out
lret
sub
idiv
jbe
cmp
sub
sbb
in
sub
icebp
sub
les
and
add
push
and
loope
enter
iret
pusha
jecxz
push
mov
mov
jo
flds
loop
adc
sub
jmp
lods
xchg
test
outsl
je
and
dec
sub
inc
mov
xchg
ja
pop
pop
xchg
pushf
inc
xor
xlat
xchg
sbb
sbb
xlat
push
call
and
lods
loope
outsl
stos
xor
push
push
ret
insb
pop
mov
loope
adc
std
and
lahf
out
roll
pop
lret
xchg
dec
cmp
dec
dec
sahf
popf
push
sbb
pusha
ja
add
sbb
aam
xor
repnz
jne
mov
leave
cmc
dec
inc
push
fiadds
mov
cmpsl
int3
loop
jg
into
mov
imul
mov
dec
stos
xchg
inc
je
and
testl
mov
lret
jne
dec
lret
xor
scas
jg
in
add
int3
jne
mov
negb
lcall
rcrl
int3
sub
push
or
rol
pop
mov
pop
sbb
loope
xchg
push
cmc
inc
pusha
mov
lahf
imulb
call
leave
pop
jns
sub
xchg
idivl
mov
mov
mov
jns
or
js
xor
adc
sub
in
fadds
jb
pop
or
ss
pop
mov
add
in
out
in
inc
int3
push
adc
test
iret
mov
in
sbb
add
or
sub
xor
push
xor
out
addb
lods
sub
test
andb
xor
sbb
cmp
sti
test
aaa
xchg
add
lcall
sub
xchg
xlat
stc
sub
xor
push
inc
ret
xor
or
mov
inc
dec
cmp
test
divb
lcall
inc
mov
jecxz
into
jno
fistps
stos
jmp
or
push
mov
rorl
loope
sbb
cmc
popa
mull
fs
cmpl
pop
movsb
mov
scas
or
inc
aaa
mov
sarb
mov
das
mov
fwait
popf
test
clc
xchg
dec
jge
xor
mov
int3
pop
fsubr
xchg
add
push
sub
jns
jnp
sahf
loope
cmp
repz
jno
pop
push
jmp
mov
or
lea
adc
jnp
ja
push
add
jge
jo
cmpsl
xor
pushf
rclb
loope
int
xchg
jnp
pop
mov
xor
pop
mov
xchg
jmp
std
negb
sti
push
dec
push
fmuls
cwtl
clc
dec
insb
test
shl
cmpsl
int3
bound
mov
inc
sbb
pop
movsl
push
xadd
dec
jle
in
jmp
scas
add
or
call
push
std
sbb
hlt
addb
sub
dec
int
sbb
pop
lahf
sub
and
lds
ja
pushf
int
jnp
cs
fiadds
adc
imull
insl
sub
sbb
xchg
movsl
arpl
push
repnz
call
pop
cli
or
jp
idivl
mov
mov
push
flds
xor
in
int3
adc
mov
xchg
out
movsb
cltd
and
lret
test
mov
enter
lahf
idivl
push
icebp
jmp
cli
cmp
dec
mov
or
js
mov
or
jge
dec
je
jge
and
push
aaa
jne
idivl
lea
sub
xor
mov
jg,pn
mov
je
mov
movsb
or
decb
ss
adc
sbb
cmp
das
jae
and
out
push
cmc
mov
sub
or
adc
dec
sbb
loopne
push
dec
inc
aad
ret
in
xor
lds
js
dec
mov
insl
push
xbegin
mov
popa
sub
sub
into
pop
das
mov
cmc
nop
mov
and
push
push
push
fmull
xchg
and
sbb
das
ret
cmp
adc
cmp
icebp
xor
xchg
sbb
fimull
stos
andl
mov
scas
fdivr
sbb
dec
test
jb
sub
imul
add
aam
bound
sti
pushf
push
pop
mov
adc
mov
xchg
mov
mov
push
test
test
testb
ret
mov
test
into
sub
inc
aaa
test
mov
dec
repnz
fstpt
nop
lahf
mov
enter
jle
add
dec
cmp
lcall
push
inc
jno
fs
test
dec
int3
pop
cmpsl
es
test
xchg
inc
les
adc
xchg
stos
loopne
mov
insb
mov
pop
pop
int3
sbb
inc
push
xchg
sbb
enter
mov
fdivp
sti
add
js
mov
pop
iret
pushf
mov
or
loop
or
mov
fistps
and
mov
aam
mov
pusha
sub
adc
das
jb
inc
pop
or
adc
inc
sahf
test
fs
mov
es
fwait
mov
addr16
cmp
aaa
setg
inc
jns
addb
mov
pop
dec
mov
ss
lods
shrl
out
mov
cmp
adc
sahf
ds
call
out
fcmovbe
daa
lods
mov
inc
rcrl
xlat
mov
mov
mov
test
movsb
mov
cmp
inc
notl
push
sbb
dec
das
xchg
jmp
sub
popf
sarb
je
adc
xchg
mov
xor
fildll
sbb
jecxz
jo
jmp
out
cmp
fildl
mov
and
and
mov
sbb
mov
nop
jbe
insl
cli
in
aaa
jg
push
push
pop
lret
nop
mov
adc
dec
rol
ja
mov
js
test
xchg
push
jne
mov
aad
add
pusha
pop
movsl
xchg
pop
push
pop
bound
inc
mov
cmp
push
rcrb
loope,pn
loope
loope
jl
mov
mov
cltd
jle
test
xchg
push
loopne
add
std
in
sub
imul
dec
push
cmp
push
in
addr16
or
sub
adc
push
imul
leave
cli
sbb
popa
sbb
insb
dec
iret
pusha
sub
in
sub
popf
jnp
push
sarl
cmp
ret
mov
lcall
aaa
idivl
sarb
inc
dec
sub
aas
cmp
mov
push
cs
dec
adc
adc
adc
or
les
stos
mov
bound
stos
ds
add
mov
mov
stc
sahf
clc
jge
sar
test
mov
and
mov
ret
jmp
push
out
mov
inc
loopne
test
fisttps
push
cmp
mov
repz
xchg
and
andl
js
in
add
cmp
shll
cmovne
xchg
fwait
and
icebp
pop
inc
mov
lahf
imul
jg
out
data16
rcll
js
adc
ret
addb
mov
cmp
jl
mov
mov
push
mov
or
adc
pop
std
xchg
lret
fisubl
imul
fs
fnstsw
shrl
and
in
sbb
int
and
scas
push
dec
clc
add
mov
shl
add
push
push
sub
or
lods
test
and
cmpsl
in
xor
subl
cmp
fsts
xchg
jbe
cmp
cmp
into
lcall
adc
adc
aaa
mov
push
dec
mov
add
loop
mov
test
loope
inc
scas
dec
sbb
mov
scas
cmp
jne
icebp
scas
pop
cmp
sbb
fdivr
add
cmp
xor
dec
mov
leave
jne
inc
aam
aaa
add
add
cltd
xor
jmp
ja
sub
jl
mov
jmp
cmpsl
push
sub
cmp
jg
icebp
cwtl
lret
iret
out
daa
ljmp
push
divb
aaa
ret
xchg
inc
sub
lea
sub
push
xchg
test
jge
insl
insl
stos
dec
jae
cs
inc
push
dec
mov
mov
fs
mov
mov
out
mov
aaa
xor
imul
dec
mov
decb
xor
pushf
sbb
mov
mov
xchg
insb
adc
fs
sbb
inc
push
or
repz
mov
xchg
stos
test
cmpsb
xchg
sbb
push
adc
xchg
in
in
out
repz
push
push
jns
jge
ret
mov
sub
leave
dec
xchg
adc
into
push
adc
das
pop
ja
sub
pop
pop
push
and
mov
mov
loopew
xchg
mov
sahf
sbb
mov
and
pop
scas
inc
insb
xchg
cmp
lods
and
into
movl
dec
mov
ljmp
je
ljmp
cmp
imul
cmc
and
or
mov
xor
ret
sbbb
movsl
loope
into
outsl
sbb
pop
enter
sbb
xchg
repnz
dec
mov
enter
inc
jg
aas
push
mov
lods
or
pop
or
cmc
add
mov
pop
push
es
add
mov
push
lods
sbb
test
lahf
push
dec
idivl
and
inc
jge
add
data16
cmp
sub
sbb
das
rcr
js
scas
mov
inc
test
sub
sbb
sub
dec
inc
adc
xchg
lods
inc
xchg
push
inc
mov
add
dec
xchg
int
ds
cld
xchg
test
jl
nop
mov
push
adc
pop
pop
mov
jmp
adc
ljmp
adc
insb
scas
push
mov
cwtl
aam
leave
mov
lahf
jno
xchg
inc
in
dec
sahf
jg
mov
cmp
stos
xor
mov
lods
ds
jno
out
mov
mov
enter
xchg
mov
scas
inc
movsb
mov
insb
imul
jb
cmp
and
cmc
in
dec
test
pop
scas
adc
ret
lret
and
and
bound
test
lret
je
shlb
test
or
les
adc
loope
stos
xchg
loope
call
loop
lahf
cmp
outsl
mov
cmpsl
jbe
inc
cmp
ret
stos
xchg
dec
jnp
pop
imul
or
sbb
arpl
push
adc
les
adc
push
addr16
pop
mov
fildl
pop
rclb
enter
or
xor
adc
and
call
dec
icebp
push
les
mov
and
sbb
leave
mov
mov
adc
outsl
dec
jo
into
push
add
cli
cmpsb
dec
mov
sbb
mov
mov
rolb
jle
cli
inc
pushf
sbb
rcr
cmp
inc
mov
jne
sbb
push
and
imul
cmp
rorb
fistpll
add
lock
bound
inc
rorl
mov
aam
jmp
add
mov
out
jns
hlt
daa
jne
iret
rclb
pushf
mov
test
mov
adc
or
add
out
mov
xchg
dec
addr16
cmp
or
xchg
mov
sbb
test
fsts
sbbl
lcall
sahf
aaa
xchg
loopne
cmp
in
scas
mov
jae
lret
imul
jl
xor
in
call
mov
mov
aaa
push
jnp
mov
mov
mov
aad
mov
xor
loope
sbb
mov
test
mov
sub
gs
jmp
jo
imul
or
xchg
mov
inc
inc
std
mov
pop
popf
jecxz
mov
adc
mov
jno
sub
lahf
cli
movsl
jns
push
lods
outsl
xchg
mov
insb
int
lods
icebp
enter
icebp
das
pop
insb
sarb
popa
xor
das
dec
test
aad
push
mov
repz
jns
jecxz
shlb
and
xchg
loopne
cmpsb
cmp
cli
loope
stc
ficoms
int
mov
push
push
les
pop
mov
push
cmc
cli
xor
leave
push
and
gs
mov
lret
lds
or
imul
xchg
xor
enter
test
mov
movsl
idiv
mov
or
push
push
sbb
dec
or
movsl
pop
outsl
pop
aaa
dec
inc
in
xor
dec
mov
xorb
or
insl
cld
cmp
ljmp
adc
lret
in
xor
loopne
loope
scas
or
or
push
pop
mov
icebp
fdiv
jle
shll
out
push
inc
insb
sub
movsb
pop
stos
or
ret
frstor
rolb
ds
loopne
adc
mov
sbb
loope
cmc
cmp
sub
sub
mov
fisubrs
jle
pop
xor
cmpsl
pop
push
push
je
cli
jl
push
aaa
scas
je
inc
es
push
sbb
pop
test
dec
jo
cmp
inc
fucompp
sti
jle
scas
fs
mov
scas
mov
xchg
movswl
jae
pop
xor
inc
nop
movsl
test
in
loopne
mov
add
adc
js
jl
mov
add
test
add
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
add
pusha
or
pusha
aam
add
jo
pusha
push
add
add
add
add
add
add
sub
add
add
add
add
add
add
adc
add
sub
add
and
add
mov
add
test
add
add
add
add
add
cmp
add
dec
sub
push
sub
pop
sub
dec
dec
pop
inc
jns
push
outsl
data16
inc
dec
add
jae
jb
gs
add
push
add
data16
jae
inc
gs
je
jo
