push
mov
push
push
mov
mov
shr
mov
rep
mov
and
rep
mov
pop
pop
leave
ret
scas
into
jo
push
cmpsb
sub
subl
mov
mov
xor
orl
fs
idivb
jecxz
mov
mov
outsb
adc
adc
div
push
dec
movsb
sub
std
mov
insl
movsb
loop
push
fwait
inc
std
or
xchg
mov
insl
hlt
add
xor
in
cmp
mov
mov
repz
das
mul
fwait
push
cmp
adc
sbb
cmp
divb
xor
mov
stos
jmp
jmp
mov
pop
jne
dec
loopne
movsb
xor
mov
push
sbb
xchg
in
pop
xor
push
xor
pop
and
push
mulb
adc
clc
daa
inc
pop
jl
or
sub
sbb
mov
mov
or
mov
lock
gs
mov
filds
popa
mov
adcl
pop
sahf
dec
sbb
lea
ret
xchg
inc
ja
push
jbe
jbe
insb
jno
sub
mov
jne
ss
sub
inc
jmp
iret
movsl
sar
testb
sub
leave
sub
and
inc
cmp
or
imul
jns
jno
fimull
int
pop
push
mov
jge
cwtl
fwait
sbb
add
fimuls
inc
stos
cmpsb
cmp
lahf
cmc
daa
dec
dec
out
andb
add
pop
jge
rorb
outsl
fadds
cmpsb
mov
push
loop
xor
add
mov
jbe
mov
out
test
dec
or
aam
inc
movsb
mov
popa
pop
es
orb
sahf
shlb
push
out
add
gs
or
cli
and
jg
sub
xchg
out
imul
aaa
adcb
out
shll
dec
push
rcll
lods
out
popf
mov
leave
dec
push
sbb
shr
pop
jge
pop
in
leave
arpl
arpl
cmp
push
xchg
cmc
insb
mov
pop
xchg
push
nop
sbb
cmpsl
xor
scas
mov
nop
cli
and
dec
out
out
jne
mov
xor
adc
adc
or
popf
push
ret
pushf
movsb
out
shlb
nop
adc
loopne
jmp
popa
and
enter
mov
adc
push
dec
mov
fiadds
cmpsl
adc
and
test
jns
es
mov
inc
inc
hlt
pop
mov
repz
adc
mov
loope
jle
loopne
add
sbb
aaa
cmp
lret
mov
or
or
idivl
dec
out
outsb
mov
sarb
add
mov
sbb
pushf
push
decb
es
xlat
rolb
sti
push
mov
lds
gs
jnp
pusha
push
cmp
std
imull
xchg
arpl
mov
fistpl
xchg
addr16
jle
push
sbb
cmp
and
jp
jbe
sarl
pop
inc
xchg
and
adc
cmpsb
loopne
or
dec
sub
lret
insl
fs
out
and
xor
scas
pop
mov
int3
xor
ss
js
int3
pop
je
adc
pop
aas
sub
inc
jge
xlat
xchg
aad
ss
mov
jne
ja
test
pop
xor
rorl
fdivl
cmp
and
int3
xlat
sarl
leave
rolb
es
mov
inc
mov
sub
imul
pop
aam
adc
loope
push
or
dec
add
arpl
mov
fmul
cwtl
jne
negb
xor
aad
mov
insl
pop
jns
sub
xor
mov
jne
in
jae
ficoml
mov
test
lcall
cmp
mov
test
insl
rcrb
adc
int3
jecxz
jb
lahf
mov
or
mov
xchg
adc
jne
jne
jle
jmp
jge
sbb
push
adc
cmp
cmp
mov
out
test
fldcw
inc
inc
std
pop
test
and
test
sub
jmp
std
popa
in
lret
gs
jmp
push
imul
mov
add
inc
xor
mov
jnp
pop
inc
push
jne
dec
fdivrs
xchg
in
push
sbb
jp
lcall
mov
pop
dec
mov
rorb
mov
jmp
or
adc
pop
lcall
icebp
pop
adc
aas
lds
push
jbe
push
pop
fs
rcrb
jns
dec
dec
loop
das
or
fsub
aad
in
rcr
sub
xchg
dec
jo
shl
fisubl
bound
inc
mov
sbb
and
push
xchg
pusha
call
pop
mov
add
add
mov
mov
add
shr
je
mov
xor
sub
stos
rcl
loop
cmp
je
add
add
jmp
popa
pop
cltd
mov
aad
in
pop
popl
push
pop
popa
imul
mov
cmpsl
inc
nop
adc
mov
lret
sbb
and
fwait
xchg
loop
mov
shr
sub
roll
mov
lret
or
in
imul
mov
lret
ret
rcrb
sahf
cmc
fldl
jnp
mov
je
insb
adc
inc
or
mov
mov
push
in
outsl
mov
mov
out
into
cmp
lret
inc
popa
mov
fstl
movaps
xor
push
sub
and
rcrb
xchg
cmp
movsb
push
mov
shl
mov
jmp
int3
int3
repnz
pop
add
mov
add
xchg
inc
test
cwtl
je
adc
les
cs
cwtl
pushf
jno
xchg
adc
rcl
lahf
xchg
in
mov
sub
int
les
and
xor
dec
out
add
clc
xchg
jl
push
fdivp
cmpsl
jg
daa
roll
nop
inc
and
enter
jb
xchg
test
add
inc
and
mov
stc
jmp
imul
xchg
sbb
mov
clc
scas
inc
nop
adc
pop
int
jbe
pop
lcall
in
xchg
lds
fwait
sub
loopne
jp
dec
rclb
mov
or
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
