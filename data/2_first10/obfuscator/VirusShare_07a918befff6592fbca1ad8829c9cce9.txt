dec
inc
push
dec
pop
push
xchg
pusha
call
pop
mov
add
add
mov
mov
add
shr
je
mov
xor
sub
stos
rcl
loop
cmp
je
add
add
jmp
popa
pop
cltd
sarb
mov
pusha
pop
pop
sbb
pop
dec
je
or
pop
test
call
and
rolb
sbb
imul
negl
adc
jp
je
pop
sbb
or
imul
cwtl
cmp
adc
bound
push
xchg
loopne
scas
ja
cmpsb
inc
dec
push
stos
and
mov
ja
jmp
xor
ret
ja
sahf
je
ret
out
out
jnp
mov
lods
cs
inc
in
popf
mull
jecxz
xor
sub
std
mov
push
jmp
test
adc
jns
jbe
or
cmp
js
push
push
inc
or
mov
out
test
inc
jle
mov
pop
rclb
fldcw
lret
jge
inc
test
out
lret
fnstsw
sarl
adc
je
fiadds
or
std
lret
mov
dec
mov
jo
mov
repz
mov
cwtl
inc
inc
nop
repnz
jecxz
mov
pop
call
cmpsl
loopne
mov
and
cmp
mov
or
jmp
sti
xchg
inc
in
call
rolb
mov
pushf
sub
xlat
int3
dec
and
inc
pop
fs
sarb
cli
test
mov
into
popf
xor
push
mov
rorb
aas
sti
aaa
popf
sub
retw
dec
and
adc
fs
xchg
and
xchg
sub
sub
or
aad
adc
and
xor
in
imul
inc
cld
fistl
jno
imul
loope
mov
cmpsl
pushf
mov
or
cwtl
fildl
lods
or
xchg
out
data16
mov
lock
call
xchg
lret
movsl
mov
mov
mov
fwait
jge
scas
out
or
push
aam
add
mov
jge
sbb
mov
popa
xchg
inc
xorb
aaa
fwait
jecxz
clc
jne
pop
mov
mov
lret
stos
int
pop
out
mov
cmp
or
lcall
inc
loope
push
or
mov
pop
push
inc
pusha
stos
mov
lods
dec
clc
xor
ret
fmul
xor
jnp
int3
mov
jl
push
pop
pusha
pushf
ja
adc
loop
jns
dec
les
sub
push
aad
into
mov
test
mov
test
pop
xor
pop
xorb
out
int3
jae
lahf
push
inc
sbb
pop
jo
pop
mov
repnz
jge
adc
inc
adc
xor
jne
xor
jns
lods
push
insb
push
jg
cmc
add
pop
sbb
aad
arpl
pop
xchg
dec
xchg
icebp
stc
or
lret
dec
cmpsb
pop
mov
add
data16
imul
pop
js
movsb
mov
inc
cmp
push
daa
and
mov
add
in
outsb
lea
lret
mov
xchg
jecxz
rorb
mov
cld
js
jmp
and
bound
sbb
push
sub
pop
mov
and
adc
and
jb
rolb
daa
adc
and
call
sarl
cmp
rcll
cmpsl
ja
out
sahf
and
mov
jg,pt
adc
push
stos
inc
ror
and
mov
mov
dec
mov
sbb
dec
cmp
in
jp
je,pn
pusha
out
bound
les
push
push
shl
jb
pusha
mov
xchg
sbb
movsb
add
bound
ret
shll
scas
cmp
mov
xchg
cmpsl
inc
push
into
int
jo
sub
pop
gs
rorb
xchg
mov
or
jl
pop
insl
jmp
mov
and
loope
adc
shrl
jo
add
jle
adc
int3
jmp
ds
xchg
mov
scas
add
xor
jl
mov
jle
jb
jge
je
and
dec
mov
jb
xchg
ret
imul
jb
test
inc
in
or
pop
pop
add
push
mov
movsb
mov
xchg
lds
mov
jb
push
mov
and
fwait
ret
cmp
repnz
mov
cmp
jge
movsl
xor
dec
push
out
xchg
jmp
mov
repz
mov
xchg
roll
jg
movsb
mov
outsb
fisttpll
fistpl
in
push
fs
fistps
adc
lods
lods
jne,pn
pop
test
xchg
push
mov
dec
add
add
jnp
cmp
sub
push
dec
mov
mov
add
jecxz
mov
dec
popa
mov
mov
lds
push
pop
push
stos
les
xor
imul
fs
lods
cmp
sub
in
jp
pop
jns
mov
les
dec
roll
inc
mov
dec
fcmovb
push
cli
in
ja
popa
cmp
dec
dec
lahf
ret
mov
mov
lret
mov
inc
xor
ss
push
mov
dec
add
sub
or
stc
gs
dec
dec
mov
sub
imulb
js
sbb
stos
jmp
nop
mov
inc
ljmp
sbb
sti
jp
das
jg
ret
jmp
sbb
sub
jl
outsl
test
dec
lds
add
inc
jnp
aad
int
mov
mov
hlt
sbbb
rcrl
out
lret
mov
or
sbb
bound
test
cmp
mov
psrlq
lcall
out
fdivs
adc
jne
xor
xorl
mov
test
xchg
push
sbb
sub
repz
je
dec
cmp
and
ret
lcall
cmp
or
sbbb
cmp
cmp
shlb
or
sub
stos
pop
pop
test
fistpl
insl
mov
pop
dec
popf
jg
iret
and
gs
cmpsb
push
sti
in
push
clc
movsb
fdivr
shll
pop
add
hlt
mov
call
ja
adc
or
orb
aas
sbb
popf
inc
test
fsub
movsb
cwtl
mov
stos
mov
mov
add
cmp
inc
mov
inc
cmpl
mov
mov
push
out
shr
adc
test
stos
push
das
mov
test
inc
imul
into
mov
dec
sbb
gs
lock
xorb
shrl
xor
jmp
dec
mov
cld
push
call
ds
push
mov
out
push
pushf
lods
adc
add
mov
cmp
insb
xchg
push
fcompl
addr16
sub
in
lods
pop
testb
push
fsubl
mov
aad
pop
fidivl
dec
mov
push
rcrl
stos
or
mov
in
dec
jp
pushf
stos
subb
jle
pop
or
cltd
scas
pop
out
sti
lds
or
bswap
lods
aaa
stc
xchg
sbb
lods
inc
dec
cmp
inc
xchg
fisubl
addr16
test
mov
jnp
sub
push
or
std
ja
xchg
into
pop
stos
inc
push
sbb
sbb
cld
rcrl
lcall
dec
popa
stos
and
shr
push
pop
jbe
xchg
in
aas
icebp
xchg
inc
xchg
sbbl
dec
jge
mov
pop
mov
jmp
push
or
insl
into
or
mov
xlat
in
out
pop
sarl
and
leave
or
fldcw
add
fcoml
nop
scas
jmp
and
and
dec
sahf
pop
and
shrl
jns
ret
flds
gs
inc
and
das
or
cmpsb
dec
fcomip
and
sti
ret
popf
outsb
cmp
sub
lds
into
cmpsl
xor
jmp
mov
mov
stos
and
ds
jl
movsl
xlat
test
xchg
rcrl
cli
lods
iret
push
and
xor
sti
dec
test
mov
and
aad
mov
xchg
ds
and
mov
lret
cmp
aas
dec
jno
outsl
movsb
out
sub
xor
cltd
push
stc
cmpsb
loope
lahf
lcall
cld
dec
leave
out
xchg
jae
add
jl
mov
adc
jo
add
sub
adcb
pushf
inc
jbe
les
clc
pop
adc
cld
imul
mov
outsl
orb
fsubrl
fisubrs
add
fs
or
mulb
cmpsl
and
lret
mov
cmp
push
jne
xor
xchg
push
aad
jne
fucom
shl
add
add
aaa
dec
inc
sbb
popl
out
hlt
mov
mov
fidivs
negb
xor
imul
loopne
movsb
ret
mov
loop
cmp
jmp
mov
inc
pop
jl
pop
test
mov
dec
mov
adc
inc
repz
daa
lret
fs
add
cmp
lock
outsl
xchg
mov
mov
sub
sub
cmovge
xor
add
xchg
push
pushf
loopne
lea
dec
stc
push
in
sarl
out
xor
mov
ret
ret
jmp
lret
pop
sti
dec
jno
add
sub
pushf
lcall
pop
and
je
and
adc
or
imul
outsb
imul
mov
add
sbb
into
jle
shll
jmp
in
mov
mov
jmp
outsl
jp
lea
in
ficomps
sbb
xchg
xor
fs
xchg
sbb
xor
push
pop
in
inc
sub
daa
jno
lods
adc
mov
mov
sbb
lret
cltd
mov
adc
jmp
sbb
lret
dec
push
scas
pop
outsl
lock
add
sbb
cld
popf
add
sub
iret
push
dec
push
adc
sub
sbb
xor
jae
mov
fiadds
stc
sub
push
sarb
inc
jae
jmp
mov
dec
je
jnp
push
inc
test
stos
add
movsb
mov
xchg
push
aad
roll
jecxz
movsl
and
out
popa
jg
imulb
movsb
leave
mov
mov
out
test
inc
addr16
mov
mov
sub
aad
sub
shlb
sub
mov
insb
fisubrl
dec
mov
rclb
cmpsl
lret
adc
sahf
or
in
and
mov
add
imul
pop
add
sub
adc
and
or
loopne
xchg
call
cmp
fimull
scas
inc
pusha
int3
std
cmp
pop
aam
sbb
inc
shl
push
test
js
rol
inc
gs
mov
jge
xchg
loop
fnstsw
pop
orb
xlat
repnz
or
shrl
cmp
ficoml
pop
nop
adc
jl
push
out
inc
fisttpl
xlat
out
and
lahf
dec
cs
cltd
daa
sahf
scas
or
and
jle
cld
cmp
lret
cld
int
popa
inc
add
int3
mov
sub
rcl
sbbl
je
stos
lods
sub
push
cmp
xor
loopne
fldenv
js
xor
mull
std
ja
cmp
cwtl
in
ret
xor
pop
xor
into
adc
je
out
popf
jp
push
xlat
dec
sbb
sub
rcrl
mov
add
mov
call
and
push
faddl
mov
inc
push
in
out
inc
pop
loop
hlt
sbb
inc
mov
ficompl
int
shrl
pop
fs
lahf
adc
fdivs
jo
inc
dec
xchg
mov
sbb
jno
pop
jnp
add
mov
fiaddl
icebp
cmp
dec
xor
pop
mov
in
adc
jne
pushf
rclb
inc
pop
jns
mov
cmp
outsl
gs
pop
sub
enter
jae
push
dec
pop
test
xchg
in
pop
xchg
repnz
cmp
jle
push
jae
pop
sub
push
sbb
fistpl
movsl
sub
clc
xchg
and
xor
sbb
jg
push
out
xchg
mov
sub
xor
cmc
pop
in
mov
push
das
repnz
aaa
and
in
stos
lahf
test
lahf
repnz
movl
sub
daa
lret
xchg
iret
testl
in
xchg
adc
pop
aad
jp
sarb
mov
pop
in
push
mov
mov
push
addb
and
stc
jmp
clc
and
push
sub
sub
mov
inc
adc
add
cs
cmp
add
out
movb
cmpsl
rorb
and
cli
insl
int
nop
mov
fdivrl
push
mov
pop
xlat
adc
add
outsb
add
pop
pop
pop
rcr
into
jp
lods
pop
je
movsl
sar
outsl
cmpsb
or
sub
es
xchg
pop
movsl
ret
adc
test
add
sub
adc
daa
xchg
hlt
leave
mov
xchg
sub
pop
add
enter
push
sub
push
out
add
ss
loop
div
aad
lret
movsb
test
or
mov
jmp
push
push
pop
out
push
xchg
ret
loop
out
shr
out
dec
sub
lods
es
xchg
fwait
mov
cmp
sahf
enter
xchg
pop
gs
push
clc
or
mov
adc
inc
aad
nop
sbb
xchg
mov
lods
xchg
dec
aaa
orb
sub
sbb
pop
lea
inc
prefetch
pusha
lock
lcall
in
lods
mov
inc
mov
push
lcall
shlb
lds
dec
xor
xchg
test
iret
out
inc
out
scas
stc
pop
mov
or
aad
jle
mov
mov
mov
sub
rcl
les
pushf
sbb
scas
sarl
or
rorl
pop
rorb
outsb
add
arpl
mov
jle
mov
push
stc
je
or
add
repnz
add
xor
inc
inc
jne
jae
insb
sbb
not
xor
mov
loop
test
pop
stos
icebp
cmp
lock
aam
sti
int3
outsl
jle
pusha
es
push
leave
dec
pop
repnz
and
stos
xchg
cs
into
in
or
lds
add
outsb
mov
lret
mov
je
inc
mov
lea
scas
jge
mov
mov
scas
mov
aas
or
xor
jne
and
daa
aas
shll
push
jg
scas
push
push
mov
jns
shll
add
add
cmp
pop
idivl
mov
push
and
jno
jo
jb
push
xchg
ja
pusha
add
push
push
addr16
adc
push
pusha
xchg
sub
sub
aad
sbb
imul
jnp
lods
mov
in
jmp
std
sbb
outsb
and
mov
xor
sbb
mov
rcrb
dec
stos
nop
aad
mov
cltd
jo
and
mov
jg
jbe
leave
ret
test
mov
ficomps
add
mov
cwtl
jecxz
mov
mov
sarb
push
and
cmpsl
adc
leave
and
std
ret
xor
sub
lcall
push
mov
xor
icebp
mov
pop
push
sbb
fstpl
push
adc
mov
fcomps
cmp
inc
lcall
or
cmp
dec
fisubl
dec
jns
divl
mov
clc
aam
pop
mov
loopne
xchg
orb
mov
xor
call
mov
mov
mov
out
and
inc
sub
test
into
sahf
testl
mov
cmc
jmp
movsl
sub
jb,pn
hlt
movsl
xchg
xor
jle
addb
int
sbb
insb
leave
fldt
iret
xor
and
mov
inc
stos
or
call
cmp
pop
adc
mov
mov
in
lahf
xor
xchg
out
xor
adc
js
pop
dec
mov
fmull
pop
and
pop
lods
cmpl
push
dec
fidivrs
mov
ret
loopne
shll
pop
cmp
fwait
shrl
and
xor
and
push
jl
sub
adcl
sub
cwtl
fdiv
xchg
outsb
cmp
loopne
dec
push
out
mov
test
add
leave
gs
out
in
xor
mov
sbb
dec
jg
sbb
in
cmp
repz
mov
les
sarb
clc
loope
and
icebp
pop
or
repnz
xor
std
mov
inc
or
pop
cs
dec
mov
in
int3
xchg
fwait
cmp
std
scas
push
mov
iret
mov
mov
jmp
inc
or
and
inc
cmp
popa
stos
test
pop
or
pop
stc
pop
pop
push
addr16
lea
sub
pusha
pop
xor
push
rcll
jmp
inc
add
add
aas
lcall
iret
pop
std
adc
adc
cmc
xor
xlat
inc
pop
cltd
mov
pop
imul
ret
push
insl
shll
cli
mul
pop
add
pcmpgtw
data16
mov
xor
out
pop
xor
jle
sar
addb
aam
repnz
sti
fbld
xchg
adc
jne
cld
loop
ss
int3
add
adc
test
pop
mov
sub
pop
mov
rolb
dec
fsubrl
or
inc
jo
repz
dec
adc
cld
mov
add
push
scas
das
ja
out
testl
je
mov
pop
in
nopl
sub
jbe
or
std
ret
cmp
mov
cmpxchg
movd
mov
dec
mov
popa
mov
xor
inc
in
or
pop
shlb
addr16
pop
movsl
pop
mov
addr16
push
fisubs
cmp
imul
test
in
shlb
xchg
jns
or
movsl
and
inc
daa
cmp
rcr
lea
clc
in
cs
dec
add
or
mov
into
and
jg
jle
pusha
jb
sahf
arpl
arpl
mov
fisubrl
inc
rolb
mov
dec
adcb
and
loop
mov
cwtl
cli
mov
es
aas
imul
daa
jmp
jo
mov
ret
add
call
ret
jl
cli
cli
mov
bound
mov
cmpsl
push
push
pop
dec
push
aad
rcrl
jmp
test
mov
inc
jbe
pop
push
and
lcall
push
sbb
ficompl
hlt
sbb
jp
sbb
fisubrl
push
jecxz
lahf
dec
mov
adc
jmp
daa
mov
cmp
jnp
or
pushf
and
fidivl
xchg
mov
mov
outsb
sub
dec
cmp
repz
xchg
aaa
dec
mov
sub
pop
sub
iret
rol
or
mov
pop
mov
push
movsb
xlat
shr
lea
ja
movsb
inc
pop
jp
lret
push
int
pushf
testl
outsl
dec
loope
inc
testl
cmpsb
cli
fadd
cli
push
sub
cli
ret
and
mov
call
mov
loopne
cs
jecxz
lock
xchg
stos
add
aas
enter
inc
xchg
add
jae
adc
in
lcall
lcall
mov
mov
lret
pop
push
enter
ror
jecxz
adc
push
adc
xor
push
push
add
pop
inc
leave
mov
mov
push
inc
cmpsb
repnz
fisubrl
pop
pushf
inc
in
es
pusha
into
fsts
pop
xchg
pop
lret
int3
pop
mov
ret
jle
enter
push
insb
repnz
xchg
xor
lret
or
in
pop
in
in
dec
cmpl
jns
jb
jg
push
out
mov
pushf
sub
ljmp
scas
scas
inc
cmp
daa
aaa
rcrl
data16
movsl
jecxz
icebp
or
hlt
stos
fdivrp
mov
test
dec
sarl
ss
jg
cmpsl
ja
jp
mov
stc
rolb
cmp
jns
pushl
stc
icebp
imulb
inc
aad
or
inc
stos
push
cltd
jmp
js
repnz
scas
mov
pop
jo
push
adc
test
mov
imul
rorl
dec
jbe
std
mov
mov
dec
push
lods
xchg
ja
leave
jo
cmp
pop
mov
enter
jmp
jp
gs
adc
scas
jl
jbe
test
mov
xchg
out
movsb
and
test
insb
push
sbb
lea
testl
movsb
fscale
cmp
inc
jecxz
mov
xlat
mov
dec
push
pop
ja
rorb
flds
das
iret
outsl
pop
sbb
jge
xor
shll
xor
add
std
fisubl
add
sbbb
pop
pop
fldl2t
sbb
add
push
add
cmp
fisttps
scas
add
sbb
cmp
mov
xchg
negb
jl
movsl
inc
lods
pop
jb
jno
mov
pop
sti
jmp
pop
sbb
ljmp
sub
ret
adc
push
popf
ds
jle
lcall
rorb
jg
xchg
aad
push
pop
shl
xchg
xchg
in
xchg
pop
cmc
lret
fadd
test
sbb
and
mov
mov
inc
rol
mov
xchg
iret
jg
int3
xorb
lahf
and
cmp
arpl
push
lret
test
fisubl
aad
dec
push
push
mov
add
cmp
add
jp
ficoms
fnsave
int
ss
int
push
mov
gs
test
hlt
add
pusha
ret
push
ljmp
out
sbb
das
adc
or
lret
aad
cmc
in
push
push
pusha
fildl
xchg
mov
jmp
lods
lret
ret
xlat
rcrl
xchg
outsb
insl
dec
loop
mov
ljmp
hlt
aaa
mov
jne
xchg
dec
xchg
mov
sub
dec
stos
sbb
daa
jge
push
sub
mov
mov
add
mov
out
test
pop
and
call
inc
std
xchg
jo
add
pxor
or
sbb
sti
pop
shl
enter
aad
pop
xor
sbb
inc
or
in
addr16
mov
cld
mov
pushf
cltd
sbb
xor
and
lods
repnz
popf
sub
push
scas
push
mov
mov
xor
std
scas
mov
neg
sbb
sbb
xchg
movsb
push
aad
loope
jmp
nop
mov
and
add
dec
imul
and
sbb
push
stos
mov
xor
mov
push
pop
bound
push
int
fmuls
pop
out
sub
adc
adc
into
adc
rep
inc
rcll
fstpl
push
jg
inc
inc
jae
jno
subl
jle
push
mov
dec
mov
test
cmp
popf
mov
imul
jno
enter
mov
pcmpgtb
jp
clc
lcall
adc
xchg
sub
mov
pop
jmp
mov
adc
lods
hlt
and
xor
outsl
sub
cmp
jo
mov
mov
icebp
xchg
aam
fwait
mov
lods
and
pop
or
mov
or
sub
sub
sbb
pop
stos
outsb
add
scas
xchg
in
xor
sti
xchg
jno
pushl
cmpsb
fs
popf
pop
ret
cmpsl
cmp
mov
aaa
sbb
pushf
push
in
insb
cmp
jle
enter
cmc
andb
popf
or
shrb
lods
mov
jecxz
jmp
adc
jp
xor
inc
cmp
pusha
daa
and
rclb
xchg
fcomip
adc
add
rcr
jbe
add
jnp
mov
es
rcll
sub
addr16
mov
out
roll
in
and
cmc
xor
add
imul
in
cld
adc
inc
pop
outsl
xor
jnp
call
popa
aas
lret
addr16
ss
sbb
mov
aas
mov
mov
pop
ja
insb
test
adc
js
rolb
xchg
movsb
xor
or
or
iret
cltd
out
test
add
push
cmp
test
shlb
out
add
into
xchg
jo
gs
repnz
sbb
and
push
mov
lds
out
cwtl
push
dec
and
mov
cmp
and
xchg
push
cli
or
rcrb
pop
rcll
in
mov
pop
in
inc
or
pop
out
or
pop
cmc
xchg
fsubrl
inc
fldt
inc
add
dec
rcll
sub
add
mov
data16
mov
test
icebp
ss
mov
sbb
popf
gs
mov
mov
inc
cmp
xor
popa
push
je
sub
cltd
cmp
mov
and
jecxz
mov
mov
lcall
mov
sbb
and
ret
xchg
in
jns
test
cli
js
arpl
sti
add
add
lock
adc
push
pop
xor
cmc
or
test
push
dec
lcall
dec
je
fisubrl
cmp
jne
mov
mov
aas
rol
out
movsb
popa
lods
pop
fiaddl
stos
inc
mov
pop
pextrw
adcb
pop
and
sbb
lahf
pop
mulb
aam
imul
mov
push
inc
sti
aas
test
pop
sub
push
lret
cwtl
shrl
scas
mov
pop
fsts
add
push
leave
push
pop
rcrl
aam
cmp
mov
stc
fisubs
and
mov
lret
stos
fcmove
lock
mov
inc
cmp
pop
jecxz
cmp
iret
std
xchg
mov
ret
fs
ss
push
nop
loopne
lods
mov
fnstenv
rcrb
push
or
aad
popf
rolb
sub
jo
das
cmp
imul
jb
jge
int
xchg
mov
addr16
stos
mov
adc
dec
xor
mov
xorb
pop
pop
int3
iret
sbb
out
mov
xlat
and
cli
pop
mov
movl
inc
ja
pushf
jb
pop
shll
dec
fbld
lods
ret
jge
addb
mov
es
fst
pop
dec
fwait
jno
je
mov
mov
fisttpll
mov
das
add
push
daa
stos
dec
imul
outsl
dec
sub
cmc
jae
inc
fnsave
movsl
in
cmp
xor
xchg
sarb
add
insb
push
mov
add
mov
dec
push
loop
adc
int
cmp
shrb
mov
fs
or
dec
out
pop
in
out
test
inc
test
movsb
stos
gs
cmp
pop
je
lcall
out
xchg
cmp
mov
sti
sub
and
add
jns
mov
hlt
scas
adc
shr
sbbb
sub
xchg
sti
pushf
loop
pop
add
adc
lahf
xorb
or
je
cmp
rolb
or
movsb
mov
jecxz
fs
loop
pusha
xchg
ret
xor
or
cmpsl
jmp
add
sbb
ret
sbb
movl
sub
mov
leave
add
dec
xor
or
ds
testl
and
stos
and
pop
xlat
sub
pushf
je
adcw
mov
lods
dec
cmp
xchg
inc
sub
jle
outsl
xchg
aad
pop
pushl
lret
aaa
divl
aaa
sbb
sbb
lret
mov
jnp
mov
test
stc
add
xor
add
sbb
in
popf
mov
xor
sub
icebp
jno
dec
jns
pop
sbb
xor
inc
int
xor
ret
pop
mov
mov
shl
cmp
mov
sub
aaa
push
cmp
dec
pushf
loope
xchg
movsb
dec
addr16
jl
add
push
aad
push
aad
sbb
jmp
rep
xchg
sub
cwtl
pusha
rol
imul
aaa
adc
jg
dec
hlt
sub
mov
mov
xor
aaa
outsb
fimull
lahf
or
adc
cs
xchg
mulb
pop
inc
xchg
out
mov
mov
inc
or
lods
sbb
and
int3
xchg
mov
out
push
ret
rcr
lds
and
jns
ja
paddd
clc
pop
repnz
iret
popf
dec
loopne
adc
sbb
outsl
pop
and
aad
cld
add
adc
cmpsb
lods
imul
and
fs
and
or
rclb
pop
outsl
fwait
aas
adc
jmp
out
lock
dec
xchg
sbb
mov
cmp
adc
sub
stc
adc
jle
inc
adc
pop
xchg
push
xor
jmp
mov
cmp
out
in
lds
arpl
adc
inc
lods
jmp
mov
lret
pop
push
outsl
lcall
cmp
cmc
jl
xchg
xchg
sarl
or
push
and
push
xchg
ljmp
enter
mov
inc
xchg
mov
das
das
cmpsl
push
push
sub
pop
sarb
pop
aaa
imul
repz
int3
or
sar
xchg
mov
xor
mov
and
cmp
aas
cmp
jb
push
test
ja
mov
aad
imul
std
and
loope
sbb
popl
inc
inc
negb
mov
in
add
stos
and
loopne
testl
inc
lods
negb
pop
cmp
push
mov
adc
std
sub
pusha
sbb
add
pop
adc
aad
xlat
test
shll
cli
dec
xor
add
jae
jne
in
dec
and
pusha
or
jge
pop
fistps
inc
sub
inc
push
andl
mov
sbb
arpl
test
push
addr16
in
test
les
js
rcl
aas
inc
int
xchg
rcrl
mov
sti
movsb
les
insb
call
sbb
jg
daa
test
pop
ja
aas
sahf
push
imul
test
sbb
in
xor
rorl
adc
ret
imul
sbb
xchg
sbb
xlat
out
pop
pop
ljmp
sub
sti
das
jmp
sarl
or
pop
mov
sti
scas
or
aas
jle
fsubl
fmul
push
cs
or
mov
insb
ljmp
js
leave
icebp
std
mov
cmp
lock
mov
sub
movsb
in
lret
fwait
hlt
adc
lea
mov
lcall
les
scas
movsl
imul
adc
push
push
mov
push
int
xchg
xchg
sahf
fldl
jg
push
je
aam
push
icebp
ja
icebp
lods
scas
lods
mov
pushf
lahf
mov
aas
lea
xor
adcl
or
cltd
inc
dec
and
popf
mov
xor
cmpsl
inc
mov
push
in
mov
fwait
or
gs
or
mov
in
push
je
and
lret
cli
sbbb
push
fsubrs
adc
or
stos
das
movsl
ss
cmp
insl
out
mov
lods
pop
sbb
push
pop
push
mov
ss
add
cmp
and
mov
jnp
dec
repnz
fisttpll
int3
pop
mov
sbb
shll
sub
and
call
push
jbe
dec
jp
push
aaa
sub
dec
pushw
jl
shll
mov
jge
cmp
and
loope
ljmp
shlb
mov
and
movsl
cmp
rol
cli
adc
jg
mov
shrb
pop
or
mov
cmp
xor
xchg
push
cmp
es
push
test
mov
jno
mov
test
mov
jne
arpl
mov
and
inc
idiv
or
mov
and
into
js
adc
inc
fwait
fwait
xchg
push
pushf
cwtl
dec
in
cmp
loope
sbb
fwait
or
cmp
sub
push
imul
ret
daa
adc
scas
mov
repnz
mov
mov
rorb
dec
call
xchg
push
cltd
sub
testl
dec
in
test
into
mov
sarb
or
shl
shrb
and
mov
xor
xchg
pop
sar
push
das
sbbl
push
negl
pop
pop
pushfw
movl
push
cmp
jns
dec
jne
jecxz
push
xchg
mov
adc
pop
fbstp
das
mov
xor
andl
mov
addb
sbb
mov
cs
lods
jno
push
xchg
mov
mov
adc
aas
mov
test
adc
xchg
mov
inc
adc
js
ret
and
loop
xor
jmp
gs
cmpl
stos
in
aas
push
pusha
jl
jmp
mov
pushf
scas
call
loope
cld
cmc
stc
shl
jl
mov
xchg
jp
sub
add
aaa
and
iret
mov
movsb
jno
cmp
repnz
cmp
pop
movsb
xchg
ja
lds
cmpsb
jns
and
inc
aaa
push
add
aas
sub
mov
fwait
pushf
pop
add
ja
inc
ljmp
lods
xchg
pop
call
dec
jecxz
push
scas
push
sbb
call
int3
ds
jp
ret
out
idivb
iret
xchg
iret
cs
adcl
mov
sub
imul
and
lret
pop
push
inc
mov
mov
or
movsl
rcl
cmp
jae
inc
jg
mov
add
inc
push
adc
cmp
loope
sbb
lds
fnstenv
mulb
in
pop
out
shlb
stos
xor
pushf
push
or
sub
or
sbb
icebp
shl
fmuls
sub
and
inc
pop
mov
xchg
call
orl
or
xor
or
xchg
shrb
pop
das
fmuls
je
inc
xchg
lret
scas
dec
jno
mov
rorb
inc
xchg
push
xor
subb
aam
dec
pop
add
xor
add
sub
jle
adcb
mov
mov
pop
mov
xor
xor
dec
fidivl
sahf
fidivrl
out
arpl
or
cmp
icebp
mov
shrb
daa
mov
add
or
mov
push
and
lret
lahf
in
or
cmpsb
ss
scas
mov
aam
jbe
addr16
xchg
daa
dec
out
sub
cwtl
daa
sbbl
add
jae
mov
xchg
jnp
sub
ret
lock
cltd
pop
arpl
ss
stos
jmp
fs
inc
lods
in
mull
movsl
mov
mov
sub
jg
lahf
cmpsl
and
ret
leave
sti
ja
sarb
jmp
dec
xchg
repz
hlt
and
stos
idivl
inc
int
mov
xor
push
roll
mov
imul
mov
loop
popf
clc
lods
out
aaa
call
imul
stos
dec
out
test
insl
dec
aas
pop
dec
aam
jecxz
sbb
mov
rcrb
dec
add
cmp
in
cld
scas
aaa
hlt
push
loopne
jns
clc
loop
popa
sti
add
out
or
shrb
loope
and
aaa
mov
push
xchg
loopne
xor
add
mov
ret
mov
mov
xor
jg
jl
mov
fidivl
cmp
and
out
fiaddl
inc
into
clc
jo,pn
inc
ss
sahf
or
cmp
sub
sbb
mov
mov
shll
fdivrs
and
loopne
jmp
out
data16
pop
inc
dec
loopne
inc
cli
cli
cli
pop
mov
mov
push
jle
lds
and
adcl
push
sub
int3
adc
xchg
adc
push
es
cmp
push
movsl
pop
test
std
mov
out
inc
mull
add
xchg
cmp
pop
shrb
xchg
jmp
push
adc
adc
pop
subl
stos
int3
enter
cs
xchg
inc
adc
sub
xchg
negb
mov
jecxz
sbb
outsb
jle
xchg
push
lcall
shlb
sti
fisubs
enter
push
xchg
xor
xor
add
fsub
enter
inc
pop
test
lret
mulb
mov
push
add
fsubs
lea
shlb
inc
mov
bound
neg
mov
jl
inc
mov
jmp
nop
mov
sbb
and
hlt
jmp
and
dec
int3
sub
inc
pop
cmp
pop
mov
dec
add
and
insl
mov
pop
mov
lret
out
and
inc
mov
xchg
sbb
pop
cmp
in
cmp
aas
test
jo
and
mulb
inc
mov
mov
adc
ds
mov
bound
add
inc
ret
push
lods
aaa
in
push
movsl
and
mov
push
sub
lock
shll
fs
inc
adc
mov
inc
mov
or
movl
test
loopne
and
cli
push
adc
xlat
cmpsl
cmp
jae
push
icebp
ffree
mov
shlb
push
jo
test
push
xchg
mov
jmp
lcall
pop
sub
push
jne
cmp
pop
mov
outsl
aad
inc
in
lods
cli
xor
lret
sub
xor
dec
lcall
xchg
movsl
stos
sahf
inc
jbe
ffree
mov
inc
xor
cmpsb
and
sbb
adc
xlat
int3
fmul
stc
mov
rorl
cmp
test
out
fidivs
bound
test
insb
sbb
push
in
lea
lock
aad
in
inc
mov
cmp
lcall
and
jecxz
xlat
xchg
sub
dec
or
jg
ror
jns
cmp
xlat
mov
push
xor
insl
sbb
nop
and
leave
inc
dec
mov
pushf
mov
sbb
pop
in
mov
loopne
aas
iret
es
repz
push
fildl
pop
xchg
mov
push
loope
adc
rcll
stos
mov
push
sbb
dec
popf
pusha
ljmp
ficoml
aad
dec
cld
add
sbb
push
das
ljmp
xchg
mov
frstor
inc
jbe
roll
cld
mov
sbb
aam
imul
pop
or
xchg
hlt
imul
stos
enter
nop
or
inc
pop
fwait
mov
push
mov
lds
xchg
push
mov
dec
jmp
std
cmpsb
sti
arpl
adc
adc
call
mov
pop
subl
mov
jae
call
xor
ficompl
push
inc
mov
add
mov
clc
jp
aaa
push
sbb
bnd
shlb
xlat
lcall
aaa
mov
cltd
inc
and
xchg
ljmp
jo
shrb
jne
nop
popf
xchg
jae
divl
outsl
push
loope
pop
mov
cmpsb
leave
popf
xor
cmp
sbb
pop
push
adc
pusha
repz
fcomps
lods
or
js
ljmp
pop
cmp
mov
or
lods
stc
icebp
and
xor
andb
pushf
mov
xchg
mov
out
out
sub
pop
cmp
cs
dec
xor
cmp
mov
popa
sub
pop
pop
mov
dec
adc
xor
inc
sbb
sub
jne
outsl
cmovl
inc
ja
mov
lds
sti
pop
jbe
sbb
cmpsb
nop
popa
cmc
add
js
aam
ret
jp
mov
inc
stos
sbb
out
dec
adc
xorl
mov
cmp
lock
into
rcrl
sti
jp
pop
pop
into
cmpsl
es
test
xor
in
sahf
aaa
mov
mov
mov
imul
push
sub
mov
test
mov
mov
pop
cmpsb
rcrb
mov
push
push
mov
repz
imul
push
and
mov
or
inc
imulb
shrl
repnz
jno
pop
mov
loop
and
das
sbb
mov
sbb
add
fmul
imul
sub
cli
out
out
inc
sub
cmp
and
jno
shll
mov
fstl
shlb
lds
loopne
jb
test
fs
js
scas
xchg
repnz
test
adc
xlat
test
xlat
or
clc
jae
xchg
aaa
outsl
ret
sub
jno
cld
xlat
clc
adcb
sbb
xor
pop
lcall
inc
aam
pop
icebp
xchg
outsb
ret
cli
cltd
sbb
lock
cmp
fcmovbe
scas
loopne
mov
mov
xchg
mov
out
insb
lods
or
jecxz
adc
mov
mov
xor
pusha
fbld
add
dec
call
adc
add
or
cmp
fldl
in
popf
push
aam
dec
jg
cmp
sbb
imul
movsl
mov
adc
mov
push
mov
sahf
in
jmp
lods
test
repz
loopne
repz
push
imul
test
ds
adc
sbb
cmp
cmp
fisubrs
int
inc
incl
mov
fsubs
sbb
cmpsl
xchg
push
xor
pop
repnz
ficomps
icebp
loope
add
js
add
xor
stos
mov
jns
loopne
pop
std
popa
div
adc
outsl
mov
cmpsb
mov
into
and
loop
cmp
ret
jb
mov
es
cmp
arpl
nop
xchg
pop
loope
outsb
shrl
sub
pop
mov
fsubrl
shll
setne
mov
push
lea
mov
mov
xchg
arpl
call
push
xchg
mov
stos
fistpll
rcrb
fidivrs
cmc
sub
into
jne
xchg
xchg
fcmovnb
inc
insb
inc
mov
jnp
xor
push
je
xchg
lcall
into
inc
xor
lods
inc
std
dec
data16
shlb
pop
fisubs
int3
xlat
mov
push
lods
and
mov
adc
xchg
lock
int3
loop
lods
std
test
imulb
out
lods
aad
cli
int3
idivl
fsts
and
fildl
out
imul
inc
mov
jae
mov
mov
push
outsl
fisttpl
jge
xor
sbb
into
icebp
push
dec
cld
test
mov
push
push
es
js
sbb
mov
mov
jae
add
mov
and
add
push
pusha
sub
xlat
aam
mov
jbe
push
inc
shlb
nop
lret
ja
push
cmc
fistps
sub
loopne
data16
or
sarl
cmc
imul
xchg
cmp
insl
int
jmp
xor
sbb
mov
cmpsb
jmp
loop
adc
push
xor
xor
cs
add
xchg
xchg
iret
jmp
mov
inc
xor
inc
movsl
in
dec
pusha
popa
adc
or
enter
jg
jp
fmull
jo
nop
jle
cld
xor
mov
cld
dec
insl
pop
jae
dec
orb
ficoms
data16
adc
ror
mov
adc
add
mov
sbbb
pop
notb
push
cmc
mov
sub
inc
sub
loop
mov
std
dec
mov
cmp
lret
cld
loop
dec
dec
mov
into
leave
add
popa
leave
pop
mov
mov
das
push
inc
inc
insb
mov
fdivp
sub
xchg
icebp
sbb
or
dec
sbb
pop
andl
insb
jnp
rcl
push
enter
std
sbb
pusha
and
xchg
icebp
inc
or
aaa
sahf
mov
ret
and
pusha
mov
clc
pop
sbb
test
xchg
fisttpll
loope
xchg
cmp
add
in
sbb
pop
mov
and
xor
jo
push
mov
jae
ret
cmp
jmp
add
insb
and
sub
inc
cmp
enter
cwtl
jnp
enter
lock
mov
daa
mov
loopne
pop
push
testl
jne
and
dec
mov
out
cmc
inc
push
and
fstpl
arpl
xor
sbb
lret
sub
mov
or
xor
and
pop
fbstp
mov
mov
test
pop
ret
iret
dec
pop
cmp
dec
int
cmp
mov
fnsave
or
lret
adc
lods
test
fsts
loope
mov
std
movsb
fwait
out
in
pop
jne
shr
lcall
push
xchg
arpl
popa
jmp
pop
cmp
sbb
pop
or
cwtl
aam
ljmp
fmull
mov
xlat
pop
inc
push
fldenv
jg
sub
mov
scas
inc
inc
cmp
mov
fistpll
lret
and
lret
jg
pop
sahf
mov
popf
stos
pop
mov
out
jo
clc
push
test
cmpsb
in
jp
pop
xor
push
stc
sbb
std
out
jo
cwtl
jb
shl
fdivl
adc
jne
ja
sahf
add
loope
in
xchg
das
into
jnp
das
cltd
dec
add
paddd
mov
rcrb
mov
sbb
sbb
addr16
jge
psrlq
cmpl
jge
jg
daa
iret
das
inc
fcomps
adc
mov
push
cmc
lret
xor
or
xchg
data16
leave
inc
ret
ror
test
in
pop
mov
and
das
out
push
push
loop
adc
enter
hlt
pop
and
inc
enter
pop
fwait
sub
pusha
aam
dec
mov
dec
sbb
mov
loop
push
imul
cmpsb
mov
and
daa
jo
popa
idiv
xlat
outsl
scas
mov
add
push
push
pop
scas
in
jp
sbb
pop
and
inc
testl
icebp
iret
into
pop
inc
lods
repz
shll
sbb
fiaddl
pop
stos
pop
lds
inc
cltd
aaa
mov
push
dec
mov
mov
arpl
jmp
hlt
ss
pop
cmp
push
xchg
scas
pusha
fcmove
inc
pop
dec
push
leave
or
jle
fildl
fcmovu
sub
mov
scas
xchg
in
imul
push
mov
movsl
mov
mov
push
js
inc
je
pop
push
inc
ret
or
test
mov
out
mov
movb
adc
shrl
xchg
fs
rolb
push
psllw
hlt
xchg
in
xlat
roll
or
pop
and
sub
fs
sbb
xchg
xor
cmc
jecxz
es
xor
arpl
in
lret
pop
cmp
fldt
lahf
sbb
mov
or
ret
ret
inc
movsl
test
xor
addr16
pop
xor
lret
mov
sub
leave
cmp
iret
shr
bnd
xchg
ss
dec
in
mov
lods
cltd
and
stc
sti
aas
xchg
jge
ret
sub
fwait
mov
or
mov
mov
sbb
gs
add
add
fnstenv
jns
add
outsb
lahf
jns
outsb
in
add
fistpll
insl
adc
out
push
or
push
insl
pop
jno
and
sti
adc
push
cli
and
mov
xorb
inc
add
rorb
mov
and
ljmp
scas
mov
adc
icebp
pop
repz
test
hlt
arpl
repz
xor
int
xor
inc
jns
cmp
fisttps
inc
es
in
inc
add
mov
jmp
add
es
ja
xorb
repnz
bound
push
mov
inc
adc
sbb
xchg
xchg
sub
es
andl
out
or
subb
int
inc
mov
inc
inc
push
mov
or
ss
sub
cli
js
mov
mov
xchg
inc
shlb
das
dec
or
pop
sbb
std
in
sub
push
mov
test
jo
dec
dec
jns
fisttpll
dec
or
std
xchg
loopne
js
mov
out
lock
mov
std
pop
adc
sbb
stc
std
push
xchg
es
pop
aas
mov
dec
test
lret
jne
mov
in
inc
icebp
add
dec
cmpb
adc
push
ret
xor
jp,pt
lods
push
std
mov
scas
xchg
xlat
inc
pop
stos
popa
push
mov
mov
inc
and
mov
jle
or
mov
and
bnd
dec
in
adc
cmp
aam
mov
and
dec
test
jmp
sub
sbb
cmp
add
nop
pop
push
cmp
sar
ja
inc
mov
push
frstor
ljmp
icebp
aad
jb
int3
mov
and
ret
mov
stos
inc
in
call
sarb
rolb
xchg
dec
stc
in
lea
jb
rcrb
push
fwait
rsqrtps
mov
int
xor
or
lret
xlat
and
enter
scas
adc
mov
jg
push
mov
push
popa
imul
and
mov
outsb
arpl
fdivl
cli
ficoms
in
addr16
iret
ja
test
leave
int3
and
sarb
jo
jb
and
mov
jge
js
orw
jg
repnz
add
or
xchg
sub
push
mov
mov
add
in
pop
orl
xor
jmp
jno
and
rolb
test
push
mov
xchg
jae
lahf
add
lock
lock
out
or
push
push
shlb
aam
mov
imul
sub
movsl
loope
out
mov
pop
xor
pop
dec
mov
out
or
dec
xchg
mov
int3
push
dec
push
popa
sub
or
cmp
mov
push
mov
push
fistpl
std
jb
lahf
mov
inc
mov
xchg
and
xchg
imul
dec
pop
add
lcall
mov
in
cmp
mov
sub
mov
cltd
sbb
jbe
adc
fnstenv
add
cmpsb
jecxz
clc
cmp
mov
jb
or
jl
andps
mov
ret
xor
mov
cmpsl
rorl
inc
subl
xor
xchg
imul
pop
aam
scas
pop
push
sbb
mov
xchg
int3
ljmp
mov
cmp
fadd
scas
in
mov
jmp
lret
lods
or
jne
ret
xchg
mov
push
in
push
ja
pop
push
je
int
push
out
mov
dec
leave
cli
fildll
xor
xchg
push
rcrl
test
fisttps
pop
js
sbb
xlat
inc
cld
cmp
inc
test
inc
sbb
insl
mov
jae
push
rcrb
loop
shlb
aas
rclb
dec
and
jnp
jg
jo
push
xchg
ja
cmp
add
fwait
sbb
mov
xchg
pop
mov
push
ret
int3
mov
xor
lods
dec
das
or
cmpsb
idivl
daa
test
pusha
mov
imul
dec
add
lods
sub
mov
xchg
lock
cmp
sub
ficompl
nop
push
inc
test
pop
js
inc
fs
dec
aaa
pop
or
pop
or
mov
mov
or
mov
scas
popf
stos
lock
pop
scas
sub
dec
enter
jae
stos
mov
push
pushl
cld
aam
sbb
push
inc
dec
movsl
add
movsl
loop
jno
fisttpl
fsubrl
mov
push
out
dec
cmp
mov
mov
sbb
or
shl
mov
ret
lock
fildll
icebp
mov
xchg
pop
sbb
sbb
sub
xchg
stc
mov
cmc
je
movzwl
jge
into
mov
add
dec
push
add
rclb
xchg
ret
loope
cmp
sub
in
xorl
subl
inc
or
imul
add
push
xchg
inc
add
jo
fsub
inc
pop
cli
ljmp
aam
nop
jns
iret
xchg
pop
dec
cmc
mov
mov
push
imul
cmpsl
push
cmpsb
aas
mov
sbbl
or
out
and
out
sbb
mov
push
jle
popf
xlat
sub
imul
imul
movb
inc
pop
sbbl
aas
hlt
aam
mov
mov
shlb
adc
shrb
out
pop
in
outsb
popa
lods
sbb
imul
and
xor
pop
xchg
or
sub
fcomps
imul
imul
dec
hlt
iret
cmp
aas
xchg
ljmp
nopl
imul
mov
jge
mov
pop
jg
dec
arpl
aam
inc
push
scas
ret
dec
and
xor
shrb
mov
mov
jp
jmp
or
cmpsl
xor
cmp
int
or
or
pop
movsb
push
sarb
imul
push
cmp
je
pop
push
push
mov
jno
repnz
into
pop
mov
call
shll
push
jne
or
mov
adc
pusha
sub
loop
dec
cmc
pusha
es
fs
ljmp
cmp
pop
arpl
dec
sbb
push
push
fs
push
lds
js
jb
mov
or
push
jge
outsl
pop
sub
cli
xlat
mov
popa
or
out
pop
or
inc
mov
pushf
aaa
test
push
pop
push
xor
fisttps
pop
or
aaa
cmp
pop
mov
or
das
adc
les
and
nop
sarb
sbb
imulb
mov
xor
xorb
cmpsb
and
xchg
stos
daa
cmp
repnz
aaa
xor
sbbl
jl
cmp
dec
sub
mov
scas
pop
pop
pop
orps
mov
in
pop
test
push
cmp
cmp
mov
stos
repnz
adc
inc
pusha
sub
pop
ds
call
push
push
push
data16
cs
je
lret
fs
xor
dec
fisubrl
jb
inc
adc
or
popf
in
and
sub
stc
xor
dec
jp
movhps
xorb
xchg
into
jno
mov
mov
orb
dec
popa
lods
je
fwait
sbb
add
cmpsb
aaa
fistpll
sar
sbb
and
shlb
mov
mov
inc
stos
ja
cmp
adc
xchg
rcl
mov
fdivl
mov
xor
aad
hlt
jno
test
movsb
cmp
loopne
std
stc
loope
jnp
mov
js
mov
xchg
ret
fsubl
pop
fmuls
mov
mov
push
aaa
test
add
ljmp
subb
orl
hlt
ss
adc
cmc
mov
mov
fsubs
adc
data16
push
out
imul
dec
dec
jp
gs
icebp
mov
iret
inc
in
push
xor
sbb
and
pop
add
stos
jmp
dec
jb
pop
subb
lods
xchg
sub
imul
rcrl
movsl
mov
jg
and
mov
subb
aaa
cli
movsb
iret
cs
jbe
push
add
mov
pop
mov
push
add
pop
enter
dec
insb
lret
mov
ret
mov
xor
xor
adc
in
ficoms
inc
add
add
imull
jbe
sbb
jbe
cwtl
push
add
faddp
sub
hlt
and
bound
inc
sbb
data16
pop
sti
xchg
bound
stos
lcall
sbb
inc
out
jecxz
pop
scas
ss
pop
xor
dec
add
push
shl
jae
shl
sub
push
jno
and
push
mov
adc
nop
and
pop
loope
sub
dec
cwtl
negl
clc
xor
aas
loopne
adc
popf
or
rorb
std
fucomip
dec
pop
jmp
js
test
shll
push
xlat
push
dec
std
leave
inc
xchg
xchg
mov
andl
dec
or
mov
pushf
std
dec
push
shll
push
testl
xor
ljmp
push
jne
dec
es
push
cmpb
call
cmp
sbb
lods
sub
outsb
cli
std
or
bound
cmc
jp
daa
or
inc
popa
jb
loop
aas
pop
add
or
xchg
cmp
lret
in
ja
push
inc
xchg
sbb
jp
pop
into
inc
je
into
dec
sbb
jb
fwait
jmp
test
push
add
scas
cmp
fimuls
cmp
shrb
cmp
mov
jmp
and
jbe
orb
sub
shr
into
cmp
repnz
das
sahf
aam
cmpsb
int3
cwtl
test
ret
das
stc
cli
es
aam
sub
movb
jecxz
decb
or
push
push
hlt
pop
lahf
adc
cmpsl
fists
adc
mov
jmp
cmp
clc
js
push
mov
daa
mov
aas
pop
fdivrp
mov
inc
mov
jmp
in
aam
dec
mov
aaa
jmp
std
lahf
iret
pop
stos
ss
mov
dec
push
movsl
sub
cltd
jg
push
jne
lds
mov
push
idivb
rcrb
ret
arpl
popa
ret
in
jbe
pop
or
bound
popa
mov
adc
mov
lcall
div
aas
lea
ret
leave
xor
and
pop
push
ss
movsl
mov
sbb
dec
or
scas
xchg
add
test
mov
xor
stos
push
iret
movsb
jb
push
insl
xchg
jo
push
test
cmp
xchg
push
nop
jno
pop
pusha
popaw
inc
pusha
push
cmp
scas
je
sub
or
add
sbb
imul
xchg
int3
fistpl
repz
ds
aas
dec
push
enter
mov
sbb
and
push
inc
xchg
cmpsb
mov
push
addl
xchg
push
ficoms
xchg
sub
and
or
cmpl
fwait
jle
xchg
ljmp
mov
pop
add
mov
rcl
andl
push
stos
imul
int
adcl
adc
add
test
dec
pop
imulb
pop
add
sub
mov
pop
dec
stos
dec
adc
stos
je
cmc
mov
in
jae
mov
or
test
sbb
ret
jae
mov
jl
lock
mov
negl
push
push
push
cmc
incb
insl
into
xchg
fs
add
xchg
adc
jns
pop
sahf
in
jp
sub
fnstsw
js
pop
sbb
push
hlt
popa
test
mov
test
ja
daa
adc
cmp
int
xchg
jo
sbb
mov
inc
xor
aaa
jne
sub
mov
dec
mov
xor
int
out
sbb
mov
fcoms
orb
fptan
fs
lds
jno
xor
xchg
cwtl
in
dec
cmc
out
outsb
xlat
or
ret
mov
pop
and
insl
pop
mov
lods
mov
sub
xchg
add
fldt
mov
repz
mov
adc
dec
adc
lcall
mov
push
inc
insb
push
add
sub
or
popf
inc
hlt
dec
das
cmp
cmp
jge
cmp
pop
mov
in
push
repz
outsl
mov
lret
mov
mov
xchg
hlt
pop
or
shl
pop
test
stos
int3
jecxz
sbb
repnz
add
mov
int
test
lahf
sbb
sub
cmc
dec
repnz
push
fidivl
ja
or
cmp
adc
push
mov
add
fidivl
pop
or
rolb
fcoml
jae
push
mov
cmp
xchg
xor
mov
outsl
xchg
loop
loop
sub
fisubs
adc
enter
shrb
xor
fistps
sub
insb
in
sahf
call
ja
nop
loop
ja
dec
stos
fwait
aam
arpl
mov
dec
outsb
imul
jp
push
repz
clc
inc
cmp
hlt
push
dec
cli
and
movsb
sub
jmp
push
push
xchg
movsl
rcrl
sbb
imul
xor
inc
dec
push
pop
jp
jl
pop
push
fcompl
xchg
ds
lret
nop
jge
sahf
mov
inc
ja
rcl
inc
sub
mov
pop
rorb
add
hlt
jmp
mov
ror
adc
dec
or
adc
or
mov
mov
sbb
repnz
imul
dec
push
mov
or
cmp
mov
lahf
cwtl
std
hlt
iret
push
jne
xor
adc
inc
sahf
sub
pop
fdivl
sbb
dec
sub
inc
push
nop
inc
outsl
xchg
inc
add
fists
dec
jne
in
inc
lcall
mull
inc
pop
roll
pop
push
mov
mov
out
pop
cmp
lret
in
or
jge
pop
lods
aam
push
mov
enter
push
dec
mov
xchg
push
add
test
mov
pop
and
jns
test
dec
sbb
aaa
or
cwtl
in
and
pcmpeqw
xor
mov
inc
call
mov
lock
ret
shrl
adcb
hlt
stc
imul
ret
mov
mov
inc
or
or
faddl
pop
jecxz
mov
adc
mov
and
into
test
or
shrb
xor
ds
xor
popa
int
cltd
cld
call
insl
pop
sub
dec
cmpsl
shll
mov
daa
add
outsl
mov
mov
mov
bound
xchg
inc
std
pop
fiaddl
repz
loop
and
xchg
test
fistps
mov
pop
outsl
fcomi
fbld
stos
mov
mov
lods
or
pop
mov
mov
add
and
test
in
inc
xor
movsl
jle
jae
out
stos
aaa
pop
dec
or
inc
loopne
addr16
inc
jg
fisubl
cmp
pushf
mov
not
push
or
mov
call
movsl
jo
xor
iret
in
or
lods
adc
mov
mov
cs
lcall
outsb
out
lcall
pop
jecxz
mov
idivb
pop
inc
clc
xchg
or
or
pop
xor
aas
imul
jns
ret
mov
into
mov
sub
sbb
mov
jnp
pusha
jle
outsb
push
out
inc
adc
mov
icebp
or
lret
inc
mov
mov
mov
stc
sub
add
bound
sbb
cmp
lcall
sbb
mov
cmp
cwtl
cmpsl
inc
push
sti
jo
fxam
add
imul
jno
adc
lock
xchg
dec
mov
ret
fwait
jge
xor
pop
test
sub
cmp
ficoml
mov
out
loopne
jns
jg
pop
aad
loope
jo
dec
aad
jb
and
inc
imul
int
mov
fs
out
sub
xchg
push
xor
andl
adc
pop
aaa
stos
iret
mov
pushf
iret
sbb
imul
push
ds
bound
es
adc
cwtl
lahf
dec
xor
dec
pop
jns
mov
xchg
push
pushf
idivb
xchg
sub
inc
mov
flds
fisttpll
adc
sbb
dec
lret
mov
add
pop
pop
inc
or
outsl
inc
mov
mov
and
lret
test
call
sbb
pop
add
cmpsb
push
jmp
fistpl
mov
sub
sub
sub
adc
jecxz
and
sub
mov
push
lea
dec
mov
inc
subb
mov
imul
mov
or
aas
lods
mov
or
in
pop
shlb
jnp
xor
rolb
fwait
scas
ss
xlat
daa
gs
dec
leave
adc
jae
push
fucomi
lret
xor
add
xorl
or
push
mov
jb
jne
pop
adc
cli
mov
cltd
rolb
cmp
fcompl
test
inc
pop
xchg
les
push
cltd
int3
inc
movsl
ret
mov
lea
cmpsl
pusha
jp
insl
loopne
sti
adc
std
sbb
in
xchg
sub
je
outsb
pop
mov
inc
pusha
enter
div
js
pop
out
int
lret
sbb
test
dec
aad
mov
bound
push
out
and
lea
mov
cmpb
mov
movsb
movsb
jecxz
mov
leave
xchg
mov
addr16
jb
xchg
pop
add
imul
fistpll
pop
sbb
loope
dec
js
and
out
sahf
iret
sub
shr
cld
sti
fdivs
xor
sti
testb
ret
lds
mov
ljmp
push
ja
push
jecxz
mov
cmpsb
xchg
psrad
mov
shr
jp
shll
scas
rorb
jp
dec
cwtl
lods
jle
adc
dec
in
lret
or
pop
pushf
inc
cmp
cli
sti
sbb
out
mov
gs
ljmp
or
iret
imul
jns
ds
mov
loope
mov
or
icebp
aam
js
in
and
jo
push
out
cmp
mov
outsb
mov
sub
and
or
push
pop
das
mov
or
add
testb
pushf
sarb
sarb
jl
adc
decb
xchg
adcb
in
stc
pop
jbe
mov
mov
pmulhuw
out
push
mov
xor
mov
mov
sar
cli
or
loope
pop
nop
mov
sbb
dec
stc
mov
adc
in
lcall
mov
mov
xlat
push
pop
mov
mov
outsl
fcmovnb
std
idivl
mov
movsb
jg
repz
mov
or
paddd
inc
fistl
divb
sbb
hlt
je
add
pop
push
aam
jle
sub
mov
pop
fcoms
ds
cld
xor
push
repnz
daa
leave
outsl
dec
divl
jne
push
cmp
jle
das
adc
or
out
mov
daa
insb
outsl
xlat
or
pop
add
subb
jns
cmp
enter
jl
jecxz
int
xor
push
fiadds
filds
push
xchg
cs
xor
js
cwtl
stos
sti
into
in
jle
dec
jbe
mov
dec
push
pop
or
add
iret
sahf
dec
loope
data16
clc
jmp
icebp
bound
push
repnz
outsl
pop
rcrb
pop
mov
push
mov
xchg
sbb
xor
or
gs
xor
incb
iret
fcoml
fists
out
add
push
dec
mov
xor
jl
clc
out
xchg
and
mov
test
jne
movsb
xchg
sbb
push
sub
xchg
xor
clc
mov
and
jne
add
jo
movsb
nopl
add
aam
mov
sbb
inc
jb
fstpt
add
adc
test
push
ds
mov
sarl
xor
inc
jae
pop
dec
sub
xor
add
enter
add
inc
rcrl
mov
sbb
or
pop
mov
xchg
mov
cli
inc
fiadds
cmpsb
jmp
lds
dec
push
pop
cmpb
jmp
stc
cs
mov
je
sbb
cmp
incb
cmp
push
lret
mov
clc
je
hlt
in
mov
inc
subl
jg
sub
add
jecxz
jl
inc
popf
sub
add
sbb
jb
xchg
dec
sti
ret
sahf
and
ljmp
pop
js
adc
out
jmp
sbb
cmpsb
jecxz
aam
inc
cmc
fsubrs
add
pop
sub
je
mov
fiadds
mov
jge
ret
mov
mov
or
out
jne
dec
stc
xor
push
cmp
subl
rcrl
leave
lcall
jl
stc
push
movsb
fsts
dec
xor
xor
inc
cmpsl
inc
shll
incl
xor
sub
push
dec
fs
add
insb
outsl
movl
push
rcrb
push
adc
jecxz
jmp
adc
call
dec
dec
mov
out
sbb
xlat
cmp
mov
lret
out
gs
aam
cmp
outsl
pop
call
sbb
and
in
dec
pushf
sub
sub
imul
call
sbb
xchg
cli
and
sahf
and
mov
loop
inc
push
inc
mov
jge
popf
lods
xchg
xchg
xor
xlat
out
stos
lods
push
mov
fisubrl
pop
pop
xchg
cmp
aaa
hlt
and
mov
das
sbb
pop
mov
arpl
stos
mov
aad
push
cmp
xor
fbstp
cmp
adc
out
pop
mov
jb
cs
test
dec
xor
pop
rclb
mov
push
iret
xchg
pop
clc
or
and
inc
rcrb
xchg
inc
lds
xor
pusha
mov
icebp
pop
incl
jmp
mov
rcll
leave
hlt
fs
icebp
jle
inc
mov
xor
sti
push
and
sub
jnp
pop
lret
and
arpl
mov
out
js
incl
mov
lock
xchg
mov
adc
loopne
leave
and
je
in
or
movsl
mov
pop
pop
fisubl
mov
lcall
add
xor
inc
mov
out
dec
fxtract
dec
aas
or
iret
pop
mov
out
xchg
lahf
pushf
lods
ret
stos
dec
out
daa
clc
cmp
arpl
aas
imull
adc
stos
add
jge
add
daa
pop
dec
push
imull
pushf
xchg
std
push
and
filds
add
adc
aas
push
sti
inc
cwtl
jne
testb
aad
fwait
mov
push
shrb
jns
add
mov
and
test
cmpsl
popa
adc
fisttps
pop
pop
out
and
test
ljmp
xchg
inc
jge
mov
jbe
or
aaa
imul
xchg
mov
cld
call
push
jg
lods
fstpt
inc
mov
fprem
cmpsb
mov
pop
push
or
xor
dec
hlt
inc
arpl
movsb
push
loope
sbb
int
fldenv
jl
sub
sbb
fildll
frstor
adcb
dec
loop
aaa
add
add
xchg
aaa
add
orb
sbb
push
jecxz
inc
addb
fs
jge
inc
cmc
xchg
xor
sub
sub
test
stc
call
xor
cmp
mov
dec
mov
push
add
push
or
add
push
xor
mov
mov
out
add
add
mov
dec
ds
jne
les
mov
iret
and
fildl
stos
lahf
fbstp
movsl
lret
pop
add
inc
mov
dec
push
pop
pop
mov
sub
outsb
negl
mov
js
sbb
int
pop
dec
mov
push
ds
mov
addr16
addr16
es
pop
fsubrs
dec
int
test
dec
xchg
andl
outsb
jns
xchg
push
outsb
sbb
adc
popa
insl
mov
xchg
scas
scas
pop
out
xchg
aaa
xchg
imul
mov
out
xchg
mov
or
cmpsb
mov
sub
adc
dec
test
lret
ds
ja
popa
outsl
push
xor
mov
mov
fs
xchg
jge
das
hlt
pop
out
ss
loop
jmp
rcrl
sub
test
sub
xor
xor
jecxz
jns
mov
data16
lahf
sub
pop
xchg
adc
dec
pop
jmp
push
loope
clc
es
jae,pt
adc
bound
sbb
add
insb
mov
in
jp
das
rorl
sahf
adc
jne
addb
xor
test
out
sub
xor
test
push
xor
stos
std
fnsave
bound
jne
cmp
fiadds
bound
leave
dec
cld
sbb
aad
adcl
je
fidivrl
mov
or
das
xchg
in
pop
cmp
loope
testb
sbb
lahf
push
and
inc
arpl
inc
dec
inc
sub
jmp
loop
loop
out
lock
mov
test
mov
and
push
or
scas
mov
fdivrp
push
or
mov
pop
in
mov
int
hlt
mov
dec
xor
adc
aam
ss
sahf
gs
repnz
sub
sub
push
cmpsb
mov
adc
sub
cmpsl
icebp
rclb
sbb
xchg
adc
in
or
sub
xchg
or
popa
jle
cltd
loopne
lods
ret
mov
fs
sbb
rol
xchg
pusha
push
movsl
xchg
xor
lea
sbb
aam
and
sub
xor
test
cmovbe
ret
aaa
es
dec
xlat
jnp
in
jnp
mov
lds
leave
in
leave
lods
shrl
or
adcl
addr16
push
mov
dec
cli
mov
insl
mov
in
sub
cld
std
es
push
sub
movsb
or
int
add
cs
std
push
cmp
clc
adc
or
out
rorl
imul
cmp
dec
sub
int
lret
pop
mov
xor
sbb
adc
pop
sarl
fiaddl
mov
jo
in
out
or
dec
jmp
mov
xchg
pop
pusha
js
jae
jb
sub
and
and
std
pop
mov
arpl
xor
pop
push
loop
xchg
jnp
mov
add
sbb
xlat
ljmp
push
jae
orl
mov
adc
or
loope
imul
pushf
movsl
or
mov
in
pop
sbb
dec
push
cmpsb
popf
mov
add
mov
cmp
cli
lods
outsb
pop
enter
ret
dec
pop
loop
mov
popa
insl
out
pop
dec
es
movsl
dec
sbb
incl
cmp
ja
leave
pop
xchg
sub
stc
movsl
clc
insl
loope
push
cmp
dec
lods
jne
out
movsl
lds
sahf
mov
rcrb
xchg
bound
push
fiadds
ljmp
xor
je
aad
xor
lahf
jo
pop
dec
sbb
push
sub
sub
ret
fsts
sbb
rolb
cltd
xchg
enter
sbb
push
inc
lea
scas
sub
shr
jbe
decb
push
js
insl
enter
jle
adc
or
scas
dec
xor
inc
int3
je
lahf
dec
popa
stos
or
out
cmp
sub
xor
pop
mov
mov
xorl
aaa
rorb
sub
adc
xchg
adc
rclb
jbe
push
hlt
out
stos
inc
xchg
cltd
cmp
fcomp
cmc
or
dec
test
xor
xor
dec
cmp
mov
inc
daa
aaa
sbb
sbb
addr16
mov
or
mov
inc
je
fists
out
outsb
out
fnstsw
aad
andb
sahf
or
aas
lahf
mov
xchg
fistl
xor
and
je
sbb
xor
es
iret
iret
test
das
fldenv
out
fistpl
and
push
test
or
dec
movsl
roll
adc
test
xchg
scas
out
dec
ja
pushf
and
jg
fcoml
mov
sti
xchg
sub
and
sbb
test
arpl
js
xchg
lahf
loop
lods
cmp
jecxz
cltd
jbe
mov
xchg
cltd
xor
cld
xchg
test
dec
adc
fwait
mov
mov
cmp
pop
repnz
add
mov
cld
push
cmp
sub
mov
fcmovu
nop
mov
cmc
pop
adc
in
pop
cmpsl
out
cltd
xor
cld
add
mov
cwtl
mull
xchg
pop
jmp
pop
cltd
lret
scas
cmpsl
rolb
pop
dec
popf
push
rcrl
bound
fs
mov
inc
jge
sbb
push
rcrb
inc
cli
imul
push
inc
mov
jb
mov
ret
sbb
push
mov
cmp
sahf
add
in
and
mov
shll
cld
leave
xchg
mov
xchg
aaa
xchg
sub
jb
idivb
jle
xchg
imul
lea
add
out
mov
neg
fdivs
fnsave
mov
sub
cmp
ja
mov
and
jns
fisubs
mov
addr16
cmp
add
pushl
and
in
faddl
mov
pop
sub
sahf
fsubp
or
or
fnstsw
mov
jnp
fdivl
loopne
sub
cmp
sub
outsl
mov
mov
popf
xor
and
sbb
adc
or
outsl
push
lcall
jmp
mov
cli
mov
dec
or
add
cmpsb
sub
dec
lods
ljmp
jb
add
sub
sbb
ljmp
mov
xchg
adc
sub
fcom
aam
cmp
aam
add
push
loope
push
jne
dec
and
dec
mov
ret
sbb
pop
or
push
xchg
data16
push
fs
pop
aad
pop
xor
stos
popf
cmp
ror
scas
rcll
xchg
mov
outsb
rcl
or
cmp
xchg
rolb
and
sub
clc
mov
scas
loop
fdivrs
and
cwtl
xchg
adc
mov
sbb
xchg
imul
mov
icebp
sub
ss
pusha
push
lds
call
push
cwtl
cmp
add
repz
and
ret
sub
imul
inc
xchg
push
add
inc
daa
shrl
repnz
pop
cli
shl
push
stos
inc
mov
sbb
test
or
xor
lahf
ss
setp
inc
sub
push
jle
movsb
jo
lcall
out
insb
and
dec
into
ds
inc
ficoms
dec
jns
stos
loop
ret
sti
out
les
movsb
arpl
cmp
dec
jae
mov
icebp
mov
pop
xchg
ja
stos
mov
cmpl
lods
icebp
fistpl
stc
cld
stc
mov
aas
dec
mov
mov
insl
arpl
xchg
sub
test
adc
std
xor
ror
mov
or
and
push
dec
mov
lret
xor
fdivs
xchg
idivl
imulb
leave
loope
dec
pop
xchg
pop
lret
out
shlb
stc
es
or
rorl
mov
mov
bnd
or
and
loope
in
jmp
mov
cmc
stc
popf
dec
mov
cli
or
add
cmp
iret
xchg
xor
pop
jle
xchg
xor
cmp
ret
in
sbb
cmpsl
dec
out
push
int3
push
hlt
xorb
or
les
jno
loope
xor
add
or
lret
testl
cmpl
pushf
add
nop
aam
cmpsb
jbe
mov
add
pusha
arpl
cmp
inc
mov
jne
out
fs
int3
jb
es
fcoms
pop
hlt
int
pop
cmp
xchg
and
ffreep
int3
lods
xor
push
jo
xchg
mov
stos
lahf
mov
adc
decl
sbb
into
mov
imul
dec
lahf
outsb
mov
jbe
aam
mov
adc
dec
jmp
sbbl
test
cltd
mov
cmp
rol
arpl
xchg
popa
stc
xchg
movsb
cmp
aaa
int
outsl
mov
jle
dec
inc
pop
pop
inc
cmp
out
in
imul
mov
push
xchg
push
sub
test
mov
aad
jmp
inc
jmp
mov
push
in
mov
out
sbbl
into
sub
mov
mov
cmc
hlt
sbb
mov
adc
testb
leave
and
cmp
loopne
jb
jo
leave
clc
push
shr
push
mov
fst
push
mov
pusha
cmc
pusha
or
mov
cli
in
sti
adc
push
xor
pop
inc
shll
and
popa
cmpsl
lcall
cmp
mov
adc
jo
inc
rcrl
iret
inc
fsubl
push
and
lock
filds
popa
xor
inc
jp
rcrb
mov
repz
pop
cmp
push
inc
test
mov
xor
mov
sub
adc
aam
movsb
pop
sbb
aaa
and
pusha
movsb
fstl
je
inc
push
cmp
imul
scas
aas
movaps
bound
mov
dec
in
aaa
cmp
test
mov
loop
adc
daa
lret
out
mov
dec
lret
frstor
push
jl
in
push
mov
cmp
lods
lds
push
jmp
and
cmpsl
test
lds
fucomi
mov
inc
push
cwtl
inc
lret
mov
shll
loop
pop
add
lods
inc
sahf
repnz
add
fsts
jecxz
lock
mov
xchg
mov
shl
sub
mov
mov
hlt
jno
cltd
push
xchg
scas
int
push
fnsave
subps
inc
stos
xor
fcompl
mov
push
adc
sahf
into
sahf
popa
jg
xor
add
sbb
mov
loope
jl
out
nop
frstor
pop
clc
mov
pop
mov
jno
cmp
aam
lret
push
adc
test
sub
pop
mov
or
fwait
jle
dec
dec
lret
push
loop
xchg
nop
and
int
jns
cmpsb
push
and
scas
mov
jb
movsl
aam
xchg
jbe
sub
std
pushf
ret
jb
sub
mov
sbb
push
insl
mov
fiadds
aad
call
call
nop
push
pop
mov
sub
sub
pop
jl
mov
outsb
add
push
add
movb
pop
enter
xor
push
jp
das
pop
loope
pop
dec
mov
mov
lahf
inc
lcall
cmpsb
outsb
jecxz
js
xchg
lcall
in
jg
outsl
or
nop
mov
push
jmp
bound
subb
push
xor
sub
jb
les
inc
repz
imul
dec
std
pushf
mov
jne
test
inc
push
into
dec
dec
mov
jmp
lret
ret
adc
outsl
call
shlb
pop
xchg
push
fimuls
add
push
ljmp
xor
cld
sub
popa
sbb
ss
pop
dec
add
enter
aas
dec
inc
mov
test
pop
sahf
sub
xor
bound
mov
ljmp
cmp
push
xchg
fistpl
sub
in
shlb
fldenv
lods
testb
jo
and
sub
es
push
cli
idiv
mov
mov
ss
sbb
fldt
aam
mov
jb
js
ror
cmp
push
push
sti
imul
mov
lock
cmpsb
std
push
scas
add
bound
lcall
mov
loop
mov
ja
mov
call
inc
xchg
xlat
inc
fwait
jle
pop
xchg
jg
lahf
mov
pop
adc
mov
fstp
mov
cltd
push
ret
fs
push
jge
dec
movsl
test
pop
xor
add
add
sbb
stc
or
lret
sub
lock
dec
inc
push
jae
jmp
shlb
repz
xlat
cmp
es
adc
arpl
lea
test
loopne
or
dec
sbb
or
inc
out
mov
cmp
outsl
sar
insb
xchg
int3
push
cltd
dec
sub
fwait
add
lea
xlat
lds
idivb
mov
adc
mov
dec
insl
mov
and
pop
andb
xor
sub
ficomps
test
pop
repnz
movsb
stos
cmpsl
mov
lds
sbb
mov
jle
mov
xchg
paddd
imull
xchg
xchg
pop
pop
inc
fwait
dec
inc
cld
and
adc
inc
aaa
lahf
sahf
ljmp
pop
add
hlt
in
stos
xlat
inc
push
dec
out
dec
lock
dec
movsl
xlat
roll
cli
push
aaa
sbb
negl
jl
repnz
push
mov
addr16
jb
mov
fwait
xlat
jl
xor
pop
inc
adc
dec
mov
dec
mov
out
orl
rclb
add
cli
scas
test
aas
ficoml
add
leave
cs
bound
inc
push
mov
mov
xchg
rcll
jle
xor
sub
fisubl
std
mov
into
sahf
enter
movsb
rol
pop
shlb
jmp
inc
pushf
fld
add
adc
mov
mov
fs
and
pop
xchg
test
inc
in
mov
aam
jbe
int3
in
adc
ret
cmpsl
xorb
arpl
inc
loope
cltd
popf
in
test
jecxz
cmp
insl
test
xlat
test
add
test
or
cmpsb
clc
cmp
gs
xchg
adc
gs
push
mov
jne
out
cmp
mov
test
movsl
shl
fidivrs
add
add
out
mov
pop
in
or
insl
movsb
mov
test
loopne
fwait
imul
cmp
adc
mov
movsl
mov
and
mov
push
cmp
scas
mov
and
fld
sbb
dec
lock
mov
jnp
and
in
jne
xchg
pop
mov
ljmp
incl
int
jae
inc
js
xor
xor
adc
jle
dec
test
fisttps
bound
adc
and
and
stos
std
rcrl
stos
pop
sub
push
jno
pop
dec
scas
add
inc
xchg
mov
mov
pop
adc
iret
loop
pop
in
rol
pop
dec
add
sub
inc
test
pusha
or
adc
aas
imul
loop
lahf
mov
cmc
xlat
fstpt
mov
in
push
adc
ficompl
adcb
dec
mov
mov
insl
jg
inc
addr16
cld
cmp
filds
mov
shl
test
rcrl
cmp
out
ja
orl
push
fst
jns
xor
imul
and
mov
sub
call
push
aas
xor
push
lahf
popf
jo
pop
cli
adc
or
sbb
and
add
jae
out
xchg
jb
ja,pn
jo
inc
ja
or
inc
sbb
inc
cmpl
xchg
scas
xchg
sub
mov
repnz
jmp
sbb
out
ljmp
or
xchg
data16
fadd
xlat
sub
or
pop
adc
outsb
push
lret
adc
sti
cmpsb
imul
pushf
push
lods
jns
test
icebp
add
test
rolb
push
je
testl
cmc
mov
mov
addr16
sbb
shrb
loopne
jns
jle
mov
fstp
imul
fwait
test
mov
ficompl
cmp
push
imul
jl
idiv
inc
adcb
jge
or
cmp
loope
inc
je
dec
add
xchg
cli
push
test
add
sub
in
mov
fwait
mov
pop
pusha
mov
ficoms
insl
iret
inc
jl
or
sub
jae
push
mov
int
dec
movsb
les
test
push
out
movsl
test
cli
xchg
sbb
pop
mov
cs
lahf
xchg
lea
pusha
pop
inc
out
popa
shll
mov
mov
inc
pop
scas
out
or
loopne
adc
cwtl
mov
push
lock
push
ds
sub
inc
add
push
jmp
cmpsb
dec
imul
mov
dec
xchg
insl
jae
inc
push
mulb
adc
jnp
add
and
jns
mov
adc
jno
mov
xbegin
mov
in
rcrl
sbb
out
sarb
xor
mov
xchg
mov
xchg
aad
std
jb
nop
and
add
jns
sbb
pop
mov
loopne
movsl
cmpl
jl
push
popf
sub
nop
sysenter
sbb
xor
stc
gs
cmpsl
je
xchg
movsb
in
or
mul
and
and
xchg
jg
out
mov
aas
or
push
imul
lret
mov
cmp
out
stc
enter
idivb
jg
int3
imul
or
cmpsl
or
lock
in
es
sti
outsl
cld
inc
and
leave
pop
aaa
push
cmpsb
rorl
into
jl
ret
push
out
cmpsl
cmp
into
and
push
je
pop
hlt
scas
clc
mov
dec
adc
inc
dec
jae
mov
nop
pop
imul
cwtl
sub
jmp
sbb
test
sbb
mov
or
test
rolb
orb
je
iret
repnz
addb
pop
mov
aas
cld
mov
xchg
jae
inc
sub
repz
pop
test
mov
sub
test
dec
cmp
or
ljmp
mov
frstor
pop
subb
or
push
lcall
fidivs
lahf
int
imul
decl
mov
cmp
mov
and
cmp
mov
lds
dec
mov
in
lock
pop
jb
dec
lods
pop
add
aad
lods
addr16
idivb
nop
xor
insl
fmull
aas
xor
daa
mov
and
jbe
je
mov
setae
inc
jnp
ljmp
push
enter
pusha
pop
adc
dec
mov
movsb
mov
jg
mov
push
inc
mov
add
daa
cmp
mov
or
sbb
mov
aam
jae
pop
dec
and
mov
sub
fsubrl
pop
and
les
push
clc
popf
test
lods
loope
into
cmp
xor
stos
inc
mov
jo
xchg
lahf
aam
in
lcall
out
push
lcall
enter
stc
xor
orb
mov
mov
ja
addr16
sbb
push
cmp
pushf
test
mov
jle
aam
into
xchg
push
sbb
mov
fsubs
cmp
fildl
sub
dec
das
or
or
mov
mov
push
sbb
fisttps
cmp
adc
push
aas
leave
xor
std
lcall
mov
in
fdiv
push
xor
sbb
inc
mov
jp
fxch
sub
push
add
xor
xchg
jg
xchg
rcl
stos
jge
push
dec
insl
subb
clc
pop
xchg
cld
pop
out
js
popf
push
mov
dec
mov
mov
xchg
into
aad
das
add
fildll
jno
sbb
std
sbb
aad
cmp
in
push
test
in
int3
xchg
lea
sbbl
mov
dec
xchg
sar
xchg
insl
iret
jmp
xchg
lds
icebp
into
sub
jae
inc
js
loop
je
fimuls
out
push
pusha
call
inc
add
in
add
push
mov
lds
push
inc
mov
clc
dec
jno
mov
xlat
adcb
cld
adc
adc
scas
jne
ficoml
pop
pop
outsb
fcompl
push
lret
lcall
mov
xchg
jae
push
testl
in
mul
fs
cmp
pop
adc
lahf
or
subl
sub
xchg
mov
or
cwtl
and
xchg
int
fstl
adc
ficoml
adc
mov
lods
mov
in
push
mov
cmp
mov
movsl
or
jnp
xchg
mov
push
mov
adc
std
subl
push
jne
jne
in
or
or
push
jp
aas
jbe
pop
adc
sub
test
es
or
adc
adc
jnp
pushf
stc
lea
ficompl
pushl
xor
or
rcl
pop
loope
cmp
xor
loope
mov
cmp
out
cmpsb
mov
push
mov
ret
loop
lret
and
int3
das
shlb
jg
aaa
jb
mov
or
sub
xor
pusha
xor
and
test
pop
mov
adc
jl
imul
xor
repz
pushf
push
mov
outsb
daa
mov
leave
push
xchg
push
push
mov
mov
scas
repnz
dec
ret
aas
jne
jge
inc
and
jbe
adc
cmpl
xchg
adc
icebp
mov
xchg
js
lea
dec
or
orb
popf
mov
inc
ja
mov
in
fcomp
sbb
mov
lret
pop
dec
pop
aaa
popa
stos
or
mov
scas
sub
popa
xchg
push
xor
sti
in
jge
cmpsl
mov
insl
das
jo
mov
add
cmc
mov
fldt
sahf
push
and
je
out
movl
and
loope
sbb
dec
mov
hlt
mov
pushf
je
enter
inc
xchg
adc
ljmp
xor
dec
stc
cld
adc
flds
jns
xchg
inc
outsl
pop
scas
push
pop
jbe
pop
gs
sub
adc
pusha
push
cmp
cmpsl
cs
cmp
pop
gs
fnstsw
dec
dec
pop
lods
push
pop
int3
pop
add
cmpsl
pushf
adc
mov
mov
inc
cmc
dec
cmp
ss
mov
in
jge
jb
cmp
xor
pop
sahf
rclb
dec
mul
inc
fistps
imul
in
pop
repnz
loop
into
out
or
jg
lret
fstl
movb
adc
mov
lcall
sarb
push
mov
fs
inc
aaa
or
das
or
or
rcr
mov
cmpsl
dec
pop
leave
sbb
jo
inc
push
nop
push
int3
xor
scas
mov
or
push
mov
dec
mov
insb
xchg
pop
imul
and
mov
test
xchg
movsb
pop
xchg
adc
sub
cmp
add
inc
dec
ss
mov
pop
loop
jecxz
cmp
cmp
rcrl
daa
imul
gs
mov
mov
std
push
jg
loopne
pop
in
mov
pop
fiaddl
adc
inc
push
inc
or
cmpsl
jg
stos
fwait
adc
mov
cmp
rol
and
xchg
lods
lods
clc
mov
sub
call
hlt
push
in
inc
je
xchg
fwait
nop
shlb
xor
or
popf
addr16
or
imul
shll
sbb
mov
popa
scas
xchg
jae
mov
push
pop
xchg
xor
shll
mov
inc
addr16
stos
aad
scas
imul
divb
dec
cld
ja
xorb
insl
repz
dec
cmp
lods
out
mov
mov
sub
add
jae
mov
and
xchg
cmpsl
ljmp
lcall
jns
fistps
cmp
push
xchg
loope,pt
jbe
fimuls
lahf
sub
insl
mov
shrl
xchg
nop
xor
mov
xor
mov
movsl
xchg
fdivs
adc
movsl
jg
sbb
sbb
mov
xor
sbb
cmp
ljmp
sahf
push
lods
sahf
fimull
jp
lahf
test
xor
jb
outsb
jg
xchg
fidivrs
push
xchg
sub
aas
iret
pushf
loop
cmp
adc
mov
add
test
cmpsl
mov
push
cld
sbb
mov
mov
imul
xchg
gs
mov
inc
push
test
dec
lock
mov
dec
xchg
mov
fdivrl
lock
or
adc
call
lods
and
addr16
mov
stc
inc
mov
test
lahf
and
xor
icebp
ret
shrb
cs
dec
rorb
sub
loopne
iret
inc
jle
dec
test
mov
lds
inc
popl
xchg
jle
pop
rcrb
out
xchg
push
mov
ds
xor
out
jnp
mov
lret
mov
sahf
push
out
repnz
scas
push
pop
pop
jmp
jo
jge
hlt
ret
fsubr
pop
std
xor
daa
mov
xrelease
jnp
movsb
jnp
add
cmp
add
in
jecxz
dec
data16
sbb
sbb
shrb
shll
mov
or
add
je
mov
jle
lods
into
fcmove
xchg
mov
aad
mov
loope
cwtl
les
cld
and
int
and
and
xor
test
in
test
lods
sub
leave
loop
jmp
add
jle
mov
ja
call
scas
movsl
hlt
mov
dec
inc
xor
mov
imul
inc
cmpsb
mov
and
xor
ficompl
loope
cmc
test
mov
shl
fisttpll
cmpsb
xchg
and
jne
jb
add
testb
in
jecxz
cmp
sbb
add
inc
jl
neg
dec
shrb
imul
aas
lods
incl
mov
test
shlb
mov
push
dec
and
xor
mov
push
fisubs
mov
pop
into
jbe
xchg
push
xchg
cmc
or
jnp
push
xor
insb
cmovb
adc
rcrb
lcall
xor
or
std
xlat
mov
pushf
movsl
sbb
andl
test
mov
push
negb
cmp
insl
push
cmc
cltd
loope
jns
aam
cmpsl
mov
cmp
sub
dec
imul
jmp
lock
push
mov
mov
cmp
aam
aas
icebp
and
movsl
inc
xchg
sbb
movsl
cmp
jb
adcb
xlat
cmpb
rcl
sub
cmp
ret
mov
jmp
aaa
cmpsl
add
rolb
mov
les
push
pop
cwtl
xor
inc
cld
pop
mov
push
adc
ret
fs
inc
outsl
push
jg
cwtl
mov
inc
xor
jno
mov
fisubs
sbbl
out
fcompl
test
push
lret
fsts
shr
or
lds
repz
mov
lea
stc
push
cmp
mov
pop
arpl
sub
daa
jmp
or
scas
int3
in
sbb
stos
aam
mov
and
push
or
sub
mov
lret
fstpl
pop
idiv
lock
aam
xor
inc
sbb
pusha
shlb
push
fwait
aaa
loope
pusha
xchg
jg
lds
sbb
xchg
mov
cld
xor
jb
push
push
insb
out
out
mov
cmp
and
test
in
dec
ret
pop
push
cs
mov
pop
cwtl
shll
cmpsl
sub
pop
out
inc
in
inc
push
imulb
bound
scas
pop
xchg
sti
dec
pop
sub
inc
push
adc
mov
sub
test
mov
xchg
adc
push
jno
subl
inc
dec
cmp
cmp
popa
and
cmpb
shll
mov
imul
or
pop
cmpsb
cmpl
cmp
jl
mov
jl
cmpl
xor
and
fsubl
or
out
mov
icebp
adc
xor
aam
lahf
jl
inc
cmpb
cld
jmp
jno
xor
push
inc
push
and
ljmp
test
bound
mov
addr16
loope
and
pop
es
fnstenv
push
pop
cmc
sub
mov
cmp
and
lret
or
or
sbb
mov
xchg
decb
lods
inc
outsl
dec
lahf
sub
and
gs
popa
stos
add
scas
sub
fwait
popa
movsb
movsl
xchg
pop
imul
push
outsb
cltd
mov
xor
in
lods
mov
mov
inc
idiv
hlt
pop
pop
dec
jo
or
loopne
xorl
fbld
jno
sub
nop
sbb
frstor
js
sub
pop
ljmp
cmp
mov
xchg
repnz
xchg
sub
fwait
outsl
enter
cmp
aas
fimull
add
in
mov
out
xchg
stos
pop
int
sbb
mov
or
cltd
or
insl
xchg
dec
dec
sub
adc
cmp
jnp
aad
fstpl
out
sbb
xchg
sbbl
test
xor
xor
inc
push
jnp
leave
ret
jle
shlb
jle
mov
movsl
push
les
inc
out
xor
lret
push
mov
or
rorb
mov
enter
sub
je
int
add
sbb
cmp
dec
minps
nop
or
nop
fsubrs
push
std
ds
push
insl
insl
in
add
add
mov
and
clc
stos
jae
insb
push
dec
out
pop
and
outsb
clc
cmp
cltd
xor
fs
icebp
pop
cmp
push
stos
faddl
xchg
jl
xchg
sbb
andb
hlt
pop
cmp
fwait
sar
sbb
push
inc
jnp
enter
sub
jecxz
js
stos
iret
gs
xchg
in
jbe
int3
icebp
cmpsl
sub
mov
movsb
test
hlt
mov
jne
frstor
cli
mov
std
cmp
adc
rcrb
popf
insl
imul
lcall
pushf
xchg
loopne
mov
sbb
or
push
dec
andb
pop
adc
adc
stos
fldenv
pop
mov
dec
shll
fiadds
int
xchg
lods
sti
sbb
shlb
add
add
add
xchg
sbb
sub
int
insb
lods
add
fmull
cmp
popl
cmp
aam
decb
cmp
mov
test
cmp
js
in
dec
icebp
fneni(8087
repz
inc
out
fnstenv
mov
gs
or
test
cmpsl
jne
lret
add
push
sbb
pop
mov
ret
ret
pop
pop
inc
in
pusha
mov
fidivrs
cmp
movsl
rclb
pop
add
jp
repnz
cltd
and
mov
inc
xchg
insb
or
xchg
dec
inc
stos
jmp
xchg
mov
je
aas
dec
std
adc
or
out
cli
in
dec
repnz
rcrb
in
mov
xchg
pop
mov
es
lods
inc
sahf
aas
outsl
dec
or
pop
add
sbb
je
ja
mov
cmp
pop
cmp
roll
into
sbb
loope
fistpl
rcrb
cmpb
mov
pusha
xor
test
and
dec
aad
xor
mov
fsubrl
sub
and
das
orl
mov
and
cmpsl
mov
jl
pop
roll
push
mov
jae
daa
and
inc
ds
and
sti
je
cmp
fistpll
inc
jb
mov
xchg
jo
or
mov
mov
adc
aaa
xor
inc
and
inc
dec
jp
dec
fs
jb
ds
xorb
lods
add
clc
leave
sbb
loop
testb
adc
cmp
push
test
fst
xlat
out
sub
lret
test
or
movsb
add
pop
jecxz
push
sbb
jmp
dec
fcom
mov
pusha
lea
stos
popa
push
pop
inc
fldenv
mov
loope
pop
je
or
sub
dec
lret
jmp
lock
jmp
add
dec
xchg
adc
dec
je
mov
and
out
imul
in
stos
in
pop
and
in
pop
gs
xchg
int
xchg
mov
adc
rorb
mov
mov
add
cmp
push
shrb
scas
xchg
int
pop
test
adc
cmp
sub
push
adc
pop
mov
call
jae
movsb
mov
jns
scas
loopne
das
fs
jnp
subb
inc
jne
push
mov
mov
sub
adc
mov
jo
adc
jecxz
inc
xchg
or
push
out
test
aaa
data16
sbb
in
movsl
gs
adc
mov
psubb
cmpsb
push
sub
sbb
dec
lret
cmp
movsb
dec
cmp
cmp
dec
fsubrs
sbb
push
daa
xchg
lea
addl
fmull
mov
fsubs
pop
test
lea
and
mov
mov
dec
repz
cmc
dec
cmpsl
stos
ljmp
mov
adc
sub
in
aam
in
fldenv
jmp
push
fldt
adc
sete
mov
jp
adc
leave
stc
mov
fwait
into
jl
add
xchg
mov
adc
in
pop
repnz
scas
jne
xchg
sbb
pop
pop
jge
repz
es
rolb
add
outsl
jp
es
push
lcall
leave
inc
push
hlt
mov
das
inc
fnstenv
lds
inc
imul
pop
fidivs
stc
add
mov
int
sub
jno
das
arpl
rorb
push
add
jno
arpl
add
inc
out
push
adc
mov
or
push
rcl
in
mov
mov
jae
subb
adc
lods
inc
or
insb
mov
cli
push
in
int
movsl
popf
mov
cli
in
pop
sub
sub
in
sub
outsl
enter
or
jbe
push
mov
sbb
call
push
sbb
mov
sbb
nop
leave
std
call
cmp
fbstp
lcall
sbb
add
jns
loop
in
mov
pop
imul
loope
mov
xorb
jg
insb
push
inc
mov
inc
sub
popf
xor
or
push
mov
mov
jl
lea
xchg
sti
xchg
stc
mov
ret
icebp
outsl
sbb
fisttps
xor
cmp
dec
fwait
outsl
stos
sbb
std
pop
lea
insb
bound
mov
push
fcoms
leave
iret
mov
pop
stos
jo
jne
lret
sub
mov
je
std
adc
cmp
ret
out
rcl
push
sub
icebp
xlat
adc
stc
push
lock
int
cmp
fldl
int
mov
inc
iret
inc
stos
cmp
push
int3
sahf
test
add
push
or
push
mov
inc
in
adc
fcom
mov
push
es
shll
subl
fwait
sbb
mov
xchg
push
les
dec
lcall
call
enter
aad
mov
out
xor
inc
inc
loope
cli
push
mov
inc
into
popa
cmp
cmp
ret
test
sti
jo
mov
pushf
mov
adc
sub
bound
add
push
or
mov
dec
rcrb
mov
jge
xor
int3
mov
cs
insb
adc
dec
inc
push
sbb
in
js
mov
cwtl
jbe
lods
cmpsb
call
push
enter
mov
mov
fbstp
fnsave
outsb
shl
mov
push
push
inc
mov
enter
mov
mov
sbb
mov
jno
mov
sbb
push
xlat
mov
dec
pshufw
push
mov
fdivrs
inc
andb
cmpb
xchg
lock
jmp
lcall
jg
or
test
out
push
inc
jmp
jo
dec
imull
inc
mov
mov
mov
data16
add
decl
mov
mov
pop
inc
sti
push
leave
test
loopne
mov
lods
ficompl
outsb
mov
push
arpl
in
cwtl
fstpl
int
rcrl
jb
mov
xor
mov
test
bound
dec
aas
loope
or
mov
imul
dec
rcrb
loop
xor
cwtl
data16
sub
pop
sub
std
imul
in
flds
imul
test
std
inc
or
pop
mov
icebp
or
xchg
dec
inc
lahf
add
inc
xchg
shlb
loop
jae
cs
cli
outsl
insb
stc
xchg
clc
and
in
pop
jnp
cmp
jmp
or
mov
push
and
call
leave
stc
int3
push
or
mov
sbb
jg
push
shrb
cli
inc
sbb
subb
imul
xchg
and
fs
or
cmp
fildl
addr16
add
imul
mov
xchg
pop
xchg
xor
push
mov
push
lahf
pop
inc
inc
sbb
jmp
mov
dec
inc
cmc
mov
cli
shlb
fs
aad
xor
add
inc
pushf
xchg
call
ljmp
dec
sub
push
add
push
pop
xchg
push
in
mov
lret
pusha
in
dec
pop
out
ret
or
test
andl
icebp
mov
adc
xor
pop
ss
fcomp
sbbl
popa
push
inc
sbb
dec
inc
jl
nop
lods
jecxz
insb
inc
add
repnz
cld
sbb
push
stos
aad
push
leave
sub
push
stos
push
push
sub
shll
push
cld
dec
lods
sub
sub
movb
jae
js
dec
push
ljmp
lret
test
or
divb
dec
jne
fs
fyl2xp1
cmpb
pop
imul
inc
adc
andl
mov
lcall
sahf
mov
dec
xchg
fs
jnp
jbe
daa
add
push
push
add
in
sub
push
mov
sbb
outsb
rorl
cmp
movsl
mov
jno
mov
jmp
xchg
xchg
fildl
adc
sti
mov
jg
push
sub
pop
mov
out
cmpsb
or
ret
ficoml
aad
test
dec
cltd
addr16
insl
mov
insl
test
jmp
cld
jnp
add
js
je
inc
mov
enter
cmpl
mov
xchg
mov
loopne
das
lcall
adc
js
mov
fdivrs
mov
hlt
lea
add
and
fidivl
inc
xchg
stos
ja
jmp
mov
inc
int
mov
int
mov
in
mov
data16
imul
or
nop
push
xchg
add
mov
jns
or
fistpll
fldl
pop
repz
outsl
data16
push
mov
js
lret
loope
int3
enter
loop
mov
pop
xor
add
mov
cmpsl
xchg
cmc
cmp
mov
pop
pusha
inc
pop
shl
bound
repz
hlt
test
loopne
add
adc
xorb
inc
or
mov
jmp
push
dec
xor
sbb
mov
fs
inc
fbstp
arpl
dec
mov
pop
insb
jns
jb
sbb
lcall
mov
aas
fadds
xor
popf
sbb
jecxz
lods
jl
setnp
push
test
adc
mov
mov
ret
mov
mov
mov
mov
out
or
int
mov
std
or
sub
fcomip
cmp
clc
xor
push
mov
pop
or
mov
mov
inc
xor
imul
out
loope
inc
cwtl
into
icebp
sub
sub
xchg
inc
mov
pop
jnp
jg
cmp
lahf
mov
cwtl
fs
movsl
lds
leave
inc
jb
inc
ja
inc
inc
test
addb
mov
xchg
and
add
aam
popl
or
and
sub
jbe
lret
in
push
and
movsb
sbb
push
push
lret
adc
and
adc
add
inc
lock
pop
or
adc
add
fwait
loop
test
push
push
into
sub
ss
sub
jecxz
int
lds
mov
lret
out
inc
lret
or
jbe
movsl
pop
add
xchg
xor
imul
out
add
dec
sahf
dec
std
mov
mov
rcl
push
divl
sbb
xchg
mov
xlat
dec
jge
std
pop
jl
jbe
cmp
cwtl
mov
mov
cs
jnp
jmp
inc
insl
lds
mov
mov
jp
jns
push
daa
test
aam
mov
lcall
and
shl
pushf
push
cmp
in
imul
lret
insl
in
and
push
leave
aas
fwait
leave
hlt
mov
roll
loopne
data16
mov
sysexit
adc
ja
and
adc
sbbl
push
push
shrb
jbe
sarb
test
inc
movsb
les
jecxz
adc
loop
int
pushf
jp
dec
push
jmp
out
adc
adc
test
xor
adc
icebp
push
add
insl
int
stc
mov
das
cmp
jbe
das
sbb
std
mov
jo
insb
mov
loop
adc
into
add
dec
pop
popf
xchg
sub
ror
rolb
xor
push
xchg
or
je
push
cmpsl
or
lahf
push
push
aam
addr16
aaa
pop
dec
xor
xor
cld
lcall
mov
mov
scas
pop
int3
adc
daa
into
test
fbstp
test
jbe
mov
jmp
pop
cli
imul
sarl
push
cmp
adc
sti
insl
dec
inc
pop
xlat
and
lds
lcall
imul
pop
xchg
test
cmp
fsubr
call
ffreep
imul
adc
inc
pop
pop
mov
fisttps
enter
mov
mov
ljmp
nop
cmp
mov
dec
enter
sub
and
ja
push
icebp
pop
into
insb
out
aad
cwtl
repz
ret
je
lcall
ror
inc
dec
adc
mov
adc
adcb
cmp
mov
hlt
scas
in
sub
das
mov
xchg
adc
out
push
mov
dec
stos
jno
in
inc
xchg
mov
fxch
add
loop
mov
and
rorb
adc
popa
inc
cbtw
int
push
in
in
jb,pt
inc
ffree
jo
int3
ljmp
mov
xchg
cmp
dec
mov
cmp
xchg
cmc
movsl
leave
pop
es
xchg
enter
icebp
inc
mov
cmp
mov
mov
jno
adc
aaa
test
icebp
sub
mov
daa
pop
mov
push
inc
das
mov
sub
xor
scas
add
and
sub
sub
jge
or
loope
mov
lret
mov
mov
xchg
pop
out
adc
dec
pop
add
dec
sbb
or
incb
cmc
adc
xor
clc
sub
sub
adc
push
movsb
push
out
xor
xorb
adc
rcrl
lods
cmp
out
push
and
inc
dec
add
pop
push
adc
out
add
sub
in
mov
xor
xor
fstp
scas
cmpsb
mov
out
or
mov
popf
mov
cmp
mov
mov
jno
push
xchg
cmp
mov
mov
cli
push
mov
addr16
into
adc
pop
sub
scas
rol
mov
nop
pop
push
lret
mov
or
adc
cmp
dec
shl
dec
jb
dec
and
cmovg
jecxz
pop
sahf
or
cmp
pop
jae
call
mov
or
dec
mov
push
sbb
inc
jl
and
test
sbb
cltd
pushf
bound
xchg
xchg
stos
jl
sub
inc
mov
call
shrl
cmpsb
sbbl
add
jo
jp
bound
inc
lret
adc
out
pop
clc
or
hlt
push
add
mov
or
mov
fcom
xchg
mov
mov
sbb
scas
lahf
adc
add
movsb
fsubrl
pop
in
outsl
cmpsb
push
mov
icebp
xlat
loope
pop
adc
mov
sbb
in
lods
int3
or
aam
cmp
jo
add
mov
dec
lret
inc
into
ficomps
popf
test
in
loope,pn
movsb
js
pop
test
pop
sbb
fistpll
pop
mov
mov
cwtl
dec
jne
hlt
jbe
push
scas
lds
jl
or
fdivs
xor
mov
sub
shl
int3
cld
mov
inc
dec
mov
sbb
cli
push
and
sbb
pop
stc
lahf
jo
pushl
sbb
out
jae
xor
pop
popl
sub
cmp
xor
lret
dec
cmp
cmp
adcb
shrb
xor
mov
subl
jno
cli
mov
mov
rorb
add
stos
rcl
test
nop
cwtl
fnstenv
push
popf
fsub
inc
in
jno
sub
dec
lret
adc
or
jno
and
sarl
jne
arpl
inc
repz
mov
xor
mov
leave
and
or
lea
sub
aad
push
movsb
dec
sbb
clc
arpl
frstor
das
push
cmp
mov
lea
enter
aaa
popf
subb
movsl
in
in
hlt
adc
add
movsl
jecxz
ljmp
and
shll
inc
cli
nop
sub
pop
mov
movsb
jge
cmp
mov
or
mov
fbstp
inc
sbb
sub
lahf
jns
gs
inc
in
stc
inc
out
jmp
shld
jns
adc
dec
sarb
lods
sub
fstpl
jne
sahf
jp
jecxz
add
push
cld
adc
cmp
cli
cmc
cwtl
add
cmpl
out
or
fnstcw
test
dec
or
cmp
xchg
and
mull
stos
data16
and
mov
sbb
xchg
mov
xchg
jo
int3
ss
cmp
cmc
insl
fistps
jle
and
xchg
or
dec
loop
in
and
sbb
sub
test
pop
lea
or
das
jae
inc
into
inc
out
inc
cmp
mov
push
and
push
push
sub
subb
in
xchg
cwtl
sbb
inc
ret
faddl
pop
lret
lods
push
xor
pop
dec
dec
xchg
push
leave
or
xorb
pop
jl
iret
mov
mov
or
jno
icebp
rcr
lods
aas
and
aaa
pop
mov
push
out
pusha
cwtl
mov
shrb
outsb
dec
pusha
rcrl
lcall
cmp
imul
out
push
jns
out
cmp
hlt
add
xchg
or
xchg
push
sbb
xor
in
mov
inc
push
mov
cli
out
test
pop
sbb
aaa
shlb
sahf
adc
mov
idivl
das
xchg
test
sub
in
test
inc
mov
cmp
cmp
movsb
pop
dec
test
or
add
movsl
les
mov
mov
aad
jp
adc
mov
jbe
dec
in
cli
cs
push
mov
mov
jmp
inc
enter
loope
hlt
int3
subl
cltd
sbb
push
add
mov
cmp
shll
lret
push
add
jmp
inc
es
xchg
inc
xchg
mov
js
pusha
add
mov
mov
out
and
iret
mov
sahf
mov
dec
mov
mov
repz
clc
xchg
cmp
je
dec
loope
jl
cmp
xor
sub
push
mov
or
fcmovbe
roll
mul
scas
loop
incb
addr16
mov
insl
int
imul
out
in
sbb
and
leave
mov
movsb
loop
push
pop
popa
cwtl
pop
push
jg,pt
sahf
dec
adc
jno
sub
sub
add
pop
xor
and
push
bound
scas
sub
popa
std
icebp
aaa
je
repnz
call
add
xlat
pop
mov
cmp
mov
xchg
xchg
xchg
xchg
inc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
pop
int3
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
