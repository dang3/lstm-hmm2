xchg
jl
mov
std
push
sti
inc
dec
mov
sbb
pop
xchg
ficompl
add
push
mov
test
leave
mov
adc
cmc
dec
neg
jge
and
inc
add
inc
aad
mov
jno
ja
inc
xchg
dec
sub
lods
pop
and
pusha
adc
ss
jecxz
mov
sbb
push
push
mov
inc
pop
cs
outsb
xchg
pop
mov
mov
js
mov
fldl
scas
jg
sub
gs
dec
xor
mov
enter
add
insb
xchg
cmp
loopne
push
mov
mov
loop
cmp
xor
push
and
sbb
lahf
mov
add
or
test
loop
or
push
aam
push
pop
cmpb
insb
fimull
into
cmp
hlt
or
sub
xorps
mov
inc
mov
add
lds
xor
jno
loope
xor
mov
inc
lds
or
nop
xor
fimuls
lea
js
mov
sub
jge
mov
and
lock
lds
cvttps2pi
sub
jle
pop
nop
mov
mov
sub
mov
inc
sub
mov
mov
leave
push
nop
mov
sbb
push
adc
dec
xor
ret
and
sub
int3
jge
fldenv
rcll
cmp
cltd
push
imull
push
push
mov
sub
popf
ds
lahf
inc
sbb
lds
jb
mov
adc
lods
cmc
les
dec
cmp
mov
jbe
andb
addb
fwait
pop
lret
mov
xlat
in
sahf
sbb
imul
andl
lds
jl
mov
adc
inc
sahf
je
push
scas
push
xor
jmp
pop
rcrl
stos
iret
mov
fs
dec
mov
inc
jecxz
popf
fimuls
or
out
or
push
xor
mov
and
jno
sti
mov
jno
test
lods
gs
pop
aam
iret
mov
es
cltd
or
adcb
push
jecxz
sbb
inc
jnp
jle
pop
int
outsl
ljmp
sub
jl
or
cmpsl
stos
cwtl
sbb
jbe
shlb
test
xor
add
and
fisttpll
data16
mov
and
aad
outsb
imul
ficoms
and
scas
mov
xchg
test
rolb
inc
xor
push
clc
fwait
dec
lock
xchg
repnz
push
jecxz
push
sarl
pop
shll
out
aad
mov
in
shlb
mov
sub
push
jno
ss
imul
mov
pop
mov
and
pop
test
mov
fcmovbe
mov
mov
add
and
xchg
fwait
les
cmc
mov
xchg
daa
mov
cmp
sbb
data16
adc
mov
push
sbb
xor
and
repz
stos
inc
in
lret
vrcp28pd
cmp
ret
into
les
cmp
mov
push
sbbl
mov
or
cwtl
insl
out
movb
xchg
push
xor
sub
push
mov
das
popa
xlat
xchg
and
cmp
repz
cwtl
cwtl
fidivrl
in
add
xor
and
sbb
hlt
or
sub
jecxz
aas
std
push
or
ds
adc
test
ja
lahf
out
push
in
jns
movsl
cmp
pop
ret
and
cmp
ds
mov
orb
fwait
mov
arpl
fisubrl
adc
mov
mov
cmp
test
scas
inc
mov
aaa
fldcw
inc
cmpsb
dec
ds
mov
repz
ljmp
sar
mov
add
push
mov
xchg
mov
inc
in
pusha
fsubr
test
stos
xchg
xor
outsl
adc
jne
mov
mull
call
jns
inc
subl
or
test
dec
pop
xor
xchg
jmp
shll
jle
cmp
pop
ja
repnz
mov
adc
or
push
inc
es
dec
push
and
cltd
repnz
and
mov
xchg
sub
mov
shll
inc
stc
push
mov
out
and
mov
repnz
imul
fidivrl
jecxz
adc
pushf
push
jmp
mov
dec
adc
sub
adc
sub
fwait
inc
sbb
pop
aaa
xchg
stc
push
jnp
mov
test
shlb
lret
cs
fldenv
in
call
adc
iret
push
data16
dec
inc
loopne
fwait
int
push
and
xor
bound
inc
sbb
or
sti
rolb
loope
pop
mov
mov
mov
out
enter
repnz
push
sbb
mov
push
jecxz
xchg
xchg
loope
int
push
gs
jb
scas
mov
dec
xchg
andl
add
arpl
jbe
pop
fnstcw
push
jo
xor
xchg
lock
push
call
mov
dec
adc
pop
ret
sub
push
xchg
jo
sbb
cmp
insb
stos
xchg
int3
jo
aam
mov
inc
lret
ret
xor
push
sub
add
mov
lret
popf
pop
addb
add
int
das
jno
rorl
xchg
sti
mov
jnp
push
nop
inc
xchg
pop
aad
test
sti
addr16
or
mov
jne
jnp
or
rcl
adc
xchg
xor
cmp
leave
sub
fisttpl
cld
movsb
sub
sbb
pop
fsubr
xor
cwtl
inc
adc
inc
stos
outsb
dec
push
ja
xchg
push
pop
ds
out
lea
das
icebp
cmp
sbb
in
fwait
xchg
in
sub
add
jmp
push
lods
or
and
push
das
icebp
push
fiaddl
int3
mov
and
mov
and
call
popa
dec
test
adc
lcall
or
stos
mov
and
lret
pop
xor
xchg
push
insl
cmp
aad
xchg
fidivl
enter
push
add
xchg
pop
subb
scas
shll
pop
add
mov
push
mov
les
add
shr
ret
fbstp
mov
push
xchg
cld
xchg
repnz
mov
aas
popa
xchg
and
adc
and
dec
cmp
pop
pop
inc
mov
aaa
sbb
sbb
aaa
pop
xchg
outsb
gs
mov
in
cmp
lcall
xchg
into
lahf
jbe
in
int3
stos
addr16
test
dec
dec
add
fimuls
mov
push
fs
pop
cmp
fcomi
mov
aad
outsb
nop
mov
pop
ja
std
mov
xchg
fcom
sub
add
pop
pop
sub
cmpsb
inc
push
xor
out
cs
lcall
adc
sub
jnp
sahf
lods
pop
dec
mov
js
push
mov
sub
inc
sbb
mov
inc
pushf
mov
sbb
jmp
flds
jmp
jle
shl
lds
cmp
dec
xchg
push
push
rclb
stc
inc
mov
scas
sbb
mov
mov
inc
daa
into
xchg
push
mov
stos
sub
jbe
testl
pusha
cmp
sbb
cli
jge
add
cmpsb
or
jp
mov
inc
out
xlat
out
aad
mov
mov
and
clc
xchg
mov
in
shlb
dec
dec
dec
jmp
jmp
imul
pop
adc
pop
lahf
fstps
test
insl
cmp
xchg
sbb
rcrl
xchg
push
les
pushf
mov
push
jae
or
loopne
sub
push
dec
es
adc
mov
or
push
mov
xor
sbb
test
sub
mov
test
mov
test
lods
jb
xchg
xor
orb
mov
notb
mov
mov
push
inc
fildl
push
xlat
push
addb
dec
inc
lret
inc
push
and
xor
cmp
scas
lret
sub
pop
iret
iret
rorl
out
fistps
cmpsl
loop
mov
cmpsl
cmp
pop
cli
les
pop
test
jne
add
sbb
aad
loop
push
paddq
hlt
xchg
sti
loopne
adc
and
xlat
jnp
into
imul
xlat
lods
stos
aad
mov
add
ret
mov
ss
sqrtps
stos
and
sub
xor
mov
mov
pop
jecxz
or
xor
popl
pop
iret
pop
test
sub
test
popf
push
repz
bound
in
and
cmc
pop
pop
fstpl
into
dec
addl
and
mov
sub
out
xorb
inc
outsl
inc
sbb
icebp
jl
mov
pop
std
loop
sahf
addr16
sbb
mov
bound
fisttpl
pop
pop
xor
add
xor
test
stos
pusha
lods
ror
bound
mov
lock
stos
dec
addr16
jecxz
pop
mov
cmp
sahf
jnp
dec
cwtl
stos
sbb
jbe
iret
ss
dec
mov
outsl
inc
mov
adc
fwait
inc
adc
push
xor
aam
lods
mov
and
and
leave
jne
and
scas
les
stos
je
dec
xchg
std
mov
mov
xchg
dec
lds
cmp
test
in
popf
shrl
je
outsl
xor
mov
pushf
jb
repz
mov
push
into
mov
cmpsl
push
jb
and
pushf
lret
aas
lret
js
add
sub
out
pushl
mov
cltd
sbb
std
cmpsl
jb
xor
cs
cmp
shll
dec
push
dec
in
arpl
cmc
cmpsb
mov
push
add
mov
jg
out
pop
push
dec
imul
repz
dec
xchg
test
ja
pop
je
popf
mov
add
aas
sbb
stc
xchg
inc
sahf
jne
bound
cmpsl
stos
cltd
movsl
sbb
xchg
push
lahf
and
mov
or
divb
ror
mov
popa
jecxz
cli
push
push
mov
pop
add
lock
out
cmpsb
adc
in
cmp
add
push
int
xchg
mov
mov
ljmp
mov
pop
out
pusha
lds
icebp
loop
and
mov
and
jb
cli
daa
cmp
notrack
push
dec
sbb
ds
jle
ja
push
fnsave
inc
push
pop
pop
rcll
push
lods
leave
cmc
jbe
pop
xchg
mov
xor
lea
rolb
or
add
sbb
push
mov
cwtl
add
testb
loopne
sti
out
push
dec
mov
mov
rol
xor
stos
jae
iret
nop
inc
adc
mov
call
xchg
leave
push
inc
pushf
mov
jle
fnstenv
call
jp
dec
sub
adc
xor
cli
cs
jg
repz
mov
dec
push
scas
adc
sub
or
sub
push
xor
ds
repnz
loop
aam
js
mov
cli
jb
lcall
mov
scas
push
xor
insl
dec
idivb
pop
fidivrl
fmul
mov
jns
or
jl
xchg
outsb
mov
call
inc
sbb
cs
jb
pop
push
movsb
jle
loop
into
mov
hlt
push
xchg
and
mov
add
inc
xor
lock
data16
xor
bound
jg
sub
lcall
push
jl
adc
mov
dec
outsb
testb
mov
dec
aaa
mov
lahf
neg
icebp
cmpsb
cmp
ljmp
or
and
push
mov
cwtl
mov
dec
cmpl
jg
fs
sub
test
imul
ror
testl
push
dec
mov
add
fnsave
fsubl
jne
push
fstpl
cmpsb
cmp
aad
int
cmp
iret
lret
mov
in
add
xchg
pusha
dec
or
mov
adc
mov
shrb
popa
sbb
and
test
mov
cltd
stos
xor
and
cmp
xchg
inc
test
and
rcrb
jbe
xor
adc
stc
and
fwait
push
out
add
sub
mov
test
inc
mov
mov
pusha
cli
push
pop
mov
test
ja
fistpll
sub
popa
inc
mov
or
xchg
in
push
mov
subl
fsubrs
into
pop
mov
xor
jg
mov
enter
xchg
ds
gs
push
test
and
gs
push
test
sbb
dec
and
mov
testb
dec
in
jno
out
mov
or
pop
int3
jecxz
mov
or
mov
test
mov
mov
les
or
push
enter
in
mov
jg
adc
pop
jo
cmp
push
sub
std
roll
and
push
push
mov
mov
xor
mov
cwtl
mov
insl
ja
cli
adcl
scas
sbb
inc
xor
loop
aas
es
orl
loope
sti
and
stc
pusha
mov
lods
sub
fs
xor
adc
xchg
mov
bound
jmp
push
in
pop
scas
shlb
adc
ds
and
dec
cltd
mov
jbe
or
push
pusha
mov
sub
incb
sbb
ret
addr16
rcrb
xor
adc
sub
dec
lret
adc
and
lods
cmp
aas
mov
inc
pextrw
push
adc
shll
pop
insl
sti
adc
pushf
icebp
mov
and
mov
data16
jp
push
rcrb
push
mov
and
mov
dec
mov
sbb
mov
cmp
xchg
loop
test
repz
push
inc
enter
stos
inc
loope
andb
sub
test
sti
cli
std
or
jmp
xchg
sahf
cltd
arpl
dec
xchg
pop
sub
mov
aas
outsb
test
mov
repnz
push
jne
pop
or
jp
inc
movb
bound
mov
or
jb
jae
arpl
mov
decb
jns
xchg
inc
push
and
ljmp
test
ss
js
popf
or
ret
lahf
psrlq
lret
fnstcw
nop
arpl
xchg
push
cmc
dec
daa
xor
das
faddl
stos
dec
cmp
lcall
cmp
xchg
rcr
push
cmp
or
or
stos
pop
test
push
notl
outsb
rorl
cltd
adc
scas
mov
bound
aad
push
daa
lds
add
cli
popl
js
js
fisttpll
push
dec
leave
push
inc
add
sahf
sbb
cld
pop
arpl
outsb
push
je
jo
inc
and
cmp
cmp
int3
mov
out
gs
lea
xchg
sbb
push
and
cmp
mov
ds
xchg
divb
gs
mov
incb
ja
sbb
in
jmp
in
or
xor
into
dec
and
jb
cmp
mov
fldln2
xchg
mov
sub
mov
dec
xor
movsl
or
andl
mov
cwtl
out
or
adc
pop
or
xor
inc
jbe
jecxz
mov
andb
mov
les
push
mov
jl
lds
inc
lods
scas
xchg
addl
in
inc
leave
outsb
jo
xor
cld
in
fucomi
cli
mov
lea
into
lock
lods
outsb
xchg
sahf
push
aad
adc
dec
mov
das
xor
jnp
int
insb
dec
lods
lret
rcll
repz
jmp
pushl
add
ss
pop
movsl
sub
mov
pop
xor
test
mov
aaa
sbb
gs
cmp
hlt
xor
sub
fnsave
dec
cmp
pusha
in
repnz
arpl
aaa
push
test
mov
mov
cld
loopne
out
iret
xchg
inc
jo
ret
inc
in
inc
mov
scas
sbb
clc
and
ss
cmp
jns
mov
adc
mov
adc
in
push
jmp
adcb
jge
mov
shll
inc
xor
mov
xchg
gs
xor
mov
into
jne
flds
and
test
stos
push
imul
sub
jecxz
js
jbe
clc
xor
cli
dec
sbb
ss
icebp
jo
scas
sti
mov
jne
enter
out
push
lds
push
mov
push
subl
or
arpl
xorl
movsl
dec
pop
cmp
scas
movsl
sti
inc
loop
or
rol
loopne
pop
push
push
adc
rclb
xor
aad
mov
int
je
xor
into
add
aad
out
add
lds
push
int3
dec
icebp
test
leave
ror
push
int
jl
adc
ljmp
shrb
xchg
int
je
pop
or
sbb
dec
sbb
cmpb
testb
cmp
xor
aad
stos
xchg
stc
cmp
xor
scas
leave
sub
push
loopne
ret
inc
cmp
inc
rcrb
dec
jecxz
repnz
adc
dec
push
push
cmpb
cmp
sahf
push
adc
xchg
push
int
add
xor
arpl
pop
mov
loope
dec
jg
insl
ficomps
xor
adc
mov
mov
int
and
je
test
jnp
int3
les
repz
lahf
stos
mov
pop
add
addb
lock
or
fists
and
stc
fs
adc
clc
les
out
fidivl
mov
push
ror
inc
xchg
sbbl
jg
aas
inc
push
dec
xor
outsl
cwtl
aaa
xchg
pushf
in
push
push
pusha
test
sub
rorl
xchg
xchg
or
ja
cmp
and
test
push
xchg
xchg
std
lea
popf
xchg
mov
movsl
in
fwait
cmp
mov
xchg
clc
inc
jae
aad
jecxz
cli
inc
mov
mov
into
push
outsl
das
insl
stc
in
cs
push
sub
mov
cli
push
add
dec
pushf
jmp
mov
push
push
dec
movq
sub
sub
loop
outsb
test
dec
and
and
test
or
cmp
ficoms
test
ljmp
mov
test
adc
addr16
mov
adc
add
cs
bound
stos
sahf
sub
push
fsubrl
es
mov
add
jmp
addr16
cmc
mov
dec
shrb
hlt
loope
mov
dec
sbb
jns
aam
rol
jl
sbb
xor
lods
jbe
imul
ret
int3
lods
rcrl
cmc
cwtl
pop
dec
xorb
movb
enter
repz
lods
mov
ss
cs
in
cmc
xor
pusha
and
clc
mov
shll
xor
dec
dec
cmp
sbb
aam
xchg
xchg
outsl
pop
bound
pop
ss
and
imul
push
xchg
xor
xor
cmp
sbb
enter
int
outsb
push
dec
movsb
xor
test
jg
addr16
clc
mov
fwait
lret
push
negb
cmp
sbb
xor
or
push
adc
mov
mov
push
fldenv
js
sbb
aas
or
mov
add
xor
mov
dec
sub
insl
mov
cltd
shll
dec
je
sub
aam
inc
adc
into
cmp
push
push
in
adc
xor
sarb
mov
xor
loopne
andb
mov
push
add
and
and
sub
icebp
hlt
and
sti
push
sub
jmp
inc
push
pusha
jecxz
loope
lcall
add
shlb
dec
mov
loopne
loope
dec
scas
pop
push
cwtl
adc
push
inc
xchg
sub
shll
sti
lock
xlat
add
hlt
popa
mov
in
add
loop
mov
test
out
mov
cmc
call
dec
jl
xchg
movsb
popf
popa
push
pop
sbb
or
pop
add
test
pop
mov
jne
jmp
fiadds
mov
ds
adc
ljmp
addr16
cmp
hlt
xchg
je
adc
cs
jecxz
xchg
sbb
jae
fsubp
xlat
mov
es
cmc
inc
andl
loop
xchg
xchg
inc
imul
inc
mov
pop
jmp
push
mov
jp
icebp
mov
dec
test
inc
xchg
sbb
shll
hlt
mov
aad
jne
sbb
hlt
adc
test
hlt
rorb
repnz
or
std
dec
adc
neg
mov
adc
pop
mov
pushf
xor
jbe
lahf
in
fidivs
cltd
into
pop
mov
hlt
cmp
mov
xor
movsl
popf
push
sbb
aam
sub
das
adc
cmp
cmpsb
pop
xchg
cmpl
push
lret
loopne
pop
incb
data16
pop
dec
jle
scas
mov
dec
test
rol
push
cwtl
fbld
lret
jbe
scas
pop
and
mov
rcl
or
push
js
ljmp
xchg
inc
sbb
mov
insb
jns
imul
je
dec
or
fdivr
ljmp
mov
jo
dec
enter
lcall
stos
xchg
jmp
jmp
rolb
cli
repz
cmpsl
lods
xor
int
mov
mov
sarb
scas
jnp
lret
push
imul
rcr
js
jnp
adc
push
addl
nop
or
xor
or
das
incb
cmp
shll
inc
es
divb
jnp
cmpsb
xchg
repnz
das
and
inc
bound
aaa
xchg
aad
and
mov
xor
into
inc
in
shlb
out
inc
or
xchg
push
sahf
mov
xchg
pop
adc
and
fidivrs
mull
cmpsl
inc
xchg
out
inc
or
lret
xchg
sbb
xchg
mov
ljmp
ficoml
mov
xchg
daa
xor
out
shrb
in
repnz
mov
ds
jmp
pop
js
les
xchg
in
arpl
xlat
jle
push
push
orb
mov
std
out
push
ja
dec
inc
and
repz
mov
xor
ss
xchg
mov
icebp
aas
call
outsb
mov
push
stc
shll
rcr
lret
inc
iret
sar
adc
dec
cli
pop
add
push
and
cmp
and
push
jg
out
push
arpl
bound
mov
and
adc
xlat
mov
dec
xor
repz
bound
lock
dec
sbb
and
add
dec
adc
scas
xor
mov
js
stos
xor
mov
ljmp
out
add
movb
mov
iret
leave
push
shlb
ror
mov
xor
dec
adc
cmp
ss
jnp
imul
and
mov
inc
or
loopne
pop
es
or
mov
jge
stos
add
arpl
push
cmpsl
pop
push
inc
add
lock
rcl
cltd
test
enter
push
inc
adc
push
sbb
add
nop
xor
push
add
in
dec
adc
sub
jl
xor
cmpsl
adc
std
lods
popf
bound
add
dec
mov
mov
sbb
xchg
movsl
sahf
sbb
sbb
push
outsl
jge
cwtl
cmp
mov
or
fsubs
loope
sahf
inc
in
inc
inc
outsl
adc
cmp
lret
sbb
and
pop
and
clc
les
lcall
stos
dec
lock
sbb
test
inc
mov
pushf
imull
int3
mov
icebp
ljmp
jae
sub
sti
dec
pop
xchg
mov
mov
and
lea
and
or
adc
mov
int3
dec
jle
lret
mov
adc
or
xor
adc
or
cld
fildll
popa
ds
adc
and
xlat
fcmovbe
sbb
iret
test
jns
cmc
adc
rcrb
push
mov
andl
jae
adc
cltd
push
scas
inc
enter
adc
repz
test
dec
insl
add
rorl
cltd
sbb
imul
push
cwtl
xchg
rorb
fiaddl
and
add
rorl
int3
fists
movsl
push
push
mov
pop
aaa
addr16
inc
int
jl
jl
subb
imul
jb
xchg
jne
fs
push
out
ret
das
push
testl
cmp
adcb
out
push
push
jle
cmp
jo
ficoml
xor
mov
xchg
pop
fimull
in
into
xchg
mov
addb
lea
pop
movsb
mov
jnp
sub
pop
ljmp
jne
mov
mov
ja
sbb
add
xchg
mov
leave
lret
mov
cmpsb
das
in
push
sub
mov
jmp
out
mov
pop
fcoml
jne
add
negb
or
mov
outsb
fisubl
jp
xchg
test
mov
xor
xchg
sub
lock
ret
fstpl
mov
jae
in
lret
add
or
jge
rorl
hlt
jge
mov
les
aam
xchg
add
xchg
jmp
dec
int3
gs
mov
icebp
pop
pop
xchg
pop
test
xor
push
xor
aam
imul
dec
jo
cltd
mov
dec
mov
fsubrs
or
fcoml
sub
push
mov
les
or
mov
int
or
aaa
jle
ja
lods
push
enter
adc
cmp
or
push
mov
test
dec
push
fmull
push
xchg
sbb
mov
push
lret
xchg
loop
scas
test
insl
ret
push
sbb
cmp
mov
test
loopne
addr16
sbb
sbb
lods
xchg
mov
aas
inc
ss
jns
imul
inc
loope
adc
add
xlat
and
mov
or
xchg
subb
dec
mov
add
sub
test
loop
filds
fsub
or
push
movsb
mov
push
out
xchg
adc
push
xlat
or
push
cld
mov
cld
out
loope
mov
adc
cmpsb
xchg
hlt
mov
dec
test
js
and
test
fidivs
es
test
inc
sub
and
xor
mov
outsb
es
movsb
cltd
dec
inc
sbb
xor
cmp
xor
cmpsl
jle
rcrl
mov
adc
jl
and
les
push
mov
std
xchg
and
xor
and
push
gs
inc
xor
fisttpll
push
cmp
subb
xor
lret
fstl
xchg
or
lahf
push
cmp
sub
aam
icebp
nop
xchg
pop
sub
push
jl
loopne
add
repz
int
sbb
xchg
xlat
sar
cmp
cltd
dec
inc
push
loop
mov
fstpt
fs
int3
aas
pop
jge
enter
aas
push
aam
pop
fcoml
dec
pop
mov
ds
adc
xor
xchg
ss
mov
sub
cmp
in
xchg
sbb
js
in
repnz
jae
ljmp
pinsrw
insl
pop
dec
xchg
ja
js
lret
mov
mov
loopne
cmpsl
movsl
andb
adc
in
ljmpw
dec
dec
insb
push
pcmpgtd
fsubrs
and
fcoml
sub
push
out
aaa
xchg
pop
mov
xchg
push
sub
repz
adc
sbb
xchg
sub
xchg
ficoms
je
js
xor
pusha
movsb
sar
and
les
push
inc
push
jnp
or
mov
sub
push
lock
dec
sub
orb
repz
and
arpl
mov
sbb
test
lret
data16
jmp
and
popa
xor
in
daa
mov
xchg
jg
ret
pushw
dec
je
jno,pn
lret
sbb
mov
cmp
sarl
inc
pop
test
dec
push
ss
sahf
xchg
cwtl
cmp
inc
and
lds
js
pop
pusha
add
stos
push
sbb
loop
sahf
adc
cwtl
lea
dec
add
jb
fs
test
xchg
pop
xchg
les
sbb
test
addl
ljmp
pop
aam
enter
jp
mov
cmpsb
jae
out
aas
xchg
out
fimuls
add
or
or
lds
adc
daa
sbb
cmp
leave
mov
push
xor
rep
jecxz
fstps
jns
es
sahf
pop
aas
fistl
pop
pushf
scas
int
cmp
or
add
or
add
les
mov
fistpl
loop
sbb
or
call
andb
lret
pop
xchg
jnp
cs
ret
push
pushf
out
in
xor
iret
pushf
dec
cmpsb
add
mov
mov
mov
push
or
test
xchg
push
mov
movl
xchg
sbb
lahf
cmp
mov
xchg
hlt
cmp
or
sahf
jmp
pop
hlt
xchg
int
adc
das
test
les
or
fnsave
xchg
jb
or
sub
lahf
sbb
aaa
sub
xchg
xchg
pop
gs
scas
add
jae
mov
shl
sub
inc
or
sub
int3
out
testb
push
jle
imul
icebp
xabort
aad
jg
adc
or
mov
mov
dec
add
cmc
roll
je
push
jl
addr16
stos
cmp
mov
lcall
or
inc
lods
or
cmpl
icebp
mov
getsec
mov
cmpsb
and
je
jns
adc
rcrb
sbb
cmp
jne
adc
incl
mov
je
dec
fidivs
cs
mov
mov
dec
sti
jle
cmp
shrb
inc
pop
jecxz
inc
mov
je
jle
pop
push
jg
sbb
loop
arpl
arpl
movsb
push
cmp
sbb
mov
cwtl
fs
push
push
and
inc
push
mov
int
jle
push
ja
enter
mov
dec
xchg
scas
and
sub
mov
adc
cmp
mov
or
ss
jb
movsl
cmc
inc
or
lahf
add
sbb
and
int
cmpsb
cmc
mov
xor
push
orb
dec
adc
cmp
loop
pop
sbb
push
test
cmpsb
repnz
add
xor
lahf
push
jp
aaa
cmpsb
mov
repz
scas
push
jo
dec
loop
outsl
adc
push
orb
les
rcll
ret
jmp
scas
push
inc
xor
es
pushf
ret
inc
hlt
mov
cwtl
shlb
movsl
cmp
xchg
ret
popf
cmp
fs
cld
clc
lahf
inc
lds
sbb
inc
push
xchg
ret
push
xor
lds
mov
add
inc
dec
jb
loop
sub
sbb
popf
loopne
push
test
mov
stos
jb
repnz
and
inc
jecxz
scas
push
pusha
and
sub
and
or
pop
cli
adc
cmp
inc
hlt
test
sbb
adc
inc
int3
pop
enter
fsubrl
jbe
inc
pop
je
daa
das
inc
push
inc
lods
push
scas
lods
or
into
inc
cltd
sbb
aad
sub
sub
lea
add
into
adc
stos
into
xchg
sti
jo
sub
cmp
cltd
dec
dec
scas
cmp
rcll
ss
mov
push
and
loopne
sbb
in
pop
pop
pop
popf
shlb
xor
xchg
sbb
cmc
dec
ss
fisttpll
mov
adc
mov
adc
shlb
lock
jecxz
add
js
scas
add
clc
repnz
cs
lcall
shr
jae
cmpl
fadds
mov
jo
in
xor
mov
enter
sbb
jbe
and
adc
aad
mov
jb
ja
data16
mov
mov
lret
inc
mov
sarb
lds
jmp
cmp
in
and
lret
xor
daa
scas
mov
leave
jmp
fs
mov
cmp
adc
pop
sub
xchg
stc
push
push
fcmovnb
mov
outsb
daa
cmp
leave
lds
in
test
sub
mov
js
inc
in
sbb
xchg
and
jp
inc
ja
lock
xor
jae
xchg
jbe
adc
mov
mov
pop
cmp
out
les
push
adc
push
add
push
jns
dec
divb
sbb
pop
cmp
fwait
inc
sub
jns
add
sub
adc
rcl
push
lds
add
lock
mov
dec
pusha
mov
aam
inc
cli
inc
jb
add
outsb
negl
iret
push
call
pushf
aam
test
into
mov
dec
push
push
dec
int
or
xor
add
dec
sbbl
cltd
dec
dec
lea
dec
loopne
xchg
test
addr16
jbe
adc
cmp
mov
out
fcmovnbe
mov
add
pushf
nop
mov
cmp
pushf
dec
mov
out
xchg
or
icebp
jle
push
cmp
or
scas
adc
jl
mov
mov
movsb
test
sbb
cmp
int
sbb
aaa
scas
and
hlt
sbb
add
hlt
adc
mov
into
shrb
pop
mov
cltd
cmp
hlt
push
pop
and
nop
sbbb
sahf
push
icebp
xor
cmpsl
sbb
insb
or
adc
inc
xor
into
push
jp
fimull
js
xchg
sub
mov
cli
dec
ds
mov
push
lods
les
xchg
mov
cmp
sub
cmpsl
jo
sub
stos
sub
cltd
xor
push
fidivrs
pop
adc
ss
jne
icebp
cwtl
push
push
stc
fimuls
insl
repnz
test
xor
push
ror
jmp
jb
cmp
mov
cli
mov
xor
cli
jb
or
daa
int
cmp
bound
lret
mov
inc
sti
lahf
and
dec
lock
rorl
mov
pop
out
push
mov
and
jne
enter
xor
add
or
mov
lods
jecxz
jnp
sub
js
arpl
clc
cltd
addb
loope
sti
push
xor
stc
pop
push
cmpsb
js
fnstsw
imull
mov
xchg
shrl
and
dec
sub
out
mov
fimull
mov
sbb
mov
push
xor
pop
mov
sbbb
fistps
push
xchg
cmpsb
jmp
and
in
movl
fcom
jg
push
mov
je
sbb
jb
iret
inc
sahf
cmp
ret
add
icebp
adc
or
pop
popf
repz
sub
jl
pop
or
sbb
mov
lock
in
jo
cltd
add
xchg
es
cmp
jp,pn
loope
sub
xchg
mov
mov
and
xor
lods
sub
fiaddl
mov
add
mov
mov
sbb
xchg
mov
repnz
xlat
add
sbb
cmpsb
jo
mov
movsl
shrb
adc
sub
es
enter
mov
cli
inc
addr16
jecxz
scas
adc
test
nop
mov
xchg
orb
mov
push
lods
inc
and
and
bound
xchg
ds
xchg
sti
sahf
je
out
les
cmp
into
ret
inc
cwtl
subb
cli
ret
das
jle
adcb
sub
rcrb
scas
jne
sbb
fucomi
dec
mov
mov
push
arpl
idiv
hlt
aas
jae
push
lods
push
inc
cmp
add
mov
dec
daa
pop
mov
movsb
and
sahf
push
pop
add
icebp
bound
orb
inc
cmp
lods
mov
std
aad
mov
sti
jmp
movsb
sbbb
pop
bound
add
popa
xchg
inc
popf
adc
test
ds
adc
out
es
jl
jecxz
ret
add
mov
ds
inc
adc
aas
xchg
movsl
inc
cltd
dec
sarl
int3
das
push
movsl
mov
repnz
jl
inc
mov
push
leave
mov
push
rolb
push
roll
adcb
or
mov
lods
out
out
add
inc
fs
fsubs
addl
pusha
xchg
and
scas
jae
jg
lock
in
lret
loopne
inc
jo
jae
outsb
repz
nop
jp
xor
lods
test
pop
add
push
and
or
dec
and
and
mov
hlt
adc
jb
dec
fimull
inc
inc
loopne
mov
cld
fs
sbb
stos
inc
dec
leave
sub
fnstcw
sub
jnp
sbbb
mov
mov
xchg
lret
add
pop
mov
dec
dec
jg
fucom
add
inc
lods
pusha
sub
fmull
push
lock
es
pop
push
sub
add
push
imul
pop
add
inc
jecxz
rcrb
pusha
mov
mov
insb
jns
dec
rol
addr16
dec
dec
ljmp
scas
jno
iret
pop
ds
mov
data16
clc
sti
sbb
xor
xchg
sbb
int3
sub
outsb
add
xchg
mov
cmp
rolb
sub
xchg
in
dec
inc
xor
sarb
mov
hlt
adc
scas
ret
and
sbb
and
scas
lods
pop
andl
inc
bound
dec
das
push
mov
mov
pop
mov
stos
das
loop
fdivl
clc
xor
xor
sub
push
add
and
inc
mov
punpckldq
icebp
mov
cmp
mov
add
mov
shl
in
push
sub
mov
out
pop
or
add
enter
mov
out
pusha
in
daa
and
repz
push
dec
mov
sub
pop
mov
push
push
inc
jnp
jge
out
loop
mov
or
add
leavew
push
jne
cmpsb
add
nop
jg
inc
fstpl
xor
adc
xchg
jne
cmp
inc
test
pop
insl
xchg
sbb
jp
pop
mov
mov
xchg
cmp
lret
mov
out
sbb
lods
sub
dec
inc
or
and
sbb
inc
out
out
push
lcall
loopne
cmp
jb
enter
jno
xchg
lea
fisubrl
test
pop
scas
out
push
xchg
cmp
adc
mov
sbb
push
jg
push
mov
push
enter
addb
repnz
mov
into
lcall
pop
jns
lds
mov
pop
xchg
jb
mov
adc
inc
push
rcl
mov
mov
jae
sbb
mov
cmp
lock
pushf
cmp
push
in
std
ss
or
insb
dec
fistpll
push
out
sbb
xrelease
jmp
push
fwait
jl
fnstenv
inc
fcoms
cld
cmp
mov
sbb
mov
pop
cmp
dec
decl
push
mov
arpl
sbb
pop
push
mov
enter
cmp
stc
nop
maskmovq
mull
mov
pop
inc
ss
xor
and
ret
fstpt
mov
lret
js
popf
xchg
or
inc
lods
xor
scas
loop
fcomps
int
cmp
stos
mov
out
add
push
scas
adc
call
mov
mov
inc
aam
push
jns
outsl
pop
jmp
mov
imul
ja
pop
lea
sub
outsl
fwait
xor
xor
mov
cltd
cmp
push
out
and
jmp
pop
mov
clc
mov
xchg
loopne
in
stos
cmp
cmpb
out
scas
int3
fadds
rorl
out
int3
insl
scas
adc
adc
mov
pop
xchg
xor
inc
pop
add
add
jp
xor
push
loopne
pop
jmp
add
shlb
mov
xchg
jns
jmp
lahf
stos
leave
loopne
cwtl
add
add
mov
push
pushf
jns
jbe
sahf
in
push
mov
movb
mov
xchg
adc
loope
adc
mov
aam
fs
ret
lods
sbb
mov
sub
adc
subb
push
push
mov
jecxz
lods
mov
insl
es
ret
xor
push
xchg
test
aad
jge
inc
sub
mov
pop
je
or
xor
xlat
jae
xorb
icebp
rcrl
xchg
lods
xchg
inc
mov
shrb
xor
int3
inc
popf
push
repnz
xor
clc
std
mov
inc
out
dec
aaa
aas
stos
and
dec
outsb
test
lcall
movsl
dec
ficoms
mov
ss
repnz
lods
inc
repz
movsb
mov
mov
or
imul
inc
mov
jo
loope
jb
sbb
das
xchg
cs
insl
inc
sub
xchg
popf
jecxz
and
outsb
pop
stos
or
sub
mov
mov
popa
push
int3
dec
aam
imul
test
mov
xor
sub
xchg
out
lret
push
std
add
outsb
mov
bnd
test
jp
outsl
scas
sub
dec
ret
mov
mov
pop
lods
inc
cmp
lahf
xchg
shrb
pop
cmp
jge
cmc
mov
fwait
jb
cld
lcall
mov
fwait
and
addr16
xor
cli
lods
mov
rcr
jl
adc
sbb
pop
fmull
xchg
orl
lcall
stos
je
adc
fsts
lds
rcr
xlat
test
gs
jle
icebp
adc
add
lret
sarl
xchg
sbb
imul
inc
into
pop
xlat
push
xorl
mov
mov
sub
xchg
dec
xlat
push
orl
ljmp
xlat
jno
sub
pop
ds
lods
dec
orl
call
inc
mov
hlt
scas
ljmp
sbb
sub
and
and
xor
pop
testb
insl
and
pop
pop
repz
dec
dec
sahf
enter
cmp
and
xor
lret
jno
push
jnp
int3
jns
add
inc
hlt
movsl
lea
add
add
mov
ret
add
loope
inc
cmpsl
xchg
sbb
push
divl
sar
cmp
push
adc
jnp
in
or
das
ret
pop
leave
jb
bound
pop
arpl
jnp
add
daa
pop
cmc
test
adc
dec
jg
sarb
and
repz
dec
popa
sbb
lea
xchg
xor
ja
ja
jae
jg
lahf
loope
pop
cmp
cld
fstps
jno
icebp
je
push
pop
fdivp
ljmp
sub
pop
sbb
ss
cmc
or
jno
stos
leave
mov
jb
xor
mov
stos
mov
sbb
mov
xlat
push
sti
pop
jmp
rolb
fldenv
push
lcall
adc
pop
fxch
ljmp
and
pop
sbb
pop
daa
push
nop
push
nop
daa
mov
sub
push
jo
addr16
mov
testb
cmp
sbb
mov
cmp
mov
sbb
push
aaa
xor
insl
jle
inc
dec
filds
cli
xor
jb
push
mov
pop
mov
xchg
test
shrb
mov
loopne
pop
sub
cli
stos
test
cltd
xor
xchg
shl
arpl
mov
lock
mov
test
xchg
pop
or
aaa
push
xchg
sub
pop
lods
sbb
sbb
inc
mov
sarb
or
repnz
nop
mov
xchg
inc
jne
sub
or
xor
jecxz
negl
cbtw
rclb
or
mov
or
mov
sub
bound
cs
bound
sbb
mov
dec
in
jb
in
sub
jp
and
xchg
push
dec
pop
push
stos
addr16
inc
or
fnstsw
xor
dec
lcall
xchg
es
out
add
nop
scas
cmp
adc
icebp
in
lods
es
inc
add
jge
sbb
out
dec
jmp
jmp
pop
xchg
inc
adc
popa
dec
sahf
loopne
pop
es
cld
mov
insb
dec
jo
adc
std
cwtl
into
shlb
cmp
push
lods
insl
mov
repz
stc
pop
inc
add
mov
push
lahf
adc
jae
add
inc
stos
scas
je
fdivl
das
scas
sarb
lret
sbb
inc
sbb
adc
jae
addr16
pop
inc
fidivl
lea
pop
sub
das
mov
negl
inc
dec
sbb
lds
dec
arpl
sbbb
lcall
daa
test
lock
aas
imul
dec
xchg
or
movsb
adc
jg
or
add
mov
jmp
daa
sub
and
jae
jnp
aas
call
in
test
sub
inc
lret
jb
xchg
jb
rolb
mov
mov
cvtpi2ps
rorb
dec
mov
sub
sbb
jmp
ret
jo
cmp
mov
jbe
lods
mov
das
addr16
repnz
sub
in
xchg
scas
xorb
dec
addl
push
arpl
cmp
roll
loop
mov
dec
mov
jg
push
pop
les
orl
addl
mov
jo
outsb
dec
adc
divl
cmp
lods
sbb
adcl
pop
test
inc
ss
out
out
push
mov
xor
push
shr
xor
sbb
les
sbb
repnz
and
rcr
pop
sbb
mov
bound
adc
push
sub
inc
test
push
test
test
or
inc
or
and
into
out
nop
das
pop
and
or
ljmp
das
jbe
icebp
test
inc
adc
fmull
adc
jbe
movl
mov
and
sbb
enter
push
aad
jb
adc
sbb
xchg
clc
mov
mov
faddl
and
xchg
push
cmp
and
mov
xor
cli
popa
cld
pop
lcall
notl
test
jle
shll
in
dec
sub
pop
sbb
sti
out
cmc
in
xchg
into
mov
jle
call
ss
imul
xchg
mov
bound
iret
insb
out
xor
or
faddl
std
in
into
dec
pop
sbb
andl
dec
pop
dec
mov
cmp
stos
sahf
push
mov
xor
hlt
lret
mov
orb
mov
cld
adc
fwait
xorl
outsl
ja
adc
dec
mov
dec
in
lret
add
cmp
in
add
mov
cltd
mov
add
push
call
lcall
iret
pop
xchg
mov
mov
ljmp
jnp
dec
sbb
push
push
sub
sub
aad
inc
or
or
or
addr16
pop
cmpsl
or
xlat
or
adc
jno
and
push
cmp
adc
lret
mov
dec
sbb
cmpsb
scas
call
fldl
lret
push
popf
fnsave
add
dec
pop
sets
in
inc
stos
cld
mov
and
mov
insb
fs
mov
or
cmp
inc
loope
icebp
cmpsl
in
out
dec
lods
dec
lret
loop
sub
cmp
out
adc
jl
mov
pop
shrb
in
and
mov
fsubrs
pop
lcall
jmp
add
pop
lods
sbb
rcll
movsb
sahf
cmp
mov
movsb
jnp
dec
lcall
out
add
dec
sti
in
push
bound
push
mov
or
inc
push
xor
push
std
or
or
int
and
lcall
repnz
enter
data16
es
lret
xor
add
mov
repz
inc
sbb
lahf
push
fdivrs
insb
and
out
cmp
sbb
fucomp
test
jns
scas
lcall
dec
out
lahf
pop
pop
pop
cs
mov
mov
or
pop
cmpsb
jns
cwtl
add
mov
and
pop
aaa
stc
iret
ret
shrb
cltd
pop
adc
lcall
pop
cmp
dec
mov
pop
leave
pop
xchg
mov
add
movsl
or
fs
aas
insl
lods
lock
movsl
xorb
sbb
subl
jp
pop
out
inc
andb
mov
adc
outsl
mov
test
mov
es
jae
jb
cwtl
sub
mov
daa
das
or
in
in
push
jnp
jle
in
and
xchg
fstpl
aad
push
adc
xlat
adcb
fimull
popf
jbe
xchg
insl
mov
fst
push
xchg
cs
out
xchg
jecxz
mov
jl
jmp
hlt
roll
adc
add
dec
iret
pop
into
testl
mov
sbb
adc
sub
into
cld
push
xor
divps
gs
into
and
in
cmp
pop
or
or
mov
orl
adc
orb
push
mov
pop
call
mov
push
xchg
xchg
xor
fs
inc
push
shlb
into
andl
xchg
inc
loope
jmp
repnz
in
or
enter
lret
addr16
test
in
int3
aam
sub
stos
jns
jmp
mov
frstor
ja
push
xchg
adc
mov
mov
shll
data16
sarl
mov
std
ret
data16
and
rcll
pop
fsubr
sbb
lods
nop
jl
xorb
xchg
js
push
rolb
inc
lret
xchg
inc
lods
fdivrs
iret
sub
inc
enter
sahf
arpl
and
out
popf
fcomi
pop
in
int
and
xchg
and
in
repz
outsl
or
push
shl
sbb
and
fnop
cmpsb
xchg
cmp
ds
push
repz
push
jp
pushf
and
pusha
stos
aas
xchg
mov
and
shrb
add
cmp
cwtl
leave
mov
fwait
pop
and
stos
xor
inc
sbb
pop
inc
mov
call
fnstenv
xlat
sbb
adc
test
mov
pop
andl
or
cmpsl
mov
lret
out
lods
popf
repnz
mov
int
mov
xchg
mov
aaa
sar
xchg
and
outsb
or
sub
or
jmp
jbe
mov
xor
sbb
out
jg
add
aam
adc
fs
cli
fs
shrb
in
jb
pushf
push
subb
pop
mov
push
dec
aas
popa
ret
enter
sbb
mov
and
fs
pop
xchg
mov
or
sub
lret
xchg
hlt
addb
aas
or
scas
mov
xor
mov
scas
xor
ja
mov
xchg
mov
fimull
cmc
xchg
sbb
daa
aam
stos
mov
push
jge
pcmpgtw
test
jo
stos
ss
cmp
sub
sub
xor
out
cmc
push
xchg
repnz
add
lock
movsl
push
imul
mov
scas
rcrl
imul
int
mov
inc
insl
or
imul
scas
or
shr
mov
mov
xor
mov
fldl
jne
mov
testl
pushf
rclb
jmp
leave
push
fcmove
jnp
push
push
mov
pop
test
lods
cmp
sub
repnz
adc
mov
scas
mov
mov
cltd
or
xor
adc
fidivrs
fstps
push
add
lods
jl
jmp
cmp
inc
imull
jp
adc
add
setae
adc
xor
xor
add
js
addb
out
cmpl
mov
adc
loop
pop
fwait
inc
mov
pop
and
or
sub
lahf
movsb
daa
out
leave
in
out
into
lcall
je
xlat
aad
inc
jne
or
cmp
int
cmp
add
pop
cwtl
jge
sub
jl
or
add
push
inc
inc
push
and
sub
gs
xchg
mov
cmpsb
fnstenv
sub
lahf
inc
push
inc
xchg
hlt
mov
pop
add
in
cld
push
xchg
stos
jo
outsb
lds
sets
cmp
aad
cli
outsl
testl
jns
pop
ss
ljmp
add
inc
cmp
push
and
leave
xchg
pop
shlb
jno
add
movsb
mov
cmp
sbb
push
pop
mov
or
cmp
xor
cltd
aas
lahf
add
pop
ja
loope
mov
sub
adc
jns
add
pop
ficompl
mov
es
dec
push
or
push
dec
xor
inc
inc
add
dec
jne
jns
jp
dec
loope
aaa
adc
xchg
cmp
ret
jge
jo
js
dec
push
xor
packuswb
out
jecxz
pusha
inc
rorb
mov
add
adc
stos
mov
mov
jns
sub
dec
lea
sub
scas
pop
stos
stos
test
dec
lret
call
xchg
mov
fisubl
hlt
fistl
cmp
sub
xchg
xor
loop
push
and
repz
hlt
add
test
mov
scas
movsl
push
or
insl
test
clc
repnz
in
in
loop
dec
pusha
adc
lret
sub
push
imull
shrl
mov
pop
pop
or
inc
ret
dec
or
ret
push
loop
cmp
into
aas
push
fwait
mov
push
xor
test
dec
lods
out
mov
call
je
lods
mov
mov
sbb
inc
ds
and
inc
scas
ret
xchg
stos
cmp
xor
sub
imul
push
outsb
add
pop
jg
xchg
mov
push
cmc
dec
mov
and
lret
push
lods
sub
nop
mov
loop
jbe
movsl
inc
add
movsb
enter
sti
cmp
dec
xchg
inc
js
xchg
jge
pop
std
aam
addr16
mov
mov
sbb
aaa
insl
jp
into
jmp
mov
shr
ljmp
dec
mov
cmpl
aaa
in
lods
fisubs
repnz
and
leave
das
push
mov
xchg
movb
ret
xchg
pop
dec
jge
lea
subl
cmp
stc
add
into
inc
and
mov
out
loop
push
push
mov
test
xchg
leave
cmp
dec
push
adc
jge
stc
imul
lds
inc
pop
add
mov
movsl
sbb
das
or
jp
lock
mov
xor
in
sbb
push
jg
xor
dec
das
lcall
adc
std
popa
push
cld
lods
or
mov
out
fisttpl
inc
ljmp
xchg
and
add
fsts
dec
test
mov
rorl
pop
lcall
jb
pop
or
sbb
jl
pop
push
into
addr16
cld
mov
cmp
lcall
test
in
mov
add
leave
adc
gs
aas
cmp
mov
xchg
cmp
lock
and
test
test
cs
add
shr
jns
sarb
test
add
xchg
cld
mov
xchg
xor
and
dec
xchg
xchg
sti
pop
popa
pop
sar
aad
and
outsl
dec
lock
mov
adc
mov
roll
gs
mov
cmpsl
pop
push
scas
push
sub
out
jg
mov
sub
inc
mov
or
pushf
adc
fs
ret
adc
pushf
dec
xor
aaa
clc
pminsw
mov
cmpsb
fstpl
test
fucomp
xchg
pop
lods
lods
mov
jg
test
sub
cmp
push
test
mov
dec
xor
out
cmp
ja
in
mov
push
rcl
nop
sbb
rcl
mov
loopne
lret
icebp
inc
insl
aad
scas
pushl
adcl
nop
sbb
sub
sti
mov
sub
pusha
pop
pop
add
pop
and
das
lahf
add
sti
mov
lahf
jg
add
arpl
cmp
jo
xchg
pop
repnz
push
xor
jne
roll
pop
loope
popf
cmpsl
test
mov
push
add
cmp
mov
inc
pop
movl
aad
lret
mov
stc
pop
adc
inc
xlat
xchg
mov
int3
imul
mov
sbb
or
fdivrs
in
cmp
je
add
outsl
mov
xlat
dec
in
sub
push
popf
dec
testb
lock
xchg
pop
sar
fidivl
fwait
push
scas
pop
push
adcb
ret
pop
mov
xor
mov
call
push
popa
add
push
das
push
cmp
lret
or
mov
xchg
mov
jp
push
jns
aad
xor
sbb
inc
rcrl
xlat
in
cmc
inc
cmp
jl
pop
leave
bound
frstor
movb
decl
test
or
test
or
jge
mov
mov
pop
stc
mov
repnz
das
stos
adc
sub
cli
stc
jmp
popf
into
shrb
push
ss
push
xor
jecxz
add
mov
bound
push
jo
outsl
push
cmp
sub
jae
push
and
fisttps
inc
out
dec
sub
jae
adcl
push
sbb
mov
sub
inc
and
repnz
mov
sub
test
lock
out
in
arpl
jecxz
jnp
insb
fsubl
pushf
test
xchg
push
jle
sbb
or
dec
in
xchg
cmpsb
jl
divl
and
xor
inc
int
and
sub
jmp
bound
sbb
int3
out
sbb
shl
xor
add
incl
mov
leave
dec
xchg
push
mov
push
leave
push
or
enter
sarb
adc
xor
cwtl
xchg
dec
mov
mov
xchg
sub
cwtl
xchg
ja
or
xchg
div
add
inc
lods
push
inc
ret
sti
mov
pusha
xchg
jmp
xchg
pop
movsl
mov
sti
pop
cmp
leavew
mov
inc
adc
inc
les
add
jno
ja
add
ret
push
bnd
or
xchg
test
dec
and
xlat
in
sbb
sub
dec
lods
repz
and
cmpl
push
jl
scas
dec
sbb
ss
pop
lods
or
ret
les
adc
loope
sbb
xchg
rcrl
cld
psrlw
sbb
jno
ror
sub
mov
adc
or
push
addr16
gs
and
loop
mov
fidivl
dec
adc
sbb
movd
xchg
mov
jno
lods
imul
pop
mov
jbe
ds
push
ja
push
xchg
xchg
loopne
adc
adc
xchg
clc
push
mov
enter
dec
popf
aas
push
clc
jecxz
push
es
in
hlt
fs
loopne
mov
repz
ljmp
test
xchg
jl
push
pusha
test
xchg
push
ret
cltd
loope
insb
js
push
jno
push
cli
mov
in
ja
in
push
nop
mov
testb
pop
sar
fdivs
sub
add
gs
jg
or
addr16
cmp
push
jo
aaa
mov
xorl
int
push
sub
rclb
faddp
enter
es
mov
xchg
jg
loope
cmp
xchg
out
adc
call
xor
mov
imull
xor
cmpsb
rorb
fidivrl
cmc
mov
rorl
mov
mov
pop
lods
loop
xor
or
aaa
scas
aaa
mov
sarl
mov
or
add
dec
dec
popf
mov
ret
ret
cs
mov
mov
xchg
dec
xor
xchg
gs
mov
cmp
dec
dec
inc
int
in
push
mov
dec
or
or
adc
mov
bound
mov
mov
mov
mov
sub
xor
jg
sub
sti
xchg
add
push
or
mov
out
dec
fisubl
inc
in
lea
sub
adc
cmpb
std
loop
pop
jnp
out
push
mov
ret
xor
cmpsl
fstl
icebp
jp
push
xchg
xchg
inc
cmc
push
sbb
lret
pop
dec
mov
lret
mov
lcall
inc
xor
out
adc
mov
pop
xor
dec
leave
out
push
sti
xchg
stos
mov
ret
in
mov
cmp
and
xchg
and
xor
xchg
mov
push
aam
idivb
xchg
or
cltd
add
xor
aam
inc
pop
ret
xlat
push
call
sbbl
pop
adc
popw
dec
and
int3
mov
lcall
add
mov
or
lahf
testb
add
pop
mov
adc
repnz
xchg
movsb
cli
imul
push
daa
sub
stos
popa
push
and
std
ss
pop
sbb
call
lret
stc
mov
aam
sahf
fwait
jo
sbb
xchg
jb
popa
test
mov
inc
mov
jne
adc
dec
sahf
fldl
or
addr16
sbb
aad
and
lds
int3
sbb
mov
xchg
roll
rclb
lahf
pop
orl
out
mov
int
jns
lea
aam
add
fbld
xor
je
pop
lods
negl
mov
ljmp
fstpt
jns
fsubr
imul
jl
mov
subb
cmp
dec
cltd
iret
or
and
movsl
mov
fs
push
lock
and
push
push
les
mov
decl
pop
cmc
xchg
sbb
mov
mov
test
jo
int
pop
mov
pop
xchg
dec
xchg
inc
push
in
adc
daa
jne
int3
xchg
addb
jg
call
mov
ret
repz
sbb
dec
mov
lcall
fisubs
repz
pop
mov
loope
push
or
cmp
pushf
and
mov
add
cmpsb
jb
cltd
mov
adc
jmp
rcll
mov
pushf
shll
sbb
test
rep
je
push
xor
inc
andl
cmp
pop
orl
aad
repz
repnz
push
sub
dec
andl
add
leave
cmpsb
push
dec
sub
loope
jae
das
sub
popf
inc
xchg
in
aaa
sbb
jbe
clc
jmp
push
inc
cmpsl
imul
cmp
imul
in
pusha
fwait
pshufw
lahf
xchg
loope
inc
repnz
shll
in
cmp
xor
insb
mov
mov
outsb
and
or
in
sbb
inc
stos
popf
into
sbb
fisttpl
cltd
inc
dec
imul
cs
das
ss
loope
add
rcll
pusha
pop
and
stos
clc
fbld
and
iret
inc
shr
inc
ds
or
jno
insl
addr16
add
or
pop
mov
push
ret
push
popf
cmp
jns
add
mov
pop
xorl
call
dec
fimuls
sub
cmpsl
adc
lret
imul
dec
aas
test
lahf
mov
ret
enter
xor
movsb
js
sarl
bound
icebp
add
dec
es
sbb
push
repnz
cwtl
adc
and
push
popa
cli
xchg
jmp
arpl
mov
shlb
push
or
xor
sbb
and
jecxz
adc
and
out
adc
cmc
mov
push
jnp
xor
xchg
push
jb
add
mov
adc
jg
dec
test
mov
adc
lods
sub
sbb
mov
out
push
sbb
sbb
sub
shlb
loopne
mov
aaa
in
in
mov
andl
out
cli
jmp
movsb
imul
jnp
in
mov
mov
push
dec
clc
call
add
mov
insl
dec
and
pop
mov
push
loopne
and
mov
jl
jp
aad
ss
arpl
in
sub
pop
inc
cmp
fs
mov
shll
lcall
cmp
imul
and
fwait
jl
out
mov
adc
mov
pop
icebp
push
dec
push
xor
leave
sbb
mov
inc
jne
adc
lahf
in
mov
push
sahf
in
movsb
sbbb
mov
mov
sub
pop
cmp
jno
inc
or
or
cmp
aad
js
rcr
or
sbb
xchg
not
repz
rorb
int3
inc
adc
fdivl
loope
fists
or
push
repz
mov
cwtl
test
adc
mov
fcmovnbe
push
xchg
fstps
xchg
fstp
repz
les
stc
rcll
or
lret
stos
outsl
xchg
pop
jp
inc
loop
mov
pop
sahf
jbe
mov
mov
jge
sbb
dec
ret
xchg
jnp
movsl
clc
sub
inc
notl
lcall
mov
out
out
pusha
and
out
cmpsb
imul
arpl
scas
dec
xchg
push
jae
jecxz
stos
sub
adcb
fistl
jp
push
and
or
inc
dec
test
les
les
and
ret
dec
addr16
ffree
jae
dec
data16
out
and
jmp
xchg
lahf
imul
xlat
lret
adc
je
mov
dec
mov
inc
lds
sub
imul
out
loop
adc
inc
or
xlat
push
mov
dec
dec
icebp
pop
xor
xchg
push
js
or
jg
sbb
sbb
mov
sbb
cwtl
and
sbb
mov
fidivl
cmp
push
out
ret
push
call
ja
add
inc
mov
inc
mov
mov
aad
mov
aaa
in
and
int
cmp
in
cwtl
add
mov
xchg
add
jo
ficoms
adc
mov
mov
or
imull
jae
push
lret
mov
cmp
xor
call
pop
int3
fwait
add
cmp
jo
adc
cmp
or
xor
mov
cmp
mov
push
inc
xor
add
dec
rcl
addb
sub
sub
xchg
dec
sti
in
push
push
xchg
inc
xor
ljmp
cltd
mov
movsl
adc
pop
and
shrl
ret
and
push
sub
movsb
sub
stos
xchg
cmp
icebp
jecxz
sub
mov
xor
sub
xchg
mov
fdivrl
outsb
arpl
imul
mov
fwait
loopne
addl
mov
xchg
sbb
jns
jge
mov
pop
cli
push
shll
xchg
cmp
test
les
leave
test
in
mov
sbb
test
stc
add
cmp
mov
outsl
push
in
out
sub
lret
cmp
lret
mov
xor
ja
mov
fcomps
xchg
test
push
adcb
nop
rorb
cld
mov
enter
fadd
sbb
push
fxch
jmp
iret
je
jae
fcmovnb
popa
hlt
addl
mov
fcomps
push
out
and
shrl
jmp
add
sahf
pop
mov
mov
inc
lcall
xchg
aas
sub
dec
insb
popf
sub
rclb
jp
cmp
adc
pusha
out
jge
ljmp
in
icebp
cmp
adc
cmp
orl
xor
orl
cld
jp
test
mov
cmp
out
dec
sbb
xchg
imul
push
rolb
lock
cmp
leave
dec
adc
lods
outsb
push
cs
in
shll
add
loope
mov
mov
mov
movsb
add
daa
fidivs
add
std
add
sub
in
ljmp
imul
testb
lea
sub
fcomp
jb
pop
rorl
xor
aam
adc
imul
out
in
sub
int3
pop
pop
adc
fsub
daa
fadds
mov
xchg
add
xchg
in
sbb
xlat
mov
dec
sub
mov
add
pmulhuw
sub
inc
lock
or
inc
icebp
in
or
mov
les
loopne
je
sbb
and
push
aam
scas
stos
test
jg
test
jns
or
pop
mov
in
ja
aam
or
dec
into
fs
and
mov
loopne
cmp
dec
gs
fucomip
and
fldl
and
cmpsl
jmp
pop
ret
insl
insl
add
jl
push
stos
sti
cmp
mov
in
stos
ljmp
push
mov
bound
call
push
mov
cltd
sub
pop
push
jl
or
stos
ds
jne
lret
pop
iret
jl
jns
pop
inc
jne
xchg
xlat
fstpt
fldcw
sub
mulb
adc
mov
xor
lahf
jl
mov
loop
ja
xor
jp
or
and
cmc
in
loop
mov
out
add
subl
pop
mov
lret
inc
xor
mov
jg
out
popf
loope
lock
daa
mov
mov
xchg
mov
bswap
push
lods
sbb
dec
outsl
outsb
jle
sarl
jmp
mov
hlt
xchg
lret
sbb
sbb
les
xchg
jo
push
addr16
cmpsl
callw
pop
add
cwtl
xchg
fucomp
xor
push
es
addr16
imul
les
bound
sahf
lds
mov
fidivrs
fsubrl
cltd
pop
out
sarb
xor
aam
pop
push
out
imul
cmp
les
mov
xchg
or
aad
adc
jecxz
shrb
sbb
pop
mov
mov
sub
xor
rcrl
adcb
dec
inc
loope
leave
mov
mov
and
mov
push
and
dec
repz
out
dec
fs
bound
leave
jle
jnp
pop
ficoms
mov
test
xchg
fwait
je
push
add
dec
sbb
ds
rcl
je
or
in
cmp
mov
pop
add
xor
xchg
mov
push
stos
mov
daa
mov
jl
aaa
xchg
jbe
je
cld
sbbb
sti
lods
lcall
repz
sub
out
cmpsb
push
adc
jae
pop
pop
xchg
and
xor
cwtl
sti
fiadds
movsl
and
ret
fwait
inc
push
mov
jbe
scas
stc
ss
loopne
aas
pop
adc
stos
fisttpl
sub
test
pop
inc
pop
xor
fdivp
adc
stc
push
adc
aaa
lods
dec
cld
adc
testl
mov
cwtl
jl
push
xor
or
dec
nop
xor
mov
or
push
idivl
clc
bound
push
cmp
je
cmp
dec
and
sbbb
rorb
bound
sub
in
push
mov
mov
fiaddl
cmpsb
add
jl
jno
nop
pop
adc
push
inc
cmp
pop
pop
mov
mov
test
dec
mov
addl
pop
fsts
enter
rcrl
inc
dec
push
add
fcompl
sub
lret
xchg
mov
sbb
shll
cs
mov
repnz
int
jnp
mov
clc
jecxz
adc
inc
je
rcl
out
mov
sub
xor
jl
popf
movsl
and
ret
pop
cwtl
loope
sbb
jno
dec
push
scas
cmpsl
inc
aaa
xor
dec
repz
sti
pop
scas
mov
std
push
sbb
enter
pusha
sub
mov
mov
or
mov
pop
lret
xchg
jg
or
jle
cmp
aaa
test
xchg
xchg
inc
xchg
or
xor
outsb
lds
loope
jge
test
insl
pop
xchg
aam
imul
sarl
lods
cmpb
movl
stos
cmp
test
jg
or
push
ss
jnp
out
jne
xor
cli
emms
cld
rorl
or
xchg
and
es
sub
mov
cmpsl
adcl
adc
mov
xchg
lock
jmp
popf
test
jl
iret
in
stc
les
inc
loop
jl
xor
imul
mov
loop
xchg
push
sub
or
dec
or
cmp
push
or
sahf
or
push
popf
jp
inc
movsb
mov
test
inc
and
pop
add
xor
xchg
xor
rcl
fs
mov
call
divl
xchg
mov
pusha
and
imul
jbe
inc
mov
lret
sub
jl
cmp
jecxz
dec
arpl
sbb
cmc
cmp
sub
push
or
mov
bnd
fwait
dec
clc
cmp
xor
dec
pop
push
shlb
push
add
and
pop
rcrb
push
cmp
cmp
xor
add
cli
inc
movsb
test
shll
cmp
fadd
int3
call
mov
lahf
push
mov
in
aaa
mov
push
add
rolb
lret
mov
ret
sub
adc
outsb
mov
mov
push
lret
clc
pushf
stos
mov
mov
pop
fsts
or
lret
xor
cmp
add
fnstcw
jae
mov
jp
movsl
sbb
call
lahf
imul
mov
lret
enter
in
dec
popa
cmp
sub
and
sbb
je
inc
hlt
insl
jge
mov
scas
sbb
clc
lahf
xchg
add
push
or
repz
mov
and
cmc
imul
mov
mov
imul
sub
lods
daa
add
ss
filds
or
aam
xchg
xchg
jle
mov
xchg
jne
xchg
and
fidivl
push
push
adc
mov
mov
adc
jg
sub
jl
pop
loope
mov
jle
xor
nop
lea
dec
xchg
cltd
jae
sarb
jne
aas
or
dec
popa
fwait
push
mov
adc
push
sbb
dec
lods
xor
das
jne
push
cld
stos
push
cmp
inc
mov
mov
push
loopne
dec
out
dec
xchg
inc
inc
inc
rcll
mov
mov
mov
mov
inc
mov
es
and
ret
mov
jmp
push
in
push
jo
cmp
xchg
aas
stc
inc
rep
test
sti
mov
push
mov
push
and
pop
sbb
lods
adc
mov
rorb
loop
xchg
lods
insb
dec
lahf
add
shrl
mov
mov
cld
int
rcrb
loope
adcb
rolb
int
insb
mov
push
mov
lock
push
dec
cmp
xor
inc
movsb
pop
mov
lret
mov
mov
clc
clc
fucomp
jle
popa
in
movsb
xor
push
xor
add
mov
cmc
cltd
ds
add
or
outsl
dec
add
sub
xor
and
pop
adc
xchg
xchg
imul
imul
mov
stc
sub
jecxz
add
movb
sarb
xchg
imul
sub
in
xor
loope
pop
xchg
add
mov
jge
push
cmp
cmp
mov
fs
fadds
fiadds
iret
dec
int
or
enter
push
and
push
mov
jmp
shlb
sub
adc
test
and
in
mov
sbb
dec
sub
mov
inc
iret
xlat
and
pop
and
mov
add
jnp
add
outsl
sbb
test
add
lock
xlat
adc
and
add
popf
ss
push
fcmovb
mov
dec
aad
mov
lock
adc
insb
and
rorb
jns
ds
jno
adc
push
inc
add
stos
das
pop
pop
popa
mov
in
and
inc
jo
xchg
aam
imul
cmp
out
xchg
iret
loop
cmpsl
lods
daa
lret
leave
int3
pop
lds
pop
je
daa
setl
push
in
mov
dec
popa
rolb
in
decl
and
xchg
push
dec
scas
jns
xor
out
inc
sldt
bnd
pop
xlat
push
push
xchg
fadds
ret
call
pusha
and
stos
cmp
sbb
jbe
fistps
nop
cltd
std
mov
mov
push
lcall
sub
adcl
push
xchg
xchg
leave
into
test
jle
shrl
iret
subl
cli
or
sbb
inc
out
outsb
dec
lock
fs
test
dec
dec
push
adc
inc
cmp
push
add
hlt
mov
insl
adc
scas
sub
mov
insl
dec
sahf
nop
push
or
scas
or
push
lret
dec
sub
mov
mov
adc
adc
and
rcrl
in
or
mov
jmp
jp
daa
mov
and
sbb
jl
cmp
inc
dec
sbb
in
adc
mov
ljmp
ss
mov
mov
mov
add
jmp
popf
adc
pop
xchg
adc
lods
lds
xchg
xchg
ror
adc
push
xor
repz
aaa
adc
add
test
lock
xor
jnp
add
sbb
cmpsl
xchg
loopne
sti
inc
dec
sbb
addl
mov
and
push
movsl
ficoms
mov
mov
cmpsl
jbe
addb
jno
inc
sub
jne
nop
push
and
hlt
iretw
adc
movsl
add
mov
in
adc
shrl
pop
cmp
shll
cwtl
jge
mulb
mov
sub
adc
jne
out
fiaddl
loop
imul
push
icebp
daa
data16
xchg
xchg
mov
into
push
sahf
ds
inc
out
pop
xchg
cmpsl
push
aad
adc
push
pop
lret
mov
mov
xchg
sub
mov
jp
imul
mov
sub
xchg
sbb
xor
shll
cmp
mov
mov
cmpsl
daa
jb
mov
and
jl
ss
cli
push
aas
jl
mov
jno
sub
cmp
fwait
mov
pop
repz
adc
cmp
roll
pop
stos
xchg
pushf
jl
cmp
push
int
mov
push
shll
sub
xchg
xor
mov
sub
jle
mov
adcb
lea
das
jns
and
repnz
or
fidivrl
push
imul
jg
and
in
add
jle
mov
adc
pop
sbb
mov
cltd
xor
mov
push
andb
cmp
adc
int
pop
sbb
call
and
in
or
adcl
in
inc
jae
sbbb
inc
test
jne
sub
in
xchg
pop
enter
xorb
mov
mov
push
in
into
sbb
js
jmp
xlat
add
xor
sahf
cmp
sti
mov
sbb
nop
inc
je
mov
or
and
sbb
test
jmp
push
dec
mov
xor
js
jg
mov
popa
mov
pop
inc
mov
xchg
xor
dec
std
jne
in
or
fldl
iret
bound
mov
sbb
cmc
outsb
mov
rcrb
mov
scas
jbe
stos
pop
jns
fisttpl
mov
clc
jns
xlat
stos
out
cld
inc
aam
aaa
scas
notb
nop
sub
mov
ret
adc
push
es
xchg
lret
pop
imul
lock
lret
fcompl
sbb
movsl
call
ret
mov
out
pushf
xor
bound
cmp
inc
and
or
repz
daa
jl
rcrb
and
mov
xchg
insl
mov
loop
int
sub
xor
cmp
fistpll
inc
pop
ja
insl
cmpb
xor
outsl
sbb
repz
or
add
jno
cs
loope
scas
ret
clc
inc
mov
and
in
fwait
sbb
rcl
out
iret
adc
in
test
push
xchg
mov
rorb
push
push
mov
loopne
popa
cli
and
cmp
inc
loopne
or
push
jp
or
push
mov
jno
cltd
mov
lds
xor
fdivrs
ret
stos
push
shl
sbb
mov
out
or
adc
sahf
popa
lret
leave
out
cmpsl
mov
sub
xchg
dec
cwtl
jge
dec
lret
push
dec
stos
xchg
add
ror
lock
xor
gs
mov
in
adc
lea
addl
cmp
pop
sbb
scas
ficompl
sub
push
and
js
mov
cmp
aaa
fsubrs
pop
stos
adc
push
in
adc
lcall
mov
out
jge
daa
push
adcl
js
and
enter
or
inc
into
pop
mov
rorl
sti
fwait
inc
dec
pusha
push
xchg
imul
out
sbb
loopne
aad
add
repz
outsb
sarl
nop
mov
xchg
cmp
push
mov
test
inc
jmp
pop
and
xlat
lods
mov
fldt
xorl
ds
mov
inc
arpl
outsb
adc
or
xchg
xchg
subb
jne
and
inc
insl
mov
out
cmp
inc
sbb
push
or
inc
aaa
push
mov
icebp
push
stc
outsl
cmp
movsb
roll
or
cmp
iret
and
hlt
add
or
test
loope
scas
iret
sarl
or
mov
fstpt
xchg
lea
xchg
push
jmp
das
adc
cmp
stc
sarb
cli
add
mov
push
in
je
scas
movsl
out
mov
fildll
fwait
jle
and
mov
jns
pop
pop
sbb
sti
pop
sub
and
jmp
test
xchg
push
shl
sub
hlt
out
mov
dec
and
push
push
mov
xchg
push
add
std
mov
sub
mov
lods
fmull
cmp
mov
stos
cmp
aad
je
daa
popa
sbb
shufps
lock
dec
in
popa
enter
xchg
mov
dec
mov
shll
push
ror
inc
imul
fwait
bound
cmp
mov
incl
sub
pop
das
cld
xchg
add
jl
rorl
jb
inc
test
mov
cmp
or
xor
add
mov
xchg
fidivrl
xorb
ret
mov
xor
jmp
rol
cmp
pop
mov
jmp
and
fstl
into
mov
dec
mov
jb
nop
aad
ds
xlat
hlt
sub
fsub
dec
vpsrlvd
jo
sub
mov
jmp
mov
and
addl
sahf
sub
iret
pop
stc
cmpsb
or
push
jecxz
inc
fisubrl
sbb
pop
loop
lods
pusha
jne
leave
jno
mov
ss
ficoms
stc
adc
xchg
sbb
sbb
and
sub
jo
out
mov
stos
xor
daa
es
bound
dec
imul
mov
xor
push
push
addb
mov
popa
repnz
add
int3
adc
add
mov
sarb
cld
insl
jmp
jno
mov
push
dec
data16
mov
fisubrs
dec
popf
add
ret
sub
les
dec
in
aam
mov
or
push
cltd
jns
int
adc
fisubs
xchg
xor
sbb
outsl
icebp
add
jg
popa
dec
dec
push
mov
repz
dec
adc
in
jecxz
pushf
push
push
xor
es
jge
adc
xor
cwtl
xchg
scas
call
stos
mov
inc
orb
js
aam
xor
lret
sub
pop
pusha
aad
push
xchg
mov
push
fistpl
bnd
std
jb
scas
imul
mov
movzwl
push
sub
dec
lods
jae
dec
lcall
jae
int
lock
test
ja
out
pop
adc
push
fmul
pop
sahf
xchg
cmp
inc
mov
mov
xchg
rolb
push
cmp
dec
arpl
add
shr
dec
adc
popa
movsl
stc
xchg
ja
pop
xchg
cmp
sti
out
iret
out
and
jo
mov
xchg
bound
addr16
inc
adc
sub
aam
loope
push
enter
or
testb
andl
add
imul
xchg
cwtl
dec
add
movsb
rclb
test
mov
jne
adc
jge
or
ret
bnd
cmp
das
mov
sbb
inc
cmp
iret
daa
pop
mov
inc
mov
cs
pop
cmp
mov
push
popf
xchg
inc
lock
sti
hlt
in
icebp
mov
scas
data16
test
stos
test
lahf
add
stc
mov
and
jb
filds
push
enter
repnz
xor
daa
xlat
cltd
jae
pop
subl
test
ja
inc
ds
fcomps
rorl
jge
out
je
repz
cmp
sub
pop
adc
pusha
dec
sub
xchg
adc
sub
test
sub
stos
sub
and
jae
dec
add
div
mov
push
lock
ror
xchg
jne
ja
xorl
ret
aaa
add
push
fistpl
xchg
leave
dec
mov
scas
les
in
stc
xchg
dec
sub
fcomps
inc
orl
xor
pop
insl
and
dec
mov
test
les
pop
sbb
popf
loop
sub
fisttps
adc
stos
jb
mov
int
rcrl
dec
mov
xorb
xor
jecxz
cmpsb
popa
cmpsb
xor
rorl
jae
in
or
lahf
or
ljmp
inc
jmp
jae
les
filds
in
xchg
adc
xor
hlt
xlat
jns
fsubl
adc
pop
sbb
xchg
rolb
es
ja
jmp
xchg
mov
mov
or
popf
aam
jo
mov
inc
repnz
lret
jmp
and
mov
icebp
mov
sub
popa
xchg
ret
test
cmpsb
add
xor
data16
and
push
push
dec
pop
ds
leave
or
inc
stos
jo
lods
push
xchg
inc
jmp
add
sub
cltd
jns
pmullw
mov
push
inc
pop
and
movsl
sbb
std
and
jmp
jmp
mov
add
or
mov
aam
xor
dec
fs
stos
pop
and
fsubrp
xorl
xlat
sahf
inc
sahf
jl
repz
push
ds
aam
int3
imul
cmpsb
add
jno
sbbb
hlt
jmp
dec
mov
sub
push
lahf
adc
add
inc
mov
jns
mov
mov
xlat
or
test
incb
and
and
clc
xorb
inc
out
xor
out
inc
or
add
mov
pop
xor
dec
cmpsb
pop
rcll
je
dec
xchg
aam
xchg
push
lret
addr16
adc
mov
std
add
cltd
arpl
pop
loope
pop
imul
jb
push
pushf
rolb
cmp
nop
push
fisubrs
jbe
loop
mov
cmpsl
inc
jo
shll
and
jns
add
aad
iret
leave
xchg
leave
icebp
gs
rol
addr16
push
bound
sub
sbb
adc
pushf
jmp
iret
adc
inc
lret
xchg
cmp
popf
jmp
incb
inc
jle
and
loop
movsb
jecxz
push
pop
cmc
lods
testb
xchg
mov
add
dec
mov
or
mov
push
mov
mov
popf
fbstp
aaa
ret
stos
sub
gs
push
aad
test
mov
sbb
inc
mov
leave
js
shlb
lahf
lods
and
leave
cmpl
pop
xlat
mov
mov
mov
test
pushf
call
mov
push
and
clc
int
jge
xchg
inc
add
pop
int3
dec
push
imul
dec
dec
push
xor
inc
inc
pxor
inc
add
mov
lret
std
add
or
adc
mov
inc
mov
testb
test
out
jmp
mov
cmp
cmp
cmp
mov
shll
xor
adc
sub
loop
xchg
aas
push
xchg
addb
lea
fidivrl
mov
sub
add
mov
sub
adc
lods
cmp
cmp
push
push
sbb
push
movsl
xchg
inc
testl
mov
mov
addb
pop
es
in
insl
mov
xchg
icebp
clc
movsl
outsl
adc
adc
shlb
int
mov
jmp
or
addl
jmp
mov
jbe
cld
clc
adc
and
lret
inc
adc
gs
cmc
push
mov
push
jno
xchg
and
jp
popf
push
xchg
xor
dec
mov
and
adc
cwtl
insb
xchg
fs
scas
inc
pushf
ljmp
test
fdivs
mov
xor
push
enter
dec
adcl
pop
fs
adc
jmp
dec
xchg
xchg
loop
scas
leave
repz
outsb
bound
insb
push
dec
and
fs
sbb
or
and
mov
lahf
stc
js
mov
fstp
xchg
imul
jns
in
mov
lcall
sub
jno
xor
push
hlt
mov
lcall
mov
xchg
mov
testl
ss
mov
inc
cmp
dec
aas
test
cmpsb
add
lds
cmovno
add
loopne
jne
jmp
sub
cmc
cltd
mov
jb
and
test
pop
ret
test
repz
sub
cmp
js
out
sar
nop
xor
out
dec
and
lods
mov
add
xlat
fs
push
movsb
lret
xchg
jb
push
or
fs
lods
add
dec
sarb
pop
pop
cmp
gs
and
enter
xchg
jg
and
xchg
les
mov
mov
dec
inc
inc
ret
lods
imul
pop
adcb
xor
ss
mov
cmpsl
aad
ret
fwait
lods
test
or
xchg
jle
dec
addr16
or
mov
sub
fcos
aas
ret
mov
adc
add
push
test
imul
inc
pop
adc
jns
das
mov
std
out
les
gs
cmp
inc
mov
insb
add
lret
imul
outsb
cld
fistpl
decl
arpl
jecxz
push
or
ja
and
ret
jge
dec
outsl
pop
daa
and
dec
inc
push
js
aad
add
push
cwtl
and
pop
mov
sub
pop
cmpsb
fisttpl
mov
inc
das
dec
imul
push
outsb
add
mov
dec
mov
imul
idiv
stos
xchg
push
shrl
cltd
xor
mov
xchg
pusha
inc
mov
push
inc
out
xchg
into
gs
in
fists
xchg
pop
fs
pop
xor
and
or
cmp
mov
or
mov
ljmp
mov
inc
jns
mov
cmc
idiv
lds
int3
cmp
les
pop
mov
jno
push
dec
jmp
jb
xor
imul
jmp
mov
fwait
sti
lcall
sbb
and
sub
pop
lret
xchg
mov
jg
out
fs
xor
int3
in
mov
inc
sbb
pop
and
jb
push
ss
cli
je
lret
lods
das
jecxz
mov
jae
cmc
cltd
test
cmp
mov
enter
push
dec
incl
mov
push
jns
pop
mov
adc
cmpsl
sub
testl
push
mov
dec
jg
lods
push
leave
into
push
lea
sahf
push
sub
mov
add
adc
or
adc
pop
add
mov
inc
cmp
xor
adc
sahf
pop
shrb
div
push
loope
icebp
adc
outsb
sub
mov
movsl
outsl
jne
pop
jne
stos
mov
sub
stos
push
jmp
out
inc
addr16
lods
adc
push
insl
xchg
push
adcl
lcall
inc
movsl
fldcw
adc
mov
push
adc
add
xor
test
mov
xchg
pusha
mov
mov
mov
lea
sub
clc
mov
add
dec
mov
add
push
jbe
jnp
scas
and
lods
or
mov
popf
cwtl
lret
mov
out
pop
sub
into
jno
and
popf
add
je
bound
add
xchg
in
arpl
push
mov
mov
pop
push
repz
pop
pushf
leave
or
stc
adc
push
xchg
hlt
mov
jne
movsl
mov
sub
mov
lds
pop
mov
sbb
lea
xor
fsubl
pop
loope,pn
subb
insl
and
out
push
adc
pop
pusha
inc
jp
int3
adc
push
test
outsb
inc
mov
push
pop
cltd
in
sub
mov
jo
insb
sbb
in
orl
insb
mov
es
in
push
pusha
jge
mov
add
icebp
fwait
mov
pop
aas
movsl
xor
or
jp
clc
into
prefetch
pop
repnz
mov
inc
add
mov
or
inc
test
sbb
xchg
dec
lock
in
xor
fs
aam
jae
jns
mov
lds
icebp
rcr
rol
or
mov
aas
add
aad
cmp
cmp
nop
je
jp
inc
or
add
cmp
loop
je
inc
daa
xlat
mov
ja
push
mov
fs
adcb
sub
jle
sub
roll
xor
movsl
aad
loope
push
loope
jecxz
pop
xor
in
stc
and
adc
ret
inc
push
out
out
xchg
daa
out
lcall
into
mov
jnp
cmp
xor
xor
pop
cmp
scas
xchg
out
inc
les
loopne
or
sub
inc
leave
les
lock
lret
pop
lods
je
or
mov
fists
push
out
mov
inc
mov
jo
enter
inc
addl
pop
fs
ljmp
lret
inc
pop
mov
mov
jne
dec
mov
and
les
scas
mov
adc
xchg
sub
adc
arpl
scas
pushl
movsb
leave
addb
in
push
imul
vpcmpgtw
sahf
xchg
inc
test
mov
sub
xchg
sub
or
and
adc
sub
lret
in
mov
cwtl
ss
inc
mov
psubw
popa
clc
push
push
int
test
sub
imulb
cltd
or
cmp
popf
inc
mov
ficompl
rorl
mov
pop
sub
cmp
adc
cmp
pop
or
rolb
sbb
push
lds
stc
std
iret
mulb
nop
cmp
cs
pusha
or
xor
aam
adc
push
cmp
dec
out
mov
and
pop
fcmovnbe
movsl
push
mov
rol
xor
aad
xchg
jns
dec
jno
sub
push
sbb
inc
cmc
mov
std
push
dec
sbb
loop
cmpsl
and
out
int
cli
insl
push
sbb
fstl
ljmp
mov
pop
cmpsl
push
rcll
push
inc
ficompl
out
roll
negb
inc
jecxz
js
das
sbb
ds
in
hlt
inc
cmp
cs
jle
pop
inc
jp
dec
and
inc
jge
das
jns,pn
mov
pop
jns
movsl
lods
mov
js
sub
cmp
mov
adc
push
out
mov
and
adc
add
cwtl
push
push
lds
clc
push
push
mov
xor
xor
push
mov
add
repnz
sar
mov
adc
clc
outsb
inc
inc
popf
jo
pop
enter
int3
lcall
and
pop
fists
out
push
add
push
stos
xor
adc
mov
push
xchg
lods
repz
or
cwtl
xor
imul
cs
aas
fnstenv
pop
popf
out
lds
andb
pop
push
popf
push
inc
inc
fistpll
mov
js
push
or
or
in
jg
outsb
fsub
dec
jbe
push
jmp
js
imul
jae
mov
and
sub
addr16
out
iret
push
or
inc
iret
or
or
and
movsl
xchg
sub
or
cmp
jecxz
test
out
call
loopne
je
push
test
aad
dec
test
aad
fsubrl
js
fmuls
sahf
jecxz
mov
mov
push
iret
pop
sub
or
inc
pop
andl
test
inc
sbbl
add
mov
aaa
adc
out
mov
ss
cmp
add
xchg
sbb
add
sub
sbb
aaa
les
xor
xor
cmp
movsl
sub
xor
mov
xchg
in
inc
daa
inc
sub
mov
subl
jae
pop
scas
push
mov
jp
dec
cli
gs
fs
jb
add
mov
mov
je
jl
in
insl
dec
out
stos
cmp
xor
adc
sbb
inc
jo
pop
popf
jmp
cmp
push
jg
fidivrl
imulb
mov
repnz
ret
insb
cltd
mov
xorb
das
test
arpl
pavgw
movsb
xchg
in
lock
scas
movsb
into
inc
sbb
jle
test
jns
int
xrelease
mov
rolb
jge
or
lods
ret
pop
inc
enter
cmpsb
jo
or
cwtl
push
dec
and
cli
mov
ret
jmp
lahf
fdivrl
pop
mov
test
gs
jmp
push
jge
pusha
std
inc
push
cs
xchg
add
imul
xchg
push
ja
mov
mov
jns
pushf
or
push
xchg
imul
or
cmp
mov
cmpsb
xor
mov
nop
cs
dec
and
mov
inc
into
fstl
test
mov
jne
mov
enter
outsb
hlt
lea
add
sub
dec
ret
mov
xor
jp
mov
aad
arpl
sub
add
loope
jg
mov
mov
ud2
xor
or
sbb
xor
imul
gs
sbb
mov
movsb
inc
in
ret
jae
call
inc
push
insl
lods
scas
aas
popf
aad
cwtl
je
jg
jno
popa
ds
mov
jmp
dec
xor
mov
jecxz
scas
pop
inc
xchg
adc
lcall
iret
ljmp
sub
xchg
push
test
cli
cmp
dec
sbb
mov
stos
ret
stc
jg
dec
sbb
pushf
push
rorb
add
in
mov
add
pop
push
or
leave
lods
cmp
and
sub
xchg
or
call
mov
daa
lods
rorb
inc
mov
push
xchg
and
std
fisubrs
mov
imul
adc
imul
nop
je
movsl
xchg
add
inc
xchg
scas
mov
mov
add
popf
and
je
test
cmp
mov
sub
pop
xor
jl
push
fcoml
loopne
fwait
mov
jp
clc
ds
mov
adc
lock
sahf
push
inc
mov
pushf
mov
cltd
out
mov
repz
cmp
cli
mov
ret
mov
xchg
outsl
add
jmp
loopne
sub
enter
addr16
imul
arpl
imul
lods
rol
xchg
fildl
adc
stc
fmuls
shlb
adc
out
inc
jno
aad
out
or
fisubrs
push
fildl
jecxz
shr
xchg
je
add
jle
sub
stc
lcall
jecxz
inc
je
inc
popa
and
scas
pusha
xor
fcomi
loope
fcmovnu
ret
gs
in
icebp
rcrl
cs
mov
divl
inc
mov
fdivrs
sbb
mov
mov
xor
arpl
cmp
or
sbb
pop
xor
cld
aaa
insl
mov
sarb
in
push
sub
fcompl
jno
mov
popf
lock
jae
mov
rcl
push
cs
js
lock
mov
inc
sahf
jl
sbbb
xlat
mov
adc
mov
in
out
dec
shl
test
enter
pop
repnz
stos
jecxz
outsl
xchg
shlb
in
stos
setl
lret
xchg
jl
or
lea
scas
aad
sub
movsb
mov
fldt
mov
mov
imul
add
xchg
push
pop
inc
cmpsl
push
sbb
fwait
xchg
into
cmc
xchg
jno
or
pop
fistpl
inc
mov
scas
in
xorl
nop
psadbw
lods
sub
mov
sbb
lods
mov
sub
rolb
std
adc
pop
fdivrs
mov
or
sub
mov
jb
cmp
and
fildll
ds
mov
sti
loopne
jne
pushl
addl
js
add
sbb
sbb
repnz
or
xchg
loopne
mov
imul
add
rcr
mov
mov
int3
pop
mov
sti
mov
mov
add
xor
push
xchg
lcall
lds
mov
fstps
jg
enter
fistl
or
adc
adc
mov
and
or
in
and
inc
adc
xor
popf
xlat
dec
pop
mov
andl
pop
out
aad
ficoms
pop
inc
lcall
sahf
and
dec
loop
loopne
inc
adc
andb
es
decl
pop
add
jo
movsb
pushf
clc
enter
imulb
add
insb
fs
xor
daa
sub
out
nop
jb
mov
out
lds
pop
xchg
pop
xchg
or
jp
std
lods
push
mov
mov
fwait
je
cmp
ror
xlat
xor
fists
cmp
inc
les
ss
outsl
xchg
xchg
mov
clc
lock
rcll
cmp
pop
lcall
xor
mov
scas
mov
rep
lea
fucomp
xchg
xchg
sbb
call
push
xchg
sbb
lea
test
in
cmc
out
or
sbb
cmp
or
addr16
aad
lea
gs
cmp
add
cmpsb
repnz
cmc
mov
aad
jb
add
xchg
out
bound
jecxz
pop
aad
enter
dec
test
and
jmp
mov
lods
cli
and
xchg
and
inc
mov
sti
jg
loop
pushf
movsl
mov
sar
inc
fcoms
lds
xor
test
xchg
mov
pusha
loop
inc
push
jb
ss
push
jge
dec
clc
imul
pop
push
mov
pop
add
mov
mov
mov
xor
in
mov
or
pushw
in
popa
adc
test
dec
jp
adc
mov
push
mov
jle
loope
or
pop
test
mov
xchg
sub
push
mov
popa
cmp
adc
pminub
rolb
ja
xchg
in
out
ret
sub
fsts
scas
pop
jp
in
fists
lret
stc
je
sahf
out
pop
adc
sbb
or
cld
or
hlt
adc
outsl
adc
mov
mov
jle
leave
data16
fstps
adc
test
sub
xchg
fldln2
jb,pt
sub
inc
add
insb
sahf
aaa
fwait
cmp
decb
push
dec
sbb
into
nop
inc
or
mov
xor
stos
inc
rclb
ret
mov
pop
push
push
fistl
movsb
sbb
std
dec
imul
dec
shlb
stc
test
jns
cmc
cmpsb
xchg
icebp
pusha
jg
stc
mov
inc
jp
scas
cwtl
xchg
cmp
jns
lahf
cmc
mov
jg
movsb
or
pusha
xor
jmp
xchg
and
inc
add
sub
lret
jno
test
mov
jns
xchg
imul
insb
test
add
add
daa
adc
mov
jae
lea
loopne
cmp
dec
xor
push
and
pop
ljmp
sbbb
xchg
sbb
movb
sti
add
jle
cmp
sub
jecxz
add
pop
shll
shlb
or
decb
scas
popf
pushf
popf
fistpll
stc
stc
mov
sub
add
cmp
mov
movsl
pop
rcll
mov
dec
inc
popf
mov
lods
add
test
incl
fstl
out
aad
sbb
test
xchg
stos
rcrl
mov
bound
inc
adc
int
cld
dec
lret
jns
inc
mov
push
sub
mov
sub
out
jmp
pushl
cmc
incb
pop
adc
pushf
dec
xchg
xor
jbe
sub
adc
jle
or
repnz
pop
outsb
lcall
fiadds
adc
mov
test
lss
ficoml
scas
inc
movsl
in
mov
rclb
dec
ret
pop
repz
cmpl
repnz
pop
push
popf
test
shrb
add
test
push
outsb
dec
mov
es
inc
jg
gs
pop
inc
repnz
pop
dec
fsubrl
test
xchg
push
out
je
mov
popf
mov
bnd
xor
out
hlt
push
out
adc
mov
repnz
dec
add
outsl
jno
leave
adc
mov
sub
or
mov
pop
inc
or
dec
nop
xor
lds
jge
iret
mov
jnp
xchg
adc
out
ljmp
dec
popa
jp
sub
cmp
test
pop
mov
mov
or
movsb
dec
dec
jecxz
in
enter
scas
xchg
aaa
jle
inc
or
dec
pop
mov
mov
loope
jl
add
jl
sahf
aaa
pushf
popa
stc
mov
mov
mov
push
mov
imul
sbb
push
leave
das
aaa
push
push
addb
mov
daa
add
inc
jb
sub
stos
push
mov
call
xchg
outsb
xchg
sub
shll
loop
or
jb
cs
sub
rorl
aas
sbbb
xor
pop
mov
and
pop
pop
cmp
mov
in
mov
fneni(8087
push
xchg
test
mov
xchg
bound
mov
xchg
jecxz
lds
xchg
dec
push
and
push
push
jp
mov
adc
in
rolb
bound
jo
into
lea
daa
add
push
jle
cmpsb
aam
stos
jecxz
mov
adc
test
cmpsl
clc
xchg
mov
mov
arpl
fstps
lret
add
mov
pusha
push
or
push
in
int
inc
andl
mov
push
mov
out
sbb
mov
lcall
fistpll
ret
cmpsb
lods
aaa
ret
rorl
loope
ljmp
add
sub
insl
or
or
jae
inc
sbb
push
push
in
loope
sbb
lock
cmp
lcall
mov
call
dec
movsl
pop
stc
pop
ret
dec
jmp
xchg
jno
je
addr16
add
xlat
xchg
rorl
mov
xchg
mov
jl
test
push
and
sbb
lods
jg
jae
jg
push
pop
xchg
mov
lret
fildl
mov
pop
sub
cmp
adc
test
mov
mov
push
std
inc
mov
jb
fsub
ja
and
push
xor
rorl
cmp
cmpsl
adcl
jle
rcrl
mov
push
add
push
pusha
pop
in
inc
roll
int
jmp
lds
pop
cltd
mov
xchg
add
arpl
add
std
sub
add
movsl
clc
aam
mov
jp
xchg
add
push
jmp
imul
mov
hlt
rcll
adc
inc
pusha
inc
pop
push
push
fisubrs
mov
sub
ret
mov
xor
add
cltd
imull
xchg
inc
aaa
mov
or
mov
cs
dec
ret
and
mov
xchg
ret
mov
mov
cmp
lds
lret
call
int3
cwtl
daa
stos
mov
clc
adc
push
xchg
add
push
into
sbb
js
push
addb
and
aas
sbbb
sbb
imul
std
push
jno
sbb
xchg
ds
cmp
jno
popf
inc
mov
mov
sbb
mov
dec
aad
jno
movsl
iret
mov
aad
enter
sub
out
xchg
daa
push
xor
pop
push
sub
mov
ds
fs
cmc
push
pushf
or
mov
ret
mov
test
test
js
pushf
add
jno
cmc
xor
sbb
pop
adcw
or
dec
jo
lea
lods
push
xor
mov
mov
mov
nop
or
mov
pop
inc
push
inc
out
push
mov
xlat
jle
adc
xchg
setae
ljmp
pushf
scas
aad
stos
ret
push
into
out
xchg
pop
sbb
fbstp
test
adc
jl
popf
lret
lea
xchg
repz
push
mov
sbb
ret
dec
hlt
pop
in
loop
clc
fstpt
jno
loopne
sbbl
add
cmpsl
dec
push
mov
jge
xchg
sarb
inc
mov
cli
or
push
js
xchg
out
stos
add
addb
sbb
dec
inc
pop
ds
push
sbb
jbe
aas
ficomps
dec
push
decl
popf
mov
sbb
sbb
push
adcb
mov
mov
xchg
cmp
or
push
jge
cwtl
popf
js
inc
inc
mov
sub
les
lret
xchg
inc
adc
dec
andb
sti
xor
push
js
imul
loop
pushf
fucomi
sub
lods
push
push
dec
xchg
shll
jae
cmpsl
sub
xchg
mov
push
je
into
cmpsb
cmp
sbb
insl
inc
out
mov
mov
sarb
jb
dec
push
in
push
insb
cmp
daa
insl
and
test
cld
stos
test
mov
pop
popa
and
mov
nop
inc
loopne
pop
imul
cmp
daa
mov
cmp
lahf
sbb
mov
and
pop
shrb
mov
push
roll
and
push
shlb
sbb
mov
mov
inc
xor
sub
jmp
addl
aaa
inc
arpl
adc
inc
test
pop
lods
pop
xchg
out
insb
bound
mov
sub
mov
orb
es
fildl
inc
or
dec
adc
jg
aas
cmp
add
pushl
js
or
jg
sbb
adc
sbb
and
or
rcrl
inc
mov
iret
ret
les
adcl
mov
add
mov
sub
sbb
stos
test
mov
jo
mov
fistl
and
lods
add
ficompl
lret
pop
shll
fsubl
in
inc
or
shll
inc
push
and
lahf
pushf
mov
pop
xor
lret
hlt
mov
inc
stos
adc
mov
or
popa
inc
sbb
and
push
adc
sub
or
ficompl
pop
jecxz
xchg
js
sahf
jns
pop
sbb
jecxz
adc
jp
adc
dec
push
or
push
pop
sub
mov
jns
cmp
jl
fldenv
xor
add
sbb
hlt
insb
mov
xchg
stos
lret
shrb
mov
jge
popa
jbe
test
pushf
test
fcmove
push
movsl
xorl
dec
in
sub
xchg
stos
xor
stos
cmpsb
es
ds
pop
add
les
outsl
inc
in
fimuls
sub
stos
push
test
shlb
inc
aam
push
leave
mov
or
adc
jmp
stos
push
xor
push
ja
push
aas
sub
push
pop
les
fimuls
imul
stc
pop
test
add
mov
daa
mov
jle
in
std
xchg
push
cmp
and
jno
imul
dec
inc
mov
lods
inc
hlt
and
in
and
and
sbb
cli
mov
pop
ret
out
push
std
pop
out
or
hlt
pop
jne
add
in
int3
rcr
int3
xchg
ljmp
jb
push
aaa
cmp
push
or
cmp
ss
jno
mov
or
rcll
arpl
lods
cli
add
xchg
aam
sbb
les
test
adc
imul
dec
mov
movsb
imull
push
stos
out
test
js
stos
mov
inc
out
fdivl
iret
gs
jecxz
mov
loop
enter
lods
pop
js
push
and
mov
mov
ficomps
popa
mov
mov
loop
inc
add
je
aas
jne
arpl
jno
inc
pop
pop
clc
dec
lret
adc
sahf
or
loopne
out
jne
rsm
jecxz
xchg
pusha
or
cs
nop
pop
push
pop
inc
sbb
sub
ja
lds
adcb
jns
icebp
xor
xor
cli
push
movsb
repz
xor
lret
int
jle
cltd
in
lods
cltd
push
loop
dec
clc
jne
sbb
xor
adc
jno
and
mov
daa
pop
push
dec
cmp
mov
cmc
mov
rcrb
je
sub
cld
inc
cmp
xor
sub
fs
sti
xor
icebp
sarl
popf
mov
mov
in
mov
loopne
sbb
xchg
ss
inc
xchg
rol
mov
std
pop
dec
lds
sbb
xor
test
jle
sbb
cmc
dec
dec
out
pop
pop
pop
pop
fistps
xlat
jg
std
add
daa
dec
mov
sbbl
add
lods
out
imul
mov
cmpsl
int3
lds
loope
xchg
fcoml
adc
cmp
popf
stos
pop
mov
lea
cwtl
addr16
xchg
int3
xchg
mov
add
mov
xor
fmuls
movsb
xchg
dec
hlt
xchg
into
mov
xor
dec
hlt
scas
mov
add
stos
in
mov
jne
sti
or
in
mov
jge
inc
dec
push
pop
cmc
xorl
push
loope
pusha
neg
cmpsl
nop
test
sbb
loop
mov
and
xchg
jge
imul
mov
mov
cmp
fwait
cs
mov
leave
fdivs
and
xchg
dec
mov
adc
cli
mov
xor
hlt
sbbb
pop
sahf
push
bound
fbstp
dec
ss
push
inc
inc
cmp
mov
aaa
mov
cli
imul
je
push
push
fistl
inc
int3
jp
mov
dec
xchg
negb
xchg
rolb
or
stos
fiadds
sub
adc
scas
add
repnz
dec
cs
mov
pop
dec
hlt
stos
sub
inc
cmp
stos
xor
sbb
pop
dec
repnz
cmp
jge
and
cmpsl
xor
mov
scas
mov
hlt
pop
cld
push
mov
jnp
push
inc
popf
rorb
mov
loopne
pop
mov
sarb
mov
ljmp
push
mov
rclb
and
ret
repnz
mov
push
inc
dec
mov
bound
pop
xchg
mov
std
pop
std
cmp
roll
dec
or
insl
or
ficoml
jo
clc
dec
push
test
jle
ficoms
jns
loop
add
mov
inc
xchg
ret
ret
enter
mov
es
push
mov
loope
pusha
inc
mov
mov
mov
xchg
inc
and
mov
mov
mov
sbb
jecxz
adc
shlb
mov
mov
ds
repz
inc
adc
or
mov
and
sbb
cli
lret
repnz
jl
mov
dec
mov
jae
pop
fwait
pushf
xchg
subb
inc
roll
xor
and
or
bound
mov
ljmp
dec
fdivs
icebp
adc
clc
pop
jbe
jl
adc
or
jl
pop
out
das
jge
xchg
rcll
ja
mov
mov
jb
ret
cmp
push
stc
jo
lea
ljmp
popa
test
es
cwtl
add
add
push
push
mov
addb
jecxz
dec
xchg
ret
into
jg
fisttps
loop
imulb
insl
mov
je
sub
add
cmp
aam
xchg
and
cmp
repz
pusha
pushf
rorl
rclb
ds
test
lret
mov
bound
push
xchg
movsb
add
mov
inc
push
xchg
aas
imul
or
sbb
fsts
cltd
fsubp
cmp
push
adc
jl
pusha
pushf
incl
mov
int
jle
pop
jl
das
or
push
or
enter
data16
gs
pop
int3
xor
movsb
jg
xchg
mov
fs
fiaddl
pop
sbb
xor
mov
xor
push
pop
pop
fs
inc
int3
gs
mov
test
jp
mov
dec
pushf
outsl
lock
mov
and
xor
jp
sbbl
fs
push
shrb
lea
and
and
push
idiv
cmp
test
out
int3
mov
pop
into
ret
stos
inc
stos
adc
es
xor
mov
fbstp
dec
mov
push
je
sbbb
mov
rolb
add
shll
dec
mov
pop
dec
outsl
inc
imul
sbb
push
push
and
add
jbe
je
jge
aaa
add
push
data16
mov
xlat
subl
xor
push
push
mov
loop
xlat
fistpl
mov
and
add
jnp
jg
out
bound
sbb
pop
ss
mov
xchg
in
loope
leave
mov
pop
repnz
scas
sub
mov
mov
fistpll
dec
jb
std
and
pushf
out
test
int3
test
jns
fildll
dec
xchg
mov
sbb
bound
xchg
in
mov
sub
in
xor
xchg
xchg
mov
ss
pushl
scas
inc
xchg
adc
loopne
sahf
sub
dec
in
je
jbe
out
mov
pop
loopne
inc
cmp
shlb
loop
sbb
mov
or
push
imul
or
or
push
lods
insb
mov
pusha
pop
sub
push
add
int
xchg
or
or
jmp
fwait
ds
push
jmp
push
and
xchg
jb
push
pop
sbb
loope
pop
cltd
inc
xor
int3
and
lahf
push
add
rcl
xor
cmpsb
fwait
mov
and
insl
pop
jg
jb
sub
clc
adc
sub
mov
sbb
xlat
cmpsl
inc
pop
test
or
push
add
cmpsl
lods
xlat
add
insl
cmc
out
sbb
dec
rcrb
dec
jns
hlt
xlat
int
cmp
and
int3
pop
jns
jbe
mov
xchg
and
inc
inc
sar
dec
cmc
push
xor
mov
rorb
add
sti
pop
in
dec
int
not
std
push
and
pop
cmp
repnz
pop
push
fs
ds
orb
sbb
xorb
push
pop
ffree
xchg
sbb
repnz
int3
and
jg
aad
or
fiadds
xor
lds
cwtl
sub
or
std
dec
jae
cmpsl
lahf
dec
inc
sbb
mov
push
push
push
je
add
fiaddl
cld
inc
inc
lock
inc
insl
jb
ret
movsb
and
jmp
je
xchg
ds
and
jge,pt
popl
adcl
mov
xchg
xor
popa
and
jb
and
xchg
in
lods
jno
outsb
jno
jecxz
notb
xchg
daa
imul
adc
rcrl
lahf
pop
cmpsb
jo
jl
cltd
xchg
dec
xor
adc
popa
andb
scas
xor
inc
add
xlat
iret
ret
and
push
cld
and
sarl
es
jb
cld
test
bound
fbld
repnz
into
loopne
jmp
mov
and
mov
loop
ljmp
add
cwtl
sub
mov
push
ret
inc
pop
add
add
pop
push
shrb
mov
aad
xor
aad
add
push
fcoms
fcmovu
xchg
call
push
stc
add
std
push
push
sub
inc
int3
lret
es
or
jo
inc
jo
xchg
sub
dec
pop
and
sub
rclb
rcrb
mov
rorb
or
mov
aaa
ds
mov
and
push
push
outsl
jmp
add
add
popa
in
pop
push
cmpsb
add
dec
incb
daa
iret
jmp
push
movsb
iret
pop
lea
std
sahf
xchg
or
sbb
out
xchg
lret
adc
cmp
sbb
xchg
js
ret
bound
pop
into
sbb
out
int3
in
xor
pop
ljmp
mov
dec
push
push
adcl
inc
loopne
jge
insl
pop
aam
sti
jb
xlat
pop
add
push
ja
es
rcll
inc
insb
cli
xchg
adc
push
sti
in
add
shl
push
ss
adc
adc
cli
and
xchg
lea
sub
xchg
jns
mov
adc
test
cmp
pop
cmp
add
jns
push
js
loop
jb
dec
nop
mov
or
mov
mov
sbb
lods
lea
fsubrs
flds
loope
repnz
dec
inc
movsb
inc
pop
sbb
mulb
stc
jae
rclb
out
dec
pop
sbb
popa
xchg
push
rolb
sub
inc
inc
mov
push
lds
into
xor
test
imul
add
je
jnp
mov
mov
xchg
xchg
dec
test
lods
sarb
sar
sbb
dec
mov
test
cmp
push
sub
jmp
aad
sub
mov
out
enter
in
mov
or
mov
jl
sbb
stc
lea
daa
ja
loopne
cmp
repz
add
mov
adc
xlat
cmpsl
psllq
jg,pn
lcall
sub
or
mov
add
outsb
mov
mov
mov
fwait
sub
fwait
inc
subb
sbb
lret
insb
mov
jne
push
push
sbb
push
loop
mulb
pop
movsl
cmp
or
jo
pusha
cmp
rcll
xchg
push
add
bound
out
mov
loop
xor
out
add
xorl
sub
in
add
fadds
dec
push
mov
push
scas
lcall
mov
ds
movsl
arpl
add
sub
test
gs
add
xor
pop
xchg
fildl
into
adc
or
add
sub
push
aad
pop
out
in
inc
and
xor
je
and
in
jne
push
icebp
add
push
xor
out
hlt
or
pusha
out
lods
xchg
movsb
dec
ret
ret
idivl
add
inc
xor
xchg
fstpt
xlat
scas
or
out
lahf
sahf
xor
scas
jb
adc
int3
and
add
repz
fcmovu
add
push
mov
dec
stc
push
mov
out
xor
push
adcl
dec
cmp
lods
sti
inc
out
push
and
add
fstps
inc
dec
icebp
push
in
lret
popf
out
test
sbb
cmc
enter
enter
mov
mov
leave
mov
incb
cld
xlat
loope
or
repz
mov
mov
je
es
scas
loopne
ficomps
dec
jg
ret
xor
xchg
push
cmp
mov
into
push
and
add
mov
dec
jge
flds
lret
pop
inc
mov
jmp
and
and
adc
sbb
push
negl
into
std
jb
pop
lret
adc
shl
addr16
sbb
jge
mov
lods
mov
ds
xor
xor
mov
cltd
xchg
daa
out
mov
and
add
movsb
addb
std
jg
and
push
fadds
out
sbb
aam
push
fistps
rorb
lret
in
sub
div
call
pop
dec
dec
divps
adc
popa
jnp
lret
push
jl
sub
sbb
dec
scas
int
sbb
dec
sbb
rolb
call
inc
pop
dec
mov
push
push
cmpsl
movsb
mov
lock
frstor
ret
or
movsl
jcxz
outsb
cs
cmp
sti
mov
xor
mov
popa
inc
push
xchg
shrb
call
out
mov
and
arpl
shlb
xor
sub
adc
iret
xor
lds
pushf
sub
repz
pop
adc
outsb
out
ret
and
cmp
movsl
push
sbb
dec
cmp
jp
lods
and
pop
push
sbb
adc
sub
or
push
push
push
mov
sbb
jg
dec
js
sub
sub
xchg
push
push
jnp
cmpsb
stc
jno
inc
cmp
add
jo
xchg
repz
push
push
xchg
inc
insb
pop
ja
repnz
sahf
jnp
xor
mov
mov
inc
jo
pop
adc
scas
push
mov
movsb
mov
cld
mov
in
mov
sbb
sub
adc
rorb
mov
adc
inc
mov
pop
stos
inc
testl
mull
xchg
or
lock
sub
outsl
push
lods
cmp
or
push
movsb
pop
rcrb
testl
sbb
xchg
sbb
xor
nop
fsubrp
sub
sti
test
push
popf
push
std
fcomps
ss
stos
pop
mov
mov
insb
and
ljmp
mov
pop
push
mov
test
jmp
and
jo
sbb
les
inc
push
mov
rcl
mov
xor
adc
test
mov
push
mov
aad
xor
xor
jne
pop
mov
cmpl
pop
cmp
xor
icebp
sbb
push
loopne
xorb
sbb
stc
es
inc
movsb
jb
inc
or
push
jae
and
data16
dec
inc
in
xlat
insl
cmp
lods
gs
push
sbb
loope
sub
fisubrl
lds
mov
lret
or
push
add
pop
movsl
les
hlt
popf
mov
dec
pop
push
repnz
js
repz
in
ja
or
sahf
mov
aas
pop
in
mov
add
add
out
sbb
inc
enter
fsubp
sub
pusha
jnp
fsubp
dec
jno
lods
mov
mov
mov
jne
jb
xchg
add
add
cld
mov
test
cs
fistps
loop
or
in
std
pusha
sbb
stos
sbb
sbb
pop
in
imul
add
cmp
mov
mov
sbb
icebp
xchg
xchg
ljmp
test
mov
dec
fadds
mov
sbb
and
lock
gs
pop
sbb
mov
jecxz
mov
mov
ret
ret
out
imul
dec
sub
dec
cmpsl
push
notb
int
cli
mov
cmpsl
pop
sahf
jp
daa
pop
lods
push
add
addr16
adc
dec
fdivrs
fldcw
shr
add
mov
sub
aad
mov
xlat
ja
add
and
scas
ljmp
mov
imul
clc
xor
xchg
popa
adc
iret
fimull
or
mov
push
loopne
push
lods
cld
dec
mov
sub
loop
dec
dec
sub
cmpsb
push
outsl
into
fwait
mov
sub
repnz
test
repnz
push
inc
fstl
adc
jp
mov
mov
repz
jmp
ja
xchg
int3
outsb
pop
push
pop
clc
lret
xchg
jae
test
enter
inc
rcr
xor
fnstenv
rcl
xlat
cmpsl
fwait
add
hlt
pop
lea
mov
sti
ja
push
jle
stos
in
sbb
out
mov
enter
push
xchg
inc
sar
mov
pop
test
nop
xlat
inc
or
xchg
aas
pop
adc
insb
call
dec
pushf
shlb
mov
xor
adc
movsl
cltd
repz
mov
mov
add
cmp
mov
aaa
cmp
cmp
leave
outsb
andb
daa
jecxz
in
add
or
xchg
rorl
and
inc
outsl
imul
push
test
lret
scas
mov
dec
or
clc
or
and
in
arpl
and
xor
push
xchg
outsb
or
cld
and
sbb
inc
lods
loop
jno
lock
cmp
cmp
pop
insl
mov
lret
inc
or
inc
push
subl
movsb
js
sbb
cmp
sbb
sbb
inc
test
cmp
push
adc
ret
sub
push
cmc
test
ja
xor
into
adc
mov
xchg
lret
push
sbb
mov
jg
or
dec
rol
push
mull
xchg
inc
pop
popa
mov
jns
or
lods
jl
rorb
pop
shll
movsl
adc
xor
ficompl
sub
addb
xor
xor
push
je
xor
or
mov
sbb
mov
iret
mov
mov
mov
out
and
sub
scas
xchg
push
push
add
and
cltd
pusha
ror
popa
mov
add
mov
popw
pop
sbbb
mov
cmpsb
add
cmp
int
popf
pop
rcll
xchg
or
push
add
popa
inc
or
inc
add
cmp
push
or
mov
mov
mov
add
dec
add
insb
mov
ret
sbb
inc
mov
xchg
aad
adc
inc
jne
mov
repnz
inc
inc
xor
sub
push
and
sysexit
sbb
cmp
es
xchg
mov
sub
popa
shrl
push
push
iret
add
xor
add
xchg
or
int
jns
in
push
xor
sti
jo
test
xchg
xchg
push
in
push
xor
and
inc
adc
in
pushf
add
xor
push
xor
cs
enter
mov
xchg
pop
shll
jp
mov
aam
imul
enter
sbb
std
add
sub
icebp
xchg
and
mov
push
inc
inc
cli
add
push
jae
in
add
inc
jle
inc
shlb
inc
pop
sbb
mov
mov
arpl
jl
out
outsl
mov
mov
fcmovnu
insl
jp
test
lret
fildll
add
dec
sub
neg
imul
adc
sbb
repnz
jne
mov
and
sub
divb
inc
outsl
les
aad
pusha
dec
rcll
jbe
push
sarb
test
xchg
mov
add
jp
iret
dec
fdivl
and
mov
out
inc
in
flds
out
mov
add
sbb
loopne
cmp
push
push
jle
and
inc
push
mov
ss
dec
adc
or
sbb
leave
or
mov
or
shll
mov
js
adc
adcl
mov
aad
xor
mov
add
or
fisttpll
sub
clc
pop
ret
adc
sahf
push
imul
pusha
ds
cmp
int
mov
js
jg
aad
xor
mov
cmpsl
push
adc
test
test
push
sub
xlat
data16
in
mov
fisubrs
mov
mov
push
cmpsl
iret
test
sub
stos
mov
arpl
inc
addr16
dec
icebp
repnz
rolb
test
cmp
push
add
xor
ja
mov
xchg
rcrb
jnp
jle
movsl
ljmp
ljmp
inc
mov
push
das
mov
nop
push
fcoms
lods
and
mov
xchg
dec
jmp
repnz
test
jmp
xor
lock
cmp
cwtl
push
lods
or
lods
mov
pop
dec
dec
sub
adc
out
cmpsb
es
jl
iret
sub
lret
sbb
notl
ret
das
mov
dec
inc
push
dec
sti
test
dec
jnp
xchg
pop
cmp
enter
cltd
mov
aad
mov
pushf
dec
mov
cmp
pop
push
inc
or
or
aam
bsf
pop
push
aad
imul
mov
sbb
outsl
mov
test
into
cmp
mov
outsl
cmp
sbb
dec
mov
cmp
jg
pop
pop
xor
loope
js
ds
sub
pusha
lcall
hlt
cmp
and
nop
loope
add
adc
insl
pop
ljmp
add
std
mov
dec
sbb
jl
flds
outsb
cmp
addr16
popf
pop
or
sbb
push
cmpsb
pop
int3
out
mov
adc
imul
fcoms
inc
push
addr16
out
loop
jg
aad
repz
add
ret
adc
or
mov
sub
mov
int
ror
ss
out
loope
mov
inc
ljmp
andb
inc
into
fs
out
pop
out
out
add
fdivrs
stos
adc
test
std
out
sbb
xchg
jb
js
pop
mov
adc
fs
aad
mov
adc
pop
imul
fidivrl
shll
push
or
sub
insb
xor
mov
aas
cmc
daa
jnp
enter
dec
sahf
add
sbb
shrl
xchg
outsb
fcmove
popa
jno
mov
jne
popf
mov
das
ret
xchg
ret
dec
imul
data16
xchg
addr16
mov
xchg
jge
cwtl
and
ret
jb
cmpsb
adc
mov
in
outsb
push
dec
data16
adc
push
cmc
lods
add
and
pop
push
xchg
scas
insb
int
dec
mov
leave
cld
xlat
xchg
sbb
inc
xor
int
push
xchg
jnp
ret
aaa
mov
repz
mov
cmp
in
in
and
sbb
or
add
bound
mov
call
pop
mov
cli
int3
mov
mov
adc
pushf
inc
sarl
inc
aas
ja
cmp
mov
xchg
sarl
mov
fcomp
push
insb
pop
hlt
jge
fstp
add
cmp
jno
in
adc
xchg
xchg
sbb
push
mov
ret
in
mov
dec
cmp
test
jecxz
inc
stc
sbb
mov
movsb
mov
sarb
lods
pusha
cs
mov
mov
adc
outsl
xchg
push
xchg
inc
aam
aaa
sub
pop
xchg
sbb
or
gs
andl
or
popf
jne
xor
js
aam
mov
sbb
jo
xchg
sub
je
sahf
aaa
scas
bswap
loope
inc
insb
dec
and
sub
push
push
cmpsl
call
dec
push
adc
mov
pop
push
pop
test
stos
lret
daa
adc
xchg
inc
clc
sahf
popw
xchg
xor
mov
adc
mov
aam
xor
or
out
sbb
imul
shlb
jbe
scas
jne
enter
test
pusha
sbb
push
fstp
popf
imul
ficoms
stc
subl
jbe
mov
fdivrl
pop
sub
jl
sarl
test
lcall
fs
sub
lahf
and
cmp
mov
sub
jno
inc
movsb
js
lods
pop
xchg
or
xlat
lock
xchg
imul
mov
add
adc
pushf
jae
jmp
jge
pop
inc
les
mov
xchg
sub
adc
insl
inc
sbb
push
inc
adc
push
xor
mov
jae
and
adc
inc
lods
lea
sub
xchg
xchg
fcomi
adc
fimull
dec
cmpsb
and
jne
sbb
or
push
mov
and
jno
rolb
mov
push
lods
cmpsb
jecxz
jle
mov
lret
xchg
xchg
xlat
jns
subb
cs
mov
pop
mov
in
cmp
lock
jae
subb
cltd
cmpsb
cld
or
xchg
jp
mov
or
scas
int3
ret
pop
adcl
mov
lea
js
mov
push
stos
gs
cmp
mov
insb
stc
in
shlb
mov
jo
sub
add
sub
sub
mov
xchg
jnp
push
scas
adc
sub
mov
push
stos
jle
cmp
adc
in
movsl
mov
jg
push
and
aas
imul
insb
shll
sbb
sub
int3
pop
inc
xchg
add
mov
mov
inc
jbe
and
adc
dec
into
xchg
mov
push
add
loopne
cs
divb
lock
mov
repnz
popf
xor
push
andb
imul
iret
jle
mov
negl
inc
xchg
js
insl
xchg
test
adc
sbbb
dec
in
inc
inc
mov
enter
push
and
sbb
scas
mov
dec
and
mov
idivl
js
mov
adc
js
cmp
movsb
stc
int3
loope
mov
cltd
clc
jbe
add
lods
mov
rolb
fildl
xor
mov
jle
test
lcall
sbb
inc
loopne
add
mov
leave
pushf
xchg
pusha
test
test
push
inc
pop
testb
fisubrs
in
and
sub
mov
jp
inc
cmp
insb
movsl
vmread
lds
or
pop
xchg
xchg
inc
xor
js
push
jge
fstps
clc
push
add
lahf
mov
cmp
xchg
std
xchg
or
ficoms
icebp
shll
jb
push
pop
add
add
mov
imul
mov
inc
inc
lea
shll
roll
imul
enter
add
insl
jecxz
adc
inc
inc
dec
imul
das
sub
test
or
mov
cmc
lcall
pop
loope
jno
sbb
inc
xor
test
loop
dec
mov
and
mov
mov
cmpsl
push
lods
mov
les
aas
jp
mov
ret
jnp
jl
inc
add
frstor
and
pop
in
or
mov
dec
xchg
xor
popf
out
popf
insl
dec
add
mov
lea
dec
or
mov
sti
xor
and
jbe
scas
sub
mov
test
mov
popa
nop
jae
inc
cs
push
adc
sub
sbb
mov
dec
cmp
loop
clc
inc
or
popa
cmp
jl
addr16
scas
pop
mov
outsb
cmp
sub
ret
mov
pop
and
imul
loopne
jbe
leave
mov
mov
pop
inc
or
adc
xchg
pop
aaa
stos
inc
inc
fcompl
xchg
sbb
mov
stc
mov
jecxz
adc
dec
sbb
and
jns
adc
movsl
shlb
gs
jg
xchg
xchg
inc
movsl
jmp
push
sbb
rorl
mov
les
mov
lods
pop
jl
mov
fstl
push
fstpt
cltd
inc
ret
xchg
xor
mov
aad
jle
push
mov
lcall
push
sub
mov
mov
insb
loope
jg
ss
jge
xlat
jae
in
call
pop
jno
mov
xlat
dec
fs
push
sbbl
mov
pop
ret
sbb
popf
loope
cmp
scas
les
add
lods
inc
xor
sub
aam
je
cmp
jmp
mov
sbb
movsl
dec
incl
dec
cmp
daa
dec
adc
popa
pop
in
fnstcw
fcoml
pinsrw
rclb
scas
clc
pop
hlt
test
ds
fsubrs
repnz
mov
movsl
sbb
mov
int3
push
repz
cmp
adc
xchg
int3
mov
mov
add
xchg
adc
dec
lds
xor
jae
and
outsl
cwtl
dec
int
mov
xchg
jns
sbb
mov
test
dec
push
pop
pop
jae
outsb
lea
pop
insl
insl
das
stc
iret
sbb
mov
std
dec
push
adc
in
out
cld
jmp
shlb
mov
pop
fwait
gs
xor
and
aaa
dec
add
pop
insl
idiv
push
das
icebp
push
inc
rol
add
adc
aad
xor
xchg
pop
dec
lods
xorl
out
leave
hlt
rcll
mov
es
sbb
cmp
jb
and
push
movsb
popf
xor
push
shll
cmp
cs
pop
popaw
push
xchg
sub
daa
hlt
ret
xchg
lret
imul
test
cmp
mov
jecxz
popf
xchg
btr
bound
mov
movl
fimuls
cld
lea
pop
test
xorl
insl
jecxz
pop
dec
pop
and
fwait
lock
lock
fsubrs
mov
cld
jno
sub
loop
cli
shl
cmp
pop
ss
ds
cld
into
test
inc
imul
cmp
dec
sti
scas
xor
adc
iret
jns
movsl
adc
sbb
cwtl
mov
test
xchg
mov
rclb
or
je
loopne
cmp
dec
loop
cmp
repz
inc
inc
std
jge
push
repz
sub
cmpsl
stos
cmp
rolb
incl
sbb
sarb
lods
mov
mov
ja
lods
add
ljmp
insb
jg
pop
mov
push
xchg
mov
add
push
and
mov
sub
push
imul
xchg
ss
push
mov
jg
mov
cmpsl
sbb
pusha
fcoms
mov
stos
pop
aaa
lods
call
inc
sub
jno
jg
push
loopne
sbb
dec
int3
sbb
jmp
xor
push
fmul
cld
ret
mov
das
sbb
std
insb
xchg
and
push
push
aaa
adc
adc
fnstcw
mov
aas
add
push
push
and
inc
movsl
add
sbb
fdivp
data16
cmpsl
lds
insl
mov
mov
mov
adc
fsubrs
mov
into
mov
push
movsb
ja
in
stc
flds
or
add
call
packsswb
push
sahf
xchg
add
ret
neg
add
mov
fsubrl
ja
pushf
mov
inc
js
ret
lea
pop
das
in
and
add
popa
addl
test
mov
dec
pusha
inc
push
lret
pop
xor
adcl
jno
push
jmp
mov
and
jns
out
sbb
jp
fisttps
mov
adcb
out
inc
hlt
shrl
les
loopne
in
cmpb
xchg
xchg
cmp
out
inc
mov
or
hlt
mov
push
adc
int3
jno
cmp
dec
pop
out
mov
xchg
orl
les
mov
iret
add
jnp
push
roll
int
and
add
mov
pop
nop
lret
jp
add
rep
mov
mov
jg
je
adc
or
jecxz
fcmovnbe
pop
loopne
adc
add
ss
cs
mov
xor
ret
test
adc
mov
in
add
xchg
mov
rclb
test
ret
push
cmp
dec
incl
push
or
inc
test
aam
mov
mov
bound
mov
faddp
adc
push
and
int
mov
dec
jns
lods
lcall
int
out
jbe
lahf
xorb
call
jo
mov
xor
mov
out
stos
xlat
and
jg
xchg
sbb
insl
test
cmpb
aaa
mov
add
rclb
outsl
arpl
mov
aas
mov
test
mov
ret
cwtl
jg
add
ja
inc
insl
sbb
mov
inc
loop
mov
fs
dec
jb
cs
cmp
cmp
loopne
inc
in
popf
pop
xchg
and
mov
rcl
enter
or
jp
frstor
repz
movsl
lods
jmp
jne
bound
aas
in
push
inc
or
pop
movsl
leave
lods
pop
lods
and
cmp
mov
lret
adc
jne
add
add
aas
pushf
mov
adc
cmp
and
inc
int3
adc
push
inc
test
gs
daa
xchg
pop
icebp
les
pop
fs
insl
outsb
xchg
jne
push
jge
loopne
xchg
push
lcall
ljmp
cltd
push
sub
mov
ljmp
iret
sub
push
push
pop
pop
mov
mov
add
jge
push
mov
push
aad
mov
lds
inc
xchg
pop
jbe
adc
inc
inc
inc
rorb
ds
adc
test
adc
fnsave
clc
mov
sub
stos
xor
dec
imul
imul
lret
mov
enter
mov
lret
negb
je
xchg
jo
pop
ljmp
leave
mov
in
fsubp
cltd
insl
repz
xchg
clc
ja
addr16
cmpsl
push
xor
testl
sbb
jecxz
or
imul
aad
push
sbb
rcl
aam
sub
in
inc
mov
push
jb
sub
jo
adc
inc
dec
mov
mov
or
jnp
int3
inc
adc
in
outsl
push
inc
ds
loope
or
shl
scas
mov
lret
adc
adc
mov
subl
mov
rorl
imul
test
sub
aad
into
mov
shlb
out
addl
adc
pop
hlt
in
mov
pop
test
loopne
push
ret
cld
sar
mov
pop
pop
add
clc
mov
aad
xlat
inc
cmp
leave
inc
sahf
lods
test
sub
lahf
xor
loope
ret
push
loop
ret
adc
jns
setl
sbb
xchg
fsts
push
outsl
movsl
lods
scas
popf
in
inc
fiadds
pop
les
popf
repnz
sbb
movsl
test
inc
aad
dec
push
popl
sbb
stc
gs
lods
dec
push
test
rcrb
sbb
push
enter
movsl
imul
test
popf
shlb
lret
mov
push
in
cmpsb
cwtl
xchg
and
jle
loope
repz
movsl
xor
mov
fcmovbe
ja
cmp
xchg
xor
pop
sbb
js
loopne
add
xchg
ss
movsl
add
jmp
push
jnp
add
mov
outsl
mov
mov
cmp
xor
push
sub
rolb
push
mov
mov
dec
idivb
enter
inc
push
xor
jl
dec
or
shlb
pop
mov
in
mov
cmpsb
test
pop
xchg
inc
cld
les
js
call
add
or
sub
jmp
into
out
jg
jae
fwait
and
je
fldcw
das
jmp
mov
or
aas
aad
ljmp
or
mov
lcall
jg
sbb
or
orb
push
dec
push
mov
inc
pop
sbb
push
jmp
xchg
gs
xchg
xor
aaa
lods
pop
inc
lret
nop
push
iret
movsb
sbb
ds
andb
inc
sbb
mov
adc
lcall
movsb
sbb
jl
mov
push
fists
pop
adc
test
jno
adc
test
push
push
sbb
xor
rolb
faddl
scas
ret
outsb
and
ljmp
mov
insb
movhps
mov
mov
das
pop
xorl
call
inc
jmp
mov
push
jb
cmpsb
pop
lret
mov
jne
mov
out
call
inc
shll
mov
xchg
pushf
in
and
sub
lret
push
mov
dec
and
sbb
outsb
pop
mov
ret
sbb
mov
xchg
mov
xor
or
pop
fbld
pushf
cmc
popf
scas
mov
loop
xchg
lods
in
call
mov
int
jno
xchg
paddb
mov
les
and
pop
lea
push
adc
mov
mov
imul
inc
dec
jo
fcom
cmpsl
test
push
push
rorl
lahf
or
loop
shrb
inc
mov
xor
es
pop
stos
fnstsw
sahf
shll
loop
jbe
out
in
xchg
nop
cwtl
xor
adc
sbb
mov
pop
subl
mov
std
loop
mov
pop
or
pop
aam
jno
pop
or
mov
cwtl
addb
inc
popl
pop
jnp
repnz
in
test
push
cmpl
mov
in
addr16
movsb
gs
adc
or
jecxz
imul
and
mov
repnz
les
in
hlt
pop
aaa
movsl
mov
outsb
cmc
lds
pop
pop
iret
jno
mov
or
add
mov
test
aaa
aam
outsl
std
and
push
mov
or
lea
xor
test
jae
rol
pop
jbe
xchg
jo
sub
cmp
fldt
mov
jns
roll
rclb
push
xchg
repz
loop
push
nop
pushf
jecxz
cli
xor
jb
cmc
clc
adc
push
out
jle
sbb
sbbl
mov
push
jge
andb
lcall
add
push
loope
xchg
xchg
adc
pushf
mov
mov
in
push
adc
jl
pop
mov
push
xchg
sbb
cltd
pop
pop
push
xlat
or
sub
std
or
ja
in
adc
cmp
out
mov
or
ret
mov
dec
ljmp
lret
std
test
sbb
stos
popf
push
dec
mov
or
inc
jnp
push
push
xor
sbb
insb
in
xor
xchg
std
xlat
mov
cli
orl
xchg
dec
mov
or
mov
ret
or
xchg
pop
push
cs
sub
xor
push
into
jle
add
movsb
loope
jl
test
mov
adc
mov
mov
stc
cmp
idivb
iret
push
sbb
and
inc
cmpsb
call
bts
and
fmull
mov
pop
dec
or
mov
insl
pop
and
mov
and
jae
sahf
shr
xor
fs
repnz
mov
lcall
jne
push
ja
pop
pop
inc
gs
push
cmpb
push
das
leave
out
mov
scas
xchg
loopne
fmuls
dec
stc
dec
xchg
push
ror
jbe
sahf
inc
fistps
iret
out
mov
fwait
cmpsl
pop
pop
and
andnps
ret
xchg
shll
fbld
jmp
push
jg
add
dec
xchg
jl
imul
fcoml
pop
movsb
in
jns
cli
cmpsl
mov
shlb
xchg
fidivl
test
lods
mov
into
lret
pop
arpl
adc
cmp
add
mov
cltd
add
mov
aad
mov
int
xchg
add
ja
jno
sbb
call
cmc
or
pop
and
repnz
out
aas
test
add
xchg
sahf
mov
pop
fisttpl
sub
xchg
xchg
sbb
subb
negl
add
bound
or
gs
lods
dec
add
ret
repnz
push
out
sbb
mov
outsl
dec
or
and
test
inc
or
inc
xlat
sub
jns
pop
outsl
repnz
cmp
dec
xchg
int
push
jnp
jmp
mov
int
bound
inc
out
mov
mov
or
fwait
movsl
push
push
cmp
ficoml
lods
adc
scas
inc
push
mov
stos
int3
and
pop
sub
ret
xor
hlt
xorl
xor
popf
inc
popf
loopne
pop
call
lret
mov
roll
sbb
add
repnz
es
in
adc
sar
push
pusha
inc
inc
test
dec
cmc
andl
cltd
les
and
je
in
inc
sub
pop
jp
jnp
enter
xchg
jle
xchg
jne
or
imul
ss
ret
mov
mov
inc
mov
loop
xchg
pop
outsb
das
mov
dec
push
push
dec
pop
sbb
xor
inc
sbb
xchg
push
or
sbb
adc
out
pushf
mov
pop
pop
popf
inc
jle
dec
enter
add
jns
mov
mulb
push
mov
adc
call
andb
sub
sbb
jl
out
xor
popl
jmp
dec
adc
ja
mov
sbb
dec
mov
sub
sbb
and
and
popa
mov
pop
ret
and
into
xchg
rcrb
adc
or
push
add
xor
jbe
sbb
pop
stc
pushf
push
xchg
clc
jg
pop
pop
xchg
cmp
in
fsts
in
sbb
test
stos
punpcklwd
pop
aaa
ret
jp
and
data16
hlt
fsubl
imul
iret
mov
push
jg
pusha
movsl
push
stc
pop
jp
xor
int
nop
rorb
js
ss
sbb
xchg
xor
int
jnp
xchg
call
inc
ljmp
sub
stos
lods
push
stos
loope
xchg
xchg
jnp
fimuls
and
xchg
test
pop
jo
inc
clc
imul
push
xchg
pop
sbb
xor
xchg
sbb
ljmp
pop
xlat
mov
sbb
jge
fwait
pop
inc
add
ds
inc
dec
jp
mov
loopne
int3
rcll
jecxz
aam
pop
je
sbb
xchg
push
push
jno
push
add
in
rcrl
add
cltd
or
icebp
cli
ret
ds
mov
ds
nop
cmovae
xchg
cmp
xchg
sub
fldcw
ret
add
mov
arpl
addr16
aaa
add
insl
push
mov
fldenv
fstpt
out
lods
js
lds
sahf
leave
sub
mov
pop
jl
sbb
mov
inc
adcl
aaa
mov
sbb
and
sarl
decb
lods
rorl
loop
icebp
cmp
pop
inc
cld
mov
ss
sbbl
aas
int
fdivrs
pop
mov
add
in
push
push
es
insl
add
in
pop
inc
mov
mov
mov
das
roll
movsb
mov
fcompl
mov
lds
push
ss
jno
lret
lcall
xchg
jl
in
xchg
cmpsl
fcmovnu
les
scas
sub
xor
jecxz
push
and
scas
and
xchg
cld
and
sbb
mov
mov
xchg
pop
mov
and
and
xchg
mov
add
xor
cmc
clc
pop
mov
cmp
dec
xchg
cld
aad
mov
mov
test
cmpl
popf
dec
add
add
call
test
jbe
or
and
pop
inc
mov
popa
inc
sarl
xor
cwtl
ret
icebp
xor
stc
icebp
add
mov
mov
js
dec
std
movsb
stos
and
push
in
mov
frstor
stos
inc
jnp
insl
jne
addb
mov
push
notb
std
ja
stc
mov
cmp
cmp
xchg
sbb
lret
ret
orb
sbb
ja
cwtl
pushf
jl
imul
je
gs
int
out
gs
dec
movsl
mov
shlb
lret
fldt
pop
arpl
lea
mov
sbbl
sbb
dec
or
cmp
add
or
and
dec
idiv
mov
push
movl
xchg
adc
mov
inc
mov
popf
insl
dec
sbb
add
mov
mov
jge
dec
scas
inc
test
pop
mov
cld
in
repz
out
or
pop
dec
mov
les
jae
xor
cmpsl
adc
inc
sub
ficoms
popa
jmp
adcl
lea
xor
dec
out
sahf
mov
les
jmp
jl
in
add
jge
mov
out
clc
mov
ds
or
pop
lret
imul
adc
inc
inc
jp
push
inc
sbb
in
imul
mov
negl
and
sub
pop
dec
clc
out
inc
add
ss
fsincos
mov
dec
test
mov
inc
add
clc
xor
pop
das
pop
fmul
add
sub
xchg
add
adc
mov
flds
push
jge
mov
xchg
cmp
xchg
loop
in
mov
movsb
jl
xchg
xor
sti
and
loop
mov
pextrw
fldcw
dec
xchg
mov
inc
mov
jo
sub
mov
faddp
imul
xchg
bound
jbe
scas
cld
fnstsw
sbbb
hlt
popf
cmp
push
and
addr16
or
adc
xor
mov
xchg
mov
pop
aas
mov
jl
xchg
js
mov
pop
and
into
xchg
cmpsb
dec
addr16
jo
dec
sbb
popa
sub
xchg
push
rcll
pop
push
test
in
adc
adc
mov
imul
call
ss
pusha
lock
in
and
jo
cmpsl
stc
sub
fs
inc
fsubrl
mov
shl
xor
push
add
sbb
mov
mov
push
addl
mov
xchg
out
jne
fld
or
shl
out
mov
or
inc
cmp
adc
mov
push
subl
dec
stos
push
subb
ret
cli
ljmp
xchg
inc
mov
xchg
aam
mov
out
xlat
add
or
mov
pop
testb
flds
rcl
jmp
testl
jl
stc
inc
inc
lret
aam
xchg
orl
xor
sbb
mov
pop
and
dec
mov
jne
sti
push
out
or
mov
sub
cmp
jmp
cmp
lahf
hlt
or
lock
mov
outsl
incb
pop
adc
xlat
aad
xor
movsl
or
mov
test
push
sbb
and
into
push
jge
cmp
and
iret
push
mov
jae
or
loop
cmp
mov
fisubrl
aaa
fldenv
mov
out
out
jo
inc
cmp
dec
dec
fwait
mov
dec
out
sub
in
and
lcall
adcb
popa
cs
mov
cmp
cmpxchg
ljmp
movsb
fcomps
repz
scas
rclb
add
incl
mov
in
in
add
pop
xchg
dec
aas
adc
sbb
mov
cmp
and
mov
insb
into
inc
push
jge
lcall
mov
push
and
or
pop
popa
imul
sub
lods
or
sub
xchg
mov
mov
push
mov
jmp
in
roll
xlat
neg
jg
ljmp
mov
pusha
inc
xchg
pop
data16
xchg
mov
lock
sbb
loopne
lock
shll
das
xchg
add
xchg
mov
imul
call
adc
push
sub
repz
or
mov
test
sub
add
dec
orb
xor
jne
xor
xor
jae
jnp
imul
jo
aaa
add
mov
mov
popa
leave
mov
mov
xor
cmp
push
xchg
add
mov
dec
jecxz
rclb
xchg
add
mov
sti
lea
mov
int3
scas
fdiv
ljmp
iret
lds
movsl
sbb
add
ds
pop
add
mov
scas
mov
jge
in
cmp
out
push
repz
das
adc
pushf
pop
shrl
mov
adc
pop
sahf
mov
pusha
mov
stos
das
sbb
outsb
xor
js
sub
jns
sbb
sbb
cmp
cmp
sahf
cmp
addl
fs
leave
pop
jmp
std
loop
sub
shlb
fdivs
dec
jmp
xor
mov
outsb
mov
inc
push
sub
data16
leave
stos
mov
js
adc
andb
mov
sub
cli
sbb
movsb
and
cmp
dec
xchg
ds
outsl
mov
mov
mov
mov
or
loope
mov
lret
pop
nop
and
les
fidivl
and
mov
xor
pop
call
push
shrb
lods
jo
test
pusha
iretw
adc
sub
out
rcll
pop
sub
mov
cli
das
cmp
lcall
push
xchg
push
or
inc
or
hlt
int3
aam
xchg
fsubrl
sbb
push
adc
mov
stc
pop
inc
fbstp
ds
out
test
mov
push
mul
ja
ja
mov
stos
and
add
cmp
dec
sbb
insl
loopne
dec
sub
rorb
cmp
mov
aaa
or
fisubs
scas
lcall
mov
les
or
push
adc
imul
inc
dec
movsl
add
sbb
add
adc
mov
pop
jl
inc
xor
or
inc
dec
mov
lods
sub
movsl
xchg
adcb
gs
mov
cmpl
adc
loop
adc
in
pusha
cld
into
cmc
cmp
icebp
push
jno
icebp
lock
aad
adc
ljmp
inc
test
jns
nop
mov
push
push
fwait
test
icebp
mov
or
add
imul
loop
adc
in
jmp
cmp
lret
add
mov
popa
inc
inc
sub
lret
jle
rcrb
cmp
bound
bound
dec
movsl
or
xchg
inc
fs
mov
mov
pop
scas
xor
or
dec
push
dec
xor
mov
xor
je
cmp
or
add
addl
jle
dec
les
std
cmp
mov
shrb
push
xchg
add
sbb
mov
pop
cwtl
xor
sub
call
pop
pop
jge
test
cmp
xorl
out
js
pop
mov
mov
jmp
nop
sbb
int3
cmpsb
je
pop
adc
jmp
xchg
xchg
xor
bound
fisttpl
or
push
je
sub
cwtl
ret
into
nop
ret
sub
push
sbb
lret
push
pop
js
sub
jge
jg
jl
pop
jl
jle
std
jle
and
and
mov
xchg
or
ljmp
pop
add
mov
jbe
rcr
push
dec
pop
cld
sub
xor
inc
int
nop
jnp
je
scas
and
popf
sbb
mov
out
lock
dec
mov
stos
ret
mov
je
test
and
test
push
out
mov
jl
jno
pop
or
jns
pop
repnz
xchg
jl
outsl
pop
popf
xor
cmpl
push
xchg
sbb
movsl
rclb
out
xor
xchg
pop
jmp
loop
jge
outsb
mov
pusha
inc
cltd
sbb
cmp
dec
movsl
ficompl
lock
sbb
push
xchg
push
stos
in
js
das
mov
test
repnz
arpl
fmull
fmull
sahf
sub
mov
jle
dec
dec
test
ret
mov
jb
clc
lcall
faddl
enter
leave
gs
jnp
lea
xorb
and
jo
ss
nop
mov
clc
out
mov
adc
cmp
repz
shrb
addr16
into
popf
popa
mov
ret
lods
sub
cwtl
icebp
and
jp
jge
not
xchg
push
or
jp
mov
mov
subb
sbb
in
rcrb
gs
test
dec
dec
mov
push
fstpl
ficompl
sbb
mov
dec
ss
out
lcall
jo
sahf
and
xchg
cld
mov
mov
aad
push
jmp
push
cmp
lahf
cmpsb
mov
lods
dec
sub
push
scas
mov
dec
aad
loope
cmp
fucomi
testb
stc
jb
jecxz
mov
mov
dec
outsb
jnp
xchg
xchg
add
adc
call
jle
sub
push
and
fs
inc
and
hlt
inc
mov
cmp
cli
mov
pop
pop
inc
and
movsb
push
out
test
mov
das
or
cmp
je
popa
sub
dec
push
icebp
cmc
push
les
jbe
cs
int3
test
in
mov
loop
das
xor
ficomps
call
ja
jle
xor
mov
add
cmp
add
xor
jp
mov
andb
jbe
loope
insl
fbld
fistpll
les
mov
aam
push
add
jmp
ret
or
in
inc
xchg
sahf
stc
out
adc
add
lcall
inc
ror
jae
stc
mov
neg
outsl
lods
ret
testl
xor
test
jle
inc
stc
ss
out
sbb
call
push
sbb
jg
add
xchg
xchg
mov
mov
mov
pop
xchg
push
pop
loopne
dec
xchg
or
daa
and
jmp
xchg
add
cmp
jo
jno
push
rcl
xorl
shll
mov
sub
loope
call
test
es
add
fldl
sub
sub
test
negl
sub
mov
subl
xchg
test
lret
add
imul
jecxz
out
scas
pop
jb
inc
int3
shrb
mov
enter
mov
jae
orb
dec
and
lret
add
jmp
adc
adc
mov
mov
xchg
loop
xchg
push
pop
xor
daa
cmp
adc
push
mov
pushf
inc
rclb
or
fdivl
cmp
ficomps
adc
bswap
jb
adc
sarb
push
sbb
fnsave
pop
int
je
fisubl
pusha
jnp
xor
fwait
sub
mov
fisttpl
nop
add
sbb
scas
sti
mov
nop
test
or
bound
cld
in
xchg
dec
js
cmp
adc
mov
ss
cmpsl
fsts
mov
and
nop
loope
mov
inc
sti
dec
mov
iret
or
in
push
jo
and
je
decb
loope
cmp
in
xor
fildl
stc
xchg
mov
mov
pop
int
mov
out
pop
mov
repz
lea
insb
adc
mov
xlat
test
lds
ljmp
or
push
pop
call
andb
movsl
dec
or
mov
movsb
imul
cwtl
lods
movsb
test
push
in
hlt
and
ret
jl
pop
sbb
inc
xor
pop
ja
pop
push
imul
mov
gs
pop
sub
or
jbe
frstor
push
aas
and
ja
push
dec
sbb
cmpsb
jg
ret
or
add
mov
mov
lds
lods
lock
cmp
ret
nop
lds
mov
stos
xor
pop
loope
ss
hlt
fwait
daa
aam
movsl
mov
and
mov
mov
jg
sarl
adc
cmc
xchg
xor
popf
insl
outsl
repz
adc
std
aam
or
mov
shl
and
scas
and
xchg
lcall
mov
mov
outsl
lea
jge
dec
xchg
jle
adc
test
xlat
push
push
push
or
mov
add
xchg
push
or
data16
call
lds
les
mov
dec
adc
and
pop
jecxz
pop
pop
push
xchg
mov
repz
notb
orl
lock
xlat
sub
lods
cltd
sbb
sbb
js
sub
and
push
rcll
ret
mov
rcrb
incb
dec
insb
enter
xchg
push
lods
mov
pop
sti
insb
cmp
mov
sub
push
cmpsb
in
xchg
mov
mov
xor
dec
dec
pop
cmpsb
push
pop
repnz
push
mov
neg
mov
sti
pop
pop
xchg
les
adc
pusha
out
ljmp
mov
cwtl
jne
sub
pop
push
gs
adc
and
imul
dec
xchg
mov
repnz
movsl
movsb
insb
lcall
hlt
out
or
aas
xchg
cwtl
jbe
call
push
dec
cli
xchg
lcall
stos
sbb
lret
out
int3
add
testl
mov
int
faddp
mov
inc
mov
mov
cltd
repnz
cltd
push
gs
pop
shrb
push
jo
in
fcoms
mov
sub
pop
push
call
xchg
xor
dec
inc
push
insl
fldenv
push
pusha
dec
int3
lcall
lock
and
fs
jle
pop
call
cli
xchg
add
cmp
fwait
call
sub
pop
push
jne
mov
sbb
ss
cld
sbb
or
fs
adc
mov
pop
mov
outsb
xor
sbb
mov
mov
sub
test
repz
insl
push
pop
pop
sbb
icebp
sbb
inc
dec
jae
or
lcall
xchg
cmp
and
add
jb
dec
mov
mov
aad
adc
shrl
pop
push
arpl
pushf
cmp
shlb
call
add
rclb
jle
cld
in
and
pop
mov
shrl
es
xor
sti
insb
les
xchg
int3
cmp
inc
dec
sub
adc
insb
sbb
or
popf
loop
bound
fildl
int3
imull
aad
mov
mov
dec
movsb
dec
mov
mov
inc
xchg
pushf
pop
pop
adc
and
les
xchg
es
test
mov
jmp
and
scas
leave
xchg
xchg
xor
mov
test
out
insb
mov
iret
sub
jb
pop
push
gs
mov
lods
jp
inc
movsl
jbe
push
or
xchg
rcl
xchg
clc
das
inc
jmp
sub
jo
inc
sub
and
mov
adc
push
daa
ror
rorb
sub
cmp
call
cs
cwtl
pop
adc
mov
or
imul
dec
and
ret
dec
adcl
mov
inc
sub
mov
stos
fldl
aad
xchg
cmp
je
xchg
adc
std
and
nop
call
mov
jns
sub
xchg
push
outsl
icebp
mov
dec
mov
jns
or
je
xor
or
inc
shll
adc
jo
dec
xor
scas
pand
mov
mov
adc
and
scas
cmpsl
mov
rcrb
xchg
or
mov
sbb
pop
mov
mov
push
lock
xor
ror
fistpll
dec
and
xor
pop
loopne
and
sbb
mov
dec
inc
cwtl
inc
mov
mov
loop
dec
enter
stc
xchg
adc
js
inc
mov
shll
push
mov
arpl
and
scas
sbb
jmp
jno
lods
sbb
scas
loop
inc
adc
lret
enter
and
stos
fildll
sub
inc
push
sbb
mov
popa
lds
dec
pop
jnp
js
jne
lds
ja
ja
aam
in
jae
dec
inc
xor
mov
mov
stc
sub
xor
cmp
imul
sahf
jecxz
xchg
jne
pushw
in
lea
jp
je
cld
arpl
out
lret
fs
mov
pop
out
mov
inc
repz
sbb
xchg
dec
mov
xor
mov
inc
push
sub
jg
or
ds
pop
mov
fstpt
cld
push
nop
or
mov
sbb
enter
ficoms
test
dec
jge
mov
sarl
jl
push
mov
or
jp
sbb
into
and
push
push
in
gs
xchg
sub
mov
jle,pt
xchg
enter
mov
ja
fwait
ds
dec
cwtl
shll
add
push
mov
cmpsl
mov
inc
push
mov
sub
xor
clc
push
repnz
mov
inc
xor
mov
icebp
daa
xchg
add
lcall
or
into
int
xor
ret
add
xchg
push
lds
push
stos
lret
repz
lea
mov
mov
inc
test
inc
stos
lods
lods
bound
mov
shlb
xchg
mov
imul
test
cmpsl
ret
dec
xlat
push
xchg
mov
and
out
or
adc
ficoms
adc
mov
hlt
ss
mov
or
lods
aas
jae
stc
and
mov
nop
sbb
pop
aam
sarb
lock
lea
out
or
es
fs
pop
mov
fucomp
nop
pop
dec
push
lahf
xchg
repz
or
test
push
xchg
loope
mov
mov
xor
icebp
inc
imul
or
clc
xor
fwait
xor
adc
cs
mov
pop
in
xor
pop
insb
adc
test
xor
inc
push
xchg
lret
add
je
xchg
jmp
pop
loopne
pop
or
lods
dec
es
jmp
cli
lahf
cmp
arpl
out
es
mov
push
icebp
mov
push
or
and
jg
js
insb
inc
sub
rclb
fisttpl
jle
gs
mov
sub
jns
sbb
fcmovb
mov
cmp
aam
fwait
xchg
sbb
dec
mov
test
jne
mov
stos
and
jecxz
iret
add
or
xchg
dec
pop
and
mov
sbb
inc
adc
dec
out
insl
in
mov
in
mov
cwtl
mov
push
push
aad
hlt
nop
into
in
add
loop
stos
test
dec
mov
inc
jne
mov
cmpsl
int
push
lcall
fidivl
loopne
sbb
inc
les
mov
ljmp
sbb
sub
ret
cwtl
ljmp
sub
lret
fldl
jb
mov
out
fwait
ds
sbb
mov
xor
leave
push
pushf
icebp
dec
fisttpl
push
mov
shrb
movsb
imul
data16
mov
out
inc
push
mov
ret
ds
and
and
or
in
sarb
es
mov
mov
shlb
adc
jne
lods
mov
out
xchg
or
pop
loope
fwait
cmpsl
daa
jle
pusha
add
scas
and
inc
insb
push
dec
fimuls
or
inc
ljmp
cmp
int
or
dec
xor
pushf
pop
in
jg
call
shlb
idivb
jb
xor
js
jecxz
pop
dec
or
pop
dec
pop
add
adc
or
test
dec
mov
add
pop
adc
ret
mov
mov
lods
push
jb
xor
mov
jne
dec
jmp
enter
jmp
jno
xor
ljmp
cmc
xchg
test
and
daa
sahf
add
pop
xchg
in
jmp
pop
lods
jmp
mov
hlt
test
setl
enter
jae
xor
fstpt
cmp
or
in
rcl
push
aad
stc
cmc
push
xor
xchg
enterw
xchg
dec
cmp
and
xor
cmp
aaa
push
xlat
test
imul
jbe
jne
add
sti
push
sub
xchg
aad
repz
jb
lret
stos
lea
xor
test
into
xchg
add
movsl
shrl
scas
or
and
lock
ds
jecxz
jl
adc
xchg
repz
call
mov
ja
pop
fwait
lods
nop
mov
popa
mov
mov
fiaddl
into
lret
sarb
fdivr
rcrl
dec
lods
data16
addr16
sbb
xchg
sub
push
push
popf
hlt
mov
lret
enter
mov
pop
mov
mov
cmpsb
xor
fcoml
stos
bound
cmp
cld
arpl
shlb
testl
add
out
adc
pop
xchg
dec
add
jle
push
xchg
adc
push
lret
adc
inc
push
jno
mov
push
jno
xchg
mov
cmpb
and
mov
mov
pop
mov
jb
scas
jbe
push
cltd
shlb
lret
les
test
pop
loop
sbb
sub
pusha
push
lods
pusha
pop
jae
push
jo
sub
cltd
movl
push
testl
xchg
mov
jnp
shll
pop
jne
fidivrl
and
mov
movsb
mov
fwait
pop
das
cmp
jl
lret
or
adc
mov
xchg
xor
mov
and
cmp
add
mov
jg
add
dec
dec
xchg
sbb
jmp
add
mov
sub
scas
mov
je
pop
push
sbb
dec
jmp
cltd
outsl
dec
cmp
in
test
leave
sub
rcrb
xor
bnd
call
daa
clc
test
fs
addb
mov
loop
fcmovbe
fimuls
ljmp
add
popa
push
stos
roll
roll
dec
pop
sub
aaa
mov
push
pop
push
dec
repnz
xchg
fdivrl
test
cwtl
stos
xorb
bnd
jo
pop
mov
ss
lock
flds
push
inc
push
sbb
mov
xorb
stc
fldl2t
or
insl
pop
inc
jge
sbb
in
shrb
movsl
mov
xor
lcall
sbb
sbb
pop
test
rorb
stc
pop
ljmp
popa
jg
lret
jae
pop
out
push
lds
data16
pop
adc
fimull
add
adc
push
push
adc
mov
push
pop
jb
sub
lcall
sub
bound
ja
push
inc
not
testb
int
inc
pushl
clc
jle
or
mulb
cwtl
subl
rolb
push
popa
adc
pop
pop
loopne
cld
fstpl
mov
xchg
movsb
out
and
lods
xor
sbb
inc
std
push
mov
ds
popf
mov
cs
andb
pop
xor
daa
movsb
rorb
dec
sub
or
lcall
dec
inc
std
loopne
cmpsb
xor
scas
lds
popf
fwait
stos
inc
fcomi
cmp
push
popa
cmp
push
icebp
jecxz
add
loope
subb
mov
and
in
mov
mov
inc
arpl
lahf
jb
push
movsl
popf
int3
mov
push
neg
cmp
cmp
xor
insb
jge
pop
jbe
mov
sub
sbb
roll
in
jp
pop
add
inc
repz
orb
xor
icebp
mov
or
repz
inc
xchg
dec
inc
ficompl
xchg
mov
inc
out
nop
cltd
test
rcll
inc
and
repz
sbb
push
xor
popf
mov
int
inc
ss
adc
dec
js
into
sub
mov
cmp
sbb
ficoml
loope
push
stos
mov
add
and
mov
mov
xchg
iret
lea
sbb
fistl
push
adc
iret
push
hlt
push
data16
imul
push
cmp
cmp
or
pop
lcall
cwtl
mov
xchg
negl
mov
mov
popa
pop
or
inc
mov
xor
out
out
mov
push
sub
cmpsb
jae
jb
ret
mov
aam
jno
movsb
movsl
cmp
xor
mov
nop
sub
and
loope
pushf
mov
ja
addr16
or
in
das
jle
jbe
addb
push
lea
pop
sbb
cmp
cmpsl
cltd
jmp
cmp
loope
cwtl
mov
mov
test
jae
pop
mov
shll
lods
rcl
sbb
inc
mov
add
push
add
mov
mov
imul
dec
pop
adc
add
ja
mov
repz
sarl
das
cli
fsubp
push
xor
ja
loopne
inc
icebp
xor
stos
jl
pop
lock
mov
std
adc
je
sahf
lahf
push
cmc
cwtl
inc
mov
aad
je
movsb
popf
pop
mov
mov
add
jb
ljmp
lahf
fildll
in
test
rcl
fcoms
mov
pop
leave
dec
iret
fneni(8087
mov
js
imul
imul
pop
mov
adc
mov
mov
jge
or
clc
cld
and
adc
inc
dec
and
cmc
mov
mov
xor
cltd
fcom
add
jecxz
icebp
push
cwtl
xchg
add
ret
add
rcr
push
cmp
mov
xorl
jle
mov
bound
mov
mov
ljmp
movsl
popf
call
pusha
jae
inc
mov
sub
and
mov
int
cmpl
push
leave
inc
je
push
sbb
icebp
or
cwtl
outsb
lock
dec
pop
loope
mov
pop
pop
test
or
fucomip
imul
xchg
fwait
xor
mov
sub
and
rcl
mov
ds
stos
addr16
imul
pop
sbb
clflush
mov
testl
js
ret
sbb
je
jmp
lcall
and
xor
mov
pop
inc
push
mov
pop
fistl
and
popa
xchg
adc
mov
jge
jbe
ret
sub
push
fimuls
push
inc
ds
jp
sub
mov
cmpsl
push
mov
out
pop
xorl
mov
lahf
push
xchg
lds
xorb
adc
scas
pop
inc
lret
cmp
daa
pop
add
sub
jp
pop
and
mov
xor
cs
into
add
mov
shlb
xor
xor
jp
jne
lcall
lret
push
cli
push
in
jbe
mov
out
add
adc
cwtl
mov
bound
dec
jp
das
xchg
int
mov
in
xchg
inc
dec
xor
dec
cmpsl
push
nop
pop
fdivrl
adc
inc
mov
dec
jo
je
stc
repnz
lds
and
and
repnz
lret
stos
divl
xor
mov
stos
and
cmc
aaa
sbb
in
lods
mov
jnp
mov
jnp
jg
cmpsl
dec
push
mov
dec
rcrb
mov
loope
fldcw
and
fcmovbe
int
mov
xchg
popa
sub
cmp
jp
sub
sbb
and
dec
and
mov
add
adc
das
mov
pusha
je
ret
int3
clc
cmp
sub
sbb
pop
xor
dec
cltd
inc
sub
orl
sbb
mov
mov
repz
xchg
in
mov
or
shr
cli
push
sbb
add
or
faddp
push
rclb
cld
fdivrs
repnz
xlat
fs
mov
pushl
test
jbe
mov
jp
or
sub
insb
mov
fwait
sti
je
pop
inc
cs
dec
pop
enter
adc
faddl
hlt
sahf
stos
jae
or
add
in
mov
into
xchg
aad
scas
dec
mov
push
xor
icebp
and
inc
mov
pop
and
dec
mov
xor
lock
in
pop
dec
dec
dec
pop
push
xchg
mov
dec
cmp
add
loope
and
xchg
stos
sbb
ret
and
push
orb
dec
mov
sub
pushf
mov
sub
arpl
inc
xchg
movsw
push
testl
sub
mov
mov
sbb
push
arpl
cmpsb
gs
jo
push
xchg
es
sbb
mov
fimull
sbb
clc
add
xchg
js
xlat
add
mov
pop
xor
xchg
jp
leave
mov
jo
loopne
mov
inc
and
xor
clc
iret
push
mov
and
ja
mov
jp
adc
pop
lods
pop
dec
adcl
jp
andl
push
xchg
mov
rcll
dec
mov
rol
aam
test
lret
aas
push
popa
in
shlb
sbb
movsl
inc
xor
cmpl
mov
cmp
int3
and
arpl
mov
mov
notl
mov
sub
mov
inc
fwait
xchg
pop
fwait
clc
xchg
rorl
sub
cwtl
cli
sub
out
outsl
lods
add
ficoms
or
and
mov
jg
fldcw
shr
dec
pushf
loopne
mov
addr16
iret
jl
fldenv
std
minps
jns
cltd
adc
in
mov
cli
lods
xor
cs
pop
inc
sub
or
out
orb
dec
icebp
rorl
mov
inc
jo
cld
xor
jmp
xor
scas
jno
dec
add
ret
push
inc
cli
mov
mov
cli
iret
inc
jne
or
jne
cmp
mov
or
push
int
mov
mov
sti
fisubrs
push
xchg
and
mov
mov
push
inc
jg
push
addl
ja
cmp
jmp
addb
mov
clc
or
adc
jnp
enter
cmp
dec
scas
and
mov
push
pop
sbb
insl
or
daa
mov
push
jo
pushf
int
ds
sub
in
loope
shll
dec
test
dec
les
fisttpll
gs
add
and
repnz
test
xor
scas
add
int3
outsl
dec
adc
add
inc
mov
scas
adc
cmp
xor
xchg
rcll
out
add
arpl
pop
ret
pop
sbb
adc
and
inc
adc
add
mov
icebp
mov
push
popf
adc
jns
mov
jle
aad
ret
adc
arpl
xchg
dec
pop
mov
push
pushf
sarb
xor
jl
sub
shll
jp
lock
adc
cmc
sbb
sub
js
jp
mov
test
bound
sahf
add
loope
xchg
jle
mov
push
mov
mov
dec
js
mov
add
xchg
jno
push
and
inc
jbe
pusha
lret
adc
shlb
sub
pop
iret
lock
stc
cmpsl
movsb
or
xchg
add
pop
dec
jmp
jns
aad
imul
lcall
rcl
sbb
mov
jbe
mov
jg
ret
shl
in
inc
mov
fsubrl
xor
add
incl
mov
xor
loope
mov
mov
mov
popa
leave
rorb
leave
popa
adcb
outsb
movsb
push
addr16
or
xor
shrl
in
imul
stc
andb
add
mov
insl
leave
fbstp
xor
jg
insl
push
add
repnz
xchg
sbb
aad
pop
xchg
xor
mov
aaa
push
or
xchg
lds
jl
rcr
push
out
push
sub
add
ja
jecxz
testb
push
popf
cli
adc
test
and
push
jo
es
pop
data16
push
fdivl
adc
ds
sub
fldenv
push
fisttpll
ret
fiaddl
mov
jecxz
cmp
repnz
mov
mov
mov
sahf
push
xor
add
adc
xchg
pusha
inc
adc
inc
popa
std
lods
sbb
lock
mov
sub
sub
dec
pop
ja
inc
pop
inc
pop
rorb
cwtl
inc
sub
bound
pusha
into
mov
lret
hlt
or
jo
xor
out
ja
addr16
subb
cli
adc
ret
fwait
aas
rcrb
ret
andl
aas
dec
xor
inc
inc
in
loope
dec
dec
pushf
call
add
cltd
movsb
push
cwtl
sub
nop
inc
outsb
bound
mov
shll
and
xor
aas
es
dec
test
dec
pop
pop
and
lods
sbb
add
xchg
cltd
sbb
mov
mov
aas
and
aam
mov
leave
mov
mov
aam
xor
dec
xor
jns
xchg
jno
mov
hlt
bound
aam
cmp
pop
lock
rorb
mov
cmp
or
dec
sti
aas
adc
xchg
ret
int
ds
int3
mov
sbb
popf
mov
movsb
mov
imul
pop
or
inc
cmp
fbstp
js
sbb
int3
cmp
cmp
arpl
or
sub
movsl
add
jl
push
cmpsl
in
loope,pn
sahf
lretw
pop
divl
and
repnz
sub
sub
pop
pushf
add
adc
aaa
andl
test
pop
add
shrb
rol
mov
shl
inc
lock
mov
lcall
ret
cmp
lcall
ret
stos
cmc
pop
mov
jns
int3
sbb
and
push
sub
jle
add
inc
inc
pand
out
mov
and
mov
in
nop
test
dec
mov
pop
pop
push
lret
cmp
mov
arpl
pop
aad
xchg
fldl
sahf
jne
xchg
js
xchg
int
jge
mov
shlb
xlat
push
mov
fs
xchg
lods
insb
stos
xchg
lds
or
pop
xchg
and
aam
lods
jl
mov
inc
pop
or
fisttpll
cmp
arpl
pop
xchg
mov
sti
mov
add
roll
mov
jns
push
push
xor
scas
adc
xchg
insb
int
dec
jb
popa
fs
jg
mov
mov
sub
bound
xchg
mov
pop
adc
int
scas
cmpsb
or
sbb
xchg
pop
xchg
dec
adc
pop
ss
adc
mov
mov
scas
fcom
push
sub
add
or
and
inc
pop
cmpsb
push
or
xchg
enter
sub
pop
pop
xchg
pop
notl
bound
ret
fstl
addb
jmp
ds
in
mov
test
je
stc
pop
cmpsb
push
add
push
or
lds
aas
pop
jns
inc
or
push
jmp
shlb
dec
push
jo
lds
and
xor
stos
fsubrs
bound
and
and
jecxz
repz
jae
push
add
scas
cmp
ljmp
push
bound
jne
ja
inc
jo
cli
mov
sbbl
inc
add
xor
sbb
jb
imul
push
mov
addr16
outsl
arpl
mov
xchg
jb
andl
inc
dec
adc
jle
push
in
adc
aad
mov
je
mov
adc
push
jno
xchg
jb
push
les
jne
lea
clc
jmp
bound
and
add
add
mov
push
or
mov
int3
xchg
push
rolb
inc
mov
sbb
leave
cmp
pop
sbb
jbe
xchg
cmpsb
sarl
out
test
cmc
xchg
insl
fidivrl
cmp
dec
sbb
inc
pushf
dec
bsr
add
xchg
stos
fstpt
xchg
and
jl
and
popf
dec
mov
aam
dec
in
in
pop
xchg
cld
adc
push
pushf
fistpl
lahf
jp
cmp
and
push
and
leave
push
adc
push
lahf
in
js
cwtl
icebp
aas
dec
sub
xchg
out
loope
mov
inc
sbb
das
imul
inc
ret
mov
jns
add
sub
jb
jmp
mov
sub
movb
adc
lahf
popa
or
inc
inc
pop
data16
in
pop
in
ljmp
push
add
stos
ret
rorb
push
lock
ret
jns
sub
adc
xor
pushf
out
loopne
aaa
popl
repz
jmp
dec
ds
clc
adc
push
mov
fstpl
mov
nop
xor
sub
mov
sub
cld
push
sbb
test
adc
inc
dec
mov
inc
cmpsl
sub
test
add
push
cmpl
xchg
test
push
adc
hlt
popa
and
fsts
sbb
popf
jne
outsl
data16
inc
js
movl
add
in
and
or
sbb
arpl
dec
scas
jmp
mov
imul
sbb
and
pop
add
pop
or
pushf
ret
in
ds
shrl
xchg
dec
cltd
push
push
xor
cmpsb
xor
loopne
dec
xchg
insb
xor
aam
and
add
loope
jbe
push
in
imulb
jnp
push
stc
arpl
shlb
or
cmp
pusha
aad
pop
xor
je
idivb
jge
xchg
push
out
mov
sbb
ret
mov
add
cmp
mov
push
ja
shrb
mov
jge
out
lret
xchg
addr16
push
xor
mov
or
es
test
fistl
cmc
or
pusha
test
push
movsl
outsl
pop
lmsw
cmp
popf
int3
dec
imul
adc
xor
mov
dec
test
and
or
cmp
addb
ror
adc
push
lds
xchg
lods
jl
jp
stc
add
repz
sar
sub
push
rclb
adc
xor
jbe
inc
sbb
sub
jg
inc
pop
add
and
add
mov
push
push
loop
aaa
cmp
out
fcmovnb
add
xchg
push
xor
add
ss
pop
je
mov
xchg
cmpsb
ds
and
mov
push
aaa
movsb
into
mov
jmp
pop
in
push
repnz
shll
je
ret
pop
xor
xchg
unpckhps
cmp
scas
inc
lea
xchg
ljmp
stos
xor
xlat
push
xchg
test
pusha
pop
pop
cmp
icebp
xchg
pop
in
push
movsb
inc
outsb
scas
pushw
in
lock
test
fidivrl
xor
pop
jmp
outsl
icebp
adc
and
or
mov
pop
lds
test
xchg
cmp
cmpsb
inc
into
pop
das
imul
js
shll
repz
adc
data16
mov
mov
mov
jne
pop
mov
sbb
jecxz
out
jg
addr16
mov
xchg
sub
les
dec
mov
xchg
jo
and
pop
int
xor
add
push
dec
lods
sbb
ja
and
jcxz
or
mov
and
add
or
scas
push
sub
aas
movsb
xchg
jmp
dec
test
lcall
scas
sti
icebp
movsl
cli
cmp
or
loop
adc
xor
idivb
jne
adcb
mov
repnz
inc
push
fsubr
lods
cld
sbb
mov
and
push
mov
xlat
in
mov
push
vmovhpd
dec
push
mov
int3
jmp
rcll
mov
adc
jnp
popa
das
push
mov
inc
cmp
loop
mov
xchg
adc
mov
addl
cmp
sahf
push
xchg
fs
clc
enter
shlb
cltd
aad
push
clc
pop
mov
dec
and
add
and
xchg
or
jne
cmp
cmp
ret
das
fidivl
ret
test
cmpsl
cltd
je
jnp
xchg
push
aaa
pop
add
xchg
jmp
or
jbe
loopne
mov
jg
mov
mov
and
xor
jo
push
xchg
jb
mov
imul
mov
mov
push
inc
repnz
add
fs
das
pusha
movsl
jae
sahf
xchg
push
jp
imul
idivl
xor
xlat
les
jmp
mov
xor
into
mov
jbe
add
mov
mov
dec
aas
fsts
je
mov
out
cmp
scas
sbb
ret
ret
leave
test
pop
cmp
aad
mov
or
xchg
fstp
push
push
subl
xchg
and
pop
push
fcos
push
jp
inc
adc
ret
inc
dec
pop
clc
repz
je
cmp
xchg
mov
inc
adc
es
push
imul
pop
xchg
mov
and
adc
mov
jecxz
mov
add
fwait
je
push
add
sbb
rcr
call
mov
jnp
cmc
mov
pop
enter
push
mov
sbb
jo
js
test
pusha
mov
repz
xchg
cmp
xchg
cmpsl
lea
or
psubq
call
cmpsl
adc
les
filds
nop
push
mov
pop
add
jmp
stos
adc
lahf
mov
lock
sub
bound
add
scas
ss
mov
and
ret
add
add
xor
addb
mov
adc
daa
cmp
sbb
int3
fdivl
mov
cmp
pop
mov
mov
mov
push
xor
or
pop
or
jno
mov
inc
pop
xor
jge
leave
jl
mov
dec
xor
xchg
inc
jg
test
cmp
in
or
inc
push
in
mov
mov
imul
lock
xor
cli
dec
cmp
xor
rclb
or
push
add
scas
ja
movsl
xor
lods
subl
xor
out
arpl
cmpsl
add
cmp
inc
dec
mov
sub
clc
bound
xchg
shr
and
je
shll
mov
mov
addr16
mov
in
xor
out
adc
mov
pop
scas
shlb
in
popa
frstor
sub
and
je
sahf
mov
pop
sbb
in
orb
inc
lock
mov
xchg
cwtl
lret
cmp
rcr
and
xor
xchg
dec
mov
into
flds
stos
jns
adc
int
pushf
fwait
sub
cmp
ja
hlt
inc
cld
aaa
pop
out
push
mov
jnp
push
jmp
out
call
imul
cmp
popf
iret
pop
insl
mov
not
sub
jle
out
adc
inc
mov
push
stc
cmp
sbb
cmpl
aas
aaa
popa
add
jmp
xlat
cltd
xor
adc
xor
outsb
cmpsl
push
push
push
sub
dec
jbe
icebp
mull
pop
pop
ret
fiaddl
lods
ret
sub
insb
xchg
inc
push
push
out
sub
fwait
std
dec
and
sbb
rcll
pop
ljmp
mov
test
inc
mov
adc
inc
jp
test
dec
fwait
mov
leave
arpl
xor
dec
fcompl
aaa
sub
addr16
cmp
lods
movaps
inc
testl
xor
test
jmp
dec
sub
cmp
dec
dec
jo
pop
lea
push
mov
mov
xor
bound
dec
or
push
mov
cld
call
push
cmc
loopne
pop
sub
out
inc
dec
outsb
rol
icebp
push
pop
push
dec
inc
je
mov
cs
xor
and
xchg
pop
lock
fnstcw
cmp
out
in
out
push
adc
js
outsb
push
stos
and
pop
dec
sub
lcall
push
sub
aas
mov
idivl
int3
rolb
cld
scas
mov
jb
add
cltd
jge
jecxz
and
insb
js
imul
fs
aam
ljmp
mov
leave
cmp
sub
addr16
stc
cmp
push
xorl
push
jbe
sub
push
stos
ret
fbstp
pop
in
orb
add
adc
into
ljmp
dec
fisttpll
push
lahf
imul
pushl
outsb
rcrb
fmuls
mov
mov
data16
ret
and
rolb
adc
popf
sub
rcr
sarb
mov
cld
test
cltd
mov
sbb
clc
int
ret
gs
add
add
fbld
inc
popf
push
hlt
inc
or
pop
mov
ja
mov
xor
es
adc
aam
sbb
add
mov
insl
cmp
cwtl
push
push
push
ja
jno
mov
inc
test
pop
xchg
pop
pop
xchg
pop
fdivrl
mov
sub
loop
shlb
popf
cli
mov
sbb
push
into
sbb
es
xchg
mov
or
add
pushf
pop
vmovd
aas
aad
mov
fsubs
int3
jns
mov
jmp
jnp
mov
mov
sub
cmp
sub
aad
push
insb
jns
and
andl
dec
xchg
dec
incb
addr16
cld
mov
mov
adc
and
loope
mov
xlat
cmc
push
or
push
dec
mov
aad
xchg
call
cmp
inc
fmull
jecxz
or
out
pop
arpl
cmp
and
cmp
jge
sbb
xchg
clc
lret
sub
test
add
adc
lea
xor
xchg
pop
jl
cwtl
jmp
xor
pop
ss
push
lcall
mov
fcompl
fsubrs
fidivrl
jmp
imul
mov
clc
lods
pop
xor
adc
mov
jp
call
pusha
pop
add
fs
in
mov
clc
pop
mov
push
or
adc
or
scas
pop
jo
cli
jg
xchg
xchg
mov
aas
dec
test
loope
mov
mov
mov
push
push
in
xor
add
movsb
and
sahf
out
mov
ss
and
xchg
es
mov
and
jbe
fidivrl
sbb
in
flds
sub
lds
flds
and
lods
sub
dec
xchg
or
pusha
lahf
push
jne
mov
repz
mov
cld
cmp
pop
mov
sub
adc
lret
ficoml
lret
dec
out
in
jp
or
add
jae
fiadds
sbb
je
cmp
sahf
das
in
sub
andb
dec
xor
add
imull
hlt
or
in
ds
mov
adc
mov
adc
mov
sbb
mov
fildll
pop
or
mov
push
dec
cs
cmp
fwait
inc
or
push
fadds
xorb
jae
or
fiaddl
adc
or
mov
pop
jbe
sub
ljmp
out
jecxz
sbb
xchg
cmp
push
or
js
xor
lods
xlat
outsl
fwait
popf
ret
jge
adc
mov
int
mov
fistpl
fists
push
mov
cmpsb
imul
out
imul
and
ljmp
add
mov
in
je
cmpl
xor
loope
repnz
mov
push
sub
imul
dec
mov
shlb
sbb
mov
mov
jmp
repnz
inc
test
sbb
cmp
push
fisttpll
fwait
cld
lods
push
adc
xchg
out
icebp
pop
adc
jecxz
in
or
mov
adc
jns
pushf
roll
inc
test
leave
dec
pushf
mov
inc
push
or
shr
mov
adc
std
aad
jns
insb
lar
and
pop
mov
fstl
adc
xor
or
lcall
ljmp
sub
mov
das
adc
xchg
andl
std
push
rclb
sbb
cmp
fldt
jo
cmp
adc
cmp
addr16
das
add
aaa
bound
push
xchg
inc
mov
add
sbb
ficomps
lock
dec
lods
fcomps
add
mov
pop
sbb
and
insl
dec
pop
pushf
sub
stc
aaa
mov
and
sub
sbb
xchg
adcl
jno
or
bound
jae
pusha
loope
xorb
mov
shrb
push
cmp
sub
jle
dec
test
lahf
ljmp
ja
out
out
xor
std
cmc
adc
xchg
arpl
sar
jno
xchg
sub
xchg
in
test
popf
push
sub
xor
stos
sub
imul
push
lcall
and
inc
mov
js
sub
mov
cmpsb
jmp
jnp
xchg
and
push
push
jp
and
xor
pop
pop
cmp
inc
int3
dec
dec
xchg
add
call
sti
scas
dec
jmp
dec
mov
dec
outsb
out
out
aaa
popa
xchg
add
pop
xor
test
popf
cli
dec
hlt
sub
ja
xchg
pop
out
cmp
loope
in
out
or
ss
pop
push
mov
out
lods
loop
push
mov
add
aaa
fidivrs
xchg
aad
inc
mov
lea
shlb
sbb
jecxz
add
xor
lods
popa
mov
test
xlat
and
mov
sub
sahf
xor
lret
test
add
into
insl
sub
push
mov
cmp
or
sbb
adc
xchg
sbb
insl
xor
xchg
sub
xchg
imul
adc
fwait
mov
ret
mov
outsl
aas
roll
cmp
insb
cmc
pop
sar
lahf
adc
pop
push
pop
aad
pop
add
aas
dec
iret
pusha
ljmp
rcll
andb
add
loopne
or
aad
xor
decb
loop
jecxz
sbb
push
fisttpll
movsb
and
xchg
inc
push
push
sub
sub
inc
jmp
movsl
dec
xor
dec
iret
out
adc
rcrl
jnp
push
aad
jge
enter
stos
pop
or
lcall
or
std
dec
sub
pop
icebp
mov
aad
ret
imul
inc
add
push
jge
and
cmp
jmp
pop
shlb
rclb
dec
imul
sbb
lea
mov
add
adc
loope
mov
jno
repz
sub
imul
aaa
ret
outsb
dec
and
mov
pop
dec
out
fs
lret
sub
xchg
jmp
movsl
jmp
lcall
fsts
aad
xlat
ljmp
mov
mov
es
xchg
imul
adc
gs
jecxz
push
or
or
test
pop
loope
jo
arpl
mov
cmpsb
fidivrs
inc
bound
mov
repnz
add
imul
xchg
pop
mov
rorb
sub
push
xchg
iret
pop
cmp
xchg
mov
icebp
and
xchg
sub
shll
cli
xchg
push
xchg
sbb
pushf
rorb
dec
xchg
or
mov
ret
or
clc
insl
push
addr16
pusha
aam
mov
popf
popf
loopne
imul
push
jns
pop
fwait
push
sub
rcl
fidivs
add
imul
jmp
movsl
fimull
sbb
fdivl
mov
xchg
rcrl
ror
jo
addr16
popf
aad
xchg
jnp
fisubl
mov
mov
or
push
mov
xchg
lret
mov
mov
dec
adc
lds
jb
cmpsb
loop
ret
push
or
scas
rcrl
aam
in
xchg
pop
adc
push
loope
dec
dec
dec
fs
mov
ret
lea
and
push
cmp
ja
fsubs
jecxz
jb
mov
and
adc
sub
add
js
into
jae
repnz
adc
rorl
or
mov
inc
jp
or
jbe
flds
add
fdivl
mov
and
cli
xorb
and
inc
cltd
sub
pop
jle
lods
or
jne
loop
cmp
sbb
cmp
outsl
xor
mov
call
add
cmc
mov
call
and
cld
add
iret
pushf
das
int3
rcrb
sar
add
imul
mov
cs
xchg
adc
mov
jo
xor
enter
rorl
mov
xchg
subb
enter
test
js
ficompl
add
mov
mov
dec
sub
jns
mov
and
popf
stos
hlt
int3
test
sub
test
ficompl
or
hlt
jo
outsl
dec
inc
xlat
cmp
mov
cwtl
adc
add
add
pop
sti
mov
jp
lods
cmc
ja
aad
cmpsb
fistpll
jecxz
out
out
fwait
iret
pop
dec
cmp
cmp
pop
mov
add
pop
inc
dec
cltd
sbb
jle
xorl
pop
sub
xchg
adcb
xchg
and
cmpsl
sub
jecxz
orb
add
pop
add
xchg
int
jne
adc
jnp
repnz
movsl
jg
les
jg
imul
dec
in
filds
popf
mov
push
mov
mov
add
xor
repz
cmp
shll
loop
es
into
rcrb
bound
and
xchg
inc
addb
xchg
in
test
mov
repnz
mov
cmpsb
das
and
test
or
jecxz
cmovno
add
pop
xor
out
int
mov
adc
lods
popf
push
cmp
jae
cmp
xorl
pop
dec
mov
mov
repz
mov
test
pop
sbb
inc
push
and
fisubrl
dec
sub
xor
enter
mov
add
stc
xor
rorb
lcall
sbb
mov
sbb
mov
lcall
lahf
mov
rcr
sbb
dec
out
add
mov
sbb
or
mov
inc
xorl
add
xor
mov
dec
aam
fstl
int3
and
mov
outsb
xor
js
mov
or
pop
mov
scas
push
inc
mov
fsubrl
mov
adc
push
push
pop
clc
fmul
mov
or
pop
and
mov
movsl
xlat
or
sahf
call
dec
insl
dec
dec
add
xchg
inc
mov
fmull
jae
jle
cmp
jle
push
pop
push
fimuls
mov
mov
sbb
iret
fcoms
mov
repnz
lds
lcall
scas
push
mov
stos
xchg
adc
mov
and
mov
add
jne
decb
out
outsb
dec
xor
push
inc
aaa
push
fisubrs
pusha
xor
mov
cmpsb
adc
leave
ljmp
icebp
into
leave
add
add
push
adc
out
xchg
stos
mov
pop
xchg
xchg
std
aaa
add
gs
push
fbstp
or
jne
or
sbb
pusha
sbb
push
push
int
lcall
push
xor
call
xchg
dec
jecxz
mov
mov
int3
xor
push
push
and
test
push
and
and
das
cmp
push
ds
pop
cmpsl
push
push
and
cmpsl
sti
mov
roll
inc
aam
and
inc
hlt
lds
fcomps
pop
mov
shll
sar
popf
inc
jmp
pop
and
push
cmp
cmp
xlat
test
or
push
lcall
mov
pop
and
sub
lcall
push
adc
xor
addl
out
sub
es
shrb
imul
clc
jmp
jne
test
jle,pt
sub
sub
ret
call
ljmp
mov
into
lret
push
xchg
push
push
fistpl
rclb
mov
cmpsl
and
lahf
out
xchg
push
jmp
das
sub
mov
xor
inc
jb
sbb
jecxz
bound
fs
fcomps
aaa
insb
add
mov
jge
ss
lds
cmc
nop
js
mov
mov
addr16
cli
outsb
std
sahf
push
fnstenv
ret
fcmovnb
and
adc
cli
push
sbb
push
gs
inc
insl
cmpsb
add
aas
mov
mov
and
xor
int3
call
ljmp
adc
pushf
fcmovb
jecxz
lcall
and
cli
test
adc
pusha
add
sbb
scas
mov
or
xchg
lret
cli
and
mov
and
js
stc
and
xchg
pop
negb
outsl
popa
cmp
rolb
sub
insl
mov
mov
fldl
repz
ja
lods
cmc
test
mov
ret
in
nop
cltd
or
in
popf
pop
push
mov
jmp
sbb
jle
outsl
sub
popa
lods
push
jl
enter
mov
and
cmc
lahf
push
jnp
iret
or
mov
cmpsl
mov
push
mov
mov
enter
mov
add
xlat
insb
subps
xlat
inc
bound
not
and
js
pusha
pop
data16
push
int3
push
mov
adc
fadds
out
sub
add
push
xor
ja
js
xchg
xchg
adc
in
scas
and
orb
add
into
add
and
adc
xchg
mov
or
sbb
loop
aaa
scas
push
cmp
inc
loope
xor
hlt
dec
dec
in
push
or
negb
mov
ja
idivl
jno
rclb
stos
notb
repnz
or
push
int3
adc
push
sahf
loop
lcall
push
out
and
or
mov
or
iret
es
mov
int
int3
ja
nop
jb
aam
push
test
jp
cs
dec
repnz
xor
cmp
in
dec
xchg
sahf
or
sub
mov
lret
push
or
repz
out
test
sbb
push
outsb
and
jg
or
test
jne
xor
mov
inc
pop
xchg
ja
xor
push
pop
sub
aaa
mov
mov
jns
xchg
loopne
fisttpll
and
repnz
loope
ja
ja
inc
or
in
rcrb
xor
mov
xchg
sbb
push
push
fists
push
jbe
and
loope
mov
inc
lds
insb
or
mov
es
in
push
and
sub
mov
mov
es
mov
jg
sbb
sbb
rorb
xlat
ret
jae
pop
dec
pop
fwait
sbb
je
jnp
pop
arpl
dec
xor
pop
add
pop
inc
in
mov
ja
push
arpl
sbb
ja
inc
cmp
aad
repnz
dec
pop
aaa
or
test
es
mov
out
push
and
mov
xchg
repz
call
in
adc
addr16
dec
jecxz
insl
xor
cmp
js
adc
andl
and
push
ljmp
and
repnz
inc
mov
pop
xchg
pop
loope
sub
mov
push
or
adc
push
in
ret
ret
sti
mov
push
clc
fcoms
fiaddl
fwait
aas
or
cmp
aam
test
nop
jp
pusha
jae
mov
int3
cmp
in
mov
xchg
into
sbb
mov
aam
jp
mov
das
or
ljmp
out
aaa
inc
lods
cmc
or
fimull
xor
xor
jns
cmpsb
mov
out
test
cmpsl
imulb
cwtl
es
or
push
sub
sub
mov
mov
outsb
xchg
out
pushf
sub
or
or
cmp
notb
movsl
daa
loop
aam
gs
cmp
frstor
lahf
mov
popa
shlb
jne
inc
lea
outsb
xor
addb
xchg
out
cmpsl
xchg
mov
test
sbb
add
add
push
dec
lcall
push
fnstenv
jo
out
mov
ja,pt
mul
push
adc
push
xchg
int
rorb
dec
and
push
int
sahf
xor
sbb
xor
jno
jmp
inc
test
add
lret
repnz
inc
adc
in
or
xchg
mov
mov
push
inc
and
pop
and
xchg
popa
bound
insb
notb
mov
fdivs
push
aaa
addr16
sbb
xchg
mov
bound
xor
addr16
mov
cltd
inc
fcomi
xor
mov
jb
jns
insl
xchg
adc
cmp
mov
dec
jnp
lods
les
aas
push
nop
inc
into
adc
inc
inc
imul
xor
jo
fwait
adc
adc
push
adc
je
cmc
ljmp
pusha
fildll
dec
mov
scas
push
cld
mov
rcrl
inc
cmc
xor
adc
push
nop
dec
dec
add
ja,pt
insl
repz
adc
out
sbbb
push
les
clc
mov
insl
cltd
jmp
ljmp
lahf
fisubs
xchg
jno
push
dec
push
add
cs
xor
cmp
sbb
stos
aas
mov
push
fs
and
push
cmp
and
mov
mov
mov
leave
clc
rolb
xchg
mov
in
cmp
mov
jge
dec
adc
pop
xchg
inc
add
sti
dec
inc
in
dec
clc
mov
test
and
out
dec
addr16
inc
sbb
movsb
and
mov
popf
int3
pop
lcall
mov
adc
iret
xchg
adc
add
or
mov
mov
int3
and
push
jmp
pop
add
into
lods
insb
dec
xchg
movsl
mov
rcll
pop
adc
dec
and
outsb
jecxz
cmpl
push
faddl
push
push
xchg
push
in
pop
inc
lds
fidivl
lock
jl
outsl
xorb
ret
arpl
dec
mov
aam
add
fisubl
shlb
add
repz
decl
xor
push
ficomps
shr
std
lds
inc
icebp
sbb
add
into
leave
mov
ficoms
rcr
aam
cs
jmp
jae
pop
pop
lcall
xor
cs
and
pop
jae
loope
aas
add
ds
adc
mov
sub
dec
inc
mov
test
mov
movsb
xchg
aaa
imul
daa
mov
hlt
cld
cmpsl
push
mov
test
std
adc
sarb
pop
add
js
sbb
int3
and
jecxz
cmp
int3
mov
add
dec
arpl
movsl
adc
pop
xchg
sub
into
fdivrl
dec
and
nop
mov
and
pop
lea
dec
insl
les
mov
mov
pop
ds
pop
out
push
insb
sbb
hlt
cmpsb
jae
movsb
sub
faddl
pop
dec
cli
call
pop
push
lea
dec
int
lret
imul
cmpsb
push
in
dec
mov
ja
xchg
mov
lahf
xor
in
stos
lcall
data16
xchg
dec
popf
dec
cmpsl
addb
leave
pusha
jmp
ret
push
negb
pop
aam
hlt
fildl
in
iret
test
in
les
inc
mov
gs
in
loope
pop
xor
clc
dec
pop
inc
mov
popa
and
push
add
lds
nop
push
lcall
sarb
outsb
push
xchg
pop
jecxz
inc
push
add
cli
ds
push
pushf
inc
cwtl
mov
call
adc
push
into
cwtl
fildl
xchg
mov
repnz
shld
xchg
xchg
int
cmpsb
shr
adc
pop
fistl
js
jp
dec
jmp
mov
aad
fldl
sub
mov
dec
test
xchg
loop
sbb
push
xchg
sbb
xor
rcrl
cwtl
adc
mov
repnz
fwait
test
mov
loopne
mov
ja
dec
xor
orl
into
shll
andl
add
xchg
into
sub
jbe
xor
jnp
pop
mov
pop
mov
xlat
test
test
test
push
mov
mov
mov
xor
push
push
mov
sbb
dec
or
xchg
sub
inc
mov
jns
enter
enter
mull
xlat
stos
mov
push
push
and
jmp
dec
jle
and
add
xlat
mov
jnp
or
lods
xchg
pop
ljmp
daa
dec
cmp
inc
ret
and
inc
movsb
insl
stc
fs
in
jge
push
das
orl
repnz
inc
push
outsl
mov
test
pop
xchg
fidivl
aad
test
pop
push
or
push
test
mov
add
jg
test
inc
aaa
dec
pop
mov
xchg
cld
cmpsl
jl
stos
or
pop
mov
push
xor
or
pop
outsl
and
push
lods
into
pop
jmp
pop
cmp
sti
dec
pop
mov
mov
addb
cmp
int3
add
or
sub
xor
jmp
and
xchg
enter
sbb
shl
ja
mov
hlt
inc
pop
and
xlat
js
sub
add
and
pop
das
loopne
pop
or
mov
fidivs
stos
test
cld
pop
xchg
adc
cmc
mov
sbb
lcall
pop
popf
imul
sbb
loopne
jo
inc
dec
ljmp
lods
dec
sti
iret
pop
pop
test
add
ret
int
lret
fstps
inc
add
jns
scas
xor
cmpsb
push
add
adc
mov
jns
pop
pcmpeqw
test
cltd
mov
cmpsb
sbb
push
hlt
loope
dec
roll
andl
loope
data16
dec
pop
ss
xchg
xchg
in
fildll
shlb
popa
xchg
aaa
mov
pop
jle
fs
add
jg
mov
push
sub
rclb
out
jo
jg
inc
stc
and
mov
or
mov
inc
inc
cmc
mov
inc
push
je
add
test
fwait
sbb
out
insl
add
movsl
jmp
mov
xor
dec
ds
call
aaa
clc
adc
std
orb
test
mov
xchg
scas
loopne
decb
int
jae
test
insb
js
xor
loop
aam
mov
jmp
inc
jno
mov
xchg
jmp
pop
nop
or
ss
jecxz
inc
push
xchg
ret
add
sbb
loopne
cmpsl
int3
xor
scas
lcall
xchg
xor
movsb
dec
in
int
mov
negb
xor
sbb
pop
jle
cli
push
or
mov
imull
adc
andb
call
imul
jae
cmp
lcall
imul
out
ret
xchg
mov
xchg
cmp
inc
loopnew
je
lock
in
sub
call
imul
nop
iret
xor
sub
push
jns
pop
pop
xor
imul
jge
fcoml
stos
adc
arpl
jo
mov
sub
mov
jg
icebp
aam
mov
in
jge
xchg
es
lea
pop
jg
xchg
xchg
inc
pop
xor
rorb
inc
stos
pop
sub
ret
sub
aam
sbbl
mov
dec
inc
insb
fwait
adc
roll
ss
and
add
sbb
push
mov
data16
addr16
sub
sti
test
ljmp
fs
xor
push
in
popa
xor
xor
sub
jnp
add
mov
cmpsb
je
xor
cmp
test
inc
test
or
xchg
movsl
ret
insb
xor
dec
sub
inc
jl
pushf
pushf
mov
aam
jle
push
pop
push
xor
aas
dec
mov
gs
push
sub
push
out
dec
inc
xchg
mov
imul
sbb
movl
jbe
lcall
in
mov
push
mov
jno
sbb
test
lret
push
mov
imull
ret
lock
pop
pop
rclb
pop
sub
iret
or
icebp
push
addl
or
aad
aam
xchg
cmp
and
mov
inc
ja
push
fiadds
stos
mov
push
pop
sbb
je
fwait
enter
das
inc
xchg
hlt
add
dec
fcompl
pop
mov
sub
ja
jp
sbb
nop
arpl
cmp
mov
mov
cmp
add
sub
xchg
imul
arpl
les
lods
cltd
in
sbb
mov
mov
adc
push
adc
lret
fcomip
jo
and
aad
mov
mov
sbb
insl
sbb
lock
mov
dec
inc
mov
inc
lods
mov
add
aas
and
mov
repnz
flds
ret
rcrb
or
inc
movsl
mov
pop
xor
lret
cld
popf
in
ficomps
push
aad
mov
dec
lods
lret
js
lods
push
test
ss
fildll
pop
mov
hlt
inc
jno
dec
push
mov
stos
arpl
xchg
xor
clc
jge
push
aaa
xor
loop
jle
nop
adc
shlb
fbstp
push
fcoml
clc
push
adc
cmp
jmp
pop
jg
in
and
ret
les
push
out
lock
mov
and
in
idivb
or
mov
arpl
xor
out
xor
mov
cmovp
jbe
xlat
jbe
movsl
and
mov
cmp
and
cmc
pusha
push
dec
jp
mov
sbb
jb
int3
add
add
fsubrs
pop
or
scas
mov
loop
imul
xor
mov
test
jb
out
addr16
enter
popa
out
adc
sub
mov
ffreep
push
call
ret
loopne
cwtl
fistpl
icebp
repz
or
mov
mov
ljmp
jge
hlt
inc
and
jg
adc
ficoms
sahf
dec
ljmp
jmp
js
shlb
xchg
and
jmp
clc
pusha
sub
xchg
imul
jbe
sbb
push
fldcw
leave
and
adc
xor
movsl
adcl
and
pop
loopne
push
sub
mov
in
test
sbb
arpl
cmp
fmuls
jle
xchg
sbb
dec
insl
int3
add
pop
mov
push
sbb
cmp
lcall
cli
inc
dec
je
xor
mov
addl
pop
sbb
mov
stos
in
pop
add
xchg
addb
jg
dec
push
mov
adc
jnp
addl
mov
loop
js
or
xchg
arpl
jge
stc
mov
mov
out
shl
pop
out
push
in
aas
cmpsl
sbb
dec
in
xchg
mov
and
jae
adc
cmp
jmp
jecxz
sbb
cmp
push
pop
or
test
lods
cmp
sub
stos
sub
std
cld
xchg
xchg
pop
dec
in
movsb
sarl
popa
outsb
mov
fistpll
data16
sbb
cmp
scas
mov
imul
and
mov
push
jl
xor
push
mov
fwait
stc
and
jo
and
imul
mov
pop
loop
pop
push
and
fucomp
clc
jmp
push
imulb
lcall
adc
xchg
cli
xchg
xor
adc
ljmp
and
push
ds
in
xor
aad
inc
es
mov
xor
dec
adc
das
addr16
scas
dec
mov
jmp
daa
push
jg
shl
adcb
int
push
push
mov
imul
xchg
leave
sub
call
inc
cmp
jne
out
std
in
test
xor
fs
addr16
daa
int3
jle
inc
pop
dec
rorb
push
pop
repnz
insl
add
lods
cmp
lea
xchg
loop
div
sub
out
or
xor
jg
xchg
cmc
movsb
add
add
cmp
ja
movsb
xchg
and
xchg
mov
mov
andl
dec
xchg
adc
pop
in
sti
push
in
lahf
add
cwtl
loop
mov
add
lods
in
test
jno
jbe
or
cwtl
arpl
insb
mov
dec
inc
fimuls
push
cmp
jnp
inc
arpl
pop
pop
push
and
shll
pop
clc
lods
cmp
or
push
inc
sub
insl
mov
cmp
pop
sahf
cmpl
fucomip
jmp
add
pop
mov
add
lahf
sar
out
lods
ds
cld
sbb
jbe
inc
fmulp
inc
push
jo
push
push
sahf
ficoml
adcl
scas
ret
push
inc
push
fs
inc
ja
mov
push
outsb
in
test
adc
xchg
cmp
ja
jle
mov
push
push
or
ficoms
test
insb
pop
stc
ret
imul
lahf
nop
stos
add
sbb
jno
pop
aaa
insl
cmp
cmpb
jecxz
xchg
in
fcompl
push
mov
stc
aas
fisubl
jb
and
popa
pop
outsb
push
pop
or
sbb
js
sub
xchg
or
cmpsb
mov
subb
mov
loop
mov
and
push
ja
mov
aam
nop
dec
push
dec
icebp
mov
cmp
rcl
inc
or
cmpsl
sahf
rorb
fchs
adc
adc
xor
pop
imul
inc
add
test
adc
pop
adc
or
das
fistpll
or
les
jecxz
in
sti
enter
sub
flds
mov
sub
inc
adc
inc
scas
rcr
inc
dec
push
sub
push
fdivs
sbb
and
xor
insl
sbb
push
jne
les
mov
dec
data16
inc
js
lret
fnstcw
inc
repz
fnclex
or
push
out
xor
xor
mov
cmpsb
jg
add
jge
xchg
sub
mov
sub
ljmp
xchg
cmpsl
cli
sbb
jo
ja
inc
xor
add
adc
cld
xchg
repz
push
jnp
jmp
or
mov
sub
mov
mov
aam
outsb
or
repz
jne
loopne
sbb
xchg
pop
cmpsl
mov
fs
clc
cmp
xchg
and
imul
push
inc
aam
divb
fists
adc
je
inc
mov
jmp
mov
fidivrs
mov
pop
popa
lahf
ljmp
sbb
fcmove
xor
xor
push
push
xchg
push
int3
icebp
jae
add
jae
pop
add
test
or
out
mov
fwait
cs
pusha
sub
clc
aad
dec
enter
mov
adc
js
mov
mov
cmp
test
pop
push
arpl
fisubs
xor
push
iret
lods
stos
xor
inc
add
out
jne
hlt
mov
loopne
stc
inc
or
inc
and
xor
push
mov
movb
rcr
push
pop
ficoms
push
cmp
fimull
jmp
scas
lea
inc
fcompl
adc
push
jmp
jne
xlat
jnp
jle
popf
mov
jne
cmpsl
pushf
mov
test
adc
cs
and
or
bnd
mov
mov
mov
insb
test
push
inc
icebp
jmp
movsl
test
mov
out
jb
stos
nop
mov
mov
inc
xor
or
es
xchg
sahf
dec
ss
xchg
ljmp
add
mov
pop
push
cwtl
popf
xor
cmp
sub
lods
dec
jae
inc
pushf
adc
pop
daa
sub
adc
and
mov
sbb
data16
adcl
add
jge
sbb
adc
bnd
fcompl
es
pop
in
xlat
repz
cmp
add
out
jae
ficomps
movl
xchg
dec
jnp
cmp
jbe
xchg
dec
cmp
cs
sbb
pushf
adc
inc
movsl
sarb
push
mov
pop
ja
inc
add
enterw
cmpsl
cwtl
sub
adc
fdivl
subb
cld
mov
xchg
sub
and
stos
movl
pop
andl
mov
aaa
jg
mov
xchg
cmp
jae
ret
data16
pop
fiaddl
dec
dec
pop
add
mov
cwtl
sti
shrd
or
test
arpl
mov
adc
loopne
mov
mov
push
inc
adc
popa
and
mov
inc
icebp
faddl
push
loopne
ret
sbb
ffree
mov
insl
adc
sub
pop
xchg
movsb
test
fidivl
fisubrs
pop
push
inc
repz
and
mov
lahf
xchg
les
rol
xor
push
dec
mov
pop
cmpsb
pushf
loope
xchg
inc
test
in
mov
xchg
cmp
dec
add
imul
shrl
insb
mov
xor
movsl
dec
or
mov
nop
cltd
jecxz
push
les
add
cld
mov
fbld
and
insb
rcr
pop
insl
fidivl
out
jno
cmp
add
ret
lahf
sub
pusha
fcomi
adc
aam
mov
xor
sar
sbb
sbb
fildll
fs
test
pop
movsl
inc
cld
rorb
sub
lret
fisubrl
pop
jg
arpl
pop
lcall
or
hlt
fmuls
xor
push
loope
aam
and
jp
fs
sbb
push
pusha
xor
ret
test
mov
loopne
add
sub
adc
mov
pop
inc
int
xchg
inc
fsts
test
mov
mov
data16
and
outsb
loop
or
xor
mov
addr16
imul
mov
jmp
movb
dec
pop
xchg
popa
and
dec
xor
sbb
js
in
mov
xor
jecxz
pop
movsl
divb
test
out
data16
int3
sar
mov
and
leave
xchg
xor
jns
pop
popl
xlat
loope
test
xor
shlb
pushf
mov
push
inc
xor
sub
ds
nop
aas
and
xlat
sub
jg
xlat
push
or
vandps
jge
int3
sub
push
jb
out
lret
dec
roll
sbb
mov
mov
adc
push
cmpb
lcall
sbb
mull
mov
and
out
imul
xchg
sub
add
jge
adc
stos
fldl
fisttpll
fsub
pop
lea
or
ret
mov
dec
idiv
fcoms
pop
mov
sbb
int
aam
cmp
fiadds
push
push
xlat
dec
lods
or
pop
xor
aas
ret
mov
jae
push
inc
call
lods
nop
clc
adc
bound
out
jb
push
inc
mov
mov
cltd
js
xor
cs
xchg
loope,pt
adc
ret
aad
testl
addr16
pop
or
rcl
scas
xchg
xor
xor
sti
lahf
loopne
xchg
mov
jno
jns
jl
lret
push
je
mov
enter
pop
pop
jb
enter
fwait
add
xchg
cmp
cmpsl
gs
sub
lcall
dec
and
rcrb
xor
inc
mov
and
or
mov
fwait
fcmovnu
fwait
sub
cs
sub
divl
sahf
and
push
aaa
lea
pop
loope
loop
test
xor
pusha
stos
insb
out
add
mov
sub
and
inc
xor
push
adc
hlt
test
pop
adc
mov
lods
cmpsl
xlat
cwtl
sti
sub
sbb
scas
scas
jb
jl
out
mov
gs
test
push
loopne
cmp
xor
mov
iret
inc
sbb
push
sbb
sub
test
clc
mov
fstpt
xor
incl
mov
adc
or
ja
xchg
fld
xchg
jmp
mov
out
stc
sbb
cmp
pop
rorl
xlat
jecxz
sub
adc
movsl
adc
fs
repnz
and
arpl
sub
hlt
sbb
cmp
aas
or
not
mov
lock
or
pop
clc
aad
or
das
adc
gs
rcr
sbb
sub
jg
dec
aas
sub
and
lods
sti
jmp
lcall
cmp
sbb
sbb
outsb
or
jge
mov
push
dec
negl
test
pop
scas
lea
jp
and
shl
imul
xor
ret
cmp
fdivp
stos
shrb
cltd
dec
xchg
add
xchg
xchg
in
insb
jae
js
lret
lahf
lock
outsl
fcoms
aas
fstps
rep
ljmp
xor
sub
mov
xorb
stc
shr
fimuls
ret
aas
popa
cltd
push
shrb
scas
icebp
dec
aas
imul
lahf
outsl
mov
repnz
das
inc
in
pop
jp
int
push
aaa
inc
scas
sub
lock
inc
inc
or
dec
pop
cmp
dec
or
jne
xadd
lahf
lcall
adc
loope
out
push
and
mov
or
jae
data16
sub
subl
imul
mov
jne
out
add
xchg
ds
cltd
sub
test
inc
pop
inc
stos
mov
iret
jne
adc
subb
test
push
std
sub
fiaddl
push
mov
in
imul
mov
or
adc
popf
subb
xlat
movsb
bound
mov
adc
xchg
js
push
mov
pop
fnstsw
adc
dec
mov
pop
push
ficoms
into
cmp
stos
rcrb
add
or
scas
aas
pop
lcall
jl
add
iret
mov
or
dec
or
add
push
stos
repz
lcall
ficoml
test
jl
xchg
call
shl
xor
mulb
pushf
pushf
cmp
mov
push
push
cld
test
mov
aad
pop
lea
es
bound
mov
xor
push
mov
loop
push
adcl
ja
push
je
sarl
xor
or
pop
insl
pop
pusha
sub
negb
jmp
int
aam
jo
loop
repnz
push
pusha
jp
test
or
sti
dec
or
cmovno
xor
fcmovb
mov
dec
je
clc
lds
stos
push
dec
cmc
mov
shll
rcrb
pop
nop
jmp
and
push
pushf
xchg
add
inc
mov
fwait
sub
pop
data16
les
sbb
fdivl
std
fidivs
repnz
cli
sbb
add
scas
movsb
cmp
cmp
xchg
imul
imul
pusha
popf
pushf
sbb
rorl
pop
mov
adc
rcll
sbb
rorl
mov
out
add
push
gs
mov
and
adc
mov
mov
push
jge
lods
and
les
lds
mov
pop
pop
and
sarl
xor
add
sbb
movsl
jno
fbstp
icebp
mov
jnp
push
xchg
push
movsl
fucomip
ljmp
lods
mov
mov
insl
test
imul
fcmovnb
lods
mov
mov
adc
push
mov
push
push
pop
popa
leave
sbb
or
pop
out
xchg
int3
push
stos
jg
popa
and
pop
in
cmp
pop
sub
push
outsl
cmp
push
and
mov
out
cmp
scas
mov
sub
int
xchg
out
dec
xchg
and
push
loop
sbb
jnp
mov
jl
test
cmp
dec
jg
das
sbb
cmp
sbb
out
outsl
sti
jecxz
idivl
or
mov
pop
jmp
add
lahf
test
insl
and
pop
add
ljmp
inc
popf
jbe
lret
push
jnp
sub
sbb
pop
pop
pop
mov
loop
hlt
movlps
mov
sub
sub
dec
xor
add
sbb
shll
testb
mov
mov
lock
ss
cmp
xchg
inc
test
cld
inc
fistl
arpl
out
and
sbb
push
outsb
cmc
insb
dec
rcrl
cli
sti
jns
dec
and
jo
lds
xchg
xchg
cmc
bound
out
add
mov
in
xchg
sub
pop
out
sarb
icebp
popa
nop
xchg
add
mov
dec
adc
or
xchg
push
adc
clc
mov
jle
rorl
outsl
shlb
in
hlt
sbb
sbb
dec
jmp
aas
jns
clc
ret
mov
ss
test
cmp
out
adc
xchg
add
jp
addr16
mov
cmp
mov
jo
dec
clc
orl
push
inc
mov
pusha
ficoml
add
xor
or
adc
xchg
lret
rcrl
popf
pop
fsubrl
inc
mov
add
push
out
push
push
mov
sub
xabort
icebp
jo
dec
repnz
out
sbb
das
lods
loope
mov
nop
xlat
out
in
ljmp
add
inc
rolb
cmpsl
test
mov
fistps
pop
shrl
imul
lret
shll
clc
xchg
push
inc
or
loop
sbb
das
xchg
jns
popa
test
add
rorb
das
add
mov
scas
cltd
xchg
and
jle
shlb
bound
inc
xchg
dec
mov
test
add
pop
hlt
pop
sbb
pusha
outsl
or
sbb
lret
mov
lds
mov
sti
sub
stos
insl
jge
inc
pop
mov
xorb
mov
and
das
rolb
xchg
xchg
inc
mov
lea
cmp
enter
out
scas
xchg
cs
xor
test
int3
cmp
and
xor
cmp
je
lds
jbe
lea
insl
xor
sub
out
loope
and
jo
imul
sub
enter
mov
adc
scas
sbb
int3
mov
pop
mov
movsl
xchg
lret
std
and
je
inc
imul
dec
in
pop
mov
out
adc
push
add
mov
sar
test
mov
adc
mov
addr16
notl
lds
sub
imul
pusha
leave
nop
cli
mulb
pop
push
inc
fsts
and
lods
sti
test
and
jl
and
gs
sbb
ss
rorl
mov
orl
leave
xor
out
mov
repz
sub
jbe
cmp
push
cmc
pusha
ret
pop
lret
dec
fs
je
adc
dec
fwait
sub
or
or
outsl
pop
push
rcrb
pop
mov
out
mov
mov
jbe
negl
mov
inc
inc
or
pop
shrb
push
pop
dec
add
in
sbb
adc
arpl
outsb
cmpb
jecxz
subl
ljmp
inc
dec
mov
inc
in
in
xor
sub
bound
push
stos
add
inc
xlat
pushw
fistl
xchg
jge
sarl
mov
push
mov
loope
jno
outsb
mov
adc
mov
and
xchg
xchg
cmc
sub
ljmp
int
pusha
dec
dec
das
xchg
sbb
and
or
push
pop
dec
push
push
stc
cli
sbb
aaa
leave
inc
mov
rorl
test
pusha
or
lods
pushf
sti
test
sti
xor
arpl
les
jbe
xlat
nop
lret
and
popa
xchg
dec
shrl
pcmpeqw
pop
or
inc
adc
dec
out
jle
dec
sbb
xchg
mov
adc
cwtl
pop
mov
push
lcall
pop
rorb
cmpl
rclb
and
btc
dec
stos
lea
iret
lea
fdivl
mov
lods
out
push
stos
rep
jb
mov
lret
push
mov
lcall
push
stc
inc
jne
inc
push
lcall
push
into
in
dec
mov
call
aad
push
and
fdivl
sub
adc
imull
rcll
push
push
test
fidivs
mov
lods
mov
popa
adc
inc
add
cmp
inc
cli
jmp
pop
rcll
add
stos
mov
adc
xlat
sbbl
stos
add
nop
adc
mov
pop
subl
mov
loopne
into
ljmp
push
and
and
push
add
mov
inc
test
rol
andl
enter
clc
hlt
and
sbb
rolb
and
sti
xchg
add
mov
js
stc
stc
adc
icebp
mov
mov
jl
add
out
xlat
push
fcmovb
repz
pusha
sbb
mov
xchg
nop
push
mov
mov
pop
rcll
mov
ja
inc
mov
and
cmp
xchg
xchg
mov
mov
fnsave
dec
pop
fnstenv
xchg
inc
dec
xor
push
cmpsb
sahf
cmpsl
adc
mov
insb
and
dec
and
ficomps
push
xchg
insl
sbb
jg
enter
cmp
pop
stos
imul
lea
int3
add
inc
sbb
scas
dec
inc
and
push
cmp
or
xchg
bound
sub
pushf
add
int
jmp
cmp
cltd
or
popf
inc
xchg
aam
scas
push
xchg
mov
pop
and
aas
pop
pop
adc
cmp
jmp
xor
push
call
cmp
pop
and
test
jp
mov
pop
mov
shll
cmp
sbb
push
jo
sti
mov
xchg
sbb
sub
pop
jmp
mov
inc
mov
repz
jmp
cmp
test
dec
add
test
xor
push
dec
mov
repnz
les
xor
in
les
xchg
dec
add
sbb
push
push
cmp
add
addr16
pop
mov
pushf
shrl
or
mov
mov
inc
xor
and
js
popf
sub
add
ljmp
ljmp
pusha
ljmp
addr16
mov
mov
in
xor
adc
fistl
cmpsb
or
stc
sub
jae
ds
inc
xchg
inc
dec
lds
inc
data16
test
in
scas
mov
repnz
int3
jbe
scas
gs
arpl
lret
pop
in
pop
jae
sub
repnz
cmpb
dec
or
sub
dec
faddl
fadd
jmp
mov
xchg
or
xor
ljmp
xor
or
into
scas
ja
addr16
rorb
insb
adc
or
imul
add
leave
adc
cld
mov
adc
and
inc
pop
xorb
repz
loop
pop
pop
dec
pusha
cmc
lcall
insb
loope
pop
push
fldt
inc
push
outsb
inc
sub
or
xlat
gs
enter
sbb
mov
xchg
loop
imul
xor
out
mov
or
push
clc
add
inc
addr16
cltd
insb
jge
jge
loope
add
movsl
clc
sbb
jns
mulb
xor
xlat
or
idivl
stos
cmpsl
pcmpgtw
inc
icebp
jecxz
mov
pop
and
push
fs
mov
add
out
ficoml
fidivrs
mov
mov
adc
fld
movsb
xor
nop
movsl
mov
shll
add
push
push
fldcw
leave
inc
or
inc
adc
sbb
mov
jbe
add
cmp
and
fcompl
and
inc
imul
xchg
lret
inc
cmp
out
shr
or
shll
dec
out
pop
mov
popa
int3
mov
jnp
push
pop
loop
in
mov
lds
push
mov
movd
push
mov
dec
bnd
or
jo
loopne
dec
loopne
mov
cmp
mov
jno
jmp
add
js
dec
inc
cmp
add
lret
jns
mov
jne
fldcw
repz
mov
xor
push
fwait
cmp
out
test
jmp
fs
lcall
pop
add
adc
mov
push
jmp
add
adc
clc
push
in
push
imul
adc
lods
lock
in
pop
mov
inc
loopne
mov
popf
adc
mov
frstor
mov
xor
sahf
testl
push
xor
cmp
cli
inc
pop
rorb
fwait
sbb
jmp
and
div
sub
xchg
push
xchg
insb
ret
imul
pop
je,pn
inc
fiadds
lods
lea
mov
jbe
pop
cmpsb
movsl
and
or
sbb
sbb
std
pop
cmp
push
pop
pop
mov
xor
call
xchg
push
icebp
arpl
inc
mov
cltd
dec
popf
inc
cltd
out
xchg
add
sub
shlb
ja
btc
inc
inc
fsub
jbe
add
test
or
mov
xor
pop
push
add
clc
add
out
jae
dec
xchg
in
stos
mov
stc
cmp
inc
aam
gs
push
es
push
hlt
xchg
scas
mov
xchg
xor
add
stc
ret
sbb
jmp
inc
jle
lds
jle
mov
out
push
test
sbb
inc
mov
insb
xchg
test
jns
push
je
fiaddl
mov
xchg
fwait
movsb
jo
xchg
sub
hlt
xchg
inc
sti
inc
scas
mov
sbb
cmp
or
je
out
adc
push
lock
mov
and
mov
dec
daa
rclb
sub
dec
js
jne
push
and
mov
in
add
push
ds
add
mov
rclb
sahf
pop
xor
mov
mov
insb
lret
pushl
sbb
loop
das
pop
pop
push
imulb
stos
push
push
cmp
roll
loopne
lret
inc
daa
jg
adc
test
lock
out
lds
ret
sar
push
push
outsl
sahf
pop
and
sub
mov
inc
in
aas
adc
fwait
adc
jns
inc
xchg
stos
add
xchg
int
mov
adc
aaa
or
pusha
call
sub
lock
jno
adc
or
in
lahf
loop
inc
bound
xchg
xor
cmp
leave
enter
pop
aaa
push
sbb
mov
jnp
bound
mov
mov
nop
loopne
in
adc
out
ret
sub
cmp
mov
mov
out
rcrb
adc
add
xchg
push
jbe
pop
mov
xrelease
xchg
mov
xchg
xchg
dec
std
test
mov
out
into
out
scas
in
ret
mov
ror
iret
adc
adc
fildll
add
cs
arpl
sbb
xchg
mov
or
cmp
movsb
cli
xor
inc
xchg
mov
loope
mov
adc
and
xlat
xchg
sub
adc
sub
mov
int3
cmp
jo
daa
mov
loop
sub
inc
aad
or
inc
mov
pop
mov
cmp
hlt
loop
insb
and
js
mov
push
mov
sbb
jnp
movnti
cmp
loop
xchg
push
ret
in
cmpsb
les
lret
loopne
adcb
mov
adc
mov
in
cmc
xchg
and
pop
scas
xor
adc
mov
insl
lea
movsb
cmp
mov
inc
add
adc
adcb
add
arpl
mov
mov
and
lret
dec
mov
enter
dec
clc
jbe
jg
and
fsubrs
or
cmp
test
adc
stc
pop
cmp
sahf
xor
ret
push
repz
movsb
push
iret
mov
dec
fsts
mov
outsl
sbb
xor
decl
adc
inc
sub
lods
xchg
loope
jns
shlb
loopne
shl
pop
and
orb
push
fldt
mov
sub
pop
dec
pop
in
adcb
lret
stos
imul
leave
loope
loop
pop
ljmp
mov
leave
lcall
mov
sub
shl
add
pop
add
sbb
add
add
movsl
xchg
sti
xchg
mov
add
cwtl
call
fwait
rclb
pop
rcrb
and
inc
cmpsl
test
imul
popl
inc
xor
not
xor
push
out
cld
cmpsl
mov
adc
mov
mov
push
in
inc
pop
ljmp
shrl
sbb
hlt
mov
sbb
stos
pop
cld
notb
iret
std
xchg
cmpsb
adc
dec
std
xchg
lret
mov
in
mov
or
sahf
test
jno
iret
xor
stc
inc
dec
bound
adc
test
sarl
sahf
xchg
movsb
cmp
shlb
push
push
faddl
pop
sarb
cmc
arpl
data16
or
pop
jno
outsb
enter
ja
add
out
xchg
xor
dec
lds
add
mov
es
ss
dec
scas
cmp
test
dec
orb
cwtl
inc
out
insl
xor
outsb
pop
outsb
popa
sub
aad
adc
loope
add
xor
and
xor
in
shlb
jae
insb
and
mov
sbb
cltd
rolb
sbbb
sub
or
jnp
ja
in
lea
or
shlb
mov
mov
cmp
addr16
xor
pop
xorl
jbe
test
cmc
jmp
add
loopne
dec
pop
xorl
cmp
mov
xchg
bound
jae
push
test
imul
adc
das
mov
stc
pop
push
or
push
or
test
push
sarl
ret
hlt
xchg
inc
aam
cs
addb
jl
add
dec
pop
inc
add
std
test
xor
sub
int
push
inc
in
adc
lds
divb
cmpsb
adc
in
cmp
or
push
dec
pop
or
mov
imul
out
inc
pop
rcll
pop
leave
enter
xor
int3
fcmove
mov
sar
cmc
mov
das
cs
and
sub
xor
incb
cmp
pusha
je
jno
pop
push
inc
aas
shlb
jns
xchg
push
arpl
ret
dec
push
fiaddl
sbb
sub
mov
xlat
xchg
xchg
shr
pop
iret
ret
int
sbb
mov
pop
add
fldl
jne
sub
movsl
rcrb
mov
popf
push
sub
cmp
pop
shlb
xchg
pop
cmpsl
negl
loop
int3
lods
call
je
lret
jle
adc
dec
add
fbstp
cmc
adc
subl
repnz
jmp
dec
push
sbb
push
cmc
dec
mov
adc
gs
cli
ds
loopne
mov
int3
int3
pop
in
push
sbb
movsl
dec
and
iret
lds
push
in
adc
int3
push
xchg
out
mov
inc
repz
mov
push
pop
jl
jns
leave
das
scas
je
pop
iret
lret
or
loope
dec
push
repz
xchg
pop
cmp
inc
out
ss
xchg
adc
in
test
imul
or
sub
in
dec
dec
xor
mov
or
jmp
adc
sbb
orl
xor
adc
mov
xor
es
xchg
mov
fxam
movsb
les
repnz
ret
xor
outsb
inc
cmp
xchg
jmp
subb
sbb
sbb
add
daa
push
mov
subl
mov
inc
out
add
pop
xor
dec
xor
inc
pop
mov
cmpsl
data16
jmp
nop
xchg
xorb
push
mov
leave
and
xchg
mov
insl
pop
data16
daa
in
mov
les
jmp
mov
xor
sahf
stos
push
cltd
inc
mov
jmp
mov
or
dec
sub
test
sbb
xlat
aam
stc
int
push
push
out
adc
or
xchg
clc
sub
fcmovne
and
mov
and
test
mov
fiadds
adc
jno
xor
xlat
je
and
cltd
ja
xchg
jne
fcmovbe
jbe
xor
mov
and
push
push
fidivl
xlat
jp
psllw
jecxz
sbb
mov
rclb
sarb
push
add
stos
pop
pushl
xchg
xor
or
movsb
cmpsl
sbb
xchg
movsb
sti
cld
mov
lcall
stc
and
xor
std
pop
test
pop
mov
add
dec
dec
sub
inc
imull
mulb
clc
xchg
rorl
inc
arpl
jae
or
insl
cmp
xor
or
bound
popl
xor
pusha
fdivr
stos
mov
mov
pusha
add
or
mov
sbb
aam
call
subb
rcrb
aad
mov
push
push
add
into
stos
loop
arpl
cmp
dec
int3
popf
pop
sar
stos
mov
lret
aaa
mov
lods
inc
rclb
dec
jo
nop
sbb
ret
jb
repz
mov
mov
xor
sarb
lret
pushf
cwtl
aam
loopne
xor
inc
sub
xchg
movsl
cwtl
mov
jns
ja
test
sub
test
fldenv
je
pop
int3
lea
test
aam
or
loop
mov
inc
dec
add
test
xor
mov
ljmp
stos
out
pop
popa
sbb
mov
shll
add
fwait
loopne
std
sbb
dec
in
cmp
scas
xchg
int3
dec
sbb
popa
sbb
mov
jae
and
out
cwtl
lea
cmpsb
aas
mov
push
outsb
stos
loopne
clc
pop
outsl
dec
pop
adc
cltd
and
mov
push
and
idivb
jge
dec
add
test
dec
push
lds
jae
jnp
inc
adc
pop
mov
jmp
mov
scas
and
mov
lods
es
and
rorb
rol
jmp
test
cmp
cmp
xor
push
fnstcw
push
sub
sbb
repnz
mov
out
pop
lea
arpl
or
inc
push
and
mov
loopne
scas
aam
jg
nop
mov
sti
loopne
xchg
arpl
cmp
ds
in
clc
js
push
add
jb
cmpsb
dec
inc
mov
out
pop
adc
push
pop
lods
pmaxsw
sahf
fildll
jae
mov
add
fs
and
xchg
adc
cmp
cmp
test
std
imul
outsl
daa
adc
stos
or
test
fists
add
sbb
jl
push
fstpl
enter
sub
test
mov
mov
or
cmc
jp
sbb
hlt
dec
aad
outsl
mov
inc
lea
add
outsl
out
into
ficomps
mov
xchg
inc
sub
jno
ds
sahf
outsb
xor
push
adc
sbb
push
dec
xchg
mov
scas
push
les
cmp
imul
jns
cmpl
xchg
scas
mov
fidivrs
push
mov
pop
out
xor
mov
jecxz,pn
pop
popa
push
test
or
adc
and
inc
ljmp
cmpsb
movsl
dec
fs
push
sub
cmp
lcall
inc
mulb
out
cmp
push
scas
mov
jns
sahf
pop
mov
daa
dec
jl
das
shll
jns
ja
ret
jns
inc
test
dec
add
addr16
sub
cmp
sbb
jne
mov
idivl
and
popa
pop
or
cs
fsubrl
stc
xchg
inc
push
mov
adc
adc
dec
mov
enter
mov
push
or
lds
orb
bound
mov
outsl
add
fstpl
cmpb
dec
inc
popa
adc
add
mov
mov
push
repz
into
adc
jge
pop
inc
stos
add
fldenv
cmpsl
xor
movsb
in
sub
dec
pop
push
xlat
cmp
hlt
or
xor
mov
mov
cld
pusha
push
xchg
mov
test
jns
mov
push
icebp
dec
and
mov
cmpsb
aas
repnz
repz
cmp
sbbl
fcompl
cmp
cmpb
push
push
mov
xchg
ja
adc
cld
shl
sti
enter
repnz
pop
push
rcrl
pusha
mov
xor
inc
xor
cli
or
pop
inc
shll
mov
enter
adc
push
scas
jo
jne
rcrl
cmp
pop
add
dec
cmpsl
jae
xchg
cmp
inc
jo
bnd
je
popa
lock
mov
adc
dec
jne
push
dec
sub
or
pop
jp
out
mov
cmp
nop
sub
jle
js
inc
cmc
mov
sub
jns
and
and
insb
cmc
add
xchg
in
jge
mov
lea
xchg
bound
pushf
lods
imul
sbb
int
add
xchg
xchg
mov
pop
fisttpll
lods
xchg
cmp
js
loope
ds
dec
or
inc
es
das
xchg
pop
jno
ljmp
jl
mov
idiv
aaa
dec
aas
pop
jp
inc
fwait
mov
mov
ds
dec
int
inc
popf
out
inc
sbb
inc
mov
stos
fwait
cld
es
push
pusha
shlb
insl
les
insl
roll
sbb
subl
sub
add
cltd
jnp
cmc
push
js
inc
sub
sub
cli
adc
dec
imul
mov
xor
cmp
dec
push
add
pop
inc
adc
pop
cwtl
rorl
adc
ja
mov
mov
add
in
pop
mov
imul
dec
stc
xchg
xor
mov
mov
addb
movsb
popf
add
push
adc
lcall
bound
fs
adc
cli
insl
cmp
test
lock
add
or
pop
push
xchg
and
insl
stos
add
adc
pop
sub
add
inc
xchg
add
cmp
ljmp
out
mov
rcll
xchg
push
jne
dec
inc
loop
fsubrl
pop
push
pop
xchg
out
and
xchg
inc
sbb
sbb
dec
pop
sub
clc
push
pop
leave
gs
inc
stc
and
call
mov
sbb
sub
pop
arpl
cmp
sahf
in
adc
sub
dec
add
mov
sbb
repz
and
mov
or
cwtl
add
mov
sub
mov
movsb
sub
adc
stos
fdivr
sbbl
nopl
insl
dec
movsb
xor
loop
pop
pop
dec
xor
in
cmp
loope
cs
cmpsb
and
mov
add
test
inc
ljmp
jo
sbb
add
stc
std
mov
cld
fisubrl
scas
sbb
imul
cld
xor
fs
je
insb
xor
pop
call
sub
stc
stos
jnp
notb
rol
test
sarl
inc
iret
jmp
mov
xchg
or
lods
fcoml
mov
dec
adc
shr
cmp
test
jle
imul
ss
pusha
decb
sub
fisubrs
test
mov
dec
adc
mov
adc
xchg
mov
shl
ret
shrl
inc
xchg
lods
lret
insb
arpl
loope
aad
stos
out
cmp
scas
pop
insb
mov
int3
sub
and
jnp
mov
movsl
add
sti
andl
pop
lods
jae
in
cmp
icebp
mov
xor
push
scas
push
mov
adcb
rcrl
cmp
add
into
scas
mov
jle
dec
sbb
sbb
sbb
mov
add
xor
push
xor
fsubrs
clc
cmp
jle
xchg
ja
in
pop
repz
mov
frstor
or
mov
xchg
push
decl
mov
push
test
flds
test
popa
hlt
pop
bound
daa
loopne
adc
insb
add
fnsave
mov
dec
test
cmp
push
mov
out
cmp
pop
add
xchg
mov
jmp
inc
test
push
or
fldt
and
mov
mov
insb
cmpl
lods
push
or
fcoms
pop
test
test
sti
jg
cwtl
mov
or
data16
cwtl
dec
cmp
xorl
sarl
aaa
mov
jle
loopne
or
inc
dec
mov
daa
imull
jg
jns
or
pop
mov
inc
lock
jno
and
push
into
mov
fdiv
out
arpl
pop
push
shl
jbe
inc
scas
mov
test
rcll
sbbb
push
mov
sub
xchg
and
xor
sub
shr
daa
jp
jp
mov
dec
mov
cmp
out
push
stc
aad
imul
pusha
gs
es
inc
movsl
inc
add
push
inc
fsubr
stc
xor
rcrl
int
shl
xor
xor
pop
add
adc
push
sub
int
push
shrb
outsb
ja
jno
dec
inc
inc
push
push
cli
adc
in
mov
mov
and
shll
rcll
repz
sbb
stos
mov
push
or
addb
xchg
sub
jl
or
hlt
test
sub
test
hlt
adc
rcl
pusha
dec
add
adc
inc
pop
les
mov
stos
adc
mov
dec
inc
sahf
add
add
and
cli
insb
jmp
nop
pop
add
ret
mov
and
into
daa
loope
bound
call
adc
cmp
mov
xchg
dec
movsb
mov
push
rcrb
lea
jne
lcall
stos
and
dec
sub
push
xchg
jge
aad
jmp
in
inc
mov
repnz
mov
shll
bound
cmpsb
test
adc
in
xlat
and
xor
sub
bnd
leave
mov
adc
inc
xchg
and
imul
dec
mov
jns
daa
arpl
jo
mov
pop
mov
mov
cmp
loop
enter
push
rorb
push
test
stc
cli
aas
out
mov
hlt
inc
in
cli
nop
stos
stos
test
jle
push
je
or
in
shll
sahf
mov
or
clc
jl
cmp
imul
leave
loop
cmc
lds
repz
mov
popa
pop
adc
xchg
out
lock
and
sbb
clc
fbld
adc
gs
aad
nop
testb
fcoml
int3
push
jbe
pop
roll
lods
aas
push
dec
xchg
xor
lahf
in
sub
mov
and
xor
push
enter
mov
andb
cs
cwtl
mov
and
mov
pxor
or
sub
aam
xlat
leave
mov
jge
mov
cmp
ds
dec
jne
daa
jmp
push
xchg
push
roll
out
sub
lcall
mov
test
bound
mov
movsb
cmp
aad
aam
mov
cmpl
cmp
jle
ficompl
push
cli
ljmp
inc
xor
lds
cmp
mov
test
jb
dec
mov
mov
lods
inc
mov
test
daa
rcr
loop
jb
or
or
mov
rorl
arpl
les
add
sbbb
stos
std
xchg
and
cmp
push
addr16
dec
jb
mov
mov
cmc
jo
jb
xchg
inc
pop
stos
lods
add
dec
loop
lret
xor
push
inc
fsub
xlat
mov
je
push
sub
es
inc
push
cmp
fsubs
shr
jne
test
cwtl
andb
push
cmp
popf
mov
xor
add
fistl
les
sub
daa
pop
jl
sub
cmp
arpl
movsl
push
cli
test
out
pop
jp
out
dec
rcrb
movsb
fimull
sbb
push
push
mov
jge
sub
aam
stos
push
je
loop
and
mov
mov
dec
stc
xor
mov
jmp
jl
ljmp
mov
outsb
xorb
push
aad
dec
ss
push
enter
lcall
mov
mov
outsb
cmp
push
push
xor
pop
mov
push
pop
sbb
mov
cmp
fwait
push
lret
adc
stos
int3
sub
mov
push
mov
test
dec
sub
add
lock
out
ret
shl
push
pop
sbb
sahf
iret
movsl
mov
push
stc
xchg
test
adcb
cli
fwait
xchg
popf
pop
pusha
imul
es
cltd
xorb
and
mov
test
add
test
lcall
lds
pop
push
push
xchg
out
pop
imul
jp
andl
push
notl
adc
gs
add
inc
push
push
add
mov
add
sbb
in
jns
sarl
ds
mov
mov
setp
pushf
xlat
cli
xor
les
jmp
ror
sti
es
mov
jg
sub
dec
outsl
movsb
inc
dec
or
ss
jge
loop
mov
cmp
pop
data16
jl
dec
ss
mov
in
xor
push
popf
mov
cld
inc
sub
pop
int3
sarb
push
adc
or
adc
in
sbb
mov
mov
sbb
stos
sbb
xchg
and
and
fisubrs
test
mov
rcrb
gs
jge
cli
cli
and
xchg
std
cltd
popf
jne
sub
mov
add
outsl
into
loopne
push
mov
adc
or
mov
sub
sbb
mov
daa
adc
into
lcall
adc
vpsrad
rcrl
shr
sbb
nop
and
jo
repz
mov
sbb
shlb
inc
lds
cmpsl
xchg
inc
hlt
cmp
and
das
test
pop
or
scas
jge
fcmovu
call
lods
jmp
pop
imul
mov
rol
loope
dec
or
test
out
clc
and
dec
addr16
sahf
xorl
add
inc
push
and
adc
jl
push
icebp
movl
in
xchg
test
mov
sbb
sub
loop
or
dec
push
or
imul
fstps
and
cs
shlb
outsb
push
and
push
movsl
add
mov
loopne
adc
and
xchg
das
cld
push
push
pop
inc
repz
inc
mov
inc
xor
cmc
pop
sbb
or
mov
jb
or
or
sbb
cmp
cwtl
and
mov
jae
fwait
sub
aad
push
jbe
adc
push
ja
add
push
ret
mov
xchg
pop
sbb
mov
mov
test
add
dec
inc
push
pop
aad
cmp
xor
mov
je
inc
shrl
sbb
call
lods
xor
jno
je
subl
inc
adc
scas
sub
pop
pop
inc
and
repz
out
sub
mov
rolb
mov
cmp
cmp
repz
push
sub
scas
add
test
stos
dec
dec
mov
es
aad
shll
insb
mov
fs
aas
inc
sbb
in
sub
cltd
push
pop
shrb
aam
ja
jo
fisttpll
fwait
cmp
add
and
lds
pop
pushf
aad
jne
pushf
in
insb
jmp
std
gs
xor
stos
lahf
mov
adc
mov
mov
sub
iret
aad
inc
adc
shrl
push
pop
mov
push
xor
lahf
cltd
mov
xchg
cmp
popf
div
pop
div
mov
fmuls
adc
push
pop
and
sbb
mov
movsl
out
sub
out
in
mov
mov
mov
xchg
cmp
sbb
js
xchg
pop
pop
lret
adcl
ljmp
inc
pop
int3
ret
mov
push
jne
mov
push
dec
or
xchg
fldt
or
mov
scas
lret
pop
ficoms
ss
jmp
xlat
cld
mov
mov
xchg
sahf
xor
mov
cmc
or
fnstsw
in
leave
daa
sub
pop
rcpps
xchg
out
fdivrs
cli
fldt
stc
inc
push
inc
cltd
lods
cmpsb
out
cmp
out
int
gs
outsb
mov
mov
rcl
pop
pop
das
sbb
lea
or
out
loopne
sub
inc
scas
xlat
cwtl
mov
dec
and
xor
pop
test
test
leave
and
dec
fs
mov
add
mov
mov
adc
aad
mov
lret
mov
jmp
mull
rcrl
pop
xor
sbb
test
jae
push
xor
pop
jge
adc
dec
aaa
repz
mov
dec
push
and
cmc
pop
call
and
pushf
ja
lds
xchg
sahf
in
pop
pop
jecxz
xchg
push
push
and
sbb
mov
dec
fsubrs
cmpsb
add
outsl
jle
pop
mov
rol
es
lock
movsb
cmp
je
outsb
add
gs
subl
add
sarl
sbb
in
rcrl
repz
xchg
sarb
push
pop
movsb
push
and
fs
daa
icebp
sarl
test
ret
xchg
xchg
jo
fisttps
push
sbb
xchg
test
cmp
aaa
das
int
lea
loopne
scas
movsl
cli
mov
push
pusha
mov
cmpsb
lret
lcall
rcrl
and
and
movups
lods
pop
cmp
lock
jecxz
ror
push
push
ss
stos
push
xor
int
cmp
push
mov
shl
push
rcrb
and
maskmovq
fwait
mov
xchg
mov
fstps
cmc
inc
pop
or
hlt
mov
jl
scas
sbb
lock
mov
push
jge
nop
mov
jp
rcpps
ret
mov
cld
sub
cld
and
jb
cs
xor
xor
sbb
cmc
push
xor
gs
loope
pop
xchg
push
mov
push
mov
insl
frstor
add
jle
jecxz
pop
inc
jge
stc
sub
cmc
add
mov
scas
in
mov
rolb
outsb
jne
mov
clc
imul
cmc
in
and
sbb
mov
fldenv
push
push
lret
lds
xlat
jns
repnz
enter
cmp
into
push
push
popf
or
sub
sub
jcxz
lods
int
nop
or
rcrl
push
je
inc
mov
xchg
cmpsb
movsb
ficomps
in
out
mov
push
sub
adc
xor
rorl
js
xchg
pusha
gs
cmp
pop
xchg
dec
push
sbb
cltd
pop
imul
into
les
add
sub
iret
inc
outsl
or
rolb
mov
lret
dec
adc
xchg
sbb
stos
xor
add
jno,pn
jle
fwait
xchg
xor
sub
fwait
push
jae
cs
test
or
subb
pop
jb
vrcpss
xor
into
rcr
fbstp
pusha
dec
jae
loope
cmp
imul
inc
xor
fsubrp
out
es
rolb
gs
imul
clc
and
ja
and
out
dec
idiv
cmp
pop
fcoms
or
shll
adc
jecxz
adc
test
movl
mov
push
bound
lea
in
nop
orl
mov
fildll
add
push
dec
xchg
xchg
fisubrs
inc
fwait
cmp
mov
sti
imul
push
popa
popa
sub
in
push
mov
ja
rolb
insl
or
movsb
dec
out
cli
jmp
push
sbb
and
adc
jns
in
xchg
pop
stos
stos
lret
and
jno
loope
scas
nop
pop
mov
dec
fs
hlt
bound
adc
aad
loop
pop
fstpl
inc
cmp
cltd
into
dec
aaa
mov
xchg
pop
mov
fiadds
pop
roll
xor
call
jo
divb
cmc
mov
es
pop
lods
jns
pop
sar
adc
push
push
mov
and
ja
xchg
jne
fistpl
pop
mov
add
cmpsl
or
mulb
test
nop
mov
test
adc
shll
cmp
xor
sbb
cmp
insb
mov
les
stc
mov
mov
shlb
rorl
and
mov
dec
orl
pop
jns
int3
sti
adc
test
ljmp
fcoml
cs
sbb
movsb
clc
je
inc
push
test
and
push
sub
in
je
leave
out
sbb
push
and
and
inc
pop
in
push
push
rol
ficoms
notl
lods
mov
scas
or
lret
and
or
imulb
outsl
pop
addr16
add
aaa
mov
icebp
rorl
mov
jecxz
int
ret
lcall
ret
pushf
mov
popa
pop
popf
fsubrl
pushf
cmp
loop
loope
lods
cmp
call
jnp
cmpsl
cltd
inc
loope
jb
jne
add
das
mov
frstor
cmp
xchg
popf
fldl
mov
mov
adc
xchg
jecxz
sub
mov
adc
sub
push
das
popa
mov
jns
aas
subb
adc
xchg
ljmp
xor
fbstp
mov
pop
lods
jo
sub
cmc
dec
popf
jecxz
sbb
inc
shl
sub
lods
jg
nop
add
adc
mov
leave
xor
pusha
rcl
cld
lahf
ret
cmp
lds
xchg
mov
out
push
sti
adc
push
ret
lea
inc
inc
xlat
inc
pushf
mov
cwtl
push
outsl
ljmp
cmpsb
xchg
dec
xchg
or
jmp
push
dec
dec
or
enter
cwtl
pop
jl
push
or
dec
xlat
sti
loope
xor
out
dec
js
testl
jb
js
mov
in
aas
loop
push
in
add
test
popf
fwait
jae
dec
call
add
lock
and
sub
pop
ret
mov
ja
idivb
es
pop
xchg
call
pop
adc
icebp
mov
jl
jb
inc
cmp
icebp
mov
mov
movsl
mov
mov
jno
ja
imull
push
mov
xor
inc
mov
dec
xlat
xor
gs
pop
fcomi
pop
pop
adc
mov
loope
inc
dec
pop
xor
test
repnz
and
push
testb
push
jmp
or
sbb
fildl
xchg
std
aad
das
scas
dec
dec
jae
pushf
fs
jns
cmp
inc
jns
ret
mov
push
ret
mov
sbb
adc
push
sub
or
and
inc
fbld
add
sub
ret
dec
cmp
jge
inc
cli
mov
into
xchg
lock
out
int3
loope
dec
jge
xor
mov
incl
xor
sub
mov
fcoms
pop
cs
mov
inc
adc
pop
popf
jbe
aam
cmp
mov
inc
or
mov
loop
jl
sub
divl
jno
das
test
sbb
sub
cmp
stos
jle
fldt
sub
xchg
mov
or
stos
out
loopne
out
cmp
cli
scas
or
push
pop
pusha
push
adc
rcr
and
sub
out
mul
push
push
xchg
xchg
or
xchg
and
mov
pop
adc
adc
jl
jle
mov
push
mov
sbb
or
pop
mov
sbb
popa
mov
sbb
add
loope
sahf
pop
cmp
lods
and
loop
and
pop
and
cmp
stos
mov
sbb
and
mov
pop
mov
xor
leave
or
or
sub
or
mov
mov
out
cmpsl
sub
jne
out
jg
adc
aas
mov
cld
out
les
shll
inc
mov
add
mov
add
in
xchg
ret
int3
dec
mov
clc
addb
mov
sub
add
mov
jg
out
bound
mov
mov
xor
inc
mov
in
hlt
mov
aam
fcos
jo
in
out
xor
jne
in
lods
pop
adc
xor
or
mov
js
addr16
xor
sbb
or
inc
mov
leave
dec
adc
lods
add
jl
mov
imul
rcrl
loopne
test
xchg
js
mov
dec
sahf
sub
add
pop
gs
push
js
and
xlat
movsb
lock
mov
push
movsl
stos
jo
cmp
jmp
sub
loop
flds
test
insb
inc
pop
mov
cld
mov
mov
sub
cmpsl
and
pusha
stc
andb
inc
test
cmp
mov
inc
lods
lea
xlat
jl
push
test
mov
dec
pop
mov
cli
jle
push
outsl
mov
movsb
ljmp
adc
fstl
add
dec
std
add
mov
cmp
add
js
xchg
getsec
mov
shll
jp
movsb
clc
enter
int3
in
sbb
lahf
jmp
icebp
adc
xor
xchg
cltd
xchg
int
lods
sub
jo
into
into
xor
mov
inc
mov
adc
nop
movsl
js
adc
stc
add
xchg
jg
and
cltd
insb
sub
mov
inc
flds
scas
xor
fwait
ja
pop
xchg
adc
outsl
mov
loop
adc
lcall
incb
dec
dec
lret
inc
ss
adc
hlt
out
adc
mov
mov
xchg
mov
ror
fmull
icebp
pusha
stos
lret
pusha
loope
outsl
xchg
subb
dec
adc
xor
shlb
push
cmp
push
ds
push
sub
inc
daa
pop
loop
xchg
imul
pop
andl
cmp
jbe
or
lds
mov
ret
push
mov
lahf
movsb
out
and
mov
cld
mov
sub
testb
ficoms
pusha
add
mov
arpl
rcrl
sar
arpl
cmp
push
push
or
out
cmp
lcall
sbb
jl
jle
xor
xor
ret
lret
cmp
hlt
fistl
push
in
fidivl
push
mov
je
in
jmp
scas
cmpsl
gs
ja
sbbb
test
lret
xchg
add
mov
or
push
movsb
jmp
aam
jo
adc
pushf
jle
adc
fcomip
push
jle
pop
int3
loope
and
loope
leave
gs
or
outsl
sbb
enter
cmpsl
sbbb
jnp
je
dec
mov
bound
mov
scas
jbe
cwtl
sahf
mov
sub
or
jecxz
pop
inc
jb
pushf
andl
shll
inc
cs
and
jmp
in
xor
jmp
xchg
push
hlt
mov
mov
rcrl
insl
iret
add
mov
lret
adc
mov
sbb
inc
fwait
push
notl
and
jmp
mov
in
sub
cmpsb
xlat
and
flds
add
mov
add
mov
lds
cmp
test
popa
lods
jo
mov
fnstenv
pop
pop
mov
rcr
dec
shll
pop
inc
rcll
frstor
push
hlt
dec
dec
mov
xchg
loope
and
out
ret
adc
test
sti
xchg
sub
jb
mov
sbb
push
inc
adc
xor
cmp
push
xchg
scas
push
mov
popa
mov
pop
test
sub
cwtl
jle
loop
sub
xchg
xchg
xor
stos
adc
cmp
icebp
sbb
pop
pop
inc
or
sub
sahf
or
dec
xor
push
jne
inc
fwait
xchg
mulb
pop
pop
add
xchg
mov
jecxz
stc
jp
push
xor
xor
rcrl
test
arpl
in
int
jae
ror
insl
push
and
aam
les
mov
and
mov
mov
in
ror
inc
or
imul
subl
pop
mov
adc
xchg
bound
cmp
xchg
push
mov
or
sub
mov
xchg
fldt
pusha
in
fs
pop
cmp
fbld
ds
sarl
leave
xchg
fcomip
imul
jne
jae
inc
sbb
in
push
loop
out
jle
inc
packsswb
notb
mov
add
xchg
loope
inc
xchg
lcall
xor
pop
aaa
push
fistpl
sti
fcmovnu
imul
or
out
add
xchg
adc
inc
dec
ja
int
aad
fimull
es
aaa
jle
rcrl
pop
adc
or
std
cwtl
sbb
out
mov
insb
push
dec
lret
cmp
sub
sub
xor
clc
lahf
mov
cmc
xor
cmpsl
neg
xor
clc
ljmp
aaa
and
xor
inc
call
mov
add
xlat
inc
in
mov
jnp
loope
lds
add
xor
ss
rcrl
insb
add
pop
adc
fimull
pop
fimull
mov
imulb
xor
cmp
into
fiadds
sub
out
notb
repnz
int
inc
imul
sbb
stc
cwtl
hlt
shlb
cmc
push
and
add
mov
or
xor
test
add
mov
xchg
push
ljmp
fildll
pop
push
repnz
xor
mov
in
xor
pushl
aaa
sbb
jnp
popa
std
mov
mov
movsl
push
jnp
arpl
xchg
add
pop
mov
push
mov
fstps
mov
popf
daa
sub
mov
js
jle
mov
cmc
mov
dec
in
sahf
xor
ljmp
add
mov
outsb
lcall
loop
je
jo
scas
loope
test
data16
enter
int
sti
loopw
adc
jp
mov
jns
jmp
and
test
cmp
xor
clc
inc
pop
pop
lods
icebp
or
jnp
cmp
lds
pop
mov
imul
adc
scas
in
repz
das
sub
adc
dec
lock
lea
xchg
dec
movsl
daa
pop
push
or
jl
mul
add
fcom
sbb
xor
adc
cmp
out
fsubrl
test
xchg
out
xor
sub
sub
lret
fisttps
movb
push
mov
jo
shrb
loope
mov
add
mov
daa
push
sbb
pop
xchg
cvttps2pi
cltd
jp
insb
rcll
out
and
int3
dec
std
sbb
inc
inc
sub
pop
pop
jp
les
inc
add
and
mov
xchg
xchg
or
mov
xchg
xor
dec
mov
cmpsl
and
imul
out
push
xchg
lahf
incb
mulb
xor
push
in
push
or
pushf
add
pop
adc
push
pop
gs
or
xorb
addr16
push
jle
test
jecxz
pushf
mov
xor
adc
mov
repz
pop
int
pop
fcomps
in
push
mov
loopne
stc
gs
push
lea
mov
cmp
std
push
cmpsl
push
lods
loop
jns
dec
aad
sbb
push
cld
movb
and
xchg
and
sbb
jmp
outsl
or
dec
je
cli
cmp
shl
adc
dec
cld
sub
or
cs
pushf
xchg
xchg
and
add
dec
pushf
and
inc
data16
xor
mov
push
or
jne
mov
xchg
movsb
inc
je
xchg
cld
jl
jns
mov
test
jmp
sub
jl
xor
pop
or
xlat
jnp
pop
xchg
insl
loope
mov
fwait
fwait
rorl
inc
outsl
pop
cmp
das
sub
stos
lea
fists
popf
js
lret
add
jle
adc
addr16
sbb
adc
inc
ss
stos
or
dec
mov
popa
ss
mov
xchg
cmp
fstl
push
outsb
inc
stc
dec
and
mov
jbe
mov
adc
lcall
push
int
xchg
addr16
and
testb
jle
mov
sbb
cmp
mov
xor
dec
xchg
arpl
lret
aaa
das
imul
adc
sbb
repnz
insl
shll
jmp
sbb
xchg
mov
clc
insb
sbb
movsb
fs
sbb
add
cmp
add
inc
pop
add
test
jno
cmpb
test
sbb
lods
mov
cwtl
iret
aam
push
aam
and
mov
insl
fistps
or
adc
and
gs
sub
xlat
aad
je
inc
jae
jle
dec
repnz
dec
adc
xor
xchg
or
add
dec
xor
leave
mov
push
imul
ds
xor
ja
push
scas
xchg
jbe
sbb
int
lahf
dec
xchg
scas
mov
jb
ja
cmpsb
scas
xchg
xor
push
test
pop
xor
pop
xchg
xor
sub
and
out
inc
add
sub
push
shrl
add
shl
outsl
jmp
add
push
fstp
out
testl
jmp
mov
icebp
outsl
mov
test
xor
push
fsubrl
mov
fs
xchg
shr
lret
jbe
jbe
lahf
lahf
test
shll
loop
sub
add
push
psubb
mov
xor
loop
iret
xchg
push
aaa
jae
test
popa
arpl
xor
xor
inc
inc
mov
xlat
aam
xor
dec
in
bound
addb
lea
or
xchg
inc
mov
mov
mov
push
add
and
jbe
lea
addl
add
mull
pop
incl
popl
insl
shlb
cmpsb
mov
mov
out
or
jo
push
fisttps
test
int
popf
mov
or
inc
out
rorl
ja
push
push
pop
xor
fistps
les
test
stos
add
mov
out
out
lock
popf
or
add
subb
pop
mov
jge
fnstenv
and
jb
pop
test
les
xor
push
loop
out
loope
ret
xor
adc
mov
shrl
xchg
rolb
lds
and
inc
out
ja
mov
jle
adc
inc
fstpl
sbbl
insl
imul
sub
jae
push
clc
sbb
in
mov
ja
jl
in
mov
xchg
dec
aad
outsl
push
outsl
cmp
adc
test
mov
lret
test
outsb
repz
movsb
adc
aas
add
cld
mov
cmpsb
pop
pop
repz
mov
inc
mov
ljmp
add
and
adc
call
je
cltd
pop
ss
aam
xlat
inc
fcomps
jge
cltd
jg
movsl
xor
xchg
add
xor
movsb
cltd
adc
lock
dec
adc
or
sub
pop
test
xchg
jp
sub
jge
mov
pop
ficomps
mov
inc
loopne
or
mov
or
cmpl
mov
xor
and
ret
orb
lret
or
imul
pusha
sbb
pop
mov
clc
aas
jmp
addr16
pusha
sbb
imul
das
test
sub
pop
mov
into
lea
mov
or
xor
loop
jg
or
lods
movsl
push
cmc
sbb
sarl
pop
hlt
aam
dec
aas
bound
dec
cmp
cmp
sbb
push
sub
test
lods
and
enter
dec
or
stos
xchg
rcl
cld
leave
enter
mov
sub
dec
adc
jbe
stc
lahf
and
aam
movsl
push
rorl
push
imul
mov
adc
repnz
mov
stos
stos
mov
inc
mov
xor
xlat
test
pop
emms
aam
loop
incb
inc
cmpsb
add
fldcw
lahf
dec
sbb
je
adc
mov
into
test
cmpsl
or
loop
add
int
pop
xor
push
adc
cmp
adc
rorl
ret
sahf
mov
fistpl
insl
cli
xor
sti
xor
pop
push
mov
mov
dec
xchg
xor
stc
rcrb
ret
daa
andl
subb
orb
pushf
adc
lds
sbb
inc
or
cmp
xor
negl
imul
add
ja
loopne
jne
mov
ret
xor
or
pusha
ret
inc
pop
xorl
out
mov
fidivrl
push
jle
addb
repnz
jl
push
sbb
push
fucomip
loopne
outsb
adc
fidivs
xlat
xor
lods
pop
je
lds
push
lods
xor
outsl
sbb
inc
in
pop
add
cmp
and
xor
jecxz
adc
out
scas
lock
test
jae
jb
ja
mov
ds
xor
mov
add
xor
cli
cmp
mov
fs
pop
and
test
add
xchg
jg
mov
push
and
and
push
inc
xor
sub
jle
cmc
fisttpl
mov
fsub
mov
sub
dec
jp
jecxz
push
jb
repz
and
xchg
call
sbb
test
mov
mov
xchg
and
loope
lcall
jge
decl
push
pusha
jo
xchg
jmp
mov
xchg
push
sar
mov
push
cli
mov
adc
outsb
dec
xor
mov
sbb
mov
cltd
adc
mov
pop
xor
ret
push
orl
popf
pop
aaa
dec
shlb
test
xchg
cltd
and
loopne
stos
nop
sbb
outsb
xchg
mov
inc
je
jbe
loopne
gs
mov
bound
dec
and
in
push
pop
and
inc
repnz
mov
xchg
xor
rcll
ss
loope
adc
lea
cmp
fs
leave
loope
mov
subb
insb
mov
aas
inc
mov
or
dec
jp
js
repz
and
sub
xchg
sbb
inc
mov
cmp
sub
mov
inc
mov
decl
jg
push
fnstcw
push
xchg
jae
or
sahf
push
pop
daa
orl
fisttps
movsl
push
int3
cmpsl
jle
shrl
shrb
dec
rcll
dec
repz
shlb
sub
mov
mov
cmp
js
xchg
mov
sub
sub
add
mov
sub
or
pop
insl
cmp
movsb
cmp
fldenv
sub
std
pop
clc
sub
repnz
ds
cmp
xchg
and
sbb
movlps
arpl
xchg
sarl
sbb
mov
xor
xor
ljmp
mov
add
imul
test
xchg
andb
pusha
mov
cs
sbb
cmp
sbb
push
mov
rclb
sarl
clc
fidivs
or
sbb
aas
mov
aam
xor
pop
xchg
daa
pushf
cmp
xor
cmp
cmp
adc
pop
or
test
cmp
sbb
pop
ss
stc
stc
mov
inc
shll
pop
mov
fwait
aam
xor
inc
add
or
pop
out
fnsave
xchg
pop
nop
jbe
jl
lods
inc
xor
jp
push
es
pop
lods
jbe
pop
pusha
in
xchg
mov
rclb
je
pop
dec
push
xor
enter
pop
ret
inc
jmp
pop
fst
jns
jnp
rorl
icebp
dec
cmc
roll
mov
inc
sbb
icebp
xor
bound
jbe
push
and
jge
in
sub
je
dec
sar
dec
hlt
inc
fwait
push
hlt
mov
mov
test
scas
and
pop
je
pop
mov
aad
push
fwait
pushf
inc
iret
test
cltd
in
aam
fistl
lcall
stos
pop
sub
fsubrs
std
stos
xchg
movsl
push
and
fisttpll
mov
or
pop
int3
pop
xor
in
int
ss
push
aaa
inc
inc
push
and
addb
nop
pop
shll
aaa
andb
outsl
ja
in
das
rol
xor
in
or
outsb
pusha
sbb
icebp
jno
mov
add
xchg
mov
in
in
cltd
fwait
push
pop
in
mov
mov
pop
inc
cmc
ds
dec
out
adc
jne,pt
imull
inc
jge
clc
mov
jp
int
pop
jg
rcll
popf
mov
testl
insl
and
mov
addb
pop
fadds
ds
scas
jne
adc
jbe
pop
insl
pushf
add
dec
dec
shrb
insb
mov
dec
cltd
add
in
cmp
int3
mov
mov
sub
addr16
jae
pop
mov
xchg
lods
bound
mov
cmp
dec
adc
pusha
push
add
sub
mov
cmp
mov
pushf
aam
xchg
cmpsl
int
rorl
punpcklwd
test
sub
cmovle
ja
cmp
jg
and
inc
out
test
stos
mov
popa
jmp
out
sahf
mov
pop
cli
inc
xor
xor
jbe
add
pop
xor
mov
int3
adc
mov
arpl
xor
ss
or
imul
cld
push
mov
scas
xchg
insl
xlat
jns
fs
push
mov
sub
jns
in
stc
std
in
js
andb
les
aaa
mov
cld
add
sbb
sbb
push
lods
jo
inc
orb
and
cmp
jb
shlb
lods
cmp
incb
xor
lods
in
shrl
pop
movsl
cltd
lea
sbb
adc
dec
cmp
and
mov
mov
lcall
xchg
jae
xorb
mov
shll
loopne
enter
loopne
cltd
and
jno
aaa
in
inc
push
test
dec
mov
push
mov
scas
xchg
inc
mov
mov
jmp
maskmovq
popa
insb
sbb
sbb
scas
xchg
mov
outsl
and
addl
mov
adc
mov
into
mov
jae
test
mov
pop
out
mov
mov
push
inc
in
sub
push
inc
leave
ss
lea
sbb
mov
inc
hlt
push
fdivl
addr16
dec
repz
loope
adc
outsb
mov
cmp
dec
dec
xor
push
push
mov
sbb
xlat
or
inc
xchg
and
xchg
and
xor
lret
mov
cmp
cmpsb
scas
mov
in
xchg
loopne
xchg
xchg
scas
sub
cmc
call
mov
dec
sti
mov
cld
pop
push
jne
inc
lods
sbb
sbb
and
inc
inc
dec
out
adc
dec
pop
and
jmp
add
and
mov
jle
sahf
loop
xchg
mov
pop
inc
sbb
rorb
popa
movsb
xchg
inc
loope
fwait
cld
scas
movsb
sbb
push
outsb
aaa
dec
inc
xchg
mov
pop
sub
sbbb
cmpsl
xchg
sub
pop
add
push
fs
xchg
xchg
mov
cwtl
aad
loop
ret
mov
mov
inc
je
lcall
imul
mov
loopne
cmc
int
dec
insb
cmp
mov
pop
pop
cli
inc
aaa
das
loopne
lea
out
sub
jge
frstor
fdivl
cmp
xchg
jns
dec
ljmp
inc
popa
mov
scas
xchg
mov
mov
leave
and
lret
int
sub
ljmp
fdivl
mov
push
push
xchg
push
mov
mov
or
ss
mov
xchg
jl
mov
aaa
push
xor
popf
popa
xor
mov
imul
xor
mov
loope
imul
aas
out
pusha
es
sub
lret
adc
movd
sub
inc
into
pop
lock
sti
add
xlat
lds
repnz
ds
xor
lahf
adc
adc
pusha
push
mov
mov
sub
and
test
jle
dec
push
mov
aad
out
ss
fadds
int3
lahf
mov
lock
arpl
mov
or
push
dec
inc
aaa
in
lea
xor
repz
std
sbb
ffreep
pop
adc
pop
mov
int3
xor
or
push
ja
adc
into
aaa
push
dec
lds
jae
sbb
jb
push
pop
faddl
popf
and
xchg
icebp
shll
or
and
nop
lds
push
adc
hlt
outsl
add
sbb
mov
ss
push
fldenv
jns
lret
lcall
and
cld
leave
or
or
adc
xor
mov
outsl
aam
lahf
push
jmp
aad
lods
lea
lods
outsw
cmp
mov
imul
xchg
xchg
xor
mov
push
adc
push
adc
cmp
pop
repz
lods
out
pop
cmp
testl
push
pop
or
sub
or
xor
xchg
pop
jne
sbb
movl
xor
lcall
push
mov
lcall
rcrl
xor
or
mov
jecxz
jns
pusha
pop
add
or
out
loopne
out
xor
lret
pop
and
fidivs
ret
hlt
dec
dec
in
xor
dec
jmp
push
sub
sbb
push
fisubrs
pop
mov
daa
sub
sub
inc
xor
sub
sub
ljmp
adc
outsb
pushf
call
addl
icebp
fs
sbb
fidivs
lock
shrb
iret
xor
scas
popf
cmp
pushf
popa
dec
pop
cwtl
pop
lods
fwait
sub
leave
scas
push
in
add
clc
cmp
into
xor
or
pop
cwtl
inc
gs
push
stos
mov
movsl
mov
scas
lret
cmp
mov
jp
lea
aam
dec
push
outsb
inc
stc
sub
xor
jae
adc
push
jo
jl
mov
aad
xchg
adc
jmp
insl
ret
aad
fbld
or
sub
adc
sub
sti
xor
sti
addr16
jmp
jge
mov
out
icebp
cmp
mov
mov
ret
cltd
dec
cmp
add
inc
push
adc
rorb
fisttpl
pop
and
jecxz
jp
mov
cmp
loopne
testl
call
pop
scas
dec
loope,pt
dec
movsb
sahf
call
nop
xor
pop
mull
sub
test
or
out
push
lret
jmp
outsb
add
mov
shrb
rsqrtps
xchg
adc
push
pop
bound
xchg
sub
cmc
push
ss
outsb
lret
fs
repz
push
xchg
out
movsb
adc
ret
mov
leave
mov
ret
jp
enter
rorb
mov
in
stos
sahf
adc
mov
xchg
call
push
or
scas
sbb
ss
iret
jge
jbe
fsubrl
ret
repz
cmp
popl
repz
stc
mov
jne
mov
popl
or
mov
fstpl
dec
jae
out
frstor
or
stc
push
fdivrs
push
ret
hlt
cltd
xchg
fwait
imul
or
arpl
xchg
das
adc
popf
push
in
adc
jns
jae
xchg
pop
jae
stos
icebp
lret
jmp
stos
mov
cmpsl
xor
popa
lds
inc
jae
insl
and
add
shlb
mov
rcll
dec
mov
test
jae
inc
filds
cmpsb
jno
xchg
jl
xor
dec
dec
xor
neg
ds
and
sub
jns
addr16
sub
fs
adc
cmp
imull
mov
into
nop
and
addl
lods
xor
adc
inc
pop
inc
icebp
pop
adc
nop
std
cmp
int3
addb
jle
filds
push
sbb
insb
loopne
dec
jmp
out
fmul
adc
gs
push
icebp
or
mov
sub
and
js
push
mov
outsl
push
mov
xor
testb
cmpsb
mov
stos
add
aas
xchg
int
push
mov
fidivs
cmpsl
push
mov
subb
mov
jl
add
mov
xchg
scas
and
sbb
jmp
xor
lods
lods
lds
je
mov
or
push
movb
jne
push
inc
mov
and
and
repz
out
adc
inc
cmp
jge
adc
mov
xchg
pop
ljmp
repz
insb
test
repz
xchg
rorb
stc
and
cmc
rorb
jmp
pop
rorl
or
cs
dec
jl
sub
lods
int
pop
adc
ret
ja
and
jno
adc
std
push
cld
js
pop
or
aam
inc
mov
sbb
rorl
roll
and
sub
mov
cmp
das
pop
mov
push
add
mov
dec
xor
cmpsb
test
rclb
dec
xor
jo
mov
faddp
adc
jbe
loopne
add
or
add
cmp
clc
xor
pushf
sbb
adc
stc
mov
cmc
inc
in
stc
add
mov
stos
pop
dec
mov
pop
outsb
inc
dec
jb
mov
pop
rclb
mov
int3
cli
pop
lcall
xchg
jl
sub
sub
fnstcw
popf
xchg
mov
jl
in
scas
stos
leave
jp
sahf
mov
sbb
cmpsb
je
xor
mov
push
stos
ljmp
xor
insb
jge
ret
push
or
sahf
adc
lret
or
push
sarb
mov
jmp
jecxz
jle
lock
orb
mov
into
add
sahf
cmp
sahf
movsl
test
inc
pop
decl
stos
jg
insb
scas
fwait
int
pushf
lods
repnz
sbb
pop
inc
xchg
mov
push
mov
mov
inc
lock
cmc
mov
test
lret
or
daa
adc
and
add
out
xchg
scas
xchg
cmp
movsb
mov
loope
or
in
xor
mov
jp
inc
inc
sub
lahf
insl
mov
push
hlt
cmpsl
push
pushf
adcl
pop
push
mov
push
imulb
std
pushl
lds
sub
nop
mov
sbb
mov
cmpl
loop
ja
in
int
fwait
mov
rep
mov
add
shll
pusha
mov
shrl
std
pop
filds
hlt
jb
sarl
jmp
imul
sub
sahf
bound
xor
and
addr16
mov
ret
testl
jne
sar
mov
sub
pop
int3
push
sbb
inc
std
aam
pop
movsb
fbld
int
mov
sub
pop
repnz
dec
inc
mov
pop
sahf
test
outsb
or
iret
jno
xchg
dec
adc
inc
add
fisttpl
and
test
ret
add
dec
lods
mov
frstor
fs
dec
sarb
nop
ficomps
test
sbb
jge
mov
adc
loopne
mov
add
fstps
rcll
jb
push
es
sar
mov
inc
jo,pt
out
int
push
cld
pop
mov
insl
imul
mov
pop
push
scas
in
aam
mov
push
add
and
mov
push
push
gs
inc
sbb
int3
mov
mov
cld
mov
jecxz
push
add
test
mov
push
pushf
insl
xor
cltd
stc
cmpsl
and
mov
je
inc
into
leave
es
lea
mov
xor
and
test
push
add
aam
arpl
xchg
sub
cmp
adc
push
jle
fsub
clc
inc
ret
fistpl
xor
aad
movsl
push
jecxz
gs
mov
js
das
push
mov
sbb
jno
dec
int3
adc
lahf
movsl
in
je
sbbb
adc
test
push
sub
jae
fimull
sub
jmp
movsb
mov
mov
adc
fdivl
sbb
ds
pop
int
stos
shlb
negl
out
xor
mov
mov
push
sar
cs
sbb
add
dec
fmuls
pop
sub
add
push
fisubrs
jecxz
mov
sti
jbe
jg
pushf
popf
dec
jne
sbb
jecxz
fmuls
mull
cmp
in
cmp
das
sbb
jmp
fs
div
push
loop
lea
or
je
mov
cmp
lahf
aas
jns
outsb
push
pop
andb
mov
xlat
ret
inc
js
sbb
std
mov
pop
xchg
lret
sub
xlat
cmpsl
rolb
adc
mov
and
mov
cmp
jecxz
push
ficomps
bswap
pushf
loop
mov
pop
or
movl
cmp
es
xchg
jmp
mov
mov
mov
pop
sub
out
loope
shlb
xchg
jle
push
mov
dec
fistl
ret
inc
fst
pusha
notl
shll
or
adc
roll
lret
xor
fmull
ljmp
stos
pop
call
jg
pop
or
repz
aas
xchg
inc
mov
sub
pushf
jae
xchg
scas
xchg
in
add
shlb
mov
sub
pop
out
xor
iret
int3
lods
repz
out
fs
addr16
push
into
add
and
add
imul
xor
into
test
jnp
outsb
rol
cld
iret
jge
push
xchg
or
je
gs
int3
fdivrs
sbb
bound
aaa
jno
std
jmp
stos
xlat
mov
xchg
shrl
stos
dec
popa
and
and
mov
jmp
sbbl
imul
mov
insl
push
pop
pop
nop
insl
lods
lret
pop
jbe
push
jae
sahf
popa
jns
mov
adc
or
ja
loope
into
cwtl
lahf
push
push
cmp
cs
divb
and
cs
sub
out
out
or
push
pop
xchg
cmp
fwait
out
jp
dec
inc
xchg
rcll
and
lea
xchg
call
fwait
inc
and
fsub
sbb
add
and
stc
mov
cmpl
push
and
cli
cli
sbb
ds
or
pop
xchg
jg
aas
mov
pop
dec
test
fwait
pusha
mov
ret
fwait
push
jns,pt
or
dec
xor
je
std
xor
cs
testb
xchg
sbb
cld
xchg
mov
faddl
stos
rorl
dec
jbe
outsb
cmp
cmpsl
and
xor
jl
fiadds
and
cvttps2pi
jl
test
das
add
lods
push
sub
ss
cmp
outsb
lcall
push
ds
and
addl
insb
dec
mov
test
out
dec
push
rcll
xchg
cmp
ret
test
dec
aad
pop
rorl
iret
sbb
popf
mov
jge
mov
das
mov
mov
test
stc
cwtl
iret
sub
xor
mov
xchg
mov
cmp
cmp
push
sbb
jecxz
push
sbb
mov
pop
fistl
cmc
sub
fidivl
les
xchg
xchg
sbb
push
or
lock
daa
and
mov
inc
shll
dec
sbb
pop
or
scas
sub
jnp
push
add
mov
sarb
outsl
movsb
leave
imul
js
fs
orb
cmc
repnz
in
xor
mov
test
jae
insl
inc
clc
or
inc
stc
pop
daa
pop
jecxz,pt
sarb
out
bound
lcall
pop
inc
ret
adcl
fwait
mov
cmp
xor
fsubrp
in
repnz
lcall
mov
icebp
mov
dec
mov
jecxz
adc
and
popf
out
subb
sar
sub
mov
adc
jmp
ds
sbb
aas
mov
imul
cs
in
dec
inc
fwait
push
outsl
out
push
mov
jmp
sbb
xor
mov
add
js
into
add
addr16
add
jae
clc
mov
mov
pop
dec
inc
pop
add
ja
xchg
fimuls
pop
stc
push
pop
mov
cmpl
add
mov
pop
mov
ret
dec
test
call
inc
into
loope
outsb
fcomps
lds
push
jno
in
int3
ja
ror
mov
lret
jo
fsubr
subl
sarb
insb
or
jecxz
or
dec
fwait
das
sti
adc
test
flds
or
push
fisttps
aam
push
push
jl
xchg
or
out
or
pop
movsl
dec
push
inc
ljmp
xor
dec
mov
sbb
sbb
aas
jp
cmp
jp
dec
imul
fs
and
imul
jae
les
fsubs
dec
cmpsb
mov
lods
push
shrb
mov
pusha
xchg
mov
into
xor
inc
ret
cmpsl
or
inc
mov
icebp
mov
xor
loop
dec
jp
xchg
out
jbe
out
in
adc
subb
jge
xchg
popf
rorb
and
xchg
imul
cli
movsb
ffreep
notb
cmp
dec
ret
xchg
dec
clc
inc
and
popa
or
mov
outsl
xchg
mov
cwtl
jecxz
jnp
bnd
xor
dec
aas
or
pop
gs
mov
jno
mov
sub
shl
int
sbb
push
sbb
dec
mov
lret
out
cmp
cld
cmpsb
sbb
push
xor
sub
imul
pop
or
cmc
inc
lods
cmpsb
push
mov
mov
pop
cmpsb
mov
aad
pop
push
rcr
push
push
sbb
fmulp
out
insb
push
adc
adc
lfs
inc
test
xor
lahf
mov
stos
mov
or
sbb
stc
cli
adc
cmc
out
cmpl
dec
mov
or
cmpsl
loope
jl
jecxz
ljmp
mov
or
jno
out
push
inc
testl
ljmp
sahf
and
push
and
push
ret
mov
cmp
sub
cmp
push
jo
lret
mov
xchg
es
xor
dec
lcallw
inc
lret
bound
cli
jne
sub
dec
imul
mov
lods
mov
loop
cmpsl
push
add
in
mov
xchg
cmp
int3
lock
xchg
out
ret
cmc
or
test
lods
scas
loope
ficoms
xor
jno
pop
pop
sbb
mov
fimuls
std
movsl
stos
fmul
jg
ficomps
stos
data16
jecxz
xchg
mov
js
mov
push
sti
add
xor
fists
xor
lret
ds
mov
pop
sbbl
leave
pop
ss
jae
jmp
pop
imul
dec
aad
sub
jp
mov
stc
fcomps
scas
jl
sbbl
insb
fisubs
mov
xchg
out
jecxz
jmp
pop
aaa
fistps
enter
add
data16
pop
into
push
or
sar
gs
cmc
cli
subl
adc
mov
fsubrl
shrd
or
push
mov
cmp
mov
add
mov
fstpt
sub
es
mov
fidivl
stc
or
in
sbb
arpl
mov
cs
mov
les
pushf
test
sbb
push
aas
fbld
fldenv
pop
stos
pop
movsb
cli
lea
popa
jbe
rclb
dec
adc
and
dec
mov
enter
cmp
fisubrl
dec
clc
les
fdivl
jbe
sahf
cwtl
and
scas
aad
add
inc
testl
and
pop
xchg
push
inc
adc
aam
pop
inc
inc
jl
test
pop
adc
int
mov
inc
fmull
frstor
fwait
subl
iret
lds
sub
repnz
dec
add
in
pusha
clc
xor
stc
sti
mov
mov
lods
sbb
nop
push
cmp
punpckldq
cmpsl
push
loope
sbb
xor
mov
mov
push
lock
push
ljmp
sbb
cs
mov
insl
fisubrs
daa
fdivrs
jg
cmc
decb
popf
or
mov
dec
loop
push
mov
pop
push
mov
or
nop
xchg
iret
and
stos
xchg
adc
imul
or
sbb
mov
mov
ficomps
in
sbb
icebp
dec
mov
cmp
xchg
mov
iret
adc
inc
xor
add
inc
or
out
cmp
mov
movsl
push
addl
jbe
sub
int3
adc
xchg
jnp
data16
inc
rorb
lods
add
inc
push
hlt
sbb
inc
adc
mov
daa
mov
and
js
mov
rcr
loopne
shrb
in
pop
cs
insl
lahf
aam
push
add
inc
jge
adc
pop
inc
sbb
in
lods
jmp
sub
lahf
repnz
inc
and
out
adc
cmp
add
mov
push
cmp
js
sbb
jge
xchg
fcomip
mov
divl
sub
mov
cmpsb
xor
mov
sbb
dec
push
push
sti
mov
repnz
mov
adc
mov
inc
mov
jae
and
cmp
test
ds
out
dec
rol
inc
dec
sub
mov
pop
jo
loopne
adc
jl
inc
sbb
scas
rcl
jbe
in
and
repz
mov
cmp
movsb
aaa
insb
mov
mov
pushf
mov
fisttpl
test
xlat
sub
and
in
adc
jo
sub
lods
push
and
sbb
adc
scas
jmp
mov
xchg
rclb
adc
repz
mov
scas
jo
adc
dec
leave
push
jl
int
jns
cmc
adc
fcmovb
mov
aaa
add
out
js
jns
fwait
cmpsb
inc
bnd
xchg
stos
fimull
lock
jmp
loope
movb
pop
sbb
rcrl
adc
lea
push
sahf
fnstsw
and
lahf
xlat
xlat
pop
in
xor
addl
testl
mov
and
sbb
cwtl
dec
or
mov
repz
int
mov
gs
lods
outsb
repz
cmp
arpl
mov
nop
cmpsl
or
push
jnp
bound
pop
push
stos
lea
push
mov
stos
mov
mov
adc
or
jne
cli
inc
xchg
push
or
mov
pop
or
cs
inc
je
in
test
shl
mov
inc
addr16
or
and
iret
jp
sub
ret
xor
inc
into
jns
sbb
inc
mov
push
lret
nop
pop
sti
jmp
popa
mov
ja
nop
add
insb
inc
cmp
cmp
jp
adc
jae
sbb
subl
adc
aas
and
rcrl
jno
mulb
lret
and
popf
out
aas
mov
fisttps
mov
inc
imul
adcl
sbb
call
ds
jecxz
xchg
mov
mov
xlat
cmp
adc
inc
xor
fimull
xchg
add
insl
testl
lret
sbbl
push
cmpsl
repnz
popf
data16
movsl
mov
jns
jmp
aad
and
mov
cltd
mov
flds
and
mov
sub
xchg
pusha
fwait
mov
lret
and
sub
and
jbe
lahf
dec
jmp
fsubs
inc
add
aas
adc
sbb
xchg
sar
jecxz
lret
mov
mov
and
sub
inc
mov
adc
popa
push
jg
pop
push
es
adc
out
push
daa
dec
sub
mov
ds
cmp
jo
pop
mov
out
mov
xchg
jae
lret
xchg
mov
fldenv
test
cli
cmpsl
inc
jmp
in
movsl
mov
stc
aad
and
clc
pop
iret
mov
lea
repz
dec
fldl
loopne
mov
and
lea
xchg
adc
clc
je
loope
mov
push
repnz
notl
std
jb
lds
pop
call
repz
into
sub
xchg
ret
sub
mov
outsl
jl
fisubrl
xor
int3
cltd
repnz
roll
mov
neg
mov
fwait
or
dec
jle
mov
inc
jno
inc
pusha
ficoms
sbb
shlb
stos
shlb
fsts
and
mov
adc
fadds
dec
in
int3
pop
mov
sbb
arpl
xchg
sbb
jae
or
movsb
gs
in
mov
dec
dec
xor
adc
loope
lahf
push
subb
lods
stos
xchg
sub
mov
aad
push
push
sub
add
push
xchg
push
jp
pop
xchg
les
mov
jo
mov
rclb
push
add
subb
stos
pushl
jmp
sbb
dec
ljmp
adc
sub
adc
add
sub
push
sbb
fisttps
ja
pusha
mov
stc
arpl
bound
sarb
out
jge
xchg
es
jno
loop
cmpb
xchg
fidivrs
mov
ljmp
pop
jb
pop
ja
das
pop
leave
pop
push
fsincos
jp
shlb
xor
inc
es
dec
or
ret
xchg
pusha
fwait
je
in
sub
cmp
test
mov
jg,pt
jne
inc
sbb
sahf
xchg
stos
cmp
dec
popf
jnp
scas
lods
adc
mov
movsb
mov
loopne
dec
and
push
iret
popa
and
aam
and
fcmovb
xchg
movsl
mov
sub
es
insl
pop
pop
imul
jae
mov
mov
sub
add
or
int
and
in
jecxz
cmp
aad
jp
sub
aam
jp
jno
outsb
cmc
or
data16
xor
mov
push
test
mov
test
call
repz
insl
mov
mov
lret
xor
fsubl
sbb
add
mov
mov
loope
xchg
or
mov
stos
push
adc
jno
movsb
insl
loopne
outsl
xor
push
and
or
hlt
inc
xor
dec
ss
cmp
out
cmp
and
xchg
out
mov
sbb
inc
icebp
mov
loop
rcrb
pop
lods
daa
pop
and
xor
rcrl
icebp
stc
loopne
rclb
lods
cmpsl
pop
push
pop
stos
inc
mov
in
adc
jns
inc
in
dec
pop
jp
popl
in
jnp
jmp
pop
inc
ret
lahf
jp
into
es
test
clc
out
and
push
icebp
rclb
imul
dec
test
mov
sahf
pop
cmp
push
sub
insb
sub
shrl
gs
or
jae
loope
dec
test
adc
inc
pop
push
jg
push
xchg
popf
xor
add
sub
dec
in
xor
sub
pushf
xor
push
lods
filds
sbb
rolb
test
sbb
adc
and
xchg
cld
in
sub
push
ret
sbb
fisttpll
pop
jns
jmp
cmp
add
shrb
filds
mov
dec
lret
inc
dec
xor
fnstenv
cmp
xor
push
inc
in
lods
cmp
sbb
sahf
pushf
xchg
fimuls
sbb
dec
mov
pop
stos
jo
scas
addb
lret
mov
out
out
fmul
add
aad
loop
dec
test
in
and
push
pushf
pusha
pop
sbb
insb
push
add
pop
mov
xor
adc
dec
dec
mov
std
push
pop
enter
jp
jb
in
sbb
pop
and
int
rclb
movsb
pushf
int3
mov
imul
dec
cmp
sbb
dec
das
loop
mov
inc
adc
mov
sub
or
movsb
sarb
mov
in
inc
xor
mov
leave
inc
lret
mov
popa
add
test
cmp
outsb
push
and
cmpsb
jno
sub
jle
icebp
mov
mov
fcompl
movsl
add
stos
imulb
sbb
pusha
dec
mov
add
enter
in
jb
in
sbb
outsb
cli
jg
xlat
out
add
inc
pop
dec
sub
xor
jo
or
mov
scas
add
addr16
fxch
ret
data16
inc
sbb
loopne
repz
jno
jle
mov
out
in
mov
cmp
mov
dec
enter
pop
mov
mov
lds
shlb
out
adc
xor
addr16
jg
or
or
add
loope
insl
fimuls
xor
push
xor
cmpsb
sti
dec
loop
mov
je
mov
shrl
nop
mov
mov
int3
sub
and
stos
ljmp
push
movsb
in
mov
mov
sub
ja
repnz
mov
out
data16
fs
ja
inc
daa
push
xlat
xlat
sbb
xor
test
lock
hlt
xorb
nop
test
leave
pop
inc
xchg
add
cltd
and
add
mov
pop
mov
outsl
dec
and
sbb
add
jbe
adcl
mov
outsb
es
inc
inc
stos
dec
repz
pop
in
ret
add
mov
aad
insl
pusha
mov
mov
fisttpll
mov
and
add
popf
mov
je
test
mov
jge
sub
or
mov
and
hlt
pop
sub
ficoms
mov
in
mov
outsb
iret
dec
imul
cmpsb
jns
push
and
add
stos
jb
mov
dec
sub
cmp
inc
jo
add
fstpl
push
mov
xor
ja
xor
inc
pop
cmp
bound
inc
mov
ficomps
cld
inc
lret
cmp
xor
xchg
add
inc
lds
push
insl
or
jg
or
jns
xchg
pop
and
push
lods
aad
ss
push
pop
xor
cltd
adcb
int3
dec
push
scas
dec
sbb
ret
dec
clc
out
pop
dec
je
lods
add
pop
cld
xor
nopl
notb
icebp
js
xor
je
out
shll
lret
sahf
push
aaa
cmpsb
xor
hlt
xchg
mov
popa
cli
push
fnsave
push
inc
pop
add
inc
fistps
in
fbld
sbb
iret
pusha
jecxz
ds
push
cmp
test
mov
sbb
sbbl
sahf
fldl
int3
jbe
jmp
adc
jge
outsl
dec
xor
pop
sbb
aam
adc
jp
mov
mov
push
ja
xchg
sti
jl
cld
mov
mov
insl
lock
xorb
pop
or
adc
stos
data16
mov
fs
or
sub
fldenv
dec
cltd
push
push
add
jae
call
cmp
js
adc
ds
xor
loopne
cltd
cmp
inc
pop
inc
clc
outsb
mov
fldl
add
cld
rorb
push
test
mov
imul
push
nop
cmp
fstpt
in
mov
and
popf
cmp
scas
je
jp
cltd
adc
fwait
xchg
mov
out
adc
cmc
aas
pop
jp
mov
aam
jecxz
in
jecxz
mov
cmp
push
mov
cmp
addr16
pop
test
jae
incl
aam
inc
cmp
outsl
sbb
add
lea
pop
push
scas
xchg
jg
ljmp
jo
clc
ret
pop
mov
xor
iret
adc
or
mov
aaa
popa
mov
aas
and
cs
push
sub
mov
addr16
rorl
arpl
fistpll
pop
std
shlb
jo
cmp
jge
jnp
sbb
mov
push
rorl
mov
mov
inc
rcl
mov
loop
mov
push
push
lcall
sbb
in
mov
aad
xor
movsb
bound
clc
sub
pop
push
mov
ficoml
jae
xlat
push
negb
divl
cmpsl
sub
xchg
xor
jo
sub
sbb
pushf
sub
push
jg
push
mov
mov
push
mov
scas
add
mov
in
pop
mov
adc
xchg
dec
push
int3
adc
push
push
cmp
mov
jmp
xchg
lret
addr16
jb
lahf
sarl
insb
arpl
jnp
xor
inc
fiaddl
xchg
mov
mov
xor
mov
test
in
push
and
mov
xchg
and
pop
sub
add
in
loop
sahf
push
repnz
inc
in
adc
xor
xchg
and
and
xchg
xchg
out
xlat
xor
repnz
or
inc
repnz
add
inc
imul
mov
aam
pushf
pop
hlt
and
mov
fsts
imul
into
sbb
xor
in
es
shl
adc
icebp
jecxz
pop
sahf
fnsave
and
jns
or
sti
mov
in
movl
je
pop
inc
pop
xlat
jle
sub
arpl
jl
shrb
jae
cmp
jge
push
das
jnp
hlt
add
xor
xchg
sbb
dec
mov
sub
sahf
jns
cwtl
stos
sbb
sub
rorb
in
xchg
add
cli
data16
cmp
loopne
jnp
sbbb
mov
sbb
cltd
push
adc
stos
ja
daa
mov
out
sub
pop
xlat
sub
scas
notb
sub
daa
shll
push
push
mov
xchg
test
and
out
pusha
cli
fwait
mov
mov
add
pop
or
adc
lods
add
sub
add
out
xchg
out
mov
clc
and
xor
movsb
mov
lods
insb
in
test
adcl
add
stc
fbld
ret
pop
mov
imul
xor
push
imul
or
fcoml
pop
mov
sahf
lds
jno
xchg
dec
push
out
pop
lods
cld
ja
cmpsl
lods
or
fwait
out
pop
add
push
pop
aad
pop
push
fists
inc
shr
push
inc
ret
popa
mov
mov
mov
fstl
aas
add
hlt
incb
shll
and
mov
or
outsl
cltd
orb
and
pop
xchg
test
sub
adc
gs
dec
mov
xchg
dec
add
jae
out
ljmp
xor
and
or
dec
sub
arpl
adc
xor
lcall
movsl
pop
out
jbe
nop
xor
or
fadd
sub
sbb
loop
mov
or
out
xchg
push
jae
inc
shrl
push
push
lock
and
aas
adc
hlt
mov
fwait
jbe
ljmp
pop
fnstenv
and
jmp
add
pushf
adc
test
xor
ds
and
pop
push
jecxz
jecxz
lock
or
in
pop
cmpl
mov
fldt
jmp
adc
xchg
sbb
aas
add
in
aam
ds
shll
pop
mov
sub
jmp
push
push
lock
sbb
pop
loop
mov
add
push
sbb
aaa
jb
bound
push
mov
jns
mov
push
lds
xor
and
cs
inc
cmp
scas
mov
pop
into
jmp
adc
aas
out
adc
sbbb
add
mov
push
cmpsl
mov
scas
cmpsl
inc
sti
icebp
add
pop
inc
stos
test
jae
icebp
jp
cmpsb
inc
mov
cmp
xor
or
pop
sarb
cmp
push
out
shlb
orb
cmp
cmp
sbb
jecxz
pop
lods
or
push
lea
dec
jb
mov
and
aas
and
jge
push
mov
lcall
and
xor
not
or
out
arpl
int3
jmp
js
sahf
mov
movsb
push
imul
pop
mov
sbb
mov
sarl
idivb
gs
popa
xchg
and
sbb
pop
jecxz
in
sbbl
fwait
mov
adc
push
cli
push
dec
popa
ja
fwait
les
mov
pop
xor
test
xor
test
or
pushf
sti
add
add
add
push
adc
add
ret
cld
xor
xchg
test
int
in
and
dec
repnz
xor
out
add
cmp
imul
lcall
xor
mov
push
loope
pushf
pop
dec
xchg
jmp
xchg
jb
inc
jae
lret
shlb
cwtl
fcmovu
ja
insl
add
mov
in
clc
dec
stos
rcr
lea
mov
mov
int
fldenv
add
and
aam
lds
in
leave
test
icebp
push
loope
push
mov
push
add
xchg
adc
scas
or
cmc
dec
repnz
pop
xchg
jp
dec
sub
rcrb
jb
lret
stc
sti
xchg
lret
push
adc
mov
aam
and
adc
mov
dec
jecxz
and
outsl
rclb
mov
movsb
call
inc
xor
cld
mov
mov
fsincos
les
ljmp
fisubs
inc
or
je
push
mov
popf
fisubrl
mov
xor
add
bound
dec
je
ja
scas
inc
imul
push
rol
and
flds
inc
or
dec
icebp
adc
pop
adc
and
mov
cmp
pop
mov
in
cmpsl
clc
xchg
mov
cmpb
xchg
test
mov
inc
pop
or
leave
int
dec
add
sahf
push
xchg
jns
fnstenv
clc
mov
mov
std
bound
push
fstpt
push
sbb
xor
xor
pop
rcrl
test
mov
cmp
loope
jle
mov
mov
sbb
cmp
insb
xchg
daa
sub
roll
jl
jp
push
xchg
out
inc
pusha
decb
cltd
push
pop
cmpsb
mov
add
sub
lods
push
lds
push
cmp
mov
das
inc
or
imul
push
or
sbb
mov
xor
lahf
in
jl
jle
movsl
cmc
push
insb
mov
pop
inc
xchg
lock
outsb
mov
cmp
outsl
lds
pop
mov
imul
pop
add
pop
sahf
aaa
ljmp
sbb
xchg
out
adc
mov
xchg
cmpsl
xor
push
mov
ret
xchg
je
leave
pop
testl
jg
sub
test
aas
in
mov
mov
and
inc
push
les
push
or
fstl
inc
pusha
mov
sub
pushf
mov
enter
fs
shlb
fildl
sub
xchg
push
cmp
ret
mov
and
inc
lods
sub
adc
aaa
mov
sub
lcall
pop
inc
movsl
gs
in
and
arpl
notl
repnz
movl
xor
popa
push
imul
addr16
sbb
dec
sub
pop
push
jle
mov
dec
dec
outsb
cmpsl
aam
addr16
jmp
test
or
ficompl
jg
xchg
push
mov
adc
int3
xlat
in
push
shll
xchg
dec
mov
das
cmc
repnz
mov
rcrb
jmp
loop
push
mov
out
pop
adc
popa
jno
ds
mov
fsubr
lea
or
sarl
pop
sar
lahf
gs
out
int3
mov
iret
cltd
xchg
jbe
xchg
sub
sti
sarl
into
addr16
call
cmpsb
cmp
add
lods
pop
pop
mov
sub
fisubs
sahf
mov
mov
fs
cmp
int
push
push
jne
insl
mov
mov
mov
or
cwtl
rolb
add
push
xor
test
scas
push
test
xor
lock
jbe
xchg
lods
sub
lds
test
lods
lret
inc
enter
sbb
pop
test
stc
mov
jb
xlat
xchg
push
or
daa
dec
xchg
adcb
push
loope
and
arpl
shlb
mov
leave
lods
popf
ds
mov
rcl
and
mov
cmp
aam
clc
aaa
aad
rorl
and
mov
sub
filds
adc
cmp
pop
adc
xor
jnp
notb
adc
sbb
mov
push
mov
push
lcall
xorb
adc
movsb
test
sbbl
aam
fwait
pushf
into
inc
pop
cmp
lods
mov
mov
loope
or
js
dec
test
bound
push
inc
popf
icebp
cmp
out
add
imull
or
gs
xor
add
ficoms
mov
fs
ds
mov
in
decl
je
sub
cmp
cwtl
push
test
mov
inc
inc
add
das
push
cmp
add
stos
lcall
iret
movsl
xchg
cwtl
or
mov
scas
sarl
inc
mov
out
arpl
int3
jo
in
push
icebp
movl
cwtl
push
or
push
loope
mov
and
mov
push
adc
dec
xor
test
cli
lcall
in
out
mov
out
test
jg
mov
or
mov
out
ret
push
lea
xchg
inc
popa
cmp
xchg
inc
jbe
fsubr
fisttpl
dec
pop
xchg
test
mov
out
push
and
out
ja
out
jno
ja
pusha
xchg
daa
pop
repz
adc
push
subl
lods
xchg
ds
push
push
imul
cmpsl
fdivl
sti
scas
bts
add
xchg
pusha
lret
std
adc
shrl
ja
test
std
les
popf
xlat
xchg
mov
ds
repnz
cmpsl
add
ret
sub
jmp
daa
xor
xchg
add
jp
push
icebp
pop
mov
lcall
or
push
xchg
jns
popa
aam
lret
lock
xor
rolb
push
sbb
cs
pop
rcrl
bound
or
adc
cltd
arpl
jmp
ds
mov
in
mov
rcrl
push
aad
arpl
shl
push
push
mov
rol
adc
das
pop
gs
cmp
fs
mov
ret
js
jg
loope
les
repz
adc
aaa
cmp
hlt
dec
add
mov
push
xlat
clc
call
sbb
ret
inc
fstpl
jle
sub
push
inc
add
es
int
lods
pop
cmp
lret
clc
inc
mov
mov
mov
shufps
rcr
sti
stc
push
adc
adc
pop
stos
adc
rcrb
or
jb
sub
in
fs
aad
xchg
addr16
lea
jge
cli
cwtl
lcall
and
incl
cmp
pop
cmp
pop
fidivrl
inc
enter
cmp
divl
mov
lds
push
hlt
andl
or
pop
in
xor
or
dec
push
xor
add
inc
sahf
cmp
bound
fildll
enter
lods
mov
add
push
mov
and
mov
ja
decl
ret
pushf
adc
pop
sub
incb
push
mov
shlb
mov
shl
push
sbb
imul
movsl
das
shlb
cmp
notl
or
or
lock
mov
fstl
jne
mov
jo
scas
add
or
mov
add
mov
daa
adc
sub
mov
and
rol
add
sub
push
aas
fdivrs
mov
inc
dec
xchg
loope
lea
cmp
lods
fwait
dec
out
fwait
jno
add
mov
xchg
push
pop
mov
ds
jb
add
and
cwtl
es
adc
idivb
lods
push
outsb
or
insb
adc
mov
mov
or
out
pop
sbbl
cmp
call
lea
sub
jne
cli
insb
shl
jp
xchg
aad
lea
adc
push
negl
xor
adc
push
sbb
leave
subb
stc
das
jp
and
cmp
ss
loop
stos
dec
ds
push
shl
fcmovb
and
or
dec
jnp
movsb
or
call
aam
int
inc
mov
pop
nop
adc
pushf
clc
fisttpll
cmpsl
xchg
aad
or
add
dec
pop
pushf
xchg
push
adc
mov
sbb
lock
xchg
popa
xchg
mov
sub
jbe
mov
jne
mov
xlat
jno
cmp
jo
clc
push
pop
push
ret
mov
into
lcall
mov
bound
push
push
pop
pop
mov
lds
xor
push
mov
fildl
mov
dec
sub
cwtl
pop
addb
sbb
jns
sbb
jle
lock
cmpsb
loope
xchg
xor
sub
imul
gs
push
pusha
mov
std
rorb
cwtl
adc
dec
mov
pop
repz
sbb
inc
xchg
dec
jl
jp
add
sti
dec
popa
sbb
aas
gs
sbb
fistl
into
dec
push
add
je
mov
fcompl
sub
arpl
ja
shll
xchg
inc
mov
addr16
addb
mov
or
mov
push
stos
jl
out
mov
add
or
xchg
push
imul
ljmp
push
push
add
xor
ficomps
and
in
xor
xor
lfs
mov
xor
pop
mov
xchg
and
out
loope
adc
sub
push
pop
lret
push
cmp
dec
and
popa
bound
scas
ret
and
cltd
jecxz
cltd
mov
shrl
mov
test
adc
or
int3
pop
add
pop
ret
imul
cltd
push
mov
inc
inc
lret
incl
dec
scas
dec
push
pop
in
lock
xlat
pop
xchg
or
jo
mov
jnp
push
clc
dec
lods
fldlg2
adc
mov
push
dec
xor
in
fildl
outsb
adc
jb
lock
sub
push
push
sub
movsb
cmp
cmp
sbb
xchg
divb
push
cmp
lock
inc
or
push
mov
and
and
rdpmc
lock
mov
prefetchnta
add
jb
testb
adc
test
jno
cmp
bound
ds
adc
add
daa
mov
add
mov
push
popa
dec
add
insb
scas
js
add
dec
or
xchg
xor
fldl
and
mov
mov
shl
movsb
or
mov
fwait
dec
pop
fiadds
mov
xlat
push
leave
xchg
loopne
jne
fucomp
fs
lret
pop
jno
cmpsb
fsts
outsl
inc
pop
jne
inc
dec
fldcw
push
add
out
jo
test
icebp
sub
push
pop
dec
push
mov
pop
push
dec
cmpl
sub
daa
sbb
in
rolb
dec
and
bnd
push
dec
or
add
daa
xor
mov
or
in
movsl
push
sar
hlt
mov
rorl
inc
and
fmull
pop
ret
aam
in
fiaddl
mov
add
jecxz
cwtl
pop
mov
mov
cld
in
jl
js
pop
sbb
mov
hlt
sbb
jle
pop
xchg
shll
pop
inc
mov
subl
adc
push
cmpsl
add
int3
sub
mov
stc
add
mov
jl
or
sbb
sub
push
push
mov
adc
mov
sbbl
cld
and
push
mov
xchg
pop
push
sbb
or
add
repz
jmp
mov
push
les
in
jge
mov
fsin
mov
int
cli
mov
cmp
mov
addb
mov
mov
insl
sbb
pop
cmc
adc
mov
and
mov
jg
bound
icebp
fistps
add
add
out
movsb
xchg
and
push
mov
in
rcr
inc
mov
dec
es
movsl
and
adc
xchg
jg
pop
call
and
popf
adc
add
in
mov
ret
insb
or
sbb
sub
inc
mov
ds
add
ret
mov
xchg
dec
jne
sub
fistpll
pop
mov
loope
add
arpl
ret
lea
cld
sbb
js
daa
mov
out
cld
repnz
stc
ja
out
jmp
imull
xorl
push
sub
jmp
xlat
rorl
dec
dec
xchg
mov
jp
sub
fdivrp
enter
in
ret
cmp
loopne,pn
fwait
xor
jecxz
test
sbb
jle
cmp
xor
and
mov
in
lahf
mov
cmp
jbe
jne
sbbl
push
xor
add
in
inc
mov
cs
ja
jae
mov
jle
mov
js
stos
filds
fimuls
cmp
test
jmp
xor
stos
into
mov
xchg
test
mov
iret
mov
xchg
sub
es
push
or
ficomps
cmpsb
stc
xchg
add
cmpsb
sbb
inc
jecxz
out
insl
sbb
repz
repz
imul
push
aam
subl
ret
fwait
push
das
cmp
scas
adc
adc
mov
jecxz
add
lds
cld
push
and
insb
mov
jae
jo
ss
cmp
pop
test
and
add
cmp
inc
xchg
push
or
loop
clc
cmpsb
out
xchg
adc
insb
xchg
jg
jbe
push
ret
les
mov
push
add
sahf
ret
daa
mov
jno
jno
and
jne
sub
pusha
push
dec
pop
pop
adc
xlat
jg
push
sbb
xor
or
and
mov
scas
mov
cmpb
loope
dec
add
ljmp
mov
fcomip
xchg
ret
fincstp
orb
pop
cmp
or
stos
movsl
mov
test
fsubr
sbb
ja
mov
xchg
mov
add
popa
repz
rcrb
ret
push
push
dec
jmp
aaa
xor
inc
and
js
pop
in
and
fmuls
push
hlt
sahf
dec
sub
jmp
sbb
or
mov
xor
call
jns
out
cwtl
xchg
push
lock
push
or
inc
fildll
add
outsl
cmp
pop
je
pushf
pop
xor
push
xchg
inc
cmp
out
cmp
ss
add
push
fldl
cmp
sub
cmp
push
lds
in
cmpb
rclb
add
fucomp
cmp
jl
pushf
xchg
je
jg
inc
push
test
push
pusha
enter
lods
loope
cs
sbb
jne
scas
lahf
addb
pop
fwait
push
ret
jne
and
fsubs
fcomi
les
pop
pop
jns
xor
adc
xor
cli
lcall
sbb
xchg
cld
mov
cmp
xchg
daa
daa
mov
test
pop
mov
in
sbb
inc
jle
hlt
lahf
gs
dec
mov
lea
mov
xchg
and
ja
add
pop
jb
and
rcrl
pop
push
cmp
mov
add
sbb
nop
mov
in
jle
out
fisubrl
je
mov
push
jmp
pop
add
fstps
out
dec
add
mov
xchg
js
lahf
inc
mov
pop
cli
divl
stos
sarl
enter
cltd
jl
adc
and
pop
call
lret
cmp
xchg
sbb
fdivrp
es
sub
adc
loope
push
xchg
mov
jb
pusha
jecxz
add
popf
pop
add
lret
mov
aam
or
mov
imulb
mov
stos
test
push
aad
stc
xchg
mov
mov
add
mov
sbb
adc
push
push
add
ds
mov
aas
mov
fsubrl
vdivpd
push
jb
or
sarl
dec
mov
and
addr16
sti
fwait
fwait
xchg
or
mov
pop
fs
xchg
push
pop
adc
and
mov
mov
jae
pop
lahf
cli
push
xorl
adc
cmc
pushf
cmp
popa
daa
insl
push
repnz
jge
dec
push
xor
cltd
jecxz,pt
lcall
mov
inc
dec
aad
pop
adc
clc
popf
pop
bound
mov
jns
int
or
les
push
inc
repnz
pusha
fsqrt
xor
and
push
sbb
loope
dec
outsl
fwait
aas
mov
fs
in
adcl
orb
jo
dec
outsl
lods
inc
and
mov
insb
mov
std
jae
out
daa
mov
adc
xlat
dec
and
cltd
mov
out
fisttpll
lds
icebp
lods
xor
push
outsl
and
cmp
mov
adc
mov
sahf
jns
mov
mov
inc
loopne
mov
and
add
jle
pop
mov
call
jb
mov
dec
pop
jge
fwait
pop
pop
fdivl
test
xchg
lret
jmp
aad
js
js
dec
inc
js
rolb
mov
push
out
and
loope
mov
mov
lods
jae
out
and
stc
sbb
incl
cmp
mov
bound
sbb
test
movsb
filds
jo
mov
aaa
mov
test
mov
dec
out
push
mov
inc
push
adc
jns
test
mov
in
aas
std
cltd
jp
movsl
xchg
xchg
flds
push
aam
repz
xor
rclb
scas
nop
nop
push
mov
pop
add
pop
add
scas
sub
fcmovu
and
jae
sub
lock
add
inc
aas
call
adc
mov
mov
pop
pop
out
outsb
sbb
mov
call
mov
mov
adc
and
insb
and
push
jecxz
int3
nop
mov
mov
pop
iret
movsl
and
in
pop
stos
jo
xchg
cs
jb
enter
mov
leave
pusha
adc
in
pop
push
dec
aad
dec
sub
mov
in
sti
in
stc
adc
xor
mov
sti
xlat
cmp
sub
sub
jno
faddl
leave
mov
adc
inc
xor
js
mov
fstpl
add
cmpsb
mov
js
add
cmp
pushl
loop
sub
xlat
lahf
dec
jbe
pop
fdivrl
pop
pop
aam
ss
subl
ja
mov
mov
mov
dec
ret
mov
mov
sub
dec
loope
incb
or
or
scas
pop
gs
clc
dec
mov
sub
jl
push
lds
fidivl
xor
lahf
shlb
push
adc
insb
js
in
nop
mov
dec
cli
xchg
pop
sbb
push
adc
subb
cmc
sub
push
int3
push
fwait
push
pop
and
mov
xchg
insb
sbb
dec
dec
jle
jmp
cld
lcall
xchg
fstpt
lods
push
dec
aam
or
mov
and
and
mov
dec
aad
jno
push
push
daa
popf
xchg
shll
dec
xor
push
pop
mov
leave
hlt
fcomp
xlat
into
xorb
test
pushf
nop
mov
mov
loope
pop
adc
arpl
inc
aaa
aas
dec
jnp
pop
in
xchg
mov
or
push
add
es
iret
test
sub
jb
subps
out
std
mov
bound
inc
les
divl
push
popa
xor
and
xorl
push
adc
xchg
fst
mov
outsb
and
shlb
fs
inc
push
mov
cmp
lret
and
cmp
aam
mov
repnz
popa
push
inc
xor
jo
or
in
je
fs
sub
inc
xchg
jp
xchg
fdiv
jne
push
enter
out
fwait
mov
into
push
lret
and
jl
dec
inc
adc
pop
sti
add
aaa
or
mov
stos
dec
imul
jmp
xor
or
into
cwtd
cmp
add
aam
pop
sub
sbb
sub
roll
fcmovnu
sbb
inc
push
sti
loope
or
inc
inc
mov
mov
stos
stos
mov
jnp
dec
mov
cs
nop
and
xorb
jle
adc
jmp
pusha
cli
adc
popf
loopne
sbb
adc
lret
push
decl
xchg
push
and
cmc
inc
into
inc
mov
lea
cs
insl
xor
cmp
xor
sub
movl
jb
push
adc
pop
adc
movsl
fidivrl
dec
ds
in
sub
inc
pop
cltd
cmpsb
dec
fstpl
mov
mov
sbbb
sub
out
arpl
sbb
pop
or
lea
clc
scas
ss
xor
xchg
popa
out
adc
pop
dec
fcmovnu
rorl
sub
testb
repz
jne
stc
cmpsl
fcmovbe
xor
mov
in
xor
push
cltd
and
aas
mov
insb
movsb
or
shll
or
fwait
arpl
arpl
lcall
cmp
cmp
lock
iret
sub
sub
inc
dec
in
mov
idiv
sub
cmp
es
adc
jmp
xchg
add
mov
xchg
out
les
clc
sarb
inc
je
adc
scas
push
pop
cmp
pop
xor
outsl
sbb
push
movsb
in
inc
push
cmp
cmc
mov
jo
and
pop
cmp
lahf
jb
xchg
push
mov
into
shll
lret
cmpsb
hlt
sub
push
push
bound
idivl
stc
mov
cmp
lds
sub
insb
xor
adc
out
divw
shlb
push
stos
inc
push
adc
out
lock
insb
stos
insl
dec
ficomps
xor
faddp
or
push
xor
outsl
dec
sub
mov
sub
inc
mov
sub
pop
pop
push
es
jmp
inc
dec
in
push
fsubp
cwtl
or
mov
lahf
fidivrs
sub
lods
xor
mov
xchg
jg
out
mov
jle
js
mov
push
mov
cmp
xchg
cmc
pushf
scas
repnz
inc
popf
or
iret
pop
mov
xor
int
cmpsb
jns
push
xor
nop
jb
pop
inc
push
mov
xor
in
clc
lcall
mov
cmp
leave
cmp
scas
pop
cmp
movl
aas
lds
and
ds
in
ja
cwtl
daa
or
int3
fwait
gs
sub
jno
xlat
jno
xchg
hlt
ss
das
pop
dec
xor
pop
bound
repz
dec
sbb
inc
and
pop
xchg
mov
insl
and
add
pop
dec
loopne
nop
test
stc
das
jno
mov
std
pop
add
fcoms
cmpsl
clc
pop
xor
cmp
imul
fcoml
xchg
jp
js
and
movsl
fimull
rcl
es
mov
cmp
test
js
popf
out
call
into
mov
cmpsb
xchg
adc
xchg
dec
xlat
out
loopne
xchg
xor
test
push
test
movsb
rorb
cwtl
outsb
iret
jp
shrb
lcall
jo
shrl
mov
jmp
or
outsl
xchg
mov
and
shll
test
pop
pop
popf
jp,pn
nop
and
and
mov
add
fnstenv
push
out
in
int
fnstenv
and
mov
add
test
in
push
or
or
scas
movsb
inc
lcall
inc
out
stos
mov
dec
or
push
pop
rclb
stos
cmp
fucom
cmp
mov
enter
ret
pop
hlt
lret
xor
dec
out
add
or
cmp
add
xchg
dec
mov
or
adc
add
push
dec
outsl
test
sbb
stos
ds
mov
adc
stos
stos
pop
mov
cmp
lret
rcrl
mov
rcrl
xchg
popf
and
jp
adc
fwait
jle
pop
jle
fstl
lret
cmp
addb
lods
aas
sbb
stc
xor
mov
cmp
notl
add
imul
jp
frstor
shll
pop
cwtl
cmp
and
insl
cwtl
pop
sbb
jnp
lock
ss
adc
jbe
in
lret
imulb
jecxz
sbb
xor
adc
mov
jns
push
add
pop
sbb
mov
pop
push
mov
popa
rorb
mov
fidivl
cmp
cmc
lods
mov
xor
loopne
test
out
negl
adc
das
xor
push
icebp
add
xlat
sbb
lods
push
out
sbb
roll
jns
and
xchg
jb,pt
adc
arpl
pop
jb
pop
push
or
ds
inc
fisubl
sub
inc
test
sub
popf
pop
adc
imul
and
mov
mov
mov
add
pop
and
push
push
test
sbb
xchg
push
std
lcall
mov
out
lret
push
push
lahf
adc
add
fwait
pop
loop
pop
xorl
xor
cmpsb
cmp
sbb
cmp
sub
sbb
es
mov
lock
adc
adc
sahf
xlat
or
imull
leave
push
lahf
ja
cmp
out
les
xor
pop
test
hlt
push
fisttpll
jns
sbb
jae
in
jno
mov
lock
dec
inc
inc
xor
pop
or
mov
jno
xchg
or
pop
stos
subl
fdiv
leave
xchg
pushf
imul
xchg
inc
cmp
push
ja
push
and
xlat
mov
in
test
push
cmp
push
mov
pop
jbe
lret
test
dec
sub
repz
fidivrs
xchg
es
frstor
xor
xchg
inc
sarb
xchg
mov
lret
inc
mov
enter
xor
pop
adc
popf
fsts
fs
xor
mov
and
ret
mov
jns
mov
std
and
jno
lock
mov
out
in
inc
pop
in
aad
stos
sti
test
and
add
cmp
dec
jge
inc
mov
js
sti
or
loope
mov
adcb
mov
dec
jle
inc
ljmp
into
and
sbb
xchg
stos
aam
into
rcr
insl
xchg
jo
dec
movsl
sbbl
bound
sbb
loope
dec
iret
inc
enter
cs
sbb
fdivrs
add
push
cltd
bound
orl
fldenv
int
int3
shrb
pcmpgtw
insb
ljmp
dec
popa
xchg
cmpsl
sbb
pop
xchg
pusha
ja
sbbl
jl
adc
mov
lods
sub
fisubrl
inc
loop
inc
out
test
insl
cmpsl
mov
sub
loopne
rclb
mov
sahf
push
js
mov
or
and
lods
adc
fldcw
push
add
or
or
je
pop
fbld
sub
int
jae
mov
mov
push
mov
cmc
imul
pop
inc
jecxz
and
xor
add
cmp
pop
inc
arpl
shl
xchg
pop
jle
mov
inc
imul
push
adc
jae
popf
and
in
ss
data16
orb
ljmp
push
mov
cmp
mov
scas
mov
scas
xor
in
jb
pop
std
xchg
loopne
lret
movb
stos
addb
imul
int
clc
aaa
shr
mov
mulb
sub
pop
mov
in
js
mov
xchg
push
push
shl
adc
push
push
mov
jl
mov
sbb
imul
call
in
movsl
push
push
sub
movsl
pushf
cli
sub
mov
cmp
inc
int3
shll
cmp
pop
jno
sbb
or
jno
pop
in
lock
mov
inc
sbb
mov
fadds
mov
int3
inc
and
stc
addr16
test
jb
jmp
xchg
jb
push
pushf
cvtpi2ps
inc
hlt
data16
xchg
or
movsb
mov
clc
lcall
pop
push
lock
sbb
mov
sbbb
js
mov
cli
ficoms
bound
push
bound
call
out
enter
lea
sti
push
cmp
out
push
xchg
mov
push
out
xchg
inc
push
mov
pop
out
sub
sbb
jg
dec
adcl
sub
repz
ret
dec
dec
dec
inc
sub
adc
sub
lea
and
es
clc
mov
fwait
lret
inc
xchg
iret
jecxz
push
cltd
stc
movsb
icebp
mov
cmp
xchg
or
inc
sub
pop
cltd
data16
mov
out
mov
fisttps
adc
jg
mov
in
xor
adc
popf
js
fists
mov
mov
mov
cmp
push
addl
stc
fldt
push
lcall
jno
data16
sub
sbbl
push
addr16
aaa
into
mov
pop
and
cmp
addr16
inc
sahf
ljmp
push
pop
pusha
inc
dec
push
lods
inc
mov
das
lock
test
jns
mov
mov
jnp
imul
sbb
mov
int
mov
add
cmp
push
das
adc
push
jns
dec
push
jae
mov
jl
jns
jle
xor
data16
xchg
mov
out
leave
in
popf
loop
aaa
js
push
xchg
test
std
les
data16
dec
lret
jl
out
xchg
lret
cmpsl
and
in
std
mov
mulb
mov
add
jnp
sahf
inc
jnp
loop
dec
sub
insb
push
dec
push
pop
mov
push
dec
pop
sbb
fists
ds
gs
insb
stos
xor
repz
call
mov
inc
pop
outsb
push
xchg
ficomps
xchg
pushl
xor
into
push
gs
xchg
push
stc
movsl
mov
or
cmp
test
aad
mov
ror
sub
mov
cltd
in
jae
fildll
adc
iret
je
sub
and
dec
sbb
adc
mov
idivl
repz
mov
sub
jb
les
fs
cmpsb
push
and
aas
pop
cmpsb
int3
xchg
jg
lods
or
es
or
mov
and
adc
cmp
add
and
sti
data16
ja
stc
xor
incb
jmp
sub
xor
pusha
push
rcl
hlt
push
ret
sub
fistpll
xlat
inc
subb
std
repz
push
adc
mov
cli
scas
fsubl
fsubl
cmp
inc
lock
push
and
js
jl
mov
dec
rorb
pop
push
je
aaa
ss
fsubl
adcl
cli
rclb
inc
dec
es
jecxz
lods
sub
movsl
pop
and
fisubrl
outsl
and
xor
arpl
test
stos
pop
sbb
lea
mov
int3
fadds
cwtl
int3
lret
int3
fucomi
and
dec
mov
or
fs
fistps
test
xor
push
adc
loopne
pop
lcall
jbe
mov
mov
adc
mov
pushf
xchg
mov
cli
into
adc
fcmovnb
xor
push
mov
and
repz
xor
sub
cmpsb
stc
rorl
ds
scas
jb
xor
and
and
fnstenv
add
dec
xchg
les
mov
shr
pop
fstpt
imul
aaa
sbb
pop
addl
xor
adc
lds
mov
in
cwtl
mov
inc
add
data16
aad
dec
test
pop
xchg
mov
xor
xchg
ljmp
xchg
sub
xchg
inc
mov
scas
enter
movsb
in
push
mov
sbb
and
adc
ds
sbb
sbb
lea
divb
ljmp
lret
jnp
dec
fnstenv
jae
mov
jae
jnp
rcrb
mov
push
mov
and
and
mov
jno
out
xchg
xchg
test
imul
lret
cld
jmp
cmpsl
push
sbb
mov
mov
enter
cmpsb
dec
push
outsb
or
enter
ja
sub
push
mov
test
or
jo
mov
push
int
shlb
mov
cmpsl
cmp
mov
xchg
pushf
hlt
fwait
out
scas
dec
jle
xchg
addb
loopne
adc
sqrtps
jecxz
in
mov
sbb
inc
scas
ljmp
test
add
cmp
fimull
cmp
or
pop
sub
rcrl
adc
fstpl
add
sbb
test
mov
daa
and
fs
pop
xchg
dec
lret
inc
xlat
or
jp
rcll
sarb
mov
lcall
shlb
gs
test
je
cld
jecxz
cmp
and
cwtl
sahf
add
xchg
or
cld
outsl
mov
insb
pop
test
jecxz
jne
stos
xchg
jle
lahf
jnp
fstps
addl
lcall
loope
pop
call
fwait
out
ss
and
fmull
push
jns
sbb
inc
out
fbld
test
pusha
ret
pop
xchg
cmp
sbb
mov
stos
sub
adc
andb
push
or
stc
adc
dec
es
das
xchg
movsl
sub
sbb
xor
fdivl
es
pushf
jmp
dec
mov
pusha
mov
pusha
jecxz
bound
subb
push
mov
fsubrs
xor
dec
pop
dec
add
imul
jge
test
out
movsl
jg
pushf
cvtps2pd
dec
and
cltd
or
fdivs
shll
cld
sub
push
xchg
sbb
shlb
sbb
in
xchg
ds
xchg
cmp
sbbb
sbb
sub
repnz
aas
mov
out
xchg
je
xchg
mov
lea
repnz
outsb
mov
cltd
push
jo
or
mov
jl
or
sbb
and
cli
psrld
mov
out
push
cmpsl
and
lret
push
mov
test
movsl
into
pop
cmp
xchg
push
sbb
inc
xor
cld
enter
add
faddl
movsl
xor
lock
adc
add
icebp
jb
dec
mov
test
mov
fstps
mov
jecxz
fsubrp
xor
bound
adc
jmp
rclb
fwait
adc
mov
add
mov
ret
test
mov
cmc
sub
sub
jle
push
pop
arpl
fists
adcb
adcl
push
in
pop
test
cltd
jmp
or
aaa
dec
cmp
cmp
sbb
mov
test
xor
das
ffree
cwtl
out
mov
pop
lock
and
inc
inc
add
icebp
scas
cmp
jmp
aad
xchg
out
push
negl
or
stc
sbbl
inc
hlt
and
fistl
and
mov
xchg
adcb
sbbl
jns
mov
sbb
scas
add
ss
ss
dec
outsb
add
and
cs
xor
loope
je
or
xor
cmp
les
ret
mov
scas
divl
mov
imul
and
into
into
daa
out
inc
xchg
push
enter
add
pop
mov
lret
and
icebp
test
ffreep
and
roll
inc
pushf
push
popf
xlat
cld
mov
int
mov
test
sbb
and
xchg
inc
mov
out
icebp
mov
lret
or
enter
stos
adc
testb
ljmp
jae
sbb
add
aam
inc
cli
test
pop
movsb
mov
pop
das
jp
xchg
sbb
ret
sub
jae
jne
mov
inc
push
je
jle
jae
jp
cwtl
sbb
jecxz
mov
icebp
pop
mov
js
scas
sahf
cmp
inc
ss
cmpsb
push
or
cmp
movsb
mov
mov
or
pop
enter
mov
pop
or
fcomip
or
xor
fwait
fs
out
xlat
add
cmp
mov
popa
jge
jne
das
sub
pop
test
mov
adc
dec
xor
mov
enter
mov
dec
fisubl
arpl
in
cmp
jmp
inc
aad
rol
xor
xchg
jmp
inc
push
push
xlat
push
jl
adc
mov
xor
and
sbb
sti
or
or
xchg
pop
imul
adc
outsb
mov
lea
decb
push
aas
int
popa
add
ficoms
push
mov
clc
gs
cmp
fdivrs
lret
mov
cmp
popf
push
rcrl
int3
sti
or
test
repnz
mov
je
and
dec
or
movsl
mov
pslld
js
xchg
inc
xorl
or
cmp
cmp
test
dec
fldl
jae
in
sbb
xor
pop
xchg
sub
sub
aam
add
push
xor
adc
add
jnp
hlt
mov
jg
cmp
adc
fimuls
scas
out
rorb
jo
jno
mov
pop
pop
pop
cmp
scas
fisttps
ftst
jne
add
and
dec
push
lcall
aam
sub
lods
push
ret
sub
das
mov
or
adc
mov
mov
push
jno
sbb
pop
shl
mov
loope
jle
xchg
clc
mov
out
cmp
dec
cmpb
dec
loopne
push
pop
idivb
lods
daa
xor
lea
inc
xlat
mov
adc
test
pop
pop
jle
add
sub
and
sti
push
jbe
ljmp
hlt
pop
enter
imul
xrelease
mov
mov
mul
fisubrl
cli
movsb
inc
mov
sbb
movsb
ds
in
mov
jo
push
or
es
loop
int3
sbb
xlat
cmp
sub
inc
nop
pop
sub
adc
add
adc
ds
ljmp
sbbb
jno
mov
mov
aas
hlt
aaa
push
xor
push
and
jae
mov
jecxz
pop
inc
iret
cmp
jecxz
add
xor
pop
cwtl
xor
push
xchg
mov
lods
shr
imul
scas
adc
insl
add
scas
loop
outsl
pop
mov
mov
mov
andb
scas
sub
push
imul
outsl
mov
cmp
repnz
or
shll
xor
pop
pop
and
ds
adc
lea
insl
mov
inc
mov
and
bnd
jg
push
icebp
add
sub
adc
push
rorl
mov
mov
hlt
ret
adc
push
aaa
jb
or
push
imul
mov
icebp
movsb
fwait
inc
push
lea
mov
lods
loopne
push
lock
add
scas
mov
inc
sbbl
add
cmp
xor
lods
mov
aaa
pop
push
fidivs
fisubrs
xchg
das
cmp
mov
inc
xlat
jb
pop
sbb
xchg
inc
push
popa
std
outsl
xlat
jae
loope
dec
jg
mov
mov
fidivrl
test
cmpsb
and
loop
fsts
out
subl
jp
nop
ficoms
popf
shrb
mov
jecxz
test
icebp
leave
xor
imul
xor
jmp
outsb
push
leave
lret
aas
sbb
daa
data16
sbb
repz
cld
sarb
movsl
leave
and
pop
ljmp
add
aad
push
test
insl
mov
mov
push
jae
xchg
dec
pop
clc
scas
sbb
adc
iret
stos
mov
adc
add
jnp
cmp
and
push
push
sti
orb
xchg
out
aam
pushf
stos
mov
pop
push
outsl
popa
xlat
dec
sub
jp
pop
lahf
jo,pn
and
dec
fmulp
insb
jns
inc
sub
xor
mov
pop
into
jmp
out
imul
in
sti
addb
call
lea
in
add
and
or
lods
enter
cmc
xchg
jb
cld
scas
popf
xchg
shll
iret
mov
push
inc
nop
pop
push
mov
andb
mov
mov
mov
test
inc
test
mov
sti
adc
adc
adc
loope
xor
push
jp
cmp
lods
in
dec
pop
lahf
inc
cli
fisttps
jg
mov
sbb
and
call
mov
fldl
sahf
or
out
test
out
add
test
pushf
test
cli
imul
xor
pushf
cltd
out
mov
mov
cmc
js
mov
sbb
dec
add
das
repnz
dec
jl
nop
movsb
fdivrs
jle
cmp
cmpsl
push
xchg
sub
mov
in
stos
mov
mov
scas
inc
aas
lret
mov
add
std
push
outsb
scas
cmpsb
xchg
ljmp
pop
das
push
mov
pusha
shrb
cmp
dec
push
push
fnstenv
adc
push
push
rorl
je
add
inc
icebp
jg
jno
mov
mov
sub
out
lahf
xlat
stc
jno
sub
lahf
std
mov
in
xchg
inc
or
stos
int3
pushf
xchg
mov
cltd
shll
xor
dec
movsl
popf
mov
psrad
fucomi
jg
lahf
orb
sahf
mov
cmp
aaa
mov
dec
jno
fwait
ljmp
jb
loopne
inc
adc
int3
popa
sahf
add
jg
cmp
imul
adc
popa
mov
cmpsl
cli
mov
test
in
jge
xor
cmpsb
inc
es
sub
je
in
ret
inc
sarl
cmc
imul
jle
sahf
cli
test
mov
les
pop
jge
cs
cwtl
adc
addr16
aas
adc
or
shl
or
dec
dec
in
scas
add
mov
and
xor
icebp
jo
aas
inc
addb
pop
inc
pop
adc
mov
das
sti
sti
pop
pushf
inc
and
imul
xchg
mov
bound
xor
jae
push
xor
add
cmp
mov
and
fwait
push
dec
jmp
ljmp
xorl
jge
jge
aam
popa
sar
add
jmp
xchg
unpckhps
cmp
pop
out
add
xchg
xor
sbb
cmp
cs
lret
cmc
mov
mov
xchg
dec
inc
xor
adc
lea
mov
icebp
adc
add
dec
jmp
dec
sahf
mov
mov
cmpsl
pusha
jmp
mov
push
xchg
pop
cmp
mov
aaa
cltd
add
mov
out
mov
shl
fwait
cltd
sbb
cmp
repz
leave
loop
ss
lock
pop
out
jns
pushf
cmpsb
movsb
inc
push
jecxz
lds
pop
cmp
mov
popf
fdivp
adc
adc
sbb
cmp
cld
loop
sbb
repnz
sub
rcl
xchg
sbb
andb
lods
movsl
sbb
jmp
ret
inc
mov
cmp
push
cmp
mov
ret
jg
and
push
xchg
adcb
push
and
and
aas
lock
add
push
bound
or
fwait
sarb
push
push
aam
cmpb
pop
jge
and
jecxz
push
xchg
ret
shrb
jmp
or
xchg
or
mov
shlb
cltd
and
xchg
xchg
mov
leave
adc
and
loope
inc
insl
hlt
js
mov
mov
xor
nop
stos
cmp
inc
lret
mov
mov
add
fwait
iret
rolb
setle
dec
mov
xchg
insl
push
adc
xchg
adc
push
and
adc
movsb
out
in
mov
in
xchg
nop
adc
pusha
push
loopne
in
stos
outsb
arpl
xchg
cmp
outsl
insb
add
xor
out
frstor
ja
xchg
loop
add
pop
mov
hlt
hlt
test
test
aam
iret
popf
cwtl
stc
push
xchg
mov
jecxz
xchg
lods
or
push
shr
mov
add
imul
or
adc
inc
cmp
mov
fistl
mov
cmpsb
sub
push
inc
sbb
fldl
cwtl
movsb
mov
filds
lock
std
xchg
popf
cli
sbb
stos
out
in
adc
or
jnp
scas
mov
mov
cmp
xor
mov
jmp
setb
mov
pop
lret
xor
popa
fucomip
repnz
cltd
mov
jb
jge
adc
cltd
xor
bound
out
mov
rcl
lcall
daa
fnsave
fldt
sbb
xor
xchg
fidivl
or
adc
jb
bound
ret
pop
std
pop
cwtl
push
and
sbb
cmp
pop
cmp
outsl
mov
adc
add
jne
popl
aaa
faddl
leave
inc
nop
push
popf
movsl
insl
jecxz
lods
lock
dec
mov
inc
push
insl
xor
jge
sub
daa
mov
sub
daa
sbb
and
jns
ljmp
xchg
scas
shlb
push
or
mov
arpl
mov
or
cmpsl
popa
aas
and
xor
stc
xorl
mov
jb
jge
sahf
sbb
sub
in
push
xchg
push
ljmp
cmpsb
or
xor
add
ret
jns
xor
daa
out
je
fcomp
xlat
add
in
push
jo
ret
out
mov
cs
cmpsl
adc
jge
lea
cmpsb
int3
hlt
mov
add
pop
push
out
xor
in
adc
jae
mov
jb
cld
icebp
push
jg
imul
imul
repz
test
mov
ljmp
and
dec
addr16
fwait
orl
iret
and
aaa
add
inc
stos
out
xchg
cmp
or
data16
stos
push
imulb
jne
int
lahf
cmp
dec
cmp
fmull
enter
js
dec
aas
mov
cmp
stos
cmp
out
push
and
rcl
movsb
int
xchg
mov
jle
add
lock
push
shll
add
adcb
xchg
xor
pop
mov
sbbl
lcall
int
pop
cmpsb
push
cs
mov
or
jnp
adc
sub
ds
cli
and
fstp
cmpsb
into
je
mov
sbb
sarb
jbe
mov
pop
movsb
loop
cmpsl
sub
and
inc
fnstenv
lret
inc
jp
inc
mov
imul
xchg
sub
inc
pop
xor
cmp
movsl
repnz
scas
sbb
test
xchg
pop
sbb
orb
lret
pop
cmc
sbb
pop
cmp
ret
sbb
jne
inc
out
xor
or
xchg
jle
test
cwtl
jnp
repnz
stos
sbb
adc
mov
sub
cli
cmp
sub
mov
fistpll
push
repz
sbb
push
bound
add
imul
rcrl
xor
adc
loope
jne
ljmp
fs
or
jge
mov
inc
adc
lods
ret
mov
or
xor
aaa
iret
es
or
mov
lcall
std
test
inc
pop
mov
shl
cli
pusha
loopne
xchg
push
mov
sbb
sbb
adc
stos
out
push
mov
mov
cli
fs
dec
xor
cmp
pop
sub
pop
jp
or
fstl
cmc
sbb
sub
std
hlt
push
fldt
xchg
sbb
decb
sbb
test
pop
xchg
orl
shlb
ds
aad
lods
aas
mov
sarl
out
ja
imul
jl
cmp
cwtl
js
dec
js
je
or
roll
sarl
orb
adc
clc
push
jae
dec
punpckhwd
fistl
into
js
ror
and
daa
js
rcrb
fadd
jb
fistpll
adc
test
cmpsb
stc
sbb
xor
hlt
inc
aad
and
mov
and
mov
adc
add
arpl
orb
sub
inc
iret
and
loope
xor
xor
out
pop
test
xor
sub
faddl
mov
mov
sub
mov
add
dec
push
ret
rorb
lds
adc
mov
pushf
test
sbb
cmpl
fadds
dec
jnp
cmc
cmpsb
mov
test
push
sub
lods
arpl
inc
sub
cld
nop
sub
mov
addr16
ljmp
mov
roll
sbb
cli
xchg
sub
fdivrs
dec
data16
xor
dec
mov
inc
loopne
sti
scas
ljmp
cmp
push
lods
das
ret
shrb
into
fdivrs
outsl
int
and
inc
mov
popf
mov
pushf
xchg
adc
lcall
sbb
repz
and
cli
dec
add
orl
jae
loop
aad
in
push
add
or
loop
jnp
dec
mov
rcrb
mov
pop
dec
frstor
ror
gs
imul
xor
adc
inc
pop
or
pop
popf
mov
mov
cmpsb
jle
mov
push
sbbb
rorl
mov
or
imul
cmp
fsubs
jge
sub
jno
shlb
or
adc
aad
mov
shl
lds
pop
jge
mull
sbb
fidivrs
sbb
jmp
ret
cli
sub
jnp
cmpsb
push
or
cmc
push
mov
push
lods
sbb
dec
add
mov
dec
out
popa
movsb
ss
jne
adc
imull
xchg
dec
pop
cmp
or
les
mov
adc
mov
mov
jp
pusha
pop
cli
lods
lods
lret
addr16
cvtdq2ps
inc
lcall
movsb
mov
shrl
xor
jp
xor
push
xchg
and
sbb
mov
mov
frstor
sub
xchg
cltd
dec
or
fdivl
fistl
and
iret
ljmp
push
jecxz
sti
adc
je
ljmp
pushf
hlt
pop
ret
mov
in
and
pusha
xor
outsb
push
xor
xorb
sub
test
cmp
mov
sub
test
xchg
push
orl
fstl
sub
arpl
push
int
push
xchg
mov
jl
push
cmp
jmp
pop
mov
ds
xor
jno
sub
push
cmpsb
or
icebp
add
fcompl
xchg
or
push
stos
mov
fwait
mov
jne
subb
in
test
jp
jmp
cwtl
frstor
clc
sbb
test
mov
push
inc
xor
mov
imul
add
ljmp
fmull
xchg
inc
popa
leave
mov
sbb
in
and
mov
daa
mov
stc
enter
inc
adc
imul
icebp
inc
repz
mov
movsb
push
mov
adc
add
or
pop
add
xchg
sbb
jb
cmp
adcb
icebp
xchg
fldenv
es
dec
addl
adc
insb
stc
dec
jbe
dec
dec
shl
add
or
rclb
aam
aas
xchg
jl
idiv
pop
das
add
jb
movsb
xor
aam
cmpsl
std
setnp
jae
inc
mov
shr
jecxz
xor
jle
jae
pushf
orl
and
out
sbb
filds
xor
mov
mov
lret
pop
push
out
lea
in
rorb
or
mov
iret
xor
mov
push
inc
andb
bound
push
out
sbb
mov
lods
sbb
pusha
mov
outsl
lock
cmp
into
push
lock
add
add
push
andb
xchg
xchg
std
repnz
lds
sbb
in
loope
fisubl
xchg
pop
lock
add
push
ja
int3
pop
sub
out
sbb
adcl
ss
xchg
fists
mov
es
stc
mov
or
loopne
cmp
sbb
cmp
cs
scas
push
inc
mov
sbb
or
std
mov
lods
test
test
adc
outsl
inc
ficoml
and
fiadds
lret
mov
fsubrl
imull
mov
xor
add
sbb
out
cmc
xchg
outsb
and
add
cmp
popa
out
shll
sbbl
cmpsb
orl
repnz
cs
fisttps
mov
sbb
mov
stc
ret
rolb
mov
out
adc
jo
ja
fs
sub
inc
jo
pop
pop
jb
mov
mov
in
fimuls
mov
xchg
mov
insb
jns
dec
into
subl
cmp
jle
test
in
mov
lahf
daa
dec
dec
lret
aam
in
lds
sbb
jg
sti
gs
and
js
sbb
cli
mov
sti
xor
lds
aaa
test
ja
test
es
loope
lret
popf
inc
sbb
mov
fistps
sbb
ret
xchg
rcrl
insl
aad
fsubrl
iret
inc
ret
int
push
insl
and
xchg
daa
and
gs
adc
in
lahf
xchg
shlb
mov
popa
movzwl
ss
je
out
xor
lock
xchg
add
inc
aaa
xlat
sub
pop
inc
fildl
mov
add
mov
mov
sbb
pop
lahf
cmp
inc
ds
xchg
jnp
mov
cmp
loope
imul
sub
dec
push
mov
jp
out
xor
jne,pt
add
jp
out
and
inc
mov
inc
pop
push
test
test
repz
mov
cmpsb
bound
cmp
dec
daa
push
and
lock
ja
mov
aad
je
mulb
movsl
lret
mov
or
mov
mov
mov
std
scas
rorb
sbb
daa
test
repnz
add
fisttpll
mov
shlb
aam
mov
cmp
gs
pop
mov
xor
test
and
fisttpll
rolb
ljmp
adc
int
and
fucom
adc
rorl
xor
loopne
push
fmuls
cmp
dec
inc
inc
pop
cwtl
or
js
jae
jb
scas
les
ja
pop
sub
mov
push
sub
stos
cmp
imul
mov
sbb
cmp
and
cwtl
test
sbb
addr16
fsubr
jb
iret
jmp
add
arpl
mov
fstl
mov
push
jmp
sub
paddd
adc
jge
insb
mov
adc
and
bound
sbb
jns
cmpsl
imul
xchg
sbb
mov
outsl
mov
xlat
fwait
jnp
inc
jp
roll
inc
jecxz
xchg
pop
lret
inc
xchg
faddl
xor
icebp
movsl
xchg
lods
aas
mov
test
dec
sub
add
inc
xchg
xchg
sar
repnz
xor
inc
ret
lret
adc
pusha
add
mov
insb
sbb
loope
lcall
mov
jle
jl
jae
cli
popa
cwtl
sar
xor
sbbl
pusha
xor
push
filds
repz
and
fstpt
mov
lea
mov
cmpps
dec
cltd
push
addr16
ss
aam
jecxz
xlat
pushf
decb
repz
push
sub
xchg
shll
dec
jge
dec
repz
addl
fadds
repnz
ss
divl
rclb
push
test
push
arpl
movsb
lahf
push
push
push
mov
adc
sbb
or
xchg
mov
loop
dec
loop
xlat
jb
mov
imul
pop
dec
lds
mov
lds
int
cmc
jp
fdivl
push
pushf
fbld
mov
dec
cltd
jg
mov
jno
inc
jae
stos
jp
ret
outsl
push
es
push
insb
xorl
iret
es
push
inc
jnp
mov
cld
push
mov
mov
mov
inc
add
or
loope
adc
push
sbb
sbb
aam
aam
inc
fwait
pop
add
sbb
arpl
jo
mov
lahf
push
outsl
insb
pushf
mov
cld
outsb
adc
pop
mov
sub
xor
jbe
ret
fimull
call
lods
mov
enter
jnp
iret
sub
sbb
mov
push
clc
fisubl
mov
je
gs
leave
dec
mov
xor
push
out
int3
xor
hlt
sub
sub
push
pop
inc
movsb
lea
inc
vmwrite
data16
xchg
mov
cmp
fdivrl
push
and
cmp
leave
push
or
jb
and
xor
mov
fidivrl
test
test
push
and
or
daa
out
add
mov
stc
xchg
dec
sarl
inc
add
movsl
jmp
push
rorl
movsl
adcb
xor
ret
movsb
fldt
fs
push
mov
push
xor
inc
lock
imul
add
push
pop
adc
test
lods
pop
dec
fldt
inc
mov
push
lds
adc
ret
std
lea
imul
adc
stos
or
adc
lods
mov
push
sub
pop
fstpt
xor
pop
loop
outsb
cmp
clc
dec
cli
adc
vaddpd
mov
sub
push
mov
mov
push
push
repnz
mov
xchg
lahf
iret
int3
sahf
inc
push
sub
fstps
mov
jge
jnp
push
cwtl
dec
enter
test
daa
xchg
popa
les
mov
pushf
out
xchg
mov
push
adc
jp
int3
out
ss
adc
cs
sub
inc
nop
fs
cmp
jg
xchg
icebp
or
mov
xor
int
je
adc
or
mov
mov
push
sahf
scas
inc
test
cmpsl
jmp
push
fwait
cld
scas
mov
cwtl
xor
cs
mov
cmpsb
iret
sub
lcall
push
ljmp
cmp
das
add
and
mov
pop
fsub
mov
sti
nop
rcrb
adc
call
inc
mov
ds
out
imul
addl
dec
test
pusha
xchg
mov
icebp
mov
mov
rcrb
repz
mov
push
push
sbb
mov
jmp
rcll
inc
shlb
in
xchg
mov
int
std
inc
jnp
lret
rcrb
jl
test
data16
test
jns
fbld
xor
cs
lock
insb
add
in
mov
ret
jmp
orl
jne
sarl
mull
popa
cmc
push
jp
ss
push
fsubrp
hlt
jmp
jmp
ret
test
dec
dec
pushf
in
pop
jp
jno
fadds
mov
sub
sahf
jle
sahf
gs
rcl
stos
dec
dec
mov
sub
mov
movups
sbb
test
and
push
pop
fucom
dec
mov
pop
xor
push
in
aaa
push
adc
lock
call
sbb
aad
mov
xchg
repz
enter
jle
push
push
mov
sahf
mov
push
in
mov
lock
lock
subb
mov
sub
sbb
nop
dec
mov
imul
sahf
rcrl
sub
push
in
mov
cmpsb
jae
scas
jp
lock
adc
lret
rclb
test
xchg
xorl
lcall
lods
mov
loope
pop
addb
out
jno
stos
mov
sbb
mov
mov
js
popf
mov
sub
rorl
sub
pop
xchg
xchg
insb
sbb
in
xchg
inc
clc
adc
sbb
bound
dec
mov
push
test
push
data16
jmp
das
push
insb
xor
jo
pop
push
xchg
popa
int3
xchg
jp
xor
mov
lret
xchg
test
xor
pop
ja
cld
lods
mov
xor
movsl
repnz
push
push
out
xchg
jmp
xor
leave
ret
cwtl
imul
scas
popa
dec
mov
pop
push
jle
xlat
jl
cltd
int3
mov
mov
lods
cmp
enter
pop
add
push
fdivrs
aas
mov
push
dec
leave
ret
mov
inc
sub
mov
push
xor
leave
inc
cmp
lds
gs
mov
mov
js
cmp
mov
cmpsl
sub
addr16
mov
jg
jno
cmpsb
imul
inc
in
dec
dec
and
repnz
cmc
or
xor
call
imul
xor
add
cmp
xchg
addr16
add
mov
sbb
fbstp
mov
add
xchg
cmc
push
inc
iret
lods
imul
je
or
cltd
mov
out
dec
mov
rorl
push
addb
shll
jae
add
inc
pop
jns
push
xchg
cmp
cmpsb
cmp
mov
or
adc
or
add
imul
push
and
nop
jo
inc
mov
push
loop
sbb
jae
cmp
sbbb
shll
iret
in
xchg
dec
fimuls
push
enter
xor
xor
dec
inc
int
in
lcall
scas
sbb
pop
jle
cmp
or
scas
mov
jno
in
ret
adc
inc
add
or
inc
xor
and
push
jae
outsb
push
sbb
into
and
ror
mov
hlt
sbb
mov
jmp
push
and
and
movsb
pop
jo
push
pop
inc
stos
lret
and
mov
subb
outsl
mov
push
negb
or
aad
push
mov
lea
jge
dec
sub
inc
jb
aas
repnz
arpl
push
sub
test
dec
mov
inc
and
xlat
jns
or
fistl
jno
push
xor
push
adc
daa
loop
xor
jo
out
and
ja
pop
ret
loope
dec
xor
mov
sbb
fwait
pusha
mov
hlt
xor
sbb
adc
sti
pop
hlt
out
imull
stc
sub
mov
cwtl
and
lret
in
mov
mov
cmp
mov
movsb
ljmp
inc
pop
inc
xchg
push
sbb
cmp
jge
negl
cli
push
mov
into
sbb
xchg
fmuls
push
sub
jg
mov
or
inc
ficomps
jnp
pushf
add
mov
jnp
data16
sti
jl
addr16
jmp
push
fcompl
shrb
or
push
les
rcll
pop
xor
adc
inc
add
push
mov
aaa
inc
jge
pop
or
xchg
imul
test
adc
rorb
cli
fnclex
nop
es
xchg
mov
mov
pop
xchg
xchg
jle
fstpt
jg
sub
sti
mov
movb
out
pushf
imul
scas
pop
sbb
mov
push
pop
sbbb
mov
jbe
cmpsl
fcomps
lahf
sbb
sti
lods
movsb
xchg
mov
xchg
clc
imulb
aam
jg
fnop
jno
push
mov
push
dec
sub
dec
dec
test
or
adc
lods
loopne
inc
fnstenv
jle
pop
rorb
popf
loopne
xchg
jmp
and
out
lds
dec
lods
xor
fists
psadbw
scas
push
mov
jl
inc
aam
cs
sub
fsubrl
shrb
fucomi
mov
mov
fs
xchg
movsb
mov
lods
dec
push
adc
pop
pusha
test
out
stos
mov
dec
fisttpll
gs
dec
testb
mov
pop
faddl
sbb
iret
adc
insb
xchg
mov
ss
mov
iret
jle
test
pusha
pop
mov
sbb
or
cld
stos
pop
push
xorb
loope
dec
sbb
ja
lds
fiadds
cmp
dec
aam
inc
arpl
jns
add
out
jns
jns
cltd
cmp
rcll
mov
cli
shll
imul
inc
int
push
mov
mov
jge
xchg
sub
adc
stos
cmp
lods
xchg
sysenter
mov
and
lods
pop
rcll
xchg
ja
popa
mov
or
jno
inc
mov
aaa
sti
adc
jecxz
pop
cltd
lods
movsl
dec
push
in
pop
lds
mov
cmpsb
sbb
rcr
fdecstp
mov
and
repnz
or
cmpsl
xchg
sbb
xchg
inc
cmpsl
or
mov
jbe
aas
xor
subl
cmp
rclb
aam
mov
test
jne
xchg
push
jmp
je
lret
mov
pop
imul
inc
mov
pop
in
inc
lods
jmp
xor
addb
insl
pop
push
dec
stos
popf
adc
shll
push
or
sbb
outsb
fsubrs
stos
push
in
inc
flds
mov
pop
jle
adc
xchg
bound
sub
or
pushf
push
aad
cmp
addr16
mov
mov
scas
cmpsb
xor
mov
mull
aas
imul
add
jg
aad
add
and
push
add
outsb
rcll
test
add
mov
cli
sbb
scas
mov
jnp
xchg
gs
adc
jb
inc
mov
int3
adc
xchg
sti
or
mov
pop
dec
push
sub
and
jmp
stos
mov
push
test
mov
notl
jecxz
jp
jo
pop
cwtl
cltd
das
push
jns
les
push
fwait
imul
pop
push
xor
ficoml
lahf
bound
cwtl
cwtl
imul
push
push
lret
daa
pop
mov
pop
mov
mov
fstps
mov
inc
dec
mov
mov
mov
or
jns
fwait
loop
pop
scas
ret
insl
insl
andl
mov
mov
in
fwait
and
inc
adc
mov
popf
jecxz
aam
dec
fsub
add
sub
lcall
ss
mov
mov
mov
mov
in
int3
negb
insb
mov
in
insb
in
repnz
or
inc
mov
fstp
add
add
pop
mov
fadds
dec
fidivrs
dec
mov
fs
bound
xchg
cwtl
cmp
pop
shll
es
xor
fwait
in
xchg
inc
inc
xlat
mov
sbb
jp
or
out
leave
lahf
cmp
dec
xchg
xor
rep
pop
lcall
xor
and
addb
daa
cmp
hlt
cmp
push
shrl
sti
and
fsubl
popf
in
cmp
sub
cmp
cltd
sub
inc
inc
ja
cli
pushf
adc
icebp
xor
enter
or
adc
adc
inc
inc
cltd
mov
dec
ja
aam
stc
dec
xor
loope
fwait
xchg
aas
mov
sub
out
or
or
push
jbe
push
inc
lds
int3
mov
inc
sub
xor
mov
xorl
push
xchg
mov
pop
push
xor
push
imul
inc
imul
dec
pop
ret
repnz
inc
jb
adc
into
pop
pop
in
jo
fildll
adc
arpl
jle
and
pop
add
dec
xchg
mov
dec
int3
or
loop
pop
stos
push
inc
push
test
scas
in
xchg
sub
fildl
inc
rcrb
stos
mov
je
add
or
sbb
cmpsb
jl
mov
divl
repnz
les
cmp
inc
leave
xchg
sahf
push
aaa
push
and
add
fidivs
adc
xchg
pop
add
sbb
pop
add
dec
jns
adc
cmp
dec
out
js
push
out
push
adc
pop
bound
mov
adc
mov
sub
out
gs
and
negl
sarb
mov
and
mov
dec
mov
or
popa
cmpsl
xchg
xchg
cmpsl
pusha
and
mov
jbe
sub
aam
jp
push
fsubs
sub
sbb
lcall
cmp
xlat
mov
mov
sub
lock
add
inc
movsb
cmp
out
mov
pushf
inc
imul
push
lcall
scas
mov
xchg
ljmp
in
imul
jne
lds
inc
push
pusha
sbb
out
inc
mov
jae
rcl
inc
icebp
xchg
jge
xor
inc
movsb
inc
icebp
pop
pusha
mov
mov
cmp
add
out
xchg
cs
call
stos
jbe
loope
mov
pushf
enter
adc
and
push
jle
andl
xchg
jge
push
aas
add
xchg
push
sub
in
jge
pop
and
ljmp
push
rcrb
fmulp
leave
call
clc
cmp
mov
xor
shlb
pop
cltd
xor
aas
aam
stc
test
mov
xchg
in
xlat
call
or
add
fsubrs
jle
fs
movsl
add
add
add
xchg
cli
out
dec
decb
aad
jmp
fs
lcall
pop
subl
scas
xchg
out
shrl
stos
fisttpl
xchg
sbb
push
lods
jmp
fistpll
mov
imulb
inc
sbb
push
push
notl
jae
xor
pop
sub
repz
hlt
pushf
sbb
cmp
out
std
sbb
gs
dec
je
mov
repnz
sub
shrb
mov
pop
scas
mov
pop
pop
fidivl
cmc
adc
fistpll
mov
push
inc
aad
mov
fistps
movsb
mov
leave
inc
cmp
dec
add
arpl
notl
inc
jmp
call
push
leave
sbbl
neg
ret
cmp
pop
lods
mov
cwtl
scas
ret
mov
jmp
mov
loope
mov
test
push
movsl
adc
repz
inc
ret
pop
pop
mov
int3
rorl
cli
les
insl
jl
mov
jbe
xchg
push
fiaddl
sbbl
or
lods
pop
outsb
dec
clc
jl
add
scas
loope
mov
adc
das
xor
mov
jp
xchg
mov
lods
push
das
pushf
movsb
mov
out
mov
shlb
adc
sbb
in
in
imul
mov
and
popa
adc
nop
inc
sub
call
sbb
add
lds
addb
inc
int3
ror
dec
fs
in
jb
inc
out
xlat
je
enter
mov
inc
mov
jl
inc
pop
repnz
frstor
in
pop
inc
inc
mov
xchg
inc
xchg
xchg
je
push
cmp
pop
insl
scas
out
orl
nop
sti
sub
pop
mov
push
int
push
shrl
lret
rolb
and
andb
daa
mov
jg
xchg
loop
or
adc
xchg
fcmovnb
mov
fs
push
or
add
fnstsw
dec
or
sub
cltd
fsubrl
lea
arpl
mov
xchg
jno
cmpsb
repz
inc
mov
lds
rcrb
xchg
mov
shll
lds
mov
push
loop
sub
mov
out
inc
or
arpl
aas
repz
or
add
mov
adc
cld
xlat
in
gs
pop
sub
cmp
fiaddl
out
cmp
inc
pop
movsl
pop
cld
xchg
and
aaa
lret
pop
test
decb
adc
xchg
int
dec
dec
jmp
sbb
push
jae
call
jb
dec
xor
in
mov
in
aam
sub
jp
out
dec
pop
out
cmp
lods
pop
cmp
adc
jl
inc
aam
nop
fldcw
pop
shll
jg
jp
mov
push
adc
pop
pop
ret
fistps
fadds
dec
and
jge
fildll
out
pusha
jmp
xor
sub
andl
pop
sub
and
out
mov
aad
inc
sub
cli
adc
rclb
lds
mull
dec
imul
add
movsl
cmpsb
cmp
std
push
mov
enter
pusha
cmc
sti
sahf
lds
mov
mov
int
mov
pushf
repnz
add
bound
push
iret
std
arpl
ret
outsb
add
sahf
in
sahf
rclb
cmp
xchg
lahf
cs
sbb
scas
out
jne
push
cmp
mov
ret
ds
or
sti
addb
sbb
into
mov
and
inc
das
adc
stc
scas
lcall
adc
mov
push
adc
and
inc
outsb
push
popa
cmp
xor
pop
xor
jno
js
dec
cmpsb
jp
repnz
test
notl
outsl
mov
mov
dec
xor
lds
jo
sub
cmc
jge
jmp
ljmp
xchg
jnp
mov
sbb
and
jmp
pop
cmp
pop
xor
repz
mov
cmpsb
cs
test
jns
mul
leave
pop
push
dec
and
test
jl
jo
outsb
cmc
lods
orl
out
inc
or
mov
mov
and
stos
mov
mov
stos
fisubs
and
enter
ja
mov
call
adc
sub
stos
inc
andps
icebp
jne
fnsave
into
push
adc
xchg
push
fwait
xchg
cmp
mov
insl
dec
ficomps
fldl
iret
das
pop
outsl
jnp
test
cmpsl
cmpl
out
mov
inc
daa
xor
fistpll
push
pop
mov
xchg
sbb
arpl
stos
cwtl
sbb
lret
das
dec
imul
mov
mov
in
movl
xchg
imul
lret
fcom
mov
cmpsl
sbb
pusha
sbb
adc
xorb
insb
or
fld
pop
stos
inc
dec
mov
enter
or
andl
mov
push
adc
loope
sub
add
cmpsl
insb
lods
mov
xchg
nop
ret
lret
int3
cli
call
xchg
pop
test
push
dec
xorb
in
addr16
sbb
addb
inc
pushf
jne
insl
test
inc
sub
int3
shrl
cmp
subb
xchg
into
pop
roll
push
xchg
mov
test
fdivs
fcomps
push
pushf
sbb
fisubrs
mov
int3
pop
int3
dec
push
jnp
xchg
push
fcoms
jecxz
arpl
fs
pop
cmpsb
mov
xchg
dec
dec
in
sti
or
pop
movsl
movsb
ror
push
es
test
add
lea
mov
mov
add
and
mov
out
push
sbb
xrelease
jno
mov
and
cmpsb
xchg
inc
mov
add
arpl
mov
sbb
push
loop
sbb
cmp
xchg
ja
hlt
inc
aaa
popa
inc
dec
aad
mov
sub
orl
std
xlat
jmp
xchg
pop
testl
and
cmpsl
jns
cmp
cmp
pop
cmpsb
lock
sub
scas
loope
pop
ds
xchg
xchg
mov
pop
cs
adc
inc
fcoms
sbb
mov
cmpl
ret
mov
out
xchg
adc
mov
hlt
popa
inc
test
out
insl
lret
das
push
test
cmp
push
adc
and
pop
add
aad
cli
push
or
jle
push
mov
push
out
leave
out
stc
movb
insb
cs
outsl
inc
sbb
dec
mov
filds
and
xchg
jmp
add
pop
idivl
ret
test
int3
cwtl
xchg
mov
jp
outsb
lock
shl
outsl
rcr
mov
inc
je
js
shll
hlt
mov
pop
cmc
adcl
xorl
and
inc
mov
cs
and
lock
outsl
mov
pop
or
jge
sbbb
imulb
icebp
aad
imulb
pause
fwait
movsl
jb
stc
ja
pop
jle
push
push
lods
jmp
outsb
decl
ja
add
sarb
lea
xlat
ja
mov
and
ficompl
lret
clc
test
pop
xchg
jecxz
jge
scas
popf
mov
aas
outsb
fnstsw
inc
clc
cli
lret
es
xchg
cmp
addr16
inc
adc
cmp
xlat
sub
test
dec
mov
ret
imul
scas
imul
int3
imul
mov
and
mov
shr
dec
aaa
js
ss
ret
lahf
icebp
mov
lods
mov
adc
xor
movsl
mov
xchg
add
bound
ret
push
pop
push
int3
push
call
jae
sub
mov
pop
pop
les
pop
dec
test
std
pop
call
lcall
pop
xchg
push
ljmp
mov
bound
incb
addl
push
and
outsl
test
ret
mov
add
mov
sub
hlt
fsubr
in
mov
sub
nop
add
es
lahf
bound
sbb
xchg
add
add
mov
inc
pop
push
aad
test
inc
fisttpl
mov
adc
push
dec
cmp
and
or
lret
arpl
inc
push
gs
adc
add
mov
int3
nop
std
shrb
bswap
inc
fldt
fldt
cwtl
pop
mov
push
xor
mov
lods
mov
mov
fwait
add
in
push
into
xor
xchg
or
mov
imul
out
call
jg
pushf
xchg
sarb
push
aam
shll
adc
es
inc
lret
jnp
gs
pusha
inc
jnp
arpl
push
cs
cltd
dec
ret
and
dec
lods
mov
arpl
inc
or
loopne
sti
inc
loop
push
xor
aas
mov
iret
jle
cmp
test
fildll
cmp
jo
test
mov
outsl
push
ss
roll
insl
nop
add
inc
jns
test
sti
jb
popf
xor
mov
cld
push
mov
mov
stos
data16
mov
pop
lret
xor
aas
hlt
pop
push
pop
cmp
dec
jae
jmp
jb
je
fdivp
movb
xchg
andb
loope
push
add
and
mov
and
hlt
cmp
pop
repz
mov
pushfw
and
cmp
loope
in
mov
call
cmp
xchg
mov
shrl
and
movsb
rorb
push
and
testl
inc
in
call
lret
ja
ret
cmp
pusha
iret
adc
push
in
jae
pop
pop
xchg
push
mov
outsb
push
xchg
shll
pop
and
mov
enter
add
adc
test
in
pop
dec
push
stc
ret
arpl
sub
sbb
adc
add
xor
push
cmpl
and
xchg
push
fsts
mov
xchg
stc
lret
stc
pop
in
sub
cmp
mov
lods
inc
pop
pop
orb
pop
inc
fidivrs
cmp
xchg
sbb
mov
adc
pusha
bound
xchg
sbb
int3
or
dec
mov
or
pop
push
cmp
shll
mov
cmc
pop
add
pop
and
push
bound
sbb
repnz
cmpsb
push
scas
lock
pop
clc
add
push
xor
jg
and
cmp
aaa
pop
fstl
add
jnp
and
imul
adc
stc
int3
movsb
xorb
fildll
test
xor
push
xor
idiv
ljmp
and
cmpsb
add
inc
scas
add
mov
jmp
lock
in
dec
std
js
addr16
xor
icebp
mov
mov
lret
mov
lock
jle
dec
adc
int3
cwtl
pop
mov
xchg
cmp
mov
mov
mov
xchg
mov
push
push
clc
adc
das
jnp
cwtl
sub
insb
rol
mov
add
test
cmp
fnstsw
in
add
into
mull
lock
jge
daa
mov
out
in
mov
mov
mov
mov
pop
sub
popf
cmp
loop
pop
mov
push
outsl
xor
stos
into
mov
jb
mov
and
shlb
popa
int3
xchg
cmp
xor
jp
sbb
adc
inc
fsubl
stos
lret
xchg
jge
icebp
add
lret
in
rcll
jle
sub
add
push
push
mov
add
test
aaa
pop
stos
test
fimull
mov
xorl
push
pop
lret
pusha
ljmp
ret
mov
sub
pop
add
mov
xchg
sahf
stc
xorl
xchg
cltd
and
adc
ficomps
and
sbbl
sahf
mov
dec
xchg
jg
dec
push
sub
test
lds
xor
sti
xchg
add
mov
mov
stos
jp
fdivs
fistpl
xor
pop
les
loope
mov
pop
or
pop
test
mov
xchg
xchg
data16
in
outsb
mov
xchg
add
fisubrl
outsb
subb
cmp
and
mov
mov
jge
aas
sti
mov
jge
mov
dec
adc
mov
ja
mov
xor
xchg
in
fs
mov
outsl
xchg
bound
xchg
ret
gs
iret
pushf
or
adc
jb
cwtl
or
mov
aas
imul
mov
fcmovnb
sbb
je
lods
mov
sub
fwait
dec
jae
adc
push
inc
fwait
dec
xchg
mov
out
dec
outsb
inc
sahf
mov
xchg
repz
pop
and
lods
jae
jmp
push
gs
popa
or
xor
into
mov
jns
xchg
inc
inc
mov
add
xor
mov
sub
mov
mov
stos
lahf
mov
push
and
sarb
es
xchg
cmp
dec
mov
inc
outsb
ljmp
add
and
sbb
and
push
out
sub
sbb
or
dec
imul
loopne
sbb
lds
pop
ds
lea
lret
pop
mov
sti
clc
pop
jle
mov
imull
xchg
addl
pop
mov
dec
push
mov
popf
push
add
push
lcall
or
int3
lea
imul
push
insl
jmp
aaa
popa
add
mov
mov
cs
sbb
fisubrs
addr16
mov
inc
imul
jp
das
cmc
adc
pop
enter
pop
test
mov
fwait
loop
mov
in
xor
add
mov
xchg
aaa
addl
ficompl
lret
dec
dec
xorb
stos
inc
adc
xchg
inc
dec
lret
pop
jnp
repz
ss
bound
ret
mov
ret
cmp
mov
out
push
pop
shll
adc
adc
imul
aaa
mov
add
sub
dec
imul
lods
decb
push
iret
mov
addb
sub
and
push
test
push
mov
adc
push
xchg
mov
mov
xchg
xchg
add
add
imul
adc
and
xchg
call
imul
dec
inc
adc
adc
mov
sub
xor
in
mov
add
cltd
sbb
sti
push
sub
inc
mov
subb
fdivs
lret
test
bound
push
das
mov
out
jne
or
xchg
mov
mov
mov
mov
addr16
xchg
xor
or
xchg
aam
mov
adc
cld
lcall
push
cmp
nop
out
orl
push
test
adc
or
daa
adc
ljmp
std
outsl
lods
and
fsubp
pop
jns
xor
and
stos
and
orb
inc
sbb
xorl
pop
inc
push
push
das
ja
gs
stos
jns
into
popa
lahf
test
pusha
retw
int
pop
sahf
test
xchg
cli
aad
add
std
jno
or
dec
add
mov
mov
sbb
out
mov
fildll
jle
call
les
fwait
lea
cmp
sub
jge
inc
lea
inc
lods
das
push
xchg
test
inc
loop
daa
ss
js
lods
or
dec
sbb
mov
test
pop
mov
sbb
or
push
and
cmpl
ss
leave
xchg
or
cmpsb
das
in
push
adcl
jbe
sub
sbb
mov
and
cs
xchg
push
arpl
pop
call
xchg
mov
mov
mov
mov
cmp
movsl
das
in
sbb
mov
negb
repnz
pinsrw
inc
sbb
rolb
mul
mov
loop
test
lcall
psubusb
out
loopne
mov
sbb
gs
xchg
mov
repnz
mov
cmp
orl
pop
test
test
inc
xor
and
push
in
push
mov
lock
mov
xchg
dec
xor
or
push
and
cmc
leave
sub
push
enter
push
in
xchg
imul
cltd
dec
adc
push
lea
mov
fmuls
xchg
dec
inc
mov
call
in
jge
jle
ljmp
bound
inc
sub
mov
fldl
xor
ss
jbe
inc
repnz
push
cwtl
aas
mov
subb
loope
mov
add
dec
adc
std
mov
fildl
xor
pop
inc
sbb
sub
push
pop
mov
mov
in
sub
test
xor
mov
lret
sbb
sbb
fists
mov
jae
popa
cltd
int3
jge
and
push
xlat
mov
and
xor
dec
loop
push
mov
mov
xabort
lret
push
jo
nop
sbb
add
negl
pop
dec
xor
add
std
cmp
adc
mov
pop
xchg
arpl
jno
add
add
cwtl
ja
pop
xor
in
xchg
add
jp
and
sub
sbb
pop
xor
or
dec
sarb
pop
imul
mov
cmp
push
icebp
stos
sbb
push
mov
testb
mov
arpl
testb
dec
test
je
imul
mov
aad
push
pushf
dec
or
iret
mov
mov
add
jle
or
imull
adc
jo
mov
cmp
test
enter
in
dec
fdivl
mov
arpl
mov
xchg
xchg
pop
int3
repnz
idivl
cmpsl
ret
cmpsl
pop
jl
daa
popa
aam
cmpsl
int3
add
movsb
add
lods
lret
inc
mov
and
mov
loope
adc
int
pop
mov
lcall
pop
test
daa
mov
xor
add
xor
dec
cmp
pop
adc
lcall
dec
test
push
out
fcompl
ja
scas
add
fs
push
xor
cmpsb
mov
pop
xchg
mov
jae
mov
cmp
pop
sbb
xor
push
outsb
popa
sbb
lcall
cmp
mov
or
cltd
jp
idivl
popa
lods
jge
push
mov
cltd
sub
adc
ja
or
mov
je
in
ret
pop
insb
push
push
stos
sub
insl
xorl
xchg
fwait
dec
test
push
nop
jecxz
js
xchg
aaa
cmp
data16
pop
sahf
aam
add
jo
aad
pop
jecxz
adc
movsb
push
es
xor
pusha
inc
sbb
out
push
ja
dec
jp
add
inc
jl
fyl2x
pop
or
sbb
and
push
loopne
push
mov
jo
xchg
pop
or
cmpsl
jno
jp
dec
stos
cmc
addr16
xchg
dec
test
xchg
in
aaa
lcall
xchg
arpl
pop
cmp
cltd
rorl
mov
fdivrp
and
dec
mov
fistpl
outsl
mov
ja
cltd
add
jge
and
nop
sbb
xchg
xchg
add
arpl
cmp
jecxz
jge
ret
push
jp
pop
add
inc
jno
shl
or
roll
mov
mov
mov
cmpsl
mov
cmpsl
aam
sti
push
jns
push
jae
push
pop
lcall
inc
stos
popa
inc
into
cmpb
add
mov
jae
fisubrl
cmpsb
lea
pop
lea
je
add
inc
push
mov
sbb
pop
xor
jecxz
fsubs
aad
enter
jo
xor
xor
push
fcoms
ret
dec
mov
push
bnd
ljmp
pop
and
push
fstpt
icebp
jno
push
dec
icebp
insb
movsb
nop
dec
mov
mov
pop
mov
fcomip
data16
stc
jle
inc
std
pop
insl
xor
popa
cs
cmp
not
mov
loopne
dec
xchg
enter
mov
lea
arpl
jl
insb
push
push
mov
pop
test
test
sub
adc
dec
stc
and
scas
movb
xor
dec
cmp
inc
pop
stos
in
sbb
aam
stos
xchg
mov
and
cmp
push
xchg
xchg
fldt
mov
sub
sub
pop
jnp
dec
mov
inc
fwait
nop
pop
xor
mov
sbb
xchg
xchg
jl
push
outsl
lods
xchg
shrb
or
in
jbe
sbb
mov
lret
into
mov
mov
test
sub
sbb
repnz
loope
push
sub
lods
cmp
jnp
bound
and
xor
repz
mov
adc
and
dec
std
stos
and
inc
gs
lods
push
add
dec
lods
fmul
cmpsb
notb
out
inc
or
fstpl
or
xchg
in
pop
add
cmpsb
sbb
test
sub
inc
mov
les
pop
add
test
lock
mov
andl
je
cmp
sub
dec
mov
mov
push
mov
or
sbb
xchg
sbbb
incb
pop
loopne
xchg
scas
fwait
ss
mov
popa
xor
jae
inc
outsb
push
sbb
jnp
mov
test
repz
addb
into
bound
dec
xchg
hlt
jbe
pushf
xor
sbb
mov
nop
mov
das
inc
sbb
rorb
callw
insb
outsb
cmp
stos
or
divb
add
insl
cmp
inc
gs
test
mov
imul
xchg
jnp
or
jae
add
mov
or
ja
xchg
outsb
test
mov
sbbl
lcall
decb
insb
imul
pop
outsb
addl
push
push
or
rcl
test
bound
pop
inc
je
xor
lods
jp
cmpsb
and
and
ficoml
mov
fidivl
dec
xchg
mov
add
cltd
clc
test
int3
push
push
dec
or
mov
ja
and
sbb
and
outsl
inc
addb
jb
outsb
ret
ret
in
add
jle
pmaxub
movsb
mov
stos
imul
repnz
push
mov
pop
jno
data16
lret
and
sbb
sub
iret
mov
cmp
cmp
sub
and
xor
ja
ss
mov
mov
mov
adc
or
lret
pop
push
enter
sti
jecxz
jne
repz
lea
lret
fs
push
jge
flds
repnz
adc
aaa
add
jb
xor
and
adc
pop
popa
lret
les
mov
enter
adc
loop
lret
cmp
push
lods
xchg
lods
inc
dec
insl
cld
push
ror
pop
je
ja
mov
loop
fists
ret
inc
lret
adcl
cmc
mov
add
jno
test
cmc
cmpsb
fistl
push
push
addr16
xor
add
int3
rclb
xor
aad
mov
repz
sahf
daa
xchg
loopne
gs
js
add
icebp
push
outsb
mov
push
sbb
fwait
pushf
aaa
push
fadd
add
repz
sbb
add
in
add
sub
test
ljmp
add
loope
jl
sbb
scas
aad
mov
lods
cmp
aas
es
sub
inc
push
insl
fnstcw
xorb
movsb
negl
add
aaa
jge
shrb
aam
out
dec
xchg
push
jne
or
clc
xor
dec
inc
push
movsl
or
pop
les
add
push
adc
data16
movsl
mov
mov
clc
add
push
aad
dec
aaa
pop
or
clc
leave
pusha
ds
shlb
xlat
push
jno
movsb
lret
xor
outsl
hlt
bound
fdivp
pop
xchg
xlat
pop
js
fcomps
das
ja
xchg
aaa
mov
pop
insl
stos
push
adc
jge
ret
lock
sbb
mov
adc
in
xor
dec
jne
aaa
call
push
mov
aam
sub
leave
sub
xchg
push
lcall
loop
jmp
xchg
ss
mov
push
scas
jb
daa
adc
and
add
bound
jne
outsb
lcall
cltd
out
xchg
mov
inc
enter
or
lods
ret
dec
adc
stc
cmpsb
dec
or
cld
imul
call
enter
dec
jp
test
jl
outsb
add
jae
xchg
jg
loope
inc
sahf
adc
fsubl
jle
sub
mov
xchg
xor
cmp
movsl
cltd
or
call
inc
movsl
gs
in
rcrl
sbbl
das
sub
mov
pop
sbb
fldcw
mov
call
into
adc
push
jecxz
lock
push
int3
test
outsb
lea
mov
sub
lret
pop
xchg
js
mov
mov
stos
xchg
xlat
jecxz
cs
jno
inc
jge
mov
jb
insl
je
dec
or
scas
cli
add
add
adc
out
aam
fs
in
push
clc
fisubl
and
jmp
cld
in
fs
sbb
add
lret
out
mov
fistpll
int3
ret
aam
pop
mov
push
sbb
xchg
inc
js
es
push
adc
gs
sti
fistps
cmpsb
sub
stos
iret
pop
cmpsl
popa
aam
fldt
cmp
sbb
dec
jne
ja
ds
xlat
sbb
jo
bnd
xchg
lret
add
cmp
cmp
psubw
pop
xor
ficomps
aas
push
add
jb
fstps
mov
insb
cmp
mov
dec
movsb
mov
pushf
cmp
inc
mov
repz
jns
fwait
cwtl
loop
insl
aas
inc
sub
jne
xchg
rolb
out
xor
fwait
int
imul
insb
sarb
sbb
les
decb
jle
inc
and
pop
push
lock
addr16
inc
aad
sar
push
jbe
mov
fsubs
adc
xchg
pop
and
mov
cltd
mov
gs
mov
add
arpl
shrb
add
mov
and
test
pop
xchg
in
das
pop
jns
sub
rcl
push
je
xchg
and
jb
daa
dec
movsl
mov
cmp
cltd
or
sbb
push
cld
xor
nop
jle
or
jne
sbb
add
test
push
xor
popf
in
add
jne
mov
shrd
dec
loopne
js
pop
pop
jle
adc
push
xchg
inc
xor
test
push
xchg
fwait
inc
arpl
xor
ss
rclb
das
and
test
xchg
sbb
pop
xchg
mov
or
add
test
addl
inc
dec
jno
adc
xchg
js
xor
cmp
cmp
cmp
add
enter
cmp
mov
or
mov
jl
mov
cmc
fincstp
aas
mov
lea
xor
push
int
xchg
and
push
shrl
mov
jns
js
sbbl
jp
in
jo
sub
sarb
sti
testb
cld
pop
xchg
xchg
cmp
ja
add
fidivl
imul
sbb
mov
das
pop
cwtl
sub
out
push
fstpl
xchg
and
popa
sbb
mov
incb
xor
aad
xor
sbb
cwtl
ret
fmul
adc
out
inc
jge
int3
loop
negb
in
or
adc
add
sub
call
inc
aas
fldt
jo
out
add
out
inc
xchg
pop
daa
insl
mov
xchg
pop
xchg
xchg
add
aas
inc
ret
push
xor
mov
mov
and
push
ficomps
ja
jno
mov
jbe
loop
and
xchg
rclb
jae
movsl
push
sbbb
fwait
mov
arpl
add
jg
inc
sahf
ljmp
mov
dec
push
ds
insl
insb
jbe
push
les
xchg
adc
lcall
aas
xchg
or
or
rcrl
jecxz
pop
lret
push
mov
ss
iret
pop
aaa
dec
sbb
inc
gs
std
insl
cmpb
push
push
pop
lods
inc
call
ret
mov
in
lods
sbb
cmc
mov
inc
je
sbb
fdivrp
gs
mov
je
sub
lds
mov
mov
mov
cmp
rorl
jnp
jnp
out
pusha
adc
clc
dec
xchg
loope
add
outsb
outsb
hlt
pop
dec
stos
mov
and
lods
aad
jp
shlb
cmp
mov
inc
xchg
mov
jb
mov
ficompl
into
fucom
aad
shrl
outsl
pop
pop
jge
push
loope
push
cmp
or
cmpsb
pusha
add
ds
aad
jp
mov
jmp
fdivl
hlt
je
fistpl
pop
inc
xchg
inc
jge
or
nop
out
les
sti
or
adc
cmp
inc
iret
jmp
lods
cmp
enter
popf
pop
cmc
mov
inc
pop
daa
rcr
or
pop
jno
ja
fdivrl
add
cs
hlt
xor
xchg
jge
or
or
pop
xchg
jno
cmc
sub
cmpsb
popf
fwait
mov
fiaddl
dec
test
and
and
rolb
jge
stos
or
mov
inc
adc
popa
mov
cmp
dec
xor
dec
xor
mov
and
sub
jo
dec
xchg
in
ret
add
std
repnz
pop
mov
pop
push
mov
mov
jle
mov
in
cmpsb
loopne
sbb
dec
inc
add
insb
mov
mov
and
jns
dec
inc
add
movsb
fwait
idivb
stos
pushf
nop
mov
in
mov
aad
cli
es
mov
fmuls
stos
movsl
push
jns
popf
mov
xor
push
fiaddl
lcall
dec
cli
sbb
movsl
mov
aaa
cwtl
ret
push
cmp
jge
xchg
enter
rorl
xchg
scas
mov
cmp
jl
outsb
mov
sbb
in
jns
out
mov
fisttps
pop
call
adc
dec
scas
lods
mov
in
jb
lea
mov
fcomp
jne
lea
rorl
pop
addb
push
aam
xchg
push
pop
mov
sub
fprem1
xchg
lock
jbe
loop
movsl
push
adc
or
or
cmp
loop
insb
popf
mov
bound
mov
adcl
out
mov
xchg
aas
and
pusha
add
cmc
or
dec
sbb
nop
mov
idivl
adc
pop
aad
repnz
ljmp
push
adc
mov
addl
lods
dec
mov
popf
dec
mov
pop
xor
ljmp
fisttpl
push
jmp
loope
or
mov
in
repnz
ja
jl
hlt
iret
sub
into
lcall
addl
sub
data16
or
ljmp
cmpb
add
or
rcrb
outsl
inc
das
hlt
icebp
mov
adc
enter
and
into
push
push
inc
inc
stos
cmpsb
mov
and
aad
push
mov
lea
sbb
aad
pop
push
and
adc
dec
filds
cmp
aad
rcrb
cmp
or
cmp
loope
cmp
mov
leave
loop
dec
ret
lcall
out
cmp
mov
jp
mov
dec
ret
andb
mov
cmp
mov
and
xchg
xlat
jae
pusha
pop
mov
push
inc
push
ja
bound
push
mov
aaa
iret
add
xor
pop
scas
ss
cmpsl
aam
sub
push
bound
or
mov
daa
cmp
in
adc
in
mov
push
adc
cmp
scas
mov
push
sub
outsl
lock
push
pop
sub
int
xchg
sbb
out
fdivr
mov
mov
insb
adcl
mov
or
jbe
cli
add
cmpsl
pop
fistpl
mov
mov
test
int3
pop
jbe
push
mov
cmp
jo
out
mov
jo
sbb
inc
jnp
lcall
loopne
cltd
mov
inc
stc
hlt
orl
xchg
fadds
push
jle
mov
test
in
mov
push
out
rolb
push
push
adc
les
lods
pushf
es
shl
mov
xor
fimuls
mov
aad
or
inc
fdivs
test
cmp
bound
push
xor
jmp
jle
jns
sbb
clc
inc
cmp
or
andb
imul
push
xchg
sub
divl
loop
enter
mov
fidivs
xor
out
cmp
ss
inc
xchg
push
out
sbb
ds
mov
push
jo
sbb
ret
push
push
sarb
cs
ret
pop
scas
mov
test
sub
aam
and
imul
mov
push
sbb
push
mov
mov
lcall
sti
lcall
sub
outsb
cmc
adc
aad
int3
dec
bound
test
fmuls
push
jae
and
push
or
add
add
mov
mov
sub
jno
cwtl
mov
shll
inc
sahf
andb
mov
pop
xor
mov
imul
jg
testb
and
mov
pmaxub
int3
ds
mov
fisttpl
mov
fdivs
je
sti
xchg
cmp
ss
push
subb
imul
out
fcoml
pop
xchg
push
les
cmp
push
out
jp
adc
add
fcomi
dec
popf
and
xchg
mov
push
fisttpll
rcll
mov
dec
sbb
sbb
mov
push
lock
cmp
test
rol
xor
ja
fsubrs
pop
fcmovbe
and
fstp
fnstcw
mov
test
adc
js
jecxz
or
stos
and
mov
cmp
jg
mov
mov
xchg
push
cmp
data16
jecxz
repz
rcll
mov
mov
add
adcl
jns
add
sbb
iret
mov
adc
push
or
push
fs
adc
aas
dec
and
add
mov
shrl
je
addr16
je
mov
stos
mov
adc
arpl
cld
jnp
test
and
int
pushl
insb
loopne
jl
sbb
mov
je
xchg
add
mov
subb
cltd
push
inc
pop
xor
pop
pop
popl
mov
and
movsl
sbb
xlat
jle
sub
mov
pop
stos
jne,pt
addb
stos
pop
addl
lea
aaa
int3
arpl
iret
arpl
popa
mov
push
rolb
stc
and
xchg
ja
fwait
subl
int3
mov
movsl
sbb
fs
and
out
jecxz
cmp
rcl
je
mov
fmull
xor
push
sub
in
dec
mov
rcr
sub
mov
ficoms
jecxz
adc
inc
call
call
mov
loope
dec
sub
out
icebp
cmovae
je
enter
test
jp
ljmp
sub
sub
arpl
dec
in
icebp
xchg
rcrb
mov
es
jmp
or
int3
jno
mov
in
jp
jecxz
int3
push
mov
push
gs
jg
lea
cmp
shlb
dec
out
fwait
xchg
cmp
add
aaa
cmpl
loopne
fsts
loopne
pushf
jo
ljmp
in
retw
loopne
test
mov
outsl
sbb
insl
stos
ss
imul
sbb
stos
jo
inc
test
or
pop
call
shl
xor
pop
orl
sub
mov
xor
aas
subb
test
jnp
mov
mov
and
or
inc
add
shl
lea
or
dec
shrl
sbb
es
xor
cmp
mov
add
insb
and
dec
scas
fsubl
mov
fiadds
jo
xchg
gs
sbb
jae
outsl
movsb
xchg
add
lock
mov
sbb
or
pop
cmp
jecxz
dec
xorb
inc
out
mov
mov
insb
xchg
jmp
mov
xchg
cmp
decl
imul
adc
cmpsb
adc
cmp
pusha
std
shl
jb
aam
cmp
cmpsb
cmp
sub
ret
cmp
cmp
sbb
push
gs
push
inc
mov
andb
shrl
xchg
lods
lret
dec
and
mov
pop
adc
dec
inc
inc
ss
nop
daa
adc
push
inc
bound
movsb
in
pop
cmp
sub
out
lods
or
rclb
dec
sbb
popa
cmpsb
xor
shlb
xchg
ds
out
inc
cltd
mov
inc
jl
cmp
les
pop
addr16
mov
sub
cmp
and
fidivrl
dec
mov
mov
xchg
sub
fwait
pop
dec
addr16
aad
inc
or
pop
sbb
pop
rcr
cmp
sub
and
push
cld
xchg
or
inc
cmc
js
xor
es
lahf
or
sar
fwait
shrl
and
cmp
cld
adc
dec
mov
pusha
and
inc
push
in
and
xchg
or
movsl
out
xor
push
les
mov
mov
aas
mov
cmp
pop
dec
enter
sbb
in
push
push
pop
insb
xchg
repnz
lcall
das
ss
sbb
or
test
les
mov
sbb
es
add
sbb
out
loope
aam
sbb
repnz
add
repz
mov
jl
or
xor
cmp
fiaddl
mov
xchg
mov
pop
das
shlb
adc
or
lea
xor
in
pop
mov
add
mov
movb
xchg
xchg
jg
das
dec
ja
ja
cwtl
push
jecxz
testl
aas
pop
dec
jmp
mov
loopne
cltd
shl
cmp
push
sbb
mov
stc
dec
idivl
and
adc
pop
shll
jp
push
sahf
xor
test
andb
sarb
inc
sti
loopne
xchg
loopne
pop
mov
les
add
dec
fisttps
je
xor
shlb
xor
repnz
popf
sti
daa
pop
std
push
insl
inc
cmp
pop
adc
mov
inc
xchg
nop
push
mov
sahf
fdivr
into
lods
or
mov
fwait
xchg
dec
ret
mov
roll
xchg
hlt
leave
hlt
or
mov
push
movsl
fwait
out
aaa
out
ss
add
imul
push
add
jp
add
andl
ror
in
or
mov
lods
stos
push
movl
fsubrl
jnp
inc
mov
sub
lock
lcall
mov
in
nop
aaa
aam
clc
or
out
pop
enter
jmp
imul
dec
sbb
push
add
adc
and
pop
repz
jno
xor
add
sub
xchg
scas
mov
xor
inc
mov
xor
inc
vminpd
push
jne
andl
insl
mov
pop
mov
dec
out
lcall
lds
lahf
push
adc
sub
aad
and
sub
mov
adc
mov
aam
or
in
sbb
pop
adc
movb
pop
ret
xchg
xor
add
call
stos
cmp
pop
clc
shl
adc
and
or
hlt
xchg
push
hlt
addr16
mov
mov
test
mov
jmp
data16
inc
mov
insl
adc
sbb
dec
shrb
ret
sbb
and
rorl
aam
test
sbb
jbe
push
in
jle
insl
ror
hlt
inc
sub
inc
inc
or
inc
jp
pop
sub
jbe
pusha
ret
aas
call
mov
mov
adc
sbb
lret
sti
push
mov
xchg
aaa
push
nop
mov
push
and
test
js
push
orb
aam
push
sbb
andl
daa
mov
xchg
lds
fimuls
mul
sub
gs
ljmp
ds
mov
and
xchg
enter
jae
cltd
adc
pop
jo
jae
popf
adc
js
addr16
mov
dec
inc
push
and
pop
sbb
fs
xor
adc
aas
imul
stc
mov
and
push
not
sbb
daa
pop
clc
int3
xchg
mov
cmp
jle
jbe
sbb
pop
mov
scas
shlb
or
push
xchg
dec
mov
loopne
or
push
fidivs
loop
and
lret
lcall
xchg
jge
nop
fisttpl
in
mov
mov
lahf
pop
push
lahf
sub
ss
pop
push
inc
mov
cmp
notl
cwtl
je
cmp
pop
int
mov
xor
fsubr
outsb
push
mov
or
das
adc
imul
mov
test
sarl
inc
push
lock
jge
data16
mov
xchg
lahf
dec
cmp
xor
mov
lcall
popf
lret
lea
sbb
push
or
cmpsb
loop
ss
cmp
push
ss
stos
and
jae
adcl
jae
sarb
xor
inc
xchg
mov
mov
mov
test
dec
jo
or
add
ret
mov
sub
adc
or
in
fsubr
cld
dec
or
pop
enter
xor
enter
daa
and
mov
cmp
push
scas
call
ja
sub
mov
cmp
mov
cmpsl
xor
es
or
cli
xchg
pushf
fidivrl
lds
xor
xchg
stos
data16
cmp
jmp
xor
lcall
mov
mov
push
jecxz
mov
cmp
jle
outsl
je
adc
lods
cmp
push
or
mov
cld
outsb
push
cmpsl
mov
mov
ret
nop
ret
push
mov
outsl
adc
fs
andl
in
cmp
and
lea
mov
aas
daa
mov
inc
jmp
stc
push
xor
jl
jl
push
adc
xchg
movsb
scas
mov
test
sub
inc
push
push
cmc
pushf
ftst
adc
pslld
in
mov
xchg
test
pop
adc
inc
cmpsl
rorl
aaa
pop
ss
or
inc
clc
cmp
or
xor
arpl
xorl
pop
mov
icebp
sti
lcall
or
cltd
in
aam
push
or
cmp
dec
test
jae
movsw
adc
out
sbb
test
sarl
cs
fmul
sbb
sub
pop
scas
lea
mov
scas
andl
add
mov
ret
sub
xor
xor
push
or
divb
mov
js
lock
and
iret
mov
scas
pop
out
or
nop
lret
pop
rolb
xchg
or
add
xor
inc
pop
or
dec
mov
test
int
xchg
mov
lods
call
inc
mov
cmp
jne
or
sbb
into
push
xchg
mov
stos
ja
jno
pop
cwtl
jl
push
or
xchg
pop
mov
es
dec
mov
popf
xchg
loope
dec
mov
mov
push
or
scas
lods
orl
das
mov
movsl
inc
inc
push
in
or
negl
mov
insb
push
cmp
mov
mov
cmc
call
test
addr16
mov
in
cltd
stos
in
or
ror
hlt
sub
and
imul
mov
lret
insb
sbb
lods
push
insl
out
sti
shlb
scas
mov
cld
push
lret
xor
jno
push
or
enter
cmp
sub
lds
dec
cmp
clc
es
lock
pop
cmp
dec
sbb
rorb
adc
int3
mov
je
mov
cmp
xor
lea
jg
sbb
loope
xchg
out
add
push
fldenv
cs
add
jne
xchg
adc
fisttps
lods
divl
fs
add
aam
xor
clc
cs
xchg
xor
loop
cltd
negb
sub
movsb
hlt
and
je
sbb
mov
in
fs
clc
or
test
mov
inc
repz
hlt
adcb
mov
sbb
or
xor
bound
ljmp
adc
out
xor
mov
pop
idivb
sbb
arpl
lds
insb
enter
or
pop
imul
jl
data16
cmp
add
dec
scas
jbe
gs
dec
in
les
and
pop
jns
stc
push
sub
icebp
pop
push
mov
in
pop
movsb
or
jb
fwait
test
jge
adc
cs
sahf
xor
scas
outsl
pop
repz
hlt
sub
mov
cmp
mov
mov
pusha
inc
repz
nop
xor
scas
sub
ja
fcom
sahf
xor
and
ret
sbb
adc
pop
xor
movsb
jno
pop
xchg
fcmovne
push
nop
add
sub
xor
pop
cs
out
cmp
jmp
xchg
std
pop
cmp
pop
mov
push
pusha
stos
jmp
flds
mov
ficomps
sbb
insl
test
sbb
inc
sbb
ds
stos
rorl
lds
xchg
sbb
mov
lcall
pop
test
orb
or
mov
push
add
adc
or
andb
add
das
js
jmp
mov
bound
push
loope
add
or
test
jl
sarl
in
sub
add
pop
jl
repnz
and
clc
out
fwait
outsb
lods
loop
mov
or
movsl
fs
mov
mov
xchg
dec
cmp
inc
xchg
ljmp
xor
jbe
add
xchg
lock
aaa
fs
cmp
fs
xlat
popf
jnp
rorb
aad
sti
addb
sub
xlat
pop
test
stos
push
xchg
add
js
push
ss
mov
out
push
fdiv
xchg
and
pop
shlb
js
mov
mov
jbe
aad
mov
scas
push
mov
imul
daa
lea
addr16
lods
loopne
test
sbb
adc
loopne
incb
dec
inc
and
mov
sub
gs
jb
shrl
adc
arpl
aam
mov
mov
fimull
xor
fldcw
mov
sub
inc
rorl
das
ss
in
push
mov
push
stos
test
es
xchg
pop
lea
xlat
jns
adc
icebp
adc
movsb
mov
lret
cmp
mov
jecxz
dec
sarl
sub
inc
push
aas
nop
mov
dec
scas
fdivr
into
loop
ret
cwtl
sbb
sbb
ret
movsb
aam
mov
xchg
dec
inc
lret
sub
mov
punpcklwd
fsts
lret
mov
jo
sbb
or
cmc
cwtl
sti
adc
cmp
and
enter
inc
cli
sub
and
loop
scas
pop
sub
mov
aaa
movsb
out
inc
daa
arpl
pop
loop
pop
or
mov
lock
pushf
and
rcll
mov
xchg
adc
add
ds
test
pop
pop
push
or
jle
fucomi
push
rcrl
movsb
dec
add
pop
test
cld
inc
sub
sub
mov
nop
aam
filds
cmpsl
leave
push
popa
int
arpl
mov
enter
ret
cmpsb
jl
insb
scas
lods
and
sbb
out
aad
and
test
inc
clc
push
xchg
push
ret
jno
outsb
shll
jae
ss
adc
daa
add
mov
dec
sub
sub
outsl
dec
add
dec
jne
sti
imul
inc
loope
push
fnsave
mov
inc
popf
xor
fs
cmp
dec
or
push
add
les
mov
dec
xor
jmp
enter
cltd
xchg
or
lock
in
scas
xor
lcall
fldl
sbb
jae
push
sub
lret
mov
das
mov
aas
jb
cli
xchg
cmp
out
mov
and
add
rolb
ret
inc
les
and
test
popf
push
and
pushf
fidivl
mov
adc
daa
in
fstpl
jo
sub
dec
xchg
dec
dec
mov
adcl
inc
inc
nop
in
pop
daa
sub
xorb
enter
addb
add
cmpsb
movsb
adc
mov
cmp
inc
inc
fs
sub
and
pushf
mov
fsub
and
inc
cld
jmp
inc
sub
int3
dec
sbb
fwait
lock
sbb
repz
or
sbb
push
stc
into
lcall
push
cmp
fidivs
jbe
inc
jbe
and
push
out
mov
je
pop
gs
pop
and
out
fcmovnu
dec
inc
lret
push
cmpsb
push
or
push
ljmp
pop
inc
lret
mov
aam
pop
push
adc
sbb
rolb
pop
jbe
jecxz
mov
test
adc
lea
jle
push
jne
jne
scas
out
or
jno
adc
outsl
or
mov
mov
divl
mov
or
subl
lods
cmpsb
and
shlb
fwait
cmp
sub
pop
pop
leave
cld
xor
mov
frstor
mov
popf
incl
sbb
xor
adc
sbb
dec
inc
ret
sbb
jnp
out
outsl
dec
popa
adc
sub
push
xor
into
cmpsl
out
iret
std
movsb
lods
std
aaa
mov
into
mov
inc
cmp
dec
cmpl
xor
sahf
xchg
iret
ret
sbb
je
popa
fistpll
sub
test
jmp
out
mov
jmp
imul
inc
ja
int3
hlt
and
pop
movsb
or
inc
pop
pop
push
lods
and
scas
fdivs
mov
rorl
sub
mov
fisttpll
mov
adc
out
test
dec
push
jnp
sbb
and
daa
test
std
and
xor
dec
movsb
push
pop
shrb
xchg
cwtl
inc
and
sub
jl
push
push
leave
lds
cmpsb
inc
sti
sti
xor
jne
and
mov
xchg
insl
mov
xor
sub
mov
mov
inc
xchg
and
sbb
repz
and
xchg
xchg
or
push
int3
mov
dec
jb
adc
push
daa
adc
hlt
mov
ret
jecxz
push
dec
adc
imul
push
jl
sahf
jns
cmp
dec
test
cmpb
mov
sarl
lret
fnstenv
shlb
fisttpll
cmp
xor
xor
div
xchg
rcrb
in
ja
push
cmp
and
push
dec
shlb
jecxz
fisttps
clc
cmpsb
cmc
jne
hlt
or
das
push
repz
lcall
adc
fwait
or
rcl
iret
pop
and
push
or
das
in
std
enter
xchg
mov
jno
xorl
les
subl
and
gs
push
out
adc
jne
pop
xlat
adc
fisubs
xchg
cmp
fsubs
or
mov
inc
sbb
cs
push
sub
inc
mov
je
cmpsb
or
fstpt
das
rcll
inc
cwtl
cmpsb
in
testl
jne
data16
inc
and
scas
jae
push
stc
xchg
mov
hlt
jl
popa
jmp
cltd
or
jecxz
test
out
xor
jne
iret
dec
out
lea
in
lds
sbb
out
jmp
gs
and
push
pusha
jno
jne
dec
inc
pop
int3
repnz
stc
adc
cmpsb
add
mov
out
jmp
cs
xchg
push
stos
ret
fsubs
dec
mov
shrl
xor
jns
out
cmpsb
sub
pop
mov
sahf
push
insb
push
pop
les
xchg
clc
icebp
sbb
cltd
leave
xor
inc
cmpsb
rcrl
sbb
fnstcw
jp,pn
pop
mov
dec
cltd
scas
push
mov
pop
stc
mov
push
rolb
sahf
sbb
gs
out
imul
shll
push
pop
inc
mov
mov
jmp
cmp
jne
jmp
scas
xor
lahf
lock
dec
shlb
push
sub
jbe
fstpl
adc
inc
xor
sub
inc
inc
repz
dec
mov
dec
imul
and
mov
je
mov
jns
sub
adc
movsl
mov
out
jb
leave
imulb
inc
xchg
inc
xlat
mov
lret
aas
nop
lea
pushf
pop
or
nop
xor
adc
in
cmp
sub
xlat
outsl
fisubrs
les
popf
jle
mov
adc
xchg
lret
leave
pop
sbb
out
test
dec
mov
mov
sub
jns
push
push
mov
jae
shrb
push
icebp
lock
cs
inc
jbe
ds
rol
adc
imul
push
inc
push
mov
loopne
ret
pop
jmp
inc
adc
lods
shll
popa
adc
jl
push
push
cld
testb
cmc
push
cli
or
fwait
loop
adc
stos
xchg
push
cli
sub
call
cmpsl
cltd
lret
aad
sub
and
xor
push
int3
mov
nop
cmp
nop
cmp
loopne
aaa
push
sti
in
setne
cld
cwtl
xor
jne
cmp
adc
adc
sbb
fld
pop
mov
hlt
jle
iret
adc
mov
adcl
ret
pop
pop
orl
movsb
push
pop
not
aam
lea
stc
mov
rcll
push
cld
adc
pop
mov
dec
faddp
push
clc
imul
mov
pop
cmp
pop
dec
leave
pop
cmpsb
xor
mov
inc
and
out
lods
dec
popa
rcrb
add
sbb
sbb
push
dec
outsl
jb
insl
cmc
xor
es
jns
sti
inc
xchg
testl
push
mov
xor
and
lret
out
inc
inc
fsubrs
notb
mov
xchg
mov
cwtl
and
mov
inc
pop
inc
ljmp
push
inc
mov
sbb
pop
stos
sub
add
mov
out
sub
mov
dec
out
cmp
scas
cwtl
push
testb
fsubrs
add
or
arpl
and
dec
lds
movsl
dec
mov
cmovb
jecxz,pt
xchg
mov
das
dec
pop
outsb
int
mov
or
and
out
inc
sti
outsb
out
in
jne
popa
jecxz
xchg
jo
mov
push
filds
aas
pop
adc
jae
xor
pop
fisttpl
or
push
mov
imul
dec
stos
mov
ror
mov
clc
imul
cli
fsts
arpl
sbb
call
cs
in
add
sbb
orl
iret
or
inc
lahf
dec
mov
repnz
daa
sub
je
xor
and
fsqrt
xchg
arpl
xor
loopne
nop
dec
mov
mov
jbe
pop
pop
adc
push
movl
mov
or
loope
clc
xchg
cs
jbe
xor
hlt
addr16
push
dec
ret
push
out
and
adc
cmc
jmp
add
test
or
std
adc
and
cwtl
sub
sbb
mov
xchg
lahf
push
loope
xor
test
lret
pop
jmp
stc
insb
or
inc
mov
xor
out
mov
add
mov
jecxz
xor
out
inc
dec
add
insl
xor
push
daa
or
inc
inc
xchg
in
adc
mov
movsb
rorb
jb
out
mov
aad
xchg
pop
div
xor
stos
fadds
fwait
addb
sbb
lds
inc
dec
pop
aaa
adcb
sti
push
pop
dec
lret
fldt
orb
rcpps
xor
inc
cmpsb
daa
aaa
fnstenv
xchg
dec
dec
sub
insb
lcall
and
std
dec
xchg
cli
mov
dec
mov
mov
adc
sub
mov
push
movsl
mov
pop
popa
adc
xor
jo
sub
dec
divb
test
pop
pop
pop
cmc
ljmp
aaa
mov
mov
in
dec
ret
icebp
lea
fwait
push
jmp
addr16
mov
mov
test
and
bound
cs
pop
test
jno
inc
stc
stos
cmp
subl
sbb
cltd
or
call
pop
cmp
dec
adc
cmp
in
inc
pop
inc
mov
pop
and
rcrl
leave
mov
cmc
dec
ss
xchg
push
out
xchg
lret
data16
or
popf
or
int3
test
adc
dec
push
pop
adc
xchg
arpl
shrb
sar
mov
or
and
xchg
mov
xor
xchg
push
mov
inc
mov
out
dec
sbb
mov
or
out
cmp
sbb
test
cmp
test
pushf
inc
lret
push
push
ret
aam
rclb
test
test
push
sbb
insl
fisubl
and
sub
push
into
aad
jp
shrl
scas
fists
inc
add
lcall
pusha
insb
stos
inc
cs
inc
clc
sbbl
push
sub
dec
cld
in
int
aad
mov
dec
out
adc
xchg
pop
jns
cmc
test
adc
xor
or
sbbb
adc
xchg
adc
mov
lahf
lock
and
xlat
scas
pop
sbb
mov
xor
fsubr
shl
enter
add
and
jb
ret
cmpsl
xchg
xchg
mov
sahf
stos
or
xor
pop
ficompl
mov
daa
ret
mov
call
mov
lock
xlat
or
fdiv
lret
outsl
iret
jb
add
xchg
push
pusha
scas
jecxz
xor
xchg
inc
aas
fstl
shrb
push
call
mov
je
jne
jg
inc
js
rolb
xorl
dec
xchg
das
idivl
adc
xor
das
cmp
loope,pn
es
adc
mov
sarl
scas
pop
adc
push
inc
mov
mov
sub
je
sub
cli
arpl
test
cmpb
jmp
int
bound
and
iret
imulb
imul
inc
fbstp
fisubl
in
fadd
pop
xor
cmp
xchg
insl
cmp
fwait
iret
mov
repz
dec
inc
ds
pusha
push
or
mov
fists
xor
mov
xchg
or
cmp
xlat
shlb
hlt
sub
xlat
jmp
sbb
repz
dec
push
clc
cmp
jge
dec
cmp
cld
mov
es
inc
jnp
and
cli
test
shrb
xchg
call
scas
mov
es
in
adc
add
lahf
pop
nop
jnp
imul
and
adc
or
push
dec
notb
fs
mov
sub
leave
sub
dec
nop
xchg
dec
mov
in
clc
push
push
mov
loope
ds
sub
sbb
mov
das
adc
push
jl
adc
stc
es
test
xchg
add
cld
inc
rcll
insl
xchg
jae
sbb
test
leave
and
and
fimull
mov
and
fistps
inc
leave
movsl
jbe
ss
out
mov
lret
and
sarb
adc
sti
ljmp
scas
jno
pop
jl
push
out
aam
sbb
mov
jae
add
bound
inc
pop
lds
inc
aam
pop
ret
mov
loope
shr
or
dec
adc
or
add
sar
jno
adc
sub
push
adc
jne
or
cmp
scas
pop
adc
mov
movsb
je
ret
mov
in
repz
adc
fsub
shlb
inc
sub
scas
movsb
aaa
xor
inc
xchg
js
aas
jnp
adc
xor
jns
leave
rorb
sahf
pop
sub
data16
jnp
or
fucomi
sub
sub
xorb
cmp
lret
cmp
and
dec
pop
or
rol
xchg
push
push
vsqrtss
adc
inc
test
dec
loopne
cwtl
push
cmp
fists
cmp
pop
dec
adc
xchg
jle
mov
test
mov
cmp
xor
lock
jp
movsl
fmull
mov
loope
jle
pushf
into
data16
outsl
dec
sub
mov
pop
or
cmc
push
in
xchg
rcrl
jns
cmp
lcall
inc
mov
add
inc
pop
cmpsb
ja
adc
mov
stos
jno
repnz
and
int
xchg
gs
enter
dec
inc
enter
mov
push
jbe
xchg
enter
dec
sbb
push
xor
fsub
xorl
shlb
mov
lea
cltd
mov
inc
ja
loop
leave
ds
scas
scas
mov
push
or
pop
and
inc
mov
jbe
and
ss
cmovo
dec
cmpsb
push
sbb
push
push
movsb
sub
mov
mov
xchg
mov
hlt
inc
mov
rolb
xchg
push
inc
sbb
mov
mov
and
inc
testl
fcmovbe
cmp
stos
testb
andl
pop
popa
ficoms
pop
test
mov
push
sbb
jb
bound
mov
les
adc
jnp
inc
je
or
movsb
jg
js
fcoms
pop
nop
cmp
pop
jae
insl
inc
divl
in
fs
mov
push
add
add
lcall
jle
mov
or
fs
xchg
jne
adc
subb
cmp
or
fdivl
fwait
adc
add
cld
pop
xchg
mov
cmp
int
ficoms
mov
iret
dec
xchg
mov
sahf
mov
mull
stos
cltd
xchg
rorb
insl
loopne
and
je
pop
rol
lea
addr16
pop
lret
mov
lahf
sbb
push
loope
or
sbb
movsb
inc
xchg
mov
push
xchg
leave
xor
and
add
mov
dec
shll
dec
xor
scas
sbb
bswap
pop
ja
fidivs
fists
inc
adc
arpl
mov
mov
mov
int3
fsts
pop
fcmovne
out
dec
mov
xor
loop
fadds
ss
lods
pop
lret
lods
pop
jnp
xchg
jg
outsl
xor
stos
jo
out
leave
aas
mov
negl
and
xchg
mov
push
xorl
add
out
or
int3
lds
outsl
stos
in
out
or
nop
cli
or
push
cmpsl
outsl
push
or
xor
scas
leave
inc
shrl
cld
adc
adc
fcomi
in
lds
je
mov
loope
lds
cld
std
and
insl
xor
leave
adc
insl
fnstsw
shlb
das
cld
std
lcall
les
mov
inc
add
pop
in
and
aam
adc
hlt
insb
mov
fstp
stos
sbb
xor
test
out
mov
mov
inc
pop
jbe
lock
add
andb
nop
int
jns
outsl
xchg
mov
sub
out
lods
sbb
inc
xchg
mov
clc
clc
lods
add
fadd
pop
ljmp
lcall
or
adc
jb
inc
rclb
xchg
es
arpl
cmp
out
std
or
dec
mov
sub
repnz
mov
push
lea
lock
jne
jmp
aad
jbe
enter
int
adc
xchg
and
jle
outsb
callw
push
inc
inc
mov
lret
sub
mov
xor
push
dec
xchg
cmc
cmp
sub
xor
pop
mov
pop
das
add
add
arpl
mov
jp
xchg
lret
push
xchg
je
out
ss
jo
sbb
push
push
dec
inc
cmp
cs
data16
push
mov
and
add
addb
push
popa
or
cmp
inc
xor
push
nop
dec
es
xorb
nop
pop
inc
movsb
add
ss
sbb
push
fmul
add
sbb
push
xor
add
or
mov
pusha
mov
inc
ret
inc
xor
adc
xorb
nop
pop
dec
mov
mov
sbb
shll
aam
stos
inc
data16
push
mov
and
add
addb
push
popa
or
cmp
inc
xor
push
nop
dec
es
.byte
.byte
