push
call
ret
ret
add
dec
lret
jp
sbb
cmp
stos
ss
repz
dec
inc
call
cmc
call
arpl
mov
pushf
xor
jmp
not
mov
popf
jmp
jecxz
adc
fcmovbe
cli
xchg
mov
loopne
xchg
jnp
int3
mov
mov
cli
fwait
dec
or
mov
and
fcoml
jne
imul
adc
pushf
stc
xor
lret
dec
fs
jae
popa
incl
int
mov
jmp
mov
ss
mov
lods
aas
adc
out
test
sbb
idivb
insb
sti
xlat
or
mov
repnz
mov
push
push
pop
xchg
mov
in
mov
push
scas
mov
jae
sbb
mov
pusha
insl
push
mov
ljmp
inc
inc
mov
sub
mov
scas
inc
xor
add
and
jbe
xor
pop
inc
das
cmpb
cld
ljmp
mov
mov
faddl
outsl
das
mov
dec
pop
test
mov
inc
popf
xchg
pop
mov
out
hlt
jge
repnz
mov
sarl
cs
mov
fwait
dec
push
aas
push
add
popa
pushf
mov
sti
add
sub
sbb
or
push
ss
out
inc
sarl
outsl
sbbb
or
or
add
sbb
mov
movsb
fdivl
inc
mov
dec
out
mov
mov
fpatan
sub
ss
ljmp
sub
movsl
adc
push
push
mov
push
and
out
int3
orb
cmpsl
outsb
add
and
jae
test
jo
out
dec
js
add
lods
inc
data16
cmp
movsl
les
mov
mov
cs
xchg
xchg
cmp
mov
pop
adc
ror
lcall
aaa
les
loopne
sub
or
sub
push
jb
in
mov
hlt
sub
repnz
lret
lds
xor
inc
notb
inc
lods
cmpsl
stos
jge
mov
lock
shll
in
gs
pop
sbb
sbb
pop
fwait
clc
outsl
insb
sub
je
mov
ficompl
scas
xchg
cmp
mov
pop
xor
hlt
mov
and
xlat
push
imul
hlt
add
popf
ljmp
push
jmp
xchg
fldcw
add
jmp
fidivrs
mov
clc
test
cmp
or
pop
out
and
aad
enter
lret
xor
inc
and
outsl
das
jp
xchg
aaa
and
jbe
pusha
sub
arpl
cmp
leave
lea
loopne
fnstsw
sets
repnz
jno
test
loop
inc
adc
cmp
pop
loope
ret
xchg
lods
into
sbb
sub
mov
xchg
jns
dec
mov
or
xchg
lcall
shll
mov
sbb
fists
mov
test
adc
bnd
popf
cli
lea
ss
cmp
and
add
cmp
cmc
repnz
daa
daa
push
aas
fmuls
pop
mov
xchg
cmp
popf
adcb
jo
pop
jo
push
inc
jno
testl
stos
shl
push
lret
insb
daa
shrb
sarl
popa
icebp
loope
jg
clc
clc
out
cmp
sbb
dec
enter
or
pop
faddl
xchg
fisubrs
mov
lods
stc
orb
jb
sbb
xchg
icebp
jp
inc
inc
fstpl
fstpt
in
ret
leave
or
cmp
xor
xchg
pop
and
add
lret
pop
adc
pop
dec
inc
xchg
mov
or
xchg
js
bound
mov
fldt
inc
out
loope
nop
xchg
inc
repz
xchg
repz
push
imul
mov
arpl
mov
test
mov
inc
dec
movsb
or
fisubrs
aaa
xchg
cmpsb
aam
cli
pusha
jp
adc
or
cmpsb
push
and
fisubrs
pushf
mov
fsubrs
flds
aad
shll
push
sub
cmc
fwait
clc
mov
mov
sub
jae
mov
incl
cmp
push
push
sub
mov
cmp
sti
sub
ret
sub
cmp
mov
mov
int
shll
aam
and
sbb
or
flds
or
mov
jo
movsb
movups
int3
rdtsc
pop
in
aas
sub
stos
add
fbstp
inc
jne
in
push
out
call
and
addb
imull
testb
into
or
sbbb
icebp
jo
iret
add
pop
cmp
in
das
icebp
js
data16
in
sub
ss
dec
or
sbb
push
inc
out
in
ljmp
pop
jmp
lods
pop
xchg
dec
adc
into
gs
nop
sbb
dec
insb
sbb
or
sbb
mov
mov
ds
push
psubq
sub
and
push
dec
pop
lods
mov
data16
jbe
int3
adc
clc
xchg
pop
inc
or
mov
out
int
jne
icebp
ret
inc
and
leave
mov
xor
inc
mov
add
or
sahf
jl
test
insl
popf
divb
rolb
jge
mov
sahf
loopne
push
sub
std
xor
in
inc
lret
dec
inc
iret
xor
jo
hlt
xchg
stos
pcmpeqw
filds
xchg
inc
xchg
xchg
shlb
out
pop
adc
aad
sub
nop
cltd
mov
je
adc
aad
shl
inc
xchg
movsl
cld
ljmp
lods
aas
jecxz
mov
scas
sbb
out
loop
aas
xchg
addr16
xor
nop
ret
in
shrb
mov
sub
sbb
jmp
in
mov
outsl
push
filds
stc
inc
push
ljmp
xchg
mov
stos
and
das
lea
gs
pop
call
dec
jae
outsl
pop
xchg
mov
sub
push
int3
rcr
inc
dec
arpl
loopne
add
add
or
jp
sti
das
and
jae
lahf
sti
imul
or
in
shl
jbe
or
and
xor
mov
xchg
push
mov
add
ss
jae
arpl
mov
test
cltd
scas
add
or
push
ret
cmp
jo
mov
stc
pushf
jecxz
aad
jge
dec
out
inc
or
push
mov
jne
mov
mov
out
mov
push
xchg
mov
add
mov
pop
pop
dec
mov
jle
adc
in
cmp
aad
cmp
xlat
sahf
mov
pop
mov
xor
jl
pop
jp
movsb
ja
lea
jg
stos
aaa
mov
add
stos
push
push
outsb
test
mov
nop
adc
inc
out
test
mov
popa
sbb
out
push
insb
inc
ljmp
sbb
loopne
cmpl
test
int3
arpl
jnp
aad
or
or
aad
add
std
imul
mov
push
leave
fistps
mov
fwait
mov
mov
or
jmp
inc
lcall
loope
sbb
dec
sbb
and
sarb
loopne
arpl
leave
push
adc
int3
sbb
iret
jmp
outsl
jmp
lret
stos
mov
test
xchg
and
aaa
outsb
mov
cmp
fcoms
xchg
dec
jmp
loop
jecxz
nop
in
cmpsl
xchg
test
xor
aas
shr
push
adc
es
fiaddl
inc
push
or
xor
cmovne
cs
cmpb
in
lds
in
shll
pop
imul
add
in
jno
adc
mov
xchg
jne
test
mov
in
sub
repnz
or
xor
das
jae
sub
dec
es
inc
jecxz
push
add
mov
add
push
repnz
add
pop
in
test
mov
repz
addb
adc
jmp
es
push
cmp
data16
cs
loope
jo
mov
and
inc
or
cld
push
sub
dec
sub
das
fdiv
lods
dec
enter
js
aas
mov
cmpsb
mov
ds
mov
addr16
xor
mov
ror
sub
inc
shlb
mov
jnp
outsb
test
adc
pusha
push
ss
ror
repnz
add
into
xchg
ljmp
xor
lret
mov
mov
jg
sarb
nop
ja
jp
jne
jae
into
fidivrl
fwait
cmp
cmpsl
adcl
mov
gs
es
add
mov
into
and
cld
sbbb
aas
or
sar
imul
shll
sub
mov
xor
pop
cmc
test
jne
icebp
jo
jecxz
adc
lea
push
ss
mov
mov
mov
dec
or
outsl
orb
mov
jle
sub
or
dec
push
sbb
pusha
mov
pop
add
sarb
xchg
aaa
or
sti
adc
pop
iret
jl
fsubs
bound
mov
test
insb
movsb
mov
out
fwait
sub
pop
mov
stos
das
stos
pop
mov
lahf
lods
jp
or
outsl
push
mov
popf
mov
std
aad
sub
gs
gs
clc
shl
stc
pusha
bound
mov
test
add
rclb
push
out
test
pop
cmpsb
xor
cld
dec
int
xchg
sub
inc
xchg
jb
xor
cwtl
out
gs
imul
mov
cmp
adc
xchg
add
movsl
inc
pop
mov
aas
and
lods
cmp
stos
les
mov
test
nop
jle
cmp
mov
int
int
pop
cmpsl
adc
iret
lds
mov
popf
scas
das
outsb
stc
mov
jge
rcrb
pop
jno
adc
ljmp
imul
shrl
push
adc
dec
and
das
push
addr16
xor
lock
fisttpl
fidivrs
fimull
in
mov
cmc
pop
and
or
mov
pop
clc
enter
daa
jb
mov
.byte
and
add
push
adc
pop
fisttps
jae
jns
jmp
dec
and
cltd
in
mov
popf
iret
xchg
jle
add
aam
xlat
fisttpll
std
outsb
dec
aad
sbb
es
bound
push
je
add
pop
mov
jge
mov
xor
or
pop
outsb
jne
sub
arpl
add
outsl
in
sbb
pop
xchg
test
lcall
add
repz
rcll
xor
sbb
outsl
cmp
out
xor
popa
mov
insb
mov
iret
es
leave
xchg
mov
cmpsl
scas
pop
cmp
and
jno
push
rorl
cmp
add
lea
and
lods
push
mov
les
xor
adcb
or
xchg
mov
jecxz
or
imul
sub
push
std
adc
in
fdiv
fsubrl
test
jbe
insb
stos
xchg
stos
lods
test
negb
imul
ljmp
dec
pop
cmpsl
cmp
mov
aaa
rcrl
repz
xchg
mov
cli
inc
mov
push
add
repz
das
dec
outsb
jne
xorb
imulb
mov
xor
xchg
push
lock
inc
and
arpl
push
fimuls
xchg
movsl
pushf
sub
or
lret
lods
push
insl
insb
incl
clc
cltd
or
xor
pcmpeqd
fadd
jnp
inc
rorb
loope
mov
jmp
inc
mov
lret
or
adc
jb
add
ffree
imul
fmuls
into
push
pop
xchg
inc
add
scas
sub
xchg
sti
inc
cltd
out
xor
jo
and
cmc
sbb
addb
imul
xchg
mov
shll
mov
add
fwait
std
adc
dec
test
call
jmp
jne
insl
jbe
cli
xlat
lret
subl
lock
cmp
and
sub
addr16
mov
icebp
cld
popa
dec
push
cmp
xchg
push
cwtl
push
mov
cwtl
movsl
in
lea
cmp
sub
test
xchg
scas
mov
mov
in
xlat
adc
cltd
sbb
loopne
pushf
adc
xlat
ret
nop
jl
sbb
mov
icebp
inc
js
pop
pop
leave
sahf
fists
dec
fdivs
inc
push
lds
xor
jg
push
ljmp
pop
jecxz
aad
bound
lea
jbe
mov
das
sbb
sub
aam
rorb
ljmp
cmpsb
push
and
dec
cmpsb
jl
es
and
rcrb
dec
sub
jno
cmp
out
sbb
mov
push
bound
sbb
loope
hlt
adc
pop
aam
movsl
and
enter
sbbw
ret
and
in
lock
test
mov
addl
rcl
push
mov
lcall
xchg
xlat
sub
cmp
or
jge
aas
cltd
dec
jae
or
dec
xor
jmp
mov
inc
iret
in
push
adc
xor
mov
sub
or
mov
ficomps
fwait
hlt
fsts
inc
aas
lret
out
lods
out
out
rcl
pop
js
pop
or
movsl
dec
lahf
outsb
mov
cltd
xchg
jmp
std
fcompl
inc
mov
xchg
sub
pxor
and
call
adc
sbb
adc
adc
mov
mov
mov
mov
cmpsl
adc
push
cmp
dec
cs
pop
push
pop
daa
pop
mov
jo
aas
inc
int
jecxz
push
and
fistl
xchg
jns
sahf
sub
push
xor
xor
rclb
xchg
daa
aad
sahf
enter
mov
pop
jmp
pushf
inc
xchg
pop
lods
xor
cmpsb
popf
xlat
fwait
cmp
add
repnz
sarl
xchg
hlt
xor
movsb
in
das
mov
std
mov
data16
mov
cmp
inc
xchg
lock
dec
and
sbb
push
je
test
pop
sbb
cmpsb
test
cmp
mov
xor
and
shll
mov
not
add
mov
cs
adc
xchg
lock
xor
dec
add
std
xor
jae
mov
imul
rcrl
movsb
loop
xor
xor
mov
pop
push
mov
sbb
push
mov
mov
loope
ja
clc
shlb
sub
stc
jnp
dec
out
jl
dec
adc
cli
dec
cmp
imull
test
movsl
xchg
push
mov
icebp
sti
loop
fidivs
dec
jne
mov
and
cmpb
arpl
std
mov
icebp
fcoml
cmpb
outsl
ret
inc
mov
pop
jge
cli
pop
xchg
or
xchg
cld
fiadds
js
push
inc
and
test
pop
mov
jge
ljmp
icebp
or
mov
lcall
sub
sub
xorb
stc
adc
push
arpl
xchg
inc
xchg
sbb
subl
push
imul
push
cmp
lods
mov
add
repnz
push
in
out
or
dec
addl
or
in
ja
cmp
sub
ror
jnp
aad
pcmpgtb
xchg
popf
daa
xorl
ss
sbb
adc
jg
enter
jmp
and
test
cmp
je
jg
out
inc
mov
xor
out
pop
stos
jne
ret
and
push
xchg
jle
and
cmp
shll
scas
imul
mov
ja
notl
dec
das
scas
xchg
test
add
fbstp
mov
invd
xchg
pop
xlat
int3
jle
aas
sbb
mov
stc
pop
lods
jo
push
cwtl
lret
pop
test
mov
push
or
push
mov
inc
je
and
adc
mov
mov
andl
add
jne
cmc
out
mov
movsl
in
xor
rol
mov
xchg
or
mov
repz
mov
ss
lods
scas
mov
jns
adc
aaa
push
shrl
mov
cltd
cmpsl
inc
xchg
mov
push
daa
xchg
push
stos
xor
adc
jmp
add
mov
adc
xchg
lods
adc
call
inc
xor
in
test
dec
inc
out
insl
push
lods
or
mov
lahf
dec
jbe
int3
lock
push
jg
cltd
call
out
cmp
pop
jb
mov
aas
cmp
stos
xor
or
push
stos
repnz
pop
js
xchg
pop
mov
mov
xorb
dec
or
enter
rsqrtps
fwait
jg
dec
inc
out
in
out
mov
lods
add
lahf
push
add
cli
xchg
popf
sbb
sbb
mov
jne
iret
into
sti
fdivrl
jno
mov
dec
leave
pop
pop
push
sbb
add
push
daa
pop
xlat
sub
mov
lods
mov
popa
insb
xchg
mov
xor
sub
sahf
inc
jmp
or
daa
sub
cmp
sarb
xchg
mov
ja
repnz
or
add
mov
mov
cmp
les
inc
cmp
mov
and
std
scas
data16
fwait
mov
fadds
pop
fisubs
out
or
push
loopne
rolb
cmp
sbb
add
sbb
dec
xor
jbe
push
pop
cmp
adc
dec
shr
adc
sbb
popf
push
sub
outsl
leave
mov
mov
or
stos
rcr
push
fistps
mov
imul
mov
pop
jns
loopne
push
enter
sub
stos
fldenv
push
inc
inc
stc
xchg
je
insb
or
sti
aam
xor
ss
stos
pcmpgtb
jo
addr16
into
jno
movsb
loopne
ja
int
xchg
xchg
out
test
cmc
cmc
jge
sub
jge
mov
gs
jle
nop
or
jb
das
inc
mov
std
pushf
orb
bound
xor
repz
dec
insb
adc
cli
lods
sar
mov
imul
scas
lret
jnp
popa
cmp
aad
aad
stc
cmp
ss
dec
test
mov
and
lret
lcall
push
in
fsubl
int3
mov
mov
add
arpl
mov
adc
xlat
out
mov
mov
mov
push
xor
xchg
mov
push
stos
test
dec
lret
xchg
rorb
nop
jge
inc
jge
ficompl
outsl
xor
mov
in
outsl
push
sbb
dec
je
adc
loope
dec
sub
sbb
pop
push
sbb
inc
or
stos
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jmp
cmp
jle
sub
call
sti
sbb
xlat
les
cs
pop
gs
pop
sub
add
mov
add
call
push
mov
and
inc
push
nop
mov
mov
call
sar
lahf
in
mov
mov
outsb
mov
add
push
and
pop
sub
mov
push
mov
popl
call
adc
dec
outsl
jl
mov
pop
sub
jnp
movswl
dec
dec
add
sub
jne
movswl
ljmp
xor
dec
push
xchg
hlt
adc
ds
je
mov
loop
push
pop
cs
sub
xchg
leave
sub
or
test
pop
lret
scas
jnp
add
cmp
popf
das
xor
cmp
mov
sub
push
fildl
or
cmp
aas
out
mov
add
outsb
sub
data16
push
mov
insl
rolb
xor
lcall
sub
scas
jnp
imul
ret
sub
jmp
fdivl
jg
mov
mov
fs
cltd
scas
jnp
testl
xchg
inc
xchg
push
mov
mov
insl
jo
or
mov
faddl
shlb
adc
rcr
iret
pop
cld
lret
fisttpl
scas
mov
push
int
cmpsl
mov
mov
push
fiaddl
mov
clc
mov
fidivrs
or
fiaddl
movsb
lods
xchg
hlt
and
jp
cli
pop
je
ljmp
repnz
mov
in
cmp
jp
xchg
lret
pop
addr16
mov
ja
in
cmp
xchg
in
mov
jmp
mov
imul
out
arpl
loopne
mov
fiaddl
mov
ficomps
lods
mov
dec
push
ficompl
adc
cmp
jns
fs
jo
arpl
fwait
sarl
cli
jp
mov
pop
mov
jl
push
lock
pop
fcompl
lods
xchg
loop
lock
sarl
adc
jp
xchg
mov
sbb
loope
and
ss
jge
in
mov
sub
adc
jns
inc
dec
test
sub
add
mov
mov
jle
jp
xchg
aas
inc
and
sbb
pop
cmpsl
mov
pop
repz
cwtl
stos
or
int
rol
fsts
push
xchg
mov
cs
xor
mov
int
adc
sub
lods
or
push
push
inc
int
add
enter
test
insl
rclb
or
add
in
movntps
xchg
scas
jo
lds
adc
and
into
scas
inc
je
test
arpl
adc
pop
xlat
out
lods
addb
sub
cmc
iret
pop
inc
shl
mov
and
sti
aaa
jno
fdivrp
jb
pushl
or
jb
jne
hlt
lods
or
xor
and
gs
sub
cmp
pop
jae
dec
aam
shlb
push
xlat
sarb
pop
popl
cmp
dec
or
dec
aam
das
push
jge
adc
shl
fisttps
out
push
adc
cmpsb
jecxz
pop
ljmp
jb
adc
adc
mov
inc
rcrb
stos
jb
aam
cmpsb
push
loopne
and
jb
adc
scas
xchg
inc
aam
cmovs
jb
dec
cmp
std
sub
inc
xor
stos
xor
aam
rcll
push
dec
aam
add
pop
cmovs
movsl
insb
mov
jb
xchg
lcall
aam
repnz
jb
ss
sub
fcom
jb
jl
jbe
dec
fidivs
pop
fs
dec
dec
or
aam
xchg
cmovs
bt
jb
push
pop
ja
dec
aam
dec
xor
orb
pop
clc
push
dec
aam
and
dec
aam
mov
shll
dec
dec
or
aam
sub
mov
pusha
or
or
pop
dec
aam
mov
or
dec
aam
mov
shll
push
xchg
push
mov
shll
rcll
jbe
dec
dec
xor
cmovs
std
mov
aam
xchg
mov
lret
nop
nop
xchg
out
addb
nop
orl
add
cmovs
daa
xchg
fcmovnbe
movsb
leave
rcl
gs
adc
movsl
cmp
bound
jb
push
insl
ret
cmovs
inc
xchg
rcr
test
pusha
jbe
dec
dec
jbe
int3
pop
jbe
dec
dec
or
scas
cmovs
or
mov
xchg
cmp
or
leave
dec
aam
mov
mov
jb
dec
fidivs
push
mov
sub
enter
dec
mov
adc
xor
jb
dec
adc
dec
aam
cmovs
push
xchg
mov
in
push
ret
push
jg
pop
cmp
or
xchg
mov
mov
ds
dec
fiadds
jne
cmp
or
xchg
mov
into
xor
dec
les
dec
ds
dec
fiadds
cmp
repnz
popf
popf
ret
mov
sahf
lea
pop
ficoms
jne
cmp
or
xchg
mov
pop
nop
mov
testb
or
cmp
dec
mov
cli
cmovs
jb
sahf
lea
pop
ficoms
jne
cmp
or
xchg
mov
mov
stos
push
cmp
aam
or
loope
test
or
cmp
or
xchg
mov
mov
or
insb
sub
ror
pop
dec
shlb
cmp
cmovle
cmp
repnz
popf
popf
ret
lret
or
lea
pop
cmp
aam
ds
jb
dec
aam
mov
mulb
insb
sub
ror
pop
divb
or
pop
xchg
sbb
lret
pop
mov
push
andb
pop
je
ficoms
or
pop
pop
xchg
sbb
leave
pop
mov
notb
repz
aam
xchg
aam
rorl
adc
je
dec
aam
popl
test
hlt
or
push
add
push
dec
xchg
jle
and
andnps
or
mov
jb
push
and
cmpxchg
cmc
int
push
jle
cmp
cmp
mov
push
xor
lds
jne
scas
daa
je
dec
push
cmp
sti
lds
cmp
lods
out
xor
lds
ror
mov
dec
rorl
dec
decb
loop
notl
int
dec
add
push
js
add
nop
xchg
xchg
movsb
mov
jecxz
nop
mov
sbb
cmp
adc
fucomip
dec
mov
or
mov
mov
dec
aam
cmovs
jb
dec
aam
cmovs
jb
dec
aam
cmovs
jb
dec
aam
xchg
inc
aam
icebp
inc
aam
dec
dec
aam
dec
dec
aam
cmovs
jb
dec
xchg
jb
dec
aam
cmovs
jb
dec
aam
imul
shll
dec
aam
cmovs
jb
dec
aam
cmovs
jb
js
lcall
jg
push
fld
push
in
add
notl
xchg
and
loopne
push
cmpb
jecxz
and
mov
dec
iret
or
lea
lods
inc
ret
dec
push
mov
dec
jbe
incb
movsl
pop
jns
gs
cltd
jmp
mov
cmp
int
repz
cmp
push
or
mov
mov
or
sub
push
xlat
pop
outsb
jge
and
aad
cmp
mov
adc
sbb
fimuls
or
ja
dec
cmp
fidivl
movsl
arpl
adc
adc
imul
push
xchg
out
js
push
sbb
mov
inc
je
pusha
xor
sbb
ss
scas
or
iret
cmpsl
shr
mov
jg
sbb
mov
lods
inc
in
testl
mov
sub
test
in
ss
pop
test
ret
scas
scas
addb
in
ss
cmc
push
rorb
ds
js
cli
add
mov
add
outsb
cmp
lods
inc
mov
dec
jle
pop
loop
int
xor
aas
mov
push
mov
xchg
jbe
pop
fsubs
mov
jne
imul
repz
shl
gs
cwtl
pop
jg
movd
and
js
cwtl
outsl
loope
and
push
push
pop
scas
mov
xchg
cmpsl
ljmp
lods
mov
fnsave
int3
mov
lods
rcrb
bound
sbb
loop
xor
cld
sub
int3
shl
push
std
fwait
cwtl
out
adc
mov
adc
mov
das
lahf
mov
xor
mov
xlat
dec
loope
inc
fisttpl
nop
pop
das
push
xor
add
fcom
jb
fcom
jb
mov
scas
jecxz
xchg
push
and
shr
imul
movb
sahf
push
test
mov
fisttpll
sbb
ja
jmp
enter
jnp
cltd
jg
shlb
mov
idiv
dec
scas
mov
fstpl
popf
loopne
ror
pop
cli
xor
and
fstpl
pushf
jle
stos
push
adc
mov
out
push
das
dec
fucomi
js
cld
out
jl
mov
sub
push
dec
pop
loopne
mov
jecxz
cli
mov
pop
lret
jle
pop
dec
jl
inc
xor
dec
push
mov
lahf
rorl
adc
jp
stc
dec
dec
in
mov
sub
int
add
adc
adc
pop
stos
add
mov
xchg
mov
mov
mov
dec
pop
or
add
and
add
add
add
pop
add
cmp
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
pop
add
hlt
pop
add
cld
pop
add
dec
pop
add
or
add
add
adc
add
add
and
add
add
sub
add
add
xor
pop
add
inc
pop
add
jg
add
jae
insb
ja
jo
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
xor
cs
insb
add
jbe
jb
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
add
pop
add
add
add
fstps
add
add
add
pop
push
je
inc
push
add
jae
push
push
dec
gs
popa
addr16
add
add
outsl
jae
push
gs
imul
insb
add
add
inc
jb
popa
je
inc
jne
add
add
fs
jae
pop
imul
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
mov
push
rcll
add
add
add
add
hlt
cmp
add
icebp
xchg
dec
push
and
ja
add
push
mov
sub
dec
push
outsl
loopne
jmp
clc
xchg
fisubs
loopne
jb
divb
rorl
xorl
add
imul
adc
adc
xor
icebp
xor
ss
repnz
jp
xchg
cmp
cmpsb
cmpb
fcmovu
xor
and
push
cmpsb
xor
mov
push
jmp
cmp
xchg
data16
mov
mov
scas
pop
sbb
cmp
and
xor
jo
hlt
test
add
sbb
xchg
xor
lods
shlb
xor
add
adc
push
pop
pusha
movsb
sub
push
mov
mov
pop
out
inc
bound
addb
fmull
xchg
or
xor
adc
sbb
ret
les
fildll
int3
adc
in
fldcw
sbb
pop
daa
int
sbb
in
sbb
inc
mov
les
adc
mov
subl
sub
pop
jg
sbb
push
inc
jecxz
outsb
jl
dec
daa
or
fnstsw
add
inc
dec
cmp
popa
dec
adc
pop
cmp
sub
mov
pop
mov
sbb
inc
mov
faddl
or
jns
dec
bnd
jg
lahf
jmp
xor
dec
adc
adc
mov
popa
mov
ret
sub
pop
aam
cmp
xchg
lret
clc
adcb
lret
sbb
mov
push
movsb
xor
adc
inc
gs
leave
loopne
sbb
dec
xor
mov
lock
sbb
push
pop
push
push
loopne,pn
js
popf
mov
sbb
aad
jl
aad
mov
mov
dec
inc
jne
in
repz
insb
aaa
jae
pusha
jg
lcall
pusha
inc
aad
push
fisubl
repz
jne
lods
into
and
inc
lea
pop
jg
xchg
push
add
mov
movsl
inc
or
mov
testl
sub
enter
pushf
push
xchg
scas
pop
and
push
or
mov
mov
shlb
mov
mov
jb
jmp
adc
aam
jns
xchg
pusha
xchg
xor
les
push
stos
fnsave
add
and
adc
or
push
sbb
mov
test
repnz
push
ret
call
aad
push
faddl
lods
lret
and
cmpsl
test
icebp
es
test
mov
and
xorb
ficoms
inc
pop
inc
cmpsb
pop
mov
xchg
das
xchg
xchg
mov
lea
bound
leave
mull
mov
add
fs
je
cmp
mov
mov
fildll
hlt
xchg
add
and
inc
loopne
add
fistl
repnz
or
xchg
push
aam
dec
pop
xlat
shr
xchg
and
xor
imul
xor
mov
pop
test
clc
ss
jle
mov
test
or
in
daa
mov
push
push
stc
push
lret
and
lcall
dec
aas
push
out
push
pushf
sub
shrb
scas
mov
cmc
sti
scas
stc
sbb
dec
clc
je
adc
push
cmp
mov
repz
ficoms
cmp
je
ljmp
or
pop
pop
and
cld
insl
pop
add
das
cmp
xlat
jmp
les
add
xchg
sbb
xor
sbb
cmp
jns
ret
dec
outsb
adc
fisttpll
push
and
sbb
or
cmp
add
leave
andb
nop
and
sub
aam
fwait
and
rclb
test
xchg
dec
adc
add
push
jns
rcl
xchg
or
stos
int
add
testb
mov
sub
sahf
lahf
add
push
add
add
and
and
test
js
nop
lods
jns
test
jnp
in
add
je
imul
or
iret
pop
scas
xor
mov
mov
add
rcrl
mov
mov
inc
cmpsl
pushf
mov
and
addr16
lods
jecxz
dec
push
in
jae
mov
nop
loope
iret
fwait
aad
aam
in
cli
sti
xor
js
std
mov
es
lods
pushf
pop
and
lret
repz
jmp
out
scas
mov
sbb
imul
lods
or
inc
add
push
jno
arpl
jae
xorb
xchg
jle
sub
daa
scas
push
jge
dec
fucom
xor
mov
xchg
or
data16
out
leave
inc
shrl
xchg
out
bound
fists
stc
icebp
sbb
out
jne
and
push
jg
pop
push
adc
add
cmp
lahf
push
cli
or
cmp
andl
fs
and
xchg
popf
jmp
add
lahf
xor
loop,pt
nop
mov
jns
jne
ss
mov
mov
mov
and
aas
call
testb
rcrb
fidivrs
outsl
sub
cmp
pushf
ss
icebp
xor
cld
add
jle
mov
jge
mov
mov
and
sahf
jno
hlt
mov
mov
sbb
pusha
push
pushl
push
in
int3
lret
jle
lret
sahf
jl
repnz
dec
lods
call
pop
adcb
int
jle
push
mov
mov
fstpt
dec
cmpsl
bound
mov
xor
stos
ror
fsubrp
cmp
fwait
and
cmpsl
scas
sub
test
xor
push
lods
cli
cmp
scas
dec
pop
loop
mov
xor
and
jo
test
insb
int3
add
inc
aas
in
in
cmp
inc
out
lods
sub
dec
add
xor
sub
stos
jbe
inc
insl
mov
iret
pushf
or
loopne
rcrb
lret
and
and
jne
loope
push
je
jnp
mov
fists
sbb
jo
push
pop
cs
xchg
sub
pusha
xor
xor
icebp
xchg
leave
xorb
iret
addr16
pop
mov
in
jbe
in
cs
std
shl
out
fnstenv
jo
lahf
push
call
xchg
test
sbb
jge
jl
jge
jmp
or
inc
xor
andl
fs
sbb
or
lock
or
sbb
mov
push
xor
sub
and
add
enter
jge
int
ljmp
ret
ret
pop
pop
jge
pushf
mov
testl
inc
mov
daa
sub
movntps
mov
dec
pusha
inc
gs
or
vpcmpeqb
or
lea
es
pop
pushf
aad
xchg
mov
xor
outsl
xchg
xchg
shll
es
mov
mov
dec
adc
mov
cs
sahf
adc
or
pop
scas
js
sbb
ret
cmp
cmp
test
push
pop
sbb
sbb
lods
mov
dec
cmp
jp
or
hlt
adc
sub
das
in
movsb
and
in
pushw
roll
mov
jmp
inc
pop
cmp
add
scas
jg
or
mov
mov
xchg
xchg
mov
in
adc
std
sub
mov
ja,pn
add
stc
pop
call
cmp
js
adc
ret
std
pop
jmp
mov
push
jp
jbe
mov
mov
insb
adc
aam
mov
adc
inc
sub
xor
les
movsl
aaa
mov
dec
sub
out
call
push
push
negb
jo
gs
iret
xchg
cmp
inc
into
push
enter
pop
lock
mov
cwtl
inc
out
popf
xor
ficoms
mov
adc
repz
pop
clc
push
sbb
lret
mov
leave
xlat
inc
lahf
xor
xchg
aad
cmc
push
mov
loope
lret
sbb
mov
dec
fstpl
mov
mulps
mov
mov
add
xchg
dec
inc
or
shll
pop
faddl
rol
into
mov
cmp
loope
sbb
lret
int
or
cltd
popf
iret
sbb
pop
sub
pusha
test
movsb
sbb
pop
aam
mov
jo
dec
test
loop,pt
xor
jnp
sub
insl
cmp
mov
pop
or
push
pushf
scas
scas
add
out
vmwrite
add
or
jno
fiaddl
out
pop
mov
pop
sahf
cs
inc
int
mov
inc
mov
mov
addr16
xchg
lcall
adc
out
and
jmp
in
fdiv
leave
cld
jb
cmp
mov
clc
sbb
jmp
mov
xchg
jbe
sbbl
add
sbb
sti
addr16
test
ja
and
lods
hlt
xchg
pop
mov
xor
xchg
stc
jp
stc
loopne
cld
inc
add
sahf
daa
mov
out
mov
mov
add
sbb
das
pop
jmp
pop
xchg
pop
inc
sbb
jp
jmp
loopne
lahf
pop
cmpsl
jno
cmp
push
std
cmp
adc
push
fidivrl
enter
and
lock
or
sbb
pop
cmp
imul
push
pop
mov
jns
inc
adc
pop
push
xchg
add
jmp
cmp
push
mov
xor
adc
mov
jmp
xor
dec
lcall
pop
call
add
dec
into
imull
sbb
leave
cmp
mov
or
and
cld
test
cmp
adc
sbb
cld
cwtl
xlat
inc
mov
inc
popf
sub
jns
imul
mov
mov
test
push
mov
bound
mov
sub
xlat
add
popf
mov
test
bound
add
dec
test
in
sahf
cwtl
pop
ret
add
mov
subb
sbb
push
cmp
sub
aam
scas
jg
std
rol
dec
push
or
or
ret
popf
cmpsl
jle
jl
in
lods
mov
adc
sarb
fsubs
inc
lcall
pop
mov
or
sbb
les
jl
push
xor
pop
idivb
out
into
lahf
imul
or
pop
push
add
jns
cmp
pop
out
jmp
pop
repz
sti
sbb
add
std
nop
outsl
test
inc
cmp
hlt
in
sbb
pop
or
push
sbbl
xchg
or
mov
pop
fnstcw
inc
lcall
jge
mov
mov
call
dec
mov
xchg
xchg
in
repz
lods
xor
mov
mov
idiv
jns
dec
push
push
cmp
data16
xchg
cmp
push
and
adc
mov
cmp
not
sub
pop
pop
and
call
mov
jl
fnsave
cltd
xor
inc
jg
pop
cmp
inc
mov
shrb
scas
ds
pop
cmp
jg
data16
inc
in
push
arpl
jae
add
das
or
sub
lds
or
mov
sbb
cmp
and
mov
mov
push
cmp
loop
inc
mov
aam
pop
test
movsl
test
ja
mov
mov
popf
mov
cld
xorb
ljmp
pop
cmpsb
adc
mov
ja
pop
jns
push
leave
fistpl
sub
inc
sub
idiv
std
idivl
and
adc
js
cmp
mul
push
decl
loopne
adc
repz
outsl
je
add
push
and
les
sti
daa
mov
imul
nop
scas
fwait
push
push
xchg
pop
mov
test
xorl
pop
insl
jge
fwait
pop
ja
inc
push
sub
mov
imul
push
fwait
xchg
movb
loope
and
out
test
push
scas
outsb
pop
lret
fsubl
mov
out
cmp
ss
insb
sti
jo
dec
clc
and
lods
rcrb
clc
movsb
pusha
mov
xor
les
push
bnd
test
xor
add
push
mov
xchg
mov
cmp
push
call
repnz
mov
sub
cmpsl
leave
jbe
or
adc
dec
inc
jl
gs
hlt
outsb
inc
push
jnp
popf
test
fnstcw
inc
pop
addl
dec
mov
and
nop
dec
enter
jbe
rorb
cmp
add
rclb
jle
ret
scas
popa
and
mov
mov
dec
jl
mov
call
jns
int3
jnp
jno
push
scas
js
mov
adc
leave
push
and
dec
imul
push
test
jae
fcomi
scas
dec
adc
mov
ss
pop
dec
out
shrl
test
jp
fstps
sub
das
lock
std
and
nop
ficoml
out
and
cmc
xchg
pop
jmp
scas
fwait
cmc
stos
or
aaa
adc
lock
loope
xor
xor
scas
outsb
xchg
adc
sti
fnsave
mov
jae
sub
mov
in
fsin
shll
call
push
out
push
punpckhbw
cwtl
jp
aam
mov
and
or
data16
je
adc
sbb
ds
sbb
decb
push
stos
jecxz
jl
aam
imul
in
mov
sub
pop
cmc
inc
xor
push
icebp
in
movb
add
or
sbb
stos
cltd
add
cmp
cld
inc
dec
rcrb
lcall
and
and
xchg
jo
mov
jne
ret
sub
das
js,pn
sbbl
mov
xchg
imul
test
dec
jge
je
bound
ja
pop
fucomip
jle
sub
cmp
and
push
das
mov
xchg
inc
repnz
loop
or
movsb
dec
fisubrs
sub
cli
jo
and
outsb
sub
icebp
xor
mov
fmul
push
sbb
and
cmpsl
sbb
andb
into
into
inc
and
mov
dec
ljmp
dec
in
and
mov
dec
cmc
push
in
subl
add
popf
cltd
inc
ljmp
adc
push
xchg
add
dec
and
push
ljmp
mov
xchg
push
dec
mov
frndint
dec
add
int3
subl
and
jo
lret
xchg
xorl
fiaddl
test
movsb
das
cmp
push
xor
ja
bound
push
aam
push
push
pop
arpl
loope
mov
inc
lret
jmp
ret
adcl
push
xchg
cmpsl
int
or
cs
shlb
push
imul
fwait
or
insb
jmp
roll
mov
ljmp
inc
cmp
scas
and
mov
mulb
bound
xchg
cltd
push
sub
xchg
sbb
and
adc
cmc
add
mov
xchg
js
outsl
enter
loopne
mov
shlb
shrb
add
push
ret
push
push
mov
cltd
push
sbb
pop
mov
idivl
xchg
sbb
imul
jb
hlt
test
subb
fidivl
ret
lds
sbb
push
mov
mov
les
mov
xchg
lds
aaa
cmp
into
cmp
testb
sbb
mov
insb
das
lahf
xor
mov
xchg
sub
add
sti
dec
in
nop
fcmovnbe
xchg
cmp
push
or
lock
inc
sbb
mov
xorb
xchg
push
test
mov
push
jle
mov
clc
add
sbb
pop
lahf
add
ljmp
into
lcall
lahf
push
ds
fiaddl
mov
and
jmp
das
movsb
mov
loop
shll
cmpsl
cmp
sub
test
div
int
xor
adc
jo
stos
xor
jle
jp
and
pop
cltd
cmp
sbb
pop
sbb
gs
sbb
push
dec
pop
jae
push
std
push
call
jmp
stos
inc
insl
loopne
incb
mov
scas
addb
sbb
adc
negb
pop
dec
sbb
xchg
scas
rol
ds
clc
push
mov
jne
and
rcrb
push
cmp
mov
sub
adc
aad
sub
dec
push
inc
je
mov
movl
push
sbb
popa
xor
mov
repz
lods
push
call
jmp
lock
push
popf
dec
push
jns
and
mov
fisubrl
frstor
lret
xchg
leave
out
ret
lea
push
js
pop
cmp
test
xor
std
sbb
mov
popf
mov
xchg
fucom
adc
pop
mov
lea
push
repz
outsl
aas
repnz
xor
stc
and
fisttps
roll
stos
push
cltd
sbb
pop
xchg
int3
inc
mov
xor
out
outsl
cs
cs
scas
and
jbe
jge
cld
lods
repz
ljmp
xor
xor
out
bnd
pop
or
add
xchg
scas
push
sub
mov
push
cmp
adc
ret
fcmovnbe
jecxz
mov
push
sti
dec
cs
outsb
das
dec
stc
fucomi
inc
jb
jmp
mov
ret
cld
pop
and
inc
stos
mov
cmc
xchg
not
push
in
popa
inc
sbb
mov
xchg
cmp
popa
dec
mov
cli
nop
or
add
jnp
cmp
fsubl
pop
push
mov
xor
inc
mov
stc
cmpsl
fstl
cmc
jg
scas
pushf
out
popa
int
pop
lds
les
xchg
adc
dec
push
push
cmp
xchg
fidivs
fsubs
popf
test
popf
mov
ficomps
jp
addr16
mov
or
pop
in
cld
leave
rorb
mov
int3
mov
jae
pop
data16
nop
scas
fcoms
lret
lods
jnp
int3
insb
push
sub
pop
rorb
xor
lea
mov
mov
cmpsb
dec
aaa
insb
push
lahf
sub
dec
repz
sub
mov
and
dec
pop
sbb
fsubrl
jb
sub
cltd
sub
lret
jmp
or
lret
xchg
jl
inc
sahf
cld
iret
sub
sub
out
or
mov
mov
test
imul
adc
mov
nop
jbe
or
jae
dec
dec
sbb
pushf
repnz
stos
add
xchg
jno
insl
cmp
push
adcb
push
xchg
push
inc
or
sbb
or
cmpsb
jb
negb
or
or
xchg
psrad
sub
bound
arpl
inc
and
sub
inc
mov
leave
sbb
repz
test
inc
sarl
ljmp
in
push
push
ss
mov
xor
cmp
mov
mov
cmc
jmp
jnp
lock
xor
jo
sub
sahf
push
pop
icebp
xor
iret
dec
pusha
lcall
daa
jl
mov
xchg
es
sub
pop
test
jp
jmp
out
pop
adc
cltd
dec
mov
aaa
sub
ja
and
add
cwtl
ss
fiadds
sub
add
pop
inc
inc
mov
xchg
das
push
xchg
xchg
push
cwtl
cs
lds
fisubs
pop
inc
loop
jne
outsb
clc
mulb
inc
sub
cmpsb
lret
pusha
dec
jns
negb
addr16
out
push
xchg
mov
or
inc
lods
pop
adc
sub
mov
xchg
add
pop
sbb
nop
pslld
repnz
dec
or
mov
cmp
xchg
popa
xchg
inc
loope
pop
xor
icebp
jo
stos
jg
lahf
sub
dec
mov
cmp
jecxz
lds
cmc
fistpl
das
pop
clc
inc
dec
gs
add
adc
std
dec
push
movsl
cli
push
cmp
jp
sbb
add
mov
sub
mov
pusha
mov
pop
sbb
xorl
inc
jno
popa
ret
ss
mov
repnz
das
leave
jb
adc
loop
pop
lcall
xor
xor
enter
mov
imul
sub
dec
sarb
gs
push
clc
jg
shrb
rcrl
dec
jecxz
rcll
ret
pusha
pop
out
mov
inc
pop
cmp
decb
imul
ss
rcrb
pop
inc
movl
add
fucompp
add
insb
stos
cmp
and
ret
xchg
shll
inc
iret
in
pop
es
push
movsb
adc
or
shl
cmpsl
dec
fmul
int
dec
mov
and
xor
hlt
push
sub
mov
dec
mov
jae
push
cmp
popf
sbb
in
gs
sub
mov
push
int3
notl
cmpsl
cmp
add
test
jmp
xor
clc
mov
cmpb
mov
jbe
adc
jae
ja
in
adc
push
inc
in
push
shr
inc
pop
adcb
jp
cli
xchg
mov
pop
push
negb
es
enter
lds
xchg
xchg
and
negb
sbb
cmp
fucomi
testl
mov
push
call
pop
movsl
cmp
mov
les
iret
mov
add
and
mov
dec
xor
jge
and
stc
xchg
dec
jae
rolb
xor
in
push
stos
das
dec
xor
sbb
xor
pop
mov
dec
hlt
xchg
push
lahf
andl
dec
popf
icebp
jg
adc
cmp
es
cld
movsl
lock
jae
inc
rolb
pop
jne
dec
cmp
push
add
push
and
int3
lret
aaa
test
pop
or
push
in
repz
jmp
lea
insb
xor
les
loopne
cwtl
mov
sbb
in
push
pusha
movsb
hlt
cld
les
xchg
mov
and
fistl
push
dec
sbb
jo
add
mov
jl
cmpl
cwtl
and
pop
loop
loop
lds
stc
xor
pop
vpsrad
in
sbb
inc
jns
push
xchg
add
sub
dec
pop
lcall
shlb
or
je
or
jge
inc
cwtl
stos
xor
inc
imul
data16
sub
adc
mov
aad
insl
aam
adc
sbb
movsb
push
ret
sbb
out
pop
arpl
sbb
fwait
mov
scas
inc
cld
enter
rcrb
rcrw
push
dec
mov
push
jg
sub
sbb
cmc
test
xchg
fadd
cmp
stc
dec
rcrl
jbe
in
roll
ds
je
dec
or
daa
mov
push
inc
aaa
mov
in
or
mov
mov
daa
into
lds
jb
clc
push
fwait
bnd
mov
int
mov
stc
mov
mov
sub
inc
cli
sbb
add
jbe
fcmovnu
lods
cmp
and
mov
addr16
xchg
sub
dec
sti
push
inc
mov
addr16
pop
jl
sbb
dec
xor
aas
pop
lock
mov
fldl2e
test
pop
mov
mov
hlt
mov
add
inc
adcl
rcl
inc
fcmovu
in
repnz
or
xlat
add
lcall
adc
stos
out
jg
sbb
scas
movsl
repnz
and
add
into
inc
bound
inc
mov
xchg
dec
mov
push
push
jne
movsb
mov
fwait
repnz
jmp
pusha
jge
mov
orb
test
jge
inc
push
xor
test
push
or
popa
ss
fs
mov
dec
movsl
stc
stos
in
les
leave
imul
xchg
ja
in
sti
push
jnp
in
cmp
lcall
outsl
gs
sbb
jb
mov
rcll
ja
mov
inc
sub
les
popa
iret
fld
dec
mov
dec
cmp
fs
popf
imul
lret
mov
mov
cmp
xor
cs
mov
sbb
and
mov
popf
les
loopne
and
cli
ljmp
std
pop
iret
pushf
cmpsb
fdivrl
imull
mov
or
pop
mov
cmpsb
scas
into
mov
dec
je
aam
mov
test
jb
std
nop
enter
xchg
icebp
ljmp
pop
inc
jbe
sbb
xor
rorl
loope,pt
cli
dec
xchg
mov
sub
xor
add
pop
dec
cli
and
xchg
imull
pop
ror
repnz
fstl
cmp
loop
mov
mov
mov
daa
xchg
lods
inc
and
mov
add
rorl
int3
stc
popf
pop
call
in
std
int
mov
mov
dec
je
jns
push
sarl
mov
mov
mov
xchg
and
sub
out
cmp
inc
je
lret
enter
xchg
stos
fs
push
inc
fs
push
and
movsl
repnz
sbb
faddl
lret
test
add
ret
cs
fldenv
xor
inc
out
in
xchg
loopne
or
push
jno
lcall
xchg
test
cmp
xchg
pop
stos
pusha
mov
jle
add
and
ret
jne
clc
data16
sbbl
insb
push
mov
test
inc
mov
or
add
movsb
adc
inc
xchg
add
ret
lret
dec
or
cmp
sar
popa
in
in
mov
cmp
ljmp
inc
pop
rcrl
repz
les
cld
mov
pop
aaa
lds
push
push
adc
push
sbb
push
rcr
inc
dec
mov
inc
test
cmc
pushf
das
push
int3
mov
ja
dec
sbb
cmpsb
xor
sub
cmp
or
mov
push
cwtl
std
lahf
add
sbb
xchg
add
leave
jmp
scas
pop
aam
sbb
icebp
popa
mov
or
aaa
das
loop
xor
es
je
xchg
jne
push
push
test
mov
lds
ss
rorb
dec
push
ret
adc
pop
and
jecxz
in
clc
mov
sarl
std
and
test
mov
fistl
loope
imul
es
push
mov
push
pop
add
leave
fdivp
xchg
pushf
push
insb
fimuls
dec
mov
mov
out
imul
fidivl
cld
sub
mov
aam
dec
lret
adc
mov
imul
fwait
xchg
sarl
mov
cmpsb
mov
add
pop
xchg
jle
push
addr16
arpl
lods
xchg
js
add
push
stc
loop
aaa
hlt
xchg
imul
push
lea
and
es
xlat
arpl
adc
sbb
pop
lahf
nop
cmc
das
stos
mov
nop
in
call
in
cld
hlt
das
roll
ss
sub
jb
dec
std
mov
lods
in
stc
clc
adc
lcall
shlb
cmp
xor
jl
jl
ljmp
jnp
add
int3
enter
cmp
add
inc
adc
jne
push
pop
adc
pushf
outsb
sub
outsb
cltd
add
xchg
in
lahf
sbb
fsubrl
lods
sbb
jg
push
aam
js
cmp
inc
pop
rorb
mov
call
punpckhdq
notb
aas
das
stos
inc
insb
adcl
cs
push
cmpsl
ret
les
les
cmp
push
mov
data16
into
rol
pusha
adc
sahf
push
sub
xchg
cli
mov
lcall
push
jle
leave
std
outsb
dec
xchg
jge
rcrl
adc
pop
xchg
or
jg
add
pop
bound
inc
data16
fstpl
mov
mov
lahf
xchg
repz
inc
jmp
fisubl
and
ret
in
inc
add
andl
add
loope
add
stos
dec
inc
sbb
push
inc
cmp
or
fnstcw
adc
movsb
shll
jl
xchg
cmp
mov
push
push
jns
push
sbb
repnz
lahf
pusha
ss
mov
mov
and
dec
adc
rclb
jbe
mov
jo
test
pop
pop
mov
pop
add
fdivp
insl
stos
out
inc
mov
mov
pop
jg
out
std
sti
adc
push
movsb
lds
inc
lret
scas
shll
jecxz
data16
scas
push
dec
jmp
jecxz
aas
mov
lea
iret
push
test
fldcw
ljmp
in
jmp
sub
and
mov
pop
es
rcrb
mov
loope
cmp
mov
clc
aaa
out
push
xor
sub
sub
sti
mov
mov
out
sbb
ja
movsl
jne
mov
mov
xor
lods
mov
cmp
xor
test
popf
cmp
popa
loopne
mov
cmp
loop
out
adcb
imul
sarl
inc
sub
insb
ret
imul
xchg
mov
add
mov
jno
dec
mov
mov
stc
cmpsb
add
int
imulb
stos
jae
push
daa
jp
je
lret
std
scas
mov
inc
repnz
inc
aaa
jmp
mov
cmp
scas
fisubs
sbb
mov
jbe
jo
add
fdivs
pop
in
ljmp
push
lea
xchg
pop
lds
cltd
test
mov
cmpsl
movsb
test
mov
cs
dec
mov
addr16
ret
pop
cld
js
pushl
or
sbb
stos
int3
or
mov
js
outsl
push
xchg
das
lahf
mov
push
pop
loop
test
dec
mov
mov
sub
andl
sub
jo
lods
int
stos
push
loopne
mov
outsl
sbb
mov
jl
jge
cmp
jp
jl
ja
mov
pusha
ret
jp
xchg
xlat
mov
push
test
out
mov
mov
add
jbe
movsl
and
pop
sbb
insb
xchg
test
mov
mov
aaa
xor
pop
int3
inc
inc
cwtl
mov
in
rol
xchg
adc
negb
mov
lcall
cltd
jl
xlat
mov
xor
cltd
sbb
fucom
fwait
mov
sub
fdivl
out
cltd
pusha
inc
mov
push
lret
lret
adc
push
add
iret
adcl
cltd
in
fidivrs
dec
mul
repz
push
dec
adc
dec
mov
mov
insb
jmp
mov
cmp
out
sti
and
hlt
xor
sub
int3
adcl
push
popa
fwait
sbb
dec
flds
sub
inc
push
mov
xchg
clc
push
dec
xchg
xchg
cltd
cmp
pop
dec
fucomp
fldenv
dec
fists
test
jl
fidivrs
dec
inc
cltd
dec
jmp
inc
or
jmp
pop
xor
mov
repz
shrl
lahf
pop
int
shl
sbb
pop
push
cmp
xchg
dec
daa
adc
mov
jle
dec
mov
push
mov
mov
adc
les
jg
add
xchg
in
out
xchg
jmp
mov
icebp
jmp
mov
jle
or
push
stos
pop
insb
lret
jno
push
test
dec
out
subl
cwtl
aam
and
test
arpl
mov
test
fnstenv
or
ljmp
xor
in
lahf
ds
sahf
rcrl
fisttpl
pop
mov
cmp
aam
dec
fwait
lods
pop
cmpsb
fstpl
movsb
push
push
addr16
mov
cli
out
xor
cmpl
negl
add
jle
stos
cmp
adc
cmp
out
loop
inc
fsubr
test
cmpsb
pop
pop
mov
arpl
jp
sub
sbb
sbb
lret
cmp
xor
cwtl
repnz
xchg
cmp
fdivl
outsb
jmp
lret
mov
leave
jae
dec
xor
or
fists
xor
xlat
sbb
jne
pop
xor
out
lahf
jp
aam
ds
cmpsl
popf
or
pop
push
pop
mov
cmp
cli
mov
insb
lahf
in
xchg
push
push
cltd
iret
test
xchg
div
jp
idivl
mov
cmp
hlt
lahf
cmpsl
inc
or
jl
pop
xlat
mov
aaa
ret
imul
xor
mov
pop
mov
jle
xor
lmsw
js
pop
movsb
adc
addr16
repnz
dec
and
cli
insl
ret
or
jmp
daa
lods
inc
out
dec
cmpsb
jle
scas
jne
stc
inc
push
sub
jp
mov
test
mov
ret
ficompl
sahf
push
adc
dec
iret
fisubl
sbb
sbb
add
lahf
lock
adc
repz
call
in
inc
insl
pop
movsb
aaa
jg
sbb
jae
pushf
add
out
pop
cmpsb
add
stos
push
mov
sub
test
in
push
imul
xchg
shlb
into
popa
inc
push
cmpsl
insl
nop
enter
xchg
push
aaa
cltd
and
int
pusha
in
rorl
mov
dec
xorb
sbb
jae
inc
cwtl
push
out
sub
adc
sub
push
add
pop
imul
mov
sub
fnstcw
int3
xor
scas
clc
or
scas
les
aad
scas
loope
mov
mov
ss
addl
xor
cmp
push
faddp
sub
mov
cli
leave
push
lods
jp
shll
xlat
testl
stos
pop
sbb
scas
pushf
jo
scas
mov
jo
lea
xchg
test
mov
jmp
out
add
lds
cs
cmp
jl
dec
cmc
outsl
pop
dec
cmpsb
xchg
je
inc
test
mov
cwtl
pop
test
loopne,pt
jns
jecxz
cmp
roll
xchg
int
or
push
sub
jne
fidivs
gs
jnp
sarl
mulb
imul
mov
jbe
std
rcr
adc
jecxz
pusha
repnz
jg
insb
pop
jbe
insb
inc
xchg
lahf
mov
shlb
pop
lods
das
push
or
das
loope
insb
je
insb
loop
pop
push
sbb
cmp
jmp
adc
push
push
loope
out
add
mov
or
iret
sbb
adc
insl
dec
cltd
push
inc
adc
xchg
je
mov
cli
jmp
insl
jnp
cmpsb
adc
ret
dec
inc
adc
xor
in
pop
jp
popa
adc
cmp
stc
mov
jge
mov
xchg
insb
cmpsb
fdivrs
in
push
cmp
inc
roll
dec
repnz
lret
and
arpl
cmp
ret
jne
pushf
ret
cmpsl
mov
test
jo
sbbb
mov
xor
aaa
insl
fistpll
sbb
loope
shrb
paddsw
pop
leave
loopne
fimull
jns
push
stos
pop
daa
mov
mov
sbb
adc
mov
add
xchg
lret
xchg
repnz
out
inc
pop
in
es
stos
loopne
daa
dec
xchg
sbbb
stc
scas
mov
and
iret
rcrl
mov
mov
push
aad
andb
hlt
xchg
adc
mov
outsl
mov
fs
test
lock
xchg
popf
lock
and
fyl2x
xchg
rorl
fucomip
je
popa
orb
push
vmovhps
jbe
in
sub
das
mov
sbb
mov
push
push
inc
fisttpll
pop
fidivl
shlb
pop
stos
xchg
ds
int3
inc
pop
adc
mov
inc
cli
or
icebp
adc
push
shlb
xor
clc
cltd
cmp
dec
in
negb
enter
jle
sbb
in
cmpsb
ret
pop
testl
aas
stos
xor
popa
test
pop
xchg
adc
mov
aas
xchg
bnd
push
fcomp
lds
hlt
mov
cmp
fldenv
cwtl
lcall
test
insb
push
in
jp
mov
std
dec
push
add
push
xchg
outsl
aam
dec
jecxz
mov
movsb
dec
sub
xor
in
or
pop
sbb
adc
fdivrp
ret
test
test
sub
aas
in
push
mov
dec
add
jg
test
dec
aad
hlt
lds
mov
mov
ds
push
inc
inc
pop
pop
aaa
int
test
adc
sbb
pop
test
jg
insl
pop
sarl
test
rorb
pop
xchg
cmc
push
xor
xorb
lret
push
outsb
sti
mov
dec
out
dec
jne
mov
rcr
jg
pop
lock
iret
xor
bound
push
sti
mov
or
and
int
push
ja
sbb
adc
shll
inc
cmpsb
adc
inc
fimull
iret
pop
stos
adc
inc
xor
adc
movsl
das
xchg
push
and
lods
mov
cmp
cmp
ss
xor
fcmovb
aad
ret
orb
pop
push
xchg
mov
mov
xchg
fidivrl
mov
sub
fwait
jmp
cmp
imul
mov
int3
nop
pop
mov
push
mov
pop
aad
push
fwait
push
stos
pop
outsb
or
outsl
sbb
fwait
cmp
adc
xchg
cli
push
jp
ljmp
push
pop
jb
lcall
adc
js
outsb
das
fstl
decl
insl
push
bound
push
test
inc
sahf
xchg
pop
xlat
add
lods
arpl
mov
nop
jg
bound
push
sahf
xor
fbld
js
xchg
ja
jmp
xchg
xlat
lcall
sti
or
lock
rcr
mov
adc
and
repz
mov
imul
ss
jl
std
lcall
out
xchg
jne
cli
mov
jl
cmpl
fildl
test
xlat
cld
or
test
mov
and
nop
sub
and
mov
cmp
push
aaa
std
mov
push
movsb
sbb
shr
lea
dec
aam
push
movsb
call
push
shll
inc
stc
push
cli
aam
or
jns
push
jecxz
inc
nop
and
movsb
pop
xchg
or
test
push
int
stos
por
fistpll
hlt
sub
xchg
call
xchg
cmp
xchg
andb
add
mov
dec
sbb
enter
repz
and
pusha
notb
inc
cmp
shl
cmpsb
dec
and
pop
fistps
movsl
jmp
fwait
jge
sbb
in
or
jo
sbb
jns
pop
ret
xor
dec
ficoml
add
cwtl
add
pop
loopne
in
dec
sub
xlat
or
and
xlat
in
push
fidivl
mov
ficoml
adc
insl
test
bnd
cmp
push
push
push
xchg
sbb
sub
cmpsb
pop
xor
sbb
sbb
cmpsl
mov
xorl
int3
in
sub
mov
sahf
push
lock
imul
sar
ror
aaa
call
sbb
and
jnp
jnp
add
xchg
test
pop
pop
mov
imul
mov
imul
fsubs
popa
cmp
and
fisubrl
arpl
addr16
mov
cmpsb
mov
cmp
cmp
pushf
xchg
push
in
dec
call
imul
sbb
xor
fidivrs
inc
xchg
lcall
cli
or
stos
test
sbb
test
ljmp
into
jmp
arpl
add
xchg
mov
or
setg
mov
push
cmpsl
xchg
dec
mov
stos
and
mov
or
stos
mov
mov
dec
cmp
xchg
aad
sub
mov
push
notl
inc
ljmp
popf
add
fadds
pop
or
jne
clc
mov
in
rorb
daa
pop
add
sbb
sbb
push
out
xchg
mov
ss
repz
leave
ss
cmp
in
cmp
std
dec
jo
cwtl
sub
add
sbb
push
fimull
and
pop
outsl
leave
jp
push
arpl
test
mov
mov
mov
sbb
rcrb
jmp
in
lcall
pop
mov
cmpsl
cmpsl
cld
inc
jns
fmulp
inc
xorl
lds
add
ret
inc
or
pop
insl
into
dec
push
call
sub
outsb
cmp
xor
cmp
insl
lcall
mov
and
xor
or
xor
lret
ror
pusha
iret
or
lds
push
xor
add
ss
jl
xchg
or
xor
xor
xchg
xchg
loop
arpl
adc
ss
jp
push
mov
push
pop
pop
mov
xor
mov
hlt
xor
push
call
fisubrs
or
lea
test
add
aam
incl
loopne
dec
test
sbb
lret
into
ret
adc
arpl
pop
imul
mov
xchg
xchg
rolb
lret
adc
shlb
xchg
das
jb
sub
mov
add
bound
out
mov
xchg
ret
xor
push
mov
out
lods
adc
cmc
mov
shll
inc
and
jne
imul
mov
js
push
cmpsl
or
mov
fisubrl
mov
jecxz
popf
call
ficompl
fidivs
fldl
adc
out
int
xchg
addr16
mov
insb
aad
scas
cltd
xchg
mov
enter
sti
pop
xchg
dec
jmp
or
adc
in
sarb
repnz
push
dec
test
mov
push
push
hlt
sub
jno
mov
mov
inc
pop
mov
cltd
enter
xorl
ss
into
jmp
cmp
push
lcall
ret
out
into
dec
ljmp
icebp
xchg
aam
lods
mov
icebp
das
ljmp
pop
imul
pop
mov
push
pop
mov
dec
or
lds
imull
divl
or
negb
adc
mov
in
mov
inc
add
push
jb
ljmp
loope
mov
cmpb
ffreep
xor
push
adc
test
loope
ljmp
std
or
mov
jne
dec
imul
mov
add
jns
lock
pop
lret
into
outsl
jb
das
loopne
into
loopne
in
bound
lcall
sub
dec
inc
lods
xor
mov
sbb
jmp
js
xchg
sub
ret
lods
mov
cmp
xor
filds
sub
testb
push
ret
xbegin
mov
imul
mull
inc
aas
mov
and
inc
xchg
sbb
popf
addl
bound
jnp
jbe
stos
cmp
mov
call
or
pop
push
sahf
arpl
add
repz
sti
out
mov
jbe
cltd
and
iret
add
or
jg
push
pusha
std
sti
jb
inc
fisttpl
mov
xor
stc
jnp
pop
pop
clc
mov
ret
push
add
cmp
pop
test
add
push
sbb
mov
jle
add
jae
fucomp
loop
pop
lret
sahf
inc
sbb
movsl
dec
dec
dec
dec
mov
xchg
ret
inc
hlt
fwait
lock
cmp
nop
push
cmp
ret
cmovle
cltd
fstpl
mov
adc
js
fstl
fcompl
hlt
scas
les
jg
iret
dec
push
add
stos
nop
leave
sbb
adc
dec
xchg
nop
popf
int
movsb
outsb
mov
movsb
xor
push
sbb
adcl
dec
mov
icebp
orb
inc
mull
out
pop
push
imul
push
lret
jbe
loop
imul
and
clc
sub
shrb
dec
xchg
and
mov
aas
shll
lds
jle
pop
jb
icebp
sbb
ss
cmp
mull
fcomi
loopne
mov
inc
cwtl
cld
out
jb
or
inc
mov
pop
cld
push
nop
sti
inc
adc
or
in
jnp
xchg
jmp
sti
fs
inc
cli
and
inc
jl
mov
sbb
fwait
ret
shrl
sbb
adc
adc
fstpl
jno
neg
mov
pop
rolb
cs
inc
pop
dec
test
dec
pop
xlat
in
loopew
push
inc
inc
add
dec
sbb
orb
or
aaa
mov
fwait
adc
ds
or
ss
ss
movsb
mov
cs
rcrl
movsb
pand
nop
bound
mov
out
mov
push
hlt
jl
push
mov
adc
mov
mov
lcall
jp
pop
rep
enter
inc
aad
and
stc
lock
mov
outsl
pop
mov
dec
lahf
enter
nop
fisttpll
xchg
lret
aam
fs
mov
pop
daa
stc
in
cwtl
shrb
aas
inc
push
inc
incl
jno
jb
adc
loope
jnp
xchg
add
int3
jle,pn
fists
dec
pop
out
les
lahf
mov
dec
xchg
cs
lods
jb
jne
icebp
test
sub
fiaddl
pop
scas
and
and
adc
add
xor
sub
loopne
cmpl
cs
cmc
dec
cmp
and
jne
push
test
fstpl
lods
or
jno
inc
jae
mov
fsts
and
mov
testl
sahf
adc
addr16
pushf
or
lods
ss
fistl
ret
jns
aad
jbe
pop
sbb
xchg
jno
pushf
sub
sub
ljmp
pusha
pushf
int3
imul
adc
push
cwtl
dec
jmp
test
push
fbstp
jns
int
fdivr
sub
psllw
cmp
je
fistpl
push
leave
js
push
dec
lock
arpl
push
mov
test
add
jle
out
cmp
mov
popa
add
cmp
jno
add
mov
xor
jle
test
ficoms
add
adc
pop
lods
fwait
or
pop
xchg
pop
jns
out
add
sub
lahf
mov
sbb
popaw
loopne
por
and
jmp
pop
dec
ret
sub
mov
jge
inc
pop
or
cmp
fidivl
js
hlt
mov
loopne
nop
pop
aad
sbb
add
cmp
int
add
or
test
and
into
sti
insl
mov
xchg
or
fldt
push
not
or
sbb
mov
scas
lods
pop
push
rep
jg
test
inc
push
clc
aad
in
icebp
in
mov
das
in
ss
dec
ficoml
call
repnz
fcmovne
cmp
cwtl
lcall
mov
lret
das
xor
imul
scas
stos
push
jns
xchg
scas
dec
xor
lahf
xchg
jo
clc
mov
out
inc
addr16
cwtl
add
push
mov
repnz
orb
xchg
repz
lods
std
loopne
and
ss
aas
or
xchg
and
test
iret
pop
fimull
xor
mov
and
into
aas
aam
jns
pop
loop
push
dec
adc
ja
mov
cmpsb
mov
imul
jmp
aam
or
jp
dec
push
mov
or
nop
sahf
rorl
add
jecxz
mov
dec
aam
xlat
aas
movsl
xchg
xchg
mov
and
fldl
sarb
mov
adc
lock
mov
or
ljmp
push
mov
cmp
adc
cs
pop
push
movsl
mov
jb
xchg
icebp
aas
pop
jp
dec
test
mov
out
out
xor
jl
aaa
sbb
push
insb
icebp
and
jne
jge
push
pop
outsl
mov
push
rol
mov
in
mov
lods
lret
jno
stos
cld
inc
add
or
aad
push
lods
inc
sarb
inc
and
push
in
and
divl
outsb
cli
inc
xchg
sub
out
icebp
in
jmp
inc
jbe
je
cmp
or
daa
cs
movsb
pop
inc
sahf
and
rcr
and
ret
push
push
jle
icebp
jg
xor
in
test
cld
pop
movl
repz
xor
jle
test
dec
sbb
cmp
std
test
pop
lods
push
fistl
test
dec
pop
pushl
pop
int
or
pop
out
sbb
mov
sub
jbe
hlt
test
lds
mov
ds
dec
int
or
jb
stos
mov
and
mov
call
fsubrs
sbb
add
hlt
mov
cmp
mov
pushf
adc
push
cld
shlb
movsb
mov
jmp
add
cmp
add
mov
add
sub
jbe
pushf
push
enter
sub
repnz
shlb
push
aaa
inc
les
cmp
mov
xor
scas
pop
xchg
sbb
scas
out
mov
pop
cmp
xor
xchg
test
push
push
stc
adcl
jb
bswap
sbb
dec
and
jne
daa
in
push
mov
test
arpl
pop
mov
inc
sbb
je
or
mov
stc
xchg
stos
lahf
jno
repnz
int3
sbb
testb
or
orl
inc
xor
fdivrs
cs
dec
adc
sahf
lods
adc
jb
pop
and
inc
push
or
add
jp
int3
sub
repz
jne
test
mov
cli
rclb
je
dec
clc
sbb
inc
and
jl
inc
add
inc
in
das
pop
mov
dec
jmp
in
movsb
aaa
dec
int
push
inc
bound
nop
mov
mov
xor
inc
cwtl
and
in
out
adc
sahf
shl
fsubrl
jecxz
jbe
dec
adcl
dec
pop
shrb
icebp
stc
jbe
mov
lret
mov
mov
pop
jns
prefetch
or
jne
cmpsb
inc
mov
movsl
xchg
out
jnp
or
or
or
mov
pusha
stos
adc
push
repnz
into
push
and
sub
mov
jbe
mov
sbb
imulb
sbb
nop
cli
lock
aaa
mov
fsubs
or
adc
les
jle
add
fstl
sub
mov
popl
mov
notb
jne
adc
pusha
add
fst
data16
clc
dec
leave
repz
pop
fcmovne
jmp
mov
sub
adc
testl
jb
adc
add
cld
scas
adc
dec
lret
fcoms
out
lahf
pushf
xchg
out
xor
xchg
cwtl
adc
sahf
inc
jae
mov
movsl
popa
scas
or
loopne
lret
or
cmp
jb
lahf
pop
in
mov
and
jb
and
scas
or
pop
cmp
add
inc
jg
int
push
test
daa
or
incb
xchg
cmpl
fs
lods
sbb
enter
out
in
dec
cs
mov
outsb
fpatan
dec
fistps
and
je
pop
mov
js
iret
and
idivb
mov
ljmp
sub
popa
mov
cmc
imul
xchg
adc
xchg
sub
pop
cwtl
push
or
mov
nop
adc
ds
mov
xor
jne
in
inc
mov
xchg
inc
outsl
sahf
mov
mov
icebp
or
add
cmp
xor
lcall
sar
int
inc
scas
das
mov
xchg
roll
jge
pusha
dec
cltd
mov
cmp
in
xor
cmc
sub
mov
inc
je
push
xor
jle
jno
push
lods
in
xchg
and
adc
loopne
sbb
pop
cmp
inc
loop
ja
js
fildll
std
and
out
xchg
push
pop
jae
add
jle
cwtl
and
xchg
jnp
push
inc
xchg
pusha
lea
fstpt
xchg
inc
aaa
pusha
test
or
jge
jl
and
cwtl
inc
test
dec
add
fs
sahf
and
cmp
subl
andb
pop
pusha
lock
loope
popa
sub
inc
dec
jns
xchg
pop
out
mov
jg
addr16
test
or
scas
pusha
insl
adc
xor
inc
xchg
stos
imul
add
scas
xor
faddp
fisttpll
cmp
lds
repz
pop
mov
scas
es
mov
add
add
cwtl
or
mov
rolb
gs
mov
and
xchg
dec
sub
fbstp
lcall
test
add
sub
lret
jbe
movsb
test
pop
xchg
inc
arpl
mov
sub
fsubp
mov
xchg
ja
xor
popf
insl
movb
les
mov
loope
sbb
or
ficompl
into
adc
lahf
lods
push
sub
mov
decl
enter
in
sti
nop
outsb
insl
lahf
fiaddl
jge
pushf
lahf
push
or
imul
add
stos
stos
cs
imulb
or
scas
iret
sub
fwait
sub
adc
inc
fistl
xchg
es
in
dec
test
movsl
lret
add
sub
outsb
cmp
pop
mov
push
or
push
push
inc
repnz
cmp
frstor
incl
jge
mov
aaa
xchg
pop
test
shr
or
int3
inc
jecxz
js
std
ja
mov
cli
jle
movsl
or
fistpl
sbb
add
loop
cmp
cmp
cwtl
outsl
sar
push
cmp
fwait
in
popa
or
jae
aaa
xor
inc
mov
ret
orl
test
push
or
sbb
add
add
mov
adc
arpl
lcall
xchg
xchg
pop
mov
add
lret
xor
jne
stos
jae
fiadds
std
stos
mov
stc
inc
in
rorb
incb
adc
rcrl
iret
lock
jae
pop
mov
pop
cmpsb
fcmovne
pop
pop
push
ret
ds
jb
jmpw
mov
mov
lret
movsb
je
cmc
adcb
mov
push
mov
xor
lret
lods
aaa
mov
aad
mov
fdivl
cwtl
movsl
dec
sbb
out
push
ds
pop
pop
fdivs
nop
add
inc
push
ljmp
xchg
ret
insb
cld
inc
test
push
stc
incb
sub
adc
or
mov
sar
fs
shrb
sbb
xlat
cmp
sahf
lahf
xchg
sti
adc
dec
out
push
jecxz
popa
jb
sub
je
out
lds
stos
loop
pop
push
outsb
lret
dec
arpl
or
mov
cmp
jno
outsl
fwait
loope
mov
jl
xor
test
orb
push
inc
out
push
push
mov
hlt
movsb
adc
mov
stos
inc
mov
cmp
pop
and
scas
imul
ds
mov
outsb
push
lret
jge
test
sub
imul
testl
arpl
push
stos
mov
mov
ret
mov
sbb
jns
pop
jns
jne
into
iret
mov
fs
sbb
sahf
inc
mov
jb
pop
adc
jnp
lock
lods
or
and
push
dec
dec
es
jno
pop
clc
mov
ficoml
xor
icebp
fwait
dec
adc
sbb
xchg
fcoms
mov
push
jb
mov
data16
sub
add
or
xadd
mov
jp
stos
and
cld
loop
jge
ja
fstp
xchg
movb
and
fcomps
jae
push
imulb
pusha
insl
mov
dec
inc
adc
addr16
dec
popa
sar
call
outsl
add
pop
jp
call
push
les
mov
xchg
lock
inc
sahf
das
out
add
pop
aam
mov
mov
xor
js
and
jg
lret
cmpsb
cmp
repnz
fwait
int3
mov
jo
aad
test
mul
and
mov
iret
or
add
or
out
cmp
sbb
mov
xchg
xchg
adc
jae
mov
push
lret
ss
std
movsl
xchg
xor
push
pop
into
lret
jmp
dec
aad
mov
outsl
out
iret
xchg
add
sti
inc
and
lods
fstl
nop
lea
add
outsl
inc
sub
jae
and
dec
dec
cmp
std
inc
mov
mov
and
mov
sbb
mov
and
sahf
pop
fisubrl
adc
mov
roll
cmp
loopne
pop
imul
test
jmp
roll
pusha
sbb
dec
pop
cmpsb
fidivs
test
and
and
xchg
jno
jecxz
stos
lret
push
shll
testb
ja
or
stos
movsl
daa
and
iret
cld
bound
or
call
repnz
adc
lock
jae
push
dec
sbbl
mov
adc
lret
fs
test
jecxz
pop
jle
data16
mov
cmpb
pop
push
lods
outsb
add
or
dec
mov
adc
andl
fwait
add
cmc
pop
lods
cltd
jl
xchg
sti
push
rolb
call
fisubrl
xchg
daa
pop
push
adc
js
sbb
arpl
adc
daa
ret
repnz
ljmp
push
inc
nop
andb
clc
pop
call
stc
sbb
idiv
movsb
out
adc
xchg
pop
imul
cs
cmp
push
sbb
lds
popf
xor
daa
pop
lret
iret
into
cs
xchg
cmp
inc
push
enter
movsb
data16
or
inc
jecxz
hlt
mov
push
cmp
or
pop
daa
aam
sbb
pop
nop
cmp
xchg
fsubs
add
out
popa
nop
jnp
mov
insb
not
imul
fistps
outsb
popf
sbb
xor
lcall
lret
mov
gs
dec
jnp
shrl
stc
push
sbb
push
push
jmp
jnp
ret
das
sub
test
pop
xchg
arpl
jl
mov
inc
adc
bnd
push
loop
das
out
xchg
sbb
pushf
mov
movsl
xchg
sub
or
pop
sub
std
jmp
insl
dec
xchg
and
jp
push
aam
push
mov
sub
sub
mulb
out
or
fxch
mov
xor
test
cmp
outsl
dec
cmp
movq
jp
aad
lcall
jno
int3
shlb
insb
mov
sub
mov
gs
jle
sahf
mov
push
cwtl
cwtl
sti
dec
sub
test
popa
int
pop
les
push
rorl
and
jge
xchg
sbb
out
jp
cmp
or
lcall
imul
sti
out
int
jl
mov
dec
xor
xchg
cltd
pusha
sarb
filds
jne
pop
push
lods
adc
out
lds
in
stos
add
outsl
pop
xchg
test
inc
cli
stos
pop
test
iret
push
jns
lcall
shr
xor
mov
push
movsl
xor
add
andl
inc
xchg
adc
cwtl
and
sbb
sbb
cli
std
outsl
and
shrb
cmp
add
add
sbb
xor
stc
je
dec
test
in
jno
test
push
adc
sbbl
add
popf
xchg
cmp
sbb
dec
lahf
in
adc
mov
movsl
popa
or
shll
cmp
xlat
pop
pop
aad
bound
and
pop
push
in
in
pushf
enter
out
mov
daa
mov
repnz
mov
push
xchg
int
iret
dec
xor
pop
pop
lea
dec
push
mov
mov
test
mov
ror
call
mov
cmp
xchg
fsts
push
push
ret
lcall
stos
mov
add
rcl
gs
xchg
js
sahf
shrl
jnp
xchg
and
loopne
mov
pusha
and
cmp
jns
push
xor
lods
aaa
inc
cmp
dec
loope
fistl
sti
xchg
call
mov
jg
cmp
cmp
je
cmpl
ss
add
lods
pop
inc
jecxz
cld
adc
mov
cmp
test
test
loopne
pop
adc
stos
fistl
mov
pop
repnz
pop
ret
push
scas
adc
mov
out
mul
shl
pop
je
and
pop
test
incb
and
loopne
jl
sbb
rcl
loopne
add
cs
clc
jo
lods
xchg
imul
sub
mov
add
xchg
lret
lods
xchg
loope
dec
ror
icebp
dec
mov
fwait
add
imul
cmp
dec
gs
pop
movsl
scas
jno
add
daa
or
sub
mov
or
js
loopne
sub
insb
and
mov
lods
xchg
dec
add
xchg
or
adc
jmp
inc
out
out
and
and
jns
adc
or
stos
movsb
jnp
daa
imul
fneni(8087
push
test
stc
jl
lret
lcall
add
adc
mov
xorb
insb
rol
xor
mov
fidivrl
call
inc
int
sub
je
jmp
dec
or
movsl
mov
dec
testb
insl
xchg
das
mov
jne
aad
and
jl
mov
fs
repnz
cmc
lods
popa
mov
loope
fisubrs
jae
pop
sbb
mov
or
cmp
fistps
and
std
outsb
pop
push
nop
add
cmpsb
mov
in
lods
mov
mov
ret
out
add
lods
cmpsb
add
jg
mov
push
out
js
insl
aaa
aaa
insb
xor
xchg
je
insb
add
in
jnp
loope
cwtl
sbb
mov
popf
or
pop
mov
rcrl
aas
mov
dec
xchg
push
add
mov
dec
inc
pushf
mov
aad
ljmp
in
cmp
push
jbe
cmp
arpl
cli
inc
mov
std
jmp
ss
push
lret
idiv
or
cmpsb
cmp
ljmp
rorl
cmp
out
push
xchg
test
push
mov
repz
repz
sbb
mov
fmull
pusha
fdivrs
mov
rcrb
mov
inc
xor
mov
cmc
cld
iret
addr16
out
sbb
xor
mov
lods
xchg
pushf
mov
xor
jl
in
lcall
mov
lcall
or
xchg
push
pop
fisubs
xchg
jecxz
mov
mov
imul
arpl
xchg
das
nop
or
mov
scas
add
adc
mov
dec
xchg
sub
and
pop
jge
inc
in
cmp
xchg
jp
xor
out
xor
pop
out
or
push
cltd
gs
fistpl
and
adc
clc
xchg
dec
push
fistps
push
fisubrs
mov
out
das
movsl
rcll
call
fsub
jp
mov
xor
lahf
mov
jmp
xor
add
rorl
popa
cmpsl
xlat
imull
xorl
gs
ficomps
loope
pop
cmc
jle
lea
mov
fdivl
inc
mov
mov
and
cwtl
in
das
push
dec
addr16
dec
pop
lods
mov
mov
stos
or
jecxz
jg
adc
aam
sbb
mov
frndint
int
test
jmp
xor
mov
inc
push
stos
pop
mov
stos
and
pop
loop
or
xlat
icebp
mov
sbb
add
mov
xchg
roll
push
or
inc
and
xchg
iret
fisubrl
xchg
lret
mov
sbb
in
call
pop
push
push
cmp
in
dec
les
out
in
dec
movb
mov
mov
popf
push
mov
cmpsb
lock
add
and
clc
cmp
xor
cs
int
lods
mov
call
outsb
fs
or
fsubrl
je
and
ds
ljmp
sub
clc
sbb
js
nop
jg
clc
fcmovbe
dec
and
cmp
inc
mov
sbb
or
adc
addr16
dec
data16
xchg
xor
test
fistpl
aam
mov
mov
stc
call
mov
arpl
and
adc
aaa
sub
je
mov
cmc
push
int
mov
leave
mov
stos
ret
out
jnp
pop
in
mov
and
mov
adc
cmpsb
xor
or
push
adc
fs
inc
sti
xlat
rcr
in
pop
sub
dec
cmpsb
cmc
leave
jne
loopne
adc
mov
xor
cmpsl
loopne
jmp
mov
push
mov
in
dec
insl
mov
ds
mov
jne
pushf
mov
and
adc
aam
inc
psubusb
adc
sub
orb
mov
lea
mov
leave
push
push
add
mov
mov
xor
jnp
push
sbb
aad
call
fstp
sahf
mov
pop
arpl
fisubrl
pop
cld
hlt
jbe
jp
test
enter
call
jmp
or
cltd
dec
movsl
mov
int
pop
cli
aaa
cmp
mov
sarw
insl
pop
pop
cmp
loope
push
shrb
mov
sub
cmpsl
jbe
pop
in
mov
mov
jecxz
add
mov
ds
inc
xor
shrb
aad
out
xchg
in
xchg
outsl
fcmovnb
mov
mov
mov
inc
sub
cli
scas
and
mov
sub
jp
leave
std
mov
mov
jae
push
outsl
and
add
push
lods
mov
mov
out
in
outsb
dec
mov
pop
es
pop
pop
ss
sub
outsb
add
jg
aad
cwtl
inc
arpl
add
lock
mov
sbb
fisttps
pop
divb
pop
dec
push
sub
repnz
xchg
fildl
mov
add
mov
mov
push
jns
daa
sub
sbb
in
je
mov
call
jae
mov
mov
mov
push
lret
loopne
mov
cmp
loopne
clc
movsb
rcl
jl
mov
xchg
pop
jge
stos
cmp
dec
daa
push
mov
rcrl
inc
jle
cs
cmp
fildll
ja
fisttpll
ja
jmp
das
jecxz
mov
pop
mov
dec
lds
jle
xchg
sub
jno
fnstenv
dec
idivl
iret
in
jb
dec
lea
ds
dec
fisubs
out
pusha
clc
test
divl
mov
ds
or
je
mov
out
dec
test
jmp
adc
movsb
push
fwait
xchg
inc
xchg
lock
mov
xchg
fdivs
add
pop
jns
sub
imul
sub
cmp
outsl
clc
mov
icebp
lods
add
data16
sub
push
pop
push
adc
mov
push
test
and
shl
ret
jge
lds
scas
and
mov
lahf
cmc
mov
xor
fwait
shlb
jo
out
es
imul
sub
mov
and
pop
lahf
adc
pop
xchg
lock
xchg
sbb
mov
cwtl
mov
data16
cmp
xchg
mov
les
inc
outsl
xor
pop
std
adc
arpl
dec
cli
mov
cwtl
mov
cmp
jecxz
jmp
push
push
insb
and
jge
insb
leave
cmpxchg
pop
cmpsb
sub
jne
fucomip
sahf
pop
cmpsl
mov
scas
dec
rcrl
jecxz
lea
stc
fmul
add
das
jae
fiadds
mov
dec
aas
call
xchg
adc
mov
xchg
mov
add
lds
lret
bound
repnz
sahf
and
bound
fisttps
mov
adc
jp
loope
ret
adc
mov
push
fsubl
pushf
mov
sub
lret
add
xchg
jle
or
jl
arpl
imul
xchg
and
dec
xchg
clc
shl
dec
cmp
dec
mov
sbb
sbb
cmc
mov
clc
lret
xor
cltd
movsb
outsb
adc
pusha
cmc
lods
les
adc
mov
and
fimull
notl
out
push
mov
sbb
loop
jle
cli
je
lret
sbb
mov
add
sahf
addr16
xchg
test
push
xlat
mov
les
shll
lods
dec
mov
fldenv
xlat
xor
add
sub
sub
rcll
xchg
hlt
fwait
dec
stc
xor
jns
add
shl
das
xchg
push
call
int
sti
or
lods
mov
test
xor
scas
add
lret
test
mov
ret
lods
icebp
xchg
je
sbb
or
push
scas
icebp
incb
shll
data16
pop
aaa
and
xor
imul
ja
jl
addr16
es
fnstsw
push
test
inc
iret
cmp
adc
push
xlat
in
mov
dec
je
nop
adc
leave
sub
in
xor
out
or
xor
stos
mov
inc
jg
jne
or
push
test
popa
rcll
or
aas
inc
xchg
mov
sbb
in
lods
mov
xchg
and
push
jnp
movsb
outsb
stos
lret
fbstp
push
inc
lds
popa
sbb
inc
adc
fiadds
mov
lret
pop
mov
push
pop
and
sub
add
sbb
fsts
pushf
fimuls
fsubrl
cmp
mov
lea
or
cmpsl
aad
lds
fnstenv
add
movsl
push
add
sti
lret
mov
sub
mov
lods
std
mov
je
mov
cmpb
ja
push
dec
dec
lods
mov
lahf
addr16
jmpw
add
pop
add
ret
cmp
xor
stc
clc
pop
adc
jmp
add
testl
movsl
inc
mov
xchg
xor
filds
popa
shrl
out
lret
sub
mov
lock
ret
pop
fisubrl
stc
sub
inc
cmpsb
hlt
sahf
stos
push
sub
ret
cmpsb
out
bound
movsb
test
in
pop
adc
jecxz
mov
mov
mov
xchg
shlb
sub
mov
dec
test
adc
es
jb
push
addr16
insl
sbb
movsl
and
sahf
mov
mov
push
rorl
sbb
pop
cmpsb
cwtl
lret
mov
xchg
stos
fsts
mov
inc
sub
sub
lret
sub
fstps
xchg
fsub
inc
sub
xor
dec
filds
xchg
pop
push
add
orl
dec
shll
stos
cmp
xchg
addl
inc
jge
jecxz
push
mov
les
aaa
add
lret
cwtl
cmp
aas
sbb
enter
jmp
mov
jae
push
mov
inc
mov
rcl
daa
call
jns
cwtl
or
pop
cmp
ja
add
leave
or
adc
jmp
dec
iret
movl
outsb
dec
jl
in
mov
sahf
fs
pop
into
movsl
aad
rcl
ret
stos
mov
pop
mov
rolb
ret
and
scas
xchg
push
ds
push
mov
xor
add
rcr
sub
movsb
mov
mov
negl
adc
or
push
or
xor
sub
pop
lret
mov
mov
mov
stos
test
movsl
mov
outsb
stc
fists
inc
pop
mov
sbb
ljmp
pop
fdivl
sub
mov
lds
shlb
popf
adc
push
mov
jge
imul
int3
fs
push
pop
dec
pushf
out
mov
hlt
mov
fnstsw
notl
mov
hlt
jmp
mov
notb
cmp
pusha
xor
dec
xchg
shrl
push
dec
je
icebp
loop
test
sub
and
jge
pop
ret
sub
and
cmpl
add
push
inc
popf
hlt
and
push
push
pop
shrl
loopne
xchg
mov
push
testb
push
loopne
ficoml
ds
mov
push
cltd
xchg
js
mov
lcall
fistpl
js
xchg
pushf
mov
pop
dec
jp
add
sarl
xchg
mov
mov
jl
cmp
push
sahf
mov
or
sti
or
xchg
dec
sbb
mov
fldenv
divl
inc
repnz
fcmovnbe
pusha
mull
aad
pushf
orl
or
pop
mov
or
fisubrl
pop
sub
cmp
out
cwtl
mov
cwtl
mov
test
add
test
popa
leave
mov
xor
inc
adcl
hlt
fists
jp
pop
cs
and
mov
dec
nop
clc
stos
int3
cltd
imul
mov
jae
sub
cmp
mov
out
aad
das
dec
cmc
int3
mov
ja
outsl
stc
mov
cmc
stc
jns
mov
dec
xor
jecxz
pop
cltd
mov
arpl
aaa
shrb
fdivrl
data16
xor
mov
and
in
mov
xor
fisttps
or
fincstp
mov
push
sbb
lds
stos
les
outsl
test
cltd
push
xor
in
xchg
xchg
mov
fldcw
arpl
jo
rcl
push
leave
test
loop
mov
popl
and
push
lahf
xlat
call
and
xchg
fcoml
test
and
lds
fdivrp
bound
fcoms
pop
cmc
out
dec
xchg
jecxz
and
jle
sbb
pop
fldl
subl
add
roll
inc
inc
in
pop
or
sub
rcll
jnp
dec
aas
test
in
ficompl
rol
pop
inc
enter
add
mov
adc
sub
jle
mov
test
pop
int3
push
ss
jbe
cmp
push
xchg
js
sbb
pop
xchg
es
mov
scas
out
popf
xchg
and
mov
out
add
cmp
push
out
ss
aas
dec
es
mov
add
pop
inc
rcr
stc
pop
xlat
sub
lock
mov
shl
sbb
xlat
imul
or
clc
xor
xchg
lods
jo
lret
mov
mov
mov
call
push
or
in
in
divl
lods
inc
xor
mov
xchg
in
xchg
xor
lock
jno
ss
cli
xor
lahf
and
popf
imul
and
arpl
inc
mov
jnp
xor
cmpsb
scas
cli
or
jp
sub
gs
sbb
arpl
jne
add
adc
cmc
or
mov
jp
jmp
jp
nop
rcl
xchg
mov
fs
add
and
push
jp
and
or
pop
ret
dec
cmpsb
fwait
add
rcrb
ja
enter
add
push
cmp
xlat
jb
push
add
jle
aaa
push
lods
or
test
jl
aad
xor
add
bound
mov
std
dec
and
jp
mov
xchg
iret
dec
pop
vpunpcklqdq
ret
xchg
test
in
jmp
cmp
pop
pop
jnp
push
sbb
xor
lods
sti
ds
inc
cli
mov
mov
cld
in
enter
push
test
sub
popa
adc
xor
and
imul
test
cmp
sbb
enter
mov
xor
test
movsb
sbb
mov
jg
stos
popf
sbb
in
ret
jb
imul
es
rcrb
cmp
cmp
inc
outsb
mov
sbb
cmp
push
ret
inc
inc
mov
cmp
mov
add
ljmp
inc
inc
and
incb
cli
sbb
jae
xchg
cpuid
addr16
stos
je
rcrl
and
ret
mov
inc
inc
rcr
adc
out
pop
int
cs
cli
xchg
lret
and
aad
mov
sbb
shrl
mov
mov
scas
in
repz
addr16
jae
das
outsl
js
adc
sarb
fisubrl
sub
clc
jbe
aam
push
fldenv
in
add
cli
add
push
push
push
inc
test
mov
mov
xchg
popa
js
xor
test
pop
pop
mov
jno
test
add
mov
pop
stc
dec
jge
mov
mov
sbb
sub
fcompl
scas
fnstcw
sub
mov
add
shl
ss
mov
xor
xchg
movsb
mov
flds
push
rorl
sbb
ljmp
push
mov
cmpsb
loope
and
inc
testb
inc
cmpsl
jmp
stos
jecxz
cmp
fldl
in
pop
xor
add
jo
fadds
xchg
icebp
xchg
inc
lods
faddl
xor
lods
sbb
dec
subb
jb
xchg
outsb
adc
or
loop
repnz
out
mov
andl
add
sub
xchg
pop
sub
leave
mov
add
pop
mov
je
jl
cmp
scas
aam
pop
int3
xchg
andb
pop
sub
or
cmp
sub
aam
xchg
xlat
test
enter
jge
xchg
mov
pushw
adc
aam
cmp
mov
in
jo
xchg
fsts
faddl
jne
fdivrs
pop
orl
cwtl
xchg
sbb
pusha
dec
fcmove
push
xchg
addr16
cld
push
jp
xor
ficoms
idivl
jecxz
xchg
insl
push
call
adc
mov
in
jmp
cmp
shrl
scas
test
pop
fstl
in
push
adc
xlat
ret
pusha
pusha
mov
sbb
jne
das
sub
andl
push
ror
or
sub
je
inc
push
sbb
insb
movsb
scas
ret
push
pop
add
inc
and
push
sbb
xchg
in
aas
roll
inc
jns
or
fsubs
and
jno
push
jae
scas
or
jbe,pt
mov
insl
addr16
lods
adc
jne
jl
sub
cmc
call
cmp
xchg
add
pop
mov
xor
les
sbb
xchg
sub
xchg
xor
ficompl
add
jnp
push
jmp
scas
push
xor
inc
lock
test
movsl
pop
inc
out
ss
stos
mov
sbb
cld
ds
or
jae
shrb
shrb
sub
sub
mov
int3
addl
repz
cmp
dec
es
or
dec
ljmp
popa
jns
jmp
mov
inc
push
repz
xchg
fdivrl
add
dec
inc
cmp
dec
xchg
add
and
mov
sbb
fsubl
add
int3
sub
mov
mov
cmpsl
inc
rorb
inc
jne
popa
add
mov
xor
sbb
cmp
sbb
scas
cmpsl
push
loopne
pop
and
xorl
jg
neg
mov
popf
and
call
cmp
xchg
imul
test
mov
jge
mov
testb
mov
arpl
mov
aam
ss
jno
outsb
mov
imul
push
stos
mov
ja
mov
jle
xchg
jns
jle
mov
adc
push
push
xor
mov
mov
test
rcrl
iret
gs
mov
andb
js
pop
or
dec
adc
pop
stc
fdivl
test
push
stos
and
sub
ljmp
push
arpl
shrb
fisubrs
push
xor
inc
fisttps
fdivr
cmp
pop
lds
xchg
pop
xchg
call
mov
and
adc
les
xchg
xchg
stos
mov
add
push
dec
mov
sub
aam
test
outsb
lock
rcr
dec
lcall
add
pusha
fistpll
mov
xchg
nop
xor
jne
cmpsl
repz
lods
and
mov
cmp
add
dec
jb
int3
sbb
pop
daa
adc
insl
sub
xchg
aad
cmp
int3
loope
xchg
cwtl
pop
aad
push
dec
xor
hlt
pop
insb
inc
stos
dec
mov
bound
cmp
dec
cmpsb
enter
mov
out
sub
in
add
mov
test
jne
or
ds
sub
xchg
fnstcw
push
jnp,pn
adc
les
test
add
mov
fisttps
adc
lock
inc
aas
dec
mov
jmp
mov
or
stos
or
les
ja
cmpsb
test
mov
pop
sub
in
rorb
fldcw
sub
cmp
mov
stos
dec
mov
xchg
ss
add
cmc
pop
and
push
sub
cmpsl
int
mov
addr16
lcall
push
call
pop
inc
pushf
push
lahf
push
cs
pop
jns
pop
fstl
aam
dec
cwtl
std
and
test
out
adc
push
or
mov
or
cltd
fistpll
jmp
rcrb
jae
mov
pusha
out
leave
sbb
dec
pushf
outsb
mov
imul
fisubs
push
jle
inc
lcall
test
iret
sbb
add
out
inc
dec
outsl
pushf
add
pop
insb
lahf
test
pop
push
sub
cmpsl
inc
test
stc
jmp
test
shrb
mov
jle
addb
arpl
cmc
mov
movsb
loop
cld
push
jo
sbb
cmp
push
xchg
rolb
gs
repz
stc
push
loopne
addr16
out
mov
popl
fidivs
es
sbbl
scas
inc
into
shl
jo
int3
cmp
mov
dec
rcll
ja
cmp
mov
mov
and
jns
sub
test
adc
and
outsb
ror
inc
out
iret
lret
pop
xchg
jnp
fistpl
mov
sub
lods
add
movsb
cli
roll
sub
or
aam
imul
fildll
jle
addr16
sub
add
xor
stos
int
cmp
or
clc
mov
xor
mov
mov
xchg
add
push
xor
mov
cmc
jge
mov
mov
push
jbe
add
inc
dec
int3
xor
ret
add
sbb
rolb
add
add
fs
push
fistps
dec
aas
sub
adc
push
stos
pop
popa
idiv
push
in
pop
pop
mov
push
les
fstpt
inc
xchg
in
cmp
cmc
mul
push
xchg
mov
sbb
xchg
sub
mov
fcoms
jo
or
mov
xchg
into
xchg
pop
add
xchg
gs
pop
jg
cld
scas
sbb
mov
jmp
pop
cmpsl
cmp
fstl
shrl
and
jne,pt
mov
test
adc
sbb
jns
mov
stc
addr16
mov
arpl
cmp
ljmp
mov
push
cmp
mov
in
cs
xor
jno
mov
gs
and
in
std
mov
add
mov
rcll
inc
jb
push
mov
outsb
add
adc
cmp
or
dec
scas
cmpsl
imul
nop
or
sub
pop
je
ret
call
mov
not
inc
es
pop
adc
insb
out
cmpsl
aas
fs
jl
mov
jmp
ror
sub
aam
loopne
je
pop
sbb
aas
xchg
mov
inc
add
outsl
dec
lret
or
add
jmp
lahf
inc
sub
test
jns
cmc
imul
sahf
iret
test
mov
pop
and
es
imul
mov
xor
sete
mov
mov
repz
scas
dec
and
lods
mov
data16
jb
aam
xchg
arpl
scas
fs
mov
lret
fs
insl
push
stos
sub
vandps
je
subl
push
push
imul
pop
and
aas
std
mov
cli
sub
push
jb
xchg
out
or
movsl
jb
stos
shlb
cmp
lods
mov
xchg
popa
mov
mov
push
mov
mov
cwtl
xor
out
jecxz
cmpsl
aas
xchg
out
ror
lds
sbb
rcrb
ja
jmp
mov
int3
outsl
adc
test
adc
fstl
je
neg
fs
inc
mov
jp
into
pusha
xor
sbb
mov
in
test
int
adc
stc
sub
orb
lcall
mov
rcrl
push
in
jne
jge
push
decb
cwtl
inc
mov
xor
rclb
ret
mov
push
bound
movsl
out
gs
rcrb
and
mov
sbb
cwtl
lods
xchg
and
cwtl
jge
std
dec
dec
sbb
scas
jns
xchg
stos
jbe
adc
lcall
je
xor
adc
ja
repnz
or
or
hlt
jmp
lcall
push
jbe
xchg
push
aas
sti
rolb
adc
fstl
test
xchg
popa
dec
mov
push
mov
cmp
jmp
xchg
mov
pop
dec
sub
lock
push
lret
push
jl
dec
or
js
fidivrs
mov
cs
cltd
mov
and
sbb
cmp
sub
call
mov
stc
in
and
outsl
data16
setp
xchg
int3
pop
push
int3
pushf
fwait
mov
mov
ljmp
test
and
adc
mov
sub
es
pop
gs
or
int
scas
push
sbb
sti
dec
mov
and
push
push
mov
int
ljmp
out
mov
sbb
stc
shl
stos
idivl
pop
cs
pushf
jg
and
push
add
leave
add
sub
pop
aas
adc
add
mov
dec
arpl
inc
push
cltd
push
negb
cmp
adc
cmp
adc
shlb
outsl
lahf
add
mov
sub
ds
ret
push
xorl
mov
pop
in
or
sub
aas
and
adc
push
fidivl
pushf
mov
mov
ret
jmp
ret
xchg
int
out
cmpsb
movsw
push
lock
out
sbb
ret
fcomip
sub
adc
fs
sbb
aaa
test
pusha
insl
nop
loope
sahf
sti
lods
iret
shll
mov
sbb
sbb
add
out
push
aaa
cld
xchg
push
rcll
mov
pop
mov
mov
add
test
idiv
sbb
jb
subb
jge
cmp
cli
pop
dec
in
dec
outsb
sarl
into
jge
ret
cmovns
insl
sbb
inc
aad
scas
mov
nopl
inc
add
xchg
fstps
add
fldt
mov
xor
ljmp
bound
add
mov
pop
cmp
mov
incb
hlt
popa
out
push
xchg
in
or
add
out
stos
push
mov
repnz
cmp
adc
add
cmp
push
aad
movsl
arpl
aaa
ss
loopne
pop
repz
xchg
sub
jecxz
jecxz
ficoml
daa
xlat
ljmp
subb
jecxz
jbe
cltd
inc
jnp
and
pop
adcl
push
clc
add
adc
aam
notl
in
xor
dec
inc
add
push
sbb
mov
sub
jecxz
icebp
fcmovnbe
rcrb
movhps
call
clc
pop
ss
mov
inc
xchg
sahf
ret
xor
cli
ret
test
pop
adc
jl
aam
mov
pushf
push
add
cmp
or
scas
adc
pop
dec
int3
fidivs
xlat
pop
idivl
push
sbb
inc
rcr
adc
inc
push
scas
subl
negl
add
push
sub
or
sbb
mull
fsub
div
add
dec
sbb
sub
pop
fiadds
sbb
cs
or
dec
jb
inc
in
mov
push
roll
mov
or
out
sbb
add
xor
out
sbb
les
pop
das
cmp
or
jl
xchg
pop
movsb
popf
enclu
jle
movl
lahf
daa
int3
bound
sbb
cmpsb
jbe
pop
mov
in
std
out
sub
out
xor
push
adc
adc
jbe
popa
mov
adcl
mov
test
mov
jp
je
mov
push
jae
or
push
or
jmp
mov
call
sub
push
dec
fs
mov
push
and
and
out
and
loopne
adc
mov
jmp
jmp
xchg
push
sti
dec
int
in
sahf
enter
xor
xor
test
xor
push
cli
inc
popf
xchg
outsl
jns
mov
dec
sub
sbb
jle
adc
scas
push
lret
inc
fcmovnb
ja
or
int
cltd
pop
sarb
lea
insl
bound
rcll
fwait
out
and
xor
rolb
mov
and
gs
lret
lds
jecxz
or
movsl
sbb
dec
cmp
addr16
or
repnz
ror
repnz
je
lods
jl
dec
sub
or
mov
inc
out
fisubrl
clc
mov
push
mov
xchg
stos
ss
out
mov
and
stos
lods
cwtl
jl
dec
push
outsb
ja
sbb
out
aaa
pop
pop
loope
test
test
in
and
dec
cmpsl
and
adc
sahf
sbbb
sub
dec
and
fldl
sqrtps
cmpsb
cmp
push
jle
icebp
vmulss
mov
or
dec
fldenv
jae
out
sbb
aam
push
mov
ud2
and
dec
sub
mov
pop
imul
mov
pop
sub
fimull
xor
jmp
jb
sub
sahf
mov
jae
ja
dec
xorl
mov
pop
push
fs
aad
push
cmp
popf
pop
cltd
xor
jno
and
les
xchg
and
xor
jbe
xchg
scas
mov
or
and
sub
mov
pop
xor
fdiv
inc
dec
in
sbb
iret
incl
push
and
outsb
dec
jge
pop
mov
call
fsubrl
lock
xor
scas
clc
sub
into
mov
decl
or
sub
out
pop
mov
cwtl
dec
jecxz
jb
ljmp
aam
pop
leave
push
mov
test
sbb
js
rep
pop
xor
jae
ret
and
push
push
outsb
mov
sub
jo
mov
js
stc
outsb
push
push
mov
addb
push
mov
add
rolb
pop
das
fldcw
outsl
inc
sub
and
mov
in
xchg
adc
pop
push
adcl
ss
pusha
lcall
mov
mov
adc
test
sub
inc
pop
shll
mov
pause
cmp
xlat
mov
or
adc
dec
and
mov
or
adc
pop
xchg
mov
add
mov
sub
gs
stc
hlt
add
lret
nop
test
dec
loope
scas
imull
mov
jns
push
mov
fwait
adc
mov
lret
mov
xchg
add
lret
mov
ret
rcl
adc
mov
enter
jno
and
lcall
sarl
cmp
inc
jb
adc
dec
adc
jne
pop
lock
xchg
jle
in
adc
out
ss
imul
pusha
jo
mov
cmp
cltd
add
pop
mov
rolb
mov
cmc
push
adc
or
loop
sbb
mov
or
cmpsl
repz
popf
aad
sub
xor
out
call
dec
ljmp
stos
dec
pusha
int
xchg
pop
std
sbb
xchg
lret
fisttpll
fstpl
jno
fdivrs
aaa
push
jecxz
cmp
adcl
icebp
mov
or
and
dec
pop
xchg
dec
cwtl
stos
and
inc
xchg
outsb
aas
dec
imul
push
aad
sbb
in
fs
sti
into
pop
xchg
fcmovne
lods
push
mov
into
sarb
pop
int3
xchg
push
enter
mov
adc
and
inc
hlt
shll
ljmp
imul
mov
test
rorb
mov
lock
in
pushf
cmp
jbe
shrb
stos
add
shll
cld
or
xchg
mov
inc
rol
cmp
data16
aam
or
rcrl
cmpsl
cmp
cmp
mov
test
ljmp
pop
int3
scas
je
push
repnz
mov
in
rolb
sub
stos
aam
jns
cld
movsb
mov
jmp
es
inc
lods
xchg
mov
adc
cli
inc
sub
inc
and
adc
scas
mov
adcl
pusha
xchg
cmp
fsts
fstps
push
adc
in
or
adc
jns
xor
xrelease
or
inc
stos
and
jmp
or
je
push
data16
icebp
decb
mov
rolb
jle
fcmovu
pop
lahf
cmp
andl
sahf
jo
push
ds
adc
scas
xor
insl
or
mov
in
push
mov
rorb
lods
push
pushf
or
jno
sbb
push
hlt
push
push
and
cmp
cmp
lock
xchg
aad
dec
mov
fmulp
and
pop
cmp
jecxz
adc
scas
xor
push
cmpsl
testb
push
jecxz
cltd
imull
lret
bswap
lcall
fcmovnu
xchg
lcall
pop
imul
sbb
sub
push
mov
pusha
xor
lret
add
jb
add
xor
sbb
sbb
sbb
mov
outsl
inc
cmp
popf
bound
and
xor
lcall
push
jl
mov
scas
jle
pusha
sbb
inc
or
jp
aas
and
cmpsl
adc
mov
shrb
decb
sbb
ljmp
outsl
loope
or
in
add
mov
in
jns
mov
cli
inc
fwait
gs
leave
popl
and
add
mov
jb
xchg
insb
pop
xchg
loopne
scas
cmp
jbe
into
shlb
movsl
adc
jne
sub
xchg
lret
test
jecxz
dec
xchg
xor
cmc
pop
in
test
and
enter
sbb
jg
xchg
repnz
test
adc
in
ss
cld
jmp
mov
add
popa
cmpsb
sbb
lret
jp
pushf
repnz
movsl
push
mov
jge
sar
data16
fdivrl
ret
push
and
aam
cmp
sub
mov
cli
dec
out
out
inc
mov
push
test
jl
ret
or
sub
and
aaa
in
and
mov
or
add
scas
std
dec
lcall
jbe,pt
mov
pop
jb
ja
adc
push
shrb
xor
push
sahf
gs
mov
mov
out
pop
loopne
jne
or
loope
sbb
push
jo
or
movb
icebp
sbb
insb
mov
icebp
inc
or
push
and
lcall
loope
cmp
add
xor
dec
xchg
fildl
stc
dec
push
mov
xlat
pop
into
mov
loopne
xor
jmp
les
int3
xchg
test
mov
pushf
leave
gs
jl
add
xor
mov
push
js
mov
rorl
int3
dec
fsubl
inc
imul
cs
adc
int3
fdivr
mov
bound
mov
and
jle
shll
push
cli
or
xor
sbb
xchg
xchg
dec
push
fwait
add
insb
and
mov
test
out
xor
xchg
sub
cltd
repz
add
mov
mov
mov
ret
popf
jle
inc
xchg
cmp
pop
fwait
sbb
int3
add
std
cmpsb
lods
ds
jge
aaa
pop
cmpsb
or
add
add
pop
jo
hlt
xchg
out
lret
sarl
add
mov
les
test
add
mov
sbb
xchg
stos
daa
scas
jne
les
shr
aam
stos
adcl
add
inc
mov
clc
add
iret
adc
gs
xor
adc
or
pshufw
movsb
add
jp
mov
cli
mov
jnp
mov
mov
adc
mov
inc
sbb
lret
js
outsb
add
sub
cwtl
mov
rolb
xchg
pop
mov
movsl
das
cmovae
jne
cli
scas
repz
pop
sub
call
test
sbb
js
inc
fwait
and
xchg
jne
fcomps
ret
dec
mov
mov
mov
add
sub
fstps
cmp
aad
jmp
popf
push
cmp
xchg
mov
loop
mov
xchg
aad
adc
adc
mov
fcompl
or
dec
sbb
or
scas
xchg
adc
es
popa
sbb
mov
push
pusha
enter
or
dec
adc
cmp
push
ret
xor
stos
movsb
stos
addb
mov
add
cmc
mov
sub
cwtl
dec
ds
mov
cmpsb
lds
movsl
jmp
mov
xor
fisttps
ret
lock
mov
pop
cmp
push
cmp
nop
fmull
aam
sarb
cmp
bound
mov
and
imul
fisttpll
aas
in
jb
scas
pop
lods
daa
fcomp
lock
or
mov
clc
push
int3
movsl
pop
adc
xchg
pop
leave
fwait
lods
movsl
mov
and
sbb
mov
or
stc
fadds
jb
xor
cwtl
dec
icebp
flds
cmc
pop
int
dec
pop
arpl
pop
insl
lret
shl
icebp
mov
mov
ljmp
sbb
and
sub
rcrb
jmp
in
fs
mov
imul
add
pop
sub
jmp
in
out
subl
lret
int
push
dec
aad
pop
or
push
sarl
pop
in
or
aas
xlat
cld
shl
push
xor
and
jge
add
mov
inc
movsl
aad
xchg
icebp
popa
push
cmp
outsb
or
mov
inc
push
lds
call
mov
jnp
mov
mov
js
and
idivb
jne
les
nop
pop
adc
out
imul
jno
popf
add
pop
jbe
les
wrmsr
stos
and
add
orl
xor
xchg
dec
enter
sbb
ljmp
xchg
pop
leave
pop
mov
xor
or
mov
push
adc
insl
add
sub
lods
push
adc
adc
out
sub
clc
inc
inc
fidivs
lods
stos
push
arpl
lar
cmp
mov
cmp
lea
add
movsl
lods
and
mov
pushf
xchg
sbbl
cmp
inc
aad
fsts
pop
fs
fiaddl
ss
add
mov
inc
sub
xchg
sbb
push
lods
jb
mov
cmp
in
adc
lds
imul
std
daa
add
addr16
xor
sti
add
pop
pop
mov
test
inc
addl
pop
mov
cmpsl
aas
outsl
int
jb
xchg
adc
inc
push
outsb
into
jmp
xchg
mov
sarl
stc
mov
pop
aas
jne
repz
icebp
shlb
dec
lcall
pop
sub
leave
cmp
aam
imul
xchg
icebp
cmpsl
mov
jl
mov
jbe
push
cmp
or
mov
xchg
lock
in
aaa
addb
xchg
bound
lock
sbb
cmp
push
cmp
cmp
out
lahf
dec
push
mov
fidivrs
xchg
cmp
inc
out
xchg
repz
push
jmp
push
xchg
int3
sbb
pop
lock
fldl
and
cmc
popf
rcrb
in
data16
movsb
movsb
stos
adc
in
xchg
fwait
ss
cmp
cmp
or
push
inc
jmp
pop
fcomps
jmp
addr16
movsl
movsb
ds
mov
idivl
addr16
fiadds
cli
popf
clc
inc
icebp
cmc
xchg
cmpsb
mov
adc
lock
decb
or
out
adc
xlat
mov
inc
fisubs
inc
mov
fs
pop
shr
pop
lds
mov
out
lods
mov
pop
jl
mov
ret
mov
cli
imul
mov
ds
pusha
cld
xor
push
mov
stos
inc
shr
push
dec
fsts
add
mov
decb
sbb
ss
or
pop
aad
dec
icebp
inc
push
pushf
xlat
loop
mov
ds
sarl
mov
scas
data16
lcall
cmp
fyl2xp1
xor
popf
jno
add
fists
push
cmp
xor
mov
in
js
pop
sub
push
in
push
imul
xor
mov
in
pop
mov
int
jnp
mov
lret
xchg
rorb
jp
sbb
pusha
aas
shr
dec
jp
leave
out
adc
or
addr16
cmpsl
cmp
and
jb
ljmp
jns
inc
ret
cmpsl
js
in
hlt
out
sbb
rorb
cs
pop
cld
or
cmp
idiv
mov
aad
and
xor
pop
fldcw
cli
fildl
subb
xchg
sub
jnp
rol
sbb
push
cmp
mov
cmp
mov
mov
ss
jbe
test
leave
flds
sbb
movl
dec
lret
cwtl
ljmp
in
xchg
mov
mov
xor
ljmp
fldt
lea
inc
lret
mov
xor
popf
jbe
push
ret
scas
rcll
cli
xor
aas
sub
insl
pop
stos
push
ret
imull
mov
loope
popf
fs
add
aaa
mov
lret
or
add
fdivl
mov
mov
test
mov
imull
in
fbstp
cmp
sbb
das
xor
push
stos
sub
pop
inc
rolb
scas
mov
lds
insl
outsl
push
sbb
adc
jl
ret
and
pop
adc
lock
in
movsb
popf
jmp
cld
sbb
stos
jle
xor
add
mov
lods
jle
xor
mov
imul
pop
cmp
cmp
ds
mov
xchg
mov
push
mov
mov
in
loop
cli
sarl
aam
sub
add
andb
popf
testw
jnp
js
incl
lret
cs
and
add
push
test
jl
lcall
xchg
pop
sbb
mov
sub
and
and
lods
or
sbb
repz
or
jp
push
jl
daa
sub
jae
enter
cmp
std
test
repz
dec
jo
jnp
cmp
and
add
imul
cmovns
repnz
ds
sub
lret
push
mov
popa
int
sbb
xor
sbb
add
add
jb
and
sub
stc
fnstcw
cmpsl
and
xor
fisubs
cmp
xor
insl
cmp
cmp
add
cli
xchg
jmp
cmpsb
pop
mov
and
in
or
add
and
hlt
je
sbb
test
cs
mov
mov
or
call
xor
pusha
xchg
cmpsl
adc
xchg
push
test
sub
jnp
pop
filds
inc
popf
mov
and
fwait
cmpsb
in
loop
cwtl
test
mov
mov
inc
and
fiadds
and
jbe
aad
loope
cmp
ret
jo
lea
lcall
lret
jne,pn
cmp
xor
xorl
push
mov
jns
push
popf
bound
sub
hlt
icebp
xchg
jecxz
add
xchg
movsb
fsubrl
sub
mov
mov
pop
jbe
dec
cmp
sub
cs
push
adc
dec
xor
push
cli
add
imul
sti
mov
loopne
pop
int3
push
js
clc
xchg
repz
movsb
pop
cwtl
pop
fstps
je
aaa
xchg
push
je
push
push
cli
out
cmpsb
iret
loopne
in
inc
xchg
or
cmp
imulb
jecxz
push
and
mov
xor
push
or
push
fbstp
popf
mov
mov
lret
cmpsb
cmpsl
cmp
fidivs
cwtl
push
je
inc
stos
es
test
jb
mov
es
test
xchg
xlat
outsb
repnz
je
testb
test
movsl
inc
jp
jae
xchg
stos
mov
gs
es
push
inc
add
fldt
call
repnz
jmp
scas
pop
dec
aaa
or
imul
imul
ljmp
sbb
das
push
xchg
aaa
mov
iret
xor
int3
mov
pusha
jecxz
jb
in
mov
stos
ja
mov
bound
loopne
dec
or
mov
pop
push
jns
mov
add
inc
add
leave
mov
loop
popf
rcrl
xor
add
dec
cmp
cmpsl
mov
lahf
lret
rep
dec
push
jne
gs
jae
insb
fistpll
movsb
pop
fcomi
into
es
inc
ja
lods
sti
adc
add
leave
mov
push
ja
push
shlb
xchg
xchg
xchg
pop
mov
int
sub
mov
es
loope
into
shl
mov
xchg
out
sub
ret
mov
movaps
subb
lcall
and
sahf
rcrb
push
and
or
jno
mov
jb
mov
enter
jl
cmpsl
pop
xchg
lea
leave
xchg
orl
testb
mov
mov
xlat
mov
fcmovbe
mulb
mov
sar
ret
cmc
cmp
jg
or
popf
cmp
xchg
daa
adcb
lds
test
sahf
ss
inc
lods
fstps
arpl
mov
sub
mov
fidivs
cmpsb
outsb
std
into
je
fidivrs
in
pop
and
and
adc
in
dec
loope
andb
sub
test
iret
mov
daa
je,pt
rclb
out
jno
scas
jle
xchg
pusha
sbb
in
sub
das
push
insb
lods
cmp
sub
add
pop
ds
popa
cmp
lret
testb
pushl
neg
mov
pop
in
loope
movsl
loope
lods
movsl
aas
scas
mov
sub
jp
movsb
adc
pop
xchg
adc
dec
mov
imul
and
push
popf
loopne
xchg
jne
in
mov
adc
add
ss
leave
mov
mov
lds
cmp
adc
mov
mov
adc
xor
hlt
and
pop
roll
pop
ret
ljmp
sbb
xchg
mov
push
sub
dec
fmul
orl
pusha
pop
adc
xchg
ret
adc
shll
jecxz
inc
adc
xchg
mov
sarl
or
nop
mov
xor
push
push
jns
pusha
or
xchg
pop
mov
sbb
xchg
and
mov
or
cmp
fldt
pand
pop
adc
jnp
inc
push
ljmp
pop
push
sarl
mov
mov
xchg
pop
xor
insl
or
loop
fidivrs
lods
int3
out
out
inc
lods
push
add
sub
aad
lret
xchg
out
xchg
lods
jo
sub
mov
xorl
mov
jmp
sub
js
mov
cmp
dec
imul
mov
inc
cs
imul
adc
or
icebp
pop
and
lods
jne
mov
and
ret
rcrb
insl
out
out
shl
and
aam
xlat
xor
xchg
leave
lods
icebp
call
test
sbb
push
inc
jo
xchg
pusha
jae
outsb
cli
and
xchg
xchg
nop
in
insb
sub
push
push
fs
or
shrb
push
aas
and
in
inc
push
adc
jnp
lds
test
push
imul
and
movsb
mov
dec
add
cmp
es
mov
push
scas
fisttpl
mov
and
imul
test
js
jnp,pt
mov
mul
sbb
and
aas
fwait
stos
aad
pop
imul
cmpsl
sti
stos
imul
es
adc
jp
sbb
mov
enter
mov
pop
cmp
mov
arpl
std
punpckldq
lret
ljmp
nop
imul
adc
mov
jno
cmpsl
and
push
mov
inc
in
popa
add
adc
loop
loope
aad
loope
out
cld
xor
jno
dec
pop
jmp
xchg
jmp
iret
test
lods
jbe
pop
inc
addb
lcall
xor
mov
call
pop
fadds
hlt
mov
fists
mov
mov
fcompl
jle
int3
popa
dec
adc
lahf
movsl
fcompp
or
push
xorl
push
mov
ret
sti
pop
push
mov
push
pop
test
out
adcb
xor
sub
xor
loope
repnz
gs
arpl
int3
gs
lahf
sub
pop
add
enter
jp
stos
nop
dec
mov
push
mov
mov
subb
push
std
xchg
cmp
pop
or
cld
punpckhwd
dec
ret
in
sbb
cmpsb
subb
xlat
pop
mov
cmp
jne
inc
inc
and
jg
sub
xchg
jl
call
jno
or
mov
sub
push
scas
or
sub
loope
std
xchg
pusha
mov
ret
cltd
jo
sahf
ret
mov
fidivrl
jae
out
dec
mov
fsubrs
das
mov
pusha
out
mov
and
mov
or
std
pop
lods
jg
fisttpl
das
add
mov
mov
xchg
mov
xchg
xchg
mov
aam
iret
jbe
push
ret
cld
shll
loop
xchg
scas
cwtl
imul
sbb
fisubrs
dec
inc
leave
lods
cmp
rcll
jmp
jbe
out
or
mov
jbe
test
arpl
scas
fdivrl
mov
les
les
ja
scas
jns
mov
lds
adc
popf
mov
and
out
sub
or
pop
in
out
pop
mov
lret
sbb
leave
and
aas
int
in
sub
xor
xchg
inc
icebp
mov
sbb
repz
mov
dec
rcl
or
outsb
das
xchg
imul
repz
imul
dec
scas
cmp
jecxz
fistpl
mov
jmp
pop
and
and
pop
gs
mov
adc
aaa
mov
or
pop
clc
push
addb
sbb
sarb
pop
ftst
jae
pop
pop
mov
pop
and
mov
or
popa
outsb
pop
insl
pop
pushf
cs
mov
jne
pop
insl
or
lods
decb
push
pop
jo
out
cli
insb
js
mov
clc
xchg
jne
je
inc
sub
add
std
sbb
pushf
les
fdivrs
xchg
sbb
push
mov
dec
iret
fdiv
inc
push
loope
push
mov
fcomps
xor
fldcw
pop
sbb
dec
xor
ret
cld
pop
xchg
mov
dec
ja
mov
push
rcrb
push
xchg
out
mov
xchg
jl
sbb
movl
subl
dec
adc
rolb
mov
jmp
pop
scas
call
lcall
imul
loopne
pusha
sub
xchg
imul
mov
mov
testb
loopne
mov
pop
inc
les
push
or
or
lods
stos
lea
ret
sbbl
arpl
in
test
pop
mov
loop
sbb
es
jg
push
lahf
sub
in
and
into
pop
cmpsl
sbb
repnz
lock
shlb
cmp
lahf
mov
and
hlt
frstor
fs
jno
jae
mov
pop
or
mov
xchg
adc
mov
call
cltd
jl
pushf
scas
fwait
adc
jg
shrb
int
add
cmp
scas
ss
inc
nop
mov
loope
xor
filds
bound
outsb
sub
loopne
xchg
pushf
mov
cmp
cmp
xor
or
jns
aad
sbb
ds
add
test
inc
nop
cmp
sub
push
mov
iret
leave
lcall
aaa
pop
movsb
jg
lea
push
outsb
push
add
ds
mov
fsubl
xor
sahf
inc
dec
addr16
push
or
push
jo
push
xor
mov
push
daa
push
dec
xchg
into
add
int
mov
fisubrs
mov
mov
call
lea
inc
inc
in
cmp
frstpm(287
insl
das
enter
mov
es
aam
lock
out
mov
inc
jmp
add
cltd
adc
imul
add
sti
outsl
mov
push
inc
imul
sub
int
out
imul
xchg
jno
stc
iret
lock
jp
loope
inc
push
imulb
das
dec
les
push
or
sbb
les
adc
push
sub
dec
inc
cmp
or
mov
arpl
lahf
mov
shll
sub
and
stos
mov
xor
pop
movsb
xor
and
loopne
test
cmp
push
xchg
cmp
out
xchg
mov
jno
jl
xchg
push
add
jp
push
frstor
mov
fwait
subl
call
aam
cmpsl
mov
je
vunpckhps
aad
mov
imul
imul
insb
in
mov
lods
pushf
jmp
stos
add
std
aas
xor
inc
cltd
rolb
mov
lock
imul
shlb
jb
es
pop
jle
cmp
insb
and
cld
lret
lods
add
cli
pop
cwtl
aad
xor
stos
inc
rolb
or
lds
mov
jmp
pop
fs
add
sti
es
jb
in
cmpsb
sbb
cld
mov
jnp
lods
sub
in
frstor
push
popf
dec
call
pop
push
sbbl
repnz
es
xor
jmp
dec
ja
add
pop
mov
mov
push
adc
sbb
stc
ret
mov
mov
jno
into
adc
adc
sub
sub
jl
bound
fimuls
dec
push
out
pop
mov
pop
loop
mov
leave
imul
jl
and
lret
iret
adc
outsb
xchg
ds
xor
add
xchg
sbb
push
stos
imul
mov
jno
addb
div
mov
xchg
jmp
push
lods
cmp
lea
arpl
into
in
mov
insb
out
cmp
cmp
push
jmp
push
in
imul
pop
test
sbb
mov
and
rcl
int
rclb
pop
mov
lret
out
push
arpl
jo
fidivrl
sbb
roll
adc
pop
push
and
sub
sbb
xchg
ficomps
adcb
pop
pop
mov
mov
push
daa
mov
xor
out
ret
push
scas
cmp
adc
jecxz
ret
loope
pop
jle
sbb
mov
mov
xchg
or
insb
pusha
push
es
jmp
out
push
out
inc
daa
add
dec
out
hlt
sbb
xchg
imul
lcall
aas
xchg
jmp
mov
cmp
sarl
add
popa
push
incl
arpl
sub
push
dec
test
push
ja
ror
insl
inc
sub
mov
mov
lret
mov
jge
das
fs
xor
test
inc
test
out
dec
les
push
sbb
mov
shlb
and
push
pop
ljmp
inc
data16
outsl
pop
movsl
inc
xchg
sahf
cmp
jmp
xchg
jne
jmp
jge
pop
lods
enter
imul
in
cmp
pop
int3
ja
sahf
sub
ret
scas
mov
ret
imul
jp
imul
aaa
xor
push
and
fcomp
xlat
popf
int
rolb
xchg
in
xchg
faddl
rclb
sbb
sahf
test
mov
xlat
mov
or
fstl
cmp
movsl
or
idiv
nop
aas
lock
cmpsl
jge
push
insb
cmpsl
push
adcb
int3
ror
mov
rolb
mov
cmp
add
out
int
lret
bound
les
mov
dec
out
aad
cli
mov
mov
fisubrs
iret
ds
dec
int
stc
jg
sbb
dec
adc
mov
das
jbe
pusha
pop
js
or
out
mov
out
mov
jmp
jl
das
gs
loope
or
in
or
and
add
cltd
js
mov
into
jb
jns
out
xchg
pop
dec
mov
mov
lahf
xor
push
mov
in
stos
popa
sbb
imul
in
arpl
cli
lods
mov
lahf
aam
cld
and
add
imul
addr16
jns
fsub
mov
lods
mov
cltd
out
xchg
sub
inc
cmp
cs
jle
popf
push
scas
cwtl
add
out
ret
inc
cmpb
lahf
test
sbb
xor
testl
out
xor
cltd
xor
fcmovne
mov
loope
or
mov
repz
fidivs
push
seto
lcall
adc
roll
pop
popf
push
xor
enter
jge
jns
lahf
add
push
xchg
scas
pop
push
adc
scas
frstor
sub
mov
clc
test
cmp
xor
push
xor
out
inc
jae
jb
gs
stc
sbb
movsl
mov
sti
js
xor
push
ret
pop
ljmp
cvtps2pi
dec
icebp
das
xchg
in
cmp
push
and
outsb
push
dec
loop
int
push
fld
mov
jnp
lea
lcall
mov
not
adc
mov
mov
dec
loop
sahf
es
cmpsl
addl
pop
jno
data16
sti
or
mov
aaa
adc
cmp
lret
and
imul
adc
lahf
vpmacsdql
test
cmp
frstor
sbb
test
mov
cmp
addr16
es
insl
test
cmpsl
pop
les
out
subb
xchg
add
inc
idiv
pop
push
cmp
gs
ljmp
iret
jg
xor
add
inc
xor
aad
jo
cmpb
fnstenv
jnp
insb
daa
imul
jo
mov
stc
lret
pop
mov
insb
movl
lock
add
xor
test
mov
lahf
aas
int3
in
pop
pxor
out
aas
iret
jns
gs
xchg
and
adc
ret
add
inc
cmpsl
bound
jmp
gs
repz
sub
push
sub
xchg
mov
mov
fcmovnb
fucom
in
xor
dec
jl
inc
mov
or
shr
cwtl
out
stc
and
clc
push
daa
lcall
and
push
xchg
mov
jo
push
aam
xchg
inc
and
aad
inc
lods
lock
scas
das
leave
dec
add
mov
or
call
sar
test
xchg
mov
push
out
xchg
popa
imul
std
push
cs
jp
push
in
imul
push
ret
idivb
mov
sbb
lea
sbb
xor
lods
push
push
das
inc
sbb
xor
pop
out
xchg
and
aam
int3
mov
sarb
mov
pop
aaa
aaa
mov
shlb
sbb
lea
es
pop
lret
sbb
jnp
ficoms
cmp
clc
cmc
mov
es
fildl
xchg
sbb
ds
into
daa
mov
scas
imul
testb
cmp
dec
inc
dec
pop
cmc
sbb
fnstsw
mov
int
cmpsl
mov
aad
js
mov
in
jno
adc
insb
neg
and
daa
stos
mov
xchg
cltd
divb
push
int
pop
fdivp
push
imul
mov
inc
jno
jno
pop
cmc
test
lret
movb
incb
inc
insb
and
mov
in
inc
mov
pop
inc
mov
push
mov
mov
or
popf
fdivs
add
add
xchg
and
repz
idivb
sti
loope
sbb
mov
fimuls
in
cltd
xchg
mov
movsb
int3
pushf
or
inc
sub
rcrb
push
adc
cmpsb
imul
lods
jo
sub
mov
push
popa
mov
inc
frstor
pop
imull
cli
inc
mov
lahf
mov
mov
xchg
adc
sbb
adc
mov
push
int
mov
mov
pop
scas
icebp
orb
adc
push
dec
mov
lret
sub
es
jecxz
mov
and
fldl
lret
enter
mov
add
mov
pop
mov
mov
outsb
sbb
pop
dec
insb
pop
icebp
clc
insl
fwait
add
pop
pand
pop
jbe
clc
jns
jle
stos
pop
lods
dec
mov
jno
stos
outsb
fnstcw
mov
xchg
int
sbb
movsl
xor
xor
ret
lcall
in
in
push
xor
xor
cmp
sub
lods
repz
aas
and
outsb
ds
pop
call
lods
out
sarl
dec
mov
push
cmp
dec
dec
pop
adc
mov
push
sbb
dec
mov
mov
ds
lods
adc
xor
sub
add
sbb
inc
shrb
fst
jmp
insl
cld
mov
cmpsb
fsubrl
add
jp
push
rcll
lahf
in
stc
mov
mov
out
push
push
inc
scas
js
js
out
or
jae
je
out
enter
jns
inc
out
push
push
inc
out
xchg
sbb
in
mov
nop
add
cltd
lcall
cld
jle
adc
rcr
cmc
pop
jl
shll
enter
cmpsb
or
jl
cltd
in
cs
inc
dec
sub
mov
in
mov
pop
imul
rcrb
cmp
lea
pusha
addr16
cld
cs
out
or
sbb
cmpsl
cli
les
les
dec
xor
pop
out
mov
sub
xor
imull
mov
fsts
xor
clc
or
or
inc
xchg
jmp
repnz
aam
ja
adc
mov
clc
ja
xor
fs
stos
xchg
inc
loop
sub
add
adc
fs
int
xchg
fsubrs
dec
pop
lahf
xchg
fadd
inc
lea
clc
adc
push
lods
je
das
ret
cmp
push
pop
or
jo
or
sbb
xor
mov
mulb
sub
mov
andb
and
jbe
mov
sub
sub
loope
cs
arpl
fs
sbb
and
xchg
mov
js
ds
pop
xchg
cs
ja
mov
shll
ret
mov
outsl
mov
mov
loopne
mov
das
dec
adc
ja
add
xchg
fldl
cmp
inc
push
mov
and
idivl
imul
outsb
test
insl
js
mov
push
mov
cltd
arpl
pushf
mov
mov
out
roll
dec
fimull
into
gs
out
mov
push
pop
in
test
movsl
addr16
nop
adc
imul
mov
add
mov
xchg
insb
dec
loopne
cwtl
popl
andl
jmp
int
mov
jle
aad
inc
jecxz
lods
mov
je
mov
sub
mov
push
daa
sbb
sub
cmp
into
insl
inc
addr16
jle
or
mov
and
jmp
jb
add
or
inc
aaa
jo
mov
popf
push
ja
push
je
mov
enter
out
jbe
les
fs
jg
dec
dec
xor
nop
mov
bound
mov
cmpsb
jno
stos
fisubrl
lea
jnp
push
mov
lods
out
jnp
xchg
bound
aad
setnp
xor
dec
clc
sub
das
enter
and
xor
push
sub
or
into
sti
dec
push
mov
add
push
mov
sarl
ficomps
cmp
dec
or
fcoms
lock
sbb
fcmove
into
sbbb
or
jae
add
sbb
inc
mov
and
mov
sbb
nop
inc
or
jbe
icebp
push
sbb
mov
stos
insb
push
jecxz
fcompl
xchg
jge
jae
fsts
inc
add
mov
pop
add
xchg
aas
or
popf
add
xor
scas
push
nop
lcall
punpckhwd
out
cld
jmp
aam
push
mov
add
mov
xor
or
in
mov
out
pop
clc
imul
lds
std
cmpxchg
lret
mov
ja
xor
in
mov
fstpl
xchg
fbstp
adc
push
std
xchg
and
cmp
mov
pop
dec
and
dec
idivl
jno
mov
pop
push
mov
pop
sub
sub
mov
mov
std
imul
cs
imul
addl
ret
shl
jp
daa
ljmp
inc
inc
jg
fcomi
rolb
pop
lock
and
adc
insb
mov
sub
mov
sbb
mov
int
aas
mov
push
fidivrs
xor
pop
adc
mov
fcmovbe
adc
in
aas
adc
jp
popa
jecxz
scas
in
out
pop
adc
fld
test
cmpsb
jb
mov
in
cmp
nop
nop
xor
into
sub
sbb
sbb
jno
and
cmp
lods
inc
sbb
cmpsb
sbb
dec
dec
in
sub
xchg
xchg
leave
lea
inc
iret
inc
pop
adc
movsl
aad
aam
or
loop
bound
mov
pop
bound
mov
xchg
jae
push
stc
jl
mov
loopew
shlb
filds
lea
into
test
div
push
or
push
lret
mov
mov
fbstp
sti
mov
pop
lods
mov
xchg
pop
jge
pop
gs
pop
std
mov
push
adc
adc
ljmp
fnstcw
loope
adc
loop
loopne
and
mov
mov
xor
mov
in
sub
cmpsl
add
pusha
sarl
ss
add
jne
lahf
push
pop
cmp
cmpsb
lds
jne
xor
mov
fisubrl
dec
mov
lcall
cltd
mov
daa
adc
rcll
mov
mov
ljmp
adc
out
mov
sbb
xchg
or
mov
test
pop
mov
in
mov
add
std
adc
inc
aas
or
call
movsb
in
cmpsb
or
movsb
xor
jmp
cli
negl
dec
into
jmp
or
imul
out
xchg
test
int
popf
sub
or
mov
mov
and
add
dec
out
mov
cs
mov
lret
fldl
clc
iret
adc
pop
inc
inc
hlt
push
cmp
mov
cmpsb
bound
mov
xor
mov
decb
add
add
add
ds
xchg
std
push
pushl
bswap
aaa
aad
test
jg
mov
test
sti
mov
data16
test
insb
mov
ja
shrl
sarl
incl
jle
and
xchg
mov
mov
addr16
push
addr16
fdivl
mov
gs
sub
stos
in
jne
fstps
xchg
cmp
inc
addr16
xlat
std
lret
fucomp
pusha
arpl
iret
lods
pushf
lea
or
adc
leave
pop
sub
ds
jl
mov
popf
jb,pn
lcall
sbb
loopne
cmpsb
pop
stos
lds
in
add
mov
mov
xor
stc
lcall
inc
in
pop
dec
push
xorl
add
mov
cltd
rcrb
int3
roll
gs
xor
test
mov
lods
fmul
add
ss
cmp
ret
lahf
jp
aam
in
mov
mov
test
jge
fisubl
icebp
fsubr
pushl
shlb
sbb
leave
cmp
insb
outsl
cmp
sbb
int3
outsb
push
inc
gs
inc
push
inc
mov
lds
push
mov
mov
xor
iret
pop
pop
adc
jl
add
pushf
mov
divl
aas
int3
xchg
out
out
push
add
push
ds
mov
popf
into
jge
pushf
adcl
aaa
das
shl
popa
sub
test
into
sbb
xchg
and
insb
mov
pminub
stos
xchg
lods
jmp
sub
int3
ja
pop
mov
xchg
mov
inc
push
adcl
les
lea
vmread
lcall
dec
sbb
ret
push
xlat
out
cmpsl
and
daa
lods
shl
std
enter
adc
sub
popa
adcl
insb
ret
push
inc
rorb
outsl
xchg
fstpt
hlt
xor
and
jo
outsb
sub
nop
js
out
mov
gs
rclb
inc
stc
test
pop
stos
sti
in
mov
push
pop
icebp
aad
or
and
sub
out
xor
cli
push
cs
mov
repnz
std
inc
stc
sub
ret
add
rorb
lods
repnz
lret
inc
xchg
mov
mov
push
and
pop
les
fs
iret
je
lret
fcomps
clc
or
mov
inc
iret
xchg
xchg
enter
or
inc
int3
or
mov
call
pop
or
rorb
lret
ja
pop
pop
aas
cmp
shrb
rcrb
lds
movsl
pop
mov
push
ret
rcr
jg
popa
fbstp
mov
jno
lcall
add
jg
test
dec
cmpsb
cltd
xchg
out
add
sub
mov
sub
mov
fidivrl
popf
fcompl
movsb
test
cmc
test
insb
iret
ja
outsb
jecxz
mov
jnp
ss
sbb
call
dec
js
pusha
add
or
mov
sub
inc
in
pop
push
jbe
sahf
pop
movsb
lcall
std
sbb
adc
iret
mov
dec
jg
pop
insb
ficomps
inc
mov
loopne
xlat
xor
pop
push
fs
enter
fisubrl
addb
inc
shll
mov
outsb
dec
inc
test
scas
das
dec
lods
aaa
xchg
sbb
fildl
negl
fcomi
movsl
neg
and
xchg
hlt
pop
jns
ds
mov
pop
and
call
cs
push
inc
jno
add
repz
dec
jne
int
int3
jge
push
addr16
mov
mov
test
or
mov
ss
iret
sub
ret
cmp
insl
xchg
dec
mov
js
xchg
and
push
and
sub
mov
jne
shrl
xchg
adc
lds
test
daa
adc
push
adc
shl
cmp
jg
mov
cmp
dec
cmp
sbb
aas
stos
lock
lret
sti
pop
jecxz
xchg
mov
mov
sbbl
xchg
mov
sub
jbe
test
or
out
push
sbb
mov
lret
mov
pop
fstl
mov
arpl
xchg
mov
inc
mov
xchg
cmpxchg
pop
fcompl
nop
sub
in
lret
lods
lods
test
lods
sbb
xlat
movsl
or
xor
push
ficoms
and
test
sbb
pushf
sbb
xchg
ret
jo
scas
xorb
xor
out
orl
movsb
cmc
fisttpll
sbb
jmp
or
pusha
and
test
jmp
jmp
cmc
sub
ret
mov
jno
sahf
xchg
dec
and
loop
enter
lea
les
mov
hlt
test
call
test
lret
popf
fnsave
movsb
aad
cli
popa
xor
addr16
or
rcrb
in
sub
jno
clc
jns
int
jbe
stc
das
mov
xor
sahf
loop
mov
sbb
sbb
orl
lea
xchg
rolb
push
in
mov
mov
cld
cwtl
fidivrl
test
add
std
aas
in
sub
popa
jnp
sahf
mov
push
add
sub
add
sub
lcall
adc
cmc
sub
clc
mov
jns
mov
or
or
mov
mov
fisttpl
mov
dec
pop
adc
out
inc
sub
punpckhwd
hlt
jl
or
inc
push
into
jle
jnp
inc
or
dec
test
lret
inc
fs
out
cwtl
and
fistps
fdivs
bnd
pcmpgtd
jne
js
xor
adc
andl
sub
mov
popf
dec
pop
inc
bound
adc
mov
inc
cmpsl
push
jl
test
aas
fiadds
inc
addl
dec
lods
or
inc
sub
movsl
jnp
mov
test
mov
loopne
into
pop
test
inc
repz
xor
ret
bound
add
jbe
loope
sub
mov
xor
jbe
fstps
stc
xor
jl
stos
stos
mov
sbb
fiadds
ret
gs
xor
push
lock
jecxz
sbb
sbbl
fdivrl
adc
imul
cmc
lock
enter
jbe
xchg
jg
cmp
addr16
arpl
repnz
mov
call
pop
add
pusha
popa
mov
dec
pop
ds
scas
mov
jb
testb
repnz
aas
mov
xchg
rcrb
xchg
push
pusha
std
pop
and
test
sub
mov
mov
add
xchg
pop
cmp
iret
bound
add
pop
ss
outsl
sti
cmpsb
shrb
std
in
pop
gs
or
sub
xor
sbb
xor
ljmp
mov
xchg
pop
idivb
pop
lea
inc
call
loop
jmp
lret
ffreep
add
scas
clc
test
stc
or
pop
and
jle
test
lock
mov
add
inc
xor
pop
aam
mov
jnp
adc
add
sbb
imull
icebp
jl
and
mov
popf
scas
aam
test
xchg
cmp
lret
out
push
jle
push
arpl
push
cwtl
add
cmp
cld
aad
test
loop
sbb
imul
test
mov
fwait
repz
popf
iret
je
push
gs
outsl
call
xor
das
pop
push
dec
movsl
mov
add
aam
adc
jle
mov
out
mov
mov
mov
cmp
jg
mov
lock
sbb
arpl
push
dec
out
and
scas
test
lea
sub
cmp
aaa
shl
xchg
mov
push
test
imul
mov
push
mov
add
xchg
add
mov
and
or
mov
inc
pop
adc
pop
xchg
popa
shll
pop
dec
popf
aad
data16
xor
fisubrl
call
jo
add
dec
mov
test
imul
fsubs
lret
scas
xor
jge
add
negb
clc
test
mov
xor
xor
pop
inc
lds
addb
jle
shlb
dec
pop
sub
cmc
ret
adc
into
aad
mov
js
pop
in
jnp
sbb
adcb
sahf
ret
jp
fwait
negl
ret
mov
insb
fnstenv
jp
mov
push
and
or
mov
mov
and
cmp
xor
in
in
insb
cmp
test
pop
dec
jbe
jecxz
mov
popa
mov
mov
lds
cmp
fmull
sub
iret
data16
addr16
jb
jne
notl
test
jnp
outsl
pop
pop
dec
mov
xor
sbb
or
stc
addr16
inc
pushf
sub
into
iret
stc
sar
testb
aad
lds
xlat
insl
je
incl
lcall
test
jns
cmc
repnz
sub
test
push
mov
outsl
popf
mov
mov
mov
xchg
inc
in
push
and
pusha
jg
loope
xor
hlt
sub
popa
and
mov
mov
aad
enter
popa
adc
sub
insb
dec
mov
push
jle
sarb
jns
sbb
cld
push
pop
daa
outsl
icebp
xchg
sbb
cs
lahf
mov
outsl
inc
xchg
pop
and
xor
xchg
adcb
shlb
imul
lea
notl
push
das
and
aam
andl
sub
rclb
cld
in
ds
daa
int
push
pop
aas
xchg
push
sbb
xchg
xchg
jecxz
mov
out
aad
insl
mov
mov
add
jns
push
dec
mov
cmp
ds
addr16
dec
daa
inc
cs
sarb
jb
adcl
das
sub
out
xchg
mov
dec
ja
push
cmp
jns
adc
popf
aam
dec
xchg
jno
mov
daa
xchg
mov
in
testb
outsb
sub
cli
push
call
jge
xchg
fistpll
mov
push
mov
push
jno
dec
roll
outsl
adc
xchg
test
loopne
adc
inc
or
aas
rorl
das
sarb
push
shll
lds
inc
fs
sub
pop
imul
test
mov
mov
addl
inc
mov
orb
dec
sub
mov
cmpsl
mov
aam
cmp
sub
sbb
mov
ret
imul
sub
xlat
in
iret
in
pop
test
push
or
cs
push
int
add
decl
xor
pop
mov
xlat
lods
ds
jnp
jmp
xchg
mov
adc
insb
sbb
pop
inc
fisttpl
add
pmuludq
and
adc
addr16
xor
mov
cli
in
mov
or
addr16
out
inc
mov
cmpsb
push
sbb
pop
stos
inc
lds
inc
cmpsb
int3
in
shrl
scas
mov
in
dec
insb
sbb
outsl
cld
add
xor
insl
pusha
scas
faddl
loopne,pt
add
jl
dec
insl
push
or
mov
or
jg
dec
dec
cmp
in
or
mov
cwtl
aad
mov
mov
xchg
mov
mov
int
mov
popa
jmp
sbb
mov
roll
out
sbb
rorb
and
mov
and
mov
ficomps
jmp
mov
lcall
sbb
xchg
jmp
icebp
jg
aas
sarl
sbb
out
les
fnstsw
inc
cmp
mov
mov
add
mov
xor
int
mov
ds
push
mov
jmp
mov
je
jp
mov
scas
ret
gs
push
sub
or
jae
sub
jae
or
test
stc
js
loope
xor
inc
cmp
mov
mov
jbe
loope
xor
sbb
hlt
pop
neg
into
int
pop
or
inc
push
loopne
arpl
jge
inc
stos
ror
mov
mov
jecxz
xor
int
cmpsb
dec
or
sbb
push
in
lods
cmpsl
push
call
xor
xchg
or
fxam
es
popf
mov
mov
popf
in
bound
ljmp
add
daa
jb
in
xchg
les
repnz
aas
xchg
call
inc
test
mov
insb
or
icebp
in
fimuls
inc
pop
dec
std
lret
sti
lock
mov
cltd
lret
not
sbb
dec
jge
aad
imul
push
scas
mov
cmc
mov
dec
ret
add
mov
push
popf
insb
test
inc
jns
jnp
int3
js
mov
out
sub
ljmp
outsl
and
adc
cwtl
out
xor
inc
sbb
inc
popa
add
cltd
push
add
or
mov
je
adc
test
and
out
cmp
and
pop
and
mov
enter
aaa
lock
test
push
jge
scas
cmp
aam
inc
jge
scas
sub
data16
aad
dec
or
and
mov
mov
cmp
inc
dec
jnp
imul
inc
pop
xchg
cmpsl
div
pop
div
mov
shl
xchg
insb
lret
mov
mov
mov
dec
andb
fists
xchg
mov
xlat
push
xchg
hlt
jecxz
mov
ror
outsl
inc
xor
test
ja
push
cmp
mov
add
mov
add
mov
mov
addr16
in
and
push
je
sub
js
out
jb
lahf
dec
xchg
and
testb
xchg
adc
mov
fcomip
pusha
jecxz
aaa
cmp
insl
inc
in
movsl
jmp
push
lahf
push
ret
sbb
adc
xchg
pop
and
inc
dec
mov
icebp
sub
dec
lcall
fadds
repz
mov
pop
inc
cmp
or
sti
jge
push
in
and
arpl
xor
les
mov
and
js
stc
rol
xlat
int
mov
pop
cmpsl
dec
scas
dec
arpl
cmp
insl
inc
sub
inc
pop
ljmp
sbb
dec
dec
mov
mov
aas
dec
paddq
jge
flds
mov
mov
inc
push
pop
xor
cmp
pop
call
xor
imul
mov
int3
jbe
mov
insl
inc
in
mov
or
jb
xor
push
clc
pop
jp
fnstenv
or
ljmp
jno
cmp
lds
daa
call
cld
mov
lcall
xchg
jg
and
ror
fisttps
rolb
nop
dec
inc
lea
mov
cmp
jge
mov
jecxz
or
into
dec
movzbl
xor
fsub
fs
cli
lret
mov
insl
pop
lret
out
jno
dec
xchg
jae
lcall
scas
push
mov
mov
or
xor
sti
ds
lods
scas
mov
xchg
push
mov
outsl
cmpsb
or
jae
dec
mov
xchg
and
jns
mov
dec
inc
cmpl
cmp
clc
xorl
insl
xchg
jae
jle
dec
lea
js
loopne
push
dec
inc
outsl
sub
scas
fldl
in
lods
arpl
jl
out
sub
std
sbb
inc
stos
push
xchg
xchg
fadds
hlt
jp
imul
mov
jne
sbb
lods
stos
sbb
repnz
es
push
and
cmp
roll
dec
push
lahf
pop
push
sbb
pop
xchg
dec
cs
scas
jno
sub
in
inc
fdivrl
popa
lret
movsb
mov
lods
repz
sti
mov
rorl
and
ja
ljmp
fmuls
pushf
daa
sub
out
test
xor
scas
dec
outsl
cmp
and
mov
xchg
stc
dec
lret
mov
xchg
insb
shrb
sub
out
jge
or
mov
movsb
mov
aam
jo
adc
pop
rcl
inc
jae
inc
out
xor
lods
jmp
loope
fstps
aaa
inc
lods
pop
inc
ss
mov
xor
hlt
mov
lret
stos
aad
and
mov
out
and
lret
popf
jl
push
leave
and
jmp
shrb
aam
jbe
mov
mov
loop
iret
lcall
pop
adc
inc
ss
in
xchg
in
lock
fcoms
fistps
movsl
sahf
adc
adc
call
mov
lret
sub
cmc
lret
ljmp
push
jae
mov
adc
mov
fwait
adc
xchg
pushf
rolb
aaa
push
out
pop
rcll
jbe
pop
call
cltd
jmp
mov
jns
mov
mov
jno
sahf
nop
xor
pushl
lods
lods
xor
jne
mov
mov
sahf
pop
inc
in
in
push
popa
sti
and
pop
xchg
pop
clc
mov
es
into
mov
loope
aad
mov
pop
arpl
push
lods
adc
cmpsl
pop
mov
xor
jl
shl
cli
pop
jae
fcoml
or
ret
stos
pop
dec
sbb
decb
mov
stos
xor
sbb
test
add
push
dec
in
sahf
jl
push
add
mov
addr16
inc
mov
push
cmpsb
mov
xor
lock
push
pop
dec
and
test
push
xchg
in
out
bswap
aas
mov
lret
pop
clc
leave
push
out
dec
xor
pop
mov
xor
ffreep
inc
add
adc
insb
dec
xlat
sub
push
add
inc
pop
dec
dec
jns
add
xchg
jmp
xor
les
push
inc
int3
sbb
aad
lcall
ret
test
daa
or
mov
push
dec
cmp
in
mov
aad
aaa
xor
xchg
jp
jl
lret
out
aam
mov
pop
mulb
mov
cmp
push
arpl
je
xor
sbb
xchg
adc
iret
cmpb
pop
sub
xor
jp
movsl
push
lcall
cmp
aaa
js
jbe
fnstcw
dec
push
cli
inc
lds
and
test
pop
mov
mov
adc
pop
sbb
inc
cli
ljmp
std
out
fs
test
dec
xchg
fisttps
ljmp
inc
jbe
test
jl
sub
lods
js
pop
adc
xchg
loop
push
and
cmp
dec
shrl
hlt
iret
leave
lcall
jl
and
std
sbb
mov
test
adc
rcrb
lahf
jge
loop
mov
dec
aaa
in
aam
or
add
jle
inc
xchg
popl
es
scas
xchg
call
cmpsb
fisubrs
cmp
and
icebp
aam
push
inc
imulb
fs
into
push
mov
xor
das
xlat
ret
push
sti
out
jecxz
xchg
outsb
je
popf
pop
addr16
out
xorb
sti
into
ret
arpl
sbb
mov
out
sub
cmp
cmp
adc
aam
stos
sbb
jg,pt
cmpsb
xchg
inc
inc
test
fwait
sbb
jo
add
nop
push
sbbb
lock
adc
adc
xchg
mov
insb
ja
shrl
add
iret
adcl
pop
mov
shlb
ds
push
jp
xchg
add
mov
xchg
aam
movsl
mov
dec
and
fisubl
fwait
dec
xchg
adc
movsb
ficoms
outsl
add
mov
sbb
xchg
lock
enter
dec
and
pushl
cld
lahf
cmpl
cs
dec
inc
or
xor
mov
mov
orb
arpl
add
and
jbe
in
lcall
addr16
cmp
in
ss
sbb
lods
xorb
or
js
sbb
sub
adc
aad
repnz
insl
jne
lods
je
orb
and
xor
cmpsb
pop
push
or
rorl
fiaddl
addl
out
xchg
jno
imul
cld
pop
add
lds
mov
mov
icebp
xchg
daa
pop
int3
addb
addb
lods
int3
jmp
dec
dec
mov
ljmp
sub
mov
les
repz
wrmsr
cmp
scas
xchg
movsb
ret
mov
in
jo,pt
pop
subb
mov
mov
jmp
cmpsb
outsb
sbb
pop
or
fstl
test
inc
test
pop
rol
or
addl
insl
cmp
push
aad
aam
xchg
mov
sub
sbb
jmp
xchg
jl
inc
push
xchg
xor
cmp
xchg
mov
movsl
mov
add
and
arpl
es
add
stc
rolb
sub
insl
arpl
xor
mov
add
inc
inc
cmp
push
cmpsl
push
adc
lods
jmp
xor
mov
repnz
mov
test
adc
sbb
test
mul
test
pop
add
add
mov
mov
gs
cltd
cmpsl
mov
ja
das
shll
inc
idivl
idiv
insb
test
or
push
jo
cmp
xchg
sub
and
es
mov
mov
pop
shlb
fidivrl
jmp
lods
int3
mov
out
cmp
dec
fcomip
xchg
call
leave
pushf
fsubs
fdivs
fcompl
pushf
cmp
cmp
repnz
adc
lods
sbb
sti
ss
push
jl
inc
aaa
lahf
mov
mov
ja
ja
mov
in
adc
adc
dec
in
sbb
ljmp
lods
lahf
jg
pusha
shll
cmpsl
loop
fs
cmp
push
ds
dec
dec
clc
imul
test
mov
lahf
adc
add
dec
or
and
jl
sahf
jge
shlb
faddl
dec
incb
jmp
push
mov
jge
or
push
and
ret
inc
rcll
les
das
aas
add
xchg
inc
movsl
xor
jbe
fldenv
jecxz
dec
in
aas
mov
in
fcmovu
pop
sbb
push
add
fstl
cmp
movsl
pop
in
pop
xchg
stos
mov
cld
outsb
stos
pop
push
cmp
pop
cmp
pop
lock
enter
or
push
outsl
xor
test
or
jecxz
and
das
repnz
mov
xor
ret
sub
popf
push
mov
mov
repnz
arpl
pop
ljmp
or
sbb
das
jmp
push
lds
mov
mov
scas
popf
mov
push
dec
xor
notb
sub
jo
and
adcb
icebp
or
cmp
cld
and
out
test
jae
sub
xor
mov
sub
es
cmc
call
cmpsl
arpl
aaa
jmp
and
cmp
pop
aaa
insl
paddb
fs
mov
inc
jmp
jge
jle
mov
in
pop
jnp
dec
andl
jle
mov
push
cmp
and
and
and
inc
insl
lods
call
sub
push
push
ljmp
out
mov
sbb
out
sahf
sbb
mov
mov
xor
cmp
and
or
adc
jb
in
xor
xchg
movsl
cld
aaa
jmp
outsl
fisubrs
ja
movsl
xchg
add
setg
fnstcw
jo
test
jecxz
mov
lock
sbb
icebp
push
and
faddp
inc
mov
pop
push
cmp
fistpll
in
movsl
scas
imul
fstpt
mov
mov
sbb
nop
ret
push
add
cltd
xor
mov
stc
mov
lock
jnp
les
jmp
cwtd
jg
xchg
and
jno
daa
add
insl
xchg
mov
push
hlt
cmp
imul
stos
and
mov
lods
pop
ljmp
in
lcall
mov
cmp
xor
adc
or
fdivl
in
in
and
sarb
mov
xchg
jnp
cld
or
add
push
cmp
mov
pop
push
mov
pop
out
stos
rolb
ljmp
fsubrs
dec
and
clc
fdivs
insb
jns
or
hlt
ror
adc
loopne
sbb
xchg
sbb
dec
mov
cmp
mov
mov
js
jle
or
inc
outsb
ret
and
add
xlat
ja
lret
sub
dec
pop
mov
sub
rolb
cmp
or
xchg
inc
xchg
mov
insb
pop
mov
mov
stc
dec
pushf
sti
test
sub
stc
mov
and
push
sub
mov
sti
push
inc
fstps
maxps
cwtl
out
test
into
jns
sub
xlat
dec
cmp
cmpsl
xchg
fs
fcmovne
fadd
cmpsl
xchg
adc
ja
jmp
adcb
inc
mov
push
pop
jno
fildl
jle
sarl
mov
sarb
pop
push
aaa
cmp
jg
inc
ret
outsl
inc
call
lahf
cvttps2pi
fnstenv
xchg
jae
mov
fwait
jg
dec
mov
cmp
cld
push
mov
pop
mov
aas
shrl
into
mov
pusha
jg
mov
or
sbb
loope
into
pop
pop
xor
and
and
icebp
iret
push
icebp
fwait
pop
sbb
imul
test
add
sub
mov
push
inc
loope
sub
and
or
data16
push
or
ss
lea
imul
add
aaa
scas
lahf
iret
adc
jb
cmpsb
dec
das
mov
push
cmpsb
push
inc
pop
cmp
stos
add
cmc
lret
movq
popa
stos
test
dec
push
andb
and
push
iret
shlb
loop
addb
idiv
xor
mov
mov
mov
sub
iret
adc
xor
pop
add
fcomps
fs
jbe
aas
sti
icebp
push
sub
and
out
sahf
dec
imul
in
jecxz
in
daa
sbb
inc
xor
out
or
gs
and
add
push
cmp
cmp
pop
mov
mov
push
mov
in
adc
decb
out
sub
mov
jne
or
mov
sub
and
mov
out
lods
push
jge
mov
in
sub
sbb
jecxz
sub
push
xorb
adcb
push
xlat
in
mov
in
dec
mov
insb
mov
loop
jl
sbb
mov
push
lods
pushf
jo
fs
icebp
lahf
sbb
mov
aad
and
dec
icebp
xchg
lock
rol
adc
gs
or
xor
mov
pop
xlat
mov
cltd
cld
adc
mov
xchg
cli
mov
add
gs
add
repnz
bound
jle
js
push
pusha
ljmp
shrl
mov
sub
clc
cwtl
push
pop
rol
test
insb
adc
pop
ret
pop
add
test
ds
xor
dec
iret
adc
pop
subb
push
inc
push
fmull
mov
pop
mov
fwait
jae
push
pop
jo
cmp
adc
dec
mov
roll
adc
mov
mov
push
mov
movsb
ret
jbe
dec
jbe
cltd
test
xchg
xor
cmp
bound
mov
ljmp
and
jp
dec
enter
clc
outsl
pop
pop
adc
add
sahf
dec
rol
inc
sbb
rcrb
xor
push
cltd
lcall
mov
fmuls
cmp
xor
and
loop
setnp
inc
pop
insb
loope
push
stos
mov
or
fldenv
cwtl
lahf
movb
xor
pop
test
dec
xchg
dec
cmp
out
pop
and
push
cmp
sub
jp
pop
jo
test
xchg
xor
fistpl
les
stos
xor
xchg
dec
test
mov
dec
xchg
repz
or
in
stos
in
popa
shlb
mov
test
lds
jmp
or
in
in
int
std
and
push
stc
push
jno
out
dec
fnstsw
lods
popa
ja
movsb
add
add
sub
or
or
xchg
xor
or
push
add
das
lds
push
jb
mov
scas
int3
sbb
rcrb
sub
push
sbbl
cmp
lret
mov
iret
xchg
std
in
test
outsb
fistpl
fsts
pop
adc
outsl
adcl
mov
aaa
insb
popa
mov
mov
mov
xchg
je
ja
jmp
jo
outsl
fwait
int3
xchg
mov
pop
arpl
and
xor
sti
divb
sub
sarl
stos
hlt
mov
ret
lret
or
ficoml
or
push
in
add
call
mov
lret
nop
dec
cmpsl
leave
mov
xchg
mov
mov
popa
test
daa
cltd
pop
add
jnp
mov
and
mov
movsb
push
iret
and
xor
inc
add
xchg
pop
into
mov
dec
dec
or
sbb
jmp
repz
push
sub
mov
adc
adc
addr16
cmp
add
test
xchg
xchg
pop
or
pop
inc
inc
pop
mov
imul
jp
jns
jge
lret
push
rorl
push
mov
cmp
dec
push
test
push
fwait
popa
mov
push
inc
testl
stos
das
lock
pop
inc
and
clc
popf
xlat
mov
fs
xchg
push
stc
into
mov
out
jg
popf
imul
fbld
scas
fnstenv
add
or
lcall
lret
push
mov
push
dec
or
leave
pop
mov
mov
mov
add
sahf
jp
jae
xchg
sub
fistl
cs
mov
out
xlat
inc
dec
dec
xchg
int3
add
std
and
pop
lret
xlat
push
xor
xlat
xchg
cli
sbb
and
pop
fs
mov
sub
xchg
daa
mov
mov
daa
arpl
outsl
imul
pusha
insb
out
mov
shrd
mov
out
lret
dec
ds
nop
dec
ljmp
scas
mov
gs
mov
fxtract
popf
cmp
lods
sub
popf
mov
sub
ret
lods
pop
cltd
jno
daa
add
lret
int3
pop
xchg
xlat
in
sbb
mov
aaa
roll
ljmp
movl
and
adc
stos
xchg
push
push
movsl
popa
test
jb
cmp
in
mov
mov
loop
jecxz
out
jl
cli
rcrb
nop
sahf
adc
and
cmp
sub
dec
sbb
ljmp
pop
pop
xor
xchg
or
dec
mov
push
pop
inc
inc
xor
lahf
pop
jge
insl
int
aaa
ret
repnz
daa
jne
inc
jp
xchg
add
adc
cmp
rcrb
jnp
lret
iret
xor
fs
mov
dec
sub
push
mov
cmp
adc
cmp
ficomps
scas
adc
mov
adc
push
jns
pop
add
jns
pop
int
out
cwtl
int
mov
push
outsl
gs
jmp
dec
pop
or
nop
and
sbb
test
out
mov
lcall
dec
push
incb
pushf
imull
pop
push
xchg
notb
insb
xchg
pop
sub
jecxz
js
bnd
in
sbb
nop
cld
int
adc
loope
inc
int
push
nop
test
inc
in
jmp
xor
jge
jg
or
loopne
cmp
shrl
dec
addr16
dec
mov
pushf
inc
jge
push
inc
xchg
cltd
adc
popa
pop
pop
dec
sub
mov
aam
pop
insl
jecxz
ljmp
push
incb
and
cli
lods
and
mov
mov
xchg
inc
inc
lret
lret
or
adc
xor
fnstcw
test
ljmp
outsb
je
jle
add
sub
test
out
and
es
fdivrl
into
sub
sub
and
lods
xor
rolb
mov
pushf
fsts
pop
cmp
outsb
mov
ret
icebp
inc
xchg
jb
idivb
mov
fcompl
out
mov
mov
or
cli
jne
cs
aad
jne
sbb
and
mov
das
shl
dec
jns
lods
cmp
cmpsl
push
jp
in
sub
dec
sti
scas
loop
mov
mov
jl
jnp
push
loop
je
bound
shlb
rorl
popf
test
jmp
daa
inc
testl
push
clc
pusha
xor
lcall
and
sbb
iret
fists
add
in
jbe
insl
xchg
hlt
jae
rorl
or
cmp
xchg
sbb
outsb
xchg
stos
ficoms
cltd
xchg
mov
xchg
push
ja
pop
sbb
ja
inc
in
std
inc
addr16
push
push
push
cwtl
dec
ret
stc
test
in
sbb
mov
cwtl
add
inc
push
pusha
int3
dec
lds
jno
dec
rol
shl
fstpt
jle
sub
sbbl
aad
out
dec
or
outsl
mov
and
xchg
cs
xchg
adc
mov
pop
xor
adc
mov
dec
pop
pop
sub
sti
pushf
jns
pop
inc
xor
std
and
mov
xlat
jns
js
inc
pop
mov
outsb
out
lret
or
fidivs
lea
ret
test
sub
aaa
mull
mov
dec
jp
scas
cmp
ret
push
fldl
fdivl
pusha
mov
jecxz
mov
std
pop
push
dec
add
adc
push
pop
lret
pusha
imul
incl
aad
dec
sub
adc
leave
loope
and
push
jmp
shll
data16
pop
negb
and
jecxz
mov
test
inc
or
std
dec
adc
cmovns
cli
insb
adc
and
pushf
jecxz
and
ffree
dec
iret
xchg
ds
ss
mov
gs
in
outsb
shll
pop
fcompl
push
adc
mulb
mov
inc
hlt
xchg
shlb
mov
cmp
xlat
fmull
mov
xchg
shll
dec
adcl
add
lret
push
pcmpgtb
rorl
xchg
mov
inc
add
cmpsl
adc
mov
cs
cltd
push
mov
mov
sub
out
popa
xor
xor
xchg
dec
outsl
sub
in
or
shrb
stos
and
push
leave
cmp
lret
insb
pusha
add
fcomi
arpl
test
aas
or
xchg
inc
in
loope
lret
mov
jne
pop
cltd
sbb
stc
dec
xor
xchg
pop
mov
sub
lods
mov
sub
ret
dec
testl
hlt
scas
push
and
dec
stc
push
imul
dec
dec
ror
mov
aam
mov
into
mov
jno
push
and
mov
cmp
dec
das
idivb
sub
xor
addr16
imul
int
jae
aaa
xchg
lcall
notl
mov
mov
in
stos
push
subl
test
sub
jo
aam
mov
into
pop
mov
test
mov
loopne
into
pop
orl
jmp
lods
vpackuswb
sub
cmc
outsb
xchg
mov
mov
jno
lcall
push
popa
and
jmp
leave
dec
inc
jle
pop
loop
incb
jns
out
mov
test
mov
dec
pop
push
push
xor
add
inc
dec
js
cvtps2pi
mov
jns
ljmp
pop
ljmp
pop
pop
and
or
dec
or
rcrb
repnz
push
out
sti
or
popf
sti
pusha
loope
xchg
or
adc
mov
inc
jns
or
cmc
lret
in
jns
jp
mov
in
sbb
int
jbe
pop
cltd
lods
ljmp
mov
or
xor
mov
mov
cld
or
shl
call
dec
stc
aaa
mov
in
jge
int
stos
mov
jns
inc
sbb
inc
aad
outsl
jns
mov
xchg
add
ja
push
movsb
arpl
add
jb
les
fdivl
mov
icebp
jmp
rol
adc
dec
cld
adc
jno
popa
cmp
mov
sahf
pop
mov
sub
scas
pusha
imul
jae
mov
and
dec
das
int3
in
mov
xchg
repz
int3
cmpsl
xor
adc
mov
jne
mov
mov
dec
push
adc
push
aad
insl
lret
push
xchg
insb
push
lcall
push
rcrl
add
adc
and
stos
fdivp
lret
in
fldenv
jmp
xorl
push
or
sbb
add
or
int3
cld
push
inc
or
sbb
inc
fistpll
xor
insl
out
xchg
imul
sbb
mov
cld
jmp
adc
mov
mov
jne
iret
daa
cmc
xchg
jo
push
add
adc
leave
mov
mov
sbb
lods
sbb
adc
negb
mov
push
inc
sbb
push
aaa
scas
xchg
mov
lcall
out
xchg
jmp
mov
arpl
add
fdivrs
lds
dec
or
lock
fdivrl
inc
and
sub
ss
mov
cltd
xor
xchg
sti
data16
mov
cs
pop
in
mov
sub
jmp
popa
fistps
cmp
ret
pop
in
jp
test
xlat
and
fidivs
push
test
lock
dec
jge
imul
xor
loop
out
inc
sub
lahf
jmp
lret
or
mov
push
fisttpll
jl
test
mov
hlt
movsb
js
mov
inc
out
jle
jns
and
or
add
sub
push
pop
lahf
clc
push
lds
pusha
xchg
cmp
movsl
dec
scas
dec
pop
jno
dec
xchg
or
es
xchg
sub
xchg
rcll
xor
inc
clc
mov
out
xchg
shl
daa
cmpsb
xchg
pop
inc
mov
mov
or
loopne
fs
jg
loopne
in
icebp
pop
iret
subb
inc
adc
subl
out
add
lret
mov
xchg
jo
inc
mov
call
mul
mov
mov
cmpsb
movsb
or
iret
jl
flds
jo
fwait
mov
push
cltd
add
addl
xchg
pop
addl
aad
sub
stc
mov
push
xchg
mov
mov
adc
std
push
xchg
cmpsl
mov
aaa
fs
push
jp
movsl
or
mov
bound
stc
aad
inc
in
xchg
into
sub
imul
call
dec
fwait
cmp
mov
add
hlt
loop
xchg
jae
andl
jg
setb
mov
xor
xor
dec
ljmp
aas
lret
stos
mov
mov
dec
cmpsl
loop
mov
xchg
and
loope
mov
les
lea
js
jecxz
popf
and
cmc
push
fnstcw
pop
mov
lahf
neg
inc
mov
add
pop
push
jmp
mov
dec
loopne
rclb
pop
sbb
test
insb
pop
scas
fmull
outsl
and
imul
sbb
dec
mov
xlat
push
xor
adc
mov
ja
dec
push
shrb
hlt
pop
repnz
lret
and
mov
iret
fwait
sbb
aas
aaa
pop
or
or
push
jno,pn
mov
and
loopne
fsts
in
rcrl
push
loopne
jg
push
adc
push
mov
push
mov
out
or
mov
loope
add
adc
jp
out
pop
mov
and
and
push
inc
rcrb
addr16
aas
dec
dec
mov
into
rolb
popf
xchg
imul
push
jge
mov
push
dec
sbb
and
adc
push
test
test
cmp
cwtl
sbb
inc
dec
mov
aad
push
push
mov
ret
sbb
aas
or
xor
rcrb
test
mov
xchg
sbb
shrl
adcb
cltd
xchg
dec
shlb
mov
adc
sub
jno
xchg
test
or
aam
movsl
loopne
pop
outsb
std
bound
daa
cmc
mov
cmc
dec
push
loopne
mov
jg
int
push
mov
mov
mov
cld
cs
mov
fs
push
or
or
dec
push
xchg
lahf
add
out
ret
cltd
pop
cmp
clc
sub
dec
fimull
xlat
xchg
fistpl
mov
pusha
sub
mov
les
or
jl
push
mov
decl
sub
mov
jl
xchg
movsl
cmc
xchg
je
bound
dec
mov
iret
stos
and
ret
movsb
dec
or
outsb
xchg
ss
mov
jnp
push
jl
imul
mov
push
sub
lea
push
pop
and
stc
mov
cld
xchg
add
insb
fs
xchg
dec
xor
test
pop
idiv
shrb
fidivrs
fwait
dec
cmp
cli
adc
pop
lock
lds
mov
inc
jnp
cmp
imul
mov
in
add
sub
push
inc
add
mov
addb
stc
xchg
loopne
mov
jnp
pusha
test
sbb
dec
fnstenv
mov
mov
enter
sti
scas
ds
fnstenv
xor
jbe
dec
enter
sbb
js
scas
in
jne
dec
or
int
mov
sub
lahf
sub
jecxz
js
cli
or
in
popa
test
dec
mov
mov
xchg
aaa
fidivl
and
pop
mov
repz
mov
out
hlt
sub
cmp
mov
dec
dec
daa
pop
lret
mov
sub
and
push
xchg
xchg
stos
cmp
sbb
or
mov
ret
test
popl
mov
sub
aam
fsub
and
out
and
lods
repnz
hlt
out
sbb
mov
sub
mov
jns
fisubrs
aaa
mov
mov
test
sarl
sbb
xchg
in
push
in
pop
or
test
mov
test
xchg
mov
aaa
pop
lock
lods
mov
xor
ret
test
stos
rcrl
or
pop
andb
push
mov
push
into
pop
sub
xchg
cmp
mov
xchg
cmpsb
js
xchg
fisubl
out
push
xchg
movsb
outsb
popa
mov
fwait
sti
fiadds
cmp
sbb
lea
arpl
xor
push
jnp
sahf
int3
mov
div
xor
faddl
shr
shlb
push
sti
loope
loopne
push
mov
push
push
loop
sub
cld
lea
ljmpw
jmp
and
icebp
pop
or
or
gs
mov
and
dec
or
fistl
pop
ficomps
andl
sti
clc
xor
shll
xor
jle
popa
inc
xchg
mov
sub
lret
mov
pop
jbe
arpl
jns
bound
lcall
push
mov
cli
aas
and
add
push
inc
sbb
jo
add
fucomi
js
mov
dec
bound
mov
addr16
fiadds
in
pushf
push
add
imul
xlat
mov
xlat
pop
sbbl
xor
sbb
fs
push
hlt
push
stos
stos
xchg
jl
xor
rol
gs
mov
mov
data16
inc
dec
mov
movb
fldl
rorb
add
mov
rcrl
mov
xchg
gs
push
xorl
push
xor
sbb
mov
pop
dec
or
jg
cwtl
jmp
sub
cmp
xorb
and
mov
cmp
pop
push
mov
outsb
push
mov
pop
movsb
inc
mov
or
xchg
sub
add
xor
sti
or
call
repz
loope
lcall
loope
aam
xchg
mov
dec
jo
cmp
out
xchg
fmull
xor
call
sbbl
movsl
popa
cli
mov
jb
shl
loope
in
shrb
popf
mov
pop
add
mov
sub
scas
adc
popf
xchg
push
out
mov
and
mov
jns
icebp
stos
push
mov
pop
mov
mov
lock
xchg
mov
cmp
jae
dec
pop
lahf
jno
cmp
movsb
add
cmp
push
or
mov
shlb
xor
dec
xor
ss
push
int
clc
sti
xchg
mov
sub
mov
xchg
and
add
mov
jmp
adc
ss
nop
jmp
in
push
test
std
jb
lcall
and
lock
fsub
jbe
icebp
and
pop
bound
es
insb
aad
imul
mov
adcb
mov
push
add
push
add
jbe
mov
add
push
mov
movsb
frstor
data16
jno
neg
ficoms
add
fdivl
je
adc
mov
hlt
shrl
mov
clc
pop
inc
and
sbb
repnz
nop
mov
add
andb
push
lahf
mov
push
and
adc
dec
sbb
mov
or
cli
ret
test
or
and
sbb
mov
mov
and
mov
xchg
loop
jl
mov
aaa
imulb
push
cmc
fimull
decb
mov
adcb
outsl
inc
pop
adc
or
or
rolb
das
lock
mov
jo
sbb
sbb
xchg
push
xchg
mov
inc
mov
sub
aad
lods
sbb
sbb
ficomps
dec
cmc
fiadds
jge
pop
push
add
test
xor
xor
ret
out
pop
bound
into
aad
lods
sbb
dec
repz
out
call
das
or
fildl
cli
aaa
jbe
mov
jle
mov
mov
jno
ror
fnsave
push
pop
insb
lret
loopne
xor
add
cs
loop
push
pop
add
cmp
push
inc
jo
jg
cmc
or
xchg
cwtl
xchg
xchg
aas
in
inc
xchg
push
fstp
stos
stos
inc
or
push
fdiv
and
add
into
and
lcall
arpl
cmpsb
or
inc
and
mov
xchg
mov
cmp
jl
mov
xchg
push
mov
xlat
cmpsb
addb
push
into
nop
fcomps
pusha
lahf
push
xor
xor
mov
jo
sbb
dec
repnz
cmp
cmp
mov
mov
ljmp
in
ficompl
sti
pop
xchg
clc
bnd
sbb
loope
rcl
test
adc
leave
sbb
aam
mov
dec
sbb
je
shll
add
shrl
mov
mov
fcoms
sub
xlat
jbe
add
iret
or
xchg
repz
insb
inc
push
leave
lahf
or
jns
ret
stc
movsl
inc
mov
mov
ficoml
ss
pop
movsl
lock
shll
cltd
cld
inc
insl
add
jmp
aam
and
mov
push
int
sbb
xchg
movsl
ja
push
and
xchg
lret
xchg
fstp
cs
sarb
out
popf
shl
lock
dec
addr16
jmp
dec
or
aam
dec
jmp
mov
test
pop
jecxz
pusha
mov
nopl
add
fistl
jb
adcb
inc
shll
jnp
dec
or
cld
imul
push
cmp
int
ss
daa
jno
jb
pop
mov
inc
push
or
lret
cmpsl
jg
jo
xor
jae
es
rol
pushf
popf
leave
fwait
jae
inc
aas
add
inc
inc
jmp
loop
lds
icebp
xchg
scas
punpckldq
xor
sub
pop
cld
push
pop
cmc
scas
stos
push
dec
mov
dec
test
push
xor
pushf
fnstsw
ret
pop
fisubrl
mov
std
out
xchg
push
mov
jl
jmp
jecxz
inc
sti
and
mov
rcll
je
out
mov
mov
stos
push
jmp
mov
hlt
xadd
ffree
jge
push
inc
add
test
mov
int3
adc
mov
cmc
push
sbb
push
ret
sub
cmp
sti
push
int3
sarl
mov
pop
xor
cltd
neg
test
and
xchg
ret
push
pop
dec
ljmp
mov
mov
pop
jne
fs
inc
jmp
popa
lret
xchg
adc
jmp
in
ljmp
hlt
shrb
and
mov
adc
arpl
xchg
scas
cmp
push
sbb
mov
sub
cwtl
je
pop
jmp
cmp
or
es
lods
dec
or
out
adc
adcl
das
mov
xlat
hlt
js
imul
aad
lea
sub
xchg
les
or
scas
mov
ja
bound
lahf
int
loop
xor
cmp
stc
pop
test
sub
lret
xor
loop
sub
and
xor
andb
xor
cmpsl
xor
test
cli
lods
pop
cwtl
addl
lret
dec
xchg
cmp
pop
adc
add
sub
mov
fldcw
cmpsl
daa
mov
dec
mov
adc
sbb
add
stos
jp
mov
pop
push
fbstp
jne
cmp
js
leave
pusha
mov
cmp
mov
jmp
and
mov
lret
sbb
pop
push
adc
or
sub
es
push
aas
clc
cmpb
shl
inc
sbb
movsl
mov
in
push
aaa
movsb
xchg
jecxz
xchg
roll
call
xchg
push
cmp
outsl
adc
add
sti
xchg
pop
xor
mov
push
shrl
add
aas
inc
loop
rcll
push
or
sub
sbb
lods
in
mov
fstl
mov
fiadds
mov
adc
sbb
xchg
and
insb
pop
lods
in
imul
testb
maxps
fbld
push
push
adc
push
cmc
xor
movsl
inc
and
or
movl
add
dec
cmpsb
push
or
sbb
insl
fmuls
sub
ja
adc
aaa
xor
dec
lret
mov
mov
popf
inc
mov
jmp
push
das
push
push
adc
jp
roll
dec
jge
leave
imul
cs
test
jnp
iret
cmpsl
xor
xchg
in
jp
xchg
lock
out
push
mov
sub
sbb
stos
fadds
pop
xchg
call
mov
or
fldcw
cmp
or
pop
jle
mov
adc
dec
mov
push
in
data16
lods
stc
adc
in
in
xchg
mov
popf
inc
fisubs
adc
out
push
mov
jmp
jmp
dec
or
lock
inc
js
jp
xor
aam
ss
sub
mov
mov
jno
inc
rorb
cmp
add
push
mov
jl
mov
jecxz
jns
add
add
outsb
inc
mov
dec
into
mov
pop
inc
mov
sbb
mov
jge
fadds
xchg
dec
adcb
mov
adc
scas
stc
xlat
xor
in
jbe
sbb
cltd
xchg
aaa
mov
mov
xor
stc
in
mov
call
jne
pop
jb
and
inc
in
scas
mov
in
insb
test
inc
inc
adc
sub
xlat
fstl
and
clc
cmpsb
stos
pop
aam
add
mov
pop
push
and
leave
mov
mov
sbb
icebp
cmpsl
mov
pop
xor
add
jl
scas
push
fisubs
mov
lahf
rclb
jle
rcrb
test
bound
mov
pop
jae
or
das
jno
leave
and
lea
test
push
dec
out
pusha
popa
xor
ret
hlt
repz
jae
pusha
push
xor
dec
into
or
shrb
push
sarl
insl
aad
add
or
jae
int
xchg
arpl
xor
push
push
lock
dec
xchg
mov
cmp
mov
cmp
out
cmp
push
iret
pop
sbbb
je
cmpsl
stc
dec
in
iret
dec
sub
mov
or
cs
cli
in
cmp
call
and
sub
add
xchg
push
inc
mov
call
test
stc
cmp
sbb
inc
ljmp
inc
push
daa
in
pop
mov
stos
iret
out
xchg
jnp
xor
lcall
pop
or
call
and
adc
jl
pop
sub
iret
jp
fsubrs
inc
jl
pusha
push
pop
enter
les
and
add
sbb
xor
inc
loop
in
cs
sub
stc
cli
or
cwtl
repnz
lea
xor
out
push
dec
jp
jle
outsl
loopne
sbb
sub
sub
in
in
mov
outsb
jle
mov
scas
ret
push
xor
mov
faddp
push
repz
mov
mov
pop
sub
fisubs
mov
inc
out
pop
aad
push
pop
inc
mov
notl
stos
movd
and
pushf
or
insb
add
push
lods
cmpsb
lret
fstl
sahf
jle
xor
jmp
or
das
icebp
pusha
mov
in
adc
cmp
vcvtpd2psy
out
sbb
add
cmc
jge
int
push
repnz
xchg
sub
xchg
inc
mov
ret
in
mov
or
mov
add
xchg
lret
lret
daa
stos
push
jg
popf
mov
loop
push
incb
out
pop
mov
inc
cmp
xor
sub
das
in
fptan
stos
addr16
adc
in
mov
pop
fbld
mov
test
aas
daa
jno
mov
cmp
sbb
mov
or
cwtl
pop
xor
pop
push
int
sahf
call
jg
adc
mov
inc
mov
mov
dec
push
mov
add
std
aas
sub
xor
push
inc
mov
imul
xchg
movsb
addr16
cpuid
aas
and
sub
xor
mov
inc
stos
cmc
push
fbld
cmp
cltd
test
fs
add
outsl
or
cmp
rcrb
xchg
ss
std
jp
test
mov
lods
fbld
hlt
int
pop
and
gs
cmp
adc
pop
dec
xchg
pop
mov
dec
lret
jge
or
jnp
mov
clc
jae
fwait
ss
cmpsl
into
mov
movsl
syscall
mov
or
pop
insl
out
movsl
adcb
mov
outsb
pop
out
nop
cli
fildl
add
repnz
pop
fdivr
in
sub
dec
adc
dec
lds
mov
jmp
cli
mov
fsubrl
clc
mov
inc
out
out
cmp
daa
push
xorb
sub
sub
cmp
xorb
inc
sub
insl
jl
lods
sar
push
sbb
scas
dec
mov
popa
and
lcall
sarl
lret
xchg
pop
adc
xchg
dec
test
mov
in
xchg
mov
insb
mov
sbb
loop
xchg
imul
mov
or
or
mov
sub
sbb
and
les
xchg
sbb
subl
lds
adc
subb
stos
adcb
gs
es
mov
std
cltd
dec
das
fdivrs
in
add
notl
es
cmp
out
popa
iret
nop
inc
enter
in
addr16
cmc
bound
mov
add
clc
repnz
mov
push
jle
jbe
jl
pop
les
mov
jb
mov
sub
stos
mov
pop
insb
push
call
xorb
xor
out
imul
shlb
adc
inc
xchg
pushf
divb
mov
jl
loope
xchg
xchg
popf
mov
cmp
mov
add
pop
sub
fdivrs
std
out
aaa
jge
rcll
add
imul
shl
ret
pop
pushf
inc
testl
dec
js
dec
ret
cli
push
mov
adc
push
jno
arpl
icebp
ja
clc
cmpsl
xchg
scas
jecxz
pop
gs
data16
aaa
imul
lcall
pushf
jmp
aas
pop
dec
inc
lret
adc
xlat
or
sti
push
les
xchg
mov
xchg
rcrl
and
xorb
sbb
jl
testb
movsb
xor
data16
mov
in
cwtl
fimull
adc
mov
push
fstps
lret
lret
pop
stos
and
std
jns
xor
add
pop
sub
dec
and
mov
add
int
jle
pop
test
insl
lods
and
adc
pop
mov
dec
add
sub
xlat
scas
push
push
adc
enter
push
dec
mov
adc
ss
push
jp
fildl
pop
add
add
add
cmc
fwait
sbb
and
mov
or
pop
cmc
rcl
leave
mov
jnp
cli
popf
inc
dec
jb
lods
add
lock
scas
out
lea
sbb
jbe
addl
sub
negl
lahf
test
lcall
mov
in
and
mov
xlat
dec
out
mov
adc
cmpsl
sbb
jo
insl
ja
jae
xchg
mov
daa
gs
dec
mov
xchg
fisubrl
sub
cmpsb
leave
mov
push
dec
cmpsl
jae
arpl
cmp
xchg
jo
pop
pop
push
jmp
ss
insl
sbb
ret
sbb
sub
jno
out
pusha
cmovne
sbb
pop
adc
pop
add
jo
into
push
cwtl
jbe
cmpsl
sbb
pop
movsb
sti
ret
cmp
cld
or
cmp
add
mov
xchg
pop
addr16
cs
and
or
pop
sub
negb
xor
jb
int3
jo
imul
lret
jle
sbb
mov
repz
sub
outsb
inc
fdivp
xor
sub
inc
push
jle
dec
jle
mov
mov
and
hlt
sbb
int3
mov
in
cs
test
xchg
push
sub
sub
cmpsb
adc
outsl
xor
adc
flds
cmc
cli
addr16
sub
jo
push
xchg
fisubrs
add
pop
insl
out
ret
lcall
clc
xchg
rclb
fs
xchg
jl
push
pop
fnstenv
cli
int3
ret
divb
in
pop
adc
lret
add
das
lret
movsb
pop
inc
fcmovb
rcrb
or
lock
sbb
push
mov
scas
in
aaa
cmp
cmpsb
xor
push
pop
loope
pop
adc
push
fcoml
clc
or
and
pop
aas
sbb
fldenv
ret
mov
test
adc
loope
cmpsb
mov
cmp
ss
jo
mov
pop
sbbb
cmp
and
mov
jmp
jnp
clc
pop
push
and
mov
clc
cmc
andl
pop
push
jns
mov
adc
mov
add
or
cltd
in
ret
push
xchg
mov
sbbl
andb
lret
pop
cmp
jae
add
xchg
mov
movsb
xchg
add
popa
mov
pop
jle
loope
test
addr16
popa
rcr
pop
inc
stos
rorb
imul
xor
ret
decb
dec
out
js
nop
fistps
xchg
xchg
push
loop
mov
jmp
pop
fnstenv
mov
aad
std
adc
mov
mov
xlat
add
pop
popf
lcall
dec
pop
lods
dec
adc
inc
aaa
cmp
add
cmp
mov
xor
sbb
add
loope
in
xchg
dec
jbe
jecxz
scas
sti
inc
pop
fs
xchg
fcomps
imul
mov
js
out
dec
xlat
pop
cmp
sub
sahf
fbld
and
dec
es
mov
or
and
nop
nop
mov
enter
jne
aam
lahf
ss
pusha
xor
loopne
lds
pop
aad
mov
pusha
adc
loop
sub
add
mov
inc
sbb
push
outsl
pop
pop
pop
inc
inc
mov
mov
std
xor
test
mov
movsb
cld
dec
pop
ljmp
ffreep
xor
cmp
sub
scas
stc
lret
add
inc
dec
outsb
stos
aad
adc
rorb
sbb
push
xchg
mov
out
pop
cld
addb
inc
add
inc
dec
stc
mov
je
sbb
inc
clc
push
jo
outsb
adc
aaa
mov
imul
and
mov
push
lock
fstps
lea
repz
das
out
not
dec
setle
sarb
mov
adc
scas
pop
add
lods
jmp
xchg
inc
mov
jmp
push
in
sbb
int
mov
push
mov
lret
add
add
or
pop
mov
fists
mov
addr16
ljmp
movsb
fistps
pushf
arpl
pop
inc
sbb
mov
in
cli
mov
mov
add
mov
aas
or
orl
mov
adc
or
pop
add
and
add
jecxz
dec
imul
aas
mov
cltd
inc
jbe
fbld
fwait
jno
mov
push
push
sub
xchg
pusha
clc
lock
mov
inc
out
mov
mov
adc
cltd
jmp
push
jg
xor
dec
xchg
push
xor
stc
ret
and
mov
pop
jl
das
jg
cmp
mov
mov
xchg
and
and
stos
cld
pushf
mov
xor
dec
ljmp
inc
insl
cmp
pop
cs
lods
jecxz
mov
push
push
mov
out
xor
andl
mov
xchg
push
dec
out
ficoml
jecxz
pop
pop
icebp
xchg
jle
lods
pop
fsubrs
in
sub
cmp
sbb
cmpsl
cmp
loop
push
repz
mov
scas
push
push
inc
push
mov
jns
pushf
loope
sbb
mov
orl
xor
mov
xchg
stos
scas
lcall
imul
stos
inc
mov
mov
sahf
push
pusha
jnp
cs
mov
adc
mov
cltd
dec
pop
repz
sub
mov
and
aas
scas
mov
adc
mov
add
sub
jno
pop
inc
mov
mov
in
leave
sahf
inc
cmp
push
cld
inc
js
mov
inc
sbb
inc
enter
cmp
mov
sub
mov
lea
cmp
je
mov
mov
push
inc
fwait
sub
push
popf
loopne
pushf
inc
daa
stos
add
aad
daa
xchg
lahf
hlt
add
ds
stos
data16
sahf
in
push
lods
mov
xchg
stos
cmpsl
mov
push
lret
push
jg
fldl
mov
fmull
addb
lahf
push
cmc
jb
mov
sahf
sbbl
dec
ret
test
lods
and
jmp
pop
movsl
add
mov
sbb
stos
or
fldl
add
in
aaa
insb
in
flds
push
repz
sbb
xchg
mov
jns
cmpsl
bound
loopne
sbb
xor
mov
pushf
imul
cmp
jp
movsb
sbb
aad
das
xchg
push
cmp
cmpsb
push
xor
jbe
test
fwait
cmp
pop
lret
pop
mov
and
xchg
fmul
xor
jg
jp
pop
add
daa
or
test
xchg
jecxz
jb
divb
dec
fbstp
inc
negb
jmp
push
lcall
in
cmp
fistpll
sbb
xor
sub
mov
push
mov
outsb
out
mov
pop
in
lahf
fidivs
pextrw
subb
das
add
mov
cmpb
rcr
loope
roll
cli
cmp
and
mov
ss
imul
pop
mov
xlat
punpckhwd
movsb
int3
ds
sub
sub
fsubs
and
in
dec
in
jbe
push
data16
xor
cmpsb
mov
iret
cmc
cmpb
mov
in
lcall
cmp
jmp
xchg
pop
push
jl
notl
cmc
out
cmp
mov
leave
push
and
pop
popa
inc
jge
into
ficompl
fdivl
inc
insl
mov
cs
add
jmp
push
cmp
dec
mov
cld
xchg
scas
cld
test
xor
adc
sahf
lahf
mov
sbb
pop
cwtl
inc
test
jg
jbe
xor
jge
push
mov
sub
push
sbb
push
ss
out
adc
out
mov
notl
add
loope
fdiv
sub
ret
pop
push
push
pop
add
into
xchg
xor
mov
daa
pop
bswap
adc
dec
xor
jmp
sbb
shlb
sti
or
adc
fsts
jmp
fs
lcall
cltd
in
sub
sub
mov
adc
out
cmpsl
ficoml
sti
mov
xor
dec
decl
rcll
out
loop
mov
or
sbbl
stos
pop
mov
sarl
aam
fdivrl
jp
into
cmp
push
test
jo
jae
mov
fsubl
jo
scas
xor
lds
mov
jle
scas
arpl
gs
xchg
cmp
mov
push
xchg
jl
mov
mov
push
mov
jmp
and
addr16
mov
jne
mov
out
sbb
test
sub
lret
mov
and
orb
shr
mov
pop
daa
scas
xlat
inc
icebp
icebp
daa
push
push
sbb
sbb
xchg
push
lods
or
dec
mov
or
stos
jbe
inc
adc
jo
in
cmp
xor
and
push
push
mov
push
pop
sub
dec
push
xchg
das
sarl
stos
add
movsb
dec
jmp
cs
daa
dec
rolb
iret
xor
mov
mov
inc
dec
mov
stc
ficoml
adc
negl
rcrb
jmp
enter
in
adc
pop
outsb
cmc
xchg
xchg
aam
fsubs
xor
mov
ret
sub
jl
test
test
pop
or
adc
dec
stc
dec
mov
in
mov
clc
sbb
adc
sti
mov
pop
jmp
xchg
jmp
sbb
daa
inc
jp
or
cmpsb
push
test
or
push
hlt
jb
incl
inc
inc
into
inc
adc
mov
ljmp
adc
insb
adc
inc
shll
stc
mov
pop
and
and
xlat
js
mov
movsl
xor
lods
cmp
push
pop
and
cmp
mov
shlb
sbb
das
stos
aam
xchg
ret
icebp
fists
pop
jmp
pusha
dec
cmp
inc
and
out
movsl
ret
imulb
adcb
aas
push
adcl
imul
in
dec
sahf
jae
lret
ret
inc
ja
sahf
inc
aas
ss
ja
add
xor
scas
mov
jne
in
push
inc
dec
hlt
in
fs
pop
xor
inc
fadds
sub
call
sub
repnz
in
lea
cmp
and
xchg
jmp
sub
jo
fs
cmp
sbb
call
test
xchg
push
call
inc
nop
int3
in
sahf
fst
xlat
cmp
adc
je
je
pop
and
es
or
push
adc
inc
or
ret
xchg
xor
jbe
jno
call
cmp
test
dec
in
sub
inc
jmp
jle
xor
stos
sub
mov
fwait
in
cli
dec
test
xchg
test
mov
lret
sti
push
in
adc
push
shll
out
or
push
or
pusha
push
outsl
and
shr
pop
hlt
xor
inc
cmpsb
inc
enter
es
ficomps
mov
jl
pop
inc
fcoms
stos
dec
dec
mov
mov
jae
fists
into
inc
mov
mov
xor
fldcw
xchg
incl
pop
adc
cmp
mov
jns
jle
push
xchg
push
das
mov
adc
test
sub
fwait
mov
mov
inc
dec
pop
mov
inc
je
or
add
loope
outsb
push
nop
pop
out
jno
and
pop
js
xchg
out
negb
mov
aas
das
inc
mov
pushf
jge
lret
xchg
or
xchg
cmp
shlb
testl
cmc
sub
xor
pop
dec
call
xchg
dec
popa
sub
inc
xchg
dec
cmp
xchg
cltd
ds
xor
dec
cmpsb
lahf
fisubs
bound
out
cli
popa
inc
or
pop
push
clc
lret
xor
mov
push
sub
fcomps
mov
scas
shll
xlat
mov
jo
pop
imul
cmp
pop
add
in
xchg
outsl
dec
xor
adc
aas
pop
sbb
xchg
scas
es
ficomps
mov
aad
cmp
cmc
dec
mov
xstore-rng
cmpsl
add
pop
aam
xchg
inc
idiv
and
lcall
into
lods
pop
gs
icebp
xor
shrb
dec
mov
jnp
insl
adc
lret
mull
mov
jg
int3
mov
sti
cmp
xor
fldln2
jne
pop
jmp
xor
pop
xchg
sub
shlb
clc
mov
xor
test
or
sbb
push
test
push
stos
insl
mov
and
mov
dec
test
adc
sub
ja
stos
imul
out
and
pop
or
sub
out
mov
mov
or
xor
adc
loop
movb
cmpsl
mov
adc
sbb
inc
inc
ret
aad
jns
fs
mov
inc
aad
xchg
std
push
mov
insb
je
rclb
leave
mov
mov
inc
iret
sbb
mov
addb
lret
mov
jno
lods
cmp
cmp
push
pop
in
ficomps
cmp
mov
dec
mov
mov
test
add
loopne
dec
mov
sahf
xchg
push
enter
fldl
pop
push
imul
pop
lahf
test
test
dec
jae
adc
minps
inc
xor
and
xor
pop
or
cs
out
mov
ficompl
jno
test
jl
mov
int
jbe
fstps
je
pushf
and
fcmovnbe
out
add
mov
xchg
sarb
jle
sahf
mov
fwait
imull
pushf
push
fwait
leave
push
hlt
push
js
adc
or
add
ret
xchg
int3
cld
lahf
cmp
mov
sub
pop
repz
adc
jnp
andb
or
add
pop
data16
sbb
and
mov
xor
sub
lds
cmp
or
dec
in
cmpsl
pop
lahf
cmpsl
xchg
and
pop
into
punpckhbw
jbe
xor
cltd
aad
inc
std
pop
push
push
push
dec
leave
and
scas
shll
sbb
iret
jg
outsb
add
pop
dec
lods
inc
mov
fmulp
sbb
cmp
add
fimuls
lods
push
lods
popf
nop
psubusw
in
inc
mov
les
clc
insl
mov
stc
enter
arpl
mov
mov
dec
jmp
in
mov
mov
rcrl
pop
inc
lret
lods
push
sub
push
mov
pushf
push
jo
jmp
dec
iret
int
outsb
xchg
stos
jae
hlt
push
fs
xchg
jno
arpl
and
loope
xchg
xor
or
test
xor
mov
add
add
inc
adc
push
mov
pop
dec
data16
js
jbe
cmp
aam
or
mov
xchg
push
add
mov
test
sub
add
pushf
push
gs
sbb
push
lcall
or
push
push
add
xchg
leave
push
ficoml
mov
hlt
push
lret
jae
cmp
fsubp
xchg
imul
fsubrl
inc
push
out
jmp
aam
rorl
mov
pop
sbb
and
addr16
loope
cmc
or
mov
dec
fwait
sub
push
in
fwait
sub
outsb
cmp
test
xchg
dec
adc
push
sbb
aas
jl
lcall
mov
out
mov
inc
dec
andnps
push
dec
inc
jo
push
psrld
dec
add
fistpl
test
and
data16
out
repz
jl
dec
pop
ljmp
mov
pop
lcall
shrb
add
subb
mov
test
or
adc
pop
sub
aad
mov
cmp
dec
and
mov
dec
mov
sbb
add
pop
movsb
cmp
sbb
sbb
jne
push
out
popf
fwait
testl
xor
popa
in
in
aaa
mov
xchg
jnp
cmp
repz
enter
imul
test
pop
pop
xor
xchg
cmp
sahf
ret
and
jmp
movsl
lds
rclb
loopne
mov
or
movsl
enter
jbe
dec
jnp
mov
jmp
std
mov
and
insb
add
jmp
sbb
or
sbb
jb
and
or
in
sub
movsb
dec
jp
pop
pusha
cmpl
ja
leave
je
jg
orl
cmpsl
xchg
nop
pop
mov
sub
mov
mov
loop
inc
mov
rcrl
lds
and
aas
dec
sti
pop
cmpsl
adc
fsubr
xlat
cmp
in
scas
sbb
and
imul
je
pop
push
cmp
pop
pop
mov
add
or
mov
mov
imul
rcrl
sbb
adc
insb
push
orb
insl
mov
mov
js
adc
adcb
or
fiadds
mov
insl
mov
cs
jl
adc
jge
ljmp
fnstsw
xchg
rcl
pushf
and
lcall
and
dec
adc
hlt
test
lock
mov
shll
fwait
ljmp
xchg
mov
mov
inc
dec
pop
clc
sbb
sbb
push
xor
xchg
mov
inc
loop
and
mov
std
jnp
in
out
jbe
add
roll
xor
sbb
pop
in
fidivl
push
pop
fcomip
or
inc
arpl
mov
mov
push
add
popf
repz
mov
stos
fidivrs
mov
xchg
dec
mov
sub
fildl
push
jns
outsb
dec
or
sub
push
mov
xchg
icebp
nop
add
xchg
cmp
lahf
pop
cmp
lods
fs
lods
sub
in
repnz
jmp
idivl
insb
mov
popf
rcrl
je
jge
negb
icebp
xchg
mov
mov
sbb
mov
dec
jns
inc
jmp
in
mov
mov
movsb
pop
orl
xor
roll
shll
jmp
adc
sub
fiaddl
cmp
mov
pusha
stos
pop
or
imul
les
ds
popa
ret
icebp
mov
stc
repz
pop
jae
stos
jbe
cmp
jne
aaa
xor
lea
int3
fsubr
sub
xchg
lds
or
push
cmp
xlat
pusha
rcr
stos
les
xchg
cli
in
in
out
xchg
xchg
int
ret
lret
fcmovnu
test
jmp
loopne
sub
aaa
scas
push
sbb
sub
sar
sbb
sbb
xchg
pop
cltd
insb
scas
jle
push
dec
movsb
cwtl
inc
rolb
mov
scas
das
clc
sub
mov
pop
repnz
hlt
das
inc
fcompl
add
notb
scas
dec
push
cmp
inc
push
add
jb
mov
push
lcall
outsl
push
lds
inc
push
pop
jae
pop
push
mov
and
fldl2e
cmpsl
jg
cwtl
xchg
mov
add
aas
fdivr
mov
jg
inc
cmc
sbb
out
inc
aas
pusha
inc
movsb
push
xor
push
js
call
xor
js
out
in
jbe
xor
imul
das
xchg
insl
notl
scas
push
cmc
pop
mov
sub
cli
lret
inc
cwtl
xchg
je
and
loop
jle
jp
mov
cltd
cmp
mov
mov
mov
in
aam
movsl
in
xchg
nop
popa
pop
cmp
sub
xchg
fwait
push
repnz
cmp
push
or
cld
jg
imul
iret
xlat
xor
test
ja
fcoml
call
mov
mov
adc
in
je
xchg
pop
loope
imul
pop
sub
xchg
and
aas
daa
sub
mov
lcall
add
fmuls
out
add
mov
jmp
addb
jo
push
push
cmp
das
outsl
imul
jge
xchg
sahf
fcoml
loopne
pop
shll
push
pop
add
fldenv
sbb
jp
mov
mov
inc
jns
hlt
imul
test
add
pop
aaa
xor
je
cmp
inc
sub
mov
mov
add
dec
and
inc
adc
mov
inc
push
es
lret
xor
inc
push
mov
add
cmpsl
insl
cwtl
test
jl
ljmp
rcrb
adc
adc
das
cltd
loopne
pop
shl
add
fimuls
out
cmpsb
out
imul
imul
dec
xor
jo
enter
int3
fucomi
outsb
mov
pop
xchg
loop
cmp
iret
mov
mov
xor
fidivs
outsb
jb
in
mov
sub
sub
adc
cmp
sub
mov
xchg
in
ret
test
stc
sti
add
fnstenv
mov
and
jnp
sbb
jmp
jnp
or
enter
push
push
xlat
jo
or
xchg
fiadds
cltd
pop
cltd
dec
push
iret
pusha
push
sub
adc
cmp
inc
int
fs
ret
cmp
iret
dec
or
cmp
sub
add
xlat
mov
into
lret
push
mov
xor
subl
stc
scas
or
ljmp
mov
nop
push
push
sbb
sbb
loopne
xchg
adc
in
push
adc
out
mov
xchg
lret
xlat
jb
test
adcb
movsb
subb
dec
add
mov
push
mov
gs
push
jg
jo
jno
and
test
push
xor
mov
push
push
cmpsl
cmpsl
inc
adc
hlt
dec
insl
cmp
ja
mov
loopne
out
add
int
sub
sar
jmp
xchg
out
test
add
lret
cmp
adc
clc
mov
sub
adc
xorb
movsb
mov
mov
sar
mov
lret
or
xorb
inc
in
adc
mov
out
out
jns
add
hlt
lret
dec
mov
and
mov
movsb
jge
negb
push
pop
cmp
aas
inc
ret
jo
or
xchg
add
cmp
cmc
icebp
cmp
and
fisttps
and
loope
lret
gs
dec
push
sub
jge
pop
fistpll
sub
les
xchg
xchg
or
test
in
cmp
jmp
adc
loop
cltd
les
push
xchg
inc
dec
mov
xchg
rcr
inc
into
add
add
push
and
stc
shl
dec
xor
fdivl
je
out
and
sub
pop
ret
xor
xor
sbb
or
inc
mov
push
mov
cwtl
popa
or
popa
fstps
xchg
out
xor
sti
pop
ret
and
in
test
pop
in
cmpsl
mov
nop
xchg
xchg
jl
pop
adc
and
insb
and
cmp
shlb
int
pop
pop
xchg
call
xchg
mov
adcb
push
xor
mov
adc
adc
xor
repnz
fidivrl
lods
jo
aas
jns
rorb
subb
mov
filds
dec
and
in
jnp
xor
aas
ljmp
cmp
scas
cmpsl
testb
cltd
push
adc
fcoms
aaa
adc
out
rcr
jmp
sbb
fbstp
mov
push
loopne
test
inc
jb
xchg
sbb
insl
xchg
stos
ror
jecxz
dec
mov
fsubrl
or
push
popa
js
lock
movsl
mov
dec
or
insl
dec
xor
cmp
andl
lods
push
jns
mov
inc
and
xchg
cs
jns
mov
enter
xor
in
pop
ss
jmp
push
mov
push
mov
iret
mov
inc
fwait
and
jp
scas
popa
aad
int3
jb
nop
enter
addr16
pop
cld
imul
mov
lret
mov
push
popf
dec
or
xorl
insl
cmp
jle
js
in
popa
mov
mov
lcall
mov
outsb
sarb
dec
xor
cmpsb
adc
mov
fdivrl
pop
adc
mov
imul
std
cmp
xchg
inc
cmc
push
in
sub
sbb
pop
push
push
cmp
pusha
pop
test
mov
adc
jne
adc
lds
rclb
push
pushf
sub
pop
sbb
das
call
out
pop
ljmp
shll
sahf
lret
shr
fnsave
cmpsb
jnp
cld
mov
out
sub
xor
inc
movsl
xchg
fsubrs
scas
pushl
push
fstps
icebp
and
insb
push
sbb
popa
sbb
loopne
in
push
das
cmp
daa
sub
out
js
lcall
jmp
push
mov
test
pop
mov
or
xchg
jae
std
nop
push
cmp
jne
sub
lret
mov
pop
or
jae
jle
or
ja
into
mov
xor
hlt
adc
repz
push
pop
mov
aaa
test
int3
inc
dec
pop
add
repz
out
int
push
popf
dec
lahf
jmp
push
inc
xchg
sbb
mov
push
fists
fs
daa
stc
ret
sarl
and
stos
adc
jmp
mov
cmp
int3
mov
sbb
jl
mov
enter
sub
shlb
addr16
lret
loopne
jg
xchg
xor
add
jl
bound
adc
jmp
faddp
push
pop
sub
xchg
mov
xchg
ja
push
add
sahf
dec
lahf
imul
jns
mov
xchg
pop
lock
nop
loop
out
dec
xor
insb
pop
inc
sub
lock
jl
mov
divl
clc
int
mov
ret
loop
aad
xor
xchg
xor
repz
ss
inc
or
cld
lea
test
push
cmp
push
out
jmp
test
xor
fs
loopne
pop
sub
sahf
mov
rorl
add
push
xor
je
int
adc
jmp
push
cli
mov
sub
mov
data16
roll
stos
imul
fdivrs
pushf
sub
les
sbb
aaa
xlat
out
pop
mov
aad
fisttps
or
sahf
test
mov
xlat
mov
rolb
dec
mov
out
pop
jmp
mov
cmp
xchg
pop
adc
loopne
js
test
push
cmp
mov
stc
loopne
xchg
add
arpl
out
scas
lods
mov
add
mov
cmp
pop
ss
mov
add
stc
insb
pop
fsubl
lds
js
call
sub
fwait
push
inc
fdivrl
cmp
stc
jg
push
subl
test
lahf
mov
inc
shr
out
roll
sub
jle
clc
fiaddl
filds
cld
das
dec
mov
jbe
sub
imul
std
and
daa
xor
fwait
inc
ret
fmul
cmp
lcall
popa
lock
inc
and
push
movsl
ljmp
mov
jle
std
sar
movsl
lods
sub
push
stos
stc
cmc
fiadds
arpl
shrl
hlt
pop
xlat
and
inc
rep
inc
aaa
iret
jecxz
sbb
pop
sbb
lods
sbb
bound
inc
jmp
push
shl
xlat
inc
add
adc
fst
aaa
pop
clc
push
pop
shll
je
out
test
push
or
repnz
in
xchg
mov
mov
sub
into
cmpsl
pushf
xor
sbb
sti
dec
and
stos
test
test
imul
cmp
js
sti
xchg
or
cmpl
fisubs
jnp
adc
je
pop
xchg
dec
enter
daa
add
mov
dec
push
stc
jle
bndcl
movl
xchg
test
lods
aas
rorb
int3
dec
mov
lret
sub
or
gs
movsb
ja
mov
fstps
sbb
lret
pop
xchg
stos
popa
cmp
pusha
push
shll
test
jbe
mov
mov
xor
push
cmpsb
sub
std
sbb
fs
mov
daa
lahf
mov
pop
dec
int
jbe
cwtl
lret
movsb
mov
clc
sub
into
fwait
rep
sub
push
mov
lcall
sbb
out
int
xchg
sbb
sub
mov
mov
dec
push
pop
stos
aas
rcrb
test
in
out
dec
addr16
xor
pop
inc
xorps
fnsave
inc
add
mov
les
cltd
jge
outsl
in
es
and
push
lock
xchg
xchg
loope
jo
rcrb
or
push
mov
add
loop
loopne
pop
arpl
stos
push
inc
or
jb
sbb
pop
xor
shll
daa
clc
push
ja
pop
data16
cmp
jle
fucomp
cmpsl
out
xchg
mov
std
addr16
push
nop
mov
inc
add
or
aas
inc
jge
gs
mov
shlb
xchg
jle
loopne
add
jmp
push
mov
push
enter
mov
pop
jbe
xchg
mov
xchg
dec
inc
movsb
orl
lahf
rcrb
jno
cmp
lret
faddl
sub
xchg
add
je
in
andl
pop
jge
pop
enter
mov
mov
and
adc
fisubrs
insb
in
in
push
dec
dec
int3
cmc
pushf
mov
fmul
shlb
cmp
jecxz
hlt
jae
xor
sbb
movsl
ret
decb
insl
or
shll
sub
mov
sarl
sbb
sti
sbb
jb
mov
pop
sbb
test
mov
dec
jmp
and
mov
adc
repz
lret
mov
push
and
or
jp
dec
mov
xor
scas
pushf
cmc
mov
testb
ss
jbe
test
andl
movlps
adc
sbb
sub
in
jmp
xchg
and
mov
xchg
lds
aad
rdpmc
pop
push
test
fwait
notb
and
fbstp
ret
fildll
in
sbb
fstps
sbb
repnz
push
inc
adc
xor
jp
call
dec
xor
xchg
mov
or
mov
mov
add
push
movq
xor
sbb
aaa
jo
push
test
jg
dec
pop
dec
shrl
mov
sbb
pop
neg
mov
dec
hlt
or
jnp
pop
push
sub
dec
mov
mov
mov
lcall
rep
pop
lds
jge
cmp
cs
xchg
js
addr16
popa
jno
adc
or
or
sti
inc
in
loopne
sbb
aas
sbbl
std
cmpsb
pop
cmp
arpl
adc
inc
inc
pop
aaa
imul
adc
int
ret
ja
jge,pt
fmuls
push
fildl
add
pushf
sti
add
pop
pushf
push
std
jae
ja
xor
out
jmp
fiadds
sarb
push
addl
aad
mov
lods
xor
std
and
lds
js
pop
mov
lea
xchg
dec
fadds
xor
ret
dec
test
mov
out
call
xchg
sarb
adc
adc
and
dec
rol
inc
jne
clc
push
sti
gs
pop
jnp
mov
repz
add
fwait
arpl
pop
fnsave
aad
hlt
mov
sbb
dec
fld
sub
jl
mov
lea
inc
mov
or
pop
add
pop
mov
stc
mov
inc
jb
xchg
mov
pop
lret
and
outsb
mov
xchg
add
cwtl
sub
sub
fidivrl
out
sbb
xlat
dec
mov
mov
mov
mov
cmpsl
repnz
lds
sarb
push
lcall
loope
lret
xchg
push
imul
or
cmp
addr16
imul
aas
push
or
pop
and
push
mov
iret
mov
xchg
xor
clc
push
dec
push
cli
mov
inc
push
push
loopne
push
loopne
je
repnz
or
sub
or
adc
into
out
xchg
push
dec
movsl
int3
jmp
outsb
inc
mov
or
pop
cmpsl
gs
mov
mov
lods
out
mov
jl
mov
push
ja
cmp
xor
dec
xchg
inc
dec
and
nop
push
in
mov
sub
cmpsl
cmp
loopne
std
pop
jl
mov
inc
sub
pop
insb
std
nop
mov
insl
in
dec
xchg
cmp
add
gs
pop
jo
les
roll
pop
gs
sbb
or
shll
pop
cmpsl
sahf
mov
lret
mov
ret
push
fsts
add
dec
lret
mov
mov
xchg
loop
adc
test
xchg
mov
cmc
sub
push
cmp
leave
in
mov
mov
jo
pop
jo
jle
or
je
cmc
jnp
add
xor
stos
ret
pop
or
in
mov
or
xor
loope
bnd
fimuls
mov
xor
add
lcall
lret
cmc
mov
jne
loopne
xchg
outsb
adc
ds
outsl
sub
test
arpl
test
test
cli
mov
fisttpll
adc
call
pop
ret
inc
inc
mov
bound
lock
sub
lock
fsubl
dec
jnp
and
cmpsb
jmp
lea
stos
ss
stc
ljmp
icebp
jmp
movsb
push
sti
mov
and
jmp
out
emms
cmp
rolb
cwtl
or
pop
jecxz
in
pop
rclb
daa
mov
sbb
xor
xchg
int
xlat
fldenv
push
outsl
out
sti
jge
push
std
dec
aaa
sub
dec
xchg
jl
lods
lock
adc
pop
popf
inc
and
fisttpll
dec
jge
mov
cmp
hlt
mov
push
mov
mov
mov
popa
push
jbe
mov
adc
jbe
pop
or
jle
cmp
jecxz
lock
push
sub
jno
pop
xchg
push
test
call
dec
rcrb
add
fists
pop
icebp
loopne
mov
and
popf
and
pop
les
outsb
adc
je
or
add
push
push
jns
je
sbb
popa
pop
int
sub
imul
cmc
imul
inc
push
loope
dec
mov
js
shlb
add
jg
push
jge
repz
lds
push
pop
movsb
fstps
inc
xchg
jmp
add
cld
push
push
add
js
outsb
ret
lods
dec
and
push
xchg
mov
mov
ds
negl
xlat
setns
xchg
repnz
cmp
fwait
or
pop
loopne
and
fmuls
mov
repz
loope
fistpl
sbb
mov
rorl
mov
je
jo
lcall
push
icebp
orb
push
jmp
xorl
mov
sbb
push
jae
in
sub
iret
xchg
clc
mov
gs
dec
mov
push
out
shrl
jmp
out
jae
dec
cwtl
loopne
mov
gs
xchg
icebp
push
ds
out
dec
mov
jnp
ffree
sub
cltd
in
std
mov
add
pop
out
mov
rcrl
adc
jge
lock
into
pop
outsb
fbld
push
aaa
push
xor
cmpsl
push
mov
sbb
adcb
mov
mov
sbb
mov
scas
cmpb
ss
mov
or
inc
mov
cmp
mov
adc
fisttps
out
cmp
pop
mov
jl
pop
or
sub
xlat
and
mov
jno
sub
mov
arpl
sub
insb
out
xchg
repnz
add
stc
and
adc
and
sbb
mov
out
sbb
fs
insl
add
nop
jae
mov
loopne
adc
pop
dec
dec
in
or
pop
sub
mov
dec
arpl
jg
testb
sub
dec
jno
pusha
and
adc
dec
push
and
test
sub
ds
push
jp
in
test
fildll
mov
xchg
sbb
adc
mov
pop
mov
mov
sub
loop
jmp
cmpsl
sti
call
sar
das
out
ljmp
jp
popa
ja
ret
outsb
mov
popa
sub
jecxz
and
and
cmp
mov
xchg
leave
jg
movsl
mov
icebp
stos
add
cmp
mov
and
jl
sub
dec
jne
fistps
and
sarl
insl
cmpl
mov
outsb
push
out
call
outsl
xor
shl
sub
add
neg
dec
cmpsb
push
or
data16
out
iret
push
xchg
jbe
mov
fcomip
bound
mov
fsts
push
and
push
arpl
jno
shl
pop
je
pop
cmc
int
arpl
and
add
fs
xor
out
jo
xlat
push
dec
cmpsb
hlt
xor
sahf
fnsave
add
adc
jne
loope
out
sahf
add
flds
insb
xchg
in
gs
sbb
lea
inc
push
pop
mov
es
inc
cmp
arpl
aaa
add
ret
jne
cmp
xchg
cmp
incl
inc
xorb
aad
xor
cli
icebp
push
dec
add
out
mov
shll
pop
hlt
inc
iret
push
rcr
mov
icebp
and
or
cld
cltd
pop
imulb
add
jo
jne
inc
mov
int
lods
into
out
and
outsb
add
xchg
imul
jne
inc
clc
sbb
pop
inc
and
call
scas
pushf
mov
xchg
cmp
into
out
repz
mov
push
pop
daa
mov
aas
jge
test
in
adc
xchg
in
inc
aam
add
cmp
sar
popf
in
push
mov
cmpsl
testb
aam
xchg
inc
pop
fcmovbe
and
loop
rolb
jg
inc
into
cmp
es
jbe
adc
and
and
lret
daa
or
jg
divb
cs
mov
icebp
cmp
dec
fs
add
cwtl
movsl
cmc
int3
inc
daa
or
inc
mov
lahf
fisubs
int
or
sub
and
xchg
clc
xlat
add
adc
cmpsb
int
inc
outsl
push
cmp
fdivl
sub
clc
aam
test
jo
insb
sbb
dec
fxch
cmp
sub
shr
fidivrl
clc
cmp
fs
pop
fisttps
fstp
mov
ficomps
push
xor
repz
bound
test
pop
and
stos
cmp
pusha
inc
xor
imul
fst
insl
fstpl
push
sub
movsl
fcomps
ret
arpl
cld
mov
pop
das
xchg
pop
je
imul
and
scas
push
mov
rcr
push
neg
data16
into
cld
inc
dec
or
stos
mov
mov
inc
lea
sarb
cmp
out
inc
mov
xchg
sbb
pop
xchg
cwtl
repz
xor
jbe
aaa
sahf
push
pop
dec
lea
fimuls
sub
xchg
and
mov
mov
mov
jo
ljmp
nop
stos
or
cmc
mov
jns
stos
addr16
mov
jecxz
pop
fsubp
int3
in
fadds
and
adc
sbb
stos
ss
mov
int3
mov
mov
pop
loop
pop
adc
das
push
push
mov
push
dec
inc
into
xor
mov
or
loopne
cltd
por
pop
rorb
jg
xchg
inc
imul
sbb
and
outsb
ljmp
jne
dec
pop
std
dec
mov
xchg
out
cmp
iret
insb
sbb
mov
scas
fnstenv
or
push
inc
sti
imulb
dec
mov
ffreep
jmp
xor
out
iret
push
dec
mov
cmpsl
inc
jns
ficompl
add
popf
and
loope
frstor
add
xchg
adc
push
icebp
je
test
sarl
cmp
xlat
xor
test
mov
fs
or
getsec
jmp
jecxz
xchg
fdivrl
dec
mov
icebp
mov
repz
jl
adc
sbb
or
xor
repz
jl
mov
inc
pop
jge
adc
add
jns
pop
cmpsb
xchg
dec
adc
iret
imul
xchg
inc
fucomp
movsb
cmc
push
mov
iret
mov
sbb
int
daa
and
lds
push
mov
xor
mov
jae
pop
jge
shl
push
dec
mov
mov
cmpb
lret
jne
loop
pop
sub
bound
dec
sub
inc
test
ror
sahf
arpl
mov
bound
sahf
sbb
nop
jno
pushf
mov
in
mov
leave
sar
icebp
mov
test
pop
out
filds
lock
sbb
mov
call
lods
testb
inc
adc
adc
call
jl
fnstsw
jge
add
xchg
lahf
mov
jnp
push
push
dec
pushf
out
mov
dec
mov
inc
mov
add
dec
sub
mov
loope
xchg
popf
in
movsb
repnz
fcmovbe
mov
adc
fnstcw
push
out
outsb
in
jnp
in
adc
mov
lock
imul
insb
rcr
jmp
jp
ss
notl
psllq
push
pop
insb
sti
sbb
jg
inc
cmp
dec
and
xchg
adc
cmp
cmc
inc
mov
mov
lds
mov
jns
popl
int
jle
add
cld
mov
mov
fisubrs
cmc
jp
rorl
sub
and
pusha
push
mov
mov
orb
pop
jno
sbbb
mov
cltd
nop
and
out
pop
mov
lea
sti
push
cmp
pop
adcb
stos
pop
sbb
mov
jp
push
aaa
mov
call
jbe
sbb
cmc
dec
inc
xor
aam
cwtl
das
jp
or
mov
out
jnp
inc
mov
dec
shll
mov
mov
lds
sbb
out
mov
lods
fisttps
xchg
arpl
adc
pop
jns
out
addb
int
jb
cmp
xchg
outsb
je
pop
aam
lods
clc
dec
and
fisttps
mov
add
bound
mov
dec
xor
test
arpl
xchg
add
inc
test
loop
cmp
sub
outsb
jl
sub
aas
adc
mov
int
shll
inc
xor
test
or
aad
cs
call
adc
shlb
insb
lods
jp
je
mov
jnp
lcall
lods
out
dec
jbe
lret
mov
outsl
or
mov
in
popa
cmp
jnp
movsl
inc
pop
dec
xchg
xor
data16
arpl
and
stos
pusha
aad
mov
pusha
movsl
mov
sbbl
mov
mov
or
push
sub
mov
lret
enter
pop
mov
aam
call
jp
pop
lea
mov
jle
mov
pop
and
jle
add
jo
cmp
xor
movsl
inc
adc
out
jmp
sub
test
jecxz
cli
dec
mov
in
dec
lahf
ja
out
cmp
repnz
xor
mov
sti
mov
mov
jecxz
adc
in
sub
dec
jb
ds
and
test
lret
dec
dec
sbb
ret
mov
test
add
repz
scas
and
jnp
inc
roll
test
cmp
push
rol
mov
xchg
out
cmpb
xor
leave
testl
push
int
fistl
mov
int
cmp
and
jl
in
sbb
mov
add
pop
push
pop
leave
insb
fiaddl
adc
push
mov
xor
aam
pusha
jae
insl
jp
cs
negb
out
js
scas
cmp
mov
and
and
cmp
xchg
rcll
xchg
push
cwtl
stc
pop
push
icebp
push
lods
xlat
addb
xor
test
jl
add
sub
xor
mov
dec
mov
call
inc
loopne
aas
cltd
outsb
test
inc
fldt
pop
aas
jle
stos
xchg
and
mov
inc
inc
das
sahf
cli
clc
data16
cmp
mov
inc
icebp
add
jnp
inc
rcl
jns
or
popa
dec
jl
cmp
mov
lret
ss
rcll
cmp
fmuls
in
jecxz
add
sub
sbb
or
mov
pop
inc
or
xchg
inc
mov
push
mov
push
add
push
ljmp
outsb
shl
outsb
cmpsb
jge
push
pop
sbb
rorl
mov
adcl
call
movsl
mov
lret
pop
in
stos
stos
cmpb
xor
cmpsb
mov
sub
lds
mov
inc
pop
mull
lods
mov
push
aad
ss
lods
mov
add
mov
mov
adc
data16
scas
ret
fimuls
fwait
scas
lret
xchg
int3
in
out
add
aad
cmpsl
mov
subl
lods
fs
test
jp
push
icebp
lods
sbbl
insl
in
mov
lock
sub
ss
imul
adc
daa
mov
ja
ss
sbb
jnp
xchg
imul
mov
iret
pop
es
cmpl
xchg
and
outsb
dec
pop
pop
std
adc
ljmp
cltd
sbb
mov
add
xchg
xchg
ficoml
ljmp
xchg
fildll
mov
clc
fsubrl
push
push
cli
cmp
jb
mov
or
ret
mov
sbb
mov
daa
in
jg
repnz
lahf
fldl
mov
sbb
leave
es
rcll
bound
mov
pop
mov
lahf
push
pop
hlt
cmc
jle
push
js
sub
lcall
imul
xor
ffree
popf
jmpw
addl
inc
enter
repz
mov
xchg
loopne
mov
push
mov
cmpsl
insl
push
shl
jns
dec
ror
insl
jnp
sbb
cmpsl
clc
jmp
shrl
add
sub
mov
fmull
jae
rclb
or
lret
shlb
cmp
sbb
pop
jl
fdivp
movsb
subl
lret
test
rcrl
jno
sub
cmp
cmc
ljmp
add
jg
clc
sbb
dec
out
lods
rorb
cmp
je
stos
cmp
mov
adc
inc
repz
mov
imul
push
clc
loope
arpl
xchg
and
gs
pop
add
mov
fidivl
push
jno
mov
sbb
ficompl
and
ss
mov
mov
adc
rcl
sarb
sbb
in
mov
push
and
push
xchg
mov
jmp
stc
shl
sbbb
push
xor
cld
mov
jns
mov
cwtl
out
lods
xchg
mov
ds
jne
cld
xor
add
or
mov
jecxz
loope
jmp
xor
clc
push
inc
jl
jae
xor
pop
pusha
cmp
mov
idiv
iret
cmp
jno
test
push
adc
pop
out
sub
jmp
shrl
pusha
into
les
stc
cmp
add
sub
daa
jle
or
dec
out
in
das
sub
jl
lret
inc
sub
fwait
scas
push
lock
and
adc
int
insl
loopne
jle
sbb
add
leave
inc
test
xchg
sbb
dec
inc
arpl
pop
outsl
outsb
xchg
jno
lret
mov
sub
pop
fnstsw
jae
arpl
mov
push
xchg
leave
add
push
in
or
cmpsl
or
and
loop
sbb
dec
mov
jbe
stc
xor
dec
inc
xchg
cwtl
sbb
rorl
xchg
mov
mov
jbe
call
jns
sarb
sahf
outsl
push
and
push
jmp
into
dec
ja
dec
test
movsl
push
jecxz
jg
rcll
and
inc
mov
clc
inc
xor
lret
sub
fdivrs
dec
outsl
js
inc
lods
fcompl
inc
xchg
negl
pop
es
adc
inc
out
mov
pushl
adc
jb
pop
push
xor
notb
int3
jge
sarl
lahf
push
pop
inc
xor
sbb
jo
jnp
sub
rclb
int3
and
das
mov
mov
xor
repz
arpl
pop
enter
insb
push
cmp
outsb
jmp
call
and
imull
push
call
outsb
jge
or
insb
push
iret
pop
lods
cli
lods
or
bound
ret
je
neg
cmp
in
adc
mov
int3
mov
das
into
pop
inc
iret
aas
jmp
loope
mov
arpl
xchg
jns
dec
ja
mov
xchg
push
adc
movsl
cmp
sub
and
loop
cltd
adc
adcb
lret
inc
inc
in
lds
mov
cmpsb
loop
loope
dec
aas
ret
pusha
push
pop
cmp
shll
jns
adc
dec
dec
sbbl
fildll
popf
movsl
imul
mov
testl
test
les
addb
fmull
adc
jge
enter
cmc
mov
jnp
xor
pop
test
insb
jle
std
push
fnstsw
and
out
cwtl
push
xor
lea
add
dec
adc
xlat
sub
gs
push
xchg
hlt
lcall
ljmp
xchg
jecxz
xchg
add
cmc
repnz
and
cmp
xor
or
xor
pop
stos
dec
jl
cmp
jge
xchg
mov
and
in
pop
mov
enter
cmp
mov
nop
fdivr
cmp
adc
addl
mov
xchg
out
pop
shlb
in
ficoms
incb
inc
mov
push
mov
xchg
jl
push
xchg
inc
lods
adc
scas
or
dec
ds
jle
mov
je
pop
mov
lret
in
lods
movsb
pop
mov
pop
pusha
test
dec
inc
fwait
cld
testb
loop
js
enter
insb
hlt
adc
icebp
rorl
das
sbb
mov
push
ret
jle
dec
popf
inc
xchg
sbb
stc
dec
fsubs
jecxz
test
dec
cmp
add
daa
ss
ja
push
mov
ja
enter
jno
add
xor
sahf
outsl
ftst
test
jge
pop
jb
fs
push
out
out
iret
or
scas
ljmp
jge
rclb
mov
insb
loope
bound
push
pop
xchg
fldt
adc
call
insl
jecxz
dec
fwait
lret
xor
stos
pusha
dec
xor
push
jmp
jbe
aam
lea
xchg
pop
jno
dec
jl
mov
sti
xchg
inc
aas
xor
not
pop
mov
mov
push
insb
sti
clc
sub
cmpsl
mov
or
cmp
cmp
in
jge
fs
xchg
or
sub
inc
push
or
cltd
xor
andb
fs
add
add
cmp
sarb
adc
lret
enter
jae
mov
pop
adc
xchg
xor
dec
ret
mov
pop
jo
or
dec
push
adc
xor
nop
std
add
out
in
out
lds
jl
fwait
xchg
mov
shlb
mov
pop
mov
sarb
pop
jmp
jno
dec
std
aas
ret
mov
dec
and
cmc
cmp
mov
mov
popa
or
dec
mov
adc
adcb
aaa
inc
xchg
push
xor
int
xor
stos
sbb
xchg
pop
loope
pop
or
xchg
in
mov
test
mov
fucomp
leave
push
fidivrs
push
and
cmp
fcompl
pop
cmp
xchg
shll
lret
sbb
mov
rclb
xlat
test
push
arpl
test
rorb
push
das
inc
enter
dec
out
mov
leave
adc
sahf
lds
es
jb
sti
sbb
xchg
push
xor
imul
jbe
fnstsw
out
popf
cld
hlt
sub
jge
ret
jno
ss
or
stc
mov
gs
xchg
mov
mov
add
mov
loopne
orl
pop
or
loope
das
jns
cli
dec
daa
ljmp
pop
rolb
pop
and
scas
or
push
stos
xor
cmpsl
out
insb
lds
les
in
mov
xchg
sub
xor
sti
adc
idivl
loop
cmp
shr
lods
lods
das
outsl
inc
aad
scas
ret
notb
lret
add
enter
jb
xchg
je
jo
xchg
pop
fsubl
add
iret
and
stos
xor
mov
adc
dec
fs
lods
jl
fwait
mov
and
or
cltd
dec
lds
jne
inc
icebp
jmp
dec
mov
or
sbb
push
jbe
addr16
sbb
xchg
cmp
lea
sarb
mov
jge
stos
addr16
mov
aaa
push
loope
cmp
lret
mov
in
sti
xor
divb
aam
mov
lods
push
or
shrb
mov
out
pop
cmp
xor
sub
subb
mov
les
adc
jb
repnz
mov
je
mov
dec
jp
outsl
jno
das
pop
lahf
jl
push
leave
mov
xorl
imul
ret
jae
scas
in
ja
sbb
int3
push
adc
ljmp
stc
stos
sbb
push
popf
ja
pop
in
pop
aas
or
or
movsb
rcl
mov
aas
push
rcr
ss
xchg
inc
sbb
movsb
mov
inc
mov
pop
out
cmp
gs
and
negl
icebp
ljmp
inc
inc
testl
adc
mov
cs
xorl
pop
cmp
sahf
lcall
in
mov
inc
aam
add
dec
push
dec
into
cltd
out
sbb
iret
adc
mov
ret
push
outsl
imul
mov
xor
inc
xchg
lea
std
outsl
out
xchg
ss
es
jae
xchg
mov
inc
jnp
clc
cmpsl
push
rclb
adc
lods
fsubrs
out
pop
fcoms
or
jle
in
lret
repz
in
xor
mov
loop
mov
inc
scas
cmpl
push
stc
jae
sbb
rorb
andl
inc
clc
stos
dec
add
jmp
sbb
xorb
mov
mov
dec
cmp
xor
int
jae
and
lret
mov
xor
sbb
and
cmp
imull
xchg
flds
fwait
lock
pop
pop
mov
adc
mov
outsb
sub
add
in
and
add
inc
lock
ljmp
mov
mov
mov
clc
iret
inc
rcrl
xor
push
hlt
xchg
sbb
mov
hlt
cwtl
flds
scas
in
rep
add
out
fstpl
stc
pop
push
cmp
in
not
dec
pushf
adc
pop
flds
mov
pop
nop
inc
mov
xchg
and
pushf
add
out
xchg
lcall
scas
loopne
adc
sahf
jecxz
bound
add
xchg
aad
pop
fcomps
mov
cmp
or
movl
pop
xchg
cs
imul
add
jl
sbb
js
call
pop
frstor
pop
int3
xchg
sbb
and
sbb
cltd
adc
fdivs
inc
enter
pusha
test
adc
pop
les
mov
lcall
shll
push
push
ss
mov
or
or
pop
sub
in
or
shrb
sbb
fidivl
stc
push
pop
mov
lds
jge
jnp
jno
movsb
push
xchg
sub
insl
push
dec
inc
dec
add
pop
and
dec
adc
movsl
in
dec
in
mov
fadd
popa
inc
out
sti
decl
scas
jp
adc
sahf
push
jmp
popl
in
mov
pop
in
loop
mov
out
mov
outsb
pop
ret
stc
add
pop
xchg
lcall
movsl
fcompl
fcoms
xchg
mov
ja
lock
lock
inc
test
jle
push
in
xchg
sub
and
lock
mov
mov
fwait
inc
push
add
fcoml
outsb
insb
mov
sub
mov
cmp
ret
lahf
jge
pop
js
cmpsl
std
adc
mov
out
pop
aad
cmpsl
mov
cltd
out
jb
popa
jnp
mov
call
sbb
adc
xchg
sbb
dec
and
cmpsb
insb
stos
insl
in
mov
mov
setp
std
add
aad
in
push
or
ljmp
dec
dec
jge
js
and
or
adc
sub
fldcw
mov
pop
fmuls
test
and
mov
pop
xor
scas
mov
pop
dec
pushf
push
imul
xchg
and
jl
insb
mov
add
xlat
jns
cltd
cli
dec
lea
loope
mov
sub
mov
imul
imul
push
repz
adc
dec
mov
insl
outsl
xor
rorb
mov
dec
sbb
cli
js
pop
in
pop
jp
shrl
ljmp
loope
xchg
xchg
popa
stos
or
jne
adc
xchg
inc
mov
xchg
std
mov
test
mulb
inc
fs
xchg
int3
in
inc
sahf
out
push
cmpsl
xchg
sub
arpl
mov
and
mov
leave
and
dec
or
sub
and
stos
cmp
mov
jge
pop
stos
or
loope
cwtl
jo
jp
adc
add
repnz
inc
sbb
fadd
and
adc
pop
ret
mov
jnp
inc
mov
hlt
mov
stos
xorl
aaa
xor
xchg
je
das
inc
cs
in
sarl
sahf
shrb
push
fistpll
dec
inc
cmp
mov
std
mov
stc
imul
or
es
mov
in
pop
xchg
xchg
out
repz
cmc
or
xchg
push
add
add
call
out
fidivrl
scas
push
sub
lret
mov
addr16
das
lcall
fnsetpm(287
or
add
xlat
and
dec
call
sub
xor
or
adc
cmc
cmp
scas
dec
pop
xor
mov
mov
pop
sahf
shrl
or
test
and
xor
push
push
mov
shll
into
mov
or
mov
jle
adc
lock
jo
dec
xor
clc
fadd
jo
jmp
lods
ret
lcall
idivb
xor
or
adc
mov
and
inc
imul
pop
adc
movsl
std
addr16
jecxz
adcl
sti
iret
dec
mov
mov
dec
sbb
je
lea
nop
add
cmc
mov
fstps
or
pop
addr16
pop
sti
or
pop
mov
push
dec
push
ljmp
loope
addl
iret
and
sub
popa
mov
xchg
loopne
hlt
dec
ljmp
add
stc
fidivs
out
testl
jp
into
inc
xchg
cmp
dec
lcall
push
mov
push
xchg
roll
subb
jb
lods
ja
cmp
adc
mov
or
push
out
loopne
enter
jae
call
clc
adc
xchg
int3
mov
incl
out
or
lahf
pushf
jbe
mov
xchg
stc
mov
adc
cltd
cld
mov
xchg
repnz
jle
mov
adc
xchg
lods
icebp
xor
fadds
addr16
sarb
xchg
out
ficompl
push
push
ffreep
insl
push
bound
shlb
cmp
lock
insb
js
lods
notl
inc
ljmp
inc
or
and
sbb
rcll
sub
dec
daa
nop
xchg
mov
scas
repz
or
jns
mov
js
rorl
or
sub
into
sahf
mov
mov
push
outsl
fwait
les
je
movsl
mov
lock
push
stos
icebp
je
mov
fndisi(8087
flds
cmc
mov
lods
shld
or
mov
shr
imul
in
movsl
mov
dec
dec
mov
scas
dec
ljmp
jo
xor
ret
dec
int
pushf
mov
push
sbb
adc
pop
xchg
add
jns
or
enter
lock
xlat
xor
mov
mov
dec
add
dec
jg
mov
pop
pop
or
pusha
ret
das
outsb
jg
mov
imul
mov
pushf
jg
fistl
jne
add
clc
push
mov
rcr
iret
push
xchg
cmp
sbb
mov
outsl
lret
js
xchg
scas
inc
call
dec
dec
push
cmc
rcrb
and
lret
and
aam
xchg
cmpsl
sub
cmp
pop
and
std
sbbl
pop
push
inc
mov
jo
pop
mov
sbb
jo
inc
int3
xchg
cli
lock
mov
cmp
stc
mov
adcl
xlat
pop
mov
addr16
pop
xor
lods
divb
or
sub
and
dec
push
xchg
pop
testl
aaa
sub
xchg
xor
lret
push
cmp
sbb
push
or
and
fwait
jmp
enter
roll
inc
mov
scas
jbe,pt
hlt
jns
rcrl
scas
lock
es
daa
xchg
and
mov
int
pop
bound
sbb
jmp
enter
mov
fildl
jno
mov
out
scas
sbb
pop
jb
pop
rorl
out
pop
push
mov
jne
mov
in
sub
repnz
lcall
jo
rcll
mov
pop
loop
pop
or
movsb
inc
in
xor
adcl
dec
dec
cmpsl
movl
mov
loop
mov
adc
mov
mov
mov
out
lock
mov
dec
mov
fisttpll
sub
loop
cmp
jp
add
add
xchg
fdivs
sub
jl
in
dec
rorb
aaa
add
lods
mov
pop
stc
mov
adc
outsl
add
testl
mov
out
test
inc
adc
sbb
sub
bound
jb
out
sub
and
scas
xlat
aad
in
shlb
test
inc
mov
and
adc
loope
mov
lret
ljmp
jmp
outsb
and
ja
and
jg
jne
mov
xchg
mov
arpl
insb
lock
cmpsb
aad
xor
mov
mov
dec
inc
aad
pop
orb
add
xor
repnz
inc
dec
sahf
inc
fwait
pop
push
xor
lock
bound
xchg
mov
mov
daa
test
jg
mov
repz
adc
js
jmp
sti
mov
mov
inc
mov
mov
push
test
pop
inc
movsb
pop
and
pop
pop
or
jns
cmp
call
loop
mov
xchg
add
lods
mov
das
inc
xor
lock
push
les
jg
fs
or
sar
outsb
pop
sub
divl
adc
mov
punpcklwd
mov
rolb
es
cmpsb
mov
jl
pop
test
bnd
test
rol
mov
ret
jge
cmc
arpl
xchg
repz
sub
movsb
jmp
mov
mov
insl
out
mov
add
popa
test
jl
xchg
jge
test
mov
sub
gs
sub
pop
and
insb
fdiv
psraw
repz
adc
and
mov
push
adc
ficompl
push
push
jg
cmp
aam
lods
sub
je
rcrl
aaa
cltd
lock
jge
inc
movsb
fidivrs
pop
dec
rorl
ss
in
cmpb
cli
jmp
scas
mov
or
jns
dec
mov
adc
int3
jnp
in
fcoms
mov
fcomps
mov
dec
insl
dec
jl
adc
push
jl
push
and
lds
mov
mov
sub
into
mov
or
xor
mov
into
ss
inc
pop
cmpsb
adc
sbb
popa
cmp
dec
add
hlt
daa
clc
adc
fdivrl
xchg
jg
enter
sub
mov
push
scas
pop
pop
js
jge
fiaddl
push
mov
pop
shll
xor
ljmp
sti
dec
xchg
in
jae
fnsave
dec
xor
jb
mov
mov
movsb
std
testb
add
iret
mov
add
or
xor
ljmp
into
mov
sub
xchg
push
lcall
daa
insb
xor
enter
jns
imul
clc
xor
icebp
loop
rdpmc
addr16
push
jne
or
jae
mov
shl
sbb
int
add
sbb
pop
jmp
xchg
cwtl
jge
data16
add
negl
xor
push
jnp
cmp
add
and
mov
outsb
test
sbb
jl
popa
xor
je
xchg
pop
jo
sbb
test
hlt
push
inc
mov
pop
test
leave
jno
pop
push
ds
fmul
in
out
mov
adc
ror
cmp
jo
jb
imul
ds
xchg
xlat
mov
jge
xor
jne
xchg
fisttps
fs
sbb
aas
sub
pop
xchg
xor
lock
js
pop
gs
adc
adc
mov
add
cmc
mov
in
push
popa
sbb
push
cmp
aaa
inc
gs
ret
hlt
push
mov
lods
pop
sub
jg
sub
rcrl
xchg
mov
push
sub
mov
push
xchg
add
inc
and
out
push
enter
pop
jg
sarl
sahf
and
mov
sbb
mov
xchg
inc
pop
cmp
into
int3
pushf
loopne
sar
adc
xchg
push
jae
or
mov
rol
push
scas
sub
mov
cli
cltd
ret
xchg
dec
push
xchg
mov
pop
addr16
and
add
jp
inc
ss
inc
and
cmpsl
mov
push
jns
aad
mov
jo
push
add
push
shlb
cmc
sub
cmp
and
std
inc
mov
rorl
lock
aam
pop
sbb
movsb
js
lahf
not
cmpb
inc
mov
test
cwtl
xchg
stos
fldl
cmp
ljmp
fwait
push
mov
mov
add
dec
pop
call
pop
mov
rorb
jnp
cmp
xor
pop
fwait
xlat
ror
notl
int3
in
mov
push
sar
adc
inc
and
mov
inc
popw
fsub
sub
mov
mov
mov
aam
and
int
cwtl
jl,pt
sub
test
push
stos
fwait
int
mov
ljmp
cmpsb
loopne
add
pop
add
inc
adc
call
dec
fs
fldt
cmpsl
inc
xchg
pop
cmc
cmp
sub
in
idiv
xsha256
cmpsb
pop
aam
jnp
rorl
push
xor
mov
icebp
mov
xchg
fs
ds
das
lcall
daa
xchg
movsl
imul
cs
jmp
cs
mull
stc
xchg
testb
add
mov
mov
add
frstor
shrb
xchg
stos
fildl
fidivs
add
pop
cmpsl
enter
mov
cwtl
cmp
cli
ds
xorl
jg
ja
cli
aam
enter
add
sti
int3
into
out
lea
fldl
xor
and
shr
push
test
ja,pn
jmp
or
cmpsb
mov
xor
test
outsl
xor
pop
leave
or
add
cmc
aam
daa
sbb
or
push
cmp
pop
sahf
cmp
scas
faddl
adc
adc
jmp
push
leave
or
lock
inc
cmp
inc
xor
ss
or
jns
cld
mov
shrl
nop
inc
lods
sub
xor
cwtl
push
add
pop
ret
popa
sub
arpl
mov
mov
icebp
push
gs
cmp
in
jne
test
add
int
jno
jl
rolb
out
inc
inc
int3
les
into
push
mov
mov
mov
lds
je
pushf
in
jmp
cmp
imul
cld
mov
push
lods
out
cmc
push
lcall
sbb
pushf
sub
sub
and
imul
jl
fstpl
test
mov
movsl
sbb
loop
adc
jns
loope
sbb
sbb
cmpsl
xor
pusha
sub
icebp
xor
xor
push
xchg
repnz
and
outsl
mov
scas
dec
enter
or
ret
or
pop
dec
xchg
jne
roll
call
ss
pop
adc
mov
xlat
cs
imul
int
sub
inc
cltd
xor
cltd
inc
pop
add
pop
notb
pop
fcoms
sub
dec
mov
sub
add
pushf
mov
adc
inc
and
pop
test
scas
mov
int
outsl
or
cwtl
jg
aaa
cmp
mov
jp
add
fmul
sahf
mov
bnd
mov
daa
xor
pop
rol
cmp
lret
fcmovu
dec
fstp
add
sub
daa
mov
mov
mov
jnp
lock
ds
sahf
lds
push
fdivl
mov
cmp
jae
xchg
cmc
lock
push
and
fs
adc
xchg
jl
hlt
add
mov
dec
clc
lea
lcall
jo
adc
fwait
jno
ds
mov
mov
push
adc
cmpsb
cltd
fistps
mov
dec
fwait
loop
push
cmp
or
fadd
and
loope
mov
lods
and
rclb
push
mov
cmpsb
dec
cmp
out
ds
xor
xor
loop
sub
mov
into
mov
xlat
adc
sbb
mov
xor
xchg
scas
gs
mov
mov
mov
mov
sub
push
or
addl
push
xorl
jo
ljmp
std
fcoms
iret
mov
inc
pusha
pop
sub
xor
jecxz
or
dec
pusha
pop
xchg
test
or
mov
mov
cwtl
in
or
jno
adcb
push
cmp
scas
jge
inc
inc
xchg
sbbl
push
in
xor
cmp
enter
or
xchg
imul
cmp
sub
in
mov
cmpsb
ret
mov
shl
std
stos
sbb
pushf
inc
andl
call
sbb
rcll
add
dec
mov
and
repz
jecxz
jb
or
jbe
jle
xor
in
test
push
rolb
in
fnstenv
pop
add
dec
repz
sub
les
jp
pushf
movsb
cvtdq2ps
add
icebp
jne
mov
mov
dec
int3
xchg
lahf
das
mov
filds
sub
stc
fpatan
push
jbe
loopne
mov
mov
cmp
out
xchg
lds
shl
dec
inc
add
push
push
ret
dec
sbb
jnp
loope
sarb
loop
pusha
in
dec
fimuls
insl
js
mov
adc
int3
adc
xlat
rcrb
sbb
call
test
xchg
lea
cs
ret
xor
push
in
mov
les
or
xor
sub
in
and
out
cmp
sar
ficoml
mov
fsubs
test
js
inc
leave
cmc
pop
ret
sarb
ror
inc
ds
cli
sar
jb
cmc
leave
pop
data16
and
push
pop
inc
or
pop
jae
fmuls
loopne
pop
fisttpll
lcall
dec
mov
mov
out
adc
dec
mov
daa
mov
xchg
out
inc
push
mov
sbb
push
lea
mov
hlt
lods
hlt
mov
jge
cmp
clc
mov
scas
test
push
pop
sub
mov
psubq
dec
fidivl
xchg
ficoml
jl
test
test
outsl
daa
adc
mov
int
sahf
dec
imul
mov
mov
add
repnz
sub
sub
fnstenv
out
push
stos
test
or
imul
add
fisttpll
iret
push
std
push
sub
mov
and
in
out
imul
ss
pusha
test
or
loopne
ror
mov
rclb
or
mov
adc
shlb
adc
push
leave
adc
ficompl
inc
enter
smsw
or
xor
lret
repz
loop
lcall
mov
and
in
xchg
cmp
loope
data16
fimuls
jo
test
dec
aaa
and
pusha
addr16
jg
fnstsw
cmp
sbb
fiaddl
test
xchg
xchg
push
inc
xlat
pop
mov
push
pop
out
scas
in
push
insl
mov
idivl
dec
test
adc
idivl
and
push
cli
mulb
jns
dec
cltd
pop
mov
pop
cs
cwtl
and
inc
loop
and
mov
fisubrl
and
lods
jmp
pop
repnz
xchg
pusha
lds
jg
pop
cs
sbb
js
xchg
mov
sub
cmp
out
das
pop
fists
data16
icebp
fcomps
stos
jbe
shll
fdivl
mov
jp
in
mov
sbb
cmpsb
pushf
xchg
dec
sub
cs
cmc
mov
fstpt
mov
pusha
sbb
lcall
sbb
cmpsb
jge
sbb
in
pop
arpl
adc
pusha
cltd
aad
jae
jecxz
out
scas
mov
bound
clc
notl
sub
mov
mov
cmc
shrb
ficoml
mov
out
mov
loope
jecxz
movsl
lret
and
lahf
lcall
and
pop
pop
fcmove
bound
jp
divb
and
pop
or
test
jae,pt
xchg
out
loop
cmp
mov
xlat
push
mov
ret
push
stos
push
sbb
xchg
mov
fwait
movsb
negb
ja
jnp
movl
ret
mov
pop
popl
cmp
decl
int
sub
shll
movsl
pop
mov
adc
repnz
lcall
push
mov
cmp
sbb
loopne
or
push
outsl
add
lds
and
out
scas
and
lret
inc
stos
jo
cmp
test
arpl
fcomps
dec
sbb
pop
mov
cmp
imulb
or
mov
mov
sub
adc
pop
pop
aam
cmp
jge
lock
pushf
ljmp
or
bound
mov
fadds
sbb
and
sub
pop
fnstsw
cs
in
and
xor
push
push
push
sti
add
cmp
jne
push
bound
jp
dec
pop
adc
pop
sub
stos
cmp
sahf
mov
add
cmp
and
ss
std
sub
lahf
dec
dec
add
sbb
loopne
rcr
xchg
hlt
mov
sub
in
push
or
push
push
in
pusha
jmp
xchg
xchg
sub
or
jnp
sub
subl
stos
and
testb
scas
cmp
and
dec
inc
mov
jb
adc
sub
shl
clc
adc
pushf
lea
sti
lea
cli
insb
mov
les
and
shl
inc
sahf
and
jp
mov
shlb
and
outsl
add
test
xor
jo
pop
add
psubusb
cs
aaa
movsl
fildl
adc
dec
mov
push
jns
push
mov
lahf
repz
cmpsl
adc
dec
push
push
andl
icebp
or
daa
sbb
jno
movsl
icebp
les
cltd
or
xchg
in
ret
jg
add
push
rorb
or
mov
es
add
dec
in
cld
xchg
sbb
sub
test
jge
inc
pop
popl
dec
insl
push
add
cltd
daa
jnp
in
into
movsl
xor
ljmp
lret
sbb
jnp
icebp
iret
jl
fsts
mov
ljmp
xchg
cmpsl
push
jb
stos
sub
pop
repz
mov
xchg
inc
mov
cmc
addl
and
jl
test
cs
sbb
push
add
jmp
cmp
outsb
cmpsb
ja
and
push
cmc
lods
push
sbb
daa
gs
mov
fsubp
xor
adc
inc
stos
test
sbb
xor
and
and
fsub
add
and
cmp
mov
mov
stos
inc
loop
mov
sub
mov
pop
gs
adc
inc
or
ret
loop
fisubl
in
cli
cmc
push
cmp
and
into
mov
fldcw
mov
shll
mov
cs
add
lret
and
sub
add
sahf
jns
out
in
sbb
jl
sub
shll
push
pop
cmpb
div
pop
je
pop
push
lret
cmp
bnd
test
pop
int3
cld
cmp
fs
lret
imul
popf
movsl
sub
mov
pop
loopne
adc
movsb
mov
jne
fists
push
mov
cmp
dec
stc
jns
dec
and
gs
cwtl
dec
jl
xchg
pop
call
dec
pop
dec
stos
xorl
sbb
xor
std
pop
xor
xor
daa
jae
mov
xchg
adc
popl
fisubs
mov
outsl
repz
call
pop
pop
lea
jns
pop
cld
jne
mov
in
jl
jmp
fistps
push
cmp
sub
xchg
push
roll
mov
mov
xor
enter
outsb
aam
fs
pop
enter
pop
test
xor
push
mov
pushf
repnz
jg
dec
in
notl
es
pop
mov
loopne
sbb
cwtl
cmpb
sbb
insb
push
inc
sub
fcmove
clc
loopne
out
xchg
jne
nop
mov
jne
in
aas
inc
jp
fs
popf
lods
cs
and
in
sbb
ret
add
inc
imul
and
and
inc
xor
or
pop
adc
fstps
jg
xchg
mov
enter
mov
dec
or
xchg
mov
fnstcw
loop
add
cmp
pop
jge
xchg
dec
loope
filds
inc
mov
or
les
mov
push
enter
mov
push
inc
cli
ss
push
mov
and
pop
and
mov
mov
dec
aad
and
enter
pop
enter
rolb
adc
push
jne
push
xchg
fdivl
nop
cltd
pop
sbb
push
fdivs
and
cmpsb
pop
popa
sub
sarl
ficomps
pushf
mov
and
shl
dec
sub
mov
int3
sub
jmp
lret
and
pop
jae
fs
call
js
mov
adc
lcall
rolb
out
je
push
mov
jae
mov
sbb
adc
std
pusha
leave
test
dec
cld
sbb
shl
loope
and
lret
sbb
jge
test
rcrl
scas
lret
ret
std
test
mov
mov
mov
into
adcb
xchg
mov
adc
aad
fdivrs
test
jecxz
mov
and
jae
movsl
rol
repnz
or
repnz
mov
xchg
outsb
popa
pop
jb
sub
pop
sti
push
sub
fsubs
ds
mov
adc
in
jo
push
mov
dec
mov
aad
int
dec
pop
jb
lea
adc
mov
loope
jecxz
imul
addr16
in
add
push
rep
cmp
outsl
mov
lahf
cmpsl
dec
gs
xchg
cmp
push
loop
xchg
in
imul
adc
mov
mov
adc
aas
sbb
cltd
mov
out
out
jns
and
xchg
cmpsb
loopne
arpl
in
mov
sbb
or
shll
and
test
scas
cmpsl
cwtl
nop
sub
mov
lock
inc
cmp
xchg
push
inc
jg
jmp
sub
cmpsl
push
rol
sbb
je
cli
pushf
daa
cltd
mov
add
mov
sbb
shrb
arpl
inc
aam
mov
iret
and
ret
movsl
popa
fucomip
or
or
mul
int
in
cmp
fldenv
rcl
scas
outsl
xchg
jmp
call
push
mov
popa
dec
adc
int
pop
sahf
out
into
and
mov
data16
lret
xor
xchg
in
mov
mov
xchg
push
lret
sbb
mov
adc
jns
pusha
jle
xor
shrb
sti
mov
sbbb
or
test
fcmovb
movsl
loop
or
pop
in
mov
xor
cmp
add
mov
pop
dec
add
clc
cltd
mov
xchg
cmpsb
fsubp
rolb
lret
movsb
andl
ljmp
mov
sbb
pop
sbb
mov
sub
fxch
aaa
js
ror
push
or
test
loop
pusha
lret
ljmp
out
xchg
test
xchg
fcompl
and
shrb
hlt
movsb
lret
cwtl
scas
cmp
mov
rcrb
test
subl
divb
fisttpl
cmp
push
frstor
or
enter
xlat
jp
inc
inc
ret
sbb
cmp
dec
sbb
cmpsl
aaa
inc
ja
aas
jb
test
test
or
stc
lahf
ljmp
dec
js
jnp
dec
lea
dec
movsl
pop
mov
insl
notl
sahf
xor
fidivl
jmp
mov
and
xor
jle
mov
ret
adc
mov
pop
ret
adc
loop
push
fnstcw
cmp
dec
pop
stos
cmp
mov
bound
sbb
push
test
jnp
pop
push
lcall
fsubrl
mov
mov
pop
mov
add
inc
mov
scas
rclb
popf
or
xchg
scas
push
lcall
jne
je
popa
mov
jge
push
and
pop
cmp
mov
jg
lods
movsb
into
xor
mov
lcall
cmp
cmp
xlat
cli
add
cltd
jecxz
or
sub
push
lds
fsubl
and
cld
jmp
pop
xchg
nop
in
loop
mov
xlat
outsb
cld
into
mov
pushf
or
add
sbbl
insb
jg
xchg
push
jl
sbb
aam
rep
push
scas
std
sahf
stc
andb
leave
call
jae
cmp
xchg
push
sbb
cwtl
mov
push
mov
xchg
and
mov
int3
out
lods
mov
xor
faddl
and
mov
sbb
pop
xchg
insl
arpl
outsb
cmpsl
adc
cmpsl
cwtl
pop
je
ja
inc
adc
inc
les
sbb
adc
dec
mov
daa
mov
jb
in
cmpsb
imul
xchg
jo
ds
mov
adc
in
cli
and
mov
ret
sahf
inc
loope
pop
or
test
add
sbb
popf
mov
enter
push
iret
sbb
sub
rcrl
call
fmul
sub
xor
xchg
das
jb
rcrl
push
outsl
add
cltd
ret
ret
ja
inc
int
cmpsb
in
mov
sbb
rcr
mov
gs
add
cmp
out
jnp
cmp
cmp
or
shl
das
bound
push
int3
inc
mov
push
mov
pusha
xorl
mov
pop
out
pop
dec
push
xlat
sub
add
repz
push
push
imul
jne
mov
sub
bound
rcl
inc
loop
push
in
stc
xor
nop
jp
test
pushl
cmp
stos
or
xchg
jl
mov
adc
int3
push
adc
cwtl
idivl
jge
jmp
test
test
dec
in
cmp
and
adc
std
imul
imul
test
enter
pushf
adc
adc
pop
and
sbb
pushf
lds
and
adc
cmp
movsl
inc
daa
inc
ljmp
adcl
pop
sub
sbbb
inc
push
pop
add
mov
cwtl
imul
es
lahf
mov
sbb
mov
push
insb
cltd
pop
adc
mov
ror
adc
fstpt
insl
pop
inc
in
rolb
dec
pusha
and
mov
out
popf
into
ret
cmc
out
enter
test
mov
call
mov
cs
sub
sahf
cld
push
gs
mov
lcall
cltd
xor
repnz
lcall
loop
clc
push
test
jno
pop
cld
lock
pop
push
adc
cs
out
ret
sarb
arpl
pusha
cmp
in
movsl
push
xor
lcall
out
mov
add
mov
cmp
mov
jg
stos
insl
out
push
xor
int
push
rcr
mov
push
lret
sbb
adc
aad
loopne
jo
cmpsb
push
arpl
push
out
divl
jno
dec
mov
aaa
or
mov
in
fsubrl
jb
hlt
sub
ffreep
cltd
insb
pop
dec
stc
int
adc
rorl
inc
pop
cltd
cld
lea
test
insl
mov
cmp
xor
mov
sbb
dec
out
sbb
in
cmp
xchg
in
stc
js
jmp
pop
lcall
testl
add
enter
inc
aaa
pop
cmp
and
popa
outsl
push
andb
push
dec
shl
loopne
dec
inc
je
pop
ja
inc
push
mov
stos
inc
mov
test
cmp
cmp
out
pop
mov
push
repz
sub
or
fstl
mov
mov
jmp
and
inc
sbbb
ret
out
adc
icebp
dec
sub
out
sub
pop
push
hlt
xchg
xchg
stos
ljmp
xchg
jmp
mov
fmull
add
and
and
dec
push
aaa
sahf
lret
test
pop
jge
mov
pushf
fdivl
pop
fwait
push
pop
mov
mov
adc
jmp
push
es
mov
outsb
or
les
arpl
dec
add
xchg
adc
mov
sti
insl
and
jg
andb
negb
inc
push
pusha
sbb
sub
push
clc
fbstp
popf
mov
cs
push
adcb
mov
pusha
add
mov
fwait
jp
mov
inc
stc
add
mov
scas
mov
in
xor
push
or
mov
mov
sub
enter
jne,pn
icebp
adc
inc
add
rorl
in
mov
or
aad
jne
fcmovb
inc
sbb
mov
int3
test
jg
xor
dec
orb
xchg
cmp
adc
adc
imul
adc
sbb
sub
rolb
cwtl
call
jnp
xchg
dec
sbb
int3
daa
xor
cmc
jno
rcl
shl
xchg
movsl
gs
ret
daa
cli
outsl
inc
or
cmp
jge
loop
jb
aaa
mov
fsubrs
sbb
scas
in
adc
testb
sub
pop
movsb
fcoml
sbb
fs
loop
jecxz
aad
pushf
std
push
into
adc
inc
jne
inc
or
pop
in
das
out
dec
push
pop
aam
loop
not
rolb
sbb
push
dec
jge
mov
jl
jp
sbb
push
jl
and
jg
dec
mov
lahf
xor
lret
test
pop
and
xchg
mov
sub
dec
mov
test
orl
pop
push
aad
mov
add
lods
mov
std
add
arpl
cmp
fldenv
jbe
xor
cmpsl
in
jmp
pop
adc
add
inc
or
sahf
mov
shl
push
scas
and
jge
dec
nop
addr16
aas
fs
rorb
aas
adc
push
dec
dec
mov
cmc
outsl
add
mov
mov
fistps
adc
xchg
inc
lret
aam
or
cmp
mov
subb
jmp
xchg
cmpsb
push
mov
cmp
push
or
sbb
jae
cmp
mov
daa
pop
mov
jp
out
popa
lods
out
mov
jno
adc
mov
sub
outsl
fimuls
mov
sbb
cmp
or
pop
popf
xor
sbb
enter
xchg
mov
pop
mov
sub
imul
in
imul
sbb
jb
out
int3
push
lods
sub
inc
pop
jae
filds
or
xchg
test
arpl
xchg
stos
test
fcomi
dec
std
cwtl
and
cmp
mov
stc
pusha
jecxz
mov
decl
jle
addr16
adc
mov
cmp
in
sbb
push
push
xchg
fistpl
clc
daa
and
mov
cmc
fistpl
xchg
sbb
dec
imul
aaa
cmp
cli
mov
hlt
or
mov
das
fisubl
cmc
aam
sbb
out
hlt
and
out
daa
dec
das
dec
test
arpl
scas
repnz
es
popf
cmp
cltd
xor
xchg
cld
movsl
sbb
ja
cmp
popf
or
out
push
inc
ret
push
mov
xor
and
loopne
jae
inc
faddp
jge
dec
mov
test
test
imul
mov
jb
xor
xor
adc
sub
push
aas
inc
mov
enter
xchg
test
mov
aad
ljmp
out
mov
dec
or
int
int3
rcr
cmp
dec
sahf
mov
jb
popf
stos
push
cmp
add
pusha
fmulp
fisttpll
fwait
aas
pop
sti
vpaddusb
xlat
test
insl
sbb
ss
adc
pop
sbb
int3
jo
push
test
adcl
xchg
daa
sbb
adc
pop
jecxz
std
and
inc
ror
ss
mov
sub
jns
ret
or
cmp
shrb
add
dec
sarb
or
insl
add
pusha
xor
fnstenv
push
inc
outsb
mov
clc
jl
cld
sbb
ficompl
btc
jo
push
test
dec
add
sub
xor
pop
pop
adc
outsb
insb
xchg
mov
mov
sub
sbb
cwtl
es
int
test
or
mov
and
sti
dec
repz
inc
imul
sub
imul
push
inc
add
fldl
cs
out
lods
arpl
out
ja
imul
adc
adc
xlat
les
idivl
pop
xchg
movsb
in
dec
ret
adc
adc
ret
pop
scas
je
inc
lcall
jg
jbe
mov
arpl
adc
xorb
nop
aad
sub
int
sbb
mov
cmp
sbb
cltd
xor
stos
or
mov
jb
sub
xor
shlb
mov
test
xor
js
sbb
cmp
mov
in
insb
stos
jecxz
add
add
mov
stos
orl
ljmp
pop
bndldx
cmpsb
fiadds
or
lea
dec
adc
xchg
xor
pop
or
loopne
das
mov
sub
inc
imul
test
cmpsl
sbb
int
pop
push
sub
je
push
es
scas
inc
push
adc
adc
or
insb
mov
pop
arpl
xor
or
popf
iret
xor
sbb
xchg
jbe
adc
cwtl
shl
cmp
in
rep
and
push
js
xor
mov
aam
xchg
inc
daa
sub
lret
cld
sub
pop
rdpmc
add
in
mov
and
jl
jns
pop
mov
add
imul
push
mov
pop
xchg
jmp
fstpt
mov
aaa
push
clc
sub
xchg
imul
jg
jns
or
out
cmp
repz
sbb
test
es
popf
cmpl
mov
jne
sbb
dec
fsubs
add
push
lock
popa
lea
mov
jne
xchg
xchg
xor
orb
sbb
xchg
jge
pop
mov
mov
out
mov
jmp
cmp
mov
pop
lods
ds
cli
dec
fdecstp
lret
fisubs
stos
cmpl
fldenv
jmp
jecxz
sarb
inc
mov
lea
push
rcl
lea
push
jp
xchg
sbb
test
call
les
ss
pop
sahf
lcall
data16
add
sub
hlt
mov
push
pop
push
loope
pop
insb
pop
sub
sbb
sbb
repz
push
xchg
aad
xor
jecxz
inc
mov
aam
jne
mov
cmp
out
mov
stos
iret
int3
rcl
mov
das
pushf
push
cltd
pop
je
push
push
hlt
lret
mov
add
mov
add
dec
pop
push
or
mov
xchg
xlat
mul
mov
iret
nop
dec
in
mov
inc
clc
sub
add
add
xor
popw
stos
pop
push
push
call
aam
test
lret
lret
ret
jecxz
pop
pushaw
iret
mov
popa
int3
dec
loope
bound
loopne
xor
dec
cwtl
or
int3
add
cli
adc
jo
sbb
hlt
mov
idiv
mov
push
cmc
push
adc
add
jp
jle
movsl
sub
ljmp
add
add
neg
jecxz
out
nop
adc
fcompl
sbb
fs
out
pusha
mov
pop
in
mov
gs
jl
xchg
addl
cltd
clc
mov
add
or
inc
sbb
cs
xlat
ljmp
sbb
mov
sub
jmp
popa
mov
xchg
int
jl
test
push
sbb
stos
out
lds
cmpl
neg
fwait
fs
ljmp
mov
bound
jge
out
je
mov
scas
or
dec
mov
and
mov
scas
outsb
mov
push
rolb
loopne
lods
pop
xchg
mov
adc
dec
add
aam
mov
int
stc
jne
outsb
data16
jmp
adc
lock
mov
pop
or
sbb
add
add
stos
mov
das
and
xor
pusha
jne
jge
xlat
fisttpl
pop
lds
pusha
stos
adc
popf
loopne
pop
and
jle
insb
outsb
cmp
in
cmpl
pusha
lahf
stos
pop
rol
pop
lea
cmpsl
stos
rcrl
xor
clc
aam
cmpsb
xor
rclb
push
cmp
scas
aam
ffree
sahf
mov
shlb
push
sbb
xor
stc
cltd
add
sub
iret
and
add
and
jae
int
popw
int3
dec
cmp
sar
call
in
lret
fnsave
loopne
push
add
ljmp
push
bound
mov
js
mov
lcall
inc
pop
push
popa
es
std
cmp
mov
lret
sbb
icebp
add
das
mov
mov
call
xlat
icebp
sbb
xchg
dec
xor
cmpsb
xchg
icebp
mov
lods
roll
dec
adc
sbb
cld
pushf
dec
pop
sub
dec
and
xchg
push
stc
sub
sub
add
lret
and
lea
or
cmpl
mov
test
and
call
aad
test
xorb
sbb
pop
mov
shlb
decb
mov
push
mov
fistps
cmp
sbb
popa
loope
out
add
sub
jg
test
clc
dec
push
pushf
cmp
sti
outsb
js
xchg
pushf
filds
sub
jo
test
clc
add
sbb
jns,pt
pusha
xchg
dec
jnp
mov
subb
mov
dec
dec
pushf
shll
sbb
pusha
sbb
push
ror
hlt
ja
aam
mov
pop
in
popf
popf
or
cmp
repz
test
notb
sub
cmpsb
mov
cs
adc
cmc
popf
gs
mov
jp
rorl
push
sbb
negb
sbb
dec
andl
push
or
add
sbb
push
add
ret
sub
lret
outsb
xchg
ljmp
cmp
sahf
push
in
and
mov
add
lahf
hlt
sub
jg
and
idivl
je
enter
push
aaa
cmp
loopne
fmuls
inc
fldt
mov
mov
cld
sub
mov
mov
mov
in
cmp
sub
je
insb
in
inc
ret
cs
cmpsb
pop
and
ljmp
mov
and
outsb
lret
imul
shl
lock
add
sub
scas
outsl
push
out
xor
mov
outsb
das
inc
add
and
call
mov
out
xlat
or
adc
push
mov
mov
hlt
mov
popf
hlt
sub
idivl
fildll
dec
fsts
pop
enter
std
cld
daa
iret
mov
sahf
xchg
int3
filds
pop
fldcw
jb
mov
dec
out
xchg
ljmp
lods
or
adc
or
test
int3
push
es
adc
clc
popf
cmpsl
nop
and
lret
lods
add
push
jmp
push
sbb
cld
imul
pop
adc
je
sahf
xchg
dec
adc
jne
xor
dec
jb
fisttpl
cltd
xor
movsl
bnd
jmp
inc
fs
mov
sub
fprem
in
mov
scas
popa
dec
ret
loop
mov
fdivl
dec
mov
or
lds
in
cltd
inc
cmp
or
jge
loop
repnz
push
inc
push
sbb
and
outsb
push
je
jb
inc
sbb
lahf
cmp
gs
gs
mov
arpl
push
fs
jecxz
mov
sbb
adc
mov
xchg
or
sbb
pop
arpl
icebp
out
xor
xchg
inc
mov
pop
pop
test
jbe
pop
add
mov
jae
mov
sti
notl
outsl
pop
add
dec
in
jnp
mov
sbb
adc
pop
icebp
les
outsb
lea
stos
fdiv
mov
or
in
inc
push
jecxz
sarl
mov
imul
sbb
pushf
mov
mov
sarb
lds
out
xchg
adcb
mov
dec
add
cwtl
push
leave
ret
jne
mov
negb
out
lds
add
jo
stos
pop
xor
or
and
jle
daa
jnp
push
or
fldcw
add
js
scas
fwait
cmpsl
sbb
mov
dec
popa
inc
shll
fiaddl
mov
sbb
adc
cmp
pop
xor
aaa
push
les
mov
jb
xor
in
push
shll
popf
aaa
repnz
add
xchg
mov
rcll
test
shll
sub
es
adc
cmp
stos
test
inc
adc
mov
cmp
pop
add
xor
testl
es
pop
push
cmpsb
jae
out
push
stos
mull
mov
iret
or
or
loope
repz
inc
mov
lret
mov
xor
cmc
jp
daa
push
inc
stc
sbb
test
jle
xchg
call
rcrl
mov
stos
jbe
cmp
pop
cmp
or
mov
xchg
xchg
mov
mov
sti
jmp
aaa
push
bound
pop
pushf
or
rclb
addr16
shl
jle
in
push
mov
cli
mov
aad
jne
nop
shll
sub
lahf
push
fsubrp
roll
xchg
sub
jle
mov
enter
cmp
nop
vpconflictd
pop
mov
stos
icebp
out
arpl
loop
push
adc
faddl
mov
out
imul
and
imul
cmpsl
es
push
pop
pop
jl
mov
iret
hlt
xchg
fistl
add
out
jns
mov
adc
dec
jmp
test
sar
jmp
mov
xchg
inc
pop
mov
sarl
movsl
jmp
jo
inc
adc
mov
inc
les
stos
stos
mov
mov
fld
sub
pop
leave
xor
jl
xchg
fsubl
arpl
jns
js
lds
sbb
sbb
pop
push
cwtl
mov
clc
shrl
mov
lcall
mov
loop
imul
mov
cmp
xor
ja
mov
sar
mov
push
push
cs
negb
pop
negb
stos
daa
sti
scas
xchg
xor
xchg
cld
xor
dec
or
pop
xlat
inc
into
es
push
call
test
sub
mov
inc
push
sbb
jb
stos
or
jecxz
sub
pushf
jp
data16
or
cltd
in
lret
arpl
stos
jo
fidivl
jne
xchg
nop
and
sub
mov
stos
xchg
push
mov
cmpl
or
dec
enter
jno
in
cmp
sub
xchg
pop
dec
outsb
sbb
cmp
testb
repz
mov
nop
scas
xor
or
je
pop
mov
in
out
pop
push
jae
push
movb
fadd
pop
idivb
pushf
ret
int3
stos
xlat
xchg
scas
test
inc
pop
out
pushf
rorb
imul
inc
psubb
orb
pop
adc
xchg
push
dec
fsubr
jmp
jle
fs
aad
pop
add
cld
fists
or
jl
aam
mov
test
push
out
in
icebp
gs
dec
mov
js
mov
lods
jb
add
push
aam
and
mov
and
push
movsl
mov
ds
push
data16
inc
sbb
jbe
and
adc
fwait
addr16
sub
jns
jl
cmp
sub
arpl
fistps
mov
cmp
dec
sbb
rol
inc
pop
xor
dec
fdivl
push
dec
ret
pop
or
addl
lret
outsb
or
dec
jle
mul
add
div
cmp
ja
mov
cld
arpl
cmp
and
addb
and
insb
cmc
repz
push
lods
scas
ljmp
push
loop
mov
mov
cli
dec
aas
pop
stos
or
sbb
xor
hlt
out
push
in
dec
jbe
pop
adc
mov
fwait
xchg
mov
rep
adc
fcomp
xchg
lahf
mull
mov
mov
inc
out
sbb
mov
fst
dec
push
ljmp
or
mov
in
stos
in
test
pop
rolb
lret
add
push
xor
cwtl
divb
in
mov
in
push
mov
adc
jl
xorb
or
mov
inc
insl
sub
jecxz
cmp
imull
xor
negb
rcrb
cld
pop
and
cwtl
pusha
and
or
leavew
repnz
incl
out
in
in
repz
sub
pop
xor
pop
pop
push
mov
add
mov
adc
ja
cmp
xor
test
dec
add
inc
fstl
mov
stos
dec
pop
mov
jmp
cmp
js
sub
mov
lret
jb
mov
xchg
push
add
insb
cwtl
cltd
dec
stos
subb
std
mov
nop
pop
push
sbb
shlb
sbb
adc
jnp
icebp
out
pop
pop
or
fdivl
clc
into
clc
ret
ja
jecxz
cmp
das
mov
mov
imul
sbb
jnp
andb
sub
lret
mov
adc
jnp
cmp
and
cmp
sar
push
test
xor
fldcw
shl
xor
leave
pop
jg
ljmp
dec
jmp
pop
gs
pop
jns
jns
cmpsb
cld
out
in
out
push
xchg
push
loope
pop
imul
hlt
or
sub
ret
je
fwait
lea
fldcw
sub
xor
lods
cmp
into
je
xor
bound
lods
mov
pop
fcompl
mov
pop
mov
add
repnz
cmp
inc
cltd
scas
pop
push
adc
xorb
jno
cs
enter
rolb
xor
or
inc
push
mov
jecxz
loopne
loopne
mov
lods
int3
adc
xlat
push
jle
add
lret
cld
inc
rorb
loop
push
pushf
sub
loop
pop
xor
jge
pop
jb
xchg
ret
mov
mov
lea
aaa
in
aaa
mov
dec
cwtl
or
and
xchg
daa
pushl
fwait
jbe
jns
outsl
pop
xor
out
pusha
test
adc
std
push
sub
lahf
out
push
loop
mov
mov
and
aaa
cmp
pop
jl
adc
popa
icebp
sub
sub
mov
sbb
lret
inc
cmc
test
push
add
aad
xchg
lret
add
dec
in
dec
rorl
out
les
pusha
out
and
inc
or
pop
inc
cltd
push
sbb
xchg
adc
std
fcomps
inc
into
adc
jg
push
sub
mov
mov
icebp
daa
mov
jge
mov
popa
mov
add
outsl
sbb
or
inc
or
dec
lock
mov
xchg
movsl
pop
lea
jo
fs
fisubrs
pop
xor
push
jl
xchg
cmpsb
dec
mov
push
insl
nop
cmp
add
dec
enterw
das
rep
mov
mov
inc
adc
clc
notb
fsubrs
lock
xor
jo
fsubl
pushf
imull
cmp
fwait
pop
mov
imul
add
mov
jg
in
shl
movsl
jae
int
leave
subl
fs
pop
adc
insb
inc
mov
sbb
imul
dec
push
arpl
mov
xor
cli
push
mov
push
mov
dec
ja
add
jmp
in
mov
sub
inc
pop
mov
imul
test
jp
negb
xchg
fcoml
jg
mov
pop
mov
mov
cmp
idivb
sub
sbb
pop
aaa
xor
add
mov
loope
pop
fcmovnu
stc
insb
das
inc
cwtl
mov
jmp
ffreep
cltd
movsb
xchg
push
cmpsb
add
je
mov
fisttps
cltd
mov
xor
ljmp
jmp
gs
cmp
cmpsb
out
pop
bound
and
jno
loope
fstps
iret
ficoms
in
jg
mov
mov
mov
sahf
mov
or
out
or
shrb
pop
jge
xchg
xchg
das
shlb
push
andb
xor
lcall
lret
or
adc
pop
out
sti
loopne
xchg
jne
pop
lcall
cwtl
mov
push
push
incb
lds
das
xchg
das
popf
psubsw
ror
std
sbb
xor
outsl
cmp
out
shrl
jbe
pop
and
sub
shl
xchg
scas
add
out
inc
stc
out
lret
and
xlat
int3
scas
xchg
adc
jecxz
out
push
jnp
fisubs
rcrb
ja
movsl
cmp
cmpl
out
jmp
das
jae
popl
or
loope
lahf
lret
punpcklbw
cs
rcrl
pop
stc
ja
push
mov
das
jecxz
sbb
mov
push
pop
add
imul
shrl
mov
cld
cld
mov
mov
stos
sub
sti
pop
or
pop
lcall
jae
dec
imulb
outsw
in
xchg
jmp
shl
xchg
sbb
add
scas
or
pop
jl
loop
clc
test
leave
dec
imul
repz
xchg
frstor
mov
loopne
inc
or
xchg
ds
pop
push
call
or
inc
adc
loope
xchg
shll
lret
iret
lds
mul
js
movsb
ficomps
mov
dec
add
inc
pop
fwait
cmpsl
mov
xlat
idivl
out
jo
scas
inc
leave
hlt
pushf
adc
call
ret
dec
test
mov
shrl
enter
mov
lahf
pop
mov
cmp
in
xchg
sub
jb
jae
shlb
pop
xchg
cwtl
dec
stos
jmp
dec
nop
stos
mov
xor
pop
and
ljmp
jecxz
dec
lods
mov
cmp
mov
push
jge
cmp
std
call
sbb
push
subl
mov
mov
sub
jg
mov
fistps
xor
bound
ja
mov
jae
cmpb
std
ja
rclb
loopne
xor
loop
mov
insb
cltd
imul
mov
movsl
sbb
ret
xor
lret
cli
xchg
hlt
adc
mov
mov
pop
addr16
lock
clc
ficomps
mov
mov
dec
lret
fucomip
sub
mov
out
push
fwait
aaa
xor
ret
hlt
stos
and
mov
xchg
push
int3
lret
data16
out
and
jp
mulb
push
gs
or
aam
jae
lret
orb
push
xchg
add
or
mov
mov
pop
jns
mov
repnz
sbb
rorb
nop
jge
sbb
or
cmp
sub
push
and
mov
clc
adc
push
and
jle
push
movsb
imul
imul
data16
or
adc
mov
or
cmp
cmp
mov
out
ljmp
mov
push
imul
stos
call
fnstsw
jp
cmp
pop
push
arpl
push
idivl
mov
stc
fs
out
js
repnz
in
mov
lret
lods
xchg
push
icebp
cld
test
inc
xorb
adc
test
insl
insb
mov
fstpt
xlat
mov
pushf
outsb
xchg
inc
mov
mov
idiv
iret
ret
int3
pop
sti
adc
sti
xchg
xor
out
cs
ljmp
sub
mov
mov
cltd
pop
jbe
mov
and
push
into
test
adc
cmp
std
xorl
mov
dec
sbbb
insl
mov
ss
bound
inc
ret
ds
xor
sbb
sarb
pushf
loopne
sub
add
add
cmpsl
cli
add
adc
aam
mov
lock
dec
fdivr
mov
mov
mov
push
inc
sub
and
movsl
movl
cmp
or
pusha
scas
add
gs
push
movsl
lods
mov
cmp
and
ret
mov
dec
mov
ljmp
push
in
sub
cmp
push
es
bound
jge
jl
outsb
adc
mov
ficompl
addr16
leave
jb
mov
xchg
cmpsl
push
bound
clc
xor
aad
jge
mov
xchg
rol
pop
ds
lods
push
sub
es
inc
cmp
xor
adc
adc
icebp
adc
cltd
ret
push
mov
xor
in
test
loopne
adc
xchg
mov
rcl
incb
out
cmp
mov
movsb
aam
sbb
jecxz
mov
adc
add
dec
jle
ret
xchg
or
xchg
loope
nop
daa
adc
stos
jo
mov
stos
dec
and
add
push
push
fsts
fisttpll
push
jno
js
ficoml
mov
cmp
in
and
call
mov
movzwl
dec
xor
lcall
sub
std
dec
pop
dec
loop
iret
lcall
leave
or
pushf
adc
lods
cmpsb
sbb
and
sub
fdivp
imul
dec
test
push
stc
das
push
fstps
mov
jl
pop
dec
jg
ds
in
mov
bound
es
in
xchg
fidivrl
xor
xor
aaa
jl
ljmp
scas
and
xor
orb
lds
mov
aam
sbb
sbb
inc
cmp
movsl
mov
outsl
jge
push
and
in
js
jnp
jl
jge
insb
in
xor
dec
in
sahf
lea
dec
inc
adc
arpl
and
pusha
movsl
cld
xor
cmp
add
movsb
inc
jge
stc
cld
fsub
or
jnp
pop
jle
sbb
jno
cmp
adc
int
cmp
xchg
push
pop
sub
inc
add
xchg
fmul
sbb
ret
xchg
jle
or
xor
jb
je
mov
jecxz
scas
gs
popf
xor
add
sub
sub
adc
push
push
or
jg
add
push
bound
cld
jno
cmp
lods
sub
jmp
std
cmp
stc
lcall
add
inc
out
pop
out
sub
arpl
jp
mov
out
inc
imull
add
into
xor
je
fsubrl
and
in
js
inc
out
dec
or
inc
dec
lods
inc
mov
cmp
cwtl
mull
dec
mov
ficoms
push
xchg
bound
cmp
sbb
jp
pop
fsubrs
inc
shl
pop
pusha
xor
dec
ja
mov
jo
test
and
lea
jb
jecxz
popf
imul
jne
fstl
je
and
push
movsl
mov
sbb
test
cli
lret
jns
js
leave
cld
push
xchg
insl
sub
push
je
sahf
lods
mov
insl
pop
das
mov
ja
mov
and
imul
adc
leave
pop
js
push
add
jmp
sbb
push
cmp
aas
or
mov
pop
outsl
mov
lock
push
and
jle
cmp
mov
xor
pop
or
jbe
popf
das
mov
cmpb
cwtd
jbe
scas
push
imul
xchg
gs
and
pusha
rcrb
in
ljmp
push
mov
jl
shrb
and
push
imul
sbb
inc
pop
push
loope
pop
repz
arpl
fcoml
dec
sbb
ljmp
out
add
jp
orl
add
xlat
adc
cmp
dec
xchg
stos
fsubl
aas
mov
frstor
popl
dec
push
or
xchg
mov
push
adc
mov
popa
int3
rcrb
lcall
subl
shll
mov
adc
push
mov
test
loopne
pop
and
add
pop
mov
rclb
push
add
cmpsl
push
xor
xor
pop
mov
pop
je
repz
addr16
xor
jmp
jns
pusha
dec
insl
test
mov
push
popa
arpl
inc
ds
into
xor
loopne
mov
and
je
das
and
pop
mov
ds
inc
inc
pop
xchg
and
roll
jne
mov
jp
test
jnp
popa
xchg
test
scas
ja
mov
and
sub
dec
shll
xor
adc
add
adc
pop
jge
test
pop
imul
jge
mov
imul
scas
insl
ljmp
enter
mov
jo
jno
jp
jle
push
cs
mov
aas
mov
xor
push
mov
jge
mul
sbb
leave
scas
jae
or
add
mov
mov
jmp
push
pop
inc
push
pushf
mov
inc
pop
sub
or
sbb
das
cmp
inc
aad
and
inc
das
add
in
jno
sbb
rcrl
scas
orb
mov
pop
movsl
lea
pop
jno
dec
or
movsl
mov
push
jno
add
mov
pop
cwtl
mov
ljmp
sub
mov
dec
mov
xchg
andb
addr16
mov
inc
repz
jbe
ret
push
testb
cmp
adc
into
test
aad
das
xchg
das
jl
mov
cmp
cmc
push
dec
test
mov
or
add
sar
or
add
lahf
rclb
push
pop
dec
jne
lods
jo
sub
pop
mov
lret
dec
push
cmp
mov
xchg
notb
xchg
mov
fwait
cmp
int
mov
aam
frndint
ss
jmp
sub
inc
mov
push
cld
push
mov
or
lahf
aad
mov
ss
test
in
push
fdivr
xor
pop
sub
cmpsb
imul
xor
shrl
cmc
mov
adc
in
enter
jecxz
lret
test
pop
xlat
xor
mov
rolb
xchg
xchg
push
xor
mov
fsubrs
dec
jmp
push
fs
mov
icebp
mov
sbb
sbb
fcomps
pop
ret
push
cmp
cltd
int3
sub
mov
pop
arpl
or
adc
mov
mov
data16
test
dec
sahf
lret
ss
lcall
movaps
out
jns
insl
dec
jecxz
fs
inc
outsl
clc
insb
xor
fdivp
insb
repz
clc
popa
es
adc
repnz
sub
or
mov
in
mov
cwtl
pusha
ret
inc
cwtl
jecxz
push
stos
insl
and
xchg
push
mov
clc
imull
lods
ret
movsb
mov
movsl
mov
pushf
rcrb
mov
mov
sarb
pusha
lock
jmp
push
imul
stos
xlat
push
xchg
shr
mov
arpl
jl
mov
push
mov
push
sbb
jnp
scas
and
stos
adc
aam
dec
test
stos
jnp
outsb
mov
movsl
cmp
jl
in
subl
and
lds
or
outsl
lret
leave
mov
dec
pop
in
lahf
adc
pop
xchg
mov
add
fmuls
jns
mov
mov
dec
jns
in
or
jle
inc
dec
outsb
popa
push
sbb
mov
das
out
mov
inc
shrb
push
or
jge
enter
std
add
mov
dec
jl
jns
jge
fcomps
mov
out
mov
hlt
fsub
leave
andl
movsl
cmpsb
and
fs
popa
mov
inc
mov
jb
bound
ss
xor
gs
push
stos
inc
mov
jl
orl
jno
or
jo
cmc
push
jle
sbb
push
inc
xchg
into
push
push
aaa
cmp
dec
js
mov
fld
push
mov
push
shll
cmp
mov
mov
sub
cs
sbb
pop
push
cmpb
loop
jecxz
fucom
pop
mov
and
outsl
mov
xor
rcrl
cmp
pusha
xor
xchg
or
push
mov
jl
fcmovbe
addr16
cli
in
xorb
fimull
das
mov
jg
add
sti
enter
push
movsl
js
xchg
call
or
mov
scas
mov
out
xchg
inc
sbb
jmp
repnz
cli
hlt
push
jmp
cmp
fstpt
jno
lds
mov
mov
mov
sbb
in
inc
inc
int3
in
jle
cmp
out
nop
pop
push
lods
pop
imull
mov
out
or
ret
inc
sbb
push
push
movzwl
sbb
inc
arpl
lods
pop
cs
or
popa
cltd
jl
repz
out
dec
sub
or
clc
mov
test
push
popl
mov
cmpsl
cmc
dec
mov
cld
jns
in
dec
icebp
add
leave
sbb
mov
cmp
mov
cmc
sub
test
lea
jg
call
je
jo
scas
aam
mov
pop
jl
cmp
aaa
movsl
pushf
inc
pop
xor
stos
movsl
mov
fdiv
std
cmp
aam
or
xor
push
xchg
cs
imul
mov
mov
dec
repz
ljmp
cmp
xchg
pop
add
test
xchg
xor
mov
lock
es
add
mov
out
mov
mov
inc
testb
loopne
cmp
xor
rolb
lods
mov
mov
rolb
test
sete
cli
mov
add
insl
adc
testb
inc
nop
nop
ret
mov
in
xor
iret
dec
in
mov
pop
lods
adc
in
subb
inc
addr16
out
jl
jnp
xchg
sarl
mov
mov
pop
insb
push
ret
push
stos
pop
in
lods
xchg
icebp
into
fisubs
out
repnz
enter
xchg
or
xor
ret
dec
leave
cmp
push
adc
dec
inc
inc
int3
cltd
xlat
stc
mov
in
cld
popf
lahf
add
add
pop
lcall
sbb
in
loopne
mov
imul
mov
inc
imul
or
scas
in
xor
ljmp
dec
cmp
xchg
mov
xchg
daa
outsl
sahf
dec
je
fldl
icebp
sub
mov
adc
xchg
sahf
das
jb
xor
add
sbb
adc
push
std
sti
lods
cli
lods
pushf
pop
int
into
scas
add
mov
aas
pop
xchg
adc
sbb
test
scas
fs
mov
ret
mov
xor
lahf
lcall
sahf
jp
lea
fs
scas
ficompl
insb
adc
or
lock
inc
stc
jl
ljmp
repnz
into
lret
sub
scas
cmp
mov
notl
pop
sti
lods
repz
adc
jmp
sbb
push
outsb
loopne
xchg
add
mull
lea
dec
dec
push
cmpsl
hlt
das
lds
mov
cmpsl
int
or
xchg
stos
and
mov
jmp
inc
add
popa
mov
lock
cmp
mov
cltd
notl
rcll
lret
pusha
in
push
pop
icebp
lea
cwtl
sbb
ja
stc
inc
adc
xlat
push
mov
or
in
scas
inc
enter
push
scas
or
push
ret
sbb
push
xor
fdiv
sar
in
and
xchg
cs
ds
mov
ss
xor
mov
and
ret
hlt
das
popa
pop
xor
outsl
rcll
lea
rcl
mov
push
adc
jb
adc
inc
mov
nop
pop
add
out
xchg
push
ljmp
outsb
lret
adc
push
xchg
in
push
movsl
loopne
xchg
clc
fsubs
push
adc
ret
jmp
push
popf
jae
scas
sbb
clc
pop
add
dec
orb
out
mov
lcall
adc
nop
lret
test
icebp
mov
jnp
rdmsr
sub
sbb
inc
repz
xor
pusha
jb
cmpsl
cmp
test
das
jnp
and
jl
test
add
in
inc
popf
ss
leave
jnp
test
lret
push
adc
out
sub
dec
je
and
aam
sub
or
push
dec
leave
jnp
xchg
mov
sub
mov
call
loopne
ret
outsl
pushf
shll
lea
mov
inc
das
jle
bound
fwait
sbb
sub
mov
clc
lods
fisubs
mov
or
dec
ss
dec
push
ja
mov
mov
dec
fstps
xchg
fisubl
int
adc
dec
gs
sbb
adc
or
jo
and
jle
pop
sahf
lahf
cltd
repz
or
sub
int
dec
mov
cmp
imull
push
test
ss
fdivs
xchg
ret
data16
xchg
orl
sarl
leave
inc
mov
roll
push
lret
jnp
lcall
or
stos
mov
cmpsl
mov
mov
mov
mov
out
push
mov
das
fiaddl
cmp
xor
jo
pop
pop
jmp
adc
sub
lcall
inc
insl
push
pusha
mov
arpl
dec
mov
inc
sub
fs
jbe
dec
icebp
pop
cmp
lods
adc
push
inc
mov
pop
pushf
push
push
xchg
inc
sbb
idiv
iret
add
cmc
cmp
inc
cwtl
mov
pop
fiaddl
in
fnstenv
mov
dec
mov
in
push
lods
orl
fxch
dec
xor
sbb
inc
in
test
insb
fwait
imul
jl
mov
inc
repnz
fstpl
cmpsl
fcoml
mov
cli
aaa
mov
stos
sbb
data16
stc
out
and
fildl
mov
js
cli
adc
dec
ficoml
pop
mov
lods
int3
out
dec
mov
cmp
sbb
call
pop
int3
or
sar
dec
adc
add
andl
xorb
sbb
xor
sub
outsb
xchg
scas
push
pop
iret
data16
mov
jae
or
add
sbb
mov
in
cmp
and
test
je
dec
xchg
and
inc
push
addr16
xor
mov
stc
cmpsl
or
xor
js
jno
push
and
ja
imul
cmp
xchg
jge
push
jg
jmp
add
xlat
daa
popa
push
divb
jne
popf
loope
sbb
outsl
adc
les
xor
xor
dec
push
push
jp
ffreep
test
cmp
mov
in
jg
in
into
pop
aas
jle
adc
jmp
pop
int3
mov
fisubs
ss
aaa
mov
jno
sub
cmpsb
adc
sub
or
sahf
mov
cli
xor
add
pop
orl
pop
dec
mov
lods
cmp
mov
xchg
out
sub
mov
dec
out
aad
cld
cwtl
outsl
push
xchg
jae
inc
shll
cmpsb
sub
out
mov
and
mov
sbb
adc
or
comiss
mov
sbb
lods
movsl
sar
mov
dec
clc
cs
mov
jge
sarl
push
xor
cmp
daa
nop
sbb
jae
mov
or
cmc
mov
ss
add
inc
mov
cmc
pop
in
adc
daa
loop
fnclex
aam
jo
or
inc
adcl
mov
or
fwait
dec
push
dec
test
mov
jbe
cwtl
js
mov
orb
cmpsl
sbb
stos
shll
push
mov
cmp
lock
ret
jns
jecxz
sub
pop
push
xchg
js
mov
and
cmp
bound
cmp
xchg
shl
test
call
sbb
dec
push
in
inc
repnz
mov
icebp
lock
and
mov
lods
pop
in
xchg
ljmp
out
call
dec
notb
sti
add
sbb
cmp
subb
clc
cmp
hlt
and
dec
push
sbb
dec
ss
dec
subl
sti
mov
mov
xchg
inc
mov
sub
cmp
scas
cmp
xchg
lret
icebp
and
cmp
aam
loop
cs
xchg
addr16
cmp
dec
add
fmulp
mov
popf
mov
cmp
pop
mov
mov
mov
xor
push
insb
repnz
jo
orb
dec
push
sub
test
add
xchg
jae
xor
rorl
push
or
fsub
bound
or
sbb
and
rcl
jg
or
mov
std
xchg
pushf
jno
xlat
mov
mov
xor
addr16
ret
dec
add
pop
mov
adc
push
shrl
mov
loop
popf
jno
out
shl
pop
sub
call
call
xor
xchg
push
sbb
dec
sbb
pop
test
and
push
test
add
sbb
pusha
push
es
xchg
adc
jns
dec
pop
ffreep
iret
add
xchg
cmpsl
inc
out
and
stc
dec
movsb
sub
leave
fiadds
xlat
mov
fbstp
adc
mov
pop
mov
filds
adc
push
aad
movsl
test
in
lods
insl
xor
lock
call
jg
cltd
mov
imul
and
loope
pop
inc
notl
shr
adc
iret
push
lds
lret
popa
shlb
aam
sub
jb
out
pop
inc
xchg
inc
clc
fst
andl
lea
fisttpll
jmp
dec
icebp
pop
mov
mov
mov
xor
imul
fneni(8087
push
outsl
stc
mov
push
push
adc
ret
stos
xor
les
das
or
mov
pop
cmp
lea
push
out
xchg
cmpsl
sbb
sarl
sbb
mov
imul
dec
outsb
jbe
aaa
push
js
hlt
xchg
add
out
xchg
lock
jmp
inc
and
out
mov
inc
jns
jge
icebp
mov
and
cld
inc
push
hlt
or
sbb
or
pop
and
and
jno
call
leave
dec
in
mov
and
js
mov
fcomps
or
mulb
dec
mov
dec
scas
cmp
cli
xchg
jo
push
jecxz
inc
sub
xchg
sub
in
jne
dec
rorl
or
cli
fcompp
pop
in
ret
dec
scas
mov
add
cmp
setne
and
ffree
int
movsb
lods
ficompl
iret
sub
lods
mov
cmpsl
sub
sahf
add
fldcw
stc
inc
or
nop
sahf
imul
sbb
pop
fs
in
std
icebp
xchg
hlt
sbb
sub
dec
loopw
dec
into
sahf
mov
push
pop
in
pusha
nop
in
out
and
push
push
lret
cmp
popf
dec
or
dec
out
ret
push
mov
bnd
jno
fs
jno
or
pop
xchg
jbe
loopne
bswap
pop
stc
loope
push
dec
repnz
mov
xchg
fwait
lods
aaa
nop
or
scas
loop
test
aas
add
ja
in
xor
pop
cmp
repnz
sahf
fldt
and
mov
pop
jnp
popa
jge
je
adc
pop
sub
add
jp
aam
dec
data16
xchg
in
push
aam
add
sti
add
inc
jns
pop
adc
add
jl
jbe
imul
add
fwait
inc
outsl
aas
stos
lcall
jbe
lea
jae
repz
addl
and
test
or
xchg
mov
imul
test
imul
or
sbb
ljmp
outsl
fistps
mov
adc
iret
or
xchg
lcall
jo
or
scas
pop
stos
ret
jb
mov
jns
outsb
pop
jmp
mov
test
out
or
shufps
jnp
push
movb
adc
cmp
lcall
cmpsb
loope
dec
pop
jecxz
and
add
sbb
cmp
stc
movsb
mov
add
int3
ret
stc
jp
imul
push
pop
xchg
bound
pop
pop
lret
fdivs
mov
int3
iret
sub
push
xchg
call
mov
rorl
add
dec
enter
dec
jg
and
stos
push
fdecstp
and
mov
xor
cmc
pop
jne
sub
mov
pop
xchg
xchg
push
outsl
push
aas
sbb
pusha
test
scas
ficomps
mov
pusha
mov
lahf
pop
ret
rorb
sbb
mov
cmp
mov
and
jmp
pop
lock
es
divb
sub
aam
jns
xchg
ljmp
rcr
inc
and
mov
clc
shlb
icebp
lahf
jle
jle
lea
adc
cmpsl
fbstp
cmpl
andb
lahf
lret
mov
inc
in
cmc
lds
out
mov
xchg
dec
mov
into
dec
pop
sbb
jecxz
cltd
jae
inc
sbb
insl
mov
pop
sahf
loope
dec
inc
cmp
into
in
dec
pushf
pop
icebp
ds
pop
test
xlat
xor
add
aam
dec
inc
add
dec
int
nop
int3
pop
xor
mov
add
mov
or
pop
cld
stc
mov
mov
scas
mov
xchg
inc
shll
iret
xchg
pop
sub
mov
mov
inc
jl
jbe
shll
repnz
xor
fidivrs
out
aam
lahf
xchg
mov
fstps
arpl
inc
add
fidivrs
pop
mov
xchg
xor
mov
push
out
scas
addr16
loop
adc
and
fwait
ss
or
arpl
push
push
adc
cld
addr16
ljmp
loope
icebp
mov
aas
sub
ljmp
xchg
and
imul
cmp
ja
ror
sub
fsts
test
in
fimuls
pop
cmpb
sub
sbbb
cmpsb
cmp
ret
pop
and
ret
out
mov
sub
inc
mov
ja
sti
xor
faddl
mov
mov
iret
inc
stc
imul
in
or
pusha
cmp
push
mov
ds
nop
pop
inc
adc
clc
inc
loop
test
nop
mov
pop
xor
lock
shll
shl
sbb
adc
inc
cmp
inc
lcall
lea
mov
add
sti
and
mov
enter
pop
jl
xorb
mov
push
mov
into
add
push
jae
sbb
test
add
das
data16
in
sbb
inc
adc
inc
jo
mov
adc
mov
scas
xor
pop
push
adc
inc
cmpsb
scas
mov
sbb
xchg
pop
leave
mov
and
das
lahf
loope
xor
loope
cmp
xor
mov
adc
test
adc
subl
mov
cmp
add
xor
mov
push
mov
cli
jmp
mov
dec
pop
cmp
hlt
jge
push
xchg
shll
sbb
test
scas
aad
add
push
aam
lret
jne
push
and
cmp
mov
jmp
popa
pop
pop
fisubl
lods
lahf
out
inc
cs
xchg
sbb
stc
fimuls
js
ret
pop
mov
ficompl
ljmp
fs
push
jge
push
xlat
leave
insb
xor
lds
jecxz
lods
es
add
je
pop
pop
fcomp
jne
push
jns
sbb
adc
sbb
inc
dec
nop
mov
aam
jno
stos
jmp
xchg
scas
in
mov
ds
dec
mov
or
mov
sbb
sbb
clc
out
pusha
negb
outsl
inc
pusha
jmp
pushf
adc
cmp
or
cwtl
add
mov
cwtl
mov
xchg
push
cld
repz
mov
insl
pop
ret
mov
sub
stc
into
or
insb
int3
fnsave
daa
push
or
leave
idiv
pop
or
and
fcoms
sbb
leave
insb
and
cmp
call
leave
and
inc
adc
cmpb
scas
icebp
pop
inc
mov
out
mov
pop
enter
fs
scas
jb
push
clc
das
xchg
xchg
cmp
aad
mov
cli
mov
lahf
sub
into
test
cmpsb
xor
push
pop
jbe
sbb
add
insb
push
mov
test
dec
push
cmp
ss
ss
loop
xchg
inc
lret
or
add
pop
adcb
lcall
into
icebp
rcl
xchg
ljmp
sub
clc
scas
lock
and
je
ja
lahf
mov
test
iret
push
cltd
xchg
xor
mov
sub
mov
mov
mov
mov
dec
push
iret
repz
cli
cmc
xchg
push
arpl
dec
out
jne
stos
fsubr
insb
sbb
inc
pop
scas
cmp
stos
push
fisubrl
mov
lea
cli
fwait
and
shrb
testb
ror
out
test
inc
mov
and
les
or
xchg
and
cs
and
cmp
fwait
pop
add
fs
pop
std
xor
out
in
pop
cmp
fwait
adc
sbb
mov
pop
stos
loop
add
ss
aam
nop
or
cmp
fadds
jecxz
fisttps
lahf
lods
mov
fnstenv
or
fcompl
push
shrl
jge
add
dec
je
jb
lock
shrb
dec
inc
mov
sbb
push
fdiv
or
rorb
and
pop
sbb
fs
decl
sub
mov
xchg
cmc
lret
push
test
aad
jge
rorb
xchg
add
sti
arpl
xlat
fs
and
insl
sbb
cltd
pop
mov
insb
out
dec
insb
pop
push
mov
call
test
dec
mov
out
jne
movsl
xchg
test
popf
pop
imul
nop
aad
cmp
rorl
lret
lcall
sbb
add
gs
inc
dec
xchg
in
xor
movsb
sbb
inc
or
mov
sbb
fcomp
jo
out
iret
decl
cmp
mov
cwtl
loop
add
push
dec
jb
data16
mov
repnz
dec
pusha
xor
cltd
stc
dec
push
es
into
divb
cmc
inc
adc
sti
mov
push
dec
call
xor
adc
lea
lret
xchg
gs
aad
cmp
cmpsb
stos
insl
cmpsb
jle
mov
icebp
sbb
nop
mov
jno
xor
subb
jae
lds
cmp
bound
les
mov
xor
int3
lods
cmp
insb
negb
xor
inc
sahf
loope
jecxz
adc
iret
adc
aad
sub
js
fstps
mulb
sub
mov
popf
cmp
jmp
bound
mov
sub
enter
lahf
inc
jns
out
xabort
jecxz
sti
outsl
movsb
pop
das
xor
in
jae
ret
rcrl
scas
push
comiss
push
pop
mov
out
shl
mov
dec
inc
mov
dec
out
fmuls
test
cmpsb
es
scas
lock
push
or
sbb
call
in
mov
dec
ret
cwtl
cmp
pushf
or
loop
int3
divl
jne
sbb
inc
ret
add
call
push
push
ss
push
xchg
pop
mov
or
xor
daa
in
mov
sahf
pop
insb
jae
aaa
adc
subl
sub
or
ret
jmp
or
or
lret
or
sub
add
setbe
cld
sarb
mov
cmp
lret
xchg
xchg
arpl
or
xchg
or
enter
repz
pop
sub
movsl
std
loope
fwait
popa
lock
inc
push
dec
enter
test
push
sbb
pop
push
sub
cmp
adcb
clc
push
fiaddl
imul
sbb
ss
cmp
jae
das
dec
xchg
into
fisubs
jne
test
shlb
push
or
xchg
shlb
data16
iret
into
shrb
clc
xor
es
call
jge
int
inc
test
xor
aad
jno
push
xor
les
call
mov
fs
imul
insb
in
gs
dec
rcll
mov
push
dec
in
push
hlt
gs
push
js
dec
lds
lret
mov
mov
mov
and
jecxz
cld
cmp
mov
cmpl
lds
scas
and
mov
pop
into
push
and
cmp
int
mov
jno
lds
add
mov
scas
inc
cmp
cmp
fadd
into
clc
fstpl
sbb
pop
clc
add
inc
pop
or
les
pop
outsl
in
cmc
frstor
cmc
fs
mov
mov
repz
mov
insl
lods
test
scas
xlat
imul
aad
sbb
pop
push
lods
mov
xor
idivb
je
pop
fwait
sahf
or
mov
ret
inc
push
ljmp
xchg
loop
or
std
push
jmp
fwait
lret
sbb
pop
pusha
inc
clc
and
xor
sub
ret
cmpsl
in
xor
jge
js
cs
cmpsb
addr16
out
mov
pusha
in
clc
jnp
and
rcrl
or
jbe
xchg
or
outsb
in
shlb
cmp
orl
outsl
insl
adc
je
mov
cmp
sti
mov
adc
xchg
pop
js
pop
cmpsl
iret
out
xchg
leave
ret
sti
xchg
daa
mov
push
mov
adc
fldenv
pop
fcmovne
pop
mov
sbb
hlt
scas
inc
xchg
loope
mov
stc
movsl
xchg
fwait
sub
rcrl
in
in
add
lret
and
mov
jle
cmp
lret
jmp
pop
and
cmp
mov
pop
pop
sub
mov
push
sbb
mov
xchg
fistpl
das
cmp
rorl
xor
xchg
test
mov
or
int
lcall
ljmp
adc
or
mov
faddl
aas
icebp
hlt
sub
sub
sub
xor
fwait
mov
ljmp
sbb
gs
lahf
outsl
push
test
sub
mov
inc
mov
aam
data16
jecxz
jns
test
or
inc
push
shll
sbb
cmpl
adc
adc
popf
daa
push
mov
mov
mov
ss
out
bound
in
cltd
insb
repz
in
ja
gs
mov
insb
lret
shlb
negl
xor
xchg
xchg
or
add
inc
or
xchg
xorb
lods
xchg
and
inc
dec
pusha
or
xor
sbb
cmp
ja
adc
test
cmp
xchg
add
addr16
fisubs
or
inc
pushf
push
mov
push
sub
cmp
or
ljmp
into
mov
or
adc
push
adc
repnz
add
and
cs
stos
in
aaa
out
pop
dec
rcr
lods
ds
arpl
repz
pop
outsb
xchg
sahf
dec
adc
jmp
inc
mov
jecxz
js
cmp
test
push
pop
shll
jge
scas
xchg
jne
cmp
pop
jmp
ds
insb
mov
popa
ss
bswap
jp
xor
int
mov
je
xchg
out
aas
sub
ret
ror
les
pop
data16
or
aam
lcall
xorb
mov
cmp
and
xchg
xchg
call
push
stc
in
add
les
pusha
insb
mov
mov
adcb
cmp
outsb
xchg
stos
jno
push
test
jb
jnp
insl
sbb
add
aaa
and
cmp
jmp
add
mov
out
es
lahf
mulb
rol
lods
sti
pop
das
pop
sbb
mov
xchg
aad
add
fcoms
or
call
js
push
xor
pop
je
scas
pop
pop
cmpsb
leave
pop
mov
clc
pop
ds
sahf
sbb
mov
rcll
pushf
sbb
aad
insl
aam
sub
and
js
mov
test
add
outsl
inc
mov
mov
repnz
mov
cmp
mov
scas
pop
lret
or
xor
aaa
pop
fwait
lock
or
ficoms
pop
testl
mov
out
aaa
dec
nop
mov
ret
jl
jl
movsl
pop
lret
cmp
jmp
jae
or
xor
pop
ss
imul
mov
imul
test
xlat
in
jp
cmp
std
adcl
pop
mov
aaa
jb
orb
jnp
pop
mov
hlt
pop
inc
mov
mov
cmp
out
or
and
xchg
sbb
sub
cld
and
loop
loopne
sbb
ror
or
data16
mov
jecxz
and
je
xchg
sti
mov
inc
add
cmc
sbb
xor
pusha
ret
lret
cmp
ds
sbb
dec
sub
sub
mov
ss
jl
data16
push
lock
sbb
mov
out
sbb
add
sub
stos
sbb
test
jb
cmp
adc
jne
dec
or
ds
je
cmc
fildll
xor
repnz
cmp
add
inc
mov
push
arpl
push
leave
add
es
push
mov
xchg
jmp
movsl
nop
pushf
lds
popa
mov
testb
aaa
out
add
and
incb
cmc
hlt
btr
jl
xchg
push
cli
or
xor
sti
jecxz
jl
add
adc
bswap
mov
ret
xchg
xchg
and
pop
xchg
repnz
out
outsl
lods
adcb
dec
lret
xorb
xchg
jae
movsl
shl
pusha
mov
nop
lret
in
sarl
xor
mov
ljmp
jne
jge
cli
sbb
stos
cmpb
or
loop
fcompl
adc
cmc
mov
sti
mov
stos
add
sbb
sbb
das
jae
iret
loop
adc
sarl
inc
enter
mov
inc
jl
mov
aas
stos
cltd
fimull
dec
cmp
inc
ljmp
fisubs
leave
in
lahf
jnp
mov
xor
divb
fldt
mov
insl
ja
jl
or
push
mov
sub
add
test
xchg
scas
mov
cmpsl
ljmp
aad
dec
add
subb
rorb
dec
outsb
insl
pop
xchg
xor
dec
cmp
lock
stos
pop
bound
loope
add
sbb
or
pushf
adc
clc
mov
cs
sbb
ljmp
movsl
scas
xchg
mov
add
sarb
cmp
stos
xor
repnz
sub
aaa
sub
push
lret
pop
js
add
test
iretw
mov
inc
jmp
jno
mov
insb
push
imul
lret
xchg
test
jne
pop
and
and
test
xor
test
movsb
and
push
xchg
or
push
or
shlb
xchg
movsb
cmpsb
mov
mov
test
scas
and
sub
dec
insl
out
aam
popa
out
jl
sar
sarl
rolb
mov
push
imul
adc
cwtl
lcall
sbb
mov
xor
gs
add
push
jmp
mov
jge
stos
cmp
mov
rcr
lods
jg
lret
and
add
cmp
lods
sub
mov
pop
movsb
cmp
pop
lds
inc
add
cmp
add
dec
int
mov
inc
sub
pop
imull
jg
roll
lock
fdivl
stc
push
aaa
push
sub
push
mov
pop
mov
ja
sahf
sub
mov
xor
mov
icebp
jg
roll
add
repnz
inc
dec
xlat
dec
adc
xchg
pop
mov
mov
mov
hlt
xor
je
xor
movsl
cli
push
xchg
cmp
push
lea
hlt
jl
jb
in
and
xchg
xor
rcr
mov
sbb
pop
and
das
add
jne
sbb
push
es
movsl
lods
mov
xchg
subb
or
sbbb
inc
shlb
hlt
outsl
daa
out
mov
push
in
cmp
mov
dec
in
jmp
cmp
mov
jg
fnclex
mov
stc
mov
sub
jo
xor
mov
incl
jbe
and
fisubrl
mov
mov
sub
xor
test
test
push
jge
lea
lea
cld
jne
scas
out
das
in
xor
into
fs
mov
mov
mov
mov
jns
gs
jbe
jae
stos
pop
cmp
mov
push
pop
test
sbbb
lret
mov
xchg
sub
sar
mov
push
lods
sbb
sbb
into
inc
cltd
push
xor
mov
push
xchg
lret
pop
testb
call
dec
daa
xchg
jge
lds
sbb
stos
mov
ja
sbb
mov
orb
insl
sbb
xchg
dec
stos
inc
jae
pusha
ljmp
scas
scas
loop
movsl
lcall
cmp
imul
inc
inc
test
dec
sub
daa
inc
nop
push
lahf
mov
add
sub
test
dec
add
sub
push
add
cmp
subl
inc
leave
cmp
jne
mov
pop
cld
icebp
dec
ficompl
stos
add
lods
mov
inc
icebp
jmp
inc
repnz
or
lods
add
loope
sub
not
ss
lock
leave
pop
fcomps
scas
push
inc
dec
push
sbb
into
cmp
inc
cmp
mov
movsb
xchg
xor
addr16
scas
inc
inc
sahf
insb
lds
add
jnp
adc
pop
sub
cmp
mov
lds
sbb
cmp
stos
xchg
pop
lods
ss
xchg
mov
add
mov
or
popf
mov
mov
imul
test
push
loop
es
outsl
mov
pushf
rcrl
inc
or
inc
pop
lods
pop
std
outsl
sbb
inc
sbb
or
or
pop
lock
cmc
movsb
xor
cmovl
pop
dec
xor
es
mov
mov
pop
pop
clc
repnz
aas
int
adc
fwait
sbb
push
jl
je
shll
mov
test
inc
or
jo
enter
jg
mov
sti
or
mov
fisubrs
aam
ss
or
push
dec
insb
mov
or
pop
lock
nop
out
dec
enter
cs
repnz
icebp
popf
cld
pushf
in
sarb
cs
nop
pop
adc
xchg
and
xor
fistpl
lods
adc
lret
cmp
cld
test
subl
mov
mov
insb
xorl
mov
std
or
inc
sub
nop
repz
pushf
xchg
movsl
sahf
pop
aam
dec
addb
mov
insb
fnstenv
or
mov
aas
cs
pop
stos
xchg
pushf
out
lock
add
incl
repz
mov
xchg
dec
clc
pop
add
shrl
test
xor
and
and
std
fisubl
sub
cmpb
fs
and
push
sub
sub
inc
mov
xor
out
pop
sahf
loope
inc
pop
rorb
sub
add
stos
push
jmp
mov
adc
sbb
lret
cmpsl
xchg
jae
mov
jo
xor
mov
xchg
popf
jb
jo
stc
mov
test
ja
shrb
scas
pop
fmulp
cmp
pop
adc
adc
ret
sbb
push
mov
ret
sbb
dec
add
inc
push
mov
mov
cmp
stc
out
adc
or
xor
push
mov
cld
adc
fwait
dec
mov
sub
cmp
fs
pop
mov
and
jns
aad
xchg
sbb
fiadds
mov
addb
sbb
xchg
unpckhps
jmp
pop
lods
dec
test
jno
push
iret
xorl
mov
imul
xlat
divl
xchg
incl
sub
movsb
or
cmp
fisttps
jbe
jno
out
sub
lods
addr16
xchg
aad
mov
jnp
cmpsb
int
pop
lret
cmp
add
fiaddl
pushf
leave
ret
sub
xchg
test
test
adc
fst
push
outsl
nop
pusha
sti
push
fmul
ja
mov
in
xchg
xor
mov
mov
lret
inc
mov
or
test
cmp
pop
push
sbb
jl
clc
outsl
dec
mov
jmp
adcl
pop
cld
ret
or
sbb
dec
cmp
xor
shll
pop
imul
xor
dec
jmp
inc
sub
sti
loop
jp
mov
enter
addr16
loopne
and
dec
inc
out
call
insb
sub
stos
popf
stos
popf
jecxz
vfrczps
cld
push
jmp
dec
popf
cmp
jmp
lock
movsb
push
xchg
push
lret
sahf
cmpb
pusha
pop
mov
sbb
or
stos
mov
pop
imul
or
sub
xor
fs
sub
mov
add
shrb
sbb
imul
mov
sarb
lahf
mov
out
dec
cltd
ja
imul
mov
dec
lcall
scas
fisttpl
push
insl
or
mov
push
mov
push
repz
mov
lret
cltd
adc
or
jecxz
inc
outsl
nop
mov
orl
mov
cmp
jg
scas
ds
fistps
inc
daa
push
bound
lods
and
xor
cmpsb
sar
jnp
push
jmp
push
dec
shlb
and
iret
xchg
rorb
lods
xor
stos
les
push
dec
sbb
sub
jbe
lcall
jae
mov
bound
std
mov
cltd
or
mov
push
ret
test
sbb
mov
xor
loop
scas
sbb
xchg
xor
lret
orl
sub
inc
aaa
scas
fistpl
add
mov
sub
in
popaw
clc
aam
jbe
push
xchg
jns
add
push
stos
ss
shll
mov
sbb
stos
dec
xor
xchg
test
pop
sub
push
aam
arpl
cmpsb
pop
popa
gs
idivb
shll
jle
ljmp
inc
xor
rclb
and
pop
fdivr
jg
pop
xlat
in
mov
jb
arpl
mov
adc
xlat
adc
sbb
jp
xchg
or
fdivrs
fsubrl
nop
or
add
roll
jmp
sub
sti
mov
cmp
cltd
jl
cltd
cmp
jbe
inc
jl
nop
frstor
jo
mov
in
mov
jno
push
pusha
push
sub
sub
cltd
sbb
jo
add
inc
ss
lahf
dec
jge
scas
mov
lret
fsubl
sarl
mov
iret
jge
cmpsb
xchg
and
les
jno
jb
lret
das
movsb
cmp
lods
scas
xchg
mov
xchg
xor
lods
aam
mov
sbb
mov
jo
adc
xor
int
sbb
and
lock
cmc
cmpsl
jmp
dec
xchg
rcll
fldl
xchg
inc
into
inc
inc
out
and
cmp
add
dec
dec
mov
cli
sub
frndint
inc
jmp
ljmp
aad
adc
jnp
out
movsb
pop
fsub
cmp
jno
imull
or
icebp
icebp
cs
clc
std
test
dec
cmpsb
scas
lock
rcr
mov
fisttpl
mov
ficomps
test
adc
lahf
data16
lock
fisttpll
sub
inc
stos
rcrb
pop
mov
adc
xor
addr16
pushf
out
cmp
xchg
loope
mov
cmp
in
or
in
add
mov
jns
jno
movsb
add
or
xchg
xor
mov
scas
mov
insb
dec
cli
adc
or
ja
jmp
subl
ds
sub
ret
mov
cmp
fscale
mov
ror
imul
sub
loop
stos
stc
inc
push
push
cmp
sbb
sbb
sbb
mov
mov
jne
mov
bound
ss
enter
cmpsl
ret
mov
pop
add
lock
jecxz
or
sbb
aas
scas
add
enter
pop
dec
jns
push
or
fstl
sub
xor
cmpsl
inc
push
mov
movsb
addr16
push
nop
and
out
jmp
xchg
in
arpl
cltd
cmp
inc
aam
imul
xlat
mov
and
ror
inc
jp
inc
outsb
rorb
pushf
hlt
fistps
inc
loop
mov
decb
add
jbe
dec
push
stos
push
cli
inc
push
inc
jbe
add
or
cmp
mov
mov
xchg
mov
js
add
cmpsl
sub
xor
mov
dec
jno
sbb
dec
inc
and
mov
rorl
or
inc
jbe
rcrl
mov
dec
das
leave
and
aad
push
adc
ret
add
ret
mov
adc
neg
pushf
mov
and
or
xchg
ss
cs
or
cmp
mov
cmp
jmp
pop
add
mov
leave
pop
jbe
dec
test
repnz
jne
cmp
mov
jno
loop
jbe
push
sub
cmp
adc
and
out
test
and
add
aas
andl
bound
ds
push
or
mov
xchg
push
fisubl
dec
jp
mov
shl
rorl
cld
xchg
dec
inc
mov
jb
faddl
jl
cmpsb
inc
or
aad
push
adc
stc
data16
push
adc
sahf
xor
pop
dec
dec
fucomip
fsts
lret
jmp
mov
xchg
jmp
test
inc
jne
jbe
push
imul
mov
pop
dec
pop
jb
jmp
cmp
jnp
scas
insl
cmp
xchg
pusha
ljmp
mov
jl
push
rclb
std
outsl
xor
inc
ret
mov
mov
ss
ljmp
mov
imul
pushf
in
push
movsb
xor
iret
lock
and
out
psadbw
jns
pop
mov
sbb
inc
dec
test
mov
push
stos
insb
adc
imul
movsl
mov
dec
cmp
mov
xor
loopne
mov
cltd
cmp
addr16
rorb
int3
xor
xor
mov
dec
sub
out
cmpsb
orb
inc
push
imul
nop
mov
add
and
ret
cmp
cmp
lahf
sarl
repnz
in
mov
add
mov
jne
pop
pop
jb
scas
aas
aad
pop
pop
cli
inc
test
test
insl
movl
mov
ja
leave
je
in
aaa
imul
xor
rorl
clc
and
lret
xchg
or
adc
dec
sbb
mov
xor
dec
lods
adc
adc
and
dec
push
pop
push
fmull
call
pushf
icebp
xchg
pop
sbb
push
inc
rcrl
mov
xchg
daa
les
mov
mov
mov
ss
pop
dec
xor
lahf
mov
icebp
das
jl
mov
mov
ds
sub
jp
xchg
mull
jmp
repz
mov
lcall
push
int
push
fmuls
push
push
test
jecxz
adc
or
dec
mov
lods
loop
popa
movsl
mov
mov
push
inc
mov
fsub
cmp
ja
inc
xchg
adc
out
loop
rcrl
push
cli
aad
xlat
pop
add
gs
xchg
jne
repz
xchg
xchg
test
orl
inc
xchg
mov
das
push
jb
xchg
insb
cmp
xor
lock
sbb
mov
es
sub
cmc
mov
and
sub
scas
inc
jecxz
scas
in
lahf
sbb
test
or
pop
jecxz
pop
or
pop
in
adc
cmc
ljmp
out
mov
sbb
js
les
jmp
fnstsw
loop
scas
jl
mov
mov
sbb
imul
mov
in
mov
fs
or
xlat
out
sarl
fwait
es
ljmp
pop
dec
xchg
nop
push
insb
popa
arpl
outsl
sti
lcall
inc
mov
xchg
or
jl
loopne
popa
fwait
inc
xlat
add
aas
inc
or
cli
sub
ja
cli
push
fldl
lods
mov
stc
addl
xor
mov
inc
test
ret
jg
repz
pop
xchg
loop
stos
into
push
add
call
aaa
leave
cltd
lret
in
add
pop
clc
aaa
int
loop
mov
pop
int3
or
sbb
incl
jecxz
xchg
scas
and
xor
ret
lret
jbe
pop
adc
mov
inc
lahf
inc
enter
xor
das
add
out
inc
adc
xchg
and
pop
xor
dec
paddw
pushf
jns
push
jge
xlat
pushf
jno
aas
movsl
shll
and
xchg
push
pop
xor
fsubl
fsts
cli
or
mov
push
jmp
and
add
cld
fisubrs
test
fwait
in
xchg
sbb
ret
test
icebp
mov
rcll
push
mov
sub
adc
rorl
pop
mov
ljmp
mov
mov
dec
fcom
mov
pop
inc
mov
imul
jne
cmp
sbb
jnp
add
std
call
cmpsb
lods
mov
push
movsb
xchg
xor
aas
sbb
xorb
test
outsb
jp
inc
flds
push
in
adc
xchg
and
ljmp
divb
xchg
aas
mov
lods
xor
sub
andl
test
pop
mov
jns
inc
popa
and
shll
pop
add
bndcn
jecxz
nop
cmpsl
pop
in
xorl
imul
addr16
andb
mov
lcall
rcrl
inc
aaa
sbb
test
cli
shlb
or
pusha
mov
sbb
aam
cmp
test
es
arpl
add
sub
mov
xchg
mov
jb
jp
xor
lcall
sub
adc
push
mov
sbb
insb
pop
inc
jecxz
das
out
repnz
das
cld
and
push
xchg
mov
test
ja
je
out
shlb
xchg
sbb
mov
lock
pop
lahf
and
out
loope
aas
and
hlt
push
or
mov
add
mov
fsub
out
clc
inc
sbb
inc
arpl
fdivl
out
aas
pop
sub
cmp
in
jge
xor
inc
jae,pt
inc
les
adc
sub
adc
adc
ljmp
fbstp
pop
push
mov
jp
clc
das
in
in
and
xor
sbb
lcall
pop
adc
ficomps
lret
or
mov
scas
stc
loop
xchg
scas
bound
and
enter
add
negl
movsl
lahf
mov
dec
pop
add
les
fisttpll
xor
shl
mov
imul
imul
sbb
mov
jmp
test
xor
xchg
mov
lret
mov
adc
addr16
mov
jb
push
mov
and
mov
popa
mov
sub
cli
sub
mov
adc
leave
sti
fnsave
cld
push
adc
sbb
push
popl
jp
mov
cld
xchg
xor
mov
and
mov
jo
push
out
in
inc
les
push
sbb
fldt
dec
xor
je
into
push
scas
jg
fs
push
cltd
push
into
shll
sbb
cs
fmuls
jl
sub
dec
jns
lds
int3
aad
or
adc
jp
mov
fs
lahf
test
lds
mov
test
out
pop
aam
mov
mov
sbb
cmp
leave
dec
dec
fsub
ja
cli
and
push
sahf
jo
jecxz
inc
addr16
jmp
test
dec
aad
pop
pop
loopne
iret
mov
sub
adc
outsb
dec
testb
popa
cli
fcoml
mov
push
push
insl
cmc
mov
movsl
pop
jb
aam
mov
in
jecxz
sti
sbb
lea
jmp
sub
push
dec
pop
or
ds
inc
inc
movsb
frstpm(287
imul
sub
push
sar
outsl
mov
add
hlt
js
rclb
xor
repnz
mov
popa
jne
xchg
ret
lods
jb
shr
push
orb
out
pop
shl
push
push
fmul
adc
cmp
sar
dec
inc
sub
inc
iret
adc
lret
negl
loopne
push
push
jae
mov
dec
xchg
pop
fisubs
xor
inc
prefetch
mov
hlt
sub
lahf
pop
jae
lods
jge
push
add
jo
hlt
andb
sub
movsb
inc
es
test
hlt
movsl
int
add
fsubrl
cmpsb
adc
add
push
movsb
and
pop
lcall
add
dec
lret
jp
ret
pop
lock
popa
bound
and
or
aas
aam
testb
and
push
sbb
adc
jl
rcrl
xchg
jo
cs
movsb
push
inc
mov
ljmp
dec
sbb
jnp
or
ljmp
es
sbb
add
add
and
call
mov
in
outsb
in
sub
push
xchg
inc
outsl
dec
jne
outsb
or
mov
wrmsr
jl
je
lods
dec
cmc
mov
mov
cmp
add
bound
inc
pusha
movsb
movsl
lods
push
dec
xchg
bound
mov
mov
mov
cli
push
in
add
mov
lock
shlb
adc
cmc
or
movsl
and
inc
ds
mov
les
or
outsb
pop
clc
adc
add
jmp
or
mov
gs
mov
insb
iret
push
call
stos
mov
jecxz
lea
jecxz
les
sbbb
in
mul
dec
rclb
shr
add
xlat
aad
or
dec
jge
xchg
mov
sub
fcmovne
push
sub
sarb
xchg
sub
jnp
jge
fstl
jp
xor
in
imul
insb
xorb
enter
repz
sbb
and
jmp
lret
mov
ljmp
jecxz
jge
loope
xlat
insl
cmp
push
cltd
pushf
mov
std
mov
push
sbb
lods
push
dec
sahf
mov
subl
mov
jmp
push
pop
xchg
adc
cwtl
cwtl
or
dec
outsl
scas
lods
gs
sub
mov
lods
lret
push
mov
test
call
sbbb
fstl
pushl
sub
mov
dec
call
inc
fisubl
jne
sub
or
pop
sub
push
cld
dec
mov
sub
insb
add
inc
jmp
ljmp
arpl
push
cmp
adc
jecxz
inc
sbb
mov
mov
fiaddl
dec
xchg
dec
enter
push
push
int
cmpsb
dec
or
imul
aas
out
mov
shrl
mov
push
in
push
add
inc
fstpl
dec
xlat
icebp
adc
shl
test
jmp
pop
dec
mov
fbld
add
jl
arpl
aas
jno
cwtl
xchg
out
sahf
or
in
aaa
pop
xlat
bound
rcrl
loopne
stos
test
mov
stos
insb
ret
push
mov
jmp
inc
pop
outsb
push
push
cmp
loopne
mov
stos
popa
sub
xor
push
sbb
mov
xor
jge
sub
rcrl
aad
pop
adc
roll
mov
aad
jnp
sbb
out
jg
and
clc
sub
int3
sbb
jnp
pop
aam
xor
adc
call
sub
lret
jae
dec
cld
pop
ret
fldl
leave
ret
leave
inc
rcll
aad
lcall
jb
stos
shlb
dec
sbb
adc
sahf
in
jae
xchg
lods
mov
cmpsb
andb
sti
rorl
aad
jg
ljmp
and
add
movsb
sbb
scas
aaa
dec
jge
lds
fxch
sti
or
aaa
add
xchg
out
or
aas
cwtl
inc
in
mov
jp
pop
jne
sahf
jnp
scas
xchg
andl
push
popa
or
xchg
sbb
imul
daa
adc
roll
pop
rcrl
adc
les
shlb
add
and
mov
mov
mov
cmpsb
xchg
xor
jmp
lds
idiv
sahf
loopne
daa
inc
bound
imul
xlat
mov
add
out
adc
sbb
xchg
mov
popf
inc
mov
adc
cld
les
add
cmp
mov
cmp
insl
xor
bound
test
cmp
sbb
inc
mov
sbb
and
sub
fwait
notl
push
mov
addr16
inc
mov
cwtl
and
inc
inc
xchg
pop
mov
notb
xor
sbb
jnp
rorb
mov
adc
call
iret
int3
inc
into
cs
cmp
add
sub
lods
icebp
fwait
aas
pop
jle
xor
jg
fidivs
inc
in
ljmp
jne
sub
in
ss
mov
scas
out
stos
cli
test
mov
out
add
jl
dec
bound
ja
xor
addr16
add
outsb
pop
iret
fwait
jle
pop
shrl
pop
add
roll
loope
ficoms
and
adc
and
aad
mov
inc
das
push
mov
push
lock
inc
ds
pop
loopne
lods
sarb
cmp
enter
dec
sub
pop
mov
insb
pop
sahf
or
xchg
cmp
sub
popf
bound
push
insb
push
sub
push
leave
test
xor
mov
stos
cmc
dec
xchg
add
aas
sbb
loop
jne
inc
add
fcmovnbe
mov
sbb
cmc
mull
pusha
lret
xor
dec
xor
add
adc
jne
fs
imul
push
pop
gs
push
and
inc
cmpsl
pusha
bound
test
int3
cwtl
adc
or
add
mov
push
mov
pop
push
mov
aaa
add
int3
jne
bound
sub
gs
xchg
das
add
inc
sub
test
adc
outsl
repz
mov
stos
loope
mov
outsl
mov
movsl
out
pop
je
mov
popa
test
sbb
leave
mov
push
jbe
test
pop
les
mov
out
jp
loopne
jo
fld
out
rcr
jbe
pushf
test
adc
pop
in
outsl
cmp
mov
cmpsb
lret
adc
xor
sarl
loop
xlat
push
cmc
fs
mov
cmc
pop
xchg
jge
jno
outsb
daa
lcall
xor
mov
repz
cld
testl
in
sub
sbb
std
std
mov
outsb
mov
out
pop
adc
call
and
pop
enter
jl
cmp
repz
das
decb
xchg
int3
sbb
mov
jmp
ljmp
mov
mov
jae
jnp
sbb
inc
cmp
ret
pop
xchg
push
data16
cmp
loope
and
dec
test
loope
shll
lods
cmp
push
call
loop
xchg
inc
stos
outsb
add
jno
xchg
pushf
fistpll
aaa
roll
and
loope
or
sarl
jo
jl
js
ret
fnstenv
sbb
mov
xchg
jg
loopne
jns
mov
mov
and
mov
lock
dec
les
stc
add
addl
aas
sahf
dec
notl
jb
test
sti
xchg
dec
sbb
adc
add
pusha
pop
mov
push
lods
out
aad
push
adc
and
pop
cmp
and
add
mov
sub
xor
xchg
jle
out
daa
cmc
cmc
xchg
jecxz
dec
and
ss
sub
mov
sbb
xor
fcompl
pusha
dec
loop
in
insl
jecxz
sbb
pop
out
pop
dec
movsb
lds
gs
sahf
jmp
and
gs
xor
cld
or
fidivrl
pop
dec
data16
cmp
pop
jmp
hlt
mov
push
mov
lret
cmp
mov
push
dec
mov
pop
sbb
push
lods
dec
push
add
inc
adc
inc
loop
leave
in
or
test
fcmovu
cmp
icebp
subb
push
dec
adc
outsb
dec
dec
or
mov
jg
cmp
and
dec
pushf
push
xor
xor
test
inc
stos
xor
leave
insb
lds
clc
sub
cmp
inc
shrl
lea
push
out
cmp
fs
xlat
inc
dec
rol
inc
adc
cmp
mov
jo
add
mov
xor
scas
ds
xchg
push
daa
xchg
rcrb
loope
lret
xchg
cmp
popa
out
loope
pop
push
loopne
fildl
jb
and
sbb
sub
mov
int3
jb
xor
ss
ss
mov
scas
test
scas
sub
shlb
push
out
mov
movsl
mov
jmp
and
loope
cwtl
pop
jg
lret
out
pop
scas
addl
ja
adc
sbb
ljmp
into
das
pop
outsb
cmp
xor
lods
imul
inc
sub
mov
pop
mov
xor
test
jne
neg
jp
popf
cmp
out
in
jns
and
loop
xlat
imul
and
pushf
pop
test
mov
xor
sub
out
fcoml
sbb
faddp
mov
cltd
gs
mov
add
leave
cmp
mov
aam
jle
inc
shll
cmp
mov
push
push
inc
or
ss
inc
dec
jns
mov
and
xor
sbb
lret
ds
mov
jbe
xlat
ret
add
adc
ret
stc
add
pushf
jae
sbb
adc
add
ss
sub
pop
lahf
mov
xchg
pop
dec
xor
pop
arpl
movsb
mov
add
pop
es
inc
or
ja
aas
mov
scas
hlt
push
mov
hlt
xor
ja
test
adc
jnp
nop
jb
out
dec
add
or
pop
sub
testl
scas
push
repz
and
jns
imul
fs
sub
test
inc
icebp
fdivs
out
and
push
jmp
or
arpl
in
mov
mov
movsl
in
push
or
in
aaa
mov
call
jo
push
loopne
xchg
ss
mov
dec
push
mov
les
popa
push
jle
dec
andl
cmp
in
inc
or
rclb
rolb
mov
inc
movsb
inc
ja
or
mov
in
ss
push
or
ds
sti
in
jecxz
leave
cmc
mov
push
mov
add
mov
sub
dec
and
mov
shl
inc
lods
sbb
inc
test
and
inc
dec
dec
mov
jne
xor
fs
test
jmp
mov
xchg
cmp
push
and
stos
xchg
pop
lock
shlb
or
imul
jmp
mov
push
cmp
fdivrl
mov
iret
and
jmp
mov
sbb
sbb
mov
fisttps
sti
in
mov
dec
mov
push
add
ss
arpl
inc
sub
dec
lea
fmuls
and
mov
loope
xchg
outsl
cmpsl
cmp
jle
aaa
sbb
in
fists
jns
dec
ficompl
sahf
mov
mov
cmp
mov
outsb
out
insl
and
fincstp
inc
adc
cmp
clc
imul
push
cmp
std
rol
prefetch
push
fdivl
in
sub
ret
sbb
fisubrl
jbe
aam
fmuls
clc
xor
mov
mov
cltd
mov
mov
aas
add
pop
fs
ljmp
dec
enter
push
into
cltd
out
stc
out
lea
cmp
push
or
arpl
imul
sbb
mov
mov
repz
aad
mov
fldcw
mov
jmp
sbb
aaa
arpl
fisubrs
or
and
imul
add
ret
push
shll
and
cmp
js
outsb
jbe
cld
mov
fbstp
jmp
cvttps2pi
repz
push
pop
repz
out
test
adc
push
pop
pop
mov
das
popf
dec
js
mov
fnstsw
push
insb
out
fdivrl
rolb
pop
lds
dec
sbb
sub
popa
lret
mov
sub
push
inc
adc
xor
sub
jp
jl
mov
lret
aam
xchg
jne
push
xor
popf
sbb
and
sti
mov
push
dec
xchg
push
mov
imul
pop
dec
cmpsb
inc
mov
mov
lock
ljmp
out
and
leave
xor
cmp
lods
cwtl
push
lahf
dec
xor
inc
cmpl
in
pop
adc
mov
mov
push
sub
push
add
repnz
andl
aam
jno
xor
test
repnz
jecxz
cmp
and
inc
mov
sbb
mov
fdivp
sarl
mov
xor
jae
mov
xchg
clc
loopne
ss
pop
mov
dec
jle
dec
and
mov
or
dec
icebp
std
pop
je
sbb
jnp
aaa
stc
xchg
mov
push
pop
xchg
dec
mov
xor
lods
add
les
not
inc
mov
adc
or
hlt
push
inc
rclb
pushf
pushf
sbb
fistl
xchg
in
jnp
push
movsb
adc
mov
inc
lods
shl
insl
in
and
push
lock
inc
jmp
fidivs
xchg
mov
add
loope
test
mov
stc
sbb
divl
sub
aad
and
push
je
pop
mov
xor
xor
sub
pop
dec
je
dec
es
mov
je
ds
mov
mov
jecxz
xchg
mov
stos
shll
hlt
mov
in
add
or
xor
adc
nop
fstpt
roll
js
mov
push
jecxz
adc
cmpsl
js
xchg
xchg
push
sub
pop
jnp
leave
adc
push
loopne
and
push
mov
lret
adc
and
xor
repnz
scas
pop
jmp
pushf
cltd
or
outsb
cmpsb
inc
lock
sbbl
xchg
push
mov
fmull
and
xor
in
jb
add
xchg
add
jne
jno
aaa
inc
mov
inc
daa
dec
and
or
mov
mov
cltd
mov
imull
rorb
lret
push
mov
cwtl
jle
sub
adc
add
inc
push
cmp
bound
rcl
xor
push
das
adc
or
xor
movsl
add
xchg
pop
out
adc
mov
add
loop
push
pop
sub
dec
repnz
push
push
clc
dec
je
add
sub
adc
ucomiss
shll
scas
adc
pop
test
lahf
and
xor
pop
pop
push
daa
fsts
je
push
int3
mov
inc
fldl
adc
sub
jne
fdivr
pop
jle
nop
mov
xchg
sub
in
repnz
out
add
sub
imul
iret
sbb
ficompl
fidivrs
std
add
iret
adcb
pop
out
fsubl
mov
mov
push
push
ret
test
pop
rorb
mov
mov
adc
fildll
jl
js
mov
add
mov
inc
bound
pop
int3
mov
sahf
fdivrs
call
cmp
push
cli
push
push
aad
jno
loopne
xlat
push
xchg
add
clc
mov
cwtl
outsb
dec
mov
out
ficompl
inc
add
enter
out
xchg
fdivl
roll
push
push
and
popa
in
testb
arpl
repnz
lods
xchg
bound
mov
push
cltd
stc
movsb
or
cld
cld
jg
sub
shlb
mov
mov
push
outsb
sbb
lret
ret
ljmp
xchg
lahf
mov
lods
push
pop
or
mov
mov
xor
lss
pop
pop
test
fists
fsubrs
sub
cmp
cmpsb
pop
scas
dec
and
rcll
push
jbe
ret
call
outsb
cs
mov
imul
lcall
into
cmc
mov
cmpsl
dec
in
nop
adc
or
lods
xchg
sub
or
fisubrl
and
cwtl
xchg
push
push
sbb
in
fwait
inc
out
sbb
adc
mov
ljmp
test
lahf
xor
add
pop
loopne
cmpsl
emms
pop
cmc
sub
cli
lods
les
into
add
pop
test
out
jae
mov
push
ljmp
mov
pop
and
or
test
inc
or
fsubs
shr
dec
outsl
rcll
dec
scas
roll
push
sbb
xchg
lret
out
std
into
in
push
out
adc
jmp
movsb
and
std
adc
cmp
mov
psrlq
popa
dec
lods
pop
cmp
aaa
loop
jno
mov
sub
xchg
inc
in
lds
jno
xor
les
jo
addr16
pop
xchg
mov
jnp
js
mov
push
pop
push
aas
sub
popf
and
leave
daa
fs
daa
sbb
imul
scas
push
outsl
jo
inc
sbb
iret
js
mov
iret
int3
ss
lahf
stos
cmp
fcmove
sub
sar
push
subl
jp
fxch
lcall
flds
mov
insl
jle
inc
repz
sub
fwait
shr
cmp
jmp
jno
xchg
push
cmpsb
pop
pop
cmp
ss
mov
push
push
ja
clc
stc
mov
sub
mov
sbb
pusha
add
outsl
jb
xor
out
lea
leave
jl
push
cmp
mov
xor
nop
mul
jp
out
ljmp
mov
inc
idivb
lock
fidivrs
pop
fcmovnbe
bound
mov
lods
add
pusha
fsubp
repnz
sbb
sahf
jb
insl
ret
sti
scas
addr16
andb
pandn
xchg
mov
aaa
out
jg
insb
push
add
sub
daa
jnp
sub
ds
mov
jne
jmp
and
mov
addr16
sub
std
in
stos
ret
add
clc
mov
je
iret
sub
xchg
fidivl
loope
fistpll
repz
in
fwait
aad
push
clc
push
in
xor
pop
push
xchg
int
movsb
gs
fiadds
jo
jns
aam
imul
div
out
xor
mov
jecxz
mov
jae
jl
xchg
mov
dec
and
sub
dec
xchg
push
clc
pop
xor
arpl
popa
ss
call
insl
dec
loop
movsb
fsubl
and
xor
xchg
xchg
and
out
jle
mov
rorb
rcr
in
inc
jl
pop
lcall
push
mov
incb
cmp
dec
aam
leave
outsl
pop
push
inc
jp
or
pop
push
push
pop
push
popf
dec
push
or
pop
push
cmc
pop
std
mov
push
imul
xor
mov
xor
or
hlt
clc
xlat
push
outsl
sti
lcall
xor
mov
into
lret
ret
clc
jp
test
pusha
mov
xor
push
int
int3
aas
mov
dec
lock
xchg
adc
out
sub
fsts
add
pop
mov
sbb
iret
or
lods
ja
ds
jge
aas
jno
dec
aam
add
jno
sub
in
out
mov
addl
jle
rorl
mov
mov
data16
popf
int3
jnp
repnz
loope
fidivrs
pop
xchg
subb
mov
cwtl
xchg
pop
mov
stos
cmp
mov
mov
pop
js
rclb
ret
add
imul
inc
xchg
xchg
pop
inc
mov
and
js
mov
pop
std
mov
xorb
insb
fdivrs
out
dec
pop
outsl
mov
cmpsl
jae
inc
mov
sub
and
sub
imul
and
mov
or
stc
fisubrl
movsb
stos
sti
pop
mov
mov
mov
dec
mov
cmpsb
adc
push
xor
fsubr
mov
movl
mov
not
in
cmp
sub
jmp
sub
pop
sub
ljmp
ret
jmp
lea
jns
sbb
test
call
inc
pop
dec
andl
or
xchg
cmp
mov
sub
movsl
add
mov
pushf
pop
iret
out
inc
dec
sbb
movsl
enter
bound
sahf
mov
out
icebp
movsl
xchg
fs
lret
adc
cmp
inc
les
jmp
dec
xor
cmc
cld
repnz
stos
in
mov
mov
ljmp
pop
push
mov
aas
or
cmp
in
add
sbb
jge,pt
pop
imul
xchg
hlt
popl
dec
push
jp
add
es
movsl
or
ja
mov
mov
push
loopnew
dec
repz
mov
jmp
add
test
repnz
mov
jb
jg
inc
mov
and
xchg
stos
push
mov
cltd
jno,pn
mov
cwtl
mov
stos
call
push
pop
and
clc
mov
enter
xor
mov
leave
mov
push
js
inc
sub
add
mov
dec
and
and
pusha
es
xchg
mov
dec
testl
sbb
leave
out
test
add
outsb
jg
sub
outsb
mov
sub
cwtl
adc
push
push
mov
jg
shll
push
mov
mov
filds
sub
adc
mov
std
mov
cmpsb
sahf
inc
imul
mov
int
mov
dec
mov
pop
mov
cli
bound
insl
lods
jle
clc
fbstp
mov
sub
inc
out
mov
movsl
rclb
cmpsb
sbb
sub
pop
add
in
pop
inc
notb
pop
add
shlb
pop
sub
addr16
lea
pop
clc
fidivrs
outsb
and
push
mov
mov
xlat
divb
pop
jnp
add
jl
and
outsb
dec
add
mov
cltd
cmc
xchg
mov
nop
por
cmc
roll
orl
xchg
jb
pop
fdivs
test
xor
stc
ss
inc
jmp
fs
pop
cmp
sub
inc
scas
icebp
sub
pop
mov
push
arpl
add
das
add
adc
sub
jbe
into
ja
popa
fmul
popa
add
dec
xchg
and
sbb
or
pop
pop
xchg
sbb
arpl
pop
jp
add
inc
jmp
hlt
bound
idiv
loope
cs
mov
movsl
imul
or
cmpsb
ret
shlb
jecxz
sbb
pop
lret
push
dec
mov
mov
aam
jg
lock
lret
cld
aas
test
dec
lahf
mov
push
add
cmp
inc
aam
mov
mov
add
stos
adcb
pop
fisttpl
mov
pop
pop
sub
and
dec
neg
push
add
imul
fists
loop
cmp
push
fldl
mov
mov
mov
dec
mov
ficomps
mov
pop
leave
je
stos
inc
lods
lret
paddsb
sub
pop
movsb
sbbb
mov
cmovbe
xchg
bound
pushf
subl
test
pop
and
or
aaa
jo
mov
test
mov
mov
scas
mov
pop
inc
fistps
and
pop
mov
jnp
and
push
dec
repnz
mov
or
xchg
adc
xlat
std
aam
mov
sub
inc
cmp
push
cld
fwait
push
xor
rcll
rcrl
jle
aaa
jmp
imul
cwtl
bsr
pop
jmp
lds
dec
pop
cmpsb
and
jp
push
std
adc
mov
mov
mov
push
dec
pop
sysret
mov
jno
add
adc
pop
dec
popa
in
jb
add
push
sub
and
nop
mov
sub
mov
shrb
test
mov
inc
mov
sarl
push
int3
xor
add
mov
inc
xor
push
outsl
mov
lock
mov
dec
and
je
fnstenv
mov
mov
cmpsl
mov
push
dec
loopne
sub
adc
lods
add
add
jle
inc
mov
adc
mov
inc
into
push
out
xor
mov
icebp
and
lock
sub
enter
and
sub
loop
idivb
dec
ja
xchg
add
pop
lock
out
xchg
int
push
xchg
jae
pop
push
cld
sub
movq
test
js
jge
test
icebp
aas
adc
sti
stos
sub
sbb
loopne
rcrb
fcmove
ds
rcll
or
sub
mov
mov
clc
outsl
sub
outsl
pop
ret
mov
inc
sbb
or
jbe
mov
stc
add
push
and
aas
jg
je
mov
and
sub
mov
adc
xchg
sub
insl
outsb
add
in
enter
xchg
and
lods
jmp
jmp
dec
outsl
ret
and
pushl
sbb
std
cld
bound
adc
aad
insb
xor
xchg
sub
dec
mov
filds
add
xchg
das
cmp
add
push
ret
fwait
in
ret
cld
jb
jmp
jmp
pop
add
test
pop
sub
lds
stos
push
popa
bound
push
pop
stc
mov
jg
cmp
dec
mov
sbb
mov
and
push
cmpsb
jno
pop
imul
ds
int
jb
stos
mov
stos
jmp
dec
mov
aas
sarl
mov
std
dec
or
mov
leave
mov
lahf
sub
lcall
popa
or
mov
call
jne
movb
repz
fdivl
xchg
je
jge
inc
test
jns
mov
sbb
xchg
daa
sbb
push
mov
mov
popl
daa
lods
push
test
movq
out
ficoms
lret
push
sbb
icebp
xor
shrb
pop
pusha
stc
and
fs
js
fisttps
movsb
fidivl
cmpsb
aam
fcmovne
sbbb
cmpsl
sub
or
mov
jmp
out
push
mov
mov
jle
testl
icebp
fcomps
iret
std
mov
pop
push
leave
shl
fisubs
mov
lcall
rcll
test
push
jl
ja
gs
movd
jle
stc
adc
stc
pop
sub
mov
xchg
and
mov
loop
mov
ljmp
and
out
cwtl
inc
aas
ret
in
jg
cmpsl
adc
fldcw
lret
and
aas
ja
fiadds
in
imul
add
dec
sbb
das
cwtl
scas
inc
cmp
stc
push
icebp
mov
xorb
daa
cli
test
lods
xor
sub
fistl
inc
mov
stos
stos
mov
je
fs
call
dec
mov
iret
fildl
jo
stos
ror
out
fdivrl
into
push
ror
out
adc
inc
test
adc
psrlw
sarb
ds
push
xlat
xor
ficoms
adc
sbb
adc
or
orb
push
mov
in
add
fisubrs
lea
out
pop
shll
dec
in
inc
inc
xchg
jle
add
dec
pop
fs
dec
or
add
xchg
or
es
mov
ja
sub
push
pop
cmpsb
enter
jle
jbe
addb
es
cmp
inc
adc
xorb
sub
mov
mov
jo
mov
jb
adc
aas
loope
je
sub
mov
and
mov
cmp
fstpl
jg
jns
lods
std
xor
fbld
and
pop
std
add
xchg
fisubrl
mov
testb
sti
std
xchg
mov
cli
test
add
mov
mov
cmp
xchg
cld
sbbl
fisubl
cli
loope
dec
sysenter
lahf
sti
outsb
or
pop
xchg
rcl
mov
sbb
cmpsb
push
xor
push
imul
jle
adcb
or
mov
fldenv
je
ss
clc
mov
mov
inc
push
lea
mov
add
out
movhlps
loopne
loopne
loopne
or
or
test
or
sbbb
sbbl
shll
in
repnz
enter
push
mov
mov
sub
jle
and
pop
popa
std
cmpsb
mov
mov
adc
loope
cmp
add
jmp
sbb
jmp
cwtl
push
mov
mov
or
cltd
inc
or
lret
rcr
jle
push
shlb
addr16
into
mov
int3
cs
cmp
pop
in
aaa
cmpsb
cwtl
das
daa
enter
jl
pop
in
push
or
adc
call
lods
pop
lret
mov
in
rcl
push
leave
or
dec
pop
and
mov
test
lea
pop
jnp
data16
nop
and
inc
xor
add
cmpl
sbb
rcr
int3
push
add
popf
sub
out
in
std
mov
fisubs
push
add
aas
jmp
mov
sub
adc
call
into
mov
push
cs
cmp
adc
dec
dec
mov
aas
sbb
add
dec
cmp
loop
mov
das
shl
lods
cmp
or
stos
in
sub
push
sahf
pop
xor
sbb
jle
int3
sahf
inc
pop
add
push
rcr
mov
xor
das
mov
pop
movl
add
mov
mov
pop
scas
aas
mov
test
xchg
push
pusha
pop
sbb
leave
sub
sub
inc
popa
cltd
push
clc
push
mov
stos
mov
mov
cmp
into
inc
add
xor
inc
cmpsb
popa
sub
push
mov
or
sahf
pop
sub
sbbb
aad
shl
xor
cmovle
pop
xorb
ss
jnp
jne
es
je
dec
jne
xor
pop
sub
dec
dec
push
sub
out
dec
roll
ljmp
or
push
daa
push
fs
mov
push
les
push
lods
addl
jge
cmpl
mov
mov
mov
lea
leave
xchg
loope
imul
ficoms
add
inc
test
fistpll
xor
arpl
mov
jns
jbe
pop
stos
pop
push
jb
in
aad
or
lret
std
cmp
ret
mov
mov
clc
mov
rcrl
mov
vpsraw
shll
clc
ds
iret
xchg
mov
cmp
mov
popa
add
xchg
lea
mov
cld
jbe
les
xchg
movlps
or
hlt
inc
hlt
inc
xor
mov
cli
add
aam
loop
mov
lds
sbb
jnp
jns
aad
sarl
imul
aam
cmpsb
mov
lea
adc
loopne
xchg
adc
ljmp
clc
stc
icebp
addr16
decl
arpl
add
outsb
pop
adc
cmp
dec
je
push
mov
jne
or
jbe
cltd
fdivrl
jge
or
pop
mov
ss
xchg
loopne
movsb
fistl
mov
cmpsl
sub
fmul
pop
aad
jge
fwait
sbb
fiadds
insb
dec
incb
push
lea
hlt
cltd
jle
loop
mov
sbb
xchg
imul
test
jl
bound
ret
ds
mov
lret
shl
jb
sub
shrb
pop
inc
pop
shl
sbb
add
stos
mov
mov
mov
rorb
test
push
ror
push
sti
std
mov
mov
cli
mov
int3
push
push
das
dec
scas
iret
mov
int
jbe
ret
sbb
pop
mov
xor
or
mov
jge
lret
je
jo
jle
or
cli
xchg
sbb
and
push
jns
ja
sub
jns
sub
lret
mov
and
cwtl
das
mov
pop
test
push
pop
movsb
sbb
lods
aaa
movsb
inc
xor
mov
loop
mov
shr
ret
jle
sub
addr16
cmp
cltd
arpl
mov
stos
mov
adc
adc
adc
loopne
jg
inc
add
push
push
outsl
and
and
cmpsl
lock
jp
nop
cli
jnp
pop
sub
sub
jno
cmp
mov
in
pop
cmp
and
icebp
scas
pop
mov
sub
xor
outsb
scas
add
das
sub
lret
cltd
jb
mov
decb
pop
jae
mov
int
fwait
adc
sbb
rorl
jo
ss
cmp
out
jb
sbb
jp
mov
outsb
jecxz
add
push
aaa
fidivrs
stc
adc
xchg
inc
sahf
out
pushf
call
out
jecxz
pop
add
jp
or
lret
xchg
call
inc
adc
ljmp
sub
hlt
lock
mov
js
int
add
and
sub
cmp
clc
push
mov
jbe
test
es
sub
shl
fldcw
cmpsl
mov
divb
xor
sub
cmp
ja
sbb
jne
lret
mov
xchg
cmp
mov
push
xchg
pop
mov
test
mov
dec
aaa
lods
xor
fldcw
or
pcmpgtw
into
jecxz
cwtl
adc
jns
pop
pop
or
cld
push
xlat
out
dec
or
imulb
rorl
outsl
cmp
sub
adc
dec
jmp
and
hlt
xchg
dec
es
shl
sub
mov
leave
lock
push
js
jns
push
cmpsl
xchg
cld
mov
lods
lods
dec
jnp
xchg
lods
mov
push
or
or
mov
out
aas
gs
lods
popf
inc
aad
stos
ja
adc
adc
faddp
cltd
cs
shr
popf
cmp
data16
cmp
outsb
sbb
imul
pushf
addr16
xor
je
cltd
ss
idivl
ljmp
addr16
mov
or
xchg
pushf
pop
rorb
arpl
daa
into
in
xchg
fisttpl
outsl
cltd
pop
nop
ss
int
and
outsb
and
adc
jmp
aad
push
push
arpl
jmp
fistps
sbb
pop
pop
dec
outsl
out
or
and
push
lret
lods
pop
and
jno
jle
stos
push
inc
cmp
pushf
sub
repz
cmp
leave
sbb
jne
enter
cmp
cs
cltd
inc
ljmp
cmp
mov
bound
xchg
mov
lds
dec
fldl
jae
mov
push
data16
add
leave
neg
jge
xchg
dec
mov
in
stc
push
mov
lret
lahf
ret
pop
das
jnp
vcvtss2si
lahf
or
dec
dec
je
scas
jno
sbb
repz
bound
nop
js
aas
lcall
icebp
int
or
mov
icebp
test
pop
aam
mov
insb
pusha
or
xchg
bound
push
dec
bound
daa
xchg
ja
push
fs
js
shlb
mov
xchg
jbe
bound
adc
inc
mov
inc
adc
cltd
dec
cmpsl
and
sbb
mov
jecxz
test
push
out
mov
lcall
cltd
cmpsb
adc
mov
push
mov
insb
ljmp
push
shrb
jmp
rcll
dec
mov
aad
sbb
mov
mov
inc
add
dec
out
lods
cmpl
jl
cli
data16
shlb
xchg
mov
std
push
jl
and
jp
fcmovnu
in
rcrb
jb
push
and
jl
subb
sub
repz
mov
insb
push
fimull
andl
xor
pop
push
sti
push
stos
popf
rcl
pop
dec
mov
cli
dec
and
out
xor
add
addr16
push
and
pop
insb
or
mov
push
ljmp
and
xor
push
push
xorl
mov
xlat
popa
jo
dec
push
pop
mulb
hlt
iret
add
jg
cmp
dec
ja
dec
dec
jbe
mov
and
sbb
lahf
jb
sti
andb
lea
and
mov
dec
or
jb
sbb
sbb
mov
mov
dec
int3
xchg
das
adcl
adc
mov
mov
inc
rcrl
insb
psubusb
cmc
sahf
pop
into
mov
enter
inc
add
lea
popa
loope
fcomip
inc
lret
pop
gs
pop
sub
sbb
pop
push
leave
fmul
rclb
mov
and
mov
xor
aas
fadds
mov
fisttpl
sarb
add
lods
mov
movsb
or
cmp
ret
rcrb
js
call
lret
mov
mov
cmp
inc
and
lret
aaa
mov
inc
pop
cwtl
sub
mov
xchg
or
dec
shll
aad
dec
scas
les
jge
push
ss
sub
std
aad
hlt
dec
and
sbb
mov
adc
enter
outsl
or
pop
add
add
jge
cmp
loop
in
add
mov
mov
and
jno
sahf
mov
fcmove
push
mov
cmc
ret
int
or
mov
inc
cld
mov
gs
push
mov
in
jg
ret
jg
call
pop
add
add
dec
mov
pop
mov
sbb
add
mov
into
xor
jne
scas
mov
sub
jbe
jl
leave
mov
push
inc
je
int
in
sbb
pusha
or
shrl
in
out
inc
ds
jbe
aad
ljmp
shrb
insb
hlt
call
cmc
sbb
pusha
sub
push
jne
in
js
sti
ds
lahf
push
out
add
sbb
sub
push
mov
pop
xchg
shl
mov
push
mov
movl
inc
in
xchg
lret
jo
lcall
pushf
sbb
aas
cmc
pushf
mov
js
test
enter
and
sub
fcomi
movsb
lea
inc
cwtl
es
inc
ret
xor
divb
sub
imul
test
jecxz
mov
jnp
mov
stc
jo
jg
addr16
inc
jno
lret
add
pop
rorb
mov
xchg
pop
addr16
pusha
and
mov
add
scas
inc
iret
mov
in
in
jne
and
fisubrl
and
je
push
sbbl
dec
xchg
inc
xor
out
aad
sub
scas
xor
push
cmp
jmp
rclb
ss
mov
push
xchg
sbb
xchg
inc
scas
pop
cmp
pop
cmp
xchg
jecxz
xor
inc
push
lret
adc
aas
sub
jo
adc
add
push
mov
popf
mov
fcoms
mov
and
sbb
filds
inc
or
inc
mov
std
mov
jg
mov
or
fistl
loop
pop
test
out
icebp
push
pop
mov
adc
sahf
fisubs
imul
cmpsl
loopne
js
mov
int3
in
shlb
xchg
or
std
fcompl
cmp
jb
or
sbb
mov
nop
pushf
into
and
jmp
shlb
movsb
cwtl
loope
adc
mov
mov
cs
repz
jo
push
dec
mov
lret
add
jno
pop
pop
fwait
push
and
sbb
lods
pop
das
jle
cs
stos
xor
cmp
aad
nop
fcomps
cltd
rcr
addr16
hlt
inc
orl
push
cmp
sti
jne
imul
mov
add
ret
push
ds
push
ljmp
orl
loop
ljmp
mov
hlt
xchg
je
dec
outsl
sbb
sbb
test
fildl
lock
fadd
fisubrs
into
in
jecxz
mov
pop
or
push
pop
xchg
jge
dec
rcrb
jle
mov
dec
xor
mov
jne
mov
mov
jmp
dec
jbe
or
xchg
push
fldcw
fwait
mov
lahf
in
lock
subb
mov
inc
cwtl
pop
jecxz
dec
cmpsl
push
in
mov
or
loop
pop
adc
xor
dec
cmc
lds
adc
add
popa
sahf
std
and
cmp
mov
loope
fadd
mov
xchg
leave
mov
dec
notb
inc
mov
negl
and
xor
mov
cmc
insl
add
dec
mov
add
mov
int
fcompl
enter
cmpsb
inc
adc
adc
test
stc
xchg
xor
aam
dec
xor
std
mov
xor
pop
fnsave
push
dec
mov
cmp
cmc
es
sbb
movsl
pop
in
insl
xchg
cmp
jmp
repnz
mov
ljmp
sahf
dec
bound
cmc
repnz
cmp
pop
sbb
push
pop
addb
cmp
loopne
jns
cmp
daa
mov
lcall
ss
fdivl
mov
popa
mov
clc
stos
ds
push
xchg
dec
inc
push
mov
lret
imul
addr16
xchg
inc
sbb
jecxz
ret
iret
aam
hlt
push
pop
aam
mov
mov
sub
mov
ja
in
push
js
push
lea
rcrl
fdivrs
aam
xchg
jb
dec
outsb
stc
cli
stc
push
jnp
and
loop
es
test
add
leave
daa
cmpsl
sub
fwait
cli
cmp
idivb
aas
not
pop
push
cli
repnz
in
lock
jb
pop
or
pop
arpl
pop
pop
sahf
lea
pmullw
sub
or
les
inc
mov
jae
mov
add
adc
shll
jle
addl
cs
xor
push
enter
cmp
imul
sbb
xor
das
call
lods
pop
jb
mov
in
xchg
or
rorb
xchg
add
sti
or
ror
cmpsl
cmp
and
aam
test
cmp
lock
jo
cmp
into
movsl
xchg
sbb
jge
jae
mov
mov
cmp
inc
or
sarl
dec
push
dec
loope
out
jp
ret
faddl
and
jmp
mov
add
sbb
sbb
lock
in
sub
clc
lock
cmp
lret
jmp
test
pop
push
jl
push
push
pop
out
das
fmulp
jno
rorb
xchg
mov
pusha
inc
mov
mov
jmp
lock
bound
fmull
push
sbb
mov
and
lock
jle
push
stos
push
iret
adc
inc
movsb
lods
dec
clc
or
dec
sub
lret
sub
ret
iret
fnstsw
mov
add
or
inc
fwait
pop
inc
or
hlt
fidivrs
mov
ss
jb,pt
push
jae
aaa
sbb
cli
and
or
jae
jno
pushf
and
ljmp
arpl
push
outsb
fsubl
sbb
lret
out
in
out
es
and
aam
stos
in
mov
pop
fisttpll
push
sarl
fstp
iret
inc
pop
movl
das
out
scas
inc
jne
in
inc
addr16
loope
mov
insb
enter
add
aaa
movsb
pop
mov
aad
daa
outsb
xor
sub
pusha
inc
lahf
push
push
mov
pop
sub
and
push
rorl
test
push
scas
leave
lock
out
inc
rol
or
out
and
mov
shrb
mov
loope
dec
outsl
dec
mov
cli
int3
push
mov
cmp
xorb
jecxz
loope
jnp
sub
inc
xor
loopne
jns
sbb
mov
insb
rclb
gs
das
jmp
clc
clc
sbb
inc
mov
adc
cmp
scas
xor
lods
adc
gs
stos
mov
sbb
lock
adc
adc
push
mov
xor
pop
or
mov
fxch
je
sbb
and
cmp
sub
inc
and
daa
inc
xchg
push
lahf
jg
out
sti
aam
aam
push
pop
insl
rorb
dec
cmp
fs
mov
shll
push
sub
jne
xchg
int
in
adc
jl
push
xchg
push
repz
mov
or
jmp
daa
adc
sbb
test
sub
pop
in
xchg
mov
mov
outsl
mov
aaa
inc
mov
dec
dec
lods
mov
cmpsl
fldt
dec
add
test
jns
pop
pusha
loopne
and
pop
out
xlat
pop
lock
fcoms
insl
lret
cmc
sub
push
out
pmuludq
jne
dec
gs
add
vmovupd
loope
lods
push
or
mov
jae
xchg
mov
lret
pop
test
xor
cmpsb
jno
jl
push
xchg
out
inc
cld
cmp
int3
and
or
out
out
fdivrl
jne
faddl
sub
and
mov
out
jne
lahf
inc
mov
sti
lret
push
popa
jbe
cli
imul
xchg
clc
cmp
jmp
xor
xlat
push
aaa
rcll
mov
fsubrs
ficomps
add
or
outsb
pop
add
std
mov
xlat
call
cmpsb
movsl
lcall
leave
or
pop
scas
addr16
xchg
stos
rcrl
mov
add
leave
inc
sahf
pop
xchg
push
popf
sarl
jo
int3
stc
cltd
and
imul
adc
pop
or
mov
in
cmpb
in
lret
mov
outsb
pop
sti
into
push
out
jo
adc
ret
rolb
cmpsb
dec
push
in
mov
test
and
insb
daa
or
in
data16
lods
ja
sub
mull
mov
cmp
pop
mov
dec
mov
adc
push
scas
xchg
jp
popa
aam
sti
popa
mov
cmp
add
xchg
sub
xchg
loope
push
mov
fldenv
sti
mov
sti
and
bound
int3
test
clc
inc
loope
movsl
fs
mov
scas
xor
roll
push
cltd
cld
sub
xor
mov
mov
lods
dec
xchg
inc
shlb
xor
pop
sbb
xor
and
out
insl
int
das
cwtd
sub
inc
cmc
mov
loop
iret
lcall
adc
pop
or
movb
xlat
pushf
push
iret
xor
loop
in
push
push
sbb
cmp
pop
push
pop
xor
addr16
jl
xchg
push
or
mov
iret
mov
or
adc
mov
icebp
push
or
mov
aam
adc
mov
fsubrs
dec
mov
xchg
scas
cs
repnz
mov
jae
rorl
jae
xor
add
aaa
or
mov
lcall
rcl
test
scas
sbbb
ret
fstl
sub
movsl
cld
lahf
pop
test
push
lret
xchg
push
and
into
pusha
adc
pop
aad
cmpsb
xor
rclb
xor
mov
pop
push
repnz
mov
iret
xor
fisubrs
rorl
xor
push
jge
leave
adc
out
mov
cmp
inc
or
mov
xchg
imul
mov
mov
xchg
out
and
rcrl
in
mov
lret
dec
pop
pop
inc
add
mov
adc
pop
ret
out
mov
fistl
stos
jb
out
and
daa
and
xchg
mov
lods
stos
je
fldenv
hlt
mov
insb
loope
in
jmp
and
popa
cld
jae
dec
mov
sbb
dec
imul
mov
test
test
mov
in
lahf
mov
hlt
cmpsl
int3
out
ljmp
popa
jl
es
xor
pop
mov
dec
mov
leave
mov
push
or
cmp
push
data16
andl
sbb
push
jge
jmp
cmpsl
out
out
sti
xchg
stc
sub
inc
mov
add
dec
bound
dec
mov
push
stos
or
jg
mov
pushf
pop
cli
sub
or
cmp
jbe
aam
test
cwtl
sbb
pop
outsb
cmp
fisubrs
push
cs
fcomp
dec
int3
test
adc
scas
popf
popf
push
xchg
out
adc
cmp
daa
pop
push
loopne
mov
jmp
shlb
sbb
mov
xchg
call
cmpsl
andb
movsb
bound
mov
pop
push
ret
stos
push
ret
mov
pushf
inc
jl
jo
loopne
pop
lret
push
daa
and
fs
cmp
icebp
lret
pop
sub
push
push
movaps
cmpsb
ljmp
inc
mov
add
test
adc
je
adc
jbe
sbb
popf
decb
ljmp
jnp
pop
imull
cmovns
cmp
lret
xor
mov
out
pop
pop
outsb
jecxz
jmpw
jmp
insl
call
adc
inc
or
add
fs
and
mov
sub
inc
scas
add
ds
pop
mov
and
add
mov
js
xchg
xchg
xchg
cmp
xchg
icebp
icebp
mov
in
mov
loopne
ds
movsl
loopne
imul
movb
insb
daa
mov
jecxz
rcrb
fnsave
mov
leave
xchg
popf
adc
xor
addr16
mov
xchg
out
inc
mov
repnz
stos
dec
jnp
test
jns
and
xchg
outsl
das
nop
mov
cwtl
loop
jmp
xor
ficoms
in
adc
push
fsubrs
aas
pop
jl
fcoms
and
cmp
cmp
je
push
adc
js
add
scas
adc
adc
xchg
into
jb
aaa
jo
sub
sbb
int
pop
mov
test
pop
in
lahf
xor
or
mov
cmpsl
pop
mov
and
xchg
xchg
mov
mov
das
push
xchg
int
into
xchg
mov
call
xor
sbb
ljmp
cmc
std
add
jne
das
add
orb
xor
jo
sub
push
leave
mov
lock
mov
movlps
mov
testb
and
xor
adc
inc
mov
xorl
jle
adc
fwait
jg
fucomi
lret
mov
push
out
imul
jp
xchg
dec
sub
rorl
mov
in
outsl
jnp
idivl
frstor
fildl
stc
push
inc
inc
icebp
push
sbb
mov
scas
mov
clc
sub
clc
sub
ljmp
dec
add
sub
cwtl
adc
rcrb
cld
in
jmp
idivb
lahf
xchg
les
enter
xchg
xor
pop
cmpsb
or
dec
jmp
xchg
rcrb
push
adc
inc
in
scas
sub
mov
outsl
pop
ljmp
mov
insb
mov
ss
jp
jmp
movsl
push
cmp
popa
sub
int
and
scas
sub
inc
imul
dec
je
pusha
add
adc
mov
loope
inc
stos
mov
test
adc
cwtl
cmc
ret
sbb
ret
xchg
push
and
adcl
jae
mov
bnd
sub
mov
inc
xor
push
les
push
jmp
call
cmc
lock
cmpsb
jbe
jnp
sub
movsl
mov
adc
or
mov
xor
sbb
sbb
cli
sub
out
mov
or
push
mov
in
cmp
fcomp
aas
push
test
and
loopne
fstl
pop
sub
cltd
lahf
inc
cli
mov
lods
shlb
dec
adc
frstor
jge
aas
cld
outsl
push
pop
hlt
push
pusha
idivl
and
cmp
imul
cmp
jl
xor
divb
notb
add
cmc
push
or
test
lret
dec
pop
aaa
inc
nop
jge
jmp
inc
stc
mov
mov
push
cld
movl
call
in
sbb
or
mov
out
dec
clc
sti
mov
cmp
mov
divl
or
call
dec
fdivrl
xor
mov
mov
mov
ret
repnz
jmp
test
xchg
inc
pop
pop
mov
push
clc
adc
stos
xlat
adc
pop
in
xor
and
mov
add
shrl
inc
and
les
call
popa
adc
out
cmp
mov
dec
dec
addb
inc
add
lret
out
push
or
adc
xchg
or
pop
xor
push
stos
out
lahf
inc
pushf
xlat
mov
mov
and
lea
mov
enter
and
adcb
fwait
out
or
aas
in
popa
jbe
bound
in
outsb
stos
daa
les
and
pmuludq
pop
flds
pop
aaa
std
jae
xor
enter
stc
mov
fistpll
sbb
adc
pop
movsl
xor
js
add
pop
call
or
pop
mov
call
popf
pop
and
test
mov
jne
inc
dec
inc
imul
inc
mov
adcl
lcall
cmc
jg
jno
rorb
mov
lods
ret
ret
xor
cwtl
adc
mov
pop
mov
dec
dec
push
push
fwait
loope
cld
test
jne
mov
ror
lods
sbb
push
insl
jecxz
mov
insb
incb
ret
inc
xchg
popf
jne
dec
mov
aas
adc
and
push
movsl
rorb
popa
leave
fsubrs
push
mov
aaa
cmp
sub
jge
das
or
iret
mov
lret
cmpsl
icebp
dec
xchg
push
ds
jo
push
ds
sarb
loope
dec
cwtl
call
test
scas
gs
jno
je
and
call
mov
sahf
les
or
xchg
pop
and
cltd
pushf
or
pop
xor
ret
mov
je
outsb
fldenv
sbb
xchg
into
roll
int
pop
lret
inc
imul
adc
movsb
sub
fstl
mov
inc
pop
xor
pop
jno
in
pop
mov
cwtl
loop
mov
sub
aas
in
fstpl
pusha
xchg
aaa
mov
xchg
push
mov
push
jno
inc
cmpsb
mov
cli
int3
adcl
addr16
lret
sub
test
outsb
jb
adc
push
mov
cld
jmp
pop
jb
rcrl
imul
dec
in
jge
add
and
xor
mov
rcr
lock
ja
mov
mov
pop
xchg
movb
mov
mov
jns
xchg
cmp
sarl
cwtl
aaa
push
inc
pop
movsl
mov
pop
call
pop
inc
dec
scas
inc
xchg
mov
orl
stos
enter
xchg
ljmp
ljmp
pushf
fisttpl
add
adc
mov
shll
jno
push
jae
repnz
lods
dec
jns
jl
mov
es
in
xor
aas
jns
shll
pop
aas
cmpsl
rcll
mov
jbe
mov
cmp
popa
xchg
ja
mov
jle
xchg
hlt
jo
mov
add
jge
std
popf
jp
rcr
mov
stos
dec
dec
and
mov
xchg
cmpsb
pop
mov
cwtl
push
lea
sub
push
out
and
mov
mov
pop
dec
fwait
sahf
stc
cmp
or
sub
cmc
xchg
mov
test
and
mov
mov
stos
jbe
enter
or
xchg
add
pop
and
insb
test
xlat
jmp
pop
cmc
mov
xchg
lock
test
sbb
jo
aad
add
daa
mov
int
pop
push
orb
lcall
cmp
movsb
cmp
cmc
mov
es
daa
ds
adc
icebp
sbbl
mov
aad
rcrb
adc
cmp
inc
lock
daa
dec
pop
add
scas
aam
mov
out
cmp
xchg
or
and
mov
xor
or
push
adc
cmp
inc
test
cmp
fneni(8087
add
ret
push
enter
add
sbb
std
cmpsb
push
push
mov
hlt
sbb
js
hlt
mov
in
jns
in
cwtl
insb
addr16
push
sbb
cmp
orb
sub
daa
or
mov
xchg
test
in
and
pop
aad
add
leave
ret
jb
in
mov
dec
orb
mov
cmp
out
fwait
push
mov
imul
mov
inc
push
cmp
mov
stc
adc
test
loopne,pn
out
in
jecxz
outsl
in
sub
jne
sub
pop
icebp
test
out
ds
cmpsb
popa
cmp
adc
push
mov
push
fmul
jo
adcl
movsb
sti
daa
daa
sbb
test
lea
inc
pushf
mov
push
pop
outsl
fists
mov
dec
dec
mov
xchg
stos
mov
arpl
orl
subb
notl
mov
iret
ficompl
inc
outsl
subl
sbb
imul
ja
scas
ja
scas
xlat
je
test
xor
into
adc
inc
push
mov
cmpsb
pop
popf
and
add
cmp
icebp
mov
sub
out
stc
pop
inc
pop
aas
mov
in
js
sbb
icebp
sub
lods
cmpsb
fsts
in
inc
loop
jmp
jmp
jno
sahf
jmp
sbb
pushf
stc
fdivs
mov
imul
pop
push
inc
adc
aam
jo
xchg
sbb
jge
mov
sub
test
pop
mov
xor
outsb
pop
pop
push
push
repnz
inc
sub
mov
cs
pusha
fs
cli
in
xor
pop
insb
das
roll
sub
decl
push
xchg
cli
xchg
cmp
pusha
ret
xchg
xchg
pop
ror
inc
fwait
jmp
add
sbb
outsl
stc
mov
push
in
call
fstpt
pop
insl
test
lods
dec
ret
mov
rcll
cltd
insl
test
aas
cmpsb
push
bound
daa
or
int3
in
je
arpl
sbb
inc
mov
clc
cli
mov
subb
out
pop
pop
jne
aam
cmp
push
mov
adc
or
jp
inc
lret
div
xor
sub
jmp
cmpsb
cmp
lds
xchg
or
subl
inc
sti
mov
addr16
cltd
lea
mov
loopne
mov
arpl
inc
cmpsb
push
cmp
dec
pop
sbb
sbb
jno
adc
nop
hlt
out
push
xchg
in
and
mov
imul
xor
aas
mov
daa
xchg
push
mov
or
aad
xor
pop
mov
jle
mov
or
mov
mov
adc
iret
addr16
sarl
and
mov
arpl
imul
test
xchg
push
cmpl
dec
xchg
cmp
aaa
dec
pop
xchg
pushf
pop
cwtl
and
movsl
or
pop
cmpsb
in
jo
sahf
xchg
and
and
cmpl
xchg
rcl
jg
pop
ljmp
out
mov
filds
lahf
fidivl
popa
push
test
js
jmp
aad
out
test
rol
and
out
push
add
repnz
dec
cld
mov
inc
xchg
mov
xchg
lds
sub
jne
insw
cmpl
cmp
jae
roll
pop
push
clc
ja,pt
loopne
repnz
sti
fs
inc
mov
shrl
cmp
clc
cwtl
cmp
movsb
mov
mov
jb
inc
out
mulb
in
add
adc
push
pop
outsb
cli
xor
stos
out
fstp
push
arpl
pop
imul
xchg
push
mov
sub
sub
adc
shlb
jp
ljmp
in
sub
mull
inc
jno
sbb
mov
jmp
dec
cli
jnp
fildll
out
cmp
dec
xor
jae
push
mov
push
addb
dec
add
mov
cmc
shrl
mov
and
sbbl
inc
jo
fisttps
and
sbb
push
test
dec
sbbb
mov
push
dec
shrb
jo
lock
sbb
aas
insb
add
out
icebp
je
push
out
sub
pop
mov
sbb
in
jo
mov
popa
mov
ljmp
vpsrld
outsl
mov
std
add
mov
xchg
or
push
fcomip
xchg
mov
mov
movsb
mov
cmp
cmp
or
jp
cmp
cltd
sub
loope
lods
dec
push
roll
dec
jmp
sbb
imul
adc
jl
add
repz
mov
push
lahf
add
ds
aaa
push
jno
push
data16
and
add
xchg
sub
xchg
jo
in
push
fbld
imul
cmpsb
aam
insb
inc
lcall
pushf
push
add
bound
mov
xchg
in
out
loop
add
pop
or
or
lea
scas
enter
loop
arpl
lea
outsb
push
pop
push
lds
fdivs
push
lock
sbb
sub
inc
inc
pop
inc
cltd
jb
jge
lods
out
and
int
cmp
roll
xchg
subl
xchg
push
sub
push
xor
add
fildl
loopne
fs
sbb
call
data16
in
xor
cli
aaa
pop
cld
inc
mov
stc
jge
sbb
jno
addb
repz
cmc
jecxz
push
push
gs
push
push
lahf
inc
xor
push
bound
loop
push
lock
movsb
jbe
lahf
mov
into
notl
repz
or
into
iret
test
sub
daa
xor
xorl
mov
adc
sub
sub
rolb
daa
out
mov
pop
sub
sub
push
lret
in
jno
test
popa
adc
cltd
mov
xchg
pop
ss
adc
and
stos
ss
mov
xchg
xchg
out
cmp
mov
mov
mov
test
adc
arpl
ret
and
outsl
cmp
fidivl
in
sahf
add
cwtl
fwait
cmp
xor
xchg
mov
add
inc
lds
cmpsb
inc
mov
js
das
add
push
jnp
test
mov
cmpsb
cmp
mov
sub
pop
jnp
push
outsb
faddl
ljmp
adc
fdivs
aaa
pop
lea
xor
fisttpll
dec
iret
ljmp
dec
cli
push
mov
add
mov
icebp
mov
adc
inc
out
js
cli
shr
mov
pop
and
into
dec
push
dec
push
add
mov
fsubrs
fcomp
mov
cmp
add
aad
cmp
cmc
pop
dec
notb
in
lods
cs
fldt
in
insb
push
xlat
es
cmp
lods
lea
cmpsl
loopne
mov
inc
add
outsb
ficoml
xorl
fnsave
repnz
and
and
jp
aas
sbb
insl
das
out
lods
push
pop
arpl
in
lret
fstl
dec
xchg
xchg
gs
push
mov
jnp
mov
inc
cmp
int
ret
inc
or
sahf
ret
mov
ja
imull
mov
pop
xlat
mov
pop
add
pop
jle
andl
lods
loop
bound
add
roll
or
arpl
jmp
pop
inc
lahf
inc
sarl
mov
push
aad
mov
push
sarl
push
mull
inc
inc
arpl
repz
sub
pop
jmp
outsb
incl
pop
call
dec
dec
sbb
mov
dec
or
loop
ret
mov
in
jmp
cli
inc
test
adc
inc
repz
outsl
shlb
add
xchg
push
je
pop
xor
lret
cmp
fsubrl
out
ret
in
pop
out
das
ljmp
fdivl
ret
sti
xchg
xchg
cmc
push
mov
sbb
xchg
fsubl
cwtl
lds
dec
pop
mov
mov
cmp
mov
imul
xchg
lret
add
xchg
cmpb
out
sub
and
pop
popf
adc
daa
dec
pop
jmp
mov
dec
sub
cmp
xchg
insb
pop
sbb
mov
aaa
shrl
lea
decb
divb
outsl
and
incl
in
fs
jg
enter
xor
mov
decb
icebp
xchg
test
xchg
in
es
int
fimull
push
cmpsb
cmp
scas
add
fdivrp
and
pop
mov
popf
cltd
sub
cwtl
in
lahf
jg
xor
xchg
mov
adc
andb
adc
push
cmc
div
add
xchg
push
roll
pop
pop
pop
xchg
and
in
stc
cmp
clc
xlat
inc
jb
cld
cltd
push
std
mov
and
dec
adc
mov
fwait
cwtl
insb
mov
dec
xchg
jg
pop
and
lcall
cmp
cwtl
fadd
jecxz
jne
test
mov
cltd
or
jb
stc
in
dec
test
subl
mov
cmp
sti
inc
or
sub
pop
xchg
sahf
jg
or
pop
rcl
jp
lods
xor
jns
or
mov
xor
xor
out
outsl
mov
push
jo
jne
out
pushf
push
add
push
sbb
pop
stos
lret
mov
adc
les
addr16
loopne
xchg
out
push
sub
out
push
sub
xchg
enter
hlt
inc
mov
sahf
push
outsl
iret
mov
lret
mov
ljmp
xor
push
clc
xchg
mov
pop
lret
aam
mov
hlt
jno
sub
add
daa
out
aaa
sub
in
xor
cli
sahf
sarb
add
push
adc
lods
setbe
inc
xor
inc
jnp
ds
xor
and
clc
ret
push
inc
fidivrl
or
rorl
repz
movsb
adc
out
mov
ret
test
cmp
mov
leave
jg
mov
in
pop
sub
dec
inc
out
mov
cmpsl
addr16
cmp
std
sub
std
cld
jg
sub
lods
inc
lock
jbe
or
lret
das
in
and
xchg
sub
push
push
cld
adc
lcall
mov
insl
mov
mov
fisubl
jnp
cmp
jnp
pushf
daa
add
xchg
sbb
rclb
push
loop,pt
push
add
stos
cs
add
add
or
sub
xor
cmpsl
in
mov
or
jnp
fsts
js
sbb
mov
sbb
inc
cs
jae
mov
xchg
das
push
aaa
popf
arpl
sub
mov
mov
jae
iret
lcall
adc
xchg
inc
test
cmp
mov
jmp
loope
xor
shl
int3
cmp
jl
subl
jl
daa
xchg
sbb
cmp
das
xchg
rcrb
fcomip
push
push
cmpb
push
daa
or
mov
aad
rolb
add
arpl
sbb
push
das
mov
mov
dec
mov
stos
xchg
jno
inc
dec
pop
or
xchg
add
push
bound
inc
call
or
push
inc
xchg
jecxz
push
psubw
inc
scas
daa
repnz
inc
cmp
mov
and
es
dec
ss
xor
mov
xor
scas
jbe
bound
or
add
arpl
mov
xor
cld
adc
mov
cmp
sbb
sub
add
stc
mov
dec
fcomp
in
jecxz
dec
adc
out
mov
cmc
or
scas
lods
shlb
inc
push
addr16
movsb
cmp
sub
adc
mov
arpl
jb
xchg
pop
andl
adc
push
cmp
and
xor
stos
lcall
test
arpl
mov
popl
jne
jno
push
outsl
fstpl
lods
insl
dec
inc
stos
pmulhuw
scas
jg
adc
lods
or
ret
mov
sbb
fwait
mov
xchg
cwtl
aaa
push
sub
in
lods
out
sub
addl
js
jbe
imul
xchg
push
cmp
sbb
fsts
cltd
aad
pop
das
lahf
cltd
jmp
mov
rclb
movl
jp
or
sub
sbb
test
sub
or
mov
sub
jo
xchg
jecxz
push
pop
mov
nop
pop
push
int
fldenv
cmpsl
fldcw
mov
outsl
aam
popa
testb
int3
stos
movsb
jb
cmc
mov
dec
dec
add
movsb
out
dec
mov
lret
xchg
jmp
pop
sti
jp
jns
xor
mov
outsl
data16
cmp
mov
popa
xorb
mov
lds
jns
scas
mov
lock
pop
inc
out
jae
arpl
test
cmp
pusha
repz
inc
cwtl
scas
sti
xchg
xchg
and
xorb
fildll
std
mov
sbb
scas
dec
push
inc
sbb
mov
and
mov
ss
jno
popa
jmp
fcmovu
and
add
pop
popf
pop
push
out
push
xor
push
inc
scas
mov
cmp
sti
cmp
outsb
push
leave
call
notl
inc
xor
xor
bound
sti
pop
dec
jnp
add
enter
add
jo
mov
imul
adc
orb
pop
xlat
mov
stos
push
sbb
in
sbb
hlt
and
jb
mov
cmpsl
in
aam
mov
cmp
adc
pop
cmp
out
adc
jecxz
in
ja
jge
scas
out
mov
inc
into
sbb
or
pop
lock
pop
jae
push
mov
outsb
daa
fisubrl
incb
ljmp
lods
stos
dec
add
pop
int
push
adc
in
mov
mov
xchg
push
gs
xchg
inc
mov
out
pop
jp
push
lcall
and
scas
ds
xor
push
sbb
adc
fidivrs
mov
jno
test
jle
dec
ja
adc
and
jg
mov
lret
jbe
stc
cld
lcall
call
cmpsb
cmpb
je
cmpsl
add
daa
and
jge
sbb
pop
inc
dec
push
push
ret
push
out
fs
js
mov
mov
out
push
jnp
movsb
int3
test
or
mov
xor
fcmovnu
js
gs
clc
and
dec
mov
xor
scas
test
sbb
aam
pop
cmp
mov
cmp
lcall
jno
inc
push
stos
add
adc
lcall
xlat
pop
iret
scas
out
sub
push
dec
fstpt
cmp
popa
or
mov
in
mov
adc
in
sub
subb
test
push
pop
outsb
xchg
jmp
fbstp
mov
cmp
es
or
and
mov
jae
and
dec
sbb
push
mov
push
sub
mov
xchg
lret
shrl
or
andl
and
sbb
bound
inc
pop
sub
sbb
fstpl
pop
sub
sahf
cmp
cltd
jg
xor
gs
or
out
inc
lret
cmp
mov
ds
push
icebp
cli
in
imul
scas
xchg
ljmp
js
repz
int3
dec
pop
out
loop
adc
cmpsl
adc
lret
mov
arpl
xorl
pop
add
mov
xchg
ja
mov
sub
add
cmp
imulb
cmc
hlt
push
xor
rcrb
data16
pop
daa
push
mov
shll
insb
mov
movsl
in
test
ss
or
lahf
pushf
cwtl
sub
outsb
cmp
sbb
and
test
subl
mov
mov
cli
mov
leave
popf
lods
dec
cwtl
ljmp
lods
clc
jns
aaa
add
aaa
sub
xor
aad
cmp
fstl
mov
sub
and
lret
xchg
cmpsl
andl
jecxz
mov
ljmp
dec
push
mov
sub
ss
mov
scas
or
fnstcw
jnp
test
add
push
pop
sarl
int3
sbb
mov
into
cmp
xor
iret
iret
inc
mov
int
imul
xchg
movsl
xlat
stc
adc
fisttpl
imul
fcomp
nop
mov
inc
outsb
aad
gs
xchg
lds
lods
cmp
aas
adc
fnstenv
ljmp
pop
out
adc
inc
aaa
jae
dec
mov
hlt
push
sbbl
cmp
inc
ljmp
push
inc
les
cs
ja
imul
ljmp
sub
loopne
dec
inc
and
jle
leave
adc
in
aas
push
ficoms
lds
les
dec
and
xchg
adc
and
fdiv
and
inc
push
jb
mov
push
and
mov
aad
test
int
gs
call
add
imul
jecxz
idivl
pop
imul
arpl
jge
int
daa
ret
add
jne
repz
dec
dec
push
stos
mov
cmp
lods
and
test
cmp
xor
xchg
mov
ret
cmc
dec
dec
sahf
lret
sahf
clc
loope
cmp
add
mov
pop
or
cli
jae
xor
sub
push
jmp
test
mov
xchg
hlt
out
jnp
lods
sbb
mov
mov
mulb
sub
or
mov
pop
mov
pusha
mov
pop
xchg
push
xor
adc
test
sahf
in
mov
or
inc
cmp
adc
ret
cwtl
out
xchg
add
adc
add
mov
pop
cmp
scas
adc
movsl
iret
cmc
icebp
adc
push
push
pop
daa
inc
add
imul
in
les
outsb
movl
arpl
adc
inc
add
pop
nop
xchg
scas
repz
pop
cmp
sub
xor
lahf
data16
lock
mov
sbb
ljmp
inc
out
leave
sbb
neg
cld
mov
pop
xor
jl
cmpsl
mov
sahf
sbb
xorl
ss
mov
xrelease
mov
mov
ljmp
shlb
sbb
jg
sbbb
in
mov
lahf
ds
push
mov
cmpb
add
pop
push
adc
push
adc
jmp
adc
pop
mov
dec
andb
push
xor
pop
cmp
push
jnp
fiaddl
pop
fildll
loop
inc
inc
idiv
push
cmp
lret
sbb
daa
test
xorb
adc
je
pop
and
mov
test
jl
dec
cmp
inc
sbb
and
fwait
cld
jne
or
nop
add
mov
inc
ret
add
or
push
inc
xor
sarb
int3
sti
test
adc
cmpsb
cmp
leave
mov
fildll
imul
and
cli
cmp
sub
inc
lock
mov
xchg
pop
mov
mov
mov
jne
dec
outsb
inc
mov
pusha
scas
shll
dec
scas
xor
mov
xchg
inc
xor
pop
jns
ljmp
jge
cmp
push
orl
inc
mov
push
ret
jne
xchg
nop
add
lods
cmp
aam
addr16
add
pop
mov
mov
rorl
push
jge
ljmp
das
inc
pop
mov
sub
addb
imul
add
hlt
enter
inc
jns
mov
jno
dec
fnstsw
pop
es
mov
cmpsb
xchg
aas
xor
mov
pop
xor
xchg
test
pop
adc
adc
lea
sti
in
jns
mov
jns
jle
lret
data16
test
mov
test
insl
fsubrs
sub
out
and
inc
es
out
mov
lret
pop
dec
jno
mov
push
stos
pushw
sbb
sarb
repnz
aas
add
lret
cwtl
push
jns
xchg
pusha
loopne
test
enter
cltd
or
mov
loope
sbb
pop
hlt
pop
or
push
jecxz
xchg
xchg
inc
dec
outsb
std
stc
outsb
cmp
xor
or
nop
lods
loop
mov
push
adc
iret
pop
sub
xchg
and
add
test
xorb
mov
lods
xor
push
lock
xor
jb
mov
lret
mov
loopne
dec
mov
mov
repz
jge
sbbl
adc
and
cltd
inc
inc
jbe
lcall
pop
insl
and
pop
add
pop
sti
mov
rorb
push
xor
jge
push
lret
cli
xlat
mov
fs
sarb
in
jecxz
mov
mov
xlat
scas
jecxz
mov
dec
ljmp
sbb
add
jae
push
addl
jo
shr
jne
xchg
xchg
je
hlt
mov
ret
std
add
mov
cltd
sub
mov
dec
mov
xchg
sub
testb
inc
leave
xor
fcomps
andb
inc
or
pop
or
mov
js
in
jbe
jle
mov
cmp
inc
outsl
cmp
stos
fadds
dec
ficoms
jo
adc
das
mov
insb
pop
pop
xchg
sub
cmc
pop
cmp
shll
and
mov
repz
or
pop
rorl
ret
clc
sub
inc
xchg
mov
lret
nop
xor
testl
frstor
add
aaa
stos
sbbl
push
fdivr
loope
imul
mov
negb
bound
jmp
or
scas
stc
sbbl
jnp,pt
jbe
fmul
xchg
call
xchg
int
dec
sub
aas
js
and
push
pop
addr16
out
mov
cld
adc
sbbl
stc
out
out
mov
push
cmpsl
stos
repnz
and
xchg
test
test
dec
and
out
ret
cmp
or
and
push
shrb
inc
adc
sbb
and
call
repnz
gs
mov
mov
add
fldenv
add
pop
aad
inc
adc
sbb
mov
jg
adc
xchg
in
mov
mov
and
pop
push
fdivrs
cmpb
mov
aam
in
call
inc
xchg
mov
hlt
xor
xchg
rep
scas
inc
cmp
fsubrl
ds
mov
stos
jnp
sub
mov
std
pop
sbb
pop
xchg
add
mov
shl
add
clc
push
outsb
or
iret
int3
or
aad
jmp
xchg
out
pop
push
stos
xlat
inc
mov
mov
dec
lcall
push
xlat
mov
bnd
lahf
aad
pop
or
sti
push
jo
cmp
lds
outsl
sub
sbb
xchg
pop
mov
js
ds
test
pop
daa
in
in
mov
stos
pop
movsl
mov
sbbl
int3
push
add
and
pop
je
fists
inc
sbb
loop
ret
into
out
xchg
and
mov
add
enter
popf
push
pop
sub
das
cld
jecxz
xchg
rorb
mov
notb
imul
idivl
inc
outsl
adc
xchg
pop
dec
nop
aas
jo
scas
imul
jecxz
pop
pop
ja
mull
and
out
es
push
mov
push
mov
add
dec
pop
aaa
sub
out
int
daa
add
fdiv
ljmp
rolb
test
repz
fs
xlat
inc
fcmove
jno
stos
cmpsb
lock
pop
mov
jge
jge
pop
xor
testb
out
adc
xor
push
cs
out
sbb
cli
fcompl
movsl
ja
mov
test
ljmp
jge
cmp
pop
jne
lds
sbb
xor
jo
add
lcall
leave
arpl
loopne
mov
adc
fldt
mov
mov
jmp
fwait
mov
cmc
jl
mov
gs
sbbl
pop
in
int3
incb
jge
hlt
or
dec
imul
fnstenv
ljmp
lahf
data16
mov
push
daa
jno
repnz
insb
ljmp
cmp
xchg
mov
je
sub
cmc
sub
fdivs
fcomps
aam
into
out
subb
xor
pop
fcompl
pop
xor
in
in
insb
xor
out
cli
inc
pop
mov
or
lret
or
and
stc
adc
xchg
scas
xchg
fisttps
cmp
mov
adc
pusha
pop
cld
adc
mov
sti
jle
mov
lods
xchg
stc
and
dec
cli
cs
mov
or
jmp
inc
cmc
cli
rorb
pop
sub
add
push
iret
ss
xor
mov
xchg
aam
test
in
fwait
shlb
loope
call
stc
mov
pop
inc
jb
hlt
std
jno
lea
cltd
jmp
dec
jae
and
inc
dec
add
adc
cmc
pop
dec
loop
in
jmp
ret
add
push
rorb
or
ljmp
dec
xchg
clc
jecxz
scas
mov
mov
or
inc
sub
out
lock
sbb
fildl
pop
roll
pushf
mov
mov
test
pusha
cmp
pop
or
mov
push
insl
fimull
loope
or
bnd
push
lea
xchg
rcrl
scas
mull
es
dec
cwtl
out
push
mov
xchg
cmp
jl
inc
xor
imul
mov
push
mov
ss
xchg
jmp
sub
and
lds
imul
mov
dec
test
ss
adc
and
dec
jbe
xchg
mov
clc
mov
subb
cs
and
fldl
aad
movsb
cld
movsb
mov
xchg
pop
add
mov
and
std
jns
shlb
leave
frstor
int3
dec
jle
in
inc
lods
imul
sbb
jno
xor
jbe
pop
pop
lods
scas
fstps
sub
sbb
add
enter
xor
testb
jle
mov
xchg
or
cmovno
ljmp
xchg
dec
in
ret
cli
test
fcmovb
jne
mov
in
jns
mov
jbe
loope
xor
jae
loopne
sbb
pushf
imul
stos
out
sbb
push
cs
pop
pop
mov
xor
popa
inc
xor
nop
mov
rcll
or
imul
shrl
sub
es
inc
loope
fcomps
shr
sti
das
movsb
ret
je
inc
sbb
dec
push
dec
mov
xchg
ljmp
repz
ja
fs
in
inc
out
inc
js
mov
pop
mov
cli
incl
les
pop
test
or
call
adc
mov
sar
push
mov
dec
jno
xchg
pop
xchg
add
mov
aad
add
jge
inc
fstp
sbb
adc
mov
push
and
push
xor
adc
out
mov
gs
or
cwtl
nop
xchg
or
aad
jbe
rol
fwait
xor
negb
xor
add
jmp
mov
ja
cmc
cmp
data16
fistpl
fst
js
adc
inc
jae
lea
xor
cwtl
ficomps
mov
cld
insl
and
loopne
push
shll
scas
ret
mov
in
jo
lods
jmp
push
sahf
ljmp
fadds
shll
xchg
adc
loopne
test
andl
inc
add
mov
sub
xchg
sbb
inc
jns
lods
xor
lahf
pop
xlat
push
pop
or
mov
ljmp
enter
gs
mov
mov
or
mov
pop
fildl
jb
add
xchg
jne
jae
xchg
dec
mov
imul
dec
push
call
imul
pop
call
xchg
into
imull
or
in
jp
pop
sub
loop
movl
cld
int3
movsl
imul
int3
icebp
add
and
test
addb
add
cmpl
rorl
and
lods
mov
stc
push
arpl
pusha
cld
imul
das
cmp
dec
inc
outsl
and
mov
pushf
adc
or
daa
inc
pop
mov
hlt
into
inc
jo
movsb
xlat
dec
cmpsb
outsl
cmp
movsl
or
xor
cli
sbb
push
adc
cmp
push
les
mov
add
inc
imul
loop
xchg
aam
cli
pop
inc
stos
adc
jl
mov
popa
adc
inc
add
test
mov
scas
cmpsb
mov
lcall
out
icebp
outsb
out
stos
sbb
clc
sub
nop
or
mov
xchg
adcb
push
dec
pop
stc
outsl
imul
and
cmpsb
loopne
mov
cmc
lds
dec
dec
dec
mov
aaa
cld
lods
xchg
lea
jo
jp
in
rcrb
sub
outsl
jecxz
loopne
scas
fcmovu
ja
xchg
mov
mov
and
hlt
push
das
and
imul
movsl
fstp
andl
mov
shl
inc
and
in
ljmp
loope
lods
cmpsl
nop
cmp
std
movsb
add
jecxz
jnp
sahf
cmp
mov
mov
arpl
adc
movsl
movlps
ds
movsb
enter
add
jecxz
shl
pop
cmp
or
adc
xchg
ljmp
jmp
jns
cld
insb
fildl
pushf
sub
inc
xor
bound
iret
les
push
imul
cmp
or
sub
xchg
test
popa
gs
out
xchg
mov
ret
xchg
inc
cmp
xchg
add
dec
repz
cmp
xlat
mov
jo
leave
xor
jmp
inc
notl
jns
pop
add
ret
xlat
xor
jbe
or
cmp
sbb
sti
adc
xchg
sbb
add
in
push
ja
jno
push
jbe
je
test
mov
sub
sub
lcall
int
dec
test
and
inc
loopne
or
sub
fsubrl
addl
nop
cmpsb
and
nop
movsl
push
sbb
je
imul
inc
imul
scas
xchg
add
pusha
pop
adcl
repnz
pusha
fisttpl
xchg
aam
xor
push
mov
sti
adc
lahf
es
ficompl
mov
mov
sbb
iret
hlt
jmp
mov
xchg
mov
mov
mov
sbb
mov
sub
stos
jmp
or
imull
in
xor
cld
rolb
sti
mov
leave
daa
push
mov
xor
shrb
cmp
jmp
adc
lds
int3
stos
imul
loopne
mov
cwtl
stos
mov
imul
movl
lahf
mov
mov
xor
das
xchg
pop
imul
adc
pop
jno
std
hlt
int
push
cwtl
pushf
decb
pop
lods
clc
jmp
aaa
outsb
cmpsl
sub
scas
jb
notb
pusha
leave
jge
testb
jle
rcll
iret
cmp
adcb
or
stos
mov
fmuls
popa
daa
xlat
add
xor
pop
insl
incl
test
xor
push
cmpps
push
sub
std
adc
loope
push
xchg
imul
mov
adc
adc
das
cmp
in
fs
xchg
mov
jp
xchg
xor
cmc
xor
outsl
push
call
jbe
pop
mov
sbb
insb
pop
ljmp
inc
or
sti
ds
mov
mov
daa
sar
mov
xchg
divl
mov
aas
cwtl
mov
xor
mov
and
push
and
sbb
out
repz
shlb
std
xor
mov
adc
in
add
pop
repnz
sbbl
cmp
shr
xchg
or
ja
sub
into
stos
jmp
pop
in
push
push
cmpsl
je
aam
mov
jecxz
scas
jno
mov
push
inc
cwtl
jae
daa
add
jge
push
sbb
test
inc
xor
jno
jae
and
iret
add
and
add
sub
icebp
xor
and
xchg
mov
hlt
sbb
xchg
lahf
mov
adc
mov
inc
scas
aam
in
fdivr
enter
addr16
mov
outsb
hlt
sbb
xor
sub
push
mov
jle
jbe
mov
pushf
mov
cs
mov
adc
and
gs
aaa
js
mov
es
shl
stc
jns
loop
fadds
sbb
inc
test
push
mov
addr16
mov
addb
inc
jo
insb
lods
mov
bsf
mov
mov
adc
push
popf
add
orl
dec
stc
xchg
cmp
scas
mov
jge
mov
loope
push
jbe
icebp
pop
pop
lods
xchg
adc
ret
popf
pop
lahf
stos
push
movsl
fadds
in
sub
jge
xor
lds
mov
push
xor
add
pop
push
mov
xor
lret
pusha
shl
add
movl
loopnew
pop
cmpsl
call
xor
mov
scas
sub
scas
or
mov
call
jno
pop
movsb
les
ja
pusha
orl
inc
or
xchg
lcall
ret
cli
push
cmp
std
and
xor
cmp
mov
leave
fistps
test
xchg
xchg
add
lret
jb
mov
insl
fnstenv
adc
mov
loop
mov
mov
jl
push
mov
mov
dec
jecxz
or
xchg
push
mov
or
lahf
lock
pop
inc
cmp
push
jg
int
jmp
mov
xchg
into
mov
sub
xchg
sub
and
je
add
subb
jp
xor
dec
mov
lods
pop
pop
jns
xchg
xor
xor
pop
ds
jno
mov
idivl
aam
pop
xlat
jp
divl
test
test
gs
lock
movsl
sbb
jl
jns
pushf
andl
xor
and
ret
addr16
es
jg
pop
ret
add
data16
in
sbb
mov
addl
das
jge
and
aad
stc
jl
jno
fnstcw
cld
scas
pop
or
inc
xor
aas
mov
mov
in
in
lret
scas
adc
ja
pop
cmp
test
push
out
mov
std
rcll
aaa
mov
insb
cmc
sub
stos
push
movsl
loopne
mov
shll
sub
pop
shrb
jp
movsb
fdivrp
pushw
mov
lcall
mov
shrb
sub
lahf
lret
loope
sub
fstpl
fcoml
lods
pop
das
adc
cmp
push
ret
mov
adc
mov
mov
push
xor
sub
jb
gs
aad
cs
ret
das
push
sbb
das
in
pop
mov
dec
sti
adc
mov
sbb
sub
adc
sbb
jb
clc
addb
push
push
jmp
adc
jae
clc
mov
mov
cltd
rcrl
jp
cmp
out
sbbb
inc
push
jmp
pop
incb
test
mov
leave
adc
mov
inc
insb
dec
and
aad
repz
dec
fdivl
jle
mov
cmp
rcrl
xchg
xor
adc
cmpsb
jmp
fisubrs
inc
rorl
addr16
cmp
sub
mov
jnp
push
xor
mov
xor
mov
shrb
fdivrs
dec
jmp
inc
cwtl
sub
jns
roll
xor
sbb
pop
imul
cltd
cmp
sbb
repz
das
iret
cli
aaa
push
adc
pop
inc
add
inc
adc
or
mov
sbb
iret
xor
dec
cltd
dec
rcrl
and
rcll
mov
cmp
lods
mov
outsb
inc
xor
or
orb
mov
fwait
lret
adc
pop
sti
jg
mov
fists
jno
fldcw
jp
fbstp
sbb
mov
or
jno
outsl
sbbb
popf
add
pop
aam
sbb
mov
decb
hlt
mov
xchg
aam
cmp
mov
jp
jno
daa
aaa
dec
push
repz
ss
arpl
xor
jle
or
cld
add
fistl
sub
jnp
adc
cmpsl
xchg
clc
ja
cmp
xchg
mov
notl
pushf
xor
imul
pop
lds
repnz
jge
mov
pop
add
leave
mov
fwait
pop
cmp
daa
xchg
out
push
xor
adc
mov
sub
pop
rcll
cmp
cs
call
pop
jge
jne
out
push
xchg
jg
lcall
or
mov
fcomps
aaa
xor
xor
adc
push
cmpsl
mov
mov
mov
jae
lock
inc
cwtl
pushl
arpl
shl
mov
cmc
rolb
cs
sub
pop
lds
push
sub
push
ret
les
cwtl
orl
xchg
xor
mov
sub
sub
ss
iret
dec
enter
dec
inc
push
loope
and
add
pop
pop
cli
fwait
pop
jbe
jns
aad
cmpsb
int3
fmulp
subl
or
shll
xchg
push
insb
fwait
mov
ret
cmp
imul
pop
loopne
inc
pop
out
repnz
aaa
and
fs
lock
out
inc
mov
in
mov
pop
or
in
ficoml
jge
mov
fsubs
jecxz
dec
loope
rol
cli
sti
sub
jo
push
jae
outsl
inc
mov
std
addr16
sub
and
adc
add
jnp
adc
cmp
xor
and
pop
sbb
mov
ss
in
loopne
push
inc
mov
push
xchg
sub
xchg
xchg
mov
loopne
loope
loop
xor
mov
or
or
xor
cli
pop
std
and
fsub
pop
inc
mov
push
xor
jb
sub
jecxz
mov
push
lahf
adc
dec
fs
fs
jo
push
jo
and
out
dec
jae
and
cli
push
inc
mov
out
xchg
gs
cwtl
mov
clc
cld
das
inc
sahf
sti
mov
pop
fwait
scas
xchg
ss
sub
js
or
dec
and
add
mov
popl
cli
mov
hlt
sbb
out
adc
out
jecxz
out
cwtl
mov
jmp
popl
ficoml
rclb
fcoms
jb
jg
ret
add
mov
std
and
aas
imul
mov
sub
jae
adcb
int
pop
mov
xchg
dec
pop
fwait
mov
in
fnstcw
fldenv
out
loope
fwait
or
mov
mov
xchg
imul
leave
push
lods
int
push
andl
xlat
mov
mov
lea
cmpsl
out
xor
mov
adc
sub
sub
and
rolb
fcomp
jl
sub
jne
jb
imul
hlt
sahf
push
push
mov
jg
cli
nop
xor
adc
jmp
sub
in
imul
jb
loop
mov
icebp
push
jne
fwait
roll
jmp
outsb
jg
jg
test
push
sbb
push
mov
lahf
mov
inc
stos
ds
jge
add
push
icebp
add
imul
sub
hlt
les
mov
fadds
mov
pusha
mov
clc
jae
xor
shr
cs
ret
mov
in
insl
push
inc
arpl
dec
and
cmc
out
jb
and
scas
pop
mov
gs
mov
dec
pushf
loope
int3
sub
outsl
lds
mov
data16
or
fimull
xor
lock
fdiv
mov
outsl
add
in
fcmovnu
inc
mov
inc
adc
adcb
sbb
test
adc
jne
lret
mov
push
pop
mov
dec
aaa
popa
adc
les
mov
out
scas
or
in
push
repnz
nop
pop
stos
mov
xor
adc
fdivs
cs
adc
es
jne
rolw
add
sahf
and
xchg
sbb
fld
test
dec
subb
mov
ljmp
data16
or
adc
repz
and
push
mov
ljmp
add
jb
adc
and
push
add
lret
xor
fimull
sbb
push
outsb
into
push
rorl
jg
mov
jmp
addb
repnz
int3
fistpll
insl
mov
add
add
ret
mov
sbb
jmp
adc
fsub
scas
stos
xor
lcall
sub
lock
mov
push
xchg
aad
push
enter
dec
or
dec
add
es
test
pop
or
lods
mov
mov
test
add
or
lods
push
mov
jecxz
and
pop
std
add
mov
push
inc
add
dec
mov
ret
or
xlat
test
inc
jge
fimull
push
inc
std
jb
xchg
ss
jecxz
sbb
andb
ficoms
push
adc
mov
cmp
push
inc
insb
sub
mov
fidivs
scas
lret
adcb
sti
stc
stos
push
mov
inc
inc
stc
cs
and
mov
inc
mov
push
clc
int
ret
jno
stos
xchg
sbb
adc
ljmp
xchg
sbb
out
hlt
pop
mov
cltd
xchg
mov
xchg
testb
sub
jbe
imul
mov
pop
leave
aas
out
mov
inc
xchg
push
loop
mov
clc
add
mov
vmwrite
fwait
insb
jmp
fidivs
aad
mov
in
fsubrp
jle
fcmovne
lods
aam
adc
in
and
fstpl
popa
sub
sub
and
je
fwait
sarl
push
and
sbb
jne
cmp
dec
jge
cltd
pushf
std
mov
out
pop
pop
mov
jle
fwait
insb
mov
cmpsl
jae
lods
int
fwait
pop
cltd
je
jle
int
push
mov
xor
jp
adc
in
xchg
jmp
adc
scas
inc
adc
jae
lret
jecxz
push
xlat
fstps
fs
stos
ljmp
mov
mov
or
pop
sbb
jecxz
dec
aam
sbb
push
enter
shrl
movsb
xor
pop
insl
mov
inc
nop
dec
insl
test
lea
and
inc
ljmp
popf
out
lods
scas
in
cmp
mov
jle
jg
adc
pop
adc
cmp
pop
repnz
mov
cld
xchg
in
fistps
dec
xorb
in
ss
xchg
push
pop
pop
cli
dec
das
and
push
or
inc
dec
xchg
xchg
xchg
cmp
xchg
push
mov
xchg
scas
repnz
int
shll
mov
fldcw
stos
sahf
sub
sahf
loope
out
lret
push
mov
inc
pop
in
test
bound
aaa
retw
jns
sub
cmp
cmp
dec
mov
sbb
cmc
inc
pop
sub
sub
dec
mov
and
mov
repz
and
loope
ljmp
mov
ljmp
subl
das
cld
jle
and
pop
loop
pop
cmp
xor
adcl
xor
aaa
sub
xchg
cmp
and
add
mov
daa
cmpsl
aas
xchg
test
in
out
test
sti
ret
and
jb
push
mov
repnz
mov
xlat
mov
imul
sbb
fisttpl
inc
jno
jg
jae
pop
mov
push
push
in
or
into
adc
pushf
dec
and
mov
stos
jmp
inc
sub
movsb
or
test
jmp
lahf
xor
ja
mov
sub
mov
pop
in
lods
jge
push
ja
jno
dec
fdivr
js
xchg
pop
pop
inc
jbe
add
jl
sbb
jb
pop
nop
fwait
sbb
and
jne
cmp
aam
fimull
shlb
jne
push
sub
sbb
lret
lods
xor
jnp
mov
int
lret
inc
jp
inc
jecxz
and
aas
roll
xchg
jb
pop
pop
daa
js
movsb
or
rorb
jns
xchg
in
xchg
xchg
ret
jge
aam
fstl
or
test
or
mov
loop
pop
das
mov
stos
imul
inc
fisubs
cli
jae
dec
and
fcomi
cmp
lea
add
jecxz
mov
lock
xchg
or
push
mov
mov
jns
jg
or
test
mov
or
incb
sbb
inc
jg
icebp
add
sbb
inc
callw
cmp
cmp
jecxz
xchg
mov
dec
cmpsl
and
push
stos
adc
sbb
icebp
sub
lds
sub
dec
pop
jne
mov
pop
pop
aaa
loopne
push
dec
cmp
pushf
jb
lods
fdivrl
jmp
fdivrl
pop
repnz
pushf
lcall
xlat
daa
arpl
inc
xor
imul
adc
movsb
dec
push
repz
xchg
data16
adc
sahf
jnp
add
jl
hlt
or
scas
xor
int3
dec
xor
adc
pop
ljmp
sahf
mov
pop
adc
punpckhbw
int3
push
je
subl
jo
push
rorb
sarb
cmpsb
pop
hlt
rcll
cmc
shrb
cli
arpl
je
and
outsl
enter
sub
xor
sbb
sbb
popf
add
xchg
pop
sbb
mov
sbb
jmp
adc
cmpsl
out
jl
and
adc
xor
pop
insl
jns
jmp
mov
js
das
cltd
out
fiaddl
pop
loope
mov
add
mov
imulb
sub
iret
push
add
outsl
xchg
dec
dec
mov
sahf
arpl
adcb
mov
push
sbb
and
xchg
inc
pop
jbe
mov
mov
test
fwait
aaa
test
ljmp
pop
out
out
inc
lcall
xchg
leave
call
icebp
push
push
fwait
dec
jne
pusha
jno
inc
mov
loop
stos
pop
xchg
fcom
out
cmp
not
lock
xchg
leave
sub
cmp
adc
xchg
lds
or
mov
cmc
subb
cmpsl
adc
jae
aam
add
lret
mov
cs
sbb
int
fistpl
xchg
lods
sub
ljmp
rorl
or
inc
add
arpl
fnstcw
pop
xor
dec
lock
mov
int
lahf
cmpsb
xchg
push
gs
dec
jne
ret
jne
loopne
xor
jne
fists
push
jnp
aad
mov
mov
jnp
jle
and
cmp
pop
aaa
ret
inc
out
andb
jle
lret
add
cltd
cmp
bound
and
add
cmp
sbb
and
movb
xor
sbbl
ss
xor
inc
jg
dec
gs
insb
or
sub
outsl
jnp
ffreep
sti
divb
aaa
adc
sub
xchg
jle
in
or
lea
xor
sbb
lock
in
ret
mov
push
pop
xlat
pop
rcll
shll
addr16
fisttpl
xchg
push
aam
push
and
push
pop
in
daa
mov
aam
ds
and
mov
cmp
mov
rorl
push
js
out
rcrb
pop
pusha
pop
add
mov
mov
sbb
in
sbb
adc
loope
loop
addr16
and
jae
insb
out
divb
dec
inc
mov
fadd
out
cmp
ret
fsubrl
lret
push
push
loope
fucomi
outsl
lds
or
pop
fistpll
sarl
dec
jecxz
sbb
aas
mov
dec
nop
pop
pop
push
fsubrs
in
clc
and
lds
pop
adc
sbb
dec
shrl
sub
or
push
dec
mov
jo
mov
fdivs
rcl
outsl
repnz
mov
movsbl
xchg
popf
push
inc
insl
mov
and
pop
es
mov
loopne
dec
fsts
in
push
sarl
dec
add
add
dec
nop
data16
es
inc
pop
xchg
shll
ja
jg
add
mov
dec
xchg
std
sbb
sbb
pop
mov
push
lock
lods
adc
cltd
les
and
sub
lcall
inc
jle
std
mov
sti
pop
mov
mov
mov
ret
mov
adc
sub
xchg
pusha
pop
stos
scas
gs
mov
pop
out
and
xchg
arpl
pop
cltd
add
inc
fsts
ljmp
dec
jle
and
arpl
sbb
cmp
jp
arpl
add
jno
lods
adc
add
adcb
inc
inc
test
mov
out
xchg
loop
mov
pop
out
jbe
xlat
cmp
into
jle
jo
scas
sbb
sub
inc
cmp
sbb
mov
pop
ret
mov
into
imul
cmp
xor
pop
push
aas
lcall
popf
mov
inc
test
xchg
and
mov
sar
ljmp
adc
cli
cmpsl
xor
lcall
aaa
fwait
rcrl
cmpsl
push
imul
mov
cmpsb
push
lret
addl
xor
arpl
xor
sbb
pop
cmp
cld
xchg
mov
add
rclb
mov
fnstcw
mov
mov
out
es
fs
inc
dec
mov
decl
push
test
loope
icebp
out
shl
xor
or
lods
jno
push
or
cmp
add
incl
out
out
sbb
jp
inc
pushf
mov
adc
fincstp
push
test
mov
imul
pop
mov
pop
mov
pushf
jl
mov
add
movsb
sbb
add
push
sbb
mov
or
inc
es
jge
jecxz
out
sarb
ret
jl
repnz
scas
inc
test
shrl
out
xor
cmp
ljmp
mov
inc
xchg
sbb
jno
lods
aam
xchg
xor
or
dec
mov
inc
cmp
jo
push
icebp
ret
push
je
mov
lods
dec
out
add
clc
jg
stos
cmp
fwait
pop
aad
outsl
dec
mov
jecxz
les
nop
aas
jne
pushf
ja
enter
add
and
mov
adc
imul
sbb
or
mov
insb
jmp
mov
mov
insb
loopne
les
inc
and
fcomi
adc
mov
out
lret
adc
sarl
xor
movsl
sub
in
sub
xchg
jbe
arpl
xchg
push
pop
cli
iret
std
stos
dec
notl
mov
adc
rorl
mov
mov
imul
or
mov
aad
scas
movsb
mov
in
ret
imull
inc
and
fsts
in
add
fsin
mov
jmp
ret
stos
sbb
rcrb
aas
dec
add
add
es
or
and
sbb
sahf
mov
jae
and
lcall
ret
arpl
sub
mov
cmp
sbb
xor
sub
mov
inc
jl
push
loope,pn
add
lock
mov
dec
lods
insb
xchg
mov
jo
xchg
push
lcall
shr
inc
add
xor
insl
ret
push
ds
icebp
sub
daa
sub
adc
xor
sbb
rorl
mov
lods
out
sahf
fsubl
cltd
jae
scas
mov
fidivs
ja
stc
test
aad
fs
pop
es
mov
sarl
fistps
add
pushf
daa
dec
dec
mov
fisttpll
mov
dec
cmp
in
mov
mov
out
push
pushf
int3
idivl
and
xor
call
lret
push
jb
dec
lea
std
icebp
pop
mov
pop
inc
push
lock
mov
imul
mov
icebp
mov
aas
mov
dec
shl
dec
test
mov
pusha
stos
mov
sub
push
or
inc
xlat
mov
lods
sbbb
sti
jnp
mov
aas
sub
pop
ja
outsl
repz
xchg
orl
aas
pop
cmp
add
incl
xchg
mov
dec
std
push
int3
loopne
jne
xor
test
pop
jg
jb
mov
pop
xlat
inc
adc
mov
push
cmp
push
call
mov
push
imul
outsl
mov
cmp
mov
sub
movsb
ret
cmpsb
pop
sbb
push
out
movsl
pop
jle
aad
dec
adc
fistpll
insb
loop
or
in
bound
fwait
sbbl
dec
mov
mov
lahf
mov
bound
fwait
lock
fwait
push
mov
int
aas
dec
imul
fcoms
xchg
dec
jecxz
mov
push
adc
aad
sub
jae
fwait
xor
daa
daa
cmp
popf
scas
jg
add
and
test
mov
daa
js
imul
cmpsl
rcrl
test
add
insb
sti
clc
jae
xlat
pop
mov
push
clc
adc
adc
ret
xchg
mov
outsb
mov
and
push
nop
sar
fnstcw
js
and
push
push
leave
mov
inc
jg
addl
lds
test
mov
movb
shrl
adc
mov
shrb
inc
in
jge
pop
cmpsl
dec
aas
adc
jmp
stc
ret
les
mov
std
mov
sbb
jo
loopne
pop
arpl
lods
jo
inc
add
mov
or
add
cmpsb
xorb
std
cmp
dec
mov
pop
pop
in
out
mov
cmpsb
pop
jg
mov
divb
inc
fsubl
aad
nop
test
stc
jo
cmpsb
gs
aaa
lea
jmp
sbb
jmp
push
xchg
xor
jo
or
adc
mov
out
jp
popa
pop
push
sub
cmpsl
xlat
cmp
divb
dec
pop
push
jecxz
mov
in
sub
pop
inc
adc
loopne
addr16
push
ja
cmp
test
cmpsl
test
mov
xchg
cmp
fmul
xchg
movsb
jbe
ja
scas
mov
sbb
int
cmp
push
or
xchg
jecxz
inc
testb
lock
pop
aas
jmp
sti
das
cmpsb
mov
call
cmp
out
adc
xor
inc
push
in
xchg
cli
in
adcl
xchg
and
mov
out
xchg
xor
fwait
mov
dec
dec
push
ljmp
jl
sarb
push
out
xor
fcoms
push
push
mov
sarl
idivb
dec
cmp
adc
cmpsb
shr
push
lds
sub
jbe
loop
filds
push
inc
ds
jns
sbb
dec
inc
pop
loop
into
shll
imulb
pop
and
loopne
fisttpll
imul
ljmp
push
loop,pt
cmpsl
test
xchg
les
cld
std
ja
jecxz
add
cmpsl
inc
in
sub
cmp
dec
fcoml
or
xchg
enter
pop
ljmp
push
jns
es
push
xchg
stos
sub
push
mov
sbb
dec
frstor
aaa
ret
jns
push
pop
aas
ret
pop
mov
jb
fisttps
loopne
jae
lcall
nop
pop
sub
mov
jmp
inc
inc
add
and
in
dec
push
clc
popf
gs
and
aaa
ljmp
pop
lcall
addr16
es
in
imul
test
mov
dec
pop
add
rcrl
jmp
lea
mov
pop
subl
pop
dec
mov
popl
sahf
jbe,pn
cmp
sti
or
popf
or
enter
mov
push
dec
shlb
daa
enter
mov
xchg
pop
xor
mov
adc
pop
ret
jecxz
xchg
leave
jnp
mov
or
jge
jl
pusha
imul
sbb
pop
rcrb
daa
mov
sub
mov
xchg
dec
xchg
pop
je
pop
ljmp
cmp
mov
pushf
stc
enter
or
testl
outsb
insl
adc
push
cmpsl
pop
icebp
cmpsb
outsl
xchg
push
lods
sbb
jmp
xchg
iret
in
mov
shl
aad
xchg
push
std
rcrb
inc
xchg
ret
jge
pop
les
rolb
xlat
adc
xchg
movzbl
cmp
in
loopne
out
mov
in
je
into
es
or
jp
fmuls
iret
xchg
cld
xor
outsl
in
push
sub
cli
xchg
sub
orb
adc
add
mov
pusha
repz
xchg
fimuls
or
test
icebp
out
or
repz
pushf
fsubr
fmuls
sub
cmpl
fcoms
lcall
cmp
popa
xor
dec
lret
mov
out
stos
js
pop
cmc
lea
xor
fiadds
xor
sbb
stc
inc
ffreep
data16
ja
mov
dec
pop
mov
aas
in
push
cmpsb
loopne
push
mov
sub
sahf
insb
adc
sbb
sahf
or
mov
dec
push
jno
mov
cld
mov
into
jb
mov
in
inc
xor
icebp
je
and
pop
cwtl
test
aaa
data16
cmpsb
rcr
cli
not
adc
and
push
in
ja
loop
pusha
data16
jb
iret
ficoml
jnp
nop
sahf
xchg
movsb
and
or
daa
out
pop
aad
pop
mov
imul
cld
mov
fisttps
push
and
push
mov
loope
push
pusha
pop
sti
push
cmpsb
xchg
inc
xchg
push
and
jo
add
outsb
xchg
sub
pop
lods
xor
push
enter
jmp
cmpsl
adc
adc
pusha
mov
or
ljmp
nop
cwtl
sub
sbb
je
jmp
adc
cmp
push
add
scas
popa
andb
xchg
fwait
sbb
inc
mov
loopne
mov
push
jno
js
rol
stos
sti
add
pusha
adc
push
push
fcomps
sar
sub
mov
inc
cmp
xor
dec
int3
mov
mov
jecxz
js
std
sbb
fsubs
sbb
mov
in
fisttps
mov
bnd
inc
int
mov
int
xchg
ficoms
xchg
lds
stc
dec
in
push
push
adc
lret
fsts
and
xchg
push
xor
add
lds
addl
shll
es
push
cmp
sub
jae
hlt
std
fucomp
ds
test
adc
fstpl
cld
lds
icebp
loope
sbb
stos
sbb
imul
jmp
adc
push
addl
sahf
and
inc
pop
pop
mov
inc
xchg
pop
push
loopne
into
mov
push
mov
fwait
push
ret
mov
add
or
fcoml
dec
sub
mov
aam
movl
inc
xor
cmp
cltd
adc
jae
leave
mov
ss
and
xchg
cli
jl
rorb
aad
and
xchg
loope
shl
mov
jl
mov
mov
cli
mov
es
movsb
sub
scas
mov
mov
jmp
inc
in
jns
aas
adc
and
ja
jnp
inc
mov
mov
push
mov
mov
jmp
imul
jecxz
jge
loope
andb
nop
mov
popf
pop
cmp
cmc
or
cmpsl
cmp
cmpsb
jbe
out
out
mov
dec
outsb
adc
adc
mov
gs
mov
fs
jo
pop
test
in
ljmp
fsubrl
popa
lds
scas
sbb
mov
mov
mov
je
jnp
jmp
test
or
popf
jne
bound
stos
test
int
arpl
stos
das
scas
cwtl
outsb
push
mov
push
add
mov
cmp
mov
adc
jns
and
test
sub
xor
adc
and
push
mov
xlat
test
push
mov
jle
lret
push
jl
ljmp
movsb
fiaddl
lea
data16
mov
out
orb
mov
iret
mov
mov
pop
jmp
fcompl
out
sarb
pop
xorl
sti
iret
push
fistps
fstpt
test
push
cltd
fcomps
push
or
mov
pushf
inc
mov
mov
ret
outsl
pop
jle
js
in
clc
mov
out
test
dec
mov
or
mov
scas
shl
mov
stc
jbe
mov
or
in
xor
subl
les
jb
jns
popf
int3
inc
dec
inc
jnp
call
cs
int3
scas
dec
pushf
addr16
fildl
div
mov
xchg
popa
arpl
shll
lret
add
jnp
mov
pop
inc
add
negl
xor
mov
push
xchg
ja
bound
ds
push
lea
sbb
shlb
adc
popa
push
faddl
out
pop
xchg
hlt
pusha
flds
daa
std
fcom
ja
jg
push
pop
mov
fidivl
xchg
cmp
pusha
fidivrl
jno
push
cmpsb
inc
mov
repz
inc
pop
dec
mov
sub
xor
and
jno
xchg
pusha
stos
mov
mov
fsubrp
andb
xchg
xor
mov
cmp
push
pop
add
push
jno
mov
cmp
mov
pop
mov
add
mov
js
push
shl
inc
adc
and
and
bound
xor
dec
imul
pop
push
mov
int3
add
sub
push
cmp
dec
sahf
cmp
push
mov
push
cld
adc
and
insb
mov
dec
popa
insl
ret
stos
mov
cmpsb
rclb
sub
cmpsl
loope
fwait
imul
arpl
std
mov
lds
loopne
jbe
xlat
sahf
lret
rol
int
jbe
test
ret
das
push
lock
lcall
or
pusha
lea
push
pop
mov
xchg
inc
push
push
ljmp
jmp
ljmp
jl
stc
aam
pop
or
and
andl
push
aas
je
mov
sbb
mov
jecxz
inc
out
push
addr16
sub
pop
mov
xchg
add
loopne
imul
cmp
sub
dec
dec
negb
outsl
adc
and
leave
test
subb
or
pop
jae
sbb
lock
cmc
jo
push
jne
test
lret
shrl
arpl
jae
rolb
cmp
and
sub
xor
scas
mov
and
test
scas
dec
jnp
dec
adc
sbb
test
mov
xor
adc
push
popf
dec
inc
or
fwait
sub
mov
test
mov
xor
mov
sbb
stos
jb
pusha
fisubl
dec
icebp
sti
mov
outsl
mov
test
jl
les
cmc
dec
nop
push
stos
pushf
ljmp
dec
test
mul
sbb
mov
jnp
stc
add
inc
stos
pop
jb
push
mov
add
mov
int3
and
or
or
dec
mov
insb
les
out
pop
push
push
sbb
xchg
adc
cmp
pop
js
or
inc
insl
pop
mov
cmc
cli
jp
pop
push
lds
addb
adc
ljmp
pop
into
rclb
lcall
lods
mov
push
mov
mov
mov
mov
and
ds
shll
mov
repz
jecxz
or
mov
ja
cmp
inc
dec
leave
gs
pop
orb
lret
adc
sti
push
test
popfw
xor
insb
xor
sti
push
stos
add
push
jmp
push
cmp
jb
push
clc
lods
or
daa
out
lcall
jecxz
mov
into
mov
push
add
aad
repz
push
fdivrp
out
ljmp
div
xchg
jp
lods
out
sub
adc
dec
xor
mov
mov
jle
lahf
cltd
das
stos
push
pop
cwtl
xchg
jg
jp
fstps
out
push
sbb
xchg
or
sub
pushf
jmp
aas
clc
repz
push
scas
push
or
mov
popa
rcrl
mov
mov
mov
out
out
call
fcmovne
push
fwait
mov
fs
loop
cmp
adc
stos
and
insl
aaa
adc
pop
pop
and
xor
xchg
arpl
ret
negl
pop
sbb
mov
imul
pop
test
in
jmp
js
rcrb
leave
pop
mov
dec
inc
jmp
jle
xchg
cmp
mov
cmp
jno
out
xchg
xchg
test
and
push
cmc
or
scas
cltd
mov
cmp
mov
pop
mov
jg
hlt
mov
mov
aas
xchg
jno
negb
pop
scas
icebp
push
js
jne
cbtw
sbb
xlat
jg
cwtl
mov
fstps
into
mov
iret
sbb
clc
inc
ss
popa
mov
xlat
add
jno
jno
cltd
es
mov
in
leave
or
stos
fmuls
push
fcoml
rcrl
addb
out
sbb
mov
push
insl
jb
jns
add
mov
push
into
or
lds
xchg
mov
adc
xor
jmp
scas
lock
jb
cmp
inc
pop
enter
cmpsl
cmp
jecxz
jno
testb
xlat
sub
adc
fwait
subl
and
jecxz
rclb
jle
xor
in
xchg
dec
pop
inc
mov
jge
fiadds
push
mov
test
add
je
mov
pusha
cmp
jg
xchg
loop
dec
orl
sub
outsb
and
je
mov
adc
cmp
push
sti
gs
in
pop
fisttpl
imul
dec
push
push
sub
fucomp
popa
xchg
dec
enter
or
jae
enter
push
test
sub
aas
cltd
xchg
add
ds
add
negl
adc
cltd
mov
xor
inc
or
movsl
pusha
add
addr16
inc
mov
pop
cs
sbb
jl
icebp
adc
and
testb
inc
sbb
cmp
std
jne
cmp
shll
adc
cmp
mov
insb
dec
inc
in
push
out
mov
or
inc
outsl
cmp
pop
loop
ds
stos
xchg
xchg
add
ror
stos
jb
mov
pop
cmpsl
jns
lret
mov
mov
mov
into
mov
test
jmp
sub
in
inc
leave
dec
outsl
dec
dec
xchg
cmpsl
std
js
insl
mov
mov
push
jg
dec
fisubl
xchg
out
ja
or
jmp
xchg
and
test
fcomi
hlt
sbb
mov
dec
insl
dec
pop
loopne
fists
add
js
xor
loope
pop
mov
popf
je
or
xorl
scas
shl
mov
in
mov
stos
negl
popa
adc
fisubl
rep
jno
jne
js
jge
rclb
fucom
sahf
cmp
sub
in
js
and
push
adc
xchg
into
arpl
mov
lock
jge
push
add
mov
ret
stc
dec
pop
xor
imul
mov
adc
das
out
inc
fucom
mov
dec
repz
cli
xor
xchg
add
nop
stos
hlt
fs
pop
repnz
mov
and
sbb
gs
repnz
sti
les
inc
movsb
das
mull
mov
inc
add
and
adc
fidivs
repnz
jecxz
adc
push
add
out
test
cs
inc
xlat
outsb
adc
lods
inc
mov
mov
add
fcmovu
mov
pop
mov
sub
mov
sbbb
fs
ret
and
repnz
sub
cwtl
int3
leave
out
mov
icebp
or
outsb
fsubs
jnp
jo
or
ss
shl
das
addr16
jns
mov
dec
adc
in
stos
add
cltd
cltd
cmp
dec
out
cmp
xor
mov
idiv
mov
or
cli
clc
dec
pop
mov
add
ljmp
lock
pop
ss
in
add
cltd
outsl
inc
inc
or
in
jae
pop
or
pop
ficoml
adc
rcrw
pop
inc
scas
ljmp
xchg
out
cmp
jmp
insl
test
add
mov
test
pop
jecxz
lods
push
lods
ss
aaa
int3
scas
xchg
mov
pop
movsb
mov
or
xlat
cmc
sarb
pop
inc
mov
dec
movsb
js
in
mov
pop
push
jecxz
out
adc
jnp
sarb
cmpsl
mov
xor
jecxz
mov
jle
adc
int
scas
call
xchg
mov
and
sub
mov
in
incl
dec
std
jecxz
fisubs
push
pop
and
test
mov
pop
cmp
outsb
pop
sbb
sub
mov
and
push
ss
ja
lods
adc
sub
jle
ret
jne
jae
lods
pop
data16
dec
or
bound
inc
lcall
repz
adc
scas
or
pop
mov
mov
sub
mov
sub
and
into
inc
pusha
xchg
mov
xor
pop
dec
inc
hlt
dec
jecxz
push
fdivrs
mov
jno
shlb
add
jl
jge
adc
popf
fwait
iret
aam
ja
fs
cwtl
in
clc
pop
out
sub
call
add
jmp
sarb
inc
gs
jle
ds
int3
pop
or
test
add
or
stos
pusha
enter
insl
ljmp
repz
dec
cli
je
dec
xchg
jo
cmp
loop
int
dec
adc
ljmp
jns
sub
pop
popf
adc
mov
out
jbe
sti
shl
idivl
inc
aaa
shlb
add
adc
and
push
add
shlb
out
cmpsb
fisubrl
mov
cmp
addb
pop
lret
fidivs
aas
cld
push
subl
and
js
into
insl
mov
cmpsl
jb
push
jae
and
push
xchg
rclb
roll
mov
idivl
shl
mov
lcall
and
ljmp
dec
cmovae
mov
cs
add
adc
ffree
jne
mov
fsubrs
insb
fidivs
and
icebp
dec
add
jecxz
xchg
sti
jno
jecxz
lods
xchg
add
mov
das
mov
mov
inc
fistpl
lods
xorl
js
adc
icebp
jb
imul
dec
lods
push
mov
arpl
pop
dec
or
mov
fwait
xor
or
pop
pop
pop
rcrl
mov
xor
data16
popa
and
xchg
cmp
loopne
or
sub
fs
fucom
test
pop
cmpsl
cli
js
mov
out
xor
sbb
ficoms
push
inc
sti
push
fwait
cmp
aam
xchg
push
fstl
jno
or
pop
pop
xor
add
jl
push
or
add
or
sbb
xchg
mov
mov
and
pop
fcompl
jge
mov
fimull
cld
les
pop
mov
inc
sbb
sbb
inc
mov
jecxz
cmpl
jg
out
shll
stos
mov
mov
pop
jecxz
mov
mov
jg
pop
inc
jae
xchg
mov
cmpb
or
pop
xor
and
andl
inc
sub
and
fsts
test
pop
add
push
cltd
adc
into
xlat
mov
pop
ss
sti
into
mov
push
pop
rorl
cli
arpl
pop
mov
daa
jae
int
jle
lds
pop
adc
nop
mov
out
adc
inc
push
pop
push
das
mov
push
popf
add
cmovo
or
and
js
dec
stc
push
sub
adc
scas
std
jne
push
jg
in
and
adc
push
xor
cltd
adc
sbb
imul
rclb
mov
out
jp
shll
fimuls
adc
mov
mov
ja
movsl
xor
push
rep
dec
rcrl
scas
les
xlat
insl
or
and
in
insl
sbb
push
jmp
mov
lds
sub
frstor
ret
fsubs
cli
or
int3
mov
pop
cmp
call
sbb
xor
and
cmp
or
jo
mov
inc
jecxz
xchg
into
je
insl
aam
lretw
push
stc
or
stos
dec
js
jb
or
data16
mov
lahf
push
jg
cmp
push
pop
ss
or
mov
test
and
movsb
add
jno
fwait
jns
push
ret
mov
cmpsl
call
jp
int3
ljmp
pop
cmpsl
adc
or
xchg
jno
es
fwait
in
sahf
add
subl
xchg
jge
lahf
sbb
mov
push
loop
roll
loop
sub
idivb
movsb
ss
cs
push
fiadds
cmp
nop
pop
rolb
aad
rcl
sbbb
adc
fidivl
lahf
pop
add
pushf
shrl
hlt
stos
and
sub
loop
scas
insb
notl
mov
clc
int
mov
mov
les
pop
mov
clc
rcll
sbb
out
xlat
int3
std
nop
lods
inc
dec
mov
and
movsb
cmpsb
pop
mov
cmc
lods
mov
and
jecxz
xor
push
xchg
xchg
icebp
les
test
sti
jg
out
sub
mov
jp
in
cmpsb
jge
sub
stc
push
incl
cmc
test
sbb
pop
lret
aaa
out
cmp
movsl
aaa
std
xchg
out
das
or
imul
lods
enter
or
loope
scas
fcompl
xchg
mov
ja
dec
sbb
fsub
mov
xchg
inc
adc
jae
sbb
jnp
dec
pop
mov
push
adc
stos
movsb
pop
sub
test
test
lahf
lock
sub
push
inc
inc
out
mov
andb
popf
lahf
stos
sub
mov
jp
cmp
fcomps
push
les
hlt
inc
cmp
inc
inc
pop
push
aam
repz
adc
sub
adc
loope
das
test
push
loope
icebp
jb
mov
sbb
mov
pop
xchg
incb
jmp
js
cmc
xlat
mov
outsb
in
insl
xchg
ret
or
stos
loopne
pop
mov
stos
stos
xchg
cld
or
xchg
dec
mov
mov
and
aad
dec
int3
sti
or
pushf
mov
test
fs
pop
cli
out
fcmovb
dec
outsb
ret
sbb
push
inc
mov
sub
mov
incb
in
dec
mov
mov
loop
int
mov
jg
sub
sar
jo
jns
sub
mov
shl
inc
xor
dec
sub
ds
shll
int
xchg
adc
mov
xchg
jmp
pop
cs
lea
mov
aas
out
sbb
mov
ljmp
add
fmul
enter
adc
loope
mov
mov
repz
mull
jnp
idivb
add
ficomps
cwtl
in
xor
call
sarb
push
pop
cld
dec
daa
dec
mov
jno
cli
fs
jmp
dec
and
outsl
dec
mov
out
sub
mov
repz
and
sbb
testl
mov
cmp
or
mov
fstpl
inc
add
or
xor
jl
mov
insl
mov
leave
addr16
mov
cltd
jle
imul
push
jmp
les
pop
outsl
and
out
adc
in
lcall
cmp
or
scas
cmp
les
enter
scas
int
data16
sub
dec
dec
dec
or
fcmovnb
stc
int3
jle
adcb
arpl
cmp
lret
adc
push
pop
pop
pop
loope
pop
cmp
lea
cmp
cmpsb
fs
push
pop
in
inc
out
test
pop
jnp
add
xchg
adc
push
xchg
outsl
or
cmpsb
mov
aas
ret
add
mov
notl
std
mov
bnd
dec
roll
xchg
jae
daa
rcrb
icebp
pop
cmp
pop
arpl
dec
jl
dec
ficompl
inc
mov
or
cmp
push
out
xlat
inc
inc
mov
enter
out
add
pop
nop
adc
dec
mov
or
jbe
push
rorl
sub
jo
inc
mov
jbe
insb
sbb
gs
mov
shlb
sets
sub
negb
jecxz
adc
cltd
and
ss
scas
sbb
mov
push
push
scas
lret
ret
lcall
pop
mov
bound
cltd
out
fcmovnbe
test
out
inc
dec
loope
ret
jmp
ds
push
imul
xor
fsts
or
cmpsl
lea
sbbb
mov
xchg
jmp
mov
testl
fsub
mov
test
xor
or
xchg
push
jo
popa
addr16
xor
dec
xlat
or
cltd
les
stos
xchg
shlb
aad
shlb
cmpsl
mov
imul
adc
fs
push
ss
scas
pop
out
fldcw
add
aam
fistpll
cmpsb
cmpsb
mov
fisubl
std
adc
mov
ds
pop
pop
sbb
hlt
jp
jo
push
inc
fcoms
fsubl
jb
out
loop
mov
fneni(8087
movb
mov
or
stc
in
lret
shll
or
add
push
clc
iret
push
outsl
xor
sub
jge
mov
mov
cmpb
cmp
bound
xor
pop
xor
mov
cmpsb
jb
mov
mov
adc
in
and
into
add
fs
das
mov
ror
sbb
out
out
and
roll
mov
xchg
sarl
mov
lods
aad
jmp
or
roll
jecxz
movl
push
or
sbb
xor
push
jne
fmul
xchg
pushl
sbb
pop
clc
cmpb
cmc
jb
movsl
cld
ret
aas
icebp
sbb
adc
adc
adc
push
jnp
int
arpl
add
mov
mov
pop
fistpl
xchg
adc
cwtl
sbb
mov
inc
push
arpl
cmc
mov
add
hlt
xchg
rcrl
cmp
or
sub
push
aam
in
adc
or
inc
lea
insb
lret
iret
nop
call
inc
cmc
and
adc
fs
push
test
vcmppd
add
call
push
mov
mov
jns
cmp
xchg
inc
or
out
push
sub
loop
dec
inc
mov
rcl
ret
stos
int
fsubl
mov
enter
cmp
xchg
or
lock
mov
cmp
popa
sub
out
test
pushf
sti
or
cmpsl
pop
gs
push
out
ds
or
int3
mov
lahf
repnz
mov
movsb
sbb
lret
mov
scas
aam
and
mov
xchg
cltd
or
or
icebp
pop
mov
mov
adc
add
jmp
or
fldcw
inc
scas
push
push
mov
push
xchg
pop
movsb
aaa
or
repnz
xor
mov
mov
inc
ret
mov
mov
push
ret
jne
sub
in
popf
mov
stc
cmp
mov
scas
js
and
sbb
scas
leave
mov
orb
cmp
or
mov
xor
ljmp
xchg
push
push
mov
daa
cwtl
hlt
or
popa
xor
sbb
imul
aad
js
push
add
add
adc
stos
or
mov
cmp
fucomi
ret
mov
or
inc
ss
pop
sahf
dec
inc
jne
xor
out
inc
jle
pop
jl
int
and
sbb
mov
sbb
cmp
mov
inc
push
inc
mov
lock
jnp
inc
outsb
cld
mov
outsl
sbb
cmp
idiv
dec
dec
push
sarl
jg
jae
les
add
cmpsb
loop
loop
outsl
push
xchg
fldln2
enter
jbe
shlb
daa
xor
nop
repnz
pop
mov
mov
shlb
subb
mov
jecxz
jno
jno
insl
mov
fwait
rcrb
jae
jmp
daa
pop
sbb
inc
xchg
dec
sbb
call
faddl
shufps
push
adcb
dec
aas
out
out
add
popf
inc
fsubrs
loope
inc
in
or
and
pop
lds
stc
jb
outsl
shr
je
pop
or
daa
std
repz
cwtl
xor
adc
xchg
jns
sbb
xchg
pop
add
xchg
mov
mov
dec
lock
xor
pop
push
std
hlt
cmp
jp
cmp
ret
adc
fidivrs
sub
daa
icebp
xchg
sahf
fdivl
call
scas
xchg
mov
or
mov
inc
cli
icebp
pusha
pushf
add
pop
faddp
sub
xor
lcall
jmp
jmp
gs
xor
clc
add
sahf
addr16
cmpl
rcl
pop
in
xchg
mov
or
jo
loop
pop
inc
push
cmp
fcmovne
sti
cwtl
lods
cmp
lock
xchg
jno
push
inc
test
nop
pop
clc
inc
mov
rcrb
daa
aad
bswap
stc
push
adc
xchg
xchg
leave
push
mov
lods
mov
rcl
mov
cmp
lods
cmpsb
sbb
add
sub
push
push
in
xor
repz
xchg
sub
mov
mov
dec
push
jle
or
dec
and
mov
add
mov
jge
sub
xchg
les
dec
add
jle
push
dec
das
in
add
inc
pushf
cmp
test
cmp
addr16
pop
mov
fcmovne
mov
repnz
loope
leave
mov
call
jl
mov
inc
cmpsb
outsl
mov
lds
cwtl
into
and
imul
or
or
xchg
pop
rorb
dec
test
xchg
stos
sub
xor
hlt
cmp
and
stc
dec
cmpsb
mov
fisubs
mov
insl
add
shlb
cmp
xor
lea
ret
ret
fldenv
lds
test
mov
fldenv
xchg
sub
sbb
aam
push
inc
fildl
addr16
sets
fcompp
fildl
xchg
aaa
xlat
xor
jnp
ja
push
pop
jle
push
push
lret
int
inc
mov
jbe
push
mov
mov
fs
cmpl
ss
mov
adc
sbb
push
jb
arpl
fldt
add
clc
lock
pop
cld
sbb
lcall
mov
bound
daa
orb
push
lds
lds
adc
push
mov
js
inc
adc
adc
testl
cld
xchg
aam
xor
cmp
aad
dec
jg
ds
std
fldenv
and
cld
or
xchg
int3
gs
mov
sti
push
ss
xlat
stc
cwtl
test
test
mov
mov
lret
sub
jge
test
jns
xchg
jae
adc
mov
idivb
les
dec
push
push
idivb
movl
mov
cmc
mov
jnp
xchg
subl
sarb
jecxz,pt
test
mov
ficompl
bound
fildl
lods
inc
push
sbb
out
xchg
ret
mov
push
adc
cmpsl
push
sub
mov
push
ret
mov
cld
test
add
sbb
pop
lahf
mov
mov
add
out
push
aad
cs
jnp
or
in
loopne
dec
rcrl
and
xchg
push
js
add
xchg
sar
in
jmp
test
in
in
jle
lret
pop
jle
fsubrl
imul
mov
lret
inc
dec
mov
jns
enter
shrb
dec
sti
in
xchg
inc
hlt
imul
xchg
mov
je
nop
xor
sbbb
repnz
mov
adc
fcoms
jbe
xchg
adc
and
movsb
or
out
mov
or
aaa
xchg
movsb
xchg
aam
cltd
mov
lret
mov
jbe
jg
dec
add
jecxz
mov
add
push
sub
bound
lret
pusha
sbb
add
or
mov
lcall
xor
lcall
pusha
cmp
pop
lods
out
sbb
enter
inc
ljmp
ds
mov
cli
enter
pusha
pop
or
in
pop
rorb
leave
jmp
or
add
or
cmp
mov
jae
int
xchg
xor
sbb
mov
inc
jae
dec
fildl
and
and
mov
pusha
ds
int
es
int3
cmpsb
pop
fwait
and
push
shrb
and
das
cld
mov
lds
sahf
inc
add
mov
stos
cld
sub
pop
pushf
inc
in
pushf
xchg
sbb
movsl
inc
insb
in
bound
or
bound
test
dec
cvtps2pd
adc
mov
into
push
mov
dec
and
cmpl
cld
mov
adc
pusha
iret
jp
je
cwtl
cmp
addr16
lea
ja
mov
scas
enter
xchg
xor
fisubrs
dec
xchg
fdivrl
int
jmp
and
jno
mov
adc
aad
pop
cmc
shrl
or
insb
mov
add
adc
icebp
push
call
inc
cs
lock
fistpll
and
std
outsb
icebp
lret
xchg
fidivs
pop
loope
adc
mov
push
adcb
movl
lock
xlat
jnp
xchg
movsl
test
into
xchg
loope
mov
sti
or
add
fs
sbb
iret
mov
jecxz
push
push
shl
ret
cltd
push
xlat
sbb
sub
icebp
push
test
inc
imul
leave
pop
cmc
pop
and
cmc
lds
inc
movsl
aaa
loope
mov
mov
rclb
clc
enter
jg
int3
lods
add
push
add
aam
jbe
mov
outsl
lods
pop
fidivrl
cs
rclb
cmp
out
imul
push
sahf
in
push
push
push
in
dec
pop
repz
popf
mov
mov
jge
icebp
ljmp
insb
lods
loop
cmp
sub
cmp
or
out
int3
ja
insl
add
dec
or
jnp
testl
idivb
push
push
or
mov
and
mov
orl
jns
faddp
cld
int
inc
jno
mov
pop
into
xchg
pavgb
cmp
mov
mov
in
push
aad
jecxz
ja
rclb
out
test
mov
push
shld
lods
dec
call
decb
adc
push
rclb
push
loop
adc
or
hlt
lret
stc
test
jp
or
bound
movzwl
sub
loope
mov
iret
jae
push
ret
int
pop
cmp
hlt
mov
fs
push
xor
int
lcall
add
or
stc
pop
loope
in
call
mov
outsb
cmp
mov
imul
pop
js
movsl
push
scas
fstl
int3
out
idivl
xor
xlat
xor
and
lods
inc
stos
dec
pop
popf
adc
test
xchg
xor
mov
xchg
mov
cltd
jno
xchg
fwait
adc
adc
shrl
scas
xor
push
sub
adc
dec
pop
push
roll
cld
outsb
daa
repz
mov
push
jp
lret
sbb
jbe
adc
aaa
fiadds
push
add
and
mov
jnp
pushf
ret
lds
movsb
cmp
icebp
push
mov
icebp
jmp
mov
imul
aas
push
ficoml
mov
pusha
and
cld
mov
push
cmp
popa
gs
inc
js
xlat
or
jne
lret
in
in
fdivl
cs
inc
repnz
sub
popa
shl
mov
lret
jmp
xor
xor
fsub
arpl
push
addl
add
iret
fsubl
aaa
scas
sub
dec
scas
outsl
push
dec
inc
js
scas
sarb
push
inc
fistpll
sbb
adc
loopne
lea
hlt
cwtl
cmp
int
in
inc
outsl
adc
leave
imul
es
sub
mov
push
test
mov
imul
xchg
fcoms
in
add
imul
pop
dec
popf
popf
inc
push
dec
xor
adc
insl
data16
push
adc
and
sbb
pop
out
cmp
in
cwtl
andb
lret
inc
adc
mov
xor
jo
fadds
fdivrl
pop
and
pop
fsts
test
mov
xchg
jecxz
pop
ss
gs
jns
cld
push
add
cmpl
jo
movsb
cmp
adc
enter
outsb
cmpsl
mov
shlb
lret
add
arpl
sbb
or
fwait
int
lods
inc
xchg
ret
bound
icebp
push
or
push
or
sbb
add
int
cmp
in
shll
mov
cld
pop
xchg
cwtl
dec
xor
ret
pusha
push
xlat
ret
nop
adc
je
lds
cmp
sub
lods
inc
addr16
sub
nop
xchg
jmp
mov
shll
iret
scas
sti
inc
cmp
rolb
inc
in
roll
cmpsl
push
inc
dec
iret
xor
test
in
fidivrs
push
mov
inc
scas
xorb
fstpt
mov
jg
cs
imul
xor
mov
sbb
imul
or
imulb
push
inc
jge
into
xchg
lock
jne
xor
sti
push
test
dec
sub
cmp
xchg
insb
ficoml
sarb
mov
xor
or
adc
push
sub
aad
icebp
jb
mov
test
out
mov
and
mov
pop
rorl
mov
xor
pop
out
ja
jecxz
cmpsb
loopne
xchg
lret
arpl
adc
jmp
adc
jle
add
mov
jne
xchg
push
daa
adc
xlat
xchg
jl
jno
push
inc
jp
repnz
add
sbb
rorl
or
pusha
mov
subl
jb
out
add
pop
jo
call
pop
pop
pop
push
divb
cltd
and
dec
aas
rol
sub
inc
cmp
inc
mov
in
test
call
imul
lods
iret
test
mov
xchg
adc
jbe
iret
sbb
dec
or
xchg
sbb
mov
cmpsl
dec
nop
rolb
lcall
dec
sahf
push
fsubr
imul
loopne
loope,pt
and
sbb
int3
imul
sbbb
insb
adc
sub
in
int3
cmpsb
ficompl
outsl
outsl
fwait
mov
in
adcl
mov
ret
lds
adc
idiv
mov
add
adc
out
mov
sub
adc
mov
fildl
in
mov
sub
xor
insl
mov
es
cmp
add
pop
mov
adc
push
and
testb
nop
int
loop
call
jl
mov
repnz
jne
jmp
pop
dec
fwait
ja
push
jbe
mov
adc
lahf
and
push
call
pop
stc
or
mov
mov
cld
push
and
inc
clc
in
pushf
mov
loope
pop
sbbl
mov
enter
pop
mov
int3
jmp
jae
ds
or
mov
sahf
xor
push
xlat
jl
shrb
xchg
mov
jp
shll
fsubrp
push
pop
fs
imul
mov
in
into
dec
fbld
mov
pop
or
lcall
sub
sbb
dec
mov
xchg
sub
xor
xchg
das
stc
lods
or
adc
leave
pop
mov
daa
or
int3
lahf
dec
push
lods
lods
hlt
mov
add
xor
nop
icebp
inc
jo
xchg
or
insl
test
lret
or
pusha
mov
mov
outsl
xor
roll
sub
sahf
xor
add
scas
add
adc
push
pop
mov
loopne
inc
imul
adc
push
adc
icebp
mov
xlat
or
mov
xchg
popa
pop
daa
inc
sbb
rcrb
cmp
push
lods
mov
repz
aad
mov
mov
icebp
xchg
cmp
pop
xor
inc
repz
adc
sar
cs
xor
dec
test
add
dec
mov
sahf
xor
pop
mov
das
and
into
xor
cmp
rcrl
call
cmpsb
roll
fcomps
mov
mov
adc
outsb
push
or
vpermi2pd
movsl
sub
push
lods
push
mov
xor
push
push
adc
and
mov
xor
scas
sub
repz
sarl
les
mov
sbb
xlat
stos
jb
jle
pop
popa
in
adc
adc
dec
cmp
testl
ljmp
xchg
pop
sti
cmpsb
movsl
in
adc
cmpl
in
negb
aas
adc
push
or
inc
daa
pop
cld
push
and
aam
dec
inc
sbb
cwtl
mov
mov
mov
add
loopne
paddb
rcrl
and
enter
inc
mov
sub
pop
fstpt
mov
xchg
xor
call
enter
jecxz
fnstcw
out
nop
leave
mov
outsl
adc
mov
dec
push
mov
inc
fwait
cltd
imul
push
cld
cmp
lret
push
xchg
dec
icebp
cmc
enter
pop
cmp
push
dec
nop
mov
dec
lock
add
nop
es
test
push
scas
mov
in
pop
jle
fisttpll
aad
outsb
adc
lock
sbb
inc
shl
inc
mov
es
and
pop
pop
in
xchg
adcb
inc
push
xchg
dec
add
sar
push
or
addl
push
jb
insl
into
push
scas
popf
imul
fs
jle
in
cmp
pop
loopne
insb
imul
xor
pop
pop
mov
or
mov
icebp
pop
test
pop
sahf
repz
push
lods
sbb
add
cmpsb
lods
inc
pop
jnp
pop
mov
fisubs
xchg
insb
lea
xchg
jno
ficomps
es
xor
sti
inc
push
jg
cmp
dec
mov
adc
and
cmp
stos
xorl
icebp
xor
xlat
repnz
cmp
in
pop
dec
add
sahf
stos
jo
das
mov
add
xchg
ss
sbb
mov
enter
aaa
decl
idiv
push
lods
pop
inc
or
xlat
stc
xchg
cmpsl
es
jb
fldcw
in
sbb
adcb
xchg
inc
pop
pop
lds
shrl
cmc
dec
or
insl
sbb
int3
cmp
aad
inc
dec
mov
sbb
xchg
movb
jmp
fistpl
stos
sti
xchg
or
mov
lods
inc
lods
data16
sub
xor
adc
outsb
and
cmp
xchg
fwait
lret
push
popf
cmp
and
xor
pop
xchg
sub
pop
loope
imul
in
pop
outsl
mov
rorl
andl
mov
sub
aad
ret
out
ret
andb
or
mov
addb
scas
cmpb
ret
pop
jle
pop
daa
adc
fiadds
cs
add
add
subl
jle
faddp
jmp
inc
jecxz
push
gs
xlat
out
shrb
cltd
pop
lcall
mov
jl
dec
fld
mov
cli
jae
addl
and
pop
mov
les
push
inc
jns
loop
mov
pop
negb
dec
dec
sub
daa
cli
cmp
sub
out
loope
and
adc
enter
push
jo
pop
lret
sbb
xchg
cmp
scas
pusha
push
hlt
and
roll
inc
dec
sub
aas
cmp
jg
scas
sbb
jno
mov
test
lock
and
xchg
mov
add
jge
push
aaa
mov
testb
jno
test
push
in
push
pop
mov
test
pop
adc
sub
cld
repnz
sub
iret
outsl
dec
cld
jl
pusha
lock
jno
aad
cmp
cmp
int3
es
scas
rep
lahf
movsl
push
stos
pop
outsb
je
repz
rcrb
xchg
mov
fcmovnu
scas
jmp
mov
std
loope
adc
push
add
repz
clc
inc
movsb
sub
mov
push
jno
daa
jno
and
fmuls
aad
test
lahf
jbe
inc
inc
stos
test
push
pop
gs
rcrl
xor
or
pop
jns
loope
mov
outsl
pop
xchg
out
shlb
hlt
call
push
xchg
add
xlat
lcall
sbb
in
push
mov
std
outsl
xchg
je
dec
dec
sub
xchg
xor
ficompl
or
movsl
cmp
leave
push
jp
xchg
dec
cltd
in
jl
mov
jb
or
test
dec
bound
lock
in
rcl
xchg
aaa
dec
or
cwtl
clc
jmp
sbb
push
jg
not
inc
or
or
loop
mov
mov
bound
aam
test
pushf
ficompl
pop
push
mov
mov
test
subl
mov
ds
sbb
idiv
test
out
mov
rcrl
fcomip
or
dec
push
mov
xchg
adc
mov
popf
fsts
orb
scas
mov
aam
std
lret
fs
or
xchg
xor
outsb
and
sbb
push
dec
insl
sti
in
sbb
push
inc
fsubrs
and
xchg
sahf
adc
xchg
cmp
push
mov
ret
jmp
andb
sub
lods
mov
inc
jns
xchg
mov
daa
out
cmp
jnp
inc
or
orb
pop
mov
dec
sub
sahf
xor
and
mov
loop
stc
js
push
cs
pushf
push
std
xchg
not
lea
js
mov
cmp
xlat
scas
icebp
mov
mov
jge
mov
mov
inc
cmp
inc
xchg
in
or
jle
xor
rdmsr
sbbb
add
int3
aam
out
jae
sub
repnz
insb
roll
addr16
jmp
rcll
test
dec
jne
les
shll
inc
jno
ja
sbb
pop
loope
je
pop
enter
dec
ret
fnstenv
aas
jl
insb
mov
mov
mov
push
xor
aaa
adc
dec
pushw
out
mov
fdivs
sahf
jno
pop
sub
repz
push
in
cmp
jo
test
enter
repz
out
xor
aad
shll
fwait
leave
subl
mulb
lods
dec
ja
and
sbb
mov
lcall
add
adc
sbb
sti
or
pop
add
jp
jecxz
lahf
jo
cmp
mov
cmp
or
leave
or
cld
stos
arpl
sahf
cs
ds
out
cmp
adc
jo
ss
pop
lods
xor
jbe
orl
fs
sub
push
mov
xchg
push
pop
stos
cs
lock
adc
cli
sub
push
loop
fiadds
add
jns
and
jne
out
add
mov
mov
into
cli
sbb
mov
xchg
clc
popf
lds
leave
mov
push
mov
cwtl
sbb
scas
xchg
mov
hlt
xchg
js
fs
stos
fs
out
lea
cmp
test
sub
fs
jne
out
inc
cmpsl
cmc
js
xchg
lret
sbb
or
cmp
push
out
mov
in
inc
xor
fs
inc
jmp
xor
mov
cli
fcom
jb
inc
lds
cmp
push
pop
push
enter
aad
pop
push
sub
movsb
das
jae
pop
or
mov
dec
fmuls
imul
lods
shr
sbbl
shrl
push
test
jle
mov
pop
ja
jo
xchg
std
mov
rol
das
mov
mov
pmaddwd
push
dec
cmp
movsb
or
and
jge
and
sti
data16
arpl
loope
pushf
pop
xchg
jae
or
sub
and
cmpsb
xchg
add
test
add
in
or
xchg
sub
out
stc
jge
mov
push
call
cld
aaa
in
push
jge
inc
cltd
cld
push
jle
xchg
ljmp
call
and
fwait
gs
sub
xchg
shll
pop
sarb
adc
mov
lret
or
jecxz
ss
cmp
loopne
xor
mov
jmp
roll
xor
add
das
push
or
push
pop
popa
clc
push
push
imul
mov
scas
push
xlat
jge
insb
fisubs
mov
aad
repnz
shlb
add
outsl
mov
out
jl
lea
jo
add
repnz
popl
mov
sbb
jmp
cmp
lods
inc
jno
dec
movsl
lret
aas
stc
imul
pop
jge
and
inc
mov
or
or
repnz
out
loope
add
mov
out
sbb
dec
push
push
cmp
fwait
cwtl
ret
inc
pop
cli
cmp
dec
int
xchg
xchg
mov
pop
arpl
pop
cmp
lock
pop
mov
and
sbb
roll
and
mov
dec
add
jno
andb
loopne
sbb
ljmp
fucomp
int
fs
out
js
addr16
xchg
jae
lcall
dec
sahf
scas
push
sub
adc
jne
mov
leave
push
dec
jne
mov
arpl
sti
xor
adc
jg
mov
rcr
mov
daa
inc
sub
sti
rorb
xor
ljmp
ljmp
nop
enter
sbb
imul
scas
add
mov
mov
jmp
ret
mov
inc
mov
arpl
sbb
repz
mov
inc
les
out
xchg
into
xor
add
and
stos
xchg
dec
inc
or
inc
mov
mov
scas
imul
stos
push
insl
int
dec
xchg
xchg
fistps
pusha
aam
gs
fldcw
fcomps
into
and
clc
andl
addb
fmuls
into
mov
and
push
popf
into
jl
pop
pop
push
movl
sahf
in
inc
je
popl
mov
push
test
mov
mov
xchg
push
sub
in
addr16
dec
sar
int3
xchg
mov
mov
icebp
fsts
loopne
aaa
inc
xchg
inc
xchg
xchg
cmp
lds
and
mov
cmp
popa
pop
into
lret
lds
js
xchg
fildl
inc
call
ljmp
jbe
xor
subl
outsl
stc
or
push
cltd
scas
cltd
movsb
ds
push
les
ss
add
mov
insl
cmp
jle
lock
sbb
outsl
stc
mov
mov
stc
and
int
xorl
fwait
into
push
insl
pop
mov
lds
mov
mov
in
jge
pop
std
pop
dec
xor
and
out
ret
clc
das
scas
mov
adc
fs
cmp
and
add
mov
xor
mov
es
adc
cmpsl
pop
clc
bound
rcr
pop
adc
lods
outsb
scas
sti
xor
mov
mov
xor
add
and
sub
cs
pop
xchg
mulb
inc
icebp
mov
pop
xor
in
dec
cwtl
inc
mov
je
bound
push
or
mov
push
mov
clc
and
int
jne
outsl
mov
adc
add
inc
lret
push
adc
adc
test
loopne
xor
sub
out
pop
xchg
pop
pusha
xor
jno
mov
inc
push
inc
das
movsl
mov
ljmp
fwait
cmpsl
mov
pop
push
add
xor
aaa
rolb
xchg
cs
push
xchg
lcall
int
movsl
or
jne
sti
adc
out
inc
pop
mov
sub
into
xor
mov
pop
push
fldcw
adc
jg
test
rol
add
repz
xchg
push
pop
adc
adc
xchg
mov
scas
std
or
xchg
mov
addr16
mov
mov
les
adc
add
js
in
cmpsb
imul
mov
sub
and
jg
mov
dec
inc
test
dec
or
ss
popa
popa
fxch
sbb
clc
inc
inc
mov
adc
push
repnz
dec
mov
sar
cs
and
sub
inc
outsl
xor
mov
nop
enter
sarl
ret
push
call
es
andb
out
add
sbb
mov
mov
sahf
inc
stc
jmp
adc
jg
fistps
loope
je
push
arpl
and
pushf
int
leave
mov
insb
push
into
repz
scas
push
rol
mov
jne
sti
push
dec
lcall
lahf
stos
cmpb
pop
lret
lea
jmp
inc
or
xchg
and
mov
pop
pushf
sub
push
fsts
cmp
cmp
jmp
dec
mov
inc
jae
lret
lods
dec
pop
movl
outsl
imul
shll
jo
xor
fldenv
add
ja
mov
lods
mov
lods
mov
sti
fistpl
fcmovb
subl
sbb
shll
clc
lods
mov
das
das
inc
push
push
jmp
jo
and
inc
mov
popa
out
push
cmpsb
add
loopne
scas
mov
jb
repz
cwtl
fld
cwtl
leave
cld
sub
test
sahf
pop
call
ficoms
xchg
mov
int3
inc
xlat
int3
inc
sub
mov
orl
adc
sbb
shlb
in
push
cld
cmpsb
mov
fimull
ret
insl
jle
xchg
jns
pop
cmp
and
push
push
pop
inc
inc
cmp
cli
int3
scas
call
ja
cmc
gs
hlt
sbb
cmp
xor
adc
les
xor
adc
fildl
mov
pop
jmp
xchg
pop
icebp
test
aad
aad
mov
or
rcll
in
mov
jg
sbb
xlat
insl
out
push
cli
xchg
inc
lahf
mov
jb
sub
leave
cmp
loop
pusha
mov
js
filds
xor
test
pop
mov
dec
adc
push
push
cmp
mov
sahf
mov
stc
xchg
fcomps
mov
inc
mov
xchg
in
shll
fstpl
call
xor
and
cwtl
ss
lods
adc
xor
std
lea
xchg
xlat
in
push
loope
shll
cmp
or
jnp
cmpsl
cmp
and
sbb
ss
sub
inc
int3
xchg
outsb
loopne
mov
push
and
dec
insb
popa
adc
mov
sbb
xchg
and
iret
cmpsb
nop
jmp
dec
flds
pop
mov
frstor
mov
lcall
mov
jns
xchg
cmp
aaa
std
nop
movsb
inc
xor
sbb
mov
sub
aad
shll
iret
inc
popa
xchg
fisttpll
pop
rol
mov
lods
jg
jno,pn
arpl
aas
lds
ja
dec
or
add
shll
aam
int
hlt
sbb
inc
in
add
ja
scas
jge
imul
test
popa
cmpsb
call
fs
movsb
add
push
push
pop
mov
in
shrb
cmpsl
stos
dec
sub
int3
test
lea
pop
cmp
xchg
or
cmp
pop
jns
mov
lods
nop
dec
adc
xchg
enter
ljmp
pop
sub
in
inc
loopne
sub
ljmp
lcall
rcrl
fisubs
lea
sbb
shlb
imulb
or
scas
lds
aaa
add
sub
jmp
daa
xor
xor
data16
cmc
mov
or
ds
rorb
lock
rorb
cwtl
dec
call
sbb
sahf
fisubs
ss
and
dec
aaa
cmpb
jns
jae
jbe
fldcw
imul
fwait
enter
inc
or
or
arpl
jo
adc
fbld
into
jns
cmp
shrb
adc
hlt
xor
mov
gs
movsb
in
mov
scas
or
jae
add
dec
mov
movsb
fisttpll
push
fdivs
push
rol
fstps
adc
bound
push
cmp
pop
test
adc
xchg
ret
je
daa
xchg
into
push
int
push
inc
dec
fnstcw
idivl
pusha
lods
mov
cwtl
xor
xlat
jae
lcall
dec
mov
push
jmp
mov
loop
test
cmp
cmpsl
mov
shrb
subb
repnz
jno
push
iret
dec
lret
jl
add
mov
pop
pop
adc
in
icebp
fmul
cmp
jo
sub
test
push
and
push
xchg
ja
lahf
arpl
jge
mov
jb
mov
inc
adc
mov
jbe
stos
leave
pop
ljmp
popf
xor
nop
testb
js
loope
pop
test
es
inc
jbe
xor
lahf
sub
xchg
xchg
js
pop
movsb
sub
pop
ljmp
filds
push
fidivrs
sbb
shlb
je
inc
fildll
std
cmp
outsl
scas
jecxz
adc
scas
gs
pusha
dec
das
cmpsb
push
andl
dec
jbe
ret
xchg
imul
and
mov
jnp
push
clc
fisubl
xchg
call
idivb
sti
jmp
aad
xchg
pop
out
add
gs
pushf
ret
dec
xor
cmp
dec
inc
jae
xor
cmp
add
scas
mov
imul
mov
and
push
pop
insl
sarl
rep
xchg
loopne
push
mov
loopne
sub
shr
push
sub
icebp
mov
mov
push
shlb
push
xchg
inc
leave
dec
loope
push
jo
sti
jmp
mov
dec
sub
cmp
push
jae
and
or
out
sbb
push
inc
clc
or
scas
out
jge
xor
out
mov
fcom
cwtl
fs
pop
insl
iret
cli
push
adc
inc
inc
add
sub
xchg
aas
shll
pop
fisttpll
sbb
daa
dec
push
ljmp
cmp
adc
add
or
adc
push
mov
mov
imul
and
sbb
ss
pop
lods
and
dec
fnstenv
scas
divb
out
stos
inc
pop
cltd
scas
adc
divl
out
adc
stc
and
call
fwait
mov
xchg
and
repz
adc
test
jne
ljmp
mov
add
in
or
mov
sub
aam
aas
mov
mov
dec
jmp
dec
dec
dec
lahf
sub
jmp
mov
mov
mov
xchg
push
lcall
or
push
outsl
cmc
stc
orb
int3
push
xor
push
adc
fstl
pop
and
popa
cmp
ss
mov
sub
cmp
movb
xchg
dec
adc
jge
jge
mov
pop
mov
mov
ficompl
lock
xchg
aaa
push
xchg
aad
or
ja
push
dec
dec
push
adc
rcrl
sub
movsb
jg
adc
or
mov
int3
fidivrl
icebp
sahf
push
fs
sbb
dec
daa
pop
in
adc
or
icebp
adc
dec
and
imul
pop
int3
mov
in
push
imul
es
cmc
nop
popf
add
cmp
jmp
add
add
xchg
lret
xor
int3
jo
mov
leave
pop
and
or
lahf
mov
add
add
repz
push
mov
jecxz
xchg
sub
lock
scas
inc
xor
xor
jnp
test
inc
test
cmpsb
sub
shl
fmull
push
es
les
outsl
mov
sub
add
frstor
cwtl
or
pushf
hlt
call
ljmp
icebp
sbb
xchg
ds
data16
and
inc
or
test
cmp
aad
push
xchg
aam
add
gs
push
sbbb
mov
scas
push
cmc
mov
stos
inc
call
ret
cmp
mov
repz
mov
adcl
rclb
mov
push
mov
xlat
mov
push
push
hlt
out
pop
repnz
mov
scas
mov
sarl
sub
mov
test
inc
inc
inc
pop
pop
scas
orl
push
popf
mov
rol
mov
xchg
jae
xchg
sbb
mov
adc
pop
movb
jecxz
adc
pop
iret
sub
aas
sti
bound
insl
add
inc
inc
push
dec
stc
adc
lods
sub
jnp
ficomps
dec
rcll
mov
lods
test
inc
dec
movb
pop
sbb
rcrl
mov
lret
aam
push
pop
add
loopne
inc
or
jmp
inc
jo
adc
jl
mov
cmp
movsb
mov
mov
pop
jnp
insb
fidivrl
enter
jnp
addl
xchg
pop
sbb
pop
xor
dec
lahf
jae
xor
scas
mov
sbb
cwtl
xchg
dec
xchg
inc
jns
mov
jo
xchg
pop
sarl
xor
lods
cmp
sbb
shll
fnsave
jne
andb
filds
jg
jae
int
dec
xor
jne
cwtl
out
jbe
inc
jbe
xor
sahf
xchg
push
das
cmc
insl
xor
int
lret
cmp
cltd
fbld
jb
gs
jae
jp
or
ss
mov
and
filds
xor
out
into
dec
mov
xchg
pop
stc
mov
je
inc
pop
jnp
dec
shlb
lds
push
out
dec
push
iret
fsub
mov
mov
cltd
sub
mov
xor
push
loopne
sbbl
cmpl
add
cld
ret
pushf
inc
cwtl
in
cltd
push
sub
je
loop
mov
adc
mov
inc
sub
push
aam
rcrl
push
mov
xlat
adc
rcr
sub
daa
aad
cs
pop
outsl
inc
test
outsl
ss
sahf
repz
fsubp
mov
xchg
sbbl
fstps
in
push
adcb
sbb
aas
push
mov
jno
and
xor
mov
xchg
sub
arpl
inc
call
push
je
in
push
dec
mov
push
dec
iret
leave
in
mov
push
jl
test
jbe
and
and
push
fldl
mul
es
push
mov
push
mov
cmp
std
mov
sub
pop
jae
add
neg
je
jl
hlt
jne
pop
xor
leave
mov
dec
or
add
push
mov
xchg
mov
adc
jge
nop
fistpll
insl
sbb
sub
insl
daa
dec
add
fnstcw
adc
sbb
push
pop
shll
leave
mov
iret
shl
int3
jmp
cs
lods
and
and
test
inc
xor
mov
xor
mov
movsl
xor
test
in
dec
sbb
test
jne,pt
test
sub
aad
mov
mov
test
xor
mov
adc
jmp
pop
stc
mov
dec
xchg
into
fadd
out
jmp
xor
lea
pushf
cmpsb
jmp
mov
push
lds
xorb
std
jae
movsb
shl
dec
mov
clc
scas
fwait
mov
lds
rol
daa
insl
sbb
mov
in
push
mov
sbb
int3
sbb
icebp
loopne
pop
inc
popa
cltd
lret
scas
xchg
jmp
inc
popl
xchg
pushf
test
fcompl
push
mov
bound
jmp
mov
in
mov
jne
adc
inc
and
pop
dec
add
out
orb
mov
xchg
xor
scas
dec
rcl
shll
pop
movsb
cltd
and
lret
mov
or
movsl
adc
stos
sub
xlat
jne
mov
movsl
icebp
push
add
mov
ljmp
andl
or
cmpsb
add
cmp
mov
add
sbb
or
js
mov
loope
mov
add
cltd
sbb
add
test
push
fstps
mov
ljmp
aad
and
mov
stc
mov
xor
outsb
sbb
or
sub
dec
roll
loope
xchg
pop
mov
loopne
sub
inc
dec
sbb
jnp
jg
cmpsb
lret
inc
rcrl
adc
jae
imul
test
fbstp
in
negb
jae
packsswb
repz
inc
mov
sbb
int
iret
and
add
push
insb
idiv
and
nop
mov
imul
add
mov
or
mov
pop
test
mov
mov
test
push
mov
push
add
icebp
pop
pop
or
lods
into
adc
cmpb
and
fstps
add
pop
jbe
xorl
scas
add
sbb
and
push
push
mov
jge,pn
nop
pop
into
push
sti
arpl
xlat
fisubl
sub
mov
repnz
mov
jne
enter
add
and
repnz
and
idivb
pop
test
ljmp
pop
jmp
and
xor
pop
adc
jns
ljmp
sbb
push
pop
daa
sbb
notl
push
rolb
ja
fimuls
dec
in
fcompl
xchg
sbb
stos
adc
push
lret
fcmovu
hlt
fidivrs
lods
imul
mov
mov
jbe
mov
xchg
in
mov
loope
fwait
jge
jbe
outsb
scas
loopne
inc
mov
sub
or
movsb
and
sub
sub
cmc
xchg
cmp
and
fs
lods
into
je
mov
aam
cs
stos
dec
mov
mov
mov
cs
test
roll
mov
add
xchg
int
ljmp
mov
aam
cs
mov
in
mov
lods
xor
sbb
fwait
bound
and
xor
jg
ss
push
cmp
into
ret
lods
sbb
pop
adc
test
loop
popl
repnz
adc
xlat
rcrl
mov
adc
inc
pop
lcall
fmul
repz
fdiv
jbe
adc
fstpt
shlb
fwait
sbb
mov
lret
pushf
mov
das
mov
leave
adc
les
mov
jl
psadbw
hlt
add
mov
jmp
dec
arpl
in
movsl
scas
dec
or
inc
cld
popa
test
repnz
mov
and
xor
push
mov
push
pop
stos
pushf
ss
cmp
push
dec
jp
ds
mwaitx
mov
push
add
xlat
mov
xchg
cmpsb
xchg
test
add
mov
or
insl
dec
cmp
int3
mov
movsl
bound
mov
adcl
adc
xchg
or
cmp
xchg
pusha
test
add
ret
xchg
mov
out
or
es
loopne
dec
orl
push
cmp
loope
leave
inc
push
aam
and
stos
cmpb
jo
pop
inc
mov
cmp
inc
nop
loope
lods
sub
pop
mov
lret
ja
fiadds
shrl
pusha
pop
mov
out
jecxz
bound
mov
dec
mov
insb
cmc
mull
outsb
jp
ja
lcall
jl
xchg
notb
outsb
scas
in
cmp
repnz
xor
jecxz
xchg
out
jo
and
les
test
xor
aas
pop
loope
sarb
cs
imul
cmp
mov
xchg
dec
xor
jb
mov
dec
insl
push
push
mov
add
fmuls
cld
cmp
out
mov
pop
aam
cmpsl
jmp
jl
loop
pushl
pop
inc
jbe
mov
and
dec
jbe
fcoms
filds
sbb
cmpsb
sbb
pusha
xorb
insb
sub
mov
ds
push
ret
aaa
xlat
in
gs
xor
or
or
dec
pop
lods
pop
inc
fmul
add
push
inc
cld
icebp
xchg
mov
hlt
add
scas
jl
shl
mov
xor
or
dec
into
add
cmp
scas
jecxz
xchg
js
or
rcrb
aam
cmpsb
cmp
and
mov
cmp
and
mov
pop
ljmp
and
cs
enter
jle
pushf
and
gs
push
imul
cmp
jnp
add
int
jns
pop
fwait
xchg
rolb
cwtl
inc
ja
or
inc
add
mov
mov
dec
fisubrs
movsl
bound
rolb
push
push
cmp
iret
push
xchg
rorl
push
xchg
arpl
xor
aas
in
pop
popa
jnp
mov
sbb
sub
xchg
out
xchg
pop
mov
adc
mov
test
rcl
and
jle
outsb
xchg
pop
filds
jnp
xor
dec
mov
sbbb
int3
dec
and
mov
add
and
dec
cmp
inc
iret
stos
repnz
mov
jns
stos
and
arpl
sub
pop
inc
out
aaa
cmp
pop
test
int
stos
in
cmp
push
lods
int
in
jnp
jno
popf
repz
pusha
sbb
jno
mov
pop
inc
sti
ret
jo
push
cli
push
out
xchg
test
loop
cwtl
ljmp
mov
push
xor
push
stos
aaa
mov
scas
stc
sahf
inc
xchg
jno
sub
gs
outsl
jne
or
jns
adc
call
xor
mov
and
shlb
inc
fsubs
inc
xlat
sub
cli
or
lcall
pop
lret
mov
pop
insl
xor
dec
sub
pusha
js
add
ficomps
fistps
mov
test
imul
icebp
and
insb
scas
int
sub
lods
lret
rol
or
sub
je
mov
mov
ja
ja
bnd
xor
inc
lahf
mov
xchg
cmc
push
les
aam
dec
jl
mov
aas
mov
and
das
loopne
rcl
shll
adc
pop
or
hlt
xor
cmpsb
sbb
adc
xchg
dec
lock
test
bound
mov
mov
into
inc
inc
out
loope
jle
fwait
mov
sbb
int3
jp
insb
adc
mov
pop
adc
subb
daa
mov
jge
inc
pop
jns
js
sbb
test
push
push
pop
pop
rdpmc
xor
pop
inc
adcl
enter
mov
ss
insl
aad
scas
add
xchg
xor
fisubs
cs
aaa
nop
insb
pop
in
nop
lahf
mov
icebp
inc
xor
ss
inc
ds
pop
cmp
mov
inc
jae
std
mov
and
lods
add
inc
push
jns
clc
es
cmc
adc
mov
test
addb
jns
cmp
xchg
dec
fldt
jns
mov
push
fiadds
cli
das
or
mov
sub
sbb
dec
push
push
mov
in
pop
pusha
mov
sbb
jb
cmp
pop
cmc
clc
adc
add
call
in
dec
add
test
push
insb
push
xchg
scas
cmc
inc
loope
stc
jae
adc
pop
sub
fwait
testl
fcompl
push
sbb
or
pop
cmp
jp
sbb
or
dec
hlt
test
test
dec
mov
decb
jmp
fildll
test
inc
jle
add
ret
ds
inc
xor
hlt
xchg
mov
mov
fistpl
fbstp
push
add
jl
test
jmp
xor
pop
stos
aas
std
daa
jle
fistpl
loopne
mov
mov
push
aam
popa
xchg
cmp
dec
test
out
loopne
mov
repnz
push
je
subl
test
xchg
out
fisubl
adc
iret
inc
idivb
push
ret
add
mov
pusha
dec
pop
adc
cmp
stc
gs
pop
dec
pop
xchg
cmc
or
add
mov
int
into
loope
insb
mov
clc
push
mov
aas
push
fbld
loopne
aas
in
xchg
andb
lret
test
not
fldcw
subb
mov
test
add
mov
and
cwtl
in
pop
add
sahf
cwtl
push
xorb
jmp
mov
pop
cmp
arpl
mov
cmp
std
shrl
test
mov
inc
filds
test
or
add
test
inc
mov
mov
movsb
pop
xchg
xchg
sbb
outsb
stc
fsubl
shlb
cwtl
call
scas
rorb
imul
inc
fwait
sbb
mov
add
push
pop
bound
rcl
fstpt
scas
test
sbb
jp
push
out
dec
adc
insb
pop
mov
jl
mov
fcmovbe
dec
push
push
add
lahf
in
xor
inc
push
das
inc
cmp
pop
sbb
jge
pop
scas
mov
pop
xchg
jle
mov
out
add
jl
xchg
call
or
test
sbbl
adc
add
ret
stos
das
loop
popa
mov
fidivs
scas
pop
jbe
mov
sbbb
sub
daa
mov
jecxz
test
xchg
in
jge
push
cld
rcrb
popf
imul
cld
and
ret
or
pop
pcmpeqd
loopne
cmpsl
mov
loop
fisubl
inc
rcll
mov
jo
data16
iret
push
ficoms
lock
outsb
idivb
push
adc
cmpl
je
sub
push
push
jg
add
test
les
std
mov
aad
dec
sbb
adc
adc
test
dec
sahf
fidivl
pop
std
mov
xorl
out
sbb
push
pop
pop
xlat
inc
mov
je
jnp
and
mov
test
mov
push
daa
or
inc
hlt
das
cmpsl
cmc
adcl
lret
pop
xor
inc
mov
les
lret
lret
fistps
sub
sbb
std
nop
int3
gs
push
std
ss
mov
nop
jge
subl
in
add
sarb
xchg
sahf
jno
push
fwait
sahf
aas
movsl
test
into
mov
sbb
or
test
jp
cmp
hlt
div
test
ja
mov
add
mov
push
jb
loope
mov
jb
jle
mov
xchg
mov
cmpsl
mov
and
repnz
mov
push
add
cs
pop
popf
test
outsb
fwait
cmp
inc
sti
add
sub
push
fisubl
mov
imul
fsubrl
adc
xchg
mov
in
push
or
fld
bound
sub
push
fs
repz
mov
imul
out
sti
ret
sbb
jp
inc
adc
dec
push
xorb
and
fdivrs
dec
aam
adc
jmp
lds
pop
cmc
jp
rol
push
ret
jmp
jno
or
ljmp
test
lock
mov
push
pushf
icebp
adc
aam
sbb
and
push
mov
inc
push
mov
icebp
scas
add
mov
inc
push
fimull
pusha
iret
pop
sub
push
inc
popw
rcrb
in
cs
addr16
data16
sbb
daa
fwait
call
push
sbb
jae
stos
or
inc
mov
jp
pop
subb
and
inc
sbbl
adc
push
adc
iret
and
lret
xor
push
add
clc
mov
sbb
adc
gs
stos
call
cmp
in
inc
pop
or
arpl
scas
stos
or
fnstenv
push
pushf
pop
incl
jecxz
popa
cmc
cltd
mov
mov
shll
andb
or
pop
mov
xabort
add
sbb
dec
popa
hlt
mov
stos
mov
iret
fwait
inc
mov
xchg
fwait
xchg
xor
out
test
cs
jmp
ljmp
adc
push
iret
inc
movsl
xlat
or
out
mov
and
add
sub
fstpt
adc
push
ret
sbbl
mov
jg
aaa
xor
shrw
cmp
push
push
cmc
lret
fnsave
cmpsb
movsb
inc
cmp
fwait
push
mov
jge
cmp
jl
pop
lret
incl
xchg
fildll
ret
in
fmul
dec
stos
out
and
div
add
scas
sahf
f2xm1
mov
mov
xor
sub
adc
subb
test
mov
pop
pop
daa
or
cmp
push
je
mov
hlt
mov
push
ds
nop
rorl
cmp
frstor
das
add
and
incb
das
xor
cmp
push
outsb
shl
mov
addr16
sbb
add
and
xchg
cmp
adc
bnd
les
push
mov
or
push
jns
les
arpl
test
cmp
xchg
fnstsw
fcoms
into
aam
mov
xchg
sub
fnstcw
das
sarl
sbb
jp
jmp
mov
mov
bound
sar
pop
jnp
ss
ficoml
mov
loop
repz
sbb
cmpsb
lret
addr16
in
push
scas
sub
stos
pop
pop
sub
xchg
lds
pushf
movsb
mov
push
cmp
lret
push
repnz
push
jl
cld
lret
sub
pushf
push
mov
stos
aad
lock
imul
mov
sub
mov
sti
dec
insb
adc
cwtl
jge
hlt
lahf
xchg
push
xcrypt-ecb
cmpsl
or
xchg
in
loopne
sbb
adc
push
test
ret
mov
xchg
inc
cmp
sbbb
int3
mov
scas
inc
xor
push
xchg
inc
and
enter
add
sahf
or
ds
mov
popl
mov
mov
xor
test
and
mov
xchg
aam
outsl
sub
adc
out
mov
out
and
add
enter
mov
cmp
adc
xchg
lods
push
pop
xor
test
or
dec
pusha
cmp
movsb
cmp
lds
ret
mov
in
fimull
mov
test
in
push
dec
xchg
jmp
pushf
add
cmp
push
imul
divl
adc
into
mov
jb
or
and
out
fs
xchg
cmp
mov
popf
add
dec
aas
push
lods
push
nop
inc
lock
fcmovu
dec
aaa
xchg
icebp
scas
adcb
or
inc
xorb
mov
inc
repnz
mov
jo
pop
push
testb
lods
lds
scas
xchg
aas
or
push
pusha
xchg
clc
adc
dec
cs
sub
fcoms
xchg
push
andb
cli
pop
mov
and
int3
call
dec
push
sub
mov
stc
pop
sub
das
add
sbb
orl
cmpsl
push
frstor
pop
inc
push
add
dec
arpl
in
lcall
mov
adc
inc
or
inc
pop
pop
jecxz
sbb
pop
push
dec
sbb
inc
or
pop
fwait
or
xchg
pop
sub
jb
rcrb
sbb
stos
icebp
push
cmp
sbb
sar
out
pop
sar
test
sub
fdivrl
mov
test
out
mov
push
out
pop
mov
mov
add
lea
cmp
adc
inc
dec
pop
jne
test
mov
pop
dec
inc
jns
xchg
cmp
ret
call
pop
fwait
xchg
dec
jmp
xlat
hlt
cmp
fldl
int3
inc
xor
inc
mov
or
mov
movsb
sahf
sbb
mov
stos
sub
or
mov
mov
insb
imul
and
pop
adc
cltd
stos
xor
pop
call
lea
ret
push
pop
jmp
stc
mov
and
pop
xchg
xor
jo
ja
sbb
pop
sub
pop
xchg
decl
pushl
pop
jl
loope
inc
lcall
sub
leave
push
dec
mov
inc
ja
outsl
inc
ljmp
jo,pt
add
addr16
mov
mov
cli
sub
adc
fs
scas
imul
inc
scas
pop
add
hlt
jmp
mov
lret
repz
jle
mov
and
mov
jl
dec
ds
adc
ljmp
jbe
add
fimull
fimuls
dec
clc
repnz
pop
out
push
enter
scas
adc
mov
lahf
mov
std
aam
cmp
add
sbb
movsl
lods
cmp
mov
movsb
sbb
lret
mov
data16
aaa
ds
scas
jl
dec
sbb
ret
push
jl
cli
insb
test
data16
cs
xchg
jnp
clc
adc
fs
fistl
jmp
dec
mov
push
repz
dec
xchg
je
xchg
mov
jmp
out
decl
or
xor
cmpsl
mov
test
xchg
loope
sbb
pop
repz
fcoms
movsl
xchg
int
jmp
mov
shrb
push
lods
pop
mov
xchg
jne
clc
sub
mov
xchg
aas
mov
fcomps
sahf
push
push
lahf
in
xlat
pushf
adc
and
das
pushf
mov
pop
or
hlt
mov
jb
xor
adc
sub
fldt
push
dec
push
fucomp
out
fcoml
lock
pop
add
fistpll
inc
sbb
fidivrs
jle
xchg
sub
loop
rcrb
inc
jmp
add
sbb
loope
jp
mov
rolb
jbe
xorl
dec
cmp
jno
lock
jno
mov
int
push
lods
adc
inc
std
mov
cs
icebp
lea
mov
pusha
call
pop
push
addr16
cmpsb
in
divb
aad
enter
mov
jmp
add
inc
xor
in
ds
ret
in
enter
dec
push
xchg
or
aas
push
jge
movsb
leave
inc
loopne
out
xor
js
dec
outsb
jb
mov
sub
fcomps
outsl
cs
jne
hlt
dec
pop
rclb
sbb
add
inc
adc
stos
lret
pop
adc
jp
into
pop
or
adc
inc
mov
sahf
or
and
and
daa
ret
ljmp
fstpt
data16
and
mov
push
fiadds
inc
icebp
mov
and
rolb
mov
out
ret
push
cltd
jp
lods
xchg
sbb
jge
out
hlt
cmp
std
and
mov
imulb
aas
pop
das
in
sarl
loop
movsb
js
popa
pop
gs
xchg
xor
mov
push
cmc
jg
jnp
cmc
outsl
mov
add
pop
cmc
test
ret
xchg
xchg
inc
adc
jb
inc
adc
pop
xor
jp
dec
mov
mov
out
cld
test
pop
adc
xchg
push
popf
mov
push
dec
aaa
or
test
jge
sub
lea
daa
dec
push
cs
ds
jmp
clc
push
xchg
and
imul
fsub
adc
or
add
lcall
push
push
pop
pushf
cmc
dec
aas
jb
andl
lahf
daa
push
cmp
mov
adc
cli
out
subb
fst
pop
stos
fldl
inc
sbb
pop
fwait
rcl
pop
xchg
dec
add
xchg
dec
push
xchg
nop
fisubs
pop
addr16
mov
into
xchg
stc
roll
and
or
pop
dec
gs
mov
sbb
pop
pushf
and
jecxz
pop
out
cli
pop
out
fiaddl
mov
push
jle
add
sbbb
sbb
gs
xchg
mov
ss
inc
sbb
or
test
jb
mov
jb
lods
add
out
lock
push
out
cmp
imul
les
jb
pop
pop
sub
sbb
in
add
dec
pushf
mov
mov
test
xor
lock
fisttpl
ss
add
arpl
add
or
rcll
xor
ss
movsb
sub
adc
adc
fadds
hlt
add
movsb
xor
sbb
cmp
test
jle
lock
dec
ss
test
pop
shlb
jle
inc
push
xorl
stc
inc
mov
mov
sbb
cmpsl
push
add
jmp
adc
int3
push
dec
cmpsb
xorb
cmc
int
loopne
inc
repz
pushf
sahf
mov
ficoml
ja
or
in
sub
push
xchg
sub
or
mov
push
test
sbb
icebp
sbb
inc
imul
movsb
xchg
ret
stos
push
adc
test
dec
xchg
cmpsb
cmp
xor
je
sti
stos
lcall
rorb
pop
sbb
mov
les
add
cmpsl
cmp
in
mov
mov
loop
or
inc
scas
pop
dec
outsl
insb
cli
cmp
add
sub
jb
adc
mov
or
mov
sahf
sbbb
and
pop
xor
mov
div
loope
das
push
or
jne
std
xchg
loop
cltd
cmp
mov
or
adc
lods
lcall
inc
add
xor
cmp
es
ficompl
mov
pop
pop
sahf
xchg
sub
cld
or
movsb
inc
inc
mov
pop
int3
cmp
in
out
pop
dec
ss
arpl
outsb
aas
pop
das
sbb
in
ljmp
adc
ljmp
sahf
cmp
lret
mov
xor
loope
sbb
inc
in
aas
idivb
nop
jl
cmp
cmp
popa
dec
pop
ss
pop
push
test
repz
inc
sub
cmp
lret
repz
push
or
es
js
jle
and
inc
bound
push
dec
scas
mov
jecxz
cs
push
call
and
mov
push
mov
int
pop
out
mov
xor
shrb
pop
xor
push
test
mov
aam
jecxz
sbb
mov
call
aas
imul
ret
dec
jne
xchg
adc
mov
mov
es
push
jecxz
out
shll
mov
mov
rcrb
mov
std
mov
add
test
aas
jle
mov
sub
sbb
inc
shll
xor
mov
sbb
movsb
push
mov
imul
bswap
cmpsb
mov
aad
dec
xor
push
sub
push
inc
shrl
lock
xchg
shlb
jmp
setge
xchg
lret
adcl
add
shlb
xchg
mov
mov
pusha
movhps
outsl
pop
dec
movsb
ds
enter
es
mov
sub
mov
jo
xor
das
xor
push
add
aas
into
rcrb
sbb
ljmp
dec
inc
sub
mov
adc
dec
movsb
loope
scas
fsubr
popa
mov
sti
lock
mov
scas
movsl
mov
pop
xlat
mov
mov
test
mov
xchg
or
in
pop
icebp
cmpsb
sbb
rorb
orb
test
mov
repnz
mov
add
jb
or
in
xchg
jb
test
add
sub
lods
adc
jno,pn
and
push
add
mov
repz
roll
mov
test
dec
cmp
fbstp
movsb
mov
jae
out
ret
push
jg
jp
mov
cmc
pop
loope
out
cwtl
movsb
loop
jno
xor
movsl
inc
in
rolb
add
inc
cmpsl
or
dec
imul
test
xor
ret
and
mov
cld
cli
inc
adc
xor
aas
dec
sub
cmpsl
sub
cs
xchg
dec
cmc
enter
orb
jle
mov
js
fwait
mov
xor
nop
dec
push
lret
and
lock
jae
cmp
int3
fsub
movsb
adc
xorb
cmp
aas
jle
mov
gs
pop
cmc
out
int
loop
pop
aas
das
cmp
cs
int
push
sub
pop
ficompl
fcomi
iret
mov
cmp
dec
into
bound
popf
fwait
setp
mov
and
or
test
ljmp
jge
enter
jecxz
test
jmp
ja
xor
leave
push
shlb
jmp
mov
dec
out
cwtl
out
jle
mov
fidivs
dec
add
fdivl
inc
sub
push
mov
push
sub
inc
stos
ja
pop
jo
xchg
loopne
inc
inc
fdivrl
rep
pusha
mov
mov
adc
add
pop
roll
mov
daa
add
int
push
dec
sbb
cmp
paddusw
into
pushf
test
repz
adc
push
jns
ret
xchg
adcl
push
cmp
mov
jecxz
pop
lret
fwait
add
jmp
adc
xchg
fnsave
enter
push
lods
add
xor
pop
cld
addr16
std
xchg
shlb
rorb
inc
dec
movsb
test
mov
test
lea
xlat
xor
add
push
test
dec
stos
add
jge
mov
movsb
insb
push
pop
daa
mov
jp
push
sub
dec
pusha
roll
inc
movsl
cmpsb
jae
sub
pop
rcrb
dec
mov
xchg
pop
cmp
lea
pop
xchg
xor
dec
popa
ljmp
stos
lret
xor
sub
popf
push
in
icebp
fcompl
aad
sub
sahf
add
ficoml
and
mov
jg
pusha
sub
xchg
push
lock
inc
sbb
mov
mov
mov
loop
lret
call
sti
imul
lods
out
fwait
mov
test
adc
inc
dec
je
jne
mov
and
adc
mov
xchg
mov
aas
mov
jnp
ljmp
lods
cmc
adc
lret
push
fmuls
enter
xchg
stc
sti
cmpsb
xor
out
je
repnz
jbe
mov
inc
jge
xchg
dec
sbb
adc
nop
mov
roll
mov
xchg
stos
add
sub
loop
enter
cmp
inc
and
xchg
xchg
sub
scas
xor
xor
pop
inc
mov
stc
xlat
mov
mov
repz
arpl
cli
out
jae
jns
jp
mov
gs
pop
xor
dec
and
dec
adc
dec
pop
adc
mov
or
jg
xchg
push
cmp
fstps
inc
daa
sbb
cmc
push
xchg
mov
fdivs
mov
daa
xchg
gs
xor
inc
sub
mov
xchg
cltd
loopne
fs
rcll
push
mov
out
lock
cmp
add
and
sbb
dec
pop
jns
dec
sub
insb
xchg
xchg
jle
dec
je
imulb
push
xchg
js
lea
and
daa
push
adc
aas
pop
lods
sub
push
mov
add
mov
xorb
push
test
mov
pop
fstpt
add
push
inc
mov
outsb
xchg
mov
inc
repnz
sub
jmp
jmp
ds
jb
int3
jmp
test
mov
fstps
xor
leave
adc
cwtl
pop
add
addr16
popf
fcoml
ror
push
out
jnp
and
fs
push
ficomps
add
xor
and
fwait
xchg
repz
jg
mov
sarb
push
inc
xor
aas
cmp
rcrl
dec
and
jb
push
mov
adc
jnp
insb
push
cltd
sub
repz
pop
push
fnstcw
sbb
lock
dec
sub
xchg
lds
push
aam
mov
out
cs
in
add
lcall
in
xchg
jg
mov
xchg
ficompl
push
jle
sbb
jg
inc
mov
aas
cmpsb
push
mov
mov
dec
nop
pop
adc
adc
adc
mov
outsb
xchg
and
cmp
popa
movsb
or
pop
fsubrs
insl
repnz
jmp
mov
mov
jno
movsb
cmpsb
mov
mov
xor
shrb
adc
lods
ljmp
xchg
inc
lea
js
mov
leave
sub
incl
js
push
test
push
out
shrb
mov
sbb
mov
imul
cld
pop
push
push
jbe
sub
clc
leave
sub
fs
stos
mov
loop
push
add
push
xor
add
mov
scas
data16
shlb
xor
inc
stc
mov
mov
push
mov
out
sub
xchg
insl
push
mov
or
inc
fwait
mov
in
xchg
jae
out
jne
adc
aaa
test
xor
jge
add
cmpsb
add
in
or
pop
push
das
int
std
add
rcll
stos
jecxz
adc
es
outsl
gs
sarl
call
add
in
pop
fsubl
js,pn
mov
insl
mov
adc
xor
jp
fs
mov
xchg
mov
rorl
ds
int
inc
test
xchg
ss
aas
js
jecxz
and
cwtl
paddusw
inc
aad
or
notb
fs
aas
pop
movsl
cmp
inc
inc
popf
pop
adc
xchg
xchg
lea
cmp
movl
dec
pop
dec
shlw
xchg
cwtd
aad
je
or
xchg
xchg
fcoms
xor
jg
push
cmp
sub
xor
inc
lahf
icebp
cmp
mov
xor
cs
or
orl
incl
sahf
jg
jge
pop
mov
into
sbb
and
inc
repz
aad
insl
cmp
adc
stc
adc
jecxz
dec
lea
xchg
jo
hlt
mov
stos
aas
add
xor
test
aaa
icebp
push
cmp
lds
mov
fcmove
jg
scas
mov
outsb
mov
push
adc
push
lahf
mov
jae
test
fldenv
int
int
clc
pop
jle
repz
int
push
ret
inc
mov
xchg
sbb
test
cmp
es
jno
aam
shll
inc
dec
mov
inc
jle
push
mov
jl
jne
push
bound
adc
es
mov
lea
loope
dec
xor
push
cmc
ja
add
outsb
xchg
push
push
add
in
mov
aas
pop
aaa
es
pop
or
clc
fldcw
mov
ret
adc
dec
sbb
in
shlb
mov
test
cwtl
jl
dec
insb
xchg
outsb
imul
xchg
jmp
xor
dec
adc
jnp
mov
not
fisttps
or
insl
ret
lahf
imul
jo
sub
jg
gs
iret
leave
arpl
shlb
icebp
fneni(8087
leave
fnstcw
mov
insl
popa
adc
ljmp
mov
std
inc
sahf
sub
jbe
cld
addr16
jae
test
add
ja
imul
xchg
add
icebp
imul
aas
or
ja
aas
outsb
clc
inc
stos
imull
jo
and
rcr
pushf
in
pop
outsl
movsl
inc
iret
in
movsl
mov
add
or
xor
or
xchg
cld
dec
or
push
popa
fsubr
add
insl
jb
pushf
into
jp
push
jo
jg
pop
stc
test
repz
dec
ja
sbb
cmc
loope
cmpsb
or
inc
ss
xchg
xlat
int3
push
pop
and
and
cmp
push
test
xchg
or
int
sbb
in
mov
and
xor
pop
shl
scas
xchg
outsb
insl
ret
pusha
sahf
lahf
aad
test
sbb
pop
jmp
imul
jge
cmpsb
inc
inc
incb
jle
sbb
pop
or
push
push
push
movsl
jmp
mov
test
pop
fidivl
ficoms
jae
mov
inc
or
dec
mov
jmp
jl
icebp
sub
push
out
subl
fcomps
out
pop
out
add
sub
cmp
scas
cmpsb
and
fcmovb
lret
fistpll
insl
rclb
lock
jle
jmp
outsl
ljmp
ret
and
ret
arpl
add
test
std
fadds
jg
outsl
movsb
out
inc
imul
pop
jb
push
lods
es
and
sbb
mull
add
loopne
jg
insl
js
xchg
mov
push
dec
clc
lods
mov
and
rolb
dec
lods
add
or
out
dec
shll
cmp
ror
add
fidivs
cmp
push
into
dec
aaa
mov
aam
jl
jmp
pop
stc
or
imul
lock
push
mov
mov
jo
divb
add
adc
imul
fisttpl
icebp
insl
out
mov
adc
loope
cmp
dec
dec
bound
cmp
lret
pop
jg
in
fcmovb
aaa
add
xchg
pop
clc
jno
jne
enter
adc
pop
mov
or
add
jecxz
mov
out
mov
or
inc
test
mov
pop
jle
mov
jg
cmc
bt
inc
dec
sbb
xchg
sub
mov
cli
std
js
xor
cmp
cmp
or
movsl
cmpsb
pop
adcl
lock
jns
sbb
cli
mov
clc
mov
cmp
js
xchg
cmp
popa
jb
xor
fmull
shlb
sub
jmp
inc
rcll
sbb
ret
sbb
dec
fistl
icebp
and
sub
dec
mov
mov
mov
fadds
call
push
rcl
in
jg
mov
sbb
das
nop
inc
push
out
inc
leave
push
jl
mov
push
mov
adc
iret
xor
xor
mov
aam
jbe
adc
les
aad
add
mov
xor
outsb
repnz
inc
aad
imul
les
pop
push
mov
daa
aaa
mov
pop
dec
fcmovnu
and
jo
in
sub
shll
fistpll
mov
xor
push
fsincos
mov
xor
clc
outsl
cmpsb
jl
add
sub
fisttps
cmp
jmp
loopne
sub
dec
out
leave
aaa
ret
stos
addb
cmp
xchg
pop
std
sub
jnp
pop
inc
cmpsl
xchg
out
adc
clc
jb
fbld
jecxz
and
cmc
pop
arpl
jle
es
ret
adc
aaa
mov
mov
out
or
inc
mov
sbb
xor
test
mov
jmp
ret
mov
movsb
dec
ljmp
dec
mov
or
cltd
popa
adc
jg
add
mov
out
orl
pop
jge
clc
test
ficompl
andb
adc
push
mov
push
push
out
mov
and
inc
cli
aaa
sub
stos
cli
push
dec
fmuls
sub
sbb
fdivrp
jo
repnz
pop
inc
add
rcrb
jge
push
in
aad
push
add
mov
mov
cmp
stos
aad
xchg
adc
lock
cmp
mov
jp
or
stos
cmpsl
shlb
int
lret
sarl
push
jns
fbstp
pop
in
orl
adc
push
lds
jecxz
js
mov
mull
sbb
enter
mov
dec
mov
jne
push
add
pop
jne
lea
inc
add
movsl
popf
xchg
add
jecxz
jmp
cli
andb
jg
rcll
xlat
xor
int3
mov
adc
add
sub
sub
test
lea
nop
ss
jno
mov
jl
imul
rcll
mov
mov
ret
rcrl
adc
cmp
std
aad
loopne
inc
or
shl
push
cmc
jp
push
inc
aas
xchg
inc
mov
lret
ljmp
mov
pop
outsb
pop
mov
fwait
mov
sbb
sbb
adc
sub
sbb
in
repnz
jge
inc
call
or
mov
and
jmp
lock
and
mov
enter
and
pop
mov
mov
adc
sub
lds
pop
adc
lock
jbe
dec
aam
mov
clc
mov
mov
inc
pop
cmp
inc
dec
mov
adc
enter
xchg
hlt
sub
pop
push
mov
pop
pop
and
dec
cwtl
sbb
int
scas
cs
enter
mov
mov
bound
adc
jmp
mov
into
aad
cmp
push
mov
dec
lock
push
xor
xchg
push
add
shll
loopne
adc
and
push
aam
inc
jmp
lods
push
sbb
cld
mov
or
and
sub
jmp
push
into
in
call
cmp
iret
push
pop
sbb
or
mov
into
loop
mov
cmp
mov
gs
jge
and
pusha
xchg
push
push
loopne
out
sbb
mov
xchg
adc
mov
cltd
fcoms
pop
and
in
lea
sbb
adcl
pop
inc
outsb
xchg
aam
add
cmp
pop
pop
inc
fistps
mov
xchg
cli
fdivrs
lea
mov
data16
outsl
or
adc
sbb
mov
cmp
pop
jg
shrl
loopne
movsb
lds
std
mov
pop
xchg
cmp
adc
jno
mov
cmp
xor
or
inc
leave
push
mov
cmp
mov
xor
enter
pop
fnstenv
mov
into
mov
jp
mov
fidivrs
jb
push
out
mov
movsl
fimull
mov
fcmovbe
cmp
mov
jb
xchg
xor
xchg
sbb
push
mov
movsb
cmpsl
shl
or
jmp
cmc
xchg
jecxz
pop
jg
cli
icebp
into
xor
cwtl
out
addb
stc
rcll
inc
cmovbe
ds
jnp
lds
mov
and
aad
jae
icebp
mov
pop
shlb
mov
xor
sahf
dec
dec
lahf
inc
stos
xchg
mov
mov
repnz
aas
sbb
cmp
sub
adc
mov
pop
cli
or
mov
ds
scas
movsl
imul
cld
cwtl
clc
mov
mov
adc
sbb
push
sbb
mov
ljmp
jae
push
dec
push
adcl
mov
push
aaa
jp
dec
dec
push
inc
cmp
jecxz
push
cmp
and
xchg
dec
scas
sahf
negb
shlb
sbb
dec
lret
or
mov
cmp
push
icebp
lret
add
push
or
popf
js
cld
lods
in
lock
inc
mov
inc
mov
jae
cmpsb
ror
sti
jmp
mov
out
flds
lret
ss
adcl
mov
cmp
adc
in
sbb
pop
jae
or
mov
cs
cmp
inc
adc
mov
pop
mov
scas
mov
mov
aam
push
cmp
push
pop
push
push
mov
int
cmp
inc
sub
mov
jo
ds
sub
sub
dec
lock
xor
jl
pop
es
jno
sub
insb
hlt
stos
adc
jb
push
cmp
stc
mov
sbb
mov
cmpsl
mov
push
mov
adc
mov
pop
sbb
pop
mov
cld
movsl
mov
insb
aaa
dec
xor
add
imul
into
push
es
mov
sbb
mov
int3
jp
stc
scas
push
ss
sub
icebp
pusha
add
lods
inc
xchg
jmp
bound
lahf
aad
mov
push
icebp
insb
pop
lret
inc
and
sbb
add
sbb
inc
push
mov
jecxz
std
aas
hlt
jg
ret
aaa
adc
mov
dec
or
outsb
gs
fsubs
mov
dec
xchg
jg
rclb
enter
lahf
mov
pop
or
sbbb
and
out
push
fwait
lds
mov
enter
pop
jns
cmpsb
push
lret
mov
jg
and
push
movsl
mov
push
imul
or
dec
mov
out
cs
out
and
cmpb
adc
or
imul
cmp
mov
adc
sub
cli
dec
push
iret
aaa
fstpt
imul
test
aas
fbstp
insl
push
stos
enter
xchg
loope
xor
pop
add
xor
xor
jnp
cmpsb
jae
adc
or
dec
insb
mov
inc
cltd
mov
and
dec
jmp
jnp
outsl
xchg
cli
cmp
mov
mov
cmp
sahf
scas
imul
loope
gs
or
adc
dec
inc
rorb
cmp
pop
out
pop
mov
mov
inc
aam
jb
imul
ror
mov
repnz
js
pop
cmp
sub
ss
push
lret
loopne
push
lret
mov
push
gs
das
repz
ds
cmp
add
fldenv
or
push
sub
sub
sbb
sub
popf
mov
dec
in
int
fldenv
fldt
push
ret
xlat
pop
leave
and
cmp
xchg
movsl
cwtl
aas
movsl
jmp
sbb
mov
andl
mov
lds
ss
push
mull
in
mov
ss
push
add
pop
out
and
es
bound
frstor
cltd
and
jnp
out
add
cmp
mov
xor
mov
andb
jmp
test
int
push
xor
mov
sbb
mov
pop
icebp
mov
jecxz
jmp
fbld
push
cmp
or
and
fucomip
rclb
nop
lcall
adc
cmp
lods
jns
jno
loopne
or
mov
cmp
in
inc
nop
mov
cmpsb
xchg
pop
sub
push
jnp
cmpsb
xchg
or
push
loopne
jg
scas
outsb
cmpl
pop
mov
outsb
mov
aam
xchg
scas
mov
sbbl
or
loope
popa
adc
movsl
cmp
push
int3
xor
push
dec
inc
cmpsb
mov
xor
lret
pop
sub
hlt
xor
pop
mov
xchg
pusha
cs
dec
dec
cmp
int3
and
inc
lods
sbbl
adc
ss
int
insb
outsl
pop
mov
mov
enter
fdivrs
xor
fldl
sub
add
fisttps
leave
or
adc
test
push
nop
mov
xchg
fidivl
std
lcall
dec
lcall
push
adc
sbb
scas
and
clc
or
shlb
imul
movsl
ss
int
mov
cmpsb
data16
xor
push
pop
lods
outsl
mov
mov
mulb
outsb
sbb
roll
andb
lret
or
inc
andl
mov
arpl
lock
cmpsl
mov
je
push
mov
sbb
aas
push
fucomip
adc
sub
pop
shl
add
adc
jle
mov
imul
xchg
popa
and
sbb
xchg
pop
lods
xor
inc
movsb
and
mov
sbb
aad
imul
repnz
add
fsubs
hlt
repz
pop
fisubrl
dec
fadd
test
sti
into
test
aas
cmp
push
jne
inc
inc
or
push
in
andl
push
jne
jp
shl
repnz
outsb
add
ljmp
gs
mov
mov
outsb
test
int3
out
mov
pop
inc
fcmovnb
test
add
pop
gs
outsb
adc
test
pushf
sti
jl
add
jne
in
sbb
pop
dec
and
std
jb
jle
icebp
lods
inc
or
lret
scas
movl
inc
mov
mov
cmp
loopne
jo
cmp
dec
jmp
aad
rorb
sbb
pushf
leave
and
mov
or
mov
and
inc
and
pushf
mov
mov
fs
or
mov
xor
pop
dec
into
loop
fnstcw
shll
pusha
outsl
mov
xchg
mov
push
jne
and
imul
dec
pop
pop
add
std
scas
je
push
fdivl
mov
jmp
sbb
xor
rclb
push
inc
pop
add
rcr
jmp
subb
lock
das
xor
mov
jo
and
es
mov
jns
aam
int3
xchg
push
test
call
les
xchg
push
mov
xor
lods
iret
adc
lock
enter
rcrb
in
dec
aam
notb
rcl
insb
outsl
int3
inc
in
dec
and
cmp
pop
sbb
pop
mov
aam
mov
push
mov
std
jnp
add
lods
mov
ss
jle
mov
and
cmp
or
in
repz
xchg
lcall
and
and
pushf
push
dec
xor
shl
sbb
cld
movsb
or
jecxz
fisttps
dec
jg
push
in
negl
dec
lcall
lods
dec
insb
mov
sbb
daa
ret
aam
mov
mov
or
sbb
call
add
fnstsw
sbb
mov
adc
out
pop
out
enter
sbb
xchg
lret
ss
cmp
shrb
pop
mov
and
mov
faddl
in
cmp
ret
jmp
popf
push
push
and
movsl
push
mov
xchg
xor
adc
imul
mov
mov
fimull
xchg
pop
cli
jb
cld
je
inc
fmuls
sbb
rcll
pop
mov
data16
cmp
out
jbe
dec
mov
ret
into
popf
lods
pop
dec
sbb
adc
mov
sbb
ficoms
xor
dec
inc
inc
mov
fs
pop
mov
dec
adc
push
imul
idivb
jl
cmp
mov
and
mov
jecxz
in
adc
hlt
dec
mov
out
push
xchg
les
aaa
cmp
repnz
lods
sbb
andb
int
test
xchg
frstor
les
sbb
pop
dec
sub
add
loop
push
push
iret
jp
orb
lock
xor
or
push
sub
repnz
sahf
mov
xor
jp
pushf
out
xchg
jo
inc
aam
cmp
sbb
mov
mov
xlat
or
lods
xchg
in
lds
cmpsb
test
hlt
cmc
rcll
cltd
imul
add
xchg
jbe
test
mov
into
sbb
jmp
jp
out
push
in
add
add
push
dec
cld
scas
jo
dec
add
ljmp
jp
lret
test
sti
leave
popa
mov
adc
les
dec
shll
in
lock
les
sbb
adc
mov
and
fdivp
pop
xor
loop
cmpsl
xchg
test
into
test
clc
pop
scas
int3
cmp
inc
pop
cltd
xchg
push
dec
ficoms
mov
mov
or
fisttpll
hlt
push
loop
popf
jg
test
shlb
push
xchg
xor
rcrb
mov
leave
mov
insb
enter
pop
ss
adc
mov
ficompl
loopne
ljmp
sub
add
jno
pop
idivb
sbb
into
pushf
push
push
fwait
loopne
sub
cmp
testl
int3
mov
xor
push
pop
adc
sub
nop
movsb
sahf
rclb
nop
add
mov
add
adc
mov
fstpt
insl
cmp
sti
inc
adc
ljmp
mov
lcall
in
jp
xor
dec
cwtl
ja
or
jnp
mov
dec
idivb
mov
in
or
lea
dec
mov
roll
pop
popa
mov
aaa
into
out
sbb
jp
mov
push
mov
ljmp
add
mov
or
outsb
sub
das
adc
testl
ljmp
insb
rcll
mov
add
cmp
jae
jae
aam
mov
into
jne
popf
adc
jl
sbb
add
imulb
mov
daa
ss
mov
ret
mov
stos
inc
mov
jae
sbb
xchg
push
nop
cs
jl
jg
lds
ret
add
aam
add
mov
fwait
xchg
leave
or
hlt
xchg
sahf
and
repz
adc
cmpsl
mov
sbb
rolb
xchg
nop
das
push
push
scas
lods
adc
imul
imul
mov
adc
xor
and
loopne
int
pop
inc
xor
cmp
imul
mov
mov
push
xor
add
sbbb
arpl
adc
daa
inc
mov
xchg
leave
sub
pop
aam
dec
mov
je
sbb
in
dec
lods
pop
clc
mov
rcrl
dec
xchg
sub
in
mov
inc
push
mov
or
pop
in
shlb
jge
jae
pop
and
xchg
adc
sahf
cmp
arpl
int3
outsb
mov
sub
rcrb
in
enterw
fildll
push
rclb
addl
jl
stos
add
ljmp
ds
lock
sub
ds
aam
lock
sbb
inc
mov
xchg
arpl
add
push
cmpsb
pop
cmp
int3
sub
sub
lret
lock
jb
and
cltd
mov
push
iret
outsl
js
mov
pop
stc
cs
out
shr
clc
mov
mov
pop
push
loop
loope
pop
jns
add
sub
push
mov
fcoml
rcrb
jle
pusha
les
cld
cmp
enter
xor
sbb
rcrl
sub
mov
cmp
int3
xor
or
loop
loope
cmp
xchg
mov
jmp
xchg
scas
sbb
push
push
fwait
lea
ljmp
xchg
mov
fidivs
popf
addr16
popf
cltd
jg
and
sub
shrb
ds
push
adc
jno
aam
mov
dec
int
arpl
sub
das
sbb
sbb
xchg
js
cli
cmp
fmuls
movl
mov
mov
push
xor
lock
xchg
arpl
outsb
and
inc
add
sbb
add
sub
orl
mov
pop
scas
pusha
out
jae
aam
sub
xor
jne
or
push
dec
cli
shrb
and
pop
mov
mov
push
frstor
adc
xchg
jne
or
test
imul
rorb
popf
shll
ret
shlb
adc
fldl
inc
call
aam
enter
cmp
xchg
push
inc
dec
push
mov
mov
or
dec
lods
sti
lcall
lods
std
pop
std
dec
dec
inc
aas
pop
cs
cmp
mov
rcrb
sbb
out
cmpsb
je
and
push
sbbl
adc
lcall
lods
cmpsb
sub
push
mov
mov
pop
adc
leave
iret
pop
jecxz
jge
pop
dec
insl
addr16
push
and
es
pusha
repz
out
insl
fildll
adc
xchg
pop
pop
int
int
fiaddl
push
dec
jle
dec
xchg
sbb
xchg
in
mov
jnp
push
jno
mov
and
jmp
cli
dec
and
fld
test
repnz
add
cli
push
mov
out
das
push
lret
xor
leave
lahf
fwait
cmpsl
sbb
mov
rol
jge
ret
out
aas
shrl
ret
lods
inc
pop
repz
pop
es
dec
shll
push
pop
add
out
dec
push
jb
xchg
loopne
mov
arpl
stc
mov
lret
pop
push
mov
loopne
push
sub
outsl
push
insb
cs
xchg
pushaw
jge
pusha
xchg
jae
cmp
outsb
and
fcmovb
push
repnz
lret
mov
mov
jle
lds
stos
xchg
xor
pop
out
cwtl
test
cld
jle
inc
test
dec
push
addr16
mov
scas
mov
cwtl
adc
cld
in
cli
das
push
fisttpl
shrb
dec
fimuls
jne
and
jb
clc
shlb
test
outsb
leave
mov
ljmp
repnz
inc
icebp
xchg
imul
push
push
aad
xchg
xor
inc
add
add
fstpl
lahf
xor
inc
or
sub
aad
and
pop
pop
lods
jg
popa
mov
and
xchg
pop
jae
mov
cwtl
aad
andb
sti
les
lret
jg
mov
movsl
icebp
lea
out
das
fcmovb
inc
and
cmp
inc
cmpsb
xchg
mov
lcall
outsb
mov
out
arpl
cmpsl
fcmovbe
je
mov
ds
insb
xchg
lret
mov
popl
push
inc
popa
adc
jae
xlat
imul
cmp
and
test
leave
mov
movsl
imul
jg
lcall
add
dec
sub
push
mov
and
push
popf
mov
das
in
movl
jp
xor
pop
mov
test
push
leave
mov
mov
fnstcw
sub
movsb
mov
lret
aaa
mov
adc
push
mov
pusha
lret
mov
add
push
iret
cli
inc
rcr
insb
mov
pop
add
and
fwait
punpcklbw
call
add
xor
mov
scas
pop
push
push
pop
pop
out
mov
lds
mov
stc
insl
imul
pop
sub
sub
or
lds
std
cmp
xor
mov
push
mov
rorl
sub
push
dec
add
push
dec
inc
rolb
inc
sub
push
pop
and
icebp
inc
xchg
ret
ret
ret
mov
outsb
xlat
sub
fwait
inc
jle
sbb
cmp
jmp
sbb
loopne
add
add
test
aas
and
xor
mov
dec
or
addr16
sub
arpl
pop
mov
stos
or
push
add
notb
push
xlat
fisttpll
pop
push
int3
push
inc
rcr
sti
jecxz
out
dec
das
dec
adc
dec
scas
cmc
dec
sbb
cwtl
addl
push
or
sahf
lds
dec
enter
aas
and
cmp
cmp
push
mov
popa
jmp
incb
cs
popa
out
inc
or
ljmp
xor
mov
cltd
cltd
lret
pop
mov
lock
out
shll
cmp
sti
and
dec
cmp
lcall
je
sbb
dec
add
pop
mov
jg
push
out
lea
inc
pop
das
mov
dec
or
pop
cmp
adc
and
das
sbb
sbb
or
xchg
adc
loop
scas
xchg
pop
dec
scas
cmpsl
cmp
bound
add
or
dec
pop
addl
dec
inc
mov
ljmp
and
cld
aad
mov
lods
in
and
adc
sahf
unpcklps
lods
outsl
lods
mov
loopne
mov
mov
insl
popl
mov
movsl
jbe
mov
prefetcht2
mov
mov
adc
inc
xchg
cmp
adc
cmp
outsl
jns
aad
jbe
aad
rolb
pusha
notb
leave
scas
cld
sub
push
aas
rorb
mov
out
sbb
sub
and
sahf
bound
leave
iret
push
adc
fs
sub
ret
jns
repnz
sbb
lret
jl
pop
test
dec
mov
shll
push
inc
stos
shll
scas
push
dec
jmp
icebp
jbe
xchg
mov
outsb
mov
adc
push
and
pushf
stos
xor
in
cmpsl
shrl
aam
stos
xchg
sbb
insb
jne
cmp
fisttpl
repnz
mov
mov
test
cmp
adc
or
or
push
mov
inc
push
lret
add
xchg
pop
nop
popf
adc
mov
xchg
xlat
add
xchg
mov
mulb
xor
test
mov
mov
xor
int3
call
lods
loope
jmp
das
cltd
pop
int
and
sbb
inc
xchg
push
cld
or
adc
cmpsb
insl
push
scas
es
sub
or
jae
push
fwait
hlt
movsb
jne
jl
scas
push
pop
movsl
sbb
pushf
push
insb
ret
inc
loopne
adc
cld
imul
andl
js
shll
addr16
movsb
mov
lock
pop
sub
jno
xlat
stc
int
repz
and
dec
adc
xchg
hlt
ret
cs
jo
mov
jae
shll
loopne
je,pn
lds
jno
adc
mov
pop
sub
sbb
fcmovbe
out
mov
dec
adc
test
inc
std
mov
and
inc
inc
shll
sbb
aaa
stc
adcl
es
push
fsubl
mov
das
inc
push
push
or
and
sbbl
pusha
test
ds
movsl
jnp
inc
mov
xchg
stos
inc
cmc
add
cmp
jae
incl
add
xchg
pop
imul
push
cmp
daa
adc
cmpl
pushf
and
gs
sbb
popa
mov
imul
cmp
sub
mov
sub
mov
lahf
pop
out
sub
cmpsb
push
loopne
mov
dec
xchg
jnp
divb
push
in
shlb
in
repz
iret
fimuls
in
ja
std
sahf
ljmp
dec
sti
mov
shl
cmp
int3
sub
mov
imul
push
mov
cld
push
sub
jg
jb
mov
dec
sarl
push
stos
xor
pop
jb
aaa
aaa
add
gs
loope
push
icebp
mov
dec
insb
jns
sahf
loopnew
inc
movsb
sub
int
jae
sbb
mov
dec
dec
pop
int3
sub
mov
pop
scas
dec
loope
mov
int
fbstp
lret
or
inc
mov
xor
sbb
in
gs
mov
test
lods
cmpsl
sbb
repz
pusha
mov
cmp
enter
mov
mov
and
or
mov
ret
jl
in
and
in
jbe
pop
adcl
mov
adc
sbb
xchg
lret
adc
push
jl
mov
mov
ror
mov
dec
lds
test
pop
add
or
fimull
fstp
pop
mov
adc
setno
rcll
clc
shll
mov
lea
shrl
bound
aam
pop
in
push
jns
fnstcw
test
lds
lcall
fisttpll
mov
es
enter
adc
jmp
mov
cmp
jmp
inc
and
jns
movsb
push
stos
cli
push
add
js
ret
mov
xchg
lock
xor
ret
andl
inc
jno
mov
sub
scas
dec
lret
fst
popa
call
cltd
cs
shl
add
or
test
push
shrb
mov
sti
loope
jmp
xchg
imul
lcall
mov
shr
test
dec
cli
sbb
cmpsb
xchg
out
lods
call
inc
push
jne
into
push
insb
mov
and
out
loopne
jo
push
sbb
leave
add
adc
jmp
orb
nop
jae
ljmp
ffree
or
in
ja
cli
out
fs
inc
bound
scas
lcall
inc
imull
jbe
xorb
jge
pop
jl
into
inc
push
lea
mov
orl
push
mov
rcrl
sub
idiv
adc
cltd
scas
sub
or
pop
adc
push
js
pop
icebp
cmp
add
jl
sbb
cmp
mov
test
mov
mov
add
add
pusha
inc
repz
push
mov
mov
iret
adc
repnz
mov
jmp
cs
inc
sbb
out
xor
adcb
sbb
mov
sbb
inc
mov
mov
xchg
ljmp
add
popa
aas
test
xor
adc
mov
or
dec
orl
dec
sbb
leave
cmpsl
jne
call
push
pop
dec
lahf
pop
fcmovnb
add
jb
jae
rol
dec
push
xor
adc
icebp
jno
and
and
loope
mov
icebp
notb
push
repz
fcompl
in
or
jbe
pop
decl
jle
or
aaa
mov
sbb
mov
xchg
dec
mov
lahf
mov
jl
pusha
sub
aad
aas
xchg
and
das
mov
das
hlt
inc
call
adcl
cmc
add
inc
mov
lcall
scas
cmp
xor
and
daa
dec
rorl
pop
pop
scas
mov
push
xchg
clc
movsb
fnsave
xorb
push
mov
and
adc
jnp
jo
jecxz
xorl
pop
leave
mov
or
aam
pop
or
or
hlt
lret
shl
xchg
out
cmp
iret
pop
mov
pop
fdivrs
fs
or
mov
in
inc
push
add
dec
sti
std
jns
inc
jle
sub
lret
cmpsl
sbbl
sbb
dec
cmpsb
mov
scas
push
jle
rcrl
ret
shlb
ljmp
pusha
jmp
mov
lcall
xchg
lgs
adc
call
fnstcw
jno
cs
mov
xchg
mov
das
dec
outsl
test
jo,pt
cld
push
jge
and
lea
xor
mov
jne
xchg
lret
mov
mov
mov
or
daa
in
ljmp
or
int3
mov
scas
jae
adc
push
int3
lds
add
jmp
bound
push
jo
add
fildll
push
push
cwtl
bound
psrlw
shrl
xchg
push
jmp
js
mov
cmp
sub
adc
cmp
pop
or
lea
or
fcmovnbe
mov
pop
push
idivl
iret
sti
inc
mov
adc
loopne
enter
or
lret
add
bound
test
aas
imul
mov
adc
mov
xchg
dec
or
loop
push
addr16
out
popf
cld
popf
add
and
das
outsb
iret
adc
xlat
xchg
pop
fdivrl
js
rolb
std
movsl
and
shrl
sbb
add
mov
inc
aam
popa
lret
scas
mov
xchg
popl
mov
sbb
test
inc
mov
dec
fdivrp
popf
jo
add
ja
in
data16
cmp
movl
repz
push
push
sbb
sti
out
arpl
xor
out
cmpsl
pushf
jb
enter
fbstp
adc
arpl
insb
mov
ret
dec
xor
outsb
test
cmc
add
xchg
xchg
les
shl
ss
and
mov
in
mov
test
iret
mov
sbb
daa
div
xor
xchg
add
not
cmp
dec
mov
cmpsl
lds
mov
jne,pt
cld
add
lret
mov
push
es
js
sbb
nop
ret
jecxz
sub
out
outsb
jmp
popa
js
push
push
adc
or
xchg
cwtl
xchg
cltd
dec
cmc
fcoml
rorb
aas
lret
pop
cltd
mov
xchg
ss
adc
mov
ret
les
stos
xor
hlt
.byte
cld
ret
cmpsb
