add
add
incl
add
inc
or
push
inc
or
fs
or
jae
or
test
add
inc
or
add
add
imul
gs
xor
cs
insb
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
add
je
jb
arpl
fs
jae
add
add
jb
jne
insb
inc
insb
insb
outsl
arpl
add
push
imul
jb
add
add
jb
jne
insb
push
jb
je
arpl
lea
push
mov
push
nop
nop
nop
nop
nop
call
mov
or
push
inc
or
fs
or
jae
or
test
add
inc
or
popl
mov
pop
pop
ret
nop
push
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pusha
nop
nop
mov
mov
nop
nop
nop
nop
cld
mov
xor
nop
nop
nop
movsb
mov
nop
nop
nop
nop
call
jae
xor
call
jae
nop
nop
xor
call
jae
mov
inc
mov
nop
nop
nop
call
adc
jae
jne
stos
jmp
nop
nop
nop
call
sub
nop
jne
call
jmp
nop
nop
nop
lods
shr
je
adc
jmp
nop
nop
nop
nop
nop
nop
xchg
dec
shl
lods
call
cmp
jae
nop
cmp
jae
cmp
ja
nop
nop
inc
nop
nop
inc
nop
nop
xchg
nop
nop
nop
mov
mov
nop
push
mov
sub
nop
rep
pop
jmp
add
jne
nop
nop
mov
inc
adc
ret
nop
nop
xor
nop
inc
call
adc
call
jb
ret
sub
mov
popa
pop
ret
mov
push
mov
push
nop
nop
nop
nop
nop
nop
nop
mov
mov
nop
nop
mov
add
mov
nop
nop
add
mov
add
mov
pop
pop
ret
mov
nop
nop
nop
nop
nop
nop
jmp
inc
cmpb
jne
inc
ret
nop
nop
nop
nop
nop
nop
nop
nop
add
ret
push
mov
add
push
push
push
nop
nop
mov
add
mov
mov
cmpl
jne
nop
nop
call
mov
call
mov
dec
add
inc
mov
nop
nop
add
mov
mov
add
mov
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
dec
test
jb
inc
movl
cmpl
je
mov
add
mov
add
push
push
call
add
add
incl
dec
jne
push
push
mov
mov
push
push
call
mov
mov
mov
add
mov
push
push
call
add
mov
jmp
lea
push
call
mov
cmpl
jne
nop
nop
push
call
mov
nop
nop
mov
call
mov
mov
add
mov
test
jbe
mov
movl
testl
jne
movzwl
push
mov
push
call
mov
mov
call
mov
jmp
push
mov
push
call
mov
mov
call
mov
add
incl
dec
jne
mov
cmpl
jne
mov
mov
add
mov
add
mov
push
push
mov
push
call
mov
mov
add
add
mov
add
lea
push
push
push
push
call
lea
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
int3
pop
pop
pop
mov
pop
ret
lea
nop
nop
nop
nop
nop
nop
nop
nop
jmp
add
add
iret
leave
in
ret
int
mov
iret
mov
mov
mov
ret
rol
mov
int
add
add
add
add
pusha
nop
nop
nop
nop
call
nop
nop
ret
lea
nop
nop
nop
nop
nop
nop
nop
push
nop
nop
nop
mov
push
push
push
nop
nop
nop
mov
push
nop
nop
mov
sub
push
push
nop
nop
nop
push
pop
pop
nop
pop
add
nop
nop
pop
mov
pop
pop
nop
nop
pop
pop
mov
nop
nop
jmp
nop
nop
ret
nop
nop
push
nop
nop
mov
nop
push
push
nop
nop
push
mov
push
mov
nop
pop
mov
pop
pop
nop
pop
pop
mov
nop
nop
jmp
ret
push
mov
push
push
nop
nop
push
mov
push
mov
sub
push
push
push
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
ret
push
mov
nop
nop
push
push
nop
nop
nop
push
mov
push
mov
pop
mov
pop
pop
pop
pop
mov
jmp
ret
nop
nop
pusha
call
nop
nop
ret
mov
nop
nop
nop
nop
nop
nop
jo
nop
nop
nop
nop
nop
jno
nop
nop
nop
nop
nop
call
nop
nop
nop
nop
nop
nop
add
add
add
add
add
add
add
add
ret
nop
nop
nop
nop
nop
nop
nop
jo
nop
nop
nop
nop
nop
jno
nop
nop
nop
nop
nop
call
add
add
ret
lea
push
nop
nop
nop
nop
nop
mov
push
push
nop
nop
nop
nop
nop
push
mov
push
mov
sub
push
push
push
pop
nop
nop
nop
nop
nop
pop
pop
add
pop
mov
nop
nop
nop
nop
nop
pop
pop
pop
pop
mov
jo
jno
ret
nop
push
mov
nop
push
nop
nop
nop
nop
nop
push
push
mov
push
nop
nop
nop
nop
nop
nop
mov
sub
push
push
push
nop
nop
nop
nop
nop
nop
pop
pop
pop
add
pop
mov
nop
nop
nop
nop
nop
pop
nop
pop
pop
nop
pop
mov
jo
nop
jno
ret
lea
nop
push
mov
nop
nop
nop
nop
nop
push
nop
push
push
mov
push
nop
mov
nop
nop
nop
nop
nop
sub
push
push
push
pop
pop
nop
nop
nop
nop
nop
nop
pop
add
pop
mov
pop
pop
nop
nop
nop
nop
nop
nop
pop
nop
pop
mov
jo
nop
jno
nop
nop
ret
push
nop
mov
nop
nop
nop
nop
nop
nop
push
nop
push
push
nop
nop
nop
nop
nop
mov
push
mov
sub
push
nop
push
push
pop
nop
nop
nop
nop
nop
nop
pop
pop
add
pop
nop
mov
pop
pop
nop
pop
pop
nop
mov
jo
jno
ret
mov
nop
nop
nop
nop
pusha
nop
nop
nop
call
nop
nop
nop
nop
nop
ret
nop
jo
jno
call
nop
nop
nop
ret
lea
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
ret
nop
nop
nop
push
mov
push
nop
push
nop
push
nop
mov
push
nop
nop
mov
sub
push
push
push
nop
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
add
add
add
add
ret
nop
push
mov
push
push
push
nop
mov
push
mov
sub
push
push
push
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
ret
nop
push
mov
push
push
push
nop
mov
push
nop
nop
mov
sub
push
push
push
nop
pop
pop
nop
nop
pop
add
pop
mov
pop
pop
pop
pop
mov
jmp
add
add
add
add
ret
mov
nop
nop
push
mov
push
nop
push
push
mov
nop
nop
nop
push
mov
sub
push
push
push
pop
pop
nop
nop
nop
pop
add
pop
mov
pop
nop
nop
nop
pop
pop
nop
pop
mov
jmp
ret
lea
add
inc
add
rolb
nop
inc
add
rolb
or
add
sub
add
sbb
add
js
add
dec
jg
add
lock
add
mov
add
add
add
add
mov
add
inc
pop
inc
add
add
add
nop
add
cld
add
add
inc
add
add
add
add
add
inc
cmp
add
or
add
mov
add
add
add
add
add
rolb
or
add
inc
add
add
add
add
rolb
add
add
add
inc
add
add
add
loopne
add
push
add
add
add
add
add
inc
add
adc
or
push
je
imul
add
add
xor
pop
and
pop
inc
pusha
push
mov
sub
xor
push
and
push
dec
bound
push
arpl
adc
sbb
rclb
adc
or
or
add
sub
in
jno
mov
clc
mov
and
xchg
in
enter
jb
cmp
sbb
mov
sub
pusha
xchg
ror
int3
in
xor
xor
or
sbb
cmpsb
and
sbb
cmpsb
adc
push
or
les
mov
push
call
testb
je
add
xor
pop
mov
mov
jg
inc
lods
and
pusha
push
push
mov
cmpl
jne
push
push
call
enter
add
lret
movl
or
rorb
lea
sbbl
inc
pop
cmp
jne
iret
pop
lahf
adc
sbb
pop
call
call
xor
push
mov
push
or
in
adc
xor
adc
or
add
mov
push
xchg
push
adc
inc
pop
ret
add
icebp
stc
adc
aad
fstpl
mov
lds
push
scas
nop
cli
cmp
icebp
push
or
fwait
or
ret
nop
adc
call
mov
add
inc
add
adc
and
enter
pop
ds
cmp
jne
jle
sbb
call
lahf
add
push
mov
sbb
popf
sti
sbb
cltd
cmp
jb,pt
mov
add
call
int
bound
and
sbb
insb
add
or
jnp
push
cmp
lds
outsl
aas
pop
popa
jp
add
dec
das
add
sub
ds
cltd
or
mov
arpl
sub
fstpt
into
lock
jae
or
jae
sar
xchg
or
or
cmp
cltd
sbbl
xchg
mov
in
cmp
adc
pop
mov
insb
mov
adc
xchg
add
add
and
clc
std
pop
inc
mov
test
and
sarl
call
dec
andb
add
inc
dec
stc
ljmp
mov
call
popa
push
push
jne
or
call
jne
jns
sub
dec
orb
ja
cmc
std
adc
mov
jo
jmp
xchg
movl
nop
data16
push
cli
or
repnz
sahf
sub
aam
dec
adc
push
dec
repz
xchg
out
ja
in
add
je
push
xor
or
std
imul
jne
call
popa
or
add
push
stos
jbe
mov
or
cmp
pop
pusha
add
in
adc
sbb
dec
sbbl
and
mov
xchg
sbb
dec
adc
repnz
mov
ljmp
add
ja
dec
mov
loop
mov
dec
loope
mov
inc
fists
iret
cmp
pop
cmp
adc
sti
pop
xchg
jbe
decb
add
push
inc
pop
inc
adc
notb
push
call
mov
mov
xchg
mov
cmpsb
je
sub
add
repz
xor
sahf
jmp
sbb
cmp
sub
inc
test
sbb
and
jge
or
std
sub
addl
and
and
rcll
sub
inc
sarb
aas
push
xchg
add
cmc
pop
aam
cmp
cld
jg
sub
sub
pop
mov
mov
je
cli
inc
dec
in
or
ds
sti
pop
xor
leave
stos
add
idiv
xchg
das
and
int3
arpl
cmp
int
movsl
and
es
adc
adc
mov
cli
mov
xchg
je
dec
adcb
test
mov
fimull
test
movsb
push
mov
fildl
sbb
aaa
or
push
mov
dec
xor
mov
out
call
aam
test
nop
je
andl
mov
incl
pop
jmp
imul
jne
and
xor
jnp
nop
insb
cmpl
test
adc
inc
and
or
and
and
dec
dec
xorb
lds
jecxz
ss
push
or
cmp
jae
std
rcl
sub
int
cltd
fstps
int3
mov
fildll
fldt
je
mov
ret
int
xor
sub
inc
dec
lods
movsl
adc
lods
notb
repnz
cmp
xchg
dec
jmp
jnp
mov
in
pushf
jne
push
pushl
cmp
sub
cmp
or
mov
adc
adc
adc
or
cmpsb
xchg
js
push
js
andb
sbb
test
mov
adc
add
xor
cmp
cmp
mov
lahf
add
add
mov
mov
push
xchg
mov
ret
in
test
pop
and
push
jl
stc
adc
test
rcl
rcrb
data16
push
push
call
or
adc
cmp
aad
and
mov
out
test
or
mov
je
xorb
mov
push
notl
adc
jmp
or
aad
or
rorl
and
pop
and
sbb
adcl
or
cmp
jo
add
test
jns
add
xchg
stc
add
je
mov
jmp
pop
movsb
adc
sbb
pmuludq
testl
adc
mov
pusha
in
shll
add
adc
call
dec
push
mov
inc
lret
add
sbb
add
cli
adc
add
xorl
mov
sub
jl
inc
or
or
or
sbb
add
sbb
xor
jg
pop
add
add
outsb
or
jne
sub
add
mov
call
dec
or
add
andl
mov
or
xchg
or
je
sub
add
fcmovb
push
push
sub
test
jne
testb
std
and
cmpsl
jb
sub
cmp
lods
push
inc
push
call
faddp
push
in
cmp
add
test
and
mov
and
add
adc
fs
pop
gs
or
movsb
mov
xchg
dec
or
mov
sbb
or
mov
nop
cmpsl
inc
andb
dec
gs
aaa
sub
test
clc
into
jl
jge
icebp
hlt
jge
mov
pop
add
je
sti
add
ljmp
mov
lods
insb
and
sbb
sub
arpl
cmpsb
lods
std
push
add
or
imul
mov
subb
jle
ret
mov
or
dec
push
mov
push
or
mov
push
add
sub
dec
mov
xchg
aaa
mov
test
dec
dec
ret
gs
test
mov
pop
pusha
lahf
sbb
dec
cmp
xor
adc
stos
ja
cld
sub
jg
or
push
pop
ljmp
xor
rorl
inc
jle
or
cmp
mov
test
sub
rcl
sbb
add
adc
and
cltd
std
arpl
inc
push
xchg
nop
push
pop
lea
movsl
pop
loop
call
loopne
xlat
mov
adc
mov
or
push
roll
fsubs
xor
dec
sub
add
int3
and
or
ljmp
pop
or
pop
push
ds
imul
ja
ds
add
dec
adc
mov
icebp
call
imul
push
icebp
adc
add
bound
leave
and
fcomps
lea
xor
bound
inc
clc
sub
cmp
push
je
adc
stos
shlb
push
jbe
ljmp
mov
mov
pop
adc
mov
or
xchg
or
loope
cmc
inc
adc
arpl
or
fwait
aad
jne
sbb
lods
lcall
cmp
cmpl
inc
arpl
xor
add
sub
adc
mov
aas
cmp
jmp
adc
add
loopne
movl
fs
roll
xchg
call
sar
inc
mov
in
cmp
sbb
dec
jle
pop
gs
push
push
xor
cmpsb
das
add
call
je
out
or
or
pop
enter
push
and
inc
and
and
add
data16
pop
fiaddl
xchg
adc
xchg
mov
dec
mov
test
jns
test
add
and
jne
sbb
enter
imul
es
cmp
or
dec
lods
or
mov
movsb
push
mov
sbb
xchg
jmp
xchg
jmp
adc
or
xchg
lcall
and
and
adc
lock
mov
mov
push
push
mov
dec
nop
push
inc
pop
sar
and
adc
negw
or
pop
jb
pop
jmp
inc
and
xchg
ljmp
mov
or
jmp
or
les
mov
add
mov
icebp
aam
or
call
nop
or
ret
inc
sbb
sahf
and
lods
sub
cwtl
and
xchg
ja
loop
lahf
mov
cmp
nop
jno
push
inc
adc
mov
jle
call
jo
cmp
inc
mov
test
daa
je
xor
cli
add
cld
inc
or
aaa
orl
add
js
or
jge
push
push
or
and
adc
add
inc
ret
daa
cli
add
dec
and
rorl
rcrb
jne
in
and
inc
mov
movsb
in
fs
fdiv
ret
movl
mov
and
fwait
movsb
mov
orb
xlat
sub
pop
call
cmp
or
adc
xor
sysenter
lea
push
xor
sub
enter
mov
add
ljmp
jmp
test
add
dec
pop
movups
push
xchg
sti
jmp
js
mov
lret
test
inc
lahf
jno
jl
jns
inc
push
sbb
sub
test
add
add
aaa
inc
sub
lock
stc
bound
or
dec
xchg
sbbl
stos
clts
pop
cmp
jl
pusha
in
sub
pop
stos
lret
inc
and
and
dec
cmpsb
shlb
jecxz
outsb
clc
ds
cmp
pop
push
adc
faddl
fmul
cli
lret
cwtl
test
iret
stc
les
add
jmp
sub
sbb
xchg
orb
adc
adc
jmp
sahf
xor
xchg
jns
test
and
adc
in
dec
adc
test
sar
rolb
ss
pushf
dec
push
ret
pop
fs
lock
add
js
dec
adc
and
and
sti
mov
jo
and
bound
lea
jle
jb
xor
nop
push
mov
sub
rorb
inc
add
out
mov
out
inc
je
xor
call
or
cwtl
sbb
push
mov
push
xor
pop
or
ret
push
jmp
xor
jne
jmp
out
jo
adc
out
cs
adc
dec
adc
clc
nop
lds
or
sub
or
call
cwtl
sahf
aas
sub
cmp
ja
jne
mov
sbb
pop
call
lods
or
jmp
push
push
push
call
mov
jne
clc
xor
jmp
adc
xor
dec
inc
mov
cmp
mov
pop
loopne
nop
mov
cmp
jg
push
xlat
out
add
ja
je
mov
js
sub
movsl
cld
push
and
jmp
je
xor
sbb
sub
std
sbb
inc
cld
inc
push
data16
add
addl
cmovns
add
jl
or
incl
and
pop
pusha
push
mov
loopne
mov
add
lea
mov
mov
or
sbb
pushf
les
mov
divb
mov
das
or
in
ja
sub
and
jne
jne
push
sbb
lock
movsb
or
adc
js
rcrb
mov
push
aam
movsl
ss
mov
adc
mov
push
dec
inc
jge
and
or
sub
sub
js
pop
pop
pop
rclb
xor
and
enter
inc
xchg
xchg
and
add
or
and
ja
cmp
clc
mov
add
add
fcoms
loopne
pop
int
popa
aam
push
jmp
pushl
push
neg
jle
dec
js
pop
sub
lock
inc
fldl
pushf
mov
sbb
popa
jb
add
nop
adc
syscall
ja
cmpsb
ret
or
add
aad
sbb
lcall
adc
shl
loope
test
repz
xchg
mov
sub
add
addb
lcall
cwtl
lea
and
mov
push
lret
sub
add
ja
push
or
adc
sub
fsubs
inc
inc
xchg
sbb
push
cld
and
inc
mov
xor
stc
or
cmp
hlt
stos
rcl
inc
bound
out
mov
jae
pop
adcb
or
aas
loope
add
enter
cli
or
pushf
or
push
ret
inc
invd
and
adc
adcb
mov
imul
mov
or
mov
inc
mov
aam
xchg
sub
test
and
mov
sub
pop
jecxz
or
mov
and
cs
jge
jbe
imul
dec
sub
add
mov
add
add
xlat
fadds
lods
outsb
xor
and
or
push
push
in
add
into
sbb
rorl
mov
cmp
cmp
sbb
push
sarb
mov
hlt
daa
lret
into
pop
rolb
cmp
sbbl
xlat
pop
mov
addr16
add
leave
repnz
bound
and
cmp
mov
sub
imul
mov
mov
stos
add
mov
addb
inc
mov
pop
out
add
mov
imul
cmp
call
jecxz
xchg
push
mov
jmp
add
jmp
stos
push
inc
mov
add
sbb
sarb
int3
repnz
mov
daa
movsb
lahf
in
call
scas
adc
call
jmp
fs
aam
add
jmp
dec
jp
iret
call
add
fdivrs
mov
add
cmpsb
scas
mov
pop
or
jne
xchg
jbe
dec
dec
in
add
mov
push
push
in
cmp
sahf
xchg
pop
cmpsb
lock
mov
popa
std
repnz
and
repz
mov
fldl
mov
add
les
aad
bound
xor
push
sbb
int3
inc
push
les
aas
out
rolb
popl
mov
sbb
inc
or
xchg
add
jb
mov
mov
jnp
mov
mov
lea
push
push
xchg
sub
xchg
mov
push
test
rclb
movsl
sub
mov
movl
mov
push
mov
lret
pop
push
insb
mov
jmp
out
mov
sar
loopne
push
clc
pop
cs
pop
or
aam
adc
or
push
dec
inc
push
push
inc
add
pop
inc
outsl
jb
popa
cmp
fs
push
dec
rolb
push
dec
popa
jae
push
mov
add
sub
dec
or
shlb
leave
mov
push
inc
rep
leave
inc
or
sbb
push
push
shr
enter
cmp
xchg
or
sbb
mov
push
adc
shlb
lds
adc
loopne
pop
mov
aaa
or
call
pop
cmp
mov
stos
rorb
rclb
jmp
pop
mov
stos
cmp
mov
push
adc
and
clc
sbb
in
cmp
aam
sbb
ret
sbb
adc
adc
xor
xchg
sbb
jne
call
cmp
cmp
jbe
jp
in
aad
mov
mov
data16
movsl
inc
mov
dec
stos
nop
dec
add
inc
test
call
rcll
add
gs
addl
add
scas
ret
xchg
xlat
add
pop
add
sub
lock
cld
divl
shr
or
inc
data16
repz
sub
cmpb
push
bound
inc
stos
xor
or
pop
les
push
outsb
call
cmp
push
icebp
pop
pop
loope
sbb
push
push
ss
add
mov
mov
mov
enter
movl
rorl
pop
or
pop
xor
inc
add
xor
or
je
or
pop
pop
call
inc
add
adcl
lods
nop
or
rorb
add
call
cmpb
adc
cltd
popl
call
sbb
push
call
push
bound
push
push
cmp
adc
pop
push
loopne
sbb
mov
pop
push
push
lret
fistps
add
jmp
jmp
inc
movsbl
ds
out
pushf
bound
imul
mov
pop
pop
mov
sub
push
and
loop
pop
test
push
lds
bound
enter
mul
ds
scas
jne
cmp
inc
mov
int3
dec
adc
je
cld
call
imul
test
mov
adc
out
mov
cmpl
push
je
call
out
sbb
adc
daa
das
push
ja
in
push
mov
push
cmp
pop
js
and
or
jmp
or
push
cmp
adc
mov
cmp
loopne
cmp
add
add
mov
sbb
mov
fnsetpm(287
push
aam
and
mov
stos
adc
scas
dec
cmpsb
sub
mov
mov
inc
fwait
hlt
dec
push
ss
xchg
daa
callw
jmp
pop
pop
mov
jbe
adc
or
dec
dec
mov
leave
xlat
or
xor
dec
iret
lcall
fisttps
call
cmc
sbb
cmp
or
fsubs
add
push
push
push
fs
pop
pop
insl
add
and
xor
mov
push
adc
mov
pusha
add
mov
or
scas
xchg
push
dec
icebp
xor
outsb
adc
or
adc
enter
enter
pop
push
sbb
je
pusha
inc
mov
popl
ret
subb
jns
and
lret
lret
or
int
xlat
cmpsb
xor
add
sub
jns
push
mov
adc
add
mov
cmp
sbb
jno
aas
orl
add
iret
xor
push
cmp
cmp
sub
inc
adc
pop
and
cmp
std
rdpmc
das
push
cmp
mov
call
jmp
int
and
iret
jecxz
and
xlat
ds
ds
adc
fdivrs
push
fidivrl
or
fnstcw
push
daa
lret
mov
call
or
aam
addr16
cmp
add
enter
adc
inc
stc
lea
bound
sub
or
ss
xor
add
adc
inc
sbb
sti
loop
dec
fmuls
out
sbb
cld
sahf
mov
int3
push
sub
or
test
mov
ret
push
add
mov
add
or
aaa
mov
mov
and
or
xor
insb
loope
pop
jp
or
cmp
jne
into
and
insb
push
mov
or
pusha
test
xchg
mov
pop
test
jle
dec
jl
inc
xor
add
or
shlb
dec
out
jo
jmp
jmp
and
or
std
or
mov
pop
jno
or
push
cmp
fistpll
pop
inc
aam
cmp
jle
pop
add
inc
mov
sub
xchg
pusha
and
daa
adc
movl
sbb
dec
cmp
adc
out
xchg
repz
cmp
gs
mov
popa
sub
ret
clc
cmpsb
add
into
rorl
push
add
call
add
dec
jne
pop
pop
mov
and
sub
lods
sbb
sub
pop
nop
xorl
popf
mov
rorb
sub
dec
dec
xchg
and
sub
js
or
inc
and
sbb
test
notb
add
sbb
sbb
adcb
ja
push
and
aaa
mov
movsl
pop
pop
leave
pusha
mov
mov
mov
andl
adc
subl
add
mov
cmp
shll
push
push
call
dec
les
push
xchg
test
and
dec
push
mov
mov
sub
mov
inc
mov
jnp
jbe
push
cmpl
sub
sub
call
and
out
cmpsb
add
nop
mov
stos
cs
test
mov
sti
mov
mov
mov
xor
add
xchg
inc
adc
test
call
dec
iret
out
inc
jmp
or
sub
mov
and
in
movsb
xor
adc
mov
test
repnz
test
sbb
mov
imul
push
adc
psubw
test
jmp
and
push
ficomps
cld
xchg
popl
or
and
jl
lahf
add
dec
jl
lock
push
lea
call
mov
sbb
mov
push
sbb
inc
add
push
or
adc
lcall
push
and
inc
daa
jg
test
ret
pop
repz
dec
add
cmp
add
sub
jl
adc
mov
sub
pop
or
dec
add
jle
push
subl
das
shrb
movw
sarb
mov
or
adc
js
mov
cli
stc
inc
mov
adc
mov
aaa
popf
pop
out
icebp
jb
daa
cmp
daa
mov
inc
or
push
mov
mov
stc
fsts
mov
les
movsl
cld
stc
icebp
cwtl
clc
mov
stos
mov
outsb
add
sti
pop
cmpb
push
pushf
shrb
call
pop
jl
jns
pop
movl
daa
jmp
roll
push
xchg
shrl
pop
xor
sbb
add
dec
pop
pop
mov
sti
adc
pushf
push
adc
loop
jmp
nop
fcoms
nop
xor
inc
and
or
pop
rorb
cwtl
movsb
iret
or
call
dec
cmpl
push
mov
pop
sub
lock
xor
and
or
movsb
or
push
inc
xor
jmp
lret
add
mov
adc
inc
sbb
and
rcrl
add
mov
xchg
sbb
push
dec
add
sarb
dec
in
mov
cld
notl
cvttps2pi
mov
inc
pop
ret
add
cmp
pop
and
dec
outsl
adc
cwtl
in
mov
arpl
test
adc
mov
adc
pop
rorl
inc
mov
jo
rcrb
pop
addr16
shll
add
cld
add
xor
out
or
mov
inc
inc
in
cli
test
add
push
ss
dec
xor
xor
jno
mov
jmp
dec
sub
and
xor
cli
or
or
inc
cld
dec
jmp
nop
add
push
xor
add
cmp
jne
and
pop
movsl
call
int3
movsb
mov
idiv
cmp
add
dec
jmp
in
cmp
mov
fptan
and
or
fcoml
in
or
jmp
or
out
stos
clc
add
cld
or
sbbl
xchg
shl
push
and
push
clc
inc
bound
dec
out
and
add
cld
mov
cld
jl
add
dec
jl
cmp
jge
pop
sub
lcall
adc
imul
in
mov
shl
mov
repz
adc
sti
add
fadd
daa
xchg
inc
rorl
popf
and
js
push
jne
call
xchg
xor
jo
js
cmp
call
dec
xor
or
test
icebp
jl
xor
xlat
jmp
pusha
adc
push
mov
mov
or
je
jne
pop
data16
es
mov
and
push
jl
push
xchg
jmp
lock
mov
cmp
dec
xor
jg
movsl
in
push
sbb
nop
and
adc
or
call
xchg
stc
call
push
and
das
movsl
add
push
and
ret
or
push
loop
arpl
push
jecxz
jecxz
jno
mov
adc
adc
xor
add
jg
inc
cli
or
and
ds
or
test
lock
ja
sbb
outsb
inc
sub
add
repz
aad
push
or
add
adc
bound
inc
cmp
incl
sub
add
sbb
push
inc
sbb
sarb
cmp
or
jmp
xchg
cs
and
clc
iret
adc
icebp
sbb
xchg
idivl
test
fs
or
adc
cli
or
icebp
sub
mov
clc
jne
imul
loope
inc
js
test
fists
mov
jp
xchg
lds
clc
lods
sub
jne
push
cmpsl
imul
aam
aaa
les
leave
lock
dec
xlat
jne
ss
jle
or
js
rcrb
push
rcll
je
sbb
in
add
ret
xchg
lds
popf
jecxz
jmp
add
adc
pop
jne
mov
xchg
xchg
mov
pop
aad
mov
or
hlt
push
fisubl
std
js
and
shll
mov
pop
lods
jmp
cmpsl
je
rorl
push
adc
ss
cmpb
cmp
vmread
and
test
add
sub
cmpb
xchg
notl
adc
mov
movb
lea
inc
add
push
push
mov
clc
mov
sub
inc
sub
lahf
aas
adc
push
push
xor
xor
dec
vpsrld
andl
jecxz
jmp
loop
or
ret
mov
movb
or
ret
dec
xchg
movsl
dec
ss
inc
data16
sbb
mov
mull
dec
daa
mov
sbbb
outsb
out
push
xor
cs
shlb
outsb
sbb
push
inc
adc
mov
mov
lea
sbb
and
xor
sbb
mov
xchg
dec
sbb
lods
cmc
push
repnz
das
sbb
lea
imul
popf
mov
and
add
nop
test
mov
clc
shlb
mov
and
addr16
and
push
mov
add
repnz
in
test
and
jmp
jmp
decb
mov
arpl
push
sbb
push
scas
repz
jmp
in
sbb
and
xor
cmpb
hlt
jge
mov
data16
and
mov
les
jmp
dec
cmpb
cs
inc
adc
fdivs
or
mov
mov
fmuls
ret
or
into
rolb
mov
push
jns
movsb
sbb
xchg
in
sub
nop
or
cmpsl
les
inc
xchg
fwait
push
xor
outsl
data16
ja
jb
cld
lock
adcl
lahf
in
jae
or
testb
fsubl
outsb
mov
cmpl
adc
and
aaa
inc
or
mov
sub
icebp
mov
in
dec
out
neg
jmp
or
pop
movsl
ret
in
ror
mov
push
dec
iret
xchg
pop
int3
inc
or
fdivrp
psubsb
cli
test
inc
xor
add
inc
and
inc
test
pop
mov
add
mov
cmp
cmp
test
sub
dec
out
sub
adcb
aas
dec
or
arpl
adc
adc
cmp
xorl
mov
test
js
cli
jbe
ror
dec
enter
and
mov
outsl
or
repnz
or
xchg
xor
xor
push
mov
in
inc
or
push
loop
push
push
dec
test
lock
in
xchg
lea
lcall
subb
adc
mov
test
inc
xrelease
mov
data16
jmp
sub
add
and
icebp
jecxz
adc
push
out
loopne
mov
and
or
mov
cmpsb
nop
sub
cvtpi2ps
lahf
adc
add
jno
jnp
ss
inc
jo
call
out
ss
enter
mov
mov
mov
call
scas
mov
sub
or
and
add
lahf
adc
add
cmp
jbe
xchg
jp
jmp
call
xchg
jns
adc
test
jne
std
pop
inc
push
xor
aam
mov
mov
dec
or
dec
pop
push
jle
call
mov
call
adc
out
aad
or
jne
mov
adc
push
mov
cmp
pop
cmpsb
sbb
adc
adc
sub
mov
add
fs
xchg
outsb
dec
je
add
mov
sub
push
fcmovne
mov
cld
cmp
xchg
fs
dec
mov
pusha
pop
inc
add
cmp
call
aas
inc
test
pop
idivb
dec
xor
orb
adc
jmp
add
or
cmpsb
dec
push
inc
insb
mov
into
ljmp
mov
icebp
sbb
xor
pushf
cmp
nop
and
xorb
js
je
inc
jo
insb
xchg
push
jb
cmp
sbb
mov
sbb
mov
push
adc
pop
inc
loop
xor
pusha
inc
sbb
mov
lods
lock
add
icebp
jb
cmp
sbb
mov
and
xchg
test
cli
cmp
sbb
mov
and
mov
loope
loop
jecxz
in
in
out
inc
out
call
in
jb
cmp
sbb
mov
and
xchg
ror
shl
shll
cmp
sbb
mov
and
xchg
fxch
cmp
sbb
mov
and
xchg
ror
in
jb
cmp
sbb
mov
and
xchg
leave
enter
jb
cmp
sbb
mov
and
in
jb
cmp
mov
mov
in
jb
cmp
mov
jno
sbb
dec
nop
out
je
jo
mov
stc
or
subb
mov
sbb
add
or
arpl
je
imul
addb
mov
mov
or
imul
push
jo
or
and
adc
jne
cwtl
dec
or
jb
inc
pop
nop
pop
pop
enter
outsl
push
and
mov
mov
call
or
lock
insb
fdivrs
dec
pop
mov
inc
dec
mov
lds
fimuls
adc
inc
mov
jae
les
orb
inc
imul
add
jp
adc
out
push
rclb
outsb
addr16
pop
and
test
add
xor
add
dec
out
cmpsl
fs
or
lods
xchg
adc
pop
mov
mov
jbe
sbb
fs
jo
mov
pop
and
lods
shlb
or
sbb
push
inc
insb
fs
pop
enter
or
nop
mov
lods
mov
movaps
outsl
ror
xchg
test
dec
pop
pop
nop
and
or
pop
xchg
or
mov
jae
xlat
jo
pop
testb
or
mov
push
rcrb
sub
inc
arpl
push
mov
insb
popa
and
inc
mov
inc
lahf
sub
leave
jb
jns
gs
mov
rorb
push
je
arpl
push
nop
in
pop
fs
leave
or
jo
and
out
and
push
out
cmpsl
enter
nop
or
cwtl
mov
push
enter
and
ret
and
fs
enter
mov
sbb
test
jb
jae
mov
pop
inc
push
push
pop
dec
test
mov
nop
mov
adc
add
gs
cmp
rolb
pop
add
push
dec
cwtl
or
push
sbb
push
inc
insb
inc
pushf
in
dec
and
popl
add
aad
loopne
jmp
mov
mov
call
push
fnstsw
or
jne
or
fsubr
pop
movl
or
push
push
rdtsc
shl
icebp
repnz
cmp
adc
xor
pop
sbb
sub
or
adc
shll
jmp
mov
dec
jne
cli
insl
cltd
xor
mov
pushl
pusha
xor
and
jecxz
xor
pop
or
andb
inc
ljmp
cmpb
push
sub
add
cmp
adcw
cli
sub
adc
adc
movb
push
sbb
pop
fadd
fisubs
xchg
adc
add
sub
add
outsb
cmp
clc
popa
stc
mov
mov
push
shrb
rcrl
jae
mov
add
pop
add
ret
dec
ret
vmulps
lret
inc
iret
bswap
or
add
call
jp
std
ret
jp
fwait
cmp
mov
subb
or
call
outsl
es
adc
mov
lahf
loope
sbb
adc
call
testb
pop
add
dec
sbb
jg
jl
ficoms
sarl
mov
push
or
push
add
xlat
in
ret
js
adc
call
jne
xor
lea
lock
or
and
dec
cld
adcl
mov
loopne
insl
clc
popf
jmp
call
imul
cli
fstpl
or
out
dec
adc
add
sub
addb
ret
nop
jg
mov
xchg
dec
imul
dec
loopne
enter
inc
dec
mov
xchg
daa
call
mov
and
pop
push
ret
jp
pop
pop
jne
inc
sub
out
testl
add
imul
dec
add
xor
push
insl
lret
xor
or
das
lcall
cmpsb
cld
and
cs
sbb
add
cmc
push
mulb
ss
or
nop
lods
add
and
shlb
inc
fsubr
adc
mov
testb
cmp
jae
sub
loope
in
push
jnp
jo
into
add
push
call
push
fstps
clc
pop
sti
pop
jbe
mov
rorl
mov
sbb
les
das
les
movb
std
mov
or
adc
add
hlt
jmp
pusha
pushf
sub
ret
fmuls
dec
cmp
or
sbb
call
xor
fsubs
or
lret
rcrb
fistps
cmc
mov
xchg
aas
and
in
stos
add
dec
cmpsb
add
mov
xchg
hlt
push
inc
lock
or
shlb
test
mov
ror
mov
cmp
inc
xchg
jmp
das
repnz
inc
lea
mov
call
sub
fsubrl
repz
xor
and
lods
jmp
loope
loopne
inc
aad
cmp
sub
fs
fmul
jne
ds
push
mov
sbb
test
nop
add
xor
cmpb
xchg
or
dec
push
add
inc
pushf
or
and
stos
xchg
push
ret
jge
xor
push
aam
cwtl
sbb
pop
pop
arpl
adc
xor
cmp
jle
mov
movzbl
add
xchg
incl
xchg
pmulhuw
mull
pop
fidivrs
mov
cmpb
push
sbb
je
mov
fisttps
cmp
push
loopne
pop
add
lea
mov
cs
push
inc
add
xor
jns
icebp
jl
pop
das
mov
pop
sbb
cltd
and
ret
cltd
sbb
xchg
adc
mov
ret
dec
fsubrs
sarl
cld
scas
int3
dec
pop
jne
shlb
cmp
jbe
xchg
pusha
popa
lret
andb
xchg
xor
inc
sbb
or
xchg
les
cmpsl
mov
jo
adc
lea
jmp
stc
push
clc
test
adc
xchg
bound
cmpw
jbe
mov
and
stos
xchg
popl
leave
dec
and
popa
push
lods
and
enter
mov
add
add
movsb
and
es
insl
mov
loope
pop
mov
or
adc
dec
and
ja
cmp
or
inc
jmp
arpl
sub
jecxz
addr16
loopne
sub
pop
enter
leave
sub
xlat
sub
ret
adc
pop
mov
jmp
dec
sbb
inc
fndisi(8087
inc
je
push
ja
jle
inc
add
adc
add
dec
pusha
mov
add
adc
jns
add
ret
mov
jne
bswap
adc
cwtl
and
cmp
pusha
mov
inc
rcpps
jno
xchg
mov
inc
iret
xchg
movsl
adc
lahf
xor
cli
xchg
ret
mov
lods
fcmovne
mov
je
sbb
fisttpl
int
je
icebp
xchg
lea
test
and
and
or
or
dec
into
lock
xlat
push
call
add
test
mov
or
xchg
xchg
mov
jl
sub
jle
sarl
rolb
sub
mov
add
cmovne
insb
dec
cld
lea
jmp
and
in
mov
add
ret
jmp
add
xchg
mov
cmpsl
rorb
cmp
imul
cmp
clc
std
dec
xchg
aad
pop
jmp
lea
xchg
test
dec
sbb
mov
imulb
push
test
shrb
mov
sub
or
add
push
xor
inc
repz
pushf
cmp
mov
inc
dec
js
je
add
jg
dec
mov
stos
cmp
clc
pop
pop
mov
fiadds
xchg
mov
mov
loope
push
or
mov
mov
loope
push
or
and
adc
ljmp
inc
jge
dec
out
inc
jle
sub
mull
dec
jge
adc
jb
ljmp
dec
clc
jge
cld
movzwl
sub
add
jae
pop
or
jo
lea
mov
movsb
pop
nop
in
mov
or
sub
das
pop
adc
add
or
or
mov
jle
popa
mov
sbb
nop
or
cmp
sbb
call
push
gs
cld
add
jmp
sbb
sbb
push
sbb
mov
jb
je
and
or
pop
add
jge
xorl
stos
or
mov
dec
aam
xor
jg
cmp
jl
and
sbb
dec
stos
cmpb
dec
cmp
fstps
jmp
sbb
int3
inc
lea
sub
clc
or
adc
mov
clc
sub
add
xchg
mov
movsl
dec
xchg
dec
out
sbb
xchg
fcomps
imul
mov
mov
in
mov
call
pop
iret
dec
mov
ds
adc
jb
mov
pop
xchg
bound
pop
add
enter
testb
mov
inc
call
je
dec
sub
mov
ret
inc
in
divb
sub
call
xchg
add
repnz
inc
jne
call
dec
test
xor
aas
sbb
adc
add
cmp
cwtl
cmp
pushf
fwait
sbb
mov
cmp
je
push
push
fldenv
in
mov
or
imul
shrb
or
xchg
cmpsb
add
add
sub
add
or
cltd
sub
sub
sub
add
dec
sub
sti
jg
mov
adc
adc
xor
popf
sub
pop
mov
dec
aam
loopne
mov
and
subb
jmp
mov
push
shlb
ret
mov
add
testw
dec
adc
sbb
add
sbb
movb
int
pop
fldt
sub
rclb
or
sar
inc
push
mov
hlt
movsl
and
loope
lods
adc
dec
pop
or
cmpsl
xchg
ret
fucom
mulb
inc
or
mov
lcall
lea
xor
inc
es
dec
add
call
sbb
add
sahf
or
xor
stos
mov
jae
pop
or
call
cmp
dec
or
jae
cmpb
xor
inc
push
add
or
add
ja
jmp
data16
mov
mov
mov
sbb
xor
cld
push
or
ljmp
ret
mov
fisubl
inc
add
inc
daa
popa
cwtl
xchg
dec
add
mov
mov
das
adc
pop
push
dec
mov
or
jmp
mov
pop
mov
sub
fidivl
repnz
push
add
and
xor
fildll
or
mov
or
fidivl
adc
fwait
arpl
rcrl
and
jne,pn
iret
push
and
lds
dec
rcll
cwtl
mov
sbb
ucomiss
add
enter
call
push
idivl
cmp
fmull
lret
sub
lret
mov
mov
or
push
jecxz
adc
movsl
and
adc
xchg
adc
aad
jmp
pop
adc
push
jb
xchg
pop
repnz
add
call
push
pop
pop
jmp
mov
leave
pop
mov
push
jecxz
pop
jmp
daa
adc
rorl
leave
cmpsl
imul
mov
and
xchg
loopne
or
push
add
bound
enter
mov
rorb
pop
push
push
lods
ud1
xchg
xchg
xor
inc
inc
dec
jae
cs
pop
adc
rcrl
lock
cmp
or
inc
and
int
addb
or
andb
add
idiv
cmp
in
subl
sub
or
in
jecxz
or
xchg
sbb
out
clc
shl
or
jp
pop
jle
out
dec
ja
icebp
int3
mov
mov
sti
sbb
sbb
mulb
jle
je
ret
popf
inc
stos
stos
pop
add
or
or
dec
sbb
pop
or
int3
jns
loope
jge
and
arpl
jns
or
call
rcl
mov
xor
and
sub
push
mov
xor
cld
cld
in
nop
mov
out
lock
xchg
js
ja
test
add
or
repnz
mov
cs
inc
cmp
popf
subb
push
mov
popa
push
push
fcoms
cltd
mov
xchg
xchg
mov
push
hlt
push
push
inc
sbb
les
scas
inc
stos
enter
xor
inc
cmpsl
test
dec
fnsave
mov
and
and
xor
inc
shrl
xlat
sub
int3
inc
test
and
test
or
mov
sbb
rdtsc
addb
push
scas
sbb
add
or
repz
jb
mov
dec
xadd
push
ljmp
hlt
sbb
and
push
lcall
inc
rorl
into
outsl
loop
adc
into
adc
mov
mov
xor
pop
cmpsb
scas
mov
hlt
cltd
cmp
mov
movlps
jae
sub
shlb
nop
mov
sti
dec
fsubrs
xchg
lahf
add
jmp
shlb
mov
mov
dec
xor
dec
sub
jle
loopne
and
mov
jae
add
add
push
aam
dec
repnz
sbb
add
inc
sbb
xor
test
add
jne
aaa
inc
adc
std
shlb
add
lahf
and
mov
test
jle
mov
aas
adc
test
cmp
leave
hlt
mov
or
sbb
add
gs
push
sub
push
cld
shlb
sub
sub
mov
jecxz
std
in
add
lea
push
push
shlb
push
jne
fdivl
jne
add
push
push
and
mov
adc
stc
add
xor
mov
call
rolb
and
adc
and
and
out
pop
mov
add
cli
cmp
pop
lret
loop
daa
and
or
aaa
rclb
fsubrl
js
push
cs
imul
mov
xchg
jge
xchg
mov
or
xchg
rcr
les
or
addr16
sbb
es
mov
push
pop
sbb
mov
hlt
popf
shrb
mov
push
lea
outsl
push
push
xchg
pop
into
repnz
ljmpw
mov
or
movsl
add
call
movsb
mov
push
pop
mov
mov
or
push
dec
int
pop
fsubp
sub
mov
hlt
push
mov
roll
jns
lret
cwtl
xchg
jg
fs
cmp
andl
pop
aam
loopne
inc
push
and
shrb
lods
push
sub
hlt
sti
or
call
icebp
stos
push
out
or
and
mov
shr
in
inc
mov
fs
dec
lock
sub
jb
inc
je
test
push
pop
adc
test
mov
or
push
mov
jge
outsl
cld
fs
int
cmp
imul
jle
mov
hlt
mov
inc
jnp
dec
pop
lea
add
movsl
fcoms
pop
ss
fidivrl
stos
js
fisubrs
lock
mov
int3
mov
mov
mov
into
inc
pop
sbb
cli
ret
pop
daa
sbb
shll
out
hlt
push
mov
or
inc
push
arpl
xchg
out
movsl
and
fucomi
lds
add
sti
push
jg
cmp
xor
movsb
rorl
icebp
inc
push
adc
mov
or
adc
or
sbb
pop
pop
adc
std
add
sub
ljmp
pop
xor
mov
aad
cmpl
or
dec
add
jmp
pusha
sti
mov
loope
nop
adc
add
add
les
jns
call
shr
pop
pop
cmp
or
nop
ret
push
ja
mov
loopne
xchg
loope
jecxz
push
cld
repnz
and
dec
or
xor
call
or
cwtl
adc
mov
lods
mov
pop
or
jne
push
lock
clc
and
in
dec
ret
mov
dec
sti
push
cli
dec
push
adc
xchg
fsubs
rol
imul
call
js
shrb
les
push
mov
std
data16
jmp
call
sub
roll
jle
sbb
nop
push
outsb
inc
inc
aad
push
ss
into
in
sub
inc
push
and
jmp
or
xor
aaa
and
xor
jmp
das
and
mov
ret
fwait
add
push
add
or
or
or
or
pop
nop
mov
jle
test
les
aaa
test
xor
sbb
nop
cltd
aas
outsb
test
call
jg
xchg
xchg
adc
test
mov
push
loop
jae
mov
pop
or
adc
cmpl
push
mov
sub
cmpsb
in
inc
xchg
push
cmovb
mov
lea
fsts
cmp
clc
lret
push
xchg
mov
call
mov
les
sahf
xchg
enter
ds
mov
or
fs
jecxz
and
mov
lea
push
lret
dec
cld
popa
cli
and
xchg
xchg
xchg
inc
pop
pushf
xchg
and
add
nop
inc
mov
not
or
sub
inc
inc
outsb
dec
mov
dec
into
push
sbb
mov
sbb
loop
fsubs
inc
rcl
dec
cmpsb
lahf
int
stos
mov
or
adc
std
sub
sarb
add
sbb
or
inc
sbb
or
and
out
cmp
data16
pop
imul
fs
lock
lock
and
ds
hlt
inc
dec
rorb
cwtl
rcll
mov
cmpl
sub
adc
repz
adc
movb
xchg
stos
cltd
or
mov
rorl
out
lds
jo
aaa
je
dec
xlat
inc
nop
pop
fnstcw
les
adc
fmuls
xor
pop
adcb
cmp
test
push
outsb
cmpl
ljmp
jne
xchg
cmp
sbb
or
push
or
nop
flds
sbb
call
test
inc
or
or
xchg
cmp
and
or
movl
sub
fists
push
mov
inc
jns
mov
cmp
mov
sbb
jne
mov
mov
or
adc
mov
out
adc
popa
subb
cmp
mov
data16
pop
pusha
mov
das
mov
dec
dec
jnp
mov
jnp
add
or
adcl
jb
mov
sub
enter
cmpb
or
incb
das
add
add
adc
nop
add
in
in
pop
das
clc
cmpsl
and
xchg
enter
dec
or
sbb
xor
push
or
push
es
enter
ret
enter
rcrb
dec
jp
push
sub
sub
and
loop
lea
adc
dec
lock
mov
sbb
loopne
adc
cmp
sub
jne
mov
push
mov
gs
adc
cmp
das
clc
js
lahf
rolb
lahf
sub
adc
je
add
inc
jo
call
fcompl
out
mov
sub
enter
rclb
jl
mov
rcrl
hlt
and
lds
psrad
lock
pop
adc
jns
bound
fwait
mov
pop
jge
add
push
or
pushf
fiaddl
xor
imul
sub
pop
rolb
sub
fdivs
inc
mov
repz
lods
push
mov
lret
das
jne
push
push
popf
jb
push
or
xlat
movsb
add
enter
sub
movsb
clc
pop
ja
pop
icebp
adc
mov
inc
jo
sub
adcb
test
icebp
jae
adc
pushf
and
add
dec
sub
adc
mov
subb
mov
adc
or
call
mov
mov
iret
rep
int3
or
add
test
cwtl
xchg
adc
aaa
add
inc
test
repz
adc
inc
mov
call
setne
mov
or
cmp
enter
cmp
lea
inc
inc
push
cmp
lea
test
mov
orb
push
mov
add
cmpw
cwtl
xchg
rorl
repz
lock
cs
lock
movsl
push
xchg
xchg
xor
shl
xchg
xchg
ds
pop
stc
pushf
roll
stc
push
je
adc
jne
push
shrl
inc
ja
sbb
imul
sub
repz
sarl
repz
jmp
repnz
xor
xor
adc
mov
dec
sub
add
popa
filds
mov
lret
sbb
cmpsl
sbb
mov
mov
mov
mov
push
jg
in
inc
sbb
pop
xchg
in
repz
addb
sbb
push
aaa
faddl
and
xor
or
mov
cmp
sahf
or
adc
add
sbb
inc
ljmp
sub
sub
mov
pop
insl
inc
mov
shl
or
mov
inc
inc
push
sarb
movsb
int3
or
adc
sub
cmp
push
ret
out
test
in
bound
xchg
enter
fnstsw
adc
cld
mov
adc
jmp
mov
adc
aas
xchg
and
mov
and
xor
and
mov
mov
inc
int3
xor
faddl
cld
ss
hlt
mov
inc
xor
sbb
enter
inc
or
fucomp
push
inc
cmpsl
lods
and
cltd
mov
mov
mov
shl
in
inc
insl
das
fs
jmp
insl
add
fs
cmp
add
adc
dec
sub
outsl
lahf
arpl
add
push
cs
movsb
push
mov
mov
int
into
or
adc
pop
nop
stc
dec
cld
mov
add
adc
pop
call
inc
ret
insb
movsb
or
js
inc
mov
fbstp
std
push
icebp
pop
and
push
call
jno
and
rcrl
or
mov
dec
notl
jae
inc
jb
in
jo
popa
arpl
inc
js
loop
popa
mov
jg
shl
or
mov
adc
jmp
jp
mov
hlt
shlb
or
addr16
pusha
clc
enter
cmp
push
adc
std
adc
cmp
mov
sub
dec
and
adc
and
dec
or
adc
xchg
add
das
xchg
and
inc
call
aam
fmuls
ror
adc
mov
rcrb
and
mov
enter
adc
js
enter
add
sbb
nop
cltd
sbb
aam
or
adc
cmp
adc
cltd
cmp
adc
jl
rcrb
cmp
cmp
mov
jl
push
adc
pusha
adc
cmp
push
cmp
cltd
and
adc
adc
adc
inc
adc
aam
mov
and
xor
mov
xchg
sub
call
or
and
mov
xchg
and
clc
or
sbb
les
sbb
xchg
or
adc
les
adc
pop
or
or
loopne
clc
nop
adc
hlt
xchg
lock
jmp
cmp
dec
and
mov
stc
out
dec
mov
or
hlt
or
fsubrl
mov
sbb
xchg
and
in
nop
nop
add
adc
jle
inc
in
cs
mov
rclb
test
and
test
mov
adc
nop
xlat
test
cmpsb
dec
or
ret
nop
lods
mov
cwtl
or
xchg
nop
mov
mov
jae
test
imul
mov
and
cmp
cli
enter
push
jmp
aad
les
sbb
jl
aad
mov
into
adc
loope
fimull
arpl
call
adc
adc
cli
adc
dec
jae
cmp
jecxz
gs
cwtl
adc
js
add
jge
cwtl
cmp
and
ds
in
les
hlt
mov
mov
push
cmpsl
or
test
push
pop
adc
add
repz
adc
mov
in
insl
lds
xchg
dec
enter
adc
push
adc
mov
push
push
je
push
fldcw
das
cli
jp
pop
adc
mov
xor
stos
fcoml
sarl
shrb
push
push
sub
mov
sub
sbb
adc
pop
cmp
pop
xchg
adcl
add
inc
mov
adc
mov
pushf
dec
mov
rol
jle
cli
mov
adc
cmp
testb
mov
mov
inc
mov
in
inc
or
inc
or
mov
fs
adc
sbb
inc
dec
add
jl
dec
jnp
jbe
adc
or
popf
cwtl
jmp
adc
mov
inc
lds
mov
sub
push
or
fmuls
jp
push
mov
sub
dec
mov
push
jge
ror
inc
adc
pop
sbb
jecxz
mov
cmp
jmp
adc
mov
mov
dec
sarl
inc
xor
mov
lods
faddl
loopne
mov
sarl
pop
or
mov
aam
jge
jp
inc
jg
jns
test
and
xchg
int3
or
xorb
ds
ret
lahf
movsb
dec
aaa
mov
and
ljmp
adc
iret
les
movntq
out
movsb
adc
cmpb
xchg
mov
mov
mov
cmp
sahf
or
jl
push
pushf
fldcw
js
addl
scas
jle
sub
lods
mov
cmp
adc
sub
jae
jo
in
in
jns
push
sbb
and
in
out
subb
je
xor
push
sbb
inc
push
xchg
xor
imul
dec
jl
xor
and
outsl
ja
push
dec
cmp
mov
test
or
imul
xor
and
sub
lods
sbb
gs
push
cmp
xor
pop
xor
or
je
test
xor
cmp
ss
shlb
add
stc
addb
cmpsb
add
lea
inc
xor
mov
loope
and
add
and
xor
sub
pop
int3
enter
inc
int
fcmovnu
add
fxch
loopne
loope
sbb
in
inc
jb
outsl
out
add
imul
mov
add
aam
jbe
divb
add
xor
add
inc
inc
inc
inc
mov
adc
les
orb
inc
add
pop
add
jbe
imul
fidivrs
mov
cltd
sbb
or
and
inc
fsub
mov
adc
and
inc
add
or
adc
sbb
and
mov
cmp
inc
dec
dec
xchg
push
and
insb
mov
and
dec
mov
movsb
lods
mov
int3
xchg
aam
faddl
scas
enter
and
add
jb
cmp
dec
lods
clc
sub
or
test
pop
dec
bound
adc
dec
mov
loop
push
xor
sbb
mov
cmp
cld
inc
cwtl
jle
cwtl
and
mov
rol
pop
and
dec
jl
mov
inc
int3
dec
test
inc
mov
or
xchg
test
movsb
pop
mov
xor
je
sub
insb
sub
les
adc
adc
mov
enter
adc
mov
add
pop
mov
movsb
jl
add
dec
mov
xchg
repnz
hlt
fs
xor
clc
insb
fwait
dec
xchg
add
call
and
in
leave
xor
in
insb
adc
fstps
inc
dec
clc
gs
adc
mov
sub
fwait
and
sbb
iret
adc
adc
les
nop
or
hlt
pusha
or
push
add
add
or
mov
mov
sbb
mov
test
mov
xor
js
inc
ds
xchg
dec
xchg
loop
pop
loop
mov
mov
int3
xor
or
inc
mov
mov
push
and
dec
insb
xchg
jp
mov
mov
adc
and
dec
lock
add
xor
sub
dec
push
xchg
bound
jo
orb
les
xchg
loop
add
lret
mov
push
or
or
inc
adc
or
xchg
or
into
cmpsb
adc
lock
mov
adc
dec
fs
jbe
mov
mov
adc
and
dec
decb
or
and
inc
dec
pop
mov
add
orb
dec
movsb
nop
mov
add
cmp
inc
xor
or
jle
pusha
add
jo
loopne
jo
into
or
sub
cmp
scas
inc
out
inc
iret
push
iret
push
iret
iret
push
jb
jp
or
iret
xchg
iret
lcall
iret
mov
iret
ror
fcmove
loop
ljmp
xor
xchg
adc
sub
xor
cmp
inc
rep
repz
jle
xchg
mov
xchg
repz
repz
repz
repz
fdiv
inc
xor
push
xor
xor
dec
fwait
mov
xchg
test
rolb
in
push
aaa
and
aas
dec
dec
mov
pop
packuswb
jnp
xchg
iret
xchg
iret
movsl
iret
mov
iret
iret
fmul
in
test
cmp
xchg
sbb
ret
roll
dec
repz
push
je
jle
mov
xchg
repz
repz
mov
mov
repz
call
mov
cmp
daa
cmp
outsl
cmp
dec
scas
mov
dec
loopne
jmp
hlt
iret
sti
ret
or
mov
aaa
in
mov
mov
adc
sbb
xor
push
in
arpl
imul
clc
enter
and
and
push
loopne
inc
cs
mov
dec
xor
xor
popa
xchg
sub
mov
jle
jle
jle
jle
jle
jle
adc
sbb
cmp
and
or
out
out
out
pop
xor
daa
cs
xor
cmp
mov
out
out
out
loope
xor
cmp
inc
jmp
addr16
jno
sbb
inc
je
jbe
js
jp
jl
jle
jle
sbb
xor
jns
mov
lahf
lahf
lods
pop
int3
xchg
cmp
jb
je
jbe
js
jp
jl
pop
cmp
inc
andl
std
loopne
cmp
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
sbb
aas
inc
popf
dec
sbb
mov
loop
xor
stc
push
loopne
fdivs
addl
inc
fisubl
lods
push
xchg
xor
leave
shll
data16
jmp
jl
cmp
stc
xchg
stc
lock
clc
clc
and
jb
je
jbe
js
jp
jl
jle
jle
jle
push
mov
or
xor
add
scas
movsb
mov
imul
lock
out
out
inc
lcall
ds
stc
call
and
push
add
or
sahf
jae
xchg
xchg
lcall
ss
inc
iret
addr16
xchg
cmpsl
ljmp
shll
fldcw
inc
mov
xor
cmp
inc
out
out
in
xchg
cmp
repz
scas
repz
repz
fdivp
out
out
repz
sbb
xor
popf
pop
sbb
mov
mov
aas
sarb
fsubl
pop
xchg
aaa
addr16
xchg
pop
out
out
out
out
out
out
out
in
dec
mov
iret
into
iret
iret
fmulp
out
out
iret
test
ret
push
ss
xchg
push
mov
sarl
jecxz
repz
repz
repz
jl
test
mov
xchg
hlt
andl
mov
repz
fdiv
in
in
repz
repz
lock
or
adc
sbb
and
sub
xor
cmp
inc
cld
dec
cld
push
cld
pop
cld
fs
insb
cld
je
jl
test
mov
xchg
cld
pushf
cld
movsb
cld
lods
cld
mov
mov
cld
aam
fdivr
in
in
cld
hlt
cld
cld
cld
add
cmp
adc
sbb
and
sub
xor
cmp
inc
aas
dec
aas
push
es
or
insb
lahf
je
jl
test
pushf
lahf
movsb
lahf
lods
lahf
mov
mov
xchg
aam
dec
repz
cmp
xchg
and
dec
inc
cmovl
push
iret
pop
iret
pop
iret
pusha
iret
fs
push
iret
mov
lods
iret
mov
mov
lret
les
push
int3
out
out
out
loope
cmp
leave
adc
sbb
sbb
and
and
sub
sub
xor
inc
stc
fs
insb
stc
jo
je
js
jl
cmp
stc
mov
mov
pushf
stc
mov
stc
int3
stc
sar
aam
fdivr
fdivr
loopne
in
hlt
mov
dec
and
sub
xor
cmp
push
iret
je
jl
or
iret
mov
mov
nop
iret
xchg
iret
cwtl
iret
pushf
iret
lods
iret
int3
iret
aam
fmul
fmul
loopne
in
call
iret
hlt
ret
add
and
sub
ja
xor
icebp
pop
add
inc
stc
dec
stc
dec
stc
pop
faddl
nop
cld
xchg
cld
cwtl
cld
pushf
cld
mov
cld
fdivs
call
lock
clc
aas
cld
jo
cmp
cmp
inc
hlt
inc
clc
dec
cld
dec
cld
push
cld
push
cld
pop
cld
push
mov
pushf
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
loopne
jb
je
jbe
js
jp
jl
pop
dec
push
aas
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
jo
nop
aas
cwtl
aas
pushf
aas
mov
aas
lods
cs
lahf
mov
lahf
hlt
lahf
clc
lahf
cld
mov
or
adc
sub
dec
lahf
push
lahf
push
lahf
pop
lahf
pop
lahf
pusha
lahf
fs
push
lahf
test
mov
mov
mov
push
xchg
vmread
iret
in
adc
sbb
and
inc
adc
sahf
push
sbb
and
and
sub
iret
fs
push
iret
je
js
jl
or
iret
cwtl
lret
mov
enter
shl
aam
xchg
fdiv
loopne
xchg
adc
jb
je
jbe
js
jp
jl
stc
xor
cmp
dec
stc
insb
stc
je
js
jl
cmp
stc
mov
mov
nop
stc
xchg
stc
lods
stc
int3
stc
aam
mov
mov
loopne
in
call
aas
hlt
push
or
sub
movsl
adc
rol
inc
jecxz
repz
repz
repz
repz
mov
nop
repz
repz
repz
repz
jmp
stc
fyl2xp1
call
cmpsb
insb
mov
xor
ss
ret
jb
dec
cmp
js
jp
jl
jle
dec
push
or
pop
inc
mulb
gs
imul
jne
cmp
or
sbb
cmp
popf
leave
sbb
loope
inc
cmp
fiaddl
fnstsw
sub
in
rorb
or
rcrl
push
cmpsb
push
xor
in
jmp
sub
icebp
or
sbb
pop
cmp
mov
push
add
dec
dec
mov
xchg
popf
daa
sbb
push
movsb
adc
mov
ud0
aaa
mov
lret
scas
lret
orl
dec
in
push
lock
hlt
jne
in
mov
jle
sbb
cmp
sahf
sbbl
lahf
fldl
jle
mov
lret
popa
xchg
cmp
add
jb
je
dec
rsqrtps
dec
loop
inc
cs
xor
js
jp
pop
pop
out
and
clc
lahf
jno
ja
jle
cld
mov
iret
xchg
iret
lcall
iret
mov
iret
aad
fldl
repnz
testl
add
jb
je
dec
sbb
cmp
pop
cld
xchg
jne
repnz
mov
roll
xchg
and
xor
je
jbe
js
jp
dec
adc
cmp
cmp
cmp
cmp
mov
mov
sahf
out
out
out
out
loope
xor
leave
inc
sub
and
hlt
out
in
mov
push
bound
jne
add
rep
repz
repz
push
or
call
jle
mov
cld
loop
ljmp
xor
repnz
adc
and
xor
loope
sub
pop
test
mov
cwtl
movsl
mov
mov
xchg
pop
rclb
cwtl
fsubs
call
repz
repz
repz
testl
movsl
ret
stos
adc
adc
sbb
sbb
and
mov
stc
sub
mov
cwtl
inc
cld
cmp
inc
mov
cmc
cmpl
repnz
dec
nop
prefetcht2
into
lret
lret
jle
pop
in
aas
lock
hlt
aas
cld
dec
aas
push
fimull
lods
aam
shlb
in
rcl
dec
repz
repz
repz
repz
repz
mov
sub
pop
nop
xchg
cwtl
dec
fisubs
mov
out
xor
in
cld
lock
clc
cld
cld
cld
add
cmp
cmp
pop
out
xchg
push
in
xor
inc
repz
repz
repz
repnz
es
xchg
repz
repz
mov
mov
repnz
imul
clc
pop
cmp
adc
es
ljmp
fs
outsb
stc
js
xorb
jle
jle
jle
jle
jle
pop
icebp
rorb
add
or
mov
pop
dec
jle
mov
fxch
jmp
jbe
daa
lahf
inc
stos
sarl
rcl
loop
out
jl
sbb
sbb
and
iret
xor
xor
cmp
cmp
or
mov
cwtl
stc
mov
ret
jle
jle
jle
jle
loopne
xorb
push
ljmp
je
out
addr16
insl
iret
mov
xchg
out
sahf
iret
movsb
lret
ret
cmpsl
fs
xor
push
pop
inc
lods
xor
in
jmp
jo
xor
mov
inc
pop
dec
xchg
push
aas
push
aas
pop
aas
pop
aas
pusha
aas
fs
xchg
aas
cwtl
aas
pushf
mov
nop
psubsb
ret
add
or
adc
sbb
and
sub
push
pop
inc
dec
nop
push
lret
pop
cmpsl
xchg
insb
out
out
in
fists
mov
sahf
enter
rcl
jl
fmuls
or
cmpsl
stos
in
out
out
out
out
out
pop
xor
or
adc
sbb
repz
sub
push
inc
repz
repnz
shrb
or
mov
stc
push
lret
js
push
cmp
stc
mov
cld
xchg
cld
cwtl
cld
pushf
cld
mov
cld
lods
cld
mov
cmpb
mov
jle
jle
dec
rorb
mov
loopne
in
call
hlt
push
loopne
loope
add
add
aam
hlt
adc
out
fadds
add
add
daa
push
pop
add
inc
add
or
push
jo
cwtl
pop
fcoms
enter
loopne
or
push
lcall
sub
and
and
das
and
jecxz
enter
mov
mov
add
or
xor
xchg
adc
and
inc
clc
decl
pusha
js
lods
cmp
out
and
inc
xor
adc
scas
pop
xor
jo
pop
sbb
cmp
xchg
mov
rorb
add
rcrb
fchs
bswap
lock
add
and
xor
dec
hlt
add
mov
dec
and
inc
arpl
jo
movsl
jo
mov
pop
loopne
jo
test
movsb
jo
push
xchg
add
adc
sub
sbb
sub
sub
inc
fadd
sub
add
les
jl
add
cmp
inc
xor
loope
and
inc
rorb
mov
inc
loopne
lret
adc
xor
and
in
jl
pushf
ss
adc
xor
pop
sbb
sbb
sbb
and
and
fnstenv
push
enter
xor
nop
cltd
push
sbb
or
dec
pop
dec
inc
push
sub
dec
dec
or
dec
pop
nop
cltd
sub
or
pusha
dec
mov
push
sub
add
or
and
push
push
jo
outsl
addr16
popa
insl
loope
shrl
shll
gs
jne
out
push
pop
inc
dec
push
subb
gs
inc
add
rcr
fldl
add
mov
mov
ds
mov
icebp
hlt
inc
adc
and
mov
sub
mul
andb
imul
and
cs
add
mov
mov
scas
and
mov
andl
cltd
sub
push
adc
add
cmp
add
sbb
sub
or
pop
pusha
rol
mov
or
add
xor
sti
mov
adc
cltd
xor
cmp
add
push
pop
je,pn
js
mov
xchg
call
mov
jb
popa
jb
lds
pop
adc
add
pop
jae
pop
cs
cmp
movsb
dec
or
aaa
sbb
sub
arpl
test
xchg
push
add
insb
outsl
adc
adc
and
inc
lods
add
pop
orb
jo
push
adc
mov
les
test
setne
ret
nop
cmpsb
add
sbb
add
es
sbb
bound
push
push
or
mov
inc
mov
cmc
lea
dec
add
add
adc
test
aas
je
xor
pop
popf
inc
adc
add
int
iret
jp
add
xor
jmp
sbb
in
push
xor
fadd
pop
sbb
pop
sbb
and
mov
shlb
lea
push
rep
movsb
mov
xor
mov
call
adc
mov
mov
out
adc
test
fisttpl
lea
mov
push
sbb
test
adc
pop
add
sbb
jp
push
jge
fsub
je
sarb
ret
lahf
test
je
addb
mov
mov
fwait
inc
mov
adcl
cli
jne
mov
push
mov
dec
inc
lret
mov
xlat
sbb
cmp
push
sub
adc
sbb
push
rorl
mov
adc
push
xchg
cmc
inc
addr16
mov
lret
and
je
loop
mov
out
mov
sbb
push
pushf
andb
lea
cmp
push
push
mov
fwait
adc
cltd
clc
xor
pop
pop
ret
mov
push
push
enter
jnp
or
jns
cmpsb
pop
and
push
call
cmc
loope
mov
add
icebp
fdivl
mov
cmp
xchg
add
add
push
mov
or
mov
push
mov
and
add
mov
xchg
push
lcall
fstps
pop
mov
jl
das
lea
xchg
in
sbb
mov
inc
xchg
and
push
lea
jns
adc
stos
test
mov
incl
dec
mov
sub
push
filds
and
call
call
jmp
inc
lea
dec
sbb
cmp
mov
adc
dec
and
repnz
nop
mov
hlt
add
test
ja
clc
pop
je
or
and
sbb
leave
sub
or
and
jmp
mov
xor
leave
xor
push
inc
std
sub
lock
push
or
leave
mov
mov
adc
or
push
sub
mov
xchg
push
je
mov
dec
jne
jmp
add
add
dec
into
xchg
xchg
pop
jbe
xchg
or
sub
mov
adc
push
add
inc
pushf
mov
xor
cmp
pop
fidivl
or
cli
push
mov
dec
inc
mov
dec
daa
push
dec
add
push
call
cmp
scas
push
ror
mov
out
mov
mov
shll
jo
add
inc
loopne
push
movw
in
xchg
dec
pop
inc
push
dec
test
inc
test
inc
mov
test
out
incl
outsb
sbb
gs
nop
iret
adc
sub
or
pop
imull
test
jne
out
push
adcl
dec
in
push
and
add
movb
lret
xchg
or
push
lcall
lods
loopne
or
loopne
push
outsl
sub
mov
jg
and
mov
enter
xchg
mov
adc
ret
xor
inc
xchg
outsl
je
pinsrw
push
leave
push
adc
sub
mov
jne
sub
nop
sub
xchg
adc
cwtl
mov
test
xlat
jae
xchg
jmp
sub
pop
outsl
gs
lea
and
add
push
nop
sarl
xchg
cmp
shlb
leave
sbb
cmp
add
add
insb
cltd
xchg
dec
sbb
fildl
mov
adcl
pop
jne
or
adc
lea
xor
sub
jnp
in
fsubr
add
rep
mov
pushf
and
lret
movsb
lret
xor
mov
lea
pop
cmp
sub
and
or
andb
scas
mov
scas
cmp
pop
xchg
and
sbb
push
or
popf
nop
add
inc
mov
adcb
or
addr16
and
dec
in
inc
addb
insb
sysenter
xchg
cmpsl
sti
mov
cmp
movsl
mov
dec
push
bound
xchg
out
aam
pop
popf
lret
sbb
invd
incb
jmpw
xchg
add
push
push
dec
inc
xchg
call
cmp
pop
pop
sarb
lea
pop
pop
ret
cmpsb
cmpsb
dec
push
cmp
sub
or
fmull
xchg
push
pop
pusha
cmp
cwtl
inc
push
test
rcrl
outsb
pop
sbb
push
call
jge
pop
mov
lea
mov
jae
movl
add
add
push
push
call
push
aam
sbb
mov
jp
adc
xchg
scas
adc
push
lret
cltd
adc
cmpsl
adc
addl
mov
and
push
jg
cs
add
adc
push
adc
outsl
sahf
mov
cwtl
sub
mov
push
mov
dec
ret
push
jae
push
or
xlat
jns
mov
rorl
ss
sbb
and
dec
or
ds
shr
push
cmp
loope
pop
add
inc
shlb
push
xor
test
and
xchg
fld
daa
xor
jecxz
cltd
xchg
jmp
add
cmp
push
call
stos
xchg
adc
ret
add
or
push
inc
out
push
inc
leave
jmp
ja
or
test
jge
js
nop
cmpsl
add
mov
or
sbb
mov
push
add
pop
sbb
clc
and
and
inc
or
mov
mov
mov
cmp
push
add
mov
add
jmp
push
lcall
movsl
negb
and
and
sbb
paddq
rclb
mov
dec
data16
inc
dec
inc
mov
mov
xchg
ret
mov
dec
imul
push
xor
xchg
and
adc
add
insl
sub
push
mov
xor
icebp
inc
xor
add
in
fiadds
iret
test
adc
add
cmp
xor
jl
sub
mov
sbb
fcompl
es
push
lea
mov
les
mov
sbb
mov
push
pop
cwtl
and
ss
mov
loope
push
push
pop
inc
sub
push
pop
dec
mov
gs
xchg
push
xorl
insl
mov
jbe
xchg
cmp
inc
shrl
sub
sbb
push
xchg
fidivs
sub
sub
and
push
fs
sub
fldt
push
outsl
sub
jmp
test
dec
ds
push
xchg
jae
xchg
popa
hlt
push
push
mov
adc
nop
and
divl
lods
push
and
jne
push
push
adc
clc
shrb
push
sub
push
push
xchg
repz
push
in
sbb
push
in
push
pusha
pop
add
roll
aam
aas
mov
cmp
mov
push
mov
mov
pusha
adc
push
mulb
jle
scas
pop
sub
lcall
and
inc
or
notb
mov
or
fcomps
rorb
iret
push
dec
inc
cmpl
and
int3
add
mov
roll
mov
jge
ss
pop
dec
cmp
je
sub
sub
addb
cmp
sub
andl
push
shr
and
push
imul
mov
dec
jo
mov
test
cwtl
xchg
sub
jl
dec
add
inc
in
and
mov
loope
mov
cmp
mul
inc
aas
fistl
mov
mov
jmp
icebp
orb
and
or
pop
push
or
xchg
push
je
mov
stos
dec
cmpsl
lods
inc
and
dec
xor
adc
faddp
movb
sahf
mov
inc
xorl
jne
adc
dec
hlt
mov
cmp
jbe
mov
ret
push
push
xor
push
add
or
ret
pop
push
pop
jp
add
jo
push
inc
call
lcall
or
adc
adc
nop
or
lret
jno
or
adc
push
jne
push
jo
cld
sub
or
je
push
rclb
add
repnz
stc
and
dec
adc
outsl
jne
nop
sbb
mov
mov
imulb
jp
or
mov
in
inc
call
ljmp
jp
imul
pop
push
pop
and
and
mov
insb
and
mov
es
xchg
push
cmp
mov
jne
fadd
inc
inc
insb
ss
and
mov
mov
push
fisttpl
or
mov
mov
xchg
mov
cld
adc
inc
dec
push
int3
or
loope
push
notrack
and
sub
and
push
push
cld
sub
dec
pop
std
jnp
fstpl
cltd
push
or
mov
push
dec
or
test
and
enter
cmp
add
push
lods
cltd
xchg
xchg
pushf
sub
mov
stc
push
xchg
push
xchg
sbb
adc
sbb
lds
rclb
mov
popa
dec
adc
push
and
mov
add
test
subb
push
push
call
adc
out
sbb
add
pop
dec
std
shrl
mov
inc
rcrb
in
mov
xor
xor
pop
sub
nop
mov
mov
out
add
jnp
and
call
xchg
dec
imul
add
add
loope
cmpsb
and
xor
adc
jg
pop
enter
push
push
pop
aad
sub
xor
sbb
inc
push
push
shll
xchg
pop
ret
push
mov
inc
pop
jne
sbb
into
jmp
sub
adc
push
pushf
roll
mov
cmp
gs
enter
add
push
sub
cmp
and
and
std
jno
cmp
stc
or
dec
xorb
scas
add
cmp
imul
iret
inc
push
push
data16
daa
mov
stos
dec
sbb
xchg
adc
test
inc
jb
fcoml
inc
les
sbb
lahf
and
inc
xor
xchg
push
aas
jne
aad
and
mov
push
lret
push
add
add
push
mov
jns
dec
push
and
adc
push
push
inc
enter
or
jb
mov
mov
xor
daa
pushf
je
add
movsl
inc
add
add
cmc
cmp
dec
adc
xchg
jne
out
mov
roll
xchg
xchg
mov
add
sub
repnz
sbb
mov
dec
fs
jne
es
aaa
adcb
cli
sbb
fmuls
shll
add
pop
into
xorb
cmp
je
mov
ja
sub
sub
arpl
jl
ret
les
repz
xchg
or
push
jle
sbb
adc
add
inc
jl
aad
sbb
out
mov
sahf
xchg
inc
or
xor
xchg
or
mov
inc
mov
xchg
mov
lea
push
rorb
mov
jbe
jne
fs
and
pop
popa
dec
dec
or
cmp
and
add
cmc
std
and
test
add
dec
repnz
loopne
int
xlat
sub
push
xchg
lret
call
and
ret
mov
and
je
repz
int3
addr16
cld
mov
sbb
aas
daa
sub
or
push
adc
sbb
cmp
test
mov
or
push
or
test
cmp
ret
pusha
dec
cs
ret
cwtl
lds
push
repz
hlt
push
or
nop
xlat
mov
mov
push
sub
push
int
and
jle
fldcw
mov
or
mov
and
inc
enter
enter
xor
xor
in
roll
sub
sbb
int3
lret
inc
mov
or
xchg
notl
pop
movsb
mov
add
or
mov
inc
cmp
mov
xor
sub
and
mulb
or
xchg
test
adc
cmp
or
mov
add
test
inc
pop
lret
pop
lahf
add
pop
loop
pop
jbe
jne
popf
cli
cs
and
dec
cmp
ja
lea
and
mov
xor
pop
push
incb
jge
shlb
inc
shl
or
cmp
add
sbb
dec
xor
inc
and
jl
mov
enterw
pop
add
insl
inc
ret
rol
add
adc
jmp
sbb
mov
dec
aad
push
mov
or
inc
dec
dec
arpl
vmulsd
mov
je
test
add
add
mov
ss
sub
push
push
daa
adc
xchg
adc
mov
mov
pop
movsl
add
js
mov
sbb
and
mov
push
test
mull
sbb
pop
push
fbstp
xor
sub
aam
out
or
xchg
or
and
and
sub
push
push
loop
sub
stos
xchg
pop
adc
stos
nop
adcl
fwait
and
add
mov
and
sbb
stos
inc
sbb
jne
cld
shr
std
xor
sub
ljmp
pop
cmp
ficompl
and
andl
or
push
loope
sbb
and
mov
ds
push
rcr
outsl
adc
add
cmp
push
push
call
cmp
cmpsl
sub
in
xchg
mov
dec
test
push
call
cwtl
cltd
xor
dec
ror
sbb
or
cmp
adc
aad
xor
push
call
mov
std
subb
jns
push
cli
call
sahf
jae
loop
call
loope
std
sti
and
and
add
cmp
jb
lds
xchg
sub
push
xor
push
mov
push
movsl
dec
scas
dec
test
sar
mov
ja
sub
testb
stos
sar
sbb
addr16
xchg
mov
hlt
xchg
aas
or
or
rolb
rclb
js
and
test
push
loop
sbb
mov
sub
sub
in
add
lds
pop
cwtl
add
daa
mov
mov
aam
mov
aam
push
add
jns
add
jns
lahf
adc
fildl
push
int3
inc
adc
dec
dec
dec
fsts
pop
jb
adc
xchg
and
push
cs
jp
std
js
lds
push
xchg
adc
mov
mov
ss
dec
mov
adc
nop
daa
add
inc
inc
mov
or
xor
sbb
flds
test
mov
lds
movsb
jmp
sar
movsl
mov
adc
je
std
inc
mov
je
bound
sub
les
aaa
jne
insb
fwait
jne
das
fiadds
ret
cmp
rclb
xchg
xchg
adc
into
push
divb
insb
mov
sbb
jmp
cmpsl
test
xchg
cmp
push
xor
sub
movl
test
cmp
orb
cmp
aam
dec
jmp
mov
enter
add
fstl
dec
out
push
inc
inc
dec
inc
ljmp
dec
sub
sub
dec
xor
dec
push
adc
lea
add
dec
enter
ss
and
je
xor
rcrl
push
setb
jb
dec
push
popa
out
push
xchg
cmp
or
inc
and
xchg
insl
notl
pop
test
mov
add
adc
cwtl
cwtl
roll
dec
pop
fwait
push
xchg
mov
icebp
mov
ret
lds
xor
push
dec
and
push
lea
in
sub
mov
pop
pop
sbb
pushf
push
push
imul
sbb
sbb
fs
out
and
jns
jg
push
test
stc
dec
dec
in
call
enter
inc
add
add
rolb
inc
push
call
push
dec
repnz
inc
xor
andb
incl
clc
push
into
inc
xchg
inc
in
mov
mov
xchg
mov
hlt
fisubl
add
in
adc
or
movsb
adc
add
subb
pop
dec
pushf
sub
adc
sub
or
jl
cwtl
push
dec
pop
sti
orl
pop
rorl
orb
sbb
jns
shl
mov
pusha
fs
lea
push
lcall
aas
push
pop
inc
and
jge
mov
inc
popw
push
stos
gs
jmp
in
or
lds
mov
insl
jae
je
push
repz
int3
mov
sarl
or
scas
xchg
dec
xchg
mov
push
call
mov
inc
dec
mov
jnp
adcl
mov
scas
xor
jmp
inc
xchg
test
cmp
popf
call
mov
pop
push
daa
adc
mov
or
push
rorl
fs
or
fs
arpl
outsl
leave
inc
je
xor
insb
sti
push
mov
enter
cltd
mov
add
adc
xor
pusha
popa
jne
and
test
or
inc
jne
adc
icebp
xchg
pop
mov
dec
lcall
cmp
xlat
aaa
push
push
pop
shl
inc
inc
push
dec
das
scas
out
push
movsl
xchg
mov
addb
or
inc
adc
and
movsb
cmp
repz
xchg
adc
cltd
cmp
dec
sbb
jle
iret
in
roll
ret
adc
fidivs
adc
add
repnz
stos
out
push
adc
int3
lea
test
push
cwtl
es
xchg
and
cmp
sub
subb
inc
push
aaa
push
push
dec
inc
cmp
inc
lret
fwait
mov
adc
in
fsub
sub
and
lock
inc
rorb
and
sbb
xchg
repnz
test
rorb
and
lds
push
push
insl
ss
push
pop
shll
push
and
sub
pop
std
mov
push
rorl
sbb
sahf
push
psubsw
cmp
mov
dec
cs
fmul
xchg
xchg
dec
cwtl
mov
inc
xchg
pop
hlt
push
aam
push
cmp
adc
inc
scas
loope
cmp
jo
arpl
xor
xchg
push
add
push
nop
and
popf
pusha
out
mov
adc
sub
cmp
lret
inc
add
cs
and
icebp
dec
out
cmc
imull
test
insb
add
pop
loopne
add
sub
push
push
add
call
push
xor
nop
cltd
daa
cli
lret
mov
rclb
adc
cmp
or
jl
xchg
mov
lahf
adc
cmp
jg
jbe
aam
enter
addr16
sub
sub
cs
push
dec
adc
pop
mov
pop
sub
or
pop
mov
dec
pop
dec
lds
imulb
or
test
push
mov
dec
loopne
imul
or
lcall
ss
sbb
xchg
and
inc
divb
cmpb
roll
mov
neg
pop
mov
mov
clc
shlb
adc
or
or
cmpsl
fs
ds
xchg
and
or
or
xor
or
and
adc
adcl
or
fsubrl
popa
lock
shl
sub
mov
mov
ret
pushf
sub
loope
arpl
mov
or
push
lret
mov
icebp
mov
or
push
dec
inc
push
cwtl
scas
push
rclb
call
test
gs
push
xchg
adc
mov
mov
add
inc
cli
inc
push
push
and
inc
push
push
ret
inc
push
and
mov
shlb
sub
pop
sarb
stos
xchg
inc
js
cmp
inc
mov
xor
push
mov
dec
add
push
imul
pop
mov
push
dec
xchg
xor
and
or
sbb
push
mov
pop
cmp
jo
inc
dec
shlb
scas
dec
jo
push
push
stos
xor
mov
es
lock
xchg
lret
xchg
test
mov
int
cli
adc
inc
pop
cltd
add
push
xchg
es
shl
pop
int
fs
jnp
js
mov
stc
je
movsl
jnp
scas
dec
add
sub
add
or
popf
push
fs
enter
pop
and
xor
nop
or
leave
jne
push
mov
bound
mov
sub
dec
in
cmp
repnz
jb
add
shll
mov
xor
repz
sub
dec
sub
adc
sbb
xchg
sub
add
push
xor
push
daa
loope
mov
and
test
fwait
outsb
or
jp
cmc
sbb
dec
push
add
add
leave
or
mov
repz
cltd
out
push
addr16
repz
dec
rorb
xchg
mov
inc
outsl
jb
add
sbb
inc
and
mov
inc
sub
mov
invd
add
xchg
push
and
cmpb
lcall
cmp
xchg
mov
mov
pop
in
idivb
scas
inc
xor
push
fstl
add
jb
push
fsub
dec
lret
or
iret
into
cmpsb
flds
adc
nop
push
lahf
xchg
cmpsb
ja
or
add
lret
mov
into
xor
or
push
or
and
xor
push
sbb
mov
jbe
xchg
pop
cmpb
jne
hlt
cmp
pop
mov
sbb
cltd
inc
mov
cmp
lea
xchg
jb
mov
jb
pop
jmp
or
xor
mov
add
xchg
sub
mov
mov
mov
hlt
ret
ret
lods
fs
lea
push
cmp
ja
cmpsl
imul
pop
fisubrl
or
je
repnz
inc
leave
adcl
sbb
add
into
cmp
ljmp
cli
jne
call
bound
mov
fwait
cmp
jb
sub
cmp
xor
add
mov
add
sub
lea
dec
push
imul
or
repnz
mov
mov
aad
pushw
dec
test
sbbb
sub
int3
aaa
lcall
fsubs
fstps
xchg
ja
pushf
test
cltd
dec
cmp
icebp
mov
mov
jnp
or
pop
jmp
push
xchg
xchg
lods
iret
mov
mov
push
jb
int3
fdivrl
insl
mov
fildl
leave
bound
push
cmp
das
mov
push
cmp
jl
dec
xchg
add
push
jle
push
mov
shrb
or
shl
pop
mov
sbb
lret
pop
jmp
bound
jle
mov
push
pushf
lret
cwtl
mov
jns
dec
fwait
sub
stc
inc
add
out
loope
or
aad
iret
jnp
xor
inc
ret
adc
fwait
pop
fs
cltd
sub
lock
mov
mov
shlb
mov
pushf
or
xchg
and
test
sbbb
or
xchg
and
enter
sub
sub
xchg
cs
sub
and
add
je
bndstx
sub
jne
or
sbbw
xchg
in
jo
sbb
push
inc
dec
jmp
mov
test
sbb
jno
push
xchg
stos
pop
jp
push
mov
xchg
mov
movsb
movb
imul
jmp
mov
inc
mov
inc
dec
xor
push
mov
nop
and
rcrb
push
and
je
and
sub
pop
ret
sub
sub
je
cmp
sub
cmp
insb
xor
pop
cli
push
arpl
pop
mov
add
add
scas
mov
jnp
lock
ret
jnp
push
test
je
jp
insb
sub
add
push
test
or
or
jne
je
sbb
cmp
mov
mov
or
pop
inc
pusha
jne
push
mov
test
movsb
push
repnz
cmp
jne
pop
sar
dec
xlat
hlt
push
xchg
imul
iret
push
push
or
add
inc
inc
jns
dec
ljmp
rcrl
push
dec
dec
lea
adcl
testb
clc
dec
ret
mov
add
xor
rcll
hlt
cmc
insl
fwait
arpl
ret
fnstcw
xor
mov
or
lahf
sub
scas
movsb
sbb
sbb
loopne
and
cmpsb
xchg
xchg
inc
add
fstl
jbe
push
data16
or
inc
adc
inc
in
pop
inc
mov
dec
add
dec
in
lock
test
andb
fmuls
call
jecxz
or
push
aam
add
push
adc
push
ret
or
jge
or
enter
pop
outsl
jg
adc
add
push
pusha
pop
xor
xchg
roll
in
divl
cmp
sbbl
shll
sbb
sbb
xor
mov
pop
into
ds
xor
adc
jmp
sbb
shr
xchg
fldenv
jne
inc
lock
enter
push
add
jb
cmp
ja
cmp
popa
pop
jbe
dec
mov
loopne
sub
imul
mov
mov
enter
std
popa
and
loope
aas
push
or
jg
mov
adc
or
or
popa
xorl
js
or
add
mov
mov
pop
or
cwtl
sbb
aam
addb
iret
dec
pop
movsb
gs
out
push
jecxz
push
pop
stos
xchg
popa
mov
movnti
dec
cld
fiaddl
addb
inc
outsb
push
nop
movsb
xchg
test
sbbl
mov
mov
or
cwtl
xchg
ret
sbb
jmp
adc
loopne
fcoms
inc
push
or
sbb
lret
pop
lods
loopne
pushl
test
sarl
dec
lock
or
fistl
cmc
dec
hlt
ret
fcoml
clc
mov
call
add
add
xor
mov
aas
adc
sub
push
or
shl
repz
fisubl
or
xchg
mov
jb
scas
int3
adc
call
aam
les
xor
inc
sub
xchg
add
add
fadds
cmp
jne
cmp
call
sbb
test
push
test
lds
cwtl
push
lret
jmp
xchg
jge
pop
push
movsl
dec
sub
rorb
ret
ret
pop
popa
and
jne
or
jge
cmp
sbb
es
faddp
rclb
and
mov
rolb
call
adc
dec
out
inc
adc
dec
inc
adc
push
imul
or
ret
and
testb
or
xor
adc
or
xor
mov
mov
or
and
sti
push
fdivl
add
jge
and
adc
and
ss
sub
cmp
test
cmpb
lock
nop
mov
xchg
push
andl
adc
fiadds
dec
or
mov
xor
sbb
xchg
in
and
cld
add
test
cli
push
cmp
popf
jae
inc
clc
jne
or
mov
lock
dec
outsb
aaa
aas
pop
fwait
mov
push
je
xchg
cwtl
ds
xor
mov
dec
test
mov
add
adc
xor
sti
mov
lret
adc
sar
push
loopne
mov
mov
cmpsb
add
push
jno
fcomip
inc
cld
and
ret
adc
das
fdivrs
or
adc
mov
push
or
das
push
cmp
dec
pop
je,pt
ds
or
jmp
test
jge
adc
in
loop
dec
dec
sbb
cs
imul
loope
push
sbb
fistl
in
test
ja
sub
adc
and
ret
pop
push
loop
add
les
in
add
mov
add
sti
and
or
push
movsbl
mov
enter
loopne
jmp
cwtl
pop
ret
and
clc
icebp
mov
shl
ja
jmp
inc
push
xor
sbb
push
fadds
faddl
add
jmp
sub
cmc
cmp
jne
inc
sub
dec
cld
adc
sbb
sarb
or
inc
xchg
cmp
mov
lret
adc
in
or
adc
jne
pop
and
lods
lea
ds
div
repz
das
mov
inc
inc
shr
jmp
stos
cmp
test
clc
and
mov
cmp
push
bound
jmp
sbb
dec
insb
fldenv
ja
mov
jge
mov
adc
fmuls
inc
and
jne
ljmp
inc
push
mov
jmp
enter
xchg
pop
hlt
aam
sbb
rolb
sbbb
aad
xchg
sbbl
insl
sbb
cmp
jmp
clc
addr16
aaa
cmp
sub
adc
pop
and
adc
call
stos
jae
jo
insb
and
add
fcoml
xor
lods
inc
ret
add
mov
cwtl
inc
mull
push
adc
push
and
adc
sbb
mov
daa
movl
dec
test
xor
sbb
xchg
or
inc
int
lea
mov
jmp
mov
clc
inc
push
and
lods
nop
mov
xor
mov
add
and
mov
enter
sub
pop
je
cmp
or
push
test
adc
dec
and
push
inc
lock
dec
popa
jle
jmp
mov
or
push
xor
orb
lar
shr
lods
in
sbb
jmp
dec
sub
pop
mov
lcall
pop
push
addr16
ds
aam
ret
xor
add
sbb
xor
pop
mov
fdivrl
je
mov
daa
por
push
es
dec
adc
dec
dec
jb
or
mov
dec
mov
aad
icebp
add
inc
mov
out
push
je
xchg
pop
and
das
inc
dec
pop
xchg
aaa
pop
mov
adc
sub
add
push
cs
jmp
adc
popf
mov
je
daa
mov
int3
sub
loop
ret
int3
daa
inc
jmp
mov
jmp
push
add
daa
adc
in
push
test
or
adc
sbb
or
ds
pop
notb
and
sbb
sub
lock
add
mov
jmp
inc
cltd
and
or
or
push
push
mov
jne
cmp
or
enter
or
add
adc
jmp
inc
sub
imul
sub
inc
xor
inc
data16
call
rcrb
jmp
adc
jnp
repnz
or
add
sahf
loopne
stc
mov
sbb
jecxz
sbb
jle
adc
jb
ret
lock
in
push
sbb
dec
add
jns
and
mov
idivl
cltd
daa
xor
mul
mov
mov
push
xchg
xor
bound
je
lds
lock
mov
pop
cmc
hlt
push
add
arpl
adc
stc
inc
adc
das
pop
mov
cmp
pop
int3
outsb
hlt
mov
sbb
scas
fwait
scas
sub
inc
push
xchg
add
xor
rorl
movb
xor
scas
push
enter
mov
cld
test
in
cmpsl
movl
sub
or
add
or
mov
sbb
sub
pushw
lock
pop
adc
call
cmpsl
push
adc
insb
ljmp
dec
push
mov
or
xor
cmp
clc
inc
inc
mov
je
gs
or
addb
aam
add
lea
cmp
mov
ret
enter
dec
lea
push
jns
sbb
jmp
ds
dec
test
dec
pop
nop
push
lock
call
mov
cmpsb
roll
mov
hlt
loope
gs
sbb
test
push
push
sbb
mov
fnstcw
or
dec
and
sahf
inc
ljmp
mov
adc
sahf
inc
push
or
dec
push
add
push
xchg
adc
out
mov
push
test
nop
lods
call
popa
adc
cmpsl
lahf
ficoml
pop
sbb
xor
in
pusha
nop
mov
jbe
in
or
adc
lods
fbld
cmpsb
icebp
ds
pop
and
jecxz
shl
aas
imull
gs
jnp
insl
adc
inc
insl
in
xchg
xor
fs
outsl
loop
mov
dec
jb
out
andb
jno
lahf
push
mov
push
add
xor
xor
call
push
mov
mov
sbb
or
add
out
sbb
sbb
fidivl
adc
test
js
push
adc
inc
les
icebp
inc
fs
mov
xchg
int3
inc
mov
adc
and
test
jmp
sub
je
jmp
xchg
xchg
push
xlat
aad
int3
xchg
sahf
sarb
jne
jmp
lea
test
stos
jae
add
loop
test
pop
jb
add
cmp
leave
cs
inc
adc
addr16
push
cmp
ret
or
je
or
adc
xor
xor
loop
rorb
cmp
xor
sub
adc
pop
pop
in
outsl
shlb
mov
adc
loopne
pop
test
stos
mov
test
mov
inc
nop
adc
sbb
ss
push
xor
add
pop
cs
inc
add
mov
jle
mov
stos
dec
dec
loope
mov
push
icebp
inc
clc
testb
out
jecxz
xchg
pop
cmp
and
fcompl
ret
sub
and
xor
mov
pop
push
add
xchg
sub
je
in
cmpb
dec
sbb
dec
pushf
lock
lods
inc
sti
adc
and
daa
jmp
movsb
cmp
and
inc
mov
xor
xor
mov
in
shlb
xor
jno
stc
or
xlat
fs
punpckhwd
flds
adc
daa
pop
cmp
jmp
in
adc
into
aaa
and
orb
test
mov
push
nop
or
push
push
repnz
lds
sub
inc
cmpsl
mov
fs
inc
fdivl
dec
add
inc
jbe
add
cmp
mov
enter
jl
cwtl
data16
fdivs
mov
loopne
cmpsl
rcr
inc
inc
and
je
dec
mov
in
sub
dec
add
or
lea
add
or
add
enter
add
into
and
in
and
aas
imul
repnz
call
stos
dec
outsb
jae
enter
incl
in
xor
adc
daa
fldcw
or
call
les
enter
mov
mov
daa
or
and
aam
or
pop
rcr
or
cmpl
je
adc
aaa
inc
test
push
mov
mov
jle
lret
mov
imul
in
sub
xchg
call
inc
inc
dec
or
rorl
out
jmp
inc
and
push
and
push
in
sub
outsb
dec
cmpsl
mov
push
and
add
adc
fistpl
cmp
lock
ljmp
ret
sub
rorl
daa
adc
sahf
push
push
fildll
inc
fs
mov
sub
pop
sbb
inc
xchg
or
div
dec
leave
push
add
call
add
cmp
jne
mov
and
in
mov
cmp
mov
pop
call
loopne
call
xchg
push
test
repz
jns
xorl
js
add
enter
add
pop
jmp
aam
cs
mov
jmp
mov
xchg
fisttpl
popf
push
add
add
cmp
jp
add
and
aam
cmp
jne
nop
inc
push
enter
call
into
adc
jmp
adc
and
fs
rcl
mov
or
cli
add
add
inc
sub
repnz
ret
cld
cmp
sub
sbb
stc
xor
enter
lods
push
dec
aas
inc
mov
sbb
cmp
repnz
dec
cltd
and
clc
or
add
inc
push
mov
jge
push
pop
pop
mov
leave
add
xor
or
push
movsl
mov
leave
mov
ss
ficoml
adc
int3
loope
mov
sbb
adc
lahf
xchg
stos
punpckhdq
loopne
lods
ret
xchg
jmpw
aam
or
jne
push
add
sbb
adc
sbb
mov
sbb
inc
push
jae
xchg
pushl
jle
movsl
add
lret
jbe
push
jle
aad
adc
inc
cmp
jl
sub
inc
sbb
pop
pop
jmp
daa
xchg
pop
and
notl
push
dec
inc
flds
push
cmp
movsb
xchg
shrb
loop
in
dec
add
aad
andl
mov
fnsave
adcb
or
add
sub
pop
and
mov
loopne
shll
enter
clc
adcl
add
jmp
xor
fidivrs
push
dec
dec
or
xchg
inc
imull
nop
pushf
cld
sub
shr
iret
imul
and
dec
sarb
idivb
lret
adc
push
cli
out
adc
xor
hlt
dec
push
cld
or
mov
test
pop
mov
cli
add
andl
pop
pop
mov
cmp
or
and
and
mov
lret
lea
ja
add
pop
mov
sub
loope
dec
loopne
and
pushf
mov
push
or
add
cld
pushf
shr
add
push
mov
cmp
stos
pop
cs
push
or
lcall
adc
repnz
mov
pop
pop
les
xchg
hlt
mov
xchg
inc
sub
and
ss
add
dec
pop
cmp
jbe
mov
xchg
sub
mov
and
arpl
inc
adc
mov
sti
or
pusha
lret
shr
notl
add
jne
nop
lcall
loopne
mov
push
pop
xchg
pop
lcall
int3
pop
loopne
and
iret
inc
pop
mov
jge
cmp
imul
leave
aam
insb
or
or
insl
push
pop
jo
orw
adc
mov
push
add
scas
sbb
and
push
mov
in
or
inc
outsb
adc
scas
jg
sbb
adc
push
enter
ljmp
adc
mov
push
cmp
adc
decl
and
testl
mov
fs
add
loope
add
mov
lret
push
cld
jae
and
xor
or
inc
cmp
lea
pop
test
decb
daa
or
test
or
adc
push
sbb
mov
adc
rorl
imul
hlt
popf
lret
ret
enter
repz
push
test
jns
es
xchg
or
inc
or
mov
insl
sub
adc
imul
push
xchg
insb
cmpsl
push
adc
rcrl
xor
push
sarb
mov
mov
nop
and
stc
add
loopne
and
push
mov
adc
jne
push
jmp
add
xor
shr
pop
pushf
sti
adc
cmp
sbbl
jae
push
decb
iret
jne
add
jmp
jb
adc
jns
fcmovbe
fsubs
and
out
repnz
dec
jae
loop
or
bound
push
jmp
test
sub
out
inc
push
call
jns
cmp
or
pop
pop
mov
inc
test
mov
mov
cmpsb
outsb
sub
cli
inc
enter
pop
xchg
mov
jne
sub
jo
and
and
mov
cmpsb
or
aaa
sbb
pop
push
xchg
mov
xor
cmp
add
or
je
lcall
cli
rorl
mov
jne
xor
and
jl
roll
loope
jmp
mov
push
stc
mov
sub
rcrl
cmpsl
dec
addl
lret
enter
or
and
add
call
mov
adc
andb
hlt
in
and
inc
rorl
pcmpeqw
gs
ss
and
jmp
lret
adc
and
push
outsl
mov
xchg
jp
push
mov
sbb
dec
adc
stos
jl
mov
andl
push
and
mov
push
cmp
mov
cwtl
xchg
out
ret
fisubs
pusha
into
shr
or
or
stc
jl
scas
jmp
dec
sub
pop
and
sub
adc
mov
xchg
aaa
sub
sahf
mov
or
cld
movsl
xor
cltd
jne
fst
xchg
inc
add
adc
cld
pop
mov
jns
and
bound
cmp
ficomps
pop
dec
jo
and
add
or
sub
scas
ficomps
jns
cmp
lret
push
adc
inc
hlt
cmp
fwait
dec
and
xor
add
push
cmpsb
inc
mov
or
inc
shlb
push
int3
test
push
lock
or
adc
jbe
ss
xchg
mov
xor
mov
jle
flds
push
sub
xchg
push
enter
jno
xor
xor
loopne
adc
popa
cmp
sbbb
xor
or
mov
pop
sti
mov
fisttpll
or
adc
or
pop
jmp
xor
cmp
ja
cmp
inc
lock
xchg
inc
mov
sysexit
cmc
sti
mov
inc
xchg
lock
inc
xchg
push
out
shl
add
xor
call
push
es
jbe
mov
dec
add
pop
jae
mov
or
rolb
xor
mov
mov
inc
inc
cmpsb
enter
shlb
inc
or
mov
not
and
retw
inc
lods
adc
fildll
jne
adc
push
cli
cmc
sbb
or
icebp
sub
inc
or
aad
subb
dec
xor
push
or
inc
jg
test
sbb
jne
in
or
sbb
or
std
inc
or
adc
or
or
mov
lods
mov
dec
sbb
dec
inc
cmc
jle
dec
stos
in
aaa
mov
cmp
setge
ret
shll
mov
dec
dec
sahf
test
jl
mov
push
pop
call
add
add
cmp
jae
cmp
adc
cmp
push
add
cmp
adcl
adc
daa
cwtl
mov
sub
subps
pop
mov
shrd
or
adc
cmp
add
inc
lcall
mov
jb
subb
or
xchg
lds
push
push
addl
in
aaa
mov
jge
push
je
test
test
mov
sub
fbld
inc
push
pop
cmpl
es
icebp
inc
or
mov
adc
jbe
push
cmp
push
outsl
jb
sub
or
sub
add
jge
mov
enter
loopne
jns
adc
jne
mov
inc
and
or
inc
push
inc
cli
sub
or
mov
je
jle
or
jg
outsb
inc
jne
testb
lret
in
add
push
negl
mov
je
jmp
test
es
push
adc
out
sbb
bnd
mov
or
sub
rcrl
ret
inc
sub
sbb
outsl
popl
subb
adc
stc
or
cs
movaps
and
push
xor
pcmpeqw
popa
in
or
and
push
and
push
call
dec
pop
dec
pop
xor
test
lahf
das
mov
push
mov
and
sub
testb
sbb
stc
nop
cli
jae
mov
pop
fcoms
lret
add
cmp
jbe
dec
push
add
mov
insl
sub
dec
inc
xor
enter
add
sbb
rorb
jns
adc
jl
dec
adc
loopne
cld
sub
push
cltd
es
subl
jb
inc
pop
sub
inc
dec
insb
mov
sub
and
or
jmp
jmp
and
dec
addr16
or
or
mov
mov
jmp
call
cmp
notl
loopne
and
cmp
jns
or
movsb
and
shll
test
push
mov
test
cltd
repz
call
push
cld
mov
jle
mov
mov
hlt
gs
sbb
ljmp
adc
inc
fdiv
and
jecxz
rcll
jne
mov
aaa
cmpb
jae
mov
cmp
repnz
shlb
push
inc
or
lret
mov
sub
sub
lea
dec
push
hlt
dec
xchg
xchg
add
jmp
call
nop
je
fcomps
xor
rol
jbe
fidivl
sub
test
and
push
sbb
push
mov
add
icebp
scas
insb
jno
or
cmp
lea
nop
add
add
mov
inc
cmpsb
jae
sbb
adc
mov
or
andl
pop
orl
sbbl
cmpb
je
jo
lea
sbb
repz
mov
test
sub
xor
pop
les
cmp
add
movsb
jae
xchg
push
dec
push
clc
test
xor
push
pusha
mov
cltd
int3
jg
aad
sub
add
inc
addr16
mov
divl
aaa
notb
push
push
jge
xlat
inc
movsl
jae
inc
pop
pop
and
rcrl
mov
sbb
cltd
sahf
pusha
adc
mov
dec
ret
daa
ret
sub
imul
ret
rolb
mov
adc
sub
inc
mov
inc
mov
nop
lock
add
push
and
inc
es
mov
push
test
testb
pop
cmp
pop
popf
and
mov
movsl
nop
sub
idivl
and
insb
test
pop
test
cmp
pop
or
sub
ficoml
clc
mov
xlat
aaa
imul
daa
sbb
test
mov
ds
push
call
and
pop
test
pop
icebp
call
jge
addr16
clc
daa
push
ja
mov
or
jmp
ret
xchg
push
pop
scas
and
jo
mov
fwait
popa
std
es
sub
add
sub
je
loope
fcmovbe
nop
test
enter
xchg
js
inc
sub
testl
inc
inc
je
jne
xchg
push
add
and
jg
daa
rcll
push
aad
sub
xor
pusha
jo
add
push
cmp
notb
fnsave
mov
mov
jl
and
add
stc
cwtl
cld
inc
outsl
call
jmp
popl
je
test
sub
cmp
cmpl
mov
paddsb
cwtl
test
mov
or
cmpsb
or
scas
push
imul
ret
lock
hlt
xor
je
out
stc
fisubs
stos
and
pop
bound
or
andb
lea
jle
inc
jae
jnp
ret
shlb
mov
push
xchg
push
les
das
push
sbb
pop
pop
test
xor
dec
push
call
push
sbb
xor
outsl
test
or
push
popa
test
lods
or
jmp
xor
jmp
in
loope
sbb
lret
inc
pop
push
xchg
sbbb
loop
fstl
sbb
push
or
inc
call
loop
je
sbb
push
or
or
sbb
and
fcomi
out
dec
in
add
add
cmp
dec
adc
and
daa
loope
add
xorps
lahf
fcoms
cmp
adc
rcll
pop
cmp
or
jl
cli
xchg
pop
adc
xor
sub
push
jo
and
mov
insb
adc
lock
lret
roll
and
pop
sub
cwtl
adc
mov
pop
jle
sub
inc
and
xor
pop
icebp
sbb
addb
mov
andl
mov
inc
or
std
or
rcll
mov
mov
xor
fsubr
shrl
and
leave
adc
cmp
jecxz
adc
add
call
sub
les
fs
sbb
sbbl
jo
mov
dec
add
bound
mov
pop
pop
shlb
aad
mov
dec
push
sbb
and
or
movl
push
adc
cmpsb
dec
je
repz
inc
gs
mov
sub
dec
mov
adc
test
call
or
adc
push
inc
xchg
orl
xchg
pop
in
mov
or
push
outsl
push
std
adc
and
test
aad
xchg
sbb
mov
xor
sbb
xchg
adc
iret
sub
jb
mov
imul
push
lret
adc
pusha
sub
orb
sub
icebp
cwtl
xlat
adc
movl
subb
dec
jae
icebp
cmp
adc
or
or
ljmp
and
inc
cmp
cmpl
add
imul
sarb
pop
ret
subb
rorl
movsl
clc
jl
test
jge
mov
adc
mov
sub
lea
sbb
pusha
dec
or
les
mov
lock
sub
push
outsb
dec
test
adc
add
testb
jg
dec
inc
stc
cmp
mov
js
je
mov
adc
and
lods
ja
andb
sti
or
mov
or
inc
inc
cmp
jl
xor
icebp
int3
or
cmpl
dec
mov
mov
add
add
ret
dec
cli
xchg
pop
or
push
movl
jno
or
dec
gs
add
cmpsb
mov
pop
jnp
std
mov
or
jl
add
adc
dec
and
stc
sub
int
mov
jns
xchg
and
cld
sub
inc
cli
dec
xchg
lock
icebp
mov
loop
push
pop
roll
and
ret
mov
and
mov
inc
out
mov
decl
je
cmp
dec
test
mov
push
jmp
cli
xor
adc
repz
push
or
call
add
pop
je
cmp
cmp
fcomps
xor
std
insl
lods
pop
rorb
mov
mov
sbb
fisttps
jo
adc
pop
incl
adc
mov
scas
and
pop
int3
jl
mov
mov
addl
add
js
mov
mov
or
jp
jno
mov
and
inc
fiaddl
add
int
and
shlb
repz
mov
sub
leave
pop
cmp
or
movsl
push
sbb
xor
popf
or
or
cmp
scas
andl
pop
jne
sbb
movl
aaa
scas
sbb
cmp
daa
jne
push
ficompl
inc
pop
cli
outsb
ljmp
movzbl
andb
es
add
sbb
push
mov
push
test
dec
or
jmp
test
ds
inc
mov
jmp
adc
inc
mov
inc
sbbl
inc
int
fimull
cs
adc
add
les
dec
callw
sub
loopne
mov
sub
sub
push
mov
mov
cmp
fadds
inc
es
jne
and
sub
pop
mov
cmp
outsb
or
push
in
cmp
ret
and
or
sbb
sete
std
orl
sub
enter
mov
adc
pop
inc
mov
mov
test
addl
aas
mov
mov
push
sbb
xchg
sbb
nopl
add
xchg
mov
std
pop
inc
lar
add
add
xchg
aas
orb
add
push
shrb
add
call
or
cmp
cmp
nop
add
jmp
jo
pop
inc
fld
cmp
sbbb
sub
add
or
and
or
inc
enter
cmp
les
in
inc
cmp
sbb
stc
pop
or
sub
or
ja
mov
clc
popa
popl
push
pop
xor
xor
xlat
shlb
jmp
lods
cwtl
xor
cmp
xor
cmp
ret
mov
dec
inc
test
sub
adc
or
lahf
inc
adc
jmp
push
arpl
xchg
popa
push
mov
testb
mov
roll
cmp
mov
or
xchg
xchg
dec
mov
int
pop
pop
aad
pop
push
shrl
or
and
out
call
xchg
adc
push
push
bound
mov
jp
or
leave
mov
mov
inc
cmp
icebp
push
mov
out
cmp
jne
aad
lret
call
test
lds
icebp
adc
xorb
add
arpl
cwtl
sbb
push
pop
stc
ljmp
mov
fdiv
xor
int3
cmp
sub
popa
or
adcl
xor
add
lret
lock
test
enter
push
push
adc
or
dec
pop
loop
cmp
aam
insb
and
mov
and
lods
sub
adc
sbb
je
pop
jmp
es
into
stos
xor
into
or
call
adc
hlt
mov
jnp
fldenv
mov
dec
jp
cs
jae
pop
into
js
inc
jne
repz
push
shlb
out
sahf
pop
adc
addr16
xor
test
mov
cmc
mov
sbbl
push
lods
aaa
inc
gs
push
and
inc
test
xchg
mov
cwtl
and
or
cli
sbb
sbb
lahf
into
ja
pop
stos
mov
andb
scas
test
sbb
sbb
cmp
nop
adc
add
pop
bound
clc
push
lock
and
sar
lea
test
jp
mov
pop
out
sbb
xor
pushf
push
add
test
mov
inc
mov
pop
pop
bound
push
fs
add
jbe
in
sti
dec
push
outsl
sub
cmp
sbb
pop
incb
mov
cmp
ljmp
inc
mov
mov
xchg
sub
adc
cmp
roll
hlt
push
adc
inc
insb
jbe
es
or
out
add
or
fcoms
inc
adc
dec
mov
or
add
add
call
int3
mov
jmp
fs
mov
pusha
lea
push
lahf
inc
jns
push
mov
test
or
test
cmpsl
sub
movsb
sbb
in
adc
and
lds
stos
bound
push
outsl
inc
sbb
push
add
movsl
lock
pop
incl
jnp
jnp
mov
sbb
lahf
sub
pop
orl
xchg
sbb
sbb
adc
ds
mov
xor
adc
mov
xchg
jg
add
mov
cmp
add
xor
enter
gs
sub
pop
xor
inc
jno
iret
or
push
push
rcrb
xchg
les
pop
jmp
cmp
jge
test
add
push
shrl
push
push
movsb
lock
es
mov
sbb
push
and
sbb
pop
dec
int3
push
orl
sbb
mov
or
and
mov
cmp
ljmp
xchg
rorl
mov
jae
xchg
jmp
test
cmp
cld
pop
ret
push
sarl
clc
insl
dec
sarl
xchg
loope,pn
je
jmp
mov
imul
shll
sub
shll
scas
clc
add
out
add
mov
push
das
ret
jge
pop
and
mov
lcall
repnz
adc
hlt
push
and
mov
testb
adc
add
popa
and
dec
pcmpeqw
enter
add
jne
shll
cld
pop
xor
in
xlat
test
adc
mov
xor
decb
adc
or
std
fs
jo
xor
les
jo
mov
enter
loopne
and
mov
les
pop
mov
adc
sbb
fisubrs
int
jp
aad
mov
enter
lret
jp
dec
scas
nop
mov
xchg
scas
mov
or
and
pushf
pop
mov
jp
jns
mov
sub
xchg
adc
xchg
lods
rorb
add
add
jmp
push
pop
mov
xor
and
cs
out
lret
test
jmp
inc
jne
push
jmp
sbb
push
jae
pop
pop
xor
add
stos
movhps
push
cmpsl
mov
call
pop
daa
ds
test
and
je
sub
xlat
push
call
cmpsb
pop
mov
push
and
fdivs
aas
stc
dec
xor
in
adc
sbb
popf
push
mov
je
mov
cmp
cwtl
mov
pop
pop
ss
push
cmp
lock
push
movsl
dec
movsl
xchg
or
fs
imul
xor
push
call
and
mov
dec
pop
test
cld
xchg
das
inc
adc
adc
sbb
popf
das
dec
push
in
mov
or
jmp
dec
leave
adc
sbb
or
test
fldcw
sarb
mov
inc
in
mov
push
outsl
movsb
arpl
jmp
outsl
and
inc
or
xchg
enter
or
dec
insb
or
les
jbe
sub
adc
test
jmp
adc
jae
pop
test
fisttpl
dec
fistpl
mov
jmp
inc
adc
rorb
push
mov
jne
adc
mov
or
sub
adc
add
cmp
je
data16
das
cmp
lcall
aam
inc
adc
and
dec
mov
int3
jl
xor
leave
scas
or
xchg
pop
shl
es
mov
in
mov
popf
push
pop
jb
cmp
leave
adc
aas
mov
inc
repz
inc
sbb
leave
push
leave
enter
ss
outsl
lds
cmpsl
fs
dec
pop
ja
out
movsb
mov
xchg
mov
xchg
dec
and
adc
jg
dec
mov
or
nop
mov
loopne
add
or
mov
mov
xor
jmp
loope
cwtl
adc
popa
mov
adc
inc
inc
jmp
cmp
push
mov
xor
or
jmp
lods
dec
xchg
add
scas
addl
int
push
cltd
push
outsb
jecxz
add
jge
sbb
adc
sahf
sahf
inc
adc
outsb
lahf
daa
adc
aam
es
add
jo
cld
mov
movsb
jno
pushf
clc
push
int3
jbe
nop
sub
pop
aas
jmp
lds
inc
cs
test
add
rolb
pop
mov
dec
adc
add
push
jle
mov
adcb
leave
ja
push
inc
loopne,pt
xor
lret
push
or
xor
pop
cmp
js
or
test
pop
mov
cmp
jne
push
adc
and
add
mov
ret
mov
cmpsb
bound
ds
fdivl
mov
xorb
sub
mov
jo
sub
and
lret
jmp
sub
cmp
inc
pushf
pop
xor
push
dec
notl
cmp
mov
mov
inc
out
mov
fcmovnu
or
test
ficoms
or
scas
sbb
push
icebp
lahf
push
enter
jmp
adc
jmp
pop
call
push
jl
mov
and
add
inc
jg
sbb
xor
mov
sbbl
out
xor
sub
cwtl
jbe
call
jns
adc
je
and
fldl
mov
add
mov
adc
clc
mov
mov
nop
or
bound
jmp
mov
xlat
cmp
fmuls
movsb
and
lahf
ds
cs
mov
or
shl
jbe
mov
ret
adc
sarl
inc
jne
or
cwtl
ss
ret
shl
push
adc
or
pop
jns
divl
lret
add
and
xor
pushf
rcrl
ret
loope
aam
sbb
and
pop
in
or
pop
pop
pop
shrb
fdivs
hlt
js
js
dec
daa
add
out
call
and
inc
push
aam
jmp
pop
addr16
jo
pop
std
sbb
test
mov
adc
push
imul
xor
cmp
or
add
and
pop
stos
addb
lock
lea
hlt
popa
data16
sub
mov
outsl
sub
loopne
repnz
add
jne
or
fucomip
pop
mov
sbbb
jmp
inc
roll
ret
push
push
inc
dec
mov
add
lret
adc
std
addr16
cmc
sarb
cmpsb
mov
pop
sbb
cmp
add
leave
jno
and
shll
pop
mov
push
cmp
movb
sub
mov
enter
sbb
insl
mov
lcall
in
outsb
or
jbe
mov
js
jl
push
adc
loopne
cmpl
repnz
add
rep
jmp
mov
mov
add
les
loopne
xor
xor
push
lea
aas
nop
lahf
adc
sbb
or
rcll
lds
jae
int
add
add
pop
lea
pop
sub
es
add
cmpsb
sub
movsb
and
inc
inc
inc
or
mov
setns
cld
jmp
and
inc
mov
adc
mov
fs
pop
and
shlb
pop
and
shlb
pop
and
cmp
cmpsb
out
dec
and
clc
mov
js
icebp
xor
cmp
push
cmpsb
fwait
test
nop
or
fs
xor
push
movsb
push
mov
or
lea
sarb
and
cmp
icebp
mov
and
sbb
pusha
je
aam
mov
mov
mov
enter
or
sbb
add
cmp
dec
test
cmp
movsb
out
push
dec
out
jle
mov
pop
nop
dec
sub
lods
jno
inc
lods
out
xchg
scas
inc
inc
pop
jne
sbb
and
je
jl
mov
dec
xchg
xchg
cmpsl
push
push
inc
sbb
and
pop
and
shlb
pop
and
shlb
pop
and
repnz
rcrb
in
sub
mov
adc
mov
mov
xchg
sub
sub
cld
popa
aad
mov
sub
aas
je
sub
jmp
shll
and
pop
adc
xchg
into
push
sub
xchg
rep
ja
xchg
dec
dec
fs
test
xchg
cwtl
aas
cwtl
lea
les
add
in
loopne
pop
adc
arpl
movsb
pop
ret
add
xor
inc
loopne
cmp
sahf
cmp
in
cmp
mov
mov
cld
push
call
inc
loopne
cmp
je
jecxz
jmp
pop
xchg
sub
and
mov
cmp
ljmp
dec
dec
mov
pop
mov
ret
xchg
fwait
cmc
jge
or
push
push
out
mov
push
pop
daa
test
je
push
call
jp
jno
cmp
inc
fsub
stc
fwait
mov
mov
and
in
test
mov
push
adc
mov
push
push
dec
testb
inc
push
mov
sbb
add
cli
add
push
cmp
sbb
mov
inc
arpl
jmp
cs
inc
push
stos
adc
popa
xor
jo
daa
fisubs
imul
dec
or
cwtl
xchg
loope
or
rclb
pusha
push
push
call
outsl
and
fcomps
das
sbb
xchg
or
jo
repnz
adc
sarb
xor
rcrb
inc
cmp
lea
inc
les
cmp
ret
and
es
lock
cmp
add
pop
jbe
jge
data16
adc
adc
jbe
mov
decl
jmp
xchg
mov
inc
jmp
out
call
lea
pop
shl
stos
xchg
sahf
cmp
mov
sub
sahf
pushf
add
cmp
in
mov
and
or
jbe
inc
loop
dec
cmp
aam
cmp
fcmovb
xchg
fs
push
add
adc
mov
and
mov
pop
mov
push
aam
rolb
test
dec
outsl
mov
in
arpl
push
inc
dec
inc
adc
mov
xor
dec
fs
add
mov
cltd
movsb
pop
or
mov
xchg
out
into
rorb
and
sbbb
jne
mov
dec
sbb
stc
repnz
and
mov
adc
pop
jne
mov
adc
movsb
xor
je
and
or
jbe
lahf
mov
adc
mov
and
jb
push
mov
imul
dec
pop
fsubr
add
jg
ds
mov
inc
sarb
add
add
jb
mov
in
test
aaa
add
push
lea
cmpl
shll
repnz
mov
roll
inc
out
rol
stos
inc
lds
jne
pop
pop
push
dec
cmc
cli
xor
and
and
lea
mov
or
std
inc
push
push
scas
pop
cmc
dec
xor
and
test
push
xchg
test
sub
loop,pt
sub
lea
outsb
subl
jno
mov
and
jmp
add
and
cmpb
sbb
add
inc
es
repz
or
and
dec
shll
sub
pop
xor
adc
dec
cmp
jmp
xor
sub
das
and
push
call
cmp
cmp
adc
xchg
stc
rcll
or
or
pusha
push
lret
shlb
call
int3
fisttps
int3
enter
mov
movsb
mov
call
ds
and
xchg
test
xchg
xchg
adcb
inc
loopne
shrb
addb
or
xor
or
adc
dec
fs
ja
sub
mov
and
test
mov
sub
add
push
cmc
mov
addr16
xor
aam
push
decl
mov
cmp
dec
adc
mov
or
jbe
sqrtps
or
shlb
mov
adc
push
mov
shrl
add
and
xchg
jmp
leave
cmp
jl
dec
clc
lahf
je
mov
mov
inc
cmp
xchg
sbbl
ja
call
or
not
in
adc
cmp
sti
or
stc
enter
enter
ja
call
popf
ljmp
insl
ss
adc
cmp
loopne
add
cmp
jae
cli
fmul
mov
pop
fadd
pop
mov
lods
inc
add
xchg
cmpsl
xor
pop
inc
movb
or
adc
hlt
jmp
cmp
cmc
mov
pop
lahf
mov
xor
push
jmp
call
movb
or
ret
hlt
test
neg
jne
xchg
shlb
mov
sub
aas
inc
inc
cmp
mov
fsubrs
push
xor
aad
dec
pop
cmp
rol
mov
jle
adc
call
jb
or
inc
or
hlt
pushf
outsb
ficomps
pop
mov
or
out
das
fistpl
insl
out
ret
push
push
js
fcom
fidivrs
add
jle
push
pop
mov
and
xchg
mov
inc
arpl
mov
lock
mov
inc
notb
jl
sub
jbe
mov
push
call
or
rolb
pop
jl
imul
pop
xlat
mov
fdivrl
sub
mov
cmp
js
xor
and
neg
pop
adc
sarb
loope
push
cmp
cmp
jne
data16
or
adc
stos
fs
mov
push
cmpb
icebp
mov
push
adc
addb
and
mov
adc
lcall
arpl
movsb
add
les
scas
mov
adc
aam
inc
fistps
dec
xor
in
xchg
adc
pop
push
mov
out
mov
test
pop
xor
jnp
call
jmp
sbb
inc
lret
adc
inc
add
out
imul
test
inc
cmp
sub
jg
xchg
xor
movsb
lods
cs
mov
repnz
cmovnp
mov
jg
test
int
je
ljmp
insb
test
jne
pop
inc
testl
add
inc
out
dec
push
mov
sub
subb
push
icebp
jo
inc
cmp
mov
stos
jb
push
cmpsb
mov
sbb
movsb
jns
cmp
and
jmp
imul
shll
popf
adc
xchg
enter
je
or
push
les
xor
pop
pop
pop
or
sbb
sbb
and
cmpsl
mov
movsb
addb
lret
les
push
mov
push
imul
mulb
jl
mov
push
popf
pop
mov
insl
mov
fdivl
jae
mov
adc
test
xchg
enterw
loopne
push
shll
xor
adc
inc
xorl
push
jp
cmpsb
inc
or
xor
sahf
adc
cmp
sub
and
aam
rcrl
add
jl
add
jmp
mov
sar
cmp
enter
add
or
or
jl
fwait
sbb
adc
lea
push
push
xchg
cmp
add
xchg
inc
and
test
or
cld
jmp
or
pop
and
mov
jmp
add
pop
or
cmp
push
or
mov
mov
pop
mov
xchg
std
mov
lock
aaa
or
in
popa
push
add
fcomp
test
or
sarl
mov
clc
sbb
call
loopne
aad
sti
cld
nop
popf
push
push
in
shlb
or
and
inc
inc
in
add
sbb
and
fs
orb
xchg
pop
push
inc
sbb
jecxz
ljmp
sbb
rorl
jnp
jno
dec
jmp
sub
inc
imul
in
fidivrs
call
and
dec
dec
push
pop
inc
mov
int3
mov
insl
in
fbld
ficoml
and
push
and
call
inc
fisttps
shrl
jg
icebp
rorl
jl
jb
shll
sbb
inc
je
dec
cmc
dec
repnz
sbb
add
xor
testb
int3
inc
jle
lahf
stc
push
xchg
cmp
adc
xor
mov
in
bound
pop
aad
ja
cmpsb
sub
mov
adc
fsubl
cwtl
jl
mov
std
fbstp
outsl
xchg
in
icebp
je
push
nop
adc
lods
xlat
push
repz
jp
or
lock
jmp
leave
or
test
push
push
lea
cltd
or
outsl
or
dec
incb
fadds
es
adc
mov
popf
add
popf
repnz
push
mov
push
test
xor
jmp
inc
sbb
insb
dec
inc
push
movsb
mov
pop
mov
lods
mov
mov
mov
lahf
cltd
xor
sbb
inc
mov
xchg
sub
jns
sbb
arpl
lea
xchg
mov
xchg
lret
and
fdivl
jmp
sbb
ds
test
pop
xor
adc
loopne
pusha
lcall
dec
test
stc
ljmp
cmp
std
ja
je
data16
jmp
loopne
fiadds
or
adc
scas
aas
js
xor
mov
divb
dec
push
clc
mov
fcompl
pop
les
dec
inc
mov
or
pusha
or
jne
cmpsl
lea
or
and
sub
cmp
sbb
jae
jb
ret
cmp
repnz
xchg
push
push
push
call
pop
pop
and
sub
icebp
jle
orb
dec
das
or
call
pop
jle
call
xor
ja
popf
enter
outsb
lcall
xchg
sbb
mov
inc
push
out
xor
cmp
add
add
es
popa
cmp
and
inc
clc
loop
popa
adc
nop
sub
cmp
lahf
or
inc
fidivs
mov
mov
ret
nop
nop
loop
shl
inc
xchg
out
dec
add
mov
inc
int
loopne
notb
test
fidivl
dec
lret
dec
rcll
jo
push
test
dec
add
cli
or
jl
add
inc
bts
add
jmp
push
cmpsb
mov
stos
or
add
bt
les
test
cs
xchg
cmp
cmp
lea
daa
and
les
outsb
and
dec
mov
into
jge,pn
std
repz
jnp
test
pop
mov
outsl
hlt
shrl
cmp
sub
push
mov
sbb
mov
adc
int3
inc
sbb
inc
mov
jmp
je
in
and
int
cmpsb
mov
mov
mov
pop
or
andb
push
mov
repnz
pop
push
arpl
sbb
mov
movsb
inc
dec
sbbl
xorl
filds
sub
or
mov
jmp
movsb
inc
xchg
loope,pn
int3
daa
inc
cmp
sub
cmp
mov
and
hlt
nop
pop
testb
movsl
sar
rorb
decl
mov
mov
cmpl
push
jmp
sub
dec
add
repz
or
or
sar
sbb
sbb
jnp
subl
cmp
pop
subl
cmpsb
dec
dec
jmp
fldl
lret
push
ret
mov
push
or
loope
jmp
fisttpl
dec
mov
inc
mov
mov
enter
mov
and
cld
jb
call
mov
fsubs
or
leave
fsts
pushf
fwait
adc
adcb
mov
das
out
and
mov
jo
lret
mov
mov
les
in
cmp
jmp
icebp
jmp
adc
cmp
lcall
int
jbe
add
std
xchg
push
pusha
and
jle
dec
roll
repnz
inc
subl
sbb
add
fistps
and
das
jle
push
fcomps
pushf
fs
daa
mov
ffree
cmp
nop
call
mov
cld
cmp
loopne
fcoml
fadd
mov
scas
cmp
push
cmpsb
and
sub
pop
std
jecxz
mov
jo
mov
cmp
dec
adc
and
inc
shr
sub
or
mov
adc
mov
dec
ds
dec
and
jo
mov
inc
push
rorl
call
push
mov
and
inc
inc
dec
mov
test
dec
push
imul
imul
or
and
inc
mov
or
push
adc
orb
sahf
and
adc
or
inc
dec
push
mov
jbe
mov
xchg
scas
and
in
hlt
es
fs
cs
dec
xchg
pusha
and
mov
loop
inc
rorb
inc
clc
add
or
dec
cmp
adc
inc
dec
sub
and
inc
enter
mov
aam
push
ficoml
adc
pop
push
mov
sbb
push
dec
addl
dec
js
add
xlat
add
inc
and
add
xor
sbbl
loop
repz
and
inc
pop
push
pusha
push
mov
add
inc
aaa
cmp
sbb
out
orb
mov
cmp
jne
insb
add
push
pop
pop
les
sbb
sbb
pop
push
jle
cmp
sbb
jnp
jl
lea
cmp
jb
outsb
je
insl
gs
out
outsl
out
and
test
movsb
adc
dec
inc
pshufw
or
add
xor
cmp
adc
inc
insb
je
outsl
jp
in
scas
cld
out
jp
sbb
jle
jo
nop
sub
aaa
push
outsb
outsl
je
ret
or
push
data16
stc
je
sub
cmp
push
test
jp
je
jns
or
jne
pop
jbe
aad
jecxz
inc
push
jns
mov
gs
pusha
aaa
pop
push
xchg
js
push
fldl
cmp
into
dec
jo
mov
fs
and
repnz
sub
cmp
dec
pop
andb
pop
pop
inc
and
xchg
insl
adc
lods
jns
push
and
outsb
sbb
jb
mov
mov
mov
test
mov
xor
mov
lahf
push
mov
pop
inc
push
insl
lcall
imul
jne
sub
pusha
sub
sub
inc
ret
outsb
addr16
or
cmp
orb
aam
cmp
data16
xlat
jns
stos
inc
sub
in
push
aaa
mov
mov
jns
sub
mov
and
and
and
aad
cmp
inc
cs
add
xchg
out
sbb
dec
xor
fidivl
test
loop
xchg
or
cld
ret
add
je
dec
popa
addr16
aaa
sahf
jbe
push
push
jecxz
pop
xor
adc
push
lret
mov
cmp
jae
popa
addr16
inc
lret
js
sets
pop
xor
cs
clc
rclb
sahf
mov
pushf
lahf
into
adc
mov
sub
insl
sbb
and
xchg
jns
iret
enter
ja
or
enter
fcomps
outsl
jbe
in
pop
cltd
test
jg
jns
lods
adc
xchg
sti
adc
sub
test
inc
add
dec
inc
pop
arpl
inc
gs
addr16
jne
iret
dec
or
mov
adc
inc
push
add
adc
gs
adc
cmp
xor
mov
out
inc
inc
mov
lret
adc
push
xchg
cli
xchg
adc
pop
adc
jne
fimull
xor
push
add
pop
sbb
xchg
inc
cwtl
adc
push
cmpsb
lods
inc
mov
mov
add
or
mov
test
inc
js
inc
mov
cmp
sub
sub
ret
test
insb
movsl
adc
adc
or
add
mov
xor
sbb
jb
loope
imul
out
and
mov
sub
sbb
daa
push
mov
sbb
adc
sbb
xor
push
or
outsl
mov
sbb
or
mov
dec
mov
inc
push
cwtl
jns
or
shrb
mov
push
or
mov
jne
mov
sbb
jne
data16
dec
imul
jo
inc
loop
adc
push
std
out
jno
fldcw
call
dec
jae
xchg
adc
pop
ret
bound
push
xchg
gs
push
clc
push
ss
insb
cmp
and
pop
int3
lds
mov
popa
inc
repz
sub
and
mov
outsb
or
dec
bound
push
cmp
inc
dec
push
xor
cltd
push
inc
fisttpl
add
xor
sbb
jne
sbb
sbb
pop
movsl
dec
test
je
and
push
cltd
push
xchg
and
arpl
jns
push
loop
inc
dec
adc
test
dec
imul
and
adc
jnp
imul
adc
out
insb
gs
mov
fisubrs
xchg
inc
push
pushf
fmuls
aad
and
push
subb
xchg
xchg
scas
addb
loopne
dec
add
xchg
mov
test
loopne
sbb
push
jne
jns
leave
or
loopne
inc
xchg
dec
jl
movsb
adc
adc
lods
jne
and
bound
push
leave
imulb
sub
movsl
xchg
mov
cs
push
dec
rorl
in
push
add
and
push
leave
mov
addr16
mov
jecxz
push
inc
loopne
sbb
sub
xor
inc
or
dec
dec
outsb
int
dec
xchg
inc
ds
jmp
sub
push
xchg
sbb
pop
adc
lods
add
push
inc
dec
inc
sub
xor
inc
add
and
sub
add
adc
cmp
cmp
dec
xchg
loop
mov
jo
xchg
ret
mov
inc
push
int3
push
dec
movsl
hlt
adc
test
lret
jae
outsb
or
or
push
xchg
and
loop
cwtl
add
and
xor
shll
jo
dec
push
fs
dec
push
dec
dec
or
add
sbb
adc
insl
and
movsb
mov
sarb
jae
sub
mov
pushf
out
mov
xchg
fistpll
test
lods
push
inc
mov
mov
push
icebp
cmp
dec
jp
jne
enter
adc
sbb
cwtl
adc
pop
and
les
cmp
mov
sbb
popl
push
xor
testl
mov
cmpsb
mov
int3
xchg
lret
movsl
pop
ja
nop
rclb
push
fnstsw
into
or
sbb
in
jb
ds
adc
push
and
dec
jo
bound
insb
jae
jns
into
xchg
and
xchg
push
or
or
pop
or
and
sbb
popa
sub
nop
orl
cld
or
jns
push
scas
movsb
push
xchg
mov
sub
scas
fidivrs
lock
sbb
or
dec
loop,pt
sbb
dec
cmpsl
sbb
cwtl
adc
in
push
outsl
out
loopne
nop
test
or
cli
shlb
lret
insl
cltd
outsb
and
push
enter
push
push
lret
cmc
sbb
sbb
add
inc
dec
test
mov
sub
mov
imul
xchg
inc
push
cmp
xchg
movsb
xor
cltd
jne
es
push
mov
cltd
dec
in
adc
ja
push
fildll
mov
ret
adc
cwtl
add
roll
cmp
mov
adc
sbb
lock
and
mov
pusha
inc
mov
xor
push
subb
push
cltd
movsb
loopne
nop
adc
les
cmp
loopne
ds
or
dec
adc
int3
cmp
inc
insb
cmp
lock
xor
inc
mov
roll
or
or
xchg
cmp
push
inc
arpl
adc
xchg
leave
and
inc
lock
push
mov
xor
xchg
bound
jbe
mov
and
dec
call
lds
push
add
xchg
add
cmp
jo
pop
or
and
rorb
add
mov
adc
adc
adc
adc
sbb
loopne
loopne
cwtl
cmp
pop
mov
mov
adc
es
adc
shll
in
lods
mov
and
rep
jo
call
rorb
pop
int
push
and
shll
repnz
in
enter
cmp
pop
fcoms
inc
push
jne
jo
jo
enter
std
inc
cmp
aad
adc
or
push
fs
rclb
movsb
adc
rclb
test
mov
rclb
dec
ja
loopne
adc
bound
inc
out
imul
jb
push
mov
push
int
and
cmc
cmp
sub
popf
add
fidivrs
add
adc
pop
stos
jg
in
imul
jo
dec
push
ret
lock
orl
xor
xor
cmp
xor
or
aas
aaa
lea
push
inc
pop
jnp
jge
fs
inc
call
mov
xchg
and
dec
push
mov
bound
je
push
mov
dec
imul
jo
jo
push
jo
repnz
cltd
mov
dec
jb
mov
adc
inc
mov
xchg
insb
gs
adc
lods
push
fcompl
push
cmp
pop
jo
push
inc
push
popa
lret
insb
nop
je
push
push
xchg
xor
popa
gs
or
xchg
sbb
dec
xor
pop
lcall
mov
jle
gs
sbb
push
or
push
test
and
jbe
imul
imul
sarw
jl
and
into
insl
inc
or
xchg
bound
dec
fsts
push
push
pushf
js
jo
jb
sbb
push
bound
mov
lea
and
in
and
inc
lcall
into
mov
xor
sub
xor
inc
fldenv
adc
roll
pushf
xor
cmp
mov
int
inc
and
sub
movsb
repz
cltd
or
arpl
arpl
dec
sti
arpl
loope
ret
xor
jl
sbb
xchg
movsl
roll
sub
dec
jno
dec
adc
loop
sbb
lds
adc
insl
cmp
sub
imul
adc
mov
nop
adc
dec
inc
and
insb
popf
lcall
imul
inc
cmp
in
sbb
push
jp
outsb
sub
shrb
jp
pusha
mov
sar
sub
or
cs
insb
add
into
out
push
rcl
and
xor
rcrb
jae
pushf
gs
or
xor
in
aas
clc
mov
mov
push
dec
fldl2t
and
aaa
adc
movswl
sub
mov
je
inc
mov
cs
imul
push
or
or
pop
jb
push
dec
loopne
xor
lcall
xchg
sbb
xor
cs
aaa
jl
and
or
nop
push
inc
dec
std
imul
dec
cmpsl
movsl
pop
mov
dec
cwtl
pop
ja
test
jno
loopne
mov
inc
scas
or
lods
fsubrp
mov
incl
cltd
lock
ret
push
push
dec
pop
sbb
loopne
or
call
fsubrl
sbb
and
insl
adc
adc
and
sub
fs
or
movsl
inc
push
add
scas
and
inc
cwtl
add
je
mov
adc
inc
sbb
mov
mov
adc
enter
nop
xchg
sbb
push
sbb
clc
mov
sbb
rorb
xchg
shlb
inc
mov
mov
dec
call
fs
push
or
mov
movsl
lret
icebp
fstpl
jb
xchg
push
jp
repnz
std
or
dec
adcb
nop
test
add
rolb
adcb
cmp
cltd
xor
les
add
sbb
xchg
jns
adc
cmp
nop
cmp
xchg
add
pop
dec
js
or
and
dec
and
bound
movsl
mov
sbbl
ret
popa
shll
cmp
mov
xor
iret
mov
in
call
nop
adc
add
popf
rcrb
adc
mov
loopne
or
mov
adc
or
add
sbb
add
dec
push
xchg
or
or
or
or
cmp
dec
sbb
xchg
addps
adc
sbb
and
inc
jb
cltd
xor
dec
sbb
or
pusha
sub
xchg
insb
sbb
insl
xchg
and
jo
sbb
scas
lods
push
push
xor
xorb
xorl
dec
xchg
adc
and
mov
cmpsl
mov
mov
xlat
leave
sbb
dec
adc
and
fsubs
inc
cmp
cmp
xor
xor
xchg
sub
and
sbb
mov
or
and
inc
mov
adc
and
dec
enter
rolb
mov
mov
test
pushf
xchg
xchg
sub
inc
je
mov
push
and
dec
inc
xchg
inc
and
inc
and
mov
pop
add
push
add
cltd
add
repz
xorb
sbb
icebp
incl
push
lahf
dec
mov
inc
pop
inc
mov
or
call
cmp
mov
or
adc
inc
xor
insl
repnz
xor
cmp
mov
rcll
repnz
adc
and
dec
inc
insb
sbb
mov
mov
jns
lret
das
inc
add
or
sbb
loopne
push
push
nop
add
popf
push
nop
pop
or
adc
or
pop
pop
jns
insb
add
push
sahf
js
repz
or
outsb
sub
repz
sub
int3
and
xor
inc
mov
enter
aam
push
push
xchg
popa
sub
xchg
pop
sbb
add
xor
andb
jo
imul
ss
push
jo
inc
insb
movsl
jbe
mov
shrb
je
ror
add
test
xor
gs
jns
mov
push
push
adc
cmc
xor
and
insl
leave
sbb
mov
ds
mov
inc
jmp
jle
nop
pop
xor
push
cltd
subl
sub
es
popf
push
adc
mov
inc
inc
push
jle
dec
and
inc
stos
sub
popf
sub
add
xlat
std
xor
mov
mov
adc
xor
syscall
xor
in
call
clc
pop
cmp
pusha
cmp
mov
cmp
aas
out
cmp
inc
dec
outsb
mov
orb
dec
popf
mov
xor
test
mov
in
call
shl
dec
cmp
jge
cmpl
aas
out
push
pop
and
lahf
sti
push
cmp
inc
dec
dec
mov
jo
jp
mov
ror
ret
sub
xor
pop
ret
shll
js
repz
rep
repz
shl
repz
mov
call
or
cmp
cmp
cmp
sarl
aas
sarb
aas
idivl
decb
imul
xchg
iret
popf
shld
cmp
dec
jg
mov
jmp
add
jbe
xchg
bsf
xorl
stc
xchg
jmp
icebp
mov
loopne
jp
adc
cmp
fdivs
mov
shr
out
in
lock
cmp
push
cmp
cmp
jle
pusha
hlt
push
fidivrl
xchg
stc
fwait
stc
mov
stc
sar
in
icebp
clc
add
sbb
aaa
js
jp
jl
jle
jle
jle
jle
sbb
ss
sahf
mov
mov
push
aaa
es
inc
inc
push
xchg
xchg
mov
cmp
and
or
in
lahf
clc
lahf
incl
fstpl
fcomps
push
cmp
daa
sbb
xchg
dec
push
out
out
out
out
in
dec
clc
lret
lahf
fcompl
negb
or
adc
addr16
xchg
inc
cld
dec
cld
dec
cld
push
cld
pop
cld
std
and
outsl
cld
jbe
jl
cmp
cld
nop
cld
xchg
xchg
and
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
cmp
popf
sbb
xor
cmp
lahf
pop
lahf
pusha
lahf
negl
dec
popf
push
sbb
mov
mov
lahf
testl
lods
xchg
aas
sub
pop
sarl
loope
jmp
pop
pop
sbb
loope
jmp
jg
mov
mov
mov
clc
pop
xor
je
dec
jae
cmp
aam
cli
push
add
and
mov
outsl
jle
daa
mov
out
out
loop
xor
mov
scas
fmuls
and
js
jp
jl
dec
mov
adc
add
push
jmp
jmp
repnz
std
std
or
push
fnstcw
icebp
idiv
xor
daa
dec
inc
push
addr16
out
lock
loope
cmp
leave
shrl
jmp
cld
clc
pop
cmp
je
jbe
js
jns
jnp
jge
nop
push
jb
je
loopne
jb
je
jbe
sbb
cmp
mov
hlt
cmp
push
sub
push
dec
lea
in
mov
popf
popf
ljmp
cli
loop
in
hlt
sbb
cmp
mov
push
int
aam
ffreep
das
xor
in
call
movsl
hlt
lods
clc
mov
cld
loope
jmp
es
sahf
jb
js
jle
test
xchg
lahf
pushf
lahf
mov
lahf
mov
mov
xchg
pop
daa
addl
sub
dec
rcll
push
jne
jnp
cmp
test
mov
int3
stc
loop
call
cmp
js
jp
push
cmp
dec
adc
xchg
jge
mov
outsb
xchg
mov
sbb
xor
xchg
xor
mov
mov
sbb
lahf
xchg
pop
cwtl
xchg
inc
test
movsb
enter
stos
sbb
cmp
push
sbb
mov
addr16
xchg
cmpsl
rol
aad
fabs
nop
cmp
jb
je
jbe
sbb
aas
adc
dec
pop
push
mov
jnp
mov
out
out
out
out
in
or
lock
pop
xor
sub
inc
cld
dec
cld
lahf
cmp
lods
cmp
cmp
testl
daa
lahf
sti
cmp
cmp
push
aas
insl
aas
jae
jle
cmpl
aas
xchg
aas
mov
adc
gs
sti
mov
rcl
jecxz
repz
repz
loop
call
aaa
sbb
sub
xor
pop
bound
insb
cmp
cmpb
pop
lahf
fstps
je
ja
addb
stos
shll
loop
icebp
lock
ss
mov
jb
push
sbb
adc
and
test
pop
sub
jl,pt
je
mov
jp
jl
jle
jle
jle
jle
jle
jle
jle
pop
mull
adc
sbb
mov
jb
js
mov
cs
xchg
ss
or
push
xor
es
mov
test
mov
mov
repnz
sti
clc
add
jb
je
jbe
js
jp
jl
jle
jle
jle
pop
scas
or
aam
fimull
std
loop
xor
push
sub
cmp
push
loope
jmp
out
stc
hlt
clc
push
xor
and
inc
dec
pop
mov
lcall
inc
push
movsb
lods
sarl
fcomi
divb
je
jbe
js
jp
jl
dec
mov
lahf
in
lahf
xrelease
push
daa
popf
inc
loop
lds
fmulp
adc
jb
je
jbe
js
jp
jl
jle
pop
xor
push
cmp
cmp
lahf
ret
lahf
ljmp
insl
scas
jns
xchg
cmpsl
dec
rcl
not
out
loope
cmp
leave
xchg
shrl
cmp
cmp
loopne
push
add
push
xchg
sub
cmp
pop
jmp
jbe
xchg
mov
stc
int
sub
addb
xor
sbb
pop
cs
cmp
xor
dec
mov
mov
or
adc
cmp
inc
rorl
leave
repz
jecxz
jmp
xor
in
call
mov
out
in
xchg
xor
cmp
adc
and
push
cmp
dec
daa
mov
iret
xor
cmp
mov
and
adc
aas
mov
aas
les
enter
cmp
and
test
mov
loope
or
xchg
dec
push
push
xchg
push
pop
cmp
repz
mov
mov
jmp
fcoms
jb,pt
je
std
fdivrs
out
repz
nop
and
push
xor
popf
sbb
outsb
lahf
pop
xchg
lahf
mov
rolb
out
lock
or
adc
sbb
and
clc
imul
orb
aas
fstpt
loopne
in
ljmp
add
stc
repz
add
dec
push
ljmp
jmp
mov
fdivr
lock
idiv
clc
add
jb
dec
or
scas
pop
pcmpeqw
les
loop
call
es
and
xor
xchg
mov
adc
cmp
adc
sbb
sbb
and
sub
and
test
mov
mov
jecxz
jmp
loope
aaa
or
rcrl
fldenv
loope
jmp
mov
pop
lahf
lahf
ljmp
push
lock
cld
adc
ss
cmp
cmp
xchg
xchg
pop
mov
daa
insb
out
push
cmp
pop
leave
in
sub
hlt
xchg
push
popf
ror
loop
pop
pop
sbb
cmp
fidivrs
setge
cmp
adcl
mov
pop
mov
arpl
shll
push
aas
xchg
and
pop
lahf
into
lahf
out
xchg
and
mov
ss
movsb
sub
push
movsb
pop
sub
sub
div
cld
hlt
or
xor
in
ljmp
daa
push
shll
adc
daa
flds
xchg
in
mov
mov
xor
dec
or
and
mov
adc
data16
leave
lea
ds
pop
rep
mov
sbb
aaa
inc
popf
dec
sbb
imulb
iret
jl
test
mov
pushf
sub
lods
aas
mov
mov
aas
shlb
push
pop
fcomps
pop
gs
xchg
bound
sub
dec
add
xchg
mov
call
mov
pop
les
cmp
cmpsl
ds
loopne
in
call
hlt
cld
clc
cld
cld
mov
or
sub
adc
adc
sbb
and
and
sub
sub
xor
sahf
fcompl
inc
movsb
sbb
dec
lahf
dec
xchg
push
or
repz
inc
jb
stc
jl
cmp
stc
nop
test
dec
in
popf
add
incl
test
andl
arpl
jb
outsl
js
jmp
test
sbbl
jg
xor
xor
pop
adc
stos
mov
in
hlt
inc
jno
cld
push
iret
insb
push
arpl
mov
and
push
jo,pn
bound
add
xor
sub
or
repz
je
jns
stc
hlt
xor
repnz
push
add
std
mov
push
add
xorb
ss
mov
xor
paddb
pop
and
cmp
add
into
jae
mov
lret
or
and
adc
dec
mov
sbbb
xchg
movsl
jae
test
mov
or
add
or
movsb
adc
inc
mov
push
inc
add
fldt
or
movsl
mov
stos
add
lods
mov
push
lret
add
jmp
out
jp
pop
or
push
gs
and
sbb
xor
pop
add
adc
inc
jne
add
popa
outsb
jbe
xchg
inc
push
or
push
push
xor
or
adc
jp
test
jne
push
xor
sub
sbb
push
pop
clc
mov
jo
outsb
addr16
inc
or
push
pop
or
pop
or
in
daa
dec
jge
xor
push
sahf
lods
jmp
sbb
push
adc
sarb
imul
dec
mov
sub
sub
and
enter
lods
insb
mov
inc
mov
and
cli
push
add
jo
xor
add
inc
test
int3
int
scas
lock
lods
add
icebp
ffreep
add
mov
fs
fidivrl
test
add
imul
pusha
sahf
xor
in
js
aas
ja
sahf
outsl
cmp
xchg
scas
or
insb
xchg
lret
sub
cmc
mov
pop
pop
sbb
add
movsb
mull
enter
dec
push
jecxz
push
pusha
in
inc
sbb
mov
mov
xchg
xor
add
inc
and
inc
jae
push
sub
xor
fisubrs
das
stos
out
ret
sub
ret
mov
xchg
sbbl
outsl
jne
cmp
es
lret
adc
push
rorl
add
inc
dec
fnstsw
and
daa
rcrl
add
lahf
xor
icebp
out
sbb
les
sbb
push
nop
add
pop
cmc
out
jl
jge
push
bound
popl
or
rolb
test
push
int
mov
out
mov
dec
fldenv
adc
mov
shll
add
fildl
or
jmp
es
lods
adc
aam
sbb
push
das
and
jae
jbe,pn
js
das
aas
jg
insl
cmp
sbb
pop
jnp,pt
lar
pop
add
repnz
cmp
imul
cmp
das
fwait
sub
sub
xchg
sbbl
xchg
xchg
rorb
adc
add
mov
mov
pop
gs
rclb
imul
mov
cmpl
pop
ret
sbb
mov
sub
add
rorb
add
fisttps
sub
xchg
adc
add
or
das
add
mov
leave
clc
dec
lcall
aas
aaa
and
jo
xor
cmp
xchg
add
iret
push
xchg
dec
and
test
scas
mov
inc
repz
add
leave
fstps
mov
mov
mov
mov
cmc
iret
or
lock
sub
sarl
push
sbb
cmp
mov
les
decl
add
addr16
sub
aam
sub
mov
xor
icebp
or
xchg
scas
dec
mov
xor
or
lods
mov
push
sub
shrl
test
sbb
pop
jle
mov
cmp
adc
adc
add
imul
roll
or
mov
push
add
popa
fcomps
fnsetpm(287
mov
out
frstor
sbb
pop
jl
xor
mov
jbe
dec
filds
andb
pop
fmull
testl
and
dec
inc
add
into
ffreep
pop
push
add
cmpl
stos
push
add
mov
lahf
out
pop
push
inc
cmp
sar
add
inc
out
mov
push
outsb
movsl
sub
mov
add
sub
faddl
mov
jnp
or
sahf
imul
jmp
inc
cltd
add
lods
cmp
add
outsl
dec
shll
sbb
mov
insl
jp
stc
push
out
lods
scas
out
cltd
add
inc
sub
mov
aam
stos
sub
push
in
cmp
mov
mov
addb
call
lret
jle
or
add
sub
sub
sub
inc
and
test
jg
xchg
xchg
jl
shr
adc
js
fimull
and
pop
loopne
leave
xorb
std
pop
mov
pop
ret
inc
int
hlt
push
fadds
stc
dec
shlb
xor
add
cmc
je
aam
ficomps
pushf
and
mov
inc
mov
out
pop
inc
cmpsl
daa
xchg
add
inc
sti
lret
inc
add
int3
fwait
push
pop
add
outsl
repz
and
repnz
in
add
shrb
jmp
pop
out
jae
clc
mov
jp
stos
mov
mov
dec
jne,pn
dec
inc
es
lods
add
ja
xchg
andb
add
iret
mov
jne
mov
fyl2xp1
add
push
es
mov
xchg
mov
add
xor
pop
add
mov
and
add
rcl
xor
dec
inc
in
cmp
add
and
movsl
out
xchg
add
jo
ds
or
jl
jbe
imul
xor
scas
sbb
sub
mov
fcomps
mov
aam
popf
add
lods
pusha
out
add
lret
or
mov
mov
iret
dec
add
sbb
adc
xor
ljmp
popa
pop
iret
and
and
ljmp
popa
mov
movl
icebp
jns
test
push
sahf
orl
xorl
adc
jne
je
dec
std
sbb
imul
cmp
cmp
test
push
or
push
outsl
data16
xlat
jp
cmp
cltd
lcall
jo
and
xchg
sub
mov
bound
mov
pusha
jno
mov
or
scas
push
mov
out
sub
add
dec
sti
add
cmp
or
mov
jge
cli
xchg
jg
or
packssdw
inc
push
mov
test
ljmp
out
cli
stos
add
cmc
lock
pushf
sub
repnz
data16
rcrb
mov
push
and
and
insb
cmp
scas
sbb
subb
call
add
push
icebp
in
int
clc
lock
aam
shl
add
lea
add
push
insl
pavgw
cltd
loop
inc
jl
xchg
push
add
xor
test
lock
jbe
add
jno
pop
and
cli
mov
xchg
add
out
push
dec
repnz
xor
fldcw
mov
ljmp
adc
arpl
cmp
mov
add
mov
mov
divps
add
sub
mov
std
push
or
xchg
fnsave
movsl
sbb
add
out
push
jo
loope
add
outsl
cmp
ret
call
test
xchg
adc
and
cmp
pusha
test
jp
inc
rolb
pop
pop
add
sub
mov
sbb
mov
test
mov
xchg
test
mov
pop
xor
sbbl
mov
or
test
arpl
add
xor
jbe
dec
add
and
ret
cmp
adc
into
xor
sub
push
push
inc
adc
cmc
push
call
inc
fs
iret
pop
add
lds
and
add
sub
mov
pop
adcb
jo
in
mov
cmp
lret
cmpsl
mov
cmp
mov
cli
fs
movsb
in
dec
inc
add
scas
cs
stc
sbb
movq
jmp
add
sbb
mov
xchg
icebp
movsb
pop
bts
es
add
or
lock
xchg
adc
dec
or
sbb
and
loopne
aad
push
cwtl
mov
subb
int
mov
xchg
jne
mov
ljmp
jge
push
pop
xchg
pop
lret
xor
rcrb
jp
mov
xor
or
fnstenv
add
xor
pop
add
inc
aad
mov
or
sbb
nop
sub
push
aaa
sbb
pop
test
inc
or
or
and
mov
xor
xor
arpl
xchg
and
inc
or
mov
out
dec
dec
cmp
pop
inc
dec
adc
add
xor
ret
mov
sbb
pop
shl
inc
push
or
inc
mov
mov
jbe
lods
popa
out
nop
mov
lahf
sbb
lea
in
adc
inc
mov
inc
push
out
jl
add
test
mov
test
jb
mov
es
out
dec
or
push
add
push
loope
mov
loopne
pushf
out
js
test
jae
inc
jnp
xchg
sbb
les
add
clc
xor
mov
jne
jecxz
push
fnstenv
mov
inc
cmp
sub
mov
mov
add
sti
inc
cmc
or
jbe
add
mov
roll
notl
movsl
jns
or
xchg
inc
jg
call
dec
mov
or
xorb
mov
cmp
xchg
sbb
xor
push
inc
jb
sub
pusha
lods
sbb
fdivrp
icebp
lods
jae
xorb
jle
inc
addr16
aas
scas
es
xchg
into
lods
popa
cwtl
dec
xchg
call
pop
pop
stos
sbb
xchg
jge
rcll
movsl
push
mov
sbb
jns
js
stos
add
shrb
cmc
sub
das
dec
inc
add
fbstp
push
or
jno
add
cmpsl
outsl
xor
xchg
test
cli
int3
push
sub
sbb
ja
mov
mov
add
dec
pushf
cmp
xchg
adc
push
int3
hlt
pop
mov
push
lods
or
sti
mov
add
mov
xchg
fsubrl
je
add
mov
pop
insl
add
gs
daa
imul
adc
cmp
mov
fwait
gs
fldt
ss
push
aas
lods
int3
add
and
xlat
pop
mov
add
add
xchg
dec
out
xchg
data16
add
ret
jl
loop
cmpb
addr16
add
bound
les
ret
add
in
dec
pop
in
add
push
test
ss
aas
sub
xchg
nop
adc
add
hlt
pop
jno
add
jnp
imul
movsl
aas
cs
inc
push
addb
cmc
rorb
or
jo
mov
mov
push
add
jmp
xor
cs
pop
into
inc
push
gs
mov
test
adc
adc
pushw
daa
bound
mov
int
dec
pop
push
ds
pop
sub
jae
cmp
pop
push
mov
arpl
repnz
mov
adc
adc
add
into
pop
jecxz
scas
push
jo
test
sbb
xor
inc
adc
out
add
add
add
add
sahf
xchg
mov
jge
lods
add
jb
xor
dec
add
jne
sarb
out
dec
inc
js
pop
fisttps
nop
inc
mov
outsl
cwtl
psubb
lods
and
sub
movsb
leave
add
lret
push
movsl
js
push
cmp
and
xor
jbe
adc
fs
gs
subl
mov
rcll
jbe
ds
sti
jnp
mov
mov
pop
movsb
jbe
pop
pusha
invd
loopne
rorl
ret
pop
cmp
sarl
cwtl
cvtps2pd
das
or
xchg
ds
mov
push
add
addr16
jg
fdivs
fistps
or
shlb
fldt
jne,pt
adc
xchg
push
push
roll
cwtl
ss
adc
inc
and
inc
outsb
adc
or
push
push
imul
xchg
jno
adc
dec
repnz
testb
dec
or
inc
inc
adc
xor
iret
imul
insb
adc
fs
je,pt
int3
push
mov
dec
and
inc
xchg
and
call
mov
inc
jg
adc
xchg
inc
faddp
mov
mov
mov
fmul
add
push
xchg
movsb
cmpsb
mov
shr
add
jnp
push
adc
xor
inc
inc
add
dec
test
outsl
pop
lret
dec
rcrl
push
outsb
int3
add
popl
and
cli
mov
dec
addr16
test
mov
add
jmp
ds
in
pop
mov
sbb
lock
inc
dec
jne
add
dec
add
cmp
mov
or
enter
pop
scas
mov
sbb
lods
sub
mov
cmp
add
xor
xchg
push
dec
sti
dec
stos
pop
mov
iret
mov
mov
sbb
mov
rolb
pop
incl
loopne
sub
pop
stos
add
lock
sub
adc
lds
test
aad
mov
insb
pop
and
ljmp
add
dec
pop
cli
add
fwait
insl
cmp
xchg
test
xor
cli
mov
ljmp
js
daa
sub
hlt
dec
enter
adc
leave
add
out
add
xor
or
inc
mov
push
fimull
sub
in
mov
in
flds
push
mov
mov
adc
add
cmpsb
push
xchg
add
xor
mov
ret
push
add
out
mov
or
mov
aas
add
adc
dec
add
test
js
in
add
xchg
or
ret
out
add
das
pop
jg
xchg
imul
fwait
sbb
fisubs
jbe
add
inc
jmp
fnstsw
clc
mov
fisubrl
push
scas
in
dec
xor
sub
mov
pop
stos
jae
add
into
vmulss
jmp
add
test
pop
das
sbbb
jae
or
adcb
popl
shrb
inc
loope
push
add
mov
cwtl
clflush
lret
mov
xor
dec
add
in
cld
loope
or
test
leave
mov
mov
mov
mov
pop
test
hlt
sbbl
add
or
sti
js
sbb
push
xchg
or
and
and
and
cs
add
fs
mov
push
or
push
push
rolb
sbb
push
popa
cmp
in
mov
add
int3
fwait
mov
cmp
sarb
sbb
push
adc
cli
movsb
sti
test
dec
sbb
lret
sbb
jne
jns
add
cmp
nop
xchg
daa
jo
int
and
sbb
add
and
fadds
or
sbb
add
int3
ja
pop
in
push
adc
movsb
jbe
jae
enter
add
dec
cmp
arpl
or
xor
call
xchg
or
mov
fs
daa
call
popf
lcall
or
add
xor
xchg
or
mov
or
out
xor
in
xor
or
xor
jae
cmp
jl
out
xor
mov
xchg
mov
stos
and
shrb
push
lret
add
jne
leave
shrl
add
mov
rcr
cmp
mov
add
call
std
faddl
jo
leave
add
and
or
cmp
cmpb
sub
cmc
xchg
cwtl
popf
testb
sbb
add
mov
ss
insb
cmp
add
jno
lcall
sbbb
mov
daa
and
int
add
pop
popa
add
es
mov
push
arpl
sti
rclb
inc
dec
pop
ds
push
mov
movsb
das
testb
aam
test
repz
out
pusha
jle
setno
mov
lds
adc
pop
repnz
push
add
sbb
lcall
adc
int
mov
xchg
or
adc
push
add
mov
add
movsb
dec
pop
mov
imul
pop
add
and
mov
sub
push
mov
cmp
ja
add
mov
sbb
push
sbbb
sbb
pop
fwait
mov
pop
xchg
mov
adc
sub
ds
and
pop
cs
lods
adc
and
fistpll
lahf
mov
pushw
movsb
dec
adcb
call
adc
jae
xor
adc
nop
test
push
test
dec
loop
rcrb
stos
sub
out
lock
mov
and
popf
std
popf
sub
xchg
sbb
loop
lods
ljmp
sti
outsb
adcb
in
add
in
and
xor
or
or
xchg
mov
adc
push
enter
std
cwtl
subb
xchg
add
push
xor
imul
out
std
cs
adc
out
icebp
jp
pop
fcoms
or
add
add
or
inc
jae
cmp
punpckhwd
inc
rolb
out
shr
sarb
jmp
sbb
adc
test
push
jge
sbb
rolb
mov
xchg
pop
add
push
add
shl
or
pop
cli
add
lret
jne
rclb
push
pop
sbb
or
jb
inc
inc
scas
mov
xor
lds
push
lods
sub
pop
test
xchg
mov
mov
shlb
ret
mov
fidivrl
sbb
inc
push
fbld
cmp
jbe
lea
ljmp
rorl
pop
sub
push
xchg
dec
jo
add
push
pop
es
ja
push
ret
mov
dec
lcall
je
idivb
mov
scas
sbb
sbb
mov
fwait
adc
jno
xor
js
movsl
jle
shl
fldl
inc
js
push
dec
sub
inc
sbb
mov
mov
adc
jae
jnp
sti
ljmp
cpuid
pop
mov
sbb
mov
add
mov
pop
insl
in
xchg
adc
cmp
adc
clc
pop
hlt
cmp
and
adc
inc
call
addb
in
sbb
and
inc
and
fnstenv
push
jno
mov
jb
sub
push
jmp
js
add
jae
nopl
inc
xor
add
mov
mov
sub
and
mov
adc
std
push
add
inc
enter
dec
inc
stc
aam
mov
leave
pop
pop
push
push
in
pop
adc
aaa
mov
test
bound
dec
cld
icebp
add
ljmp
prefetcht0
jo
pop
cmp
push
je
or
adc
mov
sbb
and
es
fistpl
dec
add
lahf
push
add
ret
push
mov
sbb
push
dec
ds
adc
pop
or
push
pusha
mov
test
push
push
dec
insb
cmp
clc
jp
cli
lock
lock
lods
xor
push
sti
or
inc
adc
add
jno
mov
pop
test
xchg
pop
lret
push
add
dec
adc
and
push
or
xor
leave
hlt
xor
pop
mov
es
push
aas
xchg
push
add
es
inc
rol
pop
subb
in
cmp
mov
mov
popf
or
daa
ja
lret
mov
inc
inc
and
sbb
lea
add
push
inc
and
and
xorl
rcll
jae
sub
push
ror
mov
stc
fstl
leave
add
pop
cmpsb
cmp
sbb
fdivl
pushl
xchg
adc
fimull
je
nop
adc
inc
clc
inc
cli
gs
sti
inc
or
ret
jno
jns
mov
adc
cli
dec
sbbl
rcll
sub
out
sarb
inc
add
push
adc
add
je
dec
out
out
dec
adc
and
stos
or
or
adc
inc
pop
mov
pushf
adc
ret
outsb
subb
push
and
rol
pop
adc
sarl
pop
sbb
sti
mov
add
and
les
sbb
ret
push
inc
add
clc
adc
ja
inc
pop
mov
push
fcomip
aad
add
mov
adc
sbb
jo
or
adc
adc
hlt
mov
pop
add
inc
add
and
mov
sti
hlt
cmp
pop
xchg
rorl
push
sbb
mov
movsb
nop
adc
sub
xchg
bound
inc
pushf
push
push
push
push
je
lcall
lock
inc
outsl
out
xor
iret
add
dec
jne
adc
pop
loopne
cmc
imul
xchg
and
lcall
lock
call
rcrb
and
add
and
sub
lcall
or
sarl
jb
xlat
xor
frstor
imul
inc
inc
les
hlt
add
jb
fidivl
push
cmp
mov
push
lcall
adc
adc
movsb
xchg
nop
xor
ret
outsb
xchg
aas
jmp
dec
xchg
mov
jne
outsl
dec
or
xor
nop
xchg
mov
mov
add
movl
leave
jge
lcall
sar
cmpsb
into
add
xor
je
mov
test
clc
mov
test
lcall
mov
push
mov
lea
dec
xchg
xchg
pop
mov
push
pop
mov
mov
adc
repnz
cwtl
mov
push
test
sub
mov
mov
test
add
inc
push
pop
lock
dec
dec
iret
mov
inc
rcrb
mov
fs
pop
cltd
dec
sbb
std
inc
mov
das
push
xchg
dec
lret
scas
inc
cltd
add
and
xor
enter
inc
mov
int3
add
lea
mov
pop
mov
inc
xchg
xchg
sbb
dec
jb
js
sbb
pop
or
out
inc
adc
add
imul
test
nop
pop
test
dec
sbb
pushf
into
sub
inc
push
or
xor
push
dec
popf
ficoms
rorl
clc
dec
lcall
and
inc
xchg
and
pusha
pop
xlat
lcall
daa
clc
and
test
movsb
rorl
and
fldenv
cmp
cltd
jae
inc
fs
cmp
and
pop
inc
add
pop
pop
add
out
mov
adc
cmp
xchg
fnsave
sub
push
mov
fcoml
push
sub
mov
mov
int3
xlat
or
xchg
dec
cmp
or
std
mov
push
xlat
add
adc
dec
cmpsl
dec
xor
insb
orb
sahf
adc
mov
int
mov
jg
mov
sbb
out
ds
inc
insb
sbb
repnz
jmp
and
cmp
inc
ficoms
andb
and
cmp
or
add
xchg
or
add
pop
mov
sub
xchg
xor
mov
adc
neg
push
pop
or
push
aad
nop
xlat
mov
ret
ljmp
xor
xor
mov
adc
pop
inc
adc
sub
adc
or
fiaddl
je
mov
cmpsb
sbb
aas
leave
xor
xor
es
sub
dec
shlb
push
push
mov
mov
jns
test
mov
or
mov
cs
sbb
int
jl
cmpsl
leave
adc
sub
nop
add
mov
push
jmp
and
sub
adc
adc
sub
fbld
push
mov
jne
data16
sub
or
ret
adc
xor
cld
and
aas
mov
stos
in
adc
xchg
mov
cwtl
test
sbb
adc
fcoml
mov
adc
stc
xchg
es
dec
call
stc
je
jmp
or
or
push
push
jno
pop
cwtl
xchg
mov
leave
mov
loope
adc
gs
sub
and
push
sbb
dec
js
fistpll
ret
inc
jmp
cmp
mov
xor
mov
add
sarl
cwtl
add
repz
movsb
stc
jmp
pop
xor
push
lcall
mov
jl
fucomi
xor
aas
movsl
subb
mov
xor
jmp
enter
popf
sub
test
or
mov
mov
push
and
jne
inc
pop
mov
mov
sub
fisubrl
les
cmp
mov
xchg
mov
iret
sub
les
sub
add
sub
mov
push
ss
icebp
xor
sub
jb
stos
jmp
mov
mul
xor
or
inc
divb
or
jne
cmp
sti
jo
ret
nop
jge
xlat
sbb
or
xorb
sbb
jmp
ljmp
xor
jl
pop
inc
daa
push
decb
inc
nop
cmp
xchg
inc
or
pop
mov
xor
mov
stc
add
pop
shrb
mov
enter
repnz
je
int3
outsl
jbe
ljmp
das
clc
add
mov
push
push
aam
dec
fimuls
orl
xor
rep
in
jmp
push
faddl
cmpb
push
xor
inc
cmp
lret
outsl
mov
and
mov
sub
sbb
inc
and
inc
xor
pop
pushf
movsb
dec
push
cwtl
and
cmp
int3
xchg
std
and
pop
test
sti
sti
adc
mov
cwtl
fistl
push
xchg
or
bound
push
inc
pop
mov
les
js
popl
sub
call
xor
call
push
sbb
imul
adc
sub
dec
pop
shrb
ret
jbe
push
daa
ds
jne
lods
push
cmp
push
add
xor
add
jb
adc
dec
shlb
mov
or
and
cmpsb
fisttpll
aas
pop
push
push
and
mov
adc
inc
adcb
mov
mov
add
and
xor
or
mov
test
fisubrl
mov
mov
je
or
sahf
mov
or
sub
pop
hlt
and
loopne
arpl
mov
or
jae
and
leave
mov
shll
cli
pop
test
push
call
into
jmp
je
nop
dec
daa
pop
rolb
or
jo
pusha
psllw
sti
cmp
cmp
and
mov
in
push
test
push
test
sbb
push
call
sahf
dec
adc
ss
or
xor
rcll
add
pop
adc
mov
insl
dec
fisubl
sti
add
ljmp
incl
icebp
hlt
and
push
dec
fs
xchg
cld
add
adc
adc
adc
mov
pop
cmp
loop
pop
adc
mov
and
jno
pop
and
jnp
sbb
sub
pop
adc
lahf
sbb
adc
inc
out
loope
mov
frstor
cli
bound
fucomip
cmpsb
call
sub
cwtl
clc
xchg
andb
rcll
cmp
or
xchg
fsubl
out
and
and
mov
adc
cmp
xchg
and
sbb
lds
inc
subl
xchg
mov
push
and
inc
jp
jp
mov
or
loope
adc
sti
fs
inc
xchg
mov
adc
enter
push
sub
dec
dec
cmp
sub
mul
je
sbbl
movsl
jae
adc
sub
stc
pop
ja
jnp
insl
inc
mov
or
mov
sbb
and
pop
jo
and
push
jns
pop
adc
xchg
clc
adc
and
sbb
sub
fsubrs
adc
movl
sbb
jo
lea
push
xorb
call
mov
push
push
xor
stc
and
push
or
mov
insl
ficoms
popa
iret
jnp
bound
push
sub
mov
ljmp
out
mov
or
dec
sub
sbb
jmp
adc
and
mov
dec
inc
mov
orb
shll
add
jp
fcomps
or
ret
add
dec
call
lds
outsb
cmp
cmp
ret
xchg
sub
push
push
out
test
push
popf
and
xor
push
and
outsl
call
push
dec
mov
lahf
or
adc
inc
inc
in
or
dec
sub
inc
add
inc
mov
inc
enter
ja
outsb
roll
jne
sbb
mov
xchg
aaa
pop
mov
jp
rcll
cmp
jae
popf
inc
push
sub
add
lock
push
sbb
jnp
push
add
imul
shlb
sahf
jne
cmp
add
push
push
push
push
loope
pushf
jle
decb
test
out
pushl
inc
xor
or
loop
xchg
adc
xlat
cmp
jne
or
call
mov
mov
enter
les
arpl
sub
dec
or
fidivs
mov
add
notb
mov
or
adc
mov
in
mov
std
adc
pop
cmp
jne
mov
or
push
lret
adc
call
enter
xor
imul
and
fisubrl
adc
outsl
pop
outsb
mov
pop
mov
inc
push
xor
add
xchg
push
push
jmp
ljmp
push
sub
push
and
lea
xor
insl
stos
push
idivb
sbb
mov
fisubrl
fsubrs
or
leave
push
orb
push
sub
mov
jnp
dec
add
push
jbe
mov
pop
sub
movl
push
xor
and
ret
pop
and
cwtl
add
stc
or
xor
mov
sub
adc
stos
std
or
and
adc
push
xorl
pop
sbb
jne
comiss
jecxz
pop
lahf
pop
test
cmp
push
rcl
rcll
xor
or
mov
aad
xlat
shll
push
lcall
lret
adc
call
leave
sub
shlb
aad
popf
mov
mov
cwtl
ret
call
pop
push
sbb
mov
repnz
inc
or
sbb
out
adc
add
add
mov
adc
aaa
add
push
xchg
jns
dec
xor
lods
mov
xor
xor
scas
enter
pop
sbb
push
sbb
inc
sbb
mov
push
pop
test
popf
cmc
xchg
mov
mov
test
xor
add
push
adc
push
mov
rcl
adc
mov
das
push
adc
pusha
je
lea
or
xchg
add
inc
mov
add
leave
sbb
imul
lods
popf
jb
aam
cmc
adcb
mov
or
push
sbb
xor
sbb
or
pop
sub
adc
loopne
push
ficoms
cs
or
xor
sbb
dec
sbb
rcll
adc
in
adc
mov
mov
or
fsts
jns
and
leave
lods
or
dec
push
cmpsb
mov
sarb
dec
pop
mov
xchg
xor
jl
ret
lock
sbb
mov
mov
cmp
mov
xor
in
xchg
inc
mov
lds
dec
std
push
lods
enter
and
mov
ljmp
push
int3
pop
pusha
pop
xlat
mov
push
dec
ret
jne
clc
dec
fdivs
xchg
or
scas
loop
dec
pop
sub
inc
pop
inc
cmpsb
inc
rcrb
or
push
mov
das
imul
pop
lea
add
xor
ja
cwtl
adc
jo
test
cmp
sub
lods
clc
rcrb
add
int
sbb
cmp
xor
cmpl
or
lea
dec
xor
std
mov
test
mov
inc
mov
sub
test
or
call
adc
sbb
nop
jne
sbb
sbbl
fs
push
push
call
mov
sub
push
sub
pop
mov
cmp
out
jne
push
mov
lock
std
mov
mov
leave
in
inc
fadds
xor
mov
pop
jae
push
pop
push
push
lea
and
sub
enter
cmp
push
push
pop
adc
push
push
push
push
in
mov
mov
leave
adc
mov
aad
pop
sbb
add
cmp
and
sub
mov
and
ljmp
adc
loope
pop
rcrb
shr
sbbb
adc
cmp
inc
adc
push
push
aaa
out
pop
aam
bound
push
pushf
test
lds
stc
dec
sub
adc
roll
aaa
pusha
idiv
push
jle
fnstenv
sub
add
jmp
dec
mov
inc
mov
or
push
or
movsl
imulb
add
pop
mov
adc
fcompl
sbb
int3
push
sbb
push
mov
sbb
push
repnz
pop
stos
xchg
add
xchg
inc
mov
jo
iret
addl
pop
add
jb
call
fdivrs
movsb
das
sbb
cmp
into
or
iret
je
cmp
xchg
push
sbb
loopne
pop
adc
add
jae
and
jbe
xor
jnp
adc
inc
jp
mov
js
adc
xchg
fsubrl
xchg
and
adc
dec
push
dec
leave
cld
jb
add
jbe
pop
jmp
cmp
shll
lea
inc
inc
xor
stos
adc
sbb
sbb
push
or
inc
or
inc
stc
push
push
jno
push
adc
jge
ss
pop
cmp
push
mov
jae
movsb
add
jnp
je
jmp
pop
jne
cltd
push
jne
xor
inc
adc
fs
push
movsl
xchg
sub
cmp
add
jae
mov
sub
mov
add
sub
je
add
sysexit
xchg
xor
subb
add
lds
pop
sub
and
cmp
mov
sbb
jb
or
jae
js
or
into
cmp
mov
cmc
inc
inc
dec
idivl
pop
rcrl
push
sbb
sti
inc
sbb
das
add
inc
cs
adc
fwait
inc
push
ret
jmp
xchg
iret
inc
test
pop
and
mov
in
lea
int
and
inc
add
loop
sub
loop
loop
pop
orl
push
imul
sar
sbb
fstl
mov
pop
and
vpminub
lds
or
sub
sub
sbb
test
xchg
out
int
cli
ret
add
jle
cmp
jbe
jl
jg
int3
sbb
data16
imul
and
fisttps
adc
test
adc
sub
cmp
jae
xchg
mov
ss
std
lret
fiaddl
sub
adc
pop
insb
aas
and
mov
pop
lret
ss
bound
sbb
sbb
arpl
jo
jbe
push
into
add
sub
dec
stc
add
sarl
js
fimuls
cmp
cli
lods
mov
jno
pop
pop
and
or
push
out
xchg
rcll
in
pop
push
push
mov
aad
test
sub
orb
sarl
sub
sbb
es
cmp
stos
cmp
pop
repnz
mov
test
sub
dec
js
call
sbb
jo
lea
cmp
inc
push
adc
adc
push
das
mov
fldl
jnp
data16
xor
addr16
ret
cmp
and
sti
inc
sbb
jl
jb
jae
push
add
add
sub
add
repz
test
adc
dec
cmp
pop
ret
aad
adc
xchg
pop
inc
fcmovu
or
sub
pop
mov
or
push
sub
cmp
dec
std
roll
adc
add
loope
rcrl
and
lret
inc
dec
lret
mov
and
mov
and
sub
jo
mov
leave
sub
cmp
inc
jns
adc
jmp
bound
add
dec
add
orl
cmpb
cmpb
jmp
xchg
sub
cmp
sub
lods
push
sub
sub
or
jae
xchg
sub
insb
loop
mov
and
mov
pop
nop
int
sbb
stc
imul
sub
vpshufd
sbb
or
adc
and
mov
add
test
sub
push
incb
movsl
pop
dec
adc
loope
or
and
test
test
mov
cld
xor
and
cmp
lea
movzbw
inc
push
push
inc
inc
mov
enter
adc
or
mov
cmp
jmp
repnz
cltd
pop
inc
and
push
sub
stos
jle
xchg
pop
inc
add
sbb
or
pop
inc
jl
push
sub
sti
adc
jne
fs
fcoms
or
mov
jb
or
mov
jmp
test
je
scas
adc
int3
xchg
pop
sub
scas
repz
mov
fadd
push
pop
inc
dec
sbb
adc
or
adc
movsb
xchg
rcll
aas
test
jmp
xor
jb
or
sbb
sbb
and
cwtl
insl
repz
mov
sub
enter
mov
adc
and
nop
jmp
mov
or
dec
movsl
mov
out
sbb
ds
jl
pop
pusha
ljmp
dec
xchg
jmp
shl
dec
fs
sti
mov
in
sub
pop
movsl
inc
lcall
dec
test
mov
xchg
dec
inc
dec
mov
add
sbb
jb
cwtl
inc
call
lea
inc
mov
je
cwtl
fs
sahf
mov
push
push
add
in
dec
xorl
andb
cld
push
stc
lea
push
test
inc
adc
push
jno
mov
outsl
adc
xor
ret
nop
data16
adc
or
xor
cmp
add
xor
adc
int3
sub
pusha
xor
fwait
sbb
adc
retw
sbb
inc
das
ror
jbe
sub
push
es
data16
mov
pushw
sbb
inc
fnstcw
mov
or
adc
es
data16
or
mov
imul
xor
or
ss
xor
fisttpl
popa
xor
jg
sahf
xor
mov
in
inc
repnz
cmpsl
xor
imul
popf
fwait
lds
addb
add
add
push
pop
inc
add
mov
sbb
movups
adc
adc
and
adc
sbb
sbb
adc
sbb
sbb
sbb
and
and
and
andl
inc
or
cltd
adc
add
sub
subl
aas
cs
das
out
xor
mov
xor
jg
mov
les
pop
cmp
cmp
ret
cmp
or
inc
dec
or
inc
push
and
shlb
pop
andl
jge
inc
test
jbe
repnz
xchg
push
scas
loopne
mov
jne
add
push
cmp
in
pop
loope
pop
adc
xchg
cmpl
pop
mov
or
cmpsl
add
pop
cmp
lock
or
cmp
daa
rol
cli
xor
and
sbb
mov
pop
mov
cs
cmp
lcall
inc
test
sub
pop
jmp
pop
xor
inc
popf
jmp
insb
and
outsb
stc
addr16
repz
jne
inc
mov
adc
and
and
nop
xor
inc
js
sub
inc
ja
nop
xchg
les
xchg
imul
xchg
cmp
cs
ss
push
jae
pop
sahf
dec
mov
lods
das
add
inc
lea
not
or
sbb
fs
call
pop
pop
orb
sbb
add
popa
lea
dec
cmp
ret
mov
mov
cmp
dec
pop
add
and
add
mov
inc
dec
jl
adcb
adc
and
stc
add
in
add
dec
jne
add
scas
or
add
mov
xchg
push
cld
test
mov
rolb
mov
sbb
mov
jecxz
or
dec
cld
repz
int3
pop
sub
xchg
sub
mov
xchg
int3
sbb
sar
mov
dec
xchg
pop
pop
adcb
pfmax
and
cmp
xor
rcrl
push
clc
pop
jmp
jp
bswap
add
pop
jmp
mov
add
dec
lods
and
jmp
inc
mov
inc
xor
sbb
out
pop
ret
iret
jno
lods
insb
subb
lret
repz
mov
lea
xor
dec
shrb
ret
xor
nop
mov
adc
inc
xchg
rorb
daa
shufps
scas
mov
mov
add
jmp
adc
sbb
push
pop
data16
inc
push
push
nop
in
inc
sbb
xchg
push
pushw
push
movsl
cmp
push
ret
mov
mov
aaa
xlat
xlat
lret
cmc
lret
adc
or
and
into
notb
sbb
and
in
or
jl
xchg
push
cmp
aas
addb
sub
cwtl
loope
jbe
adc
sub
mov
jmp
scas
test
cmovp
cld
add
fists
sub
punpckhwd
movsl
sbb
sub
jne
push
popa
ljmp
arpl
sub
inc
pop
mov
pushl
push
xchg
movsl
cltd
and
dec
adcl
shll
pusha
aaa
lock
xchg
shll
enter
jb
or
push
or
sub
adc
sti
inc
inc
sub
fldcw
sbb
out
adc
ficoms
inc
push
adc
stc
adc
push
call
push
inc
or
inc
mov
insb
mov
adc
dec
dec
cld
push
aam
cltd
sti
xchg
mov
push
push
and
dec
test
jbe
mov
das
inc
dec
push
icebp
and
test
sbb
cmp
test
inc
push
push
call
jmp
loop
sbb
leave
and
cli
fdivrs
or
popa
lret
dec
mov
sbb
cmp
sub
fidivrs
add
ret
and
inc
adc
lock
sub
outsb
data16
add
adc
sub
xor
sbb
sub
or
ds
mov
push
mov
cli
cltd
inc
jae
push
repz
sbb
pop
aas
or
bound
mov
mov
xor
addb
push
cltd
and
or
xchg
sub
xor
xor
or
cmpsw
sub
sti
xchg
or
xor
and
and
or
cmp
adc
adc
or
data16
icebp
js
data16
sub
enter
jb
cmp
or
sbb
mov
cltd
or
imul
or
data16
and
or
fnstenv
or
xchg
mov
and
mov
pop
int3
inc
inc
adc
xchg
sub
and
add
inc
add
pop
lret
bound
and
or
cld
xor
prefetcht1
inc
adc
adc
xchg
sbb
sbb
inc
sbb
sbb
xor
lret
adc
and
adc
adc
and
adc
adc
sub
add
lcall
add
push
inc
movzbl
xchg
cmp
mov
cmp
cmp
or
aas
inc
lock
nop
ljmp
and
or
inc
and
mov
int3
les
mov
inc
aam
in
sbb
stc
jne
or
adc
adc
adc
jg
jne,pn
mov
jge
stos
inc
jle
jns
jmp
popf
std
mov
jne
lock
inc
sbb
mov
js
lock
or
sbb
sbb
shll
pushf
out
jmp
jns
leave
clc
fistpll
bound
sbb
lret
loope
icebp
or
cmp
adc
aad
and
mov
mov
repz
cmpb
add
jne
repnz
sbb
inc
nop
mov
or
xchg
shlb
aad
jg
cltd
push
or
add
dec
mov
aad
std
ret
mov
sbb
int3
and
xor
push
xchg
pop
sar
test
cmpsb
ja
aad
loope
loope
mov
shl
or
in
dec
leave
sti
fcmovbe
mov
rol
xor
mov
mov
test
iret
or
mov
dec
add
pop
int
or
lea
adc
outsl
xchg
sbb
and
push
nop
mov
int3
inc
or
ret
shl
sbb
cmc
ret
nop
rclb
les
mov
and
imul
jo
mov
dec
lcall
dec
out
fwait
imul
pusha
nop
test
lea
mov
inc
pop
nop
and
jno
lcall
push
fs
test
mov
loop
mov
or
inc
or
sbb
sar
loop
test
insb
rolb
adc
mov
insb
nop
lods
or
loope
sbb
or
inc
out
fdivrl
inc
loope
cmp
rcr
cmp
inc
adc
mov
adc
lods
pop
jo
lods
lret
and
jb
adc
add
or
jo
mov
adc
pop
jl
lea
shl
or
decl
mov
jo
xchg
fcmovnbe
test
pop
and
adcb
stos
sbb
shll
jle
js
dec
pop
mov
adc
sbb
shll
lock
xchg
lahf
or
loope
aas
mov
mov
in
inc
shlb
inc
js
test
sbb
or
dec
into
lret
adc
or
or
or
loop
cli
cmp
or
pop
dec
and
mov
imul
rolb
sub
mov
fists
cwtl
rolb
int3
ret
popa
or
stc
lret
ret
filds
adc
push
stos
sbb
shlb
lock
shl
sbb
sbb
ret
nop
lea
int
sub
jecxz
sbb
int
hlt
and
ret
xchg
fistps
and
aas
mov
adc
and
ret
sbb
cmp
and
pushf
mov
adc
adc
clc
adcb
and
pop
ret
psraw
mov
jo
lea
insb
clc
inc
dec
adc
jo
sbb
sbb
jo
mov
rcll
mov
iret
ret
nop
xchg
loope
test
cs
push
iret
loope
add
sub
scas
sub
rolb
test
push
inc
lods
test
and
push
pop
aam
jo
int
or
loopne
movups
mov
enter
int3
lret
loope
mov
push
xchg
xchg
add
push
inc
mov
mov
inc
js
lcall
push
in
loope
jmp
jmp
scas
or
inc
clc
mov
mov
and
xchg
cmc
sbb
push
or
xchg
jo
xchg
cmc
pushf
jmp
in
inc
jne
test
inc
nop
cmp
lea
inc
data16
adc
and
inc
adc
adc
jecxz
in
movsb
les
les
adc
cli
mov
mov
dec
pop
xlat
cmpsb
imul
jnp
lcall
mov
cmp
les
das
adc
nop
add
sbb
pushf
rclb
adc
adc
jmp
insb
shll
jecxz
iret
test
decl
sbb
adc
inc
repz
hlt
cmp
inc
les
aam
lods
arpl
loope
mov
cmp
inc
shll
mov
ja
pop
inc
cwtl
int
xor
push
ret
ret
lods
cmp
dec
xchg
lods
xor
cmp
aam
movsb
pushf
cmp
xchg
cmp
int
push
shufps
inc
push
jmp
gs
cmp
sbb
xchg
or
loopne
out
fcom
adc
mov
fcoml
and
call
and
pushf
fmull
jne
mov
xchg
in
ljmp
nop
out
lahf
lds
and
xchg
daa
aam
or
sbb
out
mov
xor
xchg
jecxz
pop
int
inc
dec
out
fwait
incl
les
cld
or
sbb
sub
js
cld
lea
push
xchg
ja
jg
js
and
xchg
ja
repz
test
enter
movsb
cmp
rorl
ret
pusha
rolb
clc
popa
shl
pop
sbb
shlb
inc
fsubs
inc
popa
rolb
sahf
xor
inc
int3
mov
inc
iret
and
popa
jo
test
roll
push
cmp
inc
jo
push
or
lods
ja
stc
mov
stc
repz
nop
or
mov
mov
sbb
fdiv
cmc
mov
adc
rcll
movsl
ffree
repz
iret
test
outsl
mov
mov
mov
sbb
push
cmp
inc
nop
xor
adc
repnz
xor
or
pop
adc
mov
rolb
loope
rol
cmp
inc
loope
rol
push
cmp
inc
ficomps
test
jo
push
mov
adc
out
out
clc
pop
inc
jo
or
inc
bound
in
les
rorb
mov
pop
or
aam
inc
dec
or
mov
sbb
adc
or
ffree
call
and
sbb
jl
nop
sub
call
pop
mov
bound
arpl
or
sub
push
push
out
jecxz
icebp
lock
mov
xor
shrd
and
dec
les
out
out
sub
movsl
and
or
sbb
movsl
ffree
call
leave
loop
enter
sbb
jne
je
lea
sbb
repz
adc
in
sub
jnp
arpl
std
jo
test
push
int3
add
mov
in
test
roll
test
ja
loope
and
ret
out
adc
sbb
push
sub
inc
cmp
jo
xlat
fsubs
loope
aas
sbb
mov
and
lahf
pop
xchg
test
jge
test
or
ret
and
inc
mov
xchg
xchg
or
hlt
cmpsl
xlat
gs
mov
mov
test
fsubl
dec
cmp
push
insb
inc
mov
movsl
jle
cmp
movsb
cli
in
test
and
jecxz
iret
test
sbb
iret
and
mov
and
iret
loope
sbb
push
push
sub
test
pop
cmp
adc
lahf
sbb
and
mov
aam
les
pop
mov
cmp
iret
inc
call
les
push
rolb
or
les
cmpsl
scas
push
sahf
cmp
aas
les
std
sbb
xor
jl
test
or
movsb
pop
dec
push
daa
xlat
addr16
loopne
test
je
cli
in
test
pop
xchg
adc
pop
icebp
mov
test
ret
les
clc
test
loope
outsb
fsubl
lock
xchg
mov
les
fcomp
shlb
test
loope
icebp
loopne
or
loopne
les
int
inc
push
add
jg
inc
pop
int3
and
fcoml
int3
xchg
sbb
int
xchg
pop
sbb
nop
int
mov
int
push
xchg
cwtl
lock
sahf
mov
jp
jne
mov
pop
add
insl
test
cmp
ficompl
and
and
jmp
cltd
fcoml
jg
mov
cmp
pop
das
xchg
test
je
adc
or
cmpsl
int3
in
push
out
cmp
insb
xor
cli
push
fstps
scas
fs
enter
nop
push
mov
ficoms
sub
push
jb
xor
shll
loop
xchg
adc
add
push
rclb
lods
outsl
or
mov
pusha
es
and
pop
mov
jns
fidivl
mov
mov
and
test
enter
enter
lock
xor
mov
aaa
enter
dec
sti
mov
sbb
int
ret
push
and
nop
inc
mov
xchg
sbb
inc
nop
xchg
int
loope
nop
ja
and
nop
js
in
pop
aam
xchg
nop
aad
mov
jmp
repnz
test
nop
test
xchg
repz
mov
pop
ficomps
lock
xchg
xchg
nop
test
xchg
xor
nop
cmp
movsb
int
push
and
nop
lock
loope
aam
aas
adc
loope
cli
push
icebp
aam
or
ror
aad
mov
xchg
jne
adc
cld
imul
and
nop
cmp
in
jns
fyl2x
mov
int
jg
je
pop
inc
repnz
aas
call
shl
xchg
pushl
cmp
cmp
jmp
test
adc
cmp
sub
inc
or
mov
mov
flds
icebp
and
inc
repnz
xchg
jl
inc
xorl
sbb
addb
orb
cs
jge
inc
cmpb
adc
ja
fcompl
stc
pop
enter
das
nop
mov
jp
hlt
pop
and
movsl
inc
or
jg
clc
jo
int
or
adc
iret
mov
testl
ret
sub
test
xlat
or
adc
inc
adc
mov
cmc
and
push
sbb
push
fstps
clc
pop
cmp
loope
xor
ret
adc
test
push
inc
rclb
test
pop
xchg
pushl
enter
mov
mov
repnz
mov
dec
cmp
and
or
xor
add
loope
in
test
and
add
dec
call
and
and
or
push
cwtl
inc
fs
mov
movsb
and
dec
enter
call
adc
and
dec
inc
xchg
pop
and
enter
adc
or
dec
inc
xchg
dec
and
push
cwtl
and
dec
enter
clc
and
fwait
inc
sub
pop
adc
mov
xchg
movsb
and
adc
and
dec
clc
mov
pushf
adc
and
inc
xor
mov
push
jl
mov
test
adc
and
hlt
xchg
sbb
or
das
sti
sub
imul
adc
mov
pop
outsb
scas
push
stos
add
pop
imulb
ja
loopne
jo
pop
xchg
or
dec
pop
push
adc
pop
loop
sub
xorb
jnp
mov
or
sbb
jge
les
cmc
lock
xchg
xchg
xchg
les
xchg
nop
sbb
movsl
adc
jl
xchg
sub
sub
mov
das
fsubrs
int3
fadds
add
xchg
sbb
les
dec
dec
outsb
and
inc
or
movsl
imull
data16
xor
dec
push
lret
gs
bound
nop
rcrb
add
rolb
dec
push
stos
shl
push
jmp
jle
mov
mov
jmp
repnz
mov
fisubs
out
dec
out
iret
pusha
xchg
imulb
dec
jg
scas
int
das
mov
xchg
shll
addl
jne
out
mov
shlb
pop
jl
jmp
les
jnp
push
jae
sar
out
mov
outsl
daa
push
outsb
push
mov
or
and
mov
ljmp
xchg
divb
xchg
cmpsb
sbb
dec
sti
fsubrp
dec
cli
lcall
cli
mov
das
jmp
lock
cli
lcall
das
ljmp
in
mov
cmp
repz
jmp
mov
das
out
jp
dec
dec
xchg
jecxz
xchg
pushl
les
stc
insl
mov
add
pushf
add
sub
and
shlb
sbb
nop
sub
sub
adc
sub
sub
orb
daa
fs
popa
jp
nop
mov
dec
in
sti
adc
sahf
and
inc
cmp
pop
xor
push
cmp
pushfw
popf
push
sbb
adc
push
dec
push
jne
and
push
popf
add
dec
aad
rcr
jne
das
je
push
mov
sub
push
addr16
sub
pop
dec
outsl
daa
arpl
jb
add
sub
inc
push
xor
iret
and
sbb
push
push
shrl
stc
jo
pop
jo
imul
cmp
xchg
push
xchg
mov
sub
xchg
cld
data16
jecxz
jo
cmpsl
cmp
add
adc
xchg
pop
jg
cmp
or
popa
mov
enter
add
dec
loopne
aad
xorl
test
push
xor
add
add
mov
cltd
adc
rcl
ret
ror
lret
shl
loop
ljmp
adc
cmp
pop
or
sbb
test
mov
jl
dec
jo
jo
jo
dec
push
pop
pop
mov
pop
test
daa
lahf
pop
rcr
jg
loopne
dec
xchg
ja
or
jne
and
cmp
loopne
mov
vpmacssdqh
adc
xchg
arpl
arpl
arpl
les
xchg
sbb
icebp
sbb
sbb
sbb
pusha
adc
int
push
push
int
into
lods
sub
in
add
cmp
sub
jg
shlb
dec
scas
pop
scas
test
sbb
or
js
pop
and
xlat
lds
ret
jne
faddl
adc
cmp
cmp
xor
xor
xchg
and
sbb
adc
mov
xchg
xor
dec
loopne
fsubl
fadds
mov
adc
and
dec
rclb
movsb
mov
adc
push
dec
mov
inc
and
dec
and
dec
rcl
add
into
add
push
jg
xor
pusha
mov
pushf
cmpsb
pushf
fmull
xchg
pop
aas
push
icebp
je
cmc
and
loopne
or
add
dec
push
enter
or
cmp
and
fisttpl
dec
fs
sub
add
fistl
cli
inc
add
sub
cmp
fnstsw
xor
out
cmp
cmp
push
push
je
push
inc
lahf
dec
add
sbb
and
and
sub
sub
xor
xor
cmp
cmp
popa
stc
push
pop
imul
xor
xor
xchg
cld
cmpsl
add
scas
cld
or
adc
adc
sbb
and
sub
sub
xor
add
hlt
clc
push
xor
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
dec
mov
int3
sbb
ss
in
aaa
aam
jmp
addl
rcrl
pusha
loope
jmp
mov
pcmpeqb
jbe
js
jp
jl
jle
jle
sbb
cmp
dec
sbb
sbbb
daa
sbb
addr16
fisubl
or
sub
dec
push
push
packssdw
xchg
iret
test
ret
adcl
add
cmp
mov
mov
ret
out
sti
xchg
mov
js
jp
jl
jle
js
jp
jl
pop
cld
xor
pop
and
cmp
popf
jmp
in
call
lahf
hlt
lahf
clc
lahf
cld
mov
or
adc
sbb
ss
and
sub
xor
aas
inc
aas
dec
aas
dec
dec
out
sahf
jp
jo
je
js
jl
cmpb
aas
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
jge
xor
int3
lahf
rcrb
fcompl
and
inc
inc
pop
addr16
cmpsl
faddp
lock
loope
cmp
fldcw
insb
jmp
js
jl
cmp
jb,pt
je
jbe
js
jp
adc
push
and
adc
sbb
and
and
sub
sub
xor
xor
cmp
cmp
inc
stc
inc
stc
dec
stc
dec
cli
inc
mov
pushf
stc
mov
stc
lods
stc
mov
mov
mov
stc
stc
enter
sar
aam
fdivr
fdivr
loopne
pusha
call
cld
hlt
cld
clc
xchg
fildll
sbb
adc
jb
push
jbe
js
adc
iret
rorb
fmuls
cmp
aas
jmp
lcall
cmp
dec
dec
dec
dec
ds
aas
arpl
fwait
aas
cmpsl
aas
scas
and
push
lahf
lret
xchg
aad
hlt
xchg
sti
cld
pop
lcall
imul
jle
jle
jle
dec
int
aas
ljmp
cmp
dec
sub
packuswb
loope
out
adc
dec
mov
ret
xchg
fwait
jecxz
repz
repz
lock
call
mov
cld
repz
add
aas
adc
inc
cmp
xchg
cmp
sarb
aas
fstpt
loopne
out
movsb
mov
inc
xor
nop
sbb
shll
push
xor
leave
sub
xor
inc
loope
jmp
and
jb
cmc
shll
ljmp
shrl
jmp
sbb
daa
sbbb
es
jle
rcrl
rep
repz
xchg
push
cld
js
mov
lds
or
and
jmp
loopne
in
and
aaa
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
sbb
cmp
popf
inc
sbb
push
lahf
movsb
pop
mov
cmc
xchg
cmp
ljmp
cmp
popf
mov
mov
pop
cmp
cmp
outsb
in
xor
enter
jmp
adc
cmpsb
sub
inc
push
dec
lahf
push
pop
push
jg
test
sbb
sub
cmp
add
or
shll
ret
pusha
shll
jle
test
repz
push
cld
je
cld
nopl
xor
popf
cmp
jl
mov
cltd
lahf
mov
lahf
out
cmc
xchg
xor
pusha
inc
outsl
scas
lods
push
iret
movsl
iret
lret
iret
in
in
iret
lock
hlt
iret
clc
iret
cld
fmull
xor
or
pop
dec
pusha
fs
lret
iret
lock
not
sbb
push
xor
and
test
mov
nop
iret
xchg
iret
cwtl
iret
pushf
iret
mov
xlat
pusha
pushf
jbe
mov
cld
xor
jne
loopne
lcall
in
addr16
insl
std
js
cmp
push
fmulp
in
fadds
cmp
xor
pop
les
inc
outsb
jmp
stc
movsb
stc
scas
stc
mov
mov
stc
fdivr
arpl
and
inc
aad
fildl
loope
aas
push
leave
adc
sbb
sub
xor
pop
cld
arpl
jbe
fsubs
xorb
mov
mov
pop
hlt
dec
jle
add
or
mov
pop
mov
repnz
jmp
add
mov
iret
pop
packuswb
loope
bound
push
xor
in
call
xor
mov
mov
psrlq
pop
cli
insb
jle
jle
sbb
aaa
and
pop
cmp
sub
cmp
push
xor
xor
andl
pop
mov
leave
or
lock
xchg
sarb
sbb
cmp
and
push
dec
testb
push
mov
iret
dec
or
call
popf
ja
push
push
and
or
and
daa
shrl
fnstenv
pop
jmp
mov
movsl
sub
jl
adc
jmp
mov
mov
stc
loope
in
xor
dec
in
dec
lock
hlt
push
xchg
lahf
stos
lahf
mov
mov
mov
xor
mov
inc
mov
test
sarb
jmp
pusha
add
sti
leave
dec
roll
pop
jg
pop
js
mov
test
mov
add
xor
into
fcoml
mov
add
xor
rolb
push
inc
inc
mull
adc
sbb
mov
ss
dec
cmc
lock
dec
jle
jle
jle
movsb
stc
rclb
sub
pop
push
cwtl
dec
pushf
mov
dec
lods
popa
js
fs
cld
enter
sub
or
adcb
test
add
in
sub
bound
adc
and
adc
add
ret
and
add
rcll
dec
adc
pushf
ds
jmp
js
cs
scas
imul
mov
mov
movl
or
mov
into
sbb
xchg
testl
sarl
sbb
idivb
mov
push
push
movsb
cwtl
mov
mov
jno
xchg
sarb
enter
fildl
arpl
test
mov
imul
pop
push
sti
ret
nop
jnp
incb
orb
inc
cmpsb
ss
orl
aas
jns
add
xchg
lock
adc
add
aam
mov
add
lcall
adc
pop
cli
xlat
add
dec
test
adc
icebp
and
iret
js
mov
sbb
mov
call
fstpt
push
pop
push
out
add
push
cmp
inc
mov
imul
add
loope
repz
lods
arpl
sub
dec
sub
shll
pop
popa
pop
add
mov
data16
jl
xor
lret
enter
test
std
addr16
cmp
xchg
jmp
adc
adc
sarl
sub
cmp
inc
icebp
add
pop
add
pop
and
pushf
popf
add
lcall
pusha
cmpsb
add
sarl
out
ds
mov
sub
push
es
subps
push
mov
push
mov
dec
pop
mov
and
mov
adc
mov
sub
adc
aad
jg
adc
xchg
inc
add
je
jl
out
es
movsl
jno
adc
and
fnsave
mov
fdivl
loope
lods
mov
in
sbb
sahf
ds
and
in
shll
xchg
dec
and
std
xchg
and
mov
lahf
and
popa
dec
jno
sub
pop
sbb
adc
es
data16
dec
inc
lods
movsb
stos
in
mov
jle
add
pusha
rorl
adc
fimull
or
jmp
js
int3
les
or
adc
adc
adc
imulb
jae
nop
add
xchg
loopne
adc
or
adc
push
icebp
mov
mov
mov
mov
ja
or
or
mov
roll
shrb
out
es
push
jo
inc
sub
pusha
and
test
movsl
push
dec
push
add
xor
testb
push
add
test
jne
add
xor
add
push
call
jmp
loop
rol
push
sub
sub
jnp
je
or
inc
or
pop
xorb
push
xor
push
pop
pop
add
mov
lea
push
mov
insl
lock
ret
cmp
push
push
fnstenv
sbb
adc
aaa
sbb
push
add
or
das
jb
dec
mov
mov
imulb
jne
sub
and
push
je
test
add
inc
or
or
xchg
mov
movl
rcrb
mov
icebp
push
push
jmp
imul
nop
and
jp
dec
adc
add
lea
cmp
jbe
push
pop
or
testl
icebp
addr16
xabort
int
jle
movsl
or
dec
cld
dec
into
test
sbb
sbb
sbb
std
dec
cld
add
mov
out
loop
and
cmp
pop
inc
jg
and
mov
inc
and
jne
sbb
dec
xor
sub
inc
pop
inc
mov
push
dec
lret
push
out
xchg
dec
or
rorb
out
outsb
aas
ds
notl
cmp
je
rcrb
mul
adc
lea
in
adc
or
push
cmp
adc
lahf
aam
mov
dec
loope
stc
add
test
sub
push
xor
stos
outsb
outsl
or
pop
mov
xchg
push
cmpl
jne
push
jmp
ljmp
call
jp
outsb
and
lret
scas
dec
roll
jne
push
push
mov
or
sub
orb
push
push
mov
adc
jl
add
mov
lods
loopne
push
push
aas
and
jl
insl
test
sbb
in
mov
cli
fisubl
add
and
nop
or
pop
jg
push
and
mov
xorb
leave
gs
xchg
sbb
test
daa
push
insl
fs
push
ds
xchg
pop
adc
std
pop
push
imul
sbb
pop
lret
push
inc
or
mov
jle
jns
push
fidivs
and
pop
rorb
jno
int3
sar
insb
ret
mov
call
int3
cmp
push
xchg
xor
cmp
adc
jbe
addr16
dec
push
mov
push
pop
pop
subl
xchg
sub
xchg
add
xor
sbb
xchg
xchg
in
add
sub
add
test
dec
lea
mov
adc
leave
cs
dec
pop
adc
and
addb
pop
mov
inc
add
fwait
inc
cmp
adc
cltd
mov
test
pop
and
and
push
push
mov
push
or
sbb
mov
add
hlt
insb
add
dec
sub
and
rorl
loope
dec
inc
js
lea
fs
mov
test
cmp
cwtl
jbe
jl
nopl
push
and
in
pop
mov
dec
adcl
inc
stc
and
mov
orb
es
cmpsl
sbb
and
adc
add
and
mov
andb
call
mov
mov
lods
lds
inc
inc
loop
push
xor
loop
adc
push
popa
xchg
test
insb
add
gs
jns
pushf
dec
add
lgdtl
ljmp
hlt
push
loope
add
sbb
loope
add
loope
sidtl
icebp
cmpb
adc
enter
xor
lods
pop
cs
mov
mov
stos
mov
orl
je
fisubs
inc
rolb
jle
adc
xchg
fsubrs
sub
push
test
mov
repnz
inc
push
push
jecxz
test
mov
adc
xchg
and
int
jns
dec
pushf
and
jo
mov
mov
cmp
jo
aas
push
jne
or
imul
pop
jmp
je
or
ds
orl
or
fwait
mov
inc
cmp
or
or
jbe
lock
test
popf
es
and
sbb
es
or
pop
mov
dec
add
dec
pushf
pop
dec
imul
mov
and
and
inc
push
bound
xchg
xchg
mov
cmp
mov
sbb
dec
lea
push
call
cmp
and
test
rorl
sub
push
push
adc
lods
mov
and
sbb
pop
pop
jmp
dec
aam
aaa
mov
rorl
and
aaa
ljmp
movsb
dec
ret
sub
test
stos
or
jl
sub
mov
pushf
pop
es
add
outsl
rorb
push
push
sbb
adc
aaa
cmpsb
sub
add
loopne
push
mov
ja
push
pop
push
jo
dec
and
cmpsb
pop
adc
xor
pop
pop
pop
inc
adc
push
clc
pusha
cmpsl
xchg
sbb
dec
xor
cmpb
push
test
cmp
and
clc
std
jl
sbb
mov
nop
cltd
test
adc
cmp
xor
std
lea
dec
es
dec
inc
adc
mov
and
test
pop
inc
inc
inc
sbb
pusha
pop
xchg
sbb
inc
pusha
push
jb
mov
mov
call
inc
jne
mov
test
inc
dec
and
push
mov
and
rcrb
out
push
mov
jmp
pop
dec
add
sbb
mov
sub
xchg
xor
adc
adc
jo
adc
xor
adc
push
nop
lea
or
mov
mov
and
cltd
push
out
std
mov
jl
push
pop
es
and
sub
push
out
je
cli
adc
int
cmp
xchg
mov
pop
dec
addr16
mov
pop
adc
das
fs
call
push
or
fwait
addl
enter
rol
lret
sbb
push
mov
loope
or
push
inc
mov
xor
test
jle
push
dec
cld
push
sub
add
and
lock
adc
jl
test
mov
adc
dec
fisubrs
lock
push
movsb
mov
add
stos
adc
imul
nop
sub
or
enter
dec
dec
cmpsb
shll
add
fs
jae
and
subl
cmp
mov
jle
mov
pop
adc
hlt
ret
ret
dec
and
cli
dec
sub
stc
sbb
adc
sti
inc
push
add
cmp
cmp
xlat
jbe
ds
push
out
stos
lret
dec
shll
push
add
jne
call
daa
mov
mov
daa
add
test
xchg
mov
in
xor
bound
out
cs
enter
xor
cmp
leave
js
pop
js
cmp
pusha
add
or
adc
loope
xchg
enter
sahf
jnp
imul
lcall
push
je
add
or
add
outsb
test
dec
dec
btr
push
call
dec
lahf
mov
inc
cmpsb
fs
inc
sub
test
add
mov
int
or
roll
and
bound
test
xchg
loop
test
sbb
mov
mov
cmp
popa
test
xor
push
mov
jns
mov
loop
flds
cmp
ret
bound
adc
sarb
and
and
ret
sbb
sti
inc
push
mov
push
add
cmp
or
mov
push
insb
mov
and
jl
sbb
js
insb
mov
xor
outsl
mov
push
dec
lea
adc
cmp
or
push
sub
or
sub
pusha
ret
ret
ficomps
cwtl
mov
push
push
scas
loop
ds
sbb
or
push
pushf
insb
ror
push
pop
hlt
and
push
inc
push
xlat
pop
or
or
pop
push
orl
adc
mov
jne
jns
xchg
and
jmp
blsfill
adc
in
neg
pusha
push
jne
sub
std
adc
mov
insb
sahf
mov
cmpsb
dec
daa
mov
imul
push
inc
sbb
xor
mov
inc
ret
cmp
fs
and
cmp
mov
xor
jle
cmpsl
mov
mov
stc
test
pop
inc
fsubrl
nop
hlt
mov
les
call
dec
inc
daa
push
js
jp
stc
or
jp
out
dec
inc
or
inc
or
imul
xor
lods
lods
sub
daa
jg
dec
daa
add
or
push
mov
pop
jns
adc
and
push
loope
loopne
push
movsl
into
dec
fs
and
sub
jp
push
fsubr
psrlq
and
int3
rclb
sub
push
add
cmp
or
push
repz
movsb
lods
xchg
dec
hlt
int
aad
mov
out
or
jns
push
ja
shrl
lock
or
dec
push
adc
xchg
fs
sub
subl
xchg
jne
stos
adc
and
std
xor
aad
push
sbb
movb
and
cmp
lret
xor
sub
jl
dec
sub
or
cmc
bound
cmp
and
jmp
inc
or
movsb
popa
ret
jmp
cwtl
jmp
jecxz
mov
aad
sub
bound
sub
xor
loopne
test
enter
jecxz
push
mov
xor
mov
jnp
add
mov
mov
pushf
lea
fiadds
pop
push
mov
ret
ljmp
je
mov
sub
in
or
lods
mov
add
inc
xchg
fs
mov
fs
sbb
add
sbb
or
jne
xchg
sbb
mov
inc
or
pop
or
and
cmp
cmp
fcoml
jbe
lret
push
mov
or
in
outsb
daa
test
bound
add
push
test
dec
and
dec
loopne
dec
mov
pushf
test
cmc
or
and
inc
iret
pop
cli
dec
sbb
or
mov
sub
add
shrb
shlb
push
add
mov
mov
add
inc
adc
popa
in
movsl
xorl
leave
push
sub
bound
cmp
add
push
push
repnz
xor
push
jo
add
dec
cmc
push
push
leave
and
mov
mov
jo
dec
mov
pop
out
int3
test
hlt
xor
xchg
or
or
push
and
fists
or
mov
and
cmp
xor
fs
xor
pop
push
mov
loope
pop
or
dec
scas
lret
incb
adc
daa
dec
adc
adc
adc
test
sub
or
xor
sahf
ret
push
inc
dec
addb
or
push
repnz
stos
or
or
jmp
cmp
testl
adc
or
sub
bound
cmp
cmp
inc
adc
mov
mov
push
ret
pop
dec
and
pop
cmp
js
and
sbb
add
sbb
ret
or
rcll
inc
notl
es
mov
add
dec
iret
sub
mov
xchg
aas
jecxz
sarl
dec
test
xorb
adc
inc
add
cmp
dec
or
shrl
mov
xor
sub
or
mov
pop
cmp
out
ret
push
add
dec
mov
mov
jecxz
inc
jne
mov
xor
mov
imul
inc
jne
ret
add
stos
jmp
inc
or
and
mov
or
xor
or
cmp
xchg
add
and
dec
add
jne
fildll
bndstx
ret
add
lds
sbb
enter
jne
or
ret
xchg
inc
inc
notl
rorb
ds
add
cmp
jne
inc
std
inc
rcll
cmp
movsl
dec
or
arpl
push
mov
add
or
or
dec
add
int3
sub
add
lock
stos
adc
inc
add
mov
cs
mov
jge
push
push
mov
or
pop
mov
and
in
xor
dec
stos
dec
mov
push
test
scas
std
ret
mov
jmp
xor
and
jge
andl
or
mov
jns
dec
adc
xchg
xor
push
or
push
mov
mov
movl
inc
dec
mov
push
call
sbb
jmp
mov
test
sbb
jne
leave
shl
mov
cmc
sbb
popa
adc
push
add
push
icebp
shlb
out
out
sub
loopne
jmp
ds
les
inc
test
adc
xor
inc
xlat
push
or
add
pop
aad
je
sahf
ja
filds
sub
mov
out
cli
mov
or
xchg
and
adc
mov
pop
mov
inc
out
pop
mov
cmc
xchg
pop
fcoms
push
mov
xor
lds
scas
mov
push
sbb
pop
sbb
push
mov
call
and
xor
xor
mov
xchg
fists
xchg
sub
mov
arpl
adc
or
push
cld
pop
or
movl
scas
inc
sbb
or
ja
xchg
jle
outsb
adc
jmp
sbb
dec
mulb
addb
adc
inc
test
xor
sbb
push
ds
in
fcmovb
imul
jge
sub
xchg
mov
js
fsubr
stc
adc
mov
xor
mov
insb
sub
inc
test
sub
mov
fimuls
fmuls
or
xchg
in
cmp
push
xchg
mov
test
inc
sbb
out
jbe
mov
test
mov
dec
mov
adc
mov
push
pushf
and
pop
push
lds
adc
push
loope
or
notl
movl
aad
mov
fs
sbb
and
mov
rorl
popf
xchg
or
add
and
add
movsb
ja
pop
and
pop
idivb
sub
call
jne
add
adc
je
inc
pop
adc
adc
rolb
mov
adc
icebp
dec
sbb
or
push
movsb
add
unpcklps
in
add
cmpsb
sbb
ret
flds
mov
iret
fsubp
bound
jae
sub
push
imul
sub
addl
hlt
rcll
jmp
mov
dec
push
shr
cmc
jmp
aas
bound
or
jl
cmp
and
and
pop
inc
insb
push
sbb
pop
or
sub
push
aam
or
leave
sub
or
mov
mov
and
mov
push
mov
push
add
nop
sbb
call
mov
lock
je
pusha
sbb
pop
push
into
cmp
xor
and
sbb
cltd
sbb
pop
das
in
and
jbe
je
mov
dec
push
jno
mov
push
mov
fs
pop
dec
push
push
xchg
and
or
xchg
ljmp
push
add
push
loopne
push
add
cmp
iret
arpl
clc
int3
dec
push
loop
jle
pop
xor
dec
add
jno
rep
push
push
sub
cmp
or
loope
adc
dec
or
mov
push
mov
cli
ret
pushf
sbb
aam
add
cli
mov
cmc
pop
inc
push
adc
inc
adc
call
xchg
test
mov
jb
scas
inc
xor
jbe
xchg
jmp
rcrl
add
xor
push
cmp
adc
mov
jne
bound
xor
out
addb
dec
push
mov
sub
or
mov
mov
inc
sbb
test
and
mov
sub
xor
mov
cmp
pop
les
pop
mov
test
sub
dec
adc
popa
icebp
jmp
jp
sub
dec
fs
mov
push
mov
loop
cmp
bswap
inc
inc
jmp
clc
and
imul
mov
rorb
es
adc
loop
mov
xchg
xchg
dec
repz
fldt
adc
imulb
je
es
cs
push
aas
or
or
or
adc
inc
enter
enter
lock
adc
pop
xor
les
test
fs
mov
mov
push
adc
aaa
out
adc
sub
sbb
xor
mov
sub
adc
loope
ror
imul
ficoms
sbb
xlat
dec
dec
int3
push
xchg
adc
push
mov
push
lahf
adc
shll
inc
dec
sbb
aad
xor
xor
pop
xchg
dec
sarl
cwtl
and
lods
adc
push
inc
xor
mov
pushw
sbb
punpckhwd
push
dec
inc
or
andb
jge
and
cmc
push
xchg
pop
and
cmp
je
inc
inc
sub
ret
push
xchg
loope
or
sbb
xor
js
push
xchg
xor
and
ret
push
mov
je
test
scas
mov
movsb
ret
cwtl
sbb
or
jne
inc
hlt
cmpb
adc
fstps
leave
pop
mov
jge
and
cmp
jmp
adcl
add
loop
pop
movlps
push
dec
cmp
sahf
shl
pop
sub
dec
cmc
push
jbe
mov
mov
hlt
repnz
inc
mov
in
stos
orl
mov
shl
or
popf
xor
movsl
and
mov
cli
push
es
pop
cvtdq2ps
lahf
fmuls
jmp
xchg
push
pop
xor
shlb
adc
insb
mov
or
cli
jb
test
push
outsb
insb
cli
cmpsl
fcoml
sub
jbe
sub
cwtl
jnp
int
or
sti
leave
jae
fs
loop
or
sub
adc
mov
adcb
cmp
sbb
and
pusha
leave
and
call
push
leave
movsb
je
shl
out
sahf
cmp
je
ja
push
mov
mov
push
xchg
mov
out
inc
pop
add
dec
scas
insb
push
pop
inc
add
in
mov
lock
mov
add
jbe
fs
sub
fucomp
lods
ficoml
in
jne
rol
xor
cltd
xor
inc
popa
cltd
sbb
into
mov
push
inc
sbb
and
test
add
and
push
adc
test
pop
std
movsl
loop
push
aas
sub
sub
les
mov
sub
xlat
push
jmp
sahf
movl
call
jno
push
pop
jmp
daa
sub
addb
shll
adc
pop
mov
outsl
aas
xor
out
and
jbe
mov
fiadds
and
mov
scas
or
mov
sub
or
mov
add
out
mov
inc
cld
imul
sub
xchg
in
call
sbb
inc
sbb
mov
adc
push
pop
call
add
cmp
imul
pop
jnp
aad
push
pushf
jb
push
and
daa
call
movsl
cs
in
pop
jp
popf
dec
out
lea
add
jno
push
inc
add
or
adc
je
mov
clc
sub
mov
rsqrtps
mov
mov
lock
inc
xor
cmp
xor
or
sub
sub
in
sub
adc
cmp
mov
jbe
or
jmp
addr16
pop
and
je
insl
or
mov
pop
lea
xlat
mov
push
andl
pop
nop
mov
scas
dec
push
mov
daa
lret
xor
cmp
jge
arpl
adc
mov
or
inc
mov
adc
cltd
sub
icebp
test
and
pop
or
rorb
mov
dec
lods
stos
add
cmp
jge
mov
or
inc
mov
mov
sbb
mov
icebp
roll
jge
or
add
push
push
call
sahf
andb
push
nop
jp
adc
data16
push
xlat
or
outsb
sbb
inc
push
fsts
rorb
push
loope
lock
push
addl
mov
adc
dec
mov
insb
push
mov
call
jbe
ret
movsb
push
mov
daa
mov
fstps
dec
sbb
and
bound
add
sub
add
fdivrp
mov
sbb
pushf
jnp
call
sub
mov
fstps
sbb
adc
xchg
icebp
mov
clc
fs
test
adc
or
add
inc
pop
mov
call
lea
es
les
xor
outsb
inc
xchg
sbb
inc
imul
sar
cmp
add
mov
popf
push
cmpb
lret
and
idiv
leave
cltd
and
push
or
test
in
adc
xchg
cmp
mov
jne
add
in
lock
lret
xchg
xor
cmp
adc
adc
push
push
notb
mov
lea
ds
add
sahf
inc
rolb
push
je
mov
test
cs
cmpsl
dec
cmp
out
daa
xor
mov
popf
pop
xchg
test
push
jp
dec
loope
mov
mov
lods
sahf
push
pop
scas
mov
fcos
xor
and
or
push
mov
mov
push
xor
push
testb
je
insb
icebp
test
movsl
inc
add
xchg
arpl
mov
cs
orl
ror
dec
xchg
sti
sahf
mov
push
sub
sbb
push
lea
scas
add
push
mov
daa
jae
fdivs
inc
outsb
sub
adc
sub
inc
inc
sbb
xchg
imul
je
mov
cmpsb
adc
sub
cmp
fs
mov
mov
imul
lods
mov
enter
rcrb
sarl
push
add
mov
mov
das
scas
sub
jle
scas
mov
ud0
lahf
or
and
adc
mov
outsb
cld
cmpsb
insl
ss
mov
cmp
mov
xchg
add
je
aaa
sub
and
nop
in
lea
push
mov
test
sti
fs
insb
or
imul
or
adc
call
ret
dec
leave
mull
adc
push
call
test
inc
jmp
std
adc
adc
mov
or
push
xor
in
add
in
cmp
mov
out
in
add
out
mov
pusha
cs
imul
bound
in
or
xchg
fucomi
jmp
pop
sub
sub
in
call
sub
arpl
push
xor
and
xchg
adc
dec
in
jg
cmpsb
lods
xor
xchg
cmp
movsb
aaa
les
ss
xor
xchg
outsl
int3
cmp
test
call
movl
loopne
or
and
xor
clc
sub
loopne
xor
adc
cmp
cmp
mov
das
mov
pop
or
loopne
mov
add
loope
cmp
inc
das
or
outsl
adc
dec
ret
fst
xor
shll
js
andl
dec
sub
fcom
jne
ret
imul
daa
or
sbb
jge
sbb
sbb
adc
adc
or
cmpsb
sbb
cmp
push
in
dec
sub
lea
je
test
adc
stos
test
movsl
andl
pop
loop
cwtl
xchg
adc
popf
call
mov
inc
sub
je
decl
mov
push
jecxz
dec
in
push
call
sub
cmp
or
mov
mov
icebp
sub
and
jo
mov
scas
inc
and
popf
in
push
push
push
mov
sbb
or
inc
sbb
adc
sbb
decb
js
dec
or
add
sbb
das
sbb
xor
mov
adc
sbb
je
dec
pop
xchg
xor
sub
push
push
movsb
inc
xchg
movsb
mov
imul
icebp
ja
jne,pn
pop
lods
test
push
mov
mov
and
nop
lods
sbb
adc
dec
mov
nop
dec
or
cs
sahf
xor
stc
cs
cmp
xor
dec
pusha
mov
scas
mov
adc
add
cld
out
mov
mov
imul
push
sbb
sbb
sub
mov
push
rclb
mov
pop
loopne
jno
rcll
adc
mov
jmp
lock
rep
movsb
pop
or
sbb
mov
add
inc
adc
cmpsl
stc
mov
cwtl
sub
and
push
mov
lds
adc
push
ss
mov
add
mov
jmp
mov
test
cmp
pop
mov
adc
sub
inc
mov
dec
cltd
jp
imul
mov
cmovg
stc
mov
loop
sbb
ljmp
cmc
mov
and
and
daa
rclb
mov
dec
and
sbb
jb
sbbl
rclb
mov
adc
or
int
xor
es
clc
inc
push
push
sub
repz
in
roll
inc
test
test
jae
push
outsl
sub
dec
push
push
pop
cs
mov
test
inc
pop
in
cmpsb
flds
call
bound
add
xor
inc
cmp
xchg
mov
pop
push
add
call
mov
ds
andl
movb
xor
sbb
and
mov
xor
and
inc
cmp
test
pop
rcll
dec
call
dec
push
jge
add
cmp
call
ret
fisttps
sti
shl
mov
pop
es
cltd
push
pushf
in
rclb
jmp
xchg
push
xchg
sbb
sahf
dec
loopne
cwtl
fsubrl
xor
xchg
or
mov
popa
adc
jmp
lods
and
inc
mov
dec
push
push
inc
xchg
sub
call
stc
xchg
adc
clc
cmp
xlat
inc
cmpsb
xchg
sbbb
fdivl
lods
xchg
mov
lock
mov
push
sub
sahf
dec
cmp
push
movsb
sub
mov
push
and
and
je
fsub
adc
pop
ret
sub
mov
pop
aas
fs
xchg
loop
mov
mov
push
xchg
jno
pop
in
sbb
mov
xchg
mov
cs
jl
pop
shlb
xchg
adc
daa
xor
xor
jbe
arpl
cmp
and
popf
xchg
dec
xor
mov
popa
daa
xchg
lock
mov
cmpb
jmp
dec
push
push
sti
mov
or
les
mov
sbb
addb
cmpb
je
mov
sbb
sbb
and
xor
in
testl
inc
std
adcb
add
add
inc
out
inc
and
jmp
mov
ret
in
mov
adc
shl
jnp
es
adc
sbb
mov
sbb
mov
and
pushf
inc
push
inc
push
jg
or
pop
sub
in
nop
mov
inc
lea
mov
sub
lcall
add
mov
push
pop
mov
inc
fbld
fisubrl
cmpsb
add
cmc
je
xor
int3
in
imul
cli
or
cmp
xchg
jmp
fldenv
in
mov
loop
push
dec
pop
push
sub
call
jo
push
icebp
sti
and
push
push
testl
add
mov
insb
call
int
ljmp
popf
dec
roll
adc
push
or
xchg
mov
cmp
inc
in
adc
jle
enter
and
notb
cs
pop
xchg
dec
jp
rclb
xchg
pusha
shlb
fs
xchg
iret
lret
and
stc
sub
and
je
jnp
sub
in
inc
inc
push
movsl
mov
shr
xchg
dec
leave
sbb
mov
or
testb
xlat
cs
mov
adc
pop
xchg
cs
push
sbb
inc
movsb
push
xlat
fsubrs
pop
add
push
jecxz
sbb
adc
test
push
cld
repnz
push
pop
stc
out
and
mov
push
ret
das
cmp
leave
xor
jge
pusha
bound
aad
inc
xchg
push
movl
sub
mov
cmp
inc
or
or
imul
and
addl
sub
dec
xchg
or
xchg
dec
add
push
or
sar
push
jmp
add
loopne
jae
mov
jle
or
pop
out
mov
mov
test
jmp
inc
js
popa
push
imul
push
movw
inc
out
stos
paddq
pop
add
dec
mov
or
lcall
jp
lahf
es
push
lock
int
push
shrl
or
xchg
adc
push
data16
call
push
ja
test
mov
cmp
dec
aaa
fisttpll
dec
jno
or
jo
add
call
push
pop
xor
jno
jl
imul
inc
adc
or
andl
mov
add
je
push
in
push
xor
xlat
aad
pop
repnz
lea
push
dec
sub
int
in
inc
subb
jo
xchg
sbb
inc
cmp
mov
testb
inc
xor
cltd
in
jg
pop
push
dec
lret
jo
xchg
je
loope
fidivrl
sub
add
bnd
call
enter
sub
jl
push
shrl
adc
scas
sub
jmp
jmp
das
nop
mov
adc
fwait
lods
adc
test
mov
push
and
jle
xchg
jg
xchg
pop
adc
xlat
lret
popa
mov
sub
inc
cmpsl
push
into
and
mov
lcall
mov
cmpl
xor
mov
repz
lcall
cltd
xchg
sbb
or
hlt
mov
dec
mov
add
or
imul
push
mov
jne
push
pop
push
adc
mov
jo
fisubs
and
lea
out
inc
hlt
daa
jno
cmpb
pop
jg
loope
mov
rorl
push
push
push
jge
mov
add
movsl
pop
movsl
pop
gs
gs
dec
dec
and
jl
orl
jg
cli
call
push
pop
orb
out
xor
or
test
and
add
cmp
lcall
and
inc
push
bound
loopne
xchg
loop
sbb
add
je
dec
and
adc
xchg
push
jge
loope
add
cmpsb
inc
dec
repnz
aad
fs
jl
jl
iret
inc
inc
jl
sbb
xlat
jge
pop
sti
rclb
rcrb
enter
adc
sub
jno
lret
hlt
dec
scas
mov
int3
mov
pop
mov
inc
ret
mov
call
xor
lret
mov
outsb
mov
push
mov
xchg
lock
or
xchg
pop
add
setns
daa
sub
xchg
cmc
pop
and
cmp
test
dec
or
fildll
mov
jg
or
push
dec
sbb
je
pop
stos
push
cmp
repz
or
lret
dec
dec
mov
dec
pop
push
push
rclb
inc
pop
mov
mov
jnp
cld
dec
es
mov
jbe
jmpw
dec
add
mov
mov
fsts
mov
pushf
rcrl
dec
arpl
pop
add
mov
jb
inc
adc
fstpl
jle
add
movb
mov
inc
mov
sub
sbb
popa
inc
sbb
dec
mov
inc
and
movsl
inc
sbb
push
cs
dec
add
xchg
into
clc
xor
inc
adc
jg
loopne
xlat
or
pop
fimuls
xor
push
in
xor
sbb
out
cmp
xchg
inc
stc
sbb
sub
xchg
jmp
das
das
int3
xchg
mov
in
dec
push
std
adc
lret
or
jecxz
add
pop
push
js
xchg
xchg
icebp
jns
push
xchg
jbe
mov
bound
addr16
lock
fisttpll
mov
rorb
clc
pop
daa
pop
push
in
ret
xchg
test
inc
imul
xchg
sub
add
mov
and
jno
testb
or
leave
les
and
call
call
cmp
jb
mov
sub
adc
test
inc
dec
push
int3
adc
or
push
out
add
mov
repz
xchg
pop
and
enter
rcrb
sbb
add
xor
mov
dec
sub
imul
sub
nop
lea
lods
imul
loop
cmp
mov
mov
repnz
pop
xchg
pop
lahf
les
dec
fcom
push
or
aam
xor
xchg
or
jmp
shrl
dec
imul
inc
add
les
imul
mov
popa
lret
stos
lret
dec
push
pop
lds
stos
xchg
cmp
stc
and
jp
sbb
sbb
enter
int
outsl
sahf
cld
adc
inc
and
loopne
mov
scas
js
scas
xchg
rol
add
push
call
stos
inc
lock
push
push
pushf
mov
add
inc
bound
lea
or
adc
int3
add
mov
push
mov
and
out
mov
pop
sbb
bound
inc
inc
sbb
int3
add
rolb
xor
mov
push
mov
adc
mov
push
cmc
cs
das
push
repnz
cli
mov
orl
push
push
out
inc
mov
dec
notb
cmp
adc
lcall
ss
sbb
std
xchg
xchg
pop
xchg
add
mov
enter
andb
mov
inc
adc
adc
and
in
pop
rolb
sub
lea
dec
call
insl
out
adc
leave
je
inc
mov
xchg
mov
mov
hlt
adc
fisttps
repz
sub
and
scas
leave
dec
shlb
fs
dec
push
dec
pusha
call
jl
xchg
and
out
rcrl
popf
add
adc
cmp
dec
rorb
add
les
mov
adc
and
cmp
scas
inc
add
mov
jbe
and
inc
stos
cltd
adc
dec
inc
cmp
jbe
mov
out
xchg
and
imul
popl
nop
add
xor
mov
push
mov
fisttpl
mov
outsb
adc
cld
je
push
call
lret
add
fcomps
or
sub
neg
pop
sbb
cs
lock
inc
xchg
pop
xor
sar
nop
pop
pop
push
jge
push
mov
or
pop
push
cmp
sub
je
dec
ss
inc
sub
inc
call
push
imul
jge
push
lcall
lret
icebp
ret
shll
enter
add
xor
or
adc
xor
sub
mov
xor
mov
mov
inc
sub
mov
sub
sbb
or
ficoml
cmpsl
jl
test
dec
add
sbbl
xorl
adc
xor
add
cli
inc
in
dec
mov
sub
xor
mov
mov
add
stos
and
pop
inc
push
jbe
xchg
inc
and
mov
mov
cmpsb
or
sub
cltd
cmp
push
ss
lods
push
mov
push
mov
mov
sub
call
movsb
insl
dec
dec
push
jno
icebp
or
push
call
mov
jb
imul
cmp
mov
adc
aas
adc
jge
jl
dec
bnd
test
sub
pop
push
push
mov
or
je
lahf
movsb
sub
in
sti
xor
sub
fldenv
aaa
cli
addr16
leave
pop
xor
adc
movsb
dec
push
lods
test
jge
jge
loopne
xchg
adc
push
int
xchg
or
movsl
jl
push
sbb
mov
outsl
bound
jne
and
mov
mov
mov
shl
xchg
adc
out
or
mov
dec
fisttpl
in
adc
and
orb
dec
clc
and
andl
pop
adc
or
mov
std
xchg
cmp
int3
add
push
sbb
mov
and
mov
pop
xor
mov
aas
popa
movb
adc
inc
cmp
push
dec
or
iret
and
inc
inc
push
test
mov
cmp
adc
and
adc
push
jnp
mov
in
aam
insb
mov
or
ja
aad
or
push
call
jae
xchg
or
sub
push
dec
push
out
jl
push
mov
mov
push
adc
xchg
xor
cmp
aad
xchg
mov
mov
mov
jno
jno
mov
and
mov
std
imul
add
xchg
mov
cmp
mov
icebp
cmpsl
inc
sbb
cmp
sbb
sbb
mov
pop
push
or
pop
jle
inc
pop
enter
pop
mov
xor
inc
in
mov
push
inc
sub
lret
sti
mov
fs
mov
enter
pop
pop
imul
cmpsl
sub
push
inc
rclb
enter
dec
aad
cmp
mov
shrl
popa
ja
push
mov
test
and
and
ds
stos
fiaddl
enter
call
stc
mov
add
push
and
movsb
and
xor
pop
sub
test
inc
daa
or
dec
int3
sub
in
aas
inc
and
lret
sub
push
and
cmp
adc
dec
cmp
mov
adc
dec
xchg
or
inc
add
test
lret
adc
and
sbb
sbb
stos
in
shlb
and
enter
inc
dec
shlb
mov
adc
jmp
and
call
inc
ret
xchg
sti
jo
push
mov
inc
push
insb
xchg
and
or
jbe
inc
mov
in
negb
mov
sbb
inc
shr
or
push
cli
push
pushf
loop
jle
sub
xchg
lahf
push
movsb
mov
xchg
outsl
mov
daa
mov
push
fdivr
mov
or
push
adcb
sub
mov
int
dec
xchg
pusha
arpl
sub
dec
and
dec
mov
test
dec
pop
icebp
jnp
cmp
cmp
fldcw
xchg
pop
jne
mov
movsb
inc
aas
cmp
pop
and
lods
inc
xor
push
dec
je
inc
movsb
dec
xchg
jo
enter
mov
js
jmp
push
push
call
int
cmp
push
jno
inc
xor
ret
lahf
or
movsb
out
mov
xchg
and
sub
in
adc
inc
dec
mov
shl
and
sub
or
sbb
push
ljmp
push
negl
shlb
mov
adc
jl
jne
jo
inc
pop
and
push
sub
push
and
sub
mov
sub
mov
or
push
fimull
cmpsb
jp
das
repz
or
mov
sbb
mov
and
dec
mov
je
sub
subl
xor
fisubrs
jle
sub
or
inc
adc
adc
sub
pop
push
add
addr16
js
cmp
sub
adc
dec
dec
sbb
fisttps
jo
out
ljmp
in
xor
cmpb
inc
add
std
pop
mov
push
mov
popa
mov
and
js
mov
cwtl
pop
adc
pop
sti
jmp
imul
add
jmp
xchg
es
and
aad
imul
fwait
shlb
or
sub
pop
sbb
mov
stos
mov
in
adc
dec
das
push
sub
add
adc
jne
adc
pop
xlat
mov
jp
inc
fstpt
data16
sti
leave
insb
das
int3
sbb
add
push
cmp
jle
sbb
sbb
pop
cmovp
mov
pop
sbb
xchg
addr16
inc
out
lcall
pop
mov
xor
stc
testb
and
imul
xor
push
inc
outsl
les
idiv
pop
mov
or
jne
movsl
sub
inc
es
mov
mov
push
lret
iret
sarl
mov
adc
mov
or
adc
pop
adc
adc
adc
push
sub
outsl
int3
add
xorps
or
mov
push
push
je
sub
dec
xchg
es
dec
sub
adc
xchg
out
cmp
push
pushf
sub
sbb
xor
and
mov
push
test
enter
push
xor
jne
idivb
fldt
cmpsl
adc
les
pop
jl
mov
xor
mulb
or
jg
cmp
das
push
shrl
loope
jbe
cmp
inc
lea
xor
rcr
cmp
mov
cmp
or
xor
push
call
out
pop
xor
int3
das
push
mov
int3
mov
lcall
es
jl
inc
dec
add
mov
mov
daa
mov
pop
mov
pop
movsl
or
pop
xchg
repnz
inc
frstor
cmp
dec
idiv
and
push
pusha
mov
inc
pusha
fsubl
call
in
cmp
movsb
push
dec
cs
mov
sbb
pop
sub
pop
jne
je
mov
xor
shr
mov
or
xor
xlat
mov
fdivrs
cmp
std
mov
cmpsl
notl
aaa
les
les
adc
pop
or
pop
push
call
push
sub
jb
mov
mov
into
mov
mov
add
cmp
rcrb
rcrb
pushf
out
lret
push
notl
pushf
ror
cmp
pop
add
add
movsb
dec
add
push
jne
sub
inc
add
pushf
popf
test
popf
or
push
jle
mov
add
jp
mov
sbb
pop
xor
add
push
mov
push
lret
or
imul
sub
neg
jbe
lock
or
lds
testb
jne
pop
adc
jo
ja
aam
movsl
lret
add
sub
dec
inc
push
push
shl
in
fldenv
lods
push
and
das
leave
dec
push
xor
test
sbb
jbe
cmp
jmp
sub
xchg
sub
and
xchg
jle
push
mov
sbb
lds
cld
fildl
fs
inc
pop
fstpl
fs
xor
or
push
sahf
push
inc
push
push
push
out
lret
jno
sub
sub
cld
ret
popa
out
inc
sub
aas
mov
mov
push
push
call
lds
cmp
call
pop
popf
xor
xor
out
push
xchg
pusha
das
jl
out
adc
in
push
jne
add
lods
push
je
xor
cltd
mov
push
add
cmp
xchg
mov
cmp
pop
xchg
pop
pusha
imul
lods
sbb
call
scas
mov
fs
mov
pop
adcb
sbb
inc
inc
out
imul
and
adc
sbb
mov
jle
push
cmp
shrb
clc
jg
xor
fidivl
xor
cmc
cmp
dec
shrl
add
call
xor
andb
setle
cmp
loop
sbb
jge
rorb
mov
inc
out
aas
mov
mov
and
or
mov
or
aad
daa
cli
pop
push
add
jne
lock
pushf
and
push
ret
xor
inc
or
xor
adc
or
aam
jecxz
push
adc
dec
mov
imull
adc
mov
bound
adc
xor
and
int
add
push
and
cmp
push
fmull
mov
das
movl
pop
inc
adc
dec
mov
les
rclb
outsl
int
cs
pop
sub
lods
std
or
add
jno
ret
and
nop
cmp
xchg
dec
push
dec
sbb
dec
outsl
lea
movnti
sar
bnd
cs
adc
sbb
cmp
jne
xchg
inc
sti
ret
dec
push
mov
in
lcall
movsb
in
xlat
leave
pop
adc
push
xchg
dec
cmp
and
hlt
les
jge
lods
hlt
es
adc
sbb
in
adc
cmp
mov
adc
sahf
xor
cli
fsubrs
and
inc
xchg
movsb
pushf
aam
mov
test
je
shlb
adc
mov
cmpsb
rorb
fdiv
idivb
add
jo
mov
ret
dec
pop
mov
test
lods
pop
rcrl
jmp
call
add
lcall
lret
test
fnstenv
fistl
jmp
inc
sbb
xchg
inc
push
cmpsb
loop
adc
push
dec
clc
pop
fucomp
adc
push
pop
fisubrs
orb
rol
scas
sahf
repnz
sub
daa
les
call
stos
or
imul
pop
hlt
gs
loope
or
aaa
inc
jle
loopne
loopne
xor
lea
jg
mov
outsl
nop
insl
aam
shll
je
je
mov
cmp
jle
addr16
shlb
movl
sar
mov
xchg
mov
rorb
and
in
jl
mov
fmuls
cld
andb
ret
jnp
filds
cmpsl
or
mov
mov
and
test
jg
not
dec
sbb
daa
call
mov
sub
inc
xchg
push
aaa
sti
pop
adc
or
dec
cmpsl
mov
mov
fidivrl
jno
mov
add
adc
adc
add
mov
xchg
mov
call
mov
sub
addr16
adc
mov
in
and
cmc
mov
pushf
in
and
andb
mov
dec
lods
push
lds
in
mov
push
pop
cs
push
xor
mov
loopne
adc
push
andb
orl
cli
das
mov
jo
push
jo
call
lret
pop
scas
nop
adc
aad
mov
jle
xchg
or
loopne
rorl
ret
jb
or
dec
lret
cmc
adc
and
push
bound
xchg
inc
or
mov
sub
jmp
pop
push
or
cmp
mov
out
pop
push
in
sbb
pop
aad
imul
mov
jno
dec
cltd
or
mov
fcoms
or
mov
inc
imulb
sub
or
movsb
mov
mov
xor
pop
ret
cmpsl
dec
out
inc
std
add
push
xor
push
push
and
mov
add
push
mov
inc
sahf
pop
xchg
pusha
sub
mov
popf
negl
cmp
xchg
and
xchg
mov
call
sbb
popl
mov
insl
imul
lret
enter
push
adc
jmp
jmp
push
sbb
sbb
out
jmp
roll
loopne
add
or
mov
jmp
ljmp
xchg
aam
sbb
addl
lea
dec
roll
mov
test
pop
mov
jmp
stos
adc
push
mov
pop
jmp
dec
mov
mov
loope
in
ror
xor
jmp
push
push
or
push
dec
adc
test
mov
sbb
sub
add
inc
xchg
and
ljmp
push
lea
pop
cmp
popa
add
jmp
add
and
jb
or
mov
pop
nop
adc
inc
jle
adc
enter
mov
adc
clc
je
mov
or
inc
movntps
cmp
mov
imul
divb
xchg
xchg
negl
or
and
enter
or
adc
shl
in
dec
or
repz
stos
xchg
and
sub
mov
insl
jecxz
cltd
mov
fsts
and
cmp
or
leave
push
and
mov
mov
cmpsl
mov
loopne
std
ds
pop
cmp
adc
cmpsb
inc
xor
inc
xchg
or
outsl
and
fs
mov
mov
mov
sub
and
lock
xchg
xchg
xchg
inc
and
mov
dec
sub
in
mov
xchg
sub
sbb
add
pop
int3
and
dec
sbb
or
lcall
xor
movsb
sbb
into
sub
sti
lock
or
push
or
or
or
movups
inc
adc
adc
pop
sbb
sbb
adc
sbb
sbb
sbb
cmpsb
dec
bound
or
and
cltd
or
sbb
mov
sub
das
add
xchg
or
xor
mov
push
pushf
lds
adc
add
ret
sub
add
fbstp
jmp
shlb
cli
add
or
dec
pop
aas
loope
fidivrl
adc
mov
ljmp
adc
jge
xor
sub
inc
cli
xor
pop
stos
mov
ds
add
or
push
pusha
aam
jl
xchg
mov
add
pop
cmp
add
pop
test
lcall
dec
mov
xlat
pusha
xchg
inc
mov
and
pop
call
ja
test
mov
inc
clc
and
and
cs
leave
sbb
push
imul
ret
repnz
clc
mov
push
scas
or
cli
jbe
push
xor
loope
mov
sar
push
push
loope
sub
dec
lock
out
mov
imulb
into
lods
mov
add
xchg
int3
mov
mov
jne
popf
adc
sbb
call
jmp
sbb
inc
or
and
aaa
call
xlat
negl
xor
push
out
adc
aam
popa
adc
pop
xor
push
bound
ds
push
or
aam
mov
and
jns
aaa
xor
adc
mov
rcl
and
loop
or
push
cmp
mov
sahf
rorb
jle
cli
cmp
adc
cld
push
cmp
cmc
in
and
cmp
movl
icebp
jecxz
inc
inc
sbb
xor
mov
pop
enter
mulb
mov
decb
cwtl
mov
loopne
xchg
int3
xchg
adc
pop
inc
enter
adc
outsl
and
ds
les
rcrl
or
dec
cmp
popf
rcrb
jmp
mov
mov
mov
jl
outsl
push
mov
out
mov
lds
cmp
xchg
cmp
dec
xor
push
or
cwtl
call
dec
pop
jl
out
sub
shlb
add
xor
xchg
adc
cmp
push
shll
mov
rcl
popf
xor
cmp
add
jae
adc
push
jne
adc
mov
fidivrs
mov
and
out
ret
sbb
inc
add
mov
adc
or
cs
cltd
hlt
lock
jae
popa
mov
dec
notb
add
test
out
adc
mov
in
sub
je
push
add
nop
xor
js
mov
jno
push
mov
leave
icebp
cmpsl
adc
push
sbb
daa
push
ja
pop
bound
mov
adc
dec
jp
pop
aad
mov
or
push
shll
push
fdivs
shr
outsb
sbb
out
cmp
ljmp
inc
or
sub
xchg
daa
lea
sub
adc
repnz
adc
in
test
das
dec
in
cli
push
cmp
jno
mov
in
push
sbb
sub
xchg
shl
push
cmp
scas
stc
jbe
dec
lods
das
pop
cwtl
add
adc
enter
cmp
push
cld
mov
pop
clc
xchg
mov
stos
loopne
adc
push
cs
enter
leave
inc
jo
mov
push
out
in
mov
xor
cmc
stos
fcoms
lock
test
adc
jle
or
idivl
rorb
and
add
hlt
andb
and
adc
or
or
pop
adc
je
add
orl
or
and
jle
mov
inc
mov
sti
call
adc
stc
adc
xchg
pop
mov
push
mov
cmp
aam
icebp
incb
test
jg
jmp
jne
mov
push
push
mov
cli
test
adc
add
cmpsb
dec
adc
test
cltd
lock
icebp
in
inc
jmp
stos
shlb
std
dec
sub
sbb
shll
inc
out
call
add
rcrb
sbb
and
inc
mov
and
pop
out
mov
xchg
and
neg
mov
lea
cmpsl
dec
jmp
xor
and
movb
out
es
sbb
inc
jecxz
xor
call
in
sbb
sbb
inc
sub
mov
out
xor
cmp
sbb
dec
ret
jecxz
inc
or
adc
sbb
repz
pop
xor
or
mov
loopne
sub
and
enter
jo
sbbb
or
or
inc
xor
or
jne
inc
add
or
or
rclb
or
xchg
sti
xchg
cmp
push
movsl
ret
fistps
or
inc
add
ret
shll
test
pushf
ret
mov
pop
rclb
insl
push
mov
iret
imul
xor
nop
pop
inc
cmp
push
or
mov
push
push
jb
and
clc
push
xchg
icebp
adc
rcll
enter
icebp
test
arpl
ss
jae
lcall
cs
xor
mov
loope
sbbb
ss
je
mov
dec
or
pop
push
ret
inc
sub
push
push
out
sub
pop
and
ljmp
jo
or
push
or
movsl
scas
popa
and
push
xchg
adc
xchg
shlb
das
inc
loop
push
and
jmp
cmp
divl
inc
ret
xchg
xchg
ficoms
add
jne
adc
dec
out
mov
test
movsl
ja
ss
test
mov
sbb
mov
push
push
pop
mov
aam
ret
mov
hlt
mov
movl
mov
sub
popf
xchg
repz
mov
cld
les
popa
cmp
adc
cli
inc
clc
cmpl
inc
xor
popa
add
xchg
sub
test
decb
push
lcall
test
arpl
push
mov
xchg
xlat
dec
cmp
push
fcmovnb
ss
ret
std
push
inc
mov
xchg
fmuls
lret
in
fs
sbb
push
push
jge
and
xchg
outsl
fiaddl
and
imul
mov
sub
dec
shll
xchg
aam
loop
adc
push
add
or
stc
test
and
or
push
adc
jo
popf
xchg
loopne
and
clc
xor
cmc
mov
bnd
mov
xor
adc
insl
orl
call
fdivs
andb
es
cmp
pop
cld
mov
lahf
push
jecxz
cmp
and
xchg
enter
inc
adc
dec
das
test
cwtl
aas
add
dec
mov
inc
push
sub
enter
pop
mov
lahf
sub
mov
icebp
inc
dec
cmp
jecxz
in
jge
loopne
jne
pop
mov
jmp
xlat
leave
fsubs
push
push
sbb
fbstp
pop
sbb
sbb
adcb
out
mov
cmpsl
inc
sbb
mov
dec
sub
rol
jne
mov
dec
stc
aas
sbb
add
push
adc
sub
insb
shrb
orb
loop
mov
lods
add
mov
mov
or
push
xchg
lock
sbb
lea
add
lods
adc
stos
jbe
and
adc
movsl
mov
call
lock
loope
popa
inc
ret
jp
addl
test
mov
mov
push
inc
es
shl
jge
jne
movsl
sbb
es
adc
fldl
or
mov
inc
xor
movsb
inc
enter
jg
cmc
in
test
or
enter
adc
jg
inc
xor
sub
sbb
adc
pop
ljmp
scas
fldenv
loope
jb
data16
ds
je
push
fsubl
js
jne
stc
mov
adc
inc
xor
mov
cmpsl
jne
repnz
jecxz
lock
jmp
xchg
jle
and
in
cmp
outsb
or
pop
xor
cmp
dec
inc
in
cmp
lock
xor
jb
push
push
push
sub
cwtl
pop
sub
mov
enter
cs
push
mov
loopne
jmp
add
lock
out
lock
sub
daa
outsl
mov
loopne
les
or
adc
mov
xchg
fwait
push
and
or
sub
pop
sahf
cmp
jp
mov
or
dec
enter
cmp
inc
imulb
insb
call
or
test
dec
mov
cmp
in
xchg
stos
dec
rorb
inc
xchg
rcr
pop
setne
pop
rorl
adc
or
lahf
test
push
loopne
cs
mov
cmp
xor
mov
mov
leave
pop
hlt
inc
push
rep
mov
xchg
test
ffreep
mov
mov
sub
test
xchg
fsubrs
sbb
inc
addb
sub
xchg
and
fnstsw
les
movsl
fisubs
fmull
ret
enter
andb
jns
popf
sti
orl
sub
add
or
je
mov
imul
mov
sbb
inc
adc
add
and
mov
xor
ds
xor
xchg
adc
pop
mov
arpl
pop
pop
pop
adc
or
mov
fs
sbb
shlb
add
xor
lret
fsubl
and
and
xor
and
inc
sbb
andl
nop
test
xor
and
push
dec
jmp
sub
sbb
xorb
pop
dec
xchg
or
add
jmp
xchg
faddl
aam
jb
xchg
push
or
adc
dec
push
test
dec
sbb
es
xor
xchg
push
ret
das
xor
sti
add
add
fwait
aaa
loop
fcompl
jmp
jl
or
pusha
adc
fcmovne
pop
push
mov
inc
das
push
mov
sub
fdivr
push
and
cmp
ds
ret
mov
jo
in
jbe
gs
push
push
inc
mov
cmpsb
mov
adc
xchg
mov
sub
test
xchg
push
inc
and
inc
pusha
test
lock
test
shrb
stos
mov
loopne
cmp
loope
mov
sub
sbb
ja
shlb
stos
xchg
out
shll
vcomisd
jp
fwait
roll
das
push
jns
es
sub
or
mov
cwtl
mov
sub
and
pop
xorl
mov
loope
or
lock
movsb
mov
push
push
test
pop
fstpt
outsl
inc
dec
inc
jbe
push
jno
lea
mov
xor
test
pop
cmp
ja
add
aas
adc
outsb
or
cmp
jle
jle
and
inc
mov
or
cld
das
out
cld
mov
dec
mov
lods
or
mov
cmp
jecxz
jo
inc
adc
mov
and
inc
mov
add
dec
mov
jecxz
jg
push
mov
and
lods
dec
mov
aaa
push
push
jb
dec
sub
and
stc
inc
cltd
and
loop
popf
repnz
loop
and
and
stc
inc
bnd
jmp
and
and
hlt
stc
hlt
sub
jne
jle
xchg
dec
xor
push
mov
xor
and
sub
sbb
or
adc
push
xor
jo
fadd
and
and
and
sar
je
fadds
xchg
ror
bound
dec
adc
jg
cmp
cmp
adc
add
movsl
adc
push
xor
and
push
stos
fldenv
dec
fdiv
movsl
fldenv
imul
call
das
lret
inc
cmovs
cltd
xchg
adc
sub
push
inc
into
adc
lret
sti
rorb
xor
mov
dec
adc
xor
mov
push
and
leave
mov
movsl
pop
rclb
imul
cli
ja
or
pop
push
test
loope
loopne
and
js
cld
push
xlat
call
or
loopne
jbe
aas
push
jo
ljmp
inc
mov
ljmp
adc
pusha
cmp
inc
shlb
std
shlb
adc
xchg
into
je
lods
pop
inc
inc
in
sub
and
sbb
xor
mov
out
lahf
inc
or
lahf
es
push
mov
repnz
and
adc
in
xor
andl
jns
inc
shl
inc
xchg
inc
pop
and
aaa
loop
xor
dec
fldcw
pop
jle
ja
pop
inc
lods
pop
mov
lea
mov
in
mov
or
shlb
xchg
xor
pop
cmp
jbe
xchg
bound
push
js
push
mov
or
call
push
mov
rcrl
and
pop
xlat
and
dec
daa
sbb
stos
shll
inc
lret
jmp
stos
mov
pop
jbe
sub
sbb
mov
sbb
std
mov
iret
inc
test
rcrl
bnd
xchg
jbe
inc
xor
fsubs
dec
rolb
sub
push
daa
pushf
loop
mov
adc
fdivs
add
sub
and
loopne
push
mov
pop
adc
or
pop
and
dec
push
jnp
mov
mov
adc
jg
push
out
ret
sub
dec
test
test
dec
mov
inc
inc
sbb
dec
int3
rorl
fmull
pop
xchg
divb
ja
es
out
mov
jne
mov
xlat
stos
je
cmp
in
popf
lret
xchg
fs
dec
fcoml
stos
std
xchg
mov
or
ret
add
inc
sbb
jge
cmp
iret
or
push
je
mov
popf
ljmp
pop
cmp
adc
adc
push
sbb
lea
push
cld
pusha
or
addb
inc
push
inc
cld
pusha
add
sub
aad
jmp
mov
push
movl
ss
lds
xor
xchg
and
jno
bound
loopne
loope
push
and
or
inc
in
inc
xor
mov
ret
popf
mulb
imul
push
cs
push
jp
pop
push
xchg
pop
cmpsl
jbe
cld
clc
lock
pop
frstor
mov
addb
mov
inc
add
insl
dec
cli
call
jbe
jmp
mov
sub
and
push
pop
push
or
aaa
push
xchg
xchg
mov
push
pop
dec
sbb
jo
xchg
cs
test
xchg
dec
sti
pop
and
cmp
jae
xor
push
adc
and
shll
roll
or
loopne
mov
xchg
test
mov
ret
mov
ficomps
fistl
xor
ret
xchg
adc
mov
lret
or
sub
add
dec
out
add
and
stos
sub
dec
xor
incb
cmp
push
cmp
jge
ljmp
dec
jmp
jns
mov
push
dec
cmpsl
xchg
or
das
lea
push
subb
adc
pusha
cmp
fidivl
inc
mov
sub
inc
cmpb
push
outsl
gs
jmp
pop
shlb
and
xor
enter
dec
adc
and
les
push
mov
dec
adc
dec
or
sub
or
test
adc
xor
xchg
jb
or
dec
test
xchg
cs
ljmp
jne
push
mov
jge
push
or
and
sbb
adc
mov
and
pop
call
mov
pop
adc
mov
and
in
negb
nop
or
or
and
inc
push
nop
scas
pusha
push
sbb
and
sbb
test
notl
sbb
or
mov
scas
add
or
xchg
sub
dec
movsb
sub
enter
adc
dec
pop
cmpsl
in
fisttps
lahf
mov
xchg
aam
lcall
jl
adc
mov
mov
xor
or
adc
mov
mov
xor
adc
mov
fldenv
adc
out
and
xchg
mov
es
dec
sbb
and
adc
sbbl
dec
dec
out
mov
push
dec
loop
pop
push
inc
lea
add
push
sti
jle
push
or
and
rcr
mov
or
adc
mov
js
or
and
inc
xor
sbb
mov
cmp
ret
adc
and
fimuls
jns
loope
ja
sub
mov
repz
mov
adc
jns
xor
adc
sub
or
fsubl
or
mov
or
icebp
mov
popl
or
jg
nop
pushw
adc
int
adc
or
adc
sub
adc
sbb
aas
sbb
mov
and
push
pop
jl
and
xchg
and
jo
cmp
jne
repz
or
inc
rclb
jmp
cmpsl
in
ljmp
roll
push
xchg
lret
mov
or
rclb
xor
add
push
push
movl
dec
popa
or
or
inc
push
pop
aaa
cmp
add
and
xor
or
add
pop
sbb
shrb
jmp
mov
inc
mov
cmp
xchg
inc
sub
push
mov
ret
mov
adc
rol
push
cmp
push
ja
and
in
push
sbb
add
push
push
clc
or
sti
sbb
or
pop
xchg
cld
loop
and
cmc
and
loope
sub
adc
adc
call
lods
adc
add
call
dec
sbb
enter
inc
or
adc
pusha
mov
idivl
call
or
adc
mov
adc
test
incl
loop
andb
mov
fwait
pop
and
inc
repz
mov
stos
push
popf
loope
xchg
and
adc
fldl
add
add
and
xor
and
sbb
movb
xor
adc
les
push
test
add
sbb
push
cmpsl
jbe
sub
inc
sarl
unpckhps
scas
sbb
push
adc
cmp
sbb
iret
daa
push
adc
es
push
inc
cltd
inc
sub
or
data16
daa
ljmp
enter
xor
bound
or
cmc
xlat
les
and
les
jb
scas
mov
sbb
add
daa
popf
scas
bound
les
ljmp
sub
icebp
or
pop
cmp
add
jb
mov
js
loope
lcall
and
add
adc
inc
std
hlt
pop
sub
gs
mov
sbb
adc
inc
xor
sub
mov
mov
pop
repnz
mov
adc
loopne
and
dec
adc
inc
mov
daa
xchg
out
xchg
jmp
mov
addr16
adc
enter
and
pop
inc
adcb
cmp
and
dec
movsb
xchg
xchg
and
add
loop
dec
xchg
and
xor
or
or
xchg
inc
xor
leave
adc
sub
jnp
lret
enter
xor
notb
aad
decl
cmp
cmp
je
jp
jne
addr16
or
push
jmp
je
aam
psubusb
ret
roll
out
sbbl
out
or
dec
or
mov
nop
cld
ret
rorb
test
call
and
xchg
test
enter
add
and
mov
in
lea
mov
mov
icebp
and
push
cltd
add
jbe
mov
xchg
or
adc
stc
xor
push
lea
sub
sbb
adc
fwait
or
test
mov
jbe
dec
xchg
call
inc
jg
je
lods
leave
hlt
ja
imul
jmp
mov
mov
ljmp
fwait
addb
and
mov
inc
cmp
push
push
loopne
jne
sub
xor
adc
mov
and
or
mov
mov
mov
mov
and
and
daa
mov
inc
mov
push
and
push
or
push
xor
or
jg
and
popa
lret
je
pop
movl
inc
ja
test
sub
mov
mov
call
xchg
or
sub
add
int
aas
add
inc
xchg
fs
push
addl
sub
and
sarb
add
and
and
cmp
loop
push
ret
inc
stos
mov
adc
push
add
dec
xchg
test
xor
lret
add
dec
pop
sbb
xchg
movsb
xor
out
dec
int
js
addr16
lea
adc
ss
insb
and
add
icebp
movsb
push
push
dec
int
outsl
inc
xor
xchg
jne
or
aam
push
mov
xchg
xchg
push
jmp
xchg
dec
or
addl
cmc
add
test
lret
pop
cs
push
inc
dec
sub
sahf
mov
fsubrs
push
and
add
push
and
jae
lods
pop
sub
push
inc
mov
adcl
xorb
xchg
test
cmpl
and
subb
andb
pop
sahf
hlt
dec
push
ja
or
dec
mov
adc
les
stos
mov
mov
xor
scas
inc
jnp
jmp
xor
or
jl
and
add
mov
cwtl
xchg
sub
sbbl
lcall
es
add
or
and
loopne
imul
lret
cmpsl
pop
fwait
adc
add
add
pop
lods
pop
stos
adc
or
or
cmp
or
push
cvtpi2ps
xor
ss
adc
out
lret
xchg
push
inc
loope
sbb
xor
adc
or
ret
adc
xor
lock
add
jecxz
sbb
jp
pop
lret
ret
xchg
inc
arpl
roll
rcll
jo
loop
inc
jno
daa
into
jg
mov
lcall
subl
or
jbe
sbb
push
adc
je
out
pop
and
push
xor
in
imul
ja
sub
sub
ljmp
fdiv
dec
mov
sbb
jp
in
mov
mov
stos
push
or
pop
push
and
in
enter
mov
cmpb
out
cld
xchg
popf
out
jle
or
push
mov
push
dec
leave
push
loope
lcall
testb
lret
jae
dec
sub
adc
pop
sub
sbbb
int3
or
push
out
xlat
jae
inc
mov
les
enter
insb
push
and
push
sbb
inc
hlt
inc
and
mov
xchg
loope
out
and
jp
rorb
pop
inc
jecxz
and
shr
or
je
pushf
add
jb
mov
push
sbb
stos
js
pushf
out
push
inc
push
fadds
push
rdtsc
or
adc
in
adc
data16
pop
push
fsts
push
in
and
sub
cmp
adc
mov
mov
rcr
or
push
xor
cld
cmpsb
xchg
mov
mov
lds
adc
in
pop
push
and
cmp
push
add
push
scas
sbb
enter
sahf
adc
out
dec
xor
and
pushf
shr
ja
int
rorl
fadd
dec
inc
mov
dec
xchg
adc
or
and
dec
sub
faddl
into
adc
adc
jmp
and
aas
mov
aaa
xchg
test
pop
and
fst
dec
mov
or
orb
mov
inc
inc
test
lahf
iret
je
and
movsl
sub
clc
pop
stos
dec
inc
and
push
jg
mov
push
and
rorl
scas
ret
push
jmp
mov
adc
adc
mov
xchg
inc
inc
imul
jle
adc
or
sbb
out
jmp
lods
xchg
xor
mov
ljmpw
out
je
xor
shlb
push
dec
dec
pusha
adc
pop
pop
mov
and
add
and
and
and
mov
movsl
ds
xchg
and
lock
cli
test
bound
test
nop
shlb
add
rorl
adc
mul
dec
mov
idiv
and
pop
out
jne
sahf
push
inc
xlat
stc
mov
mov
cmpsl
mov
ds
movsl
xchg
push
and
cltd
sub
xor
cmp
inc
or
push
and
pusha
dec
out
push
push
notb
jmp
fisubl
aas
inc
repz
push
cmp
es
or
adc
fimull
push
adc
aaa
dec
or
adcb
in
adc
clc
les
out
dec
fsubs
cs
jmp
popf
mov
jne
mov
mov
cmpsb
loope
xchg
popa
lahf
adc
mov
mov
add
stos
mov
add
mov
or
or
jge
or
jmp
rclb
push
leave
cmpb
or
enter
xchg
adc
orl
jne
adc
sbb
sbb
add
jae
insb
mov
lea
xor
jl
lock
adcl
inc
incb
add
fmuls
sub
mov
testl
lea
int3
fdivrs
and
push
in
pop
jne
repnz
jmp
inc
fcom
sbb
mov
je
fcoml
cmpps
push
mov
pop
mov
inc
mov
mov
lea
mulb
jbe
repz
jmp
int3
icebp
xchg
loopne
and
push
inc
add
xchg
sub
pop
mov
cmp
je
sbb
jne
jne
fists
jp
push
negb
pop
cmp
int3
lret
xor
or
adc
xchg
sub
flds
ret
dec
mov
push
cmp
sbb
inc
outsb
stos
push
insb
test
dec
xor
mov
push
nop
aam
or
mov
jnp
fs
add
xchg
push
clc
dec
imul
jmp
sbb
sub
and
cltd
stos
mov
loop
sub
or
jo
or
inc
push
arpl
mov
xchg
jae
push
or
loop
std
xor
enter
ja
inc
int
inc
sub
push
push
xchg
outsb
loop
push
pop
ret
xchg
sub
test
insb
je
push
xchg
test
or
movsl
sub
sbb
and
inc
loope
jmp
cmp
cld
int3
or
or
mov
dec
cs
xor
xchg
push
cmpsb
sub
stos
xlat
dec
fnsave
xlat
mov
push
lcall
adc
call
xchg
dec
dec
pop
int3
sarb
hlt
daa
aam
pusha
hlt
or
inc
xor
mov
loop
loope
nop
xchg
icebp
sti
loopne
enter
or
push
loope
leave
xchg
xor
inc
mov
adc
mov
jmp
nop
dec
push
mov
and
sub
nop
mov
addl
sbb
and
jne
maskmovq
idivl
es
jno
cmp
mov
lock
xchg
sbb
mov
dec
fiadds
fistpll
jne
xchg
push
lods
daa
enter
adc
and
push
int
fsubrs
enter
int3
and
les
inc
test
imul
jmp
test
push
jl
mov
lret
nop
lcall
jg
outsl
enter
fbld
rcl
or
sbb
test
neg
lds
test
mov
xor
jp
xor
add
push
sarb
loope
inc
icebp
xor
ret
rcrl
and
loop
fidivs
ficomps
enter
or
pusha
fisubs
dec
jno
or
cmpsl
frstor
bound
lret
in
shlb
adc
or
shl
adc
push
lods
or
rcrl
jno
ss
aam
adc
out
sbb
add
mov
pop
sub
aas
add
aam
int3
or
test
mov
cmp
out
mov
ret
testb
clc
dec
cltd
mov
out
pop
xor
movsl
fcoml
addr16
js
push
imul
mov
fadds
dec
push
and
ret
push
sysret
sub
xor
jb
dec
int
push
outsb
repz
gs
inc
lods
mov
and
call
xor
push
daa
mov
nop
or
sahf
mov
and
out
sub
xchg
ja
mov
adc
or
jg
xor
test
js
js
and
test
or
adc
enter
jb
adc
xor
add
jb
adc
sbb
out
sub
and
mov
mov
lods
jb
adc
mov
pop
adc
inc
inc
jo
jmp
dec
add
or
adc
and
rolb
int
fisubl
dec
dec
xchg
push
and
bound
adc
aam
sub
sub
adc
or
sbb
enter
imul
mov
lcall
insb
mov
jb
aam
jns
sbb
jecxz
xor
sti
test
cmp
inc
sbb
pop
inc
xor
adc
ret
sub
adc
mov
push
adc
push
inc
xor
enter
adc
jnp
js
or
lds
xchg
dec
out
or
push
aaa
sub
adc
neg
pop
in
pusha
inc
add
test
dec
test
dec
cmp
leave
add
adc
jg
cld
loopne
jg
aam
mov
lods
or
ss
xchg
pop
gs
sub
adc
jnp
inc
or
sbb
xor
cmp
mov
inc
roll
sbb
jbe
hlt
add
mov
mov
pop
xlat
ljmp
test
mov
adc
jno
push
dec
fs
push
pop
mov
mov
push
xor
lahf
adc
ret
icebp
push
xchg
inc
les
pop
dec
xor
ret
out
test
scas
leave
push
jle
test
inc
or
dec
pop
clc
pop
xor
push
and
pop
or
popf
push
add
inc
test
stos
rcl
repz
and
popf
mov
cmc
sbb
mov
jne
jne
dec
or
xor
rorl
daa
jnp
in
ficompl
jne
jmp
push
sbb
imul
push
cmp
out
inc
inc
inc
adc
jmp
sar
je
movsb
pop
loop
pop
push
cld
jge
das
inc
in
xchg
xor
adc
repnz
add
push
push
call
imul
dec
mov
stos
jns
or
cmp
push
enter
mov
inc
cmp
push
lahf
jae
hlt
dec
pop
ljmp
lahf
rolb
mov
aad
cmp
fsubl
lret
lret
popf
cmp
ja
dec
mov
xlat
cld
jae
sbb
stc
inc
mov
fbstp
pop
dec
test
pop
or
jmp
aad
xor
out
iret
xor
notb
sub
inc
or
mulb
push
int3
or
push
push
lret
adc
cmp
lahf
xchg
call
push
add
clc
add
test
test
jmp
mov
jne
inc
push
adc
in
sub
jmp
pop
inc
and
xchg
inc
test
inc
or
push
inc
cmp
add
sbb
sbb
mov
adcb
dec
bound
push
lock
xor
adc
mov
mov
dec
sub
mov
lcall
rolb
into
and
and
add
or
dec
pushf
lods
dec
aad
sub
mov
test
gs
insb
test
ss
je
push
adc
into
test
and
adc
int3
int
dec
nop
cltd
les
mov
mov
movsb
scas
mov
cmp
xor
sbb
lcall
rcrb
nop
andl
imul
sub
or
jl
rcr
push
hlt
mov
xchg
and
adc
cltd
insl
xchg
or
in
jmp
int3
pop
jecxz
ds
or
pop
mov
push
adc
frstor
pushf
inc
shlb
inc
fcoml
inc
xchg
mov
and
lret
mov
and
add
push
test
cld
mov
push
ja
movsb
fists
outsl
and
pop
push
add
push
bnd
adc
gs
or
push
xor
mov
ljmp
sbb
hlt
adc
cmc
jge
test
iret
and
sbb
daa
jg
and
sub
sbb
jmp
sub
fs
or
and
adc
sub
and
lcall
xchg
dec
xor
add
mov
test
pop
test
mov
adcl
bound
movsl
xchg
dec
test
or
or
inc
or
repnz
adc
mov
je
or
mov
mov
push
mov
test
add
popa
adc
loope
jb
lock
push
mov
mov
pop
mov
or
movl
xchg
call
ror
xor
adc
js
adc
leave
cmpsb
cmpb
ds
loopne
pop
mov
adcb
pop
addr16
push
test
sub
addb
push
push
mov
inc
inc
int3
adc
test
cmp
mov
adc
jbe
mov
xor
mov
or
clc
out
ljmp
mov
adc
loopne
call
push
xor
fucom
adc
scas
int3
xor
movsb
push
sbb
icebp
enter
sbb
adc
mov
bound
push
push
test
inc
je
xchg
add
outsl
adc
ss
push
out
dec
lds
push
fs
dec
adc
jb
lock
inc
adc
jbe
inc
xor
fucom
push
addl
fildll
dec
testb
loopne
outsl
int3
fstpt
gs
inc
test
push
cmp
outsl
fisttps
push
jl
jo
dec
dec
sub
arpl
mov
mov
cld
sub
movsl
js
push
in
dec
fisubs
adc
dec
mov
outsb
or
lret
stc
adc
adc
scas
mov
test
andb
sub
enter
insb
jmp
nop
mov
lods
cmp
or
or
xchg
repnz
nop
adc
sbb
sbb
mov
leave
pop
mov
lret
stos
xchg
push
enter
inc
inc
mov
mov
adc
mov
ja
or
or
out
cli
dec
test
testl
test
sbb
mov
xchg
enter
aaa
mov
mov
test
pop
addr16
fisttpl
or
add
push
mov
push
mov
daa
pop
pop
ror
bound
daa
or
int3
popf
je
imul
inc
add
incb
leave
push
push
dec
jmp
fmull
push
inc
or
js
daa
call
les
and
adc
test
push
or
mov
inc
cmpsl
clc
inc
aaa
sub
inc
sub
into
adc
jo
xchg
repz
sti
leave
xchg
adc
and
ret
fwait
mov
add
ror
stos
je
adc
enter
jb
adc
sbb
nop
stos
mov
adc
or
pusha
inc
pop
sub
inc
dec
mov
inc
cmp
das
addr16
mov
adc
push
sub
adc
push
je
push
jmp
fsub
add
out
ds
imul
pusha
inc
test
xchg
adc
mov
and
adc
cmp
xchg
dec
and
arpl
lret
fmuls
repz
and
mov
les
roll
mov
repnz
mov
jmp
data16
sub
and
outsl
mov
in
pop
push
dec
sahf
dec
fnstenv
sub
inc
data16
jl
mov
or
sbb
push
jl
inc
ljmp
sub
cwtl
xor
xchg
add
ja
adc
rep
xchg
fistl
pop
inc
inc
neg
sarl
sbb
jmp
mov
or
mov
dec
clc
mov
jl
ret
sbb
sub
or
or
cvtps2pi
xchg
mov
rolb
enter
xchg
adc
mov
xchg
inc
jmp
pop
leave
dec
lret
je
xchg
pop
movsb
push
adc
popa
and
pop
lea
xlat
inc
in
add
fsubs
xor
insl
pop
out
adc
leave
cmpsb
add
lea
xchg
lds
and
lret
xlat
and
xor
push
daa
lds
scas
inc
xchg
enter
mov
aam
pop
add
xchg
outsb
xlat
jnp
push
dec
push
pop
inc
lret
add
jnp
inc
xor
dec
inc
dec
test
sub
jns
adc
ds
sbb
xor
pop
mov
loop
pop
ja
arpl
pop
incb
aad
pop
push
sub
enter
les
mov
movsb
sahf
ja
out
loope
xor
or
mov
add
and
add
push
sbb
or
push
stc
insl
inc
sub
xchg
aam
dec
mov
push
cld
or
mov
push
mov
stos
movsl
enter
push
cmc
or
adcb
jb
aas
ret
inc
dec
daa
js
sub
dec
test
ret
shll
fdivrs
dec
or
xchg
adc
cwtl
inc
add
mov
negb
jge
xchg
adc
inc
mov
call
dec
add
mov
xchg
std
test
ja
mov
std
sbb
dec
inc
iret
inc
mov
xor
push
inc
mov
and
les
or
mov
andl
and
inc
loope
enter
adc
inc
and
popf
sub
int3
and
jl
mov
cwtl
and
dec
mov
iret
scas
and
mov
xchg
cld
out
inc
pop
jbe
ljmp
sub
push
movsl
addr16
outsl
push
insl
push
push
clc
lea
push
out
cwtl
cmpsl
and
enter
mov
or
adc
add
dec
xchg
lods
popf
mov
push
push
inc
add
mov
dec
in
push
sub
and
push
and
xchg
dec
push
and
cld
mov
adc
int3
adc
jmp
je
mov
mov
jmp
pop
push
xchg
in
mov
fsubrl
fisubrs
dec
mov
decb
mov
jmp
stos
out
sbbb
or
pop
or
push
sbb
pop
push
add
lea
mov
mov
lock
jb
enter
loop
or
mov
sub
fs
dec
rcrl
xor
mov
pop
ret
push
nop
popf
and
push
into
call
adc
scas
fs
pop
bnd
inc
loopne
mov
xor
pop
mov
jmp
inc
insb
dec
mov
mov
js
cmc
bound
nop
sbb
movsb
lret
mov
sbb
cmp
adc
add
adc
test
mov
les
mov
or
push
mov
inc
leave
and
pop
popf
sbb
inc
repz
das
sbb
push
neg
xor
xor
mov
sub
out
inc
pop
mov
pop
cmp
mov
adc
sub
popa
bound
push
pusha
cwtl
adc
and
mov
mov
in
pop
jb
lret
mov
adc
jg
adc
hlt
into
fdiv
mov
xlat
mov
mov
inc
mov
pop
mov
icebp
mov
cwtl
inc
or
dec
pusha
cli
dec
mov
pop
adc
mov
in
seta
push
call
insb
sub
andl
cmp
dec
sub
fsts
or
adc
loope
push
mov
mov
jge
mov
jo
sbb
mov
jo
mov
lods
inc
fcmovnb
cmp
inc
loope
test
insl
pop
inc
in
call
jb
xchg
inc
aam
cmc
or
or
mov
idivb
call
lcall
call
pushf
and
frstor
xchg
mov
xor
stos
icebp
or
sub
mov
je
je
adc
inc
aas
or
xchg
xchg
jbe
sub
sub
jno
stos
jne
jo
mov
fdiv
cmp
xor
xchg
bound
adc
or
imul
jge
bound
insb
mov
inc
lods
rcll
sbb
or
mov
push
xor
mov
cmp
jmp
sub
dec
inc
push
cmp
lret
adc
jl
mov
mov
or
outsl
fidivs
inc
mov
fsubrp
add
ss
inc
adc
mov
arpl
mov
or
fbstp
insb
cmp
mov
mov
xor
cmp
scas
inc
pop
push
test
mov
call
popa
xor
call
add
jl
jbe
and
add
mov
int3
gs
mull
jae
mov
inc
ss
add
cmc
inc
cmp
dec
ds
pop
mov
xchg
sub
sbb
stc
cltd
cmp
ds
sbb
outsb
enter
ljmp
addb
stos
and
shlb
leave
mov
or
inc
inc
scas
and
cs
dec
sub
mov
pop
push
push
xor
movsb
daa
add
push
and
add
inc
call
test
sub
icebp
pop
or
cmp
pusha
sub
inc
and
fs
or
test
divb
push
insb
mov
lret
sub
sbb
into
sub
fs
dec
add
or
std
inc
add
enter
call
arpl
std
in
rcrb
sub
mov
gs
clc
and
arpl
dec
mov
jne
in
jmp
in
adc
push
xor
dec
push
xlat
or
xor
adc
nop
push
pop
lcall
adc
iret
xchg
xchg
aam
xor
je
xchg
mov
mov
jmp
in
push
pop
and
xchg
out
xor
mov
pop
addr16
mov
cmp
lret
movb
aam
imul
xchg
jg
push
repnz
data16
dec
pop
insl
dec
dec
and
add
push
scas
int
xchg
adc
scas
sub
sub
in
mov
sub
xor
or
adc
cld
scas
xchg
pop
cltd
dec
daa
fs
jns
orb
and
adc
sbb
and
lea
cmp
jle
mov
and
pop
mov
pop
pmullw
rclb
jecxz
aas
js
call
mov
lock
movl
pop
dec
movsb
int3
call
cmpsb
dec
sub
xor
stos
popa
jns
add
or
les
call
test
stc
jno
mov
cmp
ja
jb
pop
push
call
or
pop
xor
daa
mov
add
enter
imulb
shll
xlat
lock
push
inc
in
shl
fxam
adc
and
not
test
lret
mov
loopne
add
jmp
filds
and
push
sub
jg
sahf
jmp
or
and
jl
into
xchg
not
inc
jle
je
adc
lods
push
mov
sbb
push
mov
xor
jmp
test
xor
inc
push
sub
lock
or
mov
xor
push
stos
testb
ss
or
and
test
adc
mov
sbbb
sbb
fcmove
mov
sub
fistpl
sbb
adc
mov
hlt
inc
outsl
loopne
add
in
jbe
mov
push
clc
inc
lods
nop
xchg
pop
adc
shl
out
xchg
sub
jmp
add
jne
push
xor
stos
fs
subl
inc
sti
and
sbb
push
and
call
xchg
imul
push
jle
test
xor
mov
cmp
test
and
inc
outsl
sbb
cmc
bound
cmp
pop
sub
inc
mov
pop
daa
lcall
mov
add
nop
xor
pop
das
into
cmpsb
jmp
or
adc
dec
or
cmp
jbe
push
push
mov
push
out
enter
je
sbbl
mov
adc
stos
ret
jmp
jg
inc
adc
sub
scas
and
pop
jl
push
call
mov
es
nop
icebp
push
pop
repnz
adc
adc
scas
xchg
dec
dec
jnp
lcall
mov
pop
xchg
mov
add
and
push
push
daa
test
pop
cmp
nop
daa
je
mov
xor
test
inc
inc
sub
and
mov
push
inc
inc
popf
ficoml
pop
std
hlt
outsb
jbe
adc
jmp
test
mov
dec
inc
add
mov
adc
lods
lds
add
and
cli
mov
cmc
sub
stos
xchg
cmp
subb
jns
bound
clc
inc
ret
cli
cltd
nop
or
or
shl
mov
daa
ret
inc
push
nop
stos
enter
cmpsb
mov
ds
nop
rorl
cli
ror
xor
or
dec
shll
cwtl
ljmp
pushf
lret
or
mov
sti
add
cmpsb
or
add
add
and
fildll
or
sbb
and
sahf
stos
adc
int
and
add
lea
dec
jmp
jmp
and
sub
xor
inc
cmp
cmp
cld
dec
xchg
cld
ret
dec
leave
inc
fmulp
icebp
inc
ds
dec
mov
jge
jns
je
inc
mov
cmp
mov
cltd
pusha
dec
push
push
jns
imul
icebp
push
test
pusha
inc
add
mov
jnp
add
and
or
add
rcrb
addb
test
dec
js
fmull
dec
sub
out
stc
dec
loop
mov
push
stos
inc
les
andl
sub
aad
mov
cwtl
pop
jp
neg
xchg
or
and
movsl
sbb
aam
cmp
sbb
stos
dec
arpl
bound
mov
cmp
std
jle
xor
inc
adc
in
enter
mull
hlt
xor
push
cli
mov
icebp
jg
loopne
push
call
fs
dec
imul
cmp
cli
stos
sub
dec
je
push
jg
inc
test
inc
and
stos
jns
test
ljmp
or
int3
and
push
pop
call
das
push
lock
jl
dec
shl
push
out
pop
xchg
dec
and
shll
inc
movsb
adc
mov
push
shr
cmp
xor
and
bound
mov
jl
iret
inc
push
mov
jecxz
and
inc
jecxz
add
jae
pusha
add
mov
ret
cmp
and
xchg
dec
mov
pop
mov
stos
decb
sub
sbb
jl
push
sub
jg
ja
fs
dec
push
scas
and
dec
push
out
xor
movsl
cmpsl
xchg
mov
ds
mov
sahf
sti
dec
fwait
aaa
mov
mov
in
popa
pushf
mov
adc
push
nop
add
sub
call
adc
movsb
sbb
pop
mov
std
ja
cmp
data16
jmp
scas
push
xor
adc
or
mov
in
cmpsb
scas
mov
test
push
mov
mov
dec
sbb
mov
sbb
or
mov
pusha
and
dec
mov
nop
out
xor
mov
sbbb
cmp
cmpsb
lods
pop
sbb
dec
xlat
enter
xchg
adc
adc
or
ror
or
movsl
lret
jle
test
inc
movsl
pop
inc
or
push
ud0
in
adc
sbb
decb
test
cmp
scas
push
jno
mov
test
inc
sbb
dec
stos
addr16
push
call
cmc
xor
or
repnz
jae
dec
std
pop
push
mov
xchg
iret
dec
mov
les
call
stos
scas
mov
dec
mov
mov
jmp
push
xor
add
or
sub
or
adc
sbb
pusha
push
out
leave
test
inc
or
xor
adc
mov
dec
or
push
into
xor
or
idivb
fiaddl
push
or
repnz
or
or
add
loope
loopne
adc
mov
jne
xor
add
push
push
mov
cmp
adc
xchg
in
push
je
mov
pop
cmp
pop
xchg
das
pop
or
pop
bound
inc
in
add
xor
cmp
pop
mov
push
nop
inc
enter
and
imul
xor
sub
cli
inc
gs
dec
cmp
movsl
bound
or
xor
push
inc
es
ljmp
nop
cli
jnp
adc
and
mov
adcb
jmp
or
pop
push
cld
push
xor
xchg
mov
inc
cpuid
jnp
cmc
jp
xchg
stos
mov
jecxz
xchg
mov
sub
xor
add
inc
dec
add
sub
int
imulb
pop
xchg
pop
jge
push
add
cmovno
sbb
in
inc
and
lock
push
mov
sahf
sub
or
movl
adc
test
sbb
nop
adc
push
call
ret
push
scas
scas
test
xchg
lock
test
sahf
mov
dec
add
test
pop
adc
roll
call
push
cmp
and
push
add
andb
xchg
or
faddl
scas
mov
pop
ret
jle
or
ljmp
repnz
dec
mov
and
cmpsl
push
movl
adc
cmpsl
jae
xchg
shlb
push
mov
repnz
push
cmp
adc
jge
outsl
jb
pop
add
addb
ret
dec
dec
xchg
fwait
jo
add
add
jnp
mov
test
sub
invd
mov
add
ljmpw
add
test
sub
and
je
mov
ret
out
aaa
call
or
mov
xchg
mov
mov
jae
lret
jle
mov
nop
bound
test
fcomps
ss
gs
and
rcr
sub
jno
or
shrl
adc
aad
pushf
xchg
test
mov
mov
fcmove
fstpt
lahf
jo
fs
adc
jne
testb
mov
or
and
dec
wrmsr
and
inc
xor
addl
add
sahf
or
imul
loope
push
push
or
xchg
cmp
and
or
rcr
add
enter
adc
decb
push
and
adc
adc
in
test
push
sahf
adc
add
or
arpl
data16
stos
pop
mov
inc
mov
mov
or
sahf
push
push
sub
dec
xchg
adc
cmp
das
push
insl
add
popf
push
push
xor
int3
repnz
mov
push
and
mov
lock
lahf
jecxz
cld
jl
inc
popf
into
mov
ja
aad
push
ja
inc
pop
adc
add
jge
idivb
inc
jb
xchg
dec
inc
mov
add
xor
test
pop
dec
pop
in
ret
add
pop
sub
jmp
sbb
adc
gs
add
in
pushf
mov
out
stos
test
and
and
mov
pushf
stos
mov
pop
mov
jge
sub
stos
scas
mov
mov
xor
and
mov
mov
test
stc
fdivl
dec
or
rorb
dec
sbb
lret
in
mov
sti
sub
ret
movsl
or
sub
xchg
cmp
mov
es
pop
jo
xchg
xchg
shll
cmpsl
push
inc
inc
inc
fs
add
inc
xor
cwtl
cltd
lea
clc
cmp
push
xor
or
inc
add
hlt
data16
mov
mov
sbb
mov
cs
xchg
jnp
sub
shlb
or
sub
lods
sbb
xor
in
pop
or
roll
imul
enter
add
leave
sub
sahf
sub
sbbl
adc
adc
mov
in
daa
sub
xchg
cvtpi2ps
in
inc
or
mov
mov
loop
add
add
int
and
push
xor
inc
ds
fdivs
push
jne
xchg
or
imul
push
push
or
mov
cmp
and
je
xchg
inc
in
mov
lret
dec
push
push
xchg
cmp
sar
mov
test
push
push
xchg
dec
sub
or
jo
fnstsw
dec
jl
adc
sub
aad
adc
mov
mov
mov
cmpsl
shlb
rcll
xchg
mov
and
int3
or
mov
mov
inc
mov
bound
and
je
jo
cmp
ss
adc
mov
xchg
push
mov
imulb
xchg
in
jo
add
jne
lock
ljmp
and
jne
outsl
lods
pushf
sbb
jo
push
fs
sub
pop
repnz
add
dec
pushf
or
jbe
mov
pop
cmpsb
shlb
push
js
cmp
cld
mov
or
or
leave
jg
xchg
mov
aas
idivb
and
push
mov
add
ret
test
shrl
xlat
nop
inc
add
das
mov
pop
push
gs
pop
adc
fxch
mov
in
cltd
adc
dec
push
shrl
pop
sbb
mov
std
lock
push
push
mov
adc
xchg
xchg
lret
mov
sahf
mov
not
inc
mov
push
mov
and
add
inc
mov
or
mov
add
dec
je
adc
icebp
or
pop
jmp
adc
xchg
test
push
stc
cmp
push
and
or
sub
stc
test
shl
ja
or
test
jns
pop
xchg
stos
ret
inc
sbb
pop
test
inc
bound
mov
loop
arpl
dec
sub
mov
repnz
sub
ss
mov
scas
mov
add
lea
add
pop
std
in
cmc
ljmp
shrl
mov
lods
sbb
or
jge
andl
enter
xlat
loope
int
mov
sub
and
sbb
cmp
push
popf
pop
int
cmp
out
dec
call
test
mov
data16
and
cwtl
and
mov
pop
sub
movsl
pop
enter
xor
cld
fisubs
jp
xor
lcall
or
dec
xchg
sbb
bound
add
add
dec
arpl
fs
xchg
or
sbb
xchg
add
xchg
fmuls
adc
test
inc
or
jmp
xor
adc
mov
push
sbb
add
mov
cwtl
inc
movsb
jl
xchg
jmp
adc
hlt
std
pop
jl
and
ds
movl
in
cmp
mov
mov
fists
addb
sub
push
xor
icebp
mov
lret
ffreep
dec
pop
call
mov
dec
push
or
dec
cmpsl
adc
jmp
insl
dec
repnz
pop
loop
adc
and
daa
clc
cld
jbe
enter
pop
cmp
fidivl
nop
flds
or
inc
cmp
xchg
adc
and
sub
loopne
cmp
ret
xor
add
imulb
testl
call
inc
frstor
or
mov
push
or
xor
cltd
mov
in
and
cld
adc
mov
cmpl
lahf
sahf
lret
or
pusha
and
pop
setle
enter
jbe
popa
ud0
shrl
and
or
fs
loopne
pop
xor
jb
mov
xchg
lds
out
jge
dec
push
mov
cmc
dec
sub
inc
aad
test
pushf
inc
dec
rorl
bt
and
xor
mov
fstps
adc
adc
mov
out
sbb
les
or
lahf
mov
cmp
rclb
and
and
clc
adc
sbb
leave
rclb
pop
mov
xchg
cli
int3
add
test
test
jb
int3
les
cld
push
movsb
sub
lods
test
mov
imul
sbb
je
dec
sub
data16
sub
ret
pop
and
or
cld
jecxz
push
cmp
pop
cld
mov
lds
cmp
test
into
popf
adc
hlt
mov
lea
jb
arpl
hlt
xor
lret
push
bnd
mov
cmp
sbb
jmp
mov
or
or
loope
add
add
add
xlat
inc
fiadds
xor
inc
ss
mov
and
inc
clc
enter
mov
dec
mov
or
fwait
outsb
je
cltd
jae
test
inc
mov
mov
mov
aaa
ret
inc
stc
into
adc
xchg
mov
sbb
pop
pop
push
mov
dec
push
pop
push
push
into
mov
jmp
ret
dec
pop
or
add
cmp
jne
cmc
push
std
inc
xor
ret
mov
push
and
insl
out
pop
jp
dec
push
mov
orl
or
and
out
mov
sbb
jo
xchg
hlt
dec
mov
lods
lret
mov
adc
xor
add
mov
jmp
or
cmp
xor
rep
jo
js
and
pop
inc
push
mov
gs
or
xchg
inc
sbb
mov
cmp
test
and
daa
adcb
or
push
enter
dec
paddd
fldl
xor
sarl
rolb
jmp
aam
and
jne
adc
clc
push
push
fs
jl
lahf
jae
ret
nop
lahf
imul
cmpsl
adc
push
dec
cmp
dec
add
push
xchg
cmp
or
cmp
add
pop
jns
mov
jl
jne
inc
imul
pushl
mov
jo
adc
add
sbb
mov
test
add
or
mov
test
dec
mov
push
push
iret
enter
adc
sub
jmp
xchg
pop
jns
xchg
and
or
fs
in
dec
adc
mov
adc
jae
mov
in
loopne
cwtl
inc
dec
js
mov
add
inc
sbb
pop
call
hlt
aam
and
push
inc
cmp
jp
inc
stc
es
push
inc
push
mov
daa
dec
pop
xor
mov
sbb
lea
xor
and
mov
popa
pop
adc
lcall
xchg
test
or
adc
call
xorl
ret
in
dec
mov
and
or
inc
adc
xchg
cmp
sbb
filds
in
in
pop
cmpsb
cmp
push
dec
out
push
mov
pop
adc
mov
decb
dec
dec
add
subl
fidivs
imul
stos
andb
inc
mov
dec
mov
fs
fs
add
shl
insb
cmp
or
insb
rcrb
ja
pop
lock
sahf
push
xor
push
push
jmp
std
jl
inc
cltd
mov
pop
lea
add
sahf
orb
ljmp
jl
jl
inc
stos
iret
nop
add
xor
mov
inc
dec
jns
gs
mov
xor
iret
xchg
out
movsl
icebp
mov
adcl
not
and
and
ret
push
aad
mov
push
scas
push
sahf
or
and
fdiv
pusha
in
je
cmp
gs
in
popf
pop
sub
jl
lcall
and
inc
rolb
lret
mov
or
adc
xor
xlat
jne
or
mov
sub
daa
fmull
sbbb
cli
mov
mov
jbe
ficomps
sbb
jp
test
mov
jp
test
mov
pop
xchg
jb
jl
nop
lret
sahf
ret
and
xchg
adc
jo
dec
mov
jmp
mov
stos
xchg
repz
cltd
ja
cmp
adc
jg
loopne
cmp
das
jle
inc
ret
in
scas
mov
and
out
pop
fimull
loopne
inc
clc
inc
jge
xchg
pusha
idivb
fwait
sub
mulb
add
inc
sub
adc
ss
adc
mov
mov
xor
and
push
mov
sahf
push
cs
nop
loopne
adc
and
test
mov
loope
clc
jmp
gs
xchg
into
pop
mov
adc
rclb
sub
add
mov
movl
shrb
adc
xchg
sub
and
dec
pop
adc
adc
daa
loopne
add
mov
ja
jbe
lcall
inc
cmp
jle
mov
mov
out
sub
mov
mov
fs
andb
dec
xor
xor
in
inc
mov
movl
aad
and
mov
sub
add
lea
sub
lds
aas
xorb
push
add
push
push
fadds
push
adc
cmp
pop
pop
pop
movl
cmp
popa
ret
mov
fsubr
jae
fldl
jmp
add
fdivrl
inc
out
xchg
mov
ss
negl
leave
cmp
push
je
cmp
and
jl
jmp
jecxz
jecxz
jecxz
in
push
adc
mov
lcall
cmp
out
mov
out
pushf
testb
or
and
sbb
jne
mov
jg
sbb
inc
or
fcomip
cmp
push
outsl
xchg
or
icebp
repz
int
pop
sub
mov
nop
jg
add
xor
test
stos
add
push
or
negl
pop
xchg
and
xor
adc
mov
in
or
jecxz
jl
and
mov
test
mov
lahf
imul
mov
rolb
lea
xor
add
pop
or
push
or
or
imul
pop
pop
gs
or
cltd
inc
jmp
push
and
add
mov
aas
jo
pop
cli
jg
adc
insb
hlt
or
and
out
ja
sub
pop
cmpl
pop
jbe
sarb
adc
add
pop
mov
mov
push
add
jne
ds
test
jns
cmpsb
sti
xchg
mov
das
rcrl
ret
inc
cld
jne
adc
push
lret
xchg
nop
pop
and
mov
sahf
mov
nop
add
inc
lock
push
mov
sbb
fsubr
pop
shlb
or
jb
ficoml
imul
cmp
pop
andl
push
pop
call
cwtl
inc
add
push
cs
xor
adc
ret
sub
cmp
and
push
je
outsb
inc
jge
add
and
mov
jle
jmp
inc
and
pop
add
in
dec
xchg
sahf
mov
sbb
inc
out
test
dec
adc
ret
inc
out
pop
fcoms
jecxz
mov
pop
push
or
jmp
cmp
jne
cmpsb
outsl
leave
mov
push
es
jmp
cmp
sbb
in
arpl
jl
mov
push
and
push
jne
cmp
mov
addr16
mov
inc
call
push
pusha
cmp
inc
mov
aad
dec
sub
mov
cmp
es
push
inc
aaa
test
scas
adc
mov
test
inc
push
pop
mov
and
ret
ja
jne
loop
les
add
sarb
shl
mov
lds
xchg
or
xchg
inc
addl
insb
adc
clc
cmp
cmp
je
xchg
lret
or
test
lea
out
popa
ds
daa
pushf
cld
lods
insb
enter
jge
test
sub
jge
repnz
dec
add
cmp
push
icebp
iret
jns
in
sub
out
cmpsl
pusha
adc
cmp
dec
add
mov
stc
add
mov
fwait
imul
and
jle
jle
xchg
dec
adc
lcall
inc
sbb
cmp
ds
xor
imul
or
and
mov
sbb
jp
xchg
xor
push
sahf
mov
xchg
push
aad
push
roll
je
into
cmp
ljmp
rcrl
and
icebp
or
gs
dec
or
in
cmc
pop
jl
lahf
outsb
test
jge
out
adc
int3
push
fimuls
and
rcll
out
decb
sub
fcompl
push
inc
mov
push
rolb
fcmovnb
xchg
call
mov
mov
ficomps
int3
insb
sbb
sub
bound
mov
dec
in
lcall
daa
or
adc
xchg
cmpsl
xchg
adc
mov
call
rcrb
inc
lods
push
add
rorb
sub
daa
adc
std
pop
sub
cmpsb
nop
and
jno
call
push
movsl
fs
and
lret
iret
or
xor
cld
in
test
into
inc
pop
inc
inc
notb
fisubl
add
push
pop
ljmp
mov
push
out
fs
add
dec
or
dec
aas
outsl
ds
jp
daa
les
stc
and
adc
mov
sarl
push
lea
cmpl
jnp
daa
pop
add
mov
mov
jne
mov
daa
pop
mov
and
push
std
sbb
pop
jo
adc
inc
dec
cli
xchg
pop
mov
add
sub
xchg
imul
sar
cmp
xchg
push
xor
sbb
rclb
jle
sbb
or
adc
jp
mov
jnp
imul
push
adc
es
jg
and
jle
mov
sub
inc
fwait
jns
and
pop
adc
or
sub
jle
add
inc
adc
lea
xor
cmp
sub
mov
loop
or
sbb
inc
mov
mov
xor
or
adc
xor
dec
xor
inc
xor
or
fcomps
sbb
lcall
jno
jae
iret
add
adc
and
mov
or
and
icebp
les
or
pusha
and
inc
or
decl
loope
nop
sbb
cmp
jle
je
add
mov
push
cmp
gs
mov
xor
add
jmp
pusha
sub
aaa
imul
bound
testl
imull
and
imul
shl
stc
or
jae
pop
stos
mov
icebp
xchg
cmpsl
sbb
or
xor
or
es
dec
sub
dec
rorl
add
add
popl
icebp
jecxz
cld
js
lcall
aas
add
jecxz
cld
js
inc
nop
subl
dec
xor
push
rclb
cmp
pop
ja
adcb
jo
mov
jmp
imul
dec
mov
push
pop
decb
mov
xchg
cld
push
xchg
scas
and
mov
jne
loope
sub
push
cli
and
out
mov
popf
inc
call
notb
xor
and
jmp
data16
jns
mov
sub
sub
cs
dec
int
das
pop
jbe
mov
test
dec
cmp
jne
push
mov
mov
fwait
lods
aam
xor
push
mov
push
cmp
mov
xor
mov
out
add
hlt
pop
xor
test
add
shl
andl
pop
mov
add
shl
in
or
not
and
clc
loopne
pop
or
add
fisttpl
je
adc
cs
ret
dec
pop
mov
jmp
mov
cli
inc
cmpsb
mov
push
cld
lods
push
sub
xchg
mov
sub
andl
push
mov
push
out
jl
and
adc
leave
jecxz
in
rorl
mov
mov
nop
jge,pt
notl
fdivs
idivb
mov
mov
push
pop
push
mov
inc
push
jne
in
adc
lcall
je
inc
dec
cs
pop
pop
pop
or
cli
lds
adc
out
fidivrl
shlb
add
adc
xchg
repnz
add
inc
sub
lret
repnz
je
push
shrl
inc
adc
test
inc
pop
xor
dec
fidivrs
jnp
push
shlb
xor
adc
mov
add
mov
cmpsl
cmpsb
aam
dec
dec
into
sti
mov
sti
mov
icebp
jl
adc
daa
add
out
add
gs
mov
xor
icebp
std
adcb
mov
pop
xorl
push
mov
orl
or
nop
ljmp
shrl
rolb
mov
scas
push
rcll
or
dec
hlt
inc
lods
cmp
jo
sub
mov
jo
cmp
jne
mov
sbb
add
push
pop
icebp
jmp
cmpsl
frstor
arpl
adc
mov
pusha
hlt
inc
push
into
aaa
fs
and
push
sbb
push
inc
cmp
xchg
xor
push
int3
sub
in
push
mov
inc
jo
or
dec
jbe
in
fcoms
rclb
cmp
pushf
lods
mov
and
xor
pop
jo
sub
xchg
and
xchg
repnz
sub
leave
pop
pop
mov
push
stc
mov
lret
sbb
jle
movsl
jnp
jo
mov
loopne
pop
add
mov
jo
cmp
sbb
xor
jge
sub
lea
lock
push
lcall
push
sbb
mov
or
fs
or
fistpll
insb
sub
adc
lahf
test
cmp
clc
inc
sbb
sbbl
cmp
xchg
jmp
shll
pop
inc
or
fisttps
push
mov
lock
je
push
and
sub
inc
sub
shrb
cmp
sub
nop
notl
sbb
xor
pop
rcl
push
movzwl
xor
jl
inc
jmp
cmp
xchg
and
mov
push
pop
hlt
lret
jnp
fs
inc
fists
mov
push
xor
dec
les
fiaddl
or
rcrb
loop
and
inc
push
aas
sub
rorb
jne
push
or
jno
adc
jmp
nop
fistps
mov
mov
leave
jno
and
fs
cld
mov
adc
out
sbb
test
xchg
and
mov
inc
fistps
rolb
out
mov
cmp
mov
sbb
inc
add
lea
add
aad
xchg
scas
mov
mov
sub
mov
pop
inc
and
and
insb
mov
pop
mov
pusha
sub
xchg
fdivl
or
sub
add
aam
aaa
xor
rclb
sub
into
mov
bound
mov
pop
sbb
scas
ret
xor
shl
adc
out
dec
sahf
arpl
adc
push
sub
fstpt
sub
sbb
cmp
inc
out
push
push
pushf
pop
mov
insb
lods
dec
jmp
inc
pop
daa
enter
add
pop
push
aaa
fiaddl
in
dec
flds
mov
pop
adc
sbb
iret
stc
std
xor
push
push
or
jle
push
push
or
andb
mov
stc
iret
flds
add
pop
jl
pop
xor
leave
fistl
cltd
sbb
adc
rolb
lea
je
add
popa
jbe
orb
dec
inc
pop
xlat
inc
add
pop
adc
and
jne
inc
pop
movsb
in
leave
mov
dec
mov
add
or
xor
mov
fidivs
fcompl
or
inc
fsubr
repz
ret
out
fwait
push
jne
cs
fistpll
sbb
enter
push
jp
add
clc
or
lea
in
pop
pop
loopne
cmpl
xor
or
or
ja
pop
movl
lds
jne
cltd
out
mov
push
push
ds
inc
mov
adc
test
test
jb
xchg
sbb
inc
test
mov
dec
js
mov
xchg
push
push
add
loopne
push
hlt
stos
enter
pop
xor
pop
ja
in
jmp
jns
or
mov
test
push
inc
aaa
xor
sub
add
inc
in
js
pop
mov
xor
addr16
push
roll
in
adc
int3
mov
push
dec
sub
add
sahf
and
sub
iret
mov
push
lret
mov
pop
clc
xchg
adc
mov
mov
sbb
cmc
push
sti
xor
pop
dec
and
add
call
jl
sub
arpl
clc
jae
sbb
jg
shll
sahf
clc
or
fnclex
sub
je
push
push
call
mov
fsub
enter
js
inc
stos
inc
xor
jbe
lret
push
add
add
mov
jb
inc
lock
cs
hlt
xor
into
scas
and
cmpl
or
mov
lea
incb
popf
gs
mov
je
push
fimuls
adc
push
pusha
mov
clc
sub
xor
sbb
adc
mov
cld
dec
inc
ds
das
jne
jne
adc
jle
sub
test
mov
call
dec
mov
inc
sub
rorl
aas
or
xchg
and
inc
sbb
cwtl
adc
add
or
jl
test
dec
dec
jne
sbb
mov
hlt
xor
add
sbb
call
dec
pop
repz
inc
push
mov
pop
std
stc
cmp
cmp
push
or
jbe
popf
daa
insb
mov
inc
mov
or
dec
push
pop
mov
fcoms
sbb
or
jecxz
and
aaa
mov
dec
mov
or
jmp
inc
adc
mov
xor
inc
js
movsb
dec
addl
pop
adc
xlat
mov
cmp
cmpsl
mov
dec
aaa
mov
insb
incl
mov
lea
cmp
mov
call
pushfw
inc
inc
xchg
stos
push
jb
cmp
hlt
pop
ret
jp
dec
ror
mov
dec
stos
pushf
inc
ret
lahf
hlt
nop
push
mov
pop
call
add
jl
sub
mov
mov
mov
ss
insb
sbb
les
or
pop
pop
push
dec
loope
or
mov
test
pop
inc
test
fstpt
jg
xchg
psubusw
lds
sarb
dec
inc
aas
jo
cmp
jmp
or
adc
bound
adc
add
sub
cmp
es
adc
scas
popl
cmp
mov
mov
pop
call
jge
popa
xor
cmp
inc
cmp
cli
cmp
dec
cmp
sbb
xchg
cltd
dec
scas
dec
inc
sbb
mov
inc
mov
inc
mov
sub
push
jg
test
xchg
in
es
mov
or
push
adc
je
add
push
sbb
sub
bound
sub
in
test
mul
or
xor
ret
test
add
or
pop
inc
mov
sub
push
enter
cwtl
sbbb
jo
jmp
jle
aaa
dec
adc
mov
cmp
mov
push
and
mov
mov
dec
test
inc
pop
enter
or
pop
nop
repz
or
add
cmpl
jle
xor
push
mov
add
dec
push
out
jmp
adc
push
mov
loopne
mov
int
adc
add
push
cmc
mov
push
cld
jmp
fstp
jp
dec
sub
jae
in
xchg
inc
push
int
inc
ds
pop
and
lods
mov
inc
push
sub
inc
inc
mov
les
sbb
adcl
mov
dec
out
cmp
sub
mov
and
mov
push
ja
fs
lds
stos
mov
jle
in
pop
mov
add
sub
pushf
daa
or
add
mov
aaa
dec
loop
adc
and
ljmp
add
call
adc
idivb
xchg
pop
and
push
mov
or
iret
and
movsb
cmp
xchg
outsb
xchg
pop
fldl
add
ja
cmp
sbb
cld
push
insb
repz
dec
ds
or
mov
filds
inc
insl
cmp
jle
stos
int3
mov
jge
loope
sarb
test
inc
and
cs
in
pop
aam
mov
pop
dec
add
adc
push
dec
std
lods
call
popa
out
pop
mov
push
dec
jae
dec
sar
lret
bound
xchg
lods
imull
push
sub
sub
push
fs
mov
xor
jnp
or
rol
push
push
push
lret
and
ds
pop
je,pn
mov
cmp
add
inc
add
adc
mov
jo
mov
xor
inc
gs
cltd
sbb
hlt
inc
rorl
shlb
push
push
cvtps2pd
jecxz
inc
and
dec
clc
add
mov
mov
insb
cld
pop
mov
xor
test
mov
cmp
cltd
sub
xor
lock
add
cli
jg
push
pop
lea
hlt
lea
or
lret
ja
add
std
sar
inc
cmp
jae
add
test
dec
push
jbe
or
inc
pop
lret
ret
lea
push
stc
adc
xor
push
mov
jno
cmpsb
pusha
sbb
inc
jae
jo
lret
in
sbb
xor
aam
mov
repz
xchg
or
shr
int
int
push
cmp
inc
mov
xor
add
out
dec
rorb
test
ret
negl
or
or
loope
or
push
sub
or
mov
mov
fs
dec
push
cmpsb
xor
add
incb
push
mov
inc
movb
xchg
or
sub
cld
mov
sbb
decl
push
or
jne
or
dec
mov
mov
rdpmc
jb
in
xchg
in
cmp
push
jmp
cmp
or
xor
stc
mov
and
cli
js
daa
xchg
jle
pusha
mov
and
lret
out
adc
sbb
jb
call
adc
mov
fsts
je
add
mov
jbe
sub
outsl
add
loope
sub
cmp
popf
popa
push
inc
mov
and
add
adc
push
or
or
or
push
jae
in
or
mov
aad
pop
inc
or
in
adc
xchg
testb
add
pusha
jg
xor
sbb
xchg
test
dec
or
or
imul
insl
add
and
andl
add
daa
jmp
push
nop
lahf
mov
and
and
pop
daa
cld
xchg
or
js
dec
adc
jl
inc
push
mov
dec
mov
test
push
xor
inc
int3
test
or
jmp
push
xchg
jl
pushf
das
mov
and
jp
xchg
popa
sub
adc
xorb
pop
aad
nop
push
jg
add
cmp
mov
in
loop
cmp
cmpsb
mov
xlat
inc
push
add
es
push
push
mov
out
cld
fdivrl
imul
jmp
insb
mov
mov
and
dec
push
pushf
lcall
mov
sbb
or
or
xorl
rorl
push
in
mov
sub
jns
sbb
jl,pt
int3
adc
sbb
jmp
and
mov
dec
es
sub
enter
and
push
push
push
jmp
scas
aaa
xchg
xchg
jmp
mov
fs
xor
rorl
or
bound
fdivrs
clc
or
cli
dec
mov
fdivl
pushf
sub
push
xor
jo
jne
xor
add
test
movsl
jno
and
push
xchg
sbb
and
mov
xchg
jp
mov
adc
push
mov
push
cwtl
cltd
push
dec
or
mov
pop
pop
stos
ds
sub
add
push
dec
inc
mov
or
add
or
adc
sbb
popa
cmpsb
pop
xor
xchg
cs
add
jmp
adc
inc
add
pop
cmp
push
sub
pop
mov
call
inc
mov
dec
pop
mov
pop
imul
inc
mov
mov
mov
adc
jmp
push
test
sbb
dec
add
xor
das
adc
aas
push
push
adc
and
dec
mov
or
push
cmp
dec
lock
push
in
cld
mov
inc
or
pop
gs
int
aam
jbe
push
or
mov
mov
lcall
mov
sub
into
and
pop
aam
adc
push
push
or
adc
xor
push
outsb
or
ds
pop
xor
mov
mov
test
and
adc
mov
inc
pop
and
adc
or
test
and
jno
adc
inc
out
or
fisttpll
or
push
adc
mov
dec
rorb
adc
stos
or
test
and
xchg
mov
inc
lea
daa
adc
jns
and
inc
gs
pop
push
pop
out
dec
mov
jmp
orb
mov
aas
or
dec
mov
test
out
lods
adc
push
lods
les
xor
dec
ret
adc
lock
sub
fildll
adc
int
push
xchg
inc
adc
mov
lds
and
inc
mov
push
aad
outsl
push
lea
mov
or
jo
xlat
adc
pop
pop
mov
ret
dec
ss
adc
ss
adc
and
mov
inc
addr16
pushf
mov
xor
pusha
lds
and
nop
mov
dec
adc
or
pop
jo
pop
push
movsl
dec
in
and
dec
fwait
xchg
fadd
add
mov
and
fisubs
and
mov
mov
dec
push
jb
xchg
mov
push
push
pushf
lret
data16
adc
dec
shrb
xlat
adc
xor
je
push
push
mov
inc
in
cld
and
push
sahf
sbb
je
and
inc
in
test
jb
and
or
or
inc
add
test
and
adc
push
push
adc
mov
aad
adc
ss
sar
mov
cmp
mov
fs
or
sbb
scas
rcrl
mov
js
push
cmp
push
mov
movsl
mov
jle
and
pop
xor
inc
or
lock
mov
sub
fstpl
lret
pop
pusha
call
stc
add
jo
lods
test
cmp
mov
sbb
mov
scas
adc
movsl
inc
and
mov
lock
mov
pop
test
jne
push
adc
pop
test
and
adc
sbb
sbb
inc
or
test
and
das
mov
adc
or
dec
adc
int3
mov
mov
test
and
pop
in
mov
mov
fistpl
add
loop
hlt
adc
je
xchg
adc
repz
push
cmc
sub
inc
cmp
stos
ret
sbb
adc
inc
xchg
and
adc
insb
push
mov
pop
mov
sub
clc
xchg
clc
add
adc
pop
or
add
nop
scas
add
aaa
movsl
mov
sub
or
add
dec
push
leave
bound
addr16
out
dec
pop
into
testl
sbb
cmp
sbb
stos
xchg
mov
and
mov
or
movswl
push
add
xor
sbb
add
js
xor
adc
or
xchg
cmp
adc
mov
push
inc
adc
sbb
xor
jle
iret
lds
mov
mov
notb
jmp
mov
sub
sbb
xchg
sbb
idiv
lock
int3
addr16
adc
adc
fisttpll
xchg
sbb
divl
adc
mov
fdivrl
js
dec
ljmp
inc
dec
mov
adc
mov
scas
fs
or
and
dec
and
sbb
stc
dec
sbb
cmpsb
or
test
lcall
adc
xor
and
inc
and
push
sub
xchg
cmp
rolb
sti
sbb
add
and
push
inc
outsl
mov
inc
mov
loope
in
inc
push
adc
sub
inc
cmp
dec
clc
adc
insl
cltd
add
sbb
adc
push
adc
push
andl
test
push
or
adc
adc
and
in
out
xchg
stc
adc
push
xor
dec
or
das
dec
test
and
sub
cltd
adc
jne
or
and
or
mov
dec
mov
inc
repnz
push
adc
and
dec
aas
xchg
push
and
jne
cmpsb
sbb
mov
xor
inc
dec
inc
fxch
adc
or
or
test
sub
int3
fs
or
dec
or
adc
dec
dec
sbb
xchg
inc
adc
adc
cmp
xor
inc
mov
stos
inc
enter
xor
xlat
cltd
adc
xchg
or
jge
sbb
fs
cmp
ds
inc
xchg
stos
mov
jecxz
and
push
add
call
ret
adc
adc
shrl
sti
les
push
movl
mov
mov
enter
mov
mov
int3
inc
adc
mov
or
sub
adc
mov
sub
or
adc
shrb
ds
sbb
mov
mov
mov
cmc
xor
pmulhuw
clc
xor
sbb
mov
pcmpeqb
mov
cmp
add
test
ret
stc
sbb
call
cmp
popa
cmp
test
cmp
shll
loope
push
cmp
xchg
or
push
sub
inc
and
sub
sbb
test
xchg
or
adc
sahf
push
cld
iret
pop
mov
lret
orl
mov
rorb
add
push
xchg
daa
cmp
push
inc
mull
cmc
bound
dec
dec
push
and
ja
mov
and
and
and
push
or
push
pop
add
mov
cmp
push
je
sub
into
test
sbb
scas
adc
xchg
jmp
push
jp
les
inc
jge
pop
lret
cmpsb
test
push
dec
testl
push
push
jno
shrb
das
xor
fsubrl
outsl
xor
aam
pop
roll
pop
and
inc
lret
sub
mov
cmc
into
inc
rorb
insl
dec
jg
cmp
icebp
mov
cld
ret
add
inc
inc
addr16
int
mov
mov
sub
xor
mov
movsl
jmp
and
xor
mov
mov
test
pop
aaa
das
aad
inc
lret
aad
sub
push
outsl
cmp
popf
inc
cli
push
push
in
nop
sbb
sub
inc
dec
and
lea
or
in
sbb
test
push
push
xchg
or
push
push
push
rclb
sbb
ret
jmp
push
push
enter
and
dec
sbb
movsbl
mov
fistps
mov
lock
mov
push
or
hlt
xor
or
and
mov
push
push
sub
and
push
cltd
flds
mov
push
adc
test
cli
call
stos
repnz
das
push
pop
xor
sub
adc
ds
adc
adc
adc
pop
jl
xchg
sbb
pop
ds
cmp
cmp
cmp
and
in
jl
xchg
sbb
sbb
pop
stc
and
and
inc
jl
xchg
inc
repnz
ds
inc
enter
pop
and
dec
jl
xchg
dec
repnz
ds
dec
enter
pop
and
in
jl
xchg
or
or
or
or
and
in
jl
xchg
popa
repnz
jo
adc
mov
inc
and
pop
and
in
jl
xchg
dec
repnz
ds
push
enter
pop
jns
xchg
push
repnz
ds
push
enter
jl
xchg
pop
repnz
daa
enter
pop
and
in
jge
ds
je
nop
pusha
lock
push
loop
pop
lds
adc
js
lods
and
call
pop
xchg
rorb
xor
adc
out
and
push
movsl
inc
pushl
mov
adc
pop
xor
adc
call
xor
pop
xor
adc
pop
sbb
add
imul
or
or
sbb
or
inc
push
mov
xor
lea
cmp
fcom
inc
add
or
adc
inc
sahf
or
rcrb
pop
dec
inc
or
imul
cltd
mov
dec
fsts
or
sbb
mov
adc
pop
dec
imul
adc
and
dec
jmp
sbbl
mov
pop
and
dec
jns
mov
cltd
inc
test
fldenv
dec
stc
lea
gs
sub
cmp
imul
inc
test
fldenv
dec
stc
lea
adc
jl
in
and
pop
enter
das
xchg
jl
in
and
pop
enter
mov
pop
and
pop
enter
das
xchg
jl
in
and
adc
and
clc
and
push
cmp
dec
and
dec
test
adc
popa
xor
sbb
movsl
and
sbb
imul
and
dec
dec
cltd
or
es
mov
add
xor
or
imul
and
aam
rcrl
fmul
or
xor
adcb
mov
imul
cmp
cli
lea
sub
xchg
ret
jbe
push
push
push
and
and
adc
imul
jne
sub
mov
hlt
fiadds
adc
jle
mov
push
inc
inc
dec
jne
divl
cmp
and
jne
mov
lret
or
add
cmc
dec
cmp
jg
xchg
loope
lea
movsb
lock
hlt
inc
popf
sar
sub
push
or
sahf
push
mov
jg
in
pop
shr
push
mov
sub
or
repnz
cmpsl
lock
imul
ja
movsb
jns
xchg
xchg
out
addr16
and
lock
or
je
cmp
sbb
sub
mov
pop
sbb
or
add
inc
xlat
inc
cmp
mov
sub
xor
pop
out
cmpsl
iret
inc
arpl
mov
mov
mov
xchg
jne
push
add
inc
or
je
movsl
insb
adc
add
xor
xchg
call
dec
jo
push
enter
push
adc
adc
xchg
mov
push
mov
int3
stos
test
pop
or
inc
call
cmp
mov
shll
dec
push
insl
mov
xor
xlat
and
push
cmp
fidivrs
adc
adc
das
ss
pop
inc
daa
push
xchg
push
add
sti
test
sbb
dec
adc
jno
add
sbb
cmpb
pop
outsb
cld
dec
cmp
imul
xchg
sbb
repnz
fldenv
push
in
repnz
mov
add
cmp
rdtsc
cmpl
cmp
sub
cwtl
push
and
jmp
push
movsb
addb
dec
cmpw
popf
pushf
sahf
std
or
sbb
fldenv
sbb
popf
xchg
fdivrs
dec
lahf
orb
sahf
adc
push
push
mov
popa
inc
std
inc
adc
mov
incl
pop
pop
adc
pop
pop
loopne
mov
and
mov
adc
inc
mov
test
xchg
push
cmp
dec
xchg
add
sub
lods
les
or
dec
jmp
and
testl
fdivrl
add
inc
mov
mov
mov
sub
push
and
pop
stc
shl
mov
xor
out
cmp
pop
shrl
add
jmp
call
adc
xchg
sub
mov
or
adc
push
enter
and
call
std
add
or
or
pop
ficoml
and
add
push
push
call
push
movsb
mov
inc
adc
push
jle
faddl
mov
lods
jb
daa
out
add
push
cld
outsb
adc
xor
cmp
lcall
daa
pop
inc
xor
sarl
jp
dec
or
push
cmpsb
cs
and
addl
push
sbb
scas
aad
dec
dec
sub
or
dec
add
push
inc
sub
cmp
xor
mov
push
ret
sub
push
cwtl
imul
mov
cmp
jne
or
adc
add
cmp
inc
sbb
dec
out
rorl
xchg
jmp
fdivrl
adc
push
sbb
xchg
adc
test
and
and
or
mov
enter
fcmovu
cwtl
nop
cmpb
add
or
test
jne
xchg
std
sbb
and
xor
call
push
pop
sub
sub
xchg
and
sub
in
pusha
ret
dec
xor
xchg
pop
push
popa
imul
mov
jo
call
and
or
push
lret
xlat
inc
dec
outsl
mov
movsl
xor
xchg
adc
sbb
sub
mull
ds
das
jge
rolb
push
test
pop
or
and
and
mov
jo
mov
stc
sbb
std
and
push
add
mov
rorb
mov
add
jne
mov
cmp
cwtl
js
pop
call
mov
jmp
push
mov
inc
inc
mov
test
mov
push
movsbl
pop
mov
jb
es
and
jmp
mov
add
jo
xor
add
sub
popf
gs
push
add
mov
fdivrs
shrb
and
add
or
scas
cwtl
add
aam
data16
in
push
imul
into
xor
xchg
in
sbb
mov
adc
pop
push
lret
or
hlt
jb
cmp
sbb
mov
stos
mov
pop
lret
dec
push
xchg
lds
mov
cmpb
sbb
dec
jnp
mov
sbb
scas
sub
pop
mov
push
mov
sbb
out
cmp
bound
jno
pop
add
and
pop
add
mov
cwtl
lock
push
or
jp
test
sarl
mov
loope
repnz
mov
and
dec
or
or
and
add
cwtl
add
mov
movl
sbb
fists
jl
outsb
cwtl
pop
sbb
pop
mov
xor
add
pop
push
fcomip
cli
cmpsb
jo
adc
mov
xlat
fnstenv
push
pop
call
fs
add
loop
bound
mov
loopne
push
scas
xor
push
mov
cltd
push
xchg
fsubs
mov
push
jmp
loope
inc
mov
sbb
push
loope
add
fdivrl
subl
cmp
je
adc
daa
loop
cmp
cmp
je
movl
scas
lods
add
fldcw
rorb
loop
sub
jo
adc
sub
or
cwtl
pop
pop
in
mov
inc
push
mov
pop
in
je
adc
rcrl
ljmp
add
js
mov
mov
jno
insl
ds
push
shll
test
enter
aam
mov
push
sbb
xor
sub
or
pop
imul
mov
mov
test
add
jmp
mov
mov
je
xor
and
or
je
clc
or
mov
das
lret
pop
mov
jg
cmc
sbb
loop
mov
and
pop
or
dec
fildl
js
push
add
push
call
repz
mov
jns
int
lods
mov
pop
and
cmp
js
push
inc
mov
mov
ret
xchg
cmp
sbb
shr
sub
mov
jl
push
shrb
or
jmp
or
test
mov
xchg
xchg
cmpsl
pop
movsl
daa
fldlg2
or
enter
and
mov
ss
lock
jb
dec
sub
push
scas
outsb
inc
adc
inc
sub
jecxz
sub
dec
cmp
or
mov
dec
inc
or
int
insb
loope
cmp
aam
cltd
pusha
mov
push
jne
mov
cmp
or
add
sbb
rol
push
mov
and
aaa
sub
cltd
sub
pandn
movsl
mov
stos
je
fwait
mov
lea
fidivl
pushf
jns
or
lcall
xor
test
outsb
movsb
sub
in
cwtl
sbb
xchg
jecxz
dec
dec
cmp
dec
movsb
shll
popa
sub
sahf
shl
test
adc
test
add
sar
inc
test
je
pop
ret
repz
fadds
pop
mov
in
mov
dec
xchg
or
xchg
adc
cltd
sub
inc
or
cmp
into
jle
sub
sbb
pop
aaa
and
jne
dec
jnp
xor
add
xor
jmp
xor
dec
rcrb
mov
sbb
je
or
in
or
or
cltd
int
xchg
leave
push
stc
test
call
xor
adc
and
clc
je
mov
data16
mov
lods
adc
jge
popf
push
sub
fmuls
cmp
adc
inc
call
jl
sti
lock
nop
or
sbb
adc
xchg
jae
in
jmp
sub
pop
adc
inc
pop
mov
cltd
sbb
and
and
mov
xchg
sub
mov
mov
push
push
inc
call
and
nop
in
arpl
dec
scas
cmpsb
jg
icebp
cmp
push
jge
adc
ret
sbb
leave
xlat
mov
out
ret
js
sti
enter
xorb
sbb
nop
and
mov
or
xchg
and
shlb
sbb
or
xchg
and
nop
fmul
fsubl
dec
and
add
push
mov
lea
inc
stos
in
mov
sbb
cli
push
sahf
add
idivb
dec
in
lock
push
fs
push
mov
dec
sbb
pop
lret
leave
ret
pop
push
gs
ss
sbb
pop
adc
pop
xchg
test
push
adc
mov
ljmp
dec
mov
sbb
fs
xchg
mov
lods
pop
daa
jne
leave
or
xchg
aad
movsl
sti
rorb
lea
and
mov
mov
dec
cld
jnp
push
push
inc
jge
in
push
gs
mov
jne
mov
add
cltd
or
xchg
xor
fldt
mov
push
mov
call
push
or
fdivrl
loope
movsb
xor
sbb
xchg
gs
pop
push
sbb
mov
cli
sub
movl
jmp
jo
ja
lret
mov
ja
ja
cs
jne
cmp
mov
fidivs
jmp
daa
and
or
sub
inc
xchg
xor
cmp
push
arpl
push
sub
dec
sub
lret
xchg
or
mov
popa
insl
jmp
test
xchg
xchg
mov
out
lock
add
add
aam
push
ja
push
inc
or
pop
pop
out
dec
bound
add
push
jmp
lods
xchg
imul
jne
pop
add
ja
mov
push
sbb
inc
int3
in
mov
dec
imul
mov
nop
pop
fwait
dec
cmp
and
cmp
jb
mov
adc
ja
stc
cmc
sbb
sub
xor
xchg
add
arpl
lret
or
or
or
cmp
ret
adc
sbb
mov
push
sti
add
fptan
stc
adc
movb
xor
jne
xchg
push
mov
push
ds
mov
dec
je
mov
or
push
push
and
je
or
dec
jne
sahf
bound
test
adc
or
mov
cmp
xor
pop
cli
push
cwtl
arpl
pop
mov
sbb
mov
jle
pinsrw
inc
xor
xchg
push
jno
add
roll
xorl
testb
test
or
or
jne
je
sbb
add
adc
dec
adc
xchg
outsl
or
mov
pusha
or
mov
test
or
inc
ss
out
or
sub
adc
jae
sub
mov
mov
cmc
es
adc
ret
sub
cmp
pop
pop
es
cmp
push
mov
dec
mov
lret
jecxz
mov
xor
jbe
cli
mov
or
mov
dec
pop
call
test
enter
add
out
add
cmp
add
mov
shlb
inc
xchg
or
xor
cmp
dec
xor
push
or
xchg
dec
add
punpcklwd
sub
xchg
imul
testb
inc
adc
inc
pusha
add
adc
xchg
push
or
add
rorl
add
or
pop
inc
add
stos
add
jmp
lret
cli
or
add
bt
jae
mov
jo
and
adc
cmpsl
mov
mov
cmp
adc
jg
dec
lea
ljmp
imul
call
sub
sbb
cmpsb
add
mov
inc
cmp
mov
push
adc
jne
or
push
mov
or
adc
or
iret
xor
mov
xor
adc
jg
mov
dec
and
aas
rcl
jmp
adc
or
pop
mov
cmp
fdivs
cli
out
paddusb
daa
and
adc
daa
adc
aam
push
lods
jo
pop
std
xor
or
mov
or
pop
adc
imul
cltd
fs
cmp
test
inc
or
add
lock
sub
jle
hlt
popa
data16
sub
mov
or
loopne
cmp
inc
add
frstor
aam
jp
sbb
jmp
pusha
pop
imul
inc
roll
ret
or
loope
imul
in
cmp
ja
clc
popf
and
loop
jl
xor
pop
popa
loopne
ja
inc
mov
in
cmp
sub
jns
arpl
push
shll
lds
dec
cmp
jnp
mov
dec
xchg
int3
out
pop
lods
test
xlat
cmp
mov
dec
or
sub
pop
lret
sarb
push
push
xchg
leave
jnp
gs
daa
ljmp
test
adc
call
adc
es
fisubs
movsb
outsl
xchg
popa
out
push
in
gs
loope
jge,pt
or
and
jno
gs
or
stc
push
pop
pop
jmp
sbb
dec
sub
add
inc
jmp
cmp
mov
dec
adc
inc
add
xor
mov
dec
sub
mov
dec
ja
push
pop
jne
test
je
xchg
aam
inc
jmp
les
andl
adcl
mov
cmp
jne
mov
inc
add
jmp
lds
fs
push
sub
push
testl
mov
add
movsl
sarb
mov
sub
shl
in
mov
adc
and
push
dec
adcb
in
cmp
cmp
jne
out
or
hlt
jb
jnp
test
add
mov
add
lahf
dec
clc
add
mov
mov
push
push
mov
sti
jbe
pop
or
or
test
jl
bound
cld
xchg
addl
mov
sbb
jnp
add
cmp
ja
push
in
cmp
stos
mov
add
or
aaa
je
frstor
jmp
ret
add
std
pop
and
add
mov
repz
mov
aaa
clc
xor
or
aad
stc
cmp
fisubrl
add
pop
std
incb
and
push
sub
add
xor
push
jnp
pop
push
jge
in
pop
repz
stos
movsl
adc
mov
gs
and
pusha
faddl
rorb
jecxz
inc
add
and
dec
xor
push
dec
fisttpll
push
add
add
push
lock
into
pop
push
shl
add
out
add
mov
test
ret
stos
fisubl
pop
push
pop
and
or
shl
es
or
adc
jmp
rcrb
add
jo
mov
pop
test
in
test
sub
ret
orps
push
cmp
push
sub
rorl
jno
push
push
mov
adc
dec
daa
rolb
scas
rolb
and
inc
hlt
pop
mov
stc
aad
nop
or
test
or
incl
ds
push
scas
or
call
sbb
aam
aas
add
nop
inc
or
iret
xor
ret
jmp
jg
pop
push
jmp
cmp
xor
stos
aad
and
lds
bound
mov
dec
pop
test
cmpsl
into
fdivp
gs
roll
and
or
mov
cmp
dec
adc
mov
aaa
push
loope
ret
push
stos
addl
es
bound
dec
cmpl
je
mov
or
pop
pop
popf
test
add
cwtl
inc
push
shll
jp
xchg
xchg
mov
mov
jmp
adc
lods
inc
mov
ds
mov
lea
adcl
jl
dec
and
mov
in
in
mov
pop
push
adc
add
mov
clts
cmp
jge
mov
adcl
icebp
jl
cli
out
pop
and
adc
xor
sbb
or
pusha
lea
call
and
adc
adc
adc
fnstsw
ljmp
fidivl
and
loopne
xorl
add
pop
rolb
call
rol
inc
xorl
shrl
inc
pop
or
xchg
movsb
inc
stos
jecxz
sub
jb
sub
shll
and
mov
adc
cli
sar
adc
das
ret
push
or
testb
in
and
fsubrs
adc
outsl
push
jne
loop
sbb
and
pop
sbb
mov
movhps
adc
jae
mov
mov
hlt
add
and
adcl
jge
pop
in
pushl
addb
xchg
sbb
cmp
or
jmp
push
out
stc
mov
xchg
push
or
sbb
xchg
int3
imul
xchg
sbb
call
adc
push
mov
add
movl
add
push
rclb
ret
imul
inc
push
inc
dec
cld
data16
pop
mov
lcall
fcmovbe
mov
xor
mov
dec
out
add
jge
jbe
and
cs
sbb
dec
jmp
xchg
pop
ds
or
lea
sub
test
xor
cmp
stos
sub
es
push
bound
xorl
or
adc
xchg
lcall
test
daa
jp
xchg
jg
das
add
dec
insl
cltd
movsl
xchg
xchg
mov
push
push
test
dec
or
enter
push
cwtl
push
loope
jg
or
lret
push
sti
adc
leave
xchg
movsb
adc
cmp
add
ret
test
test
adc
outsb
sub
insb
adc
adc
adc
movsl
std
mov
pop
das
push
push
xchg
dec
orl
gs
iret
cmp
mov
cld
int
ljmp
xor
push
lds
sub
ja
sbb
jle
jmp
rcrb
and
mov
xor
not
mov
dec
stc
jb
cs
push
pushl
mov
dec
sub
out
nop
sub
add
sar
jmp
dec
cmp
jb
ljmp
shrb
sub
mov
jo
mov
jg
sub
inc
or
fsubr
sbb
jnp
lahf
nop
xchg
pop
je
sub
push
imul
dec
jbe
outsl
adc
add
dec
or
ret
or
sub
mov
pop
adc
lods
mov
mov
stos
adc
and
and
flds
sbb
loope
ja
je
pusha
adc
sti
mov
out
push
call
adc
sub
out
inc
jmp
cmp
adc
xchg
add
mov
mov
and
mov
add
sub
jmp
xchg
xchg
sub
cmp
jb
inc
pop
fsubr
sbb
sets
fcomps
mov
xor
cs
and
jg
test
inc
mov
push
lret
loope
cld
mov
sub
sti
push
out
das
pop
pop
mov
push
inc
jl
or
xchg
jnp
inc
push
sub
imul
cmp
sub
mov
add
pop
add
jne
jmp
scas
adc
push
xor
lea
or
ret
mov
add
dec
aam
pop
rorl
loope
sub
push
adc
loope
push
inc
ret
fdivr
rol
pop
clc
je
std
fisubs
in
sti
pusha
xchg
loope
sbb
xchg
or
clc
add
xorb
test
jae
and
or
inc
clc
clc
inc
jmp
icebp
push
pop
out
sub
das
loopne
mov
mov
inc
or
mov
cmpsb
adc
or
dec
enter
pushf
or
rcll
sub
lea
insl
rcrl
pop
ret
sysenter
rcrb
out
enter
push
repz
lret
enter
sbb
add
cli
rorl
or
inc
xchg
and
or
cld
xor
nop
dec
pop
out
lea
inc
ja
sub
mov
sbb
stos
sbb
mov
inc
jle
addr16
adc
mov
adc
arpl
jne
push
dec
mov
and
imul
dec
jns
pushf
and
cmp
testb
mov
enter
xchg
ret
push
clc
adcb
pop
dec
stos
push
push
sub
aaa
test
je
xor
push
jle
es
push
cmp
and
decl
jne
pop
test
sbb
and
std
mov
les
mov
lret
fisubs
data16
or
push
call
lret
push
iret
pop
enter
jmp
pop
cmp
fadds
mov
dec
pop
and
pop
cld
jae
mov
fdivl
rorb
xor
xor
in
xor
jmp
jmp
cli
sbb
push
inc
call
or
inc
add
imul
stc
xor
xchg
mov
xchg
mov
mov
sub
aas
ret
je
jmp
lods
sbb
pop
loope
sub
jae
outsb
fs
sbb
je
jb
pop
es
cli
inc
sbb
lea
xchg
enter
or
cmp
push
dec
xor
sub
jmp
sub
sbb
and
push
add
inc
mov
pop
and
jp
or
insb
in
out
lret
sub
xchg
jbe
pop
adc
inc
pop
mov
mov
lret
movsb
repnz
movsl
loope
and
imul
in
push
mov
int3
push
add
pop
mov
and
inc
adc
xor
xchg
adc
push
jg
jg,pn
mov
or
daa
pop
xchg
jmp
jp
pop
or
xor
dec
inc
xchg
adc
mov
adc
pop
adc
scas
iret
cmp
stc
push
jbe
add
outsl
or
mov
xor
adc
cmp
test
mov
pop
out
and
stc
push
inc
jmp
sub
add
mov
test
jne
adc
adc
inc
xchg
mov
movsl
push
add
add
jmp
cmp
xchg
or
not
sbb
aad
leave
clc
push
out
rcrl
ja
popa
stc
movzwl
jmp
xor
xor
xor
or
add
gs
mov
std
ss
or
push
lcall
fmull
scas
loopne
popf
xchg
dec
cmpsl
jmp
jo
aam
andb
or
and
xchg
adc
xchg
mov
dec
jg
adc
dec
adcb
rcll
clc
dec
sub
or
loope
iret
xor
pop
test
sub
sbb
inc
mov
lea
enter
pop
js
adc
mov
inc
dec
mov
lret
clc
sub
nop
cs
test
mov
decb
pop
push
or
or
sti
pop
aam
pshufw
cmp
pushf
ljmp
adc
lret
ss
cmp
adc
inc
adc
mov
loopne
subl
cmp
adc
sub
cmp
je
les
sbbl
jno
cmp
jb
adc
sbb
and
add
and
test
sbb
adc
inc
xor
test
pop
je
jecxz
sub
pop
cld
or
mov
and
or
dec
or
pop
xor
inc
fdivs
jo
movb
cmpsb
mov
nop
push
sub
pop
pop
or
push
mov
push
out
scas
dec
leave
cmp
outsl
push
popa
mov
push
cmpsl
lods
pop
jne
jge
fld
push
icebp
repz
and
cld
bound
pop
dec
inc
adc
out
mov
ja
dec
push
push
add
dec
add
cmp
out
push
adc
repnz
mov
cld
pop
dec
inc
jnp
sbb
jne
call
cmpsb
or
sub
or
bound
cli
jne
movsb
mov
les
pusha
movsb
adc
cmpsb
mov
js
inc
mov
adc
xor
mov
and
popf
mov
cmpb
mov
push
adc
mov
add
mov
sbb
or
cwtl
sbb
inc
sub
testl
add
jbe
mov
inc
dec
xor
fdivs
rcr
fwait
jno
and
repz
mul
jns
adc
movsb
scas
jbe
mov
clc
pop
rolb
xor
in
std
add
mov
shr
test
push
enter
out
cwtl
je
or
inc
scas
pop
mov
fdivrs
push
xchg
sbb
je
cmc
into
push
and
cmp
mov
dec
cmp
push
movsl
xor
xchg
inc
and
sbb
sbbb
andb
cmpsb
pop
and
push
ret
inc
push
mov
mov
dec
dec
push
xchg
sbb
mov
push
pop
cmp
push
dec
and
mov
mov
nop
or
je
jge
lcallw
adc
lock
enter
gs
loop
iret
in
pusha
adc
xchg
push
push
adc
xchg
ret
lock
jae
es
cmpsl
inc
xlat
ficoms
or
test
add
negb
inc
loopne
out
or
add
mov
popf
push
inc
or
pushf
add
sbb
pop
and
sahf
add
test
lods
push
je
data16
inc
dec
jne
or
pop
jno
mov
pop
out
adc
or
push
je
cmpsb
sbb
dec
movsb
pop
mov
dec
movl
xchg
add
cmpsb
xor
jmp
jb
sub
mov
lahf
lods
rolb
pop
mov
gs
or
outsb
mov
movsb
lds
push
stos
inc
sub
pop
fcomps
pop
push
push
jo
enter
or
filds
ret
cmp
loope
leave
dec
jne
dec
push
xor
leave
push
mov
pushf
lock
adc
pop
mov
call
dec
les
jo
sbb
mov
inc
cmp
and
js
pop
push
cmpl
mov
decl
enter
sbb
and
clc
js
push
pop
cwtl
les
xchg
rolb
mov
xchg
dec
lahf
or
push
enter
cmp
fmuls
sub
cmc
cmp
cmp
jg
adc
and
or
jmp
push
xchg
popl
sub
andb
sti
sub
jmp
pop
sbb
ds
push
sbb
lret
std
add
inc
inc
shr
pop
jmp
xor
sbb
or
clc
inc
pop
inc
shr
push
cmp
sbb
aas
jmp
mov
mov
xorl
or
out
loope
push
jle
lret
or
in
adc
adc
jle
xor
push
inc
sbb
push
std
in
mov
mov
push
les
int
pushf
adc
sub
rolb
or
sbb
test
push
inc
ret
xchg
add
insl
sbb
insl
loop
pop
cmp
addr16
cmp
insl
xchg
gs
xchg
adc
pop
and
movl
mov
or
push
adc
push
mov
inc
ret
add
andl
push
add
test
inc
hlt
xor
dec
or
and
fildll
das
dec
pop
xlat
cwtl
lock
repz
jno
xor
out
rclb
ret
dec
and
aaa
inc
int
lea
mov
aam
ja
inc
clc
push
daa
jmp
or
mov
xor
jecxz
test
dec
pop
leave
lock
bound
jle
add
jmp
adc
je
or
xor
dec
cld
add
xor
pop
ja
mov
dec
cwtl
jle
jmp
cli
add
aaa
xor
xchg
cmpb
sbb
shr
in
shll
jmp
ss
pop
mov
jle
xchg
inc
test
nop
push
jne
push
ds
xchg
xor
jle
mov
outsb
or
and
pop
add
lock
fimuls
pop
rorb
rorb
int
lahf
dec
pop
add
cmp
mov
inc
mov
dec
mov
xchg
add
sub
and
push
and
andl
and
dec
push
pop
mov
stos
inc
adc
aas
sub
lods
fistl
push
call
jmp
imul
ds
popf
push
inc
loop
pop
je
les
stc
xchg
sub
loop
subb
mov
test
int
lret
mov
in
push
nop
push
xchg
mov
dec
jmp
icebp
sub
ds
and
and
dec
xchg
adc
je
mov
sub
sub
and
add
inc
and
or
or
inc
push
cwtl
mov
add
or
cmp
push
mov
jmp
adc
push
jo
jmp
cltd
inc
jns
push
imul
cmp
and
inc
inc
je,pt
xchg
or
call
add
rcrb
or
repz
mov
aam
jmp
adc
or
rcrb
adc
sbb
jl
xchg
jae
mov
push
and
jmp
push
jne
cmp
mov
push
bound
es
negl
inc
cmp
daa
mov
in
or
in
sub
rcrb
xor
jno
mov
je
push
adc
cltd
lods
cli
jne
pop
xchg
cli
jl
pop
dec
mov
xor
gs
cmp
jle
loop
inc
int3
hlt
fmull
scas
ss
sub
push
mov
lods
pusha
xor
in
int3
dec
inc
and
xor
xor
or
xor
ret
push
in
cmpsl
movl
sub
or
add
or
mov
sbb
sub
pushw
lock
pop
adc
nop
sub
rorl
adc
or
inc
sub
pop
jmp
xchg
or
mov
call
mov
je
inc
xchg
or
or
cmp
hlt
adc
add
je
in
call
dec
bound
lea
push
mov
mulb
loope
dec
push
repnz
lock
call
adc
test
jbe
daa
call
gs
pop
adc
push
test
sbb
mov
or
pop
mov
rcrb
xchg
or
xchg
xor
mov
push
or
decl
js
movsb
adc
out
mov
stc
jle
push
or
lods
inc
call
stos
cmp
mov
push
pop
ret
clc
imul
mov
pop
sbb
ja
call
fwait
sub
and
jmp
dec
data16
es
sbb
adc
xor
push
inc
insl
loopne
jne
aaa
inc
aas
insb
push
outsl
loop
pop
outsl
aaa
push
fs
or
inc
rorl
loope
cli
shl
xchg
push
pop
fcomps
pop
in
add
cmpw
and
int3
or
mov
mov
cmpsl
inc
sbb
add
lods
or
push
lock
push
push
or
test
sti
sbb
or
adc
insb
mov
pop
xchg
in
subb
and
nop
push
pusha
mov
fisttpl
popf
inc
push
scas
add
or
jp
jg
sub
mov
inc
cmp
add
inc
push
xchg
jle
or
jb
push
inc
sub
sbb
jmp
adc
leave
add
cltd
push
shl
mov
or
jle
sbb
inc
inc
pop
pushf
fisubs
ret
out
xor
sbb
fstl
sbb
stc
xor
enter
loope
cmp
rcrb
push
jmp
repnz
daa
loopne
mov
or
decb
add
cs
push
call
jge
push
pop
scas
subb
inc
jb
mov
aad
stos
ffreep
mov
std
mov
and
gs
lods
bound
adc
inc
jmp
ret
jne,pt
xchg
push
or
sbb
push
lods
dec
ret
data16
xchg
xchg
push
cmpb
push
inc
push
cmp
jnp
enter
aaa
mov
mov
or
or
adc
cli
fsubrp
xchg
push
jg
jbe
xchg
xchg
add
add
inc
cmp
sub
sbb
pop
pop
jmp
and
pop
mov
scas
int3
cmp
cmpsb
dec
mov
add
ss
mov
lods
xchg
ljmp
push
add
pop
jne
cmp
jb
and
push
push
adc
or
add
adc
add
lea
fisubrl
adc
inc
aaa
sub
cmp
nop
jbe
adc
call
in
loop
icebp
jb
inc
in
add
cld
sub
sarl
je
mov
add
dec
mov
pop
add
adc
mov
add
adc
lea
repz
hlt
leave
push
cld
cmpsb
or
xor
test
cmp
or
jle
cli
mov
pushf
call
push
pop
mov
cmp
or
andb
jae
mov
lret
add
add
mov
inc
decb
jne
pop
and
aas
or
pop
xchg
push
inc
pop
add
scas
and
push
rol
add
cmp
dec
addl
or
xor
sbb
cmp
fmull
hlt
xlat
pop
movntps
and
ss
dec
pop
cmp
sbb
nop
sub
rorl
and
arpl
mov
sti
add
sbb
roll
je
mov
movsb
lcall
loopne
pop
sbb
inc
xor
lcall
repz
clc
xor
nop
hlt
jle
ljmp
insb
pop
roll
mov
fistl
jl
flds
jne
mov
dec
paddd
jmp
sbb
jns
push
and
in
or
xchg
outsb
lds
fstpl
aad
and
or
push
xor
mov
dec
mov
sahf
push
in
jbe
ret
decl
inc
cmp
adc
inc
fmull
fs
loope
es
loop
cwtl
inc
push
push
sub
and
xor
or
or
inc
repnz
fisubl
and
dec
inc
or
call
pusha
add
pop
adc
ret
pop
adc
mov
adc
insl
mov
idivb
add
shl
ret
enter
fisubs
adc
jne
dec
dec
mov
insl
jl
or
or
inc
and
fildl
das
shll
push
inc
sub
push
sub
dec
mov
sub
imul
cmpb
and
stc
pop
add
jecxz
jge
lods
lret
dec
mov
jne
hlt
jmp
adcb
call
mov
fbld
or
sbb
jl
and
pop
ret
decb
iret
jne
add
cli
pop
arpl
xor
pop
adc
mov
cmc
fmuls
daa
adc
out
xor
pop
dec
jae
clc
jnp
lcall
mov
or
adc
call
test
mov
push
data16
pop
mov
jne
mov
das
jp
insl
sub
sub
cli
enter
pop
rorb
out
inc
movsl
mov
aaa
imul
add
fdivrp
adcb
or
add
xchg
test
cmp
add
cmp
xlat
je
lcall
cli
rorl
mov
jne
xor
and
add
testl
pop
lcall
dec
sub
pop
jle
dec
enter
or
and
adc
decl
test
xor
iret
bound
push
mov
inc
hlt
in
push
and
clc
or
jne
pop
aas
add
jmp
lret
adc
inc
lahf
mov
insl
sbb
cltd
xor
mov
iret
push
jp
shl
mov
in
sbb
adc
cvttps2pi
jl
sub
cmpsb
aaa
inc
cmp
and
pop
sahf
fs
inc
push
decb
ret
ja
out
gs
into
shr
sub
cmp
mov
scas
jmp
movsl
sub
lods
and
xchg
pop
mov
bound
dec
clc
movsb
sahf
mov
mov
dec
cld
pop
xor
popf
jne
inc
add
xor
and
inc
lea
negb
cmp
cltd
out
mov
int3
and
inc
add
or
or
pusha
sbb
jne
push
ja
mov
mov
pop
loop
inc
mov
movsl
adc
sbb
add
push
mov
inc
daa
xor
movsl
jne
shlb
push
push
mov
or
or
cli
xchg
clc
dec
dec
jge
dec
and
xchg
push
ret
stos
arpl
sbb
dec
and
std
jno
xor
lret
pop
ret
dec
push
adc
inc
es
cmp
imul
xor
mov
xor
push
add
fwait
adc
pop
sti
xchg
shl
fnstsw
sbb
test
movsl
mov
stos
pop
cli
xchg
inc
xchg
lea
pusha
jo
cmp
ja
hlt
inc
lret
lock
push
repz
jbe
movl
push
iret
orb
subb
adc
sub
sub
test
mov
inc
sbb
or
mov
nop
or
sahf
inc
xchg
inc
inc
imul
call
das
add
mov
not
and
loope
ret
jae
mov
fwait
sbb
xlat
lea
pop
sub
ljmp
or
cld
dec
cmp
pop
subb
lret
or
mov
pop
cmp
adc
test
adc
fnstcw
repz
sbb
mov
and
pop
mov
mov
in
xor
and
mov
pusha
clc
lea
repnz
nop
and
xor
sbb
les
fldenv
pop
jg
cwtl
xor
sub
add
stos
push
or
pop
fdivl
or
pushl
add
mov
js
pushf
sti
inc
pop
pmuludq
sbb
adc
sub
fistl
or
addb
or
cmp
sub
pop
mov
pop
and
dec
adc
and
out
push
inc
iret
dec
out
mov
jmp
and
dec
test
dec
sub
push
push
or
popf
inc
xor
xor
xchg
and
inc
lahf
int
and
out
outsb
popa
inc
jge
fildll
mov
movsb
bound
pop
xor
movsl
in
mov
and
test
push
mov
push
mov
cltd
add
cmp
dec
sub
je
xchg
jp
push
mov
push
and
out
movsb
jp
ja
xchg
pop
cwtl
and
or
jbe
out
les
dec
aaa
jnp
das
jno
cwtl
sti
pop
mov
aam
bound
scas
jecxz
inc
cmp
movhlps
out
and
bound
and
add
cmc
mov
pop
rorb
call
push
push
jl
mov
pop
cli
pop
mov
and
sub
push
inc
sub
das
mov
dec
aaa
mov
push
arpl
pop
xorb
rolb
inc
scas
mov
mov
mov
adc
or
xor
mov
mov
test
xor
xor
mov
stc
mov
sbb
shlb
jecxz
cmp
setge
sbb
and
int3
inc
mov
dec
mov
jmp
jl
pop
push
sarl
cltd
adc
xchg
ret
cmp
jae
cmp
xchg
sub
add
sbb
fdivrl
mov
das
daa
mov
push
sbb
je
std
into
in
call
ficomps
jbe
dec
xor
adc
inc
shll
and
push
cltd
xchg
mov
insl
cmpsb
inc
stos
push
push
pop
test
and
xchg
outsl
xor
mov
push
addl
xor
push
jmp
mov
int3
in
mov
cmp
orl
fsubrl
sub
or
xchg
bound
or
sub
add
and
rorb
add
jnp
add
es
pop
call
push
adc
lret
dec
hlt
call
pop
cmp
adc
pop
xchg
and
add
lret
mov
add
negl
or
add
out
test
jne
xor
mov
xchg
jge
cmp
and
xor
push
or
and
mov
icebp
bound
icebp
or
cs
push
push
mov
mov
enter
or
mov
push
xchg
and
movl
pop
incl
push
adc
in
xor
mov
sarb
pop
jl
push
mov
and
push
sbb
adc
sub
movb
loopne
rol
cmp
add
jae
mov
cmp
jl
lret
jl
cld
loope
jbe
push
shlb
add
or
movsl
adc
roll
nop
inc
sub
test
jle
es
pop
cmp
mov
inc
ret
jl
add
adc
in
jb
cld
call
cltd
push
js
insb
cmpsb
cmp
jge
jb
inc
inc
ss
je
jmp
mov
add
popf
push
sub
stos
push
and
cmp
ret
lods
aas
inc
xlat
mov
call
inc
ja
repz
mov
add
addl
es
adc
mov
lcall
rcrl
mov
push
mov
jne
dec
jne
pop
cmp
xor
add
mov
hlt
xor
jae
cli
mov
test
movl
shrl
mov
aaa
dec
jle
das
xchg
or
add
sbb
mov
cmp
push
inc
inc
adc
sub
xchg
mov
xchg
ds
and
jmp
call
adc
mov
cmp
jbe
fisubl
jbe
rcr
push
nop
and
sub
push
sbb
mov
icebp
mov
cwtl
xor
lea
xchg
pop
lea
and
lea
mov
cmpsb
jae
add
sub
mov
or
pop
pop
mov
cmp
add
inc
add
lea
sbb
jae
add
xor
cmp
int3
pop
xorb
add
inc
inc
jmp
movsb
jae
dec
mov
add
sbb
leave
cmp
mov
cltd
jae
add
mov
jne
mov
divl
jle
push
push
pop
push
loopne
inc
into
movsl
pop
push
in
pop
pop
sbb
lock
or
lods
push
int3
add
mov
dec
ret
daa
ret
adc
inc
imul
jmp
push
rolb
in
cmpsl
jo
mov
lods
rorl
mov
push
mov
push
mov
jns
repnz
xchg
xchg
mov
or
lock
dec
or
out
lea
adc
jmp
loopne
ljmp
jae
sub
roll
lcall
push
shll
adc
or
js
inc
jne
fstpl
int
mov
push
mov
inc
jbe
daa
sub
jae
decb
popw
inc
cmpb
dec
inc
sub
adc
addb
rcr
mov
jno
xor
les
mov
or
cld
aas
xor
or
mov
dec
cmp
fsubs
push
nop
in
adcl
adc
sbb
xor
faddl
push
jbe
add
call
pop
or
sub
iret
dec
jl
pop
lret
outsl
adc
fisubrs
imul
cmpl
or
jne
push
push
call
stos
pop
test
lcall
lret
andl
push
jne
mov
inc
mov
cli
jmp
push
call
push
jb
push
pop
mov
inc
pop
push
pop
popa
jg
pop
mov
or
sub
jne
arpl
add
leave
call
pop
pop
roll
popa
and
and
push
xchg
push
enter
cmp
fimuls
add
jg
mov
xor
andl
ret
out
cmp
jo
lock
jecxz
sub
jbe
or
mov
mov
mov
and
inc
cs
inc
outsl
call
jmp
popl
rclb
daa
add
jne
sti
shll
mov
or
mov
or
dec
mov
push
cmp
pop
pop
ret
lock
sbb
hlt
mov
lret
xchg
lahf
shll
dec
in
scas
orb
ss
lea
jle
inc
jae
jnp
ret
shlb
mov
push
mov
test
sbb
pop
pop
test
xor
test
call
cltd
cmp
or
outsl
adc
popa
in
add
fwait
lods
or
jmp
xor
jmp
dec
daa
xchg
aaa
lret
push
pop
push
addb
test
push
imul
rol
sbb
leave
or
pop
mov
mov
adc
jne
shlb
sti
ficoml
call
adc
shll
cmp
ds
lock
les
test
sbb
push
mov
jo
int3
stc
pop
and
bound
and
je
xor
movsl
je
cmp
and
pop
test
mov
clc
dec
popf
cld
shll
push
nop
lea
cmp
pop
sbb
cmpsl
mov
test
mov
inc
scas
pop
int
mov
adc
loop
inc
xchg
pop
clc
rcl
in
push
lds
dec
insb
decl
jbe
fnstcw
sub
movsl
mov
and
les
jnp
inc
sbb
repnz
pop
or
mov
xchg
push
lret
shlb
jb
dec
les
or
rcr
mov
xchg
sbbl
shrb
int3
mov
loope
sub
repnz
lahf
ljmp
cs
cmp
fsubp
sahf
enter
dec
dec
or
push
js
jmp
clc
jno
outsb
mov
fwait
cmp
or
push
adc
xchg
out
andb
and
nop
inc
lret
or
mov
adc
and
out
and
sbb
push
loopne
hlt
movb
cmp
and
adc
stos
pop
pop
mov
adc
push
jae
mov
inc
mov
jmp
addl
dec
jg
je
cmp
sub
push
or
inc
xor
dec
jne
addr16
jmp
je
push
fsubrs
add
lea
pusha
and
gs
jg
ljmp
aad
xchg
je
or
aaa
ja
or
jns
sti
ret
push
jmp
les
or
mov
rcrl
mov
mov
or
scas
and
inc
in
adc
ret
jno
je
je
lock
jmp
mov
lret
add
jecxz
add
or
loope
outsb
xchg
add
lds
arpl
adc
or
push
or
dec
lea
pop
into
bswap
jbe
xor
repnz
rorl
pop
push
data16
das
pop
fdivrs
xor
sub
and
add
xor
jle
or
je
jecxz
fwait
push
add
dec
sbb
jmp
jne
pusha
enter
inc
jle
test
jmp
or
lea
ss
mov
adc
push
es
sub
inc
jge
push
stos
mov
push
in
into
xchg
fsubs
add
or
ret
xchg
scas
dec
outsl
jle
pop
and
lahf
addr16
sub
xchg
aam
loopne
jg
mov
sub
sub
in
sub
inc
pop
inc
jo
mov
mov
sub
pop
pop
and
xchg
mov
sub
inc
outsb
in
cmp
add
dec
mov
and
push
rcrb
mov
jbe
push
and
lret
int3
xor
add
daa
sub
sub
sub
imul
leave
sarl
and
or
mov
mov
testb
fsts
jg
ret
add
mov
enter
dec
test
sub
dec
sbb
mov
stos
adc
dec
cmpsb
ljmp
or
jo
mov
xlat
out
and
scas
dec
lea
or
adc
xlat
leave
cmp
sub
pop
mov
imul
jmp
cmp
icebp
inc
mov
sbb
ret
lea
jne
xchg
addr16
push
and
aad
xor
pop
icebp
add
pop
adc
les
mov
sbb
xor
sbbb
dec
sbb
xchg
cmp
je
adc
sub
in
or
in
cmp
push
pop
jmp
cmp
andb
jmp
xchg
or
pop
mov
iret
push
adc
xor
call
or
mov
mov
cmp
or
and
lret
iret
pop
cmp
je
inc
lods
xorb
push
popa
lock
stc
and
inc
cmp
pop
jae
jmp
or
fidivrs
push
xor
push
add
sub
inc
mov
nop
ret
pop
pop
mov
stc
bswap
pushf
pop
inc
dec
jne
xor
jmp
add
rorb
jmp
in
xchg
cltd
add
and
js
xchg
aam
sbb
shr
loopne
shr
push
dec
xchg
push
sub
push
test
sbb
add
enter
lret
pop
subb
adc
adcb
or
adc
je
and
jne
cltd
or
xchg
inc
sub
bound
jne
cmp
jge
dec
xor
fs
subl
lods
test
or
or
jb
lock
mov
adc
and
inc
jg
sbb
out
jecxz
push
xchg
jl
and
pusha
mov
mov
lret
push
dec
mov
add
xchg
jmp
jb
inc
add
icebp
jmp
ds
xchg
roll
sub
sbb
inc
lcall
push
fdivl
xor
pop
out
pop
xchg
loope
add
lret
push
ss
and
iret
rcrl
lock
jne
add
push
add
or
or
bound
scas
jne
lahf
jmp
or
inc
shlb
cltd
add
adc
in
add
in
ss
jmp
decl
cmp
dec
in
adc
adc
dec
xor
inc
and
mul
sbb
jmp
mov
je
aas
or
cmp
xchg
or
insb
roll
add
aas
lea
shl
fcomip
mov
fcmovne
cmp
clc
call
xchg
in
fiaddl
js
pop
inc
add
pop
js
add
filds
ror
into
test
pop
jne
sub
rorb
lcall
xchg
add
and
jmp
repz
cld
cmp
dec
stc
pop
or
rclb
inc
ljmpw
bound
inc
leave
cmp
sar
xchg
or
test
mov
sbb
loope
sub
push
enter
lahf
mov
push
shl
mov
out
cltd
enter
imull
inc
in
cs
je
adc
sbbb
imul
add
in
xchg
pop
xor
jge
sbb
sub
lcall
mov
decl
jbe
jbe
jle
pop
adc
add
arpl
rcrl
and
fucom
and
out
xchg
push
and
decl
js
ljmp
fld
cmp
sbb
pop
out
adc
je
sub
add
call
int3
lret
addr16
and
mov
cs
mov
out
leave
out
or
rcrl
adc
shlb
movlps
mov
jmp
xchg
test
and
adc
add
int
inc
std
add
rol
adc
fs
sub
mov
orb
inc
adc
andb
pop
inc
pop
jg
add
cmp
jb
clc
pop
dec
mov
sub
cs
add
cli
adc
and
sbb
and
jmp
rep
ja
dec
dec
mov
jg
xchg
mov
mov
mov
xor
jp
push
lahf
loop
jle
push
mov
pusha
sub
sbb
cmp
push
sub
push
call
loop
pop
dec
inc
jge
aaa
aas
test
fldt
test
daa
push
fdiv
sub
add
lds
or
inc
jno
jl
dec
cmpsb
or
cmp
cmp
sub
mov
test
adc
and
pop
pop
mov
sar
xchg
andb
dec
pop
loopne
or
or
pushf
mov
pushf
adc
enter
dec
hlt
fadds
xor
jo
lahf
pop
sbb
inc
xchg
add
dec
lcall
or
insb
stos
mov
jnp
cmovs
sbb
add
call
and
mov
push
mov
lea
push
loop
and
jmp
add
inc
add
out
cmpsl
and
and
jmp
nop
adc
test
xchg
call
out
dec
in
dec
mov
inc
cmp
cmp
push
movsl
mov
pop
jl
pop
cmp
push
inc
sbb
je
cmp
test
mov
lea
js
inc
pusha
or
pop
pop
test
shll
loopne
shlb
mov
push
mov
mov
dec
in
adc
add
cmp
fsubr
cmc
jne
adcl
sub
push
adcl
mov
jbe
test
inc
inc
cmp
jl
bound
jle
and
cmpl
jmp
ds
punpcklbw
add
jmp
adc
sti
mov
jb
cmc
push
and
je
push
pop
jno
mov
fsubs
mov
push
and
inc
pop
push
jnp
inc
or
idiv
jns
add
sti
add
fcoms
ret
and
mov
stos
mov
mov
aaa
mov
jns
cmc
or
lea
inc
jnp
xor
push
pop
lods
sub
xchg
js
ret
les
loop
jecxz
jg
dec
mov
cmp
out
mov
dec
lea
mov
addb
push
enter
add
adc
enter
dec
scas
bswap
jmp
xor
mov
lcall
repz
xor
xchg
inc
cmp
je
pop
push
xchg
xor
mov
aas
xchg
and
loope
xchg
ret
popa
gs
push
das
push
adc
sahf
stos
adc
fisttps
jo
adc
pop
incl
adc
mov
scas
and
pop
fsubr
enter
pop
ret
imul
in
mov
xor
popf
ret
jne
and
push
outsl
mov
sbb
adc
aad
inc
mov
in
addb
mov
adc
xor
dec
xchg
call
cmpsb
xchg
dec
mov
mov
popf
mov
int3
lcall
andl
dec
jne
lods
je
ljmp
pusha
testb
and
clc
jmp
inc
jns
sub
and
andb
nop
add
decl
hlt
out
rcrb
push
inc
push
inc
or
xchg
jmp
or
sub
cmp
inc
dec
adc
aas
mov
and
lret
and
or
fwait
adc
add
or
pop
mov
mov
mov
sub
mov
sbb
mov
repz
adc
fcoms
into
inc
push
mov
inc
sub
ret
jo
and
jge
adc
inc
in
in
ret
cmp
or
or
rolb
sbb
sete
sti
add
jmp
rorl
in
push
inc
mov
movb
inc
mov
and
jp
pop
push
cmp
push
sbb
repnz
dec
and
dec
sub
push
jbe
cmpsb
and
pop
mov
andl
adc
add
mov
jle
or
and
mov
jmp
or
dec
dec
jl
dec
mov
jmp
ret
fldenv
nop
adc
adc
sub
xchg
test
and
inc
dec
scas
enter
cmp
imul
jno
ret
jne
nop
pop
repnz
xor
insb
lahf
sar
xor
pop
or
dec
xor
jg
cmp
loop
popa
xor
and
push
stos
xchg
enter
inc
jle
movsl
adc
mov
pop
adc
movsl
or
jo
sbbb
push
dec
cmpsb
add
cmp
js
cmp
inc
out
clc
mov
pop
imulb
mov
mov
mov
or
xchg
push
fmull
adc
or
xchg
je
mov
pop
cmp
dec
adc
sbb
sbb
sbb
mov
pop
mov
jae
push
int3
dec
pop
icebp
dec
xchg
movsb
js
or
inc
push
cmp
jp
mov
sbb
jb
push
stos
mov
in
xchg
mov
mov
jecxz
cmp
add
cli
mov
icebp
mov
in
mov
data16
adc
sbb
push
popa
jmp
js
nop
adc
or
call
js
adc
jbe
sbb
xor
push
adc
pop
cmpsb
push
xor
scas
and
pusha
mov
clc
test
fildll
push
cld
mov
in
aam
xor
pushf
and
pop
sub
inc
mov
jp
pop
jmp
es
ljmp
push
sub
hlt
int
mov
pop
divl
xchg
push
push
data16
ja
cmc
dec
mov
stc
les
mov
ss
flds
jne
js
and
push
push
lea
mov
and
lods
fstpl
inc
adc
add
or
sbb
add
orps
lods
pop
adc
int
ds
orw
adc
xor
push
je
inc
stc
xchg
jo
mov
outsb
sahf
pop
sub
ds
mov
es
pop
push
mov
outsb
call
xchg
add
push
and
push
push
out
dec
testl
lock
stos
enter
sbb
ret
add
mov
sub
lods
push
scas
pusha
push
push
call
insl
movl
movsl
pop
in
call
and
repz
lods
mov
or
push
mov
in
mov
das
push
xor
sbb
test
and
adc
jecxz
cld
xchg
or
inc
or
incb
sbb
push
or
or
mov
sub
adc
sahf
arpl
out
jmp
ja
lea
jns
adc
popa
xor
ret
ja
mov
xor
xchg
or
inc
cwtl
in
mov
or
fcomps
adc
jg
adc
out
sub
insb
push
cmp
sub
cs
jmp
inc
and
mov
sbb
mov
xor
add
call
nop
xchg
dec
push
test
nop
cmp
mov
cli
ja
pop
jmp
push
pop
or
sub
in
arpl
sti
fsts
das
enter
aam
mov
les
pop
jmp
cmp
fnstenv
cmp
jbe
add
call
lock
imul
imul
mov
and
dec
lahf
int3
dec
sbb
cmp
inc
mov
mov
hlt
xor
mov
or
mov
mov
add
xchg
loopne
push
dec
push
dec
dec
insb
cmp
roll
gs
cli
cmp
jl
mov
rcll
inc
andb
aaa
sbb
lcall
in
loopne
adc
or
movsb
push
lret
pop
mov
cmp
mov
xor
hlt
adc
xor
in
stos
cwtl
pop
jb
popa
stos
ret
pusha
mov
push
mov
jae
cmp
test
mull
mov
rcll
aas
sub
xchg
les
adc
in
jae
cld
adcb
arpl
jb
mov
ja
stc
push
sbb
jmp
leave
cmpl
jg
or
daa
adc
inc
ret
inc
push
xchg
cmp
and
mov
ror
adc
mov
and
dec
pusha
cli
cmp
mov
or
shlb
pop
push
repz
xor
les
mov
leave
and
mov
adc
add
jge
adc
inc
cwtl
add
jae
loope
aaa
out
and
test
cmpb
jne
or
pop
bound
cs
or
add
jne
test
test
or
outsl
stc
test
clc
aad
ljmp
push
jmp
adc
into
in
jmp
je
pop
xor
sbb
sbb
lock
test
outsl
mov
sub
lret
jge
and
sbb
cltd
pop
add
sbb
stc
dec
js
movsb
scas
cltd
ljmp
add
or
pop
jle
in
call
inc
jne
push
loopne
iret
mov
sub
loope
sbb
mov
ret
adc
xor
mov
cmp
les
jmp
mov
push
inc
push
je
call
xor
mov
mov
mov
mov
and
dec
mov
dec
mov
je
and
sbb
or
icebp
lods
and
call
es
cmp
sbb
or
adc
xchg
sbb
clc
dec
cmpsl
stc
and
fadd
pop
andl
fxch
movsl
je
loop
add
clc
dec
cmp
or
test
cltd
mov
int3
inc
sbb
xchg
mov
dec
leave
pop
cmpsl
pop
or
jb
dec
pshufw
outsb
xor
out
loope,pn
add
add
dec
movsl
or
testb
jmp
sti
movb
lea
fs
insl
sbb
add
in
andb
idiv
pop
test
int3
int
cmpsb
push
inc
xchg
push
push
xor
aad
sub
xchg
fisttpl
mov
outsb
test
cltd
mov
lods
je
add
or
pop
mov
sbb
push
mov
aaa
cmp
or
movsl
enter
sbb
stos
inc
inc
or
inc
movsl
mov
shlb
pop
cltd
notl
incb
xchg
push
lds
push
sub
sbb
clc
lds
inc
cmp
jl
jmp
sarl
inc
daa
xchg
mov
ja
pop
nop
inc
pop
mov
cs
pop
ds
adc
add
jmp
in
jecxz
and
inc
daa
rcl
dec
pop
or
es
jmp
test
or
les
xchg
enter
test
xchg
jnp
adc
jnp
cmp
dec
rcll
adc
adc
movhps
ret
push
jecxz
cmp
cmc
mov
and
pop
mov
inc
mov
or
call
jnp
test
orb
popa
pop
push
pop
aaa
pop
movsl
fidivl
mov
xor
mov
enter
test
or
sbb
orl
test
div
sbb
inc
dec
cmp
jae
ljmp
es
jmp
jmp
or
mov
mov
dec
lock
mov
adc
pop
cmpl
mull
mov
fstpl
call
jne
jmp
shrl
cltd
jp
int3
jmp
cmp
add
push
dec
inc
inc
mov
mov
sbb
sub
mov
out
cwtl
cmp
push
inc
push
dec
mov
test
inc
cmp
xchg
sbbb
pop
pop
repz
ficompl
fisubl
cmp
mov
mov
dec
add
pop
and
insb
stc
bound
mov
cmpl
adc
xchg
fnstenv
cmp
push
ja
sbb
cmpsl
xlat
in
cmc
and
pop
mov
imul
imul
mov
mov
mov
rolb
jge
hlt
mov
out
daa
lcall
mov
and
shlb
add
cmp
dec
xchg
ret
add
stc
mov
adc
test
or
push
jmp
dec
adc
pop
lea
pop
mov
movb
decl
cs
mov
pushf
adc
cmp
nop
cs
dec
test
xor
jmp
sahf
add
call
adc
pop
stos
xor
hlt
jecxz
stos
add
add
je
aaa
test
dec
fdivl
xchg
mov
add
or
jmp
and
mov
jge
pop
dec
clc
mov
repz
adc
orl
mov
sbb
or
inc
ljmp
xchg
hlt
lahf
mov
les
xor
jne
and
add
add
pop
movb
or
lretw
pop
rclb
call
shlb
or
adc
shr
sub
negb
aad
pop
xor
mov
inc
add
sub
jnp
dec
or
mov
cmc
pop
nop
jle
jns
cltd
nop
mov
js
shlb
jb
ficoms
push
lock
cmp
mov
mov
sbb
mov
call
notl
hlt
pop
jo
rol
cli
roll
cmp
cwtl
lock
add
bound
or
repz
and
sbb
in
mov
add
cwtl
push
jnp
nop
cmp
xor
fcomps
or
int3
sub
inc
lds
and
or
ljmp
adc
int3
mov
les
je
pop
mov
cmpsb
sub
movsb
and
inc
inc
inc
or
mov
mov
movsb
adc
test
jl
cmp
je
jle
enter
inc
in
mov
mov
mov
cmp
add
or
clc
adc
icebp
dec
icebp
loopne
or
mov
sbb
and
movsb
sahf
xchg
cli
and
mov
or
mov
andb
or
icebp
pusha
out
and
fldenv
jnp
lock
nop
adc
mov
inc
push
mov
sbb
dec
add
outsb
loopne
dec
mov
mov
cltd
and
movsb
jno
xchg
push
out
xor
xchg
sub
sub
dec
pushf
lods
push
out
lods
out
movsb
scas
nop
inc
dec
pop
lea
mov
sbb
or
sub
xor
cmp
mov
dec
push
sbb
inc
adc
and
pop
and
shlb
pop
and
rorb
sub
sbb
js
or
mov
mov
adc
mov
clc
sbb
jle
test
sub
xor
sahf
mov
jge
cmp
adc
scas
cmp
cmpsl
sbb
shlb
and
push
push
daa
inc
push
js
xor
and
dec
inc
lods
out
mov
andb
sti
or
jae
cs
fstps
push
mov
cmp
ljmp
inc
mov
mov
xchg
sub
push
lret
mov
and
sub
hlt
enter
in
repz
je
out
pop
add
or
sti
pop
rcll
jb
inc
fcmovu
adc
jne
or
adc
jb
dec
call
imul
inc
mov
test
lea
push
push
cli
cltd
or
mov
pop
inc
in
cmpsl
sub
movsb
pop
fwait
bound
sub
cwtl
and
je
sub
dec
stos
shl
negl
cmc
out
and
jmp
inc
movsl
lock
daa
xchg
sub
inc
sti
push
lods
fimuls
add
in
incl
jb
subl
lret
add
push
sti
add
out
call
in
js
lods
push
imul
cmp
push
nop
mulb
mov
xchg
pop
fcoms
and
jg
hlt
jne
or
mov
push
mov
and
jmp
jbe
push
or
cmpsl
gs
jle
in
xchg
cltd
mov
dec
pop
sahf
es
lahf
jge
pop
loope
test
xchg
out
stc
in
fcomi
popf
fistl
jmp
mov
push
cmp
jae
mov
leave
dec
xor
cmpsl
roll
into
mov
scas
sbb
and
scas
sbb
sbb
jle
pop
ret
cmp
push
movsb
fiadds
call
pop
adc
das
scas
movsb
gs
js
mov
ds
outsl
or
cld
cltd
xchg
push
leave
jle
mov
psubq
dec
rcrl
push
jne
adc
aas
and
clc
gs
call
sub
negl
and
in
pusha
add
leave
cmp
int
cmp
xchg
insl
insb
aas
xchg
add
or
push
mul
ret
aaa
or
fcomps
push
xchg
or
or
adc
inc
aaa
movsl
and
dec
jo
inc
xor
outsb
or
ds
in
subb
imul
sbb
adc
dec
inc
in
mov
or
inc
sub
loop
or
and
jecxz
lret
inc
jmp
xchg
inc
cmp
sbb
cwtl
push
mov
mov
shrb
hlt
pop
jae
push
sbb
mov
mov
je
sub
xchg
lock
call
sar
cli
jne
push
push
int
mov
mov
adc
or
loope
dec
pop
outsb
or
sub
cmp
cmpsl
or
inc
mov
lea
cli
jge
xor
call
push
movsl
fcmovb
cli
add
pusha
popf
repz
xchg
adc
ds
pushf
adc
call
mov
xchg
sbb
jae
out
xchg
mov
sub
enter
ret
push
shrb
lret
sarb
lcall
jmp
adc
mov
sbb
push
jmp
xchg
insb
aam
adc
jmp
mov
sbb
cwtl
mov
bound
lea
adc
iret
call
cmpsl
cld
xlat
mov
push
xor
push
cwtl
adc
xchg
insb
mov
push
jnp
xchg
rcrl
xchg
or
mov
leave
push
add
inc
icebp
sbb
fucompp
sub
shl
icebp
data16
popa
or
shr
inc
and
sub
stos
fmuls
shll
je
jbe
add
or
jne
div
popa
fwait
and
xor
or
jb
cmp
js
js
ret
pop
jbe
dec
pop
lcall
and
mov
push
outsl
cmpsb
or
sbb
push
dec
outsl
adc
xor
pop
outsl
and
xor
or
cltd
insb
or
mov
mov
adc
adc
mov
jo
jge
mov
push
jecxz
xchg
fsts
mov
pop
incb
repz
mov
mov
cmp
inc
xchg
ja
push
push
dec
and
mov
cmp
adc
clc
jo
out
adc
in
icebp
xor
shlb
lock
or
aam
inc
dec
or
mov
sbb
adc
or
xchg
nop
fstps
adc
icebp
jo
or
mov
aad
lock
push
jnp
lea
lock
sub
push
push
ficoml
test
icebp
push
pop
int3
movsb
shrd
mov
mov
aam
out
mov
mov
repnz
or
mov
nop
pop
sub
dec
lret
push
aad
inc
dec
pop
cltd
shrl
add
xchg
das
dec
dec
lret
jno
or
in
dec
add
cmp
pushf
xchg
imul
cmp
mov
mov
subb
xchg
nop
pusha
dec
xor
je
data16
arpl
pop
jmp
mov
hlt
daa
pop
scas
xchg
dec
mov
stos
sub
mov
jl
lea
scas
inc
lcall
push
push
dec
pop
inc
dec
inc
sub
jb
cmp
add
xchg
call
sbb
aas
xchg
push
push
int
das
dec
adc
aam
loop
push
sbb
movsl
out
loop
flds
hlt
mov
and
adc
push
shld
shl
int
rcr
cld
loope
hlt
loop
mov
xchg
ja
or
pop
inc
mov
dec
les
mov
xor
daa
cs
popf
lock
xor
clc
aad
push
cmp
cld
or
sub
adc
push
les
push
shlb
call
movsb
push
pop
push
ret
adc
les
out
clc
xchg
lahf
push
ret
mov
leave
xchg
mov
sub
mov
cld
xchg
in
push
jns
adc
or
cmp
nop
test
inc
and
into
insb
cmp
into
lret
shrb
adc
add
cmp
jle
les
jo
cli
mov
sbb
dec
in
dec
or
fsubrp
jecxz
rcll
jge
mov
call
and
jecxz
and
aas
nop
and
cmp
mov
cmp
sbb
dec
les
mul
gs
adc
jb
hlt
je
mov
bound
pop
call
adc
xor
loopne
fdivrs
dec
divl
add
inc
jle
sbb
mov
cmp
or
fcmovne
xor
inc
push
dec
scas
and
gs
sti
pushf
addb
mov
mov
pop
loopne
adc
in
cmpsb
mov
std
fbstp
xchg
lret
in
icebp
je
push
nop
push
mov
add
sub
push
lea
jecxz
jge
cmp
rol
dec
std
icebp
daa
jno
mov
pop
push
jmp
push
lea
call
sub
loope
sbb
add
adc
repz
push
call
dec
adc
sbb
fdivs
imul
jo
mov
int
push
adc
idivb
cmp
lea
in
inc
cmp
icebp
lea
cmp
mov
and
and
xor
cld
out
sbb
stos
stos
mov
jbe
out
xchg
dec
out
mov
dec
sarb
decl
cli
cmp
sub
and
or
out
jmp
inc
scas
push
or
pop
push
stos
dec
sahf
sbb
sub
add
push
add
dec
mov
ja
incl
rorb
nop
dec
inc
ret
sub
inc
mov
xchg
push
push
pop
ret
loope
fadds
pop
rcl
notl
or
clc
in
push
mov
ficompl
lea
cmp
rcrb
jns
cwtl
sub
mov
stos
sub
dec
push
dec
push
xor
inc
and
dec
xor
xchg
movsb
insl
sbbb
call
push
or
mov
cld
dec
lds
lcall
ficompl
test
and
std
push
cld
jne
xor
sub
adc
hlt
loopne
je
and
fcoml
orl
jbe
push
adc
icebp
or
adc
adc
jb
mov
jmp
rorl
je
les
push
or
xor
sbb
push
xor
rorb
jmp
hlt
mov
inc
repnz
pop
nop
or
push
repz
shll
fdivrs
xor
mov
mov
mov
jne
rcrb
push
ret
mov
or
push
mov
adc
inc
and
test
ljmp
and
cld
jb
mov
and
jae
add
jmp
lea
jae
mov
jne
bnd
fwait
add
mov
mov
sbb
add
mov
pusha
mov
mov
inc
mov
daa
push
push
es
cld
sbb
or
mov
enter
dec
cwtl
pop
xor
popa
adc
jp
push
pop
dec
popf
cmp
dec
jmp
dec
int3
xchg
mov
insb
out
jl
subl
pop
add
insb
mov
test
or
and
lahf
ds
mov
cmp
stos
arpl
push
call
test
sti
adc
adc
mov
gs
mov
push
call
fstl
adc
mov
push
push
adc
cmp
dec
xor
jmp
jae
and
xchg
push
mov
ds
pop
jae
call
jg
push
push
or
andb
xor
cmp
mov
test
mov
addl
lcall
pop
mov
sub
jmp
scas
or
gs
inc
lret
cmpb
inc
cltd
je
or
aad
add
pop
lods
das
mov
jmp
adc
xchg
or
flds
subl
test
add
lret
movsl
add
enter
sub
jp
js
adc
cmp
adc
jne
sub
dec
inc
dec
adc
outsl
inc
mov
cltd
ds
add
push
adc
push
shrb
call
fsubr
insb
adcl
mov
sub
add
sbb
adcb
test
sbb
xchg
shll
dec
adc
cmp
inc
pop
andl
add
or
or
gs
push
or
mov
push
or
dec
int3
sbb
add
xchg
fimuls
out
pop
xchg
add
clc
mov
rorb
iret
jmp
push
call
adc
jmp
jl
cld
xchg
push
pop
or
lahf
out
mov
call
mov
push
add
ret
pop
sub
mov
or
xchg
lock
popf
cmp
inc
add
dec
std
in
mov
sbb
es
push
insl
push
stos
inc
data16
pop
lcall
jne
call
cmp
inc
mov
and
fisttps
push
inc
jmp
xchg
mov
sub
sub
dec
in
fs
shrb
lock
add
push
mov
and
push
or
jne
repz
or
mov
clc
push
jnp
repz
and
aas
cli
imul
loop
push
sarl
pop
add
add
cli
ret
lret
es
popa
cmp
and
aam
ds
sbb
sub
add
roll
cmp
dec
incl
xchg
nop
sbb
adc
add
inc
mov
inc
fwait
arpl
sub
and
or
lret
cwtl
rcll
jo
pop
lods
imul
notl
daa
mov
xchg
test
xor
dec
ljmp
ret
bnd
dec
sbb
xlat
nop
sbb
stc
dec
in
outsb
loop
daa
jne
bound
lea
inc
or
int
addr16
xor
adc
leave
jo
mov
aad
mov
mov
mov
gs
cmp
scas
adc
scas
xor
inc
movsl
mov
jge
push
adc
ds
popf
jmp
outsl
or
sbb
or
cmp
sbb
je
jecxz
fcoml
daa
mov
cli
data16
jl
clc
jmp
inc
cmpsb
ret
push
dec
jnp
xor
mov
or
js
add
out
movsb
push
xchg
cs
pop
inc
popa
daa
inc
cmp
call
cmp
inc
leave
and
add
out
in
xchg
cmpsl
imul
gs
rolb
mov
jle
add
sub
jg
popa
test
ret
mov
mov
xchg
and
sbb
fistl
sbb
inc
aad
stos
add
cs
cmpl
stc
inc
bound
or
scas
sbb
sub
test
xchg
cltd
rorb
repnz
jmp
fcomi
dec
mov
or
dec
xor
pop
je
and
cld
jb
rcr
ja
add
fs
adc
pop
jne
dec
xor
xor
mov
pushf
fwait
and
adc
neg
jmp
pop
inc
sbb
fstps
mov
xchg
pop
test
outsl
hlt
in
inc
les
in
je
dec
f2xm1
push
push
icebp
pop
adc
aam
sbb
hlt
aad
adc
test
jb
shl
std
mov
mov
dec
stc
shll
xchg
in
cli
mov
cld
inc
subl
sbb
and
pop
jge
dec
cmp
cmp
or
adc
xor
mov
std
inc
cmpsl
cwtl
dec
mov
gs
mov
push
sahf
sahf
or
jl
in
mov
out
pusha
scas
cmp
mov
testl
and
js
mov
ret
test
aad
mov
xor
and
push
out
sbb
jo
lods
sbb
add
inc
push
push
pop
sbb
mov
add
outsl
mov
push
in
rcr
cmpsb
or
andl
in
out
adc
jl
or
bswap
adc
xor
mov
insb
rcrb
fsubl
inc
insl
outsl
push
push
push
push
xor
jmp
bound
ret
and
std
inc
pop
in
inc
mov
cli
insb
daa
and
repnz
lahf
sahf
xchg
stc
mov
hlt
xchg
mov
xor
rorb
or
test
dec
aam
xor
xor
ja
and
pusha
adc
sub
inc
and
pop
adc
mov
adc
sub
sub
seto
mov
push
cmp
unpckhps
add
movups
inc
mov
in
adc
mov
ret
mov
and
push
inc
movsl
and
fs
and
adc
cli
lea
add
adcl
int3
insl
enter
jb
gs
or
push
adc
loop
cmp
movntps
cmp
xorps
cmp
ud2
test
into
cld
adc
mov
in
and
fs
and
fs
pushf
push
inc
mov
and
js
por
ljmp
pusha
inc
fdivp
lahf
sbb
or
rorb
or
mov
inc
and
nop
sub
clc
mov
mov
dec
shl
dec
scas
rcrb
inc
push
pop
call
pop
pop
movsl
push
mov
subb
lock
dec
rorl
dec
daa
dec
mov
mov
push
push
or
push
push
test
mov
clc
js
or
xor
and
mov
inc
lahf
mov
stc
daa
xchg
or
jb
test
add
repz
xchg
dec
mov
mov
and
scas
inc
lahf
xchg
mov
dec
int
stos
and
dec
jmp
ret
mov
adc
and
push
inc
std
or
or
inc
sbb
iret
sbb
or
xchg
jne
fsubl
decl
bound
inc
or
or
xor
in
sub
add
mov
or
or
or
adc
adc
adc
adc
add
inc
adc
sbb
sbb
add
and
adc
and
sub
xchg
and
daa
dec
sub
add
sub
ret
mov
and
shrl
les
test
adc
iret
add
sub
jle
push
sbb
cmp
push
mov
mov
sub
xchg
shr
int3
jecxz
xchg
in
add
and
outsl
mov
mov
inc
push
push
mov
mov
jecxz
fistpll
movb
addl
clc
call
hlt
ds
sub
push
and
jno
loope
sub
mov
nop
out
movsb
arpl
push
or
mov
cmp
mov
call
dec
fwait
inc
aaa
mov
test
loop
aam
cmp
mov
or
test
pop
add
push
inc
or
xor
sub
pop
mov
push
popa
mov
xchg
push
les
fimull
ret
int3
pop
pop
inc
and
nop
in
push
mov
lret
lods
mov
fbld
in
icebp
daa
pushf
jae
xchg
mov
les
xchg
fsubr
dec
xchg
pushf
cmp
inc
lret
add
mov
dec
mov
ja
call
dec
scas
negb
and
ds
and
int3
dec
inc
out
test
sub
repz
cld
jo
dec
sti
jg
shrb
xchg
addr16
pop
xor
je
mov
and
push
mov
jns
sub
or
mov
or
xlat
or
jge
jne
gs
push
sbb
pop
pop
mov
rclb
jmp
dec
movb
pop
and
push
js
mov
dec
int3
popf
lret
or
mov
dec
push
inc
sub
mov
adc
lret
add
and
dec
lret
and
adc
cmp
xchg
push
adc
lret
inc
fmul
mov
adc
jp
pop
inc
dec
inc
mov
adc
leave
mov
or
and
dec
pop
xchg
je
mov
mov
adc
and
dec
cli
mov
and
pushf
out
or
push
or
mov
or
dec
xor
or
aaa
inc
or
add
add
dec
cmp
pop
push
mov
dec
add
or
push
mov
adc
inc
pop
push
or
or
mov
pusha
and
dec
test
enter
adc
in
or
xchg
and
data16
mov
movsb
and
dec
int3
xchg
fisubs
hlt
push
or
dec
hlt
rcrl
mov
push
pusha
push
nop
inc
fisubrs
inc
add
and
and
gs
jae
cmp
cmp
xchg
jne
cmpsl
mov
jae
and
insb
imul
cmp
xchg
and
cmp
das
xor
xor
das
sbb
repz
fstpt
sbb
imul
inc
aaa
js
stos
icebp
sub
push
lea
xor
movups
adc
adc
push
pop
out
cld
aad
sbb
push
pop
and
and
and
sub
sub
lods
xor
xor
xor
ss
cmp
add
cmp
sub
lahf
add
push
insl
add
jb
sahf
jne
ja
jns
jp
pop
pop
pop
pop
pusha
pop
and
jg
addb
xchg
mov
mov
xchg
xchg
xchg
xchg
xchg
add
popf
sahf
lahf
add
movsl
cmpsb
cmpsl
add
lods
scas
scas
add
mov
mov
mov
mov
loope
jecxz
in
out
call
in
out
out
add
icebp
repnz
cmc
div
add
stc
cli
fcmovnu
fstp
filds
loopne
cld
std
and
incl
and
push
jae
outsl
outsb
lock
cmp
jo
xor
rclb
outsb
push
sbb
and
xchg
fs
or
push
aam
jl
imul
insb
sbb
pop
sub
push
fdivr
lahf
or
add
or
imul
loope
xor
pop
repz
xor
jae
jmp
jne
jns
hlt
cs
mov
loopne
cltd
inc
adc
mov
pop
sbb
sub
xor
imul
cmc
pop
fsubrl
aaa
ror
sbb
dec
lods
dec
popf
adc
imul
cmp
cmp
sub
int
xor
pop
shlb
outsl
inc
inc
gs
iret
push
xor
mov
jbe
xchg
leave
pop
fwait
mov
std
jmp
cmp
push
aad
pop
pop
inc
pop
jmp
pop
ss
jb
mov
sub
jl
xorl
push
insl
es
mov
jns
cmp
mov
mov
sbb
add
fldenv
data16
jg
jg
push
push
jae
or
fdivrl
push
jb
mov
test
add
inc
inc
inc
inc
dec
dec
add
dec
dec
dec
dec
push
push
pop
push
push
push
in
rorl
pop
pop
pop
inc
sbb
or
orb
mov
nop
xor
jg
orb
andl
xchg
xor
lea
push
mov
xchg
sbb
mov
lds
fwait
mov
sbb
xchg
jne
dec
mov
ret
icebp
inc
or
dec
inc
sti
dec
je,pn
cs
inc
sub
shrb
or
add
add
cli
inc
sti
jae
movsl
or
mov
or
ss
add
dec
xchg
imul
and
lods
pop
lods
adc
push
lods
rolb
popf
sahf
fwait
inc
pushf
daa
arpl
add
add
add
insl
add
sub
jno
addb
ret
mov
ja
imul
arpl
xor
cmp
adc
daa
orb
fwait
cmp
cwtl
mov
adc
fsubrl
xor
or
mov
xor
mov
nop
or
xchg
adc
orl
xchg
sbb
sbb
loopne
mov
mov
sbb
pop
cmpsb
cmpsl
mov
mov
push
adc
and
loopne
loope
scas
shrb
lods
rcrl
sbb
sbb
sbb
adc
xchg
jo
jo
jo
jo
jo
jo
jo
jo
jo
rcr
leave
cmp
pop
push
outsl
jo
jo
jo
jo
jo
into
lods
pop
push
pop
push
pop
or
fcmovnbe
sbb
scas
jo
jo
pop
dec
in
inc
xor
or
std
out
add
or
lahf
loopne
xchg
popa
ficompl
ret
outsl
repnz
add
jle
jbe
in
adc
and
dec
adc
pop
and
enter
repnz
fdivl
adc
xlat
sub
mov
stos
adc
fbld
sub
aaa
push
mov
sub
pushf
or
sbb
adc
or
dec
push
ret
mov
push
mov
test
les
mov
movsb
dec
cmpsl
test
and
push
sub
mov
test
cmp
lds
rcrw
sbb
dec
pop
sub
xchg
push
adc
test
aaa
lods
dec
out
add
sbb
es
push
or
cmp
cmp
in
xor
dec
or
push
js
repz
outsb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
jns
jp
fdivrl
push
jle
push
pop
je
dec
popa
shr
sbb
loopne
into
sbb
mov
xor
mov
and
sub
mov
xor
adc
sti
jecxz
add
cwtl
pop
mov
dec
push
sub
mov
xchg
sarl
cmp
mov
mov
dec
or
lret
adcl
int
mov
mov
rorb
push
fiaddl
xchg
add
add
mov
movsl
popa
push
mov
mov
fsubrl
rcrl
mov
sub
inc
add
sub
jo
mov
dec
insb
iret
mov
loopne
loopne
loopne
loopne
loopne
loopne
shrl
lret
sbb
sbb
adc
push
hlt
or
xchg
lods
es
cmp
out
cltd
sub
xchg
adc
cmp
cmp
cmp
sub
xchg
pop
push
push
xchg
mov
push
cmpsb
or
add
rorb
int3
xchg
cmp
adc
cmp
push
mov
or
adc
adcl
adcb
xchg
pop
push
lods
addl
rcrl
push
xchg
pop
pop
and
and
es
pop
mov
or
and
and
and
or
cmpsl
cmpsb
sub
sub
xchg
sub
xchg
pop
xor
xchg
pop
xor
xor
inc
cmp
cmp
test
cmp
dec
cmp
inc
roll
roll
roll
inc
loope
mov
dec
loopne
test
dec
movsl
mov
add
mov
add
mov
ljmp
cmp
or
mov
call
ljmp
mov
push
movsb
lock
rorl
and
or
insb
and
add
push
xchg
je
arpl
and
push
insb
or
jo
inc
inc
arpl
cs
fisttps
scas
add
mov
cmp
andb
mov
int3
jno
push
cmpsb
inc
adcl
add
cmp
pusha
lret
lods
lcall
imul
mov
push
add
cmp
sub
shll
add
xchg
inc
dec
and
aad
movsb
or
and
jmp
add
xor
and
insl
add
sub
pop
push
or
shll
adc
inc
mov
push
in
mov
and
push
xchg
cs
imul
or
cmp
mov
mov
add
lea
dec
lret
push
inc
inc
sahf
cmp
xchg
cmp
push
popa
pusha
fs
ficoml
mov
enter
rclb
push
inc
mov
push
xchg
mov
fsubrs
push
insl
mov
mov
sbb
hlt
cmp
add
loop
push
push
ljmp
stos
push
dec
lock
and
xorl
lret
pushf
xchg
mov
lods
fs
insl
ja
jge
pop
dec
addl
cwtl
and
jno
mov
jge
xchg
out
add
xorb
inc
out
lahf
das
cmp
daa
add
or
or
jo
daa
ss
out
mov
and
adc
xchg
xchg
push
sbb
nop
xchg
mov
in
xlat
fwait
insb
sbb
or
mov
mull
add
mov
lcall
insb
into
out
add
jb
lahf
sbb
les
jnp
xchg
add
xchg
mov
adc
andb
xorl
dec
arpl
jo
sbb
imul
dec
sbb
push
aam
sti
xor
or
push
xchg
cmp
dec
lods
adc
mov
add
fstl
sub
std
adc
into
add
pop
addb
ficoms
push
and
add
pushf
sbb
cmp
inc
or
pop
sub
pop
int3
adc
sbb
gs
or
cld
add
sub
mov
dec
lret
sub
data16
add
mov
dec
add
push
and
adc
sub
or
sbb
or
adc
xor
inc
sub
xchg
das
push
and
fs
or
or
push
jbe
or
orl
gs
cmp
jbe
andb
pushf
push
cmc
je
or
add
adc
dec
and
inc
rolb
movsl
adc
sbb
adcb
clc
call
or
jp
sbb
cmpsl
and
push
lret
push
cmp
pop
xchg
and
sub
or
jl
and
xor
xorb
sub
adc
jg
jnp
mov
sbb
xchg
sbb
ret
stos
ss
push
imul
jle
jp
mov
push
xchg
push
movsb
jle
xor
loope
xorb
pushf
cmp
xor
adc
mov
and
xor
and
fidivrl
and
je
dec
push
ss
sbb
xchg
cmp
mov
mov
js
in
pop
fimull
fs
push
jl
and
jb
mov
push
pushf
sub
fidivl
dec
imul
mov
cmc
mov
lcall
pop
dec
mov
xor
movsb
aas
adc
jne
loopne
push
cmp
mov
mov
adc
cmp
jno
out
sub
ficoms
add
add
movsl
xor
pop
add
pop
adc
sbb
cmpsb
add
or
or
or
mov
adc
add
adc
cmp
and
dec
adc
add
pop
push
in
sub
sbb
js
cltd
or
sbb
xchg
and
and
and
and
dec
daa
xchg
sub
sub
mov
sub
xchg
xor
xor
mov
out
inc
add
out
push
mov
dec
or
mov
mov
mov
xor
add
or
add
jp
add
add
or
mov
or
sbb
pop
pop
in
adc
lret
and
push
xorl
sub
push
loopne
fsubrl
mov
mov
jl
xchg
pop
movb
and
or
add
xchg
and
inc
cmc
mov
and
sbb
or
mov
js
sti
subl
inc
sub
cmc
out
into
sbb
pminsw
testl
fs
adc
jns
fsubs
fwait
int
mov
mov
repz
stos
repz
cmp
or
xchg
add
add
aas
subb
cmpsb
cld
inc
cld
jp
cs
pop
iret
push
pop
pop
iret
bound
push
aam
cmpl
andl
mov
into
int3
repz
cmp
je
shrl
lahf
or
lahf
sbb
testb
push
pushf
imul
lahf
pop
pop
lock
sbb
vpblendd
enter
or
jmp
adc
and
mov
mov
stos
or
repz
jecxz
repz
jecxz
repz
and
addb
or
arpl
adc
pop
or
cld
cmp
cmp
sub
jo
outsl
out
out
roll
cmp
inc
ret
lds
daa
dec
sub
cltd
sub
xstore-rng
cmpsl
pop
mov
adc
sub
bndldx
jle
push
add
sbb
or
xchg
jmp
in
repz
jle
jle
leavew
and
or
test
add
mov
loope
mov
scas
shll
mov
add
hlt
icebp
xchg
ret
icebp
aas
push
scas
ds
jae
or
dec
cld
pop
popf
hlt
lods
cld
mov
xchg
fisubrs
cmp
or
mov
cmc
sub
cltd
and
pusha
icebp
pop
push
push
arpl
push
lock
push
cld
popa
cld
mov
pop
iret
and
dec
lret
lahf
cmp
cmp
and
xor
jmp
push
aas
add
cmp
insl
cmp
aaa
jecxz
repz
jecxz
jecxz
loop
mov
rcl
rcll
mov
sbb
jo
sbb
fwait
add
add
add
cli
xchg
in
xchg
sbb
mov
out
push
sbb
pop
out
cltd
stc
or
stc
aam
fidivs
aad
fpatan
shl
in
xor
or
ret
hlt
mov
clc
lahf
cld
mov
adc
mov
ds
jnp
xor
cld
cmp
call
add
add
aad
lods
sbb
xchg
or
js
jle
sbb
add
mov
mov
xchg
daa
outsb
inc
jae
push
ja
imul
push
dec
push
dec
iret
inc
iret
inc
iret
dec
int3
dec
cmp
cld
sbb
es
sub
and
pop
sub
push
push
or
ds
pusha
xor
stc
or
push
jbe
js
jp
jl
jl
dec
push
pushf
jl
stos
push
cmp
pop
rcrb
call
sahf
out
and
clc
lahf
pop
pop
clts
shlb
je
jg
add
shlb
dec
in
iret
sbb
mov
shrd
xchg
xchg
jg
xchg
iret
mov
jns
lea
pop
adc
repz
aad
mov
arpl
jp
nop
call
cmp
je
jae
ror
in
leave
ljmp
sub
sbb
imul
xor
dec
sub
xor
push
and
push
arpl
nop
sbb
test
cwtl
dec
cld
pop
in
movsb
hlt
push
lock
cld
mov
leave
clc
sar
push
add
push
inc
sub
mov
xchg
cli
mov
ljmp
fidivrl
cmp
imul
or
cli
rorb
arpl
and
aas
sub
dec
jg
sub
jo
daa
lahf
and
sbb
add
aas
pop
lcall
aas
and
sbb
pop
int3
cmp
jle
jle
jl
jle
cmp
add
jl
nop
int3
sbb
outsl
mov
bswap
ret
sbb
iret
jecxz
mov
jmp
stos
push
and
or
or
jecxz
repnz
dec
mov
sbb
lsl
add
lret
cmp
push
xchg
leave
mov
je
adc
iret
into
pmulhuw
addl
sbb
shl
xor
cld
push
test
in
in
mov
xchg
out
mov
lret
inc
stc
add
cld
out
stc
lretw
adc
pop
shl
std
xor
dec
push
sbb
add
mov
cld
mov
lock
insl
hlt
test
mov
pusha
es
pop
mov
push
popa
fs
enter
pop
add
pop
call
or
cmpsl
or
jl
fldt
pop
insb
mov
imul
pop
cmp
imul
push
mov
test
aas
and
cli
cmp
pop
repnz
cmp
es
je
or
mov
andb
in
sbb
lret
lock
or
aas
leave
cmp
dec
pfrsqit1
loopne
dec
imul
mov
push
jge
mov
pop
and
add
add
cmp
insb
int
inc
or
push
cld
jnp
cld
mov
stos
dec
lods
lods
ret
xchg
add
aas
add
push
push
bswap
inc
adc
dec
sahf
mov
push
sbb
mov
dec
packsswb
popl
ret
std
add
sti
in
stc
lock
cld
out
cld
sarb
add
adc
jbe
pop
pop
or
sbb
add
ret
pop
xor
xor
dec
or
add
inc
ds
pusha
cmp
stos
ja
inc
jge
mov
jl
nop
dec
jo
inc
sbb
call
aas
or
cmp
lea
ret
loopne,pt
out
cmp
cmp
jb
mov
cmp
cmp
mov
mov
jbe
jl
pop
push
adc
dec
icebp
inc
rorb
repz
mov
cmc
add
stc
and
pusha
mov
std
jl
hlt
std
sub
out
mov
dec
ds
inc
aas
jl
outsl
mov
fs
test
cmp
cmp
bndstx
xchg
push
push
psubusb
mov
dec
lcall
nop
std
add
mov
dec
pop
leave
ss
sahf
pop
lahf
fs
gs
mov
lahf
cmp
jle
jp
jle
outsl
jg
iret
mov
iret
mov
into
iret
mov
sbb
or
xor
loopne
out
adc
jae
mov
mov
mov
cmpsl
or
adc
mov
gs
pop
sbb
sub
imul
xchg
les
iret
mov
ret
add
xchg
sbb
jb
fiadds
jb
data16
in
or
jle
dec
arpl
repnz
ret
or
and
and
pop
insb
push
cmp
adc
or
push
sbb
push
and
fcomi
adc
sbb
add
hlt
and
clc
cmp
inc
inc
cltd
or
xchg
jecxz
loop
imull
inc
xchg
mov
int
sbb
add
or
dec
mov
jbe
xchg
cld
pushf
clc
jne
movsb
test
popl
jle
jl
jl
jle
jbe
push
mov
ffreep
pop
int3
pop
int
dec
adc
loopne
seto
lret
fwait
sti
or
or
adc
out
fcmovne
sub
sub
cmp
sbb
push
add
add
dec
push
and
xor
push
inc
xlat
mov
dec
repz
mov
adcl
sub
xor
in
jmp
pop
pop
push
sbb
outsl
or
adc
jne
xchg
movsb
dec
orl
xchg
pop
out
andb
adc
loope
add
cmpsb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
push
call
repz
idiv
cli
stc
cld
stc
clc
add
jbe
js
jp
iret
add
iret
push
iret
and
and
daa
iret
sub
sub
iret
aaa
iret
cmp
aas
iret
inc
iret
dec
iret
dec
iret
dec
iret
push
iret
push
iret
push
iret
pop
iret
pop
iret
pusha
iret
arpl
addr16
imul
jae
jne
js
jge
or
iret
mov
mov
xchg
iret
xchg
iret
lcall
iret
cmpsb
iret
test
iret
mov
mov
iret
iret
int
ror
aad
fxch
fmulp
loop
out
ljmp
iret
test
push
xor
or
push
or
daa
adcl
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
roll
add
or
or
or
inc
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
aaa
daa
or
adc
lcall
sbb
and
lahf
das
lahf
xor
cmp
inc
lahf
inc
lahf
dec
lahf
dec
lahf
push
lahf
push
lahf
push
lahf
pop
lahf
pop
lahf
pusha
lahf
bound
imul
lahf
ja
jl
sbbb
lahf
xchg
lahf
xchg
lahf
lcall
lahf
cmpsb
lahf
test
lahf
mov
mov
mov
lahf
les
rcrb
fistpl
out
in
lahf
out
lahf
repnz
cmc
lahf
cli
xchg
incb
das
sbb
daa
or
adc
sbb
sbb
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
in
mov
or
add
movsl
or
push
sub
dec
xchg
int
or
and
mov
sub
adc
sub
adc
ficoml
outsb
add
sub
dec
mov
sbb
lret
and
and
add
loope
aas
fnstenv
push
cmpsb
xor
daa
mov
or
mov
repnz
jo
add
icebp
aaa
adc
sub
xor
add
aas
cmp
cmp
cmp
pop
inc
cmp
xchg
ja
adc
or
outsl
repnz
or
inc
or
into
cmc
ja
inc
lret
lahf
inc
adc
mov
cmpsl
mov
lods
add
inc
cld
xor
dec
jmp
cld
dec
iret
or
loope
add
dec
dec
xchg
xchg
or
xor
insl
int
push
cmc
sub
ret
test
or
push
inc
push
clc
push
clc
pop
test
add
cmp
pop
ljmp
pop
push
sbb
daa
adc
out
sbb
or
pop
sub
sbb
add
notb
add
lds
add
push
cmp
lret
out
out
or
adc
dec
add
push
pop
push
push
aas
add
insb
mov
or
xor
mov
jb
add
jge
addr16
andb
mov
js
jns
mov
jp
jnp
inc
mov
xchg
jle
jg
mov
lcall
addr16
test
test
dec
push
test
nop
repz
sbb
lea
mov
es
lret
int
lahf
rcrb
xchg
adc
int3
xchg
or
adc
loopne
xchg
xor
mov
lcall
popf
push
sahf
sbb
testl
mov
int3
or
sbb
cmp
pop
aas
cmpsb
aas
cmpsl
sub
stos
xchg
add
lods
push
clc
lods
mov
icebp
scas
adc
mov
mov
addr16
cs
out
out
sbb
fadds
add
cltd
mov
cltd
or
push
inc
daa
dec
inc
mov
xchg
and
retw
or
cltd
inc
pop
rol
stc
stc
enter
or
popa
sub
fmull
gs
or
jbe
into
and
ja
push
and
jge
orb
adc
mov
aam
aad
and
orb
xlat
xchg
fdivrs
fldcw
ficoml
xchg
fildl
pop
add
in
dec
ficoms
leave
loope
sub
loop
jecxz
adc
out
sbb
and
add
jle
inc
ljmp
or
test
lds
icebp
xchg
add
add
test
hlt
jl
sub
js
mulb
clc
mov
cli
sub
push
jl
jl
pop
std
in
adc
xchg
decb
pop
jae
add
std
or
sbb
jge
jg
jl
or
or
or
cmovns
pop
jle
adc
icebp
adc
or
sbb
and
sbb
sbb
sbb
or
sbb
ret
sub
pop
repnz
add
xor
adc
repz
or
and
aas
and
icebp
inc
adc
jecxz
loop
cmpsb
inc
dec
sbb
sub
sub
nop
sbb
or
xor
xor
or
xor
pop
pop
cltd
cmp
mov
ds
or
inc
or
inc
aas
adc
inc
or
push
pop
dec
xchg
dec
add
pop
js
mov
out
out
push
and
or
push
adc
or
pop
or
pop
iret
or
pop
mov
popa
clc
int3
or
gs
iretw
adc
push
push
push
insb
adc
outsb
or
out
or
out
or
add
ja
js
jns
outsb
pop
jnp
jl
jge
jle
jg
or
xchg
or
xchg
mov
mov
mov
lea
aam
mov
push
inc
mov
inc
xchg
mov
xchg
or
xchg
jecxz
repz
jecxz
repz
sub
adc
sahf
sbb
add
das
mov
out
xlat
push
or
imul
sbb
ds
mov
cmp
mov
pop
push
mov
ss
loope
pushf
add
inc
sahf
push
dec
xor
add
ds
mov
leave
adc
adc
xor
add
cmp
pop
pop
cli
add
sub
inc
xor
push
inc
or
lods
or
cmp
inc
cmp
inc
or
sbb
stos
xchg
and
ja
dec
arpl
fs
and
pop
dec
loopne
jns
inc
dec
mov
xor
pop
add
or
jl
ret
xchg
insb
loopne
insl
mov
mov
test
and
add
add
sbb
cltd
sahf
and
mov
lahf
mov
push
jo
fs
and
or
pop
cld
push
adc
push
outsl
enter
loopne
jo
inc
bound
popf
pusha
mov
dec
shl
xorb
js
test
or
add
inc
std
sbb
xor
mov
roll
xchg
jo
js
dec
jb
cli
xor
nop
xchg
add
mov
and
stos
or
dec
int3
or
sub
fs
mov
jo
add
fdivrs
ret
add
cmc
add
xchg
test
ret
sbb
push
cmp
gs
out
add
sub
adc
rorb
add
pusha
dec
adc
pop
iret
pop
or
push
lret
xchg
aam
adc
add
xchg
in
and
ljmp
je
lahf
jl
sahf
pop
lcall
inc
add
jno
data16
lahf
inc
push
xor
nop
xchg
test
inc
add
in
pop
ss
inc
push
in
xor
adc
sub
out
loopne
xchg
adc
icebp
dec
pop
repnz
add
roll
sbb
popl
pusha
lea
out
ror
arpl
lods
cld
lods
scas
add
jle
jle
dec
repnz
fiaddl
sub
add
xor
jbe
add
popa
and
mov
push
lods
adc
dec
or
ret
add
and
inc
sub
dec
add
adcb
xor
xor
xor
inc
add
or
fldcw
cli
xchg
add
adc
add
sbb
std
dec
add
lock
push
add
inc
xor
aad
mov
mov
shlb
cmp
add
sub
mov
aas
gs
mov
pop
dec
ljmp
inc
cmp
enter
imul
sbb
sbb
imul
cmp
stc
dec
add
outsl
and
jno
cmpsb
lods
scas
add
movsb
xor
mov
xchg
push
sub
push
inc
inc
cld
pop
aas
jbe
xor
loopne
std
rorb
in
mov
test
lahf
rcrl
test
test
sub
movsl
add
adc
lcall
add
xchg
lcall
addr16
dec
xor
xor
sbb
push
fiaddl
xchg
add
xor
aam
movsb
cvtpi2ps
push
sbb
loop
lea
mov
cmpsl
nop
xchg
out
movsl
scas
sub
mov
push
mov
mov
add
and
xor
add
add
mov
xchg
push
inc
mov
jle
je
stc
repnz
add
or
rclb
xchg
dec
push
mov
add
add
iret
or
inc
nop
adc
add
dec
rcrl
push
mov
xor
movsb
lret
mov
imul
roll
ret
adc
imul
sub
enter
dec
xchg
es
or
lret
xchg
add
inc
int3
aam
cwtl
add
add
into
je
add
mov
lock
into
icebp
cwtl
iret
xchg
sbb
adc
inc
lods
ret
pop
push
dec
repnz
sbb
popl
data16
dec
xchg
add
in
fldcw
leave
negb
push
add
xor
xchg
in
test
test
pop
clc
adc
mov
inc
mov
cli
cmp
push
xor
push
push
icebp
decl
imul
adc
mov
add
pushf
fimull
inc
mov
jb
pop
movsb
push
push
jbe
mov
testb
pop
dec
pop
subl
push
add
adc
data16
fwait
inc
inc
adc
adc
nop
pop
push
in
dec
hlt
dec
lock
fwait
xor
sbb
sub
cmp
xchg
sbb
mov
rcl
call
movsl
sbbb
add
add
stc
inc
rcrl
jne
cmpsb
push
add
or
test
std
xchg
push
add
stos
mov
ljmp
mov
add
test
add
cmp
and
aad
xor
adc
jl
inc
push
fnstcw
push
cli
xchg
add
jns
inc
push
cmp
sub
cmp
push
aas
icebp
xor
pop
les
and
rcrb
add
jle
inc
arpl
shrb
xor
push
add
xchg
jo
enter
inc
test
and
cltd
fs
xchg
add
inc
dec
lock
aam
movsb
or
jle
push
cwtl
dec
fwait
and
or
dec
sub
dec
in
sbb
add
stc
js
jl
sbb
push
iret
jbe
mov
fwait
lret
push
push
std
dec
add
out
add
test
pop
and
mov
add
dec
jo
jle
iret
push
mov
add
add
xchg
adc
shrb
push
push
outsl
xchg
adc
or
mov
mov
inc
cmp
adc
push
imul
xor
pop
sbb
sbb
push
jge
dec
sbb
popa
xchg
popa
mov
and
push
leave
or
dec
shl
cmp
aam
mov
push
popl
mov
jbe
jle
je
popa
in
stos
add
mov
shlb
mov
add
push
xor
mov
add
and
add
cli
ret
inc
cmpsl
imul
addr16
mov
mov
mov
dec
mov
add
sbb
dec
add
inc
test
lret
sahf
add
imul
nop
mov
add
mov
push
add
add
dec
xchg
ret
pop
add
mov
sbb
push
cwtl
icebp
cltd
or
sub
sbb
xchg
cmpsb
lcall
pushf
icebp
popf
or
test
add
xchg
dec
clc
lcall
jecxz
loop
mov
or
in
add
subb
call
sub
rcrl
push
sbb
jl
inc
lods
rorl
addr16
xor
sub
add
cmp
pop
movsl
add
addb
std
push
ds
arpl
add
and
add
mov
fsubl
shll
xchg
add
in
out
push
mov
leave
mov
mov
xchg
xchg
sbb
push
add
xchg
xchg
xchg
lea
iret
mov
cmp
lret
cld
clc
sub
push
xor
jno
sbb
inc
sbb
shl
mov
in
xchg
leave
inc
lods
insb
push
mov
shl
iret
fmul
aad
iret
iret
mov
or
loop
xchg
add
add
clc
cltd
xchg
cmpl
cltd
add
xchg
sbb
jbe
rorb
dec
add
jmp
mov
cmp
add
mov
mov
stc
jns
js
ja
in
lock
movsb
xchg
add
inc
fimull
fldl
pop
fsubrs
cld
je
sbb
jae
jb
jno
xor
pop
loope
dec
add
add
repz
outsl
repz
outsb
rep
shrl
add
repnz
or
push
add
outsb
push
call
push
fisubs
mov
dec
movsb
adc
ljmp
push
xchg
inc
pop
movsb
add
loope
add
stc
hlt
rolb
dec
add
xor
push
add
sub
add
push
xor
mov
addr16
xor
idiv
testl
xor
adc
cli
pop
stc
das
icebp
cs
in
add
loop
test
add
push
add
or
in
cld
sub
sahf
inc
sub
in
ss
clc
or
imul
sub
or
and
sub
jae
scas
lock
and
and
and
jl
sbb
movsl
add
mov
sbb
push
xor
int
scas
or
js
add
add
gs
leave
lock
cmp
sbb
xchg
inc
bound
ljmp
shr
call
sub
push
add
pop
add
daa
in
and
jecxz
loop
loope
loopne
testl
bound
aam
push
filds
fimuls
xchg
pmaxsw
dec
aad
aam
popl
and
and
loope
add
leave
shrl
or
and
xor
mov
add
mov
inc
cmpb
cmp
cmp
push
xor
sbb
push
sub
aam
add
shrb
test
sub
dec
movsb
popl
add
and
insb
int3
mov
mov
cltd
loop
jecxz
repz
inc
sbb
nop
mov
mov
add
ss
sub
dec
add
xchg
add
xchg
cmp
xchg
jp
int
sbb
add
cmp
cmp
sbb
xchg
test
adc
fildl
sbb
nop
addb
mov
add
inc
les
add
inc
push
cwtl
sarb
movsl
add
in
dec
and
add
repz
mov
pop
rcll
sbb
pop
pop
adcb
inc
push
addr16
out
cmpsl
push
push
out
out
sbb
cmp
dec
scas
add
inc
push
iret
push
enter
ficoms
xchg
add
jb
dec
test
aas
inc
xor
sbb
add
pop
test
inc
lock
pop
cld
inc
hlt
aas
clc
ds
xchg
in
or
mov
cmp
std
xchg
jns
cli
sbb
add
cld
fisubs
add
les
dec
add
or
add
lock
dec
arpl
xchg
pop
sar
cld
and
mov
push
push
ds
les
dec
int3
and
aas
pop
cmpb
xor
sbb
add
xchg
nop
cmc
sub
sbb
ret
add
sbb
pop
call
fidivrl
add
sbb
add
outsb
pop
xor
add
movsb
imul
dec
mov
or
jecxz
or
or
or
add
imul
sub
mov
pop
shrb
push
jge
add
add
nop
inc
xchg
es
into
mov
add
iret
mov
push
and
cmp
add
cmpl
cld
aas
andb
or
add
aas
inc
push
add
test
add
push
out
cmc
pop
hlt
pop
repz
xchg
es
cmp
dec
xor
sbb
add
mov
sbb
sbb
pop
mov
xor
inc
sbb
xchg
push
aas
cmpsl
push
add
jo
imul
arpl
cmc
sub
inc
mov
aam
and
shl
rclb
and
rcll
aas
xchg
cmp
cmp
cs
push
or
add
scas
and
push
add
jo
jo
aam
ljmp
sub
rclb
jo
jo
jo
xchg
into
inc
pushf
lds
mov
loopne
pop
mov
sbb
mov
push
shll
jo
imul
sbb
xor
loopne
loopne
fdiv
sbb
and
shrl
es
js
cmp
cmp
xchg
cmp
hlt
xor
sub
mov
mov
xchg
add
cmpl
imul
push
inc
das
add
test
pushf
mov
mov
mov
add
es
mov
push
add
nop
dec
mov
iret
xor
aam
mov
push
add
dec
pop
lret
jle
sbb
jl
push
movb
faddl
adc
mov
or
xor
add
cwtl
cs
int3
rcrl
mov
in
iret
cld
aad
jle
add
xlat
ret
les
add
es
js
iret
sub
inc
in
lahf
fcoms
mov
fdivrl
sbb
xchg
cmp
cmp
fnclex
fdivrl
dec
sub
sbb
push
xor
xchg
ljmp
cmp
push
mov
ficomps
loopne
sub
sbb
add
cmp
movb
rorb
loop
mov
mov
test
and
inc
in
out
add
cmpsb
xor
call
sub
jmp
in
test
add
sub
push
mov
cltd
sbb
dec
mov
icebp
mov
add
cmc
adc
add
or
dec
ds
movsl
inc
mov
sub
sbb
ds
sub
add
add
pushf
out
mov
mov
fwait
pop
scas
cli
pusha
push
inc
sbb
xchg
push
mov
add
or
sbb
std
dec
add
stos
pusha
nop
adc
sbb
pop
lds
jae
sbb
sbb
jle
inc
pop
orps
aam
movsl
mov
and
sbb
add
mov
xchg
add
add
std
push
add
shl
fs
add
inc
data16
push
rcrb
add
movsl
add
das
scas
or
add
dec
adc
jle
movsl
add
sub
iret
push
in
xor
repnz
xchg
mov
sbb
movsb
adcl
cmpsb
and
adc
add
icebp
in
ss
push
add
add
cmp
lcall
push
enter
add
add
lock
call
and
mov
fs
dec
mov
ds
adc
add
cmp
pop
add
inc
bound
inc
aam
mov
in
dec
lods
in
sbb
add
cld
add
or
push
cs
arpl
movsb
push
add
jb
dec
and
jbe
test
pop
filds
add
jb
xchg
inc
sti
xchg
push
dec
push
add
dec
addr16
stos
repnz
mov
dec
mov
mov
pushf
pop
cli
xchg
add
mov
xor
fs
sub
dec
jp
gs
sbb
add
mov
add
fmuls
add
inc
mov
adc
sub
sbb
add
inc
sbb
push
aas
and
xor
fisubrs
add
movsb
stc
jae
dec
sub
push
psadbw
sbb
and
xor
pop
jbe
iret
je
add
push
mov
sub
sbb
js,pt
jns
lahf
jnp
jl
jg
adcb
add
add
sub
xorb
add
adc
xchg
xchg
add
dec
pop
mov
sub
sub
dec
sub
iret
mov
inc
add
push
jb
inc
idivb
and
xchg
push
sbb
dec
enter
adc
add
add
dec
mov
sub
sbb
ds
sub
sahf
mov
repnz
cmpsl
iret
test
stc
mov
aas
mov
mov
mov
cld
mov
shll
ret
movsl
scas
xchg
ret
add
add
xchg
cmp
movsl
add
xor
nop
repz
push
imul
cmp
out
xchg
inc
mov
cmpsl
pop
pop
aam
aad
iret
fcmovnu
cmp
aas
fwait
push
add
dec
mov
sbb
movlps
push
inc
loop
xchg
push
sbb
movsl
add
mov
out
mov
push
shll
xchg
ss
push
mov
adc
mov
repnz
dec
cli
pusha
imulb
cld
push
std
add
sti
cmp
xchg
add
add
add
cmpsb
push
jl
push
or
aas
or
or
jle
xor
push
adc
mov
add
mov
inc
push
pop
or
push
fs
movsl
mov
or
or
mov
nop
call
add
sub
xor
mov
or
insb
xchg
ss
or
aaa
mov
jp
stc
dec
mov
mov
mov
mov
cs
sbb
shlb
or
dec
add
fs
xor
jle
xor
or
int3
enter
xchg
in
mov
xor
mov
or
add
js
aaa
lcall
add
sbb
inc
xchg
adc
cmp
pop
movsb
and
les
sub
inc
pop
fstps
pop
cwtl
dec
imul
add
fnstenv
or
dec
lahf
fstps
or
je
mov
sbb
pop
scas
push
or
mov
inc
adc
je
mov
aam
enter
and
nop
ror
shll
fstps
lea
push
das
dec
aam
xchg
mov
les
pop
sbb
pop
mov
js
xor
stos
push
sub
shrb
or
scas
fidivrs
mov
ljmp
or
adc
test
mov
ljmp
xor
or
cmp
or
movsb
stc
movsb
lea
or
or
or
or
pop
sbb
mov
or
je
cld
mov
es
sbbb
add
aam
lds
das
lods
push
sbb
add
fisubl
inc
adcl
sbb
adc
push
daa
int3
push
les
sbb
pop
call
pop
in
adc
cmp
push
or
pop
ds
adc
popf
or
adc
rorb
lret
mov
push
dec
and
or
dec
sub
fwait
je
add
mov
pop
daa
cmp
mov
or
and
sbb
add
xor
sbb
or
xchg
or
fisttpll
stc
add
fldenv
or
inc
pusha
test
inc
sub
add
or
or
je
mov
add
or
or
or
test
or
mov
mov
sub
or
scas
loop
fwait
xchg
or
lcall
sub
xor
xor
dec
cmpsb
add
lret
add
or
cli
test
lock
sbb
adc
sbb
popf
and
call
pop
add
and
sub
cld
pop
push
or
daa
xor
adc
xor
add
data16
inc
mov
lods
sbb
or
adc
mov
test
lret
mov
sbb
mov
or
jne
loope
push
adc
jbe
and
or
or
or
fstps
or
mov
and
mov
or
or
fwait
or
xchg
pop
out
xchg
xchg
add
rclb
jp
xchg
add
inc
pushf
push
add
or
movsb
add
test
or
or
test
or
or
mov
fwait
mov
or
or
stos
add
xchg
or
jne
mov
dec
jge
lea
adc
test
add
into
xor
insb
iret
or
or
mov
or
or
or
rcl
sbb
and
out
aas
and
push
out
or
mov
lahf
dec
and
mov
or
sbb
or
dec
xor
ds
in
movsb
pushf
cmp
mov
jmp
dec
leave
or
cmp
mov
mov
dec
push
mov
in
or
xchg
pop
fwait
in
or
or
or
fisttpll
mov
stc
and
or
fwait
or
or
or
push
or
or
xchg
inc
fwait
int
ss
or
or
rolb
add
push
or
or
or
xchg
or
dec
jbe
inc
push
and
iret
or
fbld
std
stos
sbb
ss
sti
push
or
enter
rorb
or
or
and
or
or
or
or
stos
and
int
sub
repz
ja
add
scas
lret
add
push
adc
or
sbb
stos
adc
or
or
and
or
adc
sbb
add
push
leave
push
sub
loop
filds
add
rcll
and
cmpsb
adc
push
push
adc
mov
daa
movsl
adc
cld
aaa
and
insl
sbb
pop
sub
andl
or
mov
pop
add
movsl
pop
or
push
xchg
sarl
pop
ljmp
mov
inc
push
jns
adc
or
xchg
or
rolb
and
jle
fsts
push
sub
incb
adc
or
in
push
add
gs
or
mov
pop
push
xor
fldenv
xor
gs
sbb
adc
jle
sbb
hlt
xchg
xchg
and
ss
add
clc
pop
outsb
pop
aad
pushw
push
pop
and
aaa
and
icebp
jno
add
jge
adc
in
jle
stos
adc
cwtl
inc
ljmp
add
jnp
lea
and
jle
dec
adc
mov
insb
mov
jecxz
mov
out
xchg
add
ret
xor
jle
adc
push
call
push
xor
sub
adc
inc
push
push
sub
push
inc
push
xor
stc
mov
add
jno
pop
add
and
adc
aaa
xchg
add
call
jo
cltd
add
cmp
add
jae
pop
push
lahf
add
and
sub
ss
inc
push
xor
enter
add
xchg
lret
add
push
add
jl
sub
sbb
add
ljmp
or
sub
push
or
add
jno
sbb
inc
out
add
stc
add
adc
sub
gs
mov
sbb
cmc
ss
add
pop
add
add
sbb
push
cmp
jl
mov
jbe
add
enter
outsb
ret
aam
xchg
fisttpll
mov
xor
aas
bound
add
and
add
inc
adc
shl
aaa
dec
call
insb
add
loopne
push
add
adc
jno
jbe
mov
sub
and
mov
mov
cmp
gs
xchg
nop
or
add
push
add
mov
add
sub
push
adc
add
jle
or
xor
push
adc
add
xchg
dec
hlt
lahf
inc
xchg
popf
clc
fdivrl
lods
insb
adc
inc
add
cld
pop
int
bound
or
xchg
inc
aam
fcoms
add
and
pop
or
or
add
push
cmp
mov
lock
and
add
add
inc
outsl
pop
add
sbb
add
or
sbb
loop
sahf
add
leave
insb
hlt
loop
inc
jne
add
adc
cld
add
dec
adc
lock
and
add
dec
adc
or
add
shrb
loop
sahf
add
leave
outsb
fisttps
test
add
out
sbb
adc
add
mov
mov
adc
jo
cmp
add
add
add
add
add
jns
imul
mov
mov
fs
lods
stos
inc
sbb
paddw
and
cmpl
aad
aas
ret
inc
push
and
mov
in
cli
sbb
inc
daa
adc
js
adc
outsl
ljmp
inc
das
sub
adc
mov
push
mov
push
repnz
adc
imul
push
shrl
or
je
sbb
fbstp
out
in
sub
jecxz
jle
jle
cmpsl
push
adc
lods
and
test
test
add
cltd
adc
or
icebp
test
add
pop
adc
inc
repnz
add
ret
pop
mov
mov
push
and
and
adc
or
jo
add
mov
clc
add
cld
insb
xor
fyl2x
lahf
or
push
sub
add
inc
sbb
movsb
and
mov
pop
pop
shll
or
push
push
push
adc
add
loop
ss
mov
imul
clc
push
aas
sahf
in
fistpll
fwait
inc
mov
insl
push
dec
adc
adc
loop
sahf
add
leave
cmpsl
or
je
xor
add
xchg
xor
cmpsb
adc
mov
rclb
push
jne
sti
popfw
or
shrb
loop
sahf
add
lret
lcall
sbb
pop
sbb
add
or
pop
shll
adc
andl
sbb
cmp
lahf
test
cld
cmpsl
and
add
insb
inc
adc
in
lahf
push
jle
and
and
adc
addr16
ficoml
shlb
insb
pusha
adc
mov
sbb
push
add
lret
popa
mov
adc
add
in
stc
inc
xor
insl
mov
add
insb
pusha
adc
in
add
xchg
scas
aam
loop
sahf
add
push
je
inc
int
mov
sbb
push
push
inc
add
and
out
insb
adc
fdivrl
jmp
mov
add
movsl
xchg
adc
mov
xchg
adc
add
add
hlt
sub
js
mov
enter
imul
dec
add
push
cmp
xchg
pop
or
dec
adc
adc
pop
clc
add
push
and
rolb
in
and
add
xor
pop
test
push
lds
add
pop
mov
ss
arpl
fs
push
imul
or
outsb
adcl
ret
push
pop
gs
xchg
add
aam
addr16
shl
xor
enter
adc
mov
fwait
scas
xor
in
xor
and
push
jge
lret
lods
js
insl
mov
inc
lahf
and
xchg
lea
sbbb
xchg
pop
jo
mov
xchg
pop
xchg
xchg
xchg
add
cltd
sbb
add
sbbl
jl
jnp
adc
sbb
movsb
sub
in
cmp
mov
repnz
and
mov
xor
xor
xor
das
cmp
movsb
cmpsl
add
test
inc
mov
std
outsb
insb
adc
push
sub
daa
lea
and
adc
rcrb
loop
sahf
add
lret
outsb
jbe
xor
add
loopne
adc
adc
int3
or
cld
pop
lea
jl
ss
adc
lret
or
hlt
pop
imull
add
pusha
add
inc
hlt
pop
push
test
xor
icebp
std
sahf
inc
in
mov
lea
inc
call
jp
mov
mov
push
mov
enter
add
je
lret
add
loopne
into
xor
cltd
adc
loope
ljmp
dec
add
mov
add
iret
imul
aam
loop
xchg
add
xor
in
adc
daa
lret
iret
out
ljmp
mov
adc
jle
push
mov
pop
dec
push
scas
aas
pop
mov
aas
cmpsb
push
dec
add
int
je
insb
adc
sub
pop
pushf
scas
jae
push
fwait
add
mov
xchg
rclb
loop
sahf
add
leave
xchg
pop
add
push
mov
pop
mov
push
ret
call
adc
jnp
sahf
jns
jb
jno
dec
and
rolb
in
insb
outsb
xchg
popa
shrb
adc
add
fs
cmpsl
push
adc
add
add
pusha
xor
pop
ret
pop
rcrl
pop
repz
cmc
out
insl
int3
push
add
push
iret
adc
in
loop
dec
aas
dec
push
push
mov
add
mov
in
jl
mov
int3
dec
shrl
sub
into
mov
push
lret
adc
or
pop
out
pop
sub
add
xchg
inc
jmp
sub
pop
and
adc
mov
sbbb
sbb
sbb
add
popf
adc
pop
adc
push
add
xchg
inc
test
pop
xor
push
push
or
pop
hlt
pushf
das
jae
push
sti
sar
cmp
negb
mov
dec
push
sub
add
std
cmp
lea
dec
jmp
xchg
adc
in
sbb
loope
jo
cmpsl
push
adc
add
pop
jo,pt
jo
jo
int3
adc
or
mov
loopne
ret
push
sub
enter
ror
pop
sbb
mov
add
addr16
or
or
push
lds
cmp
xor
mov
das
mov
mov
mov
mov
push
loop
sahf
add
iret
push
int3
mov
push
lods
add
adc
cmp
outsb
iret
in
and
push
mov
and
into
movsl
push
mov
sahf
lods
or
mov
add
pushf
lcall
cmp
insb
adc
loopne
loopne
mov
inc
sbb
push
daa
add
xchg
test
test
adc
add
push
push
dec
add
dec
jns
stc
jg
jle
sub
addr16
xor
loope
adc
ja
and
lods
add
in
popf
pushf
or
outsb
sbb
sub
lds
add
je
mov
cmp
jo
xlat
adc
cmp
cmp
cmp
pushf
pop
xor
push
cmp
push
cmp
push
push
mov
jns
sbb
scas
gs
inc
insb
add
dec
loopne
loope
adc
dec
adc
jo
cmpsl
push
adc
addl
dec
push
les
sub
sub
sub
push
jno
dec
add
pusha
out
pop
jmp
sbb
adc
push
lods
add
pop
adc
lods
add
xchg
or
add
fs
movsb
sub
gs
sub
sbb
jge
or
adc
adc
pop
imul
jo
popf
iret
xor
fnstenv
jo
or
push
rclb
cltd
adc
fwait
inc
insl
jno
cmp
push
sub
test
jno
pop
add
gs
jne
out
insl
jo
add
jle
fsubl
add
mov
xlat
mov
sbb
cli
xchg
sub
and
add
jge
test
std
dec
cmp
out
rolb
movsb
addr16
sub
sbb
push
jg
enter
xor
sub
inc
add
push
add
test
xor
and
add
mov
push
add
sbb
sahf
mov
mov
push
inc
xchg
sarb
lahf
test
xchg
dec
add
xchg
in
cmp
xchg
ljmp
add
mov
test
test
xchg
pusha
xchg
adc
add
scas
push
inc
mov
mov
mov
inc
push
jle
pusha
mov
add
shlb
ret
cli
adc
sub
les
in
jge
xor
sub
add
in
call
and
inc
xchg
adc
mov
mov
add
xor
loop
sahf
add
sarb
mov
add
adc
push
or
sub
repnz
or
test
adc
mov
sub
add
push
fiadds
rolb
xor
aas
push
push
inc
push
xchg
in
in
repnz
mov
add
adc
or
adc
and
add
icebp
mov
movsl
inc
out
add
inc
xor
xor
push
loop
mov
test
orl
pushf
or
add
cmc
sub
add
outsb
adc
adc
add
cmp
cmpsl
add
inc
bswap
adc
adc
adc
lret
add
mov
insb
pop
sbb
adc
inc
sbb
pop
mov
add
and
mov
inc
and
sub
jno
dec
add
and
xchg
invd
ss
aaa
aam
nop
add
ds
add
xor
xor
sbb
add
inc
mov
ss
dec
xor
lods
add
or
push
push
aas
add
and
mov
or
cli
xchg
pop
xchg
adc
and
cs
sbb
push
inc
add
dec
cli
adc
cmc
sub
dec
add
dec
insb
dec
mov
rcrb
loop
sahf
add
enter
mov
in
cmp
xchg
inc
jb
jns
jo
mov
push
bnd
add
inc
or
fidivl
xor
dec
add
subl
hlt
cmp
mov
cmp
cwtl
dec
push
sub
cltd
insb
fwait
lea
dec
push
mov
cli
fistps
in
lahf
test
inc
push
clc
in
cld
mov
mov
cmpsl
adc
iret
xor
cld
mov
ss
enter
mov
pusha
jnp
push
in
insb
xlat
lea
xchg
push
push
inc
ljmp
add
hlt
add
cli
jp
lahf
in
mov
mov
add
lahf
in
lahf
sub
add
push
sub
and
xor
sbb
or
xchg
and
nop
xor
xor
add
aaa
nop
cmp
cmp
xchg
or
add
cmp
add
and
nop
aas
enter
xor
sbb
repnz
cmpsb
add
or
fwait
inc
sbb
or
inc
dec
and
dec
xor
or
or
dec
fstps
or
add
int
dec
add
or
push
add
inc
push
and
push
enter
xor
pop
adc
cmp
push
add
adc
or
inc
add
xchg
or
add
pop
sbb
or
add
sbb
popa
movsb
add
arpl
fs
or
or
sbb
or
or
imul
or
or
insl
add
mov
outsb
insb
add
add
gs
dec
add
sbb
fldl
test
xchg
and
js
jns
jp
jnp
sbb
bnd
add
sbb
or
pop
sbb
mov
adc
push
or
movsb
add
adcl
or
add
inc
add
fwait
or
add
add
adc
or
add
gs
mov
or
or
ficoms
push
nop
add
xchg
xor
or
sbb
xchg
or
or
fwait
lcall
insb
pushf
or
or
sbb
mov
cmpsb
insb
or
fildl
add
adc
mov
adc
push
or
movsb
add
ficoms
push
test
stos
and
scas
xor
push
or
push
add
mov
sub
or
fildl
add
adc
push
add
mov
add
mov
mov
mov
or
add
mov
mov
or
lods
sbb
ret
adc
ret
add
adc
mov
adc
push
or
movsb
add
pop
sbb
or
or
or
int3
pop
sbb
dec
into
add
shll
rcrb
shll
or
data16
and
fwait
or
or
inc
fsubl
or
or
movsb
add
xor
and
or
fwait
or
or
inc
out
call
or
int
jmp
mov
or
inc
add
fwait
or
add
add
adc
or
add
lods
sbb
dec
in
adc
and
fs
xor
sbb
or
xchg
ss
or
sti
mov
or
test
int
incb
sbb
or
add
add
add
or
or
or
fistps
pop
add
adc
test
int
or
data16
add
mov
push
add
inc
add
xchg
or
add
adc
sbb
adc
sbb
adc
add
add
adc
mov
adc
push
or
movsb
add
pop
sbb
or
or
or
or
push
sbb
pop
or
adc
push
and
xchg
or
add
and
or
or
mov
or
or
add
jb
or
add
and
fldcw
or
add
dec
add
data16
xchg
or
add
xor
xor
or
cmp
fldenv
or
gs
cmp
or
or
sub
inc
add
ss
and
data16
add
mov
inc
add
inc
add
fwait
or
adc
or
adc
or
dec
add
dec
or
or
or
or
or
or
push
int
and
sub
or
fildl
or
fwait
or
add
add
adc
or
add
or
sub
pusha
sbb
or
add
inc
add
fwait
or
add
or
xchg
or
data16
add
mov
imul
or
mov
insl
insb
add
add
data16
add
mov
or
or
or
xchg
or
jne
mov
inc
ja
adc
js
or
or
int
jnp
fwait
or
or
or
add
mov
jg
add
or
or
or
fwait
or
or
or
mov
or
roll
data16
adc
or
or
lret
or
or
stos
or
or
or
or
adc
or
adc
or
or
or
adc
push
sub
xlat
cmp
outsb
loop
cs
jne
xorb
ss
cld
pop
lock
xor
xor
cmpsl
push
pop
xchg
cmp
pusha
jbe
outsb
jle
aaa
je
dec
sbb
dec
xchg
jno
popf
jle
les
lds
iret
jle
out
cmp
push
cmp
popa
shrl
aaa
das
fs
pop
and
pop
addb
or
mov
jge
orl
adc
icebp
or
dec
push
sbb
cmp
adc
cltd
add
add
jo
mov
mov
sbbl
mov
iret
lea
in
pop
dec
pusha
push
mov
add
inc
aaa
cmp
sbb
out
orb
dec
pop
outsb
lock
roll
mov
and
dec
inc
inc
jmp
push
cli
push
jmp
mov
inc
sbb
push
fistl
imul
cmp
movsl
jb
repz
xor
test
adc
ret
call
mov
inc
test
add
xor
cmp
and
mov
sub
jp
mov
dec
sub
aaa
subl
popa
jl
jne
push
popa
arpl
cmp
insb
adc
imul
in
cmp
xor
cmp
jb
jbe
ljmp
cmpsb
arpl
neg
sbb
pusha
fwait
pop
push
lret
js
mov
fldl
inc
pusha
adc
daa
jo
mov
fs
and
sub
cmp
mov
xorb
and
aaa
leave
insl
or
lods
and
push
jb
add
xor
outsb
sbb
jb
mov
mov
dec
add
andb
fildl
cld
test
jns
lds
dec
push
fisubl
lods
inc
push
insl
mov
rcrl
and
pop
cmp
jo
adc
pusha
inc
popa
or
ret
outsb
addr16
orl
inc
daa
sub
ret
data16
sub
mov
sub
imul
pop
mov
jns
push
inc
and
and
and
aad
daa
xor
jo
push
cmp
xchg
and
fidivl
ds
cmp
hlt
in
addr16
push
jns
pop
mov
jno
mov
mov
jno
xchg
jns
rol
addr16
dec
inc
sub
aam
scas
dec
enter
xchg
jae
cmp
imul
adc
mov
adc
cmc
adc
or
xchg
or
bound
fiadds
push
xor
pop
cli
insl
leave
mov
adc
dec
imul
imul
insb
inc
hlt
addl
sub
shl
into
js
sbb
insl
imul
stos
imul
pop
movsb
bound
jae
jo
push
aaa
xchg
push
imul
leave
lret
and
repz
cmp
movsl
adc
test
nop
pop
xchg
push
dec
xchg
inc
dec
xchg
cmp
jne
daa
movsb
mov
jp
mov
in
push
insl
daa
lcall
mov
xchg
fs
sub
sub
inc
imul
pop
push
leave
cmc
mov
cmp
mov
xchg
ret
xor
mov
mov
call
or
push
fs
cmp
mov
mov
jo
int
inc
js
aad
pop
pop
and
xchg
fs
test
lret
mov
hlt
repz
mov
inc
mov
mov
adcl
sub
addr16
nop
dec
mov
fwait
je
ss
mov
jnp
and
ficoms
jmp
fisubrl
mov
add
or
and
xchg
or
sbb
and
adc
adc
orb
gs
jo
push
inc
test
into
cmpl
push
sbb
inc
mov
add
lods
popa
ret
lea
js
shll
xor
cs
dec
cmp
into
scas
enter
and
xchg
jns
iret
push
push
fsubl
or
mov
bound
movsb
jbe
or
stos
icebp
pop
or
jo
adc
into
xchg
xchg
pop
dec
mov
fcoms
outsb
test
push
insl
out
mov
adc
mov
leave
dec
mov
or
push
add
adc
gs
adc
cmp
xor
mov
out
inc
inc
mov
lret
adc
push
xchg
or
adc
xchg
adc
jne
fimull
xor
push
add
pop
sbb
xchg
inc
cwtl
adc
push
cmpsb
lods
inc
mov
mov
into
jo
or
pop
sbb
pop
mov
sub
daa
mov
les
cltd
nop
arpl
xor
adc
lds
and
adc
and
loop
leave
add
push
add
mov
xchg
sub
out
and
imul
clc
out
mov
jno
sahf
jnp
cwtl
adc
subl
dec
add
xchg
enter
push
mov
dec
sub
lds
jno
rcl
or
leave
js
sub
or
dec
sbb
push
dec
xlat
dec
sub
push
jns
push
pop
or
test
popa
arpl
dec
leave
inc
sti
inc
jbe
dec
sub
push
inc
push
cli
int
jae
sbb
adc
lret
or
adc
adc
dec
ret
or
push
push
outsl
stos
inc
sub
push
pop
push
rorl
shll
sbb
or
and
and
inc
outsb
movsl
rolb
mov
shl
xchg
rorl
xor
mov
out
push
outsl
inc
xchg
jo
int3
sbb
push
inc
cltd
and
sbb
push
jnp
or
mul
and
pusha
add
lods
mov
mov
push
sbb
outsl
inc
add
sbb
bound
pop
aas
enter
inc
jne
data16
adc
inc
insb
mov
sbb
sbb
ja
pushf
adc
adc
push
push
sub
add
loopne
cwtl
jmp
mov
xchg
sub
or
adc
popa
jo
pop
sub
xchg
mov
fs
mov
imul
push
lret
lret
push
leave
sti
repnz
cwtl
sbb
add
push
jp
jo
sbb
xor
out
test
lea
xchg
dec
jg
or
push
inc
lret
daa
or
dec
inc
inc
ljmp
xlat
pusha
ret
jnp
add
push
jle
adc
cmp
adc
push
ja
dec
push
jne
out
leave
scas
push
xchg
adc
leave
sbb
nop
sub
mov
mov
js
push
or
fiaddl
push
mov
xchg
ficoml
or
adc
push
xchg
lea
lods
mov
jp
hlt
fsubr
mov
push
ds
lods
xchg
lock
test
lea
rcrl
insb
dec
jae
inc
mov
jo
in
inc
push
xor
mov
addr16
sub
push
inc
xor
push
add
dec
sbb
and
out
mov
push
sbb
push
inc
loop
test
mov
sahf
in
bound
pop
and
gs
and
popa
dec
or
mov
in
out
cmpsl
outsl
mov
pop
clc
xchg
addr16
mov
ja
jb
rcr
push
dec
mov
inc
dec
jns
jp
mov
dec
sbb
sbb
outsb
push
cs
xor
jb
sub
fadd
fsubrs
sub
mov
popa
cltd
mov
push
push
and
imul
lcall
add
mov
adcl
cmp
dec
and
inc
cmp
rolb
xchg
aas
cmp
sbb
add
inc
dec
mov
es
cltd
in
add
dec
push
data16
cwtl
lock
rolb
cmc
movsl
nop
dec
xor
int
and
or
iret
mov
add
lea
xchg
adc
pop
sbbb
and
sbb
sub
or
scas
jnp
int3
push
mov
adc
rol
adc
andl
cmp
rorb
bound
nop
mov
lock
popf
adc
push
dec
test
orb
pusha
dec
xor
test
xorb
shll
or
test
sub
adc
icebp
sub
mov
and
shrb
and
xor
dec
adc
push
mov
adc
dec
stos
mov
mov
data16
mov
push
inc
mov
mov
jno
xchg
rcrb
rcrl
xchg
push
daa
and
xor
mov
and
dec
jge
mov
xchg
inc
movsb
mov
and
inc
adc
or
inc
push
mov
and
dec
popf
xchg
test
fisttps
add
and
dec
xor
gs
mov
cwtl
and
dec
mov
les
xlat
inc
loope
mov
roll
xor
xchg
dec
and
jb
mov
dec
lret
and
and
aam
sbb
mov
pop
and
dec
jne
xchg
xchg
inc
movsl
mov
leave
adc
and
dec
lock
decb
in
lea
xor
rorl
in
insb
mov
loop
popa
push
ja
inc
dec
and
lahf
adc
repnz
xchg
or
mov
or
dec
mov
gs
sub
mov
aad
stc
mov
popf
xor
sbb
push
mov
and
daa
or
dec
or
sub
jmp
outsl
fwait
mov
and
in
mov
push
insl
push
mov
lea
mov
adc
out
dec
adc
mov
jp
push
push
or
xchg
adc
minps
adc
adc
icebp
cmc
sbb
or
imul
cmp
js
movsl
or
sarl
sub
push
stos
xchg
jmp
or
sub
inc
sbb
push
mov
push
inc
xor
pop
aaa
imul
lods
sbb
sbb
and
inc
mov
adc
inc
dec
das
inc
out
inc
test
pop
imul
mov
decb
mov
push
jb
movsb
icebp
sub
adc
js
xchg
or
outsl
je
cmp
pop
xor
stos
stos
hlt
lret
adc
push
fs
aam
in
or
rorb
mov
aas
daa
adc
xchg
dec
test
pop
xor
xchg
mov
and
leave
or
push
outsb
nop
adc
adc
insl
cmp
mov
imul
shl
lods
mov
int3
repnz
adc
ss
mov
cmp
rclb
jle
jp
pop
repz
inc
or
test
mov
push
cmpsl
sti
xor
and
and
andb
jle
es
adc
nop
movsl
in
or
push
out
shl
push
cmpb
loope
add
add
push
cli
sub
nop
sbb
sbb
or
and
push
and
lret
adc
sub
scas
adc
and
data16
outsl
insl
jge
out
ds
mov
push
cmp
inc
or
popa
jno
mov
imul
and
mov
test
data16
cmp
and
insl
mov
mov
je
jmp
xor
scas
nop/reserved
sbb
xor
pop
out
jge
jl
popa
push
fsubl
sbb
insb
repnz
adc
mov
adc
xchg
ss
loope
mov
in
lret
adc
test
mov
inc
ja
shlb
movsb
adc
inc
movsl
cs
adc
stos
dec
pop
cltd
pop
dec
pop
pop
cs
sub
sub
xchg
in
outsb
mov
aaa
mov
or
sub
int
sub
pop
push
test
jae
lcall
add
adc
xchg
adc
mov
shlb
loop
pop
xchg
outsl
nop
xchg
loope
add
pop
nopl
sbb
fwait
je
mov
dec
insb
cmpsl
cs
push
test
aad
xchg
repz
mov
nop
iret
ss
or
jmp
or
jb
leave
je
inc
aas
pop
cmp
dec
outsl
xchg
and
daa
and
jge
nop
lods
stc
sti
fstpl
mov
aad
pop
test
je
daa
dec
mov
dec
push
outsl
insl
xchg
xchg
dec
je
mov
sub
jns
imul
sar
call
imul
push
dec
inc
iret
push
push
fldenv
decb
dec
mov
daa
sti
dec
int
cmpsb
ss
lcall
cmp
imul
aas
or
cmp
xor
sub
adc
popa
inc
bound
arpl
sbb
data16
inc
push
add
dec
insl
dec
outsb
inc
dec
dec
jo
push
jno
jb
jae
ret
add
push
ja
js
jns
pop
jp
push
bound
xchg
jns
and
cs
and
cltd
shl
inc
and
mov
rcll
lret
cs
cld
inc
cmp
das
jb
fwait
push
and
lcall
jo
xor
cs
pop
sub
shlb
cmpsl
or
sbb
or
mov
js
mov
imul
adc
mov
dec
test
pop
push
hlt
insb
stos
addr16
mov
xor
dec
inc
out
mov
leave
lods
jb
inc
outsl
mov
addr16
xchg
adc
inc
adc
enter
xor
out
sbb
adc
jns
mov
rclb
xchg
popa
xchg
in
popf
dec
mov
ret
es
fwait
rorb
daa
jo
xor
movsb
cltd
leave
add
rorb
ja
cmpsb
aas
enter
ficompl
push
mov
ds
inc
jg
push
pusha
test
lcall
mov
popf
adc
movsl
xchg
dec
ffree
jne
inc
dec
sbb
cli
arpl
adc
test
outsb
stc
in
insl
sbb
lcall
cmp
cmpsb
insb
lock
push
cltd
cmpsl
dec
pop
mov
or
push
insb
fs
and
sub
jne
add
jne
and
pushf
or
sarb
push
sub
push
sub
mov
clc
jge
jb
mov
jne
jo
test
add
pop
movsl
fisubs
ja
lods
fisttpll
xchg
cld
stc
divb
insl
cs
dec
enter
popa
daa
ja
mov
dec
outsb
lret
std
push
mov
fcoml
cmp
cmpsb
dec
mov
insb
and
dec
or
sub
xchg
xorb
inc
dec
in
and
cltd
or
push
adc
sub
out
stos
and
or
sub
pop
out
ja
cltd
in
dec
dec
dec
mov
movsl
jmp
lret
or
add
outsb
int3
clc
push
hlt
outsb
pop
sbb
pushf
leave
cmp
sti
push
xor
out
je
xlat
insl
out
push
and
bound
les
and
gs
loopne
jns
or
xchg
jns
xor
cmpsl
sbb
je
cli
jae
jns
adc
jae
cs
xor
sar
pusha
aam
mov
adc
jbe
push
dec
sbb
push
mov
push
sub
jae
addb
decb
cmp
cmp
subl
mov
and
int
ds
imul
lods
jo
movsl
je
sub
in
inc
inc
xchg
in
mov
gs
sub
int3
testb
adc
movsb
and
inc
cwtl
mov
js
pop
xchg
insb
and
pop
mov
or
dec
inc
xchg
or
xor
adc
mov
add
adc
hlt
cmc
xor
or
and
fadds
mulb
dec
mov
inc
xorb
jo
push
xchg
push
and
inc
cmp
and
xchg
adc
mov
hlt
add
xor
insl
sbb
and
dec
jno
mov
test
jb
mov
dec
pop
xchg
ja
dec
inc
sub
sbb
fcoms
xor
or
sbb
test
je
orl
inc
push
inc
mov
dec
mov
add
fdiv
and
or
cwtl
dec
test
pop
xchg
orb
cld
icebp
adc
sub
cmpsl
dec
stc
push
or
fsubs
nop
or
pushf
adc
stos
push
cltd
adc
stos
dec
pushf
cltd
adc
scas
xchg
sbb
and
inc
cmp
lock
or
adc
xchg
test
insb
inc
dec
test
movsb
dec
add
in
adc
xor
xchg
movsb
and
dec
mov
andb
inc
mov
mov
and
dec
sub
or
mov
out
sub
fcoml
shlb
dec
les
mov
sub
inc
mov
ss
mov
sbb
cmpsl
jne,pn
insb
cmp
push
inc
dec
push
pop
inc
fisttpll
dec
inc
dec
sbb
mov
push
mov
inc
mull
jbe
ret
jae
cmp
inc
push
cmp
ficompl
xor
cmp
movsb
or
dec
int3
shll
push
pop
outsl
mov
push
rol
and
dec
push
dec
out
inc
push
ret
push
scas
and
in
sbb
jb
insb
ljmp
inc
sbb
dec
lods
imul
sbb
xchg
aaa
mov
inc
pop
sub
push
rolb
and
and
pop
xchg
cli
jge
iret
fisttpl
or
nop
mov
sbb
sbb
xchg
arpl
mov
jae
or
fwait
or
iret
jns
xor
push
test
pop
mov
je
push
insb
lea
adc
dec
push
movsl
jns
imul
jecxz
dec
pop
mov
and
sbb
sub
sub
pop
push
fadds
mov
dec
fs
dec
push
inc
outsl
xchg
icebp
negl
inc
test
dec
push
ret
pop
das
and
push
test
mov
fdivrp
inc
jmp
and
mov
adc
icebp
out
sub
roll
xchg
and
jmp
jnp
xor
and
dec
inc
sbb
mov
cmp
outsl
add
dec
jns
popf
add
xor
xor
or
fwait
sub
and
adc
fs
and
adc
inc
mull
cmp
add
xchg
adc
sub
and
les
loopne
sbb
push
sub
add
aam
ret
movsb
cmpsb
ja
xchg
or
push
sub
dec
cmp
pop
bound
or
xor
pop
xor
pop
or
mov
nop
push
mov
fstpl
cmp
loope
xor
dec
inc
add
pop
mov
inc
inc
stc
dec
xchg
ljmp
js
insb
dec
ljmp
fidivl
push
jbe
movsb
adc
cmpsl
sbb
mov
push
jp
dec
or
xor
push
hlt
aam
fs
and
and
xchg
mov
testb
hlt
xor
sub
xor
sub
pushl
repnz
ja
push
push
mov
sub
hlt
pop
lcall
mov
pop
sub
in
xor
dec
xor
bound
mov
insb
cmpsb
push
mov
push
jb
ljmp
or
movsl
inc
test
lahf
push
adc
sti
and
jne
aaa
dec
inc
inc
mov
adc
or
call
arpl
sub
sub
mov
fiadds
inc
dec
test
inc
mov
inc
out
adc
int3
ja
inc
loopne
dec
cmpsb
and
adc
je
sub
or
mov
xchg
enter
adc
push
mov
mov
loop
loopne
inc
jae
sbb
xchg
jg
mov
icebp
sbb
into
nop
inc
dec
mov
sub
dec
pop
cld
mov
pop
lock
push
xor
xor
pop
xor
mov
enter
sbb
cmp
dec
or
dec
faddl
sbb
sarb
cld
mov
dec
xchg
cmp
ret
ljmp
in
dec
mov
or
dec
and
cmp
pop
xchg
call
pop
loope
mov
dec
jmp
sbb
negl
in
test
aam
out
mov
push
fnsetpm(287
pushf
arpl
mov
jmp
minps
sahf
mov
add
add
imul
out
cmp
or
xchg
or
gs
pcmpgtd
push
dec
xor
xor
cmp
insb
mov
and
jae
jne
jbe
ja
js
jns
inc
jp
jnp
jl
jge
jle
jg
sbbb
inc
andb
xchg
test
test
xchg
cmp
mov
mov
mov
cmp
xchg
and
in
jb
cmp
stos
and
in
jb
cmp
mov
mov
mov
mov
mov
mov
mov
mov
aam
int3
nop
bound
mov
rcl
insb
imul
mov
jecxz
adc
add
push
xchg
cmp
imul
es
adc
adc
jae
lahf
sbb
frstpm(287
sbb
nop
pop
bound
outsb
mov
sarb
lcall
mov
lcall
es
jbe
dec
imul
mov
mov
inc
jne
call
inc
push
cmovbe
inc
xchg
adc
dec
cltd
jne
sub
rcrb
push
jo
jb
dec
mov
bound
jb
push
fsts
lods
shrb
les
xchg
fwait
in
push
xchg
das
mov
xor
inc
mov
push
mov
adc
lea
andb
jle
jbe
push
mov
mov
pop
out
mov
orb
pop
push
std
fnsave
out
ds
add
inc
dec
inc
push
ds
push
jne
cld
push
loopne
fs
mov
inc
es
mov
xchg
cmp
mov
idivb
add
push
or
outsl
mov
mov
sbb
pop
loop
shll
fisttpl
adc
jb
lahf
loop
inc
dec
mov
clc
mov
adc
xchg
xchg
cld
xlat
daa
out
pushl
push
mov
push
cmp
lahf
xor
adc
lcall
xor
adcb
cmpsb
ficompl
test
fmuls
xchg
call
je
pop
dec
mov
sub
pop
jge
mov
mov
pop
clc
movsb
stos
sub
sub
jecxz
cs
mov
fisttps
aaa
jns
lds
lods
lcall
cmpsl
mov
xor
xor
fptan
sub
sub
xchg
cmp
leave
gs
mov
pop
add
cmp
push
aaa
push
loop
in
lcall
daa
cli
stos
mov
mov
cmp
push
xchg
jb
cwtl
loop
sbb
icebp
jb
aad
mov
dec
jae
add
dec
push
imul
out
imul
js
sbb
or
pop
sub
pop
in
mov
xorl
or
inc
pop
cli
jo
xlat
pop
mov
xor
arpl
cmp
icebp
je
dec
aam
aam
sbb
fs
jno
cmpsb
icebp
scas
sahf
mov
es
adc
pop
mov
cs
pop
adc
pop
sub
pinsrw
je
in
daa
shrb
pop
mov
imul
jg
jge
sbb
les
xchg
xchg
daa
dec
sbbl
lret
mov
fdivrp
and
add
test
mov
cltd
ret
ret
sbb
gs
sbb
push
dec
in
nop
and
ds
cmp
idivb
ljmp
mov
pop
jno
push
js
pop
push
jbe
daa
mov
sbb
mov
nop
adcl
in
jae
je
scas
xor
inc
jae
inc
cs
dec
loop
xchg
cmpsl
push
jge
insl
xlat
xchg
adc
xor
cmpsl
sub
stc
das
pop
push
mov
imull
xor
stc
add
xchg
dec
inc
out
rclb
icebp
xchg
out
push
cld
test
ss
jle
xor
pop
enter
sbb
lea
sbb
sbb
sub
je
fs
cmpsl
pop
dec
adc
arpl
push
jb
and
add
pop
movsb
push
loopne
ljmp
insb
outsb
mov
pop
daa
jnp
add
fdivr
pop
orb
xchg
movsb
int
pop
movsb
test
aas
pop
dec
xor
cmpsl
push
int
das
pushf
mov
push
inc
cmpsb
push
mov
pop
nop
mov
push
es
inc
inc
scas
and
inc
adc
mov
sub
mov
jmp
mov
addr16
dec
adc
call
leave
mov
inc
jnp
arpl
xchg
addr16
pop
aad
pop
aam
ss
rolb
xchg
and
and
movsb
adc
dec
xchg
pop
mov
dec
addr16
adc
shll
movsb
scas
xor
outsb
pop
cmp
mov
jmp
cmp
outsl
aam
dec
fldcw
mov
insb
xor
sub
data16
dec
int3
push
dec
lock
stc
mov
int
ja
and
inc
faddp
sub
fidivl
dec
fwait
jbe
and
outsb
or
sub
mov
jne
nop
fstpt
cmp
mov
int
scas
sub
ret
push
xchg
xor
dec
lock
jp
out
mov
outsb
inc
xchg
or
cli
addr16
test
xchg
sub
mov
and
cli
leave
je
inc
jo
mov
push
shlb
mov
shrl
test
add
xor
push
xchg
mov
xchg
mov
mov
stc
ret
push
xchg
cmp
mov
clc
mov
fwait
mov
popf
xchg
js
cmp
out
dec
pop
mov
xchg
test
push
jns
or
jl
xchg
mov
xor
xor
xchg
addr16
xor
je
pop
jo
orl
fidivrs
cmp
js
sahf
sub
stc
inc
gs
sbb
lret
lret
xchg
shlb
stos
addr16
push
xchg
jl
pop
ds
movsl
xorb
push
flds
pop
bound
xchg
clc
das
sub
je
popf
xchg
int3
mov
movsb
shlb
add
repz
mov
fstps
ret
cmp
xor
push
push
xor
pop
push
jb
icebp
xchg
add
cmp
push
xchg
sub
push
in
inc
sbb
jae
lods
das
adc
push
and
push
mov
pop
daa
pop
xchg
dec
aam
sub
pop
js
mov
lcall
call
dec
push
push
sbb
or
inc
leave
daa
cli
inc
iret
mulb
das
insl
pop
faddl
adc
call
arpl
and
insl
xor
daa
jae
call
xor
gs
pop
dec
test
jle
dec
xchg
mov
insb
jle
pop
push
gs
bound
cmp
cmp
aam
push
pop
dec
sbb
pop
aaa
aas
adc
cmp
cmp
push
inc
repz
mov
xchg
mov
inc
arpl
xor
outsl
sbb
aad
in
or
insl
and
addr16
xor
xor
imul
dec
jp
pop
xor
clc
mov
pusha
sub
and
repz
inc
and
mov
aad
bound
imul
out
jbe
pop
push
mov
jle
xchg
cmp
push
and
lcall
je
pop
stos
shrl
pop
cltd
add
lds
les
inc
mov
es
add
shrb
test
pop
mov
push
lods
nop
pop
push
fs
push
inc
ja
out
sub
std
mov
dec
mov
loope
sbb
dec
rcrl
xchg
out
push
cmp
jge
outsl
adc
jne
cmc
cmp
shlb
sub
sbb
pop
push
lret
xchg
cmp
in
dec
cmpsl
inc
daa
pushw
pop
mov
ret
int3
popf
cli
imul
lods
daa
mov
and
lret
iret
lock
and
jmp
dec
sub
sbb
xchg
add
mov
jo
in
lea
mov
inc
scas
push
sub
shr
jp
jl
inc
fsubr
outsl
pop
or
pop
stos
into
inc
out
sub
arpl
dec
inc
xchg
xlat
mov
nop
xor
sub
sub
in
xchg
and
push
or
dec
push
mov
ret
add
in
add
or
mov
cld
inc
sbb
inc
xchg
mov
xchg
and
adc
leave
adc
mov
add
fsubs
add
ljmp
and
inc
mov
cltd
pop
adc
fwait
xchg
cwtl
and
inc
mov
xchg
jmp
and
adc
adc
mov
loopne
push
test
scas
pushf
sub
cmp
adc
outsb
test
dec
or
int3
jmp
aas
cmp
fs
cmc
inc
sbb
daa
aam
pop
addr16
inc
mov
and
cmp
sbb
je
sbb
push
imul
js
push
lahf
pop
inc
mov
imul
mov
ficoms
cs
sub
ss
arpl
outsb
xorb
mov
cmp
test
arpl
push
inc
call
into
mov
push
clc
inc
push
fbld
xchg
sbb
or
cmp
ja
in
mov
push
fwait
cmp
mov
add
adc
add
sbb
and
xor
inc
cmp
xor
cmpsb
sbb
or
push
pusha
xchg
pop
jl
insb
sbb
and
and
or
leave
push
je
les
ja
in
jb
cmp
mov
nop
push
movsb
jo
cmpsl
xchg
mov
lret
xlat
je
mov
js
lcall
add
into
add
mov
popl
movsl
idivb
mov
es
sbb
popl
nop
sub
adc
in
test
dec
add
add
inc
adc
add
les
lret
and
or
mov
mov
mov
xor
add
cmp
push
pop
insb
jo
movsl
add
push
push
and
loopne
addr16
xchg
adc
adc
clc
sbbl
add
incl
add
or
lods
sbb
bound
or
test
or
mov
inc
pusha
or
adc
or
xchg
mov
adc
mov
sbb
dec
sbb
and
js
andb
jo
jp
pusha
inc
cld
pop
mov
adc
push
push
or
and
or
hlt
rolb
les
mov
adc
xor
mov
mov
and
dec
mov
nop
and
add
sub
xor
or
mov
mov
inc
enter
cltd
or
push
sbb
pop
lock
adc
arpl
add
or
sbb
jns
adc
cmp
nop
cmp
xchg
add
pop
dec
js
pop
roll
add
add
inc
loope
mov
sbb
movsb
and
pusha
cmp
mov
movsl
xor
add
jle
xor
ficoml
mov
adcl
mov
mov
push
iret
mov
in
call
sub
or
push
add
cmp
pop
cmp
and
jo
fcoms
fsubp
stc
sbb
jle
sbb
or
ret
lret
dec
and
or
or
test
or
xchg
in
and
inc
fmul
mov
adc
xchg
lods
and
pushf
adc
xchg
mov
mov
mov
cltd
xor
and
dec
inc
xchg
cmp
sub
and
sbb
fmuls
cs
jb,pn
mov
add
jg
add
inc
sub
mov
jo
add
lock
inc
push
push
inc
push
in
push
push
inc
inc
call
dec
xlat
or
fdivs
rorb
push
and
dec
pop
cmp
xchg
adc
xchg
adc
xor
or
insl
push
xor
cmp
into
or
adc
push
das
or
insb
dec
jnp
roll
adc
cmp
push
jbe
and
sub
insl
inc
cltd
push
sub
xor
sub
icebp
push
mov
je
or
mov
mov
xor
lea
adc
or
stos
or
xor
popa
outsb
pop
mov
nop
bound
decb
cmp
push
je
outsl
sbb
repnz
lock
xchg
xchg
or
pop
into
sub
sub
sbb
loopne
sub
or
and
sub
dec
das
test
jo
je
sbb
test
es
cld
dec
jae
ficomps
and
cmp
push
add
jmp
add
out
and
sbb
xor
rolb
xor
pusha
rolb
loopne
out
push
subb
and
pop
or
adc
dec
and
xor
inc
sbb
mov
push
out
repz
mov
sub
sub
push
test
push
add
xchg
mov
imul
adc
insb
gs
data16
enter
xor
mov
dec
or
aam
inc
dec
pop
insl
mov
popa
lret
mov
sub
or
push
arpl
jmp
sub
and
movsl
and
pushf
inc
je
and
loope
mov
push
es
lret
push
mov
lods
jbe
push
sub
push
inc
int3
adc
mov
imul
les
inc
jmp
jle
jl
mov
xchg
xchg
jne
and
adc
push
es
cmp
sub
lcall
xchg
inc
jns
push
sub
lcall
inc
decb
loop
sbbb
jl
adc
nop
nopl
xor
mov
inc
and
dec
leave
arpl
xchg
fsub
bnd
je
pop
sub
xor
jb
js
jge
or
rorb
aaa
jb
je
xor
bnd
jbe
js
pop
enter
mov
addr16
cmpsl
fcmovb
loop
ljmp
leave
push
loope
jmp
add
jb
je
jbe
js
jp
jl
jle
jle
jle
pop
push
cmp
rolb
aas
or
popa
pusha
btr
ror
clc
rclb
xor
je
sbb
xor
fs
rcrl
jb
push
jbe
js
sbb
xor
xchg
dec
xchg
cmp
push
sbb
cmp
push
mov
xor
movsb
call
add
adc
xchg
cld
cmpsl
add
jg
es
popa
les
je
xchg
jmp
int
jmp
push
sbb
shrl
fnstenv
loope
jmp
fs
movsl
stc
leave
stc
jecxz
ljmp
int
aad
fldl
sti
shl
fpatan
fdivp
push
xor
sbb
xor
stos
sbb
xor
cltd
xchg
ss
daa
jle
jmp
incb
inc
inc
push
xchg
jne
out
out
out
loope
cmp
leave
adc
sbb
xor
insl
jmp
scas
stc
sar
clc
sub
jb
je
jbe
js
jp
jl
jle
jle
loopne
jb
je
jbe
js
jp
jl
jle
jle
sbb
cmp
push
push
dec
imul
lret
iret
in
out
leave
clc
and
inc
leave
dec
rcrl
popa
loope
jmp
mov
scas
stc
jmp
pop
je
jbe
js
jp
jl
jle
jle
jle
sbb
adc
dec
pop
or
cmp
addl
inc
andl
push
xor
xor
xor
aaa
jns
stos
xchg
mov
mov
fyl2x
loope
jmp
cmp
js
push
mov
inc
scas
adc
dec
ret
push
shll
lock
xchg
call
push
test
adc
sbb
and
add
pop
out
in
dec
nop
fmul
ljmp
je
jbe
js
jp
jl
jle
jle
jle
sbb
aas
mov
leave
sbb
mov
or
adc
sbb
cmp
dec
aas
mov
scas
aas
enter
fisubrs
dec
popf
push
sbb
jle
mov
int3
pop
lods
lahf
mov
lahf
cld
xchg
mov
enter
ret
loop
ljmp
jb
je
jbe
js
jp
jl
jle
adc
xor
dec
enter
subps
jg
iret
cwtl
iret
mov
iret
test
ret
adc
mov
das
roll
outsb
repz
repz
fdiv
adc
call
jae
mov
mov
cld
ret
jle
sbb
aaa
in
testl
lahf
and
nop
dec
cmp
call
xchg
mov
xchg
cld
scas
cld
cld
idiv
and
xor
inc
call
mov
cld
repnz
or
and
push
lock
mov
cld
sbb
cmp
or
xchg
mov
jle
mov
xor
mov
leave
inc
shll
js
xchg
jmp
mov
mov
cld
out
cld
xor
jae
cmpb
in
jle
jle
adc
cmp
cmp
cmp
outsl
aas
pushf
aas
mov
aas
clc
sub
daa
test
es
enter
lahf
fistpl
loop,pn
push
js
cmpb
aas
aad
fimull
add
pop
dec
xor
stos
iret
hlt
add
into
xchg
dec
cmp
cmp
bound
sub
cmp
push
pop
aas
jnp
mov
fmul
out
or
adc
xor
leave
daa
shrl
dec
loope
jmp
scas
stc
mov
outsb
xchg
mov
cwtl
cmp
jbe
js
jp
jl
jle
sbb
xor
mov
jp
fwait
lret
xchg
xor
orl
lahf
ficomps
in
add
daa
cmovne
dec
int3
dec
ret
leave
or
movsb
inc
scas
addr16
addl
jno
xchg
mov
cwtl
cld
mov
cld
mov
cld
std
cld
sbb
aaa
dec
rcrb
lahf
fstps
loope
rcrb
and
dec
lods
aad
sbb
push
xchg
xchg
mov
inc
call
data16
cmp
popf
sub
dec
dec
mov
mov
iret
xlat
iret
out
out
iret
test
daa
push
inc
lea
xchg
adc
and
sub
inc
fldenv
push
jnp
test
mov
stc
loop
ljmp
aas
jb
je
jbe
js
jp
dec
shrb
mov
xor
je
jbe
js
jp
jl
jle
dec
test
xor
ror
loope
jmp
lcall
cmp
jg
xchg
and
lahf
filds
es
pop
es
xchg
push
out
out
out
out
loopne
xor
xor
popf
loop
in
jb
sbb
cmp
popf
inc
sbb
push
adcl
fadds
cmp
xchg
and
in
push
cmpsl
hlt
jb
ja
mov
pop
stos
lahf
mov
or
cmp
in
call
mov
mov
cmpsb
mov
clc
add
adc
scas
cmp
stos
xchg
aam
add
mov
iret
in
call
sub
enter
movsb
insl
int3
mov
xor
je
jbe
js
jp
jl
jle
jle
jle
dec
sub
add
pop
cmp
inc
xchg
dec
dec
add
push
daa
push
pop
out
out
out
in
mov
je
js
adc
cmpb
mov
xor
movsb
add
sahf
incl
xor
sbb
jbe
js
mov
stc
cmp
stc
lods
clc
movsl
ss
je
sbb
aaa
mov
les
adc
cmp
push
cmp
repnz
jae
jl
lea
jmp
je
adc
xchg
push
push
sbbb
cmp
daa
leave
shl
outsb
or
jb
dec
and
cltd
xor
xchg
ret
pop
cmpsb
nop
or
in
call
cmp
imul
mov
xchg
aas
lahf
aas
test
aas
les
enter
sarb
aam
fadds
lahf
in
call
adcb
je
jbe
js
jp
cmp
jb
cmp
je
jbe
cwtl
int
data16
cmc
cmp
sbb
mov
int3
aas
cmc
sub
stos
mov
repnz
mov
ret
repz
xchg
sti
lahf
repnz
nop
or
jb
push
clc
mov
adc
andb
leave
pop
rcrl
gs
xor
repz
repz
repz
repz
repz
repz
pop
fistpl
notb
adc
and
addr16
loopne
push
xchg
jo
pop
lahf
push
lahf
jg
mov
js
repz
mov
repz
fcomip
jmp
cmc
enter
jb
je
dec
sub
aas
push
aas
pop
aas
gs
outsl
daa
addb
loopne
lahf
mov
scas
jle
jle
jle
jle
dec
loopne
cmpsb
hlt
fmull
xor
dec
or
psrld
dec
xor
dec
iret
push
iret
pop
lret
movsb
jno
fcoms
repnz
pop
test
mov
jle
jle
jle
jle
pop
call
iret
sub
popl
dec
iret
push
iret
pop
iret
iretw
imul
iret
jnp
or
loopne
test
lods
cld
mov
mov
mov
cld
cld
enter
mov
aam
fdivrs
jle
jle
jle
jle
jle
dec
hlt
mov
fmull
xor
or
or
or
sbb
push
and
insb
sub
repnz
cmpsb
xchg
mov
cmp
insb
mov
jo
jl
jle
jle
jle
dec
mov
cmpsb
sub
jle
jle
jle
jle
jle
jle
jle
pop
les
les
sarb
aam
fdivrs
fsubl
loopne
lret
in
out
in
loopne
cld
std
sarb
dec
mov
or
mov
cmp
mov
jmp
in
call
push
loopne
loope
or
xor
sub
dec
ret
push
rcll
sarb
dec
pusha
xchg
push
sahf
insb
cld
jo
pop
pop
js
jl
adcb
nop
add
mov
stos
sub
sub
inc
push
sub
cmp
mov
idivb
xor
icebp
in
sub
roll
cld
rcll
bound
sub
xor
dec
sbb
pushf
xchg
loopne
mov
loop
dec
sahf
insb
push
xchg
lahf
mov
mov
dec
cwtl
mov
add
in
lcall
mov
ret
ret
or
rclb
dec
add
mov
js
dec
sub
hlt
add
das
xor
dec
mov
jo
jge
mov
cmpsl
repz
rcll
fisttpl
in
add
popa
enter
ds
ja
jle
jle
dec
xchg
or
mov
stos
and
push
cmp
or
cmp
jl
cld
aaa
popa
in
call
cmp
ret
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
arpl
xor
aas
xchg
dec
jmp
cmp
aas
lahf
aas
test
mov
sbb
sub
dec
sbb
or
mov
leave
xchg
shll
sbb
addr16
orl
shll
sub
xor
xor
cmp
cmp
inc
aas
inc
aas
dec
aas
dec
aas
push
aas
push
push
adc
sbb
cmp
jmp
cmp
loopne
dec
jl
pop
sub
leave
adc
adc
sbb
xor
pushf
repnz
xor
mov
xchg
mov
loopne
cmp
cmp
loopne
out
hlt
cld
adc
das
ljmp
clc
jae
cmp
cld
pushf
cld
stos
cld
mov
pushf
cs
hlt
lahf
clc
lahf
cld
lods
pop
xchg
adc
sbb
scas
in
loope
xor
xor
sub
pop
inc
sete
iret
push
out
pop
iret
pop
iret
pusha
iret
fs
push
iret
je
js
jl
or
cmpsl
in
out
out
out
or
cmp
cwtl
call
sahf
push
pop
sti
xchg
mov
cmp
and
das
sub
push
addr16
out
out
out
in
lock
cld
aad
loop
xchg
cld
xchg
cmp
push
sar
jo
cld
mov
lcall
stc
aam
push
aas
in
call
hlt
in
xchg
insb
add
pushf
or
adc
adc
sbb
out
in
loopne
fs
push
ret
test
repz
rol
lock
mov
mov
popa
mov
mov
sbb
sbb
mov
js
jl
cmp
cmpsb
inc
mov
cmp
ss
sbbb
dec
js
ret
pusha
aaa
outsb
xchg
jbe
mov
fsubr
fdivp
and
dec
sub
test
imul
jb
popf
out
mov
out
push
adc
out
repz
int3
ljmp
sbb
cmp
cwtl
push
pushf
lahf
mov
xchg
add
sub
inc
je
pop
pop
ucomiss
jb
push
subb
add
xor
leave
and
jl
jle
inc
fldln2
xchg
add
sub
in
push
cs
lahf
cmp
cmp
inc
xchg
dec
dec
sbb
sub
je
in
and
imul
jp
jl
dec
cld
push
dec
add
adc
sarl
jl
and
lods
xchg
cmc
dec
lcall
cmp
cmp
xchg
mov
out
out
aas
ret
aam
movsl
ret
rorb
inc
jg
cld
cwtl
cld
pushf
cld
mov
movsb
pop
fcoml
jae
jp
clc
xchg
mov
push
movsb
xchg
xor
mov
int3
mov
in
mov
hlt
cld
clc
cld
cld
xchg
ss
test
in
loopne
rorl
xchg
sbb
in
fmul
add
outsb
inc
rolb
xchg
loope
jmp
pop
orl
sahf
dec
test
lret
rcrb
jle
jle
push
out
loopne
cld
and
cmp
push
cmp
jge
lahf
lret
adc
mov
adc
mov
lock
hlt
push
xchg
pop
add
insl
lock
xchg
cld
cwtl
cld
mov
xchg
pop
adc
loope
cmp
sub
cmp
jp
add
aad
fidivrl
sbb
cmp
jbe
inc
mov
ret
adc
sub
loopne
inc
lock
mov
pop
pop
lahf
data16
outsl
lahf
movsb
inc
sarl
cld
loop
rorb
push
ficomps
dec
cmp
mov
mov
sbb
aas
push
popf
sub
adc
je
xor
popf
dec
mov
rorb
and
or
xchg
push
adcb
sbb
and
outsl
pop
xor
in
call
lahf
hlt
xchg
mov
or
adc
pop
pushf
xchg
jle
mov
repz
imul
xchg
or
mov
or
jo
js
pop
mov
gs
xchg
mov
test
shl
aam
fsub
fdivl
pop
in
ds
inc
popf
xchg
ret
rorl
popa
jle
test
inc
pushf
out
cs
shll
insb
mov
sbb
cmp
push
ret
sti
shrb
push
xor
mov
mov
pop
cmp
aas
inc
das
jno
push
movsb
enter
hlt
sahf
ucomiss
inc
lahf
out
pop
cmpl
movsb
ret
push
inc
dec
push
call
ds
aas
sarb
aam
fsubs
faddl
in
pop
in
cld
lock
hlt
mov
shll
push
sub
adc
dec
fs
iret
jo
je
push
sbb
fadds
pop
lock
movsl
cmp
mov
fdivrl
adc
rcrl
aas
das
fildl
push
ficompl
pop
sahf
mov
movsb
out
ret
add
into
lret
leave
movsl
xchg
loopne
mov
pop
mov
inc
pop
dec
dec
pop
iret
addr16
jl
test
xchg
lret
xchg
mov
fcomi
cmc
repnz
loopne
aas
pop
in
call
inc
hlt
push
clc
arpl
insl
cld
jns
test
mov
or
enter
add
addb
pop
mov
and
stos
clc
mov
cld
cli
cld
add
push
dec
pop
or
lcall
push
test
xchg
pop
jo
js
jp
jl
jle
sbb
xor
xlat
iret
cwtl
aaa
fcoml
call
hlt
dec
or
cmp
pusha
enter
jl
cmp
lock
pop
sub
cmp
ds
es
xchg
xchg
cmc
andb
and
mov
push
xor
ja
cwtl
cld
lods
mov
icebp
mov
add
lock
or
xor
sub
xor
sub
xchg
pmullw
mov
jb
xchg
js
jo
dec
push
xor
out
stc
push
add
and
daa
test
mov
repnz
xor
in
dec
mov
sarb
dec
cld
cmpb
je
push
or
nop
adc
sbb
and
sub
sub
xor
xor
cmp
movsb
inc
out
out
out
out
out
in
call
pushf
push
iret
je
js
add
jl
aas
nop
sub
rcrb
add
repz
mov
loopne
mov
enter
rcrb
fsubl
cld
in
cld
lock
hlt
cld
clc
cld
cld
pushf
out
add
or
adc
sbb
cld
sub
inc
dec
cmp
inc
je
pop
dec
xchg
dec
dec
sub
iret
pop
iret
pop
lret
pusha
cmp
jbe
or
dec
adc
xor
movsb
jle
mov
je
stc
xor
sbb
sub
les
iret
push
iret
pop
out
pop
leave
pusha
shlb
fsubrs
js
daa
addb
scas
mov
nop
stc
xchg
stc
cwtl
stc
pushf
je
movsb
xchg
out
lods
punpckldq
stc
loope
lock
cmp
shrb
and
dec
cld
pop
cld
pusha
cld
push
jne
sbbl
iret
mov
iret
jmp
mull
adc
pop
daa
sub
cmp
push
dec
pushf
push
adc
in
jno
jbe
jg
sbb
lahf
push
mov
enter
nop
sbb
idivl
sbb
aas
and
cmp
ret
sbb
push
jge
andl
cld
jle
pop
hlt
dec
inc
pusha
xchg
adc
loopne
push
jmp
aas
xchg
es
pop
mov
mov
xor
lods
inc
xor
lock
hlt
xchg
xchg
cld
fwait
cld
mov
ret
pop
inc
adc
adc
ret
mov
sbb
cmp
loopne
ret
xchg
out
pop
ljmp
push
mov
aas
aam
out
popa
in
xor
push
lcall
and
in
mov
sub
aas
enter
sarb
aam
fmuls
out
in
rolb
hlt
aam
push
or
or
lods
cmp
sbb
and
daa
and
mov
aas
dec
aas
push
daa
pop
shl
stc
cwtl
sub
xor
inc
ds
aas
push
andl
stc
scas
stc
mov
or
int
shl
sbb
mov
dec
xchg
ljmp
xchg
sahf
in
cld
add
out
out
out
call
adc
lock
cmp
pop
pop
adc
sbb
or
clc
or
in
jmp
repz
add
aam
mov
adc
adc
je
pop
rclb
cld
in
cld
repz
add
pop
xor
daa
sbb
lcall
jns
stos
cld
sub
cmp
stos
or
leave
jbe
ucomiss
psllw
xor
xchg
cmp
sbb
setge
pop
and
push
xor
cmp
inc
repz
repz
repnz
lahf
in
pop
aaa
dec
mov
in
jg
cwtl
hlt
mov
cld
rclb
adc
ret
mov
mov
shl
inc
mov
and
cmp
mov
lds
fadds
push
xchg
cwtl
pop
mov
mov
frstor
cmp
popf
test
subl
js
lea
clc
loope
idiv
adc
aas
sub
popf
jno
xchg
andl
icebp
jbe
inc
add
dec
xor
sbb
or
ret
in
lret
repz
loop
lret
xchg
hlt
or
xor
clc
and
and
push
pop
repnz
xor
and
mov
xor
adc
and
js
xchg
sbb
stc
loope
lock
in
call
and
loopne
enter
ds
adc
mov
cmp
cli
add
adc
or
xor
push
jae
xor
rorb
jl
loope
push
add
xchg
add
repnz
pop
shlb
dec
xor
aam
iret
mov
xchg
lret
scas
loope
fdivr
in
rclb
fcomps
dec
out
imul
add
pop
fdivs
filds
mov
cmp
incb
shrb
mov
push
in
mov
adc
mov
push
dec
dec
push
push
test
or
push
xorb
fcoml
jbe
pop
es
inc
jl
pop
mov
insb
push
fisttpl
fs
mov
xor
and
aas
push
sbbb
test
js
rcrb
push
movsl
cmp
dec
push
pop
sbb
jl
and
jl
mov
data16
sub
cmpl
nop
lahf
mov
ret
xchg
lret
mov
jecxz
cli
cld
push
mov
fldcw
loope
and
inc
cld
dec
cld
push
mov
mov
ret
loop
out
negb
inc
pop
leave
sub
inc
cmp
lahf
gs
addb
push
pop
cmpsb
dec
and
dec
mov
add
xor
daa
mov
cli
aas
in
aas
repnz
idivl
std
sub
js
daa
inc
pop
cli
mov
ja
jge
lea
adc
repnz
in
stc
idiv
jl
jb
je
jbe
js
jp
dec
mov
in
in
push
out
pop
xor
inc
and
mov
sbb
pop
daa
cs
xchg
pop
xor
adc
adc
dec
notb
mov
jne
jge
cld
jle
dec
mov
push
into
xorb
pop
inc
roll
ljmp
adc
and
movsb
mov
lods
mov
mov
test
fdivs
fs
lods
dec
and
movsl
rcrb
xchg
mov
mov
push
mov
fisttpll
and
inc
test
cmp
ret
cmp
xchg
pop
imul
cmp
push
pop
test
lods
push
lahf
repz
ret
test
ret
rcl
add
jbe
js
dec
jle
aas
mov
loope
out
dec
xchg
and
pop
push
xor
dec
cwtl
mov
mov
movsl
pop
sbb
dec
pusha
das
inc
popf
pop
fs
movsb
callw
aas
into
sub
mov
xchg
outsl
mov
jb
je
pop
stos
ret
xchg
rcl
jecxz
loop
push
pop
push
sbb
mov
mov
repnz
in
roll
mov
mov
rcrb
call
pop
jbe
sarl
jle
shl
xchg
std
lock
xchg
mov
mov
xchg
lock
andb
divb
xor
call
rolb
xlat
or
cs
mov
push
mov
sub
pop
push
adc
or
sarl
jns
and
inc
clc
and
pop
clc
out
nop
fsubrl
push
pop
sub
jbe
pop
mov
and
mov
hlt
push
je
js
call
shll
addr16
mov
out
cld
xchg
xchg
add
or
adc
lcall
iret
pop
inc
aaa
jecxz
dec
dec
mov
jp
rcrb
jle
repnz
pop
adc
xchg
jne
jg
pop
cmp
shrl
leave
mov
sahf
cmp
pop
mov
xor
cmp
das
repz
sub
fs
add
and
stos
clc
shrl
sbb
xchg
addr16
mov
movsl
aas
lret
sub
dec
dec
xor
sub
lret
lock
idiv
cld
xchg
and
add
adc
in
jge
adc
jle
jle
dec
pushf
or
push
sbb
clc
ret
jle
sbb
int
call
xor
cmp
daa
insl
jecxz
in
clc
push
jl
fs
xchg
je
jnp
push
fwait
push
and
or
js
pop
jl
movsb
pop
push
mov
xor
mov
xchg
jmp
test
or
call
lods
pop
lahf
lret
lahf
loopne
out
mov
cmp
das
orb
dec
push
stos
pop
mov
mov
in
push
cmp
nop
pop
mov
loop
push
cwtl
adc
lock
in
mov
addr16
sub
jl
in
nop
and
stc
mov
aas
in
jg
cmp
jb
lock
cmp
fidivrs
sbb
or
xchg
cmp
and
sbb
popf
xchg
inc
sbb
dec
sbb
dec
sub
xchg
fsts
mov
mov
sbb
les
repnz
xor
stc
sti
sti
xorl
leave
push
clc
outsb
jl
dec
aaa
ret
push
repnz
imul
jae
inc
pop
addb
test
push
pop
cmp
inc
sub
stc
out
cs
inc
add
mov
lock
mov
dec
test
es
insb
gs
and
jl
jnp
mov
lock
jle
pop
mov
insb
push
aad
push
cld
call
dec
mov
cmp
neg
pop
test
notb
pop
movsb
ret
pop
es
mov
xor
mov
enter
cld
aam
pop
clc
fsub
loopne
sub
popf
adc
jle
loopne
jb
je
jbe
js
jp
jl
dec
sbb
push
and
sub
sub
aam
icebp
pop
xor
pop
pop
inc
cmp
and
mov
test
cmpsb
cld
mov
clc
icebp
in
nop
fadds
cmp
in
xchg
inc
push
pop
loope
jmp
mov
jg
add
dec
les
lcall
jbe
rcrb
clc
into
xchg
nop
xchg
movsb
loopne
mov
mov
popa
enter
add
dec
xor
sub
fcom
jp
mov
sub
mov
dec
inc
pop
rcll
or
mov
sub
mov
inc
sbb
push
sub
roll
or
inc
cmp
cmp
mov
dec
inc
xor
xor
mov
sub
mov
dec
inc
and
and
and
sub
sub
cmp
inc
test
mov
pop
xchg
xchg
adc
xchg
and
repnz
cmp
or
pushf
jns
and
inc
enter
mov
and
in
mov
mov
mov
cmp
mov
stc
push
adc
dec
xchg
xor
frstor
cwtl
aaa
mov
sbbb
push
ret
dec
call
cmp
mov
and
mov
clc
inc
mov
mov
rorl
dec
enter
mov
mov
fdivrl
inc
and
xchg
insb
pushf
sbb
in
adcb
push
push
insb
lods
add
das
cmp
sbb
sub
aas
pop
and
pop
addb
mov
xchg
mov
enter
rorb
or
roll
xor
push
ljmp
repz
sub
jbe
sub
sbbb
mov
mov
cld
dec
cld
dec
cld
push
xchg
popf
into
sub
pop
sbbb
mov
and
mov
lock
daa
sub
add
aad
dec
inc
cmp
xor
in
and
rorb
inc
cmp
jbe
jb
pop
je
stos
decl
xor
pop
ja
outsb
pop
jp
jp
arpl
add
fwait
adc
push
cmp
sub
inc
sbb
sbb
daa
push
and
popa
pop
and
push
push
or
xchg
testl
jns
stc
hlt
xor
repnz
push
add
std
mov
push
add
xorb
adc
movsl
adc
cmpsb
add
sbb
cmp
add
cmp
jae
outsl
push
xor
add
push
and
adc
adcb
mov
repnz
cmc
xor
pop
sub
inc
mov
outsl
les
mov
movsb
adc
sbb
xchg
fisttps
fildl
insl
dec
or
sub
pushf
orl
add
pop
adc
cli
or
push
mov
and
mulb
mov
or
bound
jbe
repnz
push
xor
andl
popa
ja
pop
xor
or
adc
outsb
jp
les
jmp
push
add
sbb
enter
out
insl
int
jmp
add
xor
pop
or
clc
xor
fistps
popa
cmp
xor
push
push
lods
negl
cli
adc
push
shrb
enter
sub
dec
add
xor
xor
movsb
imul
aad
insb
ljmp
and
push
lahf
mov
or
or
or
add
int
and
xchg
mov
dec
icebp
ffreep
movswl
add
mov
stos
test
mov
mov
fldt
ss
xor
shr
js
ja
stc
outsl
cmp
xchg
scas
add
xchg
lret
push
sub
mov
add
sbb
lahf
cli
das
imul
movsb
mull
cli
loope
jg
push
jecxz
pusha
in
inc
add
mov
mov
filds
xor
add
cltd
adcl
hlt
jae
or
xor
xchg
cmp
cltd
add
out
add
mov
add
sbbl
jne
pop
cmp
add
adc
add
outsb
inc
dec
add
mov
jl
add
daa
rcrl
js
lahf
xor
leave
icebp
out
sbb
lcall
in
cmc
out
add
stos
bound
in
or
shrb
add
jbe
out
add
fldenv
adc
cmp
imul
sub
fcomps
mov
dec
add
js
push
and
jl
xchg
push
sub
jae
sub
js
pop
lahf
mov
sbb
pop
pop
cmp
lock
mov
cmp
xor
xor
jb
cmp
das
fwait
sub
sub
xchg
sbbl
xchg
xchg
rorb
adc
add
mov
mov
pop
gs
rclb
imul
mov
cmpl
pop
ret
sbb
mov
sub
add
rorb
add
fisttps
sub
xchg
adc
add
or
das
add
mov
leave
clc
dec
lcall
aas
aaa
and
jo
xor
cmp
xchg
add
iret
push
xchg
dec
and
test
scas
mov
inc
repz
add
leave
fstps
mov
mov
mov
mov
cmc
iret
or
lock
sub
sarl
push
sbb
cmp
mov
les
decl
add
addr16
sub
aam
sub
mov
xor
icebp
or
xchg
scas
dec
mov
xor
or
lods
mov
push
sub
shrl
test
sbb
pop
jle
mov
cmp
adc
adc
add
imul
roll
or
mov
push
add
popa
fcomps
fnsetpm(287
mov
out
frstor
sbb
pop
jl
xor
mov
jbe
dec
filds
andb
pop
fmull
testl
and
dec
inc
add
into
ffreep
pop
push
add
cmpl
stos
push
add
mov
lahf
out
pop
push
inc
cmp
sar
add
inc
out
mov
push
outsb
movsl
sub
mov
add
sub
faddl
mov
jnp
or
sahf
imul
jmp
inc
cltd
add
lods
cmp
add
outsl
dec
shll
sbb
mov
insl
jp
stc
push
out
lods
scas
out
cltd
add
inc
sub
mov
aam
stos
sub
push
in
cmp
mov
mov
addb
call
lret
jle
or
sti
mov
xor
jg
sub
and
lea
scas
outsl
sub
push
or
clc
rolb
add
push
cld
and
loopne
leave
xorb
std
mov
xchg
push
ret
mov
and
hlt
push
fdivr
add
dec
shlb
xor
lds
cmc
je
aam
ficomps
add
adc
int
and
pop
andb
inc
sti
lret
inc
add
add
jg
outsl
sbb
sbb
and
repnz
in
or
je
push
bound
clc
mov
jp
stos
mov
mov
add
jne
dec
inc
mov
or
mov
push
or
iret
mov
jne
pusha
fyl2xp1
adc
push
es
mov
xchg
sub
add
xor
pop
stc
add
and
in
rcl
xor
dec
inc
fdivrs
pusha
add
movsl
out
xchg
iret
add
ds
or
jl
jbe
imul
xor
add
bound
jnp
sbb
movsl
add
cmp
lods
shr
mov
add
mov
iret
dec
add
sbb
add
int
ljmp
andl
nop
push
jne
cmc
popa
jg
push
dec
insl
popa
sarl
mov
jmp
xor
jns
push
test
mov
cmovb
ret
adcb
adc
out
out
add
and
xor
andl
fimuls
test
xchg
cltd
iret
popa
jo
and
in
inc
mov
fsubs
scas
pop
test
cmp
outsl
fs
pop
mov
lock
add
sub
aaa
dec
sti
add
adc
orb
mov
cli
xchg
add
or
imul
push
cli
ficomps
rcrl
fsubr
rcrl
sqrtps
mov
xchg
add
and
jl
add
mov
add
and
and
cmp
dec
scas
sbb
add
xor
jno
loopne
ja
add
in
int
lock
aam
outsl
shl
or
lea
sub
test
insl
jecxz
cltd
loop
inc
jg
add
lods
addr16
xor
and
adc
insl
add
add
pop
and
mov
sub
push
add
insl
xor
push
imul
stos
cmp
or
popf
shlb
push
add
mov
cmp
divps
ljmp
push
or
roll
stc
movsl
sbb
shr
jo
aaa
loope
add
cmp
add
call
jnp
sub
dec
mov
int3
adc
add
int3
mov
pop
jp
clc
inc
add
push
bound
cwtl
push
push
sbb
mov
test
addr16
xchg
in
test
mov
jae
and
adc
adcb
jnp
or
dec
adc
inc
popf
xor
sub
adc
pop
xor
fs
addb
movsb
push
xchg
inc
pop
sbb
sbb
cmp
adc
xor
mov
push
pop
and
cmc
push
push
call
fs
iret
add
test
mov
andb
add
popa
lcall
mov
sub
pop
cmp
jnp
in
mov
cmp
mov
cli
fs
in
inc
movsb
in
dec
add
cltd
pushf
mov
js
stc
sbb
nopl
push
cmp
fmull
aas
rorl
xchg
icebp
movsb
pop
pop
mov
fidivrs
loopne
loope
push
xchg
or
dec
or
sbb
jns
and
mov
mov
inc
cs
push
dec
xchg
jne
mov
ljmp
jge
push
pop
xchg
pop
add
fnstenv
rcrb
jp,pn
mov
fnstcw
xor
add
inc
aad
mov
test
inc
jle
sbb
push
xor
mov
sub
ud1
sti
scas
aam
and
jmp
bound
mov
xor
arpl
add
xchg
jecxz
or
fadd
xchg
inc
fbstp
dec
sbb
dec
dec
popl
mov
add
xor
jecxz
inc
inc
nop
xchg
xchg
mov
sub
mov
popa
push
and
mov
push
xor
lea
adc
lea
add
pop
in
adc
inc
mov
inc
push
ds
repnz
test
add
mov
es
out
dec
or
push
add
push
loope
mov
lock
pushf
add
js
test
jae
inc
add
sbb
les
dec
inc
xchg
clc
xor
mov
jne
jecxz
push
flds
jb
les
adc
cs
mov
scas
add
sti
inc
cmc
or
aam
add
mov
roll
notl
cmp
pusha
test
xchg
and
jnp
or
lret
fcomi
add
fcoms
xchg
xchg
push
mov
das
out
push
cmp
jg
sub
push
mov
std
adc
lods
mov
mov
jle
aas
or
xchg
into
push
dec
popa
dec
inc
into
hlt
dec
sbb
scas
pop
stos
sbb
lret
mov
push
jecxz
mov
inc
cld
loope
data16
mov
lea
add
repz
ret
add
mov
mov
fbstp
push
or
jg
andb
outsl
add
xchg
test
cli
int3
push
add
sbb
ja
mov
mov
jecxz
pushf
cmp
xchg
adc
cmp
int3
hlt
pop
add
sti
mov
add
add
outsb
test
add
cmp
pop
add
gs
daa
imul
adc
add
in
fwait
gs
fldt
ss
push
aas
lods
add
mov
and
mov
adcb
jp
xchg
dec
out
xchg
lock
add
ret
jl
loop
sarb
addr16
cmpb
aaa
les
add
xchg
fmul
jge
in
dec
jb
add
push
test
je
sub
mov
pop
sub
pop
dec
xlat
cmp
nop
add
add
hlt
cmp
cmp
imul
movsl
aas
pop
stos
add
add
jmp
cmc
or
pop
adc
out
inc
jg
pop
mov
lds
popa
je
xor
jp
push
pop
pushf
adcl
insl
je
dec
xor
test
adc
xchg
and
xor
mov
daa
mov
gs
int
dec
mov
jl
sub
push
ret
xchg
fnstcw
imul
mov
aad
cmp
pop
sahf
repnz
mov
adc
adc
add
into
jecxz
push
scas
push
loopne
test
sarl
xor
adcb
out
add
and
inc
add
js
jg
xchg
mov
jge
lods
test
mov
daa
pusha
cmp
jne
sarb
out
dec
inc
lock
or
cwtl
psubb
movsb
leave
xchg
out
lcall
cmp
and
xor
jbe
add
cpuid
jno
dec
gs
subl
adc
mov
or
pop
cmpsl
mov
adc
pop
xadd
loopne
add
ret
pop
xchg
pop
sti
sbb
sarl
xor
outsb
mov
nop
or
xchg
push
test
sbb
add
jg
fdivs
fistps
mov
push
cs
sarl
jne
adc
xchg
push
push
addb
mov
inc
mov
pusha
sti
or
add
inc
outsb
adc
or
imul
xchg
jno
sahf
and
dec
in
in
dec
mov
xchg
es
xor
addr16
imul
fcoms
sub
je
jae
push
imul
inc
cs
call
mov
inc
jg
adc
fiadds
mov
inc
inc
mov
fmul
cmp
push
xchg
movsb
cmpsb
mov
shr
fiaddl
jnp
push
adc
xor
inc
addb
test
add
cld
dec
rcrl
push
outsb
int3
add
popl
add
mov
ja
add
subb
add
lock
in
mov
std
sbb
add
dec
jne
mov
sub
sub
dec
adc
and
jg
nop
roll
push
pop
scas
mov
sbb
fwait
cmp
cmp
xorb
add
dec
stos
pop
mov
iret
push
xor
loopne
orb
xchg
mov
shlb
mov
pop
stos
out
lock
in
sub
adc
aaa
add
xchg
outsb
rcl
insb
and
addr16
stos
or
stc
in
mov
nop
add
mov
mov
sbb
push
xor
call
mov
xlat
xchg
divb
inc
js
shlb
adc
add
cld
dec
dec
enter
add
leave
popa
dec
add
cmpsl
add
xor
lock
push
fimull
xchg
cmp
or
mov
in
fsts
pop
pushf
sub
jg
dec
test
push
jnp
xor
mov
ret
push
add
out
mov
xchg
add
cwtl
cmpsb
cmpxchg
pop
adc
dec
outsl
push
add
in
pop
lods
add
out
mov
movsl
das
pop
jg
imul
sbb
fwait
sbb
fisubs
jbe
das
inc
add
in
fnstsw
loopne
fisubrl
add
in
dec
xor
addr16
mov
add
lds
ljmp
scas
push
test
pop
das
add
add
or
adcb
inc
jae
add
adc
xchg
push
bound
mov
push
pusha
es
lret
mov
adc
xor
shlb
push
addb
cmp
fcoml
rclb
leave
fdivrl
lret
xchg
mov
pop
adc
rolb
or
xor
sti
loop
sbb
push
pop
or
icebp
push
jecxz
repnz
cmpb
insb
pop
cmp
add
push
imul
jno
call
addl
xor
andb
popf
add
or
pop
add
daa
and
sbb
mov
add
pushf
insb
fsubs
std
add
pop
repnz
incl
or
xchg
lods
stc
add
jno
jge
shl
push
and
cmpsw
adc
adc
int
and
sbb
mov
pop
jb
mov
push
ss
xchg
rolb
data16
xchg
decb
loope
add
jb
add
nop
push
jne
xchg
or
mov
fs
daa
call
popf
lcall
or
add
xor
xchg
or
mov
or
out
xor
in
aas
pop
ljmp
cmp
adcb
inc
aad
inc
in
pop
add
mov
jae
adcb
add
and
filds
shll
das
hlt
push
sbb
dec
fnsave
add
adc
sub
arpl
fadd
je
xor
out
adcl
xorb
outsb
fidivrl
movsb
add
adc
fildl
sub
fldenv
jmp
add
leave
jns
fwait
xchg
mov
push
std
in
sahf
add
loop
adc
xchg
gs
mov
jecxz
cltd
enter
push
add
jo
outsb
mov
std
lds
dec
jne
pop
sub
cmp
hlt
push
cltd
sbb
or
pop
pop
push
pop
mov
mov
aam
add
sbbb
add
sub
or
push
out
jp
sbb
pop
xchg
lea
pop
into
adc
inc
les
dec
xor
add
aaa
repz
div
or
xor
lock
add
dec
push
adc
dec
fwait
loope,pt
ror
add
cld
mov
aaa
aad
jmp
dec
fstps
rorb
mov
sti
icebp
stos
jp
hlt
cmpsb
add
cmp
mov
jns
ja
inc
sbb
inc
imul
mov
or
push
and
sub
push
xor
xor
inc
xchg
or
or
mov
add
sbb
and
imul
data16
xlat
mov
shrl
cmp
and
je
xchg
adc
pusha
xchg
or
jb
xchg
arpl
mov
fisubrs
popa
sub
fldl
add
jo
imul
pop
cld
xlat
push
cltd
and
xchg
popl
push
jne
dec
inc
pop
push
je
xchg
popf
jl
push
xor
jae
test
cmpsb
sub
cld
aam
test
icebp
test
jge
ret
cmpsb
dec
pop
out
mov
inc
push
outsb
gs
fisubs
push
ret
lea
push
mov
push
nop
mov
inc
jbe
add
popl
mov
push
pop
pop
ret
nop
sub
je
and
cmp
cld
or
xorb
push
movsb
sub
jae
xor
push
ja
push
repnz
test
cmp
mov
xchg
inc
pusha
js
shlb
dec
stos
jmp
enter
sub
iret
adc
adc
arpl
xchg
jl
push
and
add
loopne
lods
call
sbb
or
pop
cmp
ja
nop
addr16
add
mov
notb
incb
sub
rep
pop
jmp
shlb
add
jne
add
and
jb
bnd
sub
sbb
stos
aam
adc
add
xor
push
mov
jae
add
in
and
jmp
inc
cmp
xchg
ret
sub
lahf
inc
add
xchg
jo
aam
push
inc
push
nop
jl
jae
cmp
in
jge
push
adc
call
sbb
adc
push
filds
sub
cmp
push
adc
dec
or
stc
lret
and
hlt
cmp
clc
or
stos
call
pop
add
push
sti
or
add
divb
inc
out
pop
mov
shlb
add
iret
push
push
xor
inc
jmp
ret
adc
dec
dec
jne
adc
push
inc
or
std
xor
mov
lods
aam
jo
fs
add
adc
xor
ja
pop
lock
enter
fcom
jae
enter
in
adc
call
xchg
ds
jle
inc
add
shlb
test
add
pop
jne
movzwl
ret
insb
clc
mov
jb
xchg
adc
loop
sbb
cmp
fadds
cmpb
mov
mov
cmpsb
dec
je
fsubrs
inc
cmp
aas
sbb
inc
lea
roll
loope
lahf
inc
call
mov
adc
test
xor
add
and
cltd
adc
or
xchg
and
bswap
pop
pop
pop
cmpsb
in
ljmp
cmp
iret
leave
in
ret
int
je
hlt
mov
lods
mov
mov
ret
cmp
sarb
mov
pusha
mov
push
std
aad
push
cmp
push
orl
in
call
inc
sub
les
in
inc
cwtl
inc
xor
push
fsub
jle
out
adc
xor
and
mov
or
jb
push
push
and
push
mov
jno
push
sbb
inc
xchg
xor
mov
mov
test
addb
cmp
idiv
jne
int3
jns
nop
jbe
jne
insb
aaa
rolb
cld
mov
sub
int
test
fs
enter
test
inc
sub
push
clc
mov
hlt
jb
sbb
adc
and
cmp
int3
lods
cmp
push
dec
cmp
push
lcall
int
pop
out
adc
and
sub
pop
mov
push
push
sbb
lods
lcall
add
xor
adc
mov
xchg
setb
repnz
dec
rcrb
mov
mov
adc
push
and
call
call
std
or
aad
aad
cld
hlt
push
add
fidivl
xchg
xchg
mov
pop
aas
push
shl
dec
popf
mov
and
inc
jecxz
dec
pop
inc
xor
cmp
xchg
sbb
jb
int3
mov
pop
lea
dec
dec
push
daa
and
jmp
fidivl
sub
dec
popl
and
sbb
sahf
xlat
stos
test
lods
data16
adc
adc
shl
mov
or
dec
push
add
sbbb
add
push
add
mov
clc
call
inc
sbb
jge
inc
pop
inc
jo
cld
or
cmp
ljmp
leave
cmp
add
jle
mov
push
mov
push
or
repz
outsb
mov
test
sbb
adc
inc
push
adc
or
inc
mov
add
call
push
add
shr
sub
cld
add
arpl
inc
divl
lea
inc
pop
add
popa
jl
lcall
jle
mulb
add
dec
frstor
mov
pop
pop
leave
ret
divl
add
test
call
decb
sar
enter
mov
cmp
addl
sbb
mov
aam
and
popa
sbb
adc
add
xor
out
sbb
invlpg
clc
sbb
inc
xchg
rolb
ret
sbb
mov
addl
repz
mov
push
xor
fstpt
std
add
mov
mov
add
aaa
stos
sub
mov
pop
or
add
mov
push
and
add
jmp
sub
add
mov
push
add
and
add
xchg
cmp
pushf
sbb
add
scas
push
iret
ss
lock
xor
inc
add
sbbb
add
push
and
xlat
fadds
inc
pop
xor
add
adc
daa
add
data16
movl
mov
mov
mov
enter
leave
add
push
mov
xchg
cmp
or
pop
push
lea
push
push
add
push
xor
cmp
jo
outsl
add
out
leave
jae
enter
mov
mov
adc
cwtl
es
add
lea
jg
push
add
out
xchg
nop
stos
xchg
shl
adc
add
testb
or
push
pop
repnz
dec
cmp
sbb
inc
inc
dec
into
aam
xchg
and
or
xchg
cmp
or
add
fwait
add
hlt
je
add
dec
cmp
andb
ja
xchg
mov
mov
pop
jmp
in
push
aaa
call
add
jne
pop
add
call
shlb
mov
dec
add
test
add
shll
dec
pop
js
sbb
adc
clc
insb
pop
jecxz
pop
push
adcl
add
and
add
inc
fildl
sbb
les
hlt
icebp
push
out
cmp
push
xchg
xor
fcoms
mov
pop
add
xchg
pop
addr16
xor
add
push
cmp
clc
mov
lock
int3
xchg
add
inc
ja
arpl
nop
in
cmp
cmpl
jne
add
xor
mov
cwtl
outsb
pop
cmpb
xor
hlt
das
adc
inc
repnz
push
add
pop
pop
add
aaa
test
push
add
pop
mov
adcl
jns
add
aas
xchg
je
mov
stc
incb
mov
jp
add
in
aas
cmp
popf
add
lcall
add
test
pop
pop
pop
sub
ret
mov
mov
cwtl
lea
adc
jns
sbb
adc
leave
subb
push
pop
lea
add
xchg
in
cmp
insb
pop
cs
inc
xor
lock
adc
andl
dec
add
jl
push
add
adc
hlt
add
push
adc
popa
fbld
mov
pop
ljmp
sbb
add
dec
add
mov
je
add
mov
je
sbb
add
iret
stc
jmp
dec
push
pop
cld
add
xor
add
xchg
es
cmpsb
or
sbb
adc
inc
push
jecxz
add
inc
and
jmp
aad
pop
cmp
add
add
call
fdivrl
pop
jne
add
imull
xchg
mov
sub
icebp
mov
cmp
cld
orb
loope
scas
pop
add
jmp
loop
add
push
out
leave
inc
pop
add
gs
and
push
push
push
adc
or
and
out
or
add
rcll
addb
mov
mov
mov
add
mov
in
xchg
jne
and
notl
pop
cmp
adc
ljmp
call
addb
movsb
xor
roll
lret
call
jns
in
pop
mov
push
mov
jge
mov
test
or
mov
cmp
and
add
jbe
movb
jmp
dec
xor
pop
add
cmpsl
js
movzbl
push
popa
sub
mov
bound
inc
or
pop
xchg
cs
lds
add
or
movb
mov
push
mov
adc
inc
cmp
shlb
add
into
cmp
int3
sbb
mov
and
cld
hlt
repnz
add
mov
lea
in
js
and
jne
jb
push
test
add
shl
stos
inc
mov
inc
or
inc
push
push
inc
add
adc
std
int3
hlt
pusha
add
inc
rorb
xor
mov
sbb
cmp
in
xor
sbb
faddl
into
adc
je
lahf
sub
daa
adc
nop
inc
add
sbb
push
in
dec
insb
lret
jmp
push
jecxz
or
lea
pop
xor
add
xor
andb
mov
adc
inc
mov
push
lock
add
and
mov
xchg
xchg
imul
adc
pop
test
mov
add
jae
fstl
fildll
add
and
lock
andl
sbb
repnz
mov
push
sbb
jbe
or
movl
jmp
or
add
mov
les
pop
jae
add
sahf
nop
cmpsb
push
call
add
sarb
mov
and
ret
mov
mov
daa
lea
popa
or
aaa
out
inc
or
mov
movb
add
ret
cmpsl
fiaddl
shlb
cmp
xorb
add
xchg
jb
fdivs
xor
cmpsl
inc
add
add
andb
rclb
push
shlb
movsl
xor
add
pop
scas
sub
in
add
cli
xor
add
fdivl
cmp
lock
and
xor
aaa
mov
or
jnp
jl
jne
xor
addl
jmp
mov
or
lock
add
icebp
or
insl
fildl
jp
sbb
or
stos
add
and
xchg
adc
mov
jge
je
pop
mov
cmp
xor
inc
xor
add
push
push
adc
xor
push
flds
sbb
add
sub
add
movsl
jecxz
mov
add
sbb
ss
push
div
aas
add
inc
or
faddl
out
clc
subb
sub
mov
fs
sub
sbb
and
aam
sbb
inc
mov
pushf
fmull
pop
xor
mov
or
or
add
mov
push
dec
aas
jg
addl
loopne
and
add
call
adc
pop
add
cmp
jle
add
jne
add
lods
sub
mov
mov
mov
loopne
cli
lcall
fs
and
add
dec
mov
or
into
cli
ror
jle
in
push
push
add
mov
int3
add
ret
push
dec
movb
add
shll
out
push
add
add
cmp
pusha
or
cld
add
mulb
sbb
sahf
and
jno
movsb
mov
add
and
fiaddl
add
stos
add
cmpl
hlt
xchg
adc
int
cs
add
test
pop
add
and
aam
pop
or
sbb
faddl
dec
or
and
or
jecxz
insl
out
cs
sbb
ret
mov
test
jmp
and
cs
push
bound
push
xchg
cmovo
outsb
scas
mov
lds
ss
rcrb
nop
out
pop
lahf
psraw
mov
sbb
or
pop
add
mov
call
dec
sbb
popa
push
mov
insb
xchg
pusha
sbb
dec
sbb
jmp
fimull
xor
fnstcw
call
dec
jne
sbb
sbb
sub
repnz
add
add
cld
enter
mov
loopne
adc
jmp
out
in
call
jl
add
cli
dec
lret
push
subl
jecxz
adc
xor
cwtl
cmc
add
and
ja
and
pop
loop
push
inc
mov
add
add
push
in
pop
or
xor
shlb
jne
mov
adc
cmpsb
shll
or
mov
cmc
adc
or
sbb
push
test
int3
clc
out
sub
out
add
imul
mov
cwtl
nop
pusha
test
or
xchg
subb
pop
enter
lock
lahf
loope
nop
sub
add
jno
sbb
cs
cmpsb
sub
lea
pop
jae
stos
dec
clc
in
imul
add
add
push
jmp
sub
pop
adc
mov
add
dec
add
ret
test
cmp
sbb
mov
int
push
ret
push
add
push
loop
push
pushf
insb
lahf
clc
mov
lock
inc
jge
jne
pop
add
pop
popa
fcoml
sub
sbb
and
ret
dec
mov
xchg
mov
pusha
add
pop
addl
mov
cld
call
mov
pop
popa
mov
adc
loopne
loope
xor
mov
and
aad
in
add
mov
sbb
and
sbb
mov
mov
int3
cmp
jmp
sub
add
pop
push
or
push
nop
cmp
push
lock
jmp
cmpsb
add
adc
adc
dec
add
nop
imul
mov
add
les
push
xchg
add
jl
fldt
push
es
jmp
jne
dec
loope
cwtl
adc
push
sub
xor
add
imulb
xorb
mov
inc
add
call
add
or
mov
cmpsl
add
rcrb
add
sub
insl
cli
pusha
inc
sbb
xchg
inc
xchg
or
ret
inc
add
mov
ljmp
xchg
test
cld
xchg
ret
mov
or
pop
leave
add
loope
and
nop
pop
push
xor
enter
sub
mov
daa
add
cmc
cwtl
inc
add
dec
rcrl
push
add
and
jbe
cmp
rcr
sbb
cmpb
jne
lea
subl
aad
into
add
push
mov
xchg
lret
add
adc
sub
jno
add
lods
negl
mov
lea
clc
push
add
xchg
dec
jnp
add
add
and
popl
sahf
mov
hlt
xchg
add
mov
xor
mov
repnz
xor
js
sahf
xlat
pop
add
repnz
test
xchg
mov
les
leave
sub
jge
dec
push
dec
add
xchg
dec
mov
out
dec
adc
loopne
cmp
sahf
inc
sbbb
xlat
push
test
mov
pop
in
jne
add
aad
and
pop
dec
push
pop
cmp
lock
jo
shrb
add
or
push
out
pop
arpl
call
mov
jne
xchg
pop
push
add
mov
in
xor
fs
loopne
aad
cmp
iret
out
add
dec
test
fcomps
push
push
sahf
popa
cmp
and
and
test
add
pop
scas
es
and
add
sub
loope
or
or
sbb
sub
cld
xorb
or
lock
pop
fsubr
push
bnd
mov
mov
add
push
cmp
je
add
jne
and
lret
fcompl
les
pop
adc
cmp
jmp
jno
les
add
add
cmp
push
pop
sbb
pop
add
sub
push
pop
aaa
add
clc
mov
and
mov
inc
adc
cmp
lahf
sbb
dec
xchg
add
test
str
mov
lods
jle
or
push
add
mov
add
jne
es
push
jae
add
mov
add
mov
mov
adc
add
or
scas
mov
add
test
incb
loop
dec
add
xor
sbb
lods
scas
add
sar
sub
jo
push
lock
inc
and
jne
sub
mov
nop
dec
jl
xor
out
or
add
cmpl
mov
xchg
js
add
ljmp
repnz
push
xchg
loopne
inc
inc
ret
leave
push
adc
xchg
xor
loope
mov
dec
mov
outsl
iret
pop
test
jp
ds
mov
adc
push
subb
push
data16
adc
cmp
jb
add
pop
lea
mov
add
jne
push
mov
add
dec
dec
and
psubw
in
jo
xchg
mov
pushf
mov
add
or
scas
loop
jo
test
ja
pop
pop
popf
lea
inc
cmp
add
jns
cld
xchg
add
push
call
sbb
popf
cmp
adc
sub
test
xchg
add
fldcw
mov
jecxz
add
nop
jb
cli
sub
xchg
add
push
xchg
adc
xor
add
adc
imul
pop
stc
shrl
add
test
lds
add
jnp
mov
inc
add
call
lock
leave
push
inc
add
fnstcw
add
xchg
dec
pop
rolb
js
in
and
rclb
call
jmp
jbe
mov
mov
xor
inc
lret
mov
sbb
mov
xchg
jo
push
inc
call
dec
cmpb
popa
cmp
add
sbb
je
adc
mov
fldenv
ret
xlat
add
into
mov
xor
fsubl
mov
push
mov
call
lahf
add
mov
cmp
dec
loop
jge
add
mov
sbb
push
fidivrl
mov
sbb
dec
mov
adc
mov
lea
loop
insb
ja
add
jmp
push
mov
or
nop
lock
shr
add
pop
sbb
push
or
add
xchg
pusha
mov
mov
mov
and
and
imull
aaa
xchg
mov
add
xchg
sub
push
out
add
mov
inc
inc
fiadds
xchg
jmp
mov
loope
xchg
test
cmp
js
pop
cs
test
push
andb
or
adc
xchg
add
cmp
add
pop
jge
nop
popf
pop
scas
pop
mov
call
add
add
js
inc
push
mov
add
sbb
pop
lock
adc
mov
add
push
test
jne
push
pop
lock
inc
sbb
sbbl
push
mov
add
inc
push
in
and
sbb
enter
orb
cmp
xchg
add
mov
in
add
jbe
call
add
adc
insb
add
push
jne
dec
xor
push
gs
roll
add
mov
fildl
or
cmp
cmc
dec
aam
inc
ret
dec
xlat
data16
mov
add
push
dec
and
mov
add
lea
add
or
and
add
movl
or
or
int3
xor
push
ret
inc
and
or
mov
push
shlb
shr
push
xor
add
mov
push
add
and
dec
xor
enter
mov
popa
pop
add
cmovg
add
xchg
jle
add
pop
pusha
movb
mov
adc
lea
jne
push
movsl
insl
push
sbbb
fwait
mov
test
add
pop
fs
pop
das
xor
ss
add
or
sbb
addb
pushf
add
test
scas
or
add
add
cmp
inc
sub
inc
sbb
or
ret
mov
pop
push
clc
mov
pop
cs
xlat
add
jmp
ss
adc
jne
dec
sub
or
mov
push
xchg
push
cld
inc
test
add
dec
repnz
repz
in
ret
add
cmpb
add
lea
adc
in
add
inc
jmp
movsb
add
pop
je
inc
jl
jb
stos
aaa
ljmp
add
push
call
mov
jne
nop
inc
adc
add
shll
hlt
push
add
sub
xchg
rcr
sbb
test
add
inc
add
js
mov
fnstenv
adc
and
sbb
xchg
je
add
in
cli
sbb
arpl
iret
sub
sbb
adc
add
jge
xor
stc
ds
add
in
adc
xchg
add
dec
nop
adc
test
loopne
into
leave
pop
add
add
call
int3
mov
lods
stos
movsl
outsb
add
out
pop
xchg
rolb
or
jle
inc
push
push
add
adc
imul
pop
idiv
add
sbb
sub
pop
add
cld
loopne
or
loope
test
lock
mov
or
add
push
xor
sbb
xor
mov
je
dec
add
sub
adc
push
pop
add
jmp
lret
push
cltd
add
jno
and
dec
ljmp
movsl
sbb
and
adc
subb
mov
inc
fdivr
mov
xchg
fwait
xor
pop
ljmp
sub
xorb
add
push
xor
mov
ss
es
adc
shrl
jnp
out
pop
push
add
push
lods
jns
sbb
repz
xor
push
add
mov
add
xchg
add
push
bnd
xchg
add
sbb
testb
jae
mov
lods
cli
sub
add
mov
clc
and
cmp
add
push
push
xor
add
lret
loop
in
lcall
aam
stc
sbb
stos
xchg
pop
xor
pop
fucomip
push
lahf
jb
and
clc
lods
jne
add
je
out
add
mov
and
icebp
cmpb
mov
lea
std
das
push
or
push
jp
enter
test
inc
or
pop
rcl
testb
les
push
and
loope
add
xchg
add
add
add
add
sub
sahf
ds
loope
and
stos
lea
popf
add
pop
mov
push
add
cmpb
sbb
test
xor
imul
xchg
mov
cwtl
orb
add
inc
add
sbb
sbb
popf
icebp
ja
js
add
data16
add
mov
cmp
ret
scas
xor
cld
jle
push
flds
push
jmp
push
roll
jo
jbe
add
je
cmp
int
dec
sbb
fdivs
stos
roll
daa
stos
arpl
mov
jns
or
imul
cmp
rcll
mov
and
mov
mov
fucomp
or
sbb
test
fnstsw
adc
push
mov
cwtl
inc
inc
fnstsw
add
lahf
dec
iret
add
icebp
pop
andl
faddl
data16
push
add
push
mov
xchg
adc
pop
cmp
fs
or
pop
ret
out
adc
fsubl
mov
lret
jb
out
xor
sbb
and
add
ja
mov
or
jnp
add
jl
or
loope
nop
add
xchg
cmp
pop
add
gs
add
fildll
ret
pusha
or
fcomp
dec
sbb
add
mov
test
mov
add
push
xchg
cmp
das
xchg
add
or
rorl
sub
rclb
ss
in
add
jmp
pop
or
add
dec
mov
leave
push
pop
stc
or
loopne
xor
pop
data16
inc
push
pop
leave
sub
adcb
cltd
or
pushf
mov
jne
add
and
mov
add
mov
push
push
xchg
mov
mov
add
dec
ja
xor
xor
mov
psllw
les
adc
jg
leave
cld
jo
pop
fld
add
int3
inc
test
mov
pop
sub
and
dec
fisttpll
stos
lea
push
push
sbb
hlt
movsl
push
test
mov
mov
and
sti
nop
jl
add
adc
ret
aaa
jo
add
cmpsl
xchg
bound
sub
dec
test
into
push
or
fwait
hlt
add
nop
mov
test
push
mov
sbb
inc
xor
dec
add
lea
outsl
push
imul
js
fiaddl
jmp
cltd
pop
sbbl
je
jb
loop
pop
xchg
sbb
hlt
cld
add
cmpl
dec
and
add
paddusb
push
out
mov
cmp
add
std
push
xchg
bound
add
out
sub
add
fwait
and
mov
loopne
or
std
test
and
push
je
push
mov
ss
imul
les
add
pop
popa
adc
pop
adc
or
cmp
rcrb
pop
cmp
pop
pop
insb
mov
inc
idiv
mov
lret
dec
dec
pop
and
adc
jbe
test
mov
mov
sahf
testl
push
push
call
xchg
pop
inc
adc
add
mov
xlat
push
enter
dec
std
mov
and
pop
cmpl
insb
orb
les
ror
dec
pushf
in
cmp
test
popf
addl
dec
out
int
pop
call
andb
pop
inc
cmpb
add
push
addb
add
int3
push
je
cwtl
push
xor
pmulhw
and
and
pop
adc
xchg
fs
add
cltd
iret
sub
cs
and
push
push
shlb
mov
das
shll
add
add
dec
je
adc
pop
pusha
push
mov
xor
ror
push
pop
xchg
aas
lahf
jno
and
jl
in
insl
add
mov
or
aad
repz
sbb
push
call
movsb
sbb
or
in
cwtl
inc
inc
xor
pop
neg
sbb
popf
inc
xchg
push
add
add
dec
sysret
mov
mov
into
and
add
arpl
mov
add
scas
cwtl
jp
int3
pusha
ds
add
sbb
xchg
add
repz
sub
test
add
cmp
mov
add
dec
mov
dec
testb
add
mov
inc
jg
jl
movsb
leave
add
push
orb
mov
call
cmp
inc
add
and
jne
int3
pusha
jo
cltd
test
jb
inc
repz
mov
inc
paddw
cld
sar
inc
cli
and
stc
sub
or
and
in
mov
inc
mov
jbe
adc
adc
add
or
jg
call
mov
out
push
push
stos
dec
rolb
and
add
jle
and
lea
fwait
add
bound
dec
pop
lcall
mov
jmp
jle
mov
sbb
cmp
xchg
xchg
push
pusha
and
mov
inc
js
enter
add
push
adc
cmpsb
pop
inc
pop
aas
add
jmp
sbb
sub
inc
push
arpl
add
loop
insb
retw
push
add
fbld
pop
cli
xor
or
sub
nop
adc
push
mov
add
stc
mov
push
hlt
cmpsl
fsubrl
push
fmuls
scas
fsubrs
push
pop
add
xchg
adc
sarb
add
pusha
mov
scas
add
push
cmp
push
pop
mov
fs
mov
xchg
add
mov
xchg
xor
add
mov
add
push
pop
xor
and
mov
gs
jp
add
aas
mov
test
pop
cmp
mov
jno
mov
sbb
gs
add
test
push
mov
dec
add
fs
dec
mov
add
ret
mov
cmp
jno
add
data16
or
sbb
add
push
pop
add
cmp
mov
js
bound
add
sbb
push
pop
rep
pop
xchg
stc
or
dec
add
mov
add
or
arpl
cmp
and
adc
ds
adc
lahf
dec
add
pop
mov
add
jno
xor
sti
int3
add
pop
mov
jne
add
enter
sbb
cmc
pop
rcrb
pop
neg
bound
or
dec
mov
iret
popa
or
inc
add
add
xorb
insl
and
test
sbb
add
push
movsb
divb
add
xchg
fdivrs
inc
add
or
adc
add
ljmp
not
pop
clc
and
adc
filds
add
push
jge
add
cmp
loopne
es
outsb
add
push
adc
hlt
dec
mov
add
mov
aad
loope
ja
add
or
add
nop
in
pop
ficoml
xchg
add
mov
mov
sbb
fnsave
nop
pop
out
je
jbe
add
mov
int3
sub
loopne
cs
push
clc
sub
jb
and
fs
cmp
pop
adcl
mov
inc
and
aad
sbb
mov
ljmp
cltd
mov
inc
xor
mov
mov
nop
test
fimuls
popf
xor
sub
aas
les
pop
jne
sbb
je
add
add
orl
aad
sarl
ss
jmp
int3
inc
pop
or
cmp
push
out
inc
pop
sub
loopne
sbb
lea
sbb
out
mov
cltd
in
mov
add
and
add
sbbb
leave
adc
call
pop
add
adc
fdivs
xchg
cmpsb
or
repnz
aam
mov
or
xorb
adc
xlat
inc
xchg
dec
inc
xor
je
pop
aad
mov
and
popa
adc
fs
mov
xor
std
divb
or
jmp
ss
push
into
jmp
mulb
mov
cltd
and
push
sbb
imul
shl
or
mov
jmp
popa
and
dec
inc
dec
adc
nop
jnp
xchg
in
cmpb
and
xchg
push
add
xor
adc
add
jg
xchg
cmp
mov
sti
es
pop
test
dec
mov
testl
cmp
call
sub
fsubrs
cmp
jno
adc
add
mov
push
dec
clc
mov
and
inc
jmp
and
and
cmc
adc
jg
pop
add
push
inc
negb
inc
enter
push
stc
out
add
adc
or
pop
push
andb
push
push
mulb
repnz
and
add
adc
test
push
add
mov
rcrb
pop
vmread
fs
sub
add
test
or
inc
push
or
fcoms
sbb
mov
adc
push
subb
lret
add
js
decl
mov
add
jmp
mov
cltd
insb
movhps
and
push
xorb
rcrb
or
sub
adc
jae
in
sub
mov
mov
add
movsb
push
mov
xor
test
cmp
jecxz
pop
loop
pop
and
add
inc
sbb
loopne
pop
jl
xchg
es
fistpll
dec
adc
mov
and
add
cwtl
or
xchg
aaa
push
add
inc
pop
mov
sub
fadd
adc
xor
shr
sbb
jnp
add
popw
inc
add
int
xor
pop
add
loop
jl
sbb
movzwl
xchg
adc
push
pop
sub
movl
hlt
roll
into
and
fwait
sub
pusha
add
mov
sti
push
inc
push
xchg
pop
iret
xor
das
lea
js
mov
mov
notb
mov
mov
ja
jne
or
add
xchg
jb,pt
aas
addl
popl
pop
daa
pushl
xchg
cmp
mov
add
rol
add
cs
push
rcll
sbb
jmp
add
mov
add
cwtl
out
xchg
cmc
popf
rorb
add
dec
idivl
add
leave
add
adc
loope
in
add
or
pop
and
inc
sahf
xchg
adc
add
pop
pop
mov
ret
cwtl
pop
out
shll
sub
pop
fimuls
addb
testb
sub
pop
mov
push
and
adc
cmp
das
add
xchg
lock
testl
mov
outsl
jno
repz
add
dec
pop
in
mov
cmp
mov
jo
xor
dec
cwtl
ljmp
and
jno
adc
add
xor
ds
dec
pop
add
xchg
sahf
mov
jg
jg
jg
jg
jg
adc
decb
adc
and
dec
sub
and
add
push
pop
mov
outsb
sti
js
cmp
sti
pushf
stc
cmpsb
mov
mov
std
loop
in
inc
add
add
jae
adc
xor
or
les
pop
and
lret
pop
or
lods
sarb
add
and
in
and
jp
add
pushf
jmp
sbb
sbb
add
test
mov
inc
and
in
add
popf
dec
fs
add
test
adcb
mov
shlb
adc
inc
sbb
mov
and
inc
roll
sbb
in
push
outsb
cmp
rcrb
les
inc
arpl
out
enter
aaa
inc
inc
add
cmp
push
push
push
das
xor
jo
xor
xor
rorb
pmaddwd
pop
in
add
mov
dec
push
clc
popa
cli
imul
ret
and
lods
js
xor
mov
enter
dec
lea
xor
inc
dec
repz
push
cld
push
jns
jo
inc
lahf
push
js
jo
lds
insl
insb
sub
dec
iret
or
sub
xor
pop
pmaxsw
xchg
add
mov
inc
push
or
inc
push
fildl
popa
sub
mov
into
add
fs
mov
loopne
add
jmp
add
mov
or
and
xor
lock
jae
add
sbb
ss
sbb
push
andl
cmp
adc
and
and
add
cli
add
cmp
sarl
testl
push
push
push
inc
or
andl
mov
or
in
jo
inc
add
adc
jmp
repz
outsl
call
cmp
pop
das
pop
cmp
or
inc
inc
incl
cmp
jb
ds
or
xor
js
xchg
add
ret
jo
add
mov
test
push
or
xorl
imul
jge
cmp
lcall
outsl
adc
mov
test
add
repz
cmp
add
das
insl
push
mov
add
mull
add
insl
je
out
push
xor
add
mov
mov
inc
xchg
mov
je
mov
sub
push
xor
nop
addb
push
popa
adc
jae
adc
in
xor
xor
inc
add
push
fildl
fidivrs
mov
lock
sub
mov
add
mov
lock
add
arpl
cmp
add
aas
push
add
add
xor
and
pop
and
add
mov
pop
xchg
sub
add
cld
outsb
lret
jo
dec
std
cmp
cs
ja
jp
mov
jmp
cmpl
orb
cmp
rorb
dec
dec
subl
push
push
sahf
xor
xor
cmp
pop
add
push
pusha
xor
add
sub
das
inc
cwtl
and
sbbb
inc
fwait
mov
add
push
dec
lahf
cltd
add
popaw
pop
in
push
inc
mov
inc
scas
push
mov
add
cmp
sbb
testb
shlb
and
cmp
pop
add
push
jne
stos
add
addb
add
or
push
jns
pop
jb
insb
mov
add
ret
add
pusha
push
jge
inc
or
movsl
cmp
add
mov
popf
pop
data16
adc
sub
pop
and
inc
sub
and
xchg
xlat
add
sub
mov
push
pop
xchg
and
push
sbb
call
mov
imul
andb
or
cld
int3
or
adc
mov
add
mov
dec
inc
pop
ret
andb
and
sbb
push
lods
loop
dec
add
and
add
sub
lods
cld
add
clc
scas
push
test
add
jmp
lahf
pop
add
push
mov
mov
add
pop
dec
pop
pop
fildll
icebp
sbb
fiaddl
lcall
inc
insl
jo
jns
das
dec
movsl
movsb
xor
mov
nop
add
cmpsl
bound
mov
sbb
je
in
jns
add
mov
aad
aam
call
flds
lock
testl
jo
add
outsb
jae
lret
imul
aas
int3
and
repz
cmpsb
add
pop
rcrb
add
mov
insb
test
jae
hlt
into
insl
call
js
dec
push
pop
pushf
movsb
pusha
pop
mov
dec
loope
add
inc
push
jo
stos
xor
inc
add
es
dec
jle
push
mov
nop
rclb
mov
jne
cmp
mov
push
hlt
add
ljmp
orl
and
in
aas
pushf
lock
xchg
divps
rolb
dec
jmp
mov
push
mov
out
scas
cmpsl
shr
add
adc
arpl
mov
inc
jb
sbb
dec
mov
push
push
add
pushf
push
push
push
out
push
ljmp
add
out
push
jns
icebp
jbe
add
jmp
movzbl
lea
inc
jmp
xchg
pop
push
in
call
add
jle
fadds
pop
lock
enter
add
adc
mov
inc
xor
test
mov
insl
lods
pop
sbb
jmp
adc
fwait
pop
adc
shlb
adc
out
add
push
push
xor
mov
pop
ret
add
mov
sub
fcmovb
lret
add
arpl
push
ret
roll
sbb
add
pop
adc
xor
pop
push
push
negb
xor
ljmp
nop
dec
push
ss
jbe
mov
cld
and
add
xchg
pop
adc
scas
and
out
pushf
add
ret
cmp
mov
cmp
int3
ja
ja
repnz
iret
add
sahf
jmp
add
or
adc
dec
cmp
cmpb
adc
test
repnz
mov
je
mov
dec
inc
cmpsb
and
push
roll
stos
inc
js
xchg
xor
movb
outsl
jb
iret
cltd
fcoml
sbb
scas
scas
mov
jp
mov
rclb
enter
jg
call
add
mov
cld
arpl
cmpb
push
rolb
sbb
and
out
test
add
push
dec
sahf
rcrb
fistpl
enter
pop
out
xchg
jmp
and
push
and
iret
bnd
sub
sbbl
add
and
adc
add
add
sbb
sub
or
in
in
popf
jl
sets
sbb
test
rcrb
nop
test
mov
mov
xchg
dec
or
enter
push
xor
adc
dec
mov
mov
and
jle
movsb
adc
cmp
loope
cmp
inc
scas
pushf
nop
inc
mov
clc
mov
adc
mov
fsub
popf
inc
shlb
iret
jae
add
int3
scas
sbb
ja
shlb
movsb
out
outsb
in
dec
add
leave
repz
add
cwtl
orl
adc
and
repz
pusha
and
add
push
jbe
inc
mov
stos
adc
movsb
cmp
out
adc
xor
into
or
pop
dec
and
lret
insl
dec
sbb
or
adc
lahf
aaa
mov
scas
es
clc
nop
cmp
loopne
mov
add
enter
xor
add
cli
ret
mov
pop
roll
je
mov
add
pop
int3
lods
prefetch
cmpsb
add
lods
rorb
add
push
inc
pop
add
rcrl
adcb
mov
sbb
iret
xor
arpl
adcb
mov
xchg
js
mov
mov
push
iret
jl,pt
add
adc
jge
in
pop
add
rcll
stos
insb
add
adc
sbbb
scas
movsl
cvtps2pd
push
ss
sbb
js
loopne
add
cli
add
push
inc
test
fldl
dec
int
test
xor
cltd
aas
hlt
js
repnz
cmp
sbb
xchg
sub
mov
inc
cmp
add
push
cmp
add
std
lds
loopne
cs
push
adc
rorl
int
xor
inc
lcall
mov
add
pop
cmp
fcomps
mov
and
jo
add
adc
out
add
pop
xchg
cld
mov
add
sbb
mov
sbb
cmpb
add
cltd
mov
popf
cmp
js
arpl
sarl
test
sbb
loopne
add
lods
mov
pop
cmp
mov
xchg
scas
jo
add
add
incl
add
pop
add
cmp
aam
fildl
add
add
add
loope
pop
sbb
mov
jge
cmp
fsub
out
add
mov
add
andb
pushf
sahf
sbbb
fidivl
push
fidivs
cmp
adc
lcall
fsts
mov
add
add
stos
add
pop
adc
sti
add
scas
pop
xchg
push
inc
add
sub
out
push
rorb
add
pavgb
jge
pop
inc
pop
scas
add
addl
add
sahf
xchg
pop
mov
fidivl
rolb
xchg
add
data16
fcmovne
and
xor
or
ljmp
add
dec
bound
in
push
ret
add
or
cmc
jge
mov
cmp
sbb
sti
in
jae
sbb
int
insl
rcll
push
mov
ljmp
nop
bound
add
in
cld
add
push
add
ror
and
sub
pandn
sbb
scas
inc
add
rcll
arpl
pop
inc
pop
pop
iret
xor
xor
shll
push
xchg
loopne
add
mov
add
test
pop
pop
daa
xlat
paddusb
mov
jne
lcall
lret
adc
inc
add
inc
jno
push
out
rorb
hlt
mov
pop
push
add
fbld
inc
jo
add
push
push
dec
aaa
fldl
push
add
mov
in
or
rorl
push
push
lret
cmp
test
adc
stc
add
mov
mov
jge
dec
inc
add
movsl
loopne
add
fildl
add
mov
lcall
rolb
fsubl
lods
pop
loopne
test
pop
shlb
or
movzwl
add
xchg
dec
ret
pusha
mov
movl
ja
lock
add
lahf
shlb
cmp
add
stos
cltd
and
stos
loopne
add
jp
xchg
pushf
pop
cmp
add
push
sbb
fdivs
mov
mov
out
jae
add
dec
mov
add
adc
lods
repnz
scas
lcall
test
cmp
xorl
xorb
out
add
adc
add
mov
xchg
push
add
pop
sbb
shlb
or
mov
pop
into
mov
add
ljmp
mov
dec
mov
testl
test
add
push
and
jecxz
sbb
ss
jle
sbb
nop
mov
add
shrl
sub
inc
push
add
pusha
push
lods
daa
fstps
adc
or
fiaddl
mov
xorb
mov
add
in
xchg
cmp
jle
mov
xchg
imul
mov
push
jnp
insb
or
scas
xor
push
mov
arpl
add
fadd
jnp
rorb
add
nop
out
cmp
aas
imul
decl
cmc
cmp
xor
mov
xchg
add
sub
rclb
jecxz
add
mov
cmpsl
add
pop
cwtl
or
ss
and
stc
lahf
data16
sarb
add
pop
icebp
sbb
push
fsubs
jecxz
test
mov
sub
rcll
sbb
mov
mov
add
int
lods
xchg
add
pop
in
lock
loope
or
dec
cs
add
fsubrs
add
cmp
add
push
push
sub
add
in
aad
sub
sbb
add
mov
mov
data16
cmp
inc
andb
push
aas
add
outsl
mov
cmp
mov
add
add
testl
sub
push
pop
pop
adc
push
pop
iret
pop
add
pop
sbb
jo
add
mov
loopne
test
push
cmp
imul
adc
pop
and
sub
add
popa
mov
add
sbb
jnp
sbb
sarl
jbe
inc
sub
gs
or
push
pop
lods
mov
dec
jmp
loopne
add
jb
jo
idivl
sbb
out
add
jne
lahf
add
je
jo
add
push
shrb
ss
lret
jge
repnz
sub
jmp
inc
add
xchg
lret
add
gs
xchg
sub
inc
and
xor
dec
iret
icebp
add
dec
cmc
push
lock
shll
addl
fimull
lret
xor
clc
aaa
add
loop
or
cmpb
xchg
shrb
dec
lret
xorb
mov
sub
cmp
add
ficompl
add
sub
les
pop
sar
js
add
mov
add
shrb
rcrb
inc
outsl
add
rcrl
popf
mov
in
negl
inc
sarb
fiaddl
mov
xor
ficoml
ret
fs
mov
add
imul
ficoms
add
push
jge
pusha
cmpb
scas
pop
cltd
cmp
ret
jnp
movsl
pop
push
out
les
jns
push
orl
xchg
jecxz
cmp
pop
sarb
xchg
lock
xor
mov
cmpsb
fwait
add
cmp
add
adc
lods
mov
cmp
mov
jl
sub
jmp
jns
cmp
inc
or
add
fidivrl
mov
lods
xor
mov
movsb
dec
cmp
ds
aaa
push
sub
jg
sbb
pop
add
mov
fadd
lahf
push
add
loope
inc
rcr
sbb
jmp
fnstcw
negl
mov
cmpb
or
push
and
stc
mov
inc
push
es
mov
lods
int
pop
sbb
es
les
mov
cmp
insl
popa
push
sub
xchg
xchg
add
flds
pop
shlb
jmp
movsb
push
aaa
xor
mov
jmp
dec
mulb
pop
call
fadds
mov
sub
adc
scas
lcall
loopne
fistl
inc
pop
xorb
mov
cmp
add
and
ffreep
add
lret
pushf
inc
mov
repz
mov
sbb
sub
das
mov
jb
fs
push
cmp
mov
addr16
fwait
cmp
repnz
pop
sbb
push
hlt
movsb
add
dec
push
mov
fistpl
cmpsb
cwtl
mov
or
out
fldl
inc
out
add
inc
cmc
add
adc
mov
call
add
inc
jg
shlb
fmull
clc
in
scas
add
enter
add
popf
add
cmp
mov
push
add
or
mov
pushf
xchg
rorb
cwtl
sub
loope
cmc
cmp
or
add
inc
adc
cmpsb
inc
xor
ret
add
dec
int
in
add
pop
add
arpl
sub
mov
adc
ja
gs
adc
call
sbb
test
add
popa
push
dec
scas
and
push
aas
dec
bound
adc
mov
jg
or
leave
sahf
push
add
testb
add
rcl
adcb
mov
xchg
inc
or
fnsetpm(287
rcrb
add
in
ret
adc
or
fidivs
xlat
das
rorb
pop
pop
xor
in
fnstenv
test
add
push
dec
push
repnz
lock
push
das
inc
rol
out
in
and
loopne
add
negb
xchg
push
mov
inc
inc
add
repnz
lahf
add
mov
mov
dec
dec
dec
add
xchg
and
mov
cld
add
and
add
in
lret
cmp
push
in
je
add
sbb
mov
cmp
out
mov
sub
rcl
addb
bswap
adc
xor
add
xchg
sub
out
popf
add
pop
dec
ss
add
ret
pop
loopne
add
or
inc
pop
push
pusha
popa
add
imul
in
mov
cmpsb
mov
xchg
andl
add
sbbb
arpl
xchg
xlat
pop
xchg
rcrl
mov
mov
movsl
outsl
lea
outsb
sbb
sbb
sbb
jne
and
pop
cmp
add
or
loop
mov
cmp
fistpll
push
add
aam
adc
push
push
sbb
leave
add
or
jbe
lcall
sbb
call
mov
dec
or
shll
add
gs
out
add
out
push
out
aam
pushf
pop
push
sbb
xchg
add
pop
sub
dec
xor
lods
jae
incl
dec
add
adc
scas
rolb
ret
push
scas
psubsw
add
test
in
or
out
add
xor
or
pusha
imul
str
lret
add
outsb
jg
inc
or
add
lods
icebp
dec
loopne
pusha
xchg
enter
mov
add
add
mov
rcrl
mov
movzwl
mov
add
mov
mov
sbb
inc
fwait
add
test
sub
mov
mov
add
sbb
sarb
jns
aam
mov
or
and
inc
and
ret
jmp
push
mov
add
sbb
pop
cmp
adc
js
inc
jno
add
or
popl
lock
and
jmp
cltd
stos
jne
push
sbb
sarb
and
cs
pop
hlt
jmp
jo
stos
jns
adc
int3
jnp
loopne
sbb
aad
push
push
dec
ljmp
push
cmc
icebp
mov
mov
inc
push
in
lcall
iret
sbb
imul
and
sub
inc
fisubrs
inc
or
add
mov
mov
stos
add
pop
push
or
shlb
jbe
add
shrb
addb
xlat
call
mov
ret
out
add
dec
fcmovb
pop
xor
mov
popl
pusha
mov
lods
add
cmc
sarl
mov
mov
push
shrl
fcoms
add
inc
mov
sti
add
fucom
stos
sub
imul
pop
add
test
clc
sub
add
push
test
rolb
fdivrs
xor
rolb
and
lret
cwtl
pop
ds
push
jge
sub
add
xchg
inc
verr
in
pop
loope
xchg
jl
and
dec
addps
lods
test
mov
adc
ds
xchg
jl
and
clc
xchg
mov
jg
push
mov
and
enter
jecxz
pop
outsb
dec
dec
mov
or
mov
pop
push
out
add
hlt
mov
xchg
push
lea
xchg
pop
daa
jne
pop
aam
mov
cwtl
cld
movsl
insb
add
js
sbb
pushf
add
pop
lock
cli
fwait
mov
stc
jns
add
test
sysenter
pop
push
mov
cmp
xchg
mov
add
insl
enter
cld
ja
pusha
fldl
pop
arpl
pushf
ror
and
lock
jno
sbb
mov
adc
add
fwait
std
sub
inc
cli
ds
mov
cmp
fnstsw
xlat
cmpsb
push
mov
push
add
jnp
add
push
xchg
pop
cmp
dec
nop
lret
out
inc
sub
push
aad
repnz
flds
xchg
test
incl
sti
aas
ds
sbb
push
outsl
inc
orl
mov
mov
or
jmp
lahf
adc
add
cmp
and
push
int3
xchg
mov
mov
mov
and
add
cmp
push
xchg
inc
pop
fsubl
push
jo
insb
jne
push
xlat
add
inc
jmp
jg
jmp
cmp
push
xchg
imul
lcall
loope
jnp
jo
jae
jb
adc
outsb
inc
pop
out
std
popa
loopne
mov
and
cmp
ds
push
add
xor
push
sarb
out
mov
push
xchg
add
dec
sar
dec
mov
push
jmp
sbb
push
lods
pcmpgtb
and
es
xchg
pop
lds
dec
sub
outsb
or
lea
imull
adc
data16
sub
mov
mov
mov
mov
in
jmp
sub
or
jne
jl
test
imul
insl
add
sbb
add
repnz
inc
mov
xchg
aaa
ss
out
lret
inc
sub
sbb
arpl
or
data16
js
sub
adc
mov
adc
aaa
add
mov
scas
add
jle
data16
shl
ret
and
xor
imulb
add
xlat
cmp
push
inc
js
inc
out
popa
incl
in
push
neg
sbb
and
das
in
adc
push
test
pop
and
pop
nop
add
pop
ja
jo
cmpsb
add
int
inc
fsubrl
push
jnp
or
cmp
add
xor
es
outsl
push
or
and
xchg
clc
test
stos
xchg
sbb
call
repnz
inc
clc
mov
cwtl
and
adc
rclb
and
bound
imul
sub
int3
test
mov
enter
push
push
jle
fwait
sahf
xchg
lcall
or
or
jae
mov
clc
mov
add
or
add
std
cmp
jecxz
subl
mov
stc
ficompl
fidivs
aad
pop
je
inc
repz
js
es
incl
out
test
leave
inc
aaa
add
dec
imul
cwtl
aas
shlb
xorb
adc
add
cmp
push
scas
fsubs
lret
xor
push
sbb
jne
or
add
call
add
jae
hlt
and
mov
aas
negl
inc
mov
jae
add
adc
mov
fldenv
adc
popa
push
inc
loopne
add
add
movsb
add
loope
fsubrl
pop
add
rcrb
push
add
bnd
mov
cmp
add
insl
adc
sbb
add
or
adc
push
dec
add
push
jae
add
rcll
pop
fmull
add
push
in
add
mov
mov
cmpsb
nop
sub
andb
pop
and
lcall
add
xlat
sbb
mov
xor
icebp
push
jge
loopne
add
insl
pop
arpl
add
inc
fisttpll
call
mov
add
shll
inc
and
mov
mov
mov
add
and
and
add
jp
xorb
add
popf
add
xor
loopne
add
inc
inc
pop
popa
cmp
cwtl
loop
mov
daa
stc
jle
xorb
sbb
fnstsw
cmpsb
mov
loop
pop
popf
dec
sbb
dec
xchg
add
test
cmp
in
in
mov
pop
sbb
dec
dec
adcb
loope
add
out
out
pop
xchg
cmc
sbb
movsb
jmp
loopne
push
in
sbb
aad
cmp
sbb
pop
stos
add
push
aaa
pop
adc
cmp
and
sbb
fistpll
insb
sbb
cmp
dec
inc
mov
fstl
rclb
sub
add
pushf
mov
xlat
xchg
sbb
pop
add
sub
das
pop
jecxz
sub
xchg
mov
pop
cmp
xor
push
mov
jb
sub
adc
les
inc
jle
pop
mov
roll
mov
pop
fs
mov
sbb
pop
or
mov
loopne
les
adc
hlt
in
test
jge
repz
jo
add
test
ss
out
loopne
add
test
mov
repz
pop
out
add
add
lock
fadds
cmp
in
add
mov
dec
sub
add
aas
ljmp
mov
mov
cmp
add
cwtl
dec
and
xor
ret
testb
adc
add
ja
popf
test
add
push
outsl
jne
pop
add
data16
cmp
in
cmpb
add
xor
xchg
mov
mov
xchg
in
repnz
ja
cmp
and
popf
stos
fiadds
xchg
push
pop
add
sub
or
push
dec
ja
pop
imul
imul
add
sbb
xchg
fisttpl
divb
fldl
pop
incl
jecxz
enter
add
sbb
sub
mov
std
push
sbb
add
loop
notb
popa
add
cmp
ja
dec
jb
loopne
adc
adc
add
out
ss
add
sbb
add
pop
not
dec
sarl
and
pop
pusha
in
sbb
mov
jle
push
in
ret
pop
rclb
mov
sbb
rcl
mov
psubq
add
pop
cmp
ja
cmpsl
add
dec
add
push
andb
cmp
and
pop
xor
bound
sbb
sub
push
add
in
dec
mov
fiaddl
ret
dec
in
add
pusha
lea
js
loop
fiaddl
push
push
mov
add
in
cmp
add
jbe
mov
pusha
loop
add
int
mov
outsb
hlt
aam
testb
stos
or
sbb
or
dec
xor
gs
arpl
xor
pop
and
mov
add
ja
adc
es
je
add
repnz
xor
dec
push
add
xchg
jae
xor
jp
jecxz
imul
sub
jmp
fisttpl
rorb
xor
sbb
push
aam
cwtl
xor
sbb
je
add
pop
repnz
add
insb
push
xor
inc
mov
jb
je
jmp
pop
loopne
add
mov
jnp
ds
shlb
rcrl
ror
sbbl
add
cmc
shll
bound
and
ljmp
jns
dec
into
adc
add
inc
rcrb
fwait
ljmp
xchg
cltd
lahf
cmp
push
sbb
add
push
cmp
je
and
lcall
fisttpll
pop
pushf
push
cmp
mov
add
in
jo
add
clc
faddl
sarb
popa
adc
mov
push
xchg
dec
sbb
test
lret
cwtl
call
add
sub
scas
add
cmp
cltd
fsubp
or
add
loop
gs
nop
fwait
add
jg,pn
pusha
int
or
sub
sbb
div
add
sar
fcompl
add
sbb
push
pop
dec
add
sbb
xlat
inc
or
fwait
dec
add
cli
ljmp
add
sar
push
popf
lock
add
cmp
cmp
jecxz
scas
sahf
adc
jne
lods
je
inc
sub
jo
lret
popf
inc
dec
out
mov
xor
mov
add
scas
les
insb
insl
cmp
mov
rorb
cmp
cs
sub
add
cld
jno
jge
aaa
lahf
add
dec
xchg
jmp
aas
and
rorb
mov
add
cltd
loop
test
out
out
loopne
add
jmp
adcl
idivb
add
sahf
sbb
xor
mov
aad
mulb
stos
add
pop
je
or
xor
dec
push
sub
xchg
add
mov
cmp
mov
cmc
sbbl
inc
loopne,pt
dec
dec
and
add
xchg
inc
cli
cmp
add
test
adc
aas
jb
mov
insl
add
popf
pop
jecxz
inc
or
imul
push
jl
xor
and
push
lds
jo
add
add
out
shl
cmp
lcall
mov
movsl
inc
add
je
or
add
mov
push
test
add
mov
imul
xor
lds
mov
out
inc
xor
pusha
jmp
add
jae
fstl
add
mov
aaa
xchg
call
stos
inc
mov
sarb
cmp
mov
addb
mov
ror
add
fiadds
mov
popl
in
sub
cmpsb
mov
dec
add
sbb
add
roll
inc
mov
loopne
add
inc
int3
out
dec
jge
add
pop
dec
add
out
scas
fsubrl
pusha
jmp
lock
jb
jnp
add
xchg
shl
cmp
mov
xor
lock
pop
test
mov
rclb
pop
dec
mov
dec
arpl
test
fadds
pop
sub
mov
movsl
xor
lahf
mov
out
add
xchg
or
mov
add
fcoml
sub
sbb
pusha
loopne
imulb
add
fisttps
push
add
cmpb
add
out
shl
add
lods
push
aas
sbbb
xchg
add
push
jmp
jo
ja
insl
jb
jns
inc
mov
mov
jno
dec
add
xor
roll
lahf
cmp
mov
push
add
xchg
inc
je
xor
mov
out
cmp
pusha
test
push
addb
stos
mov
mov
call
sub
roll
sbb
inc
add
pop
add
pop
cltd
sar
loope
addb
rcll
je
add
sub
out
scas
push
cmp
and
jns
xchg
sbbb
cs
rol
add
push
stos
mov
xchg
push
jno
lea
jne
fidivl
mov
mov
or
scas
or
lret
cmpsb
add
sbb
loopne
in
adc
jbe
xor
subb
add
mov
add
push
xchg
pushf
cltd
push
lods
jle
pop
lea
ret
add
icebp
pusha
movsl
loopne
push
and
and
mov
mov
daa
add
in
dec
lea
push
inc
loop
pusha
test
cmp
sub
lock
out
adc
das
xorb
and
add
mov
sub
pushf
fidivrl
pop
mov
add
repnz
add
add
add
mov
iret
lock
add
push
cmpsl
inc
xchg
filds
int
arpl
xchg
add
jno
cmp
jecxz
loopne
lret
les
ss
pusha
roll
mov
push
loopne
adc
test
push
add
jb
scas
mov
cld
xor
aas
add
lods
test
mov
jg
dec
mov
aas
in
adc
cmpsb
or
pop
xchg
push
clc
jge
adc
and
fsincos
adc
outsl
movb
jb
and
adc
sbb
aaa
add
jnp
sti
add
xor
jge
fisttpl
and
add
xchg
sbbl
imul
xor
dec
or
cmp
jbe
xchg
add
mov
and
cvttps2pi
lea
test
stc
imul
and
cmp
mov
xchg
sbb
dec
jmp
int
sbb
out
add
xor
adc
adc
test
add
mov
mov
add
test
scas
in
popf
pmulhuw
test
push
testb
aaa
and
insl
xchg
pusha
fisubl
xchg
add
lock
sti
push
adcb
add
push
or
ljmp
cmpl
sti
loope
ret
cmp
add
xor
dec
fsubrs
add
daa
pop
add
pop
sbb
add
xlat
subb
adc
icebp
insl
jecxz
xorb
push
or
and
addr16
cwtl
nop
add
xor
pop
ret
mov
repnz
jg
inc
imul
pushf
adc
sbb
ret
adcb
mov
fldcw
ljmp
add
mov
outsb
dec
subb
add
push
shrb
fistl
pop
push
setno
sbb
mov
jbe
mov
add
test
shlb
mov
xchg
in
fisubl
and
add
xchg
pop
or
or
fwait
les
add
xchg
push
xchg
add
test
pop
cmp
mov
pop
sbb
add
xor
jbe
cmp
jae
imul
jg
jns
push
rolb
mov
push
adc
stos
push
mov
xchg
je
cmp
gs
add
lahf
inc
outsb
add
rol
sub
xor
fidivrl
into
mov
dec
test
and
add
mov
pop
pop
sub
xor
dec
jo
je
mov
add
aas
lea
cmp
add
cmp
ja
icebp
and
add
pop
sbb
add
add
shll
je
addr16
shrb
add
sbb
cltd
pop
inc
loopne
dec
mov
jge
verw
sbb
mov
dec
int
add
lret
lcall
xor
aaa
adc
inc
loopne
jno
jle
xor
mov
dec
int3
push
psubb
mov
and
cmpsl
lea
mov
push
xor
inc
movsb
mov
add
inc
rorb
fmull
and
addb
or
shrb
pop
mov
pop
dec
les
in
mov
nop
vphaddwd
adc
pop
jo
add
je
push
and
into
incl
in
xchg
lcall
fmul
add
test
push
sbb
jnp
mov
push
sbb
cmp
pop
push
push
cmp
fisubrs
dec
js
std
xchg
pop
call
adc
cmp
add
dec
lea
and
add
in
lods
add
fsubrp
sbb
adc
add
pop
cmp
push
xlat
nop
loope
lock
add
push
add
popa
rolb
leave
add
pop
pop
push
xchg
add
dec
test
mov
jge
sbb
add
inc
in
insl
add
jg
loop
decl
lock
inc
jnp
mov
add
fldcw
scas
sub
mov
cmpl
mov
xchg
add
pop
mov
dec
cmp
add
movsl
int3
fidivs
add
cmpl
or
cmp
xlat
iret
xor
inc
dec
xor
shrl
roll
mov
fcmovu
add
push
andb
imul
loope
cmp
jo
add
push
loopne
test
xlat
stos
sarl
test
and
pop
add
mov
pop
and
nop
in
mov
mov
mov
rcr
rcl
adc
dec
pop
add
mov
sub
pop
mov
xchg
aad
xor
jl
movsl
popa
and
data16
andb
dec
pop
adc
mov
add
add
pop
je
push
psubd
add
and
cmp
add
lods
popa
pop
adc
cltd
jo
add
jne
mov
out
lret
cmp
loopne
mov
movsl
orb
incb
lahf
loop
leave
stos
sbb
ss
add
mov
pusha
jbe
add
cmp
mov
mov
rorb
push
cs
cmp
add
fldt
sahf
sbb
xchg
cltd
mov
add
xchg
or
push
add
cld
shl
mov
mov
xor
dec
adc
add
aaa
inc
pusha
push
push
popw
mov
sahf
imul
dec
add
nop
addb
cmp
cmp
nop
fiaddl
pusha
andl
push
add
push
jb
push
loopne
lcall
pop
push
movsl
pop
lods
add
mov
add
add
mov
in
mov
insl
add
nop
mov
add
adc
jecxz
cmp
fwait
pushf
rolb
mov
decb
hlt
sbb
shll
lods
xchg
push
test
sub
sbb
push
cmpl
jo
add
jno
stos
add
cmpl
jmp
jne
add
fwait
testb
add
cmpb
or
adc
sbbl
dec
mov
repnz
pop
or
vmwrite
jne
hlt
mov
lock
push
addb
pop
ret
in
adc
add
inc
std
add
out
add
push
test
adc
xchg
cmp
adc
in
mov
lods
add
addl
mov
inc
arpl
into
sub
add
pmaxub
pop
cmpl
jg
add
sbb
push
pusha
in
adc
fwait
add
adcb
es
xorb
xchg
push
jbe
xchg
xchg
add
or
je
sbb
pop
lret
pop
inc
mov
pop
jnp
add
clc
int3
add
pop
push
call
add
inc
imul
inc
bound
pop
ret
loopne
cmpsb
outsl
add
lock
add
test
clc
jg
add
insb
jnp
inc
andb
push
scas
add
jbe
mov
cmp
fstpt
add
add
sti
incb
push
xchg
inc
nop
sub
adc
add
and
nop
xor
add
push
cs
test
rcll
mov
add
add
sbb
xorb
jne
out
pop
rcrl
add
call
inc
and
and
add
loopne
dec
fdivl
testb
xor
add
or
and
std
push
movsl
outsb
lea
xor
add
pop
mov
gs
ret
shrb
mov
cmp
popa
add
jmp
add
lods
pop
push
cmp
mov
add
add
testb
add
push
sbbl
shlb
ja
jae
inc
or
cli
and
mov
jo
adc
pushf
add
inc
sub
fstp
and
add
or
add
push
push
cmpb
incl
loopne
add
lods
addr16
jp
inc
dec
push
rcll
cmp
and
lahf
pop
add
in
hlt
and
add
pop
rclb
daa
outsb
into
popf
ds
pop
movsb
sub
add
mov
xchg
pop
sbb
scas
jo
add
int3
cli
lods
fistpll
and
fstps
in
add
out
jmp
and
add
js
pop
xor
outsl
sbb
push
xchg
push
leave
pop
imul
add
bound
sub
loope
add
out
xchg
loopne
add
dec
stos
repnz
add
sub
shll
push
addl
rolb
xor
shl
push
shll
int
aas
lds
std
jbe
adc
xor
add
js
push
add
lea
or
lock
pop
ljmp
out
mov
orl
mov
jl
add
repnz
push
cmp
sbb
xchg
add
jno
int3
cld
add
mov
jnp
rcrb
imul
mov
sub
in
stos
and
testl
mov
fcoms
push
addl
out
sub
push
and
sbb
xor
adc
and
xor
inc
std
jno
inc
add
cmp
int3
addl
pop
push
pusha
mov
repnz
mov
repz
aas
xor
inc
mov
stos
leave
mov
add
jl
out
add
adc
pop
dec
xchg
mov
ficompl
out
push
sbb
xchg
sub
inc
add
inc
pop
not
cli
fsts
adc
inc
lret
or
lahf
xchg
in
and
add
inc
lock
push
loopne
add
cmp
in
out
pop
outsb
mov
dec
pop
out
add
sarl
je
fidivrs
cmpsb
add
xchg
pop
xorb
xchg
test
add
std
pop
dec
mov
push
out
sbb
xchg
adc
fiaddl
push
push
inc
and
add
xlat
jnp
faddl
sbb
inc
pop
mov
jge
add
cmp
orb
cmc
outsb
inc
lahf
cli
ficoml
xchg
add
pop
in
jns
hlt
rcrb
test
ret
push
ja
cld
cmc
add
xchg
mov
cmp
andb
or
add
roll
imull
lock
out
jo
add
subl
add
mov
or
iret
pusha
lods
sbb
sub
add
cmp
fbld
insb
inc
cmp
sub
aam
mov
loop
sbb
mov
data16
jle
and
add
sbb
aaa
int
jge
popa
pop
imulb
mov
in
inc
cmpsb
bound
loopne
rcrl
orb
aam
clc
dec
scas
fadds
jmp
sbb
xchg
push
arpl
xchg
aam
add
in
ljmp
push
mov
pop
xor
push
mov
test
xor
rcrb
pop
ja
pop
add
dec
add
imul
faddl
fiaddl
mov
sbb
nop
mov
dec
ret
pop
pop
xchg
add
mov
jo
add
xor
nop
pop
mov
fadds
sbb
insb
pop
mov
mov
add
push
cmp
iret
jecxz
jne
jle
popa
popl
and
jae
shlb
inc
cmp
mov
into
mov
test
sub
push
dec
lock
add
push
ss
loope
lods
shlb
lret
cmp
mov
mov
add
lods
dec
cmp
add
jge
negb
push
push
add
cwtl
fisttpl
cmp
push
cmpsb
lcall
mov
mov
fbld
jl
add
out
pop
jns
sbb
loop
add
xor
or
sbb
jmp
pop
in
mov
pop
out
outsb
shrl
jae
movsl
add
push
cmp
lock
je
xorl
cwtl
inc
cmp
fiaddl
and
inc
add
pop
pop
dec
mov
jb
sbb
mov
or
and
or
or
mov
sbb
gs
add
in
rolb
mov
aad
mov
sub
add
test
cwtl
xchg
enter
push
mov
jne
fnstcw
mov
ficoml
mov
add
sbb
add
cmpb
push
pusha
sub
sbb
loopne
add
std
rcrl
and
jg
adc
inc
mov
popf
lcall
push
mov
push
data16
call
jo
add
ret
dec
mov
mov
cmp
pop
icebp
xchg
dec
fsubrl
daa
add
xchg
pop
sbbb
insb
add
cmp
test
add
arpl
or
pushf
inc
loopne
add
repnz
add
sub
shlb
scas
add
dec
cltd
add
lcall
inc
call
push
leave
loopne
mov
dec
outsl
nop
xchg
cmp
and
xchg
add
mov
add
ljmp
push
jb
pop
xor
xchg
out
sub
aam
add
insl
mov
xorl
and
add
leave
sub
push
or
add
mov
and
test
pushf
pop
movl
mov
dec
gs
cmp
ja
mov
orl
cmp
jle
push
dec
jecxz
iret
cmp
scas
pfrsqrt
mov
call
jo
arpl
jp
add
jmp
cmp
add
inc
in
test
ss
pushf
sub
dec
out
leave
pop
fmul
inc
mov
inc
pop
or
xor
stos
push
clc
jecxz
dec
push
add
stos
dec
std
flds
cmpb
clc
imul
adc
jae
mov
icebp
add
sbb
inc
cmpsb
dec
outsl
dec
shll
stc
lret
sti
fdivrs
add
adc
lods
jge
jo
mov
ljmp
pop
loopne
push
scas
xchg
push
out
rcrl
inc
and
rcrl
pop
or
adc
sbb
add
push
and
add
aas
scas
pop
pop
pop
cld
in
mov
adc
push
push
add
imul
fidivs
inc
addl
in
dec
add
mov
xchg
add
and
jecxz
shlb
pop
test
lds
mov
sbb
xchg
or
int
in
mov
dec
add
jl
push
jg
faddl
xor
inc
popa
pop
pop
in
jo
add
xchg
lahf
movsb
adcb
aas
adc
insl
add
cmp
push
in
jp
in
and
pop
lahf
mov
xchg
fadds
jecxz
call
rcrb
add
fs
fld
add
mov
add
pop
sub
add
fmull
add
jecxz
and
adc
mov
jae
pop
add
cs
adc
mov
sahf
add
test
xchg
xor
incb
add
ret
mov
fcoms
addr16
nop
loop
imul
add
cmp
jnp
mov
pop
mov
add
mov
js
xchg
xchg
int3
xorl
lcall
scas
add
jl
das
sbb
or
rorb
out
daa
add
movsb
shl
xchg
divb
mov
mov
xlat
jb
lret
add
outsb
imul
add
repz
or
mov
sbb
in
add
push
mov
addr16
sub
adc
xchg
loop
call
add
outsb
push
enter
add
or
xchg
or
clc
cmp
sbb
xor
or
les
add
adc
add
jns
frstor
pop
xor
aaa
mov
sahf
outsb
repz
mov
add
loop
add
adc
addr16
jns
add
inc
lods
or
sbb
rolb
add
cmc
out
cmp
push
add
push
testb
add
bound
mov
adc
adc
and
mov
int3
xor
cmp
push
add
int
sub
pop
or
cld
pop
add
mov
pop
jo
sbb
add
cmpl
sidtl
dec
mov
pshufw
mov
pop
mov
mov
rolb
dec
loope
in
push
and
jg
xorb
push
xchg
cmp
inc
popf
push
lea
loopne
add
push
fbstp
add
cltd
mov
and
ss
mov
dec
aas
mov
fcmovu
add
push
lock
fsubs
add
roll
pop
mov
mov
scas
andb
sbb
clc
leave
add
nop
and
gs
scas
cmp
pop
mov
cmpsl
jg
sbb
out
pop
sbb
lahf
add
mov
lock
incb
inc
mov
ljmp
jecxz
adc
sbb
add
insb
sbb
cwtl
sbb
out
add
fnstcw
scas
push
cmp
mov
das
sub
add
or
fiaddl
je
xchg
test
dec
std
add
lods
and
add
dec
xchg
sbb
pop
sbb
and
rcrb
ljmp
or
lret
shlb
add
fsubl
pop
loopne
out
add
lea
and
sbbb
pop
popa
mov
inc
xor
mov
add
mov
sbb
outsl
imul
mov
cs
xchg
add
push
into
lds
add
jae
mov
dec
adcb
repnz
add
pop
pop
and
loopne
dec
cmp
push
loope
arpl
add
inc
add
push
jmp
mov
sti
daa
in
sub
out
jo
add
fwait
add
push
ret
pop
or
jp
inc
ud2
clc
dec
inc
pusha
add
or
xrelease
clc
sbb
fdivs
add
push
add
sbb
pop
pop
mov
mov
fcoml
add
add
jno
add
add
lea
sti
and
cmp
mov
jno
jo
add
sbb
adc
add
inc
daa
xor
pop
imul
xchg
in
fimuls
and
add
pop
mov
fs
sbb
push
jne
out
test
lret
pop
mov
in
inc
loopne
add
stc
mov
cmovs
or
jbe
add
cmp
mov
pushf
scas
popf
cmp
repnz
lret
lea
xor
inc
aas
movsb
sahf
pop
xor
arpl
cmp
fwait
sub
add
jno
or
jo
add
cmp
andb
cmpsl
add
mov
pop
xchg
push
iret
jne
int
pusha
clc
xchg
popa
push
and
je
pusha
dec
cli
mov
xor
mov
lret
in
mov
arpl
stos
das
loopne
inc
mov
mov
add
aad
sbb
movsb
icebp
adc
lea
push
imul
pop
adc
mov
mov
mov
mov
lea
testl
push
outsb
test
pusha
jo
add
pop
and
xor
lret
imul
sub
cltd
int
adc
mov
xor
add
push
fiaddl
inc
add
aam
orl
mov
push
das
cmp
inc
mov
push
add
xor
xchg
add
pushf
ja
pop
fs
add
insb
jmp
add
push
roll
xor
bound
push
ds
add
add
stc
inc
cmc
lock
dec
push
xchg
fistl
cmp
nop
roll
xchg
push
push
pop
and
pop
jns
add
cmpsb
add
mov
dec
mov
push
add
daa
and
add
jnp
or
pop
cmp
scas
add
ss
push
and
push
add
das
std
add
mov
xor
add
pop
hlt
pop
or
cmpb
cmp
add
inc
sarb
push
inc
sub
push
fdivrl
imul
adc
xchg
adc
pop
decl
xchg
cmp
xchg
xchg
in
mov
adc
stc
rolb
push
clc
adc
jle
inc
dec
aaa
add
add
icebp
mov
clc
enter
ds
call
cmp
inc
mov
xor
dec
jae
push
aaa
mov
adc
outsb
mov
stos
pop
xor
xor
sti
nop/reserved
xchg
mov
adcb
daa
pop
xchg
jbe
jnp
out
jo
push
aas
into
nop
add
subb
addr16
add
es
xchg
mov
push
adc
js
std
add
cmp
inc
mov
jmp
bound
add
sub
xor
pop
mov
shlb
pop
adc
add
or
add
add
push
mov
add
clc
arpl
or
incb
dec
imul
xor
push
aaa
mov
inc
out
dec
jecxz
int3
inc
inc
data16
add
repnz
mov
pop
in
adc
decb
andb
add
sahf
pop
adc
fdiv
adc
inc
cmp
inc
mov
add
dec
aas
scas
add
pop
push
int3
push
fadds
jle
cmp
out
mov
dec
mov
insl
add
push
hlt
cmp
cs
sub
add
rcll
addl
pushf
daa
jmp
add
cmp
negb
inc
pop
add
and
lcall
sub
mov
rolb
loope
mov
xor
mov
add
cwtl
mov
loopne
sbb
mov
add
or
out
js
cmc
xchg
sub
and
pop
push
push
loopne
addb
inc
fidivrl
pop
add
mov
int
pop
flds
adcb
test
popf
shll
xorl
inc
popa
cwtl
inc
add
clc
icebp
mov
add
dec
inc
orb
jp
lods
add
mov
add
test
pusha
loope,pt
add
or
rcll
and
mov
adc
loopne
mov
mov
movsl
lea
loopne
add
jg
movsb
into
mov
push
or
ds
outsl
inc
push
push
mov
pop
leave
sahf
sar
std
out
or
jmp
cmp
stos
mov
pavgb
add
mov
cmp
or
add
outsl
xchg
nop
push
or
sub
adcb
cmc
test
in
xchg
cld
fwait
add
jp
outsb
or
std
cmp
jmp
and
mov
pop
es
push
and
mov
sub
xchg
mov
faddl
sub
aas
mul
lahf
add
push
push
pop
cwtl
add
movsl
imul
pop
addb
add
cmpsb
sbb
add
xchg
and
add
jle
fmull
add
leave
or
roll
pop
loope
jno
add
jae
and
mov
jge
cmp
pushl
dec
add
je
testl
add
add
sub
mov
fs
mulps
repz
in
imul
cmp
mov
jo
add
jp
or
mov
mov
cwtl
pop
xor
add
shrb
shlb
inc
mov
jecxz
mov
flds
cmc
cmpsl
add
add
sbb
aam
add
sub
inc
lret
mov
jge
outsb
mov
repz
dec
dec
or
xor
push
pop
test
in
sub
rolb
push
push
fistpl
ljmp
inc
jg
add
cmp
jmp
aam
dec
sbb
int3
add
scas
roll
adc
push
push
mov
push
push
xchg
and
arpl
jo
add
pusha
frstor
xor
pop
sbbl
push
loopne
add
test
je
orb
mov
add
xchg
call
cld
xchg
push
add
mov
jae
mov
mov
dec
jp
or
xchg
mov
test
and
add
mov
push
cwtl
sbb
add
fdivrs
add
flds
hlt
add
push
imul
out
mov
inc
mov
mov
shl
jmp
jl
imul
cmp
divb
bound
mov
sbb
clc
out
pop
add
mov
mov
add
in
fcoms
flds
xor
cmp
jle
cwtl
xchg
add
or
aam
sti
add
sbb
mov
cmp
out
stos
das
add
jo
add
out
mov
add
xor
pop
add
loopne
push
and
jbe
sub
add
sbbb
cs
add
jnp
mov
stos
mov
mov
add
cmc
push
push
xchg
in
dec
sbb
or
mov
add
fnstenv
xchg
add
cmpsb
mov
loopne
add
inc
es
adc
pusha
fldl
dec
ljmp
inc
mov
add
xchg
sbb
add
push
add
sub
jnp
orb
sbbb
imul
adc
dec
je
lods
pushf
push
add
cmp
pusha
data16
jo
lock
sbb
add
cmp
mov
add
jmp
cmp
sarl
inc
jmp
sbb
add
xchg
mov
inc
addl
cwtl
test
in
cmc
ljmp
add
cs
push
rcl
push
pushl
popa
movsb
bound
add
sarb
ret
and
ror
hlt
fs
aas
faddl
xchg
cltd
out
es
add
or
adc
mov
sbb
popf
and
mov
add
enter
or
rcrl
jl
cmc
pop
pop
push
enter
pop
add
in
xchg
mov
mov
jecxz
insl
add
xor
xlat
add
xchg
scas
push
test
xchg
and
sbb
add
mov
fnstsw
jmp
cld
mov
inc
std
daa
sbb
jbe
test
or
das
pop
stos
push
adc
aas
jle
sub
and
dec
ret
fsubrs
mov
icebp
pop
push
push
jmp
pop
mov
pop
xor
and
inc
add
sub
add
add
into
loopne
add
lods
xchg
das
add
lock
fldl
pop
dec
jne
pop
add
dec
call
mov
push
lahf
loopne
ffreep
add
or
push
enter
add
cmp
dec
sbb
adc
jae
adc
enter
pop
push
pop
ret
jo
mov
mov
jb
mov
push
add
add
divb
cmpsb
add
jb
sbb
mov
psrlw
mov
sub
jo
out
add
xchg
aam
adc
push
hlt
push
int3
sbb
sub
out
daa
and
mov
lret
inc
ljmp
ljmp
jo
jo
pop
add
arpl
push
jne
scas
out
pop
ja
bnd
into
xlat
add
inc
xchg
les
xorb
adc
jb
inc
or
popf
xchg
xchg
ficompl
add
mov
pusha
or
or
data16
inc
inc
lahf
test
out
xchg
shll
adc
aad
mov
dec
or
add
mov
and
aaa
xchg
outsb
aad
cmpsb
jmp
hlt
loope
lock
push
push
jae
testl
mov
sarb
add
stos
and
or
lret
xor
pop
pop
and
mov
mov
popl
arpl
push
test
add
and
repz
adc
sub
jo
add
lods
cmp
xchg
push
dec
dec
sub
lret
js
add
jbe
gs
pop
mov
dec
sbb
mov
scas
add
mov
pusha
loopne
add
movsb
aad
xor
add
cmp
sub
rcrb
add
mov
xlat
adc
gs
fcmovne
cmp
pop
sub
cmp
insb
add
dec
add
js
fdivl
cmp
push
mov
mov
rorb
jae
js
nop
cmpsb
add
pusha
add
and
add
pop
mov
jl
jp
add
mov
fisubs
movsl
clc
add
cmp
or
xor
in
mov
or
loopne
add
pop
test
dec
adc
and
aaa
inc
mov
add
rcr
mov
mov
lret
add
mov
xchg
test
mov
adc
sarb
mov
add
add
push
or
pcmpgtw
cmp
add
adc
add
xor
add
sbb
mov
add
fstpl
lahf
repnz
rorl
push
rcr
sbb
iret
ja
mov
aaa
addr16
pop
adc
add
mov
jge
xor
sbbl
pop
sbb
testb
nop
aaa
repnz
jp
lods
adc
xchg
outsl
and
add
je
in
xor
imul
pushf
loopne
sub
adc
add
lods
jne
jo
pop
add
push
jmp
mov
rolb
add
inc
xor
mov
jge
pop
cmpsb
add
xchg
addl
shr
scas
test
sarb
add
cwtl
dec
loopne
add
adc
shrb
dec
rcr
add
or
add
add
andb
and
es
shlb
or
dec
adc
enter
fildl
sarb
or
add
sbb
popa
add
nop
add
cwtl
int
add
pop
mov
mov
rolb
pop
cmp
fwait
cltd
add
bound
xchg
jne
aam
mov
xor
fdivrl
jo
add
negb
inc
inc
cmp
pop
add
sub
sbb
subl
mov
icebp
xor
pop
pop
rclb
add
dec
xchg
mov
add
lea
jnp
and
cmp
push
xlat
aam
add
mov
mov
jg
pusha
cmp
add
pop
and
lods
mov
jbe
xchg
es
mov
jge
mov
orl
out
xor
fidivrs
add
and
push
daa
mov
jnp
add
mov
pushw
push
mov
fnsave
sbb
mov
and
pop
pop
cmp
fadds
push
push
jle
subb
sbb
shll
add
notb
mov
pop
mov
insb
dec
pop
push
add
xlat
pop
cmpb
imul
ss
xor
add
arpl
mull
sbb
in
cld
adc
daa
dec
add
xchg
add
inc
repz
es
mov
sub
fsubrl
push
mov
add
jecxz
fmuls
mov
les
add
or
imul
popf
stc
sarb
jge
test
inc
mov
inc
lea
rorb
mov
fstpt
into
cli
pop
call
add
roll
sub
sar
sahf
cli
add
daa
das
fsubl
lock
xchg
add
or
cmp
add
push
out
dec
sbb
jo
add
lods
jmp
popf
lds
lods
dec
out
add
fbstp
ds
mov
add
or
dec
push
dec
add
je
into
adc
mov
and
push
bound
sti
add
fdivs
jne
pusha
mov
add
jo
or
call
icebp
ltr
cmp
add
nop
cmp
push
lea
dec
jno
add
cwtl
and
out
fnstsw
add
dec
cwtl
lret
bound
lods
mov
call
sbb
sub
scas
into
inc
inc
jecxz
aam
mov
cmp
xchg
mov
and
stos
mov
mov
lods
cmp
adc
jo
add
es
xchg
hlt
push
insl
aam
cmp
add
pop
arpl
pop
dec
push
jns
inc
fwait
loopne
add
lret
js
pop
test
jnp
shr
fucom
adc
pop
ret
xchg
in
lcall
ss
or
imul
and
nop
lea
jl
cmpb
orb
push
int3
add
mov
lret
add
loopne
xchg
mov
or
vmwrite
les
push
inc
fidivrl
add
pop
fsub
sbb
mov
dec
bound
cmp
cmc
add
pop
call
dec
add
aad
sbb
fisubl
adc
add
add
inc
push
xchg
add
and
add
mov
xlat
loopne,pt
xchg
sbb
pushf
arpl
add
mov
pop
cmp
mov
in
jo
jmp
add
int
ss
pop
push
scas
pop
jge
xor
sub
push
or
test
push
bnd
add
xchg
mov
xchg
jmp
adc
push
add
dec
add
pop
shl
pusha
sbb
add
les
stc
jp
xor
test
xor
push
adc
movsb
inc
int
je
nop
dec
pop
pop
jle
add
mov
repz
adc
jne
cmpsl
popf
das
pop
outsb
gs
mov
jp
mov
dec
dec
adc
dec
dec
test
mov
and
into
movsb
add
cmpb
and
in
add
movsl
push
test
in
cmp
add
mov
jb
sbb
fs
clc
add
dec
adcb
mov
add
sbb
push
pop
cmpsb
shlb
push
sbb
inc
xor
xor
mov
add
mov
ror
add
test
sub
add
dec
inc
cmp
or
add
pop
dec
jge
dec
idivb
or
and
jo
syscall
dec
bound
out
andb
decb
sub
pusha
adc
insb
sbb
fs
mov
mov
arpl
fwait
add
add
subb
outsb
sbb
fstpl
mov
jbe
dec
test
add
pop
int
jo
aam
or
inc
hlt
pop
and
add
jbe
mov
add
or
mov
jb
jge
orb
fs
pusha
mov
adc
xchg
dec
xchg
and
push
add
sub
add
lret
add
xchg
mov
nop
xor
add
and
data16
inc
and
ret
popa
aam
jg
dec
inc
add
sahf
inc
iret
loop
adc
out
adc
mov
test
jns
inc
pop
mov
add
mov
xor
add
imul
repnz
push
aam
dec
add
cmp
adc
cmp
push
pop
xchg
rcrl
xor
mov
nop
mov
or
dec
ja
nop
popl
push
xchg
shl
add
stc
add
jl
and
push
cld
and
gs
inc
das
xorb
pop
in
fstl
add
lret
push
add
cmp
adc
pop
push
push
dec
cld
xchg
cmp
ja
jns
jmp
movsb
in
outsb
outsl
add
xor
and
loop
rcrb
dec
push
mov
cmp
inc
mov
add
and
add
mov
add
mov
pushf
sldt
cmp
pop
dec
xor
add
cld
cmpl
push
add
loopne
shl
jb
sub
dec
mov
mov
cmp
sub
dec
and
inc
pusha
insb
lds
sub
sbb
dec
add
test
cmp
fistpll
push
mov
mov
mov
incl
scas
nop
push
cs
mov
sarb
add
pushf
cmpsb
sbb
mov
incl
cli
out
dec
inc
sub
and
jmp
dec
add
addr16
cltd
repnz
rol
adc
mov
lds
cmpb
fwait
ds
rolb
in
jle
add
clc
stc
push
loopne
add
push
addb
cmp
data16
andl
sbb
inc
add
cmp
adc
lock
ljmp
mov
mov
jns
dec
out
add
xor
aaa
add
cmpsb
mov
pop
ja
loopne
or
int
push
mov
xor
push
and
out
add
add
aas
xor
push
xor
add
mov
mov
movsl
adc
push
cmp
mov
jo
add
mov
addl
lahf
sub
jbe
add
movsl
divl
cmp
sub
jae
sbb
push
pop
xchg
xlat
enter
adc
pop
mov
sbb
dec
and
fwait
sahf
push
push
rcrb
push
daa
in
sti
cmp
add
jge
add
pushf
or
add
and
mov
mov
divl
add
test
pop
push
movsl
out
lods
add
dec
les
test
or
xor
push
repz
ret
jg
sbb
and
es
mov
add
dec
add
push
sub
inc
sbb
addb
dec
and
mov
add
sahf
sarl
imul
dec
dec
test
arpl
loop
add
sbb
push
cld
add
add
icebp
leave
in
add
jnp
pusha
imul
push
push
aad
dec
mov
loopne
add
mov
test
and
mov
and
cmp
sarb
xlat
insb
jns
es
jbe
push
and
mov
mov
push
jg
xor
push
inc
jmp
out
add
stc
lods
add
std
movb
mov
push
pop
or
push
shrb
cmp
sbb
cmp
inc
addb
cmpsl
jecxz
pop
add
lds
movsb
push
jae
movb
nop
stc
sbb
push
in
fiadds
call
push
inc
add
pop
cmp
mov
sahf
jge
gs
enter
xor
push
jmp
jne
sbb
daa
roll
or
rcrl
add
cmc
mov
inc
test
in
adc
add
sub
je
add
mov
add
cwtl
cld
pop
fs
loope
cmp
push
add
aaa
jge
fdiv
addb
cmp
mov
add
sar
add
add
sub
add
outsl
jo
dec
sbb
rcl
cld
cmp
add
adc
shrb
or
cmpsb
jns
jo
adcl
push
imul
add
out
fimull
or
push
inc
ja
push
adc
jle
ret
inc
insb
lds
push
sbb
js
add
dec
pop
and
das
or
lcall
mov
adc
jle
mov
mov
enter
sbb
cmpsl
adc
xchg
and
add
js
addb
loopne
and
nop
pop
fwait
hlt
aas
mov
insb
sub
pop
inc
jae
add
xor
sub
push
push
sbb
shlb
insl
add
xor
test
cmpsb
mov
rclb
push
pushf
pop
aaa
adc
pop
in
mov
sahf
insl
add
faddl
add
fldenv
out
lret
add
mov
data16
jbe
jp
je
jae
add
adc
dec
add
ficomps
xchg
ja
inc
orb
fmuls
xchg
loopne
jns
lods
add
out
or
clc
add
outsl
push
or
cmp
add
stos
mov
lods
mov
cmp
enter
add
push
in
fisttpll
xor
std
xor
jge
add
inc
test
pop
stos
or
repz
add
push
or
push
inc
dec
mov
push
mov
mov
xor
add
and
fldcw
lret
xlat
in
jo
add
arpl
mov
dec
cmp
add
lret
sbb
faddl
movsl
add
mov
push
dec
push
adc
and
shlb
add
push
jbe
sub
or
pop
xorb
xchg
adc
dec
jl
and
or
adc
pop
lods
mov
sarb
cmp
addb
pop
mov
nop
or
cmp
andb
inc
mov
add
push
in
cltd
add
add
enter
add
out
nop
insb
pop
test
mov
add
lret
loopne
in
sarb
mov
pushf
mov
mov
mov
test
fsubp
inc
add
adc
int
div
shrb
into
rcrl
sbb
push
test
hlt
mov
xchg
sbb
inc
add
xor
push
lods
jmp
jo
add
and
add
out
jmp
pop
cmc
jp,pn
das
add
xchg
push
add
add
in
pop
aas
rcr
cmp
add
pop
scas
add
inc
mov
adc
lcall
out
add
inc
jl
add
es
mov
inc
pop
aam
adc
xor
xor
mov
les
xchg
xor
xor
sub
lret
add
and
in
lods
mov
arpl
imul
cmp
pop
push
xchg
sti
shl
shlb
add
mov
dec
add
out
adcb
sbb
out
mov
lds
cmp
loop
and
mov
inc
add
sbb
mov
sbbb
es
ret
notl
mov
scas
out
mov
add
and
nop
push
xchg
mov
mov
add
scas
xchg
add
cmc
jb
dec
mov
push
dec
fsubs
add
mov
jnp
mov
in
add
addb
jmp
push
test
adc
sbb
lock
incl
mov
test
dec
sub
xchg
in
loopne
add
mov
test
mov
js
add
jne
call
push
inc
iret
icebp
jo
mov
pop
add
leave
aaa
jge
lock
pop
sbb
loopne
add
mov
js
pusha
or
les
and
call
repnz
sbb
mov
mov
or
mov
add
in
dec
inc
pop
inc
push
insb
inc
or
push
cmp
inc
jmp
stos
sahf
loop
int
rclb
add
push
add
mov
shlb
add
out
icebp
inc
sti
bound
add
ljmp
add
mov
cmp
jo
add
add
jo
push
xor
int3
aam
sar
adc
movsb
sub
and
add
or
push
add
xchg
add
data16
dec
pop
sub
add
aam
cmp
lahf
fwait
jo
push
jmp
push
mov
jp
push
dec
dec
add
jecxz
cld
mov
add
jnp
push
inc
orb
add
shrb
add
and
loop
or
lret
icebp
aam
and
ja
sbbb
xor
or
aad
repz
js
icebp
pusha
shlb
xor
xchg
add
jecxz
mov
sub
iret
add
dec
mov
add
add
loope
push
aad
xor
mov
repnz
add
loop
sbb
add
sahf
push
or
cmp
add
ret
mov
lods
fisttpll
mov
mov
xchg
loopne
mov
push
sbb
adc
pop
jb
gs
inc
jecxz
addb
les
aaa
test
add
mov
jbe
dec
movsb
add
adc
or
xor
mov
repnz
insb
add
icebp
or
inc
ret
mov
iret
add
mov
in
add
pop
mov
or
add
push
pusha
stos
jle
add
push
bound
insb
orb
or
scas
iret
int
sbb
add
je
outsb
cli
into
lcall
or
lea
pusha
xchg
lret
xchg
test
rolb
adc
sub
fmull
and
test
cld
jp
mov
out
lods
xorl
loopne
jmp
or
call
bound
shll
std
jp
imul
aas
mov
sbb
mov
xchg
add
mov
cmp
out
pop
lahf
dec
out
jno
andb
test
jmp
adc
xchg
xchg
pop
testb
fdivrs
add
mov
pop
pop
ret
dec
sub
popf
add
jmp
cmpsl
add
pop
inc
xor
sarb
jo
ljmp
rolb
sahf
lock
dec
rorl
mov
mov
add
mov
fsubrs
xor
xor
add
inc
dec
mov
add
cmp
add
and
int3
xor
add
adc
fsubrp
sbb
cmp
pop
andl
pop
fadds
inc
insl
or
add
lcall
add
pop
popf
adc
shll
cmpsl
or
fnstcw
stos
xchg
scas
push
and
in
iret
add
inc
push
icebp
aaa
sbb
adcb
push
add
sub
pushf
pop
jle
add
pop
call
call
in
call
pop
push
xlat
mov
pop
jne
push
add
dec
movsb
sbb
mov
cmp
push
loopne
pop
std
insl
out
dec
add
cmp
dec
xchg
nop
pop
sbb
loop
add
fnstsw
stos
aas
pop
or
ds
stc
pop
lods
inc
les
incl
cld
loopne
lods
xlat
mulb
or
fmulp
aaa
out
add
loopne
pop
lret
add
fidivl
add
andb
push
sbb
add
cwtl
or
loopne
add
inc
out
cmp
jg
inc
outsb
add
add
repnz
leave
dec
dec
mull
add
sbbb
enter
jns
pop
aad
cli
add
add
test
jno
add
testl
clc
jp
adc
jmp
outsl
lods
jo
sbb
pusha
inc
out
mulb
add
jp
ret
inc
std
sub
shr
add
or
mov
fwait
inc
cmp
in
out
and
inc
add
xchg
pop
mov
mov
mov
or
sbb
pop
mov
cli
xor
scas
nop
rolb
mov
cld
negl
ret
add
cwtl
stc
mov
lret
add
add
sbb
nop
fsub
mov
pop
lret
in
xchg
jnp
mov
xchg
hlt
push
mov
add
pop
push
mov
out
nop
pop
adc
add
repnz
andl
in
dec
sarb
jge
add
jns
addr16
cltd
add
cs
jge
add
or
mov
hlt
add
jle
mov
repz
add
add
inc
xchg
push
mov
push
iret
loopne
pop
jns
sbb
cmp
push
insl
das
xorl
jle,pn
ss
inc
sbb
push
rclb
cltd
out
add
add
sub
dec
vpmacsdd
in
sub
adc
fidivl
lds
or
loopne
or
xchg
sub
je
push
mov
loop
mov
repz
inc
roll
sti
add
andb
aaa
inc
movsl
ret
inc
add
pop
faddl
adc
fnstsw
mov
les
xor
dec
imul
scas
fmulp
or
aam
enter
sahf
addb
add
pop
mov
add
push
loopne
sub
scas
add
addb
cmp
mov
mov
sti
pop
popa
ret
gs
jae
add
jb
flds
iret
add
int
push
addb
jno
notb
add
xor
lods
push
add
or
mov
add
push
mov
sub
rcr
dec
out
add
jo
cmc
pusha
jle
mov
jmp
in
mov
pop
ljmp
xor
fadds
lret
add
fwait
and
inc
in
add
cmp
sub
inc
mov
xchg
int3
inc
cld
add
out
and
ret
and
inc
push
add
add
popf
pop
sbb
int
or
andl
ja
add
pop
add
jnp
fldcw
xchg
xchg
push
xchg
sbb
inc
mov
sbb
push
cmpb
ret
and
cli
sbb
xchg
add
adc
add
mov
shl
or
loopne
add
jg
test
cmp
rolb
add
movsb
pop
insb
aad
andb
mov
sarb
add
dec
cmp
add
dec
pop
stos
dec
bound
ljmp
add
push
lcall
and
call
nop
adc
mov
inc
in
adcb
fiadds
fisubl
gs
add
jb
add
push
hlt
sbb
addb
rcrb
xchg
xchg
lea
push
or
outsl
andb
mov
xchg
sub
xor
jns
sbb
push
lcall
outsb
add
ds
push
jo
pusha
call
mov
xor
pop
xchg
push
jecxz
sub
scas
add
popa
add
push
xchg
loopne
add
mov
loop
mov
lret
pop
xchg
sbb
mov
rep
shrb
push
add
xchg
pop
cld
push
rolb
push
add
sub
sbb
add
pop
cmpsl
adc
ja
nop
pop
inc
jecxz
or
pop
sub
pushf
popf
repnz
mov
inc
jecxz
mov
sub
lock
fcmovbe
test
jmp
jae
clc
add
sbb
lahf
sub
adc
add
je
sahf
sbb
add
in
test
mov
sbb
push
jg
repnz
xchg
add
mov
push
rcll
jae
dec
push
adc
int3
sub
adc
or
sub
inc
sbb
sbb
xor
pusha
xor
add
push
jae
sahf
adc
jl
or
push
inc
or
call
push
cmp
or
or
data16
push
sbbl
mov
cmp
cmp
cmpsl
add
push
mov
mov
inc
add
mov
add
xor
fcmovnbe
call
inc
xchg
nop
shl
addb
stc
add
fmull
scas
jmp
jo
sbb
test
bswap
pop
jmp
cmp
clc
pop
jne
ss
add
sbb
push
adc
loopne
add
roll
clc
or
add
push
sbb
mov
adc
aam
cli
pop
cvtdq2ps
inc
inc
je
add
xor
imull
repz
subb
loopne
pop
and
dec
inc
add
push
jecxz
sbb
xlat
add
push
jae
mov
add
roll
bswap
add
adc
stos
add
in
pop
sbb
dec
jbe
loopne
test
pop
add
add
jg
xchg
add
push
cld
xchg
lods
test
jne
sti
add
push
je
mov
jns
add
lods
andb
adc
stos
jmp
pop
pop
mov
sbb
inc
jecxz
and
inc
fnsave
inc
cmp
add
pop
loop
add
or
decl
je
add
add
lods
jmp
pop
add
insb
pop
inc
add
mull
test
out
loopne
and
adc
mov
add
cmp
pop
add
push
mov
and
mov
add
stc
pop
pushf
addb
or
rolb
gs
add
adc
xchg
pop
adc
nop
cmpsl
js
adc
or
add
push
add
sbb
int3
add
loope
jmp
inc
adcb
les
or
lods
or
xchg
add
pop
or
clc
test
cmpb
inc
adc
jo
xor
or
and
dec
pop
xchg
mov
cld
punpckhdq
xchg
add
and
bound
sti
xor
scas
add
pop
sbb
push
push
jl
les
dec
or
fwait
inc
push
in
add
push
cmp
or
push
mov
andb
push
add
pushf
and
add
push
or
hlt
and
cmp
xor
ret
sbb
sbb
cmp
or
adc
sub
and
or
pop
jno
ret
into
data16
xor
cmovnp
inc
or
dec
aaa
adc
and
or
sbbl
sub
in
cmp
xchg
add
mov
xchg
add
mov
push
xchg
xor
in
mulb
in
cld
add
mov
cld
dec
lock
inc
movsl
pop
data16
sbb
ret
dec
and
inc
jo
fs
add
add
mov
add
push
adcl
pop
rolb
sbb
nop
and
pop
mov
inc
adc
mov
jae
or
test
fs
mov
add
or
mov
xor
enter
loope
inc
and
dec
cmp
out
add
or
rolb
addr16
leave
adc
add
femms
xlat
and
add
pusha
jle
jno
sahf
cltd
sub
adc
test
mov
daa
and
lods
add
test
sarb
adc
cwtl
bsr
andl
loop
out
popa
pusha
dec
pop
mov
lock
add
push
dec
push
inc
ret
leave
loop
pop
cmpb
jb
inc
enter
pop
add
or
insb
nop
rcll
pop
add
and
rol
or
add
fists
test
cltd
js
mov
orb
add
sbb
add
xchg
adc
xchg
jb
add
dec
sbb
pop
mov
pop
add
xchg
cmp
mov
sub
mov
nop
jmp
add
add
fwait
add
notb
shrl
rclb
sbb
inc
push
sub
lock
mov
adc
adc
push
cmp
jecxz
loopne
mov
fstl
cmc
int3
or
call
pop
jl
call
popa
push
or
adc
shl
out
jl
add
cmp
jmp
cmp
es
dec
xchg
add
lret
out
add
push
push
call
mov
add
inc
sarl
sub
dec
xor
fs
add
dec
out
xchg
lret
cmpb
movsb
fsubs
insl
mov
mov
adc
pop
dec
add
mov
mov
sub
and
clc
jns
cwtl
mov
sub
add
sub
dec
and
fwait
popa
sub
gs
rclb
jl
add
mov
lcall
mov
or
or
jb
outsl
add
je
mov
add
mov
test
add
xor
sarb
cmp
and
xor
pushl
add
inc
es
testl
xchg
cmpsb
subb
addr16
inc
test
fsubl
pop
fisttpll
and
pop
pop
mov
aam
and
sub
or
imul
divl
mov
or
xor
test
pop
dec
xlat
dec
mov
lea
add
dec
mov
xor
add
insb
and
mov
cmp
push
mov
jb
adc
hlt
js,pt
add
fdivrs
jns
sbbb
lods
lock
add
les
push
xchg
mov
sub
insb
lret
add
out
inc
je
sahf
or
data16
inc
mov
daa
add
jp
leave
clc
fnstcw
lcall
xchg
fs
pop
aam
mov
not
adcb
jbe
js
lea
loopne
movsb
or
mov
add
scas
aam
and
leave
add
dec
mov
rcrb
shll
mov
test
loop
add
and
cltd
add
dec
pop
sub
add
mov
rcrl
imul
pop
jp
inc
lods
shlb
cmpsb
xchg
xor
adc
dec
or
add
sbb
pop
outsb
add
inc
int3
shlb
les
and
add
hlt
adc
loop
es
pusha
jmp
es
les
mov
adc
xchg
or
nop
xor
pusha
ljmp
adc
ja
ret
and
js
fstpl
xchg
add
aam
aaa
inc
std
mov
cltd
push
push
out
shlb
add
or
faddl
int3
pop
cmpb
mov
add
in
jb
pop
mov
lock
cmp
push
xchg
icebp
pop
adc
add
jp
leave
adc
jnp
mov
cmp
cmpsl
sbb
addb
mov
xchg
popa
jae
add
adc
pop
jp
push
rcr
fldenv
nop
sahf
je
cmp
pop
add
push
pop
cmp
pop
gs
rclb
pushf
in
test
stc
es
adcb
mov
cwtl
xlat
add
add
loopne
ljmp
jno
and
pop
test
and
add
mov
cld
mov
push
adc
mov
or
fucomp
push
movsb
cld
icebp
pusha
loopne
add
dec
and
in
aam
inc
cmp
filds
cmp
add
xor
inc
aas
mov
add
aaa
add
mov
sub
add
mov
fistl
mov
das
or
call
xchg
lds
pusha
xchg
add
mov
cmp
add
sub
cmp
add
pop
sub
or
add
roll
pop
xchg
lret
clc
inc
cmp
movsl
scas
clc
dec
loopne
enter
push
frstor
popa
pusha
jmp
les
pop
add
and
dec
xchg
sbb
lret
push
inc
dec
jo
add
lock
push
add
adc
repnz
sub
inc
xchg
mov
cld
and
dec
and
loopne
jbe
ret
add
jle
dec
cmp
subb
jl
mov
or
shl
pop
call
adc
xchg
dec
xchg
jbe
sub
cs
fs
sub
jae
mov
xor
inc
in
sub
mov
rorl
bound
out
cld
pop
in
fcomip
inc
inc
xchg
hlt
pop
jnp
jl
aam
push
sub
jmp
add
in
hlt
mov
pandn
rorl
sub
and
inc
add
mov
pusha
pop
ja
pop
and
xor
jp
xchg
ficomps
add
jmp
lea
popf
mov
sub
nop
push
lret
andb
sub
loopne
pop
rclb
pop
cmp
add
fdivrs
xchg
and
sbb
insl
and
cmp
dec
cmp
xor
rcll
jo
add
mov
mov
add
and
aad
rcrb
adc
jle
sub
push
pop
call
lods
in
mov
enter
jo
aas
aas
pop
push
cmp
sbb
inc
xor
mov
xorb
inc
mov
push
dec
and
adc
jp
iret
add
fidivs
int3
cmpsb
add
aas
xor
inc
adc
scas
add
fsubr
lds
enter
jmp
mov
inc
add
mov
push
adc
ds
and
mov
test
dec
pop
shll
adc
push
int3
add
mov
cmp
je
mov
add
add
enter
add
pop
lods
cwtl
cld
inc
mov
add
dec
sahf
repz
adc
jo
add
cltd
sbb
jle
mov
xchg
adc
dec
jo
xor
ds
dec
lcall
xchg
inc
mov
push
rcrl
cmp
sbb
or
add
pop
xchg
mov
and
push
leave
cmpsl
sbb
cwtl
add
cmpsb
xor
jne
xchg
adc
pop
jb
and
mov
add
mov
movsb
pop
dec
cmp
xlat
xchg
inc
add
fdivrp
ret
roll
arpl
data16
push
rorb
bound
mov
inc
mov
cmp
negb
pop
xchg
pop
mov
js
cmpsl
flds
cmp
cld
das
jo
sub
add
adc
leave
add
cmp
enter
push
add
lock
mov
mov
add
imul
ja
lret
pop
or
fs
xchg
cmp
pop
outsl
bound
loop
dec
add
js
or
sbb
cld
sub
jae
add
cmp
push
addb
jb
insb
cltd
adc
pop
add
jecxz
mov
add
sarb
mov
xor
and
repz
add
dec
into
mov
sub
add
fs
xor
push
add
fmull
pop
mov
sbb
pop
rolb
add
dec
dec
ds
orb
jp
pushf
je
add
cwtl
call
pop
add
or
inc
cmp
xchg
mov
and
rolb
inc
fisubrl
jo
cwtl
out
js
pop
loopne
or
mov
jp
push
push
add
xlat
cmp
or
and
jb
out
xor
aas
sbb
movsb
je
sbb
lahf
add
or
push
sti
lds
add
jno
jle,pn
pop
fstpt
mov
das
dec
dec
fimuls
xchg
lock
inc
sub
insb
jle
or
cmp
pop
subb
fadds
add
adc
repz
loopne
ficoms
mov
add
jle
enter
loop
dec
leave
out
aam
leave
or
add
pop
test
xchg
push
cwtl
test
dec
cld
enter
insb
dec
xchg
cmp
adc
push
sub
pusha
movsb
cmp
and
leave
cli
inc
bound
push
push
add
imul
jmp
add
and
push
add
movsb
sub
xchg
mov
call
int3
call
add
scas
mov
shl
dec
lret
notb
add
pop
repnz
push
pop
add
bound
repz
pusha
pop
xor
add
outsl
test
push
jl
mov
popa
and
pop
lds
dec
in
lock
cmp
test
adc
adc
add
bound
xor
adc
fsubr
or
adc
pusha
aam
add
add
lea
test
aad
add
pusha
sar
cmpxchg
mov
fistl
xor
xchg
mov
notb
add
add
nop
jno
adc
and
xchg
pop
gs
sub
and
cmp
rcr
sbb
and
insl
aam
ljmp
enter
push
aam
xchg
mov
and
call
inc
dec
sbbl
mov
add
or
push
adc
enter
je
pop
fstps
sub
repnz
mov
xor
cmpsl
aam
dec
xchg
jnp
pop
lret
gs
je
dec
lds
xchg
pop
hlt
lret
sub
jp
bound
je
cmp
fnstsw
lds
mov
jns
inc
out
dec
pop
das
add
aaa
sub
cmpsl
test
cwtl
sbb
sbb
add
fsub
push
dec
add
jns
cmc
test
movsb
ss
pusha
mov
mov
jno
bnd
add
xor
test
add
pop
add
sub
lret
rorb
mov
mov
movsb
lret
mov
jo
pop
xchg
add
add
lock
pop
idivl
mov
addl
cld
roll
stc
mov
adc
lods
xchg
movsb
in
add
sbb
fbstp
cld
sbb
xchg
pop
mov
pop
divl
hlt
inc
sub
shl
add
js
mov
mov
pop
call
pop
shll
dec
and
inc
insl
mov
add
pop
add
in
dec
call
push
jl
and
mov
jo
pop
fcomps
test
or
mov
mov
enter
shl
xchg
xor
pop
jb
cmp
mov
xor
sub
cwtl
fs
jo
stc
add
and
je
lods
push
and
adc
and
sbb
pop
imul
imul
add
lcall
mov
mov
aam
lret
dec
lods
shl
and
daa
fcoms
jne
int3
inc
inc
add
cmpsb
or
idivb
add
andb
jo
push
mov
dec
mov
jbe
loopne
sti
sub
ljmp
jmp
adc
sti
fdivl
aam
rolb
adc
and
js
xor
push
ret
mov
pop
cmp
and
hlt
mov
dec
add
and
xchg
sub
jo
mov
or
cmp
dec
pop
movsl
int3
lret
das
add
mov
push
or
pop
push
fadds
fdivs
lock
adc
push
push
push
fadd
outsb
bound
mov
sbb
adc
sbb
inc
xchg
inc
sbb
fisttpl
call
movsb
add
sti
insb
pop
pop
dec
cmp
es
in
pushf
sbb
pop
mov
or
add
ljmp
fwait
dec
xor
les
insb
add
push
and
in
adc
adc
xchg
jo
jle
or
cmpsb
loope
xchg
sub
push
roll
ret
stc
or
insl
in
add
out
pop
add
icebp
lahf
in
pop
pop
add
add
shl
sbb
loop
test
imull
lock
mov
cmp
sarb
fadds
inc
insb
ljmp
dec
add
xor
xor
push
inc
popf
add
cmp
inc
fstps
pop
add
cmp
add
or
add
adc
dec
add
js
pop
xchg
dec
cld
dec
xor
int3
pop
and
dec
repnz
inc
lock
add
sbb
les
in
xor
clc
pop
jne
cmpb
ljmp
cs
jne
xor
add
xor
or
mov
jns
inc
out
add
add
push
pop
fmuls
insb
pop
inc
and
cmc
mov
out
push
cmp
xlat
mov
and
lods
bnd
ficomps
into
add
in
das
aam
icebp
mov
shlb
fs
add
and
daa
movsl
hlt
shr
dec
mov
jbe
loopne
insl
add
mov
mov
hlt
adc
nop
leave
mov
mov
and
or
add
mov
mov
adc
add
pushf
xor
add
scas
divb
lahf
add
arpl
ja
sbb
in
gs
pusha
cmpsb
insb
and
pop
inc
inc
es
dec
add
out
and
add
bound
pop
xor
lock
inc
int3
adc
or
call
cmp
lret
add
in
std
clc
mov
jo
add
mov
addb
add
cwtl
or
add
sub
cmp
pusha
pop
or
pop
and
add
cli
add
dec
loopne
mov
push
std
sbb
mov
mov
mov
xchg
fwait
xor
fnstsw
xchg
xor
rolb
xchg
adc
push
push
adc
jo
psubsw
mov
rolb
mov
ja
add
aaa
pop
push
stc
pop
pop
lock
cwtl
add
aaa
xor
lret
into
insb
dec
aas
add
lock
leave
dec
stos
cmp
add
cltd
fs
adc
sbb
movsl
add
pop
adcb
or
pop
pushf
iret
push
xchg
push
bound
or
and
lea
jo
mov
inc
add
and
add
movsb
xchg
bound
inc
cld
cmp
and
xchg
add
sbb
xchg
push
add
pushf
cmp
dec
loopne
or
faddp
inc
lock
dec
add
pop
sub
add
sbb
lods
inc
and
idiv
es
sub
or
cmp
add
jne,pt
lods
lock
enter
pushf
loop
jno
cmp
mov
xchg
jns
add
pop
cmp
nop
into
mov
pop
cmp
add
dec
add
fsubr
xor
and
movsl
dec
fs
mov
popf
and
jo
inc
cmc
aas
out
pop
andb
lds
add
in
outsl
inc
imul
outsb
adc
add
mov
sub
mov
mull
add
leave
add
test
mov
cmp
pop
add
add
outsb
add
mov
test
inc
or
add
cmp
je
mov
cmp
daa
pop
pop
loopne
movsl
scas
js
and
xor
mov
add
pop
jecxz
xchg
popl
cwtl
lcall
scas
and
lret
das
cmp
mov
push
pop
into
adc
loop
sbb
lret
lock
jp
sub
or
mov
and
flds
test
and
lea
or
add
and
lods
inc
loopne
and
shrb
or
test
xchg
mov
mov
xor
mov
aas
xor
loopne
sub
cwtl
or
or
out
sub
testb
add
add
out
daa
and
andl
fiaddl
sti
adc
add
addb
adc
test
cltd
adc
xor
ljmp
lods
push
cld
adcb
xor
push
adc
mov
cwtl
cmp
add
and
pop
lods
add
cs
mov
adc
lock
sub
popf
lret
or
mov
mov
sbb
dec
add
pop
mov
adc
xor
es
ds
add
sub
dec
dec
sbb
pop
mov
mov
lds
testb
sub
or
xor
out
jno
into
test
ja
dec
adc
pop
jmp
xor
je
and
cmp
pop
sbb
dec
xorb
sub
add
adc
sub
inc
in
jb
les
cwtl
adc
cmpsb
stc
push
xchg
fsubrl
je
js
cli
mov
in
sbb
push
idivb
sub
mov
mov
xchg
jb
add
loope
and
push
insl
push
adc
add
fwait
inc
movsb
test
out
adc
in
or
repz
js
add
fcoms
ret
and
cmp
test
mov
push
scas
loopne
cmp
leave
add
cmp
cli
pushf
in
sbb
in
or
push
andb
jl
and
cmp
add
dec
pop
ja
daa
call
xor
subb
mov
mov
mov
pop
adc
or
push
and
pusha
pop
lods
je
add
pop
dec
add
and
add
loop
aam
push
in
jbe
jbe
dec
icebp
adc
push
cli
or
dec
cmp
jp
cvtps2pi
cld
aad
adc
add
push
and
cli
int3
add
sahf
sbb
jmp
pop
mov
add
or
fdivs
hlt
dec
les
in
out
inc
push
push
ret
hlt
inc
cltd
lret
sub
pop
and
insb
add
pop
cmp
add
pop
int3
jl
mov
jo
lods
and
pop
mov
and
les
subl
mov
scas
jb
dec
push
mov
jle
call
mov
adc
shlb
in
out
add
mov
int3
lock
mov
mov
adc
cld
add
mov
mov
les
mov
mov
and
ja
insb
mov
sub
or
sbb
and
and
pusha
hlt
mov
cwtl
shlb
mov
xchg
sbb
add
adc
fcoml
es
add
loopne
clc
mov
xor
xchg
or
and
mov
cmp
icebp
dec
lock
aad
faddl
dec
pop
pushf
push
dec
lds
add
in
bnd
into
push
mov
in
mov
dec
pop
pop
outsb
mov
add
push
mov
lock
cld
enter
dec
mov
aas
add
cmp
inc
cli
nop
pop
jp
pushf
jge
add
insb
jle
in
test
or
add
cmpsb
inc
mov
mov
int3
prefetchnta
sbb
xor
fldenv
leave
dec
lret
into
sti
mov
adc
loopne
mov
lods
xchg
loop
fiadds
adc
out
sub
add
outsb
test
jl
sbbb
fstl
lds
stc
or
cmp
shrb
xor
out
imul
cli
je
add
cwtl
enter
hlt
cmp
das
add
adc
ds
sub
cwtl
mov
pop
mov
dec
or
sbb
testl
add
loopne
loopne
push
scas
pop
mov
mov
or
stc
icebp
ljmp
loop
lock
fcmovnbe
pop
mov
add
stos
out
mov
inc
stos
out
pushf
inc
negl
lock
imul
push
movsl
cld
int3
rolb
xor
jl
jmp
inc
loop
ds
test
out
cwtl
in
mov
jbe
add
jmp
clc
cwtl
xchg
or
sbb
add
out
mov
cmp
test
add
push
mov
repnz
dec
ret
hlt
ret
inc
mov
lds
faddl
mov
add
mov
adcb
add
dec
insb
cmp
inc
fidivrs
mov
add
inc
jmp
xchg
mov
mov
mov
les
mov
add
or
test
add
push
aam
mov
ja
add
mov
xchg
cmpsl
sub
add
mov
test
roll
sarl
mov
add
scas
les
shll
cld
cmp
arpl
movsb
cli
adc
rcrl
add
bound
aam
add
or
add
mov
pop
hlt
dec
pusha
adc
dec
lods
std
or
ret
jae
sub
lret
lods
and
push
add
imul
js
add
xchg
xchg
mov
xchg
jg
mov
das
cwtl
mov
xor
adc
dec
sub
aas
push
adcb
adc
movsb
lods
or
inc
xchg
add
and
or
jl
push
adc
cltd
push
sub
mov
add
mov
rcrb
lret
add
cmpb
int3
pusha
ja
mov
add
pop
out
mov
sti
add
repz
fdivl
dec
cwtl
dec
lret
enter
xchg
das
sarl
pushl
f2xm1
add
lods
cwtl
lret
jbe
clc
xchg
movd
pop
cmpsb
pop
add
lahf
pop
sub
je
jb
and
dec
or
stos
imul
pop
pushf
dec
lock
mov
or
inc
xor
cld
and
xor
pop
sub
cltd
cmp
or
subb
out
out
cld
js
add
mov
adc
sub
lret
ja
or
xor
enter
mov
fldt
mov
dec
sbb
mov
aas
mov
add
fimull
or
cwtl
adc
sar
mov
scas
jl
mov
pushf
pop
mov
loop
xor
andb
jo
insb
adc
mulps
jb
dec
pop
mov
adc
movsb
sahf
dec
daa
add
inc
rcrl
movntq
aas
shlb
jmp
shll
xor
rclb
mov
mov
call
ret
daa
inc
ret
ret
enter
xor
popl
pop
inc
adc
mov
addr16
inc
cli
dec
add
pop
stc
lods
add
loop
insb
xor
je
add
xor
and
testl
repnz
sti
lods
addb
jo
or
push
cmpsl
repnz
jno
add
enter
jae
hlt
ds
mov
inc
add
add
lea
jnp
adc
mov
sub
and
add
xchg
adc
std
repnz
add
lcall
add
mov
aam
nop
cli
repnz
outsl
mov
push
jl
enter
pop
dec
or
xchg
and
sbb
xchg
cmp
fsubp
adc
test
sub
push
xchg
jbe
bswap
push
ret
cmpsb
mov
lahf
sbb
sub
adc
cli
xchg
pop
or
mov
fbstp
xchg
push
pusha
lret
loop
add
inc
ljmp
mov
or
je
fnsave
push
sub
or
xor
pop
loopne
insb
es
sbb
push
xchg
inc
sub
and
mov
add
test
cs
in
push
hlt
loopne
or
push
add
test
add
loopne
cli
je
jge
mov
xor
inc
jg
jae
iret
dec
lods
dec
xor
repz
mov
add
pop
arpl
jge
adc
add
mov
outsb
add
cld
popa
cmc
loopne
push
push
dec
loopne
fldt
add
inc
js
push
inc
arpl
add
jecxz
sahf
pusha
out
and
add
push
and
sub
jbe
sub
pop
stos
outsb
imul
bound
jg
and
jb
fldcw
je
mov
cmp
add
popa
repz
addr16
add
jle
or
pusha
out
or
aas
mov
and
insl
movsl
sbb
sub
pop
hlt
cmpb
inc
addr16
aas
mov
jl
and
popl
hlt
clc
jle
insb
push
sbb
pminsw
sbb
push
mov
jne
add
jge
scas
loope
and
iret
imulb
sub
adc
popf
pop
inc
inc
js
add
popa
push
movsl
push
pop
data16
mov
outsb
divb
push
repnz
and
mov
inc
test
insb
mov
push
js
mov
add
xor
scas
and
mov
add
mov
or
ja
xor
pop
mov
mov
xchg
dec
out
add
outsb
insb
movsb
push
jae
push
push
add
inc
xchg
mov
push
or
sbb
notb
cli
stos
mov
inc
stc
push
jmp
lahf
outsl
pushf
sbb
jecxz
add
imul
xlat
mov
push
notb
add
inc
mov
add
push
or
sub
fisubrs
mov
push
or
cs
jbe
push
jae
outsl
aam
mov
movsb
sarb
bound
movsl
outsb
mov
pop
mov
ljmp
mov
or
push
add
inc
sub
int
sbb
adc
popf
ja
lds
popa
insl
pop
xor
jne
out
push
pop
inc
dec
push
movsb
fadds
or
and
xchg
les
call
add
decb
in
and
out
cli
mov
std
and
mov
adcb
push
inc
inc
dec
cmp
push
mulps
mov
enter
or
adc
bound
addb
jae
xchg
add
mov
inc
mov
push
fmul
mov
call
push
dec
adc
xor
mov
mov
aam
test
or
sbb
sub
test
sbb
push
dec
sti
popa
call
ds
sbb
xor
popa
and
push
roll
add
add
adc
cs
nop
lods
xor
inc
jno
or
inc
sub
enter
push
test
scas
lods
xor
js
loop
std
pusha
xchg
adc
sbb
cmpsb
or
cmp
addr16
add
and
inc
dec
daa
cmp
gs
adcl
movzwl
shr
add
mov
add
push
push
xor
pop
add
adc
fadds
test
je
push
mov
rorl
jge
jg
shlb
and
clc
movsb
add
shlb
adc
cli
pop
adcb
jge
repz
inc
cld
cltd
mov
push
push
mov
jle
ss
sbb
lods
jo
mov
shlb
jge
push
fsubl
into
test
test
je
andl
and
push
cmp
nop
pop
push
jmp
add
pop
leave
ret
pop
dec
cmpsb
mov
jae
rcr
addr16
dec
or
dec
sbb
outsb
mov
and
sub
cltd
sbb
inc
shll
insb
sbb
outsl
or
sub
sbb
push
adc
test
jnp
xor
cli
xorl
test
xorl
sub
xor
inc
push
adc
sbb
hlt
dec
xor
inc
sub
stc
mov
pushf
cmpsb
mov
or
lods
imul
addr16
push
sbb
or
add
mov
xchg
pusha
or
adc
mov
push
xor
xor
nop
scas
pop
mov
movb
cmp
sbb
sub
lea
mov
push
push
rclb
push
adc
fs
mov
and
mov
rcrb
push
push
insb
inc
stos
adc
and
mov
cld
cmp
sub
and
mov
in
or
shrb
xor
dec
pusha
add
sti
rcrb
inc
adc
dec
shrl
cmp
and
cld
add
pushw
bound
jns
push
adc
adc
cmp
adc
dec
push
mov
pop
movsw
xchg
je
sub
mov
stos
add
aam
inc
stc
jecxz
mov
inc
mov
xchg
adc
and
inc
enter
pop
xchg
xlat
cmpb
cmp
add
mov
nop
mov
adcl
or
jns
into
sub
push
push
mov
inc
inc
inc
or
mov
fadds
cmp
jbe
arpl
dec
add
push
je
mov
adc
clc
arpl
dec
mov
dec
aaa
mov
cmp
addr16
ret
dec
or
pop
jae
stos
adc
add
lea
dec
and
negb
inc
add
inc
je
aaa
mov
inc
cmp
gs
inc
ret
das
sbb
sbb
sbb
fs
push
shll
dec
loopne
rclb
test
inc
sub
bound
test
iret
pop
rclb
dec
cmp
pop
and
ret
push
scas
or
push
pop
les
cld
call
in
and
sbb
rolb
mov
fs
fmul
sbb
jl
push
mov
scas
dec
pop
adc
addb
mov
call
pop
aaa
sarb
mov
xchg
mov
xor
add
lods
rolb
and
push
jae
xor
scas
adc
pop
loopne
or
cmpl
js
pop
lret
add
in
fs
stc
iret
gs
add
stos
bound
add
movzwl
jge
roll
mov
jb
push
ss
or
pop
xor
jmp
adc
iret
mov
rolb
js
add
mov
inc
pop
data16
xchg
outsb
rcl
xchg
stos
cld
and
jno
or
sbb
test
mov
inc
add
repnz
adc
sar
cwtl
jmp
xor
aaa
inc
xor
xchg
or
mov
dec
add
sbb
push
push
sbb
push
push
xor
mov
or
xchg
aad
fwait
push
inc
cmp
popf
andb
dec
fs
pusha
jo
orl
and
ss
mov
pop
adc
push
mov
cwtl
xchg
int3
push
hlt
or
and
ret
inc
lds
mov
jmp
adc
xor
nop
imul
ret
fwait
cmpsb
push
pushf
subl
test
fistpll
jae
dec
scas
adc
pop
gs
jmp
scas
xchg
test
sti
pop
bound
xchg
outsb
imul
ret
out
enter
mov
mov
cmp
testb
loop
pop
add
fbstp
pop
lret
or
xor
cmp
enter
cld
jbe
or
mov
jo
sbb
xor
cmp
mov
int
or
xor
cmp
jbe
sub
incb
add
mov
or
nop
jg
push
adc
sub
lcall
jg
loopne
addr16
dec
gs
mov
sub
test
dec
xchg
ss
xchg
jne
addb
outsl
cld
mov
je
xchg
dec
jb
cmc
dec
test
inc
cld
pop
cld
push
push
xor
mov
repz
and
ret
jle
aad
mov
jp
ja
int3
and
add
negb
bound
add
adc
or
or
adc
dec
push
xchg
add
adc
mov
rolb
inc
fadd
mov
push
jmp
xor
adc
fs
or
or
mov
cwtl
in
pop
cmp
and
xor
mov
pop
sub
out
stos
sbb
add
mov
dec
sbb
push
mov
sbbl
add
or
add
or
fadds
pop
jmp
pop
lahf
and
mov
jne
jbe
mov
ret
call
dec
imul
adc
cmp
mov
pop
add
cld
inc
add
xor
xor
xor
dec
sub
popa
les
push
clc
ret
fstl
pop
jmp
adc
cmc
lock
sbb
loope
fdivl
dec
and
sbb
xchg
xchg
fcomps
mov
cmpsb
cmp
adc
mov
adc
lock
and
mov
aam
sbb
sbb
inc
outsb
jmp
loop
inc
inc
or
stos
inc
push
nop
iret
and
jg
cmp
jne
pop
and
mov
dec
push
push
sbb
daa
jns
inc
sbb
call
daa
neg
xchg
push
xchg
and
stos
xor
cmp
push
add
out
in
adc
stc
pop
data16
xchg
mov
and
or
fs
and
mov
shr
add
andw
scas
cmp
add
repz
dec
add
movsl
jne
and
jne
push
lea
faddl
and
test
call
sub
fildl
xor
jb
jne
push
push
mov
jb
mov
dec
add
xor
mov
mov
clc
es
lcall
and
cmpsb
mov
clc
xor
push
test
mov
cmp
pop
repnz
daa
shr
push
mov
fs
mov
xchg
and
xchg
js
lcall
js
xor
mov
inc
xchg
and
fsubr
pop
sarl
inc
lret
mov
iret
xor
stc
js
sbb
rcll
dec
popa
jmp
push
push
cmp
and
add
jbe
jo
add
and
jae
jl
add
dec
ss
and
push
xlat
adc
lock
mov
bnd
push
and
inc
cmp
js
out
int3
or
or
les
ret
or
push
cld
cmpsb
push
mov
add
cmp
sub
push
pop
push
add
popf
add
popa
dec
dec
clc
lret
nop/reserved
add
sbb
xchg
lods
in
andl
push
jge
or
pop
mov
dec
add
and
cmp
ds
mov
mov
xor
ret
dec
cld
ds
shr
push
sub
xchg
loope
imul
sbb
rorb
cmp
mov
pop
clc
adc
or
or
int3
inc
dec
hlt
arpl
dec
daa
or
sbb
mov
lea
pushf
sbb
push
add
add
dec
xor
lcall
xlat
jne
sysret
pusha
enter
lret
es
add
pop
inc
and
ret
dec
bound
inc
outsb
add
in
push
pop
cwtl
lea
pop
add
call
jmp
lcall
jo
scas
sbb
pusha
dec
or
xchg
push
mov
or
dec
pop
pop
addl
mov
std
dec
sarb
dec
movsl
cwtl
xchg
inc
inc
xchg
and
dec
or
jns
dec
inc
or
or
cmp
push
iret
enter
add
sbb
xchg
adcl
arpl
inc
sub
xchg
cmp
dec
or
mov
lea
cmp
jl
out
int3
and
sbb
lret
jge
adc
cmp
inc
and
lods
or
xchg
or
push
pop
push
or
sub
add
aaa
sub
sbb
pop
pusha
cmp
jbe
mov
rcl
into
xor
imul
shll
ljmp
int
and
xchg
adc
cmc
and
adc
and
inc
push
fdivl
lods
mov
push
inc
daa
test
push
daa
add
loope
sbb
sbb
ljmp
icebp
std
push
and
jge
lock
hlt
jmp
mov
jns
or
insl
popl
stos
or
cmp
hlt
push
decb
push
les
insl
add
mov
mov
mov
mov
stos
test
call
insb
sub
xor
cld
ret
syscall
mov
int3
js
and
jle
xchg
subb
pop
test
and
or
or
xchg
mov
test
pushf
movsb
test
mov
test
mov
test
mov
lods
xor
test
cmp
and
cltd
push
add
movl
in
rorb
jl
jmp
inc
inc
and
adc
inc
or
call
mov
icebp
cs
push
xchg
adc
fists
cwtl
push
mov
dec
and
popf
dec
daa
mov
scas
xor
push
call
mov
inc
sbb
cmp
inc
add
cmp
jne
test
push
cmp
repnz
adc
sbb
fsubl
rclb
call
xchg
cbtw
test
call
adcb
add
pop
or
add
rcrl
push
and
or
pop
adc
push
xchg
xlat
cs
inc
sub
or
cmp
dec
sub
push
int
sbb
push
xor
fs
push
cmp
add
clc
inc
loopne
outsl
sbb
pushf
adc
mov
or
add
and
mov
adc
adc
push
or
je
jmp
mov
mov
dec
shlb
cwtl
jl
sbb
mov
mov
inc
fsubrs
enter
push
push
pop
rdtsc
lea
out
testb
add
pop
mov
lea
dec
jne
stc
cmpsl
push
sbb
mov
dec
jmp
and
inc
aam
loopne
add
add
in
fwait
mov
push
nop
stc
fs
and
or
adc
and
inc
cwtl
pushf
mov
add
loope
nop
shl
sbb
out
clc
sbb
xchg
push
nop
call
cmp
push
push
adc
cli
inc
adc
xorl
aas
sub
dec
jnp
outsb
and
rorb
jle
add
ljmp
loop
add
pop
mov
or
push
ja
xorl
push
mov
and
xchg
push
cmp
and
dec
dec
lret
xchg
xor
mov
push
out
adcl
nop
lock
xchg
xor
sub
push
in
push
cmp
cmc
sub
int3
mov
out
pusha
aad
test
popf
sbb
cld
in
bnd
leave
call
mov
adc
push
and
movsl
jns
sbb
push
cltd
movsl
mov
fwait
orb
or
mov
lcall
or
pusha
and
adc
mov
daa
inc
loopne
dec
hlt
pop
je
cmp
push
sbb
imul
data16
or
add
lea
cmpsb
cmp
push
push
andl
test
push
mov
imul
push
or
shl
push
push
clc
mov
and
call
stos
popf
imul
jp
push
hlt
jb
push
add
incl
daa
add
scas
mov
pop
pop
pop
mov
mov
nop
mov
lret
inc
cmp
sahf
dec
and
je
xor
jmp
push
pushl
sbb
cwtl
iret
sahf
sbb
lcall
test
lret
enter
lds
in
push
cmp
xchg
popf
and
cwtl
mov
popf
jp
push
sbb
mov
sub
push
ror
dec
jmp
sbb
xchg
push
jle
daa
xlat
or
shlb
outsl
adc
mov
aad
sbb
inc
dec
add
adc
clc
adc
pop
and
jecxz
inc
sbb
sbb
pushf
adc
shrl
mov
and
pop
pop
pop
jge
dec
cmp
and
cmp
loopne
and
xor
xlat
pop
xor
int
or
ss
dec
mov
mov
adc
leave
pop
xor
or
cmp
addr16
pop
adc
inc
xchg
dec
sub
sub
leave
sbb
or
xor
leave
pop
fwait
shlb
push
mov
lea
xchg
int3
or
in
lock
adc
imul
push
movl
mov
xor
xchg
rorl
mov
jne
or
and
cmp
jle
int3
xchg
divb
iret
jecxz
je
cmp
dec
pop
xor
inc
xchg
shll
lock
sbb
xor
int
mov
bound
lahf
jae
cli
inc
dec
sbb
sub
mov
push
call
or
xor
idivb
jo
xchg
or
ljmp
repnz
push
fdivrs
sbb
sarl
adc
cmp
scas
dec
and
mov
rorl
push
lds
adc
repnz
xchg
arpl
andl
push
and
test
lea
movsl
dec
sbb
lahf
xorl
rorb
pop
jns
inc
scas
daa
pop
mov
xchg
sub
fildll
or
jecxz
xor
lods
jnp
pop
js
fistl
pop
lock
xor
cmp
cwtl
in
pop
mov
sbb
jmp
test
and
hlt
push
mov
sarl
mov
pop
or
out
xchg
mov
pop
test
lods
adc
outsb
mov
or
jbe
imul
and
test
daa
and
and
adc
inc
mov
mov
repz
cmp
and
mov
cmp
cmc
xchg
mov
ds
jae
add
inc
sbb
cli
scas
das
or
mov
mov
xorl
and
aam
mov
inc
enter
xor
push
or
test
xchg
sub
sbb
add
fsubrs
loopne
outsb
in
inc
cmp
xor
inc
and
sbb
nop
or
add
push
imul
xchg
adc
insl
push
js,pn
cmpl
inc
or
ficompl
in
scas
add
add
push
pushl
rclb
mov
add
outsb
cld
enter
es
mov
sti
jl
clc
and
add
je
or
jnp
inc
adc
insb
push
and
adc
or
add
jl
xor
sbb
or
sub
lock
mov
js
pop
sbb
mov
sbb
leave
mov
subl
mov
inc
and
fs
mov
dec
xchg
addr16
dec
cmp
or
fcmovnu
adc
stos
imul
inc
rorl
or
xchg
mov
std
js
jecxz
in
es
push
or
inc
lret
sbb
mov
js
inc
jl,pn
inc
mov
cmp
insb
iret
sbb
add
jne
and
jo
mov
jle
sbb
jmp
and
push
sbb
pop
bound
dec
lods
shl
in
and
lret
inc
lret
mov
stos
es
scas
mov
out
mov
and
inc
dec
jns
and
movsb
out
or
cwtl
mov
sbb
call
out
or
cmp
test
std
dec
test
inc
lods
cld
sbb
mov
call
adc
add
lcall
out
push
lea
mov
int
adc
push
sub
push
push
pop
repnz
mov
addl
push
push
inc
add
add
sub
sbb
or
add
pop
dec
pop
pop
add
lret
dec
test
jne
andl
mov
dec
add
lock
stc
mov
sbb
cmp
insb
call
test
mov
adc
or
xchg
xchg
mov
inc
jl
cmp
pop
or
jbe
jno
jb
aas
lock
enter
jle
add
xchg
pop
mov
hlt
inc
sbb
loop
arpl
jbe
dec
push
clc
mov
sub
je
jg
adc
movsb
stc
sub
jb
shrl
xor
push
pushl
shll
mov
test
mov
fnstenv
cmp
inc
add
inc
push
add
or
adc
push
mov
out
dec
ljmp
lahf
pop
testb
je
and
adc
sbb
push
sbb
or
push
or
inc
sbb
sbb
adc
out
in
adc
and
and
bound
adc
inc
push
and
inc
dec
and
dec
sub
push
nop
mov
test
nop
sub
mul
pop
jmp
nop
push
xor
scas
loop
adc
xchg
les
out
mov
sub
loopne
lds
xor
add
loop
rolb
push
push
mov
dec
fmul
mov
cmp
imul
pop
movb
sbb
jp
xor
loopne
aaa
inc
fistpll
xchg
push
jmp
arpl
outsl
xchg
adc
and
inc
xchg
and
inc
ljmp
movsb
fisttps
jae
clc
mov
imul
add
in
xor
sub
jbe
pop
imul
idivl
mov
xchg
mov
pop
mov
xchg
mov
test
jne
icebp
mov
jge
cmp
scas
jo
push
sti
push
mov
mov
test
xchg
aam
stos
and
and
imul
jmp
repz
jne
xor
psubsb
inc
hlt
lock
xchg
add
cmp
fwait
dec
nop
dec
clc
jne
push
inc
mov
sub
push
ret
in
mov
push
and
test
adc
inc
or
lahf
lea
aam
lsl
push
mov
in
cld
cld
mov
xchg
mov
jae
jae
mov
adc
xor
test
ret
or
fsubr
stos
mov
pop
or
sbb
jno
in
clc
mov
adc
add
cld
sbb
xchg
ret
adc
xor
pusha
sahf
push
push
subb
add
js
ljmp
insl
or
jns
sub
mov
or
dec
jge
cld
and
xor
jmp
sbb
add
or
loop
ljmp
sub
add
xchg
add
in
rorl
mov
test
inc
cwtl
arpl
lea
insb
xchg
mov
push
mov
push
cmp
and
stos
mov
mov
and
push
sbb
and
and
or
push
cmp
push
and
xchg
test
mov
jo
into
push
and
pusha
dec
jb
mov
inc
loopne
test
xor
add
mov
xlat
xor
dec
adc
adc
rorl
cmp
mov
pop
mov
push
lea
xor
mov
and
clc
imul
adc
jge
mov
enter
je
cmpl
xor
pop
adc
gs
mov
mov
mov
nop
push
cld
mov
pop
enter
sub
xchg
xchg
mov
into
add
jmp
inc
in
mov
inc
fisubl
mov
or
or
movsb
popa
repnz
add
cmpl
add
or
push
add
hlt
cmp
cs
lea
xor
jmp
dec
and
loope
mov
inc
or
xchg
test
adc
add
std
pop
add
inc
sbb
repz
lret
dec
aam
pusha
pop
aad
rorb
pop
mov
mov
fiaddl
or
nop
cmp
jbe
xor
mov
in
and
xchg
and
movsb
add
mov
and
push
and
fsubl
xor
and
rcrb
and
cmp
mov
shlb
jnp
and
jge
adc
push
sbb
and
neg
stos
pop
adc
jne
inc
or
and
adc
js
pop
pusha
sub
pop
cltd
test
or
adc
adc
pushf
adc
sahf
add
sub
ljmp
adc
lods
sub
push
fs
xchg
or
pop
and
add
sub
inc
jne
in
das
call
mov
add
lret
xorb
cmp
addr16
sbb
add
sub
mov
jae
adc
pop
sub
pusha
pop
adc
imul
mov
mov
mov
adcl
pop
or
rolb
cmpsb
rorb
push
aaa
xorb
cmp
jmp
outsl
mov
daa
cwtl
addb
movsb
sub
lret
jmp
ds
and
sbb
shr
inc
jmp
sbb
inc
dec
lahf
and
and
cld
ds
sub
sti
popa
call
aam
ds
adc
push
cmp
hlt
loope
dec
xor
popf
sbb
pusha
ret
and
add
das
push
js
push
popa
jecxz
jp
jae
enter
jne
cmpl
cmp
push
pop
push
jl
dec
inc
or
mov
push
movsb
lret
lret
xor
adc
jb
addr16
push
add
jle
jnp
or
mov
addb
lret
add
mov
jns
mov
or
test
sbb
lea
inc
or
ret
xor
xor
mov
push
nop
and
cmp
mov
stos
push
xor
insl
pop
push
mov
dec
xorl
insl
insl
xchg
addr16
loop
push
or
pop
shl
adc
dec
pop
sub
sub
xor
lret
mov
push
adc
loopne
loop
lret
les
ret
out
popf
add
call
sub
add
mov
test
push
xorb
cmp
jo
adc
jne
pcmpgtd
push
or
dec
call
jo
push
movb
dec
pop
aad
sub
sahf
push
loopne
js
nop
cmp
dec
dec
push
jae
pop
outsl
xor
sub
inc
int
ficoml
in
push
add
adc
lods
movsl
das
inc
popa
adc
add
in
add
xor
add
repnz
push
cmp
mov
sub
adc
sub
fldenv
aam
add
shrb
mov
inc
repz
push
pushf
lcall
cmp
mov
push
push
mul
les
cltd
push
add
test
push
add
mov
adc
mov
pop
pop
mov
mov
mov
ljmp
jbe
add
pop
push
dec
push
inc
push
add
push
movb
out
pop
xchg
push
push
rolb
stos
inc
mov
mov
sub
in
cltd
xlat
xor
stc
ret
dec
stos
add
or
stos
cmp
sub
jmp
int
jmp
data16
bound
mov
xor
inc
jbe
add
mov
dec
add
pop
ret
mov
inc
inc
add
sahf
stc
shlb
push
mov
mov
rorb
das
jae
push
test
rcrb
jbe
mov
fmull
repnz
je
cmpb
inc
cmp
int3
outsl
xchg
jg
addr16
dec
pop
mov
inc
repz
adc
ja
push
mov
mov
jo
push
sub
sti
cmp
mov
xlat
daa
jmp
data16
test
pop
jne
cwtl
and
xlat
pop
push
dec
leave
and
dec
mov
jno
mov
add
lret
cmc
or
shld
pop
sbb
mov
aaa
jmp
enter
xor
dec
inc
jmp
inc
rol
inc
push
call
inc
subl
ss
xor
inc
jmp
xor
mov
fs
push
mov
mov
sbbb
mov
outsl
or
mov
repnz
insl
ret
xchg
mov
push
jl
push
adc
jle
shll
mov
xchg
xchg
jnp
fnsave
mov
mov
xchg
push
xchg
cltd
dec
xlat
push
xor
scas
dec
wbinvd
sub
ficoms
mov
add
ss
fisubs
cmc
pop
gs
xchg
push
fisttpll
aas
jb
rorl
bound
imul
out
mov
std
daa
loopne
jmp
sub
mov
andl
mov
in
popa
in
push
gs
and
aad
push
push
xchg
negl
mov
cltd
inc
adc
cld
adc
loop
dec
ret
je
xchg
jo
adc
xor
jmp
push
mov
enter
push
sti
push
sub
movsl
scas
xchg
test
jnp
sti
sub
jl
push
mov
xchg
lcall
add
inc
cmp
push
add
jbe
addl
int3
popf
adc
inc
out
aaa
lock
inc
hlt
jmp
fildll
ja
leave
push
add
in
adc
mov
ljmp
adc
rorb
jnp
dec
fdiv
in
push
dec
ret
out
push
adc
ljmp
nop
push
andl
dec
ret
or
or
js
loope
cmp
aaa
and
pop
cs
adc
sub
add
lahf
rorl
xchg
push
xchg
cmpb
cwtl
addr16
xor
adc
lcall
fsubrl
jl
lea
inc
cwtl
icebp
fmuls
inc
daa
jmp
lcall
sbb
pop
in
shrb
sbbb
push
jge
pop
mov
or
stos
mov
sbb
in
out
ret
sub
cmp
cmc
xor
loop
test
ret
jno
cmpsl
adc
mov
mov
and
mov
jmp
ss
inc
inc
popa
mov
insb
repz
jmp
dec
mov
js
out
jbe
lret
int
jle
mov
inc
add
xor
add
add
jmp
dec
mov
xchg
addl
and
jg
mov
add
jmp
or
add
orb
rcll
in
dec
enter
lea
sbbl
mov
pop
sbb
jae
adc
and
sbb
adc
sbb
add
adc
dec
mov
add
adc
jl
sub
fisubl
sbb
push
or
push
outsb
test
fisubrs
add
pop
jmp
inc
add
cmp
mov
adc
inc
push
or
nop
push
cmp
add
inc
loope
shl
or
mov
nop
add
jg
sub
xor
sbb
ret
popf
cwtl
xor
dec
cmp
ds
add
adc
lcall
pop
or
fdivrp
mov
adc
xchg
scas
and
sub
iret
test
xchg
jp
pop
sbb
xchg
adc
xor
jle
add
dec
or
jmp
outsl
pop
push
and
mov
push
pop
and
ja
out
or
xchg
es
inc
je
xchg
fwait
inc
pop
cmpsb
ss
inc
cs
push
inc
or
test
fwait
pop
pop
imul
imul
push
or
iret
aam
inc
stos
test
mov
and
and
sub
add
xchg
mov
cmp
jg
fwait
dec
cmp
popa
xor
fs
outsl
nop
adc
mov
jae
or
dec
push
fsubs
add
add
adc
jmp
mov
add
jecxz
bound
aam
shrb
mov
jmp
jl
and
adc
dec
and
adc
ss
xor
sbb
insb
scas
rcll
daa
mov
xchg
cld
jl
and
adc
jmp
mov
dec
adc
cld
add
test
or
je
lods
or
fs
ds
inc
adc
stc
sub
sub
pop
mov
cmpsb
mov
or
push
add
inc
es
loope
adc
add
xor
inc
dec
and
cmpb
dec
inc
inc
dec
sub
inc
mov
add
aaa
jbe
add
xchg
pop
xor
call
rorl
push
and
mov
fisttpl
cmpl
mov
jne
adc
dec
xor
dec
xor
mov
cmp
push
or
or
dec
pop
push
or
mov
jmp
ret
inc
mov
das
pop
ss
jecxz
cs
inc
lahf
and
ret
es
fld
xchg
jmp
decb
dec
inc
or
xor
xchg
sub
dec
mov
mov
xchg
inc
cmp
push
lea
jmp
lea
addr16
cmp
or
xor
inc
je
lods
xor
cmp
jo
push
add
jmp
mov
mov
mov
and
pop
gs
or
add
cwtl
and
and
mov
lret
inc
cli
out
ss
movsb
lea
sub
jp
lahf
push
sub
or
cmp
sub
adc
movsb
pusha
ret
call
mov
cli
mov
arpl
hlt
mov
call
sub
adc
and
dec
xor
cmp
sarb
inc
out
pop
int3
xor
adc
enter
ret
sub
fs
mov
adc
insl
or
adc
add
adcb
add
push
pop
or
add
or
or
or
or
movzbl
add
or
cmp
cld
push
and
insl
into
cmp
orb
sbb
mov
or
mov
and
xchg
adc
push
pop
adc
leave
or
inc
xor
and
adc
sub
mov
and
xchg
fadds
push
sub
jmp
add
and
pop
mov
mov
mov
jl
jne
sbb
mov
or
out
or
lret
subb
fdiv
jne
sub
leave
call
xor
mov
xchg
sbb
shl
sub
xchg
sbb
or
mov
dec
dec
je
sub
ficoms
jp
mov
int3
mov
fisttpl
sub
sbb
imul
xchg
pop
or
mov
and
inc
add
das
fidivl
outsb
je
pop
and
and
xchg
cmp
lret
sub
and
mov
xor
fs
xchg
cmp
adc
dec
ret
out
ficoms
mov
sbb
cltd
mov
mov
test
pop
arpl
ret
jb
xchg
movsl
iret
bound
jo
inc
cmp
shlb
inc
loope
jmp
dec
out
or
and
push
addr16
mov
sbbb
test
dec
movsl
jns
sub
cli
outsl
sahf
adc
stos
test
ds
or
mov
dec
std
es
cmp
rclb
pusha
and
or
pushf
bound
mov
sti
nop
iret
jns
lock
and
dec
data16
mov
mov
imul
fsubr
pop
or
incb
nop
add
dec
decb
lahf
sub
adc
cmpsb
inc
test
test
mov
scas
sub
stos
adc
enter
or
mov
inc
push
and
mov
bound
hlt
lret
and
and
and
call
fwait
add
lret
shll
mov
sti
mov
out
jmp
sahf
sub
ljmp
inc
mov
mov
jbe
imul
dec
mov
scas
fldl
xor
into
mov
lret
insl
inc
cltd
dec
xadd
aad
les
pop
adc
sbb
sqrtps
and
dec
and
lahf
movsl
mov
inc
es
xor
or
adc
les
mov
cld
cmp
add
pop
rcrl
sbb
push
or
adc
and
cmp
mov
push
dec
or
mov
xchg
arpl
ret
and
test
mov
int
cmp
icebp
jl
sbb
pusha
push
adc
mov
adc
fdivs
jmp
cmp
cltd
sub
fidivl
sbb
inc
les
cmp
das
std
ret
popa
lods
push
mov
loop
dec
lds
or
push
and
movsb
xor
hlt
mov
adc
stc
adc
aas
fcomps
jmp
cmpsb
sbb
stc
pushf
lock
jmp
mov
fldcw
or
xor
pop
arpl
sub
mov
jmp
movsb
dec
sbb
sbb
rorl
call
popa
in
daa
jmp
loope
loop
test
lret
les
jnp
mov
dec
xchg
xchg
movsl
and
lods
adc
inc
or
mov
adc
inc
add
test
xchg
or
pushaw
adc
or
enter
jmp
ljmp
jge
lret
mov
mov
push
jbe
add
sbb
xor
inc
mov
jne
insb
add
inc
jno
jge
ret
xor
ret
fidivrl
pop
pop
rolb
loopne
stos
xchg
xchg
jno
push
and
mov
pop
sub
pop
adc
jg
adc
or
sbb
jo
mov
and
aaa
cli
xor
and
sbb
fimuls
push
xor
adc
xchg
cmp
sbb
push
or
fisubrs
ret
je
loope
fwait
stc
lahf
jne
jmp
push
xchg
ret
push
push
jg
pop
mov
pop
push
or
inc
dec
push
or
mov
sub
pop
in
cltd
sbb
or
jmp
and
les
jae
mov
push
mov
xchg
jb
mov
int3
sbb
inc
lea
dec
aam
push
mov
mov
inc
enter
sub
testb
sbb
inc
jno
pop
or
add
cwtl
enter
dec
aas
dec
mov
cmp
test
hlt
adc
test
pop
push
je
xchg
push
in
sub
stos
push
adcl
sarb
push
lods
movsl
rcr
adc
push
repz
jle
daa
add
jp
stc
add
pop
jno
add
loop
push
jecxz
arpl
xor
sbb
bound
dec
and
sbb
movsb
inc
xchg
push
cld
adc
rcr
sub
or
fs
pop
cs
or
xchg
jge
ret
jo
inc
test
and
mov
sub
sub
sbb
inc
or
pusha
sbb
or
xor
push
sarb
add
adc
cmp
iret
js
cld
je
mov
nop
cld
pop
sbb
mov
pop
lahf
fs
sbbb
cmp
ljmp
test
fisubrl
or
dec
and
xor
mov
xchg
jbe
mov
nop
or
mov
inc
imul
out
adc
ret
sbb
bnd
push
jbe
das
aas
fs
rclb
rcrb
cltd
stos
push
hlt
aaa
inc
sbb
lea
dec
mov
xor
repnz
iret
lret
xchg
inc
adc
inc
dec
movsb
pop
dec
nop
or
or
push
xchg
jns
aas
lcall
push
add
cld
gs
pop
adc
shr
add
lea
push
or
cmpsl
popa
xlat
pop
pop
cmp
adc
or
xchg
jbe
imul
sub
mov
test
inc
push
sub
add
cmp
movsl
jb
or
jae
inc
or
addl
dec
dec
pop
push
jbe
call
pop
push
jb
xchg
or
adc
or
lret
push
loopne
test
rcr
imul
ja
xchg
jp
push
push
pop
or
mov
call
xchg
dec
popf
data16
enter
jmp
jno
stos
or
test
xor
fistpl
popa
aad
push
or
lret
sbb
loope
or
lock
mov
sub
stos
sahf
sub
mov
sub
ljmp
dec
or
or
push
lea
adc
sbb
loope
and
mov
add
xor
fs
or
mov
mov
mov
or
and
dec
in
stc
sbb
mov
jge
insb
sbb
pop
fs
or
nop
push
fs
cmpsb
sbb
sbb
imul
js
int3
cs
sahf
fcompl
mov
jle
sarb
push
test
jge
or
and
or
aaa
adc
or
cld
sub
push
sub
push
mov
push
ja
add
pop
inc
sub
sub
std
xor
call
gs
adc
jmp
mov
mov
adc
or
test
xor
mov
insb
ds
xchg
adc
pop
xlat
dec
popa
cmp
dec
in
push
fldl
adc
sub
xor
je
inc
dec
data16
or
pop
mov
and
ficoml
xchg
pop
push
inc
sbb
jae
dec
sbb
sbb
sub
inc
mov
adc
inc
xor
pop
loopne
or
push
mov
dec
add
xor
inc
aaa
call
push
cmp
or
stos
and
sbb
and
lods
fmuls
ss
inc
sbb
add
jb
add
test
or
xor
je
xlat
push
pop
cmp
mov
push
fwait
or
xor
add
test
push
add
mov
inc
pop
loop
cmp
jne
int3
insl
lret
movsb
andl
or
das
cli
stc
jns
sbb
loope
mov
test
jb
mov
or
enter
fsts
outsl
jne
or
gs
jno
add
xor
cmp
sub
xor
mov
jno
add
inc
and
adc
loopne
sub
and
and
pop
cmp
sbb
outsl
dec
push
pop
pop
xor
enter
xor
cmpb
sarl
and
adc
mov
call
fs
jg
and
addb
mov
addb
jne
call
add
sub
adc
jmp
call
cmp
mov
jmp
or
subb
inc
mov
call
jne
inc
push
adc
pusha
aaa
sbb
in
add
je
and
mov
call
add
cmp
je
xchg
fs
jne
rcrb
sbb
sub
fisttpl
and
inc
pop
dec
jmp
mov
inc
add
or
xchg
add
sarl
sbb
push
idivl
daa
or
jl
or
inc
dec
nop
inc
push
pop
mov
mov
mov
inc
sbb
movsl
cmp
mov
out
adc
jp
movd
cli
push
jle
and
push
mov
adc
jo
out
jnp
sbb
inc
shlb
jbe
push
mov
mov
mov
push
ljmp
push
push
xchg
repnz
jne
jmp
or
pop
js
inc
and
add
dec
push
lock
out
add
cmp
add
test
ret
dec
sbb
dec
in
push
cmp
test
pop
cmp
or
sbb
dec
popf
add
cld
push
popa
add
sbb
xchg
lcall
add
insl
or
mov
call
shll
lea
xchg
sbb
test
add
sub
hlt
enter
jae
jne
inc
or
push
add
xchg
js
add
idivb
inc
ja
ret
pop
adc
jmp
xor
lock
mov
dec
add
mov
or
inc
dec
push
push
shlb
adc
nop
jo,pn
adc
inc
enter
pusha
rorb
movsl
jmp
out
push
mov
add
sub
push
loop
xchg
xor
jl
jbe
push
out
insb
cmp
sub
lock
bound
mov
or
mov
mov
xchg
int
mov
dec
sub
inc
imull
and
xchg
in
and
pop
push
mov
or
jmp
lock
icebp
cli
je
xor
inc
test
cmp
hlt
scas
sub
mov
xor
dec
mov
aaa
xchg
push
or
xchg
pop
popf
hlt
mov
fmull
ds
sbb
jbe
js
adc
test
insb
push
inc
pop
lea
inc
sti
clc
in
outsl
movsl
inc
add
add
push
fs
cltd
aam
and
fmuls
int3
je
imul
add
xor
data16
imul
or
sub
push
out
and
out
xchg
pop
out
outsl
sub
add
lret
fildll
adc
cmp
negb
adc
nop
mov
sbb
cmp
cmp
das
xor
sub
add
and
mov
in
cmp
loopne
push
lahf
enter
or
pusha
insl
iret
mov
push
out
add
hlt
imul
dec
xor
push
and
dec
clc
dec
inc
cmp
or
jbe
jb
pop
add
inc
xchg
jb
mov
and
ss
repnz
cmp
movsl
jge
dec
mov
adc
pushf
pushf
mov
push
hlt
mov
jbe
test
sbb
cmp
jne
or
shlb
add
divb
jb
int3
bswap
js
mov
push
mov
jae
push
add
push
cmp
inc
jo
cmp
mov
test
int
mov
pop
stos
pop
and
xor
gs
xorb
js
jnp
xchg
fcmove
adc
enter
lea
fmull
fcmovb
add
or
or
add
dec
lock
movsl
enter
test
xchg
cld
popa
orl
push
call
jae
ljmp
mov
sub
jno
data16
push
jo
lahf
ror
inc
dec
jmp
mov
jl
test
push
hlt
xchg
sbb
lret
cmc
adc
sub
hlt
movsb
out
cmc
add
int3
and
lret
mov
jae
add
adc
cmp
dec
xor
addr16
sbb
mov
xchg
iret
and
pop
clc
cmp
test
lods
add
cmp
je
push
les
add
nop
data16
ja
repnz
or
pop
pop
sub
gs
xchg
clc
xchg
ss
adc
jbe
out
xor
adc
pop
inc
int
pop
cs
call
mov
inc
es
adc
mov
nop
sbb
inc
inc
dec
in
repnz
cmp
add
in
pop
xchg
je
cmp
cmp
insl
adc
jnp
fdivl
and
sub
daa
adc
sub
pop
adc
mov
adc
or
pop
fiaddl
or
pop
sbb
mov
lock
xchg
push
adcb
xchg
dec
sar
leave
jbe
lcall
and
inc
jb
shll
or
nop
dec
pop
call
out
inc
aad
inc
jb
push
push
call
push
adc
loope
push
pop
or
adc
push
adc
dec
inc
lds
bound
or
cmp
push
jbe
scas
and
jno
imul
clc
xor
sbb
add
into
push
aad
mov
notb
stos
pop
push
sbb
push
fadds
sub
mov
lcall
mov
xor
ss
sbb
mov
push
or
jmp
das
push
mov
aad
or
cmp
adc
in
fs
jb
adc
mov
imul
cltd
inc
punpckldq
adc
add
push
pop
or
shll
mov
loope
dec
test
mov
mov
pop
or
pop
inc
pop
mov
test
or
scas
fs
enter
mov
nop
aad
lret
or
mov
push
push
lret
mov
mull
fs
jmp
pusha
xor
mov
movsb
adcl
mov
sub
or
pop
xchg
enter
int3
stos
xor
jle
adc
call
movsl
test
xchg
mov
add
mov
or
lods
xchg
shrl
inc
sub
outsl
fs
add
add
fadds
movb
jbe
mov
xchg
xchg
adc
imul
mov
shlb
cmpl
push
sub
adc
mov
jmp
jbe
ret
mov
pop
mov
inc
dec
pop
inc
jb
testb
mov
aad
jno
add
sbb
nop
sub
mov
add
add
cmpsl
pop
lret
xchg
sbb
orl
fidivl
sbb
pop
dec
testl
rcll
jmp
sub
or
cmpl
int
and
mov
fmul
in
loope
and
sub
decb
stos
in
and
mov
leave
and
fisubrs
push
in
push
jne
sbb
xchg
pushf
xchg
pop
push
jmp
mov
pop
add
stos
pop
mulb
dec
jbe
push
inc
jmp
dec
and
adc
jl
and
and
icebp
cmp
dec
mov
jmp
fdivs
stc
fistl
sbb
inc
outsb
ret
sub
or
loopne
jmp
pop
loopne
and
sbb
fwait
push
mov
adc
mov
jmp
and
repz
in
sub
push
mov
xor
push
push
fisubl
fcoml
lret
adc
mov
pop
cmpb
and
test
jmp
sahf
imul
ss
inc
fsubr
dec
sub
lods
adc
leave
and
call
or
cld
jg
das
test
sbb
clc
orl
mov
push
sub
call
xor
stos
add
je
scas
ret
cld
inc
fcmovnbe
mov
jbe
xchg
xchg
jnp
call
sbb
lret
dec
je
push
in
mov
xor
jmp
hlt
xchg
push
xchg
xor
pop
push
jp
scas
pop
ja
sub
add
push
xchg
mov
into
je
inc
adc
cli
inc
adc
stos
add
push
and
and
push
jmp
cmp
dec
adc
add
cmpsl
test
jp
xlat
add
stos
jl
push
lahf
fnstcw
push
jg
clc
aad
and
clc
pop
inc
dec
jmp
mov
jno
test
or
jg
xchg
mov
stos
sub
andl
mov
inc
enter
insb
and
push
mov
dec
mov
sub
stos
pop
dec
test
test
int3
jno
pushf
testl
cmpsb
add
mov
dec
push
adc
and
sub
sub
loop
add
mov
and
push
and
or
and
out
sub
push
inc
add
jmp
aaa
stos
int3
xchg
int
mov
cmp
popf
sub
xor
and
mov
idivl
xlat
es
mov
leave
jmp
jbe
add
movsb
stos
les
or
ficomps
or
int
adc
je
and
and
pop
mov
xchg
inc
or
sbb
leave
xchg
mov
add
aas
pop
push
popw
popf
inc
dec
jg
mov
mov
push
adc
cld
sbb
and
push
test
addr16
stc
clc
mov
jnp
cmovp
aaa
lock
lahf
adc
loopne
add
and
icebp
mov
incb
call
insl
add
jne
mov
dec
leave
mov
and
nop
into
enter
xor
push
push
out
insb
mov
xorl
or
movsb
and
inc
and
lea
jne
repnz
push
popf
insl
and
pusha
adc
sub
push
add
and
dec
das
int3
repz
loope
popa
adc
cwtl
inc
jmp
fbstp
pop
mov
fs
sbb
mov
fwait
cmp
mov
imul
push
scas
ljmp
fsubs
pop
add
int3
and
sub
and
inc
mov
xor
daa
dec
movsl
es
xor
lcall
lret
dec
icebp
bswap
and
pop
sbb
jp
push
push
mov
pop
adc
enter
push
cld
adc
popf
sbb
insb
inc
push
pop
ficoms
add
hlt
and
jl
pop
lods
nop
pop
adc
sti
sbb
lret
sti
adc
cmpb
dec
pslld
lds
and
mov
and
inc
add
in
xchg
js,pn
sti
movsl
das
cmp
cmp
inc
nop
sub
and
aam
and
loopne
and
out
xchg
push
push
xchg
dec
push
out
cli
mov
push
mov
test
push
mov
loope
cli
sbb
mov
ja
fldl
xchg
data16
mov
ficoms
out
in
imul
mov
adc
and
sbb
cmpsl
imul
or
and
adc
xchg
or
push
or
int3
dec
cmp
sbb
dec
fstps
push
movsl
add
lock
push
push
add
or
or
or
call
aam
loop
add
std
sbb
cmp
cli
ret
inc
hlt
aam
out
add
and
in
in
cmp
xchg
cmp
mov
add
jge
lret
adc
and
push
add
sahf
jle
mov
outsb
and
dec
inc
xchg
xor
and
or
mov
adc
and
jg
push
adc
movsb
cmp
outsb
jnp
mov
test
mov
inc
ljmp
add
and
dec
inc
xchg
pop
and
lcall
pop
inc
cld
push
test
inc
and
jbe
mov
inc
or
adc
jp
fsubs
dec
mov
nop
and
dec
mov
adc
adc
add
and
inc
scas
in
iret
shll
stc
dec
enter
or
jo
loope
or
je
dec
adc
sbb
inc
xchg
and
sub
mov
push
cmpsb
cs
sbb
outsl
cmpsb
mov
movsl
push
adc
lret
in
mov
or
pop
adc
and
and
mov
dec
or
dec
xor
cmpsb
sbb
push
and
push
sbb
jp
int3
test
dec
push
push
jb
adc
aam
pop
faddl
dec
xchg
jo
aas
cmp
adc
sbb
gs
dec
js
fs
jbe
cmpsl
jbe
xor
xor
clc
xor
cmp
fs
mov
inc
add
dec
bound
mov
daa
cwtl
push
aas
sbb
sbb
sbb
roll
rol
adc
orl
sub
push
out
and
dec
and
or
jae
push
adcb
push
pusha
mov
into
jge
push
call
cs
sbb
adc
cmp
addl
jb
pushf
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
adc
mov
and
enter
sbb
sbb
sbb
adc
mov
add
adc
and
mov
adc
orl
jg
mov
out
mov
stos
and
sarb
add
jne
mov
xor
sbb
mov
daa
pop
jmp
fcoml
aas
mov
or
addl
insl
pop
or
inc
or
push
outsl
mov
sbb
add
je
push
jne
js
in
in
jae
call
insb
jne
sub
and
sbb
je
cmpl
js
push
lds
test
ja
cltd
jae,pn
js
adc
into
repnz
xchg
data16
push
push
or
call
iret
dec
cmp
inc
fwait
jne
pop
inc
lcall
jo
outsb
or
outsl
inc
inc
stos
aaa
jge
ss
aam
fs
insb
imul
sbb
inc
push
jbe
loop
mov
inc
jo
fs
bound
and
and
inc
clc
insl
jo
into
stos
dec
pop
cld
imulb
mov
xor
adc
adc
xor
jb
adc
fsubs
test
dec
lahf
cmp
inc
stos
sub
pop
cmpl
cmp
call
fsts
jae
jmp
ss
add
sub
and
add
push
in
outsb
sbb
xor
movsl
inc
mov
push
gs
push
push
cli
mov
pop
test
sbb
sub
jno
insl
jne
push
clc
add
inc
cld
outsb
push
jbe
imul
nop
push
aam
std
add
pop
loop
imul
mov
imul
and
inc
inc
adc
pop
insb
test
add
push
stos
jp
arpl
popf
sub
inc
cmp
pushf
or
inc
nop
cs
add
push
clc
pop
data16
mov
mov
out
fs
push
ja
push
setb
push
sub
add
jb
fidivs
mov
add
xor
cmp
push
add
mov
push
cmp
mov
in
imul
pusha
aaa
mov
jb
jp
test
push
mov
mov
inc
cmp
imul
push
enter
sbb
inc
jne
cmp
dec
call
cltd
imul
sub
inc
pop
inc
repz
pop
jb
mov
and
xchg
dec
sub
sub
push
mov
push
pop
mov
mov
gs
cmp
dec
movsl
push
push
mov
loope
pop
hlt
push
aam
mov
push
inc
pusha
outsb
push
or
ja
dec
icebp
jno
push
push
push
mulb
inc
dec
mov
dec
out
movsb
sub
push
nop
or
adc
add
push
mov
adc
adc
mov
dec
inc
sbb
pop
lahf
push
aas
cmpsb
xorb
adc
adc
jb
pop
and
stos
push
les
adc
shrb
jne
inc
lret
sub
stos
test
mov
mov
mov
xchg
pushf
adc
push
and
push
cs
jmp
add
xchg
int3
sbb
sub
dec
adc
loopne
adc
add
xchg
sub
pushf
or
dec
xor
dec
fisubs
xor
cmpb
iret
add
add
dec
testb
add
inc
xor
push
dec
pop
fisubrl
adc
fnstenv
nop
dec
or
xor
call
xchg
cmpl
xor
inc
dec
lods
enter
jns
mov
mov
inc
pop
rolb
movsb
mov
xchg
repnz
xchg
add
sbb
lret
xchg
arpl
ret
or
jns
or
adc
lods
xor
sbb
adc
adc
jb
fbld
add
push
test
xor
xor
push
xor
dec
inc
sub
dec
int
xchg
aam
out
dec
out
mov
in
pusha
daa
imul
add
and
push
insb
subb
je
and
mov
scas
inc
mov
cmpsl
push
out
add
pop
in
push
mov
in
inc
popf
adc
jne
insl
sub
push
push
push
js
je
outsb
popf
adc
adc
jp
ja
fstpl
int
cmp
insl
adc
sbb
fidivrs
add
xor
push
dec
mov
dec
test
dec
push
repnz
and
fs
mov
je
pop
cmp
add
mov
loopne
push
sub
xor
fs
je
and
dec
loopne
es
dec
and
push
orb
outsb
mov
adc
inc
testb
mov
inc
mov
xor
in
cmp
sub
cmp
inc
imul
add
aaa
cmp
mov
fildll
ret
sbb
inc
xchg
pop
mov
jecxz
repz
lock
inc
in
call
xchg
mov
cld
loopne
out
pop
cmp
adc
pop
cmp
cmp
cmp
push
aas
popa
aas
mov
movsb
aas
mov
les
fistpll
in
push
cmp
dec
dec
mov
dec
jae
xchg
iret
mov
iret
cld
ret
and
ds
in
call
cmp
push
jl
call
clc
inc
push
cmp
push
cmp
xor
jo
js
movsb
pxor
xor
dec
mov
jle
xchg
jecxz
repz
int3
repz
lock
xor
in
call
shl
xor
in
call
cmp
dec
cmp
cmp
push
aas
mov
mov
aas
sarl
fdivrs
fbld
out
leave
outsb
sti
clc
pop
ss
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
sbb
aaa
out
popf
cld
pop
sbb
das
das
cmp
add
jo
jp
mov
and
jb
je
jbe
js
jp
jl
jle
jle
sbb
cmp
popf
push
sbb
mov
push
xor
mov
inc
sbb
das
xchg
push
in
iret
dec
addps
iret
xchg
iret
int3
iret
test
aas
inc
xchg
jp
mov
shl
ljmp
stc
push
pop
xor
dec
inc
mov
into
push
out
push
das
xor
dec
scas
arpl
jbe
iret
mov
dec
cs
add
loop
out
xchg
mov
push
shll
fnstenv
loopne
xor
cld
dec
mov
adc
js
jp
jl
sbb
aaa
pop
test
sbb
cmp
sahf
aad
adc
dec
daa
outsl
inc
mov
into
andl
xor
pop
je
jbe
js
jp
sbb
aas
jmp
xor
pop
cmp
inc
jle
js
jp
sbb
xor
jbe
js
sbb
xor
sahf
bound
outsl
lahf
test
dec
jbe
ret
and
cmp
mov
mov
out
stc
clc
clc
add
jb
je
jbe
js
jp
loopne
jb
je
jbe
js
dec
out
inc
pushf
jnp
repz
adc
pusha
jmp
push
cmp
pop
or
or
or
rorl
and
fwait
cld
lahf
cld
mov
cld
scas
cld
mov
mov
mov
cld
cld
lret
cld
iret
lcall
fisttps
dec
mov
aad
jb
dec
imul
sahf
jge
sbbl
into
xchg
iret
xchg
iret
cltd
iret
popf
iret
mov
iret
lods
iret
mov
mov
mov
iret
ret
xor
cmp
jns
loop
xor
mov
xor
jle
cmp
ds
fstp
and
cmp
ret
cmp
cmp
cmp
fidivrl
fimuls
add
mov
iret
inc
cmova
cmp
add
pushf
xor
test
add
sub
mov
jmp
nop
pop
cmp
in
jmp
jb
jbe
jp
jle
xor
repz
mov
xchg
leave
ss
stc
stos
stc
scas
stc
mov
push
add
and
xor
pop
cmpsl
fisubs
xchg
jmp
xor
int3
movsb
lock
hlt
push
cmp
sbb
pop
cmp
sub
lahf
sub
mov
inc
xlat
hlt
in
push
jo
mov
lcall
aad
inc
divb
jmp
data16
mov
push
push
add
sbb
adc
add
xlat
push
shrb
jg
inc
loopne
mov
mov
repz
loope
aas
sbb
cmp
push
dec
pop
insb
stos
adc
mov
js
lahf
add
lds
jl
cmp
add
ret
mov
sbb
add
sub
add
dec
xchg
lret
sbb
push
lea
scas
add
xchg
dec
jmp
popf
addb
dec
mov
cmp
adc
xlat
mov
push
xor
stos
sub
add
sarl
lcall
sub
adc
add
shlb
in
loop
mov
pop
xchg
loope
andb
je
jg
mov
fnsave
cmpb
add
add
sub
lods
add
les
dec
add
sbb
or
or
loopne
jg
aas
sbb
add
pop
add
stos
daa
rcl
add
aas
pop
mov
or
pop
xchg
aam
arpl
int3
hlt
mov
das
add
imulb
arpl
push
and
es
mov
or
push
jge
aad
adcb
xor
into
mov
cli
or
das
shrl
jecxz
loopne
add
gs
add
aam
and
ss
add
pop
sub
sbb
adcl
pop
add
lds
dec
rorl
ljmp
out
sbb
add
ret
cwtl
jge
sbb
pop
cmp
sub
das
cld
add
pop
add
jne
loope
sarl
sbb
lock
jle
negl
cmp
add
popf
rcll
add
lcall
mov
sub
pop
or
dec
ds
push
xchg
mov
dec
mov
mov
jmp
mov
cld
jns
and
adc
loopne
sti
cmp
mov
gs
sbb
adc
test
dec
rolb
pop
movsb
or
or
arpl
push
adc
cmpsb
cmp
cs
inc
mov
adcb
or
iret
adc
or
rclb
scas
movsb
mov
jmp
gs
mov
lods
aad
mov
inc
in
dec
mov
pop
mov
cmp
scas
cld
orl
icebp
rolb
add
inc
push
add
inc
test
inc
mov
inc
in
daa
xor
or
mov
in
mov
or
bswap
sub
inc
push
dec
mov
adc
dec
pop
mov
addb
js
and
and
dec
ja
cltd
dec
mov
inc
inc
adc
jne
hlt
fsubrl
jae
arpl
cli
and
inc
push
out
dec
dec
stos
int
cmp
lcall
xor
lock
inc
push
push
push
or
or
ja
cmpl
ja
push
inc
and
inc
imul
sarl
les
jbe
sbb
sub
enter
ljmp
addb
arpl
sbb
test
add
adc
ja
adc
adc
adc
xchg
xchg
out
adc
sbb
push
or
mov
inc
movsb
lods
inc
xchg
aaa
inc
xchg
in
add
push
xchg
mov
xchg
dec
add
les
mov
dec
cltd
add
ljmp
mov
and
ja
push
lahf
punpckhbw
and
pop
add
or
push
std
jns
xor
lock
sbb
mov
sbb
mov
inc
jp
xor
dec
or
or
dec
emms
shlb
and
mov
adc
push
mov
push
rol
bound
les
ss
add
mov
and
and
cwtl
in
roll
add
fiadds
add
xor
cmp
mov
sbb
or
ret
dec
bound
pop
xchg
pop
sti
or
or
mov
cmp
in
jecxz
fdivrs
or
jg
xor
dec
popa
sbb
sbb
inc
pop
les
or
xor
and
push
dec
adc
dec
mov
xor
and
pusha
popf
jbe
les
dec
jnp
inc
fistpll
sbb
or
add
dec
sbb
xor
sub
subl
sub
nop
pop
arpl
fs
lret
out
adc
in
sub
or
push
sbb
inc
and
aam
and
jo
jg
scas
pmulhw
push
imul
movsl
lgs
scas
and
xor
mov
or
dec
popa
insl
pop
and
pop
outsb
icebp
aas
imul
push
cmp
mov
mov
mov
inc
dec
pop
mov
jne
xchg
cmp
push
jae
xor
xor
jb
lods
push
aam
adc
inc
dec
mov
push
push
push
jo
xchg
nop
loope
cmp
push
daa
or
or
dec
sbb
mov
lds
stos
and
cmc
inc
cmp
popf
push
arpl
jp
inc
in
icebp
outsl
xor
movsb
shr
outsb
sub
inc
push
dec
mov
repnz
dec
ret
dec
xchg
sbb
pop
dec
iret
jnp
dec
cld
inc
mov
pop
adc
push
das
xor
cmp
mov
dec
push
js
movsb
stos
push
fiaddl
aad
mov
movb
cmp
push
lahf
sub
test
or
push
inc
inc
push
dec
sarl
inc
fisubrl
cmp
shrb
and
and
xchg
inc
pop
xchg
dec
xor
or
aas
push
xor
sbb
arpl
inc
xor
adc
dec
aam
lods
lods
cs
mov
mov
rorb
cmpl
and
push
daa
cmovne
push
push
orb
addl
lods
xchg
xor
inc
icebp
pop
inc
xor
mov
inc
or
push
push
push
lock
bound
sub
dec
sub
push
ss
inc
test
push
inc
mov
or
inc
inc
dec
iret
add
xor
inc
inc
mov
or
aaa
negb
xor
sbb
sbbl
adc
xor
inc
and
dec
add
cltd
mov
mov
push
inc
dec
inc
or
outsl
inc
mov
pushf
mov
test
dec
jo
cmp
add
inc
sub
push
add
push
popa
jo
and
je
sahf
movsb
and
ja
and
enter
inc
xchg
and
ljmp
dec
push
ss
pop
or
sbb
and
dec
stc
jb
call
aaa
outsb
adc
push
popa
imul
add
outsl
or
sbb
dec
lds
arpl
sub
add
sub
sbb
in
add
inc
sub
dec
push
rcrb
jb
push
mov
push
xor
adcb
xor
xor
iret
fucomip
movsl
mov
dec
adc
dec
sbb
xor
pop
xor
inc
adcl
fs
or
test
daa
and
sbb
push
fs
clc
das
push
jmp
jne
decb
or
in
jb
xor
or
insb
or
scas
insl
sbb
adc
out
rcrb
inc
and
jp
push
sbb
insb
jne
insb
gs
xchg
and
mov
push
sbb
jne
adc
or
adc
lret
gs
xchg
imul
push
and
js
loopne
cmpsb
or
add
shrb
adc
xor
nop
dec
cltd
xchg
push
push
testb
cltd
xor
add
and
test
mov
xor
pop
add
mov
lds
sub
lods
je
or
call
jp
mov
lods
pop
bound
mov
shrb
out
adc
repnz
test
lods
sbb
adc
xorl
in
mov
and
inc
fsubl
dec
fwait
inc
mov
adc
xor
flds
push
inc
inc
outsl
ja
inc
mov
jns
add
in
je
jno
push
out
jp
fwait
js
mov
dec
pop
insl
aaa
flds
es
fsubl
or
inc
push
push
lds
adc
insl
insb
shll
jo
mov
xorb
dec
movsl
dec
sbb
cwtl
mov
divb
jo
push
push
mov
push
and
cld
mov
jns
bound
shll
repnz
or
lock
dec
add
in
jae
insb
popa
inc
je
pop
hlt
push
jl
mov
mov
in
outsl
mov
inc
sbb
jo
push
xor
adc
out
pop
out
repz
dec
pop
je
out
xor
addr16
xchg
insb
mov
pop
out
sub
jp,pt
cmpsb
sub
dec
dec
cli
adc
stos
xchg
out
cmp
mov
and
mov
sbb
xchg
and
popa
out
cwtl
jmp
inc
cmp
subl
xchg
iret
adc
mov
pop
dec
fidivs
mov
imul
rcll
mov
add
cmpsl
movsl
dec
popf
cli
push
add
xchg
addb
xchg
and
add
jae
iret
inc
mov
mov
rorl
incb
mov
enter
add
push
push
call
dec
or
shll
lods
adc
xchg
sbb
scas
mov
push
mov
mov
dec
add
add
sbb
call
add
or
cmpl
adc
lcall
mov
xor
dec
cld
cld
push
xor
pop
and
or
push
xlat
dec
jmp
or
jne
push
push
scas
cmp
mov
push
cmpb
movl
inc
mov
std
pop
inc
mov
fcmovnb
repz
repz
xchg
and
in
test
adc
mov
jns
push
mov
je
jmp
jecxz
pushf
pop
in
mov
dec
leave
aad
xchg
pop
or
repz
inc
cmp
sub
xchg
fisubrs
xchg
mov
xchg
sti
inc
adc
jmp
inc
dec
mov
jle
pop
jbe
push
ljmp
jge
les
mov
xchg
xchg
fdivs
cmpl
aam
cmp
ljmp
loopne
aas
inc
pop
fwait
and
dec
xchg
js
lods
aas
popf
lods
push
mov
add
cmp
pop
jne
pop
adc
inc
aad
shll
cs
mov
push
js
sbbb
jbe
lock
out
pop
jne
cmc
mov
ficompl
adc
pop
push
call
add
cmp
xlat
jb
mov
pushf
ret
add
xchg
push
icebp
add
out
fs
mov
jo
cmp
pushl
dec
aaa
inc
pop
xor
test
or
jmp
jne
clc
jge
adc
movl
mov
xor
lods
sbb
hlt
aaa
inc
jl
test
adc
faddl
xbegin
ss
mov
pop
cmp
or
dec
mov
cld
lret
dec
adc
lret
mov
or
inc
mov
adc
div
push
in
into
mov
fsubrs
addr16
call
jecxz
rcr
clc
mov
lock
add
mov
and
hlt
cmp
inc
in
cmp
cmpsb
lods
mov
dec
jmp
add
test
or
jle
and
ja
sub
pop
int
add
dec
add
fiadds
clc
andl
shll
pop
inc
lock
mov
mov
in
pop
mov
xchg
xor
sbb
ds
in
cld
push
pop
gs
mov
inc
stos
add
xor
pop
pop
dec
ss
sbb
xchg
adc
and
gs
out
cmpb
add
cld
out
orb
jo
aad
dec
popa
bound
rolb
mov
mov
pop
enter
daa
cmp
testl
pop
jmp
sub
ret
or
sbbl
test
out
mov
ss
flds
jecxz
pop
add
push
push
dec
sub
sbb
je
lret
aad
sbb
sti
loopne
jo
loope
xchg
dec
cld
loop
inc
jb
push
or
pop
mov
outsb
push
dec
push
or
push
adc
dec
jp
das
or
sub
mov
mov
pusha
outsb
add
jae
inc
dec
mov
sub
decb
in
xor
incl
mov
adc
xchg
pushf
addr16
pop
adc
fldl
sti
add
jmp
adc
icebp
mov
rclb
push
lret
rolb
call
js
iret
dec
dec
cld
test
out
mov
or
loopne
mov
lret
lock
adc
insb
ret
sahf
sbb
mov
pminub
enter
xchg
nop
std
push
sub
jge,pt
inc
push
aam
andb
loopne
call
pusha
stos
pop
inc
cli
mov
xor
das
jg
outsl
push
pop
sub
add
inc
ror
sub
scas
xor
scas
movsl
sbb
ljmp
sub
mov
test
inc
or
nop
movsl
jl
nop
jo
outsb
sub
dec
in
xchg
sub
hlt
or
adc
sbb
inc
adc
subl
ror
enter
loopne
jp
loopne
inc
pop
stos
mov
add
push
pusha
sbb
jge
fbld
int3
inc
movsl
or
in
dec
sbb
ret
dec
icebp
mov
int3
inc
push
or
mov
adc
and
push
mov
push
test
mov
cmpsb
pop
mov
add
push
add
ret
fcoms
lahf
cltd
rolb
inc
inc
stos
or
hlt
es
push
in
jl
inc
adc
lea
and
cli
int3
aas
jae
cltd
adc
dec
nop
je
rcl
dec
adc
adc
enter
icebp
jae
into
mov
dec
orl
inc
ret
dec
inc
pop
inc
out
adcb
sarl
je
xor
leave
inc
sarb
jbe
idivb
jge
fwait
mov
jb
sbb
and
outsb
mov
jl
pushf
or
pop
or
mov
and
stc
test
pop
ret
imul
call
jae
add
push
and
or
xorl
inc
or
std
jg
nopl
xorl
mov
inc
cmpsl
dec
push
jmp
mov
xchg
loopne
push
xchg
incb
es
dec
movsb
shll
jb
or
push
gs
mov
fcomps
orb
or
jno
push
xor
inc
adc
xchg
sbb
sbb
xor
orl
std
nop
pop
out
mov
mov
or
gs
jmp
push
mov
xchg
xor
xor
fs
sbb
sub
inc
add
dec
ds
insl
or
pop
adc
hlt
testl
ret
pop
cltd
push
pop
inc
and
xchg
jmp
inc
cmp
mov
movsl
clc
arpl
or
imul
mov
in
sub
jl,pt
cld
inc
push
push
repz
adc
sbb
cmovb
or
add
ss
sub
or
sub
push
fs
xchg
mov
pop
sbb
jns
ret
push
or
mov
inc
adc
mov
jo
mov
pushf
adc
push
sahf
jns
inc
lahf
jmp
std
call
jg
xchg
sbb
mov
mov
outsl
xor
test
mov
cmp
lea
adc
inc
mov
dec
dec
test
stos
jns
sbb
dec
repnz
cltd
inc
mov
xchg
out
dec
push
arpl
mov
and
js
shl
or
mov
jne
fdivrl
and
movb
insb
inc
adc
sti
cmp
or
inc
xchg
pop
cld
add
mov
push
das
lock
cmp
popf
mov
mov
mov
stc
cld
or
push
pop
fsts
fcompl
adc
and
les
ficomps
push
jnp
lret
mov
xchg
jnp
inc
mov
and
test
cltd
push
inc
xor
adc
xchg
bound
test
mov
add
dec
scas
mov
xor
dec
ds
jg
arpl
test
xchg
pop
xchg
aaa
pop
mov
icebp
sub
push
jbe
shld
mov
movsl
mov
into
sti
adc
ficoml
movsb
sub
or
jb
add
in
cmpsb
adc
and
movsl
mov
jge
inc
out
sub
or
xchg
repnz
xor
and
add
push
push
push
bswap
inc
sti
les
inc
aad
leave
cmc
inc
insl
dec
pushf
or
fsubr
minps
addb
adc
push
call
iret
data16
rorb
sub
movsl
adc
filds
mov
cs
jae
push
adc
inc
in
sub
push
sbb
pop
jae
xlat
or
inc
loopne
std
mov
mov
mov
hlt
jbe
add
pop
scas
xchg
adc
inc
inc
inc
dec
and
cld
jbe
lea
inc
or
push
mov
push
mov
das
and
lret
push
adc
enter
jmp
push
dec
pop
push
mov
fcomi
rorl
jg
adcl
ficoms
pop
icebp
xchg
xchg
dec
xchg
adc
push
popa
adcb
in
mov
pop
das
sbbl
repnz
pop
lahf
push
or
or
mov
call
and
je
xchg
push
scas
into
cs
rcll
sub
pop
ret
rcrl
pop
aas
push
lock
adc
sub
and
sub
test
and
out
dec
xor
sbb
sub
xchg
pop
repz
push
repnz
out
jmp
or
imulb
fists
mov
mov
loopne
insb
cmp
cmp
jg
add
xor
loopne
cld
add
sbb
mov
sti
test
and
sti
and
sub
push
incb
enter
or
repnz
pop
pop
cmp
pusha
or
mov
pushf
notl
fpatan
loopne
sub
call
dec
insl
aam
inc
adc
lret
sbb
xor
ret
inc
mov
sub
mov
pop
mov
push
and
and
shl
pop
push
pop
js
cld
je
cmp
and
dec
loopne
mov
call
pop
or
icebp
or
and
lcall
push
mov
lea
push
test
jge
push
mov
push
mov
nop
or
enter
and
scas
adcl
std
lods
pop
lea
les
das
xchg
in
xor
jmp
cmpl
add
adc
cmp
cmpsl
fsubs
jmp
or
jp
sbb
cltd
je
pop
bound
mov
hlt
std
xchg
and
dec
xor
dec
bound
push
pushf
in
and
dec
mov
pop
inc
rclb
lock
and
adc
push
les
xor
sahf
lock
scas
inc
adc
jg
jmp
jae
pop
sahf
stos
popf
dec
mov
sbb
daa
adc
test
mov
sbb
nop
cmc
inc
inc
enter
inc
mov
xor
setne
loopne
dec
inc
xchg
aam
push
dec
dec
popa
testl
and
in
mov
cltd
mov
fcompl
roll
cmp
into
mov
lret
add
jle
pop
pop
shlb
ja
sbb
nop
jae
in
fcoml
dec
ss
mov
fwait
dec
sub
adc
testl
xor
mov
push
mov
hlt
jp
xchg
adc
push
adc
repz
das
hlt
add
mov
inc
fsts
ret
rorl
in
cmp
loop
cmp
ss
inc
push
xor
adc
arpl
jo
jo
shr
or
inc
ret
sbb
cmp
les
idiv
push
add
sbb
sbb
xchg
sub
fcoms
je
xchg
mov
imul
call
lock
sub
sahf
call
mov
push
pop
push
lods
pop
push
xor
repnz
orb
adc
jmp
sbb
aam
mov
and
push
mov
imul
sarb
test
fbld
or
lret
push
inc
push
push
cmp
mov
dec
cltd
loope
insb
inc
ljmp
pop
jmp
jl
xchg
push
in
loopne
jae
dec
jno
and
out
cmpb
dec
insb
push
stos
push
or
test
aad
jg
push
push
inc
lea
mov
cmp
inc
push
mov
cmpsb
stc
gs
xor
and
mov
orb
arpl
inc
in
and
jl
mov
pop
xchg
aaa
push
mov
mov
jo
or
mov
xor
popa
adc
pop
std
mov
leave
lcall
jne
clc
mov
test
pop
pop
mov
popf
subb
pop
xor
xchg
sub
pop
xor
ja
jb
sahf
fs
cmp
fistps
sbb
mov
icebp
sbb
or
push
loopne
xor
xchg
xchg
xor
add
int3
loop
add
call
pushf
mov
inc
jp
lds
adc
inc
mov
adcl
or
sahf
out
lds
cmp
add
add
add
test
adc
out
pop
test
inc
or
lods
inc
xor
lock
imul
lods
inc
adc
test
dec
dec
les
orb
leave
push
test
or
rcrl
pop
xor
pop
es
pop
cld
inc
xor
int3
ss
js
jne
test
lret
addr16
mov
mov
push
xchg
jle
push
cltd
test
mov
pop
mov
inc
jl
push
jl
adc
bound
xor
mov
shl
adc
loope
insb
dec
xchg
push
jmp
and
out
gs
jmp
push
inc
jnp
jp
push
out
and
sbb
hlt
ljmp
rorb
fsubs
push
jno
xchg
push
dec
or
movsl
movl
add
fiadds
les
insb
arpl
subl
push
test
je
lcall
out
js
pop
ljmp
pop
xor
or
and
dec
enter
push
sub
inc
xor
pushf
sbb
cmp
and
mov
les
loope
jmp
dec
movsb
and
lea
ret
outsb
movsl
cltd
push
hlt
sub
imul
or
clc
std
jl
mov
stc
sub
jp
pop
lods
sub
ja
fs
jmp
scas
mov
add
cmp
jne
mov
push
add
push
pop
push
loop
jecxz
and
loop
mov
fnstsw
je
movsb
pop
add
cmp
jne
cmp
ffree
test
sbb
pop
inc
cld
pusha
insl
sbb
flds
sub
clc
test
test
push
and
dec
repnz
jl
push
and
mov
repnz
lret
push
xor
mov
pop
aas
inc
mov
idivb
sub
push
shr
and
loope
inc
arpl
mov
mov
aad
call
pop
xor
push
push
and
sti
xchg
sbb
test
sub
pop
push
pop
out
enter
dec
je
push
dec
add
sub
imul
movsl
shlb
cld
adc
fsubl
cwtl
jb
or
aaa
mov
mov
call
data16
push
mov
movsb
mov
adc
popf
push
adc
aam
test
and
ja
dec
int3
ror
sti
nop
and
and
mov
out
or
push
push
aam
xor
fwait
test
mov
jae
in
pop
je
cmp
adcb
pop
cmpsb
imul
mov
inc
loope
xor
sti
jl
jno
pop
and
xorb
xchg
bound
and
add
push
sbb
call
cmp
cmc
pushf
adc
jb
or
int3
sbb
scas
inc
mov
daa
and
pop
pop
iret
add
test
mov
cli
mov
orb
and
imul
mov
adc
mov
out
dec
cld
mov
filds
or
inc
and
add
sbb
push
hlt
sbb
push
add
sbb
cmc
mov
xor
sti
je
in
add
shll
and
mov
mov
adc
add
xchg
nop
sub
pushf
fs
cmp
js
push
int3
sbb
pop
inc
cs
xchg
les
in
lds
mov
lea
dec
sub
jl
repz
and
inc
pop
add
mov
scas
and
xchg
xor
out
lods
mov
fisubs
outsb
out
push
test
and
or
or
mov
push
test
add
jle
or
mov
std
loop
jno
in
jg
int
mov
push
mov
add
mov
cmp
jl
sbb
sarb
sbb
jno
mov
add
mov
sbb
xor
inc
and
xchg
inc
jg
cmp
sbb
jmp
add
jl
add
sub
add
cmp
jl
data16
cmp
xor
bswap
dec
inc
sub
lods
roll
or
cmpsl
aam
rcrb
add
cmpb
jne
inc
ds
add
das
mov
sub
xorb
xor
mov
adc
ss
sbb
xor
mov
add
or
ret
fstl
adc
cmp
add
push
ljmp
lds
mov
mov
and
fs
inc
int3
xor
sbb
adc
cmp
lds
sbb
mov
mov
sbb
adcb
enter
or
sub
or
loop
mov
cltd
push
cmp
mov
jnp
fsts
adc
cmp
test
fcoml
sub
out
scas
jbe
inc
or
sub
cmp
push
xchg
sub
in
push
cmpsl
loope
pusha
out
push
outsl
and
pop
fsubl
jno
cwtl
aaa
inc
cmp
push
dec
bound
or
lret
imul
fmuls
lea
cmp
and
and
nop
in
shlb
aam
call
adc
sub
mov
mov
mov
mov
push
call
bound
andl
shlb
popa
and
fisttps
and
movsl
std
loopne
scas
lea
mov
fmul
xchg
and
mov
dec
add
movsb
xor
and
inc
aam
cltd
add
rcrb
inc
sub
xor
test
ljmp
xor
fs
negb
and
int
fprem
rorl
dec
test
je
and
and
js
mov
das
scas
ficompl
pop
and
insb
leave
cwtl
mov
adc
cmp
icebp
out
sub
or
inc
jmp
iret
push
push
dec
and
xchg
int3
dec
mov
adc
xchg
rcr
inc
rorb
mov
jmp
dec
outsb
xor
out
inc
lret
adc
ret
sub
lahf
xchg
xor
xchg
stc
sub
lahf
lahf
and
sub
push
sbb
popf
cmp
cld
or
adc
pop
add
add
mov
xchg
cmp
int3
inc
jg
mov
pop
or
or
adc
or
test
aas
add
daa
and
push
xchg
movsb
int3
outsl
jmp
inc
in
cmp
clc
adc
sbb
test
in
and
or
or
dec
xchg
loop
pushf
pop
adc
mov
add
inc
adc
push
and
inc
or
repz
adc
xchg
mov
inc
cltd
sub
or
adc
and
dec
decl
and
inc
pop
push
mov
cltd
xor
or
sbb
inc
add
or
jmp
push
mov
adc
sarb
sub
das
imul
divl
leave
dec
pop
and
pop
imul
mov
and
push
mov
inc
pop
xor
adc
enter
xor
pop
adc
jecxz
pop
lock
or
lods
ljmp
mov
adc
or
push
mov
outsb
ss
test
pop
and
and
and
adc
jnp
les
and
out
cltd
mov
std
loop
imul
inc
dec
sbb
mov
adc
sub
lahf
add
jb,pn
adc
xchg
test
sub
add
enter
or
or
push
addr16
shll
add
jmp
orb
jns
add
push
sti
out
adc
daa
sbb
push
loop
insb
and
jmp
cmp
ss
xchg
inc
jp
or
inc
dec
push
mov
adc
les
ret
ret
rcrl
insb
and
lods
mov
push
std
xchg
jns
mov
add
cmp
xorl
pop
push
lahf
pop
jl
pusha
and
out
push
push
pop
daa
lock
cmp
and
add
loope
mov
push
push
push
push
xchg
hlt
aam
call
adc
xchg
dec
xchg
add
push
cmpb
sbb
inc
adc
mov
into
or
fistps
or
xorl
je
fildll
repz
daa
push
mov
cmp
push
inc
xlat
pop
push
sub
rcrl
sub
das
or
in
jbe
jle
xchg
cmp
mov
adc
cld
xor
rcl
or
pop
and
lahf
sbb
hlt
adc
mov
jmp
mov
push
and
mov
jmp
cmp
sbb
and
test
jl
sbb
into
ljmp
inc
repnz
mov
fcmovnb
movsl
int
gs
into
imul
in
mov
insb
or
lret
rcrb
sbb
and
push
mov
mov
push
sub
add
push
insl
sbb
dec
pop
jo
aas
push
es
mov
push
mov
jmp
scas
sbb
pushf
adc
nop
adc
popf
bound
sub
call
inc
mov
dec
push
sbb
push
int
test
repnz
mov
jl
in
movl
jge,pt
mov
xchg
xor
and
push
push
movsb
fs
lods
jae
popf
pop
idivl
push
mov
jmp
and
imul
pushf
dec
sbb
add
push
xchg
add
mov
ret
jge
sbb
mov
or
repz
ss
dec
jo
dec
cwtl
push
dec
push
and
push
rolb
lahf
mov
daa
leave
inc
add
push
pop
pop
aad
mov
orb
add
and
call
lods
and
add
push
test
jno
and
cmp
push
push
gs
or
lahf
jmp
cmp
xchg
adc
ja
sbb
icebp
mov
pop
sub
pop
mov
and
fsubrl
adc
jnp
fistl
push
in
adc
add
mov
dec
repnz
inc
adc
adc
sub
cwtl
sbb
lods
jbe
test
xchg
mov
push
andl
mov
jb
add
and
cld
popf
hlt
pop
adc
add
sub
addr16
dec
lock
pop
push
loop
sti
or
push
pop
movb
jmp
cmp
adc
aas
add
gs
cmp
cmp
xchg
xor
and
test
jmp
or
fiaddl
xchg
int3
or
inc
add
adc
ljmp
cmp
and
and
mov
or
adc
jmp
push
xchg
cmp
nop
stos
sarl
push
notb
aaa
insb
xor
xchg
mov
push
jo
push
ljmp
pop
pusha
and
adc
int
mov
les
xchg
loope
push
sarb
add
add
rolb
jne
inc
shr
cmp
icebp
notb
adc
push
push
add
sub
imul
into
insb
jno
arpl
inc
rcrl
adc
ret
lock
call
imul
sbb
cs
bound
push
push
mov
hlt
das
mov
in
hlt
outsb
dec
int
pop
push
jns
lret
pop
cmp
int
add
popa
popa
xlat
pusha
lea
pushf
add
add
dec
push
mov
mov
or
adc
xchg
sbb
je
insb
dec
jp
or
jg
xor
call
xor
shr
add
test
subl
mov
sub
and
or
push
push
dec
cmpl
in
sbb
sbb
pop
or
test
and
adc
adc
je
jbe
push
mov
xchg
pop
xchg
cmp
call
loop,pn
lods
int3
jmp
test
imul
lret
jb
nop
sub
push
inc
or
or
pop
adc
inc
inc
sarb
enter
add
add
dec
fsubl
movsw
mov
mov
sbb
add
mov
inc
das
rclb
xchg
mov
test
add
loope
sbb
and
and
sbb
test
and
dec
jb
pop
mov
cmp
mov
add
popa
into
cs
fdivs
adc
das
aam
inc
loop
xchg
and
adc
inc
push
testb
mov
push
add
push
or
inc
lahf
and
cmpsl
ja
hlt
jo
push
insb
cmp
movsl
daa
and
fs
push
push
xor
push
or
pushf
les
pop
jo
xchg
insl
jns
mov
lret
dec
icebp
cltd
inc
push
push
mov
cld
data16
push
fsubrl
xor
icebp
lret
or
fs
dec
aam
mov
xchg
fsubrl
nop
nop
xor
add
jmp
movsb
int3
in
xchg
sub
push
cmpsb
or
push
sbb
dec
cli
or
jl
mov
and
or
adc
mov
dec
mov
nop
push
out
in
add
popa
sbb
inc
push
js
rorb
cmp
cmc
imul
aam
adcb
loopne
push
push
outsl
ficoml
out
push
dec
push
fwait
loopne
mov
jae
inc
jp
xchg
cltd
shl
dec
ret
xchg
ljmp
lcall
mov
sbb
mov
cltd
push
test
xchg
out
and
int
push
adc
ja
jo
sbb
xchg
jno
jne
and
or
jmp
rcll
fsubs
or
sub
sbb
xor
push
add
popf
cmp
pop
add
inc
xchg
int
lret
or
aas
pop
cmp
adc
nop
inc
pop
inc
mov
jg
mov
stos
push
xchg
inc
inc
adc
jne
rorb
mov
das
les
and
jo
jo
xchg
imul
xor
inc
imul
xor
mov
inc
xchg
xorb
mov
sub
cmp
shlb
xchg
outsb
xchg
push
cmp
jmp
or
push
push
mov
in
ficomps
jmp
mov
mov
popa
mov
insb
shlb
xor
test
jmp
sub
jns
inc
mov
insl
lahf
push
or
sarl
mov
pop
xchg
xor
sub
pusha
test
push
or
dec
push
add
sub
sbb
insb
fmulp
cld
ss
xor
les
call
mov
cmp
mov
or
mov
adc
data16
call
sub
push
and
addr16
inc
pop
and
std
adc
lds
jb
cmpb
cmp
pop
adc
xor
sbb
add
jg
lock
pop
lods
mov
out
imulb
inc
hlt
mov
and
popf
xchg
aad
stos
jns
sti
or
pop
or
scas
ret
sahf
es
shr
test
push
xchg
dec
adc
pop
push
add
jecxz
and
mov
push
test
out
push
jne
cmp
testl
inc
xlat
lea
adc
test
mov
push
adc
gs
push
cmc
stos
and
orb
mov
adc
add
andb
mov
xchg
sbb
cmc
dec
adc
dec
leave
mov
call
leave
bound
sbb
add
mov
push
xlat
notb
ret
mov
dec
fisubs
mov
cli
addr16
adc
call
enter
mov
das
mov
iret
in
imul
ss
enter
add
mov
pushf
inc
jbe
add
mov
sahf
clc
cmp
wrmsr
push
xor
mov
jo
fs
mov
loop
mov
inc
call
in
out
dec
xchg
inc
call
push
pop
mov
and
xor
test
sbb
icebp
enter
enter
addr16
rcrb
mov
ss
or
xchg
and
mov
xchg
sar
or
sub
inc
jmp
dec
sub
test
cmc
fcmovb
or
or
inc
add
out
pop
pop
enter
jnp
scas
movsl
in
dec
mov
ljmp
vfrczsd
fwait
test
stos
addb
ret
xchg
sub
gs
arpl
nop
xchg
fbld
movsb
int3
adc
inc
pop
sbb
fisubrl
xor
jmp
call
or
leave
jp
loopne
fadds
fyl2xp1
test
in
jbe
test
push
xor
int
je
sahf
in
adc
rcll
mov
inc
sbb
push
lds
push
outsl
leave
add
in
lcall
shlb
mov
dec
sti
movsl
or
inc
roll
hlt
das
mov
shll
mov
dec
jge
ja
daa
test
lcall
out
stc
cld
jbe
mov
popf
movsl
movsb
or
dec
xchg
sub
aas
xchg
subb
fiadds
push
das
xchg
cmp
and
in
push
push
dec
jno
lock
xchg
xor
std
mov
pop
sbb
xor
xchg
jae
adc
and
test
or
mov
fs
in
and
add
cmp
xchg
sbb
and
addb
sbb
inc
sub
in
push
inc
insl
mov
adc
outsb
popa
and
test
bound
or
mov
lds
push
sub
pop
adc
add
daa
dec
cmp
dec
push
out
adc
and
add
and
sti
cmp
sahf
cmp
fmuls
fiaddl
jl
loop
adc
scas
das
movb
add
cmpb
decb
cmp
clc
xorl
jl
insb
push
mov
adc
loopne
in
arpl
mov
sub
lods
adc
adc
push
shlb
stos
xchg
dec
xchg
xchg
add
aad
push
in
adc
mov
inc
dec
sbb
jl
xchg
fsubrl
push
and
movl
shrw
mov
testb
push
push
sbb
mov
maxps
shr
add
or
sbb
cmp
xchg
mov
and
adc
or
cmpsl
push
xor
push
inc
mov
mov
or
call
vpsubsw
and
lea
enter
cmp
jmp
mov
or
add
jbe
lsl
mov
cmp
or
adc
pop
mov
sub
xor
cmp
pop
inc
jmp
jns
nop
and
mov
mov
sbb
ret
sbb
mov
and
jmp
xor
mov
pop
ja
add
js
or
push
mov
and
inc
pop
push
push
jmp
dec
push
add
test
divb
pop
out
push
push
push
push
xor
fdiv
pop
idivb
push
xor
arpl
jge
or
xor
mov
sahf
insl
inc
rcrb
sbb
xchg
mov
push
out
dec
cwtl
dec
ds
mov
push
nop
mov
mov
and
add
and
lea
daa
lret
lret
mov
adc
inc
inc
xor
push
dec
data16
leave
mov
sti
call
les
test
pop
insb
jecxz
dec
push
jecxz
sub
cmp
cmc
dec
cmp
xchg
jmp
xchg
jmp
cmp
inc
stc
add
rcll
lret
enter
lret
je
sub
mov
jno
inc
add
out
mov
and
stos
inc
sub
ret
pop
pop
nop
xor
and
daa
jbe
inc
push
xchg
add
mov
out
mov
mov
call
adc
mov
dec
fwait
into
adc
mov
loopne
cmp
push
daa
push
fldenv
movsb
in
daa
ret
movsb
push
clc
inc
call
push
adcb
mov
lea
std
aas
sar
jo
push
jne
push
cld
insl
dec
sub
test
mov
sbb
inc
and
dec
in
popa
pop
push
repnz
xchg
stc
jle
inc
aaa
xor
mov
add
nop
aad
push
push
push
outsb
push
pop
push
mov
adc
test
and
andb
push
mov
cmp
leave
orb
mov
mov
dec
jge
sub
into
loope
add
and
call
div
out
adc
mov
mov
loope,pn
imul
int3
leave
jo
jne
xchg
add
lea
test
jb
loope
out
sbbb
mov
int3
xorb
mov
orb
adcb
mov
scas
lea
ds
xchg
jecxz
dec
xchg
push
adc
jmp
jle
push
jbe
js
imull
shll
mov
sarb
push
hlt
sbb
inc
or
test
and
pop
or
je
jg
mov
xchg
test
push
std
adc
or
dec
and
cmpsl
push
cmpsb
sbb
pop
shl
out
iret
loop
leave
stc
dec
inc
pop
mov
outsb
cmpb
add
leave
cmp
xlat
out
xchg
mov
shl
pop
shr
bound
dec
call
xor
adc
jnp
pop
push
dec
add
or
push
ljmp
jae
dec
mov
or
jne
fsubl
adc
outsb
xchg
push
test
xorl
inc
add
adc
cwtl
leave
sbb
jl
sahf
adc
sbb
xchg
xchg
push
cli
inc
popf
arpl
stc
lock
pop
inc
inc
sbb
pop
sbb
push
cld
xchg
push
push
or
decl
xchg
xor
or
lcall
xchg
jbe
sub
mov
or
push
daa
pusha
cmpsb
mov
inc
adc
xchg
dec
add
faddp
push
adc
loope
push
cmp
add
xor
leave
mov
iret
mov
addr16
pop
pop
xchg
mov
adc
je
and
inc
aas
test
lcall
jmp
shll
outsl
sarl
repnz
bnd
inc
das
aas
rcrl
and
dec
loop
int
loopne
ss
movsb
mov
cmc
mov
das
int3
inc
xchg
js
shlb
jnp
adc
jmp
pop
nop
sbb
repnz
mov
mov
insb
cli
push
nop
fbld
je
push
adc
mov
adc
and
push
lds
xor
and
rol
loop
and
shll
out
gs
or
cwtl
enter
and
push
mov
mov
or
enter
pop
cld
jge
andl
push
inc
dec
add
adc
sbb
adc
and
mov
or
adc
jb
ljmp
mov
das
jle
push
jbe
enter
scas
dec
test
lods
mov
push
jge
xor
sub
leave
dec
cmp
mov
jae
or
insb
or
push
pop
jb
fcoml
sub
rcl
repnz
xchg
xor
jp
popa
ret
clc
jo
lock
push
lods
cmpl
jp
movsl
out
repz
mov
je
lea
add
cmp
aad
xor
nop
mov
push
adc
adcb
fstl
jl
dec
jae
inc
adc
xor
cmp
and
clc
mov
mov
mov
adc
xchg
or
lds
pop
cltd
xchg
inc
add
inc
lret
cmp
push
jb
pop
rclb
mov
test
out
mov
ja
in
call
shr
sub
sub
push
add
pop
inc
inc
or
jb
orb
add
pop
mov
mov
outsl
sub
stos
mov
scas
filds
dec
dec
aam
ret
push
xor
inc
adc
call
jl
jne
jmp
arpl
mov
push
mov
std
sbb
push
mov
or
sub
mov
xor
movsb
sbb
pop
push
les
pop
movl
mov
cwtl
sub
lods
imul
lods
ds
inc
in
mov
xor
push
pop
pop
push
les
shlb
sub
sbb
mov
add
mov
xchg
mov
pop
ja
subps
test
sarb
xchg
mov
jecxz
cmp
or
iret
adc
outsl
pop
push
call
daa
cmp
and
xchg
lret
jge
cwtl
test
dec
and
incl
sbb
hlt
pop
or
add
ret
pop
repz
mov
and
mov
or
and
pop
cltd
and
lods
clc
push
sbb
xchg
push
adc
rcr
repnz
or
add
arpl
pop
jae
sti
adc
mov
stc
jbe
shrb
xchg
mov
xor
mov
dec
and
jb
adc
leave
push
add
jo
je
popf
mov
loop
fwait
push
mov
lea
pop
sub
mov
push
aaa
mov
mov
sbbl
sbb
and
test
test
jg
mov
xor
or
and
cmp
mov
cmpsl
in
lret
add
jecxz
lea
das
ja
ret
xchg
inc
testl
pop
rcrl
dec
clc
ja
inc
das
adc
ficoms
nop
sbb
sbb
and
mov
fnstenv
and
inc
das
adc
pusha
ds
dec
adcl
dec
sub
lea
jl
and
lahf
xor
test
sub
ficoms
add
cltd
cli
nop
inc
rolb
lcall
rorl
rorb
addb
mov
je
pushf
test
aam
jb
into
inc
push
icebp
test
ret
inc
mov
mov
mov
and
xor
pop
adc
push
mov
sbb
mov
jecxz
dec
fs
insb
adc
in
push
divl
pop
iret
sahf
out
jns
sub
gs
mov
or
test
cltd
adc
ret
sub
push
adc
lods
imul
or
clc
cmc
inc
cltd
ret
and
sbb
test
push
xchg
and
mov
out
iret
testl
add
hlt
inc
mov
jmp
pusha
or
and
nop
and
lock
xchg
mov
and
xor
sub
call
test
xchg
push
cld
push
and
inc
imul
ja
call
jno
mov
cmp
orb
lcall
cmp
aas
mov
or
out
xchg
int3
repz
popf
cwtl
loopne
test
adc
loopne
repz
mov
test
clc
push
lods
fisubs
sub
push
nop
add
shl
or
ds
lea
dec
jb
lahf
test
or
sub
pop
push
cmp
repnz
cmp
andl
aaa
push
mov
mov
sub
lcall
adc
dec
cmp
inc
add
adc
nop
xchg
or
adc
lea
cld
pop
enter
xchg
rorl
mov
dec
inc
in
add
cmp
je
push
sub
mov
sub
je
shrb
and
fmulp
into
pop
and
rcl
stos
shlb
imul
push
mov
jl
das
movl
cmc
mov
add
sbb
or
adc
call
cli
fists
fnstcw
push
xor
movl
push
mov
rclb
mov
xlat
inc
or
push
xchg
add
lret
push
inc
je
dec
jg
push
or
arpl
xchg
dec
xor
cwtl
xorl
fsubl
xor
sbb
push
or
inc
cmp
and
test
inc
dec
enter
jne
xlat
push
in
dec
loop,pn
mov
dec
inc
aad
mov
mov
jmp
cmp
imull
dec
imul
xchg
xchg
add
les
xchg
or
inc
cmp
jb
cmc
pop
cmp
mov
jae
aam
mov
gs
lock
adc
stos
gs
call
lea
jbe
jb
mov
push
or
push
outsb
cmpsl
arpl
fstps
hlt
mov
fs
sub
sub
or
pop
arpl
dec
xchg
pop
mov
mov
xchg
inc
add
add
in
decb
push
mov
inc
loop
inc
hlt
mov
daa
add
cmc
jnp
dec
bound
ljmp
cmp
dec
fwait
or
jg
subl
push
mov
sbb
fisttpl
mov
imul
out
xchg
movsl
cld
fmuls
bound
add
lea
xchg
into
jle
ljmp
leave
es
adc
inc
sub
sub
scas
xchg
stc
insb
pop
add
push
loop
fprem1
lcall
fsubr
or
dec
add
pop
pop
test
mov
loopne
mov
mov
test
clc
mov
and
test
cmp
lret
mov
call
mov
pusha
mov
push
adc
mov
jg
pushf
and
inc
call
inc
andb
cwtl
lock
xorb
call
xor
xor
in
xchg
ljmp
mov
adc
pop
mov
cmp
inc
jge
ljmp
pop
dec
jne
ss
xor
stc
push
cltd
jp
adc
sarb
orl
sub
and
or
ljmp
ds
push
rclb
or
jnp
jmp
xor
or
pop
sub
cmp
jno
dec
jp
pop
fildll
cmpsb
jbe
adc
and
adc
jge
xor
bound
adc
sbb
mov
or
cld
movsb
cld
in
mov
lea
add
add
push
push
test
jae
lea
push
movsb
xor
sub
push
or
xchg
dec
sbb
insl
xor
aam
fdivrp
sbb
or
sub
pop
lock
es
daa
std
adc
xchg
push
int
jo
ret
sub
arpl
pop
mov
in
into
xchg
out
ljmp
push
sub
push
jnp
inc
and
andl
mov
jp
test
adc
or
or
pop
pop
sub
pop
stos
test
inc
mov
mov
and
cmp
adc
shll
lea
cmp
call
pop
or
jl
movsl
or
loop
lock
cmpsb
mov
int3
mov
fwait
push
test
push
out
loope
xor
mov
xor
movsb
xor
mov
adc
les
mov
jp
into
jp
add
adc
sub
inc
aaa
data16
ficoms
stos
and
xlat
in
outsl
sub
xchg
mov
and
dec
mov
icebp
andb
rolb
cmp
sbb
or
out
movsb
stos
dec
dec
adc
or
fucomip
xchg
icebp
jne
sub
add
lock
std
lock
xchg
dec
das
xor
adc
sbb
jnp
cmp
adc
mov
repz
in
aad
or
pop
inc
cmp
out
gs
xor
shll
push
ds
jmp
sar
test
cmp
fcomps
or
cmpb
mov
popa
leave
pushl
fdivp
ds
test
outsb
pop
and
enter
adc
mov
push
adc
xor
stos
sbb
negl
and
pop
stos
filds
dec
das
roll
icebp
mov
test
ja
inc
add
into
call
je
push
fisubrs
cs
xchg
xchg
mov
cmp
test
sbb
popa
add
mov
sbb
adc
push
cwtl
push
xor
fs
pop
xchg
inc
in
push
mov
fxch
mov
inc
or
xchg
dec
and
push
mov
subl
and
aaa
push
inc
insl
xchg
fisttpl
loope
adc
rcl
xchg
data16
cli
fldt
call
or
out
mov
adc
dec
lods
aam
daa
icebp
inc
ret
cld
adcb
and
push
call
ja
sub
sub
mov
test
jmp
or
pop
mul
data16
mov
mov
imul
inc
push
push
daa
inc
adc
push
unpckhps
xchg
xchg
adc
sbb
adc
and
pop
sbb
adc
pop
call
fs
or
in
pop
and
into
cmp
lahf
jno
push
stc
aam
mov
or
sbb
sbb
inc
and
and
sub
xor
cmp
cmp
inc
inc
and
cs
mov
dec
stc
into
test
sbb
add
icebp
mov
mov
jne
add
enter
adc
jmp
sbb
shrl
in
ret
and
dec
adc
pop
adcb
dec
clc
das
adc
or
and
xchg
sub
or
push
or
inc
call
incb
mov
inc
call
jg
push
and
mov
lods
mov
pop
lea
fld
or
call
hlt
and
fnsave
pop
inc
dec
cmp
lret
mov
push
in
lahf
or
jmp
xchg
or
data16
and
or
fsubrl
add
jmp
jle
lock
sbb
xchg
adc
lahf
nop
adc
inc
pushf
and
dec
cmp
push
outsl
push
inc
dec
jmp
jle
lods
push
cmpsl
rorb
dec
leave
push
sub
fisttpl
sbb
gs
ret
cmp
push
stos
sub
add
filds
mov
jmp
dec
sub
into
iret
or
stos
enter
mov
lcall
and
inc
dec
enter
lea
cwtl
sub
ljmp
clc
or
mov
sub
push
or
fsts
pop
sbb
mov
clc
lcall
or
or
or
and
push
fs
dec
adc
adc
jo
and
push
jmp
pop
cmp
scas
jge
int
mov
xor
and
jmp
sub
pop
or
sbb
or
rcr
jbe
sub
xchg
jb
sbb
movsb
enter
cmp
test
mov
mov
test
push
pop
or
shlb
pop
mov
adc
add
aaa
push
pop
je
daa
inc
inc
push
int
push
dec
jnp
cmpb
jle
push
or
aas
push
cld
dec
or
call
pop
test
jo
mov
xor
mov
pusha
cli
fs
sti
ret
pusha
mov
or
add
lea
xor
push
stos
lods
add
pop
lret
cmp
mov
sbbb
dec
pusha
rorl
psignb
leave
test
pusha
sahf
cwtl
pop
mov
and
push
and
sbb
lret
aam
test
adc
jmp
add
fldl
xchg
call
cmp
jb
adc
rcrb
dec
mov
and
dec
add
inc
enter
sbb
repnz
nop
xor
or
stc
mov
pop
cmp
adc
mov
enter
and
mov
rcrb
sub
xchg
inc
sub
outsl
add
adc
sub
inc
push
cmpsb
outsb
sbb
push
pop
fstpl
add
test
sub
bound
push
mov
jo
cld
test
xor
and
xchg
push
call
and
outsl
shl
cli
sti
or
cmp
cld
pop
sbb
adc
mov
and
outsl
shl
dec
sbb
test
pop
adc
pop
mov
xchg
in
inc
fs
jb
xor
push
cmp
loope
xchg
ret
mov
clc
and
cli
xchg
adc
push
inc
pushf
ret
lds
mul
jge
inc
adc
add
mov
jle
inc
adc
gs
mov
or
push
or
xchg
js
add
addl
in
les
xor
push
jo
popf
mov
lods
cmpsl
js
movsl
jae
xor
cmp
or
jl
addl
shll
lea
adc
add
xchg
push
mov
movsl
rcrb
xchg
repnz
pop
jl
jl
pushf
in
and
clc
in
cmp
add
test
pop
out
add
jmp
xor
mov
xchg
xchg
lcall
popf
test
add
fwait
in
aam
adc
or
pop
dec
xchg
bound
cmp
bound
mov
dec
adc
fdivs
or
lock
inc
and
add
xor
test
xchg
mov
cmp
icebp
addl
call
add
push
imul
xor
and
cmp
arpl
rcrb
inc
call
aas
mov
test
and
mulb
leave
jmp
pop
mov
enter
or
and
push
adc
and
inc
sbb
sub
je
fldt
hlt
inc
sahf
inc
mov
or
fmul
sbbb
loope
sub
inc
push
orb
mov
fildll
shr
push
and
push
push
in
and
push
fisttpll
add
xor
testb
jp
out
dec
add
and
xchg
stos
mov
pop
sbb
push
mov
inc
lds
sti
rcr
mov
push
and
adc
les
icebp
fdivr
mov
dec
bound
inc
outsl
in
lods
or
mov
lret
adc
jecxz
mov
push
adc
and
xor
inc
xchg
inc
mov
mov
fldenv
cmp
and
xor
or
sbb
mov
sbbl
lea
outsl
xchg
iret
or
sbb
das
xor
cld
push
push
inc
pop
jmp
pop
and
add
shl
cltd
ljmp
push
or
mov
xor
repz
jo
fadd
das
jne
jmp
or
push
and
mov
mov
aas
push
mov
inc
adc
jne
push
repnz
mov
inc
aam
out
mov
mov
lods
pop
push
imul
subl
mov
dec
stos
push
or
adc
mov
and
mov
in
push
call
movb
push
mov
enter
or
pop
adc
inc
xor
cmp
rclb
sub
enter
inc
xchg
xchg
lret
xchg
mov
and
sbb
rolb
sub
inc
or
mov
add
push
and
lret
movsb
popl
mov
sbb
enter
or
loope
and
mov
ret
mov
sbb
ret
ss
ss
inc
push
dec
push
enter
push
mov
mov
push
mov
jne
sahf
and
lods
jmp
arpl
sbb
jmp
push
aas
pop
mov
fwait
pop
dec
or
std
push
bound
inc
xchg
jno
mov
jp
repnz
je
and
or
sub
mov
jns
adc
icebp
sbb
mov
push
popa
mov
rcll
js
pushf
xchg
xlat
icebp
insb
outsl
fldenv
cmp
push
push
clc
and
imul
mov
cld
dec
call
in
adc
xchg
mov
mov
test
inc
js
or
dec
rclb
je
negb
and
sub
dec
pop
in
push
loopne
fistps
call
repz
test
adc
loop
cs
jle
insl
int
inc
daa
call
push
push
sahf
sub
adc
and
test
data16
add
das
or
ljmp
out
push
jmp
gs
imul
jp
mov
sub
std
jl
xchg
lret
inc
push
push
popa
mov
push
das
rcl
call
push
bound
sub
mov
outsl
dec
movsb
cmp
push
imul
mov
or
sbb
xchg
push
sub
xor
or
jmp
push
cltd
xchg
sub
adc
in
sbb
cld
mov
in
push
out
xor
mov
aas
test
inc
cmp
lahf
mov
add
jmp
sbb
jg
pop
jne
adc
push
xlat
mov
leave
pusha
xchg
mov
bndstx
in
adc
scas
cmc
in
testl
mov
dec
clc
jne
stc
aam
dec
mov
push
adc
inc
sbb
popf
fcoms
aaa
addr16
xchg
inc
sub
jne
aas
in
push
punpckhdq
mov
daa
loop
push
out
cld
push
in
out
mov
sub
xchg
lcall
test
pop
adc
inc
movsb
mov
push
dec
xchg
mov
and
jmp
jl
push
adc
movsl
outsb
push
enter
lea
mov
pop
mov
pop
xchg
psubsw
jp
fcoml
xchg
or
mov
mov
popa
xchg
jge
push
leave
enter
sbb
pop
mov
fisubrl
ret
mov
mov
adc
les
loop
fsub
add
cmp
std
popf
xlat
pop
pop
adc
mov
not
fiaddl
add
mov
movsb
push
dec
pop
mov
push
in
loop
push
call
das
int3
push
daa
mov
ds
out
or
mov
xchg
xor
adc
imull
lods
inc
pop
lods
dec
add
jnp
mov
and
dec
xorb
shrb
jmp
hlt
mov
shr
xor
bound
in
push
jmp
adc
and
inc
outsb
loopne
xor
leave
std
mov
mov
mov
xor
pop
sbb
adc
enter
xchg
pop
xchg
loope
jl
mov
mov
sub
es
in
sti
sub
nop
dec
stos
mov
pop
push
and
adc
pop
je
je
sub
push
sbb
movsb
push
lock
push
rcrl
sbb
and
dec
fld
fmuls
ds
dec
add
jg
xchg
repnz
pusha
mov
sub
pop
mov
push
pop
dec
cmpsl
jns
jnp
jmp
fdiv
lds
movsb
fcompl
xchg
pop
add
call
jge
mov
mov
sub
pop
lcall
push
push
jmp
lock
test
and
bound
mov
adc
cmp
std
jg
and
lock
call
pop
add
movsb
loopne
cmp
sub
push
test
inc
bound
mov
adc
sbb
es
std
or
sbb
push
lock
notl
jmp
sbb
fildll
jb
and
adc
xor
push
mov
mov
je
and
test
bound
rcl
cmp
stc
in
sub
rcrb
dec
mov
or
shll
pop
xchg
hlt
shr
xchg
jb
pop
ret
or
or
or
inc
jge
outsb
adc
test
sub
leave
sbb
jae
aam
inc
jmp
xchg
sub
xor
push
or
push
mov
mov
xchg
inc
fwait
inc
hlt
clc
xchg
xchg
adc
std
adc
call
lahf
cltd
inc
ds
adcb
jle
or
adc
hlt
jge
inc
int3
add
repnz
movntps
cmp
sbb
mov
dec
jns
sbb
sub
unpckhps
pop
push
aas
divb
in
sub
popf
inc
sbb
dec
jnp
js
pop
call
xor
repnz
mov
mov
shrb
inc
mov
pop
xchg
fcom
or
mov
movsl
sbb
inc
xor
dec
pop
int
rol
adc
call
sub
jns
jnp
leave
fs
fsubl
fiadds
push
adc
xor
loope
adc
sbb
pop
sbb
mov
orl
push
repnz
xchg
into
test
jmp
pop
mov
push
call
imulb
mov
xchg
cld
jne
in
xorl
jmp
push
test
rorb
inc
in
aam
scas
or
faddl
jne
dec
sub
inc
imul
test
dec
out
es
mov
sub
je
scas
cwtl
outsl
hlt
icebp
sub
sub
adc
out
xchg
mulb
loopne
addr16
hlt
jle
sub
fidivs
sub
bound
mov
push
or
out
loop
push
loop
cmc
gs
add
adcl
loopne
mov
adc
jg
into
fnstcw
xchg
or
sub
dec
enter
or
data16
rcll
nop
lcall
scas
xor
or
cmp
push
je
in
and
push
ja
jp
or
in
mov
inc
push
lret
sub
sub
dec
enter
sub
mov
in
mov
cmp
xchg
xchg
inc
out
mov
sub
jne
ret
insl
mov
pushl
mov
enter
adc
sbb
repnz
and
stos
mov
roll
jnp
cmpsl
jge
mov
or
in
sub
ret
add
lret
and
je
and
push
push
xchg
cmp
ret
adc
push
fsub
fcoms
mov
add
and
jmp
mov
xchg
add
mov
adc
jmp
fadds
and
mov
inc
into
nop
imul
sbb
cmp
adc
xor
add
lcall
dec
sub
daa
imull
mov
xor
leave
cld
xchg
ret
ss
movsb
leave
cs
dec
lds
push
rep
pushl
jne
pop
mov
imull
test
push
sarb
adc
cld
and
push
imul
ret
imul
add
out
cwtl
sbb
and
adc
cltd
adc
or
push
das
or
mov
popf
add
popa
cmc
dec
movaps
stos
cmp
sbb
jecxz
mov
push
call
inc
push
inc
cmp
jl
cmc
notb
pop
pop
divl
lea
lahf
mov
xchg
or
andl
mov
or
cmp
mov
into
xor
shl
lds
xchg
xor
jge
jmp
fs
or
adc
outsl
pop
mov
cs
leave
mov
mov
or
repz
inc
or
out
or
int
call
aas
mov
or
cmc
movsb
and
popf
subb
pop
inc
push
scas
cltd
shlb
cli
test
mov
in
inc
je
addr16
dec
scas
inc
add
cmpsl
outsb
icebp
daa
push
and
or
mov
push
adc
fistpll
into
pop
jmp
cmp
adc
push
leave
jbe
jmp
in
je
divb
cmp
xor
sahf
add
es
push
add
push
cmp
aaa
daa
jnp
xchg
or
and
or
sbb
pusha
iret
push
push
loope
call
sub
pop
pop
repnz
les
push
or
sar
pop
icebp
fdivrs
mov
mov
sbb
btc
xor
inc
jbe
daa
mov
or
mov
push
xchg
sbb
bound
fidivs
mov
pop
xor
test
cmpsb
fcomps
orb
push
jle
cs
inc
and
jecxz
xchg
jno
sbb
lret
sub
push
xchg
cli
xor
lea
add
fisttpll
mov
sbb
cmp
lock
and
stos
mov
xchg
aad
scas
lods
daa
push
aam
addr16
lea
mov
ret
mov
aaa
dec
pop
and
dec
or
jle
inc
leave
mov
push
movsl
mov
movsb
mov
sub
dec
inc
ljmp
je
sbb
call
pop
add
jmp
jno
lea
outsl
sub
push
push
sub
dec
pop
sbb
push
xlat
lret
mov
stc
lock
pop
push
pop
and
inc
or
shlb
xchg
dec
sar
jne
dec
roll
cmp
jbe
push
jecxz
lock
add
iret
test
sub
repz
lds
movsb
pop
mov
inc
lds
or
add
lret
pop
pop
enter
cli
inc
and
les
sarl
pop
sub
push
push
xlat
or
mov
xchg
add
lret
ret
das
imul
adc
mov
add
mov
cmp
es
fcoms
sub
ret
pop
testb
call
xor
je
and
outsb
fcoms
aas
push
mov
pop
pop
dec
sub
ret
cwtl
sub
pusha
jne
xchg
jne
push
loopne
fsubr
adc
aaa
push
xchg
adc
xor
mov
je
sahf
adc
das
or
xor
jb
sbb
call
jmp
lret
nop
adc
popf
jns
sub
mov
lret
jno
call
hlt
dec
das
lret
sub
stos
adcb
sbb
movsb
repz
sub
lock
jno
adc
xchg
shlb
lock
sub
sarl
dec
jp
lock
mov
lock
jne
lock
rcr
testb
and
xchg
xchg
test
mov
lock
leave
loopne
pop
rorb
dec
pop
push
or
call
inc
and
lret
cmp
cld
icebp
jge
stos
pop
stc
cmp
test
sub
mov
push
rclw
sub
mov
clc
xor
push
xchg
and
mov
pop
sbb
jbe
jle
loop
push
adc
xchg
leave
movsb
inc
orl
dec
lods
dec
xchg
mov
pop
pop
xchg
cmp
mov
cld
jmp
jns
xor
popa
sahf
xor
mov
ja
push
push
jp
call
adc
adc
push
mov
dec
push
inc
cmp
das
jb
mov
push
jmp
mov
xchg
adc
dec
in
cmpsb
pop
dec
and
mov
sysenter
push
movsb
inc
test
and
mov
push
add
xorl
xor
adc
sub
cmp
lock
sub
push
mov
int3
inc
dec
sub
rcrb
stos
add
mov
xlat
adc
inc
dec
sub
scas
push
addr16
sarl
cltd
int
cmp
mov
add
push
sub
inc
clc
push
dec
hlt
inc
daa
add
xchg
mov
adc
ss
xor
ja
arpl
mov
repnz
dec
test
xor
fldcw
adc
or
leave
add
fcoml
dec
push
call
adc
inc
sti
je
leave
daa
ja
push
jmp
call
cld
mov
inc
push
add
cmp
cmp
fisubrs
sbb
sti
fsubrs
add
xlat
add
imul
fs
sbb
fiadds
jo
ficoms
jecxz
cld
hlt
fidivl
inc
mov
mov
out
test
div
mov
mov
sub
sub
stc
xchg
es
sub
stc
or
xchg
jne
mov
mov
lret
inc
adc
adc
push
xchg
xchg
lods
popa
cs
mov
or
jb
or
jno
xchg
push
ds
bound
fbstp
aad
sub
jbe
clc
shl
add
roll
scas
insl
fsubrl
pop
mov
mov
jg
inc
add
push
imull
cmpsb
jne
and
pop
and
or
jne
test
jbe
mov
pop
or
push
pop
push
xchg
fimull
popa
and
add
cmp
mov
bound
jno
pop
es
lock
iret
jp
movsl
daa
xor
or
adc
add
push
add
stos
pop
test
sbb
jnp
inc
clc
cmpsl
subl
sub
nop
xchg
inc
addb
insb
jne
call
stos
vpavgb
cmp
mov
ljmp
cmp
je
mov
inc
add
into
add
jmp
dec
testl
cmp
test
sbb
pop
push
mov
mov
aad
mov
xor
ja
adc
adc
int3
dec
fisubl
andl
std
cmc
xor
cmp
adc
dec
add
lahf
or
jae
mov
jmp
nop
lods
jg
push
and
cmp
lahf
loop
jge
fwait
xchg
cmp
fnsave
push
jae
sbb
jbe
mov
js
adc
aad
cmc
add
fs
adc
out
dec
enter
sub
mov
add
jbe
xor
push
sub
add
stc
mov
insb
daa
or
and
cmp
jl
fwait
push
repz
fimuls
cmp
mov
cmp
cmp
or
sub
jb
pop
xchg
roll
lods
jae
imul
je
call
jbe
mov
pop
ret
mov
imul
pop
ret
adc
lcall
or
arpl
call
inc
mov
push
ja
xlat
imul
lcall
dec
or
mov
aaa
mov
sbb
pop
and
jne
mov
je
out
pushf
rorb
jno
cmp
test
mov
push
cmpsl
xchg
jns
xor
adcl
aam
test
int3
stos
sub
mov
mov
in
popf
shlb
mov
adc
test
dec
shll
inc
scas
and
mov
sbb
outsl
les
call
lcall
shlb
xchg
push
sub
fwait
movsb
repz
push
pushf
or
xchg
scas
mov
data16
mov
add
xchg
push
insb
cmp
and
or
in
dec
xlat
lret
frstor
or
pop
push
xor
jle
decl
add
add
sub
add
push
nop
sub
xor
mov
or
mov
sub
sub
add
aas
test
pop
daa
js
xor
pusha
push
or
repnz
pusha
pop
call
test
subl
inc
pop
jae
push
ret
xlat
mov
fwait
pop
jmp
push
scas
subb
mov
jmp
xchg
incb
ret
imul
mov
and
inc
cli
or
adc
pop
sti
xor
and
out
imul
aaa
push
push
es
fiadds
add
jne
xchg
xor
adc
or
inc
in
mov
es
xlat
cmp
push
mov
push
inc
sub
jmp
gs
mov
mov
out
and
ret
rolb
imul
ret
adc
and
adc
jno
pop
or
add
loope
or
or
and
cli
push
jns
in
mov
xor
mov
xchg
adc
scas
insl
adcb
daa
call
or
pop
movsl
xchg
nop
xchg
repnz
adc
mov
push
xchg
repz
dec
ficoms
cwtl
and
push
inc
call
in
adc
ds
add
mov
add
adc
sub
cmpsl
jno
mov
or
cmp
jle
sbb
jmp
sub
adc
ret
or
dec
add
rclb
ficomps
mov
ljmp
inc
ja
aam
inc
les
in
and
js
and
xchg
adc
push
xor
jl
icebp
jp
je
and
mov
les
stc
sbb
adc
sbb
inc
mov
and
xor
gs
xor
sub
or
add
mov
or
push
or
add
sbb
orb
xchg
adc
fidivrl
and
jns
adc
adc
cs
les
push
adc
pop
dec
clc
push
xor
adc
fs
or
addb
inc
adc
and
dec
adc
push
mov
repnz
xor
and
jl
or
enter
jb
mov
enter
and
inc
hlt
adc
dec
or
or
and
and
xor
push
adc
js
xchg
mov
adc
or
and
dec
hlt
cltd
add
shlb
subb
adc
or
inc
or
sbb
lods
adc
pop
loop
lret
out
andb
mov
xchg
pop
mov
sbb
dec
mov
hlt
xor
sbb
or
inc
dec
push
xchg
and
js
mov
dec
lods
xchg
mov
mov
hlt
pop
or
je
dec
insb
cmp
pop
gs
out
ja
pop
push
roll
repnz
stc
add
addr16
outsb
mull
cld
adc
arpl
dec
adc
jo
outsb
imul
push
insb
fldcw
mov
xor
mov
jns
pop
or
jne
ja
mov
pop
sub
dec
inc
js
inc
cwtl
push
dec
jb
clc
add
dec
outsb
sub
mov
add
outsb
push
ret
je
outsl
sbb
adc
mov
sub
add
data16
shld
sub
rcr
fcompl
lret
cwtl
and
insl
sbb
push
pop
jne
mov
xlat
mov
push
xchg
adc
nop
or
pop
inc
push
cmpsl
push
andl
jmp
push
inc
js
dec
pop
or
ja
xchg
dec
loop
cmpsl
into
pop
push
ljmp
xlat
adc
adc
dec
inc
mov
jecxz
fbstp
mov
out
sub
fs
and
push
rorl
sub
adc
js
push
xorl
push
outsl
dec
jne
jl
or
push
aad
mov
mov
test
mov
xchg
push
add
popf
push
pushf
imul
and
fs
or
dec
out
jo
sbb
ret
ja
xor
inc
inc
jae
lcall
pop
add
xor
pop
das
and
mov
bound
cmp
lods
insl
repnz
dec
xor
mov
push
inc
dec
xor
adc
push
outsb
insl
ds
push
cld
adc
sub
orb
pop
notl
add
repnz
xchg
fdivl
or
add
stc
or
bound
ret
aam
xor
inc
and
fadd
xchg
popf
hlt
inc
sub
sbb
nop
outsb
add
mov
xor
jg
cltd
fistps
sbb
push
xchg
mov
sbb
sub
jns
dec
push
outsl
push
std
pop
test
daa
adc
push
daa
cmp
dec
sahf
test
cwtl
xor
xchg
scas
mov
popf
fsubrl
pop
ret
mov
mov
jne
loopne
cmp
push
cmp
cmpsb
cmp
dec
popa
insl
and
mov
sub
sub
daa
dec
int3
jne
push
outsb
or
or
dec
or
je
rcl
adc
sub
adc
loopne
pop
add
ds
cs
cmp
ds
ds
js
cs
inc
pop
mov
xor
add
push
adc
adc
push
aaa
push
xor
mov
arpl
xor
jnp
pop
hlt
cli
mov
rol
adcl
outsb
sbb
notb
mov
cli
jecxz
in
mov
push
imul
inc
dec
jg
loopne
push
subb
cmp
inc
aad
sub
sub
inc
insb
sub
mov
fcoms
inc
pop
jbe
jo
push
sbb
jecxz
jne
icebp
dec
sub
jle
enter
cmpb
mov
and
pop
addl
iret
js
adc
fistpll
jne
push
addb
jns
xchg
cmp
les
add
rorb
sbb
xchg
inc
sbb
lds
pop
rcll
or
sub
adc
jno
inc
push
je
cmp
aaa
sub
mov
pop
or
mov
sbb
pusha
and
and
inc
and
or
mov
shlb
mov
imul
sbbl
inc
sbb
or
sub
push
mov
sbb
rorb
sysexit
sbb
push
or
pop
imul
pop
jb
dec
jp
sti
mov
push
xor
mov
and
fmul
or
xchg
cli
adc
ret
inc
sub
mov
pop
and
dec
jle
xchg
and
in
cmc
and
ret
add
dec
cmp
push
and
jnp
mov
dec
mov
inc
loop
mov
orl
dec
aas
xchg
push
and
jb
mov
dec
rcll
adc
sub
and
dec
jae
andl
mov
adc
fs
decb
in
or
push
or
cmp
or
or
or
sub
adc
or
push
int3
or
or
mov
lock
cmp
push
dec
and
or
and
fcoml
push
mov
or
or
xchg
cmp
sub
and
xlat
xor
mov
loope
xchg
inc
lahf
test
test
or
loope
push
cmp
decl
cmc
sub
xor
or
mov
lahf
inc
in
pop
outsl
jns
pop
or
fldl
lahf
push
sbb
jne
pop
fwait
and
add
and
aam
int
int
push
or
mov
inc
sbb
lods
mov
sbb
sub
push
scas
inc
sub
insl
dec
shll
mov
jge
ja
cmp
ds
movsb
cmp
adc
fs
xor
insl
sbb
or
adc
fisttpl
adc
stc
xchg
call
cmp
inc
jae
jne
bound
jmp
push
xchg
cmpsl
aad
dec
xchg
sub
enter
push
dec
out
xchg
mov
pop
bound
jb
jae
jp
or
shlb
xchg
dec
insl
test
push
jae
movsb
sbb
jns
pop
adc
stos
orl
iret
or
mov
push
adc
cmp
adc
pop
scas
and
sub
test
aaa
push
or
fs
pop
dec
les
pop
and
jb
xor
jns
daa
lcall
inc
repz
push
inc
arpl
dec
adc
je
fdivs
testl
movsb
lea
or
dec
cs
adc
sub
cmp
movsb
repz
xchg
stos
icebp
mov
adc
lods
fisttpl
push
adc
adc
and
xchg
test
dec
pop
push
adc
iret
xchg
js
pop
mov
mov
andb
inc
cmovno
cmpsl
add
xlat
scas
adc
jecxz
in
cli
addr16
outsb
jo
or
psubsb
ret
jne
orl
or
adc
and
and
mov
adc
je
sbb
xorl
outsl
jae
cmp
inc
or
out
jno
jne
cmp
les
add
add
mov
and
dec
adc
xor
add
gs
mov
jle
mov
adc
in
pop
or
enter
or
jno
bswap
push
jle
pusha
bnd
xchg
adcb
icebp
xor
in
sbb
push
adc
mov
loop
hlt
add
cmp
sbb
mov
aam
rolb
addb
push
or
nop
jmp
adcl
jle
sbb
pop
push
dec
xor
sbb
push
insb
pop
ret
inc
inc
aam
inc
pop
outsb
js
pop
push
adc
add
adc
insl
mov
add
cs
test
cmp
sub
out
add
clc
je
jmp
cmpb
sbb
adc
push
pop
movsb
js
sti
mov
ret
xor
jl
add
shlb
sub
mov
shlb
push
in
inc
add
xor
jnp
test
in
out
das
bound
push
subb
inc
add
push
mov
in
push
jge
fs
pop
daa
dec
pusha
pusha
add
xchg
movsl
arpl
nop
cmpsb
cli
das
dec
mov
or
sbb
push
push
sbb
sub
sub
addb
faddl
pop
or
subps
inc
or
sbb
add
notl
out
js
push
and
push
aad
push
add
add
pop
fisttps
popl
or
pusha
push
jmp
push
push
adc
cmp
push
and
push
and
cmp
dec
sbb
add
dec
xchg
add
and
pop
test
nop
nop
cmp
push
mov
dec
mov
xchg
jo
inc
add
cwtl
pop
int
pop
sbb
xor
jle
aaa
cs
or
subb
xor
mov
xchg
pop
es
adc
xor
cmp
adc
dec
add
pop
lds
jp
lds
xor
pop
dec
sub
sti
insl
pushf
xor
call
push
mov
mov
or
dec
cs
mov
popa
push
mov
or
test
fsubl
pushf
or
or
lret
frstor
adc
jl
or
in
adc
cmp
dec
add
jnp
dec
xchg
arpl
fnstenv
mov
mov
inc
scas
lahf
shlb
rcll
rclb
push
fsubl
sbb
sbb
popa
std
mov
sub
pop
sub
outsl
adc
xor
ss
push
xor
mov
push
js
gs
pop
dec
push
xor
jb
movsl
fsubl
push
call
sub
jae
cmp
or
xchg
cmp
cmpsl
mov
test
mov
aam
inc
pop
jns
fwait
xor
movsl
dec
xchg
jae
dec
out
push
mov
or
enter
notl
jp
mov
sub
addr16
dec
xchg
fsubl
and
cld
inc
add
push
mov
lock
pop
mov
or
push
push
inc
inc
and
inc
pop
lcall
dec
insb
jb
sbb
call
xchg
daa
fs
push
mov
push
xor
jbe
js
jp
sbb
or
js
call
je
jbe
js
jp
mov
sbb
fstps
sub
mov
addr16
ds
sahf
shl
fmuls
and
or
xor
dec
jmp
dec
call
xor
clc
cld
push
cmp
pop
cmp
cmp
cmp
decb
daa
cmp
dec
pusha
mov
xchg
paddsb
outsl
push
scas
outsb
out
sahf
iret
mov
push
cmp
mov
jl
sbb
popf
inc
sbb
adc
cmp
jmp
adc
jb
je
cltd
mov
fsub
inc
loope
jmp
loope
call
je
jbe
sbb
xor
aas
xor
arpl
addr16
mov
enter
cmc
out
loope
xor
leave
inc
sarl
loope
jmp
mov
sar
in
sbb
jbe
js
sbb
sbbb
sub
scas
cmp
push
xchg
cmp
dec
int
ror
testb
cmp
xchg
push
mov
jp
jecxz
rep
repz
lock
cmp
in
into
icebp
repz
jnp
sub
in
cmpsb
lock
hlt
call
push
cmp
cmp
cmp
cmp
gs
jns
cmpb
aas
mov
push
push
ds
dec
mov
aaa
popf
add
adc
jo
ret
xor
daa
xor
addr16
test
loope
xor
lret
hlt
xchg
mov
movsb
iret
ret
lret
lahf
lahf
fstpl
repnz
stc
lock
or
adc
sbb
pop
lock
sub
cld
cmp
cld
mov
cmp
dec
cmp
cmp
mov
mov
nop
aas
xchg
aas
cwtl
aas
pushf
aas
mov
aas
lods
aas
mov
mov
mov
aas
les
enter
decb
and
inc
cmp
jl
lcall
push
getsec
sub
mov
mov
nop
dec
lods
mov
iret
adc
mov
iret
js
jl
orb
iret
stos
iret
mov
iret
test
ja
jle
mov
jecxz
repnz
cmpsl
ror
fprem
loopne
cmp
cmp
ljmp
and
cmp
pusha
ja
xchg
mov
shlb
and
cmp
pop
in
jbe
cwtl
hlt
mov
es
mov
inc
push
adc
sub
mov
pop
packsswb
jbe
xchg
iret
mov
xor
int3
ret
rcl
jecxz
and
and
in
pop
lock
clc
cmpsl
cld
cld
cmc
cld
cld
cld
sbb
pop
js
jp
dec
mov
loope
in
dec
push
cmp
cmp
jno
jbe
cltd
and
jle
nop
cmp
je
jbe
js
jp
jl
jle
dec
or
jb
sbb
pop
js
jp
jl
jle
jle
jle
pop
in
mov
xchg
jl
xorl
lds
push
dec
sbb
iret
jne
dec
lret
inc
or
adc
mov
jbe
shl
repz
in
repz
repnz
push
xchg
lods
mov
loope
in
push
je
jbe
xor
cmp
mov
ret
and
jb,pt
je
jbe
js
jp
jl
jle
jle
nop
push
jb
je
jbe
js
dec
out
mov
and
push
xor
iret
jle
orl
mov
lret
iret
cmc
ret
rdtsc
sub
mov
dec
adc
stc
push
and
cs
insb
hlt
mov
xchg
cld
mov
mov
mov
sbb
xor
xchg
xor
mov
test
roll
mov
dec
xor
mov
stos
ljmp
js
jp
mov
jb
je
jbe
js
jp
push
repnz
sub
inc
call
cmp
movsl
and
aam
add
inc
adc
cmpsl
daa
sub
pop
dec
lahf
pop
lahf
data16
insb
lahf
jb
js
mov
and
iret
icebp
ret
xor
mov
ret
sarl
xor
lahf
repz
mov
push
in
repz
cld
pop
cmp
or
cmp
cmp
xchg
lahf
rcrb
fmul
in
jmp
dec
aas
push
xchg
outsb
mov
cwtl
rcl
jecxz
repz
leave
cltd
cs
inc
dec
xor
sub
push
jle
jle
jle
jle
sbb
xor
cmpsb
ss
lds
add
fstps
repnz
mov
hlt
fs
or
xor
popf
sti
cs
pop
cmpl
mov
mov
popa
or
adc
bound
lret
out
stc
ss
push
fmul
loope
jmp
lock
mov
hlt
and
ds
into
popf
inc
sahf
gs
insb
lahf
lods
pop
mov
ret
lahf
int
xlat
xchg
loope
push
sar
cld
or
aas
adc
sbb
cmp
lahf
mov
lahf
fcomps
hlt
adc
xor
dec
call
hlt
in
clc
cli
std
jle
xor
test
sahf
cmp
cmp
in
ljmp
mov
mov
daa
lock
mov
mov
shl
loope
xor
xor
in
lods
lock
cld
inc
push
xor
xor
gs
mov
in
jmp
sub
mov
jbe
sbbl
dec
mov
out
adc
daa
ret
mov
mov
ret
lock
adc
sbb
es
xchg
lock
cld
hlt
cld
add
cmp
cmp
jno
jne
jns
cltd
aas
lods
cs
xchg
push
add
lret
je
jg
xchg
fisubs
stc
in
xor
cmp
sti
or
daa
mov
js
mov
add
and
mov
scas
rcl
loop
fs
nop
hlt
dec
aam
mov
pop
cmp
testb
pop
push
shlb
xor
je
jbe
js
jp
sbb
xor
movsb
sbb
jmp
or
lock
mov
nop
les
sbb
xor
xchg
pusha
and
ret
mov
xor
gs
jmp
sbbl
and
outsl
ret
xchg
shl
fmuls
popa
movb
xor
icebp
mov
lea
icebp
cld
clc
cld
or
insl
cmp
cmp
jge
out
rorl
ljmp
xchg
push
dec
test
ror
add
cmp
mov
push
cmp
xchg
add
js
dec
negl
idivb
movsl
les
loopne
out
xchg
ds
daa
mov
fs
loop
out
jmp
test
cmp
insl
test
in
jb
cmpsb
popf
iret
mov
mov
ret
cmp
inc
xchg
pop
mov
stos
shll
mov
sbb
xchg
add
aam
ud1
xor
xchg
inc
push
out
js
jp
jl
jle
pop
fadd
dec
dec
xchg
ret
jo
add
aaa
push
cmp
fdivrl
mov
ret
nop
mov
clc
or
rcr
fprem
jnp
imul
dec
daa
lock
cmpsl
sti
rcll
lret
dec
not
sbb
iret
popf
cmp
js
add
cmp
call
adc
xor
dec
adc
aas
dec
dec
andl
sub
cmp
push
shlb
mov
nop
stc
cltd
stc
mov
sub
and
out
out
out
loope
xor
leave
cmova
addr16
test
test
adc
sub
xor
jae
fcomps
adcb
dec
movsb
enter
nop
fisttpll
push
ret
push
xor
xchg
inc
mov
cwtl
jl
jle
jle
jle
jle
push
hlt
fidivs
nop
xor
inc
pushf
mov
pop
ret
pop
les
pinsrw
lock
or
adc
sub
dec
fldenv
insb
jmp
xchg
or
je
or
aam
jg
xchg
or
mov
shll
loopne
pop
cs
arpl
add
outsb
adc
inc
outsl
xor
and
lods
call
and
call
push
cmpsb
cmp
jns
jge
push
pop
dec
inc
jae
adc
dec
sub
or
pop
jb
adc
dec
bound
and
push
add
cli
dec
push
insb
xor
addr16
lods
xor
jo
dec
push
in
adc
mov
push
pop
movsl
popa
dec
mov
or
inc
xor
repnz
pop
or
mov
lods
jo
mov
inc
add
inc
fmuls
insb
cmpsb
enter
ficoms
test
nop
sub
mov
and
pop
pop
dec
and
dec
or
mov
movsl
scas
repz
outsl
stos
sub
into
jns
pop
inc
leave
outsl
jnp
dec
xor
adc
insl
mov
fdivrp
imul
and
pop
mov
js
popf
inc
or
inc
and
inc
data16
xchg
xor
daa
rclb
or
mov
and
and
icebp
dec
jo
scas
je
xor
cld
insb
pop
lds
andl
int3
or
mov
sti
xor
push
or
cmp
lods
inc
jo
push
push
scas
bound
mov
dec
cmpb
cmp
dec
sub
xchg
push
in
and
push
pushf
lret
sub
mov
insl
cmpsb
jl
insb
js
daa
mov
rolb
in
inc
jbe
add
adc
mov
inc
inc
add
push
push
nop
xchg
and
push
or
arpl
loopne
nop
jno
push
adc
xor
push
push
call
push
test
xchg
rorb
in
mov
or
sub
jns
test
inc
shlb
clc
repnz
lret
es
or
cltd
lcall
xor
test
inc
push
mov
fcmovu
add
outsb
test
cmp
sub
push
insl
dec
dec
push
cmpsb
jmp
xor
arpl
mov
push
bound
ja
hlt
push
push
inc
and
push
push
sbb
cmp
cli
insl
nop
aas
pop
test
jae
repnz
movsl
call
push
stos
dec
add
and
add
dec
and
ljmp
in
xor
sub
push
sub
stc
push
jl
lock
sub
ret
out
sub
jl
pushf
or
daa
sbb
mov
or
fs
scas
inc
pop
and
jmp
movsb
push
push
js
xor
data16
mov
xchg
sub
loope
mov
lret
add
popa
mov
gs
sub
dec
mov
enter
or
mov
test
or
inc
loop
sub
dec
jne
lret
push
std
aaa
bound
jb
push
les
sub
loopne
into
mov
or
push
xor
adc
fsubs
xor
push
dec
dec
and
addr16
sahf
adc
and
shlb
xlat
das
cmp
sub
jns
pop
enter
testb
es
call
add
cmp
add
mov
pop
fwait
sbb
addl
int3
inc
sbb
jl
dec
or
xchg
sbb
push
mov
out
lods
filds
push
adcl
enter
int
je
fnsave
int3
adc
jge
out
push
dec
xor
outsl
add
jle
mov
jmp
mov
push
faddl
add
jb
cwtl
insb
xor
cmp
fs
inc
fists
je
inc
jb
pop
inc
arpl
push
out
mov
dec
icebp
icebp
jbe
adc
jb
adc
push
mov
jl
push
jb
jne
push
inc
into
gs
outsl
insl
arpl
adc
xor
jae
cmp
inc
jnp
fadds
push
push
dec
xchg
add
mov
sti
out
lock
outsl
dec
xor
mov
sub
or
or
sti
jle
ss
js
xchg
xchg
push
pop
stos
mov
mov
push
outsl
and
mov
dec
jae
nopl
outsl
rolb
push
inc
adc
dec
popa
insl
adc
inc
out
insl
cmp
out
sarb
xchg
sbb
or
shll
inc
movaps
incl
fwait
ljmp
pop
pop
add
push
xchg
xor
es
das
stos
jno
push
out
cmp
jge
popa
fildl
pop
inc
iret
sub
sbb
mov
and
fstpl
dec
sarb
inc
adc
stc
push
fnsave
inc
push
fsubs
outsb
addr16
mov
dec
outsl
daa
push
pop
cmp
adc
mov
pushf
push
jbe
jo
inc
pusha
push
gs
bound
jns
mov
stc
std
inc
inc
adc
sahf
outsb
mov
pop
loopne
enter
rclb
inc
test
jae
pop
or
dec
pop
test
test
push
pop
ret
push
aad
push
popa
or
inc
dec
cmp
scas
popf
sbb
or
mov
outsl
inc
stos
jae
dec
arpl
stos
fcoms
test
mov
dec
sub
push
inc
loopne
xchg
loopne
clc
outsl
leave
fiaddl
cwtl
adc
xchg
jbe
imul
and
imul
popa
arpl
inc
push
push
sbb
and
ret
arpl
jg
adc
inc
lahf
stos
ret
lods
sub
sbb
and
add
movsb
lcall
and
fsubrs
or
