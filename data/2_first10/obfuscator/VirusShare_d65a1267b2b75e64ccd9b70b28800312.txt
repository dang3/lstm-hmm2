ljmp
sub
cmpb
sbbl
or
and
adc
push
addb
mul
inc
add
addr16
decl
add
and
loopne
loopne
adc
pop
test
sub
test
sbb
sbb
adc
inc
in
fstpt
sti
or
or
and
sar
orb
push
push
rorb
sbb
outsl
mov
mov
addb
cmp
and
sbb
add
add
adc
adc
add
inc
add
addb
and
cmp
outsl
decl
sbb
inc
pusha
add
adc
pusha
rclb
adc
test
andl
lcall
mov
pushf
mov
add
in
add
add
or
add
inc
sbb
adc
pop
xor
push
js
add
xchg
out
mov
inc
inc
xor
add
xor
add
lods
mov
leave
shlb
or
dec
push
fisubrl
aas
or
pop
mov
jbe
outsl
mov
pop
jmp
repz
test
push
adc
add
sub
data16
mov
add
sub
xchg
pop
xor
lock
sbb
sti
insb
adc
not
add
xor
repz
pusha
cwtl
add
pop
dec
push
add
mov
mov
imul
jge
xor
repnz
lods
xchg
addr16
shrl
mov
push
mov
adc
jle
jmp
sti
cmp
jne
cld
xchg
or
or
push
cmp
pop
out
pop
inc
shrb
or
jbe
in
adc
sbb
outsb
xchg
fstl
pushf
or
lcall
dec
or
ficomps
add
mov
push
inc
and
xor
cmp
push
adc
add
scas
jecxz
mov
call
cmp
add
add
mov
mov
pushf
loope
out
sub
out
aam
adc
add
fucomp
loop
xor
inc
or
sbbl
movsl
inc
icebp
imul
or
int3
pop
push
lcall
loope
jnp
cmp
cmp
test
je
clc
data16
adc
fisttpl
or
js
or
mov
loope
mov
hlt
cmpsb
cpuid
adc
popa
jl
jmp
rep
outsb
push
fisubs
test
in
dec
roll
rolb
arpl
fld
push
call
mov
xor
das
cli
xor
mov
pop
jb
add
pop
popf
sbb
mov
cmp
xlat
subl
pop
pushf
sub
inc
mov
sbb
out
test
jbe
dec
xchg
mov
cmp
pushl
rorl
shrl
inc
push
add
jae
xchg
push
push
add
xor
mov
lock
je
repz
sub
adc
sbb
sarl
push
adc
mov
daa
in
repnz
mov
inc
inc
or
or
cmpsb
or
stc
mov
mov
dec
or
adc
adc
int3
or
das
sub
or
shlb
aaa
psraw
mov
jb
repnz
mov
verw
push
sub
mov
cmpb
push
jmp
mov
sbb
pop
sbb
je
pop
mov
pop
sahf
cmp
mov
pop
or
fidivl
outsb
fwait
jle
sbb
dec
pop
push
std
insb
ss
or
cmp
cmp
std
inc
sbb
out
jge
push
clts
bndldx
and
mov
add
mov
loopne
roll
daa
out
mov
fwait
inc
aad
jb
xchg
lahf
adc
subb
out
add
cmpsb
out
cmp
mov
xchg
mov
add
dec
adc
aam
daa
or
imul
jnp
xchg
out
shrl
mov
push
mov
xchg
add
ds
inc
xlat
in
fsubrs
out
mov
fwait
enter
je
dec
dec
add
xchg
decl
mov
cld
cwtl
xchg
pop
mov
outsl
lahf
subb
sar
fildll
test
jb
push
push
ss
outsl
loop
dec
fdivl
shll
ret
dec
stc
cli
sbb
clc
pushf
add
cmp
cltd
flds
mov
inc
push
cld
frstor
fmull
jecxz
aad
xchg
in
add
inc
add
cwtl
cwtl
xor
orl
idivb
pop
cli
popa
push
jns
inc
push
jmp
and
loopne
jo
fimull
shlb
js
loop
cmp
addl
stc
inc
out
insb
xchg
inc
loope
dec
mov
add
mov
push
inc
mov
in
push
add
push
adc
mov
jge
dec
mov
or
fdiv
repz
test
push
pop
lret
ror
int
rorb
pop
iret
push
jae
push
jp
jbe
xchg
icebp
imul
or
push
or
subb
pop
xor
or
ja
push
repz
or
add
dec
repnz
aas
ds
mov
mov
push
daa
cmovg
pushf
push
mov
fdivr
xchg
or
sub
es
fisttps
sub
movsb
pusha
cmc
jecxz
cmp
ret
mov
ret
pushf
and
es
cmp
popf
jbe
mov
add
inc
repnz
push
aad
movsl
or
scas
adc
mov
sbb
cmp
inc
mov
ret
pop
push
push
and
xchg
push
out
adc
in
decl
in
add
add
hlt
mov
ja
push
add
push
stos
in
imul
jns
jb
es
dec
enter
pmuludq
dec
inc
add
outsl
push
mov
popf
addl
pushl
in
rcll
add
and
mov
les
adc
dec
fdecstp
ds
fldenv
add
xor
rcr
es
fldl
roll
push
cmp
in
mov
cmp
shll
cwtl
lock
repz
sub
xchg
add
cmpsb
dec
push
imulb
mov
add
fisttpll
or
loopne
inc
pushf
push
mov
pop
jge
sbb
dec
jl
sbb
loop
mov
mov
insb
data16
mov
and
mov
adc
out
sbb
xchg
sbb
jno
jbe
xor
add
adcb
jb
orb
test
movsl
mov
mov
mov
ljmp
push
sub
mov
pop
je
pop
add
or
mov
repnz
or
mov
call
movl
add
gs
shrl
inc
fsubrl
adc
mov
les
sbb
pop
adcb
pop
sar
dec
add
dec
fstps
orb
sbb
popa
xchg
mov
lahf
stos
jl
jle
ss
rolb
sub
jnp
scas
iret
scas
dec
loope
mov
pop
lock
mov
pusha
sub
and
cmp
jp
negb
pop
pop
mov
inc
cmp
mov
js
or
xor
sbb
pop
fwait
btr
std
adc
incb
mov
pop
or
and
xor
loop
mov
gs
sbb
cs
pushf
sbb
lock
nop
in
loope
jecxz
inc
dec
cld
fs
adc
shlb
or
mov
xor
ror
aad
adc
and
sti
jp
and
add
xchg
mov
outsb
fldenv
or
pop
push
jmp
sub
int3
je
mov
pop
out
stos
xor
int
mov
stos
add
lret
cs
mov
push
ljmp
aam
aad
add
mov
test
stos
xor
add
add
into
pusha
aam
testb
push
mov
aad
jle
add
xchg
aas
mov
icebp
lock
outsb
or
jl
xor
add
and
xchg
jnp
nop
movsb
or
inc
shll
xor
adc
or
mov
lods
dec
pop
or
jmp
push
aad
arpl
add
xchg
and
jecxz
cmp
movsb
call
pop
aas
mov
pop
shll
jmp
pop
jne
andl
adc
pop
xchg
repnz
mov
lods
ret
and
or
bound
jp
jbe
das
int3
add
jl
sbb
scas
pop
sbb
sub
xchg
sbb
mov
push
shr
xlat
pop
or
mov
out
mov
addr16
push
mov
sub
pushf
push
fs
sbb
in
push
sub
rcr
mov
outsb
pop
rcrl
aam
test
cmpb
or
add
cmc
push
aaa
loopne
pusha
mov
sbb
loopne
xchg
lcall
pop
ss
inc
dec
popf
and
cmp
sbb
in
mov
mov
cltd
inc
sub
inc
sub
xchg
push
pusha
fsub
orb
add
fisttpll
and
adc
mov
cmp
push
add
int
repz
sti
pop
inc
setle
add
pop
pop
jecxz
jge
cmc
sahf
sarl
mov
cld
in
dec
mov
in
mov
test
iret
mov
incl
mov
dec
loopne
push
pop
mov
shll
dec
repz
filds
pop
push
xchg
in
cli
insl
lock
shlb
leave
jl
fistpl
inc
lret
cli
add
adc
pop
fcomps
aaa
mov
sbb
fldt
jb
jl
jb
inc
cmpsl
mov
add
fbstp
add
out
or
clc
adc
xor
rorl
pop
mov
push
in
xor
pop
pushf
rclb
and
inc
in
or
loopne
loope
jl
movsb
out
xchg
in
push
insl
pop
mov
aam
ret
inc
add
flds
xor
xlat
add
je
or
insl
jne
mov
nop
lods
cmp
xor
mov
xchg
fwait
sbb
arpl
jl
rorb
jl
dec
and
cmp
xor
sub
mov
sub
je
call
sarl
aad
fmull
push
xchg
out
lret
and
push
nop
movsb
in
xchg
mov
pop
test
clc
add
mov
cltd
fsubrl
xor
test
int
mov
rcl
icebp
sbb
pusha
mov
xchg
popa
or
iret
cmp
pusha
or
ja
jo
xchg
add
mov
cmp
pop
lcall
in
mov
add
cmp
or
pop
adc
loope
scas
loopne
pop
fstps
push
mov
mov
out
out
cmpsl
pop
xchg
mov
sub
shlb
pop
iret
xchg
inc
and
es
sbb
xchg
in
push
cmp
push
ds
cmpsb
push
sub
fyl2x
jmp
sahf
addl
jl
cmp
repnz
fwait
test
mov
fsubl
out
cs
ljmp
pop
xor
pop
push
das
lret
add
jge
inc
ljmp
daa
notb
and
mov
push
xchg
std
into
pushf
popf
mov
mov
out
sti
add
and
insb
andl
je
dec
aad
add
add
add
mov
sub
adc
push
cmc
notb
test
sub
mov
out
loopne
out
push
inc
loopne
mov
ja
ljmp
fstps
jecxz
adcl
ss
aaa
mov
outsb
rorl
xchg
adc
in
inc
fsub
lea
xor
test
and
fs
add
ja
sbb
in
shr
vpunpckhbw
dec
push
adc
push
popf
out
push
add
lods
sbb
dec
add
pusha
movsl
ljmp
rcrl
mov
sbb
mov
arpl
js
cmc
push
ds
out
sarb
inc
sbb
sbb
jns
pop
xor
push
dec
fildl
sbb
movsb
mov
clc
dec
push
push
aas
dec
xor
out
das
cmp
int
jnp
inc
push
mov
xchg
pop
loopne
int
fs
aad
icebp
fnstcw
aas
add
leave
xchg
or
pop
cmp
ret
fsubrl
or
stos
ljmp
adc
cli
dec
inc
ret
movb
xchg
cld
dec
xlat
mov
repz
in
cltd
rcrl
jp
jbe
push
clc
or
push
and
cld
lea
std
push
push
sbb
cmp
fwait
dec
and
xchg
xchg
push
icebp
test
jecxz
insb
loop
icebp
imul
leave
xchg
adc
andl
or
mov
and
stos
shl
into
das
adc
ret
push
push
icebp
xlat
pusha
push
mov
lcall
xchg
and
push
sbb
orl
pop
sub
and
mov
stos
jle
jl
mov
inc
xchg
aad
push
daa
and
shlb
jecxz
adc
sub
rorb
inc
add
andl
xchg
xchg
add
jecxz,pt
mov
add
add
test
mov
inc
cmp
xor
fs
scas
nop
movntps
lret
test
mov
adc
loop
push
xchg
sub
dec
jle
arpl
rorl
fdiv
inc
push
push
scas
mov
mov
test
pop
ja
adcl
fs
mov
shll
inc
js
repnz
inc
popf
add
ret
fisttps
cld
lcall
addr16
frndint
adcl
dec
rolb
rorl
pop
pop
fldenv
lock
mov
insl
sbb
mov
or
lcall
add
out
adc
inc
pop
js
pusha
push
push
lods
jp
popa
push
push
or
pop
mov
mov
pop
je
xor
cmc
roll
or
lods
mov
jmp
shrl
lock
or
insb
add
jbe
inc
inc
addr16
or
add
mov
adc
lahf
outsb
add
fdiv
repz
popa
xchg
ret
sub
inc
jo
xchg
lret
sbb
movsl
cmpsl
adc
bound
add
dec
sub
xchg
lods
jb
fisttps
adc
or
mov
pop
and
mov
lret
loopne
dec
je
ja
pop
jge
sub
pusha
insb
insl
pop
in
lods
push
xchg
inc
mov
sti
dec
sub
ja
xchg
add
test
and
mull
add
stos
les
pop
movsl
clc
bound
dec
aad
repnz
mov
mov
das
jge
push
in
jo
jge
sahf
ficoms
fdivl
adc
lds
in
jl
adcb
add
arpl
jo
pop
mov
or
pop
ss
xor
lahf
inc
push
xchg
sbb
mov
push
inc
aad
ljmp
mov
enter
inc
stc
inc
in
sbb
sar
adc
mov
jl
and
fistl
outsb
cmp
jp
mov
out
sbb
cmp
leave
mov
pusha
mov
mov
and
dec
pop
cmp
fmuls
or
mov
mov
mov
add
adc
shrb
into
inc
stc
cmc
roll
decb
jmp
cmp
aaa
inc
mov
cli
jmp
ficompl
ret
mov
pusha
push
inc
ja
cld
inc
les
inc
cltd
sub
sahf
icebp
push
test
cmpsb
lea
jle
shll
xor
adc
lds
arpl
jbe
or
lret
sub
mov
inc
xchg
add
je
mov
inc
cmp
xor
idivb
xor
dec
mov
pop
ds
jbe
mov
pop
scas
orl
jbe
xchg
bound
xorl
fisubrs
mov
add
sub
mov
add
mov
or
scas
cs
mov
adc
movsl
jecxz
xor
sbb
jmp
sbb
in
jb
dec
or
lea
lret
pop
in
cld
movsl
sbb
popa
pop
ds
loop
shl
inc
cmp
out
jmp
push
fwait
inc
test
lea
mov
test
dec
inc
jp
push
std
or
pushl
fimull
cmp
into
out
movsb
xor
add
aam
sarb
jne
push
stc
ror
pop
or
inc
mov
sub
or
testb
subl
sub
in
and
loope
clc
sbb
push
inc
sbb
aas
sbb
sar
add
int
xchg
push
imul
add
fdivrl
or
je
out
stos
lods
data16
sub
lock
out
or
xchg
lret
add
push
movb
and
push
push
loopne
mov
pop
ljmp
push
cld
aam
cmpsb
lcall
xlat
dec
pop
push
xchg
adcb
dec
xchg
push
xor
dec
mov
shl
imulb
bound
dec
adc
addr16
enter
stos
push
adc
cmp
dec
sbb
xchg
lea
mov
or
xchg
lock
mov
push
xchg
inc
aam
mov
inc
xorl
js
mov
sbb
loop
sbb
mov
cmc
fcompl
out
enter
fisubrl
outsb
inc
mov
push
adc
jbe
pop
pop
pop
test
and
decb
add
bound
shrb
inc
lea
jge
add
sbb
subl
sbb
shll
add
push
mov
loopne
add
adc
iret
mov
test
jl
rcrl
pop
mov
iret
js
shrb
jbe
mov
incl
jo
mov
mov
mov
jle
gs
xchg
cmp
int
mov
int3
xor
or
daa
pop
cmp
pop
jo
add
or
cmp
stc
scas
mov
mov
or
loopne
ret
cs
je
push
das
lcall
pop
loopne
xor
jge
stc
fcoml
sbb
mov
jl
mov
mov
xchg
inc
lock
mov
jl
bound
mov
movsb
dec
jmp
add
push
cwtl
int
adc
pushf
leave
in
add
xor
and
ror
sub
jle
xchg
insb
nop
sbb
das
lods
xchg
jle
or
mov
dec
jle
lret
push
xor
push
mov
into
lods
xchg
pop
jl
add
mov
sub
insb
sbb
cmp
mov
push
adc
andb
in
jmp
in
and
fldt
add
es
movl
test
and
iret
arpl
xor
loopne
shlb
sbb
pop
dec
enter
test
xorl
xchg
daa
mov
shr
push
les
cmp
pop
jmp
mov
mov
out
loope
cs
test
stos
loope
dec
seto
mov
xchg
out
das
xor
push
std
cmp
jmp
or
xchg
xchg
xor
fimull
fwait
mov
xchg
jae
fisttps
aad
repz
cmp
cmp
jb
cltd
add
mov
cmp
jl
mov
cmp
lret
insb
fisubrs
aas
inc
fxtract
in
test
test
scas
pop
bound
popf
clc
sub
insb
inc
mov
jns
sub
sub
jge
sahf
or
out
xchg
sarl
test
and
insl
xchg
js
cmp
xchg
out
mov
push
sbb
out
lcall
jl
push
cmpsl
leave
mov
push
hlt
insl
xchg
cmpsb
inc
mov
mov
ljmp
cmp
nop
in
pop
xchg
shrl
add
icebp
sub
sub
pop
sbb
pop
sub
sub
sbb
sub
arpl
mov
pop
rcl
push
decb
xor
mov
sub
js
test
push
lret
jge
mov
xchg
xor
or
xor
clc
adc
jb
lock
mov
push
xor
dec
add
xchg
mov
jp
cld
dec
shl
daa
mov
push
push
sahf
push
test
je
imul
clc
gs
pop
xor
push
imul
pop
dec
sub
pop
insl
push
pop
jecxz
add
mov
jns
and
cs
add
xor
inc
sub
mov
aaa
jb
lcall
pop
str
inc
sbbb
push
add
aad
push
pop
out
cmp
mov
jge
ret
add
inc
icebp
or
mov
pushl
movsl
cmpsb
mov
pop
int3
mov
bound
pop
cmp
fs
sub
sub
jbe
rep
ret
sub
out
shr
add
aas
cwtl
test
enter
pusha
mov
or
ret
push
jo
xlat
xor
hlt
add
sbb
or
loop
stos
test
hlt
and
aam
mov
jno
xor
shll
outsl
gs
test
jo
das
cltd
xchg
loope
cmpsl
mov
sahf
push
pusha
stos
jo
pop
mov
into
icebp
pop
sahf
and
into
cwtl
ljmp
or
mov
pop
cmpsb
inc
xlat
sub
ljmp
rclb
xorl
mov
pushf
and
mov
scas
insb
sbb
adc
or
sbb
jo
push
sub
aas
mov
mov
add
jle
ss
and
in
test
in
aaa
cmp
loopne
and
cmp
das
mov
daa
orb
lret
push
sub
shlb
fisttps
add
push
lahf
lock
sub
hlt
mov
sarb
mov
jp
and
daa
add
mov
cmp
pop
jne
cmp
push
sub
push
scas
jmp
jl
cmp
adc
aas
aaa
fsubl
jbe
cltd
pop
xor
mov
xchg
int
mov
push
add
call
cli
mov
popf
sub
int
dec
imul
aad
orb
or
add
jle
repnz
add
repz
and
xchg
xor
rorb
xchg
push
je
mov
cmp
lcall
add
fstpt
xchg
mov
or
adc
push
fwait
popa
and
mov
loope
int
cmp
sub
or
dec
mov
scas
pop
pop
lahf
sbb
mov
lahf
push
and
cmp
sbb
repz
dec
aas
push
and
cmp
cmp
xchg
cli
xchg
adc
sub
stos
jmp
ffree
push
outsl
lds
jbe
cmp
insb
fisttps
push
outsl
mov
sbb
inc
loopne
xor
or
aaa
aaa
aaa
jnp
dec
subb
cmp
sub
repnz
or
filds
pop
mov
or
inc
add
lahf
mov
or
mov
push
mov
add
std
push
incb
xor
mov
and
add
mov
imul
jmp
cmp
mov
add
pop
aas
inc
add
hlt
xor
aad
or
cld
add
lds
push
push
inc
pop
mov
rcll
testb
sbbl
mov
ljmp
pop
les
scas
or
jle
or
aas
decb
call
mov
clc
fdivrl
push
add
pop
jo
negb
lock
fs
push
pop
mov
cmpsb
pop
adc
mov
cmpsl
jle
int
outsb
iret
xchg
popf
fsubrl
push
and
sub
clc
dec
lock
mov
jno
test
rcr
sub
fs
sti
xchg
or
xsha1
cmpsb
or
mov
imull
imul
imul
cli
inc
insb
sub
scas
lret
adc
adc
fldenv
hlt
cmpsl
adc
movsb
inc
jae
jae
ja
insl
or
or
jo
mov
mov
mov
scas
jnp
mov
inc
test
mov
fbstp
jecxz
or
sub
test
pop
inc
push
sub
int
mov
jl
lea
ret
fisubrl
ja
lret
or
dec
push
cmc
pop
out
xchg
mov
pop
jge
icebp
xor
in
cmp
mov
das
stos
add
jo
and
out
call
rcr
mov
dec
jmp
fcoml
xchg
jno
cmp
xchg
cld
mov
loope
cld
xlat
jns
orb
lds
xchg
mov
int
aas
xchg
sbb
sbb
sbb
xor
cmp
dec
mov
sahf
dec
xchg
mov
insl
pop
cld
bound
jns
movsb
add
orl
or
je
jne
in
push
push
ljmp
cli
pop
jo
push
jge
or
es
cmc
pop
or
sbb
mov
sbb
ja
mov
sub
inc
test
stc
lcall
into
mov
add
insb
pushf
or
les
stos
outsb
pop
jl
jle
aam
dec
add
mov
cmpsl
addr16
je
dec
cmc
cmp
or
aas
jge
cld
outsb
fmull
xchg
mov
lret
mov
adc
sub
enter
repnz
stc
push
ss
inc
mov
cmp
xchg
shlb
and
add
popf
and
pop
or
push
pushf
mov
test
lods
fnstsw
pop
enter
inc
lods
add
jae
sti
push
push
pop
xchg
or
rcrb
clc
cmc
cwtl
in
and
xor
lods
cmp
or
sbb
push
in
ss
mov
fistps
fs
mov
mov
xor
and
inc
add
pop
cmc
sub
add
popa
cmp
ret
jp
or
pop
jae
lahf
in
ret
push
dec
lds
mov
out
jns
bound
fldt
mov
loope
data16
push
clc
inc
insl
lods
inc
aas
push
in
xor
jge
pop
jge
xchg
and
jne
pusha
push
xchg
jp
or
xchg
and
sub
xchg
popf
mov
inc
push
dec
ret
fwait
pop
fmuls
ret
lcall
arpl
xor
mov
shlb
or
clc
imul
mov
sbb
mov
mov
pusha
pushf
scas
jno
shll
mov
xor
push
and
sahf
fdivr
xchg
mov
mov
test
inc
mov
or
jno
loopne
sbb
cmpsb
and
xor
sub
in
jne
push
movsl
scas
inc
out
push
add
dec
cmp
and
jmp
in
pop
and
ds
cltd
cmp
cmp
mov
sub
xchg
push
leave
insb
xchg
jg
rcrl
ss
push
dec
shl
add
add
fwait
shlb
out
gs
and
inc
sbb
mov
add
test
mov
inc
push
jmp
cli
pop
mov
sbb
loopne
mov
dec
pop
loopne
mov
out
jo
cmp
sub
mov
loopne
pop
roll
inc
cwtl
add
lahf
mov
sbb
add
loope
jbe
pop
mov
enter
ret
fcmove
roll
jae
out
test
imul
mov
fisttps
xor
inc
push
test
xchg
imul
xlat
test
cmp
insl
aaa
sub
cmp
popf
jbe
push
inc
ljmp
inc
pop
loopne
add
je
mov
movsl
inc
notl
and
lds
and
and
push
mov
inc
mov
lods
stc
xor
shr
jbe
popf
fst
pop
mov
and
or
cmp
or
inc
mov
and
in
and
andl
je
cltd
mov
fmull
pop
je
inc
or
jp
xchg
outsb
shlb
in
lock
shl
xor
imul
xor
test
fs
mov
fdivs
mov
pusha
mov
inc
pop
mov
aam
int
xor
aad
lock
push
dec
lcall
cmp
rcr
fiadds
iret
pushf
nop
stc
int3
addb
sti
add
push
mov
iret
pop
jmp
cwtl
fxtract
out
movsl
push
stc
push
and
mov
push
scas
pop
push
clc
push
push
push
mov
adc
mov
mov
scas
mov
daa
loopne
sarl
and
lret
icebp
sub
add
orb
dec
lcall
cwtl
pop
lods
cmp
adc
mov
mov
and
and
lock
mov
in
repz
mov
inc
dec
xchg
rorb
dec
jae
cmp
xchg
pop
xlat
shlb
push
sbb
imul
faddl
pop
imull
cld
js
or
lods
jne
cmp
ja
adc
and
fstpl
rorl
or
inc
inc
jnp
xchg
mov
mov
sarb
ret
push
sahf
xor
cmpsl
rcr
mov
adc
pop
jp
int
int
adc
loope
lea
test
nop
jb
repnz
jae
bnd
pop
sub
jbe
push
cmpsl
stc
and
sbb
xchg
add
lahf
je
add
adc
jae
int3
repz
adc
fldenv
push
jg
and
jmp
inc
dec
mov
fs
call
adc
dec
jo
fistps
fisubl
sub
mov
sahf
cld
cld
cli
stos
ss
nop
dec
push
push
add
cmp
mov
movsl
mov
push
imul
lock
cli
neg
inc
push
rol
les
cs
jp
mov
lcall
sub
mov
into
add
mov
stc
xlat
cwtl
inc
push
or
sti
pop
in
movsl
mov
ffree
aam
call
or
mov
sbb
sub
dec
pusha
mov
or
or
pop
sbb
or
stos
and
popa
add
out
or
pop
imul
aas
aad
aas
adc
sbbl
inc
insl
outsb
fdivrl
sub
add
mov
xor
mov
test
mov
add
and
mov
out
adc
and
shlb
xchg
push
ja
mov
ja
xchg
int
pushf
gs
mov
ss
nop
pop
test
push
jno
stc
pop
rcr
in
inc
ret
sbbb
jbe
xchg
xlat
jo
mov
push
subb
and
add
inc
je
sahf
push
adc
enter
pop
jns
aaa
xor
popf
cltd
js
mov
cmc
mov
test
mov
leave
inc
push
mov
and
psraw
sbb
or
popa
xchg
sub
das
sarl
mov
shr
add
mov
dec
ja
cmp
pop
pop
cli
fcomps
inc
sub
insb
bound
lret
subl
inc
jns
insl
sti
pop
add
pop
push
push
sbb
sub
add
dec
xchg
enter
jp
jmp
or
xchg
scas
ret
adc
adc
and
leave
or
ja
push
js
repz
dec
fld
pop
sub
in
lds
pop
jecxz
lea
hlt
adcl
data16
not
xor
ss
ljmp
sbb
je
hlt
je
sub
into
add
push
stos
and
inc
arpl
das
jne
ljmp
cmp
repnz
pop
popa
push
sbb
out
jl
adc
push
push
sub
jp
testl
add
mov
das
repz
fmul
rolb
loope
push
stos
les
iret
add
aas
mov
push
icebp
stc
sbb
scas
mov
les
mov
jecxz
add
sub
add
sti
jo
loopne
mov
ss
lock
daa
cmp
mov
mov
jle
mov
clc
or
aam
sbb
js
out
xorb
daa
or
jl
mov
cmp
jmp
sbb
rolb
xor
mov
nop
jb
inc
sbb
insl
cmp
loopne
out
sbb
mov
call
xor
and
cmp
ss
out
or
dec
loopne
push
arpl
aas
add
loopne
or
call
pop
pusha
mov
icebp
test
nop
push
test
and
mov
stos
lahf
into
jo
orb
cmpsb
inc
jmp
xor
fiadds
xchg
sbb
push
insb
out
jp,pn
push
pop
out
lahf
xor
fisttpll
xchg
and
outsl
mov
pop
incl
repz
pusha
inc
add
add
pusha
aam
jno
adc
test
xor
inc
adc
call
pop
es
fildl
xchg
xchg
addl
test
mov
ret
ret
int
adc
or
xlat
ffree
add
mov
clc
mov
pushf
ss
inc
repz
jmp
cmpsl
sub
ret
out
sub
xchg
xchg
outsl
ja
ds
jecxz
lods
mov
mov
lock
lods
sub
idivb
and
mov
sub
sbb
push
jecxz
cmpsb
and
in
jnp
lss
push
sub
mov
mov
cld
call
and
wbinvd
mov
push
int3
sub
lahf
nop
shll
sbb
and
adc
test
adc
dec
clc
adc
pop
sub
xchg
popfw
mov
inc
fistpll
jge
fildl
test
pop
outsb
lock
bound
xchg
or
xchg
repnz
es
sbb
hlt
adc
out
or
sbb
xchg
arpl
adc
xchg
fistl
nop
ja
sbb
into
xor
add
cli
push
inc
mov
inc
sub
and
pop
lds
cmpsb
jle
lds
fsubr
dec
cmp
pop
fwait
mov
das
mov
xchg
push
jl
icebp
rorb
mov
pop
iret
scas
adc
test
orb
es
jbe
lcall
cmp
or
jmp
movsb
and
xchg
mov
inc
out
inc
push
rcl
cs
outsb
and
jmp
call
mov
mov
mov
popf
pop
or
clc
xchg
arpl
cmp
or
fs
adc
cmp
popf
pop
icebp
inc
adc
sarl
mov
sbb
push
call
js
std
jle
cwtl
add
sub
adcl
test
lcall
aad
mov
xchg
xchg
sbb
fsubl
mov
or
pop
push
adc
incl
jecxz
lods
fcoml
mov
arpl
dec
bound
lds
push
xchg
mov
cmpl
add
pop
add
adc
sbb
pop
clc
push
js
cmpb
in
or
jl
xchg
out
inc
jle
pop
std
popf
add
or
dec
mov
add
and
mov
insb
test
add
rorb
fbld
jmp
or
mov
addr16
push
sub
gs
mov
mov
or
rorb
xchg
rcrb
add
fs
ds
leave
mov
cld
cmp
mov
test
xchg
cmp
mov
imul
popa
mov
xchg
xor
or
xchg
ds
add
nop
roll
push
dec
in
mov
add
sub
js
imul
inc
subb
insb
ja
stos
xchg
repnz
dec
loopne
sbb
mov
imul
mov
outsb
add
bound
xchg
outsb
and
push
jns
sub
cmpsb
repnz
cwtl
cmp
loop
xor
pop
fldl
or
call
mov
rcll
mov
aaa
jl
mov
sub
aad
outsb
insl
je
add
mov
push
xchg
clc
hlt
mov
call
popf
push
or
xor
sbb
cmp
xchg
movsb
mov
sub
push
lret
lods
mov
pop
mov
vandnps
test
pushf
adc
call
scas
add
call
cld
xchg
stos
jb
adc
xor
in
cmp
pushf
mov
mov
pushf
mov
mov
icebp
mov
xchg
insb
sarb
push
add
shll
scas
rolb
leave
imul
push
test
cmp
nop
and
mov
cmp
rcr
xchg
shlb
push
sub
incb
xchg
test
sahf
out
scas
out
sub
addl
xlat
sbb
pop
lea
add
inc
fcompl
adc
add
insl
dec
mov
data16
ret
add
es
cli
cmc
icebp
test
adc
out
ror
fldt
cmpsl
add
adcb
ljmp
mov
pushl
mov
outsl
push
fs
mov
inc
cmpsb
enter
cmp
adc
and
mov
dec
push
xchg
popa
ja
in
nop
popl
out
cmp
push
cmp
jg
push
fldcw
mov
daa
std
fisttps
mov
cmp
xchg
inc
ds
pop
push
mov
sbb
jl
push
loope
leave
aas
mov
or
pop
xor
clc
sbb
fmull
cmp
add
sub
outsl
incb
push
sbb
add
ljmp
fnstenv
sub
dec
pusha
jns
leave
or
bound
add
bnd
pop
push
call
pop
mov
sub
jecxz,pn
sbb
pop
ja
sub
inc
push
jbe
rcrl
scas
lret
lret
mov
mov
lock
lock
cli
inc
mov
int3
lds
mov
cmp
sub
push
je
int3
xchg
aam
pop
test
inc
insb
add
jo
push
sbb
xchg
aas
pop
enter
push
cmp
xor
sub
leave
popf
test
shrb
jnp
jno
or
push
xchg
test
xchg
or
xchg
mov
inc
push
xchg
mov
and
lret
push
aaa
rcl
shlb
hlt
cmp
pop
nop
adc
rolb
fdivr
xchg
inc
loope
out
jb
mov
loope
jge
jo
add
imul
cmp
mov
jbe
xchg
imul
ret
cmp
jge
pop
sub
inc
push
adc
sub
jle
popa
not
mov
js
xor
push
mov
sub
pop
xchg
cmp
push
repnz
xor
mov
rcl
int3
pop
movsl
push
jmp
jns
and
sub
push
and
insb
jo
ja
popl
xchg
cmp
mov
fists
and
adc
movsb
add
or
movsb
clc
lea
pushf
movsb
das
pop
dec
push
scas
sub
in
decl
cmpsb
xchg
inc
repz
dec
lea
xchg
rcr
ficompl
aam
jo
fcmovb
and
or
lock
inc
pop
dec
rcrl
hlt
mov
cmc
lods
jne
stos
push
cld
jl
in
or
loopne
idiv
clc
aaa
and
aad
or
fistpll
ret
jno
cmp
icebp
mov
sub
leave
sub
inc
daa
scas
or
or
divb
and
shrb
inc
lea
clc
adc
subb
mov
adc
ret
push
int3
sbbl
or
add
push
rorl
cmp
mov
call
fistl
cli
add
add
out
aas
inc
mov
pop
aam
sbb
rcr
in
xlat
in
bound
ds
enter
sbb
sub
mov
add
data16
push
outsb
push
jge
cmp
sbbl
pop
sub
add
fcmovb
mov
repnz
inc
pshufw
popa
nop
lret
mov
xchg
add
push
and
icebp
cmpl
out
pop
inc
xchg
inc
testb
cli
call
cld
call
orl
bound
xor
jecxz
xor
jg
rcl
mov
scas
add
test
lock
or
sahf
jle
mov
stos
pop
pop
repnz
andb
pop
mov
cld
pop
inc
push
jne
push
cmp
adc
pop
or
push
push
cmpsl
mov
mov
xchg
stos
popa
inc
dec
adc
xchg
cmp
dec
mov
push
jno
cmpsl
jb
daa
sub
xlat
in
add
lret
leave
push
hlt
mov
dec
add
scas
pop
inc
icebp
jmp
sub
shl
les
test
lret
enter
test
lods
in
mov
inc
jmp
mov
jecxz
dec
push
cld
in
pop
mov
scas
addb
js
mov
hlt
loope
mov
sbb
push
or
sub
sub
scas
test
data16
out
sub
mov
loopne
insb
add
mov
scas
inc
mov
push
mov
xor
stos
mov
ds
outsl
mov
push
jne
inc
jbe
incl
cli
add
mov
push
pop
jle
mov
cmp
sbb
daa
fiaddl
ret
sub
and
sbb
fdivrl
in
push
jmp
or
and
aam
clc
or
dec
push
adc
js
adc
or
or
mov
xorl
inc
mov
jno
pushf
repnz
dec
in
add
int
ja
es
rcrb
test
enter
in
ss
orb
adc
lret
cmp
les
fcomps
pop
cmp
cmpsb
mov
jbe
jg
addb
aad
mov
nop
xchg
mulb
cmp
bound
xlat
imul
cmp
dec
pop
lods
push
mov
test
xor
cmp
pop
mov
or
mov
push
lret
filds
incb
outsl
sbb
mov
sub
sbb
xchg
inc
repnz
pop
into
fmul
dec
sahf
into
shl
aad
and
cmc
sti
and
pop
rol
inc
pop
aas
out
rclb
insl
mov
dec
mov
push
mov
jmp
cmpsl
or
test
fwait
ja
rcll
add
xor
cmp
ret
xchg
loop
pushf
rolb
ja
or
loopne
push
mov
cld
rolb
rclb
mov
inc
cmp
and
dec
mov
out
loop
pop
sarb
pop
lea
insl
push
ja
push
ljmp
mov
add
mov
cli
jle
sbb
adc
inc
mov
neg
push
push
je
inc
fmuls
sar
jg
pop
mov
nop
stos
sub
arpl
add
ja
lahf
cmp
negb
dec
test
xchg
mov
jp
sbb
mov
aaa
loopne
xchg
mov
mov
jbe
test
mov
in
fiaddl
mov
xor
ss
gs
dec
in
test
mov
lds
inc
push
incb
sub
or
jle
mov
loope
pop
test
push
adc
or
dec
pop
std
dec
cmp
xchg
inc
cld
int
fcomi
push
adc
pop
dec
sub
jb
pop
mov
add
lock
sbb
pusha
mov
jle
lcall
sbb
xor
lds
mov
fbstp
je
adc
sub
dec
push
in
mov
push
jecxz
inc
call
mov
push
mov
push
popa
ret
sbbl
les
push
mov
pusha
or
int3
test
jbe
cmp
xor
xchg
in
xchg
sbb
sub
cmpsb
mov
roll
adc
stos
xorb
cmpsb
jl
add
sub
loope
inc
andb
push
mov
cmp
ds
es
xor
call
stos
loop
add
mov
bound
pop
sbb
inc
cmp
ljmp
and
lods
cmp
and
inc
shrb
sbb
dec
popa
sub
mov
jno
in
add
and
bound
dec
aaa
ljmp
shlb
mov
pop
sbb
push
cmp
cmp
push
loopne
dec
test
adc
push
and
pop
add
lds
inc
mov
sub
cmp
in
or
pop
cwtl
add
add
ljmp
jg
rcr
cmp
movsl
mov
int
test
jg
incl
xchg
fcmovne
iret
pop
and
rsqrtps
dec
inc
jmp
lock
mov
clc
adc
push
cmp
push
out
dec
fisubs
sub
stos
ss
adc
inc
insb
sub
cli
lds
test
pusha
aas
push
popa
cs
movsl
inc
pop
ja
repnz
sbb
inc
mov
push
call
lock
orb
clc
push
cld
xchg
mov
inc
dec
cmpsb
add
xor
clc
icebp
dec
iret
ds
fsubrs
add
xchg
jo
xchg
cmpsl
stos
inc
xchg
in
or
mov
sti
cwtl
ret
ss
lods
addl
arpl
jp,pn
fsubr
cmp
push
push
dec
dec
or
pop
lahf
loopne
cmp
jecxz
or
or
mov
mov
add
dec
data16
cmpsb
fbld
outsb
scas
jg
add
sbb
iret
sbb
pop
hlt
mov
push
cmpl
loope
push
repz
out
outsl
sub
push
dec
add
mov
cs
or
cmp
dec
sub
xor
int3
push
add
push
out
pop
stos
andb
shld
jo
cmp
pop
sbb
loope
loopne
hlt
pusha
mov
xchg
xchg
ret
push
inc
test
cmpsb
mov
sbb
mov
in
push
je
adc
mov
cli
pop
fmulp
mov
aas
cld
decl
or
leave
mov
or
cmp
out
mov
fbstp
cmp
cli
push
mov
mov
test
arpl
xchg
cmpsl
xchg
cs
mov
dec
fldenv
neg
inc
cmp
jae
dec
cli
cmpsl
sbb
popf
divl
push
or
push
in
mov
out
and
xor
mov
mov
sbb
pusha
aaa
pop
adcb
in
or
adc
mov
sub
mov
xor
inc
xchg
pop
pop
mov
lret
cmp
mov
sub
mov
cmp
adc
mov
pop
cltd
int
adc
mov
mov
jne
inc
sbb
jnp
ljmp
sub
scas
lea
mov
addr16
pop
jge
and
xchg
loope
push
jnp
jae
inc
inc
loopne
pop
xchg
sub
les
fwait
xor
push
adc
jmp
mov
push
inc
das
mov
xchg
jne
jne
ret
push
fcomp
rcrl
sbb
xchg
lds
sbb
jnp
int3
sub
sbb
test
inc
or
xor
inc
loopne
int
dec
lret
insb
mov
js
inc
nop
mov
ret
pop
dec
cmp
lods
mov
inc
decl
inc
inc
sti
or
cli
fs
dec
sub
arpl
and
imul
sbb
int3
or
add
and
nop
insb
adc
dec
mov
movsl
cs
push
adc
push
pop
push
lods
sbb
jecxz
mov
cmp
mov
stos
and
push
jo
filds
mov
sbb
dec
and
dec
cmp
fwait
out
push
lods
in
add
imul
cmp
out
loopne
cmp
ret
pop
and
push
in
hlt
pop
sbb
cmp
add
movsb
push
cld
rclb
movsb
into
sahf
sbb
mov
xor
repnz
in
adc
icebp
loope
les
loope
loop
push
sbb
lods
mov
sub
add
mov
cmp
aas
out
ljmp
add
push
in
xor
pusha
inc
loope
push
mov
cmp
std
std
in
adc
xchg
fldt
jecxz
std
into
mov
hlt
cmp
adcb
std
loope
fidivs
sbbl
or
inc
inc
cwtl
or
pop
pop
enter
or
xchg
or
xchg
fcoms
mov
mov
pop
lea
inc
pop
xchg
mov
add
loopne
jo
mov
fistpl
add
adc
xchg
cmpsl
aad
arpl
mov
jnp
cmp
xor
xor
jbe
xor
push
pop
pop
add
or
stos
push
pop
add
sub
roll
or
xchg
imul
mov
mov
loope
aam
arpl
mov
ret
fisttps
and
xor
pop
stc
cmc
pop
lcall
jb
insb
outsb
insb
mov
dec
adc
adc
xchg
pop
push
sub
lret
test
sbb
icebp
mov
repz
or
add
inc
jmp
lock
sub
insb
jecxz
loop
iret
addr16
lods
pop
dec
xchg
and
sar
fcmove
push
lock
lret
xor
aad
call
mov
or
dec
or
pop
roll
lret
in
fisttpll
pop
roll
sub
loopne
xchg
xchg
pop
cmc
mov
out
push
or
or
mov
inc
xchg
adc
ja
push
mov
sbb
or
lret
addr16
xchg
sbb
cmp
ds
outsb
lods
sbb
in
cmpsb
xchg
aas
xor
mov
adc
ss
orb
jns
cmp
fbstp
fucom
mov
jo
pop
pop
in
push
pop
add
mov
fwait
pop
lds
pop
jnp
jae
fnstsw
jno
xor
pop
orb
pop
inc
xor
dec
mov
and
xor
inc
mov
out
test
mov
mov
push
fisttpll
in
ret
insl
xchg
repnz
decb
or
arpl
xchg
sbb
xor
lcall
inc
or
call
jne
mov
icebp
hlt
test
sbb
push
repnz
xchg
xor
dec
cmpsl
cmc
adc
les
int
jo
stos
push
filds
adc
mov
cmp
aaa
or
xor
mov
lods
mov
and
adc
mov
xchg
add
fsts
fucom
jl
movsl
or
push
ja,pt
aas
mov
pop
mov
jge
mov
cmp
inc
leave
add
xchg
insb
scas
mov
fwait
ljmp
sbb
mov
jno
push
push
rclb
xor
pop
inc
jbe
jmp
fcoms
int
call
nop
fdivs
fwait
rcrb
das
mov
sub
ret
shl
jmp
dec
inc
hlt
sub
fsub
call
leave
xor
out
or
in
and
insl
push
sbb
popa
in
enter
xor
push
lret
push
fbstp
push
xor
mov
push
aad
fcmovnu
out
sbb
inc
push
inc
imul
xor
addr16
arpl
dec
pop
jle
lods
scas
jl
iret
xchg
mov
lcall
push
mov
mov
insl
adc
lcall
ds
inc
ret
shlb
xchg
mov
push
rorb
rolb
mov
xor
clc
ret
jg
push
stos
addr16
fimuls
nop
add
and
pop
push
xor
outsb
xchg
sbb
ds
pop
dec
sahf
mov
jne
jecxz
gs
shrl
fwait
push
and
mov
popf
ja
dec
les
mov
push
repnz
and
jle
subb
push
iret
imul
fldcw
mov
sub
mov
fcoms
sarl
hlt
lds
jmp
stc
xor
imul
iret
and
pop
xchg
jno
xchg
mov
mov
leave
loopne
jne
aaa
out
mov
ljmp
cli
add
cmc
pop
mov
xor
shl
mov
push
lahf
int
loope
fs
sbb
movsl
std
jp
dec
fwait
addb
pop
repnz
les
cld
push
add
or
adc
inc
in
rcrb
jb
push
lds
jmp
lods
ljmp
push
insb
dec
and
xlat
or
xor
shrl
xor
jle
add
int
lcall
je
mov
mov
jne
sbb
or
cmp
add
and
fisttpll
arpl
int3
out
addl
jns
fmull
adc
popf
sbb
ret
sub
add
loope
test
aad
add
pop
dec
pusha
push
ret
pop
or
pop
aas
or
shlb
fsubrl
cmc
daa
sbb
gs
loop
aad
fisttpll
les
cmp
mov
call
or
dec
cmp
loopne
inc
jl
mov
adc
mov
in
das
mov
or
loopne
sbb
sub
dec
push
or
or
mov
mov
repnz
rorl
fstpt
jge
jns
lret
je
cmp
pop
or
inc
mov
aaa
push
subb
aam
add
pushl
adc
ficoml
mov
add
sarl
int3
in
fsubrl
into
ds
or
mov
fstpt
mov
xchg
shrb
mov
dec
mov
push
cld
arpl
outsb
fsubs
in
pop
cmp
ds
mov
lods
incb
add
dec
add
bound
insb
push
pop
xchg
add
mov
inc
int3
add
mov
test
gs
lret
loope
pop
mov
sar
inc
insb
xor
adc
sub
lds
mov
mov
dec
les
incl
mov
inc
pop
lock
int3
cmp
in
lret
insl
adc
mov
pop
or
jno
testl
and
add
dec
outsb
pushf
and
lds
sub
sbb
rcrl
mov
stc
mov
dec
cmp
jl
pop
adc
rcl
rolb
mov
adc
add
inc
lock
mov
shlb
rcrb
addr16
mov
mov
sbb
and
pop
xchg
mov
addl
sub
fmuls
adcb
addl
aaa
lret
outsl
xchg
loope
ja
subb
shrl
inc
pop
dec
adcb
out
push
stos
lods
and
test
sarl
push
mov
jp
dec
jle
xor
es
pop
mov
mov
test
pushf
lahf
mov
mov
roll
mov
cmp
iret
sbb
lahf
js
je
sub
push
lock
xchg
cmpsb
inc
mov
jp
push
sbb
iret
ss
adc
popf
xor
loopne
inc
imul
pop
orl
fdivs
jecxz
push
xor
out
mov
push
jp
adcl
jge
mov
mov
mov
mov
lods
test
push
adc
fwait
int3
rcrb
xor
xor
jl
mov
shll
popl
insb
sbb
or
cmp
es
lods
add
or
mov
pop
lods
push
add
out
push
cmp
adc
test
addl
mov
add
pusha
call
out
rcl
jg
mov
addr16
push
mov
test
sbb
loop
cld
push
ss
test
pop
jb
loopne
lds
mov
dec
aaa
je
mov
sbb
ljmp
add
lods
sub
cmp
push
loopne
add
pushf
in
jae
ljmp
push
lret
adc
movsl
vmread
or
pop
fnsave
sub
test
and
jl
cmp
test
je
pop
sbb
sbb
test
xchg
aas
mov
and
rcll
xchg
cmp
push
cmpsl
jbe
notb
inc
cmp
push
cwtl
cmc
ljmp
call
xchg
mov
test
inc
push
inc
mov
insl
sub
dec
int
popa
imul
in
pusha
in
ljmp
sbb
adc
adc
mov
adc
in
clc
jmp
and
push
sbb
test
push
mov
sbb
or
jbe
loopne
mov
test
dec
xchg
stc
cmp
in
test
push
inc
cld
cmc
inc
xor
add
xchg
pop
je
push
rol
mov
insl
adc
arpl
sbb
jo
stos
sbb
add
jb
mov
sub
mov
jl,pt
pop
popa
sbb
cmp
cmpsb
sub
adc
fbld
int3
inc
mov
cli
bound
jmp
aas
lods
rolb
nop
nop
dec
push
pusha
lods
mov
mov
gs
fldenv
scas
icebp
daa
add
xchg
push
push
pop
cmp
dec
mov
cwtl
pusha
cmp
jnp
mov
push
mov
xor
loopne
aaa
sbb
outsl
xchg
push
add
out
and
mov
std
and
mov
stos
sti
and
or
inc
lret
lcall
addr16
leave
xor
push
xchg
push
pop
inc
push
push
push
push
pop
loopne
or
push
pop
loope
jo
int3
shll
xlat
cli
cmc
cmp
clc
sbb
fsubr
inc
out
adc
adc
out
jp
lcall
imulb
push
jle
xchg
repz
mov
cs
push
shl
pusha
mov
sub
out
ss
ficompl
mov
cld
sbb
cmpsl
jno
rorb
or
mov
fiaddl
hlt
fiaddl
stc
in
pop
pop
jo
xchg
mov
inc
fsubl
lock
mov
rolb
push
mov
pop
or
jg
push
add
dec
xor
scas
shlb
xchg
or
mov
loopne
mov
std
jb
cmp
cs
stos
test
xor
and
push
pop
inc
mov
jmp
out
out
mov
mov
int3
cmpsl
inc
lret
call
push
and
clc
loop
andl
daa
mov
mov
lea
and
add
loope
pop
out
push
loop
cld
cmp
inc
add
aam
stc
mov
lock
inc
mov
div
mov
mov
outsb
cmp
mov
sub
mov
inc
fimull
leave
push
std
or
aam
shlb
fs
or
push
icebp
add
rcll
inc
ds
fsubp
mov
mov
test
fisubs
mov
dec
data16
aas
aam
adc
rorb
cmp
xor
xchg
aas
mov
cld
inc
cmp
mov
cmpps
aad
and
add
push
adc
cld
cmc
pop
mov
nop
adc
pop
loopne
and
data16
pminsw
xor
dec
jp
jbe
sub
outsb
or
icebp
stc
dec
pop
in
pop
xor
inc
clc
clc
bound
cli
iret
mov
and
jle
test
jno
adc
in
dec
loop
into
cmp
add
test
aas
test
scas
jno
mov
add
imul
scas
mov
and
pop
and
push
pusha
mov
in
fidivs
lock
xchg
push
or
test
in
xchg
je
inc
jo
cs
mov
pop
jg
add
pop
mov
icebp
or
xor
xlat
sub
mov
push
scas
push
adc
inc
inc
pop
push
insb
xor
jmp
loope
inc
mov
cli
add
loope
lret
fcomip
rcll
call
lock
push
inc
movsl
in
sub
cli
pop
mov
aas
int3
fwait
or
insl
xor
ret
gs
scas
cmp
daa
pushl
loop,pn
xor
leave
adc
rorl
rorb
dec
dec
sbb
popa
push
mov
mov
scas
fs
rclb
icebp
add
nop
add
test
lock
cwtl
ret
out
jmp
hlt
subb
push
mov
add
mov
lods
push
stos
ret
int
jl
cmp
mov
aas
add
mov
jmp
sbb
aaa
loop
jne
adc
iret
pop
shll
dec
ss
adc
addb
mov
jnp
mov
xchg
in
lcall
xchg
aas
push
rorb
add
movsb
adc
out
je
dec
aam
movsb
ficomps
sbb
outsb
or
std
jno
loope
fcoml
xor
push
das
mov
mov
xor
sbb
and
scas
cltd
andb
mov
mov
xchg
mov
je
outsl
into
lahf
cwtl
add
inc
in
inc
dec
mov
jmp
in
insl
mov
or
pop
es
sbb
lock
jae
inc
push
pop
pop
pusha
inc
cltd
inc
sbb
mov
stos
cmp
jb
inc
jne
sub
shl
cmp
js
iret
ret
ret
dec
adc
arpl
and
test
clc
stos
inc
cld
fisttps
cld
and
fwait
pop
shrd
xchg
push
adc
cmp
sbb
enter
and
push
mov
cli
les
or
xchg
sub
pop
fbstp
in
push
arpl
pop
insb
xor
js
cmp
decl
cmp
mov
cmp
jecxz
cmp
cmp
mov
into
cmp
fucomip
pop
sub
sahf
or
scas
jl
mov
push
xor
inc
outsb
adc
aam
sub
into
scas
jbe
push
out
or
dec
and
test
mov
add
xchg
xchg
mov
mov
test
cmpsl
cmpb
mov
pop
cs
fidivs
xchg
jle
insb
jmp
mov
jmp
test
mov
add
and
out
sub
inc
mov
xlat
pop
lcall
push
out
call
pop
mov
mov
adc
mov
push
mov
pop
pop
sub
or
fbstp
lock
cld
or
mov
push
scas
in
hlt
gs
xchg
push
jecxz
lock
pop
icebp
jbe
call
movb
enter
les
jp
mov
out
xor
jno
into
popa
fstpt
or
fcom
ljmp
push
or
sbb
sbb
sbb
hlt
add
adc
mov
adc
cli
mov
adc
js
int3
cmpb
cmp
test
jns
mov
sub
sbb
adc
sub
cmpb
inc
xor
clc
lock
test
mov
or
adc
xor
add
dec
pusha
das
mov
jmp
inc
sbb
mov
or
mov
mov
imul
or
loop
pusha
mov
inc
adc
fwait
dec
mov
inc
in
push
lock
adc
es
pushf
cmp
call
clc
sbb
jb
ret
cwtl
inc
or
and
add
adc
push
sti
and
clc
add
xchg
jno
inc
xorl
rclb
jo
jne
loopne
jbe
and
sub
ljmp
in
pop
sbb
mov
sub
test
cmc
dec
mov
ds
xor
popf
ret
adc
adc
ljmp
dec
pop
cli
iret
add
lods
xor
and
push
pop
test
ret
mov
or
jb
fnstcw
sub
push
bound
imulb
jno
adc
push
cmp
inc
cltd
ss
sar
outsl
cli
in
orb
fcomps
inc
inc
and
push
in
jnp
lods
cmp
mov
movswl
mov
cmp
outsb
lcall
adc
aam
jo
addb
xchg
aam
jl
loopne
xor
or
push
out
mov
shl
mov
fcoms
lcall
jo
out
or
push
xor
adc
inc
jo
xchg
sub
out
arpl
daa
mov
jle
dec
push
ja
pop
in
cmpsb
aas
xor
mov
lds
pop
test
jmp
lret
and
shlb
lea
pop
lcall
mov
xchg
test
mov
sub
clc
dec
mov
jbe
insl
fistpl
stos
and
out
xor
pop
add
add
and
inc
int3
mov
hlt
mov
and
in
loope
in
push
cmp
fsubrs
jp
adc
lods
push
sbb
addl
mov
cmp
mov
cmp
xchg
jnp
cmp
fs
lods
pop
call
ds
mulb
pop
pop
faddl
sbb
lods
pop
aad
inc
mov
nop
mov
pandn
xor
xchg
shll
test
je
or
push
sub
sub
jmp
push
jne
mov
sbbb
pushf
push
cs
insl
scas
je
inc
cld
test
sbb
jg
bound
in
filds
xchg
add
and
sbb
pop
adc
mov
mov
stc
add
jmp
stos
sub
mov
popa
rolb
ljmp
lea
push
mov
add
gs
sub
into
sub
call
frstor
xchg
jle
jnp
xchg
mov
sbbb
and
mov
sbb
xchg
sbb
jg
fwait
inc
call
sub
iret
nop
adc
add
mov
call
bound
test
fistl
pop
inc
mov
mov
xor
popa
imul
lods
les
les
sub
fcomps
jl
jbe
out
ret
xchg
test
push
bound
cmp
or
and
or
mov
adc
dec
jl
push
jl
fmul
and
sbb
add
push
sub
or
lret
leave
outsb
sbb
roll
divb
es
mov
pusha
mov
addr16
sbbb
ficoml
or
dec
adc
es
adc
fmull
jmp
js
cld
lock
aas
fisubl
jecxz
mov
add
pop
or
sarl
adc
mov
inc
rolb
push
loop
dec
mov
add
testb
sbb
imul
lahf
push
adcl
pop
mov
cmc
sub
inc
lea
add
daa
or
out
inc
cli
test
pop
hlt
lea
flds
cmp
add
rorb
sub
loop
pop
ficompl
mov
mov
pop
jo
xchg
xor
mulb
mov
pop
scas
js
bound
mov
push
pusha
test
pop
std
popl
popa
roll
cmp
clc
dec
dec
dec
insb
inc
ficomps
or
mov
mov
js
idivl
push
push
lret
add
sbbl
and
push
cmp
jne
add
push
cld
jo
pop
xchg
movsb
add
jl
adc
repnz
jbe
aaa
mov
fildll
dec
mov
divl
mov
jp
mov
mov
inc
cwtl
add
pop
pop
popa
aas
pop
cmpsl
cs
and
pop
aaa
add
popf
push
mov
out
ja
or
es
push
mov
sbb
jbe
mov
fsubp
push
movsb
sbb
outsl
add
test
call
ffree
mov
enter
cmp
pop
jl
push
push
hlt
int
cmp
sbb
jo
inc
je
das
or
xchg
push
fsubr
cmc
sbb
popf
xchg
je
out
outsl
mov
fs
fiaddl
mov
mov
and
inc
repnz
and
cwtl
and
test
ss
add
mov
mov
push
sbb
xor
cld
mov
divb
loopne
and
mov
pop
jg
jle
sub
insb
mov
jecxz
shl
cli
and
ret
push
jmp
pusha
cmp
test
push
xchg
popa
xlat
push
or
push
sub
pop
lahf
sbb
jb
xlat
or
push
das
fadds
sti
mov
sub
cli
pop
add
adc
xchg
and
cli
add
cmp
cwtl
or
fisubs
js
push
push
xchg
loop
push
je
mov
sub
cltd
adc
mov
add
lret
xor
adc
jecxz
ret
xchg
jle
repnz
ret
cmp
pop
push
int3
nop
sub
add
lock
jle
subl
arpl
movsl
ss
sbb
clc
jg
faddp
pop
inc
sub
jns
xor
lret
push
xchg
sarb
in
sahf
in
fwait
mov
and
adc
repnz
add
fs
fwait
pop
rorb
js
mov
jg
and
push
rorb
and
add
sahf
cmp
mov
xchg
mov
mov
xchg
js
add
mov
shrb
push
pop
mov
scas
out
clc
test
or
cli
movsl
in
jne
test
mov
add
inc
or
call
into
dec
cs
cli
addl
lcall
pop
leave
clc
and
push
sub
js
ret
cli
into
adc
pop
popa
pop
mov
xor
mov
cmp
push
push
imul
bound
pop
add
dec
and
ret
inc
xchg
sti
loopne
lods
stc
push
cmpsb
mov
clc
xor
mov
hlt
addr16
dec
in
lcallw
inc
sub
add
outsl
jg
ja
out
push
or
sbbl
clc
or
mov
movsb
add
xchg
mov
shrl
xchg
cld
or
inc
jnp
lods
adc
mov
pop
xchg
dec
fstps
outsb
negl
pop
fidivrs
lcall
loope
cmp
adc
cmp
push
sbb
and
jo
in
mov
mov
mov
cld
dec
out
inc
inc
jns
outsb
pop
je
xchg
das
jne
mov
cld
inc
filds
movsb
pop
test
mov
jle
nop
push
shl
incl
cli
mov
cmp
cmpl
jne
push
sti
dec
push
inc
xchg
cmpsb
cmp
mov
js
cmp
es
adc
add
movsb
jne
cmp
sub
andb
jo
pop
xchg
aas
insb
push
mov
das
jl
loopne
jb
sub
int3
jp
loopne
adc
rcl
jl
lret
mov
sub
test
jo
adc
cmp
add
mov
pushf
addr16
incl
fcoms
subl
fwait
out
push
clc
push
jg
cli
aad
out
mov
std
orl
movsl
testb
movb
pop
test
cli
jg
push
add
test
dec
cmpsl
xor
mov
std
out
and
cmp
pop
mov
mov
jecxz
mov
lret
sahf
rcrl
push
pop
and
ret
test
fsubs
pusha
out
mov
inc
fiadds
and
jb
sbbb
xchg
aaa
shll
mov
inc
mov
fs
mov
mov
inc
xchg
push
pusha
mov
push
ss
in
push
int3
out
mov
test
cltd
pop
or
out
push
fnsave
sbb
or
push
xor
fsubrl
jg
imul
scas
pushf
loope
loopne
pop
push
ror
in
fnstenv
ljmp
push
push
pop
ret
xor
sbb
test
sbb
cmpsl
or
inc
fcmovnb
push
les
xlat
ret
sub
loopne
inc
in
in
adc
dec
ret
leave
mov
ret
mov
mov
mov
mov
pop
dec
into
test
fiaddl
adc
ffree
scas
jle
sbb
cwtl
ret
dec
lods
mov
jl
pop
inc
sbb
pusha
movsl
adc
push
pushf
push
out
insb
push
lock
xor
pop
aas
fists
xor
push
push
sub
xor
xor
xor
mov
mov
jmp
inc
jb
movl
cli
or
cmp
or
fdivl
add
mov
pop
mov
not
push
xor
fwait
ss
out
stos
test
cld
call
sub
fstpl
mov
adcb
ret
inc
push
pusha
call
loop
adc
dec
xor
gs
bound
movsl
push
mov
lods
int3
push
enter
mov
cs
and
pushl
std
cmp
dec
inc
push
cli
aam
adc
jge
add
cmp
or
xor
fcomi
lock
imul
cs
aaa
lcall
fnstsw
cwtl
push
les
and
cwtl
lret
mov
adc
inc
ficoms
xchg
xchg
add
or
pop
or
add
imul
unpcklps
mov
imul
inc
in
call
or
std
sbb
jp
ficomps
sub
jp
call
sub
cmp
or
data16
sbb
adc
scas
sub
pop
ret
push
mov
or
dec
mov
ret
out
lods
cmp
cmp
incl
loopne
mov
add
aam
mov
loop
sbb
mov
test
adc
mov
push
inc
rcrl
cmpb
subl
fisubs
shl
sub
adc
dec
loop
mov
enter
cwtl
pop
push
xor
pushf
scas
cmc
mov
mov
lock
fbstp
pop
mov
arpl
add
mov
fmuls
cli
dec
sub
orb
ret
shlb
cld
pop
lods
icebp
ljmp
ret
jg
xchg
mov
push
fcompl
imul
ret
rclb
pop
in
jecxz
cmp
ds
cli
sub
sbb
fcmovnu
xor
out
inc
js
cmp
ja
add
pop
cmp
rclb
push
orl
xor
sti
dec
inc
insl
xor
xlat
add
jo
push
sbb
hlt
and
add
incl
aas
pop
add
xchg
mov
cwtl
mov
pop
lods
cli
jb
test
and
xor
pop
xchg
les
push
punpcklbw
or
adc
pushl
cmp
test
into
popa
add
add
ds
call
icebp
add
addb
sub
pop
fiaddl
adc
xchg
mov
icebp
stc
inc
cmc
and
out
cmc
add
inc
mov
mov
mov
call
cwtl
mov
ss
mov
mov
pop
test
jae
stos
jp
shrl
mov
rolb
fmuls
shlb
xchg
pop
mov
mov
rclb
and
pusha
inc
cli
sarl
and
push
jg
and
xchg
or
push
enter
or
inc
int3
adc
mov
mov
je
or
test
mov
daa
inc
mov
sub
push
fcoms
mov
mov
or
mov
dec
dec
sbb
icebp
das
clc
pushl
or
call
in
adc
add
roll
cmpsb
mov
push
jmp
and
xlat
lods
int
inc
pop
add
pusha
add
lcall
repnz
xor
fwait
pushf
sbb
jge
je
call
mov
sbb
xor
pushf
cld
lret
aad
in
and
jns
xchg
imul
sbb
dec
lret
ds
adc
sub
orb
or
mov
cld
mov
call
sbb
shlb
push
les
pop
clc
addb
shrl
add
push
scas
fwait
lock
rorb
mov
stc
add
mov
aaa
subb
add
push
stos
mov
dec
jb
imul
imul
jle
adc
scas
les
orb
sub
nop
inc
dec
cltd
pop
rcll
insb
mov
mov
jl
ljmp
mov
out
imul
movsb
inc
push
sti
pop
adc
sbb
loopne
ret
sbb
outsl
push
cmp
push
mov
inc
repz
and
and
test
movsb
xchg
push
pop
hlt
mov
rclb
sub
pop
and
push
cld
mov
ret
dec
pop
jbe
lock
ret
dec
dec
in
cld
mov
rcrb
push
mov
or
fs
add
inc
lea
movsb
push
sbb
inc
pop
jmp
or
pop
hlt
shrb
pop
jmp
bound
mov
movsb
jbe
fstps
dec
inc
pop
mov
pop
int3
rcl
add
outsb
lret
test
sarl
data16
push
jp
cmp
inc
fisttpl
xlat
fmul
xchg
decl
sub
sbb
dec
gs
mulb
sbb
enter
nop
pop
ret
decl
fsubrs
sarb
stos
sbb
inc
test
cmp
scas
aam
jbe
stos
ljmp
cmp
cmc
push
pop
addl
jmp
mov
sbb
push
jbe
mov
jecxz
add
call
jo
mov
jg
mov
and
mov
mov
addr16
popa
or
dec
clc
pop
popf
or
mov
sbb
add
add
shlb
pop
adc
into
jmp
pushl
adc
movsl
adc
xchg
push
push
pop
jno
fwait
fidivrs
and
add
je
roll
aaa
dec
filds
scas
fsts
jp
jge
sti
adc
jne
and
shrb
outsb
adc
push
xor
pop
and
jbe
fmull
inc
xchg
inc
push
mov
jecxz
push
adc
pop
xchg
test
mov
into
sub
into
jg
cmp
jmp
jno
ficoml
xor
pop
cltd
mov
mov
mov
jmp
insb
xor
jp
sbb
inc
std
iret
push
popf
jle
lahf
xor
sub
cmp
fidivrl
mov
rcrl
js
sbb
jl
arpl
push
insb
mov
inc
sbbb
sbb
xor
mov
mov
adc
lcall
mov
lods
mov
fcmovnu
adc
int
out
nop
rolb
call
faddl
pop
dec
xlat
xchg
ds
sub
add
repnz
das
push
push
xchg
cmpl
and
jo
fsubrp
mov
ret
das
filds
mov
push
pop
jns
rorb
ss
addl
mov
push
call
adc
dec
sub
lds
or
jecxz
femms
fcmovnu
mov
cmp
call
sub
cmp
pop
cmpsb
or
add
test
push
push
sahf
cmpsb
cltd
inc
cld
fbld
pop
or
jl
push
adc
lods
shrb
aam
mov
pop
std
mov
sub
push
pop
adc
hlt
fstl
cmp
jae
xchg
xchg
dec
popw
adc
jmp
or
adc
out
sbb
pop
and
dec
imul
push
paddw
inc
aam
or
imul
sbb
sub
test
xchg
fdivs
or
inc
insl
adc
mov
pop
and
insb
and
stos
mov
add
adc
and
lds
xchg
mov
mov
or
into
mov
ljmp
xchg
sbb
and
dec
scas
lods
insl
adc
push
in
adc
adc
shlb
je
cmc
push
lods
int
or
and
aas
in
inc
or
cmc
cmc
es
adc
aas
les
pushf
sub
xchg
xchg
pusha
leave
inc
scas
stos
mov
xchg
pop
pop
mov
xchg
test
pop
xchg
mov
loop
or
mov
mov
mov
inc
jg
push
enter
pusha
roll
fisubrl
pop
and
rcrb
push
int3
cli
mov
mov
sub
dec
add
sbb
add
push
cmp
inc
mov
scas
jo
mov
int3
fiaddl
pop
sti
hlt
pop
cmp
enter
push
mov
stc
cmpsb
cmovle
mov
adc
roll
lcall
xchg
repnz
jl
cmp
mov
jle
sbb
notl
outsl
sub
icebp
sbb
fisttpll
dec
int3
negl
lock
repz
roll
rcll
lods
rcl
lea
inc
lahf
fnsave
fbstp
call
mov
jo
mov
mov
xor
clc
pop
or
push
xchg
add
xor
divl
out
loop
xchg
push
cmp
xor
push
mov
std
push
jne
inc
lock
jb
lds
ljmp
inc
xor
push
push
les
adc
aas
cmp
mov
lock
and
into
aam
addr16
or
das
mov
adc
adc
xor
add
cli
cmpsl
sub
imul
inc
xchg
repnz
fmuls
adc
push
scas
pop
mov
divb
ss
cmp
shrl
shll
ljmp
add
dec
xor
dec
imul
enter
fs
push
xor
xor
add
push
fdivl
jae
or
je
imul
mov
pop
mov
shlb
inc
ds
or
dec
pop
mov
rcrb
shll
dec
sbb
push
pop
adc
inc
or
jmp
mov
cmp
cs
cmpl
mov
adcl
add
stos
push
notb
mov
dec
lahf
mov
mov
jp
sbb
add
cmp
sub
push
loop
mov
rolb
fwait
in
sbb
pop
aam
subb
cmc
and
scas
push
jb
ljmp
or
jle
pop
in
xor
rclb
call
jne
sti
jecxz
andl
jmp
cs
cmp
in
jne
add
int
incb
scas
test
ljmp
roll
loopne
sti
leave
dec
inc
add
push
sbb
test
shlb
dec
inc
imul
push
add
dec
add
test
fildl
test
mov
xor
movsb
pushf
sbb
mov
rolb
mov
jbe
inc
mov
aad
mov
jmp
inc
cmpsl
pushf
inc
je
add
js
in
aas
cs
scas
xor
subb
push
adc
push
sahf
icebp
es
push
es
mov
js
push
pop
rcrb
and
dec
sbb
rcl
mov
jle
pop
xor
mov
or
sbb
test
xchg
inc
mov
xchg
cmp
dec
jp
mov
out
adc
inc
js
add
inc
lods
adc
cmpsb
mov
or
out
cmpsb
xor
lcall
or
bound
test
inc
popf
ficomps
mov
arpl
dec
and
mov
fwait
sub
cld
add
jo
mov
fsubrl
out
scas
lret
in
cmp
xchg
or
nop
sub
inc
cmpsb
pop
mov
imul
mov
mov
fstpl
sti
push
mov
sbb
js
lods
adc
mov
fidivrs
cmp
pop
enter
jmp
push
dec
jle
rolb
out
rorl
inc
mov
test
push
in
mov
xor
loope
cwtl
sbb
imul
inc
clc
sbb
push
stos
aam
out
mov
adc
mov
inc
cltd
cld
lods
pushl
xchg
push
cmp
push
sbb
sub
pop
cld
add
and
outsb
test
dec
sub
mov
jl
push
mov
cmp
loope
or
pop
sbb
jecxz
in
sbb
push
test
xor
cvtps2pd
pop
lret
ja
fcomip
mov
fsts
movsb
ret
push
xor
pop
orb
push
or
out
push
dec
shrl
mov
test
and
pop
dec
inc
xchg
decb
fsubrs
or
mov
test
bnd
movsb
imul
mov
aad
pop
dec
jo
jne
push
aam
xor
add
fs
pop
hlt
stos
sarb
xchg
inc
xchg
adc
in
sbb
fimull
adc
push
mov
mov
dec
mov
sbb
jo
mov
or
push
or
dec
pusha
insl
ljmp
push
xchg
ja
out
mov
iret
jmp
in
dec
in
and
cmp
pop
clc
mov
push
mov
pop
add
cld
adc
push
add
xor
add
sub
push
ror
fsubrs
fldl
lods
push
aaa
jnp
les
sarb
xchg
cwtl
pop
push
dec
or
js
aas
cld
cmp
call
pushf
mov
inc
jns
inc
or
adc
jmp
call
sub
push
iret
out
fwait
test
inc
test
pop
mov
inc
push
push
push
stc
xchg
test
loopne
cld
mov
into
js
add
adc
dec
mov
arpl
lret
stos
mov
into
mov
lods
or
mov
or
jnp
stc
add
call
je
sti
fdivl
testl
scas
pop
fistps
ljmp
ss
pop
repnz
test
aam
cmp
xchg
lods
sub
xor
jecxz
movzbl
jg
dec
mov
into
push
push
and
popa
push
sub
loope
out
sahf
or
fs
xchg
aaa
mov
sub
cmp
sbb
cmp
jle
test
dec
add
subb
inc
scas
pop
mov
lcall
rolb
out
jmp
pusha
inc
fldcw
test
lock
pop
loopne
das
pop
outsb
jl
data16
push
jp
movsl
lods
mov
jb
or
mov
dec
rcl
cmpb
and
test
repz
or
adc
mov
mov
iret
repz
xchg
clc
jecxz
jne
dec
stos
inc
sbb
mov
inc
and
push
xor
mov
and
add
xchg
jg
sbb
out
mov
shrb
jecxz
jno
cwtl
adc
je
pop
mov
data16
call
jne
adc
adc
sbb
pop
idivb
icebp
ss
and
mov
xor
cmpb
lock
lret
push
sti
ret
mov
mov
adc
xor
pop
push
cmp
call
inc
inc
and
ss
imul
adc
and
pusha
xchg
jge
push
jg
push
xchg
cltd
fstp
icebp
xor
ljmp
mov
repz
es
mov
sub
test
mov
in
scas
xchg
mov
pop
mov
or
ja
and
pusha
push
out
cmp
neg
je
inc
mov
arpl
iret
mov
mov
movsb
add
fs
call
outsb
inc
dec
outsl
push
push
cli
loope
dec
push
ret
push
daa
ret
shlb
nop
xchg
mov
out
sbb
ljmp
lods
dec
or
lock
out
mov
mov
mov
push
lea
pusha
and
mov
or
lods
sub
jns
sbb
jno
lcall
mov
aas
es
int
push
add
cwtl
fwait
mov
dec
data16
add
pop
pop
push
adc
sahf
repnz
sbb
xor
lds
nop
in
or
rcrb
popa
dec
pusha
ljmp
xlat
cmp
jl
and
jg
pop
jecxz
dec
outsb
mov
push
lds
dec
lods
xchg
push
xcrypt-ofb
cmpsl
stos
lods
testb
std
xchg
jle
sbb
pop
ja
add
ficoml
and
jbe
xor
sarl
inc
xorb
roll
adc
sbb
add
js
inc
adc
add
fcomip
and
mov
push
lods
lds
ror
xchg
sub
mov
lret
mov
les
push
jbe
mov
hlt
out
out
cmp
jl
fldl
cli
lea
js
jbe
or
xchg
mov
mov
cmp
lods
leave
dec
add
add
add
outsb
sub
dec
cmp
outsb
mov
clc
aaa
mov
stos
cmp
push
xchg
mov
inc
lods
test
add
inc
popl
enter
xchg
faddl
cld
jecxz
ret
sahf
mov
mov
sbb
adc
ficompl
jbe
pop
add
or
rcll
in
xchg
pushf
sbb
dec
and
xchg
pop
sub
std
orb
dec
fwait
mov
or
pop
movsb
mov
dec
pop
push
std
or
cld
cs
pusha
cmp
adc
movsb
clc
mov
cmp
arpl
or
dec
subb
mov
xchg
push
sbb
push
repz
repnz
inc
adc
inc
pop
pop
mov
sub
daa
and
push
cld
push
shll
out
xor
or
xchg
pop
push
jno
mov
ss
push
dec
and
sahf
cwtl
jle
inc
push
aad
jbe
jbe
popa
aaa
aam
das
gs
mov
les
xchg
arpl
lcall
push
loop
sbb
adc
sahf
scas
pop
iret
pop
ret
stos
lock
aas
push
mov
addr16
xor
icebp
mov
hlt
push
sub
ret
xchg
dec
dec
enter
pop
inc
pusha
shl
mov
push
xchg
jo
in
add
xchg
pop
orb
pop
cmp
jle
lods
fs
xlat
inc
and
pop
loope
jecxz
adcl
xor
push
sbb
mov
add
sbb
shlb
cs
pop
popa
jp
mov
jge
lods
adc
nop
mov
xor
ss
mov
out
pop
aaa
mov
inc
pop
scas
pop
pop
xchg
adc
mov
outsl
and
adc
inc
call
or
push
loope
fwait
cmp
and
add
xor
push
mov
cmpsb
subl
std
sbb
sbb
cmpsl
add
out
mov
push
sarl
inc
jbe
sar
scas
das
sub
add
nop
mov
inc
and
jns
jle
inc
push
rcl
enter
or
mov
loop
rolb
testb
nop
sub
sbb
jl
mov
decl
sub
jb
pop
les
clc
int
inc
mov
push
bound
stos
stc
cld
lahf
faddl
lret
pop
dec
mulb
sbb
stos
ss
mov
arpl
aaa
push
pop
call
repnz
mov
lock
dec
jle
mov
xlat
inc
sarb
mov
jb
stos
or
push
adc
sbb
sub
or
push
mov
and
insb
or
sub
mov
lea
inc
rcrb
or
int3
sti
add
cli
pop
and
lods
loopne
and
push
jl
dec
jne
std
mov
popa
cmp
in
sbb
jnp
pop
adc
push
jl
xor
clc
lcall
test
lcall
pop
push
dec
jp
lcall
in
imul
daa
stc
shl
push
mov
mov
add
xchg
pop
fldl
bound
in
inc
push
cld
inc
rcrl
test
js
lods
stc
js
ja
insb
cmpsb
and
add
cmpb
clc
lock
scas
mov
popl
mov
fdivrs
outsb
add
fdivl
sub
fadd
in
or
das
xor
push
cmp
add
into
and
pop
shr
xchg
pop
sub
scas
loop
popf
pop
xchg
dec
sub
test
rorl
pop
mov
mov
and
fcmovne
and
aas
add
std
jg
aaa
dec
add
mov
clc
dec
push
in
incl
or
mov
mov
xchg
dec
pop
pop
mov
adc
les
iret
dec
rol
jmp
ja
fisttpll
pop
mov
jo
movsl
mov
push
pop
push
addr16
cltd
pop
aaa
jbe
std
jl
jecxz
mov
cltd
mov
pop
outsl
dec
mov
data16
cltd
xor
ss
sub
cmp
xchg
mov
and
xchg
and
pop
xchg
push
add
jp
jle
pop
cltd
mov
jne
test
jno
outsb
mov
adc
call
push
inc
fsubrl
popw
test
pop
and
inc
inc
xchg
and
dec
adc
or
mov
popa
push
je
mov
int
or
or
adc
addb
arpl
cmp
popa
rcl
outsb
or
movl
test
pop
and
mov
sub
iret
mov
jb
fmull
or
push
cwtl
cli
testl
adc
nop
cmp
scas
push
cli
lods
jne
iret
mov
data16
jl
or
inc
hlt
clc
inc
scas
pop
fwait
repnz
jp
mov
ret
cs
fistps
xchg
sub
mov
mov
jo
add
das
cmpsb
cmp
jmp
or
dec
pop
fs
jbe
jl
adc
add
es
add
push
call
lahf
outsl
jg
cltd
sbb
enter
sub
inc
dec
out
loope,pt
ljmp
add
dec
cmp
test
mov
sub
loop
leave
mov
les
lods
and
popa
inc
cld
dec
scas
lret
or
jns
push
push
inc
or
icebp
arpl
int
nop
andl
push
sbb
add
popf
sub
leave
mov
ja
je
xorl
dec
mov
jo
jb
push
loopne
js
addb
cwtl
pop
push
ljmp
mov
or
add
sbb
mov
daa
xor
pop
inc
clc
rcll
or
sub
xchg
push
mov
push
scas
adc
nop
ret
or
mov
mov
adcl
push
ret
inc
adc
mov
jo
daa
scas
add
add
loopne
std
insb
sbb
mov
ds
mov
cltd
clc
je
jg
mov
pusha
sub
or
cs
push
push
mov
mov
pop
insb
pop
pop
loop
lods
repnz
inc
repnz
inc
xor
push
pusha
shl
mov
movsl
hlt
pop
sbb
mov
mov
add
mov
jnp
outsl
cmp
sar
mov
pop
jbe
and
add
out
mov
call
mov
sub
mov
or
mov
insl
cld
movb
add
cs
add
jns
push
mov
std
les
std
xchg
push
mov
inc
ss
outsb
subl
cmpsl
inc
cmp
loope
sbb
jnp
push
stos
cmp
stos
test
rolb
call
into
sarb
hlt
repnz
cmp
bound
insb
std
addb
in
or
loopne
mov
negl
idiv
mov
push
test
mov
mov
add
add
cmp
adc
or
push
mov
mul
in
inc
je
push
mov
sbb
inc
lret
inc
push
mov
ret
loopne
loop
inc
dec
sub
decl
pop
repnz
pop
aaa
loop
hlt
mov
cmp
inc
mov
push
lret
hlt
mov
sahf
jno
push
je
ljmp
push
daa
sbb
repnz
sbb
incb
dec
cld
push
push
push
push
shrb
cs
int3
sbb
mov
mov
fmull
jg,pn
xchg
and
hlt
pop
nop
out
mov
dec
js
popa
pushf
cs
and
adc
jae
jecxz
imul
add
cmp
and
mov
outsb
ss
pop
pop
loop
test
movsb
inc
jne
rolb
test
and
pop
mov
movl
movsb
mov
xchg
iret
add
loop
test
xor
stc
dec
and
lods
mov
pop
das
jb
push
ds
ja
push
sahf
js
test
popf
loopne
ljmp
in
inc
xor
push
nop
test
jmp
clc
sti
sbb
cli
jae
jmp
mov
mov
mov
test
imulb
cmc
cmpsb
and
mov
shll
test
mov
fwait
adc
push
jge
pop
push
lock
in
xchg
cli
adc
ds
loop
rcrb
out
cs
pop
sub
test
call
jno
adc
out
mov
jnp
lock
daa
xlat
movsb
je
adcl
pop
add
xchg
fidivrs
ret
scas
outsl
call
inc
push
inc
push
mov
enter
lds
xchg
sub
addb
push
cmpsb
add
push
scas
fdivs
sub
pop
add
jb
or
mov
imul
pop
loope
inc
stos
test
mov
mov
lods
pop
mov
pop
mov
mov
sbb
jbe
lods
mov
mov
test
inc
cwtl
xor
push
inc
cmpsb
xchg
imul
adc
dec
es
adc
and
lods
fistpll
and
lods
jecxz
pop
clc
iret
push
enter
repnz
dec
adc
ret
lret
sbb
mov
aam
mov
in
cli
adcb
xor
bound
jl
jp
mov
jne
cmp
stos
mov
mov
lock
adc
subb
jp
and
push
lods
bound
fimuls
jno
push
out
mov
add
pushf
clc
pop
cld
cmp
lock
dec
movsb
lret
das
mov
nop
cmpsb
jne
inc
mov
iret
mov
mov
lahf
ret
std
repnz
imul
jmp
mov
andb
and
and
orb
inc
jb
mov
ret
adc
out
push
sub
push
je
outsb
cmp
push
push
bsf
lcall
jge
insl
jae
push
xchg
popf
and
cmc
mov
push
or
shlb
lds
inc
popf
dec
or
jns
cmc
outsb
jmp
or
jo,pn
std
sarl
jl
add
mov
inc
sarb
add
mov
aaa
push
mov
cmpl
xchg
stos
add
outsl
mov
mov
xor
mov
xchg
aam
mov
lods
push
aam
push
fdivrs
sti
mov
inc
in
mov
cmp
inc
mov
mov
shlb
push
push
jbe
mov
push
cltd
pushl
lods
pop
fucom
add
pop
mov
jl
fdiv
fadds
aam
rcll
and
fstpl
push
roll
inc
dec
je
mov
add
cs
scas
inc
mov
pop
js
pop
insb
xchg
stc
add
loop
and
or
push
cmpb
std
mov
je
push
push
xor
sarb
loop
mov
pusha
pop
add
mulb
test
xor
or
inc
pop
push
push
mov
addr16
test
sub
pusha
or
inc
cmp
scas
movb
and
fmul
add
pop
stos
lock
fiadds
out
cmpb
shlb
lea
icebp
and
call
rep
out
inc
popa
push
push
push
xor
jle
sarb
pop
mov
adc
or
inc
leave
pop
mov
orl
or
push
movsb
cmpsb
stos
sub
std
pop
cli
loope
outsl
jle
mov
nop
imul
add
lock
or
test
cs
repnz
xor
dec
cmp
outsb
ds
push
xchg
ss
cmp
mov
scas
stos
out
insl
add
jb
jo
lcall
add
cmp
push
imul
sub
mov
addb
and
sub
sti
mov
adc
imull
cs
xor
mov
mov
push
loop
dec
scas
lods
add
jl
js
xlat
ljmp
push
pop
mov
cmp
pop
mov
and
cmp
pop
lcall
loopne
jmp
or
inc
add
fstpl
jg
add
loopne
sti
enter
iret
sahf
fiadds
or
adc
adc
test
rorl
jecxz
pop
mov
add
xor
inc
xor
xchg
add
inc
jb
and
jmp
out
dec
icebp
xchg
pop
into
jecxz
and
sahf
ds
sbb
sti
hlt
sub
xor
mov
mov
lock
push
jo
mov
fwait
adc
mov
fwait
hlt
mov
mov
mov
xor
js
lret
mov
xor
mov
sbb
mov
inc
push
push
dec
neg
dec
jl
orb
adc
xor
mov
xchg
cld
stos
pop
stos
mov
dec
inc
rorb
pushl
dec
out
pop
popa
xchg
or
scas
sti
ret
adc
sbb
and
mov
test
lea
mov
int
mov
mov
andl
test
iret
push
inc
inc
lock
xchg
xor
and
sbb
idivb
pop
fnstenv
sbb
out
aad
and
fcmovu
jge
push
jne
xor
dec
and
loop
out
mov
pop
lods
sahf
adc
jbe
mov
adc
pop
inc
mov
adc
dec
call
sarb
dec
dec
stos
xchg
push
out
mov
sarb
or
ljmp
jnp
jmp
inc
test
cmp
shll
jnp
xchg
inc
into
icebp
fldcw
mov
sbb
push
sub
pusha
pop
inc
fcomps
add
jmp
mov
sub
mov
ret
jmp
sbb
loopne
cmp
ror
add
xor
js
cmp
push
pop
pop
adc
add
addr16
data16
shr
sbb
ret
hlt
or
add
adc
sahf
xchg
ss
scas
xchg
xor
fmuls
das
cmp
lahf
pop
cmp
pushf
cmc
dec
jecxz
dec
mov
xor
daa
stc
cs
test
jg
inc
jmp
cmpsb
lahf
dec
push
push
mov
loop
mov
push
mov
fdivrs
add
ds
xchg
fnstenv
pop
jmp
test
jg
xchg
imul
push
cmp
inc
idivb
call
clc
pop
push
cmp
mov
arpl
sub
pcmpgtd
fdivs
push
movsl
lret
mov
dec
adc
iret
jle,pn
shll
lds
jecxz
push
inc
and
ja
sbb
jae
sbb
xchg
aaa
dec
fdivr
sbb
mov
cmp
pop
jl
or
leave
movsb
scas
call
mov
pop
sub
mov
sti
loop
mov
and
sbb
mov
push
les
push
mov
sub
adc
rclb
filds
xor
adc
sub
cmpsl
data16
xchg
or
sbb
loop
insb
jns
xlat
fnstcw
jnp
mov
call
sbb
mov
jge
mov
push
jmp
ficoms
xor
push
repz
sbb
aas
pop
jmp
sbb
adc
loopne
cs
cmp
stc
mov
mov
lcall
push
mov
int3
test
adc
jbe
push
xchg
sbb
add
add
lahf
fbstp
mov
inc
and
add
adc
push
mov
pusha
mov
cli
outsb
js
pop
popa
popa
test
push
imul
push
jo
fldt
lds
inc
mov
add
push
mov
jle
or
insb
test
fdivl
rcr
xchg
into
daa
sbbl
popa
adc
push
xchg
or
cmp
dec
jl
sbb
aam
xchg
sub
mov
sbb
test
mov
outsl
loopne
orl
pop
xor
faddl
cli
and
jle
js
or
dec
push
insl
sub
shlb
je
pop
sbb
mov
jle
add
push
loop
lock
es
pop
sti
or
je
add
test
rorb
shrb
jp
mov
sti
punpckhwd
sub
push
inc
push
xor
pop
fsubl
out
cs
fdivrl
jp
push
out
pop
insl
cltd
lret
inc
clc
ds
lock
push
daa
movsb
sub
aaa
arpl
pop
ret
cltd
bound
jo
push
lods
andb
call
in
ja
sti
pop
fwait
adc
call
les
pop
pusha
rolb
pop
or
xor
lods
loope
mov
sbb
xchg
push
sbb
pop
pop
sbb
mov
or
mov
clc
es
fistpl
cmp
and
mov
mov
iret
int
aas
push
mov
cmc
call
es
in
jne
paddb
cmp
mov
xchg
cmp
pusha
adc
add
cli
scas
add
mov
aaa
loop
add
inc
mov
inc
mov
inc
and
lods
and
or
outsl
ret
outsb
push
and
testl
lock
add
leave
jecxz
repz
aaa
add
cmc
scas
movsl
push
fsubrs
push
inc
dec
pop
pop
mov
push
dec
push
push
add
ret
or
add
mov
mov
jmp
int
jge
adc
push
lahf
mov
ficompl
xchg
stos
fs
add
sub
arpl
add
pop
push
nop
jecxz
fwait
xor
push
cmc
addl
insb
xchg
inc
ds
xor
mov
nop
xor
adc
adc
mov
fdivrl
cwtl
into
dec
stos
adc
jo
fwait
mov
inc
mov
push
push
loope
int
jl
mov
icebp
jle
adc
incl
jne
xchg
mov
inc
mov
fnsave
hlt
sbb
add
pop
cld
cmp
add
push
int
lds
cld
cmpsb
sub
sbb
mov
outsb
xlat
rcl
push
inc
mov
add
push
or
sub
push
ret
sbb
push
ja
or
cmpsl
mov
lods
xor
sub
jmp
mov
hlt
jle
push
jne
mov
popa
in
pop
in
cmc
xor
xor
and
aaa
pop
addr16
sahf
ret
dec
add
popf
lods
ret
cmp
rcrb
mov
lods
xchg
xchg
cmp
movsb
push
lods
mov
cmp
xor
lds
cltd
pop
loop
mov
add
jae
xor
pop
in
jecxz
loop
dec
mov
out
and
leave
inc
push
mov
ret
jl
adc
xchg
dec
jmp
insb
lock
fcmovnu
push
xchg
jle
jns
insb
js
dec
push
out
popa
mov
push
lock
sbb
pop
fucomp
pop
popf
xchg
xchg
cmp
pop
fnstcw
mov
mov
insb
xchg
ret
movsl
xchg
lcall
sub
pusha
xor
testl
mov
lds
sbb
xchg
addr16
pushf
xchg
cmp
and
psubb
push
push
xor
es
gs
testl
mov
movsb
or
fcomps
pop
or
adc
hlt
dec
jl
mov
and
lock
nop/reserved
xor
pushf
jl
xchg
and
xor
push
scas
rcrb
stos
inc
shlb
loope
out
inc
or
clc
mov
add
stos
add
daa
jle
rol
lret
outsl
loope
shlb
stc
outsl
fisubs
rcrb
mov
in
cmp
fildl
test
mov
bound
or
xor
enter
lcall
adcb
cwtl
add
sub
push
inc
push
mov
pop
out
mov
pusha
sub
out
cmpsl
shrb
jecxz
gs
push
dec
push
flds
adc
popa
mov
push
dec
aas
mov
lret
adc
test
mov
sub
sub
enter
mov
cmc
dec
repnz
test
mov
jmp
xor
inc
cmp
xchg
scas
jle
jmp
pop
jmp
popa
cltd
mov
add
dec
mov
adc
ja
mov
push
inc
mov
and
push
mov
movb
popl
mov
mov
out
scas
push
loope
clc
cmp
or
jmp
cmp
fsts
sub
add
out
cld
jo
out
cmpsb
add
fs
cmp
jo
lahf
pop
cmc
clc
into
out
mov
push
aaa
scas
or
push
dec
lock
shlb
in
psrld
stos
or
loopne
adc
and
fnstsw
mov
sub
inc
adc
adc
push
shr
sub
test
insb
lock
popf
in
push
out
ja
jo
popa
xchg
imul
mov
sbb
js
jns
ret
cs
jne
sub
sahf
aas
pusha
cmpsb
out
loope
out
lods
fcoms
jnp
pop
mov
sbb
fisubl
jnp
xchg
repnz
jmp
mov
adc
cli
xor
aam
mov
xchg
pop
clc
push
stos
pop
xor
inc
xchg
inc
xchg
js
fisubrl
mov
pop
fidivrs
add
movd
ret
adc
inc
ret
dec
int3
mov
pop
lcall
loopne
jge
stos
lahf
pop
jnp
mov
sbb
movsl
ficoms
loop
sbb
ljmp
loop
jl
arpl
sbb
add
arpl
lock
xchg
rorl
icebp
imul
rolb
pop
pop
insb
mov
test
fisttpll
mov
jl
in
sub
mov
xchg
aaa
pop
lds
repnz
dec
mov
enter
jno
adc
pusha
fidivrl
pop
cltd
loopne
in
jecxz
cmp
xchg
movsb
je
adc
daa
add
sbb
test
cld
cli
sbb
or
hlt
or
ja
ljmp
scas
roll
out
sbb
xchg
xchg
imul
pop
incl
dec
rolb
add
ret
bnd
inc
or
xor
sub
insb
xor
mov
pop
hlt
call
mov
add
sahf
push
mov
mov
sub
es
inc
mov
ret
mov
dec
scas
cmc
mov
adc
scas
mov
adc
gs
cmp
add
addr16
outsl
cmpl
rclb
and
mov
sbb
leave
icebp
lahf
cmpsb
lahf
dec
dec
jl
cmp
aaa
adc
mov
dec
stos
push
fdivl
xchg
das
pop
arpl
icebp
and
xchg
mov
adc
cmpsb
out
rcrb
adcl
arpl
or
dec
mov
clc
into
dec
aam
jb
mov
es
andb
cmpsb
push
icebp
fdivl
les
jp
aas
push
clc
xchg
pop
jp
mov
js
int
mov
sahf
lock
ds
sub
push
rorb
xlat
or
xchg
outsb
mov
lret
mov
mov
mov
mov
lret
cmc
les
push
pop
movsb
divl
mov
and
loopne
enter
cli
inc
pop
jmp
push
inc
push
stos
arpl
xchg
pop
sbb
subb
xor
cmc
inc
bnd
push
add
subb
lret
lods
xor
fldl
stos
mov
mov
jne
loopne,pt
push
fs
xchg
push
je
cli
stos
mov
or
pop
imul
out
mov
push
mov
negl
push
clc
mov
cmc
dec
ffreep
clc
adc
and
mov
and
adc
pcmpeqd
add
fwait
mov
test
jmp
push
xchg
jecxz
cmpsb
sub
jb
push
xchg
jns
outsl
mov
stos
lods
mov
cld
and
mov
andl
fsubrs
lods
aam
outsb
inc
xchg
aaa
shlb
jo
inc
orb
fiadds
pop
paddb
lea
out
lret
mov
icebp
cmp
push
loop
mov
lea
sbb
enter
inc
aaa
jns
xor
ljmp
cltd
push
loope
popl
and
dec
mov
pop
movsb
rolb
ja
xor
pop
jne
inc
outsb
sub
mov
jg
shlb
ja
pop
clc
mov
and
pop
int
or
lahf
nop
mov
mov
mov
cwtl
adc
cmpsl
rclb
xchg
sarl
or
and
mov
inc
jnp
fs
out
sti
ds
add
fimuls
push
mov
mov
fdivrl
fidivs
jle
sub
pop
mov
je
sarb
out
pop
imul
adc
sub
xchg
push
add
jp
das
mov
inc
sbb
mov
jb
vcvttss2si
and
sbb
movsb
mov
mov
mov
xor
xchg
hlt
xorb
cmp
mov
lcall
mov
sbb
sbb
lcall
addr16
mov
xor
leave
push
ss
test
es
sub
dec
dec
sbb
clc
loop
pop
cmpsb
rep
cli
daa
clc
mov
out
popf
add
stos
jno
jno
jno
lock
cld
stos
mov
sbb
xor
mov
mov
loope
lcall
test
push
repz
add
dec
xchg
jge
fwait
and
xor
jo
sbb
int
outsb
adc
or
shrl
sar
mov
loopne
or
jg
scas
adc
nop
loop
subb
mov
cmp
or
lret
mov
and
or
sub
shlb
pop
pop
sti
es
sbb
mov
rcrl
push
hlt
push
mul
inc
push
sahf
inc
aas
hlt
inc
sti
jne
mov
mov
cmp
xor
xchg
inc
clc
in
hlt
scas
dec
xor
fnstsw
popf
dec
insl
test
jae
sbb
movb
hlt
rcrl
out
shrl
or
push
pop
in
dec
fistps
push
inc
xchg
mov
push
scas
das
icebp
dec
pop
arpl
insb
pop
ja
dec
mov
pop
das
cmpsl
mov
loope
mov
xchg
and
cwtl
stos
setno
push
xor
enter
or
xchg
add
scas
shrb
xor
mov
inc
add
sub
mov
inc
jecxz
dec
mov
push
inc
mov
ret
mov
xor
scas
sub
ss
xchg
clc
idivl
jl
add
sti
arpl
rorb
and
je
popa
movsb
add
loop
mov
pop
cli
cmp
add
jp
jae
push
mov
inc
dec
out
adc
xor
and
cmp
sub
and
loopne
cmp
movsb
inc
sbb
fsubrs
icebp
pop
aas
dec
xchg
push
mov
mov
cmp
cmc
jmp
leave
stos
sbb
lods
and
punpckldq
jbe
aaa
pusha
and
mov
jo
popa
fbstp
mov
dec
testb
pop
mov
in
or
cmp
dec
mov
jge
sub
test
test
addb
inc
inc
push
push
xchg
test
cmp
jl
jns
xor
movaps
call
daa
and
stc
inc
addr16
adc
lds
push
push
sbb
mov
jp
mov
xchg
pop
add
loop
xchg
dec
pop
xchg
addr16
add
xchg
test
fwait
xchg
les
inc
sub
and
cltd
sbb
ds
aas
pop
sti
jmp
push
bound
sub
add
xchg
mov
sbb
rorb
dec
mov
out
xor
cmp
iret
push
fistps
iret
loop
jmp
out
pop
add
or
std
ljmp
sbb
test
ret
push
dec
mov
mov
push
jo
aad
and
std
loop
xchg
mov
out
sbb
xchg
mov
clc
push
xchg
or
icebp
inc
test
inc
cli
icebp
inc
stos
out
ja
inc
push
pushl
pop
pushf
dec
cmp
dec
push
jo
imul
push
test
or
aas
lods
jl
popa
icebp
sub
jno
jle
loop
in
stos
stos
push
std
sbb
cmp
das
push
icebp
icebp
test
aas
xchg
lahf
pop
fld
lods
and
gs
or
nop
cmpsl
punpckhdq
add
les
ja
inc
mov
in
fimuls
adc
mov
cli
test
pop
add
xor
stc
je
or
enter
cld
test
sbb
repz
jbe
sub
bound
mov
mov
enter
mov
mov
mov
xor
or
xchg
hlt
or
iret
mov
cmpsl
fmuls
lods
lock
jle
ret
mov
pusha
test
add
sbb
test
push
mov
icebp
adc
shrb
jbe
sub
movsb
mov
inc
pop
and
dec
addr16
fadds
daa
or
decl
out
xchg
sub
leave
mov
repnz
add
bound
or
adc
shll
adc
jmp
aam
sti
rcrl
lret
pushw
pop
ret
mov
call
insb
nop
scas
push
scas
mov
rolb
popf
xchg
adc
ljmp
cmp
sbb
push
cmpsb
jg
dec
cwtl
adc
inc
push
aam
popa
insb
cld
push
lds
or
imul
rcrb
data16
rol
sbb
ljmp
testl
nop
dec
xchg
insb
mov
cmpsl
sbb
clc
mov
xchg
rcrl
and
cmp
add
aad
addr16
stos
cmp
sbb
and
jo
sub
xchg
test
add
sub
jl
sub
pop
push
incb
mov
cmovge
lret
loopne
pop
and
xchg
lret
adcl
mov
cmpsl
cltd
add
adc
imul
add
pusha
mov
mov
loop
sbb
imull
fs
or
mov
ret
pop
sbb
mov
cs
popa
inc
bound
xchg
icebp
inc
shrb
pusha
push
mov
ss
xchg
mov
sub
bound
mov
in
sub
test
mov
int
xor
nop
fsubl
add
insb
fsub
sub
cmp
cmp
enter
sbb
cmp
ret
into
jl
into
mov
xchg
jge
mov
aad
add
push
fwait
dec
sub
mov
fists
xor
rolb
popa
xchg
je
shr
jecxz
cmpsb
sub
mov
xchg
aaa
sbbl
mov
sub
je
sub
lds
lcall
or
shlb
inc
psadbw
or
int
adc
xchg
mov
call
mov
adc
mov
popa
mov
xor
sub
add
sbb
xchg
arpl
filds
gs
cmpsb
xchg
ficompl
cmp
or
xor
outsb
cmpsl
cmp
sub
pop
call
enter
cmp
or
decl
imul
pop
push
sbb
lcall
in
sub
mov
push
add
aad
lock
xlat
clc
xchg
pop
imul
out
in
out
mov
ds
mov
cmp
pop
xor
out
popf
push
xlat
adc
pop
or
into
pop
push
push
inc
ljmp
mov
ljmp
test
add
xchg
cmpsl
inc
sbb
das
std
push
lock
xchg
cld
fsub
dec
xchg
jge
insl
sti
rcrl
cmp
leave
adc
xor
xor
lock
cmpsb
xor
jne
mov
lea
movsb
mov
or
cmc
popa
inc
or
mov
fcompl
cmp
in
orb
orl
xchg
js
rorb
dec
repnz
xor
cli
ret
inc
xor
xchg
push
add
sbb
push
xchg
cmpsl
orb
es
fnstsw
outsb
push
jle
add
add
jge
mov
xchg
add
mov
push
ja
cmp
xchg
pop
pop
mov
sti
adc
push
sbb
jbe
mov
sub
mov
adc
jle
jp
mov
ret
shll
gs
or
push
inc
mov
push
fmuls
sbb
push
sub
pop
jnp
cmpl
aas
sub
mov
dec
dec
pusha
jno
in
xor
cs
les
cmpsl
inc
outsb
or
insb
shrb
xchg
mov
sbb
sbb
lcall
fsubrp
or
mov
jecxz
out
sbb
mov
sbb
jmp
pop
in
push
into
popa
sbb
push
dec
inc
jl
and
out
rolb
rclb
fsub
xlat
jo
addb
pushf
mov
movsb
js
mov
mov
and
pop
cltd
cs
sub
aas
lock
jle
adc
je
and
loop
jl
pop
jle
and
pop
mov
aaa
mov
dec
aad
sbb
andb
mov
inc
inc
test
xlat
add
in
lods
ja
or
loope
jl
jo
pop
loope
inc
imulb
es
or
mov
cld
pop
mov
loop
rolb
cmp
stos
shrl
inc
pop
lock
add
inc
adc
adc
pop
mov
mov
pop
mov
lods
call
loop
push
push
xlat
jmp
out
jmp
push
stc
das
nop
add
mov
ss
decb
xchg
sub
je
xor
lea
pop
sbb
jo
push
sbbl
daa
notl
xor
cmp
lods
xchg
add
mov
roll
jl
add
xchg
xchg
push
std
or
xchg
mov
ret
pop
idivb
cmp
push
std
cmpsb
push
sti
or
mov
sbb
or
push
mov
mov
adc
cmp
add
sbb
outsb
and
insb
mov
hlt
and
push
hlt
call
cmp
push
xchg
sub
ret
jnp
cmp
dec
in
add
mov
dec
inc
lock
les
das
movsb
pop
es
faddp
dec
inc
inc
mov
jle
and
aad
dec
inc
fdivl
mov
xor
xor
push
adc
xor
sahf
push
xchg
and
push
cld
jmp
cmpb
pop
insb
jbe
cld
xchg
lds
xchg
jae
mov
mov
hlt
mov
and
xor
mov
sub
loope
push
pop
sbb
and
sarl
shll
outsb
lds
loope
in
sub
jo
xchg
sub
movb
push
pmaxub
mov
dec
cmp
push
jp
mov
adc
jmp
cmpsb
sbb
imul
pop
adc
ret
fwait
clc
inc
inc
std
dec
sub
imul
mov
dec
ja
cmc
pop
jbe
dec
in
mov
cmp
sbb
pop
scas
inc
push
insb
call
xchg
lahf
dec
clc
adcl
lods
push
out
mov
push
in
inc
lds
test
mov
jp
call
add
aad
fdiv
adc
pop
mov
test
std
aad
das
pop
mov
mov
ret
fwait
shrl
push
enter
ss
pop
mov
fsubrl
xchg
lock
dec
cmp
call
lahf
jle
fdivrl
pop
jl
cli
push
sbb
pushf
sbb
or
adc
loop
lock
jle
stos
adc
jecxz
les
inc
stos
mov
ret
mov
arpl
ja
filds
cmp
lcall
pop
inc
test
or
ret
lret
decb
mov
clc
mov
ret
sbb
nop
jbe
push
shrb
stc
sbb
or
push
aas
cwtl
js
mov
mov
push
inc
push
shl
in
push
in
sbb
lret
add
ficompl
cmp
das
push
fadd
inc
dec
cwtl
lods
mov
xchg
movsb
adc
insl
pop
pop
stc
andb
dec
pop
xor
sbb
sbbb
pop
stc
dec
mov
sbb
fs
cs
xchg
sbb
data16
insl
pop
outsb
mov
or
inc
or
pop
sub
mov
add
ljmp
mov
lea
loope
push
cltd
adc
clc
inc
or
ds
mov
xor
and
test
scas
mov
fdivl
mov
jge
aaa
pop
int
jae
lret
in
add
insb
lret
test
int
daa
push
sub
repz
xchg
adc
xor
pop
lods
cs
popf
outsl
and
dec
add
pop
inc
movb
lea
add
and
imul
loop
mov
or
inc
inc
cld
sbb
add
iret
push
xchg
or
sbb
fadd
dec
jg
xor
scas
pop
mov
cmp
mov
fwait
jo
aaa
insl
fsubrl
xchg
jmp
push
push
sub
push
lods
gs
mov
jp
add
into
sbb
sbb
lods
inc
dec
add
fcomps
mov
mov
sbb
xor
lods
mov
jb
inc
stos
icebp
or
in
mov
cmc
mov
mov
jb
popl
or
dec
aam
inc
and
outsl
inc
bound
jnp
push
cmp
sbb
ljmpw
mov
mov
jns
inc
shll
sbb
iret
add
cmp
jb
jne
movb
mov
test
push
xchg
add
js
adc
jp
mov
icebp
pop
and
lcall
lods
popl
xchg
scas
rorl
pusha
ljmp
rol
cmc
daa
lahf
push
loopne
les
clc
mov
xchg
add
sub
enter
mov
jecxz
rclb
in
xchg
nop
mov
ret
mov
pop
fimuls
jmp
mov
add
xchg
xchg
hlt
jmp
popa
daa
clc
xchg
rcrb
xor
mov
pop
dec
push
sahf
orl
cmp
push
cmp
or
cmpsl
sti
mov
fstpt
call
mov
push
push
into
pop
push
mov
frstor
adc
cli
fildll
hlt
dec
or
fldcw
sbbl
sbb
jmp
mov
fnsave
inc
fmull
cmp
add
push
xor
mov
in
je
mov
dec
fsubrl
std
and
sub
and
out
pushf
sub
cmc
out
loop
jo
mov
dec
jge
xchg
pop
pextrw
mov
xor
jge
push
stos
lds
cmp
sbb
sahf
push
hlt
xlat
ljmp
mov
inc
xor
das
sbb
cmc
rolb
sbb
jne
jge
les
rcl
sbbb
outsb
rolb
lods
cwtl
fdivrs
ljmp
push
add
or
sub
xchg
jg
sbb
dec
jle
add
inc
js
shlb
movsb
jbe
sbb
jo
adc
dec
ret
ss
rcrl
es
std
jle
inc
pop
shufps
mov
jne
inc
bound
mov
dec
cmpsl
push
into
jge
pop
outsl
sarl
scas
out
sbb
sbb
xchg
or
mov
ja
adc
add
mov
cmp
push
mov
fildll
sbb
fiaddl
mov
inc
mov
mov
mov
push
dec
inc
mov
adc
adc
loopne
imul
mov
cmp
mov
xor
inc
andb
cmp
mov
lods
adc
or
ja
andnps
dec
cmp
xorl
fdivrl
pop
lret
aas
insl
pop
push
add
lock
xor
push
cltd
push
mov
clc
inc
inc
imul
scas
cmpsb
or
dec
jo
mov
jge
loopne
fildll
or
loopne
sbb
je
mov
adc
das
xor
push
or
mov
clc
ret
stc
push
lods
mov
ret
cld
test
dec
loopne
push
xor
inc
cmp
nop
pop
push
mov
ret
stos
subb
xor
pop
lcall
stos
mov
mov
xlat
jecxz
mov
push
call
cli
xchg
or
jl
push
pop
out
lods
rorl
lods
inc
scas
xor
cmpl
push
loopne
in
leave
sub
or
cmp
rorb
jo
mov
push
clc
add
push
mov
mov
nop
mov
and
and
lea
cmp
jg
int
aaa
dec
fwait
inc
pop
cld
loope
mov
es
addl
nop
stos
hlt
mov
mov
mov
scas
or
pushf
add
sub
scas
sbbl
mov
and
sbbl
repz
sti
fiaddl
cmp
lcall
fsubrl
xor
cld
ds
push
push
pop
dec
fstp
sbb
das
sbb
rcrl
add
mulb
sbb
cli
enter
clc
sbb
mov
lock
fwait
add
test
mov
xchg
dec
xchg
sbb
jae
ficompl
popa
xor
push
push
mov
add
or
loopne
aad
cmpsl
sahf
push
push
test
xor
and
mov
aaa
sbb
shlb
inc
xlat
rorl
push
js
adc
xorb
gs
xor
rcl
add
push
scas
outsb
mov
sub
push
jo
add
aad
mov
je
movsl
clc
xchg
jle
stos
outsb
cmp
ljmp
js
pop
xor
add
mov
adc
inc
mov
xchg
lock
and
pusha
rcll
into
or
inc
dec
sub
pushf
mov
iret
rolb
mov
adc
js
cmc
pop
ss
js
sbb
inc
pop
cld
shll
bound
mov
xchg
push
sbb
aam
ret
cli
in
enter
pop
mov
add
ljmp
iret
rorl
leave
xchg
xchg
inc
add
inc
inc
shrl
sbb
adc
adc
jle
ja
pop
lock
enter
and
fdiv
sbb
jmp
or
xorb
xor
lock
push
inc
fs
jbe
inc
sbbl
movsl
adc
pop
pop
ror
push
xchg
and
sbb
pop
pop
aam
mov
lods
pushf
push
pop
add
test
inc
out
sub
sar
xor
jne
xor
fsubl
clc
ret
jnp
sbb
shrb
adc
xor
es
dec
mov
stos
add
idivl
pushf
lock
outsl
test
mov
sub
jne
js
mov
popf
call
sbb
adc
cmp
mov
test
lea
push
mov
mov
pushf
xchg
dec
and
push
mov
shl
inc
pop
push
fisttpll
push
xorl
add
mov
sti
mov
and
cli
adc
and
sub
out
pop
or
shrb
leave
xchg
cli
hlt
adc
fildll
add
fcomp
cmp
pop
mov
pop
int3
dec
mov
push
ret
push
add
lret
les
out
or
fsubrl
sbb
inc
inc
push
subl
fdivs
jp
jns
xchg
jb
sub
in
hlt
sbb
in
aad
dec
or
jb
fs
sbb
xorl
shll
je
int3
out
out
mov
dec
jmp
xor
rcrl
xor
fcoms
pop
cmp
testb
push
fmull
call
mov
or
xor
jle
clc
pop
mov
add
and
push
sbb
mov
xor
inc
mov
pop
jecxz
sub
jp
inc
xlat
loop
pop
ret
lea
out
push
jle
fidivrs
dec
xchg
cmc
mov
rcpps
pusha
xlat
xchg
test
hlt
cmp
in
mov
in
pop
push
mov
jo
stos
push
add
mov
inc
call
sub
mov
jmp
sub
push
sub
xchg
jmp
daa
rcr
aad
pushf
sbb
or
loop
jno
xor
out
nop
xchg
adc
pop
ficomps
sbb
pop
adc
fisubrs
in
test
xchg
leave
pop
sub
mov
or
enter
in
lret
sbb
sbb
cmpsb
repz
das
dec
mov
xchg
and
add
arpl
sub
cwtl
pop
pop
cmc
dec
push
add
pop
outsb
jl
add
dec
aam
jl
test
adc
pop
pop
jb
jp
jo
xchg
mov
mov
lods
sahf
adc
pop
inc
xchg
int3
push
adc
sbb
mov
inc
add
jne
lock
cmpsl
movlps
fs
incb
cs
gs
sahf
fcom
rol
inc
ja
out
pop
mov
ljmp
add
imul
enter
out
gs
fwait
stos
insl
test
push
xor
adc
adcb
mov
pop
movsl
mov
adc
jb
cmp
outsl
jbe
adc
adc
in
pop
push
sbb
loopne
mov
jno
popl
cld
roll
cmp
in
push
aaa
sbb
inc
jecxz
jmp
mov
or
pop
or
hlt
or
sbb
outsl
cmp
mov
xchg
int
fwait
sub
sub
jle
pop
mov
jl
push
int
rclb
ss
cmp
push
jo
add
push
cmpsb
add
imul
lock
jmp
pop
cmc
add
xor
lret
hlt
push
daa
icebp
jo
das
adc
scas
xor
push
into
xor
inc
push
mov
movsl
lahf
pushl
mov
pop
lea
loopne
repz
xor
loopne
pop
test
sbb
dec
inc
lods
clc
and
das
jle
cmp
xchg
js
pop
sbb
loopne
mov
repz
dec
cmpsl
dec
jl
adc
add
xor
mov
adc
add
mov
pop
xor
cli
rorb
add
jb
aaa
call
pop
je
in
fdivrl
xorl
ret
dec
xor
inc
cmp
sub
sub
mov
addb
lods
cmp
add
mov
pop
cli
cmp
jg
sbb
mov
in
shlb
mov
cmpl
cmp
add
push
sbb
repz
fiadds
loop
in
cmp
fnstsw
gs
xor
cmp
mov
leave
push
aaa
ret
in
dec
jl
aam
bnd
sahf
push
cmp
shll
dec
mov
sbb
sbb
mov
loopne
xor
pop
and
or
dec
jno
shrb
bnd
je
arpl
jle
or
out
ret
jno
mov
aas
repz
bound
sahf
push
ss
movb
sub
jle
mov
imul
rolb
inc
in
xor
int
sub
xlat
mov
xor
jmp
xchg
add
fcoml
jle
xor
push
jmp
sti
inc
cmp
insb
dec
hlt
xor
lods
cmpb
and
scas
and
inc
ret
popa
xor
ljmp
or
dec
and
enter
jo
test
push
std
mov
push
lcall
xor
push
add
hlt
xlat
mov
cmp
sub
mov
test
sahf
jo
stos
out
loopne
mov
outsb
ret
xchg
ret
mov
add
aam
ret
jne
call
or
xchg
lods
je
cmp
negl
jns
or
scas
out
andl
cmpsl
cwtl
insb
cmc
imul
adc
sub
inc
outsl
js
xchg
inc
icebp
in
adc
sbb
jmp
cwtl
shrb
and
lock
notb
mov
or
push
or
loopne
clc
pop
xor
xor
jecxz
add
xchg
sahf
test
mov
pop
lret
js
lahf
out
sub
mov
lods
dec
orl
inc
xchg
sub
dec
or
push
out
addl
mov
in
sbbl
insb
in
clc
jbe
es
sahf
push
stc
pop
jns
fnstenv
inc
das
ss
lcall
out
dec
or
pop
dec
fwait
pop
mov
dec
cld
push
jno
dec
ret
mov
inc
xor
xor
insb
arpl
rorl
dec
adc
pop
mov
xchg
test
ljmp
iret
ds
aad
loope
orl
mov
sub
push
cmp
sbb
inc
rclb
aas
cmpl
cmp
and
daa
addb
and
add
clc
inc
add
clc
hlt
add
dec
nop
mov
aaa
fistl
cs
lds
ljmp
xchg
cs
or
pop
cmp
pop
push
pop
std
cs
icebp
inc
inc
sbb
js
loopne
gs
mov
sahf
mov
daa
mov
pop
pop
inc
shrb
mov
cld
sbb
pop
add
outsb
add
je
xchg
sbb
mov
in
push
push
push
subl
ror
mov
std
outsb
mov
call
insl
mov
cld
push
adc
and
int
lods
xor
repnz
leave
fidivl
mov
cmp
insl
dec
out
imul
jbe
add
aad
andl
scas
dec
adc
test
and
pop
addr16
test
sbb
cmp
hlt
xor
test
sahf
sub
mov
loopne
mov
or
push
pop
int3
lods
add
sbb
sbb
pop
jnp
aaa
aaa
jae
sub
add
jl
and
mov
cmc
mov
sub
dec
pop
fiadds
bound
mov
data16
adc
lods
xchg
cli
ljmp
cmp
pop
add
add
inc
pop
mov
clc
dec
jmp
fsubl
das
and
call
mov
cltd
call
lahf
add
insl
dec
xchg
test
adc
pop
nop
rcrb
sub
data16
hlt
pop
jle
jmp
adc
outsb
test
sti
dec
iret
inc
jno
fnstcw
cmp
xchg
shlb
push
add
or
fsubrl
push
fists
cmp
lret
aas
sbbb
xor
test
cmc
dec
outsb
mov
and
lock
pushl
mov
int3
push
or
addb
inc
daa
popa
adc
scas
pop
adc
dec
sbb
sub
pop
lods
adc
cs
inc
rcrb
cmp
mov
xchg
aam
jle
add
dec
push
pop
cmp
cltd
adc
mov
pop
mov
call
and
subl
ret
repz
decl
pop
push
adcl
add
fstpl
sbb
push
loopne
mov
mov
fucomp
fs
lea
sbb
rcll
mov
mov
cmp
or
lret
cmpps
sbb
fistpll
cli
xchg
loop
adc
dec
data16
xchg
repnz
xor
daa
imulb
mov
pop
clc
mov
lcall
sarl
ficoms
mov
mov
hlt
inc
pop
xor
scas
or
jo
ja
scas
les
cmp
int3
mov
lods
je
nop
or
pop
mov
or
xchg
push
lds
scas
mov
insl
shll
pop
call
imul
stos
push
outsb
in
das
aam
insl
loopne
jne
inc
scas
into
push
scas
adcb
loop
cmc
mov
scas
popa
inc
pop
mov
add
push
jae
add
insb
pop
mov
add
pop
clc
mull
push
push
push
js
decl
adc
push
cwtl
pushf
cmp
das
pop
loopne
or
or
sub
call
xor
jl
mov
or
nop
add
inc
cmp
cmp
jo
cmpsb
mov
aad
mov
cmp
lock
mov
scas
xchg
ret
shl
in
jmp
adc
cmpsl
loop
mov
adc
sbb
inc
add
inc
pop
add
add
icebp
or
stos
push
daa
sub
sbb
push
adc
loopw
loopne
cmpxchg
les
or
mov
hlt
mov
mov
mov
insb
je
cmp
or
adc
test
enter
test
push
add
or
jg
outsl
add
ss
jp
mov
mov
shlb
stos
decb
cld
movsl
and
xor
mov
sub
cmpsl
shll
sbb
jl,pn
jbe
gs
jns
push
mov
sbb
xchg
cmc
rcrb
cmpsb
mov
addb
mov
mov
rcrb
xchg
mov
dec
mov
adc
jo
ret
sbb
push
pop
std
push
in
das
xor
or
rorl
mov
cmp
inc
mov
jp
cmc
xchg
mov
push
add
xor
or
int
mov
or
roll
add
mov
jbe
cs
hlt
shll
movsb
setns
inc
ljmp
add
cmp
cmp
add
or
pop
test
adc
and
and
mov
and
out
setg
jno
aaa
test
or
xlat
out
iret
movl
and
out
test
out
add
sbb
pop
jo
xchg
stos
dec
mov
jg
push
dec
xchg
add
mov
jge
cmpsb
pop
cmp
xchg
shlb
enter
pop
lea
inc
xor
loopne
mov
leave
pop
push
lcall
xchg
jmp
sbb
ret
repnz
and
pop
cmc
orb
adc
dec
addr16
filds
sbb
xchg
sbb
repnz
jle
xor
xor
sub
dec
cmc
cmpsb
push
pop
scas
out
pop
jo
ss
iret
push
aas
call
test
jbe
cmp
fildl
inc
and
push
dec
lods
data16
loop
mov
mov
std
jo
rcrl
outsb
mov
rorb
inc
xchg
aaa
adc
stos
insb
scas
xor
mov
fsubrp
adc
inc
aam
cmc
cwtl
or
jp
xchg
arpl
shld
push
mov
cmpb
idivb
loopne
movsb
mov
mov
cs
daa
scas
je
pushf
jbe
inc
les
xor
dec
sub
aam
inc
sub
jecxz
sbb
xchg
mov
roll
jge
cmp
mov
push
aaa
jne
cmpsl
repnz
mov
fistpll
aas
mov
test
and
xor
sbb
sub
negb
xor
xor
rcr
or
push
ja
ja
andb
push
pusha
mov
lret
jge
sti
cwtl
fs
fucom
mov
filds
pushf
std
movsb
pop
ss
sbb
add
fsubl
test
hlt
xchg
ret
push
sub
mull
or
ret
sbb
mov
mov
int
mov
push
pop
xor
mov
mov
mov
xor
stos
xor
shl
jl
push
mov
push
add
xchg
dec
dec
imul
xchg
lods
cli
cmp
mov
cs
mov
push
push
or
iret
out
stos
xor
repz
std
sar
push
imul
ja
addb
bound
scas
nop
ficoml
call
or
popa
sub
sahf
add
insl
sub
sbb
fsub
inc
mov
add
test
imul
movsb
xchg
dec
mov
pop
mov
cwtl
sub
inc
cmp
rorb
fwait
inc
add
je
xchg
mov
dec
push
push
add
mov
icebp
sub
and
inc
gs
sahf
or
outsb
cmp
jle
or
lahf
ret
push
sub
jecxz
ds
scas
shrb
xor
sbbl
xor
loop
push
inc
pushf
inc
xchg
push
cmpsb
rclb
int
or
lret
js
xor
push
fnstcw
test
adc
add
add
pop
test
dec
push
and
sahf
xlat
rol
and
cwtl
add
adc
andl
pusha
je
fcoml
add
dec
imul
xor
mov
jbe
and
ret
iret
push
pop
mov
and
mov
test
mov
adc
push
jo
mov
outsb
sbb
int3
xor
jl
movsl
or
mov
js,pt
jae
cmpsl
adc
cs
daa
mov
test
inc
pop
sbb
sub
or
mov
mov
pusha
cltd
mov
data16
incb
popa
fsubrp
xchg
pop
jnp
js
shlb
adc
add
jle
inc
repz
cltd
cld
lock
shlb
inc
sbb
cmp
lock
into
daa
inc
lcall
jbe
jmp
cwtl
push
nop
sbb
mov
daa
add
or
out
pop
xchg
or
out
and
adc
std
call
add
fldl
xchg
fldenv
outsl
mov
mov
repz
xor
pusha
fcmovnu
ljmp
imul
loopne
stos
mov
jge
scas
shl
inc
test
xchg
sbb
jne
stos
xlat
mov
jge
push
pop
jo
mov
subl
in
pushl
mov
mov
adc
aas
hlt
stos
cmpsb
add
aam
loope
arpl
push
test
xor
xorb
inc
cmp
lock
cmc
popa
sti
fistpll
mov
or
lds
in
clc
ds
add
sbbl
push
mov
and
jl
jns
fdivs
shlb
repnz
fst
call
push
or
inc
and
xchg
adcb
test
xorl
jg,pt
stos
jb
aaa
dec
movsb
pop
push
push
cmp
popl
mov
fwait
push
xor
outsb
arpl
cmp
test
test
inc
imul
pusha
ret
dec
je
lahf
sub
call
xchg
int
push
push
hlt
sbb
push
and
ljmp
pop
pop
into
cmp
mov
out
sbb
push
mov
cmp
lea
insl
insl
nop
sub
jns
xchg
fisttpll
mov
shlb
push
lret
mov
mov
and
stos
inc
jecxz
loope
cltd
pop
inc
out
sbb
cld
push
in
cmp
scas
shll
mov
in
lods
mov
out
mov
fcmovb
or
sbb
jno
dec
inc
dec
pop
sahf
fwait
imul
or
sbb
repnz
fstl
nopl
lahf
jb
adc
mov
mov
movl
fistl
mov
jl
out
flds
stc
fidivrl
sub
jge
aas
mov
xchg
test
mov
adc
sti
je
cmpsl
dec
add
and
mov
push
mov
dec
and
adc
loop
xchg
scas
push
rcrl
jle
push
movsl
jno
push
es
mov
push
repnz
jo
add
inc
pop
dec
sahf
cwtl
adc
cs
jno
and
cmp
aaa
aas
cli
pop
xor
das
mov
out
adc
cld
data16
icebp
sub
in
xor
gs
jb
xchg
push
sub
bound
das
mov
dec
adc
mov
mov
int3
out
mov
dec
add
test
repnz
push
add
lds
sub
mov
inc
push
xor
inc
xchg
stos
jne
pop
cmp
stos
sub
loop
mov
mov
push
sub
sub
jb
mov
jns
mov
add
movsl
jge
jae
cmp
and
ret
lods
sahf
push
sub
mov
and
fwait
dec
sbb
enter
xor
aad
pusha
sub
jp
jecxz
incl
mov
fdivrl
adc
add
pop
scas
fwait
pop
test
jae
push
xor
iret
fcoms
dec
scas
adc
loope
cmp
loope
adc
push
aas
lcall
arpl
mov
mov
nop
push
insl
inc
sub
xor
xchg
push
stos
aad
decb
jbe
or
mov
jecxz
sub
jne
push
lods
or
cmpb
xor
in
mov
fidivrs
inc
sub
xchg
mov
sub
insb
mov
pusha
cmp
dec
clc
pushf
aad
je
sti
cmc
sbb
cmc
jle
or
fisubs
addb
adc
ss
hlt
fdivrl
adc
add
add
mov
sbb
mov
add
push
ret
sbb
ljmp
inc
jne
or
leave
insb
sub
jmp
push
dec
iret
cld
cmp
test
mov
fwait
lahf
and
or
push
sbb
or
or
cmp
js
add
mov
gs
cmc
pop
mov
lods
das
or
jno
add
jae
sub
stos
dec
xor
fcomps
pop
and
cmovno
lods
sti
leave
inc
je
inc
xor
scas
out
arpl
aam
mov
fcmovnu
adc
lods
insb
xor
mov
mov
jae
xchg
push
ds
ficomps
ss
mov
xchg
or
sub
clc
add
addl
mov
test
cmpsb
outsl
cli
arpl
loop
test
pop
loopne
adc
xchg
adc
mov
leave
cmp
xor
and
add
fsubs
enter
pusha
push
cwtl
mov
cmp
mov
cmp
pop
pop
push
mov
push
jle
loop
sbb
js
add
xor
jmp
andb
imul
pusha
mov
daa
or
push
int3
imul
bound
loop
imul
push
lds
lret
add
or
or
cs
js
inc
movsl
stc
fldenv
test
mov
mov
sbb
jp
pop
unpckhps
mov
cmp
imul
pop
add
jae
jno
test
ss
fstpt
cmpb
inc
mov
mov
nop
movsb
mov
push
or
sbb
dec
push
call
sbb
add
sbb
dec
ret
inc
hlt
jecxz
cmp
gs
add
cld
je
mov
push
add
pop
lock
cwtl
addps
push
push
add
mov
or
fildl
push
add
xor
xchg
inc
ss
sub
add
mov
cs
xor
push
lock
dec
sarb
cmpsb
add
dec
cltd
stos
add
test
cmp
cli
movhps
std
clc
jmp
fisttps
pshufw
jp
jbe
bound
xor
mov
and
pop
inc
aam
lret
clc
mov
pop
cmp
mul
jg
or
repnz
ds
pusha
fcom
test
inc
lea
add
mov
and
notb
arpl
pop
cwtl
int3
adc
pop
movsb
mov
or
inc
xor
cmpsb
rcrl
and
nop
aas
cmp
xor
js
push
add
rorb
orl
adc
das
sbb
dec
mov
movsb
iret
in
add
push
pusha
adc
sub
fs
jno
pop
adc
adc
in
out
inc
jge
sub
je
loopne
dec
adc
xlat
pop
lret
int3
mov
mov
jp
imul
mov
fstpt
in
adc
pop
fisubrs
lcall
loop
rcl
add
aas
enter
inc
nop
mov
sahf
int
fs
jns
inc
loop
push
imul
mov
xor
mul
data16
inc
mov
test
push
adc
icebp
cmp
dec
test
jecxz
xchg
daa
jl
cmpsl
hlt
fdiv
mov
pop
jne
xor
aas
sbb
dec
movsb
jo
cmp
push
adc
lret
movsb
cmp
pushf
aam
pop
jno
insb
addl
repnz
xchg
or
sub
add
lahf
inc
pushf
mov
pop
outsb
add
std
pop
addb
pop
std
push
js
pusha
cld
popa
or
and
sbb
cli
loopne
test
scas
or
out
out
xor
jl
cld
subb
push
add
xor
and
fldl
subb
adc
inc
shlb
jmp
scas
jp
mov
popa
imull
adc
sar
cmp
xchg
jle
ret
jne
add
jo
sub
push
mov
mov
cld
rorl
inc
lds
and
out
imul
arpl
sbbb
inc
sbbb
sub
test
push
push
mov
inc
inc
mov
notb
repnz
or
or
sbb
xor
sub
les
push
xchg
lret
out
sub
test
pop
inc
cmp
out
mov
mov
and
lock
xor
ret
and
mov
pop
jp
outsb
pop
popf
sub
sbb
loopne
inc
out
push
rorb
lds
aas
cmp
adc
cwtl
mov
in
out
dec
xor
lret
jp
cwtl
aaa
push
enter
jle
popa
xlat
inc
stos
inc
xchg
fmuls
aaa
mov
imul
outsb
loope
jne
call
adc
out
jo
add
cwtl
out
and
lock
fwait
jl
mov
sub
push
popa
mov
cli
xchg
push
or
outsb
test
loop
mov
mov
imul
push
adc
sahf
or
loope
mov
xor
xorl
dec
xchg
fdiv
push
sbb
ret
das
ss
mov
aam
inc
dec
outsl
sbb
jb
jg
in
notb
lds
add
adc
test
or
gs
in
out
jl
lods
test
push
lahf
pop
lret
and
push
xor
roll
subl
test
rcll
fstpl
lcall
push
test
fldenv
sub
sbb
out
jo
jecxz
gs
enter
push
sbb
dec
pop
dec
mov
pushf
clc
mov
pop
loope
pop
jb
push
push
loopne
xchg
sbb
jb
ds
xchg
inc
push
cli
into
xor
movq
js
cmp
jl
xchg
shrb
aam
addb
andb
mov
dec
pusha
and
jno
push
mov
pusha
mov
inc
scas
outsl
mov
fsubp
mov
mov
ret
jg
push
and
arpl
rol
fstpt
cmp
xchg
adc
ljmp
or
fistpll
pop
xorb
adc
ljmp
push
and
xchg
push
push
xorl
hlt
cmp
push
loop
xor
cmp
shl
push
dec
out
cmpsb
test
fcoml
sahf
mov
iret
or
stos
xchg
xchg
popa
shrl
jg
or
mov
mov
push
dec
mov
aad
push
cld
pop
dec
or
mov
mov
pop
adc
inc
fs
add
fwait
jne
lcall
aad
inc
cltd
in
fildll
cmp
loop
icebp
fisubrs
adc
lock
movsl
insb
add
add
fmuls
sbb
inc
fildl
jbe
push
les
orb
ljmp
and
xchg
scas
and
push
daa
aas
inc
xor
in
inc
es
std
push
dec
sbb
xor
fisubs
popa
int3
and
es
lcall
sub
std
mov
adc
mov
sub
ds
mov
repz
imul
inc
insb
popf
cmpsb
cwtl
sbb
stc
or
stos
nop
sub
subb
pop
sub
out
lahf
fistpl
push
stos
fs
xchg
add
add
clc
stc
ds
pop
js
jmp
mov
xor
inc
push
sub
and
rcr
and
push
jne
in
iret
pop
hlt
lods
ljmp
std
js
bound
sub
inc
scas
ds
adc
jo
int3
movsl
lahf
xchg
decb
xor
rcr
pop
clc
cmp
xor
push
repz
inc
xchg
mov
shrb
jo
nop
mov
arpl
repz
push
insl
adc
adc
fnstsw
mov
fldl
insb
fcoms
aaa
dec
dec
jbe
test
js
shlb
test
and
xchg
test
nop
iret
and
jae
js
ret
outsl
js
sub
add
mov
xchg
loope
daa
test
mov
loop
movsl
mov
and
xor
jg
xor
cmp
rcr
cld
jp
popf
xor
sti
test
sub
jp
lock
sbb
aas
adc
mov
mov
jmp
pop
pop
mov
addr16
leave
test
push
jecxz
lock
clc
mov
imulb
pop
mov
mov
nop
or
mov
js
cld
xchg
adc
movsl
mov
mulb
orb
and
enter
mov
int3
mov
sbb
jge
fs
aad
or
add
andl
outsl
dec
enter
icebp
mov
das
test
add
lock
pusha
jbe
popa
mov
xchg
ret
sub
sub
cmpsb
aaa
or
add
xor
and
sbb
out
jo
ljmp
call
dec
test
mov
jge
ret
mov
movsl
pop
sub
lock
cmp
inc
sub
sbb
pop
push
jb
cmc
push
and
cmc
sub
xchg
jle
sub
mov
dec
int
dec
xchg
cmpsl
pop
jbe
mov
sbb
inc
mov
pop
xorb
jecxz
mov
jg
jecxz
or
and
dec
cmp
fisttpll
sahf
xor
push
inc
icebp
add
insb
or
inc
mov
xchg
cli
movsb
xorl
scas
mov
test
xchg
inc
mov
cld
dec
jl
adc
divl
mov
addr16
ret
mov
push
mov
sub
jae
push
shrb
std
insl
test
push
call
in
shl
aam
lret
std
aad
xor
or
cmp
mov
hlt
sbbb
pop
jge
std
add
shll
fildl
repz
stc
sbb
jg
ljmp
sbb
mov
movsl
lods
dec
lahf
pop
or
pusha
jle
sbb
adc
mov
outsb
pusha
fdivrs
cmp
lods
mov
push
orb
popa
adc
or
sbb
ret
mov
mov
leave
hlt
sub
pop
sub
mov
inc
push
mov
shl
mov
and
xchg
jle
in
aaa
sbb
sub
jle
adc
mov
push
stos
pop
xor
lds
xchg
inc
jl
adc
mov
cld
aam
mov
jmp
add
or
cmpsl
add
out
mov
mov
add
sub
xlat
xchg
pop
cmpsb
or
jp
pop
mov
add
cmp
std
adc
les
xchg
fcmovb
leave
enter
pop
gs
dec
leave
jmp
aad
imul
mov
stos
cmp
add
stc
loop
add
jno
cmp
pop
push
dec
ret
data16
mov
jae
lock
loope
daa
insb
add
sahf
and
test
and
mulb
add
add
xor
adc
mov
call
addl
cld
test
add
sub
xchg
or
mov
push
pop
stos
jl
sbb
aaa
sbb
sbb
shl
lds
lea
cmpsb
add
xor
test
test
movzwl
iret
scas
or
dec
cmp
adc
fcmovbe
add
adc
lret
dec
shll
lock
out
adc
mov
cmp
mov
xor
cmp
or
cmpsl
stos
jle
push
and
lcall
mov
cmp
incl
pop
std
andl
inc
sbb
out
outsb
outsb
mov
and
pop
lock
adc
push
xchg
out
cmp
or
arpl
sbb
stos
push
xchg
into
xchg
mov
adc
loope
xchg
lret
pop
sub
push
in
adc
sbb
mov
rolb
lea
insl
inc
sub
inc
lods
add
loope
js
in
push
stos
leave
loop
or
cmp
xchg
popf
test
xchg
dec
inc
sub
aam
in
pop
int3
popa
and
mov
add
push
icebp
jmp
inc
aam
xchg
in
repz
adc
loope
fcoms
out
sub
add
jb
lret
sbb
xchg
sub
jae
lods
pop
xor
xor
sub
inc
mov
movsl
ficoml
push
cmp
fsubl
pop
loopne
and
pop
sub
inc
sbb
xor
addr16
lock
lcall
js
loop,pn
pop
imul
mov
out
outsb
adc
jmp
mov
lahf
sti
adc
in
loopne
sbb
inc
and
pop
aad
test
cli
neg
add
sahf
add
adc
jne
pop
pop
jmp
in
mov
and
fs
pusha
adc
nop
sbb
inc
std
adc
or
mov
cltd
push
mov
in
jp
mov
mulb
jmp
add
jno
push
mov
mov
xor
or
and
mov
xor
and
inc
test
lds
add
jae
out
mov
jno
cmp
fdiv
xor
stos
in
or
xor
jns
xchg
add
sub
or
sbb
int3
xchg
icebp
test
add
cmpsb
scas
in
cld
repz
shr
adc
push
adc
lds
test
pop
or
int
lcall
insb
mov
jno
add
stos
pop
xchg
nop
mov
loope
loop
int
add
inc
xchg
pop
adc
inc
and
jne,pn
icebp
cmp
test
adc
inc
jbe
pop
mov
lods
or
cld
fldt
adc
cmpsl
pushf
cmpl
cmpsb
push
jmp
je
mov
js
push
aam
cmp
cmp
imul
sbb
inc
in
xchg
data16
and
and
xor
pop
loope
loopne
inc
stc
sbb
jle
pushf
dec
mov
aas
inc
aad
insb
cmpb
mov
loope
fistpl
xor
or
push
adc
mov
push
cmp
repz
mov
jmp
jnp
sbb
xacquire
loop
int
cmpb
sbb
mov
and
lahf
std
cmp
mov
stc
sbb
shrl
mov
dec
and
mov
test
outsl
test
or
sbb
add
push
and
call
call
jg
mov
xor
jle
mov
jns
mov
adc
test
hlt
leave
je
aas
and
movsl
mov
jecxz
call
push
inc
loopne
fadd
sbb
add
cmp
inc
ds
sub
imul
sbb
cmp
insl
sub
dec
sub
add
adc
pop
loope
sub
inc
lahf
pop
xchg
push
std
test
out
lcall
je
adc
sbb
sbb
repnz
lods
xor
sbb
xchg
jmp
push
cltd
push
je
push
pop
pop
out
or
push
lods
xchg
pop
lds
adc
push
stc
stc
int
std
jle
add
and
inc
fadds
insl
bound
call
scas
fiadds
mov
les
addr16
enter
les
test
bound
popa
and
ffree
aaa
push
mov
enter
arpl
fsub
fidivrs
cmpl
mov
xchg
and
sub
inc
daa
nop
cwtl
and
jo
xchg
rorb
sbb
lods
jl
fsubl
scas
rclb
jp
add
fcomp
inc
std
sbb
jbe
jo
and
add
jecxz
gs
or
jle
mov
in
and
or
inc
nop
in
mov
or
pushf
jmp
nop
lods
cmp
ficompl
scas
xor
sub
or
xor
nop
cmpsl
xor
sbb
xgetbv
mov
jmp
mov
cmpsl
pop
push
clc
lea
pop
shll
pop
sub
add
pop
pop
push
jnp
cmp
lds
dec
hlt
inc
push
dec
cli
cmp
jb
pusha
and
push
jmp
dec
ljmp
jp
nop
xor
push
or
daa
push
or
popa
into
pop
cs
std
mov
adc
sbb
xor
xchg
pop
sbb
adc
push
imul
rorb
push
push
in
cld
andl
pop
push
imul
and
mov
mov
jecxz
mov
fidivl
scas
sbb
sbb
aaa
mov
mov
inc
push
jge
or
testb
rorl
adc
test
cmp
arpl
filds
cmp
sub
mov
loope
pop
ret
sbb
cmpsl
xchg
ds
jp
jg
rcr
xor
das
shr
cmp
dec
stos
add
jge
xor
flds
fs
dec
fs
inc
shl
dec
clc
fsubr
testl
mov
pop
jbe
pop
or
sub
jge
orl
std
js
dec
shlb
loope
frstor
cmpsb
push
jb
int3
and
push
mov
mov
popf
cmpl
pop
ret
mov
rolb
push
mov
mov
scas
xchg
mov
cs
lods
movsb
nop
outsl
cmp
push
sub
mov
lret
adcb
or
ficoml
lods
adc
jge
sbb
cmpsb
and
popf
es
in
cltd
orb
fdivs
pop
pop
pop
and
add
movsb
pop
in
pop
pop
cld
and
add
add
icebp
mov
or
adcl
jno
inc
sahf
jecxz
adc
rorl
aas
fimuls
je
pop
lds
dec
and
mov
shlb
push
adc
cli
sbb
sub
imul
dec
add
push
cmp
pop
aam
loopne
push
fisubrs
and
les
cs
push
sbbb
gs
and
repz
sbb
inc
dec
mov
adc
pop
mov
adc
icebp
cli
mov
notl
push
mov
xchg
popf
cld
cmp
hlt
push
iret
insb
outsl
movsl
dec
fmull
push
int
add
or
push
mov
push
loope
insb
pop
arpl
arpl
add
add
cmp
sub
sbb
or
add
imul
cvtdq2ps
add
adc
imul
and
fnsave
stos
xlat
fwait
in
mov
enter
mov
fnsave
inc
loopne
sti
lock
lahf
xchg
out
add
fwait
or
jbe
and
jp
mulb
sbb
pusha
movsb
mov
pusha
into
das
pop
test
fldenv
loop
dec
dec
push
dec
mov
cli
mov
icebp
mov
jb
sbb
cmc
seto
or
imul
xchg
mov
lret
insl
imul
add
frstor
ret
mov
sbb
inc
pop
jmp
sbb
sbb
cmp
addl
inc
test
xchg
adc
jg
inc
in
fldl
jmp
stos
repnz
jg
fwait
stos
mov
mul
popf
mov
lds
adc
fmuls
js
sarb
mov
iret
mov
sub
lods
js
adc
lahf
inc
insl
mov
mov
add
lea
lahf
sti
xchg
cmp
call
or
test
mov
ret
imull
pop
pop
and
push
or
into
cmpsl
out
shll
je
push
adc
xchg
add
aas
mov
xchg
outsb
ret
push
add
cld
push
shrl
adcb
test
sbb
inc
xchg
push
sub
pop
stc
faddl
aam
popl
adc
sub
add
imul
outsb
addr16
push
dec
gs
xlat
cmp
mov
mov
mov
loope
mov
jg
into
push
stc
test
inc
or
loopne
cs
xlat
test
enter
jle
test
pop
jle
xchg
cmpsb
loopne
andl
shrb
mov
xor
repnz
fldl
mov
mov
push
in
and
sarb
dec
adc
push
out
mov
fwait
aad
outsl
fstl
lahf
mulb
mov
pop
fucom
adc
cmp
popa
lea
mov
or
loopne
or
or
push
incb
and
adc
push
pushf
inc
add
add
repz
inc
aas
je
faddl
comiss
sbb
in
imul
add
in
or
nop
ja
add
stos
add
cmc
flds
dec
in
aam
test
adc
push
xor
fstps
mov
add
xchg
jne
and
adc
fwait
xchg
mov
xorl
sahf
sbb
add
xor
push
sarb
outsl
fsub
xchg
dec
push
mov
cwtl
mov
filds
bound
int
fimull
out
mov
outsb
rolb
or
xchg
or
and
int
js
sar
pusha
clc
pop
nop
sub
mov
fistl
mov
adc
dec
add
inc
sub
add
loope
out
pop
mov
jb
mov
dec
or
cmp
rep
jno
pop
sub
inc
ljmp
cs
sbb
jne
sbb
loope
dec
js
lret
ja
iret
mov
cld
adc
rclb
mov
inc
mov
mov
push
cmc
lds
fidivl
push
mov
mov
aad
sahf
das
mov
sbb
xorl
ss
nop
loope
mov
or
push
jnp
dec
pusha
in
in
iret
int3
inc
ret
dec
mov
jno
lahf
mov
das
lods
xor
dec
mov
or
bound
imul
mov
or
inc
sarl
loopne
mov
inc
xor
mov
shrb
push
jnp
push
rolb
nop
loope
dec
int
sbb
test
jle
xchg
lea
adcb
adc
mov
xor
mov
aaa
ss
dec
adc
xchg
xor
push
aam
or
inc
dec
inc
test
jmp
cmpsl
pop
or
pop
stc
mov
out
mov
add
pushf
sbb
dec
mov
jnp
ret
ret
loopne
shrb
or
cwtl
sub
or
adcb
cmp
sbb
sbb
pop
test
pop
vpsrlq
out
inc
daa
adc
inc
add
lock
xchg
add
frstor
mov
add
mov
loopne
aaa
adcl
rcll
ret
je
dec
xor
subl
and
or
mov
xchg
icebp
ret
loope
dec
dec
jge
push
mov
xchg
jecxz
in
push
jge
lods
imul
pusha
fmuls
push
pusha
sbbb
jmp
ret
sub
loope
and
or
in
pop
push
inc
pop
xor
jl
inc
sub
mov
push
das
or
xchg
jne
or
xchg
mov
cld
lods
lret
and
call
mov
mov
push
cmc
push
pop
mov
lds
mov
sbb
test
jle
iret
fcmovu
out
ja
xchg
push
lods
mov
mov
loope
dec
inc
vpmovmskb
xchg
leave
shl
mov
int3
add
cmp
pop
cmc
cmpsb
mov
adc
jp
lods
les
adc
xchg
lds
cmp
hlt
pop
nop
push
loopne
imul
jne
pop
out
pusha
lret
push
add
or
movsb
popa
sub
movsl
hlt
mov
inc
jge
jmp
lret
call
and
push
daa
in
ljmp
dec
insl
mov
mov
jmp
mov
loopne
pop
xor
mov
jp
xor
adc
movsl
sti
data16
imul
and
and
je
sbb
dec
lret
ror
test
push
jnp
add
dec
sbbb
lea
dec
ja
pushf
xorb
nop
lret
jnp
data16
imul
xorl
lods
inc
sbb
adc
sub
sub
lret
leave
or
xor
xchg
or
mov
cld
mov
adc
xchg
inc
inc
inc
arpl
mov
xchg
inc
mov
sbb
ss
sbb
add
jl
adc
lea
mov
popa
inc
dec
ja
sbb
add
ds
gs
push
xor
mov
icebp
std
lods
outsb
movsl
xchg
sbb
shl
imul
adc
xchg
pop
xor
out
push
mov
ja
add
and
call
pop
push
movsl
out
jg,pt
mov
jl
adc
xorl
stos
mov
insb
pushf
bound
adc
rcrb
sub
mov
push
jecxz
jnp
mov
push
ss
out
add
clc
jle
jmp
pop
adc
mov
pop
push
push
dec
xor
adc
sbb
daa
rclb
lock
jns
sub
sub
sub
xchg
sbb
sbb
adc
xchg
mov
sub
adc
push
loopne
ret
add
sahf
cmc
mov
xchg
rolb
rorb
lret
cmovge
jb
fwait
jo
int3
fdivs
lock
jb
imul
mov
cmp
mov
scas
push
int3
insl
sub
jno
adc
inc
inc
fldl
nop
insb
jg
adc
mov
gs
inc
add
repz
stc
fnstenv
dec
scas
movsb
jl,pn
cwtl
and
inc
mov
sbb
insl
js
xchg
pop
mov
leave
cmp
jo
outsb
shlb
add
jae
and
adc
jo
cs
stos
loopne
int3
mov
pop
imul
gs
sarb
addr16
sbb
xchg
xchg
or
sbb
ja
stc
test
or
lods
addr16
outsl
jmp
hlt
adc
cmp
mov
or
and
mov
jecxz
sub
jne
push
mov
stos
inc
jl
jae
inc
repz
mov
rorb
inc
pop
fistpll
ret
and
cwtl
sub
std
dec
pusha
pop
sub
sub
xor
std
aad
pusha
fistpl
pop
mov
mov
push
mov
push
lods
popf
xor
mov
xor
mov
sbb
icebp
mov
mov
ret
mov
or
xchg
fmuls
rorl
in
jo
insl
imul
jl
iret
adc
lock
loop
or
jae
shll
mov
mov
addb
pusha
std
cltd
fdivrl
dec
inc
lds
push
adc
gs
into
in
inc
mov
fs
aam
mov
dec
lds
mov
jecxz
scas
ja
mov
lcall
out
in
sbb
add
push
add
aaa
les
cmpsl
cmc
stc
in
jno
in
inc
and
mov
imul
lods
out
stos
cltd
repnz
xor
ret
add
pop
push
push
push
dec
pop
add
push
jb
movsb
fdiv
push
push
ret
stos
stos
mulb
shll
or
outsl
icebp
ljmp
cmc
sub
dec
data16
mov
xor
adc
jne
push
pop
mov
repz
mov
or
mov
loopne
int
xchg
cmpsl
cmp
xor
pusha
icebp
lock
mov
mov
imul
push
loopne
push
testl
ret
inc
sbb
add
in
pop
test
mov
aas
fsubp
cmpl
or
cmc
enter
add
ret
sub
mov
jecxz
pop
rcll
push
out
adc
pushf
xchg
mov
out
fmull
pop
add
ret
outsb
xor
pop
jge
in
test
pop
clc
cmp
fnstsw
cmpsb
pop
jbe
inc
mov
gs
add
into
dec
cmp
fidivrl
outsl
push
sbb
sub
xor
push
push
mov
sub
loopne
imul
sahf
shlb
lds
push
mov
jo
mov
out
pop
push
lock
arpl
fdivs
jmp
adc
popa
inc
pop
or
test
movsl
mov
mov
lods
jbe
roll
cmpsl
out
and
push
mov
sub
imul
sub
sub
and
jge
inc
in
adc
pushl
rcrl
subps
rorl
decl
xchg
inc
daa
shll
popa
or
mov
pushf
clc
pop
jecxz
and
pop
cmp
mov
xchg
and
jo
pop
loop
xchg
jp
pop
cmp
jecxz
clc
shlb
ljmp
mov
sbb
aas
sub
inc
lock
inc
popa
xchg
aam
mov
incl
je
nop
mov
cmp
outsb
mov
mov
mov
cli
mov
aas
scas
or
loopne
subl
dec
clc
fdivrl
cmp
imul
inc
jmp
mov
test
das
sub
inc
sti
sbb
or
sbb
call
and
cmp
and
shrb
popa
subl
mov
pusha
movsb
rcll
cmpb
pop
mov
scas
into
mov
mov
sti
enter
neg
mov
mov
subl
add
cmp
adc
mov
jge
shl
mov
call
inc
push
fmull
add
sbb
xor
mov
mov
sbb
xchg
push
rclb
mov
cmc
hlt
dec
js
enter
or
lahf
cmp
xor
push
std
add
push
das
xchg
mov
test
rolb
pop
test
sub
divl
xor
icebp
dec
decb
adc
test
and
popf
loopne
mov
pusha
stos
imul
loopne
daa
popf
inc
push
daa
push
ds
sar
cmp
fnsave
in
inc
inc
ljmp
out
repnz
xchg
iret
rolb
add
bound
adc
aam
adc
cmp
push
pop
jp
in
std
mov
mov
iret
stos
pop
jo
xor
aam
jg
xchg
je
je
nop
out
arpl
mov
mov
adc
ja
or
aas
addr16
dec
inc
jge
add
pusha
psraw
rcr
xor
jbe
pcmpeqb
cmpl
test
into
xor
sbb
in
jno
jg
lea
fstps
mov
movsb
add
test
pminsw
mov
outsb
push
cld
ss
cwtl
mov
mov
inc
mov
imul
mov
out
pop
shl
in
pop
inc
adc
add
mov
cmp
ret
stc
xor
jne
mov
jp
pusha
mov
or
insb
pushf
or
pop
mov
repz
les
ss
mov
aas
call
rcl
adc
ljmp
jne
sbb
fistpl
mov
pop
leave
imul
jno
and
mov
test
aam
loope
insb
sbb
out
jle
loop
and
mov
xchg
andb
add
nop
jne
js
rcll
out
or
lods
shlb
push
adc
push
int3
xchg
mov
pop
and
out
jnp
jb
stos
and
orb
and
in
push
or
sbb
pop
insb
xchg
xor
or
test
dec
mov
add
lods
sarb
clc
jne
adc
mov
leave
fdivp
inc
loope
dec
sar
mov
cli
pop
fsubrp
inc
movsb
adc
enter
lock
outsb
inc
pop
dec
hlt
sub
pop
and
or
hlt
xor
pusha
imul
push
pop
call
fnstenv
lds
enter
hlt
cmp
cmp
movsl
popf
jno
repz
and
ds
stos
pop
ss
mov
inc
mov
add
fcomps
jecxz
cmpsl
call
ret
cmp
pop
jg
adc
jmp
pop
jp
sti
cmc
movsb
inc
repz
xor
fbld
xchg
orl
outsl
xor
mov
stos
iret
das
pop
sub
mov
out
jmp
adc
mov
aaa
add
push
repnz
xor
pop
xlat
cmp
daa
cmc
cmc
orl
fcmove
or
jge
sti
call
pop
dec
push
jp
das
cmc
loop
mov
movsl
xchg
out
loopne
add
mov
movl
push
inc
mov
dec
pop
sbb
jmp
adcb
aaa
fisttps
adc
dec
ret
push
lret
roll
mov
xchg
or
fcmovne
aaa
into
jmp
push
jne
pop
xor
mov
and
addr16
mov
mov
repz
jo
cmp
and
loopne
js
addb
in
neg
leave
lea
push
lcall
clc
fs
mov
sbb
push
inc
cmp
daa
movsb
adc
scas
sbb
or
add
sub
jnp
ret
add
push
sahf
in
pop
inc
sbb
adc
and
xor
mov
shl
dec
bound
mov
adc
shll
daa
jmp
pop
mov
ret
or
adc
clc
mov
cmpsl
aad
out
cltd
rcll
mov
and
sub
adc
cltd
xor
sub
xchg
mov
rcrl
stos
pop
xor
js
adc
ljmp
or
test
xlat
loope
add
mov
shr
sub
sub
jo
icebp
pop
cli
xchg
arpl
inc
xchg
cmc
cmpl
jge
das
fwait
arpl
lods
test
mov
and
jecxz
nop
add
add
inc
dec
push
lret
cmp
ljmp
inc
pop
adc
cmpsb
inc
es
adc
aas
inc
fmull
test
je
fiaddl
in
jmp
push
cwtl
les
and
pop
cmp
dec
adc
mov
push
lods
test
cli
fnop
mov
mov
or
adc
pop
ja
jle
pusha
popf
jne
push
jnp
xor
andb
cmp
mov
fmuls
lea
in
fildl
scas
jecxz
rorb
es
add
rolb
adc
xor
ja
es
clc
adc
sub
xor
mov
push
xchg
mov
rorl
mov
jge
add
shlb
add
inc
retw
cmc
ret
iret
xor
movsb
inc
hlt
in
and
fistps
outsb
and
sti
lods
jecxz
cmp
jae
and
je
inc
dec
in
mov
arpl
add
pop
push
lock
cmpsl
bound
js
jle
jae
mov
shrb
sub
icebp
insb
mov
adc
add
push
inc
lret
xchg
mov
xor
in
je
sarl
fstpl
xorb
cli
aam
adc
adc
aaa
fsubs
jp
mov
nop
aad
popf
pop
push
stos
in
popf
pop
les
jae
in
std
mov
xor
mov
pop
sub
test
ficoml
arpl
add
fcoml
cmpl
xchg
sbb
icebp
outsb
xchg
into
cmp
lret
xor
push
push
add
aaa
xchg
shll
mov
popa
in
and
hlt
adc
mov
cmp
sub
lret
mov
mov
inc
add
add
xchg
rolb
mov
mov
adc
sbb
shlb
loopne
pop
icebp
mov
push
jnp
sub
inc
pop
jecxz
movsl
rorl
shrl
mov
inc
insb
in
int3
adc
sub
lcall
js
mov
adc
mov
stc
js
or
popa
push
pop
icebp
jecxz,pt
add
mov
or
cmpsb
repz
lds
pop
jl
sbb
in
sub
out
popa
inc
scas
stos
inc
sahf
in
nop
out
or
push
rcr
outsl
loop
sub
lahf
inc
and
and
xchg
mov
sbb
movb
shl
stc
sbb
cmp
adc
xchg
cltd
cmp
xor
outsl
adc
mov
dec
or
or
push
dec
ljmp
shrl
mov
in
shrb
fsubrs
push
ds
das
sbb
jp
inc
fwait
sahf
and
push
addr16
push
adc
push
aam
das
rclb
jb
mov
aas
jb
inc
test
rclb
stos
xor
out
and
push
xchg
sbb
and
inc
aas
mov
mov
pushl
cmpl
mov
loope
hlt
outsw
shlb
bound
test
mov
pop
lcall
popa
or
incb
sahf
and
enter
js
jno
scas
adc
xor
cld
icebp
xchg
add
adc
xlat
call
sub
add
cmpb
addr16
loop
xchg
push
addb
mov
hlt
lods
sub
je
cmp
pop
fisttpll
insb
repz
fdivrs
push
dec
push
lods
rclb
cld
xchg
inc
cld
aam
add
sub
mov
xor
les
dec
mov
aaa
pop
xchg
jb
mov
cmp
mov
scas
stos
inc
xor
movsb
in
fldt
jge
hlt
pop
mov
push
cltd
and
xchg
rolb
or
aam
incb
mov
and
je
jge
out
push
pop
sbb
clc
aad
mov
cmp
adc
or
jo
leave
rolb
loope
in
lock
shrl
xchg
or
sti
pusha
pop
add
xchg
sbb
and
sbb
pop
adc
cmovp
rorl
push
ss
and
enter
gs
int3
push
dec
sub
in
std
fdivs
add
cli
sbb
popf
loopne
flds
mov
cmp
sarl
jae
and
test
add
mov
and
outsl
sub
cltd
jbe
inc
in
movsb
lock
add
es
xchg
mov
inc
sub
adc
aas
sbb
stc
out
clc
mov
test
es
jmp
cwtl
push
dec
lds
movsb
push
xchg
enterw
pop
rcrb
push
mov
ds
jle
lods
inc
push
dec
adc
xchg
mov
in
outsl
ffreep
repz
cmpb
xor
sub
lods
stos
jne
shll
cmc
fldl
jnp
sub
mov
sahf
xchg
out
sti
lock
gs
adcb
xor
xchg
pop
rcl
inc
or
fbld
sbb
repnz
cmp
lock
ja
or
mov
arpl
das
int3
dec
cs
push
fidivrl
dec
inc
test
insb
add
adc
sahf
stc
or
add
je
mov
insb
movsb
inc
orl
in
test
loop
ja
push
cmp
in
mov
setb
mov
jne
jno
cmpb
movsl
inc
sbb
inc
jno
test
or
orl
mov
fdivl
push
outsl
hlt
shrb
int
imul
xchg
adc
add
test
pop
dec
jl
sub
bound
sar
test
dec
xchg
add
cmp
fsubs
push
shr
in
stc
lcall
cwtl
sbb
fsubrs
mov
aam
push
or
sbb
push
ss
dec
mov
mov
mov
jnp
and
jo
sahf
sbb
aad
mov
scas
pop
test
mov
pop
aas
cmc
adc
movsl
fildl
cld
cmp
push
lcall
sub
mov
dec
dec
test
test
ss
lods
les
int3
in
or
nop
nop
and
sub
icebp
add
in
jnp
push
inc
cmp
je
roll
sub
rolb
clc
xchg
emms
mov
jg
daa
and
stos
scas
shrd
mov
sub
lock
cs
mov
xlat
cmp
xchg
out
pusha
and
push
test
pop
icebp
test
or
loop
inc
aas
mov
out
fsubl
shlb
pop
xor
fimull
test
testb
adc
sub
hlt
mov
cmp
sahf
jmp
jns
mov
clc
and
aad
addr16
mov
popf
iret
jb
stc
insl
hlt
fiaddl
and
sub
repz
jo
sahf
fldt
hlt
mov
aad
fmul
cmp
push
lret
in
lock
adc
popf
jge
adc
pop
push
je
movsb
jecxz
popa
cmp
mov
repz
adcl
out
jae
movsb
jno
pop
js
ret
add
inc
nop
add
xchg
ds
lret
popaw
mov
mov
out
push
loop
fidivrs
pushf
pop
pop
jo
popf
pop
lds
mov
xor
or
cmp
add
mov
pop
ret
test
push
and
arpl
sbb
push
or
pop
cmc
pop
pop
sub
xchg
lds
jne
jmp
mov
jmp
sbb
adc
test
ror
cltd
test
sub
jecxz,pt
cmp
aad
dec
mov
inc
sbb
dec
je
lcall
mov
mov
out
ds
add
jecxz
nop
push
fxch
ss
or
mov
add
enter
jo
lock
or
pop
test
es
out
adc
or
mov
jle
dec
pop
xchg
out
adc
ja
adc
xor
movb
cmpsb
ret
pop
in
dec
jne
xor
cmp
sbb
imul
flds
cmc
jo
in
inc
pop
mov
xchg
jns
int
sarb
or
push
cmp
inc
cmp
icebp
cmpsb
push
xchg
xlat
shlb
or
rcl
sbb
in
or
pop
outsb
jno
out
jg
lret
jecxz
lret
mov
out
outsb
ret
or
into
sub
fidivrs
add
mov
mov
jo
pop
and
lds
arpl
push
and
jl
xlat
cmp
cmp
cmpsb
push
mov
loop
mov
insb
dec
addb
jge
ljmp
push
sbb
es
pop
ds
cmp
pop
aam
jb
dec
or
mov
ret
push
mov
mov
je
repz
ljmp
push
xchg
mov
cmp
mov
jecxz
push
ret
enter
push
mov
fadds
dec
mov
adc
cmp
je
loop
mov
push
dec
lahf
mul
cmp
pop
jl
lock
add
sub
push
cmp
fwait
adc
sahf
or
sub
mov
pop
out
fiaddl
stos
mov
outsl
pop
mov
mov
add
xchg
dec
lds
addr16
jns
shrb
cmp
adc
popf
push
or
jl
int
push
repz
inc
repnz
test
imul
popa
mov
aas
hlt
push
dec
aam
andl
mov
sbb
pop
fldl
movsl
or
sub
jne
adc
pop
inc
cmp
notl
bnd
sbb
cmp
movsl
pop
mov
das
add
imul
cmp
mov
cltd
and
insb
xchg
xchg
mov
push
lahf
addr16
inc
inc
sub
mov
sub
sub
cmp
add
call
sbb
push
inc
es
push
xor
negl
mov
in
lock
clc
sub
mov
inc
insb
dec
hlt
movsb
adc
push
jle
mov
stos
cmp
lcall
into
lcall
insb
xor
pop
jge
add
mov
add
push
out
fiadds
add
test
xor
or
cmp
push
fidivs
loopne
lods
push
into
jle
or
jl
lea
xchg
add
sub
xor
aam
inc
repz
xchg
sbb
iret
outsb
jmp
enter
jo
scas
push
pop
sbb
fisttps
ljmp
xor
sar
lret
ds
icebp
insb
pop
rol
mov
pop
xlat
adc
cmpsl
add
fwait
rolb
adc
inc
pop
mov
movsb
sub
mov
addl
mov
pop
mov
mov
out
aam
inc
push
sub
mov
pop
iret
xchg
adcl
pop
mov
lahf
adc
loop
push
repnz
push
push
fcoms
stos
inc
aaa
cli
pop
inc
push
jne
jo
push
mov
cld
push
cli
loop
xor
sbb
inc
addr16
inc
gs
ret
out
dec
cmpsl
sbbb
pop
out
das
rcll
cmp
inc
popl
mov
aaa
add
popf
push
mov
repz
cmp
or
ror
aaa
arpl
pop
pop
adc
add
dec
std
mov
es
test
adc
push
dec
lds
jp
test
push
shll
xor
je
stos
or
mov
inc
inc
xor
or
hlt
pop
icebp
adc
lcall
aam
loope
or
jno
or
ss
or
push
loopne
cs
and
mov
xchg
pop
or
insl
jmp
or
add
aam
pop
push
cmp
push
jg
add
sbb
or
cmpb
pushf
pushf
scas
data16
sbb
insl
test
aaa
sub
dec
sbb
pop
adc
adc
repnz
lock
shlb
lods
jnp
inc
lods
sbb
inc
xor
cmpb
inc
sub
out
dec
js
in
test
cld
daa
int
sub
pop
or
into
push
xor
sub
jmp
mov
jb
adc
imull
xchg
jo
pop
fistl
sub
in
pop
es
sub
mov
sbb
scas
xor
insl
repnz
push
mov
inc
mov
lret
and
data16
js
sub
cmc
sti
mov
push
aad
test
xchg
addr16
lock
ljmp
add
xchg
and
out
pop
out
fmuls
test
jmp
push
add
shl
clc
adc
das
inc
out
negb
xchg
subb
lods
ja
or
mov
adc
loopne
or
dec
test
int3
or
add
adc
pop
xchg
es
mov
test
inc
and
xor
and
scas
or
js
rorl
xchg
push
movsb
ja
mov
sbb
xchg
fucom
out
imul
fstl
clc
dec
test
fld
sub
and
movsb
mov
sbb
dec
mov
xor
ret
ljmp
loope
ret
xchg
mov
mov
lcall
les
pop
cld
xchg
cmp
jmp
lret
lea
pop
or
jnp
xchg
aam
push
add
movsl
lock
push
xor
adc
add
xlat
scas
lret
es
jo
sti
ljmp
fadds
jmp
dec
xchg
js
sbb
aas
mov
cmp
fsts
fyl2x
loopne
sub
dec
mov
fwait
lock
push
jge
mov
xchg
aad
mov
push
cmpsl
repnz
push
mov
jp
mov
pop
jmp
cmpsl
sub
imul
sub
cmp
std
fdivr
add
sbb
in
orl
gs
mov
sbb
mov
cmovns
aas
test
sti
andl
jo
arpl
mov
movsl
and
jg
cld
xchg
mov
cwtl
leave
fstp
clc
mov
shr
sub
push
sbb
lsl
fistpll
push
or
fisubl
sub
cwtl
xchg
inc
inc
jno
xchg
pusha
les
or
dec
pop
mov
or
push
cmc
push
pop
cmp
fcmovu
out
ljmp
test
dec
jns
lret
cmpsb
push
jp
arpl
ds
negl
inc
sub
push
dec
rorl
or
push
pop
imul
sbb
xchg
jmp
cmpsl
jecxz
cmpsb
dec
into
int
jle
ljmp
adcb
fldl
mov
or
shl
mov
clc
xchg
sub
dec
add
cmp
mov
nop
cltd
adc
les
lahf
sbb
enter
hlt
sbbb
out
ret
mov
sbb
fsubrs
push
addl
dec
dec
iret
adc
je
arpl
daa
or
mov
shlb
push
lds
inc
jg
cmpsl
mov
cwtl
push
ret
into
adc
movsl
adc
incb
or
out
loope
xchg
imul
inc
addr16
or
dec
jl
mov
jno
or
sbb
ret
test
or
jg
cmp
mov
or
adc
inc
pop
mov
dec
lods
sub
lea
jle
sub
popa
movsb
iret
clc
cmp
and
shl
movsl
mov
fsubl
adc
ljmp
push
dec
in
push
pop
add
hlt
aaa
pop
jg
mov
ds
rcrl
out
fimuls
xor
mov
mov
dec
pop
dec
repz
fmull
lret
mov
and
test
push
rcr
add
lock
adc
fadd
add
add
cmp
xorb
mov
call
inc
jmp
bound
adc
push
and
outsb
push
lods
stc
inc
mov
sub
sbb
ret
pop
sbb
jbe
addb
mov
jle
iret
in
add
or
sbb
js
pop
sbb
xor
xchg
divb
addr16
lock
push
sub
pop
lret
xchg
dec
fisubl
cli
cmp
mov
cmpsl
or
mov
jg
push
inc
mov
xend
xchg
sub
ffree
mov
cmpsb
adc
sub
shll
adc
aam
mov
add
mov
push
jmp
jne
sbb
inc
das
rclb
lcall
mov
xchg
cmpsl
dec
sbb
psllw
rclb
je
scas
lcall
or
sahf
adc
push
stos
cmpb
call
pop
jp
leave
iret
push
pop
cmc
add
dec
sarl
cmp
dec
ja
mov
loope
sub
or
lret
xlat
std
dec
pushf
jl
dec
clc
aam
xchg
out
dec
inc
pop
jbe
mov
xor
inc
mov
inc
pop
loop
add
cmp
push
push
or
jge
daa
push
or
or
inc
cli
and
das
sub
mov
mov
out
ds
rolb
mov
adc
inc
loop
je
jmp
or
popf
shrl
movsb
loope
aam
mov
dec
arpl
enter
insb
mov
dec
push
pop
jle
or
add
negb
push
cs
pop
cld
push
pushl
pop
adcl
icebp
jg
sub
les
mov
shrb
sub
cwtl
je
bound
ds
leave
xchg
push
jns
fwait
loop
cmpb
outsb
adc
and
sbb
mov
inc
data16
rorb
adcb
outsl
in
fwait
or
movsb
mov
cmp
adc
inc
mov
jle
pop
or
fs
push
out
std
out
nop
xchg
cmp
popf
cmp
mov
jno
cmpsb
push
jno
xor
adc
cmc
inc
mov
call
shlb
rcrl
stc
lahf
test
clc
add
push
mov
repnz
jp
dec
push
or
mov
sarl
mov
hlt
popf
lcall
mov
ficompl
stos
cmp
js
or
add
push
push
mov
dec
xchg
lret
cltd
jecxz
rcll
add
popf
ret
jp
push
mov
jl
sbb
fdivrs
or
mov
stc
stc
faddl
sub
loop
rclb
mov
fnstsw
es
inc
xchg
sub
scas
sarb
inc
test
sub
loopne
cmc
push
pop
adc
in
das
push
sub
in
and
in
stos
inc
mov
sub
sarl
rcl
mov
adc
int3
and
in
js
test
mov
pop
cmp
into
enter
or
xchg
xchg
xchg
lds
xchg
inc
outsl
or
scas
pop
clc
sub
imulb
mov
rcr
cmp
and
and
mov
push
mov
ret
and
jmp
push
sub
sub
aaa
add
inc
pusha
stos
or
add
sbb
les
adc
ret
jl
xor
loopne
je
sti
in
ret
adc
mov
push
sbb
add
xor
fcmovb
rcl
sahf
js
test
scas
adc
nopl
stos
mov
sbb
xor
shlb
mov
pmulhw
mov
pop
les
push
cmpsl
shrl
push
add
push
and
xchg
mov
sbb
out
iret
xor
inc
xor
iret
cmpsl
pxor
lret
sub
repnz
movsl
jg
mov
sti
ret
xchg
es
xchg
mov
sub
jmp
test
jmp
psrld
push
mov
adc
xchg
inc
les
lods
pop
pop
outsb
jne
loope
mov
pop
xchg
xor
stos
test
rclb
push
cmp
loopne
adc
xchg
shll
fisttpll
fstpt
out
shll
mov
sbb
cltd
add
xchg
mov
loopne
adcb
jns
sbb
rcrl
or
xlat
add
ret
sub
and
mov
adc
cs
fwait
mov
mov
sub
addr16
adc
cmc
loop
aam
pop
xchg
nop
out
jl
sub
pushf
lret
pop
cmc
test
or
or
push
mov
pop
movsl
jg
cmp
fcmove
in
aad
mov
inc
pop
outsb
mov
mov
call
jle
js
or
loop
push
repz
pop
jl
xchg
mov
jbe
outsl
pop
roll
inc
test
sbb
ret
daa
sub
fisttpl
idivl
fucomip
aam
insl
fs
aaa
cmpsl
ficomps
repz
xchg
or
xorb
sbb
cmp
mov
xchg
dec
cmpsl
ss
iret
subl
pusha
push
aam
cmpb
inc
movsb
push
mov
bnd
sbb
mov
cmpsb
or
cmp
sbb
inc
cwtl
popa
inc
insb
out
mov
pop
addl
xchg
cmp
and
fwait
or
lret
push
push
mov
dec
ret
jecxz
rcrl
sbb
push
movsb
dec
clc
dec
fldt
mov
inc
pushf
mov
cmp
test
sbb
mov
into
data16
mov
sti
lret
and
ret
fsubr
clc
push
mov
js
jae
xor
and
mov
clc
xchg
out
std
xchg
dec
sbb
mov
push
fnstcw
das
cs
ret
lahf
test
and
cwtl
sub
ljmp
js
push
push
xchg
mov
orb
sub
cmp
push
fidivrl
xor
mov
mov
std
fildl
sbb
xor
pop
fsubr
rcr
push
mov
loope
popa
and
cld
jecxz
in
pop
neg
shrd
pop
mov
in
leave
aad
into
sbb
sahf
push
mov
test
add
mov
adc
pop
mov
mov
test
push
int3
fmuls
mov
ror
adc
test
inc
xor
xchg
mov
mov
addl
or
pusha
aad
stos
mov
das
cmp
outsl
shr
xorb
popa
push
aaa
jbe
mov
add
inc
daa
clc
daa
inc
loopne
inc
cld
ja
sti
sub
mov
inc
pushf
sbb
or
aad
fstps
ret
xchg
pop
lock
clc
pop
xchg
push
adc
dec
test
dec
fs
ss
mov
and
mov
loope
clc
xchg
adc
pushf
jp
mov
gs
js
ds
lods
adc
js
outsb
jl
xchg
xor
nopl
sub
jo
pop
cmp
adc
cmpsb
cmpsl
aaa
loopne
sub
push
bound
sub
pusha
mov
popa
ficompl
adc
sub
jo
imull
popf
add
pop
mov
or
mov
mov
mov
fcompl
mov
movb
push
outsl
jg
and
into
pushf
in
jle
push
jmp
ret
and
sbb
pop
xor
and
bound
jle
adc
inc
inc
adc
inc
leave
add
fdivrs
adc
std
es
outsb
jo
rcrb
ja
hlt
test
sahf
int
or
ret
cmp
cli
xchg
xchg
xor
push
push
jno
inc
xor
xor
rol
shll
leave
fcomps
adc
adc
ja
orl
pushf
sub
adc
mov
sti
dec
sbb
fisttpl
add
rolb
fidivrl
cltd
or
pop
adcl
mov
clc
icebp
push
aas
push
repnz
sub
jns
sbb
adc
lea
stos
pusha
outsb
iret
inc
int3
lahf
outsl
les
cld
jo
loopne
adc
pushl
dec
jbe
fisubl
jg
lock
cmp
pushl
sub
hlt
pusha
cmp
imul
xorl
arpl
xor
cltd
addb
sbb
mov
or
shld
mov
out
pop
jmp
xchg
loop
mov
sbb
call
stos
xor
pop
cld
and
xchg
js
popl
mov
insl
add
mov
dec
dec
lret
imul
ljmp
mov
pop
outsb
outsl
fmull
mov
arpl
push
mov
mov
rcrl
mov
jno
ss
mov
fisubrs
imul
add
xor
bound
ss
test
nop
nop
or
test
add
xlat
and
inc
aas
inc
test
push
mov
sub
mov
add
shlb
pop
lods
scas
iret
jmp
scas
int3
aas
in
lds
cmpsb
outsl
sub
xor
inc
lds
xchg
incl
dec
adcb
sub
lock
push
popa
out
cmp
cmpl
loop
mov
mov
clc
push
adc
pop
cmp
dec
add
inc
sub
mov
out
add
xchg
xchg
mov
sahf
leave
decl
cld
pop
icebp
daa
xchg
sub
cmpsl
pushf
mov
mov
cmp
push
outsl
lret
decl
jl
dec
out
mov
icebp
rclb
push
inc
je
shr
cmp
in
imul
add
sub
add
xor
fnstsw
add
out
nop
mov
mov
mov
lods
xchg
inc
pop
mov
add
pop
cmp
mov
adc
add
movsb
add
enter
out
xchg
stc
inc
sub
or
ficoml
std
fcomip
adc
idivl
push
dec
mov
jl
das
lcall
insb
loopne
pushf
pusha
push
adc
clc
dec
pop
mov
mov
xor
sar
cmp
cmp
aam
inc
ja
ret
call
out
rorl
adc
pop
sub
xrstors
div
mov
adc
mov
sub
lret
stc
cld
sbb
sarl
mov
xchg
in
adc
sub
inc
dec
in
xor
jge
incb
enter
xor
push
andb
xchg
es
sbb
mov
mov
push
xchg
ffree
pop
std
aam
xchg
ss
sub
pop
mov
add
mov
mov
jns
sti
mov
dec
cmpb
daa
mov
rcll
lret
lea
cmpsb
push
cmp
adc
shlb
adc
test
jle
add
fadds
pop
popa
and
mov
and
add
xor
jae
or
mov
pop
dec
push
adc
fimuls
ljmp
push
adc
popf
fsubs
decb
adc
pop
push
clc
mov
imul
pop
ret
sub
lds
icebp
adc
sub
push
cwtl
and
jg
dec
enter
repz
xor
movsl
xor
inc
adc
mov
jnp
xor
mov
or
pusha
pushf
stos
jge
sbb
mov
in
sbb
insl
mov
mov
inc
cmp
nop
es
adc
and
stos
lods
incb
and
mov
fisubl
insl
dec
add
ja
mov
pop
clc
push
jb
subl
nop
xor
pop
shrl
fdivr
mov
dec
sub
popa
cwtl
sbb
sahf
fs
cmp
pop
xor
nop
and
push
jns
imulb
sahf
mulb
dec
ss
in
mov
cmpsl
call
dec
push
adc
mov
out
dec
push
cmc
xor
dec
adc
lea
ljmp
xchg
jmp
out
mov
lcall
insb
jle
xor
cli
das
js
ss
mov
adc
sub
mulps
xor
xchg
xor
fdiv
fs
and
test
movl
mov
adc
pushl
xchg
dec
out
mov
in
movsb
pop
enter
andl
cld
mov
es
aad
roll
icebp
pop
icebp
xchg
push
and
sbb
rolb
inc
cmpsb
dec
fsubrs
out
int
je
mov
fisttps
pop
loope
push
loope
adc
lahf
nop
outsb
dec
fcmove
fwait
inc
aas
xchg
ror
adc
xor
cmp
dec
rcrl
jp
aad
orb
push
lret
sub
divl
loope
jmp
cwtl
std
imul
adcl
add
or
outsb
push
xchg
test
sbb
insl
mov
pusha
cmp
mov
add
xchg
jo
mov
push
or
adc
incl
sub
add
cmp
shll
clc
inc
rcll
dec
xor
bound
jo
aad
out
push
loope
xor
xor
xor
sbb
adc
mov
outsl
push
push
cmpl
call
aam
add
mov
in
mov
mov
bound
mov
js
mov
jl
jp
sysret
dec
xor
inc
fwait
cmp
dec
les
mov
lds
cmp
mov
fcmovnb
xchg
shr
sbb
pop
xor
jl
dec
loopne
out
ss
pop
aam
and
jbe
adc
outsl
inc
movb
push
cmp
push
dec
cmp
scas
xchg
test
mov
jbe
jae
jo
mov
mov
test
dec
icebp
rolb
int
inc
outsl
xor
bound
sub
mov
push
loope
popl
xchg
sahf
mov
mov
push
fwait
sbbb
cmp
mov
andb
scas
hlt
sub
sub
shll
addl
mov
std
loope
js
add
out
mov
add
xchg
pop
mov
insb
inc
testl
xorb
incl
xchg
sub
mov
mov
and
push
cmp
jge
cwtl
arpl
loopne
mov
sbb
bnd
sbb
mov
shlb
jg
dec
call
insl
js
out
mov
mov
enter
faddl
movswl
mov
jp
sbb
mov
and
jo
mov
mov
je
das
pcmpeqb
scas
add
inc
cmp
negb
mov
cmp
cmp
ret
push
cmp
sbb
scas
dec
add
adc
push
mov
add
rolb
sbb
pop
lock
and
loop
adc
mov
jg
test
pop
sarb
nop
fwait
jnp
daa
push
pusha
xchg
push
popa
lods
xor
les
gs
sub
and
hlt
xchg
scas
sbb
mov
clc
adc
mov
inc
jecxz
sub
jno
je
cmp
fstpl
adc
andl
xchg
int3
loopne
roll
add
xor
or
xchg
cs
lods
test
sbb
sub
test
lcall
xchg
dec
xlat
mov
xchg
mov
addr16
dec
scas
in
sbb
sub
arpl
mov
rcl
lods
nop
cltd
xorb
scas
inc
xor
setno
and
pop
adc
pop
out
adc
lret
sahf
push
add
adc
push
outsl
push
mov
fwait
insl
mov
bound
adc
std
incl
test
out
adc
jmp
orb
cld
sbb
retw
mov
adc
les
fisttpll
popa
pop
lcall
push
fcoms
mov
add
cmpsl
and
push
or
stos
cmp
pop
aaa
les
jl
inc
je
lods
add
in
push
popa
add
and
js
mov
sbb
test
sbb
lcall
cld
aaa
cld
cmp
dec
ret
out
shrb
xor
adc
stos
inc
jl
or
push
and
dec
cmp
popa
shrb
inc
stos
outsb
pop
sbb
and
in
jle
xchg
daa
jge
ljmp
jno
mov
js
xchg
xorl
sbb
xor
fcomp
and
loope
test
std
xchg
mov
movsl
mov
test
and
fdivr
push
in
xchg
outsb
jae
xor
test
xor
xchg
lock
xor
in
cmp
dec
outsb
mov
stos
dec
add
mov
pop
sub
aam
addr16
add
les
inc
mov
jnp
repnz
mov
pop
jmp
mov
add
add
in
cmp
add
xchg
mov
ss
insl
push
rolb
sub
outsl
push
incl
xchg
pop
and
insl
add
mov
cld
fldl2e
lea
imul
sub
fiadds
mov
sbb
loopne
xchg
add
lea
dec
nop
lret
movsl
pop
movsl
aaa
pop
jne
sbb
or
push
outsl
cld
imul
cmc
daa
lods
pop
push
clc
or
sub
test
insb
lret
enter
jb
or
adc
iret
and
pop
add
data16
das
push
loope
mov
ss
mov
push
insb
insb
pop
and
dec
js
mov
je
pop
or
lret
jle
cmpsl
sahf
or
popf
call
push
iret
adc
int
mov
ret
xor
lds
das
sbb
and
sbb
in
sub
loopne
in
rcr
mov
push
mov
inc
cmpsb
ret
pusha
mov
cld
xchg
lods
push
jl
lods
sbb
pop
xor
adcl
mov
lods
jge
add
inc
cmp
popf
mov
insb
movsb
jo
or
ret
mov
test
enter
insl
div
jg
repz
jns
orl
xorl
pop
stos
jb
mov
aam
hlt
cmp
cmc
xor
test
add
mov
cli
or
pop
ljmp
fsub
sub
mov
push
leave
cmp
dec
unpckhps
add
mov
xchg
pop
cmp
nop
fwait
mov
shll
mov
fbld
pusha
push
and
outsb
lds
xor
cli
xchg
mov
test
inc
dec
and
pushl
nop
inc
dec
mov
test
das
cmp
or
ljmp
inc
xchg
inc
or
xchg
mov
jne
stos
dec
into
or
dec
ss
adc
data16
sub
imulb
mov
pop
and
ss
out
or
shr
cld
movsb
add
gs
inc
sar
mov
sub
icebp
ret
adc
cmp
inc
inc
and
xchg
bound
shl
lret
fsts
in
sbb
push
movsbl
or
clc
js
out
jle
mov
push
flds
in
lods
in
mov
jl
testb
sbb
pop
push
and
pop
sub
xchg
test
pop
add
and
loope
jecxz
mov
or
mov
popf
cmpsb
add
nop
pusha
and
dec
xor
clc
push
or
pop
rcll
pop
cmp
push
or
fadds
sub
shl
into
sbb
jl
mov
or
lods
mov
add
and
adcl
cltd
add
xlat
cld
push
jle
mov
shlb
sub
xor
cmp
rcr
add
mov
scas
gs
jp
xor
pop
hlt
xor
push
pop
cmp
jge
inc
push
cmp
and
insb
jo
cmpsb
push
pop
ljmp
cmp
sbb
jg
bound
push
sub
or
dec
call
nop
clc
xor
push
sub
in
mov
frstor
dec
fsubr
incb
subl
lock
test
lahf
cmpsb
ret
inc
testb
sbb
test
inc
pop
fsubrs
inc
pop
sbb
pop
stc
jmp
cld
xchg
cld
jp
inc
jp
sbb
push
cs
popf
xlat
add
rorl
sbb
imul
call
cpuid
add
popf
mov
fs
clc
xchg
rorb
xor
cmpsl
xchg
subb
mov
fdivp
je
movsb
popa
iret
int3
jbe
loopne
bswap
adcl
push
push
clc
out
xchg
sub
fiadds
jmp
int3
mov
addb
jg
cmp
mov
jp
mov
sbb
mov
mov
cmpsb
mov
fwait
push
push
js
or
insl
or
sub
rorl
xchg
or
xchg
xchg
and
pushf
popf
mov
inc
lret
and
pop
add
pusha
cmp
jno
mov
or
popa
cmc
sub
shlb
jbe
xor
imul
adc
and
inc
xbegin
cmovno
jge
push
adc
pop
adc
aam
lds
hlt
rcrl
in
add
orl
test
add
pop
pop
add
or
sbb
shrl
fnstsw
popa
and
cltd
fcmovbe
jp
inc
dec
xchg
sub
enter
mov
mov
mov
inc
xchg
mov
fiadds
xchg
and
test
xor
sub
push
add
stc
cmpsb
jl
ficoml
les
gs
fcompl
jl
movsl
dec
sarb
jmp
xor
inc
push
cmp
and
mul
mov
inc
lds
call
test
pop
mov
pop
mov
add
or
sbb
nop
dec
mov
cmp
add
addl
fst
test
inc
adc
sbb
push
inc
xor
aaa
push
mov
enter
push
inc
jo
cs
mov
xchg
js
lods
stos
call
add
inc
repz
and
stos
mov
sbb
push
das
ret
jno
mov
and
mov
jmp
mov
dec
mov
mov
dec
inc
mov
jecxz
ds
cmpsl
add
loop
mov
pop
mov
dec
mov
negl
mov
jb
push
sti
push
or
add
sub
sahf
jle
pop
scas
push
xchg
mov
fwait
push
popl
loope
or
fimuls
jl
push
xchg
call
jp
into
xchg
xchg
and
in
out
xchg
outsl
add
and
incl
insb
cmp
repz
adc
sbb
xor
lahf
test
out
hlt
insb
inc
add
sbb
push
xchg
mov
stos
add
and
hlt
inc
ucomiss
adc
add
loopne
inc
push
gs
push
add
cli
call
dec
push
inc
pop
or
jg
sbb
fisttpl
pop
dec
dec
shlb
mov
push
or
ja
bound
and
cmp
les
xor
mov
dec
andl
jnp
dec
sbb
jb
cmp
fmull
repz
vsubsd
pop
pop
and
push
push
fisubrs
push
adc
push
inc
loopne
fwait
out
shl
or
or
out
inc
in
dec
aaa
jg
loopne
pop
xor
and
sub
xor
sarl
dec
jg
cmpsl
add
and
movb
loop
nop
mov
ficoml
scas
mov
mov
lock
and
cmc
clc
stos
lea
in
add
mov
sti
and
push
dec
into
mov
push
shrl
dec
sbb
adc
in
ds
cmpb
js
ret
xor
mov
jnp
outsl
icebp
jge,pt
leave
xchg
sarb
sub
lock
mov
outsl
cmpsl
sub
pop
popf
push
out
addb
jp
xchg
jns
lret
or
loop
mov
clc
sub
test
and
dec
arpl
cmp
sub
add
push
movl
ds
push
jo
mov
adcb
sub
es
leave
sbb
xor
mov
sub
pop
inc
cs
add
dec
sub
fcoms
and
push
inc
bound
ret
imul
decb
lock
repnz
lcall
mov
and
mov
sarl
or
insb
or
jp
loopne
jg
jge
mov
adc
adc
xor
je
xorl
clc
push
jne
or
jns
lds
inc
dec
jo
lods
call
sarl
sbb
inc
or
popf
insb
and
es
pop
jle
mov
add
cmp
add
sbb
sub
aaa
sub
out
call
mov
xchg
sbb
inc
cmp
jnp
shl
mov
je
push
out
sbb
mov
jmp
fs
pop
dec
pop
ret
lds
loop
je
rorb
adc
stos
mov
pushw
jp
add
mov
push
mov
sbb
sarb
adc
xor
adc
pop
sarb
fsubrs
insl
rorl
sbb
sub
outsb
outsb
sub
mov
adc
push
mov
adc
mov
push
imul
jl
gs
and
rclb
cmpsb
mov
shll
sti
movsb
push
xchg
out
inc
pusha
xchg
ret
test
jl
ss
movsb
adc
pop
mov
movsl
and
push
jle
lods
inc
notl
sbb
xor
mov
sahf
aaa
int3
ret
xchg
test
scas
ret
insb
cwtl
pop
aaa
test
adc
sbb
dec
icebp
out
cmp
lahf
notl
adcb
add
jb
scas
adc
insl
adc
js
popf
push
push
mov
mov
clc
mov
sub
sub
cmc
add
xchg
mov
add
or
subb
push
push
mov
mov
xchg
mov
sub
jae
jmp
pop
mov
jmp
cmp
adc
mov
dec
sub
mov
push
push
xchg
adc
inc
or
or
stos
test
mov
sbb
mov
jg
add
mov
push
dec
imul
pop
sub
or
inc
or
cmp
pop
lfs
gs
repnz
cltd
test
insb
outsb
pop
into
dec
lock
pop
sahf
adc
add
xchg
decl
adcl
cmp
lds
lea
pop
push
xor
mov
pop
or
xchg
outsl
mov
shl
adc
dec
jmp
ret
lds
stos
cmp
adc
push
mov
lahf
mov
and
and
stos
shrl
mov
mov
mov
fcoml
jbe
ljmp
mov
jp
pop
out
mov
rolb
mov
mov
call
push
push
mov
xchg
add
and
lods
lret
loop
sub
inc
add
sahf
fdivl
pop
jp
lret
in
rcll
push
jl
int3
mov
dec
xchg
cld
fs
jns
mov
inc
out
inc
dec
hlt
cmpsb
cmp
mov
inc
jmp
mov
andl
sbb
sub
loopne
outsl
out
aad
icebp
jecxz
and
js
cwtl
dec
pop
jl
iret
jmp
and
inc
cmp
push
out
fwait
sbb
insl
ss
ret
aam
fstpt
inc
mov
inc
jg
in
xchg
scas
lock
xor
ret
jp
nop
aas
movsb
mov
fwait
fcomip
sbb
add
in
or
add
push
cmc
push
popa
jno
aam
lcall
test
stos
into
inc
push
jl
xor
in
add
scas
sbb
or
xchg
lret
adc
and
pop
insb
add
js
add
add
adc
xchg
hlt
push
or
cmpsb
and
adc
je
xchg
repz
shlb
bound
stos
jo
cmpsl
pop
inc
xor
inc
xchg
sbb
cmpb
shlb
je
lock
pop
fisubrs
jp
cltd
or
or
jae
pop
fisttps
divb
push
fcomps
jnp
and
les
mov
daa
xchg
or
mov
add
out
pop
push
inc
jle
xor
lea
ljmp
mov
xchg
lret
ret
in
sub
lock
adc
shlb
cmp
add
sahf
fs
popf
sahf
movsb
xor
add
daa
dec
leave
or
xor
pop
mov
jno
std
dec
arpl
pop
mov
dec
sbb
and
mov
lret
ljmp
arpl
mov
or
mov
pop
add
xor
rclb
popa
ret
cwtl
sbb
sub
add
cmp
fwait
or
sub
decl
fidivrl
or
xchg
clc
pop
lret
pop
fiadds
dec
cmp
andb
outsb
mov
pop
incl
imul
mov
test
lods
dec
ds
and
roll
sbb
std
rcl
int3
popf
ljmp
xor
loop
leave
loope
sti
xor
dec
test
call
lahf
pop
push
pop
gs
mov
clc
mov
push
mov
sbb
and
xor
inc
push
ljmp
pop
add
outsb
cmp
add
pop
or
push
rclb
lods
mov
cltd
in
xchg
test
fiaddl
lcall
sbbl
ficomps
int3
mov
movsl
lock
pop
push
int3
mov
cmpsb
insb
push
jp
sbbb
inc
addl
jle
cmc
mov
jge
cmpb
push
mov
stos
std
mov
mov
or
fisttpll
ret
js
scas
fisubl
call
xor
push
pop
mov
xchg
ret
loop
mov
inc
pop
imul
out
js
mov
sbb
js
mov
pop
xor
call
pop
in
loop
cmp
adc
xchg
lods
imul
mov
pop
pop
cmp
hlt
sbb
addb
lcall
and
jl
mov
push
adc
add
aas
cmpsl
into
mov
push
outsb
lret
frstor
std
scas
mov
das
and
negb
cmp
pop
mov
xor
adc
add
loope
dec
jp
jmp
pop
mov
adc
outsl
push
loopne
cltd
call
dec
enter
loopne
add
popa
arpl
or
aam
and
fsubr
gs
loopne
mov
loop
sbb
sbb
jne
xchg
sbb
sbb
mov
and
xor
inc
addl
mov
movsb
divb
dec
mov
push
xchg
test
push
sbb
ret
icebp
sbbb
sub
sbb
and
decl
xor
popa
or
scas
shrl
cltd
jmp
adc
cmpsl
mov
fst
je
mov
enter
jl
dec
popa
mov
xor
es
push
incl
adc
sbb
mov
or
xorl
jp
popa
enter
pop
mov
push
hlt
mov
adc
test
ljmp
jl
mov
lahf
xor
xchg
mov
cmc
pushf
sub
cmp
outsl
xchg
pop
stos
enter
xor
push
lcall
out
or
outsl
inc
in
subb
sbb
xchg
push
arpl
jmp
push
cmp
xchg
add
inc
pop
lock
ss
cmc
stos
aam
leave
lahf
shlb
xchg
cmp
mov
pop
adc
ds
clc
ret
or
cmp
or
ljmp
mov
fildll
pop
cmpps
xorb
adc
sub
mov
addb
shr
shrb
sarl
es
incb
test
push
xchg
cwtl
decb
subl
arpl
mov
and
xchg
es
std
jg
aad
imul
cmp
mov
mov
mov
into
mov
cli
int
jbe
lock
push
or
lods
nop
scas
int
jl
das
ret
pop
jno
shl
or
hlt
mov
mov
jnp
jl
xor
push
jmp
test
mov
jl
inc
es
mov
add
shl
pop
js
jle
dec
xor
nop
aaa
dec
or
icebp
bound
fwait
or
cmpsl
and
sub
push
mov
icebp
pop
je
pusha
in
jmp
insl
xor
dec
adc
adc
and
mov
sub
jmp
cs
mov
or
xor
push
mov
and
test
test
dec
cmpsl
mov
jg
and
lea
jno
mov
es
xor
jge
adc
sbb
pop
fiadds
outsb
jl
ficomps
testb
pop
mov
jp,pt
lcall
lods
ds
scas
and
iret
mov
or
mov
imul
xchg
sahf
fmuls
add
adc
movsb
mov
shlb
cmp
mov
mov
mov
jge
jne
es
pop
mov
rorl
add
inc
adc
stos
pop
cld
sbb
jno
mov
mov
push
lcall
cmpl
adc
mov
das
add
in
rol
push
add
popa
cmpb
jbe
aas
mov
ret
mov
je
jle
fiadds
mov
out
inc
push
loope
pop
sbb
sti
call
mov
out
sbb
jmp
mov
dec
mov
cmp
cmp
and
fimull
lahf
loopne
xchg
push
in
mov
xchg
mov
sbb
rorb
insl
mov
cli
incl
sub
shrl
dec
xor
mov
xchg
pop
and
das
and
fs
mov
mov
lock
jecxz
xchg
push
jl
imul
dec
std
mov
cli
sub
shrb
push
fstpt
fstps
loopne
rolb
jecxz
jecxz
mov
pmullw
and
xchg
arpl
cli
dec
les
xchg
and
mov
push
xchg
inc
mov
jmp
push
and
mov
in
scas
mov
add
push
orb
jle
arpl
fdivs
xor
ljmp
inc
lcall
mov
jns
ljmp
sub
adc
xchg
sub
sbb
cmc
jb
pop
adc
mov
lock
sbb
call
sbb
rcrl
fiaddl
in
xchg
mov
cli
pop
icebp
adc
mov
xor
push
add
mov
mov
pop
neg
sbb
sti
outsb
mov
mov
mov
mov
mov
sbb
jo
addr16
pop
add
sbb
push
xor
insl
lret
aas
fcomi
xchg
jle
mov
fimull
pop
sub
fsubs
add
cltd
fs
stos
push
cld
pusha
mov
push
fsubl
adc
loop
hlt
clc
lahf
movsb
sti
and
insb
jge
je
movsl
shr
sarl
ret
fiaddl
jecxz
shlb
addl
fs
mov
sbb
and
call
aad
fstpl
add
xchg
pop
popf
mov
outsb
push
addr16
push
rcr
inc
sahf
pop
push
sbb
in
testb
aam
push
out
jne
mov
dec
popa
adc
and
and
cmp
push
xor
add
inc
xor
lds
lcall
jb
hlt
and
icebp
sbb
aaa
je
cmp
es
imul
ljmp
into
pop
sbb
add
cmp
xlat
push
cmp
jl
es
sub
xchg
pusha
jo
or
sbb
imul
inc
sbb
in
jno
call
xor
aad
xchg
sub
std
pop
icebp
cmpsb
add
and
into
lahf
jo
and
adc
lock
sbb
stos
jle
std
loopne
mov
pop
mov
add
int
movsb
fsubp
inc
push
das
mov
ret
decb
out
jo
jns
add
cmp
mov
push
mov
mov
test
inc
enter
in
sub
mov
in
addb
dec
add
cmp
das
fsts
pop
push
lret
sarb
or
frstpm(287
sbb
xchg
shrb
sub
xchg
mov
mov
xor
and
sahf
cmp
cmp
xor
pop
jnp
add
push
filds
aaa
sub
mov
sub
cltd
ficompl
iret
and
clc
dec
mov
out
stc
mov
inc
xor
imul
arpl
in
cltd
mov
dec
in
je
xor
cld
mov
jecxz
andl
mov
aam
pusha
sbb
addr16
mov
fisubl
add
xchg
adc
daa
sbb
sbb
push
add
adc
cmc
js
jp
xor
pop
cmpsl
pop
pop
das
dec
ficomps
and
jo
incb
sarb
test
lods
fiadds
add
ret
cld
icebp
push
or
push
or
xchg
out
ret
fwait
lcall
mov
push
dec
call
inc
pop
cmp
ljmp
or
push
inc
sub
jl
arpl
or
gs
cmp
adc
jbe
in
mov
loope
push
adc
cwtl
adc
mov
outsl
mov
in
and
clc
xor
pop
xor
jnp
jmp
lcall
cs
jmp
add
push
mov
fisubrl
adc
ret
adc
dec
rcrb
adc
cld
bound
or
ljmp
cld
jmp
loopne
xor
cmpsl
push
or
mov
lock
sbb
mov
rolb
sbb
push
push
inc
push
call
sub
sub
mov
jl
lcall
push
adc
gs
lcall
cmc
mov
sub
pop
sbb
and
fidivrs
inc
adc
js
push
and
shlb
pop
inc
jns
mov
mov
adc
lret
ja
mov
add
pop
shll
faddp
fisubl
fcoml
cmp
mov
hlt
mov
sbb
xchg
cmpsb
xchg
lea
push
adc
sbb
sub
sbb
repz
cli
mov
pop
test
les
test
cmpsb
pusha
mov
push
xor
pushl
xchg
xlat
int3
dec
and
xor
inc
dec
fcmovbe
and
jbe
data16
or
popf
test
fadds
mov
ss
std
andb
jmp
int3
pop
adc
mov
add
cwtl
ror
hlt
outsl
adc
mov
xchg
lea
outsb
into
shrb
jge
sub
mov
push
test
and
or
sub
sbb
shll
into
rol
int
mov
fimull
cmpsl
testb
popa
jae
and
jecxz
cmp
pop
mov
push
aad
inc
jecxz
orl
nop
or
mov
popa
fstps
cmp
cmpsl
aas
shrl
insb
rclb
into
dec
pop
js
dec
cmp
popa
add
jle
pop
adc
ds
rcll
xlat
cmp
sbb
outsb
adc
mov
mov
fdivp
call
iret
or
xchg
scas
outsl
lret
sub
xor
divb
test
mov
outsl
cli
pop
dec
lret
lock
cld
pop
cmc
adc
dec
lret
inc
pop
outsb
xchg
mov
push
mov
in
in
aas
lea
rolb
test
clc
or
popa
sti
xchg
ret
daa
stos
mov
test
and
and
xor
push
jb
cltd
aam
mov
lods
push
add
xchg
inc
es
test
jl
xchg
es
lea
lods
mov
imulb
jmp
call
push
sub
aad
push
dec
sbb
shrl
mov
jbe
scas
jo
imul
add
sub
iret
call
and
inc
mov
inc
mov
test
xlat
and
out
lods
sbb
shrl
aaa
push
jno
adc
lret
popf
mov
lcall
push
and
pushf
push
cmp
adc
aas
shrb
cwtl
lea
add
out
movsl
push
jecxz
add
inc
mov
icebp
mov
shll
popf
or
out
sar
or
fbld
pop
ficoms
loopne
test
rcl
cmp
or
cmp
loopne
adc
popf
jecxz
shlb
pop
out
dec
fwait
xor
mov
add
push
inc
es
sub
xorl
xchg
add
test
daa
cmp
in
adc
mov
pop
sbb
nop
sbb
or
loopne
inc
jno
mov
inc
xchg
out
inc
jbe
sbb
pop
data16
add
cmp
fcmovnu
jnp
mov
pop
xor
mov
push
xor
sarb
ds
add
xor
mov
pop
fdivrl
cld
lock
jae
movsb
aaa
insl
sahf
jge
jae
aas
xlat
pop
sbb
cmp
or
push
ds
aaa
adc
and
adcb
mov
xorl
incl
stc
adc
ss
in
mov
imul
inc
es
scas
cli
mov
std
or
mov
inc
shrl
push
xchg
pop
outsb
inc
mov
sbb
push
call
inc
lock
sub
xchg
cli
add
mov
dec
jp
or
add
add
cmp
aad
and
mov
cwtl
repz
add
js
xor
jg
mov
inc
push
adc
sbb
or
loop
lret
pop
dec
das
inc
outsl
dec
xor
inc
pop
loop
clc
loop
movsb
mov
jb
xor
inc
xlat
push
sti
add
push
jl
das
ss
aas
andb
hlt
jo
dec
out
mov
lods
add
push
in
jge
out
outsl
test
push
pusha
sub
add
mulb
int3
ret
repnz
stc
pop
mov
das
lcall
pusha
cmpb
xor
std
mov
xor
je
sbb
mov
mov
sar
icebp
adc
cwtl
push
xchg
push
ficoml
xchg
je
or
and
inc
cwtl
mov
sbb
mov
mov
pop
mov
jo
test
mov
test
inc
dec
inc
cmp
sub
cmc
repz
sbb
mov
iret
xor
shrl
cmc
jmp
mov
mov
push
push
fmuls
frstor
and
sbb
lods
rolb
data16
xchg
mov
dec
mov
adc
mov
test
and
std
mov
fsubr
inc
xchg
sub
mov
sbb
adc
jl
hlt
roll
sar
sbb
add
sbb
ret
push
test
xor
xchg
clc
adc
loope
push
cmp
repz
mov
leave
mov
jg
xorl
mov
popf
push
gs
mov
xchg
icebp
dec
pushl
inc
in
push
mov
or
and
adc
pushl
sbb
mov
cmc
lret
imul
popf
dec
xor
mov
or
lahf
lods
adc
push
adc
testb
jbe
hlt
in
bound
jbe
in
adc
xchg
mov
xchg
pushf
vmovntps
inc
xchg
mov
rorb
js
cmc
adc
int3
test
add
or
push
loope
push
add
or
ret
mov
cmp
sub
dec
xor
inc
aaa
inc
push
lods
sub
movsl
lock
adc
aam
out
cld
int3
xchg
das
std
adc
hlt
pusha
pop
je
mov
xor
adc
aas
loope
out
and
ljmp
xchg
inc
lock
in
shrb
or
into
jg
add
mov
adc
dec
jne
scas
push
test
pop
pop
daa
das
sti
in
adc
lds
and
das
and
pop
sub
test
arpl
in
jg
shlb
mov
add
sbb
cmp
pop
sbb
cmp
mov
insb
jl
cwtl
pop
mov
pop
sbb
xchg
add
mov
in
xchg
jo
or
sub
xor
rorb
out
inc
add
out
xor
jl
lahf
loopne
xchg
mov
clc
loopne
xchg
sub
movsb
mov
lods
lret
add
mov
idivl
jno
or
pop
push
inc
arpl
pusha
imul
movsb
mov
xor
mov
aaa
sbb
cmp
mov
adc
insl
jmp
cwtl
fisubl
and
into
arpl
push
in
pop
movsl
lock
fbstp
stos
sub
rorl
or
xchg
lahf
cs
ret
pop
mov
ss
dec
loope
nop
leave
inc
sbbl
jnp
dec
mov
add
bound
jge
or
loop
addb
xor
xor
cli
push
jo
in
fs
jno
jae
jnp
ss
je
or
xchg
in
or
mov
pop
in
xchg
jle
cmp
fwait
and
inc
icebp
push
fsubrs
ficomps
shrb
lods
mov
lea
sarb
dec
adc
and
ret
lret
and
mov
mov
fs
mov
dec
push
push
push
cmp
mov
cmp
insb
lahf
inc
in
jbe
push
push
push
out
or
mov
roll
and
je
stos
ret
jl
loop
stos
in
and
pop
mov
lods
in
xchg
lods
mov
dec
adc
daa
data16
jg
fidivs
lock
mov
mov
in
jecxz
mov
mov
scas
fs
push
push
outsl
inc
sbb
mov
xchg
or
aaa
cwtl
or
ret
icebp
push
sbb
mov
adc
cmpsl
inc
in
xor
pop
and
das
gs
lock
pushf
jb
mov
adc
inc
mov
add
push
fsubs
daa
cmp
sbb
outsb
and
and
sti
lods
in
andb
inc
push
sub
add
outsl
hlt
mov
xchg
in
adc
push
fs
rorl
ficoml
fadds
add
das
scas
lock
mov
xchg
clc
and
insb
test
xchg
lret
out
or
inc
adc
icebp
mov
or
mov
sbb
in
sbb
arpl
push
fsubrp
lds
int
lods
out
pushf
enter
mov
xchg
cmp
or
lahf
mov
pop
sbb
xor
ja
clc
pop
ds
dec
add
or
repnz
shlb
push
mov
lret
xor
aam
lret
cmp
dec
ljmp
cli
sub
ljmp
loope
notl
stos
mov
pop
xlat
xor
nop
into
addw
ret
rcrb
sbb
loop
rolb
mov
int3
dec
push
out
mov
jl
cli
pop
aas
cmpsb
xor
push
sub
mov
in
inc
sub
in
adc
sbb
push
loop
inc
insb
cmc
inc
or
repz
jo
cld
repz
mov
mov
xor
fnstcw
loope
xchg
add
push
pop
push
xor
xlat
imul
jo
cmc
lock
enter
xchg
jno
pop
add
jb
sub
add
scas
sub
mov
dec
adc
mov
shlb
fcoms
js
jle
add
mov
sti
sub
inc
and
inc
cmp
inc
fmuls
jo
push
enter
sub
jmp
sub
xor
imulb
inc
push
push
lcall
nop
push
xchg
stos
scas
push
movsb
mov
ljmp
dec
mov
idivl
or
mov
test
xchg
rcrl
jp
push
mov
fsubrl
sbb
xor
andb
out
jecxz
pop
mov
xor
nop
or
test
into
lods
out
dec
negl
scas
and
ret
pop
clc
loope
pop
ret
sbb
pop
imul
mov
lock
je
fdivl
push
mov
pushf
fidivs
adc
xchg
sbb
add
pop
in
pop
outsb
push
fidivrs
mov
sbb
in
out
mov
dec
cmpl
and
add
sub
pop
test
mov
flds
jne
fnstsw
lret
sub
mov
dec
mov
dec
adc
es
dec
adc
shlb
jl
mov
push
push
lock
sahf
sbb
adc
pop
jl
adc
loop
adc
adc
mov
push
ss
add
xlat
sub
std
cltd
pop
add
fstpt
sarb
repz
idivb
aad
xor
in
or
ss
mov
inc
ret
out
pop
mov
jmp
test
adc
xor
fdivrl
mov
popf
ja
dec
cmp
xchg
jl
mov
mov
or
or
dec
insb
adc
scas
mov
iret
push
lahf
fwait
add
inc
mov
jb
inc
test
sub
movsb
jle
sub
bound
aaa
mov
or
mov
imull
xor
add
stos
lock
and
pop
cmp
dec
in
andb
xchg
mov
je
pop
cmp
outsb
test
test
insl
fcoms
dec
mov
aad
pop
cmc
popf
dec
out
sub
mov
std
sarb
sti
icebp
stos
and
pushf
repnz
fs
insb
loopne
dec
xor
lret
fistl
loopne
mov
jae
mov
pop
adc
dec
cwtl
fcoml
mulb
loopne
cmp
aam
test
xchg
lret
lea
mov
and
push
cmp
dec
xchg
mov
cltd
push
push
mov
inc
into
dec
or
push
push
jle
sub
cltd
shlb
loopne
add
push
ja
xorl
mov
sbb
adcl
leave
dec
sub
std
and
cs
pop
pop
dec
out
push
test
mov
into
push
les
mov
inc
lods
pop
les
push
push
test
add
out
int
push
sbb
js
jecxz
lea
lods
movsl
fwait
rorb
cmp
xchg
mov
fsubs
ljmp
mov
dec
cld
mov
shlb
adc
lods
cmc
loopne
std
mov
clc
lcall
xchg
pusha
les
or
sub
dec
adc
push
and
js
fwait
push
adcb
ss
fwait
push
test
hlt
pop
dec
pop
pop
sbb
call
fidivrs
mov
inc
fiaddl
add
dec
xor
mov
pop
push
sbbl
or
xchg
dec
push
jp
add
dec
cmp
orb
cmp
les
scas
pop
mov
xchg
mov
mov
std
adcl
jo
scas
clc
push
ret
rcrl
add
add
leave
es
rolb
jg
sbbb
dec
jns
aad
imul
in
push
inc
push
loop
mov
jg
inc
xor
dec
int
add
cmp
pushf
mov
sbb
mov
inc
cli
dec
mov
int3
idiv
cs
shr
mov
sub
shll
or
fadds
ds
dec
aam
inc
push
in
mov
mov
push
ret
stos
pop
ja
xchg
repnz
ficoms
add
int
insb
mov
pop
dec
outsb
rcll
aad
mov
pusha
sub
dec
divb
cmpsb
mov
pop
loope,pt
jl
subb
popl
leave
sahf
hlt
iret
jnp
sbb
fidivrs
fs
inc
js
cmp
nop
sti
dec
jge
nop
stos
cs
inc
rcrl
mov
push
movl
add
mov
mov
mov
add
int3
fistl
and
loop
insb
cmp
cmpsl
out
loope
push
clc
jmp
xchg
lods
dec
pop
add
xchg
fidivrl
xor
add
daa
pop
jmp
in
add
adc
ljmp
lahf
or
fcoms
mov
int3
call
add
add
fdivl
sbb
cli
cmp
or
push
sbb
add
cwtl
pop
ficomps
test
rorl
insb
sbb
push
sub
divb
idiv
adc
mov
mov
add
aam
mov
sarl
jge
dec
data16
hlt
idivl
pop
shr
push
aam
pop
insb
imul
mov
shll
pop
jle
test
clc
scas
mov
orb
les
fwait
adcb
dec
sub
sbb
loope
rcll
add
test
fdivrl
mov
test
inc
loop
ud2
add
cmp
fs
hlt
mov
mov
sub
in
inc
jmp
and
sarl
jns
jb
fdivrs
repnz
rcrb
xchg
fadds
into
inc
pop
imul
sbb
sub
mov
add
push
daa
dec
jl
adc
mov
mov
fists
xor
loopne
rcl
hlt
repnz
cmp
push
mov
push
mov
iret
and
xor
arpl
popa
mov
cs
and
mov
rclb
inc
mov
cmp
push
xor
jne
dec
mov
out
sbb
shr
pop
mov
xlat
lcall
inc
scas
mov
push
and
outsb
mov
ss
and
mov
mov
stos
addb
cmpsb
or
push
pop
lds
push
mov
in
mov
adc
cmp
cmc
stc
mov
imul
data16
adc
or
pop
in
shll
or
js
add
cmp
dec
loope
pop
addl
sahf
and
shlb
incb
les
sbb
jp
sbb
sarl
or
outsl
fcoml
mov
sub
add
push
ja
fisttps
out
icebp
imul
mov
push
fsub
aad
sub
dec
sbb
lret
int
pop
rclb
adc
jp
push
add
xchg
lods
lcall
pop
xlat
mov
or
or
sub
jno
insb
xchg
icebp
jb,pn
xor
cld
aad
cmpl
cmp
fcoml
pop
fisttpl
inc
mov
inc
ds
cli
mov
xor
imul
sub
sbb
mov
popf
or
fwait
aaa
dec
rcr
in
lods
jp
mov
mov
add
fcom
sub
jno
leave
sub
and
add
xchg
mov
mov
inc
adc
loope
bound
mov
mov
fisubs
rclb
sbbl
inc
cmp
popa
ret
and
pop
sub
fcoms
pop
les
or
dec
cmp
test
scas
rorl
loop
xor
mov
sarb
inc
repnz
stc
fwait
lock
cmc
cmp
pop
cmp
push
inc
push
dec
sub
js
sbb
insb
add
dec
insb
add
fisttpll
pop
dec
mov
subl
add
sbb
pop
and
popa
jl
mov
aaa
cld
push
test
loop
in
xor
ret
ret
clc
and
push
es
es
jg
fisubl
cli
sbb
repnz
fwait
push
pusha
roll
pop
fstpt
adc
dec
xchg
fstl
inc
xlat
sbb
js
insb
lret
push
ss
push
mov
jge
outsb
je
push
xchg
aad
data16
js
sbb
pop
dec
sub
scas
shrb
xchg
stc
jge
add
inc
scas
sbb
ret
pop
adc
das
push
lret
sbb
popa
xchg
das
inc
lret
mov
adc
xor
icebp
stos
mov
test
jo,pt
and
jl
cwtl
outsb
dec
push
mov
pop
lods
adc
xchg
ds
xchg
ret
aas
fnsave
jl
in
push
mov
hlt
out
xorl
add
add
loopne
dec
mov
jo
je
adc
mov
dec
stos
and
jle
inc
stos
push
pop
rorb
pop
stos
ss
data16
push
orb
sti
mov
mov
rcrb
das
xchg
push
sbb
push
test
insb
pop
xor
sbb
stos
sahf
lds
cwtl
cmp
mov
dec
cmp
rolb
xchg
loopne
mov
mov
aas
movsl
pop
jge
pop
sbb
psrld
ret
scas
pop
cmp
enter
xchg
test
push
mov
stos
xlat
sub
aas
fildll
xor
iret
cld
adc
or
jnp
add
mov
clc
xchg
dec
or
in
or
out
lahf
repnz
pop
jns
xor
loopne
jge
add
shrl
aaa
ret
out
sbb
push
xor
pushf
jmp
adc
das
sbb
data16
mov
dec
lock
fimuls
add
add
and
loopne
fbld
mov
sbb
sbbb
mov
mov
sbb
fdivrs
push
dec
clc
add
shl
lods
add
jne
out
adc
mov
dec
repz
dec
ret
jmp
pop
mov
mov
cmp
push
lods
jo
mov
mov
add
call
dec
dec
sub
andb
mov
mov
aam
push
mov
es
dec
xchg
cmpsb
cmpsl
xor
ret
jp
mov
std
stos
daa
push
icebp
sbb
outsl
cmp
jge
cmp
xchg
xchg
and
popa
je
pop
ss
inc
or
sti
xchg
cwtl
shrl
and
add
jl
jbe
ss
shr
lret
jecxz
sbb
sti
movsl
push
pop
jge
inc
ret
rcll
add
lea
stc
test
test
repz
inc
and
fisttps
or
out
movsb
jb
mov
je
repnz
lock
mov
sub
mov
fstps
fcoml
imul
ret
mov
and
stc
xchg
mov
dec
lahf
mov
xchg
mov
xchg
fisubs
and
or
std
dec
ret
pop
movsb
push
or
push
jp
add
mov
cwtl
xor
or
jle
mov
mov
outsl
arpl
inc
gs
cmp
inc
in
nop
add
hlt
mov
xor
lock
call
sti
pop
sub
push
enter
mov
xchg
mov
mov
mov
push
dec
fs
cmp
call
pushf
mov
push
mov
add
lock
mov
ds
inc
mov
push
fstpt
mov
ja
fstpl
push
sbb
movsb
scas
rcll
jo
stos
mov
sbb
mov
adc
pop
xchg
rolb
sti
pop
jbe
xchg
test
xchg
xlat
clc
mov
lea
ret
mov
cli
and
jnp
fs
and
fnstenv
pusha
jl
push
sub
loopne
movsb
xchg
and
icebp
stos
faddp
add
xchg
push
call
mov
push
das
pop
call
sub
rcrb
imul
mov
mov
inc
adc
xchg
jne
imul
pusha
sti
mov
int3
mov
add
pop
xorb
jg
cwtl
pop
cmp
lods
sbb
mov
hlt
pop
pop
insl
shlb
jp
add
ljmp
dec
dec
bound
loope
rcrb
jecxz
cli
fmul
xchg
and
mov
jne,pt
jne
adc
lods
iret
mov
je
mov
jmp
mov
lods
push
inc
jb
sub
popf
fsubrp
inc
ja
mov
sbb
push
pop
and
inc
ret
push
lock
jo
xchg
out
mov
add
aas
add
idivb
lods
jl
or
in
push
add
inc
call
sbb
xor
lahf
pop
pop
sub
das
and
fnstsw
push
xor
cli
push
adc
mov
mov
aaa
repnz
mov
ja
movsl
aad
and
mov
add
lock
ret
adc
dec
fidivrs
data16
cmp
push
xchg
gs
mov
xor
rolb
icebp
iret
test
mov
pop
and
cwtl
cmp
or
aaa
xchg
das
pusha
or
xchg
xlat
cmp
jnp
adc
inc
jge
xor
mov
movsb
sbb
mov
pop
dec
pop
adc
sub
sti
mov
inc
adc
rclb
popf
in
and
stc
cli
add
in
xor
sbb
dec
std
nop
inc
inc
or
pop
cmc
adc
mov
pusha
and
in
and
loop
test
adc
jbe
mov
enter
nop
sub
inc
out
test
pushf
adc
mov
cld
repz
pop
mov
fildl
xor
pop
lret
shr
xor
or
pusha
pop
jbe
stos
sarl
lea
jns
arpl
imull
mov
cmp
pop
f2xm1
loope
xchg
jecxz
sti
mov
jge
aad
pop
pop
pop
cmp
shll
or
pusha
add
mov
jmp
push
xchg
fcomps
jns
fcomps
jecxz
lret
imul
mov
mov
mov
add
mov
aaa
inc
insl
pusha
mov
sbb
sub
lods
add
and
jb
mov
mov
jle
add
lock
push
and
push
pop
iret
fstpt
dec
jp
and
push
lds
clc
inc
pop
pop
cltd
cs
xchg
cmp
sub
nop
fiadds
pusha
jmp
ret
pop
xchg
es
mov
insl
call
push
inc
add
sub
enter
test
sahf
xor
daa
fwait
and
pushf
insb
adc
sbb
mov
aaa
fwait
sub
mov
dec
cmp
decb
pop
xlat
loopne
aas
mov
adc
push
xor
shlb
pop
add
cmp
lcall
in
test
sub
adc
out
push
ds
mov
repz
int3
mov
roll
jae
loope
sbb
dec
push
scas
rolb
jb
in
push
jae
inc
test
imul
orb
cmp
hlt
pop
fwait
jmp
scas
in
repz
add
cmp
lock
jle
mov
xor
mov
outsb
aas
xor
andl
in
push
inc
inc
int3
sbb
adc
loope
bound
cmp
jo
pop
dec
loop
mov
and
inc
mov
mov
sbb
loope
mov
mov
dec
scas
mov
xorb
hlt
hlt
pop
add
in
cwtl
lret
sahf
icebp
ficoms
sub
js
push
in
dec
dec
pop
hlt
mov
int3
fiaddl
xchg
idiv
cmp
imul
xchg
mov
jns
in
xor
pop
arpl
and
int3
add
inc
cmp
xor
into
inc
call
addb
sbb
nop
mov
call
push
ret
add
aam
jb
stc
sbb
and
add
add
addr16
cmpsl
add
call
dec
loopne
js
ficompl
popf
or
mov
scas
add
mov
shrl
dec
xor
into
and
sbb
xchg
dec
jge
lock
xchg
lock
adc
pop
outsl
ret
cmp
fisttps
mov
jo
mov
ficoml
mov
dec
cmp
adc
mov
mov
nop
stc
cli
push
mov
mov
lods
addb
mov
rcll
dec
cltd
xor
sbb
mov
out
mov
cld
sbb
dec
inc
mov
popa
jae
arpl
rolb
sub
and
ret
lea
loope
adcb
jae
jne
out
jl
sbb
outsl
xor
aaa
loope
sbbl
int3
jge
cmp
shlb
jecxz
rcll
stos
aam
pop
ds
stc
test
jle
lods
add
xchg
pop
xchg
popf
dec
mov
in
aad
adc
stos
aaa
adc
cmp
mov
and
or
stos
js
xor
aam
sub
add
cmp
or
sub
fldcw
adc
pushf
xor
push
sbb
in
into
jl
adc
repnz
add
es
test
cmp
rolb
sti
lds
jle
daa
mov
xchg
xlat
mov
cmp
mov
shll
xor
add
aaa
cs
lea
xchg
push
leave
xchg
pusha
hlt
addr16
inc
int
xor
adc
enter
scas
stc
test
sahf
aas
bound
ds
or
dec
mov
pop
mov
hlt
call
pushl
scas
ret
nop
out
jnp
jne
add
sbb
sbb
lret
enter
pop
loope
movb
jp
push
fnstcw
add
inc
xchg
dec
mov
or
sahf
mov
enter
jmp
fidivrl
pop
push
and
sbb
sahf
push
lods
in
xor
add
push
add
dec
mov
inc
ds
push
cld
mov
adc
and
xlat
or
mov
inc
pop
xor
int3
dec
jecxz
cmp
rcl
add
scas
pop
or
mov
add
fs
sbb
adc
push
inc
add
es
mov
test
mov
movsb
shlb
cmp
sbb
xchg
xchg
cmp
mov
jge
cmpsb
add
xchg
xorl
xchg
or
cmp
loopne
loop
lcall
fld
push
inc
add
hlt
aam
adc
push
repnz
or
inc
mov
sbb
pop
push
mov
lds
add
adc
pop
nop
push
loope
sar
repz
pop
filds
mov
dec
in
jo
scas
mov
test
pop
sbbl
enter
test
xor
cmp
push
adcl
lcall
or
repnz
adcl
xchg
repnz
or
dec
neg
adc
mov
ret
lea
shll
or
inc
mov
jg
jbe
mov
cmc
test
adc
sbbb
push
lods
arpl
mov
into
and
ficoml
cmpsb
outsb
imul
out
in
sub
push
shll
adcb
test
int
jae
shl
push
and
pop
ret
adc
call
lret
inc
in
xchg
add
nop
loop
loop
lret
fadds
cmp
clc
dec
push
xchg
push
out
push
sbb
cmp
xchg
aad
jmp
je
push
fsubl
or
cmp
dec
sar
push
xchg
or
ja
nop
gs
sub
lock
sbb
mov
mov
mov
fistpll
fs
jmp
les
inc
jge
aaa
mov
lock
sub
and
popa
frstor
cmpsl
fst
push
ja
pop
pusha
cmp
adc
outsl
aad
pop
insb
push
or
sbb
cmpsl
dec
push
jp
ja
add
or
xchg
cmc
nop
push
in
push
inc
adc
mov
movb
sub
bound
std
sub
ljmp
dec
testl
xor
nop
inc
or
mov
mov
xchg
fs
cmp
push
stos
push
out
shlb
fsubrl
movsl
add
mov
inc
icebp
inc
insb
gs
mov
clc
inc
dec
sbb
and
mov
cmp
mov
cmp
sti
mov
mov
sbb
push
sbb
cmp
ret
pop
dec
jg
lcall
push
arpl
pop
xor
cwtl
out
outsl
fisttps
lea
arpl
push
addl
xor
add
inc
call
loopne
insl
test
test
add
ret
xor
sti
loope
mov
push
pushl
cmp
jo
sbb
mov
ljmp
sbb
sahf
push
push
lea
jecxz
js
pop
mov
cmpsl
mov
dec
sub
scas
xlat
sub
mov
push
and
mov
jae
daa
mov
outsl
jg
ja
and
mov
sub
xchg
xor
fadds
ja
mov
mov
xchg
adc
sub
xlat
enter
inc
mov
je
lcall
js
mov
rcr
add
mov
xchg
repz
scas
push
and
push
test
lods
cmp
mov
pop
pop
out
sub
shlb
clc
call
mov
add
scas
fisttpll
or
fdivrs
movhps
rorb
pop
fbld
sub
push
xor
test
loop
fcompl
push
fsubrs
dec
loope
daa
cld
jae
leave
mov
loopne
loopne
push
in
adc
adc
push
xchg
jbe
push
push
aad
fs
ss
xor
loop
pop
popf
stc
dec
or
lock
push
test
cmp
ja
mov
or
cmp
repz
dec
sub
movsb
mov
mov
fnstcw
stos
icebp
and
repz
adc
jmp
push
out
mov
js
lea
or
icebp
pop
dec
in
int3
mov
inc
mov
aas
leavew
ficoms
push
jno
xor
inc
test
xor
loopne
dec
je
imull
data16
dec
mov
dec
lret
sbb
outsl
and
sarb
mov
or
sbb
sbbb
loope
sbb
test
and
jne
fnsave
pop
or
aas
arpl
inc
orl
out
jae
push
dec
incb
and
jecxz
shll
dec
cmp
mov
mov
mull
out
stc
push
dec
mov
adc
shrd
mov
lahf
mov
push
or
and
adc
jg
shrb
push
push
cld
push
lahf
out
dec
mov
mov
icebp
push
or
int3
adc
mov
xor
mov
outsb
cli
aad
cmpsb
push
add
shr
jmp
sahf
xchg
ljmp
push
int
dec
push
or
xchg
adc
inc
sub
add
or
pop
xchg
lock
inc
mov
ror
ds
sub
adc
icebp
add
or
jae
push
rclb
inc
mov
push
test
stos
inc
fucomp
ljmp
push
sahf
movq
int
push
mov
mov
add
lods
fcompl
nop
insb
loopne
dec
sub
sub
xchg
call
out
ss
ss
xlat
xor
pop
fmul
rclb
or
xchg
filds
add
mov
cmp
mov
aas
test
mov
fcmovbe
outsb
stc
mov
jae
xor
inc
hlt
adcb
in
sub
sahf
mov
cmc
inc
push
inc
push
cld
push
adc
fdivp
mov
mov
or
insb
ds
sti
lds
mov
es
cmp
sbb
arpl
pop
cli
orb
xor
sub
out
out
xchg
xchg
jl
in
fildll
test
fsubs
sub
cltd
xchg
ret
sbb
pop
mov
pop
daa
add
aad
add
and
and
jbe,pt
ret
or
xlat
pop
mov
adc
loop
iret
mov
in
mov
jg
adc
cmp
jle
shll
add
aas
aam
decb
mov
subb
test
cmp
cmp
dec
loopne
lcall
dec
jg
aam
sarl
push
aaa
fs
cld
test
lret
push
popa
mov
call
into
cmp
push
adc
sub
sti
shll
mov
cmp
add
cmp
pop
pop
outsb
push
pop
add
aad
das
push
bound
jmp
push
xor
push
cmp
and
jno
adc
add
sub
inc
sbb
and
and
inc
jp
jnp
xor
jne
jb
test
sbb
jne
jg
xor
imul
inc
mov
mov
shrd
mov
mov
lahf
and
loopne
adc
js
add
adc
inc
aaa
stc
in
pop
js
in
push
jge
adc
sti
cmp
xchg
pop
in
notl
lods
lock
pop
push
leave
pop
add
push
js
ljmp
mov
popa
push
pop
xchg
das
push
pusha
js
outsl
ljmp
icebp
insb
xor
add
push
gs
imul
lock
dec
iret
ljmp
pop
add
xchg
aad
add
and
pusha
mov
in
dec
mov
jmp
xchg
xchg
add
lock
loopne
push
sti
mov
inc
and
dec
je
rcrb
and
xor
mov
dec
adc
aaa
test
mov
cwtl
enter
cli
shrb
loope
push
ljmp
xlat
out
or
subb
jo
mov
cli
pop
ds
dec
lahf
mov
daa
or
adc
ljmp
mov
cli
rcrb
test
outsb
mov
push
jl
xor
pop
push
dec
sbb
mov
xchg
rolb
fcmovu
push
sbb
negb
loop
dec
sub
stos
in
movsb
push
addr16
mov
int3
or
test
sub
aam
mov
mov
cli
cmpsl
loopne,pt
clc
lds
and
mov
push
icebp
mov
mov
lock
inc
fwait
mov
sbb
outsb
orb
scas
sbb
les
mov
scas
sub
dec
jo
lock
mov
ja
push
test
int3
cltd
sub
jne
mov
lcall
jmp
insb
jp
cwtl
cltd
test
cld
test
rcr
fisttpll
in
pop
test
mov
out
lahf
inc
fcoml
xchg
cmpb
mov
mov
mov
daa
add
mov
sbb
sub
sbb
mov
cli
sbb
sbb
jae
or
inc
cmc
cmpsb
sahf
mov
sahf
and
mov
mov
cs
test
mov
jne
sar
sbb
mov
cmp
movsl
adc
sub
scas
stos
rclb
js
mov
lea
mov
into
insl
push
and
rcll
mov
xor
inc
jmp
add
insl
xor
arpl
push
push
or
adc
mov
cld
adc
jl
xchg
mov
mov
mov
sahf
cmp
ja
inc
mov
adcb
cli
adc
push
enter
loopne
mov
mov
pop
stos
push
jns
sti
rcrl
push
rclb
js
xchg
into
daa
lods
sbb
push
or
loop
jge
arpl
das
dec
repz
lret
std
rcr
xor
push
pop
inc
xchg
stos
into
cwtl
daa
and
add
sbb
into
add
push
mov
mov
pop
cmp
arpl
loope
or
or
or
mov
dec
mov
pusha
fs
xor
jne
or
mov
subl
mov
mov
xchg
xor
mov
adc
or
jp
in
divl
loope
aad
jae
pop
call
mov
and
cmp
mov
andb
sbb
jp
dec
aas
mov
mov
add
jp,pt
inc
push
ficoml
iret
int
in
testb
pop
pop
cmp
pop
imul
stos
into
enter
hlt
imul
xchg
addb
add
push
ret
push
inc
ret
out
sti
insl
pop
push
mov
cmp
imul
pop
push
rolb
mov
xchg
mov
cli
jns
scas
adc
mov
pushf
clc
lock
sub
and
inc
or
push
sub
and
in
adc
arpl
pop
ds
lock
fmul
inc
pop
cmp
add
push
pop
dec
loopne
imul
xchg
cs
ljmp
sbb
sbb
call
popa
test
push
cli
test
mov
mov
sbb
or
inc
loopne
adc
pop
int
sbbl
jb
fimuls
and
add
loop
inc
or
xchg
loop
adc
add
sub
mov
mov
clc
and
outsl
imul
push
leave
in
bndstx
pusha
ss
jne
lock
clc
jl
mov
adc
xchg
mov
loopne
enter
out
cmovs
xor
and
mov
or
int3
lahf
dec
jecxz
es
push
mov
pop
ds
arpl
divb
sub
pop
push
push
jge
aam
jg
jle
movsl
pop
jle
fsubr
rolb
xor
scas
movsl
cmc
shlb
push
dec
sbb
sub
jmp
lods
add
xor
rorb
lock
cmp
or
add
push
ret
and
xor
dec
mov
xchg
pop
sar
aam
jl
ds
fists
aas
inc
lret
scas
mov
mov
mov
je
adc
sub
incb
popf
cmpsb
repz
xlat
xchg
push
cmp
test
jl
jge
lcall
fnstsw
mov
shlb
lahf
jmp
loop
arpl
into
pop
mov
jp
lds
mov
dec
jno
xor
mov
push
fsin
xor
xchg
push
pop
cmpsl
cs
rcr
inc
jno
sbb
bound
and
add
pop
arpl
pop
mov
out
ret
and
int
ret
cmp
inc
sbb
loop
sub
pop
mov
out
push
push
xchg
inc
fs
cs
imul
add
or
adc
xor
ja
aam
jmp
pop
daa
stos
or
mov
xchg
xchg
rcrb
cmpsl
lret
push
ret
lds
mov
jg
je
adc
and
jp
mov
arpl
dec
gs
stos
lahf
fwait
push
es
and
sbb
mov
adc
push
out
repz
ret
dec
pop
sbb
cld
xor
cwtl
push
gs
jmp
cmp
and
bound
mov
add
popa
mov
add
pushf
inc
in
pop
sub
arpl
ret
jnp
xchg
mov
push
xchg
xor
ret
mov
mov
mov
mov
dec
imul
sahf
mov
pushf
lods
fidivs
add
loopne
mov
mov
inc
jnp
pusha
push
push
inc
or
out
dec
xorl
mov
mov
jo
mov
xchg
aaa
dec
jae
jae
push
pop
neg
push
mov
fdivr
pop
cmp
or
xor
outsl
dec
dec
add
push
es
push
test
push
mov
fnstcw
push
xorl
out
cmp
into
dec
fildll
rorb
pusha
pusha
push
mov
cltd
push
xchg
dec
outsb
call
call
pop
pop
pop
xlat
mov
cmpsb
ror
pop
push
pop
sar
outsb
mov
shl
jbe
shll
out
aaa
mov
adc
pop
popf
jp
lods
jge
jg
mov
test
push
ja
xor
inc
sbb
dec
in
add
cmp
pop
or
mov
lods
inc
cmp
int
and
mov
mov
idivb
sahf
aam
addb
js
jg
iret
adc
out
dec
sub
in
sbb
mov
mov
jg
ret
sub
xor
push
pop
lahf
add
mov
mov
dec
mov
in
aad
stos
lock
inc
or
js
xchg
stos
mov
scas
dec
in
in
adc
sub
jae
add
stc
mov
or
out
les
aam
es
frstor
scas
lahf
andb
jge
inc
jbe
fcoml
fnsave
mov
jle
push
jne
push
pop
decb
cmp
adc
loop
and
in
lea
rcll
push
sbb
pop
cld
sbb
out
inc
mov
mov
push
scas
xor
icebp
adc
push
cmc
bound
arpl
je
cmp
sbb
jge
pop
push
xchg
loop
jmp
pusha
xor
mov
mov
push
pop
xor
sti
inc
push
test
cmpsb
mov
fmuls
inc
ds
sub
jecxz
pusha
movsl
cmp
or
mov
push
insl
push
mov
pop
aas
inc
sbb
pop
nop
and
mov
inc
or
mov
jp
inc
xchg
mov
std
das
xor
add
es
jmp
cmp
daa
push
loop
push
xchg
jle
inc
movsl
ss
cli
lock
sbb
into
hlt
lahf
sub
clc
cmp
jl
shrb
mov
fld
sbb
cmpsl
fmuls
loopne
mov
inc
cmp
mov
mov
lock
jle
or
xchg
cmp
adc
fstpt
xchg
pop
pop
clc
ret
cmpsl
mov
fidivrs
icebp
add
sbb
test
or
popf
lods
lods
fidivrl
ss
xchg
mov
popl
insb
nop
cli
sub
push
ja
mov
lahf
mov
in
movsb
or
repnz
sbb
jge
add
xor
frstor
sahf
mov
push
mov
mov
push
pushf
and
push
inc
pop
stos
cmp
or
ljmp
mov
cmp
imul
mov
loopne
sbb
repz
dec
mov
hlt
les
jb
icebp
push
insl
dec
cld
xor
inc
in
sbb
push
das
int3
rcll
scas
xchg
cld
fstpt
cs
stc
mov
mov
stos
cmpsl
imul
fisttpll
andl
cwtl
mov
sub
mov
and
mov
movsb
cmpsb
popf
xor
pop
sahf
push
icebp
xlat
cli
in
ret
add
or
in
inc
pusha
dec
mov
imul
pusha
pusha
shll
mov
push
je
xorb
fcmovu
in
add
in
push
add
jle
jns
jmp
sbb
sbb
mov
xor
mov
out
add
xor
xchg
adc
cmc
inc
bound
mov
dec
ja
out
xchg
outsl
jb
fcoms
call
pusha
mov
dec
repz
popf
push
ret
mov
fbld
mov
je
push
sub
shrb
sbb
mov
clc
leave
lock
scas
sub
xor
pushf
testl
ficoml
call
clc
sub
pop
cld
imul
cmp
push
mov
cmp
xor
je
pop
aad
out
shrb
mov
cmp
or
inc
xchg
mov
add
inc
mov
sbb
loopne
push
out
mov
adc
cmp
jp
add
fwait
fs
mov
cmpsb
jno
fildll
sarb
addr16
inc
sbb
dec
jp
stos
push
pusha
jno
cmp
pop
push
shlb
sub
inc
es
stos
mov
pop
loopne
xor
je
popa
pop
xchg
mov
adc
pop
js
dec
or
jge
ret
ja
and
jnp
xorl
rep
jbe
or
loop
in
add
sarl
lret
addr16
into
cmp
arpl
mov
mov
and
popf
cli
cmc
mov
sbb
push
das
in
adc
test
std
pop
push
stc
mov
aas
leave
pop
push
xor
popa
and
sub
sub
xlat
fstp
mov
jns
cmp
sub
lods
sti
mov
popa
jg
xchg
push
cmp
add
movsb
mov
push
scas
xor
jge
mov
xor
jnp
dec
jae
test
push
cmp
adcl
push
lock
push
fstpt
or
loop
adc
xchg
lret
adc
rorb
pop
test
lods
sbb
lahf
xchg
cmp
inc
data16
loope
sbb
iret
bound
mov
sbb
adc
mov
leave
gs
pop
lock
add
push
sbb
jns
ja
jns
dec
cmp
or
jl
sbb
pop
jl
or
das
sahf
add
jmp
shrb
lock
and
icebp
cli
lods
clc
fmull
push
sub
imul
sub
in
jl
mov
fwait
add
mov
fwait
ret
fisubrl
dec
stos
push
mov
rclb
mov
das
ljmp
filds
xlat
add
icebp
shrb
jns
push
negl
lret
bswap
mov
push
sbb
aaa
inc
dec
movsl
lock
out
cmp
pop
sbbb
or
sbb
dec
out
cld
rcr
repz
lock
popf
stc
es
mov
std
mov
jnp
mov
dec
clc
roll
pop
idivb
loop
cwtl
push
gs
add
pop
and
dec
or
arpl
out
insb
jne
adc
mov
test
mov
mov
dec
dec
shrl
pop
out
lods
mov
cld
dec
gs
cli
add
pop
jnp
cltd
int
jge
cs
cwtl
adc
mov
cmpsb
dec
out
test
xchg
call
xchg
lock
in
out
ljmp
scas
jb
adc
sub
cmpl
ds
mov
popf
xor
xlat
adc
sahf
fdiv
popa
scas
sub
les
or
mov
jge
fsubrl
cmp
loopne
cmp
enter
inc
sub
xchg
inc
loopne
nop
inc
movsl
dec
xchg
pop
cmp
rcr
add
push
mov
and
mov
cvtdq2ps
adc
sbb
mov
ret
jo
test
add
or
sarb
fucomi
mov
pop
jmp
arpl
add
add
jnp
add
sub
xchg
lret
dec
jnp
rcrw
mov
lret
jg
mov
faddl
push
out
jno
and
and
dec
add
lods
movsl
push
rcrb
in
fsubrl
and
xor
jl
and
push
lds
push
xchg
in
mov
jb
enter
je
jno
dec
jg
jo
cli
xor
dec
enter
lods
call
push
shll
int
push
mov
andl
lods
dec
xor
push
int
rolb
xchg
jno
les
pop
sbb
data16
cmp
push
mov
push
test
lret
jge
add
mov
stc
inc
jg
or
lret
mov
push
incl
pop
fiaddl
shl
or
mov
or
xchg
shl
sbb
sarb
dec
cmp
sub
push
js
cld
addr16
push
cmpsb
cmp
mov
rclb
rolb
inc
sub
sahf
outsb
mov
hlt
divps
out
outsb
or
or
jno
iret
movsb
push
push
mov
addr16
ds
imul
inc
in
xchg
and
decb
imul
pushf
lcall
or
loope
dec
js
mov
insl
iret
sub
pop
icebp
pop
push
hlt
or
scas
mov
aam
repnz
cmp
out
mov
and
xchg
mov
loope
sbb
sub
jo
mov
xchg
pop
push
in
lret
sbb
popa
cwtl
jge
je
jne
jge
not
xor
loopne
xorb
repnz
or
and
push
cmp
xchg
les
pop
loope
mov
ja
arpl
mov
pop
dec
or
adc
and
mov
cmpsl
cmp
push
jg
inc
out
mov
jmp
enter
jge
or
mov
bound
add
jge
or
stos
sbbb
and
inc
sahf
sub
out
shll
mov
or
loopne
rolb
mov
sbb
lret
loop
push
pushf
mov
lret
leave
lcall
sbb
jle
mov
inc
sub
sbb
pop
cmp
mov
adc
pusha
mov
mov
and
movsl
dec
mov
sbb
jl
negb
adc
pop
test
mov
adc
ret
loop
and
sbb
test
jge
mov
ss
jb
add
mov
loop
sbb
or
xor
mov
mov
addl
and
adc
sub
add
xor
xor
and
cmp
push
inc
fstl
pop
shlb
mov
ret
xchg
pop
xlat
sbb
mov
pop
mov
in
mov
jg
movsb
je
push
movsl
add
jecxz
je
out
xor
int
push
xchg
jp
enter
aaa
enter
inc
xor
cmp
outsl
add
nop
xorl
pushf
push
popa
pop
aam
dec
mov
xchg
and
sbb
scas
stc
pop
lcall
inc
sarl
pmaddwd
sbb
loop
xorl
push
cmpxchg
cs
aaa
mov
push
mov
add
add
into
cmp
out
adc
cmp
mov
aam
lahf
xchg
push
es
popf
stos
stc
ds
add
loop
mov
gs
pop
lret
sub
je
ds
lock
mov
pusha
fiadds
jle
les
pushf
sub
push
mov
aad
aam
pop
or
leave
jge
push
ja
sbb
mov
les
push
xchg
pop
ficompl
xor
lret
data16
inc
adc
adc
cmc
jne
out
mov
jo
mov
fchs
adc
sub
mov
aam
dec
pop
dec
loope
popf
adcb
aad
or
cld
faddl
ljmp
enter
sarl
inc
sub
adc
outsb
mov
mov
mov
jl
or
pop
add
js
adc
stos
mov
add
cmc
mov
aad
pop
sbb
inc
pop
jns
cld
out
divps
adc
imul
gs
mov
popf
jae
loop
jbe
aad
cld
add
cld
mov
and
mov
in
push
outsb
js
inc
pop
sahf
ds
fwait
xchg
mov
sub
frstor
cld
cld
push
inc
in
push
adc
jge
pop
lods
jl
or
adc
lock
dec
xchg
iret
xorl
jmp
xor
mov
pop
ret
dec
xchg
call
dec
sbb
mov
mov
inc
addr16
adc
shll
mov
leave
fwait
add
ds
sub
xchg
outsb
clc
xchg
and
xlat
inc
mov
sub
or
dec
out
call
add
xchg
stos
xchg
jmp
enter
scas
loopne
cmp
inc
push
cmpsl
add
push
mov
in
mov
cmp
pcmpeqd
push
sub
or
sti
adc
xchg
pop
sub
lods
aaa
mov
cs
aam
xchg
lods
jns
ss
cmp
push
xor
jecxz
pop
test
loope
ss
xor
sub
outsl
push
push
lahf
fwait
xchg
aad
xchg
stc
inc
mov
adc
cmpsl
aaa
push
or
inc
js
xchg
popa
adc
pinsrw
mov
mov
daa
pop
lods
js
in
inc
orb
jl
mov
push
ret
cwtl
inc
sbb
test
inc
mov
inc
mov
mov
fsubs
dec
mov
jg
je
xorb
andl
sbb
push
jns
add
jle
push
xchg
adc
js
int
adc
mov
xlat
jl
fildl
xor
mov
mov
jno
xor
into
adc
fildl
cmp
dec
xchg
jl
sti
mov
ss
cmpsb
push
fcmovbe
push
imul
mov
xchg
test
cmpl
mov
push
push
movsb
sbb
roll
jmp
out
or
adc
jmp
outsb
notl
jmp
loope
mov
loopne
and
imul
popa
push
push
sti
jle
outsb
and
in
xchg
sahf
sarl
jo
comiss
add
xchg
inc
mov
or
xor
ja
xchg
cmp
movsb
sbb
jg
leave
push
out
icebp
cld
inc
out
sub
inc
stos
mov
insl
xchg
loopne
push
lahf
into
mov
push
aas
popa
pusha
sti
subb
jnp
and
push
fmuls
cmpsb
fcomps
movb
add
jg
mov
sub
adc
push
loope
ret
inc
mov
mov
jle
mov
in
ret
fnstsw
mov
aad
aad
out
cs
push
fistpl
jns
cmpsb
sub
sub
insb
ds
adc
es
mov
cs
cld
sbb
sbb
dec
or
lahf
mov
loope
in
ret
stos
das
sub
icebp
ret
inc
aaa
js
clc
pusha
jle
jae
pop
and
sbb
sub
out
hlt
nop
idivb
imul
dec
ljmp
add
and
or
xor
loopne
jns
hlt
outsb
mov
das
loop
or
adc
jnp
lods
out
lods
lock
lret
jmp
xlat
xor
ret
push
pop
sbbl
jne
popf
dec
rorb
cmp
iret
pushl
dec
loopne
shrl
adc
or
loope
mov
popf
imul
mulb
into
sti
mov
mov
enter
inc
fisubrs
or
lahf
out
lahf
fmuls
fst
cmpb
mov
and
in
add
inc
xchg
pop
cmp
fsubl
out
jle
add
addr16
lcall
mov
and
ret
mov
insb
int
sbb
or
gs
pop
ds
dec
xchg
mov
outsl
push
loope
lds
jecxz
out
push
leave
mov
sahf
pop
jno
out
mov
lret
lret
sub
push
aaa
adc
push
inc
cmp
push
bound
mov
iret
xchg
jbe
dec
xchg
xlat
repz
and
mov
pop
xor
out
je
aam
xchg
mov
stos
mov
shrb
hlt
cmp
mov
shrb
in
dec
and
push
and
push
in
rorl
push
or
sbb
into
jb
lock
mov
push
ja
add
movl
cmp
inc
mov
scas
lahf
ret
sub
inc
push
fcmovu
in
cmc
and
mov
stos
or
shrl
or
testb
cld
rorl
inc
pop
pop
mov
cmp
push
mov
push
out
ret
push
fisttpll
inc
les
mov
mov
pop
fsubs
movsb
xchg
lds
sub
inc
add
icebp
cli
sbb
aas
sbb
xlat
mov
mov
and
jb
mov
mov
sarb
scas
shll
jns
push
mov
and
in
pusha
pop
test
and
inc
and
jns
push
pop
pop
and
push
mov
inc
mov
lret
out
cmpsl
cld
cltd
test
sar
sbb
mov
cmp
cmova
scas
cld
out
xor
inc
pop
push
pop
lcall
sub
lock
movsl
adc
fists
aaa
fisttps
adc
orb
movsl
sarb
jge
add
pop
mov
mov
pushf
inc
sub
orb
dec
orl
sub
shrl
movb
xor
cmc
dec
push
fistpll
outsb
shl
pop
hlt
clc
imul
sbb
mov
xchg
mov
ds
push
je
cmp
ds
pop
pop
pop
mov
cmp
fcomps
lds
cmp
mov
jl
sbb
mov
mov
cld
loop
jb
std
push
test
insl
popa
mov
inc
or
xlat
or
xchg
imulb
adc
mov
adc
mov
xchg
add
adc
loopne
imul
push
popa
ss
or
nop
test
clc
mov
xchg
xchg
fs
jecxz
add
daa
push
push
xchg
pop
rorb
inc
fstl
pop
push
pop
add
imul
xor
lods
fildl
test
inc
int3
dec
jecxz
sbb
rcrb
mov
add
push
out
xchg
enter
sahf
jae
sbb
pop
jge
aam
shlb
sub
xchg
jmp
imul
lock
dec
out
cltd
or
pop
push
fwait
stos
shll
popa
xchg
mov
enter
rorb
push
push
and
aam
nop
gs
mov
mov
xchg
arpl
lock
push
js
rcr
iret
pusha
mov
js
and
cs
fisubrs
mov
subb
jns
jnp
jae
adc
cmp
mov
push
xor
push
push
sahf
push
push
in
jge
xchg
xor
xor
sahf
test
fsubr
add
sbb
scas
out
outsb
mov
lods
and
push
pop
cmc
out
pop
sbb
inc
pop
insb
rcl
sbb
loop
std
pushf
adc
cmp
push
loop
sbb
pop
shl
lods
lock
push
jmp
push
ret
or
jl
fmuls
mov
jl
sbb
dec
jmp
es
sbb
bound
jp
and
daa
and
and
add
xchg
test
stos
mov
sbb
lret
cltd
daa
fisttps
fisubs
jp
cld
cmpb
into
pop
aaa
pop
loopne
test
fisubrs
push
xor
aam
lret
inc
dec
loopne
pop
call
dec
jne
pop
imul
add
lcall
adc
adc
push
mov
pushf
movsb
cmpb
sub
or
stos
inc
cmpsb
push
xor
aam
ret
push
int
jmp
dec
push
scas
outsb
fsubrl
and
pop
icebp
shl
addr16
cwtl
push
mov
sysret
xchg
leave
lahf
mov
cli
and
test
push
dec
arpl
push
jp
cmpsb
pusha
mov
add
xor
adc
jne
lahf
outsb
push
andb
cld
jo
lock
iret
ret
repnz
xor
sarb
sbb
incl
sbb
scas
push
ljmp
je
cmpsb
shl
mov
clc
push
fcomps
push
pop
adc
sub
sahf
push
jl
cmc
andl
test
mov
dec
scas
movsb
pop
inc
cs
dec
push
addl
inc
in
push
cmp
or
push
sub
mov
mov
jge
data16
adc
test
pop
pop
mov
mov
sub
outsl
push
and
lods
xchg
or
mov
add
mov
test
xchg
push
jecxz
add
adcl
mov
or
pop
movsl
dec
mov
or
jg
out
test
pop
sub
sbb
dec
push
mov
roll
and
push
xor
adc
outsl
fcmovbe
daa
add
sbb
xchg
mov
test
clc
jb
inc
mov
stos
flds
loopne
dec
pop
sahf
cmpb
fcmove
xchg
fwait
jle
mov
cmp
mov
repnz
and
adc
sub
frstor
into
push
xchg
enter
pop
or
and
and
add
mov
inc
mov
xor
and
adc
xlat
pop
ds
pusha
mov
adc
jne
pop
cmc
decl
cmp
inc
bound
in
enter
xor
jmp
mov
imul
xchg
les
jo
and
pop
jmp
lcall
xor
mov
daa
test
pop
cmc
add
insb
loope
cmp
mov
rolb
rcr
outsb
rcrl
fisttpl
insb
xor
loope
jp
mov
fadds
mov
dec
or
xchg
mov
sub
push
push
icebp
sub
add
pop
mov
lcall
mov
or
out
sbb
inc
fistpll
shrd
loopne
imul
xchg
jo
outsl
xor
into
les
cli
adc
or
popa
cmc
loope
or
or
js
adc
das
lods
loop
cmp
aam
mov
inc
mov
dec
fwait
jg
xlat
dec
jno
add
aam
out
push
mov
sahf
inc
or
out
xor
adc
push
push
xor
call
outsl
sub
les
cld
and
push
sbb
out
orb
sbb
mov
aas
jg
pusha
icebp
js
gs
les
les
add
sarb
pop
jo
inc
xor
ss
mov
test
mov
or
jbe
jl
xor
je
dec
pop
fst
xor
xor
ja
xor
les
xor
sub
fimuls
xlat
mov
add
imul
dec
imul
and
rclb
idivb
ljmp
data16
pop
int3
aam
inc
enter
and
cmc
mov
xlat
outsl
sahf
loope
movsl
add
pop
insl
rorb
sahf
scas
sbb
cmp
rcll
test
cmc
jle
or
ret
arpl
xchg
mov
or
call
adcb
and
inc
iret
fs
test
xchg
xlat
sub
dec
mov
pop
scas
lock
or
aam
movsb
imul
jns
fisttps
lock
rorl
shr
add
mov
pop
sahf
movsb
dec
xchg
push
xchg
adc
loop
adc
xor
sbb
shr
fidivrs
js
push
push
adcb
add
pcmpeqb
aam
clc
xchg
mov
test
pushf
xchg
int3
xor
sub
test
popf
fcom
cmp
imulb
xchg
push
or
gs
fsub
push
mov
and
rcl
movsl
mov
in
scas
pop
int
mov
addb
incb
push
imul
push
pop
mov
sub
sbb
cmp
and
ja
add
inc
sbb
mov
mov
inc
getsec
and
cmc
cwtl
lock
scas
out
jp
mov
aam
push
and
movsb
xor
jecxz
mov
add
cmp
xchg
jle
outsl
int3
cs
rclb
cmp
sti
dec
scas
xchg
push
jl
cs
pop
add
insb
cmpb
fdivr
push
lret
jmp
cmp
push
fcompl
in
pop
pusha
mov
in
outsb
repz
jbe
jno
jl
add
pop
mov
sbb
sarl
rcll
sub
loope
mov
mov
dec
push
add
or
lods
leave
ret
scas
leave
add
push
jnp
mov
stc
jno
imul
insb
jl
je
push
and
pop
xchg
ret
inc
test
lea
sub
ljmp
pop
xchg
test
ror
rol
test
inc
add
fcos
ret
incl
cmpsb
in
je
stos
out
sub
cmp
inc
mov
push
inc
jb
ljmp
xchg
mov
sbb
jg
mov
fdivrp
sub
rolb
fiaddl
xchg
loope
xchg
jns
repz
shlb
xor
aam
jg
mov
mov
xor
popa
cmpsl
gs
shrb
or
xchg
dec
adc
fcmovbe
or
popa
fildll
icebp
adc
push
or
adc
icebp
adc
sub
inc
jecxz
lods
adc
jmp
ss
mov
mov
push
mov
cmp
rcr
repnz
rorb
sbb
and
in
rcrb
push
mov
pop
jge
inc
sub
jecxz
in
outsb
loope
xchg
pop
xchg
mov
add
fistpll
or
pop
rcrl
push
mov
outsb
mov
push
jnp
push
xchg
or
mov
lcall
icebp
sbb
or
jno
mov
pusha
or
and
push
adc
les
mov
loope
das
jbe
cmp
lds
sub
lea
lock
mov
jns
insl
add
add
push
pop
dec
adc
mov
xor
inc
mov
repnz
sbb
insl
dec
adc
ret
pushl
shrb
inc
push
push
xlat
sub
ja
push
dec
adc
rorb
push
xchg
xchg
sub
sbbl
mov
adc
dec
push
push
notb
pop
adcb
mov
jo
xchg
int3
sbb
dec
test
or
shlb
xor
lock
and
syscall
xchg
cmp
jo
div
sbb
in
sbb
inc
pop
icebp
jnp
sbb
sub
jno
jno
inc
je
mov
pop
je
cmp
adc
movsb
popa
enter
cld
f2xm1
push
xchg
xor
mov
mov
sbb
sti
add
sbb
push
adc
or
adc
pop
mul
cmp
fcmove
std
out
cmp
and
cmp
cmp
xchg
fsubrl
sub
call
mov
adc
or
sbb
rorl
add
fistps
mulb
pushl
pop
jno
ljmp
pop
cwtl
ret
call
dec
add
xchg
gs
jbe
andl
movsl
push
push
lock
repnz
test
test
jle
out
mov
mov
or
into
aad
xor
adc
push
fmull
lock
sarl
mov
out
js
sub
rclb
mov
and
sti
in
inc
push
and
xor
lock
jg
iret
out
fs
arpl
and
pop
arpl
cmp
enter
sub
pop
in
insl
pusha
loope
sarb
jno
mov
cmp
lock
gs
mov
jae
shll
add
push
je
xchg
adc
mov
push
jmp
mov
and
push
mov
or
fimull
jecxz
imul
ds
aaa
addb
incl
add
ss
or
push
dec
std
mov
rclb
push
ja
fcomip
sbb
mov
rorb
mov
mov
inc
es
add
mov
inc
sbb
ljmp
rorl
mov
and
add
lock
or
lea
and
das
scas
fld
fnsave
push
add
enter
ds
mov
daa
iret
es
mov
push
outsl
and
push
cmp
mov
fs
xchg
inc
or
mov
xlat
lret
xchg
outsl
mov
pushf
lds
lea
push
adc
jle
lock
cltd
arpl
mov
cmp
add
adc
icebp
cmp
cmp
leave
mov
arpl
cmp
sbb
and
dec
lds
je
or
inc
push
sbb
adc
pusha
xlat
mov
sub
ss
mov
imul
pop
pop
icebp
dec
dec
shlb
push
cmpb
jo
pop
loop
pushl
xchg
inc
mov
xchg
ds
xor
sti
mov
arpl
adc
in
movsl
outsb
pop
adc
mov
add
sub
or
clc
lock
xor
out
sub
xchg
adc
insb
test
repnz
cmp
jg
push
test
sub
loopne
inc
bound
movsb
outsb
repz
add
jmp
inc
mov
mov
xchg
scas
dec
shll
popa
mov
xchg
loope
rolb
xor
lcall
mov
sbb
push
repnz
lea
dec
mov
dec
and
pop
out
scas
sarb
int
xchg
jmp
scas
cmp
sbb
xor
fs
mull
je
sub
loopne
push
mov
aad
std
aas
xor
inc
fs
leave
add
sub
lcall
gs
mov
cmp
sbb
xlat
adc
jecxz
sub
xchg
inc
je
sarb
lret
cli
xchg
ss
lret
jno
cmp
mov
push
repnz
mov
das
ss
cld
adc
test
or
inc
mov
cmp
fldt
pop
mov
sti
dec
shrb
mov
stos
cmp
sti
insb
mov
inc
outsb
inc
pop
mov
mov
inc
push
rcrb
andb
je
adc
cmp
push
lret
add
mov
push
pusha
mov
xor
das
cmp
insl
sbb
enter
les
or
mov
ljmp
or
mov
dec
pop
pop
sahf
and
rcrb
lahf
add
call
dec
push
mov
push
dec
filds
push
inc
mov
out
lcall
icebp
rcl
xchg
sub
push
test
or
cmp
fstps
cmp
add
outsl
xchg
lock
xchg
mov
push
mov
loopne
add
psubb
popa
popf
inc
pop
push
inc
movsb
sbbl
push
pop
mov
lock
mov
sub
sar
sbb
pop
lods
les
push
cmp
add
jmp
rorl
pop
sbb
scas
or
mov
adcl
insl
pop
ret
mov
inc
test
adc
pop
jp
mov
dec
push
mov
xchg
or
icebp
loope
ds
pop
repz
mov
es
mov
and
stc
jle
imul
andl
pop
fs
jo
or
add
dec
jl
push
or
xchg
push
pop
or
cmp
push
fninit
mov
xchg
ret
outsl
lea
push
sub
and
in
jbe
sbb
add
lock
outsl
ljmp
push
add
popf
sbb
pushf
movsb
dec
adc
adcl
lea
pop
jmp
int
cmc
shlb
in
push
and
jmp
add
aam
loope
scas
jecxz
in
sub
add
outsb
rorb
jnp
xchg
jg
and
pop
ss
mov
jp
inc
aad
sub
add
mov
aad
dec
sbb
dec
rclb
in
sbb
mov
cmp
int3
or
sbb
push
mov
mov
sub
or
data16
pop
mov
lds
mov
int
loopne
mov
loope
xchg
in
adc
clc
pop
dec
mov
push
test
and
je
or
sbb
fwait
jb
xor
pop
movsl
sub
dec
push
loop
mov
cs
or
mov
cmpsb
dec
into
sahf
ljmp
push
dec
adc
cld
jecxz
fadd
sbb
pushf
cmc
jge
push
fbld
movb
or
inc
jno
pushf
sbb
lcall
sbb
add
in
inc
mov
ljmp
iret
and
insb
clc
push
repnz
add
data16
add
icebp
sbb
test
sub
or
lock
out
ljmp
lods
insb
int3
icebp
mov
adc
ds
das
dec
jl
ljmp
ss
and
aas
jl
xchg
mov
es
pop
xor
loop
test
xchg
cmp
pushl
movb
leave
or
out
push
scas
stc
sbb
sbb
cmc
gs
push
idivb
push
sbb
cld
mov
or
pop
sbb
mov
mov
add
inc
mov
popf
ljmpw
and
pop
jmp
data16
mov
inc
cltd
jb
test
insb
shlb
jb
out
push
cld
enter
call
ja
cwtl
cmpl
leave
jge
lret
mov
cmp
sub
das
insl
ficomps
dec
in
jecxz
stos
push
shrb
gs
test
mov
into
and
popf
shrb
mov
popa
cld
sub
and
je
add
pop
adc
test
jp
or
roll
in
push
dec
adcb
pop
in
dec
mov
shll
testl
jle
pop
jg
popa
and
inc
mov
lcall
jp
test
jl
xor
out
adcb
or
cli
adc
mov
pop
ret
fs
shll
loopne
inc
les
stc
outsb
repnz
iret
or
sub
jmp
enter
pop
out
inc
dec
pop
jl
and
cmp
push
or
xchg
js
cltd
push
dec
inc
adc
lret
mov
and
aad
leave
add
pop
and
lods
insl
cmp
loope
push
mov
adc
push
pop
stc
xchg
lods
loopne
lods
shr
sub
pop
es
ret
or
ror
repnz
rcr
les
cmpsl
test
and
mov
inc
xchg
mov
fsub
mov
jo
in
insb
loopne
je
cli
mov
pop
dec
and
loope
pop
mov
mov
ljmp
nop
pushf
push
sub
xor
push
movsb
and
iret
stos
add
jns
fldcw
add
loop
push
lcall
add
cmpsb
xor
or
enter
push
lods
push
jecxz
outsb
addr16
adc
xor
fcomip
dec
ljmp
lcall
pop
out
and
mov
andb
xor
fmuls
call
jl
mov
push
push
nop
ljmp
les
dec
mov
inc
rcr
jo
jmp
mov
and
sbb
aam
sub
aas
lcall
fwait
imul
loope
adc
in
adc
shrl
fmuls
stos
xchg
rol
icebp
pop
pop
lret
in
pop
fmul
out
js
pop
cltd
arpl
add
int3
fcmovbe
rol
jmp
cmp
or
add
pop
aas
push
mov
cmpsl
call
mov
repnz
cmp
dec
sbb
aas
jmp
out
adc
xchg
dec
testl
data16
adc
mov
and
pop
sbb
ljmp
imul
pop
jl
popf
insl
push
jle
jne
out
pop
xchg
cmpsb
xchg
sar
push
shlb
insb
jge
ds
je
adc
sahf
in
mov
fisubrs
cwtl
mov
cmp
jo
sub
pop
dec
out
sub
jo
fs
dec
aaa
in
jle
pop
jle
test
mov
or
enter
pop
je
and
aas
inc
and
lea
lock
in
gs
gs
cmpsb
pushf
pop
out
repz
xchg
mov
xor
sbbl
adc
outsl
sub
mov
or
cltd
or
adc
mov
push
jp
xchg
add
pop
pushf
inc
cmpsl
bound
inc
xor
sub
pop
push
dec
or
jmp
fs
sti
es
and
stos
jno
insl
jge
addr16
and
push
and
inc
dec
sbb
and
imul
xchg
pop
lret
sbb
popa
and
xchg
jne
or
es
push
imulb
fadd
inc
cmp
lea
xorb
push
add
sar
stos
push
sub
fcomip
sub
int
mov
sub
movsb
and
aam
pop
loopne
outsb
jno
orb
jb
stc
xchg
cmp
or
scas
mov
push
inc
je
sub
mov
or
cld
pop
jo
dec
mov
sub
out
jl
loopne
jns
or
test
xchg
cmc
and
adc
inc
dec
sub
push
add
faddl
adc
push
mov
push
scas
jo
push
push
cmp
stos
int3
addr16
loopne
mov
stos
and
hlt
pop
push
or
add
aad
push
adc
pop
jbe
xor
loope
jle
mov
movsb
push
popa
xchg
cltd
inc
pop
dec
push
faddl
jae
add
inc
imul
or
les
aam
jnp
xchg
push
xchg
push
je
jle
pop
cmp
sar
movsb
mov
in
mov
stc
add
add
ss
xchg
out
add
call
ffreep
or
cmpsb
add
repnz
add
pusha
stc
imul
scas
andl
pop
cmpsl
jg
add
shrb
or
xor
test
adc
cmp
in
pop
fsubs
rol
out
jp
cmpsl
fimull
pop
pop
pop
or
stos
cmp
xor
pop
lds
js
ss
and
sub
ret
mov
enter
dec
add
adc
call
push
mov
jl
rclb
and
imul
pop
push
popa
fisubs
mov
or
cmpsb
adc
xchg
push
mov
sbb
jp
mov
insl
ss
pop
add
add
nop
xor
loop
aas
cld
dec
mov
lds
pusha
lret
pop
mov
jbe
scas
rol
ret
cltd
add
pusha
cmp
mov
ds
lods
andb
push
and
pushf
aaa
shufps
or
xchg
movsb
inc
inc
xlat
popl
xchg
pop
dec
lea
jmp
imul
pop
insb
mov
add
fwait
pop
insb
stos
and
shll
int3
push
cmpsb
outsl
shrl
xchg
stos
fstps
mov
and
push
add
addl
clc
sub
or
push
xlat
mov
aaa
adc
sub
sbb
sub
xor
je
mov
popf
enter
fmul
lcall
mov
sbb
inc
jg
sub
lcall
mov
lret
outsl
jbe
dec
stc
or
add
pusha
arpl
enter
sarb
push
pop
fxch
push
pop
xchg
iret
mov
int
sbb
fistl
lea
test
js
sub
inc
je
mov
or
inc
ret
clc
jbe
sti
jns
mov
jg
daa
adc
aaa
pop
mov
js
mov
ljmp
xorb
sub
fstpt
xchg
push
data16
aas
movsl
jno
mov
cmp
xor
ret
sub
jne
rclb
push
in
lea
sbb
mov
adc
cwtl
cli
test
pop
and
pop
push
or
scas
lea
je
mov
es
scas
aad
hlt
scas
stc
add
gs
pop
adc
mov
das
jo
dec
dec
or
out
scas
insb
testb
or
fcmovb
push
pusha
popa
push
pop
and
test
mov
scas
das
lcall
cmp
xor
loopne
adc
xor
mov
les
aam
dec
cmpsl
das
mov
bound
dec
ret
xchg
pop
mov
push
push
or
in
jbe
outsb
push
test
adc
jbe
stos
jl
insb
fsubr
pusha
pop
shll
inc
sarl
mov
jge
inc
push
add
fldenv
mov
xor
xchg
inc
xor
mov
xchg
sub
cmpb
ret
xchg
or
sbb
inc
adc
jge
mov
pop
scas
pop
pop
movsb
inc
repnz
pusha
add
push
rcl
stos
cmp
and
pop
and
cmp
and
lcall
pop
dec
mull
mov
inc
add
push
mov
movsb
dec
or
ljmp
sub
mov
ds
mov
xchg
inc
or
ja
fsubrl
pushf
and
jns
into
xchg
or
imul
testl
aad
mov
jne
imul
ret
jno
shl
dec
lea
loope
push
ljmp
ret
daa
sahf
jmp
rorl
pop
loopew
add
lods
and
icebp
enter
and
cmp
xlat
pop
inc
adc
mov
jo
dec
inc
lret
mov
testl
xlat
cmp
aad
push
push
mov
xor
xchg
xchg
es
sarl
mov
lcall
ficoml
ss
popa
mov
or
push
xlat
sbb
push
scas
cmp
clc
inc
inc
jp
xor
sub
icebp
add
jl
mov
jno
es
cld
jmp
fnstsw
jb
and
xchg
aad
push
arpl
push
jl
add
scas
mov
mov
dec
int3
add
mov
loop
testl
push
pushf
add
push
pop
dec
popa
inc
or
test
mov
fstpt
call
sti
add
jg
stos
mov
push
fidivrl
enter
sti
cli
std
mov
push
enter
aad
jo
jns
ficoml
xor
mov
call
movsl
jns
loopne
adc
cmp
clc
mov
shlb
sub
loopne
imul
inc
insl
je
daa
inc
mov
outsb
or
dec
inc
mov
mov
bound
inc
and
enter
push
in
push
insb
scas
daa
out
and
pop
or
and
loopne
lea
cmc
sub
push
inc
lahf
pop
push
ret
or
push
leave
lea
pop
jecxz
mull
inc
gs
or
sbb
xchg
daa
adc
movsl
daa
jecxz
dec
aaa
mov
js
inc
das
jb
lock
mov
setge
xchg
xchg
bound
aaa
or
xchg
xor
inc
std
addr16
cmc
push
pop
fmull
fcomps
aad
sub
adcl
mov
and
sahf
mov
and
mov
pop
jge
pop
or
or
inc
lea
xlat
loop
adc
jle
or
and
repz
mov
out
cld
push
pop
mov
cmpsl
sub
scas
jle
push
or
test
shrb
outsl
dec
out
and
arpl
loop
mov
lret
cmp
pushf
inc
jne
pusha
fsubr
mov
addb
push
in
mov
mov
aam
xor
pop
loop
dec
jl
push
xlat
lock
lret
adc
or
cmp
movsb
das
loopne
clc
fwait
imul
mov
lret
xor
inc
std
jecxz
fstpt
push
scas
dec
sub
dec
xor
push
jb
pushf
cwtl
shl
add
dec
dec
gs
testb
call
imul
cli
jmp
dec
clc
mov
mov
add
mov
push
pop
cmpsl
mov
inc
shlb
mov
xchg
jmp
sub
sbbl
mov
pop
js
cmp
loope
fistpl
dec
ret
aad
jne
rorb
adcl
ss
push
inc
nop
stc
subb
outsb
mov
inc
das
adc
out
xor
and
mov
or
mov
ss
and
push
cmp
mov
mov
incl
mov
inc
mov
add
or
sub
inc
adc
adc
dec
inc
jmp
outsb
mov
pop
mov
jns
daa
int
or
sti
fiadds
aam
fsubs
sbb
jmp
and
cmpsl
push
in
mov
inc
pop
xor
inc
push
pusha
popa
pop
frstor
jmp
flds
ret
inc
and
inc
test
cmp
lahf
andb
rcrl
test
ss
js
jle
xor
insl
adc
inc
pusha
xchg
orl
shl
lcall
leave
sbb
lret
dec
add
ficomps
cmpb
ja
mov
cmpsl
jg
sbb
dec
jbe
lret
bound
mov
cmp
sub
pusha
pop
adc
xchg
fldl
add
je
fnsave
cmc
pop
push
jmp
popl
or
pop
sub
fs
out
hlt
out
mov
stos
mov
push
gs
inc
test
sbb
xorb
pop
pop
pop
icebp
repnz
jno
and
jno
mov
imul
mov
out
pop
pop
jbe
incb
cmp
jmp
sub
mov
hlt
call
inc
xor
imul
pop
mov
loopne
add
ljmp
sti
addr16
aaa
adcb
pusha
imul
fprem
push
pop
arpl
dec
push
cld
aad
rorl
sub
or
shll
mov
push
or
test
js
xchg
cmpl
in
pop
call
lcall
ret
xchg
adc
inc
dec
cmp
sbb
fs
hlt
jne
insb
fstps
cs
push
mov
pop
and
mov
clc
and
inc
sbb
sbb
int3
lods
roll
fsubrp
sub
xchg
mov
loope
ss
adc
mov
sti
shlb
loope
pushf
jnp
and
jae
gs
lods
push
int3
xchg
bsf
xchg
sbb
iret
jo
js
jecxz
clc
cwtl
push
dec
cmpsl
cld
or
fs
mov
cmp
jl
ljmp
popa
jl
lahf
cld
pop
cs
mov
jnp
sbb
movsb
sarl
jbe
dec
mov
aam
shlb
ss
xor
pop
sti
inc
add
mov
xlat
sub
push
mov
push
push
dec
jne
mov
rcrb
add
push
or
add
inc
adc
or
jne
test
or
leave
jge
ljmp
gs
cld
scas
jne
and
xchg
adc
add
outsb
cmc
pop
xchg
jp
sub
or
sbbl
bound
cmp
std
ss
adc
fidivrl
mov
sbb
int3
jo
js
popa
mov
or
pop
es
jp
jo
cmp
out
mov
dec
inc
sbb
inc
pop
lret
into
pop
jmp
test
or
scas
mov
movsl
movsl
jno
add
into
ds
cli
lods
out
add
inc
arpl
scas
and
add
arpl
repz
adc
push
pop
jp
or
add
rorl
push
fs
loopne
pushf
mov
gs
subl
fwait
clc
sbb
mov
jecxz
pop
xchg
adc
iret
xlat
pop
aas
sbb
and
fisttps
loopne
adc
and
xor
out
call
int
add
lcall
xchg
xor
sbbl
sbb
mul
test
mov
fidivrl
pop
imul
cmp
lods
insb
lahf
add
loopne
jbe
jne
sbb
xchg
jmp
das
mov
scas
mov
divb
ja
dec
outsb
pop
das
std
lret
leave
push
gs
clc
xchg
and
xchg
dec
mov
sbb
cmp
lock
mov
mov
sub
sbb
int
lret
mov
dec
mov
mov
mov
std
jle
data16
push
push
jno
mov
in
repnz
xchg
xor
test
das
mov
xor
and
cmp
jg
xchg
imul
enter
addr16
jmp
data16
fcmovnb
outsb
xlat
adc
dec
push
or
cmp
mov
lretw
pshufw
sbb
mov
pop
shrb
pop
pop
push
std
mov
sbb
add
pop
sub
jge
cli
and
cmp
mov
cli
lods
xchg
adc
sbb
jl
sub
push
stos
jo
out
xor
jl
mov
mov
shrl
jp
xchg
xchg
pop
rclb
adc
sarb
jbe
jl
into
shll
add
push
push
push
add
imul
inc
scas
arpl
and
xor
sub
arpl
aas
lahf
mov
stc
mov
jle
adc
lods
daa
push
jle
jo
or
or
xchg
add
pop
fwait
in
ret
out
mov
dec
daa
aas
cld
test
into
repz
xor
and
sub
popf
addb
push
ret
jo
adc
cmp
daa
cmp
decl
or
adc
xchg
scas
sbb
insb
and
mul
add
sub
fwait
xorl
scas
imul
inc
arpl
lock
dec
loopne
stc
and
arpl
lret
gs
in
mov
orb
push
adc
addr16
lock
adc
mov
push
xchg
mov
test
push
daa
add
adc
cs
pop
ljmp
jb
mov
fwait
or
sbb
jne
or
mov
sub
pop
lock
in
jb
stos
pop
cmp
pop
add
pop
push
in
mov
jae
mov
ret
cmpsl
sbb
test
mov
cmpsb
push
adc
jae
pusha
stos
lahf
ds
outsb
jg
insl
dec
pop
ficompl
xchg
add
jp
cs
popf
mov
add
insb
and
rcl
mov
ret
jge
aaa
lods
mov
push
adc
jl
icebp
ja
xor
out
adc
mov
push
test
cli
imul
mov
scas
sbbl
mov
jbe
push
push
mov
inc
adc
or
call
dec
mov
test
sbb
lods
sahf
ja
inc
adc
pushf
fistpll
out
sahf
inc
in
sub
popa
mov
or
add
loop
fisubl
pop
cltd
je
cli
add
inc
or
test
adcl
popf
and
dec
dec
mov
xor
sub
or
adc
in
pop
stc
adc
mov
and
jge
ret
mov
mov
dec
xchg
pusha
add
xchg
jnp
xchg
and
ret
pop
mov
xchg
mov
es
out
push
and
and
fmuls
pop
ljmp
xlat
leave
xor
pop
jno
mov
xor
call
sbb
repnz
outsl
inc
dec
or
in
into
mov
xor
add
sahf
cltd
mov
and
add
mov
aam
out
mov
sahf
adc
mov
lods
push
shrb
pop
add
aas
jno
mov
aam
ret
inc
push
mov
into
rorl
inc
cmp
popa
inc
lea
clc
clc
adc
js
mov
stos
cwtl
push
add
shll
xchg
jns
imul
cmp
dec
cmp
cmp
dec
xchg
cmpb
cs
scas
pop
push
shrb
aas
faddl
cwtl
les
mov
cwtl
test
test
enter
add
mov
or
add
jle
test
add
push
jno
cwtl
std
jns
shl
xchg
add
sub
jecxz
inc
pop
pop
popf
das
js
push
lock
adc
ffree
ja
adc
cmp
movsl
mov
imul
mov
clc
lret
push
dec
stos
mov
jecxz
sub
pop
subl
or
in
or
jo
stc
lods
mov
nop
stos
into
xchg
hlt
ret
test
adc
out
xor
add
pop
push
jne
and
lock
outsl
aas
pop
inc
xchg
ss
inc
subb
jp
mov
scas
shl
outsb
mov
mov
shll
adc
push
jecxz
cmp
adc
mov
push
jp
xchg
push
mov
xor
lcall
hlt
fwait
jge
adc
mov
std
clc
call
scas
or
ret
add
pop
into
pop
pushf
out
mov
mov
pop
dec
aaa
or
fisttpll
xchg
jo
fcoms
inc
mov
imul
lret
xor
loop
xor
jne
xchg
cmp
cmp
cmp
das
mov
mov
dec
insb
mov
fdivs
jmp
xchg
xchg
sbb
xor
push
pop
dec
lods
mov
ret
shll
cmp
xor
jb
xor
dec
push
movsb
inc
pop
rorb
mov
lock
jae
xlat
mov
add
clc
mov
xchg
stos
mov
mov
das
and
push
jmp
dec
into
add
sbb
pop
addl
bound
xchg
adc
into
mov
and
xor
pusha
lcall
jg
jbe
adc
cmp
cli
sub
jbe
addr16
es
push
rcrb
rorl
inc
mov
fists
mov
addr16
mov
jp
lret
mov
or
adc
out
lock
xor
cli
and
cmp
lcall
aam
test
mov
jno
jle
and
and
add
rorl
add
sarb
dec
add
adc
adc
rorl
outsl
sub
dec
aas
rolb
xor
dec
dec
mov
loopne
repz
movzwl
lock
adc
mov
les
lock
lock
idiv
fwait
xor
add
cmc
cmp
sbb
adc
pmullw
mov
push
push
cmp
push
push
pop
test
xor
scas
inc
push
push
pop
mov
adc
leave
sbbl
add
ds
and
adc
sbb
adc
jbe
movsl
jecxz,pt
push
add
hlt
lock
and
test
sbb
fsubrs
aam
test
or
fistpl
cmpsl
fs
xlat
lahf
pop
fcompl
add
sbb
xchg
sub
inc
call
ljmp
add
es
mov
testl
pusha
jge
das
jge
clc
xchg
into
popa
clc
push
cltd
mov
add
lods
mov
mov
jmp
sarl
icebp
in
and
dec
mov
pop
inc
mov
int
push
xlat
mov
jae
test
popf
movsl
rcll
test
push
mov
fsubs
fiaddl
mov
adc
subb
shlb
aas
je
in
out
ficoms
lcall
xchg
jp
fistl
jg
jp
mov
sub
mov
add
adc
xor
pop
push
jbe
mov
fstpl
sub
push
cmpl
or
mov
ljmp
loopne
rcrb
dec
jp
loopne
stos
lcall
jne
test
mov
or
jmp
loopne
test
movsb
xor
xchg
add
ss
push
inc
loopne
adc
sbb
or
fcompl
ficomps
lret
in
fadd
pusha
faddl
lcall
inc
mov
pop
push
in
roll
and
mov
fs
stos
or
jbe
cmp
gs
aas
push
sbbb
dec
push
daa
and
inc
pop
fisubrs
flds
outsb
orl
repz
mov
out
das
jne
and
ret
inc
push
jbe
push
cwtl
lea
lea
mov
add
xchg
xor
pop
pop
mov
js
fsub
mov
jl
sub
pop
sahf
hlt
aad
xchg
sub
lods
pop
mov
adc
es
adc
pop
sub
mov
jb
xchg
adc
mov
notl
xchg
jbe
stos
inc
sahf
push
jno
xor
mov
mul
test
adc
mov
jmp
push
adc
fstps
pop
pushf
add
std
out
movsl
xor
fldl
aaa
mov
xchg
dec
int3
sti
mov
mov
jno
lock
test
mov
xor
stos
jo
inc
stos
shrl
cmp
pushf
mov
andl
test
mov
ss
xor
xchg
cmp
outsl
pop
xchg
mov
adc
adc
iret
inc
push
lock
loopne
push
mov
fildll
and
cmp
mov
mov
sbb
push
loopne
jge
clc
push
mov
add
add
loop
shrb
jmp
pop
mov
mov
mov
fdivrl
and
or
movsb
and
insl
lea
in
imull
cmp
lods
jo
mov
in
mov
cli
loop
xchg
jo
mov
pop
add
fsubl
les
push
pop
mov
pop
sbb
jo
clc
roll
pop
dec
lcall
ljmp
jle
mov
sbb
push
cmp
push
shrb
icebp
inc
out
data16
inc
adc
ljmp
cmc
xchg
inc
sbb
lcall
mov
ljmp
les
test
cmp
or
xchg
ss
pop
adcl
or
mov
les
add
scas
out
gs
aam
leave
leave
push
mov
and
cwtl
imul
vxorpd
data16
cli
push
mov
fdivrp
test
testb
test
push
xchg
xlat
mov
xchg
lea
jp
mov
xchg
enter
lahf
fucomp
leave
fidivrl
lahf
dec
inc
ret
loopne
inc
repnz
add
fsts
jnp
and
stos
mov
lds
xchg
mov
out
out
and
xor
sub
xor
lcall
adc
and
dec
push
frstor
and
aam
push
push
inc
and
xor
adc
mov
adc
xchg
clc
sub
pop
ret
sub
ss
ss
ret
jnp
rorb
aam
jg
add
mov
pop
cld
rolb
aaa
sbbl
dec
ds
scas
add
dec
sbb
sar
es
xorb
cwtl
subb
and
mov
pop
icebp
insb
push
call
mov
lods
movsl
ljmp
xchg
lods
imul
cmpsl
subl
push
add
sub
ror
cmp
pusha
push
stos
jmp
or
inc
jbe
insb
xchg
lcall
dec
jb
iret
push
cmp
cmp
jge,pn
fwait
push
sbb
lock
lret
adc
leave
sbb
aam
inc
das
inc
xchg
sbbl
push
jge
mov
pop
pop
dec
lcall
lods
and
in
mov
sar
push
add
call
pop
dec
pop
sub
sbb
pop
adc
cltd
repnz
inc
aaa
ret
daa
dec
int3
inc
cmpsl
cmc
loopne
mov
push
loope
pusha
por
icebp
add
inc
add
jle
fdivs
imul
fwait
insl
mov
mov
mov
mov
sbb
xlat
jp
jnp
sbb
jp
mov
shlb
push
push
ja
add
push
or
out
inc
mov
mov
xchg
jp
pop
stc
push
imul
iret
repnz
icebp
hlt
adc
adcb
xor
or
pop
cld
pop
orl
lds
mov
cmp
jo
jo
cs
pop
js
js
inc
push
test
jo
out
ds
adc
insb
mov
xchg
cmp
fwait
out
add
adc
mov
push
inc
in
call
xor
mov
rcrl
jns
mov
lock
sbb
add
inc
and
pop
outsb
mov
lods
or
xchg
mov
ret
pop
push
jbe
jge
cmp
pop
sbb
cli
shrl
mov
adc
cmp
jae,pt
rorb
adc
clc
outsb
push
inc
ret
jle
mov
jmp
and
sbb
cmp
adcl
je
rcrb
push
cmp
daa
icebp
mov
push
or
mov
movsl
mov
outsl
popa
pusha
movsl
mov
inc
aad
aaa
xor
sbb
lock
mov
and
jbe
mov
inc
xor
in
mov
movsb
in
xchg
fmull
js
push
or
stc
pop
push
dec
push
adc
cld
and
hlt
add
in
sar
in
pop
aaa
jp
jl
cmp
add
xchg
inc
and
cmc
call
enter
push
enter
aad
test
jp
and
movsb
stos
adc
jp
enter
mov
shlb
cmpsb
jo
cmp
mov
shll
jmp
mov
mov
out
orb
mov
ret
dec
ja
pusha
jge
sbbb
sar
xor
push
insb
sub
push
lods
xor
sub
data16
pop
push
mov
loope
push
xchg
xor
insb
mov
aad
lods
push
insb
mov
sub
jg
repnz
push
movsb
loope
jge
das
cs
pusha
xor
add
das
pusha
cwtl
adc
jl
mov
mov
dec
mov
mov
ljmp
test
lret
int
add
adcl
push
insl
cmpsl
orb
sub
jno
popf
rorb
dec
imul
xorl
cmp
sbb
push
rcrl
jo
pop
jg
add
clc
jmp
sub
push
xor
cltd
mov
popa
add
mov
loopne
movsl
xchg
push
push
push
mov
push
mov
hlt
push
add
lock
imul
cld
imul
xor
mov
mov
xchg
or
loop
dec
jne
pop
jns
fldl
fcom
inc
sub
in
cmpb
add
inc
loope
push
inc
repz
jnp
inc
xor
clc
mov
or
arpl
push
loopne
or
ds
dec
jge
sub
pop
cld
sub
xorb
mov
js
ds
and
cli
jecxz
into
sbbl
jmp
inc
inc
inc
jecxz
xor
jne
rcrb
dec
sbb
iret
cmpsl
sbb
xor
and
xchg
sbb
lret
mov
enter
ret
pushf
mov
pop
fmuls
ds
mov
and
xchg
xlat
inc
add
ds
push
sti
fwait
xchg
dec
pop
or
subb
lock
scas
adc
pop
test
fsubs
push
mov
push
imul
push
sbbl
es
jmp
ret
pusha
imul
lods
fsts
cmp
loop
pop
jmp
lea
push
inc
out
icebp
rolb
push
adc
push
fcmovu
add
test
adc
and
mov
dec
inc
inc
jle
or
mov
xchg
dec
out
dec
shlb
addb
add
jl
xor
push
loop
sbb
xchg
in
ret
dec
mov
jl
test
and
mov
push
mov
push
sbb
sar
stos
neg
pusha
push
addl
cmp
js
mov
lcall
repnz
insb
mov
mov
aad
sub
push
mov
out
jl
adc
mov
xorb
or
push
cltd
cmp
adc
mov
enter
mov
aas
jbe
adc
cmp
in
aaa
inc
sub
out
push
jge
mov
outsb
mov
test
fcomps
cmp
jmp
lock
sbb
pop
insb
jl
and
cmc
ret
mov
movsb
pushl
pusha
adc
xor
jge
cmp
popf
mov
fwait
icebp
add
bound
mov
out
sub
or
nop
cmp
ss
mov
adc
rcl
xlat
mov
ret
jle
xchg
shlb
push
xchg
inc
andb
das
mov
mov
imul
inc
fcompl
neg
lcall
push
ss
es
mov
or
cltd
or
cmp
sub
orl
and
pop
loop
cltd
movsl
imul
pop
xorl
mov
in
pop
push
dec
mov
jns
jae
xor
adc
daa
inc
out
cmc
mov
adc
jbe
aaa
bound
lret
xlat
inc
add
inc
stos
dec
adc
inc
inc
ljmp
adc
jecxz
push
or
or
lret
arpl
add
ljmp
sub
mov
mov
cmpsl
test
push
pop
or
out
loopne
push
outsb
pop
shl
clc
idiv
ficoml
in
sub
lock
sbb
push
mov
ja
adc
sub
mov
xor
xchg
xchg
movsb
cld
cmpxchg
rorb
rorl
sbb
popf
cmp
xlat
mov
in
push
push
insl
push
sbbl
xchg
mov
mov
cmp
push
rorl
add
ret
inc
sahf
push
or
cld
add
mov
jo
adc
xchg
sbbl
in
vcvtsi2sdl
loop
les
in
hlt
push
stc
jmp
push
xchg
lock
cli
scas
or
hlt
imul
js
addl
stos
xchg
popa
mov
cmpsl
mov
jmp
cmp
sbb
jnp
call
sbb
movsl
sbb
iret
fs
lods
xor
outsl
lods
jp
push
pop
xor
ret
pop
cmpsl
mull
or
call
out
popf
and
mov
xchg
sbb
loope
lock
inc
and
pop
xor
xchg
xchg
xchg
mov
cmpsb
pop
imul
test
stos
add
xor
mov
shr
sbb
sbb
enter
ljmp
push
push
and
push
add
js
inc
fimuls
lods
and
adc
int3
popa
mov
jbe
lret
cmp
shrb
fwait
test
nop
iret
push
lock
add
hlt
gs
mov
mov
cmc
scas
adc
xor
cmp
test
mov
xlat
mov
addb
lds
aam
lret
stos
outsl
pushf
jnp
cld
xor
pop
je
adc
sti
mov
in
push
xlat
mov
lret
jp
cwtl
out
icebp
aas
lock
lret
add
inc
test
idivl
dec
cmc
dec
sarl
leave
pop
mov
rclb
arpl
faddl
rorl
out
sbb
ficoms
jl
test
xor
call
shrl
xchg
dec
test
cmp
mov
mov
sbb
out
mov
loopne
lods
dec
pop
jo
xchg
jle
sbb
hlt
xor
xor
int
mov
mov
mov
jnp
add
fistps
or
sub
jecxz
mulb
imull
shlb
cli
fnstcw
add
lret
jp
js
mov
xor
inc
dec
jae
cmp
jno
mov
ss
jp
jb
lcall
sahf
subl
jle
gs
jge
arpl
lahf
orb
xorl
xchg
jge
xchg
mov
call
addr16
xchg
or
jecxz
cmpb
int
jmp
lea
pop
shl
aaa
add
jns
test
inc
inc
adc
in
repnz
mov
fcoms
jo
addr16
add
mov
sbb
pushl
and
lret
jg
lods
jns
sub
shlb
repnz
xchg
mov
insl
mov
jl
inc
in
imul
hlt
mov
rcrb
test
lret
dec
sub
fistps
daa
mov
popl
shll
aas
into
adcl
xor
js
fimull
mov
repnz
es
xchg
mov
mov
cli
push
loope
pop
pop
les
cmp
adc
sub
movsl
xor
insl
mov
mov
js
jbe
fsubs
leave
push
testl
mov
or
sub
jo
cmp
fistl
loopne
test
cwtl
aaa
arpl
jbe
add
call
pushf
adc
loopne
jbe
mov
lahf
adc
in
mov
ss
add
bound
jae
cmp
inc
pop
nop
addr16
rcll
repnz
jecxz
fsubs
loope
push
in
xchg
push
pop
fld
pushf
pop
jo
mov
push
mov
hlt
ficompl
or
in
cli
xor
or
mov
daa
adc
insl
daa
push
lcall
mov
int
in
sub
out
mov
dec
cmpsb
sbb
jle
outsb
xchg
mov
xor
sub
in
call
adc
push
jp
mov
or
push
inc
ds
jo
shrb
xchg
sub
or
enter
jge
aam
ljmp
cmp
push
jno
lods
addr16
mov
js
pusha
jge
daa
add
popa
mov
mov
cmc
shlb
jp
cmpb
mov
lea
testb
or
pop
fistpl
jmp
push
push
sahf
mov
cmp
cs
into
and
out
call
sbb
sub
xor
pcmpgtd
xor
inc
dec
inc
aam
cli
icebp
stc
pop
lcall
push
loope
jg
adc
cwtl
shl
nop
imul
jecxz
sbb
stc
pop
jl
xor
je
push
pop
sti
lahf
orb
dec
inc
cld
xor
adc
jno
scas
enter
sbb
out
adc
notl
mov
frstor
leave
dec
popa
sbb
call
cmp
add
divl
and
mov
movsb
add
cs
cmp
aad
mov
xchg
xor
aaa
mov
lock
imull
push
loope
dec
mov
lock
imul
pop
stos
jl
ds
clc
xorb
and
pop
inc
push
loop
loope
shll
stos
ret
iret
lret
test
xor
movsb
loope
sbb
or
adc
adc
mov
orb
xor
mov
mov
icebp
ret
stos
xchg
iret
dec
push
es
push
das
mov
movsb
add
adc
jno
xor
xor
dec
pop
mov
cmp
scas
xchg
sbbb
cmpsl
dec
xor
cmp
jne
add
lds
out
mov
cmpb
inc
adcl
out
andl
or
ljmp
movsl
xchg
cmpsl
int
push
iret
jno
cmp
cmp
push
lock
dec
test
xchg
loope
lret
loope
inc
sarb
js
fcomps
and
xchg
pop
jle
mov
iret
pop
gs
sub
push
repz
cs
std
hlt
or
or
and
push
pusha
test
pop
insl
test
aam
out
xchg
mov
mov
pop
sarl
cmpsb
jl
inc
in
xchg
lea
push
scas
jl
and
cmc
stc
test
in
sub
test
jle
xchg
mov
imul
and
dec
ret
daa
cmp
aad
dec
sub
sbb
lods
test
mov
jmp
mov
sbb
cltd
out
ss
push
aam
jle
outsb
out
ret
lds
mov
ja
in
js
mov
scas
shrl
pop
inc
xlat
scas
xchg
pusha
inc
scas
jnp
or
or
sub
fidivrs
out
dec
ficompl
sub
mov
in
rcrb
aad
and
xchg
insb
and
pusha
clc
insb
insb
mov
jno
sahf
mov
stos
add
cmp
hlt
push
fs
jmp
cmp
insb
je
mov
xchg
mov
mov
clc
je
popa
push
push
clc
add
xchg
loopw
iret
mov
mov
test
pop
data16
in
cmp
fimuls
ficoml
pushf
xchg
call
pop
fcoml
cmp
push
xlat
mov
jecxz,pt
test
sub
sub
pop
daa
iret
cmc
sahf
arpl
inc
sub
xchg
in
xchg
push
mov
push
sbb
jg
push
imul
push
int3
ret
xchg
adcl
push
mov
jge
lods
sbb
cmp
mov
dec
sub
ljmp
mov
iret
int
pop
xor
mov
cmpsl
xchg
stos
or
inc
insl
sbb
xor
cmp
sub
aaa
lods
mov
sub
xchg
cmpsb
mov
daa
cld
add
je
outsl
xchg
cmp
in
cmp
add
lds
inc
pushf
icebp
sub
sbb
mov
ss
hlt
xchg
shl
shrl
fwait
sub
xor
dec
add
and
or
mov
in
cmpsl
mov
std
mov
adc
mov
jno
rorb
popf
xor
lods
notb
shll
aam
xchg
ja
inc
xlat
add
aaa
push
xor
in
mov
push
flds
fistl
add
inc
addps
ret
push
push
fwait
xor
pushf
stos
push
sbb
cmp
xlat
mov
repnz
iret
dec
mov
cmpsl
stos
icebp
int
cli
push
jmp
je
cltd
inc
insb
mov
imulb
xchg
sarl
adc
xor
xchg
rorl
aad
mov
pop
lods
inc
push
pop
push
out
mov
repz
out
add
mov
push
xchg
xchg
add
inc
add
and
pop
cs
fwait
test
adc
jae
insl
push
and
xlat
loopne
mov
add
sub
xchg
add
lcall
push
or
lret
mov
push
push
pop
les
das
push
imul
scas
in
dec
pop
jo
lret
inc
jmp
mov
cmc
mov
jle
das
iret
sbb
sub
repnz
shrb
push
cmp
call
pop
mov
in
push
repnz
push
push
jg
and
add
lea
loopw
inc
pop
add
xchg
add
imul
les
mov
sbb
push
mov
shll
push
mov
jge
hlt
mov
pop
dec
adc
lods
icebp
add
sbb
push
or
mov
sahf
notl
in
cmpsb
pop
jns
ss
ret
imul
cltd
js
scas
je
mov
roll
jl
mov
ret
in
add
cwtl
inc
push
sub
in
aam
aad
pop
pslld
in
out
mov
in
or
imul
and
and
lahf
incl
lea
icebp
inc
sbb
adc
mull
rcll
jae
popa
push
das
stc
pop
xrelease
adc
lods
js
test
loopne
adc
es
in
mov
add
in
sbb
lock
gs
adc
jg
cmp
jne
xor
test
inc
mov
and
das
and
dec
imul
loope
cmp
and
insl
nop
mov
loopne
add
inc
cmpsb
cmc
inc
or
jo
xchg
add
sar
mov
mov
ja
sbb
insb
inc
mov
push
jmp
xor
inc
pop
in
dec
ds
fwait
mov
adc
dec
jb
push
or
mov
xchg
inc
push
fmul
roll
sti
xchg
call
mov
cmpsb
jno
adc
stc
adc
mov
test
cmp
xchg
pop
loope
rcr
cmp
test
cmp
cmpsb
mov
clc
jne
orl
sbb
sbb
or
repz
sarb
or
xor
in
dec
and
pop
ds
into
lahf
test
sahf
cmp
xchg
xchg
nop
cmpsl
fiaddl
xchg
rcll
add
mov
cmpsb
add
aam
lret
add
mov
mov
push
fisttpll
mulb
push
das
xchg
aam
push
mov
pop
sbb
add
jns
cmp
jbe
inc
add
jle
pop
in
or
adc
inc
ror
jge
cwtl
and
je
or
jg
jno
js,pn
dec
inc
push
ret
mov
adc
popf
fcoms
std
movsb
lcall
daa
jmp
test
push
out
int
orb
es
push
adc
loope
mov
sbb
fdivr
and
add
andb
cli
jl
mov
mov
cld
ss
dec
test
mov
adc
cli
fisttps
jae
sbb
jne
add
dec
ret
xchg
or
cmp
and
xor
add
frstor
mov
bound
sbb
cmp
xchg
add
xchg
loope
or
shrb
das
roll
cmp
add
hlt
inc
mov
jge
and
adc
je
dec
out
sbb
push
jp
xchg
addr16
popf
nop
mov
ljmp
push
repnz
dec
lods
push
mov
shrl
jle
xor
dec
std
iret
xchg
je
xchg
loopne
aam
jne
add
nop
repnz
pop
mov
mov
ljmp
mov
add
sbb
ss
mov
pop
lret
cmp
fildll
ja
mov
xlat
mov
fstpl
jne
xor
or
sahf
pop
outsl
orl
test
cs
mov
xor
push
repz
imul
movsbl
xlat
jg
and
fldenv
mov
mov
rcrb
out
push
jl
sbb
sbb
lcall
xorl
inc
ds
push
outsl
aas
daa
jo
test
rcll
jp
out
push
stc
cli
scas
inc
dec
cwtl
lea
mov
fsubr
cmpl
shll
fdivrp
sbb
movsl
dec
shlb
jae
movsb
cltd
cmp
fs
and
xlat
rolb
or
psubb
sub
les
jmp
rcll
push
js
xor
cs
and
push
stos
inc
clc
pop
push
add
leave
in
lods
aas
mov
adc
xchg
insl
jbe
inc
and
sbb
cwtl
or
ljmp
gs
leave
cmp
add
add
sbb
int3
and
pop
fisttps
int3
sbb
mov
dec
add
das
mov
jmp
cmp
pop
movb
test
push
jae
scas
cmp
aaa
sub
stos
cwtl
fmulp
dec
or
adcl
lret
popa
inc
bound
fwait
dec
xchg
push
fwait
cmc
rol
mov
push
adc
je
sub
adc
mov
sub
in
shrb
test
pop
adc
shlb
mov
xor
pop
sbb
pop
pushf
pop
xor
push
fsubrp
out
adc
pop
js
cmp
loopne
jo,pn
call
movsb
push
xchg
test
xor
pop
push
scas
push
inc
mov
push
xor
mov
push
movsb
sub
inc
lret
pop
icebp
call
inc
aam
int
xchg
dec
std
push
xor
push
hlt
lret
cld
iret
mov
cmp
pop
mov
sbb
jae
std
int3
adc
pop
mov
push
mov
movsb
sub
ja
sub
xor
pop
out
movsl
pop
push
es
mov
mov
lea
lret
pop
lock
imul
xor
jge
cmpsb
arpl
adc
ds
and
cs
pop
cli
dec
shr
sar
fwait
popl
mov
test
movaps
push
pop
out
dec
jb
pop
lahf
insb
enter
cmpb
popf
mov
ret
xlat
sahf
jbe
test
ss
xor
sbb
jp
in
cmp
xchg
loope
mov
and
push
insl
or
xor
pop
loop
or
cs
adc
xchg
iret
mov
out
adc
rclb
cmp
loopne
sbbb
outsb
jo,pt
mov
loop
push
mov
clc
les
ja
roll
push
call
iret
xchg
mov
rorb
add
dec
or
fsts
sahf
dec
mov
scas
imul
fisttpl
mov
sub
sbb
int3
push
xlat
adc
mov
shrl
cmp
push
imul
iret
xchg
aam
jae
push
test
xchg
mov
insb
movsl
mov
das
lret
rorb
adc
ss
inc
inc
xor
dec
push
and
aas
push
das
jle
inc
popa
or
pushf
xchg
push
sbb
mov
sub
mov
xorl
pop
add
cmp
xchg
loope
mov
sub
dec
mov
stc
je
add
es
shlb
pop
repnz
lods
insb
ja
movsl
sbb
popf
test
jbe
inc
mov
mov
xchg
loope
jo
stos
add
flds
rcrl
fs
sbb
shlb
hlt
mov
iret
dec
and
push
mov
repz
and
xchg
call
ljmp
xchg
cld
or
push
xchg
cmp
inc
movsl
daa
or
imul
mov
stos
je
arpl
mov
sub
je
and
mov
outsb
jbe
or
inc
loope
xor
stc
test
das
inc
mov
mov
ret
cmp
mov
and
inc
jp
xchg
pusha
xchg
cmp
inc
jg
notb
xor
popl
push
mov
and
add
cmp
inc
inc
pop
std
xorl
fdiv
lds
lods
inc
push
lock
subl
cmc
fdivr
jnp
push
cmpsl
lret
cmpsl
inc
lods
or
fdivl
dec
push
mov
insl
sbb
mov
aaa
enter
aaa
add
inc
sub
mov
cmp
or
mov
mov
cld
test
sbb
scas
mov
jmp
fs
fcoms
int
adc
scas
in
or
sbbb
lock
je
movsb
mov
jle
lret
lcall
push
movb
add
cmc
dec
pop
aas
sbb
inc
or
mov
into
leave
inc
shrl
aas
dec
mov
xchg
jbe
jle
mov
ret
mov
subb
pop
jle
sbbb
popf
push
ljmp
mov
inc
or
xchg
sar
and
add
dec
xchg
icebp
out
js
les
sub
lods
jp
das
mov
push
dec
in
daa
outsb
sbb
popa
imul
cld
in
iret
shll
inc
push
jge
sub
test
inc
repz
or
inc
fst
xor
lea
sub
shlb
js
std
adc
push
pusha
push
xor
or
pop
pxor
xor
mov
or
movb
or
fiadds
pop
or
aas
rcl
inc
sahf
or
cs
out
and
mov
loope
sub
fisubl
loopne
out
sbb
test
fldl
in
inc
xchg
mov
sbb
xchg
test
out
mov
mov
sub
fsubl
cmc
xchg
push
scas
fisubrs
adc
jo
fisubrl
lea
mov
xchg
outsl
add
insb
sbb
enter
mov
out
push
pusha
in
xchg
pusha
lretw
mov
xchg
cmp
gs
fmuls
xor
push
stos
jp
or
jns
push
sub
jae
ret
push
repz
sbb
jns
loop
push
dec
fsubs
repz
rcrl
fldenv
cltd
dec
cmp
popa
mov
int
clc
jbe
jmp
cmp
xchg
call
aam
cmp
jecxz
sbb
call
outsl
add
mov
xor
inc
sbb
and
and
push
ds
xchg
sub
sub
xor
push
scas
xor
sbb
dec
xchg
and
insb
adc
ret
loop
mov
or
cld
test
repz
fdivrl
jb
iret
or
pop
ret
fneni(8087
iret
or
jb
inc
shll
push
xor
mov
mov
fstps
sbb
jmp
ret
ds
je
in
inc
ljmp
imul
cmp
jmp
adc
mov
add
hlt
aas
loope
inc
push
mov
js
aaa
das
outsb
imul
ret
xchg
xchg
or
dec
jp
push
jg
pop
inc
xlat
lret
lods
orb
and
fwait
lock
jge
inc
test
cmp
jecxz
clc
mov
rolb
enter
xor
jecxz
int
dec
adc
jno
mov
cmpsl
pop
or
xor
adc
mov
xor
aaa
pushf
ss
aas
jne
push
cmpl
js
or
ret
cmp
outsb
das
stc
cmp
mov
push
pop
js
leave
or
or
outsb
aaa
icebp
fcmovnb
ficoml
xor
push
stc
das
and
pop
leave
adc
xor
add
aad
or
loop
push
add
cli
hlt
ss
mov
and
lods
aaa
xchg
pushf
mov
std
js
arpl
pop
mov
push
fs
inc
mov
adc
sbb
mov
insb
push
cmp
xchg
adc
fwait
lock
out
jnp
inc
sbb
jmp
mov
pop
test
lods
fstps
or
sbb
mov
mov
loopne
mov
inc
pusha
sarl
cmp
imul
lods
arpl
xchg
add
jg
movsb
mov
xor
imul
out
inc
repnz
cmc
cltd
aas
push
adc
int3
daa
pop
pop
ja
das
jle
xor
prefetcht2
dec
sub
jbe
daa
jbe
jg
jl
dec
mov
pop
or
notl
mov
loopne
push
movsl
lret
cmp
cs
pop
scas
sub
nop
das
add
xlat
rcr
cmp
leave
stos
inc
in
cmp
enter
jo
jnp
sub
mov
pop
jae
ja
fsubrl
xchg
sub
fcompl
cs
loop
add
loopne
adc
les
lods
out
icebp
popa
loop
pop
dec
xor
adc
movsb
xchg
rcl
jmp
mov
mov
cmp
ror
sti
sub
cmc
lods
push
cmp
mov
cld
mov
lock
push
pop
xor
xor
adc
add
mov
stos
sbb
popa
lahf
mov
and
add
xor
rol
je
add
adc
jb
pusha
cmp
movsl
in
fbstp
push
push
jo
mov
sbb
mov
pop
sahf
incb
fcmovu
push
sti
cwtl
inc
je
in
and
pushf
mov
das
mov
xchg
push
mov
sahf
lea
nop
rclb
push
inc
push
mov
mov
xchg
inc
or
pop
test
std
dec
faddl
jo
clc
or
xchg
add
lods
adc
mov
aam
mov
sub
mov
sti
add
and
imul
jge
mov
and
push
ret
rolb
movb
push
ljmp
mov
adc
mov
jns
enter
lds
adc
in
adc
lahf
xchg
test
andl
fisttps
stos
xor
push
mov
in
push
test
fwait
xchg
dec
nop
xchg
imul
inc
cmp
out
or
push
cs
inc
lcall
xor
gs
add
sub
test
bound
jp
dec
js
xor
add
add
in
push
push
dec
ret
push
push
bound
push
mov
mov
lds
cs
icebp
add
lds
js
add
lock
mov
xlat
out
jecxz
push
cld
lods
test
cmp
scas
xchg
push
or
lods
xchg
xadd
push
mov
mov
roll
es
fidivrs
fwait
sub
or
int3
popf
pushf
sar
sub
pop
sbb
es
mov
inc
fucomi
insb
xchg
or
mov
mov
mov
shll
lock
fwait
ds
shrb
jno
lds
popf
pop
xchg
adcl
inc
cmp
sbb
shlb
cmpsl
fiadds
cli
test
aad
cs
data16
push
fwait
xor
loopne
sarl
es
xchg
stc
sbbb
aaa
add
and
js
lock
inc
jb
cmp
je
ds
pop
push
inc
aas
push
lret
adc
dec
push
and
or
jp
test
aad
add
push
add
pop
jne
dec
jo
jne
or
popa
add
pop
fdivs
mov
insl
enter
or
inc
subb
sbb
in
mov
testl
pushl
movsb
outsb
js
sar
sub
or
cmpsb
fs
cmp
lods
into
daa
aas
fadds
mov
outsb
push
pop
mov
in
cld
cmpsb
stos
push
mov
ret
mov
pop
andl
sti
xor
xchg
stos
ret
mov
add
sbb
je
daa
mov
je
xchg
lods
or
xchg
adc
call
rclb
xsaves
adc
cmp
xor
clc
xchg
in
pop
jp
out
xor
cld
ja
or
jmp
fwait
out
sbb
sbb
lret
scas
jb
mov
adc
shlw
ret
rcrb
mov
add
jle
lret
in
out
push
movsl
movsb
outsb
outsl
jno
xchg
xor
cmc
cmp
pop
pop
or
fidivl
mov
pop
add
pusha
aas
mov
jmp
or
jmp
add
and
pop
imul
rcll
jmp
push
rcll
pop
mov
mov
or
les
xchg
jle
xor
cmpl
fldenv
iret
sub
mov
mov
mov
jecxz
cld
ss
aas
jno
sbb
test
stos
jmp
or
mov
or
rcr
push
add
inc
mov
ret
lar
cmp
mov
out
loope
negb
test
das
js
mov
jle
js
scas
fwait
push
or
sub
add
jbe
inc
loop
addl
xor
mov
nop
mov
testl
mov
shrb
sbb
adc
dec
pop
icebp
mov
movsl
mov
mov
mov
insb
insl
jmp
inc
in
movsl
call
xchg
xor
pusha
pop
or
push
or
jbe
mov
mov
xchg
bound
lods
mov
add
icebp
inc
add
movsl
pop
and
ljmp
lds
shrl
sub
cmp
and
jle
mov
dec
pop
rcrl
push
insb
rorl
push
pop
mov
subb
subb
lock
outsl
sbb
jecxz
insb
in
dec
clc
inc
paddusw
outsl
icebp
test
and
mov
xchg
xchg
xor
jp
add
movsb
pop
outsl
int
rcr
ret
pop
cmp
xchg
cmp
add
jl
jno
inc
in
jbe
push
scas
or
scas
rclb
fists
mov
inc
mov
mov
ret
lret
sbb
mov
cld
push
ds
fsubrl
cmpl
mov
aas
and
ret
jnp
or
outsb
pusha
fimull
xchg
jmp
icebp
xor
sub
sub
cmc
outsl
cmp
push
cmc
jge
add
sbb
cmc
es
fisttps
idivl
mov
xor
loopne
pop
adcb
imul
cwtl
scas
sub
add
and
mov
sbb
mov
jno
or
cmp
fcoms
dec
lds
or
dec
in
and
lret
bound
jl
std
push
push
jmp
movsb
shl
into
daa
xor
and
inc
lcall
push
inc
cli
rolb
loop
insb
add
sub
lcall
or
scas
sarl
add
mov
push
jg
shlb
jno
mov
add
jno
loope
stc
or
inc
popf
jg
jge
mov
push
add
pop
test
hlt
mov
sub
out
cmp
adc
loopne
lret
xor
stos
addr16
mov
or
sbb
mov
push
rorl
hlt
xor
inc
adc
and
and
jo
jp
pop
push
in
dec
sub
mov
xlat
xchg
lock
outsl
movsl
test
cmp
sbb
cmpsl
shlb
xor
cmpsb
or
inc
daa
hlt
xchg
hlt
or
add
lahf
jne,pt
jle
inc
addr16
mov
bswap
outsl
and
mov
bound
sarl
outsb
scas
inc
cmp
mov
mov
adc
scas
cli
jne
or
mov
sbb
push
sub
and
push
mov
jno
lret
addl
mov
xor
int3
fisubs
jg
mov
inc
ret
or
subl
clc
cmpsl
cs
lock
add
cmp
jg
bound
iret
lods
mov
push
sub
and
mov
inc
sbbl
orb
int3
and
jbe
insl
arpl
add
mov
popl
xor
mov
scas
mov
enter
xorl
data16
shlb
pusha
lcall
inc
push
xor
dec
outsl
dec
mov
daa
add
mov
pop
cmp
mov
movsl
pop
pusha
dec
mov
cmc
cmp
sbb
xor
movsb
lret
shrl
decb
pop
scas
test
and
inc
push
push
pop
sbbb
into
cmpsb
jae
pop
popa
mov
adc
pop
and
sbb
add
sbb
sbb
cltd
mov
imul
ror
dec
std
fcmovne
cmc
dec
fwait
stc
enter
dec
pop
lcall
push
addr16
sbb
jo
test
dec
mov
arpl
mov
out
mov
adc
cmpsb
aas
clc
jge
add
inc
mov
jmp
cmp
xor
jae
jae
stc
cs
in
lds
mov
and
jle
test
push
test
call
mov
bnd
jmp
xchg
sarl
fstl
and
cmp
push
fistpll
adc
pusha
push
pop
xlat
xchg
les
and
fmul
dec
loopne
xchg
enter
lock
test
lock
jbe
fsubrs
pop
push
lods
or
rorl
pusha
jo
loopne
cmc
lretw
insb
imul
in
das
int3
jle
jb
das
loopne
dec
movsl
jmp
aaa
adc
dec
call
pushl
add
test
insb
dec
test
mov
out
adc
add
out
mov
mov
jmp
inc
pop
cmp
hlt
in
scas
push
xchg
enter
ja
inc
inc
shll
sub
push
mov
xchg
ds
pop
push
add
jno
gs
clc
xchg
les
cmp
std
orl
stos
pop
jl
and
dec
ret
aam
sbbb
pop
xchg
fmuls
ja
roll
lods
pop
dec
das
pop
push
test
inc
xor
outsb
jg
bound
aam
inc
cmp
notl
ds
cmp
mov
xor
xor
scas
add
fs
test
push
shll
in
or
clc
add
popf
push
test
test
in
ret
repnz
je
mov
dec
cmp
fwait
mov
mov
jmp
push
bound
clc
dec
pop
negb
lcall
push
outsb
mov
cmp
jecxz
filds
insb
fisubs
aad
mov
jge
pop
sbb
int3
les
ss
xchg
xor
adc
inc
push
cmp
mov
jmp
sarl
pop
xchg
loopne
mov
pop
pushf
daa
arpl
cmpsb
stos
or
ss
pop
pusha
sub
addr16
sti
aam
xchg
js
rol
rolb
in
sbb
jo
or
adc
les
movsb
dec
orb
aaa
loop
add
or
mov
mov
inc
in
inc
in
mov
adc
mov
push
outsl
aad
jno
and
cmp
roll
adc
jecxz
aas
cli
insb
cmp
in
mov
jmp
add
rcr
je
aad
mov
xlat
jmp
sti
out
cmp
in
xor
call
out
jmp
mov
jns
insl
leave
shrb
pop
pop
cmp
xor
mov
mov
lret
shld
inc
and
iret
push
ss
fistl
push
call
cmpb
stc
aam
js
imul
cli
adc
or
test
pop
nop
xchg
xchg
ret
mov
int3
sbb
pop
push
and
mov
jg
push
xchg
xor
rclb
lock
adc
repnz
mov
mov
out
xchg
stos
jne
cmp
push
ret
mov
jecxz
sub
loopne
inc
mov
loope
mov
xchg
pusha
xorb
movsl
ljmp
sub
cld
sar
pop
push
fsubp
cli
add
in
mov
xchg
out
shufps
xor
mov
out
adc
test
cmp
fwait
scas
ret
push
fimull
lea
pop
ds
aam
push
sti
mov
jno
xor
pop
addl
repz
cmc
push
popf
sub
push
and
mov
mov
and
dec
fldcw
jecxz
or
lods
dec
loopne
adc
sub
movsl
adcl
jmp
addb
mov
xor
les
fistpl
shlb
mov
pop
cs
xor
and
and
add
dec
inc
inc
adc
or
sbb
mov
andb
add
mov
sub
add
adc
in
shl
lret
ljmp
loop
add
or
pop
mov
lods
pop
mov
test
daa
loopne
push
jae
loopne
pop
or
inc
or
xchg
jecxz
mov
pop
ud1
aam
mov
lahf
fidivrs
xor
lret
mov
shl
pop
pushf
dec
mov
mov
mov
pop
push
xor
cs
mov
add
addr16
pusha
cmpl
jnp
push
pop
outsb
imul
cmpsl
adc
xor
int3
add
arpl
and
lds
mov
cld
popa
push
sar
loope
nop
fs
xor
mov
rorl
xchg
xor
shlb
fimull
ffreep
je
inc
jae
add
xchg
idivb
mov
subb
lock
mov
cmpb
lods
inc
es
lds
repz
push
and
jb
sbb
push
pop
jb
int3
cmp
xchg
jp
pop
test
negb
lea
and
mov
adc
pop
mov
js
call
shlb
icebp
rcrb
xchg
dec
push
jl
dec
push
lret
aam
nop
inc
adc
pop
test
jno
cmp
leave
jne
add
add
je
jle
lock
pusha
hlt
sbb
call
ja
loope
loopne
mov
push
or
pushfw
push
push
push
xor
jo
std
popf
sbb
jne
loopne
rolb
and
mov
js
dec
shrl
ja
inc
cmp
adc
or
cltd
roll
fdivrs
adc
cli
push
fmull
bnd
and
mov
mov
js
rcll
dec
loop
xor
cmp
sbb
add
inc
in
inc
adc
adcb
add
jae
cwtl
inc
fadds
or
xor
push
inc
js
xorb
dec
add
clc
cmp
popl
fdivrl
in
dec
je
mov
popa
pop
shr
loop
ffreep
fildl
push
pop
jo
xchg
gs
leave
out
cwtl
call
je
fsubrl
sbb
sub
icebp
dec
stos
jnp
outsl
addb
pop
jae
xchg
push
test
mov
daa
ret
ffree
pop
jb
lock
cmp
jecxz
xchg
and
xlat
sub
int
or
imul
ffree
insb
jo
add
inc
cmp
dec
test
orl
xchg
sahf
std
call
jb
jg
arpl
jno
mov
push
push
test
pop
mov
aas
stc
and
sbb
dec
sub
cmp
hlt
xchg
jo
insb
mov
and
jnp
and
clc
cmp
int3
mov
lods
iret
jno
bound
cmp
loope
lock
push
sbb
pop
push
leave
pusha
sub
fadds
fldenv
or
push
in
push
enter
loope
xchg
mov
jg
pop
pop
mov
push
mov
sub
or
test
int
sub
mov
xor
rcrl
cmp
mov
popa
xchg
sbb
ret
js
push
mov
daa
test
xchg
push
mov
push
loope
repz
cltd
adc
push
clc
test
and
sahf
jb
sub
sbb
pop
stos
jnp
push
cmpsb
cmp
jg
dec
mov
xchg
arpl
pop
shll
ss
sub
sub
call
jl
sbb
stos
xchg
cmp
xor
sbb
sbb
mov
mov
adc
mov
out
jp
push
int3
addl
outsl
sbb
or
call
or
jbe
testl
repnz
and
inc
mov
jno
in
pop
and
pusha
popa
xchg
icebp
push
sub
cmpsl
stos
stc
dec
push
sbb
out
aas
inc
movsl
std
aam
mov
subl
leave
add
sub
subb
lock
pop
into
test
movsl
xlat
push
sti
jnp
jne
push
lods
insb
pusha
aam
dec
sbb
clc
push
call
enter
enter
mov
jecxz
vcmpss
outsb
pop
push
pop
movsb
adc
mov
jb
mov
mov
flds
or
push
mov
xor
add
or
pop
lahf
or
dec
sar
frstor
adc
arpl
push
add
jbe
cmpsb
jae
cs
test
dec
lret
inc
addl
cmpb
adc
cmp
test
jle
pop
mov
or
hlt
pop
pop
fcmovb
iret
or
push
push
cmp
sub
xlat
jecxz
add
sbb
xchg
adc
and
push
pushf
pop
aaa
add
mov
mov
inc
and
hlt
pop
sarb
xor
ljmp
divb
adc
ret
insb
push
mov
sbbb
inc
adc
inc
aam
incb
add
add
sbbb
les
jg
jl
daa
testw
ss
out
in
mov
mov
in
mov
pop
jecxz
xchg
in
mov
xchg
stos
jno
pusha
xchg
sbb
loope
push
pop
pop
ds
js
pop
iret
aaa
sbb
jecxz
sahf
scas
add
pop
gs
je
enter
lea
pop
popf
fcmovbe
adc
in
sub
mov
test
sbb
int
call
jno
arpl
mov
push
dec
popa
mov
lahf
mov
ljmp
sub
sbb
mov
cmp
and
sbb
outsl
push
jmp
xor
mov
scas
js
scas
jnp
cmp
mov
add
std
push
push
sbb
shlb
inc
mov
or
jl
or
out
cli
repnz
hlt
pop
and
mov
mov
pop
jb
sub
insb
jecxz
cmpsb
and
nop
fstl
cmp
in
nop
add
inc
ret
xor
xchg
js
and
pop
push
lds
nop
pop
jno
outsb
mov
orl
ss
out
sub
and
and
loope
inc
jp
adc
std
sbb
cld
int3
out
mov
pop
jno
adc
adc
and
sub
or
cwtl
into
xchg
push
mov
add
insb
adc
jmp
shlb
or
negb
sti
jecxz
loopne
push
jb
dec
xchg
dec
xor
xchg
xchg
test
xchg
bound
bound
mov
cmpsl
xlat
inc
xchg
pop
pop
outsl
shrb
lods
add
adc
sar
aas
add
push
mov
dec
sub
xchg
mov
push
and
shrl
into
arpl
jg
and
and
out
pop
pusha
leave
sub
sti
out
inc
inc
shll
rcl
dec
lea
test
dec
std
test
jbe
insl
cli
test
sbb
sub
daa
orl
xor
mov
mov
mov
das
in
dec
cmpsb
fistl
call
inc
xchg
mov
add
and
daa
les
dec
ss
pop
mov
xchg
push
rorb
or
mov
dec
xchg
sub
xchg
xor
cld
cmpsb
out
lock
push
lea
shrl
insl
add
out
and
in
sahf
xlat
popa
or
mov
mov
mov
lock
mov
cmp
lds
and
xchg
add
adc
pop
and
cmp
cmp
and
shrl
mov
jae
or
mov
incl
std
lret
cmpsb
mov
sbb
push
push
push
rclb
add
jbe
daa
loope
jno
cmp
pop
push
lods
mov
iret
mov
mov
sub
aad
mov
jg
js
jne
mov
test
lcall
mov
andb
jl
clc
push
pop
cltd
mov
cmp
lock
push
shrb
imul
inc
rcll
pop
dec
xchg
mov
push
and
pop
and
out
dec
loope
mov
dec
mov
dec
imul
rclb
adc
shll
jl
xchg
inc
fadds
xchg
arpl
adc
xor
adc
das
xchg
ljmp
in
xchg
icebp
cs
sbb
inc
rcll
icebp
and
mov
dec
sahf
dec
rcr
jp
cmp
std
mov
es
xchg
and
jp
lods
insl
and
add
pop
cmc
mov
jae
lea
xor
cwtl
sub
dec
xchg
arpl
mov
pop
fwait
movzbl
rorl
pop
push
xor
and
sbb
push
cmpsb
cmc
les
ret
les
push
inc
dec
fcompl
ret
aad
repnz
ds
iret
mov
pushf
and
imul
mov
cmp
bound
ss
pop
mov
out
scas
mov
ds
fs
addr16
lock
push
into
xor
call
lods
and
and
addb
inc
data16
xor
jle
mov
js
shr
xlat
test
add
ds
stos
jne
das
jo
pop
ds
gs
ljmp
jb
xchg
dec
push
repnz
xchg
stos
jo
sub
ds
xor
push
or
mov
push
pop
mov
mov
mov
fstpt
out
cmpb
jge
inc
push
and
cmp
add
orb
mov
pop
sahf
pop
cmpsb
fcomps
insb
and
dec
loope
stc
sub
lock
dec
data16
mov
xor
fadds
push
scas
insl
add
pop
lods
mov
pop
fdivrp
adc
in
mov
jmp
sbb
mov
mov
ret
cs
roll
push
ret
and
adc
or
mov
sbb
push
daa
jecxz
rorl
loop
loop
add
mov
mov
test
jecxz
cli
xor
jno
xchg
out
sbb
lea
cmpb
mov
aas
cmp
cmp
call
icebp
nop
push
aaa
jns
sbb
add
rorl
mov
jne
push
adc
inc
and
add
stc
in
adc
jmp
xor
or
movsb
imul
shlb
dec
movsl
dec
push
lods
mov
aaa
jns
sub
pop
xchg
lods
movb
mov
sbb
mov
clc
leave
pop
pushf
sbb
or
pop
stos
push
ss
movsl
fsubrl
es
jo
inc
imul
stos
clc
fsubl
push
mov
cld
mov
fdivl
jecxz
pop
pop
sbb
mov
loope,pt
cmc
aad
enter
cmpxchg
lcall
pop
ss
outsl
loopne
mov
mov
push
inc
xor
cmp
push
sbb
jnp
and
fldl
jle
aam
sbb
jmp
dec
xchg
call
jecxz
call
xor
inc
jl
cmp
jo
dec
stos
out
rcrl
mov
jge
test
and
outsb
loopne
jle
subb
sbb
fsubrl
pusha
sbb
dec
in
pushf
jg
std
outsl
xor
xlat
stc
cmp
popa
xchg
xchg
jnp
inc
or
add
dec
pop
or
ficompl
cwtl
adc
add
jns
loop
sbb
addr16
sub
loope
or
push
mov
or
sahf
movsb
pop
in
xorl
in
jecxz
add
dec
jle
mov
cmpsl
jno
repnz
jo
jmp
adc
test
lcall
inc
dec
xlat
or
aaa
mov
cwtl
or
popa
rorl
mov
jns
icebp
lret
jb
cmp
pop
decl
add
shll
cmp
arpl
mov
outsb
inc
sti
sbb
sbb
jb
adc
jle
mov
ljmp
scas
xchg
dec
pop
sbb
cmp
mov
ss
pop
cmp
movsl
mov
inc
js
out
dec
cli
mov
mov
fs
js
jl
jge
fs
lods
push
sbb
pop
and
inc
or
loopne
mov
arpl
negb
inc
or
mov
scas
addl
ret
adc
xchg
iret
das
jecxz
nop
push
nop
js
cli
std
andb
cmp
sahf
iret
mov
jecxz
scas
sbb
into
pop
insl
cmp
fisttpll
or
sbb
xor
bound
outsl
dec
scas
divb
pop
jns
movsl
jne
in
push
jno
pop
lock
mov
test
xchg
das
cmp
jo
stc
out
aam
call
cmpsl
lea
jecxz
mov
mov
pop
xchg
clc
xor
rclb
lds
sub
cwtl
pop
cmp
lods
sbbl
nop
lods
subl
clc
mov
out
push
jg
xor
inc
mov
pop
rclb
jle
sub
xor
int
out
add
pop
jle
inc
sbb
les
arpl
pop
jmp
cwtl
jbe
or
cmpsl
cmp
test
ret
add
shrb
mov
add
arpl
cmp
or
adc
dec
aam
imul
adc
ljmp
jp
inc
cmp
test
loopne
ljmp
cmpl
movsl
jb
into
in
rcr
push
mov
fdivl
mov
inc
xor
movb
mov
push
xor
insl
ljmp
mov
mov
sbb
push
ss
xchg
das
mov
jno
out
push
push
repz
scas
dec
ss
xor
mov
ss
ds
jmp
inc
rorl
mov
jl
popaw
jb
jg
xchg
outsl
insl
push
int3
daa
pop
pop
xor
xor
mov
or
cmc
adcl
add
pop
cwtl
loop
sbb
sub
loopne
lds
xor
aas
pop
add
push
js
jb
mov
dec
mov
sub
imul
lock
test
test
xchg
sahf
xchg
test
sbb
inc
fildll
jl
mov
int3
jecxz
paddsw
cmc
shlb
fnsave
mov
dec
fisttpl
sub
test
out
arpl
test
push
mov
fwait
inc
mov
and
pop
sub
push
rcrb
xchg
aaa
ret
jb
mov
sti
pop
sbb
outsl
xor
add
je
dec
push
addl
xchg
jmp
lahf
leave
adc
xchg
sbb
cmp
loope
mov
sub
orb
cmp
arpl
jle
xor
push
add
sbb
adc
enter
mov
push
call
je
nop
cmp
pop
pop
cmp
jle
add
xor
adc
cmp
lock
rcrb
sbb
jo
ret
mov
xchg
dec
xor
push
loopne
fdiv
loopne
and
xchg
or
and
pusha
xchg
daa
shrl
xor
imul
or
imul
test
xorb
jmp
add
xchg
aas
fwait
test
nop
or
xchg
mov
xlat
mov
cmp
mov
ds
fstl
sbbb
xor
and
xchg
cmc
cmc
int3
dec
xor
loopne
shr
insl
js
sbb
xorb
leave
jno
gs
inc
jmp
and
cmp
jl
in
rolb
loope
pop
out
push
insl
icebp
test
inc
outsl
lahf
outsb
cmpsb
ljmp
arpl
pop
push
inc
outsl
cmp
orb
hlt
dec
sub
cmpsl
sub
pusha
pop
out
push
cmovl
push
xchg
arpl
sub
jo
push
sbb
mov
cmp
inc
lcall
jae
xchg
movsl
stc
ret
sbb
fcmovb
movsb
push
pop
and
ja
orb
das
out
movsl
dec
inc
inc
fdivs
jmp
arpl
xchg
sub
insl
adc
fidivs
iret
adc
fldl
cmp
adc
out
adc
adc
mov
rol
or
cwtl
lea
into
in
jno
cmp
mov
inc
xor
scas
jge
xor
pop
cwtl
or
jns
mov
mov
adc
ja
jns
adc
xchg
nop
rclb
stos
mov
enter
pusha
cmp
and
imul
sub
stc
orl
adcb
xchg
lods
push
push
stos
push
or
adc
imul
jb
lods
je
test
dec
mov
repnz
xor
jb
push
cmp
cli
loope
pop
fidivrl
lret
movsl
add
sbb
movsl
pop
jo
and
push
es
jge
lock
sub
mov
mov
daa
sub
jge
xchg
ss
pop
and
mov
les
jbe
mov
icebp
es
jo
stc
inc
aad
out
jecxz
outsb
mov
inc
add
adcb
inc
outsb
addr16
adc
loope
and
jne
shlb
add
push
ret
push
adc
pop
fs
and
or
sbb
dec
cmc
cmp
push
mov
mov
mov
loop
call
insl
sub
fchs
jnp
xchg
iret
or
cmp
enter
jmp
int
push
lock
or
pop
repnz
pop
loopne
pop
xchg
sbb
xchg
sbb
call
popf
xor
in
xchg
pop
mov
mov
pop
dec
clc
sti
je
mov
rcll
mov
cmc
mov
adc
lock
stc
and
lods
aad
cmp
sbb
xor
dec
mov
mov
loop
hlt
shrl
shrb
jle
jp
bound
jg
enter
loop
nop
clc
mov
iret
clc
test
cmp
aam
shlb
sub
cmpsl
insl
xor
mov
xor
scas
push
shl
add
shr
xchg
lea
xchg
mov
js
aam
inc
ret
jecxz
mov
int3
mov
loope
pop
pusha
lods
imul
adc
filds
push
push
jns
loopne
ds
inc
add
and
jmp
push
add
les
pop
sbb
xlat
loope
xchg
push
and
cmp
ror
jo
lahf
out
mov
daa
pop
pusha
mov
push
rolb
and
mov
pop
loopne
inc
cmp
pop
lods
out
mov
pop
pusha
outsb
cli
or
ds
in
insb
incl
sbb
ret
xor
imul
aam
adc
mov
insb
in
mov
inc
rclb
es
jecxz
push
xchg
leave
push
data16
push
sbb
inc
xchg
shlb
popf
push
inc
test
test
pop
fdivrl
add
rcr
aam
push
xor
lcall
or
add
lahf
pop
push
and
pop
call
fcoms
mov
inc
sbb
pop
xor
aam
pop
and
test
out
jmp
sahf
movsb
mov
clc
fidivrs
mov
lahf
push
pop
cmp
dec
push
jo
and
xchg
xchg
stos
mov
mov
ljmp
and
daa
hlt
sub
int
xor
jp
mulb
btrl
leave
dec
loope
cs
repnz
out
sarb
das
xor
jnp
sub
les
out
aad
sbb
push
cmp
adc
les
sbb
jg
mov
adc
mov
aam
imulb
add
add
push
inc
hlt
movsb
ds
aad
stos
jns
or
pop
push
shlb
cltd
repnz
out
dec
inc
imul
mov
mov
dec
mov
adc
jp
aaa
cld
fidivrl
and
popf
mov
add
jno
cld
pop
or
adc
mov
adc
divb
scas
and
xor
sub
movb
stos
cltd
jp
mov
mov
in
push
cld
repnz
push
pop
jbe
mov
pop
add
cmp
sbb
enter
and
sub
or
jge
mov
push
mov
pop
dec
enter
jo
shlb
xchg
clc
push
imul
jg
and
insl
lods
xor
push
inc
incl
and
out
and
push
push
sarl
sbbl
xor
dec
loope
xor
push
pop
jmp
sub
outsb
loop
hlt
das
pop
push
sbb
in
cmp
push
call
inc
cmc
jnp
xchg
js
xchg
mov
mov
je
push
fdivl
movsl
shrl
outsl
lds
jb
shll
ljmp
call
aam
adc
mov
js
dec
pop
je
push
sti
pushf
cmpsb
incl
ss
dec
iret
sbb
jecxz
dec
int3
and
adc
xchg
mov
stc
loopne
lea
adc
stc
ja
imul
repz
lods
aas
orb
icebp
enter
add
or
add
pusha
push
into
pop
and
test
sbb
push
js
push
mov
sub
les
mov
pop
inc
sub
gs
call
inc
iret
fiadds
icebp
subl
xchg
mov
lret
ror
xchg
or
out
add
push
movsl
push
in
push
aas
jmp
sub
les
jp
jnp,pt
dec
sbb
pop
sub
movlps
sbb
sub
aam
push
add
or
out
pop
out
test
loop
shlb
or
imul
push
fmuls
mov
and
pop
icebp
add
stc
loopne
movsb
jno
sub
popf
mov
push
jge
imul
nop
sahf
lock
loop
jb
jecxz
jecxz
xchg
ss
sub
mov
jg
inc
and
mov
es
sbb
fsubp
clc
add
sbb
cmc
sub
inc
mov
insb
sbb
dec
mov
icebp
call
ret
enter
scas
ja
jo
xchg
test
xchg
pop
jne
sub
stos
inc
fwait
andb
call
les
das
ret
out
pop
mov
xor
mov
testl
out
loop
outsb
arpl
push
jns
pop
xchg
and
add
andb
jge
jmp
lret
fistpl
icebp
sbb
test
je
js
mov
flds
hlt
mov
or
fst
adc
xchg
ss
xchg
adc
xchg
arpl
mov
pop
ss
rcrb
push
aaa
test
jo
sarb
repz
xor
sub
sbb
or
je
lock
sbb
adc
cld
sbb
movsb
xor
das
jl
add
movsl
or
mov
bound
jl
cmp
mov
or
push
cmp
jo
mov
sub
ficoml
lret
sub
adc
xorl
push
pushf
jmp
ss
push
mov
outsl
and
inc
mov
ljmp
jecxz
sbb
add
mov
adcl
pop
jmp
adc
pushf
pop
mov
mov
sbb
jnp
fwait
xor
enter
sub
or
dec
imul
push
dec
aam
mov
stos
test
push
dec
xlat
sahf
pop
dec
cmp
cmpsl
repnz
loope
mov
cmp
inc
inc
xchg
mov
push
je
mov
fadds
mov
or
in
jne
add
fadds
pop
adc
push
sbb
stos
insb
jle
pusha
mov
cld
xor
push
or
push
fdivrl
cld
lcall
or
lods
out
or
dec
cwtl
dec
loopne
lock
call
sbb
out
or
fs
inc
insb
xchg
loope
mov
add
ljmp
or
iret
test
cmp
shlb
stos
xchg
out
in
add
sub
sbb
cmp
imul
jecxz
sbb
inc
repz
dec
xchg
clc
xchg
fisubl
mov
adc
daa
cmp
testb
outsl
cs
push
shlb
sub
sub
and
iret
out
test
cmpsl
add
add
rcr
jae
mov
sbb
and
stos
sub
ja
mov
jb
leave
ss
in
lahf
xor
jmp
adc
jmp
adc
sub
sub
lret
sbb
mov
mov
pop
xlat
pop
lock
pop
add
push
jecxz
xor
mov
lret
cmp
add
mov
cmpsb
aad
cmc
int
cs
pop
out
fildl
jns
inc
mov
pop
add
mov
jp
sub
inc
sahf
out
sti
adc
popl
aad
scas
cli
arpl
mov
enter
and
xor
icebp
sbb
mov
movb
insl
jmp
ja
js
pop
js
dec
sbb
add
out
lahf
repz
push
lods
mov
add
addl
test
call
iret
xor
mov
mov
inc
mov
sbb
sahf
clc
dec
js
ja
enter
ret
test
or
ljmp
jle
sbb
cmp
repnz
imul
xchg
xchg
std
add
idivl
xchg
leave
sub
fbstp
jp
mov
mov
add
add
pop
andb
push
or
adc
cmp
jmp
pop
testl
js
leave
add
rcr
xlat
dec
out
cmp
pop
fisttps
in
mov
sbb
fdivs
mov
jecxz
dec
pop
ds
pop
lods
or
and
test
testl
cld
sbb
fisubrs
pop
loop
jp
mov
insl
pop
push
outsl
sub
sarl
adc
sbb
roll
add
jns
mov
xor
into
loop
mov
inc
xor
call
nop
arpl
pop
dec
ret
adc
outsl
in
dec
push
or
insl
xor
sarl
les
cmp
cltd
movl
pop
mov
mov
ljmp
push
dec
test
pop
cli
clc
push
roll
or
mov
xor
push
icebp
pop
jno
out
mov
es
add
adc
push
push
sbb
lahf
mov
popa
add
mov
int
fmuls
jle
or
sbb
pushf
in
lods
xchg
aad
mov
mov
sub
jle
je
lods
jge
fadd
mov
outsb
cmp
cs
int
aas
mov
movsl
je
jl
dec
or
push
movsb
dec
es
and
pop
or
mov
sbb
cs
cltd
cmpsl
adc
inc
in
je
mov
cmpsl
xchg
lea
cmovo
lcall
bnd
ret
iret
inc
dec
jle
addb
mov
adc
fs
pop
mov
cli
or
adc
push
outsl
adc
rol
adc
pop
or
xchg
mov
std
mov
testb
dec
rol
rcrl
sarl
shrb
sti
sbb
push
jno
pushf
or
xchg
pop
in
mov
jae
nop
jb
mov
sarl
mov
rcll
mov
loop
xchg
ss
cmpsb
mov
aam
mov
repnz
shrl
jae
xor
push
jbe
arpl
popf
lcall
jge
pop
dec
mov
into
push
xchg
cmp
cltd
and
lods
imul
push
mov
push
sub
stos
xor
inc
outsl
jle
and
mov
icebp
push
inc
and
pushf
enter
or
push
call
aaa
cmpsb
add
mov
mov
lods
adc
out
insb
lret
aad
mov
pop
mov
ds
popl
popa
pop
push
or
lods
and
sub
mov
je
pop
adc
clc
cwtl
ret
xchg
cmpsb
xor
movsl
mov
push
lods
mov
shll
xchg
lret
cmp
add
fcoms
cwtl
lods
xor
ds
decl
cmp
sub
inc
or
cmp
dec
inc
sbbb
fildll
pop
enter
pop
xorl
adc
testl
adc
mov
in
adc
mov
jmp
fisttpl
push
outsl
rcl
push
push
jmp
sub
jmp
cltd
mov
andl
stos
dec
jle
lahf
push
xor
xor
lret
test
add
mov
mov
mov
xor
xor
pop
shr
outsl
test
mov
mov
cmp
mov
mov
push
jae
xchg
dec
xchg
and
stos
pop
cmp
jl
mov
sahf
test
push
cmp
add
enter
lods
jbe
in
popf
mov
repnz
in
test
movsl
cltd
mov
jne
dec
cmp
pushf
rcll
push
sbb
sub
cwtl
test
xor
mov
inc
loop
stos
cs
stos
fbld
dec
arpl
js
or
dec
mov
ret
mov
repnz
out
xor
ret
push
test
jp
in
scas
bsr
sbbl
add
mov
mov
rcl
sbb
adc
jmp
mov
dec
mov
ss
scas
adc
xor
scas
cmp
pop
stos
jae
add
add
add
roll
push
imull
out
frstor
push
jge
xchg
pop
stc
lock
xor
mov
push
pop
test
fcompl
incl
cmc
mov
mov
xor
cmpsl
aaa
aam
aas
push
push
imul
repnz
mov
fdivl
adc
ficoms
inc
jb
sbb
decb
and
aam
lahf
ret
mov
sub
pop
inc
std
in
push
push
and
jmp
pop
push
push
inc
mov
or
insl
in
mov
push
or
fwait
mov
xchg
fisttpll
aaa
rcl
stos
push
clc
dec
shrb
mov
jp
movsb
adc
sub
fs
push
aam
das
inc
sub
loope
and
insl
push
cld
adc
jl
push
sbb
xchg
dec
adc
cltd
loop
sub
sbb
jbe
mulb
push
stc
add
in
cmpsb
outsl
push
test
int
movsb
adc
pop
ds
in
test
test
es
pop
lock
push
add
push
xchg
cld
and
pshufw
hlt
das
or
stc
dec
dec
enter
jnp
or
cltd
push
test
out
push
add
push
mov
pop
aam
call
leave
ds
mov
xor
xchg
pop
or
stos
dec
push
xor
xchg
mov
lock
dec
in
inc
sahf
adc
idivb
add
xchg
sbb
scas
je
sbb
or
push
push
mov
test
sar
mov
nop
les
fildl
pop
sub
pop
jo
sarb
dec
test
or
fwait
and
cmp
cmpsb
xchg
pop
and
xor
lock
or
jbe
jl
xorb
and
add
sub
es
add
cwtl
xor
les
add
jb
inc
arpl
inc
mov
dec
push
shll
loop
rorl
and
js
jl
call
jo
sbb
and
out
flds
cmp
push
fsub
pushf
xchg
cs
rcrl
add
fadds
xchg
mov
orl
insb
adc
xor
push
or
pop
in
mov
loop
ss
mov
sub
jmp
push
dec
push
pop
sub
fisubrs
inc
sub
js
fisttpll
pop
jne
xchg
sbb
fmull
pop
mov
xor
outsb
pop
fidivs
stos
shlb
or
dec
pusha
or
push
test
and
push
loop
ljmp
adc
neg
sbb
aas
sysenter
call
cmp
ficompl
lods
mov
je
or
stos
jo
movsl
fldlg2
call
sbb
xor
mov
cmp
sbb
loopne
push
jnp
or
jecxz
shll
pop
ds
push
pop
push
cltd
inc
das
pop
jg
sub
je
fisttpll
dec
cmp
mov
aaa
sub
cmp
mov
and
adc
fildll
rcll
cmp
push
outsb
xchg
ja
sbb
aas
xor
arpl
dec
fists
cli
pop
shll
xchg
jmp
incl
subl
ret
add
dec
inc
sub
xor
imul
insb
les
decl
push
movl
lea
int
call
push
mov
inc
push
rorb
daa
ds
xor
loopne
add
or
pop
je
nop
jg
add
lods
andb
xor
inc
int
lock
repnz
rclb
aas
mov
lret
and
xchg
add
and
mov
mov
ljmp
mov
add
push
stos
data16
jp,pn
stos
insl
out
pusha
xor
xchg
xlat
int
pop
out
mov
test
stos
stc
cmp
mov
fidivs
into
popf
and
rorb
or
lock
aad
call
aam
clc
mov
mov
mov
inc
pusha
sub
repnz
pop
pushf
cmp
mov
inc
sbb
xchg
sub
sbb
mov
ror
inc
xchg
into
jge
mov
bound
lahf
test
lock
push
xor
shlb
mov
mov
jns
push
inc
adc
outsb
dec
mov
push
je
sbb
das
mov
mov
or
push
rorb
inc
fdivrl
jp
cs
fs
lahf
rclb
xor
pop
int
js
pop
jmp
sbb
sbb
sub
les
into
pop
adc
dec
loopne
es
adc
lret
jno
xchg
sbb
push
ds
cmpsb
stc
jnp
lahf
les
loope
pop
sbb
cs
sbb
test
mov
sub
fadds
adc
mov
pop
jne
movl
mov
aad
jmp
int
ss
push
cmpsb
add
clc
or
add
cs
rcl
xchg
je
xor
fisttpl
sbb
push
je
adc
jbe
xchg
inc
xor
shlb
sbb
jg
add
or
sbb
cmp
adc
shrb
out
and
stc
cs
xor
pushf
inc
shll
add
cmp
pop
sbb
sub
add
xchg
je
adc
in
xchg
daa
in
fdivr
dec
add
inc
ljmp
std
pop
adc
lods
push
ss
add
sub
popf
inc
inc
xor
cltd
adc
scas
pop
jle
call
sub
jmp
ficoml
or
mov
xchg
mulb
sbb
add
loope
fdiv
leave
adc
addl
out
mov
mov
jo
mov
lea
nop
ss
push
xchg
add
jne
cmp
jno
mov
in
jle
call
rcrb
insb
or
xchg
pop
arpl
mov
js
loope
inc
push
test
xor
outsl
mov
outsb
repnz
sub
movl
insb
mov
mov
mov
jle
sub
adc
mov
sbb
cmp
out
xchg
lods
push
dec
aas
dec
mov
cmp
add
mov
xlat
pushf
fsubs
loope
pop
mov
or
je
nop
hlt
sbbl
sarl
pusha
mov
mov
lds
jge
std
add
add
test
leave
xchg
inc
adc
inc
ds
sub
call
adc
cwtl
cmp
xor
fs
nopl
cld
stc
mov
add
enter
int
mov
push
mov
lock
in
pop
mov
sub
enter
xchg
pop
add
movsl
push
shlb
stos
sub
shr
addr16
pop
or
testb
shll
dec
insb
arpl
dec
sbb
add
sbb
std
adc
or
cwtl
jbe
out
sub
sub
mov
clc
cmp
int
dec
sub
aaa
mov
xor
mov
enter
insb
shlb
inc
adc
das
dec
jo
subb
push
xor
lret
and
mov
movsl
inc
repnz
lea
or
or
sbb
xchg
mov
test
push
and
mov
and
mov
inc
data16
xchg
cmc
mov
ja
mov
or
push
sub
outsb
pop
mov
fsubs
sbb
out
bound
ljmp
insb
dec
xchg
cmp
mov
sub
mov
sbb
sahf
or
push
or
loope
jno
hlt
push
mov
push
xor
jae
pop
xor
push
test
ret
in
test
jmp
pop
rcrl
into
cmp
inc
out
enter
mov
mov
push
rclb
outsb
add
loopne
push
mov
xchg
addb
dec
addr16
das
mov
das
dec
outsb
sbb
push
mov
and
cmp
sbb
lcall
je
loopne
push
inc
cmp
xor
inc
repz
inc
jne
shrl
mov
je
mov
sbb
jp
call
dec
mov
mov
jge
pop
xchg
rorb
pop
xchg
sbb
pop
mov
jmp
push
push
mov
das
inc
test
push
xbegin
clc
and
push
pop
jno
sbb
cld
inc
xchg
pusha
lahf
movsl
jg
dec
mov
stos
repz
add
ficompl
sbb
pop
jns
ret
adc
pop
jae
mov
lea
loopne
and
fiaddl
fisttpll
je
sbb
jmp
sbb
or
aam
jecxz
xchg
jo
in
clc
icebp
cmp
dec
sbb
loopne
add
push
dec
outsl
lcall
mov
inc
jb
jb
jle
fisubs
clc
pop
push
add
es
sbb
clc
in
mov
fnstsw
adc
out
sub
push
push
cwtl
sbb
push
push
pop
inc
lds
mov
mov
mov
in
jbe
sub
inc
xchg
in
push
adc
sub
mov
ds
or
mov
dec
inc
mov
sbb
and
hlt
rcl
and
jg
stos
decb
mov
int3
push
cwtl
int
push
stc
sub
ret
jg
sub
adc
adc
or
push
push
pop
pushw
add
mov
xchg
clc
pop
outsb
test
lods
mov
mov
push
push
pop
push
cmp
cmp
add
arpl
sbb
push
addb
sub
push
jne
decb
dec
push
das
jl
mov
mov
rcrl
test
pop
das
stos
lahf
push
mov
mov
push
aam
inc
mov
lock
xchg
inc
push
or
loopne
xor
xor
imul
sub
adc
ficoms
adc
sub
lock
pop
insb
jmp
cmp
pop
ss
fistpll
mull
xchg
add
and
call
jg
xchg
popl
cmp
mov
data16
sub
mul
leave
loopne
adc
or
cmp
pop
movsb
cwtl
or
das
pop
pop
out
rcr
lcall
and
lock
insl
in
push
mov
mov
adc
loope
cmc
push
jl
lods
dec
add
int
jg
cmp
xor
push
jbe
dec
mov
push
sub
pop
push
add
lahf
jle
add
orb
aam
andb
push
imul
add
mov
inc
add
jb
push
daa
push
mov
inc
test
dec
xchg
data16
adc
cmp
sbb
das
push
sti
shrb
fdivs
stos
push
cmp
arpl
dec
pop
mov
dec
nop
js
push
nop
jecxz
inc
arpl
jp
test
xor
jl
call
shrl
adc
cmpsb
xchg
push
stos
dec
mov
add
pusha
sbb
aad
dec
clc
scas
in
cli
adc
xchg
cmpsl
nop
repnz
adc
jns
cmp
jg
inc
lret
mov
pop
mov
lcall
pop
mov
dec
sub
dec
xor
xchg
cmpsl
lahf
cltd
cmp
jge
xlat
adc
xchg
lret
cmpsb
xor
mov
cmp
adc
mov
or
pop
dec
push
dec
imul
fidivrl
adc
cmpl
cld
xchg
adc
lds
cmc
dec
iret
lret
add
test
sub
stos
jle
jns
mov
pop
ja
inc
testl
dec
push
movsl
leave
push
xchg
sahf
add
das
movsl
add
in
fcoml
addr16
lahf
mov
jns
call
jb
sub
jl
pop
jo
loope
pop
pushf
mov
leave
outsl
sar
mov
jecxz
mov
xchg
and
fldz
test
or
add
xor
ret
pop
cwtl
jle
pop
shl
test
in
add
pop
mov
inc
testl
mov
movsb
adc
movsl
loopne
xor
jle
dec
lcall
pop
add
push
jbe
outsb
push
inc
je
push
into
push
lock
pop
imul
insb
icebp
shll
test
icebp
cmp
jbe
and
inc
and
xchg
adc
ret
lcall
jb
in
jg
mov
imul
mov
imul
arpl
fsubrl
pop
jg
outsl
insl
jp
cmp
lea
mov
jo
ret
add
cmp
jg
jo
pop
std
repnz
je
dec
inc
gs
enter
loope
and
xor
mov
scas
jle
data16
das
mov
scas
dec
aas
pop
fnstcw
adc
pop
sub
xchg
fs
filds
sbb
mov
push
cmp
inc
jl
dec
or
insb
lcall
mov
fs
mov
mov
clc
movsl
pop
push
les
dec
fs
enter
cmp
imul
sub
je
jnp
out
rorb
inc
jnp
jge
les
fldl
mov
mov
xchg
sbb
movb
add
sub
cltd
cmp
pop
dec
pusha
sbb
xchg
cld
shll
mov
push
mov
movsl
scas
js
cli
pusha
sub
hlt
sub
rclb
rol
test
sbb
add
loop
hlt
push
sbb
repnz
adc
jo
arpl
pop
sub
clc
xorb
cld
push
pmaddwd
and
lods
mov
or
mov
mov
mov
jns
sbb
mov
pop
sub
jae
xchg
xlat
push
jge
add
es
jo
inc
sub
add
mov
ret
sub
sbb
mov
inc
rcl
xor
jl
out
mov
arpl
addb
dec
mov
dec
repz
mov
push
fsubl
add
or
cmp
or
add
pop
sub
adc
data16
outsl
mov
test
mov
repnz
add
stos
cmp
jmp
add
inc
sbb
mov
xlat
stos
lods
inc
popf
add
imul
adc
inc
sbb
xor
xlat
rorb
push
and
adc
jmp
pop
rorb
out
sub
pushl
inc
jg
imul
xchg
push
add
or
leave
pop
and
adc
fs
add
cmp
movsb
jno
adc
jl
add
movsl
fnstcw
in
pop
cmc
push
and
jmp
movb
inc
call
mov
mov
mov
loop
cmpsl
je
test
adc
inc
add
fwait
fwait
out
ret
mov
xchg
out
or
push
lods
or
xor
mov
jbe
jmp
ret
rolb
add
pop
xor
sub
xor
les
or
nop
xor
incb
mov
scas
lock
orl
push
stc
dec
add
inc
test
or
add
mov
arpl
and
mov
inc
pop
js
jae
repnz
mov
fwait
mov
loopne
cmpsl
pop
ret
xchg
mov
ret
xchg
in
inc
fsub
and
rorb
add
cmp
pop
mov
jnp
push
jg
dec
lret
push
dec
jne
aad
xorl
popa
xchg
ljmp
shr
inc
mov
adc
or
mov
jp
mov
daa
test
cli
jo
cli
jmp
inc
pusha
pop
jo
adc
inc
mov
adc
pop
out
adc
mov
hlt
sbbb
jp
roll
fsubrs
mov
xor
sbb
lods
nop
out
mov
shll
cmp
mov
bnd
xchg
mov
cld
mov
popf
test
loop
enter
sarb
dec
xor
movsl
push
pop
bound
xor
push
cmp
mov
js
xchg
jno
pop
jecxz
or
jno
and
add
pop
jno
and
je
sarb
fisubrs
add
cli
sbb
dec
adc
sti
dec
push
outsb
jno
push
mov
adc
loope
test
and
xor
xchg
les
and
subl
jbe
jg
movsb
push
pop
jmp
dec
inc
gs
fiadds
testb
mov
jo
push
rol
xchg
insb
or
push
mov
ficompl
int
divps
sar
jo
dec
add
add
stos
call
mov
adc
or
push
cmp
bound
xor
arpl
sub
mov
and
dec
jp
loope
shll
sbb
sub
dec
push
and
push
mov
jns
idivb
loop
data16
mov
sbb
cwtl
jno
and
or
push
sbb
int3
hlt
push
stos
add
or
les
add
sbb
pop
inc
fucomp
movsb
je
push
dec
adc
arpl
mov
mov
add
dec
repz
les
mov
std
xor
bound
test
add
fcmovnbe
jecxz
xchg
or
pop
in
ljmp
negl
add
in
clc
cmp
dec
iret
ja
aam
stos
andb
sub
jo
cmpsl
dec
sbb
cmpb
fcoml
sub
and
or
dec
nop
add
dec
inc
mov
hlt
scas
jmp
pop
movsl
es
data16
xchg
push
sub
sbb
mov
incl
aaa
push
lret
sub
pusha
or
xchg
and
add
inc
and
ja
sarb
shlb
sti
inc
xlat
call
fs
mov
inc
addb
push
sbb
out
or
clc
sbb
jb
xchg
popa
inc
xbegin
jl
pop
push
iret
mov
push
cltd
xchg
bound
scas
lock
mov
lahf
mov
add
movsb
mov
pop
pop
cmp
add
sets
adc
loop
pop
movsl
jns
lds
sahf
mov
push
in
inc
push
je
jg
pop
and
in
imul
and
mov
jmp
lea
xchg
pop
mov
lods
sbb
mov
pop
mov
pop
outsb
add
mov
loopne
inc
insl
push
xor
sub
testl
sbb
dec
cld
dec
sub
fwait
jnp
enter
pop
mov
fadds
call
cld
sbb
xlat
adc
aad
pop
frstor
into
cmpsl
ljmp
call
decl
or
xor
nop
inc
cmc
mov
inc
les
and
push
push
cs
push
es
xchg
push
cmp
sbb
test
rorl
mov
pop
or
mov
sub
mov
push
cli
add
or
jp
movsl
repz
test
mov
rclb
in
and
roll
mov
movb
les
pop
orl
aam
notb
pop
xchg
push
sbb
xor
mov
aam
sub
subb
inc
call
add
jp
or
das
add
pop
sub
pop
add
rolb
mov
sbb
int
xor
pop
push
int3
xor
jle
mov
mov
xor
rol
lods
aaa
pop
and
mov
clc
rorb
mov
jns
push
jae
push
push
lods
push
movsl
or
and
shr
stos
pop
and
popf
push
and
ret
idivb
mov
outsb
and
stos
test
xor
insb
call
repnz
imul
mov
sarb
jecxz
bound
mov
lret
inc
or
xlat
andl
fwait
repnz
jae
lret
jle
aad
pop
test
lret
sbb
dec
das
jecxz
add
jl
ds
dec
inc
pop
inc
sbb
adc
cmpsb
mov
cltd
sub
pop
cmpsl
mov
rorl
shll
mov
icebp
mov
bound
fldl
ds
mov
aas
cmpsl
mov
pushf
pop
and
loope,pt
fcmovnbe
inc
cmp
pop
es
ja
sub
fwait
push
call
adc
push
sbb
outsb
or
xchg
mov
rol
js
push
mov
jae
int3
sbb
and
push
pop
mov
loope
mov
mov
lret
mov
aam
add
dec
or
pop
adc
mov
outsb
mov
fstps
ret
add
dec
jns
pusha
push
aad
cmp
cwtl
or
xchg
push
mov
js
cmp
mov
lock
cmp
xchg
add
ljmp
sub
clc
pop
movsb
xor
sahf
imul
pop
pop
lahf
insl
jl
notb
jg
or
sete
cli
inc
cmc
repnz
mov
or
mov
loopne
pop
push
mov
jmp
jmp
sahf
adc
sbb
addb
inc
lds
cld
pop
ljmp
add
repnz
pusha
gs
add
adc
scas
ret
xchg
add
jns
mov
jl
lea
sahf
stos
pop
sbb
inc
jmp
into
pushf
rorb
repnz
fwait
push
jno
xchg
testb
loopne
in
xor
adc
add
add
and
dec
loopne
stos
test
clc
inc
or
jl
out
mov
movnti
fisubrs
fistpll
insb
inc
bound
adc
stos
pop
filds
sbb
inc
lret
sarl
aam
sub
inc
mov
mov
cli
add
mov
inc
popf
mov
mov
push
add
adc
outsb
es
jno
cmp
sub
nop
xor
shlb
insb
mov
inc
ret
add
xchg
inc
cmpsb
inc
je
mov
imul
jo
add
xor
push
out
jnp
rcl
outsl
das
jne
pop
jg
aam
xor
mov
inc
bound
or
mov
shlb
test
pop
aad
mov
add
pop
jbe
jge
jge
or
mov
push
xor
daa
cmpsl
js
add
ficoms
cld
hlt
push
cwtl
popf
and
rcll
add
inc
call
sub
push
or
adc
and
jno
ja
test
mov
cltd
xor
int
js
xchg
inc
rol
sub
adc
std
mov
stc
shr
cmc
andl
and
xchg
loope
jle
fbstp
aas
ficomps
cld
push
je
aas
test
movsb
jge
add
movsl
jmp
add
sub
jno
sub
pop
lea
sbb
or
add
call
or
xor
test
fstpl
inc
push
lods
pop
pop
mov
adcb
pusha
fsts
gs
shrl
or
xor
mov
xor
inc
mov
mov
stos
lret
cmp
cmp
pop
lds
daa
popf
das
xchg
lods
sbb
xor
idiv
and
test
movsb
cmpsb
mov
divl
fsubrs
and
les
sbb
sub
cmp
stos
xchg
in
mov
cli
pop
bound
les
pusha
les
push
xchg
sub
mov
and
clc
jns
bound
jno
addr16
pop
enter
iret
mov
es
loop
push
mov
daa
sbb
es
cs
pop
je
aaa
mov
comiss
fiadds
xchg
cmpb
pop
shld
pop
test
sahf
test
aaa
jecxz
pusha
xchg
cmp
adc
inc
leave
push
dec
push
incb
test
mov
add
sar
jmp
outsb
subb
lret
loope
sbb
cmpsb
push
cmp
jecxz
push
popl
jb
cmp
roll
shrl
mov
cmpsb
jp
mov
jae
pusha
repz
mov
mov
pusha
jmp
jge
pop
cmp
testb
dec
pop
pushf
xor
sub
or
pop
sbb
push
ret
cmp
xchg
out
sub
add
das
test
cmpl
adcl
dec
xchg
mov
ljmp
inc
wrmsr
jge
das
mov
popf
push
xor
adc
ljmp
je
dec
mov
js
and
xor
and
sub
jae
loopne
pop
dec
add
stc
mov
adc
pop
enter
dec
jle
jmp
push
xchg
adc
jno
test
mov
push
and
aam
xor
lea
sub
xor
dec
fistl
and
js
lret
andb
lods
aam
or
lods
xor
mov
xor
pop
adc
inc
push
sbb
ficoml
rol
out
hlt
sbbb
orb
mov
jae
mulb
sbb
mov
push
dec
sub
xchg
lods
mov
pop
dec
xchg
adc
rcl
cli
adc
fisubs
mov
in
lahf
cs
loopne
popl
repnz
dec
ja
fcomps
jmp
xchg
xchg
incl
aaa
adc
push
shlb
roll
popl
loopne
add
pop
ds
adc
sub
dec
sub
outsl
jl
jle
add
cmpsb
outsb
movsb
insb
jb
stos
loopne
fstpl
cmp
mov
rolb
pop
inc
fdivrs
jmp
jmp
call
and
movsb
push
loop
ds
icebp
daa
mov
pop
mov
loop,pn
xchg
outsl
add
mov
test
cmp
loope
mov
add
mov
and
divl
fistps
sbb
xor
xchg
xchg
add
cmc
push
test
jge
pop
fisttps
and
fsubl
inc
pop
push
fsubrl
or
xorl
test
jne
adc
and
and
push
jae
xor
dec
add
sbb
out
inc
out
dec
negl
adc
int
sahf
out
xor
ret
popf
and
aad
pop
fnstsw
dec
call
out
push
xchg
xor
cmp
adc
xor
repnz
ds
clc
sbb
in
cld
xor
mov
daa
test
ljmp
add
sub
in
push
cmp
shrl
das
xchg
aas
aas
lahf
mov
imul
pop
roll
insl
and
imul
add
movsl
xchg
push
inc
push
or
cli
lret
lods
outsb
lock
jecxz
cmp
arpl
int3
mov
xchg
fidivrl
js
jne
mov
hlt
daa
incb
imul
enter
lahf
fildll
int
mov
inc
xor
jno
pushf
pop
sahf
aam
or
sbb
pop
push
inc
dec
das
xchg
sub
mov
pusha
stc
add
mov
mov
lea
xchg
dec
mov
lret
repz
lods
aad
and
test
ljmp
nop
testl
push
outsb
addl
cmp
sub
xlat
jp
mov
popf
and
cli
sub
aaa
dec
xor
pusha
in
fildll
pop
rcrb
test
push
mov
jp
push
xchg
add
gs
loope
and
rcl
add
das
mov
loopne
mov
movsb
push
or
dec
pop
scas
push
clc
dec
cmpsl
mov
push
xchg
cmpsl
lahf
sbb
cli
repz
inc
popf
mov
stos
mov
cmpl
inc
dec
mov
and
sub
loop
les
adc
fistpll
sbb
mov
jno
jmp
in
rcrl
movsb
inc
mov
out
cmovge
and
out
int3
jnp
push
sarb
lds
insl
mov
add
adc
arpl
loop
aas
push
cmc
aam
outsl
xlat
sarb
ret
je
push
aaa
add
or
rcl
xchg
movsb
bound
lahf
mov
shll
jle
jmpw
incb
lock
dec
ljmp
push
mov
sub
pop
call
outsl
les
pop
ss
pop
or
xchg
and
outsb
inc
push
xor
js
push
test
push
stos
mov
ja
or
cmpsl
adc
pusha
enter
rol
cltd
mov
lock
rorb
mov
dec
pop
aad
int3
in
sarb
cld
xlat
xchg
test
aas
dec
sbb
repnz
or
sub
mov
adc
jp
xor
xchg
jmp
pop
inc
daa
jp
iret
pop
or
adc
and
stos
mov
and
mov
xchg
add
shrl
outsb
add
jecxz
push
cmp
dec
cmpsl
es
pop
test
test
sbb
movsb
pushf
xor
addr16
cmp
test
sub
outsl
xchg
iret
sbb
rorb
cmp
add
push
cs
mov
fwait
pusha
push
mov
adc
and
add
mov
lahf
inc
jo
enter
cmp
mov
lock
loop
ret
das
mov
mov
push
outsb
movl
aas
push
jnp
ljmp
fnstcw
fbld
adc
xchg
loop
popa
sbb
loopne
add
cmpl
and
clc
lods
pop
mov
je
add
scas
mov
stos
sbb
rcrb
mov
mov
mov
add
notb
ret
daa
push
sub
decl
xorb
pusha
or
enter
jmp
jns
loop
add
mov
cmpb
inc
and
jno
es
call
jae
jb
imul
sbb
xchg
mov
jg
mov
sub
mov
pop
and
inc
fwait
and
inc
shrb
lret
mov
leave
bound
push
xchg
out
push
shll
fwait
hlt
adcb
push
adc
imul
outsb
sbb
stc
cmp
adc
mov
jecxz,pt
sub
mov
and
jne
cmpsb
pop
repz
dec
xor
push
dec
mov
sub
push
dec
clc
stos
push
or
jmp
push
push
test
les
dec
adc
fstpl
push
aaa
bound
or
test
push
jl
test
mov
sub
add
add
xor
xchg
js
pusha
aad
ret
dec
pop
lods
or
sub
jo
or
rorb
out
std
inc
push
dec
dec
call
jno
pop
mov
push
cmp
fisubl
xor
shr
mov
cltd
or
jbe
mov
inc
mov
mov
jle
jmp
rolb
mov
test
mov
xchg
ljmp
es
roll
cmc
outsb
xchg
inc
adc
jg
test
push
adc
lret
inc
enter
or
sbb
cmp
dec
jp
xor
push
add
pushf
cmp
test
filds
icebp
dec
mov
push
testb
sbb
pop
mov
jl
or
jns
cld
movsb
daa
in
add
rcrl
cs
cmp
rclb
or
iret
xor
icebp
hlt
jns
shl
lods
pop
add
jns
cld
mov
movsl
cmpsl
push
bswap
inc
xor
sub
clc
mov
icebp
cltd
lods
cmc
scas
mov
dec
mov
or
xchg
jecxz
dec
adc
dec
sub
ljmp
sub
cltd
pop
jle
mov
push
dec
in
cmp
xor
mov
push
dec
fisttps
test
or
adc
mov
std
aam
push
adc
push
mov
rcrl
ljmp
sbb
push
cs
stos
sarl
pop
or
mov
mov
cmpsl
fnsave
dec
mov
leave
pop
fldenv
jo
sub
scas
mov
out
or
mov
out
test
inc
mov
xor
test
inc
add
push
ret
xchg
insb
hlt
jecxz
ret
xchg
cmp
aam
cmc
shll
pop
sbb
cmp
sub
xchg
xchg
mov
push
and
int3
and
dec
jno
fadds
test
mov
cmp
xchg
pop
cwtl
shrl
mov
pop
adc
or
push
inc
mov
lock
cli
retw
mov
push
push
loopne
cmp
adc
mov
mov
fdivs
mov
fmuls
shrl
xchg
jecxz
or
cli
add
jg
push
mov
pop
jbe
ss
test
jo
outsl
and
das
pop
rcr
test
cmp
xor
pop
shlb
ss
dec
into
cmpsb
repnz
add
mov
cs
lret
lcall
out
test
mov
js
add
dec
add
scas
insb
in
xchg
in
cmp
add
jecxz
mov
mov
dec
clc
into
addr16
testb
dec
mov
rcrl
xchg
out
mov
mov
movsl
out
dec
add
cmp
cltd
cmp
out
pop
outsl
or
or
clc
movsl
jle
cli
lods
xor
xor
cli
mov
int3
lea
lods
inc
jp
xor
test
mov
or
ds
test
jg
mov
in
daa
xchg
mov
sti
in
and
ss
pop
loopne
inc
xor
mov
roll
stos
mov
cmp
jbe
loopne
jl
cli
cmpsl
push
and
mov
stos
movsl
xchg
aam
lahf
out
loope
push
sbb
jbe
add
jnp
arpl
out
jb
xor
lds
mov
mov
dec
nop
xchg
cmc
push
add
dec
outsb
xor
adc
popa
xchg
adc
fldenv
data16
paddd
ljmp
or
or
addl
cltd
xorb
mov
aad
dec
lcall
addr16
popf
test
mov
aas
adc
add
xchg
in
dec
inc
loopne
pop
call
lds
pop
mov
xchg
jge
clc
cmp
add
loopne
inc
adc
pop
pop
push
push
push
sub
mov
xor
sahf
push
pop
rcrb
adc
fistps
sub
fidivl
push
lea
cmp
mov
jno
dec
xchg
add
sbb
ret
xlat
ss
in
adc
lea
es
push
incl
rorb
add
jae
push
push
jbe
push
outsb
mov
jmp
xchg
das
sub
sbbb
dec
popf
dec
mov
add
dec
push
stos
lahf
cmp
rorl
repnz
add
jne
mov
jge
rcrb
lcall
mov
pop
inc
adc
lock
shr
inc
add
or
ss
mov
mov
pusha
and
jne
out
ds
mov
pop
and
mov
add
out
addr16
and
sub
lea
sub
fidivrl
or
popa
ljmp
xor
and
mov
icebp
push
push
loopne
pop
mov
icebp
pusha
add
rorl
mov
xchg
xchg
mov
adc
cmp
sbb
sbb
jmp
sbb
or
movl
jne
adc
faddl
pop
daa
hlt
test
jmp
sbb
jae
push
test
inc
aas
insl
mov
rclb
add
mov
pop
les
push
test
pop
fcoms
out
add
and
or
popa
add
cs
movsl
dec
inc
inc
mov
pop
mov
dec
lcall
call
out
push
movsb
flds
es
cmp
xchg
mov
cwtl
sub
into
out
xor
or
insb
and
adc
jbe
scas
jne
mov
dec
vmovaps
shl
jmp
popa
sti
cmpsl
or
inc
inc
test
mov
sub
mov
sbb
xchg
adc
xor
push
push
mov
push
loop
popa
pop
xchg
popa
clc
and
dec
pop
nop
inc
cld
imul
and
push
leave
mov
ljmp
clc
fmull
aaa
ss
test
and
jl
pop
je
mov
pop
cwtl
push
mov
jge
mov
cmpl
repnz
insb
push
clc
mov
mov
pusha
jno
subb
mov
hlt
or
pop
test
sti
cmp
add
inc
or
xchg
loopne
xor
mov
rolb
xchg
fwait
inc
loop
pop
roll
repz
cmp
das
adc
js
pop
sbb
outsb
or
inc
and
lahf
leave
fwait
and
popa
and
sub
mov
clc
jecxz
aas
nop
cli
add
shlb
push
pop
dec
sarb
inc
jnp
cmp
mov
test
clc
idivb
mov
mov
adcb
pop
pop
sbbl
enter
outsl
or
test
push
mov
hlt
ja
sbb
pop
aas
mov
les
pop
test
in
pop
mov
cmpsl
inc
sub
push
out
fcomps
inc
lahf
mov
mov
xchg
jmp
fistpll
ljmp
or
push
sub
adc
xchg
mov
cwtl
test
call
aaa
xchg
pushf
xchg
cmp
dec
enter
and
push
loop
adc
jnp
mov
loopne
or
cli
les
scas
cmpl
fs
cmp
sbb
dec
fcoml
scas
hlt
sub
es
dec
subl
pushf
rclb
roll
dec
das
push
arpl
add
pop
loop
and
mov
movsl
sbb
pushf
jns
cmp
enter
psubusb
or
mov
popa
or
rolb
jne
jp
or
or
cmp
jbe
xor
mov
mov
push
pop
movsb
mov
insb
fdivl
cmp
xor
dec
xchg
test
and
js
sub
adc
xchg
add
out
fwait
addb
jmp
xor
ja
cmp
dec
rol
push
sarl
stos
mov
mov
ret
filds
jmp
inc
ljmp
pop
jbe
lods
inc
icebp
cmp
mov
loopne
sub
inc
mov
push
inc
les
and
aas
lcall
fiadds
jmp
mov
lods
inc
add
out
lods
loop
sbb
rolb
into
cmp
add
inc
pop
or
cmp
and
jmp
lods
movsl
push
or
pop
je
sub
and
jmp
sarb
jmp
jnp
sub
sarl
add
pop
ds
jge
out
lods
cmp
sub
or
xor
mov
cmp
adcb
outsb
shlb
in
push
lea
push
sbb
add
pop
and
hlt
mov
imul
rorl
test
shrl
adc
inc
fwait
push
adc
cmpl
and
out
inc
aaa
mov
fisttps
sub
adc
in
xchg
mov
push
std
push
call
fsubrl
sahf
inc
adc
cli
lds
cmpl
fadds
sub
mov
and
sub
aam
jle
dec
adc
sub
xchg
jno
xor
insb
shll
pop
pop
loope
cs
xchg
femms
pop
jg
inc
mov
data16
incl
nop
pmulhw
cmp
in
and
aaa
mov
imul
and
dec
mov
sbb
or
bound
inc
add
loope
mov
dec
xchg
add
scas
ret
test
enter
je
jecxz,pt
add
cld
inc
sbb
cmp
arpl
sbb
andl
dec
sti
mov
jbe
inc
rol
pop
das
movsl
push
test
xor
cmc
inc
cli
int3
push
fucomip
push
cmp
cmp
enter
mov
jmp
mov
lea
xchg
rorb
imul
pusha
xor
gs
lock
mov
cwtl
movsl
inc
addr16
jge
mov
pop
mov
ds
cmc
loope
adc
jb
je
pusha
inc
loopne
adc
test
mov
js
sbbb
jmp
add
adc
push
pop
inc
lret
mov
add
scas
notl
int3
stos
repz
sbb
scas
jb
and
sbb
inc
cmpsl
clc
js
fstpt
hlt
pop
mov
lea
addr16
lret
push
or
ret
jp
mov
jecxz
test
and
adc
pop
dec
jmp
in
mov
data16
xchg
pop
ljmp
icebp
cmp
push
sub
inc
jnp
aas
fscale
jno
sti
in
pop
pop
ret
aaa
cs
fstpl
push
push
cmp
sub
pusha
repnz
mov
push
pop
mov
or
dec
leave
testb
or
out
mov
jbe
sarb
sub
sarb
xor
cld
ss
fwait
mov
jbe
sbb
lcall
xor
sbb
imul
mov
subb
push
xor
pop
push
call
dec
push
mov
into
mov
ret
popf
lcall
subl
pop
xchg
lret
or
xlat
mov
inc
or
or
mov
ss
sub
xchg
or
push
aaa
cld
fcomip
int
xor
stc
push
cmp
pop
lds
inc
fs
ja
shrb
push
cs
sarl
sbb
inc
sub
rcl
push
sahf
and
lock
add
dec
stos
sub
test
sbb
push
add
dec
jg
pop
cwtl
repnz
push
dec
inc
sub
lcall
ret
lret
or
push
mov
mov
cmp
scas
adc
addr16
xor
sub
and
adc
pop
mov
xchg
pop
and
aad
fwait
arpl
les
notb
pop
rol
cmpsl
add
scas
lods
inc
or
les
ss
inc
shrb
inc
cmp
leavew
dec
aad
loope
and
push
sub
lret
aaa
movsl
mov
or
cld
sbb
push
call
cmc
inc
cmpsl
pop
mov
je
addr16
es
js
loope
push
popa
lods
stc
mov
pop
add
jns
xchg
cmp
jl
int3
cmp
lock
out
or
push
aam
mov
fsubrs
xchg
mov
sub
roll
push
add
jmp
mov
in
inc
repz
mov
push
and
mov
xor
mov
sbb
inc
jle
adc
hlt
xor
aaa
sub
std
shrb
fdivr
or
mov
fmuls
pop
shll
add
push
repnz
fdivl
adc
cmpb
andb
and
pop
test
test
add
in
daa
pop
add
aam
and
mov
add
push
insl
mov
mov
sbb
fldl
cmp
mov
mov
jo
inc
push
mov
das
xchg
incl
mov
imul
inc
dec
xchg
sub
sbb
pop
add
es
fdivl
das
shlb
adc
xor
push
pop
aaa
add
and
orb
roll
scas
xor
inc
push
adc
pop
cmp
js
popa
hlt
movsl
pop
push
int
sub
mov
adc
xchg
insl
push
add
fdivl
cmp
outsl
movsb
or
xorl
rolb
mov
jnp
jmp
mov
ret
fcmovbe
adc
bound
mov
clc
jo
mov
jnp
fsub
imul
ljmp
pop
adc
ljmp
hlt
adc
je
out
pop
xchg
xor
inc
mov
stos
lahf
iret
or
mov
push
add
sbb
clc
aam
inc
rolb
adc
or
movlps
xorl
sub
adc
daa
insl
xchg
xor
daa
dec
loopne
nop
ja
std
push
sbb
out
or
pop
jo
xlat
rolb
loopne
xchg
adc
adc
xor
inc
xchg
hlt
in
jne
cmp
cld
dec
je
push
sbb
popa
clc
in
mov
jbe
mov
and
shrb
add
mov
mov
shrd
lcall
add
roll
fidivs
lock
outsb
inc
push
enter
andb
mov
sbb
shl
add
or
push
sbb
mov
mov
test
mov
push
call
cs
and
pextrw
pop
cmpsb
mov
mov
je
lcall
sub
mov
inc
sub
xchg
mov
push
jp
jnp
dec
push
pop
aam
push
mov
push
mov
adc
fisttps
push
mov
out
inc
out
in
cmp
add
sub
shll
xchg
or
xor
das
gs
jbe
push
sbb
inc
aam
and
hlt
mov
cmp
xorb
adc
push
cwtl
xchg
cmpl
dec
in
rorl
movsb
push
push
mov
pushl
xchg
sahf
mov
lods
jl
je
cwtl
ficoml
and
fdivs
addb
pop
mov
xchg
xchg
and
je
push
hlt
push
pop
ds
fiadds
jecxz
vphaddubw
cli
mov
clc
jecxz
test
mov
inc
out
mov
push
roll
or
add
movsl
inc
mov
sub
jmp
adc
fcompl
ds
ljmp
mov
and
pushf
adc
test
add
sti
loope
out
adc
or
js
mov
data16
mov
nop
or
orl
les
loope
nop
int3
push
xchg
xchg
xor
pop
push
dec
dec
mov
orb
pop
jb
xchg
clc
iret
or
xchg
or
loopne
and
push
roll
dec
lods
mov
mov
pop
fildl
pusha
pusha
loop
stos
es
push
mov
and
lock
jmp
scas
inc
imul
sbb
and
lods
decl
ds
mov
adc
loopne
imul
mov
mov
sub
gs
sbb
xor
xor
sbb
jecxz
inc
mov
push
js
ds
mov
or
ss
hlt
clc
test
imul
mov
pop
orb
insl
fisttpll
inc
push
pusha
pop
int3
and
mov
fidivrs
add
lock
lahf
inc
stos
cmp
mov
sub
xor
addl
imul
aas
adc
sub
add
jmp
and
fiaddl
jmp
push
jl
je
jmp
nop
into
xlat
je
cli
stos
ds
fmuls
out
loopne
push
cwtl
lcall
and
adc
scas
sub
ret
lahf
out
insb
aaa
push
adc
popf
movsb
or
push
inc
push
bound
arpl
mov
shlb
xchg
aaa
in
pop
call
and
add
in
mov
sub
xchg
pusha
orl
sbb
xchg
mov
cmp
add
pop
es
test
add
sarb
push
adc
pop
mov
test
add
rcll
cmp
mov
cltd
test
shlb
adc
fisubrl
testl
add
jmp
orb
xchg
jne
notb
aam
ret
push
inc
sub
int3
lds
ftst
add
pop
cltd
pop
mov
movsb
sub
dec
mov
add
test
in
xor
scas
pop
cmpsb
loop
decl
pusha
std
cmpsb
rcll
pushf
fs
repnz
cwtl
lahf
xchg
adc
jns
pushf
or
push
cld
cwtl
fdivrs
mov
fwait
jp
xchg
mov
inc
pop
dec
outsl
xchg
mov
add
sti
add
mov
shrb
bound
or
ret
or
xchg
jmp
cmp
daa
fcmovnb
adc
cli
push
aaa
xor
fisubl
and
push
js
sub
sub
lods
mov
fbld
xchg
mov
jmp
ds
or
xchg
add
clc
mov
nop
pop
push
cwtl
stc
and
cmp
add
pop
inc
pop
fsts
mov
pop
jne
inc
in
push
fxch
xchg
in
cmp
fidivrl
cmp
in
mov
je
mov
add
cs
adc
push
mov
popa
scas
and
add
sub
cli
xchg
sub
inc
out
push
mov
mov
adc
cmc
imul
mov
in
lret
ljmp
pop
mov
dec
int
add
nop
fiadds
sbb
aad
mov
or
icebp
shlb
fldenv
in
sub
jl
sbb
out
js
cltd
pop
sbb
cmp
dec
leave
lea
or
out
leave
push
lcall
pop
push
cld
cli
xchg
mov
test
mov
icebp
lods
dec
and
or
andb
adc
mov
aaa
iret
sub
pusha
rsqrtps
or
cmpsl
shll
jmp
lcall
jno
xorl
lods
insb
dec
mov
add
mov
push
mov
fdivs
js
jo
imul
adc
test
mov
jae
adc
xchg
cmpsl
sbb
sbb
add
sub
pop
push
test
or
sahf
add
adc
call
fildll
or
dec
sub
hlt
fcmovbe
loop
shrb
or
adc
icebp
fs
fisubrs
jae
imul
or
xchg
mov
gs
jns
rcl
or
add
std
ret
jnp
xor
xlat
adc
and
push
add
add
mov
pop
lret
pop
orb
push
cmp
lods
je
cmpl
ds
add
adc
in
subb
mov
bound
in
iret
shll
std
or
jno
sarb
lds
js
outsl
negb
and
mov
mov
push
jo
cmp
push
mov
mov
verr
add
fmul
ret
pusha
pop
mov
int
fdivs
mov
jge
aad
shlb
dec
ja
adc
cmp
push
sub
aad
cmp
mov
pop
push
call
outsb
imul
fcoml
lahf
mov
cmp
mov
test
daa
insl
add
xchg
adc
repnz
xor
shrl
dec
mov
loope
test
xor
or
mov
mov
popl
dec
shll
adc
stos
call
adc
add
push
das
xor
dec
dec
and
inc
xchg
push
dec
pop
pop
inc
mov
out
sub
or
sbb
test
add
dec
mov
sbb
pop
shlb
xchg
pop
jae
scas
insb
xor
repnz
pop
push
lods
mov
sbb
ljmp
pop
add
addl
add
adc
filds
sbb
sub
dec
xlat
push
ret
push
fs
push
lock
in
sub
push
mov
jb
outsb
or
jp
or
int
rcrb
int3
punpcklbw
add
ds
add
pushf
lods
ret
lret
pop
pop
fnsave
inc
leave
sbb
pop
cmp
or
mov
sbb
aam
dec
out
je
mov
das
and
cmp
sbb
or
repnz
fwait
shll
mov
jg
inc
lea
push
adc
pop
je
popl
dec
pop
pop
roll
aas
lods
fwait
lahf
inc
xor
jb
cld
jbe
call
out
mov
pop
movl
es
loope
sub
fstl
dec
stc
cmpl
mov
adc
cwtl
imul
daa
mov
int
imul
in
jbe
cwtl
dec
cld
push
pop
push
cmp
push
add
scas
dec
cmp
enter
xchg
dec
xchg
movsb
insl
pop
pushf
mov
stc
or
popa
inc
in
enter
arpl
dec
pop
mov
nop
in
push
outsb
aaa
lret
sub
sub
ret
imul
sbb
add
jnp
test
or
mov
push
rorb
decl
es
scas
cmpsb
add
xchg
aad
shll
xchg
shl
adc
gs
in
adc
adc
pop
pop
jne
mov
cwtl
je
mov
fdivs
xor
mov
ss
roll
cmpsl
sbb
rcll
nop
cs
ss
repz
dec
movsb
pop
mov
adc
pop
inc
es
push
push
xchg
stos
call
sub
cmp
adcb
mov
daa
loopne
out
test
xchg
mov
loope
pop
pop
sub
xor
mov
mov
test
and
ljmp
add
fmull
xorb
rolb
pop
mov
xchg
js
adc
jge
aam
ss
pop
xchg
cmpsl
shr
repz
adc
loop
mov
and
ret
out
sub
xchg
jle
scas
and
rol
fisttpll
adcl
push
cmp
arpl
in
xchg
mov
push
icebp
dec
push
lcall
mov
movsb
inc
js
sbb
jno
push
shlb
pop
aam
sti
sub
xor
mov
pop
cmp
cmp
leave
faddl
inc
mov
sub
inc
pop
loop
into
mov
sub
test
push
in
out
imul
adc
push
pop
sbb
push
in
mov
ret
insb
lock
rcrb
test
repnz
shll
subb
sbb
pop
sub
loop,pn
jecxz
cmc
mov
adc
arpl
sub
xchg
xlat
add
fdivr
test
aam
testb
mov
push
or
pop
test
dec
cmp
shrb
outsl
nop
push
sbb
xor
call
pop
orl
pop
pop
jb
popf
in
imul
mov
jle
xchg
test
mov
add
add
xchg
shrb
xchg
insl
push
or
shrl
ficoml
adcb
sbb
loopne
mov
inc
lcall
or
cwtl
les
ret
xchg
or
addb
andl
mov
pop
out
test
pop
add
and
pop
jmp
xchg
cmp
popa
insl
outsb
cli
lcall
adc
inc
lods
cmpsb
js
pop
repz
loop
pop
adc
in
add
jae
ja
dec
packssdw
mov
mov
fisttpll
loopw
popa
loope
int3
ja
mov
mov
pusha
stos
dec
adc
jb
imul
xchg
roll
adc
add
clc
and
sub
inc
pop
adcl
mov
and
cmpsb
add
scas
addb
and
jb
loop
cmpl
rcll
enter
mov
xchg
mov
ret
pop
in
pop
loopne
lock
int
xchg
fstl
js
and
and
mov
jge
mov
jecxz,pt
push
pop
jae
lock
pop
mov
mov
hlt
push
cmp
sbb
mov
mov
sbb
roll
je
push
xor
adc
mov
mov
icebp
loope
inc
or
cs
fs
mov
or
xchg
adc
adc
cli
mov
pop
inc
pop
test
add
inc
jp
clc
jp
push
movsb
pushf
sar
mov
mov
das
jmp
mov
in
loop
scas
jbe
mov
mov
or
sbbb
std
shl
imul
xchg
insb
pusha
fsubp
or
mov
push
mov
loop
ljmp
cmp
jnp
mov
in
popa
adc
add
out
adc
daa
push
push
andl
mov
add
sahf
and
repz
test
int3
adc
jnp
arpl
inc
and
cmp
inc
pop
clc
and
neg
adc
loopne
jae
inc
mov
cmp
or
je
mov
pop
rcrl
pushf
rolb
or
adc
sub
sub
mov
adc
jecxz
jg
daa
inc
mov
cmp
cmp
loopne
es
ficoml
xlat
aas
faddl
push
dec
ret
outsb
dec
push
test
sub
scas
adc
sbb
pop
xor
xchg
mov
dec
pop
ss
cld
arpl
push
mov
int
mov
cmp
add
popa
mov
dec
dec
clc
inc
push
xor
xlat
rcll
rolb
mov
sbb
add
arpl
test
stos
bound
push
testl
mov
lds
xchg
pop
inc
xor
cmp
mov
jnp
xchg
adc
out
mov
xlat
in
dec
jb
scas
mov
mov
lods
mov
adc
iret
inc
xor
push
jns
scas
in
fs
and
aad
and
stc
mov
push
or
lods
pop
push
pop
sbb
mov
pop
or
into
loope
inc
jl
mov
mov
lock
aas
loopne
iret
adc
test
cwtl
jp
mov
sub
pop
nop/reserved
hlt
ljmp
cmp
inc
stc
and
insb
test
add
cmp
or
in
or
push
mov
adc
adc
add
jl
push
sbb
out
xchg
shlb
movsl
mov
and
or
push
jp
mov
lods
xor
pop
jp
mov
adc
enter
sbb
dec
jnp
sub
out
dec
loop
dec
push
or
push
mov
insb
ret
imul
xor
jbe
dec
pop
push
dec
push
aaa
das
push
lods
inc
push
loope
adc
fsubl
inc
mov
and
mov
xor
pop
dec
mov
subl
lds
test
lods
jl
pop
or
mov
cli
or
stos
pop
in
int
or
mov
ret
mov
shlb
mov
jp
test
adc
jle
mulb
popf
test
cmp
and
cmpsl
popf
cmp
jno
xchg
and
jmp
dec
movsb
push
mov
imul
jle
rcl
fnstcw
lock
jo
jo
popl
inc
pop
push
dec
add
aam
mov
repz
mov
push
subb
sbb
inc
sbb
bound
movsl
stos
mov
lahf
outsl
pop
push
bound
and
mov
ret
pop
sub
push
sub
insl
sbb
cmp
test
shrb
jp
add
adc
imulb
xchg
les
pop
dec
clc
iret
fnsave
outsb
pop
das
pop
fwait
dec
sub
sbb
push
and
mov
jg
out
fildl
aam
scas
push
fs
stos
add
push
cmp
mov
addl
pushf
int
jno
mul
or
inc
iret
inc
sti
mov
pushf
xchg
jp
inc
jns
mov
mov
jb
enter
pusha
push
addl
cmp
mov
lret
pop
in
push
xor
inc
jae
sub
jmp
push
inc
mov
hlt
jmp
dec
jo
lret
mov
inc
rcr
dec
push
js
cwtl
out
lock
sub
lahf
push
jo
test
cmpsl
cmp
mov
xor
call
mov
cmp
loopne
xchg
xor
xor
bound
mov
push
xchg
ret
mov
jl
das
fwait
movsl
xchg
sub
or
adc
push
add
inc
dec
mov
jo
mov
inc
cs
jecxz
dec
lret
mov
mov
scas
pop
xor
iret
jecxz
loop
int
mov
ss
lock
ret
sub
pop
cmp
out
pushf
stos
ret
xchg
xor
aad
lds
add
leave
sbb
ret
insb
push
sub
cmpsl
cmpsb
jmp
xor
sub
pop
push
sbb
mov
mov
adc
stos
mov
addr16
subl
mov
mov
int3
sbb
xchg
pop
hlt
push
mov
imul
dec
mov
jl
pusha
inc
popa
push
inc
int3
inc
das
xchg
mov
dec
dec
loopne
fwait
adc
push
add
lock
movsl
or
mov
pop
push
dec
adc
cs
sbb
add
addr16
and
pop
sbb
push
or
decl
push
and
and
jmp
stos
jmp
insb
movsb
into
jbe
bound
data16
xor
xor
xor
fidivl
adc
fstpl
fstpt
or
push
pop
jo
cmp
pop
arpl
das
push
lret
mov
fwait
mov
and
loop
sub
dec
rcl
xchg
iret
lcall
mov
mov
outsb
mov
and
cmc
rolb
adc
mov
xor
and
cmpsl
push
clc
cli
into
mov
pop
xchg
jbe
or
nop
cmpsl
and
push
jle
popa
divl
pop
sub
test
cli
and
xchg
jae
movsb
pop
xlat
test
mov
sub
or
sbbb
ds
cltd
lret
daa
std
sbb
test
adc
lods
sub
outsl
mov
mov
jle
daa
or
imul
js
jle
in
sub
push
lea
inc
jbe
mov
mov
sbb
scas
mov
bound
sti
add
shlb
test
aad
push
cmp
dec
sub
xor
mov
dec
pop
cmp
pop
sbb
sbb
dec
jge
sub
inc
sub
dec
movsl
mov
sbb
xchg
mov
and
ljmp
push
cmp
js
es
inc
pop
js
add
xchg
stos
lds
sbbb
shlb
ss
shll
js
daa
mov
jno
cmpsl
xchg
in
in
xadd
je
and
aas
cmc
adc
jecxz
inc
sti
and
adc
scas
stc
movsl
mov
dec
jae
sahf
sub
mov
pop
int3
sbb
add
or
mov
popa
push
sub
jecxz
repz
jb
adc
and
lods
stos
stc
and
stc
dec
xchg
sahf
test
inc
xor
scas
stc
add
cmp
shll
lahf
xchg
int
jg
push
xchg
or
aaa
xchg
rolb
or
stos
test
lcall
ret
outsl
jo
or
mov
adc
cmc
cmp
sub
mov
adc
pop
ljmp
sbb
and
sbb
or
ss
ret
mov
jne
enter
sub
scas
lods
add
and
test
push
out
enter
inc
sarb
out
outsl
or
in
mov
cmp
jp
es
roll
mov
xchg
cmp
add
aaa
mov
jp
adc
test
pop
lahf
mulb
imulb
push
jns
int3
mov
test
mov
insl
dec
cmovnp
or
xor
loope
adc
sub
enter
and
aas
mov
push
es
sub
sbb
test
ret
lahf
jle
push
or
or
mov
les
movsl
sub
mov
mov
loop
jne
xor
sub
jp
je
mov
bound
gs
mov
jecxz
dec
loopne
add
out
js
sub
ja
pusha
mov
xor
out
popf
cmp
and
jmp
scas
sbb
dec
pop
cld
mov
adc
xchg
add
lock
call
popa
sarl
ret
loope
inc
test
cmpsl
dec
js
add
sbb
hlt
std
jo
xlat
add
loope
push
mov
out
pop
mov
sti
inc
fadds
push
jecxz
mov
jl
add
jb
push
imul
out
mov
jl
cmp
movsb
in
jae
xor
mov
enter
test
or
pop
adc
ret
and
enter
sub
jge
jne
inc
sbbl
lods
sbb
cmpb
mov
ds
cmpsb
push
sahf
adc
sar
add
mov
dec
xchg
xchg
push
push
xchg
aad
mov
jne
clc
adc
add
cmpsb
lods
mov
cs
jmp
mov
push
mov
rol
test
test
shll
adc
sub
lds
push
xor
mov
aad
out
push
sbb
in
mov
into
jmp
loopne
subl
sub
push
scas
dec
and
lret
jp
xchg
das
xor
fidivl
xor
int
std
xchg
pop
or
imul
dec
arpl
xor
mov
out
into
sub
mov
lahf
mov
push
stc
ficomps
test
mov
pop
aas
jno
jge
push
mov
lret
fstps
xchg
js
lea
xor
inc
jo
es
mov
in
add
loop
cli
push
xchg
jns
lods
or
cmp
fildl
lods
mov
ja
jle
enter
jnp
shrb
scas
mov
mov
test
imulb
enter
shll
push
sti
adc
and
xor
clc
xchg
inc
pop
fdivrl
add
push
and
bound
fdiv
ret
and
jae
js
add
xchg
into
pushl
sub
loope
lods
pop
out
push
cmc
rorl
jno
inc
shl
movsl
dec
pushf
push
inc
cld
bound
add
mov
loope
call
mov
test
cli
mov
dec
cld
pop
cli
stc
xor
dec
test
rol
dec
inc
sub
loopne
or
and
mov
mov
sbb
addl
sub
pop
inc
jne
xchg
cli
mov
and
loopne
xor
bound
push
and
xor
cmp
push
ljmp
lock
adc
pop
jle
jbe
sub
ror
ret
or
insl
add
in
sub
pop
test
dec
cmp
andb
jb
inc
push
lret
mov
lea
inc
xor
std
cmp
xchg
jns
lods
insb
inc
pop
cmp
fwait
cltd
or
pusha
gs
adc
add
mov
sbb
test
pop
add
loope
es
pop
addb
xchg
lret
mov
add
add
test
loopne
or
lcall
test
add
mov
dec
sub
xchg
push
in
lock
insl
pusha
adc
je
dec
dec
mov
dec
clc
push
mov
adc
xchg
add
ja
mov
pop
inc
insb
jp
push
jle
mov
insb
add
inc
pop
filds
inc
mov
out
cli
push
adc
xor
jle
push
daa
cmpb
mov
xchg
jnp
sbbl
sbb
pop
imul
inc
sarb
je
pop
daa
add
in
sbb
aas
cld
pop
xor
rorl
xlat
and
or
add
pop
fcoml
sub
inc
pop
aam
cmpsb
jecxz
sbb
outsl
inc
push
in
mov
mov
nop
add
ret
fcomp
or
xchg
adc
lret
adc
out
mov
lret
push
sbb
test
cmpb
add
xchg
arpl
pop
mov
xor
sub
std
insb
sbb
dec
call
enter
push
dec
cmp
hlt
push
call
push
pop
enter
in
or
mov
sahf
jne
jmp
hlt
adc
inc
cmp
loope
xor
sub
cmp
inc
xchg
inc
xor
stos
in
push
push
push
int
xor
cld
pop
mov
inc
cmp
cltd
insl
adc
jo
inc
jl
out
push
repz
addl
and
push
push
negb
push
or
fistpl
mov
bound
cmp
lahf
pop
sub
mov
pop
in
push
mov
adc
mov
xlat
add
in
mov
dec
bound
jb
push
push
xor
and
push
in
mov
or
loopne
mov
cmp
mov
cmp
mov
test
insb
or
xchg
push
add
jnp
scas
imul
int3
loope
jmp
scas
mov
sbb
inc
mov
mov
jg
sarl
in
out
aad
sub
test
mov
inc
inc
insb
pop
push
mov
pop
popl
pop
mov
pop
mov
rorb
xchg
cmp
xor
das
sub
sub
addr16
push
xlat
add
movb
adc
jb
mov
dec
outsl
lahf
bound
xlat
leave
mov
and
add
negl
push
and
mov
lock
and
fidivrs
clc
push
xchg
int3
fistpl
scas
nop
lcall
push
daa
in
call
xor
and
dec
stc
fbstp
outsb
pop
or
mov
leave
enter
call
push
gs
xchg
scas
mov
test
push
sub
push
arpl
ret
popa
xchg
mov
mov
pop
mov
jp
ret
sub
dec
xchg
imul
test
nop
cli
rolb
push
jno
xor
pop
sbb
faddl
imulb
fldl
or
add
mov
adc
lret
mulb
xor
xchg
lock
adc
aas
or
inc
sbb
jmp
out
add
das
cwtl
mov
cmpsl
or
cmc
fisubrs
lahf
inc
ja
mov
daa
mov
dec
sbb
loop
jnp
cmp
or
add
mov
or
js
or
aaa
mov
xchg
dec
adc
mov
mov
movhlps
sbb
ficomps
inc
lret
push
pop
arpl
xchg
test
mov
subb
and
xchg
lds
mov
dec
aam
and
mov
mov
fistpl
movsb
je
mov
adc
loopne
ror
ljmp
in
lahf
dec
xchg
mov
call
ss
jecxz
arpl
bsr
mov
test
mov
lock
mov
or
push
sar
xlat
in
cld
inc
and
push
mov
repnz
and
mov
loope
add
mov
or
lea
and
scas
xor
fidivrl
pop
lahf
mov
mov
cmpb
or
mov
inc
push
xchg
adc
dec
mov
push
stos
jle
push
push
pop
subb
cmpsl
dec
outsb
cmp
mov
aas
mov
xor
or
leave
das
fadd
aam
adc
inc
roll
jp
cld
push
aam
es
lock
scas
cltd
mov
dec
outsl
add
sti
lret
add
insl
dec
xor
lea
ret
popa
into
repz
and
xor
pusha
add
pushf
mov
mov
out
arpl
ret
xor
test
clc
mov
ds
in
rclb
rcr
orl
dec
xlat
inc
sub
xor
mov
jne
leave
xor
outsl
fistpl
inc
jl
jne
shl
xchg
and
dec
inc
mov
jge
inc
shll
jae
test
jnp
clc
insb
dec
sbb
ja
fsubs
daa
inc
or
les
sub
filds
push
dec
dec
dec
and
mov
rcrb
add
sbb
mov
loopne
scas
pop
rcll
add
sub
xchg
jl
out
loope
pop
scas
sbb
inc
fdivr
loope
jno
adc
or
mov
pop
iret
inc
gs
insl
enter
cmp
push
subl
pusha
je
cwtl
pop
sbb
mov
cs
test
pop
add
pop
ds
inc
pop
and
xor
mov
xchg
adc
add
add
loopne
stos
or
sbbb
xchg
cmp
inc
fisttpll
sbb
and
cmp
hlt
fdiv
pop
pop
test
in
xchg
push
pop
test
jne
ds
mov
push
sbb
cmpsb
arpl
mov
or
addb
inc
and
dec
scas
fs
lret
mov
movsl
inc
mov
dec
mov
or
push
mov
rolb
fistpll
adc
es
stos
sub
stos
dec
lock
add
out
dec
into
enter
adc
mov
roll
sbb
inc
out
or
cmp
out
test
xchg
iret
xchg
cmp
dec
test
lcall
pop
jno
loopne
or
jp
rorb
test
xchg
rorb
imul
jnp
jmp
xor
xorb
sahf
mov
ss
cmc
or
add
mov
mov
loop
dec
loopne
lock
out
mov
fcompl
pop
or
sub
pop
pop
mov
pop
mov
and
ja
dec
pop
sbb
shlb
inc
test
data16
sub
push
cld
jp
pop
mov
jbe
add
cmc
push
lret
xor
jge
jns
loope
out
hlt
mov
adc
inc
xor
xor
std
rorb
aam
mov
mov
scas
dec
jge
push
es
push
and
sub
loopne
in
insb
loopne
and
jecxz
pop
nop
cwtl
cmp
mov
lret
shll
mov
sub
sub
sbb
scas
js
push
jl
push
popf
inc
ljmp
xlat
push
adc
cmp
out
push
sub
shl
xchg
in
dec
sbb
rep
cmpsb
xor
mov
stc
imul
adc
sub
orl
jle
mov
dec
sub
cmc
fcmove
push
mov
stc
scas
sub
loop
cmp
xlat
push
fsqrt
mov
ret
outsl
pushf
test
or
fcmovnb
mov
lret
push
xor
inc
adc
xchg
iret
push
sbb
pusha
sub
mov
or
shl
add
inc
insb
outsl
fildl
mov
test
stos
jp
popf
subl
push
pop
imul
ror
sbb
pop
adc
jecxz
jmp
sub
push
pop
fadd
out
call
or
add
ret
inc
pop
mov
jg
xor
cmc
movsb
test
adc
sbb
push
cmpsl
push
adc
push
pusha
inc
adc
pop
adc
ss
ret
decb
pop
pop
fnstenv
decb
and
arpl
cwtl
sub
mov
adc
and
add
fwait
cltd
push
shl
rol
ficompl
pop
sarl
into
jmp
push
in
mov
pop
jne
cmp
dec
mov
jp
xor
inc
orb
ljmp
mov
jo
and
rorb
or
sub
mov
ds
clc
dec
enter
jae
push
cmp
rorl
sub
add
mov
outsl
fdivrs
nop
lcall
ja
pusha
mov
adc
sbb
fwait
add
or
push
xchg
fsubp
incl
mov
out
push
and
iret
mov
sbb
ds
or
popa
stos
mulb
jle
add
in
or
and
popf
cmp
push
psubsb
jo
jmp
pushf
lea
mov
jecxz
dec
push
jecxz
pushf
xor
sbb
adc
inc
movsl
pop
jb
push
jne
jg
stc
bound
cmpsb
sub
cmp
xor
or
pop
mov
jecxz
sbb
or
xchg
push
add
fidivrs
loopne
rorl
add
mov
jno
icebp
mov
testb
push
jb
sbb
mov
nop
ret
out
ret
or
add
add
mov
in
push
sbb
xchg
imul
lcall
push
add
push
mov
sub
add
dec
dec
mov
mulb
cli
cmp
test
decl
or
pushf
and
and
or
sar
fs
cmp
iret
dec
add
ret
mov
fldcw
add
xor
cmp
stos
js
mov
add
dec
push
xor
jg
jecxz
in
lcall
xchg
inc
movsb
inc
xlat
xor
jg
cwtl
mov
test
mov
pop
loopne
xchg
mov
adc
mov
push
inc
aad
push
pop
mov
or
addb
fbstp
decl
xchg
out
lret
push
mov
dec
aam
int
testb
add
mov
pushf
xor
jl
aad
push
cmc
and
inc
pushf
adc
and
and
sbb
pop
aaa
ljmp
xchg
sbbb
cmpsl
jge
ljmp
clc
test
cs
dec
clc
outsl
in
inc
jle
xor
push
outsb
or
stos
push
mov
xchg
mov
xchg
mov
hlt
mov
mov
pop
int3
push
push
xchg
cli
inc
lds
dec
and
scas
outsb
lcall
xlat
je
in
adc
ret
fs
cli
cli
fwait
adc
mov
add
add
nop
mov
xchg
dec
js
and
mov
movsl
mov
pop
movsl
pshufw
pop
cli
xor
dec
pop
test
pop
movsb
aad
mov
push
dec
leave
and
lcall
and
lahf
xchg
inc
cs
stos
shll
mov
mov
and
or
adc
and
lcall
adc
push
sbb
push
xlat
and
adc
inc
xor
lea
nop
pop
in
das
jo
push
lock
subb
adc
daa
cmp
arpl
nop
aas
lods
xchg
mov
push
xchg
mov
inc
mov
ud0
je
xchg
push
adc
movsb
test
add
pop
test
clc
out
jg
shlb
inc
inc
mov
jno
xchg
sbb
test
scas
dec
and
jae
dec
scas
mov
dec
sub
or
and
push
mov
cld
mov
jo
pop
loop
pop
sub
fmull
test
ss
sbb
xor
push
enter
fucomip
or
bnd
adc
add
pushf
xchg
push
call
adc
or
and
ret
stos
mov
adc
jle
sbb
punpckhwd
rclb
mov
je
pop
cli
mov
hlt
roll
add
dec
and
clc
rorb
in
push
or
dec
lea
dec
push
dec
and
add
or
pop
dec
dec
jbe
or
xchg
fists
jle
jne
mov
or
sbb
incl
out
subb
les
in
daa
or
add
jl
cmp
fwait
pusha
push
push
repz
mov
lods
clc
pop
fcom
or
pop
push
in
sub
xlat
scas
jb
xchg
fdivl
xor
divl
xor
int3
jb
into
mov
in
dec
lret
repnz
ret
xchg
scas
es
lods
adc
adc
pusha
adc
add
subb
mov
mov
jns
rorb
inc
xchg
inc
js
mov
sub
and
fisubrs
sahf
mov
cs
and
and
xlat
cmpsb
sub
add
mov
xor
addb
push
pop
dec
xchg
mov
gs
into
pusha
lret
pop
push
les
inc
popf
or
mov
addb
add
push
subl
adc
subl
pop
jo
mov
fsubl
xor
fadd
arpl
outsl
mov
mov
jle
or
dec
adcb
fidivl
dec
adc
cmp
push
dec
push
rol
cwtl
dec
stos
xor
jb
mov
push
test
xor
test
sahf
mov
aam
imul
popa
loopne
push
jae
inc
fyl2x
orl
or
mov
sbb
ds
int3
mov
cmp
aas
idivb
sti
mov
xor
out
xchg
fimuls
mov
mov
sti
idiv
or
inc
notl
mov
imul
mov
and
jg
orb
or
push
and
ds
adc
mov
loop
test
int
mov
mov
pusha
lcall
cld
xlat
mov
out
fcmovnb
sti
stos
sub
dec
jnp
loop
adc
das
sbb
fstl
incl
fs
mov
jp
je
xchg
test
mov
adc
std
dec
jmp
lds
push
pusha
push
aad
filds
aam
mov
adc
mov
fmuls
or
sbb
fs
es
push
cltd
shrb
xor
adc
out
hlt
repnz
inc
mov
out
inc
sbb
das
stos
dec
mov
and
push
clc
mov
ds
adc
andl
movsb
push
ds
cmp
imul
stos
pop
inc
cmp
loop
pop
fs
mov
jmp
sbb
push
pushf
pop
std
divb
push
sbb
sbb
repnz
insb
mov
enter
dec
sbb
test
sbb
ret
fwait
lds
inc
repz
stos
and
xor
cmp
xor
cld
lea
lcall
adc
lahf
into
lock
or
das
push
sti
push
bound
negb
add
lahf
ss
dec
movsl
lret
add
mov
out
int
clc
xchg
adcl
or
ret
sub
mov
pop
mov
sbb
jl
add
or
insb
sarb
inc
or
mov
mov
cld
rcr
xor
jge
mov
sbb
adc
xchg
jnp
cltd
inc
xchg
sbb
or
scas
sub
add
call
ud0
xchg
add
in
adc
push
std
or
aaa
adc
incl
andb
scas
adc
pop
cmp
shll
cmp
jp
xchg
mov
shll
pop
jo
adc
dec
pop
mov
bound
push
sbb
jb
mov
aam
sbb
loop
fcompl
and
pop
jmp
mov
mov
adc
call
test
push
push
inc
xor
pusha
push
inc
clc
insb
sub
les
inc
sbb
mov
or
push
pop
scas
or
sub
ljmp
mov
push
in
clc
fwait
imul
dec
adc
inc
push
dec
mov
vmread
adc
jbe
rcll
test
addr16
icebp
mov
stos
sahf
push
loop
or
scas
add
mov
adc
xor
and
xchg
push
sbb
inc
jo
incb
roll
xchg
addb
sbb
stc
pop
pusha
push
lret
xor
fstps
and
loope
adc
test
cmp
inc
pop
fmul
inc
cmp
push
mov
mov
nop
mov
jecxz
add
ss
mov
inc
add
mov
cld
push
push
jne
cmp
add
int
mov
int3
inc
ds
outsl
fadd
mov
jne
sbbb
and
lock
adc
scas
clc
aaa
ret
clc
or
or
lahf
in
xchg
pop
cmpsb
pushf
shlb
add
adc
add
test
lods
int3
xor
mov
aaa
lods
xchg
jge
xchg
dec
pop
and
cmpb
inc
push
hlt
sbb
adc
dec
rol
test
scas
fisttpll
cmc
adc
rclb
rclb
adc
gs
fisttps
and
dec
xchg
xor
movsl
shrb
add
jl
xor
dec
dec
daa
mov
fdivr
add
cld
insl
outsb
sub
inc
adc
pusha
rorl
pop
inc
test
leave
in
das
and
loop
lea
push
les
mov
in
add
add
outsb
pop
inc
jge
movb
jbe
dec
scas
push
lea
mov
dec
xor
push
sbb
in
xor
mov
inc
push
push
inc
push
lcall
sbb
iret
mov
cmp
jo
adc
xor
mov
add
and
ret
leave
xor
add
loop
sub
enter
mov
bound
push
loop
push
shl
fdivs
sahf
cmp
pop
enter
adc
mov
in
add
xor
push
test
push
leave
sbb
pop
fidivs
sbb
inc
cs
dec
adc
sub
xchg
enter
jecxz
adcb
out
nop
gs
add
aaa
fwait
stos
shl
pop
mov
roll
jne
push
shlb
adc
sbb
movsb
and
inc
push
or
pop
outsl
stc
mov
lds
cmpb
mov
jle
stos
mov
fisubl
mov
jae
in
insl
mov
pop
fwait
mov
and
insl
and
jg
sub
mov
sub
test
pop
pop
xchg
mov
inc
pop
or
mov
xchg
push
andl
xor
rcrl
sbb
outsb
sub
inc
jge
pop
cld
push
cmc
push
out
ljmp
sub
sbb
dec
or
push
add
nop
mov
xchg
aaa
stos
mov
adc
add
add
sbb
push
mov
ds
mov
sbbl
jp
cli
push
or
cmp
adc
push
lea
aas
xor
mov
pop
jp
popa
mov
mov
pop
dec
sbb
or
popa
sbb
or
rol
lret
xchg
mov
mov
push
cwtl
mov
call
outsl
arpl
in
int3
inc
pop
andl
push
push
mov
out
pop
test
aad
add
push
ret
pop
daa
mov
push
jp
push
mov
mov
jns
sahf
adcl
inc
pop
popf
mov
push
cmpl
mov
jl
call
push
mov
adcb
stos
fwait
test
in
loope
add
sti
lahf
in
pushf
inc
xor
inc
in
dec
xchg
add
rolb
aad
cmpsl
shl
mov
lret
and
inc
inc
dec
icebp
pop
mov
and
shlb
xchg
call
call
sbbl
add
leave
cltd
xor
push
shr
push
jnp
jnp
hlt
jge
push
dec
sub
mov
mov
mov
pop
mov
sbb
mov
lods
adc
add
cwtl
repnz
cmp
inc
xor
enter
divps
sub
and
popa
clc
je
jl
mov
lock
inc
stos
stos
add
lcall
sbb
or
ret
fisttpll
iret
add
shl
jp
mov
push
pop
sub
sahf
gs
fwait
pop
in
mov
add
cmpsb
ja
mov
ret
mov
xor
add
aam
sbb
mov
dec
add
inc
out
lahf
adc
adc
mov
lcall
insb
les
pop
xor
or
push
scas
jo
xchg
sub
sub
push
insb
push
and
inc
ljmp
mov
cmc
cmpsl
jmp
rcrl
ficomps
outsl
fldt
add
or
call
lahf
mov
cs
icebp
and
mov
mov
cmp
push
dec
aad
adc
sbb
jp
push
mov
or
cmp
mov
mov
push
mov
sbb
xor
xchg
lock
inc
or
lahf
pop
cmc
pavgb
bound
xorb
lods
stos
ja
push
dec
mov
mov
repz
xor
sahf
inc
js
push
add
mov
sbb
inc
ret
jl
pop
push
xchg
cltd
enter
push
rcll
sub
adc
adc
call
bound
loope
adc
sub
dec
xlat
dec
cld
pop
insb
pop
jge
cmp
lahf
movsl
cmp
test
mov
add
mov
aas
adc
dec
sub
loopne
jmp
dec
insl
es
shlb
inc
outsl
adc
ss
push
sbb
or
xor
bound
add
or
cmp
and
xor
nop
scas
mov
mov
push
cmp
in
ret
fisubrl
mov
aas
adc
sbb
add
int3
mov
sbb
or
repz
pop
add
or
jecxz
mov
shr
mov
divb
into
and
fisubrl
mov
pushl
mov
pop
and
ds
testl
cmpsl
adc
jecxz
xlat
sti
mov
sbb
pop
rorb
push
xchg
push
out
jbe
push
jle
in
clc
sbb
mov
xchg
jl
scas
pop
pop
dec
and
dec
daa
outsb
jg
jecxz
int3
shlb
inc
decl
sub
cmpsb
testb
test
imul
mov
negl
mov
mov
mov
insb
sub
lods
sub
mov
pop
orl
and
addb
push
add
jecxz
adc
pop
sbb
lsl
or
or
or
pop
sbb
das
adc
lret
dec
jo
shr
mov
sub
pop
icebp
mov
pop
push
out
jns
inc
clc
push
out
jp
push
pusha
test
push
adc
mov
stos
ljmp
push
movb
sbb
loopne
rcll
inc
or
lret
shlb
js
mov
mov
cs
mov
lock
mov
adc
add
inc
orb
jle,pn
ss
sbb
mov
xor
loop
pop
cmp
jl
inc
movsb
mov
inc
inc
xchg
mov
cmc
mov
sbb
mov
ret
mov
xor
jp
loop
sbb
fsub
jecxz
jp
adc
fiadds
std
xor
add
pop
sbb
cld
cmc
dec
sbbb
aaa
lcall
pushw
inc
inc
dec
sbb
mov
cltd
jg
ret
mov
adc
fneni(8087
call
sti
sub
mov
push
and
lods
sbb
mov
clc
sbb
mov
clc
pop
mov
xor
jmp
mov
ss
jbe
pop
cmp
or
fisubl
jnp
pusha
fwait
mov
pusha
aaa
rcl
adc
popf
mov
sbb
nop
pop
sub
or
pavgw
xor
xchg
jb
inc
adc
push
and
ljmp
subb
push
dec
js
cld
cmp
je
xor
mov
nop
adc
loope
je
insl
lods
pop
push
dec
std
nop
push
mov
dec
mov
fs
repnz
mov
or
outsl
xor
mov
je
push
shl
scas
outsb
pop
cs
sub
xchg
mov
xchg
push
stc
adc
addr16
jno
sarb
fmul
lock
or
leave
rol
notb
adc
mov
mov
cmp
inc
xor
cmp
sub
repnz
ss
pop
scas
jae
push
cmc
insb
xor
dec
test
mov
xchg
jbe
sub
ja
insb
call
into
cmp
ja
inc
cmp
inc
popf
les
jo
ja
imul
stos
js
and
call
xchg
inc
dec
lahf
mov
pop
incl
mov
leave
bound
mov
inc
jae
mov
xchg
dec
clc
loop
pop
sti
or
mov
cmp
sbb
test
addr16
into
jp
adc
leave
adc
call
adc
or
stos
or
icebp
fstpl
mov
cld
jbe
push
xchg
adc
add
cmp
rcrb
lret
mov
outsb
lret
sub
popf
ljmp
jo
adc
xchg
js
and
mov
push
mov
pushf
imul
jg
jo
xchg
pushf
jle
dec
ret
pop
adc
push
ror
pop
and
cmc
adc
inc
mov
push
stos
cmpsl
enter
ja
push
cmp
in
xor
fcmovnb
daa
movsl
sbb
mov
sub
or
cmp
incb
pop
cmp
cmp
add
stc
popf
jp
xchg
das
mov
aas
cmp
ja
repz
popf
das
clc
or
mov
hlt
add
jnp
jl
push
mov
pop
mov
ror
std
loopne
cli
inc
fdivrs
and
and
or
lds
cs
popl
icebp
xlat
fistpl
out
sub
sub
cmpsl
cwtl
sbb
loope
and
dec
je
sub
sub
jo
jge
sub
cli
sub
jl
cli
stos
lcall
push
sub
xor
ss
aam
cs
idivl
sahf
inc
dec
push
and
push
cmp
sub
inc
test
mov
test
or
sbb
test
rcrb
addl
aaa
sbb
mov
out
sbb
imul
mov
jo
popa
loopne
adc
sub
clc
es
xlat
sbb
xchg
push
inc
movsb
pop
movsl
mov
mov
mov
imul
adc
inc
movsb
cmp
pushf
repz
dec
xor
shrd
adc
and
mov
les
xor
daa
fucomi
dec
in
movl
mov
test
mov
stos
cld
mov
cmp
sbb
mov
and
sbb
pushf
insl
sbb
imul
xchg
outsb
jno
xor
xchg
sub
imul
test
rcrb
jl
mov
push
push
outsb
inc
mov
and
xlat
or
lahf
repnz
mov
call
subl
imul
jnp
push
clc
fwait
in
scas
and
ss
dec
jnp
cwtl
xor
js
lock
or
cmp
ret
lds
sub
lret
xchg
sti
jne
ss
js
nop
push
rcl
dec
xchg
loopne
mov
or
shll
cwtl
fsubl
jbe
push
aas
fiaddl
int3
xchg
jmp
insb
cs
lods
mov
xchg
cmp
rcrb
jecxz
inc
out
push
aad
ficoml
adc
insb
rclb
lret
dec
xor
aad
pop
pusha
adc
mov
mov
sbb
jp
mov
mov
xor
jo
bound
sbb
mov
mov
xchg
mov
mov
int
fcomps
push
pop
adc
aaa
mov
in
movsb
jb
cmpsl
cmp
or
imul
sub
adc
fwait
setg
in
push
or
xor
jge
ljmp
outsb
push
lods
sub
sub
jne
adc
add
rorb
ss
adc
cmp
add
mov
iret
xchg
jo
nop
sarb
pop
test
jl
imul
in
mov
cwtl
sub
lock
jecxz
repnz
cwtl
testb
xchg
cmpsl
lds
out
imul
inc
cmp
mov
and
movaps
cmp
addr16
popa
fs
and
lods
xlat
sbb
dec
repz
push
clc
mov
fs
push
inc
mov
sbb
sahf
push
cmp
scas
ja
jmp
or
dec
jo
push
shll
mov
sbb
dec
mov
jle
inc
jne
xchg
cmc
xor
ret
inc
sbb
inc
dec
lods
clc
or
ljmp
lods
out
pop
sbb
inc
adc
add
pushf
pushf
ds
ljmp
cmp
lea
xchg
gs
cmp
xor
push
dec
movsb
lcall
cmp
adc
loopne
daa
sbb
fdivr
pushf
lds
test
jecxz
mov
xchg
imull
fwait
test
mov
push
lock
push
mov
mov
testl
xor
or
mov
shlb
nop
mov
mov
lahf
fiadds
sbb
lret
mov
pop
xorl
xchg
fidivrl
lea
scas
jmp
arpl
shlb
stos
lods
jp
outsl
add
xor
lea
inc
or
or
xchg
cwtl
cmp
popf
stos
lea
push
and
mov
orb
xor
loope
jl
push
sbb
mov
mov
mov
mov
adc
loopne
aam
cmp
js
shr
add
mov
cmp
adc
in
push
xchg
hlt
sbb
hlt
test
pop
mov
pop
xor
xchg
jae
lret
jne
aaa
push
xchg
xlat
jno
inc
xor
ds
mov
push
mov
xchg
pop
ds
mov
mov
aam
lock
sub
mov
shll
or
ss
arpl
shrb
xor
sbb
insl
dec
and
cmc
mov
xorl
das
pop
loopne
mov
cli
mov
push
mov
mov
dec
mov
bswap
xchg
imul
icebp
test
sub
hlt
pop
lcall
imul
dec
lea
mov
fstl
pusha
mov
out
pop
sub
cmp
lret
std
dec
push
cld
jmp
std
cli
dec
mov
dec
lret
sahf
xchg
jmp
jmp
sub
repnz
cmp
imul
xor
mov
orb
addl
dec
aam
dec
frstor
and
or
fwait
out
cli
popa
push
push
rcl
add
cltd
jecxz
ljmp
cs
jp
mov
sahf
out
insl
push
add
out
cmpsl
sbb
mov
jp
or
fdivl
push
mov
sbb
jnp
cmp
inc
pop
loopne
test
mov
iret
xor
test
cmp
lods
and
in
jns
out
push
dec
sbb
movsl
cmp
add
xor
sub
mov
pop
fcmovne
push
jmp
sbb
add
in
rolb
negl
push
sbb
ds
clc
sub
pop
and
shl
clc
jb
jns
montmul
cmpsb
xchg
add
sub
jmp
loop
cmpsb
sub
mov
push
sahf
mov
inc
jbe
test
xlat
rsm
imul
push
imul
daa
mov
add
sahf
and
lods
rorb
and
ljmp
pop
inc
movzbl
sarl
sbb
loopne
pop
ds
popf
jnp
push
dec
push
pusha
jle
or
inc
jne
mov
adc
jnp
xchg
dec
mov
scas
outsb
loope,pt
addr16
enter
push
push
mov
mov
js
ljmp
int
inc
pop
cmp
mov
les
ja
jae
dec
sahf
xlat
loope
dec
cmp
or
je
mov
sar
xchg
adc
pusha
mov
aas
lds
test
mov
jmp
xchg
ficoms
arpl
xor
adc
call
and
mov
test
ffreep
and
je
xchg
rcrl
iret
iret
adcb
or
ror
adc
rol
cmp
nop
popf
cmp
in
lods
and
loop
cmp
test
int
je
push
ds
sbb
fistpl
insl
pmuludq
cmp
cltd
repnz
mov
sub
xor
pop
and
xchg
loop
mov
in
ds
lock
or
adc
xchg
bnd
hlt
sbb
daa
sub
xor
jnp
xchg
pop
jnp
sbbl
or
stos
dec
stc
outsl
mov
shrl
jecxz
mov
push
pop
jecxz
sub
add
pop
cmp
insb
shrb
std
cli
cmc
sbb
es
xor
xor
leave
jl
lods
dec
jae
push
les
lret
mov
enter
cmp
cmp
cmp
negl
pop
dec
outsl
jae
insl
test
jge
xchg
sub
dec
inc
mov
mov
int
shlb
data16
sarb
xchg
sbb
add
stc
and
insb
inc
fs
pop
mov
dec
ja
or
mov
ljmp
mov
test
call
jp
loopne
shlb
mov
xchg
pop
rolb
lods
add
jae
inc
cmp
push
jecxz
cli
inc
cli
sub
jne
push
cmp
rcrb
xor
js
mov
popa
and
into
and
xchg
or
lcall
jge
or
add
subl
mov
and
les
cs
inc
clc
loope
mov
jecxz
xchg
movsl
test
or
mov
cld
scas
lods
call
cmp
push
push
lret
jns
and
jo
push
xchg
add
xlat
adc
inc
xor
bound
and
mov
push
in
xor
mov
and
cwtl
and
mov
jp
bound
and
and
mov
or
inc
xlat
dec
xchg
incl
lcall
leave
mov
ss
std
les
and
add
fidivrl
pop
pushf
push
imul
lock
adc
dec
shrb
dec
data16
mov
mov
pop
xor
lock
add
sbb
out
inc
stos
adc
movsb
and
sub
sbb
sbbb
daa
cmp
xor
push
addl
or
sbb
scas
mov
out
loopne
mov
loope
mov
cmp
adc
pop
cmp
mov
mov
sti
out
push
insl
xchg
jle
cmp
ficoml
cmpsb
pop
pop
add
outsb
mov
push
cli
pop
add
shl
cwtl
push
add
pop
repnz
mov
pusha
add
pop
sub
in
scas
add
dec
into
testl
shll
mov
pop
lock
add
mov
pushf
inc
je
fisubrl
dec
adc
lds
jne
test
cmp
push
outsb
repz
jns
ss
fldt
gs
pushf
loop
cli
lret
cmp
out
add
nop
inc
popf
outsl
mov
xchg
pusha
xor
xchg
or
inc
xorl
in
shr
mov
adcl
ss
mov
loope
push
ret
cmp
mov
in
xor
aas
gs
or
sti
inc
push
add
icebp
sub
stos
mov
sbb
add
sub
mov
popa
lcall
push
cmp
or
jb
cmc
pushl
xchg
js
les
or
push
cmp
sbb
jae
shll
fisubs
fcompl
rorb
cmp
rcl
in
jl
les
mov
div
popf
les
pop
repz
push
add
or
pop
pop
andl
addr16
pop
dec
add
mov
test
out
xor
fadds
cmp
adc
pop
or
and
mov
rcll
inc
xchg
daa
sub
out
sub
icebp
add
pop
into
cmpsl
rorl
cmp
aaa
xor
lods
mov
adc
test
push
std
js
mov
push
loop
xchg
pop
das
xchg
icebp
ffreep
aas
add
and
adc
mov
stos
inc
inc
stos
test
data16
mov
mov
mov
cmp
xchg
jp
shll
pushf
dec
daa
mov
inc
xchg
jle
and
xor
add
inc
lahf
dec
inc
sub
adc
or
push
dec
aam
cmpsb
cmp
mov
shlb
add
add
fnsetpm(287
popf
jo
add
std
cmc
loop
cmp
pop
jl
es
mov
push
mov
fucomp
xchg
adc
ja
jne
sbb
sti
xorb
lcall
shr
jo
mov
aad
pop
dec
push
pop
add
jl
popa
lods
lcall
into
fildl
aaa
repz
mov
and
sti
ret
shrb
stos
sbb
inc
cmp
mov
add
mov
xchg
pusha
mov
mov
inc
out
stos
rolb
mov
in
in
stos
lret
sbb
in
rcll
dec
sub
xchg
pop
pushf
fisubrl
adc
pop
std
lret
pop
lahf
push
push
enter
add
jecxz
rolb
sahf
xor
xchg
lock
mov
orb
mov
dec
sub
ljmp
xchg
stos
loopne
pop
loope
out
add
cld
ret
pop
xorl
mov
inc
sbb
jge
sarl
xchg
adc
push
loopne
sbb
sub
adc
jp
push
cmp
aaa
cli
mov
mov
xchg
add
imul
shrb
cmpsb
pop
movsl
jle
mov
nop
jg
int
or
jle
xor
sbb
clc
mov
clc
add
jecxz
cmp
adc
pop
push
and
jbe
inc
add
aam
mov
stos
or
bound
xor
out
orl
push
xchg
fidivrl
sbb
dec
fwait
adc
ljmp
and
add
push
hlt
movsl
lods
push
ljmp
and
dec
adc
lock
call
out
mov
popa
rolb
fwait
adc
loop
jle
pop
add
cmp
pop
mov
idivb
sbb
fdivrs
scas
iret
and
lds
andb
aas
scas
push
lret
mov
shll
cltd
movsb
pop
adc
xchg
and
pop
outsb
sbb
std
cmpsl
mov
rorl
mov
imul
int3
jge
lret
mov
shl
aaa
pop
insb
mov
out
pushf
in
xor
aas
push
mov
mov
addr16
cmp
loop
adc
mov
add
mov
test
sub
xchg
pop
ja
pushf
mov
divl
push
and
jno
pop
std
sbb
ja
cs
sbb
pop
cld
rdmsr
nop
testl
pop
out
fucom
inc
pop
mov
jl
jg
repz
adc
test
pop
adc
scas
cmp
add
mov
add
xor
or
dec
push
dec
flds
push
mov
xlat
dec
pop
jle
hlt
xchg
sub
in
int
push
repz
dec
lret
enter
sub
cmp
push
sub
in
dec
cmp
dec
mov
cmpsb
in
adc
fstpl
jns
mov
orb
pop
jmp
pop
adc
das
and
je
leave
clc
xchg
ljmp
add
mov
pushf
push
pop
insl
inc
imul
ret
fisttps
hlt
lahf
jp
sub
loopne
push
xor
rcl
adc
lock
mov
push
scas
lock
sub
sahf
push
push
js
jbe
shll
pop
and
xchg
popa
add
test
cmpsb
jno
mov
pop
sahf
cmpsb
popl
je
jmp
add
push
clc
aad
lock
xor
xchg
mov
add
shrl
or
pop
std
aam
rolb
into
xchg
mov
inc
mov
inc
xor
insb
sbb
pop
ss
jecxz
dec
pop
and
es
push
sub
nop
sbb
test
sub
or
cmc
push
or
cmp
jns
mov
insb
lods
data16
out
cli
xchg
mov
mov
add
sbb
add
sbb
add
jns
mov
lock
mov
enter
std
adc
jnp
push
imulb
inc
out
sbb
imul
mov
movsl
lock
push
jge
scas
mov
mov
icebp
repz
enter
rclb
shrb
jl
and
js
pusha
in
les
jmp
dec
xor
orb
pop
jl
imul
mov
pop
xor
roll
dec
jae
icebp
inc
push
lea
pop
dec
and
xchg
cmp
jb
rorl
movsb
mov
add
sbb
pop
sbb
mov
sub
pop
cmpsl
shlb
adc
in
out
mov
mov
and
sti
inc
xor
and
adc
loope
jbe
gs
cmp
in
cld
loopne
mov
sahf
dec
cmp
add
sub
sbb
jnp
cli
sub
add
sbb
pop
or
cmpps
fldl2e
push
cli
mov
adc
push
and
jne
pop
push
leave
or
sbb
arpl
adc
add
test
loope
adc
aam
dec
dec
sahf
adc
adc
ds
popf
in
iret
mov
lock
mov
mov
loope
mov
inc
sahf
dec
cmp
aaa
sbbb
in
mov
les
push
jmp
hlt
std
and
in
in
ss
incl
test
xchg
inc
pop
and
lods
inc
add
es
pop
mov
and
adc
lods
adc
push
scas
rolb
scas
mov
rorl
pop
pushf
fs
mov
push
add
sbb
cs
mov
push
mov
insb
cmp
pop
jbe
je
cmp
mov
push
std
jecxz
mov
mov
sbb
cmpsl
sahf
pop
cld
hlt
inc
rcll
pop
ljmp
pop
jl
push
lcall
mov
mov
push
in
shr
push
dec
push
or
loope
pop
fneni(8087
xchg
inc
dec
mov
or
data16
add
mov
call
jo
cmp
aam
icebp
pop
fcmovnu
push
xlat
in
cs
cmp
adc
jl
add
xchg
dec
iret
daa
inc
mov
add
leave
test
mov
pop
jecxz
ret
adcl
and
push
fimull
cwtl
sub
sub
out
lret
dec
imul
mov
mov
jle
xor
popa
or
cltd
clc
jmp
jo
pop
leave
xor
test
mov
pop
xchg
push
mov
movsl
arpl
add
mov
roll
iret
sbb
adc
push
test
adc
add
jb
in
jo
je
mov
mulb
cmpb
scas
test
ljmp
rol
cltd
xchg
mov
mov
int
outsl
int
bound
jle
pop
fsubrl
loope
jl
ficomps
cli
test
xor
ljmp
sbb
pop
jmp
outsl
mov
cmc
stos
clc
sub
lea
adc
mov
xchg
cmp
mov
adc
xlat
cmp
and
imul
sbb
lods
insb
in
jo
std
mov
push
lcall
or
jl
ffree
iret
hlt
pop
js
mov
xchg
sbb
push
scas
and
lods
notl
sub
dec
and
push
adc
stos
adc
push
pop
jb
or
mov
sbb
pop
es
mov
xchg
mov
iret
sbb
mov
enter
sub
and
dec
int3
sbb
call
iret
and
cmp
call
icebp
aaa
lret
scas
cmc
inc
icebp
add
push
sbb
cld
jmp
js
lds
add
add
movb
xchg
or
xor
or
adc
pop
jne
daa
lahf
or
and
insl
jbe
mov
dec
mov
call
jmp
adc
mov
cltd
fisttpl
mov
xor
sbb
and
or
out
sub
ja
ja
push
cmc
jecxz
jle
or
xor
sbb
mov
jle
mov
fsubrs
pop
inc
cmpsl
int3
loop
rcll
mov
or
push
scas
arpl
add
dec
sar
xchg
pusha
andb
mov
test
adc
pop
cmpsl
lcall
popa
les
xlat
mov
jg
adc
add
je
mov
aad
out
xchg
adc
dec
testb
stos
pop
dec
and
and
add
sbb
or
mov
lds
int
popa
add
and
sub
test
icebp
add
adc
mov
popa
insl
cmp
jne
cs
inc
xchg
cmp
daa
adc
add
outsb
pop
dec
sub
or
jmp
pushf
into
stc
push
sub
aam
adc
inc
jno
mov
push
mov
mov
repz
imull
enter
mov
repz
daa
stos
add
or
fdivl
push
pop
outsl
rorb
xchg
inc
and
add
pop
lock
shlb
ljmp
cmp
iret
mov
add
pop
ds
ret
fdivrs
loope
sbb
dec
fnstcw
mov
add
adc
pop
sbb
sbb
shrb
sbb
movsl
arpl
lcall
pusha
xor
adc
ret
add
loop
mov
loopne
xchg
lods
movsb
bsf
cld
mov
cltd
ljmp
lock
push
das
mov
mov
sub
js
fiaddl
mov
dec
ljmp
aaa
cli
xor
daa
leave
loop
lds
insl
xchg
ds
out
loopne
cmp
adc
mov
jne
cmp
jp
sahf
dec
cmp
lock
fcompp
cmp
add
orb
dec
clc
roll
ficomps
pusha
pop
sbb
inc
aaa
pop
js
pushl
rolb
inc
push
or
fwait
test
out
xchg
js
or
xchg
xchg
mov
mov
in
lods
in
imul
aad
lock
cld
push
ljmp
icebp
mov
and
dec
sbb
in
jl
aam
cmp
ror
jmp
bound
pop
pop
adcb
mov
xor
nop
sub
js
aas
cld
lea
iret
sub
xchg
daa
and
sub
jl
or
inc
or
notl
rorl
idivb
inc
xor
mov
imul
popa
test
aaa
mov
or
repnz
movsl
cmpsl
jno
pusha
pop
je
and
loope
add
dec
inc
lahf
cmp
mov
iret
dec
or
cwtl
mov
mov
daa
lods
scas
mov
dec
loope
cmp
xor
cmpl
jne
sbb
push
adc
inc
pop
inc
lahf
aam
pop
xor
je
hlt
test
push
pop
inc
stos
or
pop
repz
jecxz
jmp
mov
aaa
lock
sbb
popa
cmp
insl
popf
rolb
fcompl
jae
imul
add
xor
cmp
push
rcll
stc
pop
aas
dec
jbe
addl
fimull
mov
jmp
insb
shlb
sub
mov
add
addl
int3
ret
ret
inc
test
pop
scas
pop
ret
xchg
jecxz
pop
call
and
push
xchg
cmpsl
rcrb
cli
xchg
mov
sbbb
scas
pop
xchg
adc
pop
xor
jge
xor
inc
fs
inc
shll
fmull
sbb
sbb
mov
out
test
lcall
int3
call
or
jne
loope
roll
dec
jns
insb
jl
mov
cmp
dec
repnz
push
clc
cmpsl
jmp
dec
shll
jbe
push
or
icebp
ljmp
sbb
pop
inc
test
and
or
das
fs
push
sub
scas
call
lcall
sar
pop
fs
loopne
push
push
mov
sbb
ret
js
and
clc
pop
add
sbb
adc
cmpsb
scas
outsb
pop
insl
test
movsb
cmp
push
cmovle
mov
sub
mov
jnp
add
int
aam
ds
xor
jge
sbb
add
mov
push
fildll
xor
pop
and
jns
mov
mov
sti
aaa
js
push
fsubr
shl
hlt
adc
dec
lea
lcall
dec
sub
data16
dec
insb
push
xor
movb
ljmp
cmpb
jae
push
pop
stos
dec
adc
adc
daa
fwait
push
sub
bound
mov
jno
outsb
ja
dec
lds
fcoml
loop
in
orb
sbb
push
dec
add
or
in
and
loope
mov
aas
hlt
insb
jmp
and
pop
and
fisubrl
pop
or
dec
scas
and
pop
insb
sbb
and
sub
jle
lret
or
je
push
or
sti
test
pop
fsubl
inc
js
add
outsb
inc
jnp
loopne
cld
adc
push
jmp
ss
push
sbb
icebp
movsl
into
cmp
mov
bound
imul
add
insb
test
or
cmp
push
int
aam
ds
sbb
jmp
mov
loop
cmp
mov
mov
lret
ret
add
dec
pop
jmp
pop
fistl
in
add
faddp
outsb
aaa
fnsetpm(287
lea
ret
outsl
ljmp
mov
xchg
sbb
dec
hlt
nop
bound
outsb
dec
mov
or
idivb
imul
test
jl
cmp
jle
std
dec
loope
mov
jns
dec
ds
ja
sarl
cmc
sahf
dec
sbb
jmp
push
or
lock
pop
icebp
mov
imul
lret
lret
sarl
cmovae
rorl
xor
mov
stos
cmp
cmp
push
int3
bound
xor
mov
mov
jb
popa
add
test
test
filds
lods
and
shr
cmpl
es
fcoms
stos
push
xchg
jmp
cmp
call
shrb
cmp
les
lods
scas
lds
mov
inc
mov
jns
outsb
inc
ljmp
pop
lret
mov
outsb
pop
add
pop
sbb
pop
mov
or
xchg
lds
and
cmpl
in
leave
pop
mov
sub
call
cmp
enter
outsl
repnz
xchg
push
inc
rcrl
mov
lods
imul
xchg
sbb
mov
rol
je
jne
sub
pusha
pop
movsb
dec
dec
in
ret
das
jne
call
jns
arpl
mov
pop
inc
stos
outsl
mov
jecxz
ret
or
enter
sbb
int3
rcrl
cld
inc
push
or
repnz
xor
pushf
mov
loopne
notl
sub
loope
movsl
std
and
movsb
lret
mov
or
outsb
mov
je
cmp
mov
cmpsb
or
add
push
add
add
sbb
mov
sub
cmp
adc
xchg
push
adc
and
mov
repnz
cmp
cmpsl
adc
cmp
sbb
pop
js
mov
push
push
jecxz
mov
cmpsl
lods
movsl
int
outsl
nop
add
repz
cld
mov
rorb
fistpll
push
negb
jecxz
aam
lahf
into
adc
inc
std
jle
jmp
popa
popl
popa
enter
cmp
out
mov
inc
hlt
inc
mov
ficoms
jns
cs
test
mov
arpl
cmpsl
paddb
xor
daa
rcrl
loope
cmp
and
sbb
outsb
cmc
xchg
inc
sbbb
pusha
and
jbe
mov
aam
inc
push
and
subb
js
inc
loop
dec
adc
inc
inc
inc
test
lea
pop
adc
stc
pusha
ljmp
sbb
leave
scas
pop
lret
xor
jle
fmull
dec
sbb
xor
xchg
sub
sub
mov
orl
mov
enter
sub
push
push
xor
adc
mov
jg
mov
jecxz
mov
rcrl
sbb
in
adc
push
cs
cmp
push
ds
push
popa
or
inc
push
aaa
mov
lods
shrb
xchg
push
fidivl
stos
or
pusha
scas
mov
or
ret
pop
loop
cmp
push
ficompl
dec
es
mov
jnp
cmp
sbbl
xchg
jne,pt
cmp
pop
filds
xchg
nop
outsb
in
sbb
mov
jns
scas
add
outsl
push
call
sbb
adc
jecxz
add
cmpsb
xor
sbb
in
icebp
rcrl
aad
push
pop
or
xor
aam
jl
into
div
imul
ljmp
aam
ret
lds
inc
scas
jb
sub
mov
jg
pop
mov
cwtl
icebp
stos
mov
push
fcomi
ja
push
mov
pop
fdiv
xchg
dec
push
sub
mov
mul
das
mov
mov
notb
rcl
sub
mov
sbb
or
lods
xchg
sbbl
dec
mov
fldenv
testl
push
stc
xlat
sub
sbb
pop
mov
ret
xchg
cmp
push
fwait
loopne
insb
dec
outsb
addb
mov
adcb
fmuls
cmpsl
sub
jns
insb
and
jl
sbb
or
fwait
sub
and
lret
shlb
lahf
dec
jnp
lock
sahf
nop
mov
fcoms
mov
pop
repnz
or
push
aaa
lcall
aam
in
jns
subb
jns
push
clc
mov
xchg
pusha
push
leave
test
push
or
icebp
xchg
and
dec
pusha
imul
je
je
inc
pop
jo
pop
or
push
pop
clc
jl
dec
add
adc
stos
sub
or
cmp
push
push
xchg
mov
push
xchg
add
das
add
fcmovnbe
dec
sti
orb
push
jbe
dec
test
sbb
ds
jl
or
pop
cld
shll
dec
add
fs
stos
loopne
jle
xchg
shll
psllq
inc
and
push
mov
xor
outsb
aam
inc
lds
test
fwait
bound
clc
icebp
xor
push
shlb
adc
jno
jg
jb
or
inc
push
orl
lods
inc
nop
fcomps
popa
imul
sbb
aaa
mov
stos
push
jbe
xchg
and
push
cs
arpl
das
stc
idivl
sahf
loope,pn
jb
push
nop
les
dec
lea
dec
clc
or
in
ljmp
shrb
sbb
shl
mov
inc
sahf
mov
lcall
mov
xchg
stos
xchg
cmpsb
cs
xchg
lods
movsb
mov
xlat
loopne
add
orl
add
cmp
push
push
adc
out
rclb
cmp
inc
mov
dec
add
mov
sub
jle
push
mov
pop
lds
push
inc
xlat
jecxz
imul
lahf
sbb
ret
mov
out
adc
adc
jb
xor
and
mov
cld
jmp
fiadds
scas
pop
mov
push
insb
cmp
jmp
pop
movsb
dec
pop
ja
out
bound
cs
mov
push
push
add
xlat
jo
out
test
leave
std
ret
mov
sbb
idivb
jb
leave
mov
scas
or
scas
or
daa
inc
push
cmpsl
push
jns
cld
jecxz
dec
sub
scas
inc
jnp
inc
add
in
fs
xchg
loopne
fsubrl
fstpt
inc
mov
or
cld
jl
pushf
leave
repz
hlt
sbb
mov
cltd
je
fidivrl
test
inc
xor
xchg
jno
push
std
add
jge
or
cmc
inc
sbb
jno
aas
add
repz
loop
sbb
in
pop
out
fmul
pop
cmp
cmp
dec
adc
enter
decl
add
add
or
jmp
inc
or
push
cmp
mov
stos
mov
mov
mov
pop
je
cmp
out
xor
mov
or
nop
mov
or
dec
lea
jno
das
push
sub
aad
mov
add
xchg
out
cld
xchg
pushf
orps
pop
or
xchg
in
mov
fwait
sub
insl
adc
test
mov
mov
iret
push
jmp
nop
cmp
out
cld
push
sbb
add
or
test
push
xchg
pavgb
and
sbb
insl
push
cmp
jecxz
in
cmc
sub
cmp
dec
mov
shrl
movsb
sahf
cli
dec
data16
inc
cmp
bound
cmp
ficompl
dec
jno
cmp
ret
mov
mov
int
aas
sbb
push
adc
loopne
sub
mov
jecxz
fldcw
add
lret
loopne
mov
push
xor
and
adc
push
xor
sub
jp
je
loope
xchg
add
fsubl
mov
test
mov
and
mov
xchg
lea
movsb
leave
idiv
mov
sbb
push
ljmp
stc
cmpsb
inc
mov
mov
inc
pop
int3
stos
lock
push
pop
loop
mov
loopne
rorb
and
cwtl
dec
or
mov
mov
pop
xchg
fs
inc
or
or
cmp
je
pop
or
dec
or
sbb
mov
fwait
fwait
or
cmp
call
ss
or
add
mov
dec
pop
add
cld
mov
cltd
mov
adc
icebp
dec
xchg
xor
cmpsl
addl
push
aad
inc
and
std
sbb
push
mov
test
push
push
jecxz
add
shrb
mov
jp
dec
icebp
test
cmp
pop
imul
pop
sbb
insl
das
pop
sbb
fildl
std
popa
cld
add
andb
pop
xchg
mov
test
xor
in
adc
loope
mov
jbe
dec
and
jb
and
sub
adc
rorl
pop
pop
mov
iret
sub
xor
or
andl
lds
push
sbb
xlat
xchg
xchg
les
cli
js
pop
push
shlb
mov
fidivrl
mov
pop
fwait
push
loopne
hlt
data16
push
mov
int3
jecxz
int
addr16
mov
mov
fs
mov
fiaddl
dec
inc
jge
mov
stos
jb
xchg
cmp
insl
jl
sub
mov
sub
mov
pop
loope
mov
push
sbb
popf
add
in
mov
jg
pop
dec
adc
ret
adc
ss
inc
aad
cmp
mov
out
push
and
js
rol
mov
sbb
lods
push
jge
pop
movsb
push
or
sub
mov
mov
fs
xchg
ds
addr16
adc
or
and
xchg
xchg
mov
jo
pushf
push
js
mov
sbb
shl
inc
mov
imul
outsb
dec
je
pop
loop
inc
ss
dec
stos
xorl
shlb
nop
std
adc
cmc
jmp
and
leave
es
dec
pop
mov
add
pop
scas
push
jle
sar
xchg
mov
push
cltd
lds
test
rcll
or
dec
ljmp
js
xchg
xor
sub
jl
jno
cld
inc
jl
movsb
int
outsl
js
test
fisttpl
push
ds
jmp
hlt
sahf
push
xchg
filds
sbbl
inc
loope
and
ficompl
xlat
and
or
jno
push
fsubrs
sbb
mov
inc
aam
mov
fwait
std
cmpsb
fadds
xchg
scas
or
rcl
lret
daa
shll
cmp
jp
call
iret
inc
jp
shll
sbb
nop
lea
push
xlat
cli
mov
adc
ret
dec
pop
adc
sbb
call
inc
or
es
das
cmp
sahf
xchg
imul
out
incl
shrb
stos
adc
jp
sahf
sar
out
fisubrs
clc
cli
pop
pop
mov
cmp
in
les
or
dec
push
pop
insb
enter
hlt
fisubs
adc
add
pop
xchg
fs
inc
sub
pusha
pop
push
cwtl
ret
xchg
adc
in
ret
dec
pop
pop
test
mov
int3
jbe
lcall
fsubs
insb
aad
outsb
rorl
sub
add
push
cmp
push
jne
add
mov
pop
es
scas
aas
mov
out
inc
mov
loope
push
cmp
mov
sbb
and
lcall
jno
jo
movsl
adc
cvtpi2ps
in
push
xor
pop
mov
inc
sbb
shrl
pop
lds
imul
cmp
lret
inc
roll
stos
dec
pop
movsl
cld
jle
lock
pusha
ret
mov
or
xor
mov
rorb
cmp
cmpsb
aam
hlt
sahf
pop
clc
loopne
dec
add
mov
cmpb
adc
sbb
mov
push
sub
and
pop
add
mov
jle
pop
mov
push
loope
or
fistpll
les
scas
sbb
sub
sbb
aam
ret
pop
and
arpl
insl
inc
xlat
into
fwait
dec
sarw
je
mov
clc
cmp
fcmove
add
sub
pop
xor
and
mov
add
pusha
sarb
cmpsb
sbb
dec
mov
call
vandnps
or
imul
add
addb
int
xchg
cmc
mov
iret
jo
push
pusha
jl
sub
dec
xor
aad
rol
xchg
inc
xchg
movsb
pop
xor
inc
fbld
sbb
hlt
adc
fcomps
sarl
daa
jae
xchg
cmp
jecxz
out
icebp
inc
sahf
and
jb
or
enter
imul
adcl
and
xor
or
movsl
fcoms
lahf
aas
shrb
sub
test
cmc
xor
je
lods
sarl
sub
sub
rolb
std
stos
repnz
scas
mov
add
push
dec
sub
loope
and
scas
filds
es
jns
lret
insb
lcall
idivl
ret
clc
scas
cmp
loope
mov
cld
inc
ja
mov
jmp
add
fiaddl
aas
add
mov
add
mov
cmp
xor
imul
in
jns
shrl
and
inc
push
sarb
js
out
mov
mov
adc
insb
fprem
sub
cmp
sub
and
mov
out
adc
push
sahf
mov
imul
push
ds
xchg
adc
aad
sti
pop
xchg
int3
lahf
lock
call
in
mov
sub
insl
xorb
scas
sbbl
or
in
xor
or
mov
xor
into
insl
fldl
cmp
add
jnp
incb
pop
mov
mov
mov
or
xchg
ja
scas
nop
imul
pop
icebp
scas
mov
or
cs
dec
ljmp
push
mov
outsb
cmc
inc
jns
mov
ja
xlat
enter
mov
pop
mov
bound
in
xchg
stos
xor
cli
test
jp
dec
pop
jl
lds
and
inc
jl
add
jae
pop
sbb
fs
aad
cmp
xlat
hlt
hlt
idivb
push
adc
or
sbb
pushl
leave
xor
and
mov
or
in
cli
push
jns
and
mov
add
pusha
clc
sbb
loopne
mov
jl
inc
cmp
jnp
icebp
test
inc
in
pop
push
test
add
cmp
pop
loope
sbb
ljmp
fwait
out
mov
jg
adc
lods
sbb
pop
hlt
es
and
push
lods
xchg
hlt
dec
lods
arpl
push
bound
inc
mov
popa
addl
pop
jl
mov
cmpsl
je
aad
adc
and
test
inc
lcall
sbb
inc
mov
xchg
dec
push
bound
ret
nop
mov
or
inc
sahf
mov
dec
mov
and
adc
cmpsb
ds
mov
mov
xchg
mov
and
pop
inc
lcall
and
je
mov
jge
add
out
ficoml
lret
test
dec
movsb
lock
popa
xor
dec
or
movsb
push
stc
inc
cld
jmp
in
sbb
dec
jbe
adc
mov
orl
js
mov
cmpsl
jno
xor
mov
cmp
rorb
fwait
xor
scas
movq
test
push
mul
jge
inc
in
mov
fsubl
ja
bound
clc
outsb
movsb
shrb
aam
inc
pop
lods
xor
or
mov
daa
mov
xor
pusha
pop
sub
rcrb
adc
rorb
xchg
cmp
cmp
adc
shrb
xor
call
sub
loopne
out
sub
xchg
fdivr
lods
out
jmp
xor
sbb
xor
mov
cmp
add
movl
inc
push
pop
xchg
jbe
xchg
ds
rclb
pushl
fadd
shlb
pop
sbb
popa
xchg
xchg
xor
xchg
repz
lods
jl
jg
or
icebp
pop
cmp
xlat
cwtl
aas
cmc
rorb
scas
push
sub
sbbb
shll
mov
adc
ret
pop
enter
mov
mov
inc
jns
test
repz
dec
out
aam
mov
aas
xor
jmp
lea
sahf
jb
pop
clc
adc
and
mov
out
cmpsb
add
pop
scas
mov
out
cwtl
or
push
mov
shl
movsl
fstpt
and
mov
inc
xchg
aaa
divb
fs
inc
je
icebp
hlt
inc
inc
ja
add
test
or
sbb
and
fisttpll
out
pop
mov
inc
stos
mov
in
jne
sbb
jle
fbld
xchg
sub
dec
add
mov
hlt
in
pop
ret
cmp
aam
inc
xorb
ret
adc
test
xor
loope
outsl
rcrb
nop
jb
test
lods
fimull
sbb
std
inc
push
hlt
pushf
loop
lea
mov
mov
in
adc
fsubl
lods
cmp
cltd
sbb
decb
adc
mov
dec
jl
jns
fucomi
and
inc
movsl
test
lcall
iret
pop
mov
into
mov
push
int
lret
out
addb
fidivrl
sub
cmp
jle
jmp
pop
adc
inc
cld
xchg
push
cmp
cs
gs
sbb
xchg
jne
xor
mov
mov
popa
pushw
sbb
fcom
sub
or
out
faddl
pop
push
dec
outsb
or
xchg
mov
xor
dec
xor
loop
push
bound
in
ja
shrb
dec
in
subb
cwtl
test
sub
add
pop
sbb
inc
or
mov
in
push
fbstp
in
push
dec
popa
xchg
xchg
pusha
pop
out
mov
push
rcr
sbb
mov
xchg
and
es
or
cmp
cmp
sub
push
lret
cmc
adc
pop
pop
lods
inc
jp
loope
mov
fcomps
arpl
sub
movsl
das
popa
out
daa
jge
dec
sbb
lret
mov
aas
mov
pop
cmpsl
into
rcrb
jl
xchg
call
xchg
ret
les
mov
mov
inc
sub
mul
mov
mov
sub
sub
add
or
leave
push
shlb
mov
jne
in
popa
aam
push
nop
js
lds
fwait
jle
inc
pop
jne
mov
add
ss
push
jbe
popf
pushf
pop
xchg
call
subb
xor
cld
mov
sbb
pop
xor
sarl
mov
or
or
add
fmull
adc
jae
sub
rorl
aad
xchg
dec
sbb
adc
push
aam
outsl
test
icebp
jne
repnz
lret
dec
push
add
jbe
dec
cld
ja
hlt
aaa
fistl
outsb
and
and
mov
ret
cwtl
sbb
add
push
or
add
aad
and
push
insb
out
stos
insl
inc
ds
stos
test
pushf
sarb
in
sarb
scas
inc
sbbb
andl
push
dec
fdiv
loope
fcoms
lock
andb
cmp
cmpl
insl
push
pusha
dec
fwait
xor
sbb
scas
cmp
jp
jo
and
insb
mov
cmp
mov
call
lret
mov
inc
mov
xchg
xchg
pop
pop
sub
test
inc
inc
test
jo
add
imul
bound
rcr
and
in
push
loop
dec
addb
std
shlb
jmp
jp
inc
jge
outsl
sbb
sahf
jo
pop
mov
popf
fwait
sub
fdecstp
jno
cs
in
pop
lret
push
insb
or
mov
pop
jbe
or
mov
nop
mov
jecxz
xchg
clc
mov
fcoml
lret
push
adc
adc
arpl
or
orl
dec
sub
jbe
push
xor
xor
xchg
dec
jo
xchg
lret
movsb
cmp
stos
nop
movsb
jno
insb
xchg
dec
pop
mov
notb
icebp
stos
dec
mov
mov
iret
dec
in
test
movsl
adcb
ret
dec
and
mov
sub
pop
pop
cmpb
bound
mov
mov
loope
js
bound
int
jbe
jno
xor
pop
imul
xchg
shr
mov
mov
pop
lock
mov
or
cmp
popa
cmp
mov
pop
pushf
add
push
xor
adc
das
outsb
add
xchg
les
stos
xor
js
scas
mov
aas
loop
out
repnz
les
adc
js
add
sub
mov
in
push
pusha
add
jp
fcomp
pop
add
inc
mov
xchg
xchg
jne
lds
movsb
mov
mov
lock
test
ds
stos
xor
cld
sbb
mov
dec
xor
sbb
push
inc
scas
fsts
ds
inc
jnp
xchg
mov
iret
int
push
inc
push
or
sub
das
sahf
cmp
int3
shl
addl
dec
pop
sbb
and
cli
jnp
cmp
ds
xor
movsb
mov
stos
pop
adc
cmpsb
call
xor
cld
or
dec
push
loopne
js
adc
push
cmp
enter
fstpt
xchg
aas
sbb
add
xor
daa
scas
rcrb
mov
in
xchg
jl
mov
subb
in
cld
aad
rolb
push
mov
push
sbb
movsl
push
psubsb
add
sbb
lods
push
adc
add
push
or
cmp
xor
pop
cs
js
pusha
sub
stos
div
mov
pop
lock
mov
or
rolb
insb
scas
fstps
pop
jg
mov
push
std
mov
inc
test
dec
sub
cmp
hlt
rclb
dec
rol
and
lds
jo
jp
mov
xchg
lods
lahf
jp
dec
lahf
int
pop
pop
ret
loope
inc
adc
fiaddl
sub
movsb
jle
int3
ss
sub
lret
push
sbb
sub
jae
mov
js
xor
insb
mov
inc
jl
jmp
ja
leave
jecxz
flds
cmpsb
outsl
mov
fucomip
mov
out
loop
adc
ret
test
fstl
xchg
dec
dec
test
inc
ja
clc
adc
cwtl
movsl
loopne
psubusw
inc
mov
das
xor
mov
xor
pop
sub
fnsave
ss
mov
xchg
add
popf
and
icebp
inc
pop
loope
or
es
and
xor
or
adc
push
mov
shrl
cmp
imul
push
lods
inc
lcall
daa
lahf
les
rorb
jmp
loopne
push
mov
inc
sbb
xchg
leave
xchg
xchg
mov
mov
mov
fmulp
cmpsb
xor
pushf
ss
lods
push
add
mov
aam
cmpb
xor
mov
push
push
outsb
daa
xor
jmp
enter
scas
mov
fcom
movsl
jle
cs
and
sbb
or
loop
fstpt
pop
test
xor
or
xor
les
je
notl
or
gs
imul
push
aas
leave
mov
add
shrl
test
dec
xor
adc
aad
fdivrp
mov
test
mov
push
iret
nop
in
js
shr
push
das
jle
add
or
mov
sub
push
lcall
xchg
fcoms
cli
imul
rolb
out
and
in
sub
int
mov
push
pop
add
imul
jmp
inc
aad
adcb
pop
test
mov
push
or
jp
inc
jmp
not
lods
xchg
add
pop
ret
dec
jp
lock
dec
loope
and
das
rcrb
mov
rcrb
or
clc
jp
push
shrb
test
add
mov
and
mov
adc
xor
and
arpl
sbb
rorl
aas
mov
mov
mov
mov
mov
push
mov
push
lods
imul
cli
sub
and
push
cmp
dec
and
jb
inc
pusha
mov
and
in
out
sub
cmc
inc
lret
dec
add
xchg
scas
push
add
ds
inc
sbb
push
sti
mov
or
lret
mov
pop
iret
dec
inc
ret
or
sbb
push
movsl
ja
xchg
sarb
pop
pop
mov
fmul
jne
pop
ljmp
mov
inc
stc
inc
pop
cmp
add
jmp
inc
sbb
push
sub
inc
jne
cmpsb
adc
xor
andl
and
jb
adc
jbe
in
cmpsl
loopne
sbb
adc
mov
clc
negl
or
xor
inc
adc
add
aam
xchg
jge
sbb
lea
insl
cld
in
inc
sar
dec
clc
inc
ret
lcall
idiv
sub
jmp
fcompl
sbb
jg
out
rep
pop
sub
int
stos
bound
addr16
xor
in
sbb
enter
mov
and
pop
in
mov
nop
sahf
mov
xlat
xor
xor
incb
dec
loop
cmp
or
nop
stos
pop
push
mov
ljmp
or
or
sbb
cmp
das
loopne
test
scas
inc
push
js
sub
outsl
daa
aad
incb
sub
sarl
lcall
push
adc
stos
add
pop
test
mov
mov
cmpsl
leave
xchg
adc
repz
xchg
jo
inc
lcall
add
dec
jl
sbb
push
test
jg
pop
inc
mov
push
repz
pusha
shrl
sbbl
push
add
mov
jmp
cmc
sti
mov
lahf
push
mov
out
xor
add
mov
mov
movsl
imul
notl
fs
sbb
in
in
adc
sub
nop
aad
movsb
mov
push
mov
dec
mov
addl
popf
jne
imul
mov
pop
insb
jle
and
out
fucomip
lcall
cli
mov
negb
or
mov
icebp
adc
adc
inc
cmpsb
dec
cmp
jmp
sahf
xchg
mov
push
adc
xchg
jmp
xchg
sahf
and
and
insb
out
fsubr
mov
das
ss
mov
faddl
rep
dec
insl
out
cli
stos
es
xlat
aaa
addl
xor
sbb
dec
out
jge
icebp
xchg
adc
sbb
sub
popa
fcoml
push
cld
xchg
and
cmc
cmp
mov
sahf
or
sbb
vmread
out
mov
adc
pop
cld
shlb
fwait
xchg
mov
in
push
or
add
addr16
mov
inc
sub
push
xchg
mov
and
sub
xor
mov
mov
test
repz
daa
dec
mov
jmp
push
stc
addr16
xor
pusha
jbe
pop
data16
mov
stc
pop
pop
rolb
pop
stos
xchg
mov
inc
and
jne
mov
and
sbb
pop
clc
xor
sarl
xchg
pop
sarl
push
sbb
ret
adc
rorb
sti
fsubrs
jg
push
or
inc
push
cmp
jns
lds
cltd
inc
addr16
inc
shll
adc
cmpsb
aas
popf
pop
mov
shlb
fisttpll
adcb
or
jg
dec
xor
xor
dec
std
std
in
jnp
mov
mov
jo
mov
and
xchg
push
sbb
imul
inc
test
push
xchg
iret
cltd
lea
and
jmp
cmp
repnz
popf
add
jo
std
pop
adc
outsl
dec
bound
add
std
call
sbb
ret
add
scas
sub
fst
sub
inc
fnstsw
mov
push
insl
imul
int3
cltd
push
test
sbb
xchg
pop
cmp
push
push
xor
rolb
fldenv
insl
scas
and
push
cmp
mov
enter
lock
mov
iret
mov
int3
jo
pop
sub
adc
stos
mov
mov
pop
dec
mov
pop
subl
adc
xchg
xchg
push
ss
jle
aam
inc
sbbb
iret
aad
xchg
pop
pop
xchg
and
mov
lcall
push
sahf
jg
inc
shrl
sub
push
loope
pop
negl
ret
lcall
cmpl
mov
js
pop
cmc
sahf
shl
fs
jge
adc
sbb
test
movsl
xor
xchg
insl
push
cmp
mov
fs
or
cwtl
push
mov
out
xchg
sbb
repz
repz
pushl
pop
andb
cs
icebp
push
or
mov
push
cmp
mov
lahf
sbb
jnp
and
cmp
adc
or
xchg
adc
mov
arpl
or
data16
adc
dec
push
add
ljmp
pop
test
push
hlt
out
in
test
test
mov
cli
stc
js
xlat
outsb
adc
test
pop
lds
xchg
mov
loop
jle
test
outsb
pop
xor
xchg
mov
test
add
xor
movsb
ja
in
lock
sti
mov
inc
in
dec
push
or
inc
outsb
icebp
add
pop
and
sbb
pushf
mov
fwait
nop
lock
dec
rcll
ret
jmp
and
leave
jbe
mov
xchg
mov
cli
inc
subl
mov
lock
push
sbb
sbb
dec
pop
nop
les
mov
addr16
jl
xor
push
loop
pop
lret
loop
sbb
adc
xor
inc
out
fldenv
sub
cmpsl
aaa
ret
xchg
loope
stos
incl
add
inc
es
push
and
mov
fmuls
pop
and
loope
xor
jne
lahf
add
loopne
sbb
roll
test
test
jne
out
mov
dec
sbb
push
xchg
cmovne
cmp
xor
out
cli
ds
and
and
jb
andl
cmp
add
xchg
sarb
mov
lock
xor
outsb
sub
shrb
xor
adc
and
pop
ljmp
loopne
jno
xlat
rcrb
xchg
inc
loop
cmc
lret
or
xchg
push
aas
mov
sub
add
or
adcb
rcrl
leave
or
mov
pop
jg
jl
lea
jo
cmp
add
imul
icebp
cwtl
rclb
dec
movq
divl
mov
mov
jne
or
les
aam
dec
push
imul
mov
outsl
outsb
jp
push
sub
mov
int3
data16
pop
sub
ds
cmp
and
adc
repz
dec
jge
xchg
and
fistl
push
pop
add
bound
hlt
mov
icebp
arpl
sbb
dec
and
cs
mov
mov
cmp
lods
in
pop
or
shrl
jmp
js
or
mov
mov
add
or
mov
pop
xchg
stos
xor
and
xor
dec
loope
xor
insb
lret
lahf
xorl
adc
jbe
outsb
cmp
into
adc
sbb
cmp
jg
add
mov
cmp
mov
ljmp
cmp
xchg
inc
or
aad
mov
sahf
push
sbb
push
dec
adc
icebp
mov
push
sbb
cmp
sahf
addr16
inc
push
mov
and
jge
and
je
outsl
or
pop
xor
imul
and
sub
in
ja
add
lock
dec
mov
cs
insb
sbb
mov
stc
in
sub
pop
iret
adcb
mov
and
dec
fnstenv
push
arpl
out
test
add
es
sub
push
rolb
out
es
out
loope
jb
mov
cmpsb
or
ret
cmc
mov
or
stos
cmp
sbb
jo
movb
add
pop
xchg
aaa
mov
sub
adc
fnstsw
es
cmc
mov
cwtl
adc
fmuls
lret
push
test
lahf
mov
stos
and
push
sbb
das
adc
pop
jo
pop
fwait
adc
loopne
jle
mov
jo
int3
lock
rclb
fdivs
shll
lods
mov
sub
test
sbb
outsb
and
push
xor
gs
push
mov
out
inc
je
cmp
mov
cmp
mov
lds
push
mov
and
push
ss
pop
sub
loope
fs
enter
jge
out
mov
jle
insl
inc
push
pop
pop
icebp
pusha
out
mov
fcomip
sarb
xor
ret
iret
cwtl
sbb
fstps
mov
ret
ss
je
mov
pop
push
js
in
ds
arpl
out
ret
das
movsb
xor
icebp
ror
and
jne
fdivs
sub
hlt
aad
or
pop
xchg
push
je
fidivrs
aas
add
ficoml
in
movb
lds
fs
shrl
jge,pt
aad
add
or
pop
pop
add
pop
gs
aas
andb
cmp
xchg
pop
push
xchg
lods
or
mov
sbb
bound
xlat
pop
mov
and
sub
mov
scas
shlb
xor
sub
test
loopne
lret
sbb
cld
pop
imul
or
inc
into
movsb
adc
mov
cli
xor
xchg
inc
ljmp
idiv
inc
sbb
adc
arpl
xchg
inc
xor
mov
mov
lock
mov
jmp
or
ds
cld
addr16
dec
xor
xor
outsb
repz
jae
in
jae
mov
lods
push
test
push
jge
insb
imul
add
aas
mov
fs
and
inc
inc
nop
les
push
bound
push
aaa
lahf
push
sbb
in
das
lahf
movsb
push
jne
and
or
ds
and
test
inc
and
roll
shrb
je
cmp
push
out
sub
repz
lods
mov
cmp
insb
mov
and
out
nop
dec
rorb
movsl
sbb
push
xor
imul
inc
nop
fldenv
sbb
loop
cmpl
inc
mov
andl
inc
sub
mov
inc
inc
jp
inc
movsb
or
insb
mov
adc
mov
sahf
insb
adc
scas
data16
sub
push
in
sbb
mov
cwtl
enter
cmpb
mov
nop
test
popf
and
inc
or
xor
insl
pop
lods
aad
mov
pop
dec
hlt
pop
mov
push
ljmp
rol
inc
add
ljmp
fidivrl
sbb
lcall
aaa
jmp
lahf
jmp
aaa
pop
insb
jecxz
adc
dec
jbe
xchg
enter
movsl
jne
add
mov
sbb
outsb
int
inc
mov
outsb
add
pop
into
test
popl
push
adc
es
aad
cmpsb
nop
sub
lcall
idivb
gs
jecxz
aam
testb
ret
jmp
or
aad
or
jecxz
shll
mov
js
cld
loopne
pop
mov
pop
push
ja
cli
lret
xchg
movsb
inc
cli
insb
js
ret
sub
es
dec
sub
add
lea
inc
or
inc
adc
dec
invd
stos
inc
nop
hlt
jmp
mov
mov
lods
or
push
aad
sub
jo
ret
pop
xor
es
push
mov
mov
out
fildl
ret
mov
xor
sub
add
push
xchg
adc
pop
add
push
sub
push
sub
push
repz
pop
xor
in
cmpl
mov
add
and
xor
shlb
sbb
mov
and
push
inc
xchg
push
pushf
fs
rorb
idivb
pop
mov
sub
lods
xor
je
insb
and
jbe
dec
sbb
out
movsb
fbstp
ret
rcll
popa
adc
js
sti
jl
mov
mov
mov
ret
rclb
out
out
mov
jmp
ja
sar
fnsave
cmp
lods
mov
nop
ja
in
shll
in
test
ds
fwait
push
cmc
cmpsb
inc
lret
mov
subb
shr
rorb
in
push
pop
xchg
addr16
jb
test
sarl
adc
push
mov
xlat
or
lret
xchg
mov
dec
inc
push
jns
cli
push
pop
pop
push
jno
stc
xchg
lcall
add
les
icebp
shrl
lret
jg
push
cmp
lock
je
sub
sbb
xchg
jo
pop
movsb
cli
sahf
adc
sahf
xchg
jg
or
sub
pop
mov
cmpsl
mov
xor
arpl
mov
ljmp
lods
xlat
int3
lret
fdivrs
nop
sbb
sbb
inc
xchg
cmpsb
jp
mov
js
sub
das
dec
fnsave
jl
nop
pop
add
xor
add
lds
pop
or
dec
cli
or
testl
pop
add
call
data16
mov
cmp
adc
rorb
fsub
xchg
xor
inc
leave
adc
inc
dec
lea
fsubs
push
stos
add
or
push
cmpb
lds
add
xor
enter
xchg
in
std
jb
les
sbb
push
outsl
and
mov
ret
mov
loope
js
arpl
mov
push
mov
lods
stos
or
xor
loopne
cmp
add
or
stc
enter
mov
jmp
adc
cmp
dec
xchg
xchg
shr
lock
cmp
pop
mov
scas
mov
imul
les
out
pop
mov
call
cmp
loop
fwait
call
dec
call
ret
lret
aad
jbe
lea
enter
adcl
xchg
xchg
les
mov
sbb
cs
ficoml
mov
inc
sub
cmp
mov
cmpsb
jb
jnp
inc
test
pushl
push
add
xor
cmp
or
ss
and
inc
mov
push
lret
mov
push
aaa
xchg
xor
or
adc
rolb
outsb
rolb
stos
lea
wbinvd
aas
shrb
dec
cs
loop
rolb
jp
xor
pusha
iret
lock
sahf
out
shll
and
jl
add
pop
mov
xchg
sbb
pop
lea
dec
pop
sub
iret
inc
roll
push
or
inc
inc
xchg
mov
outsb
mov
out
daa
aas
insl
outsb
loope
shrb
mov
aas
jg
ljmp
add
xchg
jle
insb
push
cmp
mov
cld
rol
test
jb
loopne
mulb
mov
mov
xor
push
inc
repnz
push
sub
int
adc
or
cld
in
sbbl
fldcw
xor
or
es
dec
push
int3
lock
adc
add
orl
repnz
aaa
adc
cmp
ds
or
cli
testb
pop
lods
imul
dec
cmc
xchg
leave
push
repnz
cli
xchg
mov
psraw
and
das
bound
adc
sub
ds
sub
jmp
lea
inc
xchg
jle
test
mov
jle
pushl
xor
mov
loopne
sbb
pop
mov
push
dec
or
xchg
dec
inc
sub
xor
cmc
xor
jecxz
lods
fsubs
in
fs
sbb
popa
or
sbb
xlat
imul
push
popf
insb
icebp
jmp
add
or
xchg
fbld
jb
adc
add
pop
xchg
inc
insl
dec
push
inc
xchg
xchg
or
add
jmp
mov
adc
aas
dec
lret
jns
lea
shlb
push
cmpsb
nop
scas
aaa
pop
hlt
xor
hlt
dec
adc
fwait
push
lods
pop
mov
jecxz
and
lock
mov
mov
push
loopne
push
cmp
lahf
push
mov
gs
lahf
std
xchg
jmp
rolb
rcll
divb
sbb
or
ljmp
xor
xor
mov
repnz
es
adc
jae
push
roll
cli
bound
stc
aam
add
pop
mov
in
mov
push
in
jecxz
rorb
mov
xchg
mov
or
pop
hlt
add
jp
hlt
std
cwtl
push
add
scas
clc
lock
mov
lds
imul
xor
jae
jl
pop
lock
enter
pop
dec
jne
in
push
jl
test
adc
lcall
pusha
fucomi
loopne
adc
hlt
mov
or
and
sub
mov
mov
lock
push
mov
mov
adc
jne
add
sub
lcall
scas
xchg
aad
dec
add
arpl
add
hlt
loope
rclb
push
cmpsb
orb
or
push
add
add
sub
or
mov
lret
xchg
outsl
inc
xchg
push
or
nop
push
into
lds
inc
incl
lret
pop
sbb
xchg
out
scas
sbb
add
fnstcw
fstpt
mov
ljmp
outsb
push
aad
jns
or
shll
leave
jecxz
xchg
jge
stos
mov
lock
pop
stos
ljmp
cmpsl
into
add
repnz
pop
lret
cmpsl
jmp
lods
cmc
fldl
mov
iret
out
int3
xor
loope
mov
add
sbb
xlat
ret
push
mov
mov
sub
jle
xchg
fcompl
adc
scas
lea
push
sub
xor
out
in
rep
enter
add
hlt
mov
and
xchg
add
mul
add
mov
pop
dec
xchg
jle
emms
jns
dec
cwtl
jo
cmp
fxch
xor
stos
dec
cs
add
cmp
push
inc
mov
pop
mov
adc
cs
aas
push
xorl
jg
sti
cmp
rcrl
cmp
sbb
jl
insl
leave
scas
add
loope
and
mov
ljmp
clc
and
jmp
inc
cmp
xchg
push
lock
sub
mov
aad
js
mov
loopne
movsl
stos
inc
cld
mov
pop
pop
loop
jl
adc
imul
ljmp
or
mov
and
cwtl
adc
dec
mov
xor
sahf
xchg
ss
movsl
jb
movsb
sub
subl
mov
call
pusha
cmp
and
adc
pand
mov
lea
outsl
inc
lds
pushf
jmp
pushf
jl
sub
clc
inc
dec
repnz
sbb
adc
mov
nop
xchg
mov
in
das
gs
add
mov
sub
xor
pop
push
fs
lods
inc
jbe
loop
cld
fs
add
push
lods
and
mov
sub
cmp
pop
shr
or
fsubrp
lds
addb
iret
add
jp
cmp
fwait
add
pop
cmpsl
xchg
jl
inc
xchg
jecxz
xor
jmp
fcmovnbe
mov
inc
and
pop
mov
push
push
adc
mov
jmp
mov
sti
sti
xchg
cmp
dec
inc
mov
push
fisttpll
cmp
sbb
inc
call
cmp
fstpl
cmp
in
frstor
das
xor
leave
mov
imul
xchg
aaa
fiaddl
adc
roll
xor
sub
stos
push
sub
xchg
enter
sub
mov
test
bound
dec
inc
mov
in
pmuludq
pop
clc
out
int
call
clc
add
mov
ljmp
lret
inc
pop
cmp
jecxz
lods
int3
mov
mov
and
pusha
or
mov
push
outsb
mov
insl
pop
jns
jmp
mov
xor
xor
dec
inc
or
push
fsubr
push
sub
lods
xor
adc
adc
fsubrl
push
out
mov
in
inc
pusha
lcall
inc
jl
stc
test
mov
push
push
das
inc
fnstcw
dec
fildll
jno
pop
ja
pop
fldl
ds
cmp
mov
sahf
clc
test
popf
frstor
int3
das
shrl
sbb
mov
arpl
addl
cwtl
cmp
outsl
inc
repz
xor
cld
outsl
addr16
xor
push
xor
mov
mov
out
lock
pop
hlt
ret
push
ja
add
jle
mov
mov
and
cmp
jl
lock
inc
lods
icebp
and
mov
clc
xor
es
mov
mov
cmp
test
and
or
jbe
mov
ljmp
mov
jb
sbb
adc
adc
xor
sub
nop
sbb
stos
dec
fadd
and
cli
addl
xchg
push
sarb
push
adc
lcall
lods
xchg
mov
pop
out
jno
in
or
test
mov
outsb
or
repnz
enter
test
or
aam
and
mov
lods
rol
xor
fs
stc
fadds
or
push
loope
adc
andb
cmpsb
cmpsl
in
inc
std
fcmovnbe
into
bnd
daa
ror
fwait
outsb
in
xchg
insb
andb
add
dec
jmp
lea
add
inc
mov
adc
push
std
shl
loop,pt
ljmp
int3
hlt
fs
xchg
ror
mov
cli
enter
push
add
mov
repz
and
xchg
pop
add
lahf
in
idiv
or
in
stc
lock
lods
clc
jge
ret
push
and
cmp
jbe
mov
js
fcomip
ss
push
mov
imul
pop
enter
pusha
cmp
sti
cmp
aam
pop
rcl
shl
sub
dec
ds
out
imul
out
pop
cwtl
inc
js
lret
and
fwait
or
pop
and
fsubl
sbb
aaa
inc
loop
mov
push
bsf
xor
inc
adc
pop
sub
clc
or
nop
mov
insl
add
aad
dec
movsl
es
cwtl
or
mov
xor
fsubrl
gs
or
xor
or
xor
dec
stos
mov
enter
add
mov
jle
jge
lea
jge
mov
adc
pop
test
sub
rolb
es
lods
subl
mov
push
in
rcll
scas
into
int3
addb
adc
and
cmp
push
mov
mov
xchg
add
mov
and
mov
add
lds
mov
stos
cmp
jl
add
or
mov
cmp
lahf
pushf
inc
stc
cli
and
enter
mov
lock
pop
repz
push
mov
addr16
stos
cmpl
sub
jns
ds
std
ds
sbb
sub
push
das
sbb
xorb
nop
inc
imul
dec
pop
cli
mov
add
fcompp
ret
add
jno
and
sahf
popa
pop
loopne
scas
cli
inc
xchg
nop
mov
push
lock
iret
add
mov
out
pop
jo
std
call
lahf
add
or
movsl
cli
sarb
push
mov
adc
mov
faddl
rcrb
cmp
push
ret
es
inc
inc
pop
pop
shrb
icebp
lcall
adc
mov
mov
inc
push
sub
lret
aad
movsb
insb
xor
push
sbb
jnp
mov
rol
scas
imul
inc
pop
sbb
pop
fstps
pushl
test
sti
and
push
andb
clc
dec
jecxz
orl
call
jo
inc
xor
or
mov
cmc
mov
or
into
add
push
test
push
js
jo
pop
lret
sahf
fdivrl
add
jb
push
or
pop
fs
data16
pop
adc
mov
add
and
xchg
inc
out
loopne
jmp
outsb
movsb
fildll
and
ja
insb
cmp
loop
mov
add
dec
les
jmp
add
loopne
sbb
mov
bound
hlt
adc
mov
ret
mov
lahf
add
add
push
dec
or
or
inc
mov
loopne
inc
les
jo
sbb
or
and
sahf
push
filds
les
add
test
xorb
pusha
and
negb
fistpl
fisubl
jp
or
movsb
lahf
mov
int
push
sbb
int3
dec
dec
inc
cld
dec
cmp
jno
in
shlb
out
inc
pusha
in
loop
dec
jge
cmp
outsl
clc
jg
cmp
ljmp
call
jns
or
jb
adc
arpl
mov
mov
and
adc
sub
in
rclb
mov
stos
hlt
mov
cld
sub
movb
inc
or
movsb
hlt
push
lods
ss
in
fstps
sub
leave
pop
jns
adc
test
add
sub
mov
dec
push
bound
xor
std
or
imul
clc
dec
lahf
xchg
call
adc
add
mov
das
mov
mov
sahf
push
sbb
jno
add
sbb
rolb
rolb
cmp
inc
pop
or
fimull
mov
cmp
and
inc
gs
cmp
jp
addr16
xchg
mov
dec
loopne
add
sbb
fwait
mov
dec
rorl
jbe
sarb
jnp
sub
push
push
add
xchg
lds
add
mov
inc
inc
bound
ljmp
sbb
push
mov
sbb
add
xor
or
jbe
add
cltd
cmp
mov
stos
inc
push
cld
sahf
sub
or
mov
push
clc
adc
cld
test
push
insb
pop
icebp
xchg
mov
xor
lock
mov
fucomi
inc
mov
jecxz
push
xchg
adc
test
cmp
xchg
call
shrl
dec
xor
pop
push
imul
or
insb
or
loope
add
or
mov
loope
xor
and
pop
or
pop
icebp
nop
inc
test
and
pop
inc
jecxz
xchg
inc
lods
mov
insb
aas
popa
mov
aam
add
mov
pop
mov
mov
dec
add
xchg
ja
ds
movsl
mov
pop
repz
jo
jno
xor
hlt
xor
sar
mov
in
daa
mov
and
pop
notb
les
sub
enter
in
out
rorb
aas
js
mov
ljmp
or
jae
call
bt
add
ret
xchg
push
jl
outsl
cli
mov
insb
subl
lret
cs
out
inc
mov
test
and
shl
hlt
mov
lods
cmp
imul
push
jmp
in
arpl
mov
or
popa
gs
sbb
ds
cmp
add
adc
xor
sub
jge
lahf
mov
movsb
rcll
mov
mov
into
addl
push
insl
xchg
insb
clc
test
icebp
inc
ss
dec
push
hlt
xchg
movsl
xchg
or
adc
icebp
push
fnsave
incb
hlt
bound
sbb
push
shlb
dec
mov
arpl
aas
xor
in
ss
out
ljmp
or
es
mov
xchg
jecxz
aad
mov
fcompp
jae
push
xor
jl
js
ror
aad
mov
pop
pmaxsw
and
movsb
mov
inc
ss
mov
cli
lock
out
bound
test
aaa
lds
add
pop
ljmp
add
call
test
pop
adc
xor
mov
inc
dec
jge
mov
mov
mov
cmpsb
cmp
add
lods
pop
dec
pop
pusha
mov
adc
mov
hlt
push
cwtl
add
sahf
aaa
jmp
sub
ds
add
xchg
lock
mov
fmull
push
jne
and
cs
cmp
jmp
sub
sarl
or
pop
jmp
jg
cli
inc
push
dec
pop
ds
dec
clc
cmpsl
rclb
and
push
adc
pop
pop
loopne
mov
out
adc
sbb
and
cmp
push
push
add
sbb
sub
adc
sub
mov
dec
into
cmp
and
fsubl
aad
popf
push
dec
ret
cmpsb
lock
stos
clc
cmp
dec
imul
aam
mov
pop
cli
shlb
scas
pop
fcmovnbe
inc
rcrl
mov
xchg
xchg
lock
dec
push
xchg
mov
clc
mov
pop
pop
push
seto
cmp
lock
sub
cmc
sub
xor
and
pop
mov
movsl
xor
lea
rclb
jo
or
or
mov
enter
pop
cmp
pop
inc
jl
cmp
pop
lret
nop
push
cmp
dec
cmpsl
rolb
loopne
ljmp
imul
addr16
jbe
dec
adc
mov
push
jnp
dec
je
lds
adc
cmp
sbb
flds
daa
dec
fistl
and
add
mov
aam
mov
adc
call
adc
pusha
loopne
mov
jbe
pop
xor
loope
add
cmp
mov
pusha
dec
inc
xlat
mov
pop
dec
gs
test
in
bound
aam
pop
mov
arpl
and
outsb
iret
mov
sahf
insl
add
cmp
test
sbb
xchg
push
sub
add
mov
push
lds
cwtl
jnp
dec
fsub
push
mov
mov
in
bound
enter
inc
sbb
outsl
jmp
hlt
aaa
ss
sub
mov
xor
jb
push
xorl
mov
add
ret
imul
sub
add
push
fisubrs
gs
jg
lods
add
mov
pop
adc
js
adc
push
sti
adc
mov
lret
inc
mov
jne
fs
sub
shl
test
xor
lret
jno
pop
call
push
jne
mov
add
mov
push
stc
dec
mov
mov
cmpsb
mov
aaa
jge
fs
mov
pop
je
sarb
and
cmp
push
lret
js
loopne
mov
and
scas
jle
push
ljmp
push
push
xor
mov
dec
or
das
jle
and
sahf
sbb
inc
jbe
push
sarl
mov
pop
inc
fs
push
enter
mov
add
cs
ret
repz
mov
pusha
xchg
fcomp
push
xchg
incb
mov
mov
pop
fcmovu
bnd
jecxz
out
addl
mov
insb
clc
pusha
or
rol
push
cld
rolb
ljmp
xor
pop
mov
dec
cmp
inc
ret
sbb
sbb
and
test
pop
xor
mov
xchg
loop
cmp
and
jno
inc
xlat
or
push
inc
fiadds
xlat
int3
mov
int3
or
test
inc
add
mov
mov
pop
js,pn
mov
leave
loop
pusha
adc
lock
outsb
rcrb
push
inc
lahf
js
mov
push
out
decb
xorb
enter
test
add
fiaddl
inc
hlt
add
cli
and
inc
jp
or
mov
mov
out
shlb
inc
adc
mov
mov
scas
sub
mov
pop
cltd
mov
clc
pop
mov
adc
mov
cmp
scas
loop
jle
data16
hlt
push
or
aam
shlb
jb
dec
loopne
lods
xor
sbb
negb
mov
sysexit
jecxz
adcb
dec
cmp
fdivrs
mov
movsl
cmc
je
leave
and
out
les
jb
inc
or
push
or
lcall
mov
mov
adcl
decb
inc
popa
mov
jl
cmpsb
es
cmp
jo
jnp
mov
inc
sahf
rclb
mov
icebp
iret
jp
cmc
adc
mov
adc
inc
aad
add
fs
xchg
loop
add
or
or
ficomps
fldt
in
xor
lahf
fs
or
icebp
popa
or
jle
rol
mov
and
cltd
adc
in
cmp
fs
loopne
jbe
adc
xor
pop
jbe
mov
data16
cmp
mov
popa
push
mov
roll
cs
outsl
or
or
insb
sti
jge
int
push
ljmp
adc
ret
and
mov
movsl
fmuls
xlat
movsl
push
nop
dec
andl
loope
mov
adc
shll
mov
add
push
nop
or
mov
inc
orl
popa
in
and
jg
mov
icebp
subb
imul
push
test
bound
es
fwait
xchg
cld
mov
xorb
dec
jne
out
sbb
add
flds
or
cmpsb
push
pop
push
sbb
das
push
pop
or
loop
daa
jecxz
cmpl
adc
jo
jnp
ss
sbb
js,pn
sub
mov
je
mov
xchg
pop
rol
imulb
xor
push
and
cltd
cwtl
fdivs
fsub
cltd
add
loopne
mov
push
sbb
push
xor
hlt
xor
mov
inc
and
mov
push
push
push
dec
mov
xchg
stos
fadd
sarb
push
inc
xchg
ss
es
popa
mov
loope
cli
and
inc
jae
xchg
mov
mov
inc
mov
or
outsb
ror
xor
sub
or
xor
lea
dec
mov
cmp
fidivs
inc
cmp
sub
cltd
pop
push
mov
cmp
gs
nop
mov
ficoms
icebp
les
andl
pop
idivb
sub
cmpb
fcmove
movsb
push
inc
sbb
add
cmp
repnz
mov
ficompl
lahf
pop
movsb
or
mov
mov
xchg
arpl
test
push
xchg
xchg
mov
mov
jmp
imul
fisubrs
xchg
mov
aaa
movsb
cmpsb
jge
or
lahf
push
pop
outsl
clc
dec
or
mov
mov
js
ss
dec
imul
push
outsb
sarw
stos
subl
cli
jo
outsb
or
sub
dec
mov
add
jnp
pop
pop
mov
pop
pusha
push
das
push
insl
xor
stc
inc
mov
test
inc
psubsb
and
in
xchg
fsub
outsb
pop
daa
cmp
mov
fsubrp
fwait
jle
push
mov
jl
loop
ja
nop
xor
adc
loopne
adc
popa
test
std
mov
aad
mov
cs
dec
subb
cmp
push
cli
outsl
mov
in
pop
std
pusha
mov
jg
xchg
pop
bound
stos
ss
dec
fld
or
jnp
fs
push
ror
adcl
mov
fwait
add
pop
push
and
outsl
mov
fmulp
dec
jne
cmp
bnd
nop
add
inc
movlps
lock
cmpsl
sti
mov
xor
adc
adc
adc
imul
aam
ret
mov
loopne
cmpl
aas
outsl
aam
mov
cs
and
mov
mov
add
repnz
adc
jg
cmc
sarl
and
jno
out
addr16
bswap
aad
push
mov
push
or
pop
push
pop
jecxz
mov
cmp
inc
sub
mov
add
lea
adc
in
adc
mov
insb
fiadds
mov
mov
and
or
and
jbe
mov
lret
mov
mov
inc
loopne
int3
and
scas
xor
loopne
mov
mov
repz
fisttps
inc
xchg
lahf
mov
mov
sti
or
inc
lcall
dec
cltd
sub
sti
inc
sbb
cmp
pop
pop
test
rcrl
cmp
xchg
xchg
ficomps
jmp
shll
shll
repnz
jle
orb
data16
mov
into
pusha
add
xor
enter
and
insl
data16
test
inc
bound
leave
mov
pop
rcrb
dec
mov
pop
pop
mov
jb
add
mov
test
lcall
mov
mov
cs
ret
mov
test
adc
mov
add
and
jo
mov
adc
lahf
hlt
and
add
orl
imul
mov
ss
add
or
mov
xchg
jecxz
movsb
cli
sahf
sbb
and
dec
add
inc
dec
dec
jecxz
movsb
push
sbb
dec
fcomps
jo
push
cltd
jp
sbb
xor
adc
in
into
sarl
test
sarb
push
lods
nop
fcoms
and
mov
outsb
xlat
je
mov
mov
es
popf
jae
dec
int
xchg
mov
add
loope,pn
or
pop
stos
test
cmp
or
xlat
mov
mov
mov
xchg
inc
inc
inc
add
or
sub
push
lret
xor
add
inc
adc
jle
dec
mov
iret
rclb
pop
sbb
mov
xchg
aam
pushl
cmpsb
fsubrs
xchg
xor
stc
or
or
pop
aas
cmp
xor
dec
add
pop
sbb
xchg
sub
scas
addr16
iret
jp
arpl
je
lea
adc
sbb
inc
gs
ja
mov
loop
loopne
inc
dec
imul
mov
pop
jp
lcall
or
fisubl
arpl
push
clc
pusha
xchg
lds
dec
loope
pop
popf
lods
push
mov
xchg
sahf
xchg
sub
pop
addl
mov
ret
rolb
cwtl
out
inc
xadd
into
stos
mov
push
jae
push
dec
inc
scas
or
lret
out
pop
sbb
lods
push
adc
ljmp
leave
addl
lods
clc
pop
pop
dec
cmp
iret
pop
cmp
rcll
pop
mov
ja
adc
push
insb
mov
cld
sbb
je
sarl
out
jecxz
rcll
js
xor
or
xor
out
mov
sahf
push
pop
sub
xchg
in
xor
dec
fistl
mov
fbstp
add
mov
add
shrl
dec
jp
lock
shll
leave
stos
pushf
ljmp
cmp
cmp
sub
xchg
loope
adc
xchg
and
inc
jl
inc
es
and
out
and
scas
jl
insl
push
movsb
mov
insl
inc
arpl
add
in
dec
cld
pop
jle
adc
subl
jmp
dec
stc
add
outsl
and
inc
mov
sub
je
dec
sub
lret
lock
arpl
sbb
and
xchg
mov
inc
lcall
sub
push
lea
adc
dec
inc
pop
sub
and
sbb
ss
gs
or
sbb
cli
mov
pop
xlat
dec
push
sti
mov
mov
jp
push
enter
nop
test
mov
aad
pop
out
fucomi
sbbb
jmp
hlt
inc
xchg
dec
jae
and
sbb
push
outsb
adcl
sbb
dec
xor
cmp
inc
stos
mov
popf
push
imul
xchg
js
ds
sbb
cld
pop
adc
js
push
add
pop
popf
lods
sbb
ja
sbb
adcl
loopne
ss
lcall
in
repnz
sub
stos
inc
sbb
nop
sub
add
loopne
jo
inc
sbb
filds
jbe
testl
xchg
adc
daa
dec
aas
mov
push
push
sbb
inc
movsb
inc
sahf
or
add
insb
fdivs
sahf
adc
popf
fisubrl
mov
ds
in
sbbl
adc
jge
cltd
loopne
dec
add
mov
push
shrb
sbb
push
inc
aad
pop
aad
mov
mov
mov
mov
aaa
cmp
aam
clc
dec
jo
dec
xlat
jae
loop
xorb
cmp
mov
xchg
sub
add
je
cmp
mov
sbb
lret
movsl
or
mov
mov
xchg
or
std
xlat
lods
cmp
loope
pop
fcoml
xlat
add
pop
jne
cs
lods
lods
xor
xchg
lock
pop
cs
stos
and
addr16
shlb
and
mov
inc
or
lods
sbb
add
out
xchg
sub
mov
mov
lods
mov
loopne
or
pop
jo
das
adc
xchg
pop
aam
xlat
mov
dec
pop
xchg
push
push
fistl
popa
or
push
out
lret
pop
aas
xor
push
mov
sbb
cmp
xchg
sbb
push
out
or
push
xchg
jecxz
pop
jb
ds
push
jge
test
pop
sub
movsb
xchg
ficoml
cld
rclb
mov
dec
scas
and
pop
lods
out
rolb
xchg
fsub
movb
call
sub
pop
popf
jbe
nop
cld
inc
xor
push
mov
sub
mov
push
leave
push
clc
adc
sub
jmp
mov
out
fistpl
inc
add
pop
aaa
call
cmp
ss
ja
cmp
fadds
push
adc
stos
mov
jbe
push
cmp
repnz
leave
push
subb
mov
sub
pop
shrl
js
xor
repz
fisubrl
push
aad
adc
dec
xor
push
lock
push
lods
je
cli
mov
push
inc
movl
popa
aad
adc
cmpb
shlb
loop
repz
in
mov
nop
adc
aad
add
addb
mov
fwait
aas
out
jmp
sbb
notl
stc
popf
sahf
pushf
icebp
scas
sbbb
mov
pop
push
sbb
rcll
hlt
clc
sub
repnz
sahf
mov
loopne
cmp
xchg
and
sbb
pop
fimull
pop
add
sub
cmp
add
mov
pop
sbb
sbbl
in
aad
push
cs
mov
ja
test
cmp
adcb
pushf
in
pop
nop
lcall
shl
pushf
or
xor
lock
leave
aad
dec
shl
sahf
push
mov
sbb
rcll
dec
cs
sub
mov
pusha
push
fildl
imul
ljmp
push
jg
lea
lock
pop
xchg
cmp
xchg
adc
mov
xchg
jecxz
inc
gs
mov
xlat
cltd
mov
enter
mov
lret
subb
cmp
orl
aaa
xchg
dec
call
dec
ret
aad
loopne
daa
lods
xchg
mov
mov
xlat
add
cmp
gs
movsl
lds
les
add
nop
cs
or
add
lret
jnp
inc
dec
sti
mov
inc
testl
push
iret
cwtl
jmp
test
xchg
out
ljmp
add
gs
mov
daa
lea
cwtl
scas
sbb
jp
std
mov
pop
cwtl
sbb
sbb
dec
pusha
cs
imul
mov
inc
call
movsl
and
fstpt
dec
add
jo
shlb
rcl
cmpsb
sub
in
dec
mov
push
fstpt
enter
mov
aam
inc
mov
adc
mov
sbb
dec
and
xchg
loop
std
cmp
xorb
cmp
ret
movsb
shl
out
or
loope
adc
ficompl
repnz
and
mov
push
fwait
cld
push
idivl
and
test
jmp
mov
cltd
cmc
mov
es
mov
mov
loopne
mov
daa
inc
pop
je
mov
xchg
jae
xor
mov
and
andl
pop
add
cmp
or
and
mov
enter
rclb
and
pop
pop
enter
pop
pop
xchg
stos
add
xlat
push
push
pop
push
mov
or
add
les
xor
mov
out
fmuls
sbb
mov
or
push
add
mov
fnsave
push
bound
and
jle
rcl
paddw
or
pop
mov
cmp
cmpsb
lea
adc
adc
movsb
fmull
inc
mov
xchg
adc
mov
sbbb
fidivl
push
jg
jnp
pop
xor
pop
je
in
jle
mov
sahf
add
pop
sarb
pop
mov
jmp
or
cmovne
lods
das
sub
add
cmp
shll
lahf
lea
ja
subl
int3
mov
icebp
cltd
push
neg
push
cmp
lea
stos
cmpsb
mov
adc
stos
ret
pop
out
xor
rolb
shll
dec
out
hlt
mov
add
sub
jo
lods
lock
popf
jns
jo
out
mov
and
orl
mov
add
mov
xor
pop
jp
sbb
je
test
out
xor
inc
les
sbb
xchg
sub
fbstp
xchg
add
rcl
xchg
sbbl
dec
rcrb
adc
add
arpl
inc
lods
cmp
add
cmp
das
mov
add
negb
lahf
or
inc
adc
in
rorl
xchg
fmuls
adcb
shr
adc
cmp
ret
pop
fldenv
push
insl
ljmp
sar
dec
js
push
dec
sbb
cmp
adc
sarl
cmp
in
add
lods
aaa
or
mov
mov
mov
test
sarb
inc
ret
mov
add
jg
xchg
ficoms
outsl
xor
push
xor
movsl
adc
cltd
stos
xor
dec
inc
fxsave
test
xchg
sbb
xlat
mov
fnstsw
stos
rorl
pusha
adc
fucomi
popa
jge
sahf
add
adc
rolb
andl
push
mov
inc
mov
xchg
push
rcl
dec
push
jne
imul
jl
pop
mov
dec
sbb
fsub
adc
bound
daa
int3
lret
imul
clc
add
adc
mov
mov
sub
shlb
or
add
add
sub
or
andb
nop
adc
fwait
arpl
adc
adcb
push
sub
mov
adc
pop
out
mov
or
jbe
fs
pop
pop
test
stos
push
xor
in
mov
rorb
xor
dec
jl
adcl
call
popa
dec
iret
adc
inc
adc
arpl
pushf
push
loopne
stos
mov
cltd
loope
and
fwait
popa
pusha
aaa
add
push
into
fwait
sub
xchg
fisubrl
std
mov
xchg
ss
cs
and
pop
enter
fmull
jp
lds
inc
ljmp
call
movsb
loope
hlt
mov
sub
xchg
inc
or
movsb
fs
dec
pop
pop
pop
inc
bound
lahf
mov
or
insb
andb
bound
enter
pop
sbb
lahf
cltd
jo
inc
insb
xchg
loop
jl
cmp
fimuls
xchg
cmpsl
mov
xchg
or
mov
out
adc
mov
lret
xchg
sbb
hlt
cli
outsb
fiaddl
push
negb
rcrl
popf
ficompl
shr
adc
lock
stos
int
pop
xchg
out
mov
mov
xchg
push
sbb
cld
lahf
addb
or
mov
nop
shrb
pop
cwtl
push
adc
inc
xadd
es
sarb
scas
movb
mov
arpl
cmpsb
push
pop
sub
fdivrp
mov
scas
shll
je
add
lea
ss
stos
call
lock
mov
rorb
je
daa
test
pop
pop
loope
mov
frstor
stos
pop
sti
xor
xor
mov
inc
cmp
fwait
lea
lret
mov
pop
hlt
fs
imul
push
out
pop
jns
mov
pushl
add
bound
pop
stos
shl
dec
fcmovne
sub
negl
icebp
int
add
mov
cmpsb
mov
inc
in
sbb
push
das
adc
test
nop
jecxz
inc
icebp
jecxz
cld
add
jmp
xchg
pop
xor
mov
loopne
push
jb
xor
in
lahf
jb
adc
jg
popa
call
shl
xor
lcall
xchg
and
adc
ret
and
loope
out
fstpl
mov
xchg
movsb
mov
into
mov
out
sbb
sahf
sahf
enter
dec
lahf
push
mov
add
icebp
loopne
mov
cs
inc
cmpsb
mov
adc
in
inc
mov
aad
stos
out
adc
mov
adc
divl
cmp
dec
inc
lds
mov
outsb
dec
je
xlat
xor
test
call
push
or
scas
mov
rclb
dec
mov
add
xor
jae
inc
dec
xchg
sub
add
dec
into
test
sbb
push
int3
or
test
xchg
pop
sbb
jl
pop
popa
push
test
jbe
cmp
jl
movsl
inc
dec
jne
fidivs
inc
mov
add
cmp
sahf
cmc
in
outsb
jne
push
and
mov
sti
mov
ljmp
pushf
lea
xor
push
in
nop
rcrl
push
insb
sarl
js
mov
inc
inc
fildl
cmp
mov
mov
mov
hlt
cli
int
jle
pop
rcrb
vmovupd
stc
test
aaa
data16
jns
loope,pt
push
mov
into
inc
push
lock
clc
add
pop
cmp
adc
pop
cld
jl
cmp
cmc
dec
rolb
imul
jmp
inc
pushf
inc
adc
mov
pop
jecxz
pop
adc
inc
mov
aam
inc
out
sbb
sbb
push
cmp
push
mov
jno
or
cli
mov
xchg
nop
mov
or
push
adc
out
fdiv
xor
push
and
mov
int
repnz
popf
add
adc
add
cmp
test
iret
inc
mov
js
je
pop
ds
incl
popf
movb
jns
mov
cmpsb
lea
fs
cwtl
inc
test
mov
mov
mov
adc
mov
cwtl
mov
test
sbb
and
pop
cmp
ds
push
insl
out
test
lret
sbb
out
or
test
dec
xchg
pop
xchg
ret
dec
stos
xchg
add
bswap
sahf
leave
xor
add
jl
cmpsb
inc
sahf
lret
push
xor
js
or
sbb
fnstsw
xor
rorb
shlb
out
add
fdivrl
ret
je
loope
sub
pusha
test
inc
adc
cld
mov
adc
pop
incb
add
or
dec
pop
sub
mov
sub
call
sbb
fistpl
mov
pop
out
adcl
jae
push
adc
cmpsl
cli
mov
add
sbb
mov
das
mov
sub
jb
adc
scas
icebp
and
jae
jg
dec
pop
mov
jl
push
daa
pop
pop
enter
dec
outsl
xor
sbb
ja
adc
xor
push
and
lret
call
ja
xor
mov
and
mov
subb
or
nop
and
add
cmc
loopne
in
push
inc
jg
jg
mov
mov
xor
inc
enter
pop
jmp
ss
dec
sub
call
jle
addr16
iret
dec
lock
jle
sbb
outsl
push
inc
sbb
adc
inc
push
fwait
imul
xchg
mov
bound
fiaddl
sbb
and
pop
pop
mov
lret
cwtl
push
xor
out
cmp
mov
add
push
stos
push
push
fiadds
xchg
xor
lock
cld
xchg
pop
adcl
jge
fdivrl
inc
adc
les
dec
add
mov
rcrl
andb
lock
adc
mov
rorb
add
pop
je
mov
pushf
sbb
add
mov
jge
jnp
xchg
adc
mov
fcoms
popa
add
movl
xlat
outsl
fcmove
mov
sar
mov
sti
rcll
out
add
jle
das
aaa
aas
pop
mov
dec
adc
addb
out
sbb
xchg
imul
add
or
adc
je
rol
ficoms
shlb
sti
mov
mov
mov
mov
jo
pop
lahf
mov
or
fistps
adc
shl
mov
push
sbb
pop
sahf
clc
mov
ss
pop
movsl
shl
pop
add
or
outsl
push
mov
add
or
cmp
sbb
jae
pop
cmp
ret
mov
push
cmp
subb
cmc
addl
popf
jmp
loop
aas
frstor
cmpsb
mov
in
cmc
hlt
jmp
pop
stos
mov
sbb
loopne
sub
mov
pop
mov
jbe
movsl
push
test
and
jle
sahf
push
adc
or
cmpsl
loop
bound
aas
add
or
add
out
add
push
lea
and
sub
dec
scas
jmp
pusha
fsub
lods
imul
pop
stc
leave
mov
shr
out
xchg
les
push
rorb
mov
int
pop
pop
add
clc
add
sub
add
add
aaa
xlat
outsb
fstp
jno
fsubrs
mov
ss
or
pop
call
addr16
push
jg
cmp
test
xor
mov
add
repz
push
aaa
das
push
pusha
xchg
mov
xlat
add
sahf
mov
les
add
shrb
or
das
into
sbb
mov
xchg
fdivp
or
add
mov
hlt
add
adc
jle
inc
iret
dec
xchg
cmp
jae
sub
cwtl
push
xchg
sub
sub
ja
daa
mov
js
and
mov
push
push
adc
and
mov
adc
xchg
ret
sbb
pop
lock
test
lret
inc
mov
aam
jns
sub
ret
push
jmp
mov
loop
aas
lock
and
dec
lock
mov
rcrb
scas
inc
rclb
repz
pusha
mov
cmpsb
jg
or
jg
jp
cli
pop
xchg
jnp
dec
aaa
in
pop
movsl
movsb
push
lods
fdiv
frstor
and
jne
mov
or
flds
rcrb
aaa
popf
fwait
aas
imul
fmul
movsl
shlb
mov
ret
lods
pop
inc
adc
cli
sbb
ljmp
fsub
or
inc
mov
inc
sub
negl
jle
sahf
adc
sbb
mov
fwait
cmp
mov
sbb
sub
sub
das
cmpsl
leave
in
lahf
sahf
fwait
test
cmp
js
icebp
call
divl
lahf
xchg
mov
sub
outsl
pop
sub
fwait
js
mov
mov
pop
jmp
repnz
sti
imul
sbb
daa
pop
insb
add
rcll
fldcw
test
push
ss
daa
push
mov
mov
fmull
mov
add
jl
sahf
xchg
scas
addl
ret
pop
dec
xchg
adc
ret
addr16
rcrb
dec
mov
xlat
push
imul
fiaddl
outsl
stc
sbb
dec
lods
push
jge
mov
cmpsb
lods
loope
jb
xchg
in
aaa
sub
stos
add
clc
jb
push
fsubr
lahf
inc
pop
jge
inc
jecxz
sub
mov
psubb
pop
pop
lret
jle
popa
mov
jp
sahf
dec
jp
and
or
addr16
jb
ljmp
xchg
clc
cmp
sub
xor
js
pop
hlt
push
js
xor
cld
push
mov
out
fsubrs
push
enter
les
sbb
or
or
cs
aad
imul
cmp
nop
outsb
div
push
neg
mov
shlb
and
pushf
rcll
add
loopne
pop
addl
lea
jae
arpl
fisttpl
dec
push
mov
sbb
mov
and
bound
lds
add
ret
xchg
cmpsb
ret
test
into
cmc
add
sub
and
push
jbe
call
sub
daa
sahf
incl
pusha
outsb
pop
test
cli
add
mov
adc
das
mov
aam
jns
pop
in
mov
in
ficomps
jno
lahf
mov
andl
iret
pop
pop
xchg
jne
mov
fbld
mov
sub
mov
cmp
ljmp
out
add
dec
fs
add
jnp
lea
fimuls
fsts
jo
cld
sarl
call
imul
push
js
mov
or
jne
jl
jg
push
or
ljmp
lea
jp
test
rol
xchg
xor
add
mov
out
pop
jo
mov
xor
pop
pop
xchg
loope
add
fisubrl
cmpsl
jle
sbb
hlt
adc
jg
and
mov
inc
sahf
pop
mov
shlb
in
add
add
adc
testb
dec
jg
sbb
push
and
scas
add
xchg
pop
sbb
cwtl
mov
push
jp
sbb
push
adc
adc
sub
int
mov
mov
add
jne
or
adc
or
jo
out
pusha
inc
in
test
out
jle
test
dec
das
jge
in
sarl
scas
dec
dec
pop
seto
popa
add
mov
xchg
outsl
push
mov
cmp
ret
sub
jmp
loopne
xor
cs
sahf
inc
sbb
and
imul
cmp
lret
test
mov
aas
inc
mov
sub
cmp
and
pop
loopne
std
sbb
push
out
cwtl
in
aad
hlt
mov
clc
addb
jge
jne
add
push
rolb
jb
into
inc
js
jge
hlt
adc
clc
jg
loop
inc
inc
add
sbb
adc
je
push
loopne
cltd
push
mov
xchg
xchg
jno
push
inc
movups
jo
cmpl
or
adc
cs
sbb
and
or
xchg
adc
insl
sub
sbb
mov
pusha
push
sbb
ljmp
loopne
adc
idivl
rorb
mov
and
ret
aaa
xchg
sub
jns
je
out
int
cs
int3
sbb
js
xchg
push
cmpw
xor
jmp
repnz
dec
test
nop
ds
ljmp
div
shll
rol
cmp
cmpsl
push
pop
mov
mov
scas
add
aam
fistpll
add
mov
dec
rclb
mov
pusha
not
dec
lods
pop
into
std
adc
lock
ret
mov
adcl
dec
add
popl
sbb
xchg
dec
dec
sbbb
ljmp
and
cmpsl
jle
and
dec
jp
enter
sbb
inc
adc
sub
adc
sub
push
stc
sbb
mov
popa
aas
cmpsl
mov
popa
xchg
or
jnp
fiadds
roll
add
add
mov
fsubr
and
imul
js
mov
popa
orl
add
fildl
or
ljmp
adc
push
sbbb
jmp
ret
ret
inc
pop
lret
mov
data16
lahf
mov
pop
inc
scas
scas
add
rorl
push
cwtl
sub
xchg
scas
cmpsb
adcb
or
in
add
adc
add
inc
inc
fiadds
adc
cwtl
jo
sbb
mov
push
ror
loopew
jg
inc
sub
aas
and
out
mov
ss
lcall
popa
loope
or
shll
jbe
pop
mov
cmp
dec
jne
fists
jl
sbb
cli
push
push
or
lock
fs
mov
sub
pop
adc
and
inc
cli
scas
movsb
push
push
xor
or
lahf
dec
dec
shrb
adc
fimull
into
lret
mov
cmpb
lock
int
cs
icebp
jle
dec
mov
mov
pop
jno
mov
call
fwait
rol
push
or
xor
sbbb
sub
add
or
jl
in
scas
add
sub
xor
ds
test
mov
idivb
dec
pushf
stos
cmp
xchg
push
or
mov
cmp
nop
push
adc
hlt
mov
push
add
cmpsb
cmc
jnp
sbb
stos
insb
adc
scas
jmp
incl
sbb
mov
je
roll
mov
loopne
pushl
loopne
cmp
psadbw
shlb
jp
jo
or
sbb
cli
mov
pop
divb
push
cmp
shlb
popa
jmp
cmpsb
add
bound
fidivs
ss
dec
fnsave
enter
loopne
push
test
cmpsb
mov
das
je
push
test
adc
lock
cmp
jno
ficoml
cld
xlat
lods
shrl
cmp
cmp
add
cmp
fstpt
aam
hlt
daa
movsl
les
lods
adc
and
test
les
xchg
das
jmp
fwait
test
test
loop
and
cmp
ljmp
call
call
lock
orb
sbb
shl
scas
adcl
test
sub
push
imulb
mov
insb
lock
ljmp
or
push
lds
cmp
push
pop
adc
lret
cld
mov
das
add
fbld
push
push
iretw
in
inc
pop
outsl
inc
jo
addr16
push
mov
jbe
xor
js
aas
mov
punpcklwd
stos
fisubs
mov
ret
imul
hlt
ud2
sbb
cmc
add
ficoml
jo
dec
mov
data16
daa
or
lcall
dec
mov
jle
fsubrs
std
pusha
adc
pushf
popf
jg
nop
sbb
leave
test
add
push
push
ss
arpl
ret
mov
aam
adc
pop
mov
lcall
fdivs
adc
loop
sbb
jne
inc
nop
xchg
add
outsb
sub
mov
je
and
cli
test
and
inc
dec
inc
jmp
jle
or
adc
xchg
sbb
mov
xchg
aam
mov
push
pushl
mov
and
add
pop
inc
mov
gs
stos
mov
mov
xchg
fs
jbe
xor
out
mov
cli
and
or
xor
sub
jl
hlt
xor
ljmp
push
push
test
push
mov
lret
push
divb
sbb
icebp
scas
js
loopne
xor
sub
and
add
mov
icebp
sbb
xor
dec
cmp
pop
sbb
ror
in
fs
sub
pushf
sbb
movups
cmp
lds
loop
scas
and
pop
inc
jnp
fdivs
inc
push
jbe
lods
push
cmp
xchg
repnz
loop
xchg
and
lods
xchg
sbb
xchg
arpl
dec
cmp
and
pushl
cmp
jmp
add
repnz
repnz
mov
call
fstl
xor
mov
insb
sbb
sbb
inc
jmp
in
cli
ret
jne
add
dec
mov
filds
add
mov
pop
mov
xchg
inc
or
push
insl
ret
cmc
inc
clc
xor
test
loope
stos
inc
lahf
push
inc
mov
popl
andb
dec
addl
cltd
inc
ja
jmp
pop
sub
call
call
pusha
inc
or
ja
mov
mov
cmc
clc
dec
popa
mov
push
inc
stos
ds
pop
rcrb
add
push
jp
sub
js
mov
test
mov
pop
dec
jbe
push
insl
roll
iret
xchg
jle
pushf
mov
sub
jle
cld
push
add
orl
repnz
and
inc
push
xor
pop
scas
js
movb
testb
fcmovnu
adc
pushf
lods
repz
xor
aas
push
add
dec
mov
decl
bound
mov
push
lcall
cmp
mov
pop
jmp
adc
rclb
loope
imul
or
push
outsb
cmp
add
dec
mov
mov
xchg
jmp
cli
stos
adc
fs
or
push
ret
scas
adcl
fisttpll
cmp
fisubrs
mov
in
enter
add
mov
xchg
ss
insb
out
loop
push
cmpsl
or
adc
xchg
sub
push
test
sub
aaa
insb
test
pop
add
out
hlt
icebp
loop
cmp
pop
orl
cmp
arpl
out
lods
dec
sbb
decb
mov
cmp
arpl
or
jae
inc
inc
mov
lods
js
movsb
mov
pop
mov
push
add
xlat
mov
shlb
ss
fcomip
sub
mov
cmp
orl
jb
sti
sbb
dec
inc
xchg
adc
testb
idivl
pop
sahf
adc
mov
mov
and
rcr
xchg
mov
addb
clc
bound
lea
cmp
xlat
jle
fsubp
sbb
test
cld
mov
push
clc
xchg
fwait
pop
adc
xchg
int
push
adc
sub
sti
or
adc
fadd
xor
pop
pop
iret
mov
pop
jecxz
je
loope
rolb
add
ljmp
jo
push
mov
jmp
cli
mov
rcrb
dec
inc
sbb
hlt
clc
jne
sbb
xor
fisubs
shlb
in
rol
fistpll
arpl
lea
cmp
xchg
pusha
call
or
int3
pop
cmp
jmp
punpckhwd
mov
adc
dec
xor
cmpsl
shrb
sbb
jae
hlt
mov
inc
stc
push
push
call
or
mov
adc
dec
dec
ljmp
adc
and
cmp
mov
add
push
pop
ret
enter
pop
jbe
lock
xor
push
xlat
cmp
add
mov
jo
decl
mov
mov
aam
sbb
inc
sbb
roll
js
lcall
mov
sbb
and
mov
and
scas
fnstcw
cltd
cmp
jno
xchg
mov
mov
cmp
leave
pop
outsb
mov
daa
lods
xor
popf
ds
push
daa
sub
xlat
or
inc
pand
and
sbb
ret
and
ret
xor
and
and
stos
lock
and
mov
jo
xchg
jg
loopne
aaa
dec
mov
pusha
imull
mov
adc
cmp
jl
jp
add
add
pop
nop
imul
clc
jmp
sbb
dec
test
pusha
xor
les
mov
add
push
and
fdivrl
push
jbe
xchg
jnp
test
addps
xchg
scas
pop
and
pop
cli
stc
imul
mov
sub
pop
inc
push
enter
fs
push
push
subb
mulb
cld
mov
inc
repnz
iret
outsb
sbb
and
dec
push
cmp
pusha
flds
cmc
mov
xchg
xchg
in
arpl
dec
mov
add
out
sahf
repz
dec
and
mov
les
add
rorl
aas
adc
ss
adc
sbb
loope
adc
jp
add
jb
sti
push
orb
xchg
adc
aaa
and
int
mov
mov
xor
dec
push
cwtl
mov
ss
pop
sarb
cmc
inc
lret
xchg
ret
cmp
movsb
mov
pop
movl
dec
pop
xchg
movsl
aad
jae
mov
scas
add
mov
jmp
ds
push
pop
jg
mov
jle
jb
xchg
jne
inc
lahf
in
mov
or
subb
cmp
gs
push
mov
clc
fists
jl
push
inc
mov
xchg
popa
adc
mov
xor
lcall
push
test
nop
rorl
enter
cmp
subl
mov
clc
shlb
jg
out
je
pop
xchg
je
xor
ret
cmp
cmp
outsb
inc
pop
stos
mov
in
leave
roll
and
cmp
push
mov
push
sbb
pop
pop
insb
adc
jl
jecxz
mov
test
xchg
shlb
jo
mov
enter
lret
and
in
nop
ror
clc
xchg
icebp
and
pop
shrl
xchg
daa
call
jno
jbe
pop
or
mov
push
fwait
gs
popa
push
repz
pop
cmp
out
stos
lcall
jmp
arpl
adc
sbbb
mov
test
add
and
xorl
adc
mov
mov
ja
cs
out
clc
or
repnz
or
push
insb
loopne
andb
adc
ljmp
add
or
push
dec
lods
add
ret
xlat
inc
cmp
arpl
xchg
nop
clc
inc
mov
lea
jae
xor
add
dec
xchg
jne
lret
orb
pop
das
sbb
cmpl
test
xchg
xor
fmull
lds
push
cmp
add
aas
adc
ljmp
pop
mov
test
sub
rcrb
fucomp
out
call
clc
mov
sub
cld
mov
push
inc
test
sbb
cmpsl
popl
es
push
loop
dec
add
pop
clc
lock
out
push
ret
jge
daa
push
mov
mov
sub
or
sbb
pop
push
sbb
mov
js,pt
push
mov
push
jne
dec
sbb
ja
lods
cmp
daa
stc
mov
mov
fsubl
es
loopne
cwtl
mov
js
and
and
shlb
push
jae
or
push
sbb
xchg
lret
push
in
add
push
fistl
xor
fldt
lret
or
inc
aas
push
cmp
sbb
mov
mov
add
or
or
or
out
mov
test
mov
jp
out
in
insl
push
es
shrl
enter
adc
rcrb
cmp
lods
loopne
or
pop
mov
lea
int
fldcw
push
mov
ss
cmp
ss
pop
test
xchg
insb
push
sub
mov
sahf
lods
xchg
rclb
mov
mov
pop
sbb
test
pusha
faddl
lret
clc
jns
test
inc
lods
mov
ljmp
jp
add
shl
fistl
lret
aad
repz
push
xor
adc
cmpl
cmpsb
pop
mov
mov
aam
scas
dec
aam
lret
and
ror
es
xchg
xor
xor
pop
xchg
mov
push
lahf
push
mov
mov
rorl
in
popa
sbb
lret
pop
pop
sbb
mov
or
xchg
cmpsl
and
and
pushf
das
daa
dec
test
stos
leave
loopne
jo
xlat
mov
test
jo
sbb
lahf
int
ljmp
jg
ret
cmpsl
inc
push
jp
ss
mov
lods
bound
mov
cwtl
cmp
arpl
or
rcrl
insl
mov
xor
push
pop
cmp
nop
repnz
add
cmp
inc
outsb
cmpsb
xchg
out
adc
adc
or
cmpsb
pop
or
das
inc
divl
sub
inc
add
mov
or
cli
orl
leave
dec
mov
lods
or
dec
mov
jbe
pop
test
repnz
and
and
sub
je
scas
add
add
lods
sbb
rclb
inc
xchg
shlb
cmp
cltd
mov
cld
mov
fadd
orl
sbb
xlat
sbb
js
push
loope
int3
lds
mov
mov
out
in
xchg
mov
loope
fsub
rcrb
inc
iret
xor
mov
push
jge
cmp
fsubrp
in
lods
pusha
push
pusha
cs
xor
fstpl
lahf
pushf
lods
stc
cli
addl
push
mov
lcall
lret
lret
pop
mov
mov
add
dec
subl
cmp
or
popf
jg,pn
inc
bswap
jns
mov
jp
push
sbb
stos
and
pop
xor
rclb
xchg
mov
cmp
mov
icebp
adc
sub
mov
addr16
add
and
aas
mov
jae
std
sti
add
daa
push
xchg
mov
adc
and
enter
push
jno
icebp
cmpsb
mov
adc
ret
fsubr
dec
std
dec
dec
nop
and
pop
jl
pop
fwait
xchg
xor
frstor
push
mov
out
xor
add
mov
cmp
pusha
in
in
daa
pusha
xorb
jl
js
or
cmpsl
xchg
addr16
std
pop
dec
inc
add
sub
int3
cli
cmpsl
push
mov
std
mov
cmp
add
rorb
push
mov
add
call
test
jmp
jl
gs
pinsrw
cmc
mov
aam
sub
push
mov
jg
push
pop
test
xor
addb
call
cmpsl
xchg
push
push
pop
cmp
dec
add
mov
jne
aad
sarl
testb
call
xchg
hlt
roll
sub
sbb
push
test
xchg
sbb
sbb
mov
stos
repnz
push
lods
xchg
and
pop
push
test
lock
xchg
inc
sub
inc
dec
jp
lahf
cmp
mov
lock
shll
fld
es
sbb
inc
fsubr
aam
push
addl
repnz
or
jmp
test
call
xlat
clc
inc
insb
pop
pop
test
add
cvtps2pi
push
inc
mov
dec
call
loop
je
sub
aas
jno
mov
xor
or
sbb
stos
in
aas
out
inc
out
or
sbb
pop
mov
int3
xor
shrl
mov
pop
and
std
push
or
pop
xchg
pop
xchg
push
add
and
repnz
dec
sbb
lret
xchg
inc
call
and
jbe
mov
pop
push
lods
scas
sub
mov
sahf
lret
incl
outsb
inc
test
ret
xchg
push
shlb
test
adc
add
cwtl
jno
insl
icebp
add
jo
pop
loopne
fucom
insl
xchg
xor
xchg
inc
cmp
or
aam
dec
out
dec
cld
cli
aam
scas
arpl
out
mov
mov
stc
ficoml
mov
inc
jmp
and
icebp
rcll
and
fwait
and
addb
inc
push
xchg
test
hlt
andl
jb
adc
loop
and
and
out
sbb
adc
lea
sbb
inc
mov
jo
jmp
mov
cli
imul
pusha
mul
test
ljmp
and
movsb
push
shl
adc
or
dec
cld
lahf
nop
test
push
mov
mov
cmp
or
rorb
fmul
pop
mov
cld
daa
lds
shrb
cwtl
xchg
inc
sub
cmpsl
enter
outsl
dec
mov
cmp
or
sbb
popa
add
dec
inc
mov
dec
fisubl
outsb
cmp
sub
in
add
cwtl
add
inc
cltd
mov
push
out
adc
cmpsl
insb
mov
mov
jae
sar
sub
call
or
inc
mov
sub
push
push
lock
push
adc
and
lret
pmulhw
clc
ror
repz
dec
ja,pt
sub
std
dec
and
mov
push
lods
loop,pt
jo
pop
sahf
and
mov
push
xchg
shlb
pop
jbe
cs
push
mov
sbb
xor
ret
add
mov
xlat
jl
xor
cmp
adc
xchg
cmp
ljmp
push
insb
insl
jne
push
mov
nop
xchg
pop
xchg
hlt
mov
adc
sbb
pop
pop
negb
rcll
xchg
cmp
pusha
fsubs
fists
das
scas
fidivl
sbb
push
or
xchg
jno
shll
and
movsl
and
dec
push
stos
cli
test
mov
les
jle
cmc
or
sub
jl
nop
mov
add
push
mov
jle
mov
out
in
cs
inc
mov
pop
aad
aad
cmc
inc
add
fwait
jae
sub
icebp
inc
shll
ja
ret
xchg
ja
inc
adcb
mov
pop
gs
mov
out
pop
sbb
or
imul
xchg
enter
mov
clc
dec
mov
ss
sar
loopne
xchg
outsb
jno
dec
ret
ret
sbb
cmp
inc
push
pusha
lahf
mov
jle
mov
and
mov
xorb
push
loopne
lock
pop
xchg
pop
inc
jb
shrb
add
jbe
loope
mov
rorl
jne
aam
push
stos
cmp
pushl
out
out
pop
ret
and
out
leave
scas
and
cmp
sbb
or
sub
inc
cld
pop
aas
mov
in
jb
or
std
mov
or
cli
push
shrb
mov
sub
pusha
jge
add
xlat
push
add
lahf
pop
cli
mull
jge
add
inc
inc
mov
or
pop
xor
ss
dec
int
inc
mov
add
cmp
loopne
push
push
jecxz
cmp
fs
pop
jbe
lea
or
dec
sbb
inc
mov
pop
push
icebp
movsb
push
movsl
lds
repz
clc
add
mov
pop
or
sbb
and
inc
pop
mov
inc
mov
daa
dec
lahf
hlt
insl
mov
shll
rcrb
or
jb
icebp
or
or
ljmp
jnp
sbb
scas
xor
testl
cmp
test
mov
mov
imul
push
bnd
push
loope
push
ja
cli
and
lret
push
xor
pop
pop
jecxz
outsb
mov
hlt
popf
dec
clc
icebp
lods
addr16
ljmp
push
sub
daa
in
les
roll
push
mov
mov
ds
xchg
xor
jecxz
clc
push
movsl
loop
push
jmp
xchg
jle
sbb
xchg
push
aam
push
cmp
in
push
mov
dec
xorb
out
cli
icebp
push
xorl
jno
sub
mov
pop
fcoml
enter
out
cltd
mov
jp
repnz
subb
rcrb
dec
ja
nop
mov
mov
dec
pop
jg
and
jb
popa
add
outsl
repz
adc
icebp
ds
cmp
jle
in
shrb
test
cmp
fsubrl
mov
jge
cmp
sarb
sub
pop
clc
xor
mov
jmp
push
jmp
call
aam
ret
lods
cmp
mov
xchg
add
ret
dec
clc
ret
testb
inc
dec
dec
push
repnz
add
icebp
xchg
fwait
adc
movl
frstor
and
loop,pt
push
les
cmp
ss
xor
or
adc
das
aaa
sahf
ret
mov
fcoms
add
mov
mov
xor
out
call
aam
xchg
test
sbb
int3
in
or
dec
ja
dec
es
shlb
xchg
ljmp
jae
or
dec
xchg
jl
add
sub
mov
adc
insb
rcr
aaa
xchg
mov
dec
adc
fldl
mov
lock
dec
xchg
sbb
outsb
adc
rolb
push
push
dec
jno
in
pop
roll
xchg
xchg
aam
std
or
sbb
imul
mov
mov
push
jl
push
sub
mov
jl
cltd
jp
aaa
mov
adc
daa
sbb
shlb
pop
jle
inc
ljmp
xchg
pop
mov
mov
clc
lea
push
sar
or
pop
rolb
icebp
or
mov
cmp
hlt
mov
xchg
push
nop
in
int
icebp
or
cmp
test
test
stos
decl
cli
enter
outsb
cmc
cmp
adc
jb
pop
add
aam
fidivrl
add
dec
je
cmp
add
inc
addr16
shlb
pop
adc
cmpb
lods
jns
mov
mov
gs
orb
adc
push
sub
loopne
adc
adc
popa
push
or
pusha
imul
jp
inc
cmp
add
mov
arpl
xor
push
push
mov
test
adc
cmp
adc
test
out
add
xor
bound
outsl
sbb
inc
rcll
dec
dec
add
adc
cmp
cld
shll
andb
ss
divb
cltd
cs
or
add
das
jp
repnz
loop
fnstsw
mov
sbb
pop
sub
and
xchg
push
sbb
jecxz
rolb
int3
push
add
inc
loop
aas
adc
pop
push
add
cmp
icebp
mov
push
push
clc
cs
mov
adc
push
lret
mov
scas
stos
adc
movsb
je
or
ret
insb
push
stos
arpl
pop
pop
mov
push
test
lahf
jne
in
mov
mov
loope
pop
mov
push
ret
stos
dec
js
js
mov
jle
inc
inc
rclb
lods
jnp
mov
out
mov
mov
cmp
loop
xor
cmp
divl
aaa
sub
les
sub
ds
and
jp
aad
into
inc
bound
push
mov
push
gs
repz
nop
push
lods
int
ss
mov
call
push
daa
adc
sarb
adc
or
pop
xchg
cmc
into
arpl
loop
inc
dec
sbb
call
mov
pop
mov
aam
inc
mov
or
push
adcb
inc
mov
add
fs
in
add
mov
mov
sub
arpl
and
ja
movsb
lea
mov
std
lret
sbb
jnp
add
fdivs
stos
mov
and
mov
int
shll
xor
into
pop
outsb
das
and
popa
aaa
fists
cmp
or
inc
rcll
js
aad
insl
pop
pop
pushl
stos
inc
aad
inc
es
add
cld
iret
test
or
call
push
fwait
cltd
cmp
iret
mov
stos
in
jle
out
pushf
dec
jmp
push
das
xchg
xchg
rcrb
outsl
xchg
pop
test
dec
scas
shll
mov
dec
or
xlat
mov
cmp
mov
xlat
or
pop
ss
lock
fistpll
mov
std
hlt
add
ja
add
aad
js
aas
sub
pop
mov
jno
and
lods
mov
and
sub
xor
jae
mov
push
cmc
xor
add
xchg
hlt
pop
cs
aam
adc
pop
xchg
inc
xchg
jno
mov
mov
jo
adc
pop
cmp
jmp
mov
push
push
cmc
and
clc
loopne
xchg
sub
add
aam
repnz
mov
test
or
or
popa
xorl
mov
cli
push
and
pusha
or
cmp
outsl
xchg
sahf
out
fadd
neg
sahf
stos
cmp
lock
jle
icebp
push
aad
mov
sbb
jno
dec
lahf
jno
les
inc
iret
cmpsl
sar
sbb
loope
imul
cmp
mull
pop
mov
sub
fisttps
sbb
add
aaa
cmp
sub
stc
stos
mov
and
orl
add
sbb
or
xor
ss
iret
jbe
xlat
sbb
add
aaa
test
mov
jl
ss
and
fiaddl
ss
lcall
dec
adc
xchg
sti
inc
cmp
test
sub
jb
adc
mov
jne
sub
pop
les
in
xchg
dec
into
pusha
and
rcll
data16
xor
js
sub
insb
ret
out
out
push
cmpl
js
pop
mov
test
cld
jno
sub
and
push
fcoms
sti
jo
add
rclb
rcll
rcrl
xchg
enter
jne
pusha
mov
cmpsl
insl
cmp
mov
pop
fldenv
jge
adc
dec
xor
aas
lcall
jg
xchg
aad
jp
xor
cwtl
xchg
sbb
ret
cs
push
bound
jne
fiaddl
sbb
shr
fwait
xor
in
in
push
ds
jecxz
repz
adc
lcall
push
sbb
icebp
mov
xchg
pushl
loop
loop
jl
sahf
mov
mov
push
and
adc
sbb
mov
push
push
rcrb
mov
out
mov
aam
mov
inc
add
sub
add
mov
mov
addr16
sbbl
and
test
loopne,pt
sbb
sub
mov
adc
mov
fcoms
sbb
jmp
nop
out
sbb
xor
movsl
xchg
out
pop
and
in
incb
add
hlt
fdivrs
rorb
sub
cltd
mov
ds
cmpsb
mov
inc
or
xchg
aam
xor
adc
les
outsb
filds
mov
jo
pop
push
mov
and
mov
out
inc
rol
push
ret
sbb
loop
push
ret
nop
adc
sarb
subb
lea
scas
mov
sbb
push
in
andb
adc
xor
or
and
cmpsb
push
fmuls
inc
test
or
sub
cmpsb
mov
add
push
nop
inc
negl
mov
movsl
ret
cmc
mov
shrb
add
pop
jp
xor
inc
in
inc
enter
adc
xchg
cmp
lods
pop
mov
mulb
sub
add
or
jmp
push
mov
ret
sub
out
or
dec
sahf
and
lret
aas
jecxz
inc
sti
sbb
sub
mov
pop
call
pop
cmpsb
sbb
addr16
mov
mov
rcrl
fistps
aas
jmp
aam
clc
dec
mov
mov
bnd
cmp
int
jle
cmpsl
add
cmp
xchg
mov
lret
fadds
jb
ja
pop
idivb
inc
lret
sbb
add
sub
inc
sbb
cld
xchg
aam
jmp
adc
mov
icebp
out
je
mov
inc
adc
dec
mov
xchg
nop
pop
sbb
mov
and
rolb
xchg
data16
shl
xor
mov
ret
push
sbbb
jne
bound
fistps
es
imul
cli
and
mov
popa
mov
xchg
mov
xor
add
pcmpeqb
sti
jne
or
movsl
or
mov
in
or
out
icebp
add
jbe
pop
push
jg
mov
std
mov
loope
ret
mov
out
int3
test
les
sbb
das
mov
add
dec
mov
outsl
inc
mov
jnp
int
push
fsubrs
aaa
and
jno
popf
cmc
imul
lock
pop
call
das
aad
cmpsb
and
inc
inc
pop
icebp
lret
push
xchg
xor
inc
adc
adc
push
jno
xor
int
cmp
gs
daa
cs
jmp
setb
pop
add
dec
pop
fsubrl
cmpsl
mov
jbe
xor
or
out
mulb
cwtl
sbb
fstl
jne
mov
clc
mov
push
add
sahf
fiadds
pop
xchg
xchg
ror
or
rorb
adc
imul
dec
in
test
int
pop
subb
mov
jbe
out
jecxz
negw
cwtl
rorb
pop
inc
cmp
mov
mov
dec
jb
ret
sbb
push
jp
sbb
mov
pop
push
cli
fidivs
loopne
mov
daa
stos
mov
js
cmovne
fldl
bsf
mov
dec
or
gs
int
mov
pop
pop
mov
jo
test
jae
inc
adc
xor
jo
test
div
mov
into
dec
sbb
mov
jnp
shlb
jmp
or
mov
and
cli
es
push
clc
adc
iret
inc
xor
stos
insb
push
jmp
pop
ljmp
jle
xor
add
fcoms
add
pusha
shl
clc
pusha
jns
es
sbb
ret
mov
lret
adc
mov
push
push
es
rcll
and
mov
pop
decb
mov
add
cmp
ds
mov
sbb
or
leave
movsl
adc
add
mov
inc
test
scas
pop
test
add
adc
cmp
mov
sar
out
enter
inc
stos
fidivrl
repnz
push
cld
pop
nop
addl
mov
out
je
enter
adc
mov
aam
push
pop
test
negb
mov
scas
jle
cmp
fists
sbb
in
jg
or
arpl
sub
dec
ret
lock
sbb
push
push
pop
orb
fisttps
shl
call
pop
mov
add
insb
mov
cmc
or
js
dec
stos
mov
and
fisttpll
jb
aas
pop
mov
mov
jecxz
movaps
mov
scas
cmc
jmp
sti
sbb
mov
adc
pop
div
dec
dec
adc
lcall
jae
shll
in
aaa
ret
mov
cwtl
sbb
pusha
addb
jmp
movsl
or
cmpsl
data16
mov
lahf
pushl
les
add
stos
fbstp
stos
dec
add
movaps
hlt
rclb
pop
ror
add
ds
int3
cltd
xor
jp
inc
sbb
shll
popf
test
xchg
stos
movsb
mov
jmp
cmpsl
push
fdivr
cmp
xchg
inc
mov
pushf
test
adc
mov
scas
cmp
aam
ljmp
mov
scas
adc
or
jecxz
pusha
xchg
lods
xor
or
push
in
or
andl
hlt
inc
pop
add
push
jo
fcompl
mov
outsb
fildl
shlb
in
add
rcr
add
sarb
lgs
scas
pop
mov
jmp
jo
out
push
mov
inc
ret
sub
leave
push
dec
adc
pop
adc
and
pop
shl
es
icebp
or
pop
xlat
movl
sub
sbb
sarl
cmp
js
mov
in
cmp
ljmp
push
sbb
rcrb
jle
scas
data16
inc
adc
cld
mov
test
push
sahf
in
dec
ret
test
test
or
fcompl
movsb
and
test
xor
pop
cmpsb
push
xor
mov
lahf
out
aam
daa
in
inc
mov
inc
inc
push
rol
push
mov
into
xor
xor
jg
mov
stos
or
add
imul
push
sub
paddsb
or
jg
les
lcall
cld
or
jmp
ljmp
stos
ljmp
dec
xorb
je
adc
cld
les
xchg
clc
cltd
test
push
and
fstpt
push
addr16
xchg
dec
xchg
pop
shl
lahf
outsl
out
ret
inc
dec
pushf
inc
orb
mov
push
or
fisttpll
addb
add
and
mov
mov
inc
xchg
mov
sahf
testb
push
subl
sub
std
outsl
popa
mov
enter
pushf
dec
mov
pop
xchg
push
mov
xchg
fcmovnu
dec
hlt
dec
lea
mov
and
dec
dec
sub
fildll
ret
dec
cmp
cmc
push
push
pusha
sahf
arpl
or
xchg
ret
movsl
push
sbb
ss
addr16
cmpsb
out
push
data16
loope
loope
jb
fs
ja
roll
in
loope
ret
movsb
je
idiv
jl
or
add
mov
fstpl
and
push
aas
in
shlb
les
aas
mov
sbb
pop
cmpsb
adc
adc
std
jp
add
xorl
ficompl
mov
mov
aaa
aad
sbb
or
jo
add
adc
mov
rolb
xorb
rolb
xor
xor
cld
add
movsb
into
xor
jae
pushf
pop
add
dec
or
ret
pop
imul
dec
jbe
cmpl
jge
push
push
or
es
test
dec
loopne
out
xor
jmp
imul
imul
add
inc
xchg
arpl
bound
nop
cmpsb
outsb
lea
insl
or
in
xor
add
push
xlat
mov
mov
sub
xchg
incb
popa
negb
and
mov
dec
dec
cmp
sbb
adc
ret
js
push
fadd
mov
jl
or
pop
and
lret
cmp
and
dec
pop
dec
cmp
cmp
les
lahf
adc
cli
rcr
insl
sub
sub
les
fadds
lea
push
es
inc
or
pop
xchg
inc
inc
sti
sub
sbb
rolb
xlat
xchg
js
sub
orb
xchg
rolb
fiadds
mov
ret
inc
inc
fcmovb
into
aam
scas
push
jg
pushf
and
add
mov
scas
aam
cmpsl
xorb
out
mov
shl
lods
push
jmp
mov
ss
mov
pop
mov
loopne
call
rolb
pop
js
les
push
add
rolb
rolb
ss
push
ss
or
repnz
push
std
jg
ror
add
fwait
dec
in
es
repz
mov
xchg
call
xchg
aas
lock
push
inc
and
mov
pop
cli
add
pop
mov
pop
jbe
pusha
adc
adc
push
jge
pop
and
rorl
ret
lods
xchg
rorb
cmpsb
shl
js
popa
sbb
pop
hlt
dec
movsl
and
pushf
arpl
xchg
movb
aas
push
loope
cld
dec
sbb
cmc
sbb
lock
out
jle
xor
push
loope
or
cbtw
add
pop
xchg
decl
and
cmp
inc
bound
sbb
add
xchg
xor
outsl
xchg
push
adcl
dec
lret
lahf
inc
movsb
lret
lds
subb
jge
and
push
and
dec
js
adc
jp
insb
push
pop
or
push
adc
pusha
xor
pop
push
int
or
pop
xchg
pop
add
movsl
fiaddl
fcomp
adc
fdivrl
push
rolb
subb
hlt
test
inc
jo
mov
movsl
jae
loopne
sarb
lock
xchg
inc
push
es
dec
orb
push
aam
and
test
popa
clc
lock
pop
iret
lods
addl
nop
test
cmc
stos
insb
inc
loopne
jno
push
push
sbb
add
scas
or
lret
push
mov
jle
pop
cltd
fs
cmpsb
cmpsl
ja
enter
dec
sahf
pop
and
into
inc
pop
fwait
mov
mov
sti
pop
pop
jle
aaa
sbb
jle
mov
push
mov
ja
sub
cs
mov
neg
mov
add
jle
popa
inc
add
enter
mov
push
inc
insl
ljmp
jl
and
icebp
cs
enter
jl
cmp
dec
shrl
jne
lret
add
or
stos
sbb
ftst
sbb
jno
xchg
xor
pshufw
pop
sarl
cmp
cld
test
leave
pop
lahf
sti
mov
dec
popf
inc
dec
and
stc
push
pop
shrb
loop
push
adc
jg
cs
sub
data16
push
or
sbb
xchg
or
mov
push
fiaddl
add
fmuls
pop
stc
popf
test
xchg
adc
pop
push
push
in
adc
jg
mov
test
or
mov
ret
sbb
xchg
cmp
xchg
xchg
lret
sub
inc
fsin
aas
xchg
jno
push
and
pop
repz
lds
mov
cmp
dec
je
jl
cmp
aaa
cld
decl
mov
and
fadds
mov
adc
loop
cmp
inc
sti
fidivl
lock
into
jnp
dec
pop
adc
sub
adc
mov
outsb
ljmp
xchg
push
jg
sti
cs
mov
sub
push
push
fistps
rclb
add
or
cmpsl
hlt
mov
pop
fucomi
dec
dec
mov
call
add
jo
xchg
inc
push
mov
lcall
mov
pushf
pop
jae
psraw
xchg
out
movaps
inc
popf
cwtl
mov
adc
loope
jno
pop
add
rolb
xor
scas
jl
add
sub
movsl
shlb
dec
sbbb
and
add
and
out
stos
pop
bound
fisttpl
js
push
dec
lahf
lea
sub
movsl
or
icebp
test
in
cmpsb
mov
and
inc
sub
dec
xchg
fidivs
sti
mov
fiadds
add
pop
and
lret
fxch
test
jne
and
dec
add
push
lods
lret
inc
daa
sub
xlat
out
lahf
cmp
test
xor
popa
rcl
or
pusha
inc
jmp
or
xor
mov
pop
cmc
cld
mov
inc
or
sbb
jp
push
daa
in
xchg
movsl
filds
scas
add
xchg
jp
push
sbb
xor
cwtl
pushf
push
push
in
ret
lret
mov
gs
jl
clc
dec
into
scas
orl
dec
add
andl
xchg
sub
mov
xchg
xor
mov
sahf
sbb
sbb
add
aad
stos
cmpsl
loop
ss
test
adc
clc
mov
xchg
dec
mov
std
jb
cld
pop
icebp
lds
lds
mov
daa
jp
inc
lret
or
mov
pop
jl
fidivrs
imul
aaa
push
fbld
int3
push
mov
pop
loope
bound
repz
push
dec
cmp
cli
test
mov
scas
loopne
jns
int
mov
popf
push
pusha
dec
mov
sarb
addr16
insl
inc
mov
and
mov
lods
jle
xchg
cld
repnz
popa
adc
fdivr
xor
fcoms
xor
jl
and
xor
enter
add
imul
data16
decb
adc
cmp
dec
xchg
sub
sub
jg
push
jb
scas
xchg
sbb
shrb
gs
mov
rorb
xchg
lods
ja
lock
adc
insl
cli
mov
and
pop
pop
pop
dec
jp
jbe
dec
cmp
notl
add
cld
jae
pop
pop
push
je
xchg
fbld
orl
test
arpl
rcrl
rorb
out
add
push
jmp
movsb
pop
push
ret
repnz
enter
pop
cld
fisttpll
je
fadds
pop
mov
inc
jmp
pop
ds
dec
inc
mov
mov
add
dec
sub
rcrl
shr
test
dec
loopne
aaa
inc
jl
cwtl
lret
mov
mov
shrl
mov
js
shll
mov
fimuls
pusha
jl
stos
xchg
dec
jmp
dec
adc
sahf
sbb
int
ds
rcrb
push
std
imul
push
sbb
xchg
and
cld
out
and
push
loopne
cmp
out
outsl
aad
ja
repnz
movsl
dec
jmp
or
and
xchg
fiaddl
fcomp
sarl
pop
jmp
xlat
or
xchg
int
push
jbe
add
jae
lods
ret
mov
fisubl
test
jbe
jo
inc
ror
inc
jo
xlat
cmpsl
xlat
mov
fs
mov
or
and
pop
ret
and
movsl
shl
and
add
ret
pop
push
sbb
inc
push
pusha
daa
mov
sub
mov
sbb
dec
adc
aad
jnp
or
and
mov
add
cmp
sahf
roll
sub
loopne
mov
fnstenv
fadds
sbb
pop
mov
pusha
stos
sbb
add
xlat
xchg
mov
pop
and
cmc
xor
mov
sub
xor
or
fidivrl
out
jl
cmp
adc
call
fs
in
sub
lock
mov
test
sub
cmc
push
add
push
out
xchg
je
pop
fwait
das
stc
mov
test
in
lea
mov
mov
popf
xor
popf
test
jbe
and
fucomp
adc
cs
ret
int3
cmp
pop
movzbl
xor
push
je
fadds
adc
movsl
sbb
scas
frstor
movsb
fimuls
add
mov
shl
adc
lret
rol
mov
fwait
cmp
enter
stc
call
and
ljmp
ret
push
inc
sbb
add
cmp
shr
adc
js
ds
mov
mov
adc
clc
aas
adc
pop
add
adc
fdivrp
xor
inc
fidivs
test
inc
dec
jg
nop
cli
iret
push
sbb
sbb
sub
bound
adc
adc
cltd
mov
stos
mov
add
mov
loopne
out
push
aad
mov
jbe
jmp
jns
and
out
and
fwait
push
jl
jb
les
repnz
stos
push
pop
shr
mov
jg
or
add
fsubs
fidivs
or
push
hlt
aad
imul
add
push
mov
cmp
negl
les
inc
lcall
sub
sub
arpl
mov
cmpsb
mov
nop
adc
iret
lock
or
push
pop
pop
bound
mov
cs
or
dec
fsubrs
inc
add
xchg
xlat
pop
imul
data16
stos
mov
pop
fs
adcl
cli
orb
out
pop
mov
inc
vandps
inc
pop
xchg
scas
pusha
ret
lea
hlt
add
jmp
inc
push
pusha
and
mov
xchg
mov
fldl
push
jp
adc
cmpsl
add
hlt
fsubrl
shll
cltd
mov
add
fwait
pusha
loope
jae
inc
inc
adc
xchg
fldl
les
xchg
jge
xchg
mov
pop
sub
jp
es
ss
mov
mov
scas
sbb
jp
cmp
rcl
nop
cmp
test
sbb
xor
add
and
sub
loopne
add
stos
xchg
xorl
mov
ret
pop
pushf
les
fwait
hlt
mov
jp
mov
les
sbb
sbb
jp
inc
int3
cmp
stos
sub
ret
adc
out
mov
push
fucomip
adc
adc
pop
aas
mov
sub
xchg
or
cld
aam
ucomiss
push
mov
es
pop
adc
mov
in
mov
jo
cli
fsubs
rclb
std
mov
xor
cltd
sub
cmp
sbb
mov
xor
add
add
push
fistps
aad
mov
dec
lahf
data16
sbb
lock
mov
sub
ret
outsb
repnz
add
loop
jae
outsl
or
xchg
js
mov
xor
rorl
jo
js,pt
mov
insb
xchg
lods
nop
pusha
into
fs
call
out
test
iret
mov
cld
pop
mov
ds
popl
jg
xor
inc
outsb
push
xchg
or
mov
loop
insb
mov
push
push
hlt
aam
pop
xor
shlb
daa
mov
pop
cld
add
sbb
ja
daa
mov
add
lahf
outsl
mov
nop
mov
push
lods
dec
mov
ficoms
leave
sbb
imul
mov
sbb
cld
imul
frstor
push
ds
and
or
push
cmp
dec
inc
push
adc
lock
cwtl
out
mov
push
cmpsl
testb
pop
clc
icebp
insl
roll
ret
push
out
jnp
push
insl
sub
andb
loop
or
mov
mov
scas
aas
pop
out
jae
pop
push
add
xchg
sbb
mov
mov
add
xchg
inc
movsb
adc
push
mov
mov
call
push
cltd
clc
inc
stos
or
mov
push
mov
jbe
mov
mov
push
subl
add
repz
in
mov
xlat
mov
divl
cmp
aas
mov
sbb
rolb
push
sti
sub
and
cmpsb
sbb
out
fsts
leave
cmp
pop
shrl
frndint
rcll
jp
add
daa
pop
in
sarl
sbb
inc
lock
mov
mov
push
sbbl
out
lds
jo
imul
lods
mov
dec
ret
mov
cmp
mov
and
lret
dec
lock
xchg
push
in
adc
mov
test
pusha
cmp
in
jns
add
add
lahf
je
xlat
lret
mov
test
mov
adc
aad
fldl
rcrl
pop
push
sbb
clc
xlat
inc
jge
jo
jle
stos
aam
xchg
push
movsb
daa
inc
cmpsb
imulb
cs
ja
or
cli
js
push
fwait
jg
movsb
dec
shll
sub
mov
fcom
imul
test
loopne
es
test
sbb
je
push
mov
out
fisubrs
mov
dec
mov
mov
cmp
sub
dec
xor
popa
cmpsl
sbb
mov
pop
je
outsl
adc
mov
mov
cmp
dec
xlat
adc
inc
add
icebp
sub
pusha
adc
adc
add
add
and
mov
xchg
addl
and
cmp
push
lock
mov
sub
push
mov
xchg
and
xor
scas
xchg
jle
mov
hlt
cmp
leave
mov
shrb
push
or
adc
or
out
cld
stc
ja
pop
rol
cmpl
scas
movsl
push
mov
popf
in
call
inc
fimull
push
shl
push
lret
push
test
mov
xor
out
xchg
loope
xchg
test
enter
addb
sbb
and
sub
or
jmp
or
scas
std
push
hlt
ja
sub
cmp
fcompl
inc
adc
hlt
fadds
inc
and
jb
jno
push
clc
clc
push
stos
shll
xor
xchg
nop
ret
mov
out
orb
ljmp
loop
add
aad
into
outsl
xchg
and
call
rolb
insb
inc
dec
push
add
xor
inc
mov
rcll
dec
cmp
adc
and
and
xchg
fisubs
cwtl
add
dec
in
test
pop
mov
mov
mov
outsb
lock
pop
shll
xchg
and
cmp
inc
pop
je
mov
call
jle
xlat
xchg
gs
rcl
pop
pop
lods
xor
pop
ret
and
int
rorb
ror
and
add
repnz
push
lods
rorl
or
and
jmp
test
or
movsl
xchg
mov
mov
mov
push
mov
xchg
rcll
xor
adc
sub
sbb
aaa
dec
pop
rcrl
divb
jmp
xor
xor
cli
jge
call
aaa
rol
rcl
inc
sub
daa
shll
add
fdivrl
add
lods
adc
xor
cmp
pop
in
push
int
jp
jp
sub
inc
icebp
lods
mov
fildl
xchg
sub
orl
mov
mov
mov
pop
cmovp
push
stc
pop
test
iret
in
loopne
xchg
sbb
add
arpl
mov
add
sub
clc
aad
jl
or
daa
outsl
push
add
jecxz
pop
rol
ret
sub
mov
lcall
rolb
jg
cmp
ja
add
sub
jns
int3
shr
jne
rclb
clc
cmp
lds
jp
or
int3
pop
out
loope
push
call
push
jno
into
cmpsl
addr16
adc
jnp
div
cmp
inc
cmpsb
into
movsb
scas
fisubrl
mov
popa
sub
and
call
mov
push
in
jle
jg
add
dec
ret
je
and
clc
lea
dec
nop
push
adc
loop
pushf
add
int3
fcom
in
push
push
push
popa
mov
test
mov
imul
out
inc
shll
inc
xor
sbb
cli
ds
mov
add
xor
xor
add
mov
dec
rcll
push
jmp
repz
call
mov
add
cmp
adc
movsb
sbb
fstpl
pop
ret
adc
add
inc
mov
cmp
mull
xor
mov
in
pop
dec
sahf
cmp
loope
shrb
shlb
insb
je
mov
cmp
popa
push
sbb
hlt
inc
inc
fdivrs
mov
cld
pop
cltd
dec
inc
fnstenv
ljmp
xchg
push
jo
and
jb
pop
enter
lahf
mov
adc
add
inc
jp
or
adc
adc
xor
jns
cwtl
mov
ret
dec
aaa
imul
ljmp
pusha
loopne
dec
insb
aam
fldcw
inc
and
and
mov
adcb
icebp
out
push
rcr
or
sbbb
leave
lea
xor
push
or
aaa
add
push
sahf
inc
les
les
test
loopne
sahf
ljmp
fcom
stc
or
out
inc
sti
hlt
jge
add
sbb
push
repnz
lcall
hlt
adc
xor
or
lods
lods
mov
and
mov
scas
lock
bndldx
add
mov
add
enter
cmp
scas
mov
push
jp
inc
mov
cmpl
aam
sahf
jle
jb
dec
sbb
push
mov
xor
adcl
fcmovnb
jge
inc
popf
mov
or
mov
add
mov
loope
xchg
xlat
cmp
mov
adcb
shrb
mov
icebp
ficomps
mov
xor
xor
jle
fidivrs
mov
pop
ret
outsb
mov
or
lea
sbb
mov
mov
test
cmc
aas
loopne
sub
cmp
or
xor
cmpsl
mov
inc
daa
scas
nop
jbe
inc
jnp
or
sti
jge
adcb
jnp
pushf
rcrl
scas
jle
les
mov
add
ds
mov
cs
add
xor
sbb
cli
jl
je
mov
adc
mov
xor
sub
jg
pop
mov
rolb
std
mov
fdiv
loop
stc
clc
or
cli
add
imul
adc
jp
xor
xchg
cmpsl
sub
inc
daa
add
dec
jb
push
sbb
jae
ret
imul
out
or
inc
aas
xchg
add
out
inc
adc
testl
movb
dec
xchg
xor
hlt
or
sub
cltd
push
adc
cmp
inc
sahf
cmp
fs
sbb
push
jmp
int
dec
subl
insb
std
js
pop
in
bound
sub
rcrb
sbb
or
mov
inc
inc
push
xchg
int3
data16
int
les
jge
jns
incb
inc
test
jb
stc
rol
add
rolb
sbbb
mov
inc
add
loopne
jmp
xor
jle
loope
mov
popa
or
incl
jb
sbb
and
push
sub
inc
inc
insb
movsl
cld
pushf
jmp
mov
and
or
ja
inc
in
pushf
fidivl
adc
lcall
mov
xlat
jecxz
sbb
addr16
cmp
add
add
sti
inc
fstpt
negb
fcmovnu
xor
fisubl
loope
pop
xchg
clc
mov
dec
sub
lcall
and
sbb
add
sbb
sbbl
rcll
sti
push
roll
sbb
adc
cli
mov
pop
rclb
out
jno
sub
cs
add
xchg
xor
je
push
sub
into
into
mov
cmp
scas
cmp
inc
stc
repnz
xor
clc
add
inc
dec
cs
daa
sub
call
inc
out
add
daa
repz
sti
icebp
int3
add
scas
or
ret
in
dec
test
pop
loope
fs
jmp
and
inc
gs
xchg
icebp
add
dec
inc
mov
and
inc
inc
xchg
mov
cli
leave
movsb
inc
sub
fldt
jg
andl
dec
mov
mov
lret
outsb
test
adc
push
sbb
scas
ffree
jns
sbb
jnp
inc
mov
je
push
xchg
mov
or
dec
stos
mov
and
ror
sbb
cs
clc
sbb
cs
push
mov
bound
xor
call
outsl
push
mov
cmp
and
cmc
jo
ret
stc
ja
stos
scas
mov
daa
mov
sbb
fcompl
sbb
pop
loope
xchg
stos
out
pop
mov
scas
push
inc
and
sub
inc
insl
and
push
pushf
sbb
mov
arpl
ss
xlat
insl
cmp
sbb
rcrb
xchg
jae
ljmp
add
shl
mov
mov
mov
ficoms
ret
push
push
mov
out
sub
xchg
das
lahf
xor
pusha
add
test
add
push
and
sbb
mov
lret
sbb
mov
out
cmpsl
aad
in
cmp
out
jg
xor
call
sub
push
shll
or
push
imul
xchg
outsb
orb
fstpl
in
adc
ss
add
jne
and
jle
lahf
pusha
les
mov
jno
aas
shrb
mov
inc
cmpsl
repnz
add
push
mov
sbb
ret
cmpsb
push
dec
mov
push
pop
and
sti
lahf
adc
lcall
jnp
mov
lods
lock
add
call
loop
sub
subl
lret
jo
mov
fldl
ds
xchg
inc
xchg
into
jnp
lcall
add
pushf
dec
and
mov
add
pop
aaa
pop
pop
or
imul
push
add
jae
pop
pop
xchg
loop
xlat
adc
mov
adc
ret
add
and
push
pusha
mov
add
out
pop
add
mov
shll
movsb
and
cltd
mov
aaa
mov
and
xchg
cmp
je
mov
xchg
add
in
and
ret
push
mov
mov
push
or
and
inc
dec
push
cld
test
cmp
ficompl
mov
sub
sbb
in
xchg
mov
shll
inc
data16
iret
inc
adc
js
jns
mov
inc
dec
mov
sbb
jp
xchg
push
rolb
pop
push
sub
ficomps
add
inc
cwtl
mov
xor
push
ret
add
leave
mov
jecxz
sbb
orl
add
fwait
cmpsb
push
int3
or
test
test
adc
xor
shlb
sub
out
ljmp
je
xor
jge
pop
jle
daa
xchg
cmp
push
mov
gs
sbb
insl
push
sub
pop
inc
push
stc
scas
xchg
scas
ds
inc
cmp
adc
es
or
fucom
pop
inc
push
and
in
test
add
fsubrp
imul
mov
push
fwait
rcrb
lea
push
dec
pop
push
inc
mov
lcall
test
addr16
call
sarl
jle
cmp
and
test
jg
sub
scas
out
dec
loopne
outsb
fwait
daa
xchg
cwtl
push
xchg
test
fadds
movsl
imul
clc
loop
jbe
sbb
xor
push
jle
cmpb
xor
icebp
lock
lock
incb
rolb
push
js
repnz
mov
mov
dec
add
lock
out
fcmovnb
inc
sub
sbb
jmp
pushf
pmovmskb
lret
test
div
leave
pop
daa
loopne
lea
sbb
mov
and
out
js
or
imul
movsl
inc
cwtl
and
insb
xor
lret
addl
int
ret
sbb
pop
sbb
je
mov
mov
ret
stos
add
jle
mov
cltd
add
cmp
mov
adc
clc
jg
push
js
call
xchg
aam
stos
cld
fisttpll
lods
mov
je
add
loop
aam
mov
je
ret
js
inc
cmp
inc
mov
cli
in
add
movsl
in
push
cmp
ret
pop
clc
xchg
int
ret
mov
rcrl
mov
lock
out
pop
out
dec
inc
xchg
inc
mov
ret
bswap
sub
ds
inc
pop
xor
sti
test
inc
inc
ja
das
xor
mov
imul
pop
or
mov
js
lret
xlat
fcomps
and
shrb
shr
jns
jno
loopne
push
data16
pop
mov
push
stc
aam
push
jp,pn
push
push
xchg
or
test
adc
stos
jmp
popa
mov
xor
pop
dec
xchg
lock
aam
fmuls
cmp
lods
cmp
xchg
and
inc
jle
ljmp
mov
inc
or
sarb
jge
lret
mov
xor
xchg
cmp
sub
push
mov
dec
xor
jle
lock
push
stc
out
test
add
dec
movsl
outsl
cmp
mov
orb
cs
loopne
ficoms
mov
pop
jge
push
mov
mov
imul
dec
xor
or
fsts
ljmp
xlat
ret
pop
test
push
jmp
lods
sub
xor
sbb
out
xchg
adc
or
lret
inc
test
andl
mov
les
push
xor
inc
repz
or
loopne
mov
stc
inc
fsubrp
lret
je
inc
cmp
in
rcl
in
orb
popf
ljmp
jmp
cli
pop
pop
adc
inc
popa
jb
sbb
repnz
pop
gs
jbe
test
pushf
mov
sbb
xor
in
push
sbb
mov
pop
sahf
outsb
or
mov
addr16
push
lods
mov
inc
jne
imulb
lret
push
mov
jne
xchg
lock
test
ret
mov
ds
ret
xor
mov
xor
scas
xor
jge
lahf
test
andl
push
pop
inc
pop
sbb
call
addb
mov
cmp
dec
xchg
push
les
sub
loope
fdivr
sub
in
nop
mov
in
and
pop
add
adc
mov
lock
pop
sub
mov
lea
cld
pop
ljmp
xchg
cmp
jo
adc
leave
js
loop
and
addr16
movsb
push
lret
sbb
sub
jbe
lds
es
adc
ret
pop
loope
mov
adc
xchg
push
idivl
sub
shll
push
ss
dec
push
je
pop
test
inc
cmp
lret
mov
es
cmpsb
js
cmp
inc
push
aaa
jnp
smsw
and
xorl
adc
les
or
movsl
xchg
sub
rcr
fisttpll
addl
insb
add
mov
sub
sbb
pop
cs
push
aaa
leave
lods
adc
in
push
cmp
mov
jmp
icebp
mov
adc
sub
adc
pop
mov
jno
ret
shlb
push
sub
mov
mov
pusha
sbb
push
jbe
lea
aad
dec
and
gs
nop
adc
fdivl
pop
loope
mov
push
stc
in
jg
adc
adc
or
add
and
int
xchg
mov
jae
sub
cmp
inc
xor
leave
test
jecxz
test
loope
pop
shlb
movsb
daa
mov
push
inc
movsb
or
enter
lds
mov
pop
mov
cs
shll
or
inc
clc
inc
lods
std
pushf
xor
mov
mov
jg
je
adcb
jp
push
and
xor
cmp
in
cmp
mov
scas
pop
or
xchg
push
xor
push
into
js
lock
adc
xchg
fiadds
sub
daa
popa
xor
sbb
clc
jle
pop
icebp
and
sbbb
int
fs
mov
lcall
sub
les
jno
mov
dec
xor
mov
mov
push
addb
das
divb
iret
ds
int3
xchg
dec
std
ret
pop
rolb
dec
arpl
cmp
mov
insl
fildll
div
movb
movsl
call
jge
mov
inc
mov
add
jns
orl
aam
push
mov
adc
aaa
adc
mov
mov
stos
push
sbb
rclb
outsb
ret
mov
and
pop
icebp
testl
sbb
xchg
mov
cltd
add
cmp
inc
jo
popf
sbb
fadds
inc
push
std
xor
decl
sti
negb
mov
ret
aaa
adc
push
int
enter
push
sahf
pop
clc
add
leave
adc
ljmp
add
add
ffreep
mov
xchg
sbb
ss
inc
sub
das
or
fwait
lea
jmp
push
das
ja
cmpsl
add
adc
loop
fadds
jmp
in
ret
mov
fs
xor
ljmp
clc
fcoml
add
push
fisubl
jl
adc
ret
hlt
add
and
push
repz
fdivrl
dec
add
or
stos
jg
clc
xchg
lcall
daa
xor
mov
add
daa
ss
enter
lahf
inc
jp
je
mov
loope
cmpsl
and
js
inc
jge
cmp
std
aaa
pushf
je
scas
leave
hlt
das
xor
mov
or
xchg
and
add
scas
jp
clc
es
popa
jmp
arpl
pop
decl
dec
test
jle
xchg
ret
adc
sub
bound
xchg
adc
sub
rcrl
pop
mov
sub
pusha
mov
notb
and
fisubrs
js
push
xor
sub
push
cli
dec
jo
mov
sub
xchg
data16
mov
mov
jbe
hlt
bswap
clc
call
shr
imul
inc
mov
ficomps
push
cld
fists
es
mov
pop
iret
jb
and
fmuls
mov
adc
push
or
imul
push
cli
mulb
dec
adc
daa
out
iret
lods
jae
test
mov
movsl
mov
inc
xlat
mov
dec
adc
nop
pop
add
cld
xchg
cmp
pop
sub
inc
push
fnsave
mov
fcmovbe
xor
sbb
sbb
push
int3
jp
mov
loop
outsl
add
mov
push
push
push
cmpb
or
jne
dec
mov
jle
int3
or
push
jle
sub
loope
mov
stos
icebp
add
orl
rcll
sahf
loope
cwtl
icebp
lea
add
sahf
clc
arpl
mov
test
rcrb
dec
fcomps
mov
and
jb
cmp
push
push
movb
mov
mov
inc
mov
xchg
and
lahf
movsl
bndldx
leave
push
push
cwtl
in
push
pop
push
loope
shl
addl
sub
in
ss
lret
fimuls
mov
enter
je
lods
sbb
add
out
sahf
ss
pop
iret
les
pop
xlat
lret
jp
sbb
cli
dec
dec
cmp
push
lds
loopne
and
mov
loopne
mov
ss
xor
add
pminsw
sub
pushf
loop
test
clc
cmpsb
incl
pusha
cmp
xchg
aam
aaa
and
mov
mov
mov
mov
cltd
or
mov
pop
or
cmp
inc
je
ljmp
pop
sub
mov
pusha
add
dec
clc
je
into
inc
mov
mov
test
orb
test
pop
dec
aad
call
and
fmuls
imul
ljmp
xchg
mov
in
push
clc
in
rorb
repnz
lods
add
mov
movsb
xchg
fsubr
pop
mov
ret
sbb
ds
push
pop
orl
dec
dec
lock
xor
rorl
je
dec
dec
push
push
jge
xchg
fidivl
adc
outsb
addr16
in
mov
and
aaa
popa
mov
bound
mov
mov
xlat
dec
xor
mov
fcmovnu
out
call
xchg
cmpl
es
xor
outsb
jl
add
stc
mov
pop
mov
sbb
jne
cmpb
rorb
aad
cmp
inc
dec
hlt
and
mov
mov
jmp
jl
pop
mov
vcvtss2sd
add
xchg
push
inc
mov
push
icebp
test
adc
aam
in
dec
loope
mov
pop
jb
cmc
inc
xchg
cmpsb
inc
add
mov
stos
test
loope
or
adc
pop
shrl
movsb
aaa
call
push
mov
and
fists
cld
or
gs
lock
imul
pop
push
xchg
test
xchg
cltd
sbb
gs
mov
test
sbbb
xchg
jp
and
and
cs
cmpsb
add
pop
xchg
adcb
lock
rolb
decl
push
stc
loop
inc
subb
jmp
mov
daa
clc
add
sbb
xchg
mov
inc
pop
mov
sbb
je
adc
mov
xchg
inc
push
xchg
jo
loopne
ss
aad
xor
dec
in
ds
jnp
inc
out
add
test
repz
ds
mov
cmp
add
stos
and
call
jecxz
adc
lock
push
test
insb
movlps
mov
fs
adc
add
aaa
cmp
icebp
call
data16
fmuls
cmp
dec
ret
into
xchg
push
pop
sbb
nop
adc
inc
adcb
lods
inc
push
pop
push
test
leave
and
stos
xchg
pop
es
icebp
aas
and
cmp
lcall
sub
push
lds
adc
movsl
loope
outsb
cltd
shrb
pop
push
hlt
pushf
cld
push
mov
test
jle
lds
lcall
inc
out
es
push
push
pop
aas
std
ljmp
outsl
jne
dec
ret
or
push
sti
jl
fs
sbb
and
push
les
enter
aam
xor
es
mov
xchg
outsb
movsl
fisttpl
insb
cmp
and
rcrb
push
jecxz
mov
pop
clc
ret
imul
or
movsb
loopne
loopne
xor
mov
loopne
mov
cli
rclb
dec
push
ret
xchg
test
scas
xor
add
pop
adc
cmp
test
fisubrl
incl
dec
pop
lcall
fcmovbe
push
adc
lea
inc
inc
sbb
sub
cld
dec
pop
clc
fnstsw
mov
inc
int3
mov
mov
nop
call
lcall
sbb
stos
adc
popa
cli
cltd
hlt
add
dec
cmp
rolb
fimull
loope
mov
addr16
mov
xchg
out
loopne
or
or
sbb
lea
sub
adc
rol
test
test
andb
xor
stos
fwait
inc
xchg
push
call
add
ds
ss
dec
sbb
push
iret
stos
jl
ret
jge
and
rcrb
loopne
lock
cli
jo
jo
cmpsb
pop
call
fldt
sbb
xor
cmp
int
push
insl
ja
xor
pushl
pop
mov
jo
pop
cltd
pusha
pop
jns
mov
and
fmuls
in
inc
arpl
xchg
or
stos
fwait
xchg
ret
mov
mov
push
pop
cmp
and
adc
adc
mov
mov
sbb
stos
and
adc
rcrl
andl
daa
jo
inc
cmp
sahf
roll
out
mov
pushf
cs
cmp
add
dec
lock
ja
stos
dec
adc
and
scas
mov
mov
xchg
cmc
test
lea
pop
int3
hlt
out
inc
lret
jnp
add
lods
rcll
repnz
add
mov
or
xchg
jb
add
insb
adc
iret
and
das
sti
inc
mov
dec
popf
add
add
bound
pop
dec
loopne
ret
nop
jl
lock
add
or
sub
adc
loope
push
inc
or
adcl
pop
dec
arpl
push
sub
push
add
cmp
sub
and
icebp
ret
notb
inc
jecxz
js
pop
xor
add
js
lea
hlt
aas
incb
lret
add
aaa
inc
or
jb
xchg
xor
cld
into
adc
push
mov
xor
jnp
loopne
push
cli
lock
pop
cs
xadd
bound
ljmp
ds
add
push
mov
sbb
mov
out
fdivs
mov
mov
sbb
and
es
inc
and
adc
test
xchg
outsl
fisttps
sti
xchg
ss
adc
int3
dec
or
sub
test
pop
in
lahf
fmull
jns
mov
and
cltd
mov
push
xor
xchg
cmp
push
jge
or
cwtl
int3
and
popa
dec
and
cwtl
jns
out
sarl
add
es
shl
xchg
jo
lcall
adc
cmp
cs
xchg
cmp
rorb
mov
test
jae
pushf
int
pushf
dec
in
clc
xor
pop
clc
addb
icebp
mov
and
clc
rorl
ds
inc
push
lods
mov
xor
pop
scas
and
or
sbb
or
xor
stc
inc
fwait
movsb
cmpsb
fisttpl
jg
arpl
push
cmc
jns
dec
cli
fs
iret
sub
les
fists
loop
and
fimull
subl
ret
push
outsl
test
mov
mov
jo
mov
lahf
lock
and
cmc
fisubs
mov
adc
in
fcmovnb
sub
push
mov
rclb
mov
cmpsb
adc
xor
cmc
dec
cmp
push
cmp
int
das
pop
dec
jg
xchg
mov
push
jmp
cmp
and
jl
loope
sbb
cwtl
xor
or
mov
mov
addl
or
xchg
sbb
jnp
std
sub
and
pop
xor
add
jmp
mov
cld
nop
lods
or
or
es
out
jae
aas
test
add
push
cs
test
notb
mov
sbb
or
and
aaa
loopne
cmpsl
push
mov
xchg
stos
jl
xor
cld
lcall
sbb
int
std
sbb
dec
loope
dec
jl
dec
sbb
rcrb
jmp
sbb
mov
jg
jmp
loop
mov
test
ss
push
ja
push
mov
nop
or
add
inc
jmp
enter
icebp
push
outsl
or
int3
xchg
cmp
dec
push
mov
add
or
insl
fsubs
jmp
popa
push
mov
les
inc
bound
shlb
and
cwtl
xor
test
fcmovbe
jl
xchg
int
sbb
sub
ljmp
imul
js
clc
xchg
nop
out
sub
cli
addb
mov
dec
or
rol
pushf
out
adc
aaa
push
ret
fbstp
xchg
push
mov
mov
mov
sub
loop
jne
loopne
adc
ja
hlt
lcall
jmp
iret
add
movsb
mov
nop
lods
push
xchg
jle
shrb
out
ret
pop
aas
sbb
dec
lret
dec
pop
js
loopne
push
pop
cmp
aaa
mov
push
sbb
xor
test
mov
dec
sub
bndstx
mov
inc
ror
mov
outsl
lcall
in
fsub
and
jmp
or
xchg
sbb
and
add
xchg
cwtl
pop
and
arpl
pop
mov
push
fsubrl
push
in
pop
or
or
cmp
mov
dec
nop
xor
es
cmpsb
pusha
add
aad
jnp
data16
dec
adc
mov
aam
cmc
sub
push
push
inc
push
adc
leave
or
mov
les
or
int3
jecxz
adc
ss
shrl
or
lods
scas
dec
pop
inc
pushl
inc
lods
mov
adc
inc
loope
ret
or
add
ljmp
sbb
lahf
cmpsb
inc
push
add
fiadds
sub
inc
sbb
sti
jo
mov
lret
mov
bound
scas
or
mov
push
ds
cmp
cli
cmp
cmpsl
fcomps
pushf
inc
scas
add
mov
cmp
pop
jb
pop
push
inc
lea
fwait
adc
inc
loope
test
dec
lock
fbstp
pop
cmp
stos
cmp
adc
mov
loope
adc
and
mov
pop
sub
mov
push
mov
add
cltd
adc
cmp
pop
popf
or
test
movsb
lds
test
mov
imul
sub
mov
test
aad
popa
xor
sub
jmp
popa
mov
add
xor
ret
aam
stos
jle
out
xchg
prefetcht0
imul
xlat
push
adc
ja
add
clc
sbb
mov
and
cmp
dec
push
int3
mov
insb
jl
inc
adc
add
pop
aam
rcrl
sbb
sub
les
rorb
pop
xchg
xor
test
pushf
je
repz
jg
sbb
and
enter
divl
jbe
cmp
and
fiadds
and
in
push
sbbb
sbb
pop
mov
xchg
sbb
fistpl
or
movsl
inc
dec
out
push
arpl
not
pop
cltd
fcoms
and
icebp
add
push
sbb
dec
fldcw
or
adc
adc
or
or
xchg
pop
rolb
or
sbb
xchg
sub
mov
adc
mov
cmp
mov
adc
ficoms
and
sbb
lds
jge
inc
das
in
pop
scas
sti
imul
xchg
push
xor
sbb
adc
imul
loop
dec
and
mov
cmp
or
inc
cmp
or
pop
vprotd
daa
leave
lcall
lret
add
fwait
insl
pushf
outsl
pop
loopne
nop
aad
cmp
cmp
ret
cli
sahf
jb
pop
add
push
out
add
add
xchg
sbbl
sbb
clc
std
and
push
daa
xchg
ret
jmp
je
scas
lahf
lahf
mov
xchg
fstpl
cmp
mov
jecxz
aaa
add
lcall
mov
mov
or
adc
repnz
push
cli
xor
adc
push
lea
fidivrs
inc
cld
pushf
test
lea
lods
push
jl
sub
xchg
icebp
ficompl
sarb
xchg
dec
push
push
xchg
cmpsl
insl
or
xor
adc
outsw
fnstcw
or
cmpl
xor
adc
je
imul
xlat
mov
jo
ss
mov
mov
jbe
es
xor
push
js
bound
int3
xchg
in
adcb
mov
add
xchg
mov
cmp
cld
aam
call
pop
adc
dec
mov
leave
insb
aas
xchg
das
sbb
mov
call
pop
js
outsb
ret
cmp
testl
and
jbe
xchg
dec
xchg
xchg
cmp
adc
shl
mov
or
push
out
sub
add
push
xchg
xchg
or
xor
adc
loope
jae
inc
div
popa
pop
in
leave
lcall
jp
daa
std
add
push
sub
push
ficompl
xor
sub
or
inc
mov
xor
xchg
in
mov
insb
pop
or
mov
mov
test
push
rolb
icebp
sub
push
mov
xchg
shll
ffree
testl
xchg
sub
pushf
sahf
jle
movsb
addb
sub
aam
cmp
setp
push
and
lcall
fsubs
mov
test
xor
test
inc
loopne
add
test
sbb
cmp
push
jbe
xchg
mov
pushf
adc
andb
scas
into
or
sbb
scas
iret
jl
shrl
push
jnp
mov
inc
mov
sub
xchg
out
jmp
push
pusha
add
cli
mov
sub
push
or
mov
aas
mov
sbb
adc
sbb
or
jecxz
pop
es
outsl
imul
adc
test
xor
xchg
jp
stc
xchg
es
icebp
and
orb
addl
cmp
dec
sbb
and
push
mov
mov
pop
dec
int3
inc
cwtl
loop
dec
nop
aaa
cmc
scas
clc
ljmp
push
daa
add
and
sbb
lock
push
pop
mov
repz
cmc
dec
lret
nop
fwait
push
daa
inc
pusha
stc
pop
in
add
ja
iret
push
xor
sub
pop
cwtl
inc
arpl
push
out
mov
lahf
mov
dec
ss
and
cli
or
pop
and
mov
das
jp
jo
bound
je
or
lret
sbb
insb
clc
imul
adc
in
imul
outsl
mov
fmull
add
cmp
cmp
jmp
addl
jmp
ljmp
adc
aaa
pop
cmp
jno
jb
inc
xchg
pop
mov
xchg
inc
and
or
sarb
test
push
aad
mov
clc
pop
mov
push
push
jo
ss
xchg
sub
js
push
std
test
movsl
jp
add
inc
lea
or
ss
inc
stos
mov
mov
jo
pop
mov
scas
inc
popw
rcrb
push
and
clc
add
or
mov
aam
out
xchg
jge
popa
fists
lods
adc
mov
out
pop
clc
lock
jns
or
inc
mov
and
cmp
push
sbb
mov
or
jmp
mov
hlt
mov
pushf
add
and
add
adc
sub
adc
sbb
fs
in
pusha
jbe
loopne,pn
out
dec
jp
sbb
jle
lret
es
imul
mov
std
mov
sti
inc
xchg
sbb
pop
cld
cs
or
sbbb
mov
test
jmp
subb
gs
dec
inc
jle
cli
inc
pop
lods
enter
sti
imul
and
jno
push
add
loop
mov
std
adc
cmp
push
adc
push
out
and
rolb
lret
loopne
shrl
jge
movsl
sub
jmp
add
xchg
notb
lcall
popf
rol
sysenter
arpl
ret
mov
popa
gs
cmp
clc
xor
scas
mov
rorb
bound
hlt
dec
mov
mov
adc
sbb
dec
mov
dec
fsubp
loope
dec
push
mov
cmp
shlb
adc
loop
pop
adcb
sar
or
xchg
inc
push
cs
or
xchg
push
mov
or
lods
pop
cmp
inc
call
lock
insb
push
mov
scas
adc
pop
cmp
xchg
push
xchg
gs
stc
leave
push
lcall
add
or
xor
mov
adc
dec
and
test
xorb
bnd
lock
mov
mov
and
test
xchg
mov
icebp
mov
dec
push
pop
inc
cmp
dec
lea
push
or
shrb
mov
adc
outsb
pop
push
jne
pop
stos
xor
outsl
mov
sbb
adcl
ret
test
pop
loopne
test
jmp
push
faddl
sbb
gs
das
imul
inc
or
stos
divb
inc
lods
push
jp
fwait
push
enter
cmp
xor
xor
push
in
sbbb
xor
sub
adc
push
loop
sub
popa
lahf
in
sbb
inc
xchg
aam
das
jno
data16
pop
cmp
test
xchg
test
fs
xchg
and
add
popa
lods
in
jle
mov
jle
shrb
ja
jge
push
pushf
sbb
cmpsb
inc
jle
add
mov
fwait
subb
or
mov
sbb
pop
loopne
pusha
inc
jle
leave
ja
lret
jno
insl
mov
subb
add
inc
fsub
adc
int3
add
jle
lods
pop
repz
lock
pop
push
sbbl
enter
aad
int3
pop
sub
pop
cmc
scas
and
xlat
dec
mov
jmp
push
xorb
fists
out
cs
or
imul
pop
int
mov
push
lcall
inc
inc
lock
sub
lock
cli
mov
cmp
push
and
cmp
aas
jnp
add
leave
lea
aad
mov
add
jmp
mov
inc
jne
lods
addl
cmp
cmp
lock
or
iret
es
aas
push
mov
outsb
add
daa
aad
inc
fwait
dec
xchg
call
rcl
mov
je
sbb
inc
pop
jge
push
adc
cmpsb
jecxz
pop
je
cmp
mov
in
xchg
and
or
inc
rclb
imul
jmp
sub
fisubrs
cld
insb
mov
cmp
push
mov
sbb
xchg
add
cmc
push
sub
jmp
mov
mov
add
cli
andl
pop
rolb
adcl
and
inc
lcall
dec
add
insb
fwait
ds
mov
adc
ret
mov
mov
sub
clc
push
shll
dec
push
lahf
push
pop
sub
cld
push
aam
add
or
nop
loop
pop
or
flds
sbb
pop
enter
sbb
dec
cmpsl
cmp
lcall
into
push
std
icebp
dec
test
call
stos
fcoml
call
pop
js
ret
cmp
scas
mov
jbe
repnz
out
js
xchg
mov
sbb
int3
mov
push
adc
pop
aam
mov
cmp
add
mov
lcall
rol
in
mov
rolb
scas
call
scas
xor
pop
pop
out
loop
push
or
arpl
push
clc
add
fsubr
mov
xchg
hlt
faddp
mov
cmp
test
sahf
and
repz
cmc
dec
push
jecxz
inc
push
lcall
sub
lret
addb
shl
test
xchg
adc
and
ret
add
or
push
mov
sub
cmpsb
sahf
mov
stos
adc
mov
pop
jmp
push
fs
test
leave
push
and
pop
js
daa
lock
xor
dec
ja
sub
jl
pop
dec
inc
aaa
inc
imul
adc
jle
lds
inc
jns
not
sub
lcall
sti
adc
movsl
ret
nop
ljmp
inc
mov
add
jp
insb
ljmp
xchg
dec
movsb
je
rolb
push
sbb
mov
and
push
sub
sub
xor
scas
rcl
xlat
inc
div
push
xlat
sbb
outsb
pop
insb
mov
or
mov
sbb
xchg
insb
or
in
test
mov
push
pushf
xchg
mov
out
mov
push
jnp
mov
loopne
mov
movsb
sbb
inc
subl
loope
or
xor
setle
ja
jl
push
lcall
nop
call
mov
cmp
pop
and
lcall
lahf
mov
sahf
xor
aas
mov
mov
hlt
dec
pop
push
ljmp
xor
jnp
movsl
dec
push
sbb
out
push
mov
inc
push
pop
les
add
dec
loopne
aam
sbb
pop
ss
ja
test
inc
bound
mov
adc
cmpsb
mov
xchg
movsb
jnp
and
cmp
add
test
shl
out
test
rorl
sub
mov
subl
sbb
jae
lock
loopne
dec
cmovl
lds
lea
insl
rcl
adc
loope
jle
cwtl
push
ficomps
xchg
dec
in
mov
fsubr
das
inc
ljmp
xchg
lcall
xchg
stos
add
pop
jge
in
mov
add
inc
cltd
and
xor
jmp
lcall
pop
in
ror
cli
add
outsb
fidivs
dec
sub
mov
out
push
adc
jo
dec
xor
cli
dec
dec
dec
mov
loope
out
outsl
loopne
push
pop
add
mov
cmp
cmp
jb
clc
inc
rcrl
in
xor
add
mov
jge
imull
aas
sub
das
lods
subb
hlt
sbbl
pop
mov
push
mov
xchg
mov
out
jnp
jne
lods
mov
xor
mov
in
rcrb
stc
xor
mov
add
fsubs
cmp
add
push
lahf
cmp
adc
cmpsl
sub
addr16
es
mov
mov
pop
xchg
lahf
push
push
xor
insl
lods
jecxz
lahf
fcompl
push
adc
xchg
imul
aad
sub
shl
mov
imul
and
jbe
cwtl
movsb
das
lcall
jmp
or
ret
and
or
or
movsb
inc
clc
movl
imul
cmpsb
mov
lret
and
lods
pop
push
popa
inc
xchg
xor
dec
dec
shrl
add
add
cs
into
xor
push
mov
push
rorb
sbb
cmp
pop
mov
into
hlt
les
aaa
je
scas
icebp
add
xchg
xchg
enter
rclb
add
leave
cmp
mov
jne
xchg
xchg
add
test
mov
inc
sbb
and
and
add
push
sahf
xchg
inc
push
mov
sbb
ret
lahf
mov
iret
movsb
addb
or
pop
inc
and
mov
sar
adc
out
cmp
sub
mov
pop
push
sti
movsl
xchg
test
lods
add
sub
test
aas
cmp
data16
lahf
sub
push
mov
and
pop
call
inc
jecxz
jle
cs
sahf
popa
scas
pop
jge
lds
stc
into
cli
gs
rolb
in
subb
test
hlt
xchg
jnp
sub
mov
pop
adc
ljmp
jecxz
push
pop
mov
testb
std
pop
sbb
sub
mov
jg
xchg
xor
in
adc
movsl
fnstenv
popw
mov
xchg
jnp
repz
pop
dec
test
sub
xor
bound
xchg
cmp
lock
push
popf
mov
js
jp
inc
lahf
adc
test
inc
add
jl
pop
sbb
pop
dec
hlt
push
iret
fs
loopne
enter
jle
add
add
sbb
lods
cmp
push
insl
cmp
fcoms
loope
aaa
adc
jnp
lock
jge
xor
jmp
aad
push
pop
fdivrl
ficoms
mov
or
add
insb
adc
mov
das
shlb
inc
jp
int
push
push
lock
mov
xchg
push
xor
and
xor
xchg
pop
fcomps
sub
lret
mov
jg
add
fldcw
push
ljmp
add
pusha
rorl
cmc
pop
push
push
xchg
jno
xchg
add
shrb
scas
dec
jnp
sub
add
sahf
dec
in
leave
cmp
dec
mov
sub
xor
push
mov
xchg
or
mov
push
jno
sub
mov
das
mov
sbb
stc
push
icebp
into
mov
pop
mov
fwait
jl
ss
sbbl
in
cli
icebp
push
xchg
mov
call
lds
mov
cmp
sbbl
sbb
sub
lret
pop
sbb
mov
add
add
pop
mov
daa
dec
iret
mov
test
popf
dec
adc
shrl
stos
fstpt
loopne
or
lods
or
cmp
mov
insb
test
xchg
sbb
outsl
scas
les
inc
enter
mov
mov
in
sub
loope
dec
in
sti
dec
mov
scas
addr16
xor
xchg
cmp
and
mov
mov
mov
icebp
cmpsb
jo
das
mov
push
adc
pop
inc
xchg
mov
jmp
lods
dec
aam
inc
inc
xlat
sub
sbb
fldcw
mov
pop
cmpsb
pop
imul
or
imul
add
mov
jbe
pop
outsb
xchg
add
int3
adc
rcl
fildll
lds
adc
aad
and
pop
or
xorl
ljmp
shr
add
dec
test
roll
leave
nop
pop
lea
or
je
inc
jg
jle
xchg
lock
add
rolb
add
jp
scas
sbbl
sbb
cmp
add
mov
fdivrl
das
pop
xchg
addr16
test
or
xchg
movsl
pop
pop
call
xlat
sti
pop
mov
dec
stc
jp
sbb
cmp
fidivrl
jns
test
ss
mov
nop
cmc
test
scas
shll
cmp
add
test
jmp
pop
in
icebp
fdivrl
jg
add
add
mov
sbb
repnz
out
jno
test
lds
add
cmp
mov
scas
jo
cmp
inc
mov
in
jp
dec
push
rcrb
pop
inc
push
in
adc
subb
loope
pop
jmp
mov
jp
add
imul
xchg
xchg
mov
cs
subb
adc
pop
jmp
insl
jne
test
ret
add
pop
push
jle
mov
add
mov
add
hlt
add
mov
mov
mov
int
cli
andl
xor
divl
addb
push
push
xchg
xchg
popa
mov
sbb
cmc
push
adc
jne
adc
hlt
loope
sub
decb
fisubl
lahf
das
daa
loope
mov
repnz
ja
out
sub
sbbb
sbb
rcl
mulb
lea
mov
sbb
aaa
popl
push
daa
jns
movb
fwait
add
roll
jo
or
mov
push
repnz
or
mov
mov
je
push
pop
aad
lret
lea
je
mov
pop
lock
loop
sub
push
outsb
aam
and
es
rcrb
test
sub
cwtl
repnz
cmpl
xchg
ret
inc
lret
cmp
call
xchg
rorl
cmpsl
sti
or
push
or
sub
mov
inc
mov
mov
shlb
pop
push
mov
ror
sbb
movsb
xchg
xchg
cs
push
xchg
adc
push
or
fs
dec
lea
test
jge
jmp
xchg
repnz
jle
outsl
jecxz
fwait
out
inc
clc
push
adc
pop
mov
popa
nop
fs
mov
jb
movsb
sub
mov
pop
sbb
xor
into
stos
cltd
jmp
or
sbb
icebp
sub
aaa
sarb
inc
or
adc
pop
push
aad
push
out
movsl
sub
adc
out
lock
jecxz
idivb
xor
ret
imull
jae
sbb
test
inc
lcall
jg
push
inc
pop
fldl
cmp
repz
xchg
adc
inc
sbb
mov
cmp
adc
add
jle
mov
sub
dec
xchg
pop
pop
mov
aad
ds
pusha
aam
adc
or
lods
mov
mov
dec
xchg
fsubrl
ret
pushf
add
xchg
mov
add
sub
popf
sub
and
inc
inc
mov
adc
decb
bound
xchg
inc
mov
dec
cmpsb
xchg
sbb
xorb
mov
push
pop
dec
push
in
loope
sbb
jmp
xchg
je
mov
add
xor
mov
arpl
add
jne
lods
mov
inc
dec
fwait
jle
jg
mov
xor
push
loopne
scas
arpl
enter
mov
sarb
das
pop
inc
mov
jmp
sub
dec
fcompl
ret
inc
fisttpl
jecxz
push
cmpsl
scas
in
loope
ss
sub
mov
aam
jb
push
mov
scas
into
std
pop
aas
clc
pop
sub
and
sti
add
ljmp
inc
sbbl
or
xchg
mov
pmulhuw
xor
fcoml
mov
mov
ret
cmp
stos
aad
push
mov
movsb
arpl
idivb
add
pop
test
aaa
pop
aas
stos
xchg
cmpsl
in
dec
mov
jle
popa
and
and
popf
stc
cs
bound
mov
mov
loope,pt
pop
stos
xchg
sahf
adc
ds
ss
nop/reserved
push
and
mov
dec
js
into
and
push
ljmp
insl
xor
shrb
xor
int
xchg
xchg
pop
and
push
add
mov
mov
movsb
cmpsb
int3
enter
cmp
fisttps
mov
jmp
sbbl
fcoms
lods
aad
or
aas
notl
lea
dec
lods
push
rcrl
fwait
repz
sbb
aad
inc
adc
ret
jno
scas
push
mov
and
scas
loopne
xor
push
adc
or
adc
pusha
push
add
outsb
mov
xchg
mov
inc
xlat
es
mov
push
jl
pop
pop
push
mov
pop
jo
bound
add
frstor
push
bound
je
icebp
mov
jno
inc
cmp
js
adc
andl
sahf
js
ss
pop
jg
ds
es
pop
cmp
js
push
add
test
bound
push
icebp
clc
pop
cmc
push
test
mov
xor
dec
fnstenv
fsubrl
mov
adc
aaa
dec
movsb
int3
nop
pop
mov
iret
jo
add
jno
sub
std
test
imul
sub
push
lock
testb
loop
mov
mov
in
nop
dec
push
mov
fsubp
cs
addr16
adc
mov
gs
cmp
xchg
orb
jmp
cwtl
imulb
mov
lret
jb
sub
xchg
enter
mov
orl
mov
jno
shlb
jp
sahf
aaa
idiv
cmp
movsl
lahf
aam
push
ljmp
ret
or
cmp
mov
adc
push
mov
jecxz
or
outsb
je
mov
mov
clc
icebp
pop
inc
dec
or
mov
add
mov
and
jge
cltd
shll
or
int3
fsubp
inc
in
aam
lret
sahf
pop
push
push
ljmp
icebp
cmpb
pop
lahf
and
xchg
xchg
inc
mov
jle
xor
push
movsb
subb
shll
sbb
mov
push
imul
sub
inc
push
mov
and
or
lret
pop
fisubrl
int
lods
push
movsb
out
mov
lahf
jmp
inc
cwtl
dec
sarb
jmp
sbbl
in
push
in
xchg
loope
lea
adc
addr16
je
clc
cmpsl
hlt
shrl
inc
fcmovnbe
push
xlat
test
dec
inc
xchg
jno
push
pop
rcll
push
pop
pop
cli
sub
mov
sub
push
mov
push
mov
fisubrl
push
sbb
push
sub
lahf
jmp
out
mov
daa
dec
out
sub
sub
push
mov
push
imul
push
sbb
mov
ret
nop
add
enter
lret
pop
mov
jp
mov
jl
outsb
das
xor
mov
shrl
scas
test
pop
fisttpll
stos
icebp
imul
insl
push
xchg
mov
inc
mov
mov
lods
in
mov
idivw
xor
outsl
inc
mov
jl
sub
inc
adc
mov
test
sub
pop
out
lds
movsl
mov
inc
scas
xlat
fsubr
mov
cmp
pusha
pop
dec
inc
mov
das
sbb
push
lret
mov
dec
mov
inc
das
push
addr16
push
addb
fsubrl
xchg
sbb
xchg
push
cli
roll
lods
scas
pmullw
push
icebp
dec
sub
xchg
je
jp
lods
xchg
mov
push
mov
pop
jg
cli
loop
add
sbb
dec
add
or
cltd
cmp
and
pusha
push
mov
mov
adcb
mov
pop
mov
adc
je
push
and
push
mov
rolb
inc
fxch
sub
pop
or
xor
lret
popa
bound
jmp
xchg
bound
pop
lea
or
sub
test
leave
bnd
push
dec
mov
xor
pop
and
sub
jp
shll
loope
jbe
aaa
fcmovu
jl
pop
cmp
lock
pop
cmpsl
ljmp
xchg
js
clc
add
lret
lret
rcrb
outsb
rolb
or
push
xor
dec
clc
shrb
scas
pop
fldl
lret
lock
pop
iret
incb
dec
mov
xchg
sahf
cltd
mov
fcoml
push
jmp
dec
mov
or
add
sub
pushf
clc
push
mov
jmp
push
lcall
jns
lea
mov
das
pop
mov
cmp
inc
mov
aas
xchg
and
fadds
mov
in
cltd
insb
mov
mov
inc
inc
jns
add
rol
adc
xor
lods
mov
cmp
in
and
test
sub
add
cmp
ljmp
insl
sub
mov
out
out
or
xor
incb
or
or
add
adc
xor
xchg
pop
loope
inc
mov
cmp
add
rsqrtps
jge
rorl
loop
out
ret
in
xor
sbb
es
popa
xchg
sbbb
clc
pop
lret
les
push
jmp
jge
test
cs
pop
push
or
sub
inc
mov
push
jo
xor
mov
push
mov
jne
lock
pop
mov
cmc
movsb
mov
cld
push
add
js
call
mov
lock
mov
sub
test
pusha
inc
mov
xor
xlat
lahf
push
clc
inc
adc
push
mov
jbe
mov
aam
lock
mov
cltd
enter
mov
cmp
mov
cltd
sbb
or
push
ds
outsl
aaa
jne
mov
xchg
sbbl
sbbb
jmp
and
mov
push
sbbl
and
scas
das
cs
add
test
cmp
ljmp
out
out
divl
pop
ficoml
xchg
xchg
push
inc
rclb
inc
dec
int
inc
pop
cld
cmp
sbb
cmp
test
mov
lods
sbb
push
insb
jg
movsl
lcall
addb
add
test
pusha
pop
jnp
push
aam
es
mov
xor
data16
stos
sub
std
dec
je
adc
mov
incl
mov
hlt
mov
sub
aaa
lcall
dec
inc
sub
mov
sub
fwait
mov
pop
lahf
adc
mov
cld
push
xor
xchg
add
pop
sbb
imul
push
int
push
sub
daa
jl
cmp
jbe
and
and
mov
push
js
ss
push
movsb
ror
clc
pop
cwtl
push
sti
mov
ficoml
lock
xchg
test
enter
mov
loopne
test
decl
sbb
xchg
lock
cli
sbb
adc
jmp
imulb
sub
test
jge
fisttps
pop
dec
cld
add
lret
sbb
mov
jmp
jg
out
xor
movsl
push
sarl
xchg
adc
ficoms
xchg
xor
repnz
mov
sbb
mov
mov
mov
je
or
insb
jbe
add
rcr
push
mov
mov
dec
push
cld
pop
scas
lock
aam
adcl
xchg
jno
shlb
shll
xchg
inc
scas
push
jae
cmp
sub
les
pop
or
aas
inc
rcrb
add
xor
and
or
jb
inc
and
bound
sahf
pusha
sbb
or
daa
mov
push
loopne
pop
xor
push
icebp
sbbb
or
insb
je
add
and
cmp
enter
mov
mov
fisubl
call
sbb
xor
jno
sbb
mov
loopne
dec
mov
sub
in
jl
dec
int
cli
inc
je
jnp
sbb
xor
repz
pop
inc
adc
jmp
arpl
jo
sub
std
push
fdivl
mov
inc
mov
dec
jae
push
les
iret
pop
adc
andl
adc
fsubr
xchg
xor
dec
push
dec
cmpsb
jae
loope
pop
mov
scas
aas
dec
mov
jbe
out
and
in
aam
mov
add
xor
aaa
pushf
mov
andl
test
sbb
push
cmp
pop
pop
loop
imul
test
mov
rorb
subb
mov
mov
lock
fs
and
inc
push
addr16
xor
or
in
xor
rcrb
testl
push
aam
push
mov
dec
pop
and
ds
pop
jl
rcr
arpl
std
dec
mov
jg
mov
sbb
jno
push
xor
sarb
loopne
mov
xor
daa
pop
cmp
lgs
sub
xor
xor
cmpsl
inc
adc
jo
jp
and
dec
or
fwait
jmp
sbb
mov
push
push
cmp
scas
add
imul
addr16
cli
mov
mov
dec
movsb
mov
repz
sub
pop
sub
jecxz
jae
out
add
push
int3
pop
es
aas
scas
popa
movsb
movsb
mov
add
adc
push
mov
and
js
test
or
mov
ss
adc
adc
xlat
add
ret
outsb
cmpsl
inc
jmp
out
gs
pop
movsb
add
jo
push
sbb
bts
xor
pop
jnp
out
and
cltd
jbe
sbb
pop
int
loop
popa
sbb
insb
mov
mov
pushf
int
clc
mov
and
mov
movsl
fisttps
andl
xchg
mov
and
push
sub
je
ret
js
aam
jno
stc
cld
xchg
outsl
test
mov
inc
cld
ljmp
cs
pop
sahf
pushf
mov
pop
inc
outsl
cmp
inc
sbbl
push
addb
and
fcmovu
jbe
mov
insb
fs
or
idivb
shr
xchg
pop
into
xchg
stos
pushf
inc
scas
pushf
jns
jmp
mov
lods
movl
addl
or
push
xchg
sbb
mov
test
movsl
js
repnz
adc
mov
pushf
bound
insl
cmp
call
mov
or
inc
inc
adcl
test
cmp
jmp
or
or
push
mov
cli
mov
jecxz
fldl
sahf
xor
dec
loop
imul
dec
in
fcmovb
mov
lock
mov
sbb
hlt
je
pop
clc
pop
decl
cmp
lcall
jbe
push
ret
jecxz
outsb
movsb
adc
imul
pop
fsubl
aad
jnp
imul
push
outsl
scas
xor
push
loop
jl
movsb
xchg
pop
stos
xor
call
add
jp
sbb
popa
scas
add
cmp
fldenv
mov
arpl
jecxz
enter
lret
flds
aas
or
inc
sarl
inc
dec
adc
in
mov
std
in
xchg
mov
mov
mov
add
and
ret
and
xchg
jl
pusha
orb
int3
mov
sbb
xchg
xor
out
repnz
xor
jbe
mov
js
sahf
sub
jecxz
xchg
mov
js
shr
cmc
dec
cmc
xchg
je
jbe
inc
cli
inc
cld
and
repnz
and
mov
cmpsb
das
or
pop
imul
icebp
scas
dec
mov
mov
xchg
mov
cmc
inc
xor
gs
frstor
sahf
mov
add
push
add
jle
xchg
sbb
sub
lea
mov
dec
add
or
xor
aad
lret
mov
fdivrl
mov
and
jnp
jl
in
sbb
mov
aad
enter
clc
jecxz
repnz
fcoms
sub
in
loopne
push
call
fcoms
and
and
sbb
dec
aam
mov
xchg
xchg
and
leave
xor
negb
fbld
mov
lret
cmp
push
pop
lds
jge
fwait
xor
stos
and
or
ja
insb
xchg
rcll
sub
push
pushf
xor
test
mov
pop
jl
dec
xchg
mov
mov
mov
mov
inc
or
pop
aas
shr
push
fcoml
lahf
dec
ret
enter
mov
jo
add
ja
pop
jle
mov
inc
popf
mov
rorb
into
mov
lcall
mov
dec
adc
clc
cmc
mov
pop
jns
enter
mov
fimull
xlat
xor
dec
cli
cmp
cs
mov
mov
pop
fildl
aad
out
out
mov
push
insl
ret
xor
movsb
mov
test
sbb
jge
jno
dec
fdivs
adc
sub
lret
add
int
movsb
xorl
add
push
cmp
inc
ljmp
lock
movsl
or
cs
xchg
mov
cmp
push
leave
ret
push
fwait
add
push
cmp
adc
push
jge
xor
fsubl
xor
pop
lret
cmp
push
pusha
jbe
xchg
sub
lds
bound
sbbb
and
jl
insb
lahf
cmp
lea
fsubs
ss
stos
push
sub
out
bound
iret
loopne
out
pop
sbbl
aas
sub
add
mov
sarb
daa
mov
pop
xchg
sbb
mov
call
sub
into
push
clc
mov
jl
call
addr16
popa
sub
sub
shl
or
pop
cmp
pusha
jae
mov
add
test
sbb
sbb
inc
mov
xorl
cs
std
pop
sbb
adc
fisubs
jnp
mov
xor
jl
xchg
sarb
sbb
or
mov
push
fcmovnb
iret
clc
mov
mov
adc
lret
lock
loopne
jg
incb
sbb
mov
sbb
imul
in
cld
xor
add
mov
addr16
xor
or
and
jle
jb
ss
fcomps
or
mov
and
jo
fdivrp
push
xor
into
push
mov
neg
sbb
push
adc
push
inc
jg
inc
add
or
jl
adc
mov
add
adc
cli
xor
pop
call
jl
jmp
adc
jno
in
mov
out
adc
xchg
shll
rolb
push
lea
nop
clc
or
push
scas
test
jne
inc
sbbb
xchg
pushf
cs
push
sbb
into
leave
rclb
pusha
jg
test
push
push
lahf
enter
cmc
xchg
cmp
jo
dec
js
out
push
sbb
push
je
add
add
inc
or
lds
sub
jp
cmpsb
sbb
xchg
push
xlat
sbb
adc
or
xor
mov
mov
cltd
fsubs
mov
std
mov
and
xchg
fidivs
or
insb
rorl
jmp
inc
lret
movsl
cmc
jg
jle
add
into
aad
insb
fwait
cmp
jb
cmp
jo
inc
cltd
scas
xchg
jns
sub
adc
mov
popa
xchg
pop
or
das
add
sar
mov
cs
push
cs
inc
pop
shl
mov
lahf
pop
add
inc
cwtl
pop
nop
out
call
lods
and
xchg
test
in
lahf
fwait
push
in
mov
xor
loop
scas
test
test
insl
pop
dec
cmp
push
xchg
insb
jp
mov
push
shrl
test
loope
pop
shlb
mov
and
xchg
push
adc
add
bound
lcall
jle
or
sbb
lods
ds
mov
divb
or
xor
addl
or
repz
hlt
sub
inc
inc
outsl
mov
xchg
loope
xchg
cli
lahf
xchg
push
ds
mov
and
icebp
test
rcll
jo
fiadds
fwait
mov
sahf
lock
lahf
loopne
pop
repz
lock
dec
loope
jp
xchg
ds
pop
aad
hlt
lcall
add
pop
or
sbb
cmc
fldcw
jb
cvttps2pi
push
loopne
push
mov
nop
push
cmp
jp
scas
stos
mov
cmp
mov
cld
orl
int
aaa
fs
fwait
lret
sub
hlt
pushf
ret
data16
cs
adc
loop
cwtl
add
out
xchg
cwtl
xor
and
fists
xlat
vmovsldup
and
test
aaa
and
mov
inc
and
fidivl
fwait
inc
add
or
push
mov
insb
js
outsl
hlt
xor
mov
or
scas
mov
cld
adc
cmp
sahf
and
notl
pop
xchg
stos
push
push
js
nop
imul
iret
push
cmpsb
lcall
xchg
addr16
dec
sbb
mov
dec
dec
dec
jp
mov
in
dec
jbe
sbb
adc
push
or
fimull
mov
loope
repnz
or
icebp
pop
pop
fimull
push
xchg
mov
js
cmc
iret
popa
mov
adc
pop
mov
mov
lret
pop
xor
sub
adc
pop
inc
ljmp
loopne
fdivs
and
lock
pop
ds
aad
pop
dec
cld
loop
ja
and
inc
mov
push
incl
add
sbb
add
cmp
add
jno
mov
iret
test
and
lcall
pop
dec
push
ljmp
adc
xchg
out
stos
xchg
jo
or
xchg
mov
lods
out
shrl
hlt
stos
lahf
jg
lods
pop
or
movsb
dec
mov
stos
pop
sbbb
or
xor
inc
in
adc
jmp
sahf
shll
dec
js
adc
sbb
jae
stos
repnz
and
inc
les
fsubr
jbe
das
inc
imul
add
popa
dec
xchg
stos
call
or
cmp
xchg
mov
pop
sarl
fisttpl
arpl
das
mov
or
clc
sbb
add
jmp
sbb
mov
pushf
daa
xor
mov
sbb
mov
lcall
ja
rorl
dec
jl
pusha
test
xchg
std
or
inc
call
dec
aad
scas
loope
dec
jae
mov
scas
clc
aam
stos
rcl
mov
cltd
dec
pop
adc
xchg
lret
aad
aad
mov
cmp
add
scas
decb
cmp
lcall
xchg
mov
mov
sbb
push
mov
popa
stos
inc
or
push
lcall
xchg
call
popa
in
xor
pop
and
jl
pop
je
mov
xchg
pop
and
xchg
sbb
pop
cmc
add
xor
mov
push
sbb
jl
jge
push
adc
pop
mov
out
loopne
test
adc
icebp
dec
xor
in
fisubl
fadds
mov
int3
jl
aad
pop
cmp
mov
cmp
add
aad
push
stos
fistl
sub
out
ficoml
scas
xchg
add
mov
dec
or
std
mov
push
sub
push
mov
mov
inc
rolb
nop
ret
movsb
aam
mov
inc
test
xchg
lock
or
nop
push
cmpsl
test
jecxz
leave
xchg
pop
jns
movsl
es
test
add
mov
jo
push
addb
push
and
dec
int3
cmpsb
push
and
fidivrs
jae
push
adc
inc
and
mov
push
push
mov
ss
clc
into
fadds
adcl
jge
xchg
jbe
shrb
or
test
add
insb
jne
in
stos
mov
rol
imul
and
or
lret
andb
sbb
push
scas
ss
cmc
push
pop
pop
cmp
and
mov
shll
fmull
jp
push
dec
cmp
in
lods
pusha
movsl
push
in
add
sbb
sbb
rolb
shlb
loopne
int3
mov
inc
rclb
cmc
icebp
dec
insb
fs
sbb
inc
mov
pop
stc
call
dec
test
xor
jmp
mov
xchg
pop
cmpsb
add
jbe
les
adc
pop
clc
or
or
mov
lahf
insb
loop
leave
dec
xchg
insl
or
js
arpl
or
int3
mov
lock
cmpsl
fwait
aaa
arpl
xchg
bound
xchg
sahf
add
or
sbb
dec
dec
test
xor
mov
cmc
iret
or
inc
daa
addr16
sub
insb
in
pushl
sub
push
mov
jne
pop
dec
clc
xchg
jo
dec
loopne
or
stc
into
pop
adc
addl
scas
lea
adc
cmpsb
ljmp
jle
stos
imul
jmp
dec
inc
xor
lods
xchg
sub
pop
imul
inc
mov
pop
loopne
mov
jle
mov
mov
mov
std
test
out
push
and
aam
test
push
pop
and
hlt
pop
inc
xor
lods
cld
dec
je
into
lock
in
and
leave
or
add
clc
xor
movsl
hlt
xchg
fnsave
loope
out
orb
and
xchg
lods
orl
insb
dec
das
test
lods
or
dec
out
inc
and
sub
sub
or
popf
add
ds
cmc
test
jp
testb
out
or
jno
cld
and
xchg
shlb
mov
mov
mov
iret
add
jle
mov
sub
adc
ds
shr
cmp
icebp
icebp
mov
xchg
lret
repnz
mov
outsb
and
xor
inc
xchg
sbb
fdivrs
aas
jge
in
call
stos
je
cwtl
add
mov
jo
push
dec
jp
or
clc
in
inc
es
mov
je
stc
add
mov
mov
push
inc
inc
xchg
pop
mov
and
xchg
mov
inc
mov
pop
xlat
andl
sti
xor
mov
jg
iret
and
mov
mov
jnp
or
cmp
mov
test
push
sahf
fmull
xor
lock
xchg
cmp
mov
rclb
into
adc
hlt
mov
sti
jp
rorl
aad
xor
push
cmc
mov
test
mov
adc
xor
cwtl
aas
sbbl
xchg
iret
ficompl
sub
movsl
popa
dec
pusha
aaa
enter
pop
out
cmp
jl
les
xchg
mov
adc
xor
push
xor
pop
add
xchg
push
lcall
jno
das
je
inc
cmpsb
push
cmpl
pop
outsl
jg
push
dec
dec
xchg
pusha
pop
and
clc
mov
mov
dec
dec
or
mov
xor
bound
xchg
outsl
cli
or
dec
xor
nop
adc
xchg
mov
ret
nop
loop
nop
inc
fstpl
push
mov
lods
push
jmp
push
int3
ficomps
lcall
sbb
loopne
outsb
mov
pop
pusha
inc
lcall
sbb
jl
mov
xor
push
jge
push
push
cmpsb
pop
shrb
lret
jb
add
or
and
or
nop
sahf
fs
add
orb
xor
add
aas
xchg
adc
cmpsl
add
lret
insl
or
mov
or
push
jno
jp
xchg
mov
mov
or
loopne
in
outsl
mov
lock
imul
imul
xlat
jmp
adc
insb
xchg
inc
pop
xchg
mov
dec
xor
mul
jae
and
mov
inc
cli
std
ret
leave
fucomp
js
lock
js
imul
fdivrl
jecxz
fsubr
push
lock
loopne
add
add
lds
cmp
and
insl
jmp
scas
add
ret
xchg
mov
and
lock
xchg
enter
jl
jecxz
sub
or
outsb
ljmp
and
aam
adc
mov
rorl
fcoml
cmp
pop
mov
lock
icebp
add
add
pop
xor
push
or
mov
mov
sub
popf
cli
pop
test
sub
mov
sbb
pop
aas
loopne
inc
or
in
or
or
mov
fsubl
movsb
les
test
xchg
shlb
stos
or
mov
fstpl
dec
dec
movsl
or
jmp
int3
stos
sbb
mov
stos
cmp
fbld
lock
loop
adc
cmc
jmp
fs
pushf
insl
paddsw
xlat
fbld
rorl
lret
sub
mov
pusha
lret
add
jo
and
imul
out
jno
hlt
or
xchg
pusha
mov
xorl
aas
jmp
bound
rorb
adc
add
jle
or
add
stc
outsb
out
ret
cmp
jne
and
rcl
in
push
push
dec
and
cli
inc
iret
jle
lods
inc
iret
bnd
or
aam
retw
pop
and
jl
sub
push
ja
xor
fisttpll
inc
loope
icebp
push
mov
mov
mov
mov
mov
out
cld
inc
cli
cmp
sub
sub
cmpsb
and
lea
fwait
sbb
cmpsb
mov
outsl
bound
add
push
data16
fiadds
or
bound
push
pop
cwtl
daa
add
loope
pop
cmp
jo
hlt
shrl
scas
clc
mov
pusha
daa
sahf
cmpb
add
out
gs
rolb
sub
daa
lret
jno
mov
mov
inc
sub
xchg
arpl
stos
ljmp
enter
add
insb
add
icebp
fbstp
mov
mov
add
inc
mov
adc
add
lds
lret
push
sbb
dec
mov
iret
fst
push
or
into
add
pop
pop
push
mov
xor
pop
push
hlt
ficoms
aam
bound
ret
loopne
fnsave
push
cltd
addr16
inc
mov
aas
into
dec
out
cld
adc
outsb
cmc
je
inc
dec
push
cmp
mov
fwait
out
sbb
mov
in
and
in
sub
mov
push
xchg
mov
push
lock
incb
xchg
loop
dec
popa
test
cwtl
ret
loope
add
fcmovnb
inc
test
nop
adc
push
mov
cmc
pushf
popl
fcompl
cmp
adc
pop
out
outsb
and
push
add
and
push
repz
jno
sbb
or
ret
or
adc
js
es
inc
add
or
aas
ficomps
filds
movsb
lret
adc
shlb
jle
xchg
js
shlb
push
pop
inc
pop
xor
insl
addb
mov
push
pop
into
mov
jmp
push
pop
mov
sbb
shrb
cmp
fildl
sahf
mov
xlat
inc
jo
and
jnp
jno
nop
imul
add
adc
mov
cmp
stc
stos
das
scas
sub
test
dec
xor
pusha
pop
or
xor
mov
jno
cmp
add
inc
push
stos
cwtl
cmpsb
xor
or
js
aam
dec
pop
lock
or
cltd
rclb
jbe
sbb
jg
shlb
aad
notb
xchg
mov
pop
sub
hlt
and
ja
jbe
dec
inc
push
pop
mov
testl
xor
leave
insl
addr16
js
out
roll
je
shrl
cld
xor
das
fcoms
push
ficompl
mov
pop
mov
xor
jne
sub
sarl
xorl
inc
sbb
ljmp
or
mov
call
out
je
jmp
or
adc
mov
adc
jnp
adc
imul
subl
loope
loopne
orb
push
gs
dec
je
insl
or
mov
xchg
push
jno
dec
push
enter
or
fiaddl
xchg
shl
dec
loopne
std
jecxz
push
test
repnz
imul
mov
repz
sbb
push
cld
out
push
mov
aaa
pop
jnp
push
push
jg
ret
mov
xchg
or
sahf
cmp
in
mov
push
sbb
xchg
adc
inc
pop
shlb
je
mov
mov
pop
dec
sti
movsl
aas
add
mov
sub
mov
push
scas
adc
js
sbb
sarb
jmp
loop
push
push
sub
jmp
insb
fstl
mov
es
out
pushf
rorb
call
pop
je
xor
fnstenv
jecxz
push
pop
out
adc
xchg
aam
pop
inc
mov
lea
scas
int3
js
xchg
dec
pop
jns
and
dec
inc
in
mov
inc
inc
jg
aam
call
push
inc
flds
aam
add
dec
mov
pop
jg
add
cli
addr16
mov
jecxz
adc
push
sbbb
subb
add
pop
test
inc
je
test
test
jmp
and
in
adcb
sbb
xchg
cmp
pop
filds
lock
inc
sub
cmpsl
aas
pushf
roll
ljmp
lods
xlat
push
mov
ss
popa
push
fcmovnu
loopne
rcl
in
mov
fimuls
xchg
add
sub
mov
xor
cmp
mov
cli
mov
mov
and
ljmp
jl
mov
cld
es
add
add
js
and
test
adc
sbb
lock
adc
adc
cmp
das
or
push
xor
ds
rorb
daa
lods
test
pop
jg
bound
pop
jecxz
pop
clc
mov
mov
mov
aad
nop
andb
jecxz
ss
mov
insb
mov
test
inc
shlb
dec
or
cmp
pushf
ret
or
cmp
dec
daa
mov
in
sub
and
dec
sbb
adc
lods
push
or
sbb
enter
scas
push
and
mulb
mov
mov
xchg
rorl
icebp
and
push
xchg
xchg
pusha
sub
mov
and
test
jl
incb
pop
mov
mov
cmc
iret
ret
adc
enter
sub
sub
xchg
xchg
popa
inc
xchg
mov
mov
mov
sbb
pop
xchg
pop
pop
inc
adc
inc
insl
mov
clc
aas
imul
fmull
cli
add
xchg
inc
mov
cmp
loopne
scas
popf
ds
popa
adc
inc
dec
imul
cmp
roll
scas
adc
mov
in
pop
call
sub
adc
cli
dec
rolb
cmpsb
test
out
testb
ret
iret
clc
lods
and
xor
sbb
rcrb
ret
ds
add
dec
sub
imul
mov
cmpb
fsubrl
std
push
and
aam
inc
mov
cmp
cmp
sbb
andl
aas
outsb
or
in
cmp
cmpl
adc
lret
sbb
xor
sti
inc
add
push
mov
jns
and
fs
pop
push
out
push
push
out
pop
into
jo
loop
out
add
fld
sti
pop
inc
enter
mov
adc
pslld
mov
fists
mov
movsl
mov
mov
outsb
cld
data16
scas
dec
sub
mov
jmp
out
adc
inc
cmp
mov
insl
sbb
pop
add
add
mov
ds
push
cmp
lock
pop
jmp
cmp
push
ret
mov
xor
fstps
jnp
jmp
push
push
pop
js
pop
sbb
xchg
push
cli
aas
fwait
dec
popf
sbb
push
dec
pop
outsb
repz
inc
or
rolb
rclb
push
js
lock
mov
jmp
jp
ljmp
es
mov
add
sub
or
out
pop
lcall
pop
push
push
test
loop
sub
add
pop
cmp
inc
insb
dec
out
mov
test
insl
js
mov
jp
xchg
jl
cmpsb
or
jo
cmc
daa
out
xchg
push
in
lods
daa
and
js
scas
mov
pop
jae
add
dec
xor
popf
mov
js
push
jp
inc
fcoms
jp
inc
inc
adc
ljmp
and
aad
ds
lock
sbb
jle
data16
and
sub
pop
stos
cmp
arpl
mull
popf
pop
add
xchg
xor
jl
pop
bound
xchg
pop
clc
loopne
movsl
and
cli
decl
shll
add
add
pusha
test
stos
xchg
stos
insb
cwtl
in
push
call
es
dec
aad
xchg
cltd
imul
pop
inc
outsb
call
mov
shll
stos
enter
lds
rolb
fcompl
mov
cmp
xchg
push
and
mov
shll
adc
mov
outsb
push
jmp
or
mov
pop
cli
dec
xchg
cltd
mov
out
sbb
insl
mov
rcrb
cmp
adc
mov
mov
adc
std
mov
incb
aam
pop
xchg
loope
xchg
xchg
sub
sub
mov
pop
arpl
or
cltd
xorb
es
push
movsl
jg
das
mov
cld
aad
xor
bound
lahf
inc
xor
or
filds
push
in
andl
push
popa
data16
mov
mov
xchg
icebp
xchg
lea
cmp
mov
fisttps
test
jne
icebp
inc
add
popa
cmpsl
lret
lds
scas
or
or
cmpsb
xor
xchg
xor
cld
clc
sbb
sub
ljmp
scas
sar
shll
mov
push
xchg
cli
add
xchg
jge
cwtl
inc
xchg
pop
addr16
push
dec
pop
pop
int3
ja
xor
sbb
pop
imul
push
mov
jb
mov
mov
cmp
stos
and
sbb
and
inc
aas
inc
shl
clc
sbb
add
rclb
int
push
and
test
push
xchg
sbb
stos
movsb
not
push
setg
loop
movsb
xchg
fadd
in
inc
or
int3
ret
pop
lock
lods
dec
cmp
leave
push
fadd
mov
push
cmp
out
pop
gs
jp
add
cmpsb
xor
test
sub
clc
dec
jae
lret
push
and
push
push
ret
or
jp
insb
mov
jecxz
lock
jle
add
negl
add
sub
loop
inc
repnz
popa
cmp
inc
jge
or
or
cmp
call
pop
inc
scas
notl
jnp
xor
sub
fildl
stos
mov
iret
lret
imul
loope
add
push
push
inc
bound
fisubl
pop
movl
mov
mov
popl
mov
or
inc
add
inc
mov
jmp
sbb
and
cmpsb
sbb
push
push
stos
arpl
sbb
imulb
jl
iret
inc
out
adc
pop
pop
popf
xor
arpl
inc
pop
jge
lds
or
cmpsb
push
and
incb
sub
incl
adc
mov
fcmovnbe
orb
jmp
in
out
add
xchg
mov
inc
or
sub
jo
push
sbb
outsl
pop
mov
int
fs
aas
lcall
jg
ss
xor
sbb
push
out
mov
add
or
gs
and
and
ficompl
xor
mov
add
push
push
enter
out
xchg
mov
xchg
and
iret
addl
loop
dec
ljmp
addr16
push
jmp
ss
inc
jb
jo
dec
movsl
mov
sahf
lods
jnp
add
lds
call
clc
call
cmp
insl
jecxz
dec
push
nop
xor
mov
xchg
cmpsb
js
rolb
and
sbb
aam
fwait
mov
pop
sub
mov
mov
sub
xchg
xlat
add
cmp
adc
mov
cmp
add
inc
ret
sar
dec
ret
popa
cmp
int
adc
sbb
movsl
lcall
dec
and
pop
dec
in
aad
cmp
clc
test
loop
mov
ret
movsb
test
push
xchg
dec
sbb
mov
mov
mov
or
cli
outsb
or
data16
push
xor
inc
jns
push
jnp
and
cmp
decb
sub
imul
jp
and
nop
pop
or
pop
shl
pusha
sub
sbb
sub
xchg
imul
test
mov
movb
xor
jle
nop
ret
xor
aaa
hlt
sarb
sarl
sub
es
das
cmpsl
cld
push
pusha
aaa
daa
sbb
fidivrs
ficompl
ss
cmp
or
jno
jno
push
insl
adc
insb
sub
jl
ljmp
ret
pop
add
ljmp
add
ds
jmp
std
lock
mov
push
adc
inc
or
stc
test
mov
jb
dec
mov
clc
dec
and
push
nop
std
pop
push
popa
rcrl
es
or
aaa
out
jg
inc
pop
movsl
cmpb
mov
or
xor
icebp
dec
outsb
jnp
std
inc
push
sbb
loopne
xchg
loopne
rcr
xlat
inc
or
aad
xor
pop
inc
testb
dec
dec
pop
test
dec
xchg
call
nop
dec
mov
fsubp
cmp
jne
in
push
inc
sub
aaa
fcom
or
or
sub
sahf
fstpt
sbb
pop
cmp
adc
inc
pusha
jb
cmp
push
add
push
aam
push
dec
or
push
jecxz
je
fisubrs
fiadds
or
call
pop
iret
push
push
out
lret
addr16
xchg
into
sahf
aas
sbb
sub
and
adc
xchg
lcall
adc
xchg
adc
ficompl
xor
dec
clc
adc
ja
xchg
fsubrs
and
add
mov
cmpsl
out
mov
sbb
lock
and
adc
loope
movl
add
clc
mov
rcrb
in
out
in
bound
mov
pushf
das
sar
or
add
loopne
test
or
xor
cmpb
insb
pop
and
adc
test
or
out
push
icebp
ret
inc
add
add
hlt
ss
lea
cli
fstpt
dec
mov
int
dec
push
push
mov
xchg
or
popa
add
xor
negb
hlt
fwait
cs
cmp
adc
xlat
sub
jb
cs
or
xchg
add
std
movsb
fcompl
in
xchg
pop
test
mov
sbb
pusha
sbb
cmp
ret
pop
enter
mov
rcll
imul
push
push
testb
das
mov
jno
fsubs
ss
cltd
push
jl
in
inc
jo
add
pop
inc
sub
outsb
sbb
mov
andb
push
or
add
repnz
in
adc
add
add
adc
ss
sub
push
ret
jmp
pop
and
push
pushf
ljmp
lods
push
movsl
fmuls
mov
mov
call
pop
push
xchg
adc
subl
std
mov
aad
dec
xchg
mov
dec
decb
or
push
rolb
jge
adc
sbb
mov
movsl
mov
jl
hlt
cmc
mov
dec
jecxz
sar
fildll
movsb
hlt
pushl
sbb
push
sub
sbb
ja
enter
jnp
inc
xchg
xor
adc
pop
nop
cmp
bnd
sbb
sarb
fimuls
or
loop
add
shrb
mov
cmpsb
in
cmp
bound
ret
adcl
jo
sbb
or
je
out
rcr
jne
setle
js
data16
sbb
inc
rclb
mov
data16
cmp
dec
subl
movsb
mov
inc
xchg
imul
and
cmp
inc
pop
cmp
mov
ret
and
mov
add
jnp
push
pop
xor
jge
pop
testb
aad
loop
je
imul
or
push
jo
cli
ret
and
sbb
aad
pop
push
cld
and
jnp
or
adc
outsb
aaa
add
stos
dec
rclb
pop
pop
mov
dec
loop
jne
lcall
jg
xor
mov
mov
push
hlt
adc
and
mov
cli
pop
mov
push
push
mov
fisubrs
or
fbstp
and
lahf
movsl
pop
clc
cmp
push
dec
lret
jbe
das
inc
ret
scas
and
cmp
adc
jle
and
cmpsb
test
insl
inc
pop
insb
add
jo
std
mov
mov
add
nop
outsb
mov
ret
enter
in
call
pop
mov
les
pop
pop
mov
fisubs
cmp
jb
push
dec
lcall
pushf
andl
cmp
int
or
pop
add
mov
cmp
jl
and
mov
and
movsb
push
aas
mov
xchg
test
or
sub
sar
bound
inc
aaa
jg
call
add
inc
loopne
outsl
dec
andb
loope
sahf
xor
inc
fisubl
adc
adc
bnd
push
xchg
jns
dec
jp
ljmp
out
lahf
inc
lock
fildll
clc
pusha
scas
xor
dec
dec
dec
mov
mov
cmc
cmpsb
out
add
cltd
mov
clc
jmp
mov
xchg
or
loop
and
pop
js
inc
popa
das
insl
cmp
inc
xor
imul
in
add
pushf
or
pop
icebp
pop
stos
ret
or
in
ss
in
add
nop
mov
and
test
xadd
push
int3
and
ljmp
sub
xchg
mov
cltd
int
mov
dec
mov
mov
or
xchg
fiadds
sub
scas
mov
push
inc
cmpsl
add
xchg
or
aam
dec
fbstp
mov
test
daa
jno
imul
mov
xor
or
dec
xor
push
jg
decl
stos
pop
push
jb
add
ficomps
and
mov
std
adc
cmc
incb
fwait
cld
popf
vmread
mov
out
and
test
xchg
loop
popa
or
mov
add
fmuls
mov
cld
lea
nop
test
faddl
sahf
push
xor
clc
fcoms
rcll
jg
andl
js
andl
lds
dec
xor
jecxz
inc
sbb
dec
aam
gs
xchg
xchg
mov
bound
scas
movl
cld
aam
jle
mov
shll
jnp
outsl
out
mov
in
mov
out
mov
mov
cmp
mov
lock
pop
mov
or
or
push
pop
mov
pusha
call
add
cmp
in
mov
ret
mov
xor
outsl
es
pop
sub
call
clc
decl
xor
je
scas
fcomps
adc
clc
in
iret
pop
adc
jp
mov
test
adc
cltd
arpl
xor
pusha
adc
pop
sbb
sbb
call
cmp
lods
movl
push
add
xor
lcall
test
cmc
jg
std
pop
push
adc
mov
mov
pushl
xchg
mov
pop
std
lahf
outsl
das
push
and
notl
pop
xchg
shlb
jnp
loope
mov
sbb
aas
or
rorl
xchg
rcrb
sbb
daa
add
sub
cmp
orb
xlat
sbb
js
pop
mov
sub
push
les
mov
std
out
push
and
ja
rorb
xchg
mov
add
jle
add
sbb
int3
inc
out
call
xchg
call
push
test
nop
mov
add
lret
jl
cmpsl
jge
jecxz
repz
cmpsb
out
push
or
inc
imul
or
cli
cmpsl
or
out
cmp
rorl
push
pop
mov
cmpsl
cmp
sub
push
lock
add
jge
ret
fcomp
ficoml
mov
mull
sahf
jb
mov
push
sub
lahf
ss
add
in
das
into
mov
xor
clc
stos
adcb
mov
lods
or
sbb
mov
sub
push
repnz
and
call
inc
movsl
lock
mov
jmp
loopne
pop
xchg
dec
mov
pop
xchg
je
and
mov
jp
push
pusha
and
xor
loope
add
mov
dec
clc
mov
mov
pop
mulb
cmc
add
call
xchg
dec
pop
mov
test
in
jp
call
jo
xchg
pop
and
out
mov
or
and
outsl
mov
pop
ret
jbe
pop
add
scas
imulb
cmp
jo
inc
outsl
cwtl
test
cld
icebp
xchg
jnp
enter
mov
lcall
cmc
clc
or
sbb
iret
jno
incb
pop
mov
rorb
out
out
and
faddl
out
sub
and
xor
push
stos
jo
mov
iret
dec
aam
push
mov
adc
ss
pop
fwait
xchg
inc
and
jae
ds
push
gs
xor
mov
adc
sbb
repnz
mov
mov
mov
pusha
add
cmc
jo
inc
mov
adc
push
add
les
scas
xor
mov
outsb
and
push
jo
nop
jne
adc
fdivrl
and
pushl
sbb
sbb
xchg
xor
inc
mov
cli
mov
xchg
outsl
cmpsb
jb
imulb
mov
xchg
daa
popa
xor
jmp
dec
in
push
ja
in
mov
xchg
enter
mov
xor
movsb
mov
jle
cltd
mov
push
adc
rolb
sbb
jno
enter
fs
inc
das
shr
pop
sti
pop
movd
adc
adc
sar
sub
cmpsl
add
or
aam
incl
repz
mov
stos
iret
setle
fdivl
repz
and
lret
ljmp
inc
fs
mov
xchg
loopne
adc
loop
inc
pop
xor
dec
add
int3
push
sar
call
pop
jmp
sbb
add
loope
xor
and
push
out
jl
movsl
shll
js
or
pop
and
sar
into
or
scas
imul
ret
pop
out
xor
cmc
out
lret
and
gs
sub
mov
stos
mov
jmp
dec
movl
pop
ret
xor
mov
aam
inc
jg
adc
dec
mov
adc
xchg
xchg
xor
inc
xchg
adc
lcall
bound
test
adc
dec
push
or
jl
push
jo
pop
cmpsl
push
pop
push
rolb
fists
clc
mov
lods
fisttps
mov
and
or
push
and
add
jno
rcrl
adc
testl
out
add
mov
pop
mov
adc
ljmp
in
cmp
loop
mov
xor
pop
mov
sbbb
sbb
mov
dec
fcoml
in
push
decb
jb
or
dec
call
add
cmp
mov
test
add
push
mov
push
and
rcrl
xor
sbb
jb
mov
pop
mov
scas
testb
lret
lret
xor
mov
js
movsl
inc
sbb
fsubr
cmp
and
mov
mov
test
dec
push
push
and
mov
dec
subl
adc
and
in
dec
sub
and
or
mov
add
out
insl
lahf
dec
mov
int3
xor
sub
je
inc
rolb
dec
std
incl
loope
fidivl
mov
or
sbb
jb
xor
xor
lcall
push
ret
icebp
lods
xchg
xor
cmp
pushl
inc
add
test
and
or
jecxz
add
mov
sub
cmp
nop
rclb
push
dec
mov
aad
pusha
xor
sahf
andb
push
lahf
mov
mov
loop
dec
cmc
xorl
clc
insb
fwait
std
lahf
push
xor
sub
repnz
mov
gs
sbb
inc
xchg
push
fwait
lock
mov
ret
aaa
not
push
and
clc
dec
ret
and
out
xchg
daa
dec
jle
mov
ljmp
and
jmp
test
lods
scas
sub
data16
daa
loop
xchg
xor
add
xchg
js
sahf
adc
mov
inc
add
dec
jecxz
dec
dec
test
xchg
mov
push
inc
mov
adc
jnp
dec
push
jns
loopne
lock
adc
sbb
lock
xchg
fcmovnbe
aas
mov
cmpsl
mov
adc
rcl
in
adc
pop
aaa
jne
sbb
das
xchg
test
pushf
pushf
pop
es
jne
pop
enter
cmp
stos
cmp
jbe
mov
clc
out
push
dec
push
std
add
lods
inc
add
add
test
pop
mov
pop
mov
js
icebp
inc
or
adc
add
mov
shlb
js
push
pop
das
sbb
fs
push
sti
incb
setb
mov
xchg
mov
push
ret
shl
out
or
push
xor
add
add
es
loop
jnp
andb
or
xchg
ljmp
add
xor
in
fwait
sbb
adc
mov
add
je
ret
xor
ss
cwtl
inc
cld
or
mov
push
push
dec
lret
push
mov
dec
xor
dec
cmp
sarl
sbb
add
lret
jl
xor
add
mov
lfs
in
dec
xor
sbb
rcll
xor
data16
sbb
cmpsb
mov
insl
dec
loop
dec
inc
ljmp
popf
adcb
jne
ret
rclb
stos
inc
clc
in
add
jmp
push
pop
ret
push
fimull
push
mov
and
sub
xchg
push
sbb
jmp
cld
sbb
data16
mov
dec
push
repz
sub
xchg
pop
dec
push
cltd
pop
hlt
pop
imul
push
sbb
loope
jns
cmpsb
sbb
in
adc
call
gs
ret
mov
add
shl
jle
jbe
sbb
mov
cmp
in
aad
loope
iret
mov
test
pop
mov
mov
jge
out
push
pop
out
scas
jle
sbb
lods
call
notb
mov
add
adc
cmpsl
jge
dec
stos
test
mov
scas
popa
aam
cmp
test
ljmp
outsl
push
dec
cmp
add
jl
pop
sti
mov
inc
daa
pop
mov
inc
pop
dec
add
cmp
dec
pushf
jmp
ret
cmc
sub
adc
mov
jae
mov
stos
loope
stc
pop
adc
cli
jecxz
xor
dec
xor
std
jge
punpckldq
daa
lds
in
scas
cmp
out
xor
push
jle
jge
sbb
int
popf
lcall
or
push
gs
or
testb
lret
negb
dec
pop
pusha
mov
mov
je
add
add
ds
shll
shll
inc
cli
pop
fcoms
clc
xchg
jle
insl
mov
ds
outsb
into
mov
test
lods
fstpt
sbb
jecxz
lock
lods
adc
orb
ja
mov
pop
add
jecxz
mov
jl
xchg
fmull
xlat
jbe
sbb
xlat
inc
and
push
ret
and
fs
jbe
jae
cmp
scas
and
adc
jb
cmp
shlb
xchg
push
or
neg
jmp
loopne
jo
mov
aad
movsl
insl
mov
lret
add
stos
repz
xor
jmp
int
fwait
cmp
dec
fidivs
fs
cmp
cli
or
pop
bound
push
sbb
cltd
push
xor
sbb
dec
out
std
loop
aam
fmull
add
rcll
cmpsb
jo
insl
xchg
test
fisttps
test
dec
sub
lea
mov
dec
mov
test
adc
lods
and
pop
xor
es
in
jo
mov
cli
out
lret
mov
jle
add
pop
lods
outsl
cmp
rorl
shr
data16
or
push
lods
jb
aad
cltd
orl
inc
mov
or
out
dec
std
test
fs
in
aad
pushf
cmpl
lret
pop
jb
xor
subl
xorl
cvtpi2ps
push
in
cld
jns
dec
pop
fidivrl
ljmp
mul
and
cld
mov
inc
stos
adc
jno
pop
outsb
adc
cmp
add
call
xchg
iret
add
xor
inc
adc
clc
add
int
inc
and
lods
cwtl
nop
addr16
add
es
addb
inc
inc
jmp
pop
mov
bound
ficoms
sahf
xchg
jp
cld
loope
push
test
inc
xor
cwtl
stos
in
push
into
rorb
adc
stos
add
mov
mov
leave
sbb
imul
sbb
jecxz
ror
ret
loope
sub
syscall
test
jl
push
je
mov
fyl2xp1
adc
and
or
jae
sbbb
gs
fists
imul
and
test
hlt
or
jle
je
dec
outsb
push
xchg
jecxz
xchg
dec
pop
ror
stc
mov
push
xchg
icebp
int
pushf
out
add
cmpsb
das
pop
fistpll
test
cmp
adc
xor
push
mov
jg,pt
rorb
jne
adc
stos
negl
sahf
not
adc
fistpl
lock
dec
insl
insb
jb
sti
int3
pop
dec
sar
test
mov
add
pop
xor
mov
xchg
test
mov
arpl
popf
lock
jle
cld
movsb
ljmp
dec
adc
adc
mov
mov
pop
cmp
xor
jbe
shl
popf
pop
push
lahf
jno
jmp
scas
out
or
sbb
add
cli
mov
aaa
pop
jnp
rcll
outsl
cmpsl
push
or
clc
pop
xchg
mov
jne
xchg
scas
mov
lret
fs
and
cmp
xchg
mov
push
test
stc
subb
and
xor
out
and
xor
push
cmc
loopne
xor
shlb
xor
aam
fwait
mov
pop
mov
and
xor
aas
push
mov
cmp
shlb
out
and
in
mov
jns
xor
fnstenv
je
bound
test
xchg
test
jg
cmp
inc
call
xor
xchg
push
or
add
stc
or
cmp
xor
hlt
cld
jo
test
cli
lods
jecxz
adc
mov
add
test
add
pusha
jo
lea
cld
cli
imul
pop
jmp
into
jmp
jle
push
fld
pop
dec
push
sti
jb
lock
adc
mov
cmp
mov
pushf
dec
out
push
sub
and
test
fwait
orb
inc
mov
pop
fdivrl
xchg
cmc
add
mov
test
and
inc
in
jmp
pop
cmp
sub
jb
es
lret
jae
jbe
push
outsb
fs
and
add
pop
mov
ljmp
push
test
and
or
inc
arpl
loop
ss
ret
shl
cld
insb
lds
ret
cwtl
es
push
das
mov
jnp
cmp
cmp
imul
in
fs
mov
sub
xchg
and
popf
aam
lret
lret
adc
rcrb
inc
adc
rclb
adc
fstpt
xor
xchg
or
lock
jmp
xor
test
and
or
inc
loop
xchg
fcomp
xchg
pop
jbe
jg
fdivr
aaa
inc
hlt
dec
pop
jne
popf
and
aas
stc
adc
cmp
imul
add
mov
jecxz
fbld
sub
fiadds
and
fiadds
push
cmp
mov
daa
aad
mov
testb
jb
push
stos
pop
arpl
xchg
sub
mov
sahf
cmc
test
adc
mov
and
mov
test
addl
outsb
adc
cli
push
faddl
inc
pop
int3
lods
jo
outsl
cmp
pushf
out
test
jae
mov
push
fbld
das
pop
cmp
fisubs
gs
or
call
test
int3
icebp
adc
lcall
mov
mov
rorl
fwait
movsl
aas
push
jmp
rcr
mov
lea
cmp
hlt
shll
xchg
mov
mov
movsb
shll
mov
pop
fsub
shlb
ficomps
fs
push
les
mov
jbe
aad
dec
fnsave
push
gs
scas
shlb
or
je
or
cs
movsl
mov
in
push
mov
lea
flds
adc
mov
es
mov
out
mov
stos
mov
cltd
push
push
imul
jmp
jecxz
mov
fstpl
lret
sub
push
enter
mov
pop
adc
inc
jne
mov
add
adc
pop
inc
outsl
testb
push
inc
xor
add
xorb
loope
mov
or
loopne
roll
fistpll
lret
popl
mov
pop
imul
sub
mov
stc
adcb
xchg
add
cld
dec
es
adc
addr16
pop
and
pop
inc
cmpb
nop
cs
push
xchg
mull
test
in
lret
push
loopne
test
sub
add
loopne
cli
mov
das
les
outsl
int
mov
aas
sub
mov
cltd
cmpsl
or
jle
dec
mov
mov
adc
sahf
dec
sbb
lahf
add
les
mov
pusha
inc
int
roll
add
test
xorl
inc
mov
cli
ljmp
mov
or
lods
aaa
loope
cmp
jo
pop
and
testb
mov
fwait
and
mov
or
cmp
outsb
cmpsl
cmc
es
or
mov
mov
mov
cld
fcomps
fmuls
jno
sub
push
lea
xchg
mov
push
loop
out
and
mov
pop
sarb
andl
sar
push
lcall
sbb
movsl
push
aaa
jmp
fimuls
jno
mov
leave
mov
push
popa
push
sub
gs
jnp
xor
and
or
or
push
jae
ffree
pop
or
outsl
flds
mov
push
and
mov
sub
add
xor
insb
lock
imul
xchg
push
and
leave
pop
xor
or
mov
mov
adc
repz
ret
rcrb
mov
cmc
insl
out
mov
shr
jge
movsl
xor
xor
fchs
inc
or
cli
cmpsb
insl
call
hlt
data16
xchg
and
daa
push
sub
fwait
icebp
dec
mov
ds
lahf
add
pop
dec
stc
sti
add
cli
testb
jl
icebp
sub
inc
lcall
mov
out
xor
mov
or
jg
aaa
and
pop
push
push
loop
cmp
jmp
xchg
sub
clc
cltd
in
sub
xlat
mov
das
sbb
add
inc
push
js
sbb
xlat
jle
testb
xchg
jno
sbb
es
push
data16
inc
rcrb
sub
js
sbb
jp
push
cmp
outsl
cmp
cwtl
bound
xor
push
and
loop
fs
dec
imul
jecxz
dec
fadds
bound
aaa
stos
xor
jae
push
pop
push
xchg
sbbl
dec
lock
push
mov
movb
lahf
dec
pop
sbb
jge
rcr
xchg
out
add
or
push
outsl
and
cmpsl
push
push
filds
mov
inc
dec
daa
sahf
fcmovu
les
sub
je
fucom
mov
jmp
xor
jg
push
xchg
out
aaa
add
stc
inc
int3
popa
mov
dec
imul
inc
pop
outsl
mov
imul
push
or
add
inc
das
jo
lahf
mov
xor
sbb
sub
and
fsubl
xchg
imul
or
push
clc
cmc
mov
imul
cmc
add
xchg
shll
test
in
push
pop
neg
cwtl
add
fcompl
pop
or
cmc
jecxz
sub
inc
clc
pop
int3
lret
push
shrb
rcrb
cmp
mov
adc
js,pt
idivl
lea
in
ss
pop
mov
sbb
xlat
pop
lods
xchg
inc
sti
shrl
rolb
dec
push
pop
adc
nop
iret
nop
mov
and
or
jne
push
mulb
scas
jbe
and
mov
in
movsb
add
xchg
outsb
add
shrl
and
test
scas
stos
and
jmp
inc
pop
orb
mov
leave
test
testb
cmp
sbb
mov
out
xchg
in
test
sti
stos
dec
incb
push
cmp
dec
and
and
mov
push
push
outsb
add
repz
push
pop
inc
scas
or
rcrb
fwait
cmpsb
mov
gs
sbb
shlb
push
mov
mov
adc
jge
aad
cwtl
add
cli
mov
subl
in
outsl
cmc
push
adc
push
xlat
sub
mov
sbb
fucomip
mov
and
clc
shrb
fisubrs
and
push
shll
or
add
mov
ret
clc
xor
test
xchg
xchg
dec
cwtl
adc
fisubl
or
push
sub
bswap
andl
push
or
fmuls
xchg
js
dec
sub
mov
mov
or
push
xchg
in
rcrb
push
inc
decl
sub
adc
adc
sub
cmc
add
or
adc
push
in
inc
rcll
jmp
in
andb
popf
dec
cmp
jge
test
jne
ds
lret
jp
pop
cmp
push
push
in
addl
mov
pop
repnz
or
mov
shl
push
test
arpl
mov
mov
ja
das
jle
jae
add
cmp
orl
push
out
jns
cmp
mov
xabort
sbb
cmp
add
cli
test
or
lods
data16
xor
or
mov
jle
pop
jne
cmp
jg
mov
icebp
test
std
inc
js
dec
mov
inc
push
xchg
adc
or
lods
pop
lret
push
subb
ret
cmp
aad
pop
test
cmpsb
jbe
push
or
mov
lods
nop
xchg
test
pushf
lods
xor
or
add
icebp
loop
inc
scas
or
xchg
xor
addr16
mov
mov
sbb
movsb
inc
push
lea
sub
pop
ret
add
and
test
testb
hlt
jg
shlb
cltd
dec
scas
lret
lds
outsb
popa
rcr
mov
cmc
jmp
mov
adc
into
jle
sbb
nop
fisttpll
mov
jg
fisubl
dec
cmp
xor
mov
xor
nop
add
jb
outsb
push
jge
or
add
jbe
out
pop
jmp
xor
mov
cli
je
call
push
cmc
pop
nop
rorb
or
aaa
jmp
fdivl
andl
rcl
out
xchg
dec
pusha
push
cwtl
cmp
add
hlt
sbbb
mov
mov
jl
or
xchg
in
out
fnstenv
jbe
inc
stos
xor
clc
add
test
or
pusha
test
lds
and
jmp
clc
mov
jae
mov
xchg
orb
ljmp
popf
nop
mov
das
mov
rcrl
pop
call
test
mov
stos
lret
push
insb
push
ret
adc
call
sbb
pop
add
lods
cmc
pop
xchg
dec
test
lods
rorb
les
ss
cmp
data16
pushf
mov
xor
jmp
sbb
and
cld
ljmp
in
mov
pusha
jnp
add
sbb
enter
mov
in
push
mov
xchg
mov
mov
push
xchg
lods
out
xor
mov
inc
repnz
in
cli
sub
mov
decb
or
repz
cmpsl
push
jle
fcoml
subl
outsl
mov
insl
inc
stos
pop
fbstp
enter
incb
insl
mov
dec
sysenter
cli
faddl
mov
push
ret
sbb
in
ss
arpl
sbb
xlat
push
inc
add
gs
or
outsl
lret
add
xor
or
sbb
pop
mov
fldt
and
lds
cmpb
jo
stos
push
or
xchg
pop
cmp
cmp
mov
xchg
pusha
add
negb
in
xlat
loopne
pop
in
push
je
icebp
or
dec
lcall
bound
add
pop
or
cmc
push
mov
adc
cwtl
shrb
fbstp
pop
cmp
add
lea
sbb
ss
push
mov
sahf
stos
jle
fisubl
push
push
cmp
js
jle
in
jge
and
push
mov
lret
mov
lcall
jmp
mov
shlb
ja
jne
lock
xchg
and
vpunpcklwd
jno
idivb
das
xor
in
xlat
gs
sub
push
push
jecxz
inc
insb
xchg
das
in
push
mov
nop
add
dec
or
xor
lcall
add
mov
dec
out
and
jmp
or
aad
in
lret
inc
xlat
jg
cwtl
ljmp
test
or
sub
lcall
andb
bound
faddl
pusha
cmpsl
cmc
or
lds
xor
sti
push
movsb
call
mov
enter
outsb
imul
push
pushf
jge
scas
icebp
or
xchg
and
sahf
rol
rolb
pop
nop
int3
dec
aad
mov
xchg
shr
popa
pushf
lods
xchg
movsb
mov
mov
or
repnz
cmp
sub
or
ret
xor
and
nop
shll
jle
cwtl
dec
ds
rol
fdivrl
and
loopne
xorl
icebp
xchg
mov
lock
and
test
ja
push
and
pop
insl
test
roll
or
jbe
shlb
aas
pop
int3
call
loop
dec
jmp
dec
mov
xor
int
pop
fs
pop
or
fsubs
loop
adc
push
dec
mov
loope
nop
xchg
cmpsl
test
lcall
push
test
pop
fidivs
orb
call
mov
and
data16
adc
dec
scas
and
inc
inc
fstpt
aaa
loope
dec
jl
pop
bound
jecxz
scas
orl
ja
pushf
xchg
push
std
daa
pop
arpl
lock
mov
rcrb
out
dec
dec
stos
out
mulb
insb
xor
inc
push
mov
and
imul
dec
add
les
push
adc
cmc
add
imul
mov
cmp
jg
dec
xor
dec
push
push
in
dec
into
dec
xor
xor
aam
lcall
repnz
imul
mov
add
ret
mov
ss
in
xchg
jmp
in
mov
adc
xchg
arpl
jne
ja
test
xchg
lea
dec
nop
xor
aaa
out
jno
ss
mov
clc
jno
mov
in
push
rcll
imul
pushf
push
hlt
test
test
ds
pop
aad
add
xor
clc
scas
sub
popa
sar
fstl
cltd
ja
xchg
mov
mov
xchg
sahf
sbb
movaps
aaa
clc
std
cli
ret
jnp
or
in
in
and
mov
shll
add
stos
cwtl
aam
fadd
and
call
cmpsb
lods
jp
ja
mov
rol
imul
daa
lret
mov
addr16
push
dec
sti
aam
mov
inc
mov
inc
adc
sbb
bound
pop
pusha
mov
push
lods
loop
sbb
int3
cmc
push
xor
in
in
inc
pop
or
xchg
jmp
insb
int3
jp
jnp
ret
int
push
pop
mov
ret
inc
leave
test
xor
fildl
jg
aad
or
adc
or
jl
sbb
icebp
pop
shr
sarl
jg
ret
pop
in
fs
add
add
mov
ret
or
aas
ret
add
push
xor
pop
cmp
orb
popa
push
rcrb
subb
ret
pusha
loope
jns
dec
scas
js
cmpsl
sbb
mov
imul
cld
sub
and
xor
das
mov
mov
and
xchg
inc
repz
enter
bound
das
jo
fcoms
js
mov
sbb
push
js
cltd
mov
push
shl
sbb
pop
sbbl
cmpsl
dec
sbb
mov
xor
pop
cmp
and
pop
adc
les
inc
and
dec
add
les
adc
scas
pop
add
and
push
daa
jne
enter
xor
push
sbb
ss
hlt
add
das
in
mov
pusha
xchg
adc
jp
pop
pop
das
cmp
mov
cld
inc
and
and
sti
pushf
popa
fdivl
cld
into
add
push
ret
roll
or
mov
jle
pop
icebp
aad
cli
dec
pop
lock
shlb
repnz
adc
aam
mov
insb
outsb
imul
inc
inc
gs
rorl
inc
rolb
or
lods
jo
mov
movsb
mov
lods
mov
clc
xor
add
add
pop
je
in
pop
dec
fcmovnb
lahf
ret
adc
fdivs
repnz
mov
stos
sbb
sti
sub
xchg
and
popa
shl
outsb
push
frstor
or
sub
add
or
std
sub
dec
push
sbbl
mov
jbe
ljmp
add
mov
dec
fistpll
mov
jo
cmp
fwait
lods
sti
insb
data16
or
fisttpll
xchg
cmp
sbb
int
hlt
dec
scas
xchg
mov
and
push
or
sbb
cmpsl
mov
adc
fcmovu
mov
lock
cmp
jb
fistl
pop
ljmp
rclb
adc
mov
mov
jp
jbe
aam
jno
xchg
push
bound
cmp
mov
mov
jmp
and
add
push
dec
fimull
std
outsl
sub
adc
ja
test
mov
push
arpl
sbb
mov
call
movsl
pop
cmp
sub
lods
jmp
push
bndstx
cmp
mov
inc
rolb
push
pop
fiadds
mov
repz
xchg
hlt
xor
adc
jecxz
mov
ljmp
pop
push
leave
ficompl
in
xor
add
push
mov
push
shl
lcall
cld
xchg
out
jl
test
sub
lcall
aaa
fs
inc
lods
shll
mov
orb
jb
cli
outsb
je
inc
mov
push
cli
xor
loopne
push
out
rcll
mov
aam
fmul
movsb
and
rol
add
std
pop
lret
ljmp
pop
leave
and
cmpsl
hlt
cmpsb
mov
movsb
and
fmull
push
jl
lock
xchg
ffreep
dec
jp
jecxz
ss
mov
mov
js
push
xor
xchg
mov
add
mov
les
inc
loope
cmc
adc
push
jo
mov
shlb
adc
stos
jle
pop
mov
shlb
inc
dec
lock
ret
ret
mov
lods
xor
cmpb
or
call
cmpsb
movsb
sbb
or
ret
movsb
aas
fcmovu
jg
rcl
dec
add
arpl
lock
mov
outsb
cmc
data16
mov
and
sub
pop
pop
adc
jb
xor
inc
in
test
or
daa
sbb
inc
mov
and
fwait
imul
mov
andb
int
dec
cwtl
enter
mov
rolb
mov
inc
push
shrb
pop
mov
stos
mov
jbe
jmp
add
jecxz
or
mov
addb
or
and
push
sarl
shl
test
inc
mov
shl
adc
cmp
pop
xorb
push
in
sbb
js
xor
add
iret
adc
mov
jo
dec
add
cmp
outsb
in
dec
fdivrs
and
lock
daa
ljmp
push
add
lods
dec
ss
or
adc
xchg
orl
push
pusha
out
fisttpl
ds
push
adc
cmpsb
cmp
cmp
inc
inc
lods
mov
xlat
aas
lods
pop
lea
cld
std
add
jg
data16
mov
ja
push
popa
jo
sbb
mov
pop
movsb
mov
push
mov
or
hlt
add
gs
and
adc
mov
les
shr
test
xchg
fsub
in
arpl
outsl
popa
inc
bnd
pop
dec
arpl
cmpsb
dec
mov
inc
push
addl
or
mov
shrb
data16
lcall
sti
clc
mov
mov
ljmp
or
xor
pusha
cli
ror
stos
push
and
faddp
cs
pop
ret
test
push
decb
mov
dec
into
sbb
lea
push
add
scas
adc
js
enter
in
adc
xorb
jecxz
jecxz
xchg
lret
dec
or
rcrl
pop
sbb
rcrb
and
adc
ret
lea
imul
jo
adc
jno
scas
mov
jmp
jp
push
inc
into
pusha
fsubs
dec
call
mov
aad
xchg
or
inc
sub
pop
pusha
cmpsl
je
sbb
adc
pop
push
hlt
pop
adc
mov
dec
sbb
in
aad
jg
pop
pushf
mov
cmp
repnz
loopne
pop
inc
inc
dec
sti
cld
dec
test
add
aas
lock
inc
ficoml
lock
fnsave
inc
movsbl
mov
xchg
push
lds
mov
or
mov
clc
mov
shrl
icebp
lods
jp
shlb
mov
int
mov
fs
out
lods
clc
filds
sub
pop
lock
cmp
pushf
std
push
stos
mov
and
mov
fisubl
pop
test
fs
jl
push
rcll
pop
jl
outsb
xchg
jbe
lahf
or
pop
xor
clc
stos
adc
mov
sub
sbb
outsb
dec
lock
sbb
jg
xchg
jge
dec
or
mov
and
and
push
lock
sbb
pop
jbe
cmp
movsl
sub
je
jecxz
mov
repnz
add
sbb
pop
mov
pusha
nop
dec
xor
jne
dec
icebp
in
nop
dec
jb
sbb
pop
fiaddl
xchg
test
mov
rcll
daa
jae
sbb
fadd
addl
xor
xchg
scas
lock
enter
adc
out
aad
shll
loopne
hlt
clc
cld
fiadds
xchg
test
mov
sub
mov
or
or
arpl
pop
mov
daa
mov
xor
sbb
rorl
addb
cltd
xchg
cmp
or
push
rcll
popa
sbb
mov
cmp
inc
sub
mov
and
dec
or
je
lods
fs
mov
cmpsl
popf
cmp
push
xchg
in
mov
jbe
jns
add
sbb
outsb
pop
mov
pop
mov
mov
ss
inc
pop
outsl
mov
ljmp
cmp
aad
mov
or
adc
rorl
and
xor
out
or
cmp
inc
and
mov
xor
in
sub
pusha
mov
lcall
lods
add
out
roll
rcrb
sbb
scas
or
in
aad
call
jmp
sub
push
and
cmp
add
cs
push
pusha
in
mov
sbb
js
add
or
and
push
scas
je
mov
and
incl
mov
vmread
sbb
pop
cmp
cmp
fsubr
out
add
push
push
cmp
push
stos
push
xchg
mov
je
jg
inc
out
jecxz
movsl
sbb
jmp
cmc
js
cmp
xchg
xlat
shl
xchg
xor
pop
xchg
add
inc
dec
imul
push
push
fisttpl
gs
test
cmp
loopne
lret
cmp
mov
xor
and
outsl
mov
add
jp
xchg
xchg
imul
inc
mov
mov
lahf
jo
mov
data16
incb
lock
icebp
dec
fs
adc
dec
xor
sub
push
push
shl
into
movb
cmpsl
loopne
loopne
pop
xchg
xchg
cmp
xor
push
or
sbbl
lret
xor
cmpsl
and
loop
or
shrb
imulb
and
xchg
mov
sub
and
out
sub
pop
sbb
xchg
inc
sbb
addr16
lahf
or
mov
adc
add
adc
sub
int
inc
xor
rclb
out
lret
push
push
lock
loop
xchg
mov
movsb
xor
es
adc
loop
sub
lods
inc
inc
push
je
aam
les
addl
test
xor
fstpt
adc
ljmp
add
mov
lret
fmull
push
or
adc
mov
jge
and
inc
pop
in
dec
inc
dec
push
sbb
shrl
jne
xchg
mov
xor
jle
popl
or
mov
imul
push
loopne
dec
call
cmp
ljmp
shlb
out
push
xchg
mov
rcr
test
lret
cmp
mov
enter
notb
shlb
jge
mov
pop
clc
popa
aam
lods
add
clc
push
fidivs
add
cmp
sti
mov
inc
push
jbe
imul
and
jae
enter
mov
stos
and
sbb
inc
lcall
jecxz
push
bound
cmpsb
mov
and
int
mov
pop
loop
rclb
inc
jo
add
push
rorl
hlt
roll
add
push
lock
push
pop
inc
pop
insl
jge
aad
jl
leave
xor
jbe
push
cmp
outsl
in
in
fmull
sbb
adc
pop
dec
xor
sub
pusha
dec
js
add
cmp
sub
sub
cmp
ret
sub
mov
or
ret
mov
mov
jo
dec
popl
pop
mov
inc
lock
lea
ljmp
int
in
sub
notl
xlat
sub
in
clc
push
pop
loope
orl
or
ds
cwtl
jge
scas
xchg
iret
call
scas
jbe
mov
ljmp
xchg
stos
sub
sub
or
mov
ljmp
fimull
clc
adc
test
dec
mov
icebp
push
mov
mov
out
std
das
ret
mov
loope
inc
xchg
movsb
xchg
es
jbe
xor
push
daa
stc
test
les
je
lds
sub
dec
xlat
sahf
sahf
sahf
into
arpl
or
aas
pusha
in
ljmp
xor
mov
jo
loopne
xor
and
shlb
shll
pop
fcmovbe
cmc
pop
or
mov
int
andb
push
pusha
movsl
and
movsb
movsb
lods
gs
loopne
mov
push
inc
mov
jno
add
das
add
sub
inc
jg
rcl
and
rorb
push
std
inc
daa
xor
or
iret
add
inc
mov
and
pop
add
lock
data16
and
aas
insb
or
and
rolb
ljmp
out
ret
aaa
ja
inc
inc
push
xor
std
xor
add
cmp
enter
add
popa
add
negl
push
aam
out
cs
add
mov
movsl
ret
and
xchg
pop
push
xchg
mov
add
add
push
sub
popf
icebp
les
cmp
cmc
lods
xchg
inc
popa
in
je
cli
lret
mov
push
jp
test
mov
movsb
add
lahf
pop
adc
mulb
popf
les
scas
sbb
mov
sbb
xor
push
in
das
cmp
jno
mov
sub
addr16
push
pop
js
je
sub
out
pop
push
sub
call
sub
sbb
cmp
jnp
mov
cs
jle
mov
xor
dec
arpl
cmp
add
xlat
push
cmpb
pop
sbb
pop
inc
xor
inc
mov
addb
or
test
pop
pop
pop
test
and
push
addr16
jnp
es
into
xchg
js
mov
fdivl
stos
mov
mov
call
mov
test
and
xor
popf
xor
push
jecxz
sub
aad
push
push
push
mov
adc
loop
cmp
aaa
nop
adc
out
popf
loope
cmpsb
xor
imul
sub
shll
add
or
loop
insb
hlt
and
jns
jecxz
mov
jmp
push
sub
clc
mov
sbbb
ds
inc
inc
add
push
dec
pop
pop
dec
out
sbb
outsl
stos
aad
ret
jno
lods
sarb
dec
xchg
xchg
mov
ja
js
pushf
imul
or
add
inc
test
jb
sbb
jae
roll
sub
test
add
cltd
and
inc
cmp
ss
dec
pusha
nop
test
pop
lret
jge
push
mov
mov
jle
mov
stos
cld
push
xor
add
bound
pop
add
push
pop
loop
and
inc
dec
loope
mov
test
add
sub
lds
push
int
les
imul
mov
out
rcl
pop
jl
jno
cmp
push
cli
mov
call
imul
push
mov
xchg
cmp
jl
adc
or
stc
mov
cmpsl
js
pop
mov
xchg
sub
pop
enter
ret
push
xchg
scas
sbb
aam
xchg
fildll
je
dec
and
and
inc
push
nop
rcll
adc
test
dec
mov
sahf
mov
loopne
test
mov
add
sbb
call
cmp
or
mov
cmp
mov
adc
xchg
clc
pop
cmp
push
rclb
cwtl
std
movsb
clc
cmp
pop
es
dec
sbb
mov
pushl
aad
ljmp
cmpsb
aam
mov
test
lock
scas
cmp
adc
jmp
sti
out
xor
scas
mov
mov
and
jp
sub
test
cmp
rcrb
cld
outsl
inc
pop
lea
push
pusha
inc
daa
enter
sti
dec
cltd
nop
lods
rcrl
inc
mov
xor
shrb
pop
or
insb
jp
xchg
imul
sti
orl
subl
call
pop
xor
out
sbb
stos
push
mov
inc
inc
add
daa
mov
jb
fwait
jl
or
mov
aam
sahf
rcrl
push
pop
unpckhps
fists
fimuls
rcrl
notb
les
fildl
in
aam
xor
aam
xlat
add
inc
jae
es
push
cli
xor
test
popa
mov
inc
adc
sub
rcr
fisttpl
ss
pop
mov
outsl
add
ret
ret
mov
ds
xor
xor
mov
xor
jp
pusha
enter
dec
sbb
sbb
or
sbb
sub
jno
jl
cmpsb
and
xchg
fiaddl
push
push
fnsave
jo
shll
stc
and
rcr
adc
cmpsb
cmc
sub
mov
lock
adc
xchg
push
push
mov
rolb
imul
cmp
jl
cmp
pop
fcomi
aad
xor
jo
movb
sarb
int3
sbb
cli
mov
or
push
cmc
fwait
into
or
and
pop
aaa
insb
lcall
push
mov
outsb
hlt
out
jno
push
jnp
leave
ja
or
push
aas
sbbb
mov
cmp
cmp
mov
dec
mov
pop
push
daa
cmp
cmc
jmp
mov
insb
push
std
loop
jo
insb
and
mov
in
mov
dec
xor
aaa
inc
roll
pop
push
jp
xor
xor
js
lds
and
ja
data16
add
adcb
xchg
mov
add
scas
inc
sbb
mov
scas
cli
les
jo
fisttpl
lret
or
mov
push
push
outsb
faddl
lcall
lods
mov
cmp
aaa
lahf
sbb
cmp
inc
push
mov
xor
mov
mov
adc
adc
inc
fcmovu
je
int3
imul
imul
test
sub
gs
int3
dec
xor
pop
cmp
xchg
and
cltd
stos
ja
push
pusha
sub
and
mov
inc
test
jbe
test
mov
nop
fldpi
fmull
decl
cwtl
mov
push
outsl
push
scas
pop
jl
imul
sub
mov
mov
ds
int3
adc
and
dec
ss
lret
subb
or
dec
scas
js
push
push
sahf
xchg
aad
out
xor
lods
pop
out
mov
es
rorl
loope
call
inc
lret
lcall
lret
xchg
and
dec
daa
push
sbb
stc
sub
fwait
adc
push
xchg
sub
gs
push
cmp
nop
rcr
inc
inc
pop
fisubl
sub
int3
pop
clc
out
shll
in
imul
rcl
lahf
mov
cs
cs
jp
aas
push
mov
das
push
mov
mov
jecxz
imul
push
cmp
xor
aad
mov
sub
xor
mov
inc
inc
fisttps
cli
xor
cmp
pushf
pop
jl
mov
mov
bound
and
and
mov
jge
sub
pop
mov
jp
mov
cmp
push
mov
fldenv
adc
inc
jo
pusha
negb
icebp
das
pop
cmp
enter
ret
push
ret
in
out
sub
dec
bswap
dec
loop
in
add
lods
dec
lea
pop
fidivrl
or
pop
das
mov
fildll
orl
decb
pop
sbb
push
repz
orl
push
add
cmovnp
int3
ja
pop
and
mov
hlt
js
jne
ret
jge
lret
aad
mov
push
push
lret
lcall
lret
mov
inc
hlt
lahf
orl
pop
shl
adc
sub
dec
imul
cmp
pop
cmp
cmc
push
nop
push
imul
add
dec
or
sahf
testl
jmp
xlat
in
sbb
imul
lods
rclb
inc
or
test
das
pop
pop
scas
je
cmpsb
js
sbb
call
push
aaa
and
mov
pop
popf
shll
cmpsl
movsb
inc
pusha
push
or
jmp
jl
pop
sub
or
lods
and
inc
loop
xor
inc
inc
rcll
cmp
push
out
cltd
push
jno
imul
loope
out
lods
ror
xor
loope
pop
or
jg
lcall
or
aad
dec
pushf
mov
es
std
mov
scas
push
out
jp
nop
jp
sahf
loop
insb
xor
pop
cmp
jge
sahf
loopne
mov
inc
push
in
push
and
ljmp
push
enter
loopne
jmp
cs
push
cs
sbb
mov
mov
js
sbb
add
jle
scas
dec
jle
test
outsl
shlb
loope
and
add
hlt
ret
and
in
call
sbb
inc
outsb
aaa
mov
cmpsl
pop
addr16
sahf
or
push
pop
imul
cmc
dec
aas
mov
push
and
cs
pop
and
hlt
xlat
xor
popa
daa
push
or
xchg
and
ja
addb
stos
je
test
insb
mov
or
daa
add
cmp
sahf
sahf
mov
dec
jae
movsb
push
mov
xchg
xor
pop
cwtl
and
sahf
ds
cld
fsubr
lahf
pop
pop
mov
outsb
adc
jg
test
dec
jmp
stc
or
jg
loope
xor
mov
pusha
imul
aas
mov
cwtl
sbb
pop
imul
sub
xchg
lret
xor
cmp
mov
or
fbstp
call
jno
lret
aaa
scas
pusha
jmp
cmpsb
mov
outsb
mov
pop
jecxz
clc
addb
pop
dec
lock
divb
es
sti
xorl
jnp
mov
fidivl
ja
orl
das
cmpsb
cmp
lods
inc
jns
nop
loopne
xor
inc
das
push
pop
sbb
sbb
xorb
cld
inc
imul
pop
pop
push
push
ss
cli
lods
ret
or
dec
outsb
push
mov
sub
cmp
add
fcomi
jmp
adc
fimull
and
pop
add
ds
add
loopne
dec
rcl
inc
test
push
or
fiadds
sub
push
movsl
jmp
or
rorb
pop
jp
or
mov
mov
push
mov
xchg
ljmp
and
popa
adc
dec
pop
jae
dec
loopne
das
jl
mov
jnp
or
inc
shr
mov
jmp
subl
push
push
xor
adc
mov
cmp
xchg
xchg
mov
inc
lret
inc
push
mov
bound
jecxz
xchg
test
shll
add
cli
aad
lods
jb
dec
sub
mov
sub
mov
push
and
cmpl
xchg
ror
cmc
jno
inc
xchg
out
inc
sbb
fsubp
das
icebp
cmp
xorb
aaa
push
mov
mov
out
sahf
cli
add
fsubrl
add
cli
loopne
rcrb
enter
xor
cwtl
lods
add
adc
cltd
mov
inc
push
repnz
jo
test
out
lea
ljmp
pop
ret
pop
inc
xchg
mov
std
or
shrb
aas
xor
dec
inc
and
mov
repz
test
hlt
dec
pop
sar
or
or
add
rcl
cmpsl
jnp
sbb
dec
or
call
mov
cmp
xchg
testl
cmp
jb
mov
or
jnp
cmpsl
mov
pop
or
pop
pop
xchg
or
adcl
xor
jno
out
mov
xchg
outsl
jno
sub
clc
lods
rolb
mov
into
sbb
fwait
out
dec
in
xor
loope
jg
subb
pop
je
xor
push
iret
out
jno
scas
ss
lahf
icebp
add
add
jmp
popf
or
pusha
adc
adc
mov
pop
pop
sbb
push
inc
mov
fadds
xchg
lcall
xor
test
fnstenv
popf
mov
call
enter
inc
enter
mov
loopne
push
jae
sbb
push
xchg
cmp
loope
daa
negb
mov
or
inc
sarl
in
mov
sbb
lods
loopne
lods
adc
lea
aaa
jnp
jbe
clc
and
mov
mov
mov
test
in
repz
rorb
xor
cmp
outsl
push
sbb
xchg
dec
xchg
and
cmp
test
push
call
push
and
cli
push
add
aad
inc
pusha
sub
clc
aad
call
aaa
xchg
push
fsubrl
movsb
sbb
xchg
inc
dec
ss
mov
jno
movsb
lcall
push
push
jge
push
sahf
push
or
add
dec
lds
xchg
ds
divl
pop
hlt
clc
stc
pop
cmp
inc
fcompl
repnz
pop
mov
jae
outsb
or
add
sbb
mov
xor
scas
xor
pop
xor
imul
dec
insb
cltd
jge
insl
jmp
push
fcoml
mov
xorl
push
in
xor
pop
cltd
icebp
adc
dec
jg
mov
lods
out
mov
scas
xor
insb
add
jle
dec
sub
nop
jb
out
pop
and
xchg
adc
fcompl
mov
mov
cli
inc
lea
inc
cmp
in
lock
ja
add
leave
in
cmp
repnz
xchg
add
aas
jge
fadds
and
rorb
xor
test
xor
or
pop
mov
fstp
pushf
mov
sub
mov
loope
sarb
mov
xchg
cli
test
lods
lods
inc
xlat
cmp
cmp
fisubrl
es
add
incb
sbb
or
out
pop
add
lahf
cmp
and
shll
nop
leave
fcomps
stos
inc
cwtl
cld
jb
sahf
nop
mov
push
sar
xchg
push
xchg
cmp
xor
and
inc
adc
xchg
lds
cmp
or
hlt
jg
pop
mov
and
lret
jp
inc
icebp
mov
stos
and
aam
or
mov
bound
push
push
jne
sub
lahf
or
pusha
push
mov
loope
fisttps
sahf
xor
je
ja
shrb
shl
pop
lret
int3
jle
fiadds
ja
dec
sbb
mov
nop
test
dec
or
push
mov
out
dec
rcll
xchg
lahf
hlt
rorl
pop
in
outsb
jb
popa
lock
push
xchg
out
and
aas
pop
shr
je
mov
dec
adc
les
lret
jbe
adc
dec
adc
jp
mov
push
add
xchg
fcomps
cmp
in
xor
cmc
testl
sub
jno
xor
fsubrs
dec
pop
mov
shrb
pop
cli
movsb
pop
ja
mov
popa
daa
sahf
push
and
mov
xor
push
and
jae
mov
nop
movsb
mov
repz
mov
aaa
icebp
imul
dec
mov
sysexit
xchg
lock
jbe
pop
pushf
jne
or
or
inc
fisubl
das
out
pop
std
mov
pop
cmpsb
and
incl
jmp
jbe
nop
loopne
xor
pop
push
subl
fwait
ret
sti
std
in
call
aaa
mov
mov
loop
pop
mov
pop
aam
fisttpll
mov
mov
in
xchg
rorb
ja
jne
and
mov
addr16
sahf
sbb
cmp
hlt
pusha
push
rcrb
test
adc
add
mov
testl
xchg
inc
fcoms
mov
push
push
repnz
xchg
dec
int
ret
scas
shll
das
mov
push
ja
add
rolb
outsl
aas
test
in
adc
and
add
cmpb
addl
nop
pop
ret
cld
sub
loop
push
mov
cmp
call
jae
test
mov
jp
cmp
fisubl
ds
xchg
cld
inc
push
xchg
mov
pop
mov
nop
pop
dec
les
hlt
xor
push
lret
mov
pop
lea
pop
icebp
and
fisubrs
mov
xor
adc
push
mov
mov
push
inc
lods
je
loopne
dec
push
or
sbb
inc
arpl
js
popf
cmc
adc
push
inc
nop
sub
lea
cltd
push
fildll
fldenv
push
stc
or
out
lods
xchg
jb
aaa
and
pop
js
cmp
jo
xchg
test
xchg
lds
mov
cmp
push
push
push
aam
clc
lock
xor
sub
call
push
cmp
adc
fisttpl
lds
aas
pushf
loopne
or
cmpsl
sub
in
popf
sahf
jbe
adc
xchg
xchg
mull
sub
insb
adc
and
and
push
popf
jle
sbb
fwait
lahf
or
push
pop
add
scas
sub
rorb
fldcw
dec
ds
add
rcll
xor
fisttpl
xchg
add
push
mov
hlt
mov
stos
add
fimull
jmp
das
into
add
fnstenv
dec
pop
lods
push
push
mov
int
nop
pop
mov
cmpsl
sti
pop
out
mov
dec
xchg
out
cmp
pop
js
mov
mov
sbb
pop
xchg
and
ljmp
xchg
mov
dec
shll
pop
clc
adc
sub
mov
pusha
jg
imul
or
jnp
fisubrs
test
shlb
add
and
inc
fnstenv
sbb
xor
push
cmp
lods
cmp
scas
imul
mov
push
adc
push
cmpl
sub
jecxz
shrb
mov
inc
lods
mov
loopne
fwait
xor
xor
loope
sbb
cli
sbb
out
jns
mov
lds
ds
add
loop
add
and
es
mov
ret
adc
jle
pavgb
adc
cmp
jmp
shrb
pop
mov
cmp
xor
pop
add
cmpsl
in
or
mov
scas
inc
fcoml
pusha
sbb
pop
daa
adc
in
xchg
sahf
loopne
cs
xchg
cli
data16
mov
enter
mov
mov
sbb
add
aaa
data16
xor
shrb
push
icebp
mov
inc
and
data16
daa
aas
jp
or
ret
sub
xchg
pop
andb
loopne
or
add
insb
xor
int
add
loop
add
pop
scas
ljmp
scas
xor
pop
mov
xlat
stos
inc
cld
cs
dec
adcb
lds
rcll
add
insl
jl
cmpsb
scas
fidivrl
fiaddl
rol
add
cmp
imul
loop
js
shr
push
jo
and
cmp
adc
push
push
adc
jle
mov
add
sub
test
xor
mov
dec
sub
mov
in
fmulp
pop
push
pushf
pop
clc
loopne
dec
pop
add
and
push
adc
out
aaa
stc
adc
popf
fmull
xor
and
sub
movsl
rol
add
and
roll
movsl
cmpsl
or
jbe
mov
sub
sub
push
pop
fists
movsb
mov
movl
paddd
es
test
inc
roll
test
inc
add
mov
jl
cmp
imul
cmp
sbb
lock
adc
mov
pusha
cmp
fisubrl
sbb
popa
mov
mov
inc
xchg
fistps
outsl
pop
jecxz
rcrb
lahf
clc
push
or
add
loopne
shl
repnz
or
jae
adcb
incb
stos
mov
sbb
aas
scas
aad
add
lods
push
lahf
and
js
mov
pop
leave
hlt
scas
dec
idivb
popf
xor
cmp
out
test
cmp
add
icebp
cld
fs
imul
sub
cs
jb
fisubrs
and
pop
ljmp
loop,pt
mov
rolb
push
adc
dec
add
ficomps
daa
popa
add
jge
ret
jae
aad
and
fs
js
push
cli
icebp
pop
sbbb
in
sbb
lds
out
addl
stc
push
es
jne
loop
shrl
sub
repz
outsl
roll
add
scas
hlt
jmp
sub
int3
jmp
mov
test
and
push
push
hlt
sbb
jne
popf
dec
mov
fld
and
cmp
pop
sub
loop
pop
adc
sub
mov
mov
add
fmul
push
mov
push
cmp
push
mov
data16
cltd
adc
push
out
jge
jnp
test
sbb
cmpl
loopne
pushf
dec
pop
xlat
icebp
dec
jg
data16
mov
pushl
jne
mov
js
sahf
imul
dec
icebp
mov
fmuls
cmpsb
sbbb
cmp
aam
stos
cld
xchg
stos
cmp
mov
mov
clc
in
push
inc
mov
cmpsl
lcall
cmp
or
add
xchg
mov
cmc
cs
sub
and
pop
call
pusha
jnp
xor
inc
jp
push
mov
push
ficomps
arpl
cld
push
into
nop
out
mov
sahf
jp
push
out
xor
notl
inc
imul
push
aad
icebp
mov
ja
pop
mov
xlat
addr16
xor
xor
mov
sub
lods
mov
dec
stc
push
mov
and
cmc
mov
int
adc
std
pusha
mov
pop
clc
sub
jno
xchg
movsb
dec
cmp
cmp
xchg
mov
push
nop
rcl
scas
mov
mov
testl
or
mov
test
rcll
add
jb
add
jae
cmpb
and
jo
sbb
inc
pop
mov
xor
push
and
arpl
inc
dec
repnz
imul
xor
test
add
push
loop
inc
nop
fmull
and
lock
add
lock
xor
fiaddl
fldl
push
mov
xchg
out
test
fnstenv
add
push
out
ffreep
inc
loope
mov
push
insl
adc
adc
ljmp
jbe
leave
repnz
xchg
add
mov
jb
das
inc
daa
pop
loopne
and
pop
fidivl
stos
dec
pop
stos
push
xchg
pop
mov
inc
cpuid
or
push
dec
aas
lret
adc
adc
mov
fimuls
or
movb
cld
inc
out
sbb
sub
jne
stc
or
pop
mov
stc
stos
push
push
filds
sub
in
cwtl
mov
inc
rcll
icebp
and
fmulp
dec
out
loopne
mov
xlat
mov
fwait
rclb
push
mov
lahf
mov
add
fcmovnbe
push
imul
or
push
sbb
sub
lea
pop
movsl
rcrb
loop
mov
lret
pusha
nop
ret
pop
jo
lds
outsb
cmpsb
fisubrs
cwtl
mov
call
mov
addr16
pop
faddl
mov
stos
push
call
pop
into
aaa
pop
arpl
jp
in
pop
jecxz
js
rolb
cld
xchg
mov
cld
iret
aas
outsb
jno
push
popf
mov
int
inc
insb
call
mov
dec
js
rolb
jb
out
add
jecxz
shll
cli
in
sbb
sbb
insb
mov
filds
push
lahf
int
cmpsb
neg
ret
sbb
mov
adc
stos
push
cmpsl
shll
dec
push
adc
es
and
dec
sti
jo
jp
push
scas
cmovnp
hlt
pop
call
cvtpi2ps
inc
cmp
mov
fisubl
aam
dec
andl
nop
enter
adc
xor
add
int3
and
cmc
out
movsb
mov
sarb
sub
mov
cmpsl
test
scas
add
data16
dec
aam
mov
adc
adc
sti
xor
aam
mov
jo
test
jmp
std
jnp
out
arpl
sub
push
pop
dec
and
xchg
inc
mov
int
push
sbb
imul
rclb
jne
hlt
cmp
rcrb
add
popf
outsb
cmp
inc
pop
xor
adc
pop
ret
pop
mov
aaa
arpl
scas
inc
mov
sub
sub
sbb
and
loopne
pusha
ret
jne
mov
pop
pop
je
pop
cmpsl
mov
mov
push
cld
xor
adc
mov
xchg
mov
pusha
call
adc
test
and
xchg
dec
out
mov
dec
out
rorl
push
jne
aaa
or
ret
mov
ljmp
stos
and
sbb
cwtl
test
pop
push
test
rolb
pusha
push
mov
into
in
xor
mov
jb
inc
sub
scas
cmp
xchg
loope
add
inc
and
js
fs
lock
or
loope
notl
or
or
or
aaa
sbb
or
dec
lcall
pop
cmp
xor
xchg
test
mov
fsubr
add
fiadds
lds
arpl
cmp
sub
adc
notb
and
enter
add
shll
cltd
pop
or
cmpsb
or
push
pop
adc
movsb
jle
and
or
cmp
dec
out
and
dec
cltd
paddsw
lea
or
scas
xchg
lcall
cmp
mov
mov
sbb
inc
mov
dec
cmp
mov
cs
sub
fcoms
cli
loope
inc
xchg
jnp
lods
mov
out
sbb
mov
pop
mov
cmp
popa
stc
lahf
jo
fisubrl
push
xchg
ret
cmp
gs
push
push
cmpsb
cmp
hlt
or
pop
adc
adc
sbb
xchg
or
xor
pop
xor
mov
mov
mov
lock
std
inc
xchg
and
xor
daa
in
jo
cmp
jae
outsb
cmpsl
or
jge
add
lret
push
je
push
hlt
or
push
xchg
pop
test
sub
sbb
loope
xchg
je
push
xchg
adc
push
mov
pop
bound
pop
aad
mov
cld
hlt
cmp
subl
mov
jns
or
lret
sub
les
pop
sub
mov
mov
xor
aad
jp
push
jno
ret
aad
xchg
loope
mov
mov
cmc
pop
jno
mov
lcall
xor
cmp
int
mov
fwait
jbe
xchg
fbld
cmc
xlat
loope
xor
shlb
push
xorb
jge
cmp
cwtl
sub
and
es
push
mov
push
call
clc
adc
in
in
mov
pop
or
xchg
push
sahf
daa
popf
insb
add
xchg
mov
aad
imull
cs
mov
push
leave
pop
rcrb
icebp
and
and
add
ds
sub
outsb
jecxz
mov
enter
js
loop
std
arpl
or
xchg
xchg
out
adc
cltd
xorl
jl,pn
cltd
out
fs
add
cmp
out
dec
clc
xchg
cli
xchg
adc
dec
decl
clc
add
xchg
mov
shll
push
lds
fidivl
or
pushf
jmp
cld
xor
sub
xchg
dec
addb
rol
mov
lds
out
out
fnstenv
xor
jge
insl
lock
and
add
sub
es
xlat
push
jb
sub
in
adc
sub
mov
or
mov
gs
pop
out
inc
mov
icebp
mov
shlb
out
and
inc
mov
add
ret
mov
addps
jmp
movsb
aas
cmc
movsl
cmp
inc
adc
pop
insl
jecxz
mov
stos
inc
call
xchg
gs
mov
inc
js
push
sbb
sarb
lods
fbld
loop
xor
movb
or
mov
mov
xchg
fcoms
loope
push
mov
xchg
in
sbb
ror
insl
fidivrs
shlb
mov
call
jmp
jge
inc
call
out
test
mov
jl
cmp
pop
jecxz
aam
insb
clc
int3
scas
pop
cli
push
hlt
sarb
repnz
pop
inc
movsb
imul
inc
sub
ret
out
xchg
ja
and
in
leave
arpl
enter
nop
push
lahf
sti
test
xlat
ficompl
insl
jno
dec
test
mov
or
fcompl
xor
popf
xchg
jp
pop
shl
xor
push
aam
push
and
shrl
frstor
dec
pop
rolb
fs
and
daa
or
sub
jg
popf
xchg
pop
and
fidivrl
sarb
xchg
repnz
in
adc
ja
adc
cmc
push
in
into
loop
cmp
mov
sbb
in
cld
sub
lods
sti
pop
adc
inc
jae
xor
push
push
add
push
mov
fs
pop
test
decb
fsubl
cmpsb
popa
jne
jnp
ljmp
jo,pt
adc
sub
sahf
push
test
cmp
mov
lahf
pop
push
in
push
jmp
push
jo
les
lret
inc
cmpsl
rcl
or
sahf
bndldx
push
std
add
lcall
mov
adc
inc
xchg
shrb
in
jl
out
mov
cld
aam
push
jae
push
pop
fs
sbb
lods
iret
cmp
in
icebp
dec
fld
pop
and
mov
mov
sub
loopne
jp
stos
mov
test
push
iret
adcb
adc
xlat
bound
xor
mov
xchg
addr16
push
or
inc
inc
mov
loop
adc
inc
pop
add
sub
rcr
nop
and
push
pop
or
push
daa
cs
ret
dec
push
mov
hlt
loopne
cmp
negl
mov
sub
mov
lods
xor
push
dec
push
cmp
sbb
pop
into
pop
in
jge
or
mov
xor
imul
mov
js
xchg
shl
out
jo
int3
cld
cmp
adc
inc
test
out
aas
xchg
and
jb
push
dec
jno
les
sub
pop
lahf
xchg
xchg
mov
ret
add
aam
movsb
nop
mov
add
dec
fsubr
rolb
jge
or
repz
adc
outsl
cwtl
mov
or
xor
insl
xchg
mov
sub
daa
out
push
and
xchg
jne
mov
fwait
out
jne
mov
inc
mov
loop
ret
pushf
cmpb
xchg
pushw
enter
lcall
pop
cmpsl
mov
jp
xchg
int
mul
clc
pop
pop
nop
pusha
mov
ror
mov
sub
push
inc
xchg
sbb
mov
and
inc
and
adc
popa
clc
sar
sbb
pop
pushf
mov
aam
push
xchg
fimull
pop
sti
xor
ds
loope
inc
rcrb
jbe
iret
dec
fsub
test
pushf
adc
ret
pop
aas
sub
and
jmp
or
das
or
and
js
roll
push
mov
je
xchg
xor
dec
or
hlt
dec
xchg
mov
aaa
push
adc
adc
add
push
nop
pop
add
test
inc
and
bound
out
decl
aaa
aaa
divps
jbe
in
test
dec
sahf
cmp
ds
aaa
pop
inc
pop
push
shlb
jmp
pop
cwtl
outsb
sub
je
imul
push
xchg
jns
mov
add
push
in
push
fsubp
pop
sahf
cli
insb
outsb
js
sarb
popf
adc
orl
fwait
push
mov
xchg
repnz
push
sbb
xchg
fdivs
sti
jo
fcomip
mov
cmc
xor
jns
orl
lret
inc
add
rorl
pushf
add
call
mov
dec
fucomp
xchg
sub
test
mov
jl
stos
subb
sub
push
clc
lahf
pop
pop
sbb
add
mov
inc
mov
fistl
adc
or
ja
jne
out
xchg
loopne
xor
outsb
push
push
push
inc
scas
sbb
ljmp
jmp
cmp
sub
inc
mov
ss
sbb
mov
popa
fwait
aad
xchg
out
mov
push
das
test
daa
stos
popf
lret
adc
ds
mov
andb
sbb
das
mov
out
mov
jg
arpl
cmp
pop
jae
or
jmp
idivb
popa
inc
rcl
pushf
xchg
nop
xor
xchg
js
mov
push
mov
mov
or
int
das
mov
int3
adc
xor
test
mov
stos
cld
test
mov
loopne
jbe
inc
pop
sbb
shrb
or
xchg
add
outsb
pop
pop
cmp
lds
and
aas
jp
addl
push
sbb
dec
add
cs
into
or
sub
fldl2e
push
mov
lds
mov
shrb
mov
stos
popl
fs
lret
loop
inc
mov
mov
fwait
mov
push
je
xchg
pop
pop
add
and
or
mov
rcl
and
stc
test
adc
mov
sbb
test
mov
enter
loope
ljmp
fdiv
inc
and
mov
push
pop
fimull
movsb
hlt
pop
mov
gs
push
dec
or
dec
jae
in
sahf
cmpsl
cmp
dec
cmp
jae
andl
xlat
mov
fwait
jns
stos
cmp
enter
test
aaa
cltd
andl
icebp
loope
or
xchg
rcll
inc
jmp
add
xor
add
std
xchg
dec
xchg
fwait
lcall
test
dec
xor
xor
fdivrp
aad
in
pop
adc
pop
shlb
dec
lahf
pop
add
add
push
mov
cmpl
scas
mov
out
wrmsr
jp
xor
inc
cli
lcall
add
inc
enter
pusha
loope
incl
pop
cld
adc
dec
addr16
ja
ret
pop
sub
jno
dec
in
jne
mov
fs
pop
lret
ja
xchg
cli
lock
in
rorb
fldln2
ret
xchg
test
xlat
sarb
bound
push
push
sbb
mov
and
add
cs
push
xchg
add
inc
pop
and
pop
pop
loopne
xlat
ljmp
sub
cmpsl
loopne
adc
rclb
pop
cwtl
lea
aam
xchg
cmpb
xchg
push
stos
dec
aam
adc
mov
add
enter
or
pusha
inc
jge
clc
lods
xchg
in
sub
sub
mov
jecxz
loop
pop
inc
pop
imul
iret
vcvtps2dq
cld
mov
jle
dec
jno
mov
dec
xchg
subb
je
js
cmc
dec
roll
outsb
fistps
lret
xchg
hlt
sub
push
sbb
movsl
sahf
add
push
popa
cmpsl
ds
lods
std
xchg
ds
loop
xchg
pop
imul
mov
sbb
mov
decb
rorl
adc
mov
cmp
adc
dec
mov
pop
rcl
outsl
sub
push
inc
adc
cmp
addl
mov
jnp
arpl
sbb
pop
push
sub
dec
shrl
add
add
push
pop
mov
inc
cmp
lahf
jns
push
rolb
cmpsb
cs
dec
inc
stos
imull
rorb
sbb
mov
lahf
sahf
pop
jns
lods
mov
insb
xor
xor
xchg
es
and
push
adc
aas
xchg
inc
movsl
push
lods
stc
shr
push
call
cmovle
es
test
jp
lahf
ret
mov
repnz
in
sub
out
clc
push
pop
and
jle
sub
jge
ds
or
add
or
or
xchg
jg
or
out
std
adc
add
push
std
xchg
push
test
mov
into
in
mov
mov
dec
iret
pushf
cmp
sub
adc
push
jg
int3
xor
jge
push
orb
push
cmp
test
or
sbb
cmp
inc
dec
xchg
popf
adc
fwait
ljmp
pushf
fidivs
enter
mov
mov
lods
mov
cmp
mov
xchg
in
in
and
or
or
jnp
inc
cmp
cmc
xor
negl
clc
pop
movsl
mov
dec
stos
nop
add
add
stos
daa
xor
mov
outsb
fwait
mov
mov
aam
ljmp
aam
xor
arpl
fstl
hlt
add
enter
ja
inc
shll
push
shrl
adc
xor
sub
mov
push
movsl
in
add
lds
dec
or
cli
int
sbb
je
pop
sub
orl
int3
sub
jl
adc
and
or
inc
loope
sbb
in
jns
cld
ret
scas
test
sahf
lds
lock
sub
jb
xchg
lods
in
add
test
clc
fs
enter
out
or
addr16
xlat
movsb
pushf
mov
lea
addb
inc
in
and
pushf
dec
inc
mov
dec
ffreep
xor
call
outsb
out
movsb
dec
inc
repz
mov
mov
pop
xor
int
xchg
aam
xor
ret
hlt
inc
cmp
out
add
pop
sub
jmp
cmp
and
lea
cmp
orl
outsl
test
std
cltd
or
test
ret
jl
push
shll
xchg
xchg
sub
jo
push
sarb
movlps
push
popa
push
sub
add
enter
xlat
outsb
pop
lods
push
lods
dec
sbbb
inc
fst
add
fs
jnp
leave
fiaddl
adc
add
and
jo
and
iret
mov
cld
adc
inc
jo
or
push
subl
push
sbbl
loop
add
push
add
inc
mov
cwtl
sbb
dec
insb
and
cmp
pop
jae
adc
mov
ljmp
pop
and
adc
js
sarl
imul
push
inc
inc
popf
sub
stos
in
mov
dec
les
mov
mov
test
cmp
xor
ret
inc
dec
jb
mov
mov
jae
and
push
leave
fcomps
bound
lcall
jge
loop
xor
pop
add
sbb
lock
ds
push
in
or
ret
xchg
mov
sbb
jne
xchg
or
mov
xorl
movsb
pop
and
sar
fwait
jl
adc
cmp
std
mov
and
ds
out
jne
and
fwait
lods
jg
dec
popf
adc
test
pop
mov
xchg
aaa
push
fisubl
add
sbb
inc
js
xchg
mov
orl
test
lret
sahf
pop
xor
jne
sbb
and
push
lds
lahf
test
out
push
cli
add
cltd
scas
in
push
push
push
int
push
sub
es
mov
cmpl
cmp
pop
mov
push
inc
mov
in
jne
lea
shrb
loopne
pop
hlt
adc
push
cmpsl
pop
movsl
inc
dec
je
adc
insb
rorb
aam
popa
jl
leave
out
mov
aad
mov
ficoml
aad
icebp
imul
clc
pop
dec
add
dec
loop
push
xchg
leave
and
aam
dec
jne
stos
xchg
incl
js
cmc
pop
jne
popf
ja
dec
push
xchg
and
lret
jnp
dec
pop
imul
cmpsl
adc
mov
imul
pop
jle
ret
das
jb
andb
pop
pop
mov
cwtl
push
push
repz
lea
mov
cli
clc
sbbb
pop
loopne
mov
pop
add
adc
outsl
repz
jmp
mov
mov
mov
pop
shlb
dec
mov
inc
aam
add
movsl
push
lock
pop
mov
jmp
and
adc
shr
pop
cmp
out
cmp
es
jle
cld
shlb
mov
sub
cmp
push
inc
inc
lods
fwait
les
inc
xor
mov
lods
cmpsl
xchg
je
int3
xor
bound
mov
aad
mov
jmp
push
fwait
sbb
loopne
outsb
test
in
cmp
lock
stos
lcall
mov
mov
mov
push
cmpsb
popa
hlt
leave
rclb
push
or
mov
mov
loope
adc
push
insb
mov
cmpsl
filds
icebp
xor
fildl
ret
lret
push
stos
dec
in
mov
pop
paddb
add
jo
in
mov
xorb
je
loopne
push
pop
inc
sbb
xor
or
mov
mov
mov
xchg
cmp
test
ret
jmp
in
icebp
add
pushf
inc
mov
pop
xlat
test
sarb
mov
mov
push
and
sbb
out
fdivrl
pop
inc
inc
jnp
push
dec
inc
lds
mov
ret
dec
push
fnstsw
scas
stc
sahf
fcomps
fisttpll
movsb
pushf
inc
cmpb
fcoms
inc
pop
pop
jl
icebp
enter
jb
jo
sbb
xor
inc
add
iret
mov
dec
mov
insl
movsb
es
ds
sbb
cwtl
jl
pop
test
gs
pop
ds
or
sbb
xorl
xchg
mov
jbe
movb
nop
jb
outsb
popa
ljmp
icebp
loopne
xchg
hlt
je
pusha
xor
jnp
xchg
punpckldq
test
test
sbb
mov
inc
add
and
imul
popa
sub
cld
adc
add
mov
daa
aaa
test
ret
lret
and
cmpsb
push
enter
lcall
clc
rolb
lock
inc
or
lock
dec
add
push
ret
push
sbb
imul
pop
lcall
push
fwait
lahf
adc
aaa
mov
adc
jp
sbb
mov
push
in
adc
cmp
add
mov
js
inc
add
js
adc
jbe
pop
or
mov
mov
lcall
xchg
pop
and
add
xor
xor
fiadds
fdivp
dec
nop
jecxz
nop
mov
outsb
adc
fcoms
roll
jb
xchg
cmpsl
cli
les
outsb
pop
ret
and
pop
scas
movsb
pop
cmp
xchg
leave
loope
sub
push
inc
ds
xchg
xor
mov
sbb
ja
test
call
mov
pop
gs
lods
pop
movsb
or
test
xchg
in
les
ret
enter
rcrl
push
sbb
arpl
ljmp
mov
cld
add
xor
dec
sbb
mov
inc
arpl
ja
cmc
lcall
cmc
pop
and
inc
jnp
mov
sub
inc
mov
cmp
cli
mov
lcall
cmpsl
inc
loop
orb
inc
add
insl
lcall
and
rcr
pop
add
mov
cmpl
sbb
out
mov
outsl
push
xchg
call
int
repnz
rcr
leave
sbb
pop
call
adc
les
adc
jge
addr16
jle
xchg
add
popa
and
inc
daa
dec
xor
push
ret
out
lods
jp
call
jb
cs
loope
xor
jns
sbb
inc
insl
jl
pop
out
nop
rolb
add
psraw
aaa
add
sbb
bound
sub
cmpsl
or
ds
ds
adc
xor
or
aas
cli
or
lcall
push
dec
pusha
and
rcll
enter
les
or
addr16
and
xor
or
outsl
cwtl
xchg
push
jl
add
push
insb
data16
xor
ficompl
fildll
jp
test
sub
cwtl
add
push
movsl
not
loop
dec
and
lock
aas
ss
or
ljmp
mov
aas
dec
push
repnz
pop
pop
scas
mov
dec
in
push
inc
cwtl
rolb
mov
dec
jbe
repz
adc
xor
sbb
mov
or
loopne
xor
push
push
mov
push
js
lea
insl
inc
mov
stc
mov
outsb
xchg
mov
sub
xor
mov
fstpt
sub
fstl
mov
pop
call
push
push
ds
lock
cmpsl
lahf
gs
jno
pop
test
int3
sbb
cld
pusha
shll
xor
ljmp
lea
mov
cmp
pop
shrb
pop
inc
cmp
loop
jl
mov
xor
mov
and
mov
xor
pop
cmp
pop
pop
sbb
test
jg
xlat
je
das
inc
dec
pushf
sti
pop
mov
or
cli
adc
cmp
clc
or
lock
jl
call
and
into
lock
shll
dec
sub
std
xor
push
xor
push
bound
mov
aaa
mov
mov
fdivl
jbe
adc
sub
rorl
cwtl
sarl
jg
or
or
dec
pusha
or
insl
xor
das
mov
mov
lods
or
stc
stc
adc
push
aam
cld
xlat
adc
cmp
jle
bound
mov
sub
jmp
jge
repz
xor
dec
xor
das
lcall
mov
rcll
sahf
test
shll
cwtl
mov
imul
inc
roll
mov
add
pusha
cltd
and
mov
pop
popa
orb
and
add
xchg
cmp
and
mov
lahf
pop
jecxz
mov
push
imul
sub
hlt
pop
jge
ljmp
xchg
outsl
icebp
push
pop
pop
les
push
jo
mov
aas
daa
lret
sarb
out
jbe
iret
pushl
mov
scas
hlt
xchg
cmp
push
cmpsb
sbb
mov
dec
fwait
insb
fisttpll
hlt
pop
mov
je
movsb
fimull
shrb
and
xchg
inc
or
iret
jbe
fldt
and
shll
pop
mov
adc
int
scas
xchg
les
pop
fcoms
faddl
sbb
out
add
js
push
test
push
js
pop
xor
inc
add
loop
cmp
pop
push
hlt
xorb
rol
lret
push
jmp
mov
push
lds
inc
or
movb
sub
xlat
dec
out
mov
pusha
imul
shl
jo
xchg
es
sub
pop
lahf
into
cmp
inc
jmp
dec
ret
aam
and
cmp
and
dec
in
push
cmp
sahf
ret
push
mov
fs
test
loope
imul
pop
jl
fdivl
into
mov
clc
pop
adc
sub
mov
sub
adc
js
push
push
shlb
inc
inc
andl
loope
mov
test
inc
es
inc
in
jmp
arpl
sahf
das
aam
mov
je
fildll
xor
mov
fadds
cmp
out
loop
and
test
sbb
lahf
mov
or
push
push
clc
vcmpps
lea
jle
mov
stc
lret
xor
push
fildl
sub
ja
push
and
shl
out
mov
scas
push
dec
cmpb
xchg
fadds
mov
lea
andl
repnz
xchg
aas
add
enter
pop
orb
push
std
outsl
inc
inc
mov
shrl
ret
pop
cmpb
cltd
mov
jle
and
in
xor
out
repz
mov
fwait
add
pop
xlat
push
add
xchg
xchg
pusha
popa
mov
imul
ds
outsl
or
lock
ret
push
push
scas
jle
mov
inc
xor
in
cmc
add
mov
fwait
icebp
pop
das
out
or
out
repnz
shl
loopne
cli
add
rcrl
rolb
movsb
mov
insb
mov
ret
pop
mov
xchg
clc
movsl
adc
push
mov
add
es
pushf
add
push
sbb
cmc
mov
mov
or
shll
jb
cmc
pusha
push
gs
orb
aad
and
cmpsl
mov
movsl
lds
sub
ds
in
mov
add
insl
cmp
xlat
aaa
mov
aam
pop
adc
stc
shrb
push
es
ret
popf
fs
dec
add
outsl
cld
jno
out
div
sbb
jmp
mov
ret
sub
fdivl
lds
call
cmpsl
mov
push
push
sbb
loope
fnstsw
pop
popa
movsb
pop
jp
mov
jecxz
mov
jp
inc
pop
in
pop
cmp
jmp
pop
jl
add
fdivrs
and
sub
push
pusha
push
jae
imul
fs
ja
mov
jne
imul
int3
or
push
daa
jbe
test
and
lahf
pop
aam
sbb
cmpsl
cltd
lea
popf
push
mov
repz
lret
sbb
inc
test
push
and
inc
jp
mov
fcmovb
arpl
xor
sbb
cmpb
rclb
out
dec
pop
dec
xorl
ficomps
add
cmp
cwtl
mov
insl
sub
push
or
cli
clc
xchg
mov
ss
jg
inc
cmc
sub
jp
add
add
ljmp
push
jecxz
or
fildll
xor
xor
cmp
sub
cltd
jns
ret
sbb
ret
add
scas
mov
pushf
add
jle
and
mov
jl
mov
pop
lret
ja
rorb
mov
in
xchg
push
adcl
pop
cmp
mov
mov
enter
add
lods
mov
pop
and
fmull
ror
repnz
fwait
add
stc
or
jnp
and
mov
stos
mov
lea
mov
xlat
inc
xchg
sahf
push
and
mov
das
xor
and
mov
scas
les
movsl
push
push
icebp
sub
adc
fisttpll
xchg
jne
inc
cld
mov
inc
mov
pop
dec
inc
shl
push
jb
adcl
shrl
cld
imul
xbegin
jne
xchg
ret
loop
icebp
xlat
int
mov
sbbb
xchg
and
or
lock
dec
sbb
jnp
or
fidivrl
repnz
push
push
add
jp
js
js
fbld
cmpsl
push
sub
adc
xor
inc
or
and
and
mov
xor
in
push
out
outsb
xor
xorb
mov
push
sub
cmc
lock
pop
mov
xor
jo
enter
popa
pusha
jge
lods
lcall
mov
cmp
imul
arpl
sub
ret
icebp
xor
lock
sub
or
ss
pop
in
push
and
sbb
mov
and
pop
std
ret
clc
add
or
adc
pop
adcb
inc
push
insb
mov
daa
inc
popa
test
repnz
add
sbb
sti
stc
mov
clc
add
and
add
out
xchg
push
lret
test
and
adc
xorl
imull
aas
lds
pop
xor
xchg
sar
shrb
gs
xchg
movsb
cmpsl
pop
test
adc
leave
cltd
cld
sub
les
leave
loop
imul
nop
imul
and
test
lea
pushf
loope
inc
sti
ds
and
cmp
pusha
push
dec
test
paddsb
pop
shrl
pop
mov
and
lods
ljmp
add
shrb
sub
shlb
pushf
xor
and
gs
jb
popa
pushf
ret
fists
out
loopnew
imul
filds
lcall
mov
rolb
xchg
test
rcl
cmpsl
mov
push
xor
mov
dec
xor
pop
jmp
mov
subb
inc
stos
lret
sbb
and
nop
xchg
pusha
je
int3
inc
ret
jne
cmp
ds
inc
rcl
sub
in
or
jge
loopne
gs
sti
test
call
sbb
fwait
sti
js
inc
jns
xorps
and
jno
and
xorb
test
push
jle
je
ret
ret
or
push
cmc
sarb
je
repz
dec
fisttpl
adc
inc
sbb
inc
jp
cmp
and
rorb
sub
mov
out
push
adc
dec
jge
ss
aas
inc
mov
addb
mov
pop
cmpsl
push
rolb
inc
xor
ljmp
insb
ss
jmp
mov
iret
xchg
push
or
leave
adc
jno
jl
xlat
les
scas
aad
sub
lcall
fwait
add
push
sbb
inc
fsubr
inc
not
subl
ret
xchg
pushf
roll
stos
cs
push
or
pop
hlt
mov
in
arpl
push
ror
je
pop
inc
lds
loop
aad
stos
es
movnti
jge
sbb
inc
shrl
lret
outsb
cwtl
loop
and
call
or
stc
mov
sbb
and
lcall
ret
clc
scas
mov
inc
ljmp
pop
andb
insb
sub
movsl
mov
add
mov
movsl
add
jl
das
fidivrs
pop
sub
or
mov
pop
andl
cs
cwtl
dec
cmp
mov
sub
add
mov
test
movsb
dec
push
cmpsb
fidivrs
imul
sbb
cmpb
push
cmpsb
aad
pop
or
pop
sbb
ret
inc
loopne
inc
jg
clc
dec
dec
pop
sbb
lahf
scas
pop
daa
jb
wbinvd
push
repz
call
popa
xchg
cmp
cmp
mov
and
mov
insb
lcall
add
pushw
pop
dec
rol
lock
repz
dec
pop
sub
lahf
push
int3
xlat
add
mov
scas
sbb
dec
inc
or
movb
rclb
dec
jle
psubd
push
mov
mov
lcall
aas
nop
sarl
gs
jl
mov
inc
ja
push
jge
aam
pop
imul
movsb
cmp
jecxz
xchg
cmp
and
pop
scas
jmp
mov
push
jmp
pop
xchg
pop
iret
pop
xor
dec
xchg
sub
dec
xchg
sbb
lock
mov
dec
mov
jle
hlt
cmp
xchg
pop
inc
pop
sub
stc
loopne
je
xor
enter
aad
popa
movsl
popa
imulb
out
sub
dec
and
sub
sub
test
pop
js
adc
hlt
xchg
and
adc
xchg
mov
sbb
push
aas
inc
xchg
pop
fwait
outsb
add
shll
jge
inc
xor
inc
push
shr
xor
sub
xchg
repnz
mov
clc
fisubrs
pop
lret
aas
add
loop
adc
cmp
fadds
and
arpl
and
mov
lcall
fistps
jne
or
addr16
inc
xchg
mov
bound
xchg
dec
inc
sarb
add
mov
xor
mov
adc
jae
mov
mov
inc
insb
dec
add
pusha
mov
std
fsts
clc
xor
add
pusha
fldenv
call
popa
xchg
dec
scas
mov
fldcw
add
iret
mov
pop
cmp
test
xor
or
xchg
and
mov
xor
movsb
nop
sbb
jns
sbb
sub
out
in
adc
inc
mov
int3
push
movsb
xorl
sub
out
bound
mov
inc
adc
sbb
adcl
sub
pop
out
cli
dec
pop
cmp
setge
js
inc
pop
push
stos
cmp
and
xchg
pop
lods
mov
or
cli
mov
cmp
je
jbe
fildll
cmp
add
jnp
add
out
jg
ds
dec
or
imul
push
inc
repz
sarl
pop
pop
ds
ficompl
mov
push
jnp
push
cmpsb
cmp
pop
fsubrs
add
and
std
ret
or
jecxz
fmull
jg
mov
mov
xchg
inc
and
mov
sahf
mov
or
fisubs
stc
insb
shrb
xor
mov
lahf
push
add
dec
cmc
ljmp
nop
fiadds
loopne
mov
fsubs
lods
mov
bound
xor
fdivr
cmc
sub
xchg
xchg
jle
add
jge
sbb
icebp
sbb
mov
in
xor
push
insb
rolb
bound
jmp
adc
cmp
popa
testl
cltd
cs
pop
loope
mov
sbb
shr
cmpsb
and
fsubl
cmp
mov
add
add
bound
cs
daa
cmp
and
ret
xchg
pop
add
int
roll
stos
insb
add
mov
sbb
in
jbe
roll
in
sub
fwait
pop
testl
sarb
and
shrb
repnz
and
pusha
pop
insl
xlat
jecxz
sub
shlb
arpl
xchg
test
mov
push
out
add
ja
sbb
pop
stos
cmp
xor
std
out
test
dec
push
shll
clc
enter
loopne
insb
int3
mov
and
push
fprem
inc
maxps
loopne
and
loopne
dec
pop
add
repnz
xchg
push
les
stos
sahf
ret
cmp
push
incl
subl
adc
push
or
sbb
shl
dec
jnp
inc
sbb
movsl
jecxz
fsubl
xchg
imul
ret
data16
loopne
jo
addl
lret
sbb
push
movl
cmp
inc
cmpsl
mov
cmp
add
lret
jne
xor
ret
ret
fwait
shlb
addl
jg
js
inc
inc
xchg
in
decl
call
push
ret
and
xchg
mov
cmpsb
daa
sbb
je
les
lock
fs
or
fs
movsb
lods
push
sbb
mov
xor
pop
es
mov
dec
mov
xchg
rcrb
push
loope
push
push
sub
daa
mov
rcrl
cmp
adc
push
push
stos
mov
out
and
push
inc
les
gs
test
aad
cmpsl
subb
addl
mov
rorb
jns
add
int
andb
sti
inc
add
jp
mov
mov
dec
ret
mov
aad
xchg
inc
jl
adc
jns
jg
icebp
das
xlat
pop
loop
pop
cmp
push
add
and
lea
xchg
int
jae
xchg
mov
test
jbe
sub
push
add
daa
sti
sti
jmp
mov
mov
in
ror
rolb
adc
xchg
sbb
add
mov
movsb
lea
sub
arpl
adc
cmpsb
negl
arpl
lret
sub
cmp
add
jno
cmp
and
sbb
mov
pop
mov
push
hlt
test
jbe
sbb
mov
sbb
add
popf
lock
iret
and
scas
mov
int3
ljmp
or
ljmp
icebp
call
lds
shll
inc
mov
xor
andl
add
ror
ja
pop
mov
and
jge
seto
sbb
shll
cld
call
imul
sahf
jo
cmp
pop
lret
test
fwait
push
aad
mov
push
or
pop
jb
xchg
je
outsb
jecxz
cmp
loope
flds
insb
sbb
mov
push
popa
movsb
add
adc
pop
cmp
out
cmp
aam
jbe
mov
loope
out
and
sub
pop
and
adc
sbb
stos
add
cwtl
or
imul
xor
jmp
icebp
lods
test
fisubs
stos
sub
push
xor
fidivrs
jne
test
push
xchg
cmp
mov
imul
sbb
xchg
inc
roll
jmp
sub
les
pop
jb
fldt
add
bound
pop
add
lods
mov
mov
mov
dec
push
scas
cmp
es
sahf
in
fdivl
aad
pop
lret
fidivs
loope
mov
add
mov
jbe
icebp
movsl
popa
rorb
mov
ljmpw
pop
mov
ret
xchg
popf
jb
push
pop
mov
mov
dec
adc
dec
js
lret
xchg
mov
xlat
sub
inc
push
or
pop
mov
call
rorl
fwait
pushf
lahf
or
stc
xor
mov
mov
rolb
jbe
test
sbbb
test
lock
jmp
rol
push
lret
subb
cwtl
sbb
mov
pop
loope
or
ss
pmaxsw
mov
xchg
subb
pop
out
loopne
xor
add
lret
sbb
mov
je
jge
rclb
ljmp
adc
leave
shrl
inc
cmpb
rcl
lods
push
mov
xor
mov
mov
dec
rcrl
mov
subl
aaa
rorb
cmp
das
lds
int3
out
sub
inc
cmp
pop
testl
pop
adc
call
sub
ljmp
imul
cmp
shrl
jne
cmp
ljmp
cmp
iret
mov
cs
pushf
das
lock
mov
sub
xchg
cmp
push
outsl
push
mov
test
lock
xor
insl
ror
xchg
push
and
adc
mov
cmp
pop
daa
imul
pop
jmp
adc
pop
mov
jo
ret
lahf
in
aad
adc
and
sub
push
dec
jge
je
popa
xor
in
shrb
cmp
out
pop
jl
lock
mov
mov
scas
mov
adc
rorl
dec
mov
ljmp
inc
mov
cmp
iret
pop
mov
ss
mov
adc
add
mov
adc
pop
dec
clc
hlt
aam
mov
and
mov
pusha
cmp
aaa
jecxz
cmpsb
pusha
bound
popf
sti
mov
roll
xchg
cmp
icebp
push
repz
mov
push
loopne
mov
add
xor
jo
xor
mov
shll
xor
add
pop
jecxz
call
adc
mov
push
inc
rclb
sbb
sbb
mov
jno
push
lods
or
mov
aas
and
pop
add
cs
mov
adc
pop
clc
mov
nop
mov
dec
div
ds
nop
shl
and
dec
hlt
imul
clc
aad
jmp
outsb
in
mov
adc
imul
sbb
inc
or
neg
int
sub
lret
das
xchg
mulb
movsb
jmp
ror
push
and
sbb
outsb
add
and
arpl
mov
mov
gs
xor
pop
out
or
imul
movsl
push
pop
inc
add
add
roll
cmpsl
orb
cmpsb
ror
pop
add
xor
lcall
mov
fimull
dec
dec
ja
dec
push
pop
hlt
cmp
inc
int
xchg
ss
jnp
push
jp
mov
sub
call
sbb
mov
push
gs
and
xor
push
out
push
cs
sub
aad
and
lret
xchg
and
add
mov
rorl
jmp
ficompl
scas
sbb
xchg
or
push
imul
jne
addb
cmp
test
inc
cmp
ds
xchg
andl
mov
jns
add
rorb
orl
imul
inc
sbb
push
sarb
scas
sub
add
test
daa
fstpt
rol
arpl
js
mov
mov
inc
clc
dec
sub
ud2
insb
add
cmp
mov
nopl
cmp
mov
sub
pop
xor
sub
fdivrs
cmp
xor
pop
mov
adc
adc
stc
jge
clc
sbb
test
cmp
notb
test
sbb
sti
pop
jb
fimuls
push
and
mov
arpl
jge
inc
cltd
xchg
jbe
test
mov
js
sbb
inc
je
lea
imul
push
xlat
lret
lret
jmp
ss
push
push
out
ds
aam
rcl
jns
inc
fnstcw
sbb
hlt
ret
mov
subb
pop
popl
enter
adc
inc
xchg
mov
repz
sub
sbb
cmovae
cmp
xchg
xor
mov
outsl
mov
clc
push
jl
add
test
xor
mov
lret
mov
dec
push
fldt
sarl
jl
aas
outsb
repz
iret
sbb
outsb
or
movsl
leave
call
xchg
push
jp
fs
xor
adc
cld
mov
pop
das
cmc
adc
add
enter
mov
push
fsub
and
sub
mov
test
ss
rcll
scas
mov
fldcw
int3
loope,pt
mov
add
sub
dec
cmp
in
sub
push
xor
cmp
pushf
add
sub
xchg
mov
mov
mov
or
in
jp
sbb
mov
or
clc
cmpsl
sbb
sub
or
sti
int3
dec
cld
test
jp
ja
dec
xchg
pop
jmp
push
inc
and
mov
xchg
pop
push
push
pushf
loop
ja
push
push
pusha
test
pop
push
mov
adc
push
js
and
inc
xor
in
push
mov
mov
inc
mov
icebp
jo
or
pop
lods
pop
sub
into
roll
inc
stos
movsb
or
lea
pop
mov
dec
imul
jno
repnz
or
jb
sahf
push
movsl
mov
sbb
jb,pt
enter
xor
jnp
jl
xor
stc
scas
ret
mov
dec
rorl
cli
rcrb
mov
jb
jnp
mov
xchg
cwtl
cmp
rorb
ljmp
dec
rcrb
inc
divb
push
inc
ret
sahf
cld
icebp
inc
loope
dec
insb
outsl
pop
loopne
and
xor
lock
xchg
xchg
adc
mov
mov
push
cltd
xchg
nop
fs
jecxz
mov
and
mov
mov
lods
cld
call
addr16
adc
or
cmc
jb
and
dec
xchg
mov
or
mov
lds
sbb
jbe
js
in
lock
cltd
lock
imul
pop
adc
mov
ret
rol
rolb
sbb
rolb
leave
rcr
cmpsl
icebp
test
andb
sti
pop
mov
repz
popa
enter
test
aaa
cmpsb
cs
push
lcall
lea
inc
fstps
cwtl
cmpsl
in
cmp
and
cmc
sub
inc
and
mov
test
mov
fcmovb
mov
testl
sbb
xchg
or
aam
into
add
cmpl
jle
adc
daa
fistl
dec
add
loope
push
push
cmp
sbb
mov
lea
sbb
mov
aad
ljmp
dec
daa
jge
lock
js
dec
jmp
insl
xorb
mov
repnz
sbb
ss
test
add
mov
fwait
mov
sbb
push
sbb
cwtl
movsl
icebp
and
cmp
push
testl
sbb
repnz
test
ret
xchg
push
js
ss
and
addb
icebp
jnp
cmp
xchg
fisubrs
mov
mov
add
pusha
loope
mov
pop
loop
or
lock
sbb
rcrb
in
ja
dec
enter
xor
xchg
mov
cmp
push
xlat
sbb
mov
adc
sub
inc
push
push
jge
clc
pop
lcall
lock
or
and
xor
xchg
inc
xchg
dec
into
and
xlat
cmp
sbb
sub
dec
xor
adc
ret
mov
stos
js
push
mov
mov
pushf
fsubs
mov
call
ds
cmp
pop
insb
sub
pop
cld
xchg
adc
inc
pop
hlt
aaa
push
out
jl
mov
inc
add
scas
cmpsl
mov
es
mov
jp
xor
mov
push
insb
mov
sti
jbe
sub
cli
sbb
dec
dec
stos
xor
xchg
pop
pushf
mov
mov
rorb
xchg
in
push
cmp
cmp
push
rclb
jns
das
ss
sbb
jp
push
push
psubsb
aaa
xlat
xchg
sub
shrb
popa
dec
xlat
test
loopne
fsubl
xchg
xlat
inc
scas
cwtl
jmp
push
jnp
push
lret
loopne
imul
icebp
gs
adc
call
xor
and
les
sahf
mov
jecxz
inc
or
loop
push
inc
aas
inc
lods
lret
push
sti
add
jb
lea
sub
jp
lods
js
sub
jo
xorl
push
lea
clc
add
neg
xor
mov
push
rcr
and
jge
fcoms
inc
test
inc
std
add
xorb
sub
jp
pop
ds
pop
or
jb
daa
addr16
les
and
lods
push
lahf
lea
adc
lret
mov
fcomps
int
dec
cmc
mov
jmp
das
sbb
or
int
fcom
add
sbb
jg
add
dec
inc
mull
lock
dec
jb
sbb
popa
sbb
add
pop
daa
xchg
inc
add
aam
pop
frstor
out
mov
jb
mov
into
andb
add
out
or
dec
sub
cmpsb
mov
xor
rolw
sub
pushw
lods
add
mov
mov
xor
bound
and
popf
icebp
jmp
cmp
test
imul
xor
jb
jle
xor
and
rcr
cmpsl
pop
test
fstp
sub
sub
paddd
push
push
cmc
mov
sbb
or
lods
jl
sbb
mov
mov
push
jno
std
fsubrs
xchg
inc
sbb
sbb
jg
mov
fstpt
xchg
push
jmp
and
lock
outsb
lods
pop
pop
wbinvd
xchg
andl
je
mov
data16
insb
rcll
jae
gs
pop
cmp
dec
popa
mov
in
adc
ret
cwtl
jp
imul
pop
ljmp
pop
xor
jmp
mov
cli
mov
aam
lcall
sbbl
aam
xor
lea
negl
mov
mov
cmp
rcl
push
push
movsl
or
rol
or
lods
pop
pop
call
jae
jno
mov
mov
inc
inc
stos
popf
cli
jne
sub
sub
test
mov
nop
cli
dec
pop
sbb
adcl
add
out
jmp
add
out
popl
mov
xor
js
test
adc
mov
lea
dec
js
ret
rcrb
xlat
loope
insl
push
jae
test
cmp
and
insb
insb
dec
jge,pn
rcll
cmp
jnp
xor
or
inc
rclb
or
sub
inc
loope
cmpsb
adc
iret
in
xchg
mov
push
lcall
movsl
inc
sub
icebp
in
mov
cs
movl
or
lods
dec
jmp
sbb
push
clc
mov
lods
stc
clc
jbe
jmp
mov
mov
xchg
xor
inc
loope
fs
jmp
jp
inc
shlb
pop
pop
fistps
inc
loopne
and
add
in
mov
mov
das
les
xchg
lret
xor
push
dec
popf
mov
je
divb
push
daa
mov
or
cmp
mov
xor
or
mov
dec
gs
subl
and
cmp
punpckldq
mov
jmp
add
adc
rcr
dec
sbb
xor
mov
mov
pop
out
inc
insb
or
or
lret
shl
out
mov
pop
push
add
adc
loopne
mov
add
dec
pop
cmc
addr16
sti
push
sub
pop
std
lret
xchg
push
xor
lea
mov
adc
ljmp
and
mov
leave
cmp
subl
rolb
out
out
pop
push
mov
mov
bound
js
leave
sub
mov
pushf
add
sbb
adc
cmp
pushf
and
mov
jmp
daa
and
pop
pop
cmp
push
stos
sbb
cld
xor
add
nop
jp
or
shl
push
std
lret
inc
sub
out
call
scas
sub
test
sub
dec
dec
clc
sub
jl
jge
scas
adc
faddl
mov
rclb
sbb
jp
loope
push
stc
dec
push
jmp
es
sub
test
outsl
add
xchg
mov
jl
add
sti
test
jbe
inc
xchg
push
cmp
mov
cmp
push
and
inc
add
mov
roll
cmpsb
push
sub
pop
adc
imul
lret
xchg
int
xchg
leave
nop
subl
repnz
mov
cmp
popa
aaa
mov
dec
int3
sub
je
ja
add
addl
inc
add
roll
imul
pushf
and
mov
inc
popa
or
push
aaa
sub
call
aam
fdivp
pop
mov
loope
mov
or
sarl
sbb
into
push
cmp
push
xchg
mov
in
clc
xchg
push
adc
or
inc
in
dec
or
faddl
fwait
pop
lea
fidivrl
add
jbe
lret
ja
icebp
jns
jmp
jo
clc
popf
ss
scas
je
mov
fists
fisttps
xchg
cmp
dec
add
jae
mov
cmp
in
fidivrs
cmp
orl
in
adc
pop
testl
outsb
cli
cmpb
outsb
in
mov
out
cmp
cmc
xchg
bound
pop
nop
outsl
fwait
xor
mov
pop
mov
into
xlat
mov
inc
pop
fsubrp
xor
cwtl
mov
scas
xor
dec
adc
pop
out
jne
subl
sbbl
shrb
lcall
call
and
xor
jg
pop
or
sti
nop
jle
dec
and
and
mov
orl
sub
adc
push
pushf
and
cmpsl
pop
fimull
in
xor
test
sub
cmp
dec
xchg
int3
or
inc
mul
jle
and
mov
xorl
shlb
pop
movsb
imul
nop
fidivrs
imul
push
popa
jp
cmp
adc
mov
dec
rcll
ret
push
imul
lcall
addr16
scas
inc
lock
std
mov
or
iret
nop
stc
mov
pop
div
adc
push
sbb
rclb
pop
jno
cmp
inc
popf
test
imul
aam
pop
cmc
rorl
dec
ret
jo
mov
sbb
adc
dec
inc
fwait
cmp
jle
push
push
sti
cmp
into
cld
or
sub
gs
sub
mov
outsb
sahf
xor
sub
pop
lods
movsl
outsl
or
roll
xchg
enter
sbb
loope
add
mov
fsubrl
sub
jmp
push
ret
pop
loope
xor
push
in
jle
sbb
scas
cs
mov
fstl
and
push
inc
push
mov
les
xor
xor
out
in
das
inc
fistpll
mov
cmp
sbb
in
push
inc
divl
cmp
cld
adc
xchg
fsubp
std
lods
mov
xchg
mov
or
push
insl
lds
jecxz
or
ficompl
fadd
push
cld
and
pusha
clc
xchg
jmp
mull
hlt
insb
pushf
js
mov
cmp
jo
das
xor
sbb
adc
add
lea
push
cwtl
js
push
notl
rcll
rcr
sbb
test
mov
adc
cmc
imul
scas
fcomi
mov
push
mov
js
cli
fstpl
dec
popf
ficomps
mov
mov
or
pop
mov
pop
cmp
aam
ret
pop
sbb
sbb
or
cmp
mov
dec
ret
shl
cmp
inc
push
inc
push
nop
add
lret
cs
lock
test
aad
cmp
hlt
lret
pop
repnz
nop
and
push
sbb
hlt
insb
mov
mov
scas
add
loope,pt
mov
loopne
mov
rol
loope
loop
add
rclb
push
fsubrs
cli
loope
jb
lahf
in
loopne
lods
jecxz
sbb
xchg
repnz
daa
test
lods
or
xchg
out
lret
inc
dec
add
jno
test
in
lds
fstpl
cmp
xchg
lea
jns
cmpsl
cmc
clc
imul
adc
std
and
pop
stos
psrlq
dec
pop
loop
lahf
pop
hlt
lahf
push
xchg
sbb
fidivs
mov
pop
ss
cmp
or
push
pop
mov
push
jns
in
pop
cmp
push
push
and
adc
ds
loop
lods
and
fadds
xor
outsb
nop
cmpl
xchg
fcmovne
shl
pop
dec
loop
and
inc
ljmp
push
xchg
hlt
imul
inc
push
lret
lds
push
lahf
push
ljmp
inc
jnp
ja
lcall
xchg
pop
inc
and
lods
mov
lods
aam
inc
adc
inc
sub
call
inc
dec
pop
jg
test
mov
popl
pop
arpl
mov
xchg
adc
push
sbb
and
jns
xor
les
xchg
imul
add
ret
xor
mov
nop
repz
jnp
pop
push
mov
cmp
nop
jb
daa
sahf
mov
mov
cwtl
cmp
xor
jo
jl
jo
push
pusha
pushf
and
mov
repnz
fxch
sti
push
jbe
fcoml
stc
or
ja
addl
fisubs
xchg
or
aaa
into
flds
xchg
sbb
sub
lods
loope
push
jmp
jmp
ss
jns
and
aaa
cwtl
outsl
cwtl
aam
sub
push
cltd
aam
mov
fnsave
adc
inc
pop
or
mov
insl
adc
mov
xorb
pop
jge
es
mov
cwtl
push
pop
daa
push
sbb
sbb
mov
sti
add
pop
sub
ds
iret
sbb
lods
inc
and
push
cmp
push
push
cltd
push
jno
dec
or
shlb
inc
jnp
repnz
sub
add
pop
es
mov
xchg
inc
lods
aas
sub
sbb
into
imul
testb
ss
jp
aaa
call
dec
pusha
adc
rcrl
cmpsl
mov
sub
adcb
add
cltd
or
cli
aaa
shr
jle
ret
je
test
adc
subl
rorb
aam
jno
shlb
inc
shr
test
mov
jp
push
ds
dec
dec
mov
jg
inc
aad
loopne
push
mov
inc
cmovl
jns
or
or
sbb
fidivrl
js
xor
pop
clc
test
mov
dec
push
leave
rolb
lret
loop
xlat
pop
sti
cmp
dec
shrl
inc
imul
and
push
test
add
mov
sti
dec
push
push
push
cmp
or
aas
call
add
push
sbb
sarb
lods
push
insb
xor
xor
std
push
inc
xor
jne
push
aas
inc
sbb
decl
test
ret
adc
fcoms
in
inc
lret
jle
sbb
cmc
sahf
mov
imul
mov
test
mov
aas
movl
jle
mov
jecxz
push
mov
ds
add
push
enter
testb
add
test
mov
mov
in
jae
test
and
dec
dec
jbe
jmp
leave
mov
pop
push
mov
push
cwtl
jo
or
aas
push
cmp
push
sbb
sti
adc
or
stc
or
ret
cld
xor
scas
cmp
popf
and
int
add
out
mov
repnz
and
das
dec
imul
test
add
pop
cli
outsb
dec
jmp
stos
ret
pop
mov
loopne
and
lds
add
sub
xchg
rclb
imul
scas
pop
test
pop
push
xor
jmp
out
aas
outsl
push
pop
pop
movsb
inc
std
nop
or
ss
adc
mov
sbb
outsl
add
loopne
popf
pusha
sub
push
and
sub
out
fisttpl
xchg
mov
hlt
mov
jl
mov
sub
fsubs
sub
pop
xor
mov
cli
mov
mov
ret
mov
hlt
out
xor
dec
push
jb
lods
mov
stos
ljmp
adc
push
clc
out
mov
add
pop
sub
sub
cmc
cmp
test
rcr
and
pop
popa
mov
icebp
mov
insl
push
sarb
popf
push
cmpsl
fcompp
enter
arpl
pop
and
ljmp
push
xlat
or
jmp
and
nop
push
pop
inc
les
pop
pop
ljmp
pop
je
push
out
rcl
sbb
les
lahf
or
shl
lock
aaa
out
dec
add
jnp
push
jp
adc
mov
popf
inc
js
sbb
and
arpl
jb
inc
aad
outsb
cmp
pushf
and
mov
push
and
xlat
add
outsl
xor
inc
shrl
ror
je
es
int3
sarb
cld
xchg
es
push
cmp
sub
cmp
push
pop
jg
outsl
out
mov
sar
pusha
jg
mov
sbb
bound
loope
dec
jne
pop
and
fiaddl
loope
lcall
shll
popa
daa
popf
outsl
dec
stc
lock
inc
sbb
cli
stc
mov
fs
or
inc
and
repnz
inc
mov
or
sub
out
sub
dec
sub
js
mov
add
sbb
in
or
sub
xor
test
mov
push
xchg
mov
xchg
jl
ss
push
mov
push
push
sub
movsl
enter
int
pop
dec
mov
cmp
cmpsb
adc
jp
push
mov
jp
push
filds
outsb
sub
hlt
mov
push
rorb
daa
pop
cld
out
cmp
out
jno
and
pusha
dec
cmp
scas
pop
add
jne
push
xor
or
push
cmp
push
data16
insl
xchg
je
or
fwait
mov
cmp
cmp
int3
or
or
sub
int3
sbb
insl
cmp
sbbl
out
cmp
add
dec
and
mov
mov
and
cmpsl
jae
dec
shrl
pop
inc
mov
movsl
jb
mov
sbb
inc
add
imull
inc
xchg
lods
mov
push
fdivrl
jp
popf
loopne
imul
movsb
movq
cmc
cmpsb
mov
sbb
ret
pop
insl
cmc
dec
ficoms
and
or
call
rclb
dec
or
sarl
lods
lahf
cli
mov
sub
lods
jo
flds
inc
sbb
into
test
sahf
and
aaa
repz
xlat
aaa
movsb
push
call
inc
or
cmpsl
or
jno
fisttpl
xor
repnz
mov
imul
adc
add
push
repnz
out
nop
cli
add
mov
add
pop
jae
push
pop
jo
in
scas
mov
rolb
and
add
add
or
mov
into
cmpsl
loopne
sbb
sub
or
outsb
sbb
shll
jl
addl
lret
pop
test
add
clc
loope
rcrb
mov
push
and
daa
adc
out
mov
in
clc
jecxz
stc
ljmp
push
xchg
xorl
push
inc
out
cmp
test
add
sub
insb
jbe
js
mov
leave
out
ficompl
cwtl
push
outsl
cmp
mov
dec
notb
or
fmuls
pop
and
movsb
gs
sbb
cmc
repnz
repz
xchg
dec
adc
dec
pop
sbb
pop
xchg
xchg
into
into
lock
xor
rol
inc
scas
inc
jp
inc
pop
xchg
jle
mov
xchg
xchg
inc
or
xchg
add
es
and
mov
adc
jb
jl
inc
ja
cmp
mov
je,pn
inc
aam
xchg
cs
xchg
lea
daa
xor
sub
push
inc
push
jbe
js
test
orb
cmp
loope,pt
and
sti
icebp
lsl
push
mov
lret
lods
cmp
jnp
subb
lock
outsl
aaa
xor
je
mov
mov
sub
lods
mov
loop
jp
or
pop
pop
cmpb
adc
adc
sbb
pusha
mov
and
sbb
push
sar
mov
add
jecxz
js
or
cld
jne
mov
in
imul
push
adc
jge
mov
mov
aad
arpl
xor
addr16
sbb
inc
popf
and
hlt
rcrb
mov
ljmp
orl
call
out
xor
jbe
jmp
mov
dec
enter
add
test
in
xchg
push
xchg
add
stc
adc
jne
neg
mov
adc
mov
fs
inc
out
push
popa
andb
pop
adc
addr16
add
jle
imul
outsb
pmaddwd
cmp
xchg
or
lods
dec
sbb
sub
pop
dec
mull
sbb
push
jnp
xchg
dec
mov
sub
rorb
xchg
mov
mov
fadd
xchg
pop
add
jl
sub
loope
pop
mov
inc
or
pop
jns
xor
scas
orb
movb
mov
and
aam
insb
sub
add
mov
push
ds
sbb
or
mov
adc
ss
daa
mov
xorb
arpl
cmp
fs
shll
test
negb
jae
je
in
ret
inc
push
data16
adc
pop
scas
mov
addb
cmp
das
aas
sub
test
or
adcb
test
fcoms
push
icebp
addl
nop
into
push
push
dec
cmp
xor
enter
jno
shlb
mov
sbb
push
cmp
mov
pop
scas
add
aad
pop
cmp
sarl
dec
stc
rcll
pop
mov
enter
mov
movsl
daa
push
inc
sarb
lret
fwait
inc
popa
in
jmp
sbb
mov
lock
movl
jp
push
sub
mov
add
xchg
push
xchg
cmp
xor
dec
xchg
add
pop
mov
mov
jns
in
cmovno
lcall
and
and
mov
scas
daa
jge
add
mov
xor
test
loop
pop
subl
adc
faddl
push
push
popa
lahf
rcrl
in
flds
or
xor
icebp
adc
adc
rcll
jnp
ljmp
call
imul
ss
mov
es
jp
icebp
inc
sub
mov
or
and
pop
xor
sti
sbb
inc
xchg
std
adc
and
sbb
cmp
stos
jmp
cmp
inc
adc
jge
add
sbb
fists
and
je
sbb
push
insb
mov
xor
jge
ret
icebp
jg
popf
mov
popf
cmp
add
loop
or
mov
pop
jmp
test
pop
imul
loopne
add
sub
inc
add
jecxz
xor
outsb
mov
jns
icebp
jb
sbb
cmp
and
es
mov
aam
cld
mov
stos
iret
in
jge
jge
jne
les
shlb
and
fcmovnb
xor
dec
push
pop
xchg
push
setb
inc
fnstenv
into
lcall
out
pusha
mov
insl
cmp
xchg
incl
dec
movsl
ret
pop
inc
add
or
in
jmp
inc
sub
paddw
xchg
and
inc
js
test
fcomps
test
add
xchg
lods
or
rcll
aad
popf
mov
and
adc
or
add
enter
pop
fdivr
xchg
scas
sti
adc
shl
mov
xor
ljmp
cmc
dec
dec
sub
je
decb
xchg
add
ds
push
mov
mov
lock
add
inc
aaa
sbb
xor
mov
push
or
lds
sub
lcall
cmc
jmp
pop
mov
mov
dec
and
out
shl
add
int3
mov
cmp
sub
jp
xchg
stos
dec
add
adc
inc
test
jle
shlb
mov
in
cmpsb
and
in
sbbl
mov
loope
loope
sbb
dec
mov
pop
jns
adc
mov
push
mov
ja
sbb
jne
mulw
shll
adc
sub
jmp
insl
call
adcl
inc
cmp
shrl
js
mov
xor
sub
lcall
arpl
icebp
mov
adcl
mov
xor
adc
add
pop
sbb
jmp
mov
pop
add
add
adc
jg
inc
jp
inc
and
mov
cld
xchg
cli
sub
push
mov
push
push
fisubrl
fcmovbe
and
push
or
sub
fisubrl
shll
jbe
frstor
adc
in
mov
je
clc
in
loope
and
push
sub
jecxz
pop
dec
lods
nop
lcall
mov
cmpb
dec
out
push
out
push
xchg
pusha
movsl
push
mov
das
ds
cmpsl
pop
pop
mov
aaa
sub
test
pop
movsb
fisubrl
icebp
cmp
jno
and
adc
inc
inc
call
dec
sbb
sbb
subb
mov
dec
popa
add
jne
sub
sub
mov
xchg
cmc
mov
mov
pop
pop
inc
int
gs
divl
jne
dec
ljmp
adc
shll
lock
loope
movsl
loopne
out
xchg
repnz
mov
fidivl
std
xor
repz
pop
fs
jno
mov
popl
iret
bound
mov
inc
xchg
popa
mov
mov
ret
sbb
std
sbb
adc
push
ljmp
das
scas
pop
das
dec
fcoms
push
bndldx
add
cmpsl
ds
movsl
add
adc
push
stos
sub
loop
pop
jno
jnp
faddl
andl
rcl
mov
mov
mov
push
xchg
mov
pop
jo
pop
add
lds
fwait
out
setg
jle
adc
cmc
mov
lock
cmp
arpl
fldl
push
repz
movsl
addb
cmp
imul
mov
add
test
iret
jg
push
repnz
mov
jl
out
adc
jmp
cwtl
notl
das
popa
and
outsb
jge
adc
pop
cld
test
pop
movsl
popf
cmpsb
fsubrs
jb
cwtl
dec
out
lock
mov
lds
mov
cmc
repnz
cli
mov
jmp
nop
pop
mov
iret
lods
not
xor
std
add
dec
adc
testl
mov
push
push
sub
mov
nop
sbb
mov
rcrb
add
pop
pushf
jo
xlat
mov
in
cli
mov
inc
push
cmc
inc
sub
mov
subl
es
and
lock
sub
and
cmp
cmp
pop
jmp
or
clc
and
mov
ficomps
cmp
les
fnstenv
scas
jno
mov
cmpsb
stc
ja
repnz
movsl
call
push
outsb
outsl
mov
fcompl
in
subl
andl
sbb
mov
sbbl
xor
or
and
mov
lds
xor
sahf
hlt
inc
es
add
sub
cmc
loop
jl
jp
pop
pushf
mov
inc
pop
pusha
dec
xchg
and
sub
insl
pop
cld
mov
mov
sub
pop
sbb
testb
or
stos
ret
sbb
or
push
sti
mov
ljmp
jb
stos
dec
lods
jnp
movsl
movsb
lcall
xor
fmulp
rcrl
cmp
xorb
dec
ficomps
jno
push
dec
ss
and
leave
stos
inc
add
out
mov
xchg
bswap
jne
mov
mov
inc
in
adc
inc
cmp
jno
xchg
sbb
scas
or
nop
mov
in
popa
pop
scas
sub
xchg
aam
dec
xor
pop
push
sar
ds
enter
cmpb
push
xor
into
mov
add
loopne
inc
inc
out
pushf
inc
in
and
pop
flds
or
jae
rorb
shl
frstor
mov
lahf
clc
cmpsl
stc
les
stc
push
jecxz
or
lods
mov
and
sub
nop
push
xchg
les
xor
cmp
push
sub
test
call
fadds
jmp
cmpsl
push
and
dec
mov
data16
fucomi
les
add
or
inc
fcmovbe
call
filds
mov
in
mov
stos
aaa
or
adc
cli
in
cmp
lods
addb
mov
xchg
loop
xlat
pop
lcall
arpl
lret
dec
sbb
xchg
jge
out
push
mov
lcall
pop
jmp
repz
xchg
in
pcmpgtd
call
pop
mov
jp
add
dec
out
xor
or
xchg
insb
scas
sbb
mov
fdivrs
or
mov
sbb
cmpsb
xchg
jns
mov
je
jno
lods
cli
dec
add
das
iret
cld
imul
push
shrl
dec
jmp
add
jp
adc
or
mov
stos
xchg
xor
ljmp
jnp
popa
cmp
sbb
inc
bound
popf
dec
xor
mov
jp
add
call
mov
movsb
jle
and
add
jns
xchg
push
and
xchg
add
and
jg
push
pop
mov
adc
fldl
xchg
cltd
adc
push
add
cltd
dec
or
mov
shr
lds
outsl
rorb
cltd
and
enter
in
sahf
movsl
inc
ss
mov
pop
push
shrb
lcall
aam
add
stos
fucomi
push
and
inc
arpl
add
imul
jb
loope
xchg
push
mov
mov
mov
scas
je
push
jno
add
shlb
int3
xchg
xor
sbb
shlb
stos
aaa
jbe
in
or
fdivs
aaa
in
push
orb
stos
sub
xorb
xor
mov
inc
or
nop
sti
xchg
push
cli
ror
cltd
dec
sub
mov
lcall
dec
dec
rorl
sahf
xor
fs
in
cmpb
push
outsl
xchg
ja
jmp
insl
xchg
adc
mov
ret
mov
sbb
sub
mov
xor
xor
xchg
mov
mov
scas
lret
mov
push
cmc
jne
inc
rorb
arpl
add
inc
movsb
pop
mov
mov
mov
xchg
inc
movsb
pavgb
shr
xor
push
mov
imul
jmp
lods
jnp
call
inc
repnz
mov
lret
jmp
icebp
xor
xchg
cmp
mov
sub
insl
sub
push
rcl
aad
es
shll
sbb
testb
xchg
mov
add
adc
cli
dec
test
sti
repnz
lods
xor
push
mov
iret
cmp
imul
adc
aaa
inc
cld
fisubrl
hlt
xor
cwtl
push
push
jmp
cmp
ja
in
mov
aaa
lcall
push
cwtl
loopne
imul
out
dec
je
arpl
pop
loopne
shrl
cld
jge
popa
leave
sarl
xlat
xlat
iret
xchg
data16
jp
and
imul
test
dec
or
in
fcompl
inc
inc
add
cwtl
adc
hlt
jmp
call
arpl
sbb
loope
loope
iret
push
inc
fdivrp
add
xchg
rol
stos
adc
inc
sbb
jge
out
dec
inc
loope
lock
imul
xor
inc
mov
mov
loope
pop
aad
daa
jno
add
jl
add
jg
js
rcl
and
scas
aam
out
aam
test
fadds
cld
or
mov
sbb
test
pop
push
ret
subl
and
add
add
fs
xlat
pop
xor
lcall
jno
cmpsl
cmpsb
mov
jbe
dec
or
rcrb
pop
outsl
loopne
call
push
bound
fcmovnu
push
idiv
ja
lcall
jl
xor
imul
ss
add
inc
xchg
addb
cld
out
pop
sub
out
push
dec
sti
xchg
adc
or
sbb
daa
int
inc
cld
int
mov
cmp
mov
add
mov
popw
ss
sub
das
aas
popa
push
iret
rolb
loope
and
jae
rcrb
jge
out
jl
mov
fsubrp
test
mov
jecxz
jne
dec
add
mov
pop
pop
sbb
sub
sbb
push
xchg
inc
movsl
sahf
and
cmp
push
mov
jnp
mov
rorl
popf
lock
push
fmull
jl
pop
jmp
fdivl
jmp
pop
movsb
das
mov
popa
inc
add
adc
mov
ss
adc
sub
inc
aas
out
test
xchg
aas
call
push
lock
adc
test
jle
cltd
mov
in
shlb
lock
cld
push
js
mov
cmp
cwtl
stos
lock
cmc
sub
pop
pop
push
jmp
adc
mov
jb
sub
and
call
inc
mov
pop
sub
out
dec
lods
gs
cmp
xlat
sub
mov
sub
insb
pop
mov
xchg
or
test
lcall
insl
mov
push
jecxz
pop
das
mulb
and
pop
dec
or
or
movsl
cmp
add
xor
push
dec
arpl
inc
and
les
adcl
pop
add
add
mov
fwait
mov
movsb
jb
add
mov
dec
and
pop
stos
mov
sub
fneni(8087
add
sub
adc
push
jl
adc
sbb
mov
pop
movsb
sbb
cmp
stos
pop
pop
pop
and
pusha
mov
mov
in
aad
add
jle
sbb
mov
cmp
ds
adc
push
cmpsb
ds
adc
xchg
push
mov
iret
fstps
js
in
pop
loopne
push
and
stos
jb
je
mov
push
sub
outsl
cmp
scas
int
les
inc
sub
lahf
call
lahf
test
push
jecxz
jecxz
aam
jbe
dec
pop
das
mov
popl
or
jo
gs
subb
popa
xchg
adc
jecxz
in
pop
insl
mov
mov
mov
sub
ljmp
adcb
inc
mov
cwtl
add
js
sbb
jo
pop
fs
add
rcrb
loopne
jno
cmpb
aaa
inc
dec
insl
daa
inc
jmp
mov
stos
rol
sub
jbe
dec
xor
add
out
pop
dec
call
push
dec
lods
sub
jl
out
add
inc
popf
add
hlt
jecxz
push
mov
lret
add
add
ret
clc
inc
sbb
test
jbe
add
mov
in
call
push
jle
jg
roll
pop
jmp
push
and
sub
jnp
mov
rcl
inc
cmpsb
loop
inc
pop
mov
lea
mov
in
hlt
ret
fimull
jo
pop
jecxz
ret
jle
insb
popf
loopne
jbe
mov
cmp
std
add
xchg
into
or
lock
addb
xchg
mov
or
shrl
cmpsl
aaa
inc
in
dec
cltd
xor
sahf
pop
imul
mov
mov
mov
stos
out
jnp
fcompp
movsb
push
in
ret
or
je
mov
sbb
pop
scas
test
jg
mov
adc
fcompl
icebp
outsb
loopne
inc
inc
insb
pmaxsw
mov
jge
mov
jge
add
jmp
out
daa
in
aaa
pop
loop
outsl
sub
push
sub
jecxz
and
or
orl
push
pop
test
xchg
adc
lcall
sbb
cmpsb
popf
xor
stc
mov
adc
js
cmp
pop
ret
insl
push
adc
in
shlb
cmp
into
add
cmpsb
aad
add
push
xchg
cmp
popf
shlb
icebp
and
inc
into
pop
dec
fsub
rorb
std
aad
stos
sbb
sbb
push
fsubrs
xlat
add
add
out
sbb
xchg
mov
roll
jns
stos
ret
adc
loope
sbb
push
mov
pop
rcrl
addr16
dec
fldcw
stos
mov
xchg
test
jge
cs
fdivr
or
imul
add
inc
lcall
and
stos
jae
ficoms
scas
dec
jg
test
mov
dec
mov
pusha
cld
loopne
test
pop
fdivl
jl
push
stos
xchg
mov
lea
jne
cwtl
stos
push
adc
adc
push
ja
mov
xor
ret
xlat
lods
cmp
ret
ja
xor
sbb
adc
jb
loop
mov
pop
mov
pop
fsubs
aas
insb
mov
and
lock
faddl
dec
fwait
dec
rclb
out
sar
inc
pop
pop
call
inc
sahf
xchg
add
lods
ret
sub
dec
lds
insb
jp
aad
mov
xchg
les
mov
add
bound
fistpl
insb
mov
and
aad
in
or
mov
outsl
dec
mov
bound
lea
sub
dec
mov
mov
pop
or
out
mov
sbb
std
mov
or
adc
loop
in
xchg
pop
sub
mov
and
pop
clc
inc
stc
and
jp
add
std
jo
add
fidivs
les
cmpb
pop
insb
mov
xor
pusha
mov
sti
in
clc
sbb
movsb
test
inc
call
into
sar
movsb
xor
jbe
push
loop
adc
mov
adcl
or
sahf
mov
adc
dec
cmp
dec
jbe
lahf
lret
push
fcmovb
cmpsb
out
inc
mov
pop
cmp
flds
cmp
jnp
hlt
mov
and
xor
test
test
es
cmp
enter
mov
push
xchg
cltd
pop
add
nop
scas
adc
lahf
or
or
jp
inc
cmp
pop
push
std
repz
inc
pop
jl
pop
push
loopne
adc
lret
mov
xor
int
aas
ss
cmp
pop
shlb
mov
mov
jmp
xchg
insb
sub
mov
push
dec
icebp
sub
icebp
pop
or
adc
dec
dec
testb
loope
cmp
loop
adc
push
hlt
mov
mov
and
mov
and
imul
dec
mov
adc
or
adc
mov
dec
xor
rorl
mov
push
mov
mov
inc
loope
rcrl
push
push
shlb
and
leave
aaa
pushf
push
mov
push
loope
outsl
mov
inc
sbb
pop
add
orl
add
jno
sbbb
xor
cli
cld
dec
fldl2t
mov
imul
test
cs
addr16
add
fidivl
bound
add
pop
sub
and
sub
popa
nop
lcall
movsb
push
jbe
test
lcall
repnz
stos
jo
aas
push
test
jb
das
dec
sbb
inc
xchg
cmp
pop
bound
push
jmp
fcmovbe
popf
in
cmc
xchg
pop
mov
push
outsb
jae
orb
test
adc
sub
inc
sub
jo
out
fcmove
add
xchg
outsb
pop
aas
cld
add
and
ds
inc
sbb
adc
addr16
cwtl
stos
outsl
cmp
inc
insl
jl
jnp
jb
mov
mov
pop
push
xor
dec
adc
push
loopne
mov
xchg
or
sub
xchg
dec
cld
call
pshufw
mov
js
inc
and
xchg
in
clc
jno
jae
push
dec
leave
add
je
sti
adc
iret
adc
sbb
pop
jg
jge
xor
mov
iret
in
fsubs
cwtl
movsl
mov
mov
xchg
ds
cmpsb
loopne
fisubl
and
cmp
lods
push
jbe
push
loopne
lret
or
filds
mov
rolb
mov
pop
or
in
jae
push
adc
pusha
out
push
pusha
cltd
push
cmpsb
call
iret
dec
push
xor
dec
xchg
pushf
mov
mov
loop
or
fsts
mov
and
js
sbbb
mov
cwtl
ret
mov
push
mov
push
push
jle
dec
add
jmp
test
insb
and
test
loope
mov
or
lea
ljmp
sub
loope
rcrb
mov
iret
mov
mov
jns
push
inc
dec
clc
xchg
xorl
mov
gs
fcmovnu
sub
cld
and
adc
sbb
rorb
push
arpl
outsb
xlat
inc
xorb
pop
les
insl
mov
or
jecxz
push
mov
rcrb
or
out
data16
or
xchg
cwtl
fcomps
and
sti
into
or
cmpsl
pop
mov
ret
sub
dec
std
adc
sahf
not
push
inc
jg
cmp
bound
cmp
into
lods
jbe
loop
not
sbb
inc
dec
sbb
inc
repnz
aad
xchg
lret
ret
mov
adc
xor
daa
jbe
movsb
dec
jl
mov
push
sub
loope
ret
into
scas
sub
lea
loopne
or
mov
jo
xchg
add
aas
mov
jp
shlb
dec
push
mov
push
dec
std
sbb
loopne
clc
imul
mov
pop
mov
lock
std
ja
jmp
or
inc
pop
push
xchg
jb
push
hlt
mov
clc
test
xor
dec
cmp
or
adcb
incl
jae
movb
jb
adc
pop
dec
std
cmpsb
xchg
icebp
push
push
pop
jl
les
push
cmp
dec
add
adc
dec
mov
pop
xor
loopne
adc
jp
stos
out
lahf
mov
sbb
push
lret
or
sahf
pop
test
cmp
cs
dec
xlat
jecxz
jge
xchg
cmp
dec
clc
pop
jl
jno
clc
and
pop
jl
push
xchg
inc
data16
xor
add
add
mov
mov
sub
rolb
js
imull
fwait
sub
inc
into
pop
mov
adc
cltd
in
mov
mov
jl
out
in
movsb
lcall
push
adc
mov
aam
in
dec
clc
outsb
loop
enter
in
shrb
enter
movsb
mov
fwait
xchg
iret
pop
pop
push
mov
cmp
jmp
sub
adc
in
testb
js
ds
dec
addr16
inc
clc
popf
push
fcmovu
test
scas
jne
frstor
xlat
dec
adc
pusha
pop
jl
in
xor
or
mov
popa
es
call
xchg
and
push
add
sarb
add
jnp
push
add
push
push
or
sbb
sub
inc
add
sub
shlb
cli
or
inc
adc
lods
inc
insl
and
shl
jno
lcall
lock
sahf
and
adc
jo
jae
xchg
daa
or
cmpsl
jge
and
test
xlat
push
rcrb
fnsave
xchg
sbb
jecxz
stos
fstpt
xchg
jae
mov
mov
call
push
movsl
add
out
ret
repz
arpl
jns
jbe
aaa
push
pop
inc
push
or
sbb
ret
loopne
push
cli
xorb
push
les
cmpsb
cmp
cmp
es
inc
sti
pop
or
and
adc
insl
mov
lock
icebp
pop
mov
jecxz
clc
cmpsb
out
inc
or
add
andl
mov
sbb
in
fcoms
xchg
and
inc
or
jmp
ljmp
mov
enter
cmp
jl
adc
aaa
mov
and
fimuls
cltd
dec
shl
and
mov
incb
add
cld
movsb
jmp
out
adc
jb
jbe
movsl
ds
test
ljmp
test
ljmp
test
mov
enter
dec
clc
mov
int
inc
subl
mov
gs
fnstenv
test
out
ret
fmul
push
orl
mov
popf
mov
push
pushf
xor
cmpsl
mov
sub
pop
imul
jmp
aam
ret
pop
cmpsl
add
jbe
mov
xchg
test
mov
mov
rol
test
push
outsb
adc
repz
jo
jae
sti
data16
sub
test
jle
out
xchg
pop
mov
xchg
adc
gs
ds
pop
xchg
fs
sub
inc
lods
push
pushf
and
or
mov
out
outsb
mov
mov
xor
adc
and
out
fwait
test
outsb
xchg
lock
inc
out
loop
rol
daa
cmp
scas
insb
mov
lock
xor
mov
adc
jle
in
mov
into
test
push
or
jno
dec
pop
je
js
cmc
test
sbb
push
pusha
mov
inc
out
js
roll
scas
stos
sub
dec
adc
scas
inc
aam
out
fnstenv
mov
inc
cmp
push
sub
stos
lahf
cmpsb
adc
aam
or
repz
xchg
pusha
jne
dec
push
inc
push
pop
push
gs
sub
adc
fsubl
mov
dec
push
scas
bound
fsubr
and
adc
vcvtpd2psx
jmp
rclb
test
mov
test
jbe
int
cmpsl
mov
inc
add
pop
xor
mov
xchg
mov
push
int3
mov
cs
pop
jmp
clc
dec
jle
sbb
pop
shlb
sbb
ds
add
mov
push
aas
inc
repnz
xchg
xor
push
pop
push
xor
add
aad
adc
loope
roll
loop
cmp
daa
stos
lea
adc
js
insl
mov
in
jl
jbe
mov
repz
mov
mov
xchg
push
sbb
mov
and
dec
test
push
rol
adc
loop
pushf
shlb
xor
inc
cmc
addb
insb
inc
mov
sub
sbb
pop
movl
imul
lock
popf
clc
xchg
test
ja
fwait
adc
xor
jo
pop
in
in
scas
inc
clc
js
or
mov
and
push
mov
or
test
push
mov
mov
leave
push
mov
inc
aad
xor
imull
mov
mov
addb
int
sub
repz
xchg
mov
cmc
insb
mov
ds
cmpsb
sbb
testl
icebp
shrl
ja
lret
ficomps
loopne
jae
push
add
hlt
insb
lcall
daa
add
add
pop
xlat
ja
push
enter
mov
jnp
mov
sbbl
inc
sbb
inc
pop
vcomisd
dec
xchg
add
popf
mov
add
jecxz
rcpps
shlb
pop
sbb
or
or
inc
mov
dec
sub
cmp
test
loopne
mov
hlt
pop
push
movsl
ret
mov
cmp
mov
cmp
movsb
test
adc
jb
nop
dec
cs
adc
xor
pop
jg
cmpsl
adcb
sbb
iret
movsl
adc
imul
or
push
cwtl
scas
in
and
and
pusha
fistl
jnp
mov
in
jp
xor
pop
mov
dec
jecxz
sbb
mov
rcrb
or
sub
pop
aas
or
fs
daa
js
push
mov
shl
jno
test
out
out
rclb
push
pop
lahf
repnz
lcall
adc
in
aad
xorl
in
in
sub
imul
scas
and
add
xor
mov
pushf
sbbb
or
clc
or
js
mov
pop
or
loop
test
push
sti
sbb
dec
movsl
xor
sbb
mov
jge
mov
lahf
inc
inc
mov
cmc
push
jb
in
mov
test
push
mov
imul
scas
jmp
inc
xchg
push
cld
and
imul
mov
int
push
repz
aas
dec
out
xor
inc
sbb
jae
loopne
lods
pop
in
addb
jb
jle
cmp
ror
jle
lea
arpl
or
aaa
cmp
xor
cmp
or
and
mov
inc
mov
sbb
ds
cwtl
addr16
aam
xchg
xchg
inc
mov
leave
rcl
and
pop
add
xchg
dec
call
or
popf
lret
push
or
inc
cld
inc
mov
pusha
rcl
mov
icebp
push
and
xor
inc
fabs
xor
xor
xor
mov
or
popa
repnz
push
inc
push
mov
jge
sub
in
or
mov
push
sti
test
xchg
dec
and
add
shll
or
xlat
jl
push
pop
mov
or
in
ja
adcb
out
sbb
jle
lea
push
jmp
rcll
jp
shlb
cmp
jnp
mov
cs
pop
jbe
mov
or
scas
ljmp
sub
mov
pop
jb
and
jo
or
and
mov
stc
mov
cmpl
insl
sub
subb
adc
jno
and
ret
cmp
pop
push
add
enter
dec
nop
and
pop
mov
jmp
aam
js
xchg
cmp
sub
sbb
out
pushf
mov
and
test
int3
icebp
test
in
ljmp
add
sub
add
int3
movsb
pop
ret
jmp
jecxz
cmp
popa
xchg
test
idivl
cs
es
adc
pop
pushf
or
cmpsl
sub
pop
mov
stos
jl
arpl
jbe
icebp
mov
test
lods
lahf
or
jo
out
dec
mov
pusha
sbb
pop
mov
pop
add
aaa
aam
clc
js
pop
push
lcall
fmuls
or
inc
mov
mov
add
adc
push
popf
outsl
push
mov
push
jge
mov
dec
mov
add
lret
sarb
mov
adc
iret
hlt
and
adc
fcomps
push
ja
sti
sbb
data16
sti
pop
aad
ss
cmp
add
addb
push
mov
or
jge
sbb
mov
push
xchg
xor
xchg
inc
xchg
lods
sahf
divl
aad
ljmp
jne
out
pop
mov
das
dec
aas
xchg
ret
mov
lcall
shr
movntps
mov
pop
and
or
mov
decb
add
sbbl
js
sbb
outsl
int
sub
jle
loop
fdivs
mov
add
sbb
stos
cwtl
or
inc
clc
fimuls
imul
dec
pop
or
and
ficompl
mov
scas
sbb
and
les
out
out
addr16
test
cwtl
outsb
add
ss
push
movsl
sub
push
push
out
pop
insb
push
jb
mov
cmc
cmp
jle
mov
fsubrs
aaa
cmp
push
pop
ds
jl
add
xor
mov
dec
arpl
pop
je
dec
cmp
xor
push
sub
push
mov
das
es
hlt
jmp
mov
cmp
cmpsl
pusha
daa
das
pushf
filds
or
or
push
inc
ljmp
or
jge
cs
int3
insb
call
and
cmp
pop
xor
mov
cmp
repnz
sbb
lock
dec
adc
mov
xor
add
mov
out
add
lcall
xchg
aam
out
pushw
pop
add
mov
leave
xor
dec
xchg
jbe
in
pop
movsb
dec
xor
xchg
push
xor
orb
xchg
xchg
lret
addr16
inc
mov
mov
push
inc
rclb
cli
add
gs
jbe
ja
xchg
mov
dec
call
js
sub
and
lods
and
push
adc
pop
cs
mov
inc
mov
ret
rep
or
add
fwait
jmp
ss
xor
xor
add
in
pop
pop
in
or
sbbb
les
mov
pop
xor
test
clc
cmp
pop
cmp
add
cmpsb
loopne
add
dec
adc
iret
dec
sub
aas
and
xor
in
stc
lret
lock
repz
pop
popa
push
adc
sahf
in
pusha
stc
fcoms
jle
sbb
cli
dec
jecxz
ret
insb
cmpsl
rolb
mov
push
xorb
pop
std
mov
test
in
pop
scas
aam
adc
xchg
outsl
test
ss
loopne
xor
jo
sbbb
leave
sub
xor
adc
lahf
sbb
cmp
fcomi
add
fadd
es
sub
rol
xchg
adc
cli
es
and
push
jae
rorb
xchg
mov
roll
or
mov
pop
stc
sub
clc
pop
add
cli
add
and
push
fidivs
je
xor
sbb
sbb
dec
shrb
daa
adc
adc
inc
xchg
sbbl
rcrl
subb
mov
lods
cmp
filds
xchg
stos
push
clc
mov
dec
stos
push
icebp
dec
sbb
mov
in
add
pop
outsl
cs
dec
inc
adc
jle
add
mov
jge
bound
inc
loop
fmulp
add
movsl
mov
adc
in
mov
lods
fsubrs
dec
xchg
sbb
sti
jmp
push
fs
jp
incb
and
cmp
xchg
xchg
js
shrl
sahf
jp
out
pop
scas
lret
test
ljmp
or
sbb
incl
xchg
into
fs
mov
nop
cmp
xchg
jno
aaa
loop
lock
pop
cmp
mov
mov
xchg
lahf
mov
pop
bnd
mov
cmp
das
and
add
xchg
mov
mov
pop
and
dec
pop
fidivl
cmpsb
in
mov
mov
inc
imulb
push
sahf
jae
jo
lcall
ficoms
imull
lods
ja
push
pop
adc
test
rcrl
inc
pop
subb
fcoms
imull
push
jnp
xchg
cmpl
dec
xor
inc
jl
mov
mov
fadd
push
addr16
mov
cmp
shlb
andl
inc
cmpsb
fidivrl
mov
mov
xor
pop
xlat
lods
aam
jl
jmp
movsb
sub
cli
xchg
mov
scas
add
lock
and
ffree
int
cmp
fs
push
and
test
pop
icebp
mov
lds
push
test
xchg
popa
add
xor
mul
push
jge
push
addr16
adc
push
push
rol
push
push
scas
int
mov
data16
adc
pop
pushf
leave
sbb
sbb
push
les
mov
push
jnp
or
push
out
jo
icebp
loopne
xchg
add
ficomps
out
mov
jl
mov
mov
xchg
sbb
movsl
je
das
int3
test
pop
iret
pop
push
mov
add
and
imul
movsl
and
sbb
ds
cmpsb
pushf
jno
inc
addr16
daa
pushf
loop
xchg
sbb
adc
mov
sbbl
ss
flds
push
call
push
cmp
mov
and
loope
cmc
mov
push
cmpsl
shlb
cmp
fildl
lea
dec
jle
push
test
pop
inc
jae
jb
lret
xchg
jge
ss
aas
pop
cmpsb
inc
das
jo
call
test
jbe
out
inc
loopne
fwait
scas
test
popa
test
mov
sub
add
pushf
pop
ja
mov
cmc
dec
xchg
add
cmpl
xchg
das
icebp
or
out
filds
daa
test
outsb
push
cli
xchg
lea
or
mov
xor
ror
nop
mov
loopne
cmp
adc
insb
cmp
loop
outsl
roll
pop
jp
in
rcll
in
sbb
shl
mov
lods
sub
mov
aad
lahf
dec
adc
jae
mov
outsb
mov
lds
out
lds
popf
or
or
jp
test
sbb
rcrb
sbb
jle
dec
cmp
call
cwtl
cld
nop
sub
leave
pop
push
xor
mov
push
pusha
dec
mov
test
arpl
mov
loope
mov
loop
and
push
lahf
sahf
sahf
push
add
test
mov
pop
mov
add
cld
je
jmp
test
sbb
aaa
xchg
jg
insl
pop
gs
cmp
xchg
push
mov
lcall
sub
inc
mov
je
xor
addr16
inc
js
push
add
jmp
push
test
pushf
mov
loope
cmp
into
sbb
push
adc
dec
inc
xchg
data16
out
cmp
xchg
pop
or
cmpl
fcompl
icebp
xchg
enter
push
movsl
mov
add
ret
pop
mov
or
pushf
sub
push
test
lods
mov
xchg
cli
adc
sub
lret
dec
icebp
icebp
insb
inc
jg
inc
imul
call
push
addr16
pusha
sti
jp
out
lods
add
je
sbb
pop
ret
mov
vmread
mov
push
xor
sub
mov
fldenv
jl
mov
mov
repnz
leave
in
adc
cmp
pop
pop
xor
pop
mov
ds
test
push
popf
outsb
cmc
inc
loope
leave
js
shll
imul
adcb
inc
imul
cmc
add
pop
insl
and
mov
shrl
insl
je
mov
repnz
and
sub
es
jg
pop
jne
cmp
dec
loop
sub
push
clc
insl
jg
pushf
adc
jae
or
sbb
add
xchg
jb
insl
andl
jo
loopne
daa
pop
pop
adc
cmp
pop
mov
sub
ss
dec
cmp
adc
mov
adc
les
repnz
mov
les
aam
mov
xor
xchg
add
movsb
movsb
mov
lods
dec
cmp
mov
call
push
mov
pop
ret
addl
cmp
inc
mov
loopne
jg
adc
sbb
xchg
jo
lock
scas
mov
sbb
hlt
lcall
out
daa
cmp
jns
sbb
jecxz
out
xor
xor
pop
xor
sarl
xor
mov
mov
inc
iret
mov
mov
sub
mov
mov
mov
cs
xorb
movsl
pop
fnstsw
cs
push
addl
ds
cmp
pusha
pushf
push
mov
adcl
inc
loopne
inc
add
lods
cli
mov
cld
sbbl
sub
dec
aad
push
aam
mov
xchg
aas
xor
fiaddl
cmp
dec
mov
in
jo
sub
mov
fistpll
inc
ss
inc
outsb
loop
js
repnz
fldl
std
cmpsl
adc
fwait
dec
push
mov
xorb
mov
in
out
pop
ja
jne
pop
mov
imul
add
inc
test
mov
mov
fldt
data16
pop
or
dec
cmp
xchg
in
lods
push
xchg
dec
push
sar
push
inc
mov
les
mov
mov
fwait
cli
lods
or
outsl
outsl
les
push
push
adc
push
sbb
cmpsb
sarl
jp
sti
push
test
or
pop
cmp
or
movsb
pop
mov
call
or
sub
cmpsl
or
pop
test
dec
add
pushf
or
jle
push
mov
icebp
cmpsl
pop
xchg
iret
cmp
cmp
pop
xchg
ret
aas
mov
pop
adc
mov
jle
ss
fcoml
loopne
dec
pop
xchg
lea
add
lret
jmp
mov
and
jl
inc
pop
sbb
xorl
mov
pop
sahf
in
mov
insb
lahf
daa
pop
pop
cmp
xchg
sub
leave
push
and
xor
sub
dec
adc
cmpsl
push
into
or
or
ret
push
xchg
mov
insb
cmp
inc
fs
push
pusha
jl
aad
std
outsb
xchg
bound
cmp
push
aam
jecxz
imul
out
cmpsb
mov
xor
iret
inc
mov
xchg
xchg
inc
loope
mov
add
jmp
cld
add
jbe
xor
sub
bound
rorl
icebp
add
sarb
shlb
gs
jl
out
push
loope
sbb
fwait
hlt
ret
repnz
movsl
inc
mov
sti
mov
fcmovbe
je
add
jg
push
xchg
lahf
adc
pop
pop
pushf
loopne
mov
lcall
ret
sbb
pop
mov
test
mov
inc
das
ds
mov
sbb
xor
mov
call
push
cmp
and
sbb
loop
push
fidivrl
adc
data16
jl
xor
fbstp
adc
dec
jle
or
ret
cmc
rclb
addr16
ljmp
rcr
and
fisttpl
mov
sbb
pop
pmaxub
cmc
jbe
push
add
aaa
scas
fs
add
leave
pop
pop
ljmp
adc
or
popf
xchg
lahf
les
insb
aad
add
mov
aad
sbb
sbb
pop
insb
sub
inc
rclb
push
lcall
ds
rclb
ds
cmp
adc
inc
cltd
idivl
push
add
dec
or
xlat
mov
push
jmp
lret
aas
jo
inc
push
dec
pop
or
jmp
lock
bound
scas
aad
insb
adc
sub
mov
mov
daa
fxam
xchg
imul
stc
jl
repz
mov
lock
pop
test
xor
mov
divb
mov
push
sbb
adc
mov
fildll
dec
jle
shlb
popa
sarb
mov
fiadds
stos
adc
jb
add
mov
sbb
dec
xchg
movsb
xchg
jl
xchg
ret
mov
mov
imul
je
loopne
xor
jo
push
mov
scas
pcmpeqd
add
pop
cmp
je
adcb
addl
ret
cli
cmp
mov
xor
pop
out
cs
data16
addr16
mov
sbb
popf
aas
mov
xchg
insl
andl
loopne
mov
cmpsl
insb
mov
cld
push
stc
jge
in
lea
cmpsl
or
std
fsubl
out
mov
std
xchg
je
leave
mov
xor
pop
ret
jmp
mov
addb
in
add
or
mov
mov
mov
dec
mov
adc
xor
rcl
xchg
cmovl
dec
ret
aaa
adc
pop
push
push
sarb
xchg
push
pop
pusha
cmc
insb
in
add
out
jge
xchg
sub
dec
enter
or
sbb
xlat
je
push
sbb
jno
and
cs
adc
fs
sbb
xchg
add
sbb
or
jl
je
mov
mov
sbbb
mov
mov
fsubs
aam
out
push
jo
jae
lret
shlb
cmp
test
mov
inc
adc
push
cmp
pop
or
sahf
rclb
repz
or
push
addl
icebp
and
mov
imul
jno
fisttpl
fmuls
xchg
imul
mov
repz
addb
jecxz
push
mov
inc
sbb
mov
lahf
mov
or
or
les
xchg
or
xchg
outsb
out
nop
mov
incb
sub
cmp
rcrl
test
mov
mov
adcl
add
jge
xor
push
sar
orl
test
movsb
fsubs
filds
fcmovne
pop
push
out
jl
push
shl
dec
or
shl
test
shll
mov
add
xor
jecxz
imul
cli
add
cltd
int
mov
mov
out
test
fisttpl
jns
or
loope
and
mov
scas
mov
mov
mov
push
stc
xor
mov
mov
ss
or
pop
dec
mov
xchg
inc
inc
mov
and
popa
push
fsubr
jl
push
sbb
pop
scas
sub
sub
adc
or
xchg
sub
aad
mov
clc
push
sarl
pop
into
mov
ljmp
pop
addr16
ret
jmp
loopne
insl
shr
jae
add
dec
xchg
push
dec
insl
insl
jl
jno
stos
sub
sbb
sbb
mov
or
psrad
outsb
dec
lods
nop
aaa
icebp
push
mov
loop
mov
js
lahf
imul
aaa
cmp
rcll
add
cs
lods
les
test
xchg
dec
test
out
dec
cmp
fidivl
out
test
xor
test
or
cmpsl
pop
andl
loopne
mov
mov
pop
cmpb
icebp
lods
cmp
adc
push
arpl
dec
jg
jns
mov
test
sub
sbb
std
jno
mov
adc
sbb
ljmp
fbld
bound
mov
bound
mov
pop
lahf
out
fstpt
mov
jmp
shl
pop
insb
je
sub
jge
adc
adc
cmp
sarb
popa
pop
scas
xchg
push
push
dec
cmp
not
mov
jb
jno
ja
pop
test
xchg
shl
fisubrs
dec
xchg
or
push
push
mov
jecxz
jns
icebp
cmpsl
out
or
or
shlb
insb
pusha
sub
bnd
mov
shr
sub
inc
sub
fidivrl
sub
cld
lcall
cmp
shr
lret
cltd
insb
xorb
mov
xchg
jo
pop
mov
pusha
cmpb
jl
mov
jb
sbb
lods
cmpsb
mov
sbb
adcb
ljmp
inc
sub
xorl
cwtl
jmp
icebp
xchg
pusha
cmp
fadd
adc
jp
pmaxsw
repnz
lea
xor
mov
ljmp
ljmp
sub
rol
mov
mov
adc
mov
jge
ljmp
mov
imul
push
jp
or
or
fs
jmp
cltd
pushf
pop
roll
xlat
inc
inc
divl
les
repnz
add
in
adc
pop
xor
insb
les
test
jo
adc
jmp
lcall
cld
pop
out
lcall
loop
xchg
rcrb
cmpsl
popf
jl
aam
or
push
mov
js
sub
scas
hlt
or
jno
pop
ret
leave
test
out
inc
sbbb
push
cmp
pop
mov
fsubrl
jge
mov
loopne
decl
loopne
mov
add
aaa
push
rorl
xchg
sbb
out
mov
outsb
mov
pusha
lds
rclb
jmp
jle
adc
dec
sub
and
inc
and
xor
cs
test
pop
movsb
inc
out
pop
mov
repz
push
dec
cld
pop
cli
cmpb
out
ret
and
xchg
mov
jb
cmpsb
add
and
adc
push
jo
cmp
pop
inc
rcrb
gs
mov
mov
push
fidivs
mov
icebp
adc
or
out
nop
lea
lock
mov
cmp
js
nop
in
rorb
mov
mov
xorb
mov
or
sahf
adc
xchg
aaa
shr
add
cwtl
mov
out
dec
orl
clc
add
mov
mov
add
insl
cld
ret
xchg
push
pop
pop
call
cmc
jae
jno
push
subb
in
insb
movsb
xchg
idivb
add
adc
lods
inc
and
push
sahf
sbbb
lahf
insb
sti
jno
and
inc
ficoml
push
ja
lock
das
stc
inc
or
fdivrs
fdivr
mov
jge
xchg
inc
out
jecxz
cmp
loop
mov
outsb
clc
sbbl
xchg
jle
js
js
pop
or
scas
inc
cmpsl
das
pop
aam
push
push
mov
pop
lret
dec
xchg
roll
sub
mov
push
pusha
mov
and
je
js
cmp
jno
inc
insb
mov
mov
push
inc
or
lahf
ret
xchg
fistpl
scas
and
shl
pop
sbb
inc
jl
aam
lds
pop
cmpsb
or
adcb
dec
push
andl
call
test
cmpsb
insb
jecxz
ret
adc
fistl
nop
pop
repnz
stos
mov
stos
and
inc
lds
adc
inc
mov
or
inc
mov
stc
or
add
adc
jae
inc
pop
shl
inc
stos
test
orl
or
ds
stos
stos
add
push
nop
pop
popa
lock
xor
mov
fcmovne
sbb
mov
sub
or
out
movsb
jmp
inc
rol
sbbb
mov
sbb
js
inc
subb
push
std
or
or
sbb
orl
pop
add
cmp
pop
ret
inc
cwtl
je
hlt
call
insl
sub
call
fwait
leave
push
testl
and
sbb
scas
inc
xor
sbb
pop
sbb
js
xchg
js
sub
cltd
xchg
add
repnz
inc
hlt
js
adc
mov
adc
scas
lds
and
push
mov
icebp
add
movsb
cmp
pop
andb
mul
inc
mov
ret
ror
out
fidivl
mov
mov
negb
xchg
push
loopne
jnp
fisubs
mov
mov
js
add
pop
rorl
sub
aad
cmp
mov
sbb
outsl
loopne
mov
shrb
or
imul
xor
xor
mov
cmp
lock
inc
mov
pop
out
nop
push
push
xlat
fidivrl
jmp
add
dec
andb
ljmp
adc
xor
push
or
fwait
dec
popf
jns
jge
xor
sbb
jle
out
and
into
mov
push
sbb
ret
pop
int
test
sbb
sbb
dec
mov
mov
mov
inc
lcall
inc
mov
jo
jae
mov
adc
pusha
ja
cmpsl
and
inc
aas
orl
insb
lret
hlt
xchg
pop
xchg
xchg
jbe
repnz
lods
sbb
cmpl
and
push
inc
add
out
cmp
or
jmp
mov
add
push
push
add
xor
add
push
je
mull
sbbb
cmpb
out
loop
and
icebp
mov
pop
das
mov
adc
mov
add
mov
mov
adc
mov
sbb
clc
icebp
adc
sbb
jbe
cltd
sbb
or
inc
out
cmp
inc
or
or
jno
dec
jns
mov
jge
sbb
lods
outsl
loop
cwtl
and
sub
lret
push
push
jb
ds
adc
aam
adc
out
push
cld
popf
or
sub
adc
movsl
pop
lock
push
stos
sub
jb
adc
sbb
cmp
mov
lods
push
mov
push
jbe
add
pop
jge
cmp
push
push
adc
out
or
mov
pop
push
leave
mov
fldl
lret
into
xchg
aad
imul
push
sub
cmpsb
mov
push
mov
std
or
shr
lahf
jp
subl
shlb
push
pop
jne
test
push
enter
jnp
in
adc
push
xchg
aas
mov
mov
das
imul
test
or
add
dec
loopne
adc
sbb
sbb
out
push
adc
addl
xchg
add
add
insb
mov
lahf
jb
inc
cld
push
aas
jnp
sbb
sbb
jp
arpl
jmp
divl
fimuls
ja
popf
movl
xchg
lcall
dec
pop
pop
insl
test
mov
mov
xchg
scas
bound
outsb
add
icebp
jns
repz
add
sahf
sti
and
frstor
movsl
add
fmuls
sub
lods
pop
das
push
jl
mov
aad
aam
cmp
jle
lcall
dec
jo
decb
pop
mov
pop
push
adc
sub
hlt
sbbb
xchg
test
push
rorb
loopne
push
inc
rcrl
dec
push
push
inc
pop
or
aaa
jecxz
mov
sbb
test
or
mov
cmovl
mov
loopne
sti
pavgb
inc
popf
xchg
jno
add
adcb
xchg
pop
fldenv
xchg
add
jbe
icebp
xlat
push
repz
in
lret
push
inc
outsb
popa
aad
in
loop
rorl
adc
jge
add
out
inc
bound
jle
rcrb
push
jne
adcl
xchg
cmc
add
je
push
sub
or
outsl
aaa
rolb
mov
mov
dec
mov
int
inc
lahf
sub
xchg
inc
jl
adc
mulb
cmp
lods
push
xchg
jnp
lret
cmp
cli
pop
fucomi
xchg
outsb
out
cmc
inc
out
mov
shl
add
int
pop
mov
pop
iret
outsb
push
adc
lret
push
inc
mov
jae
xlat
or
stc
lock
aas
pop
stc
pop
lock
ds
xor
shll
pop
dec
xchg
ljmp
or
and
mov
fdivp
rclb
loopne
shll
inc
cmp
inc
in
mov
jo
jbe
sub
lods
test
inc
push
loopne
pop
ja
sahf
ror
repz
out
dec
movsl
das
mov
inc
test
and
filds
sub
sub
add
pop
shrb
mov
inc
jmp
aam
add
dec
stc
mov
mov
dec
xchg
jge
out
outsl
pop
mov
lock
lahf
push
jb
cmpl
sbb
cmp
sar
dec
daa
aaa
xor
add
ret
test
data16
sub
jl
jmp
cwtl
push
daa
and
cmp
cltd
outsw
rclb
xchg
insl
scas
clc
or
mov
into
adc
adcl
mov
outsb
rorb
xor
mov
pop
or
sub
fists
outsb
sub
cmp
rorb
stos
pop
hlt
mov
mov
jbe
stos
add
and
popa
sbb
sahf
xor
js
std
lcall
das
lods
pop
sub
pusha
jecxz
add
jle
add
sub
mov
or
push
jp
adc
loope
mov
cli
and
cmp
xor
pop
cmp
sub
inc
into
fs
hlt
cltd
popa
out
int3
xchg
movsl
add
fwait
cmp
sub
js
icebp
dec
or
push
aas
fwait
cmp
icebp
jl
mov
insb
mov
pop
test
cli
sub
repz
push
pushf
inc
rcll
insl
adc
adc
adc
pop
xor
lods
cmp
xchg
mov
xor
add
sbb
xchg
xchg
mov
pop
int
das
xchg
shll
rolb
cwtl
push
and
xor
adc
rcrl
orb
repz
js
pushf
adc
adc
jp
inc
into
jecxz
pusha
dec
icebp
lcall
scas
push
pop
mov
add
and
mov
mov
ljmp
mov
out
add
ja
js
int
xlat
orb
sub
aaa
fsubl
mov
pop
fs
push
jb
int
rcrb
mov
push
mov
fidivrl
ss
cli
mov
fwait
pop
int
mov
addr16
sbb
sbb
or
mov
bound
inc
pop
and
loopne
pusha
int3
clc
mov
movsl
dec
xlat
cli
call
pop
inc
xorb
subb
adc
mov
stos
adc
sub
mov
addb
sub
loopne
lock
inc
loop
pop
movsl
fs
cmp
mov
inc
pop
movups
insb
rclb
and
aas
enter
and
jno
cld
add
les
js
xchg
cmc
mov
das
dec
xor
les
jo
dec
mov
out
inc
fldt
mov
inc
test
inc
mov
out
fmulp
adc
arpl
in
mov
xchg
fadd
push
xorb
js
add
popf
sbb
jmp
ret
pop
mov
cli
cmpsl
cmpb
or
pop
fsubrl
inc
sti
and
cmpsl
sbb
mov
ret
sub
pop
push
and
lcall
std
insl
mov
divb
push
cmpsl
push
cmpsb
and
sbb
cmpsb
pop
outsb
icebp
adc
or
dec
aam
das
fstps
mov
xor
imull
and
jecxz
je
push
sub
and
faddl
xchg
xor
jb
mov
ret
out
negb
fistl
cmp
rol
jg
jecxz
and
test
push
rcll
add
loopne
adc
xchg
std
lods
aam
xchg
lds
sti
mov
insl
mov
out
push
jecxz
jo
xchg
adc
sub
mov
hlt
stos
inc
insb
out
adc
shl
pushf
fcmovne
in
sub
lcall
sbbl
mov
inc
insb
in
xchg
cmp
je
insl
and
aas
add
cmp
inc
ret
cmc
pop
mov
inc
push
stos
adc
xor
dec
aas
hlt
cmp
push
mov
sub
cmp
xchg
repnz
jno
fcmovbe
mov
dec
push
jbe
and
sbb
das
pop
and
mov
faddl
ret
jo
aam
pop
inc
mov
js
dec
push
cmp
or
cmpsb
push
loopne
stos
in
and
mov
mov
add
jge
fldz
or
fsubrs
inc
push
xchg
pop
inc
gs
pop
mov
mov
push
shlb
sub
push
out
cld
push
inc
jae
sbb
daa
stos
cmp
sarb
xchg
jl
xchg
jmp
sbb
and
xchg
adcb
push
push
mov
cmova
repz
jb
add
movsb
outsb
pop
loope
stos
dec
dec
lods
sub
imul
movsb
mov
xor
lret
inc
or
lock
mov
loopne
dec
dec
mov
add
fs
pusha
jnp
adc
mov
add
repz
fldl
push
mov
sub
hlt
lcall
add
xor
dec
cmp
dec
data16
xchg
aam
xlat
cld
pop
insb
cld
xor
std
adc
pop
sbb
cmp
and
int3
int3
mov
fidivs
xchg
xor
lcall
xchg
repz
dec
pop
push
or
push
movsl
jb
divl
mov
push
adc
mov
push
loop
cld
add
or
adc
enter
jl
outsb
lds
fmull
mov
imul
mov
push
lret
cmpsb
aaa
fists
xor
or
mov
nop
pop
add
lret
lahf
mov
push
out
dec
loopne
scas
sbb
lret
incb
inc
pop
testb
inc
insb
push
out
pop
dec
add
xchg
push
clc
xchg
jle
fs
ljmp
mov
jo
ss
lret
sub
stos
and
xor
cmp
std
cmp
push
lahf
cmp
ret
ljmp
out
adc
pop
sub
push
mov
out
cmp
mov
sahf
dec
inc
jb
fs
into
sbbb
outsl
sbb
aas
mov
pop
sarb
jmp
dec
mov
mov
ret
dec
insl
test
pusha
shr
movsb
mov
jbe
xchg
sub
movq
ljmp
and
popa
aas
cmp
jp
iret
in
pop
cmpsb
mov
sbb
xchg
pop
push
pop
cli
adc
addl
repnz
inc
rolb
mov
push
or
add
in
pop
dec
jno
jbe
xor
xchg
cmc
push
mov
hlt
ret
scas
inc
dec
aam
and
add
mov
fcmovnbe
outsb
insl
dec
scas
xorb
mov
jns
cmp
jns
jae
or
loopne
pop
je
push
inc
je
mov
rcrl
cmp
mov
pop
lock
sub
loopne
filds
pop
add
xlat
std
or
mov
xor
fidivrl
jo
xchg
bound
add
pusha
dec
inc
and
gs
data16
adc
inc
ret
aas
pop
popa
push
pushf
xor
add
arpl
fdivl
push
ret
sub
xchg
cli
aam
add
jne
lret
fwait
incl
das
cmp
cmp
aad
and
cmp
add
mov
das
aaa
aas
xor
sbbb
xor
in
loope
push
ljmp
xchg
xchg
or
test
push
leave
fsubrs
inc
icebp
stos
mov
cli
or
hlt
movsl
sahf
pop
popf
and
push
pop
repz
les
push
ret
adc
dec
stos
outsl
mov
sbb
lds
cwtl
les
leave
insb
insl
xchg
adc
test
sbb
clc
fdiv
sbbb
push
push
outsl
xchg
hlt
mov
mov
aad
jmp
lahf
std
pop
jae
mov
loop
imul
mov
shll
aaa
inc
insb
add
inc
aas
adc
stc
inc
seto
mov
mov
clc
and
sbb
jb
lret
mov
lds
outsl
xchg
sub
je
out
inc
xchg
fcomps
dec
sbb
addl
xor
mov
dec
pop
cmc
mov
mov
pop
pop
push
jbe
int
mov
ret
xchg
loope
adc
ljmp
mov
imul
mov
rolb
dec
or
adc
pop
loope
fimuls
movsb
add
inc
scas
imul
in
mov
jb
fs
mov
xor
cmpsl
or
sbb
add
cmp
rcl
scas
hlt
and
mov
test
mov
push
xchg
mov
hlt
scas
sub
cmpsb
and
pusha
sub
rcrb
adc
mov
inc
mov
in
inc
lahf
xor
jg
addl
mov
lcall
jg
adc
movsb
cltd
and
lahf
mov
inc
mov
ja
xchg
cltd
pop
repnz
test
mov
jecxz
aas
lcall
rcr
cmc
fcoms
lods
add
sbb
aad
pushf
hlt
sbb
out
es
bound
ret
mov
cmp
aam
push
fs
pop
test
jmp
mov
rorb
fmul
cs
pop
xchg
insb
inc
sahf
push
out
inc
sbb
andb
out
cld
mov
cs
add
lods
lret
mov
fucomip
call
in
addb
sub
xchg
or
bound
enter
and
sub
jg
ljmp
mov
xchg
jno
jbe
jmp
mov
push
xor
rorl
sub
out
pop
cli
outsl
mov
xchg
movsb
push
pop
inc
clc
mov
sbb
mov
push
cli
push
rep
loop
and
shlb
mov
jge
xlat
pop
xchg
pushf
les
aas
repnz
ret
cmpsb
push
cmp
test
out
fidivl
loope
pop
inc
push
lret
icebp
and
jbe
mov
idivb
pop
xor
loop
push
rclb
sub
int3
mov
outsl
nop
xor
sahf
loopne
xchg
inc
aam
inc
add
push
arpl
xchg
test
sbb
ljmp
or
movsb
and
popf
ss
test
test
inc
insl
scas
jo
adc
and
pmaxsw
xlat
rorb
and
and
sbb
loope
insl
xchg
adc
in
push
push
fdivl
test
push
ret
inc
data16
outsl
xchg
xor
mov
rcll
cmc
inc
pusha
and
dec
sub
bound
shl
cmpsl
outsl
lea
cmp
mov
pop
mov
xor
jo
mov
mov
add
std
shrl
cld
xchg
add
ljmp
shll
daa
push
aam
je
pop
adc
dec
or
and
fs
jg
sub
cbtw
sar
jg
add
arpl
ja
xor
or
or
in
dec
aam
pop
rcrl
cld
and
stc
scas
in
testl
xchg
xor
and
dec
rcrl
sub
in
jle
xchg
xchg
dec
sub
clc
and
orb
and
xor
add
cmp
xchg
sub
inc
push
adc
into
in
jmp
cld
pop
xor
fstpl
mov
mov
jp
fisubrl
pushf
mov
xlat
test
xchg
push
rorl
cmp
jo
mov
loopne
mov
push
xchg
inc
dec
lods
or
movd
or
in
out
jmp
popf
xchg
adc
pop
add
jbe
pop
mov
fildl
inc
or
fwait
mov
xor
inc
lahf
out
cmp
test
test
push
lods
rclb
dec
popa
daa
sbb
loope
xchg
fcoml
push
sub
cmc
in
jecxz
nopl
mov
bound
inc
divb
xorb
jl
lods
or
xor
push
dec
push
jl
stos
mov
mov
xchg
push
rolb
sarb
adc
xor
sub
ss
inc
negl
andb
add
jns
push
adc
or
es
xchg
ss
hlt
rorb
xor
not
dec
cmp
adc
cmpsb
pop
subb
hlt
or
inc
xchg
add
arpl
xchg
or
inc
imul
cmp
pop
sbb
pop
addl
or
push
xchg
stc
int
orb
rolb
test
dec
xor
roll
mov
sbb
cld
jg
inc
adc
out
adc
jno
mov
inc
add
lods
pop
andb
dec
cld
outsb
inc
or
jo
and
rol
mov
mov
popa
imul
and
call
or
dec
cld
adc
inc
mov
pop
enter
stos
ds
mov
outsb
stos
aam
bound
call
add
stos
sub
push
js
out
mov
sub
jne
nop
mov
or
push
rcl
into
jmp
shl
jg
pop
push
outsb
aam
dec
push
pop
push
js
and
notl
mov
cmpsl
cmp
lods
scas
clc
mov
pushf
xchg
mov
out
cld
sub
mov
addr16
add
jge
inc
mov
mov
inc
aaa
jne
mov
mov
xchg
xor
jo
jecxz
flds
adc
js
cwtl
sbbl
mov
sbb
cmp
inc
adc
and
cmp
dec
adc
adc
mov
dec
loop
imul
lahf
inc
and
ss
mov
push
mov
ss
mov
push
int3
test
cmp
add
mov
push
xchg
mov
sbb
push
dec
mov
imul
or
pop
lret
or
push
sub
outsb
inc
aaa
jl
leave
and
out
mov
ret
adc
insb
inc
xchg
rolb
outsl
add
xchg
imul
cmp
add
pop
xchg
dec
dec
push
ret
das
rcrb
sbb
adc
hlt
icebp
repnz
adc
dec
shlb
sahf
sub
dec
inc
aas
and
push
jno
dec
xor
in
cmp
cmc
cwtl
jl
in
mov
push
sbb
mov
xorb
mov
and
push
cmp
mov
cmpsl
xor
cmp
lcall
pop
push
aam
add
sbb
ja
push
shlb
mov
mov
ds
int3
mov
call
or
mov
outsl
xchg
dec
or
leave
arpl
int
push
loope
add
jbe
xor
xchg
ss
mov
jle
jl
shrl
stos
xor
inc
cld
xor
mov
mov
lahf
cmp
loopne
ret
test
loop
cmpsb
or
sbb
xchg
jns
mov
cmp
dec
movsb
xor
call
pop
les
sub
sub
lcall
add
ljmp
sbb
in
insl
fs
inc
or
cs
andb
aas
in
movb
mov
xchg
xchg
stos
insb
jecxz
imul
incl
lock
push
adc
loope
mov
push
xchg
or
test
dec
push
sub
sbb
add
mov
cli
mov
xchg
test
js
test
lods
sbb
std
add
adc
xchg
xor
hlt
fbld
pushf
aam
xorl
pushf
pop
lods
stc
clc
and
cld
dec
insl
fscale
es
inc
rolb
push
shlb
pop
shr
hlt
ljmp
iret
outsl
jecxz
jl
lret
xchg
ss
das
xchg
out
loope
jg
push
mov
push
out
inc
and
les
testl
je
add
add
or
push
mov
mov
ret
sahf
cltd
add
sub
and
pop
mov
jg
fisubs
hlt
fisttpll
xor
jp
or
xor
sbb
xchg
jmp
pusha
lods
jp
sbbb
add
aam
nop
clc
mov
aaa
adc
mov
fmull
lock
add
dec
or
xchg
pop
je
shrl
cmp
mov
or
cmpsb
out
aam
andb
les
ret
scas
mov
add
or
cwtl
add
repz
sbb
or
and
push
movsb
bound
gs
cld
xor
mov
test
pop
push
dec
or
and
cmpsb
mov
or
dec
lahf
gs
rorl
pusha
xchg
testl
hlt
xchg
pop
test
add
mov
pop
ja
or
sbb
es
push
or
or
push
or
ret
into
inc
loopne
sub
push
cs
mov
add
add
aaa
iret
adc
rclb
adc
cmpsb
clc
adc
or
test
push
js
std
fsubl
jmp
out
add
or
or
add
les
clc
mov
xchg
pop
ret
insb
or
dec
push
or
or
cmp
clc
lock
test
inc
cmp
jnp
fimull
jl
push
sub
ljmp
leave
adc
mov
shrl
pop
je
lock
call
xor
inc
sub
xchg
cmp
pop
adc
xchg
jne
xor
sbb
xor
sbb
add
xchg
add
dec
fistpll
jb
call
sbb
add
imul
xor
in
add
fisttps
pusha
push
iret
jecxz
in
xchg
push
loopne
pop
nop
push
jmp
sub
in
add
sbb
fwait
loopne
or
xor
fwait
aaa
or
fiaddl
scas
shlb
add
ret
enter
or
inc
loopne
jmp
push
xor
sub
pusha
fwait
mov
adc
push
je
xchg
dec
mov
xchg
push
cmp
mov
xor
xor
add
lds
outsb
mov
mov
pop
lret
daa
pop
cmp
mov
test
dec
mov
mov
lcall
imul
fwait
das
mov
cmp
orl
cmc
mov
jle
jg
add
out
out
in
jp
lret
add
call
bound
jne
shrl
pushf
dec
inc
shlb
adc
movsl
inc
push
pop
mov
mov
and
or
or
vrcpss
add
add
cmpsl
gs
bound
push
jo
leave
pop
pop
xchg
jo
jecxz
sbb
stos
xchg
push
dec
mov
call
mov
dec
sub
jg
cmp
call
inc
shrd
inc
movsb
test
sub
xchg
call
xchg
in
fmull
aas
inc
adcb
insb
fidivl
sahf
mov
shrl
adc
movntq
out
xchg
sahf
pop
adc
sbb
push
pop
pop
pop
int3
and
mov
push
xor
clc
mov
and
scas
ss
jmp
sub
pop
mov
xchg
mov
push
ret
fistpl
push
cmp
pushf
jb
pop
adc
adc
pop
sbbl
mov
sahf
fldenv
sbb
addb
pop
cmpsl
movsb
cltd
cmpsl
push
sbb
clc
loopne
dec
xchg
add
inc
jecxz
fcomp
push
push
mov
adc
gs
notb
aam
push
xchg
xchg
or
ja
mov
mov
std
mov
inc
jmp
cmpsb
ss
pop
sub
cmp
inc
push
adc
xor
push
ljmp
inc
adc
rcl
lods
aad
sub
orb
insb
out
popa
dec
jbe
clc
add
lock
add
xchg
push
pop
or
adc
xchg
shrb
xor
adc
cmp
pusha
xchg
xor
insl
loope
mov
and
fsubs
inc
xor
cwtl
mov
adc
mov
push
jo
or
push
movsb
fisubs
fiadds
lock
and
pop
add
cmp
int
dec
jl
push
mov
push
inc
clc
negb
add
in
ret
mov
pop
pop
les
mov
test
xchg
mov
mov
pop
ror
lcall
cmc
and
clc
or
ss
mov
xchg
sti
pop
inc
push
or
inc
inc
cld
out
xchg
insb
shll
cmp
hlt
cmp
jmp
fwait
xchg
mov
fucom
mov
jo
and
es
add
sub
addb
aam
push
mov
js
addr16
es
xor
outsl
xchg
sub
fcmovb
ficoms
pusha
dec
inc
inc
jp
cmp
cmpsl
add
dec
and
sbb
mov
imul
push
aam
xor
push
ss
dec
xchg
aaa
loop
or
fsubs
divb
adc
mov
mov
or
xchg
out
cmp
aas
xor
sub
push
in
jno
cmp
mov
adc
test
mov
pop
mov
cmpl
aaa
cli
add
ja
and
pop
enter
mov
incl
sub
or
popa
mov
sar
dec
lods
fwait
mov
pop
and
push
adc
mov
fwait
push
scas
sti
jb
fiadds
sub
sbb
push
jmp
lds
sbb
sbb
lock
dec
clc
test
out
clc
rol
jg
into
int3
or
push
sarl
cmp
cmpsl
lods
stc
dec
lods
jmp
jmp
clc
nop
cmp
and
push
mov
inc
popa
dec
sbb
neg
adcb
sti
inc
or
add
test
out
in
or
pop
inc
jp
push
incl
pusha
stos
movsl
pop
xor
test
jl
mov
jns
xchg
mov
mov
ss
mov
add
push
sub
aam
mov
xlat
repz
jp
push
and
pop
cli
insl
cmp
pusha
xchg
and
je
sub
fucomp
sarl
pop
push
inc
add
stos
not
out
or
push
jmp
mov
fucomi
test
mov
sub
les
pop
push
outsb
sub
xor
sbb
sbb
clc
aaa
jmp
pop
adc
cltd
or
loopne
fs
fmuls
pusha
mov
mov
inc
cmp
rcrl
jo
js
aad
pop
dec
addl
xor
add
daa
aaa
cmp
cmp
les
push
adc
sub
adc
dec
pushf
aam
xchg
rclb
pop
lds
sbb
testb
int3
mov
lcall
pop
les
and
js
jecxz
pop
dec
fisubrs
ljmp
aas
mov
push
mov
push
mov
inc
or
scas
or
int
push
js
stos
sbb
jle
loop
push
or
cmpsl
cmpsb
mov
xchg
add
dec
shlb
jp
pop
push
jle
leave
and
sub
add
insb
out
imul
addr16
ljmp
lods
xchg
insb
add
adc
faddl
inc
xchg
notb
pop
push
mov
push
or
mov
movsb
mov
jg
andl
jge
sbb
push
push
mov
cmp
jno
dec
pop
sbb
cmp
clc
dec
inc
add
xchg
into
pop
testl
mov
xor
notl
add
mov
lock
mov
push
adc
push
jle
test
cmp
pop
int
mov
fstpt
aam
mov
dec
lods
movsl
loop
pop
pminsw
push
scas
mov
and
or
fcoml
clc
sbb
test
insb
xchg
rolb
pop
popf
dec
xchg
mov
jmp
hlt
mov
or
fisttpl
mov
dec
jbe
fimull
ljmp
xchg
jo
dec
nop
in
iret
push
add
pop
int
ljmp
dec
or
inc
fwait
mov
cmp
in
lods
arpl
bound
xchg
out
jbe
ret
ret
inc
add
sub
ds
pop
clc
cwtd
clc
or
adc
test
jge
push
pop
retw
inc
xchg
sarb
mov
push
mov
les
dec
pop
mov
push
cmp
fcoml
mov
or
fmull
pop
adc
pop
icebp
in
fs
pop
fcoms
mov
dec
xchg
xchg
cmp
mov
in
push
shl
cmpsb
iret
mov
outsb
push
outsl
test
add
movsb
cmc
adc
inc
adc
dec
cmp
imul
xor
add
movsb
mov
push
mov
xchg
jge
sar
icebp
inc
insl
inc
sub
stos
insl
pop
pop
push
cmp
repz
push
cmpsb
mov
cmp
jo
js
int3
mov
push
sahf
xchg
push
insl
sub
jmp
xor
stos
fwait
pop
movsl
pop
stos
pmulhuw
call
push
and
lods
icebp
add
add
pop
sub
inc
je
jns
jns
jns
push
scas
sbb
xchg
adc
dec
fdivr
add
sub
add
or
rorl
shrb
inc
fs
test
insl
xlat
daa
dec
lock
dec
xchg
mov
sub
clc
mov
aam
icebp
clc
inc
mov
dec
sbb
cmpsb
pop
xor
lock
ret
fidivrl
dec
mov
xchg
push
mov
in
xor
xor
ljmp
fcom
xlat
lahf
jmp
lahf
add
cwtl
xor
mov
cmp
fistpll
or
clc
mov
xchg
xor
pop
out
add
fdivp
pusha
repz
js
test
je
loopne
call
and
xchg
jne
inc
add
xchg
insl
clc
xchg
in
mov
push
cmp
jno
mov
subl
rcrb
push
jae
mov
aam
testl
hlt
repz
fiaddl
cmp
in
add
jbe
fcmovnbe
mov
cmpsb
aad
stc
je
fcomi
fstl
outsb
add
mov
mov
jmp
pusha
popa
in
cmc
cmpsl
test
jle
dec
mov
mov
scas
icebp
nop
push
inc
push
adc
push
lea
std
dec
or
inc
aad
jl
and
dec
lds
xchg
jp
les
out
cmpsb
xor
cmp
sbb
loop
xlat
push
pop
lock
es
sar
fdiv
jae
ret
xchg
xchg
mov
nop
push
sbb
test
inc
jl
cmp
cmp
fldt
mov
xor
inc
jle
cmp
jle
mov
jnp
les
lock
and
jg
jo
mov
flds
stos
push
lods
jns
fsubs
or
mov
in
lahf
fdivrl
pop
xchg
cmp
adc
aam
sti
mov
mov
test
das
testl
mov
in
fstpl
pushf
js
vandps
and
dec
lea
jp
mov
add
fstl
gs
std
push
rcrb
shrl
sbb
push
js
stos
loope
inc
push
dec
pop
ss
aam
jp
sub
fildll
xchg
mov
cmp
decl
mov
mov
loop
jle
jge
inc
or
subl
jo
and
xor
push
inc
cmp
cmpsl
lods
add
sahf
add
and
sbb
jl
ja
inc
daa
xchg
psllq
push
pusha
cltd
add
mov
sti
sti
jl
xchg
aad
xor
mov
lcall
jmp
cmpsb
jmp
pop
sbb
fsubrl
push
pop
ficoml
cmpsb
out
jne
xchg
shl
pop
hlt
js
cmp
js
and
adcb
and
mov
jp,pn
cmpsb
sbb
inc
jno
adc
xor
push
rorl
jmp
mov
dec
pop
dec
xor
ret
dec
sbb
loopne
and
adc
aaa
xor
daa
cld
es
mov
lods
pop
repz
sub
cwtl
xchg
loope
or
xchg
pop
stc
sbb
xchg
fistpl
dec
add
faddl
sbb
add
ret
cmp
jecxz
movsl
sbb
dec
pop
cwtl
data16
pop
push
aas
ret
sub
add
cmp
pop
mov
mov
loopne
jmp
imul
dec
xor
mov
inc
adc
call
rolb
xchg
inc
jmp
sub
cmpl
xchg
sti
add
and
xorl
add
lock
sub
orl
lcall
js
in
add
inc
add
aam
fwait
sbb
inc
sub
insl
enter
fdivrl
jge
cmc
fadd
mov
ffree
push
mov
hlt
inc
or
pop
jno
repnz
push
stc
cmp
fucompp
mov
adc
or
or
push
push
or
jp
fadds
icebp
jo
mov
sbb
out
dec
sbb
pop
cwtl
out
gs
push
or
pusha
pusha
scas
pushf
insl
fsincos
add
push
add
xor
adc
movsb
pop
mov
pop
enter
and
hlt
mov
push
stc
scas
scas
mov
ljmp
add
mov
ljmp
bound
cmpb
mov
adc
xor
xchg
mov
sbb
sbb
cmp
push
xor
into
push
or
add
adc
or
inc
fwait
inc
sbbb
xchg
mov
popa
js
add
sbb
mov
cld
std
int3
inc
adc
mov
jp
mov
cmp
lods
pop
lret
mov
iret
or
jl
inc
xchg
aad
xor
cmp
jns
aad
movsb
jle
test
pop
jl
iret
cmpl
fst
sar
adc
mov
rol
jle
xor
fisubrs
sahf
inc
lret
xchg
push
aaa
loope
cmp
xchg
lret
out
inc
jne
hlt
outsl
in
lret
out
sbb
or
fisttpll
lcall
or
cmpsb
jmp
cmp
lds
mull
push
cld
cs
dec
cld
xchg
mov
pop
subl
outsb
insl
sub
ljmp
hlt
xchg
push
mov
push
xchg
movsl
out
pop
or
ljmp
iret
in
ficoml
jl
loopne
in
nop
inc
add
lock
incl
and
addl
scas
scas
dec
jno
adc
shlb
mov
xchg
dec
and
jl
lods
add
int
mov
add
mov
sbb
push
cmp
fidivl
inc
adcb
cmc
jge
and
in
push
lea
pop
cwtl
aas
pop
popf
ss
test
adc
pop
mov
call
pop
inc
in
mov
pop
nop
xchg
sbb
ret
les
push
jae
push
cmp
sbb
cli
sbb
xor
imul
dec
fsubp
movsb
mov
xor
xor
xchg
in
dec
xchg
or
adc
dec
or
push
sahf
shl
jno
mov
jno
xor
out
cmc
mov
and
push
pusha
mov
xchg
in
ljmp
pop
cmp
jl
jg
inc
out
xor
shr
cmpsl
ficoml
inc
popf
jb
rclb
loopne
and
xchg
push
xor
push
dec
sbbl
xor
push
mov
add
call
jl
mov
mov
in
imul
inc
cmp
movsb
cmp
cltd
adc
cmp
movsl
and
sahf
xchg
pop
and
push
bnd
int
sbb
add
sti
cmp
sub
pop
fisttpl
jle
dec
addr16
in
std
or
out
pop
adc
push
xor
adc
cmp
fimull
lcall
dec
sbb
fbld
repnz
pop
pop
jmp
fistps
or
or
insb
and
or
into
sbbl
clc
jns
and
dec
lahf
icebp
pop
sub
in
dec
sbb
shrb
popf
fwait
repnz
sub
imul
jae
inc
push
cmc
call
test
or
loopne
mov
ss
cmp
pop
add
sub
pop
jne
daa
mov
bound
adc
push
jne
sarb
pop
pop
or
stc
movsl
xchg
push
cmp
pushf
es
shrl
js
sub
inc
cmpl
dec
xor
imul
fcompl
das
sbb
cmc
or
push
hlt
ljmp
stos
aas
orl
push
xchg
or
jmp
xor
inc
sbb
adcb
popa
aas
arpl
cmp
xor
test
push
dec
sub
pop
xor
clc
jb
mov
push
cmpsb
cmp
rcr
add
sub
mov
cmpsb
in
stos
jo
mov
xor
pop
inc
push
push
and
xorl
sub
mov
xor
and
or
arpl
sub
mov
rol
add
ds
fwait
jne
push
arpl
daa
xchg
adc
mov
fs
aam
pop
test
ss
scas
es
lcall
jle
push
add
xlat
or
ja
mov
xchg
sub
test
ret
or
mov
or
push
fimull
out
fs
mov
sub
fnstenv
add
mov
mov
push
sbb
sbb
mov
adc
loopne
xor
jg
sbb
xor
loope
lock
repz
add
mov
and
iret
adc
sub
mov
mov
and
pop
lods
mov
xchg
jae
repz
leave
icebp
dec
loope
dec
insb
loope
pusha
cmpsl
pop
xchg
inc
in
push
imul
cmp
dec
push
pop
out
mov
jl
inc
mov
lods
inc
lock
mov
add
jp
and
stos
outsb
inc
jmp
inc
xor
pop
push
addr16
test
ja
xor
xor
cmpsl
add
shlb
pop
pop
push
cld
pushl
inc
popa
push
lahf
jl
jecxz
ss
scas
push
lcall
daa
jno
mov
jecxz
js
cli
hlt
mov
shll
mov
adc
adc
out
in
fists
cmp
ss
mov
loopne
scas
cmp
lcall
shlb
mov
jle
pusha
pop
movsb
mov
mov
cmp
loopne
push
xor
push
fs
cmp
or
or
int
pop
xchg
into
mov
xor
xchg
add
mov
rol
mov
jbe
pop
xchg
movl
ds
rcr
out
sub
int
jecxz
cmp
mov
pop
loope
addr16
or
mov
pop
xchg
or
aas
and
js
lods
inc
andl
xor
dec
adc
or
add
xchg
inc
ss
push
adc
shll
push
adc
in
stos
bound
test
sub
sti
add
shlb
or
cmp
gs
pop
popa
dec
out
sbb
cld
shll
ror
out
lea
push
jmp
hlt
cwtl
lea
sub
jno
pop
rol
es
nop
inc
push
pushl
jnp
push
or
ret
cmp
and
or
and
fistpll
mov
clc
sub
pop
xor
push
add
in
stos
jl
aaa
mov
or
enter
into
add
out
add
js
fidivrs
ret
into
xor
lock
jmp
inc
mov
push
out
or
and
bound
xor
adc
test
xchg
and
scas
xor
pushf
mov
or
pop
dec
push
push
out
jb
iret
popa
inc
in
mov
pop
dec
adc
mov
mov
stos
or
adc
sbb
adc
sbb
addl
jno
add
repz
das
jb
je
js
pusha
dec
mull
enter
arpl
mov
sbb
neg
pusha
jecxz
in
lods
test
push
pop
mov
jge
mov
bswap
int3
imul
pop
inc
call
xor
mov
mov
pop
daa
leave
sahf
in
push
mov
ds
subl
mov
jb
push
sahf
fcmovne
popa
inc
sar
jmp
iret
fwait
aaa
ja
pop
ds
out
pushf
and
or
mov
xchg
aam
loope
cvtps2pd
insl
jl
outsl
fmul
xchg
pop
pop
aad
lret
popf
data16
enter
loop
xor
shl
fldcw
xchg
clc
mov
mov
lods
icebp
inc
add
xor
nop
or
push
dec
jns
movsl
add
inc
inc
repnz
cmpsl
add
dec
packssdw
ficomps
adc
mov
fmuls
jecxz
repz
jno
adc
lret
xor
ljmp
ret
loop
or
and
adc
push
cmp
sub
jns
popf
mov
negl
pop
cld
arpl
pop
dec
sbb
daa
mov
and
ret
sub
push
mov
callw
add
push
inc
pop
xlat
dec
adc
xor
dec
in
testb
shll
cmpsl
leave
ja
outsb
lahf
notl
mov
repnz
cmpsb
scas
mov
xor
push
fdivrs
jbe
clc
xorb
aam
shlb
jecxz
out
sub
scas
daa
sbb
and
addb
push
dec
or
add
pop
out
pop
pop
pushf
fisubl
lea
sahf
sti
dec
aaa
scas
insb
jecxz
mov
jp
ret
in
inc
mov
jl
std
andb
push
fs
sbbl
mov
pop
pop
inc
cld
pop
push
jae
ds
adc
jmp
ret
testb
inc
clc
jns
mov
rorl
inc
mov
cmp
lds
dec
insl
dec
push
decl
sbb
adc
mov
push
pop
add
outsb
sbb
stos
sub
aam
jmp
mov
ja
push
push
push
movsl
xchg
and
pop
inc
aaa
adc
mov
mov
pop
and
add
adc
adc
repz
popf
or
cwtl
test
out
mov
cmp
jle
stos
inc
dec
xor
insb
lcall
inc
xchg
cs
lock
and
jp,pn
push
sbb
clc
xor
inc
data16
adc
or
into
jecxz
lods
lret
movsb
pushl
loopne
mov
mov
push
jbe
add
into
lahf
cli
or
rolb
sub
cmpsl
das
sbb
inc
sarl
movsl
das
repnz
cmp
or
and
aam
aad
leave
xchg
add
xor
push
icebp
jbe
nop
int
inc
outsb
mov
mov
cmp
push
jle
mull
insb
ret
inc
clc
sub
aaa
mov
jg
mov
jo
cli
mov
repz
cmp
mov
push
ficoml
pop
cld
xchg
jo
sub
xchg
add
fwait
aas
mov
inc
dec
dec
dec
sub
push
clc
add
testl
jecxz
jnp
mov
dec
xor
sub
mov
shr
mov
jge
out
shl
loop
rcrl
loopne
adcl
push
or
push
dec
sub
push
ss
cmp
icebp
cmp
mov
push
repnz
popa
dec
or
loop
dec
popa
scas
and
mov
test
imul
mov
outsb
aad
xor
sub
fstpt
rcrb
lds
stos
imul
dec
icebp
orl
sbb
jno
daa
push
mov
ss
aad
enter
mov
xchg
mov
mov
mov
mov
cmpsb
mov
push
out
icebp
into
sub
sarl
sub
cmp
adc
inc
loopne
mov
sbb
addr16
jno
xlat
sub
push
es
aam
repz
lret
mov
dec
jae
push
test
push
insl
adc
jge
xchg
repnz
scas
scas
dec
and
lds
pop
ret
mov
push
and
xchg
xchg
jecxz
addb
imul
mov
push
or
lock
jb
loop
or
leave
mov
test
push
in
pop
cld
lahf
aam
testl
fsubs
pop
repnz
fwait
cmc
nop
aam
imul
adc
int3
xor
fistps
sub
inc
mov
pop
xlat
mov
nop
arpl
pop
jmp
xchg
test
xor
repnz
mov
adcl
jae
test
mov
in
sub
xchg
cs
stos
into
push
jg
icebp
pop
ds
mov
dec
adc
push
inc
xor
loopne
cmp
xchg
and
mov
data16
pop
pop
adc
sbb
shrb
xchg
cs
fisttpl
loope
aas
jl
jbe
cmp
faddl
sbb
mov
adc
mov
incl
adc
not
push
fwait
or
xchg
adc
dec
addb
dec
popf
dec
pop
push
inc
insb
push
test
sarb
je
or
or
int
xchg
cmp
add
cld
or
sbb
cmp
data16
in
das
xor
jmp
out
andb
adcl
xchg
cld
incl
sbb
pusha
xchg
repz
push
aas
test
cld
sub
ss
jno
lret
sub
jbe
or
xchg
and
insb
cmp
dec
cld
sub
sti
pushf
les
mov
test
aam
or
mov
aaa
pop
mov
jnp
arpl
lret
or
sbb
cmp
cmpsl
dec
les
cld
jbe
push
mov
or
and
icebp
push
data16
and
bound
inc
xchg
cwtl
je
div
xchg
xchg
pop
fcmovnbe
and
push
bnd
in
or
pop
dec
jge
insl
outsl
leave
sub
jb
or
add
pop
out
cmp
clc
or
popa
int3
inc
dec
adc
mov
xlat
mov
dec
push
pop
mov
cmp
leave
hlt
out
notb
incl
lret
xor
cs
sbb
xor
mov
addl
dec
push
inc
ret
daa
mov
pop
push
add
test
popf
hlt
jg
test
adc
or
aas
mov
fistps
jb
pusha
or
in
mov
mov
jmp
ror
and
ret
lods
es
jmp
push
xchg
cwtl
or
subb
xor
pushf
sbb
jecxz
addr16
sarb
je
insb
subb
jno,pn
jle
push
int
mov
add
loopne
push
loopne
popa
add
and
push
xchg
jg
adc
aam
or
cmp
push
mov
adc
jp
mov
inc
inc
in
icebp
rcl
push
push
out
cmpsl
call
mov
adc
xchg
cmp
es
xchg
jae
xlat
push
gs
adc
scas
add
iret
test
jle
add
push
cltd
je
dec
add
or
xchg
lahf
push
insl
push
insb
adc
xchg
stos
jmp
das
shll
jae
cltd
sub
ljmp
sub
adc
filds
and
dec
out
sbb
icebp
jo
or
mov
call
cmp
pop
adc
mov
mov
aam
inc
test
sti
inc
or
jp
sbb
dec
idivl
inc
dec
add
mov
push
xchg
rolb
jle
push
mov
loope
les
push
outsb
aam
mov
jge
push
inc
call
ljmp
jp
cmc
call
dec
mov
jae
xor
ja
xchg
ja
aad
arpl
loop
leave
cmp
jns
fsubl
xchg
xchg
scas
das
cld
push
loopne
aad
jb
inc
mov
je
sbbl
sub
test
mov
insb
cmp
popf
push
mov
repnz
xor
imul
pop
lock
mov
or
aaa
ja
sbb
in
orb
adc
xor
pushf
ds
mov
cmpsl
test
dec
adc
push
inc
stos
sarb
xchg
fmull
cmc
mov
add
xor
stos
xor
adc
pop
jp
and
xor
aam
xchg
inc
lods
sbb
test
fisttpll
mov
push
clc
xor
pushf
xor
pop
fstp
sub
insl
insb
dec
push
pop
pop
scas
test
pop
adc
inc
cmp
cs
sti
imul
inc
aam
push
push
and
rcr
and
jmp
shlb
add
sbb
or
mov
dec
aad
subb
mov
loop
bound
call
repnz
inc
in
pop
xchg
lock
or
test
push
mov
or
dec
xorl
xlat
mov
xchg
and
int3
fwait
xor
lahf
jecxz
in
mov
add
rclb
jbe
or
adc
test
lret
xor
adc
fldl
dec
mov
jg
mov
leave
xchg
cmp
js
pop
repnz
pop
fistps
aaa
pop
lahf
data16
inc
xchg
push
inc
mov
test
jp
inc
or
inc
je
pop
sub
daa
rol
inc
test
xlat
xor
sahf
adc
cs
sbb
inc
decb
insl
pop
call
imul
mov
mov
bound
or
leave
test
xchg
fwait
xchg
jg
ss
push
pusha
cmp
sub
xchg
inc
aas
cli
mov
and
sub
jo
push
sbb
adc
arpl
test
popl
aam
orb
pop
and
outsl
inc
mov
popa
mov
out
es
mov
pop
shr
movsb
push
lock
insb
mov
jecxz
or
cmp
mov
lar
in
sub
inc
push
inc
mov
jg
es
movsl
aas
movsb
test
mov
in
add
aaa
cld
xchg
ljmp
cmp
dec
mov
popa
pushf
roll
inc
or
shlb
cmp
cmp
mov
into
jne
xor
jle
lds
and
pop
xchg
mov
push
inc
pop
mov
pop
inc
or
loop
mov
and
and
hlt
dec
sub
hlt
aad
mov
dec
repz
sub
imulb
mov
aam
push
and
push
in
pop
pop
or
cmp
ficoms
push
addr16
add
cmp
sbb
mov
jmp
pop
adc
sub
push
xchg
mov
inc
dec
mov
jle
inc
ss
ret
sub
sbb
incb
outsb
sahf
sbb
movsl
test
push
xchg
sahf
fiadds
test
and
cmpsb
data16
add
push
pop
es
and
cmp
lret
push
push
sub
in
pusha
mov
insb
scas
adc
fdivr
shr
lock
or
or
mov
enter
lcall
pop
sub
mov
mov
lock
cmpsl
inc
or
outsl
mov
mov
mov
cld
or
or
mov
les
call
adc
orl
test
jle
pop
test
or
into
cmp
mov
in
insb
lea
jmp
rcr
mov
push
es
daa
pop
stc
popf
repnz
sarl
mulb
dec
mov
imul
adc
mov
jnp
add
dec
ret
xorb
das
cli
jg
and
lock
clc
jp
xor
inc
fidivrs
call
jne
jne
adc
jge
xchg
clc
and
pop
jl
sub
inc
push
outsb
xchg
fisttpl
jp
cmp
cli
xor
sub
sub
jge
mov
push
pop
add
dec
cmp
fimull
clc
jl
rcrb
addr16
aam
inc
stos
xlat
movsb
xchg
daa
push
and
clc
fstps
add
or
cmp
out
imul
mov
sbb
aas
nop
mov
mov
das
bound
cmpsb
xchg
pop
mov
or
adc
fs
bound
mov
lods
repnz
shll
sub
nop
push
orb
pop
fwait
stos
sbb
cmc
xor
or
inc
jg
inc
mov
or
ret
loop
jmp
sub
cmc
das
lock
cmpsl
cmp
sbb
clc
push
jge
stos
inc
hlt
xchg
xchg
fimuls
ljmp
sbb
ret
sarl
dec
insb
gs
std
std
sub
inc
stc
xchg
push
rolb
mov
jbe
aaa
es
test
movsl
xorb
pop
clc
inc
pop
lcall
je
xchg
jge
ret
jnp
popa
sbb
fsts
test
aam
jmp
fbld
add
divb
hlt
sbb
mov
enter
ds
in
add
add
sub
xorb
in
fsubp
mov
mov
xchg
ds
cmpsb
inc
add
sub
pop
std
addr16
call
inc
dec
and
enter
cwtl
mov
inc
aas
mov
mov
mov
mov
pop
jne
inc
outsb
push
mov
xchg
test
test
push
push
dec
addb
sub
aaa
repnz
ljmp
std
sbb
ss
jns
call
test
push
adc
movsl
ljmp
push
clc
int
jg
lock
mov
xchg
inc
out
aam
mov
loopne
mov
mov
mov
cmp
ret
fwait
test
xchg
clc
pop
push
dec
mov
xor
js
mov
cmovle
jbe
add
movsl
add
xchg
adc
loopne
cli
testb
jp
push
fwait
lcall
lea
jl
jmp
dec
loopne
mov
icebp
sbbl
repnz
push
mov
pushf
adc
call
pop
std
xchg
or
in
subb
cmp
jl
call
cld
pop
xchg
or
cmp
xchg
sbb
insb
ljmp
mov
sub
imul
ja
sbb
movsl
adc
push
sub
test
or
pop
push
bswap
lret
mov
xor
cmp
andb
cmpsb
dec
jb
push
aam
ret
jae
cli
mov
dec
lahf
test
cli
jge
aad
mov
xchg
orb
ret
test
push
jne
add
add
xchg
inc
roll
jg
add
mov
sub
inc
mov
movsb
push
push
or
jae
movsb
adc
mov
loopne
dec
cmp
mov
dec
push
idivb
mov
dec
dec
sub
jle
lock
inc
lods
jo
cmp
dec
sub
loope
jl
fisubrs
pusha
sti
dec
mov
pop
adc
xchg
fistpl
scas
dec
fs
ljmp
inc
inc
mov
cmc
out
adc
jo
insb
test
push
out
or
adc
rcrl
sbb
add
xchg
xor
adc
mov
ss
pop
sti
out
xchg
mov
xchg
xchg
mov
call
test
pop
lods
jno
xor
pop
or
les
inc
xchg
dec
xchg
andl
adc
nop
fs
push
inc
push
int3
stc
bound
cld
push
icebp
clc
iret
cmc
sbb
and
sub
mov
imull
lret
xor
jl
out
jnp
loop
jge
into
je
mov
fs
ret
jecxz
lods
dec
scas
inc
dec
daa
fdivrs
popa
pop
add
ds
ljmp
push
fiaddl
add
jnp
lcall
inc
sub
or
add
sub
xor
xor
scas
mov
pop
sbb
jbe
add
cmp
dec
jg
scas
dec
leave
inc
in
test
push
gs
inc
incl
jmp
scas
lret
stos
daa
and
sub
push
test
sub
sub
dec
mov
clc
mov
push
mov
pop
rolb
loopne
adc
aaa
pushf
lock
arpl
xor
es
xor
enter
jle
mov
loop
dec
jle
cli
subl
adc
ljmp
xchg
mov
mov
cmp
and
adc
and
mov
mov
popf
nop
jbe
daa
out
lret
xlat
pop
and
dec
mov
cmp
pop
mov
lock
jp
aad
adc
jle
mov
ss
adc
jne
cmp
xchg
imul
mov
jle
adc
or
push
in
inc
push
push
xchg
ret
repz
je
js
fstp
aas
adc
enter
out
xor
dec
sbb
push
leave
enter
jmp
dec
mov
pushl
or
and
xchg
dec
fstl
and
ds
adc
in
iret
add
sbb
es
fcoml
push
mov
adcb
lock
out
mov
movsb
mov
aaa
push
hlt
inc
in
cli
add
sarl
data16
dec
stos
movsb
aaa
inc
xor
stos
jnp
xor
roll
lods
inc
stos
scas
add
incl
int
jle
mov
jge
add
jnp
pop
cs
push
mov
xor
and
xchg
or
aaa
mov
xchg
and
cmp
mov
mov
adc
and
push
adc
push
aas
or
sub
pop
insb
ret
mov
pop
adc
lock
push
mov
rolb
pop
testl
mov
sbb
xor
clc
out
dec
xchg
gs
ss
sbb
mov
pop
arpl
hlt
inc
pop
cld
inc
mov
jl
and
das
xor
jle
jp
mov
ja
jl
and
mov
test
notb
inc
cmp
jmp
and
sbb
pop
insl
jo
arpl
sbb
bnd
shr
jo
xor
add
ja
in
pop
mov
cld
inc
rorb
jle
les
inc
iret
xchg
inc
mov
mov
push
lock
es
mov
push
pop
pop
or
incl
xor
rcrb
xor
push
je
xor
push
sub
push
aad
jl
adc
and
sbb
mov
iret
data16
inc
push
in
shr
loopne
inc
icebp
loopne
push
adcb
cmc
push
pop
pop
lret
mov
xchg
sbb
call
jmp
dec
pop
pop
mov
imul
push
or
mov
bound
pop
ss
icebp
inc
jl
outsb
cmp
aam
hlt
adc
cmp
sahf
int
xor
out
int
jb
dec
mov
ds
popw
pop
mov
ret
lcall
inc
lahf
push
out
pop
shlb
pop
fisubrl
inc
arpl
fistps
add
jbe
das
dec
jp
into
adc
inc
xor
mov
test
mov
rol
inc
adc
xchg
sbb
or
mov
and
pop
add
add
insl
dec
fprem
add
hlt
jo
rol
sub
cmc
pushf
into
icebp
shrb
ss
test
xchg
inc
aas
imul
sub
jne
mov
adc
adc
sbb
in
sub
jo
mov
add
insb
mov
xor
enter
push
xabort
mov
pop
jno
das
xchg
imul
cmp
je
pop
iret
xor
add
test
push
dec
jge
shll
ds
jl
es
mov
cmp
jle
mov
sbbb
out
push
mov
outsb
sub
and
mov
sti
fadds
data16
addb
pop
ret
xor
ret
test
loopne
js
nop
or
add
cltd
cmp
sbb
leave
and
jecxz
lahf
notb
mov
fcmovb
or
shlb
movsl
add
inc
ret
rcll
xchg
btc
std
cwtl
imul
inc
sub
or
scas
lret
sub
hlt
mov
adc
mov
daa
jbe
scas
in
inc
xor
mov
bnd
sub
cmpsb
mov
shrb
dec
and
lock
and
test
test
fstps
je
jns
mov
icebp
sahf
mov
and
cs
lahf
jg
iret
cmp
in
int3
push
call
fisubs
pop
cmpl
mov
movb
xchg
and
je
jo
out
mov
mov
cmp
mov
pop
push
je
push
in
popf
scas
sbb
mov
scas
fwait
stos
dec
idivl
push
dec
inc
push
pop
cmc
push
jmp
aam
lret
adc
orb
pop
pop
push
cld
into
mov
lock
or
jmp
inc
push
loope
jle
fimull
loopne
add
push
divb
loope
hlt
divl
aad
lcall
jno
aaa
jle
fstl
vmulsd
js
add
aam
gs
loope
inc
sub
mov
aas
cmpsb
dec
imul
dec
inc
and
notl
fisubl
loop
pop
aad
stc
push
mov
sub
test
push
push
stc
lods
loop
jle
push
and
or
repnz
out
nop
ljmp
sub
sti
loope
cltd
mov
dec
add
repnz
push
cmc
cwtl
mov
add
push
jecxz
sub
pop
pushl
xor
dec
cld
pop
lea
dec
dec
push
rcll
xor
mov
dec
cmp
mov
es
hlt
xchg
pop
xchg
ret
cli
mov
pop
ret
add
or
repz
lods
mov
mov
push
pshufw
xchg
loope
movsl
pop
jo
lcall
pusha
mov
ret
cli
inc
lea
xor
das
cmpl
insl
out
jle
or
adc
shlb
rcl
xchg
mov
sbb
cmp
cmc
faddp
push
lcall
xor
add
test
repz
repnz
rcr
add
push
inc
pop
ret
dec
nop
sub
cmc
mov
popf
cwtl
xor
and
sbb
lcall
in
xor
test
xlat
inc
dec
add
mov
inc
in
fbld
aaa
xor
or
in
sbb
mov
clc
push
sub
sbb
pop
xchg
pop
cmp
and
pop
sar
and
in
es
aaa
das
notb
inc
adc
imul
add
xor
loope
xchg
xor
es
push
cmpsb
or
dec
mov
arpl
pusha
ljmp
outsl
jle
mov
mov
scas
push
jecxz
orb
pop
sub
stos
or
hlt
sub
sbb
mov
add
jmp
insl
xor
jge
movl
cmp
loope
lock
xlat
loopne
cwtl
inc
mov
int
push
jno
mov
push
fdivr
lcall
out
cmp
pop
push
daa
xor
pop
out
mov
je
mov
push
push
out
in
popf
mov
sbb
test
mov
loope
jle
int3
push
push
mov
fsubl
mov
lock
pop
cmc
rorb
sub
enter
test
hlt
and
aad
je
mov
int
mov
negl
test
ficompl
jp
mov
stos
enter
xor
pop
test
aad
sub
dec
push
push
xchg
daa
hlt
test
xlat
xor
clc
sarl
adc
lahf
lock
xor
xchg
push
add
hlt
and
loope
dec
jle
jns
mov
jb
mov
movl
mov
dec
cltd
fisubs
or
cwtl
fmulp
jp
push
sidtl
and
lret
repnz
or
mov
adc
inc
pop
dec
lret
mov
insb
aam
fadd
sarb
mov
push
push
cli
pop
inc
sti
mov
mov
sub
outsl
adc
pop
dec
mov
insl
call
inc
in
in
lahf
test
pop
mov
mov
pop
pop
sub
jnp
sub
stc
pop
jo
cmp
test
jmp
jbe
pop
iret
xor
movsl
dec
pop
repnz
pop
shl
xor
ds
jecxz
xor
sub
push
push
les
das
scas
push
or
bound
daa
jp
test
loopne,pt
cmp
add
push
inc
dec
and
pop
stos
xchg
or
add
mov
faddl
shlb
push
or
and
ficompl
ljmp
push
lahf
and
and
and
insb
icebp
push
lds
dec
cmc
clc
jbe
scas
fnsave
fiadds
ja
inc
ret
sub
push
add
and
cmp
outsb
js
sti
dec
adc
cmp
outsb
xchg
into
dec
xchg
xchg
aas
or
mov
sbb
mov
movsl
into
int
jo
adc
nop
je
lods
loopne
das
std
aaa
nop
pop
push
dec
scas
out
test
nop
lods
inc
push
dec
repz
or
lods
test
inc
xchg
das
rorb
pop
sbb
sbb
scas
adc
movsl
fistpl
add
add
js
xchg
or
jmp
mov
add
test
and
icebp
push
mov
mov
mov
xor
out
insb
mov
xor
ret
sub
inc
inc
xchg
xchg
mov
push
adc
ljmp
das
push
push
aam
scas
mov
pop
sbb
bound
pop
fimuls
scas
inc
and
loope
adc
orl
xchg
push
xchg
ss
sbb
inc
fldenv
pop
mov
mov
xchg
pop
hlt
call
mov
add
jne
stos
sbb
ds
push
clc
movsl
xor
push
jo
mov
arpl
repnz
pusha
xor
ds
or
popa
and
ret
mov
ret
test
icebp
lret
inc
das
dec
popa
icebp
inc
xchg
outsl
sbb
lods
mov
mov
aam
mov
fsts
mov
and
mov
pop
in
xchg
push
std
imul
mov
js
test
add
or
fstl
and
fisttpl
ss
std
xchg
mov
sahf
jb
push
sub
out
mov
adc
data16
jmp
xor
sbb
loope
frstor
mov
bound
cmp
push
push
in
inc
ficomps
rolb
inc
subb
inc
fldenv
pop
sub
inc
outsb
cmc
mov
or
inc
sbb
ljmp
mov
clc
cs
mov
fstl
pop
scas
push
cmp
jg
mull
into
mov
mov
or
pop
cli
sbb
out
mov
cltd
movsb
xor
call
or
bound
inc
test
dec
push
pop
inc
mov
pop
or
cmp
lcall
int
sub
fldl
cmpl
call
out
push
pop
push
mov
test
aad
or
mov
mov
jmp
and
fs
pop
lock
mov
loope
jecxz
nop
js
pop
fstpl
or
lret
push
lods
iret
mov
add
in
mov
and
pushf
les
neg
sub
ret
mov
add
ja
xchg
and
cmp
fwait
add
lcall
sbb
pcmpgtd
mov
imul
and
cld
cmp
js
sub
lock
fildll
test
xchg
dec
ss
mov
mov
andl
lahf
lock
loope
or
test
mul
aad
xchg
push
aas
fildl
add
xor
ljmp
or
push
loopne
arpl
movsl
mov
xchg
movsl
and
push
imul
jnp
pop
aas
nop
and
sidtl
add
adc
adc
and
xchg
mov
daa
xchg
jo
add
iret
mov
xor
xor
push
push
flds
dec
cmp
adc
out
movb
push
sbb
daa
jmp
or
jg
enter
cltd
and
pop
outsl
int
cwtl
pop
daa
stos
push
fadds
xor
mov
outsl
hlt
loope
or
push
mov
mov
cmp
jmp
pusha
jmp
push
adc
xlat
add
sti
xchg
mov
sti
dec
insl
pop
pop
push
lahf
test
ret
push
mov
and
jbe
ret
icebp
cmp
cltd
aam
push
add
inc
push
cmp
dec
xor
outsb
and
lods
in
aam
test
push
mov
mov
xlat
cmp
cwtl
xchg
int
data16
inc
jp
xor
insb
mov
pop
scas
mov
loop
sbb
notl
shll
add
leave
mov
xor
insb
mov
shll
xchg
mov
fdivrs
push
bnd
adc
cmp
jl
pop
jb
rcrb
cs
popa
and
shr
push
int
std
mov
dec
mov
push
hlt
inc
call
add
ljmp
dec
mov
mov
xchg
lods
push
mov
jmp
push
sub
call
out
movsl
adc
shrl
adc
cld
jl
loope
jnp
lcall
cs
loopne
rcll
mov
aaa
push
mov
jecxz
lahf
and
movsb
addr16
lea
shl
mov
mov
aas
sbb
dec
xchg
icebp
jmp
pop
mov
sbb
fcom
imul
sbb
test
xor
jno
aas
pop
test
arpl
cmp
dec
dec
hlt
xchg
ds
dec
pusha
mov
mov
jns
sbb
lea
xor
xchg
fldl
cld
dec
outsl
inc
stos
dec
xchg
in
inc
jl
js
pusha
and
imul
js
cmc
test
xor
inc
inc
test
inc
out
pushf
dec
add
inc
pop
push
mov
mov
testb
and
fs
aad
push
shl
cmp
mov
inc
loop
cmp
dec
hlt
scas
inc
push
push
fcomps
adc
lods
jmp
pop
fidivrs
pop
push
xchg
jp
sbb
mov
std
clc
lahf
xchg
or
jmp
ret
lea
cwtl
clc
sarl
mov
icebp
je
out
lock
mov
shlb
mov
imul
arpl
out
push
cli
sbb
sbb
rcr
sarl
mov
xlat
xor
lods
rorb
faddl
cmp
stos
sub
pop
sub
adc
cltd
inc
jo
mov
mov
jecxz
aaa
jecxz
sbb
dec
adc
mov
testl
aad
fadds
mov
popa
pop
in
ret
outsl
sbb
sub
imul
shlb
or
ret
ljmp
lret
jnp
mul
rcrb
xor
lea
pop
push
test
lahf
fidivrl
jo
mov
xchg
hlt
lds
fisubl
jnp
and
push
aam
cmc
or
lods
and
daa
out
or
roll
inc
jno
adc
out
idivl
xor
push
inc
shll
mov
mov
iret
sti
cmp
cld
lods
mov
and
insl
loope
jae
jmp
mov
daa
fsubp
cmp
dec
sbb
xchg
mov
and
scas
orb
out
ljmp
insl
and
sbb
int3
pop
add
sbb
out
mov
sub
mov
icebp
aam
lock
lret
or
cmp
adcb
pusha
cltd
push
icebp
insl
or
sbb
rolb
push
outsl
movsl
pop
cld
add
mov
ret
mov
dec
xchg
iret
cmpsb
pop
add
inc
mov
or
lods
mov
arpl
push
faddl
mov
pop
push
sbb
lret
test
loop
ret
jge
test
add
inc
out
pop
sbbb
subl
xor
mov
jle
dec
test
orb
cmp
cmp
shlb
or
sbb
cvtps2pd
inc
sub
pop
bound
sbb
lcall
fcomi
dec
pop
out
jg
pop
xchg
dec
pushl
sub
mov
fcmovne
rorl
xorl
xchg
sahf
out
sarb
or
jecxz
xor
ret
mov
out
fsubl
mov
pop
xor
lds
lods
and
sub
fmul
adc
aad
add
mov
xor
jmp
xchg
cld
test
mov
pop
inc
push
sbb
pushf
cmpsl
js
mov
jb
rolb
repnz
xor
aad
outsb
jl
in
mov
mov
xor
cmp
jge
test
pop
call
pop
es
sub
rcrl
outsl
inc
inc
mov
mov
cli
and
sub
mov
rolb
ret
add
adc
iret
icebp
dec
inc
jp
mov
pop
mov
push
add
les
imul
and
mov
mov
jmp
cmpsl
mov
hlt
push
xchg
mov
fisttpl
gs
cmc
into
sbb
ret
repnz
mov
xchg
lock
pop
test
pop
push
jl
pusha
dec
loopne
test
fcmovne
addl
push
aaa
sahf
mov
mov
or
mov
mov
stos
cmp
hlt
repnz
and
inc
jp
sar
xor
jecxz
add
in
mov
or
and
inc
addl
int
jecxz
out
add
out
and
jno
mov
add
add
or
sub
mov
call
jp
mov
stos
ret
addb
adc
cmp
fmul
pop
xor
in
clc
inc
stos
push
sbb
pop
jp
sub
inc
cmp
addl
out
clc
pop
mov
mov
sbb
dec
push
loope
sbb
sub
call
test
rcl
test
jp
and
pop
inc
mov
outsb
dec
cltd
add
pop
movsb
fadds
dec
push
je
subl
call
xchg
inc
mov
enter
icebp
cmc
add
mov
rorl
xor
int3
cmp
clc
cmp
adc
rcl
and
adc
in
add
punpcklbw
inc
mov
dec
mov
fdivrp
aam
stos
and
xor
jb
loopne
bound
or
jl
outsl
in
sub
mov
sub
outsb
mov
dec
loopne
xchg
shr
mov
cld
insb
jno
jg
add
or
inc
mov
test
or
add
mov
add
xchg
xchg
test
popf
cli
sbb
sub
daa
hlt
jmp
in
push
push
jl
sar
pop
push
jp
inc
fbld
add
or
mov
clc
pop
jbe
sarb
mov
xorb
dec
cmc
sbb
or
test
mov
pop
je
mov
aas
sbb
add
push
xor
and
mov
fdivr
and
cs
mov
enter
mov
cli
mov
sbb
xor
jmp
sbb
mov
pop
pop
inc
or
loope
mov
imul
push
add
jge
out
std
mov
rcll
push
inc
loope
mov
into
jno
sub
loopne
mov
jmp
outsb
push
sub
mov
sub
in
in
ficoml
decl
ret
stc
cmc
sbb
ret
dec
adc
push
mov
aam
jo
adc
adc
jl
pop
mov
clc
xchg
cmpsl
loopne,pt
mov
clc
mov
lds
or
ljmp
and
mov
cli
imul
cwtl
adc
sub
pusha
xor
aam
or
sbb
hlt
add
push
mov
mov
int3
mov
mov
sbb
ss
jns
mov
popf
out
movsb
or
add
loope
mov
mov
lods
fstpl
cmp
and
jecxz
cmp
lds
or
aad
lret
out
fldenv
pop
mov
cli
out
idivl
push
mov
dec
adc
adc
test
add
mov
cmp
bound
jle
cli
pop
out
in
mov
cld
push
and
fstps
mov
mov
xchg
pop
push
ret
scas
jle
je
fnstenv
cmpsb
sub
or
lahf
lock
dec
jl
inc
mov
mov
fmuls
addps
push
int3
imulb
cwtl
mov
cmp
orl
test
xchg
int
pop
jae
add
std
add
mov
sbb
mov
sbb
test
and
mov
aad
mov
inc
dec
fwait
jecxz
jg
push
xor
divb
dec
out
fidivl
adc
cmp
mov
and
dec
arpl
sub
lcall
mov
stos
out
in
stos
pop
push
insb
inc
adc
push
xchg
pop
iret
mov
or
jno
out
cmc
icebp
xchg
popf
mov
and
sub
outsl
sbb
mov
iret
jo
mov
adc
add
std
fwait
xchg
mov
je
jne
sub
outsb
cmc
add
xchg
dec
mov
test
mov
clc
xchg
adc
bound
jne
testb
jecxz
out
push
pop
mov
jb
dec
sbb
cmp
and
push
or
sbb
insb
and
mov
pop
mov
mov
stos
jno
push
ljmp
xor
shr
out
fs
add
lcall
popf
jo
into
outsl
or
adcb
cmp
adc
push
jle
cmp
test
xor
repnz
ret
pop
stos
test
pop
mov
mov
sahf
pop
pop
les
repz
xchg
and
pop
js
in
adc
xchg
dec
mov
pop
iret
inc
mov
jo
or
cmp
sub
add
mov
call
sub
add
shll
icebp
sbb
adc
rorl
cmp
decl
and
fnstenv
jle
hlt
in
mov
pop
insb
rorb
xlat
jo
fcompl
rorb
js
mov
sti
xor
push
ret
pop
add
ss
mov
addb
xlat
xor
jmp
and
sub
pop
popa
es
bound
movsl
bound
and
lock
aas
mov
or
movsl
test
dec
in
mov
aas
pop
push
js
mov
mov
bound
insl
lret
sub
jle
push
lea
add
sbb
jns
inc
xchg
push
inc
rcll
dec
imul
mov
jno
adc
jbe
loope
loopne
cs
cli
js
adc
jg
push
loopne
jmp
mov
scas
and
subl
dec
cmp
jecxz
xor
add
mov
inc
repz
push
bound
add
cmp
icebp
jl
add
add
cs
adc
fwait
movsb
jl
xchg
pop
add
repnz
sbb
sub
and
and
or
decb
fmull
sbb
inc
or
and
and
push
cmp
loopne
or
push
outsb
push
outsb
gs
or
aad
pop
add
stos
daa
fnclex
leave
popa
test
ret
fs
add
mov
inc
lods
cmp
rcl
push
mov
fisubl
or
xor
and
stos
mov
jge
enter
sahf
sub
fmuls
cmpl
dec
push
les
jbe
mov
cmp
ljmp
mov
imul
sub
and
inc
dec
fmuls
cmp
out
lahf
jge
add
jp
movsb
inc
pop
adc
outsl
rcrl
mov
push
adc
test
sarb
inc
jl
daa
outsb
test
aam
xor
pop
adc
push
xchg
shlb
test
cld
push
push
or
or
jle
pop
xchg
inc
leave
jo
mov
hlt
test
popa
adcl
pop
jmp
repnz
mov
faddl
stos
push
aam
or
rolb
xlat
nop
dec
jg
mov
lock
aaa
call
arpl
and
push
repnz
clc
pop
sbb
adc
sub
int3
xor
lahf
jbe
fdivrs
enter
ljmp
sub
adc
jge
js
push
mov
mov
xchg
ror
hlt
mov
sub
add
dec
jnp
dec
ljmp
and
xor
sbb
push
mov
adc
push
push
pop
ds
fsubrs
sub
mov
mov
mov
jno
cli
dec
mov
cmpsl
push
out
pop
sar
ds
jecxz
mov
cmp
or
add
cmp
jge
daa
bound
cmp
lea
add
mov
sbbb
add
push
mov
add
xchg
loopne
in
inc
adc
js
inc
scas
pop
push
enter
fmuls
dec
pusha
out
js
push
pop
lea
push
ret
outsb
sbbl
xchg
sbb
mov
pop
mov
push
shll
mov
rclb
dec
fcmovne
mov
xlat
xchg
clc
add
mov
aaa
inc
pop
inc
mov
ss
pop
push
lret
int3
jl
in
push
fadds
xchg
add
push
loope
pop
inc
outsb
rolb
les
inc
outsl
lods
inc
push
imul
inc
add
dec
jecxz
notb
adc
mov
xchg
or
in
sbb
inc
pushf
jle
or
mov
ljmp
mov
enter
cwtl
and
add
daa
loop
shlb
jle
cmp
sub
pushf
lods
dec
pop
fdivl
sbb
adc
jge
pop
mov
mov
sbb
xor
dec
in
xor
lods
adc
push
daa
push
fidivrs
imul
inc
movsl
xchg
out
imul
call
iret
xlat
ja
pop
xchg
int
mov
ds
cs
xchg
dec
je
ljmp
add
scas
sub
fs
xor
dec
ljmp
mov
dec
shll
nop
mov
pusha
ljmp
dec
sbb
cmp
shlb
pop
sbb
push
push
sbb
or
in
cmpsb
stc
lds
or
jle
push
cmc
xchg
outsb
pop
inc
pop
cli
push
jg
pop
push
scas
cmc
or
or
repnz
xchg
or
imulb
repz
das
loope
push
jnp
fdivrp
sahf
dec
lret
add
clc
add
jno
jg
es
sub
enter
and
dec
pop
imul
xor
ljmp
cmpsl
jbe
out
mov
pop
xor
das
add
jns
dec
fnsave
mov
and
sbb
or
jecxz
mov
sbb
push
mov
mov
xchg
jp
outsl
and
stos
movsb
or
in
daa
icebp
dec
mov
cmc
cmp
adc
icebp
imul
adc
mov
sub
lods
test
sarb
loope
ss
push
icebp
mov
xchg
dec
not
xlat
paddusb
mov
mov
cld
jnp
fwait
mov
jo
aaa
loop
in
cmp
or
scas
fcmovb
pushf
mov
dec
pop
aam
push
outsb
sub
stos
jo
sub
add
adc
in
std
cli
dec
sub
in
pop
pop
jl
and
inc
push
in
lret
jb
aam
inc
add
add
sbb
xor
add
pop
adc
daa
mov
out
dec
and
mov
jb
add
and
push
test
lods
cld
mov
dec
xlat
pop
dec
or
lods
shr
mov
dec
les
or
repnz
adc
shrb
sbbb
inc
mov
xor
fidivl
test
inc
mov
aad
daa
cld
sbb
int
arpl
ja
pop
and
sub
js
mov
jb
dec
test
mov
adc
dec
pop
jo
mov
pop
mov
pushf
test
shr
jp
inc
and
mov
sub
xor
and
mov
jno
xchg
std
sbb
and
ljmp
popa
cmp
stos
add
out
sub
sbbb
adc
jb
inc
out
push
adc
jne
xchg
xchg
push
js
aad
subl
or
sbbl
iret
mov
jl
movsl
mov
fistpll
mov
sbb
fistpl
fmull
cmp
pop
jmp
inc
ret
punpckhdq
jo
push
push
es
iret
in
lds
sbb
sbb
or
adc
dec
pushf
pusha
fisttpl
mov
ret
cmpsl
imul
adcb
sbb
xchg
frstor
inc
cmp
adc
sub
pop
mov
lods
sbb
mov
stos
jbe
jl
push
sub
and
and
pop
pop
push
cmpsl
cmp
and
aam
or
inc
sbb
idivl
jo
sbbb
jg
lock
pop
jae
cs
leave
test
insl
cmp
push
arpl
rorb
sarb
out
add
pop
and
faddp
and
and
jbe
jle
je
psrad
or
mov
push
xor
lock
loopne
ds
sub
xchg
mov
hlt
lods
jb
lret
imul
aas
jl
push
out
std
cmpl
mov
cwtl
sbbb
in
pop
xchg
pop
push
lods
ret
sbb
pusha
xchg
sbb
insb
icebp
push
scas
xchg
add
jns
cmp
pop
nop
sub
repz
outsl
jle
lods
cmpsl
add
stos
testb
mov
test
inc
adc
aaa
cmpsl
xchg
cmp
out
leave
pop
fwait
mul
sti
std
adc
cmpsb
lret
sbb
nop
jmp
sbb
sub
rorb
mov
mov
sbb
push
add
xchg
clc
scas
inc
bound
xchg
loope
call
or
pop
xadd
lods
sti
or
jno
ficompl
sbb
loope
mov
and
test
call
inc
inc
rcrb
mov
cmpsb
push
ret
push
xor
xor
push
push
aam
stos
push
nop
movsl
lret
ret
shlb
fbld
mov
push
and
xchg
lods
adc
xor
sbbb
pushl
add
les
add
or
dec
lahf
push
inc
fnstsw
dec
mov
jnp
and
sbb
sub
and
insl
outsb
sub
jo
popf
adc
mov
test
lret
adc
insb
rcrb
jb
push
cld
jae
sub
aam
xchg
adc
insl
jns
pusha
cmp
dec
cmpsb
lock
in
push
stos
sub
or
test
mov
dec
sbb
ret
loopne,pt
mov
xchg
ljmp
fisubs
add
push
icebp
jmp
cmpl
lcall
and
cs
mov
rcll
scas
push
loope
js,pt
sub
xor
inc
mov
hlt
and
sub
or
je
icebp
imul
fcoms
pop
or
test
or
cmpsl
loopne
cli
aaa
orb
lret
mov
lea
pushf
add
mov
or
andl
mov
or
mov
fidivrl
push
fucomip
mov
xor
popa
into
lcall
sub
imul
mov
jg
out
cli
mov
lret
loope
inc
pop
je
lods
sub
outsb
jno
or
adc
pop
pop
mov
rorb
movsl
or
inc
xchg
int
loopne
sbb
cmp
jo
pop
js
lahf
xorps
sbb
sub
fwait
xor
shr
pop
arpl
aam
loopne
stos
cli
xchg
sahf
mov
and
test
lock
mov
stos
fnclex
stc
jne
sahf
jp
gs
push
mov
test
dec
pop
loope
jg
xor
ds
xchg
pusha
movb
jne
adc
jne
adc
test
es
hlt
adc
in
pusha
subl
lcall
jmp
sub
pop
cli
mov
lock
jecxz
add
or
cmp
inc
push
sbb
inc
xlat
add
mov
shlb
add
fisubrl
shrw
in
sbbb
cmp
mov
ficoml
das
cmp
push
data16
lahf
adc
add
pop
push
mov
lcall
sarb
ja
mov
rcr
lock
jecxz
fxch
test
xor
loopne
jb
js
xlat
iret
dec
or
lods
ret
pop
in
lock
rcr
cs
push
es
adc
cmp
lods
stos
leave
mov
adcl
iret
mov
or
add
and
dec
xor
shlb
test
incw
sbb
or
in
js
mov
in
mov
xchg
js
lock
xchg
imul
xchg
cmp
sbb
adc
mov
mov
orb
test
inc
inc
jge
popf
test
dec
and
inc
cmc
adc
movsb
sbb
dec
aas
jno
je
fs
jp
mov
fsubl
insb
mov
sahf
mov
xor
push
pop
pop
mov
loope
push
popf
movsl
push
setbe
inc
mov
lret
add
loopne
mov
push
jp
test
test
aas
out
shrb
adc
pop
dec
mov
add
or
xchg
sub
pop
xlat
cmpsb
xchg
mov
sahf
faddl
xchg
mov
dec
or
ret
add
movsl
rorl
adc
mov
inc
fsubs
mov
xchg
daa
nop
jp
adc
mov
adc
jno
and
inc
lret
push
jbe
lcall
and
ds
jp
mov
inc
sahf
sub
xchg
hlt
in
loope
out
iret
js
stc
inc
adc
daa
pop
ret
stc
pop
loope
cmp
mov
iret
clc
test
jo
popa
int3
lods
inc
sbb
pop
fs
and
repz
inc
fsub
or
repnz
das
in
cmp
lods
out
hlt
push
or
xchg
sbb
jb
cmp
je
and
out
or
adc
test
lret
jnp
into
adc
inc
xor
aas
fwait
movsb
jbe
xor
outsl
cwtl
sub
jle
std
cs
mov
push
rolb
repz
jp
pop
push
rcrl
into
xchg
jnp
fadds
inc
dec
push
loop
jl
bound
das
test
lret
xor
or
mov
addl
jge
mov
shlb
aam
pop
mov
dec
inc
dec
push
hlt
iret
inc
pushf
outsl
call
ret
in
pusha
paddw
inc
test
sub
dec
and
mov
pop
push
or
and
clc
sub
fs
in
jle
or
mov
or
int
movsb
xchg
stos
push
and
and
mov
dec
xchg
mov
mov
fisttpll
add
sarb
iret
push
popa
xchg
push
push
jb
sub
loopne
sub
outsb
mov
mov
sahf
scas
xor
inc
add
dec
inc
lcall
push
jb
add
mov
loopne
mov
icebp
mov
and
push
push
cmc
or
pop
dec
adc
pusha
or
imul
insl
movsb
bound
cli
pop
adc
mov
mov
movsl
movsl
inc
jl
je
outsb
sbb
shll
fistpl
pop
dec
sub
mov
sarb
ljmp
inc
inc
leave
adc
repz
stos
mov
push
cmpsb
scas
lcall
dec
xchg
add
cmpsl
out
imulb
lahf
or
ss
cwtl
pushf
push
cmp
pop
jo
sbb
sub
add
stos
outsb
loop
stc
rorl
sbb
call
xchg
ret
and
ds
js
insl
push
stos
mov
mov
je
lods
test
mov
push
cmp
loope
sub
dec
loope
shlb
cmc
and
loopne
cmc
push
sub
out
pop
fisttps
mov
rcl
insl
divb
push
gs
cwtl
adc
jo
ljmp
push
sub
xchg
mov
pusha
ds
jmp
sbb
insl
fwait
pop
mov
out
jo
xchg
enter
iret
push
pop
push
lret
test
ret
and
sub
addb
push
outsl
sub
rolb
in
jp
or
fdivr
pop
dec
loope
pop
add
test
and
push
xchg
ja
je
lea
lds
cmp
daa
pop
movsl
xor
nop
push
std
cld
jp
sbb
mov
call
pusha
iret
mov
or
mov
dec
ljmp
ljmp
inc
sub
fimull
mov
out
fs
jl
pop
sbb
mov
cmc
dec
insl
stos
xchg
mov
stos
rcl
push
fisubrl
sahf
inc
or
cs
xchg
inc
mov
lock
push
fidivl
pop
enter
das
mov
rcll
adc
das
test
push
inc
rcrb
shrb
cmp
repz
addr16
ss
test
out
fnsave
les
inc
cwtl
call
js
iret
jae
aam
xchg
enter
loop
ds
pusha
popf
mov
push
mov
out
mov
dec
rcll
mov
fs
jns
fmuls
inc
mov
or
dec
dec
and
fsubs
xlat
mov
xor
or
test
sbb
fnstsw
lds
ret
add
stc
inc
loopne
das
sbb
or
xor
lret
aas
sub
sahf
push
fnstenv
push
adc
and
sbb
push
outsl
and
mov
cmp
xchg
mov
and
lcall
pop
retw
dec
and
and
jns
out
andb
stos
push
jno
aaa
hlt
sub
dec
pop
push
lods
add
cmp
fwait
mov
aad
lcall
xchg
mov
faddl
pop
aad
sub
ss
inc
mov
mov
adc
push
mov
ja
mov
adc
jl
repz
xor
jmp
rorl
adc
rol
movsl
cli
xor
ja
jp
jne
push
sahf
incl
cmp
fsubrs
sbb
or
pop
mov
sarl
mov
lods
test
sub
call
aaa
xor
dec
pusha
mov
mov
loopne
pop
por
adc
and
imul
mov
mov
xor
push
test
xchg
hlt
jno
pop
lret
cmp
mov
stos
push
xchg
dec
inc
mov
mov
aam
mov
ret
or
pop
js
out
pop
sub
pop
mov
push
inc
or
inc
dec
iret
jmp
stos
sbb
lock
pop
popa
pop
loopne
push
push
int3
cmp
cs
adc
sub
sti
lahf
mov
negl
dec
mov
dec
lods
push
adc
mov
stc
lahf
movsb
cli
roll
out
loope
dec
jne
fidivrl
dec
xlat
subl
xchg
sub
out
nop
mov
sub
loopne
sub
outsl
sub
lods
mov
mov
subl
out
jmp
pop
add
ja
jb
cmpsb
test
test
sub
push
cld
or
cltd
add
cmp
sbb
dec
sub
loope
stos
mov
mov
sub
aam
call
jge
push
push
mov
sbb
sbb
add
cmp
dec
mov
test
inc
aad
out
xor
sub
or
sbb
movsb
sbb
push
fistl
call
pop
xchg
jbe
jne
xchg
aad
adc
inc
mov
cmpsb
push
xchg
in
jge
inc
mov
adc
push
adc
cmp
inc
mov
add
cmp
lock
test
fisttpl
ret
push
pop
cmp
jbe
scas
incb
mov
in
xchg
add
ds
jle
push
fcompl
insl
dec
pop
cwtl
fcmovne
push
mov
pop
mov
jne
test
push
je
fst
add
adc
call
daa
xchg
cmp
imul
loop
jnp
cmpsl
inc
adc
daa
leave
subb
aas
adc
in
insl
xchg
shrb
xchg
loope
loop
push
rcll
sbb
scas
jns
rcll
mov
mov
in
rdpmc
iret
push
fs
and
xor
pusha
mov
repz
leave
and
repnz
and
xchg
cmp
cmp
aaa
add
push
adc
pop
or
clc
int
sub
mov
insl
jae
popa
and
xchg
icebp
pop
mov
arpl
loope
xor
test
jno
adc
xchg
push
adc
lcall
jecxz
fldenv
rcrl
movsb
sbb
pushf
mov
inc
packssdw
mov
add
mov
push
inc
loope
xrelease
mov
cmp
call
xor
push
lds
cli
mov
lds
in
push
inc
sub
mov
cmp
cmp
js
sbb
push
test
cmpsb
xor
rclb
loop
sbb
inc
sbb
scas
jg
cmp
and
lahf
sbb
mov
test
or
jne
mov
fwait
push
sbb
xchg
jl
and
cld
push
enter
sbb
dec
add
rcr
sub
out
jae
pop
mov
pop
rorl
sub
je
sub
sub
push
scas
insl
push
fistpll
xchg
xchg
add
jmp
clc
mov
push
ficoml
push
jnp
lea
push
cmp
mov
cmpsl
movsb
mov
and
jl
js
cwtl
push
sbb
fdivp
fwait
mov
daa
insb
sbb
jg
icebp
mov
and
daa
cwtl
test
cld
gs
lcall
loopne
lock
fdivs
dec
xchg
mov
clc
pop
dec
loop
push
xor
out
cmp
or
mov
adc
stos
loopne
sub
sbb
pop
test
loop
rcrl
fisubrl
inc
out
fstl
cmp
xor
call
mov
push
dec
push
adc
cmp
dec
std
inc
rcrl
pop
adc
sub
jno
outsb
fisubl
xchg
cmpl
lret
cltd
inc
aam
ret
icebp
jmp
push
inc
enter
repnz
mov
xchg
jo
add
push
sub
call
aad
xchg
outsb
and
mov
andl
dec
mov
fadds
add
cmp
dec
cwtl
mov
dec
or
mov
ret
add
cmp
pop
bound
fsubrs
sbb
arpl
lcall
dec
adc
mov
sahf
ret
call
faddl
cld
xor
andb
daa
jle
sub
testl
or
adc
xchg
das
jg
jge
push
scas
call
test
lock
adc
pop
ja
sub
dec
adc
dec
mov
punpckhbw
mov
xor
jbe
sarl
les
adc
sbb
and
out
or
mov
sbb
sti
add
cwtl
addr16
call
mov
ljmp
xchg
mov
js
leave
nop
adc
sbb
loope
loope
ljmp
push
icebp
ficoms
cli
cld
sub
shrb
jae
call
dec
sub
sbb
lds
dec
inc
jle
gs
fwait
mov
aas
lods
aad
scas
cmp
cmpsb
dec
movsl
mov
lea
fiadds
mov
test
je
push
jg
rclb
test
cmc
and
mov
pop
xchg
pop
mov
movsb
aas
xor
sub
sub
mov
dec
cmpsb
out
jno
mov
push
outsl
les
aaa
shrb
add
call
xor
xor
sbbl
pusha
sub
add
add
aas
xchg
adc
fstl
cmp
or
sbb
adc
sbb
mov
ja
dec
cmpsl
rcll
negb
mov
sbb
and
push
jg
jp,pt
fidivl
aaa
pop
cmp
repz
xchg
rcl
cmpsl
jbe
dec
pop
ja
xchg
pop
pop
filds
push
adc
or
pop
fcoml
outsb
andb
or
std
iret
repnz
sbb
cs
lods
icebp
and
jbe
xorl
lahf
mov
mov
jl
adc
fs
sub
or
jle
xchg
dec
dec
xor
add
loopne
add
test
dec
pop
das
or
daa
or
dec
mov
neg
push
push
cmp
enter
dec
or
sarb
mov
lcall
sub
mov
jle
dec
mov
pop
out
cli
push
insl
inc
push
cli
adc
mov
dec
pop
hlt
repnz
jbe
cmp
pop
fnstenv
xor
xor
pop
xchg
addb
fimull
and
pop
sub
mov
stos
xchg
leave
stos
in
popa
inc
lock
test
xchg
pop
ret
dec
sub
xor
sti
mov
fwait
xchg
xchg
xchg
add
arpl
mov
ret
inc
push
loop
outsl
mov
test
repnz
push
jl
push
mov
outsl
mov
in
jle
xchg
xor
sbb
push
xor
inc
fiaddl
hlt
mov
ret
or
cmp
lcall
scas
aaa
xchg
mov
test
or
mov
inc
pop
cmp
adc
xchg
xchg
ss
xor
pop
pop
mov
pop
cld
or
push
and
iret
in
test
jge
add
sbb
inc
mov
xor
xorb
adc
cmp
adc
mov
out
xlat
add
inc
loopne,pn
mov
bnd
sub
and
xlat
js
loop
daa
lret
add
or
leave
inc
je
sbb
sbb
and
jmp
fldl
arpl
in
and
int3
ja
xchg
jbe
xorb
sub
or
icebp
adc
pop
jae
ret
cmp
jge
pop
popa
mov
add
pop
jmp
xor
outsb
sbb
cmp
cmp
dec
mov
mov
mov
fimuls
ret
aam
push
cmp
pop
add
incl
mull
xchg
mov
je
mov
mov
ret
and
add
mov
iret
add
xor
nop
mov
mov
test
imul
xor
mov
aam
cmc
pushf
mov
mov
ret
cmp
push
testl
cmp
mov
mov
sbb
aaa
dec
pop
ss
test
cmpsl
hlt
xlat
mov
ret
je
bound
jno
pop
loopne
pop
mov
and
call
loope
xchg
pop
pop
icebp
add
pushf
nop
in
cmp
jle
out
or
jne
aaa
in
pop
or
cmp
aam
jb
adc
jp
scas
dec
aaa
jmp
jno
mov
fisttpll
jmp
cmp
sub
cli
decl
test
lds
lea
out
add
aad
sbb
push
inc
movsl
loopne
nop
push
adc
sub
ret
outsb
add
push
mov
out
pop
and
dec
loop
push
or
mov
jae
pop
test
out
out
lret
andb
sub
orl
inc
sbb
jne
sbb
mov
int3
and
sbb
test
inc
dec
fs
imulb
jmp
mov
out
ret
sub
cmpsl
mov
sub
xchg
mov
inc
mov
push
inc
xchg
xchg
adc
fsubrl
out
mov
pop
cmp
push
outsl
shll
scas
in
imul
sub
in
ret
add
loop
sub
aas
nop
mov
fadd
popl
xchg
scas
jbe
or
push
push
icebp
lea
dec
jb
mov
lret
mov
xor
ret
adc
or
push
dec
movsb
das
and
jge
into
shrb
clc
dec
hlt
sbb
mov
shl
jo
push
sbb
fldcw
jo
les
pop
les
int
push
push
dec
jg
sub
icebp
adc
pop
cmpsb
pushl
xchg
mov
jbe
bound
nop
sub
insl
fisubl
inc
cmp
xchg
xchg
rcr
mov
loopne
outsb
out
jne
jge
xchg
dec
out
xor
cvtdq2ps
clc
gs
xlat
add
lods
es
aam
dec
mov
push
hlt
insl
and
fwait
push
ss
ja
ret
ficoms
lcall
adc
aaa
adc
pop
sahf
cmp
inc
cld
sub
mov
pop
xchg
mov
adc
cmp
sahf
mov
xchg
fwait
inc
enter
cmp
and
mov
xchg
cmp
xor
pop
scas
cld
ret
mov
cld
cmpsb
imul
inc
out
test
add
pop
stos
clc
pop
and
subb
jl
pop
scas
jp
xor
push
clc
dec
lcall
xchg
or
adc
hlt
dec
pop
subb
mov
pop
lea
xchg
adc
movsb
fsubl
push
out
sbb
cltd
lcall
shr
aas
lret
sub
cmp
jo
fists
push
jl
add
cmpsb
xchg
jle
xchg
out
popa
sub
inc
jl
leave
and
jno
insb
inc
test
aas
sbb
jge
fisttps
push
adc
adc
cmpl
xchg
add
jbe
clc
inc
push
jl
push
xchg
mov
in
or
push
fidivs
push
ds
andl
mov
dec
or
xchg
pushf
mov
mov
mov
test
fisubrs
or
test
imul
roll
sti
sbb
dec
pop
jmp
dec
add
dec
out
stos
dec
aam
loopne
dec
xchg
mov
xor
inc
ja
out
xchg
incl
scas
cmp
fs
adc
inc
outsb
push
pop
lcall
mov
shlb
aam
das
std
mov
cli
inc
aas
lods
insb
clc
shll
aas
or
inc
jge
add
clc
shll
cmc
movl
mov
pusha
pop
xchg
ljmp
sbb
pop
xchg
sub
ret
sbb
lea
jno
push
iret
inc
xor
rol
xorl
out
js
push
cmpl
mov
gs
cli
cmpsb
jmp
xchg
addr16
jecxz
dec
or
push
sub
jp
pop
sub
dec
cld
xchg
ds
je
cmp
push
je
cmp
mov
adc
movups
mov
loope
test
push
sbb
fsubrs
addl
lods
icebp
pusha
lret
pop
lcall
dec
imul
loopne
adc
fmuls
data16
adc
or
int
push
pop
push
sbb
and
lahf
int
int
mov
mov
std
sbb
xchg
mov
sti
out
mov
lods
js
mov
ja
adc
pop
ficoml
cmpl
jb
push
ficoml
cmp
mov
inc
sarb
push
sahf
adc
loope
jb
mov
ror
div
scas
cmp
addb
add
mov
js
gs
mov
inc
add
rol
xor
sbb
int3
in
arpl
stos
and
inc
lret
aad
adc
insb
cmc
and
std
inc
in
xchg
jno
cmp
loopne
clc
outsb
mov
sbbb
push
jmp
lds
movsl
jo
loop
jecxz
mov
js
push
xor
xchg
loopne
imul
cli
popf
jmp
xchg
xlat
sbb
mov
cmpsl
and
mov
stos
loopne
fisubrs
mov
or
push
push
jbe
push
repnz
push
scas
fxch
inc
lock
nop
mov
mov
lock
clc
push
mov
popa
mov
mov
cmpsb
sub
and
or
les
icebp
inc
sub
dec
aaa
adc
pop
cs
mov
data16
mov
std
xchg
sarb
lea
leave
inc
sbb
insl
cmp
xchg
pusha
fistps
mov
aas
hlt
adc
enter
and
pushl
adc
shll
dec
sti
cwtl
jo
test
dec
sub
jbe
mov
xor
inc
add
aam
xor
pop
ret
jmp
xor
es
push
inc
inc
mov
dec
adc
arpl
jns
stc
popa
or
sbb
test
into
mov
pop
cmp
xlat
rolb
xlat
dec
xor
add
push
clc
adc
mov
scas
adc
bound
cli
imul
mov
mov
mov
outsb
adc
cmp
jo
fldl
or
mov
push
jnp
and
mov
push
cmpsl
inc
inc
sahf
or
in
movsb
ret
pushf
adc
cmpsl
sub
or
push
jmp
xchg
int3
cmp
out
and
jle
mov
push
cmpsb
stos
sbbb
xor
cmp
ds
mov
lcall
push
roll
cmp
and
mov
mov
mov
add
rcrb
push
lds
imul
jne
sub
add
pop
jo
cmp
mov
mov
test
mov
cld
sub
push
outsl
cmc
mov
hlt
push
and
je
dec
jnp
mov
adc
mov
js
ljmp
ljmp
pop
mov
lcall
add
pusha
xlat
loop
test
les
cmp
mov
push
dec
inc
fnstsw
pop
xor
cmp
loope
or
retw
cmpsb
add
sub
adc
lock
jae
sahf
hlt
stos
hlt
xor
iret
mov
cmp
icebp
mov
cmpsb
subl
jbe
pop
cmpsl
mov
push
rcrb
das
cmpsb
in
fsubrl
xchg
xor
or
xor
xor
jns
cmp
push
nop
sbb
mov
xchg
mov
insb
in
inc
mov
xor
jno
lock
negb
mov
add
sbb
mov
hlt
das
fiaddl
inc
mov
stc
push
jb
or
jns
lea
cmp
push
push
jg
dec
ret
sbb
out
shlb
and
lods
pop
mov
mov
mov
mov
adc
aam
cmp
popa
cmp
jno
scas
or
imul
mov
add
loope
add
dec
push
xchg
or
loope
push
std
gs
push
or
jnp
jb
in
cmp
repnz
leave
loopne
rol
mov
or
and
dec
out
add
mov
sarb
das
jo
jp
sbb
mov
adc
ljmp
dec
and
pop
dec
mov
push
inc
dec
sbb
sbbb
outsl
loope
sbb
rorb
fmull
lds
jo
and
cmp
stos
pop
mov
or
xor
mov
add
pop
sar
inc
into
imull
or
cmp
stos
sbbb
push
lock
movsb
pop
lock
cwtl
mov
fmull
sub
xchg
les
or
mov
add
scas
xor
jmp
rclb
fildll
mov
mov
sbb
push
sbb
xlat
lret
cmp
jo
repz
xchg
cmp
cmc
std
or
xor
or
cmpl
mov
popa
stos
arpl
pop
lds
inc
dec
xor
cmp
jno
or
pop
mov
loop
fiadds
cmc
pop
loopne
adc
inc
xor
mov
das
arpl
mov
dec
sti
xchg
aaa
std
stos
or
leave
pop
push
push
dec
in
dec
or
jle
cli
ljmp
xor
add
xlat
stc
xor
sti
movsb
pop
rcrl
cwtl
inc
sbb
jl
push
cli
jo
mov
inc
add
mov
sbb
jbe
subb
loopne
js
repz
enter
fadds
mov
aad
mov
sub
and
push
mov
dec
sbbb
andb
push
xchg
cmc
xchg
and
xor
out
cli
subb
call
mov
dec
shll
les
imul
test
cmp
popa
test
rorb
or
xchg
pusha
loop
ljmp
lea
call
incl
jp
cwtl
jmp
lahf
mull
loopne
bnd
int3
in
aam
outsl
or
setle
sub
inc
test
sub
jge
xor
rol
mov
mov
jnp
and
andb
inc
sub
push
push
mov
cmc
lahf
jb
sub
pop
mov
sbb
outsb
ja
jmp
ds
iret
or
das
add
cs
pop
dec
ret
mov
popa
add
daa
inc
in
repnz
aaa
push
adc
scas
loop
gs
push
sub
xchg
xchg
bnd
mov
sbb
loopne
push
loope
jne
iret
sbb
clc
push
lret
adc
mov
sbb
sarl
xchg
jmp
push
push
push
psrlw
out
fmul
mov
jp
inc
mov
xlat
shll
inc
xor
loope
xchg
leave
rolb
add
mov
pop
jmp
sbb
add
out
roll
sbb
icebp
sub
popf
xchg
jbe
mov
ljmp
add
stos
pmuludq
xchg
bound
push
fs
and
ret
pop
mov
jecxz
inc
nop
sti
sbb
cld
mov
mov
dec
dec
xor
mov
adc
mov
push
cmp
pop
push
pop
test
sub
nop
mov
addr16
add
sbb
jecxz
pop
sti
mov
fcom
xchg
sahf
mov
daa
loope
fnsave
inc
loope
sub
fidivs
pop
icebp
mov
mov
punpcklbw
pop
fidivs
push
bound
repnz
inc
loopne
lds
fisubl
stos
push
mov
dec
out
inc
daa
call
mov
mov
jecxz
pushf
xchg
mulb
cld
inc
cmp
pop
inc
test
or
push
js
push
ret
and
movsl
xchg
push
mov
dec
mov
dec
xlat
and
push
sbb
mov
jmp
dec
call
push
mov
cli
push
and
jl
pop
cs
or
pushf
sub
push
push
push
cltd
mov
adc
in
inc
push
xchg
mov
push
outsb
cmp
mov
xor
and
mov
andb
cwtl
arpl
jge
mov
xchg
pop
fidivl
psrlq
aas
mov
mov
ljmp
jnp
jecxz
or
pop
dec
mov
ss
add
cmpsl
mov
xchg
xchg
neg
add
mov
imul
and
lret
daa
loope
roll
in
repnz
or
xor
lds
adc
jecxz
notb
shrb
add
cmc
xchg
ret
jbe
out
xor
xor
add
inc
xchg
push
inc
stos
pop
mov
inc
add
mov
dec
or
jecxz
cmpb
dec
aas
hlt
loope
mov
addr16
sub
jp
push
repnz
das
inc
mov
mov
adc
xchg
into
scas
sub
sti
inc
or
mov
movsl
loop
add
mov
pusha
add
mov
jb
nop
icebp
xor
add
mov
test
jb
loopne
sbb
not
stos
gs
mov
mov
scas
mov
push
insl
add
adc
inc
add
xchg
lcall
push
inc
push
mov
cs
inc
ja
int
jge
and
push
cmp
or
dec
or
in
or
pusha
or
ss
push
xchg
mov
daa
mov
les
lods
cmpsb
loope
xor
je
dec
jnp
je
jl
cli
inc
xchg
cmp
cmp
fnstcw
dec
out
jbe
jge
mov
rol
mov
mov
xor
dec
jmp
xor
or
mov
je
xchg
outsb
mov
ret
das
adc
out
dec
ror
stos
decl
push
aaa
and
fimuls
jg
cmp
mov
rcl
add
push
cli
add
test
inc
lret
cli
xor
lds
orb
das
shlb
rorb
cmp
fmull
fs
adc
mov
and
xor
inc
pop
add
push
sbb
push
mov
xchg
out
subl
scas
push
loop
pushf
sub
lahf
shrl
pop
call
or
dec
mov
jo
lock
add
mov
xchg
cmp
cmpl
ret
mov
pop
sbb
aaa
push
xchg
or
fsts
pop
and
mov
into
mov
jge
jmp
sub
mov
fcmovb
add
cmp
lods
add
push
in
cmpsl
jnp
cmp
adcb
pop
mov
enter
adc
fldcw
push
aas
pop
add
insl
leave
lea
pushf
push
dec
pop
xor
ret
repz
rorb
pop
inc
mov
lcall
xor
test
xchg
stos
int3
jbe
xchg
lahf
dec
enter
sub
inc
and
dec
pushf
das
mov
dec
movsb
test
pushl
dec
in
ja
popf
rol
mov
pop
sub
inc
mov
sbb
sbb
pop
add
in
lds
ss
or
fildl
in
mov
push
dec
movsl
outsb
pop
call
das
jle
pop
jbe
in
mov
jmp
mov
in
cmp
pusha
out
xchg
shlb
rcrb
rolb
dec
aas
add
lods
mov
bound
and
push
mov
dec
jne
lods
stos
pusha
cmp
cmc
ss
addb
adc
push
xor
sub
xor
xor
push
add
fildll
test
fldl
lock
ljmp
pop
sbb
aas
mov
mov
addr16
lret
adc
out
inc
push
xor
inc
test
dec
repz
inc
adc
mov
adc
add
adc
je
and
push
std
subb
xchg
adc
lea
mov
popa
inc
outsb
out
sahf
xchg
in
inc
test
push
mov
int
je
inc
or
sbb
mov
lods
and
and
aad
fcmovu
xor
cmp
mov
ret
mov
push
clc
push
iret
pusha
aad
imul
mov
cltd
dec
mov
mov
push
or
push
je
jb
call
iret
dec
jg
nop
pop
icebp
lock
sbb
jl
lret
popf
cwtl
inc
pop
xchg
pop
loopne
adc
add
push
imulb
scas
je
ret
test
jg
push
xor
ljmp
mov
xor
call
mov
loopne
fadd
stos
xchg
rcrl
adc
sub
pop
sti
lods
cmp
out
mov
rorb
or
andl
and
aad
fildl
pop
es
mov
cmp
test
adc
dec
mov
fstl
lret
repnz
sahf
and
js
insb
rcrb
pop
in
push
cmp
iret
add
std
in
jge
in
bound
jecxz
sbb
add
xchg
add
xor
lret
movsl
lret
mov
arpl
push
push
and
xchg
ljmp
jns
push
push
stos
xor
push
filds
cli
pop
adc
outsl
mov
or
subb
xlat
sub
mov
scas
dec
adc
in
je
ret
xor
add
int
stos
or
enter
pushf
clc
test
call
dec
mov
jecxz
mov
or
jns
mov
xchg
xor
in
xchg
in
push
pushf
mov
or
lcall
xchg
mov
dec
xchg
jns
mov
cs
adc
inc
mov
data16
cmp
loop
pop
inc
dec
jns
jae
dec
jns
fsubr
pop
iret
mov
sbb
fistpl
xchg
and
and
cmp
pop
lods
dec
movl
and
mov
out
mov
enter
push
sub
inc
sbb
sbb
jmp
outsb
dec
sbb
push
sub
add
test
adc
jge
mov
mov
test
addr16
pop
xlat
pop
xchg
or
xor
call
loope
xor
mov
jno
mov
mov
and
or
mov
or
or
cli
and
dec
mov
outsb
mov
jge
ja
repz
mov
or
vpcmpeqb
add
in
add
or
adcb
sub
cmp
mov
inc
mov
jnp
push
sub
dec
mov
sbb
jmp
mov
aam
movsl
inc
mov
cwtl
mov
add
or
mov
add
cmpb
movsl
in
push
fxam
sub
insl
imul
xor
push
adc
test
cmpsb
pop
add
mov
inc
push
inc
mov
add
out
mov
or
or
cli
out
js
lods
setae
jnp
or
ret
sub
xorl
add
in
or
push
jns
out
rcll
dec
addb
xchg
jnp
imul
xor
mov
es
mov
xchg
push
mov
xor
inc
pusha
and
xchg
adc
sub
ja
lret
fnstsw
add
xor
mov
jmp
fs
jmp
dec
or
sbb
sbb
data16
clc
xor
cwtl
jns
sub
shll
inc
js
repz
mov
and
std
push
pop
add
pop
jecxz
clc
sbb
popa
hlt
into
sub
pop
jl
adc
test
call
xchg
adc
popl
jl
in
add
mov
xor
xchg
xor
icebp
icebp
push
mov
in
pop
popa
mov
shl
popf
fisubrs
loopne
pusha
bound
sub
js
pop
jb
insl
leave
loopne
push
mov
sbb
sbbl
clc
cmp
dec
addb
or
filds
cmp
stos
inc
pop
and
or
mov
mov
inc
insl
adc
pop
mov
inc
and
or
xor
jbe
pushf
cmc
ljmp
loop
test
pop
or
jmp
loop
movsl
or
mov
xchg
sbb
int
mov
les
inc
addr16
lret
sbb
pop
std
xor
movsb
mov
fwait
sahf
add
push
jl
adc
sbb
mov
jl
xchg
jae
mov
fwait
add
mov
popf
mov
xor
lret
loope
xchg
add
iret
and
cwtl
cmp
jbe
cmp
and
ret
mov
adcl
xchg
mov
add
mov
xchg
add
pusha
mov
lock
stc
sbb
aaa
mov
or
jne
push
andl
mov
mov
movsl
ljmp
adc
inc
add
mov
jne
mov
in
sbb
cltd
mov
adc
outsb
lea
and
push
adc
or
addr16
aam
add
push
inc
in
sbb
and
pop
in
pop
push
sbb
or
mov
pop
shl
jmp
fsubs
data16
xchg
movsl
jg
test
repnz
and
mov
in
add
dec
or
add
xor
loopne
clc
or
pop
cli
or
or
out
or
sbb
add
mov
lods
mov
test
pop
in
pop
push
push
cmc
mov
andb
xor
ret
push
push
sbb
add
cmp
aad
xor
xor
jge
mov
inc
fdivrs
xchg
movsl
mov
ss
jp
xlat
out
mov
sbb
xor
lock
inc
hlt
mov
sbbl
fcompl
dec
pop
incl
xchg
pop
sahf
inc
cld
popa
les
test
mov
aas
mov
add
xchg
aaa
cmpsb
in
orb
mov
xchg
xchg
inc
mov
jno
popa
cmp
xchg
movsl
pop
lods
imull
loope
mov
adc
xchg
jo
mov
addl
nop
and
sbb
test
hlt
mov
sub
pop
sarl
scas
or
ljmp
ret
inc
outsl
jmp
fnstsw
or
cmc
or
mov
inc
sbb
add
arpl
jno
pop
fmulp
dec
std
test
and
inc
jecxz
xchg
push
enterw
fimull
mov
sub
xchg
and
dec
jb
imul
dec
out
sub
mov
xchg
insb
sarb
stos
rolb
fsubrl
xchg
aaa
push
imul
inc
xlat
das
incl
sub
stos
inc
in
jl
lret
cmpsl
mov
or
rol
pop
inc
and
sbb
mov
jbe
push
daa
scas
loopne
lods
xor
test
inc
dec
and
sbbl
inc
xor
and
mov
xchg
and
pop
mov
add
push
pop
sti
mov
test
cmpb
js
mov
pop
call
or
das
xor
or
js
xchg
and
sbb
jne
daa
mov
add
mov
xor
outsl
movsl
mov
and
bound
inc
sbb
jne
lea
fsubr
xor
xchg
aas
sbb
add
incl
cmpsb
arpl
daa
xor
lods
sahf
lret
dec
mov
jg
push
popa
arpl
dec
or
add
lods
popf
xchg
dec
push
pop
pusha
loop
and
sub
cmc
pop
mov
xor
push
push
in
ss
icebp
sub
in
fisttps
call
cmp
inc
jns
inc
hlt
mov
mov
pop
clc
inc
mov
pop
daa
add
push
js
sub
inc
cli
sahf
mov
cs
ret
loope
repnz
movsb
xlat
pop
lret
xor
cld
mov
rorl
jg
cmp
cmp
icebp
loop
rcll
inc
hlt
rolb
out
clc
push
negl
testl
jae
push
mov
aad
fstpt
mov
nop
xchg
lock
add
test
push
inc
repnz
rcl
xor
cmpsl
push
xorl
and
jno
jnp
sbb
les
xor
dec
push
pop
adc
push
ja
lret
add
int3
jnp
mov
ret
add
fistpl
mov
lock
ss
push
mov
pop
xchg
ret
or
mov
mov
dec
mov
or
push
fdiv
fsubrs
jl
dec
ret
ss
push
lds
mov
sub
inc
dec
push
out
lret
mov
adc
loop
std
test
test
sti
and
mov
mov
sbb
stc
pop
xchg
rorl
stc
fadds
ret
xchg
inc
jae
cmp
adc
sbb
addb
pop
mov
sbb
push
das
popa
in
pop
mov
sbb
inc
gs
push
mov
sub
push
std
popa
nop
and
ret
cltd
dec
pop
sub
jmp
test
lock
hlt
jl
les
mov
cmp
dec
sbb
pop
inc
or
pushf
mov
xchg
test
scas
movsb
adc
loope
test
in
push
jl
pop
cmc
add
adc
fidivrs
push
pop
mov
xor
leave
or
sub
inc
gs
adc
adc
xchg
popa
jae
push
add
or
inc
jb
shll
or
mov
sbb
cs
std
mov
loop
sahf
movsb
js
arpl
mov
dec
enter
pop
mov
jecxz
call
lret
data16
pop
es
push
jbe
sbb
cs
aaa
push
push
add
xchg
pushf
inc
sub
fnstsw
push
xchg
adc
pop
jg
fisttps
xor
push
rdtsc
jo
jo
pusha
mov
add
mov
sbbl
mov
orl
mov
dec
inc
sub
adc
jle
movsb
cmp
sbb
mov
call
xor
loop
pop
push
adc
mov
pusha
and
add
nop
mov
movsl
cmp
cld
sub
ss
rcll
pop
fdivrl
aam
push
jle
shrb
inc
je
adc
les
mov
outsb
push
lds
call
inc
fsubrs
jae
add
sti
xchg
or
pop
sti
movb
sub
fcomps
mov
sub
push
xchg
je
xchg
add
mov
in
and
cld
inc
or
pop
aas
mov
shr
fwait
sbb
loopne
mov
movsl
jnp
cmp
out
push
dec
das
lahf
loope
cmp
sbb
add
sti
movsl
xchg
inc
mov
outsb
mov
mov
in
push
pop
cwtl
mov
xor
and
xchg
cmp
pop
mov
aaa
test
jbe
push
mov
inc
add
sub
ret
sbb
jo
push
push
add
out
push
rcrl
repz
test
scas
stos
xorl
fwait
cltd
and
lds
js
std
or
icebp
jle
or
inc
xchg
xchg
fpatan
mov
aaa
lahf
call
outsl
test
scas
cmpsb
pop
int
mov
js
dec
test
mov
sub
xor
hlt
les
stos
repz
fildll
mov
jmp
inc
out
ja
mov
lods
jp
sub
loopne,pt
imul
std
push
int3
inc
jl
lea
arpl
sub
rcrb
fucomi
es
aas
add
add
loopne,pt
adc
push
repnz
pushf
rolb
inc
sbb
sub
and
popf
les
pop
sbb
push
jae
sub
mov
imul
nop
stos
xor
cmp
outsl
in
cmc
int
arpl
or
jge
sbbl
sbb
sbb
pop
push
xlat
mov
mov
sub
loop
cs
int
pop
lods
sub
add
popf
fsts
add
rcrl
adc
mov
cmp
or
add
pop
mov
sub
mov
sahf
mov
mov
rorb
pop
jmp
inc
or
mov
push
inc
aam
push
pusha
xchg
push
jp
jne
orl
icebp
jl
and
sbb
xor
jp
sub
lea
push
and
mov
inc
mov
out
or
and
pop
xchg
dec
mov
lea
cmpsl
cmp
push
test
jbe
adc
popa
das
sbb
or
fs
mov
cmpb
or
xchg
push
mov
shrb
adc
sbb
cli
daa
inc
dec
loope
lahf
sbb
outsb
and
in
insb
sbb
popf
or
aam
fidivrs
in
adc
mov
and
jne
and
lods
cmp
shll
inc
insl
add
ds
mov
cs
loope
pop
cmp
xchg
ret
cli
dec
ret
jo
fnstsw
js
inc
test
sub
andb
out
xor
jns
orl
mov
daa
mov
add
mov
test
add
iret
mulb
es
sbbb
dec
mov
ds
adc
dec
daa
sbb
adc
pop
rorb
lods
sub
jecxz
sub
les
scas
mov
cmp
mov
popf
pop
push
add
ret
paddb
fistpll
scas
push
push
add
jl
mov
cmpsb
jbe
fcomi
gs
adc
pusha
xchg
adc
adc
lods
lret
test
mull
pop
xor
xchg
mov
and
mov
add
sbb
inc
movsb
mov
adc
push
lret
adc
scas
stos
ret
jecxz
and
rcrb
inc
add
mov
loopne
sub
push
outsl
into
push
jg
shlb
jmp
xor
pop
jl
ror
cltd
sub
jecxz
test
popf
testb
imull
add
cvtpi2ps
aas
and
das
mov
push
pop
int
jecxz
aaa
mov
cmp
clc
inc
sbb
or
mov
pushf
add
cwtl
add
push
sbbb
mulb
stos
and
push
cmp
push
dec
inc
or
cli
mov
hlt
hlt
pop
pop
jp
adc
or
out
daa
hlt
rcrl
push
add
mov
add
push
shl
inc
aad
hlt
sbb
arpl
aad
add
sub
cmp
inc
adc
or
xchg
fdivrs
fcmovnb
mov
cmp
xchg
ss
scas
mov
xchg
mov
cmp
loopne
mov
icebp
repnz
cli
and
xchg
lret
mov
dec
mov
or
mov
movsb
mov
push
cmp
rcrb
and
cld
xor
jmp
jbe
jne
fnsave
sbb
out
pop
ret
mov
adc
adc
sub
pusha
sti
test
inc
sub
push
dec
outsl
sbb
mov
sub
jne
dec
shll
sub
cwtl
push
xchg
fmull
pop
stos
push
bound
cmp
mov
pop
not
pop
mov
dec
dec
sub
data16
in
pusha
mov
call
arpl
and
and
std
add
cli
add
outsl
cli
mov
and
cmp
rclb
cmp
jl
enter
lea
hlt
mov
adc
rcrl
lea
jns
mov
dec
lcall
iret
add
push
and
lret
or
dec
rcl
and
and
clc
push
daa
ljmp
mov
test
sarb
xchg
aad
push
mov
roll
mov
daa
and
mov
rcll
pop
outsb
mov
mov
push
and
data16
fiaddl
sub
add
insl
add
loop
out
mov
pop
arpl
sub
into
lock
or
sub
insb
jb
lea
aas
mov
add
stos
cmpsb
or
push
add
or
lock
lahf
les
sbb
or
das
dec
sub
decl
inc
mov
testb
int3
clc
dec
out
xchg
mov
bound
aam
mov
mov
fsts
insl
sbb
add
or
leave
dec
int3
push
jns
pop
mov
aad
fsubl
and
or
ss
xorb
ret
js
and
lcall
cld
cmpsb
sbbl
mov
jp
push
fldenv
shrl
test
mov
daa
mov
sub
shll
ucomiss
aas
xor
cmp
sub
loope
shlb
dec
and
jp
sub
xor
push
lods
xchg
inc
sbb
sti
mov
stos
ret
mov
je
loop
rclb
mov
arpl
sbb
lea
push
inc
mov
roll
pop
loop
sar
cltd
push
ret
and
inc
cltd
pop
jcxz
rcrb
xor
mov
and
hlt
pop
mov
sub
cld
mov
lds
cmp
fstpt
jl
mov
pop
mov
inc
push
mov
sub
xchg
fists
leave
scas
push
inc
push
xchg
and
imul
push
les
enter
push
rorb
in
xchg
sub
enter
fdiv
addb
pop
sub
arpl
int
aam
and
add
cmpsl
fisttps
sti
in
inc
push
fadd
adc
es
xchg
add
xchg
insl
xor
mov
ss
inc
pop
adc
inc
out
mov
movl
jno
icebp
rcll
adc
dec
pusha
sub
xchg
pop
cli
pop
cld
cmp
dec
inc
js
into
dec
mov
out
rcll
push
sub
rorl
push
test
and
mov
rorl
inc
outsb
xchg
inc
nop
xor
je
cli
ss
mov
or
push
xor
xor
rolb
stos
movl
pop
daa
xchg
adc
cmpb
ret
std
ret
pusha
pushf
jns
mov
addr16
ds
hlt
and
jae
dec
push
dec
jne
push
pop
and
fdivl
addb
jno
mov
or
je
fisubs
add
push
jl
dec
rcl
inc
das
cmc
jecxz
decl
dec
lret
stc
sub
pop
test
daa
lds
push
push
pop
push
lss
adc
lock
adc
xor
xchg
iret
or
dec
cmp
adc
fistps
test
add
push
pop
cmp
jno
enter
jnp
shlb
and
int
lock
lock
js
mov
pop
mov
pop
movsb
imul
jnp
loop
inc
sbb
fnstenv
pop
and
or
cwtl
fst
xchg
inc
sarl
push
bnd
pop
mov
or
inc
popa
dec
dec
push
rorl
pusha
and
pop
push
cmp
jbe
nop
stos
mov
mov
sbb
imul
movsl
push
mov
fwait
xorb
cmp
add
out
daa
jnp
in
loope
mov
das
sar
add
adc
dec
inc
adc
jp
repnz
clc
xchg
rcrb
adcb
pop
movsb
or
jg
xchg
jg
test
xchg
jne
mov
sbb
clc
or
and
fcmovu
pop
push
insl
push
imul
push
fsubrp
int
pop
fcoml
cmc
loop
or
rorb
loope
inc
aam
pop
cs
stc
push
add
sub
rclb
sbbb
sbb
subb
out
mov
pop
out
xchg
clc
push
mulb
push
int3
push
jno
push
jmp
cli
pop
aaa
push
fadds
jnp
cli
mov
xchg
test
push
pop
mov
out
mov
sbb
inc
and
dec
cli
jl
mov
subb
sbb
cmc
adc
int3
ret
cli
xchg
dec
mov
lock
int3
sub
rcl
mov
shl
cmp
mov
rolb
sub
rcl
daa
add
xor
scas
mov
lds
insb
push
mov
mov
out
add
dec
mov
loope
nop
mov
repnz
mov
or
jo
out
cs
dec
dec
fcomip
sbb
add
repnz
mov
or
adc
push
inc
fsubrs
sbb
loopne
or
stos
mov
or
cmc
test
lods
xchg
adc
pop
push
push
popf
and
sub
or
cmp
cwtl
cmp
xchg
rorl
cmp
mov
xchg
sub
ljmp
and
push
enter
inc
jno
sbb
pop
inc
push
sbb
repnz
inc
pop
ret
rcrb
mov
loope
dec
icebp
fxch
shrl
loopne
nop
mov
mov
rcl
sub
insl
popa
lds
or
fnstenv
pop
cmp
push
pop
pop
popf
sub
call
testl
cmp
pop
aam
xlat
cwtl
out
pop
data16
cmp
mov
mov
xchg
jg
mov
icebp
cmp
lock
pop
adc
pop
in
jo
push
mov
popa
das
je
pop
ret
push
mulb
icebp
dec
sbb
aad
add
fsubr
rcrl
pop
cmpsl
sarl
jp
mov
fisttpll
popf
sub
les
or
loope
push
pop
fsts
movb
or
jo
fdivrl
xor
andl
cli
mov
or
add
pop
faddl
or
clc
out
xor
add
dec
outsl
pop
xchg
jo
push
fisubl
jl
ja
and
nop
pop
pop
mov
ror
sbb
mov
and
sub
mov
or
push
jmp
adc
add
push
bound
xchg
shl
mov
cs
lret
and
ja
add
sub
push
sub
mov
lock
xor
es
or
js
lods
push
cwtl
inc
in
mov
mov
pop
cmc
push
ret
popf
pop
mov
icebp
xor
mov
or
add
mov
sar
sub
and
or
mov
push
cmp
inc
cmp
mov
loope
inc
hlt
outsb
js
out
pop
push
movsl
mov
dec
adc
dec
push
test
out
sbb
mov
out
ss
insb
pop
adc
paddsb
and
xchg
jo
pop
and
xchg
lock
test
xor
aaa
clc
ds
xor
adc
pop
das
lock
push
inc
scas
call
movsl
test
mov
sub
and
pop
aas
pop
jge
sahf
pop
fxch
lret
pop
mov
push
xchg
decb
into
fstpl
in
shl
xor
stos
sbb
stos
incb
push
imul
and
mov
cwtl
cmp
add
jns
lock
xchg
cli
rcrl
xorb
rolb
mov
lea
hlt
pop
cmp
add
xorb
lret
mov
lea
imul
inc
mov
adc
mov
xchg
mov
repz
bound
xchg
add
xchg
mov
pop
roll
je
adc
leave
or
and
jb
lods
lock
pop
xchg
jmp
mov
loopne
and
or
or
bound
sbb
int
inc
les
rolb
and
mov
das
cmp
push
adc
sbb
stos
iret
add
in
or
icebp
nop
sbb
cwtl
xlat
xorl
rcrl
and
jns
cmpsl
mov
fstpl
jae
mov
or
sbb
and
shlb
stos
addr16
jge
jl
or
mov
mov
test
aad
xchg
jp
lahf
mov
mov
ret
push
or
sbb
test
fwait
fwait
int
xchg
cwtl
test
add
inc
mov
hlt
cld
or
ficompl
push
ja
out
pop
adc
cmpsl
hlt
inc
jg
iret
outsb
xor
xchg
push
mov
clc
xchg
inc
sub
inc
fmull
rclb
or
cltd
mov
lret
mov
dec
popf
mov
aam
pop
sbb
sarb
outsb
push
cmp
test
dec
cmp
js
dec
fwait
jo
push
inc
sub
xor
mov
inc
inc
sub
sub
ret
aaa
mov
jg
pop
mov
or
fwait
jmp
push
xlat
inc
mov
adc
popa
outsb
adc
pusha
jecxz
clc
jecxz
mov
and
jle
sub
sub
ljmp
fcoms
inc
into
scas
xchg
mov
out
jmp
push
push
sub
aad
mov
inc
jecxz
adc
fdivrl
push
or
xorb
add
mov
lahf
scas
mov
sub
sub
mov
or
mov
shrl
cld
jmp
sbb
adc
pusha
jne
push
jg
rclb
mov
ljmp
inc
loope
lret
or
clc
orb
les
fs
and
add
fwait
ret
in
jmp
std
cmp
insb
ja
pop
jmp
cmp
pop
loop
sbb
or
loopne
dec
push
pop
ret
repz
mov
inc
cld
fmulp
clc
push
bound
movsl
mov
cwtl
icebp
mov
mov
les
div
or
mov
scas
sbb
pop
jl
push
and
or
mov
push
mov
jl
lahf
insb
pop
leave
les
sbb
ds
out
adc
or
aad
and
ret
dec
fdivrl
push
int
movsb
leave
aas
lock
mov
dec
push
push
xchg
mov
pop
out
inc
andl
xchg
jne
jno
inc
aas
in
mov
push
push
pop
pop
jg
jp
mov
fisubs
das
or
ret
cmp
repz
rcrb
dec
push
push
or
push
push
sub
clc
and
sub
xor
out
xchg
jle
out
lret
inc
adc
xor
add
testb
imul
and
cmpsb
or
jmp
inc
orb
or
rolb
xor
clc
arpl
loop
mov
and
fwait
js
push
jle
out
test
dec
mov
add
in
aam
adc
pop
push
lcall
imul
xchg
mov
adcb
jnp
mov
incb
ds
add
test
push
xor
mov
adc
mov
out
add
lcall
repz
push
in
push
inc
movsb
push
mov
aaa
sbb
lahf
sbb
jno
cwtl
xchg
daa
jle
pop
and
or
sti
inc
pop
xchg
push
movsl
mov
pop
frstor
in
add
rcr
fcoms
cs
inc
push
add
push
popf
inc
mov
dec
jnp
test
jns
push
rorb
int
fwait
jae
je
shll
xor
sbb
ljmp
sbb
cmc
and
ficomps
jmp
jnp
and
mov
aaa
pop
and
jbe
and
call
jne
pusha
lock
or
xor
idivl
and
sbb
push
js
call
lods
popa
call
add
shr
inc
pop
outsl
loop
inc
adc
pop
pop
adc
mov
test
cmpsl
and
les
ret
mov
push
mov
or
nop
or
jmp
mov
int3
and
sarl
jb
insb
sub
outsb
mov
push
icebp
out
adc
pop
test
xor
imul
xchg
ret
xchg
and
jbe
addr16
dec
add
data16
cmpsl
addr16
jle
mov
or
in
pop
mov
pusha
loope
fdivs
clc
aam
cmp
test
xlat
mov
jl
push
adc
notb
bound
pop
and
clc
das
adc
pop
push
test
xchg
popf
arpl
or
xor
test
in
add
js
and
faddl
adc
mov
inc
dec
pop
fprem
loop
daa
add
hlt
rcpps
mov
lcall
adc
rep
add
cmp
lock
and
push
stos
fimuls
das
sbb
inc
int3
dec
arpl
ret
cmpb
inc
loopne
sbb
outsb
xor
data16
shll
sub
mov
mov
lcall
xchg
mov
lock
or
pusha
in
pop
fsub
adc
bound
push
dec
push
or
icebp
int3
inc
lods
sbb
lcall
pop
pop
dec
adc
add
cmp
lods
adc
aad
jne
sbb
add
dec
mov
xchg
cld
ret
jge
fidivrl
mov
mov
stc
adc
enter
xchg
stos
add
adc
ficompl
pop
cld
aas
cmp
inc
jg
mov
out
orl
cmc
jg
adc
mov
and
mov
insb
mov
rolb
jg
mov
sbb
out
push
mov
clc
inc
and
mov
push
sar
idivl
and
mov
fstpt
xchg
les
call
push
xorb
call
notb
addr16
pop
mov
push
xchg
cltd
or
je
sbb
mov
xchg
lret
inc
movsl
jg
arpl
out
sub
jp
adc
daa
mov
call
mov
adc
mov
jle
mov
inc
shl
loopne
push
sarb
adc
int
adc
push
mov
sbb
mov
xor
addr16
pop
ffree
sub
sbb
sbb
and
mov
push
aam
fnsave
inc
lahf
add
adc
pop
js
aas
nop
dec
testb
fistps
jne
add
dec
cs
test
sub
and
xchg
pusha
test
sbb
sbb
rcl
sbb
hlt
jp
cmp
lahf
push
sbb
decl
push
subl
add
filds
push
cmp
pushf
cmp
mov
int3
cmp
sbb
mov
out
in
xchg
stos
test
jns
adc
pop
ret
in
loopne,pn
outsl
aas
lahf
lret
sub
add
inc
nop
js
mov
add
sub
bound
rcll
ds
push
or
iret
movsb
pop
inc
add
and
test
push
sub
fsubrs
jbe
fwait
xor
xchg
scas
pusha
cmc
into
adc
dec
pushl
clc
or
xor
repz
pop
add
pop
cmpsl
mov
into
shrb
out
xchg
out
add
sub
mov
dec
je
jmp
pop
pop
popa
lods
mov
mov
pop
or
hlt
leave
cmp
and
push
stc
adc
sar
imul
fstpl
mov
loopne
push
and
inc
aas
pop
add
push
aam
stos
xchg
outsb
cmp
mov
mov
xlat
das
pop
mov
lcall
push
mov
cmpsb
xchg
push
xchg
mov
sub
gs
inc
mov
rorb
xchg
insl
xchg
jo
sub
subl
rorb
jp
sbb
push
out
loop
daa
jmp
or
pop
push
je
ret
dec
ljmp
mov
adc
cmc
fisttps
or
rclb
dec
mov
xchg
pop
je
aaa
lcall
sub
clc
pop
enter
sub
push
mov
sbb
mov
add
xchg
ret
pop
xor
scas
inc
dec
or
add
punpckhdq
sub
in
clc
mov
dec
mov
xor
cmovp
pop
nop
lea
sbb
xor
sub
sahf
pop
daa
icebp
and
sub
adc
test
inc
pop
or
lcall
sub
xchg
test
push
test
loop
mov
mov
insl
rolb
mov
and
aas
add
and
pop
nop
les
stc
cmp
outsl
adc
jl
cld
es
xchg
daa
mov
pusha
xor
hlt
ljmp
xor
fsubrs
dec
pop
dec
and
cwtl
and
out
imul
pop
sahf
sbb
loop
das
pop
leave
fdivrl
incl
sub
repnz
inc
sbb
xchg
in
mov
add
xchg
adc
inc
outsb
test
pop
frstor
addr16
pop
inc
mov
inc
mov
out
jae
cmp
pop
movsb
jle
mov
stc
mov
sub
shll
lock
sbb
push
ret
leave
sbb
mov
jne
push
call
and
add
sub
sbb
sub
sbb
orl
mov
mov
xor
fdivp
data16
pushf
fmul
push
loopne
cwtl
dec
in
call
lea
sbb
mov
mov
movsb
lahf
jg
mov
inc
and
add
inc
pop
pop
in
sub
cld
rcrl
and
loope
test
jmp
inc
enter
push
push
js
mov
or
fldl
or
add
aas
mov
add
int3
mov
or
sub
lods
cld
jg
iret
aam
lods
clc
pop
add
out
jle
or
lahf
adc
cmp
pushf
or
xchg
jb
adc
push
mov
call
sbb
jecxz
and
push
test
test
adc
ret
clc
test
dec
xchg
pop
mov
test
xchg
adc
pop
jle
jmp
fst
cltd
lock
sub
sub
cmp
nop
lock
jns
cmp
add
ret
sub
std
mov
pop
pop
ret
mov
arpl
xorl
xchg
aad
cmp
outsb
mov
insb
outsb
jo
rclb
or
push
fcom
addr16
sti
adc
xchg
repz
xor
bound
lret
les
mov
jmp
outsl
push
cwtl
idiv
cmpsb
xchg
pusha
imul
fildll
in
fists
add
jge
jne
mov
push
cld
jg
rcrb
aad
ret
mov
movsb
fcom
inc
mov
es
aaa
xchg
push
insl
stos
iret
loop
in
inc
test
adcb
mov
aam
aaa
pusha
arpl
xor
mov
or
rclb
rcll
xor
push
rol
mov
loopne
aam
hlt
inc
cmp
ljmp
mov
push
mov
add
cmp
pop
or
test
hlt
cli
gs
mov
shll
pop
aad
adc
xlat
inc
int
lret
addr16
add
xor
cmp
es
and
pushf
out
movsb
sbb
addr16
pop
cmp
ja
xor
dec
mov
jg
fists
aas
pop
addr16
inc
adc
inc
adc
cld
cmpsb
jnp
dec
outsb
sub
loop
push
ljmp
mov
ret
mov
sub
sub
inc
jecxz
mov
and
pop
cmpsl
cli
dec
jl
lds
mov
sub
fnstsw
pushf
subb
cld
or
sbb
pushf
adc
cmc
jb
sarl
mov
imul
call
mov
push
out
adc
enter
add
or
call
xor
cwtl
or
push
cltd
push
add
mov
shl
fldcw
js
fldl
sti
je
cmp
and
cmp
dec
mov
jbe
repz
rcrb
iret
rorb
dec
aad
xchg
rorl
cmp
dec
xchg
push
leave
pop
adc
pop
mov
mov
inc
in
ret
es
add
sub
das
xorl
sub
and
add
std
push
push
scas
xchg
movsl
pop
fadd
and
jge
jl
fsubrs
sti
and
add
fs
dec
sub
enter
cmpsl
xchg
mov
jl
or
loope
or
add
out
test
or
mov
jb
inc
sub
dec
es
sub
cltd
jge
pop
lret
stc
jne
or
test
push
and
rorb
mulb
cmp
push
cmpsb
jbe
xor
adc
fsub
aam
ret
jo
push
insl
das
and
pushf
sarb
cld
gs
sbb
cmp
push
mov
jbe
lock
pusha
pop
test
mov
stc
adc
icebp
int
sbb
push
dec
adc
push
iret
add
std
dec
sub
jbe
icebp
push
cwtl
aad
int
stos
inc
mov
imul
pop
iret
and
fiadds
stc
cmc
jle
aam
lods
sbb
push
xchg
pop
adc
jmp
cmp
jo
push
cmp
sub
sbb
test
hlt
jle
push
lds
scas
dec
inc
or
das
push
jnp
cld
push
add
add
scas
and
mov
sub
push
pop
mov
push
bound
in
jle
in
jg
xchg
testb
jecxz
idiv
mov
add
and
shll
rorl
xchg
add
dec
jge
test
daa
sbb
pop
pop
rolb
loope
aam
dec
nop
or
loop
xchg
loope
fsubrp
and
mov
mov
arpl
jp
inc
and
test
jbe
jb
rolb
dec
and
inc
sahf
mov
adc
cmp
sbb
add
mov
jne
dec
add
push
hlt
adc
xor
mov
aas
mov
inc
cmpsl
xchg
and
lcall
mov
inc
outsb
xor
mov
jmp
outsl
cmp
inc
call
xchg
hlt
and
push
mov
pop
fistpll
push
pushw
fwait
pop
jno
lods
inc
cmp
negb
clc
enter
das
sbb
cwtl
imul
dec
dec
fisubs
adc
movsb
pop
and
repnz
mov
xchg
cli
inc
inc
cmp
imul
dec
add
adc
out
call
adc
inc
pop
mov
andb
out
push
mov
adc
fiaddl
or
fsubrs
addb
xor
insb
sub
andb
icebp
xor
es
ret
aam
push
cmp
mov
inc
cmpsb
call
fs
xchg
sub
mov
push
cmc
data16
or
jmp
ficompl
fsubrl
jbe
mov
jo
push
out
xchg
ds
les
into
xchg
call
add
lcall
cmp
shl
push
dec
ud0
pop
mov
push
dec
mov
mov
repnz
cmpsb
jg
aam
add
sbb
pop
insl
test
sub
in
test
add
jae
fcom
idiv
add
mov
stc
or
push
jl
icebp
sub
mov
mov
or
mov
rcll
add
sub
insb
xorb
daa
xchg
sarb
adc
jmp
outsb
or
repz
adc
fldt
lcall
testb
loopne
call
adc
sbb
and
add
sbb
orb
jo
mov
andb
sbb
dec
xchg
icebp
xchg
lcall
cwtl
xchg
and
mov
rcrb
stos
dec
mov
jo
inc
repnz
ds
or
ljmp
aad
pop
std
or
jecxz
or
sub
cmp
and
xchg
cmp
jae
fstl
insb
lcall
jge
inc
lods
add
cmp
mov
in
dec
rcr
sub
sbb
add
dec
stos
leave
pop
mov
stc
cmpsb
xlat
ss
in
xchg
std
fdivrs
repz
and
popf
push
jb
shl
adc
pop
push
testl
cmpl
push
cmpsl
or
pusha
add
inc
inc
push
fsub
scas
shll
je
jb
jne
pop
hlt
cmpsb
dec
test
aad
xor
adc
xchg
sbbb
sbb
xorb
rcrl
add
inc
dec
pusha
je
mov
rcrl
sbb
add
push
and
dec
int
push
jae
dec
cmp
aam
aas
fisubrs
mov
rcr
pop
xor
dec
repz
push
add
clc
add
cmpsl
popa
std
pusha
push
vpsubq
daa
sbb
dec
push
cmp
push
xchg
roll
gs
pop
jmp
jae
fwait
sbb
or
cmp
add
xchg
insb
test
and
or
jae
push
add
and
mov
sarb
push
jle
ficoms
aam
fldt
imul
hlt
xchg
cmp
divb
adc
clc
cmp
pop
shl
xlat
subl
mov
sbb
clc
sbb
arpl
xchg
lahf
adc
mov
pop
andl
scas
int3
pop
orl
mov
lea
lret
xor
sub
adc
fwait
add
jmp
stos
ror
or
je
pop
bound
sbb
cli
pusha
mov
push
cs
ret
mov
cmp
jp
jle
daa
jb
push
add
push
es
shrl
xchg
or
jecxz
pop
sarb
xchg
adc
dec
push
les
or
xlat
push
imul
mov
lcall
inc
pushf
cmc
test
xchg
dec
xor
lock
in
adc
repnz
loopne
jnp
adc
arpl
and
xlat
shrb
sub
pop
rcr
ss
xchg
adc
sbb
cmp
push
ljmp
xchg
mov
or
test
cmp
inc
inc
lods
daa
mov
inc
and
dec
and
sub
jg
mov
nop
pop
or
push
and
test
adc
adc
mov
xor
mov
clc
cmpsb
push
push
shll
je
adc
cmpsl
pop
lcall
mov
lds
andb
sub
repnz
or
bound
into
mov
popa
pop
mov
adc
and
pop
push
shlb
add
and
cmp
sarb
dec
mov
dec
push
push
xchg
jb
push
movsl
fnstcw
or
repz
fisubl
ret
in
or
cmp
jecxz
call
xchg
les
lahf
mov
loope
rcrl
mov
push
mov
jnp
jnp
sbb
jbe
test
nop
popl
mov
push
dec
jmp
sub
loopne
mov
inc
pop
mov
popa
jecxz
daa
cltd
jle
add
xor
pop
rorl
mov
iret
imulb
aas
push
pop
fcoml
sbb
mov
sub
pop
vunpcklps
pop
or
dec
cmp
or
mov
mov
scas
sbb
addr16
cs
add
jmp
mov
pop
test
add
xchg
xlat
iret
cmp
das
mov
adc
pop
xor
lcall
xor
orl
cli
adc
and
pop
mov
cmpsb
and
sbb
xchg
adc
and
sbb
ficoml
and
mov
add
test
and
js
sbb
dec
sti
adc
adcl
pop
or
fucom
or
ds
dec
mov
scas
xchg
dec
push
jb
aam
xorb
adc
cmp
mov
adc
in
mov
push
insb
aaa
or
or
or
aaa
cli
test
fwait
xor
or
jp
or
aas
gs
mov
mov
aad
cmpsl
repz
daa
push
mov
dec
mov
lahf
ss
gs
or
orb
jle
movsb
lahf
xchg
mov
popa
inc
dec
mov
fstpl
sbb
push
imul
ret
cltd
pop
jg
aaa
les
mov
andb
adc
mov
sub
jae
pusha
mov
add
push
aas
in
mov
mov
lods
and
faddl
and
mov
push
gs
lock
lcall
xchg
pusha
push
mov
xchg
inc
dec
pop
or
dec
aas
or
ret
in
pop
test
mov
mov
loope
push
cmp
jle
imul
cltd
out
mov
adc
cmp
xchg
icebp
inc
loopne
and
mov
push
mov
cmp
fistps
xchg
leave
shl
adc
and
push
loope
pop
inc
out
in
pop
js
mov
test
cmp
iret
and
jb
inc
pop
imul
xchg
int
shll
push
test
je
pop
xchg
xchg
scas
or
movsl
das
lock
fs
dec
lret
push
fldcw
pop
xchg
cmp
mov
loopne
sub
and
xchg
loopne
inc
sbb
mov
cmp
jno
add
daa
jne
test
ljmp
pop
in
fdivrp
dec
cli
sub
rcll
cmpsb
in
cmpsb
jg
and
imul
aaa
jg
ret
cmp
dec
mov
enter
repz
loop
ds
or
inc
pop
loope
cmp
insl
push
addr16
xchg
mov
pushf
xor
js
icebp
cld
sub
push
inc
xchg
cs
leave
data16
pop
pop
insl
mov
int3
shlb
xchg
xor
notb
ljmp
aam
xchg
and
cmp
mov
xchg
movl
push
imul
mov
xor
js
xchg
jbe
daa
add
cmp
ljmp
aam
mov
test
xor
icebp
andl
mov
adc
push
or
sbb
inc
jmp
push
loopne
inc
aam
sbb
adc
push
jg
stc
cld
test
pushf
push
mov
lods
cmpsl
mov
sbb
testb
and
add
rolb
testl
stos
inc
push
adc
sub
adc
xor
push
imul
push
xor
mov
pop
lods
or
jge
popf
cwtl
test
loop
jl
jmp
pop
push
xchg
rcl
inc
std
dec
arpl
push
lret
pop
sub
scas
mov
test
xchg
notl
popa
repnz
push
lods
fdivrs
lods
aam
xor
mov
inc
jmp
gs
rcl
jge
lcall
push
or
fiaddl
repz
xor
dec
push
jne
shrb
inc
mov
cmp
add
sub
ljmp
sub
lahf
cmc
xchg
xchg
sub
shlb
in
adc
mov
cmp
cmp
insb
adc
mov
jns
cmp
xor
icebp
push
jmp
out
lock
mov
add
jbe
or
jge
mov
xchg
test
sub
push
cltd
or
loope
inc
and
imul
mov
cmp
sbb
cmpsb
xchg
adc
sahf
ret
mov
and
sub
lock
push
and
lods
shlb
mov
push
jle
jae
sar
je
dec
pop
clc
dec
cmp
ljmp
sub
cmpb
sbbl
or
and
adc
push
addb
mul
inc
add
addr16
decl
add
and
loopne
loopne
adc
pop
test
sub
test
sbb
sbb
adc
inc
in
fstpt
sti
or
or
and
sar
orb
push
push
rorb
sbb
outsl
mov
mov
addb
cmp
and
sbb
add
add
adc
adc
add
inc
add
addb
and
cmp
outsl
decl
sbb
inc
pusha
add
adc
pusha
rclb
adc
test
andl
lcall
mov
pushf
mov
add
in
add
add
or
add
inc
sbb
adc
pop
xor
push
js
add
xchg
out
mov
inc
inc
xor
add
xor
add
lods
mov
leave
shlb
or
dec
push
fisubrl
aas
or
pop
mov
jbe
outsl
mov
pop
jmp
repz
test
push
adc
add
sub
data16
mov
add
sub
xchg
pop
xor
lock
sbb
sti
insb
adc
not
add
xor
repz
pusha
cwtl
add
pop
dec
push
add
mov
mov
imul
jge
xor
repnz
lods
xchg
addr16
shrl
mov
push
mov
adc
jle
jmp
sti
cmp
jne
cld
xchg
or
or
push
cmp
pop
out
pop
inc
shrb
or
jbe
in
adc
sbb
outsb
xchg
fstl
pushf
or
lcall
dec
or
ficomps
add
mov
push
inc
and
xor
cmp
push
adc
add
scas
jecxz
mov
call
cmp
add
add
mov
mov
pushf
loope
out
sub
out
aam
adc
add
fucomp
loop
xor
inc
or
sbbl
movsl
inc
icebp
imul
or
int3
pop
push
lcall
loope
jnp
cmp
cmp
test
je
clc
data16
adc
fisttpl
or
js
or
mov
loope
mov
hlt
cmpsb
cpuid
adc
popa
jl
jmp
rep
outsb
push
fisubs
test
in
dec
roll
rolb
arpl
fld
push
call
mov
xor
das
cli
xor
mov
pop
jb
add
pop
popf
sbb
mov
cmp
xlat
subl
pop
pushf
sub
inc
mov
sbb
out
test
jbe
dec
xchg
mov
cmp
pushl
rorl
shrl
inc
push
add
jae
xchg
push
push
add
xor
mov
lock
je
repz
sub
adc
sbb
sarl
push
adc
mov
daa
in
repnz
mov
inc
inc
or
or
cmpsb
or
stc
mov
mov
dec
or
adc
adc
int3
or
das
sub
or
shlb
aaa
psraw
mov
jb
repnz
mov
verw
push
sub
mov
cmpb
push
jmp
mov
sbb
pop
sbb
je
pop
mov
pop
sahf
cmp
mov
pop
or
fidivl
outsb
fwait
jle
sbb
dec
pop
push
std
insb
ss
or
cmp
cmp
std
inc
sbb
out
jge
push
clts
bndldx
and
mov
add
mov
loopne
roll
daa
out
mov
fwait
inc
aad
jb
xchg
lahf
adc
subb
out
add
cmpsb
out
cmp
mov
xchg
mov
add
dec
adc
aam
daa
or
imul
jnp
xchg
out
shrl
mov
push
mov
xchg
add
ds
inc
xlat
in
fsubrs
out
mov
fwait
enter
je
dec
dec
add
xchg
decl
mov
cld
cwtl
xchg
pop
mov
outsl
lahf
subb
sar
fildll
test
jb
push
push
ss
outsl
loop
dec
fdivl
shll
ret
dec
stc
cli
sbb
clc
pushf
add
cmp
cltd
flds
mov
inc
push
cld
frstor
fmull
jecxz
aad
xchg
in
add
inc
add
cwtl
cwtl
xor
orl
idivb
pop
cli
popa
push
jns
inc
push
jmp
and
loopne
jo
fimull
shlb
js
loop
cmp
addl
stc
inc
out
insb
xchg
inc
loope
dec
mov
add
mov
push
inc
mov
in
push
add
push
adc
mov
jge
dec
mov
or
fdiv
repz
test
push
pop
lret
ror
int
rorb
pop
iret
push
jae
push
jp
jbe
xchg
icebp
imul
or
push
or
subb
pop
xor
or
ja
push
repz
or
add
dec
repnz
aas
ds
mov
mov
push
daa
cmovg
pushf
push
mov
fdivr
xchg
or
sub
es
fisttps
sub
movsb
pusha
cmc
jecxz
cmp
ret
mov
ret
pushf
and
es
cmp
popf
jbe
mov
add
inc
repnz
push
aad
movsl
or
scas
adc
mov
sbb
cmp
inc
mov
ret
pop
push
push
and
xchg
push
out
adc
in
decl
in
add
add
hlt
mov
ja
push
add
push
stos
in
imul
jns
jb
es
dec
enter
pmuludq
dec
inc
add
outsl
push
mov
popf
addl
pushl
in
rcll
add
and
mov
les
adc
dec
fdecstp
ds
fldenv
add
xor
rcr
es
fldl
roll
push
cmp
in
mov
cmp
shll
cwtl
lock
repz
sub
xchg
add
cmpsb
dec
push
imulb
mov
add
fisttpll
or
loopne
inc
pushf
push
mov
pop
jge
sbb
dec
jl
sbb
loop
mov
mov
insb
data16
mov
and
mov
adc
out
sbb
xchg
sbb
jno
jbe
xor
add
adcb
jb
orb
test
movsl
mov
mov
mov
ljmp
push
sub
mov
pop
je
pop
add
or
mov
repnz
or
mov
call
movl
add
gs
shrl
inc
fsubrl
adc
mov
les
sbb
pop
adcb
pop
sar
dec
add
dec
fstps
orb
sbb
popa
xchg
mov
lahf
stos
jl
jle
ss
rolb
sub
jnp
scas
iret
scas
dec
loope
mov
pop
lock
mov
pusha
sub
and
cmp
jp
negb
pop
pop
mov
inc
cmp
mov
js
or
xor
sbb
pop
fwait
btr
std
adc
incb
mov
pop
or
and
xor
loop
mov
gs
sbb
cs
pushf
sbb
lock
nop
in
loope
jecxz
inc
dec
cld
fs
adc
shlb
or
mov
xor
ror
aad
adc
and
sti
jp
and
add
xchg
mov
outsb
fldenv
or
pop
push
jmp
sub
int3
je
mov
pop
out
stos
xor
int
mov
stos
add
lret
cs
mov
push
ljmp
aam
aad
add
mov
test
stos
xor
add
add
into
pusha
aam
testb
push
mov
aad
jle
add
xchg
aas
mov
icebp
lock
outsb
or
jl
xor
add
and
xchg
jnp
nop
movsb
or
inc
shll
xor
adc
or
mov
lods
dec
pop
or
jmp
push
aad
arpl
add
xchg
and
jecxz
cmp
movsb
call
pop
aas
mov
pop
shll
jmp
pop
jne
andl
adc
pop
xchg
repnz
mov
lods
ret
and
or
bound
jp
jbe
das
int3
add
jl
sbb
scas
pop
sbb
sub
xchg
sbb
mov
push
shr
xlat
pop
or
mov
out
mov
addr16
push
mov
sub
pushf
push
fs
sbb
in
push
sub
rcr
mov
outsb
pop
rcrl
aam
test
cmpb
or
add
cmc
push
aaa
loopne
pusha
mov
sbb
loopne
xchg
lcall
pop
ss
inc
dec
popf
and
cmp
sbb
in
mov
mov
cltd
inc
sub
inc
sub
xchg
push
pusha
fsub
orb
add
fisttpll
and
adc
mov
cmp
push
add
int
repz
sti
pop
inc
setle
add
pop
pop
jecxz
jge
cmc
sahf
sarl
mov
cld
in
dec
mov
in
mov
test
iret
mov
incl
mov
dec
loopne
push
pop
mov
shll
dec
repz
filds
pop
push
xchg
in
cli
insl
lock
shlb
leave
jl
fistpl
inc
lret
cli
add
adc
pop
fcomps
aaa
mov
sbb
fldt
jb
jl
jb
inc
cmpsl
mov
add
fbstp
add
out
or
clc
adc
xor
rorl
pop
mov
push
in
xor
pop
pushf
rclb
and
inc
in
or
loopne
loope
jl
movsb
out
xchg
in
push
insl
pop
mov
aam
ret
inc
add
flds
xor
xlat
add
je
or
insl
jne
mov
nop
lods
cmp
xor
mov
xchg
fwait
sbb
arpl
jl
rorb
jl
dec
and
cmp
xor
sub
mov
sub
je
call
sarl
aad
fmull
push
xchg
out
lret
and
push
nop
movsb
in
xchg
mov
pop
test
clc
add
mov
cltd
fsubrl
xor
test
int
mov
rcl
icebp
sbb
pusha
mov
xchg
popa
or
iret
cmp
pusha
or
ja
jo
xchg
add
mov
cmp
pop
lcall
in
mov
add
cmp
or
pop
adc
loope
scas
loopne
pop
fstps
push
mov
mov
out
out
cmpsl
pop
xchg
mov
sub
shlb
pop
iret
xchg
inc
and
es
sbb
xchg
in
push
cmp
push
ds
cmpsb
push
sub
fyl2x
jmp
sahf
addl
jl
cmp
repnz
fwait
test
mov
fsubl
out
cs
ljmp
pop
xor
pop
push
das
lret
add
jge
inc
ljmp
daa
notb
and
mov
push
xchg
std
into
pushf
popf
mov
mov
out
sti
add
and
insb
andl
je
dec
aad
add
add
add
mov
sub
adc
push
cmc
notb
test
sub
mov
out
loopne
out
push
inc
loopne
mov
ja
ljmp
fstps
jecxz
adcl
ss
aaa
mov
outsb
rorl
xchg
adc
in
inc
fsub
lea
xor
test
and
fs
add
ja
sbb
in
shr
vpunpckhbw
dec
push
adc
push
popf
out
push
add
lods
sbb
dec
add
pusha
movsl
ljmp
rcrl
mov
sbb
mov
arpl
js
cmc
push
ds
out
sarb
inc
sbb
sbb
jns
pop
xor
push
dec
fildl
sbb
movsb
mov
clc
dec
push
push
aas
dec
xor
out
das
cmp
int
jnp
inc
push
mov
xchg
pop
loopne
int
fs
aad
icebp
fnstcw
aas
add
leave
xchg
or
pop
cmp
ret
fsubrl
or
stos
ljmp
adc
cli
dec
inc
ret
movb
xchg
cld
dec
xlat
mov
repz
in
cltd
rcrl
jp
jbe
push
clc
or
push
and
cld
lea
std
push
push
sbb
cmp
fwait
dec
and
xchg
xchg
push
icebp
test
jecxz
insb
loop
icebp
imul
leave
xchg
adc
andl
or
mov
and
stos
shl
into
das
adc
ret
push
push
icebp
xlat
pusha
push
mov
lcall
xchg
and
push
sbb
orl
pop
sub
and
mov
stos
jle
jl
mov
inc
xchg
aad
push
daa
and
shlb
jecxz
adc
sub
rorb
inc
add
andl
xchg
xchg
add
jecxz,pt
mov
add
add
test
mov
inc
cmp
xor
fs
scas
nop
movntps
lret
test
mov
adc
loop
push
xchg
sub
dec
jle
arpl
rorl
fdiv
inc
push
push
scas
mov
mov
test
pop
ja
adcl
fs
mov
shll
inc
js
repnz
inc
popf
add
ret
fisttps
cld
lcall
addr16
frndint
adcl
dec
rolb
rorl
pop
pop
fldenv
lock
mov
insl
sbb
mov
or
lcall
add
out
adc
inc
pop
js
pusha
push
push
lods
jp
popa
push
push
or
pop
mov
mov
pop
je
xor
cmc
roll
or
lods
mov
jmp
shrl
lock
or
insb
add
jbe
inc
inc
addr16
or
add
mov
adc
lahf
outsb
add
fdiv
repz
popa
xchg
ret
sub
inc
jo
xchg
lret
sbb
movsl
cmpsl
adc
bound
add
dec
sub
xchg
lods
jb
fisttps
adc
or
mov
pop
and
mov
lret
loopne
dec
je
ja
pop
jge
sub
pusha
insb
insl
pop
in
lods
push
xchg
inc
mov
sti
dec
sub
ja
xchg
add
test
and
mull
add
stos
les
pop
movsl
clc
bound
dec
aad
repnz
mov
mov
das
jge
push
in
jo
jge
sahf
ficoms
fdivl
adc
lds
in
jl
adcb
add
arpl
jo
pop
mov
or
pop
ss
xor
lahf
inc
push
xchg
sbb
mov
push
inc
aad
ljmp
mov
enter
inc
stc
inc
in
sbb
sar
adc
mov
jl
and
fistl
outsb
cmp
jp
mov
out
sbb
cmp
leave
mov
pusha
mov
mov
and
dec
pop
cmp
fmuls
or
mov
mov
mov
add
adc
shrb
into
inc
stc
cmc
roll
decb
jmp
cmp
aaa
inc
mov
cli
jmp
ficompl
ret
mov
pusha
push
inc
ja
cld
inc
les
inc
cltd
sub
sahf
icebp
push
test
cmpsb
lea
jle
shll
xor
adc
lds
arpl
jbe
or
lret
sub
mov
inc
xchg
add
je
mov
inc
cmp
xor
idivb
xor
dec
mov
pop
ds
jbe
mov
pop
scas
orl
jbe
xchg
bound
xorl
fisubrs
mov
add
sub
mov
add
mov
or
scas
cs
mov
adc
movsl
jecxz
xor
sbb
jmp
sbb
in
jb
dec
or
lea
lret
pop
in
cld
movsl
sbb
popa
pop
ds
loop
shl
inc
cmp
out
jmp
push
fwait
inc
test
lea
mov
test
dec
inc
jp
push
std
or
pushl
fimull
cmp
into
out
movsb
xor
add
aam
sarb
jne
push
stc
ror
pop
or
inc
mov
sub
or
testb
subl
sub
in
and
loope
clc
sbb
push
inc
sbb
aas
sbb
sar
add
int
xchg
push
imul
add
fdivrl
or
je
out
stos
lods
data16
sub
lock
out
or
xchg
lret
add
push
movb
and
push
push
loopne
mov
pop
ljmp
push
cld
aam
cmpsb
lcall
xlat
dec
pop
push
xchg
adcb
dec
xchg
push
xor
dec
mov
shl
imulb
bound
dec
adc
addr16
enter
stos
push
adc
cmp
dec
sbb
xchg
lea
mov
or
xchg
lock
mov
push
xchg
inc
aam
mov
inc
xorl
js
mov
sbb
loop
sbb
mov
cmc
fcompl
out
enter
fisubrl
outsb
inc
mov
push
adc
jbe
pop
pop
pop
test
and
decb
add
bound
shrb
inc
lea
jge
add
sbb
subl
sbb
shll
add
push
mov
loopne
add
adc
iret
mov
test
jl
rcrl
pop
mov
iret
js
shrb
jbe
mov
incl
jo
mov
mov
mov
jle
gs
xchg
cmp
int
mov
int3
xor
or
daa
pop
cmp
pop
jo
add
or
cmp
stc
scas
mov
mov
or
loopne
ret
cs
je
push
das
lcall
pop
loopne
xor
jge
stc
fcoml
sbb
mov
jl
mov
mov
xchg
inc
lock
mov
jl
bound
mov
movsb
dec
jmp
add
push
cwtl
int
adc
pushf
leave
in
add
xor
and
ror
sub
jle
xchg
insb
nop
sbb
das
lods
xchg
jle
or
mov
dec
jle
lret
push
xor
push
mov
into
lods
xchg
pop
jl
add
mov
sub
insb
sbb
cmp
mov
push
adc
andb
in
jmp
in
and
fldt
add
es
movl
test
and
iret
arpl
xor
loopne
shlb
sbb
pop
dec
enter
test
xorl
xchg
daa
mov
shr
push
les
cmp
pop
jmp
mov
mov
out
loope
cs
test
stos
loope
dec
seto
mov
xchg
out
das
xor
push
std
cmp
jmp
or
xchg
xchg
xor
fimull
fwait
mov
xchg
jae
fisttps
aad
repz
cmp
cmp
jb
cltd
add
mov
cmp
jl
mov
cmp
lret
insb
fisubrs
aas
inc
fxtract
in
test
test
scas
pop
bound
popf
clc
sub
insb
inc
mov
jns
sub
sub
jge
sahf
or
out
xchg
sarl
test
and
insl
xchg
js
cmp
xchg
out
mov
push
sbb
out
lcall
jl
push
cmpsl
leave
mov
push
hlt
insl
xchg
cmpsb
inc
mov
mov
ljmp
cmp
nop
in
pop
xchg
shrl
add
icebp
sub
sub
pop
sbb
pop
sub
sub
sbb
sub
arpl
mov
pop
rcl
push
decb
xor
mov
sub
js
test
push
lret
jge
mov
xchg
xor
or
xor
clc
adc
jb
lock
mov
push
xor
dec
add
xchg
mov
jp
cld
dec
shl
daa
mov
push
push
sahf
push
test
je
imul
clc
gs
pop
xor
push
imul
pop
dec
sub
pop
insl
push
pop
jecxz
add
mov
jns
and
cs
add
xor
inc
sub
mov
aaa
jb
lcall
pop
str
inc
sbbb
push
add
aad
push
pop
out
cmp
mov
jge
ret
add
inc
icebp
or
mov
pushl
movsl
cmpsb
mov
pop
int3
mov
bound
pop
cmp
fs
sub
sub
jbe
rep
ret
sub
out
shr
add
aas
cwtl
test
enter
pusha
mov
or
ret
push
jo
xlat
xor
hlt
add
sbb
or
loop
stos
test
hlt
and
aam
mov
jno
xor
shll
outsl
gs
test
jo
das
cltd
xchg
loope
cmpsl
mov
sahf
push
pusha
stos
jo
pop
mov
into
icebp
pop
sahf
and
into
cwtl
ljmp
or
mov
pop
cmpsb
inc
xlat
sub
ljmp
rclb
xorl
mov
pushf
and
mov
scas
insb
sbb
adc
or
sbb
jo
push
sub
aas
mov
mov
add
jle
ss
and
in
test
in
aaa
cmp
loopne
and
cmp
das
mov
daa
orb
lret
push
sub
shlb
fisttps
add
push
lahf
lock
sub
hlt
mov
sarb
mov
jp
and
daa
add
mov
cmp
pop
jne
cmp
push
sub
push
scas
jmp
jl
cmp
adc
aas
aaa
fsubl
jbe
cltd
pop
xor
mov
xchg
int
mov
push
add
call
cli
mov
popf
sub
int
dec
imul
aad
orb
or
add
jle
repnz
add
repz
and
xchg
xor
rorb
xchg
push
je
mov
cmp
lcall
add
fstpt
xchg
mov
or
adc
push
fwait
popa
and
mov
loope
int
cmp
sub
or
dec
mov
scas
pop
pop
lahf
sbb
mov
lahf
push
and
cmp
sbb
repz
dec
aas
push
and
cmp
cmp
xchg
cli
xchg
adc
sub
stos
jmp
ffree
push
outsl
lds
jbe
cmp
insb
fisttps
push
outsl
mov
sbb
inc
loopne
xor
or
aaa
aaa
aaa
jnp
dec
subb
cmp
sub
repnz
or
filds
pop
mov
or
inc
add
lahf
mov
or
mov
push
mov
add
std
push
incb
xor
mov
and
add
mov
imul
jmp
cmp
mov
add
pop
aas
inc
add
hlt
xor
aad
or
cld
add
lds
push
push
inc
pop
mov
rcll
testb
sbbl
mov
ljmp
pop
les
scas
or
jle
or
aas
decb
call
mov
clc
fdivrl
push
add
pop
jo
negb
lock
fs
push
pop
mov
cmpsb
pop
adc
mov
cmpsl
jle
int
outsb
iret
xchg
popf
fsubrl
push
and
sub
clc
dec
lock
mov
jno
test
rcr
sub
fs
sti
xchg
or
xsha1
cmpsb
or
mov
imull
imul
imul
cli
inc
insb
sub
scas
lret
adc
adc
fldenv
hlt
cmpsl
adc
movsb
inc
jae
jae
ja
insl
or
or
jo
mov
mov
mov
scas
jnp
mov
inc
test
mov
fbstp
jecxz
or
sub
test
pop
inc
push
sub
int
mov
jl
lea
ret
fisubrl
ja
lret
or
dec
push
cmc
pop
out
xchg
mov
pop
jge
icebp
xor
in
cmp
mov
das
stos
add
jo
and
out
call
rcr
mov
dec
jmp
fcoml
xchg
jno
cmp
xchg
cld
mov
loope
cld
xlat
jns
orb
lds
xchg
mov
int
aas
xchg
sbb
sbb
sbb
xor
cmp
dec
mov
sahf
dec
xchg
mov
insl
pop
cld
bound
jns
movsb
add
orl
or
je
jne
in
push
push
ljmp
cli
pop
jo
push
jge
or
es
cmc
pop
or
sbb
mov
sbb
ja
mov
sub
inc
test
stc
lcall
into
mov
add
insb
pushf
or
les
stos
outsb
pop
jl
jle
aam
dec
add
mov
cmpsl
addr16
je
dec
cmc
cmp
or
aas
jge
cld
outsb
fmull
xchg
mov
lret
mov
adc
sub
enter
repnz
stc
push
ss
inc
mov
cmp
xchg
shlb
and
add
popf
and
pop
or
push
pushf
mov
test
lods
fnstsw
pop
enter
inc
lods
add
jae
sti
push
push
pop
xchg
or
rcrb
clc
cmc
cwtl
in
and
xor
lods
cmp
or
sbb
push
in
ss
mov
fistps
fs
mov
mov
xor
and
inc
add
pop
cmc
sub
add
popa
cmp
ret
jp
or
pop
jae
lahf
in
ret
push
dec
lds
mov
out
jns
bound
fldt
mov
loope
data16
push
clc
inc
insl
lods
inc
aas
push
in
xor
jge
pop
jge
xchg
and
jne
pusha
push
xchg
jp
or
xchg
and
sub
xchg
popf
mov
inc
push
dec
ret
fwait
pop
fmuls
ret
lcall
arpl
xor
mov
shlb
or
clc
imul
mov
sbb
mov
mov
pusha
pushf
scas
jno
shll
mov
xor
push
and
sahf
fdivr
xchg
mov
mov
test
inc
mov
or
jno
loopne
sbb
cmpsb
and
xor
sub
in
jne
push
movsl
scas
inc
out
push
add
dec
cmp
and
jmp
in
pop
and
ds
cltd
cmp
cmp
mov
sub
xchg
push
leave
insb
xchg
jg
rcrl
ss
push
dec
shl
add
add
fwait
shlb
out
gs
and
inc
sbb
mov
add
test
mov
inc
push
jmp
cli
pop
mov
sbb
loopne
mov
dec
pop
loopne
mov
out
jo
cmp
sub
mov
loopne
pop
roll
inc
cwtl
add
lahf
mov
sbb
add
loope
jbe
pop
mov
enter
ret
fcmove
roll
jae
out
test
imul
mov
fisttps
xor
inc
push
test
xchg
imul
xlat
test
cmp
insl
aaa
sub
cmp
popf
jbe
push
inc
ljmp
inc
pop
loopne
add
je
mov
movsl
inc
notl
and
lds
and
and
push
mov
inc
mov
lods
stc
xor
shr
jbe
popf
fst
pop
mov
and
or
cmp
or
inc
mov
and
in
and
andl
je
cltd
mov
fmull
pop
je
inc
or
jp
xchg
outsb
shlb
in
lock
shl
xor
imul
xor
test
fs
mov
fdivs
mov
pusha
mov
inc
pop
mov
aam
int
xor
aad
lock
push
dec
lcall
cmp
rcr
fiadds
iret
pushf
nop
stc
int3
addb
sti
add
push
mov
iret
pop
jmp
cwtl
fxtract
out
movsl
push
stc
push
and
mov
push
scas
pop
push
clc
push
push
push
mov
adc
mov
mov
scas
mov
daa
loopne
sarl
and
lret
icebp
sub
add
orb
dec
lcall
cwtl
pop
lods
cmp
adc
mov
mov
and
and
lock
mov
in
repz
mov
inc
dec
xchg
rorb
dec
jae
cmp
xchg
pop
xlat
shlb
push
sbb
imul
faddl
pop
imull
cld
js
or
lods
jne
cmp
ja
adc
and
fstpl
rorl
or
inc
inc
jnp
xchg
mov
mov
sarb
ret
push
sahf
xor
cmpsl
rcr
mov
adc
pop
jp
int
int
adc
loope
lea
test
nop
jb
repnz
jae
bnd
pop
sub
jbe
push
cmpsl
stc
and
sbb
xchg
add
lahf
je
add
adc
jae
int3
repz
adc
fldenv
push
jg
and
jmp
inc
dec
mov
fs
call
adc
dec
jo
fistps
fisubl
sub
mov
sahf
cld
cld
cli
stos
ss
nop
dec
push
push
add
cmp
mov
movsl
mov
push
imul
lock
cli
neg
inc
push
rol
les
cs
jp
mov
lcall
sub
mov
into
add
mov
stc
xlat
cwtl
inc
push
or
sti
pop
in
movsl
mov
ffree
aam
call
or
mov
sbb
sub
dec
pusha
mov
or
or
pop
sbb
or
stos
and
popa
add
out
or
pop
imul
aas
aad
aas
adc
sbbl
inc
insl
outsb
fdivrl
sub
add
mov
xor
mov
test
mov
add
and
mov
out
adc
and
shlb
xchg
push
ja
mov
ja
xchg
int
pushf
gs
mov
ss
nop
pop
test
push
jno
stc
pop
rcr
in
inc
ret
sbbb
jbe
xchg
xlat
jo
mov
push
subb
and
add
inc
je
sahf
push
adc
enter
pop
jns
aaa
xor
popf
cltd
js
mov
cmc
mov
test
mov
leave
inc
push
mov
and
psraw
sbb
or
popa
xchg
sub
das
sarl
mov
shr
add
mov
dec
ja
cmp
pop
pop
cli
fcomps
inc
sub
insb
bound
lret
subl
inc
jns
insl
sti
pop
add
pop
push
push
sbb
sub
add
dec
xchg
enter
jp
jmp
or
xchg
scas
ret
adc
adc
and
leave
or
ja
push
js
repz
dec
fld
pop
sub
in
lds
pop
jecxz
lea
hlt
adcl
data16
not
xor
ss
ljmp
sbb
je
hlt
je
sub
into
add
push
stos
and
inc
arpl
das
jne
ljmp
cmp
repnz
pop
popa
push
sbb
out
jl
adc
push
push
sub
jp
testl
add
mov
das
repz
fmul
rolb
loope
push
stos
les
iret
add
aas
mov
push
icebp
stc
sbb
scas
mov
les
mov
jecxz
add
sub
add
sti
jo
loopne
mov
ss
lock
daa
cmp
mov
mov
jle
mov
clc
or
aam
sbb
js
out
xorb
daa
or
jl
mov
cmp
jmp
sbb
rolb
xor
mov
nop
jb
inc
sbb
insl
cmp
loopne
out
sbb
mov
call
xor
and
cmp
ss
out
or
dec
loopne
push
arpl
aas
add
loopne
or
call
pop
pusha
mov
icebp
test
nop
push
test
and
mov
stos
lahf
into
jo
orb
cmpsb
inc
jmp
xor
fiadds
xchg
sbb
push
insb
out
jp,pn
push
pop
out
lahf
xor
fisttpll
xchg
and
outsl
mov
pop
incl
repz
pusha
inc
add
add
pusha
aam
jno
adc
test
xor
inc
adc
call
pop
es
fildl
xchg
xchg
addl
test
mov
ret
ret
int
adc
or
xlat
ffree
add
mov
clc
mov
pushf
ss
inc
repz
jmp
cmpsl
sub
ret
out
sub
xchg
xchg
outsl
ja
ds
jecxz
lods
mov
mov
lock
lods
sub
idivb
and
mov
sub
sbb
push
jecxz
cmpsb
and
in
jnp
lss
push
sub
mov
mov
cld
call
and
wbinvd
mov
push
int3
sub
lahf
nop
shll
sbb
and
adc
test
adc
dec
clc
adc
pop
sub
xchg
popfw
mov
inc
fistpll
jge
fildl
test
pop
outsb
lock
bound
xchg
or
xchg
repnz
es
sbb
hlt
adc
out
or
sbb
xchg
arpl
adc
xchg
fistl
nop
ja
sbb
into
xor
add
cli
push
inc
mov
inc
sub
and
pop
lds
cmpsb
jle
lds
fsubr
dec
cmp
pop
fwait
mov
das
mov
xchg
push
jl
icebp
rorb
mov
pop
iret
scas
adc
test
orb
es
jbe
lcall
cmp
or
jmp
movsb
and
xchg
mov
inc
out
inc
push
rcl
cs
outsb
and
jmp
call
mov
mov
mov
popf
pop
or
clc
xchg
arpl
cmp
or
fs
adc
cmp
popf
pop
icebp
inc
adc
sarl
mov
sbb
push
call
js
std
jle
cwtl
add
sub
adcl
test
lcall
aad
mov
xchg
xchg
sbb
fsubl
mov
or
pop
push
adc
incl
jecxz
lods
fcoml
mov
arpl
dec
bound
lds
push
xchg
mov
cmpl
add
pop
add
adc
sbb
pop
clc
push
js
cmpb
in
or
jl
xchg
out
inc
jle
pop
std
popf
add
or
dec
mov
add
and
mov
insb
test
add
rorb
fbld
jmp
or
mov
addr16
push
sub
gs
mov
mov
or
rorb
xchg
rcrb
add
fs
ds
leave
mov
cld
cmp
mov
test
xchg
cmp
mov
imul
popa
mov
xchg
xor
or
xchg
ds
add
nop
roll
push
dec
in
mov
add
sub
js
imul
inc
subb
insb
ja
stos
xchg
repnz
dec
loopne
sbb
mov
imul
mov
outsb
add
bound
xchg
outsb
and
push
jns
sub
cmpsb
repnz
cwtl
cmp
loop
xor
pop
fldl
or
call
mov
rcll
mov
aaa
jl
mov
sub
aad
outsb
insl
je
add
mov
push
xchg
clc
hlt
mov
call
popf
push
or
xor
sbb
cmp
xchg
movsb
mov
sub
push
lret
lods
mov
pop
mov
vandnps
test
pushf
adc
call
scas
add
call
cld
xchg
stos
jb
adc
xor
in
cmp
pushf
mov
mov
pushf
mov
mov
icebp
mov
xchg
insb
sarb
push
add
shll
scas
rolb
leave
imul
push
test
cmp
nop
and
mov
cmp
rcr
xchg
shlb
push
sub
incb
xchg
test
sahf
out
scas
out
sub
addl
xlat
sbb
pop
lea
add
inc
fcompl
adc
add
insl
dec
mov
data16
ret
add
es
cli
cmc
icebp
test
adc
out
ror
fldt
cmpsl
add
adcb
ljmp
mov
pushl
mov
outsl
push
fs
mov
inc
cmpsb
enter
cmp
adc
and
mov
dec
push
xchg
popa
ja
in
nop
popl
out
cmp
push
cmp
jg
push
fldcw
mov
daa
std
fisttps
mov
cmp
xchg
inc
ds
pop
push
mov
sbb
jl
push
loope
leave
aas
mov
or
pop
xor
clc
sbb
fmull
cmp
add
sub
outsl
incb
push
sbb
add
ljmp
fnstenv
sub
dec
pusha
jns
leave
or
bound
add
bnd
pop
push
call
pop
mov
sub
jecxz,pn
sbb
pop
ja
sub
inc
push
jbe
rcrl
scas
lret
lret
mov
mov
lock
lock
cli
inc
mov
int3
lds
mov
cmp
sub
push
je
int3
xchg
aam
pop
test
inc
insb
add
jo
push
sbb
xchg
aas
pop
enter
push
cmp
xor
sub
leave
popf
test
shrb
jnp
jno
or
push
xchg
test
xchg
or
xchg
mov
inc
push
xchg
mov
and
lret
push
aaa
rcl
shlb
hlt
cmp
pop
nop
adc
rolb
fdivr
xchg
inc
loope
out
jb
mov
loope
jge
jo
add
imul
cmp
mov
jbe
xchg
imul
ret
cmp
jge
pop
sub
inc
push
adc
sub
jle
popa
not
mov
js
xor
push
mov
sub
pop
xchg
cmp
push
repnz
xor
mov
rcl
int3
pop
movsl
push
jmp
jns
and
sub
push
and
insb
jo
ja
popl
xchg
cmp
mov
fists
and
adc
movsb
add
or
movsb
clc
lea
pushf
movsb
das
pop
dec
push
scas
sub
in
decl
cmpsb
xchg
inc
repz
dec
lea
xchg
rcr
ficompl
aam
jo
fcmovb
and
or
lock
inc
pop
dec
rcrl
hlt
mov
cmc
lods
jne
stos
push
cld
jl
in
or
loopne
idiv
clc
aaa
and
aad
or
fistpll
ret
jno
cmp
icebp
mov
sub
leave
sub
inc
daa
scas
or
or
divb
and
shrb
inc
lea
clc
adc
subb
mov
adc
ret
push
int3
sbbl
or
add
push
rorl
cmp
mov
call
fistl
cli
add
add
out
aas
inc
mov
pop
aam
sbb
rcr
in
xlat
in
bound
ds
enter
sbb
sub
mov
add
data16
push
outsb
push
jge
cmp
sbbl
pop
sub
add
fcmovb
mov
repnz
inc
pshufw
popa
nop
lret
mov
xchg
add
push
and
icebp
cmpl
out
pop
inc
xchg
inc
testb
cli
call
cld
call
orl
bound
xor
jecxz
xor
jg
rcl
mov
scas
add
test
lock
or
sahf
jle
mov
stos
pop
pop
repnz
andb
pop
mov
cld
pop
inc
push
jne
push
cmp
adc
pop
or
push
push
cmpsl
mov
mov
xchg
stos
popa
inc
dec
adc
xchg
cmp
dec
mov
push
jno
cmpsl
jb
daa
sub
xlat
in
add
lret
leave
push
hlt
mov
dec
add
scas
pop
inc
icebp
jmp
sub
shl
les
test
lret
enter
test
lods
in
mov
inc
jmp
mov
jecxz
dec
push
cld
in
pop
mov
scas
addb
js
mov
hlt
loope
mov
sbb
push
or
sub
sub
scas
test
data16
out
sub
mov
loopne
insb
add
mov
scas
inc
mov
push
mov
xor
stos
mov
ds
outsl
mov
push
jne
inc
jbe
incl
cli
add
mov
push
pop
jle
mov
cmp
sbb
daa
fiaddl
ret
sub
and
sbb
fdivrl
in
push
jmp
or
and
aam
clc
or
dec
push
adc
js
adc
or
or
mov
xorl
inc
mov
jno
pushf
repnz
dec
in
add
int
ja
es
rcrb
test
enter
in
ss
orb
adc
lret
cmp
les
fcomps
pop
cmp
cmpsb
mov
jbe
jg
addb
aad
mov
nop
xchg
mulb
cmp
bound
xlat
imul
cmp
dec
pop
lods
push
mov
test
xor
cmp
pop
mov
or
mov
push
lret
filds
incb
outsl
sbb
mov
sub
sbb
xchg
inc
repnz
pop
into
fmul
dec
sahf
into
shl
aad
and
cmc
sti
and
pop
rol
inc
pop
aas
out
rclb
insl
mov
dec
mov
push
mov
jmp
cmpsl
or
test
fwait
ja
rcll
add
xor
cmp
ret
xchg
loop
pushf
rolb
ja
or
loopne
push
mov
cld
rolb
rclb
mov
inc
cmp
and
dec
mov
out
loop
pop
sarb
pop
lea
insl
push
ja
push
ljmp
mov
add
mov
cli
jle
sbb
adc
inc
mov
neg
push
push
je
inc
fmuls
sar
jg
pop
mov
nop
stos
sub
arpl
add
ja
lahf
cmp
negb
dec
test
xchg
mov
jp
sbb
mov
aaa
loopne
xchg
mov
mov
jbe
test
mov
in
fiaddl
mov
xor
ss
gs
dec
in
test
mov
lds
inc
push
incb
sub
or
jle
mov
loope
pop
test
push
adc
or
dec
pop
std
dec
cmp
xchg
inc
cld
int
fcomi
push
adc
pop
dec
sub
jb
pop
mov
add
lock
sbb
pusha
mov
jle
lcall
sbb
xor
lds
mov
fbstp
je
adc
sub
dec
push
in
mov
push
jecxz
inc
call
mov
push
mov
push
popa
ret
sbbl
les
push
mov
pusha
or
int3
test
jbe
cmp
xor
xchg
in
xchg
sbb
sub
cmpsb
mov
roll
adc
stos
xorb
cmpsb
jl
add
sub
loope
inc
andb
push
mov
cmp
ds
es
xor
call
stos
loop
add
mov
bound
pop
sbb
inc
cmp
ljmp
and
lods
cmp
and
inc
shrb
sbb
dec
popa
sub
mov
jno
in
add
and
bound
dec
aaa
ljmp
shlb
mov
pop
sbb
push
cmp
cmp
push
loopne
dec
test
adc
push
and
pop
add
lds
inc
mov
sub
cmp
in
or
pop
cwtl
add
add
ljmp
jg
rcr
cmp
movsl
mov
int
test
jg
incl
xchg
fcmovne
iret
pop
and
rsqrtps
dec
inc
jmp
lock
mov
clc
adc
push
cmp
push
out
dec
fisubs
sub
stos
ss
adc
inc
insb
sub
cli
lds
test
pusha
aas
push
popa
cs
movsl
inc
pop
ja
repnz
sbb
inc
mov
push
call
lock
orb
clc
push
cld
xchg
mov
inc
dec
cmpsb
add
xor
clc
icebp
dec
iret
ds
fsubrs
add
xchg
jo
xchg
cmpsl
stos
inc
xchg
in
or
mov
sti
cwtl
ret
ss
lods
addl
arpl
jp,pn
fsubr
cmp
push
push
dec
dec
or
pop
lahf
loopne
cmp
jecxz
or
or
mov
mov
add
dec
data16
cmpsb
fbld
outsb
scas
jg
add
sbb
iret
sbb
pop
hlt
mov
push
cmpl
loope
push
repz
out
outsl
sub
push
dec
add
mov
cs
or
cmp
dec
sub
xor
int3
push
add
push
out
pop
stos
andb
shld
jo
cmp
pop
sbb
loope
loopne
hlt
pusha
mov
xchg
xchg
ret
push
inc
test
cmpsb
mov
sbb
mov
in
push
je
adc
mov
cli
pop
fmulp
mov
aas
cld
decl
or
leave
mov
or
cmp
out
mov
fbstp
cmp
cli
push
mov
mov
test
arpl
xchg
cmpsl
xchg
cs
mov
dec
fldenv
neg
inc
cmp
jae
dec
cli
cmpsl
sbb
popf
divl
push
or
push
in
mov
out
and
xor
mov
mov
sbb
pusha
aaa
pop
adcb
in
or
adc
mov
sub
mov
xor
inc
xchg
pop
pop
mov
lret
cmp
mov
sub
mov
cmp
adc
mov
pop
cltd
int
adc
mov
mov
jne
inc
sbb
jnp
ljmp
sub
scas
lea
mov
addr16
pop
jge
and
xchg
loope
push
jnp
jae
inc
inc
loopne
pop
xchg
sub
les
fwait
xor
push
adc
jmp
mov
push
inc
das
mov
xchg
jne
jne
ret
push
fcomp
rcrl
sbb
xchg
lds
sbb
jnp
int3
sub
sbb
test
inc
or
xor
inc
loopne
int
dec
lret
insb
mov
js
inc
nop
mov
ret
pop
dec
cmp
lods
mov
inc
decl
inc
inc
sti
or
cli
fs
dec
sub
arpl
and
imul
sbb
int3
or
add
and
nop
insb
adc
dec
mov
movsl
cs
push
adc
push
pop
push
lods
sbb
jecxz
mov
cmp
mov
stos
and
push
jo
filds
mov
sbb
dec
and
dec
cmp
fwait
out
push
lods
in
add
imul
cmp
out
loopne
cmp
ret
pop
and
push
in
hlt
pop
sbb
cmp
add
movsb
push
cld
rclb
movsb
into
sahf
sbb
mov
xor
repnz
in
adc
icebp
loope
les
loope
loop
push
sbb
lods
mov
sub
add
mov
cmp
aas
out
ljmp
add
push
in
xor
pusha
inc
loope
push
mov
cmp
std
std
in
adc
xchg
fldt
jecxz
std
into
mov
hlt
cmp
adcb
std
loope
fidivs
sbbl
or
inc
inc
cwtl
or
pop
pop
enter
or
xchg
or
xchg
fcoms
mov
mov
pop
lea
inc
pop
xchg
mov
add
loopne
jo
mov
fistpl
add
adc
xchg
cmpsl
aad
arpl
mov
jnp
cmp
xor
xor
jbe
xor
push
pop
pop
add
or
stos
push
pop
add
sub
roll
or
xchg
imul
mov
mov
loope
aam
arpl
mov
ret
fisttps
and
xor
pop
stc
cmc
pop
lcall
jb
insb
outsb
insb
mov
dec
adc
adc
xchg
pop
push
sub
lret
test
sbb
icebp
mov
repz
or
add
inc
jmp
lock
sub
insb
jecxz
loop
iret
addr16
lods
pop
dec
xchg
and
sar
fcmove
push
lock
lret
xor
aad
call
mov
or
dec
or
pop
roll
lret
in
fisttpll
pop
roll
sub
loopne
xchg
xchg
pop
cmc
mov
out
push
or
or
mov
inc
xchg
adc
ja
push
mov
sbb
or
lret
addr16
xchg
sbb
cmp
ds
outsb
lods
sbb
in
cmpsb
xchg
aas
xor
mov
adc
ss
orb
jns
cmp
fbstp
fucom
mov
jo
pop
pop
in
push
pop
add
mov
fwait
pop
lds
pop
jnp
jae
fnstsw
jno
xor
pop
orb
pop
inc
xor
dec
mov
and
xor
inc
mov
out
test
mov
mov
push
fisttpll
in
ret
insl
xchg
repnz
decb
or
arpl
xchg
sbb
xor
lcall
inc
or
call
jne
mov
icebp
hlt
test
sbb
push
repnz
xchg
xor
dec
cmpsl
cmc
adc
les
int
jo
stos
push
filds
adc
mov
cmp
aaa
or
xor
mov
lods
mov
and
adc
mov
xchg
add
fsts
fucom
jl
movsl
or
push
ja,pt
aas
mov
pop
mov
jge
mov
cmp
inc
leave
add
xchg
insb
scas
mov
fwait
ljmp
sbb
mov
jno
push
push
rclb
xor
pop
inc
jbe
jmp
fcoms
int
call
nop
fdivs
fwait
rcrb
das
mov
sub
ret
shl
jmp
dec
inc
hlt
sub
fsub
call
leave
xor
out
or
in
and
insl
push
sbb
popa
in
enter
xor
push
lret
push
fbstp
push
xor
mov
push
aad
fcmovnu
out
sbb
inc
push
inc
imul
xor
addr16
arpl
dec
pop
jle
lods
scas
jl
iret
xchg
mov
lcall
push
mov
mov
insl
adc
lcall
ds
inc
ret
shlb
xchg
mov
push
rorb
rolb
mov
xor
clc
ret
jg
push
stos
addr16
fimuls
nop
add
and
pop
push
xor
outsb
xchg
sbb
ds
pop
dec
sahf
mov
jne
jecxz
gs
shrl
fwait
push
and
mov
popf
ja
dec
les
mov
push
repnz
and
jle
subb
push
iret
imul
fldcw
mov
sub
mov
fcoms
sarl
hlt
lds
jmp
stc
xor
imul
iret
and
pop
xchg
jno
xchg
mov
mov
leave
loopne
jne
aaa
out
mov
ljmp
cli
add
cmc
pop
mov
xor
shl
mov
push
lahf
int
loope
fs
sbb
movsl
std
jp
dec
fwait
addb
pop
repnz
les
cld
push
add
or
adc
inc
in
rcrb
jb
push
lds
jmp
lods
ljmp
push
insb
dec
and
xlat
or
xor
shrl
xor
jle
add
int
lcall
je
mov
mov
jne
sbb
or
cmp
add
and
fisttpll
arpl
int3
out
addl
jns
fmull
adc
popf
sbb
ret
sub
add
loope
test
aad
add
pop
dec
pusha
push
ret
pop
or
pop
aas
or
shlb
fsubrl
cmc
daa
sbb
gs
loop
aad
fisttpll
les
cmp
mov
call
or
dec
cmp
loopne
inc
jl
mov
adc
mov
in
das
mov
or
loopne
sbb
sub
dec
push
or
or
mov
mov
repnz
rorl
fstpt
jge
jns
lret
je
cmp
pop
or
inc
mov
aaa
push
subb
aam
add
pushl
adc
ficoml
mov
add
sarl
int3
in
fsubrl
into
ds
or
mov
fstpt
mov
xchg
shrb
mov
dec
mov
push
cld
arpl
outsb
fsubs
in
pop
cmp
ds
mov
lods
incb
add
dec
add
bound
insb
push
pop
xchg
add
mov
inc
int3
add
mov
test
gs
lret
loope
pop
mov
sar
inc
insb
xor
adc
sub
lds
mov
mov
dec
les
incl
mov
inc
pop
lock
int3
cmp
in
lret
insl
adc
mov
pop
or
jno
testl
and
add
dec
outsb
pushf
and
lds
sub
sbb
rcrl
mov
stc
mov
dec
cmp
jl
pop
adc
rcl
rolb
mov
adc
add
inc
lock
mov
shlb
rcrb
addr16
mov
mov
sbb
and
pop
xchg
mov
addl
sub
fmuls
adcb
addl
aaa
lret
outsl
xchg
loope
ja
subb
shrl
inc
pop
dec
adcb
out
push
stos
lods
and
test
sarl
push
mov
jp
dec
jle
xor
es
pop
mov
mov
test
pushf
lahf
mov
mov
roll
mov
cmp
iret
sbb
lahf
js
je
sub
push
lock
xchg
cmpsb
inc
mov
jp
push
sbb
iret
ss
adc
popf
xor
loopne
inc
imul
pop
orl
fdivs
jecxz
push
xor
out
mov
push
jp
adcl
jge
mov
mov
mov
mov
lods
test
push
adc
fwait
int3
rcrb
xor
xor
jl
mov
shll
popl
insb
sbb
or
cmp
es
lods
add
or
mov
pop
lods
push
add
out
push
cmp
adc
test
addl
mov
add
pusha
call
out
rcl
jg
mov
addr16
push
mov
test
sbb
loop
cld
push
ss
test
pop
jb
loopne
lds
mov
dec
aaa
je
mov
sbb
ljmp
add
lods
sub
cmp
push
loopne
add
pushf
in
jae
ljmp
push
lret
adc
movsl
vmread
or
pop
fnsave
sub
test
and
jl
cmp
test
je
pop
sbb
sbb
test
xchg
aas
mov
and
rcll
xchg
cmp
push
cmpsl
jbe
notb
inc
cmp
push
cwtl
cmc
ljmp
call
xchg
mov
test
inc
push
inc
mov
insl
sub
dec
int
popa
imul
in
pusha
in
ljmp
sbb
adc
adc
mov
adc
in
clc
jmp
and
push
sbb
test
push
mov
sbb
or
jbe
loopne
mov
test
dec
xchg
stc
cmp
in
test
push
inc
cld
cmc
inc
xor
add
xchg
pop
je
push
rol
mov
insl
adc
arpl
sbb
jo
stos
sbb
add
jb
mov
sub
mov
jl,pt
pop
popa
sbb
cmp
cmpsb
sub
adc
fbld
int3
inc
mov
cli
bound
jmp
aas
lods
rolb
nop
nop
dec
push
pusha
lods
mov
mov
gs
fldenv
scas
icebp
daa
add
xchg
push
push
pop
cmp
dec
mov
cwtl
pusha
cmp
jnp
mov
push
mov
xor
loopne
aaa
sbb
outsl
xchg
push
add
out
and
mov
std
and
mov
stos
sti
and
or
inc
lret
lcall
addr16
leave
xor
push
xchg
push
pop
inc
push
push
push
push
pop
loopne
or
push
pop
loope
jo
int3
shll
xlat
cli
cmc
cmp
clc
sbb
fsubr
inc
out
adc
adc
out
jp
lcall
imulb
push
jle
xchg
repz
mov
cs
push
shl
pusha
mov
sub
out
ss
ficompl
mov
cld
sbb
cmpsl
jno
rorb
or
mov
fiaddl
hlt
fiaddl
stc
in
pop
pop
jo
xchg
mov
inc
fsubl
lock
mov
rolb
push
mov
pop
or
jg
push
add
dec
xor
scas
shlb
xchg
or
mov
loopne
mov
std
jb
cmp
cs
stos
test
xor
and
push
pop
inc
mov
jmp
out
out
mov
mov
int3
cmpsl
inc
lret
call
push
and
clc
loop
andl
daa
mov
mov
lea
and
add
loope
pop
out
push
loop
cld
cmp
inc
add
aam
stc
mov
lock
inc
mov
div
mov
mov
outsb
cmp
mov
sub
mov
inc
fimull
leave
push
std
or
aam
shlb
fs
or
push
icebp
add
rcll
inc
ds
fsubp
mov
mov
test
fisubs
mov
dec
data16
aas
aam
adc
rorb
cmp
xor
xchg
aas
mov
cld
inc
cmp
mov
cmpps
aad
and
add
push
adc
cld
cmc
pop
mov
nop
adc
pop
loopne
and
data16
pminsw
xor
dec
jp
jbe
sub
outsb
or
icebp
stc
dec
pop
in
pop
xor
inc
clc
clc
bound
cli
iret
mov
and
jle
test
jno
adc
in
dec
loop
into
cmp
add
test
aas
test
scas
jno
mov
add
imul
scas
mov
and
pop
and
push
pusha
mov
in
fidivs
lock
xchg
push
or
test
in
xchg
je
inc
jo
cs
mov
pop
jg
add
pop
mov
icebp
or
xor
xlat
sub
mov
push
scas
push
adc
inc
inc
pop
push
insb
xor
jmp
loope
inc
mov
cli
add
loope
lret
fcomip
rcll
call
lock
push
inc
movsl
in
sub
cli
pop
mov
aas
int3
fwait
or
insl
xor
ret
gs
scas
cmp
daa
pushl
loop,pn
xor
leave
adc
rorl
rorb
dec
dec
sbb
popa
push
mov
mov
scas
fs
rclb
icebp
add
nop
add
test
lock
cwtl
ret
out
jmp
hlt
subb
push
mov
add
mov
lods
push
stos
ret
int
jl
cmp
mov
aas
add
mov
jmp
sbb
aaa
loop
jne
adc
iret
pop
shll
dec
ss
adc
addb
mov
jnp
mov
xchg
in
lcall
xchg
aas
push
rorb
add
movsb
adc
out
je
dec
aam
movsb
ficomps
sbb
outsb
or
std
jno
loope
fcoml
xor
push
das
mov
mov
xor
sbb
and
scas
cltd
andb
mov
mov
xchg
mov
je
outsl
into
lahf
cwtl
add
inc
in
inc
dec
mov
jmp
in
insl
mov
or
pop
es
sbb
lock
jae
inc
push
pop
pop
pusha
inc
cltd
inc
sbb
mov
stos
cmp
jb
inc
jne
sub
shl
cmp
js
iret
ret
ret
dec
adc
arpl
and
test
clc
stos
inc
cld
fisttps
cld
and
fwait
pop
shrd
xchg
push
adc
cmp
sbb
enter
and
push
mov
cli
les
or
xchg
sub
pop
fbstp
in
push
arpl
pop
insb
xor
js
cmp
decl
cmp
mov
cmp
jecxz
cmp
cmp
mov
into
cmp
fucomip
pop
sub
sahf
or
scas
jl
mov
push
xor
inc
outsb
adc
aam
sub
into
scas
jbe
push
out
or
dec
and
test
mov
add
xchg
xchg
mov
mov
test
cmpsl
cmpb
mov
pop
cs
fidivs
xchg
jle
insb
jmp
mov
jmp
test
mov
add
and
out
sub
inc
mov
xlat
pop
lcall
push
out
call
pop
mov
mov
adc
mov
push
mov
pop
pop
sub
or
fbstp
lock
cld
or
mov
push
scas
in
hlt
gs
xchg
push
jecxz
lock
pop
icebp
jbe
call
movb
enter
les
jp
mov
out
xor
jno
into
popa
fstpt
or
fcom
ljmp
push
or
sbb
sbb
sbb
hlt
add
adc
mov
adc
cli
mov
adc
js
int3
cmpb
cmp
test
jns
mov
sub
sbb
adc
sub
cmpb
inc
xor
clc
lock
test
mov
or
adc
xor
add
dec
pusha
das
mov
jmp
inc
sbb
mov
or
mov
mov
imul
or
loop
pusha
mov
inc
adc
fwait
dec
mov
inc
in
push
lock
adc
es
pushf
cmp
call
clc
sbb
jb
ret
cwtl
inc
or
and
add
adc
push
sti
and
clc
add
xchg
jno
inc
xorl
rclb
jo
jne
loopne
jbe
and
sub
ljmp
in
pop
sbb
mov
sub
test
cmc
dec
mov
ds
xor
popf
ret
adc
adc
ljmp
dec
pop
cli
iret
add
lods
xor
and
push
pop
test
ret
mov
or
jb
fnstcw
sub
push
bound
imulb
jno
adc
push
cmp
inc
cltd
ss
sar
outsl
cli
in
orb
fcomps
inc
inc
and
push
in
jnp
lods
cmp
mov
movswl
mov
cmp
outsb
lcall
adc
aam
jo
addb
xchg
aam
jl
loopne
xor
or
push
out
mov
shl
mov
fcoms
lcall
jo
out
or
push
xor
adc
inc
jo
xchg
sub
out
arpl
daa
mov
jle
dec
push
ja
pop
in
cmpsb
aas
xor
mov
lds
pop
test
jmp
lret
and
shlb
lea
pop
lcall
mov
xchg
test
mov
sub
clc
dec
mov
jbe
insl
fistpl
stos
and
out
xor
pop
add
add
and
inc
int3
mov
hlt
mov
and
in
loope
in
push
cmp
fsubrs
jp
adc
lods
push
sbb
addl
mov
cmp
mov
cmp
xchg
jnp
cmp
fs
lods
pop
call
ds
mulb
pop
pop
faddl
sbb
lods
pop
aad
inc
mov
nop
mov
pandn
xor
xchg
shll
test
je
or
push
sub
sub
jmp
push
jne
mov
sbbb
pushf
push
cs
insl
scas
je
inc
cld
test
sbb
jg
bound
in
filds
xchg
add
and
sbb
pop
adc
mov
mov
stc
add
jmp
stos
sub
mov
popa
rolb
ljmp
lea
push
mov
add
gs
sub
into
sub
call
frstor
xchg
jle
jnp
xchg
mov
sbbb
and
mov
sbb
xchg
sbb
jg
fwait
inc
call
sub
iret
nop
adc
add
mov
call
bound
test
fistl
pop
inc
mov
mov
xor
popa
imul
lods
les
les
sub
fcomps
jl
jbe
out
ret
xchg
test
push
bound
cmp
or
and
or
mov
adc
dec
jl
push
jl
fmul
and
sbb
add
push
sub
or
lret
leave
outsb
sbb
roll
divb
es
mov
pusha
mov
addr16
sbbb
ficoml
or
dec
adc
es
adc
fmull
jmp
js
cld
lock
aas
fisubl
jecxz
mov
add
pop
or
sarl
adc
mov
inc
rolb
push
loop
dec
mov
add
testb
sbb
imul
lahf
push
adcl
pop
mov
cmc
sub
inc
lea
add
daa
or
out
inc
cli
test
pop
hlt
lea
flds
cmp
add
rorb
sub
loop
pop
ficompl
mov
mov
pop
jo
xchg
xor
mulb
mov
pop
scas
js
bound
mov
push
pusha
test
pop
std
popl
popa
roll
cmp
clc
dec
dec
dec
insb
inc
ficomps
or
mov
mov
js
idivl
push
push
lret
add
sbbl
and
push
cmp
jne
add
push
cld
jo
pop
xchg
movsb
add
jl
adc
repnz
jbe
aaa
mov
fildll
dec
mov
divl
mov
jp
mov
mov
inc
cwtl
add
pop
pop
popa
aas
pop
cmpsl
cs
and
pop
aaa
add
popf
push
mov
out
ja
or
es
push
mov
sbb
jbe
mov
fsubp
push
movsb
sbb
outsl
add
test
call
ffree
mov
enter
cmp
pop
jl
push
push
hlt
int
cmp
sbb
jo
inc
je
das
or
xchg
push
fsubr
cmc
sbb
popf
xchg
je
out
outsl
mov
fs
fiaddl
mov
mov
and
inc
repnz
and
cwtl
and
test
ss
add
mov
mov
push
sbb
xor
cld
mov
divb
loopne
and
mov
pop
jg
jle
sub
insb
mov
jecxz
shl
cli
and
ret
push
jmp
pusha
cmp
test
push
xchg
popa
xlat
push
or
push
sub
pop
lahf
sbb
jb
xlat
or
push
das
fadds
sti
mov
sub
cli
pop
add
adc
xchg
and
cli
add
cmp
cwtl
or
fisubs
js
push
push
xchg
loop
push
je
mov
sub
cltd
adc
mov
add
lret
xor
adc
jecxz
ret
xchg
jle
repnz
ret
cmp
pop
push
int3
nop
sub
add
lock
jle
subl
arpl
movsl
ss
sbb
clc
jg
faddp
pop
inc
sub
jns
xor
lret
push
xchg
sarb
in
sahf
in
fwait
mov
and
adc
repnz
add
fs
fwait
pop
rorb
js
mov
jg
and
push
rorb
and
add
sahf
cmp
mov
xchg
mov
mov
xchg
js
add
mov
shrb
push
pop
mov
scas
out
clc
test
or
cli
movsl
in
jne
test
mov
add
inc
or
call
into
dec
cs
cli
addl
lcall
pop
leave
clc
and
push
sub
js
ret
cli
into
adc
pop
popa
pop
mov
xor
mov
cmp
push
push
imul
bound
pop
add
dec
and
ret
inc
xchg
sti
loopne
lods
stc
push
cmpsb
mov
clc
xor
mov
hlt
addr16
dec
in
lcallw
inc
sub
add
outsl
jg
ja
out
push
or
sbbl
clc
or
mov
movsb
add
xchg
mov
shrl
xchg
cld
or
inc
jnp
lods
adc
mov
pop
xchg
dec
fstps
outsb
negl
pop
fidivrs
lcall
loope
cmp
adc
cmp
push
sbb
and
jo
in
mov
mov
mov
cld
dec
out
inc
inc
jns
outsb
pop
je
xchg
das
jne
mov
cld
inc
filds
movsb
pop
test
mov
jle
nop
push
shl
incl
cli
mov
cmp
cmpl
jne
push
sti
dec
push
inc
xchg
cmpsb
cmp
mov
js
cmp
es
adc
add
movsb
jne
cmp
sub
andb
jo
pop
xchg
aas
insb
push
mov
das
jl
loopne
jb
sub
int3
jp
loopne
adc
rcl
jl
lret
mov
sub
test
jo
adc
cmp
add
mov
pushf
addr16
incl
fcoms
subl
fwait
out
push
clc
push
jg
cli
aad
out
mov
std
orl
movsl
testb
movb
pop
test
cli
jg
push
add
test
dec
cmpsl
xor
mov
std
out
and
cmp
pop
mov
mov
jecxz
mov
lret
sahf
rcrl
push
pop
and
ret
test
fsubs
pusha
out
mov
inc
fiadds
and
jb
sbbb
xchg
aaa
shll
mov
inc
mov
fs
mov
mov
inc
xchg
push
pusha
mov
push
ss
in
push
int3
out
mov
test
cltd
pop
or
out
push
fnsave
sbb
or
push
xor
fsubrl
jg
imul
scas
pushf
loope
loopne
pop
push
ror
in
fnstenv
ljmp
push
push
pop
ret
xor
sbb
test
sbb
cmpsl
or
inc
fcmovnb
push
les
xlat
ret
sub
loopne
inc
in
in
adc
dec
ret
leave
mov
ret
mov
mov
mov
mov
pop
dec
into
test
fiaddl
adc
ffree
scas
jle
sbb
cwtl
ret
dec
lods
mov
jl
pop
inc
sbb
pusha
movsl
adc
push
pushf
push
out
insb
push
lock
xor
pop
aas
fists
xor
push
push
sub
xor
xor
xor
mov
mov
jmp
inc
jb
movl
cli
or
cmp
or
fdivl
add
mov
pop
mov
not
push
xor
fwait
ss
out
stos
test
cld
call
sub
fstpl
mov
adcb
ret
inc
push
pusha
call
loop
adc
dec
xor
gs
bound
movsl
push
mov
lods
int3
push
enter
mov
cs
and
pushl
std
cmp
dec
inc
push
cli
aam
adc
jge
add
cmp
or
xor
fcomi
lock
imul
cs
aaa
lcall
fnstsw
cwtl
push
les
and
cwtl
lret
mov
adc
inc
ficoms
xchg
xchg
add
or
pop
or
add
imul
unpcklps
mov
imul
inc
in
call
or
std
sbb
jp
ficomps
sub
jp
call
sub
cmp
or
data16
sbb
adc
scas
sub
pop
ret
push
mov
or
dec
mov
ret
out
lods
cmp
cmp
incl
loopne
mov
add
aam
mov
loop
sbb
mov
test
adc
mov
push
inc
rcrl
cmpb
subl
fisubs
shl
sub
adc
dec
loop
mov
enter
cwtl
pop
push
xor
pushf
scas
cmc
mov
mov
lock
fbstp
pop
mov
arpl
add
mov
fmuls
cli
dec
sub
orb
ret
shlb
cld
pop
lods
icebp
ljmp
ret
jg
xchg
mov
push
fcompl
imul
ret
rclb
pop
in
jecxz
cmp
ds
cli
sub
sbb
fcmovnu
xor
out
inc
js
cmp
ja
add
pop
cmp
rclb
push
orl
xor
sti
dec
inc
insl
xor
xlat
add
jo
push
sbb
hlt
and
add
incl
aas
pop
add
xchg
mov
cwtl
mov
pop
lods
cli
jb
test
and
xor
pop
xchg
les
push
punpcklbw
or
adc
pushl
cmp
test
into
popa
add
add
ds
call
icebp
add
addb
sub
pop
fiaddl
adc
xchg
mov
icebp
stc
inc
cmc
and
out
cmc
add
inc
mov
mov
mov
call
cwtl
mov
ss
mov
mov
pop
test
jae
stos
jp
shrl
mov
rolb
fmuls
shlb
xchg
pop
mov
mov
rclb
and
pusha
inc
cli
sarl
and
push
jg
and
xchg
or
push
enter
or
inc
int3
adc
mov
mov
je
or
test
mov
daa
inc
mov
sub
push
fcoms
mov
mov
or
mov
dec
dec
sbb
icebp
das
clc
pushl
or
call
in
adc
add
roll
cmpsb
mov
push
jmp
and
xlat
lods
int
inc
pop
add
pusha
add
lcall
repnz
xor
fwait
pushf
sbb
jge
je
call
mov
sbb
xor
pushf
cld
lret
aad
in
and
jns
xchg
imul
sbb
dec
lret
ds
adc
sub
orb
or
mov
cld
mov
call
sbb
shlb
push
les
pop
clc
addb
shrl
add
push
scas
fwait
lock
rorb
mov
stc
add
mov
aaa
subb
add
push
stos
mov
dec
jb
imul
imul
jle
adc
scas
les
orb
sub
nop
inc
dec
cltd
pop
rcll
insb
mov
mov
jl
ljmp
mov
out
imul
movsb
inc
push
sti
pop
adc
sbb
loopne
ret
sbb
outsl
push
cmp
push
mov
inc
repz
and
and
test
movsb
xchg
push
pop
hlt
mov
rclb
sub
pop
and
push
cld
mov
ret
dec
pop
jbe
lock
ret
dec
dec
in
cld
mov
rcrb
push
mov
or
fs
add
inc
lea
movsb
push
sbb
inc
pop
jmp
or
pop
hlt
shrb
pop
jmp
bound
mov
movsb
jbe
fstps
dec
inc
pop
mov
pop
int3
rcl
add
outsb
lret
test
sarl
data16
push
jp
cmp
inc
fisttpl
xlat
fmul
xchg
decl
sub
sbb
dec
gs
mulb
sbb
enter
nop
pop
ret
decl
fsubrs
sarb
stos
sbb
inc
test
cmp
scas
aam
jbe
stos
ljmp
cmp
cmc
push
pop
addl
jmp
mov
sbb
push
jbe
mov
jecxz
add
call
jo
mov
jg
mov
and
mov
mov
addr16
popa
or
dec
clc
pop
popf
or
mov
sbb
add
add
shlb
pop
adc
into
jmp
pushl
adc
movsl
adc
xchg
push
push
pop
jno
fwait
fidivrs
and
add
je
roll
aaa
dec
filds
scas
fsts
jp
jge
sti
adc
jne
and
shrb
outsb
adc
push
xor
pop
and
jbe
fmull
inc
xchg
inc
push
mov
jecxz
push
adc
pop
xchg
test
mov
into
sub
into
jg
cmp
jmp
jno
ficoml
xor
pop
cltd
mov
mov
mov
jmp
insb
xor
jp
sbb
inc
std
iret
push
popf
jle
lahf
xor
sub
cmp
fidivrl
mov
rcrl
js
sbb
jl
arpl
push
insb
mov
inc
sbbb
sbb
xor
mov
mov
adc
lcall
mov
lods
mov
fcmovnu
adc
int
out
nop
rolb
call
faddl
pop
dec
xlat
xchg
ds
sub
add
repnz
das
push
push
xchg
cmpl
and
jo
fsubrp
mov
ret
das
filds
mov
push
pop
jns
rorb
ss
addl
mov
push
call
adc
dec
sub
lds
or
jecxz
femms
fcmovnu
mov
cmp
call
sub
cmp
pop
cmpsb
or
add
test
push
push
sahf
cmpsb
cltd
inc
cld
fbld
pop
or
jl
push
adc
lods
shrb
aam
mov
pop
std
mov
sub
push
pop
adc
hlt
fstl
cmp
jae
xchg
xchg
dec
popw
adc
jmp
or
adc
out
sbb
pop
and
dec
imul
push
paddw
inc
aam
or
imul
sbb
sub
test
xchg
fdivs
or
inc
insl
adc
mov
pop
and
insb
and
stos
mov
add
adc
and
lds
xchg
mov
mov
or
into
mov
ljmp
xchg
sbb
and
dec
scas
lods
insl
adc
push
in
adc
adc
shlb
je
cmc
push
lods
int
or
and
aas
in
inc
or
cmc
cmc
es
adc
aas
les
pushf
sub
xchg
xchg
pusha
leave
inc
scas
stos
mov
xchg
pop
pop
mov
xchg
test
pop
xchg
mov
loop
or
mov
mov
mov
inc
jg
push
enter
pusha
roll
fisubrl
pop
and
rcrb
push
int3
cli
mov
mov
sub
dec
add
sbb
add
push
cmp
inc
mov
scas
jo
mov
int3
fiaddl
pop
sti
hlt
pop
cmp
enter
push
mov
stc
cmpsb
cmovle
mov
adc
roll
lcall
xchg
repnz
jl
cmp
mov
jle
sbb
notl
outsl
sub
icebp
sbb
fisttpll
dec
int3
negl
lock
repz
roll
rcll
lods
rcl
lea
inc
lahf
fnsave
fbstp
call
mov
jo
mov
mov
xor
clc
pop
or
push
xchg
add
xor
divl
out
loop
xchg
push
cmp
xor
push
mov
std
push
jne
inc
lock
jb
lds
ljmp
inc
xor
push
push
les
adc
aas
cmp
mov
lock
and
into
aam
addr16
or
das
mov
adc
adc
xor
add
cli
cmpsl
sub
imul
inc
xchg
repnz
fmuls
adc
push
scas
pop
mov
divb
ss
cmp
shrl
shll
ljmp
add
dec
xor
dec
imul
enter
fs
push
xor
xor
add
push
fdivl
jae
or
je
imul
mov
pop
mov
shlb
inc
ds
or
dec
pop
mov
rcrb
shll
dec
sbb
push
pop
adc
inc
or
jmp
mov
cmp
cs
cmpl
mov
adcl
add
stos
push
notb
mov
dec
lahf
mov
mov
jp
sbb
add
cmp
sub
push
loop
mov
rolb
fwait
in
sbb
pop
aam
subb
cmc
and
scas
push
jb
ljmp
or
jle
pop
in
xor
rclb
call
jne
sti
jecxz
andl
jmp
cs
cmp
in
jne
add
int
incb
scas
test
ljmp
roll
loopne
sti
leave
dec
inc
add
push
sbb
test
shlb
dec
inc
imul
push
add
dec
add
test
fildl
test
mov
xor
movsb
pushf
sbb
mov
rolb
mov
jbe
inc
mov
aad
mov
jmp
inc
cmpsl
pushf
inc
je
add
js
in
aas
cs
scas
xor
subb
push
adc
push
sahf
icebp
es
push
es
mov
js
push
pop
rcrb
and
dec
sbb
rcl
mov
jle
pop
xor
mov
or
sbb
test
xchg
inc
mov
xchg
cmp
dec
jp
mov
out
adc
inc
js
add
inc
lods
adc
cmpsb
mov
or
out
cmpsb
xor
lcall
or
bound
test
inc
popf
ficomps
mov
arpl
dec
and
mov
fwait
sub
cld
add
jo
mov
fsubrl
out
scas
lret
in
cmp
xchg
or
nop
sub
inc
cmpsb
pop
mov
imul
mov
mov
fstpl
sti
push
mov
sbb
js
lods
adc
mov
fidivrs
cmp
pop
enter
jmp
push
dec
jle
rolb
out
rorl
inc
mov
test
push
in
mov
xor
loope
cwtl
sbb
imul
inc
clc
sbb
push
stos
aam
out
mov
adc
mov
inc
cltd
cld
lods
pushl
xchg
push
cmp
push
sbb
sub
pop
cld
add
and
outsb
test
dec
sub
mov
jl
push
mov
cmp
loope
or
pop
sbb
jecxz
in
sbb
push
test
xor
cvtps2pd
pop
lret
ja
fcomip
mov
fsts
movsb
ret
push
xor
pop
orb
push
or
out
push
dec
shrl
mov
test
and
pop
dec
inc
xchg
decb
fsubrs
or
mov
test
bnd
movsb
imul
mov
aad
pop
dec
jo
jne
push
aam
xor
add
fs
pop
hlt
stos
sarb
xchg
inc
xchg
adc
in
sbb
fimull
adc
push
mov
mov
dec
mov
sbb
jo
mov
or
push
or
dec
pusha
insl
ljmp
push
xchg
ja
out
mov
iret
jmp
in
dec
in
and
cmp
pop
clc
mov
push
mov
pop
add
cld
adc
push
add
xor
add
sub
push
ror
fsubrs
fldl
lods
push
aaa
jnp
les
sarb
xchg
cwtl
pop
push
dec
or
js
aas
cld
cmp
call
pushf
mov
inc
jns
inc
or
adc
jmp
call
sub
push
iret
out
fwait
test
inc
test
pop
mov
inc
push
push
push
stc
xchg
test
loopne
cld
mov
into
js
add
adc
dec
mov
arpl
lret
stos
mov
into
mov
lods
or
mov
or
jnp
stc
add
call
je
sti
fdivl
testl
scas
pop
fistps
ljmp
ss
pop
repnz
test
aam
cmp
xchg
lods
sub
xor
jecxz
movzbl
jg
dec
mov
into
push
push
and
popa
push
sub
loope
out
sahf
or
fs
xchg
aaa
mov
sub
cmp
sbb
cmp
jle
test
dec
add
subb
inc
scas
pop
mov
lcall
rolb
out
jmp
pusha
inc
fldcw
test
lock
pop
loopne
das
pop
outsb
jl
data16
push
jp
movsl
lods
mov
jb
or
mov
dec
rcl
cmpb
and
test
repz
or
adc
mov
mov
iret
repz
xchg
clc
jecxz
jne
dec
stos
inc
sbb
mov
inc
and
push
xor
mov
and
add
xchg
jg
sbb
out
mov
shrb
jecxz
jno
cwtl
adc
je
pop
mov
data16
call
jne
adc
adc
sbb
pop
idivb
icebp
ss
and
mov
xor
cmpb
lock
lret
push
sti
ret
mov
mov
adc
xor
pop
push
cmp
call
inc
inc
and
ss
imul
adc
and
pusha
xchg
jge
push
jg
push
xchg
cltd
fstp
icebp
xor
ljmp
mov
repz
es
mov
sub
test
mov
in
scas
xchg
mov
pop
mov
or
ja
and
pusha
push
out
cmp
neg
je
inc
mov
arpl
iret
mov
mov
movsb
add
fs
call
outsb
inc
dec
outsl
push
push
cli
loope
dec
push
ret
push
daa
ret
shlb
nop
xchg
mov
out
sbb
ljmp
lods
dec
or
lock
out
mov
mov
mov
push
lea
pusha
and
mov
or
lods
sub
jns
sbb
jno
lcall
mov
aas
es
int
push
add
cwtl
fwait
mov
dec
data16
add
pop
pop
push
adc
sahf
repnz
sbb
xor
lds
nop
in
or
rcrb
popa
dec
pusha
ljmp
xlat
cmp
jl
and
jg
pop
jecxz
dec
outsb
mov
push
lds
dec
lods
xchg
push
xcrypt-ofb
cmpsl
stos
lods
testb
std
xchg
jle
sbb
pop
ja
add
ficoml
and
jbe
xor
sarl
inc
xorb
roll
adc
sbb
add
js
inc
adc
add
fcomip
and
mov
push
lods
lds
ror
xchg
sub
mov
lret
mov
les
push
jbe
mov
hlt
out
out
cmp
jl
fldl
cli
lea
js
jbe
or
xchg
mov
mov
cmp
lods
leave
dec
add
add
add
outsb
sub
dec
cmp
outsb
mov
clc
aaa
mov
stos
cmp
push
xchg
mov
inc
lods
test
add
inc
popl
enter
xchg
faddl
cld
jecxz
ret
sahf
mov
mov
sbb
adc
ficompl
jbe
pop
add
or
rcll
in
xchg
pushf
sbb
dec
and
xchg
pop
sub
std
orb
dec
fwait
mov
or
pop
movsb
mov
dec
pop
push
std
or
cld
cs
pusha
cmp
adc
movsb
clc
mov
cmp
arpl
or
dec
subb
mov
xchg
push
sbb
push
repz
repnz
inc
adc
inc
pop
pop
mov
sub
daa
and
push
cld
push
shll
out
xor
or
xchg
pop
push
jno
mov
ss
push
dec
and
sahf
cwtl
jle
inc
push
aad
jbe
jbe
popa
aaa
aam
das
gs
mov
les
xchg
arpl
lcall
push
loop
sbb
adc
sahf
scas
pop
iret
pop
ret
stos
lock
aas
push
mov
addr16
xor
icebp
mov
hlt
push
sub
ret
xchg
dec
dec
enter
pop
inc
pusha
shl
mov
push
xchg
jo
in
add
xchg
pop
orb
pop
cmp
jle
lods
fs
xlat
inc
and
pop
loope
jecxz
adcl
xor
push
sbb
mov
add
sbb
shlb
cs
pop
popa
jp
mov
jge
lods
adc
nop
mov
xor
ss
mov
out
pop
aaa
mov
inc
pop
scas
pop
pop
xchg
adc
mov
outsl
and
adc
inc
call
or
push
loope
fwait
cmp
and
add
xor
push
mov
cmpsb
subl
std
sbb
sbb
cmpsl
add
out
mov
push
sarl
inc
jbe
sar
scas
das
sub
add
nop
mov
inc
and
jns
jle
inc
push
rcl
enter
or
mov
loop
rolb
testb
nop
sub
sbb
jl
mov
decl
sub
jb
pop
les
clc
int
inc
mov
push
bound
stos
stc
cld
lahf
faddl
lret
pop
dec
mulb
sbb
stos
ss
mov
arpl
aaa
push
pop
call
repnz
mov
lock
dec
jle
mov
xlat
inc
sarb
mov
jb
stos
or
push
adc
sbb
sub
or
push
mov
and
insb
or
sub
mov
lea
inc
rcrb
or
int3
sti
add
cli
pop
and
lods
loopne
and
push
jl
dec
jne
std
mov
popa
cmp
in
sbb
jnp
pop
adc
push
jl
xor
clc
lcall
test
lcall
pop
push
dec
jp
lcall
in
imul
daa
stc
shl
push
mov
mov
add
xchg
pop
fldl
bound
in
inc
push
cld
inc
rcrl
test
js
lods
stc
js
ja
insb
cmpsb
and
add
cmpb
clc
lock
scas
mov
popl
mov
fdivrs
outsb
add
fdivl
sub
fadd
in
or
das
xor
push
cmp
add
into
and
pop
shr
xchg
pop
sub
scas
loop
popf
pop
xchg
dec
sub
test
rorl
pop
mov
mov
and
fcmovne
and
aas
add
std
jg
aaa
dec
add
mov
clc
dec
push
in
incl
or
mov
mov
xchg
dec
pop
pop
mov
adc
les
iret
dec
rol
jmp
ja
fisttpll
pop
mov
jo
movsl
mov
push
pop
push
addr16
cltd
pop
aaa
jbe
std
jl
jecxz
mov
cltd
mov
pop
outsl
dec
mov
data16
cltd
xor
ss
sub
cmp
xchg
mov
and
xchg
and
pop
xchg
push
add
jp
jle
pop
cltd
mov
jne
test
jno
outsb
mov
adc
call
push
inc
fsubrl
popw
test
pop
and
inc
inc
xchg
and
dec
adc
or
mov
popa
push
je
mov
int
or
or
adc
addb
arpl
cmp
popa
rcl
outsb
or
movl
test
pop
and
mov
sub
iret
mov
jb
fmull
or
push
cwtl
cli
testl
adc
nop
cmp
scas
push
cli
lods
jne
iret
mov
data16
jl
or
inc
hlt
clc
inc
scas
pop
fwait
repnz
jp
mov
ret
cs
fistps
xchg
sub
mov
mov
jo
add
das
cmpsb
cmp
jmp
or
dec
pop
fs
jbe
jl
adc
add
es
add
push
call
lahf
outsl
jg
cltd
sbb
enter
sub
inc
dec
out
loope,pt
ljmp
add
dec
cmp
test
mov
sub
loop
leave
mov
les
lods
and
popa
inc
cld
dec
scas
lret
or
jns
push
push
inc
or
icebp
arpl
int
nop
andl
push
sbb
add
popf
sub
leave
mov
ja
je
xorl
dec
mov
jo
jb
push
loopne
js
addb
cwtl
pop
push
ljmp
mov
or
add
sbb
mov
daa
xor
pop
inc
clc
rcll
or
sub
xchg
push
mov
push
scas
adc
nop
ret
or
mov
mov
adcl
push
ret
inc
adc
mov
jo
daa
scas
add
add
loopne
std
insb
sbb
mov
ds
mov
cltd
clc
je
jg
mov
pusha
sub
or
cs
push
push
mov
mov
pop
insb
pop
pop
loop
lods
repnz
inc
repnz
inc
xor
push
pusha
shl
mov
movsl
hlt
pop
sbb
mov
mov
add
mov
jnp
outsl
cmp
sar
mov
pop
jbe
and
add
out
mov
call
mov
sub
mov
or
mov
insl
cld
movb
add
cs
add
jns
push
mov
std
les
std
xchg
push
mov
inc
ss
outsb
subl
cmpsl
inc
cmp
loope
sbb
jnp
push
stos
cmp
stos
test
rolb
call
into
sarb
hlt
repnz
cmp
bound
insb
std
addb
in
or
loopne
mov
negl
idiv
mov
push
test
mov
mov
add
add
cmp
adc
or
push
mov
mul
in
inc
je
push
mov
sbb
inc
lret
inc
push
mov
ret
loopne
loop
inc
dec
sub
decl
pop
repnz
pop
aaa
loop
hlt
mov
cmp
inc
mov
push
lret
hlt
mov
sahf
jno
push
je
ljmp
push
daa
sbb
repnz
sbb
incb
dec
cld
push
push
push
push
shrb
cs
int3
sbb
mov
mov
fmull
jg,pn
xchg
and
hlt
pop
nop
out
mov
dec
js
popa
pushf
cs
and
adc
jae
jecxz
imul
add
cmp
and
mov
outsb
ss
pop
pop
loop
test
movsb
inc
jne
rolb
test
and
pop
mov
movl
movsb
mov
xchg
iret
add
loop
test
xor
stc
dec
and
lods
mov
pop
das
jb
push
ds
ja
push
sahf
js
test
popf
loopne
ljmp
in
inc
xor
push
nop
test
jmp
clc
sti
sbb
cli
jae
jmp
mov
mov
mov
test
imulb
cmc
cmpsb
and
mov
shll
test
mov
fwait
adc
push
jge
pop
push
lock
in
xchg
cli
adc
ds
loop
rcrb
out
cs
pop
sub
test
call
jno
adc
out
mov
jnp
lock
daa
xlat
movsb
je
adcl
pop
add
xchg
fidivrs
ret
scas
outsl
call
inc
push
inc
push
mov
enter
lds
xchg
sub
addb
push
cmpsb
add
push
scas
fdivs
sub
pop
add
jb
or
mov
imul
pop
loope
inc
stos
test
mov
mov
lods
pop
mov
pop
mov
mov
sbb
jbe
lods
mov
mov
test
inc
cwtl
xor
push
inc
cmpsb
xchg
imul
adc
dec
es
adc
and
lods
fistpll
and
lods
jecxz
pop
clc
iret
push
enter
repnz
dec
adc
ret
lret
sbb
mov
aam
mov
in
cli
adcb
xor
bound
jl
jp
mov
jne
cmp
stos
mov
mov
lock
adc
subb
jp
and
push
lods
bound
fimuls
jno
push
out
mov
add
pushf
clc
pop
cld
cmp
lock
dec
movsb
lret
das
mov
nop
cmpsb
jne
inc
mov
iret
mov
mov
lahf
ret
std
repnz
imul
jmp
mov
andb
and
and
orb
inc
jb
mov
ret
adc
out
push
sub
push
je
outsb
cmp
push
push
bsf
lcall
jge
insl
jae
push
xchg
popf
and
cmc
mov
push
or
shlb
lds
inc
popf
dec
or
jns
cmc
outsb
jmp
or
jo,pn
std
sarl
jl
add
mov
inc
sarb
add
mov
aaa
push
mov
cmpl
xchg
stos
add
outsl
mov
mov
xor
mov
xchg
aam
mov
lods
push
aam
push
fdivrs
sti
mov
inc
in
mov
cmp
inc
mov
mov
shlb
push
push
jbe
mov
push
cltd
pushl
lods
pop
fucom
add
pop
mov
jl
fdiv
fadds
aam
rcll
and
fstpl
push
roll
inc
dec
je
mov
add
cs
scas
inc
mov
pop
js
pop
insb
xchg
stc
add
loop
and
or
push
cmpb
std
mov
je
push
push
xor
sarb
loop
mov
pusha
pop
add
mulb
test
xor
or
inc
pop
push
push
mov
addr16
test
sub
pusha
or
inc
cmp
scas
movb
and
fmul
add
pop
stos
lock
fiadds
out
cmpb
shlb
lea
icebp
and
call
rep
out
inc
popa
push
push
push
xor
jle
sarb
pop
mov
adc
or
inc
leave
pop
mov
orl
or
push
movsb
cmpsb
stos
sub
std
pop
cli
loope
outsl
jle
mov
nop
imul
add
lock
or
test
cs
repnz
xor
dec
cmp
outsb
ds
push
xchg
ss
cmp
mov
scas
stos
out
insl
add
jb
jo
lcall
add
cmp
push
imul
sub
mov
addb
and
sub
sti
mov
adc
imull
cs
xor
mov
mov
push
loop
dec
scas
lods
add
jl
js
xlat
ljmp
push
pop
mov
cmp
pop
mov
and
cmp
pop
lcall
loopne
jmp
or
inc
add
fstpl
jg
add
loopne
sti
enter
iret
sahf
fiadds
or
adc
adc
test
rorl
jecxz
pop
mov
add
xor
inc
xor
xchg
add
inc
jb
and
jmp
out
dec
icebp
xchg
pop
into
jecxz
and
sahf
ds
sbb
sti
hlt
sub
xor
mov
mov
lock
push
jo
mov
fwait
adc
mov
fwait
hlt
mov
mov
mov
xor
js
lret
mov
xor
mov
sbb
mov
inc
push
push
dec
neg
dec
jl
orb
adc
xor
mov
xchg
cld
stos
pop
stos
mov
dec
inc
rorb
pushl
dec
out
pop
popa
xchg
or
scas
sti
ret
adc
sbb
and
mov
test
lea
mov
int
mov
mov
andl
test
iret
push
inc
inc
lock
xchg
xor
and
sbb
idivb
pop
fnstenv
sbb
out
aad
and
fcmovu
jge
push
jne
xor
dec
and
loop
out
mov
pop
lods
sahf
adc
jbe
mov
adc
pop
inc
mov
adc
dec
call
sarb
dec
dec
stos
xchg
push
out
mov
sarb
or
ljmp
jnp
jmp
inc
test
cmp
shll
jnp
xchg
inc
into
icebp
fldcw
mov
sbb
push
sub
pusha
pop
inc
fcomps
add
jmp
mov
sub
mov
ret
jmp
sbb
loopne
cmp
ror
add
xor
js
cmp
push
pop
pop
adc
add
addr16
data16
shr
sbb
ret
hlt
or
add
adc
sahf
xchg
ss
scas
xchg
xor
fmuls
das
cmp
lahf
pop
cmp
pushf
cmc
dec
jecxz
dec
mov
xor
daa
stc
cs
test
jg
inc
jmp
cmpsb
lahf
dec
push
push
mov
loop
mov
push
mov
fdivrs
add
ds
xchg
fnstenv
pop
jmp
test
jg
xchg
imul
push
cmp
inc
idivb
call
clc
pop
push
cmp
mov
arpl
sub
pcmpgtd
fdivs
push
movsl
lret
mov
dec
adc
iret
jle,pn
shll
lds
jecxz
push
inc
and
ja
sbb
jae
sbb
xchg
aaa
dec
fdivr
sbb
mov
cmp
pop
jl
or
leave
movsb
scas
call
mov
pop
sub
mov
sti
loop
mov
and
sbb
mov
push
les
push
mov
sub
adc
rclb
filds
xor
adc
sub
cmpsl
data16
xchg
or
sbb
loop
insb
jns
xlat
fnstcw
jnp
mov
call
sbb
mov
jge
mov
push
jmp
ficoms
xor
push
repz
sbb
aas
pop
jmp
sbb
adc
loopne
cs
cmp
stc
mov
mov
lcall
push
mov
int3
test
adc
jbe
push
xchg
sbb
add
add
lahf
fbstp
mov
inc
and
add
adc
push
mov
pusha
mov
cli
outsb
js
pop
popa
popa
test
push
imul
push
jo
fldt
lds
inc
mov
add
push
mov
jle
or
insb
test
fdivl
rcr
xchg
into
daa
sbbl
popa
adc
push
xchg
or
cmp
dec
jl
sbb
aam
xchg
sub
mov
sbb
test
mov
outsl
loopne
orl
pop
xor
faddl
cli
and
jle
js
or
dec
push
insl
sub
shlb
je
pop
sbb
mov
jle
add
push
loop
lock
es
pop
sti
or
je
add
test
rorb
shrb
jp
mov
sti
punpckhwd
sub
push
inc
push
xor
pop
fsubl
out
cs
fdivrl
jp
push
out
pop
insl
cltd
lret
inc
clc
ds
lock
push
daa
movsb
sub
aaa
arpl
pop
ret
cltd
bound
jo
push
lods
andb
call
in
ja
sti
pop
fwait
adc
call
les
pop
pusha
rolb
pop
or
xor
lods
loope
mov
sbb
xchg
push
sbb
pop
pop
sbb
mov
or
mov
clc
es
fistpl
cmp
and
mov
mov
iret
int
aas
push
mov
cmc
call
es
in
jne
paddb
cmp
mov
xchg
cmp
pusha
adc
add
cli
scas
add
mov
aaa
loop
add
inc
mov
inc
mov
inc
and
lods
and
or
outsl
ret
outsb
push
and
testl
lock
add
leave
jecxz
repz
aaa
add
cmc
scas
movsl
push
fsubrs
push
inc
dec
pop
pop
mov
push
dec
push
push
add
ret
or
add
mov
mov
jmp
int
jge
adc
push
lahf
mov
ficompl
xchg
stos
fs
add
sub
arpl
add
pop
push
nop
jecxz
fwait
xor
push
cmc
addl
insb
xchg
inc
ds
xor
mov
nop
xor
adc
adc
mov
fdivrl
cwtl
into
dec
stos
adc
jo
fwait
mov
inc
mov
push
push
loope
int
jl
mov
icebp
jle
adc
incl
jne
xchg
mov
inc
mov
fnsave
hlt
sbb
add
pop
cld
cmp
add
push
int
lds
cld
cmpsb
sub
sbb
mov
outsb
xlat
rcl
push
inc
mov
add
push
or
sub
push
ret
sbb
push
ja
or
cmpsl
mov
lods
xor
sub
jmp
mov
hlt
jle
push
jne
mov
popa
in
pop
in
cmc
xor
xor
and
aaa
pop
addr16
sahf
ret
dec
add
popf
lods
ret
cmp
rcrb
mov
lods
xchg
xchg
cmp
movsb
push
lods
mov
cmp
xor
lds
cltd
pop
loop
mov
add
jae
xor
pop
in
jecxz
loop
dec
mov
out
and
leave
inc
push
mov
ret
jl
adc
xchg
dec
jmp
insb
lock
fcmovnu
push
xchg
jle
jns
insb
js
dec
push
out
popa
mov
push
lock
sbb
pop
fucomp
pop
popf
xchg
xchg
cmp
pop
fnstcw
mov
mov
insb
xchg
ret
movsl
xchg
lcall
sub
pusha
xor
testl
mov
lds
sbb
xchg
addr16
pushf
xchg
cmp
and
psubb
push
push
xor
es
gs
testl
mov
movsb
or
fcomps
pop
or
adc
hlt
dec
jl
mov
and
lock
nop/reserved
xor
pushf
jl
xchg
and
xor
push
scas
rcrb
stos
inc
shlb
loope
out
inc
or
clc
mov
add
stos
add
daa
jle
rol
lret
outsl
loope
shlb
stc
outsl
fisubs
rcrb
mov
in
cmp
fildl
test
mov
bound
or
xor
enter
lcall
adcb
cwtl
add
sub
push
inc
push
mov
pop
out
mov
pusha
sub
out
cmpsl
shrb
jecxz
gs
push
dec
push
flds
adc
popa
mov
push
dec
aas
mov
lret
adc
test
mov
sub
sub
enter
mov
cmc
dec
repnz
test
mov
jmp
xor
inc
cmp
xchg
scas
jle
jmp
pop
jmp
popa
cltd
mov
add
dec
mov
adc
ja
mov
push
inc
mov
and
push
mov
movb
popl
mov
mov
out
scas
push
loope
clc
cmp
or
jmp
cmp
fsts
sub
add
out
cld
jo
out
cmpsb
add
fs
cmp
jo
lahf
pop
cmc
clc
into
out
mov
push
aaa
scas
or
push
dec
lock
shlb
in
psrld
stos
or
loopne
adc
and
fnstsw
mov
sub
inc
adc
adc
push
shr
sub
test
insb
lock
popf
in
push
out
ja
jo
popa
xchg
imul
mov
sbb
js
jns
ret
cs
jne
sub
sahf
aas
pusha
cmpsb
out
loope
out
lods
fcoms
jnp
pop
mov
sbb
fisubl
jnp
xchg
repnz
jmp
mov
adc
cli
xor
aam
mov
xchg
pop
clc
push
stos
pop
xor
inc
xchg
inc
xchg
js
fisubrl
mov
pop
fidivrs
add
movd
ret
adc
inc
ret
dec
int3
mov
pop
lcall
loopne
jge
stos
lahf
pop
jnp
mov
sbb
movsl
ficoms
loop
sbb
ljmp
loop
jl
arpl
sbb
add
arpl
lock
xchg
rorl
icebp
imul
rolb
pop
pop
insb
mov
test
fisttpll
mov
jl
in
sub
mov
xchg
aaa
pop
lds
repnz
dec
mov
enter
jno
adc
pusha
fidivrl
pop
cltd
loopne
in
jecxz
cmp
xchg
movsb
je
adc
daa
add
sbb
test
cld
cli
sbb
or
hlt
or
ja
ljmp
scas
roll
out
sbb
xchg
xchg
imul
pop
incl
dec
rolb
add
ret
bnd
inc
or
xor
sub
insb
xor
mov
pop
hlt
call
mov
add
sahf
push
mov
mov
sub
es
inc
mov
ret
mov
dec
scas
cmc
mov
adc
scas
mov
adc
gs
cmp
add
addr16
outsl
cmpl
rclb
and
mov
sbb
leave
icebp
lahf
cmpsb
lahf
dec
dec
jl
cmp
aaa
adc
mov
dec
stos
push
fdivl
xchg
das
pop
arpl
icebp
and
xchg
mov
adc
cmpsb
out
rcrb
adcl
arpl
or
dec
mov
clc
into
dec
aam
jb
mov
es
andb
cmpsb
push
icebp
fdivl
les
jp
aas
push
clc
xchg
pop
jp
mov
js
int
mov
sahf
lock
ds
sub
push
rorb
xlat
or
xchg
outsb
mov
lret
mov
mov
mov
mov
lret
cmc
les
push
pop
movsb
divl
mov
and
loopne
enter
cli
inc
pop
jmp
push
inc
push
stos
arpl
xchg
pop
sbb
subb
xor
cmc
inc
bnd
push
add
subb
lret
lods
xor
fldl
stos
mov
mov
jne
loopne,pt
push
fs
xchg
push
je
cli
stos
mov
or
pop
imul
out
mov
push
mov
negl
push
clc
mov
cmc
dec
ffreep
clc
adc
and
mov
and
adc
pcmpeqd
add
fwait
mov
test
jmp
push
xchg
jecxz
cmpsb
sub
jb
push
xchg
jns
outsl
mov
stos
lods
mov
cld
and
mov
andl
fsubrs
lods
aam
outsb
inc
xchg
aaa
shlb
jo
inc
orb
fiadds
pop
paddb
lea
out
lret
mov
icebp
cmp
push
loop
mov
lea
sbb
enter
inc
aaa
jns
xor
ljmp
cltd
push
loope
popl
and
dec
mov
pop
movsb
rolb
ja
xor
pop
jne
inc
outsb
sub
mov
jg
shlb
ja
pop
clc
mov
and
pop
int
or
lahf
nop
mov
mov
mov
cwtl
adc
cmpsl
rclb
xchg
sarl
or
and
mov
inc
jnp
fs
out
sti
ds
add
fimuls
push
mov
mov
fdivrl
fidivs
jle
sub
pop
mov
je
sarb
out
pop
imul
adc
sub
xchg
push
add
jp
das
mov
inc
sbb
mov
jb
vcvttss2si
and
sbb
movsb
mov
mov
mov
xor
xchg
hlt
xorb
cmp
mov
lcall
mov
sbb
sbb
lcall
addr16
mov
xor
leave
push
ss
test
es
sub
dec
dec
sbb
clc
loop
pop
cmpsb
rep
cli
daa
clc
mov
out
popf
add
stos
jno
jno
jno
lock
cld
stos
mov
sbb
xor
mov
mov
loope
lcall
test
push
repz
add
dec
xchg
jge
fwait
and
xor
jo
sbb
int
outsb
adc
or
shrl
sar
mov
loopne
or
jg
scas
adc
nop
loop
subb
mov
cmp
or
lret
mov
and
or
sub
shlb
pop
pop
sti
es
sbb
mov
rcrl
push
hlt
push
mul
inc
push
sahf
inc
aas
hlt
inc
sti
jne
mov
mov
cmp
xor
xchg
inc
clc
in
hlt
scas
dec
xor
fnstsw
popf
dec
insl
test
jae
sbb
movb
hlt
rcrl
out
shrl
or
push
pop
in
dec
fistps
push
inc
xchg
mov
push
scas
das
icebp
dec
pop
arpl
insb
pop
ja
dec
mov
pop
das
cmpsl
mov
loope
mov
xchg
and
cwtl
stos
setno
push
xor
enter
or
xchg
add
scas
shrb
xor
mov
inc
add
sub
mov
inc
jecxz
dec
mov
push
inc
mov
ret
mov
xor
scas
sub
ss
xchg
clc
idivl
jl
add
sti
arpl
rorb
and
je
popa
movsb
add
loop
mov
pop
cli
cmp
add
jp
jae
push
mov
inc
dec
out
adc
xor
and
cmp
sub
and
loopne
cmp
movsb
inc
sbb
fsubrs
icebp
pop
aas
dec
xchg
push
mov
mov
cmp
cmc
jmp
leave
stos
sbb
lods
and
punpckldq
jbe
aaa
pusha
and
mov
jo
popa
fbstp
mov
dec
testb
pop
mov
in
or
cmp
dec
mov
jge
sub
test
test
addb
inc
inc
push
push
xchg
test
cmp
jl
jns
xor
movaps
call
daa
and
stc
inc
addr16
adc
lds
push
push
sbb
mov
jp
mov
xchg
pop
add
loop
xchg
dec
pop
xchg
addr16
add
xchg
test
fwait
xchg
les
inc
sub
and
cltd
sbb
ds
aas
pop
sti
jmp
push
bound
sub
add
xchg
mov
sbb
rorb
dec
mov
out
xor
cmp
iret
push
fistps
iret
loop
jmp
out
pop
add
or
std
ljmp
sbb
test
ret
push
dec
mov
mov
push
jo
aad
and
std
loop
xchg
mov
out
sbb
xchg
mov
clc
push
xchg
or
icebp
inc
test
inc
cli
icebp
inc
stos
out
ja
inc
push
pushl
pop
pushf
dec
cmp
dec
push
jo
imul
push
test
or
aas
lods
jl
popa
icebp
sub
jno
jle
loop
in
stos
stos
push
std
sbb
cmp
das
push
icebp
icebp
test
aas
xchg
lahf
pop
fld
lods
and
gs
or
nop
cmpsl
punpckhdq
add
les
ja
inc
mov
in
fimuls
adc
mov
cli
test
pop
add
xor
stc
je
or
enter
cld
test
sbb
repz
jbe
sub
bound
mov
mov
enter
mov
mov
mov
xor
or
xchg
hlt
or
iret
mov
cmpsl
fmuls
lods
lock
jle
ret
mov
pusha
test
add
sbb
test
push
mov
icebp
adc
shrb
jbe
sub
movsb
mov
inc
pop
and
dec
addr16
fadds
daa
or
decl
out
xchg
sub
leave
mov
repnz
add
bound
or
adc
shll
adc
jmp
aam
sti
rcrl
lret
pushw
pop
ret
mov
call
insb
nop
scas
push
scas
mov
rolb
popf
xchg
adc
ljmp
cmp
sbb
push
cmpsb
jg
dec
cwtl
adc
inc
push
aam
popa
insb
cld
push
lds
or
imul
rcrb
data16
rol
sbb
ljmp
testl
nop
dec
xchg
insb
mov
cmpsl
sbb
clc
mov
xchg
rcrl
and
cmp
add
aad
addr16
stos
cmp
sbb
and
jo
sub
xchg
test
add
sub
jl
sub
pop
push
incb
mov
cmovge
lret
loopne
pop
and
xchg
lret
adcl
mov
cmpsl
cltd
add
adc
imul
add
pusha
mov
mov
loop
sbb
imull
fs
or
mov
ret
pop
sbb
mov
cs
popa
inc
bound
xchg
icebp
inc
shrb
pusha
push
mov
ss
xchg
mov
sub
bound
mov
in
sub
test
mov
int
xor
nop
fsubl
add
insb
fsub
sub
cmp
cmp
enter
sbb
cmp
ret
into
jl
into
mov
xchg
jge
mov
aad
add
push
fwait
dec
sub
mov
fists
xor
rolb
popa
xchg
je
shr
jecxz
cmpsb
sub
mov
xchg
aaa
sbbl
mov
sub
je
sub
lds
lcall
or
shlb
inc
psadbw
or
int
adc
xchg
mov
call
mov
adc
mov
popa
mov
xor
sub
add
sbb
xchg
arpl
filds
gs
cmpsb
xchg
ficompl
cmp
or
xor
outsb
cmpsl
cmp
sub
pop
call
enter
cmp
or
decl
imul
pop
push
sbb
lcall
in
sub
mov
push
add
aad
lock
xlat
clc
xchg
pop
imul
out
in
out
mov
ds
mov
cmp
pop
xor
out
popf
push
xlat
adc
pop
or
into
pop
push
push
inc
ljmp
mov
ljmp
test
add
xchg
cmpsl
inc
sbb
das
std
push
lock
xchg
cld
fsub
dec
xchg
jge
insl
sti
rcrl
cmp
leave
adc
xor
xor
lock
cmpsb
xor
jne
mov
lea
movsb
mov
or
cmc
popa
inc
or
mov
fcompl
cmp
in
orb
orl
xchg
js
rorb
dec
repnz
xor
cli
ret
inc
xor
xchg
push
add
sbb
push
xchg
cmpsl
orb
es
fnstsw
outsb
push
jle
add
add
jge
mov
xchg
add
mov
push
ja
cmp
xchg
pop
pop
mov
sti
adc
push
sbb
jbe
mov
sub
mov
adc
jle
jp
mov
ret
shll
gs
or
push
inc
mov
push
fmuls
sbb
push
sub
pop
jnp
cmpl
aas
sub
mov
dec
dec
pusha
jno
in
xor
cs
les
cmpsl
inc
outsb
or
insb
shrb
xchg
mov
sbb
sbb
lcall
fsubrp
or
mov
jecxz
out
sbb
mov
sbb
jmp
pop
in
push
into
popa
sbb
push
dec
inc
jl
and
out
rolb
rclb
fsub
xlat
jo
addb
pushf
mov
movsb
js
mov
mov
and
pop
cltd
cs
sub
aas
lock
jle
adc
je
and
loop
jl
pop
jle
and
pop
mov
aaa
mov
dec
aad
sbb
andb
mov
inc
inc
test
xlat
add
in
lods
ja
or
loope
jl
jo
pop
loope
inc
imulb
es
or
mov
cld
pop
mov
loop
rolb
cmp
stos
shrl
inc
pop
lock
add
inc
adc
adc
pop
mov
mov
pop
mov
lods
call
loop
push
push
xlat
jmp
out
jmp
push
stc
das
nop
add
mov
ss
decb
xchg
sub
je
xor
lea
pop
sbb
jo
push
sbbl
daa
notl
xor
cmp
lods
xchg
add
mov
roll
jl
add
xchg
xchg
push
std
or
xchg
mov
ret
pop
idivb
cmp
push
std
cmpsb
push
sti
or
mov
sbb
or
push
mov
mov
adc
cmp
add
sbb
outsb
and
insb
mov
hlt
and
push
hlt
call
cmp
push
xchg
sub
ret
jnp
cmp
dec
in
add
mov
dec
inc
lock
les
das
movsb
pop
es
faddp
dec
inc
inc
mov
jle
and
aad
dec
inc
fdivl
mov
xor
xor
push
adc
xor
sahf
push
xchg
and
push
cld
jmp
cmpb
pop
insb
jbe
cld
xchg
lds
xchg
jae
mov
mov
hlt
mov
and
xor
mov
sub
loope
push
pop
sbb
and
sarl
shll
outsb
lds
loope
in
sub
jo
xchg
sub
movb
push
pmaxub
mov
dec
cmp
push
jp
mov
adc
jmp
cmpsb
sbb
imul
pop
adc
ret
fwait
clc
inc
inc
std
dec
sub
imul
mov
dec
ja
cmc
pop
jbe
dec
in
mov
cmp
sbb
pop
scas
inc
push
insb
call
xchg
lahf
dec
clc
adcl
lods
push
out
mov
push
in
inc
lds
test
mov
jp
call
add
aad
fdiv
adc
pop
mov
test
std
aad
das
pop
mov
mov
ret
fwait
shrl
push
enter
ss
pop
mov
fsubrl
xchg
lock
dec
cmp
call
lahf
jle
fdivrl
pop
jl
cli
push
sbb
pushf
sbb
or
adc
loop
lock
jle
stos
adc
jecxz
les
inc
stos
mov
ret
mov
arpl
ja
filds
cmp
lcall
pop
inc
test
or
ret
lret
decb
mov
clc
mov
ret
sbb
nop
jbe
push
shrb
stc
sbb
or
push
aas
cwtl
js
mov
mov
push
inc
push
shl
in
push
in
sbb
lret
add
ficompl
cmp
das
push
fadd
inc
dec
cwtl
lods
mov
xchg
movsb
adc
insl
pop
pop
stc
andb
dec
pop
xor
sbb
sbbb
pop
stc
dec
mov
sbb
fs
cs
xchg
sbb
data16
insl
pop
outsb
mov
or
inc
or
pop
sub
mov
add
ljmp
mov
lea
loope
push
cltd
adc
clc
inc
or
ds
mov
xor
and
test
scas
mov
fdivl
mov
jge
aaa
pop
int
jae
lret
in
add
insb
lret
test
int
daa
push
sub
repz
xchg
adc
xor
pop
lods
cs
popf
outsl
and
dec
add
pop
inc
movb
lea
add
and
imul
loop
mov
or
inc
inc
cld
sbb
add
iret
push
xchg
or
sbb
fadd
dec
jg
xor
scas
pop
mov
cmp
mov
fwait
jo
aaa
insl
fsubrl
xchg
jmp
push
push
sub
push
lods
gs
mov
jp
add
into
sbb
sbb
lods
inc
dec
add
fcomps
mov
mov
sbb
xor
lods
mov
jb
inc
stos
icebp
or
in
mov
cmc
mov
mov
jb
popl
or
dec
aam
inc
and
outsl
inc
bound
jnp
push
cmp
sbb
ljmpw
mov
mov
jns
inc
shll
sbb
iret
add
cmp
jb
jne
movb
mov
test
push
xchg
add
js
adc
jp
mov
icebp
pop
and
lcall
lods
popl
xchg
scas
rorl
pusha
ljmp
rol
cmc
daa
lahf
push
loopne
les
clc
mov
xchg
add
sub
enter
mov
jecxz
rclb
in
xchg
nop
mov
ret
mov
pop
fimuls
jmp
mov
add
xchg
xchg
hlt
jmp
popa
daa
clc
xchg
rcrb
xor
mov
pop
dec
push
sahf
orl
cmp
push
cmp
or
cmpsl
sti
mov
fstpt
call
mov
push
push
into
pop
push
mov
frstor
adc
cli
fildll
hlt
dec
or
fldcw
sbbl
sbb
jmp
mov
fnsave
inc
fmull
cmp
add
push
xor
mov
in
je
mov
dec
fsubrl
std
and
sub
and
out
pushf
sub
cmc
out
loop
jo
mov
dec
jge
xchg
pop
pextrw
mov
xor
jge
push
stos
lds
cmp
sbb
sahf
push
hlt
xlat
ljmp
mov
inc
xor
das
sbb
cmc
rolb
sbb
jne
jge
les
rcl
sbbb
outsb
rolb
lods
cwtl
fdivrs
ljmp
push
add
or
sub
xchg
jg
sbb
dec
jle
add
inc
js
shlb
movsb
jbe
sbb
jo
adc
dec
ret
ss
rcrl
es
std
jle
inc
pop
shufps
mov
jne
inc
bound
mov
dec
cmpsl
push
into
jge
pop
outsl
sarl
scas
out
sbb
sbb
xchg
or
mov
ja
adc
add
mov
cmp
push
mov
fildll
sbb
fiaddl
mov
inc
mov
mov
mov
push
dec
inc
mov
adc
adc
loopne
imul
mov
cmp
mov
xor
inc
andb
cmp
mov
lods
adc
or
ja
andnps
dec
cmp
xorl
fdivrl
pop
lret
aas
insl
pop
push
add
lock
xor
push
cltd
push
mov
clc
inc
inc
imul
scas
cmpsb
or
dec
jo
mov
jge
loopne
fildll
or
loopne
sbb
je
mov
adc
das
xor
push
or
mov
clc
ret
stc
push
lods
mov
ret
cld
test
dec
loopne
push
xor
inc
cmp
nop
pop
push
mov
ret
stos
subb
xor
pop
lcall
stos
mov
mov
xlat
jecxz
mov
push
call
cli
xchg
or
jl
push
pop
out
lods
rorl
lods
inc
scas
xor
cmpl
push
loopne
in
leave
sub
or
cmp
rorb
jo
mov
push
clc
add
push
mov
mov
nop
mov
and
and
lea
cmp
jg
int
aaa
dec
fwait
inc
pop
cld
loope
mov
es
addl
nop
stos
hlt
mov
mov
mov
scas
or
pushf
add
sub
scas
sbbl
mov
and
sbbl
repz
sti
fiaddl
cmp
lcall
fsubrl
xor
cld
ds
push
push
pop
dec
fstp
sbb
das
sbb
rcrl
add
mulb
sbb
cli
enter
clc
sbb
mov
lock
fwait
add
test
mov
xchg
dec
xchg
sbb
jae
ficompl
popa
xor
push
push
mov
add
or
loopne
aad
cmpsl
sahf
push
push
test
xor
and
mov
aaa
sbb
shlb
inc
xlat
rorl
push
js
adc
xorb
gs
xor
rcl
add
push
scas
outsb
mov
sub
push
jo
add
aad
mov
je
movsl
clc
xchg
jle
stos
outsb
cmp
ljmp
js
pop
xor
add
mov
adc
inc
mov
xchg
lock
and
pusha
rcll
into
or
inc
dec
sub
pushf
mov
iret
rolb
mov
adc
js
cmc
pop
ss
js
sbb
inc
pop
cld
shll
bound
mov
xchg
push
sbb
aam
ret
cli
in
enter
pop
mov
add
ljmp
iret
rorl
leave
xchg
xchg
inc
add
inc
inc
shrl
sbb
adc
adc
jle
ja
pop
lock
enter
and
fdiv
sbb
jmp
or
xorb
xor
lock
push
inc
fs
jbe
inc
sbbl
movsl
adc
pop
pop
ror
push
xchg
and
sbb
pop
pop
aam
mov
lods
pushf
push
pop
add
test
inc
out
sub
sar
xor
jne
xor
fsubl
clc
ret
jnp
sbb
shrb
adc
xor
es
dec
mov
stos
add
idivl
pushf
lock
outsl
test
mov
sub
jne
js
mov
popf
call
sbb
adc
cmp
mov
test
lea
push
mov
mov
pushf
xchg
dec
and
push
mov
shl
inc
pop
push
fisttpll
push
xorl
add
mov
sti
mov
and
cli
adc
and
sub
out
pop
or
shrb
leave
xchg
cli
hlt
adc
fildll
add
fcomp
cmp
pop
mov
pop
int3
dec
mov
push
ret
push
add
lret
les
out
or
fsubrl
sbb
inc
inc
push
subl
fdivs
jp
jns
xchg
jb
sub
in
hlt
sbb
in
aad
dec
or
jb
fs
sbb
xorl
shll
je
int3
out
out
mov
dec
jmp
xor
rcrl
xor
fcoms
pop
cmp
testb
push
fmull
call
mov
or
xor
jle
clc
pop
mov
add
and
push
sbb
mov
xor
inc
mov
pop
jecxz
sub
jp
inc
xlat
loop
pop
ret
lea
out
push
jle
fidivrs
dec
xchg
cmc
mov
rcpps
pusha
xlat
xchg
test
hlt
cmp
in
mov
in
pop
push
mov
jo
stos
push
add
mov
inc
call
sub
mov
jmp
sub
push
sub
xchg
jmp
daa
rcr
aad
pushf
sbb
or
loop
jno
xor
out
nop
xchg
adc
pop
ficomps
sbb
pop
adc
fisubrs
in
test
xchg
leave
pop
sub
mov
or
enter
in
lret
sbb
sbb
cmpsb
repz
das
dec
mov
xchg
and
add
arpl
sub
cwtl
pop
pop
cmc
dec
push
add
pop
outsb
jl
add
dec
aam
jl
test
adc
pop
pop
jb
jp
jo
xchg
mov
mov
lods
sahf
adc
pop
inc
xchg
int3
push
adc
sbb
mov
inc
add
jne
lock
cmpsl
movlps
fs
incb
cs
gs
sahf
fcom
rol
inc
ja
out
pop
mov
ljmp
add
imul
enter
out
gs
fwait
stos
insl
test
push
xor
adc
adcb
mov
pop
movsl
mov
adc
jb
cmp
outsl
jbe
adc
adc
in
pop
push
sbb
loopne
mov
jno
popl
cld
roll
cmp
in
push
aaa
sbb
inc
jecxz
jmp
mov
or
pop
or
hlt
or
sbb
outsl
cmp
mov
xchg
int
fwait
sub
sub
jle
pop
mov
jl
push
int
rclb
ss
cmp
push
jo
add
push
cmpsb
add
imul
lock
jmp
pop
cmc
add
xor
lret
hlt
push
daa
icebp
jo
das
adc
scas
xor
push
into
xor
inc
push
mov
movsl
lahf
pushl
mov
pop
lea
loopne
repz
xor
loopne
pop
test
sbb
dec
inc
lods
clc
and
das
jle
cmp
xchg
js
pop
sbb
loopne
mov
repz
dec
cmpsl
dec
jl
adc
add
xor
mov
adc
add
mov
pop
xor
cli
rorb
add
jb
aaa
call
pop
je
in
fdivrl
xorl
ret
dec
xor
inc
cmp
sub
sub
mov
addb
lods
cmp
add
mov
pop
cli
cmp
jg
sbb
mov
in
shlb
mov
cmpl
cmp
add
push
sbb
repz
fiadds
loop
in
cmp
fnstsw
gs
xor
cmp
mov
leave
push
aaa
ret
in
dec
jl
aam
bnd
sahf
push
cmp
shll
dec
mov
sbb
sbb
mov
loopne
xor
pop
and
or
dec
jno
shrb
bnd
je
arpl
jle
or
out
ret
jno
mov
aas
repz
bound
sahf
push
ss
movb
sub
jle
mov
imul
rolb
inc
in
xor
int
sub
xlat
mov
xor
jmp
xchg
add
fcoml
jle
xor
push
jmp
sti
inc
cmp
insb
dec
hlt
xor
lods
cmpb
and
scas
and
inc
ret
popa
xor
ljmp
or
dec
and
enter
jo
test
push
std
mov
push
lcall
xor
push
add
hlt
xlat
mov
cmp
sub
mov
test
sahf
jo
stos
out
loopne
mov
outsb
ret
xchg
ret
mov
add
aam
ret
jne
call
or
xchg
lods
je
cmp
negl
jns
or
scas
out
andl
cmpsl
cwtl
insb
cmc
imul
adc
sub
inc
outsl
js
xchg
inc
icebp
in
adc
sbb
jmp
cwtl
shrb
and
lock
notb
mov
or
push
or
loopne
clc
pop
xor
xor
jecxz
add
xchg
sahf
test
mov
pop
lret
js
lahf
out
sub
mov
lods
dec
orl
inc
xchg
sub
dec
or
push
out
addl
mov
in
sbbl
insb
in
clc
jbe
es
sahf
push
stc
pop
jns
fnstenv
inc
das
ss
lcall
out
dec
or
pop
dec
fwait
pop
mov
dec
cld
push
jno
dec
ret
mov
inc
xor
xor
insb
arpl
rorl
dec
adc
pop
mov
xchg
test
ljmp
iret
ds
aad
loope
orl
mov
sub
push
cmp
sbb
inc
rclb
aas
cmpl
cmp
and
daa
addb
and
add
clc
inc
add
clc
hlt
add
dec
nop
mov
aaa
fistl
cs
lds
ljmp
xchg
cs
or
pop
cmp
pop
push
pop
std
cs
icebp
inc
inc
sbb
js
loopne
gs
mov
sahf
mov
daa
mov
pop
pop
inc
shrb
mov
cld
sbb
pop
add
outsb
add
je
xchg
sbb
mov
in
push
push
push
subl
ror
mov
std
outsb
mov
call
insl
mov
cld
push
adc
and
int
lods
xor
repnz
leave
fidivl
mov
cmp
insl
dec
out
imul
jbe
add
aad
andl
scas
dec
adc
test
and
pop
addr16
test
sbb
cmp
hlt
xor
test
sahf
sub
mov
loopne
mov
or
push
pop
int3
lods
add
sbb
sbb
pop
jnp
aaa
aaa
jae
sub
add
jl
and
mov
cmc
mov
sub
dec
pop
fiadds
bound
mov
data16
adc
lods
xchg
cli
ljmp
cmp
pop
add
add
inc
pop
mov
clc
dec
jmp
fsubl
das
and
call
mov
cltd
call
lahf
add
insl
dec
xchg
test
adc
pop
nop
rcrb
sub
data16
hlt
pop
jle
jmp
adc
outsb
test
sti
dec
iret
inc
jno
fnstcw
cmp
xchg
shlb
push
add
or
fsubrl
push
fists
cmp
lret
aas
sbbb
xor
test
cmc
dec
outsb
mov
and
lock
pushl
mov
int3
push
or
addb
inc
daa
popa
adc
scas
pop
adc
dec
sbb
sub
pop
lods
adc
cs
inc
rcrb
cmp
mov
xchg
aam
jle
add
dec
push
pop
cmp
cltd
adc
mov
pop
mov
call
and
subl
ret
repz
decl
pop
push
adcl
add
fstpl
sbb
push
loopne
mov
mov
fucomp
fs
lea
sbb
rcll
mov
mov
cmp
or
lret
cmpps
sbb
fistpll
cli
xchg
loop
adc
dec
data16
xchg
repnz
xor
daa
imulb
mov
pop
clc
mov
lcall
sarl
ficoms
mov
mov
hlt
inc
pop
xor
scas
or
jo
ja
scas
les
cmp
int3
mov
lods
je
nop
or
pop
mov
or
xchg
push
lds
scas
mov
insl
shll
pop
call
imul
stos
push
outsb
in
das
aam
insl
loopne
jne
inc
scas
into
push
scas
adcb
loop
cmc
mov
scas
popa
inc
pop
mov
add
push
jae
add
insb
pop
mov
add
pop
clc
mull
push
push
push
js
decl
adc
push
cwtl
pushf
cmp
das
pop
loopne
or
or
sub
call
xor
jl
mov
or
nop
add
inc
cmp
cmp
jo
cmpsb
mov
aad
mov
cmp
lock
mov
scas
xchg
ret
shl
in
jmp
adc
cmpsl
loop
mov
adc
sbb
inc
add
inc
pop
add
add
icebp
or
stos
push
daa
sub
sbb
push
adc
loopw
loopne
cmpxchg
les
or
mov
hlt
mov
mov
mov
insb
je
cmp
or
adc
test
enter
test
push
add
or
jg
outsl
add
ss
jp
mov
mov
shlb
stos
decb
cld
movsl
and
xor
mov
sub
cmpsl
shll
sbb
jl,pn
jbe
gs
jns
push
mov
sbb
xchg
cmc
rcrb
cmpsb
mov
addb
mov
mov
rcrb
xchg
mov
dec
mov
adc
jo
ret
sbb
push
pop
std
push
in
das
xor
or
rorl
mov
cmp
inc
mov
jp
cmc
xchg
mov
push
add
xor
or
int
mov
or
roll
add
mov
jbe
cs
hlt
shll
movsb
setns
inc
ljmp
add
cmp
cmp
add
or
pop
test
adc
and
and
mov
and
out
setg
jno
aaa
test
or
xlat
out
iret
movl
and
out
test
out
add
sbb
pop
jo
xchg
stos
dec
mov
jg
push
dec
xchg
add
mov
jge
cmpsb
pop
cmp
xchg
shlb
enter
pop
lea
inc
xor
loopne
mov
leave
pop
push
lcall
xchg
jmp
sbb
ret
repnz
and
pop
cmc
orb
adc
dec
addr16
filds
sbb
xchg
sbb
repnz
jle
xor
xor
sub
dec
cmc
cmpsb
push
pop
scas
out
pop
jo
ss
iret
push
aas
call
test
jbe
cmp
fildl
inc
and
push
dec
lods
data16
loop
mov
mov
std
jo
rcrl
outsb
mov
rorb
inc
xchg
aaa
adc
stos
insb
scas
xor
mov
fsubrp
adc
inc
aam
cmc
cwtl
or
jp
xchg
arpl
shld
push
mov
cmpb
idivb
loopne
movsb
mov
mov
cs
daa
scas
je
pushf
jbe
inc
les
xor
dec
sub
aam
inc
sub
jecxz
sbb
xchg
mov
roll
jge
cmp
mov
push
aaa
jne
cmpsl
repnz
mov
fistpll
aas
mov
test
and
xor
sbb
sub
negb
xor
xor
rcr
or
push
ja
ja
andb
push
pusha
mov
lret
jge
sti
cwtl
fs
fucom
mov
filds
pushf
std
movsb
pop
ss
sbb
add
fsubl
test
hlt
xchg
ret
push
sub
mull
or
ret
sbb
mov
mov
int
mov
push
pop
xor
mov
mov
mov
xor
stos
xor
shl
jl
push
mov
push
add
xchg
dec
dec
imul
xchg
lods
cli
cmp
mov
cs
mov
push
push
or
iret
out
stos
xor
repz
std
sar
push
imul
ja
addb
bound
scas
nop
ficoml
call
or
popa
sub
sahf
add
insl
sub
sbb
fsub
inc
mov
add
test
imul
movsb
xchg
dec
mov
pop
mov
cwtl
sub
inc
cmp
rorb
fwait
inc
add
je
xchg
mov
dec
push
push
add
mov
icebp
sub
and
inc
gs
sahf
or
outsb
cmp
jle
or
lahf
ret
push
sub
jecxz
ds
scas
shrb
xor
sbbl
xor
loop
push
inc
pushf
inc
xchg
push
cmpsb
rclb
int
or
lret
js
xor
push
fnstcw
test
adc
add
add
pop
test
dec
push
and
sahf
xlat
rol
and
cwtl
add
adc
andl
pusha
je
fcoml
add
dec
imul
xor
mov
jbe
and
ret
iret
push
pop
mov
and
mov
test
mov
adc
push
jo
mov
outsb
sbb
int3
xor
jl
movsl
or
mov
js,pt
jae
cmpsl
adc
cs
daa
mov
test
inc
pop
sbb
sub
or
mov
mov
pusha
cltd
mov
data16
incb
popa
fsubrp
xchg
pop
jnp
js
shlb
adc
add
jle
inc
repz
cltd
cld
lock
shlb
inc
sbb
cmp
lock
into
daa
inc
lcall
jbe
jmp
cwtl
push
nop
sbb
mov
daa
add
or
out
pop
xchg
or
out
and
adc
std
call
add
fldl
xchg
fldenv
outsl
mov
mov
repz
xor
pusha
fcmovnu
ljmp
imul
loopne
stos
mov
jge
scas
shl
inc
test
xchg
sbb
jne
stos
xlat
mov
jge
push
pop
jo
mov
subl
in
pushl
mov
mov
adc
aas
hlt
stos
cmpsb
add
aam
loope
arpl
push
test
xor
xorb
inc
cmp
lock
cmc
popa
sti
fistpll
mov
or
lds
in
clc
ds
add
sbbl
push
mov
and
jl
jns
fdivs
shlb
repnz
fst
call
push
or
inc
and
xchg
adcb
test
xorl
jg,pt
stos
jb
aaa
dec
movsb
pop
push
push
cmp
popl
mov
fwait
push
xor
outsb
arpl
cmp
test
test
inc
imul
pusha
ret
dec
je
lahf
sub
call
xchg
int
push
push
hlt
sbb
push
and
ljmp
pop
pop
into
cmp
mov
out
sbb
push
mov
cmp
lea
insl
insl
nop
sub
jns
xchg
fisttpll
mov
shlb
push
lret
mov
mov
and
stos
inc
jecxz
loope
cltd
pop
inc
out
sbb
cld
push
in
cmp
scas
shll
mov
in
lods
mov
out
mov
fcmovb
or
sbb
jno
dec
inc
dec
pop
sahf
fwait
imul
or
sbb
repnz
fstl
nopl
lahf
jb
adc
mov
mov
movl
fistl
mov
jl
out
flds
stc
fidivrl
sub
jge
aas
mov
xchg
test
mov
adc
sti
je
cmpsl
dec
add
and
mov
push
mov
dec
and
adc
loop
xchg
scas
push
rcrl
jle
push
movsl
jno
push
es
mov
push
repnz
jo
add
inc
pop
dec
sahf
cwtl
adc
cs
jno
and
cmp
aaa
aas
cli
pop
xor
das
mov
out
adc
cld
data16
icebp
sub
in
xor
gs
jb
xchg
push
sub
bound
das
mov
dec
adc
mov
mov
int3
out
mov
dec
add
test
repnz
push
add
lds
sub
mov
inc
push
xor
inc
xchg
stos
jne
pop
cmp
stos
sub
loop
mov
mov
push
sub
sub
jb
mov
jns
mov
add
movsl
jge
jae
cmp
and
ret
lods
sahf
push
sub
mov
and
fwait
dec
sbb
enter
xor
aad
pusha
sub
jp
jecxz
incl
mov
fdivrl
adc
add
pop
scas
fwait
pop
test
jae
push
xor
iret
fcoms
dec
scas
adc
loope
cmp
loope
adc
push
aas
lcall
arpl
mov
mov
nop
push
insl
inc
sub
xor
xchg
push
stos
aad
decb
jbe
or
mov
jecxz
sub
jne
push
lods
or
cmpb
xor
in
mov
fidivrs
inc
sub
xchg
mov
sub
insb
mov
pusha
cmp
dec
clc
pushf
aad
je
sti
cmc
sbb
cmc
jle
or
fisubs
addb
adc
ss
hlt
fdivrl
adc
add
add
mov
sbb
mov
add
push
ret
sbb
ljmp
inc
jne
or
leave
insb
sub
jmp
push
dec
iret
cld
cmp
test
mov
fwait
lahf
and
or
push
sbb
or
or
cmp
js
add
mov
gs
cmc
pop
mov
lods
das
or
jno
add
jae
sub
stos
dec
xor
fcomps
pop
and
cmovno
lods
sti
leave
inc
je
inc
xor
scas
out
arpl
aam
mov
fcmovnu
adc
lods
insb
xor
mov
mov
jae
xchg
push
ds
ficomps
ss
mov
xchg
or
sub
clc
add
addl
mov
test
cmpsb
outsl
cli
arpl
loop
test
pop
loopne
adc
xchg
adc
mov
leave
cmp
xor
and
add
fsubs
enter
pusha
push
cwtl
mov
cmp
mov
cmp
pop
pop
push
mov
push
jle
loop
sbb
js
add
xor
jmp
andb
imul
pusha
mov
daa
or
push
int3
imul
bound
loop
imul
push
lds
lret
add
or
or
cs
js
inc
movsl
stc
fldenv
test
mov
mov
sbb
jp
pop
unpckhps
mov
cmp
imul
pop
add
jae
jno
test
ss
fstpt
cmpb
inc
mov
mov
nop
movsb
mov
push
or
sbb
dec
push
call
sbb
add
sbb
dec
ret
inc
hlt
jecxz
cmp
gs
add
cld
je
mov
push
add
pop
lock
cwtl
addps
push
push
add
mov
or
fildl
push
add
xor
xchg
inc
ss
sub
add
mov
cs
xor
push
lock
dec
sarb
cmpsb
add
dec
cltd
stos
add
test
cmp
cli
movhps
std
clc
jmp
fisttps
pshufw
jp
jbe
bound
xor
mov
and
pop
inc
aam
lret
clc
mov
pop
cmp
mul
jg
or
repnz
ds
pusha
fcom
test
inc
lea
add
mov
and
notb
arpl
pop
cwtl
int3
adc
pop
movsb
mov
or
inc
xor
cmpsb
rcrl
and
nop
aas
cmp
xor
js
push
add
rorb
orl
adc
das
sbb
dec
mov
movsb
iret
in
add
push
pusha
adc
sub
fs
jno
pop
adc
adc
in
out
inc
jge
sub
je
loopne
dec
adc
xlat
pop
lret
int3
mov
mov
jp
imul
mov
fstpt
in
adc
pop
fisubrs
lcall
loop
rcl
add
aas
enter
inc
nop
mov
sahf
int
fs
jns
inc
loop
push
imul
mov
xor
mul
data16
inc
mov
test
push
adc
icebp
cmp
dec
test
jecxz
xchg
daa
jl
cmpsl
hlt
fdiv
mov
pop
jne
xor
aas
sbb
dec
movsb
jo
cmp
push
adc
lret
movsb
cmp
pushf
aam
pop
jno
insb
addl
repnz
xchg
or
sub
add
lahf
inc
pushf
mov
pop
outsb
add
std
pop
addb
pop
std
push
js
pusha
cld
popa
or
and
sbb
cli
loopne
test
scas
or
out
out
xor
jl
cld
subb
push
add
xor
and
fldl
subb
adc
inc
shlb
jmp
scas
jp
mov
popa
imull
adc
sar
cmp
xchg
jle
ret
jne
add
jo
sub
push
mov
mov
cld
rorl
inc
lds
and
out
imul
arpl
sbbb
inc
sbbb
sub
test
push
push
mov
inc
inc
mov
notb
repnz
or
or
sbb
xor
sub
les
push
xchg
lret
out
sub
test
pop
inc
cmp
out
mov
mov
and
lock
xor
ret
and
mov
pop
jp
outsb
pop
popf
sub
sbb
loopne
inc
out
push
rorb
lds
aas
cmp
adc
cwtl
mov
in
out
dec
xor
lret
jp
cwtl
aaa
push
enter
jle
popa
xlat
inc
stos
inc
xchg
fmuls
aaa
mov
imul
outsb
loope
jne
call
adc
out
jo
add
cwtl
out
and
lock
fwait
jl
mov
sub
push
popa
mov
cli
xchg
push
or
outsb
test
loop
mov
mov
imul
push
adc
sahf
or
loope
mov
xor
xorl
dec
xchg
fdiv
push
sbb
ret
das
ss
mov
aam
inc
dec
outsl
sbb
jb
jg
in
notb
lds
add
adc
test
or
gs
in
out
jl
lods
test
push
lahf
pop
lret
and
push
xor
roll
subl
test
rcll
fstpl
lcall
push
test
fldenv
sub
sbb
out
jo
jecxz
gs
enter
push
sbb
dec
pop
dec
mov
pushf
clc
mov
pop
loope
pop
jb
push
push
loopne
xchg
sbb
jb
ds
xchg
inc
push
cli
into
xor
movq
js
cmp
jl
xchg
shrb
aam
addb
andb
mov
dec
pusha
and
jno
push
mov
pusha
mov
inc
scas
outsl
mov
fsubp
mov
mov
ret
jg
push
and
arpl
rol
fstpt
cmp
xchg
adc
ljmp
or
fistpll
pop
xorb
adc
ljmp
push
and
xchg
push
push
xorl
hlt
cmp
push
loop
xor
cmp
shl
push
dec
out
cmpsb
test
fcoml
sahf
mov
iret
or
stos
xchg
xchg
popa
shrl
jg
or
mov
mov
push
dec
mov
aad
push
cld
pop
dec
or
mov
mov
pop
adc
inc
fs
add
fwait
jne
lcall
aad
inc
cltd
in
fildll
cmp
loop
icebp
fisubrs
adc
lock
movsl
insb
add
add
fmuls
sbb
inc
fildl
jbe
push
les
orb
ljmp
and
xchg
scas
and
push
daa
aas
inc
xor
in
inc
es
std
push
dec
sbb
xor
fisubs
popa
int3
and
es
lcall
sub
std
mov
adc
mov
sub
ds
mov
repz
imul
inc
insb
popf
cmpsb
cwtl
sbb
stc
or
stos
nop
sub
subb
pop
sub
out
lahf
fistpl
push
stos
fs
xchg
add
add
clc
stc
ds
pop
js
jmp
mov
xor
inc
push
sub
and
rcr
and
push
jne
in
iret
pop
hlt
lods
ljmp
std
js
bound
sub
inc
scas
ds
adc
jo
int3
movsl
lahf
xchg
decb
xor
rcr
pop
clc
cmp
xor
push
repz
inc
xchg
mov
shrb
jo
nop
mov
arpl
repz
push
insl
adc
adc
fnstsw
mov
fldl
insb
fcoms
aaa
dec
dec
jbe
test
js
shlb
test
and
xchg
test
nop
iret
and
jae
js
ret
outsl
js
sub
add
mov
xchg
loope
daa
test
mov
loop
movsl
mov
and
xor
jg
xor
cmp
rcr
cld
jp
popf
xor
sti
test
sub
jp
lock
sbb
aas
adc
mov
mov
jmp
pop
pop
mov
addr16
leave
test
push
jecxz
lock
clc
mov
imulb
pop
mov
mov
nop
or
mov
js
cld
xchg
adc
movsl
mov
mulb
orb
and
enter
mov
int3
mov
sbb
jge
fs
aad
or
add
andl
outsl
dec
enter
icebp
mov
das
test
add
lock
pusha
jbe
popa
mov
xchg
ret
sub
sub
cmpsb
aaa
or
add
xor
and
sbb
out
jo
ljmp
call
dec
test
mov
jge
ret
mov
movsl
pop
sub
lock
cmp
inc
sub
sbb
pop
push
jb
cmc
push
and
cmc
sub
xchg
jle
sub
mov
dec
int
dec
xchg
cmpsl
pop
jbe
mov
sbb
inc
mov
pop
xorb
jecxz
mov
jg
jecxz
or
and
dec
cmp
fisttpll
sahf
xor
push
inc
icebp
add
insb
or
inc
mov
xchg
cli
movsb
xorl
scas
mov
test
xchg
inc
mov
cld
dec
jl
adc
divl
mov
addr16
ret
mov
push
mov
sub
jae
push
shrb
std
insl
test
push
call
in
shl
aam
lret
std
aad
xor
or
cmp
mov
hlt
sbbb
pop
jge
std
add
shll
fildl
repz
stc
sbb
jg
ljmp
sbb
mov
movsl
lods
dec
lahf
pop
or
pusha
jle
sbb
adc
mov
outsb
pusha
fdivrs
cmp
lods
mov
push
orb
popa
adc
or
sbb
ret
mov
mov
leave
hlt
sub
pop
sub
mov
inc
push
mov
shl
mov
and
xchg
jle
in
aaa
sbb
sub
jle
adc
mov
push
stos
pop
xor
lds
xchg
inc
jl
adc
mov
cld
aam
mov
jmp
add
or
cmpsl
add
out
mov
mov
add
sub
xlat
xchg
pop
cmpsb
or
jp
pop
mov
add
cmp
std
adc
les
xchg
fcmovb
leave
enter
pop
gs
dec
leave
jmp
aad
imul
mov
stos
cmp
add
stc
loop
add
jno
cmp
pop
push
dec
ret
data16
mov
jae
lock
loope
daa
insb
add
sahf
and
test
and
mulb
add
add
xor
adc
mov
call
addl
cld
test
add
sub
xchg
or
mov
push
pop
stos
jl
sbb
aaa
sbb
sbb
shl
lds
lea
cmpsb
add
xor
test
test
movzwl
iret
scas
or
dec
cmp
adc
fcmovbe
add
adc
lret
dec
shll
lock
out
adc
mov
cmp
mov
xor
cmp
or
cmpsl
stos
jle
push
and
lcall
mov
cmp
incl
pop
std
andl
inc
sbb
out
outsb
outsb
mov
and
pop
lock
adc
push
xchg
out
cmp
or
arpl
sbb
stos
push
xchg
into
xchg
mov
adc
loope
xchg
lret
pop
sub
push
in
adc
sbb
mov
rolb
lea
insl
inc
sub
inc
lods
add
loope
js
in
push
stos
leave
loop
or
cmp
xchg
popf
test
xchg
dec
inc
sub
aam
in
pop
int3
popa
and
mov
add
push
icebp
jmp
inc
aam
xchg
in
repz
adc
loope
fcoms
out
sub
add
jb
lret
sbb
xchg
sub
jae
lods
pop
xor
xor
sub
inc
mov
movsl
ficoml
push
cmp
fsubl
pop
loopne
and
pop
sub
inc
sbb
xor
addr16
lock
lcall
js
loop,pn
pop
imul
mov
out
outsb
adc
jmp
mov
lahf
sti
adc
in
loopne
sbb
inc
and
pop
aad
test
cli
neg
add
sahf
add
adc
jne
pop
pop
jmp
in
mov
and
fs
pusha
adc
nop
sbb
inc
std
adc
or
mov
cltd
push
mov
in
jp
mov
mulb
jmp
add
jno
push
mov
mov
xor
or
and
mov
xor
and
inc
test
lds
add
jae
out
mov
jno
cmp
fdiv
xor
stos
in
or
xor
jns
xchg
add
sub
or
sbb
int3
xchg
icebp
test
add
cmpsb
scas
in
cld
repz
shr
adc
push
adc
lds
test
pop
or
int
lcall
insb
mov
jno
add
stos
pop
xchg
nop
mov
loope
loop
int
add
inc
xchg
pop
adc
inc
and
jne,pn
icebp
cmp
test
adc
inc
jbe
pop
mov
lods
or
cld
fldt
adc
cmpsl
pushf
cmpl
cmpsb
push
jmp
je
mov
js
push
aam
cmp
cmp
imul
sbb
inc
in
xchg
data16
and
and
xor
pop
loope
loopne
inc
stc
sbb
jle
pushf
dec
mov
aas
inc
aad
insb
cmpb
mov
loope
fistpl
xor
or
push
adc
mov
push
cmp
repz
mov
jmp
jnp
sbb
xacquire
loop
int
cmpb
sbb
mov
and
lahf
std
cmp
mov
stc
sbb
shrl
mov
dec
and
mov
test
outsl
test
or
sbb
add
push
and
call
call
jg
mov
xor
jle
mov
jns
mov
adc
test
hlt
leave
je
aas
and
movsl
mov
jecxz
call
push
inc
loopne
fadd
sbb
add
cmp
inc
ds
sub
imul
sbb
cmp
insl
sub
dec
sub
add
adc
pop
loope
sub
inc
lahf
pop
xchg
push
std
test
out
lcall
je
adc
sbb
sbb
repnz
lods
xor
sbb
xchg
jmp
push
cltd
push
je
push
pop
pop
out
or
push
lods
xchg
pop
lds
adc
push
stc
stc
int
std
jle
add
and
inc
fadds
insl
bound
call
scas
fiadds
mov
les
addr16
enter
les
test
bound
popa
and
ffree
aaa
push
mov
enter
arpl
fsub
fidivrs
cmpl
mov
xchg
and
sub
inc
daa
nop
cwtl
and
jo
xchg
rorb
sbb
lods
jl
fsubl
scas
rclb
jp
add
fcomp
inc
std
sbb
jbe
jo
and
add
jecxz
gs
or
jle
mov
in
and
or
inc
nop
in
mov
or
pushf
jmp
nop
lods
cmp
ficompl
scas
xor
sub
or
xor
nop
cmpsl
xor
sbb
xgetbv
mov
jmp
mov
cmpsl
pop
push
clc
lea
pop
shll
pop
sub
add
pop
pop
push
jnp
cmp
lds
dec
hlt
inc
push
dec
cli
cmp
jb
pusha
and
push
jmp
dec
ljmp
jp
nop
xor
push
or
daa
push
or
popa
into
pop
cs
std
mov
adc
sbb
xor
xchg
pop
sbb
adc
push
imul
rorb
push
push
in
cld
andl
pop
push
imul
and
mov
mov
jecxz
mov
fidivl
scas
sbb
sbb
aaa
mov
mov
inc
push
jge
or
testb
rorl
adc
test
cmp
arpl
filds
cmp
sub
mov
loope
pop
ret
sbb
cmpsl
xchg
ds
jp
jg
rcr
xor
das
shr
cmp
dec
stos
add
jge
xor
flds
fs
dec
fs
inc
shl
dec
clc
fsubr
testl
mov
pop
jbe
pop
or
sub
jge
orl
std
js
dec
shlb
loope
frstor
cmpsb
push
jb
int3
and
push
mov
mov
popf
cmpl
pop
ret
mov
rolb
push
mov
mov
scas
xchg
mov
cs
lods
movsb
nop
outsl
cmp
push
sub
mov
lret
adcb
or
ficoml
lods
adc
jge
sbb
cmpsb
and
popf
es
in
cltd
orb
fdivs
pop
pop
pop
and
add
movsb
pop
in
pop
pop
cld
and
add
add
icebp
mov
or
adcl
jno
inc
sahf
jecxz
adc
rorl
aas
fimuls
je
pop
lds
dec
and
mov
shlb
push
adc
cli
sbb
sub
imul
dec
add
push
cmp
pop
aam
loopne
push
fisubrs
and
les
cs
push
sbbb
gs
and
repz
sbb
inc
dec
mov
adc
pop
mov
adc
icebp
cli
mov
notl
push
mov
xchg
popf
cld
cmp
hlt
push
iret
insb
outsl
movsl
dec
fmull
push
int
add
or
push
mov
push
loope
insb
pop
arpl
arpl
add
add
cmp
sub
sbb
or
add
imul
cvtdq2ps
add
adc
imul
and
fnsave
stos
xlat
fwait
in
mov
enter
mov
fnsave
inc
loopne
sti
lock
lahf
xchg
out
add
fwait
or
jbe
and
jp
mulb
sbb
pusha
movsb
mov
pusha
into
das
pop
test
fldenv
loop
dec
dec
push
dec
mov
cli
mov
icebp
mov
jb
sbb
cmc
seto
or
imul
xchg
mov
lret
insl
imul
add
frstor
ret
mov
sbb
inc
pop
jmp
sbb
sbb
cmp
addl
inc
test
xchg
adc
jg
inc
in
fldl
jmp
stos
repnz
jg
fwait
stos
mov
mul
popf
mov
lds
adc
fmuls
js
sarb
mov
iret
mov
sub
lods
js
adc
lahf
inc
insl
mov
mov
add
lea
lahf
sti
xchg
cmp
call
or
test
mov
ret
imull
pop
pop
and
push
or
into
cmpsl
out
shll
je
push
adc
xchg
add
aas
mov
xchg
outsb
ret
push
add
cld
push
shrl
adcb
test
sbb
inc
xchg
push
sub
pop
stc
faddl
aam
popl
adc
sub
add
imul
outsb
addr16
push
dec
gs
xlat
cmp
mov
mov
mov
loope
mov
jg
into
push
stc
test
inc
or
loopne
cs
xlat
test
enter
jle
test
pop
jle
xchg
cmpsb
loopne
andl
shrb
mov
xor
repnz
fldl
mov
mov
push
in
and
sarb
dec
adc
push
out
mov
fwait
aad
outsl
fstl
lahf
mulb
mov
pop
fucom
adc
cmp
popa
lea
mov
or
loopne
or
or
push
incb
and
adc
push
pushf
inc
add
add
repz
inc
aas
je
faddl
comiss
sbb
in
imul
add
in
or
nop
ja
add
stos
add
cmc
flds
dec
in
aam
test
adc
push
xor
fstps
mov
add
xchg
jne
and
adc
fwait
xchg
mov
xorl
sahf
sbb
add
xor
push
sarb
outsl
fsub
xchg
dec
push
mov
cwtl
mov
filds
bound
int
fimull
out
mov
outsb
rolb
or
xchg
or
and
int
js
sar
pusha
clc
pop
nop
sub
mov
fistl
mov
adc
dec
add
inc
sub
add
loope
out
pop
mov
jb
mov
dec
or
cmp
rep
jno
pop
sub
inc
ljmp
cs
sbb
jne
sbb
loope
dec
js
lret
ja
iret
mov
cld
adc
rclb
mov
inc
mov
mov
push
cmc
lds
fidivl
push
mov
mov
aad
sahf
das
mov
sbb
xorl
ss
nop
loope
mov
or
push
jnp
dec
pusha
in
in
iret
int3
inc
ret
dec
mov
jno
lahf
mov
das
lods
xor
dec
mov
or
bound
imul
mov
or
inc
sarl
loopne
mov
inc
xor
mov
shrb
push
jnp
push
rolb
nop
loope
dec
int
sbb
test
jle
xchg
lea
adcb
adc
mov
xor
mov
aaa
ss
dec
adc
xchg
xor
push
aam
or
inc
dec
inc
test
jmp
cmpsl
pop
or
pop
stc
mov
out
mov
add
pushf
sbb
dec
mov
jnp
ret
ret
loopne
shrb
or
cwtl
sub
or
adcb
cmp
sbb
sbb
pop
test
pop
vpsrlq
out
inc
daa
adc
inc
add
lock
xchg
add
frstor
mov
add
mov
loopne
aaa
adcl
rcll
ret
je
dec
xor
subl
and
or
mov
xchg
icebp
ret
loope
dec
dec
jge
push
mov
xchg
jecxz
in
push
jge
lods
imul
pusha
fmuls
push
pusha
sbbb
jmp
ret
sub
loope
and
or
in
pop
push
inc
pop
xor
jl
inc
sub
mov
push
das
or
xchg
jne
or
xchg
mov
cld
lods
lret
and
call
mov
mov
push
cmc
push
pop
mov
lds
mov
sbb
test
jle
iret
fcmovu
out
ja
xchg
push
lods
mov
mov
loope
dec
inc
vpmovmskb
xchg
leave
shl
mov
int3
add
cmp
pop
cmc
cmpsb
mov
adc
jp
lods
les
adc
xchg
lds
cmp
hlt
pop
nop
push
loopne
imul
jne
pop
out
pusha
lret
push
add
or
movsb
popa
sub
movsl
hlt
mov
inc
jge
jmp
lret
call
and
push
daa
in
ljmp
dec
insl
mov
mov
jmp
mov
loopne
pop
xor
mov
jp
xor
adc
movsl
sti
data16
imul
and
and
je
sbb
dec
lret
ror
test
push
jnp
add
dec
sbbb
lea
dec
ja
pushf
xorb
nop
lret
jnp
data16
imul
xorl
lods
inc
sbb
adc
sub
sub
lret
leave
or
xor
xchg
or
mov
cld
mov
adc
xchg
inc
inc
inc
arpl
mov
xchg
inc
mov
sbb
ss
sbb
add
jl
adc
lea
mov
popa
inc
dec
ja
sbb
add
ds
gs
push
xor
mov
icebp
std
lods
outsb
movsl
xchg
sbb
shl
imul
adc
xchg
pop
xor
out
push
mov
ja
add
and
call
pop
push
movsl
out
jg,pt
mov
jl
adc
xorl
stos
mov
insb
pushf
bound
adc
rcrb
sub
mov
push
jecxz
jnp
mov
push
ss
out
add
clc
jle
jmp
pop
adc
mov
pop
push
push
dec
xor
adc
sbb
daa
rclb
lock
jns
sub
sub
sub
xchg
sbb
sbb
adc
xchg
mov
sub
adc
push
loopne
ret
add
sahf
cmc
mov
xchg
rolb
rorb
lret
cmovge
jb
fwait
jo
int3
fdivs
lock
jb
imul
mov
cmp
mov
scas
push
int3
insl
sub
jno
adc
inc
inc
fldl
nop
insb
jg
adc
mov
gs
inc
add
repz
stc
fnstenv
dec
scas
movsb
jl,pn
cwtl
and
inc
mov
sbb
insl
js
xchg
pop
mov
leave
cmp
jo
outsb
shlb
add
jae
and
adc
jo
cs
stos
loopne
int3
mov
pop
imul
gs
sarb
addr16
sbb
xchg
xchg
or
sbb
ja
stc
test
or
lods
addr16
outsl
jmp
hlt
adc
cmp
mov
or
and
mov
jecxz
sub
jne
push
mov
stos
inc
jl
jae
inc
repz
mov
rorb
inc
pop
fistpll
ret
and
cwtl
sub
std
dec
pusha
pop
sub
sub
xor
std
aad
pusha
fistpl
pop
mov
mov
push
mov
push
lods
popf
xor
mov
xor
mov
sbb
icebp
mov
mov
ret
mov
or
xchg
fmuls
rorl
in
jo
insl
imul
jl
iret
adc
lock
loop
or
jae
shll
mov
mov
addb
pusha
std
cltd
fdivrl
dec
inc
lds
push
adc
gs
into
in
inc
mov
fs
aam
mov
dec
lds
mov
jecxz
scas
ja
mov
lcall
out
in
sbb
add
push
add
aaa
les
cmpsl
cmc
stc
in
jno
in
inc
and
mov
imul
lods
out
stos
cltd
repnz
xor
ret
add
pop
push
push
push
dec
pop
add
push
jb
movsb
fdiv
push
push
ret
stos
stos
mulb
shll
or
outsl
icebp
ljmp
cmc
sub
dec
data16
mov
xor
adc
jne
push
pop
mov
repz
mov
or
mov
loopne
int
xchg
cmpsl
cmp
xor
pusha
icebp
lock
mov
mov
imul
push
loopne
push
testl
ret
inc
sbb
add
in
pop
test
mov
aas
fsubp
cmpl
or
cmc
enter
add
ret
sub
mov
jecxz
pop
rcll
push
out
adc
pushf
xchg
mov
out
fmull
pop
add
ret
outsb
xor
pop
jge
in
test
pop
clc
cmp
fnstsw
cmpsb
pop
jbe
inc
mov
gs
add
into
dec
cmp
fidivrl
outsl
push
sbb
sub
xor
push
push
mov
sub
loopne
imul
sahf
shlb
lds
push
mov
jo
mov
out
pop
push
lock
arpl
fdivs
jmp
adc
popa
inc
pop
or
test
movsl
mov
mov
lods
jbe
roll
cmpsl
out
and
push
mov
sub
imul
sub
sub
and
jge
inc
in
adc
pushl
rcrl
subps
rorl
decl
xchg
inc
daa
shll
popa
or
mov
pushf
clc
pop
jecxz
and
pop
cmp
mov
xchg
and
jo
pop
loop
xchg
jp
pop
cmp
jecxz
clc
shlb
ljmp
mov
sbb
aas
sub
inc
lock
inc
popa
xchg
aam
mov
incl
je
nop
mov
cmp
outsb
mov
mov
mov
cli
mov
aas
scas
or
loopne
subl
dec
clc
fdivrl
cmp
imul
inc
jmp
mov
test
das
sub
inc
sti
sbb
or
sbb
call
and
cmp
and
shrb
popa
subl
mov
pusha
movsb
rcll
cmpb
pop
mov
scas
into
mov
mov
sti
enter
neg
mov
mov
subl
add
cmp
adc
mov
jge
shl
mov
call
inc
push
fmull
add
sbb
xor
mov
mov
sbb
xchg
push
rclb
mov
cmc
hlt
dec
js
enter
or
lahf
cmp
xor
push
std
add
push
das
xchg
mov
test
rolb
pop
test
sub
divl
xor
icebp
dec
decb
adc
test
and
popf
loopne
mov
pusha
stos
imul
loopne
daa
popf
inc
push
daa
push
ds
sar
cmp
fnsave
in
inc
inc
ljmp
out
repnz
xchg
iret
rolb
add
bound
adc
aam
adc
cmp
push
pop
jp
in
std
mov
mov
iret
stos
pop
jo
xor
aam
jg
xchg
je
je
nop
out
arpl
mov
mov
adc
ja
or
aas
addr16
dec
inc
jge
add
pusha
psraw
rcr
xor
jbe
pcmpeqb
cmpl
test
into
xor
sbb
in
jno
jg
lea
fstps
mov
movsb
add
test
pminsw
mov
outsb
push
cld
ss
cwtl
mov
mov
inc
mov
imul
mov
out
pop
shl
in
pop
inc
adc
add
mov
cmp
ret
stc
xor
jne
mov
jp
pusha
mov
or
insb
pushf
or
pop
mov
repz
les
ss
mov
aas
call
rcl
adc
ljmp
jne
sbb
fistpl
mov
pop
leave
imul
jno
and
mov
test
aam
loope
insb
sbb
out
jle
loop
and
mov
xchg
andb
add
nop
jne
js
rcll
out
or
lods
shlb
push
adc
push
int3
xchg
mov
pop
and
out
jnp
jb
stos
and
orb
and
in
push
or
sbb
pop
insb
xchg
xor
or
test
dec
mov
add
lods
sarb
clc
jne
adc
mov
leave
fdivp
inc
loope
dec
sar
mov
cli
pop
fsubrp
inc
movsb
adc
enter
lock
outsb
inc
pop
dec
hlt
sub
pop
and
or
hlt
xor
pusha
imul
push
pop
call
fnstenv
lds
enter
hlt
cmp
cmp
movsl
popf
jno
repz
and
ds
stos
pop
ss
mov
inc
mov
add
fcomps
jecxz
cmpsl
call
ret
cmp
pop
jg
adc
jmp
pop
jp
sti
cmc
movsb
inc
repz
xor
fbld
xchg
orl
outsl
xor
mov
stos
iret
das
pop
sub
mov
out
jmp
adc
mov
aaa
add
push
repnz
xor
pop
xlat
cmp
daa
cmc
cmc
orl
fcmove
or
jge
sti
call
pop
dec
push
jp
das
cmc
loop
mov
movsl
xchg
out
loopne
add
mov
movl
push
inc
mov
dec
pop
sbb
jmp
adcb
aaa
fisttps
adc
dec
ret
push
lret
roll
mov
xchg
or
fcmovne
aaa
into
jmp
push
jne
pop
xor
mov
and
addr16
mov
mov
repz
jo
cmp
and
loopne
js
addb
in
neg
leave
lea
push
lcall
clc
fs
mov
sbb
push
inc
cmp
daa
movsb
adc
scas
sbb
or
add
sub
jnp
ret
add
push
sahf
in
pop
inc
sbb
adc
and
xor
mov
shl
dec
bound
mov
adc
shll
daa
jmp
pop
mov
ret
or
adc
clc
mov
cmpsl
aad
out
cltd
rcll
mov
and
sub
adc
cltd
xor
sub
xchg
mov
rcrl
stos
pop
xor
js
adc
ljmp
or
test
xlat
loope
add
mov
shr
sub
sub
jo
icebp
pop
cli
xchg
arpl
inc
xchg
cmc
cmpl
jge
das
fwait
arpl
lods
test
mov
and
jecxz
nop
add
add
inc
dec
push
lret
cmp
ljmp
inc
pop
adc
cmpsb
inc
es
adc
aas
inc
fmull
test
je
fiaddl
in
jmp
push
cwtl
les
and
pop
cmp
dec
adc
mov
push
lods
test
cli
fnop
mov
mov
or
adc
pop
ja
jle
pusha
popf
jne
push
jnp
xor
andb
cmp
mov
fmuls
lea
in
fildl
scas
jecxz
rorb
es
add
rolb
adc
xor
ja
es
clc
adc
sub
xor
mov
push
xchg
mov
rorl
mov
jge
add
shlb
add
inc
retw
cmc
ret
iret
xor
movsb
inc
hlt
in
and
fistps
outsb
and
sti
lods
jecxz
cmp
jae
and
je
inc
dec
in
mov
arpl
add
pop
push
lock
cmpsl
bound
js
jle
jae
mov
shrb
sub
icebp
insb
mov
adc
add
push
inc
lret
xchg
mov
xor
in
je
sarl
fstpl
xorb
cli
aam
adc
adc
aaa
fsubs
jp
mov
nop
aad
popf
pop
push
stos
in
popf
pop
les
jae
in
std
mov
xor
mov
pop
sub
test
ficoml
arpl
add
fcoml
cmpl
xchg
sbb
icebp
outsb
xchg
into
cmp
lret
xor
push
push
add
aaa
xchg
shll
mov
popa
in
and
hlt
adc
mov
cmp
sub
lret
mov
mov
inc
add
add
xchg
rolb
mov
mov
adc
sbb
shlb
loopne
pop
icebp
mov
push
jnp
sub
inc
pop
jecxz
movsl
rorl
shrl
mov
inc
insb
in
int3
adc
sub
lcall
js
mov
adc
mov
stc
js
or
popa
push
pop
icebp
jecxz,pt
add
mov
or
cmpsb
repz
lds
pop
jl
sbb
in
sub
out
popa
inc
scas
stos
inc
sahf
in
nop
out
or
push
rcr
outsl
loop
sub
lahf
inc
and
and
xchg
mov
sbb
movb
shl
stc
sbb
cmp
adc
xchg
cltd
cmp
xor
outsl
adc
mov
dec
or
or
push
dec
ljmp
shrl
mov
in
shrb
fsubrs
push
ds
das
sbb
jp
inc
fwait
sahf
and
push
addr16
push
adc
push
aam
das
rclb
jb
mov
aas
jb
inc
test
rclb
stos
xor
out
and
push
xchg
sbb
and
inc
aas
mov
mov
pushl
cmpl
mov
loope
hlt
outsw
shlb
bound
test
mov
pop
lcall
popa
or
incb
sahf
and
enter
js
jno
scas
adc
xor
cld
icebp
xchg
add
adc
xlat
call
sub
add
cmpb
addr16
loop
xchg
push
addb
mov
hlt
lods
sub
je
cmp
pop
fisttpll
insb
repz
fdivrs
push
dec
push
lods
rclb
cld
xchg
inc
cld
aam
add
sub
mov
xor
les
dec
mov
aaa
pop
xchg
jb
mov
cmp
mov
scas
stos
inc
xor
movsb
in
fldt
jge
hlt
pop
mov
push
cltd
and
xchg
rolb
or
aam
incb
mov
and
je
jge
out
push
pop
sbb
clc
aad
mov
cmp
adc
or
jo
leave
rolb
loope
in
lock
shrl
xchg
or
sti
pusha
pop
add
xchg
sbb
and
sbb
pop
adc
cmovp
rorl
push
ss
and
enter
gs
int3
push
dec
sub
in
std
fdivs
add
cli
sbb
popf
loopne
flds
mov
cmp
sarl
jae
and
test
add
mov
and
outsl
sub
cltd
jbe
inc
in
movsb
lock
add
es
xchg
mov
inc
sub
adc
aas
sbb
stc
out
clc
mov
test
es
jmp
cwtl
push
dec
lds
movsb
push
xchg
enterw
pop
rcrb
push
mov
ds
jle
lods
inc
push
dec
adc
xchg
mov
in
outsl
ffreep
repz
cmpb
xor
sub
lods
stos
jne
shll
cmc
fldl
jnp
sub
mov
sahf
xchg
out
sti
lock
gs
adcb
xor
xchg
pop
rcl
inc
or
fbld
sbb
repnz
cmp
lock
ja
or
mov
arpl
das
int3
dec
cs
push
fidivrl
dec
inc
test
insb
add
adc
sahf
stc
or
add
je
mov
insb
movsb
inc
orl
in
test
loop
ja
push
cmp
in
mov
setb
mov
jne
jno
cmpb
movsl
inc
sbb
inc
jno
test
or
orl
mov
fdivl
push
outsl
hlt
shrb
int
imul
xchg
adc
add
test
pop
dec
jl
sub
bound
sar
test
dec
xchg
add
cmp
fsubs
push
shr
in
stc
lcall
cwtl
sbb
fsubrs
mov
aam
push
or
sbb
push
ss
dec
mov
mov
mov
jnp
and
jo
sahf
sbb
aad
mov
scas
pop
test
mov
pop
aas
cmc
adc
movsl
fildl
cld
cmp
push
lcall
sub
mov
dec
dec
test
test
ss
lods
les
int3
in
or
nop
nop
and
sub
icebp
add
in
jnp
push
inc
cmp
je
roll
sub
rolb
clc
xchg
emms
mov
jg
daa
and
stos
scas
shrd
mov
sub
lock
cs
mov
xlat
cmp
xchg
out
pusha
and
push
test
pop
icebp
test
or
loop
inc
aas
mov
out
fsubl
shlb
pop
xor
fimull
test
testb
adc
sub
hlt
mov
cmp
sahf
jmp
jns
mov
clc
and
aad
addr16
mov
popf
iret
jb
stc
insl
hlt
fiaddl
and
sub
repz
jo
sahf
fldt
hlt
mov
aad
fmul
cmp
push
lret
in
lock
adc
popf
jge
adc
pop
push
je
movsb
jecxz
popa
cmp
mov
repz
adcl
out
jae
movsb
jno
pop
js
ret
add
inc
nop
add
xchg
ds
lret
popaw
mov
mov
out
push
loop
fidivrs
pushf
pop
pop
jo
popf
pop
lds
mov
xor
or
cmp
add
mov
pop
ret
test
push
and
arpl
sbb
push
or
pop
cmc
pop
pop
sub
xchg
lds
jne
jmp
mov
jmp
sbb
adc
test
ror
cltd
test
sub
jecxz,pt
cmp
aad
dec
mov
inc
sbb
dec
je
lcall
mov
mov
out
ds
add
jecxz
nop
push
fxch
ss
or
mov
add
enter
jo
lock
or
pop
test
es
out
adc
or
mov
jle
dec
pop
xchg
out
adc
ja
adc
xor
movb
cmpsb
ret
pop
in
dec
jne
xor
cmp
sbb
imul
flds
cmc
jo
in
inc
pop
mov
xchg
jns
int
sarb
or
push
cmp
inc
cmp
icebp
cmpsb
push
xchg
xlat
shlb
or
rcl
sbb
in
or
pop
outsb
jno
out
jg
lret
jecxz
lret
mov
out
outsb
ret
or
into
sub
fidivrs
add
mov
mov
jo
pop
and
lds
arpl
push
and
jl
xlat
cmp
cmp
cmpsb
push
mov
loop
mov
insb
dec
addb
jge
ljmp
push
sbb
es
pop
ds
cmp
pop
aam
jb
dec
or
mov
ret
push
mov
mov
je
repz
ljmp
push
xchg
mov
cmp
mov
jecxz
push
ret
enter
push
mov
fadds
dec
mov
adc
cmp
je
loop
mov
push
dec
lahf
mul
cmp
pop
jl
lock
add
sub
push
cmp
fwait
adc
sahf
or
sub
mov
pop
out
fiaddl
stos
mov
outsl
pop
mov
mov
add
xchg
dec
lds
addr16
jns
shrb
cmp
adc
popf
push
or
jl
int
push
repz
inc
repnz
test
imul
popa
mov
aas
hlt
push
dec
aam
andl
mov
sbb
pop
fldl
movsl
or
sub
jne
adc
pop
inc
cmp
notl
bnd
sbb
cmp
movsl
pop
mov
das
add
imul
cmp
mov
cltd
and
insb
xchg
xchg
mov
push
lahf
addr16
inc
inc
sub
mov
sub
sub
cmp
add
call
sbb
push
inc
es
push
xor
negl
mov
in
lock
clc
sub
mov
inc
insb
dec
hlt
movsb
adc
push
jle
mov
stos
cmp
lcall
into
lcall
insb
xor
pop
jge
add
mov
add
push
out
fiadds
add
test
xor
or
cmp
push
fidivs
loopne
lods
push
into
jle
or
jl
lea
xchg
add
sub
xor
aam
inc
repz
xchg
sbb
iret
outsb
jmp
enter
jo
scas
push
pop
sbb
fisttps
ljmp
xor
sar
lret
ds
icebp
insb
pop
rol
mov
pop
xlat
adc
cmpsl
add
fwait
rolb
adc
inc
pop
mov
movsb
sub
mov
addl
mov
pop
mov
mov
out
aam
inc
push
sub
mov
pop
iret
xchg
adcl
pop
mov
lahf
adc
loop
push
repnz
push
push
fcoms
stos
inc
aaa
cli
pop
inc
push
jne
jo
push
mov
cld
push
cli
loop
xor
sbb
inc
addr16
inc
gs
ret
out
dec
cmpsl
sbbb
pop
out
das
rcll
cmp
inc
popl
mov
aaa
add
popf
push
mov
repz
cmp
or
ror
aaa
arpl
pop
pop
adc
add
dec
std
mov
es
test
adc
push
dec
lds
jp
test
push
shll
xor
je
stos
or
mov
inc
inc
xor
or
hlt
pop
icebp
adc
lcall
aam
loope
or
jno
or
ss
or
push
loopne
cs
and
mov
xchg
pop
or
insl
jmp
or
add
aam
pop
push
cmp
push
jg
add
sbb
or
cmpb
pushf
pushf
scas
data16
sbb
insl
test
aaa
sub
dec
sbb
pop
adc
adc
repnz
lock
shlb
lods
jnp
inc
lods
sbb
inc
xor
cmpb
inc
sub
out
dec
js
in
test
cld
daa
int
sub
pop
or
into
push
xor
sub
jmp
mov
jb
adc
imull
xchg
jo
pop
fistl
sub
in
pop
es
sub
mov
sbb
scas
xor
insl
repnz
push
mov
inc
mov
lret
and
data16
js
sub
cmc
sti
mov
push
aad
test
xchg
addr16
lock
ljmp
add
xchg
and
out
pop
out
fmuls
test
jmp
push
add
shl
clc
adc
das
inc
out
negb
xchg
subb
lods
ja
or
mov
adc
loopne
or
dec
test
int3
or
add
adc
pop
xchg
es
mov
test
inc
and
xor
and
scas
or
js
rorl
xchg
push
movsb
ja
mov
sbb
xchg
fucom
out
imul
fstl
clc
dec
test
fld
sub
and
movsb
mov
sbb
dec
mov
xor
ret
ljmp
loope
ret
xchg
mov
mov
lcall
les
pop
cld
xchg
cmp
jmp
lret
lea
pop
or
jnp
xchg
aam
push
add
movsl
lock
push
xor
adc
add
xlat
scas
lret
es
jo
sti
ljmp
fadds
jmp
dec
xchg
js
sbb
aas
mov
cmp
fsts
fyl2x
loopne
sub
dec
mov
fwait
lock
push
jge
mov
xchg
aad
mov
push
cmpsl
repnz
push
mov
jp
mov
pop
jmp
cmpsl
sub
imul
sub
cmp
std
fdivr
add
sbb
in
orl
gs
mov
sbb
mov
cmovns
aas
test
sti
andl
jo
arpl
mov
movsl
and
jg
cld
xchg
mov
cwtl
leave
fstp
clc
mov
shr
sub
push
sbb
lsl
fistpll
push
or
fisubl
sub
cwtl
xchg
inc
inc
jno
xchg
pusha
les
or
dec
pop
mov
or
push
cmc
push
pop
cmp
fcmovu
out
ljmp
test
dec
jns
lret
cmpsb
push
jp
arpl
ds
negl
inc
sub
push
dec
rorl
or
push
pop
imul
sbb
xchg
jmp
cmpsl
jecxz
cmpsb
dec
into
int
jle
ljmp
adcb
fldl
mov
or
shl
mov
clc
xchg
sub
dec
add
cmp
mov
nop
cltd
adc
les
lahf
sbb
enter
hlt
sbbb
out
ret
mov
sbb
fsubrs
push
addl
dec
dec
iret
adc
je
arpl
daa
or
mov
shlb
push
lds
inc
jg
cmpsl
mov
cwtl
push
ret
into
adc
movsl
adc
incb
or
out
loope
xchg
imul
inc
addr16
or
dec
jl
mov
jno
or
sbb
ret
test
or
jg
cmp
mov
or
adc
inc
pop
mov
dec
lods
sub
lea
jle
sub
popa
movsb
iret
clc
cmp
and
shl
movsl
mov
fsubl
adc
ljmp
push
dec
in
push
pop
add
hlt
aaa
pop
jg
mov
ds
rcrl
out
fimuls
xor
mov
mov
dec
pop
dec
repz
fmull
lret
mov
and
test
push
rcr
add
lock
adc
fadd
add
add
cmp
xorb
mov
call
inc
jmp
bound
adc
push
and
outsb
push
lods
stc
inc
mov
sub
sbb
ret
pop
sbb
jbe
addb
mov
jle
iret
in
add
or
sbb
js
pop
sbb
xor
xchg
divb
addr16
lock
push
sub
pop
lret
xchg
dec
fisubl
cli
cmp
mov
cmpsl
or
mov
jg
push
inc
mov
xend
xchg
sub
ffree
mov
cmpsb
adc
sub
shll
adc
aam
mov
add
mov
push
jmp
jne
sbb
inc
das
rclb
lcall
mov
xchg
cmpsl
dec
sbb
psllw
rclb
je
scas
lcall
or
sahf
adc
push
stos
cmpb
call
pop
jp
leave
iret
push
pop
cmc
add
dec
sarl
cmp
dec
ja
mov
loope
sub
or
lret
xlat
std
dec
pushf
jl
dec
clc
aam
xchg
out
dec
inc
pop
jbe
mov
xor
inc
mov
inc
pop
loop
add
cmp
push
push
or
jge
daa
push
or
or
inc
cli
and
das
sub
mov
mov
out
ds
rolb
mov
adc
inc
loop
je
jmp
or
popf
shrl
movsb
loope
aam
mov
dec
arpl
enter
insb
mov
dec
push
pop
jle
or
add
negb
push
cs
pop
cld
push
pushl
pop
adcl
icebp
jg
sub
les
mov
shrb
sub
cwtl
je
bound
ds
leave
xchg
push
jns
fwait
loop
cmpb
outsb
adc
and
sbb
mov
inc
data16
rorb
adcb
outsl
in
fwait
or
movsb
mov
cmp
adc
inc
mov
jle
pop
or
fs
push
out
std
out
nop
xchg
cmp
popf
cmp
mov
jno
cmpsb
push
jno
xor
adc
cmc
inc
mov
call
shlb
rcrl
stc
lahf
test
clc
add
push
mov
repnz
jp
dec
push
or
mov
sarl
mov
hlt
popf
lcall
mov
ficompl
stos
cmp
js
or
add
push
push
mov
dec
xchg
lret
cltd
jecxz
rcll
add
popf
ret
jp
push
mov
jl
sbb
fdivrs
or
mov
stc
stc
faddl
sub
loop
rclb
mov
fnstsw
es
inc
xchg
sub
scas
sarb
inc
test
sub
loopne
cmc
push
pop
adc
in
das
push
sub
in
and
in
stos
inc
mov
sub
sarl
rcl
mov
adc
int3
and
in
js
test
mov
pop
cmp
into
enter
or
xchg
xchg
xchg
lds
xchg
inc
outsl
or
scas
pop
clc
sub
imulb
mov
rcr
cmp
and
and
mov
push
mov
ret
and
jmp
push
sub
sub
aaa
add
inc
pusha
stos
or
add
sbb
les
adc
ret
jl
xor
loopne
je
sti
in
ret
adc
mov
push
sbb
add
xor
fcmovb
rcl
sahf
js
test
scas
adc
nopl
stos
mov
sbb
xor
shlb
mov
pmulhw
mov
pop
les
push
cmpsl
shrl
push
add
push
and
xchg
mov
sbb
out
iret
xor
inc
xor
iret
cmpsl
pxor
lret
sub
repnz
movsl
jg
mov
sti
ret
xchg
es
xchg
mov
sub
jmp
test
jmp
psrld
push
mov
adc
xchg
inc
les
lods
pop
pop
outsb
jne
loope
mov
pop
xchg
xor
stos
test
rclb
push
cmp
loopne
adc
xchg
shll
fisttpll
fstpt
out
shll
mov
sbb
cltd
add
xchg
mov
loopne
adcb
jns
sbb
rcrl
or
xlat
add
ret
sub
and
mov
adc
cs
fwait
mov
mov
sub
addr16
adc
cmc
loop
aam
pop
xchg
nop
out
jl
sub
pushf
lret
pop
cmc
test
or
or
push
mov
pop
movsl
jg
cmp
fcmove
in
aad
mov
inc
pop
outsb
mov
mov
call
jle
js
or
loop
push
repz
pop
jl
xchg
mov
jbe
outsl
pop
roll
inc
test
sbb
ret
daa
sub
fisttpl
idivl
fucomip
aam
insl
fs
aaa
cmpsl
ficomps
repz
xchg
or
xorb
sbb
cmp
mov
xchg
dec
cmpsl
ss
iret
subl
pusha
push
aam
cmpb
inc
movsb
push
mov
bnd
sbb
mov
cmpsb
or
cmp
sbb
inc
cwtl
popa
inc
insb
out
mov
pop
addl
xchg
cmp
and
fwait
or
lret
push
push
mov
dec
ret
jecxz
rcrl
sbb
push
movsb
dec
clc
dec
fldt
mov
inc
pushf
mov
cmp
test
sbb
mov
into
data16
mov
sti
lret
and
ret
fsubr
clc
push
mov
js
jae
xor
and
mov
clc
xchg
out
std
xchg
dec
sbb
mov
push
fnstcw
das
cs
ret
lahf
test
and
cwtl
sub
ljmp
js
push
push
xchg
mov
orb
sub
cmp
push
fidivrl
xor
mov
mov
std
fildl
sbb
xor
pop
fsubr
rcr
push
mov
loope
popa
and
cld
jecxz
in
pop
neg
shrd
pop
mov
in
leave
aad
into
sbb
sahf
push
mov
test
add
mov
adc
pop
mov
mov
test
push
int3
fmuls
mov
ror
adc
test
inc
xor
xchg
mov
mov
addl
or
pusha
aad
stos
mov
das
cmp
outsl
shr
xorb
popa
push
aaa
jbe
mov
add
inc
daa
clc
daa
inc
loopne
inc
cld
ja
sti
sub
mov
inc
pushf
sbb
or
aad
fstps
ret
xchg
pop
lock
clc
pop
xchg
push
adc
dec
test
dec
fs
ss
mov
and
mov
loope
clc
xchg
adc
pushf
jp
mov
gs
js
ds
lods
adc
js
outsb
jl
xchg
xor
nopl
sub
jo
pop
cmp
adc
cmpsb
cmpsl
aaa
loopne
sub
push
bound
sub
pusha
mov
popa
ficompl
adc
sub
jo
imull
popf
add
pop
mov
or
mov
mov
mov
fcompl
mov
movb
push
outsl
jg
and
into
pushf
in
jle
push
jmp
ret
and
sbb
pop
xor
and
bound
jle
adc
inc
inc
adc
inc
leave
add
fdivrs
adc
std
es
outsb
jo
rcrb
ja
hlt
test
sahf
int
or
ret
cmp
cli
xchg
xchg
xor
push
push
jno
inc
xor
xor
rol
shll
leave
fcomps
adc
adc
ja
orl
pushf
sub
adc
mov
sti
dec
sbb
fisttpl
add
rolb
fidivrl
cltd
or
pop
adcl
mov
clc
icebp
push
aas
push
repnz
sub
jns
sbb
adc
lea
stos
pusha
outsb
iret
inc
int3
lahf
outsl
les
cld
jo
loopne
adc
pushl
dec
jbe
fisubl
jg
lock
cmp
pushl
sub
hlt
pusha
cmp
imul
xorl
arpl
xor
cltd
addb
sbb
mov
or
shld
mov
out
pop
jmp
xchg
loop
mov
sbb
call
stos
xor
pop
cld
and
xchg
js
popl
mov
insl
add
mov
dec
dec
lret
imul
ljmp
mov
pop
outsb
outsl
fmull
mov
arpl
push
mov
mov
rcrl
mov
jno
ss
mov
fisubrs
imul
add
xor
bound
ss
test
nop
nop
or
test
add
xlat
and
inc
aas
inc
test
push
mov
sub
mov
add
shlb
pop
lods
scas
iret
jmp
scas
int3
aas
in
lds
cmpsb
outsl
sub
xor
inc
lds
xchg
incl
dec
adcb
sub
lock
push
popa
out
cmp
cmpl
loop
mov
mov
clc
push
adc
pop
cmp
dec
add
inc
sub
mov
out
add
xchg
xchg
mov
sahf
leave
decl
cld
pop
icebp
daa
xchg
sub
cmpsl
pushf
mov
mov
cmp
push
outsl
lret
decl
jl
dec
out
mov
icebp
rclb
push
inc
je
shr
cmp
in
imul
add
sub
add
xor
fnstsw
add
out
nop
mov
mov
mov
lods
xchg
inc
pop
mov
add
pop
cmp
mov
adc
add
movsb
add
enter
out
xchg
stc
inc
sub
or
ficoml
std
fcomip
adc
idivl
push
dec
mov
jl
das
lcall
insb
loopne
pushf
pusha
push
adc
clc
dec
pop
mov
mov
xor
sar
cmp
cmp
aam
inc
ja
ret
call
out
rorl
adc
pop
sub
xrstors
div
mov
adc
mov
sub
lret
stc
cld
sbb
sarl
mov
xchg
in
adc
sub
inc
dec
in
xor
jge
incb
enter
xor
push
andb
xchg
es
sbb
mov
mov
push
xchg
ffree
pop
std
aam
xchg
ss
sub
pop
mov
add
mov
mov
jns
sti
mov
dec
cmpb
daa
mov
rcll
lret
lea
cmpsb
push
cmp
adc
shlb
adc
test
jle
add
fadds
pop
popa
and
mov
and
add
xor
jae
or
mov
pop
dec
push
adc
fimuls
ljmp
push
adc
popf
fsubs
decb
adc
pop
push
clc
mov
imul
pop
ret
sub
lds
icebp
adc
sub
push
cwtl
and
jg
dec
enter
repz
xor
movsl
xor
inc
adc
mov
jnp
xor
mov
or
pusha
pushf
stos
jge
sbb
mov
in
sbb
insl
mov
mov
inc
cmp
nop
es
adc
and
stos
lods
incb
and
mov
fisubl
insl
dec
add
ja
mov
pop
clc
push
jb
subl
nop
xor
pop
shrl
fdivr
mov
dec
sub
popa
cwtl
sbb
sahf
fs
cmp
pop
xor
nop
and
push
jns
imulb
sahf
mulb
dec
ss
in
mov
cmpsl
call
dec
push
adc
mov
out
dec
push
cmc
xor
dec
adc
lea
ljmp
xchg
jmp
out
mov
lcall
insb
jle
xor
cli
das
js
ss
mov
adc
sub
mulps
xor
xchg
xor
fdiv
fs
and
test
movl
mov
adc
pushl
xchg
dec
out
mov
in
movsb
pop
enter
andl
cld
mov
es
aad
roll
icebp
pop
icebp
xchg
push
and
sbb
rolb
inc
cmpsb
dec
fsubrs
out
int
je
mov
fisttps
pop
loope
push
loope
adc
lahf
nop
outsb
dec
fcmove
fwait
inc
aas
xchg
ror
adc
xor
cmp
dec
rcrl
jp
aad
orb
push
lret
sub
divl
loope
jmp
cwtl
std
imul
adcl
add
or
outsb
push
xchg
test
sbb
insl
mov
pusha
cmp
mov
add
xchg
jo
mov
push
or
adc
incl
sub
add
cmp
shll
clc
inc
rcll
dec
xor
bound
jo
aad
out
push
loope
xor
xor
xor
sbb
adc
mov
outsl
push
push
cmpl
call
aam
add
mov
in
mov
mov
bound
mov
js
mov
jl
jp
sysret
dec
xor
inc
fwait
cmp
dec
les
mov
lds
cmp
mov
fcmovnb
xchg
shr
sbb
pop
xor
jl
dec
loopne
out
ss
pop
aam
and
jbe
adc
outsl
inc
movb
push
cmp
push
dec
cmp
scas
xchg
test
mov
jbe
jae
jo
mov
mov
test
dec
icebp
rolb
int
inc
outsl
xor
bound
sub
mov
push
loope
popl
xchg
sahf
mov
mov
push
fwait
sbbb
cmp
mov
andb
scas
hlt
sub
sub
shll
addl
mov
std
loope
js
add
out
mov
add
xchg
pop
mov
insb
inc
testl
xorb
incl
xchg
sub
mov
mov
and
push
cmp
jge
cwtl
arpl
loopne
mov
sbb
bnd
sbb
mov
shlb
jg
dec
call
insl
js
out
mov
mov
enter
faddl
movswl
mov
jp
sbb
mov
and
jo
mov
mov
je
das
pcmpeqb
scas
add
inc
cmp
negb
mov
cmp
cmp
ret
push
cmp
sbb
scas
dec
add
adc
push
mov
add
rolb
sbb
pop
lock
and
loop
adc
mov
jg
test
pop
sarb
nop
fwait
jnp
daa
push
pusha
xchg
push
popa
lods
xor
les
gs
sub
and
hlt
xchg
scas
sbb
mov
clc
adc
mov
inc
jecxz
sub
jno
je
cmp
fstpl
adc
andl
xchg
int3
loopne
roll
add
xor
or
xchg
cs
lods
test
sbb
sub
test
lcall
xchg
dec
xlat
mov
xchg
mov
addr16
dec
scas
in
sbb
sub
arpl
mov
rcl
lods
nop
cltd
xorb
scas
inc
xor
setno
and
pop
adc
pop
out
adc
lret
sahf
push
add
adc
push
outsl
push
mov
fwait
insl
mov
bound
adc
std
incl
test
out
adc
jmp
orb
cld
sbb
retw
mov
adc
les
fisttpll
popa
pop
lcall
push
fcoms
mov
add
cmpsl
and
push
or
stos
cmp
pop
aaa
les
jl
inc
je
lods
add
in
push
popa
add
and
js
mov
sbb
test
sbb
lcall
cld
aaa
cld
cmp
dec
ret
out
shrb
xor
adc
stos
inc
jl
or
push
and
dec
cmp
popa
shrb
inc
stos
outsb
pop
sbb
and
in
jle
xchg
daa
jge
ljmp
jno
mov
js
xchg
xorl
sbb
xor
fcomp
and
loope
test
std
xchg
mov
movsl
mov
test
and
fdivr
push
in
xchg
outsb
jae
xor
test
xor
xchg
lock
xor
in
cmp
dec
outsb
mov
stos
dec
add
mov
pop
sub
aam
addr16
add
les
inc
mov
jnp
repnz
mov
pop
jmp
mov
add
add
in
cmp
add
xchg
mov
ss
insl
push
rolb
sub
outsl
push
incl
xchg
pop
and
insl
add
mov
cld
fldl2e
lea
imul
sub
fiadds
mov
sbb
loopne
xchg
add
lea
dec
nop
lret
movsl
pop
movsl
aaa
pop
jne
sbb
or
push
outsl
cld
imul
cmc
daa
lods
pop
push
clc
or
sub
test
insb
lret
enter
jb
or
adc
iret
and
pop
add
data16
das
push
loope
mov
ss
mov
push
insb
insb
pop
and
dec
js
mov
je
pop
or
lret
jle
cmpsl
sahf
or
popf
call
push
iret
adc
int
mov
ret
xor
lds
das
sbb
and
sbb
in
sub
loopne
in
rcr
mov
push
mov
inc
cmpsb
ret
pusha
mov
cld
xchg
lods
push
jl
lods
sbb
pop
xor
adcl
mov
lods
jge
add
inc
cmp
popf
mov
insb
movsb
jo
or
ret
mov
test
enter
insl
div
jg
repz
jns
orl
xorl
pop
stos
jb
mov
aam
hlt
cmp
cmc
xor
test
add
mov
cli
or
pop
ljmp
fsub
sub
mov
push
leave
cmp
dec
unpckhps
add
mov
xchg
pop
cmp
nop
fwait
mov
shll
mov
fbld
pusha
push
and
outsb
lds
xor
cli
xchg
mov
test
inc
dec
and
pushl
nop
inc
dec
mov
test
das
cmp
or
ljmp
inc
xchg
inc
or
xchg
mov
jne
stos
dec
into
or
dec
ss
adc
data16
sub
imulb
mov
pop
and
ss
out
or
shr
cld
movsb
add
gs
inc
sar
mov
sub
icebp
ret
adc
cmp
inc
inc
and
xchg
bound
shl
lret
fsts
in
sbb
push
movsbl
or
clc
js
out
jle
mov
push
flds
in
lods
in
mov
jl
testb
sbb
pop
push
and
pop
sub
xchg
test
pop
add
and
loope
jecxz
mov
or
mov
popf
cmpsb
add
nop
pusha
and
dec
xor
clc
push
or
pop
rcll
pop
cmp
push
or
fadds
sub
shl
into
sbb
jl
mov
or
lods
mov
add
and
adcl
cltd
add
xlat
cld
push
jle
mov
shlb
sub
xor
cmp
rcr
add
mov
scas
gs
jp
xor
pop
hlt
xor
push
pop
cmp
jge
inc
push
cmp
and
insb
jo
cmpsb
push
pop
ljmp
cmp
sbb
jg
bound
push
sub
or
dec
call
nop
clc
xor
push
sub
in
mov
frstor
dec
fsubr
incb
subl
lock
test
lahf
cmpsb
ret
inc
testb
sbb
test
inc
pop
fsubrs
inc
pop
sbb
pop
stc
jmp
cld
xchg
cld
jp
inc
jp
sbb
push
cs
popf
xlat
add
rorl
sbb
imul
call
cpuid
add
popf
mov
fs
clc
xchg
rorb
xor
cmpsl
xchg
subb
mov
fdivp
je
movsb
popa
iret
int3
jbe
loopne
bswap
adcl
push
push
clc
out
xchg
sub
fiadds
jmp
int3
mov
addb
jg
cmp
mov
jp
mov
sbb
mov
mov
cmpsb
mov
fwait
push
push
js
or
insl
or
sub
rorl
xchg
or
xchg
xchg
and
pushf
popf
mov
inc
lret
and
pop
add
pusha
cmp
jno
mov
or
popa
cmc
sub
shlb
jbe
xor
imul
adc
and
inc
xbegin
cmovno
jge
push
adc
pop
adc
aam
lds
hlt
rcrl
in
add
orl
test
add
pop
pop
add
or
sbb
shrl
fnstsw
popa
and
cltd
fcmovbe
jp
inc
dec
xchg
sub
enter
mov
mov
mov
inc
xchg
mov
fiadds
xchg
and
test
xor
sub
push
add
stc
cmpsb
jl
ficoml
les
gs
fcompl
jl
movsl
dec
sarb
jmp
xor
inc
push
cmp
and
mul
mov
inc
lds
call
test
pop
mov
pop
mov
add
or
sbb
nop
dec
mov
cmp
add
addl
fst
test
inc
adc
sbb
push
inc
xor
aaa
push
mov
enter
push
inc
jo
cs
mov
xchg
js
lods
stos
call
add
inc
repz
and
stos
mov
sbb
push
das
ret
jno
mov
and
mov
jmp
mov
dec
mov
mov
dec
inc
mov
jecxz
ds
cmpsl
add
loop
mov
pop
mov
dec
mov
negl
mov
jb
push
sti
push
or
add
sub
sahf
jle
pop
scas
push
xchg
mov
fwait
push
popl
loope
or
fimuls
jl
push
xchg
call
jp
into
xchg
xchg
and
in
out
xchg
outsl
add
and
incl
insb
cmp
repz
adc
sbb
xor
lahf
test
out
hlt
insb
inc
add
sbb
push
xchg
mov
stos
add
and
hlt
inc
ucomiss
adc
add
loopne
inc
push
gs
push
add
cli
call
dec
push
inc
pop
or
jg
sbb
fisttpl
pop
dec
dec
shlb
mov
push
or
ja
bound
and
cmp
les
xor
mov
dec
andl
jnp
dec
sbb
jb
cmp
fmull
repz
vsubsd
pop
pop
and
push
push
fisubrs
push
adc
push
inc
loopne
fwait
out
shl
or
or
out
inc
in
dec
aaa
jg
loopne
pop
xor
and
sub
xor
sarl
dec
jg
cmpsl
add
and
movb
loop
nop
mov
ficoml
scas
mov
mov
lock
and
cmc
clc
stos
lea
in
add
mov
sti
and
push
dec
into
mov
push
shrl
dec
sbb
adc
in
ds
cmpb
js
ret
xor
mov
jnp
outsl
icebp
jge,pt
leave
xchg
sarb
sub
lock
mov
outsl
cmpsl
sub
pop
popf
push
out
addb
jp
xchg
jns
lret
or
loop
mov
clc
sub
test
and
dec
arpl
cmp
sub
add
push
movl
ds
push
jo
mov
adcb
sub
es
leave
sbb
xor
mov
sub
pop
inc
cs
add
dec
sub
fcoms
and
push
inc
bound
ret
imul
decb
lock
repnz
lcall
mov
and
mov
sarl
or
insb
or
jp
loopne
jg
jge
mov
adc
adc
xor
je
xorl
clc
push
jne
or
jns
lds
inc
dec
jo
lods
call
sarl
sbb
inc
or
popf
insb
and
es
pop
jle
mov
add
cmp
add
sbb
sub
aaa
sub
out
call
mov
xchg
sbb
inc
cmp
jnp
shl
mov
je
push
out
sbb
mov
jmp
fs
pop
dec
pop
ret
lds
loop
je
rorb
adc
stos
mov
pushw
jp
add
mov
push
mov
sbb
sarb
adc
xor
adc
pop
sarb
fsubrs
insl
rorl
sbb
sub
outsb
outsb
sub
mov
adc
push
mov
adc
mov
push
imul
jl
gs
and
rclb
cmpsb
mov
shll
sti
movsb
push
xchg
out
inc
pusha
xchg
ret
test
jl
ss
movsb
adc
pop
mov
movsl
and
push
jle
lods
inc
notl
sbb
xor
mov
sahf
aaa
int3
ret
xchg
test
scas
ret
insb
cwtl
pop
aaa
test
adc
sbb
dec
icebp
out
cmp
lahf
notl
adcb
add
jb
scas
adc
insl
adc
js
popf
push
push
mov
mov
clc
mov
sub
sub
cmc
add
xchg
mov
add
or
subb
push
push
mov
mov
xchg
mov
sub
jae
jmp
pop
mov
jmp
cmp
adc
mov
dec
sub
mov
push
push
xchg
adc
inc
or
or
stos
test
mov
sbb
mov
jg
add
mov
push
dec
imul
pop
sub
or
inc
or
cmp
pop
lfs
gs
repnz
cltd
test
insb
outsb
pop
into
dec
lock
pop
sahf
adc
add
xchg
decl
adcl
cmp
lds
lea
pop
push
xor
mov
pop
or
xchg
outsl
mov
shl
adc
dec
jmp
ret
lds
stos
cmp
adc
push
mov
lahf
mov
and
and
stos
shrl
mov
mov
mov
fcoml
jbe
ljmp
mov
jp
pop
out
mov
rolb
mov
mov
call
push
push
mov
xchg
add
and
lods
lret
loop
sub
inc
add
sahf
fdivl
pop
jp
lret
in
rcll
push
jl
int3
mov
dec
xchg
cld
fs
jns
mov
inc
out
inc
dec
hlt
cmpsb
cmp
mov
inc
jmp
mov
andl
sbb
sub
loopne
outsl
out
aad
icebp
jecxz
and
js
cwtl
dec
pop
jl
iret
jmp
and
inc
cmp
push
out
fwait
sbb
insl
ss
ret
aam
fstpt
inc
mov
inc
jg
in
xchg
scas
lock
xor
ret
jp
nop
aas
movsb
mov
fwait
fcomip
sbb
add
in
or
add
push
cmc
push
popa
jno
aam
lcall
test
stos
into
inc
push
jl
xor
in
add
scas
sbb
or
xchg
lret
adc
and
pop
insb
add
js
add
add
adc
xchg
hlt
push
or
cmpsb
and
adc
je
xchg
repz
shlb
bound
stos
jo
cmpsl
pop
inc
xor
inc
xchg
sbb
cmpb
shlb
je
lock
pop
fisubrs
jp
cltd
or
or
jae
pop
fisttps
divb
push
fcomps
jnp
and
les
mov
daa
xchg
or
mov
add
out
pop
push
inc
jle
xor
lea
ljmp
mov
xchg
lret
ret
in
sub
lock
adc
shlb
cmp
add
sahf
fs
popf
sahf
movsb
xor
add
daa
dec
leave
or
xor
pop
mov
jno
std
dec
arpl
pop
mov
dec
sbb
and
mov
lret
ljmp
arpl
mov
or
mov
pop
add
xor
rclb
popa
ret
cwtl
sbb
sub
add
cmp
fwait
or
sub
decl
fidivrl
or
xchg
clc
pop
lret
pop
fiadds
dec
cmp
andb
outsb
mov
pop
incl
imul
mov
test
lods
dec
ds
and
roll
sbb
std
rcl
int3
popf
ljmp
xor
loop
leave
loope
sti
xor
dec
test
call
lahf
pop
push
pop
gs
mov
clc
mov
push
mov
sbb
and
xor
inc
push
ljmp
pop
add
outsb
cmp
add
pop
or
push
rclb
lods
mov
cltd
in
xchg
test
fiaddl
lcall
sbbl
ficomps
int3
mov
movsl
lock
pop
push
int3
mov
cmpsb
insb
push
jp
sbbb
inc
addl
jle
cmc
mov
jge
cmpb
push
mov
stos
std
mov
mov
or
fisttpll
ret
js
scas
fisubl
call
xor
push
pop
mov
xchg
ret
loop
mov
inc
pop
imul
out
js
mov
sbb
js
mov
pop
xor
call
pop
in
loop
cmp
adc
xchg
lods
imul
mov
pop
pop
cmp
hlt
sbb
addb
lcall
and
jl
mov
push
adc
add
aas
cmpsl
into
mov
push
outsb
lret
frstor
std
scas
mov
das
and
negb
cmp
pop
mov
xor
adc
add
loope
dec
jp
jmp
pop
mov
adc
outsl
push
loopne
cltd
call
dec
enter
loopne
add
popa
arpl
or
aam
and
fsubr
gs
loopne
mov
loop
sbb
sbb
jne
xchg
sbb
sbb
mov
and
xor
inc
addl
mov
movsb
divb
dec
mov
push
xchg
test
push
sbb
ret
icebp
sbbb
sub
sbb
and
decl
xor
popa
or
scas
shrl
cltd
jmp
adc
cmpsl
mov
fst
je
mov
enter
jl
dec
popa
mov
xor
es
push
incl
adc
sbb
mov
or
xorl
jp
popa
enter
pop
mov
push
hlt
mov
adc
test
ljmp
jl
mov
lahf
xor
xchg
mov
cmc
pushf
sub
cmp
outsl
xchg
pop
stos
enter
xor
push
lcall
out
or
outsl
inc
in
subb
sbb
xchg
push
arpl
jmp
push
cmp
xchg
add
inc
pop
lock
ss
cmc
stos
aam
leave
lahf
shlb
xchg
cmp
mov
pop
adc
ds
clc
ret
or
cmp
or
ljmp
mov
fildll
pop
cmpps
xorb
adc
sub
mov
addb
shr
shrb
sarl
es
incb
test
push
xchg
cwtl
decb
subl
arpl
mov
and
xchg
es
std
jg
aad
imul
cmp
mov
mov
mov
into
mov
cli
int
jbe
lock
push
or
lods
nop
scas
int
jl
das
ret
pop
jno
shl
or
hlt
mov
mov
jnp
jl
xor
push
jmp
test
mov
jl
inc
es
mov
add
shl
pop
js
jle
dec
xor
nop
aaa
dec
or
icebp
bound
fwait
or
cmpsl
and
sub
push
mov
icebp
pop
je
pusha
in
jmp
insl
xor
dec
adc
adc
and
mov
sub
jmp
cs
mov
or
xor
push
mov
and
test
test
dec
cmpsl
mov
jg
and
lea
jno
mov
es
xor
jge
adc
sbb
pop
fiadds
outsb
jl
ficomps
testb
pop
mov
jp,pt
lcall
lods
ds
scas
and
iret
mov
or
mov
imul
xchg
sahf
fmuls
add
adc
movsb
mov
shlb
cmp
mov
mov
mov
jge
jne
es
pop
mov
rorl
add
inc
adc
stos
pop
cld
sbb
jno
mov
mov
push
lcall
cmpl
adc
mov
das
add
in
rol
push
add
popa
cmpb
jbe
aas
mov
ret
mov
je
jle
fiadds
mov
out
inc
push
loope
pop
sbb
sti
call
mov
out
sbb
jmp
mov
dec
mov
cmp
cmp
and
fimull
lahf
loopne
xchg
push
in
mov
xchg
mov
sbb
rorb
insl
mov
cli
incl
sub
shrl
dec
xor
mov
xchg
pop
and
das
and
fs
mov
mov
lock
jecxz
xchg
push
jl
imul
dec
std
mov
cli
sub
shrb
push
fstpt
fstps
loopne
rolb
jecxz
jecxz
mov
pmullw
and
xchg
arpl
cli
dec
les
xchg
and
mov
push
xchg
inc
mov
jmp
push
and
mov
in
scas
mov
add
push
orb
jle
arpl
fdivs
xor
ljmp
inc
lcall
mov
jns
ljmp
sub
adc
xchg
sub
sbb
cmc
jb
pop
adc
mov
lock
sbb
call
sbb
rcrl
fiaddl
in
xchg
mov
cli
pop
icebp
adc
mov
xor
push
add
mov
mov
pop
neg
sbb
sti
outsb
mov
mov
mov
mov
mov
sbb
jo
addr16
pop
add
sbb
push
xor
insl
lret
aas
fcomi
xchg
jle
mov
fimull
pop
sub
fsubs
add
cltd
fs
stos
push
cld
pusha
mov
push
fsubl
adc
loop
hlt
clc
lahf
movsb
sti
and
insb
jge
je
movsl
shr
sarl
ret
fiaddl
jecxz
shlb
addl
fs
mov
sbb
and
call
aad
fstpl
add
xchg
pop
popf
mov
outsb
push
addr16
push
rcr
inc
sahf
pop
push
sbb
in
testb
aam
push
out
jne
mov
dec
popa
adc
and
and
cmp
push
xor
add
inc
xor
lds
lcall
jb
hlt
and
icebp
sbb
aaa
je
cmp
es
imul
ljmp
into
pop
sbb
add
cmp
xlat
push
cmp
jl
es
sub
xchg
pusha
jo
or
sbb
imul
inc
sbb
in
jno
call
xor
aad
xchg
sub
std
pop
icebp
cmpsb
add
and
into
lahf
jo
and
adc
lock
sbb
stos
jle
std
loopne
mov
pop
mov
add
int
movsb
fsubp
inc
push
das
mov
ret
decb
out
jo
jns
add
cmp
mov
push
mov
mov
test
inc
enter
in
sub
mov
in
addb
dec
add
cmp
das
fsts
pop
push
lret
sarb
or
frstpm(287
sbb
xchg
shrb
sub
xchg
mov
mov
xor
and
sahf
cmp
cmp
xor
pop
jnp
add
push
filds
aaa
sub
mov
sub
cltd
ficompl
iret
and
clc
dec
mov
out
stc
mov
inc
xor
imul
arpl
in
cltd
mov
dec
in
je
xor
cld
mov
jecxz
andl
mov
aam
pusha
sbb
addr16
mov
fisubl
add
xchg
adc
daa
sbb
sbb
push
add
adc
cmc
js
jp
xor
pop
cmpsl
pop
pop
das
dec
ficomps
and
jo
incb
sarb
test
lods
fiadds
add
ret
cld
icebp
push
or
push
or
xchg
out
ret
fwait
lcall
mov
push
dec
call
inc
pop
cmp
ljmp
or
push
inc
sub
jl
arpl
or
gs
cmp
adc
jbe
in
mov
loope
push
adc
cwtl
adc
mov
outsl
mov
in
and
clc
xor
pop
xor
jnp
jmp
lcall
cs
jmp
add
push
mov
fisubrl
adc
ret
adc
dec
rcrb
adc
cld
bound
or
ljmp
cld
jmp
loopne
xor
cmpsl
push
or
mov
lock
sbb
mov
rolb
sbb
push
push
inc
push
call
sub
sub
mov
jl
lcall
push
adc
gs
lcall
cmc
mov
sub
pop
sbb
and
fidivrs
inc
adc
js
push
and
shlb
pop
inc
jns
mov
mov
adc
lret
ja
mov
add
pop
shll
faddp
fisubl
fcoml
cmp
mov
hlt
mov
sbb
xchg
cmpsb
xchg
lea
push
adc
sbb
sub
sbb
repz
cli
mov
pop
test
les
test
cmpsb
pusha
mov
push
xor
pushl
xchg
xlat
int3
dec
and
xor
inc
dec
fcmovbe
and
jbe
data16
or
popf
test
fadds
mov
ss
std
andb
jmp
int3
pop
adc
mov
add
cwtl
ror
hlt
outsl
adc
mov
xchg
lea
outsb
into
shrb
jge
sub
mov
push
test
and
or
sub
sbb
shll
into
rol
int
mov
fimull
cmpsl
testb
popa
jae
and
jecxz
cmp
pop
mov
push
aad
inc
jecxz
orl
nop
or
mov
popa
fstps
cmp
cmpsl
aas
shrl
insb
rclb
into
dec
pop
js
dec
cmp
popa
add
jle
pop
adc
ds
rcll
xlat
cmp
sbb
outsb
adc
mov
mov
fdivp
call
iret
or
xchg
scas
outsl
lret
sub
xor
divb
test
mov
outsl
cli
pop
dec
lret
lock
cld
pop
cmc
adc
dec
lret
inc
pop
outsb
xchg
mov
push
mov
in
in
aas
lea
rolb
test
clc
or
popa
sti
xchg
ret
daa
stos
mov
test
and
and
xor
push
jb
cltd
aam
mov
lods
push
add
xchg
inc
es
test
jl
xchg
es
lea
lods
mov
imulb
jmp
call
push
sub
aad
push
dec
sbb
shrl
mov
jbe
scas
jo
imul
add
sub
iret
call
and
inc
mov
inc
mov
test
xlat
and
out
lods
sbb
shrl
aaa
push
jno
adc
lret
popf
mov
lcall
push
and
pushf
push
cmp
adc
aas
shrb
cwtl
lea
add
out
movsl
push
jecxz
add
inc
mov
icebp
mov
shll
popf
or
out
sar
or
fbld
pop
ficoms
loopne
test
rcl
cmp
or
cmp
loopne
adc
popf
jecxz
shlb
pop
out
dec
fwait
xor
mov
add
push
inc
es
sub
xorl
xchg
add
test
daa
cmp
in
adc
mov
pop
sbb
nop
sbb
or
loopne
inc
jno
mov
inc
xchg
out
inc
jbe
sbb
pop
data16
add
cmp
fcmovnu
jnp
mov
pop
xor
mov
push
xor
sarb
ds
add
xor
mov
pop
fdivrl
cld
lock
jae
movsb
aaa
insl
sahf
jge
jae
aas
xlat
pop
sbb
cmp
or
push
ds
aaa
adc
and
adcb
mov
xorl
incl
stc
adc
ss
in
mov
imul
inc
es
scas
cli
mov
std
or
mov
inc
shrl
push
xchg
pop
outsb
inc
mov
sbb
push
call
inc
lock
sub
xchg
cli
add
mov
dec
jp
or
add
add
cmp
aad
and
mov
cwtl
repz
add
js
xor
jg
mov
inc
push
adc
sbb
or
loop
lret
pop
dec
das
inc
outsl
dec
xor
inc
pop
loop
clc
loop
movsb
mov
jb
xor
inc
xlat
push
sti
add
push
jl
das
ss
aas
andb
hlt
jo
dec
out
mov
lods
add
push
in
jge
out
outsl
test
push
pusha
sub
add
mulb
int3
ret
repnz
stc
pop
mov
das
lcall
pusha
cmpb
xor
std
mov
xor
je
sbb
mov
mov
sar
icebp
adc
cwtl
push
xchg
push
ficoml
xchg
je
or
and
inc
cwtl
mov
sbb
mov
mov
pop
mov
jo
test
mov
test
inc
dec
inc
cmp
sub
cmc
repz
sbb
mov
iret
xor
shrl
cmc
jmp
mov
mov
push
push
fmuls
frstor
and
sbb
lods
rolb
data16
xchg
mov
dec
mov
adc
mov
test
and
std
mov
fsubr
inc
xchg
sub
mov
sbb
adc
jl
hlt
roll
sar
sbb
add
sbb
ret
push
test
xor
xchg
clc
adc
loope
push
cmp
repz
mov
leave
mov
jg
xorl
mov
popf
push
gs
mov
xchg
icebp
dec
pushl
inc
in
push
mov
or
and
adc
pushl
sbb
mov
cmc
lret
imul
popf
dec
xor
mov
or
lahf
lods
adc
push
adc
testb
jbe
hlt
in
bound
jbe
in
adc
xchg
mov
xchg
pushf
vmovntps
inc
xchg
mov
rorb
js
cmc
adc
int3
test
add
or
push
loope
push
add
or
ret
mov
cmp
sub
dec
xor
inc
aaa
inc
push
lods
sub
movsl
lock
adc
aam
out
cld
int3
xchg
das
std
adc
hlt
pusha
pop
je
mov
xor
adc
aas
loope
out
and
ljmp
xchg
inc
lock
in
shrb
or
into
jg
add
mov
adc
dec
jne
scas
push
test
pop
pop
daa
das
sti
in
adc
lds
and
das
and
pop
sub
test
arpl
in
jg
shlb
mov
add
sbb
cmp
pop
sbb
cmp
mov
insb
jl
cwtl
pop
mov
pop
sbb
xchg
add
mov
in
xchg
jo
or
sub
xor
rorb
out
inc
add
out
xor
jl
lahf
loopne
xchg
mov
clc
loopne
xchg
sub
movsb
mov
lods
lret
add
mov
idivl
jno
or
pop
push
inc
arpl
pusha
imul
movsb
mov
xor
mov
aaa
sbb
cmp
mov
adc
insl
jmp
cwtl
fisubl
and
into
arpl
push
in
pop
movsl
lock
fbstp
stos
sub
rorl
or
xchg
lahf
cs
ret
pop
mov
ss
dec
loope
nop
leave
inc
sbbl
jnp
dec
mov
add
bound
jge
or
loop
addb
xor
xor
cli
push
jo
in
fs
jno
jae
jnp
ss
je
or
xchg
in
or
mov
pop
in
xchg
jle
cmp
fwait
and
inc
icebp
push
fsubrs
ficomps
shrb
lods
mov
lea
sarb
dec
adc
and
ret
lret
and
mov
mov
fs
mov
dec
push
push
push
cmp
mov
cmp
insb
lahf
inc
in
jbe
push
push
push
out
or
mov
roll
and
je
stos
ret
jl
loop
stos
in
and
pop
mov
lods
in
xchg
lods
mov
dec
adc
daa
data16
jg
fidivs
lock
mov
mov
in
jecxz
mov
mov
scas
fs
push
push
outsl
inc
sbb
mov
xchg
or
aaa
cwtl
or
ret
icebp
push
sbb
mov
adc
cmpsl
inc
in
xor
pop
and
das
gs
lock
pushf
jb
mov
adc
inc
mov
add
push
fsubs
daa
cmp
sbb
outsb
and
and
sti
lods
in
andb
inc
push
sub
add
outsl
hlt
mov
xchg
in
adc
push
fs
rorl
ficoml
fadds
add
das
scas
lock
mov
xchg
clc
and
insb
test
xchg
lret
out
or
inc
adc
icebp
mov
or
mov
sbb
in
sbb
arpl
push
fsubrp
lds
int
lods
out
pushf
enter
mov
xchg
cmp
or
lahf
mov
pop
sbb
xor
ja
clc
pop
ds
dec
add
or
repnz
shlb
push
mov
lret
xor
aam
lret
cmp
dec
ljmp
cli
sub
ljmp
loope
notl
stos
mov
pop
xlat
xor
nop
into
addw
ret
rcrb
sbb
loop
rolb
mov
int3
dec
push
out
mov
jl
cli
pop
aas
cmpsb
xor
push
sub
mov
in
inc
sub
in
adc
sbb
push
loop
inc
insb
cmc
inc
or
repz
jo
cld
repz
mov
mov
xor
fnstcw
loope
xchg
add
push
pop
push
xor
xlat
imul
jo
cmc
lock
enter
xchg
jno
pop
add
jb
sub
add
scas
sub
mov
dec
adc
mov
shlb
fcoms
js
jle
add
mov
sti
sub
inc
and
inc
cmp
inc
fmuls
jo
push
enter
sub
jmp
sub
xor
imulb
inc
push
push
lcall
nop
push
xchg
stos
scas
push
movsb
mov
ljmp
dec
mov
idivl
or
mov
test
xchg
rcrl
jp
push
mov
fsubrl
sbb
xor
andb
out
jecxz
pop
mov
xor
nop
or
test
into
lods
out
dec
negl
scas
and
ret
pop
clc
loope
pop
ret
sbb
pop
imul
mov
lock
je
fdivl
push
mov
pushf
fidivs
adc
xchg
sbb
add
pop
in
pop
outsb
push
fidivrs
mov
sbb
in
out
mov
dec
cmpl
and
add
sub
pop
test
mov
flds
jne
fnstsw
lret
sub
mov
dec
mov
dec
adc
es
dec
adc
shlb
jl
mov
push
push
lock
sahf
sbb
adc
pop
jl
adc
loop
adc
adc
mov
push
ss
add
xlat
sub
std
cltd
pop
add
fstpt
sarb
repz
idivb
aad
xor
in
or
ss
mov
inc
ret
out
pop
mov
jmp
test
adc
xor
fdivrl
mov
popf
ja
dec
cmp
xchg
jl
mov
mov
or
or
dec
insb
adc
scas
mov
iret
push
lahf
fwait
add
inc
mov
jb
inc
test
sub
movsb
jle
sub
bound
aaa
mov
or
mov
imull
xor
add
stos
lock
and
pop
cmp
dec
in
andb
xchg
mov
je
pop
cmp
outsb
test
test
insl
fcoms
dec
mov
aad
pop
cmc
popf
dec
out
sub
mov
std
sarb
sti
icebp
stos
and
pushf
repnz
fs
insb
loopne
dec
xor
lret
fistl
loopne
mov
jae
mov
pop
adc
dec
cwtl
fcoml
mulb
loopne
cmp
aam
test
xchg
lret
lea
mov
and
push
cmp
dec
xchg
mov
cltd
push
push
mov
inc
into
dec
or
push
push
jle
sub
cltd
shlb
loopne
add
push
ja
xorl
mov
sbb
adcl
leave
dec
sub
std
and
cs
pop
pop
dec
out
push
test
mov
into
push
les
mov
inc
lods
pop
les
push
push
test
add
out
int
push
sbb
js
jecxz
lea
lods
movsl
fwait
rorb
cmp
xchg
mov
fsubs
ljmp
mov
dec
cld
mov
shlb
adc
lods
cmc
loopne
std
mov
clc
lcall
xchg
pusha
les
or
sub
dec
adc
push
and
js
fwait
push
adcb
ss
fwait
push
test
hlt
pop
dec
pop
pop
sbb
call
fidivrs
mov
inc
fiaddl
add
dec
xor
mov
pop
push
sbbl
or
xchg
dec
push
jp
add
dec
cmp
orb
cmp
les
scas
pop
mov
xchg
mov
mov
std
adcl
jo
scas
clc
push
ret
rcrl
add
add
leave
es
rolb
jg
sbbb
dec
jns
aad
imul
in
push
inc
push
loop
mov
jg
inc
xor
dec
int
add
cmp
pushf
mov
sbb
mov
inc
cli
dec
mov
int3
idiv
cs
shr
mov
sub
shll
or
fadds
ds
dec
aam
inc
push
in
mov
mov
push
ret
stos
pop
ja
xchg
repnz
ficoms
add
int
insb
mov
pop
dec
outsb
rcll
aad
mov
pusha
sub
dec
divb
cmpsb
mov
pop
loope,pt
jl
subb
popl
leave
sahf
hlt
iret
jnp
sbb
fidivrs
fs
inc
js
cmp
nop
sti
dec
jge
nop
stos
cs
inc
rcrl
mov
push
movl
add
mov
mov
mov
add
int3
fistl
and
loop
insb
cmp
cmpsl
out
loope
push
clc
jmp
xchg
lods
dec
pop
add
xchg
fidivrl
xor
add
daa
pop
jmp
in
add
adc
ljmp
lahf
or
fcoms
mov
int3
call
add
add
fdivl
sbb
cli
cmp
or
push
sbb
add
cwtl
pop
ficomps
test
rorl
insb
sbb
push
sub
divb
idiv
adc
mov
mov
add
aam
mov
sarl
jge
dec
data16
hlt
idivl
pop
shr
push
aam
pop
insb
imul
mov
shll
pop
jle
test
clc
scas
mov
orb
les
fwait
adcb
dec
sub
sbb
loope
rcll
add
test
fdivrl
mov
test
inc
loop
ud2
add
cmp
fs
hlt
mov
mov
sub
in
inc
jmp
and
sarl
jns
jb
fdivrs
repnz
rcrb
xchg
fadds
into
inc
pop
imul
sbb
sub
mov
add
push
daa
dec
jl
adc
mov
mov
fists
xor
loopne
rcl
hlt
repnz
cmp
push
mov
push
mov
iret
and
xor
arpl
popa
mov
cs
and
mov
rclb
inc
mov
cmp
push
xor
jne
dec
mov
out
sbb
shr
pop
mov
xlat
lcall
inc
scas
mov
push
and
outsb
mov
ss
and
mov
mov
stos
addb
cmpsb
or
push
pop
lds
push
mov
in
mov
adc
cmp
cmc
stc
mov
imul
data16
adc
or
pop
in
shll
or
js
add
cmp
dec
loope
pop
addl
sahf
and
shlb
incb
les
sbb
jp
sbb
sarl
or
outsl
fcoml
mov
sub
add
push
ja
fisttps
out
icebp
imul
mov
push
fsub
aad
sub
dec
sbb
lret
int
pop
rclb
adc
jp
push
add
xchg
lods
lcall
pop
xlat
mov
or
or
sub
jno
insb
xchg
icebp
jb,pn
xor
cld
aad
cmpl
cmp
fcoml
pop
fisttpl
inc
mov
inc
ds
cli
mov
xor
imul
sub
sbb
mov
popf
or
fwait
aaa
dec
rcr
in
lods
jp
mov
mov
add
fcom
sub
jno
leave
sub
and
add
xchg
mov
mov
inc
adc
loope
bound
mov
mov
fisubs
rclb
sbbl
inc
cmp
popa
ret
and
pop
sub
fcoms
pop
les
or
dec
cmp
test
scas
rorl
loop
xor
mov
sarb
inc
repnz
stc
fwait
lock
cmc
cmp
pop
cmp
push
inc
push
dec
sub
js
sbb
insb
add
dec
insb
add
fisttpll
pop
dec
mov
subl
add
sbb
pop
and
popa
jl
mov
aaa
cld
push
test
loop
in
xor
ret
ret
clc
and
push
es
es
jg
fisubl
cli
sbb
repnz
fwait
push
pusha
roll
pop
fstpt
adc
dec
xchg
fstl
inc
xlat
sbb
js
insb
lret
push
ss
push
mov
jge
outsb
je
push
xchg
aad
data16
js
sbb
pop
dec
sub
scas
shrb
xchg
stc
jge
add
inc
scas
sbb
ret
pop
adc
das
push
lret
sbb
popa
xchg
das
inc
lret
mov
adc
xor
icebp
stos
mov
test
jo,pt
and
jl
cwtl
outsb
dec
push
mov
pop
lods
adc
xchg
ds
xchg
ret
aas
fnsave
jl
in
push
mov
hlt
out
xorl
add
add
loopne
dec
mov
jo
je
adc
mov
dec
stos
and
jle
inc
stos
push
pop
rorb
pop
stos
ss
data16
push
orb
sti
mov
mov
rcrb
das
xchg
push
sbb
push
test
insb
pop
xor
sbb
stos
sahf
lds
cwtl
cmp
mov
dec
cmp
rolb
xchg
loopne
mov
mov
aas
movsl
pop
jge
pop
sbb
psrld
ret
scas
pop
cmp
enter
xchg
test
push
mov
stos
xlat
sub
aas
fildll
xor
iret
cld
adc
or
jnp
add
mov
clc
xchg
dec
or
in
or
out
lahf
repnz
pop
jns
xor
loopne
jge
add
shrl
aaa
ret
out
sbb
push
xor
pushf
jmp
adc
das
sbb
data16
mov
dec
lock
fimuls
add
add
and
loopne
fbld
mov
sbb
sbbb
mov
mov
sbb
fdivrs
push
dec
clc
add
shl
lods
add
jne
out
adc
mov
dec
repz
dec
ret
jmp
pop
mov
mov
cmp
push
lods
jo
mov
mov
add
call
dec
dec
sub
andb
mov
mov
aam
push
mov
es
dec
xchg
cmpsb
cmpsl
xor
ret
jp
mov
std
stos
daa
push
icebp
sbb
outsl
cmp
jge
cmp
xchg
xchg
and
popa
je
pop
ss
inc
or
sti
xchg
cwtl
shrl
and
add
jl
jbe
ss
shr
lret
jecxz
sbb
sti
movsl
push
pop
jge
inc
ret
rcll
add
lea
stc
test
test
repz
inc
and
fisttps
or
out
movsb
jb
mov
je
repnz
lock
mov
sub
mov
fstps
fcoml
imul
ret
mov
and
stc
xchg
mov
dec
lahf
mov
xchg
mov
xchg
fisubs
and
or
std
dec
ret
pop
movsb
push
or
push
jp
add
mov
cwtl
xor
or
jle
mov
mov
outsl
arpl
inc
gs
cmp
inc
in
nop
add
hlt
mov
xor
lock
call
sti
pop
sub
push
enter
mov
xchg
mov
mov
mov
push
dec
fs
cmp
call
pushf
mov
push
mov
add
lock
mov
ds
inc
mov
push
fstpt
mov
ja
fstpl
push
sbb
movsb
scas
rcll
jo
stos
mov
sbb
mov
adc
pop
xchg
rolb
sti
pop
jbe
xchg
test
xchg
xlat
clc
mov
lea
ret
mov
cli
and
jnp
fs
and
fnstenv
pusha
jl
push
sub
loopne
movsb
xchg
and
icebp
stos
faddp
add
xchg
push
call
mov
push
das
pop
call
sub
rcrb
imul
mov
mov
inc
adc
xchg
jne
imul
pusha
sti
mov
int3
mov
add
pop
xorb
jg
cwtl
pop
cmp
lods
sbb
mov
hlt
pop
pop
insl
shlb
jp
add
ljmp
dec
dec
bound
loope
rcrb
jecxz
cli
fmul
xchg
and
mov
jne,pt
jne
adc
lods
iret
mov
je
mov
jmp
mov
lods
push
inc
jb
sub
popf
fsubrp
inc
ja
mov
sbb
push
pop
and
inc
ret
push
lock
jo
xchg
out
mov
add
aas
add
idivb
lods
jl
or
in
push
add
inc
call
sbb
xor
lahf
pop
pop
sub
das
and
fnstsw
push
xor
cli
push
adc
mov
mov
aaa
repnz
mov
ja
movsl
aad
and
mov
add
lock
ret
adc
dec
fidivrs
data16
cmp
push
xchg
gs
mov
xor
rolb
icebp
iret
test
mov
pop
and
cwtl
cmp
or
aaa
xchg
das
pusha
or
xchg
xlat
cmp
jnp
adc
inc
jge
xor
mov
movsb
sbb
mov
pop
dec
pop
adc
sub
sti
mov
inc
adc
rclb
popf
in
and
stc
cli
add
in
xor
sbb
dec
std
nop
inc
inc
or
pop
cmc
adc
mov
pusha
and
in
and
loop
test
adc
jbe
mov
enter
nop
sub
inc
out
test
pushf
adc
mov
cld
repz
pop
mov
fildl
xor
pop
lret
shr
xor
or
pusha
pop
jbe
stos
sarl
lea
jns
arpl
imull
mov
cmp
pop
f2xm1
loope
xchg
jecxz
sti
mov
jge
aad
pop
pop
pop
cmp
shll
or
pusha
add
mov
jmp
push
xchg
fcomps
jns
fcomps
jecxz
lret
imul
mov
mov
mov
add
mov
aaa
inc
insl
pusha
mov
sbb
sub
lods
add
and
jb
mov
mov
jle
add
lock
push
and
push
pop
iret
fstpt
dec
jp
and
push
lds
clc
inc
pop
pop
cltd
cs
xchg
cmp
sub
nop
fiadds
pusha
jmp
ret
pop
xchg
es
mov
insl
call
push
inc
add
sub
enter
test
sahf
xor
daa
fwait
and
pushf
insb
adc
sbb
mov
aaa
fwait
sub
mov
dec
cmp
decb
pop
xlat
loopne
aas
mov
adc
push
xor
shlb
pop
add
cmp
lcall
in
test
sub
adc
out
push
ds
mov
repz
int3
mov
roll
jae
loope
sbb
dec
push
scas
rolb
jb
in
push
jae
inc
test
imul
orb
cmp
hlt
pop
fwait
jmp
scas
in
repz
add
cmp
lock
jle
mov
xor
mov
outsb
aas
xor
andl
in
push
inc
inc
int3
sbb
adc
loope
bound
cmp
jo
pop
dec
loop
mov
and
inc
mov
mov
sbb
loope
mov
mov
dec
scas
mov
xorb
hlt
hlt
pop
add
in
cwtl
lret
sahf
icebp
ficoms
sub
js
push
in
dec
dec
pop
hlt
mov
int3
fiaddl
xchg
idiv
cmp
imul
xchg
mov
jns
in
xor
pop
arpl
and
int3
add
inc
cmp
xor
into
inc
call
addb
sbb
nop
mov
call
push
ret
add
aam
jb
stc
sbb
and
add
add
addr16
cmpsl
add
call
dec
loopne
js
ficompl
popf
or
mov
scas
add
mov
shrl
dec
xor
into
and
sbb
xchg
dec
jge
lock
xchg
lock
adc
pop
outsl
ret
cmp
fisttps
mov
jo
mov
ficoml
mov
dec
cmp
adc
mov
mov
nop
stc
cli
push
mov
mov
lods
addb
mov
rcll
dec
cltd
xor
sbb
mov
out
mov
cld
sbb
dec
inc
mov
popa
jae
arpl
rolb
sub
and
ret
lea
loope
adcb
jae
jne
out
jl
sbb
outsl
xor
aaa
loope
sbbl
int3
jge
cmp
shlb
jecxz
rcll
stos
aam
pop
ds
stc
test
jle
lods
add
xchg
pop
xchg
popf
dec
mov
in
aad
adc
stos
aaa
adc
cmp
mov
and
or
stos
js
xor
aam
sub
add
cmp
or
sub
fldcw
adc
pushf
xor
push
sbb
in
into
jl
adc
repnz
add
es
test
cmp
rolb
sti
lds
jle
daa
mov
xchg
xlat
mov
cmp
mov
shll
xor
add
aaa
cs
lea
xchg
push
leave
xchg
pusha
hlt
addr16
inc
int
xor
adc
enter
scas
stc
test
sahf
aas
bound
ds
or
dec
mov
pop
mov
hlt
call
pushl
scas
ret
nop
out
jnp
jne
add
sbb
sbb
lret
enter
pop
loope
movb
jp
push
fnstcw
add
inc
xchg
dec
mov
or
sahf
mov
enter
jmp
fidivrl
pop
push
and
sbb
sahf
push
lods
in
xor
add
push
add
dec
mov
inc
ds
push
cld
mov
adc
and
xlat
or
mov
inc
pop
xor
int3
dec
jecxz
cmp
rcl
add
scas
pop
or
mov
add
fs
sbb
adc
push
inc
add
es
mov
test
mov
movsb
shlb
cmp
sbb
xchg
xchg
cmp
mov
jge
cmpsb
add
xchg
xorl
xchg
or
cmp
loopne
loop
lcall
fld
push
inc
add
hlt
aam
adc
push
repnz
or
inc
mov
sbb
pop
push
mov
lds
add
adc
pop
nop
push
loope
sar
repz
pop
filds
mov
dec
in
jo
scas
mov
test
pop
sbbl
enter
test
xor
cmp
push
adcl
lcall
or
repnz
adcl
xchg
repnz
or
dec
neg
adc
mov
ret
lea
shll
or
inc
mov
jg
jbe
mov
cmc
test
adc
sbbb
push
lods
arpl
mov
into
and
ficoml
cmpsb
outsb
imul
out
in
sub
push
shll
adcb
test
int
jae
shl
push
and
pop
ret
adc
call
lret
inc
in
xchg
add
nop
loop
loop
lret
fadds
cmp
clc
dec
push
xchg
push
out
push
sbb
cmp
xchg
aad
jmp
je
push
fsubl
or
cmp
dec
sar
push
xchg
or
ja
nop
gs
sub
lock
sbb
mov
mov
mov
fistpll
fs
jmp
les
inc
jge
aaa
mov
lock
sub
and
popa
frstor
cmpsl
fst
push
ja
pop
pusha
cmp
adc
outsl
aad
pop
insb
push
or
sbb
cmpsl
dec
push
jp
ja
add
or
xchg
cmc
nop
push
in
push
inc
adc
mov
movb
sub
bound
std
sub
ljmp
dec
testl
xor
nop
inc
or
mov
mov
xchg
fs
cmp
push
stos
push
out
shlb
fsubrl
movsl
add
mov
inc
icebp
inc
insb
gs
mov
clc
inc
dec
sbb
and
mov
cmp
mov
cmp
sti
mov
mov
sbb
push
sbb
cmp
ret
pop
dec
jg
lcall
push
arpl
pop
xor
cwtl
out
outsl
fisttps
lea
arpl
push
addl
xor
add
inc
call
loopne
insl
test
test
add
ret
xor
sti
loope
mov
push
pushl
cmp
jo
sbb
mov
ljmp
sbb
sahf
push
push
lea
jecxz
js
pop
mov
cmpsl
mov
dec
sub
scas
xlat
sub
mov
push
and
mov
jae
daa
mov
outsl
jg
ja
and
mov
sub
xchg
xor
fadds
ja
mov
mov
xchg
adc
sub
xlat
enter
inc
mov
je
lcall
js
mov
rcr
add
mov
xchg
repz
scas
push
and
push
test
lods
cmp
mov
pop
pop
out
sub
shlb
clc
call
mov
add
scas
fisttpll
or
fdivrs
movhps
rorb
pop
fbld
sub
push
xor
test
loop
fcompl
push
fsubrs
dec
loope
daa
cld
jae
leave
mov
loopne
loopne
push
in
adc
adc
push
xchg
jbe
push
push
aad
fs
ss
xor
loop
pop
popf
stc
dec
or
lock
push
test
cmp
ja
mov
or
cmp
repz
dec
sub
movsb
mov
mov
fnstcw
stos
icebp
and
repz
adc
jmp
push
out
mov
js
lea
or
icebp
pop
dec
in
int3
mov
inc
mov
aas
leavew
ficoms
push
jno
xor
inc
test
xor
loopne
dec
je
imull
data16
dec
mov
dec
lret
sbb
outsl
and
sarb
mov
or
sbb
sbbb
loope
sbb
test
and
jne
fnsave
pop
or
aas
arpl
inc
orl
out
jae
push
dec
incb
and
jecxz
shll
dec
cmp
mov
mov
mull
out
stc
push
dec
mov
adc
shrd
mov
lahf
mov
push
or
and
adc
jg
shrb
push
push
cld
push
lahf
out
dec
mov
mov
icebp
push
or
int3
adc
mov
xor
mov
outsb
cli
aad
cmpsb
push
add
shr
jmp
sahf
xchg
ljmp
push
int
dec
push
or
xchg
adc
inc
sub
add
or
pop
xchg
lock
inc
mov
ror
ds
sub
adc
icebp
add
or
jae
push
rclb
inc
mov
push
test
stos
inc
fucomp
ljmp
push
sahf
movq
int
push
mov
mov
add
lods
fcompl
nop
insb
loopne
dec
sub
sub
xchg
call
out
ss
ss
xlat
xor
pop
fmul
rclb
or
xchg
filds
add
mov
cmp
mov
aas
test
mov
fcmovbe
outsb
stc
mov
jae
xor
inc
hlt
adcb
in
sub
sahf
mov
cmc
inc
push
inc
push
cld
push
adc
fdivp
mov
mov
or
insb
ds
sti
lds
mov
es
cmp
sbb
arpl
pop
cli
orb
xor
sub
out
out
xchg
xchg
jl
in
fildll
test
fsubs
sub
cltd
xchg
ret
sbb
pop
mov
pop
daa
add
aad
add
and
and
jbe,pt
ret
or
xlat
pop
mov
adc
loop
iret
mov
in
mov
jg
adc
cmp
jle
shll
add
aas
aam
decb
mov
subb
test
cmp
cmp
dec
loopne
lcall
dec
jg
aam
sarl
push
aaa
fs
cld
test
lret
push
popa
mov
call
into
cmp
push
adc
sub
sti
shll
mov
cmp
add
cmp
pop
pop
outsb
push
pop
add
aad
das
push
bound
jmp
push
xor
push
cmp
and
jno
adc
add
sub
inc
sbb
and
and
inc
jp
jnp
xor
jne
jb
test
sbb
jne
jg
xor
imul
inc
mov
mov
shrd
mov
mov
lahf
and
loopne
adc
js
add
adc
inc
aaa
stc
in
pop
js
in
push
jge
adc
sti
cmp
xchg
pop
in
notl
lods
lock
pop
push
leave
pop
add
push
js
ljmp
mov
popa
push
pop
xchg
das
push
pusha
js
outsl
ljmp
icebp
insb
xor
add
push
gs
imul
lock
dec
iret
ljmp
pop
add
xchg
aad
add
and
pusha
mov
in
dec
mov
jmp
xchg
xchg
add
lock
loopne
push
sti
mov
inc
and
dec
je
rcrb
and
xor
mov
dec
adc
aaa
test
mov
cwtl
enter
cli
shrb
loope
push
ljmp
xlat
out
or
subb
jo
mov
cli
pop
ds
dec
lahf
mov
daa
or
adc
ljmp
mov
cli
rcrb
test
outsb
mov
push
jl
xor
pop
push
dec
sbb
mov
xchg
rolb
fcmovu
push
sbb
negb
loop
dec
sub
stos
in
movsb
push
addr16
mov
int3
or
test
sub
aam
mov
mov
cli
cmpsl
loopne,pt
clc
lds
and
mov
push
icebp
mov
mov
lock
inc
fwait
mov
sbb
outsb
orb
scas
sbb
les
mov
scas
sub
dec
jo
lock
mov
ja
push
test
int3
cltd
sub
jne
mov
lcall
jmp
insb
jp
cwtl
cltd
test
cld
test
rcr
fisttpll
in
pop
test
mov
out
lahf
inc
fcoml
xchg
cmpb
mov
mov
mov
daa
add
mov
sbb
sub
sbb
mov
cli
sbb
sbb
jae
or
inc
cmc
cmpsb
sahf
mov
sahf
and
mov
mov
cs
test
mov
jne
sar
sbb
mov
cmp
movsl
adc
sub
scas
stos
rclb
js
mov
lea
mov
into
insl
push
and
rcll
mov
xor
inc
jmp
add
insl
xor
arpl
push
push
or
adc
mov
cld
adc
jl
xchg
mov
mov
mov
sahf
cmp
ja
inc
mov
adcb
cli
adc
push
enter
loopne
mov
mov
pop
stos
push
jns
sti
rcrl
push
rclb
js
xchg
into
daa
lods
sbb
push
or
loop
jge
arpl
das
dec
repz
lret
std
rcr
xor
push
pop
inc
xchg
stos
into
cwtl
daa
and
add
sbb
into
add
push
mov
mov
pop
cmp
arpl
loope
or
or
or
mov
dec
mov
pusha
fs
xor
jne
or
mov
subl
mov
mov
xchg
xor
mov
adc
or
jp
in
divl
loope
aad
jae
pop
call
mov
and
cmp
mov
andb
sbb
jp
dec
aas
mov
mov
add
jp,pt
inc
push
ficoml
iret
int
in
testb
pop
pop
cmp
pop
imul
stos
into
enter
hlt
imul
xchg
addb
add
push
ret
push
inc
ret
out
sti
insl
pop
push
mov
cmp
imul
pop
push
rolb
mov
xchg
mov
cli
jns
scas
adc
mov
pushf
clc
lock
sub
and
inc
or
push
sub
and
in
adc
arpl
pop
ds
lock
fmul
inc
pop
cmp
add
push
pop
dec
loopne
imul
xchg
cs
ljmp
sbb
sbb
call
popa
test
push
cli
test
mov
mov
sbb
or
inc
loopne
adc
pop
int
sbbl
jb
fimuls
and
add
loop
inc
or
xchg
loop
adc
add
sub
mov
mov
clc
and
outsl
imul
push
leave
in
bndstx
pusha
ss
jne
lock
clc
jl
mov
adc
xchg
mov
loopne
enter
out
cmovs
xor
and
mov
or
int3
lahf
dec
jecxz
es
push
mov
pop
ds
arpl
divb
sub
pop
push
push
jge
aam
jg
jle
movsl
pop
jle
fsubr
rolb
xor
scas
movsl
cmc
shlb
push
dec
sbb
sub
jmp
lods
add
xor
rorb
lock
cmp
or
add
push
ret
and
xor
dec
mov
xchg
pop
sar
aam
jl
ds
fists
aas
inc
lret
scas
mov
mov
mov
je
adc
sub
incb
popf
cmpsb
repz
xlat
xchg
push
cmp
test
jl
jge
lcall
fnstsw
mov
shlb
lahf
jmp
loop
arpl
into
pop
mov
jp
lds
mov
dec
jno
xor
mov
push
fsin
xor
xchg
push
pop
cmpsl
cs
rcr
inc
jno
sbb
bound
and
add
pop
arpl
pop
mov
out
ret
and
int
ret
cmp
inc
sbb
loop
sub
pop
mov
out
push
push
xchg
inc
fs
cs
imul
add
or
adc
xor
ja
aam
jmp
pop
daa
stos
or
mov
xchg
xchg
rcrb
cmpsl
lret
push
ret
lds
mov
jg
je
adc
and
jp
mov
arpl
dec
gs
stos
lahf
fwait
push
es
and
sbb
mov
adc
push
out
repz
ret
dec
pop
sbb
cld
xor
cwtl
push
gs
jmp
cmp
and
bound
mov
add
popa
mov
add
pushf
inc
in
pop
sub
arpl
ret
jnp
xchg
mov
push
xchg
xor
ret
mov
mov
mov
mov
dec
imul
sahf
mov
pushf
lods
fidivs
add
loopne
mov
mov
inc
jnp
pusha
push
push
inc
or
out
dec
xorl
mov
mov
jo
mov
xchg
aaa
dec
jae
jae
push
pop
neg
push
mov
fdivr
pop
cmp
or
xor
outsl
dec
dec
add
push
es
push
test
push
mov
fnstcw
push
xorl
out
cmp
into
dec
fildll
rorb
pusha
pusha
push
mov
cltd
push
xchg
dec
outsb
call
call
pop
pop
pop
xlat
mov
cmpsb
ror
pop
push
pop
sar
outsb
mov
shl
jbe
shll
out
aaa
mov
adc
pop
popf
jp
lods
jge
jg
mov
test
push
ja
xor
inc
sbb
dec
in
add
cmp
pop
or
mov
lods
inc
cmp
int
and
mov
mov
idivb
sahf
aam
addb
js
jg
iret
adc
out
dec
sub
in
sbb
mov
mov
jg
ret
sub
xor
push
pop
lahf
add
mov
mov
dec
mov
in
aad
stos
lock
inc
or
js
xchg
stos
mov
scas
dec
in
in
adc
sub
jae
add
stc
mov
or
out
les
aam
es
frstor
scas
lahf
andb
jge
inc
jbe
fcoml
fnsave
mov
jle
push
jne
push
pop
decb
cmp
adc
loop
and
in
lea
rcll
push
sbb
pop
cld
sbb
out
inc
mov
mov
push
scas
xor
icebp
adc
push
cmc
bound
arpl
je
cmp
sbb
jge
pop
push
xchg
loop
jmp
pusha
xor
mov
mov
push
pop
xor
sti
inc
push
test
cmpsb
mov
fmuls
inc
ds
sub
jecxz
pusha
movsl
cmp
or
mov
push
insl
push
mov
pop
aas
inc
sbb
pop
nop
and
mov
inc
or
mov
jp
inc
xchg
mov
std
das
xor
add
es
jmp
cmp
daa
push
loop
push
xchg
jle
inc
movsl
ss
cli
lock
sbb
into
hlt
lahf
sub
clc
cmp
jl
shrb
mov
fld
sbb
cmpsl
fmuls
loopne
mov
inc
cmp
mov
mov
lock
jle
or
xchg
cmp
adc
fstpt
xchg
pop
pop
clc
ret
cmpsl
mov
fidivrs
icebp
add
sbb
test
or
popf
lods
lods
fidivrl
ss
xchg
mov
popl
insb
nop
cli
sub
push
ja
mov
lahf
mov
in
movsb
or
repnz
sbb
jge
add
xor
frstor
sahf
mov
push
mov
mov
push
pushf
and
push
inc
pop
stos
cmp
or
ljmp
mov
cmp
imul
mov
loopne
sbb
repz
dec
mov
hlt
les
jb
icebp
push
insl
dec
cld
xor
inc
in
sbb
push
das
int3
rcll
scas
xchg
cld
fstpt
cs
stc
mov
mov
stos
cmpsl
imul
fisttpll
andl
cwtl
mov
sub
mov
and
mov
movsb
cmpsb
popf
xor
pop
sahf
push
icebp
xlat
cli
in
ret
add
or
in
inc
pusha
dec
mov
imul
pusha
pusha
shll
mov
push
je
xorb
fcmovu
in
add
in
push
add
jle
jns
jmp
sbb
sbb
mov
xor
mov
out
add
xor
xchg
adc
cmc
inc
bound
mov
dec
ja
out
xchg
outsl
jb
fcoms
call
pusha
mov
dec
repz
popf
push
ret
mov
fbld
mov
je
push
sub
shrb
sbb
mov
clc
leave
lock
scas
sub
xor
pushf
testl
ficoml
call
clc
sub
pop
cld
imul
cmp
push
mov
cmp
xor
je
pop
aad
out
shrb
mov
cmp
or
inc
xchg
mov
add
inc
mov
sbb
loopne
push
out
mov
adc
cmp
jp
add
fwait
fs
mov
cmpsb
jno
fildll
sarb
addr16
inc
sbb
dec
jp
stos
push
pusha
jno
cmp
pop
push
shlb
sub
inc
es
stos
mov
pop
loopne
xor
je
popa
pop
xchg
mov
adc
pop
js
dec
or
jge
ret
ja
and
jnp
xorl
rep
jbe
or
loop
in
add
sarl
lret
addr16
into
cmp
arpl
mov
mov
and
popf
cli
cmc
mov
sbb
push
das
in
adc
test
std
pop
push
stc
mov
aas
leave
pop
push
xor
popa
and
sub
sub
xlat
fstp
mov
jns
cmp
sub
lods
sti
mov
popa
jg
xchg
push
cmp
add
movsb
mov
push
scas
xor
jge
mov
xor
jnp
dec
jae
test
push
cmp
adcl
push
lock
push
fstpt
or
loop
adc
xchg
lret
adc
rorb
pop
test
lods
sbb
lahf
xchg
cmp
inc
data16
loope
sbb
iret
bound
mov
sbb
adc
mov
leave
gs
pop
lock
add
push
sbb
jns
ja
jns
dec
cmp
or
jl
sbb
pop
jl
or
das
sahf
add
jmp
shrb
lock
and
icebp
cli
lods
clc
fmull
push
sub
imul
sub
in
jl
mov
fwait
add
mov
fwait
ret
fisubrl
dec
stos
push
mov
rclb
mov
das
ljmp
filds
xlat
add
icebp
shrb
jns
push
negl
lret
bswap
mov
push
sbb
aaa
inc
dec
movsl
lock
out
cmp
pop
sbbb
or
sbb
dec
out
cld
rcr
repz
lock
popf
stc
es
mov
std
mov
jnp
mov
dec
clc
roll
pop
idivb
loop
cwtl
push
gs
add
pop
and
dec
or
arpl
out
insb
jne
adc
mov
test
mov
mov
dec
dec
shrl
pop
out
lods
mov
cld
dec
gs
cli
add
pop
jnp
cltd
int
jge
cs
cwtl
adc
mov
cmpsb
dec
out
test
xchg
call
xchg
lock
in
out
ljmp
scas
jb
adc
sub
cmpl
ds
mov
popf
xor
xlat
adc
sahf
fdiv
popa
scas
sub
les
or
mov
jge
fsubrl
cmp
loopne
cmp
enter
inc
sub
xchg
inc
loopne
nop
inc
movsl
dec
xchg
pop
cmp
rcr
add
push
mov
and
mov
cvtdq2ps
adc
sbb
mov
ret
jo
test
add
or
sarb
fucomi
mov
pop
jmp
arpl
add
add
jnp
add
sub
xchg
lret
dec
jnp
rcrw
mov
lret
jg
mov
faddl
push
out
jno
and
and
dec
add
lods
movsl
push
rcrb
in
fsubrl
and
xor
jl
and
push
lds
push
xchg
in
mov
jb
enter
je
jno
dec
jg
jo
cli
xor
dec
enter
lods
call
push
shll
int
push
mov
andl
lods
dec
xor
push
int
rolb
xchg
jno
les
pop
sbb
data16
cmp
push
mov
push
test
lret
jge
add
mov
stc
inc
jg
or
lret
mov
push
incl
pop
fiaddl
shl
or
mov
or
xchg
shl
sbb
sarb
dec
cmp
sub
push
js
cld
addr16
push
cmpsb
cmp
mov
rclb
rolb
inc
sub
sahf
outsb
mov
hlt
divps
out
outsb
or
or
jno
iret
movsb
push
push
mov
addr16
ds
imul
inc
in
xchg
and
decb
imul
pushf
lcall
or
loope
dec
js
mov
insl
iret
sub
pop
icebp
pop
push
hlt
or
scas
mov
aam
repnz
cmp
out
mov
and
xchg
mov
loope
sbb
sub
jo
mov
xchg
pop
push
in
lret
sbb
popa
cwtl
jge
je
jne
jge
not
xor
loopne
xorb
repnz
or
and
push
cmp
xchg
les
pop
loope
mov
ja
arpl
mov
pop
dec
or
adc
and
mov
cmpsl
cmp
push
jg
inc
out
mov
jmp
enter
jge
or
mov
bound
add
jge
or
stos
sbbb
and
inc
sahf
sub
out
shll
mov
or
loopne
rolb
mov
sbb
lret
loop
push
pushf
mov
lret
leave
lcall
sbb
jle
mov
inc
sub
sbb
pop
cmp
mov
adc
pusha
mov
mov
and
movsl
dec
mov
sbb
jl
negb
adc
pop
test
mov
adc
ret
loop
and
sbb
test
jge
mov
ss
jb
add
mov
loop
sbb
or
xor
mov
mov
addl
and
adc
sub
add
xor
xor
and
cmp
push
inc
fstl
pop
shlb
mov
ret
xchg
pop
xlat
sbb
mov
pop
mov
in
mov
jg
movsb
je
push
movsl
add
jecxz
je
out
xor
int
push
xchg
jp
enter
aaa
enter
inc
xor
cmp
outsl
add
nop
xorl
pushf
push
popa
pop
aam
dec
mov
xchg
and
sbb
scas
stc
pop
lcall
inc
sarl
pmaddwd
sbb
loop
xorl
push
cmpxchg
cs
aaa
mov
push
mov
add
add
into
cmp
out
adc
cmp
mov
aam
lahf
xchg
push
es
popf
stos
stc
ds
add
loop
mov
gs
pop
lret
sub
je
ds
lock
mov
pusha
fiadds
jle
les
pushf
sub
push
mov
aad
aam
pop
or
leave
jge
push
ja
sbb
mov
les
push
xchg
pop
ficompl
xor
lret
data16
inc
adc
adc
cmc
jne
out
mov
jo
mov
fchs
adc
sub
mov
aam
dec
pop
dec
loope
popf
adcb
aad
or
cld
faddl
ljmp
enter
sarl
inc
sub
adc
outsb
mov
mov
mov
jl
or
pop
add
js
adc
stos
mov
add
cmc
mov
aad
pop
sbb
inc
pop
jns
cld
out
divps
adc
imul
gs
mov
popf
jae
loop
jbe
aad
cld
add
cld
mov
and
mov
in
push
outsb
js
inc
pop
sahf
ds
fwait
xchg
mov
sub
frstor
cld
cld
push
inc
in
push
adc
jge
pop
lods
jl
or
adc
lock
dec
xchg
iret
xorl
jmp
xor
mov
pop
ret
dec
xchg
call
dec
sbb
mov
mov
inc
addr16
adc
shll
mov
leave
fwait
add
ds
sub
xchg
outsb
clc
xchg
and
xlat
inc
mov
sub
or
dec
out
call
add
xchg
stos
xchg
jmp
enter
scas
loopne
cmp
inc
push
cmpsl
add
push
mov
in
mov
cmp
pcmpeqd
push
sub
or
sti
adc
xchg
pop
sub
lods
aaa
mov
cs
aam
xchg
lods
jns
ss
cmp
push
xor
jecxz
pop
test
loope
ss
xor
sub
outsl
push
push
lahf
fwait
xchg
aad
xchg
stc
inc
mov
adc
cmpsl
aaa
push
or
inc
js
xchg
popa
adc
pinsrw
mov
mov
daa
pop
lods
js
in
inc
orb
jl
mov
push
ret
cwtl
inc
sbb
test
inc
mov
inc
mov
mov
fsubs
dec
mov
jg
je
xorb
andl
sbb
push
jns
add
jle
push
xchg
adc
js
int
adc
mov
xlat
jl
fildl
xor
mov
mov
jno
xor
into
adc
fildl
cmp
dec
xchg
jl
sti
mov
ss
cmpsb
push
fcmovbe
push
imul
mov
xchg
test
cmpl
mov
push
push
movsb
sbb
roll
jmp
out
or
adc
jmp
outsb
notl
jmp
loope
mov
loopne
and
imul
popa
push
push
sti
jle
outsb
and
in
xchg
sahf
sarl
jo
comiss
add
xchg
inc
mov
or
xor
ja
xchg
cmp
movsb
sbb
jg
leave
push
out
icebp
cld
inc
out
sub
inc
stos
mov
insl
xchg
loopne
push
lahf
into
mov
push
aas
popa
pusha
sti
subb
jnp
and
push
fmuls
cmpsb
fcomps
movb
add
jg
mov
sub
adc
push
loope
ret
inc
mov
mov
jle
mov
in
ret
fnstsw
mov
aad
aad
out
cs
push
fistpl
jns
cmpsb
sub
sub
insb
ds
adc
es
mov
cs
cld
sbb
sbb
dec
or
lahf
mov
loope
in
ret
stos
das
sub
icebp
ret
inc
aaa
js
clc
pusha
jle
jae
pop
and
sbb
sub
out
hlt
nop
idivb
imul
dec
ljmp
add
and
or
xor
loopne
jns
hlt
outsb
mov
das
loop
or
adc
jnp
lods
out
lods
lock
lret
jmp
xlat
xor
ret
push
pop
sbbl
jne
popf
dec
rorb
cmp
iret
pushl
dec
loopne
shrl
adc
or
loope
mov
popf
imul
mulb
into
sti
mov
mov
enter
inc
fisubrs
or
lahf
out
lahf
fmuls
fst
cmpb
mov
and
in
add
inc
xchg
pop
cmp
fsubl
out
jle
add
addr16
lcall
mov
and
ret
mov
insb
int
sbb
or
gs
pop
ds
dec
xchg
mov
outsl
push
loope
lds
jecxz
out
push
leave
mov
sahf
pop
jno
out
mov
lret
lret
sub
push
aaa
adc
push
inc
cmp
push
bound
mov
iret
xchg
jbe
dec
xchg
xlat
repz
and
mov
pop
xor
out
je
aam
xchg
mov
stos
mov
shrb
hlt
cmp
mov
shrb
in
dec
and
push
and
push
in
rorl
push
or
sbb
into
jb
lock
mov
push
ja
add
movl
cmp
inc
mov
scas
lahf
ret
sub
inc
push
fcmovu
in
cmc
and
mov
stos
or
shrl
or
testb
cld
rorl
inc
pop
pop
mov
cmp
push
mov
push
out
ret
push
fisttpll
inc
les
mov
mov
pop
fsubs
movsb
xchg
lds
sub
inc
add
icebp
cli
sbb
aas
sbb
xlat
mov
mov
and
jb
mov
mov
sarb
scas
shll
jns
push
mov
and
in
pusha
pop
test
and
inc
and
jns
push
pop
pop
and
push
mov
inc
mov
lret
out
cmpsl
cld
cltd
test
sar
sbb
mov
cmp
cmova
scas
cld
out
xor
inc
pop
push
pop
lcall
sub
lock
movsl
adc
fists
aaa
fisttps
adc
orb
movsl
sarb
jge
add
pop
mov
mov
pushf
inc
sub
orb
dec
orl
sub
shrl
movb
xor
cmc
dec
push
fistpll
outsb
shl
pop
hlt
clc
imul
sbb
mov
xchg
mov
ds
push
je
cmp
ds
pop
pop
pop
mov
cmp
fcomps
lds
cmp
mov
jl
sbb
mov
mov
cld
loop
jb
std
push
test
insl
popa
mov
inc
or
xlat
or
xchg
imulb
adc
mov
adc
mov
xchg
add
adc
loopne
imul
push
popa
ss
or
nop
test
clc
mov
xchg
xchg
fs
jecxz
add
daa
push
push
xchg
pop
rorb
inc
fstl
pop
push
pop
add
imul
xor
lods
fildl
test
inc
int3
dec
jecxz
sbb
rcrb
mov
add
push
out
xchg
enter
sahf
jae
sbb
pop
jge
aam
shlb
sub
xchg
jmp
imul
lock
dec
out
cltd
or
pop
push
fwait
stos
shll
popa
xchg
mov
enter
rorb
push
push
and
aam
nop
gs
mov
mov
xchg
arpl
lock
push
js
rcr
iret
pusha
mov
js
and
cs
fisubrs
mov
subb
jns
jnp
jae
adc
cmp
mov
push
xor
push
push
sahf
push
push
in
jge
xchg
xor
xor
sahf
test
fsubr
add
sbb
scas
out
outsb
mov
lods
and
push
pop
cmc
out
pop
sbb
inc
pop
insb
rcl
sbb
loop
std
pushf
adc
cmp
push
loop
sbb
pop
shl
lods
lock
push
jmp
push
ret
or
jl
fmuls
mov
jl
sbb
dec
jmp
es
sbb
bound
jp
and
daa
and
and
add
xchg
test
stos
mov
sbb
lret
cltd
daa
fisttps
fisubs
jp
cld
cmpb
into
pop
aaa
pop
loopne
test
fisubrs
push
xor
aam
lret
inc
dec
loopne
pop
call
dec
jne
pop
imul
add
lcall
adc
adc
push
mov
pushf
movsb
cmpb
sub
or
stos
inc
cmpsb
push
xor
aam
ret
push
int
jmp
dec
push
scas
outsb
fsubrl
and
pop
icebp
shl
addr16
cwtl
push
mov
sysret
xchg
leave
lahf
mov
cli
and
test
push
dec
arpl
push
jp
cmpsb
pusha
mov
add
xor
adc
jne
lahf
outsb
push
andb
cld
jo
lock
iret
ret
repnz
xor
sarb
sbb
incl
sbb
scas
push
ljmp
je
cmpsb
shl
mov
clc
push
fcomps
push
pop
adc
sub
sahf
push
jl
cmc
andl
test
mov
dec
scas
movsb
pop
inc
cs
dec
push
addl
inc
in
push
cmp
or
push
sub
mov
mov
jge
data16
adc
test
pop
pop
mov
mov
sub
outsl
push
and
lods
xchg
or
mov
add
mov
test
xchg
push
jecxz
add
adcl
mov
or
pop
movsl
dec
mov
or
jg
out
test
pop
sub
sbb
dec
push
mov
roll
and
push
xor
adc
outsl
fcmovbe
daa
add
sbb
xchg
mov
test
clc
jb
inc
mov
stos
flds
loopne
dec
pop
sahf
cmpb
fcmove
xchg
fwait
jle
mov
cmp
mov
repnz
and
adc
sub
frstor
into
push
xchg
enter
pop
or
and
and
add
mov
inc
mov
xor
and
adc
xlat
pop
ds
pusha
mov
adc
jne
pop
cmc
decl
cmp
inc
bound
in
enter
xor
jmp
mov
imul
xchg
les
jo
and
pop
jmp
lcall
xor
mov
daa
test
pop
cmc
add
insb
loope
cmp
mov
rolb
rcr
outsb
rcrl
fisttpl
insb
xor
loope
jp
mov
fadds
mov
dec
or
xchg
mov
sub
push
push
icebp
sub
add
pop
mov
lcall
mov
or
out
sbb
inc
fistpll
shrd
loopne
imul
xchg
jo
outsl
xor
into
les
cli
adc
or
popa
cmc
loope
or
or
js
adc
das
lods
loop
cmp
aam
mov
inc
mov
dec
fwait
jg
xlat
dec
jno
add
aam
out
push
mov
sahf
inc
or
out
xor
adc
push
push
xor
call
outsl
sub
les
cld
and
push
sbb
out
orb
sbb
mov
aas
jg
pusha
icebp
js
gs
les
les
add
sarb
pop
jo
inc
xor
ss
mov
test
mov
or
jbe
jl
xor
je
dec
pop
fst
xor
xor
ja
xor
les
xor
sub
fimuls
xlat
mov
add
imul
dec
imul
and
rclb
idivb
ljmp
data16
pop
int3
aam
inc
enter
and
cmc
mov
xlat
outsl
sahf
loope
movsl
add
pop
insl
rorb
sahf
scas
sbb
cmp
rcll
test
cmc
jle
or
ret
arpl
xchg
mov
or
call
adcb
and
inc
iret
fs
test
xchg
xlat
sub
dec
mov
pop
scas
lock
or
aam
movsb
imul
jns
fisttps
lock
rorl
shr
add
mov
pop
sahf
movsb
dec
xchg
push
xchg
adc
loop
adc
xor
sbb
shr
fidivrs
js
push
push
adcb
add
pcmpeqb
aam
clc
xchg
mov
test
pushf
xchg
int3
xor
sub
test
popf
fcom
cmp
imulb
xchg
push
or
gs
fsub
push
mov
and
rcl
movsl
mov
in
scas
pop
int
mov
addb
incb
push
imul
push
pop
mov
sub
sbb
cmp
and
ja
add
inc
sbb
mov
mov
inc
getsec
and
cmc
cwtl
lock
scas
out
jp
mov
aam
push
and
movsb
xor
jecxz
mov
add
cmp
xchg
jle
outsl
int3
cs
rclb
cmp
sti
dec
scas
xchg
push
jl
cs
pop
add
insb
cmpb
fdivr
push
lret
jmp
cmp
push
fcompl
in
pop
pusha
mov
in
outsb
repz
jbe
jno
jl
add
pop
mov
sbb
sarl
rcll
sub
loope
mov
mov
dec
push
add
or
lods
leave
ret
scas
leave
add
push
jnp
mov
stc
jno
imul
insb
jl
je
push
and
pop
xchg
ret
inc
test
lea
sub
ljmp
pop
xchg
test
ror
rol
test
inc
add
fcos
ret
incl
cmpsb
in
je
stos
out
sub
cmp
inc
mov
push
inc
jb
ljmp
xchg
mov
sbb
jg
mov
fdivrp
sub
rolb
fiaddl
xchg
loope
xchg
jns
repz
shlb
xor
aam
jg
mov
mov
xor
popa
cmpsl
gs
shrb
or
xchg
dec
adc
fcmovbe
or
popa
fildll
icebp
adc
push
or
adc
icebp
adc
sub
inc
jecxz
lods
adc
jmp
ss
mov
mov
push
mov
cmp
rcr
repnz
rorb
sbb
and
in
rcrb
push
mov
pop
jge
inc
sub
jecxz
in
outsb
loope
xchg
pop
xchg
mov
add
fistpll
or
pop
rcrl
push
mov
outsb
mov
push
jnp
push
xchg
or
mov
lcall
icebp
sbb
or
jno
mov
pusha
or
and
push
adc
les
mov
loope
das
jbe
cmp
lds
sub
lea
lock
mov
jns
insl
add
add
push
pop
dec
adc
mov
xor
inc
mov
repnz
sbb
insl
dec
adc
ret
pushl
shrb
inc
push
push
xlat
sub
ja
push
dec
adc
rorb
push
xchg
xchg
sub
sbbl
mov
adc
dec
push
push
notb
pop
adcb
mov
jo
xchg
int3
sbb
dec
test
or
shlb
xor
lock
and
syscall
xchg
cmp
jo
div
sbb
in
sbb
inc
pop
icebp
jnp
sbb
sub
jno
jno
inc
je
mov
pop
je
cmp
adc
movsb
popa
enter
cld
f2xm1
push
xchg
xor
mov
mov
sbb
sti
add
sbb
push
adc
or
adc
pop
mul
cmp
fcmove
std
out
cmp
and
cmp
cmp
xchg
fsubrl
sub
call
mov
adc
or
sbb
rorl
add
fistps
mulb
pushl
pop
jno
ljmp
pop
cwtl
ret
call
dec
add
xchg
gs
jbe
andl
movsl
push
push
lock
repnz
test
test
jle
out
mov
mov
or
into
aad
xor
adc
push
fmull
lock
sarl
mov
out
js
sub
rclb
mov
and
sti
in
inc
push
and
xor
lock
jg
iret
out
fs
arpl
and
pop
arpl
cmp
enter
sub
pop
in
insl
pusha
loope
sarb
jno
mov
cmp
lock
gs
mov
jae
shll
add
push
je
xchg
adc
mov
push
jmp
mov
and
push
mov
or
fimull
jecxz
imul
ds
aaa
addb
incl
add
ss
or
push
dec
std
mov
rclb
push
ja
fcomip
sbb
mov
rorb
mov
mov
inc
es
add
mov
inc
sbb
ljmp
rorl
mov
and
add
lock
or
lea
and
das
scas
fld
fnsave
push
add
enter
ds
mov
daa
iret
es
mov
push
outsl
and
push
cmp
mov
fs
xchg
inc
or
mov
xlat
lret
xchg
outsl
mov
pushf
lds
lea
push
adc
jle
lock
cltd
arpl
mov
cmp
add
adc
icebp
cmp
cmp
leave
mov
arpl
cmp
sbb
and
dec
lds
je
or
inc
push
sbb
adc
pusha
xlat
mov
sub
ss
mov
imul
pop
pop
icebp
dec
dec
shlb
push
cmpb
jo
pop
loop
pushl
xchg
inc
mov
xchg
ds
xor
sti
mov
arpl
adc
in
movsl
outsb
pop
adc
mov
add
sub
or
clc
lock
xor
out
sub
xchg
adc
insb
test
repnz
cmp
jg
push
test
sub
loopne
inc
bound
movsb
outsb
repz
add
jmp
inc
mov
mov
xchg
scas
dec
shll
popa
mov
xchg
loope
rolb
xor
lcall
mov
sbb
push
repnz
lea
dec
mov
dec
and
pop
out
scas
sarb
int
xchg
jmp
scas
cmp
sbb
xor
fs
mull
je
sub
loopne
push
mov
aad
std
aas
xor
inc
fs
leave
add
sub
lcall
gs
mov
cmp
sbb
xlat
adc
jecxz
sub
xchg
inc
je
sarb
lret
cli
xchg
ss
lret
jno
cmp
mov
push
repnz
mov
das
ss
cld
adc
test
or
inc
mov
cmp
fldt
pop
mov
sti
dec
shrb
mov
stos
cmp
sti
insb
mov
inc
outsb
inc
pop
mov
mov
inc
push
rcrb
andb
je
adc
cmp
push
lret
add
mov
push
pusha
mov
xor
das
cmp
insl
sbb
enter
les
or
mov
ljmp
or
mov
dec
pop
pop
sahf
and
rcrb
lahf
add
call
dec
push
mov
push
dec
filds
push
inc
mov
out
lcall
icebp
rcl
xchg
sub
push
test
or
cmp
fstps
cmp
add
outsl
xchg
lock
xchg
mov
push
mov
loopne
add
psubb
popa
popf
inc
pop
push
inc
movsb
sbbl
push
pop
mov
lock
mov
sub
sar
sbb
pop
lods
les
push
cmp
add
jmp
rorl
pop
sbb
scas
or
mov
adcl
insl
pop
ret
mov
inc
test
adc
pop
jp
mov
dec
push
mov
xchg
or
icebp
loope
ds
pop
repz
mov
es
mov
and
stc
jle
imul
andl
pop
fs
jo
or
add
dec
jl
push
or
xchg
push
pop
or
cmp
push
fninit
mov
xchg
ret
outsl
lea
push
sub
and
in
jbe
sbb
add
lock
outsl
ljmp
push
add
popf
sbb
pushf
movsb
dec
adc
adcl
lea
pop
jmp
int
cmc
shlb
in
push
and
jmp
add
aam
loope
scas
jecxz
in
sub
add
outsb
rorb
jnp
xchg
jg
and
pop
ss
mov
jp
inc
aad
sub
add
mov
aad
dec
sbb
dec
rclb
in
sbb
mov
cmp
int3
or
sbb
push
mov
mov
sub
or
data16
pop
mov
lds
mov
int
loopne
mov
loope
xchg
in
adc
clc
pop
dec
mov
push
test
and
je
or
sbb
fwait
jb
xor
pop
movsl
sub
dec
push
loop
mov
cs
or
mov
cmpsb
dec
into
sahf
ljmp
push
dec
adc
cld
jecxz
fadd
sbb
pushf
cmc
jge
push
fbld
movb
or
inc
jno
pushf
sbb
lcall
sbb
add
in
inc
mov
ljmp
iret
and
insb
clc
push
repnz
add
data16
add
icebp
sbb
test
sub
or
lock
out
ljmp
lods
insb
int3
icebp
mov
adc
ds
das
dec
jl
ljmp
ss
and
aas
jl
xchg
mov
es
pop
xor
loop
test
xchg
cmp
pushl
movb
leave
or
out
push
scas
stc
sbb
sbb
cmc
gs
push
idivb
push
sbb
cld
mov
or
pop
sbb
mov
mov
add
inc
mov
popf
ljmpw
and
pop
jmp
data16
mov
inc
cltd
jb
test
insb
shlb
jb
out
push
cld
enter
call
ja
cwtl
cmpl
leave
jge
lret
mov
cmp
sub
das
insl
ficomps
dec
in
jecxz
stos
push
shrb
gs
test
mov
into
and
popf
shrb
mov
popa
cld
sub
and
je
add
pop
adc
test
jp
or
roll
in
push
dec
adcb
pop
in
dec
mov
shll
testl
jle
pop
jg
popa
and
inc
mov
lcall
jp
test
jl
xor
out
adcb
or
cli
adc
mov
pop
ret
fs
shll
loopne
inc
les
stc
outsb
repnz
iret
or
sub
jmp
enter
pop
out
inc
dec
pop
jl
and
cmp
push
or
xchg
js
cltd
push
dec
inc
adc
lret
mov
and
aad
leave
add
pop
and
lods
insl
cmp
loope
push
mov
adc
push
pop
stc
xchg
lods
loopne
lods
shr
sub
pop
es
ret
or
ror
repnz
rcr
les
cmpsl
test
and
mov
inc
xchg
mov
fsub
mov
jo
in
insb
loopne
je
cli
mov
pop
dec
and
loope
pop
mov
mov
ljmp
nop
pushf
push
sub
xor
push
movsb
and
iret
stos
add
jns
fldcw
add
loop
push
lcall
add
cmpsb
xor
or
enter
push
lods
push
jecxz
outsb
addr16
adc
xor
fcomip
dec
ljmp
lcall
pop
out
and
mov
andb
xor
fmuls
call
jl
mov
push
push
nop
ljmp
les
dec
mov
inc
rcr
jo
jmp
mov
and
sbb
aam
sub
aas
lcall
fwait
imul
loope
adc
in
adc
shrl
fmuls
stos
xchg
rol
icebp
pop
pop
lret
in
pop
fmul
out
js
pop
cltd
arpl
add
int3
fcmovbe
rol
jmp
cmp
or
add
pop
aas
push
mov
cmpsl
call
mov
repnz
cmp
dec
sbb
aas
jmp
out
adc
xchg
dec
testl
data16
adc
mov
and
pop
sbb
ljmp
imul
pop
jl
popf
insl
push
jle
jne
out
pop
xchg
cmpsb
xchg
sar
push
shlb
insb
jge
ds
je
adc
sahf
in
mov
fisubrs
cwtl
mov
cmp
jo
sub
pop
dec
out
sub
jo
fs
dec
aaa
in
jle
pop
jle
test
mov
or
enter
pop
je
and
aas
inc
and
lea
lock
in
gs
gs
cmpsb
pushf
pop
out
repz
xchg
mov
xor
sbbl
adc
outsl
sub
mov
or
cltd
or
adc
mov
push
jp
xchg
add
pop
pushf
inc
cmpsl
bound
inc
xor
sub
pop
push
dec
or
jmp
fs
sti
es
and
stos
jno
insl
jge
addr16
and
push
and
inc
dec
sbb
and
imul
xchg
pop
lret
sbb
popa
and
xchg
jne
or
es
push
imulb
fadd
inc
cmp
lea
xorb
push
add
sar
stos
push
sub
fcomip
sub
int
mov
sub
movsb
and
aam
pop
loopne
outsb
jno
orb
jb
stc
xchg
cmp
or
scas
mov
push
inc
je
sub
mov
or
cld
pop
jo
dec
mov
sub
out
jl
loopne
jns
or
test
xchg
cmc
and
adc
inc
dec
sub
push
add
faddl
adc
push
mov
push
scas
jo
push
push
cmp
stos
int3
addr16
loopne
mov
stos
and
hlt
pop
push
or
add
aad
push
adc
pop
jbe
xor
loope
jle
mov
movsb
push
popa
xchg
cltd
inc
pop
dec
push
faddl
jae
add
inc
imul
or
les
aam
jnp
xchg
push
xchg
push
je
jle
pop
cmp
sar
movsb
mov
in
mov
stc
add
add
ss
xchg
out
add
call
ffreep
or
cmpsb
add
repnz
add
pusha
stc
imul
scas
andl
pop
cmpsl
jg
add
shrb
or
xor
test
adc
cmp
in
pop
fsubs
rol
out
jp
cmpsl
fimull
pop
pop
pop
or
stos
cmp
xor
pop
lds
js
ss
and
sub
ret
mov
enter
dec
add
adc
call
push
mov
jl
rclb
and
imul
pop
push
popa
fisubs
mov
or
cmpsb
adc
xchg
push
mov
sbb
jp
mov
insl
ss
pop
add
add
nop
xor
loop
aas
cld
dec
mov
lds
pusha
lret
pop
mov
jbe
scas
rol
ret
cltd
add
pusha
cmp
mov
ds
lods
andb
push
and
pushf
aaa
shufps
or
xchg
movsb
inc
inc
xlat
popl
xchg
pop
dec
lea
jmp
imul
pop
insb
mov
add
fwait
pop
insb
stos
and
shll
int3
push
cmpsb
outsl
shrl
xchg
stos
fstps
mov
and
push
add
addl
clc
sub
or
push
xlat
mov
aaa
adc
sub
sbb
sub
xor
je
mov
popf
enter
fmul
lcall
mov
sbb
inc
jg
sub
lcall
mov
lret
outsl
jbe
dec
stc
or
add
pusha
arpl
enter
sarb
push
pop
fxch
push
pop
xchg
iret
mov
int
sbb
fistl
lea
test
js
sub
inc
je
mov
or
inc
ret
clc
jbe
sti
jns
mov
jg
daa
adc
aaa
pop
mov
js
mov
ljmp
xorb
sub
fstpt
xchg
push
data16
aas
movsl
jno
mov
cmp
xor
ret
sub
jne
rclb
push
in
lea
sbb
mov
adc
cwtl
cli
test
pop
and
pop
push
or
scas
lea
je
mov
es
scas
aad
hlt
scas
stc
add
gs
pop
adc
mov
das
jo
dec
dec
or
out
scas
insb
testb
or
fcmovb
push
pusha
popa
push
pop
and
test
mov
scas
das
lcall
cmp
xor
loopne
adc
xor
mov
les
aam
dec
cmpsl
das
mov
bound
dec
ret
xchg
pop
mov
push
push
or
in
jbe
outsb
push
test
adc
jbe
stos
jl
insb
fsubr
pusha
pop
shll
inc
sarl
mov
jge
inc
push
add
fldenv
mov
xor
xchg
inc
xor
mov
xchg
sub
cmpb
ret
xchg
or
sbb
inc
adc
jge
mov
pop
scas
pop
pop
movsb
inc
repnz
pusha
add
push
rcl
stos
cmp
and
pop
and
cmp
and
lcall
pop
dec
mull
mov
inc
add
push
mov
movsb
dec
or
ljmp
sub
mov
ds
mov
xchg
inc
or
ja
fsubrl
pushf
and
jns
into
xchg
or
imul
testl
aad
mov
jne
imul
ret
jno
shl
dec
lea
loope
push
ljmp
ret
daa
sahf
jmp
rorl
pop
loopew
add
lods
and
icebp
enter
and
cmp
xlat
pop
inc
adc
mov
jo
dec
inc
lret
mov
testl
xlat
cmp
aad
push
push
mov
xor
xchg
xchg
es
sarl
mov
lcall
ficoml
ss
popa
mov
or
push
xlat
sbb
push
scas
cmp
clc
inc
inc
jp
xor
sub
icebp
add
jl
mov
jno
es
cld
jmp
fnstsw
jb
and
xchg
aad
push
arpl
push
jl
add
scas
mov
mov
dec
int3
add
mov
loop
testl
push
pushf
add
push
pop
dec
popa
inc
or
test
mov
fstpt
call
sti
add
jg
stos
mov
push
fidivrl
enter
sti
cli
std
mov
push
enter
aad
jo
jns
ficoml
xor
mov
call
movsl
jns
loopne
adc
cmp
clc
mov
shlb
sub
loopne
imul
inc
insl
je
daa
inc
mov
outsb
or
dec
inc
mov
mov
bound
inc
and
enter
push
in
push
insb
scas
daa
out
and
pop
or
and
loopne
lea
cmc
sub
push
inc
lahf
pop
push
ret
or
push
leave
lea
pop
jecxz
mull
inc
gs
or
sbb
xchg
daa
adc
movsl
daa
jecxz
dec
aaa
mov
js
inc
das
jb
lock
mov
setge
xchg
xchg
bound
aaa
or
xchg
xor
inc
std
addr16
cmc
push
pop
fmull
fcomps
aad
sub
adcl
mov
and
sahf
mov
and
mov
pop
jge
pop
or
or
inc
lea
xlat
loop
adc
jle
or
and
repz
mov
out
cld
push
pop
mov
cmpsl
sub
scas
jle
push
or
test
shrb
outsl
dec
out
and
arpl
loop
mov
lret
cmp
pushf
inc
jne
pusha
fsubr
mov
addb
push
in
mov
mov
aam
xor
pop
loop
dec
jl
push
xlat
lock
lret
adc
or
cmp
movsb
das
loopne
clc
fwait
imul
mov
lret
xor
inc
std
jecxz
fstpt
push
scas
dec
sub
dec
xor
push
jb
pushf
cwtl
shl
add
dec
dec
gs
testb
call
imul
cli
jmp
dec
clc
mov
mov
add
mov
push
pop
cmpsl
mov
inc
shlb
mov
xchg
jmp
sub
sbbl
mov
pop
js
cmp
loope
fistpl
dec
ret
aad
jne
rorb
adcl
ss
push
inc
nop
stc
subb
outsb
mov
inc
das
adc
out
xor
and
mov
or
mov
ss
and
push
cmp
mov
mov
incl
mov
inc
mov
add
or
sub
inc
adc
adc
dec
inc
jmp
outsb
mov
pop
mov
jns
daa
int
or
sti
fiadds
aam
fsubs
sbb
jmp
and
cmpsl
push
in
mov
inc
pop
xor
inc
push
pusha
popa
pop
frstor
jmp
flds
ret
inc
and
inc
test
cmp
lahf
andb
rcrl
test
ss
js
jle
xor
insl
adc
inc
pusha
xchg
orl
shl
lcall
leave
sbb
lret
dec
add
ficomps
cmpb
ja
mov
cmpsl
jg
sbb
dec
jbe
lret
bound
mov
cmp
sub
pusha
pop
adc
xchg
fldl
add
je
fnsave
cmc
pop
push
jmp
popl
or
pop
sub
fs
out
hlt
out
mov
stos
mov
push
gs
inc
test
sbb
xorb
pop
pop
pop
icebp
repnz
jno
and
jno
mov
imul
mov
out
pop
pop
jbe
incb
cmp
jmp
sub
mov
hlt
call
inc
xor
imul
pop
mov
loopne
add
ljmp
sti
addr16
aaa
adcb
pusha
imul
fprem
push
pop
arpl
dec
push
cld
aad
rorl
sub
or
shll
mov
push
or
test
js
xchg
cmpl
in
pop
call
lcall
ret
xchg
adc
inc
dec
cmp
sbb
fs
hlt
jne
insb
fstps
cs
push
mov
pop
and
mov
clc
and
inc
sbb
sbb
int3
lods
roll
fsubrp
sub
xchg
mov
loope
ss
adc
mov
sti
shlb
loope
pushf
jnp
and
jae
gs
lods
push
int3
xchg
bsf
xchg
sbb
iret
jo
js
jecxz
clc
cwtl
push
dec
cmpsl
cld
or
fs
mov
cmp
jl
ljmp
popa
jl
lahf
cld
pop
cs
mov
jnp
sbb
movsb
sarl
jbe
dec
mov
aam
shlb
ss
xor
pop
sti
inc
add
mov
xlat
sub
push
mov
push
push
dec
jne
mov
rcrb
add
push
or
add
inc
adc
or
jne
test
or
leave
jge
ljmp
gs
cld
scas
jne
and
xchg
adc
add
outsb
cmc
pop
xchg
jp
sub
or
sbbl
bound
cmp
std
ss
adc
fidivrl
mov
sbb
int3
jo
js
popa
mov
or
pop
es
jp
jo
cmp
out
mov
dec
inc
sbb
inc
pop
lret
into
pop
jmp
test
or
scas
mov
movsl
movsl
jno
add
into
ds
cli
lods
out
add
inc
arpl
scas
and
add
arpl
repz
adc
push
pop
jp
or
add
rorl
push
fs
loopne
pushf
mov
gs
subl
fwait
clc
sbb
mov
jecxz
pop
xchg
adc
iret
xlat
pop
aas
sbb
and
fisttps
loopne
adc
and
xor
out
call
int
add
lcall
xchg
xor
sbbl
sbb
mul
test
mov
fidivrl
pop
imul
cmp
lods
insb
lahf
add
loopne
jbe
jne
sbb
xchg
jmp
das
mov
scas
mov
divb
ja
dec
outsb
pop
das
std
lret
leave
push
gs
clc
xchg
and
xchg
dec
mov
sbb
cmp
lock
mov
mov
sub
sbb
int
lret
mov
dec
mov
mov
mov
std
jle
data16
push
push
jno
mov
in
repnz
xchg
xor
test
das
mov
xor
and
cmp
jg
xchg
imul
enter
addr16
jmp
data16
fcmovnb
outsb
xlat
adc
dec
push
or
cmp
mov
lretw
pshufw
sbb
mov
pop
shrb
pop
pop
push
std
mov
sbb
add
pop
sub
jge
cli
and
cmp
mov
cli
lods
xchg
adc
sbb
jl
sub
push
stos
jo
out
xor
jl
mov
mov
shrl
jp
xchg
xchg
pop
rclb
adc
sarb
jbe
jl
into
shll
add
push
push
push
add
imul
inc
scas
arpl
and
xor
sub
arpl
aas
lahf
mov
stc
mov
jle
adc
lods
daa
push
jle
jo
or
or
xchg
add
pop
fwait
in
ret
out
mov
dec
daa
aas
cld
test
into
repz
xor
and
sub
popf
addb
push
ret
jo
adc
cmp
daa
cmp
decl
or
adc
xchg
scas
sbb
insb
and
mul
add
sub
fwait
xorl
scas
imul
inc
arpl
lock
dec
loopne
stc
and
arpl
lret
gs
in
mov
orb
push
adc
addr16
lock
adc
mov
push
xchg
mov
test
push
daa
add
adc
cs
pop
ljmp
jb
mov
fwait
or
sbb
jne
or
mov
sub
pop
lock
in
jb
stos
pop
cmp
pop
add
pop
push
in
mov
jae
mov
ret
cmpsl
sbb
test
mov
cmpsb
push
adc
jae
pusha
stos
lahf
ds
outsb
jg
insl
dec
pop
ficompl
xchg
add
jp
cs
popf
mov
add
insb
and
rcl
mov
ret
jge
aaa
lods
mov
push
adc
jl
icebp
ja
xor
out
adc
mov
push
test
cli
imul
mov
scas
sbbl
mov
jbe
push
push
mov
inc
adc
or
call
dec
mov
test
sbb
lods
sahf
ja
inc
adc
pushf
fistpll
out
sahf
inc
in
sub
popa
mov
or
add
loop
fisubl
pop
cltd
je
cli
add
inc
or
test
adcl
popf
and
dec
dec
mov
xor
sub
or
adc
in
pop
stc
adc
mov
and
jge
ret
mov
mov
dec
xchg
pusha
add
xchg
jnp
xchg
and
ret
pop
mov
xchg
mov
es
out
push
and
and
fmuls
pop
ljmp
xlat
leave
xor
pop
jno
mov
xor
call
sbb
repnz
outsl
inc
dec
or
in
into
mov
xor
add
sahf
cltd
mov
and
add
mov
aam
out
mov
sahf
adc
mov
lods
push
shrb
pop
add
aas
jno
mov
aam
ret
inc
push
mov
into
rorl
inc
cmp
popa
inc
lea
clc
clc
adc
js
mov
stos
cwtl
push
add
shll
xchg
jns
imul
cmp
dec
cmp
cmp
dec
xchg
cmpb
cs
scas
pop
push
shrb
aas
faddl
cwtl
les
mov
cwtl
test
test
enter
add
mov
or
add
jle
test
add
push
jno
cwtl
std
jns
shl
xchg
add
sub
jecxz
inc
pop
pop
popf
das
js
push
lock
adc
ffree
ja
adc
cmp
movsl
mov
imul
mov
clc
lret
push
dec
stos
mov
jecxz
sub
pop
subl
or
in
or
jo
stc
lods
mov
nop
stos
into
xchg
hlt
ret
test
adc
out
xor
add
pop
push
jne
and
lock
outsl
aas
pop
inc
xchg
ss
inc
subb
jp
mov
scas
shl
outsb
mov
mov
shll
adc
push
jecxz
cmp
adc
mov
push
jp
xchg
push
mov
xor
lcall
hlt
fwait
jge
adc
mov
std
clc
call
scas
or
ret
add
pop
into
pop
pushf
out
mov
mov
pop
dec
aaa
or
fisttpll
xchg
jo
fcoms
inc
mov
imul
lret
xor
loop
xor
jne
xchg
cmp
cmp
cmp
das
mov
mov
dec
insb
mov
fdivs
jmp
xchg
xchg
sbb
xor
push
pop
dec
lods
mov
ret
shll
cmp
xor
jb
xor
dec
push
movsb
inc
pop
rorb
mov
lock
jae
xlat
mov
add
clc
mov
xchg
stos
mov
mov
das
and
push
jmp
dec
into
add
sbb
pop
addl
bound
xchg
adc
into
mov
and
xor
pusha
lcall
jg
jbe
adc
cmp
cli
sub
jbe
addr16
es
push
rcrb
rorl
inc
mov
fists
mov
addr16
mov
jp
lret
mov
or
adc
out
lock
xor
cli
and
cmp
lcall
aam
test
mov
jno
jle
and
and
add
rorl
add
sarb
dec
add
adc
adc
rorl
outsl
sub
dec
aas
rolb
xor
dec
dec
mov
loopne
repz
movzwl
lock
adc
mov
les
lock
lock
idiv
fwait
xor
add
cmc
cmp
sbb
adc
pmullw
mov
push
push
cmp
push
push
pop
test
xor
scas
inc
push
push
pop
mov
adc
leave
sbbl
add
ds
and
adc
sbb
adc
jbe
movsl
jecxz,pt
push
add
hlt
lock
and
test
sbb
fsubrs
aam
test
or
fistpl
cmpsl
fs
xlat
lahf
pop
fcompl
add
sbb
xchg
sub
inc
call
ljmp
add
es
mov
testl
pusha
jge
das
jge
clc
xchg
into
popa
clc
push
cltd
mov
add
lods
mov
mov
jmp
sarl
icebp
in
and
dec
mov
pop
inc
mov
int
push
xlat
mov
jae
test
popf
movsl
rcll
test
push
mov
fsubs
fiaddl
mov
adc
subb
shlb
aas
je
in
out
ficoms
lcall
xchg
jp
fistl
jg
jp
mov
sub
mov
add
adc
xor
pop
push
jbe
mov
fstpl
sub
push
cmpl
or
mov
ljmp
loopne
rcrb
dec
jp
loopne
stos
lcall
jne
test
mov
or
jmp
loopne
test
movsb
xor
xchg
add
ss
push
inc
loopne
adc
sbb
or
fcompl
ficomps
lret
in
fadd
pusha
faddl
lcall
inc
mov
pop
push
in
roll
and
mov
fs
stos
or
jbe
cmp
gs
aas
push
sbbb
dec
push
daa
and
inc
pop
fisubrs
flds
outsb
orl
repz
mov
out
das
jne
and
ret
inc
push
jbe
push
cwtl
lea
lea
mov
add
xchg
xor
pop
pop
mov
js
fsub
mov
jl
sub
pop
sahf
hlt
aad
xchg
sub
lods
pop
mov
adc
es
adc
pop
sub
mov
jb
xchg
adc
mov
notl
xchg
jbe
stos
inc
sahf
push
jno
xor
mov
mul
test
adc
mov
jmp
push
adc
fstps
pop
pushf
add
std
out
movsl
xor
fldl
aaa
mov
xchg
dec
int3
sti
mov
mov
jno
lock
test
mov
xor
stos
jo
inc
stos
shrl
cmp
pushf
mov
andl
test
mov
ss
xor
xchg
cmp
outsl
pop
xchg
mov
adc
adc
iret
inc
push
lock
loopne
push
mov
fildll
and
cmp
mov
mov
sbb
push
loopne
jge
clc
push
mov
add
add
loop
shrb
jmp
pop
mov
mov
mov
fdivrl
and
or
movsb
and
insl
lea
in
imull
cmp
lods
jo
mov
in
mov
cli
loop
xchg
jo
mov
pop
add
fsubl
les
push
pop
mov
pop
sbb
jo
clc
roll
pop
dec
lcall
ljmp
jle
mov
sbb
push
cmp
push
shrb
icebp
inc
out
data16
inc
adc
ljmp
cmc
xchg
inc
sbb
lcall
mov
ljmp
les
test
cmp
or
xchg
ss
pop
adcl
or
mov
les
add
scas
out
gs
aam
leave
leave
push
mov
and
cwtl
imul
vxorpd
data16
cli
push
mov
fdivrp
test
testb
test
push
xchg
xlat
mov
xchg
lea
jp
mov
xchg
enter
lahf
fucomp
leave
fidivrl
lahf
dec
inc
ret
loopne
inc
repnz
add
fsts
jnp
and
stos
mov
lds
xchg
mov
out
out
and
xor
sub
xor
lcall
adc
and
dec
push
frstor
and
aam
push
push
inc
and
xor
adc
mov
adc
xchg
clc
sub
pop
ret
sub
ss
ss
ret
jnp
rorb
aam
jg
add
mov
pop
cld
rolb
aaa
sbbl
dec
ds
scas
add
dec
sbb
sar
es
xorb
cwtl
subb
and
mov
pop
icebp
insb
push
call
mov
lods
movsl
ljmp
xchg
lods
imul
cmpsl
subl
push
add
sub
ror
cmp
pusha
push
stos
jmp
or
inc
jbe
insb
xchg
lcall
dec
jb
iret
push
cmp
cmp
jge,pn
fwait
push
sbb
lock
lret
adc
leave
sbb
aam
inc
das
inc
xchg
sbbl
push
jge
mov
pop
pop
dec
lcall
lods
and
in
mov
sar
push
add
call
pop
dec
pop
sub
sbb
pop
adc
cltd
repnz
inc
aaa
ret
daa
dec
int3
inc
cmpsl
cmc
loopne
mov
push
loope
pusha
por
icebp
add
inc
add
jle
fdivs
imul
fwait
insl
mov
mov
mov
mov
sbb
xlat
jp
jnp
sbb
jp
mov
shlb
push
push
ja
add
push
or
out
inc
mov
mov
xchg
jp
pop
stc
push
imul
iret
repnz
icebp
hlt
adc
adcb
xor
or
pop
cld
pop
orl
lds
mov
cmp
jo
jo
cs
pop
js
js
inc
push
test
jo
out
ds
adc
insb
mov
xchg
cmp
fwait
out
add
adc
mov
push
inc
in
call
xor
mov
rcrl
jns
mov
lock
sbb
add
inc
and
pop
outsb
mov
lods
or
xchg
mov
ret
pop
push
jbe
jge
cmp
pop
sbb
cli
shrl
mov
adc
cmp
jae,pt
rorb
adc
clc
outsb
push
inc
ret
jle
mov
jmp
and
sbb
cmp
adcl
je
rcrb
push
cmp
daa
icebp
mov
push
or
mov
movsl
mov
outsl
popa
pusha
movsl
mov
inc
aad
aaa
xor
sbb
lock
mov
and
jbe
mov
inc
xor
in
mov
movsb
in
xchg
fmull
js
push
or
stc
pop
push
dec
push
adc
cld
and
hlt
add
in
sar
in
pop
aaa
jp
jl
cmp
add
xchg
inc
and
cmc
call
enter
push
enter
aad
test
jp
and
movsb
stos
adc
jp
enter
mov
shlb
cmpsb
jo
cmp
mov
shll
jmp
mov
mov
out
orb
mov
ret
dec
ja
pusha
jge
sbbb
sar
xor
push
insb
sub
push
lods
xor
sub
data16
pop
push
mov
loope
push
xchg
xor
insb
mov
aad
lods
push
insb
mov
sub
jg
repnz
push
movsb
loope
jge
das
cs
pusha
xor
add
das
pusha
cwtl
adc
jl
mov
mov
dec
mov
mov
ljmp
test
lret
int
add
adcl
push
insl
cmpsl
orb
sub
jno
popf
rorb
dec
imul
xorl
cmp
sbb
push
rcrl
jo
pop
jg
add
clc
jmp
sub
push
xor
cltd
mov
popa
add
mov
loopne
movsl
xchg
push
push
push
mov
push
mov
hlt
push
add
lock
imul
cld
imul
xor
mov
mov
xchg
or
loop
dec
jne
pop
jns
fldl
fcom
inc
sub
in
cmpb
add
inc
loope
push
inc
repz
jnp
inc
xor
clc
mov
or
arpl
push
loopne
or
ds
dec
jge
sub
pop
cld
sub
xorb
mov
js
ds
and
cli
jecxz
into
sbbl
jmp
inc
inc
inc
jecxz
xor
jne
rcrb
dec
sbb
iret
cmpsl
sbb
xor
and
xchg
sbb
lret
mov
enter
ret
pushf
mov
pop
fmuls
ds
mov
and
xchg
xlat
inc
add
ds
push
sti
fwait
xchg
dec
pop
or
subb
lock
scas
adc
pop
test
fsubs
push
mov
push
imul
push
sbbl
es
jmp
ret
pusha
imul
lods
fsts
cmp
loop
pop
jmp
lea
push
inc
out
icebp
rolb
push
adc
push
fcmovu
add
test
adc
and
mov
dec
inc
inc
jle
or
mov
xchg
dec
out
dec
shlb
addb
add
jl
xor
push
loop
sbb
xchg
in
ret
dec
mov
jl
test
and
mov
push
mov
push
sbb
sar
stos
neg
pusha
push
addl
cmp
js
mov
lcall
repnz
insb
mov
mov
aad
sub
push
mov
out
jl
adc
mov
xorb
or
push
cltd
cmp
adc
mov
enter
mov
aas
jbe
adc
cmp
in
aaa
inc
sub
out
push
jge
mov
outsb
mov
test
fcomps
cmp
jmp
lock
sbb
pop
insb
jl
and
cmc
ret
mov
movsb
pushl
pusha
adc
xor
jge
cmp
popf
mov
fwait
icebp
add
bound
mov
out
sub
or
nop
cmp
ss
mov
adc
rcl
xlat
mov
ret
jle
xchg
shlb
push
xchg
inc
andb
das
mov
mov
imul
inc
fcompl
neg
lcall
push
ss
es
mov
or
cltd
or
cmp
sub
orl
and
pop
loop
cltd
movsl
imul
pop
xorl
mov
in
pop
push
dec
mov
jns
jae
xor
adc
daa
inc
out
cmc
mov
adc
jbe
aaa
bound
lret
xlat
inc
add
inc
stos
dec
adc
inc
inc
ljmp
adc
jecxz
push
or
or
lret
arpl
add
ljmp
sub
mov
mov
cmpsl
test
push
pop
or
out
loopne
push
outsb
pop
shl
clc
idiv
ficoml
in
sub
lock
sbb
push
mov
ja
adc
sub
mov
xor
xchg
xchg
movsb
cld
cmpxchg
rorb
rorl
sbb
popf
cmp
xlat
mov
in
push
push
insl
push
sbbl
xchg
mov
mov
cmp
push
rorl
add
ret
inc
sahf
push
or
cld
add
mov
jo
adc
xchg
sbbl
in
vcvtsi2sdl
loop
les
in
hlt
push
stc
jmp
push
xchg
lock
cli
scas
or
hlt
imul
js
addl
stos
xchg
popa
mov
cmpsl
mov
jmp
cmp
sbb
jnp
call
sbb
movsl
sbb
iret
fs
lods
xor
outsl
lods
jp
push
pop
xor
ret
pop
cmpsl
mull
or
call
out
popf
and
mov
xchg
sbb
loope
lock
inc
and
pop
xor
xchg
xchg
xchg
mov
cmpsb
pop
imul
test
stos
add
xor
mov
shr
sbb
sbb
enter
ljmp
push
push
and
push
add
js
inc
fimuls
lods
and
adc
int3
popa
mov
jbe
lret
cmp
shrb
fwait
test
nop
iret
push
lock
add
hlt
gs
mov
mov
cmc
scas
adc
xor
cmp
test
mov
xlat
mov
addb
lds
aam
lret
stos
outsl
pushf
jnp
cld
xor
pop
je
adc
sti
mov
in
push
xlat
mov
lret
jp
cwtl
out
icebp
aas
lock
lret
add
inc
test
idivl
dec
cmc
dec
sarl
leave
pop
mov
rclb
arpl
faddl
rorl
out
sbb
ficoms
jl
test
xor
call
shrl
xchg
dec
test
cmp
mov
mov
sbb
out
mov
loopne
lods
dec
pop
jo
xchg
jle
sbb
hlt
xor
xor
int
mov
mov
mov
jnp
add
fistps
or
sub
jecxz
mulb
imull
shlb
cli
fnstcw
add
lret
jp
js
mov
xor
inc
dec
jae
cmp
jno
mov
ss
jp
jb
lcall
sahf
subl
jle
gs
jge
arpl
lahf
orb
xorl
xchg
jge
xchg
mov
call
addr16
xchg
or
jecxz
cmpb
int
jmp
lea
pop
shl
aaa
add
jns
test
inc
inc
adc
in
repnz
mov
fcoms
jo
addr16
add
mov
sbb
pushl
and
lret
jg
lods
jns
sub
shlb
repnz
xchg
mov
insl
mov
jl
inc
in
imul
hlt
mov
rcrb
test
lret
dec
sub
fistps
daa
mov
popl
shll
aas
into
adcl
xor
js
fimull
mov
repnz
es
xchg
mov
mov
cli
push
loope
pop
pop
les
cmp
adc
sub
movsl
xor
insl
mov
mov
js
jbe
fsubs
leave
push
testl
mov
or
sub
jo
cmp
fistl
loopne
test
cwtl
aaa
arpl
jbe
add
call
pushf
adc
loopne
jbe
mov
lahf
adc
in
mov
ss
add
bound
jae
cmp
inc
pop
nop
addr16
rcll
repnz
jecxz
fsubs
loope
push
in
xchg
push
pop
fld
pushf
pop
jo
mov
push
mov
hlt
ficompl
or
in
cli
xor
or
mov
daa
adc
insl
daa
push
lcall
mov
int
in
sub
out
mov
dec
cmpsb
sbb
jle
outsb
xchg
mov
xor
sub
in
call
adc
push
jp
mov
or
push
inc
ds
jo
shrb
xchg
sub
or
enter
jge
aam
ljmp
cmp
push
jno
lods
addr16
mov
js
pusha
jge
daa
add
popa
mov
mov
cmc
shlb
jp
cmpb
mov
lea
testb
or
pop
fistpl
jmp
push
push
sahf
mov
cmp
cs
into
and
out
call
sbb
sub
xor
pcmpgtd
xor
inc
dec
inc
aam
cli
icebp
stc
pop
lcall
push
loope
jg
adc
cwtl
shl
nop
imul
jecxz
sbb
stc
pop
jl
xor
je
push
pop
sti
lahf
orb
dec
inc
cld
xor
adc
jno
scas
enter
sbb
out
adc
notl
mov
frstor
leave
dec
popa
sbb
call
cmp
add
divl
and
mov
movsb
add
cs
cmp
aad
mov
xchg
xor
aaa
mov
lock
imull
push
loope
dec
mov
lock
imul
pop
stos
jl
ds
clc
xorb
and
pop
inc
push
loop
loope
shll
stos
ret
iret
lret
test
xor
movsb
loope
sbb
or
adc
adc
mov
orb
xor
mov
mov
icebp
ret
stos
xchg
iret
dec
push
es
push
das
mov
movsb
add
adc
jno
xor
xor
dec
pop
mov
cmp
scas
xchg
sbbb
cmpsl
dec
xor
cmp
jne
add
lds
out
mov
cmpb
inc
adcl
out
andl
or
ljmp
movsl
xchg
cmpsl
int
push
iret
jno
cmp
cmp
push
lock
dec
test
xchg
loope
lret
loope
inc
sarb
js
fcomps
and
xchg
pop
jle
mov
iret
pop
gs
sub
push
repz
cs
std
hlt
or
or
and
push
pusha
test
pop
insl
test
aam
out
xchg
mov
mov
pop
sarl
cmpsb
jl
inc
in
xchg
lea
push
scas
jl
and
cmc
stc
test
in
sub
test
jle
xchg
mov
imul
and
dec
ret
daa
cmp
aad
dec
sub
sbb
lods
test
mov
jmp
mov
sbb
cltd
out
ss
push
aam
jle
outsb
out
ret
lds
mov
ja
in
js
mov
scas
shrl
pop
inc
xlat
scas
xchg
pusha
inc
scas
jnp
or
or
sub
fidivrs
out
dec
ficompl
sub
mov
in
rcrb
aad
and
xchg
insb
and
pusha
clc
insb
insb
mov
jno
sahf
mov
stos
add
cmp
hlt
push
fs
jmp
cmp
insb
je
mov
xchg
mov
mov
clc
je
popa
push
push
clc
add
xchg
loopw
iret
mov
mov
test
pop
data16
in
cmp
fimuls
ficoml
pushf
xchg
call
pop
fcoml
cmp
push
xlat
mov
jecxz,pt
test
sub
sub
pop
daa
iret
cmc
sahf
arpl
inc
sub
xchg
in
xchg
push
mov
push
sbb
jg
push
imul
push
int3
ret
xchg
adcl
push
mov
jge
lods
sbb
cmp
mov
dec
sub
ljmp
mov
iret
int
pop
xor
mov
cmpsl
xchg
stos
or
inc
insl
sbb
xor
cmp
sub
aaa
lods
mov
sub
xchg
cmpsb
mov
daa
cld
add
je
outsl
xchg
cmp
in
cmp
add
lds
inc
pushf
icebp
sub
sbb
mov
ss
hlt
xchg
shl
shrl
fwait
sub
xor
dec
add
and
or
mov
in
cmpsl
mov
std
mov
adc
mov
jno
rorb
popf
xor
lods
notb
shll
aam
xchg
ja
inc
xlat
add
aaa
push
xor
in
mov
push
flds
fistl
add
inc
addps
ret
push
push
fwait
xor
pushf
stos
push
sbb
cmp
xlat
mov
repnz
iret
dec
mov
cmpsl
stos
icebp
int
cli
push
jmp
je
cltd
inc
insb
mov
imulb
xchg
sarl
adc
xor
xchg
rorl
aad
mov
pop
lods
inc
push
pop
push
out
mov
repz
out
add
mov
push
xchg
xchg
add
inc
add
and
pop
cs
fwait
test
adc
jae
insl
push
and
xlat
loopne
mov
add
sub
xchg
add
lcall
push
or
lret
mov
push
push
pop
les
das
push
imul
scas
in
dec
pop
jo
lret
inc
jmp
mov
cmc
mov
jle
das
iret
sbb
sub
repnz
shrb
push
cmp
call
pop
mov
in
push
repnz
push
push
jg
and
add
lea
loopw
inc
pop
add
xchg
add
imul
les
mov
sbb
push
mov
shll
push
mov
jge
hlt
mov
pop
dec
adc
lods
icebp
add
sbb
push
or
mov
sahf
notl
in
cmpsb
pop
jns
ss
ret
imul
cltd
js
scas
je
mov
roll
jl
mov
ret
in
add
cwtl
inc
push
sub
in
aam
aad
pop
pslld
in
out
mov
in
or
imul
and
and
lahf
incl
lea
icebp
inc
sbb
adc
mull
rcll
jae
popa
push
das
stc
pop
xrelease
adc
lods
js
test
loopne
adc
es
in
mov
add
in
sbb
lock
gs
adc
jg
cmp
jne
xor
test
inc
mov
and
das
and
dec
imul
loope
cmp
and
insl
nop
mov
loopne
add
inc
cmpsb
cmc
inc
or
jo
xchg
add
sar
mov
mov
ja
sbb
insb
inc
mov
push
jmp
xor
inc
pop
in
dec
ds
fwait
mov
adc
dec
jb
push
or
mov
xchg
inc
push
fmul
roll
sti
xchg
call
mov
cmpsb
jno
adc
stc
adc
mov
test
cmp
xchg
pop
loope
rcr
cmp
test
cmp
cmpsb
mov
clc
jne
orl
sbb
sbb
or
repz
sarb
or
xor
in
dec
and
pop
ds
into
lahf
test
sahf
cmp
xchg
xchg
nop
cmpsl
fiaddl
xchg
rcll
add
mov
cmpsb
add
aam
lret
add
mov
mov
push
fisttpll
mulb
push
das
xchg
aam
push
mov
pop
sbb
add
jns
cmp
jbe
inc
add
jle
pop
in
or
adc
inc
ror
jge
cwtl
and
je
or
jg
jno
js,pn
dec
inc
push
ret
mov
adc
popf
fcoms
std
movsb
lcall
daa
jmp
test
push
out
int
orb
es
push
adc
loope
mov
sbb
fdivr
and
add
andb
cli
jl
mov
mov
cld
ss
dec
test
mov
adc
cli
fisttps
jae
sbb
jne
add
dec
ret
xchg
or
cmp
and
xor
add
frstor
mov
bound
sbb
cmp
xchg
add
xchg
loope
or
shrb
das
roll
cmp
add
hlt
inc
mov
jge
and
adc
je
dec
out
sbb
push
jp
xchg
addr16
popf
nop
mov
ljmp
push
repnz
dec
lods
push
mov
shrl
jle
xor
dec
std
iret
xchg
je
xchg
loopne
aam
jne
add
nop
repnz
pop
mov
mov
ljmp
mov
add
sbb
ss
mov
pop
lret
cmp
fildll
ja
mov
xlat
mov
fstpl
jne
xor
or
sahf
pop
outsl
orl
test
cs
mov
xor
push
repz
imul
movsbl
xlat
jg
and
fldenv
mov
mov
rcrb
out
push
jl
sbb
sbb
lcall
xorl
inc
ds
push
outsl
aas
daa
jo
test
rcll
jp
out
push
stc
cli
scas
inc
dec
cwtl
lea
mov
fsubr
cmpl
shll
fdivrp
sbb
movsl
dec
shlb
jae
movsb
cltd
cmp
fs
and
xlat
rolb
or
psubb
sub
les
jmp
rcll
push
js
xor
cs
and
push
stos
inc
clc
pop
push
add
leave
in
lods
aas
mov
adc
xchg
insl
jbe
inc
and
sbb
cwtl
or
ljmp
gs
leave
cmp
add
add
sbb
int3
and
pop
fisttps
int3
sbb
mov
dec
add
das
mov
jmp
cmp
pop
movb
test
push
jae
scas
cmp
aaa
sub
stos
cwtl
fmulp
dec
or
adcl
lret
popa
inc
bound
fwait
dec
xchg
push
fwait
cmc
rol
mov
push
adc
je
sub
adc
mov
sub
in
shrb
test
pop
adc
shlb
mov
xor
pop
sbb
pop
pushf
pop
xor
push
fsubrp
out
adc
pop
js
cmp
loopne
jo,pn
call
movsb
push
xchg
test
xor
pop
push
scas
push
inc
mov
push
xor
mov
push
movsb
sub
inc
lret
pop
icebp
call
inc
aam
int
xchg
dec
std
push
xor
push
hlt
lret
cld
iret
mov
cmp
pop
mov
sbb
jae
std
int3
adc
pop
mov
push
mov
movsb
sub
ja
sub
xor
pop
out
movsl
pop
push
es
mov
mov
lea
lret
pop
lock
imul
xor
jge
cmpsb
arpl
adc
ds
and
cs
pop
cli
dec
shr
sar
fwait
popl
mov
test
movaps
push
pop
out
dec
jb
pop
lahf
insb
enter
cmpb
popf
mov
ret
xlat
sahf
jbe
test
ss
xor
sbb
jp
in
cmp
xchg
loope
mov
and
push
insl
or
xor
pop
loop
or
cs
adc
xchg
iret
mov
out
adc
rclb
cmp
loopne
sbbb
outsb
jo,pt
mov
loop
push
mov
clc
les
ja
roll
push
call
iret
xchg
mov
rorb
add
dec
or
fsts
sahf
dec
mov
scas
imul
fisttpl
mov
sub
sbb
int3
push
xlat
adc
mov
shrl
cmp
push
imul
iret
xchg
aam
jae
push
test
xchg
mov
insb
movsl
mov
das
lret
rorb
adc
ss
inc
inc
xor
dec
push
and
aas
push
das
jle
inc
popa
or
pushf
xchg
push
sbb
mov
sub
mov
xorl
pop
add
cmp
xchg
loope
mov
sub
dec
mov
stc
je
add
es
shlb
pop
repnz
lods
insb
ja
movsl
sbb
popf
test
jbe
inc
mov
mov
xchg
loope
jo
stos
add
flds
rcrl
fs
sbb
shlb
hlt
mov
iret
dec
and
push
mov
repz
and
xchg
call
ljmp
xchg
cld
or
push
xchg
cmp
inc
movsl
daa
or
imul
mov
stos
je
arpl
mov
sub
je
and
mov
outsb
jbe
or
inc
loope
xor
stc
test
das
inc
mov
mov
ret
cmp
mov
and
inc
jp
xchg
pusha
xchg
cmp
inc
jg
notb
xor
popl
push
mov
and
add
cmp
inc
inc
pop
std
xorl
fdiv
lds
lods
inc
push
lock
subl
cmc
fdivr
jnp
push
cmpsl
lret
cmpsl
inc
lods
or
fdivl
dec
push
mov
insl
sbb
mov
aaa
enter
aaa
add
inc
sub
mov
cmp
or
mov
mov
cld
test
sbb
scas
mov
jmp
fs
fcoms
int
adc
scas
in
or
sbbb
lock
je
movsb
mov
jle
lret
lcall
push
movb
add
cmc
dec
pop
aas
sbb
inc
or
mov
into
leave
inc
shrl
aas
dec
mov
xchg
jbe
jle
mov
ret
mov
subb
pop
jle
sbbb
popf
push
ljmp
mov
inc
or
xchg
sar
and
add
dec
xchg
icebp
out
js
les
sub
lods
jp
das
mov
push
dec
in
daa
outsb
sbb
popa
imul
cld
in
iret
shll
inc
push
jge
sub
test
inc
repz
or
inc
fst
xor
lea
sub
shlb
js
std
adc
push
pusha
push
xor
or
pop
pxor
xor
mov
or
movb
or
fiadds
pop
or
aas
rcl
inc
sahf
or
cs
out
and
mov
loope
sub
fisubl
loopne
out
sbb
test
fldl
in
inc
xchg
mov
sbb
xchg
test
out
mov
mov
sub
fsubl
cmc
xchg
push
scas
fisubrs
adc
jo
fisubrl
lea
mov
xchg
outsl
add
insb
sbb
enter
mov
out
push
pusha
in
xchg
pusha
lretw
mov
xchg
cmp
gs
fmuls
xor
push
stos
jp
or
jns
push
sub
jae
ret
push
repz
sbb
jns
loop
push
dec
fsubs
repz
rcrl
fldenv
cltd
dec
cmp
popa
mov
int
clc
jbe
jmp
cmp
xchg
call
aam
cmp
jecxz
sbb
call
outsl
add
mov
xor
inc
sbb
and
and
push
ds
xchg
sub
sub
xor
push
scas
xor
sbb
dec
xchg
and
insb
adc
ret
loop
mov
or
cld
test
repz
fdivrl
jb
iret
or
pop
ret
fneni(8087
iret
or
jb
inc
shll
push
xor
mov
mov
fstps
sbb
jmp
ret
ds
je
in
inc
ljmp
imul
cmp
jmp
adc
mov
add
hlt
aas
loope
inc
push
mov
js
aaa
das
outsb
imul
ret
xchg
xchg
or
dec
jp
push
jg
pop
inc
xlat
lret
lods
orb
and
fwait
lock
jge
inc
test
cmp
jecxz
clc
mov
rolb
enter
xor
jecxz
int
dec
adc
jno
mov
cmpsl
pop
or
xor
adc
mov
xor
aaa
pushf
ss
aas
jne
push
cmpl
js
or
ret
cmp
outsb
das
stc
cmp
mov
push
pop
js
leave
or
or
outsb
aaa
icebp
fcmovnb
ficoml
xor
push
stc
das
and
pop
leave
adc
xor
add
aad
or
loop
push
add
cli
hlt
ss
mov
and
lods
aaa
xchg
pushf
mov
std
js
arpl
pop
mov
push
fs
inc
mov
adc
sbb
mov
insb
push
cmp
xchg
adc
fwait
lock
out
jnp
inc
sbb
jmp
mov
pop
test
lods
fstps
or
sbb
mov
mov
loopne
mov
inc
pusha
sarl
cmp
imul
lods
arpl
xchg
add
jg
movsb
mov
xor
imul
out
inc
repnz
cmc
cltd
aas
push
adc
int3
daa
pop
pop
ja
das
jle
xor
prefetcht2
dec
sub
jbe
daa
jbe
jg
jl
dec
mov
pop
or
notl
mov
loopne
push
movsl
lret
cmp
cs
pop
scas
sub
nop
das
add
xlat
rcr
cmp
leave
stos
inc
in
cmp
enter
jo
jnp
sub
mov
pop
jae
ja
fsubrl
xchg
sub
fcompl
cs
loop
add
loopne
adc
les
lods
out
icebp
popa
loop
pop
dec
xor
adc
movsb
xchg
rcl
jmp
mov
mov
cmp
ror
sti
sub
cmc
lods
push
cmp
mov
cld
mov
lock
push
pop
xor
xor
adc
add
mov
stos
sbb
popa
lahf
mov
and
add
xor
rol
je
add
adc
jb
pusha
cmp
movsl
in
fbstp
push
push
jo
mov
sbb
mov
pop
sahf
incb
fcmovu
push
sti
cwtl
inc
je
in
and
pushf
mov
das
mov
xchg
push
mov
sahf
lea
nop
rclb
push
inc
push
mov
mov
xchg
inc
or
pop
test
std
dec
faddl
jo
clc
or
xchg
add
lods
adc
mov
aam
mov
sub
mov
sti
add
and
imul
jge
mov
and
push
ret
rolb
movb
push
ljmp
mov
adc
mov
jns
enter
lds
adc
in
adc
lahf
xchg
test
andl
fisttps
stos
xor
push
mov
in
push
test
fwait
xchg
dec
nop
xchg
imul
inc
cmp
out
or
push
cs
inc
lcall
xor
gs
add
sub
test
bound
jp
dec
js
xor
add
add
in
push
push
dec
ret
push
push
bound
push
mov
mov
lds
cs
icebp
add
lds
js
add
lock
mov
xlat
out
jecxz
push
cld
lods
test
cmp
scas
xchg
push
or
lods
xchg
xadd
push
mov
mov
roll
es
fidivrs
fwait
sub
or
int3
popf
pushf
sar
sub
pop
sbb
es
mov
inc
fucomi
insb
xchg
or
mov
mov
mov
shll
lock
fwait
ds
shrb
jno
lds
popf
pop
xchg
adcl
inc
cmp
sbb
shlb
cmpsl
fiadds
cli
test
aad
cs
data16
push
fwait
xor
loopne
sarl
es
xchg
stc
sbbb
aaa
add
and
js
lock
inc
jb
cmp
je
ds
pop
push
inc
aas
push
lret
adc
dec
push
and
or
jp
test
aad
add
push
add
pop
jne
dec
jo
jne
or
popa
add
pop
fdivs
mov
insl
enter
or
inc
subb
sbb
in
mov
testl
pushl
movsb
outsb
js
sar
sub
or
cmpsb
fs
cmp
lods
into
daa
aas
fadds
mov
outsb
push
pop
mov
in
cld
cmpsb
stos
push
mov
ret
mov
pop
andl
sti
xor
xchg
stos
ret
mov
add
sbb
je
daa
mov
je
xchg
lods
or
xchg
adc
call
rclb
xsaves
adc
cmp
xor
clc
xchg
in
pop
jp
out
xor
cld
ja
or
jmp
fwait
out
sbb
sbb
lret
scas
jb
mov
adc
shlw
ret
rcrb
mov
add
jle
lret
in
out
push
movsl
movsb
outsb
outsl
jno
xchg
xor
cmc
cmp
pop
pop
or
fidivl
mov
pop
add
pusha
aas
mov
jmp
or
jmp
add
and
pop
imul
rcll
jmp
push
rcll
pop
mov
mov
or
les
xchg
jle
xor
cmpl
fldenv
iret
sub
mov
mov
mov
jecxz
cld
ss
aas
jno
sbb
test
stos
jmp
or
mov
or
rcr
push
add
inc
mov
ret
lar
cmp
mov
out
loope
negb
test
das
js
mov
jle
js
scas
fwait
push
or
sub
add
jbe
inc
loop
addl
xor
mov
nop
mov
testl
mov
shrb
sbb
adc
dec
pop
icebp
mov
movsl
mov
mov
mov
insb
insl
jmp
inc
in
movsl
call
xchg
xor
pusha
pop
or
push
or
jbe
mov
mov
xchg
bound
lods
mov
add
icebp
inc
add
movsl
pop
and
ljmp
lds
shrl
sub
cmp
and
jle
mov
dec
pop
rcrl
push
insb
rorl
push
pop
mov
subb
subb
lock
outsl
sbb
jecxz
insb
in
dec
clc
inc
paddusw
outsl
icebp
test
and
mov
xchg
xchg
xor
jp
add
movsb
pop
outsl
int
rcr
ret
pop
cmp
xchg
cmp
add
jl
jno
inc
in
jbe
push
scas
or
scas
rclb
fists
mov
inc
mov
mov
ret
lret
sbb
mov
cld
push
ds
fsubrl
cmpl
mov
aas
and
ret
jnp
or
outsb
pusha
fimull
xchg
jmp
icebp
xor
sub
sub
cmc
outsl
cmp
push
cmc
jge
add
sbb
cmc
es
fisttps
idivl
mov
xor
loopne
pop
adcb
imul
cwtl
scas
sub
add
and
mov
sbb
mov
jno
or
cmp
fcoms
dec
lds
or
dec
in
and
lret
bound
jl
std
push
push
jmp
movsb
shl
into
daa
xor
and
inc
lcall
push
inc
cli
rolb
loop
insb
add
sub
lcall
or
scas
sarl
add
mov
push
jg
shlb
jno
mov
add
jno
loope
stc
or
inc
popf
jg
jge
mov
push
add
pop
test
hlt
mov
sub
out
cmp
adc
loopne
lret
xor
stos
addr16
mov
or
sbb
mov
push
rorl
hlt
xor
inc
adc
and
and
jo
jp
pop
push
in
dec
sub
mov
xlat
xchg
lock
outsl
movsl
test
cmp
sbb
cmpsl
shlb
xor
cmpsb
or
inc
daa
hlt
xchg
hlt
or
add
lahf
jne,pt
jle
inc
addr16
mov
bswap
outsl
and
mov
bound
sarl
outsb
scas
inc
cmp
mov
mov
adc
scas
cli
jne
or
mov
sbb
push
sub
and
push
mov
jno
lret
addl
mov
xor
int3
fisubs
jg
mov
inc
ret
or
subl
clc
cmpsl
cs
lock
add
cmp
jg
bound
iret
lods
mov
push
sub
and
mov
inc
sbbl
orb
int3
and
jbe
insl
arpl
add
mov
popl
xor
mov
scas
mov
enter
xorl
data16
shlb
pusha
lcall
inc
push
xor
dec
outsl
dec
mov
daa
add
mov
pop
cmp
mov
movsl
pop
pusha
dec
mov
cmc
cmp
sbb
xor
movsb
lret
shrl
decb
pop
scas
test
and
inc
push
push
pop
sbbb
into
cmpsb
jae
pop
popa
mov
adc
pop
and
sbb
add
sbb
sbb
cltd
mov
imul
ror
dec
std
fcmovne
cmc
dec
fwait
stc
enter
dec
pop
lcall
push
addr16
sbb
jo
test
dec
mov
arpl
mov
out
mov
adc
cmpsb
aas
clc
jge
add
inc
mov
jmp
cmp
xor
jae
jae
stc
cs
in
lds
mov
and
jle
test
push
test
call
mov
bnd
jmp
xchg
sarl
fstl
and
cmp
push
fistpll
adc
pusha
push
pop
xlat
xchg
les
and
fmul
dec
loopne
xchg
enter
lock
test
lock
jbe
fsubrs
pop
push
lods
or
rorl
pusha
jo
loopne
cmc
lretw
insb
imul
in
das
int3
jle
jb
das
loopne
dec
movsl
jmp
aaa
adc
dec
call
pushl
add
test
insb
dec
test
mov
out
adc
add
out
mov
mov
jmp
inc
pop
cmp
hlt
in
scas
push
xchg
enter
ja
inc
inc
shll
sub
push
mov
xchg
ds
pop
push
add
jno
gs
clc
xchg
les
cmp
std
orl
stos
pop
jl
and
dec
ret
aam
sbbb
pop
xchg
fmuls
ja
roll
lods
pop
dec
das
pop
push
test
inc
xor
outsb
jg
bound
aam
inc
cmp
notl
ds
cmp
mov
xor
xor
scas
add
fs
test
push
shll
in
or
clc
add
popf
push
test
test
in
ret
repnz
je
mov
dec
cmp
fwait
mov
mov
jmp
push
bound
clc
dec
pop
negb
lcall
push
outsb
mov
cmp
jecxz
filds
insb
fisubs
aad
mov
jge
pop
sbb
int3
les
ss
xchg
xor
adc
inc
push
cmp
mov
jmp
sarl
pop
xchg
loopne
mov
pop
pushf
daa
arpl
cmpsb
stos
or
ss
pop
pusha
sub
addr16
sti
aam
xchg
js
rol
rolb
in
sbb
jo
or
adc
les
movsb
dec
orb
aaa
loop
add
or
mov
mov
inc
in
inc
in
mov
adc
mov
push
outsl
aad
jno
and
cmp
roll
adc
jecxz
aas
cli
insb
cmp
in
mov
jmp
add
rcr
je
aad
mov
xlat
jmp
sti
out
cmp
in
xor
call
out
jmp
mov
jns
insl
leave
shrb
pop
pop
cmp
xor
mov
mov
lret
shld
inc
and
iret
push
ss
fistl
push
call
cmpb
stc
aam
js
imul
cli
adc
or
test
pop
nop
xchg
xchg
ret
mov
int3
sbb
pop
push
and
mov
jg
push
xchg
xor
rclb
lock
adc
repnz
mov
mov
out
xchg
stos
jne
cmp
push
ret
mov
jecxz
sub
loopne
inc
mov
loope
mov
xchg
pusha
xorb
movsl
ljmp
sub
cld
sar
pop
push
fsubp
cli
add
in
mov
xchg
out
shufps
xor
mov
out
adc
test
cmp
fwait
scas
ret
push
fimull
lea
pop
ds
aam
push
sti
mov
jno
xor
pop
addl
repz
cmc
push
popf
sub
push
and
mov
mov
and
dec
fldcw
jecxz
or
lods
dec
loopne
adc
sub
movsl
adcl
jmp
addb
mov
xor
les
fistpl
shlb
mov
pop
cs
xor
and
and
add
dec
inc
inc
adc
or
sbb
mov
andb
add
mov
sub
add
adc
in
shl
lret
ljmp
loop
add
or
pop
mov
lods
pop
mov
test
daa
loopne
push
jae
loopne
pop
or
inc
or
xchg
jecxz
mov
pop
ud1
aam
mov
lahf
fidivrs
xor
lret
mov
shl
pop
pushf
dec
mov
mov
mov
pop
push
xor
cs
mov
add
addr16
pusha
cmpl
jnp
push
pop
outsb
imul
cmpsl
adc
xor
int3
add
arpl
and
lds
mov
cld
popa
push
sar
loope
nop
fs
xor
mov
rorl
xchg
xor
shlb
fimull
ffreep
je
inc
jae
add
xchg
idivb
mov
subb
lock
mov
cmpb
lods
inc
es
lds
repz
push
and
jb
sbb
push
pop
jb
int3
cmp
xchg
jp
pop
test
negb
lea
and
mov
adc
pop
mov
js
call
shlb
icebp
rcrb
xchg
dec
push
jl
dec
push
lret
aam
nop
inc
adc
pop
test
jno
cmp
leave
jne
add
add
je
jle
lock
pusha
hlt
sbb
call
ja
loope
loopne
mov
push
or
pushfw
push
push
push
xor
jo
std
popf
sbb
jne
loopne
rolb
and
mov
js
dec
shrl
ja
inc
cmp
adc
or
cltd
roll
fdivrs
adc
cli
push
fmull
bnd
and
mov
mov
js
rcll
dec
loop
xor
cmp
sbb
add
inc
in
inc
adc
adcb
add
jae
cwtl
inc
fadds
or
xor
push
inc
js
xorb
dec
add
clc
cmp
popl
fdivrl
in
dec
je
mov
popa
pop
shr
loop
ffreep
fildl
push
pop
jo
xchg
gs
leave
out
cwtl
call
je
fsubrl
sbb
sub
icebp
dec
stos
jnp
outsl
addb
pop
jae
xchg
push
test
mov
daa
ret
ffree
pop
jb
lock
cmp
jecxz
xchg
and
xlat
sub
int
or
imul
ffree
insb
jo
add
inc
cmp
dec
test
orl
xchg
sahf
std
call
jb
jg
arpl
jno
mov
push
push
test
pop
mov
aas
stc
and
sbb
dec
sub
cmp
hlt
xchg
jo
insb
mov
and
jnp
and
clc
cmp
int3
mov
lods
iret
jno
bound
cmp
loope
lock
push
sbb
pop
push
leave
pusha
sub
fadds
fldenv
or
push
in
push
enter
loope
xchg
mov
jg
pop
pop
mov
push
mov
sub
or
test
int
sub
mov
xor
rcrl
cmp
mov
popa
xchg
sbb
ret
js
push
mov
daa
test
xchg
push
mov
push
loope
repz
cltd
adc
push
clc
test
and
sahf
jb
sub
sbb
pop
stos
jnp
push
cmpsb
cmp
jg
dec
mov
xchg
arpl
pop
shll
ss
sub
sub
call
jl
sbb
stos
xchg
cmp
xor
sbb
sbb
mov
mov
adc
mov
out
jp
push
int3
addl
outsl
sbb
or
call
or
jbe
testl
repnz
and
inc
mov
jno
in
pop
and
pusha
popa
xchg
icebp
push
sub
cmpsl
stos
stc
dec
push
sbb
out
aas
inc
movsl
std
aam
mov
subl
leave
add
sub
subb
lock
pop
into
test
movsl
xlat
push
sti
jnp
jne
push
lods
insb
pusha
aam
dec
sbb
clc
push
call
enter
enter
mov
jecxz
vcmpss
outsb
pop
push
pop
movsb
adc
mov
jb
mov
mov
flds
or
push
mov
xor
add
or
pop
lahf
or
dec
sar
frstor
adc
arpl
push
add
jbe
cmpsb
jae
cs
test
dec
lret
inc
addl
cmpb
adc
cmp
test
jle
pop
mov
or
hlt
pop
pop
fcmovb
iret
or
push
push
cmp
sub
xlat
jecxz
add
sbb
xchg
adc
and
push
pushf
pop
aaa
add
mov
mov
inc
and
hlt
pop
sarb
xor
ljmp
divb
adc
ret
insb
push
mov
sbbb
inc
adc
inc
aam
incb
add
add
sbbb
les
jg
jl
daa
testw
ss
out
in
mov
mov
in
mov
pop
jecxz
xchg
in
mov
xchg
stos
jno
pusha
xchg
sbb
loope
push
pop
pop
ds
js
pop
iret
aaa
sbb
jecxz
sahf
scas
add
pop
gs
je
enter
lea
pop
popf
fcmovbe
adc
in
sub
mov
test
sbb
int
call
jno
arpl
mov
push
dec
popa
mov
lahf
mov
ljmp
sub
sbb
mov
cmp
and
sbb
outsl
push
jmp
xor
mov
scas
js
scas
jnp
cmp
mov
add
std
push
push
sbb
shlb
inc
mov
or
jl
or
out
cli
repnz
hlt
pop
and
mov
mov
pop
jb
sub
insb
jecxz
cmpsb
and
nop
fstl
cmp
in
nop
add
inc
ret
xor
xchg
js
and
pop
push
lds
nop
pop
jno
outsb
mov
orl
ss
out
sub
and
and
loope
inc
jp
adc
std
sbb
cld
int3
out
mov
pop
jno
adc
adc
and
sub
or
cwtl
into
xchg
push
mov
add
insb
adc
jmp
shlb
or
negb
sti
jecxz
loopne
push
jb
dec
xchg
dec
xor
xchg
xchg
test
xchg
bound
bound
mov
cmpsl
xlat
inc
xchg
pop
pop
outsl
shrb
lods
add
adc
sar
aas
add
push
mov
dec
sub
xchg
mov
push
and
shrl
into
arpl
jg
and
and
out
pop
pusha
leave
sub
sti
out
inc
inc
shll
rcl
dec
lea
test
dec
std
test
jbe
insl
cli
test
sbb
sub
daa
orl
xor
mov
mov
mov
das
in
dec
cmpsb
fistl
call
inc
xchg
mov
add
and
daa
les
dec
ss
pop
mov
xchg
push
rorb
or
mov
dec
xchg
sub
xchg
xor
cld
cmpsb
out
lock
push
lea
shrl
insl
add
out
and
in
sahf
xlat
popa
or
mov
mov
mov
lock
mov
cmp
lds
and
xchg
add
adc
pop
and
cmp
cmp
and
shrl
mov
jae
or
mov
incl
std
lret
cmpsb
mov
sbb
push
push
push
rclb
add
jbe
daa
loope
jno
cmp
pop
push
lods
mov
iret
mov
mov
sub
aad
mov
jg
js
jne
mov
test
lcall
mov
andb
jl
clc
push
pop
cltd
mov
cmp
lock
push
shrb
imul
inc
rcll
pop
dec
xchg
mov
push
and
pop
and
out
dec
loope
mov
dec
mov
dec
imul
rclb
adc
shll
jl
xchg
inc
fadds
xchg
arpl
adc
xor
adc
das
xchg
ljmp
in
xchg
icebp
cs
sbb
inc
rcll
icebp
and
mov
dec
sahf
dec
rcr
jp
cmp
std
mov
es
xchg
and
jp
lods
insl
and
add
pop
cmc
mov
jae
lea
xor
cwtl
sub
dec
xchg
arpl
mov
pop
fwait
movzbl
rorl
pop
push
xor
and
sbb
push
cmpsb
cmc
les
ret
les
push
inc
dec
fcompl
ret
aad
repnz
ds
iret
mov
pushf
and
imul
mov
cmp
bound
ss
pop
mov
out
scas
mov
ds
fs
addr16
lock
push
into
xor
call
lods
and
and
addb
inc
data16
xor
jle
mov
js
shr
xlat
test
add
ds
stos
jne
das
jo
pop
ds
gs
ljmp
jb
xchg
dec
push
repnz
xchg
stos
jo
sub
ds
xor
push
or
mov
push
pop
mov
mov
mov
fstpt
out
cmpb
jge
inc
push
and
cmp
add
orb
mov
pop
sahf
pop
cmpsb
fcomps
insb
and
dec
loope
stc
sub
lock
dec
data16
mov
xor
fadds
push
scas
insl
add
pop
lods
mov
pop
fdivrp
adc
in
mov
jmp
sbb
mov
mov
ret
cs
roll
push
ret
and
adc
or
mov
sbb
push
daa
jecxz
rorl
loop
loop
add
mov
mov
test
jecxz
cli
xor
jno
xchg
out
sbb
lea
cmpb
mov
aas
cmp
cmp
call
icebp
nop
push
aaa
jns
sbb
add
rorl
mov
jne
push
adc
inc
and
add
stc
in
adc
jmp
xor
or
movsb
imul
shlb
dec
movsl
dec
push
lods
mov
aaa
jns
sub
pop
xchg
lods
movb
mov
sbb
mov
clc
leave
pop
pushf
sbb
or
pop
stos
push
ss
movsl
fsubrl
es
jo
inc
imul
stos
clc
fsubl
push
mov
cld
mov
fdivl
jecxz
pop
pop
sbb
mov
loope,pt
cmc
aad
enter
cmpxchg
lcall
pop
ss
outsl
loopne
mov
mov
push
inc
xor
cmp
push
sbb
jnp
and
fldl
jle
aam
sbb
jmp
dec
xchg
call
jecxz
call
xor
inc
jl
cmp
jo
dec
stos
out
rcrl
mov
jge
test
and
outsb
loopne
jle
subb
sbb
fsubrl
pusha
sbb
dec
in
pushf
jg
std
outsl
xor
xlat
stc
cmp
popa
xchg
xchg
jnp
inc
or
add
dec
pop
or
ficompl
cwtl
adc
add
jns
loop
sbb
addr16
sub
loope
or
push
mov
or
sahf
movsb
pop
in
xorl
in
jecxz
add
dec
jle
mov
cmpsl
jno
repnz
jo
jmp
adc
test
lcall
inc
dec
xlat
or
aaa
mov
cwtl
or
popa
rorl
mov
jns
icebp
lret
jb
cmp
pop
decl
add
shll
cmp
arpl
mov
outsb
inc
sti
sbb
sbb
jb
adc
jle
mov
ljmp
scas
xchg
dec
pop
sbb
cmp
mov
ss
pop
cmp
movsl
mov
inc
js
out
dec
cli
mov
mov
fs
js
jl
jge
fs
lods
push
sbb
pop
and
inc
or
loopne
mov
arpl
negb
inc
or
mov
scas
addl
ret
adc
xchg
iret
das
jecxz
nop
push
nop
js
cli
std
andb
cmp
sahf
iret
mov
jecxz
scas
sbb
into
pop
insl
cmp
fisttpll
or
sbb
xor
bound
outsl
dec
scas
divb
pop
jns
movsl
jne
in
push
jno
pop
lock
mov
test
xchg
das
cmp
jo
stc
out
aam
call
cmpsl
lea
jecxz
mov
mov
pop
xchg
clc
xor
rclb
lds
sub
cwtl
pop
cmp
lods
sbbl
nop
lods
subl
clc
mov
out
push
jg
xor
inc
mov
pop
rclb
jle
sub
xor
int
out
add
pop
jle
inc
sbb
les
arpl
pop
jmp
cwtl
jbe
or
cmpsl
cmp
test
ret
add
shrb
mov
add
arpl
cmp
or
adc
dec
aam
imul
adc
ljmp
jp
inc
cmp
test
loopne
ljmp
cmpl
movsl
jb
into
in
rcr
push
mov
fdivl
mov
inc
xor
movb
mov
push
xor
insl
ljmp
mov
mov
sbb
push
ss
xchg
das
mov
jno
out
push
push
repz
scas
dec
ss
xor
mov
ss
ds
jmp
inc
rorl
mov
jl
popaw
jb
jg
xchg
outsl
insl
push
int3
daa
pop
pop
xor
xor
mov
or
cmc
adcl
add
pop
cwtl
loop
sbb
sub
loopne
lds
xor
aas
pop
add
push
js
jb
mov
dec
mov
sub
imul
lock
test
test
xchg
sahf
xchg
test
sbb
inc
fildll
jl
mov
int3
jecxz
paddsw
cmc
shlb
fnsave
mov
dec
fisttpl
sub
test
out
arpl
test
push
mov
fwait
inc
mov
and
pop
sub
push
rcrb
xchg
aaa
ret
jb
mov
sti
pop
sbb
outsl
xor
add
je
dec
push
addl
xchg
jmp
lahf
leave
adc
xchg
sbb
cmp
loope
mov
sub
orb
cmp
arpl
jle
xor
push
add
sbb
adc
enter
mov
push
call
je
nop
cmp
pop
pop
cmp
jle
add
xor
adc
cmp
lock
rcrb
sbb
jo
ret
mov
xchg
dec
xor
push
loopne
fdiv
loopne
and
xchg
or
and
pusha
xchg
daa
shrl
xor
imul
or
imul
test
xorb
jmp
add
xchg
aas
fwait
test
nop
or
xchg
mov
xlat
mov
cmp
mov
ds
fstl
sbbb
xor
and
xchg
cmc
cmc
int3
dec
xor
loopne
shr
insl
js
sbb
xorb
leave
jno
gs
inc
jmp
and
cmp
jl
in
rolb
loope
pop
out
push
insl
icebp
test
inc
outsl
lahf
outsb
cmpsb
ljmp
arpl
pop
push
inc
outsl
cmp
orb
hlt
dec
sub
cmpsl
sub
pusha
pop
out
push
cmovl
push
xchg
arpl
sub
jo
push
sbb
mov
cmp
inc
lcall
jae
xchg
movsl
stc
ret
sbb
fcmovb
movsb
push
pop
and
ja
orb
das
out
movsl
dec
inc
inc
fdivs
jmp
arpl
xchg
sub
insl
adc
fidivs
iret
adc
fldl
cmp
adc
out
adc
adc
mov
rol
or
cwtl
lea
into
in
jno
cmp
mov
inc
xor
scas
jge
xor
pop
cwtl
or
jns
mov
mov
adc
ja
jns
adc
xchg
nop
rclb
stos
mov
enter
pusha
cmp
and
imul
sub
stc
orl
adcb
xchg
lods
push
push
stos
push
or
adc
imul
jb
lods
je
test
dec
mov
repnz
xor
jb
push
cmp
cli
loope
pop
fidivrl
lret
movsl
add
sbb
movsl
pop
jo
and
push
es
jge
lock
sub
mov
mov
daa
sub
jge
xchg
ss
pop
and
mov
les
jbe
mov
icebp
es
jo
stc
inc
aad
out
jecxz
outsb
mov
inc
add
adcb
inc
outsb
addr16
adc
loope
and
jne
shlb
add
push
ret
push
adc
pop
fs
and
or
sbb
dec
cmc
cmp
push
mov
mov
mov
loop
call
insl
sub
fchs
jnp
xchg
iret
or
cmp
enter
jmp
int
push
lock
or
pop
repnz
pop
loopne
pop
xchg
sbb
xchg
sbb
call
popf
xor
in
xchg
pop
mov
mov
pop
dec
clc
sti
je
mov
rcll
mov
cmc
mov
adc
lock
stc
and
lods
aad
cmp
sbb
xor
dec
mov
mov
loop
hlt
shrl
shrb
jle
jp
bound
jg
enter
loop
nop
clc
mov
iret
clc
test
cmp
aam
shlb
sub
cmpsl
insl
xor
mov
xor
scas
push
shl
add
shr
xchg
lea
xchg
mov
js
aam
inc
ret
jecxz
mov
int3
mov
loope
pop
pusha
lods
imul
adc
filds
push
push
jns
loopne
ds
inc
add
and
jmp
push
add
les
pop
sbb
xlat
loope
xchg
push
and
cmp
ror
jo
lahf
out
mov
daa
pop
pusha
mov
push
rolb
and
mov
pop
loopne
inc
cmp
pop
lods
out
mov
pop
pusha
outsb
cli
or
ds
in
insb
incl
sbb
ret
xor
imul
aam
adc
mov
insb
in
mov
inc
rclb
es
jecxz
push
xchg
leave
push
data16
push
sbb
inc
xchg
shlb
popf
push
inc
test
test
pop
fdivrl
add
rcr
aam
push
xor
lcall
or
add
lahf
pop
push
and
pop
call
fcoms
mov
inc
sbb
pop
xor
aam
pop
and
test
out
jmp
sahf
movsb
mov
clc
fidivrs
mov
lahf
push
pop
cmp
dec
push
jo
and
xchg
xchg
stos
mov
mov
ljmp
and
daa
hlt
sub
int
xor
jp
mulb
btrl
leave
dec
loope
cs
repnz
out
sarb
das
xor
jnp
sub
les
out
aad
sbb
push
cmp
adc
les
sbb
jg
mov
adc
mov
aam
imulb
add
add
push
inc
hlt
movsb
ds
aad
stos
jns
or
pop
push
shlb
cltd
repnz
out
dec
inc
imul
mov
mov
dec
mov
adc
jp
aaa
cld
fidivrl
and
popf
mov
add
jno
cld
pop
or
adc
mov
adc
divb
scas
and
xor
sub
movb
stos
cltd
jp
mov
mov
in
push
cld
repnz
push
pop
jbe
mov
pop
add
cmp
sbb
enter
and
sub
or
jge
mov
push
mov
pop
dec
enter
jo
shlb
xchg
clc
push
imul
jg
and
insl
lods
xor
push
inc
incl
and
out
and
push
push
sarl
sbbl
xor
dec
loope
xor
push
pop
jmp
sub
outsb
loop
hlt
das
pop
push
sbb
in
cmp
push
call
inc
cmc
jnp
xchg
js
xchg
mov
mov
je
push
fdivl
movsl
shrl
outsl
lds
jb
shll
ljmp
call
aam
adc
mov
js
dec
pop
je
push
sti
pushf
cmpsb
incl
ss
dec
iret
sbb
jecxz
dec
int3
and
adc
xchg
mov
stc
loopne
lea
adc
stc
ja
imul
repz
lods
aas
orb
icebp
enter
add
or
add
pusha
push
into
pop
and
test
sbb
push
js
push
mov
sub
les
mov
pop
inc
sub
gs
call
inc
iret
fiadds
icebp
subl
xchg
mov
lret
ror
xchg
or
out
add
push
movsl
push
in
push
aas
jmp
sub
les
jp
jnp,pt
dec
sbb
pop
sub
movlps
sbb
sub
aam
push
add
or
out
pop
out
test
loop
shlb
or
imul
push
fmuls
mov
and
pop
icebp
add
stc
loopne
movsb
jno
sub
popf
mov
push
jge
imul
nop
sahf
lock
loop
jb
jecxz
jecxz
xchg
ss
sub
mov
jg
inc
and
mov
es
sbb
fsubp
clc
add
sbb
cmc
sub
inc
mov
insb
sbb
dec
mov
icebp
call
ret
enter
scas
ja
jo
xchg
test
xchg
pop
jne
sub
stos
inc
fwait
andb
call
les
das
ret
out
pop
mov
xor
mov
testl
out
loop
outsb
arpl
push
jns
pop
xchg
and
add
andb
jge
jmp
lret
fistpl
icebp
sbb
test
je
js
mov
flds
hlt
mov
or
fst
adc
xchg
ss
xchg
adc
xchg
arpl
mov
pop
ss
rcrb
push
aaa
test
jo
sarb
repz
xor
sub
sbb
or
je
lock
sbb
adc
cld
sbb
movsb
xor
das
jl
add
movsl
or
mov
bound
jl
cmp
mov
or
push
cmp
jo
mov
sub
ficoml
lret
sub
adc
xorl
push
pushf
jmp
ss
push
mov
outsl
and
inc
mov
ljmp
jecxz
sbb
add
mov
adcl
pop
jmp
adc
pushf
pop
mov
mov
sbb
jnp
fwait
xor
enter
sub
or
dec
imul
push
dec
aam
mov
stos
test
push
dec
xlat
sahf
pop
dec
cmp
cmpsl
repnz
loope
mov
cmp
inc
inc
xchg
mov
push
je
mov
fadds
mov
or
in
jne
add
fadds
pop
adc
push
sbb
stos
insb
jle
pusha
mov
cld
xor
push
or
push
fdivrl
cld
lcall
or
lods
out
or
dec
cwtl
dec
loopne
lock
call
sbb
out
or
fs
inc
insb
xchg
loope
mov
add
ljmp
or
iret
test
cmp
shlb
stos
xchg
out
in
add
sub
sbb
cmp
imul
jecxz
sbb
inc
repz
dec
xchg
clc
xchg
fisubl
mov
adc
daa
cmp
testb
outsl
cs
push
shlb
sub
sub
and
iret
out
test
cmpsl
add
add
rcr
jae
mov
sbb
and
stos
sub
ja
mov
jb
leave
ss
in
lahf
xor
jmp
adc
jmp
adc
sub
sub
lret
sbb
mov
mov
pop
xlat
pop
lock
pop
add
push
jecxz
xor
mov
lret
cmp
add
mov
cmpsb
aad
cmc
int
cs
pop
out
fildl
jns
inc
mov
pop
add
mov
jp
sub
inc
sahf
out
sti
adc
popl
aad
scas
cli
arpl
mov
enter
and
xor
icebp
sbb
mov
movb
insl
jmp
ja
js
pop
js
dec
sbb
add
out
lahf
repz
push
lods
mov
add
addl
test
call
iret
xor
mov
mov
inc
mov
sbb
sahf
clc
dec
js
ja
enter
ret
test
or
ljmp
jle
sbb
cmp
repnz
imul
xchg
xchg
std
add
idivl
xchg
leave
sub
fbstp
jp
mov
mov
add
add
pop
andb
push
or
adc
cmp
jmp
pop
testl
js
leave
add
rcr
xlat
dec
out
cmp
pop
fisttps
in
mov
sbb
fdivs
mov
jecxz
dec
pop
ds
pop
lods
or
and
test
testl
cld
sbb
fisubrs
pop
loop
jp
mov
insl
pop
push
outsl
sub
sarl
adc
sbb
roll
add
jns
mov
xor
into
loop
mov
inc
xor
call
nop
arpl
pop
dec
ret
adc
outsl
in
dec
push
or
insl
xor
sarl
les
cmp
cltd
movl
pop
mov
mov
ljmp
push
dec
test
pop
cli
clc
push
roll
or
mov
xor
push
icebp
pop
jno
out
mov
es
add
adc
push
push
sbb
lahf
mov
popa
add
mov
int
fmuls
jle
or
sbb
pushf
in
lods
xchg
aad
mov
mov
sub
jle
je
lods
jge
fadd
mov
outsb
cmp
cs
int
aas
mov
movsl
je
jl
dec
or
push
movsb
dec
es
and
pop
or
mov
sbb
cs
cltd
cmpsl
adc
inc
in
je
mov
cmpsl
xchg
lea
cmovo
lcall
bnd
ret
iret
inc
dec
jle
addb
mov
adc
fs
pop
mov
cli
or
adc
push
outsl
adc
rol
adc
pop
or
xchg
mov
std
mov
testb
dec
rol
rcrl
sarl
shrb
sti
sbb
push
jno
pushf
or
xchg
pop
in
mov
jae
nop
jb
mov
sarl
mov
rcll
mov
loop
xchg
ss
cmpsb
mov
aam
mov
repnz
shrl
jae
xor
push
jbe
arpl
popf
lcall
jge
pop
dec
mov
into
push
xchg
cmp
cltd
and
lods
imul
push
mov
push
sub
stos
xor
inc
outsl
jle
and
mov
icebp
push
inc
and
pushf
enter
or
push
call
aaa
cmpsb
add
mov
mov
lods
adc
out
insb
lret
aad
mov
pop
mov
ds
popl
popa
pop
push
or
lods
and
sub
mov
je
pop
adc
clc
cwtl
ret
xchg
cmpsb
xor
movsl
mov
push
lods
mov
shll
xchg
lret
cmp
add
fcoms
cwtl
lods
xor
ds
decl
cmp
sub
inc
or
cmp
dec
inc
sbbb
fildll
pop
enter
pop
xorl
adc
testl
adc
mov
in
adc
mov
jmp
fisttpl
push
outsl
rcl
push
push
jmp
sub
jmp
cltd
mov
andl
stos
dec
jle
lahf
push
xor
xor
lret
test
add
mov
mov
mov
xor
xor
pop
shr
outsl
test
mov
mov
cmp
mov
mov
push
jae
xchg
dec
xchg
and
stos
pop
cmp
jl
mov
sahf
test
push
cmp
add
enter
lods
jbe
in
popf
mov
repnz
in
test
movsl
cltd
mov
jne
dec
cmp
pushf
rcll
push
sbb
sub
cwtl
test
xor
mov
inc
loop
stos
cs
stos
fbld
dec
arpl
js
or
dec
mov
ret
mov
repnz
out
xor
ret
push
test
jp
in
scas
bsr
sbbl
add
mov
mov
rcl
sbb
adc
jmp
mov
dec
mov
ss
scas
adc
xor
scas
cmp
pop
stos
jae
add
add
add
roll
push
imull
out
frstor
push
jge
xchg
pop
stc
lock
xor
mov
push
pop
test
fcompl
incl
cmc
mov
mov
xor
cmpsl
aaa
aam
aas
push
push
imul
repnz
mov
fdivl
adc
ficoms
inc
jb
sbb
decb
and
aam
lahf
ret
mov
sub
pop
inc
std
in
push
push
and
jmp
pop
push
push
inc
mov
or
insl
in
mov
push
or
fwait
mov
xchg
fisttpll
aaa
rcl
stos
push
clc
dec
shrb
mov
jp
movsb
adc
sub
fs
push
aam
das
inc
sub
loope
and
insl
push
cld
adc
jl
push
sbb
xchg
dec
adc
cltd
loop
sub
sbb
jbe
mulb
push
stc
add
in
cmpsb
outsl
push
test
int
movsb
adc
pop
ds
in
test
test
es
pop
lock
push
add
push
xchg
cld
and
pshufw
hlt
das
or
stc
dec
dec
enter
jnp
or
cltd
push
test
out
push
add
push
mov
pop
aam
call
leave
ds
mov
xor
xchg
pop
or
stos
dec
push
xor
xchg
mov
lock
dec
in
inc
sahf
adc
idivb
add
xchg
sbb
scas
je
sbb
or
push
push
mov
test
sar
mov
nop
les
fildl
pop
sub
pop
jo
sarb
dec
test
or
fwait
and
cmp
cmpsb
xchg
pop
and
xor
lock
or
jbe
jl
xorb
and
add
sub
es
add
cwtl
xor
les
add
jb
inc
arpl
inc
mov
dec
push
shll
loop
rorl
and
js
jl
call
jo
sbb
and
out
flds
cmp
push
fsub
pushf
xchg
cs
rcrl
add
fadds
xchg
mov
orl
insb
adc
xor
push
or
pop
in
mov
loop
ss
mov
sub
jmp
push
dec
push
pop
sub
fisubrs
inc
sub
js
fisttpll
pop
jne
xchg
sbb
fmull
pop
mov
xor
outsb
pop
fidivs
stos
shlb
or
dec
pusha
or
push
test
and
push
loop
ljmp
adc
neg
sbb
aas
sysenter
call
cmp
ficompl
lods
mov
je
or
stos
jo
movsl
fldlg2
call
sbb
xor
mov
cmp
sbb
loopne
push
jnp
or
jecxz
shll
pop
ds
push
pop
push
cltd
inc
das
pop
jg
sub
je
fisttpll
dec
cmp
mov
aaa
sub
cmp
mov
and
adc
fildll
rcll
cmp
push
outsb
xchg
ja
sbb
aas
xor
arpl
dec
fists
cli
pop
shll
xchg
jmp
incl
subl
ret
add
dec
inc
sub
xor
imul
insb
les
decl
push
movl
lea
int
call
push
mov
inc
push
rorb
daa
ds
xor
loopne
add
or
pop
je
nop
jg
add
lods
andb
xor
inc
int
lock
repnz
rclb
aas
mov
lret
and
xchg
add
and
mov
mov
ljmp
mov
add
push
stos
data16
jp,pn
stos
insl
out
pusha
xor
xchg
xlat
int
pop
out
mov
test
stos
stc
cmp
mov
fidivs
into
popf
and
rorb
or
lock
aad
call
aam
clc
mov
mov
mov
inc
pusha
sub
repnz
pop
pushf
cmp
mov
inc
sbb
xchg
sub
sbb
mov
ror
inc
xchg
into
jge
mov
bound
lahf
test
lock
push
xor
shlb
mov
mov
jns
push
inc
adc
outsb
dec
mov
push
je
sbb
das
mov
mov
or
push
rorb
inc
fdivrl
jp
cs
fs
lahf
rclb
xor
pop
int
js
pop
jmp
sbb
sbb
sub
les
into
pop
adc
dec
loopne
es
adc
lret
jno
xchg
sbb
push
ds
cmpsb
stc
jnp
lahf
les
loope
pop
sbb
cs
sbb
test
mov
sub
fadds
adc
mov
pop
jne
movl
mov
aad
jmp
int
ss
push
cmpsb
add
clc
or
add
cs
rcl
xchg
je
xor
fisttpl
sbb
push
je
adc
jbe
xchg
inc
xor
shlb
sbb
jg
add
or
sbb
cmp
adc
shrb
out
and
stc
cs
xor
pushf
inc
shll
add
cmp
pop
sbb
sub
add
xchg
je
adc
in
xchg
daa
in
fdivr
dec
add
inc
ljmp
std
pop
adc
lods
push
ss
add
sub
popf
inc
inc
xor
cltd
adc
scas
pop
jle
call
sub
jmp
ficoml
or
mov
xchg
mulb
sbb
add
loope
fdiv
leave
adc
addl
out
mov
mov
jo
mov
lea
nop
ss
push
xchg
add
jne
cmp
jno
mov
in
jle
call
rcrb
insb
or
xchg
pop
arpl
mov
js
loope
inc
push
test
xor
outsl
mov
outsb
repnz
sub
movl
insb
mov
mov
mov
jle
sub
adc
mov
sbb
cmp
out
xchg
lods
push
dec
aas
dec
mov
cmp
add
mov
xlat
pushf
fsubs
loope
pop
mov
or
je
nop
hlt
sbbl
sarl
pusha
mov
mov
lds
jge
std
add
add
test
leave
xchg
inc
adc
inc
ds
sub
call
adc
cwtl
cmp
xor
fs
nopl
cld
stc
mov
add
enter
int
mov
push
mov
lock
in
pop
mov
sub
enter
xchg
pop
add
movsl
push
shlb
stos
sub
shr
addr16
pop
or
testb
shll
dec
insb
arpl
dec
sbb
add
sbb
std
adc
or
cwtl
jbe
out
sub
sub
mov
clc
cmp
int
dec
sub
aaa
mov
xor
mov
enter
insb
shlb
inc
adc
das
dec
jo
subb
push
xor
lret
and
mov
movsl
inc
repnz
lea
or
or
sbb
xchg
mov
test
push
and
mov
and
mov
inc
data16
xchg
cmc
mov
ja
mov
or
push
sub
outsb
pop
mov
fsubs
sbb
out
bound
ljmp
insb
dec
xchg
cmp
mov
sub
mov
sbb
sahf
or
push
or
loope
jno
hlt
push
mov
push
xor
jae
pop
xor
push
test
ret
in
test
jmp
pop
rcrl
into
cmp
inc
out
enter
mov
mov
push
rclb
outsb
add
loopne
push
mov
xchg
addb
dec
addr16
das
mov
das
dec
outsb
sbb
push
mov
and
cmp
sbb
lcall
je
loopne
push
inc
cmp
xor
inc
repz
inc
jne
shrl
mov
je
mov
sbb
jp
call
dec
mov
mov
jge
pop
xchg
rorb
pop
xchg
sbb
pop
mov
jmp
push
push
mov
das
inc
test
push
xbegin
clc
and
push
pop
jno
sbb
cld
inc
xchg
pusha
lahf
movsl
jg
dec
mov
stos
repz
add
ficompl
sbb
pop
jns
ret
adc
pop
jae
mov
lea
loopne
and
fiaddl
fisttpll
je
sbb
jmp
sbb
or
aam
jecxz
xchg
jo
in
clc
icebp
cmp
dec
sbb
loopne
add
push
dec
outsl
lcall
mov
inc
jb
jb
jle
fisubs
clc
pop
push
add
es
sbb
clc
in
mov
fnstsw
adc
out
sub
push
push
cwtl
sbb
push
push
pop
inc
lds
mov
mov
mov
in
jbe
sub
inc
xchg
in
push
adc
sub
mov
ds
or
mov
dec
inc
mov
sbb
and
hlt
rcl
and
jg
stos
decb
mov
int3
push
cwtl
int
push
stc
sub
ret
jg
sub
adc
adc
or
push
push
pop
pushw
add
mov
xchg
clc
pop
outsb
test
lods
mov
mov
push
push
pop
push
cmp
cmp
add
arpl
sbb
push
addb
sub
push
jne
decb
dec
push
das
jl
mov
mov
rcrl
test
pop
das
stos
lahf
push
mov
mov
push
aam
inc
mov
lock
xchg
inc
push
or
loopne
xor
xor
imul
sub
adc
ficoms
adc
sub
lock
pop
insb
jmp
cmp
pop
ss
fistpll
mull
xchg
add
and
call
jg
xchg
popl
cmp
mov
data16
sub
mul
leave
loopne
adc
or
cmp
pop
movsb
cwtl
or
das
pop
pop
out
rcr
lcall
and
lock
insl
in
push
mov
mov
adc
loope
cmc
push
jl
lods
dec
add
int
jg
cmp
xor
push
jbe
dec
mov
push
sub
pop
push
add
lahf
jle
add
orb
aam
andb
push
imul
add
mov
inc
add
jb
push
daa
push
mov
inc
test
dec
xchg
data16
adc
cmp
sbb
das
push
sti
shrb
fdivs
stos
push
cmp
arpl
dec
pop
mov
dec
nop
js
push
nop
jecxz
inc
arpl
jp
test
xor
jl
call
shrl
adc
cmpsb
xchg
push
stos
dec
mov
add
pusha
sbb
aad
dec
clc
scas
in
cli
adc
xchg
cmpsl
nop
repnz
adc
jns
cmp
jg
inc
lret
mov
pop
mov
lcall
pop
mov
dec
sub
dec
xor
xchg
cmpsl
lahf
cltd
cmp
jge
xlat
adc
xchg
lret
cmpsb
xor
mov
cmp
adc
mov
or
pop
dec
push
dec
imul
fidivrl
adc
cmpl
cld
xchg
adc
lds
cmc
dec
iret
lret
add
test
sub
stos
jle
jns
mov
pop
ja
inc
testl
dec
push
movsl
leave
push
xchg
sahf
add
das
movsl
add
in
fcoml
addr16
lahf
mov
jns
call
jb
sub
jl
pop
jo
loope
pop
pushf
mov
leave
outsl
sar
mov
jecxz
mov
xchg
and
fldz
test
or
add
xor
ret
pop
cwtl
jle
pop
shl
test
in
add
pop
mov
inc
testl
mov
movsb
adc
movsl
loopne
xor
jle
dec
lcall
pop
add
push
jbe
outsb
push
inc
je
push
into
push
lock
pop
imul
insb
icebp
shll
test
icebp
cmp
jbe
and
inc
and
xchg
adc
ret
lcall
jb
in
jg
mov
imul
mov
imul
arpl
fsubrl
pop
jg
outsl
insl
jp
cmp
lea
mov
jo
ret
add
cmp
jg
jo
pop
std
repnz
je
dec
inc
gs
enter
loope
and
xor
mov
scas
jle
data16
das
mov
scas
dec
aas
pop
fnstcw
adc
pop
sub
xchg
fs
filds
sbb
mov
push
cmp
inc
jl
dec
or
insb
lcall
mov
fs
mov
mov
clc
movsl
pop
push
les
dec
fs
enter
cmp
imul
sub
je
jnp
out
rorb
inc
jnp
jge
les
fldl
mov
mov
xchg
sbb
movb
add
sub
cltd
cmp
pop
dec
pusha
sbb
xchg
cld
shll
mov
push
mov
movsl
scas
js
cli
pusha
sub
hlt
sub
rclb
rol
test
sbb
add
loop
hlt
push
sbb
repnz
adc
jo
arpl
pop
sub
clc
xorb
cld
push
pmaddwd
and
lods
mov
or
mov
mov
mov
jns
sbb
mov
pop
sub
jae
xchg
xlat
push
jge
add
es
jo
inc
sub
add
mov
ret
sub
sbb
mov
inc
rcl
xor
jl
out
mov
arpl
addb
dec
mov
dec
repz
mov
push
fsubl
add
or
cmp
or
add
pop
sub
adc
data16
outsl
mov
test
mov
repnz
add
stos
cmp
jmp
add
inc
sbb
mov
xlat
stos
lods
inc
popf
add
imul
adc
inc
sbb
xor
xlat
rorb
push
and
adc
jmp
pop
rorb
out
sub
pushl
inc
jg
imul
xchg
push
add
or
leave
pop
and
adc
fs
add
cmp
movsb
jno
adc
jl
add
movsl
fnstcw
in
pop
cmc
push
and
jmp
movb
inc
call
mov
mov
mov
loop
cmpsl
je
test
adc
inc
add
fwait
fwait
out
ret
mov
xchg
out
or
push
lods
or
xor
mov
jbe
jmp
ret
rolb
add
pop
xor
sub
xor
les
or
nop
xor
incb
mov
scas
lock
orl
push
stc
dec
add
inc
test
or
add
mov
arpl
and
mov
inc
pop
js
jae
repnz
mov
fwait
mov
loopne
cmpsl
pop
ret
xchg
mov
ret
xchg
in
inc
fsub
and
rorb
add
cmp
pop
mov
jnp
push
jg
dec
lret
push
dec
jne
aad
xorl
popa
xchg
ljmp
shr
inc
mov
adc
or
mov
jp
mov
daa
test
cli
jo
cli
jmp
inc
pusha
pop
jo
adc
inc
mov
adc
pop
out
adc
mov
hlt
sbbb
jp
roll
fsubrs
mov
xor
sbb
lods
nop
out
mov
shll
cmp
mov
bnd
xchg
mov
cld
mov
popf
test
loop
enter
sarb
dec
xor
movsl
push
pop
bound
xor
push
cmp
mov
js
xchg
jno
pop
jecxz
or
jno
and
add
pop
jno
and
je
sarb
fisubrs
add
cli
sbb
dec
adc
sti
dec
push
outsb
jno
push
mov
adc
loope
test
and
xor
xchg
les
and
subl
jbe
jg
movsb
push
pop
jmp
dec
inc
gs
fiadds
testb
mov
jo
push
rol
xchg
insb
or
push
mov
ficompl
int
divps
sar
jo
dec
add
add
stos
call
mov
adc
or
push
cmp
bound
xor
arpl
sub
mov
and
dec
jp
loope
shll
sbb
sub
dec
push
and
push
mov
jns
idivb
loop
data16
mov
sbb
cwtl
jno
and
or
push
sbb
int3
hlt
push
stos
add
or
les
add
sbb
pop
inc
fucomp
movsb
je
push
dec
adc
arpl
mov
mov
add
dec
repz
les
mov
std
xor
bound
test
add
fcmovnbe
jecxz
xchg
or
pop
in
ljmp
negl
add
in
clc
cmp
dec
iret
ja
aam
stos
andb
sub
jo
cmpsl
dec
sbb
cmpb
fcoml
sub
and
or
dec
nop
add
dec
inc
mov
hlt
scas
jmp
pop
movsl
es
data16
xchg
push
sub
sbb
mov
incl
aaa
push
lret
sub
pusha
or
xchg
and
add
inc
and
ja
sarb
shlb
sti
inc
xlat
call
fs
mov
inc
addb
push
sbb
out
or
clc
sbb
jb
xchg
popa
inc
xbegin
jl
pop
push
iret
mov
push
cltd
xchg
bound
scas
lock
mov
lahf
mov
add
movsb
mov
pop
pop
cmp
add
sets
adc
loop
pop
movsl
jns
lds
sahf
mov
push
in
inc
push
je
jg
pop
and
in
imul
and
mov
jmp
lea
xchg
pop
mov
lods
sbb
mov
pop
mov
pop
outsb
add
mov
loopne
inc
insl
push
xor
sub
testl
sbb
dec
cld
dec
sub
fwait
jnp
enter
pop
mov
fadds
call
cld
sbb
xlat
adc
aad
pop
frstor
into
cmpsl
ljmp
call
decl
or
xor
nop
inc
cmc
mov
inc
les
and
push
push
cs
push
es
xchg
push
cmp
sbb
test
rorl
mov
pop
or
mov
sub
mov
push
cli
add
or
jp
movsl
repz
test
mov
rclb
in
and
roll
mov
movb
les
pop
orl
aam
notb
pop
xchg
push
sbb
xor
mov
aam
sub
subb
inc
call
add
jp
or
das
add
pop
sub
pop
add
rolb
mov
sbb
int
xor
pop
push
int3
xor
jle
mov
mov
xor
rol
lods
aaa
pop
and
mov
clc
rorb
mov
jns
push
jae
push
push
lods
push
movsl
or
and
shr
stos
pop
and
popf
push
and
ret
idivb
mov
outsb
and
stos
test
xor
insb
call
repnz
imul
mov
sarb
jecxz
bound
mov
lret
inc
or
xlat
andl
fwait
repnz
jae
lret
jle
aad
pop
test
lret
sbb
dec
das
jecxz
add
jl
ds
dec
inc
pop
inc
sbb
adc
cmpsb
mov
cltd
sub
pop
cmpsl
mov
rorl
shll
mov
icebp
mov
bound
fldl
ds
mov
aas
cmpsl
mov
pushf
pop
and
loope,pt
fcmovnbe
inc
cmp
pop
es
ja
sub
fwait
push
call
adc
push
sbb
outsb
or
xchg
mov
rol
js
push
mov
jae
int3
sbb
and
push
pop
mov
loope
mov
mov
lret
mov
aam
add
dec
or
pop
adc
mov
outsb
mov
fstps
ret
add
dec
jns
pusha
push
aad
cmp
cwtl
or
xchg
push
mov
js
cmp
mov
lock
cmp
xchg
add
ljmp
sub
clc
pop
movsb
xor
sahf
imul
pop
pop
lahf
insl
jl
notb
jg
or
sete
cli
inc
cmc
repnz
mov
or
mov
loopne
pop
push
mov
jmp
jmp
sahf
adc
sbb
addb
inc
lds
cld
pop
ljmp
add
repnz
pusha
gs
add
adc
scas
ret
xchg
add
jns
mov
jl
lea
sahf
stos
pop
sbb
inc
jmp
into
pushf
rorb
repnz
fwait
push
jno
xchg
testb
loopne
in
xor
adc
add
add
and
dec
loopne
stos
test
clc
inc
or
jl
out
mov
movnti
fisubrs
fistpll
insb
inc
bound
adc
stos
pop
filds
sbb
inc
lret
sarl
aam
sub
inc
mov
mov
cli
add
mov
inc
popf
mov
mov
push
add
adc
outsb
es
jno
cmp
sub
nop
xor
shlb
insb
mov
inc
ret
add
xchg
inc
cmpsb
inc
je
mov
imul
jo
add
xor
push
out
jnp
rcl
outsl
das
jne
pop
jg
aam
xor
mov
inc
bound
or
mov
shlb
test
pop
aad
mov
add
pop
jbe
jge
jge
or
mov
push
xor
daa
cmpsl
js
add
ficoms
cld
hlt
push
cwtl
popf
and
rcll
add
inc
call
sub
push
or
adc
and
jno
ja
test
mov
cltd
xor
int
js
xchg
inc
rol
sub
adc
std
mov
stc
shr
cmc
andl
and
xchg
loope
jle
fbstp
aas
ficomps
cld
push
je
aas
test
movsb
jge
add
movsl
jmp
add
sub
jno
sub
pop
lea
sbb
or
add
call
or
xor
test
fstpl
inc
push
lods
pop
pop
mov
adcb
pusha
fsts
gs
shrl
or
xor
mov
xor
inc
mov
mov
stos
lret
cmp
cmp
pop
lds
daa
popf
das
xchg
lods
sbb
xor
idiv
and
test
movsb
cmpsb
mov
divl
fsubrs
and
les
sbb
sub
cmp
stos
xchg
in
mov
cli
pop
bound
les
pusha
les
push
xchg
sub
mov
and
clc
jns
bound
jno
addr16
pop
enter
iret
mov
es
loop
push
mov
daa
sbb
es
cs
pop
je
aaa
mov
comiss
fiadds
xchg
cmpb
pop
shld
pop
test
sahf
test
aaa
jecxz
pusha
xchg
cmp
adc
inc
leave
push
dec
push
incb
test
mov
add
sar
jmp
outsb
subb
lret
loope
sbb
cmpsb
push
cmp
jecxz
push
popl
jb
cmp
roll
shrl
mov
cmpsb
jp
mov
jae
pusha
repz
mov
mov
pusha
jmp
jge
pop
cmp
testb
dec
pop
pushf
xor
sub
or
pop
sbb
push
ret
cmp
xchg
out
sub
add
das
test
cmpl
adcl
dec
xchg
mov
ljmp
inc
wrmsr
jge
das
mov
popf
push
xor
adc
ljmp
je
dec
mov
js
and
xor
and
sub
jae
loopne
pop
dec
add
stc
mov
adc
pop
enter
dec
jle
jmp
push
xchg
adc
jno
test
mov
push
and
aam
xor
lea
sub
xor
dec
fistl
and
js
lret
andb
lods
aam
or
lods
xor
mov
xor
pop
adc
inc
push
sbb
ficoml
rol
out
hlt
sbbb
orb
mov
jae
mulb
sbb
mov
push
dec
sub
xchg
lods
mov
pop
dec
xchg
adc
rcl
cli
adc
fisubs
mov
in
lahf
cs
loopne
popl
repnz
dec
ja
fcomps
jmp
xchg
xchg
incl
aaa
adc
push
shlb
roll
popl
loopne
add
pop
ds
adc
sub
dec
sub
outsl
jl
jle
add
cmpsb
outsb
movsb
insb
jb
stos
loopne
fstpl
cmp
mov
rolb
pop
inc
fdivrs
jmp
jmp
call
and
movsb
push
loop
ds
icebp
daa
mov
pop
mov
loop,pn
xchg
outsl
add
mov
test
cmp
loope
mov
add
mov
and
divl
fistps
sbb
xor
xchg
xchg
add
cmc
push
test
jge
pop
fisttps
and
fsubl
inc
pop
push
fsubrl
or
xorl
test
jne
adc
and
and
push
jae
xor
dec
add
sbb
out
inc
out
dec
negl
adc
int
sahf
out
xor
ret
popf
and
aad
pop
fnstsw
dec
call
out
push
xchg
xor
cmp
adc
xor
repnz
ds
clc
sbb
in
cld
xor
mov
daa
test
ljmp
add
sub
in
push
cmp
shrl
das
xchg
aas
aas
lahf
mov
imul
pop
roll
insl
and
imul
add
movsl
xchg
push
inc
push
or
cli
lret
lods
outsb
lock
jecxz
cmp
arpl
int3
mov
xchg
fidivrl
js
jne
mov
hlt
daa
incb
imul
enter
lahf
fildll
int
mov
inc
xor
jno
pushf
pop
sahf
aam
or
sbb
pop
push
inc
dec
das
xchg
sub
mov
pusha
stc
add
mov
mov
lea
xchg
dec
mov
lret
repz
lods
aad
and
test
ljmp
nop
testl
push
outsb
addl
cmp
sub
xlat
jp
mov
popf
and
cli
sub
aaa
dec
xor
pusha
in
fildll
pop
rcrb
test
push
mov
jp
push
xchg
add
gs
loope
and
rcl
add
das
mov
loopne
mov
movsb
push
or
dec
pop
scas
push
clc
dec
cmpsl
mov
push
xchg
cmpsl
lahf
sbb
cli
repz
inc
popf
mov
stos
mov
cmpl
inc
dec
mov
and
sub
loop
les
adc
fistpll
sbb
mov
jno
jmp
in
rcrl
movsb
inc
mov
out
cmovge
and
out
int3
jnp
push
sarb
lds
insl
mov
add
adc
arpl
loop
aas
push
cmc
aam
outsl
xlat
sarb
ret
je
push
aaa
add
or
rcl
xchg
movsb
bound
lahf
mov
shll
jle
jmpw
incb
lock
dec
ljmp
push
mov
sub
pop
call
outsl
les
pop
ss
pop
or
xchg
and
outsb
inc
push
xor
js
push
test
push
stos
mov
ja
or
cmpsl
adc
pusha
enter
rol
cltd
mov
lock
rorb
mov
dec
pop
aad
int3
in
sarb
cld
xlat
xchg
test
aas
dec
sbb
repnz
or
sub
mov
adc
jp
xor
xchg
jmp
pop
inc
daa
jp
iret
pop
or
adc
and
stos
mov
and
mov
xchg
add
shrl
outsb
add
jecxz
push
cmp
dec
cmpsl
es
pop
test
test
sbb
movsb
pushf
xor
addr16
cmp
test
sub
outsl
xchg
iret
sbb
rorb
cmp
add
push
cs
mov
fwait
pusha
push
mov
adc
and
add
mov
lahf
inc
jo
enter
cmp
mov
lock
loop
ret
das
mov
mov
push
outsb
movl
aas
push
jnp
ljmp
fnstcw
fbld
adc
xchg
loop
popa
sbb
loopne
add
cmpl
and
clc
lods
pop
mov
je
add
scas
mov
stos
sbb
rcrb
mov
mov
mov
add
notb
ret
daa
push
sub
decl
xorb
pusha
or
enter
jmp
jns
loop
add
mov
cmpb
inc
and
jno
es
call
jae
jb
imul
sbb
xchg
mov
jg
mov
sub
mov
pop
and
inc
fwait
and
inc
shrb
lret
mov
leave
bound
push
xchg
out
push
shll
fwait
hlt
adcb
push
adc
imul
outsb
sbb
stc
cmp
adc
mov
jecxz,pt
sub
mov
and
jne
cmpsb
pop
repz
dec
xor
push
dec
mov
sub
push
dec
clc
stos
push
or
jmp
push
push
test
les
dec
adc
fstpl
push
aaa
bound
or
test
push
jl
test
mov
sub
add
add
xor
xchg
js
pusha
aad
ret
dec
pop
lods
or
sub
jo
or
rorb
out
std
inc
push
dec
dec
call
jno
pop
mov
push
cmp
fisubl
xor
shr
mov
cltd
or
jbe
mov
inc
mov
mov
jle
jmp
rolb
mov
test
mov
xchg
ljmp
es
roll
cmc
outsb
xchg
inc
adc
jg
test
push
adc
lret
inc
enter
or
sbb
cmp
dec
jp
xor
push
add
pushf
cmp
test
filds
icebp
dec
mov
push
testb
sbb
pop
mov
jl
or
jns
cld
movsb
daa
in
add
rcrl
cs
cmp
rclb
or
iret
xor
icebp
hlt
jns
shl
lods
pop
add
jns
cld
mov
movsl
cmpsl
push
bswap
inc
xor
sub
clc
mov
icebp
cltd
lods
cmc
scas
mov
dec
mov
or
xchg
jecxz
dec
adc
dec
sub
ljmp
sub
cltd
pop
jle
mov
push
dec
in
cmp
xor
mov
push
dec
fisttps
test
or
adc
mov
std
aam
push
adc
push
mov
rcrl
ljmp
sbb
push
cs
stos
sarl
pop
or
mov
mov
cmpsl
fnsave
dec
mov
leave
pop
fldenv
jo
sub
scas
mov
out
or
mov
out
test
inc
mov
xor
test
inc
add
push
ret
xchg
insb
hlt
jecxz
ret
xchg
cmp
aam
cmc
shll
pop
sbb
cmp
sub
xchg
xchg
mov
push
and
int3
and
dec
jno
fadds
test
mov
cmp
xchg
pop
cwtl
shrl
mov
pop
adc
or
push
inc
mov
lock
cli
retw
mov
push
push
loopne
cmp
adc
mov
mov
fdivs
mov
fmuls
shrl
xchg
jecxz
or
cli
add
jg
push
mov
pop
jbe
ss
test
jo
outsl
and
das
pop
rcr
test
cmp
xor
pop
shlb
ss
dec
into
cmpsb
repnz
add
mov
cs
lret
lcall
out
test
mov
js
add
dec
add
scas
insb
in
xchg
in
cmp
add
jecxz
mov
mov
dec
clc
into
addr16
testb
dec
mov
rcrl
xchg
out
mov
mov
movsl
out
dec
add
cmp
cltd
cmp
out
pop
outsl
or
or
clc
movsl
jle
cli
lods
xor
xor
cli
mov
int3
lea
lods
inc
jp
xor
test
mov
or
ds
test
jg
mov
in
daa
xchg
mov
sti
in
and
ss
pop
loopne
inc
xor
mov
roll
stos
mov
cmp
jbe
loopne
jl
cli
cmpsl
push
and
mov
stos
movsl
xchg
aam
lahf
out
loope
push
sbb
jbe
add
jnp
arpl
out
jb
xor
lds
mov
mov
dec
nop
xchg
cmc
push
add
dec
outsb
xor
adc
popa
xchg
adc
fldenv
data16
paddd
ljmp
or
or
addl
cltd
xorb
mov
aad
dec
lcall
addr16
popf
test
mov
aas
adc
add
xchg
in
dec
inc
loopne
pop
call
lds
pop
mov
xchg
jge
clc
cmp
add
loopne
inc
adc
pop
pop
push
push
push
sub
mov
xor
sahf
push
pop
rcrb
adc
fistps
sub
fidivl
push
lea
cmp
mov
jno
dec
xchg
add
sbb
ret
xlat
ss
in
adc
lea
es
push
incl
rorb
add
jae
push
push
jbe
push
outsb
mov
jmp
xchg
das
sub
sbbb
dec
popf
dec
mov
add
dec
push
stos
lahf
cmp
rorl
repnz
add
jne
mov
jge
rcrb
lcall
mov
pop
inc
adc
lock
shr
inc
add
or
ss
mov
mov
pusha
and
jne
out
ds
mov
pop
and
mov
add
out
addr16
and
sub
lea
sub
fidivrl
or
popa
ljmp
xor
and
mov
icebp
push
push
loopne
pop
mov
icebp
pusha
add
rorl
mov
xchg
xchg
mov
adc
cmp
sbb
sbb
jmp
sbb
or
movl
jne
adc
faddl
pop
daa
hlt
test
jmp
sbb
jae
push
test
inc
aas
insl
mov
rclb
add
mov
pop
les
push
test
pop
fcoms
out
add
and
or
popa
add
cs
movsl
dec
inc
inc
mov
pop
mov
dec
lcall
call
out
push
movsb
flds
es
cmp
xchg
mov
cwtl
sub
into
out
xor
or
insb
and
adc
jbe
scas
jne
mov
dec
vmovaps
shl
jmp
popa
sti
cmpsl
or
inc
inc
test
mov
sub
mov
sbb
xchg
adc
xor
push
push
mov
push
loop
popa
pop
xchg
popa
clc
and
dec
pop
nop
inc
cld
imul
and
push
leave
mov
ljmp
clc
fmull
aaa
ss
test
and
jl
pop
je
mov
pop
cwtl
push
mov
jge
mov
cmpl
repnz
insb
push
clc
mov
mov
pusha
jno
subb
mov
hlt
or
pop
test
sti
cmp
add
inc
or
xchg
loopne
xor
mov
rolb
xchg
fwait
inc
loop
pop
roll
repz
cmp
das
adc
js
pop
sbb
outsb
or
inc
and
lahf
leave
fwait
and
popa
and
sub
mov
clc
jecxz
aas
nop
cli
add
shlb
push
pop
dec
sarb
inc
jnp
cmp
mov
test
clc
idivb
mov
mov
adcb
pop
pop
sbbl
enter
outsl
or
test
push
mov
hlt
ja
sbb
pop
aas
mov
les
pop
test
in
pop
mov
cmpsl
inc
sub
push
out
fcomps
inc
lahf
mov
mov
xchg
jmp
fistpll
ljmp
or
push
sub
adc
xchg
mov
cwtl
test
call
aaa
xchg
pushf
xchg
cmp
dec
enter
and
push
loop
adc
jnp
mov
loopne
or
cli
les
scas
cmpl
fs
cmp
sbb
dec
fcoml
scas
hlt
sub
es
dec
subl
pushf
rclb
roll
dec
das
push
arpl
add
pop
loop
and
mov
movsl
sbb
pushf
jns
cmp
enter
psubusb
or
mov
popa
or
rolb
jne
jp
or
or
cmp
jbe
xor
mov
mov
push
pop
movsb
mov
insb
fdivl
cmp
xor
dec
xchg
test
and
js
sub
adc
xchg
add
out
fwait
addb
jmp
xor
ja
cmp
dec
rol
push
sarl
stos
mov
mov
ret
filds
jmp
inc
ljmp
pop
jbe
lods
inc
icebp
cmp
mov
loopne
sub
inc
mov
push
inc
les
and
aas
lcall
fiadds
jmp
mov
lods
inc
add
out
lods
loop
sbb
rolb
into
cmp
add
inc
pop
or
cmp
and
jmp
lods
movsl
push
or
pop
je
sub
and
jmp
sarb
jmp
jnp
sub
sarl
add
pop
ds
jge
out
lods
cmp
sub
or
xor
mov
cmp
adcb
outsb
shlb
in
push
lea
push
sbb
add
pop
and
hlt
mov
imul
rorl
test
shrl
adc
inc
fwait
push
adc
cmpl
and
out
inc
aaa
mov
fisttps
sub
adc
in
xchg
mov
push
std
push
call
fsubrl
sahf
inc
adc
cli
lds
cmpl
fadds
sub
mov
and
sub
aam
jle
dec
adc
sub
xchg
jno
xor
insb
shll
pop
pop
loope
cs
xchg
femms
pop
jg
inc
mov
data16
incl
nop
pmulhw
cmp
in
and
aaa
mov
imul
and
dec
mov
sbb
or
bound
inc
add
loope
mov
dec
xchg
add
scas
ret
test
enter
je
jecxz,pt
add
cld
inc
sbb
cmp
arpl
sbb
andl
dec
sti
mov
jbe
inc
rol
pop
das
movsl
push
test
xor
cmc
inc
cli
int3
push
fucomip
push
cmp
cmp
enter
mov
jmp
mov
lea
xchg
rorb
imul
pusha
xor
gs
lock
mov
cwtl
movsl
inc
addr16
jge
mov
pop
mov
ds
cmc
loope
adc
jb
je
pusha
inc
loopne
adc
test
mov
js
sbbb
jmp
add
adc
push
pop
inc
lret
mov
add
scas
notl
int3
stos
repz
sbb
scas
jb
and
sbb
inc
cmpsl
clc
js
fstpt
hlt
pop
mov
lea
addr16
lret
push
or
ret
jp
mov
jecxz
test
and
adc
pop
dec
jmp
in
mov
data16
xchg
pop
ljmp
icebp
cmp
push
sub
inc
jnp
aas
fscale
jno
sti
in
pop
pop
ret
aaa
cs
fstpl
push
push
cmp
sub
pusha
repnz
mov
push
pop
mov
or
dec
leave
testb
or
out
mov
jbe
sarb
sub
sarb
xor
cld
ss
fwait
mov
jbe
sbb
lcall
xor
sbb
imul
mov
subb
push
xor
pop
push
call
dec
push
mov
into
mov
ret
popf
lcall
subl
pop
xchg
lret
or
xlat
mov
inc
or
or
mov
ss
sub
xchg
or
push
aaa
cld
fcomip
int
xor
stc
push
cmp
pop
lds
inc
fs
ja
shrb
push
cs
sarl
sbb
inc
sub
rcl
push
sahf
and
lock
add
dec
stos
sub
test
sbb
push
add
dec
jg
pop
cwtl
repnz
push
dec
inc
sub
lcall
ret
lret
or
push
mov
mov
cmp
scas
adc
addr16
xor
sub
and
adc
pop
mov
xchg
pop
and
aad
fwait
arpl
les
notb
pop
rol
cmpsl
add
scas
lods
inc
or
les
ss
inc
shrb
inc
cmp
leavew
dec
aad
loope
and
push
sub
lret
aaa
movsl
mov
or
cld
sbb
push
call
cmc
inc
cmpsl
pop
mov
je
addr16
es
js
loope
push
popa
lods
stc
mov
pop
add
jns
xchg
cmp
jl
int3
cmp
lock
out
or
push
aam
mov
fsubrs
xchg
mov
sub
roll
push
add
jmp
mov
in
inc
repz
mov
push
and
mov
xor
mov
sbb
inc
jle
adc
hlt
xor
aaa
sub
std
shrb
fdivr
or
mov
fmuls
pop
shll
add
push
repnz
fdivl
adc
cmpb
andb
and
pop
test
test
add
in
daa
pop
add
aam
and
mov
add
push
insl
mov
mov
sbb
fldl
cmp
mov
mov
jo
inc
push
mov
das
xchg
incl
mov
imul
inc
dec
xchg
sub
sbb
pop
add
es
fdivl
das
shlb
adc
xor
push
pop
aaa
add
and
orb
roll
scas
xor
inc
push
adc
pop
cmp
js
popa
hlt
movsl
pop
push
int
sub
mov
adc
xchg
insl
push
add
fdivl
cmp
outsl
movsb
or
xorl
rolb
mov
jnp
jmp
mov
ret
fcmovbe
adc
bound
mov
clc
jo
mov
jnp
fsub
imul
ljmp
pop
adc
ljmp
hlt
adc
je
out
pop
xchg
xor
inc
mov
stos
lahf
iret
or
mov
push
add
sbb
clc
aam
inc
rolb
adc
or
movlps
xorl
sub
adc
daa
insl
xchg
xor
daa
dec
loopne
nop
ja
std
push
sbb
out
or
pop
jo
xlat
rolb
loopne
xchg
adc
adc
xor
inc
xchg
hlt
in
jne
cmp
cld
dec
je
push
sbb
popa
clc
in
mov
jbe
mov
and
shrb
add
mov
mov
shrd
lcall
add
roll
fidivs
lock
outsb
inc
push
enter
andb
mov
sbb
shl
add
or
push
sbb
mov
mov
test
mov
push
call
cs
and
pextrw
pop
cmpsb
mov
mov
je
lcall
sub
mov
inc
sub
xchg
mov
push
jp
jnp
dec
push
pop
aam
push
mov
push
mov
adc
fisttps
push
mov
out
inc
out
in
cmp
add
sub
shll
xchg
or
xor
das
gs
jbe
push
sbb
inc
aam
and
hlt
mov
cmp
xorb
adc
push
cwtl
xchg
cmpl
dec
in
rorl
movsb
push
push
mov
pushl
xchg
sahf
mov
lods
jl
je
cwtl
ficoml
and
fdivs
addb
pop
mov
xchg
xchg
and
je
push
hlt
push
pop
ds
fiadds
jecxz
vphaddubw
cli
mov
clc
jecxz
test
mov
inc
out
mov
push
roll
or
add
movsl
inc
mov
sub
jmp
adc
fcompl
ds
ljmp
mov
and
pushf
adc
test
add
sti
loope
out
adc
or
js
mov
data16
mov
nop
or
orl
les
loope
nop
int3
push
xchg
xchg
xor
pop
push
dec
dec
mov
orb
pop
jb
xchg
clc
iret
or
xchg
or
loopne
and
push
roll
dec
lods
mov
mov
pop
fildl
pusha
pusha
loop
stos
es
push
mov
and
lock
jmp
scas
inc
imul
sbb
and
lods
decl
ds
mov
adc
loopne
imul
mov
mov
sub
gs
sbb
xor
xor
sbb
jecxz
inc
mov
push
js
ds
mov
or
ss
hlt
clc
test
imul
mov
pop
orb
insl
fisttpll
inc
push
pusha
pop
int3
and
mov
fidivrs
add
lock
lahf
inc
stos
cmp
mov
sub
xor
addl
imul
aas
adc
sub
add
jmp
and
fiaddl
jmp
push
jl
je
jmp
nop
into
xlat
je
cli
stos
ds
fmuls
out
loopne
push
cwtl
lcall
and
adc
scas
sub
ret
lahf
out
insb
aaa
push
adc
popf
movsb
or
push
inc
push
bound
arpl
mov
shlb
xchg
aaa
in
pop
call
and
add
in
mov
sub
xchg
pusha
orl
sbb
xchg
mov
cmp
add
pop
es
test
add
sarb
push
adc
pop
mov
test
add
rcll
cmp
mov
cltd
test
shlb
adc
fisubrl
testl
add
jmp
orb
xchg
jne
notb
aam
ret
push
inc
sub
int3
lds
ftst
add
pop
cltd
pop
mov
movsb
sub
dec
mov
add
test
in
xor
scas
pop
cmpsb
loop
decl
pusha
std
cmpsb
rcll
pushf
fs
repnz
cwtl
lahf
xchg
adc
jns
pushf
or
push
cld
cwtl
fdivrs
mov
fwait
jp
xchg
mov
inc
pop
dec
outsl
xchg
mov
add
sti
add
mov
shrb
bound
or
ret
or
xchg
jmp
cmp
daa
fcmovnb
adc
cli
push
aaa
xor
fisubl
and
push
js
sub
sub
lods
mov
fbld
xchg
mov
jmp
ds
or
xchg
add
clc
mov
nop
pop
push
cwtl
stc
and
cmp
add
pop
inc
pop
fsts
mov
pop
jne
inc
in
push
fxch
xchg
in
cmp
fidivrl
cmp
in
mov
je
mov
add
cs
adc
push
mov
popa
scas
and
add
sub
cli
xchg
sub
inc
out
push
mov
mov
adc
cmc
imul
mov
in
lret
ljmp
pop
mov
dec
int
add
nop
fiadds
sbb
aad
mov
or
icebp
shlb
fldenv
in
sub
jl
sbb
out
js
cltd
pop
sbb
cmp
dec
leave
lea
or
out
leave
push
lcall
pop
push
cld
cli
xchg
mov
test
mov
icebp
lods
dec
and
or
andb
adc
mov
aaa
iret
sub
pusha
rsqrtps
or
cmpsl
shll
jmp
lcall
jno
xorl
lods
insb
dec
mov
add
mov
push
mov
fdivs
js
jo
imul
adc
test
mov
jae
adc
xchg
cmpsl
sbb
sbb
add
sub
pop
push
test
or
sahf
add
adc
call
fildll
or
dec
sub
hlt
fcmovbe
loop
shrb
or
adc
icebp
fs
fisubrs
jae
imul
or
xchg
mov
gs
jns
rcl
or
add
std
ret
jnp
xor
xlat
adc
and
push
add
add
mov
pop
lret
pop
orb
push
cmp
lods
je
cmpl
ds
add
adc
in
subb
mov
bound
in
iret
shll
std
or
jno
sarb
lds
js
outsl
negb
and
mov
mov
push
jo
cmp
push
mov
mov
verr
add
fmul
ret
pusha
pop
mov
int
fdivs
mov
jge
aad
shlb
dec
ja
adc
cmp
push
sub
aad
cmp
mov
pop
push
call
outsb
imul
fcoml
lahf
mov
cmp
mov
test
daa
insl
add
xchg
adc
repnz
xor
shrl
dec
mov
loope
test
xor
or
mov
mov
popl
dec
shll
adc
stos
call
adc
add
push
das
xor
dec
dec
and
inc
xchg
push
dec
pop
pop
inc
mov
out
sub
or
sbb
test
add
dec
mov
sbb
pop
shlb
xchg
pop
jae
scas
insb
xor
repnz
pop
push
lods
mov
sbb
ljmp
pop
add
addl
add
adc
filds
sbb
sub
dec
xlat
push
ret
push
fs
push
lock
in
sub
push
mov
jb
outsb
or
jp
or
int
rcrb
int3
punpcklbw
add
ds
add
pushf
lods
ret
lret
pop
pop
fnsave
inc
leave
sbb
pop
cmp
or
mov
sbb
aam
dec
out
je
mov
das
and
cmp
sbb
or
repnz
fwait
shll
mov
jg
inc
lea
push
adc
pop
je
popl
dec
pop
pop
roll
aas
lods
fwait
lahf
inc
xor
jb
cld
jbe
call
out
mov
pop
movl
es
loope
sub
fstl
dec
stc
cmpl
mov
adc
cwtl
imul
daa
mov
int
imul
in
jbe
cwtl
dec
cld
push
pop
push
cmp
push
add
scas
dec
cmp
enter
xchg
dec
xchg
movsb
insl
pop
pushf
mov
stc
or
popa
inc
in
enter
arpl
dec
pop
mov
nop
in
push
outsb
aaa
lret
sub
sub
ret
imul
sbb
add
jnp
test
or
mov
push
rorb
decl
es
scas
cmpsb
add
xchg
aad
shll
xchg
shl
adc
gs
in
adc
adc
pop
pop
jne
mov
cwtl
je
mov
fdivs
xor
mov
ss
roll
cmpsl
sbb
rcll
nop
cs
ss
repz
dec
movsb
pop
mov
adc
pop
inc
es
push
push
xchg
stos
call
sub
cmp
adcb
mov
daa
loopne
out
test
xchg
mov
loope
pop
pop
sub
xor
mov
mov
test
and
ljmp
add
fmull
xorb
rolb
pop
mov
xchg
js
adc
jge
aam
ss
pop
xchg
cmpsl
shr
repz
adc
loop
mov
and
ret
out
sub
xchg
jle
scas
and
rol
fisttpll
adcl
push
cmp
arpl
in
xchg
mov
push
icebp
dec
push
lcall
mov
movsb
inc
js
sbb
jno
push
shlb
pop
aam
sti
sub
xor
mov
pop
cmp
cmp
leave
faddl
inc
mov
sub
inc
pop
loop
into
mov
sub
test
push
in
out
imul
adc
push
pop
sbb
push
in
mov
ret
insb
lock
rcrb
test
repnz
shll
subb
sbb
pop
sub
loop,pn
jecxz
cmc
mov
adc
arpl
sub
xchg
xlat
add
fdivr
test
aam
testb
mov
push
or
pop
test
dec
cmp
shrb
outsl
nop
push
sbb
xor
call
pop
orl
pop
pop
jb
popf
in
imul
mov
jle
xchg
test
mov
add
add
xchg
shrb
xchg
insl
push
or
shrl
ficoml
adcb
sbb
loopne
mov
inc
lcall
or
cwtl
les
ret
xchg
or
addb
andl
mov
pop
out
test
pop
add
and
pop
jmp
xchg
cmp
popa
insl
outsb
cli
lcall
adc
inc
lods
cmpsb
js
pop
repz
loop
pop
adc
in
add
jae
ja
dec
packssdw
mov
mov
fisttpll
loopw
popa
loope
int3
ja
mov
mov
pusha
stos
dec
adc
jb
imul
xchg
roll
adc
add
clc
and
sub
inc
pop
adcl
mov
and
cmpsb
add
scas
addb
and
jb
loop
cmpl
rcll
enter
mov
xchg
mov
ret
pop
in
pop
loopne
lock
int
xchg
fstl
js
and
and
mov
jge
mov
jecxz,pt
push
pop
jae
lock
pop
mov
mov
hlt
push
cmp
sbb
mov
mov
sbb
roll
je
push
xor
adc
mov
mov
icebp
loope
inc
or
cs
fs
mov
or
xchg
adc
adc
cli
mov
pop
inc
pop
test
add
inc
jp
clc
jp
push
movsb
pushf
sar
mov
mov
das
jmp
mov
in
loop
scas
jbe
mov
mov
or
sbbb
std
shl
imul
xchg
insb
pusha
fsubp
or
mov
push
mov
loop
ljmp
cmp
jnp
mov
in
popa
adc
add
out
adc
daa
push
push
andl
mov
add
sahf
and
repz
test
int3
adc
jnp
arpl
inc
and
cmp
inc
pop
clc
and
neg
adc
loopne
jae
inc
mov
cmp
or
je
mov
pop
rcrl
pushf
rolb
or
adc
sub
sub
mov
adc
jecxz
jg
daa
inc
mov
cmp
cmp
loopne
es
ficoml
xlat
aas
faddl
push
dec
ret
outsb
dec
push
test
sub
scas
adc
sbb
pop
xor
xchg
mov
dec
pop
ss
cld
arpl
push
mov
int
mov
cmp
add
popa
mov
dec
dec
clc
inc
push
xor
xlat
rcll
rolb
mov
sbb
add
arpl
test
stos
bound
push
testl
mov
lds
xchg
pop
inc
xor
cmp
mov
jnp
xchg
adc
out
mov
xlat
in
dec
jb
scas
mov
mov
lods
mov
adc
iret
inc
xor
push
jns
scas
in
fs
and
aad
and
stc
mov
push
or
lods
pop
push
pop
sbb
mov
pop
or
into
loope
inc
jl
mov
mov
lock
aas
loopne
iret
adc
test
cwtl
jp
mov
sub
pop
nop/reserved
hlt
ljmp
cmp
inc
stc
and
insb
test
add
cmp
or
in
or
push
mov
adc
adc
add
jl
push
sbb
out
xchg
shlb
movsl
mov
and
or
push
jp
mov
lods
xor
pop
jp
mov
adc
enter
sbb
dec
jnp
sub
out
dec
loop
dec
push
or
push
mov
insb
ret
imul
xor
jbe
dec
pop
push
dec
push
aaa
das
push
lods
inc
push
loope
adc
fsubl
inc
mov
and
mov
xor
pop
dec
mov
subl
lds
test
lods
jl
pop
or
mov
cli
or
stos
pop
in
int
or
mov
ret
mov
shlb
mov
jp
test
adc
jle
mulb
popf
test
cmp
and
cmpsl
popf
cmp
jno
xchg
and
jmp
dec
movsb
push
mov
imul
jle
rcl
fnstcw
lock
jo
jo
popl
inc
pop
push
dec
add
aam
mov
repz
mov
push
subb
sbb
inc
sbb
bound
movsl
stos
mov
lahf
outsl
pop
push
bound
and
mov
ret
pop
sub
push
sub
insl
sbb
cmp
test
shrb
jp
add
adc
imulb
xchg
les
pop
dec
clc
iret
fnsave
outsb
pop
das
pop
fwait
dec
sub
sbb
push
and
mov
jg
out
fildl
aam
scas
push
fs
stos
add
push
cmp
mov
addl
pushf
int
jno
mul
or
inc
iret
inc
sti
mov
pushf
xchg
jp
inc
jns
mov
mov
jb
enter
pusha
push
addl
cmp
mov
lret
pop
in
push
xor
inc
jae
sub
jmp
push
inc
mov
hlt
jmp
dec
jo
lret
mov
inc
rcr
dec
push
js
cwtl
out
lock
sub
lahf
push
jo
test
cmpsl
cmp
mov
xor
call
mov
cmp
loopne
xchg
xor
xor
bound
mov
push
xchg
ret
mov
jl
das
fwait
movsl
xchg
sub
or
adc
push
add
inc
dec
mov
jo
mov
inc
cs
jecxz
dec
lret
mov
mov
scas
pop
xor
iret
jecxz
loop
int
mov
ss
lock
ret
sub
pop
cmp
out
pushf
stos
ret
xchg
xor
aad
lds
add
leave
sbb
ret
insb
push
sub
cmpsl
cmpsb
jmp
xor
sub
pop
push
sbb
mov
mov
adc
stos
mov
addr16
subl
mov
mov
int3
sbb
xchg
pop
hlt
push
mov
imul
dec
mov
jl
pusha
inc
popa
push
inc
int3
inc
das
xchg
mov
dec
dec
loopne
fwait
adc
push
add
lock
movsl
or
mov
pop
push
dec
adc
cs
sbb
add
addr16
and
pop
sbb
push
or
decl
push
and
and
jmp
stos
jmp
insb
movsb
into
jbe
bound
data16
xor
xor
xor
fidivl
adc
fstpl
fstpt
or
push
pop
jo
cmp
pop
arpl
das
push
lret
mov
fwait
mov
and
loop
sub
dec
rcl
xchg
iret
lcall
mov
mov
outsb
mov
and
cmc
rolb
adc
mov
xor
and
cmpsl
push
clc
cli
into
mov
pop
xchg
jbe
or
nop
cmpsl
and
push
jle
popa
divl
pop
sub
test
cli
and
xchg
jae
movsb
pop
xlat
test
mov
sub
or
sbbb
ds
cltd
lret
daa
std
sbb
test
adc
lods
sub
outsl
mov
mov
jle
daa
or
imul
js
jle
in
sub
push
lea
inc
jbe
mov
mov
sbb
scas
mov
bound
sti
add
shlb
test
aad
push
cmp
dec
sub
xor
mov
dec
pop
cmp
pop
sbb
sbb
dec
jge
sub
inc
sub
dec
movsl
mov
sbb
xchg
mov
and
ljmp
push
cmp
js
es
inc
pop
js
add
xchg
stos
lds
sbbb
shlb
ss
shll
js
daa
mov
jno
cmpsl
xchg
in
in
xadd
je
and
aas
cmc
adc
jecxz
inc
sti
and
adc
scas
stc
movsl
mov
dec
jae
sahf
sub
mov
pop
int3
sbb
add
or
mov
popa
push
sub
jecxz
repz
jb
adc
and
lods
stos
stc
and
stc
dec
xchg
sahf
test
inc
xor
scas
stc
add
cmp
shll
lahf
xchg
int
jg
push
xchg
or
aaa
xchg
rolb
or
stos
test
lcall
ret
outsl
jo
or
mov
adc
cmc
cmp
sub
mov
adc
pop
ljmp
sbb
and
sbb
or
ss
ret
mov
jne
enter
sub
scas
lods
add
and
test
push
out
enter
inc
sarb
out
outsl
or
in
mov
cmp
jp
es
roll
mov
xchg
cmp
add
aaa
mov
jp
adc
test
pop
lahf
mulb
imulb
push
jns
int3
mov
test
mov
insl
dec
cmovnp
or
xor
loope
adc
sub
enter
and
aas
mov
push
es
sub
sbb
test
ret
lahf
jle
push
or
or
mov
les
movsl
sub
mov
mov
loop
jne
xor
sub
jp
je
mov
bound
gs
mov
jecxz
dec
loopne
add
out
js
sub
ja
pusha
mov
xor
out
popf
cmp
and
jmp
scas
sbb
dec
pop
cld
mov
adc
xchg
add
lock
call
popa
sarl
ret
loope
inc
test
cmpsl
dec
js
add
sbb
hlt
std
jo
xlat
add
loope
push
mov
out
pop
mov
sti
inc
fadds
push
jecxz
mov
jl
add
jb
push
imul
out
mov
jl
cmp
movsb
in
jae
xor
mov
enter
test
or
pop
adc
ret
and
enter
sub
jge
jne
inc
sbbl
lods
sbb
cmpb
mov
ds
cmpsb
push
sahf
adc
sar
add
mov
dec
xchg
xchg
push
push
xchg
aad
mov
jne
clc
adc
add
cmpsb
lods
mov
cs
jmp
mov
push
mov
rol
test
test
shll
adc
sub
lds
push
xor
mov
aad
out
push
sbb
in
mov
into
jmp
loopne
subl
sub
push
scas
dec
and
lret
jp
xchg
das
xor
fidivl
xor
int
std
xchg
pop
or
imul
dec
arpl
xor
mov
out
into
sub
mov
lahf
mov
push
stc
ficomps
test
mov
pop
aas
jno
jge
push
mov
lret
fstps
xchg
js
lea
xor
inc
jo
es
mov
in
add
loop
cli
push
xchg
jns
lods
or
cmp
fildl
lods
mov
ja
jle
enter
jnp
shrb
scas
mov
mov
test
imulb
enter
shll
push
sti
adc
and
xor
clc
xchg
inc
pop
fdivrl
add
push
and
bound
fdiv
ret
and
jae
js
add
xchg
into
pushl
sub
loope
lods
pop
out
push
cmc
rorl
jno
inc
shl
movsl
dec
pushf
push
inc
cld
bound
add
mov
loope
call
mov
test
cli
mov
dec
cld
pop
cli
stc
xor
dec
test
rol
dec
inc
sub
loopne
or
and
mov
mov
sbb
addl
sub
pop
inc
jne
xchg
cli
mov
and
loopne
xor
bound
push
and
xor
cmp
push
ljmp
lock
adc
pop
jle
jbe
sub
ror
ret
or
insl
add
in
sub
pop
test
dec
cmp
andb
jb
inc
push
lret
mov
lea
inc
xor
std
cmp
xchg
jns
lods
insb
inc
pop
cmp
fwait
cltd
or
pusha
gs
adc
add
mov
sbb
test
pop
add
loope
es
pop
addb
xchg
lret
mov
add
add
test
loopne
or
lcall
test
add
mov
dec
sub
xchg
push
in
lock
insl
pusha
adc
je
dec
dec
mov
dec
clc
push
mov
adc
xchg
add
ja
mov
pop
inc
insb
jp
push
jle
mov
insb
add
inc
pop
filds
inc
mov
out
cli
push
adc
xor
jle
push
daa
cmpb
mov
xchg
jnp
sbbl
sbb
pop
imul
inc
sarb
je
pop
daa
add
in
sbb
aas
cld
pop
xor
rorl
xlat
and
or
add
pop
fcoml
sub
inc
pop
aam
cmpsb
jecxz
sbb
outsl
inc
push
in
mov
mov
nop
add
ret
fcomp
or
xchg
adc
lret
adc
out
mov
lret
push
sbb
test
cmpb
add
xchg
arpl
pop
mov
xor
sub
std
insb
sbb
dec
call
enter
push
dec
cmp
hlt
push
call
push
pop
enter
in
or
mov
sahf
jne
jmp
hlt
adc
inc
cmp
loope
xor
sub
cmp
inc
xchg
inc
xor
stos
in
push
push
push
int
xor
cld
pop
mov
inc
cmp
cltd
insl
adc
jo
inc
jl
out
push
repz
addl
and
push
push
negb
push
or
fistpl
mov
bound
cmp
lahf
pop
sub
mov
pop
in
push
mov
adc
mov
xlat
add
in
mov
dec
bound
jb
push
push
xor
and
push
in
mov
or
loopne
mov
cmp
mov
cmp
mov
test
insb
or
xchg
push
add
jnp
scas
imul
int3
loope
jmp
scas
mov
sbb
inc
mov
mov
jg
sarl
in
out
aad
sub
test
mov
inc
inc
insb
pop
push
mov
pop
popl
pop
mov
pop
mov
rorb
xchg
cmp
xor
das
sub
sub
addr16
push
xlat
add
movb
adc
jb
mov
dec
outsl
lahf
bound
xlat
leave
mov
and
add
negl
push
and
mov
lock
and
fidivrs
clc
push
xchg
int3
fistpl
scas
nop
lcall
push
daa
in
call
xor
and
dec
stc
fbstp
outsb
pop
or
mov
leave
enter
call
push
gs
xchg
scas
mov
test
push
sub
push
arpl
ret
popa
xchg
mov
mov
pop
mov
jp
ret
sub
dec
xchg
imul
test
nop
cli
rolb
push
jno
xor
pop
sbb
faddl
imulb
fldl
or
add
mov
adc
lret
mulb
xor
xchg
lock
adc
aas
or
inc
sbb
jmp
out
add
das
cwtl
mov
cmpsl
or
cmc
fisubrs
lahf
inc
ja
mov
daa
mov
dec
sbb
loop
jnp
cmp
or
add
mov
or
js
or
aaa
mov
xchg
dec
adc
mov
mov
movhlps
sbb
ficomps
inc
lret
push
pop
arpl
xchg
test
mov
subb
and
xchg
lds
mov
dec
aam
and
mov
mov
fistpl
movsb
je
mov
adc
loopne
ror
ljmp
in
lahf
dec
xchg
mov
call
ss
jecxz
arpl
bsr
mov
test
mov
lock
mov
or
push
sar
xlat
in
cld
inc
and
push
mov
repnz
and
mov
loope
add
mov
or
lea
and
scas
xor
fidivrl
pop
lahf
mov
mov
cmpb
or
mov
inc
push
xchg
adc
dec
mov
push
stos
jle
push
push
pop
subb
cmpsl
dec
outsb
cmp
mov
aas
mov
xor
or
leave
das
fadd
aam
adc
inc
roll
jp
cld
push
aam
es
lock
scas
cltd
mov
dec
outsl
add
sti
lret
add
insl
dec
xor
lea
ret
popa
into
repz
and
xor
pusha
add
pushf
mov
mov
out
arpl
ret
xor
test
clc
mov
ds
in
rclb
rcr
orl
dec
xlat
inc
sub
xor
mov
jne
leave
xor
outsl
fistpl
inc
jl
jne
shl
xchg
and
dec
inc
mov
jge
inc
shll
jae
test
jnp
clc
insb
dec
sbb
ja
fsubs
daa
inc
or
les
sub
filds
push
dec
dec
dec
and
mov
rcrb
add
sbb
mov
loopne
scas
pop
rcll
add
sub
xchg
jl
out
loope
pop
scas
sbb
inc
fdivr
loope
jno
adc
or
mov
pop
iret
inc
gs
insl
enter
cmp
push
subl
pusha
je
cwtl
pop
sbb
mov
cs
test
pop
add
pop
ds
inc
pop
and
xor
mov
xchg
adc
add
add
loopne
stos
or
sbbb
xchg
cmp
inc
fisttpll
sbb
and
cmp
hlt
fdiv
pop
pop
test
in
xchg
push
pop
test
jne
ds
mov
push
sbb
cmpsb
arpl
mov
or
addb
inc
and
dec
scas
fs
lret
mov
movsl
inc
mov
dec
mov
or
push
mov
rolb
fistpll
adc
es
stos
sub
stos
dec
lock
add
out
dec
into
enter
adc
mov
roll
sbb
inc
out
or
cmp
out
test
xchg
iret
xchg
cmp
dec
test
lcall
pop
jno
loopne
or
jp
rorb
test
xchg
rorb
imul
jnp
jmp
xor
xorb
sahf
mov
ss
cmc
or
add
mov
mov
loop
dec
loopne
lock
out
mov
fcompl
pop
or
sub
pop
pop
mov
pop
mov
and
ja
dec
pop
sbb
shlb
inc
test
data16
sub
push
cld
jp
pop
mov
jbe
add
cmc
push
lret
xor
jge
jns
loope
out
hlt
mov
adc
inc
xor
xor
std
rorb
aam
mov
mov
scas
dec
jge
push
es
push
and
sub
loopne
in
insb
loopne
and
jecxz
pop
nop
cwtl
cmp
mov
lret
shll
mov
sub
sub
sbb
scas
js
push
jl
push
popf
inc
ljmp
xlat
push
adc
cmp
out
push
sub
shl
xchg
in
dec
sbb
rep
cmpsb
xor
mov
stc
imul
adc
sub
orl
jle
mov
dec
sub
cmc
fcmove
push
mov
stc
scas
sub
loop
cmp
xlat
push
fsqrt
mov
ret
outsl
pushf
test
or
fcmovnb
mov
lret
push
xor
inc
adc
xchg
iret
push
sbb
pusha
sub
mov
or
shl
add
inc
insb
outsl
fildl
mov
test
stos
jp
popf
subl
push
pop
imul
ror
sbb
pop
adc
jecxz
jmp
sub
push
pop
fadd
out
call
or
add
ret
inc
pop
mov
jg
xor
cmc
movsb
test
adc
sbb
push
cmpsl
push
adc
push
pusha
inc
adc
pop
adc
ss
ret
decb
pop
pop
fnstenv
decb
and
arpl
cwtl
sub
mov
adc
and
add
fwait
cltd
push
shl
rol
ficompl
pop
sarl
into
jmp
push
in
mov
pop
jne
cmp
dec
mov
jp
xor
inc
orb
ljmp
mov
jo
and
rorb
or
sub
mov
ds
clc
dec
enter
jae
push
cmp
rorl
sub
add
mov
outsl
fdivrs
nop
lcall
ja
pusha
mov
adc
sbb
fwait
add
or
push
xchg
fsubp
incl
mov
out
push
and
iret
mov
sbb
ds
or
popa
stos
mulb
jle
add
in
or
and
popf
cmp
push
psubsb
jo
jmp
pushf
lea
mov
jecxz
dec
push
jecxz
pushf
xor
sbb
adc
inc
movsl
pop
jb
push
jne
jg
stc
bound
cmpsb
sub
cmp
xor
or
pop
mov
jecxz
sbb
or
xchg
push
add
fidivrs
loopne
rorl
add
mov
jno
icebp
mov
testb
push
jb
sbb
mov
nop
ret
out
ret
or
add
add
mov
in
push
sbb
xchg
imul
lcall
push
add
push
mov
sub
add
dec
dec
mov
mulb
cli
cmp
test
decl
or
pushf
and
and
or
sar
fs
cmp
iret
dec
add
ret
mov
fldcw
add
xor
cmp
stos
js
mov
add
dec
push
xor
jg
jecxz
in
lcall
xchg
inc
movsb
inc
xlat
xor
jg
cwtl
mov
test
mov
pop
loopne
xchg
mov
adc
mov
push
inc
aad
push
pop
mov
or
addb
fbstp
decl
xchg
out
lret
push
mov
dec
aam
int
testb
add
mov
pushf
xor
jl
aad
push
cmc
and
inc
pushf
adc
and
and
sbb
pop
aaa
ljmp
xchg
sbbb
cmpsl
jge
ljmp
clc
test
cs
dec
clc
outsl
in
inc
jle
xor
push
outsb
or
stos
push
mov
xchg
mov
xchg
mov
hlt
mov
mov
pop
int3
push
push
xchg
cli
inc
lds
dec
and
scas
outsb
lcall
xlat
je
in
adc
ret
fs
cli
cli
fwait
adc
mov
add
add
nop
mov
xchg
dec
js
and
mov
movsl
mov
pop
movsl
pshufw
pop
cli
xor
dec
pop
test
pop
movsb
aad
mov
push
dec
leave
and
lcall
and
lahf
xchg
inc
cs
stos
shll
mov
mov
and
or
adc
and
lcall
adc
push
sbb
push
xlat
and
adc
inc
xor
lea
nop
pop
in
das
jo
push
lock
subb
adc
daa
cmp
arpl
nop
aas
lods
xchg
mov
push
xchg
mov
inc
mov
ud0
je
xchg
push
adc
movsb
test
add
pop
test
clc
out
jg
shlb
inc
inc
mov
jno
xchg
sbb
test
scas
dec
and
jae
dec
scas
mov
dec
sub
or
and
push
mov
cld
mov
jo
pop
loop
pop
sub
fmull
test
ss
sbb
xor
push
enter
fucomip
or
bnd
adc
add
pushf
xchg
push
call
adc
or
and
ret
stos
mov
adc
jle
sbb
punpckhwd
rclb
mov
je
pop
cli
mov
hlt
roll
add
dec
and
clc
rorb
in
push
or
dec
lea
dec
push
dec
and
add
or
pop
dec
dec
jbe
or
xchg
fists
jle
jne
mov
or
sbb
incl
out
subb
les
in
daa
or
add
jl
cmp
fwait
pusha
push
push
repz
mov
lods
clc
pop
fcom
or
pop
push
in
sub
xlat
scas
jb
xchg
fdivl
xor
divl
xor
int3
jb
into
mov
in
dec
lret
repnz
ret
xchg
scas
es
lods
adc
adc
pusha
adc
add
subb
mov
mov
jns
rorb
inc
xchg
inc
js
mov
sub
and
fisubrs
sahf
mov
cs
and
and
xlat
cmpsb
sub
add
mov
xor
addb
push
pop
dec
xchg
mov
gs
into
pusha
lret
pop
push
les
inc
popf
or
mov
addb
add
push
subl
adc
subl
pop
jo
mov
fsubl
xor
fadd
arpl
outsl
mov
mov
jle
or
dec
adcb
fidivl
dec
adc
cmp
push
dec
push
rol
cwtl
dec
stos
xor
jb
mov
push
test
xor
test
sahf
mov
aam
imul
popa
loopne
push
jae
inc
fyl2x
orl
or
mov
sbb
ds
int3
mov
cmp
aas
idivb
sti
mov
xor
out
xchg
fimuls
mov
mov
sti
idiv
or
inc
notl
mov
imul
mov
and
jg
orb
or
push
and
ds
adc
mov
loop
test
int
mov
mov
pusha
lcall
cld
xlat
mov
out
fcmovnb
sti
stos
sub
dec
jnp
loop
adc
das
sbb
fstl
incl
fs
mov
jp
je
xchg
test
mov
adc
std
dec
jmp
lds
push
pusha
push
aad
filds
aam
mov
adc
mov
fmuls
or
sbb
fs
es
push
cltd
shrb
xor
adc
out
hlt
repnz
inc
mov
out
inc
sbb
das
stos
dec
mov
and
push
clc
mov
ds
adc
andl
movsb
push
ds
cmp
imul
stos
pop
inc
cmp
loop
pop
fs
mov
jmp
sbb
push
pushf
pop
std
divb
push
sbb
sbb
repnz
insb
mov
enter
dec
sbb
test
sbb
ret
fwait
lds
inc
repz
stos
and
xor
cmp
xor
cld
lea
lcall
adc
lahf
into
lock
or
das
push
sti
push
bound
negb
add
lahf
ss
dec
movsl
lret
add
mov
out
int
clc
xchg
adcl
or
ret
sub
mov
pop
mov
sbb
jl
add
or
insb
sarb
inc
or
mov
mov
cld
rcr
xor
jge
mov
sbb
adc
xchg
jnp
cltd
inc
xchg
sbb
or
scas
sub
add
call
ud0
xchg
add
in
adc
push
std
or
aaa
adc
incl
andb
scas
adc
pop
cmp
shll
cmp
jp
xchg
mov
shll
pop
jo
adc
dec
pop
mov
bound
push
sbb
jb
mov
aam
sbb
loop
fcompl
and
pop
jmp
mov
mov
adc
call
test
push
push
inc
xor
pusha
push
inc
clc
insb
sub
les
inc
sbb
mov
or
push
pop
scas
or
sub
ljmp
mov
push
in
clc
fwait
imul
dec
adc
inc
push
dec
mov
vmread
adc
jbe
rcll
test
addr16
icebp
mov
stos
sahf
push
loop
or
scas
add
mov
adc
xor
and
xchg
push
sbb
inc
jo
incb
roll
xchg
addb
sbb
stc
pop
pusha
push
lret
xor
fstps
and
loope
adc
test
cmp
inc
pop
fmul
inc
cmp
push
mov
mov
nop
mov
jecxz
add
ss
mov
inc
add
mov
cld
push
push
jne
cmp
add
int
mov
int3
inc
ds
outsl
fadd
mov
jne
sbbb
and
lock
adc
scas
clc
aaa
ret
clc
or
or
lahf
in
xchg
pop
cmpsb
pushf
shlb
add
adc
add
test
lods
int3
xor
mov
aaa
lods
xchg
jge
xchg
dec
pop
and
cmpb
inc
push
hlt
sbb
adc
dec
rol
test
scas
fisttpll
cmc
adc
rclb
rclb
adc
gs
fisttps
and
dec
xchg
xor
movsl
shrb
add
jl
xor
dec
dec
daa
mov
fdivr
add
cld
insl
outsb
sub
inc
adc
pusha
rorl
pop
inc
test
leave
in
das
and
loop
lea
push
les
mov
in
add
add
outsb
pop
inc
jge
movb
jbe
dec
scas
push
lea
mov
dec
xor
push
sbb
in
xor
mov
inc
push
push
inc
push
lcall
sbb
iret
mov
cmp
jo
adc
xor
mov
add
and
ret
leave
xor
add
loop
sub
enter
mov
bound
push
loop
push
shl
fdivs
sahf
cmp
pop
enter
adc
mov
in
add
xor
push
test
push
leave
sbb
pop
fidivs
sbb
inc
cs
dec
adc
sub
xchg
enter
jecxz
adcb
out
nop
gs
add
aaa
fwait
stos
shl
pop
mov
roll
jne
push
shlb
adc
sbb
movsb
and
inc
push
or
pop
outsl
stc
mov
lds
cmpb
mov
jle
stos
mov
fisubl
mov
jae
in
insl
mov
pop
fwait
mov
and
insl
and
jg
sub
mov
sub
test
pop
pop
xchg
mov
inc
pop
or
mov
xchg
push
andl
xor
rcrl
sbb
outsb
sub
inc
jge
pop
cld
push
cmc
push
out
ljmp
sub
sbb
dec
or
push
add
nop
mov
xchg
aaa
stos
mov
adc
add
add
sbb
push
mov
ds
mov
sbbl
jp
cli
push
or
cmp
adc
push
lea
aas
xor
mov
pop
jp
popa
mov
mov
pop
dec
sbb
or
popa
sbb
or
rol
lret
xchg
mov
mov
push
cwtl
mov
call
outsl
arpl
in
int3
inc
pop
andl
push
push
mov
out
pop
test
aad
add
push
ret
pop
daa
mov
push
jp
push
mov
mov
jns
sahf
adcl
inc
pop
popf
mov
push
cmpl
mov
jl
call
push
mov
adcb
stos
fwait
test
in
loope
add
sti
lahf
in
pushf
inc
xor
inc
in
dec
xchg
add
rolb
aad
cmpsl
shl
mov
lret
and
inc
inc
dec
icebp
pop
mov
and
shlb
xchg
call
call
sbbl
add
leave
cltd
xor
push
shr
push
jnp
jnp
hlt
jge
push
dec
sub
mov
mov
mov
pop
mov
sbb
mov
lods
adc
add
cwtl
repnz
cmp
inc
xor
enter
divps
sub
and
popa
clc
je
jl
mov
lock
inc
stos
stos
add
lcall
sbb
or
ret
fisttpll
iret
add
shl
jp
mov
push
pop
sub
sahf
gs
fwait
pop
in
mov
add
cmpsb
ja
mov
ret
mov
xor
add
aam
sbb
mov
dec
add
inc
out
lahf
adc
adc
mov
lcall
insb
les
pop
xor
or
push
scas
jo
xchg
sub
sub
push
insb
push
and
inc
ljmp
mov
cmc
cmpsl
jmp
rcrl
ficomps
outsl
fldt
add
or
call
lahf
mov
cs
icebp
and
mov
mov
cmp
push
dec
aad
adc
sbb
jp
push
mov
or
cmp
mov
mov
push
mov
sbb
xor
xchg
lock
inc
or
lahf
pop
cmc
pavgb
bound
xorb
lods
stos
ja
push
dec
mov
mov
repz
xor
sahf
inc
js
push
add
mov
sbb
inc
ret
jl
pop
push
xchg
cltd
enter
push
rcll
sub
adc
adc
call
bound
loope
adc
sub
dec
xlat
dec
cld
pop
insb
pop
jge
cmp
lahf
movsl
cmp
test
mov
add
mov
aas
adc
dec
sub
loopne
jmp
dec
insl
es
shlb
inc
outsl
adc
ss
push
sbb
or
xor
bound
add
or
cmp
and
xor
nop
scas
mov
mov
push
cmp
in
ret
fisubrl
mov
aas
adc
sbb
add
int3
mov
sbb
or
repz
pop
add
or
jecxz
mov
shr
mov
divb
into
and
fisubrl
mov
pushl
mov
pop
and
ds
testl
cmpsl
adc
jecxz
xlat
sti
mov
sbb
pop
rorb
push
xchg
push
out
jbe
push
jle
in
clc
sbb
mov
xchg
jl
scas
pop
pop
dec
and
dec
daa
outsb
jg
jecxz
int3
shlb
inc
decl
sub
cmpsb
testb
test
imul
mov
negl
mov
mov
mov
insb
sub
lods
sub
mov
pop
orl
and
addb
push
add
jecxz
adc
pop
sbb
lsl
or
or
or
pop
sbb
das
adc
lret
dec
jo
shr
mov
sub
pop
icebp
mov
pop
push
out
jns
inc
clc
push
out
jp
push
pusha
test
push
adc
mov
stos
ljmp
push
movb
sbb
loopne
rcll
inc
or
lret
shlb
js
mov
mov
cs
mov
lock
mov
adc
add
inc
orb
jle,pn
ss
sbb
mov
xor
loop
pop
cmp
jl
inc
movsb
mov
inc
inc
xchg
mov
cmc
mov
sbb
mov
ret
mov
xor
jp
loop
sbb
fsub
jecxz
jp
adc
fiadds
std
xor
add
pop
sbb
cld
cmc
dec
sbbb
aaa
lcall
pushw
inc
inc
dec
sbb
mov
cltd
jg
ret
mov
adc
fneni(8087
call
sti
sub
mov
push
and
lods
sbb
mov
clc
sbb
mov
clc
pop
mov
xor
jmp
mov
ss
jbe
pop
cmp
or
fisubl
jnp
pusha
fwait
mov
pusha
aaa
rcl
adc
popf
mov
sbb
nop
pop
sub
or
pavgw
xor
xchg
jb
inc
adc
push
and
ljmp
subb
push
dec
js
cld
cmp
je
xor
mov
nop
adc
loope
je
insl
lods
pop
push
dec
std
nop
push
mov
dec
mov
fs
repnz
mov
or
outsl
xor
mov
je
push
shl
scas
outsb
pop
cs
sub
xchg
mov
xchg
push
stc
adc
addr16
jno
sarb
fmul
lock
or
leave
rol
notb
adc
mov
mov
cmp
inc
xor
cmp
sub
repnz
ss
pop
scas
jae
push
cmc
insb
xor
dec
test
mov
xchg
jbe
sub
ja
insb
call
into
cmp
ja
inc
cmp
inc
popf
les
jo
ja
imul
stos
js
and
call
xchg
inc
dec
lahf
mov
pop
incl
mov
leave
bound
mov
inc
jae
mov
xchg
dec
clc
loop
pop
sti
or
mov
cmp
sbb
test
addr16
into
jp
adc
leave
adc
call
adc
or
stos
or
icebp
fstpl
mov
cld
jbe
push
xchg
adc
add
cmp
rcrb
lret
mov
outsb
lret
sub
popf
ljmp
jo
adc
xchg
js
and
mov
push
mov
pushf
imul
jg
jo
xchg
pushf
jle
dec
ret
pop
adc
push
ror
pop
and
cmc
adc
inc
mov
push
stos
cmpsl
enter
ja
push
cmp
in
xor
fcmovnb
daa
movsl
sbb
mov
sub
or
cmp
incb
pop
cmp
cmp
add
stc
popf
jp
xchg
das
mov
aas
cmp
ja
repz
popf
das
clc
or
mov
hlt
add
jnp
jl
push
mov
pop
mov
ror
std
loopne
cli
inc
fdivrs
and
and
or
lds
cs
popl
icebp
xlat
fistpl
out
sub
sub
cmpsl
cwtl
sbb
loope
and
dec
je
sub
sub
jo
jge
sub
cli
sub
jl
cli
stos
lcall
push
sub
xor
ss
aam
cs
idivl
sahf
inc
dec
push
and
push
cmp
sub
inc
test
mov
test
or
sbb
test
rcrb
addl
aaa
sbb
mov
out
sbb
imul
mov
jo
popa
loopne
adc
sub
clc
es
xlat
sbb
xchg
push
inc
movsb
pop
movsl
mov
mov
mov
imul
adc
inc
movsb
cmp
pushf
repz
dec
xor
shrd
adc
and
mov
les
xor
daa
fucomi
dec
in
movl
mov
test
mov
stos
cld
mov
cmp
sbb
mov
and
sbb
pushf
insl
sbb
imul
xchg
outsb
jno
xor
xchg
sub
imul
test
rcrb
jl
mov
push
push
outsb
inc
mov
and
xlat
or
lahf
repnz
mov
call
subl
imul
jnp
push
clc
fwait
in
scas
and
ss
dec
jnp
cwtl
xor
js
lock
or
cmp
ret
lds
sub
lret
xchg
sti
jne
ss
js
nop
push
rcl
dec
xchg
loopne
mov
or
shll
cwtl
fsubl
jbe
push
aas
fiaddl
int3
xchg
jmp
insb
cs
lods
mov
xchg
cmp
rcrb
jecxz
inc
out
push
aad
ficoml
adc
insb
rclb
lret
dec
xor
aad
pop
pusha
adc
mov
mov
sbb
jp
mov
mov
xor
jo
bound
sbb
mov
mov
xchg
mov
mov
int
fcomps
push
pop
adc
aaa
mov
in
movsb
jb
cmpsl
cmp
or
imul
sub
adc
fwait
setg
in
push
or
xor
jge
ljmp
outsb
push
lods
sub
sub
jne
adc
add
rorb
ss
adc
cmp
add
mov
iret
xchg
jo
nop
sarb
pop
test
jl
imul
in
mov
cwtl
sub
lock
jecxz
repnz
cwtl
testb
xchg
cmpsl
lds
out
imul
inc
cmp
mov
and
movaps
cmp
addr16
popa
fs
and
lods
xlat
sbb
dec
repz
push
clc
mov
fs
push
inc
mov
sbb
sahf
push
cmp
scas
ja
jmp
or
dec
jo
push
shll
mov
sbb
dec
mov
jle
inc
jne
xchg
cmc
xor
ret
inc
sbb
inc
dec
lods
clc
or
ljmp
lods
out
pop
sbb
inc
adc
add
pushf
pushf
ds
ljmp
cmp
lea
xchg
gs
cmp
xor
push
dec
movsb
lcall
cmp
adc
loopne
daa
sbb
fdivr
pushf
lds
test
jecxz
mov
xchg
imull
fwait
test
mov
push
lock
push
mov
mov
testl
xor
or
mov
shlb
nop
mov
mov
lahf
fiadds
sbb
lret
mov
pop
xorl
xchg
fidivrl
lea
scas
jmp
arpl
shlb
stos
lods
jp
outsl
add
xor
lea
inc
or
or
xchg
cwtl
cmp
popf
stos
lea
push
and
mov
orb
xor
loope
jl
push
sbb
mov
mov
mov
mov
adc
loopne
aam
cmp
js
shr
add
mov
cmp
adc
in
push
xchg
hlt
sbb
hlt
test
pop
mov
pop
xor
xchg
jae
lret
jne
aaa
push
xchg
xlat
jno
inc
xor
ds
mov
push
mov
xchg
pop
ds
mov
mov
aam
lock
sub
mov
shll
or
ss
arpl
shrb
xor
sbb
insl
dec
and
cmc
mov
xorl
das
pop
loopne
mov
cli
mov
push
mov
mov
dec
mov
bswap
xchg
imul
icebp
test
sub
hlt
pop
lcall
imul
dec
lea
mov
fstl
pusha
mov
out
pop
sub
cmp
lret
std
dec
push
cld
jmp
std
cli
dec
mov
dec
lret
sahf
xchg
jmp
jmp
sub
repnz
cmp
imul
xor
mov
orb
addl
dec
aam
dec
frstor
and
or
fwait
out
cli
popa
push
push
rcl
add
cltd
jecxz
ljmp
cs
jp
mov
sahf
out
insl
push
add
out
cmpsl
sbb
mov
jp
or
fdivl
push
mov
sbb
jnp
cmp
inc
pop
loopne
test
mov
iret
xor
test
cmp
lods
and
in
jns
out
push
dec
sbb
movsl
cmp
add
xor
sub
mov
pop
fcmovne
push
jmp
sbb
add
in
rolb
negl
push
sbb
ds
clc
sub
pop
and
shl
clc
jb
jns
montmul
cmpsb
xchg
add
sub
jmp
loop
cmpsb
sub
mov
push
sahf
mov
inc
jbe
test
xlat
rsm
imul
push
imul
daa
mov
add
sahf
and
lods
rorb
and
ljmp
pop
inc
movzbl
sarl
sbb
loopne
pop
ds
popf
jnp
push
dec
push
pusha
jle
or
inc
jne
mov
adc
jnp
xchg
dec
mov
scas
outsb
loope,pt
addr16
enter
push
push
mov
mov
js
ljmp
int
inc
pop
cmp
mov
les
ja
jae
dec
sahf
xlat
loope
dec
cmp
or
je
mov
sar
xchg
adc
pusha
mov
aas
lds
test
mov
jmp
xchg
ficoms
arpl
xor
adc
call
and
mov
test
ffreep
and
je
xchg
rcrl
iret
iret
adcb
or
ror
adc
rol
cmp
nop
popf
cmp
in
lods
and
loop
cmp
test
int
je
push
ds
sbb
fistpl
insl
pmuludq
cmp
cltd
repnz
mov
sub
xor
pop
and
xchg
loop
mov
in
ds
lock
or
adc
xchg
bnd
hlt
sbb
daa
sub
xor
jnp
xchg
pop
jnp
sbbl
or
stos
dec
stc
outsl
mov
shrl
jecxz
mov
push
pop
jecxz
sub
add
pop
cmp
insb
shrb
std
cli
cmc
sbb
es
xor
xor
leave
jl
lods
dec
jae
push
les
lret
mov
enter
cmp
cmp
cmp
negl
pop
dec
outsl
jae
insl
test
jge
xchg
sub
dec
inc
mov
mov
int
shlb
data16
sarb
xchg
sbb
add
stc
and
insb
inc
fs
pop
mov
dec
ja
or
mov
ljmp
mov
test
call
jp
loopne
shlb
mov
xchg
pop
rolb
lods
add
jae
inc
cmp
push
jecxz
cli
inc
cli
sub
jne
push
cmp
rcrb
xor
js
mov
popa
and
into
and
xchg
or
lcall
jge
or
add
subl
mov
and
les
cs
inc
clc
loope
mov
jecxz
xchg
movsl
test
or
mov
cld
scas
lods
call
cmp
push
push
lret
jns
and
jo
push
xchg
add
xlat
adc
inc
xor
bound
and
mov
push
in
xor
mov
and
cwtl
and
mov
jp
bound
and
and
mov
or
inc
xlat
dec
xchg
incl
lcall
leave
mov
ss
std
les
and
add
fidivrl
pop
pushf
push
imul
lock
adc
dec
shrb
dec
data16
mov
mov
pop
xor
lock
add
sbb
out
inc
stos
adc
movsb
and
sub
sbb
sbbb
daa
cmp
xor
push
addl
or
sbb
scas
mov
out
loopne
mov
loope
mov
cmp
adc
pop
cmp
mov
mov
sti
out
push
insl
xchg
jle
cmp
ficoml
cmpsb
pop
pop
add
outsb
mov
push
cli
pop
add
shl
cwtl
push
add
pop
repnz
mov
pusha
add
pop
sub
in
scas
add
dec
into
testl
shll
mov
pop
lock
add
mov
pushf
inc
je
fisubrl
dec
adc
lds
jne
test
cmp
push
outsb
repz
jns
ss
fldt
gs
pushf
loop
cli
lret
cmp
out
add
nop
inc
popf
outsl
mov
xchg
pusha
xor
xchg
or
inc
xorl
in
shr
mov
adcl
ss
mov
loope
push
ret
cmp
mov
in
xor
aas
gs
or
sti
inc
push
add
icebp
sub
stos
mov
sbb
add
sub
mov
popa
lcall
push
cmp
or
jb
cmc
pushl
xchg
js
les
or
push
cmp
sbb
jae
shll
fisubs
fcompl
rorb
cmp
rcl
in
jl
les
mov
div
popf
les
pop
repz
push
add
or
pop
pop
andl
addr16
pop
dec
add
mov
test
out
xor
fadds
cmp
adc
pop
or
and
mov
rcll
inc
xchg
daa
sub
out
sub
icebp
add
pop
into
cmpsl
rorl
cmp
aaa
xor
lods
mov
adc
test
push
std
js
mov
push
loop
xchg
pop
das
xchg
icebp
ffreep
aas
add
and
adc
mov
stos
inc
inc
stos
test
data16
mov
mov
mov
cmp
xchg
jp
shll
pushf
dec
daa
mov
inc
xchg
jle
and
xor
add
inc
lahf
dec
inc
sub
adc
or
push
dec
aam
cmpsb
cmp
mov
shlb
add
add
fnsetpm(287
popf
jo
add
std
cmc
loop
cmp
pop
jl
es
mov
push
mov
fucomp
xchg
adc
ja
jne
sbb
sti
xorb
lcall
shr
jo
mov
aad
pop
dec
push
pop
add
jl
popa
lods
lcall
into
fildl
aaa
repz
mov
and
sti
ret
shrb
stos
sbb
inc
cmp
mov
add
mov
xchg
pusha
mov
mov
inc
out
stos
rolb
mov
in
in
stos
lret
sbb
in
rcll
dec
sub
xchg
pop
pushf
fisubrl
adc
pop
std
lret
pop
lahf
push
push
enter
add
jecxz
rolb
sahf
xor
xchg
lock
mov
orb
mov
dec
sub
ljmp
xchg
stos
loopne
pop
loope
out
add
cld
ret
pop
xorl
mov
inc
sbb
jge
sarl
xchg
adc
push
loopne
sbb
sub
adc
jp
push
cmp
aaa
cli
mov
mov
xchg
add
imul
shrb
cmpsb
pop
movsl
jle
mov
nop
jg
int
or
jle
xor
sbb
clc
mov
clc
add
jecxz
cmp
adc
pop
push
and
jbe
inc
add
aam
mov
stos
or
bound
xor
out
orl
push
xchg
fidivrl
sbb
dec
fwait
adc
ljmp
and
add
push
hlt
movsl
lods
push
ljmp
and
dec
adc
lock
call
out
mov
popa
rolb
fwait
adc
loop
jle
pop
add
cmp
pop
mov
idivb
sbb
fdivrs
scas
iret
and
lds
andb
aas
scas
push
lret
mov
shll
cltd
movsb
pop
adc
xchg
and
pop
outsb
sbb
std
cmpsl
mov
rorl
mov
imul
int3
jge
lret
mov
shl
aaa
pop
insb
mov
out
pushf
in
xor
aas
push
mov
mov
addr16
cmp
loop
adc
mov
add
mov
test
sub
xchg
pop
ja
pushf
mov
divl
push
and
jno
pop
std
sbb
ja
cs
sbb
pop
cld
rdmsr
nop
testl
pop
out
fucom
inc
pop
mov
jl
jg
repz
adc
test
pop
adc
scas
cmp
add
mov
add
xor
or
dec
push
dec
flds
push
mov
xlat
dec
pop
jle
hlt
xchg
sub
in
int
push
repz
dec
lret
enter
sub
cmp
push
sub
in
dec
cmp
dec
mov
cmpsb
in
adc
fstpl
jns
mov
orb
pop
jmp
pop
adc
das
and
je
leave
clc
xchg
ljmp
add
mov
pushf
push
pop
insl
inc
imul
ret
fisttps
hlt
lahf
jp
sub
loopne
push
xor
rcl
adc
lock
mov
push
scas
lock
sub
sahf
push
push
js
jbe
shll
pop
and
xchg
popa
add
test
cmpsb
jno
mov
pop
sahf
cmpsb
popl
je
jmp
add
push
clc
aad
lock
xor
xchg
mov
add
shrl
or
pop
std
aam
rolb
into
xchg
mov
inc
mov
inc
xor
insb
sbb
pop
ss
jecxz
dec
pop
and
es
push
sub
nop
sbb
test
sub
or
cmc
push
or
cmp
jns
mov
insb
lods
data16
out
cli
xchg
mov
mov
add
sbb
add
sbb
add
jns
mov
lock
mov
enter
std
adc
jnp
push
imulb
inc
out
sbb
imul
mov
movsl
lock
push
jge
scas
mov
mov
icebp
repz
enter
rclb
shrb
jl
and
js
pusha
in
les
jmp
dec
xor
orb
pop
jl
imul
mov
pop
xor
roll
dec
jae
icebp
inc
push
lea
pop
dec
and
xchg
cmp
jb
rorl
movsb
mov
add
sbb
pop
sbb
mov
sub
pop
cmpsl
shlb
adc
in
out
mov
mov
and
sti
inc
xor
and
adc
loope
jbe
gs
cmp
in
cld
loopne
mov
sahf
dec
cmp
add
sub
sbb
jnp
cli
sub
add
sbb
pop
or
cmpps
fldl2e
push
cli
mov
adc
push
and
jne
pop
push
leave
or
sbb
arpl
adc
add
test
loope
adc
aam
dec
dec
sahf
adc
adc
ds
popf
in
iret
mov
lock
mov
mov
loope
mov
inc
sahf
dec
cmp
aaa
sbbb
in
mov
les
push
jmp
hlt
std
and
in
in
ss
incl
test
xchg
inc
pop
and
lods
inc
add
es
pop
mov
and
adc
lods
adc
push
scas
rolb
scas
mov
rorl
pop
pushf
fs
mov
push
add
sbb
cs
mov
push
mov
insb
cmp
pop
jbe
je
cmp
mov
push
std
jecxz
mov
mov
sbb
cmpsl
sahf
pop
cld
hlt
inc
rcll
pop
ljmp
pop
jl
push
lcall
mov
mov
push
in
shr
push
dec
push
or
loope
pop
fneni(8087
xchg
inc
dec
mov
or
data16
add
mov
call
jo
cmp
aam
icebp
pop
fcmovnu
push
xlat
in
cs
cmp
adc
jl
add
xchg
dec
iret
daa
inc
mov
add
leave
test
mov
pop
jecxz
ret
adcl
and
push
fimull
cwtl
sub
sub
out
lret
dec
imul
mov
mov
jle
xor
popa
or
cltd
clc
jmp
jo
pop
leave
xor
test
mov
pop
xchg
push
mov
movsl
arpl
add
mov
roll
iret
sbb
adc
push
test
adc
add
jb
in
jo
je
mov
mulb
cmpb
scas
test
ljmp
rol
cltd
xchg
mov
mov
int
outsl
int
bound
jle
pop
fsubrl
loope
jl
ficomps
cli
test
xor
ljmp
sbb
pop
jmp
outsl
mov
cmc
stos
clc
sub
lea
adc
mov
xchg
cmp
mov
adc
xlat
cmp
and
imul
sbb
lods
insb
in
jo
std
mov
push
lcall
or
jl
ffree
iret
hlt
pop
js
mov
xchg
sbb
push
scas
and
lods
notl
sub
dec
and
push
adc
stos
adc
push
pop
jb
or
mov
sbb
pop
es
mov
xchg
mov
iret
sbb
mov
enter
sub
and
dec
int3
sbb
call
iret
and
cmp
call
icebp
aaa
lret
scas
cmc
inc
icebp
add
push
sbb
cld
jmp
js
lds
add
add
movb
xchg
or
xor
or
adc
pop
jne
daa
lahf
or
and
insl
jbe
mov
dec
mov
call
jmp
adc
mov
cltd
fisttpl
mov
xor
sbb
and
or
out
sub
ja
ja
push
cmc
jecxz
jle
or
xor
sbb
mov
jle
mov
fsubrs
pop
inc
cmpsl
int3
loop
rcll
mov
or
push
scas
arpl
add
dec
sar
xchg
pusha
andb
mov
test
adc
pop
cmpsl
lcall
popa
les
xlat
mov
jg
adc
add
je
mov
aad
out
xchg
adc
dec
testb
stos
pop
dec
and
and
add
sbb
or
mov
lds
int
popa
add
and
sub
test
icebp
add
adc
mov
popa
insl
cmp
jne
cs
inc
xchg
cmp
daa
adc
add
outsb
pop
dec
sub
or
jmp
pushf
into
stc
push
sub
aam
adc
inc
jno
mov
push
mov
mov
repz
imull
enter
mov
repz
daa
stos
add
or
fdivl
push
pop
outsl
rorb
xchg
inc
and
add
pop
lock
shlb
ljmp
cmp
iret
mov
add
pop
ds
ret
fdivrs
loope
sbb
dec
fnstcw
mov
add
adc
pop
sbb
sbb
shrb
sbb
movsl
arpl
lcall
pusha
xor
adc
ret
add
loop
mov
loopne
xchg
lods
movsb
bsf
cld
mov
cltd
ljmp
lock
push
das
mov
mov
sub
js
fiaddl
mov
dec
ljmp
aaa
cli
xor
daa
leave
loop
lds
insl
xchg
ds
out
loopne
cmp
adc
mov
jne
cmp
jp
sahf
dec
cmp
lock
fcompp
cmp
add
orb
dec
clc
roll
ficomps
pusha
pop
sbb
inc
aaa
pop
js
pushl
rolb
inc
push
or
fwait
test
out
xchg
js
or
xchg
xchg
mov
mov
in
lods
in
imul
aad
lock
cld
push
ljmp
icebp
mov
and
dec
sbb
in
jl
aam
cmp
ror
jmp
bound
pop
pop
adcb
mov
xor
nop
sub
js
aas
cld
lea
iret
sub
xchg
daa
and
sub
jl
or
inc
or
notl
rorl
idivb
inc
xor
mov
imul
popa
test
aaa
mov
or
repnz
movsl
cmpsl
jno
pusha
pop
je
and
loope
add
dec
inc
lahf
cmp
mov
iret
dec
or
cwtl
mov
mov
daa
lods
scas
mov
dec
loope
cmp
xor
cmpl
jne
sbb
push
adc
inc
pop
inc
lahf
aam
pop
xor
je
hlt
test
push
pop
inc
stos
or
pop
repz
jecxz
jmp
mov
aaa
lock
sbb
popa
cmp
insl
popf
rolb
fcompl
jae
imul
add
xor
cmp
push
rcll
stc
pop
aas
dec
jbe
addl
fimull
mov
jmp
insb
shlb
sub
mov
add
addl
int3
ret
ret
inc
test
pop
scas
pop
ret
xchg
jecxz
pop
call
and
push
xchg
cmpsl
rcrb
cli
xchg
mov
sbbb
scas
pop
xchg
adc
pop
xor
jge
xor
inc
fs
inc
shll
fmull
sbb
sbb
mov
out
test
lcall
int3
call
or
jne
loope
roll
dec
jns
insb
jl
mov
cmp
dec
repnz
push
clc
cmpsl
jmp
dec
shll
jbe
push
or
icebp
ljmp
sbb
pop
inc
test
and
or
das
fs
push
sub
scas
call
lcall
sar
pop
fs
loopne
push
push
mov
sbb
ret
js
and
clc
pop
add
sbb
adc
cmpsb
scas
outsb
pop
insl
test
movsb
cmp
push
cmovle
mov
sub
mov
jnp
add
int
aam
ds
xor
jge
sbb
add
mov
push
fildll
xor
pop
and
jns
mov
mov
sti
aaa
js
push
fsubr
shl
hlt
adc
dec
lea
lcall
dec
sub
data16
dec
insb
push
xor
movb
ljmp
cmpb
jae
push
pop
stos
dec
adc
adc
daa
fwait
push
sub
bound
mov
jno
outsb
ja
dec
lds
fcoml
loop
in
orb
sbb
push
dec
add
or
in
and
loope
mov
aas
hlt
insb
jmp
and
pop
and
fisubrl
pop
or
dec
scas
and
pop
insb
sbb
and
sub
jle
lret
or
je
push
or
sti
test
pop
fsubl
inc
js
add
outsb
inc
jnp
loopne
cld
adc
push
jmp
ss
push
sbb
icebp
movsl
into
cmp
mov
bound
imul
add
insb
test
or
cmp
push
int
aam
ds
sbb
jmp
mov
loop
cmp
mov
mov
lret
ret
add
dec
pop
jmp
pop
fistl
in
add
faddp
outsb
aaa
fnsetpm(287
lea
ret
outsl
ljmp
mov
xchg
sbb
dec
hlt
nop
bound
outsb
dec
mov
or
idivb
imul
test
jl
cmp
jle
std
dec
loope
mov
jns
dec
ds
ja
sarl
cmc
sahf
dec
sbb
jmp
push
or
lock
pop
icebp
mov
imul
lret
lret
sarl
cmovae
rorl
xor
mov
stos
cmp
cmp
push
int3
bound
xor
mov
mov
jb
popa
add
test
test
filds
lods
and
shr
cmpl
es
fcoms
stos
push
xchg
jmp
cmp
call
shrb
cmp
les
lods
scas
lds
mov
inc
mov
jns
outsb
inc
ljmp
pop
lret
mov
outsb
pop
add
pop
sbb
pop
mov
or
xchg
lds
and
cmpl
in
leave
pop
mov
sub
call
cmp
enter
outsl
repnz
xchg
push
inc
rcrl
mov
lods
imul
xchg
sbb
mov
rol
je
jne
sub
pusha
pop
movsb
dec
dec
in
ret
das
jne
call
jns
arpl
mov
pop
inc
stos
outsl
mov
jecxz
ret
or
enter
sbb
int3
rcrl
cld
inc
push
or
repnz
xor
pushf
mov
loopne
notl
sub
loope
movsl
std
and
movsb
lret
mov
or
outsb
mov
je
cmp
mov
cmpsb
or
add
push
add
add
sbb
mov
sub
cmp
adc
xchg
push
adc
and
mov
repnz
cmp
cmpsl
adc
cmp
sbb
pop
js
mov
push
push
jecxz
mov
cmpsl
lods
movsl
int
outsl
nop
add
repz
cld
mov
rorb
fistpll
push
negb
jecxz
aam
lahf
into
adc
inc
std
jle
jmp
popa
popl
popa
enter
cmp
out
mov
inc
hlt
inc
mov
ficoms
jns
cs
test
mov
arpl
cmpsl
paddb
xor
daa
rcrl
loope
cmp
and
sbb
outsb
cmc
xchg
inc
sbbb
pusha
and
jbe
mov
aam
inc
push
and
subb
js
inc
loop
dec
adc
inc
inc
inc
test
lea
pop
adc
stc
pusha
ljmp
sbb
leave
scas
pop
lret
xor
jle
fmull
dec
sbb
xor
xchg
sub
sub
mov
orl
mov
enter
sub
push
push
xor
adc
mov
jg
mov
jecxz
mov
rcrl
sbb
in
adc
push
cs
cmp
push
ds
push
popa
or
inc
push
aaa
mov
lods
shrb
xchg
push
fidivl
stos
or
pusha
scas
mov
or
ret
pop
loop
cmp
push
ficompl
dec
es
mov
jnp
cmp
sbbl
xchg
jne,pt
cmp
pop
filds
xchg
nop
outsb
in
sbb
mov
jns
scas
add
outsl
push
call
sbb
adc
jecxz
add
cmpsb
xor
sbb
in
icebp
rcrl
aad
push
pop
or
xor
aam
jl
into
div
imul
ljmp
aam
ret
lds
inc
scas
jb
sub
mov
jg
pop
mov
cwtl
icebp
stos
mov
push
fcomi
ja
push
mov
pop
fdiv
xchg
dec
push
sub
mov
mul
das
mov
mov
notb
rcl
sub
mov
sbb
or
lods
xchg
sbbl
dec
mov
fldenv
testl
push
stc
xlat
sub
sbb
pop
mov
ret
xchg
cmp
push
fwait
loopne
insb
dec
outsb
addb
mov
adcb
fmuls
cmpsl
sub
jns
insb
and
jl
sbb
or
fwait
sub
and
lret
shlb
lahf
dec
jnp
lock
sahf
nop
mov
fcoms
mov
pop
repnz
or
push
aaa
lcall
aam
in
jns
subb
jns
push
clc
mov
xchg
pusha
push
leave
test
push
or
icebp
xchg
and
dec
pusha
imul
je
je
inc
pop
jo
pop
or
push
pop
clc
jl
dec
add
adc
stos
sub
or
cmp
push
push
xchg
mov
push
xchg
add
das
add
fcmovnbe
dec
sti
orb
push
jbe
dec
test
sbb
ds
jl
or
pop
cld
shll
dec
add
fs
stos
loopne
jle
xchg
shll
psllq
inc
and
push
mov
xor
outsb
aam
inc
lds
test
fwait
bound
clc
icebp
xor
push
shlb
adc
jno
jg
jb
or
inc
push
orl
lods
inc
nop
fcomps
popa
imul
sbb
aaa
mov
stos
push
jbe
xchg
and
push
cs
arpl
das
stc
idivl
sahf
loope,pn
jb
push
nop
les
dec
lea
dec
clc
or
in
ljmp
shrb
sbb
shl
mov
inc
sahf
mov
lcall
mov
xchg
stos
xchg
cmpsb
cs
xchg
lods
movsb
mov
xlat
loopne
add
orl
add
cmp
push
push
adc
out
rclb
cmp
inc
mov
dec
add
mov
sub
jle
push
mov
pop
lds
push
inc
xlat
jecxz
imul
lahf
sbb
ret
mov
out
adc
adc
jb
xor
and
mov
cld
jmp
fiadds
scas
pop
mov
push
insb
cmp
jmp
pop
movsb
dec
pop
ja
out
bound
cs
mov
push
push
add
xlat
jo
out
test
leave
std
ret
mov
sbb
idivb
jb
leave
mov
scas
or
scas
or
daa
inc
push
cmpsl
push
jns
cld
jecxz
dec
sub
scas
inc
jnp
inc
add
in
fs
xchg
loopne
fsubrl
fstpt
inc
mov
or
cld
jl
pushf
leave
repz
hlt
sbb
mov
cltd
je
fidivrl
test
inc
xor
xchg
jno
push
std
add
jge
or
cmc
inc
sbb
jno
aas
add
repz
loop
sbb
in
pop
out
fmul
pop
cmp
cmp
dec
adc
enter
decl
add
add
or
jmp
inc
or
push
cmp
mov
stos
mov
mov
mov
pop
je
cmp
out
xor
mov
or
nop
mov
or
dec
lea
jno
das
push
sub
aad
mov
add
xchg
out
cld
xchg
pushf
orps
pop
or
xchg
in
mov
fwait
sub
insl
adc
test
mov
mov
iret
push
jmp
nop
cmp
out
cld
push
sbb
add
or
test
push
xchg
pavgb
and
sbb
insl
push
cmp
jecxz
in
cmc
sub
cmp
dec
mov
shrl
movsb
sahf
cli
dec
data16
inc
cmp
bound
cmp
ficompl
dec
jno
cmp
ret
mov
mov
int
aas
sbb
push
adc
loopne
sub
mov
jecxz
fldcw
add
lret
loopne
mov
push
xor
and
adc
push
xor
sub
jp
je
loope
xchg
add
fsubl
mov
test
mov
and
mov
xchg
lea
movsb
leave
idiv
mov
sbb
push
ljmp
stc
cmpsb
inc
mov
mov
inc
pop
int3
stos
lock
push
pop
loop
mov
loopne
rorb
and
cwtl
dec
or
mov
mov
pop
xchg
fs
inc
or
or
cmp
je
pop
or
dec
or
sbb
mov
fwait
fwait
or
cmp
call
ss
or
add
mov
dec
pop
add
cld
mov
cltd
mov
adc
icebp
dec
xchg
xor
cmpsl
addl
push
aad
inc
and
std
sbb
push
mov
test
push
push
jecxz
add
shrb
mov
jp
dec
icebp
test
cmp
pop
imul
pop
sbb
insl
das
pop
sbb
fildl
std
popa
cld
add
andb
pop
xchg
mov
test
xor
in
adc
loope
mov
jbe
dec
and
jb
and
sub
adc
rorl
pop
pop
mov
iret
sub
xor
or
andl
lds
push
sbb
xlat
xchg
xchg
les
cli
js
pop
push
shlb
mov
fidivrl
mov
pop
fwait
push
loopne
hlt
data16
push
mov
int3
jecxz
int
addr16
mov
mov
fs
mov
fiaddl
dec
inc
jge
mov
stos
jb
xchg
cmp
insl
jl
sub
mov
sub
mov
pop
loope
mov
push
sbb
popf
add
in
mov
jg
pop
dec
adc
ret
adc
ss
inc
aad
cmp
mov
out
push
and
js
rol
mov
sbb
lods
push
jge
pop
movsb
push
or
sub
mov
mov
fs
xchg
ds
addr16
adc
or
and
xchg
xchg
mov
jo
pushf
push
js
mov
sbb
shl
inc
mov
imul
outsb
dec
je
pop
loop
inc
ss
dec
stos
xorl
shlb
nop
std
adc
cmc
jmp
and
leave
es
dec
pop
mov
add
pop
scas
push
jle
sar
xchg
mov
push
cltd
lds
test
rcll
or
dec
ljmp
js
xchg
xor
sub
jl
jno
cld
inc
jl
movsb
int
outsl
js
test
fisttpl
push
ds
jmp
hlt
sahf
push
xchg
filds
sbbl
inc
loope
and
ficompl
xlat
and
or
jno
push
fsubrs
sbb
mov
inc
aam
mov
fwait
std
cmpsb
fadds
xchg
scas
or
rcl
lret
daa
shll
cmp
jp
call
iret
inc
jp
shll
sbb
nop
lea
push
xlat
cli
mov
adc
ret
dec
pop
adc
sbb
call
inc
or
es
das
cmp
sahf
xchg
imul
out
incl
shrb
stos
adc
jp
sahf
sar
out
fisubrs
clc
cli
pop
pop
mov
cmp
in
les
or
dec
push
pop
insb
enter
hlt
fisubs
adc
add
pop
xchg
fs
inc
sub
pusha
pop
push
cwtl
ret
xchg
adc
in
ret
dec
pop
pop
test
mov
int3
jbe
lcall
fsubs
insb
aad
outsb
rorl
sub
add
push
cmp
push
jne
add
mov
pop
es
scas
aas
mov
out
inc
mov
loope
push
cmp
mov
sbb
and
lcall
jno
jo
movsl
adc
cvtpi2ps
in
push
xor
pop
mov
inc
sbb
shrl
pop
lds
imul
cmp
lret
inc
roll
stos
dec
pop
movsl
cld
jle
lock
pusha
ret
mov
or
xor
mov
rorb
cmp
cmpsb
aam
hlt
sahf
pop
clc
loopne
dec
add
mov
cmpb
adc
sbb
mov
push
sub
and
pop
add
mov
jle
pop
mov
push
loope
or
fistpll
les
scas
sbb
sub
sbb
aam
ret
pop
and
arpl
insl
inc
xlat
into
fwait
dec
sarw
je
mov
clc
cmp
fcmove
add
sub
pop
xor
and
mov
add
pusha
sarb
cmpsb
sbb
dec
mov
call
vandnps
or
imul
add
addb
int
xchg
cmc
mov
iret
jo
push
pusha
jl
sub
dec
xor
aad
rol
xchg
inc
xchg
movsb
pop
xor
inc
fbld
sbb
hlt
adc
fcomps
sarl
daa
jae
xchg
cmp
jecxz
out
icebp
inc
sahf
and
jb
or
enter
imul
adcl
and
xor
or
movsl
fcoms
lahf
aas
shrb
sub
test
cmc
xor
je
lods
sarl
sub
sub
rolb
std
stos
repnz
scas
mov
add
push
dec
sub
loope
and
scas
filds
es
jns
lret
insb
lcall
idivl
ret
clc
scas
cmp
loope
mov
cld
inc
ja
mov
jmp
add
fiaddl
aas
add
mov
add
mov
cmp
xor
imul
in
jns
shrl
and
inc
push
sarb
js
out
mov
mov
adc
insb
fprem
sub
cmp
sub
and
mov
out
adc
push
sahf
mov
imul
push
ds
xchg
adc
aad
sti
pop
xchg
int3
lahf
lock
call
in
mov
sub
insl
xorb
scas
sbbl
or
in
xor
or
mov
xor
into
insl
fldl
cmp
add
jnp
incb
pop
mov
mov
mov
or
xchg
ja
scas
nop
imul
pop
icebp
scas
mov
or
cs
dec
ljmp
push
mov
outsb
cmc
inc
jns
mov
ja
xlat
enter
mov
pop
mov
bound
in
xchg
stos
xor
cli
test
jp
dec
pop
jl
lds
and
inc
jl
add
jae
pop
sbb
fs
aad
cmp
xlat
hlt
hlt
idivb
push
adc
or
sbb
pushl
leave
xor
and
mov
or
in
cli
push
jns
and
mov
add
pusha
clc
sbb
loopne
mov
jl
inc
cmp
jnp
icebp
test
inc
in
pop
push
test
add
cmp
pop
loope
sbb
ljmp
fwait
out
mov
jg
adc
lods
sbb
pop
hlt
es
and
push
lods
xchg
hlt
dec
lods
arpl
push
bound
inc
mov
popa
addl
pop
jl
mov
cmpsl
je
aad
adc
and
test
inc
lcall
sbb
inc
mov
xchg
dec
push
bound
ret
nop
mov
or
inc
sahf
mov
dec
mov
and
adc
cmpsb
ds
mov
mov
xchg
mov
and
pop
inc
lcall
and
je
mov
jge
add
out
ficoml
lret
test
dec
movsb
lock
popa
xor
dec
or
movsb
push
stc
inc
cld
jmp
in
sbb
dec
jbe
adc
mov
orl
js
mov
cmpsl
jno
xor
mov
cmp
rorb
fwait
xor
scas
movq
test
push
mul
jge
inc
in
mov
fsubl
ja
bound
clc
outsb
movsb
shrb
aam
inc
pop
lods
xor
or
mov
daa
mov
xor
pusha
pop
sub
rcrb
adc
rorb
xchg
cmp
cmp
adc
shrb
xor
call
sub
loopne
out
sub
xchg
fdivr
lods
out
jmp
xor
sbb
xor
mov
cmp
add
movl
inc
push
pop
xchg
jbe
xchg
ds
rclb
pushl
fadd
shlb
pop
sbb
popa
xchg
xchg
xor
xchg
repz
lods
jl
jg
or
icebp
pop
cmp
xlat
cwtl
aas
cmc
rorb
scas
push
sub
sbbb
shll
mov
adc
ret
pop
enter
mov
mov
inc
jns
test
repz
dec
out
aam
mov
aas
xor
jmp
lea
sahf
jb
pop
clc
adc
and
mov
out
cmpsb
add
pop
scas
mov
out
cwtl
or
push
mov
shl
movsl
fstpt
and
mov
inc
xchg
aaa
divb
fs
inc
je
icebp
hlt
inc
inc
ja
add
test
or
sbb
and
fisttpll
out
pop
mov
inc
stos
mov
in
jne
sbb
jle
fbld
xchg
sub
dec
add
mov
hlt
in
pop
ret
cmp
aam
inc
xorb
ret
adc
test
xor
loope
outsl
rcrb
nop
jb
test
lods
fimull
sbb
std
inc
push
hlt
pushf
loop
lea
mov
mov
in
adc
fsubl
lods
cmp
cltd
sbb
decb
adc
mov
dec
jl
jns
fucomi
and
inc
movsl
test
lcall
iret
pop
mov
into
mov
push
int
lret
out
addb
fidivrl
sub
cmp
jle
jmp
pop
adc
inc
cld
xchg
push
cmp
cs
gs
sbb
xchg
jne
xor
mov
mov
popa
pushw
sbb
fcom
sub
or
out
faddl
pop
push
dec
outsb
or
xchg
mov
xor
dec
xor
loop
push
bound
in
ja
shrb
dec
in
subb
cwtl
test
sub
add
pop
sbb
inc
or
mov
in
push
fbstp
in
push
dec
popa
xchg
xchg
pusha
pop
out
mov
push
rcr
sbb
mov
xchg
and
es
or
cmp
cmp
sub
push
lret
cmc
adc
pop
pop
lods
inc
jp
loope
mov
fcomps
arpl
sub
movsl
das
popa
out
daa
jge
dec
sbb
lret
mov
aas
mov
pop
cmpsl
into
rcrb
jl
xchg
call
xchg
ret
les
mov
mov
inc
sub
mul
mov
mov
sub
sub
add
or
leave
push
shlb
mov
jne
in
popa
aam
push
nop
js
lds
fwait
jle
inc
pop
jne
mov
add
ss
push
jbe
popf
pushf
pop
xchg
call
subb
xor
cld
mov
sbb
pop
xor
sarl
mov
or
or
add
fmull
adc
jae
sub
rorl
aad
xchg
dec
sbb
adc
push
aam
outsl
test
icebp
jne
repnz
lret
dec
push
add
jbe
dec
cld
ja
hlt
aaa
fistl
outsb
and
and
mov
ret
cwtl
sbb
add
push
or
add
aad
and
push
insb
out
stos
insl
inc
ds
stos
test
pushf
sarb
in
sarb
scas
inc
sbbb
andl
push
dec
fdiv
loope
fcoms
lock
andb
cmp
cmpl
insl
push
pusha
dec
fwait
xor
sbb
scas
cmp
jp
jo
and
insb
mov
cmp
mov
call
lret
mov
inc
mov
xchg
xchg
pop
pop
sub
test
inc
inc
test
jo
add
imul
bound
rcr
and
in
push
loop
dec
addb
std
shlb
jmp
jp
inc
jge
outsl
sbb
sahf
jo
pop
mov
popf
fwait
sub
fdecstp
jno
cs
in
pop
lret
push
insb
or
mov
pop
jbe
or
mov
nop
mov
jecxz
xchg
clc
mov
fcoml
lret
push
adc
adc
arpl
or
orl
dec
sub
jbe
push
xor
xor
xchg
dec
jo
xchg
lret
movsb
cmp
stos
nop
movsb
jno
insb
xchg
dec
pop
mov
notb
icebp
stos
dec
mov
mov
iret
dec
in
test
movsl
adcb
ret
dec
and
mov
sub
pop
pop
cmpb
bound
mov
mov
loope
js
bound
int
jbe
jno
xor
pop
imul
xchg
shr
mov
mov
pop
lock
mov
or
cmp
popa
cmp
mov
pop
pushf
add
push
xor
adc
das
outsb
add
xchg
les
stos
xor
js
scas
mov
aas
loop
out
repnz
les
adc
js
add
sub
mov
in
push
pusha
add
jp
fcomp
pop
add
inc
mov
xchg
xchg
jne
lds
movsb
mov
mov
lock
test
ds
stos
xor
cld
sbb
mov
dec
xor
sbb
push
inc
scas
fsts
ds
inc
jnp
xchg
mov
iret
int
push
inc
push
or
sub
das
sahf
cmp
int3
shl
addl
dec
pop
sbb
and
cli
jnp
cmp
ds
xor
movsb
mov
stos
pop
adc
cmpsb
call
xor
cld
or
dec
push
loopne
js
adc
push
cmp
enter
fstpt
xchg
aas
sbb
add
xor
daa
scas
rcrb
mov
in
xchg
jl
mov
subb
in
cld
aad
rolb
push
mov
push
sbb
movsl
push
psubsb
add
sbb
lods
push
adc
add
push
or
cmp
xor
pop
cs
js
pusha
sub
stos
div
mov
pop
lock
mov
or
rolb
insb
scas
fstps
pop
jg
mov
push
std
mov
inc
test
dec
sub
cmp
hlt
rclb
dec
rol
and
lds
jo
jp
mov
xchg
lods
lahf
jp
dec
lahf
int
pop
pop
ret
loope
inc
adc
fiaddl
sub
movsb
jle
int3
ss
sub
lret
push
sbb
sub
jae
mov
js
xor
insb
mov
inc
jl
jmp
ja
leave
jecxz
flds
cmpsb
outsl
mov
fucomip
mov
out
loop
adc
ret
test
fstl
xchg
dec
dec
test
inc
ja
clc
adc
cwtl
movsl
loopne
psubusw
inc
mov
das
xor
mov
xor
pop
sub
fnsave
ss
mov
xchg
add
popf
and
icebp
inc
pop
loope
or
es
and
xor
or
adc
push
mov
shrl
cmp
imul
push
lods
inc
lcall
daa
lahf
les
rorb
jmp
loopne
push
mov
inc
sbb
xchg
leave
xchg
xchg
mov
mov
mov
fmulp
cmpsb
xor
pushf
ss
lods
push
add
mov
aam
cmpb
xor
mov
push
push
outsb
daa
xor
jmp
enter
scas
mov
fcom
movsl
jle
cs
and
sbb
or
loop
fstpt
pop
test
xor
or
xor
les
je
notl
or
gs
imul
push
aas
leave
mov
add
shrl
test
dec
xor
adc
aad
fdivrp
mov
test
mov
push
iret
nop
in
js
shr
push
das
jle
add
or
mov
sub
push
lcall
xchg
fcoms
cli
imul
rolb
out
and
in
sub
int
mov
push
pop
add
imul
jmp
inc
aad
adcb
pop
test
mov
push
or
jp
inc
jmp
not
lods
xchg
add
pop
ret
dec
jp
lock
dec
loope
and
das
rcrb
mov
rcrb
or
clc
jp
push
shrb
test
add
mov
and
mov
adc
xor
and
arpl
sbb
rorl
aas
mov
mov
mov
mov
mov
push
mov
push
lods
imul
cli
sub
and
push
cmp
dec
and
jb
inc
pusha
mov
and
in
out
sub
cmc
inc
lret
dec
add
xchg
scas
push
add
ds
inc
sbb
push
sti
mov
or
lret
mov
pop
iret
dec
inc
ret
or
sbb
push
movsl
ja
xchg
sarb
pop
pop
mov
fmul
jne
pop
ljmp
mov
inc
stc
inc
pop
cmp
add
jmp
inc
sbb
push
sub
inc
jne
cmpsb
adc
xor
andl
and
jb
adc
jbe
in
cmpsl
loopne
sbb
adc
mov
clc
negl
or
xor
inc
adc
add
aam
xchg
jge
sbb
lea
insl
cld
in
inc
sar
dec
clc
inc
ret
lcall
idiv
sub
jmp
fcompl
sbb
jg
out
rep
pop
sub
int
stos
bound
addr16
xor
in
sbb
enter
mov
and
pop
in
mov
nop
sahf
mov
xlat
xor
xor
incb
dec
loop
cmp
or
nop
stos
pop
push
mov
ljmp
or
or
sbb
cmp
das
loopne
test
scas
inc
push
js
sub
outsl
daa
aad
incb
sub
sarl
lcall
push
adc
stos
add
pop
test
mov
mov
cmpsl
leave
xchg
adc
repz
xchg
jo
inc
lcall
add
dec
jl
sbb
push
test
jg
pop
inc
mov
push
repz
pusha
shrl
sbbl
push
add
mov
jmp
cmc
sti
mov
lahf
push
mov
out
xor
add
mov
mov
movsl
imul
notl
fs
sbb
in
in
adc
sub
nop
aad
movsb
mov
push
mov
dec
mov
addl
popf
jne
imul
mov
pop
insb
jle
and
out
fucomip
lcall
cli
mov
negb
or
mov
icebp
adc
adc
inc
cmpsb
dec
cmp
jmp
sahf
xchg
mov
push
adc
xchg
jmp
xchg
sahf
and
and
insb
out
fsubr
mov
das
ss
mov
faddl
rep
dec
insl
out
cli
stos
es
xlat
aaa
addl
xor
sbb
dec
out
jge
icebp
xchg
adc
sbb
sub
popa
fcoml
push
cld
xchg
and
cmc
cmp
mov
sahf
or
sbb
vmread
out
mov
adc
pop
cld
shlb
fwait
xchg
mov
in
push
or
add
addr16
mov
inc
sub
push
xchg
mov
and
sub
xor
mov
mov
test
repz
daa
dec
mov
jmp
push
stc
addr16
xor
pusha
jbe
pop
data16
mov
stc
pop
pop
rolb
pop
stos
xchg
mov
inc
and
jne
mov
and
sbb
pop
clc
xor
sarl
xchg
pop
sarl
push
sbb
ret
adc
rorb
sti
fsubrs
jg
push
or
inc
push
cmp
jns
lds
cltd
inc
addr16
inc
shll
adc
cmpsb
aas
popf
pop
mov
shlb
fisttpll
adcb
or
jg
dec
xor
xor
dec
std
std
in
jnp
mov
mov
jo
mov
and
xchg
push
sbb
imul
inc
test
push
xchg
iret
cltd
lea
and
jmp
cmp
repnz
popf
add
jo
std
pop
adc
outsl
dec
bound
add
std
call
sbb
ret
add
scas
sub
fst
sub
inc
fnstsw
mov
push
insl
imul
int3
cltd
push
test
sbb
xchg
pop
cmp
push
push
xor
rolb
fldenv
insl
scas
and
push
cmp
mov
enter
lock
mov
iret
mov
int3
jo
pop
sub
adc
stos
mov
mov
pop
dec
mov
pop
subl
adc
xchg
xchg
push
ss
jle
aam
inc
sbbb
iret
aad
xchg
pop
pop
xchg
and
mov
lcall
push
sahf
jg
inc
shrl
sub
push
loope
pop
negl
ret
lcall
cmpl
mov
js
pop
cmc
sahf
shl
fs
jge
adc
sbb
test
movsl
xor
xchg
insl
push
cmp
mov
fs
or
cwtl
push
mov
out
xchg
sbb
repz
repz
pushl
pop
andb
cs
icebp
push
or
mov
push
cmp
mov
lahf
sbb
jnp
and
cmp
adc
or
xchg
adc
mov
arpl
or
data16
adc
dec
push
add
ljmp
pop
test
push
hlt
out
in
test
test
mov
cli
stc
js
xlat
outsb
adc
test
pop
lds
xchg
mov
loop
jle
test
outsb
pop
xor
xchg
mov
test
add
xor
movsb
ja
in
lock
sti
mov
inc
in
dec
push
or
inc
outsb
icebp
add
pop
and
sbb
pushf
mov
fwait
nop
lock
dec
rcll
ret
jmp
and
leave
jbe
mov
xchg
mov
cli
inc
subl
mov
lock
push
sbb
sbb
dec
pop
nop
les
mov
addr16
jl
xor
push
loop
pop
lret
loop
sbb
adc
xor
inc
out
fldenv
sub
cmpsl
aaa
ret
xchg
loope
stos
incl
add
inc
es
push
and
mov
fmuls
pop
and
loope
xor
jne
lahf
add
loopne
sbb
roll
test
test
jne
out
mov
dec
sbb
push
xchg
cmovne
cmp
xor
out
cli
ds
and
and
jb
andl
cmp
add
xchg
sarb
mov
lock
xor
outsb
sub
shrb
xor
adc
and
pop
ljmp
loopne
jno
xlat
rcrb
xchg
inc
loop
cmc
lret
or
xchg
push
aas
mov
sub
add
or
adcb
rcrl
leave
or
mov
pop
jg
jl
lea
jo
cmp
add
imul
icebp
cwtl
rclb
dec
movq
divl
mov
mov
jne
or
les
aam
dec
push
imul
mov
outsl
outsb
jp
push
sub
mov
int3
data16
pop
sub
ds
cmp
and
adc
repz
dec
jge
xchg
and
fistl
push
pop
add
bound
hlt
mov
icebp
arpl
sbb
dec
and
cs
mov
mov
cmp
lods
in
pop
or
shrl
jmp
js
or
mov
mov
add
or
mov
pop
xchg
stos
xor
and
xor
dec
loope
xor
insb
lret
lahf
xorl
adc
jbe
outsb
cmp
into
adc
sbb
cmp
jg
add
mov
cmp
mov
ljmp
cmp
xchg
inc
or
aad
mov
sahf
push
sbb
push
dec
adc
icebp
mov
push
sbb
cmp
sahf
addr16
inc
push
mov
and
jge
and
je
outsl
or
pop
xor
imul
and
sub
in
ja
add
lock
dec
mov
cs
insb
sbb
mov
stc
in
sub
pop
iret
adcb
mov
and
dec
fnstenv
push
arpl
out
test
add
es
sub
push
rolb
out
es
out
loope
jb
mov
cmpsb
or
ret
cmc
mov
or
stos
cmp
sbb
jo
movb
add
pop
xchg
aaa
mov
sub
adc
fnstsw
es
cmc
mov
cwtl
adc
fmuls
lret
push
test
lahf
mov
stos
and
push
sbb
das
adc
pop
jo
pop
fwait
adc
loopne
jle
mov
jo
int3
lock
rclb
fdivs
shll
lods
mov
sub
test
sbb
outsb
and
push
xor
gs
push
mov
out
inc
je
cmp
mov
cmp
mov
lds
push
mov
and
push
ss
pop
sub
loope
fs
enter
jge
out
mov
jle
insl
inc
push
pop
pop
icebp
pusha
out
mov
fcomip
sarb
xor
ret
iret
cwtl
sbb
fstps
mov
ret
ss
je
mov
pop
push
js
in
ds
arpl
out
ret
das
movsb
xor
icebp
ror
and
jne
fdivs
sub
hlt
aad
or
pop
xchg
push
je
fidivrs
aas
add
ficoml
in
movb
lds
fs
shrl
jge,pt
aad
add
or
pop
pop
add
pop
gs
aas
andb
cmp
xchg
pop
push
xchg
lods
or
mov
sbb
bound
xlat
pop
mov
and
sub
mov
scas
shlb
xor
sub
test
loopne
lret
sbb
cld
pop
imul
or
inc
into
movsb
adc
mov
cli
xor
xchg
inc
ljmp
idiv
inc
sbb
adc
arpl
xchg
inc
xor
mov
mov
lock
mov
jmp
or
ds
cld
addr16
dec
xor
xor
outsb
repz
jae
in
jae
mov
lods
push
test
push
jge
insb
imul
add
aas
mov
fs
and
inc
inc
nop
les
push
bound
push
aaa
lahf
push
sbb
in
das
lahf
movsb
push
jne
and
or
ds
and
test
inc
and
roll
shrb
je
cmp
push
out
sub
repz
lods
mov
cmp
insb
mov
and
out
nop
dec
rorb
movsl
sbb
push
xor
imul
inc
nop
fldenv
sbb
loop
cmpl
inc
mov
andl
inc
sub
mov
inc
inc
jp
inc
movsb
or
insb
mov
adc
mov
sahf
insb
adc
scas
data16
sub
push
in
sbb
mov
cwtl
enter
cmpb
mov
nop
test
popf
and
inc
or
xor
insl
pop
lods
aad
mov
pop
dec
hlt
pop
mov
push
ljmp
rol
inc
add
ljmp
fidivrl
sbb
lcall
aaa
jmp
lahf
jmp
aaa
pop
insb
jecxz
adc
dec
jbe
xchg
enter
movsl
jne
add
mov
sbb
outsb
int
inc
mov
outsb
add
pop
into
test
popl
push
adc
es
aad
cmpsb
nop
sub
lcall
idivb
gs
jecxz
aam
testb
ret
jmp
or
aad
or
jecxz
shll
mov
js
cld
loopne
pop
mov
pop
push
ja
cli
lret
xchg
movsb
inc
cli
insb
js
ret
sub
es
dec
sub
add
lea
inc
or
inc
adc
dec
invd
stos
inc
nop
hlt
jmp
mov
mov
lods
or
push
aad
sub
jo
ret
pop
xor
es
push
mov
mov
out
fildl
ret
mov
xor
sub
add
push
xchg
adc
pop
add
push
sub
push
sub
push
repz
pop
xor
in
cmpl
mov
add
and
xor
shlb
sbb
mov
and
push
inc
xchg
push
pushf
fs
rorb
idivb
pop
mov
sub
lods
xor
je
insb
and
jbe
dec
sbb
out
movsb
fbstp
ret
rcll
popa
adc
js
sti
jl
mov
mov
mov
ret
rclb
out
out
mov
jmp
ja
sar
fnsave
cmp
lods
mov
nop
ja
in
shll
in
test
ds
fwait
push
cmc
cmpsb
inc
lret
mov
subb
shr
rorb
in
push
pop
xchg
addr16
jb
test
sarl
adc
push
mov
xlat
or
lret
xchg
mov
dec
inc
push
jns
cli
push
pop
pop
push
jno
stc
xchg
lcall
add
les
icebp
shrl
lret
jg
push
cmp
lock
je
sub
sbb
xchg
jo
pop
movsb
cli
sahf
adc
sahf
xchg
jg
or
sub
pop
mov
cmpsl
mov
xor
arpl
mov
ljmp
lods
xlat
int3
lret
fdivrs
nop
sbb
sbb
inc
xchg
cmpsb
jp
mov
js
sub
das
dec
fnsave
jl
nop
pop
add
xor
add
lds
pop
or
dec
cli
or
testl
pop
add
call
data16
mov
cmp
adc
rorb
fsub
xchg
xor
inc
leave
adc
inc
dec
lea
fsubs
push
stos
add
or
push
cmpb
lds
add
xor
enter
xchg
in
std
jb
les
sbb
push
outsl
and
mov
ret
mov
loope
js
arpl
mov
push
mov
lods
stos
or
xor
loopne
cmp
add
or
stc
enter
mov
jmp
adc
cmp
dec
xchg
xchg
shr
lock
cmp
pop
mov
scas
mov
imul
les
out
pop
mov
call
cmp
loop
fwait
call
dec
call
ret
lret
aad
jbe
lea
enter
adcl
xchg
xchg
les
mov
sbb
cs
ficoml
mov
inc
sub
cmp
mov
cmpsb
jb
jnp
inc
test
pushl
push
add
xor
cmp
or
ss
and
inc
mov
push
lret
mov
push
aaa
xchg
xor
or
adc
rolb
outsb
rolb
stos
lea
wbinvd
aas
shrb
dec
cs
loop
rolb
jp
xor
pusha
iret
lock
sahf
out
shll
and
jl
add
pop
mov
xchg
sbb
pop
lea
dec
pop
sub
iret
inc
roll
push
or
inc
inc
xchg
mov
outsb
mov
out
daa
aas
insl
outsb
loope
shrb
mov
aas
jg
ljmp
add
xchg
jle
insb
push
cmp
mov
cld
rol
test
jb
loopne
mulb
mov
mov
xor
push
inc
repnz
push
sub
int
adc
or
cld
in
sbbl
fldcw
xor
or
es
dec
push
int3
lock
adc
add
orl
repnz
aaa
adc
cmp
ds
or
cli
testb
pop
lods
imul
dec
cmc
xchg
leave
push
repnz
cli
xchg
mov
psraw
and
das
bound
adc
sub
ds
sub
jmp
lea
inc
xchg
jle
test
mov
jle
pushl
xor
mov
loopne
sbb
pop
mov
push
dec
or
xchg
dec
inc
sub
xor
cmc
xor
jecxz
lods
fsubs
in
fs
sbb
popa
or
sbb
xlat
imul
push
popf
insb
icebp
jmp
add
or
xchg
fbld
jb
adc
add
pop
xchg
inc
insl
dec
push
inc
xchg
xchg
or
add
jmp
mov
adc
aas
dec
lret
jns
lea
shlb
push
cmpsb
nop
scas
aaa
pop
hlt
xor
hlt
dec
adc
fwait
push
lods
pop
mov
jecxz
and
lock
mov
mov
push
loopne
push
cmp
lahf
push
mov
gs
lahf
std
xchg
jmp
rolb
rcll
divb
sbb
or
ljmp
xor
xor
mov
repnz
es
adc
jae
push
roll
cli
bound
stc
aam
add
pop
mov
in
mov
push
in
jecxz
rorb
mov
xchg
mov
or
pop
hlt
add
jp
hlt
std
cwtl
push
add
scas
clc
lock
mov
lds
imul
xor
jae
jl
pop
lock
enter
pop
dec
jne
in
push
jl
test
adc
lcall
pusha
fucomi
loopne
adc
hlt
mov
or
and
sub
mov
mov
lock
push
mov
mov
adc
jne
add
sub
lcall
scas
xchg
aad
dec
add
arpl
add
hlt
loope
rclb
push
cmpsb
orb
or
push
add
add
sub
or
mov
lret
xchg
outsl
inc
xchg
push
or
nop
push
into
lds
inc
incl
lret
pop
sbb
xchg
out
scas
sbb
add
fnstcw
fstpt
mov
ljmp
outsb
push
aad
jns
or
shll
leave
jecxz
xchg
jge
stos
mov
lock
pop
stos
ljmp
cmpsl
into
add
repnz
pop
lret
cmpsl
jmp
lods
cmc
fldl
mov
iret
out
int3
xor
loope
mov
add
sbb
xlat
ret
push
mov
mov
sub
jle
xchg
fcompl
adc
scas
lea
push
sub
xor
out
in
rep
enter
add
hlt
mov
and
xchg
add
mul
add
mov
pop
dec
xchg
jle
emms
jns
dec
cwtl
jo
cmp
fxch
xor
stos
dec
cs
add
cmp
push
inc
mov
pop
mov
adc
cs
aas
push
xorl
jg
sti
cmp
rcrl
cmp
sbb
jl
insl
leave
scas
add
loope
and
mov
ljmp
clc
and
jmp
inc
cmp
xchg
push
lock
sub
mov
aad
js
mov
loopne
movsl
stos
inc
cld
mov
pop
pop
loop
jl
adc
imul
ljmp
or
mov
and
cwtl
adc
dec
mov
xor
sahf
xchg
ss
movsl
jb
movsb
sub
subl
mov
call
pusha
cmp
and
adc
pand
mov
lea
outsl
inc
lds
pushf
jmp
pushf
jl
sub
clc
inc
dec
repnz
sbb
adc
mov
nop
xchg
mov
in
das
gs
add
mov
sub
xor
pop
push
fs
lods
inc
jbe
loop
cld
fs
add
push
lods
and
mov
sub
cmp
pop
shr
or
fsubrp
lds
addb
iret
add
jp
cmp
fwait
add
pop
cmpsl
xchg
jl
inc
xchg
jecxz
xor
jmp
fcmovnbe
mov
inc
and
pop
mov
push
push
adc
mov
jmp
mov
sti
sti
xchg
cmp
dec
inc
mov
push
fisttpll
cmp
sbb
inc
call
cmp
fstpl
cmp
in
frstor
das
xor
leave
mov
imul
xchg
aaa
fiaddl
adc
roll
xor
sub
stos
push
sub
xchg
enter
sub
mov
test
bound
dec
inc
mov
in
pmuludq
pop
clc
out
int
call
clc
add
mov
ljmp
lret
inc
pop
cmp
jecxz
lods
int3
mov
mov
and
pusha
or
mov
push
outsb
mov
insl
pop
jns
jmp
mov
xor
xor
dec
inc
or
push
fsubr
push
sub
lods
xor
adc
adc
fsubrl
push
out
mov
in
inc
pusha
lcall
inc
jl
stc
test
mov
push
push
das
inc
fnstcw
dec
fildll
jno
pop
ja
pop
fldl
ds
cmp
mov
sahf
clc
test
popf
frstor
int3
das
shrl
sbb
mov
arpl
addl
cwtl
cmp
outsl
inc
repz
xor
cld
outsl
addr16
xor
push
xor
mov
mov
out
lock
pop
hlt
ret
push
ja
add
jle
mov
mov
and
cmp
jl
lock
inc
lods
icebp
and
mov
clc
xor
es
mov
mov
cmp
test
and
or
jbe
mov
ljmp
mov
jb
sbb
adc
adc
xor
sub
nop
sbb
stos
dec
fadd
and
cli
addl
xchg
push
sarb
push
adc
lcall
lods
xchg
mov
pop
out
jno
in
or
test
mov
outsb
or
repnz
enter
test
or
aam
and
mov
lods
rol
xor
fs
stc
fadds
or
push
loope
adc
andb
cmpsb
cmpsl
in
inc
std
fcmovnbe
into
bnd
daa
ror
fwait
outsb
in
xchg
insb
andb
add
dec
jmp
lea
add
inc
mov
adc
push
std
shl
loop,pt
ljmp
int3
hlt
fs
xchg
ror
mov
cli
enter
push
add
mov
repz
and
xchg
pop
add
lahf
in
idiv
or
in
stc
lock
lods
clc
jge
ret
push
and
cmp
jbe
mov
js
fcomip
ss
push
mov
imul
pop
enter
pusha
cmp
sti
cmp
aam
pop
rcl
shl
sub
dec
ds
out
imul
out
pop
cwtl
inc
js
lret
and
fwait
or
pop
and
fsubl
sbb
aaa
inc
loop
mov
push
bsf
xor
inc
adc
pop
sub
clc
or
nop
mov
insl
add
aad
dec
movsl
es
cwtl
or
mov
xor
fsubrl
gs
or
xor
or
xor
dec
stos
mov
enter
add
mov
jle
jge
lea
jge
mov
adc
pop
test
sub
rolb
es
lods
subl
mov
push
in
rcll
scas
into
int3
addb
adc
and
cmp
push
mov
mov
xchg
add
mov
and
mov
add
lds
mov
stos
cmp
jl
add
or
mov
cmp
lahf
pushf
inc
stc
cli
and
enter
mov
lock
pop
repz
push
mov
addr16
stos
cmpl
sub
jns
ds
std
ds
sbb
sub
push
das
sbb
xorb
nop
inc
imul
dec
pop
cli
mov
add
fcompp
ret
add
jno
and
sahf
popa
pop
loopne
scas
cli
inc
xchg
nop
mov
push
lock
iret
add
mov
out
pop
jo
std
call
lahf
add
or
movsl
cli
sarb
push
mov
adc
mov
faddl
rcrb
cmp
push
ret
es
inc
inc
pop
pop
shrb
icebp
lcall
adc
mov
mov
inc
push
sub
lret
aad
movsb
insb
xor
push
sbb
jnp
mov
rol
scas
imul
inc
pop
sbb
pop
fstps
pushl
test
sti
and
push
andb
clc
dec
jecxz
orl
call
jo
inc
xor
or
mov
cmc
mov
or
into
add
push
test
push
js
jo
pop
lret
sahf
fdivrl
add
jb
push
or
pop
fs
data16
pop
adc
mov
add
and
xchg
inc
out
loopne
jmp
outsb
movsb
fildll
and
ja
insb
cmp
loop
mov
add
dec
les
jmp
add
loopne
sbb
mov
bound
hlt
adc
mov
ret
mov
lahf
add
add
push
dec
or
or
inc
mov
loopne
inc
les
jo
sbb
or
and
sahf
push
filds
les
add
test
xorb
pusha
and
negb
fistpl
fisubl
jp
or
movsb
lahf
mov
int
push
sbb
int3
dec
dec
inc
cld
dec
cmp
jno
in
shlb
out
inc
pusha
in
loop
dec
jge
cmp
outsl
clc
jg
cmp
ljmp
call
jns
or
jb
adc
arpl
mov
mov
and
adc
sub
in
rclb
mov
stos
hlt
mov
cld
sub
movb
inc
or
movsb
hlt
push
lods
ss
in
fstps
sub
leave
pop
jns
adc
test
add
sub
mov
dec
push
bound
xor
std
or
imul
clc
dec
lahf
xchg
call
adc
add
mov
das
mov
mov
sahf
push
sbb
jno
add
sbb
rolb
rolb
cmp
inc
pop
or
fimull
mov
cmp
and
inc
gs
cmp
jp
addr16
xchg
mov
dec
loopne
add
sbb
fwait
mov
dec
rorl
jbe
sarb
jnp
sub
push
push
add
xchg
lds
add
mov
inc
inc
bound
ljmp
sbb
push
mov
sbb
add
xor
or
jbe
add
cltd
cmp
mov
stos
inc
push
cld
sahf
sub
or
mov
push
clc
adc
cld
test
push
insb
pop
icebp
xchg
mov
xor
lock
mov
fucomi
inc
mov
jecxz
push
xchg
adc
test
cmp
xchg
call
shrl
dec
xor
pop
push
imul
or
insb
or
loope
add
or
mov
loope
xor
and
pop
or
pop
icebp
nop
inc
test
and
pop
inc
jecxz
xchg
inc
lods
mov
insb
aas
popa
mov
aam
add
mov
pop
mov
mov
dec
add
xchg
ja
ds
movsl
mov
pop
repz
jo
jno
xor
hlt
xor
sar
mov
in
daa
mov
and
pop
notb
les
sub
enter
in
out
rorb
aas
js
mov
ljmp
or
jae
call
bt
add
ret
xchg
push
jl
outsl
cli
mov
insb
subl
lret
cs
out
inc
mov
test
and
shl
hlt
mov
lods
cmp
imul
push
jmp
in
arpl
mov
or
popa
gs
sbb
ds
cmp
add
adc
xor
sub
jge
lahf
mov
movsb
rcll
mov
mov
into
addl
push
insl
xchg
insb
clc
test
icebp
inc
ss
dec
push
hlt
xchg
movsl
xchg
or
adc
icebp
push
fnsave
incb
hlt
bound
sbb
push
shlb
dec
mov
arpl
aas
xor
in
ss
out
ljmp
or
es
mov
xchg
jecxz
aad
mov
fcompp
jae
push
xor
jl
js
ror
aad
mov
pop
pmaxsw
and
movsb
mov
inc
ss
mov
cli
lock
out
bound
test
aaa
lds
add
pop
ljmp
add
call
test
pop
adc
xor
mov
inc
dec
jge
mov
mov
mov
cmpsb
cmp
add
lods
pop
dec
pop
pusha
mov
adc
mov
hlt
push
cwtl
add
sahf
aaa
jmp
sub
ds
add
xchg
lock
mov
fmull
push
jne
and
cs
cmp
jmp
sub
sarl
or
pop
jmp
jg
cli
inc
push
dec
pop
ds
dec
clc
cmpsl
rclb
and
push
adc
pop
pop
loopne
mov
out
adc
sbb
and
cmp
push
push
add
sbb
sub
adc
sub
mov
dec
into
cmp
and
fsubl
aad
popf
push
dec
ret
cmpsb
lock
stos
clc
cmp
dec
imul
aam
mov
pop
cli
shlb
scas
pop
fcmovnbe
inc
rcrl
mov
xchg
xchg
lock
dec
push
xchg
mov
clc
mov
pop
pop
push
seto
cmp
lock
sub
cmc
sub
xor
and
pop
mov
movsl
xor
lea
rclb
jo
or
or
mov
enter
pop
cmp
pop
inc
jl
cmp
pop
lret
nop
push
cmp
dec
cmpsl
rolb
loopne
ljmp
imul
addr16
jbe
dec
adc
mov
push
jnp
dec
je
lds
adc
cmp
sbb
flds
daa
dec
fistl
and
add
mov
aam
mov
adc
call
adc
pusha
loopne
mov
jbe
pop
xor
loope
add
cmp
mov
pusha
dec
inc
xlat
mov
pop
dec
gs
test
in
bound
aam
pop
mov
arpl
and
outsb
iret
mov
sahf
insl
add
cmp
test
sbb
xchg
push
sub
add
mov
push
lds
cwtl
jnp
dec
fsub
push
mov
mov
in
bound
enter
inc
sbb
outsl
jmp
hlt
aaa
ss
sub
mov
xor
jb
push
xorl
mov
add
ret
imul
sub
add
push
fisubrs
gs
jg
lods
add
mov
pop
adc
js
adc
push
sti
adc
mov
lret
inc
mov
jne
fs
sub
shl
test
xor
lret
jno
pop
call
push
jne
mov
add
mov
push
stc
dec
mov
mov
cmpsb
mov
aaa
jge
fs
mov
pop
je
sarb
and
cmp
push
lret
js
loopne
mov
and
scas
jle
push
ljmp
push
push
xor
mov
dec
or
das
jle
and
sahf
sbb
inc
jbe
push
sarl
mov
pop
inc
fs
push
enter
mov
add
cs
ret
repz
mov
pusha
xchg
fcomp
push
xchg
incb
mov
mov
pop
fcmovu
bnd
jecxz
out
addl
mov
insb
clc
pusha
or
rol
push
cld
rolb
ljmp
xor
pop
mov
dec
cmp
inc
ret
sbb
sbb
and
test
pop
xor
mov
xchg
loop
cmp
and
jno
inc
xlat
or
push
inc
fiadds
xlat
int3
mov
int3
or
test
inc
add
mov
mov
pop
js,pn
mov
leave
loop
pusha
adc
lock
outsb
rcrb
push
inc
lahf
js
mov
push
out
decb
xorb
enter
test
add
fiaddl
inc
hlt
add
cli
and
inc
jp
or
mov
mov
out
shlb
inc
adc
mov
mov
scas
sub
mov
pop
cltd
mov
clc
pop
mov
adc
mov
cmp
scas
loop
jle
data16
hlt
push
or
aam
shlb
jb
dec
loopne
lods
xor
sbb
negb
mov
sysexit
jecxz
adcb
dec
cmp
fdivrs
mov
movsl
cmc
je
leave
and
out
les
jb
inc
or
push
or
lcall
mov
mov
adcl
decb
inc
popa
mov
jl
cmpsb
es
cmp
jo
jnp
mov
inc
sahf
rclb
mov
icebp
iret
jp
cmc
adc
mov
adc
inc
aad
add
fs
xchg
loop
add
or
or
ficomps
fldt
in
xor
lahf
fs
or
icebp
popa
or
jle
rol
mov
and
cltd
adc
in
cmp
fs
loopne
jbe
adc
xor
pop
jbe
mov
data16
cmp
mov
popa
push
mov
roll
cs
outsl
or
or
insb
sti
jge
int
push
ljmp
adc
ret
and
mov
movsl
fmuls
xlat
movsl
push
nop
dec
andl
loope
mov
adc
shll
mov
add
push
nop
or
mov
inc
orl
popa
in
and
jg
mov
icebp
subb
imul
push
test
bound
es
fwait
xchg
cld
mov
xorb
dec
jne
out
sbb
add
flds
or
cmpsb
push
pop
push
sbb
das
push
pop
or
loop
daa
jecxz
cmpl
adc
jo
jnp
ss
sbb
js,pn
sub
mov
je
mov
xchg
pop
rol
imulb
xor
push
and
cltd
cwtl
fdivs
fsub
cltd
add
loopne
mov
push
sbb
push
xor
hlt
xor
mov
inc
and
mov
push
push
push
dec
mov
xchg
stos
fadd
sarb
push
inc
xchg
ss
es
popa
mov
loope
cli
and
inc
jae
xchg
mov
mov
inc
mov
or
outsb
ror
xor
sub
or
xor
lea
dec
mov
cmp
fidivs
inc
cmp
sub
cltd
pop
push
mov
cmp
gs
nop
mov
ficoms
icebp
les
andl
pop
idivb
sub
cmpb
fcmove
movsb
push
inc
sbb
add
cmp
repnz
mov
ficompl
lahf
pop
movsb
or
mov
mov
xchg
arpl
test
push
xchg
xchg
mov
mov
jmp
imul
fisubrs
xchg
mov
aaa
movsb
cmpsb
jge
or
lahf
push
pop
outsl
clc
dec
or
mov
mov
js
ss
dec
imul
push
outsb
sarw
stos
subl
cli
jo
outsb
or
sub
dec
mov
add
jnp
pop
pop
mov
pop
pusha
push
das
push
insl
xor
stc
inc
mov
test
inc
psubsb
and
in
xchg
fsub
outsb
pop
daa
cmp
mov
fsubrp
fwait
jle
push
mov
jl
loop
ja
nop
xor
adc
loopne
adc
popa
test
std
mov
aad
mov
cs
dec
subb
cmp
push
cli
outsl
mov
in
pop
std
pusha
mov
jg
xchg
pop
bound
stos
ss
dec
fld
or
jnp
fs
push
ror
adcl
mov
fwait
add
pop
push
and
outsl
mov
fmulp
dec
jne
cmp
bnd
nop
add
inc
movlps
lock
cmpsl
sti
mov
xor
adc
adc
adc
imul
aam
ret
mov
loopne
cmpl
aas
outsl
aam
mov
cs
and
mov
mov
add
repnz
adc
jg
cmc
sarl
and
jno
out
addr16
bswap
aad
push
mov
push
or
pop
push
pop
jecxz
mov
cmp
inc
sub
mov
add
lea
adc
in
adc
mov
insb
fiadds
mov
mov
and
or
and
jbe
mov
lret
mov
mov
inc
loopne
int3
and
scas
xor
loopne
mov
mov
repz
fisttps
inc
xchg
lahf
mov
mov
sti
or
inc
lcall
dec
cltd
sub
sti
inc
sbb
cmp
pop
pop
test
rcrl
cmp
xchg
xchg
ficomps
jmp
shll
shll
repnz
jle
orb
data16
mov
into
pusha
add
xor
enter
and
insl
data16
test
inc
bound
leave
mov
pop
rcrb
dec
mov
pop
pop
mov
jb
add
mov
test
lcall
mov
mov
cs
ret
mov
test
adc
mov
add
and
jo
mov
adc
lahf
hlt
and
add
orl
imul
mov
ss
add
or
mov
xchg
jecxz
movsb
cli
sahf
sbb
and
dec
add
inc
dec
dec
jecxz
movsb
push
sbb
dec
fcomps
jo
push
cltd
jp
sbb
xor
adc
in
into
sarl
test
sarb
push
lods
nop
fcoms
and
mov
outsb
xlat
je
mov
mov
es
popf
jae
dec
int
xchg
mov
add
loope,pn
or
pop
stos
test
cmp
or
xlat
mov
mov
mov
xchg
inc
inc
inc
add
or
sub
push
lret
xor
add
inc
adc
jle
dec
mov
iret
rclb
pop
sbb
mov
xchg
aam
pushl
cmpsb
fsubrs
xchg
xor
stc
or
or
pop
aas
cmp
xor
dec
add
pop
sbb
xchg
sub
scas
addr16
iret
jp
arpl
je
lea
adc
sbb
inc
gs
ja
mov
loop
loopne
inc
dec
imul
mov
pop
jp
lcall
or
fisubl
arpl
push
clc
pusha
xchg
lds
dec
loope
pop
popf
lods
push
mov
xchg
sahf
xchg
sub
pop
addl
mov
ret
rolb
cwtl
out
inc
xadd
into
stos
mov
push
jae
push
dec
inc
scas
or
lret
out
pop
sbb
lods
push
adc
ljmp
leave
addl
lods
clc
pop
pop
dec
cmp
iret
pop
cmp
rcll
pop
mov
ja
adc
push
insb
mov
cld
sbb
je
sarl
out
jecxz
rcll
js
xor
or
xor
out
mov
sahf
push
pop
sub
xchg
in
xor
dec
fistl
mov
fbstp
add
mov
add
shrl
dec
jp
lock
shll
leave
stos
pushf
ljmp
cmp
cmp
sub
xchg
loope
adc
xchg
and
inc
jl
inc
es
and
out
and
scas
jl
insl
push
movsb
mov
insl
inc
arpl
add
in
dec
cld
pop
jle
adc
subl
jmp
dec
stc
add
outsl
and
inc
mov
sub
je
dec
sub
lret
lock
arpl
sbb
and
xchg
mov
inc
lcall
sub
push
lea
adc
dec
inc
pop
sub
and
sbb
ss
gs
or
sbb
cli
mov
pop
xlat
dec
push
sti
mov
mov
jp
push
enter
nop
test
mov
aad
pop
out
fucomi
sbbb
jmp
hlt
inc
xchg
dec
jae
and
sbb
push
outsb
adcl
sbb
dec
xor
cmp
inc
stos
mov
popf
push
imul
xchg
js
ds
sbb
cld
pop
adc
js
push
add
pop
popf
lods
sbb
ja
sbb
adcl
loopne
ss
lcall
in
repnz
sub
stos
inc
sbb
nop
sub
add
loopne
jo
inc
sbb
filds
jbe
testl
xchg
adc
daa
dec
aas
mov
push
push
sbb
inc
movsb
inc
sahf
or
add
insb
fdivs
sahf
adc
popf
fisubrl
mov
ds
in
sbbl
adc
jge
cltd
loopne
dec
add
mov
push
shrb
sbb
push
inc
aad
pop
aad
mov
mov
mov
mov
aaa
cmp
aam
clc
dec
jo
dec
xlat
jae
loop
xorb
cmp
mov
xchg
sub
add
je
cmp
mov
sbb
lret
movsl
or
mov
mov
xchg
or
std
xlat
lods
cmp
loope
pop
fcoml
xlat
add
pop
jne
cs
lods
lods
xor
xchg
lock
pop
cs
stos
and
addr16
shlb
and
mov
inc
or
lods
sbb
add
out
xchg
sub
mov
mov
lods
mov
loopne
or
pop
jo
das
adc
xchg
pop
aam
xlat
mov
dec
pop
xchg
push
push
fistl
popa
or
push
out
lret
pop
aas
xor
push
mov
sbb
cmp
xchg
sbb
push
out
or
push
xchg
jecxz
pop
jb
ds
push
jge
test
pop
sub
movsb
xchg
ficoml
cld
rclb
mov
dec
scas
and
pop
lods
out
rolb
xchg
fsub
movb
call
sub
pop
popf
jbe
nop
cld
inc
xor
push
mov
sub
mov
push
leave
push
clc
adc
sub
jmp
mov
out
fistpl
inc
add
pop
aaa
call
cmp
ss
ja
cmp
fadds
push
adc
stos
mov
jbe
push
cmp
repnz
leave
push
subb
mov
sub
pop
shrl
js
xor
repz
fisubrl
push
aad
adc
dec
xor
push
lock
push
lods
je
cli
mov
push
inc
movl
popa
aad
adc
cmpb
shlb
loop
repz
in
mov
nop
adc
aad
add
addb
mov
fwait
aas
out
jmp
sbb
notl
stc
popf
sahf
pushf
icebp
scas
sbbb
mov
pop
push
sbb
rcll
hlt
clc
sub
repnz
sahf
mov
loopne
cmp
xchg
and
sbb
pop
fimull
pop
add
sub
cmp
add
mov
pop
sbb
sbbl
in
aad
push
cs
mov
ja
test
cmp
adcb
pushf
in
pop
nop
lcall
shl
pushf
or
xor
lock
leave
aad
dec
shl
sahf
push
mov
sbb
rcll
dec
cs
sub
mov
pusha
push
fildl
imul
ljmp
push
jg
lea
lock
pop
xchg
cmp
xchg
adc
mov
xchg
jecxz
inc
gs
mov
xlat
cltd
mov
enter
mov
lret
subb
cmp
orl
aaa
xchg
dec
call
dec
ret
aad
loopne
daa
lods
xchg
mov
mov
xlat
add
cmp
gs
movsl
lds
les
add
nop
cs
or
add
lret
jnp
inc
dec
sti
mov
inc
testl
push
iret
cwtl
jmp
test
xchg
out
ljmp
add
gs
mov
daa
lea
cwtl
scas
sbb
jp
std
mov
pop
cwtl
sbb
sbb
dec
pusha
cs
imul
mov
inc
call
movsl
and
fstpt
dec
add
jo
shlb
rcl
cmpsb
sub
in
dec
mov
push
fstpt
enter
mov
aam
inc
mov
adc
mov
sbb
dec
and
xchg
loop
std
cmp
xorb
cmp
ret
movsb
shl
out
or
loope
adc
ficompl
repnz
and
mov
push
fwait
cld
push
idivl
and
test
jmp
mov
cltd
cmc
mov
es
mov
mov
loopne
mov
daa
inc
pop
je
mov
xchg
jae
xor
mov
and
andl
pop
add
cmp
or
and
mov
enter
rclb
and
pop
pop
enter
pop
pop
xchg
stos
add
xlat
push
push
pop
push
mov
or
add
les
xor
mov
out
fmuls
sbb
mov
or
push
add
mov
fnsave
push
bound
and
jle
rcl
paddw
or
pop
mov
cmp
cmpsb
lea
adc
adc
movsb
fmull
inc
mov
xchg
adc
mov
sbbb
fidivl
push
jg
jnp
pop
xor
pop
je
in
jle
mov
sahf
add
pop
sarb
pop
mov
jmp
or
cmovne
lods
das
sub
add
cmp
shll
lahf
lea
ja
subl
int3
mov
icebp
cltd
push
neg
push
cmp
lea
stos
cmpsb
mov
adc
stos
ret
pop
out
xor
rolb
shll
dec
out
hlt
mov
add
sub
jo
lods
lock
popf
jns
jo
out
mov
and
orl
mov
add
mov
xor
pop
jp
sbb
je
test
out
xor
inc
les
sbb
xchg
sub
fbstp
xchg
add
rcl
xchg
sbbl
dec
rcrb
adc
add
arpl
inc
lods
cmp
add
cmp
das
mov
add
negb
lahf
or
inc
adc
in
rorl
xchg
fmuls
adcb
shr
adc
cmp
ret
pop
fldenv
push
insl
ljmp
sar
dec
js
push
dec
sbb
cmp
adc
sarl
cmp
in
add
lods
aaa
or
mov
mov
mov
test
sarb
inc
ret
mov
add
jg
xchg
ficoms
outsl
xor
push
xor
movsl
adc
cltd
stos
xor
dec
inc
fxsave
test
xchg
sbb
xlat
mov
fnstsw
stos
rorl
pusha
adc
fucomi
popa
jge
sahf
add
adc
rolb
andl
push
mov
inc
mov
xchg
push
rcl
dec
push
jne
imul
jl
pop
mov
dec
sbb
fsub
adc
bound
daa
int3
lret
imul
clc
add
adc
mov
mov
sub
shlb
or
add
add
sub
or
andb
nop
adc
fwait
arpl
adc
adcb
push
sub
mov
adc
pop
out
mov
or
jbe
fs
pop
pop
test
stos
push
xor
in
mov
rorb
xor
dec
jl
adcl
call
popa
dec
iret
adc
inc
adc
arpl
pushf
push
loopne
stos
mov
cltd
loope
and
fwait
popa
pusha
aaa
add
push
into
fwait
sub
xchg
fisubrl
std
mov
xchg
ss
cs
and
pop
enter
fmull
jp
lds
inc
ljmp
call
movsb
loope
hlt
mov
sub
xchg
inc
or
movsb
fs
dec
pop
pop
pop
inc
bound
lahf
mov
or
insb
andb
bound
enter
pop
sbb
lahf
cltd
jo
inc
insb
xchg
loop
jl
cmp
fimuls
xchg
cmpsl
mov
xchg
or
mov
out
adc
mov
lret
xchg
sbb
hlt
cli
outsb
fiaddl
push
negb
rcrl
popf
ficompl
shr
adc
lock
stos
int
pop
xchg
out
mov
mov
xchg
push
sbb
cld
lahf
addb
or
mov
nop
shrb
pop
cwtl
push
adc
inc
xadd
es
sarb
scas
movb
mov
arpl
cmpsb
push
pop
sub
fdivrp
mov
scas
shll
je
add
lea
ss
stos
call
lock
mov
rorb
je
daa
test
pop
pop
loope
mov
frstor
stos
pop
sti
xor
xor
mov
inc
cmp
fwait
lea
lret
mov
pop
hlt
fs
imul
push
out
pop
jns
mov
pushl
add
bound
pop
stos
shl
dec
fcmovne
sub
negl
icebp
int
add
mov
cmpsb
mov
inc
in
sbb
push
das
adc
test
nop
jecxz
inc
icebp
jecxz
cld
add
jmp
xchg
pop
xor
mov
loopne
push
jb
xor
in
lahf
jb
adc
jg
popa
call
shl
xor
lcall
xchg
and
adc
ret
and
loope
out
fstpl
mov
xchg
movsb
mov
into
mov
out
sbb
sahf
sahf
enter
dec
lahf
push
mov
add
icebp
loopne
mov
cs
inc
cmpsb
mov
adc
in
inc
mov
aad
stos
out
adc
mov
adc
divl
cmp
dec
inc
lds
mov
outsb
dec
je
xlat
xor
test
call
push
or
scas
mov
rclb
dec
mov
add
xor
jae
inc
dec
xchg
sub
add
dec
into
test
sbb
push
int3
or
test
xchg
pop
sbb
jl
pop
popa
push
test
jbe
cmp
jl
movsl
inc
dec
jne
fidivs
inc
mov
add
cmp
sahf
cmc
in
outsb
jne
push
and
mov
sti
mov
ljmp
pushf
lea
xor
push
in
nop
rcrl
push
insb
sarl
js
mov
inc
inc
fildl
cmp
mov
mov
mov
hlt
cli
int
jle
pop
rcrb
vmovupd
stc
test
aaa
data16
jns
loope,pt
push
mov
into
inc
push
lock
clc
add
pop
cmp
adc
pop
cld
jl
cmp
cmc
dec
rolb
imul
jmp
inc
pushf
inc
adc
mov
pop
jecxz
pop
adc
inc
mov
aam
inc
out
sbb
sbb
push
cmp
push
mov
jno
or
cli
mov
xchg
nop
mov
or
push
adc
out
fdiv
xor
push
and
mov
int
repnz
popf
add
adc
add
cmp
test
iret
inc
mov
js
je
pop
ds
incl
popf
movb
jns
mov
cmpsb
lea
fs
cwtl
inc
test
mov
mov
mov
adc
mov
cwtl
mov
test
sbb
and
pop
cmp
ds
push
insl
out
test
lret
sbb
out
or
test
dec
xchg
pop
xchg
ret
dec
stos
xchg
add
bswap
sahf
leave
xor
add
jl
cmpsb
inc
sahf
lret
push
xor
js
or
sbb
fnstsw
xor
rorb
shlb
out
add
fdivrl
ret
je
loope
sub
pusha
test
inc
adc
cld
mov
adc
pop
incb
add
or
dec
pop
sub
mov
sub
call
sbb
fistpl
mov
pop
out
adcl
jae
push
adc
cmpsl
cli
mov
add
sbb
mov
das
mov
sub
jb
adc
scas
icebp
and
jae
jg
dec
pop
mov
jl
push
daa
pop
pop
enter
dec
outsl
xor
sbb
ja
adc
xor
push
and
lret
call
ja
xor
mov
and
mov
subb
or
nop
and
add
cmc
loopne
in
push
inc
jg
jg
mov
mov
xor
inc
enter
pop
jmp
ss
dec
sub
call
jle
addr16
iret
dec
lock
jle
sbb
outsl
push
inc
sbb
adc
inc
push
fwait
imul
xchg
mov
bound
fiaddl
sbb
and
pop
pop
mov
lret
cwtl
push
xor
out
cmp
mov
add
push
stos
push
push
fiadds
xchg
xor
lock
cld
xchg
pop
adcl
jge
fdivrl
inc
adc
les
dec
add
mov
rcrl
andb
lock
adc
mov
rorb
add
pop
je
mov
pushf
sbb
add
mov
jge
jnp
xchg
adc
mov
fcoms
popa
add
movl
xlat
outsl
fcmove
mov
sar
mov
sti
rcll
out
add
jle
das
aaa
aas
pop
mov
dec
adc
addb
out
sbb
xchg
imul
add
or
adc
je
rol
ficoms
shlb
sti
mov
mov
mov
mov
jo
pop
lahf
mov
or
fistps
adc
shl
mov
push
sbb
pop
sahf
clc
mov
ss
pop
movsl
shl
pop
add
or
outsl
push
mov
add
or
cmp
sbb
jae
pop
cmp
ret
mov
push
cmp
subb
cmc
addl
popf
jmp
loop
aas
frstor
cmpsb
mov
in
cmc
hlt
jmp
pop
stos
mov
sbb
loopne
sub
mov
pop
mov
jbe
movsl
push
test
and
jle
sahf
push
adc
or
cmpsl
loop
bound
aas
add
or
add
out
add
push
lea
and
sub
dec
scas
jmp
pusha
fsub
lods
imul
pop
stc
leave
mov
shr
out
xchg
les
push
rorb
mov
int
pop
pop
add
clc
add
sub
add
add
aaa
xlat
outsb
fstp
jno
fsubrs
mov
ss
or
pop
call
addr16
push
jg
cmp
test
xor
mov
add
repz
push
aaa
das
push
pusha
xchg
mov
xlat
add
sahf
mov
les
add
shrb
or
das
into
sbb
mov
xchg
fdivp
or
add
mov
hlt
add
adc
jle
inc
iret
dec
xchg
cmp
jae
sub
cwtl
push
xchg
sub
sub
ja
daa
mov
js
and
mov
push
push
adc
and
mov
adc
xchg
ret
sbb
pop
lock
test
lret
inc
mov
aam
jns
sub
ret
push
jmp
mov
loop
aas
lock
and
dec
lock
mov
rcrb
scas
inc
rclb
repz
pusha
mov
cmpsb
jg
or
jg
jp
cli
pop
xchg
jnp
dec
aaa
in
pop
movsl
movsb
push
lods
fdiv
frstor
and
jne
mov
or
flds
rcrb
aaa
popf
fwait
aas
imul
fmul
movsl
shlb
mov
ret
lods
pop
inc
adc
cli
sbb
ljmp
fsub
or
inc
mov
inc
sub
negl
jle
sahf
adc
sbb
mov
fwait
cmp
mov
sbb
sub
sub
das
cmpsl
leave
in
lahf
sahf
fwait
test
cmp
js
icebp
call
divl
lahf
xchg
mov
sub
outsl
pop
sub
fwait
js
mov
mov
pop
jmp
repnz
sti
imul
sbb
daa
pop
insb
add
rcll
fldcw
test
push
ss
daa
push
mov
mov
fmull
mov
add
jl
sahf
xchg
scas
addl
ret
pop
dec
xchg
adc
ret
addr16
rcrb
dec
mov
xlat
push
imul
fiaddl
outsl
stc
sbb
dec
lods
push
jge
mov
cmpsb
lods
loope
jb
xchg
in
aaa
sub
stos
add
clc
jb
push
fsubr
lahf
inc
pop
jge
inc
jecxz
sub
mov
psubb
pop
pop
lret
jle
popa
mov
jp
sahf
dec
jp
and
or
addr16
jb
ljmp
xchg
clc
cmp
sub
xor
js
pop
hlt
push
js
xor
cld
push
mov
out
fsubrs
push
enter
les
sbb
or
or
cs
aad
imul
cmp
nop
outsb
div
push
neg
mov
shlb
and
pushf
rcll
add
loopne
pop
addl
lea
jae
arpl
fisttpl
dec
push
mov
sbb
mov
and
bound
lds
add
ret
xchg
cmpsb
ret
test
into
cmc
add
sub
and
push
jbe
call
sub
daa
sahf
incl
pusha
outsb
pop
test
cli
add
mov
adc
das
mov
aam
jns
pop
in
mov
in
ficomps
jno
lahf
mov
andl
iret
pop
pop
xchg
jne
mov
fbld
mov
sub
mov
cmp
ljmp
out
add
dec
fs
add
jnp
lea
fimuls
fsts
jo
cld
sarl
call
imul
push
js
mov
or
jne
jl
jg
push
or
ljmp
lea
jp
test
rol
xchg
xor
add
mov
out
pop
jo
mov
xor
pop
pop
xchg
loope
add
fisubrl
cmpsl
jle
sbb
hlt
adc
jg
and
mov
inc
sahf
pop
mov
shlb
in
add
add
adc
testb
dec
jg
sbb
push
and
scas
add
xchg
pop
sbb
cwtl
mov
push
jp
sbb
push
adc
adc
sub
int
mov
mov
add
jne
or
adc
or
jo
out
pusha
inc
in
test
out
jle
test
dec
das
jge
in
sarl
scas
dec
dec
pop
seto
popa
add
mov
xchg
outsl
push
mov
cmp
ret
sub
jmp
loopne
xor
cs
sahf
inc
sbb
and
imul
cmp
lret
test
mov
aas
inc
mov
sub
cmp
and
pop
loopne
std
sbb
push
out
cwtl
in
aad
hlt
mov
clc
addb
jge
jne
add
push
rolb
jb
into
inc
js
jge
hlt
adc
clc
jg
loop
inc
inc
add
sbb
adc
je
push
loopne
cltd
push
mov
xchg
xchg
jno
push
inc
movups
jo
cmpl
or
adc
cs
sbb
and
or
xchg
adc
insl
sub
sbb
mov
pusha
push
sbb
ljmp
loopne
adc
idivl
rorb
mov
and
ret
aaa
xchg
sub
jns
je
out
int
cs
int3
sbb
js
xchg
push
cmpw
xor
jmp
repnz
dec
test
nop
ds
ljmp
div
shll
rol
cmp
cmpsl
push
pop
mov
mov
scas
add
aam
fistpll
add
mov
dec
rclb
mov
pusha
not
dec
lods
pop
into
std
adc
lock
ret
mov
adcl
dec
add
popl
sbb
xchg
dec
dec
sbbb
ljmp
and
cmpsl
jle
and
dec
jp
enter
sbb
inc
adc
sub
adc
sub
push
stc
sbb
mov
popa
aas
cmpsl
mov
popa
xchg
or
jnp
fiadds
roll
add
add
mov
fsubr
and
imul
js
mov
popa
orl
add
fildl
or
ljmp
adc
push
sbbb
jmp
ret
ret
inc
pop
lret
mov
data16
lahf
mov
pop
inc
scas
scas
add
rorl
push
cwtl
sub
xchg
scas
cmpsb
adcb
or
in
add
adc
add
inc
inc
fiadds
adc
cwtl
jo
sbb
mov
push
ror
loopew
jg
inc
sub
aas
and
out
mov
ss
lcall
popa
loope
or
shll
jbe
pop
mov
cmp
dec
jne
fists
jl
sbb
cli
push
push
or
lock
fs
mov
sub
pop
adc
and
inc
cli
scas
movsb
push
push
xor
or
lahf
dec
dec
shrb
adc
fimull
into
lret
mov
cmpb
lock
int
cs
icebp
jle
dec
mov
mov
pop
jno
mov
call
fwait
rol
push
or
xor
sbbb
sub
add
or
jl
in
scas
add
sub
xor
ds
test
mov
idivb
dec
pushf
stos
cmp
xchg
push
or
mov
cmp
nop
push
adc
hlt
mov
push
add
cmpsb
cmc
jnp
sbb
stos
insb
adc
scas
jmp
incl
sbb
mov
je
roll
mov
loopne
pushl
loopne
cmp
psadbw
shlb
jp
jo
or
sbb
cli
mov
pop
divb
push
cmp
shlb
popa
jmp
cmpsb
add
bound
fidivs
ss
dec
fnsave
enter
loopne
push
test
cmpsb
mov
das
je
push
test
adc
lock
cmp
jno
ficoml
cld
xlat
lods
shrl
cmp
cmp
add
cmp
fstpt
aam
hlt
daa
movsl
les
lods
adc
and
test
les
xchg
das
jmp
fwait
test
test
loop
and
cmp
ljmp
call
call
lock
orb
sbb
shl
scas
adcl
test
sub
push
imulb
mov
insb
lock
ljmp
or
push
lds
cmp
push
pop
adc
lret
cld
mov
das
add
fbld
push
push
iretw
in
inc
pop
outsl
inc
jo
addr16
push
mov
jbe
xor
js
aas
mov
punpcklwd
stos
fisubs
mov
ret
imul
hlt
ud2
sbb
cmc
add
ficoml
jo
dec
mov
data16
daa
or
lcall
dec
mov
jle
fsubrs
std
pusha
adc
pushf
popf
jg
nop
sbb
leave
test
add
push
push
ss
arpl
ret
mov
aam
adc
pop
mov
lcall
fdivs
adc
loop
sbb
jne
inc
nop
xchg
add
outsb
sub
mov
je
and
cli
test
and
inc
dec
inc
jmp
jle
or
adc
xchg
sbb
mov
xchg
aam
mov
push
pushl
mov
and
add
pop
inc
mov
gs
stos
mov
mov
xchg
fs
jbe
xor
out
mov
cli
and
or
xor
sub
jl
hlt
xor
ljmp
push
push
test
push
mov
lret
push
divb
sbb
icebp
scas
js
loopne
xor
sub
and
add
mov
icebp
sbb
xor
dec
cmp
pop
sbb
ror
in
fs
sub
pushf
sbb
movups
cmp
lds
loop
scas
and
pop
inc
jnp
fdivs
inc
push
jbe
lods
push
cmp
xchg
repnz
loop
xchg
and
lods
xchg
sbb
xchg
arpl
dec
cmp
and
pushl
cmp
jmp
add
repnz
repnz
mov
call
fstl
xor
mov
insb
sbb
sbb
inc
jmp
in
cli
ret
jne
add
dec
mov
filds
add
mov
pop
mov
xchg
inc
or
push
insl
ret
cmc
inc
clc
xor
test
loope
stos
inc
lahf
push
inc
mov
popl
andb
dec
addl
cltd
inc
ja
jmp
pop
sub
call
call
pusha
inc
or
ja
mov
mov
cmc
clc
dec
popa
mov
push
inc
stos
ds
pop
rcrb
add
push
jp
sub
js
mov
test
mov
pop
dec
jbe
push
insl
roll
iret
xchg
jle
pushf
mov
sub
jle
cld
push
add
orl
repnz
and
inc
push
xor
pop
scas
js
movb
testb
fcmovnu
adc
pushf
lods
repz
xor
aas
push
add
dec
mov
decl
bound
mov
push
lcall
cmp
mov
pop
jmp
adc
rclb
loope
imul
or
push
outsb
cmp
add
dec
mov
mov
xchg
jmp
cli
stos
adc
fs
or
push
ret
scas
adcl
fisttpll
cmp
fisubrs
mov
in
enter
add
mov
xchg
ss
insb
out
loop
push
cmpsl
or
adc
xchg
sub
push
test
sub
aaa
insb
test
pop
add
out
hlt
icebp
loop
cmp
pop
orl
cmp
arpl
out
lods
dec
sbb
decb
mov
cmp
arpl
or
jae
inc
inc
mov
lods
js
movsb
mov
pop
mov
push
add
xlat
mov
shlb
ss
fcomip
sub
mov
cmp
orl
jb
sti
sbb
dec
inc
xchg
adc
testb
idivl
pop
sahf
adc
mov
mov
and
rcr
xchg
mov
addb
clc
bound
lea
cmp
xlat
jle
fsubp
sbb
test
cld
mov
push
clc
xchg
fwait
pop
adc
xchg
int
push
adc
sub
sti
or
adc
fadd
xor
pop
pop
iret
mov
pop
jecxz
je
loope
rolb
add
ljmp
jo
push
mov
jmp
cli
mov
rcrb
dec
inc
sbb
hlt
clc
jne
sbb
xor
fisubs
shlb
in
rol
fistpll
arpl
lea
cmp
xchg
pusha
call
or
int3
pop
cmp
jmp
punpckhwd
mov
adc
dec
xor
cmpsl
shrb
sbb
jae
hlt
mov
inc
stc
push
push
call
or
mov
adc
dec
dec
ljmp
adc
and
cmp
mov
add
push
pop
ret
enter
pop
jbe
lock
xor
push
xlat
cmp
add
mov
jo
decl
mov
mov
aam
sbb
inc
sbb
roll
js
lcall
mov
sbb
and
mov
and
scas
fnstcw
cltd
cmp
jno
xchg
mov
mov
cmp
leave
pop
outsb
mov
daa
lods
xor
popf
ds
push
daa
sub
xlat
or
inc
pand
and
sbb
ret
and
ret
xor
and
and
stos
lock
and
mov
jo
xchg
jg
loopne
aaa
dec
mov
pusha
imull
mov
adc
cmp
jl
jp
add
add
pop
nop
imul
clc
jmp
sbb
dec
test
pusha
xor
les
mov
add
push
and
fdivrl
push
jbe
xchg
jnp
test
addps
xchg
scas
pop
and
pop
cli
stc
imul
mov
sub
pop
inc
push
enter
fs
push
push
subb
mulb
cld
mov
inc
repnz
iret
outsb
sbb
and
dec
push
cmp
pusha
flds
cmc
mov
xchg
xchg
in
arpl
dec
mov
add
out
sahf
repz
dec
and
mov
les
add
rorl
aas
adc
ss
adc
sbb
loope
adc
jp
add
jb
sti
push
orb
xchg
adc
aaa
and
int
mov
mov
xor
dec
push
cwtl
mov
ss
pop
sarb
cmc
inc
lret
xchg
ret
cmp
movsb
mov
pop
movl
dec
pop
xchg
movsl
aad
jae
mov
scas
add
mov
jmp
ds
push
pop
jg
mov
jle
jb
xchg
jne
inc
lahf
in
mov
or
subb
cmp
gs
push
mov
clc
fists
jl
push
inc
mov
xchg
popa
adc
mov
xor
lcall
push
test
nop
rorl
enter
cmp
subl
mov
clc
shlb
jg
out
je
pop
xchg
je
xor
ret
cmp
cmp
outsb
inc
pop
stos
mov
in
leave
roll
and
cmp
push
mov
push
sbb
pop
pop
insb
adc
jl
jecxz
mov
test
xchg
shlb
jo
mov
enter
lret
and
in
nop
ror
clc
xchg
icebp
and
pop
shrl
xchg
daa
call
jno
jbe
pop
or
mov
push
fwait
gs
popa
push
repz
pop
cmp
out
stos
lcall
jmp
arpl
adc
sbbb
mov
test
add
and
xorl
adc
mov
mov
ja
cs
out
clc
or
repnz
or
push
insb
loopne
andb
adc
ljmp
add
or
push
dec
lods
add
ret
xlat
inc
cmp
arpl
xchg
nop
clc
inc
mov
lea
jae
xor
add
dec
xchg
jne
lret
orb
pop
das
sbb
cmpl
test
xchg
xor
fmull
lds
push
cmp
add
aas
adc
ljmp
pop
mov
test
sub
rcrb
fucomp
out
call
clc
mov
sub
cld
mov
push
inc
test
sbb
cmpsl
popl
es
push
loop
dec
add
pop
clc
lock
out
push
ret
jge
daa
push
mov
mov
sub
or
sbb
pop
push
sbb
mov
js,pt
push
mov
push
jne
dec
sbb
ja
lods
cmp
daa
stc
mov
mov
fsubl
es
loopne
cwtl
mov
js
and
and
shlb
push
jae
or
push
sbb
xchg
lret
push
in
add
push
fistl
xor
fldt
lret
or
inc
aas
push
cmp
sbb
mov
mov
add
or
or
or
out
mov
test
mov
jp
out
in
insl
push
es
shrl
enter
adc
rcrb
cmp
lods
loopne
or
pop
mov
lea
int
fldcw
push
mov
ss
cmp
ss
pop
test
xchg
insb
push
sub
mov
sahf
lods
xchg
rclb
mov
mov
pop
sbb
test
pusha
faddl
lret
clc
jns
test
inc
lods
mov
ljmp
jp
add
shl
fistl
lret
aad
repz
push
xor
adc
cmpl
cmpsb
pop
mov
mov
aam
scas
dec
aam
lret
and
ror
es
xchg
xor
xor
pop
xchg
mov
push
lahf
push
mov
mov
rorl
in
popa
sbb
lret
pop
pop
sbb
mov
or
xchg
cmpsl
and
and
pushf
das
daa
dec
test
stos
leave
loopne
jo
xlat
mov
test
jo
sbb
lahf
int
ljmp
jg
ret
cmpsl
inc
push
jp
ss
mov
lods
bound
mov
cwtl
cmp
arpl
or
rcrl
insl
mov
xor
push
pop
cmp
nop
repnz
add
cmp
inc
outsb
cmpsb
xchg
out
adc
adc
or
cmpsb
pop
or
das
inc
divl
sub
inc
add
mov
or
cli
orl
leave
dec
mov
lods
or
dec
mov
jbe
pop
test
repnz
and
and
sub
je
scas
add
add
lods
sbb
rclb
inc
xchg
shlb
cmp
cltd
mov
cld
mov
fadd
orl
sbb
xlat
sbb
js
push
loope
int3
lds
mov
mov
out
in
xchg
mov
loope
fsub
rcrb
inc
iret
xor
mov
push
jge
cmp
fsubrp
in
lods
pusha
push
pusha
cs
xor
fstpl
lahf
pushf
lods
stc
cli
addl
push
mov
lcall
lret
lret
pop
mov
mov
add
dec
subl
cmp
or
popf
jg,pn
inc
bswap
jns
mov
jp
push
sbb
stos
and
pop
xor
rclb
xchg
mov
cmp
mov
icebp
adc
sub
mov
addr16
add
and
aas
mov
jae
std
sti
add
daa
push
xchg
mov
adc
and
enter
push
jno
icebp
cmpsb
mov
adc
ret
fsubr
dec
std
dec
dec
nop
and
pop
jl
pop
fwait
xchg
xor
frstor
push
mov
out
xor
add
mov
cmp
pusha
in
in
daa
pusha
xorb
jl
js
or
cmpsl
xchg
addr16
std
pop
dec
inc
add
sub
int3
cli
cmpsl
push
mov
std
mov
cmp
add
rorb
push
mov
add
call
test
jmp
jl
gs
pinsrw
cmc
mov
aam
sub
push
mov
jg
push
pop
test
xor
addb
call
cmpsl
xchg
push
push
pop
cmp
dec
add
mov
jne
aad
sarl
testb
call
xchg
hlt
roll
sub
sbb
push
test
xchg
sbb
sbb
mov
stos
repnz
push
lods
xchg
and
pop
push
test
lock
xchg
inc
sub
inc
dec
jp
lahf
cmp
mov
lock
shll
fld
es
sbb
inc
fsubr
aam
push
addl
repnz
or
jmp
test
call
xlat
clc
inc
insb
pop
pop
test
add
cvtps2pi
push
inc
mov
dec
call
loop
je
sub
aas
jno
mov
xor
or
sbb
stos
in
aas
out
inc
out
or
sbb
pop
mov
int3
xor
shrl
mov
pop
and
std
push
or
pop
xchg
pop
xchg
push
add
and
repnz
dec
sbb
lret
xchg
inc
call
and
jbe
mov
pop
push
lods
scas
sub
mov
sahf
lret
incl
outsb
inc
test
ret
xchg
push
shlb
test
adc
add
cwtl
jno
insl
icebp
add
jo
pop
loopne
fucom
insl
xchg
xor
xchg
inc
cmp
or
aam
dec
out
dec
cld
cli
aam
scas
arpl
out
mov
mov
stc
ficoml
mov
inc
jmp
and
icebp
rcll
and
fwait
and
addb
inc
push
xchg
test
hlt
andl
jb
adc
loop
and
and
out
sbb
adc
lea
sbb
inc
mov
jo
jmp
mov
cli
imul
pusha
mul
test
ljmp
and
movsb
push
shl
adc
or
dec
cld
lahf
nop
test
push
mov
mov
cmp
or
rorb
fmul
pop
mov
cld
daa
lds
shrb
cwtl
xchg
inc
sub
cmpsl
enter
outsl
dec
mov
cmp
or
sbb
popa
add
dec
inc
mov
dec
fisubl
outsb
cmp
sub
in
add
cwtl
add
inc
cltd
mov
push
out
adc
cmpsl
insb
mov
mov
jae
sar
sub
call
or
inc
mov
sub
push
push
lock
push
adc
and
lret
pmulhw
clc
ror
repz
dec
ja,pt
sub
std
dec
and
mov
push
lods
loop,pt
jo
pop
sahf
and
mov
push
xchg
shlb
pop
jbe
cs
push
mov
sbb
xor
ret
add
mov
xlat
jl
xor
cmp
adc
xchg
cmp
ljmp
push
insb
insl
jne
push
mov
nop
xchg
pop
xchg
hlt
mov
adc
sbb
pop
pop
negb
rcll
xchg
cmp
pusha
fsubs
fists
das
scas
fidivl
sbb
push
or
xchg
jno
shll
and
movsl
and
dec
push
stos
cli
test
mov
les
jle
cmc
or
sub
jl
nop
mov
add
push
mov
jle
mov
out
in
cs
inc
mov
pop
aad
aad
cmc
inc
add
fwait
jae
sub
icebp
inc
shll
ja
ret
xchg
ja
inc
adcb
mov
pop
gs
mov
out
pop
sbb
or
imul
xchg
enter
mov
clc
dec
mov
ss
sar
loopne
xchg
outsb
jno
dec
ret
ret
sbb
cmp
inc
push
pusha
lahf
mov
jle
mov
and
mov
xorb
push
loopne
lock
pop
xchg
pop
inc
jb
shrb
add
jbe
loope
mov
rorl
jne
aam
push
stos
cmp
pushl
out
out
pop
ret
and
out
leave
scas
and
cmp
sbb
or
sub
inc
cld
pop
aas
mov
in
jb
or
std
mov
or
cli
push
shrb
mov
sub
pusha
jge
add
xlat
push
add
lahf
pop
cli
mull
jge
add
inc
inc
mov
or
pop
xor
ss
dec
int
inc
mov
add
cmp
loopne
push
push
jecxz
cmp
fs
pop
jbe
lea
or
dec
sbb
inc
mov
pop
push
icebp
movsb
push
movsl
lds
repz
clc
add
mov
pop
or
sbb
and
inc
pop
mov
inc
mov
daa
dec
lahf
hlt
insl
mov
shll
rcrb
or
jb
icebp
or
or
ljmp
jnp
sbb
scas
xor
testl
cmp
test
mov
mov
imul
push
bnd
push
loope
push
ja
cli
and
lret
push
xor
pop
pop
jecxz
outsb
mov
hlt
popf
dec
clc
icebp
lods
addr16
ljmp
push
sub
daa
in
les
roll
push
mov
mov
ds
xchg
xor
jecxz
clc
push
movsl
loop
push
jmp
xchg
jle
sbb
xchg
push
aam
push
cmp
in
push
mov
dec
xorb
out
cli
icebp
push
xorl
jno
sub
mov
pop
fcoml
enter
out
cltd
mov
jp
repnz
subb
rcrb
dec
ja
nop
mov
mov
dec
pop
jg
and
jb
popa
add
outsl
repz
adc
icebp
ds
cmp
jle
in
shrb
test
cmp
fsubrl
mov
jge
cmp
sarb
sub
pop
clc
xor
mov
jmp
push
jmp
call
aam
ret
lods
cmp
mov
xchg
add
ret
dec
clc
ret
testb
inc
dec
dec
push
repnz
add
icebp
xchg
fwait
adc
movl
frstor
and
loop,pt
push
les
cmp
ss
xor
or
adc
das
aaa
sahf
ret
mov
fcoms
add
mov
mov
xor
out
call
aam
xchg
test
sbb
int3
in
or
dec
ja
dec
es
shlb
xchg
ljmp
jae
or
dec
xchg
jl
add
sub
mov
adc
insb
rcr
aaa
xchg
mov
dec
adc
fldl
mov
lock
dec
xchg
sbb
outsb
adc
rolb
push
push
dec
jno
in
pop
roll
xchg
xchg
aam
std
or
sbb
imul
mov
mov
push
jl
push
sub
mov
jl
cltd
jp
aaa
mov
adc
daa
sbb
shlb
pop
jle
inc
ljmp
xchg
pop
mov
mov
clc
lea
push
sar
or
pop
rolb
icebp
or
mov
cmp
hlt
mov
xchg
push
nop
in
int
icebp
or
cmp
test
test
stos
decl
cli
enter
outsb
cmc
cmp
adc
jb
pop
add
aam
fidivrl
add
dec
je
cmp
add
inc
addr16
shlb
pop
adc
cmpb
lods
jns
mov
mov
gs
orb
adc
push
sub
loopne
adc
adc
popa
push
or
pusha
imul
jp
inc
cmp
add
mov
arpl
xor
push
push
mov
test
adc
cmp
adc
test
out
add
xor
bound
outsl
sbb
inc
rcll
dec
dec
add
adc
cmp
cld
shll
andb
ss
divb
cltd
cs
or
add
das
jp
repnz
loop
fnstsw
mov
sbb
pop
sub
and
xchg
push
sbb
jecxz
rolb
int3
push
add
inc
loop
aas
adc
pop
push
add
cmp
icebp
mov
push
push
clc
cs
mov
adc
push
lret
mov
scas
stos
adc
movsb
je
or
ret
insb
push
stos
arpl
pop
pop
mov
push
test
lahf
jne
in
mov
mov
loope
pop
mov
push
ret
stos
dec
js
js
mov
jle
inc
inc
rclb
lods
jnp
mov
out
mov
mov
cmp
loop
xor
cmp
divl
aaa
sub
les
sub
ds
and
jp
aad
into
inc
bound
push
mov
push
gs
repz
nop
push
lods
int
ss
mov
call
push
daa
adc
sarb
adc
or
pop
xchg
cmc
into
arpl
loop
inc
dec
sbb
call
mov
pop
mov
aam
inc
mov
or
push
adcb
inc
mov
add
fs
in
add
mov
mov
sub
arpl
and
ja
movsb
lea
mov
std
lret
sbb
jnp
add
fdivs
stos
mov
and
mov
int
shll
xor
into
pop
outsb
das
and
popa
aaa
fists
cmp
or
inc
rcll
js
aad
insl
pop
pop
pushl
stos
inc
aad
inc
es
add
cld
iret
test
or
call
push
fwait
cltd
cmp
iret
mov
stos
in
jle
out
pushf
dec
jmp
push
das
xchg
xchg
rcrb
outsl
xchg
pop
test
dec
scas
shll
mov
dec
or
xlat
mov
cmp
mov
xlat
or
pop
ss
lock
fistpll
mov
std
hlt
add
ja
add
aad
js
aas
sub
pop
mov
jno
and
lods
mov
and
sub
xor
jae
mov
push
cmc
xor
add
xchg
hlt
pop
cs
aam
adc
pop
xchg
inc
xchg
jno
mov
mov
jo
adc
pop
cmp
jmp
mov
push
push
cmc
and
clc
loopne
xchg
sub
add
aam
repnz
mov
test
or
or
popa
xorl
mov
cli
push
and
pusha
or
cmp
outsl
xchg
sahf
out
fadd
neg
sahf
stos
cmp
lock
jle
icebp
push
aad
mov
sbb
jno
dec
lahf
jno
les
inc
iret
cmpsl
sar
sbb
loope
imul
cmp
mull
pop
mov
sub
fisttps
sbb
add
aaa
cmp
sub
stc
stos
mov
and
orl
add
sbb
or
xor
ss
iret
jbe
xlat
sbb
add
aaa
test
mov
jl
ss
and
fiaddl
ss
lcall
dec
adc
xchg
sti
inc
cmp
test
sub
jb
adc
mov
jne
sub
pop
les
in
xchg
dec
into
pusha
and
rcll
data16
xor
js
sub
insb
ret
out
out
push
cmpl
js
pop
mov
test
cld
jno
sub
and
push
fcoms
sti
jo
add
rclb
rcll
rcrl
xchg
enter
jne
pusha
mov
cmpsl
insl
cmp
mov
pop
fldenv
jge
adc
dec
xor
aas
lcall
jg
xchg
aad
jp
xor
cwtl
xchg
sbb
ret
cs
push
bound
jne
fiaddl
sbb
shr
fwait
xor
in
in
push
ds
jecxz
repz
adc
lcall
push
sbb
icebp
mov
xchg
pushl
loop
loop
jl
sahf
mov
mov
push
and
adc
sbb
mov
push
push
rcrb
mov
out
mov
aam
mov
inc
add
sub
add
mov
mov
addr16
sbbl
and
test
loopne,pt
sbb
sub
mov
adc
mov
fcoms
sbb
jmp
nop
out
sbb
xor
movsl
xchg
out
pop
and
in
incb
add
hlt
fdivrs
rorb
sub
cltd
mov
ds
cmpsb
mov
inc
or
xchg
aam
xor
adc
les
outsb
filds
mov
jo
pop
push
mov
and
mov
out
inc
rol
push
ret
sbb
loop
push
ret
nop
adc
sarb
subb
lea
scas
mov
sbb
push
in
andb
adc
xor
or
and
cmpsb
push
fmuls
inc
test
or
sub
cmpsb
mov
add
push
nop
inc
negl
mov
movsl
ret
cmc
mov
shrb
add
pop
jp
xor
inc
in
inc
enter
adc
xchg
cmp
lods
pop
mov
mulb
sub
add
or
jmp
push
mov
ret
sub
out
or
dec
sahf
and
lret
aas
jecxz
inc
sti
sbb
sub
mov
pop
call
pop
cmpsb
sbb
addr16
mov
mov
rcrl
fistps
aas
jmp
aam
clc
dec
mov
mov
bnd
cmp
int
jle
cmpsl
add
cmp
xchg
mov
lret
fadds
jb
ja
pop
idivb
inc
lret
sbb
add
sub
inc
sbb
cld
xchg
aam
jmp
adc
mov
icebp
out
je
mov
inc
adc
dec
mov
xchg
nop
pop
sbb
mov
and
rolb
xchg
data16
shl
xor
mov
ret
push
sbbb
jne
bound
fistps
es
imul
cli
and
mov
popa
mov
xchg
mov
xor
add
pcmpeqb
sti
jne
or
movsl
or
mov
in
or
out
icebp
add
jbe
pop
push
jg
mov
std
mov
loope
ret
mov
out
int3
test
les
sbb
das
mov
add
dec
mov
outsl
inc
mov
jnp
int
push
fsubrs
aaa
and
jno
popf
cmc
imul
lock
pop
call
das
aad
cmpsb
and
inc
inc
pop
icebp
lret
push
xchg
xor
inc
adc
adc
push
jno
xor
int
cmp
gs
daa
cs
jmp
setb
pop
add
dec
pop
fsubrl
cmpsl
mov
jbe
xor
or
out
mulb
cwtl
sbb
fstl
jne
mov
clc
mov
push
add
sahf
fiadds
pop
xchg
xchg
ror
or
rorb
adc
imul
dec
in
test
int
pop
subb
mov
jbe
out
jecxz
negw
cwtl
rorb
pop
inc
cmp
mov
mov
dec
jb
ret
sbb
push
jp
sbb
mov
pop
push
cli
fidivs
loopne
mov
daa
stos
mov
js
cmovne
fldl
bsf
mov
dec
or
gs
int
mov
pop
pop
mov
jo
test
jae
inc
adc
xor
jo
test
div
mov
into
dec
sbb
mov
jnp
shlb
jmp
or
mov
and
cli
es
push
clc
adc
iret
inc
xor
stos
insb
push
jmp
pop
ljmp
jle
xor
add
fcoms
add
pusha
shl
clc
pusha
jns
es
sbb
ret
mov
lret
adc
mov
push
push
es
rcll
and
mov
pop
decb
mov
add
cmp
ds
mov
sbb
or
leave
movsl
adc
add
mov
inc
test
scas
pop
test
add
adc
cmp
mov
sar
out
enter
inc
stos
fidivrl
repnz
push
cld
pop
nop
addl
mov
out
je
enter
adc
mov
aam
push
pop
test
negb
mov
scas
jle
cmp
fists
sbb
in
jg
or
arpl
sub
dec
ret
lock
sbb
push
push
pop
orb
fisttps
shl
call
pop
mov
add
insb
mov
cmc
or
js
dec
stos
mov
and
fisttpll
jb
aas
pop
mov
mov
jecxz
movaps
mov
scas
cmc
jmp
sti
sbb
mov
adc
pop
div
dec
dec
adc
lcall
jae
shll
in
aaa
ret
mov
cwtl
sbb
pusha
addb
jmp
movsl
or
cmpsl
data16
mov
lahf
pushl
les
add
stos
fbstp
stos
dec
add
movaps
hlt
rclb
pop
ror
add
ds
int3
cltd
xor
jp
inc
sbb
shll
popf
test
xchg
stos
movsb
mov
jmp
cmpsl
push
fdivr
cmp
xchg
inc
mov
pushf
test
adc
mov
scas
cmp
aam
ljmp
mov
scas
adc
or
jecxz
pusha
xchg
lods
xor
or
push
in
or
andl
hlt
inc
pop
add
push
jo
fcompl
mov
outsb
fildl
shlb
in
add
rcr
add
sarb
lgs
scas
pop
mov
jmp
jo
out
push
mov
inc
ret
sub
leave
push
dec
adc
pop
adc
and
pop
shl
es
icebp
or
pop
xlat
movl
sub
sbb
sarl
cmp
js
mov
in
cmp
ljmp
push
sbb
rcrb
jle
scas
data16
inc
adc
cld
mov
test
push
sahf
in
dec
ret
test
test
or
fcompl
movsb
and
test
xor
pop
cmpsb
push
xor
mov
lahf
out
aam
daa
in
inc
mov
inc
inc
push
rol
push
mov
into
xor
xor
jg
mov
stos
or
add
imul
push
sub
paddsb
or
jg
les
lcall
cld
or
jmp
ljmp
stos
ljmp
dec
xorb
je
adc
cld
les
xchg
clc
cltd
test
push
and
fstpt
push
addr16
xchg
dec
xchg
pop
shl
lahf
outsl
out
ret
inc
dec
pushf
inc
orb
mov
push
or
fisttpll
addb
add
and
mov
mov
inc
xchg
mov
sahf
testb
push
subl
sub
std
outsl
popa
mov
enter
pushf
dec
mov
pop
xchg
push
mov
xchg
fcmovnu
dec
hlt
dec
lea
mov
and
dec
dec
sub
fildll
ret
dec
cmp
cmc
push
push
pusha
sahf
arpl
or
xchg
ret
movsl
push
sbb
ss
addr16
cmpsb
out
push
data16
loope
loope
jb
fs
ja
roll
in
loope
ret
movsb
je
idiv
jl
or
add
mov
fstpl
and
push
aas
in
shlb
les
aas
mov
sbb
pop
cmpsb
adc
adc
std
jp
add
xorl
ficompl
mov
mov
aaa
aad
sbb
or
jo
add
adc
mov
rolb
xorb
rolb
xor
xor
cld
add
movsb
into
xor
jae
pushf
pop
add
dec
or
ret
pop
imul
dec
jbe
cmpl
jge
push
push
or
es
test
dec
loopne
out
xor
jmp
imul
imul
add
inc
xchg
arpl
bound
nop
cmpsb
outsb
lea
insl
or
in
xor
add
push
xlat
mov
mov
sub
xchg
incb
popa
negb
and
mov
dec
dec
cmp
sbb
adc
ret
js
push
fadd
mov
jl
or
pop
and
lret
cmp
and
dec
pop
dec
cmp
cmp
les
lahf
adc
cli
rcr
insl
sub
sub
les
fadds
lea
push
es
inc
or
pop
xchg
inc
inc
sti
sub
sbb
rolb
xlat
xchg
js
sub
orb
xchg
rolb
fiadds
mov
ret
inc
inc
fcmovb
into
aam
scas
push
jg
pushf
and
add
mov
scas
aam
cmpsl
xorb
out
mov
shl
lods
push
jmp
mov
ss
mov
pop
mov
loopne
call
rolb
pop
js
les
push
add
rolb
rolb
ss
push
ss
or
repnz
push
std
jg
ror
add
fwait
dec
in
es
repz
mov
xchg
call
xchg
aas
lock
push
inc
and
mov
pop
cli
add
pop
mov
pop
jbe
pusha
adc
adc
push
jge
pop
and
rorl
ret
lods
xchg
rorb
cmpsb
shl
js
popa
sbb
pop
hlt
dec
movsl
and
pushf
arpl
xchg
movb
aas
push
loope
cld
dec
sbb
cmc
sbb
lock
out
jle
xor
push
loope
or
cbtw
add
pop
xchg
decl
and
cmp
inc
bound
sbb
add
xchg
xor
outsl
xchg
push
adcl
dec
lret
lahf
inc
movsb
lret
lds
subb
jge
and
push
and
dec
js
adc
jp
insb
push
pop
or
push
adc
pusha
xor
pop
push
int
or
pop
xchg
pop
add
movsl
fiaddl
fcomp
adc
fdivrl
push
rolb
subb
hlt
test
inc
jo
mov
movsl
jae
loopne
sarb
lock
xchg
inc
push
es
dec
orb
push
aam
and
test
popa
clc
lock
pop
iret
lods
addl
nop
test
cmc
stos
insb
inc
loopne
jno
push
push
sbb
add
scas
or
lret
push
mov
jle
pop
cltd
fs
cmpsb
cmpsl
ja
enter
dec
sahf
pop
and
into
inc
pop
fwait
mov
mov
sti
pop
pop
jle
aaa
sbb
jle
mov
push
mov
ja
sub
cs
mov
neg
mov
add
jle
popa
inc
add
enter
mov
push
inc
insl
ljmp
jl
and
icebp
cs
enter
jl
cmp
dec
shrl
jne
lret
add
or
stos
sbb
ftst
sbb
jno
xchg
xor
pshufw
pop
sarl
cmp
cld
test
leave
pop
lahf
sti
mov
dec
popf
inc
dec
and
stc
push
pop
shrb
loop
push
adc
jg
cs
sub
data16
push
or
sbb
xchg
or
mov
push
fiaddl
add
fmuls
pop
stc
popf
test
xchg
adc
pop
push
push
in
adc
jg
mov
test
or
mov
ret
sbb
xchg
cmp
xchg
xchg
lret
sub
inc
fsin
aas
xchg
jno
push
and
pop
repz
lds
mov
cmp
dec
je
jl
cmp
aaa
cld
decl
mov
and
fadds
mov
adc
loop
cmp
inc
sti
fidivl
lock
into
jnp
dec
pop
adc
sub
adc
mov
outsb
ljmp
xchg
push
jg
sti
cs
mov
sub
push
push
fistps
rclb
add
or
cmpsl
hlt
mov
pop
fucomi
dec
dec
mov
call
add
jo
xchg
inc
push
mov
lcall
mov
pushf
pop
jae
psraw
xchg
out
movaps
inc
popf
cwtl
mov
adc
loope
jno
pop
add
rolb
xor
scas
jl
add
sub
movsl
shlb
dec
sbbb
and
add
and
out
stos
pop
bound
fisttpl
js
push
dec
lahf
lea
sub
movsl
or
icebp
test
in
cmpsb
mov
and
inc
sub
dec
xchg
fidivs
sti
mov
fiadds
add
pop
and
lret
fxch
test
jne
and
dec
add
push
lods
lret
inc
daa
sub
xlat
out
lahf
cmp
test
xor
popa
rcl
or
pusha
inc
jmp
or
xor
mov
pop
cmc
cld
mov
inc
or
sbb
jp
push
daa
in
xchg
movsl
filds
scas
add
xchg
jp
push
sbb
xor
cwtl
pushf
push
push
in
ret
lret
mov
gs
jl
clc
dec
into
scas
orl
dec
add
andl
xchg
sub
mov
xchg
xor
mov
sahf
sbb
sbb
add
aad
stos
cmpsl
loop
ss
test
adc
clc
mov
xchg
dec
mov
std
jb
cld
pop
icebp
lds
lds
mov
daa
jp
inc
lret
or
mov
pop
jl
fidivrs
imul
aaa
push
fbld
int3
push
mov
pop
loope
bound
repz
push
dec
cmp
cli
test
mov
scas
loopne
jns
int
mov
popf
push
pusha
dec
mov
sarb
addr16
insl
inc
mov
and
mov
lods
jle
xchg
cld
repnz
popa
adc
fdivr
xor
fcoms
xor
jl
and
xor
enter
add
imul
data16
decb
adc
cmp
dec
xchg
sub
sub
jg
push
jb
scas
xchg
sbb
shrb
gs
mov
rorb
xchg
lods
ja
lock
adc
insl
cli
mov
and
pop
pop
pop
dec
jp
jbe
dec
cmp
notl
add
cld
jae
pop
pop
push
je
xchg
fbld
orl
test
arpl
rcrl
rorb
out
add
push
jmp
movsb
pop
push
ret
repnz
enter
pop
cld
fisttpll
je
fadds
pop
mov
inc
jmp
pop
ds
dec
inc
mov
mov
add
dec
sub
rcrl
shr
test
dec
loopne
aaa
inc
jl
cwtl
lret
mov
mov
shrl
mov
js
shll
mov
fimuls
pusha
jl
stos
xchg
dec
jmp
dec
adc
sahf
sbb
int
ds
rcrb
push
std
imul
push
sbb
xchg
and
cld
out
and
push
loopne
cmp
out
outsl
aad
ja
repnz
movsl
dec
jmp
or
and
xchg
fiaddl
fcomp
sarl
pop
jmp
xlat
or
xchg
int
push
jbe
add
jae
lods
ret
mov
fisubl
test
jbe
jo
inc
ror
inc
jo
xlat
cmpsl
xlat
mov
fs
mov
or
and
pop
ret
and
movsl
shl
and
add
ret
pop
push
sbb
inc
push
pusha
daa
mov
sub
mov
sbb
dec
adc
aad
jnp
or
and
mov
add
cmp
sahf
roll
sub
loopne
mov
fnstenv
fadds
sbb
pop
mov
pusha
stos
sbb
add
xlat
xchg
mov
pop
and
cmc
xor
mov
sub
xor
or
fidivrl
out
jl
cmp
adc
call
fs
in
sub
lock
mov
test
sub
cmc
push
add
push
out
xchg
je
pop
fwait
das
stc
mov
test
in
lea
mov
mov
popf
xor
popf
test
jbe
and
fucomp
adc
cs
ret
int3
cmp
pop
movzbl
xor
push
je
fadds
adc
movsl
sbb
scas
frstor
movsb
fimuls
add
mov
shl
adc
lret
rol
mov
fwait
cmp
enter
stc
call
and
ljmp
ret
push
inc
sbb
add
cmp
shr
adc
js
ds
mov
mov
adc
clc
aas
adc
pop
add
adc
fdivrp
xor
inc
fidivs
test
inc
dec
jg
nop
cli
iret
push
sbb
sbb
sub
bound
adc
adc
cltd
mov
stos
mov
add
mov
loopne
out
push
aad
mov
jbe
jmp
jns
and
out
and
fwait
push
jl
jb
les
repnz
stos
push
pop
shr
mov
jg
or
add
fsubs
fidivs
or
push
hlt
aad
imul
add
push
mov
cmp
negl
les
inc
lcall
sub
sub
arpl
mov
cmpsb
mov
nop
adc
iret
lock
or
push
pop
pop
bound
mov
cs
or
dec
fsubrs
inc
add
xchg
xlat
pop
imul
data16
stos
mov
pop
fs
adcl
cli
orb
out
pop
mov
inc
vandps
inc
pop
xchg
scas
pusha
ret
lea
hlt
add
jmp
inc
push
pusha
and
mov
xchg
mov
fldl
push
jp
adc
cmpsl
add
hlt
fsubrl
shll
cltd
mov
add
fwait
pusha
loope
jae
inc
inc
adc
xchg
fldl
les
xchg
jge
xchg
mov
pop
sub
jp
es
ss
mov
mov
scas
sbb
jp
cmp
rcl
nop
cmp
test
sbb
xor
add
and
sub
loopne
add
stos
xchg
xorl
mov
ret
pop
pushf
les
fwait
hlt
mov
jp
mov
les
sbb
sbb
jp
inc
int3
cmp
stos
sub
ret
adc
out
mov
push
fucomip
adc
adc
pop
aas
mov
sub
xchg
or
cld
aam
ucomiss
push
mov
es
pop
adc
mov
in
mov
jo
cli
fsubs
rclb
std
mov
xor
cltd
sub
cmp
sbb
mov
xor
add
add
push
fistps
aad
mov
dec
lahf
data16
sbb
lock
mov
sub
ret
outsb
repnz
add
loop
jae
outsl
or
xchg
js
mov
xor
rorl
jo
js,pt
mov
insb
xchg
lods
nop
pusha
into
fs
call
out
test
iret
mov
cld
pop
mov
ds
popl
jg
xor
inc
outsb
push
xchg
or
mov
loop
insb
mov
push
push
hlt
aam
pop
xor
shlb
daa
mov
pop
cld
add
sbb
ja
daa
mov
add
lahf
outsl
mov
nop
mov
push
lods
dec
mov
ficoms
leave
sbb
imul
mov
sbb
cld
imul
frstor
push
ds
and
or
push
cmp
dec
inc
push
adc
lock
cwtl
out
mov
push
cmpsl
testb
pop
clc
icebp
insl
roll
ret
push
out
jnp
push
insl
sub
andb
loop
or
mov
mov
scas
aas
pop
out
jae
pop
push
add
xchg
sbb
mov
mov
add
xchg
inc
movsb
adc
push
mov
mov
call
push
cltd
clc
inc
stos
or
mov
push
mov
jbe
mov
mov
push
subl
add
repz
in
mov
xlat
mov
divl
cmp
aas
mov
sbb
rolb
push
sti
sub
and
cmpsb
sbb
out
fsts
leave
cmp
pop
shrl
frndint
rcll
jp
add
daa
pop
in
sarl
sbb
inc
lock
mov
mov
push
sbbl
out
lds
jo
imul
lods
mov
dec
ret
mov
cmp
mov
and
lret
dec
lock
xchg
push
in
adc
mov
test
pusha
cmp
in
jns
add
add
lahf
je
xlat
lret
mov
test
mov
adc
aad
fldl
rcrl
pop
push
sbb
clc
xlat
inc
jge
jo
jle
stos
aam
xchg
push
movsb
daa
inc
cmpsb
imulb
cs
ja
or
cli
js
push
fwait
jg
movsb
dec
shll
sub
mov
fcom
imul
test
loopne
es
test
sbb
je
push
mov
out
fisubrs
mov
dec
mov
mov
cmp
sub
dec
xor
popa
cmpsl
sbb
mov
pop
je
outsl
adc
mov
mov
cmp
dec
xlat
adc
inc
add
icebp
sub
pusha
adc
adc
add
add
and
mov
xchg
addl
and
cmp
push
lock
mov
sub
push
mov
xchg
and
xor
scas
xchg
jle
mov
hlt
cmp
leave
mov
shrb
push
or
adc
or
out
cld
stc
ja
pop
rol
cmpl
scas
movsl
push
mov
popf
in
call
inc
fimull
push
shl
push
lret
push
test
mov
xor
out
xchg
loope
xchg
test
enter
addb
sbb
and
sub
or
jmp
or
scas
std
push
hlt
ja
sub
cmp
fcompl
inc
adc
hlt
fadds
inc
and
jb
jno
push
clc
clc
push
stos
shll
xor
xchg
nop
ret
mov
out
orb
ljmp
loop
add
aad
into
outsl
xchg
and
call
rolb
insb
inc
dec
push
add
xor
inc
mov
rcll
dec
cmp
adc
and
and
xchg
fisubs
cwtl
add
dec
in
test
pop
mov
mov
mov
outsb
lock
pop
shll
xchg
and
cmp
inc
pop
je
mov
call
jle
xlat
xchg
gs
rcl
pop
pop
lods
xor
pop
ret
and
int
rorb
ror
and
add
repnz
push
lods
rorl
or
and
jmp
test
or
movsl
xchg
mov
mov
mov
push
mov
xchg
rcll
xor
adc
sub
sbb
aaa
dec
pop
rcrl
divb
jmp
xor
xor
cli
jge
call
aaa
rol
rcl
inc
sub
daa
shll
add
fdivrl
add
lods
adc
xor
cmp
pop
in
push
int
jp
jp
sub
inc
icebp
lods
mov
fildl
xchg
sub
orl
mov
mov
mov
pop
cmovp
push
stc
pop
test
iret
in
loopne
xchg
sbb
add
arpl
mov
add
sub
clc
aad
jl
or
daa
outsl
push
add
jecxz
pop
rol
ret
sub
mov
lcall
rolb
jg
cmp
ja
add
sub
jns
int3
shr
jne
rclb
clc
cmp
lds
jp
or
int3
pop
out
loope
push
call
push
jno
into
cmpsl
addr16
adc
jnp
div
cmp
inc
cmpsb
into
movsb
scas
fisubrl
mov
popa
sub
and
call
mov
push
in
jle
jg
add
dec
ret
je
and
clc
lea
dec
nop
push
adc
loop
pushf
add
int3
fcom
in
push
push
push
popa
mov
test
mov
imul
out
inc
shll
inc
xor
sbb
cli
ds
mov
add
xor
xor
add
mov
dec
rcll
push
jmp
repz
call
mov
add
cmp
adc
movsb
sbb
fstpl
pop
ret
adc
add
inc
mov
cmp
mull
xor
mov
in
pop
dec
sahf
cmp
loope
shrb
shlb
insb
je
mov
cmp
popa
push
sbb
hlt
inc
inc
fdivrs
mov
cld
pop
cltd
dec
inc
fnstenv
ljmp
xchg
push
jo
and
jb
pop
enter
lahf
mov
adc
add
inc
jp
or
adc
adc
xor
jns
cwtl
mov
ret
dec
aaa
imul
ljmp
pusha
loopne
dec
insb
aam
fldcw
inc
and
and
mov
adcb
icebp
out
push
rcr
or
sbbb
leave
lea
xor
push
or
aaa
add
push
sahf
inc
les
les
test
loopne
sahf
ljmp
fcom
stc
or
out
inc
sti
hlt
jge
add
sbb
push
repnz
lcall
hlt
adc
xor
or
lods
lods
mov
and
mov
scas
lock
bndldx
add
mov
add
enter
cmp
scas
mov
push
jp
inc
mov
cmpl
aam
sahf
jle
jb
dec
sbb
push
mov
xor
adcl
fcmovnb
jge
inc
popf
mov
or
mov
add
mov
loope
xchg
xlat
cmp
mov
adcb
shrb
mov
icebp
ficomps
mov
xor
xor
jle
fidivrs
mov
pop
ret
outsb
mov
or
lea
sbb
mov
mov
test
cmc
aas
loopne
sub
cmp
or
xor
cmpsl
mov
inc
daa
scas
nop
jbe
inc
jnp
or
sti
jge
adcb
jnp
pushf
rcrl
scas
jle
les
mov
add
ds
mov
cs
add
xor
sbb
cli
jl
je
mov
adc
mov
xor
sub
jg
pop
mov
rolb
std
mov
fdiv
loop
stc
clc
or
cli
add
imul
adc
jp
xor
xchg
cmpsl
sub
inc
daa
add
dec
jb
push
sbb
jae
ret
imul
out
or
inc
aas
xchg
add
out
inc
adc
testl
movb
dec
xchg
xor
hlt
or
sub
cltd
push
adc
cmp
inc
sahf
cmp
fs
sbb
push
jmp
int
dec
subl
insb
std
js
pop
in
bound
sub
rcrb
sbb
or
mov
inc
inc
push
xchg
int3
data16
int
les
jge
jns
incb
inc
test
jb
stc
rol
add
rolb
sbbb
mov
inc
add
loopne
jmp
xor
jle
loope
mov
popa
or
incl
jb
sbb
and
push
sub
inc
inc
insb
movsl
cld
pushf
jmp
mov
and
or
ja
inc
in
pushf
fidivl
adc
lcall
mov
xlat
jecxz
sbb
addr16
cmp
add
add
sti
inc
fstpt
negb
fcmovnu
xor
fisubl
loope
pop
xchg
clc
mov
dec
sub
lcall
and
sbb
add
sbb
sbbl
rcll
sti
push
roll
sbb
adc
cli
mov
pop
rclb
out
jno
sub
cs
add
xchg
xor
je
push
sub
into
into
mov
cmp
scas
cmp
inc
stc
repnz
xor
clc
add
inc
dec
cs
daa
sub
call
inc
out
add
daa
repz
sti
icebp
int3
add
scas
or
ret
in
dec
test
pop
loope
fs
jmp
and
inc
gs
xchg
icebp
add
dec
inc
mov
and
inc
inc
xchg
mov
cli
leave
movsb
inc
sub
fldt
jg
andl
dec
mov
mov
lret
outsb
test
adc
push
sbb
scas
ffree
jns
sbb
jnp
inc
mov
je
push
xchg
mov
or
dec
stos
mov
and
ror
sbb
cs
clc
sbb
cs
push
mov
bound
xor
call
outsl
push
mov
cmp
and
cmc
jo
ret
stc
ja
stos
scas
mov
daa
mov
sbb
fcompl
sbb
pop
loope
xchg
stos
out
pop
mov
scas
push
inc
and
sub
inc
insl
and
push
pushf
sbb
mov
arpl
ss
xlat
insl
cmp
sbb
rcrb
xchg
jae
ljmp
add
shl
mov
mov
mov
ficoms
ret
push
push
mov
out
sub
xchg
das
lahf
xor
pusha
add
test
add
push
and
sbb
mov
lret
sbb
mov
out
cmpsl
aad
in
cmp
out
jg
xor
call
sub
push
shll
or
push
imul
xchg
outsb
orb
fstpl
in
adc
ss
add
jne
and
jle
lahf
pusha
les
mov
jno
aas
shrb
mov
inc
cmpsl
repnz
add
push
mov
sbb
ret
cmpsb
push
dec
mov
push
pop
and
sti
lahf
adc
lcall
jnp
mov
lods
lock
add
call
loop
sub
subl
lret
jo
mov
fldl
ds
xchg
inc
xchg
into
jnp
lcall
add
pushf
dec
and
mov
add
pop
aaa
pop
pop
or
imul
push
add
jae
pop
pop
xchg
loop
xlat
adc
mov
adc
ret
add
and
push
pusha
mov
add
out
pop
add
mov
shll
movsb
and
cltd
mov
aaa
mov
and
xchg
cmp
je
mov
xchg
add
in
and
ret
push
mov
mov
push
or
and
inc
dec
push
cld
test
cmp
ficompl
mov
sub
sbb
in
xchg
mov
shll
inc
data16
iret
inc
adc
js
jns
mov
inc
dec
mov
sbb
jp
xchg
push
rolb
pop
push
sub
ficomps
add
inc
cwtl
mov
xor
push
ret
add
leave
mov
jecxz
sbb
orl
add
fwait
cmpsb
push
int3
or
test
test
adc
xor
shlb
sub
out
ljmp
je
xor
jge
pop
jle
daa
xchg
cmp
push
mov
gs
sbb
insl
push
sub
pop
inc
push
stc
scas
xchg
scas
ds
inc
cmp
adc
es
or
fucom
pop
inc
push
and
in
test
add
fsubrp
imul
mov
push
fwait
rcrb
lea
push
dec
pop
push
inc
mov
lcall
test
addr16
call
sarl
jle
cmp
and
test
jg
sub
scas
out
dec
loopne
outsb
fwait
daa
xchg
cwtl
push
xchg
test
fadds
movsl
imul
clc
loop
jbe
sbb
xor
push
jle
cmpb
xor
icebp
lock
lock
incb
rolb
push
js
repnz
mov
mov
dec
add
lock
out
fcmovnb
inc
sub
sbb
jmp
pushf
pmovmskb
lret
test
div
leave
pop
daa
loopne
lea
sbb
mov
and
out
js
or
imul
movsl
inc
cwtl
and
insb
xor
lret
addl
int
ret
sbb
pop
sbb
je
mov
mov
ret
stos
add
jle
mov
cltd
add
cmp
mov
adc
clc
jg
push
js
call
xchg
aam
stos
cld
fisttpll
lods
mov
je
add
loop
aam
mov
je
ret
js
inc
cmp
inc
mov
cli
in
add
movsl
in
push
cmp
ret
pop
clc
xchg
int
ret
mov
rcrl
mov
lock
out
pop
out
dec
inc
xchg
inc
mov
ret
bswap
sub
ds
inc
pop
xor
sti
test
inc
inc
ja
das
xor
mov
imul
pop
or
mov
js
lret
xlat
fcomps
and
shrb
shr
jns
jno
loopne
push
data16
pop
mov
push
stc
aam
push
jp,pn
push
push
xchg
or
test
adc
stos
jmp
popa
mov
xor
pop
dec
xchg
lock
aam
fmuls
cmp
lods
cmp
xchg
and
inc
jle
ljmp
mov
inc
or
sarb
jge
lret
mov
xor
xchg
cmp
sub
push
mov
dec
xor
jle
lock
push
stc
out
test
add
dec
movsl
outsl
cmp
mov
orb
cs
loopne
ficoms
mov
pop
jge
push
mov
mov
imul
dec
xor
or
fsts
ljmp
xlat
ret
pop
test
push
jmp
lods
sub
xor
sbb
out
xchg
adc
or
lret
inc
test
andl
mov
les
push
xor
inc
repz
or
loopne
mov
stc
inc
fsubrp
lret
je
inc
cmp
in
rcl
in
orb
popf
ljmp
jmp
cli
pop
pop
adc
inc
popa
jb
sbb
repnz
pop
gs
jbe
test
pushf
mov
sbb
xor
in
push
sbb
mov
pop
sahf
outsb
or
mov
addr16
push
lods
mov
inc
jne
imulb
lret
push
mov
jne
xchg
lock
test
ret
mov
ds
ret
xor
mov
xor
scas
xor
jge
lahf
test
andl
push
pop
inc
pop
sbb
call
addb
mov
cmp
dec
xchg
push
les
sub
loope
fdivr
sub
in
nop
mov
in
and
pop
add
adc
mov
lock
pop
sub
mov
lea
cld
pop
ljmp
xchg
cmp
jo
adc
leave
js
loop
and
addr16
movsb
push
lret
sbb
sub
jbe
lds
es
adc
ret
pop
loope
mov
adc
xchg
push
idivl
sub
shll
push
ss
dec
push
je
pop
test
inc
cmp
lret
mov
es
cmpsb
js
cmp
inc
push
aaa
jnp
smsw
and
xorl
adc
les
or
movsl
xchg
sub
rcr
fisttpll
addl
insb
add
mov
sub
sbb
pop
cs
push
aaa
leave
lods
adc
in
push
cmp
mov
jmp
icebp
mov
adc
sub
adc
pop
mov
jno
ret
shlb
push
sub
mov
mov
pusha
sbb
push
jbe
lea
aad
dec
and
gs
nop
adc
fdivl
pop
loope
mov
push
stc
in
jg
adc
adc
or
add
and
int
xchg
mov
jae
sub
cmp
inc
xor
leave
test
jecxz
test
loope
pop
shlb
movsb
daa
mov
push
inc
movsb
or
enter
lds
mov
pop
mov
cs
shll
or
inc
clc
inc
lods
std
pushf
xor
mov
mov
jg
je
adcb
jp
push
and
xor
cmp
in
cmp
mov
scas
pop
or
xchg
push
xor
push
into
js
lock
adc
xchg
fiadds
sub
daa
popa
xor
sbb
clc
jle
pop
icebp
and
sbbb
int
fs
mov
lcall
sub
les
jno
mov
dec
xor
mov
mov
push
addb
das
divb
iret
ds
int3
xchg
dec
std
ret
pop
rolb
dec
arpl
cmp
mov
insl
fildll
div
movb
movsl
call
jge
mov
inc
mov
add
jns
orl
aam
push
mov
adc
aaa
adc
mov
mov
stos
push
sbb
rclb
outsb
ret
mov
and
pop
icebp
testl
sbb
xchg
mov
cltd
add
cmp
inc
jo
popf
sbb
fadds
inc
push
std
xor
decl
sti
negb
mov
ret
aaa
adc
push
int
enter
push
sahf
pop
clc
add
leave
adc
ljmp
add
add
ffreep
mov
xchg
sbb
ss
inc
sub
das
or
fwait
lea
jmp
push
das
ja
cmpsl
add
adc
loop
fadds
jmp
in
ret
mov
fs
xor
ljmp
clc
fcoml
add
push
fisubl
jl
adc
ret
hlt
add
and
push
repz
fdivrl
dec
add
or
stos
jg
clc
xchg
lcall
daa
xor
mov
add
daa
ss
enter
lahf
inc
jp
je
mov
loope
cmpsl
and
js
inc
jge
cmp
std
aaa
pushf
je
scas
leave
hlt
das
xor
mov
or
xchg
and
add
scas
jp
clc
es
popa
jmp
arpl
pop
decl
dec
test
jle
xchg
ret
adc
sub
bound
xchg
adc
sub
rcrl
pop
mov
sub
pusha
mov
notb
and
fisubrs
js
push
xor
sub
push
cli
dec
jo
mov
sub
xchg
data16
mov
mov
jbe
hlt
bswap
clc
call
shr
imul
inc
mov
ficomps
push
cld
fists
es
mov
pop
iret
jb
and
fmuls
mov
adc
push
or
imul
push
cli
mulb
dec
adc
daa
out
iret
lods
jae
test
mov
movsl
mov
inc
xlat
mov
dec
adc
nop
pop
add
cld
xchg
cmp
pop
sub
inc
push
fnsave
mov
fcmovbe
xor
sbb
sbb
push
int3
jp
mov
loop
outsl
add
mov
push
push
push
cmpb
or
jne
dec
mov
jle
int3
or
push
jle
sub
loope
mov
stos
icebp
add
orl
rcll
sahf
loope
cwtl
icebp
lea
add
sahf
clc
arpl
mov
test
rcrb
dec
fcomps
mov
and
jb
cmp
push
push
movb
mov
mov
inc
mov
xchg
and
lahf
movsl
bndldx
leave
push
push
cwtl
in
push
pop
push
loope
shl
addl
sub
in
ss
lret
fimuls
mov
enter
je
lods
sbb
add
out
sahf
ss
pop
iret
les
pop
xlat
lret
jp
sbb
cli
dec
dec
cmp
push
lds
loopne
and
mov
loopne
mov
ss
xor
add
pminsw
sub
pushf
loop
test
clc
cmpsb
incl
pusha
cmp
xchg
aam
aaa
and
mov
mov
mov
mov
cltd
or
mov
pop
or
cmp
inc
je
ljmp
pop
sub
mov
pusha
add
dec
clc
je
into
inc
mov
mov
test
orb
test
pop
dec
aad
call
and
fmuls
imul
ljmp
xchg
mov
in
push
clc
in
rorb
repnz
lods
add
mov
movsb
xchg
fsubr
pop
mov
ret
sbb
ds
push
pop
orl
dec
dec
lock
xor
rorl
je
dec
dec
push
push
jge
xchg
fidivl
adc
outsb
addr16
in
mov
and
aaa
popa
mov
bound
mov
mov
xlat
dec
xor
mov
fcmovnu
out
call
xchg
cmpl
es
xor
outsb
jl
add
stc
mov
pop
mov
sbb
jne
cmpb
rorb
aad
cmp
inc
dec
hlt
and
mov
mov
jmp
jl
pop
mov
vcvtss2sd
add
xchg
push
inc
mov
push
icebp
test
adc
aam
in
dec
loope
mov
pop
jb
cmc
inc
xchg
cmpsb
inc
add
mov
stos
test
loope
or
adc
pop
shrl
movsb
aaa
call
push
mov
and
fists
cld
or
gs
lock
imul
pop
push
xchg
test
xchg
cltd
sbb
gs
mov
test
sbbb
xchg
jp
and
and
cs
cmpsb
add
pop
xchg
adcb
lock
rolb
decl
push
stc
loop
inc
subb
jmp
mov
daa
clc
add
sbb
xchg
mov
inc
pop
mov
sbb
je
adc
mov
xchg
inc
push
xchg
jo
loopne
ss
aad
xor
dec
in
ds
jnp
inc
out
add
test
repz
ds
mov
cmp
add
stos
and
call
jecxz
adc
lock
push
test
insb
movlps
mov
fs
adc
add
aaa
cmp
icebp
call
data16
fmuls
cmp
dec
ret
into
xchg
push
pop
sbb
nop
adc
inc
adcb
lods
inc
push
pop
push
test
leave
and
stos
xchg
pop
es
icebp
aas
and
cmp
lcall
sub
push
lds
adc
movsl
loope
outsb
cltd
shrb
pop
push
hlt
pushf
cld
push
mov
test
jle
lds
lcall
inc
out
es
push
push
pop
aas
std
ljmp
outsl
jne
dec
ret
or
push
sti
jl
fs
sbb
and
push
les
enter
aam
xor
es
mov
xchg
outsb
movsl
fisttpl
insb
cmp
and
rcrb
push
jecxz
mov
pop
clc
ret
imul
or
movsb
loopne
loopne
xor
mov
loopne
mov
cli
rclb
dec
push
ret
xchg
test
scas
xor
add
pop
adc
cmp
test
fisubrl
incl
dec
pop
lcall
fcmovbe
push
adc
lea
inc
inc
sbb
sub
cld
dec
pop
clc
fnstsw
mov
inc
int3
mov
mov
nop
call
lcall
sbb
stos
adc
popa
cli
cltd
hlt
add
dec
cmp
rolb
fimull
loope
mov
addr16
mov
xchg
out
loopne
or
or
sbb
lea
sub
adc
rol
test
test
andb
xor
stos
fwait
inc
xchg
push
call
add
ds
ss
dec
sbb
push
iret
stos
jl
ret
jge
and
rcrb
loopne
lock
cli
jo
jo
cmpsb
pop
call
fldt
sbb
xor
cmp
int
push
insl
ja
xor
pushl
pop
mov
jo
pop
cltd
pusha
pop
jns
mov
and
fmuls
in
inc
arpl
xchg
or
stos
fwait
xchg
ret
mov
mov
push
pop
cmp
and
adc
adc
mov
mov
sbb
stos
and
adc
rcrl
andl
daa
jo
inc
cmp
sahf
roll
out
mov
pushf
cs
cmp
add
dec
lock
ja
stos
dec
adc
and
scas
mov
mov
xchg
cmc
test
lea
pop
int3
hlt
out
inc
lret
jnp
add
lods
rcll
repnz
add
mov
or
xchg
jb
add
insb
adc
iret
and
das
sti
inc
mov
dec
popf
add
add
bound
pop
dec
loopne
ret
nop
jl
lock
add
or
sub
adc
loope
push
inc
or
adcl
pop
dec
arpl
push
sub
push
add
cmp
sub
and
icebp
ret
notb
inc
jecxz
js
pop
xor
add
js
lea
hlt
aas
incb
lret
add
aaa
inc
or
jb
xchg
xor
cld
into
adc
push
mov
xor
jnp
loopne
push
cli
lock
pop
cs
xadd
bound
ljmp
ds
add
push
mov
sbb
mov
out
fdivs
mov
mov
sbb
and
es
inc
and
adc
test
xchg
outsl
fisttps
sti
xchg
ss
adc
int3
dec
or
sub
test
pop
in
lahf
fmull
jns
mov
and
cltd
mov
push
xor
xchg
cmp
push
jge
or
cwtl
int3
and
popa
dec
and
cwtl
jns
out
sarl
add
es
shl
xchg
jo
lcall
adc
cmp
cs
xchg
cmp
rorb
mov
test
jae
pushf
int
pushf
dec
in
clc
xor
pop
clc
addb
icebp
mov
and
clc
rorl
ds
inc
push
lods
mov
xor
pop
scas
and
or
sbb
or
xor
stc
inc
fwait
movsb
cmpsb
fisttpl
jg
arpl
push
cmc
jns
dec
cli
fs
iret
sub
les
fists
loop
and
fimull
subl
ret
push
outsl
test
mov
mov
jo
mov
lahf
lock
and
cmc
fisubs
mov
adc
in
fcmovnb
sub
push
mov
rclb
mov
cmpsb
adc
xor
cmc
dec
cmp
push
cmp
int
das
pop
dec
jg
xchg
mov
push
jmp
cmp
and
jl
loope
sbb
cwtl
xor
or
mov
mov
addl
or
xchg
sbb
jnp
std
sub
and
pop
xor
add
jmp
mov
cld
nop
lods
or
or
es
out
jae
aas
test
add
push
cs
test
notb
mov
sbb
or
and
aaa
loopne
cmpsl
push
mov
xchg
stos
jl
xor
cld
lcall
sbb
int
std
sbb
dec
loope
dec
jl
dec
sbb
rcrb
jmp
sbb
mov
jg
jmp
loop
mov
test
ss
push
ja
push
mov
nop
or
add
inc
jmp
enter
icebp
push
outsl
or
int3
xchg
cmp
dec
push
mov
add
or
insl
fsubs
jmp
popa
push
mov
les
inc
bound
shlb
and
cwtl
xor
test
fcmovbe
jl
xchg
int
sbb
sub
ljmp
imul
js
clc
xchg
nop
out
sub
cli
addb
mov
dec
or
rol
pushf
out
adc
aaa
push
ret
fbstp
xchg
push
mov
mov
mov
sub
loop
jne
loopne
adc
ja
hlt
lcall
jmp
iret
add
movsb
mov
nop
lods
push
xchg
jle
shrb
out
ret
pop
aas
sbb
dec
lret
dec
pop
js
loopne
push
pop
cmp
aaa
mov
push
sbb
xor
test
mov
dec
sub
bndstx
mov
inc
ror
mov
outsl
lcall
in
fsub
and
jmp
or
xchg
sbb
and
add
xchg
cwtl
pop
and
arpl
pop
mov
push
fsubrl
push
in
pop
or
or
cmp
mov
dec
nop
xor
es
cmpsb
pusha
add
aad
jnp
data16
dec
adc
mov
aam
cmc
sub
push
push
inc
push
adc
leave
or
mov
les
or
int3
jecxz
adc
ss
shrl
or
lods
scas
dec
pop
inc
pushl
inc
lods
mov
adc
inc
loope
ret
or
add
ljmp
sbb
lahf
cmpsb
inc
push
add
fiadds
sub
inc
sbb
sti
jo
mov
lret
mov
bound
scas
or
mov
push
ds
cmp
cli
cmp
cmpsl
fcomps
pushf
inc
scas
add
mov
cmp
pop
jb
pop
push
inc
lea
fwait
adc
inc
loope
test
dec
lock
fbstp
pop
cmp
stos
cmp
adc
mov
loope
adc
and
mov
pop
sub
mov
push
mov
add
cltd
adc
cmp
pop
popf
or
test
movsb
lds
test
mov
imul
sub
mov
test
aad
popa
xor
sub
jmp
popa
mov
add
xor
ret
aam
stos
jle
out
xchg
prefetcht0
imul
xlat
push
adc
ja
add
clc
sbb
mov
and
cmp
dec
push
int3
mov
insb
jl
inc
adc
add
pop
aam
rcrl
sbb
sub
les
rorb
pop
xchg
xor
test
pushf
je
repz
jg
sbb
and
enter
divl
jbe
cmp
and
fiadds
and
in
push
sbbb
sbb
pop
mov
xchg
sbb
fistpl
or
movsl
inc
dec
out
push
arpl
not
pop
cltd
fcoms
and
icebp
add
push
sbb
dec
fldcw
or
adc
adc
or
or
xchg
pop
rolb
or
sbb
xchg
sub
mov
adc
mov
cmp
mov
adc
ficoms
and
sbb
lds
jge
inc
das
in
pop
scas
sti
imul
xchg
push
xor
sbb
adc
imul
loop
dec
and
mov
cmp
or
inc
cmp
or
pop
vprotd
daa
leave
lcall
lret
add
fwait
insl
pushf
outsl
pop
loopne
nop
aad
cmp
cmp
ret
cli
sahf
jb
pop
add
push
out
add
add
xchg
sbbl
sbb
clc
std
and
push
daa
xchg
ret
jmp
je
scas
lahf
lahf
mov
xchg
fstpl
cmp
mov
jecxz
aaa
add
lcall
mov
mov
or
adc
repnz
push
cli
xor
adc
push
lea
fidivrs
inc
cld
pushf
test
lea
lods
push
jl
sub
xchg
icebp
ficompl
sarb
xchg
dec
push
push
xchg
cmpsl
insl
or
xor
adc
outsw
fnstcw
or
cmpl
xor
adc
je
imul
xlat
mov
jo
ss
mov
mov
jbe
es
xor
push
js
bound
int3
xchg
in
adcb
mov
add
xchg
mov
cmp
cld
aam
call
pop
adc
dec
mov
leave
insb
aas
xchg
das
sbb
mov
call
pop
js
outsb
ret
cmp
testl
and
jbe
xchg
dec
xchg
xchg
cmp
adc
shl
mov
or
push
out
sub
add
push
xchg
xchg
or
xor
adc
loope
jae
inc
div
popa
pop
in
leave
lcall
jp
daa
std
add
push
sub
push
ficompl
xor
sub
or
inc
mov
xor
xchg
in
mov
insb
pop
or
mov
mov
test
push
rolb
icebp
sub
push
mov
xchg
shll
ffree
testl
xchg
sub
pushf
sahf
jle
movsb
addb
sub
aam
cmp
setp
push
and
lcall
fsubs
mov
test
xor
test
inc
loopne
add
test
sbb
cmp
push
jbe
xchg
mov
pushf
adc
andb
scas
into
or
sbb
scas
iret
jl
shrl
push
jnp
mov
inc
mov
sub
xchg
out
jmp
push
pusha
add
cli
mov
sub
push
or
mov
aas
mov
sbb
adc
sbb
or
jecxz
pop
es
outsl
imul
adc
test
xor
xchg
jp
stc
xchg
es
icebp
and
orb
addl
cmp
dec
sbb
and
push
mov
mov
pop
dec
int3
inc
cwtl
loop
dec
nop
aaa
cmc
scas
clc
ljmp
push
daa
add
and
sbb
lock
push
pop
mov
repz
cmc
dec
lret
nop
fwait
push
daa
inc
pusha
stc
pop
in
add
ja
iret
push
xor
sub
pop
cwtl
inc
arpl
push
out
mov
lahf
mov
dec
ss
and
cli
or
pop
and
mov
das
jp
jo
bound
je
or
lret
sbb
insb
clc
imul
adc
in
imul
outsl
mov
fmull
add
cmp
cmp
jmp
addl
jmp
ljmp
adc
aaa
pop
cmp
jno
jb
inc
xchg
pop
mov
xchg
inc
and
or
sarb
test
push
aad
mov
clc
pop
mov
push
push
jo
ss
xchg
sub
js
push
std
test
movsl
jp
add
inc
lea
or
ss
inc
stos
mov
mov
jo
pop
mov
scas
inc
popw
rcrb
push
and
clc
add
or
mov
aam
out
xchg
jge
popa
fists
lods
adc
mov
out
pop
clc
lock
jns
or
inc
mov
and
cmp
push
sbb
mov
or
jmp
mov
hlt
mov
pushf
add
and
add
adc
sub
adc
sbb
fs
in
pusha
jbe
loopne,pn
out
dec
jp
sbb
jle
lret
es
imul
mov
std
mov
sti
inc
xchg
sbb
pop
cld
cs
or
sbbb
mov
test
jmp
subb
gs
dec
inc
jle
cli
inc
pop
lods
enter
sti
imul
and
jno
push
add
loop
mov
std
adc
cmp
push
adc
push
out
and
rolb
lret
loopne
shrl
jge
movsl
sub
jmp
add
xchg
notb
lcall
popf
rol
sysenter
arpl
ret
mov
popa
gs
cmp
clc
xor
scas
mov
rorb
bound
hlt
dec
mov
mov
adc
sbb
dec
mov
dec
fsubp
loope
dec
push
mov
cmp
shlb
adc
loop
pop
adcb
sar
or
xchg
inc
push
cs
or
xchg
push
mov
or
lods
pop
cmp
inc
call
lock
insb
push
mov
scas
adc
pop
cmp
xchg
push
xchg
gs
stc
leave
push
lcall
add
or
xor
mov
adc
dec
and
test
xorb
bnd
lock
mov
mov
and
test
xchg
mov
icebp
mov
dec
push
pop
inc
cmp
dec
lea
push
or
shrb
mov
adc
outsb
pop
push
jne
pop
stos
xor
outsl
mov
sbb
adcl
ret
test
pop
loopne
test
jmp
push
faddl
sbb
gs
das
imul
inc
or
stos
divb
inc
lods
push
jp
fwait
push
enter
cmp
xor
xor
push
in
sbbb
xor
sub
adc
push
loop
sub
popa
lahf
in
sbb
inc
xchg
aam
das
jno
data16
pop
cmp
test
xchg
test
fs
xchg
and
add
popa
lods
in
jle
mov
jle
shrb
ja
jge
push
pushf
sbb
cmpsb
inc
jle
add
mov
fwait
subb
or
mov
sbb
pop
loopne
pusha
inc
jle
leave
ja
lret
jno
insl
mov
subb
add
inc
fsub
adc
int3
add
jle
lods
pop
repz
lock
pop
push
sbbl
enter
aad
int3
pop
sub
pop
cmc
scas
and
xlat
dec
mov
jmp
push
xorb
fists
out
cs
or
imul
pop
int
mov
push
lcall
inc
inc
lock
sub
lock
cli
mov
cmp
push
and
cmp
aas
jnp
add
leave
lea
aad
mov
add
jmp
mov
inc
jne
lods
addl
cmp
cmp
lock
or
iret
es
aas
push
mov
outsb
add
daa
aad
inc
fwait
dec
xchg
call
rcl
mov
je
sbb
inc
pop
jge
push
adc
cmpsb
jecxz
pop
je
cmp
mov
in
xchg
and
or
inc
rclb
imul
jmp
sub
fisubrs
cld
insb
mov
cmp
push
mov
sbb
xchg
add
cmc
push
sub
jmp
mov
mov
add
cli
andl
pop
rolb
adcl
and
inc
lcall
dec
add
insb
fwait
ds
mov
adc
ret
mov
mov
sub
clc
push
shll
dec
push
lahf
push
pop
sub
cld
push
aam
add
or
nop
loop
pop
or
flds
sbb
pop
enter
sbb
dec
cmpsl
cmp
lcall
into
push
std
icebp
dec
test
call
stos
fcoml
call
pop
js
ret
cmp
scas
mov
jbe
repnz
out
js
xchg
mov
sbb
int3
mov
push
adc
pop
aam
mov
cmp
add
mov
lcall
rol
in
mov
rolb
scas
call
scas
xor
pop
pop
out
loop
push
or
arpl
push
clc
add
fsubr
mov
xchg
hlt
faddp
mov
cmp
test
sahf
and
repz
cmc
dec
push
jecxz
inc
push
lcall
sub
lret
addb
shl
test
xchg
adc
and
ret
add
or
push
mov
sub
cmpsb
sahf
mov
stos
adc
mov
pop
jmp
push
fs
test
leave
push
and
pop
js
daa
lock
xor
dec
ja
sub
jl
pop
dec
inc
aaa
inc
imul
adc
jle
lds
inc
jns
not
sub
lcall
sti
adc
movsl
ret
nop
ljmp
inc
mov
add
jp
insb
ljmp
xchg
dec
movsb
je
rolb
push
sbb
mov
and
push
sub
sub
xor
scas
rcl
xlat
inc
div
push
xlat
sbb
outsb
pop
insb
mov
or
mov
sbb
xchg
insb
or
in
test
mov
push
pushf
xchg
mov
out
mov
push
jnp
mov
loopne
mov
movsb
sbb
inc
subl
loope
or
xor
setle
ja
jl
push
lcall
nop
call
mov
cmp
pop
and
lcall
lahf
mov
sahf
xor
aas
mov
mov
hlt
dec
pop
push
ljmp
xor
jnp
movsl
dec
push
sbb
out
push
mov
inc
push
pop
les
add
dec
loopne
aam
sbb
pop
ss
ja
test
inc
bound
mov
adc
cmpsb
mov
xchg
movsb
jnp
and
cmp
add
test
shl
out
test
rorl
sub
mov
subl
sbb
jae
lock
loopne
dec
cmovl
lds
lea
insl
rcl
adc
loope
jle
cwtl
push
ficomps
xchg
dec
in
mov
fsubr
das
inc
ljmp
xchg
lcall
xchg
stos
add
pop
jge
in
mov
add
inc
cltd
and
xor
jmp
lcall
pop
in
ror
cli
add
outsb
fidivs
dec
sub
mov
out
push
adc
jo
dec
xor
cli
dec
dec
dec
mov
loope
out
outsl
loopne
push
pop
add
mov
cmp
cmp
jb
clc
inc
rcrl
in
xor
add
mov
jge
imull
aas
sub
das
lods
subb
hlt
sbbl
pop
mov
push
mov
xchg
mov
out
jnp
jne
lods
mov
xor
mov
in
rcrb
stc
xor
mov
add
fsubs
cmp
add
push
lahf
cmp
adc
cmpsl
sub
addr16
es
mov
mov
pop
xchg
lahf
push
push
xor
insl
lods
jecxz
lahf
fcompl
push
adc
xchg
imul
aad
sub
shl
mov
imul
and
jbe
cwtl
movsb
das
lcall
jmp
or
ret
and
or
or
movsb
inc
clc
movl
imul
cmpsb
mov
lret
and
lods
pop
push
popa
inc
xchg
xor
dec
dec
shrl
add
add
cs
into
xor
push
mov
push
rorb
sbb
cmp
pop
mov
into
hlt
les
aaa
je
scas
icebp
add
xchg
xchg
enter
rclb
add
leave
cmp
mov
jne
xchg
xchg
add
test
mov
inc
sbb
and
and
add
push
sahf
xchg
inc
push
mov
sbb
ret
lahf
mov
iret
movsb
addb
or
pop
inc
and
mov
sar
adc
out
cmp
sub
mov
pop
push
sti
movsl
xchg
test
lods
add
sub
test
aas
cmp
data16
lahf
sub
push
mov
and
pop
call
inc
jecxz
jle
cs
sahf
popa
scas
pop
jge
lds
stc
into
cli
gs
rolb
in
subb
test
hlt
xchg
jnp
sub
mov
pop
adc
ljmp
jecxz
push
pop
mov
testb
std
pop
sbb
sub
mov
jg
xchg
xor
in
adc
movsl
fnstenv
popw
mov
xchg
jnp
repz
pop
dec
test
sub
xor
bound
xchg
cmp
lock
push
popf
mov
js
jp
inc
lahf
adc
test
inc
add
jl
pop
sbb
pop
dec
hlt
push
iret
fs
loopne
enter
jle
add
add
sbb
lods
cmp
push
insl
cmp
fcoms
loope
aaa
adc
jnp
lock
jge
xor
jmp
aad
push
pop
fdivrl
ficoms
mov
or
add
insb
adc
mov
das
shlb
inc
jp
int
push
push
lock
mov
xchg
push
xor
and
xor
xchg
pop
fcomps
sub
lret
mov
jg
add
fldcw
push
ljmp
add
pusha
rorl
cmc
pop
push
push
xchg
jno
xchg
add
shrb
scas
dec
jnp
sub
add
sahf
dec
in
leave
cmp
dec
mov
sub
xor
push
mov
xchg
or
mov
push
jno
sub
mov
das
mov
sbb
stc
push
icebp
into
mov
pop
mov
fwait
jl
ss
sbbl
in
cli
icebp
push
xchg
mov
call
lds
mov
cmp
sbbl
sbb
sub
lret
pop
sbb
mov
add
add
pop
mov
daa
dec
iret
mov
test
popf
dec
adc
shrl
stos
fstpt
loopne
or
lods
or
cmp
mov
insb
test
xchg
sbb
outsl
scas
les
inc
enter
mov
mov
in
sub
loope
dec
in
sti
dec
mov
scas
addr16
xor
xchg
cmp
and
mov
mov
mov
icebp
cmpsb
jo
das
mov
push
adc
pop
inc
xchg
mov
jmp
lods
dec
aam
inc
inc
xlat
sub
sbb
fldcw
mov
pop
cmpsb
pop
imul
or
imul
add
mov
jbe
pop
outsb
xchg
add
int3
adc
rcl
fildll
lds
adc
aad
and
pop
or
xorl
ljmp
shr
add
dec
test
roll
leave
nop
pop
lea
or
je
inc
jg
jle
xchg
lock
add
rolb
add
jp
scas
sbbl
sbb
cmp
add
mov
fdivrl
das
pop
xchg
addr16
test
or
xchg
movsl
pop
pop
call
xlat
sti
pop
mov
dec
stc
jp
sbb
cmp
fidivrl
jns
test
ss
mov
nop
cmc
test
scas
shll
cmp
add
test
jmp
pop
in
icebp
fdivrl
jg
add
add
mov
sbb
repnz
out
jno
test
lds
add
cmp
mov
scas
jo
cmp
inc
mov
in
jp
dec
push
rcrb
pop
inc
push
in
adc
subb
loope
pop
jmp
mov
jp
add
imul
xchg
xchg
mov
cs
subb
adc
pop
jmp
insl
jne
test
ret
add
pop
push
jle
mov
add
mov
add
hlt
add
mov
mov
mov
int
cli
andl
xor
divl
addb
push
push
xchg
xchg
popa
mov
sbb
cmc
push
adc
jne
adc
hlt
loope
sub
decb
fisubl
lahf
das
daa
loope
mov
repnz
ja
out
sub
sbbb
sbb
rcl
mulb
lea
mov
sbb
aaa
popl
push
daa
jns
movb
fwait
add
roll
jo
or
mov
push
repnz
or
mov
mov
je
push
pop
aad
lret
lea
je
mov
pop
lock
loop
sub
push
outsb
aam
and
es
rcrb
test
sub
cwtl
repnz
cmpl
xchg
ret
inc
lret
cmp
call
xchg
rorl
cmpsl
sti
or
push
or
sub
mov
inc
mov
mov
shlb
pop
push
mov
ror
sbb
movsb
xchg
xchg
cs
push
xchg
adc
push
or
fs
dec
lea
test
jge
jmp
xchg
repnz
jle
outsl
jecxz
fwait
out
inc
clc
push
adc
pop
mov
popa
nop
fs
mov
jb
movsb
sub
mov
pop
sbb
xor
into
stos
cltd
jmp
or
sbb
icebp
sub
aaa
sarb
inc
or
adc
pop
push
aad
push
out
movsl
sub
adc
out
lock
jecxz
idivb
xor
ret
imull
jae
sbb
test
inc
lcall
jg
push
inc
pop
fldl
cmp
repz
xchg
adc
inc
sbb
mov
cmp
adc
add
jle
mov
sub
dec
xchg
pop
pop
mov
aad
ds
pusha
aam
adc
or
lods
mov
mov
dec
xchg
fsubrl
ret
pushf
add
xchg
mov
add
sub
popf
sub
and
inc
inc
mov
adc
decb
bound
xchg
inc
mov
dec
cmpsb
xchg
sbb
xorb
mov
push
pop
dec
push
in
loope
sbb
jmp
xchg
je
mov
add
xor
mov
arpl
add
jne
lods
mov
inc
dec
fwait
jle
jg
mov
xor
push
loopne
scas
arpl
enter
mov
sarb
das
pop
inc
mov
jmp
sub
dec
fcompl
ret
inc
fisttpl
jecxz
push
cmpsl
scas
in
loope
ss
sub
mov
aam
jb
push
mov
scas
into
std
pop
aas
clc
pop
sub
and
sti
add
ljmp
inc
sbbl
or
xchg
mov
pmulhuw
xor
fcoml
mov
mov
ret
cmp
stos
aad
push
mov
movsb
arpl
idivb
add
pop
test
aaa
pop
aas
stos
xchg
cmpsl
in
dec
mov
jle
popa
and
and
popf
stc
cs
bound
mov
mov
loope,pt
pop
stos
xchg
sahf
adc
ds
ss
nop/reserved
push
and
mov
dec
js
into
and
push
ljmp
insl
xor
shrb
xor
int
xchg
xchg
pop
and
push
add
mov
mov
movsb
cmpsb
int3
enter
cmp
fisttps
mov
jmp
sbbl
fcoms
lods
aad
or
aas
notl
lea
dec
lods
push
rcrl
fwait
repz
sbb
aad
inc
adc
ret
jno
scas
push
mov
and
scas
loopne
xor
push
adc
or
adc
pusha
push
add
outsb
mov
xchg
mov
inc
xlat
es
mov
push
jl
pop
pop
push
mov
pop
jo
bound
add
frstor
push
bound
je
icebp
mov
jno
inc
cmp
js
adc
andl
sahf
js
ss
pop
jg
ds
es
pop
cmp
js
push
add
test
bound
push
icebp
clc
pop
cmc
push
test
mov
xor
dec
fnstenv
fsubrl
mov
adc
aaa
dec
movsb
int3
nop
pop
mov
iret
jo
add
jno
sub
std
test
imul
sub
push
lock
testb
loop
mov
mov
in
nop
dec
push
mov
fsubp
cs
addr16
adc
mov
gs
cmp
xchg
orb
jmp
cwtl
imulb
mov
lret
jb
sub
xchg
enter
mov
orl
mov
jno
shlb
jp
sahf
aaa
idiv
cmp
movsl
lahf
aam
push
ljmp
ret
or
cmp
mov
adc
push
mov
jecxz
or
outsb
je
mov
mov
clc
icebp
pop
inc
dec
or
mov
add
mov
and
jge
cltd
shll
or
int3
fsubp
inc
in
aam
lret
sahf
pop
push
push
ljmp
icebp
cmpb
pop
lahf
and
xchg
xchg
inc
mov
jle
xor
push
movsb
subb
shll
sbb
mov
push
imul
sub
inc
push
mov
and
or
lret
pop
fisubrl
int
lods
push
movsb
out
mov
lahf
jmp
inc
cwtl
dec
sarb
jmp
sbbl
in
push
in
xchg
loope
lea
adc
addr16
je
clc
cmpsl
hlt
shrl
inc
fcmovnbe
push
xlat
test
dec
inc
xchg
jno
push
pop
rcll
push
pop
pop
cli
sub
mov
sub
push
mov
push
mov
fisubrl
push
sbb
push
sub
lahf
jmp
out
mov
daa
dec
out
sub
sub
push
mov
push
imul
push
sbb
mov
ret
nop
add
enter
lret
pop
mov
jp
mov
jl
outsb
das
xor
mov
shrl
scas
test
pop
fisttpll
stos
icebp
imul
insl
push
xchg
mov
inc
mov
mov
lods
in
mov
idivw
xor
outsl
inc
mov
jl
sub
inc
adc
mov
test
sub
pop
out
lds
movsl
mov
inc
scas
xlat
fsubr
mov
cmp
pusha
pop
dec
inc
mov
das
sbb
push
lret
mov
dec
mov
inc
das
push
addr16
push
addb
fsubrl
xchg
sbb
xchg
push
cli
roll
lods
scas
pmullw
push
icebp
dec
sub
xchg
je
jp
lods
xchg
mov
push
mov
pop
jg
cli
loop
add
sbb
dec
add
or
cltd
cmp
and
pusha
push
mov
mov
adcb
mov
pop
mov
adc
je
push
and
push
mov
rolb
inc
fxch
sub
pop
or
xor
lret
popa
bound
jmp
xchg
bound
pop
lea
or
sub
test
leave
bnd
push
dec
mov
xor
pop
and
sub
jp
shll
loope
jbe
aaa
fcmovu
jl
pop
cmp
lock
pop
cmpsl
ljmp
xchg
js
clc
add
lret
lret
rcrb
outsb
rolb
or
push
xor
dec
clc
shrb
scas
pop
fldl
lret
lock
pop
iret
incb
dec
mov
xchg
sahf
cltd
mov
fcoml
push
jmp
dec
mov
or
add
sub
pushf
clc
push
mov
jmp
push
lcall
jns
lea
mov
das
pop
mov
cmp
inc
mov
aas
xchg
and
fadds
mov
in
cltd
insb
mov
mov
inc
inc
jns
add
rol
adc
xor
lods
mov
cmp
in
and
test
sub
add
cmp
ljmp
insl
sub
mov
out
out
or
xor
incb
or
or
add
adc
xor
xchg
pop
loope
inc
mov
cmp
add
rsqrtps
jge
rorl
loop
out
ret
in
xor
sbb
es
popa
xchg
sbbb
clc
pop
lret
les
push
jmp
jge
test
cs
pop
push
or
sub
inc
mov
push
jo
xor
mov
push
mov
jne
lock
pop
mov
cmc
movsb
mov
cld
push
add
js
call
mov
lock
mov
sub
test
pusha
inc
mov
xor
xlat
lahf
push
clc
inc
adc
push
mov
jbe
mov
aam
lock
mov
cltd
enter
mov
cmp
mov
cltd
sbb
or
push
ds
outsl
aaa
jne
mov
xchg
sbbl
sbbb
jmp
and
mov
push
sbbl
and
scas
das
cs
add
test
cmp
ljmp
out
out
divl
pop
ficoml
xchg
xchg
push
inc
rclb
inc
dec
int
inc
pop
cld
cmp
sbb
cmp
test
mov
lods
sbb
push
insb
jg
movsl
lcall
addb
add
test
pusha
pop
jnp
push
aam
es
mov
xor
data16
stos
sub
std
dec
je
adc
mov
incl
mov
hlt
mov
sub
aaa
lcall
dec
inc
sub
mov
sub
fwait
mov
pop
lahf
adc
mov
cld
push
xor
xchg
add
pop
sbb
imul
push
int
push
sub
daa
jl
cmp
jbe
and
and
mov
push
js
ss
push
movsb
ror
clc
pop
cwtl
push
sti
mov
ficoml
lock
xchg
test
enter
mov
loopne
test
decl
sbb
xchg
lock
cli
sbb
adc
jmp
imulb
sub
test
jge
fisttps
pop
dec
cld
add
lret
sbb
mov
jmp
jg
out
xor
movsl
push
sarl
xchg
adc
ficoms
xchg
xor
repnz
mov
sbb
mov
mov
mov
je
or
insb
jbe
add
rcr
push
mov
mov
dec
push
cld
pop
scas
lock
aam
adcl
xchg
jno
shlb
shll
xchg
inc
scas
push
jae
cmp
sub
les
pop
or
aas
inc
rcrb
add
xor
and
or
jb
inc
and
bound
sahf
pusha
sbb
or
daa
mov
push
loopne
pop
xor
push
icebp
sbbb
or
insb
je
add
and
cmp
enter
mov
mov
fisubl
call
sbb
xor
jno
sbb
mov
loopne
dec
mov
sub
in
jl
dec
int
cli
inc
je
jnp
sbb
xor
repz
pop
inc
adc
jmp
arpl
jo
sub
std
push
fdivl
mov
inc
mov
dec
jae
push
les
iret
pop
adc
andl
adc
fsubr
xchg
xor
dec
push
dec
cmpsb
jae
loope
pop
mov
scas
aas
dec
mov
jbe
out
and
in
aam
mov
add
xor
aaa
pushf
mov
andl
test
sbb
push
cmp
pop
pop
loop
imul
test
mov
rorb
subb
mov
mov
lock
fs
and
inc
push
addr16
xor
or
in
xor
rcrb
testl
push
aam
push
mov
dec
pop
and
ds
pop
jl
rcr
arpl
std
dec
mov
jg
mov
sbb
jno
push
xor
sarb
loopne
mov
xor
daa
pop
cmp
lgs
sub
xor
xor
cmpsl
inc
adc
jo
jp
and
dec
or
fwait
jmp
sbb
mov
push
push
cmp
scas
add
imul
addr16
cli
mov
mov
dec
movsb
mov
repz
sub
pop
sub
jecxz
jae
out
add
push
int3
pop
es
aas
scas
popa
movsb
movsb
mov
add
adc
push
mov
and
js
test
or
mov
ss
adc
adc
xlat
add
ret
outsb
cmpsl
inc
jmp
out
gs
pop
movsb
add
jo
push
sbb
bts
xor
pop
jnp
out
and
cltd
jbe
sbb
pop
int
loop
popa
sbb
insb
mov
mov
pushf
int
clc
mov
and
mov
movsl
fisttps
andl
xchg
mov
and
push
sub
je
ret
js
aam
jno
stc
cld
xchg
outsl
test
mov
inc
cld
ljmp
cs
pop
sahf
pushf
mov
pop
inc
outsl
cmp
inc
sbbl
push
addb
and
fcmovu
jbe
mov
insb
fs
or
idivb
shr
xchg
pop
into
xchg
stos
pushf
inc
scas
pushf
jns
jmp
mov
lods
movl
addl
or
push
xchg
sbb
mov
test
movsl
js
repnz
adc
mov
pushf
bound
insl
cmp
call
mov
or
inc
inc
adcl
test
cmp
jmp
or
or
push
mov
cli
mov
jecxz
fldl
sahf
xor
dec
loop
imul
dec
in
fcmovb
mov
lock
mov
sbb
hlt
je
pop
clc
pop
decl
cmp
lcall
jbe
push
ret
jecxz
outsb
movsb
adc
imul
pop
fsubl
aad
jnp
imul
push
outsl
scas
xor
push
loop
jl
movsb
xchg
pop
stos
xor
call
add
jp
sbb
popa
scas
add
cmp
fldenv
mov
arpl
jecxz
enter
lret
flds
aas
or
inc
sarl
inc
dec
adc
in
mov
std
in
xchg
mov
mov
mov
add
and
ret
and
xchg
jl
pusha
orb
int3
mov
sbb
xchg
xor
out
repnz
xor
jbe
mov
js
sahf
sub
jecxz
xchg
mov
js
shr
cmc
dec
cmc
xchg
je
jbe
inc
cli
inc
cld
and
repnz
and
mov
cmpsb
das
or
pop
imul
icebp
scas
dec
mov
mov
xchg
mov
cmc
inc
xor
gs
frstor
sahf
mov
add
push
add
jle
xchg
sbb
sub
lea
mov
dec
add
or
xor
aad
lret
mov
fdivrl
mov
and
jnp
jl
in
sbb
mov
aad
enter
clc
jecxz
repnz
fcoms
sub
in
loopne
push
call
fcoms
and
and
sbb
dec
aam
mov
xchg
xchg
and
leave
xor
negb
fbld
mov
lret
cmp
push
pop
lds
jge
fwait
xor
stos
and
or
ja
insb
xchg
rcll
sub
push
pushf
xor
test
mov
pop
jl
dec
xchg
mov
mov
mov
mov
inc
or
pop
aas
shr
push
fcoml
lahf
dec
ret
enter
mov
jo
add
ja
pop
jle
mov
inc
popf
mov
rorb
into
mov
lcall
mov
dec
adc
clc
cmc
mov
pop
jns
enter
mov
fimull
xlat
xor
dec
cli
cmp
cs
mov
mov
pop
fildl
aad
out
out
mov
push
insl
ret
xor
movsb
mov
test
sbb
jge
jno
dec
fdivs
adc
sub
lret
add
int
movsb
xorl
add
push
cmp
inc
ljmp
lock
movsl
or
cs
xchg
mov
cmp
push
leave
ret
push
fwait
add
push
cmp
adc
push
jge
xor
fsubl
xor
pop
lret
cmp
push
pusha
jbe
xchg
sub
lds
bound
sbbb
and
jl
insb
lahf
cmp
lea
fsubs
ss
stos
push
sub
out
bound
iret
loopne
out
pop
sbbl
aas
sub
add
mov
sarb
daa
mov
pop
xchg
sbb
mov
call
sub
into
push
clc
mov
jl
call
addr16
popa
sub
sub
shl
or
pop
cmp
pusha
jae
mov
add
test
sbb
sbb
inc
mov
xorl
cs
std
pop
sbb
adc
fisubs
jnp
mov
xor
jl
xchg
sarb
sbb
or
mov
push
fcmovnb
iret
clc
mov
mov
adc
lret
lock
loopne
jg
incb
sbb
mov
sbb
imul
in
cld
xor
add
mov
addr16
xor
or
and
jle
jb
ss
fcomps
or
mov
and
jo
fdivrp
push
xor
into
push
mov
neg
sbb
push
adc
push
inc
jg
inc
add
or
jl
adc
mov
add
adc
cli
xor
pop
call
jl
jmp
adc
jno
in
mov
out
adc
xchg
shll
rolb
push
lea
nop
clc
or
push
scas
test
jne
inc
sbbb
xchg
pushf
cs
push
sbb
into
leave
rclb
pusha
jg
test
push
push
lahf
enter
cmc
xchg
cmp
jo
dec
js
out
push
sbb
push
je
add
add
inc
or
lds
sub
jp
cmpsb
sbb
xchg
push
xlat
sbb
adc
or
xor
mov
mov
cltd
fsubs
mov
std
mov
and
xchg
fidivs
or
insb
rorl
jmp
inc
lret
movsl
cmc
jg
jle
add
into
aad
insb
fwait
cmp
jb
cmp
jo
inc
cltd
scas
xchg
jns
sub
adc
mov
popa
xchg
pop
or
das
add
sar
mov
cs
push
cs
inc
pop
shl
mov
lahf
pop
add
inc
cwtl
pop
nop
out
call
lods
and
xchg
test
in
lahf
fwait
push
in
mov
xor
loop
scas
test
test
insl
pop
dec
cmp
push
xchg
insb
jp
mov
push
shrl
test
loope
pop
shlb
mov
and
xchg
push
adc
add
bound
lcall
jle
or
sbb
lods
ds
mov
divb
or
xor
addl
or
repz
hlt
sub
inc
inc
outsl
mov
xchg
loope
xchg
cli
lahf
xchg
push
ds
mov
and
icebp
test
rcll
jo
fiadds
fwait
mov
sahf
lock
lahf
loopne
pop
repz
lock
dec
loope
jp
xchg
ds
pop
aad
hlt
lcall
add
pop
or
sbb
cmc
fldcw
jb
cvttps2pi
push
loopne
push
mov
nop
push
cmp
jp
scas
stos
mov
cmp
mov
cld
orl
int
aaa
fs
fwait
lret
sub
hlt
pushf
ret
data16
cs
adc
loop
cwtl
add
out
xchg
cwtl
xor
and
fists
xlat
vmovsldup
and
test
aaa
and
mov
inc
and
fidivl
fwait
inc
add
or
push
mov
insb
js
outsl
hlt
xor
mov
or
scas
mov
cld
adc
cmp
sahf
and
notl
pop
xchg
stos
push
push
js
nop
imul
iret
push
cmpsb
lcall
xchg
addr16
dec
sbb
mov
dec
dec
dec
jp
mov
in
dec
jbe
sbb
adc
push
or
fimull
mov
loope
repnz
or
icebp
pop
pop
fimull
push
xchg
mov
js
cmc
iret
popa
mov
adc
pop
mov
mov
lret
pop
xor
sub
adc
pop
inc
ljmp
loopne
fdivs
and
lock
pop
ds
aad
pop
dec
cld
loop
ja
and
inc
mov
push
incl
add
sbb
add
cmp
add
jno
mov
iret
test
and
lcall
pop
dec
push
ljmp
adc
xchg
out
stos
xchg
jo
or
xchg
mov
lods
out
shrl
hlt
stos
lahf
jg
lods
pop
or
movsb
dec
mov
stos
pop
sbbb
or
xor
inc
in
adc
jmp
sahf
shll
dec
js
adc
sbb
jae
stos
repnz
and
inc
les
fsubr
jbe
das
inc
imul
add
popa
dec
xchg
stos
call
or
cmp
xchg
mov
pop
sarl
fisttpl
arpl
das
mov
or
clc
sbb
add
jmp
sbb
mov
pushf
daa
xor
mov
sbb
mov
lcall
ja
rorl
dec
jl
pusha
test
xchg
std
or
inc
call
dec
aad
scas
loope
dec
jae
mov
scas
clc
aam
stos
rcl
mov
cltd
dec
pop
adc
xchg
lret
aad
aad
mov
cmp
add
scas
decb
cmp
lcall
xchg
mov
mov
sbb
push
mov
popa
stos
inc
or
push
lcall
xchg
call
popa
in
xor
pop
and
jl
pop
je
mov
xchg
pop
and
xchg
sbb
pop
cmc
add
xor
mov
push
sbb
jl
jge
push
adc
pop
mov
out
loopne
test
adc
icebp
dec
xor
in
fisubl
fadds
mov
int3
jl
aad
pop
cmp
mov
cmp
add
aad
push
stos
fistl
sub
out
ficoml
scas
xchg
add
mov
dec
or
std
mov
push
sub
push
mov
mov
inc
rolb
nop
ret
movsb
aam
mov
inc
test
xchg
lock
or
nop
push
cmpsl
test
jecxz
leave
xchg
pop
jns
movsl
es
test
add
mov
jo
push
addb
push
and
dec
int3
cmpsb
push
and
fidivrs
jae
push
adc
inc
and
mov
push
push
mov
ss
clc
into
fadds
adcl
jge
xchg
jbe
shrb
or
test
add
insb
jne
in
stos
mov
rol
imul
and
or
lret
andb
sbb
push
scas
ss
cmc
push
pop
pop
cmp
and
mov
shll
fmull
jp
push
dec
cmp
in
lods
pusha
movsl
push
in
add
sbb
sbb
rolb
shlb
loopne
int3
mov
inc
rclb
cmc
icebp
dec
insb
fs
sbb
inc
mov
pop
stc
call
dec
test
xor
jmp
mov
xchg
pop
cmpsb
add
jbe
les
adc
pop
clc
or
or
mov
lahf
insb
loop
leave
dec
xchg
insl
or
js
arpl
or
int3
mov
lock
cmpsl
fwait
aaa
arpl
xchg
bound
xchg
sahf
add
or
sbb
dec
dec
test
xor
mov
cmc
iret
or
inc
daa
addr16
sub
insb
in
pushl
sub
push
mov
jne
pop
dec
clc
xchg
jo
dec
loopne
or
stc
into
pop
adc
addl
scas
lea
adc
cmpsb
ljmp
jle
stos
imul
jmp
dec
inc
xor
lods
xchg
sub
pop
imul
inc
mov
pop
loopne
mov
jle
mov
mov
mov
std
test
out
push
and
aam
test
push
pop
and
hlt
pop
inc
xor
lods
cld
dec
je
into
lock
in
and
leave
or
add
clc
xor
movsl
hlt
xchg
fnsave
loope
out
orb
and
xchg
lods
orl
insb
dec
das
test
lods
or
dec
out
inc
and
sub
sub
or
popf
add
ds
cmc
test
jp
testb
out
or
jno
cld
and
xchg
shlb
mov
mov
mov
iret
add
jle
mov
sub
adc
ds
shr
cmp
icebp
icebp
mov
xchg
lret
repnz
mov
outsb
and
xor
inc
xchg
sbb
fdivrs
aas
jge
in
call
stos
je
cwtl
add
mov
jo
push
dec
jp
or
clc
in
inc
es
mov
je
stc
add
mov
mov
push
inc
inc
xchg
pop
mov
and
xchg
mov
inc
mov
pop
xlat
andl
sti
xor
mov
jg
iret
and
mov
mov
jnp
or
cmp
mov
test
push
sahf
fmull
xor
lock
xchg
cmp
mov
rclb
into
adc
hlt
mov
sti
jp
rorl
aad
xor
push
cmc
mov
test
mov
adc
xor
cwtl
aas
sbbl
xchg
iret
ficompl
sub
movsl
popa
dec
pusha
aaa
enter
pop
out
cmp
jl
les
xchg
mov
adc
xor
push
xor
pop
add
xchg
push
lcall
jno
das
je
inc
cmpsb
push
cmpl
pop
outsl
jg
push
dec
dec
xchg
pusha
pop
and
clc
mov
mov
dec
dec
or
mov
xor
bound
xchg
outsl
cli
or
dec
xor
nop
adc
xchg
mov
ret
nop
loop
nop
inc
fstpl
push
mov
lods
push
jmp
push
int3
ficomps
lcall
sbb
loopne
outsb
mov
pop
pusha
inc
lcall
sbb
jl
mov
xor
push
jge
push
push
cmpsb
pop
shrb
lret
jb
add
or
and
or
nop
sahf
fs
add
orb
xor
add
aas
xchg
adc
cmpsl
add
lret
insl
or
mov
or
push
jno
jp
xchg
mov
mov
or
loopne
in
outsl
mov
lock
imul
imul
xlat
jmp
adc
insb
xchg
inc
pop
xchg
mov
dec
xor
mul
jae
and
mov
inc
cli
std
ret
leave
fucomp
js
lock
js
imul
fdivrl
jecxz
fsubr
push
lock
loopne
add
add
lds
cmp
and
insl
jmp
scas
add
ret
xchg
mov
and
lock
xchg
enter
jl
jecxz
sub
or
outsb
ljmp
and
aam
adc
mov
rorl
fcoml
cmp
pop
mov
lock
icebp
add
add
pop
xor
push
or
mov
mov
sub
popf
cli
pop
test
sub
mov
sbb
pop
aas
loopne
inc
or
in
or
or
mov
fsubl
movsb
les
test
xchg
shlb
stos
or
mov
fstpl
dec
dec
movsl
or
jmp
int3
stos
sbb
mov
stos
cmp
fbld
lock
loop
adc
cmc
jmp
fs
pushf
insl
paddsw
xlat
fbld
rorl
lret
sub
mov
pusha
lret
add
jo
and
imul
out
jno
hlt
or
xchg
pusha
mov
xorl
aas
jmp
bound
rorb
adc
add
jle
or
add
stc
outsb
out
ret
cmp
jne
and
rcl
in
push
push
dec
and
cli
inc
iret
jle
lods
inc
iret
bnd
or
aam
retw
pop
and
jl
sub
push
ja
xor
fisttpll
inc
loope
icebp
push
mov
mov
mov
mov
mov
out
cld
inc
cli
cmp
sub
sub
cmpsb
and
lea
fwait
sbb
cmpsb
mov
outsl
bound
add
push
data16
fiadds
or
bound
push
pop
cwtl
daa
add
loope
pop
cmp
jo
hlt
shrl
scas
clc
mov
pusha
daa
sahf
cmpb
add
out
gs
rolb
sub
daa
lret
jno
mov
mov
inc
sub
xchg
arpl
stos
ljmp
enter
add
insb
add
icebp
fbstp
mov
mov
add
inc
mov
adc
add
lds
lret
push
sbb
dec
mov
iret
fst
push
or
into
add
pop
pop
push
mov
xor
pop
push
hlt
ficoms
aam
bound
ret
loopne
fnsave
push
cltd
addr16
inc
mov
aas
into
dec
out
cld
adc
outsb
cmc
je
inc
dec
push
cmp
mov
fwait
out
sbb
mov
in
and
in
sub
mov
push
xchg
mov
push
lock
incb
xchg
loop
dec
popa
test
cwtl
ret
loope
add
fcmovnb
inc
test
nop
adc
push
mov
cmc
pushf
popl
fcompl
cmp
adc
pop
out
outsb
and
push
add
and
push
repz
jno
sbb
or
ret
or
adc
js
es
inc
add
or
aas
ficomps
filds
movsb
lret
adc
shlb
jle
xchg
js
shlb
push
pop
inc
pop
xor
insl
addb
mov
push
pop
into
mov
jmp
push
pop
mov
sbb
shrb
cmp
fildl
sahf
mov
xlat
inc
jo
and
jnp
jno
nop
imul
add
adc
mov
cmp
stc
stos
das
scas
sub
test
dec
xor
pusha
pop
or
xor
mov
jno
cmp
add
inc
push
stos
cwtl
cmpsb
xor
or
js
aam
dec
pop
lock
or
cltd
rclb
jbe
sbb
jg
shlb
aad
notb
xchg
mov
pop
sub
hlt
and
ja
jbe
dec
inc
push
pop
mov
testl
xor
leave
insl
addr16
js
out
roll
je
shrl
cld
xor
das
fcoms
push
ficompl
mov
pop
mov
xor
jne
sub
sarl
xorl
inc
sbb
ljmp
or
mov
call
out
je
jmp
or
adc
mov
adc
jnp
adc
imul
subl
loope
loopne
orb
push
gs
dec
je
insl
or
mov
xchg
push
jno
dec
push
enter
or
fiaddl
xchg
shl
dec
loopne
std
jecxz
push
test
repnz
imul
mov
repz
sbb
push
cld
out
push
mov
aaa
pop
jnp
push
push
jg
ret
mov
xchg
or
sahf
cmp
in
mov
push
sbb
xchg
adc
inc
pop
shlb
je
mov
mov
pop
dec
sti
movsl
aas
add
mov
sub
mov
push
scas
adc
js
sbb
sarb
jmp
loop
push
push
sub
jmp
insb
fstl
mov
es
out
pushf
rorb
call
pop
je
xor
fnstenv
jecxz
push
pop
out
adc
xchg
aam
pop
inc
mov
lea
scas
int3
js
xchg
dec
pop
jns
and
dec
inc
in
mov
inc
inc
jg
aam
call
push
inc
flds
aam
add
dec
mov
pop
jg
add
cli
addr16
mov
jecxz
adc
push
sbbb
subb
add
pop
test
inc
je
test
test
jmp
and
in
adcb
sbb
xchg
cmp
pop
filds
lock
inc
sub
cmpsl
aas
pushf
roll
ljmp
lods
xlat
push
mov
ss
popa
push
fcmovnu
loopne
rcl
in
mov
fimuls
xchg
add
sub
mov
xor
cmp
mov
cli
mov
mov
and
ljmp
jl
mov
cld
es
add
add
js
and
test
adc
sbb
lock
adc
adc
cmp
das
or
push
xor
ds
rorb
daa
lods
test
pop
jg
bound
pop
jecxz
pop
clc
mov
mov
mov
aad
nop
andb
jecxz
ss
mov
insb
mov
test
inc
shlb
dec
or
cmp
pushf
ret
or
cmp
dec
daa
mov
in
sub
and
dec
sbb
adc
lods
push
or
sbb
enter
scas
push
and
mulb
mov
mov
xchg
rorl
icebp
and
push
xchg
xchg
pusha
sub
mov
and
test
jl
incb
pop
mov
mov
cmc
iret
ret
adc
enter
sub
sub
xchg
xchg
popa
inc
xchg
mov
mov
mov
sbb
pop
xchg
pop
pop
inc
adc
inc
insl
mov
clc
aas
imul
fmull
cli
add
xchg
inc
mov
cmp
loopne
scas
popf
ds
popa
adc
inc
dec
imul
cmp
roll
scas
adc
mov
in
pop
call
sub
adc
cli
dec
rolb
cmpsb
test
out
testb
ret
iret
clc
lods
and
xor
sbb
rcrb
ret
ds
add
dec
sub
imul
mov
cmpb
fsubrl
std
push
and
aam
inc
mov
cmp
cmp
sbb
andl
aas
outsb
or
in
cmp
cmpl
adc
lret
sbb
xor
sti
inc
add
push
mov
jns
and
fs
pop
push
out
push
push
out
pop
into
jo
loop
out
add
fld
sti
pop
inc
enter
mov
adc
pslld
mov
fists
mov
movsl
mov
mov
outsb
cld
data16
scas
dec
sub
mov
jmp
out
adc
inc
cmp
mov
insl
sbb
pop
add
add
mov
ds
push
cmp
lock
pop
jmp
cmp
push
ret
mov
xor
fstps
jnp
jmp
push
push
pop
js
pop
sbb
xchg
push
cli
aas
fwait
dec
popf
sbb
push
dec
pop
outsb
repz
inc
or
rolb
rclb
push
js
lock
mov
jmp
jp
ljmp
es
mov
add
sub
or
out
pop
lcall
pop
push
push
test
loop
sub
add
pop
cmp
inc
insb
dec
out
mov
test
insl
js
mov
jp
xchg
jl
cmpsb
or
jo
cmc
daa
out
xchg
push
in
lods
daa
and
js
scas
mov
pop
jae
add
dec
xor
popf
mov
js
push
jp
inc
fcoms
jp
inc
inc
adc
ljmp
and
aad
ds
lock
sbb
jle
data16
and
sub
pop
stos
cmp
arpl
mull
popf
pop
add
xchg
xor
jl
pop
bound
xchg
pop
clc
loopne
movsl
and
cli
decl
shll
add
add
pusha
test
stos
xchg
stos
insb
cwtl
in
push
call
es
dec
aad
xchg
cltd
imul
pop
inc
outsb
call
mov
shll
stos
enter
lds
rolb
fcompl
mov
cmp
xchg
push
and
mov
shll
adc
mov
outsb
push
jmp
or
mov
pop
cli
dec
xchg
cltd
mov
out
sbb
insl
mov
rcrb
cmp
adc
mov
mov
adc
std
mov
incb
aam
pop
xchg
loope
xchg
xchg
sub
sub
mov
pop
arpl
or
cltd
xorb
es
push
movsl
jg
das
mov
cld
aad
xor
bound
lahf
inc
xor
or
filds
push
in
andl
push
popa
data16
mov
mov
xchg
icebp
xchg
lea
cmp
mov
fisttps
test
jne
icebp
inc
add
popa
cmpsl
lret
lds
scas
or
or
cmpsb
xor
xchg
xor
cld
clc
sbb
sub
ljmp
scas
sar
shll
mov
push
xchg
cli
add
xchg
jge
cwtl
inc
xchg
pop
addr16
push
dec
pop
pop
int3
ja
xor
sbb
pop
imul
push
mov
jb
mov
mov
cmp
stos
and
sbb
and
inc
aas
inc
shl
clc
sbb
add
rclb
int
push
and
test
push
xchg
sbb
stos
movsb
not
push
setg
loop
movsb
xchg
fadd
in
inc
or
int3
ret
pop
lock
lods
dec
cmp
leave
push
fadd
mov
push
cmp
out
pop
gs
jp
add
cmpsb
xor
test
sub
clc
dec
jae
lret
push
and
push
push
ret
or
jp
insb
mov
jecxz
lock
jle
add
negl
add
sub
loop
inc
repnz
popa
cmp
inc
jge
or
or
cmp
call
pop
inc
scas
notl
jnp
xor
sub
fildl
stos
mov
iret
lret
imul
loope
add
push
push
inc
bound
fisubl
pop
movl
mov
mov
popl
mov
or
inc
add
inc
mov
jmp
sbb
and
cmpsb
sbb
push
push
stos
arpl
sbb
imulb
jl
iret
inc
out
adc
pop
pop
popf
xor
arpl
inc
pop
jge
lds
or
cmpsb
push
and
incb
sub
incl
adc
mov
fcmovnbe
orb
jmp
in
out
add
xchg
mov
inc
or
sub
jo
push
sbb
outsl
pop
mov
int
fs
aas
lcall
jg
ss
xor
sbb
push
out
mov
add
or
gs
and
and
ficompl
xor
mov
add
push
push
enter
out
xchg
mov
xchg
and
iret
addl
loop
dec
ljmp
addr16
push
jmp
ss
inc
jb
jo
dec
movsl
mov
sahf
lods
jnp
add
lds
call
clc
call
cmp
insl
jecxz
dec
push
nop
xor
mov
xchg
cmpsb
js
rolb
and
sbb
aam
fwait
mov
pop
sub
mov
mov
sub
xchg
xlat
add
cmp
adc
mov
cmp
add
inc
ret
sar
dec
ret
popa
cmp
int
adc
sbb
movsl
lcall
dec
and
pop
dec
in
aad
cmp
clc
test
loop
mov
ret
movsb
test
push
xchg
dec
sbb
mov
mov
mov
or
cli
outsb
or
data16
push
xor
inc
jns
push
jnp
and
cmp
decb
sub
imul
jp
and
nop
pop
or
pop
shl
pusha
sub
sbb
sub
xchg
imul
test
mov
movb
xor
jle
nop
ret
xor
aaa
hlt
sarb
sarl
sub
es
das
cmpsl
cld
push
pusha
aaa
daa
sbb
fidivrs
ficompl
ss
cmp
or
jno
jno
push
insl
adc
insb
sub
jl
ljmp
ret
pop
add
ljmp
add
ds
jmp
std
lock
mov
push
adc
inc
or
stc
test
mov
jb
dec
mov
clc
dec
and
push
nop
std
pop
push
popa
rcrl
es
or
aaa
out
jg
inc
pop
movsl
cmpb
mov
or
xor
icebp
dec
outsb
jnp
std
inc
push
sbb
loopne
xchg
loopne
rcr
xlat
inc
or
aad
xor
pop
inc
testb
dec
dec
pop
test
dec
xchg
call
nop
dec
mov
fsubp
cmp
jne
in
push
inc
sub
aaa
fcom
or
or
sub
sahf
fstpt
sbb
pop
cmp
adc
inc
pusha
jb
cmp
push
add
push
aam
push
dec
or
push
jecxz
je
fisubrs
fiadds
or
call
pop
iret
push
push
out
lret
addr16
xchg
into
sahf
aas
sbb
sub
and
adc
xchg
lcall
adc
xchg
adc
ficompl
xor
dec
clc
adc
ja
xchg
fsubrs
and
add
mov
cmpsl
out
mov
sbb
lock
and
adc
loope
movl
add
clc
mov
rcrb
in
out
in
bound
mov
pushf
das
sar
or
add
loopne
test
or
xor
cmpb
insb
pop
and
adc
test
or
out
push
icebp
ret
inc
add
add
hlt
ss
lea
cli
fstpt
dec
mov
int
dec
push
push
mov
xchg
or
popa
add
xor
negb
hlt
fwait
cs
cmp
adc
xlat
sub
jb
cs
or
xchg
add
std
movsb
fcompl
in
xchg
pop
test
mov
sbb
pusha
sbb
cmp
ret
pop
enter
mov
rcll
imul
push
push
testb
das
mov
jno
fsubs
ss
cltd
push
jl
in
inc
jo
add
pop
inc
sub
outsb
sbb
mov
andb
push
or
add
repnz
in
adc
add
add
adc
ss
sub
push
ret
jmp
pop
and
push
pushf
ljmp
lods
push
movsl
fmuls
mov
mov
call
pop
push
xchg
adc
subl
std
mov
aad
dec
xchg
mov
dec
decb
or
push
rolb
jge
adc
sbb
mov
movsl
mov
jl
hlt
cmc
mov
dec
jecxz
sar
fildll
movsb
hlt
pushl
sbb
push
sub
sbb
ja
enter
jnp
inc
xchg
xor
adc
pop
nop
cmp
bnd
sbb
sarb
fimuls
or
loop
add
shrb
mov
cmpsb
in
cmp
bound
ret
adcl
jo
sbb
or
je
out
rcr
jne
setle
js
data16
sbb
inc
rclb
mov
data16
cmp
dec
subl
movsb
mov
inc
xchg
imul
and
cmp
inc
pop
cmp
mov
ret
and
mov
add
jnp
push
pop
xor
jge
pop
testb
aad
loop
je
imul
or
push
jo
cli
ret
and
sbb
aad
pop
push
cld
and
jnp
or
adc
outsb
aaa
add
stos
dec
rclb
pop
pop
mov
dec
loop
jne
lcall
jg
xor
mov
mov
push
hlt
adc
and
mov
cli
pop
mov
push
push
mov
fisubrs
or
fbstp
and
lahf
movsl
pop
clc
cmp
push
dec
lret
jbe
das
inc
ret
scas
and
cmp
adc
jle
and
cmpsb
test
insl
inc
pop
insb
add
jo
std
mov
mov
add
nop
outsb
mov
ret
enter
in
call
pop
mov
les
pop
pop
mov
fisubs
cmp
jb
push
dec
lcall
pushf
andl
cmp
int
or
pop
add
mov
cmp
jl
and
mov
and
movsb
push
aas
mov
xchg
test
or
sub
sar
bound
inc
aaa
jg
call
add
inc
loopne
outsl
dec
andb
loope
sahf
xor
inc
fisubl
adc
adc
bnd
push
xchg
jns
dec
jp
ljmp
out
lahf
inc
lock
fildll
clc
pusha
scas
xor
dec
dec
dec
mov
mov
cmc
cmpsb
out
add
cltd
mov
clc
jmp
mov
xchg
or
loop
and
pop
js
inc
popa
das
insl
cmp
inc
xor
imul
in
add
pushf
or
pop
icebp
pop
stos
ret
or
in
ss
in
add
nop
mov
and
test
xadd
push
int3
and
ljmp
sub
xchg
mov
cltd
int
mov
dec
mov
mov
or
xchg
fiadds
sub
scas
mov
push
inc
cmpsl
add
xchg
or
aam
dec
fbstp
mov
test
daa
jno
imul
mov
xor
or
dec
xor
push
jg
decl
stos
pop
push
jb
add
ficomps
and
mov
std
adc
cmc
incb
fwait
cld
popf
vmread
mov
out
and
test
xchg
loop
popa
or
mov
add
fmuls
mov
cld
lea
nop
test
faddl
sahf
push
xor
clc
fcoms
rcll
jg
andl
js
andl
lds
dec
xor
jecxz
inc
sbb
dec
aam
gs
xchg
xchg
mov
bound
scas
movl
cld
aam
jle
mov
shll
jnp
outsl
out
mov
in
mov
out
mov
mov
cmp
mov
lock
pop
mov
or
or
push
pop
mov
pusha
call
add
cmp
in
mov
ret
mov
xor
outsl
es
pop
sub
call
clc
decl
xor
je
scas
fcomps
adc
clc
in
iret
pop
adc
jp
mov
test
adc
cltd
arpl
xor
pusha
adc
pop
sbb
sbb
call
cmp
lods
movl
push
add
xor
lcall
test
cmc
jg
std
pop
push
adc
mov
mov
pushl
xchg
mov
pop
std
lahf
outsl
das
push
and
notl
pop
xchg
shlb
jnp
loope
mov
sbb
aas
or
rorl
xchg
rcrb
sbb
daa
add
sub
cmp
orb
xlat
sbb
js
pop
mov
sub
push
les
mov
std
out
push
and
ja
rorb
xchg
mov
add
jle
add
sbb
int3
inc
out
call
xchg
call
push
test
nop
mov
add
lret
jl
cmpsl
jge
jecxz
repz
cmpsb
out
push
or
inc
imul
or
cli
cmpsl
or
out
cmp
rorl
push
pop
mov
cmpsl
cmp
sub
push
lock
add
jge
ret
fcomp
ficoml
mov
mull
sahf
jb
mov
push
sub
lahf
ss
add
in
das
into
mov
xor
clc
stos
adcb
mov
lods
or
sbb
mov
sub
push
repnz
and
call
inc
movsl
lock
mov
jmp
loopne
pop
xchg
dec
mov
pop
xchg
je
and
mov
jp
push
pusha
and
xor
loope
add
mov
dec
clc
mov
mov
pop
mulb
cmc
add
call
xchg
dec
pop
mov
test
in
jp
call
jo
xchg
pop
and
out
mov
or
and
outsl
mov
pop
ret
jbe
pop
add
scas
imulb
cmp
jo
inc
outsl
cwtl
test
cld
icebp
xchg
jnp
enter
mov
lcall
cmc
clc
or
sbb
iret
jno
incb
pop
mov
rorb
out
out
and
faddl
out
sub
and
xor
push
stos
jo
mov
iret
dec
aam
push
mov
adc
ss
pop
fwait
xchg
inc
and
jae
ds
push
gs
xor
mov
adc
sbb
repnz
mov
mov
mov
pusha
add
cmc
jo
inc
mov
adc
push
add
les
scas
xor
mov
outsb
and
push
jo
nop
jne
adc
fdivrl
and
pushl
sbb
sbb
xchg
xor
inc
mov
cli
mov
xchg
outsl
cmpsb
jb
imulb
mov
xchg
daa
popa
xor
jmp
dec
in
push
ja
in
mov
xchg
enter
mov
xor
movsb
mov
jle
cltd
mov
push
adc
rolb
sbb
jno
enter
fs
inc
das
shr
pop
sti
pop
movd
adc
adc
sar
sub
cmpsl
add
or
aam
incl
repz
mov
stos
iret
setle
fdivl
repz
and
lret
ljmp
inc
fs
mov
xchg
loopne
adc
loop
inc
pop
xor
dec
add
int3
push
sar
call
pop
jmp
sbb
add
loope
xor
and
push
out
jl
movsl
shll
js
or
pop
and
sar
into
or
scas
imul
ret
pop
out
xor
cmc
out
lret
and
gs
sub
mov
stos
mov
jmp
dec
movl
pop
ret
xor
mov
aam
inc
jg
adc
dec
mov
adc
xchg
xchg
xor
inc
xchg
adc
lcall
bound
test
adc
dec
push
or
jl
push
jo
pop
cmpsl
push
pop
push
rolb
fists
clc
mov
lods
fisttps
mov
and
or
push
and
add
jno
rcrl
adc
testl
out
add
mov
pop
mov
adc
ljmp
in
cmp
loop
mov
xor
pop
mov
sbbb
sbb
mov
dec
fcoml
in
push
decb
jb
or
dec
call
add
cmp
mov
test
add
push
mov
push
and
rcrl
xor
sbb
jb
mov
pop
mov
scas
testb
lret
lret
xor
mov
js
movsl
inc
sbb
fsubr
cmp
and
mov
mov
test
dec
push
push
and
mov
dec
subl
adc
and
in
dec
sub
and
or
mov
add
out
insl
lahf
dec
mov
int3
xor
sub
je
inc
rolb
dec
std
incl
loope
fidivl
mov
or
sbb
jb
xor
xor
lcall
push
ret
icebp
lods
xchg
xor
cmp
pushl
inc
add
test
and
or
jecxz
add
mov
sub
cmp
nop
rclb
push
dec
mov
aad
pusha
xor
sahf
andb
push
lahf
mov
mov
loop
dec
cmc
xorl
clc
insb
fwait
std
lahf
push
xor
sub
repnz
mov
gs
sbb
inc
xchg
push
fwait
lock
mov
ret
aaa
not
push
and
clc
dec
ret
and
out
xchg
daa
dec
jle
mov
ljmp
and
jmp
test
lods
scas
sub
data16
daa
loop
xchg
xor
add
xchg
js
sahf
adc
mov
inc
add
dec
jecxz
dec
dec
test
xchg
mov
push
inc
mov
adc
jnp
dec
push
jns
loopne
lock
adc
sbb
lock
xchg
fcmovnbe
aas
mov
cmpsl
mov
adc
rcl
in
adc
pop
aaa
jne
sbb
das
xchg
test
pushf
pushf
pop
es
jne
pop
enter
cmp
stos
cmp
jbe
mov
clc
out
push
dec
push
std
add
lods
inc
add
add
test
pop
mov
pop
mov
js
icebp
inc
or
adc
add
mov
shlb
js
push
pop
das
sbb
fs
push
sti
incb
setb
mov
xchg
mov
push
ret
shl
out
or
push
xor
add
add
es
loop
jnp
andb
or
xchg
ljmp
add
xor
in
fwait
sbb
adc
mov
add
je
ret
xor
ss
cwtl
inc
cld
or
mov
push
push
dec
lret
push
mov
dec
xor
dec
cmp
sarl
sbb
add
lret
jl
xor
add
mov
lfs
in
dec
xor
sbb
rcll
xor
data16
sbb
cmpsb
mov
insl
dec
loop
dec
inc
ljmp
popf
adcb
jne
ret
rclb
stos
inc
clc
in
add
jmp
push
pop
ret
push
fimull
push
mov
and
sub
xchg
push
sbb
jmp
cld
sbb
data16
mov
dec
push
repz
sub
xchg
pop
dec
push
cltd
pop
hlt
pop
imul
push
sbb
loope
jns
cmpsb
sbb
in
adc
call
gs
ret
mov
add
shl
jle
jbe
sbb
mov
cmp
in
aad
loope
iret
mov
test
pop
mov
mov
jge
out
push
pop
out
scas
jle
sbb
lods
call
notb
mov
add
adc
cmpsl
jge
dec
stos
test
mov
scas
popa
aam
cmp
test
ljmp
outsl
push
dec
cmp
add
jl
pop
sti
mov
inc
daa
pop
mov
inc
pop
dec
add
cmp
dec
pushf
jmp
ret
cmc
sub
adc
mov
jae
mov
stos
loope
stc
pop
adc
cli
jecxz
xor
dec
xor
std
jge
punpckldq
daa
lds
in
scas
cmp
out
xor
push
jle
jge
sbb
int
popf
lcall
or
push
gs
or
testb
lret
negb
dec
pop
pusha
mov
mov
je
add
add
ds
shll
shll
inc
cli
pop
fcoms
clc
xchg
jle
insl
mov
ds
outsb
into
mov
test
lods
fstpt
sbb
jecxz
lock
lods
adc
orb
ja
mov
pop
add
jecxz
mov
jl
xchg
fmull
xlat
jbe
sbb
xlat
inc
and
push
ret
and
fs
jbe
jae
cmp
scas
and
adc
jb
cmp
shlb
xchg
push
or
neg
jmp
loopne
jo
mov
aad
movsl
insl
mov
lret
add
stos
repz
xor
jmp
int
fwait
cmp
dec
fidivs
fs
cmp
cli
or
pop
bound
push
sbb
cltd
push
xor
sbb
dec
out
std
loop
aam
fmull
add
rcll
cmpsb
jo
insl
xchg
test
fisttps
test
dec
sub
lea
mov
dec
mov
test
adc
lods
and
pop
xor
es
in
jo
mov
cli
out
lret
mov
jle
add
pop
lods
outsl
cmp
rorl
shr
data16
or
push
lods
jb
aad
cltd
orl
inc
mov
or
out
dec
std
test
fs
in
aad
pushf
cmpl
lret
pop
jb
xor
subl
xorl
cvtpi2ps
push
in
cld
jns
dec
pop
fidivrl
ljmp
mul
and
cld
mov
inc
stos
adc
jno
pop
outsb
adc
cmp
add
call
xchg
iret
add
xor
inc
adc
clc
add
int
inc
and
lods
cwtl
nop
addr16
add
es
addb
inc
inc
jmp
pop
mov
bound
ficoms
sahf
xchg
jp
cld
loope
push
test
inc
xor
cwtl
stos
in
push
into
rorb
adc
stos
add
mov
mov
leave
sbb
imul
sbb
jecxz
ror
ret
loope
sub
syscall
test
jl
push
je
mov
fyl2xp1
adc
and
or
jae
sbbb
gs
fists
imul
and
test
hlt
or
jle
je
dec
outsb
push
xchg
jecxz
xchg
dec
pop
ror
stc
mov
push
xchg
icebp
int
pushf
out
add
cmpsb
das
pop
fistpll
test
cmp
adc
xor
push
mov
jg,pt
rorb
jne
adc
stos
negl
sahf
not
adc
fistpl
lock
dec
insl
insb
jb
sti
int3
pop
dec
sar
test
mov
add
pop
xor
mov
xchg
test
mov
arpl
popf
lock
jle
cld
movsb
ljmp
dec
adc
adc
mov
mov
pop
cmp
xor
jbe
shl
popf
pop
push
lahf
jno
jmp
scas
out
or
sbb
add
cli
mov
aaa
pop
jnp
rcll
outsl
cmpsl
push
or
clc
pop
xchg
mov
jne
xchg
scas
mov
lret
fs
and
cmp
xchg
mov
push
test
stc
subb
and
xor
out
and
xor
push
cmc
loopne
xor
shlb
xor
aam
fwait
mov
pop
mov
and
xor
aas
push
mov
cmp
shlb
out
and
in
mov
jns
xor
fnstenv
je
bound
test
xchg
test
jg
cmp
inc
call
xor
xchg
push
or
add
stc
or
cmp
xor
hlt
cld
jo
test
cli
lods
jecxz
adc
mov
add
test
add
pusha
jo
lea
cld
cli
imul
pop
jmp
into
jmp
jle
push
fld
pop
dec
push
sti
jb
lock
adc
mov
cmp
mov
pushf
dec
out
push
sub
and
test
fwait
orb
inc
mov
pop
fdivrl
xchg
cmc
add
mov
test
and
inc
in
jmp
pop
cmp
sub
jb
es
lret
jae
jbe
push
outsb
fs
and
add
pop
mov
ljmp
push
test
and
or
inc
arpl
loop
ss
ret
shl
cld
insb
lds
ret
cwtl
es
push
das
mov
jnp
cmp
cmp
imul
in
fs
mov
sub
xchg
and
popf
aam
lret
lret
adc
rcrb
inc
adc
rclb
adc
fstpt
xor
xchg
or
lock
jmp
xor
test
and
or
inc
loop
xchg
fcomp
xchg
pop
jbe
jg
fdivr
aaa
inc
hlt
dec
pop
jne
popf
and
aas
stc
adc
cmp
imul
add
mov
jecxz
fbld
sub
fiadds
and
fiadds
push
cmp
mov
daa
aad
mov
testb
jb
push
stos
pop
arpl
xchg
sub
mov
sahf
cmc
test
adc
mov
and
mov
test
addl
outsb
adc
cli
push
faddl
inc
pop
int3
lods
jo
outsl
cmp
pushf
out
test
jae
mov
push
fbld
das
pop
cmp
fisubs
gs
or
call
test
int3
icebp
adc
lcall
mov
mov
rorl
fwait
movsl
aas
push
jmp
rcr
mov
lea
cmp
hlt
shll
xchg
mov
mov
movsb
shll
mov
pop
fsub
shlb
ficomps
fs
push
les
mov
jbe
aad
dec
fnsave
push
gs
scas
shlb
or
je
or
cs
movsl
mov
in
push
mov
lea
flds
adc
mov
es
mov
out
mov
stos
mov
cltd
push
push
imul
jmp
jecxz
mov
fstpl
lret
sub
push
enter
mov
pop
adc
inc
jne
mov
add
adc
pop
inc
outsl
testb
push
inc
xor
add
xorb
loope
mov
or
loopne
roll
fistpll
lret
popl
mov
pop
imul
sub
mov
stc
adcb
xchg
add
cld
dec
es
adc
addr16
pop
and
pop
inc
cmpb
nop
cs
push
xchg
mull
test
in
lret
push
loopne
test
sub
add
loopne
cli
mov
das
les
outsl
int
mov
aas
sub
mov
cltd
cmpsl
or
jle
dec
mov
mov
adc
sahf
dec
sbb
lahf
add
les
mov
pusha
inc
int
roll
add
test
xorl
inc
mov
cli
ljmp
mov
or
lods
aaa
loope
cmp
jo
pop
and
testb
mov
fwait
and
mov
or
cmp
outsb
cmpsl
cmc
es
or
mov
mov
mov
cld
fcomps
fmuls
jno
sub
push
lea
xchg
mov
push
loop
out
and
mov
pop
sarb
andl
sar
push
lcall
sbb
movsl
push
aaa
jmp
fimuls
jno
mov
leave
mov
push
popa
push
sub
gs
jnp
xor
and
or
or
push
jae
ffree
pop
or
outsl
flds
mov
push
and
mov
sub
add
xor
insb
lock
imul
xchg
push
and
leave
pop
xor
or
mov
mov
adc
repz
ret
rcrb
mov
cmc
insl
out
mov
shr
jge
movsl
xor
xor
fchs
inc
or
cli
cmpsb
insl
call
hlt
data16
xchg
and
daa
push
sub
fwait
icebp
dec
mov
ds
lahf
add
pop
dec
stc
sti
add
cli
testb
jl
icebp
sub
inc
lcall
mov
out
xor
mov
or
jg
aaa
and
pop
push
push
loop
cmp
jmp
xchg
sub
clc
cltd
in
sub
xlat
mov
das
sbb
add
inc
push
js
sbb
xlat
jle
testb
xchg
jno
sbb
es
push
data16
inc
rcrb
sub
js
sbb
jp
push
cmp
outsl
cmp
cwtl
bound
xor
push
and
loop
fs
dec
imul
jecxz
dec
fadds
bound
aaa
stos
xor
jae
push
pop
push
xchg
sbbl
dec
lock
push
mov
movb
lahf
dec
pop
sbb
jge
rcr
xchg
out
add
or
push
outsl
and
cmpsl
push
push
filds
mov
inc
dec
daa
sahf
fcmovu
les
sub
je
fucom
mov
jmp
xor
jg
push
xchg
out
aaa
add
stc
inc
int3
popa
mov
dec
imul
inc
pop
outsl
mov
imul
push
or
add
inc
das
jo
lahf
mov
xor
sbb
sub
and
fsubl
xchg
imul
or
push
clc
cmc
mov
imul
cmc
add
xchg
shll
test
in
push
pop
neg
cwtl
add
fcompl
pop
or
cmc
jecxz
sub
inc
clc
pop
int3
lret
push
shrb
rcrb
cmp
mov
adc
js,pt
idivl
lea
in
ss
pop
mov
sbb
xlat
pop
lods
xchg
inc
sti
shrl
rolb
dec
push
pop
adc
nop
iret
nop
mov
and
or
jne
push
mulb
scas
jbe
and
mov
in
movsb
add
xchg
outsb
add
shrl
and
test
scas
stos
and
jmp
inc
pop
orb
mov
leave
test
testb
cmp
sbb
mov
out
xchg
in
test
sti
stos
dec
incb
push
cmp
dec
and
and
mov
push
push
outsb
add
repz
push
pop
inc
scas
or
rcrb
fwait
cmpsb
mov
gs
sbb
shlb
push
mov
mov
adc
jge
aad
cwtl
add
cli
mov
subl
in
outsl
cmc
push
adc
push
xlat
sub
mov
sbb
fucomip
mov
and
clc
shrb
fisubrs
and
push
shll
or
add
mov
ret
clc
xor
test
xchg
xchg
dec
cwtl
adc
fisubl
or
push
sub
bswap
andl
push
or
fmuls
xchg
js
dec
sub
mov
mov
or
push
xchg
in
rcrb
push
inc
decl
sub
adc
adc
sub
cmc
add
or
adc
push
in
inc
rcll
jmp
in
andb
popf
dec
cmp
jge
test
jne
ds
lret
jp
pop
cmp
push
push
in
addl
mov
pop
repnz
or
mov
shl
push
test
arpl
mov
mov
ja
das
jle
jae
add
cmp
orl
push
out
jns
cmp
mov
xabort
sbb
cmp
add
cli
test
or
lods
data16
xor
or
mov
jle
pop
jne
cmp
jg
mov
icebp
test
std
inc
js
dec
mov
inc
push
xchg
adc
or
lods
pop
lret
push
subb
ret
cmp
aad
pop
test
cmpsb
jbe
push
or
mov
lods
nop
xchg
test
pushf
lods
xor
or
add
icebp
loop
inc
scas
or
xchg
xor
addr16
mov
mov
sbb
movsb
inc
push
lea
sub
pop
ret
add
and
test
testb
hlt
jg
shlb
cltd
dec
scas
lret
lds
outsb
popa
rcr
mov
cmc
jmp
mov
adc
into
jle
sbb
nop
fisttpll
mov
jg
fisubl
dec
cmp
xor
mov
xor
nop
add
jb
outsb
push
jge
or
add
jbe
out
pop
jmp
xor
mov
cli
je
call
push
cmc
pop
nop
rorb
or
aaa
jmp
fdivl
andl
rcl
out
xchg
dec
pusha
push
cwtl
cmp
add
hlt
sbbb
mov
mov
jl
or
xchg
in
out
fnstenv
jbe
inc
stos
xor
clc
add
test
or
pusha
test
lds
and
jmp
clc
mov
jae
mov
xchg
orb
ljmp
popf
nop
mov
das
mov
rcrl
pop
call
test
mov
stos
lret
push
insb
push
ret
adc
call
sbb
pop
add
lods
cmc
pop
xchg
dec
test
lods
rorb
les
ss
cmp
data16
pushf
mov
xor
jmp
sbb
and
cld
ljmp
in
mov
pusha
jnp
add
sbb
enter
mov
in
push
mov
xchg
mov
mov
push
xchg
lods
out
xor
mov
inc
repnz
in
cli
sub
mov
decb
or
repz
cmpsl
push
jle
fcoml
subl
outsl
mov
insl
inc
stos
pop
fbstp
enter
incb
insl
mov
dec
sysenter
cli
faddl
mov
push
ret
sbb
in
ss
arpl
sbb
xlat
push
inc
add
gs
or
outsl
lret
add
xor
or
sbb
pop
mov
fldt
and
lds
cmpb
jo
stos
push
or
xchg
pop
cmp
cmp
mov
xchg
pusha
add
negb
in
xlat
loopne
pop
in
push
je
icebp
or
dec
lcall
bound
add
pop
or
cmc
push
mov
adc
cwtl
shrb
fbstp
pop
cmp
add
lea
sbb
ss
push
mov
sahf
stos
jle
fisubl
push
push
cmp
js
jle
in
jge
and
push
mov
lret
mov
lcall
jmp
mov
shlb
ja
jne
lock
xchg
and
vpunpcklwd
jno
idivb
das
xor
in
xlat
gs
sub
push
push
jecxz
inc
insb
xchg
das
in
push
mov
nop
add
dec
or
xor
lcall
add
mov
dec
out
and
jmp
or
aad
in
lret
inc
xlat
jg
cwtl
ljmp
test
or
sub
lcall
andb
bound
faddl
pusha
cmpsl
cmc
or
lds
xor
sti
push
movsb
call
mov
enter
outsb
imul
push
pushf
jge
scas
icebp
or
xchg
and
sahf
rol
rolb
pop
nop
int3
dec
aad
mov
xchg
shr
popa
pushf
lods
xchg
movsb
mov
mov
or
repnz
cmp
sub
or
ret
xor
and
nop
shll
jle
cwtl
dec
ds
rol
fdivrl
and
loopne
xorl
icebp
xchg
mov
lock
and
test
ja
push
and
pop
insl
test
roll
or
jbe
shlb
aas
pop
int3
call
loop
dec
jmp
dec
mov
xor
int
pop
fs
pop
or
fsubs
loop
adc
push
dec
mov
loope
nop
xchg
cmpsl
test
lcall
push
test
pop
fidivs
orb
call
mov
and
data16
adc
dec
scas
and
inc
inc
fstpt
aaa
loope
dec
jl
pop
bound
jecxz
scas
orl
ja
pushf
xchg
push
std
daa
pop
arpl
lock
mov
rcrb
out
dec
dec
stos
out
mulb
insb
xor
inc
push
mov
and
imul
dec
add
les
push
adc
cmc
add
imul
mov
cmp
jg
dec
xor
dec
push
push
in
dec
into
dec
xor
xor
aam
lcall
repnz
imul
mov
add
ret
mov
ss
in
xchg
jmp
in
mov
adc
xchg
arpl
jne
ja
test
xchg
lea
dec
nop
xor
aaa
out
jno
ss
mov
clc
jno
mov
in
push
rcll
imul
pushf
push
hlt
test
test
ds
pop
aad
add
xor
clc
scas
sub
popa
sar
fstl
cltd
ja
xchg
mov
mov
xchg
sahf
sbb
movaps
aaa
clc
std
cli
ret
jnp
or
in
in
and
mov
shll
add
stos
cwtl
aam
fadd
and
call
cmpsb
lods
jp
ja
mov
rol
imul
daa
lret
mov
addr16
push
dec
sti
aam
mov
inc
mov
inc
adc
sbb
bound
pop
pusha
mov
push
lods
loop
sbb
int3
cmc
push
xor
in
in
inc
pop
or
xchg
jmp
insb
int3
jp
jnp
ret
int
push
pop
mov
ret
inc
leave
test
xor
fildl
jg
aad
or
adc
or
jl
sbb
icebp
pop
shr
sarl
jg
ret
pop
in
fs
add
add
mov
ret
or
aas
ret
add
push
xor
pop
cmp
orb
popa
push
rcrb
subb
ret
pusha
loope
jns
dec
scas
js
cmpsl
sbb
mov
imul
cld
sub
and
xor
das
mov
mov
and
xchg
inc
repz
enter
bound
das
jo
fcoms
js
mov
sbb
push
js
cltd
mov
push
shl
sbb
pop
sbbl
cmpsl
dec
sbb
mov
xor
pop
cmp
and
pop
adc
les
inc
and
dec
add
les
adc
scas
pop
add
and
push
daa
jne
enter
xor
push
sbb
ss
hlt
add
das
in
mov
pusha
xchg
adc
jp
pop
pop
das
cmp
mov
cld
inc
and
and
sti
pushf
popa
fdivl
cld
into
add
push
ret
roll
or
mov
jle
pop
icebp
aad
cli
dec
pop
lock
shlb
repnz
adc
aam
mov
insb
outsb
imul
inc
inc
gs
rorl
inc
rolb
or
lods
jo
mov
movsb
mov
lods
mov
clc
xor
add
add
pop
je
in
pop
dec
fcmovnb
lahf
ret
adc
fdivs
repnz
mov
stos
sbb
sti
sub
xchg
and
popa
shl
outsb
push
frstor
or
sub
add
or
std
sub
dec
push
sbbl
mov
jbe
ljmp
add
mov
dec
fistpll
mov
jo
cmp
fwait
lods
sti
insb
data16
or
fisttpll
xchg
cmp
sbb
int
hlt
dec
scas
xchg
mov
and
push
or
sbb
cmpsl
mov
adc
fcmovu
mov
lock
cmp
jb
fistl
pop
ljmp
rclb
adc
mov
mov
jp
jbe
aam
jno
xchg
push
bound
cmp
mov
mov
jmp
and
add
push
dec
fimull
std
outsl
sub
adc
ja
test
mov
push
arpl
sbb
mov
call
movsl
pop
cmp
sub
lods
jmp
push
bndstx
cmp
mov
inc
rolb
push
pop
fiadds
mov
repz
xchg
hlt
xor
adc
jecxz
mov
ljmp
pop
push
leave
ficompl
in
xor
add
push
mov
push
shl
lcall
cld
xchg
out
jl
test
sub
lcall
aaa
fs
inc
lods
shll
mov
orb
jb
cli
outsb
je
inc
mov
push
cli
xor
loopne
push
out
rcll
mov
aam
fmul
movsb
and
rol
add
std
pop
lret
ljmp
pop
leave
and
cmpsl
hlt
cmpsb
mov
movsb
and
fmull
push
jl
lock
xchg
ffreep
dec
jp
jecxz
ss
mov
mov
js
push
xor
xchg
mov
add
mov
les
inc
loope
cmc
adc
push
jo
mov
shlb
adc
stos
jle
pop
mov
shlb
inc
dec
lock
ret
ret
mov
lods
xor
cmpb
or
call
cmpsb
movsb
sbb
or
ret
movsb
aas
fcmovu
jg
rcl
dec
add
arpl
lock
mov
outsb
cmc
data16
mov
and
sub
pop
pop
adc
jb
xor
inc
in
test
or
daa
sbb
inc
mov
and
fwait
imul
mov
andb
int
dec
cwtl
enter
mov
rolb
mov
inc
push
shrb
pop
mov
stos
mov
jbe
jmp
add
jecxz
or
mov
addb
or
and
push
sarl
shl
test
inc
mov
shl
adc
cmp
pop
xorb
push
in
sbb
js
xor
add
iret
adc
mov
jo
dec
add
cmp
outsb
in
dec
fdivrs
and
lock
daa
ljmp
push
add
lods
dec
ss
or
adc
xchg
orl
push
pusha
out
fisttpl
ds
push
adc
cmpsb
cmp
cmp
inc
inc
lods
mov
xlat
aas
lods
pop
lea
cld
std
add
jg
data16
mov
ja
push
popa
jo
sbb
mov
pop
movsb
mov
push
mov
or
hlt
add
gs
and
adc
mov
les
shr
test
xchg
fsub
in
arpl
outsl
popa
inc
bnd
pop
dec
arpl
cmpsb
dec
mov
inc
push
addl
or
mov
shrb
data16
lcall
sti
clc
mov
mov
ljmp
or
xor
pusha
cli
ror
stos
push
and
faddp
cs
pop
ret
test
push
decb
mov
dec
into
sbb
lea
push
add
scas
adc
js
enter
in
adc
xorb
jecxz
jecxz
xchg
lret
dec
or
rcrl
pop
sbb
rcrb
and
adc
ret
lea
imul
jo
adc
jno
scas
mov
jmp
jp
push
inc
into
pusha
fsubs
dec
call
mov
aad
xchg
or
inc
sub
pop
pusha
cmpsl
je
sbb
adc
pop
push
hlt
pop
adc
mov
dec
sbb
in
aad
jg
pop
pushf
mov
cmp
repnz
loopne
pop
inc
inc
dec
sti
cld
dec
test
add
aas
lock
inc
ficoml
lock
fnsave
inc
movsbl
mov
xchg
push
lds
mov
or
mov
clc
mov
shrl
icebp
lods
jp
shlb
mov
int
mov
fs
out
lods
clc
filds
sub
pop
lock
cmp
pushf
std
push
stos
mov
and
mov
fisubl
pop
test
fs
jl
push
rcll
pop
jl
outsb
xchg
jbe
lahf
or
pop
xor
clc
stos
adc
mov
sub
sbb
outsb
dec
lock
sbb
jg
xchg
jge
dec
or
mov
and
and
push
lock
sbb
pop
jbe
cmp
movsl
sub
je
jecxz
mov
repnz
add
sbb
pop
mov
pusha
nop
dec
xor
jne
dec
icebp
in
nop
dec
jb
sbb
pop
fiaddl
xchg
test
mov
rcll
daa
jae
sbb
fadd
addl
xor
xchg
scas
lock
enter
adc
out
aad
shll
loopne
hlt
clc
cld
fiadds
xchg
test
mov
sub
mov
or
or
arpl
pop
mov
daa
mov
xor
sbb
rorl
addb
cltd
xchg
cmp
or
push
rcll
popa
sbb
mov
cmp
inc
sub
mov
and
dec
or
je
lods
fs
mov
cmpsl
popf
cmp
push
xchg
in
mov
jbe
jns
add
sbb
outsb
pop
mov
pop
mov
mov
ss
inc
pop
outsl
mov
ljmp
cmp
aad
mov
or
adc
rorl
and
xor
out
or
cmp
inc
and
mov
xor
in
sub
pusha
mov
lcall
lods
add
out
roll
rcrb
sbb
scas
or
in
aad
call
jmp
sub
push
and
cmp
add
cs
push
pusha
in
mov
sbb
js
add
or
and
push
scas
je
mov
and
incl
mov
vmread
sbb
pop
cmp
cmp
fsubr
out
add
push
push
cmp
push
stos
push
xchg
mov
je
jg
inc
out
jecxz
movsl
sbb
jmp
cmc
js
cmp
xchg
xlat
shl
xchg
xor
pop
xchg
add
inc
dec
imul
push
push
fisttpl
gs
test
cmp
loopne
lret
cmp
mov
xor
and
outsl
mov
add
jp
xchg
xchg
imul
inc
mov
mov
lahf
jo
mov
data16
incb
lock
icebp
dec
fs
adc
dec
xor
sub
push
push
shl
into
movb
cmpsl
loopne
loopne
pop
xchg
xchg
cmp
xor
push
or
sbbl
lret
xor
cmpsl
and
loop
or
shrb
imulb
and
xchg
mov
sub
and
out
sub
pop
sbb
xchg
inc
sbb
addr16
lahf
or
mov
adc
add
adc
sub
int
inc
xor
rclb
out
lret
push
push
lock
loop
xchg
mov
movsb
xor
es
adc
loop
sub
lods
inc
inc
push
je
aam
les
addl
test
xor
fstpt
adc
ljmp
add
mov
lret
fmull
push
or
adc
mov
jge
and
inc
pop
in
dec
inc
dec
push
sbb
shrl
jne
xchg
mov
xor
jle
popl
or
mov
imul
push
loopne
dec
call
cmp
ljmp
shlb
out
push
xchg
mov
rcr
test
lret
cmp
mov
enter
notb
shlb
jge
mov
pop
clc
popa
aam
lods
add
clc
push
fidivs
add
cmp
sti
mov
inc
push
jbe
imul
and
jae
enter
mov
stos
and
sbb
inc
lcall
jecxz
push
bound
cmpsb
mov
and
int
mov
pop
loop
rclb
inc
jo
add
push
rorl
hlt
roll
add
push
lock
push
pop
inc
pop
insl
jge
aad
jl
leave
xor
jbe
push
cmp
outsl
in
in
fmull
sbb
adc
pop
dec
xor
sub
pusha
dec
js
add
cmp
sub
sub
cmp
ret
sub
mov
or
ret
mov
mov
jo
dec
popl
pop
mov
inc
lock
lea
ljmp
int
in
sub
notl
xlat
sub
in
clc
push
pop
loope
orl
or
ds
cwtl
jge
scas
xchg
iret
call
scas
jbe
mov
ljmp
xchg
stos
sub
sub
or
mov
ljmp
fimull
clc
adc
test
dec
mov
icebp
push
mov
mov
out
std
das
ret
mov
loope
inc
xchg
movsb
xchg
es
jbe
xor
push
daa
stc
test
les
je
lds
sub
dec
xlat
sahf
sahf
sahf
into
arpl
or
aas
pusha
in
ljmp
xor
mov
jo
loopne
xor
and
shlb
shll
pop
fcmovbe
cmc
pop
or
mov
int
andb
push
pusha
movsl
and
movsb
movsb
lods
gs
loopne
mov
push
inc
mov
jno
add
das
add
sub
inc
jg
rcl
and
rorb
push
std
inc
daa
xor
or
iret
add
inc
mov
and
pop
add
lock
data16
and
aas
insb
or
and
rolb
ljmp
out
ret
aaa
ja
inc
inc
push
xor
std
xor
add
cmp
enter
add
popa
add
negl
push
aam
out
cs
add
mov
movsl
ret
and
xchg
pop
push
xchg
mov
add
add
push
sub
popf
icebp
les
cmp
cmc
lods
xchg
inc
popa
in
je
cli
lret
mov
push
jp
test
mov
movsb
add
lahf
pop
adc
mulb
popf
les
scas
sbb
mov
sbb
xor
push
in
das
cmp
jno
mov
sub
addr16
push
pop
js
je
sub
out
pop
push
sub
call
sub
sbb
cmp
jnp
mov
cs
jle
mov
xor
dec
arpl
cmp
add
xlat
push
cmpb
pop
sbb
pop
inc
xor
inc
mov
addb
or
test
pop
pop
pop
test
and
push
addr16
jnp
es
into
xchg
js
mov
fdivl
stos
mov
mov
call
mov
test
and
xor
popf
xor
push
jecxz
sub
aad
push
push
push
mov
adc
loop
cmp
aaa
nop
adc
out
popf
loope
cmpsb
xor
imul
sub
shll
add
or
loop
insb
hlt
and
jns
jecxz
mov
jmp
push
sub
clc
mov
sbbb
ds
inc
inc
add
push
dec
pop
pop
dec
out
sbb
outsl
stos
aad
ret
jno
lods
sarb
dec
xchg
xchg
mov
ja
js
pushf
imul
or
add
inc
test
jb
sbb
jae
roll
sub
test
add
cltd
and
inc
cmp
ss
dec
pusha
nop
test
pop
lret
jge
push
mov
mov
jle
mov
stos
cld
push
xor
add
bound
pop
add
push
pop
loop
and
inc
dec
loope
mov
test
add
sub
lds
push
int
les
imul
mov
out
rcl
pop
jl
jno
cmp
push
cli
mov
call
imul
push
mov
xchg
cmp
jl
adc
or
stc
mov
cmpsl
js
pop
mov
xchg
sub
pop
enter
ret
push
xchg
scas
sbb
aam
xchg
fildll
je
dec
and
and
inc
push
nop
rcll
adc
test
dec
mov
sahf
mov
loopne
test
mov
add
sbb
call
cmp
or
mov
cmp
mov
adc
xchg
clc
pop
cmp
push
rclb
cwtl
std
movsb
clc
cmp
pop
es
dec
sbb
mov
pushl
aad
ljmp
cmpsb
aam
mov
test
lock
scas
cmp
adc
jmp
sti
out
xor
scas
mov
mov
and
jp
sub
test
cmp
rcrb
cld
outsl
inc
pop
lea
push
pusha
inc
daa
enter
sti
dec
cltd
nop
lods
rcrl
inc
mov
xor
shrb
pop
or
insb
jp
xchg
imul
sti
orl
subl
call
pop
xor
out
sbb
stos
push
mov
inc
inc
add
daa
mov
jb
fwait
jl
or
mov
aam
sahf
rcrl
push
pop
unpckhps
fists
fimuls
rcrl
notb
les
fildl
in
aam
xor
aam
xlat
add
inc
jae
es
push
cli
xor
test
popa
mov
inc
adc
sub
rcr
fisttpl
ss
pop
mov
outsl
add
ret
ret
mov
ds
xor
xor
mov
xor
jp
pusha
enter
dec
sbb
sbb
or
sbb
sub
jno
jl
cmpsb
and
xchg
fiaddl
push
push
fnsave
jo
shll
stc
and
rcr
adc
cmpsb
cmc
sub
mov
lock
adc
xchg
push
push
mov
rolb
imul
cmp
jl
cmp
pop
fcomi
aad
xor
jo
movb
sarb
int3
sbb
cli
mov
or
push
cmc
fwait
into
or
and
pop
aaa
insb
lcall
push
mov
outsb
hlt
out
jno
push
jnp
leave
ja
or
push
aas
sbbb
mov
cmp
cmp
mov
dec
mov
pop
push
daa
cmp
cmc
jmp
mov
insb
push
std
loop
jo
insb
and
mov
in
mov
dec
xor
aaa
inc
roll
pop
push
jp
xor
xor
js
lds
and
ja
data16
add
adcb
xchg
mov
add
scas
inc
sbb
mov
scas
cli
les
jo
fisttpl
lret
or
mov
push
push
outsb
faddl
lcall
lods
mov
cmp
aaa
lahf
sbb
cmp
inc
push
mov
xor
mov
mov
adc
adc
inc
fcmovu
je
int3
imul
imul
test
sub
gs
int3
dec
xor
pop
cmp
xchg
and
cltd
stos
ja
push
pusha
sub
and
mov
inc
test
jbe
test
mov
nop
fldpi
fmull
decl
cwtl
mov
push
outsl
push
scas
pop
jl
imul
sub
mov
mov
ds
int3
adc
and
dec
ss
lret
subb
or
dec
scas
js
push
push
sahf
xchg
aad
out
xor
lods
pop
out
mov
es
rorl
loope
call
inc
lret
lcall
lret
xchg
and
dec
daa
push
sbb
stc
sub
fwait
adc
push
xchg
sub
gs
push
cmp
nop
rcr
inc
inc
pop
fisubl
sub
int3
pop
clc
out
shll
in
imul
rcl
lahf
mov
cs
cs
jp
aas
push
mov
das
push
mov
mov
jecxz
imul
push
cmp
xor
aad
mov
sub
xor
mov
inc
inc
fisttps
cli
xor
cmp
pushf
pop
jl
mov
mov
bound
and
and
mov
jge
sub
pop
mov
jp
mov
cmp
push
mov
fldenv
adc
inc
jo
pusha
negb
icebp
das
pop
cmp
enter
ret
push
ret
in
out
sub
dec
bswap
dec
loop
in
add
lods
dec
lea
pop
fidivrl
or
pop
das
mov
fildll
orl
decb
pop
sbb
push
repz
orl
push
add
cmovnp
int3
ja
pop
and
mov
hlt
js
jne
ret
jge
lret
aad
mov
push
push
lret
lcall
lret
mov
inc
hlt
lahf
orl
pop
shl
adc
sub
dec
imul
cmp
pop
cmp
cmc
push
nop
push
imul
add
dec
or
sahf
testl
jmp
xlat
in
sbb
imul
lods
rclb
inc
or
test
das
pop
pop
scas
je
cmpsb
js
sbb
call
push
aaa
and
mov
pop
popf
shll
cmpsl
movsb
inc
pusha
push
or
jmp
jl
pop
sub
or
lods
and
inc
loop
xor
inc
inc
rcll
cmp
push
out
cltd
push
jno
imul
loope
out
lods
ror
xor
loope
pop
or
jg
lcall
or
aad
dec
pushf
mov
es
std
mov
scas
push
out
jp
nop
jp
sahf
loop
insb
xor
pop
cmp
jge
sahf
loopne
mov
inc
push
in
push
and
ljmp
push
enter
loopne
jmp
cs
push
cs
sbb
mov
mov
js
sbb
add
jle
scas
dec
jle
test
outsl
shlb
loope
and
add
hlt
ret
and
in
call
sbb
inc
outsb
aaa
mov
cmpsl
pop
addr16
sahf
or
push
pop
imul
cmc
dec
aas
mov
push
and
cs
pop
and
hlt
xlat
xor
popa
daa
push
or
xchg
and
ja
addb
stos
je
test
insb
mov
or
daa
add
cmp
sahf
sahf
mov
dec
jae
movsb
push
mov
xchg
xor
pop
cwtl
and
sahf
ds
cld
fsubr
lahf
pop
pop
mov
outsb
adc
jg
test
dec
jmp
stc
or
jg
loope
xor
mov
pusha
imul
aas
mov
cwtl
sbb
pop
imul
sub
xchg
lret
xor
cmp
mov
or
fbstp
call
jno
lret
aaa
scas
pusha
jmp
cmpsb
mov
outsb
mov
pop
jecxz
clc
addb
pop
dec
lock
divb
es
sti
xorl
jnp
mov
fidivl
ja
orl
das
cmpsb
cmp
lods
inc
jns
nop
loopne
xor
inc
das
push
pop
sbb
sbb
xorb
cld
inc
imul
pop
pop
push
push
ss
cli
lods
ret
or
dec
outsb
push
mov
sub
cmp
add
fcomi
jmp
adc
fimull
and
pop
add
ds
add
loopne
dec
rcl
inc
test
push
or
fiadds
sub
push
movsl
jmp
or
rorb
pop
jp
or
mov
mov
push
mov
xchg
ljmp
and
popa
adc
dec
pop
jae
dec
loopne
das
jl
mov
jnp
or
inc
shr
mov
jmp
subl
push
push
xor
adc
mov
cmp
xchg
xchg
mov
inc
lret
inc
push
mov
bound
jecxz
xchg
test
shll
add
cli
aad
lods
jb
dec
sub
mov
sub
mov
push
and
cmpl
xchg
ror
cmc
jno
inc
xchg
out
inc
sbb
fsubp
das
icebp
cmp
xorb
aaa
push
mov
mov
out
sahf
cli
add
fsubrl
add
cli
loopne
rcrb
enter
xor
cwtl
lods
add
adc
cltd
mov
inc
push
repnz
jo
test
out
lea
ljmp
pop
ret
pop
inc
xchg
mov
std
or
shrb
aas
xor
dec
inc
and
mov
repz
test
hlt
dec
pop
sar
or
or
add
rcl
cmpsl
jnp
sbb
dec
or
call
mov
cmp
xchg
testl
cmp
jb
mov
or
jnp
cmpsl
mov
pop
or
pop
pop
xchg
or
adcl
xor
jno
out
mov
xchg
outsl
jno
sub
clc
lods
rolb
mov
into
sbb
fwait
out
dec
in
xor
loope
jg
subb
pop
je
xor
push
iret
out
jno
scas
ss
lahf
icebp
add
add
jmp
popf
or
pusha
adc
adc
mov
pop
pop
sbb
push
inc
mov
fadds
xchg
lcall
xor
test
fnstenv
popf
mov
call
enter
inc
enter
mov
loopne
push
jae
sbb
push
xchg
cmp
loope
daa
negb
mov
or
inc
sarl
in
mov
sbb
lods
loopne
lods
adc
lea
aaa
jnp
jbe
clc
and
mov
mov
mov
test
in
repz
rorb
xor
cmp
outsl
push
sbb
xchg
dec
xchg
and
cmp
test
push
call
push
and
cli
push
add
aad
inc
pusha
sub
clc
aad
call
aaa
xchg
push
fsubrl
movsb
sbb
xchg
inc
dec
ss
mov
jno
movsb
lcall
push
push
jge
push
sahf
push
or
add
dec
lds
xchg
ds
divl
pop
hlt
clc
stc
pop
cmp
inc
fcompl
repnz
pop
mov
jae
outsb
or
add
sbb
mov
xor
scas
xor
pop
xor
imul
dec
insb
cltd
jge
insl
jmp
push
fcoml
mov
xorl
push
in
xor
pop
cltd
icebp
adc
dec
jg
mov
lods
out
mov
scas
xor
insb
add
jle
dec
sub
nop
jb
out
pop
and
xchg
adc
fcompl
mov
mov
cli
inc
lea
inc
cmp
in
lock
ja
add
leave
in
cmp
repnz
xchg
add
aas
jge
fadds
and
rorb
xor
test
xor
or
pop
mov
fstp
pushf
mov
sub
mov
loope
sarb
mov
xchg
cli
test
lods
lods
inc
xlat
cmp
cmp
fisubrl
es
add
incb
sbb
or
out
pop
add
lahf
cmp
and
shll
nop
leave
fcomps
stos
inc
cwtl
cld
jb
sahf
nop
mov
push
sar
xchg
push
xchg
cmp
xor
and
inc
adc
xchg
lds
cmp
or
hlt
jg
pop
mov
and
lret
jp
inc
icebp
mov
stos
and
aam
or
mov
bound
push
push
jne
sub
lahf
or
pusha
push
mov
loope
fisttps
sahf
xor
je
ja
shrb
shl
pop
lret
int3
jle
fiadds
ja
dec
sbb
mov
nop
test
dec
or
push
mov
out
dec
rcll
xchg
lahf
hlt
rorl
pop
in
outsb
jb
popa
lock
push
xchg
out
and
aas
pop
shr
je
mov
dec
adc
les
lret
jbe
adc
dec
adc
jp
mov
push
add
xchg
fcomps
cmp
in
xor
cmc
testl
sub
jno
xor
fsubrs
dec
pop
mov
shrb
pop
cli
movsb
pop
ja
mov
popa
daa
sahf
push
and
mov
xor
push
and
jae
mov
nop
movsb
mov
repz
mov
aaa
icebp
imul
dec
mov
sysexit
xchg
lock
jbe
pop
pushf
jne
or
or
inc
fisubl
das
out
pop
std
mov
pop
cmpsb
and
incl
jmp
jbe
nop
loopne
xor
pop
push
subl
fwait
ret
sti
std
in
call
aaa
mov
mov
loop
pop
mov
pop
aam
fisttpll
mov
mov
in
xchg
rorb
ja
jne
and
mov
addr16
sahf
sbb
cmp
hlt
pusha
push
rcrb
test
adc
add
mov
testl
xchg
inc
fcoms
mov
push
push
repnz
xchg
dec
int
ret
scas
shll
das
mov
push
ja
add
rolb
outsl
aas
test
in
adc
and
add
cmpb
addl
nop
pop
ret
cld
sub
loop
push
mov
cmp
call
jae
test
mov
jp
cmp
fisubl
ds
xchg
cld
inc
push
xchg
mov
pop
mov
nop
pop
dec
les
hlt
xor
push
lret
mov
pop
lea
pop
icebp
and
fisubrs
mov
xor
adc
push
mov
mov
push
inc
lods
je
loopne
dec
push
or
sbb
inc
arpl
js
popf
cmc
adc
push
inc
nop
sub
lea
cltd
push
fildll
fldenv
push
stc
or
out
lods
xchg
jb
aaa
and
pop
js
cmp
jo
xchg
test
xchg
lds
mov
cmp
push
push
push
aam
clc
lock
xor
sub
call
push
cmp
adc
fisttpl
lds
aas
pushf
loopne
or
cmpsl
sub
in
popf
sahf
jbe
adc
xchg
xchg
mull
sub
insb
adc
and
and
push
popf
jle
sbb
fwait
lahf
or
push
pop
add
scas
sub
rorb
fldcw
dec
ds
add
rcll
xor
fisttpl
xchg
add
push
mov
hlt
mov
stos
add
fimull
jmp
das
into
add
fnstenv
dec
pop
lods
push
push
mov
int
nop
pop
mov
cmpsl
sti
pop
out
mov
dec
xchg
out
cmp
pop
js
mov
mov
sbb
pop
xchg
and
ljmp
xchg
mov
dec
shll
pop
clc
adc
sub
mov
pusha
jg
imul
or
jnp
fisubrs
test
shlb
add
and
inc
fnstenv
sbb
xor
push
cmp
lods
cmp
scas
imul
mov
push
adc
push
cmpl
sub
jecxz
shrb
mov
inc
lods
mov
loopne
fwait
xor
xor
loope
sbb
cli
sbb
out
jns
mov
lds
ds
add
loop
add
and
es
mov
ret
adc
jle
pavgb
adc
cmp
jmp
shrb
pop
mov
cmp
xor
pop
add
cmpsl
in
or
mov
scas
inc
fcoml
pusha
sbb
pop
daa
adc
in
xchg
sahf
loopne
cs
xchg
cli
data16
mov
enter
mov
mov
sbb
add
aaa
data16
xor
shrb
push
icebp
mov
inc
and
data16
daa
aas
jp
or
ret
sub
xchg
pop
andb
loopne
or
add
insb
xor
int
add
loop
add
pop
scas
ljmp
scas
xor
pop
mov
xlat
stos
inc
cld
cs
dec
adcb
lds
rcll
add
insl
jl
cmpsb
scas
fidivrl
fiaddl
rol
add
cmp
imul
loop
js
shr
push
jo
and
cmp
adc
push
push
adc
jle
mov
add
sub
test
xor
mov
dec
sub
mov
in
fmulp
pop
push
pushf
pop
clc
loopne
dec
pop
add
and
push
adc
out
aaa
stc
adc
popf
fmull
xor
and
sub
movsl
rol
add
and
roll
movsl
cmpsl
or
jbe
mov
sub
sub
push
pop
fists
movsb
mov
movl
paddd
es
test
inc
roll
test
inc
add
mov
jl
cmp
imul
cmp
sbb
lock
adc
mov
pusha
cmp
fisubrl
sbb
popa
mov
mov
inc
xchg
fistps
outsl
pop
jecxz
rcrb
lahf
clc
push
or
add
loopne
shl
repnz
or
jae
adcb
incb
stos
mov
sbb
aas
scas
aad
add
lods
push
lahf
and
js
mov
pop
leave
hlt
scas
dec
idivb
popf
xor
cmp
out
test
cmp
add
icebp
cld
fs
imul
sub
cs
jb
fisubrs
and
pop
ljmp
loop,pt
mov
rolb
push
adc
dec
add
ficomps
daa
popa
add
jge
ret
jae
aad
and
fs
js
push
cli
icebp
pop
sbbb
in
sbb
lds
out
addl
stc
push
es
jne
loop
shrl
sub
repz
outsl
roll
add
scas
hlt
jmp
sub
int3
jmp
mov
test
and
push
push
hlt
sbb
jne
popf
dec
mov
fld
and
cmp
pop
sub
loop
pop
adc
sub
mov
mov
add
fmul
push
mov
push
cmp
push
mov
data16
cltd
adc
push
out
jge
jnp
test
sbb
cmpl
loopne
pushf
dec
pop
xlat
icebp
dec
jg
data16
mov
pushl
jne
mov
js
sahf
imul
dec
icebp
mov
fmuls
cmpsb
sbbb
cmp
aam
stos
cld
xchg
stos
cmp
mov
mov
clc
in
push
inc
mov
cmpsl
lcall
cmp
or
add
xchg
mov
cmc
cs
sub
and
pop
call
pusha
jnp
xor
inc
jp
push
mov
push
ficomps
arpl
cld
push
into
nop
out
mov
sahf
jp
push
out
xor
notl
inc
imul
push
aad
icebp
mov
ja
pop
mov
xlat
addr16
xor
xor
mov
sub
lods
mov
dec
stc
push
mov
and
cmc
mov
int
adc
std
pusha
mov
pop
clc
sub
jno
xchg
movsb
dec
cmp
cmp
xchg
mov
push
nop
rcl
scas
mov
mov
testl
or
mov
test
rcll
add
jb
add
jae
cmpb
and
jo
sbb
inc
pop
mov
xor
push
and
arpl
inc
dec
repnz
imul
xor
test
add
push
loop
inc
nop
fmull
and
lock
add
lock
xor
fiaddl
fldl
push
mov
xchg
out
test
fnstenv
add
push
out
ffreep
inc
loope
mov
push
insl
adc
adc
ljmp
jbe
leave
repnz
xchg
add
mov
jb
das
inc
daa
pop
loopne
and
pop
fidivl
stos
dec
pop
stos
push
xchg
pop
mov
inc
cpuid
or
push
dec
aas
lret
adc
adc
mov
fimuls
or
movb
cld
inc
out
sbb
sub
jne
stc
or
pop
mov
stc
stos
push
push
filds
sub
in
cwtl
mov
inc
rcll
icebp
and
fmulp
dec
out
loopne
mov
xlat
mov
fwait
rclb
push
mov
lahf
mov
add
fcmovnbe
push
imul
or
push
sbb
sub
lea
pop
movsl
rcrb
loop
mov
lret
pusha
nop
ret
pop
jo
lds
outsb
cmpsb
fisubrs
cwtl
mov
call
mov
addr16
pop
faddl
mov
stos
push
call
pop
into
aaa
pop
arpl
jp
in
pop
jecxz
js
rolb
cld
xchg
mov
cld
iret
aas
outsb
jno
push
popf
mov
int
inc
insb
call
mov
dec
js
rolb
jb
out
add
jecxz
shll
cli
in
sbb
sbb
insb
mov
filds
push
lahf
int
cmpsb
neg
ret
sbb
mov
adc
stos
push
cmpsl
shll
dec
push
adc
es
and
dec
sti
jo
jp
push
scas
cmovnp
hlt
pop
call
cvtpi2ps
inc
cmp
mov
fisubl
aam
dec
andl
nop
enter
adc
xor
add
int3
and
cmc
out
movsb
mov
sarb
sub
mov
cmpsl
test
scas
add
data16
dec
aam
mov
adc
adc
sti
xor
aam
mov
jo
test
jmp
std
jnp
out
arpl
sub
push
pop
dec
and
xchg
inc
mov
int
push
sbb
imul
rclb
jne
hlt
cmp
rcrb
add
popf
outsb
cmp
inc
pop
xor
adc
pop
ret
pop
mov
aaa
arpl
scas
inc
mov
sub
sub
sbb
and
loopne
pusha
ret
jne
mov
pop
pop
je
pop
cmpsl
mov
mov
push
cld
xor
adc
mov
xchg
mov
pusha
call
adc
test
and
xchg
dec
out
mov
dec
out
rorl
push
jne
aaa
or
ret
mov
ljmp
stos
and
sbb
cwtl
test
pop
push
test
rolb
pusha
push
mov
into
in
xor
mov
jb
inc
sub
scas
cmp
xchg
loope
add
inc
and
js
fs
lock
or
loope
notl
or
or
or
aaa
sbb
or
dec
lcall
pop
cmp
xor
xchg
test
mov
fsubr
add
fiadds
lds
arpl
cmp
sub
adc
notb
and
enter
add
shll
cltd
pop
or
cmpsb
or
push
pop
adc
movsb
jle
and
or
cmp
dec
out
and
dec
cltd
paddsw
lea
or
scas
xchg
lcall
cmp
mov
mov
sbb
inc
mov
dec
cmp
mov
cs
sub
fcoms
cli
loope
inc
xchg
jnp
lods
mov
out
sbb
mov
pop
mov
cmp
popa
stc
lahf
jo
fisubrl
push
xchg
ret
cmp
gs
push
push
cmpsb
cmp
hlt
or
pop
adc
adc
sbb
xchg
or
xor
pop
xor
mov
mov
mov
lock
std
inc
xchg
and
xor
daa
in
jo
cmp
jae
outsb
cmpsl
or
jge
add
lret
push
je
push
hlt
or
push
xchg
pop
test
sub
sbb
loope
xchg
je
push
xchg
adc
push
mov
pop
bound
pop
aad
mov
cld
hlt
cmp
subl
mov
jns
or
lret
sub
les
pop
sub
mov
mov
xor
aad
jp
push
jno
ret
aad
xchg
loope
mov
mov
cmc
pop
jno
mov
lcall
xor
cmp
int
mov
fwait
jbe
xchg
fbld
cmc
xlat
loope
xor
shlb
push
xorb
jge
cmp
cwtl
sub
and
es
push
mov
push
call
clc
adc
in
in
mov
pop
or
xchg
push
sahf
daa
popf
insb
add
xchg
mov
aad
imull
cs
mov
push
leave
pop
rcrb
icebp
and
and
add
ds
sub
outsb
jecxz
mov
enter
js
loop
std
arpl
or
xchg
xchg
out
adc
cltd
xorl
jl,pn
cltd
out
fs
add
cmp
out
dec
clc
xchg
cli
xchg
adc
dec
decl
clc
add
xchg
mov
shll
push
lds
fidivl
or
pushf
jmp
cld
xor
sub
xchg
dec
addb
rol
mov
lds
out
out
fnstenv
xor
jge
insl
lock
and
add
sub
es
xlat
push
jb
sub
in
adc
sub
mov
or
mov
gs
pop
out
inc
mov
icebp
mov
shlb
out
and
inc
mov
add
ret
mov
addps
jmp
movsb
aas
cmc
movsl
cmp
inc
adc
pop
insl
jecxz
mov
stos
inc
call
xchg
gs
mov
inc
js
push
sbb
sarb
lods
fbld
loop
xor
movb
or
mov
mov
xchg
fcoms
loope
push
mov
xchg
in
sbb
ror
insl
fidivrs
shlb
mov
call
jmp
jge
inc
call
out
test
mov
jl
cmp
pop
jecxz
aam
insb
clc
int3
scas
pop
cli
push
hlt
sarb
repnz
pop
inc
movsb
imul
inc
sub
ret
out
xchg
ja
and
in
leave
arpl
enter
nop
push
lahf
sti
test
xlat
ficompl
insl
jno
dec
test
mov
or
fcompl
xor
popf
xchg
jp
pop
shl
xor
push
aam
push
and
shrl
frstor
dec
pop
rolb
fs
and
daa
or
sub
jg
popf
xchg
pop
and
fidivrl
sarb
xchg
repnz
in
adc
ja
adc
cmc
push
in
into
loop
cmp
mov
sbb
in
cld
sub
lods
sti
pop
adc
inc
jae
xor
push
push
add
push
mov
fs
pop
test
decb
fsubl
cmpsb
popa
jne
jnp
ljmp
jo,pt
adc
sub
sahf
push
test
cmp
mov
lahf
pop
push
in
push
jmp
push
jo
les
lret
inc
cmpsl
rcl
or
sahf
bndldx
push
std
add
lcall
mov
adc
inc
xchg
shrb
in
jl
out
mov
cld
aam
push
jae
push
pop
fs
sbb
lods
iret
cmp
in
icebp
dec
fld
pop
and
mov
mov
sub
loopne
jp
stos
mov
test
push
iret
adcb
adc
xlat
bound
xor
mov
xchg
addr16
push
or
inc
inc
mov
loop
adc
inc
pop
add
sub
rcr
nop
and
push
pop
or
push
daa
cs
ret
dec
push
mov
hlt
loopne
cmp
negl
mov
sub
mov
lods
xor
push
dec
push
cmp
sbb
pop
into
pop
in
jge
or
mov
xor
imul
mov
js
xchg
shl
out
jo
int3
cld
cmp
adc
inc
test
out
aas
xchg
and
jb
push
dec
jno
les
sub
pop
lahf
xchg
xchg
mov
ret
add
aam
movsb
nop
mov
add
dec
fsubr
rolb
jge
or
repz
adc
outsl
cwtl
mov
or
xor
insl
xchg
mov
sub
daa
out
push
and
xchg
jne
mov
fwait
out
jne
mov
inc
mov
loop
ret
pushf
cmpb
xchg
pushw
enter
lcall
pop
cmpsl
mov
jp
xchg
int
mul
clc
pop
pop
nop
pusha
mov
ror
mov
sub
push
inc
xchg
sbb
mov
and
inc
and
adc
popa
clc
sar
sbb
pop
pushf
mov
aam
push
xchg
fimull
pop
sti
xor
ds
loope
inc
rcrb
jbe
iret
dec
fsub
test
pushf
adc
ret
pop
aas
sub
and
jmp
or
das
or
and
js
roll
push
mov
je
xchg
xor
dec
or
hlt
dec
xchg
mov
aaa
push
adc
adc
add
push
nop
pop
add
test
inc
and
bound
out
decl
aaa
aaa
divps
jbe
in
test
dec
sahf
cmp
ds
aaa
pop
inc
pop
push
shlb
jmp
pop
cwtl
outsb
sub
je
imul
push
xchg
jns
mov
add
push
in
push
fsubp
pop
sahf
cli
insb
outsb
js
sarb
popf
adc
orl
fwait
push
mov
xchg
repnz
push
sbb
xchg
fdivs
sti
jo
fcomip
mov
cmc
xor
jns
orl
lret
inc
add
rorl
pushf
add
call
mov
dec
fucomp
xchg
sub
test
mov
jl
stos
subb
sub
push
clc
lahf
pop
pop
sbb
add
mov
inc
mov
fistl
adc
or
ja
jne
out
xchg
loopne
xor
outsb
push
push
push
inc
scas
sbb
ljmp
jmp
cmp
sub
inc
mov
ss
sbb
mov
popa
fwait
aad
xchg
out
mov
push
das
test
daa
stos
popf
lret
adc
ds
mov
andb
sbb
das
mov
out
mov
jg
arpl
cmp
pop
jae
or
jmp
idivb
popa
inc
rcl
pushf
xchg
nop
xor
xchg
js
mov
push
mov
mov
or
int
das
mov
int3
adc
xor
test
mov
stos
cld
test
mov
loopne
jbe
inc
pop
sbb
shrb
or
xchg
add
outsb
pop
pop
cmp
lds
and
aas
jp
addl
push
sbb
dec
add
cs
into
or
sub
fldl2e
push
mov
lds
mov
shrb
mov
stos
popl
fs
lret
loop
inc
mov
mov
fwait
mov
push
je
xchg
pop
pop
add
and
or
mov
rcl
and
stc
test
adc
mov
sbb
test
mov
enter
loope
ljmp
fdiv
inc
and
mov
push
pop
fimull
movsb
hlt
pop
mov
gs
push
dec
or
dec
jae
in
sahf
cmpsl
cmp
dec
cmp
jae
andl
xlat
mov
fwait
jns
stos
cmp
enter
test
aaa
cltd
andl
icebp
loope
or
xchg
rcll
inc
jmp
add
xor
add
std
xchg
dec
xchg
fwait
lcall
test
dec
xor
xor
fdivrp
aad
in
pop
adc
pop
shlb
dec
lahf
pop
add
add
push
mov
cmpl
scas
mov
out
wrmsr
jp
xor
inc
cli
lcall
add
inc
enter
pusha
loope
incl
pop
cld
adc
dec
addr16
ja
ret
pop
sub
jno
dec
in
jne
mov
fs
pop
lret
ja
xchg
cli
lock
in
rorb
fldln2
ret
xchg
test
xlat
sarb
bound
push
push
sbb
mov
and
add
cs
push
xchg
add
inc
pop
and
pop
pop
loopne
xlat
ljmp
sub
cmpsl
loopne
adc
rclb
pop
cwtl
lea
aam
xchg
cmpb
xchg
push
stos
dec
aam
adc
mov
add
enter
or
pusha
inc
jge
clc
lods
xchg
in
sub
sub
mov
jecxz
loop
pop
inc
pop
imul
iret
vcvtps2dq
cld
mov
jle
dec
jno
mov
dec
xchg
subb
je
js
cmc
dec
roll
outsb
fistps
lret
xchg
hlt
sub
push
sbb
movsl
sahf
add
push
popa
cmpsl
ds
lods
std
xchg
ds
loop
xchg
pop
imul
mov
sbb
mov
decb
rorl
adc
mov
cmp
adc
dec
mov
pop
rcl
outsl
sub
push
inc
adc
cmp
addl
mov
jnp
arpl
sbb
pop
push
sub
dec
shrl
add
add
push
pop
mov
inc
cmp
lahf
jns
push
rolb
cmpsb
cs
dec
inc
stos
imull
rorb
sbb
mov
lahf
sahf
pop
jns
lods
mov
insb
xor
xor
xchg
es
and
push
adc
aas
xchg
inc
movsl
push
lods
stc
shr
push
call
cmovle
es
test
jp
lahf
ret
mov
repnz
in
sub
out
clc
push
pop
and
jle
sub
jge
ds
or
add
or
or
xchg
jg
or
out
std
adc
add
push
std
xchg
push
test
mov
into
in
mov
mov
dec
iret
pushf
cmp
sub
adc
push
jg
int3
xor
jge
push
orb
push
cmp
test
or
sbb
cmp
inc
dec
xchg
popf
adc
fwait
ljmp
pushf
fidivs
enter
mov
mov
lods
mov
cmp
mov
xchg
in
in
and
or
or
jnp
inc
cmp
cmc
xor
negl
clc
pop
movsl
mov
dec
stos
nop
add
add
stos
daa
xor
mov
outsb
fwait
mov
mov
aam
ljmp
aam
xor
arpl
fstl
hlt
add
enter
ja
inc
shll
push
shrl
adc
xor
sub
mov
push
movsl
in
add
lds
dec
or
cli
int
sbb
je
pop
sub
orl
int3
sub
jl
adc
and
or
inc
loope
sbb
in
jns
cld
ret
scas
test
sahf
lds
lock
sub
jb
xchg
lods
in
add
test
clc
fs
enter
out
or
addr16
xlat
movsb
pushf
mov
lea
addb
inc
in
and
pushf
dec
inc
mov
dec
ffreep
xor
call
outsb
out
movsb
dec
inc
repz
mov
mov
pop
xor
int
xchg
aam
xor
ret
hlt
inc
cmp
out
add
pop
sub
jmp
cmp
and
lea
cmp
orl
outsl
test
std
cltd
or
test
ret
jl
push
shll
xchg
xchg
sub
jo
push
sarb
movlps
push
popa
push
sub
add
enter
xlat
outsb
pop
lods
push
lods
dec
sbbb
inc
fst
add
fs
jnp
leave
fiaddl
adc
add
and
jo
and
iret
mov
cld
adc
inc
jo
or
push
subl
push
sbbl
loop
add
push
add
inc
mov
cwtl
sbb
dec
insb
and
cmp
pop
jae
adc
mov
ljmp
pop
and
adc
js
sarl
imul
push
inc
inc
popf
sub
stos
in
mov
dec
les
mov
mov
test
cmp
xor
ret
inc
dec
jb
mov
mov
jae
and
push
leave
fcomps
bound
lcall
jge
loop
xor
pop
add
sbb
lock
ds
push
in
or
ret
xchg
mov
sbb
jne
xchg
or
mov
xorl
movsb
pop
and
sar
fwait
jl
adc
cmp
std
mov
and
ds
out
jne
and
fwait
lods
jg
dec
popf
adc
test
pop
mov
xchg
aaa
push
fisubl
add
sbb
inc
js
xchg
mov
orl
test
lret
sahf
pop
xor
jne
sbb
and
push
lds
lahf
test
out
push
cli
add
cltd
scas
in
push
push
push
int
push
sub
es
mov
cmpl
cmp
pop
mov
push
inc
mov
in
jne
lea
shrb
loopne
pop
hlt
adc
push
cmpsl
pop
movsl
inc
dec
je
adc
insb
rorb
aam
popa
jl
leave
out
mov
aad
mov
ficoml
aad
icebp
imul
clc
pop
dec
add
dec
loop
push
xchg
leave
and
aam
dec
jne
stos
xchg
incl
js
cmc
pop
jne
popf
ja
dec
push
xchg
and
lret
jnp
dec
pop
imul
cmpsl
adc
mov
imul
pop
jle
ret
das
jb
andb
pop
pop
mov
cwtl
push
push
repz
lea
mov
cli
clc
sbbb
pop
loopne
mov
pop
add
adc
outsl
repz
jmp
mov
mov
mov
pop
shlb
dec
mov
inc
aam
add
movsl
push
lock
pop
mov
jmp
and
adc
shr
pop
cmp
out
cmp
es
jle
cld
shlb
mov
sub
cmp
push
inc
inc
lods
fwait
les
inc
xor
mov
lods
cmpsl
xchg
je
int3
xor
bound
mov
aad
mov
jmp
push
fwait
sbb
loopne
outsb
test
in
cmp
lock
stos
lcall
mov
mov
mov
push
cmpsb
popa
hlt
leave
rclb
push
or
mov
mov
loope
adc
push
insb
mov
cmpsl
filds
icebp
xor
fildl
ret
lret
push
stos
dec
in
mov
pop
paddb
add
jo
in
mov
xorb
je
loopne
push
pop
inc
sbb
xor
or
mov
mov
mov
xchg
cmp
test
ret
jmp
in
icebp
add
pushf
inc
mov
pop
xlat
test
sarb
mov
mov
push
and
sbb
out
fdivrl
pop
inc
inc
jnp
push
dec
inc
lds
mov
ret
dec
push
fnstsw
scas
stc
sahf
fcomps
fisttpll
movsb
pushf
inc
cmpb
fcoms
inc
pop
pop
jl
icebp
enter
jb
jo
sbb
xor
inc
add
iret
mov
dec
mov
insl
movsb
es
ds
sbb
cwtl
jl
pop
test
gs
pop
ds
or
sbb
xorl
xchg
mov
jbe
movb
nop
jb
outsb
popa
ljmp
icebp
loopne
xchg
hlt
je
pusha
xor
jnp
xchg
punpckldq
test
test
sbb
mov
inc
add
and
imul
popa
sub
cld
adc
add
mov
daa
aaa
test
ret
lret
and
cmpsb
push
enter
lcall
clc
rolb
lock
inc
or
lock
dec
add
push
ret
push
sbb
imul
pop
lcall
push
fwait
lahf
adc
aaa
mov
adc
jp
sbb
mov
push
in
adc
cmp
add
mov
js
inc
add
js
adc
jbe
pop
or
mov
mov
lcall
xchg
pop
and
add
xor
xor
fiadds
fdivp
dec
nop
jecxz
nop
mov
outsb
adc
fcoms
roll
jb
xchg
cmpsl
cli
les
outsb
pop
ret
and
pop
scas
movsb
pop
cmp
xchg
leave
loope
sub
push
inc
ds
xchg
xor
mov
sbb
ja
test
call
mov
pop
gs
lods
pop
movsb
or
test
xchg
in
les
ret
enter
rcrl
push
sbb
arpl
ljmp
mov
cld
add
xor
dec
sbb
mov
inc
arpl
ja
cmc
lcall
cmc
pop
and
inc
jnp
mov
sub
inc
mov
cmp
cli
mov
lcall
cmpsl
inc
loop
orb
inc
add
insl
lcall
and
rcr
pop
add
mov
cmpl
sbb
out
mov
outsl
push
xchg
call
int
repnz
rcr
leave
sbb
pop
call
adc
les
adc
jge
addr16
jle
xchg
add
popa
and
inc
daa
dec
xor
push
ret
out
lods
jp
call
jb
cs
loope
xor
jns
sbb
inc
insl
jl
pop
out
nop
rolb
add
psraw
aaa
add
sbb
bound
sub
cmpsl
or
ds
ds
adc
xor
or
aas
cli
or
lcall
push
dec
pusha
and
rcll
enter
les
or
addr16
and
xor
or
outsl
cwtl
xchg
push
jl
add
push
insb
data16
xor
ficompl
fildll
jp
test
sub
cwtl
add
push
movsl
not
loop
dec
and
lock
aas
ss
or
ljmp
mov
aas
dec
push
repnz
pop
pop
scas
mov
dec
in
push
inc
cwtl
rolb
mov
dec
jbe
repz
adc
xor
sbb
mov
or
loopne
xor
push
push
mov
push
js
lea
insl
inc
mov
stc
mov
outsb
xchg
mov
sub
xor
mov
fstpt
sub
fstl
mov
pop
call
push
push
ds
lock
cmpsl
lahf
gs
jno
pop
test
int3
sbb
cld
pusha
shll
xor
ljmp
lea
mov
cmp
pop
shrb
pop
inc
cmp
loop
jl
mov
xor
mov
and
mov
xor
pop
cmp
pop
pop
sbb
test
jg
xlat
je
das
inc
dec
pushf
sti
pop
mov
or
cli
adc
cmp
clc
or
lock
jl
call
and
into
lock
shll
dec
sub
std
xor
push
xor
push
bound
mov
aaa
mov
mov
fdivl
jbe
adc
sub
rorl
cwtl
sarl
jg
or
or
dec
pusha
or
insl
xor
das
mov
mov
lods
or
stc
stc
adc
push
aam
cld
xlat
adc
cmp
jle
bound
mov
sub
jmp
jge
repz
xor
dec
xor
das
lcall
mov
rcll
sahf
test
shll
cwtl
mov
imul
inc
roll
mov
add
pusha
cltd
and
mov
pop
popa
orb
and
add
xchg
cmp
and
mov
lahf
pop
jecxz
mov
push
imul
sub
hlt
pop
jge
ljmp
xchg
outsl
icebp
push
pop
pop
les
push
jo
mov
aas
daa
lret
sarb
out
jbe
iret
pushl
mov
scas
hlt
xchg
cmp
push
cmpsb
sbb
mov
dec
fwait
insb
fisttpll
hlt
pop
mov
je
movsb
fimull
shrb
and
xchg
inc
or
iret
jbe
fldt
and
shll
pop
mov
adc
int
scas
xchg
les
pop
fcoms
faddl
sbb
out
add
js
push
test
push
js
pop
xor
inc
add
loop
cmp
pop
push
hlt
xorb
rol
lret
push
jmp
mov
push
lds
inc
or
movb
sub
xlat
dec
out
mov
pusha
imul
shl
jo
xchg
es
sub
pop
lahf
into
cmp
inc
jmp
dec
ret
aam
and
cmp
and
dec
in
push
cmp
sahf
ret
push
mov
fs
test
loope
imul
pop
jl
fdivl
into
mov
clc
pop
adc
sub
mov
sub
adc
js
push
push
shlb
inc
inc
andl
loope
mov
test
inc
es
inc
in
jmp
arpl
sahf
das
aam
mov
je
fildll
xor
mov
fadds
cmp
out
loop
and
test
sbb
lahf
mov
or
push
push
clc
vcmpps
lea
jle
mov
stc
lret
xor
push
fildl
sub
ja
push
and
shl
out
mov
scas
push
dec
cmpb
xchg
fadds
mov
lea
andl
repnz
xchg
aas
add
enter
pop
orb
push
std
outsl
inc
inc
mov
shrl
ret
pop
cmpb
cltd
mov
jle
and
in
xor
out
repz
mov
fwait
add
pop
xlat
push
add
xchg
xchg
pusha
popa
mov
imul
ds
outsl
or
lock
ret
push
push
scas
jle
mov
inc
xor
in
cmc
add
mov
fwait
icebp
pop
das
out
or
out
repnz
shl
loopne
cli
add
rcrl
rolb
movsb
mov
insb
mov
ret
pop
mov
xchg
clc
movsl
adc
push
mov
add
es
pushf
add
push
sbb
cmc
mov
mov
or
shll
jb
cmc
pusha
push
gs
orb
aad
and
cmpsl
mov
movsl
lds
sub
ds
in
mov
add
insl
cmp
xlat
aaa
mov
aam
pop
adc
stc
shrb
push
es
ret
popf
fs
dec
add
outsl
cld
jno
out
div
sbb
jmp
mov
ret
sub
fdivl
lds
call
cmpsl
mov
push
push
sbb
loope
fnstsw
pop
popa
movsb
pop
jp
mov
jecxz
mov
jp
inc
pop
in
pop
cmp
jmp
pop
jl
add
fdivrs
and
sub
push
pusha
push
jae
imul
fs
ja
mov
jne
imul
int3
or
push
daa
jbe
test
and
lahf
pop
aam
sbb
cmpsl
cltd
lea
popf
push
mov
repz
lret
sbb
inc
test
push
and
inc
jp
mov
fcmovb
arpl
xor
sbb
cmpb
rclb
out
dec
pop
dec
xorl
ficomps
add
cmp
cwtl
mov
insl
sub
push
or
cli
clc
xchg
mov
ss
jg
inc
cmc
sub
jp
add
add
ljmp
push
jecxz
or
fildll
xor
xor
cmp
sub
cltd
jns
ret
sbb
ret
add
scas
mov
pushf
add
jle
and
mov
jl
mov
pop
lret
ja
rorb
mov
in
xchg
push
adcl
pop
cmp
mov
mov
enter
add
lods
mov
pop
and
fmull
ror
repnz
fwait
add
stc
or
jnp
and
mov
stos
mov
lea
mov
xlat
inc
xchg
sahf
push
and
mov
das
xor
and
mov
scas
les
movsl
push
push
icebp
sub
adc
fisttpll
xchg
jne
inc
cld
mov
inc
mov
pop
dec
inc
shl
push
jb
adcl
shrl
cld
imul
xbegin
jne
xchg
ret
loop
icebp
xlat
int
mov
sbbb
xchg
and
or
lock
dec
sbb
jnp
or
fidivrl
repnz
push
push
add
jp
js
js
fbld
cmpsl
push
sub
adc
xor
inc
or
and
and
mov
xor
in
push
out
outsb
xor
xorb
mov
push
sub
cmc
lock
pop
mov
xor
jo
enter
popa
pusha
jge
lods
lcall
mov
cmp
imul
arpl
sub
ret
icebp
xor
lock
sub
or
ss
pop
in
push
and
sbb
mov
and
pop
std
ret
clc
add
or
adc
pop
adcb
inc
push
insb
mov
daa
inc
popa
test
repnz
add
sbb
sti
stc
mov
clc
add
and
add
out
xchg
push
lret
test
and
adc
xorl
imull
aas
lds
pop
xor
xchg
sar
shrb
gs
xchg
movsb
cmpsl
pop
test
adc
leave
cltd
cld
sub
les
leave
loop
imul
nop
imul
and
test
lea
pushf
loope
inc
sti
ds
and
cmp
pusha
push
dec
test
paddsb
pop
shrl
pop
mov
and
lods
ljmp
add
shrb
sub
shlb
pushf
xor
and
gs
jb
popa
pushf
ret
fists
out
loopnew
imul
filds
lcall
mov
rolb
xchg
test
rcl
cmpsl
mov
push
xor
mov
dec
xor
pop
jmp
mov
subb
inc
stos
lret
sbb
and
nop
xchg
pusha
je
int3
inc
ret
jne
cmp
ds
inc
rcl
sub
in
or
jge
loopne
gs
sti
test
call
sbb
fwait
sti
js
inc
jns
xorps
and
jno
and
xorb
test
push
jle
je
ret
ret
or
push
cmc
sarb
je
repz
dec
fisttpl
adc
inc
sbb
inc
jp
cmp
and
rorb
sub
mov
out
push
adc
dec
jge
ss
aas
inc
mov
addb
mov
pop
cmpsl
push
rolb
inc
xor
ljmp
insb
ss
jmp
mov
iret
xchg
push
or
leave
adc
jno
jl
xlat
les
scas
aad
sub
lcall
fwait
add
push
sbb
inc
fsubr
inc
not
subl
ret
xchg
pushf
roll
stos
cs
push
or
pop
hlt
mov
in
arpl
push
ror
je
pop
inc
lds
loop
aad
stos
es
movnti
jge
sbb
inc
shrl
lret
outsb
cwtl
loop
and
call
or
stc
mov
sbb
and
lcall
ret
clc
scas
mov
inc
ljmp
pop
andb
insb
sub
movsl
mov
add
mov
movsl
add
jl
das
fidivrs
pop
sub
or
mov
pop
andl
cs
cwtl
dec
cmp
mov
sub
add
mov
test
movsb
dec
push
cmpsb
fidivrs
imul
sbb
cmpb
push
cmpsb
aad
pop
or
pop
sbb
ret
inc
loopne
inc
jg
clc
dec
dec
pop
sbb
lahf
scas
pop
daa
jb
wbinvd
push
repz
call
popa
xchg
cmp
cmp
mov
and
mov
insb
lcall
add
pushw
pop
dec
rol
lock
repz
dec
pop
sub
lahf
push
int3
xlat
add
mov
scas
sbb
dec
inc
or
movb
rclb
dec
jle
psubd
push
mov
mov
lcall
aas
nop
sarl
gs
jl
mov
inc
ja
push
jge
aam
pop
imul
movsb
cmp
jecxz
xchg
cmp
and
pop
scas
jmp
mov
push
jmp
pop
xchg
pop
iret
pop
xor
dec
xchg
sub
dec
xchg
sbb
lock
mov
dec
mov
jle
hlt
cmp
xchg
pop
inc
pop
sub
stc
loopne
je
xor
enter
aad
popa
movsl
popa
imulb
out
sub
dec
and
sub
sub
test
pop
js
adc
hlt
xchg
and
adc
xchg
mov
sbb
push
aas
inc
xchg
pop
fwait
outsb
add
shll
jge
inc
xor
inc
push
shr
xor
sub
xchg
repnz
mov
clc
fisubrs
pop
lret
aas
add
loop
adc
cmp
fadds
and
arpl
and
mov
lcall
fistps
jne
or
addr16
inc
xchg
mov
bound
xchg
dec
inc
sarb
add
mov
xor
mov
adc
jae
mov
mov
inc
insb
dec
add
pusha
mov
std
fsts
clc
xor
add
pusha
fldenv
call
popa
xchg
dec
scas
mov
fldcw
add
iret
mov
pop
cmp
test
xor
or
xchg
and
mov
xor
movsb
nop
sbb
jns
sbb
sub
out
in
adc
inc
mov
int3
push
movsb
xorl
sub
out
bound
mov
inc
adc
sbb
adcl
sub
pop
out
cli
dec
pop
cmp
setge
js
inc
pop
push
stos
cmp
and
xchg
pop
lods
mov
or
cli
mov
cmp
je
jbe
fildll
cmp
add
jnp
add
out
jg
ds
dec
or
imul
push
inc
repz
sarl
pop
pop
ds
ficompl
mov
push
jnp
push
cmpsb
cmp
pop
fsubrs
add
and
std
ret
or
jecxz
fmull
jg
mov
mov
xchg
inc
and
mov
sahf
mov
or
fisubs
stc
insb
shrb
xor
mov
lahf
push
add
dec
cmc
ljmp
nop
fiadds
loopne
mov
fsubs
lods
mov
bound
xor
fdivr
cmc
sub
xchg
xchg
jle
add
jge
sbb
icebp
sbb
mov
in
xor
push
insb
rolb
bound
jmp
adc
cmp
popa
testl
cltd
cs
pop
loope
mov
sbb
shr
cmpsb
and
fsubl
cmp
mov
add
add
bound
cs
daa
cmp
and
ret
xchg
pop
add
int
roll
stos
insb
add
mov
sbb
in
jbe
roll
in
sub
fwait
pop
testl
sarb
and
shrb
repnz
and
pusha
pop
insl
xlat
jecxz
sub
shlb
arpl
xchg
test
mov
push
out
add
ja
sbb
pop
stos
cmp
xor
std
out
test
dec
push
shll
clc
enter
loopne
insb
int3
mov
and
push
fprem
inc
maxps
loopne
and
loopne
dec
pop
add
repnz
xchg
push
les
stos
sahf
ret
cmp
push
incl
subl
adc
push
or
sbb
shl
dec
jnp
inc
sbb
movsl
jecxz
fsubl
xchg
imul
ret
data16
loopne
jo
addl
lret
sbb
push
movl
cmp
inc
cmpsl
mov
cmp
add
lret
jne
xor
ret
ret
fwait
shlb
addl
jg
js
inc
inc
xchg
in
decl
call
push
ret
and
xchg
mov
cmpsb
daa
sbb
je
les
lock
fs
or
fs
movsb
lods
push
sbb
mov
xor
pop
es
mov
dec
mov
xchg
rcrb
push
loope
push
push
sub
daa
mov
rcrl
cmp
adc
push
push
stos
mov
out
and
push
inc
les
gs
test
aad
cmpsl
subb
addl
mov
rorb
jns
add
int
andb
sti
inc
add
jp
mov
mov
dec
ret
mov
aad
xchg
inc
jl
adc
jns
jg
icebp
das
xlat
pop
loop
pop
cmp
push
add
and
lea
xchg
int
jae
xchg
mov
test
jbe
sub
push
add
daa
sti
sti
jmp
mov
mov
in
ror
rolb
adc
xchg
sbb
add
mov
movsb
lea
sub
arpl
adc
cmpsb
negl
arpl
lret
sub
cmp
add
jno
cmp
and
sbb
mov
pop
mov
push
hlt
test
jbe
sbb
mov
sbb
add
popf
lock
iret
and
scas
mov
int3
ljmp
or
ljmp
icebp
call
lds
shll
inc
mov
xor
andl
add
ror
ja
pop
mov
and
jge
seto
sbb
shll
cld
call
imul
sahf
jo
cmp
pop
lret
test
fwait
push
aad
mov
push
or
pop
jb
xchg
je
outsb
jecxz
cmp
loope
flds
insb
sbb
mov
push
popa
movsb
add
adc
pop
cmp
out
cmp
aam
jbe
mov
loope
out
and
sub
pop
and
adc
sbb
stos
add
cwtl
or
imul
xor
jmp
icebp
lods
test
fisubs
stos
sub
push
xor
fidivrs
jne
test
push
xchg
cmp
mov
imul
sbb
xchg
inc
roll
jmp
sub
les
pop
jb
fldt
add
bound
pop
add
lods
mov
mov
mov
dec
push
scas
cmp
es
sahf
in
fdivl
aad
pop
lret
fidivs
loope
mov
add
mov
jbe
icebp
movsl
popa
rorb
mov
ljmpw
pop
mov
ret
xchg
popf
jb
push
pop
mov
mov
dec
adc
dec
js
lret
xchg
mov
xlat
sub
inc
push
or
pop
mov
call
rorl
fwait
pushf
lahf
or
stc
xor
mov
mov
rolb
jbe
test
sbbb
test
lock
jmp
rol
push
lret
subb
cwtl
sbb
mov
pop
loope
or
ss
pmaxsw
mov
xchg
subb
pop
out
loopne
xor
add
lret
sbb
mov
je
jge
rclb
ljmp
adc
leave
shrl
inc
cmpb
rcl
lods
push
mov
xor
mov
mov
dec
rcrl
mov
subl
aaa
rorb
cmp
das
lds
int3
out
sub
inc
cmp
pop
testl
pop
adc
call
sub
ljmp
imul
cmp
shrl
jne
cmp
ljmp
cmp
iret
mov
cs
pushf
das
lock
mov
sub
xchg
cmp
push
outsl
push
mov
test
lock
xor
insl
ror
xchg
push
and
adc
mov
cmp
pop
daa
imul
pop
jmp
adc
pop
mov
jo
ret
lahf
in
aad
adc
and
sub
push
dec
jge
je
popa
xor
in
shrb
cmp
out
pop
jl
lock
mov
mov
scas
mov
adc
rorl
dec
mov
ljmp
inc
mov
cmp
iret
pop
mov
ss
mov
adc
add
mov
adc
pop
dec
clc
hlt
aam
mov
and
mov
pusha
cmp
aaa
jecxz
cmpsb
pusha
bound
popf
sti
mov
roll
xchg
cmp
icebp
push
repz
mov
push
loopne
mov
add
xor
jo
xor
mov
shll
xor
add
pop
jecxz
call
adc
mov
push
inc
rclb
sbb
sbb
mov
jno
push
lods
or
mov
aas
and
pop
add
cs
mov
adc
pop
clc
mov
nop
mov
dec
div
ds
nop
shl
and
dec
hlt
imul
clc
aad
jmp
outsb
in
mov
adc
imul
sbb
inc
or
neg
int
sub
lret
das
xchg
mulb
movsb
jmp
ror
push
and
sbb
outsb
add
and
arpl
mov
mov
gs
xor
pop
out
or
imul
movsl
push
pop
inc
add
add
roll
cmpsl
orb
cmpsb
ror
pop
add
xor
lcall
mov
fimull
dec
dec
ja
dec
push
pop
hlt
cmp
inc
int
xchg
ss
jnp
push
jp
mov
sub
call
sbb
mov
push
gs
and
xor
push
out
push
cs
sub
aad
and
lret
xchg
and
add
mov
rorl
jmp
ficompl
scas
sbb
xchg
or
push
imul
jne
addb
cmp
test
inc
cmp
ds
xchg
andl
mov
jns
add
rorb
orl
imul
inc
sbb
push
sarb
scas
sub
add
test
daa
fstpt
rol
arpl
js
mov
mov
inc
clc
dec
sub
ud2
insb
add
cmp
mov
nopl
cmp
mov
sub
pop
xor
sub
fdivrs
cmp
xor
pop
mov
adc
adc
stc
jge
clc
sbb
test
cmp
notb
test
sbb
sti
pop
jb
fimuls
push
and
mov
arpl
jge
inc
cltd
xchg
jbe
test
mov
js
sbb
inc
je
lea
imul
push
xlat
lret
lret
jmp
ss
push
push
out
ds
aam
rcl
jns
inc
fnstcw
sbb
hlt
ret
mov
subb
pop
popl
enter
adc
inc
xchg
mov
repz
sub
sbb
cmovae
cmp
xchg
xor
mov
outsl
mov
clc
push
jl
add
test
xor
mov
lret
mov
dec
push
fldt
sarl
jl
aas
outsb
repz
iret
sbb
outsb
or
movsl
leave
call
xchg
push
jp
fs
xor
adc
cld
mov
pop
das
cmc
adc
add
enter
mov
push
fsub
and
sub
mov
test
ss
rcll
scas
mov
fldcw
int3
loope,pt
mov
add
sub
dec
cmp
in
sub
push
xor
cmp
pushf
add
sub
xchg
mov
mov
mov
or
in
jp
sbb
mov
or
clc
cmpsl
sbb
sub
or
sti
int3
dec
cld
test
jp
ja
dec
xchg
pop
jmp
push
inc
and
mov
xchg
pop
push
push
pushf
loop
ja
push
push
pusha
test
pop
push
mov
adc
push
js
and
inc
xor
in
push
mov
mov
inc
mov
icebp
jo
or
pop
lods
pop
sub
into
roll
inc
stos
movsb
or
lea
pop
mov
dec
imul
jno
repnz
or
jb
sahf
push
movsl
mov
sbb
jb,pt
enter
xor
jnp
jl
xor
stc
scas
ret
mov
dec
rorl
cli
rcrb
mov
jb
jnp
mov
xchg
cwtl
cmp
rorb
ljmp
dec
rcrb
inc
divb
push
inc
ret
sahf
cld
icebp
inc
loope
dec
insb
outsl
pop
loopne
and
xor
lock
xchg
xchg
adc
mov
mov
push
cltd
xchg
nop
fs
jecxz
mov
and
mov
mov
lods
cld
call
addr16
adc
or
cmc
jb
and
dec
xchg
mov
or
mov
lds
sbb
jbe
js
in
lock
cltd
lock
imul
pop
adc
mov
ret
rol
rolb
sbb
rolb
leave
rcr
cmpsl
icebp
test
andb
sti
pop
mov
repz
popa
enter
test
aaa
cmpsb
cs
push
lcall
lea
inc
fstps
cwtl
cmpsl
in
cmp
and
cmc
sub
inc
and
mov
test
mov
fcmovb
mov
testl
sbb
xchg
or
aam
into
add
cmpl
jle
adc
daa
fistl
dec
add
loope
push
push
cmp
sbb
mov
lea
sbb
mov
aad
ljmp
dec
daa
jge
lock
js
dec
jmp
insl
xorb
mov
repnz
sbb
ss
test
add
mov
fwait
mov
sbb
push
sbb
cwtl
movsl
icebp
and
cmp
push
testl
sbb
repnz
test
ret
xchg
push
js
ss
and
addb
icebp
jnp
cmp
xchg
fisubrs
mov
mov
add
pusha
loope
mov
pop
loop
or
lock
sbb
rcrb
in
ja
dec
enter
xor
xchg
mov
cmp
push
xlat
sbb
mov
adc
sub
inc
push
push
jge
clc
pop
lcall
lock
or
and
xor
xchg
inc
xchg
dec
into
and
xlat
cmp
sbb
sub
dec
xor
adc
ret
mov
stos
js
push
mov
mov
pushf
fsubs
mov
call
ds
cmp
pop
insb
sub
pop
cld
xchg
adc
inc
pop
hlt
aaa
push
out
jl
mov
inc
add
scas
cmpsl
mov
es
mov
jp
xor
mov
push
insb
mov
sti
jbe
sub
cli
sbb
dec
dec
stos
xor
xchg
pop
pushf
mov
mov
rorb
xchg
in
push
cmp
cmp
push
rclb
jns
das
ss
sbb
jp
push
push
psubsb
aaa
xlat
xchg
sub
shrb
popa
dec
xlat
test
loopne
fsubl
xchg
xlat
inc
scas
cwtl
jmp
push
jnp
push
lret
loopne
imul
icebp
gs
adc
call
xor
and
les
sahf
mov
jecxz
inc
or
loop
push
inc
aas
inc
lods
lret
push
sti
add
jb
lea
sub
jp
lods
js
sub
jo
xorl
push
lea
clc
add
neg
xor
mov
push
rcr
and
jge
fcoms
inc
test
inc
std
add
xorb
sub
jp
pop
ds
pop
or
jb
daa
addr16
les
and
lods
push
lahf
lea
adc
lret
mov
fcomps
int
dec
cmc
mov
jmp
das
sbb
or
int
fcom
add
sbb
jg
add
dec
inc
mull
lock
dec
jb
sbb
popa
sbb
add
pop
daa
xchg
inc
add
aam
pop
frstor
out
mov
jb
mov
into
andb
add
out
or
dec
sub
cmpsb
mov
xor
rolw
sub
pushw
lods
add
mov
mov
xor
bound
and
popf
icebp
jmp
cmp
test
imul
xor
jb
jle
xor
and
rcr
cmpsl
pop
test
fstp
sub
sub
paddd
push
push
cmc
mov
sbb
or
lods
jl
sbb
mov
mov
push
jno
std
fsubrs
xchg
inc
sbb
sbb
jg
mov
fstpt
xchg
push
jmp
and
lock
outsb
lods
pop
pop
wbinvd
xchg
andl
je
mov
data16
insb
rcll
jae
gs
pop
cmp
dec
popa
mov
in
adc
ret
cwtl
jp
imul
pop
ljmp
pop
xor
jmp
mov
cli
mov
aam
lcall
sbbl
aam
xor
lea
negl
mov
mov
cmp
rcl
push
push
movsl
or
rol
or
lods
pop
pop
call
jae
jno
mov
mov
inc
inc
stos
popf
cli
jne
sub
sub
test
mov
nop
cli
dec
pop
sbb
adcl
add
out
jmp
add
out
popl
mov
xor
js
test
adc
mov
lea
dec
js
ret
rcrb
xlat
loope
insl
push
jae
test
cmp
and
insb
insb
dec
jge,pn
rcll
cmp
jnp
xor
or
inc
rclb
or
sub
inc
loope
cmpsb
adc
iret
in
xchg
mov
push
lcall
movsl
inc
sub
icebp
in
mov
cs
movl
or
lods
dec
jmp
sbb
push
clc
mov
lods
stc
clc
jbe
jmp
mov
mov
xchg
xor
inc
loope
fs
jmp
jp
inc
shlb
pop
pop
fistps
inc
loopne
and
add
in
mov
mov
das
les
xchg
lret
xor
push
dec
popf
mov
je
divb
push
daa
mov
or
cmp
mov
xor
or
mov
dec
gs
subl
and
cmp
punpckldq
mov
jmp
add
adc
rcr
dec
sbb
xor
mov
mov
pop
out
inc
insb
or
or
lret
shl
out
mov
pop
push
add
adc
loopne
mov
add
dec
pop
cmc
addr16
sti
push
sub
pop
std
lret
xchg
push
xor
lea
mov
adc
ljmp
and
mov
leave
cmp
subl
rolb
out
out
pop
push
mov
mov
bound
js
leave
sub
mov
pushf
add
sbb
adc
cmp
pushf
and
mov
jmp
daa
and
pop
pop
cmp
push
stos
sbb
cld
xor
add
nop
jp
or
shl
push
std
lret
inc
sub
out
call
scas
sub
test
sub
dec
dec
clc
sub
jl
jge
scas
adc
faddl
mov
rclb
sbb
jp
loope
push
stc
dec
push
jmp
es
sub
test
outsl
add
xchg
mov
jl
add
sti
test
jbe
inc
xchg
push
cmp
mov
cmp
push
and
inc
add
mov
roll
cmpsb
push
sub
pop
adc
imul
lret
xchg
int
xchg
leave
nop
subl
repnz
mov
cmp
popa
aaa
mov
dec
int3
sub
je
ja
add
addl
inc
add
roll
imul
pushf
and
mov
inc
popa
or
push
aaa
sub
call
aam
fdivp
pop
mov
loope
mov
or
sarl
sbb
into
push
cmp
push
xchg
mov
in
clc
xchg
push
adc
or
inc
in
dec
or
faddl
fwait
pop
lea
fidivrl
add
jbe
lret
ja
icebp
jns
jmp
jo
clc
popf
ss
scas
je
mov
fists
fisttps
xchg
cmp
dec
add
jae
mov
cmp
in
fidivrs
cmp
orl
in
adc
pop
testl
outsb
cli
cmpb
outsb
in
mov
out
cmp
cmc
xchg
bound
pop
nop
outsl
fwait
xor
mov
pop
mov
into
xlat
mov
inc
pop
fsubrp
xor
cwtl
mov
scas
xor
dec
adc
pop
out
jne
subl
sbbl
shrb
lcall
call
and
xor
jg
pop
or
sti
nop
jle
dec
and
and
mov
orl
sub
adc
push
pushf
and
cmpsl
pop
fimull
in
xor
test
sub
cmp
dec
xchg
int3
or
inc
mul
jle
and
mov
xorl
shlb
pop
movsb
imul
nop
fidivrs
imul
push
popa
jp
cmp
adc
mov
dec
rcll
ret
push
imul
lcall
addr16
scas
inc
lock
std
mov
or
iret
nop
stc
mov
pop
div
adc
push
sbb
rclb
pop
jno
cmp
inc
popf
test
imul
aam
pop
cmc
rorl
dec
ret
jo
mov
sbb
adc
dec
inc
fwait
cmp
jle
push
push
sti
cmp
into
cld
or
sub
gs
sub
mov
outsb
sahf
xor
sub
pop
lods
movsl
outsl
or
roll
xchg
enter
sbb
loope
add
mov
fsubrl
sub
jmp
push
ret
pop
loope
xor
push
in
jle
sbb
scas
cs
mov
fstl
and
push
inc
push
mov
les
xor
xor
out
in
das
inc
fistpll
mov
cmp
sbb
in
push
inc
divl
cmp
cld
adc
xchg
fsubp
std
lods
mov
xchg
mov
or
push
insl
lds
jecxz
or
ficompl
fadd
push
cld
and
pusha
clc
xchg
jmp
mull
hlt
insb
pushf
js
mov
cmp
jo
das
xor
sbb
adc
add
lea
push
cwtl
js
push
notl
rcll
rcr
sbb
test
mov
adc
cmc
imul
scas
fcomi
mov
push
mov
js
cli
fstpl
dec
popf
ficomps
mov
mov
or
pop
mov
pop
cmp
aam
ret
pop
sbb
sbb
or
cmp
mov
dec
ret
shl
cmp
inc
push
inc
push
nop
add
lret
cs
lock
test
aad
cmp
hlt
lret
pop
repnz
nop
and
push
sbb
hlt
insb
mov
mov
scas
add
loope,pt
mov
loopne
mov
rol
loope
loop
add
rclb
push
fsubrs
cli
loope
jb
lahf
in
loopne
lods
jecxz
sbb
xchg
repnz
daa
test
lods
or
xchg
out
lret
inc
dec
add
jno
test
in
lds
fstpl
cmp
xchg
lea
jns
cmpsl
cmc
clc
imul
adc
std
and
pop
stos
psrlq
dec
pop
loop
lahf
pop
hlt
lahf
push
xchg
sbb
fidivs
mov
pop
ss
cmp
or
push
pop
mov
push
jns
in
pop
cmp
push
push
and
adc
ds
loop
lods
and
fadds
xor
outsb
nop
cmpl
xchg
fcmovne
shl
pop
dec
loop
and
inc
ljmp
push
xchg
hlt
imul
inc
push
lret
lds
push
lahf
push
ljmp
inc
jnp
ja
lcall
xchg
pop
inc
and
lods
mov
lods
aam
inc
adc
inc
sub
call
inc
dec
pop
jg
test
mov
popl
pop
arpl
mov
xchg
adc
push
sbb
and
jns
xor
les
xchg
imul
add
ret
xor
mov
nop
repz
jnp
pop
push
mov
cmp
nop
jb
daa
sahf
mov
mov
cwtl
cmp
xor
jo
jl
jo
push
pusha
pushf
and
mov
repnz
fxch
sti
push
jbe
fcoml
stc
or
ja
addl
fisubs
xchg
or
aaa
into
flds
xchg
sbb
sub
lods
loope
push
jmp
jmp
ss
jns
and
aaa
cwtl
outsl
cwtl
aam
sub
push
cltd
aam
mov
fnsave
adc
inc
pop
or
mov
insl
adc
mov
xorb
pop
jge
es
mov
cwtl
push
pop
daa
push
sbb
sbb
mov
sti
add
pop
sub
ds
iret
sbb
lods
inc
and
push
cmp
push
push
cltd
push
jno
dec
or
shlb
inc
jnp
repnz
sub
add
pop
es
mov
xchg
inc
lods
aas
sub
sbb
into
imul
testb
ss
jp
aaa
call
dec
pusha
adc
rcrl
cmpsl
mov
sub
adcb
add
cltd
or
cli
aaa
shr
jle
ret
je
test
adc
subl
rorb
aam
jno
shlb
inc
shr
test
mov
jp
push
ds
dec
dec
mov
jg
inc
aad
loopne
push
mov
inc
cmovl
jns
or
or
sbb
fidivrl
js
xor
pop
clc
test
mov
dec
push
leave
rolb
lret
loop
xlat
pop
sti
cmp
dec
shrl
inc
imul
and
push
test
add
mov
sti
dec
push
push
push
cmp
or
aas
call
add
push
sbb
sarb
lods
push
insb
xor
xor
std
push
inc
xor
jne
push
aas
inc
sbb
decl
test
ret
adc
fcoms
in
inc
lret
jle
sbb
cmc
sahf
mov
imul
mov
test
mov
aas
movl
jle
mov
jecxz
push
mov
ds
add
push
enter
testb
add
test
mov
mov
in
jae
test
and
dec
dec
jbe
jmp
leave
mov
pop
push
mov
push
cwtl
jo
or
aas
push
cmp
push
sbb
sti
adc
or
stc
or
ret
cld
xor
scas
cmp
popf
and
int
add
out
mov
repnz
and
das
dec
imul
test
add
pop
cli
outsb
dec
jmp
stos
ret
pop
mov
loopne
and
lds
add
sub
xchg
rclb
imul
scas
pop
test
pop
push
xor
jmp
out
aas
outsl
push
pop
pop
movsb
inc
std
nop
or
ss
adc
mov
sbb
outsl
add
loopne
popf
pusha
sub
push
and
sub
out
fisttpl
xchg
mov
hlt
mov
jl
mov
sub
fsubs
sub
pop
xor
mov
cli
mov
mov
ret
mov
hlt
out
xor
dec
push
jb
lods
mov
stos
ljmp
adc
push
clc
out
mov
add
pop
sub
sub
cmc
cmp
test
rcr
and
pop
popa
mov
icebp
mov
insl
push
sarb
popf
push
cmpsl
fcompp
enter
arpl
pop
and
ljmp
push
xlat
or
jmp
and
nop
push
pop
inc
les
pop
pop
ljmp
pop
je
push
out
rcl
sbb
les
lahf
or
shl
lock
aaa
out
dec
add
jnp
push
jp
adc
mov
popf
inc
js
sbb
and
arpl
jb
inc
aad
outsb
cmp
pushf
and
mov
push
and
xlat
add
outsl
xor
inc
shrl
ror
je
es
int3
sarb
cld
xchg
es
push
cmp
sub
cmp
push
pop
jg
outsl
out
mov
sar
pusha
jg
mov
sbb
bound
loope
dec
jne
pop
and
fiaddl
loope
lcall
shll
popa
daa
popf
outsl
dec
stc
lock
inc
sbb
cli
stc
mov
fs
or
inc
and
repnz
inc
mov
or
sub
out
sub
dec
sub
js
mov
add
sbb
in
or
sub
xor
test
mov
push
xchg
mov
xchg
jl
ss
push
mov
push
push
sub
movsl
enter
int
pop
dec
mov
cmp
cmpsb
adc
jp
push
mov
jp
push
filds
outsb
sub
hlt
mov
push
rorb
daa
pop
cld
out
cmp
out
jno
and
pusha
dec
cmp
scas
pop
add
jne
push
xor
or
push
cmp
push
data16
insl
xchg
je
or
fwait
mov
cmp
cmp
int3
or
or
sub
int3
sbb
insl
cmp
sbbl
out
cmp
add
dec
and
mov
mov
and
cmpsl
jae
dec
shrl
pop
inc
mov
movsl
jb
mov
sbb
inc
add
imull
inc
xchg
lods
mov
push
fdivrl
jp
popf
loopne
imul
movsb
movq
cmc
cmpsb
mov
sbb
ret
pop
insl
cmc
dec
ficoms
and
or
call
rclb
dec
or
sarl
lods
lahf
cli
mov
sub
lods
jo
flds
inc
sbb
into
test
sahf
and
aaa
repz
xlat
aaa
movsb
push
call
inc
or
cmpsl
or
jno
fisttpl
xor
repnz
mov
imul
adc
add
push
repnz
out
nop
cli
add
mov
add
pop
jae
push
pop
jo
in
scas
mov
rolb
and
add
add
or
mov
into
cmpsl
loopne
sbb
sub
or
outsb
sbb
shll
jl
addl
lret
pop
test
add
clc
loope
rcrb
mov
push
and
daa
adc
out
mov
in
clc
jecxz
stc
ljmp
push
xchg
xorl
push
inc
out
cmp
test
add
sub
insb
jbe
js
mov
leave
out
ficompl
cwtl
push
outsl
cmp
mov
dec
notb
or
fmuls
pop
and
movsb
gs
sbb
cmc
repnz
repz
xchg
dec
adc
dec
pop
sbb
pop
xchg
xchg
into
into
lock
xor
rol
inc
scas
inc
jp
inc
pop
xchg
jle
mov
xchg
xchg
inc
or
xchg
add
es
and
mov
adc
jb
jl
inc
ja
cmp
mov
je,pn
inc
aam
xchg
cs
xchg
lea
daa
xor
sub
push
inc
push
jbe
js
test
orb
cmp
loope,pt
and
sti
icebp
lsl
push
mov
lret
lods
cmp
jnp
subb
lock
outsl
aaa
xor
je
mov
mov
sub
lods
mov
loop
jp
or
pop
pop
cmpb
adc
adc
sbb
pusha
mov
and
sbb
push
sar
mov
add
jecxz
js
or
cld
jne
mov
in
imul
push
adc
jge
mov
mov
aad
arpl
xor
addr16
sbb
inc
popf
and
hlt
rcrb
mov
ljmp
orl
call
out
xor
jbe
jmp
mov
dec
enter
add
test
in
xchg
push
xchg
add
stc
adc
jne
neg
mov
adc
mov
fs
inc
out
push
popa
andb
pop
adc
addr16
add
jle
imul
outsb
pmaddwd
cmp
xchg
or
lods
dec
sbb
sub
pop
dec
mull
sbb
push
jnp
xchg
dec
mov
sub
rorb
xchg
mov
mov
fadd
xchg
pop
add
jl
sub
loope
pop
mov
inc
or
pop
jns
xor
scas
orb
movb
mov
and
aam
insb
sub
add
mov
push
ds
sbb
or
mov
adc
ss
daa
mov
xorb
arpl
cmp
fs
shll
test
negb
jae
je
in
ret
inc
push
data16
adc
pop
scas
mov
addb
cmp
das
aas
sub
test
or
adcb
test
fcoms
push
icebp
addl
nop
into
push
push
dec
cmp
xor
enter
jno
shlb
mov
sbb
push
cmp
mov
pop
scas
add
aad
pop
cmp
sarl
dec
stc
rcll
pop
mov
enter
mov
movsl
daa
push
inc
sarb
lret
fwait
inc
popa
in
jmp
sbb
mov
lock
movl
jp
push
sub
mov
add
xchg
push
xchg
cmp
xor
dec
xchg
add
pop
mov
mov
jns
in
cmovno
lcall
and
and
mov
scas
daa
jge
add
mov
xor
test
loop
pop
subl
adc
faddl
push
push
popa
lahf
rcrl
in
flds
or
xor
icebp
adc
adc
rcll
jnp
ljmp
call
imul
ss
mov
es
jp
icebp
inc
sub
mov
or
and
pop
xor
sti
sbb
inc
xchg
std
adc
and
sbb
cmp
stos
jmp
cmp
inc
adc
jge
add
sbb
fists
and
je
sbb
push
insb
mov
xor
jge
ret
icebp
jg
popf
mov
popf
cmp
add
loop
or
mov
pop
jmp
test
pop
imul
loopne
add
sub
inc
add
jecxz
xor
outsb
mov
jns
icebp
jb
sbb
cmp
and
es
mov
aam
cld
mov
stos
iret
in
jge
jge
jne
les
shlb
and
fcmovnb
xor
dec
push
pop
xchg
push
setb
inc
fnstenv
into
lcall
out
pusha
mov
insl
cmp
xchg
incl
dec
movsl
ret
pop
inc
add
or
in
jmp
inc
sub
paddw
xchg
and
inc
js
test
fcomps
test
add
xchg
lods
or
rcll
aad
popf
mov
and
adc
or
add
enter
pop
fdivr
xchg
scas
sti
adc
shl
mov
xor
ljmp
cmc
dec
dec
sub
je
decb
xchg
add
ds
push
mov
mov
lock
add
inc
aaa
sbb
xor
mov
push
or
lds
sub
lcall
cmc
jmp
pop
mov
mov
dec
and
out
shl
add
int3
mov
cmp
sub
jp
xchg
stos
dec
add
adc
inc
test
jle
shlb
mov
in
cmpsb
and
in
sbbl
mov
loope
loope
sbb
dec
mov
pop
jns
adc
mov
push
mov
ja
sbb
jne
mulw
shll
adc
sub
jmp
insl
call
adcl
inc
cmp
shrl
js
mov
xor
sub
lcall
arpl
icebp
mov
adcl
mov
xor
adc
add
pop
sbb
jmp
mov
pop
add
add
adc
jg
inc
jp
inc
and
mov
cld
xchg
cli
sub
push
mov
push
push
fisubrl
fcmovbe
and
push
or
sub
fisubrl
shll
jbe
frstor
adc
in
mov
je
clc
in
loope
and
push
sub
jecxz
pop
dec
lods
nop
lcall
mov
cmpb
dec
out
push
out
push
xchg
pusha
movsl
push
mov
das
ds
cmpsl
pop
pop
mov
aaa
sub
test
pop
movsb
fisubrl
icebp
cmp
jno
and
adc
inc
inc
call
dec
sbb
sbb
subb
mov
dec
popa
add
jne
sub
sub
mov
xchg
cmc
mov
mov
pop
pop
inc
int
gs
divl
jne
dec
ljmp
adc
shll
lock
loope
movsl
loopne
out
xchg
repnz
mov
fidivl
std
xor
repz
pop
fs
jno
mov
popl
iret
bound
mov
inc
xchg
popa
mov
mov
ret
sbb
std
sbb
adc
push
ljmp
das
scas
pop
das
dec
fcoms
push
bndldx
add
cmpsl
ds
movsl
add
adc
push
stos
sub
loop
pop
jno
jnp
faddl
andl
rcl
mov
mov
mov
push
xchg
mov
pop
jo
pop
add
lds
fwait
out
setg
jle
adc
cmc
mov
lock
cmp
arpl
fldl
push
repz
movsl
addb
cmp
imul
mov
add
test
iret
jg
push
repnz
mov
jl
out
adc
jmp
cwtl
notl
das
popa
and
outsb
jge
adc
pop
cld
test
pop
movsl
popf
cmpsb
fsubrs
jb
cwtl
dec
out
lock
mov
lds
mov
cmc
repnz
cli
mov
jmp
nop
pop
mov
iret
lods
not
xor
std
add
dec
adc
testl
mov
push
push
sub
mov
nop
sbb
mov
rcrb
add
pop
pushf
jo
xlat
mov
in
cli
mov
inc
push
cmc
inc
sub
mov
subl
es
and
lock
sub
and
cmp
cmp
pop
jmp
or
clc
and
mov
ficomps
cmp
les
fnstenv
scas
jno
mov
cmpsb
stc
ja
repnz
movsl
call
push
outsb
outsl
mov
fcompl
in
subl
andl
sbb
mov
sbbl
xor
or
and
mov
lds
xor
sahf
hlt
inc
es
add
sub
cmc
loop
jl
jp
pop
pushf
mov
inc
pop
pusha
dec
xchg
and
sub
insl
pop
cld
mov
mov
sub
pop
sbb
testb
or
stos
ret
sbb
or
push
sti
mov
ljmp
jb
stos
dec
lods
jnp
movsl
movsb
lcall
xor
fmulp
rcrl
cmp
xorb
dec
ficomps
jno
push
dec
ss
and
leave
stos
inc
add
out
mov
xchg
bswap
jne
mov
mov
inc
in
adc
inc
cmp
jno
xchg
sbb
scas
or
nop
mov
in
popa
pop
scas
sub
xchg
aam
dec
xor
pop
push
sar
ds
enter
cmpb
push
xor
into
mov
add
loopne
inc
inc
out
pushf
inc
in
and
pop
flds
or
jae
rorb
shl
frstor
mov
lahf
clc
cmpsl
stc
les
stc
push
jecxz
or
lods
mov
and
sub
nop
push
xchg
les
xor
cmp
push
sub
test
call
fadds
jmp
cmpsl
push
and
dec
mov
data16
fucomi
les
add
or
inc
fcmovbe
call
filds
mov
in
mov
stos
aaa
or
adc
cli
in
cmp
lods
addb
mov
xchg
loop
xlat
pop
lcall
arpl
lret
dec
sbb
xchg
jge
out
push
mov
lcall
pop
jmp
repz
xchg
in
pcmpgtd
call
pop
mov
jp
add
dec
out
xor
or
xchg
insb
scas
sbb
mov
fdivrs
or
mov
sbb
cmpsb
xchg
jns
mov
je
jno
lods
cli
dec
add
das
iret
cld
imul
push
shrl
dec
jmp
add
jp
adc
or
mov
stos
xchg
xor
ljmp
jnp
popa
cmp
sbb
inc
bound
popf
dec
xor
mov
jp
add
call
mov
movsb
jle
and
add
jns
xchg
push
and
xchg
add
and
jg
push
pop
mov
adc
fldl
xchg
cltd
adc
push
add
cltd
dec
or
mov
shr
lds
outsl
rorb
cltd
and
enter
in
sahf
movsl
inc
ss
mov
pop
push
shrb
lcall
aam
add
stos
fucomi
push
and
inc
arpl
add
imul
jb
loope
xchg
push
mov
mov
mov
scas
je
push
jno
add
shlb
int3
xchg
xor
sbb
shlb
stos
aaa
jbe
in
or
fdivs
aaa
in
push
orb
stos
sub
xorb
xor
mov
inc
or
nop
sti
xchg
push
cli
ror
cltd
dec
sub
mov
lcall
dec
dec
rorl
sahf
xor
fs
in
cmpb
push
outsl
xchg
ja
jmp
insl
xchg
adc
mov
ret
mov
sbb
sub
mov
xor
xor
xchg
mov
mov
scas
lret
mov
push
cmc
jne
inc
rorb
arpl
add
inc
movsb
pop
mov
mov
mov
xchg
inc
movsb
pavgb
shr
xor
push
mov
imul
jmp
lods
jnp
call
inc
repnz
mov
lret
jmp
icebp
xor
xchg
cmp
mov
sub
insl
sub
push
rcl
aad
es
shll
sbb
testb
xchg
mov
add
adc
cli
dec
test
sti
repnz
lods
xor
push
mov
iret
cmp
imul
adc
aaa
inc
cld
fisubrl
hlt
xor
cwtl
push
push
jmp
cmp
ja
in
mov
aaa
lcall
push
cwtl
loopne
imul
out
dec
je
arpl
pop
loopne
shrl
cld
jge
popa
leave
sarl
xlat
xlat
iret
xchg
data16
jp
and
imul
test
dec
or
in
fcompl
inc
inc
add
cwtl
adc
hlt
jmp
call
arpl
sbb
loope
loope
iret
push
inc
fdivrp
add
xchg
rol
stos
adc
inc
sbb
jge
out
dec
inc
loope
lock
imul
xor
inc
mov
mov
loope
pop
aad
daa
jno
add
jl
add
jg
js
rcl
and
scas
aam
out
aam
test
fadds
cld
or
mov
sbb
test
pop
push
ret
subl
and
add
add
fs
xlat
pop
xor
lcall
jno
cmpsl
cmpsb
mov
jbe
dec
or
rcrb
pop
outsl
loopne
call
push
bound
fcmovnu
push
idiv
ja
lcall
jl
xor
imul
ss
add
inc
xchg
addb
cld
out
pop
sub
out
push
dec
sti
xchg
adc
or
sbb
daa
int
inc
cld
int
mov
cmp
mov
add
mov
popw
ss
sub
das
aas
popa
push
iret
rolb
loope
and
jae
rcrb
jge
out
jl
mov
fsubrp
test
mov
jecxz
jne
dec
add
mov
pop
pop
sbb
sub
sbb
push
xchg
inc
movsl
sahf
and
cmp
push
mov
jnp
mov
rorl
popf
lock
push
fmull
jl
pop
jmp
fdivl
jmp
pop
movsb
das
mov
popa
inc
add
adc
mov
ss
adc
sub
inc
aas
out
test
xchg
aas
call
push
lock
adc
test
jle
cltd
mov
in
shlb
lock
cld
push
js
mov
cmp
cwtl
stos
lock
cmc
sub
pop
pop
push
jmp
adc
mov
jb
sub
and
call
inc
mov
pop
sub
out
dec
lods
gs
cmp
xlat
sub
mov
sub
insb
pop
mov
xchg
or
test
lcall
insl
mov
push
jecxz
pop
das
mulb
and
pop
dec
or
or
movsl
cmp
add
xor
push
dec
arpl
inc
and
les
adcl
pop
add
add
mov
fwait
mov
movsb
jb
add
mov
dec
and
pop
stos
mov
sub
fneni(8087
add
sub
adc
push
jl
adc
sbb
mov
pop
movsb
sbb
cmp
stos
pop
pop
pop
and
pusha
mov
mov
in
aad
add
jle
sbb
mov
cmp
ds
adc
push
cmpsb
ds
adc
xchg
push
mov
iret
fstps
js
in
pop
loopne
push
and
stos
jb
je
mov
push
sub
outsl
cmp
scas
int
les
inc
sub
lahf
call
lahf
test
push
jecxz
jecxz
aam
jbe
dec
pop
das
mov
popl
or
jo
gs
subb
popa
xchg
adc
jecxz
in
pop
insl
mov
mov
mov
sub
ljmp
adcb
inc
mov
cwtl
add
js
sbb
jo
pop
fs
add
rcrb
loopne
jno
cmpb
aaa
inc
dec
insl
daa
inc
jmp
mov
stos
rol
sub
jbe
dec
xor
add
out
pop
dec
call
push
dec
lods
sub
jl
out
add
inc
popf
add
hlt
jecxz
push
mov
lret
add
add
ret
clc
inc
sbb
test
jbe
add
mov
in
call
push
jle
jg
roll
pop
jmp
push
and
sub
jnp
mov
rcl
inc
cmpsb
loop
inc
pop
mov
lea
mov
in
hlt
ret
fimull
jo
pop
jecxz
ret
jle
insb
popf
loopne
jbe
mov
cmp
std
add
xchg
into
or
lock
addb
xchg
mov
or
shrl
cmpsl
aaa
inc
in
dec
cltd
xor
sahf
pop
imul
mov
mov
mov
stos
out
jnp
fcompp
movsb
push
in
ret
or
je
mov
sbb
pop
scas
test
jg
mov
adc
fcompl
icebp
outsb
loopne
inc
inc
insb
pmaxsw
mov
jge
mov
jge
add
jmp
out
daa
in
aaa
pop
loop
outsl
sub
push
sub
jecxz
and
or
orl
push
pop
test
xchg
adc
lcall
sbb
cmpsb
popf
xor
stc
mov
adc
js
cmp
pop
ret
insl
push
adc
in
shlb
cmp
into
add
cmpsb
aad
add
push
xchg
cmp
popf
shlb
icebp
and
inc
into
pop
dec
fsub
rorb
std
aad
stos
sbb
sbb
push
fsubrs
xlat
add
add
out
sbb
xchg
mov
roll
jns
stos
ret
adc
loope
sbb
push
mov
pop
rcrl
addr16
dec
fldcw
stos
mov
xchg
test
jge
cs
fdivr
or
imul
add
inc
lcall
and
stos
jae
ficoms
scas
dec
jg
test
mov
dec
mov
pusha
cld
loopne
test
pop
fdivl
jl
push
stos
xchg
mov
lea
jne
cwtl
stos
push
adc
adc
push
ja
mov
xor
ret
xlat
lods
cmp
ret
ja
xor
sbb
adc
jb
loop
mov
pop
mov
pop
fsubs
aas
insb
mov
and
lock
faddl
dec
fwait
dec
rclb
out
sar
inc
pop
pop
call
inc
sahf
xchg
add
lods
ret
sub
dec
lds
insb
jp
aad
mov
xchg
les
mov
add
bound
fistpl
insb
mov
and
aad
in
or
mov
outsl
dec
mov
bound
lea
sub
dec
mov
mov
pop
or
out
mov
sbb
std
mov
or
adc
loop
in
xchg
pop
sub
mov
and
pop
clc
inc
stc
and
jp
add
std
jo
add
fidivs
les
cmpb
pop
insb
mov
xor
pusha
mov
sti
in
clc
sbb
movsb
test
inc
call
into
sar
movsb
xor
jbe
push
loop
adc
mov
adcl
or
sahf
mov
adc
dec
cmp
dec
jbe
lahf
lret
push
fcmovb
cmpsb
out
inc
mov
pop
cmp
flds
cmp
jnp
hlt
mov
and
xor
test
test
es
cmp
enter
mov
push
xchg
cltd
pop
add
nop
scas
adc
lahf
or
or
jp
inc
cmp
pop
push
std
repz
inc
pop
jl
pop
push
loopne
adc
lret
mov
xor
int
aas
ss
cmp
pop
shlb
mov
mov
jmp
xchg
insb
sub
mov
push
dec
icebp
sub
icebp
pop
or
adc
dec
dec
testb
loope
cmp
loop
adc
push
hlt
mov
mov
and
mov
and
imul
dec
mov
adc
or
adc
mov
dec
xor
rorl
mov
push
mov
mov
inc
loope
rcrl
push
push
shlb
and
leave
aaa
pushf
push
mov
push
loope
outsl
mov
inc
sbb
pop
add
orl
add
jno
sbbb
xor
cli
cld
dec
fldl2t
mov
imul
test
cs
addr16
add
fidivl
bound
add
pop
sub
and
sub
popa
nop
lcall
movsb
push
jbe
test
lcall
repnz
stos
jo
aas
push
test
jb
das
dec
sbb
inc
xchg
cmp
pop
bound
push
jmp
fcmovbe
popf
in
cmc
xchg
pop
mov
push
outsb
jae
orb
test
adc
sub
inc
sub
jo
out
fcmove
add
xchg
outsb
pop
aas
cld
add
and
ds
inc
sbb
adc
addr16
cwtl
stos
outsl
cmp
inc
insl
jl
jnp
jb
mov
mov
pop
push
xor
dec
adc
push
loopne
mov
xchg
or
sub
xchg
dec
cld
call
pshufw
mov
js
inc
and
xchg
in
clc
jno
jae
push
dec
leave
add
je
sti
adc
iret
adc
sbb
pop
jg
jge
xor
mov
iret
in
fsubs
cwtl
movsl
mov
mov
xchg
ds
cmpsb
loopne
fisubl
and
cmp
lods
push
jbe
push
loopne
lret
or
filds
mov
rolb
mov
pop
or
in
jae
push
adc
pusha
out
push
pusha
cltd
push
cmpsb
call
iret
dec
push
xor
dec
xchg
pushf
mov
mov
loop
or
fsts
mov
and
js
sbbb
mov
cwtl
ret
mov
push
mov
push
push
jle
dec
add
jmp
test
insb
and
test
loope
mov
or
lea
ljmp
sub
loope
rcrb
mov
iret
mov
mov
jns
push
inc
dec
clc
xchg
xorl
mov
gs
fcmovnu
sub
cld
and
adc
sbb
rorb
push
arpl
outsb
xlat
inc
xorb
pop
les
insl
mov
or
jecxz
push
mov
rcrb
or
out
data16
or
xchg
cwtl
fcomps
and
sti
into
or
cmpsl
pop
mov
ret
sub
dec
std
adc
sahf
not
push
inc
jg
cmp
bound
cmp
into
lods
jbe
loop
not
sbb
inc
dec
sbb
inc
repnz
aad
xchg
lret
ret
mov
adc
xor
daa
jbe
movsb
dec
jl
mov
push
sub
loope
ret
into
scas
sub
lea
loopne
or
mov
jo
xchg
add
aas
mov
jp
shlb
dec
push
mov
push
dec
std
sbb
loopne
clc
imul
mov
pop
mov
lock
std
ja
jmp
or
inc
pop
push
xchg
jb
push
hlt
mov
clc
test
xor
dec
cmp
or
adcb
incl
jae
movb
jb
adc
pop
dec
std
cmpsb
xchg
icebp
push
push
pop
jl
les
push
cmp
dec
add
adc
dec
mov
pop
xor
loopne
adc
jp
stos
out
lahf
mov
sbb
push
lret
or
sahf
pop
test
cmp
cs
dec
xlat
jecxz
jge
xchg
cmp
dec
clc
pop
jl
jno
clc
and
pop
jl
push
xchg
inc
data16
xor
add
add
mov
mov
sub
rolb
js
imull
fwait
sub
inc
into
pop
mov
adc
cltd
in
mov
mov
jl
out
in
movsb
lcall
push
adc
mov
aam
in
dec
clc
outsb
loop
enter
in
shrb
enter
movsb
mov
fwait
xchg
iret
pop
pop
push
mov
cmp
jmp
sub
adc
in
testb
js
ds
dec
addr16
inc
clc
popf
push
fcmovu
test
scas
jne
frstor
xlat
dec
adc
pusha
pop
jl
in
xor
or
mov
popa
es
call
xchg
and
push
add
sarb
add
jnp
push
add
push
push
or
sbb
sub
inc
add
sub
shlb
cli
or
inc
adc
lods
inc
insl
and
shl
jno
lcall
lock
sahf
and
adc
jo
jae
xchg
daa
or
cmpsl
jge
and
test
xlat
push
rcrb
fnsave
xchg
sbb
jecxz
stos
fstpt
xchg
jae
mov
mov
call
push
movsl
add
out
ret
repz
arpl
jns
jbe
aaa
push
pop
inc
push
or
sbb
ret
loopne
push
cli
xorb
push
les
cmpsb
cmp
cmp
es
inc
sti
pop
or
and
adc
insl
mov
lock
icebp
pop
mov
jecxz
clc
cmpsb
out
inc
or
add
andl
mov
sbb
in
fcoms
xchg
and
inc
or
jmp
ljmp
mov
enter
cmp
jl
adc
aaa
mov
and
fimuls
cltd
dec
shl
and
mov
incb
add
cld
movsb
jmp
out
adc
jb
jbe
movsl
ds
test
ljmp
test
ljmp
test
mov
enter
dec
clc
mov
int
inc
subl
mov
gs
fnstenv
test
out
ret
fmul
push
orl
mov
popf
mov
push
pushf
xor
cmpsl
mov
sub
pop
imul
jmp
aam
ret
pop
cmpsl
add
jbe
mov
xchg
test
mov
mov
rol
test
push
outsb
adc
repz
jo
jae
sti
data16
sub
test
jle
out
xchg
pop
mov
xchg
adc
gs
ds
pop
xchg
fs
sub
inc
lods
push
pushf
and
or
mov
out
outsb
mov
mov
xor
adc
and
out
fwait
test
outsb
xchg
lock
inc
out
loop
rol
daa
cmp
scas
insb
mov
lock
xor
mov
adc
jle
in
mov
into
test
push
or
jno
dec
pop
je
js
cmc
test
sbb
push
pusha
mov
inc
out
js
roll
scas
stos
sub
dec
adc
scas
inc
aam
out
fnstenv
mov
inc
cmp
push
sub
stos
lahf
cmpsb
adc
aam
or
repz
xchg
pusha
jne
dec
push
inc
push
pop
push
gs
sub
adc
fsubl
mov
dec
push
scas
bound
fsubr
and
adc
vcvtpd2psx
jmp
rclb
test
mov
test
jbe
int
cmpsl
mov
inc
add
pop
xor
mov
xchg
mov
push
int3
mov
cs
pop
jmp
clc
dec
jle
sbb
pop
shlb
sbb
ds
add
mov
push
aas
inc
repnz
xchg
xor
push
pop
push
xor
add
aad
adc
loope
roll
loop
cmp
daa
stos
lea
adc
js
insl
mov
in
jl
jbe
mov
repz
mov
mov
xchg
push
sbb
mov
and
dec
test
push
rol
adc
loop
pushf
shlb
xor
inc
cmc
addb
insb
inc
mov
sub
sbb
pop
movl
imul
lock
popf
clc
xchg
test
ja
fwait
adc
xor
jo
pop
in
in
scas
inc
clc
js
or
mov
and
push
mov
or
test
push
mov
mov
leave
push
mov
inc
aad
xor
imull
mov
mov
addb
int
sub
repz
xchg
mov
cmc
insb
mov
ds
cmpsb
sbb
testl
icebp
shrl
ja
lret
ficomps
loopne
jae
push
add
hlt
insb
lcall
daa
add
add
pop
xlat
ja
push
enter
mov
jnp
mov
sbbl
inc
sbb
inc
pop
vcomisd
dec
xchg
add
popf
mov
add
jecxz
rcpps
shlb
pop
sbb
or
or
inc
mov
dec
sub
cmp
test
loopne
mov
hlt
pop
push
movsl
ret
mov
cmp
mov
cmp
movsb
test
adc
jb
nop
dec
cs
adc
xor
pop
jg
cmpsl
adcb
sbb
iret
movsl
adc
imul
or
push
cwtl
scas
in
and
and
pusha
fistl
jnp
mov
in
jp
xor
pop
mov
dec
jecxz
sbb
mov
rcrb
or
sub
pop
aas
or
fs
daa
js
push
mov
shl
jno
test
out
out
rclb
push
pop
lahf
repnz
lcall
adc
in
aad
xorl
in
in
sub
imul
scas
and
add
xor
mov
pushf
sbbb
or
clc
or
js
mov
pop
or
loop
test
push
sti
sbb
dec
movsl
xor
sbb
mov
jge
mov
lahf
inc
inc
mov
cmc
push
jb
in
mov
test
push
mov
imul
scas
jmp
inc
xchg
push
cld
and
imul
mov
int
push
repz
aas
dec
out
xor
inc
sbb
jae
loopne
lods
pop
in
addb
jb
jle
cmp
ror
jle
lea
arpl
or
aaa
cmp
xor
cmp
or
and
mov
inc
mov
sbb
ds
cwtl
addr16
aam
xchg
xchg
inc
mov
leave
rcl
and
pop
add
xchg
dec
call
or
popf
lret
push
or
inc
cld
inc
mov
pusha
rcl
mov
icebp
push
and
xor
inc
fabs
xor
xor
xor
mov
or
popa
repnz
push
inc
push
mov
jge
sub
in
or
mov
push
sti
test
xchg
dec
and
add
shll
or
xlat
jl
push
pop
mov
or
in
ja
adcb
out
sbb
jle
lea
push
jmp
rcll
jp
shlb
cmp
jnp
mov
cs
pop
jbe
mov
or
scas
ljmp
sub
mov
pop
jb
and
jo
or
and
mov
stc
mov
cmpl
insl
sub
subb
adc
jno
and
ret
cmp
pop
push
add
enter
dec
nop
and
pop
mov
jmp
aam
js
xchg
cmp
sub
sbb
out
pushf
mov
and
test
int3
icebp
test
in
ljmp
add
sub
add
int3
movsb
pop
ret
jmp
jecxz
cmp
popa
xchg
test
idivl
cs
es
adc
pop
pushf
or
cmpsl
sub
pop
mov
stos
jl
arpl
jbe
icebp
mov
test
lods
lahf
or
jo
out
dec
mov
pusha
sbb
pop
mov
pop
add
aaa
aam
clc
js
pop
push
lcall
fmuls
or
inc
mov
mov
add
adc
push
popf
outsl
push
mov
push
jge
mov
dec
mov
add
lret
sarb
mov
adc
iret
hlt
and
adc
fcomps
push
ja
sti
sbb
data16
sti
pop
aad
ss
cmp
add
addb
push
mov
or
jge
sbb
mov
push
xchg
xor
xchg
inc
xchg
lods
sahf
divl
aad
ljmp
jne
out
pop
mov
das
dec
aas
xchg
ret
mov
lcall
shr
movntps
mov
pop
and
or
mov
decb
add
sbbl
js
sbb
outsl
int
sub
jle
loop
fdivs
mov
add
sbb
stos
cwtl
or
inc
clc
fimuls
imul
dec
pop
or
and
ficompl
mov
scas
sbb
and
les
out
out
addr16
test
cwtl
outsb
add
ss
push
movsl
sub
push
push
out
pop
insb
push
jb
mov
cmc
cmp
jle
mov
fsubrs
aaa
cmp
push
pop
ds
jl
add
xor
mov
dec
arpl
pop
je
dec
cmp
xor
push
sub
push
mov
das
es
hlt
jmp
mov
cmp
cmpsl
pusha
daa
das
pushf
filds
or
or
push
inc
ljmp
or
jge
cs
int3
insb
call
and
cmp
pop
xor
mov
cmp
repnz
sbb
lock
dec
adc
mov
xor
add
mov
out
add
lcall
xchg
aam
out
pushw
pop
add
mov
leave
xor
dec
xchg
jbe
in
pop
movsb
dec
xor
xchg
push
xor
orb
xchg
xchg
lret
addr16
inc
mov
mov
push
inc
rclb
cli
add
gs
jbe
ja
xchg
mov
dec
call
js
sub
and
lods
and
push
adc
pop
cs
mov
inc
mov
ret
rep
or
add
fwait
jmp
ss
xor
xor
add
in
pop
pop
in
or
sbbb
les
mov
pop
xor
test
clc
cmp
pop
cmp
add
cmpsb
loopne
add
dec
adc
iret
dec
sub
aas
and
xor
in
stc
lret
lock
repz
pop
popa
push
adc
sahf
in
pusha
stc
fcoms
jle
sbb
cli
dec
jecxz
ret
insb
cmpsl
rolb
mov
push
xorb
pop
std
mov
test
in
pop
scas
aam
adc
xchg
outsl
test
ss
loopne
xor
jo
sbbb
leave
sub
xor
adc
lahf
sbb
cmp
fcomi
add
fadd
es
sub
rol
xchg
adc
cli
es
and
push
jae
rorb
xchg
mov
roll
or
mov
pop
stc
sub
clc
pop
add
cli
add
and
push
fidivs
je
xor
sbb
sbb
dec
shrb
daa
adc
adc
inc
xchg
sbbl
rcrl
subb
mov
lods
cmp
filds
xchg
stos
push
clc
mov
dec
stos
push
icebp
dec
sbb
mov
in
add
pop
outsl
cs
dec
inc
adc
jle
add
mov
jge
bound
inc
loop
fmulp
add
movsl
mov
adc
in
mov
lods
fsubrs
dec
xchg
sbb
sti
jmp
push
fs
jp
incb
and
cmp
xchg
xchg
js
shrl
sahf
jp
out
pop
scas
lret
test
ljmp
or
sbb
incl
xchg
into
fs
mov
nop
cmp
xchg
jno
aaa
loop
lock
pop
cmp
mov
mov
xchg
lahf
mov
pop
bnd
mov
cmp
das
and
add
xchg
mov
mov
pop
and
dec
pop
fidivl
cmpsb
in
mov
mov
inc
imulb
push
sahf
jae
jo
lcall
ficoms
imull
lods
ja
push
pop
adc
test
rcrl
inc
pop
subb
fcoms
imull
push
jnp
xchg
cmpl
dec
xor
inc
jl
mov
mov
fadd
push
addr16
mov
cmp
shlb
andl
inc
cmpsb
fidivrl
mov
mov
xor
pop
xlat
lods
aam
jl
jmp
movsb
sub
cli
xchg
mov
scas
add
lock
and
ffree
int
cmp
fs
push
and
test
pop
icebp
mov
lds
push
test
xchg
popa
add
xor
mul
push
jge
push
addr16
adc
push
push
rol
push
push
scas
int
mov
data16
adc
pop
pushf
leave
sbb
sbb
push
les
mov
push
jnp
or
push
out
jo
icebp
loopne
xchg
add
ficomps
out
mov
jl
mov
mov
xchg
sbb
movsl
je
das
int3
test
pop
iret
pop
push
mov
add
and
imul
movsl
and
sbb
ds
cmpsb
pushf
jno
inc
addr16
daa
pushf
loop
xchg
sbb
adc
mov
sbbl
ss
flds
push
call
push
cmp
mov
and
loope
cmc
mov
push
cmpsl
shlb
cmp
fildl
lea
dec
jle
push
test
pop
inc
jae
jb
lret
xchg
jge
ss
aas
pop
cmpsb
inc
das
jo
call
test
jbe
out
inc
loopne
fwait
scas
test
popa
test
mov
sub
add
pushf
pop
ja
mov
cmc
dec
xchg
add
cmpl
xchg
das
icebp
or
out
filds
daa
test
outsb
push
cli
xchg
lea
or
mov
xor
ror
nop
mov
loopne
cmp
adc
insb
cmp
loop
outsl
roll
pop
jp
in
rcll
in
sbb
shl
mov
lods
sub
mov
aad
lahf
dec
adc
jae
mov
outsb
mov
lds
out
lds
popf
or
or
jp
test
sbb
rcrb
sbb
jle
dec
cmp
call
cwtl
cld
nop
sub
leave
pop
push
xor
mov
push
pusha
dec
mov
test
arpl
mov
loope
mov
loop
and
push
lahf
sahf
sahf
push
add
test
mov
pop
mov
add
cld
je
jmp
test
sbb
aaa
xchg
jg
insl
pop
gs
cmp
xchg
push
mov
lcall
sub
inc
mov
je
xor
addr16
inc
js
push
add
jmp
push
test
pushf
mov
loope
cmp
into
sbb
push
adc
dec
inc
xchg
data16
out
cmp
xchg
pop
or
cmpl
fcompl
icebp
xchg
enter
push
movsl
mov
add
ret
pop
mov
or
pushf
sub
push
test
lods
mov
xchg
cli
adc
sub
lret
dec
icebp
icebp
insb
inc
jg
inc
imul
call
push
addr16
pusha
sti
jp
out
lods
add
je
sbb
pop
ret
mov
vmread
mov
push
xor
sub
mov
fldenv
jl
mov
mov
repnz
leave
in
adc
cmp
pop
pop
xor
pop
mov
ds
test
push
popf
outsb
cmc
inc
loope
leave
js
shll
imul
adcb
inc
imul
cmc
add
pop
insl
and
mov
shrl
insl
je
mov
repnz
and
sub
es
jg
pop
jne
cmp
dec
loop
sub
push
clc
insl
jg
pushf
adc
jae
or
sbb
add
xchg
jb
insl
andl
jo
loopne
daa
pop
pop
adc
cmp
pop
mov
sub
ss
dec
cmp
adc
mov
adc
les
repnz
mov
les
aam
mov
xor
xchg
add
movsb
movsb
mov
lods
dec
cmp
mov
call
push
mov
pop
ret
addl
cmp
inc
mov
loopne
jg
adc
sbb
xchg
jo
lock
scas
mov
sbb
hlt
lcall
out
daa
cmp
jns
sbb
jecxz
out
xor
xor
pop
xor
sarl
xor
mov
mov
inc
iret
mov
mov
sub
mov
mov
mov
cs
xorb
movsl
pop
fnstsw
cs
push
addl
ds
cmp
pusha
pushf
push
mov
adcl
inc
loopne
inc
add
lods
cli
mov
cld
sbbl
sub
dec
aad
push
aam
mov
xchg
aas
xor
fiaddl
cmp
dec
mov
in
jo
sub
mov
fistpll
inc
ss
inc
outsb
loop
js
repnz
fldl
std
cmpsl
adc
fwait
dec
push
mov
xorb
mov
in
out
pop
ja
jne
pop
mov
imul
add
inc
test
mov
mov
fldt
data16
pop
or
dec
cmp
xchg
in
lods
push
xchg
dec
push
sar
push
inc
mov
les
mov
mov
fwait
cli
lods
or
outsl
outsl
les
push
push
adc
push
sbb
cmpsb
sarl
jp
sti
push
test
or
pop
cmp
or
movsb
pop
mov
call
or
sub
cmpsl
or
pop
test
dec
add
pushf
or
jle
push
mov
icebp
cmpsl
pop
xchg
iret
cmp
cmp
pop
xchg
ret
aas
mov
pop
adc
mov
jle
ss
fcoml
loopne
dec
pop
xchg
lea
add
lret
jmp
mov
and
jl
inc
pop
sbb
xorl
mov
pop
sahf
in
mov
insb
lahf
daa
pop
pop
cmp
xchg
sub
leave
push
and
xor
sub
dec
adc
cmpsl
push
into
or
or
ret
push
xchg
mov
insb
cmp
inc
fs
push
pusha
jl
aad
std
outsb
xchg
bound
cmp
push
aam
jecxz
imul
out
cmpsb
mov
xor
iret
inc
mov
xchg
xchg
inc
loope
mov
add
jmp
cld
add
jbe
xor
sub
bound
rorl
icebp
add
sarb
shlb
gs
jl
out
push
loope
sbb
fwait
hlt
ret
repnz
movsl
inc
mov
sti
mov
fcmovbe
je
add
jg
push
xchg
lahf
adc
pop
pop
pushf
loopne
mov
lcall
ret
sbb
pop
mov
test
mov
inc
das
ds
mov
sbb
xor
mov
call
push
cmp
and
sbb
loop
push
fidivrl
adc
data16
jl
xor
fbstp
adc
dec
jle
or
ret
cmc
rclb
addr16
ljmp
rcr
and
fisttpl
mov
sbb
pop
pmaxub
cmc
jbe
push
add
aaa
scas
fs
add
leave
pop
pop
ljmp
adc
or
popf
xchg
lahf
les
insb
aad
add
mov
aad
sbb
sbb
pop
insb
sub
inc
rclb
push
lcall
ds
rclb
ds
cmp
adc
inc
cltd
idivl
push
add
dec
or
xlat
mov
push
jmp
lret
aas
jo
inc
push
dec
pop
or
jmp
lock
bound
scas
aad
insb
adc
sub
mov
mov
daa
fxam
xchg
imul
stc
jl
repz
mov
lock
pop
test
xor
mov
divb
mov
push
sbb
adc
mov
fildll
dec
jle
shlb
popa
sarb
mov
fiadds
stos
adc
jb
add
mov
sbb
dec
xchg
movsb
xchg
jl
xchg
ret
mov
mov
imul
je
loopne
xor
jo
push
mov
scas
pcmpeqd
add
pop
cmp
je
adcb
addl
ret
cli
cmp
mov
xor
pop
out
cs
data16
addr16
mov
sbb
popf
aas
mov
xchg
insl
andl
loopne
mov
cmpsl
insb
mov
cld
push
stc
jge
in
lea
cmpsl
or
std
fsubl
out
mov
std
xchg
je
leave
mov
xor
pop
ret
jmp
mov
addb
in
add
or
mov
mov
mov
dec
mov
adc
xor
rcl
xchg
cmovl
dec
ret
aaa
adc
pop
push
push
sarb
xchg
push
pop
pusha
cmc
insb
in
add
out
jge
xchg
sub
dec
enter
or
sbb
xlat
je
push
sbb
jno
and
cs
adc
fs
sbb
xchg
add
sbb
or
jl
je
mov
mov
sbbb
mov
mov
fsubs
aam
out
push
jo
jae
lret
shlb
cmp
test
mov
inc
adc
push
cmp
pop
or
sahf
rclb
repz
or
push
addl
icebp
and
mov
imul
jno
fisttpl
fmuls
xchg
imul
mov
repz
addb
jecxz
push
mov
inc
sbb
mov
lahf
mov
or
or
les
xchg
or
xchg
outsb
out
nop
mov
incb
sub
cmp
rcrl
test
mov
mov
adcl
add
jge
xor
push
sar
orl
test
movsb
fsubs
filds
fcmovne
pop
push
out
jl
push
shl
dec
or
shl
test
shll
mov
add
xor
jecxz
imul
cli
add
cltd
int
mov
mov
out
test
fisttpl
jns
or
loope
and
mov
scas
mov
mov
mov
push
stc
xor
mov
mov
ss
or
pop
dec
mov
xchg
inc
inc
mov
and
popa
push
fsubr
jl
push
sbb
pop
scas
sub
sub
adc
or
xchg
sub
aad
mov
clc
push
sarl
pop
into
mov
ljmp
pop
addr16
ret
jmp
loopne
insl
shr
jae
add
dec
xchg
push
dec
insl
insl
jl
jno
stos
sub
sbb
sbb
mov
or
psrad
outsb
dec
lods
nop
aaa
icebp
push
mov
loop
mov
js
lahf
imul
aaa
cmp
rcll
add
cs
lods
les
test
xchg
dec
test
out
dec
cmp
fidivl
out
test
xor
test
or
cmpsl
pop
andl
loopne
mov
mov
pop
cmpb
icebp
lods
cmp
adc
push
arpl
dec
jg
jns
mov
test
sub
sbb
std
jno
mov
adc
sbb
ljmp
fbld
bound
mov
bound
mov
pop
lahf
out
fstpt
mov
jmp
shl
pop
insb
je
sub
jge
adc
adc
cmp
sarb
popa
pop
scas
xchg
push
push
dec
cmp
not
mov
jb
jno
ja
pop
test
xchg
shl
fisubrs
dec
xchg
or
push
push
mov
jecxz
jns
icebp
cmpsl
out
or
or
shlb
insb
pusha
sub
bnd
mov
shr
sub
inc
sub
fidivrl
sub
cld
lcall
cmp
shr
lret
cltd
insb
xorb
mov
xchg
jo
pop
mov
pusha
cmpb
jl
mov
jb
sbb
lods
cmpsb
mov
sbb
adcb
ljmp
inc
sub
xorl
cwtl
jmp
icebp
xchg
pusha
cmp
fadd
adc
jp
pmaxsw
repnz
lea
xor
mov
ljmp
ljmp
sub
rol
mov
mov
adc
mov
jge
ljmp
mov
imul
push
jp
or
or
fs
jmp
cltd
pushf
pop
roll
xlat
inc
inc
divl
les
repnz
add
in
adc
pop
xor
insb
les
test
jo
adc
jmp
lcall
cld
pop
out
lcall
loop
xchg
rcrb
cmpsl
popf
jl
aam
or
push
mov
js
sub
scas
hlt
or
jno
pop
ret
leave
test
out
inc
sbbb
push
cmp
pop
mov
fsubrl
jge
mov
loopne
decl
loopne
mov
add
aaa
push
rorl
xchg
sbb
out
mov
outsb
mov
pusha
lds
rclb
jmp
jle
adc
dec
sub
and
inc
and
xor
cs
test
pop
movsb
inc
out
pop
mov
repz
push
dec
cld
pop
cli
cmpb
out
ret
and
xchg
mov
jb
cmpsb
add
and
adc
push
jo
cmp
pop
inc
rcrb
gs
mov
mov
push
fidivs
mov
icebp
adc
or
out
nop
lea
lock
mov
cmp
js
nop
in
rorb
mov
mov
xorb
mov
or
sahf
adc
xchg
aaa
shr
add
cwtl
mov
out
dec
orl
clc
add
mov
mov
add
insl
cld
ret
xchg
push
pop
pop
call
cmc
jae
jno
push
subb
in
insb
movsb
xchg
idivb
add
adc
lods
inc
and
push
sahf
sbbb
lahf
insb
sti
jno
and
inc
ficoml
push
ja
lock
das
stc
inc
or
fdivrs
fdivr
mov
jge
xchg
inc
out
jecxz
cmp
loop
mov
outsb
clc
sbbl
xchg
jle
js
js
pop
or
scas
inc
cmpsl
das
pop
aam
push
push
mov
pop
lret
dec
xchg
roll
sub
mov
push
pusha
mov
and
je
js
cmp
jno
inc
insb
mov
mov
push
inc
or
lahf
ret
xchg
fistpl
scas
and
shl
pop
sbb
inc
jl
aam
lds
pop
cmpsb
or
adcb
dec
push
andl
call
test
cmpsb
insb
jecxz
ret
adc
fistl
nop
pop
repnz
stos
mov
stos
and
inc
lds
adc
inc
mov
or
inc
mov
stc
or
add
adc
jae
inc
pop
shl
inc
stos
test
orl
or
ds
stos
stos
add
push
nop
pop
popa
lock
xor
mov
fcmovne
sbb
mov
sub
or
out
movsb
jmp
inc
rol
sbbb
mov
sbb
js
inc
subb
push
std
or
or
sbb
orl
pop
add
cmp
pop
ret
inc
cwtl
je
hlt
call
insl
sub
call
fwait
leave
push
testl
and
sbb
scas
inc
xor
sbb
pop
sbb
js
xchg
js
sub
cltd
xchg
add
repnz
inc
hlt
js
adc
mov
adc
scas
lds
and
push
mov
icebp
add
movsb
cmp
pop
andb
mul
inc
mov
ret
ror
out
fidivl
mov
mov
negb
xchg
push
loopne
jnp
fisubs
mov
mov
js
add
pop
rorl
sub
aad
cmp
mov
sbb
outsl
loopne
mov
shrb
or
imul
xor
xor
mov
cmp
lock
inc
mov
pop
out
nop
push
push
xlat
fidivrl
jmp
add
dec
andb
ljmp
adc
xor
push
or
fwait
dec
popf
jns
jge
xor
sbb
jle
out
and
into
mov
push
sbb
ret
pop
int
test
sbb
sbb
dec
mov
mov
mov
inc
lcall
inc
mov
jo
jae
mov
adc
pusha
ja
cmpsl
and
inc
aas
orl
insb
lret
hlt
xchg
pop
xchg
xchg
jbe
repnz
lods
sbb
cmpl
and
push
inc
add
out
cmp
or
jmp
mov
add
push
push
add
xor
add
push
je
mull
sbbb
cmpb
out
loop
and
icebp
mov
pop
das
mov
adc
mov
add
mov
mov
adc
mov
sbb
clc
icebp
adc
sbb
jbe
cltd
sbb
or
inc
out
cmp
inc
or
or
jno
dec
jns
mov
jge
sbb
lods
outsl
loop
cwtl
and
sub
lret
push
push
jb
ds
adc
aam
adc
out
push
cld
popf
or
sub
adc
movsl
pop
lock
push
stos
sub
jb
adc
sbb
cmp
mov
lods
push
mov
push
jbe
add
pop
jge
cmp
push
push
adc
out
or
mov
pop
push
leave
mov
fldl
lret
into
xchg
aad
imul
push
sub
cmpsb
mov
push
mov
std
or
shr
lahf
jp
subl
shlb
push
pop
jne
test
push
enter
jnp
in
adc
push
xchg
aas
mov
mov
das
imul
test
or
add
dec
loopne
adc
sbb
sbb
out
push
adc
addl
xchg
add
add
insb
mov
lahf
jb
inc
cld
push
aas
jnp
sbb
sbb
jp
arpl
jmp
divl
fimuls
ja
popf
movl
xchg
lcall
dec
pop
pop
insl
test
mov
mov
xchg
scas
bound
outsb
add
icebp
jns
repz
add
sahf
sti
and
frstor
movsl
add
fmuls
sub
lods
pop
das
push
jl
mov
aad
aam
cmp
jle
lcall
dec
jo
decb
pop
mov
pop
push
adc
sub
hlt
sbbb
xchg
test
push
rorb
loopne
push
inc
rcrl
dec
push
push
inc
pop
or
aaa
jecxz
mov
sbb
test
or
mov
cmovl
mov
loopne
sti
pavgb
inc
popf
xchg
jno
add
adcb
xchg
pop
fldenv
xchg
add
jbe
icebp
xlat
push
repz
in
lret
push
inc
outsb
popa
aad
in
loop
rorl
adc
jge
add
out
inc
bound
jle
rcrb
push
jne
adcl
xchg
cmc
add
je
push
sub
or
outsl
aaa
rolb
mov
mov
dec
mov
int
inc
lahf
sub
xchg
inc
jl
adc
mulb
cmp
lods
push
xchg
jnp
lret
cmp
cli
pop
fucomi
xchg
outsb
out
cmc
inc
out
mov
shl
add
int
pop
mov
pop
iret
outsb
push
adc
lret
push
inc
mov
jae
xlat
or
stc
lock
aas
pop
stc
pop
lock
ds
xor
shll
pop
dec
xchg
ljmp
or
and
mov
fdivp
rclb
loopne
shll
inc
cmp
inc
in
mov
jo
jbe
sub
lods
test
inc
push
loopne
pop
ja
sahf
ror
repz
out
dec
movsl
das
mov
inc
test
and
filds
sub
sub
add
pop
shrb
mov
inc
jmp
aam
add
dec
stc
mov
mov
dec
xchg
jge
out
outsl
pop
mov
lock
lahf
push
jb
cmpl
sbb
cmp
sar
dec
daa
aaa
xor
add
ret
test
data16
sub
jl
jmp
cwtl
push
daa
and
cmp
cltd
outsw
rclb
xchg
insl
scas
clc
or
mov
into
adc
adcl
mov
outsb
rorb
xor
mov
pop
or
sub
fists
outsb
sub
cmp
rorb
stos
pop
hlt
mov
mov
jbe
stos
add
and
popa
sbb
sahf
xor
js
std
lcall
das
lods
pop
sub
pusha
jecxz
add
jle
add
sub
mov
or
push
jp
adc
loope
mov
cli
and
cmp
xor
pop
cmp
sub
inc
into
fs
hlt
cltd
popa
out
int3
xchg
movsl
add
fwait
cmp
sub
js
icebp
dec
or
push
aas
fwait
cmp
icebp
jl
mov
insb
mov
pop
test
cli
sub
repz
push
pushf
inc
rcll
insl
adc
adc
adc
pop
xor
lods
cmp
xchg
mov
xor
add
sbb
xchg
xchg
mov
pop
int
das
xchg
shll
rolb
cwtl
push
and
xor
adc
rcrl
orb
repz
js
pushf
adc
adc
jp
inc
into
jecxz
pusha
dec
icebp
lcall
scas
push
pop
mov
add
and
mov
mov
ljmp
mov
out
add
ja
js
int
xlat
orb
sub
aaa
fsubl
mov
pop
fs
push
jb
int
rcrb
mov
push
mov
fidivrl
ss
cli
mov
fwait
pop
int
mov
addr16
sbb
sbb
or
mov
bound
inc
pop
and
loopne
pusha
int3
clc
mov
movsl
dec
xlat
cli
call
pop
inc
xorb
subb
adc
mov
stos
adc
sub
mov
addb
sub
loopne
lock
inc
loop
pop
movsl
fs
cmp
mov
inc
pop
movups
insb
rclb
and
aas
enter
and
jno
cld
add
les
js
xchg
cmc
mov
das
dec
xor
les
jo
dec
mov
out
inc
fldt
mov
inc
test
inc
mov
out
fmulp
adc
arpl
in
mov
xchg
fadd
push
xorb
js
add
popf
sbb
jmp
ret
pop
mov
cli
cmpsl
cmpb
or
pop
fsubrl
inc
sti
and
cmpsl
sbb
mov
ret
sub
pop
push
and
lcall
std
insl
mov
divb
push
cmpsl
push
cmpsb
and
sbb
cmpsb
pop
outsb
icebp
adc
or
dec
aam
das
fstps
mov
xor
imull
and
jecxz
je
push
sub
and
faddl
xchg
xor
jb
mov
ret
out
negb
fistl
cmp
rol
jg
jecxz
and
test
push
rcll
add
loopne
adc
xchg
std
lods
aam
xchg
lds
sti
mov
insl
mov
out
push
jecxz
jo
xchg
adc
sub
mov
hlt
stos
inc
insb
out
adc
shl
pushf
fcmovne
in
sub
lcall
sbbl
mov
inc
insb
in
xchg
cmp
je
insl
and
aas
add
cmp
inc
ret
cmc
pop
mov
inc
push
stos
adc
xor
dec
aas
hlt
cmp
push
mov
sub
cmp
xchg
repnz
jno
fcmovbe
mov
dec
push
jbe
and
sbb
das
pop
and
mov
faddl
ret
jo
aam
pop
inc
mov
js
dec
push
cmp
or
cmpsb
push
loopne
stos
in
and
mov
mov
add
jge
fldz
or
fsubrs
inc
push
xchg
pop
inc
gs
pop
mov
mov
push
shlb
sub
push
out
cld
push
inc
jae
sbb
daa
stos
cmp
sarb
xchg
jl
xchg
jmp
sbb
and
xchg
adcb
push
push
mov
cmova
repz
jb
add
movsb
outsb
pop
loope
stos
dec
dec
lods
sub
imul
movsb
mov
xor
lret
inc
or
lock
mov
loopne
dec
dec
mov
add
fs
pusha
jnp
adc
mov
add
repz
fldl
push
mov
sub
hlt
lcall
add
xor
dec
cmp
dec
data16
xchg
aam
xlat
cld
pop
insb
cld
xor
std
adc
pop
sbb
cmp
and
int3
int3
mov
fidivs
xchg
xor
lcall
xchg
repz
dec
pop
push
or
push
movsl
jb
divl
mov
push
adc
mov
push
loop
cld
add
or
adc
enter
jl
outsb
lds
fmull
mov
imul
mov
push
lret
cmpsb
aaa
fists
xor
or
mov
nop
pop
add
lret
lahf
mov
push
out
dec
loopne
scas
sbb
lret
incb
inc
pop
testb
inc
insb
push
out
pop
dec
add
xchg
push
clc
xchg
jle
fs
ljmp
mov
jo
ss
lret
sub
stos
and
xor
cmp
std
cmp
push
lahf
cmp
ret
ljmp
out
adc
pop
sub
push
mov
out
cmp
mov
sahf
dec
inc
jb
fs
into
sbbb
outsl
sbb
aas
mov
pop
sarb
jmp
dec
mov
mov
ret
dec
insl
test
pusha
shr
movsb
mov
jbe
xchg
sub
movq
ljmp
and
popa
aas
cmp
jp
iret
in
pop
cmpsb
mov
sbb
xchg
pop
push
pop
cli
adc
addl
repnz
inc
rolb
mov
push
or
add
in
pop
dec
jno
jbe
xor
xchg
cmc
push
mov
hlt
ret
scas
inc
dec
aam
and
add
mov
fcmovnbe
outsb
insl
dec
scas
xorb
mov
jns
cmp
jns
jae
or
loopne
pop
je
push
inc
je
mov
rcrl
cmp
mov
pop
lock
sub
loopne
filds
pop
add
xlat
std
or
mov
xor
fidivrl
jo
xchg
bound
add
pusha
dec
inc
and
gs
data16
adc
inc
ret
aas
pop
popa
push
pushf
xor
add
arpl
fdivl
push
ret
sub
xchg
cli
aam
add
jne
lret
fwait
incl
das
cmp
cmp
aad
and
cmp
add
mov
das
aaa
aas
xor
sbbb
xor
in
loope
push
ljmp
xchg
xchg
or
test
push
leave
fsubrs
inc
icebp
stos
mov
cli
or
hlt
movsl
sahf
pop
popf
and
push
pop
repz
les
push
ret
adc
dec
stos
outsl
mov
sbb
lds
cwtl
les
leave
insb
insl
xchg
adc
test
sbb
clc
fdiv
sbbb
push
push
outsl
xchg
hlt
mov
mov
aad
jmp
lahf
std
pop
jae
mov
loop
imul
mov
shll
aaa
inc
insb
add
inc
aas
adc
stc
inc
seto
mov
mov
clc
and
sbb
jb
lret
mov
lds
outsl
xchg
sub
je
out
inc
xchg
fcomps
dec
sbb
addl
xor
mov
dec
pop
cmc
mov
mov
pop
pop
push
jbe
int
mov
ret
xchg
loope
adc
ljmp
mov
imul
mov
rolb
dec
or
adc
pop
loope
fimuls
movsb
add
inc
scas
imul
in
mov
jb
fs
mov
xor
cmpsl
or
sbb
add
cmp
rcl
scas
hlt
and
mov
test
mov
push
xchg
mov
hlt
scas
sub
cmpsb
and
pusha
sub
rcrb
adc
mov
inc
mov
in
inc
lahf
xor
jg
addl
mov
lcall
jg
adc
movsb
cltd
and
lahf
mov
inc
mov
ja
xchg
cltd
pop
repnz
test
mov
jecxz
aas
lcall
rcr
cmc
fcoms
lods
add
sbb
aad
pushf
hlt
sbb
out
es
bound
ret
mov
cmp
aam
push
fs
pop
test
jmp
mov
rorb
fmul
cs
pop
xchg
insb
inc
sahf
push
out
inc
sbb
andb
out
cld
mov
cs
add
lods
lret
mov
fucomip
call
in
addb
sub
xchg
or
bound
enter
and
sub
jg
ljmp
mov
xchg
jno
jbe
jmp
mov
push
xor
rorl
sub
out
pop
cli
outsl
mov
xchg
movsb
push
pop
inc
clc
mov
sbb
mov
push
cli
push
rep
loop
and
shlb
mov
jge
xlat
pop
xchg
pushf
les
aas
repnz
ret
cmpsb
push
cmp
test
out
fidivl
loope
pop
inc
push
lret
icebp
and
jbe
mov
idivb
pop
xor
loop
push
rclb
sub
int3
mov
outsl
nop
xor
sahf
loopne
xchg
inc
aam
inc
add
push
arpl
xchg
test
sbb
ljmp
or
movsb
and
popf
ss
test
test
inc
insl
scas
jo
adc
and
pmaxsw
xlat
rorb
and
and
sbb
loope
insl
xchg
adc
in
push
push
fdivl
test
push
ret
inc
data16
outsl
xchg
xor
mov
rcll
cmc
inc
pusha
and
dec
sub
bound
shl
cmpsl
outsl
lea
cmp
mov
pop
mov
xor
jo
mov
mov
add
std
shrl
cld
xchg
add
ljmp
shll
daa
push
aam
je
pop
adc
dec
or
and
fs
jg
sub
cbtw
sar
jg
add
arpl
ja
xor
or
or
in
dec
aam
pop
rcrl
cld
and
stc
scas
in
testl
xchg
xor
and
dec
rcrl
sub
in
jle
xchg
xchg
dec
sub
clc
and
orb
and
xor
add
cmp
xchg
sub
inc
push
adc
into
in
jmp
cld
pop
xor
fstpl
mov
mov
jp
fisubrl
pushf
mov
xlat
test
xchg
push
rorl
cmp
jo
mov
loopne
mov
push
xchg
inc
dec
lods
or
movd
or
in
out
jmp
popf
xchg
adc
pop
add
jbe
pop
mov
fildl
inc
or
fwait
mov
xor
inc
lahf
out
cmp
test
test
push
lods
rclb
dec
popa
daa
sbb
loope
xchg
fcoml
push
sub
cmc
in
jecxz
nopl
mov
bound
inc
divb
xorb
jl
lods
or
xor
push
dec
push
jl
stos
mov
mov
xchg
push
rolb
sarb
adc
xor
sub
ss
inc
negl
andb
add
jns
push
adc
or
es
xchg
ss
hlt
rorb
xor
not
dec
cmp
adc
cmpsb
pop
subb
hlt
or
inc
xchg
add
arpl
xchg
or
inc
imul
cmp
pop
sbb
pop
addl
or
push
xchg
stc
int
orb
rolb
test
dec
xor
roll
mov
sbb
cld
jg
inc
adc
out
adc
jno
mov
inc
add
lods
pop
andb
dec
cld
outsb
inc
or
jo
and
rol
mov
mov
popa
imul
and
call
or
dec
cld
adc
inc
mov
pop
enter
stos
ds
mov
outsb
stos
aam
bound
call
add
stos
sub
push
js
out
mov
sub
jne
nop
mov
or
push
rcl
into
jmp
shl
jg
pop
push
outsb
aam
dec
push
pop
push
js
and
notl
mov
cmpsl
cmp
lods
scas
clc
mov
pushf
xchg
mov
out
cld
sub
mov
addr16
add
jge
inc
mov
mov
inc
aaa
jne
mov
mov
xchg
xor
jo
jecxz
flds
adc
js
cwtl
sbbl
mov
sbb
cmp
inc
adc
and
cmp
dec
adc
adc
mov
dec
loop
imul
lahf
inc
and
ss
mov
push
mov
ss
mov
push
int3
test
cmp
add
mov
push
xchg
mov
sbb
push
dec
mov
imul
or
pop
lret
or
push
sub
outsb
inc
aaa
jl
leave
and
out
mov
ret
adc
insb
inc
xchg
rolb
outsl
add
xchg
imul
cmp
add
pop
xchg
dec
dec
push
ret
das
rcrb
sbb
adc
hlt
icebp
repnz
adc
dec
shlb
sahf
sub
dec
inc
aas
and
push
jno
dec
xor
in
cmp
cmc
cwtl
jl
in
mov
push
sbb
mov
xorb
mov
and
push
cmp
mov
cmpsl
xor
cmp
lcall
pop
push
aam
add
sbb
ja
push
shlb
mov
mov
ds
int3
mov
call
or
mov
outsl
xchg
dec
or
leave
arpl
int
push
loope
add
jbe
xor
xchg
ss
mov
jle
jl
shrl
stos
xor
inc
cld
xor
mov
mov
lahf
cmp
loopne
ret
test
loop
cmpsb
or
sbb
xchg
jns
mov
cmp
dec
movsb
xor
call
pop
les
sub
sub
lcall
add
ljmp
sbb
in
insl
fs
inc
or
cs
andb
aas
in
movb
mov
xchg
xchg
stos
insb
jecxz
imul
incl
lock
push
adc
loope
mov
push
xchg
or
test
dec
push
sub
sbb
add
mov
cli
mov
xchg
test
js
test
lods
sbb
std
add
adc
xchg
xor
hlt
fbld
pushf
aam
xorl
pushf
pop
lods
stc
clc
and
cld
dec
insl
fscale
es
inc
rolb
push
shlb
pop
shr
hlt
ljmp
iret
outsl
jecxz
jl
lret
xchg
ss
das
xchg
out
loope
jg
push
mov
push
out
inc
and
les
testl
je
add
add
or
push
mov
mov
ret
sahf
cltd
add
sub
and
pop
mov
jg
fisubs
hlt
fisttpll
xor
jp
or
xor
sbb
xchg
jmp
pusha
lods
jp
sbbb
add
aam
nop
clc
mov
aaa
adc
mov
fmull
lock
add
dec
or
xchg
pop
je
shrl
cmp
mov
or
cmpsb
out
aam
andb
les
ret
scas
mov
add
or
cwtl
add
repz
sbb
or
and
push
movsb
bound
gs
cld
xor
mov
test
pop
push
dec
or
and
cmpsb
mov
or
dec
lahf
gs
rorl
pusha
xchg
testl
hlt
xchg
pop
test
add
mov
pop
ja
or
sbb
es
push
or
or
push
or
ret
into
inc
loopne
sub
push
cs
mov
add
add
aaa
iret
adc
rclb
adc
cmpsb
clc
adc
or
test
push
js
std
fsubl
jmp
out
add
or
or
add
les
clc
mov
xchg
pop
ret
insb
or
dec
push
or
or
cmp
clc
lock
test
inc
cmp
jnp
fimull
jl
push
sub
ljmp
leave
adc
mov
shrl
pop
je
lock
call
xor
inc
sub
xchg
cmp
pop
adc
xchg
jne
xor
sbb
xor
sbb
add
xchg
add
dec
fistpll
jb
call
sbb
add
imul
xor
in
add
fisttps
pusha
push
iret
jecxz
in
xchg
push
loopne
pop
nop
push
jmp
sub
in
add
sbb
fwait
loopne
or
xor
fwait
aaa
or
fiaddl
scas
shlb
add
ret
enter
or
inc
loopne
jmp
push
xor
sub
pusha
fwait
mov
adc
push
je
xchg
dec
mov
xchg
push
cmp
mov
xor
xor
add
lds
outsb
mov
mov
pop
lret
daa
pop
cmp
mov
test
dec
mov
mov
lcall
imul
fwait
das
mov
cmp
orl
cmc
mov
jle
jg
add
out
out
in
jp
lret
add
call
bound
jne
shrl
pushf
dec
inc
shlb
adc
movsl
inc
push
pop
mov
mov
and
or
or
vrcpss
add
add
cmpsl
gs
bound
push
jo
leave
pop
pop
xchg
jo
jecxz
sbb
stos
xchg
push
dec
mov
call
mov
dec
sub
jg
cmp
call
inc
shrd
inc
movsb
test
sub
xchg
call
xchg
in
fmull
aas
inc
adcb
insb
fidivl
sahf
mov
shrl
adc
movntq
out
xchg
sahf
pop
adc
sbb
push
pop
pop
pop
int3
and
mov
push
xor
clc
mov
and
scas
ss
jmp
sub
pop
mov
xchg
mov
push
ret
fistpl
push
cmp
pushf
jb
pop
adc
adc
pop
sbbl
mov
sahf
fldenv
sbb
addb
pop
cmpsl
movsb
cltd
cmpsl
push
sbb
clc
loopne
dec
xchg
add
inc
jecxz
fcomp
push
push
mov
adc
gs
notb
aam
push
xchg
xchg
or
ja
mov
mov
std
mov
inc
jmp
cmpsb
ss
pop
sub
cmp
inc
push
adc
xor
push
ljmp
inc
adc
rcl
lods
aad
sub
orb
insb
out
popa
dec
jbe
clc
add
lock
add
xchg
push
pop
or
adc
xchg
shrb
xor
adc
cmp
pusha
xchg
xor
insl
loope
mov
and
fsubs
inc
xor
cwtl
mov
adc
mov
push
jo
or
push
movsb
fisubs
fiadds
lock
and
pop
add
cmp
int
dec
jl
push
mov
push
inc
clc
negb
add
in
ret
mov
pop
pop
les
mov
test
xchg
mov
mov
pop
ror
lcall
cmc
and
clc
or
ss
mov
xchg
sti
pop
inc
push
or
inc
inc
cld
out
xchg
insb
shll
cmp
hlt
cmp
jmp
fwait
xchg
mov
fucom
mov
jo
and
es
add
sub
addb
aam
push
mov
js
addr16
es
xor
outsl
xchg
sub
fcmovb
ficoms
pusha
dec
inc
inc
jp
cmp
cmpsl
add
dec
and
sbb
mov
imul
push
aam
xor
push
ss
dec
xchg
aaa
loop
or
fsubs
divb
adc
mov
mov
or
xchg
out
cmp
aas
xor
sub
push
in
jno
cmp
mov
adc
test
mov
pop
mov
cmpl
aaa
cli
add
ja
and
pop
enter
mov
incl
sub
or
popa
mov
sar
dec
lods
fwait
mov
pop
and
push
adc
mov
fwait
push
scas
sti
jb
fiadds
sub
sbb
push
jmp
lds
sbb
sbb
lock
dec
clc
test
out
clc
rol
jg
into
int3
or
push
sarl
cmp
cmpsl
lods
stc
dec
lods
jmp
jmp
clc
nop
cmp
and
push
mov
inc
popa
dec
sbb
neg
adcb
sti
inc
or
add
test
out
in
or
pop
inc
jp
push
incl
pusha
stos
movsl
pop
xor
test
jl
mov
jns
xchg
mov
mov
ss
mov
add
push
sub
aam
mov
xlat
repz
jp
push
and
pop
cli
insl
cmp
pusha
xchg
and
je
sub
fucomp
sarl
pop
push
inc
add
stos
not
out
or
push
jmp
mov
fucomi
test
mov
sub
les
pop
push
outsb
sub
xor
sbb
sbb
clc
aaa
jmp
pop
adc
cltd
or
loopne
fs
fmuls
pusha
mov
mov
inc
cmp
rcrl
jo
js
aad
pop
dec
addl
xor
add
daa
aaa
cmp
cmp
les
push
adc
sub
adc
dec
pushf
aam
xchg
rclb
pop
lds
sbb
testb
int3
mov
lcall
pop
les
and
js
jecxz
pop
dec
fisubrs
ljmp
aas
mov
push
mov
push
mov
inc
or
scas
or
int
push
js
stos
sbb
jle
loop
push
or
cmpsl
cmpsb
mov
xchg
add
dec
shlb
jp
pop
push
jle
leave
and
sub
add
insb
out
imul
addr16
ljmp
lods
xchg
insb
add
adc
faddl
inc
xchg
notb
pop
push
mov
push
or
mov
movsb
mov
jg
andl
jge
sbb
push
push
mov
cmp
jno
dec
pop
sbb
cmp
clc
dec
inc
add
xchg
into
pop
testl
mov
xor
notl
add
mov
lock
mov
push
adc
push
jle
test
cmp
pop
int
mov
fstpt
aam
mov
dec
lods
movsl
loop
pop
pminsw
push
scas
mov
and
or
fcoml
clc
sbb
test
insb
xchg
rolb
pop
popf
dec
xchg
mov
jmp
hlt
mov
or
fisttpl
mov
dec
jbe
fimull
ljmp
xchg
jo
dec
nop
in
iret
push
add
pop
int
ljmp
dec
or
inc
fwait
mov
cmp
in
lods
arpl
bound
xchg
out
jbe
ret
ret
inc
add
sub
ds
pop
clc
cwtd
clc
or
adc
test
jge
push
pop
retw
inc
xchg
sarb
mov
push
mov
les
dec
pop
mov
push
cmp
fcoml
mov
or
fmull
pop
adc
pop
icebp
in
fs
pop
fcoms
mov
dec
xchg
xchg
cmp
mov
in
push
shl
cmpsb
iret
mov
outsb
push
outsl
test
add
movsb
cmc
adc
inc
adc
dec
cmp
imul
xor
add
movsb
mov
push
mov
xchg
jge
sar
icebp
inc
insl
inc
sub
stos
insl
pop
pop
push
cmp
repz
push
cmpsb
mov
cmp
jo
js
int3
mov
push
sahf
xchg
push
insl
sub
jmp
xor
stos
fwait
pop
movsl
pop
stos
pmulhuw
call
push
and
lods
icebp
add
add
pop
sub
inc
je
jns
jns
jns
push
scas
sbb
xchg
adc
dec
fdivr
add
sub
add
or
rorl
shrb
inc
fs
test
insl
xlat
daa
dec
lock
dec
xchg
mov
sub
clc
mov
aam
icebp
clc
inc
mov
dec
sbb
cmpsb
pop
xor
lock
ret
fidivrl
dec
mov
xchg
push
mov
in
xor
xor
ljmp
fcom
xlat
lahf
jmp
lahf
add
cwtl
xor
mov
cmp
fistpll
or
clc
mov
xchg
xor
pop
out
add
fdivp
pusha
repz
js
test
je
loopne
call
and
xchg
jne
inc
add
xchg
insl
clc
xchg
in
mov
push
cmp
jno
mov
subl
rcrb
push
jae
mov
aam
testl
hlt
repz
fiaddl
cmp
in
add
jbe
fcmovnbe
mov
cmpsb
aad
stc
je
fcomi
fstl
outsb
add
mov
mov
jmp
pusha
popa
in
cmc
cmpsl
test
jle
dec
mov
mov
scas
icebp
nop
push
inc
push
adc
push
lea
std
dec
or
inc
aad
jl
and
dec
lds
xchg
jp
les
out
cmpsb
xor
cmp
sbb
loop
xlat
push
pop
lock
es
sar
fdiv
jae
ret
xchg
xchg
mov
nop
push
sbb
test
inc
jl
cmp
cmp
fldt
mov
xor
inc
jle
cmp
jle
mov
jnp
les
lock
and
jg
jo
mov
flds
stos
push
lods
jns
fsubs
or
mov
in
lahf
fdivrl
pop
xchg
cmp
adc
aam
sti
mov
mov
test
das
testl
mov
in
fstpl
pushf
js
vandps
and
dec
lea
jp
mov
add
fstl
gs
std
push
rcrb
shrl
sbb
push
js
stos
loope
inc
push
dec
pop
ss
aam
jp
sub
fildll
xchg
mov
cmp
decl
mov
mov
loop
jle
jge
inc
or
subl
jo
and
xor
push
inc
cmp
cmpsl
lods
add
sahf
add
and
sbb
jl
ja
inc
daa
xchg
psllq
push
pusha
cltd
add
mov
sti
sti
jl
xchg
aad
xor
mov
lcall
jmp
cmpsb
jmp
pop
sbb
fsubrl
push
pop
ficoml
cmpsb
out
jne
xchg
shl
pop
hlt
js
cmp
js
and
adcb
and
mov
jp,pn
cmpsb
sbb
inc
jno
adc
xor
push
rorl
jmp
mov
dec
pop
dec
xor
ret
dec
sbb
loopne
and
adc
aaa
xor
daa
cld
es
mov
lods
pop
repz
sub
cwtl
xchg
loope
or
xchg
pop
stc
sbb
xchg
fistpl
dec
add
faddl
sbb
add
ret
cmp
jecxz
movsl
sbb
dec
pop
cwtl
data16
pop
push
aas
ret
sub
add
cmp
pop
mov
mov
loopne
jmp
imul
dec
xor
mov
inc
adc
call
rolb
xchg
inc
jmp
sub
cmpl
xchg
sti
add
and
xorl
add
lock
sub
orl
lcall
js
in
add
inc
add
aam
fwait
sbb
inc
sub
insl
enter
fdivrl
jge
cmc
fadd
mov
ffree
push
mov
hlt
inc
or
pop
jno
repnz
push
stc
cmp
fucompp
mov
adc
or
or
push
push
or
jp
fadds
icebp
jo
mov
sbb
out
dec
sbb
pop
cwtl
out
gs
push
or
pusha
pusha
scas
pushf
insl
fsincos
add
push
add
xor
adc
movsb
pop
mov
pop
enter
and
hlt
mov
push
stc
scas
scas
mov
ljmp
add
mov
ljmp
bound
cmpb
mov
adc
xor
xchg
mov
sbb
sbb
cmp
push
xor
into
push
or
add
adc
or
inc
fwait
inc
sbbb
xchg
mov
popa
js
add
sbb
mov
cld
std
int3
inc
adc
mov
jp
mov
cmp
lods
pop
lret
mov
iret
or
jl
inc
xchg
aad
xor
cmp
jns
aad
movsb
jle
test
pop
jl
iret
cmpl
fst
sar
adc
mov
rol
jle
xor
fisubrs
sahf
inc
lret
xchg
push
aaa
loope
cmp
xchg
lret
out
inc
jne
hlt
outsl
in
lret
out
sbb
or
fisttpll
lcall
or
cmpsb
jmp
cmp
lds
mull
push
cld
cs
dec
cld
xchg
mov
pop
subl
outsb
insl
sub
ljmp
hlt
xchg
push
mov
push
xchg
movsl
out
pop
or
ljmp
iret
in
ficoml
jl
loopne
in
nop
inc
add
lock
incl
and
addl
scas
scas
dec
jno
adc
shlb
mov
xchg
dec
and
jl
lods
add
int
mov
add
mov
sbb
push
cmp
fidivl
inc
adcb
cmc
jge
and
in
push
lea
pop
cwtl
aas
pop
popf
ss
test
adc
pop
mov
call
pop
inc
in
mov
pop
nop
xchg
sbb
ret
les
push
jae
push
cmp
sbb
cli
sbb
xor
imul
dec
fsubp
movsb
mov
xor
xor
xchg
in
dec
xchg
or
adc
dec
or
push
sahf
shl
jno
mov
jno
xor
out
cmc
mov
and
push
pusha
mov
xchg
in
ljmp
pop
cmp
jl
jg
inc
out
xor
shr
cmpsl
ficoml
inc
popf
jb
rclb
loopne
and
xchg
push
xor
push
dec
sbbl
xor
push
mov
add
call
jl
mov
mov
in
imul
inc
cmp
movsb
cmp
cltd
adc
cmp
movsl
and
sahf
xchg
pop
and
push
bnd
int
sbb
add
sti
cmp
sub
pop
fisttpl
jle
dec
addr16
in
std
or
out
pop
adc
push
xor
adc
cmp
fimull
lcall
dec
sbb
fbld
repnz
pop
pop
jmp
fistps
or
or
insb
and
or
into
sbbl
clc
jns
and
dec
lahf
icebp
pop
sub
in
dec
sbb
shrb
popf
fwait
repnz
sub
imul
jae
inc
push
cmc
call
test
or
loopne
mov
ss
cmp
pop
add
sub
pop
jne
daa
mov
bound
adc
push
jne
sarb
pop
pop
or
stc
movsl
xchg
push
cmp
pushf
es
shrl
js
sub
inc
cmpl
dec
xor
imul
fcompl
das
sbb
cmc
or
push
hlt
ljmp
stos
aas
orl
push
xchg
or
jmp
xor
inc
sbb
adcb
popa
aas
arpl
cmp
xor
test
push
dec
sub
pop
xor
clc
jb
mov
push
cmpsb
cmp
rcr
add
sub
mov
cmpsb
in
stos
jo
mov
xor
pop
inc
push
push
and
xorl
sub
mov
xor
and
or
arpl
sub
mov
rol
add
ds
fwait
jne
push
arpl
daa
xchg
adc
mov
fs
aam
pop
test
ss
scas
es
lcall
jle
push
add
xlat
or
ja
mov
xchg
sub
test
ret
or
mov
or
push
fimull
out
fs
mov
sub
fnstenv
add
mov
mov
push
sbb
sbb
mov
adc
loopne
xor
jg
sbb
xor
loope
lock
repz
add
mov
and
iret
adc
sub
mov
mov
and
pop
lods
mov
xchg
jae
repz
leave
icebp
dec
loope
dec
insb
loope
pusha
cmpsl
pop
xchg
inc
in
push
imul
cmp
dec
push
pop
out
mov
jl
inc
mov
lods
inc
lock
mov
add
jp
and
stos
outsb
inc
jmp
inc
xor
pop
push
addr16
test
ja
xor
xor
cmpsl
add
shlb
pop
pop
push
cld
pushl
inc
popa
push
lahf
jl
jecxz
ss
scas
push
lcall
daa
jno
mov
jecxz
js
cli
hlt
mov
shll
mov
adc
adc
out
in
fists
cmp
ss
mov
loopne
scas
cmp
lcall
shlb
mov
jle
pusha
pop
movsb
mov
mov
cmp
loopne
push
xor
push
fs
cmp
or
or
int
pop
xchg
into
mov
xor
xchg
add
mov
rol
mov
jbe
pop
xchg
movl
ds
rcr
out
sub
int
jecxz
cmp
mov
pop
loope
addr16
or
mov
pop
xchg
or
aas
and
js
lods
inc
andl
xor
dec
adc
or
add
xchg
inc
ss
push
adc
shll
push
adc
in
stos
bound
test
sub
sti
add
shlb
or
cmp
gs
pop
popa
dec
out
sbb
cld
shll
ror
out
lea
push
jmp
hlt
cwtl
lea
sub
jno
pop
rol
es
nop
inc
push
pushl
jnp
push
or
ret
cmp
and
or
and
fistpll
mov
clc
sub
pop
xor
push
add
in
stos
jl
aaa
mov
or
enter
into
add
out
add
js
fidivrs
ret
into
xor
lock
jmp
inc
mov
push
out
or
and
bound
xor
adc
test
xchg
and
scas
xor
pushf
mov
or
pop
dec
push
push
out
jb
iret
popa
inc
in
mov
pop
dec
adc
mov
mov
stos
or
adc
sbb
adc
sbb
addl
jno
add
repz
das
jb
je
js
pusha
dec
mull
enter
arpl
mov
sbb
neg
pusha
jecxz
in
lods
test
push
pop
mov
jge
mov
bswap
int3
imul
pop
inc
call
xor
mov
mov
pop
daa
leave
sahf
in
push
mov
ds
subl
mov
jb
push
sahf
fcmovne
popa
inc
sar
jmp
iret
fwait
aaa
ja
pop
ds
out
pushf
and
or
mov
xchg
aam
loope
cvtps2pd
insl
jl
outsl
fmul
xchg
pop
pop
aad
lret
popf
data16
enter
loop
xor
shl
fldcw
xchg
clc
mov
mov
lods
icebp
inc
add
xor
nop
or
push
dec
jns
movsl
add
inc
inc
repnz
cmpsl
add
dec
packssdw
ficomps
adc
mov
fmuls
jecxz
repz
jno
adc
lret
xor
ljmp
ret
loop
or
and
adc
push
cmp
sub
jns
popf
mov
negl
pop
cld
arpl
pop
dec
sbb
daa
mov
and
ret
sub
push
mov
callw
add
push
inc
pop
xlat
dec
adc
xor
dec
in
testb
shll
cmpsl
leave
ja
outsb
lahf
notl
mov
repnz
cmpsb
scas
mov
xor
push
fdivrs
jbe
clc
xorb
aam
shlb
jecxz
out
sub
scas
daa
sbb
and
addb
push
dec
or
add
pop
out
pop
pop
pushf
fisubl
lea
sahf
sti
dec
aaa
scas
insb
jecxz
mov
jp
ret
in
inc
mov
jl
std
andb
push
fs
sbbl
mov
pop
pop
inc
cld
pop
push
jae
ds
adc
jmp
ret
testb
inc
clc
jns
mov
rorl
inc
mov
cmp
lds
dec
insl
dec
push
decl
sbb
adc
mov
push
pop
add
outsb
sbb
stos
sub
aam
jmp
mov
ja
push
push
push
movsl
xchg
and
pop
inc
aaa
adc
mov
mov
pop
and
add
adc
adc
repz
popf
or
cwtl
test
out
mov
cmp
jle
stos
inc
dec
xor
insb
lcall
inc
xchg
cs
lock
and
jp,pn
push
sbb
clc
xor
inc
data16
adc
or
into
jecxz
lods
lret
movsb
pushl
loopne
mov
mov
push
jbe
add
into
lahf
cli
or
rolb
sub
cmpsl
das
sbb
inc
sarl
movsl
das
repnz
cmp
or
and
aam
aad
leave
xchg
add
xor
push
icebp
jbe
nop
int
inc
outsb
mov
mov
cmp
push
jle
mull
insb
ret
inc
clc
sub
aaa
mov
jg
mov
jo
cli
mov
repz
cmp
mov
push
ficoml
pop
cld
xchg
jo
sub
xchg
add
fwait
aas
mov
inc
dec
dec
dec
sub
push
clc
add
testl
jecxz
jnp
mov
dec
xor
sub
mov
shr
mov
jge
out
shl
loop
rcrl
loopne
adcl
push
or
push
dec
sub
push
ss
cmp
icebp
cmp
mov
push
repnz
popa
dec
or
loop
dec
popa
scas
and
mov
test
imul
mov
outsb
aad
xor
sub
fstpt
rcrb
lds
stos
imul
dec
icebp
orl
sbb
jno
daa
push
mov
ss
aad
enter
mov
xchg
mov
mov
mov
mov
cmpsb
mov
push
out
icebp
into
sub
sarl
sub
cmp
adc
inc
loopne
mov
sbb
addr16
jno
xlat
sub
push
es
aam
repz
lret
mov
dec
jae
push
test
push
insl
adc
jge
xchg
repnz
scas
scas
dec
and
lds
pop
ret
mov
push
and
xchg
xchg
jecxz
addb
imul
mov
push
or
lock
jb
loop
or
leave
mov
test
push
in
pop
cld
lahf
aam
testl
fsubs
pop
repnz
fwait
cmc
nop
aam
imul
adc
int3
xor
fistps
sub
inc
mov
pop
xlat
mov
nop
arpl
pop
jmp
xchg
test
xor
repnz
mov
adcl
jae
test
mov
in
sub
xchg
cs
stos
into
push
jg
icebp
pop
ds
mov
dec
adc
push
inc
xor
loopne
cmp
xchg
and
mov
data16
pop
pop
adc
sbb
shrb
xchg
cs
fisttpl
loope
aas
jl
jbe
cmp
faddl
sbb
mov
adc
mov
incl
adc
not
push
fwait
or
xchg
adc
dec
addb
dec
popf
dec
pop
push
inc
insb
push
test
sarb
je
or
or
int
xchg
cmp
add
cld
or
sbb
cmp
data16
in
das
xor
jmp
out
andb
adcl
xchg
cld
incl
sbb
pusha
xchg
repz
push
aas
test
cld
sub
ss
jno
lret
sub
jbe
or
xchg
and
insb
cmp
dec
cld
sub
sti
pushf
les
mov
test
aam
or
mov
aaa
pop
mov
jnp
arpl
lret
or
sbb
cmp
cmpsl
dec
les
cld
jbe
push
mov
or
and
icebp
push
data16
and
bound
inc
xchg
cwtl
je
div
xchg
xchg
pop
fcmovnbe
and
push
bnd
in
or
pop
dec
jge
insl
outsl
leave
sub
jb
or
add
pop
out
cmp
clc
or
popa
int3
inc
dec
adc
mov
xlat
mov
dec
push
pop
mov
cmp
leave
hlt
out
notb
incl
lret
xor
cs
sbb
xor
mov
addl
dec
push
inc
ret
daa
mov
pop
push
add
test
popf
hlt
jg
test
adc
or
aas
mov
fistps
jb
pusha
or
in
mov
mov
jmp
ror
and
ret
lods
es
jmp
push
xchg
cwtl
or
subb
xor
pushf
sbb
jecxz
addr16
sarb
je
insb
subb
jno,pn
jle
push
int
mov
add
loopne
push
loopne
popa
add
and
push
xchg
jg
adc
aam
or
cmp
push
mov
adc
jp
mov
inc
inc
in
icebp
rcl
push
push
out
cmpsl
call
mov
adc
xchg
cmp
es
xchg
jae
xlat
push
gs
adc
scas
add
iret
test
jle
add
push
cltd
je
dec
add
or
xchg
lahf
push
insl
push
insb
adc
xchg
stos
jmp
das
shll
jae
cltd
sub
ljmp
sub
adc
filds
and
dec
out
sbb
icebp
jo
or
mov
call
cmp
pop
adc
mov
mov
aam
inc
test
sti
inc
or
jp
sbb
dec
idivl
inc
dec
add
mov
push
xchg
rolb
jle
push
mov
loope
les
push
outsb
aam
mov
jge
push
inc
call
ljmp
jp
cmc
call
dec
mov
jae
xor
ja
xchg
ja
aad
arpl
loop
leave
cmp
jns
fsubl
xchg
xchg
scas
das
cld
push
loopne
aad
jb
inc
mov
je
sbbl
sub
test
mov
insb
cmp
popf
push
mov
repnz
xor
imul
pop
lock
mov
or
aaa
ja
sbb
in
orb
adc
xor
pushf
ds
mov
cmpsl
test
dec
adc
push
inc
stos
sarb
xchg
fmull
cmc
mov
add
xor
stos
xor
adc
pop
jp
and
xor
aam
xchg
inc
lods
sbb
test
fisttpll
mov
push
clc
xor
pushf
xor
pop
fstp
sub
insl
insb
dec
push
pop
pop
scas
test
pop
adc
inc
cmp
cs
sti
imul
inc
aam
push
push
and
rcr
and
jmp
shlb
add
sbb
or
mov
dec
aad
subb
mov
loop
bound
call
repnz
inc
in
pop
xchg
lock
or
test
push
mov
or
dec
xorl
xlat
mov
xchg
and
int3
fwait
xor
lahf
jecxz
in
mov
add
rclb
jbe
or
adc
test
lret
xor
adc
fldl
dec
mov
jg
mov
leave
xchg
cmp
js
pop
repnz
pop
fistps
aaa
pop
lahf
data16
inc
xchg
push
inc
mov
test
jp
inc
or
inc
je
pop
sub
daa
rol
inc
test
xlat
xor
sahf
adc
cs
sbb
inc
decb
insl
pop
call
imul
mov
mov
bound
or
leave
test
xchg
fwait
xchg
jg
ss
push
pusha
cmp
sub
xchg
inc
aas
cli
mov
and
sub
jo
push
sbb
adc
arpl
test
popl
aam
orb
pop
and
outsl
inc
mov
popa
mov
out
es
mov
pop
shr
movsb
push
lock
insb
mov
jecxz
or
cmp
mov
lar
in
sub
inc
push
inc
mov
jg
es
movsl
aas
movsb
test
mov
in
add
aaa
cld
xchg
ljmp
cmp
dec
mov
popa
pushf
roll
inc
or
shlb
cmp
cmp
mov
into
jne
xor
jle
lds
and
pop
xchg
mov
push
inc
pop
mov
pop
inc
or
loop
mov
and
and
hlt
dec
sub
hlt
aad
mov
dec
repz
sub
imulb
mov
aam
push
and
push
in
pop
pop
or
cmp
ficoms
push
addr16
add
cmp
sbb
mov
jmp
pop
adc
sub
push
xchg
mov
inc
dec
mov
jle
inc
ss
ret
sub
sbb
incb
outsb
sahf
sbb
movsl
test
push
xchg
sahf
fiadds
test
and
cmpsb
data16
add
push
pop
es
and
cmp
lret
push
push
sub
in
pusha
mov
insb
scas
adc
fdivr
shr
lock
or
or
mov
enter
lcall
pop
sub
mov
mov
lock
cmpsl
inc
or
outsl
mov
mov
mov
cld
or
or
mov
les
call
adc
orl
test
jle
pop
test
or
into
cmp
mov
in
insb
lea
jmp
rcr
mov
push
es
daa
pop
stc
popf
repnz
sarl
mulb
dec
mov
imul
adc
mov
jnp
add
dec
ret
xorb
das
cli
jg
and
lock
clc
jp
xor
inc
fidivrs
call
jne
jne
adc
jge
xchg
clc
and
pop
jl
sub
inc
push
outsb
xchg
fisttpl
jp
cmp
cli
xor
sub
sub
jge
mov
push
pop
add
dec
cmp
fimull
clc
jl
rcrb
addr16
aam
inc
stos
xlat
movsb
xchg
daa
push
and
clc
fstps
add
or
cmp
out
imul
mov
sbb
aas
nop
mov
mov
das
bound
cmpsb
xchg
pop
mov
or
adc
fs
bound
mov
lods
repnz
shll
sub
nop
push
orb
pop
fwait
stos
sbb
cmc
xor
or
inc
jg
inc
mov
or
ret
loop
jmp
sub
cmc
das
lock
cmpsl
cmp
sbb
clc
push
jge
stos
inc
hlt
xchg
xchg
fimuls
ljmp
sbb
ret
sarl
dec
insb
gs
std
std
sub
inc
stc
xchg
push
rolb
mov
jbe
aaa
es
test
movsl
xorb
pop
clc
inc
pop
lcall
je
xchg
jge
ret
jnp
popa
sbb
fsts
test
aam
jmp
fbld
add
divb
hlt
sbb
mov
enter
ds
in
add
add
sub
xorb
in
fsubp
mov
mov
xchg
ds
cmpsb
inc
add
sub
pop
std
addr16
call
inc
dec
and
enter
cwtl
mov
inc
aas
mov
mov
mov
mov
pop
jne
inc
outsb
push
mov
xchg
test
test
push
push
dec
addb
sub
aaa
repnz
ljmp
std
sbb
ss
jns
call
test
push
adc
movsl
ljmp
push
clc
int
jg
lock
mov
xchg
inc
out
aam
mov
loopne
mov
mov
mov
cmp
ret
fwait
test
xchg
clc
pop
push
dec
mov
xor
js
mov
cmovle
jbe
add
movsl
add
xchg
adc
loopne
cli
testb
jp
push
fwait
lcall
lea
jl
jmp
dec
loopne
mov
icebp
sbbl
repnz
push
mov
pushf
adc
call
pop
std
xchg
or
in
subb
cmp
jl
call
cld
pop
xchg
or
cmp
xchg
sbb
insb
ljmp
mov
sub
imul
ja
sbb
movsl
adc
push
sub
test
or
pop
push
bswap
lret
mov
xor
cmp
andb
cmpsb
dec
jb
push
aam
ret
jae
cli
mov
dec
lahf
test
cli
jge
aad
mov
xchg
orb
ret
test
push
jne
add
add
xchg
inc
roll
jg
add
mov
sub
inc
mov
movsb
push
push
or
jae
movsb
adc
mov
loopne
dec
cmp
mov
dec
push
idivb
mov
dec
dec
sub
jle
lock
inc
lods
jo
cmp
dec
sub
loope
jl
fisubrs
pusha
sti
dec
mov
pop
adc
xchg
fistpl
scas
dec
fs
ljmp
inc
inc
mov
cmc
out
adc
jo
insb
test
push
out
or
adc
rcrl
sbb
add
xchg
xor
adc
mov
ss
pop
sti
out
xchg
mov
xchg
xchg
mov
call
test
pop
lods
jno
xor
pop
or
les
inc
xchg
dec
xchg
andl
adc
nop
fs
push
inc
push
int3
stc
bound
cld
push
icebp
clc
iret
cmc
sbb
and
sub
mov
imull
lret
xor
jl
out
jnp
loop
jge
into
je
mov
fs
ret
jecxz
lods
dec
scas
inc
dec
daa
fdivrs
popa
pop
add
ds
ljmp
push
fiaddl
add
jnp
lcall
inc
sub
or
add
sub
xor
xor
scas
mov
pop
sbb
jbe
add
cmp
dec
jg
scas
dec
leave
inc
in
test
push
gs
inc
incl
jmp
scas
lret
stos
daa
and
sub
push
test
sub
sub
dec
mov
clc
mov
push
mov
pop
rolb
loopne
adc
aaa
pushf
lock
arpl
xor
es
xor
enter
jle
mov
loop
dec
jle
cli
subl
adc
ljmp
xchg
mov
mov
cmp
and
adc
and
mov
mov
popf
nop
jbe
daa
out
lret
xlat
pop
and
dec
mov
cmp
pop
mov
lock
jp
aad
adc
jle
mov
ss
adc
jne
cmp
xchg
imul
mov
jle
adc
or
push
in
inc
push
push
xchg
ret
repz
je
js
fstp
aas
adc
enter
out
xor
dec
sbb
push
leave
enter
jmp
dec
mov
pushl
or
and
xchg
dec
fstl
and
ds
adc
in
iret
add
sbb
es
fcoml
push
mov
adcb
lock
out
mov
movsb
mov
aaa
push
hlt
inc
in
cli
add
sarl
data16
dec
stos
movsb
aaa
inc
xor
stos
jnp
xor
roll
lods
inc
stos
scas
add
incl
int
jle
mov
jge
add
jnp
pop
cs
push
mov
xor
and
xchg
or
aaa
mov
xchg
and
cmp
mov
mov
adc
and
push
adc
push
aas
or
sub
pop
insb
ret
mov
pop
adc
lock
push
mov
rolb
pop
testl
mov
sbb
xor
clc
out
dec
xchg
gs
ss
sbb
mov
pop
arpl
hlt
inc
pop
cld
inc
mov
jl
and
das
xor
jle
jp
mov
ja
jl
and
mov
test
notb
inc
cmp
jmp
and
sbb
pop
insl
jo
arpl
sbb
bnd
shr
jo
xor
add
ja
in
pop
mov
cld
inc
rorb
jle
les
inc
iret
xchg
inc
mov
mov
push
lock
es
mov
push
pop
pop
or
incl
xor
rcrb
xor
push
je
xor
push
sub
push
aad
jl
adc
and
sbb
mov
iret
data16
inc
push
in
shr
loopne
inc
icebp
loopne
push
adcb
cmc
push
pop
pop
lret
mov
xchg
sbb
call
jmp
dec
pop
pop
mov
imul
push
or
mov
bound
pop
ss
icebp
inc
jl
outsb
cmp
aam
hlt
adc
cmp
sahf
int
xor
out
int
jb
dec
mov
ds
popw
pop
mov
ret
lcall
inc
lahf
push
out
pop
shlb
pop
fisubrl
inc
arpl
fistps
add
jbe
das
dec
jp
into
adc
inc
xor
mov
test
mov
rol
inc
adc
xchg
sbb
or
mov
and
pop
add
add
insl
dec
fprem
add
hlt
jo
rol
sub
cmc
pushf
into
icebp
shrb
ss
test
xchg
inc
aas
imul
sub
jne
mov
adc
adc
sbb
in
sub
jo
mov
add
insb
mov
xor
enter
push
xabort
mov
pop
jno
das
xchg
imul
cmp
je
pop
iret
xor
add
test
push
dec
jge
shll
ds
jl
es
mov
cmp
jle
mov
sbbb
out
push
mov
outsb
sub
and
mov
sti
fadds
data16
addb
pop
ret
xor
ret
test
loopne
js
nop
or
add
cltd
cmp
sbb
leave
and
jecxz
lahf
notb
mov
fcmovb
or
shlb
movsl
add
inc
ret
rcll
xchg
btc
std
cwtl
imul
inc
sub
or
scas
lret
sub
hlt
mov
adc
mov
daa
jbe
scas
in
inc
xor
mov
bnd
sub
cmpsb
mov
shrb
dec
and
lock
and
test
test
fstps
je
jns
mov
icebp
sahf
mov
and
cs
lahf
jg
iret
cmp
in
int3
push
call
fisubs
pop
cmpl
mov
movb
xchg
and
je
jo
out
mov
mov
cmp
mov
pop
push
je
push
in
popf
scas
sbb
mov
scas
fwait
stos
dec
idivl
push
dec
inc
push
pop
cmc
push
jmp
aam
lret
adc
orb
pop
pop
push
cld
into
mov
lock
or
jmp
inc
push
loope
jle
fimull
loopne
add
push
divb
loope
hlt
divl
aad
lcall
jno
aaa
jle
fstl
vmulsd
js
add
aam
gs
loope
inc
sub
mov
aas
cmpsb
dec
imul
dec
inc
and
notl
fisubl
loop
pop
aad
stc
push
mov
sub
test
push
push
stc
lods
loop
jle
push
and
or
repnz
out
nop
ljmp
sub
sti
loope
cltd
mov
dec
add
repnz
push
cmc
cwtl
mov
add
push
jecxz
sub
pop
pushl
xor
dec
cld
pop
lea
dec
dec
push
rcll
xor
mov
dec
cmp
mov
es
hlt
xchg
pop
xchg
ret
cli
mov
pop
ret
add
or
repz
lods
mov
mov
push
pshufw
xchg
loope
movsl
pop
jo
lcall
pusha
mov
ret
cli
inc
lea
xor
das
cmpl
insl
out
jle
or
adc
shlb
rcl
xchg
mov
sbb
cmp
cmc
faddp
push
lcall
xor
add
test
repz
repnz
rcr
add
push
inc
pop
ret
dec
nop
sub
cmc
mov
popf
cwtl
xor
and
sbb
lcall
in
xor
test
xlat
inc
dec
add
mov
inc
in
fbld
aaa
xor
or
in
sbb
mov
clc
push
sub
sbb
pop
xchg
pop
cmp
and
pop
sar
and
in
es
aaa
das
notb
inc
adc
imul
add
xor
loope
xchg
xor
es
push
cmpsb
or
dec
mov
arpl
pusha
ljmp
outsl
jle
mov
mov
scas
push
jecxz
orb
pop
sub
stos
or
hlt
sub
sbb
mov
add
jmp
insl
xor
jge
movl
cmp
loope
lock
xlat
loopne
cwtl
inc
mov
int
push
jno
mov
push
fdivr
lcall
out
cmp
pop
push
daa
xor
pop
out
mov
je
mov
push
push
out
in
popf
mov
sbb
test
mov
loope
jle
int3
push
push
mov
fsubl
mov
lock
pop
cmc
rorb
sub
enter
test
hlt
and
aad
je
mov
int
mov
negl
test
ficompl
jp
mov
stos
enter
xor
pop
test
aad
sub
dec
push
push
xchg
daa
hlt
test
xlat
xor
clc
sarl
adc
lahf
lock
xor
xchg
push
add
hlt
and
loope
dec
jle
jns
mov
jb
mov
movl
mov
dec
cltd
fisubs
or
cwtl
fmulp
jp
push
sidtl
and
lret
repnz
or
mov
adc
inc
pop
dec
lret
mov
insb
aam
fadd
sarb
mov
push
push
cli
pop
inc
sti
mov
mov
sub
outsl
adc
pop
dec
mov
insl
call
inc
in
in
lahf
test
pop
mov
mov
pop
pop
sub
jnp
sub
stc
pop
jo
cmp
test
jmp
jbe
pop
iret
xor
movsl
dec
pop
repnz
pop
shl
xor
ds
jecxz
xor
sub
push
push
les
das
scas
push
or
bound
daa
jp
test
loopne,pt
cmp
add
push
inc
dec
and
pop
stos
xchg
or
add
mov
faddl
shlb
push
or
and
ficompl
ljmp
push
lahf
and
and
and
insb
icebp
push
lds
dec
cmc
clc
jbe
scas
fnsave
fiadds
ja
inc
ret
sub
push
add
and
cmp
outsb
js
sti
dec
adc
cmp
outsb
xchg
into
dec
xchg
xchg
aas
or
mov
sbb
mov
movsl
into
int
jo
adc
nop
je
lods
loopne
das
std
aaa
nop
pop
push
dec
scas
out
test
nop
lods
inc
push
dec
repz
or
lods
test
inc
xchg
das
rorb
pop
sbb
sbb
scas
adc
movsl
fistpl
add
add
js
xchg
or
jmp
mov
add
test
and
icebp
push
mov
mov
mov
xor
out
insb
mov
xor
ret
sub
inc
inc
xchg
xchg
mov
push
adc
ljmp
das
push
push
aam
scas
mov
pop
sbb
bound
pop
fimuls
scas
inc
and
loope
adc
orl
xchg
push
xchg
ss
sbb
inc
fldenv
pop
mov
mov
xchg
pop
hlt
call
mov
add
jne
stos
sbb
ds
push
clc
movsl
xor
push
jo
mov
arpl
repnz
pusha
xor
ds
or
popa
and
ret
mov
ret
test
icebp
lret
inc
das
dec
popa
icebp
inc
xchg
outsl
sbb
lods
mov
mov
aam
mov
fsts
mov
and
mov
pop
in
xchg
push
std
imul
mov
js
test
add
or
fstl
and
fisttpl
ss
std
xchg
mov
sahf
jb
push
sub
out
mov
adc
data16
jmp
xor
sbb
loope
frstor
mov
bound
cmp
push
push
in
inc
ficomps
rolb
inc
subb
inc
fldenv
pop
sub
inc
outsb
cmc
mov
or
inc
sbb
ljmp
mov
clc
cs
mov
fstl
pop
scas
push
cmp
jg
mull
into
mov
mov
or
pop
cli
sbb
out
mov
cltd
movsb
xor
call
or
bound
inc
test
dec
push
pop
inc
mov
pop
or
cmp
lcall
int
sub
fldl
cmpl
call
out
push
pop
push
mov
test
aad
or
mov
mov
jmp
and
fs
pop
lock
mov
loope
jecxz
nop
js
pop
fstpl
or
lret
push
lods
iret
mov
add
in
mov
and
pushf
les
neg
sub
ret
mov
add
ja
xchg
and
cmp
fwait
add
lcall
sbb
pcmpgtd
mov
imul
and
cld
cmp
js
sub
lock
fildll
test
xchg
dec
ss
mov
mov
andl
lahf
lock
loope
or
test
mul
aad
xchg
push
aas
fildl
add
xor
ljmp
or
push
loopne
arpl
movsl
mov
xchg
movsl
and
push
imul
jnp
pop
aas
nop
and
sidtl
add
adc
adc
and
xchg
mov
daa
xchg
jo
add
iret
mov
xor
xor
push
push
flds
dec
cmp
adc
out
movb
push
sbb
daa
jmp
or
jg
enter
cltd
and
pop
outsl
int
cwtl
pop
daa
stos
push
fadds
xor
mov
outsl
hlt
loope
or
push
mov
mov
cmp
jmp
pusha
jmp
push
adc
xlat
add
sti
xchg
mov
sti
dec
insl
pop
pop
push
lahf
test
ret
push
mov
and
jbe
ret
icebp
cmp
cltd
aam
push
add
inc
push
cmp
dec
xor
outsb
and
lods
in
aam
test
push
mov
mov
xlat
cmp
cwtl
xchg
int
data16
inc
jp
xor
insb
mov
pop
scas
mov
loop
sbb
notl
shll
add
leave
mov
xor
insb
mov
shll
xchg
mov
fdivrs
push
bnd
adc
cmp
jl
pop
jb
rcrb
cs
popa
and
shr
push
int
std
mov
dec
mov
push
hlt
inc
call
add
ljmp
dec
mov
mov
xchg
lods
push
mov
jmp
push
sub
call
out
movsl
adc
shrl
adc
cld
jl
loope
jnp
lcall
cs
loopne
rcll
mov
aaa
push
mov
jecxz
lahf
and
movsb
addr16
lea
shl
mov
mov
aas
sbb
dec
xchg
icebp
jmp
pop
mov
sbb
fcom
imul
sbb
test
xor
jno
aas
pop
test
arpl
cmp
dec
dec
hlt
xchg
ds
dec
pusha
mov
mov
jns
sbb
lea
xor
xchg
fldl
cld
dec
outsl
inc
stos
dec
xchg
in
inc
jl
js
pusha
and
imul
js
cmc
test
xor
inc
inc
test
inc
out
pushf
dec
add
inc
pop
push
mov
mov
testb
and
fs
aad
push
shl
cmp
mov
inc
loop
cmp
dec
hlt
scas
inc
push
push
fcomps
adc
lods
jmp
pop
fidivrs
pop
push
xchg
jp
sbb
mov
std
clc
lahf
xchg
or
jmp
ret
lea
cwtl
clc
sarl
mov
icebp
je
out
lock
mov
shlb
mov
imul
arpl
out
push
cli
sbb
sbb
rcr
sarl
mov
xlat
xor
lods
rorb
faddl
cmp
stos
sub
pop
sub
adc
cltd
inc
jo
mov
mov
jecxz
aaa
jecxz
sbb
dec
adc
mov
testl
aad
fadds
mov
popa
pop
in
ret
outsl
sbb
sub
imul
shlb
or
ret
ljmp
lret
jnp
mul
rcrb
xor
lea
pop
push
test
lahf
fidivrl
jo
mov
xchg
hlt
lds
fisubl
jnp
and
push
aam
cmc
or
lods
and
daa
out
or
roll
inc
jno
adc
out
idivl
xor
push
inc
shll
mov
mov
iret
sti
cmp
cld
lods
mov
and
insl
loope
jae
jmp
mov
daa
fsubp
cmp
dec
sbb
xchg
mov
and
scas
orb
out
ljmp
insl
and
sbb
int3
pop
add
sbb
out
mov
sub
mov
icebp
aam
lock
lret
or
cmp
adcb
pusha
cltd
push
icebp
insl
or
sbb
rolb
push
outsl
movsl
pop
cld
add
mov
ret
mov
dec
xchg
iret
cmpsb
pop
add
inc
mov
or
lods
mov
arpl
push
faddl
mov
pop
push
sbb
lret
test
loop
ret
jge
test
add
inc
out
pop
sbbb
subl
xor
mov
jle
dec
test
orb
cmp
cmp
shlb
or
sbb
cvtps2pd
inc
sub
pop
bound
sbb
lcall
fcomi
dec
pop
out
jg
pop
xchg
dec
pushl
sub
mov
fcmovne
rorl
xorl
xchg
sahf
out
sarb
or
jecxz
xor
ret
mov
out
fsubl
mov
pop
xor
lds
lods
and
sub
fmul
adc
aad
add
mov
xor
jmp
xchg
cld
test
mov
pop
inc
push
sbb
pushf
cmpsl
js
mov
jb
rolb
repnz
xor
aad
outsb
jl
in
mov
mov
xor
cmp
jge
test
pop
call
pop
es
sub
rcrl
outsl
inc
inc
mov
mov
cli
and
sub
mov
rolb
ret
add
adc
iret
icebp
dec
inc
jp
mov
pop
mov
push
add
les
imul
and
mov
mov
jmp
cmpsl
mov
hlt
push
xchg
mov
fisttpl
gs
cmc
into
sbb
ret
repnz
mov
xchg
lock
pop
test
pop
push
jl
pusha
dec
loopne
test
fcmovne
addl
push
aaa
sahf
mov
mov
or
mov
mov
stos
cmp
hlt
repnz
and
inc
jp
sar
xor
jecxz
add
in
mov
or
and
inc
addl
int
jecxz
out
add
out
and
jno
mov
add
add
or
sub
mov
call
jp
mov
stos
ret
addb
adc
cmp
fmul
pop
xor
in
clc
inc
stos
push
sbb
pop
jp
sub
inc
cmp
addl
out
clc
pop
mov
mov
sbb
dec
push
loope
sbb
sub
call
test
rcl
test
jp
and
pop
inc
mov
outsb
dec
cltd
add
pop
movsb
fadds
dec
push
je
subl
call
xchg
inc
mov
enter
icebp
cmc
add
mov
rorl
xor
int3
cmp
clc
cmp
adc
rcl
and
adc
in
add
punpcklbw
inc
mov
dec
mov
fdivrp
aam
stos
and
xor
jb
loopne
bound
or
jl
outsl
in
sub
mov
sub
outsb
mov
dec
loopne
xchg
shr
mov
cld
insb
jno
jg
add
or
inc
mov
test
or
add
mov
add
xchg
xchg
test
popf
cli
sbb
sub
daa
hlt
jmp
in
push
push
jl
sar
pop
push
jp
inc
fbld
add
or
mov
clc
pop
jbe
sarb
mov
xorb
dec
cmc
sbb
or
test
mov
pop
je
mov
aas
sbb
add
push
xor
and
mov
fdivr
and
cs
mov
enter
mov
cli
mov
sbb
xor
jmp
sbb
mov
pop
pop
inc
or
loope
mov
imul
push
add
jge
out
std
mov
rcll
push
inc
loope
mov
into
jno
sub
loopne
mov
jmp
outsb
push
sub
mov
sub
in
in
ficoml
decl
ret
stc
cmc
sbb
ret
dec
adc
push
mov
aam
jo
adc
adc
jl
pop
mov
clc
xchg
cmpsl
loopne,pt
mov
clc
mov
lds
or
ljmp
and
mov
cli
imul
cwtl
adc
sub
pusha
xor
aam
or
sbb
hlt
add
push
mov
mov
int3
mov
mov
sbb
ss
jns
mov
popf
out
movsb
or
add
loope
mov
mov
lods
fstpl
cmp
and
jecxz
cmp
lds
or
aad
lret
out
fldenv
pop
mov
cli
out
idivl
push
mov
dec
adc
adc
test
add
mov
cmp
bound
jle
cli
pop
out
in
mov
cld
push
and
fstps
mov
mov
xchg
pop
push
ret
scas
jle
je
fnstenv
cmpsb
sub
or
lahf
lock
dec
jl
inc
mov
mov
fmuls
addps
push
int3
imulb
cwtl
mov
cmp
orl
test
xchg
int
pop
jae
add
std
add
mov
sbb
mov
sbb
test
and
mov
aad
mov
inc
dec
fwait
jecxz
jg
push
xor
divb
dec
out
fidivl
adc
cmp
mov
and
dec
arpl
sub
lcall
mov
stos
out
in
stos
pop
push
insb
inc
adc
push
xchg
pop
iret
mov
or
jno
out
cmc
icebp
xchg
popf
mov
and
sub
outsl
sbb
mov
iret
jo
mov
adc
add
std
fwait
xchg
mov
je
jne
sub
outsb
cmc
add
xchg
dec
mov
test
mov
clc
xchg
adc
bound
jne
testb
jecxz
out
push
pop
mov
jb
dec
sbb
cmp
and
push
or
sbb
insb
and
mov
pop
mov
mov
stos
jno
push
ljmp
xor
shr
out
fs
add
lcall
popf
jo
into
outsl
or
adcb
cmp
adc
push
jle
cmp
test
xor
repnz
ret
pop
stos
test
pop
mov
mov
sahf
pop
pop
les
repz
xchg
and
pop
js
in
adc
xchg
dec
mov
pop
iret
inc
mov
jo
or
cmp
sub
add
mov
call
sub
add
shll
icebp
sbb
adc
rorl
cmp
decl
and
fnstenv
jle
hlt
in
mov
pop
insb
rorb
xlat
jo
fcompl
rorb
js
mov
sti
xor
push
ret
pop
add
ss
mov
addb
xlat
xor
jmp
and
sub
pop
popa
es
bound
movsl
bound
and
lock
aas
mov
or
movsl
test
dec
in
mov
aas
pop
push
js
mov
mov
bound
insl
lret
sub
jle
push
lea
add
sbb
jns
inc
xchg
push
inc
rcll
dec
imul
mov
jno
adc
jbe
loope
loopne
cs
cli
js
adc
jg
push
loopne
jmp
mov
scas
and
subl
dec
cmp
jecxz
xor
add
mov
inc
repz
push
bound
add
cmp
icebp
jl
add
add
cs
adc
fwait
movsb
jl
xchg
pop
add
repnz
sbb
sub
and
and
or
decb
fmull
sbb
inc
or
and
and
push
cmp
loopne
or
push
outsb
push
outsb
gs
or
aad
pop
add
stos
daa
fnclex
leave
popa
test
ret
fs
add
mov
inc
lods
cmp
rcl
push
mov
fisubl
or
xor
and
stos
mov
jge
enter
sahf
sub
fmuls
cmpl
dec
push
les
jbe
mov
cmp
ljmp
mov
imul
sub
and
inc
dec
fmuls
cmp
out
lahf
jge
add
jp
movsb
inc
pop
adc
outsl
rcrl
mov
push
adc
test
sarb
inc
jl
daa
outsb
test
aam
xor
pop
adc
push
xchg
shlb
test
cld
push
push
or
or
jle
pop
xchg
inc
leave
jo
mov
hlt
test
popa
adcl
pop
jmp
repnz
mov
faddl
stos
push
aam
or
rolb
xlat
nop
dec
jg
mov
lock
aaa
call
arpl
and
push
repnz
clc
pop
sbb
adc
sub
int3
xor
lahf
jbe
fdivrs
enter
ljmp
sub
adc
jge
js
push
mov
mov
xchg
ror
hlt
mov
sub
add
dec
jnp
dec
ljmp
and
xor
sbb
push
mov
adc
push
push
pop
ds
fsubrs
sub
mov
mov
mov
jno
cli
dec
mov
cmpsl
push
out
pop
sar
ds
jecxz
mov
cmp
or
add
cmp
jge
daa
bound
cmp
lea
add
mov
sbbb
add
push
mov
add
xchg
loopne
in
inc
adc
js
inc
scas
pop
push
enter
fmuls
dec
pusha
out
js
push
pop
lea
push
ret
outsb
sbbl
xchg
sbb
mov
pop
mov
push
shll
mov
rclb
dec
fcmovne
mov
xlat
xchg
clc
add
mov
aaa
inc
pop
inc
mov
ss
pop
push
lret
int3
jl
in
push
fadds
xchg
add
push
loope
pop
inc
outsb
rolb
les
inc
outsl
lods
inc
push
imul
inc
add
dec
jecxz
notb
adc
mov
xchg
or
in
sbb
inc
pushf
jle
or
mov
ljmp
mov
enter
cwtl
and
add
daa
loop
shlb
jle
cmp
sub
pushf
lods
dec
pop
fdivl
sbb
adc
jge
pop
mov
mov
sbb
xor
dec
in
xor
lods
adc
push
daa
push
fidivrs
imul
inc
movsl
xchg
out
imul
call
iret
xlat
ja
pop
xchg
int
mov
ds
cs
xchg
dec
je
ljmp
add
scas
sub
fs
xor
dec
ljmp
mov
dec
shll
nop
mov
pusha
ljmp
dec
sbb
cmp
shlb
pop
sbb
push
push
sbb
or
in
cmpsb
stc
lds
or
jle
push
cmc
xchg
outsb
pop
inc
pop
cli
push
jg
pop
push
scas
cmc
or
or
repnz
xchg
or
imulb
repz
das
loope
push
jnp
fdivrp
sahf
dec
lret
add
clc
add
jno
jg
es
sub
enter
and
dec
pop
imul
xor
ljmp
cmpsl
jbe
out
mov
pop
xor
das
add
jns
dec
fnsave
mov
and
sbb
or
jecxz
mov
sbb
push
mov
mov
xchg
jp
outsl
and
stos
movsb
or
in
daa
icebp
dec
mov
cmc
cmp
adc
icebp
imul
adc
mov
sub
lods
test
sarb
loope
ss
push
icebp
mov
xchg
dec
not
xlat
paddusb
mov
mov
cld
jnp
fwait
mov
jo
aaa
loop
in
cmp
or
scas
fcmovb
pushf
mov
dec
pop
aam
push
outsb
sub
stos
jo
sub
add
adc
in
std
cli
dec
sub
in
pop
pop
jl
and
inc
push
in
lret
jb
aam
inc
add
add
sbb
xor
add
pop
adc
daa
mov
out
dec
and
mov
jb
add
and
push
test
lods
cld
mov
dec
xlat
pop
dec
or
lods
shr
mov
dec
les
or
repnz
adc
shrb
sbbb
inc
mov
xor
fidivl
test
inc
mov
aad
daa
cld
sbb
int
arpl
ja
pop
and
sub
js
mov
jb
dec
test
mov
adc
dec
pop
jo
mov
pop
mov
pushf
test
shr
jp
inc
and
mov
sub
xor
and
mov
jno
xchg
std
sbb
and
ljmp
popa
cmp
stos
add
out
sub
sbbb
adc
jb
inc
out
push
adc
jne
xchg
xchg
push
js
aad
subl
or
sbbl
iret
mov
jl
movsl
mov
fistpll
mov
sbb
fistpl
fmull
cmp
pop
jmp
inc
ret
punpckhdq
jo
push
push
es
iret
in
lds
sbb
sbb
or
adc
dec
pushf
pusha
fisttpl
mov
ret
cmpsl
imul
adcb
sbb
xchg
frstor
inc
cmp
adc
sub
pop
mov
lods
sbb
mov
stos
jbe
jl
push
sub
and
and
pop
pop
push
cmpsl
cmp
and
aam
or
inc
sbb
idivl
jo
sbbb
jg
lock
pop
jae
cs
leave
test
insl
cmp
push
arpl
rorb
sarb
out
add
pop
and
faddp
and
and
jbe
jle
je
psrad
or
mov
push
xor
lock
loopne
ds
sub
xchg
mov
hlt
lods
jb
lret
imul
aas
jl
push
out
std
cmpl
mov
cwtl
sbbb
in
pop
xchg
pop
push
lods
ret
sbb
pusha
xchg
sbb
insb
icebp
push
scas
xchg
add
jns
cmp
pop
nop
sub
repz
outsl
jle
lods
cmpsl
add
stos
testb
mov
test
inc
adc
aaa
cmpsl
xchg
cmp
out
leave
pop
fwait
mul
sti
std
adc
cmpsb
lret
sbb
nop
jmp
sbb
sub
rorb
mov
mov
sbb
push
add
xchg
clc
scas
inc
bound
xchg
loope
call
or
pop
xadd
lods
sti
or
jno
ficompl
sbb
loope
mov
and
test
call
inc
inc
rcrb
mov
cmpsb
push
ret
push
xor
xor
push
push
aam
stos
push
nop
movsl
lret
ret
shlb
fbld
mov
push
and
xchg
lods
adc
xor
sbbb
pushl
add
les
add
or
dec
lahf
push
inc
fnstsw
dec
mov
jnp
and
sbb
sub
and
insl
outsb
sub
jo
popf
adc
mov
test
lret
adc
insb
rcrb
jb
push
cld
jae
sub
aam
xchg
adc
insl
jns
pusha
cmp
dec
cmpsb
lock
in
push
stos
sub
or
test
mov
dec
sbb
ret
loopne,pt
mov
xchg
ljmp
fisubs
add
push
icebp
jmp
cmpl
lcall
and
cs
mov
rcll
scas
push
loope
js,pt
sub
xor
inc
mov
hlt
and
sub
or
je
icebp
imul
fcoms
pop
or
test
or
cmpsl
loopne
cli
aaa
orb
lret
mov
lea
pushf
add
mov
or
andl
mov
or
mov
fidivrl
push
fucomip
mov
xor
popa
into
lcall
sub
imul
mov
jg
out
cli
mov
lret
loope
inc
pop
je
lods
sub
outsb
jno
or
adc
pop
pop
mov
rorb
movsl
or
inc
xchg
int
loopne
sbb
cmp
jo
pop
js
lahf
xorps
sbb
sub
fwait
xor
shr
pop
arpl
aam
loopne
stos
cli
xchg
sahf
mov
and
test
lock
mov
stos
fnclex
stc
jne
sahf
jp
gs
push
mov
test
dec
pop
loope
jg
xor
ds
xchg
pusha
movb
jne
adc
jne
adc
test
es
hlt
adc
in
pusha
subl
lcall
jmp
sub
pop
cli
mov
lock
jecxz
add
or
cmp
inc
push
sbb
inc
xlat
add
mov
shlb
add
fisubrl
shrw
in
sbbb
cmp
mov
ficoml
das
cmp
push
data16
lahf
adc
add
pop
push
mov
lcall
sarb
ja
mov
rcr
lock
jecxz
fxch
test
xor
loopne
jb
js
xlat
iret
dec
or
lods
ret
pop
in
lock
rcr
cs
push
es
adc
cmp
lods
stos
leave
mov
adcl
iret
mov
or
add
and
dec
xor
shlb
test
incw
sbb
or
in
js
mov
in
mov
xchg
js
lock
xchg
imul
xchg
cmp
sbb
adc
mov
mov
orb
test
inc
inc
jge
popf
test
dec
and
inc
cmc
adc
movsb
sbb
dec
aas
jno
je
fs
jp
mov
fsubl
insb
mov
sahf
mov
xor
push
pop
pop
mov
loope
push
popf
movsl
push
setbe
inc
mov
lret
add
loopne
mov
push
jp
test
test
aas
out
shrb
adc
pop
dec
mov
add
or
xchg
sub
pop
xlat
cmpsb
xchg
mov
sahf
faddl
xchg
mov
dec
or
ret
add
movsl
rorl
adc
mov
inc
fsubs
mov
xchg
daa
nop
jp
adc
mov
adc
jno
and
inc
lret
push
jbe
lcall
and
ds
jp
mov
inc
sahf
sub
xchg
hlt
in
loope
out
iret
js
stc
inc
adc
daa
pop
ret
stc
pop
loope
cmp
mov
iret
clc
test
jo
popa
int3
lods
inc
sbb
pop
fs
and
repz
inc
fsub
or
repnz
das
in
cmp
lods
out
hlt
push
or
xchg
sbb
jb
cmp
je
and
out
or
adc
test
lret
jnp
into
adc
inc
xor
aas
fwait
movsb
jbe
xor
outsl
cwtl
sub
jle
std
cs
mov
push
rolb
repz
jp
pop
push
rcrl
into
xchg
jnp
fadds
inc
dec
push
loop
jl
bound
das
test
lret
xor
or
mov
addl
jge
mov
shlb
aam
pop
mov
dec
inc
dec
push
hlt
iret
inc
pushf
outsl
call
ret
in
pusha
paddw
inc
test
sub
dec
and
mov
pop
push
or
and
clc
sub
fs
in
jle
or
mov
or
int
movsb
xchg
stos
push
and
and
mov
dec
xchg
mov
mov
fisttpll
add
sarb
iret
push
popa
xchg
push
push
jb
sub
loopne
sub
outsb
mov
mov
sahf
scas
xor
inc
add
dec
inc
lcall
push
jb
add
mov
loopne
mov
icebp
mov
and
push
push
cmc
or
pop
dec
adc
pusha
or
imul
insl
movsb
bound
cli
pop
adc
mov
mov
movsl
movsl
inc
jl
je
outsb
sbb
shll
fistpl
pop
dec
sub
mov
sarb
ljmp
inc
inc
leave
adc
repz
stos
mov
push
cmpsb
scas
lcall
dec
xchg
add
cmpsl
out
imulb
lahf
or
ss
cwtl
pushf
push
cmp
pop
jo
sbb
sub
add
stos
outsb
loop
stc
rorl
sbb
call
xchg
ret
and
ds
js
insl
push
stos
mov
mov
je
lods
test
mov
push
cmp
loope
sub
dec
loope
shlb
cmc
and
loopne
cmc
push
sub
out
pop
fisttps
mov
rcl
insl
divb
push
gs
cwtl
adc
jo
ljmp
push
sub
xchg
mov
pusha
ds
jmp
sbb
insl
fwait
pop
mov
out
jo
xchg
enter
iret
push
pop
push
lret
test
ret
and
sub
addb
push
outsl
sub
rolb
in
jp
or
fdivr
pop
dec
loope
pop
add
test
and
push
xchg
ja
je
lea
lds
cmp
daa
pop
movsl
xor
nop
push
std
cld
jp
sbb
mov
call
pusha
iret
mov
or
mov
dec
ljmp
ljmp
inc
sub
fimull
mov
out
fs
jl
pop
sbb
mov
cmc
dec
insl
stos
xchg
mov
stos
rcl
push
fisubrl
sahf
inc
or
cs
xchg
inc
mov
lock
push
fidivl
pop
enter
das
mov
rcll
adc
das
test
push
inc
rcrb
shrb
cmp
repz
addr16
ss
test
out
fnsave
les
inc
cwtl
call
js
iret
jae
aam
xchg
enter
loop
ds
pusha
popf
mov
push
mov
out
mov
dec
rcll
mov
fs
jns
fmuls
inc
mov
or
dec
dec
and
fsubs
xlat
mov
xor
or
test
sbb
fnstsw
lds
ret
add
stc
inc
loopne
das
sbb
or
xor
lret
aas
sub
sahf
push
fnstenv
push
adc
and
sbb
push
outsl
and
mov
cmp
xchg
mov
and
lcall
pop
retw
dec
and
and
jns
out
andb
stos
push
jno
aaa
hlt
sub
dec
pop
push
lods
add
cmp
fwait
mov
aad
lcall
xchg
mov
faddl
pop
aad
sub
ss
inc
mov
mov
adc
push
mov
ja
mov
adc
jl
repz
xor
jmp
rorl
adc
rol
movsl
cli
xor
ja
jp
jne
push
sahf
incl
cmp
fsubrs
sbb
or
pop
mov
sarl
mov
lods
test
sub
call
aaa
xor
dec
pusha
mov
mov
loopne
pop
por
adc
and
imul
mov
mov
xor
push
test
xchg
hlt
jno
pop
lret
cmp
mov
stos
push
xchg
dec
inc
mov
mov
aam
mov
ret
or
pop
js
out
pop
sub
pop
mov
push
inc
or
inc
dec
iret
jmp
stos
sbb
lock
pop
popa
pop
loopne
push
push
int3
cmp
cs
adc
sub
sti
lahf
mov
negl
dec
mov
dec
lods
push
adc
mov
stc
lahf
movsb
cli
roll
out
loope
dec
jne
fidivrl
dec
xlat
subl
xchg
sub
out
nop
mov
sub
loopne
sub
outsl
sub
lods
mov
mov
subl
out
jmp
pop
add
ja
jb
cmpsb
test
test
sub
push
cld
or
cltd
add
cmp
sbb
dec
sub
loope
stos
mov
mov
sub
aam
call
jge
push
push
mov
sbb
sbb
add
cmp
dec
mov
test
inc
aad
out
xor
sub
or
sbb
movsb
sbb
push
fistl
call
pop
xchg
jbe
jne
xchg
aad
adc
inc
mov
cmpsb
push
xchg
in
jge
inc
mov
adc
push
adc
cmp
inc
mov
add
cmp
lock
test
fisttpl
ret
push
pop
cmp
jbe
scas
incb
mov
in
xchg
add
ds
jle
push
fcompl
insl
dec
pop
cwtl
fcmovne
push
mov
pop
mov
jne
test
push
je
fst
add
adc
call
daa
xchg
cmp
imul
loop
jnp
cmpsl
inc
adc
daa
leave
subb
aas
adc
in
insl
xchg
shrb
xchg
loope
loop
push
rcll
sbb
scas
jns
rcll
mov
mov
in
rdpmc
iret
push
fs
and
xor
pusha
mov
repz
leave
and
repnz
and
xchg
cmp
cmp
aaa
add
push
adc
pop
or
clc
int
sub
mov
insl
jae
popa
and
xchg
icebp
pop
mov
arpl
loope
xor
test
jno
adc
xchg
push
adc
lcall
jecxz
fldenv
rcrl
movsb
sbb
pushf
mov
inc
packssdw
mov
add
mov
push
inc
loope
xrelease
mov
cmp
call
xor
push
lds
cli
mov
lds
in
push
inc
sub
mov
cmp
cmp
js
sbb
push
test
cmpsb
xor
rclb
loop
sbb
inc
sbb
scas
jg
cmp
and
lahf
sbb
mov
test
or
jne
mov
fwait
push
sbb
xchg
jl
and
cld
push
enter
sbb
dec
add
rcr
sub
out
jae
pop
mov
pop
rorl
sub
je
sub
sub
push
scas
insl
push
fistpll
xchg
xchg
add
jmp
clc
mov
push
ficoml
push
jnp
lea
push
cmp
mov
cmpsl
movsb
mov
and
jl
js
cwtl
push
sbb
fdivp
fwait
mov
daa
insb
sbb
jg
icebp
mov
and
daa
cwtl
test
cld
gs
lcall
loopne
lock
fdivs
dec
xchg
mov
clc
pop
dec
loop
push
xor
out
cmp
or
mov
adc
stos
loopne
sub
sbb
pop
test
loop
rcrl
fisubrl
inc
out
fstl
cmp
xor
call
mov
push
dec
push
adc
cmp
dec
std
inc
rcrl
pop
adc
sub
jno
outsb
fisubl
xchg
cmpl
lret
cltd
inc
aam
ret
icebp
jmp
push
inc
enter
repnz
mov
xchg
jo
add
push
sub
call
aad
xchg
outsb
and
mov
andl
dec
mov
fadds
add
cmp
dec
cwtl
mov
dec
or
mov
ret
add
cmp
pop
bound
fsubrs
sbb
arpl
lcall
dec
adc
mov
sahf
ret
call
faddl
cld
xor
andb
daa
jle
sub
testl
or
adc
xchg
das
jg
jge
push
scas
call
test
lock
adc
pop
ja
sub
dec
adc
dec
mov
punpckhbw
mov
xor
jbe
sarl
les
adc
sbb
and
out
or
mov
sbb
sti
add
cwtl
addr16
call
mov
ljmp
xchg
mov
js
leave
nop
adc
sbb
loope
loope
ljmp
push
icebp
ficoms
cli
cld
sub
shrb
jae
call
dec
sub
sbb
lds
dec
inc
jle
gs
fwait
mov
aas
lods
aad
scas
cmp
cmpsb
dec
movsl
mov
lea
fiadds
mov
test
je
push
jg
rclb
test
cmc
and
mov
pop
xchg
pop
mov
movsb
aas
xor
sub
sub
mov
dec
cmpsb
out
jno
mov
push
outsl
les
aaa
shrb
add
call
xor
xor
sbbl
pusha
sub
add
add
aas
xchg
adc
fstl
cmp
or
sbb
adc
sbb
mov
ja
dec
cmpsl
rcll
negb
mov
sbb
and
push
jg
jp,pt
fidivl
aaa
pop
cmp
repz
xchg
rcl
cmpsl
jbe
dec
pop
ja
xchg
pop
pop
filds
push
adc
or
pop
fcoml
outsb
andb
or
std
iret
repnz
sbb
cs
lods
icebp
and
jbe
xorl
lahf
mov
mov
jl
adc
fs
sub
or
jle
xchg
dec
dec
xor
add
loopne
add
test
dec
pop
das
or
daa
or
dec
mov
neg
push
push
cmp
enter
dec
or
sarb
mov
lcall
sub
mov
jle
dec
mov
pop
out
cli
push
insl
inc
push
cli
adc
mov
dec
pop
hlt
repnz
jbe
cmp
pop
fnstenv
xor
xor
pop
xchg
addb
fimull
and
pop
sub
mov
stos
xchg
leave
stos
in
popa
inc
lock
test
xchg
pop
ret
dec
sub
xor
sti
mov
fwait
xchg
xchg
xchg
add
arpl
mov
ret
inc
push
loop
outsl
mov
test
repnz
push
jl
push
mov
outsl
mov
in
jle
xchg
xor
sbb
push
xor
inc
fiaddl
hlt
mov
ret
or
cmp
lcall
scas
aaa
xchg
mov
test
or
mov
inc
pop
cmp
adc
xchg
xchg
ss
xor
pop
pop
mov
pop
cld
or
push
and
iret
in
test
jge
add
sbb
inc
mov
xor
xorb
adc
cmp
adc
mov
out
xlat
add
inc
loopne,pn
mov
bnd
sub
and
xlat
js
loop
daa
lret
add
or
leave
inc
je
sbb
sbb
and
jmp
fldl
arpl
in
and
int3
ja
xchg
jbe
xorb
sub
or
icebp
adc
pop
jae
ret
cmp
jge
pop
popa
mov
add
pop
jmp
xor
outsb
sbb
cmp
cmp
dec
mov
mov
mov
fimuls
ret
aam
push
cmp
pop
add
incl
mull
xchg
mov
je
mov
mov
ret
and
add
mov
iret
add
xor
nop
mov
mov
test
imul
xor
mov
aam
cmc
pushf
mov
mov
ret
cmp
push
testl
cmp
mov
mov
sbb
aaa
dec
pop
ss
test
cmpsl
hlt
xlat
mov
ret
je
bound
jno
pop
loopne
pop
mov
and
call
loope
xchg
pop
pop
icebp
add
pushf
nop
in
cmp
jle
out
or
jne
aaa
in
pop
or
cmp
aam
jb
adc
jp
scas
dec
aaa
jmp
jno
mov
fisttpll
jmp
cmp
sub
cli
decl
test
lds
lea
out
add
aad
sbb
push
inc
movsl
loopne
nop
push
adc
sub
ret
outsb
add
push
mov
out
pop
and
dec
loop
push
or
mov
jae
pop
test
out
out
lret
andb
sub
orl
inc
sbb
jne
sbb
mov
int3
and
sbb
test
inc
dec
fs
imulb
jmp
mov
out
ret
sub
cmpsl
mov
sub
xchg
mov
inc
mov
push
inc
xchg
xchg
adc
fsubrl
out
mov
pop
cmp
push
outsl
shll
scas
in
imul
sub
in
ret
add
loop
sub
aas
nop
mov
fadd
popl
xchg
scas
jbe
or
push
push
icebp
lea
dec
jb
mov
lret
mov
xor
ret
adc
or
push
dec
movsb
das
and
jge
into
shrb
clc
dec
hlt
sbb
mov
shl
jo
push
sbb
fldcw
jo
les
pop
les
int
push
push
dec
jg
sub
icebp
adc
pop
cmpsb
pushl
xchg
mov
jbe
bound
nop
sub
insl
fisubl
inc
cmp
xchg
xchg
rcr
mov
loopne
outsb
out
jne
jge
xchg
dec
out
xor
cvtdq2ps
clc
gs
xlat
add
lods
es
aam
dec
mov
push
hlt
insl
and
fwait
push
ss
ja
ret
ficoms
lcall
adc
aaa
adc
pop
sahf
cmp
inc
cld
sub
mov
pop
xchg
mov
adc
cmp
sahf
mov
xchg
fwait
inc
enter
cmp
and
mov
xchg
cmp
xor
pop
scas
cld
ret
mov
cld
cmpsb
imul
inc
out
test
add
pop
stos
clc
pop
and
subb
jl
pop
scas
jp
xor
push
clc
dec
lcall
xchg
or
adc
hlt
dec
pop
subb
mov
pop
lea
xchg
adc
movsb
fsubl
push
out
sbb
cltd
lcall
shr
aas
lret
sub
cmp
jo
fists
push
jl
add
cmpsb
xchg
jle
xchg
out
popa
sub
inc
jl
leave
and
jno
insb
inc
test
aas
sbb
jge
fisttps
push
adc
adc
cmpl
xchg
add
jbe
clc
inc
push
jl
push
xchg
mov
in
or
push
fidivs
push
ds
andl
mov
dec
or
xchg
pushf
mov
mov
mov
test
fisubrs
or
test
imul
roll
sti
sbb
dec
pop
jmp
dec
add
dec
out
stos
dec
aam
loopne
dec
xchg
mov
xor
inc
ja
out
xchg
incl
scas
cmp
fs
adc
inc
outsb
push
pop
lcall
mov
shlb
aam
das
std
mov
cli
inc
aas
lods
insb
clc
shll
aas
or
inc
jge
add
clc
shll
cmc
movl
mov
pusha
pop
xchg
ljmp
sbb
pop
xchg
sub
ret
sbb
lea
jno
push
iret
inc
xor
rol
xorl
out
js
push
cmpl
mov
gs
cli
cmpsb
jmp
xchg
addr16
jecxz
dec
or
push
sub
jp
pop
sub
dec
cld
xchg
ds
je
cmp
push
je
cmp
mov
adc
movups
mov
loope
test
push
sbb
fsubrs
addl
lods
icebp
pusha
lret
pop
lcall
dec
imul
loopne
adc
fmuls
data16
adc
or
int
push
pop
push
sbb
and
lahf
int
int
mov
mov
std
sbb
xchg
mov
sti
out
mov
lods
js
mov
ja
adc
pop
ficoml
cmpl
jb
push
ficoml
cmp
mov
inc
sarb
push
sahf
adc
loope
jb
mov
ror
div
scas
cmp
addb
add
mov
js
gs
mov
inc
add
rol
xor
sbb
int3
in
arpl
stos
and
inc
lret
aad
adc
insb
cmc
and
std
inc
in
xchg
jno
cmp
loopne
clc
outsb
mov
sbbb
push
jmp
lds
movsl
jo
loop
jecxz
mov
js
push
xor
xchg
loopne
imul
cli
popf
jmp
xchg
xlat
sbb
mov
cmpsl
and
mov
stos
loopne
fisubrs
mov
or
push
push
jbe
push
repnz
push
scas
fxch
inc
lock
nop
mov
mov
lock
clc
push
mov
popa
mov
mov
cmpsb
sub
and
or
les
icebp
inc
sub
dec
aaa
adc
pop
cs
mov
data16
mov
std
xchg
sarb
lea
leave
inc
sbb
insl
cmp
xchg
pusha
fistps
mov
aas
hlt
adc
enter
and
pushl
adc
shll
dec
sti
cwtl
jo
test
dec
sub
jbe
mov
xor
inc
add
aam
xor
pop
ret
jmp
xor
es
push
inc
inc
mov
dec
adc
arpl
jns
stc
popa
or
sbb
test
into
mov
pop
cmp
xlat
rolb
xlat
dec
xor
add
push
clc
adc
mov
scas
adc
bound
cli
imul
mov
mov
mov
outsb
adc
cmp
jo
fldl
or
mov
push
jnp
and
mov
push
cmpsl
inc
inc
sahf
or
in
movsb
ret
pushf
adc
cmpsl
sub
or
push
jmp
xchg
int3
cmp
out
and
jle
mov
push
cmpsb
stos
sbbb
xor
cmp
ds
mov
lcall
push
roll
cmp
and
mov
mov
mov
add
rcrb
push
lds
imul
jne
sub
add
pop
jo
cmp
mov
mov
test
mov
cld
sub
push
outsl
cmc
mov
hlt
push
and
je
dec
jnp
mov
adc
mov
js
ljmp
ljmp
pop
mov
lcall
add
pusha
xlat
loop
test
les
cmp
mov
push
dec
inc
fnstsw
pop
xor
cmp
loope
or
retw
cmpsb
add
sub
adc
lock
jae
sahf
hlt
stos
hlt
xor
iret
mov
cmp
icebp
mov
cmpsb
subl
jbe
pop
cmpsl
mov
push
rcrb
das
cmpsb
in
fsubrl
xchg
xor
or
xor
xor
jns
cmp
push
nop
sbb
mov
xchg
mov
insb
in
inc
mov
xor
jno
lock
negb
mov
add
sbb
mov
hlt
das
fiaddl
inc
mov
stc
push
jb
or
jns
lea
cmp
push
push
jg
dec
ret
sbb
out
shlb
and
lods
pop
mov
mov
mov
mov
adc
aam
cmp
popa
cmp
jno
scas
or
imul
mov
add
loope
add
dec
push
xchg
or
loope
push
std
gs
push
or
jnp
jb
in
cmp
repnz
leave
loopne
rol
mov
or
and
dec
out
add
mov
sarb
das
jo
jp
sbb
mov
adc
ljmp
dec
and
pop
dec
mov
push
inc
dec
sbb
sbbb
outsl
loope
sbb
rorb
fmull
lds
jo
and
cmp
stos
pop
mov
or
xor
mov
add
pop
sar
inc
into
imull
or
cmp
stos
sbbb
push
lock
movsb
pop
lock
cwtl
mov
fmull
sub
xchg
les
or
mov
add
scas
xor
jmp
rclb
fildll
mov
mov
sbb
push
sbb
xlat
lret
cmp
jo
repz
xchg
cmp
cmc
std
or
xor
or
cmpl
mov
popa
stos
arpl
pop
lds
inc
dec
xor
cmp
jno
or
pop
mov
loop
fiadds
cmc
pop
loopne
adc
inc
xor
mov
das
arpl
mov
dec
sti
xchg
aaa
std
stos
or
leave
pop
push
push
dec
in
dec
or
jle
cli
ljmp
xor
add
xlat
stc
xor
sti
movsb
pop
rcrl
cwtl
inc
sbb
jl
push
cli
jo
mov
inc
add
mov
sbb
jbe
subb
loopne
js
repz
enter
fadds
mov
aad
mov
sub
and
push
mov
dec
sbbb
andb
push
xchg
cmc
xchg
and
xor
out
cli
subb
call
mov
dec
shll
les
imul
test
cmp
popa
test
rorb
or
xchg
pusha
loop
ljmp
lea
call
incl
jp
cwtl
jmp
lahf
mull
loopne
bnd
int3
in
aam
outsl
or
setle
sub
inc
test
sub
jge
xor
rol
mov
mov
jnp
and
andb
inc
sub
push
push
mov
cmc
lahf
jb
sub
pop
mov
sbb
outsb
ja
jmp
ds
iret
or
das
add
cs
pop
dec
ret
mov
popa
add
daa
inc
in
repnz
aaa
push
adc
scas
loop
gs
push
sub
xchg
xchg
bnd
mov
sbb
loopne
push
loope
jne
iret
sbb
clc
push
lret
adc
mov
sbb
sarl
xchg
jmp
push
push
push
psrlw
out
fmul
mov
jp
inc
mov
xlat
shll
inc
xor
loope
xchg
leave
rolb
add
mov
pop
jmp
sbb
add
out
roll
sbb
icebp
sub
popf
xchg
jbe
mov
ljmp
add
stos
pmuludq
xchg
bound
push
fs
and
ret
pop
mov
jecxz
inc
nop
sti
sbb
cld
mov
mov
dec
dec
xor
mov
adc
mov
push
cmp
pop
push
pop
test
sub
nop
mov
addr16
add
sbb
jecxz
pop
sti
mov
fcom
xchg
sahf
mov
daa
loope
fnsave
inc
loope
sub
fidivs
pop
icebp
mov
mov
punpcklbw
pop
fidivs
push
bound
repnz
inc
loopne
lds
fisubl
stos
push
mov
dec
out
inc
daa
call
mov
mov
jecxz
pushf
xchg
mulb
cld
inc
cmp
pop
inc
test
or
push
js
push
ret
and
movsl
xchg
push
mov
dec
mov
dec
xlat
and
push
sbb
mov
jmp
dec
call
push
mov
cli
push
and
jl
pop
cs
or
pushf
sub
push
push
push
cltd
mov
adc
in
inc
push
xchg
mov
push
outsb
cmp
mov
xor
and
mov
andb
cwtl
arpl
jge
mov
xchg
pop
fidivl
psrlq
aas
mov
mov
ljmp
jnp
jecxz
or
pop
dec
mov
ss
add
cmpsl
mov
xchg
xchg
neg
add
mov
imul
and
lret
daa
loope
roll
in
repnz
or
xor
lds
adc
jecxz
notb
shrb
add
cmc
xchg
ret
jbe
out
xor
xor
add
inc
xchg
push
inc
stos
pop
mov
inc
add
mov
dec
or
jecxz
cmpb
dec
aas
hlt
loope
mov
addr16
sub
jp
push
repnz
das
inc
mov
mov
adc
xchg
into
scas
sub
sti
inc
or
mov
movsl
loop
add
mov
pusha
add
mov
jb
nop
icebp
xor
add
mov
test
jb
loopne
sbb
not
stos
gs
mov
mov
scas
mov
push
insl
add
adc
inc
add
xchg
lcall
push
inc
push
mov
cs
inc
ja
int
jge
and
push
cmp
or
dec
or
in
or
pusha
or
ss
push
xchg
mov
daa
mov
les
lods
cmpsb
loope
xor
je
dec
jnp
je
jl
cli
inc
xchg
cmp
cmp
fnstcw
dec
out
jbe
jge
mov
rol
mov
mov
xor
dec
jmp
xor
or
mov
je
xchg
outsb
mov
ret
das
adc
out
dec
ror
stos
decl
push
aaa
and
fimuls
jg
cmp
mov
rcl
add
push
cli
add
test
inc
lret
cli
xor
lds
orb
das
shlb
rorb
cmp
fmull
fs
adc
mov
and
xor
inc
pop
add
push
sbb
push
mov
xchg
out
subl
scas
push
loop
pushf
sub
lahf
shrl
pop
call
or
dec
mov
jo
lock
add
mov
xchg
cmp
cmpl
ret
mov
pop
sbb
aaa
push
xchg
or
fsts
pop
and
mov
into
mov
jge
jmp
sub
mov
fcmovb
add
cmp
lods
add
push
in
cmpsl
jnp
cmp
adcb
pop
mov
enter
adc
fldcw
push
aas
pop
add
insl
leave
lea
pushf
push
dec
pop
xor
ret
repz
rorb
pop
inc
mov
lcall
xor
test
xchg
stos
int3
jbe
xchg
lahf
dec
enter
sub
inc
and
dec
pushf
das
mov
dec
movsb
test
pushl
dec
in
ja
popf
rol
mov
pop
sub
inc
mov
sbb
sbb
pop
add
in
lds
ss
or
fildl
in
mov
push
dec
movsl
outsb
pop
call
das
jle
pop
jbe
in
mov
jmp
mov
in
cmp
pusha
out
xchg
shlb
rcrb
rolb
dec
aas
add
lods
mov
bound
and
push
mov
dec
jne
lods
stos
pusha
cmp
cmc
ss
addb
adc
push
xor
sub
xor
xor
push
add
fildll
test
fldl
lock
ljmp
pop
sbb
aas
mov
mov
addr16
lret
adc
out
inc
push
xor
inc
test
dec
repz
inc
adc
mov
adc
add
adc
je
and
push
std
subb
xchg
adc
lea
mov
popa
inc
outsb
out
sahf
xchg
in
inc
test
push
mov
int
je
inc
or
sbb
mov
lods
and
and
aad
fcmovu
xor
cmp
mov
ret
mov
push
clc
push
iret
pusha
aad
imul
mov
cltd
dec
mov
mov
push
or
push
je
jb
call
iret
dec
jg
nop
pop
icebp
lock
sbb
jl
lret
popf
cwtl
inc
pop
xchg
pop
loopne
adc
add
push
imulb
scas
je
ret
test
jg
push
xor
ljmp
mov
xor
call
mov
loopne
fadd
stos
xchg
rcrl
adc
sub
pop
sti
lods
cmp
out
mov
rorb
or
andl
and
aad
fildl
pop
es
mov
cmp
test
adc
dec
mov
fstl
lret
repnz
sahf
and
js
insb
rcrb
pop
in
push
cmp
iret
add
std
in
jge
in
bound
jecxz
sbb
add
xchg
add
xor
lret
movsl
lret
mov
arpl
push
push
and
xchg
ljmp
jns
push
push
stos
xor
push
filds
cli
pop
adc
outsl
mov
or
subb
xlat
sub
mov
scas
dec
adc
in
je
ret
xor
add
int
stos
or
enter
pushf
clc
test
call
dec
mov
jecxz
mov
or
jns
mov
xchg
xor
in
xchg
in
push
pushf
mov
or
lcall
xchg
mov
dec
xchg
jns
mov
cs
adc
inc
mov
data16
cmp
loop
pop
inc
dec
jns
jae
dec
jns
fsubr
pop
iret
mov
sbb
fistpl
xchg
and
and
cmp
pop
lods
dec
movl
and
mov
out
mov
enter
push
sub
inc
sbb
sbb
jmp
outsb
dec
sbb
push
sub
add
test
adc
jge
mov
mov
test
addr16
pop
xlat
pop
xchg
or
xor
call
loope
xor
mov
jno
mov
mov
and
or
mov
or
or
cli
and
dec
mov
outsb
mov
jge
ja
repz
mov
or
vpcmpeqb
add
in
add
or
adcb
sub
cmp
mov
inc
mov
jnp
push
sub
dec
mov
sbb
jmp
mov
aam
movsl
inc
mov
cwtl
mov
add
or
mov
add
cmpb
movsl
in
push
fxam
sub
insl
imul
xor
push
adc
test
cmpsb
pop
add
mov
inc
push
inc
mov
add
out
mov
or
or
cli
out
js
lods
setae
jnp
or
ret
sub
xorl
add
in
or
push
jns
out
rcll
dec
addb
xchg
jnp
imul
xor
mov
es
mov
xchg
push
mov
xor
inc
pusha
and
xchg
adc
sub
ja
lret
fnstsw
add
xor
mov
jmp
fs
jmp
dec
or
sbb
sbb
data16
clc
xor
cwtl
jns
sub
shll
inc
js
repz
mov
and
std
push
pop
add
pop
jecxz
clc
sbb
popa
hlt
into
sub
pop
jl
adc
test
call
xchg
adc
popl
jl
in
add
mov
xor
xchg
xor
icebp
icebp
push
mov
in
pop
popa
mov
shl
popf
fisubrs
loopne
pusha
bound
sub
js
pop
jb
insl
leave
loopne
push
mov
sbb
sbbl
clc
cmp
dec
addb
or
filds
cmp
stos
inc
pop
and
or
mov
mov
inc
insl
adc
pop
mov
inc
and
or
xor
jbe
pushf
cmc
ljmp
loop
test
pop
or
jmp
loop
movsl
or
mov
xchg
sbb
int
mov
les
inc
addr16
lret
sbb
pop
std
xor
movsb
mov
fwait
sahf
add
push
jl
adc
sbb
mov
jl
xchg
jae
mov
fwait
add
mov
popf
mov
xor
lret
loope
xchg
add
iret
and
cwtl
cmp
jbe
cmp
and
ret
mov
adcl
xchg
mov
add
mov
xchg
add
pusha
mov
lock
stc
sbb
aaa
mov
or
jne
push
andl
mov
mov
movsl
ljmp
adc
inc
add
mov
jne
mov
in
sbb
cltd
mov
adc
outsb
lea
and
push
adc
or
addr16
aam
add
push
inc
in
sbb
and
pop
in
pop
push
sbb
or
mov
pop
shl
jmp
fsubs
data16
xchg
movsl
jg
test
repnz
and
mov
in
add
dec
or
add
xor
loopne
clc
or
pop
cli
or
or
out
or
sbb
add
mov
lods
mov
test
pop
in
pop
push
push
cmc
mov
andb
xor
ret
push
push
sbb
add
cmp
aad
xor
xor
jge
mov
inc
fdivrs
xchg
movsl
mov
ss
jp
xlat
out
mov
sbb
xor
lock
inc
hlt
mov
sbbl
fcompl
dec
pop
incl
xchg
pop
sahf
inc
cld
popa
les
test
mov
aas
mov
add
xchg
aaa
cmpsb
in
orb
mov
xchg
xchg
inc
mov
jno
popa
cmp
xchg
movsl
pop
lods
imull
loope
mov
adc
xchg
jo
mov
addl
nop
and
sbb
test
hlt
mov
sub
pop
sarl
scas
or
ljmp
ret
inc
outsl
jmp
fnstsw
or
cmc
or
mov
inc
sbb
add
arpl
jno
pop
fmulp
dec
std
test
and
inc
jecxz
xchg
push
enterw
fimull
mov
sub
xchg
and
dec
jb
imul
dec
out
sub
mov
xchg
insb
sarb
stos
rolb
fsubrl
xchg
aaa
push
imul
inc
xlat
das
incl
sub
stos
inc
in
jl
lret
cmpsl
mov
or
rol
pop
inc
and
sbb
mov
jbe
push
daa
scas
loopne
lods
xor
test
inc
dec
and
sbbl
inc
xor
and
mov
xchg
and
pop
mov
add
push
pop
sti
mov
test
cmpb
js
mov
pop
call
or
das
xor
or
js
xchg
and
sbb
jne
daa
mov
add
mov
xor
outsl
movsl
mov
and
bound
inc
sbb
jne
lea
fsubr
xor
xchg
aas
sbb
add
incl
cmpsb
arpl
daa
xor
lods
sahf
lret
dec
mov
jg
push
popa
arpl
dec
or
add
lods
popf
xchg
dec
push
pop
pusha
loop
and
sub
cmc
pop
mov
xor
push
push
in
ss
icebp
sub
in
fisttps
call
cmp
inc
jns
inc
hlt
mov
mov
pop
clc
inc
mov
pop
daa
add
push
js
sub
inc
cli
sahf
mov
cs
ret
loope
repnz
movsb
xlat
pop
lret
xor
cld
mov
rorl
jg
cmp
cmp
icebp
loop
rcll
inc
hlt
rolb
out
clc
push
negl
testl
jae
push
mov
aad
fstpt
mov
nop
xchg
lock
add
test
push
inc
repnz
rcl
xor
cmpsl
push
xorl
and
jno
jnp
sbb
les
xor
dec
push
pop
adc
push
ja
lret
add
int3
jnp
mov
ret
add
fistpl
mov
lock
ss
push
mov
pop
xchg
ret
or
mov
mov
dec
mov
or
push
fdiv
fsubrs
jl
dec
ret
ss
push
lds
mov
sub
inc
dec
push
out
lret
mov
adc
loop
std
test
test
sti
and
mov
mov
sbb
stc
pop
xchg
rorl
stc
fadds
ret
xchg
inc
jae
cmp
adc
sbb
addb
pop
mov
sbb
push
das
popa
in
pop
mov
sbb
inc
gs
push
mov
sub
push
std
popa
nop
and
ret
cltd
dec
pop
sub
jmp
test
lock
hlt
jl
les
mov
cmp
dec
sbb
pop
inc
or
pushf
mov
xchg
test
scas
movsb
adc
loope
test
in
push
jl
pop
cmc
add
adc
fidivrs
push
pop
mov
xor
leave
or
sub
inc
gs
adc
adc
xchg
popa
jae
push
add
or
inc
jb
shll
or
mov
sbb
cs
std
mov
loop
sahf
movsb
js
arpl
mov
dec
enter
pop
mov
jecxz
call
lret
data16
pop
es
push
jbe
sbb
cs
aaa
push
push
add
xchg
pushf
inc
sub
fnstsw
push
xchg
adc
pop
jg
fisttps
xor
push
rdtsc
jo
jo
pusha
mov
add
mov
sbbl
mov
orl
mov
dec
inc
sub
adc
jle
movsb
cmp
sbb
mov
call
xor
loop
pop
push
adc
mov
pusha
and
add
nop
mov
movsl
cmp
cld
sub
ss
rcll
pop
fdivrl
aam
push
jle
shrb
inc
je
adc
les
mov
outsb
push
lds
call
inc
fsubrs
jae
add
sti
xchg
or
pop
sti
movb
sub
fcomps
mov
sub
push
xchg
je
xchg
add
mov
in
and
cld
inc
or
pop
aas
mov
shr
fwait
sbb
loopne
mov
movsl
jnp
cmp
out
push
dec
das
lahf
loope
cmp
sbb
add
sti
movsl
xchg
inc
mov
outsb
mov
mov
in
push
pop
cwtl
mov
xor
and
xchg
cmp
pop
mov
aaa
test
jbe
push
mov
inc
add
sub
ret
sbb
jo
push
push
add
out
push
rcrl
repz
test
scas
stos
xorl
fwait
cltd
and
lds
js
std
or
icebp
jle
or
inc
xchg
xchg
fpatan
mov
aaa
lahf
call
outsl
test
scas
cmpsb
pop
int
mov
js
dec
test
mov
sub
xor
hlt
les
stos
repz
fildll
mov
jmp
inc
out
ja
mov
lods
jp
sub
loopne,pt
imul
std
push
int3
inc
jl
lea
arpl
sub
rcrb
fucomi
es
aas
add
add
loopne,pt
adc
push
repnz
pushf
rolb
inc
sbb
sub
and
popf
les
pop
sbb
push
jae
sub
mov
imul
nop
stos
xor
cmp
outsl
in
cmc
int
arpl
or
jge
sbbl
sbb
sbb
pop
push
xlat
mov
mov
sub
loop
cs
int
pop
lods
sub
add
popf
fsts
add
rcrl
adc
mov
cmp
or
add
pop
mov
sub
mov
sahf
mov
mov
rorb
pop
jmp
inc
or
mov
push
inc
aam
push
pusha
xchg
push
jp
jne
orl
icebp
jl
and
sbb
xor
jp
sub
lea
push
and
mov
inc
mov
out
or
and
pop
xchg
dec
mov
lea
cmpsl
cmp
push
test
jbe
adc
popa
das
sbb
or
fs
mov
cmpb
or
xchg
push
mov
shrb
adc
sbb
cli
daa
inc
dec
loope
lahf
sbb
outsb
and
in
insb
sbb
popf
or
aam
fidivrs
in
adc
mov
and
jne
and
lods
cmp
shll
inc
insl
add
ds
mov
cs
loope
pop
cmp
xchg
ret
cli
dec
ret
jo
fnstsw
js
inc
test
sub
andb
out
xor
jns
orl
mov
daa
mov
add
mov
test
add
iret
mulb
es
sbbb
dec
mov
ds
adc
dec
daa
sbb
adc
pop
rorb
lods
sub
jecxz
sub
les
scas
mov
cmp
mov
popf
pop
push
add
ret
paddb
fistpll
scas
push
push
add
jl
mov
cmpsb
jbe
fcomi
gs
adc
pusha
xchg
adc
adc
lods
lret
test
mull
pop
xor
xchg
mov
and
mov
add
sbb
inc
movsb
mov
adc
push
lret
adc
scas
stos
ret
jecxz
and
rcrb
inc
add
mov
loopne
sub
push
outsl
into
push
jg
shlb
jmp
xor
pop
jl
ror
cltd
sub
jecxz
test
popf
testb
imull
add
cvtpi2ps
aas
and
das
mov
push
pop
int
jecxz
aaa
mov
cmp
clc
inc
sbb
or
mov
pushf
add
cwtl
add
push
sbbb
mulb
stos
and
push
cmp
push
dec
inc
or
cli
mov
hlt
hlt
pop
pop
jp
adc
or
out
daa
hlt
rcrl
push
add
mov
add
push
shl
inc
aad
hlt
sbb
arpl
aad
add
sub
cmp
inc
adc
or
xchg
fdivrs
fcmovnb
mov
cmp
xchg
ss
scas
mov
xchg
mov
cmp
loopne
mov
icebp
repnz
cli
and
xchg
lret
mov
dec
mov
or
mov
movsb
mov
push
cmp
rcrb
and
cld
xor
jmp
jbe
jne
fnsave
sbb
out
pop
ret
mov
adc
adc
sub
pusha
sti
test
inc
sub
push
dec
outsl
sbb
mov
sub
jne
dec
shll
sub
cwtl
push
xchg
fmull
pop
stos
push
bound
cmp
mov
pop
not
pop
mov
dec
dec
sub
data16
in
pusha
mov
call
arpl
and
and
std
add
cli
add
outsl
cli
mov
and
cmp
rclb
cmp
jl
enter
lea
hlt
mov
adc
rcrl
lea
jns
mov
dec
lcall
iret
add
push
and
lret
or
dec
rcl
and
and
clc
push
daa
ljmp
mov
test
sarb
xchg
aad
push
mov
roll
mov
daa
and
mov
rcll
pop
outsb
mov
mov
push
and
data16
fiaddl
sub
add
insl
add
loop
out
mov
pop
arpl
sub
into
lock
or
sub
insb
jb
lea
aas
mov
add
stos
cmpsb
or
push
add
or
lock
lahf
les
sbb
or
das
dec
sub
decl
inc
mov
testb
int3
clc
dec
out
xchg
mov
bound
aam
mov
mov
fsts
insl
sbb
add
or
leave
dec
int3
push
jns
pop
mov
aad
fsubl
and
or
ss
xorb
ret
js
and
lcall
cld
cmpsb
sbbl
mov
jp
push
fldenv
shrl
test
mov
daa
mov
sub
shll
ucomiss
aas
xor
cmp
sub
loope
shlb
dec
and
jp
sub
xor
push
lods
xchg
inc
sbb
sti
mov
stos
ret
mov
je
loop
rclb
mov
arpl
sbb
lea
push
inc
mov
roll
pop
loop
sar
cltd
push
ret
and
inc
cltd
pop
jcxz
rcrb
xor
mov
and
hlt
pop
mov
sub
cld
mov
lds
cmp
fstpt
jl
mov
pop
mov
inc
push
mov
sub
xchg
fists
leave
scas
push
inc
push
xchg
and
imul
push
les
enter
push
rorb
in
xchg
sub
enter
fdiv
addb
pop
sub
arpl
int
aam
and
add
cmpsl
fisttps
sti
in
inc
push
fadd
adc
es
xchg
add
xchg
insl
xor
mov
ss
inc
pop
adc
inc
out
mov
movl
jno
icebp
rcll
adc
dec
pusha
sub
xchg
pop
cli
pop
cld
cmp
dec
inc
js
into
dec
mov
out
rcll
push
sub
rorl
push
test
and
mov
rorl
inc
outsb
xchg
inc
nop
xor
je
cli
ss
mov
or
push
xor
xor
rolb
stos
movl
pop
daa
xchg
adc
cmpb
ret
std
ret
pusha
pushf
jns
mov
addr16
ds
hlt
and
jae
dec
push
dec
jne
push
pop
and
fdivl
addb
jno
mov
or
je
fisubs
add
push
jl
dec
rcl
inc
das
cmc
jecxz
decl
dec
lret
stc
sub
pop
test
daa
lds
push
push
pop
push
lss
adc
lock
adc
xor
xchg
iret
or
dec
cmp
adc
fistps
test
add
push
pop
cmp
jno
enter
jnp
shlb
and
int
lock
lock
js
mov
pop
mov
pop
movsb
imul
jnp
loop
inc
sbb
fnstenv
pop
and
or
cwtl
fst
xchg
inc
sarl
push
bnd
pop
mov
or
inc
popa
dec
dec
push
rorl
pusha
and
pop
push
cmp
jbe
nop
stos
mov
mov
sbb
imul
movsl
push
mov
fwait
xorb
cmp
add
out
daa
jnp
in
loope
mov
das
sar
add
adc
dec
inc
adc
jp
repnz
clc
xchg
rcrb
adcb
pop
movsb
or
jg
xchg
jg
test
xchg
jne
mov
sbb
clc
or
and
fcmovu
pop
push
insl
push
imul
push
fsubrp
int
pop
fcoml
cmc
loop
or
rorb
loope
inc
aam
pop
cs
stc
push
add
sub
rclb
sbbb
sbb
subb
out
mov
pop
out
xchg
clc
push
mulb
push
int3
push
jno
push
jmp
cli
pop
aaa
push
fadds
jnp
cli
mov
xchg
test
push
pop
mov
out
mov
sbb
inc
and
dec
cli
jl
mov
subb
sbb
cmc
adc
int3
ret
cli
xchg
dec
mov
lock
int3
sub
rcl
mov
shl
cmp
mov
rolb
sub
rcl
daa
add
xor
scas
mov
lds
insb
push
mov
mov
out
add
dec
mov
loope
nop
mov
repnz
mov
or
jo
out
cs
dec
dec
fcomip
sbb
add
repnz
mov
or
adc
push
inc
fsubrs
sbb
loopne
or
stos
mov
or
cmc
test
lods
xchg
adc
pop
push
push
popf
and
sub
or
cmp
cwtl
cmp
xchg
rorl
cmp
mov
xchg
sub
ljmp
and
push
enter
inc
jno
sbb
pop
inc
push
sbb
repnz
inc
pop
ret
rcrb
mov
loope
dec
icebp
fxch
shrl
loopne
nop
mov
mov
rcl
sub
insl
popa
lds
or
fnstenv
pop
cmp
push
pop
pop
popf
sub
call
testl
cmp
pop
aam
xlat
cwtl
out
pop
data16
cmp
mov
mov
xchg
jg
mov
icebp
cmp
lock
pop
adc
pop
in
jo
push
mov
popa
das
je
pop
ret
push
mulb
icebp
dec
sbb
aad
add
fsubr
rcrl
pop
cmpsl
sarl
jp
mov
fisttpll
popf
sub
les
or
loope
push
pop
fsts
movb
or
jo
fdivrl
xor
andl
cli
mov
or
add
pop
faddl
or
clc
out
xor
add
dec
outsl
pop
xchg
jo
push
fisubl
jl
ja
and
nop
pop
pop
mov
ror
sbb
mov
and
sub
mov
or
push
jmp
adc
add
push
bound
xchg
shl
mov
cs
lret
and
ja
add
sub
push
sub
mov
lock
xor
es
or
js
lods
push
cwtl
inc
in
mov
mov
pop
cmc
push
ret
popf
pop
mov
icebp
xor
mov
or
add
mov
sar
sub
and
or
mov
push
cmp
inc
cmp
mov
loope
inc
hlt
outsb
js
out
pop
push
movsl
mov
dec
adc
dec
push
test
out
sbb
mov
out
ss
insb
pop
adc
paddsb
and
xchg
jo
pop
and
xchg
lock
test
xor
aaa
clc
ds
xor
adc
pop
das
lock
push
inc
scas
call
movsl
test
mov
sub
and
pop
aas
pop
jge
sahf
pop
fxch
lret
pop
mov
push
xchg
decb
into
fstpl
in
shl
xor
stos
sbb
stos
incb
push
imul
and
mov
cwtl
cmp
add
jns
lock
xchg
cli
rcrl
xorb
rolb
mov
lea
hlt
pop
cmp
add
xorb
lret
mov
lea
imul
inc
mov
adc
mov
xchg
mov
repz
bound
xchg
add
xchg
mov
pop
roll
je
adc
leave
or
and
jb
lods
lock
pop
xchg
jmp
mov
loopne
and
or
or
bound
sbb
int
inc
les
rolb
and
mov
das
cmp
push
adc
sbb
stos
iret
add
in
or
icebp
nop
sbb
cwtl
xlat
xorl
rcrl
and
jns
cmpsl
mov
fstpl
jae
mov
or
sbb
and
shlb
stos
addr16
jge
jl
or
mov
mov
test
aad
xchg
jp
lahf
mov
mov
ret
push
or
sbb
test
fwait
fwait
int
xchg
cwtl
test
add
inc
mov
hlt
cld
or
ficompl
push
ja
out
pop
adc
cmpsl
hlt
inc
jg
iret
outsb
xor
xchg
push
mov
clc
xchg
inc
sub
inc
fmull
rclb
or
cltd
mov
lret
mov
dec
popf
mov
aam
pop
sbb
sarb
outsb
push
cmp
test
dec
cmp
js
dec
fwait
jo
push
inc
sub
xor
mov
inc
inc
sub
sub
ret
aaa
mov
jg
pop
mov
or
fwait
jmp
push
xlat
inc
mov
adc
popa
outsb
adc
pusha
jecxz
clc
jecxz
mov
and
jle
sub
sub
ljmp
fcoms
inc
into
scas
xchg
mov
out
jmp
push
push
sub
aad
mov
inc
jecxz
adc
fdivrl
push
or
xorb
add
mov
lahf
scas
mov
sub
sub
mov
or
mov
shrl
cld
jmp
sbb
adc
pusha
jne
push
jg
rclb
mov
ljmp
inc
loope
lret
or
clc
orb
les
fs
and
add
fwait
ret
in
jmp
std
cmp
insb
ja
pop
jmp
cmp
pop
loop
sbb
or
loopne
dec
push
pop
ret
repz
mov
inc
cld
fmulp
clc
push
bound
movsl
mov
cwtl
icebp
mov
mov
les
div
or
mov
scas
sbb
pop
jl
push
and
or
mov
push
mov
jl
lahf
insb
pop
leave
les
sbb
ds
out
adc
or
aad
and
ret
dec
fdivrl
push
int
movsb
leave
aas
lock
mov
dec
push
push
xchg
mov
pop
out
inc
andl
xchg
jne
jno
inc
aas
in
mov
push
push
pop
pop
jg
jp
mov
fisubs
das
or
ret
cmp
repz
rcrb
dec
push
push
or
push
push
sub
clc
and
sub
xor
out
xchg
jle
out
lret
inc
adc
xor
add
testb
imul
and
cmpsb
or
jmp
inc
orb
or
rolb
xor
clc
arpl
loop
mov
and
fwait
js
push
jle
out
test
dec
mov
add
in
aam
adc
pop
push
lcall
imul
xchg
mov
adcb
jnp
mov
incb
ds
add
test
push
xor
mov
adc
mov
out
add
lcall
repz
push
in
push
inc
movsb
push
mov
aaa
sbb
lahf
sbb
jno
cwtl
xchg
daa
jle
pop
and
or
sti
inc
pop
xchg
push
movsl
mov
pop
frstor
in
add
rcr
fcoms
cs
inc
push
add
push
popf
inc
mov
dec
jnp
test
jns
push
rorb
int
fwait
jae
je
shll
xor
sbb
ljmp
sbb
cmc
and
ficomps
jmp
jnp
and
mov
aaa
pop
and
jbe
and
call
jne
pusha
lock
or
xor
idivl
and
sbb
push
js
call
lods
popa
call
add
shr
inc
pop
outsl
loop
inc
adc
pop
pop
adc
mov
test
cmpsl
and
les
ret
mov
push
mov
or
nop
or
jmp
mov
int3
and
sarl
jb
insb
sub
outsb
mov
push
icebp
out
adc
pop
test
xor
imul
xchg
ret
xchg
and
jbe
addr16
dec
add
data16
cmpsl
addr16
jle
mov
or
in
pop
mov
pusha
loope
fdivs
clc
aam
cmp
test
xlat
mov
jl
push
adc
notb
bound
pop
and
clc
das
adc
pop
push
test
xchg
popf
arpl
or
xor
test
in
add
js
and
faddl
adc
mov
inc
dec
pop
fprem
loop
daa
add
hlt
rcpps
mov
lcall
adc
rep
add
cmp
lock
and
push
stos
fimuls
das
sbb
inc
int3
dec
arpl
ret
cmpb
inc
loopne
sbb
outsb
xor
data16
shll
sub
mov
mov
lcall
xchg
mov
lock
or
pusha
in
pop
fsub
adc
bound
push
dec
push
or
icebp
int3
inc
lods
sbb
lcall
pop
pop
dec
adc
add
cmp
lods
adc
aad
jne
sbb
add
dec
mov
xchg
cld
ret
jge
fidivrl
mov
mov
stc
adc
enter
xchg
stos
add
adc
ficompl
pop
cld
aas
cmp
inc
jg
mov
out
orl
cmc
jg
adc
mov
and
mov
insb
mov
rolb
jg
mov
sbb
out
push
mov
clc
inc
and
mov
push
sar
idivl
and
mov
fstpt
xchg
les
call
push
xorb
call
notb
addr16
pop
mov
push
xchg
cltd
or
je
sbb
mov
xchg
lret
inc
movsl
jg
arpl
out
sub
jp
adc
daa
mov
call
mov
adc
mov
jle
mov
inc
shl
loopne
push
sarb
adc
int
adc
push
mov
sbb
mov
xor
addr16
pop
ffree
sub
sbb
sbb
and
mov
push
aam
fnsave
inc
lahf
add
adc
pop
js
aas
nop
dec
testb
fistps
jne
add
dec
cs
test
sub
and
xchg
pusha
test
sbb
sbb
rcl
sbb
hlt
jp
cmp
lahf
push
sbb
decl
push
subl
add
filds
push
cmp
pushf
cmp
mov
int3
cmp
sbb
mov
out
in
xchg
stos
test
jns
adc
pop
ret
in
loopne,pn
outsl
aas
lahf
lret
sub
add
inc
nop
js
mov
add
sub
bound
rcll
ds
push
or
iret
movsb
pop
inc
add
and
test
push
sub
fsubrs
jbe
fwait
xor
xchg
scas
pusha
cmc
into
adc
dec
pushl
clc
or
xor
repz
pop
add
pop
cmpsl
mov
into
shrb
out
xchg
out
add
sub
mov
dec
je
jmp
pop
pop
popa
lods
mov
mov
pop
or
hlt
leave
cmp
and
push
stc
adc
sar
imul
fstpl
mov
loopne
push
and
inc
aas
pop
add
push
aam
stos
xchg
outsb
cmp
mov
mov
xlat
das
pop
mov
lcall
push
mov
cmpsb
xchg
push
xchg
mov
sub
gs
inc
mov
rorb
xchg
insl
xchg
jo
sub
subl
rorb
jp
sbb
push
out
loop
daa
jmp
or
pop
push
je
ret
dec
ljmp
mov
adc
cmc
fisttps
or
rclb
dec
mov
xchg
pop
je
aaa
lcall
sub
clc
pop
enter
sub
push
mov
sbb
mov
add
xchg
ret
pop
xor
scas
inc
dec
or
add
punpckhdq
sub
in
clc
mov
dec
mov
xor
cmovp
pop
nop
lea
sbb
xor
sub
sahf
pop
daa
icebp
and
sub
adc
test
inc
pop
or
lcall
sub
xchg
test
push
test
loop
mov
mov
insl
rolb
mov
and
aas
add
and
pop
nop
les
stc
cmp
outsl
adc
jl
cld
es
xchg
daa
mov
pusha
xor
hlt
ljmp
xor
fsubrs
dec
pop
dec
and
cwtl
and
out
imul
pop
sahf
sbb
loop
das
pop
leave
fdivrl
incl
sub
repnz
inc
sbb
xchg
in
mov
add
xchg
adc
inc
outsb
test
pop
frstor
addr16
pop
inc
mov
inc
mov
out
jae
cmp
pop
movsb
jle
mov
stc
mov
sub
shll
lock
sbb
push
ret
leave
sbb
mov
jne
push
call
and
add
sub
sbb
sub
sbb
orl
mov
mov
xor
fdivp
data16
pushf
fmul
push
loopne
cwtl
dec
in
call
lea
sbb
mov
mov
movsb
lahf
jg
mov
inc
and
add
inc
pop
pop
in
sub
cld
rcrl
and
loope
test
jmp
inc
enter
push
push
js
mov
or
fldl
or
add
aas
mov
add
int3
mov
or
sub
lods
cld
jg
iret
aam
lods
clc
pop
add
out
jle
or
lahf
adc
cmp
pushf
or
xchg
jb
adc
push
mov
call
sbb
jecxz
and
push
test
test
adc
ret
clc
test
dec
xchg
pop
mov
test
xchg
adc
pop
jle
jmp
fst
cltd
lock
sub
sub
cmp
nop
lock
jns
cmp
add
ret
sub
std
mov
pop
pop
ret
mov
arpl
xorl
xchg
aad
cmp
outsb
mov
insb
outsb
jo
rclb
or
push
fcom
addr16
sti
adc
xchg
repz
xor
bound
lret
les
mov
jmp
outsl
push
cwtl
idiv
cmpsb
xchg
pusha
imul
fildll
in
fists
add
jge
jne
mov
push
cld
jg
rcrb
aad
ret
mov
movsb
fcom
inc
mov
es
aaa
xchg
push
insl
stos
iret
loop
in
inc
test
adcb
mov
aam
aaa
pusha
arpl
xor
mov
or
rclb
rcll
xor
push
rol
mov
loopne
aam
hlt
inc
cmp
ljmp
mov
push
mov
add
cmp
pop
or
test
hlt
cli
gs
mov
shll
pop
aad
adc
xlat
inc
int
lret
addr16
add
xor
cmp
es
and
pushf
out
movsb
sbb
addr16
pop
cmp
ja
xor
dec
mov
jg
fists
aas
pop
addr16
inc
adc
inc
adc
cld
cmpsb
jnp
dec
outsb
sub
loop
push
ljmp
mov
ret
mov
sub
sub
inc
jecxz
mov
and
pop
cmpsl
cli
dec
jl
lds
mov
sub
fnstsw
pushf
subb
cld
or
sbb
pushf
adc
cmc
jb
sarl
mov
imul
call
mov
push
out
adc
enter
add
or
call
xor
cwtl
or
push
cltd
push
add
mov
shl
fldcw
js
fldl
sti
je
cmp
and
cmp
dec
mov
jbe
repz
rcrb
iret
rorb
dec
aad
xchg
rorl
cmp
dec
xchg
push
leave
pop
adc
pop
mov
mov
inc
in
ret
es
add
sub
das
xorl
sub
and
add
std
push
push
scas
xchg
movsl
pop
fadd
and
jge
jl
fsubrs
sti
and
add
fs
dec
sub
enter
cmpsl
xchg
mov
jl
or
loope
or
add
out
test
or
mov
jb
inc
sub
dec
es
sub
cltd
jge
pop
lret
stc
jne
or
test
push
and
rorb
mulb
cmp
push
cmpsb
jbe
xor
adc
fsub
aam
ret
jo
push
insl
das
and
pushf
sarb
cld
gs
sbb
cmp
push
mov
jbe
lock
pusha
pop
test
mov
stc
adc
icebp
int
sbb
push
dec
adc
push
iret
add
std
dec
sub
jbe
icebp
push
cwtl
aad
int
stos
inc
mov
imul
pop
iret
and
fiadds
stc
cmc
jle
aam
lods
sbb
push
xchg
pop
adc
jmp
cmp
jo
push
cmp
sub
sbb
test
hlt
jle
push
lds
scas
dec
inc
or
das
push
jnp
cld
push
add
add
scas
and
mov
sub
push
pop
mov
push
bound
in
jle
in
jg
xchg
testb
jecxz
idiv
mov
add
and
shll
rorl
xchg
add
dec
jge
test
daa
sbb
pop
pop
rolb
loope
aam
dec
nop
or
loop
xchg
loope
fsubrp
and
mov
mov
arpl
jp
inc
and
test
jbe
jb
rolb
dec
and
inc
sahf
mov
adc
cmp
sbb
add
mov
jne
dec
add
push
hlt
adc
xor
mov
aas
mov
inc
cmpsl
xchg
and
lcall
mov
inc
outsb
xor
mov
jmp
outsl
cmp
inc
call
xchg
hlt
and
push
mov
pop
fistpll
push
pushw
fwait
pop
jno
lods
inc
cmp
negb
clc
enter
das
sbb
cwtl
imul
dec
dec
fisubs
adc
movsb
pop
and
repnz
mov
xchg
cli
inc
inc
cmp
imul
dec
add
adc
out
call
adc
inc
pop
mov
andb
out
push
mov
adc
fiaddl
or
fsubrs
addb
xor
insb
sub
andb
icebp
xor
es
ret
aam
push
cmp
mov
inc
cmpsb
call
fs
xchg
sub
mov
push
cmc
data16
or
jmp
ficompl
fsubrl
jbe
mov
jo
push
out
xchg
ds
les
into
xchg
call
add
lcall
cmp
shl
push
dec
ud0
pop
mov
push
dec
mov
mov
repnz
cmpsb
jg
aam
add
sbb
pop
insl
test
sub
in
test
add
jae
fcom
idiv
add
mov
stc
or
push
jl
icebp
sub
mov
mov
or
mov
rcll
add
sub
insb
xorb
daa
xchg
sarb
adc
jmp
outsb
or
repz
adc
fldt
lcall
testb
loopne
call
adc
sbb
and
add
sbb
orb
jo
mov
andb
sbb
dec
xchg
icebp
xchg
lcall
cwtl
xchg
and
mov
rcrb
stos
dec
mov
jo
inc
repnz
ds
or
ljmp
aad
pop
std
or
jecxz
or
sub
cmp
and
xchg
cmp
jae
fstl
insb
lcall
jge
inc
lods
add
cmp
mov
in
dec
rcr
sub
sbb
add
dec
stos
leave
pop
mov
stc
cmpsb
xlat
ss
in
xchg
std
fdivrs
repz
and
popf
push
jb
shl
adc
pop
push
testl
cmpl
push
cmpsl
or
pusha
add
inc
inc
push
fsub
scas
shll
je
jb
jne
pop
hlt
cmpsb
dec
test
aad
xor
adc
xchg
sbbb
sbb
xorb
rcrl
add
inc
dec
pusha
je
mov
rcrl
sbb
add
push
and
dec
int
push
jae
dec
cmp
aam
aas
fisubrs
mov
rcr
pop
xor
dec
repz
push
add
clc
add
cmpsl
popa
std
pusha
push
vpsubq
daa
sbb
dec
push
cmp
push
xchg
roll
gs
pop
jmp
jae
fwait
sbb
or
cmp
add
xchg
insb
test
and
or
jae
push
add
and
mov
sarb
push
jle
ficoms
aam
fldt
imul
hlt
xchg
cmp
divb
adc
clc
cmp
pop
shl
xlat
subl
mov
sbb
clc
sbb
arpl
xchg
lahf
adc
mov
pop
andl
scas
int3
pop
orl
mov
lea
lret
xor
sub
adc
fwait
add
jmp
stos
ror
or
je
pop
bound
sbb
cli
pusha
mov
push
cs
ret
mov
cmp
jp
jle
daa
jb
push
add
push
es
shrl
xchg
or
jecxz
pop
sarb
xchg
adc
dec
push
les
or
xlat
push
imul
mov
lcall
inc
pushf
cmc
test
xchg
dec
xor
lock
in
adc
repnz
loopne
jnp
adc
arpl
and
xlat
shrb
sub
pop
rcr
ss
xchg
adc
sbb
cmp
push
ljmp
xchg
mov
or
test
cmp
inc
inc
lods
daa
mov
inc
and
dec
and
sub
jg
mov
nop
pop
or
push
and
test
adc
adc
mov
xor
mov
clc
cmpsb
push
push
shll
je
adc
cmpsl
pop
lcall
mov
lds
andb
sub
repnz
or
bound
into
mov
popa
pop
mov
adc
and
pop
push
shlb
add
and
cmp
sarb
dec
mov
dec
push
push
xchg
jb
push
movsl
fnstcw
or
repz
fisubl
ret
in
or
cmp
jecxz
call
xchg
les
lahf
mov
loope
rcrl
mov
push
mov
jnp
jnp
sbb
jbe
test
nop
popl
mov
push
dec
jmp
sub
loopne
mov
inc
pop
mov
popa
jecxz
daa
cltd
jle
add
xor
pop
rorl
mov
iret
imulb
aas
push
pop
fcoml
sbb
mov
sub
pop
vunpcklps
pop
or
dec
cmp
or
mov
mov
scas
sbb
addr16
cs
add
jmp
mov
pop
test
add
xchg
xlat
iret
cmp
das
mov
adc
pop
xor
lcall
xor
orl
cli
adc
and
pop
mov
cmpsb
and
sbb
xchg
adc
and
sbb
ficoml
and
mov
add
test
and
js
sbb
dec
sti
adc
adcl
pop
or
fucom
or
ds
dec
mov
scas
xchg
dec
push
jb
aam
xorb
adc
cmp
mov
adc
in
mov
push
insb
aaa
or
or
or
aaa
cli
test
fwait
xor
or
jp
or
aas
gs
mov
mov
aad
cmpsl
repz
daa
push
mov
dec
mov
lahf
ss
gs
or
orb
jle
movsb
lahf
xchg
mov
popa
inc
dec
mov
fstpl
sbb
push
imul
ret
cltd
pop
jg
aaa
les
mov
andb
adc
mov
sub
jae
pusha
mov
add
push
aas
in
mov
mov
lods
and
faddl
and
mov
push
gs
lock
lcall
xchg
pusha
push
mov
xchg
inc
dec
pop
or
dec
aas
or
ret
in
pop
test
mov
mov
loope
push
cmp
jle
imul
cltd
out
mov
adc
cmp
xchg
icebp
inc
loopne
and
mov
push
mov
cmp
fistps
xchg
leave
shl
adc
and
push
loope
pop
inc
out
in
pop
js
mov
test
cmp
iret
and
jb
inc
pop
imul
xchg
int
shll
push
test
je
pop
xchg
xchg
scas
or
movsl
das
lock
fs
dec
lret
push
fldcw
pop
xchg
cmp
mov
loopne
sub
and
xchg
loopne
inc
sbb
mov
cmp
jno
add
daa
jne
test
ljmp
pop
in
fdivrp
dec
cli
sub
rcll
cmpsb
in
cmpsb
jg
and
imul
aaa
jg
ret
cmp
dec
mov
enter
repz
loop
ds
or
inc
pop
loope
cmp
insl
push
addr16
xchg
mov
pushf
xor
js
icebp
cld
sub
push
inc
xchg
cs
leave
data16
pop
pop
insl
mov
int3
shlb
xchg
xor
notb
ljmp
aam
xchg
and
cmp
mov
xchg
movl
push
imul
mov
xor
js
xchg
jbe
daa
add
cmp
ljmp
aam
mov
test
xor
icebp
andl
mov
adc
push
or
sbb
inc
jmp
push
loopne
inc
aam
sbb
adc
push
jg
stc
cld
test
pushf
push
mov
lods
cmpsl
mov
sbb
testb
and
add
rolb
testl
stos
inc
push
adc
sub
adc
xor
push
imul
push
xor
mov
pop
lods
or
jge
popf
cwtl
test
loop
jl
jmp
pop
push
xchg
rcl
inc
std
dec
arpl
push
lret
pop
sub
scas
mov
test
xchg
notl
popa
repnz
push
lods
fdivrs
lods
aam
xor
mov
inc
jmp
gs
rcl
jge
lcall
push
or
fiaddl
repz
xor
dec
push
jne
shrb
inc
mov
cmp
add
sub
ljmp
sub
lahf
cmc
xchg
xchg
sub
shlb
in
adc
mov
cmp
cmp
insb
adc
mov
jns
cmp
xor
icebp
push
jmp
out
lock
mov
add
jbe
or
jge
mov
xchg
test
sub
push
cltd
or
loope
inc
and
imul
mov
cmp
sbb
cmpsb
xchg
adc
sahf
ret
mov
and
sub
lock
push
and
lods
shlb
mov
push
jle
jae
sar
je
dec
pop
clc
dec
cmp
dec
inc
jle
fcmove
clc
adc
loope
test
sbb
dec
dec
fmull
bound
fiadds
shr
jne
aas
mov
movsl
imul
sbb
add
mov
inc
push
xlat
sbb
imul
xlat
jge
in
sbb
xchg
or
and
pop
mov
scas
pop
dec
mov
js
push
mov
xor
lods
dec
aam
lcall
aaa
add
imul
int
push
jl
dec
fdivrl
testl
jg
xorl
jo
shll
outsb
and
ja
and
roll
push
cmp
pop
call
sahf
ret
push
clc
sarb
pop
cmpsb
jmp
sahf
xlat
and
pusha
ja
inc
sti
cmp
xchg
cmpsl
jecxz
add
in
gs
mov
adc
ss
sbbl
stc
stos
adc
and
sahf
or
or
je
push
sbb
dec
xchg
rorb
push
inc
xchg
out
insb
and
mov
mov
test
dec
mov
fildll
jp
ret
inc
clc
xlat
pop
jecxz
pushl
nop
lcallw
or
add
and
cmp
cmc
mov
dec
mov
cmp
adc
xchg
loope
out
repz
push
ds
lds
and
dec
loope
out
es
or
mov
in
jge
repnz
mov
push
adc
fucomp
stos
in
stos
loope
adc
push
cmpsl
add
arpl
lcall
cmp
adc
ret
adc
repnz
clc
popa
mov
out
enter
add
jge
add
shlb
fwait
loop
cltd
lds
sub
lcall
jmp
ret
or
mov
xchg
mov
popf
xlat
adc
jbe
mov
ja
rcl
icebp
cmp
or
icebp
xchg
test
mov
cmpsb
jns
jp
mov
mov
lcall
push
nop
js
jo
sahf
mov
out
int
or
rol
cmp
mov
test
adc
xorb
test
mov
pushf
jo
adc
movsl
fsubrl
or
dec
addl
cmpl
sbb
rcrb
shl
inc
inc
repnz
and
idivl
adc
jno
pop
lahf
jno
push
adc
sub
test
or
mov
push
lock
xlat
sub
out
adc
dec
jg
sahf
les
and
and
lock
jmp
jmp
and
fcmovbe
fs
aad
pusha
inc
mov
cmpsl
adc
xlat
rcrl
xchg
pop
out
mov
and
add
enter
clc
aaa
dec
mov
rcrl
scas
in
and
jmp
cmp
dec
mov
lea
test
xorl
cli
subb
sbb
ficoml
sub
stos
popa
jae
dec
add
es
mov
cmpsl
mov
jbe
jb
push
mov
jle
jbe
jmp
in
or
sub
adcb
inc
sub
fwait
pop
dec
or
push
push
sbbl
dec
rcrl
mov
push
shll
jno
shr
test
inc
lds
xchg
xor
call
loope
pusha
test
cs
movsl
dec
lds
ljmp
scas
or
clc
xchg
sbb
popa
xchg
lds
adc
dec
jne
push
pop
fisttps
fisubl
add
adc
mov
shlb
cmpsb
jo
adc
shl
cld
pushf
fucom
imul
loopne
mov
ss
cwtl
sub
dec
sbb
fisttpll
insb
or
hlt
inc
push
jno
in
mov
movsl
add
aas
cmp
dec
inc
push
mov
lcall
jle
sbb
inc
inc
pop
hlt
out
mov
cmp
or
testl
and
aaa
fwait
je
int3
shlb
lcall
adc
decl
push
or
daa
cmp
jb
xchg
fsubp
add
or
jl
or
loope
imul
rolb
cmp
pop
pop
cmp
mov
cmp
jbe
pusha
shr
mov
mov
push
lds
lcall
add
rorb
mov
inc
aaa
mov
lods
mov
dec
roll
mov
add
jl
popa
daa
xor
jg
jne
lds
rol
fsubrs
push
arpl
pop
xor
scas
xchg
popw
shlb
or
mov
and
lcall
into
xchg
iret
dec
mov
adc
push
mov
iret
mov
test
fildl
or
mov
sahf
mov
mov
test
test
lcall
dec
stos
mov
loope
mov
sbb
fildll
inc
adcl
jo
sti
cmp
test
mov
das
inc
sbb
out
shrb
jno
mov
add
out
sub
cmp
decl
movsb
pop
je
add
adc
testl
imul
aam
fs
adc
inc
lods
jae
iret
fmuls
movsb
sbb
movsb
in
jmp
sbb
dec
cld
cli
mov
test
mov
or
push
clc
add
mov
popa
out
clc
adc
inc
addb
icebp
push
fstl
push
pop
in
rol
nop
or
dec
rol
xor
fwait
call
mov
mov
in
stos
lock
clc
inc
dec
nop
jecxz
push
pushf
dec
adc
sbb
xchg
ret
mov
les
xchg
xchg
mov
pop
inc
adc
jp
jns
or
das
mov
dec
popf
sti
add
inc
cwtl
jp
ret
inc
clc
lcall
xchg
cwtl
push
mov
enter
add
rcrb
call
imul
mov
lea
out
and
or
icebp
loopne
mov
insl
fnstcw
pop
sbbb
cli
mov
or
out
push
rclb
test
loop
sbb
pushf
push
leave
inc
push
push
cltd
and
jecxz
loop
cld
out
fcomps
mov
mov
dec
adc
push
std
pushf
push
sbb
mov
lock
add
loop
fcoml
pop
lock
or
push
push
xor
mov
pop
mov
out
mov
leave
inc
into
and
mov
ja
hlt
sub
cmp
mov
xchg
mov
aad
pop
fsubl
iret
fsubs
rcr
imul
add
adc
or
clc
insb
sub
insb
mov
push
dec
loop
jmp
dec
lea
cmp
dec
call
stos
pop
pop
mov
test
or
pop
mov
or
pop
fldl
popf
cwtl
and
adc
lahf
mov
xor
mov
sbb
lea
and
and
adc
dec
ja
mov
jno
mov
xor
lret
inc
xchg
mov
adc
aaa
pop
pop
ss
push
rolb
and
jl
adc
out
jp
sub
je,pt
jg
pop
mov
test
cli
cmc
loope
dec
and
cmpsl
dec
mov
orb
pop
mov
je
mov
or
push
fstps
sub
add
js
ficoml
gs
and
cmp
xchg
push
pop
and
dec
dec
jmp
cmpsl
mov
shrb
or
sbb
mov
push
add
mov
add
or
mov
xchg
mov
fiaddl
inc
leave
cmpsb
sbb
xchg
aam
xchg
outsl
stos
ss
aam
rcll
add
ficoml
mov
push
xchg
dec
jge
xchg
mov
sbb
jo
imul
pop
clc
rcll
pop
jle
test
cmp
inc
mov
push
mov
push
cld
ret
pusha
pop
sub
pop
inc
es
sahf
pop
in
jae
je
mov
loope
xchg
jle
test
mov
out
out
ror
sub
add
mov
loope
mov
enter
lret
and
jo
cmp
jb
dec
orl
sub
dec
lods
out
xor
adc
out
or
add
gs
inc
dec
push
test
out
and
or
dec
dec
xor
cld
orb
daa
mov
sbb
dec
movsl
movsb
int
test
mov
inc
mov
out
xchg
mulb
jge
fidivs
pop
or
imul
test
cmp
jge
push
jbe
adc
push
xor
std
sbb
push
jmp
nop
adc
lock
popf
adc
sbb
cmpsl
scas
sub
shl
ja
and
add
std
push
push
das
insb
loop
pop
push
call
dec
adc
pop
mov
sti
fidivrl
shr
shlb
pusha
fisubrs
ss
mov
or
lcall
jmp
lods
imul
cmpsl
mov
clc
ds
jecxz
pop
jo
test
cmpsb
mov
mov
popf
or
sbb
push
xlat
ret
pop
sub
cmc
lds
test
jp
sub
scas
arpl
pop
pop
mov
cmp
shrb
or
jno
xor
sbb
push
and
fsubrs
movsb
test
in
jle
outsb
subl
cmp
sbb
mov
or
pop
scas
repz
sbb
push
imul
or
in
sbb
mov
inc
lods
icebp
inc
pop
in
dec
inc
fildll
cld
je
ud0
inc
jl
iret
cmp
cld
js
mov
jns
ret
aad
clc
sub
and
dec
insb
fsubrl
push
loopne
js
ja
repz
push
pop
mov
mov
add
mov
cwtl
or
dec
xchg
and
and
je
mov
sub
mov
mov
jl
mov
sub
jo
cld
repnz
mov
lahf
orb
fildl
cli
mov
push
shrl
je
cmp
inc
sbb
add
loopne
sbb
lcall
mov
dec
mov
sbb
xorb
inc
mov
clc
roll
inc
rorl
mov
arpl
fs
inc
inc
mov
js
and
jbe
xlat
xchg
ds
or
sbb
cld
pop
je
pop
pop
sbb
pop
pop
pop
cmp
sbb
push
dec
mov
sbb
or
pop
add
insl
inc
pop
pop
cmpsb
hlt
shl
std
adc
cmp
jp
insl
add
out
mov
roll
inc
push
es
mov
dec
add
mov
rorl
in
stos
push
xchg
push
mov
and
clc
or
xchg
jnp
or
mov
scas
push
push
mov
lret
jbe
pop
sti
add
scas
in
jle
adcl
mov
inc
fcmovu
lods
mov
or
add
das
pop
mov
dec
mov
jo
jp
mov
mov
je
in
push
xchg
in
les
outsb
hlt
in
xchg
lcall
ljmp
loop
push
cli
loop
xchg
sar
int3
mov
mov
in
shll
sti
addb
jecxz
lss
je
cmpsl
rorl
popa
repnz
ret
mov
divl
icebp
cmp
xor
pop
xor
aas
push
adc
or
imul
and
test
mov
mov
pop
push
dec
push
dec
pop
cmp
mov
les
ret
loop
outsl
jg
rclb
je
shll
and
pop
subb
test
mov
divb
mov
pop
xlat
dec
je
lret
out
mov
outsb
cmpsb
popa
lock
mov
sub
jmp
fcoml
dec
aas
jmp
push
push
bound
lret
leave
daa
push
mov
add
rolb
ss
enter
push
mov
cmpsb
mov
pop
mov
jecxz
sub
pop
cli
sub
cs
jb
mov
mov
fs
xchg
imul
imul
lods
sub
cwtl
ljmp
sub
hlt
rorl
cmp
add
jl
stos
das
xchg
sub
xor
jle
and
push
mov
add
icebp
test
int
jl
cli
rcl
fsubrs
jo
test
pop
jns
mov
movsb
push
sbb
inc
push
loope
inc
pop
mov
inc
push
fisubs
and
fstl
mov
scas
repnz
mov
sub
rcr
mov
mov
stos
mov
sub
ss
das
in
movsb
and
cwtl
in
add
dec
xor
inc
and
pop
xor
int3
sarl
jb
sbb
popa
inc
adc
ficoml
pop
icebp
push
lods
pop
test
add
imul
xor
std
scas
add
pusha
shrl
push
add
test
xchg
push
or
fwait
rorb
cmp
fcmovbe
push
rorl
xchg
out
push
xor
shlb
shrl
mov
mov
icebp
xchg
or
lods
orb
sbb
mov
push
fcompl
cltd
dec
cmp
ljmp
fnsave
out
fcoml
pslld
das
out
andl
orl
cli
or
into
lahf
nop
push
push
fsubs
lcall
pop
jge
stos
data16
add
push
and
sbb
js
sahf
sbb
dec
pop
aad
dec
pusha
insb
fmull
ror
sahf
inc
sub
add
or
fsub
js
xchg
and
call
pop
pop
push
sub
loopne
jae
call
addr16
pop
pop
jnp
inc
arpl
jns
stc
mov
call
movsb
aaa
je
and
mov
add
inc
aas
scas
test
xor
test
adc
push
out
inc
pop
pop
cmpsl
mov
in
idiv
shrb
out
fcomp
jp
xchg
test
cmp
and
orb
ljmp
sub
movsl
jp
dec
add
mov
cmp
fidivl
pop
mov
and
lds
lock
outsl
pushf
vmaxsd
or
xorl
dec
or
mov
or
cmp
loop,pn
dec
lock
or
xchg
mov
xchg
jo
sbb
scas
imul
cmpsb
and
movsb
movsl
mov
test
mov
mov
cmpsb
imul
cmp
insl
dec
adc
subb
repnz
outsl
mul
adc
inc
cli
and
cmp
mov
daa
jbe
aam
outsb
fwait
stc
sub
aam
and
lods
pop
pop
add
xor
xor
pop
incl
subb
push
fnstcw
daa
mov
lods
lds
ret
roll
xchg
pop
and
rcrb
jp
dec
arpl
pop
push
or
rclb
hlt
fwait
roll
dec
cmc
mov
cmp
loop
insl
or
xchg
hlt
xchg
rcrl
inc
mov
pusha
or
or
sti
icebp
push
mov
pop
cwtl
jge
xchg
std
adc
dec
pop
or
push
icebp
pusha
lods
dec
xor
cmp
jno
inc
cld
jl
xchg
lock
or
cvtpi2ps
sahf
push
insb
inc
subl
je
inc
adc
mov
dec
lea
aam
js
or
ss
or
sti
mov
xchg
lock
xor
inc
jae
mov
insb
addr16
dec
in
mov
aam
or
mov
jne
cld
pop
mov
mov
jle
jg
mov
or
sbb
mov
leave
orb
mov
add
jmp
push
sahf
xchg
push
and
mov
dec
sub
xor
loopne
addb
ret
pop
adc
mov
dec
lods
fmuls
mov
mov
dec
jb
popf
push
dec
shll
xlat
fcmovnbe
push
xor
stos
enter
push
jp
mov
vmread
push
inc
mov
dec
xchg
scas
inc
lcall
fsubs
mov
sub
into
loopne
mov
dec
clc
cmpsb
nop
test
mov
addb
into
push
pop
pop
subb
mov
shlb
loope
shll
je
clc
and
or
ljmp
xor
lahf
or
das
sub
imul
movsb
mov
movsb
sbb
xor
fiaddl
cmpb
and
jo
mov
sub
pop
add
cmp
inc
roll
test
lds
sub
mov
sbb
test
roll
dec
mov
cltd
cwtl
std
outsb
lcall
loop
jno
push
cmc
pop
pop
daa
adc
out
ljmp
mov
lods
das
dec
js
arpl
mov
test
lcall
pop
loop
adc
sub
or
in
loop
cmp
loop
aad
mov
test
lret
stos
push
ret
sbb
pusha
mov
rcrb
hlt
or
andl
dec
data16
jp
fistpll
adc
fsubl
js
or
xor
sarl
xorb
enter
adc
imul
pop
loopne
and
mov
or
mov
cmp
inc
mov
sub
jg
adc
push
adc
ljmp
imul
sub
mov
and
outsb
ret
out
mov
pop
push
cmp
rclb
test
ss
mov
pop
dec
outsl
clc
adc
push
sbb
insb
fsubp
jge
adc
ficomps
xchg
xor
arpl
pop
lahf
das
pop
movsb
sti
decl
sbb
inc
ja
repnz
or
adc
sbb
jmp
test
cs
in
dec
cmpb
fcoml
and
cmpb
loope
ljmp
lods
rol
outsb
ljmp
and
fcomi
or
jp
enter
add
aas
hlt
inc
and
inc
cmpsb
int
jecxz
sti
xor
cmc
gs
call
insl
lods
or
jl
mov
jle
lods
fnstenv
or
sub
sub
push
lcall
lcall
pop
imul
int3
push
sbb
out
rorb
jnp
fwait
fs
movb
cmpsl
bound
and
add
mov
sub
sbb
scas
mov
jp
push
inc
xor
lods
fs
jmp
scas
inc
in
mov
inc
rcrl
stc
pusha
pop
or
cmp
jle
daa
leave
rcl
call
adc
jb
xor
lret
shlb
jp
pushf
pop
dec
adc
add
movsl
movsb
push
sarb
add
shll
les
enter
push
test
arpl
test
mov
mov
cmp
fcmovnb
sub
xchg
cld
imul
jg
aaa
sbbl
add
cmc
and
lahf
lcall
call
jmp
xor
pop
insl
jge
mov
mov
add
mov
and
adc
clc
sub
and
lds
push
incl
mov
cmp
ror
mov
je
jecxz
popa
cs
mov
scas
in
mov
lods
and
popf
lods
mov
push
cmpsb
loopne
aaa
popa
mov
sbb
adc
in
mov
addb
or
fs
sbb
xchg
fdivrl
dec
jnp
das
and
inc
ljmp
jo
lock
cmp
or
mov
test
xchg
jmp
call
push
push
xlat
imulb
sarb
adc
pop
pushf
cmp
hlt
lahf
stos
clc
data16
sub
sbb
adc
js
arpl
pop
icebp
xor
push
cli
scas
ss
test
test
popa
adc
sbb
jge
call
incl
cmp
fiaddl
mov
jo
lret
arpl
test
push
jp
cmp
test
sub
std
out
or
xchg
rol
and
xorb
shlb
rolb
add
incl
adc
sub
andl
out
sbb
repz
hlt
dec
inc
or
and
xor
stc
fldenv
outsb
xchg
inc
in
pop
inc
pop
in
or
adc
sub
sarl
pusha
rcll
mov
add
lcall
dec
rcrl
add
ret
loopne
ficomps
jl
lock
movsl
ror
int3
lods
das
loop
xchg
mov
repnz
scas
repnz
call
daa
fs
mov
fsubp
adc
push
push
xor
scas
or
cli
shlb
push
pop
and
or
xor
subb
fcmovb
sbb
lea
das
aaa
popf
leave
orl
lret
sub
mov
pop
scas
cmpsb
jne
mov
test
xchg
adc
push
pushf
lcall
subb
iret
cmp
or
outsl
sahf
jmp
jp
rolb
push
adc
call
add
loope
pop
cmc
lahf
jae
popf
cmc
pop
jmp
inc
pushf
insl
jp
or
clc
scas
mov
xchg
inc
cmp
cmc
xor
pop
cmc
mov
sub
or
or
mov
ret
cmp
adc
mov
sbb
xchg
nop
or
mov
mov
cmp
mov
je
out
mov
ds
jl
mov
dec
in
push
test
and
pusha
ret
sbb
es
inc
fisubl
adc
sbb
mov
mov
add
test
es
sub
push
xchg
fists
cld
cmp
push
cmpsb
mov
push
out
gs
rorb
push
sub
xor
mov
stos
cltd
in
in
sbb
sub
scas
xor
push
ss
dec
sarb
inc
fmull
xchg
xor
pop
hlt
fwait
es
out
adc
mov
jge
xor
hlt
inc
das
or
cmp
mov
xchg
and
or
nop
mov
shll
clc
and
xchg
or
jl
ljmp
in
or
ds
sub
test
ret
movsl
jo
js
or
xor
push
mov
and
mov
stos
fadd
shrb
sbbb
and
pop
orb
lds
arpl
xor
pop
das
jbe
add
rorl
sub
pop
xchg
add
mov
inc
sub
xchg
dec
sar
cmp
mov
loope
sub
xor
adc
loop
mov
cmovo
clc
addr16
mov
lahf
repnz
insb
stos
aam
pop
and
add
scas
jp
inc
mov
dec
mov
mov
adc
mov
or
adc
jb
imul
sbb
cmp
das
mov
and
mov
mov
add
mov
cli
daa
lea
add
ja
or
mov
cli
cmpsl
mov
test
mov
addr16
inc
aas
xchg
sbb
push
push
shrl
sbb
inc
jo
push
jns
mov
jmp
fstpl
outsl
adc
inc
adc
cmp
add
mov
or
imul
mov
movb
shlb
ljmp
jo
inc
fnstenv
mov
mov
jge
push
jb
xchg
or
mov
mov
inc
imull
dec
scas
pop
and
movsb
push
mov
cmp
pusha
jmp
push
mov
cmp
push
cwtl
adc
push
sbbb
mov
xor
mov
out
mov
push
in
aad
cmp
and
sub
pop
pop
sbb
dec
test
fnstsw
daa
xor
fucom
sbb
or
cmpsl
dec
in
xor
testb
test
ret
jle
add
aas
mov
mov
pop
jno
lret
loopne
inc
push
sbbb
fbstp
pushf
lods
emms
xchg
andl
inc
mov
cltd
add
inc
imul
pop
sbb
push
rcrl
call
mov
pop
jne
mov
mov
sub
sbb
js
insb
inc
cmp
idiv
ficomps
mov
js,pn
pop
sbb
push
sbb
ljmp
inc
daa
sbb
lods
adc
ja
mul
movsl
jp
adc
mov
push
icebp
xor
daa
inc
rorb
jnp
sbb
dec
add
scas
sahf
add
ja
jmp
roll
dec
rolb
sti
mov
pop
jle
into
outsl
fisubs
jo
or
orl
xor
das
divl
adc
outsl
add
mov
push
xchg
or
addr16
dec
sub
es
test
push
add
icebp
outsl
adc
leave
adc
sahf
xchg
fwait
pop
lods
inc
dec
cmp
hlt
jge
les
orl
jo
or
xor
and
fiaddl
sbb
xor
pop
mov
dec
clc
xchg
cmp
clc
fs
jmp
mov
stos
cltd
call
inc
jo
or
outsb
scas
ss
jl
femms
addl
imul
movsb
out
mov
lds
or
in
push
adc
adc
add
popf
rorb
sub
or
js
pop
in
cwtl
cmpsl
loope
and
int
cld
addr16
and
lock
dec
ds
mov
ret
cld
jp
sub
pop
mov
cmp
daa
js
mov
stos
push
dec
jmp
ret
inc
add
mov
add
mov
add
inc
add
adc
rcr
fldenv
push
push
push
mov
ret
lcall
add
add
jl
lock
sbb
jne
push
pop
es
mov
stc
and
adc
push
mov
fucomi
mov
xor
add
inc
add
mov
inc
cmp
push
loopne
movsl
mov
or
push
xor
dec
mov
jl
jg
call
mov
dec
add
dec
xor
popa
inc
mov
mov
outsb
aaa
xor
lock
inc
push
sbb
inc
shrb
jle
jmp
ljmp
push
adc
push
jp
cwtl
pop
push
jmp
dec
inc
dec
add
outsl
mov
ffreep
hlt
sub
cmp
xor
inc
push
jne
in
testb
xor
inc
dec
inc
jbe
je
movl
mov
inc
jno
inc
sub
aaa
push
add
push
dec
sbb
sub
push
cmpb
push
inc
ret
incl
inc
pushf
sub
add
or
fimull
jle
jae
cmp
mov
testl
add
divb
mov
push
lods
bound
sub
stc
jo
cld
xor
lea
push
call
loop
xor
outsl
dec
fwait
loope
pusha
je
bound
jns
mov
fisubrs
mov
mov
jmp
inc
dec
or
push
push
jnp
fmull
sub
pusha
fnstenv
fcoms
std
in
mov
pop
xor
ret
ss
cmp
dec
push
dec
cwtl
add
imul
cmp
outsb
push
addr16
mov
negl
add
test
js
clc
mov
push
fs
push
add
mov
ja
push
dec
jl
xor
imul
ss
les
dec
or
push
sbbb
test
stos
push
sahf
and
push
sub
imul
jo
inc
mov
leave
ljmp
fwait
loop
pop
into
add
push
inc
mov
inc
xor
xor
mov
mov
push
mov
fsub
inc
imul
fcomps
jne
cmpsb
push
xor
scas
loopne
lret
jl
cmp
cs
and
jb
push
inc
add
inc
mov
insb
ds
or
mov
fwait
cli
mov
push
cld
rol
out
sub
shl
je
fsub
rclb
arpl
cmpsb
pop
cmp
push
dec
inc
push
push
lods
ss
mov
ja
out
sub
dec
popa
imul
ja
and
mov
inc
pop
dec
xor
hlt
ljmp
mov
inc
shlb
stos
xor
inc
mov
std
fcompl
xor
je
arpl
decb
idiv
out
jmp
js
ljmp
enter
fdivrs
inc
xor
pop
cmp
xchg
shrl
mov
jne
pop
nop
xchg
imul
jae
jno
data16
inc
cli
push
cli
je
sub
push
add
dec
outsl
cmp
pop
fsubrl
push
roll
iret
sahf
arpl
ret
dec
cwtl
adc
ret
out
outsl
dec
int
addr16
jns
bound
cli
inc
sbb
outsb
jle
in
insl
addb
ret
and
dec
out
data16
lahf
xorps
inc
dec
mov
xor
scas
adc
inc
mov
imul
repnz
nop
xor
insb
jo
rclb
pusha
jge
das
in
mov
xor
inc
shrl
movsl
rolb
sub
fs
loopne
es
sbb
jmp
js
or
dec
mov
outsl
sbb
insl
mov
dec
cmp
cltd
loope
xchg
jp
data16
inc
sbb
test
add
xor
cwtl
mov
jbe
jp
lods
je
hlt
cmp
add
push
push
hlt
inc
pushf
xchg
loope
jne
mov
sarb
out
outsb
xor
lods
sub
fisubrs
lret
int3
loopne
dec
inc
dec
or
xor
inc
inc
jbe
rol
jle
add
inc
rorl
outsl
outsb
dec
inc
push
xor
insl
dec
ss
popa
pop
mov
clc
imul
mov
js
adc
jne
jo
dec
inc
mov
adc
loope
sub
adc
cmp
icebp
mov
push
fs
pop
or
inc
pushf
mov
in
loopne
push
fiadds
fiadds
js
shll
inc
mov
xchg
mov
lock
popf
adc
dec
in
loopne
sub
pop
mov
inc
jns
dec
out
push
dec
or
push
imul
add
rolb
ss
cmp
jbe
fdiv
lahf
jge
jno
push
xor
dec
cmpsb
lock
push
pushf
push
fidivrs
cmpsb
mov
add
inc
adc
stc
and
outsb
add
ret
sub
ss
in
inc
call
pop
jl
pop
js
outsb
data16
inc
test
subb
inc
jle
mov
loope
mov
ret
inc
into
pop
add
jb
outsb
dec
adc
ljmp
rclb
icebp
inc
cwtl
or
dec
push
dec
outsb
dec
dec
inc
push
shll
repnz
into
lcall
push
aas
add
push
mov
inc
xchg
sbb
ret
xor
sahf
call
or
xor
inc
popw
add
dec
add
sub
loopne
sub
dec
sbb
scas
add
mov
inc
insb
cmp
jecxz
pop
push
cmp
mov
xchg
mov
enter
popf
xchg
testb
js
fadds
sub
or
gs
int
sbb
dec
jo
out
or
dec
mov
outsb
pop
js
push
push
pop
sbb
push
mov
xor
mov
outsl
xor
add
jo
inc
pop
jno
mov
imul
popa
add
and
sti
mov
mov
iret
pop
std
ret
imul
adc
or
out
lret
cmp
jl
push
loopne
insl
mov
shrb
push
popa
lahf
inc
ja
xlat
mov
inc
ss
add
in
out
inc
fdivs
loopne
jo
add
add
push
test
dec
js
ja
test
push
inc
mov
push
clc
shll
jp
push
dec
add
clc
std
popf
jo
sahf
jae
xor
inc
stc
push
add
add
fsts
push
pop
out
outsl
fisubrs
xchg
pop
add
and
dec
or
test
imul
jmp
dec
movsb
mov
pop
inc
jle
adc
inc
je
jb
inc
push
into
and
outsl
jns
lds
mov
mov
dec
bound
into
cmc
mov
shlb
mov
mov
inc
lcall
jmp
sbb
imul
mov
xor
mov
pushf
stos
sub
sub
inc
dec
cmp
mov
adcl
inc
push
xchg
dec
jmp
push
loop
pop
mov
lcall
jle
outsl
bound
leave
sub
sub
data16
fisubl
push
jns
and
mov
push
dec
push
js
stos
jo
push
int
cmp
in
dec
push
push
mov
dec
pop
push
lea
inc
pushl
pop
stos
das
mov
outsl
xor
and
pop
icebp
dec
lea
xor
imul
sbb
mov
call
or
insb
mov
add
mov
clc
add
inc
push
ja
push
push
inc
lods
jae
adc
push
pop
push
adc
mov
jnp
xchg
dec
cmp
pop
pop
imul
mov
sub
dec
in
pop
mov
outsl
dec
cmp
push
mov
sub
pop
push
loope
lock
outsl
xor
bound
pand
pop
je
clc
rclb
js
mov
sub
xchg
pushw
sub
je
movsl
popa
cld
adc
push
sbb
cmp
push
inc
fisubs
lret
es
pop
in
push
jl
sbb
pop
pop
dec
imulb
push
inc
mov
or
mov
jb
adc
pusha
add
dec
sahf
bound
clc
xchg
ret
add
test
dec
add
inc
fisubl
ret
test
jno
mov
andl
test
mov
lock
lock
lods
fmull
and
jo
loope
popa
iret
int
jb
scas
dec
jb
inc
inc
xchg
dec
cld
insb
mov
dec
mov
push
call
adcb
push
push
xor
xchg
dec
enter
add
pop
inc
push
inc
xor
data16
rolb
data16
inc
xor
fsubr
or
addr16
inc
ret
loopne
adc
popa
hlt
push
inc
dec
dec
lods
sub
xor
pop
xor
xchg
jo
pop
mov
jo
sbb
inc
ljmp
lock
flds
dec
aam
mov
repz
jne
sub
jmp
ss
xor
stos
dec
mov
push
movsl
insb
pop
jo,pn
dec
rcrb
pop
mov
push
subl
std
ret
outsl
jo
cmp
xor
test
adc
push
pop
lcall
fadd
xor
mov
sbb
xchg
inc
inc
fsubrs
movsb
fucompp
pop
out
loope
push
inc
dec
ss
ss
dec
push
mov
sbb
repz
int
mov
adc
add
inc
xor
je
dec
inc
jb
xlat
pop
or
fadds
inc
cmp
jo
cmp
mov
sub
push
adc
arpl
dec
add
sbb
push
sbb
inc
mov
ret
cmp
push
jp
addr16
fiaddl
jecxz
inc
in
incl
dec
add
enter
lock
icebp
jmp
cmp
inc
or
test
dec
or
out
insl
dec
loopne
into
test
lods
outsl
adc
mov
inc
push
dec
dec
lods
ret
and
xchg
loop
inc
je
mov
jnp
inc
stc
cli
sub
aad
movsb
mov
cs
xor
insb
jp
ja
xor
fs
nop
and
mov
add
out
aad
ret
dec
dec
outsb
mov
jle
popf
dec
xchg
sub
mov
outsb
mov
jae
mov
push
out
dec
jno
push
pusha
sub
iret
mov
dec
inc
dec
lret
subl
pop
jle
call
push
xor
ret
push
jns
fcomp
and
scas
ficoms
insl
push
fmulp
lcall
dec
dec
jno
mov
mov
inc
mov
dec
dec
dec
mov
adc
hlt
jbe
jmp
push
cmpsl
into
out
dec
jae
jno
cli
or
cmc
mov
adc
and
test
dec
mov
das
sub
cmp
nop
mov
pop
sbb
inc
mov
cmp
test
xor
push
repz
pusha
add
dec
dec
xor
xor
ja
xor
mov
push
push
push
les
sbb
enter
push
into
inc
adc
cli
je
add
add
push
mulb
es
mov
adc
add
rcll
iret
lret
movb
ficompl
shl
cld
loop
xor
cmp
popf
sub
nop
inc
xchg
rorb
outsb
mov
jns
cmp
cs
jle
sub
inc
inc
fs
jge
mov
mov
xor
outsb
dec
out
mov
lock
cmpsb
ret
dec
xor
mov
pop
push
jecxz
in
insb
jae
jo
xor
mov
lods
mov
push
xchg
imul
push
scas
add
push
inc
ficoml
hlt
inc
pusha
pushl
jle
inc
decl
jne
or
inc
inc
dec
inc
paddd
jnp
mov
inc
negb
push
push
mov
out
ficomps
sub
enter
rcl
dec
sbb
stos
jo
imul
jb
inc
xor
out
lret
push
mov
lods
push
or
in
pop
pop
sbb
jmp
aam
js
inc
adc
inc
bound
lahf
mov
adc
push
jae
and
push
jne
fidivrs
jbe
imul
adc
push
call
pop
je
roll
ljmp
inc
xor
jb
clc
jo
lcall
dec
stos
cs
outsl
cmp
cmp
ja
inc
je
call
pushf
push
sbb
xchg
dec
mov
add
pop
mov
ja
js
pop
sub
leave
out
adc
frstor
imul
adc
inc
out
gs
xor
jns
inc
inc
shr
sbb
aam
pop
insb
dec
rol
clc
add
sub
ss
sbb
outsl
rcrb
or
aaa
mov
pop
insb
loopne
inc
dec
inc
ja
hlt
ret
enter
je
jb
arpl
inc
clc
push
jb
mov
imul
out
insb
enter
mov
jb
pop
psrlw
xchg
inc
iret
add
je
gs
inc
pop
js
push
or
dec
dec
and
fmull
andl
out
je
inc
xchg
inc
inc
jmp
stos
and
xchg
sarl
addr16
adc
outsb
addr16
cs
pop
insb
inc
jo
inc
pop
dec
rclb
push
imul
inc
js
addr16
inc
stos
xchg
push
loopne
dec
jno
cmp
call
cs
jp
mov
push
fs
pop
xchg
or
sar
mov
incb
push
jne
adc
imul
xor
pop
push
xchg
imul
xchg
inc
dec
or
data16
push
push
loope
imul
or
adc
cwtl
aad
lods
or
and
push
or
in
push
ret
loope
or
push
arpl
je
adc
sarl
arpl
push
ret
fnstenv
push
cmp
in
mov
incl
cmpsb
dec
stos
mov
stos
test
outsb
insl
dec
xor
jb
push
icebp
pop
lret
out
clc
inc
pusha
xor
insl
movsl
inc
xor
enter
cmp
loopne
inc
jne
pop
dec
and
or
cmp
inc
lret
dec
jno
in
in
lcall
xor
push
ljmp
rcr
xor
insl
test
xchg
movsb
ret
nop
xor
push
arpl
mov
push
fwait
inc
fwait
mov
mov
push
jecxz
rolb
push
sti
add
push
ss
mov
dec
mov
rol
inc
jbe
cs
sub
cmpsb
mov
fnstsw
enter
jmp
push
push
in
pop
fstpl
inc
rorl
arpl
aas
ret
push
jecxz
movsl
and
ss
mov
in
sahf
xor
xchg
out
insb
jo
dec
lea
call
loopne
xorb
dec
ja
lcall
inc
and
cmp
lods
fs
dec
jo
je
fistpll
arpl
mov
xchg
aaa
sbb
cmpsb
jecxz
aaa
outsb
jo
pushaw
fs
inc
mov
cmp
loopne
dec
repnz
in
jmp
movsl
dec
push
and
push
icebp
aas
nop
scas
mov
inc
or
jmp
push
aas
sbb
push
jno
imul
jbe
pop
movsb
push
scas
push
fcomps
inc
xchg
dec
outsb
push
rorl
jns
repz
iret
mov
insb
jo
test
ljmp
sub
mov
sub
clc
and
xchg
cs
aaa
push
popa
mov
add
add
inc
push
dec
into
push
je
push
cmp
ret
dec
test
pop
nop
push
jbe
sub
push
sbb
push
popa
add
pop
mov
dec
enter
arpl
call
jg
jns
xchg
jae
in
and
jbe
imul
push
pop
mov
sub
js
xor
ret
fsubs
push
bound
cs
jno
imul
push
call
jle
xor
es
movsl
and
jb
outsl
mov
cmpsl
jne
cmp
dec
xchg
les
sbb
push
ja
imul
mov
rorl
inc
pop
jl
insb
cmp
sub
stos
das
pushf
dec
adc
push
add
jbe
fdivl
xor
mov
or
xor
pop
loope
pop
jbe
adc
push
js
lock
mov
sub
sarb
inc
ja
mov
cs
js
sub
aaa
mov
mov
pop
push
xor
fistps
push
inc
test
add
mov
jo
int3
outsb
call
inc
push
push
std
jl
jno
push
jo
dec
inc
adc
add
das
push
inc
push
outsl
mov
adc
mov
inc
insl
xor
or
ss
movsb
in
ja
js
dec
ja
push
or
dec
ljmp
sub
js
icebp
loop
imul
sbb
popa
add
jl
call
add
sbb
jl
es
je
aaa
dec
addb
dec
outsl
sub
inc
push
ja
dec
pushaw
out
imul
fdivrs
fadd
xor
add
test
inc
push
cmp
mov
pop
ja
xchg
dec
dec
inc
imul
add
lret
in
test
cmp
xchg
ret
push
pop
fimull
jo
sbb
mov
and
cmp
ret
das
dec
jbe
push
scas
add
push
mov
mov
imul
int3
dec
dec
js
mov
dec
jno
and
pop
push
fs
mov
xor
adc
fisubrl
sub
ds
stc
jge
inc
fisubrl
sub
pushw
fmuls
inc
pop
test
mov
jae
popa
call
dec
sbb
or
je
jo
fisttpl
aaa
push
dec
lods
hlt
jae
mov
xor
out
xor
jb
loopne
popf
jo
inc
add
dec
insl
pop
roll
jb
fbstp
mov
cmp
pop
add
ljmp
jno
sahf
icebp
mov
ds
imul
jno
stos
inc
fsubrl
enter
je
mov
dec
mov
jno
in
into
roll
js
fnsave
mov
mov
xor
xchg
xchg
arpl
and
mov
cltd
mov
jmp
add
cmp
cmp
lret
fdivrs
xchg
inc
shlb
add
adc
add
mov
pop
ss
inc
pop
filds
gs
inc
mov
inc
mov
rclb
mov
cmp
cmp
lods
cmpsb
push
fiaddl
jo
add
push
loope
in
subl
pushf
icebp
jbe
mov
bound
jb
push
push
dec
xchg
add
push
pop
rolb
sbb
cwtl
jg
cmpsb
addl
popf
aaa
push
bound
lods
or
test
push
jne
fwait
sbb
push
inc
popa
dec
fisubs
popa
or
repz
rcrl
jo
push
push
call
dec
insb
jle
dec
sbb
push
push
dec
xor
xor
je
rorl
ljmp
inc
in
pop
scas
loop
bound
inc
push
ror
pop
mov
adc
sub
dec
cli
leave
add
call
cltd
push
dec
xor
inc
fmull
and
loope
sub
test
jmp
pushl
or
push
popa
aas
sub
ljmp
aaa
push
in
loopne
int
and
into
pop
mov
jno
test
rcr
and
or
mov
sarl
sub
add
arpl
loopne
das
call
lods
psllw
testb
mov
push
adcl
jo
aas
adc
push
sbb
push
repnz
mov
sti
cmp
in
dec
nop
xchg
push
movsb
jne
xor
or
xchg
mov
fs
addr16
xchg
testl
mov
xor
jb
dec
movsb
xlat
test
rclb
xor
dec
push
mov
dec
jb
mov
test
repz
inc
dec
adc
dec
add
orb
test
pushf
inc
jle
scas
push
mov
aaa
dec
dec
push
sbb
mov
mov
jno
js
mov
testl
test
pushf
mov
pop
into
inc
dec
push
shlb
inc
inc
xor
dec
sub
xor
into
daa
repz
fiaddl
test
inc
cwtl
mov
xor
int3
mov
or
fisttps
enter
push
mov
rclb
imul
dec
push
ja
pop
jmp
insb
push
xor
call
and
add
pop
mov
mov
gs
int
cmp
ds
cmpl
push
push
and
lods
aaa
mov
je
dec
and
and
aaa
je
push
dec
bound
stos
jb
add
jo
test
inc
imul
pushf
xor
xor
sub
aam
lock
sbb
dec
loopne
mov
imul
lcall
rcr
inc
xchg
lods
lret
and
jbe
dec
stc
or
jp
or
mov
dec
inc
test
jo
incl
inc
sub
dec
inc
js
pop
mov
push
push
xchg
dec
and
fcompl
in
push
push
lcall
mov
pop
subb
arpl
add
dec
sub
or
inc
push
add
xor
cmpsl
lock
and
add
jae
adc
inc
jl
xor
mov
jp
shlb
sub
push
mov
jle
out
imul
shr
mov
xor
or
lods
jp
cmp
lods
jbe
pop
or
push
dec
sbb
add
call
inc
dec
jmp
jg
daa
inc
xor
js
push
inc
movsb
sbb
cmp
data16
into
loopne
pop
ss
ret
add
jecxz
ds
cmp
call
xor
push
in
repz
cmpsb
xor
lock
cmp
inc
psubsw
pop
or
fdivs
cli
cli
inc
mov
std
icebp
outsb
dec
pop
push
pop
jbe
fiaddl
insb
rcrb
inc
inc
sub
mov
and
push
mov
mov
outsb
push
mov
jbe
or
xor
add
mov
sbb
mov
xor
xor
jae
push
push
mov
cmpsb
push
repz
add
jmp
jae
je
jg
cld
push
mov
push
clc
sbb
inc
sub
jno
imul
add
add
js
add
and
dec
push
aaa
xor
dec
push
ljmp
dec
data16
rclb
cld
popf
addb
add
inc
dec
inc
sbb
pop
push
mov
out
aaa
cmpsb
jne
lds
ret
push
and
cld
rcl
push
sub
jns
nop
pop
push
mov
push
push
addr16
dec
ret
mov
or
push
and
hlt
cmp
inc
jae
pop
orl
fdiv
pop
or
shl
xor
sub
xor
mov
roll
loopne
xor
cmp
fdivp
jo
dec
sti
inc
jg
lea
add
imul
popf
xchg
cmovae
rorl
insl
push
lcall
mov
inc
mov
xor
ret
sub
stos
cmp
les
lea
js
nop
push
jbe
aad
test
dec
inc
in
and
mov
push
pop
inc
js
dec
cs
sbb
sbbb
mov
pop
fwait
inc
cmp
push
out
inc
loop
adc
popa
inc
insl
jg
imul
xor
dec
push
mov
fimuls
push
je
pushw
cmpsb
inc
xor
inc
pop
inc
push
popf
orb
dec
dec
xor
inc
jge
inc
pusha
in
fdivs
pop
imulb
movsl
dec
dec
ljmp
jo
mov
xor
imul
mov
mulb
jle
sbb
test
lcall
insl
xor
pop
test
aaa
push
push
andb
sub
and
out
lret
and
inc
inc
sbb
mov
ss
idivb
xchg
ss
mov
sbb
addl
clc
adcl
add
xor
push
push
imul
je
cmpl
loopne
ficomps
lods
sbb
push
rcrb
mov
int
test
into
inc
test
sbb
dec
divl
dec
sbb
sbb
mov
pusha
jo
lret
inc
mov
sub
jle
aad
push
push
ja
pop
call
push
jne
pop
xchg
pop
aaa
mov
pop
nop
dec
lds
or
sahf
inc
mov
clc
aaa
xadd
outsb
js
ret
pop
sub
rolb
js
mov
and
add
pop
inc
inc
push
bound
xorb
sbb
insb
mov
mov
outsb
aaa
inc
sbb
xor
sbb
or
sbb
dec
dec
push
pop
dec
pop
insb
xor
fdivl
dec
data16
js
les
je
cmp
outsl
stos
rol
ret
inc
sbb
movb
push
inc
xchg
jbe
inc
addb
addb
in
cmp
les
dec
dec
ja
push
jo
add
ret
lock
cmp
pop
or
ss
sbb
push
jb
inc
fcomps
mov
fisubs
cli
and
aaa
jmp
xor
sub
push
inc
jne
push
adc
dec
add
adc
dec
mov
cmp
push
mov
rclb
movsl
lock
ja
pop
cld
jecxz
sbb
rolb
pop
cmp
out
leave
pop
dec
insl
ficoms
stc
mov
push
push
repz
sub
mov
mov
cld
gs
aaa
loopne
add
cld
inc
jns
mov
les
pop
in
lea
pop
fimuls
lock
subl
dec
or
cmp
add
push
loopne
cmp
xor
inc
jg
call
mov
add
hlt
adc
aam
inc
dec
lock
xor
push
push
push
jo
ffree
and
into
fprem
je
call
push
inc
adc
imul
loopne
push
mov
insl
je
dec
das
ljmp
inc
orb
push
lahf
push
pop
or
ret
push
push
rclb
cltd
dec
dec
pop
mov
sub
sbb
push
and
pop
pop
lea
adc
iret
dec
std
push
idivl
into
or
pushf
dec
push
mov
xor
call
xchg
jecxz
rorb
jge
shlb
jb
pop
mov
push
js
push
mov
daa
add
mov
movsl
clc
inc
jbe
rorb
lds
les
nop
adc
mov
add
cwtd
fwait
pop
cmp
adc
es
sbb
or
divl
pop
test
int3
adc
adc
pop
add
fadds
pop
add
push
adc
insb
add
or
dec
xchg
and
cmp
gs
std
les
sub
sahf
add
mov
ss
rolb
ret
imul
bound
xchg
push
test
ds
add
mov
push
push
pop
loop
repnz
outsl
adc
adc
add
add
adc
xor
push
bnd
pop
inc
xor
psubq
bound
mov
pop
add
adc
jo
daa
sbbb
push
fcoml
insb
out
add
sahf
ss
push
imul
cmc
or
xor
pop
mov
xchg
addl
pop
pop
out
push
dec
ja
push
es
lods
xorb
ja
xlat
push
add
inc
mov
xor
out
dec
je
popa
push
cmp
jb
inc
add
add
cmp
shrl
ret
add
add
ss
pop
or
push
sti
jp
mov
add
or
inc
dec
jae
vmread
push
xchg
xchg
jbe
mov
or
stos
mov
jle
sar
outsl
inc
add
sub
adc
cmp
es
sbb
or
sub
out
ljmp
inc
pusha
adc
js
aas
cmp
dec
dec
insl
mov
jg
push
or
and
mov
jno
sti
add
lcall
pop
roll
cmpsl
push
add
ss
inc
inc
rolb
sub
int
test
mov
mov
push
into
imul
or
ficompl
scas
test
push
push
test
cmpsl
jecxz
mov
sbb
add
or
fmul
adc
and
xchg
sub
jl
push
cwtl
pop
jb
pop
outsl
out
jle
jno
pop
sbb
add
sbb
iret
push
rcrb
lods
std
xchg
mov
iret
jl
xorl
lret
das
push
ds
mov
cmc
insb
add
pop
xchg
push
mov
inc
add
or
fisubs
out
or
adc
mov
inc
xor
mov
push
aas
cmpl
mov
xchg
cltd
imul
cmp
push
idiv
call
pop
pop
fmul
enter
inc
out
lcall
dec
mov
dec
inc
aas
and
and
adc
jmp
repnz
mov
movsl
sahf
xchg
js
mov
jo
loope
push
xor
jno
sub
sbb
mov
decl
push
fbld
xor
lcall
gs
push
dec
das
inc
mov
sub
sbb
mov
stc
cli
dec
add
mov
xchg
xchg
iret
push
or
or
sbb
push
sbb
dec
fbstp
and
test
int
pushl
push
insb
cmp
insb
fs
ds
dec
ds
das
push
lret
or
sub
push
arpl
cmpsb
xchg
jo
in
inc
cmp
or
cmc
outsl
mov
out
sarb
jnp
inc
gs
inc
aas
adc
pusha
adc
add
cwtl
or
fcmovbe
pop
lods
or
lods
movsl
popf
xchg
mov
pusha
lcall
dec
sub
and
iret
adc
fsubrp
out
fisubs
test
cltd
xchg
jae
stc
lcall
inc
ds
out
das
and
stc
icebp
jmp
loope
mov
sub
call
outsl
push
sub
out
in
jg
call
mov
xchg
mov
sub
inc
outsl
ds
and
jg
jg
inc
xor
movsb
pop
in
mov
jbe
sub
cmp
loopne
fwait
lcall
adc
fst
into
daa
mov
dec
mov
int
lcall
xor
pop
adc
data16
icebp
jmp
push
fidivl
fildl
pusha
pop
cmp
lea
xor
and
xor
aas
mov
sbb
adc
arpl
pop
es
gs
and
fisttps
add
stos
movsb
test
mov
jle
outsl
dec
xor
push
jmp
dec
dec
cmc
fst
cmp
test
into
test
cwtl
xchg
jb
mov
imul
cld
cmp
iret
sar
jg
std
ret
pop
lock
inc
mov
xchg
lea
mov
xchg
idiv
dec
dec
pop
cld
in
push
sbb
mov
xchg
sbb
push
dec
inc
mov
push
movsb
cmp
pop
psllw
lock
ret
xchg
mov
mov
addr16
and
cmp
xchg
cmp
sub
push
pop
or
repz
int3
mov
nop
cld
incl
adc
jb
bound
cmp
sub
clc
mov
add
out
call
test
mov
mov
dec
inc
mov
dec
adc
add
and
pushl
lds
les
cld
dec
inc
cmp
sub
int
lcall
push
sysret
jmp
mov
add
data16
mov
xor
pop
sti
cmp
sti
repz
fmull
inc
cltd
js
addb
push
sub
out
sub
sub
loope
xor
leave
roll
mov
mov
lcall
lods
inc
adc
pop
adc
add
cs
les
xchg
jg
pop
or
cltd
pop
push
leave
and
pop
push
out
mov
adc
ljmp
mov
xchg
mov
ret
in
xchg
push
dec
inc
inc
and
dec
and
adc
sbb
jg
loopne
sbb
nop
or
mov
mov
cmp
push
push
push
out
iret
movsb
add
fwait
aam
loop
jne
data16
incl
addr16
aas
cmp
xchg
and
sti
repnz
fs
scas
daa
shrb
and
js
cmp
adc
gs
fwait
cmp
out
fcom
mov
ret
mov
jl
jmp
jns
outsl
call
mov
sti
mov
mov
cmpb
lahf
dec
jo
mov
test
push
out
out
xlat
mov
push
mov
je
dec
notb
or
mov
leave
push
mov
ljmp
lods
loopne
out
xchg
js
scas
js
into
jnp
or
mov
fisubrs
fimuls
test
jb
je
loopne
fistps
jg
aas
and
push
cli
daa
pushf
mov
jo
in
xchg
shlb
xchg
movsl
outsl
lods
inc
pop
aaa
mov
aaa
cmc
jle
inc
and
mov
incl
cmp
jnp
es
sbb
jae
sub
sbb
sbb
jg
clc
outsl
jle
test
inc
cmp
pop
and
out
roll
mov
fmull
mov
mov
sahf
add
out
push
dec
sbb
sbb
in
ljmp
ja
mov
xchg
nop
test
test
or
out
mov
pop
or
movsl
sbb
lcall
es
push
pop
xor
jmp
fsubs
push
std
ret
mov
push
push
in
push
and
pusha
aas
pop
es
and
sbb
insb
pop
or
imul
enter
sbb
lods
jmp
pop
stc
sbb
mov
push
mov
jle
sbb
in
es
adc
test
mov
popf
outsl
outsl
cmpb
adc
ds
mov
out
mov
and
outsl
daa
xchg
test
jbe
shlb
xor
mov
in
pop
mov
or
mov
pop
fmull
rclb
pop
fdivrl
flds
daa
lds
ret
lods
lock
mov
xchg
lea
int
lahf
push
xor
or
popf
pop
rcrb
lods
cmpsl
lahf
cltd
les
cmp
push
shll
inc
nop
and
insb
stc
lock
ret
pusha
fiadds
push
sbb
iret
pushl
js
mov
in
mov
divb
test
push
movsl
movsl
iret
aas
sarb
lods
xchg
lret
push
or
add
mov
stos
icebp
sti
pushf
sbb
sbbl
mov
iret
mov
cs
aaa
add
jle
mov
cmc
iret
or
jp
mov
lret
invd
pop
loopne
out
mov
test
inc
sub
sub
pop
test
scas
dec
and
cld
xchg
das
in
pusha
push
scas
cld
aaa
fbld
cwtl
nop
std
xchg
cmp
push
sti
call
inc
daa
jmp
call
dec
iret
dec
inc
aas
add
push
inc
adc
inc
clc
fsubrl
fisubs
push
fwait
mov
incl
ljmp
inc
or
leave
ret
lret
jae
jne
scas
mov
insl
cmp
push
test
cld
add
sbb
lods
mov
nop
test
push
js
aaa
rclb
dec
inc
and
stc
fadds
leave
aaa
pushf
fucomi
fwait
test
pop
imul
push
inc
aaa
pop
insb
sub
mov
sbb
cld
push
pop
mov
xchg
sbb
lock
and
out
int
add
push
loope
mov
mov
add
cmp
aas
and
insl
es
add
stc
test
mov
imul
cmc
push
aam
pushl
test
sarl
inc
mov
scas
jg
cmp
inc
cmp
adc
adc
pop
cld
mov
mov
xchg
pop
nop
lods
mov
cmp
scas
dec
sbb
outsb
call
push
in
mov
loope
add
jne
mov
dec
xor
test
pop
loopne
mov
pusha
mov
test
jmp
pushf
dec
sub
insl
sub
sbb
fildll
sbb
outsb
xchg
cmpsb
daa
push
and
jl
pusha
xor
and
test
in
aam
nop
cmc
sbb
out
or
loope
outsl
sbb
lock
mov
test
mov
push
clc
aad
loop
subl
dec
xor
add
mov
push
ficompl
and
js
cld
repz
loopne
mov
daa
or
rolb
iret
mov
xchg
rcll
lods
lcall
adc
adc
les
outsl
fistpl
pop
test
mov
xchg
adc
test
xlat
aas
rorb
mov
add
subl
cmp
gs
aaa
aad
xor
mov
enter
pop
repnz
es
xchg
or
sar
and
fisubs
fimuls
mov
cwtl
lods
das
daa
or
and
mov
into
pop
cs
adc
decb
out
outsl
xor
sbb
pop
es
cmc
in
iret
testl
fidivs
push
clc
scas
mov
push
ss
add
adc
ret
pushl
outsb
push
xchg
out
outsl
out
mov
cmp
add
outsb
icebp
into
mov
xchg
aad
aaa
mov
or
das
pop
inc
pop
sbb
arpl
div
pop
add
fsubl
into
leave
lods
mov
pushf
mov
insl
inc
test
lahf
fsubr
dec
or
aaa
std
pop
aam
shl
mov
xchg
out
mov
mov
ret
movb
mov
add
lret
lret
jg
or
lret
xchg
mov
aam
sbb
mov
je
out
test
cmpsl
adc
jp
jl
loopne
out
jb
cmp
orb
or
cld
repz
add
jl
xchg
mov
cmp
and
sbb
mov
sbb
in
mov
dec
rcrl
xlat
out
orb
mov
mov
jp
out
sub
jg
cmp
jp
xor
or
push
jle
es
push
cli
sub
jp
nop
into
sbb
pop
cmp
jmp
fs
scas
loopne
mov
push
pop
push
pop
pop
dec
sub
jne
in
divl
in
in
scas
and
xorl
and
or
mov
xchg
es
xor
mulb
fimuls
rcrl
mov
mov
rcrb
inc
mov
inc
aad
or
lahf
xchg
aaa
aas
es
cmpsl
mov
pop
test
inc
sarb
test
loope
jp
mov
mov
stc
mov
lods
jo
dec
aam
inc
in
cld
in
cld
outsl
push
pusha
xor
popa
pop
cmp
test
jmp
dec
int3
sbb
aad
shlb
inc
fimull
aad
scas
insl
ss
jmp
call
add
lahf
leavew
pop
outsl
fbstp
mov
imul
out
pushf
mov
idivl
add
pop
pop
pop
and
test
sub
icebp
inc
sbb
dec
mov
dec
and
add
lds
sub
lahf
jg
xchg
lods
push
call
and
out
sbb
ret
mov
cli
lret
and
inc
cld
xchg
add
aam
in
repnz
ror
lret
test
push
cmp
sub
mul
fwait
and
out
sub
roll
jg
mov
xchg
push
inc
aas
clc
sbb
inc
jmp
loopne
hlt
jecxz
mov
es
xchg
out
jo
js
mov
dec
nop
mov
mov
in
sbb
out
pop
mov
into
xor
dec
cld
aam
sub
test
in
sbb
add
fistpll
sbb
push
fwait
push
push
dec
sub
aas
outsl
cmpsb
add
aam
mov
mov
xor
inc
mov
daa
jmp
repz
mov
fmuls
cmp
subb
adcl
sub
loope
cld
idivl
inc
repz
stos
mov
inc
adc
push
adc
pop
clc
aas
shl
call
les
sbb
pop
jp
inc
jl
mov
imul
or
into
enter
test
sub
lock
push
or
lods
mov
cmp
or
fdivr
cld
ja
mov
and
mov
mov
mov
push
add
fisubrs
hlt
mov
mov
dec
sbb
jbe
stc
out
data16
adc
jae
test
ja
aad
jo
pop
xorb
pop
push
adc
out
jmp
fst
iret
mov
jmp
add
jnp
mov
push
nop
loop
fbld
imul
lods
movsl
xchg
sbb
out
cmp
insb
inc
push
inc
daa
daa
aam
outsl
adc
int
icebp
sbb
inc
test
inc
aad
cltd
mov
decl
mov
sbb
sbb
or
mov
test
pop
mov
sub
es
dec
test
cmc
jl
cmc
push
call
or
mov
cld
push
out
xchg
add
lods
fwait
iret
jne
loopne
and
call
out
or
icebp
stos
das
mov
jl
stos
adc
xchg
add
les
rclb
in
mov
jnp
aam
std
adc
mov
mov
adc
pushl
xor
lret
lods
xor
lods
lea
mov
pop
roll
incl
repnz
mov
lods
repz
mov
mov
or
pop
adc
pop
push
es
and
inc
mov
loope
mov
pop
and
jno
or
mov
and
adc
es
aam
push
add
cltd
cwtl
xchg
lods
std
mov
inc
mov
icebp
dec
outsl
xor
cmp
sbb
ror
ret
imul
sbb
push
mov
add
sub
clc
mov
xor
mov
andl
dec
sub
or
or
ja
lock
into
and
aaa
outsl
outsb
lea
adc
or
pop
or
and
add
test
mov
es
lret
repz
mov
jl
sub
sbb
add
mov
mov
mov
jp
sbb
dec
fisttpll
iret
fwait
das
addb
jb
xchg
jb
cld
stc
sbb
xor
popl
loope
adc
loop
cli
pop
xor
dec
sub
data16
pop
aaa
dec
sti
daa
xor
lds
lock
popa
jae
bound
jp
repz
loop
adc
loopne
add
stos
mov
mov
jns
dec
outsl
aas
aas
shr
es
add
xchg
inc
leave
test
jbe
xchg
inc
cli
imul
dec
inc
push
cld
mov
mov
leave
dec
pop
xchg
pop
scas
xchg
cmp
das
hlt
jne
mov
xor
xor
in
push
orb
lds
mov
test
icebp
pop
loop
scas
jno
cmp
jb
mov
push
lock
add
mov
mov
sti
mov
pushf
push
jb
test
add
push
pop
jbe
testl
cmpsl
js
mov
js
cmp
sub
sbb
cmp
mov
mov
outsb
push
push
stos
xor
mov
xor
lcall
ljmp
jo
popf
jno
push
sub
xor
and
adc
in
pop
icebp
int
out
adc
enter
xlat
mov
mov
inc
outsb
jle
outsb
test
ja
es
fisttpl
jmp
shll
in
cld
cmp
adc
jg
in
enter
rol
xor
test
insb
sbb
test
and
or
sarl
cmp
pop
lret
lods
lods
xchg
mov
and
mov
adc
fisttps
enter
into
mov
enter
xor
xchg
push
das
adc
dec
add
out
lret
lods
hlt
repz
lea
push
pusha
pop
sub
out
loopne
in
jmp
fwait
fwait
in
sub
int
je
cmpsl
push
pop
bound
pop
cmp
dec
cld
adc
adc
jbe
pop
ret
adc
mov
fiaddl
cld
inc
and
sub
lods
mov
mov
mov
je
mov
icebp
out
xchg
das
mov
xlat
lcall
hlt
lret
ret
mov
pop
sbbb
aam
subb
xor
fildl
jge
test
cltd
loop
cli
or
arpl
inc
jle
jbe
stos
sub
or
out
or
rolb
mov
mul
cmp
pop
insb
std
stos
add
in
imul
es
mov
xchg
lods
outsb
imul
cmp
daa
cmp
loope
loope
flds
and
cmpb
or
xchg
dec
adc
dec
loopne
mov
mov
cli
add
fadds
or
jge
sbb
scas
cld
es
sbb
xlat
and
pop
adc
jo
lods
adc
cmpsl
xor
outsl
cld
stc
pop
inc
push
es
jo
ljmp
push
mov
repz
fists
stos
loop
dec
or
icebp
aas
lahf
or
ret
in
dec
and
aad
dec
clc
scas
sbb
sar
ja
clc
fldt
push
jo
push
dec
stc
stc
push
and
jmp
jmp
stos
jecxz
jbe
push
add
cmc
dec
cld
mov
pop
in
negl
fincstp
dec
cld
aas
jns
mov
xchg
push
pop
push
xor
push
test
loopne
jo
stc
call
mov
or
adc
addr16
push
clc
test
addr16
pop
cmp
push
cmp
push
jp
mov
mov
xchg
arpl
pop
fisubrl
stos
orl
sub
pop
jle
aam
mov
cld
addr16
data16
jle
stc
outsl
add
or
test
xchg
sub
cltd
ds
iret
xorb
pop
mov
cld
pop
lcall
dec
nop
pop
dec
rclb
pop
lods
mov
sub
int
icebp
std
mov
outsl
mov
arpl
mov
push
dec
inc
and
jmp
cld
clc
mov
xor
mov
add
loop
xlat
mov
data16
test
dec
aad
fisubl
add
add
cmp
lahf
lods
adc
push
xor
arpl
adc
jmp
insl
loope
out
rorl
rorb
jne
mov
cld
adc
aas
sbb
es
xor
repz
lret
mov
out
aam
inc
and
mov
and
rolw
mov
cld
lods
addr16
inc
aas
decl
and
dec
jecxz
and
fdivrl
aad
mov
jmp
adc
comiss
pop
movd
ficomps
or
jg
mov
pop
push
lods
ret
adc
jne
dec
dec
loop
aam
hlt
out
mov
cli
stc
add
cmp
jns
sbb
clc
sub
rolb
insb
mov
fs
stc
add
adc
inc
pop
repz
scas
mov
aam
xchg
mov
sub
pop
add
std
imul
cmc
fs
mov
dec
inc
lods
jp
aam
dec
aas
lods
lock
or
or
test
add
push
sbb
orb
loopne
mov
lods
inc
in
mov
cmpsb
pop
loop
in
xlat
mov
xchg
add
sbb
xor
fdivl
lock
xchg
shll
dec
add
mov
xor
pop
sub
daa
pop
cmpb
fmul
xor
gs
and
int
ds
or
mov
out
lahf
pop
andb
in
aaa
push
pause
dec
mov
dec
sbb
notb
mov
shr
mov
push
or
outsl
test
aaa
rcrl
call
cmp
or
jno
aas
das
outsl
pop
and
sbb
std
inc
xlat
dec
aaa
mov
std
test
jae
mov
cmp
std
push
cli
mov
cmpsb
xor
jno
mov
movsb
add
cli
out
fnsave
mov
sti
inc
push
cld
push
daa
clc
aas
loop
jo
jecxz
lock
dec
add
ljmp
cmp
aam
inc
sbb
jl
bnd
add
cmc
ret
pop
stos
mov
stc
cwtl
lea
dec
inc
sbb
nop
stos
and
add
mov
testb
inc
ds
or
pop
shlb
mov
sub
loope
ret
pop
jle
mov
lods
and
or
sbb
mov
aad
nop
push
push
js
or
lods
xor
ss
pop
sbb
andb
xchg
add
fidivrs
add
mov
pop
push
or
cmpsl
mov
ret
lds
cmpl
ljmp
mov
dec
and
lock
sti
cmpb
pushf
in
in
jbe
ljmp
hlt
sbb
and
xor
adc
jp
xchg
inc
cmp
add
ret
dec
ret
roll
movsb
cli
jge
fwait
jle
jae
orb
fbstp
push
mov
add
aam
scas
ror
cld
repz
out
jae
addl
scas
ljmp
mov
aad
daa
cmpsl
jbe
jbe
addr16
inc
push
ds
std
sarb
in
or
movsb
out
das
movsb
push
cmpb
adc
mov
sub
out
rolb
mov
mov
jge
jmp
rorb
cld
test
xor
sbb
add
repnz
jmp
outsl
in
repz
xchg
hlt
push
lahf
je
stos
bound
andb
ss
sub
test
add
sbb
in
data16
aad
xorb
and
sti
sub
cli
repnz
sbb
fwait
fwait
dec
mov
adc
mov
or
mov
loopne
hlt
repz
sub
jbe
pop
in
and
mov
daa
shlb
in
add
sbb
mov
push
shl
mov
lahf
pop
pop
push
es
scas
shlb
push
ja
jge
icebp
ljmp
xor
repz
push
inc
cltd
cmpsb
or
test
mov
cmpsl
mov
sbb
cmpb
enter
pop
cld
xchg
mov
pop
rcrb
lret
sub
jg
int
dec
and
ss
imul
imul
mov
cmpsl
aad
jge
cld
aas
inc
dec
sub
aad
daa
inc
cmp
jnp
int3
mov
push
aad
out
sahf
movsl
mov
fidivs
mov
mov
fwait
repz
out
mov
lcall
out
lock
jmp
clc
lcall
icebp
mov
stc
int
sub
js
xor
bound
mov
enter
mov
push
mov
jp
das
icebp
sub
js
repnz
lods
mov
aad
mov
sub
hlt
mov
xlat
mov
mov
ret
sub
push
jbe
test
sub
decb
xchg
jmp
fistps
cmp
mov
mov
icebp
popa
xor
and
mov
ljmp
insb
mulb
js
es
hlt
add
lret
adc
lret
in
repz
out
lret
and
push
test
icebp
icebp
mov
cld
push
mov
add
sbb
sbb
push
arpl
aad
mov
xor
add
pusha
inc
cmp
cmp
mov
add
inc
push
jno
aam
mov
test
mov
mov
gs
cld
int
sbbb
in
test
pusha
popa
imul
loopne
rolb
sbb
xor
or
ret
add
adc
aas
jnp
mov
jns
xchg
dec
pop
scas
pop
push
jmp
scas
or
sub
cmc
adc
add
addr16
push
dec
push
mov
adc
mov
fst
xchg
mov
stos
xchg
scas
stos
sbb
arpl
je
aad
mov
daa
pop
mov
or
add
hlt
adcl
addr16
sbb
inc
cmp
test
jmp
iret
pop
das
fucomp
jmp
scas
stos
scas
sbb
mov
out
sub
js
lock
adc
sarl
pop
mov
push
jmp
movsb
jle
cli
jg
or
clc
or
scas
mov
jmp
aam
mov
inc
cwtl
xchg
xchg
inc
out
mov
icebp
pop
imul
es
aad
loope
int3
cltd
lods
jmp
mov
mov
in
sbb
das
rolb
shrl
add
push
das
or
jp
rorl
mov
movsb
xchg
incb
stos
je
push
or
fistl
adc
jb
pop
clc
hlt
push
les
lock
xchg
lock
lods
mov
push
mov
sbb
aaa
loopne
pop
arpl
sbb
mov
and
jg
fwait
decl
ret
jg
je
and
pop
mov
cld
cmp
mov
fcomps
insb
or
and
in
in
aad
pusha
adc
nop
je
cld
sub
ds
test
call
sti
add
inc
shll
dec
movsl
test
dec
cld
jae
arpl
es
xchg
int
inc
dec
popa
andl
mov
ljmp
shrb
outsb
out
mov
sbb
xchg
cmp
xor
adc
add
shll
inc
mov
sbbb
pop
inc
ror
lahf
adc
fnstcw
stos
cmpsb
out
jmp
sahf
push
fimull
test
frstor
lods
fdiv
xor
add
xchg
lcall
arpl
dec
das
roll
ds
stos
mov
add
dec
xchg
and
leave
push
add
or
xor
int3
out
pop
mov
mov
xchg
mov
pop
mov
jecxz
stos
das
out
out
mov
lods
dec
fwait
mov
bound
aas
and
mov
or
into
mov
stos
shrb
aas
push
pushf
jl
and
push
and
insb
repz
dec
icebp
lcall
sbb
mov
cmpsb
je
test
and
repz
ljmp
xchg
popf
xchg
pop
push
mov
test
inc
xlat
lahf
enter
mov
lods
aam
mov
mov
pop
add
push
push
sarb
dec
popa
repnz
push
xor
sub
mov
pop
icebp
cmpl
dec
jns
test
cmc
or
xor
int3
add
test
xor
fadds
std
adc
fbld
stc
mov
test
push
test
dec
xchg
inc
cmp
lock
add
or
std
jl
rclb
dec
lock
test
adc
psubq
out
aam
cld
outsl
mov
jo
fwait
jo
xor
call
mov
rcr
test
test
cmp
cmpsb
pop
jp
addr16
daa
andb
mov
int
movsl
xchg
jg
jne
test
xor
cmp
pop
and
add
mov
sti
hlt
fiadds
sti
std
adc
xchg
mov
mov
push
aam
sbb
xor
and
cli
jmp
lods
xor
lods
mov
dec
mov
and
and
jns
xchg
test
movl
rcll
inc
or
inc
aaa
aam
mul
cld
ret
movsb
jbe
mov
popf
or
outsb
addr16
out
test
or
or
out
xlat
addr16
mov
cmp
nop
imul
and
mov
dec
out
cmp
out
test
sar
pop
fmuls
sarl
sbb
dec
fistps
js
cmp
sbb
sub
ret
pop
and
mov
decb
test
aam
pop
cmp
add
stos
pop
loop
mov
lock
xchg
pop
jo
push
mov
sbb
pop
pop
rorb
mov
lret
pop
jg
adc
ret
jb
or
sbb
adc
push
push
cmpb
jo
mov
cmp
jmp
add
jns
jns
rclb
imul
mov
aad
cmc
or
or
push
pushf
jmp
mov
cld
repz
xor
or
xor
nop
pop
adc
or
push
test
enter
imul
fstps
mov
lods
mov
pop
pusha
imul
mov
sbb
sbb
mov
jecxz
and
hlt
gs
fstl
rcrl
stos
rorb
shl
add
shll
push
rorl
and
aaa
loop
push
aam
adc
adc
fcomip
pop
lods
pop
mov
scas
and
push
mov
das
sahf
push
clc
stc
ja
arpl
and
incl
leave
xchg
aam
dec
fsubr
pushf
sub
outsb
mov
repnz
inc
enter
in
lods
mov
ss
mov
pushf
mov
inc
out
mov
push
sbb
xchg
shrb
xchg
and
pop
and
inc
and
filds
faddl
xchg
sub
xor
jno
push
mov
dec
xchg
lods
inc
or
das
test
sub
cld
pushf
xchg
fs
pop
call
jmp
mov
jo
stos
xor
jno
jo
add
repnz
adc
aas
sar
es
js
sarl
lret
dec
push
xor
bound
or
loop
fwait
pop
leave
aas
lahf
outsl
or
mov
jge
push
inc
xor
jmp
mov
sar
icebp
lock
scas
orb
hlt
stos
bound
ja
cld
scas
popa
loope
lock
aas
fwait
xor
dec
mov
inc
test
cld
dec
jmp
add
push
pop
ljmp
int
xchg
or
push
aam
jno
stc
xor
and
fucomip
pavgb
push
cld
test
xchg
aaa
ljmp
aaa
xor
jmp
adc
sub
in
add
xchg
sub
cld
je
hlt
mov
out
pop
imul
out
rcrb
push
mov
cmc
sub
call
popa
stos
add
and
pop
insl
cmp
mov
shll
adc
and
dec
orl
add
xor
inc
loop
iret
mov
loopne
sbb
cmp
fidivrs
inc
aas
bound
adc
clc
rorb
pop
push
jecxz
mov
std
sbb
enter
cs
std
paddb
lock
icebp
jnp
adc
test
in
jl
sbb
rcl
adc
pop
adc
fcmovbe
lret
dec
cld
clc
xchg
jg
or
dec
pop
add
dec
cmp
sbb
xor
outsb
push
test
add
das
adcb
movsb
pop
xor
pop
sub
lods
jl
es
fwait
mov
add
shll
std
decb
jb
dec
add
aaa
adc
add
or
fidivrl
iret
inc
stos
push
adcb
lods
mov
jns
orl
push
psubsb
or
dec
or
xchg
jle
les
xor
ds
adc
and
fnsave
lret
outsl
mov
lahf
xor
cmp
fisttps
sbb
into
or
xor
in
lret
jle
add
out
add
sub
dec
les
out
in
faddl
jg
inc
cld
dec
into
cltd
xchg
or
aas
pop
or
es
mov
or
lahf
out
ja
jno
pusha
dec
sub
xor
loop
test
out
in
xchg
pop
and
loope
arpl
rorb
stc
xlat
es
repnz
test
ret
xchg
aas
fwait
jg
inc
xor
inc
mov
adc
sahf
jmp
adcl
xchg
shr
dec
in
inc
or
loope
lods
dec
sbb
lret
loope
and
fmull
mov
imul
add
cs
int3
sbb
mov
cmpb
fdivl
rorb
add
lods
test
test
jmp
push
and
adc
stos
lcall
nop
or
jns
mov
pusha
xchg
clc
and
lahf
out
mov
imul
and
dec
add
cmp
push
add
sbb
arpl
aam
stc
lods
scas
push
mov
lahf
or
cwtl
push
sub
aas
add
movq
out
cmpsb
lds
lods
and
je
test
lock
dec
inc
enter
int3
cli
cld
repz
imul
aaa
sub
adc
mov
test
cli
test
xor
stos
test
mov
lcall
inc
cld
dec
cmp
xor
dec
shrb
cli
dec
pop
or
lahf
mov
dec
inc
jg
aad
arpl
ss
mov
stc
fistpll
jmp
push
mov
cmpl
pop
cs
pop
mov
or
push
mov
cmpsl
movsl
sahf
fwait
outsl
add
fsubl
push
push
pop
call
rcl
sahf
andl
inc
push
aas
cmp
or
jg
incb
add
dec
daa
int
int
mov
xchg
add
jle
jle
fbld
lcall
xor
je
mov
add
or
add
or
std
mov
dec
ret
or
jge
xor
gs
push
cmp
add
lods
jno
and
mov
stos
push
fs
cmp
push
lahf
xor
sbb
es
jmp
jg
loopne
shlb
fidivl
cmp
aam
push
out
xchg
pop
out
bound
aad
out
les
test
sub
sub
cli
das
sbb
sbb
in
xchg
fbld
sub
adc
incb
imul
iret
sbb
mov
mov
jae
iret
fwait
add
ret
inc
dec
outsb
sub
mov
repnz
test
test
loope
add
mov
les
mov
or
ss
loopne
test
ds
xor
rcrl
sub
jno
and
in
inc
shl
sahf
and
scas
lahf
pop
js
mov
sub
hlt
adc
mov
mov
stos
lret
push
sub
jno
stc
stos
xchg
xchg
or
jecxz
rcl
lods
pop
pop
jmp
dec
pusha
adc
or
cmp
and
add
cmc
in
lods
arpl
mov
lcall
inc
test
push
arpl
or
sub
pop
rcl
or
hlt
dec
clc
inc
roll
out
and
dec
addr16
pop
xchg
xor
cli
das
icebp
hlt
mov
test
imul
sbb
mov
add
pop
fadd
xor
push
jne
out
ja
pop
push
cmp
add
rcrb
cmpsl
mov
int
adc
test
dec
pop
stc
daa
icebp
in
jns
loope
scas
outsl
std
mov
lret
jno
and
in
in
clc
or
aam
clc
jp
cmc
dec
mov
es
adc
out
mov
mov
fstl
or
je
add
and
lahf
jg
jg
sbb
sub
push
aas
cld
adc
push
dec
cs
inc
cs
outsl
pop
icebp
call
xor
test
aaa
std
mov
or
sbb
ret
dec
cld
into
pop
test
enter
pushf
es
scas
add
push
dec
rolb
push
push
or
mov
and
filds
aas
dec
mov
push
and
adc
sbb
pop
in
mov
jns
sbb
es
cmp
lods
ret
pop
jmp
and
add
leavew
pop
rorw
add
jns
rcr
aam
push
mov
mov
in
jns
jge
out
pop
xor
cli
add
cld
ret
pop
mov
push
mov
insl
add
scas
cmpl
ds
xchg
les
dec
mov
decl
sub
adc
mov
stos
mov
mov
loop
jo
inc
dec
xchg
pusha
push
repz
cli
stc
sbb
mov
mov
subl
jg
dec
shlb
in
mov
xchg
and
cmpsb
testl
repz
mov
stos
inc
fidivrl
test
stos
scas
popa
sbb
or
sub
icebp
xchg
js
add
ljmp
inc
sahf
or
out
rorb
jg
xlat
cld
mov
lods
mov
cmovns
pop
mov
inc
dec
mov
cmpsb
pop
jl
or
fcmovnbe
rorb
test
ss
fprem1
subb
mov
mov
or
data16
stos
xchg
sbb
xchg
gs
mov
test
dec
inc
stos
repz
les
mov
stos
mov
aam
js
stc
cmp
loop
or
fsubrp
dec
sbb
add
les
cmp
clc
scas
das
cld
adc
sbb
aas
lods
sbb
fbstp
fstpt
stos
mov
cs
xor
pusha
or
mov
add
inc
mov
call
cmp
dec
mov
orb
jg
lods
cli
dec
aam
repnz
andb
add
xor
loopne
daa
jbe
sar
addb
mov
adc
cmc
add
das
lods
or
add
sub
es
loopne
add
sub
sub
jne
add
xlat
add
test
xchg
lods
dec
mov
jg
jmp
cmpsb
scas
sahf
add
int3
std
pop
es
fistpll
leave
aad
mov
jle
arpl
pop
dec
cmp
mov
push
lock
loope
ss
and
ljmp
pop
fs
shrb
xor
sub
lock
sti
lods
fcmovbe
push
pushf
movsl
dec
cwtl
movsb
pushf
xchg
cld
mov
cmpsb
cmpsb
sub
rcll
jbe
scas
mov
arpl
adc
outsl
jmp
loop
inc
out
ficoml
add
inc
sbbb
jmp
fidivrs
fimull
jle
cmp
ss
ss
mov
or
adc
or
xchg
ja
data16
and
cmp
and
inc
inc
je
cmp
jl
inc
fdivrl
js
pop
into
subb
daa
adc
jg
ja
cld
mov
mov
stos
outsl
ja
testl
and
dec
jecxz
jl
test
pop
stc
lock
adcb
roll
adc
xor
inc
shlb
dec
cmp
or
stos
push
mov
pop
cld
into
outsb
mov
pop
inc
cmp
outsl
adc
push
adc
jne
mov
jmp
push
movsb
dec
mov
jne
test
and
imul
ss
sbb
repz
outsl
dec
aas
into
and
out
adcl
les
faddl
jbe
mov
cmpsb
xlat
shrb
mov
movsb
pushf
gs
je
les
push
insb
sarb
iret
or
push
push
push
xchg
or
cmp
mov
push
flds
xchg
shrl
xor
arpl
lods
cmp
push
stos
popf
sti
or
mov
mov
ror
jp
adc
inc
loope
inc
loope
std
xor
push
cmp
add
test
rclb
fcompl
aas
or
inc
or
aam
inc
sub
scas
lods
sbb
mov
loop
push
push
stos
jnp
in
insb
stos
iret
push
fmuls
push
test
inc
dec
dec
mov
movsl
xor
add
xor
es
jg
mov
cmc
sub
movsb
push
cld
pop
push
xor
stc
push
adcb
decl
or
leave
stos
cmc
shrl
push
sbb
inc
jbe
mov
cs
inc
or
or
mov
addb
adc
repz
repnz
lahf
add
cmp
ret
xor
xchg
mov
mov
aaa
das
cs
and
inc
mov
test
lods
sbb
imul
out
hlt
cld
inc
mov
mov
jle
js
cmpsb
cmpl
adc
add
fistl
push
or
enter
imul
sbb
stos
je
ds
pop
test
dec
out
ret
pop
and
and
inc
scas
dec
push
outsb
incb
add
sub
mov
xchg
stos
jg
and
lods
inc
pop
add
out
adc
subb
jbe
dec
ror
cmp
call
es
cmp
rclb
std
wbinvd
add
enter
cmpl
jo
int
mov
sbb
flds
inc
lods
in
stos
dec
subl
mov
clc
aas
clc
mov
or
sub
jo
daa
repz
sub
cld
mov
add
jle
mov
incl
mov
pop
leave
in
adc
mov
pop
and
mov
jae
gs
xor
mov
inc
enter
pop
mov
je
out
pop
pushf
aaa
lock
test
dec
insl
and
ss
or
mov
orb
fs
xchg
test
sbb
imul
or
clc
adc
and
clc
mov
cwtl
testl
inc
cld
outsl
je
add
call
cltd
decl
movsl
xchg
push
lahf
ljmp
add
in
clc
icebp
jb
stos
mov
outsl
xlat
mov
jns
pop
or
shrb
test
or
jae
fimuls
cs
inc
loope
and
fndisi(8087
and
stos
aaa
std
jmp
xchg
ss
or
dec
inc
dec
mov
incb
cmc
popa
loop
clc
stc
add
mov
dec
jnp
xor
gs
dec
inc
ds
pop
pop
fbstp
loope
cld
cmp
ret
shr
jle
popf
and
lods
push
aas
bound
loopne
or
sarl
testb
pop
push
std
adc
adc
jo
mov
call
inc
fucomp
call
loop,pt
fwait
test
push
call
nop
inc
stos
stos
push
adc
dec
shrl
jnp
lods
cld
push
mov
pop
mov
cmp
jecxz
jg
stos
jmp
fnstcw
rcrb
lcall
and
mov
icebp
fnstsw
mov
or
test
arpl
cld
or
ret
ret
jbe
mov
test
jns
pop
push
je
adc
sbb
ret
call
cwtl
ds
test
sub
mov
into
test
jbe
pop
enter
and
testl
add
aas
adc
pusha
add
int
ror
mov
in
loopne
lods
cmpsb
jmp
dec
js
arpl
pop
or
mov
push
stos
in
mov
fiadds
aaa
pop
std
icebp
sub
fldl
add
shll
mov
int3
outsl
mov
push
cmp
test
inc
fsub
lahf
cmc
dec
ret
mov
pop
and
orb
sub
add
loopne
es
add
pop
paddw
sbb
add
jp
cmp
sub
sub
mov
nop
mov
insb
mov
je
dec
pop
std
daa
xor
pop
push
hlt
shl
ljmp
filds
sbb
cwtl
inc
jne
bound
sub
outsb
adc
pop
es
call
aam
data16
jo
enter
sbbb
clc
lods
inc
cld
push
test
push
enter
lods
lea
jo
stos
add
cltd
cmp
test
sarb
and
mov
lret
mov
clc
add
inc
sbb
xchg
push
test
push
jns
inc
iret
sti
dec
loop
int3
push
clc
sub
out
lret
pop
ret
xchg
sub
xchg
pushf
and
or
aad
xchg
xchg
movsb
adc
lods
cld
jns
into
push
mov
fldenv
xchg
popf
adc
add
in
add
add
adc
lods
lock
cltd
jl
insl
aam
xor
inc
inc
lock
cli
rorl
inc
mov
cli
cmc
lds
sahf
ret
mov
cmp
insb
ss
popa
iret
pop
inc
into
roll
lods
or
ljmp
mov
repz
xor
jg
subl
addr16
mov
mov
js
mov
in
addr16
mov
mov
sub
loop
out
sub
adc
inc
test
nop
jns,pn
leave
aam
or
inc
cld
inc
mov
rorb
ds
es
xor
mov
sbb
pop
out
add
pop
clc
daa
jg
mov
lcall
bnd
popa
in
xor
jne
loopne
es
es
jnp
jno
stos
ffreep
jp
andb
push
out
clc
mov
sbb
hlt
loope
rep
lret
lea
lds
in
stos
pop
xor
xchg
add
fs
or
ficoms
adc
mov
fisttps
push
sti
sub
xlat
out
push
pop
gs
dec
add
cld
out
clc
jle
dec
inc
push
sti
or
cld
push
xor
repnz
aad
shl
mov
rcrl
and
inc
aaa
sub
push
std
adc
or
mov
dec
push
cmpsb
xchg
imul
scas
jg
pop
pop
das
pop
sbb
jle
sub
nop
dec
icebp
dec
mov
mov
fidivrl
jge
inc
daa
or
sbb
call
xlat
nop
out
inc
lock
jp
pop
or
dec
cmp
pop
push
fneni(8087
xchg
clc
xchg
fisubrl
fistpl
call
incb
sub
loope
jmp
lods
mov
and
pusha
jge
cs
test
or
sbb
stos
sbb
clc
bound
cltd
pushf
stos
cltd
aam
xor
xor
jb
icebp
imul
aaa
aaa
mov
cld
imul
lock
sbb
or
mov
cmpl
xor
arpl
ret
aaa
add
dec
pushf
das
loope
jbe
rorb
pop
push
mov
and
repz
mov
push
dec
repnz
jns
pop
cmp
clc
aam
sahf
pushf
fdivrl
cld
outsb
fwait
dec
dec
mov
add
sbb
push
enter
mov
adc
mov
xchg
ret
jb
fmuls
cmp
adc
dec
dec
in
and
or
addb
movsb
pop
push
in
adc
mov
fldl
xlat
mov
loop
mov
dec
xor
and
scas
rclb
xchg
repz
scas
jb
dec
lret
dec
dec
sbb
sbb
or
rcr
rclb
into
cmpsl
xchg
cmpsb
orl
pop
xchg
stos
sub
dec
mov
and
out
shrb
fsts
jmp
sub
and
enter
sbb
or
rcrl
aas
jg
cmpsb
jae
jns
push
test
scas
addl
out
iret
aas
mov
js
aas
cmc
enter
sahf
sbb
movsb
cmp
lahf
les
adc
hlt
dec
add
loop
jge
push
mov
mov
subb
inc
mov
lods
mov
je
dec
out
es
and
sarb
jg
test
mov
shl
scas
loopne
jle
mov
std
movsl
pop
stos
cmp
and
mov
lcall
test
in
pop
xor
add
add
sti
ficoml
cmp
sub
fnstcw
sub
inc
test
arpl
adc
fsubrl
mov
jnp
insb
sbb
mov
lods
dec
cs
xor
sbb
adc
cmpsl
push
dec
sbb
or
ds
shlb
sbb
out
mov
and
xlat
inc
mov
orl
add
and
gs
ds
jae
sar
bound
pop
lods
mov
mov
cmp
mov
and
subb
jmp
lods
fs
fs
jns
cld
jl
sub
test
rcll
or
lock
dec
leave
pop
add
jg
sub
cmc
shrb
je
pop
js
mov
test
icebp
es
fnstsw
adc
mov
add
lock
xlat
mov
mov
or
or
loop
pop
fwait
cmc
adc
xor
incl
adc
xor
ds
jp
and
stc
mov
add
xor
or
aaa
stc
pop
jmp
pop
data16
or
jecxz
fisttpll
mov
and
dec
mov
popa
aam
mov
adc
xor
and
lods
fwait
lea
imul
add
sbb
lods
mov
push
push
fisttpl
test
adc
mov
lcall
cld
insl
jb
dec
push
and
xchg
subb
pop
loopne
bound
pusha
and
adc
aas
adc
nop
add
nop
xor
xchg
mov
ja
subb
arpl
stos
mov
int
fadds
mov
bound
xor
das
sbb
aaa
dec
out
fcomps
pusha
mov
into
cmp
push
inc
and
aaa
nop
pop
clc
movsb
inc
movsl
movd
sti
test
sbb
add
outsl
add
inc
cld
sub
xor
sbb
insb
cld
rcrb
aam
xchg
mov
and
pop
mov
clc
subb
rsqrtps
cld
loope
mov
mov
push
lods
dec
jo
cmp
dec
pop
lods
pop
icebp
mov
mov
fstpl
ret
mov
rcrb
xchg
icebp
or
and
push
cmpsb
insb
mov
repnz
lods
xchg
dec
lods
es
push
into
add
mov
jl
es
or
sbb
fwait
mov
cmpsb
divb
imul
pop
arpl
test
icebp
or
shll
fstl
insl
mov
js
lods
xor
fdivrl
bound
es
inc
push
mov
idiv
adc
loopne
cli
aam
aas
clc
test
lcall
sbb
xor
push
je
xchg
jmp
test
mov
cs
and
popa
jbe
sub
push
ret
sbb
aad
out
pop
adc
xchg
aas
jmp
push
dec
sahf
sub
inc
hlt
push
or
or
or
nop
ret
js
xchg
jno
bound
daa
pop
addb
lods
sub
iret
orb
and
push
dec
cli
int
fwait
rcrb
add
push
scas
aam
and
lahf
xchg
push
or
and
pop
inc
or
stos
mov
mov
push
loop
addb
jl
imul
rclb
repnz
push
fistl
popa
fbld
jg
jno
dec
mov
jns
add
mov
fsubs
lcall
push
cmp
dec
mov
or
int
jecxz
pushf
stc
addr16
and
mov
sbbb
aas
dec
into
pushf
dec
mov
or
adc
fdivrl
jbe
in
movsb
iret
data16
les
test
pusha
out
xchg
cmp
xorb
adc
lods
mov
push
daa
clc
jl
mov
out
sub
inc
pop
fists
inc
aas
and
js
out
clc
icebp
ljmp
xchg
lods
or
pop
stc
mov
xor
in
out
lea
sbb
mov
cld
pop
mov
inc
cld
ds
sbb
pop
shrb
xor
pop
inc
xchg
nop
cld
mov
dec
test
mov
adc
iret
sti
sub
xchg
jmp
scas
adc
scas
dec
mov
and
int3
fwait
add
inc
iret
push
shl
xchg
daa
ljmp
push
push
sbb
data16
cmpl
jecxz
daa
out
insb
xchg
ret
xorb
or
shlb
adc
ret
mov
xor
std
nop
imul
mov
push
mov
xchg
adc
outsl
loopne
sbb
stos
pop
or
hlt
add
shlb
push
sbbb
pusha
out
xor
push
and
in
out
lret
or
dec
lds
or
das
stc
dec
shlb
loope
int
les
ljmp
sbb
clc
ljmp
and
lret
mov
jnp
shll
addb
sub
or
inc
mov
movsb
lods
in
stos
mov
pop
outsb
mov
xor
add
mov
mov
mov
or
jns
adc
das
cli
add
add
cmpsl
js
xchg
sarb
pop
mov
add
xor
sti
push
test
cmp
cmpsb
int3
stos
mov
popf
pop
sbb
mov
dec
xchg
es
xor
mov
jo
arpl
xor
cmp
imul
cmpsb
ret
fdivr
sub
dec
sahf
sarl
mov
pop
insb
sbb
inc
push
push
mov
pop
aas
or
mov
and
mov
sbb
aaa
int3
das
clc
or
repz
lds
nop
cwtl
add
xor
mov
inc
enter
push
es
lret
aas
lcall
push
inc
xlat
mov
xchg
lahf
push
jbe
cmp
cmp
enter
or
je
mov
iret
idivl
cld
mov
dec
les
inc
test
push
call
cld
clc
sbb
xchg
xchg
rcrb
or
rcll
and
pop
test
jnp
cs
cmpsl
fnstcw
and
cld
jg
jns
pop
js
push
sbb
xor
or
pop
sti
dec
rcll
mov
adc
aam
adc
aaa
das
repz
scas
cmpsl
cmp
lds
pop
nop
adc
pop
dec
sahf
push
add
mov
test
mov
mov
sub
jg
sti
stc
bnd
push
outsl
sub
sbb
pop
loopne
aad
sub
rcrl
and
xlat
iret
movsb
test
clc
jns
insl
fnstsw
adc
jg
inc
aam
loope
mov
mov
pop
clc
sub
pusha
xor
xor
xchg
or
out
sbb
aaa
sub
mov
iret
es
push
jbe
lea
int3
imulb
fs
test
or
add
movq
sub
jno
popf
pushf
lock
add
pop
stos
sub
dec
cld
fwait
subb
negb
movsl
jg
xor
stos
mov
and
int
xchg
xchg
mov
aaa
popa
push
and
and
or
lahf
test
es
mov
aam
and
pop
call
xchg
push
aam
iret
dec
loop
popa
lods
jle
and
ss
and
js
pop
out
jge
cld
mov
bound
jp
cwtl
dec
int3
pop
sahf
xor
inc
inc
cld
stc
scas
xor
sbb
repnz
fstpt
out
aam
pop
sbb
cmp
inc
mov
mov
push
fisubs
ja
loopne
sub
xchg
je
lods
stos
mov
dec
sbb
loop
mov
mov
dec
xor
iret
sub
cmc
mov
or
lret
add
jns
or
filds
aas
les
aas
fsubrs
outsl
fprem1
pop
sarb
dec
cmp
sbb
addr16
fidivs
mov
sbb
lock
xor
clc
or
pushf
sub
pop
fstpl
ror
ret
movsl
aad
pop
fcomip
neg
outsl
fs
test
pop
cmp
call
mov
push
pop
popa
add
ds
in
sub
pop
les
pop
cmpb
movsb
pop
mov
std
std
insb
jl
data16
je
inc
test
mov
js
pushf
imul
andb
cli
jae
dec
adc
out
pop
mov
insl
and
or
mov
push
add
xchg
jo
pop
push
icebp
aas
adc
pop
adc
cld
imul
int3
stos
fimull
aam
data16
cmpsb
sub
ss
push
jmp
adc
jmp
mov
or
scas
pop
mov
cmp
sbb
add
ljmp
cwtl
stc
mov
cmc
and
arpl
loope
push
out
xchg
stos
jp
andb
add
jle
inc
test
push
lds
xor
sub
lahf
lea
into
scas
pop
js
into
incl
dec
sub
sahf
adc
dec
xor
dec
loope
mov
cld
mov
iret
pop
jbe
push
sar
std
aaa
loop
shrb
adc
xchg
shrl
stos
cmpsb
shlb
jle
lods
dec
test
pop
loopne
aad
xchg
mov
es
push
loop
cmc
pop
sbb
push
negl
mov
cld
out
xlat
jp
aas
aam
push
out
ret
xchg
scas
cmpsb
mov
fdivl
push
xor
mov
mov
jnp
ljmp
outsl
dec
mov
cmpsb
pushf
test
insl
lods
ret
or
or
loop
adc
dec
in
loopne
test
lahf
movsl
mov
and
rcrb
cmp
add
xchg
cli
loopne
out
jp
jns
arpl
mov
jbe
lock
adc
inc
pop
or
jno
pop
jb
mov
dec
js
pop
addb
push
adc
dec
xor
fscale
pop
add
fnstenv
rcrb
aad
mov
test
sbb
lods
gs
subl
lcall
arpl
inc
movsb
or
push
imull
aaa
clc
in
insb
iret
scas
mov
or
pop
inc
cld
data16
ret
and
repnz
add
inc
or
adc
sub
scas
fdivl
jno
push
test
cmp
pop
sub
sbb
cmc
test
sbb
or
xchg
rorb
and
out
xchg
rol
loope
add
push
lods
es
cmp
and
adc
push
std
xor
push
lds
xlat
daa
mov
cltd
test
std
jmp
inc
xor
adc
add
lods
and
jnp
outsl
lcall
cs
xor
or
adc
dec
cld
pop
sbb
mov
cmpl
cmp
pop
cmc
xor
out
sbb
xchg
jle
pusha
cli
adc
dec
hlt
dec
je
lods
sub
bnd
or
out
xchg
ds
das
cld
enter
stos
sbb
or
sahf
das
in
daa
push
insl
jle
cltd
into
mov
testl
inc
dec
mov
div
jecxz
insb
mov
test
iret
push
jo
sbb
cli
cs
jle
nop
pushf
ja
bound
imul
repz
xchg
add
test
mov
xor
cli
outsl
sbb
mov
icebp
repnz
shll
mov
xchg
dec
or
lods
xor
movb
xor
xor
and
jno
add
or
mov
jg
adc
mov
pushf
in
lsl
mov
ret
je
ret
push
mov
pusha
hlt
aas
pop
sbb
syscall
int3
stc
lret
pop
cld
jbe
add
jl
stc
xchg
clc
mov
clc
mov
mov
fsub
cld
sbb
divb
cli
test
dec
add
mov
cld
repz
movsb
adc
lret
das
aam
mov
ficoml
inc
nop
repnz
mov
jae
pop
fst
addr16
arpl
adc
or
mov
jb
cld
xor
movsl
jp
push
jp
lods
and
pop
leave
or
sbb
cli
inc
sub
xchg
xchg
lods
jp
decb
aad
xchg
sbb
sbb
push
mov
or
push
daa
aas
aas
or
aaa
enter
cwtl
pop
loop
clc
push
enter
lds
decl
aam
cli
frstor
mov
and
push
jae
or
add
fs
cmp
xchg
nop
lods
pushf
mov
pop
call
add
insb
mov
xor
lods
mov
fists
pop
dec
add
push
adc
sbb
pop
pop
call
aas
cmpsl
cmp
sbb
push
pop
xchg
sbb
mov
jl
dec
js
clc
test
mov
jecxz
mov
mov
jg
loopne
rorb
shl
jmp
push
mov
fistpl
pop
iret
and
add
decb
pop
call
shll
ret
jno
stos
pop
jmp
mov
and
sbb
cmp
inc
add
sbb
scas
xor
mov
ret
dec
mov
div
test
mov
pop
pop
xchg
fs
pop
sbb
cmpsb
stos
adc
stos
add
mov
xor
xor
fadds
inc
cmp
sar
leave
sub
dec
sbb
out
and
mov
push
sub
pop
sbb
sbb
outsb
cltd
cmpsb
cmpsb
adc
mov
sbb
push
mov
test
js
pop
or
out
nop
jg
dec
mov
jle
add
int3
fwait
sbbb
ljmp
mov
jp
das
test
aaa
jno
out
ds
inc
and
hlt
xor
push
push
rorl
test
inc
sbb
inc
mov
dec
xchg
jmp
sub
mov
test
orb
cmc
aaa
lock
mov
orb
ficoms
add
std
imul
stos
xchg
cltd
ds
es
jns
test
mov
out
jnp
mov
mov
cmpsb
hlt
scas
clc
into
movb
xchg
cmp
xor
xor
ror
lods
jl
enter
xchg
cmpsl
ss
jne
mov
rorb
mov
pop
subb
cmc
dec
cld
addr16
jno
into
xor
sbb
cmpsb
sbb
jno
dec
cmp
fisttps
mov
popf
cli
add
and
dec
mov
sbb
cld
leave
cli
daa
mov
xchg
xchg
mov
aaa
mov
out
dec
cli
add
out
cli
push
push
inc
push
es
or
in
fildll
std
lds
mov
and
push
inc
add
jecxz
inc
cld
add
scas
mov
mov
push
push
fdiv
pop
xor
aaa
sub
shrl
jg
addl
inc
jne
inc
cmp
popw
sbb
xor
cmp
xchg
addl
push
stos
or
iret
push
cmp
mov
test
push
dec
das
shlb
ret
test
jno
mov
inc
xlat
jg
lahf
fadds
out
sarb
and
inc
cmpsl
jae
mov
mov
add
icebp
clc
fs
xor
movsl
push
test
in
or
cli
push
cs
clc
scas
in
cmc
test
jp
icebp
or
mov
daa
or
ljmp
inc
ret
popa
fbld
xchg
push
fwait
shrb
fdivs
dec
sub
or
cmp
pop
clc
mov
jns
push
jae
jbe
push
inc
mov
scas
xchg
adc
push
add
xchg
mov
dec
dec
arpl
insb
xor
das
es
add
es
pop
cld
int3
mov
sub
filds
xchg
pop
arpl
dec
pop
ffree
sbb
adcl
fadds
aam
into
cmc
outsb
pop
jbe
sub
je
inc
add
xchg
aaa
ja
and
xor
mov
sbb
push
adc
dec
mov
and
pop
mov
cmp
jno
sarl
outsb
aad
push
dec
sub
ss
sti
test
test
aam
adc
xchg
jno
pop
dec
rcr
test
sar
jae
in
data16
mov
jnp
decl
addr16
xor
mov
push
cmpsb
cld
in
and
xchg
ja
aas
shlb
sub
lods
mov
mov
cmp
test
or
lods
and
fmulp
test
push
xchg
sub
xlat
sar
test
push
mov
mov
andl
js
adc
push
ret
or
push
loope
dec
jl
int3
addl
data16
fnsave
aam
and
and
jo
adc
dec
scas
cwtl
aam
and
mov
adc
and
xchg
jge
jmp
mov
lods
mov
out
add
icebp
mov
cli
and
arpl
mov
add
loop
jbe
imul
sub
mov
leave
shll
push
call
inc
dec
mov
sti
leave
lock
cmp
mov
push
inc
push
or
mov
out
xchg
mov
or
jl
test
lods
aaa
repz
jge
in
mov
lahf
mov
jmp
or
jge
xchg
clc
cld
sbb
add
jbe
iret
stc
fwait
dec
cmp
push
test
or
es
aaa
pop
ss
lea
fldl
aam
aas
int
andb
repz
dec
leave
push
mov
sbb
or
pop
dec
xchg
ljmp
sub
je
sub
mov
pop
xor
cld
adc
cmp
add
lock
sbbb
andb
sbb
pop
out
shrb
mov
mov
mov
mov
pop
jl
pop
push
into
push
mov
or
es
dec
cli
loop
shrl
pop
and
ss
movsb
stc
xor
and
jnp
xchg
pusha
out
aad
insl
cld
add
adc
sahf
das
sub
jg,pn
test
cld
icebp
enter
mov
mov
mov
sub
add
inc
out
fmul
dec
incb
addl
push
push
pop
lods
jmp
jecxz
push
les
mov
push
push
xor
aas
sbb
mov
rolb
pop
jno
pop
push
aaa
jge
stos
adc
mov
lcall
es
out
pop
mov
xchg
push
pop
push
dec
mov
cld
adc
aad
mov
jo
test
test
lock
pop
mov
xor
mov
and
push
lahf
stos
xchg
fisttps
rol
loopne
pushf
clc
xor
adc
popa
loopne
repz
adc
sub
mov
test
push
add
subl
inc
add
fs
add
nop
push
add
add
add
xchg
sar
sti
aaa
ljmp
inc
push
adc
jae
gs
push
imul
outsl
lret
xor
outsl
jae
dec
popa
outsb
fs
sbb
popa
jge
addr16
inc
cmp
je
jb
jne
dec
outsb
outsw
and
das
sti
cwtl
cmp
imul
popf
insl
jbe
jb
outsl
data16
sbb
test
mov
inc
jb
jb
popa
inc
adc
inc
mov
bound
arpl
arpl
outsl
jne
sbb
push
adc
gs
imul
jne
lods
insl
or
push
data16
popa
xor
lahf
addb
gs
jae,pn
and
fwait
cltd
adc
nop
ja
cmp
insl
bound
lock
outsw
out
rcll
dec
dec
dec
push
jo
insb
insb
jp
or
imul
push
inc
outsb
jbe
cwtl
outsb
insl
dec
xchg
shll
xorl
ss
fbld
mov
ss
outsb
xor
jo
sti
ret
dec
cwtl
rcr
outsl
fs
stos
inc
test
mov
push
pop
push
pop
sbbl
sub
js
push
add
add
fldenv
xor
mov
aas
lahf
mov
rcll
push
fnstsw
out
dec
gs
insl
push
les
notb
data16
mov
insb
into
pop
in
push
into
rcll
stos
into
adcb
cmp
fsubrl
enter
sbb
adc
jp
pop
int3
jl
subl
inc
movsb
loope
insl
xchg
fdivrs
jle
int3
push
pop
shl
and
jo
inc
arpl
dec
pusha
int
ss
mov
bound
add
add
inc
or
std
sub
adc
and
cmp
aas
or
fbld
add
xor
fwait
divb
gs
add
cmp
xchg
aaa
mov
jnp
or
orb
sahf
js
xorb
jo
sbb
scas
sbb
mov
ret
mov
clc
push
insb
mov
scas
js
scas
inc
dec
xor
jnp
dec
add
and
adc
enter
sbb
dec
pop
dec
inc
shrb
fs
int
pushf
fmull
push
inc
jae
repz
fdivl
push
xlat
orb
jbe
jle
inc
push
push
pop
loope
ds
pusha
dec
dec
and
mov
or
push
add
push
enter
push
fldl
cmpsl
loope
and
data16
jo
and
xor
and
mov
pop
inc
ss
das
jecxz
or
push
dec
xchg
and
add
add
inc
add
inc
xchg
push
pop
add
jmp
nop
nop
nop
nop
nop
nop
nop
mov
inc
mov
inc
add
jne
mov
sub
adc
jb
mov
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jb
dec
add
jne
mov
sub
adc
adc
jmp
add
jne
mov
sub
adc
adc
jmp
xor
sub
jb
shl
mov
inc
xor
je
sar
mov
jmp
add
jne
mov
sub
adc
jb
inc
add
jne
mov
sub
adc
jb
add
jne
mov
sub
adc
adc
add
jae
jne
mov
sub
adc
jae
add
cmp
adc
lea
cmp
jbe
mov
inc
mov
inc
dec
jne
jmp
mov
add
mov
add
sub
ja
add
jmp
pop
mov
mov
mov
inc
sub
cmp
ja
cmpb
jne
mov
mov
shr
rol
xchg
sub
sub
add
mov
add
mov
loop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
nop
pop
dec
add
pusha
inc
