pop
insb
gs
fs
je
and
and
insl
pop
add
add
testb
add
adc
push
push
push
call
test
je
push
push
push
push
call
test
je
cmp
je
push
call
push
movl
call
jmp
push
call
push
mov
push
call
leave
ret
pop
push
outsl
outsl
jae
popa
jns
and
and
jae
bound
outsb
and
imul
and
fs
insb
pop
add
in
pushl
pushl
call
call
leave
ret
pusha
push
mov
mov
mov
push
push
push
call
test
je
push
push
call
test
je
lea
mov
mov
cld
rep
mov
mov
mov
push
mov
mov
add
push
mov
rol
pop
push
mov
rol
pop
add
add
mov
loop
pop
mov
lods
xor
stos
pusha
push
call
popa
loop
pop
push
call
popa
ret
pop
arpl
jb
fs
imul
and
je
jb
jb
jae
pop
add
in
add
pusha
mov
nop
nop
nop
nop
nop
nop
add
push
push
pushl
pushl
call
test
je
mov
push
mov
mov
mov
cld
rep
pop
push
xor
mov
add
mov
add
mov
add
pushl
push
push
call
add
loop
pop
mov
add
jmp
popa
leave
ret
push
mov
pusha
mov
mov
mov
cld
rep
popa
leave
ret
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
mov
xor
mov
and
addl
not
mov
jmp
filds
jge
cltd
ret
lcall
pop
add
pop
mov
add
add
sbb
imul
inc
lds
inc
inc
inc
sub
xor
mov
lret
jns
test
stc
loopne
lods
mov
pop
lcall
nop
mov
jae
nop
adc
jmp
frstor
adc
adc
lret
jae
cmp
xlat
xor
sti
push
cmp
or
notl
inc
enter
add
stos
int
add
dec
lahf
adc
mov
xor
jmp
adc
adc
sub
cld
xchg
jmp
add
add
aad
pop
movb
xor
lods
dec
jge
aaa
icebp
pop
idivl
add
mov
out
cltd
add
iret
mov
xchg
add
aaa
pop
shlb
mov
add
pop
mov
push
movsb
add
add
pop
xchg
xchg
loope
add
add
add
add
sub
add
inc
add
addb
add
add
add
add
add
add
add
add
call
add
addb
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
or
add
add
js
add
test
add
or
inc
add
push
add
push
add
inc
add
push
add
add
add
outsl
add
push
add
add
add
add
add
popa
add
and
dec
add
insb
add
add
add
add
add
popa
add
and
add
outsl
add
add
jns
add
add
add
add
add
add
add
imul
addb
add
add
add
je
inc
add
adc
add
add
add
add
add
add
add
add
add
insl
add
add
or
dec
add
and
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
imul
add
add
add
add
add
add
add
or
add
incl
add
arpl
imul
add
add
add
add
add
add
add
imul
add
sub
add
mov
add
mov
add
add
or
add
add
loopne
add
add
add
add
add
jae
mov
jnp
xchg
add
mov
jnp
mov
imul
jae
test
test
add
xchg
add
xchg
add
test
test
add
jnp
imul
imul
pop
enter
pop
in
push
mov
mov
add
add
add
inc
or
jmp
adc
sbb
add
verr
add
cmpsb
add
xchg
add
pop
les
dec
cmpsl
fldl
xorl
add
add
push
add
sbb
add
js
add
mov
add
dec
push
add
inc
add
test
add
xchg
jge
jecxz,pt
add
push
add
jbe
add
pop
add
jb
add
jmp
mov
add
push
mov
add
dec
stc
add
scas
add
ret
sbb
ficomps
add
std
add
jl
add
xchg
test
jecxz
int3
add
mov
test
lds
mov
mov
add
mov
add
orl
mov
add
pop
int
jl
repz
fwait
add
int3
add
mov
ret
push
mov
push
sbb
int
faddl
out
stos
add
loope
add
or
add
dec
rolb
hlt
dec
pop
add
inc
cwtl
add
add
add
mov
pop
adc
add
out
and
call
cs
add
mov
add
lea
mov
movl
int3
cwtl
push
add
shll
add
sub
add
cld
addb
adc
add
mov
and
sbb
inc
add
adc
add
in
mov
add
test
add
mov
add
roll
test
lods
add
or
jno
test
lea
rolb
bound
add
pop
popf
add
or
pop
add
cmp
add
fisubrl
add
loope
add
inc
add
fsubl
add
inc
add
mov
mov
add
or
add
adc
std
mov
lret
add
pop
in
add
cli
dec
add
rolb
lret
js
mov
add
inc
add
loope
mov
jno
add
lea
add
mov
sbb
add
ret
jp
add
and
adc
jge
dec
and
add
xor
add
out
push
add
or
add
sbb
jno
daa
add
inc
pop
add
popf
mov
inc
inc
roll
or
add
and
xorl
and
push
cmp
add
outsb
add
mov
add
js
add
xlat
ja
test
ja
add
sahf
add
mov
mov
sbb
xor
xchg
mov
je
mov
inc
mov
in
mov
add
add
add
incw
data16
cltd
incw
int3
incw
jmp
add
cltd
incl
xor
incl
cltd
cltd
incl
int3
cltd
incl
lcall
incl
xor
incl
data16
incl
cltd
int3
incl
int3
int3
incl
dec
incl
add
incl
xor
incl
data16
incl
cltd
incl
int3
incl
cmp
shll
sbb
jle
dec
fsubrl
pop
cmp
lods
cmp
jbe
fcompl
inc
push
jmp
or
or
aaa
stos
mov
push
sbb
adc
add
pop
aam
xchg
xchg
insb
loop
add
push
sbb
pop
mov
cltd
and
movsb
mov
xorl
mov
and
dec
lret
pop
adc
add
mov
push
xchg
cmpsl
or
mov
xor
mov
ret
aas
clc
imul
scas
imul
dec
adc
ljmp
dec
dec
add
lods
mov
rcr
add
addr16
cld
mov
lock
or
inc
sti
jle
xchg
inc
and
or
mov
xchg
pop
imul
outsb
sbb
fsub
into
jo
cmc
and
sarl
std
and
mov
jmp
xchg
lea
jg
in
inc
sbb
sarl
sbb
fsubs
sti
jae
loop
rclb
and
lret
add
mov
cmpsl
out
xchg
dec
shrl
xchg
sub
xor
inc
leave
inc
sbb
add
sbb
jo
mov
adc
stos
mov
jne
jne
adc
popf
cwtl
sbb
jo
mov
fs
in
es
ja
xchg
les
mov
and
inc
pop
adc
aad
in
add
fnstsw
and
in
mov
pop
inc
mov
cmpb
mov
in
aam
ja
inc
ljmp
sub
in
mov
sbb
add
enter
loope
inc
pop
push
mov
push
push
lret
cmpsb
push
pop
or
and
mov
pushf
dec
dec
enter
and
shlb
xchg
fldcw
xlat
inc
mov
ret
call
xchg
ja
daa
lds
jmp
push
cmc
mov
cs
fs
loop
popa
and
or
sbb
jno
mov
jns
pop
adc
push
rcr
pop
jne
scas
and
iret
mov
sbb
pop
jmp
cmp
fidivl
lea
aad
test
stc
sbb
and
out
rcl
jecxz
fsub
sub
popa
xchg
pusha
cltd
sbb
mov
mov
mov
insb
push
cmp
or
stos
out
je
outsl
inc
pop
bound
insb
or
dec
mov
or
xor
mov
jno
roll
add
mov
dec
mov
mov
imul
push
jecxz
cmp
adc
lcall
push
decb
and
jmp
sbb
ret
add
aam
mov
into
test
dec
push
mov
sub
or
loope
mov
pop
sbb
sub
je
mov
and
mov
mov
mov
ret
fdivs
mov
ret
push
xor
jmp
sub
shll
test
sub
inc
xchg
and
xchg
fsts
dec
dec
inc
pop
or
and
popa
and
call
mov
fprem
mov
xor
and
mov
dec
lahf
imul
xor
lea
sbb
or
sbb
scas
mov
mov
filds
push
xor
add
fnstenv
mov
dec
mov
dec
add
xlat
or
fstps
xchg
sbb
xor
aad
mov
daa
xor
mov
add
push
ljmp
jle
orb
push
add
inc
addr16
mov
pop
pop
andb
jge
and
jg
repnz
mov
aas
mov
mov
inc
push
jl
out
es
xchg
stc
xor
and
push
sub
or
pop
xchg
xor
shlb
jmp
xlat
mov
and
jle
xlat
outsl
dec
dec
jbe
rcll
inc
mov
and
cs
xchg
sbb
sbb
test
push
cli
push
mov
sub
scas
repnz
or
add
mov
dec
push
xor
shll
lods
nop
jmp
sti
xor
loope
dec
cmp
sub
add
cmp
jb
xor
or
pusha
jbe
cmp
sub
push
mov
and
fucomip
sbb
mov
sub
repnz
clc
pop
mov
ja
fsubr
stos
lods
mov
inc
mov
pop
into
scas
sahf
xor
gs
mov
mov
movsb
or
mov
xlat
movsl
mov
aas
push
jmp
xorl
loopne
orl
popa
pop
jnp
pushf
pop
push
or
add
pushf
inc
stc
mov
nop
dec
icebp
jle
dec
jg
fs
dec
pop
xor
test
out
add
imul
push
popa
bound
bound
scas
push
dec
dec
mov
dec
les
jp
cmp
and
data16
sub
in
lods
mov
aam
pop
shlb
les
cmc
movsb
dec
pop
xlat
inc
fsubrs
movsl
push
pusha
xchg
ret
stos
pop
montmul
cmpsb
ret
or
cs
mull
xchg
xchg
inc
adc
in
fistl
clc
lods
dec
push
adcl
cmp
and
push
btr
gs
aam
xchg
mov
cmp
add
mov
in
cmp
jmp
cmp
fsubl
mov
and
pop
xchg
pop
repnz
scas
cwtl
dec
sub
or
mov
cmpsl
or
dec
jle
mov
inc
loopne
mov
push
int3
mov
inc
into
mov
int3
repnz
lcall
cmp
or
mov
fadds
out
or
enter
xor
add
int
loop
and
pop
sbb
dec
popw
popa
rcll
xchg
jg
and
xor
or
inc
dec
pop
repnz
or
hlt
je
adc
cmc
cld
out
mov
mov
push
es
pushf
push
cmpb
ficoml
and
call
push
xchg
fsubr
mov
pop
mov
add
das
dec
fcmovnu
and
jle
push
rcrb
cmp
rcrl
push
shl
popa
daa
jge
subb
xchg
sbb
enter
mov
pop
mov
xor
push
add
sarb
mov
hlt
xchg
hlt
mov
jmp
push
jnp
inc
in
jb
jecxz
dec
mov
sahf
mov
out
das
pop
popa
mov
xchg
xchg
adc
popf
jb
stos
mov
sbb
ja
icebp
jl
dec
lds
loope
cmp
out
daa
ret
cld
leave
lret
out
sbb
dec
mov
dec
sub
pop
iret
cmpsb
iret
sub
mov
dec
sub
sbb
cwtl
test
adc
les
push
jns
push
pop
mov
jl
jb
and
sti
or
dec
mov
jne
inc
in
out
and
and
test
addl
cmp
dec
lock
fstpl
ret
jno
gs
repz
mov
hlt
cltd
pop
xor
jmp
add
adc
enter
frstor
and
std
or
aaa
dec
test
and
stc
pop
mov
test
std
repz
imul
inc
pop
dec
popf
inc
test
int3
les
inc
push
or
into
clc
sub
xorb
push
adcl
jle
jp
repnz
stc
popa
mov
not
gs
pop
test
mov
pop
dec
or
insb
repnz
and
test
or
fimull
push
sbb
nop
inc
and
test
popa
adc
inc
daa
add
jp
dec
frstor
bound
lock
dec
mov
andb
or
fcmove
cwtl
dec
mov
or
out
fs
jecxz
pusha
or
push
std
xchg
pusha
inc
inc
push
push
mov
fiaddl
cmpsl
mov
push
iret
outsb
or
pop
aam
mov
sub
sbb
cmc
mov
jae
cmc
mov
pop
nop
mov
pop
loop
sub
push
sbb
lods
sub
sbb
test
in
sbb
std
sti
jle
or
jge
insb
jecxz
and
xchg
popa
popa
sub
rorl
dec
notl
rcrl
iret
xorps
lret
insb
cmp
stos
fs
jecxz
fistps
cli
pop
lock
test
mov
pop
ret
repz
jle
adc
out
movsb
int
out
ret
lret
xchg
cwtl
inc
xorb
xchg
bound
and
insl
imul
push
sbb
les
add
outsb
push
push
loopne
dec
jmp
fnsave
enter
mov
shr
std
cli
inc
sbb
in
pop
jb
hlt
scas
jl
subb
fiaddl
xor
pushf
rcl
xor
leave
jecxz
test
in
mov
mov
repnz
dec
cmp
xor
mov
or
add
push
add
repz
add
cltd
pop
sub
scas
fnsave
lahf
push
rcrl
jb
dec
or
mov
add
je
jge
push
sub
rclb
or
ret
aam
or
cli
inc
loopne
cli
popa
orl
ds
fsubr
scas
out
mov
out
pop
call
xchg
rcrl
mov
xor
cmp
scas
cld
inc
and
icebp
test
cmc
xchg
mov
add
pop
mov
roll
lret
inc
push
pop
dec
cltd
mov
ret
arpl
std
sub
gs
sbb
mov
sub
loope
int3
outsb
push
jp
in
adc
and
push
xchg
and
cwtl
push
insl
mov
fnstsw
negl
int
in
movsl
adc
cld
shl
cwtl
adc
pop
fs
and
or
sub
daa
push
dec
test
pushf
or
hlt
loope
imul
pop
push
sti
lea
jp
fndisi(8087
mov
cmp
imul
cmp
mov
roll
mov
adc
sarl
rorb
jno
push
xor
enter
sub
test
in
push
and
add
dec
in
sbb
in
enter
pop
movsl
pop
fstps
mov
sbb
cmpsl
aam
leave
fldenv
daa
popf
sbb
jmp
sub
stc
ja
sbb
jns
addr16
mov
fadds
es
pop
in
in
push
movsl
rorb
dec
xchg
stos
cmp
sub
or
dec
xchg
repz
loope
inc
inc
leave
out
cltd
add
jno
mov
pop
mov
jp
jge
push
out
repnz
sbb
jmp
bound
push
outsb
sbb
nop
aas
clc
lcall
insl
hlt
ret
pop
out
scas
lea
aas
inc
cmp
xchg
hlt
rcrl
cld
or
rol
std
mov
dec
or
insb
sub
inc
jg
imul
jmp
pop
idivl
aaa
dec
leave
push
mov
push
int3
out
adc
cmpsl
popl
add
add
fs
jp
cld
hlt
adc
sbbl
mov
sbb
dec
sbb
add
inc
lock
inc
jmp
in
add
xchg
xchg
and
mov
scas
sub
dec
test
push
lods
les
out
xchg
and
mov
fsubrs
mov
cmp
mov
xor
xchg
jecxz
insl
lahf
outsb
jp
add
sbb
ret
daa
mov
cwtl
ret
shl
sarl
and
leave
loop,pt
out
mov
sbb
push
xchg
call
xchg
mov
aas
ja
mov
adcb
repz
pop
outsl
shr
push
mov
pop
cwtl
mov
pop
out
mov
xchg
inc
js
dec
ljmp
lcall
and
cmp
aas
pop
mov
mov
cli
into
fcmovnu
test
imul
jecxz
pop
inc
imul
lods
decb
aas
cs
adc
jne
sarb
add
inc
insl
fldl
mov
test
and
fstpt
data16
cld
jg
pop
cmp
dec
inc
push
and
pop
mov
mov
popf
push
popa
fwait
xor
ret
push
js
xlat
xchg
sub
cmp
imul
adc
outsl
xrelease
cmp
cmp
mov
fs
jmp
pop
pop
xor
cmp
leave
daa
dec
add
jmp
mov
roll
ljmp
dec
imul
mov
lea
popa
mov
jmp
sahf
lock
imul
divl
or
mov
popa
xchg
cwtl
sbb
and
or
mov
cwtl
jmp
push
xor
in
pop
xlat
xchg
sub
sbb
xor
popa
lret
test
mov
pop
sub
xlat
imul
outsl
int3
repz
mov
mov
xchg
cs
js
cs
add
sbb
mov
xor
rclb
mov
push
scas
push
mov
loope
arpl
fldl
xor
enter
bound
fnstsw
cmc
arpl
ret
stc
xchg
adc
out
push
adc
pop
insl
mov
in
or
mov
xchg
add
icebp
dec
mov
lods
push
or
out
in
dec
mov
xchg
rcll
jbe
xor
test
jl
adc
ret
cmp
sahf
int
insb
mov
push
call
ljmp
pop
fisttpll
rorb
mov
push
aam
adc
inc
fisubl
cmp
lock
xchg
fwait
xchg
ret
inc
frstor
xor
mov
dec
in
xchg
pop
xor
dec
sbb
dec
loopne
lcall
cmp
daa
stos
inc
decb
push
mov
sahf
fiaddl
mov
push
loope
and
loope
adc
jnp
sub
cmp
adc
testb
and
bound
cs
iret
dec
les
adc
ds
loope
mov
jl
lahf
into
lcall
popa
xchg
add
cmc
mov
into
or
lret
enter
mov
mov
cmpsb
andb
xor
roll
pop
jne
cmpsl
dec
cs
sub
loop
pop
jecxz
push
ficoms
ss
enter
popf
and
xor
in
addr16
cmp
sbb
and
pop
mov
jbe
mov
fmull
cmp
pop
mov
lret
clc
add
pop
jno
fcoml
dec
mov
lret
xchg
mov
stos
out
mov
fucomi
testl
iret
loope
repnz
jp
push
mov
push
sub
int3
pop
xchg
outsl
fidivl
xchg
cmp
push
ret
addr16
xor
fdiv
hlt
push
leave
sub
mov
xorb
ds
aam
repz
jns
sbb
arpl
mov
mull
aam
cld
scas
pop
cs
and
std
daa
or
dec
not
les
xchg
loopne
aam
stos
test
push
adc
popf
push
cmpb
sub
in
or
fnstsw
inc
or
pop
sti
sbb
mov
rorl
sub
imul
sbb
and
inc
mov
cld
sahf
jno
jmp
mov
pop
insb
and
fstps
mov
mov
dec
xor
scas
je
inc
rcrb
mov
out
aad
pop
clc
in
decb
push
adc
and
and
adc
mov
dec
add
inc
data16
out
mov
cmp
push
sbb
push
fisubrl
mov
mov
jns
mov
es
test
inc
sarb
xorb
in
jl
outsl
int
loopne
hlt
jmp
aad
hlt
and
push
sbb
xchg
lods
insl
pushf
nop
rcrl
std
pop
mov
cmpsb
add
or
or
push
and
inc
or
imull
subb
sbbb
mov
pop
out
repnz
push
or
sbb
mov
repnz
mov
push
add
pop
sbb
repz
mov
fistl
inc
adc
fbstp
jp
jmp
lods
xor
pop
sbb
xchg
xchg
dec
mov
mov
icebp
not
cmp
fadds
pop
gs
aaa
jns
inc
add
push
xorb
testl
sar
sarb
push
dec
adcl
je
fsub
fcompl
add
jo
xor
sbb
stos
dec
jle
les
xchg
stos
lods
enter
push
popa
cltd
insb
pop
and
mov
dec
pop
jp
aam
push
or
adc
and
jb
adc
dec
dec
sub
popa
sti
jno
mov
movb
test
pop
mov
je
icebp
dec
call
aam
jb
out
cli
lock
inc
inc
mov
mov
or
add
push
lret
pop
pop
movsb
outsl
inc
je
popa
lret
std
or
test
pushf
sub
xorl
movsl
push
ret
clc
sqrtps
pop
stc
xor
test
stos
push
nop
pop
sahf
push
xor
jno
out
mov
cli
fdivs
mov
pop
imul
xorl
fwait
mov
add
aaa
add
sbb
in
sahf
fwait
mov
test
add
mov
scas
xor
bound
dec
sbb
xchg
fsubp
mov
push
push
jnp
dec
pusha
pop
stc
cmp
sub
sbb
xor
lret
push
fcmovnu
imul
push
enter
rorl
sub
mov
push
mov
xor
lods
movsb
dec
addb
cli
pushf
push
sbb
incl
inc
es
popf
dec
or
add
push
pop
pop
mov
and
and
mov
insl
jno
insl
sbb
sub
mov
xchg
icebp
mov
inc
sbb
jns
and
push
shr
aas
mov
jb
lret
ljmp
adc
pushf
lret
pop
neg
pushf
fiaddl
and
out
jecxz
out
pop
jl
mov
lds
stc
iret
jle
cld
push
test
stos
ss
pop
addr16
cld
repnz
mov
rcrl
scas
or
jmp
xchg
mov
mov
adc
ret
aaa
movsl
adc
mov
sbb
adc
lods
es
push
xor
hlt
hlt
mov
mov
jle
leave
in
shl
jl
mov
sbb
incl
push
ret
dec
jmp
mov
test
xchg
shl
jecxz
jl
daa
test
outsb
or
cmpl
lahf
push
sbb
hlt
pusha
dec
les
js
inc
pop
idivb
pop
test
test
mov
bound
imul
and
and
aad
jmp
lods
sub
xchg
popf
push
repnz
imul
sbb
out
adc
test
fstl
cmp
and
adc
int3
ret
hlt
mov
push
leave
neg
inc
mov
mov
scas
cmp
mov
ljmp
mov
shll
inc
aaa
loope
jo
nop
push
pop
push
fnsave
sbb
sbb
push
xchg
cmpsb
jg
fsubl
xor
cmpsb
mov
outsl
pop
test
or
jno
sub
fstps
xor
aas
ret
fldl
and
pop
sarl
add
cmp
xlat
scas
jne
xor
mov
sti
pop
mov
cmp
and
fwait
adc
push
xor
pushf
jo
mov
test
mov
test
pop
ljmp
and
sbb
push
xchg
mov
adc
jl,pn
rolb
xchg
les
jg
jle
adc
imul
popa
int
mov
ja
sub
xchg
sub
popf
inc
mov
femms
mov
aaa
dec
in
dec
jecxz
adc
mov
outsl
aad
inc
out
clc
adc
call
jb
dec
xchg
cmp
jne
lods
shl
scas
push
lret
jo
mov
enter
lret
dec
and
sub
cs
mov
lock
incb
push
push
mov
aaa
jb
js
sbb
insb
sub
add
and
fcmovnu
pop
push
dec
add
cmp
mov
sub
mov
cwtl
cmp
xor
mov
aaa
ret
loope
imul
mov
pushf
add
dec
ret
cmp
dec
fisubl
jns
loop
dec
push
push
jae
lret
cmpsl
add
pop
je
jnp
mov
xor
inc
pop
iret
cmp
pop
es
xchg
popa
fcomps
fadd
or
push
shrl
int3
pop
jne
clc
cmp
das
mov
ja
stc
out
enter
add
inc
sub
pusha
jnp
hlt
mov
pop
insb
and
mov
cwtl
sbb
jo
xchg
fnstsw
pop
idivl
sbb
pusha
fsubrl
test
jns
subb
or
jecxz
insl
jmp
jle
adc
sub
int3
clc
mov
popa
in
mov
dec
adc
and
data16
insb
dec
add
divb
and
lret
mov
sahf
xor
std
pop
aad
test
fbld
add
inc
loopne
cmp
cmp
jo
cmp
nop
test
jno
push
dec
pop
popa
stos
mov
adc
add
sub
imul
lods
outsb
int3
gs
push
pushf
adc
sahf
jnp
pop
lods
fiadds
dec
loope
orl
jno
negl
lds
pushf
cmc
lock
jp
push
gs
cwtl
js
sub
int
lock
xchg
ljmp
fsubs
sbb
lods
and
sbbl
shrb
fdiv
nop
add
out
and
jge
jg
xor
stc
or
add
add
aad
and
add
mov
cmc
sbb
xchg
adc
ret
or
pop
movsb
inc
loop
stc
xchg
dec
insl
repz
movsb
mov
stos
pop
dec
cmp
pop
adcl
in
in
xor
imul
adc
or
pop
mov
ret
cs
jne
or
add
pop
mov
and
xchg
pop
xchg
push
insb
lods
jmp
xor
mulb
stos
xchg
sub
mov
sahf
xor
xor
mov
loop
pop
mov
sub
xlat
mov
dec
lret
das
icebp
into
call
je
and
fisubs
and
jge
mov
jl
js
sub
cwtl
ja
mov
sub
shlb
sub
lret
lea
ljmp
jns
pop
inc
cmc
gs
push
xchg
xchg
fsubs
clc
adc
and
push
pop
dec
jecxz
mov
adc
lcall
or
lahf
or
rcrl
imul
in
aaa
out
jecxz
movsb
sbb
out
imul
jg
pop
mov
xor
cmpsb
jge
pop
sub
push
arpl
popa
jnp
pop
rclb
iret
into
orl
rolb
pop
cmp
inc
std
inc
mov
or
and
xor
pop
dec
pop
mov
xor
xor
adc
sahf
mov
enter
xor
outsl
test
cmp
int
pushl
push
adc
pop
fldlg2
sub
xor
std
jle
arpl
jnp
sbb
dec
jno
nop
shlb
dec
out
mov
lret
xchg
notl
xor
addl
into
dec
xchg
add
aam
scas
sahf
cmp
dec
sbb
push
add
add
pavgb
cmp
dec
cwtl
mov
cmpsb
pop
jg
insb
aas
jmp
repz
sbb
add
pop
pop
dec
xchg
hlt
cmp
lahf
inc
or
jge
mov
movsb
bound
xor
mov
outsl
call
dec
inc
mov
adc
push
push
cltd
cmp
sub
or
imul
mov
mov
xchg
hlt
aad
sub
sub
les
add
or
loopne
and
fbstp
push
loopne
jb
pop
fstps
sti
data16
jb
push
cmc
jns
cmpsb
xor
int
lahf
gs
push
add
cwtl
xchg
pop
add
test
sbb
aaa
jne
push
sbb
push
pop
cmp
ss
xor
dec
pushf
stos
xchg
popa
and
fucom
cmc
ret
and
pop
cmpsl
lahf
lods
adc
add
pop
mov
jb
jge
and
inc
fincstp
fistpl
dec
jmp
das
aas
ret
out
mov
inc
cmc
dec
and
xchg
dec
mov
imulb
lret
dec
inc
xchg
iret
mov
cmpsl
repz
lds
fcompl
pop
sbb
sbb
xor
in
sub
out
test
adc
mov
mov
mov
cmpsl
mov
dec
sarl
pop
outsl
cmp
cmp
jno
cmp
mov
sub
push
fcomps
mov
cld
aad
or
or
add
and
outsl
mov
in
das
xchg
mov
pop
xlat
nop
mov
pushf
inc
xchg
or
dec
sub
mov
call
inc
lods
push
jle
add
mov
das
adc
sbb
jmp
or
sub
arpl
test
fnclex
in
sub
stc
and
call
dec
xor
dec
iret
add
mov
sub
and
int
adc
shl
add
dec
mov
ljmp
in
inc
mov
cmp
js
leave
mov
push
in
push
jne
mov
mov
pop
aad
dec
pop
or
sub
xor
jl
jge
sbb
int3
xor
inc
stos
cmp
addr16
daa
fidivl
fcompl
es
sub
addl
aad
fistl
push
push
and
les
fimull
and
sbb
xor
push
ja
jno
ss
pushl
and
les
sub
out
sub
out
adc
add
pop
into
mov
inc
jg
iret
imul
inc
xchg
or
repnz
cwtl
pushf
push
push
rcll
shrd
inc
xchg
or
fisubrl
std
sarb
xchg
cwtl
sar
push
or
pop
sbb
shr
lahf
or
lock
mov
jne
cmc
sub
dec
test
pop
call
pop
leave
sbb
sub
inc
pop
mov
pop
dec
pushf
push
in
and
pop
jb
xchg
ja
sbb
cs
and
and
cli
arpl
mov
cmp
push
push
sub
imul
in
ja
idiv
inc
iret
fsubrl
je
imul
fwait
push
pop
xchg
add
leave
ud1
mov
test
dec
mov
sahf
lods
pushf
push
popa
scas
daa
xor
add
jns
mov
inc
dec
mov
into
insl
addr16
rorl
add
popf
divl
push
xchg
and
mov
ret
fmull
shlb
cmpsb
mov
xor
clc
push
cltd
add
scas
lock
cmp
pop
rcr
lret
test
mov
push
mov
mov
sbb
xchg
dec
stos
lahf
out
inc
jae
test
mov
inc
and
popf
sub
or
xor
inc
pop
jge
outsb
cmpsl
dec
adc
mov
jg
das
dec
cmc
addr16
lret
inc
test
mov
jb
xchg
or
idivl
mov
aad
rolb
sahf
mov
loope
outsb
cmp
dec
clc
leave
sub
mov
pop
sbb
and
mov
sub
clc
mov
mov
cmp
pop
dec
fmuls
imul
and
add
dec
mov
lret
mov
es
movsb
lods
adc
mov
mov
pop
ret
or
jge
in
mov
hlt
je
mov
repnz
insb
mov
loopne
test
insl
data16
repz
sub
cmpsl
subb
xor
mov
cmpsb
gs
hlt
or
es
jnp
mov
fcompl
sbb
push
push
mov
inc
jno
out
mov
dec
adc
imul
and
leave
mov
hlt
mov
xchg
fdivr
sub
mov
dec
xlat
xchg
sbb
imul
pop
in
xchg
or
mov
mov
aaa
pop
xor
inc
jnp
mov
pop
inc
fstl
or
es
dec
push
lea
cmp
mov
jb
pop
jbe
stc
notl
push
push
outsb
xchg
sbbb
xchg
aam
sbb
pop
mov
mov
scas
inc
fldenv
cmc
mov
in
out
push
mov
or
das
xor
loop
iret
data16
lcall
jle
cmp
cs
fsubrs
loope
out
loope
daa
cltd
insl
mov
cmp
jo
rorb
xor
js
stos
imul
insb
and
roll
sbb
ret
fimuls
add
mov
jo
popf
sub
imul
xor
loope
pop
daa
dec
lret
sahf
lahf
lahf
adc
xchg
pop
jl
adc
push
mov
mov
mov
mov
push
mov
test
and
push
iret
test
loopne
pop
ljmp
cmp
mov
or
and
nop
cwtl
int
les
sub
out
xchg
xor
sbb
xchg
frstor
test
jnp
sub
insl
add
test
push
sbb
das
cmovb
fisttpl
push
decl
or
fsubrs
stos
pop
decl
jae
sti
pop
cmpsb
adc
jl
dec
xchg
dec
push
push
mov
mov
movsl
loop
lcall
dec
mov
pop
or
and
dec
leave
push
jl
mov
xchg
dec
xor
dec
hlt
shll
xor
xor
ss
loopne
push
xchg
loopne
sahf
cmp
push
push
movsl
and
adc
push
sub
mov
mov
fs
sub
mov
mov
lock
push
jbe
fwait
test
jne
xchg
push
dec
add
or
pop
add
inc
push
jo
xchg
adc
dec
jae
mov
pop
mov
adc
inc
sub
loop
and
mov
lock
ss
and
out
push
insb
cli
mov
dec
insb
cld
xor
leave
sbb
and
ds
ds
test
jge
adc
jmp
jbe
dec
js
adc
mov
jecxz
pop
mov
xchg
xchg
and
insl
mov
mov
in
adc
inc
mov
push
xchg
or
adc
mov
clc
inc
inc
sar
aaa
jb
mov
dec
mov
pop
inc
addl
sbb
sub
jb
daa
clc
idiv
adc
sbb
push
mov
xchg
mov
adc
dec
mov
push
lret
fisubrl
pop
mov
mov
jo
fwait
sbb
xor
movsb
rcrl
cmc
int3
mov
push
jo
aad
push
dec
cwtl
mov
jo
inc
or
and
sbb
pushf
gs
mov
adc
mov
cmc
loope
mov
xchg
stos
push
and
sbb
xchg
loopne
push
movhlps
enter
pop
mov
jbe
aam
leave
pop
and
pop
dec
lcall
xor
push
mov
add
scas
xchg
out
lcall
inc
aad
sub
mov
rolb
dec
push
in
hlt
daa
nop
sbb
scas
pusha
cmp
call
dec
lahf
mov
repnz
arpl
out
pop
pop
clc
fnsave
inc
loop
scas
lds
xlat
mov
mov
pop
sub
pop
aas
xor
out
sbb
out
mov
xchg
sub
mov
pop
push
loopne
aas
push
fistpl
fimuls
mov
es
cmc
dec
sbbl
sbb
stos
mov
push
inc
mov
xchg
pop
ja
jmp
popa
pop
aad
or
mov
jb
jmp
add
ss
sbb
js
cmp
aas
je
mov
mov
sbb
out
mov
or
in
xor
test
jg
rclb
push
fidivrs
dec
mov
adc
cmp
repnz
mov
pushf
pop
mov
push
dec
mov
mov
divb
clc
cmp
imul
lds
xor
sarb
xchg
pop
mov
lods
mov
sub
in
xlat
inc
inc
mov
gs
xchg
add
dec
xor
or
pop
ret
sub
mov
push
xor
add
and
bnd
int
iret
hlt
dec
das
sub
or
fwait
jg
add
pop
push
xchg
add
ret
pop
jecxz
push
lock
fdivs
insb
lock
imul
add
mov
jo
cmp
adc
add
cmpsb
fsts
mov
and
mov
pop
fimuls
xor
aam
xlat
mov
dec
sub
nop
dec
movsb
leave
sbb
push
cmpsl
pop
cmpsb
jns
cmp
clc
insl
bound
in
fcmovb
inc
outsl
ss
mov
sub
and
ds
loope
push
mov
lods
xor
imul
sub
mov
add
add
and
mov
mov
mov
push
dec
cld
or
xchg
mov
hlt
cli
clc
hlt
das
jae
stc
icebp
ret
jnp
pop
jns
dec
gs
ficomps
lcall
inc
aad
lcall
adc
adc
ja
ljmp
sub
dec
daa
and
pop
mov
dec
lods
orl
pop
push
out
lods
mov
or
int
xchg
call
mov
stc
sbb
cltd
mov
mov
lcall
sbb
sbb
cwtl
cmpsl
out
adc
nop
orb
sub
stc
jmp
mov
shl
jno
addr16
add
pop
into
das
aam
ret
data16
outsl
outsl
adc
or
addb
lds
jns
aas
lcall
adc
lahf
out
push
lock
lea
or
test
popf
xchg
jl
fwait
adc
mov
mov
cmpsb
in
shl
in
nop
sahf
mov
emms
inc
fimull
cmpsb
push
cmpsl
fists
dec
fistps
jns
push
sti
lds
loope
mov
in
sub
pop
inc
repnz
shll
jmp
xor
pusha
or
sahf
pop
push
pop
lods
leave
popf
test
stc
inc
inc
rcr
mov
test
loope
push
jbe
lret
sbb
xchg
sub
pushf
daa
cmpsl
cmp
dec
mov
adc
jo
in
mov
outsl
or
fstps
test
jns
add
data16
outsl
mov
or
inc
pop
jns
xchg
hlt
pop
add
or
jb
sbb
mov
lods
repz
lret
gs
cmp
daa
xchg
rolb
fisttpll
add
xor
cmp
dec
xchg
fsubr
mov
fadds
cmp
insl
fxtract
sub
sub
dec
mov
andb
fdiv
lret
or
pusha
adc
mov
sbb
fadds
jmp
sbb
xchg
hlt
cwtl
pop
xchg
jl
movsl
mov
ja
fistl
xor
pop
sub
and
sahf
jle
jp
popf
sub
pusha
jle
xchg
push
pop
shl
dec
xchg
cltd
das
sbb
fxch
aas
lret
or
out
cmpl
jg
push
and
cmpsb
popf
and
or
scas
mov
aaa
std
sub
fwait
and
repz
mov
xchg
mov
dec
shll
mov
scas
and
fldt
lret
push
xchg
push
pop
ss
jge
pop
sub
fnstenv
dec
aam
and
bound
es
popa
scas
adc
jl
int3
popa
lahf
fldenv
pusha
mov
push
movsl
mov
jle
adc
mov
notl
out
popa
leave
pop
jecxz
add
sbb
test
shll
stos
and
lods
xchg
loop
arpl
rclb
stos
push
dec
std
mov
dec
push
mov
inc
aas
int3
movsb
loopne,pn
ret
pushf
sahf
and
mov
inc
pop
leave
mov
mov
and
shrb
dec
sub
jbe
js
xor
xor
mov
and
pushf
test
aad
aaa
lods
and
push
dec
xor
mov
mov
dec
jb
dec
std
mov
mov
fldcw
push
push
test
fs
ljmp
lods
call
test
adc
out
into
hlt
imul
xor
dec
lea
add
cmp
clc
mov
lahf
cli
and
cwtl
xor
add
add
add
testb
aad
cmp
mov
mov
bound
inc
dec
cld
jb
mov
jae
or
jg
addr16
lcall
adc
or
insb
mov
fstpl
mov
xor
inc
sub
jnp
or
stc
in
mov
xchg
jle
mov
ret
mov
call
pop
and
fldl2t
cmp
int
sbb
jns
dec
std
gs
sbb
test
or
pop
xchg
into
mov
fdivrl
ret
lock
popf
out
or
jp
je
clc
lods
add
js
push
and
loope
ret
jle
fisubl
adc
inc
pop
outsb
adc
sub
jnp
push
int
dec
std
jecxz
aam
adc
insb
icebp
xchg
jbe
idivb
mov
outsb
jmp
and
jmp
out
dec
xlat
cwtl
es
mov
rcl
pop
setne
roll
sub
push
aam
xorb
jecxz
pop
rcrl
jge
scas
pop
xchg
push
mov
inc
cmp
mov
stos
fwait
sub
pusha
inc
lahf
unpcklps
dec
out
sbb
push
sub
and
push
mov
add
fisubs
mov
daa
and
insl
popa
push
sbb
sub
mov
gs
xor
scas
call
xchg
cs
jp
mov
sbb
loopne
xor
andb
xlat
mov
push
imul
bound
cmp
dec
jnp
stc
jmp
pop
frstpm(287
int
sbb
outsb
arpl
insl
das
cmp
popa
aas
add
xchg
add
shll
mov
jmp
lcall
incb
or
and
inc
add
adc
mov
mov
dec
ss
jecxz
outsl
xchg
pop
inc
push
outsl
and
cmc
push
xor
movsl
scas
mov
xorb
sub
bnd
mov
mov
ljmp
lods
psubb
sbb
aaa
scas
mov
xchg
mov
sbb
sahf
or
es
es
mov
fbld
js
arpl
movsl
sbb
mov
stc
inc
or
repz
mov
add
and
and
popa
cltd
lahf
sbb
mov
cwtl
xlat
loopne
fisubs
xchg
xchg
leave
inc
mov
pop
sbb
and
mov
sbb
inc
adc
and
lea
push
xor
test
push
test
mov
gs
lods
aad
push
dec
lds
rcrl
sbb
mov
jl
mov
xchg
adc
rorl
push
or
gs
cmp
pop
xorb
cmp
das
mov
xchg
or
or
mov
mov
mov
dec
push
sbb
cld
mov
xchg
mov
in
pusha
mov
ret
in
mov
movsl
in
pusha
sbb
push
or
mov
xchg
jge
sarb
fs
repz
mov
std
mov
mov
test
repnz
popl
push
jl
mov
ja
fisubrs
push
test
loop
add
push
or
sar
imul
loop
pop
mov
push
ss
popf
gs
ret
int
mov
jmp
mov
mov
in
xchg
cmp
jo
dec
inc
popa
in
std
cmp
xor
xchg
fistps
jno
dec
mov
test
xor
and
jbe
push
sbbl
mov
mov
inc
stos
mov
ljmp
pop
and
jno
lock
mov
loop
or
xor
add
mov
clc
pop
jns
repz
mov
lahf
push
bound
lods
jno
les
pop
mov
pop
xchg
adc
jle
stos
xchg
outsl
lcall
mov
add
mov
outsl
hlt
test
mov
ljmp
sbb
lods
push
out
jecxz
rorl
bound
shlb
loope
rcrl
cld
cltd
mov
cltd
mov
xor
popa
or
test
or
inc
mov
sub
int
mov
mov
xchg
pop
adc
loopne
jno
cmp
pop
add
ds
insl
insl
mov
pop
pop
sbb
stc
and
fildl
mov
or
cmp
mov
popf
popa
cli
xchg
mov
inc
add
dec
daa
sbbl
ds
xchg
push
testl
lods
dec
jp
push
ljmp
orb
xchg
movsb
lcall
cli
movsb
stos
les
xchg
dec
scas
mov
sbb
sbb
sti
add
in
lret
daa
mov
shll
or
pusha
das
cmpsl
cmpsl
sub
or
cmp
xor
call
mov
leave
dec
or
lds
or
je
jl
int
fnstenv
aaa
gs
test
inc
and
sahf
lcall
imul
inc
rclb
icebp
nop
add
pop
lods
mov
imul
imul
sub
inc
cmp
dec
int3
xchg
loop
mov
xchg
sbb
or
enter
xchg
mov
pop
xorb
arpl
push
pop
jno
add
jns
fisttps
daa
daa
stos
outsl
aaa
xchg
in
and
push
gs
add
ja
xchg
popa
xlat
flds
mov
push
xchg
mov
fsubr
adc
mov
cmpsl
cltd
js
int3
adc
mov
jno
clc
sub
xchg
sbb
popa
ret
daa
nop
sahf
sbb
orl
pop
add
dec
mov
es
jmp
inc
mov
es
cmpsb
push
dec
sub
pop
inc
adc
mov
pop
or
mov
or
jl
bound
add
dec
sbb
inc
push
in
test
xor
cmc
jle
dec
pop
adc
shr
sbb
or
jnp
pushf
in
xchg
xchg
pop
mov
push
fidivs
fimuls
mov
stc
ljmp
icebp
sti
shrl
lods
iret
xchg
bound
sahf
and
cs
pop
mov
ficoms
imul
popf
sbb
in
stos
mov
sbb
movsl
lret
xor
jae
std
inc
mov
add
movsl
pushf
fwait
movsb
jnp
mov
shll
arpl
ret
xchg
divb
adc
sti
cmpsl
fadds
movsb
mov
in
or
mov
ds
xchg
fists
push
jge
adc
mov
jb
mov
jecxz,pt
enter
enter
scas
or
xchg
fildl
jmp
imul
inc
sub
inc
jle
pop
mov
fld
push
sub
jae
int
popf
fcomps
jmp
sub
jno
dec
lods
xorl
push
out
ja
xchg
push
dec
jbe
in
iret
imul
cmpsl
sub
or
test
jb
ficomps
and
jo
adc
rorl
jae
sub
xchg
push
lret
xchg
mov
lds
push
mov
pop
mov
shl
inc
lods
dec
xor
inc
bound
sbb
mov
cmp
xchg
sub
loope
lret
push
movsl
jb
fwait
hlt
cwtl
int
mov
sub
or
push
sub
in
cmp
fcomi
cld
pop
adc
seto
aam
xchg
jae
push
and
and
pop
xchg
subb
mov
lret
es
popa
cwtl
push
or
sub
shr
dec
stos
xchg
int3
fcmovne
decl
dec
or
shll
fwait
xorl
pop
pushf
lods
sti
jg
mov
push
sub
lock
shrb
lcall
sbb
shll
add
sub
dec
cmp
mov
mov
sbb
mov
int3
adc
sbb
lods
xchg
adc
iret
pop
cmpsl
adcl
adc
cld
es
iret
into
je
daa
out
mov
repnz
mov
xchg
fists
jl
fwait
push
jecxz
insl
es
mov
lods
jb
jg
push
ljmp
ret
adc
adc
gs
mov
pop
shl
xchg
lock
test
int3
push
push
lods
xchg
andl
pop
imul
imul
push
shl
idivb
cmp
pop
add
jge
or
or
push
mov
dec
bound
cli
nop
mov
push
icebp
movsl
sbb
pop
and
jmp
pop
xchg
fadds
and
inc
mov
rorb
add
sbb
cmp
xor
sbb
stos
fistpl
enter
or
dec
rol
lock
sub
jnp
jge
push
sbb
ret
loopne
ja
mov
jl
mov
cmpsb
dec
sbb
or
and
mov
outsl
sub
sub
mov
inc
pop
addr16
stos
or
aaa
pop
lods
iret
imul
scas
mov
popf
rorl
xor
and
and
mov
loop
sub
lods
icebp
add
or
jne
lret
test
fldt
inc
mov
cmc
sbb
jecxz
pop
rcrl
shll
arpl
dec
jbe
rcr
sti
pushf
push
add
int3
popa
push
mov
dec
ret
pmaxub
adc
mov
stos
test
sahf
shll
mov
sbb
pop
sub
sbb
mov
lds
out
fldcw
iret
add
test
clc
iret
lahf
jbe
sub
xor
xchg
push
push
pop
mov
cli
add
fwait
sbb
jne
aas
xchg
shr
pop
xchg
dec
jne
std
mov
push
mov
sbb
push
out
dec
add
mov
pop
pop
popa
inc
enter
jae
es
jl
dec
add
repz
sbb
pop
push
adcl
and
or
add
pop
pop
fldl
clc
xchg
test
xchg
cwtd
push
call
aas
scas
cs
std
jbe
adc
push
cmp
in
pop
dec
xlat
adc
sub
clc
enter
scas
in
or
and
xor
cwtl
fstps
movsb
push
outsl
mov
sarb
jae
inc
pop
into
outsl
das
push
inc
push
test
outsl
xchg
daa
mov
adc
pop
testl
cmpsl
cmp
xchg
loope
push
movsl
fildll
insl
inc
jl
lods
mov
cmc
xchg
arpl
cmc
sti
and
pop
das
push
or
or
movsl
inc
fildll
jg
sbb
mov
and
movsb
pop
in
lret
mov
rorl
adc
cmp
cltd
mov
or
sub
or
mov
andb
mov
into
popa
fimuls
push
iret
push
inc
cmp
fwait
jae
pop
add
cmpsl
inc
mov
cltd
in
cmp
dec
lahf
sub
and
add
push
outsb
jnp
insl
add
dec
mov
cmp
dec
inc
jl
jo
aas
mov
inc
adc
cmp
xchg
test
pushf
out
push
das
cmpsb
push
dec
sub
xchg
fsubrl
cmpsb
mov
mov
xor
adc
pushf
daa
cwtl
inc
or
mov
push
outsl
call
cmp
in
test
inc
movsb
adc
mov
mov
pop
roll
fst
movsl
inc
rolb
lcall
fbld
test
inc
add
pop
mov
pop
loop,pn
or
or
or
movsb
or
dec
pusha
int3
in
aam
xlat
mov
dec
and
mov
test
xchg
jno
fnstcw
sub
mov
repz
daa
push
stc
shll
pop
jmp
push
sub
pop
push
aaa
mov
xchg
imul
jl
ds
push
daa
mov
add
hlt
inc
andb
ficoml
pushl
sbb
add
and
bound
mov
shll
adc
pop
jnp
pop
push
jns
inc
dec
stc
cwtl
lods
test
sbb
push
add
xchg
aas
xor
stos
dec
aaa
sub
cmp
mov
push
cmp
shll
push
hlt
scas
in
mov
pusha
test
data16
sbb
push
xchg
dec
xor
sub
mov
aas
xchg
mov
dec
push
dec
lods
mov
pushf
jp
arpl
xor
push
cmpb
mov
repz
mov
into
es
aad
sub
icebp
jb
lock
jmp
mov
int
cmc
or
nopl
pop
stos
daa
mov
xor
push
jo
or
inc
movsl
lret
cmp
cmp
mov
pusha
dec
pop
lock
xor
sahf
je
jns
fcmovb
mov
ljmp
fldcw
sub
or
bound
rolb
pop
and
mov
sbb
inc
dec
add
popf
dec
pop
lcall
fisttps
sbb
outsb
xchg
or
push
jo
bound
mov
daa
jl
mov
add
cmp
imul
lock
sbb
xchg
sbb
xor
jo
aad
cwtl
and
dec
call
adc
into
add
pusha
outsl
xchg
lret
jb
jmp
jle
fcmovnbe
and
insb
dec
outsl
mov
out
add
sub
enter
add
mov
cmp
xchg
es
xor
jb
push
or
jge
and
test
repnz
and
push
push
xchg
shll
cli
mov
mov
push
jne
aam
sbb
fcompl
sbb
push
es
push
pop
scas
lock
add
lea
mov
add
cmp
notb
ret
mov
icebp
sbb
sub
das
out
andl
fidivrl
push
inc
call
jmp
xchg
cmp
dec
cltd
sbbl
sbb
jp
cmp
push
dec
mov
rol
adc
xchg
mov
mov
call
mov
xchg
push
push
mov
ficomps
shll
outsl
int
and
fmul
inc
clc
push
sub
pushf
enter
daa
rol
fists
xchg
push
cmp
fsubr
negb
in
repz
xor
in
sbb
cli
std
mov
shlb
inc
out
aaa
mov
dec
fmull
clc
mov
sub
inc
inc
mov
stos
fcoms
imul
sbb
jmp
dec
inc
aas
imul
mov
fimuls
mov
lods
lods
sbb
fdivp
xor
xor
popa
cmc
test
test
xor
or
pop
xor
dec
mov
sbb
es
clc
inc
cmpsl
dec
sub
addr16
inc
push
mov
movsl
cltd
lock
xchg
mov
repnz
jbe
loopne
call
loopne
notb
enter
popa
das
inc
popa
jmp
pop
jl
faddl
push
pop
outsl
or
pusha
inc
pop
xchg
push
inc
icebp
jge
jl
stc
add
mov
arpl
dec
lret
adc
cltd
mov
or
push
add
mov
mov
or
and
fbstp
push
add
add
mov
sub
call
dec
cmp
push
add
or
mov
adc
mov
lds
repz
fisubs
cmpsb
or
or
add
lahf
dec
push
inc
fadds
dec
fists
pop
push
loop
push
push
jae
rorb
jb
adc
imul
pop
mov
jo
jo
fnstcw
test
popa
mov
inc
cwtl
mov
xlat
je
popa
iret
mov
or
jns
add
daa
xor
or
jo
mov
pop
xor
insb
push
icebp
out
add
or
sub
xor
fdivs
push
or
sub
aad
dec
cmp
dec
xchg
sbb
jo
sbb
cmp
xchg
aam
flds
cli
mov
cmp
mov
cs
das
mov
aam
in
xchg
inc
ja
and
mov
and
push
jb
push
xchg
in
fchs
enter
sbb
sbbl
dec
add
or
movsb
icebp
rdpmc
pop
and
test
dec
cmp
cmpsb
jmp
cmp
insl
shlb
xchg
inc
outsl
add
sbb
or
push
mov
mov
shrb
scas
aaa
rorb
xchg
mov
cmp
xchg
movsb
leave
push
stc
faddl
cmpsb
in
and
mov
in
fwait
scas
adc
leave
mov
mov
icebp
fstpt
sbb
and
mov
repz
icebp
and
mov
dec
add
mov
mov
daa
out
fidivl
jmp
mov
sub
sbb
push
inc
pop
pop
sub
xchg
push
or
jae
mov
or
in
push
mov
out
imul
lahf
lods
jmp
js
js
lret
imul
mov
mov
pop
daa
pop
mov
jno
inc
ret
jne
cmpsb
sbb
lret
mov
pop
je
out
add
push
push
jo
into
or
push
or
xchg
adc
rcr
dec
shll
outsl
fisubrs
insb
addl
mov
and
stc
aam
mov
lods
lahf
aas
inc
pusha
ret
mov
mov
dec
cli
inc
xchg
shlb
jb
mov
sti
cmp
sbb
lahf
sbb
sbb
cld
call
loope
stos
stos
ljmp
jecxz
js
cmp
loope
outsb
xlat
incl
aad
cmovge
sub
or
sti
aaa
push
bound
sbb
aas
sub
mov
sub
rorl
xor
testl
mov
je
std
stos
enter
aad
cmp
and
mov
ret
fwait
out
mov
mov
and
mov
imul
pop
and
je
push
test
push
dec
out
pushf
jnp
lea
mov
sbb
jns
push
pop
push
pop
cmpsl
addb
mov
fcomps
xchg
mov
dec
call
addl
sbb
jo
test
and
and
sub
push
inc
xchg
cmpsl
imul
dec
mov
sahf
sbb
push
les
jmp
mov
mov
xor
xchg
cmp
je
jp
cmc
add
out
daa
sub
aad
or
cwtl
pushf
ja
add
push
les
lea
nop
lock
mov
jae
push
aad
sub
out
cli
nop
push
mov
ljmp
xchg
adc
or
mov
adc
fcoml
imul
mov
push
iret
xchg
or
mov
or
add
xor
jmp
lcall
dec
pop
scas
inc
lds
xlat
jnp
pop
je
fwait
sub
pop
int
or
or
fsubrs
dec
bound
imul
mov
lret
repz
xor
outsl
iret
movb
loope
std
rcrl
test
pop
aas
add
xor
xor
pusha
lret
adc
and
jnp
shlb
out
mov
and
pusha
sub
rcrl
add
int3
xor
in
sub
stos
lcall
push
xor
rorb
jns
cmp
in
repnz
mov
repnz
jecxz
into
dec
dec
aas
int
xor
mov
mov
into
rolb
in
addr16
les
and
negl
adc
push
lods
insl
sahf
push
and
cmp
or
ret
jmp
xchg
int
inc
cmp
jnp
xchg
mov
test
pop
sbb
add
ret
dec
jge
sub
scas
push
xor
cmp
mov
mov
jmp
dec
pop
stc
aam
or
ror
adc
inc
push
sub
mov
dec
imul
jp
scas
loop
jbe
ret
xchg
mov
popf
push
filds
mov
popf
out
clc
scas
dec
pop
mov
mov
mov
xor
pop
out
jp
xor
or
and
js
dec
stos
dec
andb
adc
push
mov
std
jno
pop
xchg
jnp
mov
aam
jmp
js
and
cmpsl
mov
sbb
outsl
bound
mov
jp
ljmp
data16
mov
cmp
sbb
and
fimull
sti
repnz
pop
pop
lret
outsl
arpl
add
push
es
loope
mov
jmp
push
push
mov
jmp
lret
sbb
mov
mov
outsb
aad
leave
xchg
sbb
cmpsl
add
cmpsb
es
fldl
in
imul
shrb
lea
sub
arpl
fisubrs
sub
cmpsl
push
mov
push
shl
mov
jmp
xchg
fisubs
lret
ja
jnp
jmp
aad
ret
fstps
sub
popf
cmc
lahf
ja
arpl
fisubrs
jae
and
mov
dec
pop
mov
mov
popf
negb
inc
in
mov
addr16
shl
or
scas
inc
js
dec
pop
negl
mov
and
add
mov
xchg
out
push
pop
hlt
adc
pop
mov
in
iret
div
jnp
sub
add
jnp
jecxz
bound
and
and
stos
cmp
lea
or
dec
lds
mov
sbbb
add
and
mov
or
subb
and
insb
mov
ficoml
mov
adc
sub
test
cltd
sbb
jno
out
add
mov
scas
jns
cmp
jecxz
jne
roll
stc
jecxz
xor
or
das
sub
sbb
and
mov
inc
lea
andl
mov
sbb
and
sbb
lock
in
repnz
cld
mov
mov
loop
add
xor
js
cwtl
enter
fiaddl
lcall
mov
push
loop
mov
lahf
adc
inc
mov
jbe
insb
insl
cld
adc
mov
lcall
ds
sbb
sbb
mov
and
mov
push
adc
xchg
bound
pop
jns
mov
sbb
pop
xor
cmp
loop
ja
mov
mov
imul
and
inc
jnp
and
insb
xchg
sub
mov
insl
inc
iret
add
loope
mov
mov
add
cmpsb
pop
inc
lods
push
out
lock
or
jp
daa
loope
int
dec
out
test
mov
xchg
mov
xor
sbb
mov
or
cltd
icebp
xchg
test
movsl
leave
mov
rorl
shll
adc
jmp
test
icebp
jno
orl
ret
mov
xor
insb
loope
loopne
lods
lret
mov
jmp
bound
aas
in
push
adc
xchg
pop
cmp
jbe
adc
mov
out
sbb
sub
cmp
lahf
aas
cltd
mov
mov
jns
sub
mov
add
sbb
mov
mov
pop
std
sub
dec
je
mov
cmp
ljmp
lret
xchg
or
mov
inc
repnz
xlat
sbb
pop
mulb
mov
lock
pop
xorb
fbstp
faddl
sbb
cmp
ljmp
jno
lret
jnp
loope
mov
dec
test
outsb
sub
inc
pop
adc
push
in
movsb
xchg
sbb
bnd
push
loopne
cmp
and
xchg
data16
sub
pop
outsl
repnz
fsubrs
mov
cs
xor
jecxz
pop
out
into
dec
xchg
cmpsb
or
fisubl
outsb
add
adc
adc
loopne
mov
loope
fmuls
or
dec
push
in
jo
lods
popf
lret
dec
push
sarb
loope
fwait
mov
sbbb
jne
dec
je
cwtl
xchg
mov
dec
loopne
std
dec
sbb
test
xchg
cwtl
movsl
mov
cmp
inc
pop
mov
cmp
movsl
cmp
pop
adc
push
jg
mov
or
stos
lds
iret
sbb
test
cmp
and
jne
inc
push
or
ja
jmp
mov
shr
out
cmp
jb
dec
mov
lcall
inc
js
aam
ret
push
sbb
fidivrl
push
ss
and
shrl
add
mov
cwtl
push
adc
stos
fisttpl
pop
add
mov
mov
scas
and
xor
test
ss
stc
sbb
movsb
shlb
int3
pop
insb
shrl
mov
or
fisubl
sbb
shr
ficompl
xchg
and
or
scas
sbbl
push
push
jg
sahf
insb
dec
stos
iret
or
ret
xor
test
das
mov
outsb
or
xchg
insl
xchg
or
and
sbb
int3
push
sbb
mov
xor
mov
push
shlb
outsb
jns
mov
movsl
sbb
add
push
ljmp
cmp
icebp
sbb
dec
jbe
pop
mov
adc
xchg
jbe
mov
sbb
test
and
pop
push
add
mov
mov
pop
out
fisttps
pop
fisubrl
pop
inc
out
stos
hlt
inc
mov
jne
xchg
mov
or
mov
mov
fmuls
ret
lds
mov
dec
mov
add
mov
decl
and
out
test
push
adc
leave
test
adc
xchg
mov
insb
and
or
imul
in
and
scas
cmp
xorb
and
xchg
xor
dec
test
mov
xor
mov
ret
sbb
add
push
ljmp
cld
dec
cli
xchg
inc
test
and
loop
push
push
adc
xor
lods
add
mov
shlb
xor
cmpsl
mov
cwtl
push
cmp
jnp
sbb
mov
les
notb
jae
mov
aad
mov
adc
in
xorl
mov
outsl
mov
ficoms
fbstp
mov
add
mov
dec
jge
or
stos
mov
cli
fistps
js
sbb
iret
xor
and
repnz
sbb
testl
xor
push
cmpsl
fcoms
mov
mov
fwait
adc
sub
shlb
push
ficompl
sub
inc
xchg
jp
iret
mov
mov
xor
int3
gs
jo
popf
jmp
daa
fsts
gs
icebp
pusha
lret
mov
push
pusha
adc
sbb
push
dec
xor
lods
jns
pushf
jecxz
repnz
sbbb
cmp
push
lret
inc
clc
addr16
mov
lret
and
popa
push
jl
xchg
push
test
push
cmpl
pop
out
adc
cld
push
adc
ffreep
cli
add
push
pop
mov
scas
lea
cmpsl
stos
shll
jno
test
jg
pusha
and
icebp
je,pt
lahf
sahf
insb
bound
scas
jno
daa
adc
aas
dec
frstor
sub
mov
out
fcmovbe
fnstenv
mov
xor
mov
bound
loopne
aas
clc
mov
nop
notb
gs
cmp
inc
cmpsb
mov
bound
cmp
mov
and
cmp
xlat
push
mov
xchg
or
xchg
mov
int3
in
jg
adc
leave
xchg
cltd
mov
add
cmovbe
out
loopne
xchg
inc
mov
sub
pop
orb
insl
sbb
xchg
or
and
clc
fbld
pop
sbb
call
ss
xchg
inc
sub
in
lahf
mov
aaa
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
add
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
add
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
add
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
add
push
push
inc
add
mov
lea
sub
and
push
mov
daa
sub
add
pop
xchg
ret
scas
xchg
insb
and
add
sbb
gs
or
leave
in
add
pop
sub
pop
mov
int
leave
push
jl
push
push
pop
leave
popf
lret
xchg
dec
sbb
pop
push
pop
pop
adc
or
lods
test
popa
int3
add
popf
mov
or
pop
ret
or
movsl
or
lret
add
daa
andl
dec
pop
mov
or
add
xlat
mov
ret
jne
add
dec
mov
or
or
leave
fcmovu
xchg
popf
ret
xor
sti
mov
icebp
subb
lods
cli
leave
and
add
popf
leave
ret
popa
add
sahf
lret
std
dec
sbbl
int
leave
xchg
add
popf
push
std
dec
cltd
mov
leave
popf
lret
ljmp
sub
leave
add
leave
popf
lret
ljmp
outsb
arpl
xchg
mov
popf
lret
add
popf
push
rcrb
lcall
pop
mov
test
xchg
or
test
insl
jmp
add
sub
adc
int3
add
sub
mov
cltd
xchg
add
rorb
in
rcrl
xchg
lret
fdivs
daa
roll
sub
dec
dec
sbbb
lock
sahf
lret
mov
sub
mov
nop
mov
mov
mov
jmp
push
mov
iret
and
rolb
push
add
popf
popa
movsl
or
dec
jmp
sub
es
gs
leave
popf
push
pop
in
roll
pop
adc
jmp
mov
mov
pop
inc
fxch
push
scas
add
pushf
lret
add
.byte
