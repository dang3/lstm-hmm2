fwait
sbb
mov
test
js
jne
adc
sub
cmp
mulb
les
mov
arpl
xor
xchg
inc
cld
inc
aam
and
stc
push
int3
imul
push
dec
and
sahf
sbb
gs
scas
or
sti
fwait
js
or
sbb
daa
lret
inc
dec
out
fwait
lds
idivb
cmp
dec
rcl
imul
cld
outsb
xorl
stos
cwtl
std
cld
dec
fwait
sahf
fimuls
jne
push
adc
inc
pushf
lea
rcll
pop
pop
clc
popf
popf
mov
jo
and
cs
jb
mov
mov
sbb
insl
cmp
push
les
test
outsl
or
mov
pop
fstps
ret
push
xchg
ret
mov
sub
inc
out
incb
add
je
imul
dec
dec
push
push
dec
dec
dec
cs
push
push
add
add
jb
insl
jo
inc
add
add
ja
arpl
inc
js
jmp
pushf
lea
ja
call
add
dec
outsl
jbe
push
imul
add
bound
push
gs
dec
jne
inc
add
add
je
imul
dec
jb
inc
js
jmp
pushf
lea
jb
stc
cmpb
pusha
pusha
lea
jne
btc
xor
sub
btr
mov
jmp
add
inc
outsl
jo
push
arpl
add
imul
jne
dec
fs
add
add
insb
gs
imul
jae
gs
push
imul
sarb
adc
jns
insb
inc
imul
fnstsw
bound
dec
and
fld
syscall
or
adc
jne
enter
inc
test
cmp
sbb
dec
leave
lret
shll
icebp
cli
pop
mov
lret
das
mov
mov
add
inc
std
sbb
lahf
adc
sbb
and
or
cwtl
xor
xor
jae
movl
jmp
xchg
sarb
shl
shlb
jns
jecxz
mov
xchg
test
mov
jmp
aam
adc
mov
push
icebp
notl
mov
and
sub
cmp
aas
and
or
adc
mov
or
inc
stos
xor
mov
repnz
push
clc
dec
jmp
mov
add
je
jne
jb
outsb
je
imul
jns
add
test
incl
add
addl
leave
jns
pusha
mov
lea
je
rcr
shrd
sub
aas
mov
lahf
bt
daa
mov
add
stc
sbb
shld
shr
add
bsr
mov
stc
cmp
or
jmp
stc
test
push
jmp
pushl
pusha
movl
pushf
mov
pushf
pushl
ret
add
dec
gs
popa
addr16
outsl
js
add
add
popa
jns
je
imul
inc
push
je
dec
push
add
stos
lcall
dec
push
addr16
pop
je
addr16
imul
mov
test
inc
lods
mov
repz
mov
sbb
nop
cmpsb
pop
movsl
sbb
lea
sbb
cltd
pop
paddw
scas
lcall
clc
and
addps
aam
mov
das
jb
je
shl
shlb
sub
adc
lods
push
sbb
jp
aas
jae
psubq
stc
or
inc
dec
imul
mov
push
cmpsb
jne
cld
push
lods
jecxz
pop
xchg
mov
fsub
adc
mov
mov
in
fiaddl
push
enter
lret
inc
pushf
insl
popa
je
addr16
cmc
add
dec
add
cmp
push
pop
lods
mov
daa
ficoms
mov
lret
mov
iret
or
sar
sarb
fimull
pop
lret
inc
mov
je
xor
leave
fsubr
shl
pop
test
or
imul
push
cld
add
mov
cmp
jge
pusha
jae
aas
ficoml
sub
out
int3
jge
outsl
shll
sarb
es
mov
nop
mov
fwait
es
leave
rcrl
sub
jne
movsl
pop
daa
cmp
lods
leave
sbb
add
add
push
jmp
mov
jmp
cmp
call
pushf
pushl
pushf
lea
jne
pusha
movb
pop
mov
jmp
add
push
gs
insb
imul
je
add
add
gs
je
inc
inc
inc
add
sbbl
xor
bsf
shrd
sar
mov
and
lea
mov
cmc
clc
pusha
jmp
add
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
dec
inc
dec
popa
jo
je
imul
push
imul
insb
insb
outsl
arpl
repnz
call
setl
cmc
pusha
mov
test
and
stc
pusha
cmp
add
add
bt
jmp
add
inc
outsb
fs
popa
je
add
add
gs
je
push
jb
arpl
jae
add
add
push
imul
jae
bound
add
inc
jb
popa
je
push
imul
inc
add
mov
cmp
or
adc
nop
cmc
add
or
loope
jmp
mov
mov
dec
dec
push
fadds
adc
push
xor
rclb
lods
lea
or
fbstp
pop
loopne
pop
pop
fstpl
lods
fidivs
nop
or
fadds
ja
add
ret
push
push
adc
sbb
adc
inc
push
xchg
into
aad
js
or
jmp
jns
add
pop
and
insl
sbb
dec
jo
scas
in
scas
pop
or
jns
int
dec
push
push
xchg
into
and
clc
or
mov
and
addr16
xor
dec
ret
call
mov
ljmp
mov
mov
mov
mov
lods
mov
dec
in
outsl
daa
xor
or
or
lock
hlt
std
jge
imul
test
pop
jl
inc
pop
lret
not
pop
gs
mov
nop
inc
call
cmp
ds
adc
pushf
out
adc
test
loope
xor
dec
fnsave
mov
or
int
dec
lret
into
jg
mov
sbb
push
mov
mov
mov
mov
bndstx
in
mov
inc
mov
dec
pop
push
lcall
mov
mov
inc
orl
lret
les
push
cmp
iret
sbb
lock
mov
mov
mov
push
lcall
mov
push
nop
dec
jecxz
pushf
and
lock
in
sbb
cli
ror
aad
mov
iret
sub
xchg
or
test
loopne
pop
sub
cld
in
sub
pop
rcll
xchg
int
sbbl
jnp
or
call
push
into
xchg
mov
mov
jb
add
push
clc
fiaddl
pushf
iret
jp
les
pop
rclb
leave
ss
adc
push
and
dec
arpl
cmp
dec
or
push
mov
inc
or
pusha
xlat
aaa
mov
adc
fisttps
push
mov
mov
mov
push
inc
add
dec
push
repnz
cmp
push
scas
pushf
rol
push
iret
pop
es
adc
cmp
rol
jmp
dec
rorb
insb
mov
int
sbb
lods
neg
in
sub
push
negl
sbb
jmp
push
insb
test
push
inc
jmp
sub
nop
dec
sub
daa
mov
std
pop
jnp
lock
movsl
jns
pop
push
iret
pusha
pusha
loopne
pop
out
in
out
arpl
mov
xor
inc
or
and
outsl
daa
imul
test
loopne
pop
adc
dec
or
out
and
outsl
jecxz
add
jecxz
sbb
int
test
mov
push
js
mov
dec
pusha
cmp
sub
jne
xchg
mov
psubsw
add
or
mov
push
push
aad
mov
test
mov
sbb
push
imul
rcll
pop
loopne
pop
cmp
mov
fldenv
dec
nop
pop
ss
aad
sbb
or
xchg
inc
sbb
cmpb
pusha
loopne
pop
xor
mov
rolb
lods
mov
or
jns
pmulhw
inc
repz
lods
mov
dec
fs
push
mov
fidivrl
cmp
test
xchg
push
js
sbb
shlb
jne
inc
dec
xchg
lret
mov
int3
movl
mov
xor
or
push
bound
je
sbb
aad
and
outsl
arpl
xorl
into
inc
add
or
xchg
lds
test
loopne
aam
fnstenv
iret
push
add
or
push
sbb
arpl
stos
push
ds
mov
pop
dec
movsb
inc
jns
loopne
mov
inc
inc
inc
sbb
add
jecxz
sbb
int3
xchg
call
out
in
cmp
add
lock
mov
sbb
cs
jo
dec
pop
into
xchg
inc
xor
pop
xor
or
adc
sbb
sbb
test
jecxz
stos
icebp
push
mov
dec
subb
push
jbe
je
jb
cmpb
or
mov
mov
mov
jge
test
mov
into
push
js
jbe
loopne
out
jae
add
jns
scas
inc
lcall
push
adc
add
mov
test
lea
mov
mov
and
je
jb
sbb
call
in
mov
stc
jb
and
je
jb
mov
loopne
xchg
loope
dec
mov
sbb
mov
dec
iret
call
es
mov
push
data16
sub
aad
loope
loopne
pop
imul
or
bound
add
or
mov
push
js
popf
mov
lods
jns
inc
iret
rcll
xchg
idiv
cmp
nop
xchg
call
out
jp
sub
inc
andl
inc
push
adc
into
je
mov
ret
rorb
out
data16
sbb
enter
sub
dec
xor
fnstsw
pop
cmc
fidivs
fadds
add
dec
push
xchg
dec
loopne
jecxz
add
jecxz
jecxz
sbb
mov
adc
imul
divl
mov
loope
mov
pop
sbb
icebp
push
cld
push
pop
push
loopne
test
rcr
ss
xor
adc
aad
lahf
loope
jmp
jae
mov
push
sbb
push
add
mov
mov
mov
bound
mov
xor
mov
pusha
daa
fwait
divl
pop
icebp
pop
cmp
in
sbb
iret
sub
mov
xlat
pop
adc
xchg
loope
fyl2x
and
sub
int
sbb
lahf
hlt
std
fs
enter
lret
sbb
shr
add
push
js
jbe
je
jb
mov
loopne
pop
lahf
frstor
pop
mov
je
inc
rorl
pop
sbbl
jnp
pop
int3
arpl
sbb
popa
pop
inc
mov
int
sub
ds
in
sub
ds
mov
mov
inc
dec
sbb
lahf
into
mov
inc
ror
or
loope
sub
insb
add
shlb
mov
xchg
push
pop
into
loope
insb
dec
aas
inc
stc
and
mov
mov
or
iret
mov
push
fisubrl
js
negb
mov
mov
mov
dec
adc
fwait
into
and
cmp
dec
sbb
sub
call
in
lock
insl
clc
jno
sti
mov
sahf
mov
mov
mov
mov
add
dec
push
push
fildl
in
inc
push
dec
jl
push
pop
into
cmpsb
mov
hlt
inc
into
inc
push
adc
add
ret
push
js
jbe
aam
mov
or
xchg
daa
mov
pop
andb
int
mov
sbb
adc
push
loopne
fs
jb
mov
loopne
pop
pop
frstor
cld
rolb
or
mov
sbb
lea
adc
mov
pusha
test
mov
adc
frstor
movsb
rorb
inc
mov
lcall
mov
loopne
pop
rcr
gs
out
fidivs
push
mov
sbb
jo
ljmp
add
sbb
icebp
call
fisttps
pop
imul
inc
lret
mov
les
mov
jle
inc
inc
nop
lret
inc
sub
in
push
aaa
clc
mov
push
dec
mov
cmpsb
xlat
inc
in
mov
xor
add
or
adc
jmp
int
mov
mov
jmp
mov
jg
es
mov
mov
mov
mov
dec
adc
fcmovu
movsl
clc
mov
inc
mov
int
sbb
ljmp
dec
push
js
jbe
je
jb
mov
loopne
aad
aas
mov
into
or
daa
push
or
dec
mov
mov
mov
mov
mov
movsb
test
scas
sbb
iret
mov
sbb
fcomi
es
mov
movb
arpl
pop
mov
lcall
push
sbb
lods
mov
dec
sti
les
call
jecxz
cmp
rorb
sbb
arpl
xor
mov
outsb
clc
xor
cmp
xor
je
jb
rcll
mov
adc
cmpsl
mov
dec
cmc
or
xchg
dec
sbb
or
pusha
or
xchg
pop
addr16
or
scas
stos
cli
cmp
iret
mov
and
inc
push
cmp
or
call
shlb
iret
push
push
inc
leave
pop
push
xchg
cmpsl
cmp
push
js
jbe
int
les
cmpsb
packsswb
inc
sahf
inc
test
in
jecxz
mov
inc
push
js
jbe
je
rcrl
inc
les
push
adc
cltd
divl
pop
stos
pop
jle
or
sbb
fs
aaa
clc
mov
test
mov
mov
mov
cld
mov
and
imul
addb
or
xchg
pop
into
fldcw
js
jbe
mov
mov
loopne
pop
pop
frstor
lds
arpl
sbbl
jg
cmp
rolb
push
int3
push
mov
sub
mov
mov
loopne
mov
push
fisttps
jo
or
inc
add
out
jmp
jbe
mov
aad
int3
push
bound
jp
or
mov
mov
dec
movb
sbbl
je
sbb
or
lcall
lods
add
push
clc
jge
orl
out
test
inc
push
js
jbe
je
jb
cmpb
add
pop
fcmovu
outsb
pop
clc
scas
lahf
dec
inc
inc
lds
rorl
or
adc
loopne
jmp
scas
mov
mov
mov
push
in
lock
stos
mov
cmp
jp
mov
cmp
rolb
into
push
or
add
fcomi
outsl
pop
jmp
dec
push
call
cmpsb
mov
mov
loopne
dec
xchg
push
sbb
subb
fst
dec
xchg
push
adc
test
das
dec
testb
inc
inc
push
into
push
xchg
daa
sbb
scas
pop
sub
std
out
bound
xor
jb
mov
loopne
pop
loopne
fs
out
push
mov
inc
jp
sbb
loope
insb
xchg
add
js
leave
mov
out
leave
cmp
nop
pop
xor
enter
cmp
mull
iret
dec
xchg
add
repnz
mov
js
jbe
je
jb
mov
loopne
pop
rcr
gs
pop
or
orb
and
je
mov
int
mov
xchg
pop
and
inc
insb
jecxz
add
mov
in
clc
jae
jp
les
jb
ret
inc
sbb
lahf
or
adc
jo
or
adc
pop
jbe
add
add
inc
mov
out
add
in
lock
mov
xchg
pop
in
int
clc
xor
mov
mov
mov
mov
mov
lds
mov
adc
ficoml
and
clc
loope
in
inc
rorb
xchg
les
loopne
imul
or
xchg
mov
or
sti
inc
ret
push
and
fstp
mov
dec
leave
add
bound
mov
dec
aam
pop
into
loop
imul
xchg
pusha
fisttpl
inc
loopne
add
or
pushl
or
or
xchg
into
sub
add
push
scas
lods
inc
ret
iret
dec
or
xchg
fldt
je
jb
mov
loopne
pop
sbb
arpl
fstpt
aad
pusha
mov
and
fs
push
mov
loopne
pop
pop
dec
push
dec
fsubl
mov
xchg
cmp
icebp
insb
enter
push
js
jbe
je
jb
test
ffree
sub
mov
aad
mov
or
std
mov
mov
mov
mov
sbb
fstl
popa
sbb
popa
mov
test
pop
mov
mov
stos
inc
fldcw
inc
push
int
into
and
mov
les
adcl
jle
pusha
loopne
pop
addr16
pop
cmc
fiadds
cltd
dec
xlat
mov
in
lods
mov
cmpl
sub
mov
sbb
or
fsts
insl
sbb
loope
insb
inc
int
push
js
jbe
je
ret
lds
clc
add
adc
mov
hlt
inc
inc
int3
mov
dec
les
mov
push
fmulp
bound
mov
loopne
or
cltd
loopne
scas
aam
mov
mov
cmp
rol
shrl
push
adc
cmpsl
cld
stos
cmc
leave
inc
push
add
pushf
or
or
inc
dec
arpl
mov
add
loopne
out
jmp
jbe
mov
daa
lahf
push
insb
stos
out
dec
cmp
push
xchg
lcall
leave
mov
out
push
add
les
loopne
lcall
int3
adc
lcall
aaa
test
xor
nop
push
jns
int3
xchg
test
das
shl
jge
inc
cmovge
cmp
loopne
pop
cltd
pop
push
and
mov
incl
int
mov
insb
aaa
push
dec
sub
mov
in
xor
shl
lcall
inc
mov
mull
notl
jb
cmpb
xchg
jp
jecxz
add
fbstp
int3
je
lcall
int3
push
xchg
mov
in
mov
stc
scas
pop
dec
pop
sbb
clc
lret
adc
in
out
clc
bnd
or
or
jne
adc
and
int
sbb
sub
mov
xchg
add
fsubrs
pusha
xor
and
lret
imul
cmp
push
js
add
push
int
inc
outsl
int3
rorb
pop
dec
push
push
cld
adc
cmp
adc
mov
scas
pusha
out
pop
lret
inc
add
mov
xor
lock
in
js
stos
fildll
fs
mov
bswap
pop
push
inc
or
sub
fidivs
add
ret
sub
adc
pusha
int3
das
jge
pop
lret
pop
lcall
movb
stos
sahf
les
movsl
stos
cmp
pusha
test
shlb
push
int3
jo
in
fimuls
scas
push
push
pop
into
mov
enter
loope
ljmp
mov
js
jbe
je
int
inc
repz
inc
lahf
lcall
lcall
pop
fstp
popa
pop
jmp
mov
jns
adc
pop
les
lret
xchg
in
lock
outsb
clc
jb
cmp
cmp
fcmove
clc
inc
lcall
fadd
push
jl
stos
dec
les
lcall
shr
cmp
cmp
mov
into
out
mov
mov
filds
aam
stos
loop
inc
inc
mov
fucomi
flds
pushf
xchg
dec
cmpsb
hlt
or
int
call
lods
in
cmp
sti
aad
int3
dec
addr16
pop
lret
leave
test
insl
in
idivl
sub
stos
ret
mov
xor
loopne
out
fnstcw
mov
cmpsl
mov
dec
cmc
test
lods
fldl
int
xor
inc
mov
mov
push
sbb
mov
repnz
push
push
lea
dec
sub
mov
call
rorl
add
add
mov
dec
int
push
xchg
sbb
int3
lret
fidivrs
cmp
dec
out
and
inc
int3
adc
lcall
aaa
push
pop
je
imul
cld
or
jmp
pop
lret
xor
or
sub
mov
or
pop
dec
js
vmovlpd
inc
jg
dec
push
add
mov
mov
xlat
mov
in
pusha
inc
xor
outsb
mov
inc
cmp
adcl
adc
insb
sub
mov
push
inc
sbb
es
rorl
lcall
pusha
int3
int3
sbb
lret
or
or
lock
jl
les
push
push
lcall
pusha
push
or
jne
in
lea
adc
pusha
int3
and
cltd
or
in
sub
xchg
sub
cmp
int3
dec
push
les
outsl
jecxz
pop
inc
into
mov
and
mov
jb
repnz
loopne
pop
sbb
data16
out
int3
or
inc
leave
xchg
push
dec
cltd
lcall
loopne
fs
loope
insb
jl
cmpps
pop
mov
into
dec
cwtl
push
adc
cmp
ds
inc
mov
fincstp
lcall
repnz
stos
fidivs
cmp
test
adc
gs
mov
add
cmp
in
pop
fisttpll
mov
xchg
pop
aad
int3
loope
mov
lcall
ficomps
jl
les
push
lret
add
sbb
movsb
scas
fisttps
enter
in
scas
adc
pushf
adc
ljmp
jl
out
xor
addb
cmp
and
add
inc
dec
rol
xchg
scas
fbld
dec
sbb
sbb
ja
icebp
mov
xlat
or
cmpsb
stos
mov
inc
cs
mov
lcall
dec
sbb
int3
aam
lcall
inc
fcomi
es
push
pushf
xchg
enter
mov
xchg
or
mov
jbe
ret
dec
adc
das
leave
jge
into
inc
sbb
sub
pusha
mov
jecxz
mov
pusha
loopne
out
xorb
js
jbe
je
jb
cmpb
mov
loopne
push
xor
loopne
movb
or
dec
fldenv
xchg
cmpsl
sbb
iret
jb
adcb
dec
jne
rcrl
push
sub
aad
mov
inc
lea
and
xchg
in
lret
mov
add
mov
mov
aad
push
into
popa
aaa
insb
lret
jle
or
push
fldl
jecxz
and
push
mov
fisubs
stos
fcoml
and
mov
daa
xchg
negl
pop
fists
sahf
out
push
sbb
stc
dec
inc
add
fnsave
repnz
mov
call
mov
adc
dec
pop
test
mov
cmp
nop
xlat
cmp
mul
scas
mov
lods
loopne
or
mov
insb
and
fisubs
pushf
je
iret
and
shlb
scas
dec
sbb
pusha
add
mov
inc
mov
xchg
push
loopne
add
sti
mov
lahf
lods
mov
adc
inc
xlat
insb
xor
rol
jo
cmp
jle
jle
mov
scas
jbe
ret
mov
leave
dec
pop
add
stos
dec
cld
ss
daa
xlat
push
mov
inc
push
aad
xchg
adc
xor
popa
repnz
pop
cli
inc
push
pop
lds
cmp
sbb
aam
pop
lock
idivb
mov
sti
js
jbe
aam
sahf
sub
pop
decl
dec
inc
mov
nop
je
and
pop
and
div
push
aad
xchg
push
and
fmull
test
lahf
iret
fucom
fdivr
lock
jp
movsl
cmp
in
adc
imull
sub
fnsave
stc
adc
and
mov
andb
ljmp
mov
in
sub
mov
inc
cmc
mov
mov
dec
inc
push
test
rorb
mov
mov
sub
stos
mov
add
cmp
sub
dec
lret
shlb
mov
or
cmp
rcrl
in
mov
sub
mov
dec
mov
mov
arpl
and
scas
xor
aam
jbe
adc
mov
stc
mov
fdivl
dec
and
inc
les
xlat
pop
inc
and
movsb
push
mov
mov
inc
pop
ficomps
cmp
nop
sub
and
xor
inc
pop
xor
insb
mov
call
mov
or
pop
int
cmpsl
or
and
je
mov
pop
inc
lcall
mov
adc
into
test
dec
scas
aam
mov
inc
mov
mov
mov
mov
cwtl
arpl
into
jbe
mov
cli
inc
test
and
cwtl
gs
or
decl
mov
enter
lret
fdivrl
and
shrb
inc
and
fisttps
jecxz
cltd
add
sahf
mov
mov
cmp
scas
mov
mov
ret
inc
insl
sbb
xchg
or
mov
scas
inc
lea
mov
int3
movsb
mov
pop
mov
loope
jecxz
popa
in
mul
leave
mov
aam
inc
scas
xor
pop
mov
sub
pop
es
push
mov
icebp
sbb
mov
les
pop
xor
dec
cmp
and
inc
mov
lcall
jg
pop
addl
sbb
jno
or
cmp
dec
pop
in
push
cmp
cmpsb
fidivs
jl
test
add
inc
fidivrl
xor
testb
cmp
ret
add
dec
test
mov
mov
xor
iret
lea
arpl
jmp
je
dec
addl
imull
mov
inc
or
hlt
jb
push
push
cmp
push
and
push
jns
jo
popa
movsl
mov
pushf
cmp
dec
add
fcomip
push
mov
scas
inc
or
es
lock
pop
in
dec
sub
mov
aam
pop
sbb
ja
lds
sub
and
xor
rcrb
sub
pop
das
scas
rorb
cmpsb
roll
inc
inc
insl
cli
test
ficompl
test
sbb
jbe
add
mov
scas
xlat
and
dec
dec
add
insb
push
insl
je
pop
sub
fsubs
fcoml
clc
mov
jge
cmp
pop
int
sub
fstl
in
push
cmp
mov
mov
or
inc
in
lods
loope
jbe
jb
mov
lret
sbb
cmp
pop
popl
sub
dec
cmp
cmp
int3
dec
xor
rorb
mov
dec
add
in
sbb
lock
sub
js
cmp
cmp
subl
cli
std
mov
lret
pushf
ret
aam
fildll
push
pop
stos
xchg
mov
test
push
not
adc
push
jle
rcrl
pusha
mov
inc
add
or
rcr
stc
xlat
call
and
inc
les
es
mov
out
xchg
andnps
popf
aam
dec
and
mov
xchg
inc
ss
rorb
insb
adcl
jae
addb
dec
shll
xor
pusha
aas
icebp
int
ret
cmpsb
leave
arpl
mov
fiaddl
mov
mov
push
mov
dec
adc
mov
mov
fisttps
aam
jp
or
stc
popa
pop
call
fsubr
out
mov
aas
mov
mov
lret
cmp
add
push
mov
jno
pop
insl
ficoml
cltd
dec
ret
pop
mov
adc
stos
pop
inc
mov
mov
add
ret
pop
and
mov
aad
dec
sub
jl
leave
call
cmp
in
bound
hlt
dec
inc
dec
ret
or
xor
into
pop
mov
cmp
ss
dec
mov
and
lods
test
cltd
sub
dec
lea
or
adcb
jae
shll
cmp
mov
setb
pop
jmp
icebp
mov
cmp
push
dec
fwait
call
rolb
jo
xchg
lret
iret
sub
mov
pop
rorl
loopne
mov
mov
mov
push
fs
xor
mov
mov
dec
add
sub
arpl
lret
movsl
lds
mov
pop
addl
inc
mov
sbb
xchg
leave
sarb
adc
sbb
pop
add
push
aaa
outsl
insb
mov
cli
inc
dec
push
rorb
into
mov
sub
push
push
pop
shrl
in
in
push
dec
cld
cli
fsubrl
or
nop
xchg
adc
into
cmp
xchg
dec
lea
imul
sbb
cs
xor
push
push
xor
pop
iret
icebp
fnstcw
and
cmp
dec
addl
ret
cmp
aam
clc
cmp
xor
push
pushf
jge
jnp
into
movsl
mov
data16
pop
test
dec
xchg
test
cld
test
mov
mov
inc
mov
fmul
or
iret
add
or
adc
xchg
mov
aam
lods
pop
dec
mov
scas
fldcw
inc
jl
lahf
int
popa
fldcw
cmpsb
mov
dec
mov
fnstenv
lret
inc
mov
or
push
cs
insb
cmp
sbb
into
sub
fdivs
test
in
in
xor
pop
shrb
inc
push
stos
mov
dec
roll
sub
xchg
fnstenv
scas
xlat
roll
mov
push
out
fcmovne
and
and
xor
mov
scas
into
push
cmp
sbb
jo
lods
mov
cmpb
jb
push
push
xor
rcr
pop
xorl
and
mov
cld
fsubr
mov
enter
ret
mov
pop
loopne
leave
and
fisttps
test
inc
flds
mov
mov
mov
rorb
pop
sub
mul
scas
xchg
sub
xchg
jp
gs
adc
inc
xor
jmp
cmp
push
inc
and
adc
adc
sub
cld
into
sub
xchg
mov
dec
cli
pop
pop
add
lret
lret
lret
cmpsl
flds
pusha
leave
adc
pop
push
pop
sbb
xchg
pop
inc
cmpsb
push
ljmp
dec
and
push
das
shrb
pop
fmuls
lea
ret
mov
add
dec
add
iret
and
push
into
scas
dec
push
out
jb
pop
fmull
test
sub
pop
sahf
jns
lods
fldt
cli
inc
orl
into
push
cmpsl
orl
popa
fstp
scas
iret
dec
bound
enter
fisubl
push
mov
and
and
fsubrs
or
dec
cld
or
dec
pop
dec
sub
mov
inc
mov
xchg
fnsave
or
mov
dec
mov
mov
dec
inc
push
adc
pop
lret
pop
or
mov
push
adc
in
pusha
mov
mov
add
call
mov
inc
mov
push
fcom
inc
inc
ja
mov
mov
or
or
fmull
mov
dec
rorb
les
fstpl
lods
inc
add
pop
mov
push
cmp
sub
pop
add
pop
or
iret
sti
mov
pop
mov
mov
add
mov
cltd
jl
mov
mov
push
xchg
dec
or
cmpsb
mov
enter
push
push
adc
das
mov
cmpxchg
inc
dec
jl
nop
ds
call
and
pop
push
inc
xor
test
lahf
xchg
push
loope
mov
mov
lods
dec
iret
mov
dec
cltd
in
stos
jmp
test
mov
add
mov
ret
scas
pop
pop
cmpsb
roll
mov
dec
push
mov
push
and
into
int
pop
pop
pop
pop
xor
mov
dec
jmp
dec
cwtl
sbb
mov
test
aam
lret
pop
inc
popa
pop
insl
out
testl
mov
mov
repnz
lds
inc
lds
or
ss
in
jle
movsl
adc
pop
dec
mov
xchg
mov
fidivs
jb
add
movsl
lds
cs
inc
push
ja
inc
push
rcrl
dec
ljmp
in
mov
cmpsb
pop
clc
push
inc
stos
pop
mov
xlat
inc
mov
pusha
add
ret
int
arpl
xorl
fldt
pop
scas
es
cmpsb
rolb
test
mov
notl
mov
mov
mov
mov
and
xor
dec
push
cmp
dec
stos
lret
fcmovnu
adc
aam
push
mov
and
pop
iret
pop
push
daa
inc
and
mov
push
push
out
insb
sub
and
sub
sti
cld
mov
scas
and
aam
and
xlat
push
rol
sbb
sub
out
cmp
push
les
mov
aad
and
mov
mov
jns
or
test
cmp
fs
dec
nop
fwait
ljmp
jns
ds
js
frstor
mov
ss
scas
addl
ret
lea
xor
xor
lods
cmp
cld
or
jle
orb
int3
xlat
inc
dec
daa
sub
idivl
cmpsl
bound
into
iret
and
fstpl
idivb
inc
mov
inc
stc
scas
scas
mov
cmp
sub
sub
ja
cmpsb
lods
scas
cld
iret
and
inc
test
sbb
pop
in
lock
fistpll
pusha
and
pop
pop
cmp
movsb
fs
cmp
in
dec
divl
add
in
cmp
cmp
mov
adc
push
scas
sub
xor
cmp
adc
insl
scas
dec
inc
negl
dec
mov
sub
mov
xchg
mov
aad
inc
inc
push
lret
mov
je
mov
cmp
bound
mov
dec
cmp
leave
fiadds
movsl
sub
cmp
pop
add
dec
and
arpl
xor
add
mov
sub
xlat
aad
xchg
dec
add
loopne
push
mov
add
je
xchg
mov
add
add
or
or
outsl
fldt
or
mov
gs
aas
xor
loopne
or
inc
rorl
mov
mov
jecxz
daa
pop
sub
mov
dec
lods
loopne
fcomps
mov
pop
xor
push
psrlw
orl
push
enter
or
adc
imul
jb
das
into
loopne
lods
push
push
mov
sbb
fs
adc
or
cli
movzwl
sar
jp
daa
or
in
dec
ds
rcrb
jmp
xor
and
jb
cmp
or
mov
cs
cmc
push
jae
aad
mov
int
out
dec
stos
fcmovne
jns
nop
bound
in
mov
js,pn
pop
mov
or
mov
into
jb
enter
fimull
pop
mov
dec
xor
pop
push
pushf
dec
sub
push
fnstcw
orl
sbb
lcall
push
js
fisubrs
mov
add
orl
xchg
enter
inc
ljmp
cmpsb
jbe
shll
stc
sbb
mov
xlat
int3
js
push
cmp
fisttpll
gs
into
sub
int
or
fbld
jo
fnstsw
jg
mov
rorl
fsubrs
inc
int3
push
mov
ss
mov
mov
fiaddl
rcrb
arpl
aam
mov
pop
lea
xchg
rcrb
and
sub
int
dec
cmp
push
je
xchg
fimuls
loope
sub
fpatan
sub
mov
mov
xor
mov
lcall
out
mov
sub
stos
add
aas
es
mov
int3
stos
dec
scas
in
mov
inc
mov
push
mov
mov
sub
stos
xor
scas
pusha
or
sub
fistps
or
jno
mov
push
push
into
sub
mov
mov
mov
call
dec
nop
mov
push
aam
cld
fisubl
lret
inc
aad
pop
mov
bound
pop
sub
mov
outsb
cmp
cltd
cld
aam
inc
into
mov
mov
scas
adc
int3
das
mov
jge
ret
mov
adcl
add
dec
push
push
pop
mov
or
mov
sahf
pop
and
cmc
icebp
jle
inc
out
inc
mov
lcall
push
dec
pop
inc
mov
add
mov
xchg
xchg
daa
xor
jns
and
ret
movsb
rol
movb
jbe
rol
push
fcoml
aad
fimuls
jb
shlb
mov
inc
or
iret
xchg
push
push
and
mov
fisubrs
cmp
mov
cs
jnp
cli
push
dec
mov
jb
lret
lret
mov
orl
stos
sub
ret
rorb
mov
adc
cmp
stos
jl
cmp
ret
cmpl
dec
add
xor
mov
pop
imul
dec
cmp
pop
fwait
dec
xor
and
mov
pop
dec
cmp
mov
je
dec
cmp
iret
pop
mov
cmpsb
pop
fs
sub
les
aam
mov
inc
xor
test
mov
sub
cmp
jmp
lods
stc
mov
call
fbld
push
mov
sub
movsl
andl
mov
icebp
jmp
sub
test
or
mov
mov
mov
cli
pop
cmp
fidivrl
jecxz
cmp
xor
xchg
inc
mov
and
xchg
shll
pop
dec
repnz
loopne
int3
and
cld
pop
pop
mov
gs
push
cmpsl
mov
mov
cmp
ret
and
sarb
loop
nop
inc
push
cmp
mov
push
push
sbb
shrb
cltd
sub
dec
fmulp
inc
fisttps
call
inc
mov
sub
int3
scas
jp
adc
scas
add
cmp
mov
push
mov
pop
xor
push
movsl
mov
arpl
dec
cmp
and
pop
mov
push
add
adc
dec
mov
mov
sbb
stos
mov
aam
adc
movsb
push
cmp
sbb
mov
pop
or
inc
lret
movsb
movsl
sub
mov
dec
or
in
inc
sahf
ficoms
lea
dec
fiaddl
sbb
lods
stc
pushf
scas
fcmovnb
jno
int
nop
rorl
sbb
xor
mov
dec
outsl
int
cmp
clc
fmull
mov
mov
pop
dec
pop
pop
cmc
dec
inc
into
ret
mov
dec
push
add
jb
aam
cmp
mov
gs
and
shlb
movsb
mov
cld
pop
push
pop
sahf
mov
xlat
xlat
fcmovnu
pop
lret
mov
push
push
in
xchg
cli
mov
mov
loope
dec
lds
or
movsb
xor
mov
jns
sbb
pop
mov
and
mov
cmp
or
jle
push
add
loop
shlb
cmp
ds
pop
mov
mov
test
fsubrl
js
jbe
or
mov
or
jp
test
mov
fimuls
orl
test
ds
outsl
mov
pop
mov
or
ret
mulb
mov
mov
call
xlat
into
mov
loopne
dec
xor
fcoms
adc
xchg
fisubl
mov
dec
cmpxchg
mov
fidivs
stc
jb
rcrl
stos
lods
aad
cmpsl
movsb
adc
aas
mov
mov
push
aas
or
mov
scas
es
arpl
stos
xchg
cmp
dec
mov
test
outsb
sbbl
in
stos
lods
dec
mov
fsubrl
push
pop
dec
movsb
mov
getsec
xchg
pusha
inc
pop
cmp
aam
pushf
scas
test
mov
inc
cltd
je
inc
sub
push
dec
inc
fadds
into
test
mov
mov
push
xchg
xchg
xchg
mov
movsb
pop
out
dec
clc
lods
ret
add
mov
out
inc
test
repz
cli
pop
aad
push
push
jl
push
push
mov
aad
inc
pusha
adc
fstpl
mov
rclb
sbb
sub
push
into
cmp
movsb
shr
dec
lret
cmpsl
test
lods
push
gs
sub
mov
push
ja
movb
dec
mov
leave
fistpll
pop
scas
dec
mov
test
je
pop
inc
pop
mov
dec
rcrb
xor
sbb
mov
test
mov
jl
hlt
mov
cltd
subl
stc
mov
daa
pop
scas
rorb
xor
insb
stos
mov
dec
dec
xchg
pop
ret
rolb
idivl
lcall
mov
push
inc
pop
dec
cwtl
push
inc
or
mov
dec
sub
gs
out
mov
jecxz
mov
pop
push
and
jp
sub
cmp
mov
inc
dec
int3
dec
push
mov
jecxz
mov
shrl
mov
jmp
rcl
cltd
inc
cmp
jmp
mov
cltd
cmova
aad
mov
push
sub
xlat
stc
dec
jbe
cli
jl
cli
call
cmp
ds
faddl
popf
lret
sti
clc
int3
xor
push
inc
or
cmp
mov
fnsave
into
inc
std
mov
jmp
mov
fmuls
mov
add
fdivr
inc
scas
jp
and
inc
xchg
add
mov
dec
dec
js
inc
xor
movsl
shll
loopne
sahf
dec
pop
mov
mov
pop
dec
mov
xchg
pop
cmpsl
add
lcall
ret
sbb
mov
aaa
inc
es
mov
mov
xor
push
nop
adcl
cmp
pop
xor
cld
mov
inc
roll
dec
pop
pop
fsubrp
lcall
repz
xchg
jl
sub
xchg
int
jle
or
inc
or
roll
enter
stos
mov
fmul
sub
rcll
ljmp
cmp
fists
xor
push
mov
cmp
bound
push
hlt
fstl
mov
loope
mov
cmp
cmpsl
inc
push
mov
xor
xlat
ret
fnstsw
ret
cmpb
adc
fpatan
and
fwait
push
mov
dec
push
push
cmp
inc
sub
pop
xor
xchg
fsubl
shlb
enter
sub
mov
xchg
and
jne
cli
jg
jp
mov
iret
int3
push
rcrb
and
dec
or
adc
add
aam
lods
scas
dec
rorl
push
inc
fistl
cltd
fisubrs
mov
mov
fildll
ror
outsl
aam
shlb
ud2
aad
scas
pop
jne
aad
int3
mov
mov
xlat
mov
mov
or
stos
mov
mov
xor
cld
dec
ja
cli
or
sahf
push
fbld
jmp
sbb
flds
jg
cmp
pop
int
into
pusha
add
cld
inc
xor
inc
xor
mov
xchg
mov
pop
loope
pop
lret
lret
and
stos
cmp
call
bound
mov
xchg
mov
scas
mov
cmp
out
mov
aaa
xor
add
dec
mov
sub
mov
push
and
fnstsw
lret
mov
mov
pop
sbb
daa
dec
cmp
mov
dec
leave
lcall
sub
hlt
push
and
sbbb
fbstp
dec
ret
mov
mov
or
mov
imul
inc
mov
mov
sub
cmpsl
or
xlat
add
push
xchg
pop
mov
add
push
mov
arpl
mov
xchg
fsubrl
push
xchg
and
push
into
xlat
into
pop
sbbl
sub
cmp
pop
and
xlat
dec
insb
pop
les
inc
aam
aam
inc
inc
xor
mov
aad
xchg
push
aad
insb
mov
ss
lds
dec
call
dec
adc
mov
push
mov
lret
sub
divl
mov
je
data16
je
push
pop
ret
repnz
push
or
xchg
xor
inc
mov
dec
ud0
test
call
gs
jns
je
rcl
repnz
push
xlat
or
mov
or
sbb
mov
inc
jb
iret
js
dec
mov
xchg
sub
dec
or
test
shl
jmp
cmp
jae
add
aad
gs
fld1
dec
in
hlt
testl
mov
mov
mov
push
fstp
pusha
ret
sub
lcall
fcomps
cmp
mov
mov
mov
je
adc
add
lret
lods
pop
js
mov
push
lea
out
mov
je
rcr
mov
inc
sub
lcall
jno
xorb
int
arpl
xor
pop
fimuls
fcoml
mov
inc
xor
stos
mov
pop
into
aam
scas
loopne
jb
cmp
ret
sub
mov
cmp
orl
push
negb
cmpb
into
lret
inc
pop
loopne
test
dec
xchg
mov
and
or
add
repnz
cmp
cmp
xlat
pop
push
je
push
sbb
add
cwtl
in
into
jecxz
popa
pop
add
push
or
scas
xchg
arpl
and
loopne
dec
orl
mov
push
imul
dec
push
mov
sub
decb
mov
adc
pop
shrl
dec
jecxz
mov
das
mov
cmpsl
loopne
test
mov
loopne
fldcw
ds
stc
mov
xor
dec
lret
adcl
shlb
cmc
mov
inc
xchg
adc
jbe
mov
mov
cltd
stos
loopne
test
or
mov
int3
gs
fs
mov
lahf
lret
ljmp
pusha
fwait
xor
mov
pop
or
rcl
jl
stc
mov
sub
es
jl
nop
pusha
dec
loopne
gs
lret
arpl
cmp
je
mov
fists
mov
and
mov
or
ss
fisubrs
jne
call
mov
mov
lret
or
mov
fisttps
cltd
mov
or
xorl
inc
push
mov
scas
mov
inc
ret
add
pop
call
jge
dec
into
adc
mov
xor
lret
ret
push
mov
dec
stos
sub
jbe
and
pop
sub
or
inc
and
mov
xchg
mov
cmpl
xchg
pop
xor
xchg
sbb
mov
cltd
test
mov
sbbl
push
xchg
mov
loope
rcr
lods
mov
call
roll
and
cld
iret
pop
ror
xor
cmp
mov
hlt
fnsave
pusha
inc
push
inc
inc
jl
xchg
pop
cmpsb
push
cmp
jl
pop
sub
xchg
cmp
cld
mov
cmp
frstor
add
add
mov
pop
or
jb
mov
inc
mov
fmuls
loope
jle,pt
mov
push
and
gs
mov
cmp
iret
sbb
pop
sub
jb
mov
mov
push
adc
aaa
scas
rcrb
lods
fneni(8087
or
xlat
sub
pop
jb
stos
rcrb
jnp
mov
sbb
and
and
xchg
pop
xor
mov
xchg
jbe
into
ds
insb
pop
jecxz
in
mov
mov
scas
sub
sbb
js
pop
repz
xor
sbb
mov
xor
pop
mov
cld
dec
pushf
cmp
sbbb
mov
xchg
pusha
mov
dec
sarb
pop
mov
popf
js
jbe
je
or
inc
mov
dec
lret
fucomip
int3
dec
push
cltd
sub
and
dec
ret
ffreep
mov
scas
daa
inc
gs
dec
das
mov
scas
test
lret
or
scas
iret
mov
pavgw
mov
sub
cmp
mov
cmp
out
xchg
fdivs
fistpl
inc
inc
test
and
lock
cmp
mov
ror
in
xor
aaa
mov
inc
insl
cmp
sahf
fsub
mov
dec
xor
mov
or
vpunpcklqdq
mov
mov
filds
scas
xor
data16
pop
mov
add
xchg
pop
mov
lods
subl
ret
pop
or
pop
leave
es
je
push
sti
movsl
fldt
fisttps
sbb
mov
xchg
dec
or
out
mov
insb
push
jge
in
ror
add
mov
inc
xor
mov
sub
mov
push
jb
push
jl
fmul
ret
mov
pop
jecxz
enter
jle
xlat
dec
fistps
iret
dec
adc
inc
jl
faddl
stos
call
mov
and
dec
popf
push
sarb
xchg
cmp
or
es
cltd
push
js
push
jp
add
fisttpll
cwtl
xor
fstpl
popa
sbb
jb
push
xchg
inc
dec
pop
mov
loopne
gs
mov
sbb
xchg
push
sub
dec
pusha
lods
enter
inc
dec
cmp
sub
aam
pop
pop
ret
mov
sub
into
push
js
pop
pop
mov
filds
mov
add
fsts
sbb
enter
and
add
je
popf
je
into
fiaddl
icebp
in
sbb
shlb
stos
inc
movsl
sub
lods
enter
adc
sub
xor
scas
inc
shrb
lahf
mov
add
movsb
inc
xor
cmpsl
mov
mov
lods
and
ds
mov
adc
and
jp
and
sbb
in
and
cmp
mov
dec
inc
fld1
out
xlat
mov
mov
rcr
sahf
mov
sub
xchg
jae
pslld
adc
pop
adc
jp
dec
or
mov
sbb
jle
into
fisubrs
pop
cmp
mov
call
lods
or
lods
je
fnstcw
cmpsl
push
orl
scas
cmpsb
mov
sub
inc
ret
and
scas
aam
in
pushf
inc
mov
mov
pop
xchg
shll
or
int3
xchg
cltd
xor
cmp
daa
loopne
add
mov
pop
aam
fbld
ss
cmp
loope
orb
mov
out
hlt
add
lret
aaa
mov
jno
adc
or
mov
adc
out
mov
cmp
push
shlb
shrb
fadd
cmpsl
and
das
or
mov
push
push
mov
ljmp
loopne
dec
arpl
inc
pop
stos
and
mov
xchg
loopne
aam
pushf
arpl
into
divl
cmp
mov
xchg
les
into
pusha
ret
and
mov
cmp
lret
cs
sub
movsl
dec
in
orl
dec
xchg
loopne
pop
lcall
or
mov
call
sti
in
inc
lds
mov
mov
cmp
lds
mov
stos
mov
shll
in
insb
sar
into
flds
mov
inc
jp
fmull
add
xlat
insl
scas
ds
loopne
rcrl
add
movb
fnsave
int
sbb
rol
sub
aad
push
dec
pop
xlat
fstps
or
ret
push
dec
pop
xlat
movsl
lcall
cmp
test
mov
data16
jl
je
dec
dec
sub
nop
jb
pop
shrl
mov
cmp
pusha
pop
and
and
add
push
icebp
mov
je
cmpsb
dec
in
mov
and
pop
stos
xor
jb
jmp
or
or
cld
add
gs
dec
ret
cmpsb
mov
insl
add
push
test
pop
es
and
push
fadd
mov
jp
lds
mov
mov
mov
arpl
test
and
les
lahf
mov
and
mov
push
sbb
dec
aaa
out
xor
scas
mov
pop
das
call
inc
test
fsts
mov
adc
lods
mov
xor
mov
test
mov
adc
inc
lgs
and
fsubrp
mov
mov
das
dec
in
mov
fisubrl
cmpb
dec
mov
sbb
cmpsl
mov
push
stc
les
pop
into
loopne
pushf
mov
xorb
pop
or
fld
pusha
mov
xor
push
mov
sarb
pop
or
clc
xor
mov
fmulp
psubusb
or
pop
add
rol
aam
and
je
and
cs
ficomps
sub
mov
pusha
inc
adc
jle
cld
mov
loopne
in
in
cltd
mov
or
push
sbbb
sbb
enter
or
mov
pusha
dec
jge
pop
rorl
les
pop
cmp
mov
rcrl
sub
aas
out
sbb
xchg
les
repnz
xor
fadd
fucomi
push
loope
aam
and
call
lret
scas
fadds
cmp
inc
in
dec
xchg
btsl
rorl
sub
jmp
lret
insb
jb
ret
jb
dec
inc
subl
cmpl
cmpsl
dec
gs
pop
pop
in
sub
mov
aam
in
insl
mov
daa
aad
fstpl
add
fists
nop
ret
insb
inc
pop
aam
push
jmp
dec
cld
shlb
fldl
test
lods
xor
fmuls
sub
pop
xlat
cmp
les
inc
jp
inc
cmp
es
mov
icebp
es
loopne
xchg
pop
aam
scas
subl
aas
mov
mov
repz
pushl
dec
pop
sarb
xchg
shll
mov
mov
cmp
loop
rcr
push
jb
pop
stc
mov
inc
adc
das
jne
divb
add
mov
pop
std
mov
arpl
push
ficomps
push
test
mov
pop
clc
ret
jo
or
fimull
cltd
pop
and
and
leave
movb
sub
mov
fidivs
gs
lret
testl
mov
stc
call
and
push
lret
inc
jle
inc
nop
mov
shll
loopne
std
insb
js
pop
pop
sub
dec
xchg
xchg
pop
sbbl
les
enter
out
pop
iret
into
adc
sbb
fs
stos
cmp
xlat
cli
insb
in
movsl
jbe
pop
mov
ljmp
scas
repnz
mov
inc
jbe
aaa
add
mov
mov
pop
dec
pusha
add
decb
push
mov
xlat
test
and
stos
mov
adc
rcrb
xor
mov
mov
stc
mov
pop
sub
cld
jns
mov
inc
dec
insb
push
mov
inc
mov
jb
les
adcb
dec
cwtl
cmp
dec
and
sub
fbstp
mov
inc
es
xchg
cmp
jmp
jle
es
cld
push
or
pop
idivb
ret
push
orl
dec
jle
pop
add
in
dec
insl
cmp
mov
add
sub
scas
jns
in
lret
enter
push
jmp
ret
sahf
mov
dec
sbb
lock
jb
dec
xchg
call
mov
imul
inc
movsl
and
dec
push
mov
push
sub
push
push
stc
add
js
inc
mov
add
sub
into
adc
mov
insb
call
orl
mov
arpl
cmove
aad
or
jmp
or
mov
call
sub
mov
jnp
mov
xchg
mov
sbbl
out
loope
int
lea
les
mov
add
imul
inc
jo
lods
dec
negl
mov
push
and
arpl
pop
mov
ficoms
mov
hlt
les
pop
push
mov
xor
out
cmp
fiadds
pop
fstpl
clc
ljmp
add
mov
fs
and
sub
add
dec
fwait
sub
push
out
mov
dec
mov
outsl
fdivrs
dec
or
pop
lcall
jmp
cmp
mov
lret
call
into
sbbl
pop
xchg
pop
rorb
cmpsl
iret
gs
push
xchg
add
push
or
das
test
cmp
clc
test
ficoms
adc
dec
inc
pop
dec
insl
mov
mov
mov
mov
movsl
push
pop
mov
in
push
cmpsb
xor
push
lock
sub
insb
xchg
dec
jle
mov
mov
push
insb
pop
fidivl
aad
std
in
mov
outsb
mov
fldl
cmp
sbb
jns
addr16
add
xchg
mov
push
xchg
ffreep
dec
or
dec
ret
nop
dec
imul
stos
incb
loopne
subl
call
enter
and
inc
push
xor
mov
pop
adc
aaa
or
lret
dec
push
push
inc
ret
arpl
push
and
pop
test
mov
aaa
inc
out
gs
mov
xchg
mov
mov
jge
mov
xor
adc
or
int
or
dec
pop
imul
cld
stc
dec
mov
sbb
mov
aad
adc
pop
cmpsl
jge
xchg
aad
mov
dec
into
sub
mov
xchg
in
inc
punpcklwd
pop
jae
pop
test
rorl
insb
mov
pusha
inc
loopne
push
xchg
pop
lret
sbb
mov
rorl
aam
sub
es
mov
dec
or
jp
in
pushf
sarl
push
push
mov
inc
ja
cld
repnz
mov
sti
fbstp
movsl
lods
hlt
arpl
mov
mov
inc
out
mov
add
cmp
pop
mov
mov
adc
ret
loopne
mov
shrl
lcall
rol
ret
insb
jns
adc
pusha
jne
dec
mov
ret
xchg
loopne
pop
sub
stc
test
inc
cli
mov
mov
orl
pop
aas
gs
nop
or
test
idivb
into
pusha
popf
push
push
pop
and
mov
push
xchg
ret
loopne
or
or
mov
rcl
adc
jb
mov
pop
subps
xor
loopne
gs
and
loopne
cmp
cli
dec
cwtl
or
mov
imul
pop
push
inc
movsl
in
arpl
inc
fmuls
sub
dec
es
lcall
es
sub
les
test
add
jecxz
and
cmc
mov
les
arpl
fldenv
or
push
mov
add
aam
jg
add
cld
sbb
mov
add
mov
push
xor
mov
cmp
xchg
cs
cmp
inc
xchg
frstor
dec
in
dec
pop
testb
sarl
movl
sbb
adc
xlat
rcll
pop
mov
cmpsl
scas
xor
bound
inc
mov
lcall
or
mov
push
jmp
xor
mov
jo
inc
stc
mov
ret
lahf
aam
jb
jmp
inc
dec
in
sbb
mov
aad
sbb
stos
jb
xchg
fbstp
xchg
adc
in
jecxz
dec
ja
dec
sbb
mov
mov
inc
and
ja
clc
push
inc
enter
movb
fdivrl
and
cmp
cmp
and
inc
jecxz
in
scas
cli
pop
es
dec
sbb
dec
xchg
ret
adc
push
ret
sub
scas
sarl
inc
adc
jmp
fmul
ds
pop
adc
popa
xchg
pop
fucom
xchg
fcmovnb
andl
and
sub
fstp
pop
in
add
cwtl
insb
inc
xchg
shlb
xlat
inc
loope
mov
mov
pop
add
cmp
sbb
mov
inc
xchg
xchg
xor
inc
cmp
mov
push
or
loopne
push
aad
ret
ljmp
cld
cmp
fiaddl
add
mov
sti
cld
push
pop
mov
pop
adc
in
les
and
sbb
add
test
push
les
mov
in
mov
xlat
aam
pop
cmp
xor
mov
aad
loopne
stc
cmpsb
pop
or
int
jmp
ret
sbb
sub
sub
mov
adc
cmp
and
mov
sbb
pop
dec
jge
incb
sarl
dec
pop
mov
add
xchg
aam
sbb
faddl
lods
xor
iret
or
dec
cld
lds
fsubl
dec
and
cmpsl
xchg
pop
rcrb
fidivl
sarb
add
fs
sub
shrb
dec
push
or
xor
dec
es
cltd
adc
sub
add
adcb
xor
cld
or
xchg
ret
rol
bound
je
fwait
divb
dec
add
mov
mov
inc
add
test
cmp
xchg
push
cmpsb
les
js
add
cmp
mov
ja
sub
jno
fcompl
inc
pop
and
fstpl
outsl
scas
shrl
popf
sub
addr16
loop
sub
into
pop
fsubp
je
sub
out
arpl
push
sub
add
loopne
xchg
mov
adcl
leave
scas
loopne
and
push
add
into
leave
dec
pusha
add
inc
mov
les
cld
dec
mov
cmp
mov
dec
movntq
add
cmp
add
or
dec
add
and
or
xorl
arpl
das
movsb
ret
cmp
pop
mov
leave
xchg
inc
cmp
jmp
das
mov
adc
ss
out
loope
int3
les
jecxz
movsb
inc
inc
adc
ret
push
gs
sbb
stos
imul
fmulp
int3
out
shl
arpl
jp
push
cmpsl
into
pusha
mov
loope
sub
sub
outsl
and
mov
or
lret
pushf
xchg
dec
and
subb
insb
push
fildl
jnp
mov
mov
pop
adc
dec
ljmp
into
test
adcl
sub
jae
push
mov
push
push
lods
mov
ss
in
push
add
push
inc
xchg
pop
xlat
jbe
je
cmp
test
subl
cmp
pop
fs
test
cmpsb
push
or
gs
movsb
loopne
idivl
sbb
push
dec
cmp
les
popa
shlb
test
cli
mov
mov
jmp
lds
je
aad
and
mov
int3
jecxz
jmp
dec
mov
inc
push
loopne
add
or
daa
adc
mov
lahf
or
pop
sub
fcos
imul
in
leave
nop
lods
sub
pop
mov
aam
fwait
arpl
dec
mov
pop
push
inc
inc
sub
push
rcr
fisubrs
mov
in
pop
mov
xchg
inc
and
dec
inc
fstp
pop
xchg
push
rolb
test
out
push
lds
push
cwtl
fsts
and
mov
xor
pop
add
dec
fwait
mov
mov
nop
jge
add
fdiv
movsl
sub
fists
cmp
subl
pop
lret
dec
xchg
push
dec
inc
es
inc
lea
and
cld
test
call
xor
movsb
mov
xor
push
pop
pop
popw
sub
clc
sbb
xchg
test
sbb
xor
ja
clc
pop
push
or
jns
es
push
pushf
pop
lret
icebp
mov
mov
mov
pusha
andl
pop
mov
xor
in
fucomi
mov
ret
mov
scas
dec
mov
and
cmp
xor
mov
mov
or
mov
or
fdivrp
cs
lods
inc
inc
scas
pusha
or
mov
jnp
xor
inc
dec
xchg
sbbl
pop
inc
xor
mov
fld
and
imull
sbb
mov
cmovne
dec
scas
dec
orl
scas
call
mov
and
mov
jp
mov
fldcw
xlat
mov
in
lret
xor
push
js
jbe
push
pop
stc
jae
or
adc
adc
outsl
sub
jmp
push
adc
insb
add
pop
sub
insb
mov
jl
sub
xor
mov
adcl
pop
xor
shl
adc
adc
jl
aam
push
test
cltd
push
ds
or
inc
dec
mov
stos
andb
mov
and
insb
int
dec
mov
inc
scas
sbb
mov
dec
xchg
scas
mov
stos
inc
cmpsb
or
mov
inc
mov
pop
pop
mov
out
mov
inc
fsubrl
jae
aaa
stos
test
sub
pop
mov
pop
pushf
frstor
dec
mov
mov
rcl
lret
add
sub
xchg
jl
add
mov
lea
mov
inc
xor
icebp
or
xchg
mov
pusha
outsb
sbb
faddl
mov
cmp
lea
push
pop
ds
inc
je
pop
dec
sbb
aas
sub
mov
in
mov
jmp
and
pop
mov
inc
shrb
lods
pop
pop
dec
or
xchg
je
std
js
fldl
sub
sub
mov
lods
inc
pusha
jbe
inc
sbb
stos
and
loopne
or
mov
mov
sub
in
lods
das
sub
inc
cmp
movsb
ret
mov
int3
rcrb
iret
sahf
lret
and
nop
push
mov
mov
inc
fstpt
pop
scas
es
les
mov
inc
mov
fdiv
jmp
pop
ffree
cs
les
mov
insb
sarl
push
imul
pop
cmp
push
mov
cmpsb
cmp
mov
movsb
iret
pop
jecxz
aas
mov
xor
cli
insb
and
push
mov
xchg
pop
mov
test
add
mov
repz
sub
dec
xchg
dec
scas
sub
arpl
js
rcll
mov
inc
cmpsb
cmpsb
or
aam
mov
mov
push
mov
cmp
test
add
movsb
pop
adc
cltd
ss
fildll
fimuls
inc
mov
aam
sbb
sub
add
scas
cmp
mov
add
pop
lods
insb
or
pop
mov
test
cmp
sbb
mov
lcall
pop
mov
push
jb
rorb
add
cs
cld
pusha
or
inc
pop
daa
add
mov
jp
sbb
iret
and
jb
xchg
jb
pop
mov
jmp
xor
mov
mov
jmp
int3
push
out
pop
sub
mov
push
lret
into
sbb
scas
sub
shl
cmp
test
cmova
xchg
mov
jle
sub
mov
sbb
pop
hlt
addr16
mov
jle
int
orl
dec
out
dec
dec
es
mov
lar
cmp
stc
mov
int3
cld
cmp
popa
les
into
movsb
arpl
andl
dec
test
push
xor
daa
sub
push
cmp
pop
mov
jne
in
mov
xor
mov
sub
mov
ror
rol
fldenv
lret
adc
movb
ffreep
or
push
jnp
mov
aad
pushf
mov
rol
jecxz
and
addl
in
insb
xor
push
or
pop
sub
in
mov
rcr
push
idivb
arpl
inc
imul
xor
inc
adc
inc
jl
mov
pop
cmp
mov
ret
and
add
xlat
outsb
insl
mov
mov
xor
pop
xchg
cmp
adc
inc
dec
mov
push
cld
lret
dec
lods
cmp
aaa
sub
cmp
cmp
nop
or
jmp
stc
arpl
pop
sarl
sbb
cmpsl
xchg
mov
gs
dec
sbb
pop
xor
cmc
fdivl
mov
sub
or
jl
adc
push
mov
aas
mov
xor
dec
loope
sub
add
xchg
scas
mov
out
mov
insl
cltd
and
mov
cld
es
dec
cmc
mov
arpl
rolb
cmpsb
rorl
je
jl
push
xor
ret
mov
jns
pop
sub
test
pop
sbbb
mov
xchg
mov
and
mov
bnd
scas
or
dec
scas
pop
xor
int3
nop
xchg
scas
push
xor
dec
adc
ror
jb
cmc
jbe
inc
dec
jl
lcall
dec
lock
mov
inc
lcall
jns
jb
cmpb
movsl
ficoml
mov
inc
sub
lret
fstp
pop
pop
fidivrs
xchg
mov
inc
stos
jns
adc
cmp
inc
loopne
out
jecxz
movsb
cmp
mov
ffree
fimuls
mov
mov
or
push
rcrb
cld
add
mov
scas
and
mov
push
mov
ret
ljmp
pop
cltd
or
stos
lcall
iret
mov
xlat
inc
mov
pop
xor
xor
rclb
jp
mov
orl
mov
dec
stc
sub
jecxz
scas
mov
jns
ret
sub
testl
movsl
mov
sub
xor
and
cld
rorl
shll
fistpll
mov
inc
fdivs
mov
inc
add
ffree
pusha
sbb
push
lock
imul
mov
stos
test
scas
inc
in
fdivl
rcrb
loopne
shrl
pop
mov
mov
jbe
test
inc
xlat
in
mov
fists
mov
sbb
sub
call
daa
lds
jne
dec
xchg
mov
movsb
sub
sub
or
shlb
ds
push
stc
test
mov
aam
or
das
flds
add
xchg
test
pop
add
ds
aam
call
xlat
cmpsl
or
lods
fsubl
mov
mov
push
dec
mov
and
mov
cli
jbe
je
jb
add
cmp
mov
mov
pusha
jne
aas
sbb
dec
pop
sub
or
aas
dec
mov
mov
or
adc
mov
fmul
les
inc
lds
nop
dec
in
shlb
aam
mov
xchg
rol
icebp
mov
or
pop
or
xor
xor
mov
mov
in
sub
and
int3
mov
jp
inc
sub
fsubrs
iret
shll
pcmpgtw
in
xor
fistpll
ret
fimull
shrl
arpl
push
stos
xchg
sub
jmp
mov
push
lds
pop
dec
ss
lret
adc
xor
je
jnp
xor
sub
vpaddb
ret
je
roll
dec
iret
xchg
sbb
fadds
lret
fdivrs
shrl
and
shlb
mov
mov
lods
subb
test
ret
mov
fcompl
sub
mov
pushf
sub
into
mov
pop
fisttpl
scas
dec
dec
mov
xor
std
cld
xchg
xor
lret
fstpl
xor
shl
in
xor
leave
stos
pushf
jge
fadds
mov
push
xor
pop
mov
arpl
jl
or
roll
dec
mov
in
mov
ret
inc
outsb
daa
jb
lds
mov
sub
xchg
jl
ret
int3
fildll
test
or
mov
add
push
jbe
rcl
rorl
shrb
or
sub
xchg
leave
inc
ret
mov
jns
xor
inc
cli
shlb
mov
sub
mov
cld
mov
cli
mov
mov
push
mov
ds
mov
std
pop
mov
clc
jle
into
lret
mov
dec
lock
mov
dec
adc
cmpsb
and
sub
mov
or
aad
jae
pop
fldt
mov
iret
nop
mov
xlat
xor
leave
jns
push
push
test
mov
scas
jns
sbb
mov
push
imul
jecxz
sarb
add
pusha
sbb
jb
cmp
iret
cmp
mov
in
rol
cmp
mov
mov
add
scas
insb
je
dec
lds
ret
jb
add
ret
sarb
lret
scas
das
leave
sub
xlat
mov
aad
fists
mov
lret
mov
or
mov
sbb
push
test
shlb
aad
cmpsl
fisttps
pop
ret
scas
mov
sbb
nop
ljmp
and
in
fisttps
js
hlt
fisttpl
inc
mov
into
push
push
loopne
in
sub
stos
fsubrp
mov
int3
fisttpll
mov
push
fstps
icebp
xor
repz
ret
xchg
cld
int
mov
pop
in
loop
and
lcall
push
sub
addb
xor
loopne
dec
lret
lods
into
lods
push
mov
mov
enter
pop
pusha
sbb
fimull
in
add
mov
pop
pop
inc
cmpb
fstp
fstps
ret
sbb
mov
shrb
fdivs
mov
sub
fmuls
fdivrs
sub
mov
mov
jmp
xor
cltd
pop
push
xor
cmovb
dec
mov
adc
das
les
es
or
fldt
into
subl
out
rolb
adc
xchg
or
push
test
mov
mov
mov
lods
cmpsl
xlat
lds
add
mov
add
jp
sbb
mov
cld
jp
mov
jl
push
in
mov
mov
pop
loop
jp
inc
fsubr
aad
sub
gs
roll
xchg
jns
int
xchg
adc
mov
stos
jmp
sub
dec
mov
or
jecxz
loopne
les
shlb
int3
and
sub
aad
pop
inc
shr
sub
add
inc
fisubrl
loope
mov
lods
xchg
scas
or
lods
xlat
pop
pop
stos
pop
mov
mov
std
xlat
pop
push
inc
inc
lods
nop
push
aad
or
mov
add
xor
lret
sub
jbe
rcrl
lock
sub
adc
inc
pop
mov
inc
hlt
dec
pop
or
imulb
push
fbstp
dec
push
sbb
inc
cmp
mov
mov
mov
push
mov
cmpsl
mov
mov
dec
in
rcr
xchg
pop
mov
jmp
inc
dec
ljmp
fistps
xor
pop
ds
xlat
pop
ds
push
lret
in
das
xor
dec
push
aam
and
je
jecxz
mov
xorl
inc
push
scas
xor
daa
js
mov
mov
inc
aas
pop
daa
in
jno
sarl
int
arpl
lret
mov
mov
aad
or
xor
in
sub
xor
push
sub
cld
sub
subb
dec
enter
mov
or
inc
mov
push
ss
xchg
aas
add
dec
frstor
mov
dec
mov
es
pop
mov
sbb
in
mov
idivl
mov
mov
mov
in
das
lret
jbe
les
lret
adc
jl
xchg
push
cmp
int3
aam
in
sub
mov
in
cld
lods
lea
fcoml
sub
scas
stos
dec
or
mov
into
push
sub
mov
push
cld
add
cli
xor
adc
ret
add
add
add
inc
iret
ficoms
fwait
xor
cmpsl
or
stc
mov
ds
cld
jmp
das
cli
mov
or
mov
add
les
ret
cmp
mov
dec
ror
and
jecxz
inc
test
ds
mov
add
sub
mov
std
cld
dec
push
lods
movsb
into
cltd
movntps
push
push
cmpsl
filds
fmuls
and
xor
fsubrl
shr
inc
ret
add
add
pop
pop
int3
cld
lret
mov
lcall
push
mov
mov
rclb
cmp
int3
pusha
pop
cmpsb
shll
mov
lret
fildll
jle
pop
test
inc
xor
mov
push
cmp
or
fdivs
dec
jecxz
ror
mov
scas
sub
inc
pop
mov
and
sub
fcmovb
mov
rclb
iret
dec
jl
push
sub
js
mov
scas
push
les
shl
clc
div
stos
mov
and
mov
outsl
fcomps
mov
inc
dec
ficompl
ja
inc
or
mov
ret
dec
arpl
andnps
int
andl
les
sub
and
and
push
xchg
push
lods
mov
mov
ret
call
cmp
inc
aaa
and
inc
ret
in
mov
dec
xlat
es
or
leave
sub
fdivrs
fldcw
sahf
sub
int3
push
stos
stos
mov
push
cmpsb
cmp
sarl
loopne
push
lock
cld
leave
call
mov
pusha
or
test
aad
sbb
leave
adcl
sub
cmpsb
repz
jl
dec
int
push
push
int3
add
add
jno
pop
int3
orb
mov
or
fldcw
sub
jle
jle
jle
ror
lock
test
fcomp
add
and
mov
cmp
mov
xchg
rolb
mov
or
mov
or
adc
pop
gs
fcompl
push
cmpsl
pop
fimull
and
loope
mov
subl
jae
movsb
add
push
cmp
pop
roll
dec
pmovmskb
pop
dec
pop
or
int3
and
or
push
inc
jecxz
call
xchg
inc
sbb
mov
pop
es
jecxz
push
sbb
mov
test
pop
ss
fadd
aas
das
pop
inc
ds
mov
dec
jp
pop
addl
xor
fmull
jmp
lods
or
xlat
adc
xor
pop
pop
push
fstp
inc
pop
pop
pop
fisubrl
and
cmp
mov
or
dec
sbb
shll
cs
xor
cmpl
scas
push
mov
adc
aas
mov
enter
push
xor
pop
add
fildll
and
add
sub
outsb
je
pushl
js
int
stc
xor
ljmp
push
movsl
lret
test
lea
inc
and
or
dec
add
cmpsb
imul
push
je
and
inc
or
cmpsl
pop
inc
add
and
fucomip
mov
push
lds
pop
fstl
shl
mov
mov
xchg
in
pusha
cmp
push
fadds
push
adc
lods
lods
mov
sub
mov
inc
andl
cmp
lods
inc
or
push
mov
or
pop
push
and
insl
sub
mov
xor
dec
ret
and
mov
mov
jp
stos
lret
push
rclb
test
dec
mov
cld
jbe
xor
sub
filds
loopne
cmp
fsubrl
aaa
fidivrl
movsb
test
mov
movsb
arpl
mov
fsubl
mov
mov
mov
or
mov
or
jb
scas
mov
ds
les
je
cmp
movsb
inc
fiaddl
iret
xchg
pop
sub
das
pop
dec
dec
mov
in
cmc
pushf
xchg
dec
ret
fistpll
movl
lcall
mov
fstpl
push
sub
cltd
les
call
mov
insl
dec
mov
pop
lret
adc
push
sub
push
leave
inc
cwtl
dec
push
mov
mov
sbb
mov
scas
xlat
movsl
test
push
js
jbe
je
les
les
test
sbb
xchg
sub
scas
mov
orl
pop
mov
xor
pop
dec
aaa
lcall
js
mov
int
test
fucomi
insl
cld
rcll
pop
jg
cmpsb
jp
cld
dec
fimull
and
adc
mov
das
mov
cld
cld
mov
mov
je
shll
mov
orl
shll
les
pop
lods
xor
push
mov
loopne
pop
stos
push
lods
in
fsubrs
rcrb
mov
mov
mov
shufps
pop
stc
dec
leave
sub
mov
inc
xchg
push
pusha
and
xchg
fcmovne
inc
mov
mov
mov
dec
stc
jbe
sub
jecxz
mov
xor
rorb
aam
stc
mov
cld
scas
aaa
push
cli
into
movl
pop
ret
pop
les
sub
jl
rclb
int
sub
xchg
pusha
leave
jle
fmulp
dec
mulb
cli
mov
push
or
hlt
mov
inc
jmp
sub
ret
xchg
enter
lret
fistpl
mov
adc
mov
cmpsb
inc
mov
pop
and
xchg
jns
les
mov
mov
pop
and
daa
mov
arpl
sub
jae
push
add
loopne
add
mov
movsb
lcall
movsl
out
xor
repnz
pushf
dec
cld
dec
pop
push
push
mov
mov
mov
push
sbb
inc
outsl
in
in
js
push
xchg
scas
cmp
xor
stos
mov
mov
fidivs
mov
xlat
mov
jle
pushf
cld
push
pop
in
mov
in
enter
movb
rol
int3
mov
test
dec
int3
lods
shl
cmp
pop
adc
cld
push
js
jbe
dec
sub
lds
sbb
ret
icebp
icebp
shll
xor
imul
add
inc
enter
rolb
aam
fcmovnu
decb
cmpsb
push
mov
movsl
add
cli
push
bound
hlt
dec
scas
lret
dec
in
das
push
call
es
fbld
jp
movsl
cld
cmp
dec
push
lods
pop
into
jo
loop
sub
repnz
jnp
lret
cld
lret
sub
rcrb
cld
mov
out
mov
fstpl
cwtl
jo
pop
mov
mov
inc
nop
or
stos
xchg
push
pop
pop
mov
jg
cld
or
mov
inc
sub
imul
push
les
lods
aaa
and
jl
jne
xchg
dec
pusha
mov
insl
fdiv
bound
scas
jp
ret
cld
mov
cmp
shrb
sbb
rolb
scas
les
mov
punpckldq
jnp
ss
leave
inc
push
sub
paddusw
xchg
mov
add
inc
aad
xchg
lods
rolb
out
mov
push
dec
lods
stos
cld
rorl
add
cmp
and
add
sub
xor
push
cmp
or
cmpl
cmpsl
sarl
cmp
stos
mov
sub
cmp
test
push
mov
inc
sbb
movsb
dec
add
or
in
int
and
push
lods
inc
enter
lcall
ret
xor
adc
and
daa
in
rolb
add
inc
aas
ror
jp
and
jo
cmp
cmpsb
cmpsl
int
and
fmull
mov
inc
mov
pop
int3
or
add
push
mov
in
fisttpll
pop
sub
mov
mov
mov
xor
fldl
cmp
push
lea
fcomps
push
jp
xchg
pop
add
pop
inc
mov
shlb
and
enter
mov
xchg
and
mov
in
sub
push
shrb
dec
jl
lret
push
int3
cmp
pop
mov
scas
pop
push
jne
mov
mov
xor
rcr
sbb
nop
test
enter
sbb
dec
adc
lods
pop
aam
faddl
aad
or
push
popa
xor
lods
test
add
push
add
aam
mov
adc
sbb
jb
scas
cld
pop
arpl
aam
cltd
sub
test
lcall
dec
push
cmp
mov
ret
add
into
mov
int3
jle
jle
dec
cmp
fdivrs
jp
inc
rcr
cs
fists
loopne
loopne
push
int
fisubrl
movsl
insb
shll
sbb
mov
aam
adc
cmp
dec
mov
jbe
mov
test
loope
mov
fisubrs
or
sub
mov
or
cmp
cmpl
dec
dec
mov
push
sbbb
sbb
jbe
mov
enter
clc
mov
push
xchg
into
lret
cld
ds
mov
inc
sahf
pop
jns
xchg
pushf
ret
cmp
in
cli
sub
ret
scas
aam
xor
xorb
jb
inc
cmc
mov
es
fnsave
push
aad
xchg
cvtdq2ps
xor
ret
fmull
xchg
mov
push
cmp
fsubl
imul
push
movsb
mov
and
xor
add
sbb
loope
outsb
mov
pop
cmp
push
pop
mov
sub
jge
adc
shll
mov
mov
insl
popa
sub
jp
mov
jmp
ror
mov
lds
sbb
ret
cmp
xchg
sbb
aad
cmpsl
mov
jo
xor
or
mov
inc
rorl
dec
idivl
mov
sub
dec
enter
call
lret
mov
mov
je
rol
scas
dec
fisttps
loopne
aaa
push
mov
addl
xor
jge
or
push
js
sbb
call
lds
stos
sbb
xchg
lea
scas
push
stos
mov
inc
arpl
jbe
loopne
mov
js
aad
dec
jl
cmp
jl
dec
nop
outsl
xor
lret
cld
dec
mov
push
imul
mov
loopne
aad
into
xchg
push
add
std
into
pop
mov
fs
clc
scas
stc
adcl
je
inc
dec
cmp
cld
mov
call
mov
leave
ret
sub
pusha
xor
push
rolb
mov
fcoms
inc
mov
mov
xor
test
popa
push
insb
les
xchg
loopne
push
shlb
imul
push
add
mov
rcl
shrb
xor
adc
out
mov
int3
adcl
fimull
mov
out
mov
mov
in
fnstcw
and
mov
jp
mov
aad
pop
dec
mov
dec
jl
mov
es
pop
pop
inc
adc
mov
mov
cmp
mov
push
jl
sbb
xor
mov
mov
and
insb
mov
ljmp
cmp
pop
aad
pop
mov
movsb
mov
push
xchg
jl
and
pop
fnsave
inc
push
lods
lcall
int
dec
push
cs
mov
sbb
add
cmp
lret
sub
cld
movsb
sub
fsubrl
repnz
imul
mov
jle
cltd
sub
stos
movsb
lcall
movsl
std
insl
pushf
aas
jp
lock
xabort
jno
movsb
iret
sub
arpl
mov
scas
push
sub
loopne
scas
sub
mov
add
jae
rcr
mov
or
pop
ss
sub
iret
pop
pop
mov
cmp
repnz
mov
inc
aas
mov
pushf
pop
jle
dec
cmp
popf
cmp
je
jp
stos
cs
inc
popa
mov
or
dec
popf
aas
les
shrl
mov
notl
dec
or
dec
xchg
into
mov
lret
and
jne
das
shrb
stos
outsl
ret
mov
popa
enter
fdiv
or
mov
outsb
push
addl
jl
aad
dec
push
or
pop
orl
push
sarl
inc
dec
lods
into
add
lret
cld
xor
lods
pusha
add
jmp
mov
dec
adcb
movsl
xor
mov
jp
dec
inc
aam
xor
mov
rorb
push
repz
lea
fucomp
ret
sbb
mov
or
hlt
xlat
and
sub
mov
mov
orl
scas
fisttpll
xchg
lods
into
push
and
lret
imull
aad
dec
mov
push
jnp
cmp
cmpsb
test
pop
pop
les
in
dec
adc
sarl
inc
shll
pop
pop
rclb
mov
jb
das
dec
dec
cld
int3
push
mov
pop
addl
dec
clc
push
add
nop
push
push
mov
insl
fcoml
pop
pop
pop
loop
sbbb
aas
in
dec
jbe
fdiv
xchg
and
pop
js
jbe
push
pop
sub
jae
mov
lods
push
dec
xor
ror
fxch
flds
pusha
mov
pop
pop
inc
movsl
xchg
xor
int
jns
mov
jbe
aam
dec
pop
push
dec
pop
mov
dec
sub
push
rorb
shrl
jns
mov
mov
aam
pushf
jno
into
mov
xchg
mov
xchg
in
push
hlt
mov
mov
sub
aaa
mov
xchg
rcr
iret
push
sub
sub
dec
jmp
stos
cli
rcll
jnp
sbb
push
mov
xor
xor
xor
loopne
pop
adc
subl
enter
in
stc
push
in
popa
clc
mov
jae
shl
pop
inc
cmp
pop
ret
cmpsb
aad
push
push
bound
push
mov
gs
stos
jne
rclb
cmp
or
test
cli
push
cmp
xlat
pop
jge
mov
test
sbb
fidivs
mov
rcll
mov
cmpsl
cmp
or
inc
dec
jg
pop
add
rorb
mov
sub
adc
pop
lds
pop
hlt
adc
mov
mov
or
sub
push
sub
scas
pusha
or
jmp
aad
xorl
push
fmul
xor
ljmp
dec
faddl
out
mov
mov
dec
adc
push
sbb
push
xchg
das
loopne
mov
insb
fimuls
and
mov
dec
dec
lods
bnd
jl
les
fld
jmp
and
fmull
repnz
fcmovnb
sbb
dec
and
cmpsl
mov
xchg
imul
cld
and
and
cmp
mov
xchg
or
out
in
movsb
mov
mov
dec
cmp
int3
and
adc
mov
push
js
rol
shrb
imul
push
incb
mov
movsb
aas
ss
aam
jecxz
les
xchg
dec
dec
fisubs
adcl
ljmp
mov
pop
mov
test
dec
in
iret
lock
fnstenv
xlat
les
scas
jns
arpl
mov
adc
pop
dec
jns
xchg
iret
les
jbe
or
stc
aaa
insl
fadd
mov
jl
jg
push
jp
add
pusha
push
or
push
cltd
mov
test
dec
or
mov
push
loopne
aas
in
mov
pop
mov
or
cld
iret
mov
adc
jle
and
leave
push
daa
add
js
or
scas
test
sbb
sti
mov
shlb
push
clc
push
in
je
jle
pop
pusha
adcb
sbb
mov
outsb
rol
jb
xchg
dec
sub
xchg
ffreep
pop
push
sub
mov
push
int
mov
dec
jecxz
stos
lcall
sti
shll
mov
adc
stos
inc
mov
or
iret
inc
loopne
xchg
push
mov
fsubp
arpl
leave
mov
flds
es
adc
fsubrs
or
mov
andl
pop
cmp
popf
xchg
and
aam
in
imul
pop
insb
scas
dec
pop
mov
fsubs
cmpsb
scas
dec
sti
in
and
sub
xor
repz
nop
aam
clc
fcmovbe
xor
fidivs
add
scas
repz
shll
inc
cld
lds
int
ds
lret
xchg
xor
stos
fucom
cmp
fsubl
cmpsl
cmp
icebp
cmpsb
jno
mov
popa
cwtl
lret
dec
mov
dec
cmp
jl
cmp
shll
push
mov
xor
or
in
cmp
arpl
out
aaa
inc
push
push
sbb
stos
inc
mov
dec
add
mov
mov
jle
outsl
sub
fisttpll
jecxz
xlat
addl
fcmovb
clc
frstpm(287
in
movsl
popa
mov
ret
add
mov
xor
lock
sub
adc
lcall
fisubrs
mov
in
cld
stos
dec
mov
cmp
sub
mov
mov
xor
int
dec
add
xchg
pop
orb
lods
lea
rorl
mov
lcall
scas
dec
fidivs
orl
push
adc
cmpsl
mov
push
ds
jmp
pop
jp
arpl
ljmp
sbbl
lock
mov
mov
rolb
sbb
xchg
pop
sub
sbb
or
scas
push
outsl
xor
or
loopne
into
push
pop
in
push
cltd
call
into
or
push
sbb
push
xchg
es
lock
fildll
lahf
xor
jae
mov
mov
scas
pop
cli
mov
mov
pop
pop
and
ret
mov
cmpsb
inc
or
aam
scas
cmp
lods
jle
inc
push
mov
lcall
shlb
mov
cmp
xchg
mov
js
cmp
cld
xlat
or
jge
pop
inc
pop
maskmovq
imull
int
test
or
mov
dec
std
mov
lds
sbbl
and
mov
mov
roll
jo
ret
pop
out
mov
ror
loop
xchg
pop
outsb
jle
into
push
or
inc
movsl
inc
dec
sti
lret
jp
jbe
aad
or
daa
es
shlb
pop
mov
adc
pop
xlat
ds
jb
jo
dec
int3
jo
int
jne
pop
push
mov
movsb
mov
mov
lds
in
adc
mov
dec
pop
int3
stc
cmpb
pop
cwtl
out
lcall
pop
sbb
fldenv
jecxz
mov
add
gs
cs
jnp
mov
dec
fs
xor
push
sbb
xchg
call
mov
pop
pop
rcrb
cli
je
stos
cli
adc
pop
lahf
in
cltd
dec
addr16
arpl
lcall
aam
mov
sub
mov
push
fdivl
xor
sbb
aaa
dec
sti
jl
jp
push
push
ss
fidivl
rcr
xchg
loopne
pop
cld
cmp
inc
sti
fadd
lods
mov
faddl
pusha
dec
sbb
fbstp
ljmp
mov
xor
iret
mov
sbb
dec
sbb
push
aad
dec
xchg
scas
ds
xlat
fnsave
sub
fistl
das
mov
or
inc
dec
loop
and
xchg
into
push
cmp
adc
scas
and
pusha
gs
inc
or
lods
mov
xchg
mov
inc
loop
mov
xor
js
rcr
test
sub
xchg
pop
mov
add
daa
fisubs
lods
ljmp
add
push
xor
mov
mov
lods
inc
mov
dec
and
loop
call
mov
add
and
movaps
sub
add
or
xchg
jns
pop
cmovne
fmull
ret
pusha
xlat
mov
mov
adc
sarl
arpl
fnstsw
fildl
rcr
ljmp
push
dec
mov
fwait
cltd
mov
or
mov
mov
inc
int
dec
cld
mov
add
and
push
adcl
mov
or
pop
rol
ret
mov
push
pop
scas
in
scas
in
jecxz
shr
fimuls
jmp
inc
inc
add
notl
push
or
mov
into
enter
ss
inc
dec
orb
into
cwtl
dec
xchg
shlb
es
mov
sub
dec
dec
loopne
aam
jb
lods
or
push
sarb
cmp
push
movsb
pop
mov
and
xor
cmp
rol
int3
pop
call
movsb
scas
xor
adc
and
std
cmp
mov
inc
adc
pop
test
or
push
jl
adcl
add
add
ret
cmp
add
shl
dec
fidivs
int3
fidivrl
movsl
pop
inc
mov
mov
mov
lods
sub
stos
mov
pop
test
push
mov
mov
push
pop
mov
mov
pop
lret
xor
fwait
cld
ds
mov
fcomp
push
dec
pop
xchg
outsb
or
add
xor
mov
fstpt
mov
pop
in
mov
pop
sbb
push
faddl
daa
inc
xor
dec
insb
mov
mov
add
cmp
sar
mov
xchg
jle
jle
jle
push
inc
fildl
int
mov
into
xchg
imul
scas
dec
dec
pop
mov
in
push
dec
insb
push
pop
js
jbe
or
pop
mov
int3
mov
push
rcrl
in
cltd
inc
lock
mov
and
inc
cltd
push
sahf
scas
stc
inc
sub
push
insb
xlat
mov
xchg
cmp
loop
clc
loopne
inc
push
jmp
pop
dec
repnz
inc
addl
setp
fistpll
fldcw
xchg
insl
mov
pop
push
pop
test
ljmp
iret
inc
jge
and
and
xchg
xchg
fcompl
mov
add
pusha
push
xchg
pop
leave
setae
rorb
and
lcall
jae
cmpsl
mov
pop
icebp
and
and
aad
or
sub
mov
add
ret
aam
sub
mov
dec
pop
mov
mov
int
inc
rcrl
and
jnp
ret
inc
push
sti
xor
push
mov
inc
sbb
adc
pop
sbb
xchg
mov
or
dec
ror
rcl
mov
inc
icebp
dec
lods
push
lock
insb
roll
cmc
push
or
sub
jl
jbe
sarb
out
push
inc
arpl
repz
out
xor
pop
mov
sub
aaa
jecxz
popa
jmp
es
lock
pop
psubsw
push
js
adc
sahf
enter
pop
push
mov
sbb
mov
mov
arpl
dec
xchg
inc
adc
sbb
or
mov
clc
mov
mov
pop
jg
orb
rol
shll
pop
sub
pop
dec
movsb
gs
dec
outsl
lret
ror
inc
sub
xlat
mov
adc
sub
pop
xlat
mov
sahf
pop
fwait
pop
out
push
sbb
mov
sub
cmpsb
andb
mov
sub
cmp
add
enter
mov
fnstenv
hlt
jecxz
into
push
test
jl
imul
rolb
add
sar
cmpsb
test
xor
nop
orl
xchg
pop
flds
lahf
mov
pop
push
mov
or
dec
shll
cmpsb
loopne
aas
push
pop
pop
stos
fincstp
lods
mov
jp
mov
pop
inc
mov
dec
push
add
jecxz
fidivrl
mov
xor
gs
lds
shrl
jns
or
fimull
xchg
pop
mov
pop
pop
inc
adc
fldt
iret
and
adc
dec
mov
jecxz
leave
inc
mov
js
sbb
push
push
jecxz
into
push
add
push
out
pop
inc
stc
popf
cmp
subl
stc
jne
cmp
jmp
mov
push
inc
xor
push
je
jb
loopne
pop
mov
jle
ret
pop
int3
and
mov
sub
jno
test
mov
xor
push
cmp
hlt
or
enter
pop
sbb
mov
fidivs
cmp
mov
push
in
adc
jo
lods
inc
ljmp
cmpsl
inc
push
fxch
add
mov
cli
push
push
sub
and
int3
pop
push
popa
mov
stc
orb
daa
or
scas
mov
pop
mov
mov
push
std
push
xchg
and
scas
fisubl
sub
add
adc
sub
repnz
dec
pop
pop
xchg
faddl
mov
int
mov
mov
pop
sub
into
inc
popa
sub
mov
jl
jg
inc
mov
adc
enter
loopne
add
or
mov
loope
das
loope
lods
cmc
mov
mov
mov
or
cmp
out
loopne
jle
ds
jno,pt
jne
out
push
ret
movsb
stos
es
dec
stos
mov
and
dec
mov
or
xchg
stos
or
ret
lds
and
add
scas
pop
cs
jnp
sub
scas
stc
enter
adc
pop
lcall
pusha
push
dec
push
mov
shr
imul
fdivrs
mov
add
or
jle
pop
cmp
jle
dec
and
dec
add
adc
pop
pop
sti
cld
xor
fcomp
sarl
in
jo
dec
fiaddl
js
add
or
pop
mov
lea
mov
adcl
and
fists
cmp
lods
push
imul
data16
mov
je
aas
call
repz
fstpt
test
rcll
push
and
leave
xor
lock
mov
ss
pop
dec
or
mov
dec
mull
sub
inc
mov
orl
mov
fldenv
cmpsl
negl
jle
jle
jle
jle
jle
int
push
dec
arpl
push
push
mov
mov
cltd
mov
xor
cwtl
mov
test
pop
dec
das
shl
insb
sub
inc
xor
mov
loope
dec
jmp
inc
clc
in
cmp
outsb
sub
cld
xor
test
and
push
movl
sbb
movb
lods
shll
loop
pop
pop
push
inc
rolb
push
add
rorl
cmp
mov
lods
pop
mov
call
jmp
jno
dec
mov
aam
push
mov
add
jecxz
in
mov
sub
pop
cli
adc
jb
ror
js
mov
sub
push
adcl
sti
cmp
jo
fsubrp
jno
mov
aas
push
pop
ret
add
dec
sbb
xchg
cmp
jne
fists
scas
sub
or
inc
fisubrs
dec
aas
mov
mov
mov
jb
mov
mov
movsl
jb
sub
sub
insb
push
or
fnstsw
push
das
mov
mov
loopne
sti
jbe
add
mov
cld
push
mov
pop
dec
lock
pop
add
fcoml
adc
popf
mov
aam
xchg
mov
fcmovbe
test
and
xchg
insl
jl
jg
xor
mov
stc
loopne
or
dec
xchg
mov
mov
xchg
and
push
add
xor
pop
cltd
sar
dec
push
push
mov
test
pushf
push
inc
aam
dec
lds
pop
dec
lahf
jb
cltd
loopne
and
aas
mov
pop
mov
xlat
scas
cld
mov
mov
jb
mov
mov
add
sub
mov
mov
xor
mov
adc
mov
daa
lea
sbb
cmpsb
inc
add
xor
pop
movaps
leave
push
cmpsl
out
pop
enter
outsb
loopne
subl
mov
mov
xor
jge
pop
xchg
xchg
push
or
jmp
pop
adc
sub
std
jb
sub
jle
or
mov
int
mov
in
fld
sub
in
jns
call
add
xor
push
or
lods
enter
dec
jecxz
lods
add
inc
adc
push
adc
mov
imul
dec
xchg
xor
mov
into
or
mov
push
mov
push
int
fsubr
mov
sbb
rol
xor
mov
xchg
or
push
pop
int3
fsubl
fsts
mov
sub
mov
call
in
push
xor
pop
outsl
rorb
and
jl
pop
jecxz
call
xchg
fiadds
add
xlat
fcoms
pop
pop
jmp
daa
cld
or
mov
pop
cmp
jle
sarb
icebp
gs
dec
mov
cmp
add
cld
push
cltd
and
pop
loopne
cmp
int3
les
mov
ret
call
popf
cld
xorb
pushf
call
movsb
pop
loopne
mov
cmp
sbb
xchg
push
inc
push
cmp
and
jl
inc
dec
inc
cmp
sub
dec
inc
push
mov
ret
in
scas
fldcw
out
leave
mov
lds
mov
stc
dec
xchg
cmp
mov
add
scas
push
or
aas
cli
mov
cmova
jbe
je
push
xchg
push
stos
pop
sub
mov
out
add
lock
cs
or
cmp
mov
adc
inc
ret
and
jge
into
rcl
iret
xor
mov
loope
mov
xchg
cmp
sub
loop
cltd
das
mov
lods
push
loopne
mov
sbb
dec
call
adc
mov
dec
dec
enter
dec
sbbb
sarl
pop
pop
pop
addr16
test
ret
and
inc
jne
stos
mov
lods
mov
mov
int3
sub
push
loopne
add
cmp
pop
orl
jbe
or
push
add
das
or
je
mov
lret
fidivrs
mov
and
je
repz
test
lcall
fistl
sti
je
sub
jl
aas
sub
scas
push
fidivs
call
scas
add
jmp
bound
popa
int3
imulb
daa
xor
inc
xor
aaa
dec
das
movsl
call
mov
dec
inc
popl
push
push
pop
leave
sbb
xlat
rclb
push
mov
cwtl
ljmp
add
mov
aam
fwait
jbe
je
jb
loopne
jle
movsb
inc
pop
xor
jl
iret
xchg
nop
xchg
jle
test
ret
pop
sub
mov
and
mov
je
pop
adc
frstor
adc
cmp
xchg
xor
mull
mov
xchg
jbe
push
push
sti
and
pop
mov
mov
mov
jmp
movsb
xadd
cltd
jb
adc
ss
pusha
lret
or
sarl
inc
js
jbe
xchg
inc
dec
leave
xlat
push
addr16
jne
mov
mov
les
mov
dec
pop
pop
xor
pop
adc
fsub
scas
dec
mov
mov
scas
aas
lcall
pop
clc
cmp
push
sub
sbb
or
lea
xor
cmp
add
fcoml
clc
push
jmp
add
dec
clc
je
shl
iret
mov
gs
add
out
out
mov
cld
mov
jecxz
and
dec
mov
pusha
cvttps2pi
xor
hlt
ret
loopne
jle
jno
mov
insl
push
and
lret
dec
push
jl
mov
adc
xchg
mov
push
lds
faddl
xor
add
jg
cmp
or
push
mov
mov
iret
push
cmpsl
adc
fld
dec
bswap
dec
mov
ja
xchg
les
out
inc
mov
gs
cmp
fcmovnu
xchg
pushf
aas
sub
insl
sbb
mov
mov
mov
mov
xchg
and
pop
fsubrl
push
push
or
shll
and
push
sub
loopne
and
in
sbb
cwtl
and
stos
xchg
mov
lgs
mov
lret
scas
ret
iret
sub
cltd
test
out
add
mov
sub
mov
stos
dec
mov
fwait
pop
push
or
push
nop
xchg
fbld
jg
dec
push
sub
cmp
ret
jno
pop
adc
dec
lods
mov
addl
icebp
pusha
lods
sahf
sbb
cmp
push
nop
mov
aam
in
pop
push
mov
ljmp
lret
push
pop
pop
out
mov
fchs
jp
mov
pop
dec
mov
mov
das
insb
pop
cmp
call
dec
pop
ror
js
jle
jecxz
int
cmovne
mov
or
mov
push
scas
dec
sbbl
popf
lods
pop
cmp
dec
movb
mov
rorb
lods
aas
xorl
scas
faddp
xor
movsl
lcall
push
dec
adc
lods
cmpsl
sarl
fldcw
mov
jns
lock
cmp
add
mov
dec
push
scas
mov
scas
shlb
mov
nop
outsl
and
nop
stos
jle
add
loop
jo
sbb
adc
into
aam
scas
dec
lcall
mov
test
es
lock
dec
stc
int
jecxz
and
mov
xor
int
adc
sub
in
mov
insl
pop
mov
push
inc
bound
out
inc
aam
daa
xchg
repz
pusha
call
pop
jle
mov
insl
mov
test
and
inc
mov
mov
jbe
je
push
scas
and
mov
cmpsb
rorl
xor
in
scas
sub
popa
xchg
aas
cmp
fistpl
into
cmp
and
push
mov
jbe
dec
xor
lods
cmp
sbb
inc
push
mov
pop
int
cmp
or
push
mov
sub
and
inc
mov
xor
lret
fcom
mov
nop
testl
push
push
mov
mov
int
lret
icebp
dec
push
inc
sub
xor
js
imul
xlat
rorb
inc
inc
sbb
jb
ret
dec
xlat
adc
fwait
lea
mov
fs
sub
dec
pop
cmp
test
scas
and
pushf
mov
jle
pop
arpl
cmp
mov
ffree
xchg
and
cmpsb
push
mov
mov
imul
dec
dec
insb
mov
cs
push
loopne
es
push
mov
push
inc
dec
jl
fmul
mov
pop
addl
mov
push
add
arpl
inc
data16
pop
dec
pop
test
in
mov
roll
mov
or
mov
das
inc
sub
jne
mov
jp
adc
ret
rcl
mov
shll
mov
in
and
and
jne
cli
in
xor
das
sub
xchg
pop
sbb
inc
mov
rol
in
mov
jo
mov
je
cmp
jmp
push
sub
sub
movsl
and
ja
pushl
pop
push
mov
mov
imul
jbe
je
rcll
fcmovnb
ror
push
iret
pushf
sarb
movsb
jns
les
dec
pop
lods
mov
push
or
sbb
sbb
dec
pop
and
add
mov
xor
mov
add
cmp
mov
xor
pop
dec
pop
push
cmpsl
push
pop
push
pop
push
dec
pop
pop
inc
fcoml
add
inc
popa
adc
jns
jecxz
lret
inc
lea
mov
add
outsb
dec
addl
pushf
adc
inc
mov
mov
dec
scas
push
mov
mov
or
dec
daa
lret
lcall
scas
sbb
and
icebp
mov
dec
xlat
cmp
mov
mov
dec
mov
fadd
cmpsl
inc
fimull
jl
dec
mov
mov
shll
sub
cld
inc
dec
andb
sub
cli
call
push
movsl
sub
jne
sbb
sti
mov
int
cmpl
mov
pushf
pop
pop
inc
jp
push
or
sub
js
test
mov
dec
insl
mov
and
push
dec
popa
sbb
pop
inc
mov
shrl
fimull
test
mov
cwtl
mov
xchg
imul
jno
mov
push
mov
push
lahf
pop
loopne
push
xor
out
inc
dec
std
adc
adcl
and
push
pop
cs
push
sub
movsb
pop
cmp
fistpll
cld
roll
es
mov
fidivs
js
ficoms
pop
xor
mov
and
dec
cmp
xor
jmp
loopne
pop
or
cmpsl
cltd
pop
iret
mov
movsl
ffree
jns
mov
xor
in
les
cli
cmp
daa
xchg
gs
fsts
insl
xchg
jns
jl
fwait
mov
shlb
xchg
mov
fidivrs
pop
adc
xor
adc
test
pop
cmp
aad
push
mov
fcomi
aam
call
xchg
sbb
fxch
stos
insl
xchg
push
jg
popa
mov
les
xor
fxch
stos
cmpsl
mov
inc
iret
fsubs
stos
xchg
pop
das
dec
cmp
push
push
pop
push
andl
dec
xor
push
cmpsb
lds
pop
fwait
pop
and
movsb
lods
jg
test
rcr
mov
or
scas
roll
pop
outsb
aaa
pop
sbb
xor
add
mov
jmp
and
pop
inc
aam
mov
mov
ds
xor
cmp
xor
js
ret
scas
pop
adc
jmp
sub
pop
push
test
mov
jbe
fidivrl
test
add
dec
test
or
icebp
sbb
call
sub
ljmp
mov
scas
mov
xlat
aas
mov
mov
inc
add
mov
dec
push
clc
jne
sbb
mov
cltd
test
mov
ret
mov
loopne
pop
lahf
push
jno
mov
xchg
fstps
jae
movsl
out
scas
movb
fldl
adc
in
jl
sub
fdivrs
mov
or
cmc
pop
push
sub
cltd
cli
inc
jmp
pop
or
cmp
jbe
dec
dec
roll
imull
xor
fucomi
jno
push
cmpsb
xor
sar
shlb
or
push
xor
and
dec
mov
les
bound
dec
xlat
arpl
in
jg
fsubs
mov
fstpt
push
scas
ret
cmp
pop
sarb
jecxz
and
pop
shll
and
rolb
sbb
xor
sub
sub
sub
inc
aaa
cmp
pop
xor
mov
jle
btcl
popa
fnstcw
mov
jns
and
scas
mov
rolb
pop
movsb
pop
fdivs
mov
and
fmul
insb
mov
mov
js
aam
dec
insl
cmp
int3
insl
loop
int3
or
pop
in
push
out
dec
mov
into
adc
loop
int3
mov
scas
leave
fidivs
test
fcoms
popa
and
add
xor
mov
dec
fnstenv
pop
push
test
xor
inc
cmp
inc
jns
loopne
mov
mov
jg
das
mov
mov
xchg
cltd
mov
dec
leave
sub
shll
or
sub
mov
add
add
jbe
je
jno
sbb
sahf
xlat
stos
pop
jno
fcomp
adc
mov
iret
add
lds
sub
adc
dec
cmp
mov
xor
adc
adc
sbb
jo
sbb
int
inc
test
sub
mov
push
push
mov
and
push
out
lods
mov
fldl
cmpsb
push
xchg
lcall
mov
in
pop
jp
jl
into
bound
dec
pushf
mov
insl
jbe
or
dec
jp
dec
outsb
mov
stc
iret
push
arpl
cmpsb
add
pop
xor
into
dec
ja
mov
jae
pop
jno
inc
push
xorb
lds
subl
test
inc
addl
inc
adc
push
lea
aam
and
adc
mov
fs
xchg
faddp
addl
popf
mov
mov
mov
and
cmpsb
xor
popf
lods
lret
pop
jbe
cmp
dec
or
shlb
in
fadd
cmpsb
cmp
xor
pop
and
adc
mov
outsb
hlt
icebp
popa
int
test
inc
mov
push
fidivs
test
xchg
fbstp
cld
lret
test
dec
mov
inc
divb
fcmovb
push
mov
cld
or
pop
mov
xor
push
es
pop
push
pop
mov
nop
xorps
cmp
xchg
test
add
rcr
lds
les
into
dec
movsb
inc
shlb
mov
push
pop
inc
dec
ficompl
mov
pop
fisttpll
or
pop
lcall
js
iret
mov
cmp
cmp
inc
imul
sbb
lods
icebp
div
ss
cs
push
jle
in
add
mov
lcall
dec
sti
sub
dec
mov
loopne
pop
mov
aad
mov
push
rdtsc
insb
lods
rcrb
in
ret
shr
ljmp
mov
dec
sub
in
push
dec
pusha
inc
int3
lret
adc
xchg
shlb
sub
cltd
int
mov
nop
insl
mov
out
punpcklbw
lret
fsubl
daa
push
cld
mov
xor
add
push
mov
or
je
pop
vmptrst
rcrb
mov
test
adc
mov
cs
in
pop
test
push
sbb
pop
rcll
sub
jne
push
das
fisubrs
sub
mov
mov
fsubl
sub
rorb
sub
test
das
sub
ret
jnp
sub
jb
dec
inc
rcr
adc
and
mov
clc
jp
inc
mov
add
rcrl
fsubrs
and
xor
jmp
sub
mov
dec
dec
loopne
mov
insb
lcall
js
str
rcl
ret
ret
mov
push
imul
jb
pop
fistpll
inc
mov
js
jbe
je
rorb
arpl
dec
push
adcl
dec
in
mov
inc
mov
sbb
iret
push
pusha
mov
mov
inc
push
in
aam
mov
popa
xor
cmp
dec
repz
pop
cmp
add
lret
mov
fsubp
mov
or
mov
arpl
imul
jns
cli
mov
in
cld
mov
loop
fimull
sub
cmp
aaa
pop
mov
pop
scas
inc
jbe
xor
mov
rclb
xchg
push
addl
sbb
loop
imul
mov
call
sub
or
ret
mov
xchg
and
or
enter
adc
mov
dec
sub
aam
jl
int3
push
mov
sbbl
push
arpl
mov
lods
scas
pop
aam
push
mov
lds
dec
shrb
mov
pop
gs
je
bound
push
cmp
fcoml
cmp
dec
pop
stos
adc
add
movsb
arpl
mov
pop
out
insl
in
es
dec
xlat
inc
dec
pop
pop
cmp
xor
cld
mov
cmp
add
sub
xchg
mov
dec
xchg
movsb
popa
jnp
dec
scas
popa
je
push
mov
orl
xchg
hlt
sub
lods
dec
pop
mov
dec
bound
dec
or
jbe
loopne
mov
fldl
mov
xchg
pop
xlat
out
inc
dec
sub
das
cmpsl
xlat
mov
je
dec
out
and
push
fisttps
sbbl
rol
mov
sub
push
xchg
cld
pop
fidivs
cmp
xlat
mov
lods
push
repnz
mov
ret
dec
sbb
fdivl
xorb
test
mov
pop
mov
fbstp
xchg
pushf
stc
lret
xor
push
xchg
mov
mov
xor
mov
aam
frstor
mov
je
mov
sub
frstor
xchg
push
scas
lcall
and
xchg
and
push
mov
lret
data16
and
mov
xor
ljmp
rcrb
insl
mov
xchg
mov
add
int
call
int3
repnz
xor
pop
push
mov
movsb
fidivs
jle
or
and
add
add
inc
mov
lret
cmp
mov
mov
or
lods
jp
lea
arpl
sub
pop
or
xchg
outsb
movsl
xchg
inc
ret
pop
mov
and
sarl
mov
testl
lcall
mov
mov
xor
into
or
push
inc
mov
data16
dec
mov
mov
mov
rorl
jbe
lods
jecxz
inc
push
mov
lcall
lods
cmpsb
movsb
push
cld
add
outsl
fsubl
pop
pop
enter
add
outsb
mov
mov
or
enter
cmp
add
mov
popf
sti
cmp
fnsave
insb
les
mov
sub
lods
push
dec
sahf
sbbl
xor
mov
test
add
lret
mov
sti
jp
jge
cmpsb
inc
arpl
or
xchg
push
outsl
rol
mov
mov
mov
fstl
push
repz
dec
stc
loop
sarl
addr16
or
movsl
or
jb
sti
cld
inc
sub
sub
fdivrs
jg
xor
or
cltd
iret
sahf
mov
and
sbb
jb
jnp
mov
mov
xchg
xlat
movsl
push
mov
iret
xchg
sub
xor
leave
xlat
scas
lret
cmp
lods
mov
mov
hlt
les
cs
ss
insb
sub
xchg
dec
xor
push
call
xor
cmp
popf
mov
lds
sti
add
fwait
sbb
mov
sub
enter
out
jge
and
loopne
fst
scas
pop
fistl
scas
daa
cmp
inc
jns
fbld
add
outsb
push
mov
mov
adc
popa
xor
xchg
pop
inc
mov
int3
pop
leave
pop
lret
push
xor
stc
pop
push
mov
pop
ret
pop
les
and
bound
insl
xor
cmpsb
xor
shrb
add
stos
inc
mov
dec
add
imul
sub
mov
fadd
or
mov
mov
fisttpl
dec
sub
enter
xor
pcmpeqb
jl
jns
cmp
or
lcall
ret
aad
cltd
inc
mov
pop
in
dec
in
mov
mov
int3
rclb
in
and
cld
cld
or
loopne
iret
outsl
fisttpll
lret
lods
inc
cmpsb
add
aam
out
lods
out
push
dec
mov
shl
movsb
insl
push
mov
mov
jp
mov
mov
sbb
sbb
jge
adc
xorl
mov
arpl
das
in
shll
push
mov
dec
cltd
sub
addr16
pop
gs
pop
arpl
sub
shlb
mov
arpl
dec
insl
mov
int
push
sub
pusha
adc
daa
or
sbb
inc
dec
sub
cmp
sub
sub
aaa
icebp
cmp
xor
or
sub
shrb
lods
pusha
mov
cld
sub
mov
mov
mov
xor
fimull
sub
scas
mov
rcrl
pop
push
rclb
mov
jmp
mov
cmpsb
push
mov
xor
mov
lret
push
fisubrs
mov
and
fnstcw
int3
dec
dec
loopne
pop
movsb
loopne
int3
mov
cmp
cli
mov
add
shr
fdivrl
mov
sub
mov
je
cli
or
fnstsw
pop
rcr
fxch
fisubrl
cld
stc
adc
out
inc
das
int3
push
pop
add
or
mov
mov
mov
mov
ror
in
mov
pusha
jmp
lods
mov
or
jo
fmulp
mov
mov
xor
cmp
dec
ret
xchg
loopne
inc
fsubl
in
inc
push
enter
test
int3
fisubs
dec
mov
in
push
xor
xor
inc
mov
mov
aad
sbb
loope
aam
mov
leave
xchg
mov
ret
and
movsb
mov
dec
and
add
mov
cld
mov
movsl
sbb
xchg
mov
leave
ffreep
ret
stos
jle
rorl
rcrb
mov
out
lcall
mov
dec
mov
inc
les
fdivrl
scas
dec
in
movsl
mov
ret
fyl2xp1
lret
jns
or
rcr
pop
scas
mov
lods
sti
push
pop
cmp
mov
sbb
cld
xchg
rcrl
lret
ficomps
pop
pop
cmpsb
push
xchg
mov
mov
push
aam
jmp
pop
pop
sbb
in
add
add
inc
fdivl
fidivrs
movsl
sbb
mov
scas
arpl
xor
ja
dec
cmp
cmp
es
push
leave
inc
and
loopne
cmp
mov
mov
scas
cvtpi2ps
or
pop
and
cmc
in
push
push
mov
fstpt
fidivl
mov
mov
dec
add
jg
sub
pop
ret
xor
test
mov
cmp
lods
inc
mov
lds
jle
aaa
cld
push
stc
sub
pop
lret
mov
pop
loop
jo
or
bound
xlat
dec
sub
and
rolb
and
mov
mov
arpl
jb
ror
ret
aad
pop
rorl
ror
lret
and
mov
mov
rcr
loopne
mov
insl
cld
mov
xor
into
inc
dec
test
fisubs
popf
mov
jecxz
sub
cmp
dec
dec
roll
iret
ljmp
scas
sub
mov
scas
test
int3
test
cld
dec
stc
jae
inc
pop
push
pop
and
push
test
cmpsl
pop
cwtl
stc
xlat
mov
cmp
xor
fists
dec
jmp
mov
test
push
in
dec
mov
mov
cmpsl
add
ret
jb
xlat
popa
push
mov
movsb
pop
stos
mov
cli
fisubrs
fmuls
test
mov
sub
enter
lret
fsubl
sub
cmc
or
and
xor
dec
int3
inc
ficomps
movsb
enter
fst
pop
faddl
lods
sbb
popa
movsb
int3
clc
cmpsl
loopne
cmpsl
xor
loopne
lods
push
sarl
push
cli
popa
dec
into
ss
inc
dec
into
enter
std
rcrb
inc
sub
shlb
movsb
xchg
int3
cmpsl
ret
and
sbb
into
into
aaa
test
mov
fs
into
int
pop
pop
sub
stos
ret
pushf
cld
add
sub
rorb
cmpsb
cmp
stos
pop
xor
mov
lahf
rol
int
stos
or
mov
leave
es
aad
xor
jl
adc
rcr
mov
inc
in
mov
sub
mov
lods
mov
test
pop
jp
loope
clc
cs
pop
dec
jg
xor
push
fstpt
fisttpll
cmpsl
ljmp
leave
mov
xlat
lods
xchg
stc
cwtl
mov
mov
cli
cmp
ficoms
or
mov
daa
cmp
ret
and
add
repz
pop
cmpsl
cmp
mov
cmpsb
mov
aas
cmpsb
xor
add
xor
dec
sub
sub
mov
imul
sub
ret
loopne
pop
lret
push
cld
or
ret
std
call
test
and
les
cmpsb
and
fstpl
fistps
lods
inc
mov
aad
dec
lcall
repz
mov
ss
aaa
dec
jno
ret
cs
or
test
in
aad
gs
mov
stc
add
xlat
mov
or
or
xchg
ret
aam
shll
cmpsb
int3
mov
xlat
aas
inc
xor
mov
fstps
cltd
xlat
cmpsl
loop
push
mov
lret
fcmovnu
dec
cld
lcall
and
lods
outsl
push
lods
mov
test
mov
push
test
stos
and
lods
jns
mov
out
lea
xchg
fistpll
fisubrs
and
jb
test
and
jl
leave
or
jle
fildll
outsl
pop
mov
fdivrl
inc
jmp
scas
repnz
mov
inc
xlat
clc
dec
or
cmpsl
fimull
jmp
rcl
mov
scas
mov
mov
sub
andb
out
ljmp
and
jae
mov
and
mov
arpl
lds
rcrl
jge
mov
dec
or
subl
int3
and
les
loopne
jb
push
mov
cmpsb
xor
cwtl
fiaddl
mov
int3
loopne
jne
int
leave
and
sbb
mov
push
mov
inc
cmp
mov
js
or
xchg
mov
enter
inc
mov
inc
movsb
aas
aam
stos
xor
movsb
mov
andb
dec
push
jbe
cs
lods
movsb
fcomp
jecxz
mov
imul
push
mov
sub
stos
call
lretw
stos
into
mov
rol
faddl
enter
int3
lret
xor
loopne
leave
cmpsl
adc
lods
jl
mov
cmp
iret
pusha
mov
dec
aaa
or
push
mov
xchg
xor
mov
mov
test
int
inc
lcall
sub
cmp
out
subl
int3
mov
cmpsb
xchg
xor
add
shlb
shll
and
mov
mov
dec
ljmp
loopne
cmp
stos
pop
mov
mov
sbb
pop
scas
cmp
mov
ret
or
ror
arpl
mov
jbe
add
shlb
int3
fisubrl
ror
mov
pop
fbld
dec
adc
lcall
jl
inc
stc
sbb
adc
stos
lcall
lcall
cmpsl
aad
fsubrl
mov
rcll
cmp
leave
jg
sub
movsl
inc
scas
cwtl
iret
mov
test
lret
ljmp
mov
lods
test
movsl
cld
push
inc
lret
call
push
aaa
xchg
lods
sub
mov
mov
or
repnz
das
push
test
and
mov
lds
jbe
add
xor
xchg
lods
xor
mov
mov
movsb
enter
mov
stos
aaa
mov
shlb
cltd
cs
and
and
fdivl
movsl
sbb
lds
fnstenv
leave
insl
mov
ficoms
sub
mov
lods
xchg
daa
dec
mov
jne
fldenv
fcom
jecxz
and
data16
cmp
lds
push
scas
pop
rcll
inc
and
mov
pop
push
inc
rcr
sub
and
subl
inc
mov
repnz
sub
rolb
cld
lcall
xlat
movsl
mov
mov
mov
inc
cli
and
ret
dec
shll
test
movsb
fnstsw
xchg
lods
cmpsb
mov
sub
aad
scas
sarb
or
inc
mov
mov
pop
shlb
ret
dec
lret
and
add
aam
mov
flds
mov
fsubr
aad
fcmovnu
movsb
pop
mov
es
push
mov
lds
call
mov
test
add
movsb
mov
cld
ffree
cmp
xlat
pusha
jecxz
cmp
sub
movsb
xchg
push
lods
add
jp
into
ror
lret
dec
dec
sbb
ret
lods
inc
dec
mov
enter
kandw
push
call
xlat
inc
xchg
aam
sbb
dec
inc
mov
out
push
fsubp
ret
inc
inc
fstl
sti
movsb
sub
test
inc
mov
leave
arpl
push
push
cli
stos
clc
mov
dec
mov
ds
cmp
mov
mov
popa
sarb
mov
int
enter
inc
ret
sub
sarl
test
das
movsb
ljmp
mov
enter
push
and
aam
int
popa
mov
mov
test
xor
cld
sub
sub
into
insb
movsl
lret
rorb
gs
mov
movsb
mov
sarb
cmp
dec
fsubrl
mov
mov
xor
shrb
test
xchg
ret
xor
ss
faddl
mov
mov
sub
mov
cld
in
lods
lds
rcl
mov
inc
fst
sub
inc
mov
lods
les
cmp
pop
movsb
lret
ljmp
dec
shlb
lods
fidivs
push
push
push
test
ljmp
into
into
inc
int3
iret
icebp
fidivs
out
inc
dec
mov
lods
inc
push
stos
mov
cli
loopne
jecxz
fld
out
add
into
leave
push
jecxz
push
mov
into
ror
das
or
fdivrl
fildll
mov
xor
cmp
lret
cmp
loopne
mov
adc
stos
scas
call
fists
ss
pusha
cli
push
or
pop
fcom
sbb
movsb
das
fisttpl
lods
movsb
and
adc
and
inc
lret
rorl
ficoms
test
movsb
movsb
or
in
push
and
pop
mov
xchg
inc
push
xchg
rcl
add
cmp
fidivl
inc
push
or
int3
jb
shlb
loopne
mov
shrl
sub
and
call
fistps
loopne
fiadds
lcall
dec
inc
shr
fists
mov
scas
stc
cmp
ret
ljmp
loopne
movsb
mov
scas
inc
sub
mov
mov
mov
cli
mov
and
lret
loopne
dec
or
mov
mov
pop
or
cld
mov
fisubrs
xlat
das
dec
lret
fists
shlb
cmpsb
mov
dec
mov
fldcw
leave
mov
data16
loopne
gs
or
es
lds
xlat
into
popa
stos
lret
loopne
pusha
inc
cmpsb
and
fmuls
mov
int
int3
cld
lret
aad
dec
inc
fcmovnu
in
into
cs
cmpsw
sub
xor
enter
add
inc
sarb
sub
lret
ljmp
inc
iret
scas
dec
aad
es
fisubrs
xor
out
shll
arpl
lret
ret
ljmp
test
cmpsb
shlb
mov
cmp
dec
movsl
mov
stos
mov
stos
xor
cs
ror
fsubrl
cmpl
push
cli
cmp
shlb
mov
out
in
or
int
add
mov
ret
aas
pop
fmul
shll
inc
mov
aas
xor
mov
sub
lcall
das
stc
cs
xchg
iret
daa
into
aad
loopne
cmpsb
and
daa
jno
ljmp
pop
push
daa
rcll
sub
mov
data16
cli
cmp
les
add
je
fisubs
xor
movsl
inc
mov
sub
mov
pop
aam
push
push
jge
ret
aam
fsts
pop
dec
mov
and
adc
mov
stos
inc
push
mov
dec
rolb
xlat
fistpll
fnstsw
scas
cmp
xchg
mov
in
pop
mov
inc
movsb
xlat
loopne
mov
xor
adc
call
shlb
call
mov
aam
ffree
int3
int3
fdivrs
rclb
movsb
in
cmp
fbstp
pop
scas
test
lods
mov
pop
inc
sarl
cmp
mov
stc
pop
dec
iret
push
aad
cmpsb
push
jo
or
mov
mov
cli
dec
enter
clc
inc
int3
cwtl
cld
les
shlb
and
mov
mov
mov
in
push
scas
inc
lods
mov
push
stc
out
and
mov
or
test
aam
mov
sarb
iret
sar
frstor
cmpsb
mov
ret
or
cld
fcoms
aad
pop
movsbl
int3
mov
shll
pop
cmpsl
cmp
test
les
mov
aam
rcrb
scas
mov
mov
mov
cmp
outsb
mov
fiadds
sub
jno
jecxz
in
push
mov
xor
and
enter
jge
sub
jecxz
in
push
aaa
mov
pop
mov
push
pop
fincstp
scas
ljmp
lcall
sub
out
les
inc
fists
fst
aam
cmp
xchg
aad
ds
sub
das
clc
dec
fiadds
xchg
ds
call
dec
int
lret
xor
pop
rcl
loopne
xor
lcall
push
fcmovbe
pop
ficoml
int
mov
push
fiaddl
pop
in
add
inc
stc
pop
lret
or
pop
dec
cmpsl
pop
lret
pop
test
add
and
push
lret
push
test
cltd
and
mov
lods
or
push
int3
xlat
and
and
pop
shrb
mov
int3
imul
shlb
and
dec
aam
inc
sub
int
das
pop
int3
int
fildl
lods
mov
lret
mov
cmpsb
stc
or
mov
roll
sub
int3
enter
ror
dec
dec
shll
int3
mov
stc
dec
fcmovbe
cld
sub
shrb
cs
dec
ret
xor
mov
test
cmp
lds
leave
sbb
in
adc
imul
into
xorl
adc
mov
ljmp
aaa
mov
aad
and
xchg
fdivl
scas
xor
loopne
cld
gs
aam
shr
scas
leave
cmp
jno
in
daa
mov
subl
jl
into
lcall
pusha
dec
enter
andb
mov
fstpl
iret
push
dec
jbe
into
inc
xor
jle
lret
jl
jne
dec
int3
aam
sub
fldl
pop
dec
test
es
in
jp
mov
mov
pop
cmpsb
mov
lret
scas
rcl
rcr
mov
mov
repnz
pop
jecxz
sub
flds
aas
scas
pop
int3
or
push
fcompp
aad
push
scas
rcl
and
push
fsts
leave
mov
dec
cmp
imul
ret
inc
ret
inc
leave
fldl
mov
mov
aam
fildll
test
mov
jb
cmpl
cmp
ds
mov
icebp
and
test
cld
sub
lds
fsubs
pop
push
stos
rcll
ret
lcall
mov
call
push
scas
dec
vaddsubpd
cmp
sahf
lods
dec
jnp
push
pop
dec
jmp
in
movsl
dec
xor
xor
sbb
jecxz
in
daa
dec
sub
mov
jne
jo
add
sbb
jno
icebp
rcr
mov
enter
and
push
push
push
leave
rorl
into
mov
cmp
stos
dec
sub
test
int3
int
aaa
les
iret
sub
push
stos
jbe
mov
xor
jle
dec
pusha
daa
ficoms
mov
xchg
lods
int3
sub
and
call
insl
mov
dec
test
insb
rorl
popf
sbb
push
cmp
ss
dec
sub
xor
shrl
cmpsl
xlat
push
loopne
imul
push
dec
inc
mov
inc
stc
in
sub
dec
int3
int3
cmpsb
lcall
xor
inc
dec
sbb
cmpxchg
enter
lods
pop
insl
enter
sub
popa
js
outsl
dec
sub
es
xor
sahf
dec
outsl
jb
mov
and
mov
push
xorl
jg
call
push
test
inc
aas
mov
arpl
aas
mov
insl
cmp
sahf
jns
dec
sub
mov
xor
mov
pop
stc
inc
iret
lcall
sbbl
loope
mov
mov
inc
pop
mov
inc
data16
arpl
addr16
push
inc
lods
inc
jp
imul
mov
mov
lcall
movsb
and
bound
cmp
cmp
pop
inc
mov
xor
cltd
mov
xor
inc
sub
pop
shr
outsl
sub
aaa
dec
jmp
mov
test
scas
jmp
sub
and
dec
enter
fwait
mov
sarb
push
or
mov
mov
cmpl
push
and
dec
and
mov
mov
mov
ss
mov
push
adc
mov
sbb
jbe
sbb
add
add
movsb
push
leave
and
or
jno
outsb
les
movsl
loope
mov
lcall
out
loopne
fsubl
and
cmpsb
lret
sbb
ja
fstl
pusha
xchg
pop
call
push
aam
enter
out
les
or
push
aam
xor
popf
mov
mov
push
mov
inc
mov
and
jle
outsl
push
push
cmp
fldpi
es
xor
jmp
loopne
pop
aam
mov
push
or
jmp
lret
bswap
int3
insl
xor
aaa
push
test
adc
shrl
and
movl
mov
mov
xor
add
xor
dec
loope
pop
jmp
mov
leave
push
fldt
pop
add
mov
jb
sub
cmc
in
push
fisubl
fildll
xchg
loop
aad
dec
pop
mov
and
and
pop
adc
xchg
fisubl
pop
or
and
cmc
in
push
rcrl
push
mov
and
mov
and
aad
sbbl
lret
mov
dec
popa
mov
in
iret
push
ret
or
loopne
or
mov
jmp
and
cmpsb
rsm
and
mov
push
mov
push
mov
js
popa
sahf
mov
sahf
mov
sub
cmp
add
cvttps2pi
and
sub
xchg
push
adc
flds
inc
adc
push
fldl
movsb
adc
mov
and
ficoms
sarb
call
fdivr
mov
shll
push
sub
data16
and
xchg
scas
inc
push
das
push
mov
into
in
xor
int
sub
adc
pop
sub
sub
cmpsb
incb
int3
lods
test
fsubs
xlat
mov
scas
scas
add
jl
stc
pop
ret
ja
ret
lret
jo
ret
lods
dec
sub
lock
or
jmp
aaa
jo
shrl
call
mov
clc
jb
btr
cli
jb
dec
cmp
xchg
cs
fildl
inc
dec
cmpsb
jb
sub
dec
or
push
add
mov
sub
dec
hlt
mov
fiadds
addr16
loopne
das
sarb
das
shlb
das
or
stc
lret
adcb
cmpsl
pop
lods
and
movsl
dec
je
ret
mov
push
pusha
aad
xor
xchg
fmuls
mov
gs
ficomps
push
mov
pop
mov
dec
mov
cmp
pop
subb
cmpsb
mov
pop
sub
dec
and
push
cmp
adcb
dec
lcall
les
push
dec
test
movb
loopne
js
add
inc
sub
add
inc
sbbl
ds
push
mov
leave
push
dec
mov
dec
loopne
jmp
shlb
loopne
call
pop
decl
leave
add
cmpl
mov
call
mov
mov
fldcw
les
in
scas
jmp
pusha
aad
xchg
fadd
cmp
aas
cmp
xor
sub
or
dec
push
dec
lods
das
out
les
cmpsb
sub
or
dec
push
dec
lods
pop
out
aam
out
add
jo
dec
push
roll
pop
mov
stc
clc
mov
mov
or
dec
ja
dec
ja
dec
ja
dec
jae
or
and
dec
mov
mov
cmp
outsl
pop
sbb
xchg
xor
mov
shll
xchg
push
sub
jb
jecxz
flds
lcall
xor
mov
mov
push
pop
mov
aaa
and
jb
subl
gs
sahf
xor
lcall
popa
js
popa
js
popa
js
popa
js
popa
js
popa
cmp
dec
sub
aas
and
xor
in
mov
out
aam
repnz
push
lock
int3
mov
in
dec
jb
leave
movsl
mov
gs
insl
pop
sub
daa
call
call
loopne
xor
loopne
rcr
xor
shlb
loopne
xor
push
xor
push
xor
push
xor
push
xor
push
xor
fdivs
rcl
xor
lret
leave
xor
dec
xor
dec
das
rcrb
lahf
and
lahf
mov
push
sub
push
pop
shrb
jecxz
lods
jge
sbb
int
xor
mov
xor
jno
movsl
and
jmp
cli
push
imul
pop
loopne
scas
mov
stos
lcall
jmp
aam
and
lcall
pop
xlat
test
jecxz
call
mov
push
and
push
ljmp
push
or
push
inc
leave
push
cmpsl
jle
lahf
inc
jecxz
js
inc
cmpsl
pop
mov
mov
movsl
mov
shll
fnstcw
addl
aad
scas
fld
push
lds
push
xchg
xlat
inc
inc
fstpt
lods
fdivrs
mov
icebp
les
lods
xor
or
cmp
inc
mov
cmp
jl
test
or
neg
shrl
cmp
stos
xlat
inc
lds
dec
loopne
fcomp
cmp
or
mov
fcmovnbe
fldt
and
mov
lret
sti
add
movsl
mov
mov
lock
mov
out
divl
divl
xor
fs
push
int
insl
enter
lcall
mov
and
rcl
and
in
inc
and
and
das
in
xor
sub
add
sub
sub
aaa
add
add
add
xor
xor
aas
add
cmp
mov
jp
inc
mov
mov
inc
mov
inc
mov
dec
mov
dec
mov
push
mov
push
mov
push
mov
pusha
mov
pop
mov
pop
mov
and
in
fistl
stos
lret
test
sbb
push
jp
shrl
aad
movsl
scas
jnp
fisubrs
sub
stos
or
fsub
into
mov
in
fisubs
filds
filds
xor
mov
mov
mov
jl
or
mov
push
nop
inc
push
pusha
cmc
loopne
aad
inc
shl
cltd
xchg
shr
push
call
dec
add
xorl
xlat
ret
cld
ret
nop
and
pusha
and
outsl
dec
mov
cltd
daa
sub
lcall
mov
imul
xchg
scas
mov
add
rcl
rclb
rolb
add
bswap
push
lea
shld
jmp
push
lock
std
std
test
xchg
pusha
fnsave
inc
mov
in
and
pushf
mov
pop
xchg
ss
fwait
pop
fdivrl
and
dec
inc
fldenv
aam
pop
roll
fildll
adc
test
rcrl
add
and
xchg
movsl
and
fwait
add
or
push
repnz
dec
add
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
push
dec
dec
dec
dec
cs
insb
add
add
gs
je
inc
imul
gs
bound
arpl
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
lea
lea
jb
stc
bt
cmpb
call
add
inc
outsb
fs
imul
add
je
insb
imul
add
insb
outsl
arpl
imul
je
jne
jb
outsb
je
push
dec
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
inc
insb
outsl
jae
inc
insb
imul
add
add
outsb
dec
gs
jo
add
add
jo
inc
imul
gs
dec
jne
inc
add
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
insb
jae
jb
insl
jo
add
add
je
jbe
outsb
je
lea
je
btr
and
btr
add
and
sub
setnp
push
shr
push
shld
rcr
mov
inc
add
shl
shl
add
test
sub
ror
mov
pushl
pusha
pushf
shr
test
call
sbb
bound
ss
xchg
xchg
mov
mov
mov
xchg
mov
adc
insb
jecxz
jo
jnp
lahf
fucomip
repz
mov
dec
clc
pop
fs
outsb
dec
cmpsl
std
cmc
jbe
adc
jbe
push
dec
leave
repnz
mov
in
enter
jno
bound
or
push
lds
roll
xchg
mov
mov
mov
adc
scas
push
orl
mov
sbb
push
in
in
pop
jae
movsl
xor
dec
jae
inc
pusha
push
call
jmp
cmp
jmp
cmp
test
clc
cmp
pusha
mov
jmp
add
push
gs
gs
popa
insb
jne
inc
js
add
add
je
jne
jae
jb
add
inc
gs
jne
jb
outsb
je
push
add
add
gs
je
push
popa
insb
gs
add
add
je
jns
je
insl
dec
outsb
jne
pusha
adc
lea
push
pushl
movl
call
add
inc
gs
insb
addr16
je
insb
dec
inc
add
lahf
mov
add
adc
cld
push
dec
pusha
dec
insb
inc
insl
pop
ja
imul
mov
xor
mov
xchg
in
cmpsl
xchg
cmpsb
adc
jl
xor
aam
fdivr
mov
xchg
int3
push
pop
loope
and
movsl
sbb
std
adc
mov
inc
lods
mov
int
mov
jns
and
stc
stos
cltd
sub
arpl
test
out
decb
repz
mov
push
sbbl
sub
test
mov
packsswb
shll
jb
imul
dec
sub
pcmpgtd
lea
bt
jmp
add
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
add
imul
jo
jb
dec
gs
fs
push
es
dec
sti
fcomip
aam
ret
hlt
ret
jbe
xlat
aaa
addr16
lahf
lds
mov
xor
mov
add
jnp
adc
outsl
pop
inc
pop
mov
mov
aad
sub
es
int
iret
sub
fstps
push
adc
test
ja
inc
imul
insb
adc
je
jne
lret
and
dec
xlat
arpl
xlat
outsl
shll
jecxz
sbb
mov
mov
andb
and
jne
push
inc
jp
add
push
arpl
gs
imul
inc
js
inc
js
add
push
gs
imul
add
add
je
jb
outsl
jb
outsl
fs
outsl
adcb
fs
je
movsbw
pusha
and
add
cmp
sub
sbb
sar
clc
shr
inc
mov
bsf
movsbw
jmp
shr
clc
test
push
test
cmp
push
call
add
inc
gs
gs
arpl
popa
jo
add
jns
mov
test
xorb
mov
or
mov
cmpsl
icebp
jecxz
add
imul
imul
test
mov
ret
pop
xor
push
dec
mov
lds
and
cwtl
jb
fdivrl
js
xor
jmp
mov
lds
jg
mov
dec
fistps
xor
mov
inc
stc
out
mov
cmp
cmp
cltd
dec
dec
mov
sarb
icebp
flds
das
jp
xchg
fcomip
fildll
push
ja
jne
push
aaa
add
mov
leave
out
push
rcrl
pop
outsb
xchg
cmp
or
icebp
flds
fimuls
pop
in
es
call
jecxz
hlt
enter
bound
jl
insb
fbstp
jge
cmp
mov
adc
sbb
push
pop
gs
out
push
loop
jne
push
fsub
jmp
add
je
gs
inc
insb
addr16
popa
bound
gs
add
add
je
popa
jb
outsb
je
movl
push
pushf
mov
pushf
mov
pushf
pushl
ret
add
insb
jae
jb
jo
outsb
inc
add
add
je
push
outsl
push
imul
gs
jo
gs
insb
insb
outsl
arpl
sub
stc
push
rol
push
push
pusha
jmp
mov
mov
cmp
cmp
not
xor
add
pushf
shl
sbb
mov
test
pusha
movb
test
pushf
lea
je
pushf
pushf
sub
clc
cmc
bt
cmp
push
pushf
pushf
lea
ja
cmc
clc
imul
clc
cmp
add
pusha
pusha
lea
jmp
stc
repnz
call
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
inc
gs
imul
add
dec
outsl
jbe
push
outsl
inc
js
rol
push
inc
bt
shr
movb
mov
lea
je
call
add
add
add
lds
add
add
aad
sbb
add
add
add
add
add
add
mov
push
sbb
rclb
jo
pop
add
add
push
sbb
aas
aas
xor
aas
test
aas
test
add
pop
imul
dec
cs
insb
add
add
inc
gs
imul
outsl
arpl
stc
test
neg
stc
bt
ror
pusha
add
bt
neg
movw
cmp
movsbw
cwtl
lea
movsbw
lahf
movsbw
cwtl
mov
jmp
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
dec
dec
inc
inc
push
push
xor
cs
insb
add
test
dec
jmp
clc
sub
pusha
jmp
movb
mov
push
push
pushf
pushl
ret
add
insl
imul
insl
push
je
jo
add
inc
jb
popa
je
inc
imul
imul
jb
insl
inc
add
fdivrs
sar
xor
cmp
push
movsbw
pushf
bswap
lea
lea
mov
pushf
lea
ja
pusha
pusha
movb
lea
jb
test
stc
cmpb
jmp
add
push
gs
gs
inc
outsl
insb
outsl
jb
add
ja
jbe
dec
jne
push
popa
jne
add
pusha
call
add
push
gs
imul
jae
add
push
gs
imul
outsb
add
add
pop
outsl
outsl
insl
gs
jmp
pushf
jmp
push
lea
jne
sbb
clc
mov
call
inc
inc
dec
xor
cs
insb
add
jne
bswap
neg
stc
push
mov
stc
pusha
clc
add
stc
pusha
bt
movzwl
cmc
mov
stc
add
stc
cmc
mov
movb
test
call
lea
jno
push
jmp
movl
jmp
add
inc
jno
popa
insb
push
arpl
lea
ja
sar
not
sub
bts
or
add
btc
movzbl
cmp
mov
mov
bt
pusha
mov
jmp
add
dec
jae
imul
add
je
popa
jb
outsb
je
add
ja
jbe
dec
jne
push
outsb
jo
gs
jb
dec
gs
fs
add
inc
gs
insb
imul
je
lea
jae
push
lea
jns
pushf
pusha
lea
jne
pushf
stos
pushf
lea
jmp
dec
stos
test
xchg
mov
popf
jnp
xchg
dec
std
in
mov
lock
jne
jl
mov
je
jp
cld
fidivrl
xor
das
sbb
subb
shll
cmp
pop
mov
sbb
pop
ljmp
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
jae
dec
gs
popa
addr16
add
add
jns
fs
gs
outsb
je
add
inc
gs
insb
imul
fs
jb
cmp
pushf
cmp
pusha
jmp
test
mov
and
and
not
mov
stc
mov
cmp
jmp
add
push
insb
jae
jb
add
add
je
outsl
jns
jne
jae
jb
add
inc
gs
gs
inc
inc
add
add
je
imul
dec
jb
inc
js
push
pushf
call
stc
clc
push
xor
call
add
inc
imul
cmp
pushl
stc
test
mov
push
cmc
stc
pushl
test
movw
pushf
pusha
movb
lea
je
test
clc
stc
add
pushf
cmp
jmp
shr
add
call
add
inc
gs
insb
addr16
je
insl
add
pushf
jmp
dec
test
mov
cmpsl
mulb
dec
bound
inc
jbe
jb
bound
dec
mov
pop
push
rcrb
addb
lea
sbb
incb
es
xor
xchg
daa
xchg
jp
mov
scas
xchg
xchg
jmp
lahf
sahf
scas
xchg
popa
es
repz
inc
popa
dec
jbe
jo
jns
and
jae
jge
dec
mov
mov
sbb
add
ss
xchg
pop
dec
sbb
mov
push
mov
pop
pop
bound
add
jb
jne
insb
push
jb
je
arpl
add
je
jns
je
insl
push
imul
jno
es
call
clc
shl
fldlg2
std
aam
nop
and
xchg
mov
stc
fisttps
or
xchg
pusha
aas
xlat
stc
dec
loope
daa
leave
xchg
mov
mov
outsl
push
cli
inc
nop
stos
insl
inc
pop
jecxz
ret
out
mov
mov
push
pop
jl
fisubrl
push
jg
dec
fdivrl
js
fisubrl
imul
push
jnp
inc
push
sbb
jns
push
sub
sub
jne
pop
movsb
lcall
mov
pusha
lea
pusha
call
clc
pusha
xor
pusha
push
pushl
lea
call
pusha
pushf
lea
jae
not
mov
push
inc
jmp
pushl
popl
push
cmp
jmp
add
inc
outsl
insl
bound
gs
outsb
add
imul
and
shr
movsb
stc
push
add
test
cmc
add
clc
test
mov
jmp
jmp
push
jmp
movb
mov
cwtl
mov
pushf
not
lea
call
push
jmp
add
jmp
or
jnp
lods
cmc
mov
adc
cwtl
stos
xchg
lea
mov
lcall
rcl
jo
ret
leave
and
and
dec
jmp
dec
pop
jno
sbb
and
mov
add
jne
pop
cwtl
mov
pop
mov
test
call
add
push
gs
imul
addr16
js
call
add
inc
dec
push
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
add
je
jb
jo
add
dec
adc
incl
add
je
gs
je
je
add
add
jbe
dec
jne
push
jb
je
add
dec
add
mov
testl
and
arpl
jae
add
das
pop
cmpsb
mov
into
test
in
xchg
jecxz
leave
frstor
out
push
xor
jle
inc
insb
add
mov
pop
subl
pop
mov
int3
sub
xchg
popf
sbb
js
or
mov
dec
adc
pop
mov
scas
jnp
in
pop
cmp
into
dec
dec
aad
pop
xchg
imul
jo
fimuls
stc
out
xor
repnz
loopne
push
cmp
adc
icebp
xor
mov
pop
and
xchg
out
addr16
out
fcompl
shlb
cmp
dec
mov
cmp
xchg
inc
jae
sti
dec
pop
popl
nop
cmpsl
dec
enter
popf
mov
mov
xchg
push
repz
out
daa
add
popf
adc
add
popf
pop
jnp
cmp
adc
std
pop
and
and
push
arpl
ficoms
clc
out
add
inc
gs
jns
inc
outsl
insb
outsl
jb
add
inc
gs
arpl
insb
insb
push
popa
outsb
addr16
inc
testl
outsb
popa
bound
outsb
jne
je
insl
add
into
mov
pushf
movb
push
movw
mov
not
pushl
lods
pusha
cmc
neg
clc
push
ror
clc
add
movl
test
movl
stc
neg
movb
jmp
pushf
pusha
pusha
lea
jne
push
stos
push
pushl
pusha
lea
jmp
add
push
gs
outsl
insb
jns
imul
pushf
movl
jmp
jmp
add
push
gs
imul
outsl
outsl
imul
add
mov
fisttps
jo
imul
inc
addr16
in
or
mov
mov
mov
mov
sbb
daa
add
sarb
cld
dec
outsb
test
fiaddl
xlat
dec
dec
dec
inc
or
shrb
aaa
lcall
int
clc
sar
add
push
jg
jecxz
adc
sub
andl
jge
aam
mov
mov
mov
lock
cmc
pop
repnz
mov
pop
xchg
mov
xchg
sub
insl
push
jne
pop
mov
and
jae
mov
mov
pusha
push
jmp
pusha
jmp
add
push
gs
outsb
fs
inc
imul
jmp
cmp
divl
cs
jb
jmp
fucomip
sar
lret
scas
out
imul
stos
xchg
js
inc
outsl
fsubl
cmp
inc
loope
sub
xchg
hlt
cltd
loop
push
dec
ljmp
arpl
lds
leave
xorb
outsl
xchg
mov
mov
ljmp
inc
decb
out
xchg
dec
sub
inc
push
pusha
lahf
ja
sti
inc
cmp
mov
loop
jne
pop
lret
clc
lods
nop
mov
fisttpll
jge
bound
push
outsb
inc
insl
pop
in
add
imul
cmpsb
cli
test
mov
scas
push
lods
dec
push
clc
mov
sub
cmpsb
gs
xchg
jb
or
cwtl
pop
mov
data16
addr16
jne
je
gs
fisubrl
or
mov
or
out
movsb
mov
mov
dec
jns
fsub
add
out
pop
test
add
sbb
mov
sub
stos
mov
vmread
add
aas
pop
mov
xchg
mov
mov
lods
mov
adc
jnp
fs
inc
jb
and
imul
das
mov
aad
push
cltd
lcall
ror
xor
cmpsl
in
fidivrs
je
jno
jp
and
pop
test
add
push
jo
popa
je
push
imul
add
jne
push
inc
jne
data16
add
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
inc
and
jne
inc
addr16
pusha
push
lea
jmp
add
inc
imul
jne
arpl
add
add
insb
insb
dec
gs
dec
outsl
outsl
imul
add
inc
gs
dec
inc
imul
jae
pusha
pushf
movw
pushf
lea
jmp
add
inc
gs
imul
outsl
jb
shrd
lea
mov
shl
sub
call
push
push
pusha
push
pushl
ret
add
inc
gs
imul
arpl
add
inc
gs
popa
insb
jne
add
mov
push
add
add
jne
outsb
je
jb
jo
jb
imul
inc
js
insb
jne
gs
insb
imul
add
push
arpl
jae
bound
adc
sbb
jl
inc
fbstp
sbb
xchg
in
iret
cmp
out
mov
xor
dec
stc
cld
test
xorl
sti
fst
lret
cmp
push
jns
mov
mov
inc
popf
mov
push
lret
in
sub
cmp
popf
or
roll
jp
loopne
les
xchg
dec
inc
in
cmpsl
push
insb
mov
mov
inc
add
cli
cmp
sbb
insb
cld
outsb
sub
dec
dec
cmp
cmpsb
push
sub
or
pop
jl
xchg
shrl
push
mov
lcall
fidivrl
push
lock
lret
jmp
mov
test
mov
inc
cltd
enter
inc
cmp
lods
xchg
repnz
jl
test
push
jmp
test
pop
mov
out
decb
pop
icebp
pop
lods
fcmove
fistps
xor
lods
or
stc
mov
rorb
enter
sarl
or
popf
cli
leave
sbb
in
js
test
fimull
adc
inc
mov
mov
and
mov
icebp
mov
mov
inc
inc
inc
cli
stc
xor
jnp
lret
fwait
mov
dec
cmp
aaa
and
push
jo
clc
test
rclb
test
fcompl
dec
xchg
sbb
xlat
out
fwait
shlb
mov
out
les
xlat
push
stos
lcall
and
arpl
jbe
cmp
sub
mov
push
stos
cli
push
pop
and
push
cmp
stos
xchg
mov
sbb
cld
push
xchg
and
out
sub
jge
xchg
negb
ret
aam
pop
lahf
jge
inc
dec
jnp
aam
ror
test
fcmovne
daa
cld
jbe
cs
and
add
pop
pop
int
rol
faddl
lods
dec
sub
push
cld
xlat
or
pushf
stc
lret
addr16
pop
jo
mov
dec
jo
rol
daa
sbb
mov
ficoml
cmp
mov
aam
stc
fcmovne
sub
dec
stc
stc
jl
sub
sbb
outsb
pop
dec
cwtl
dec
ffreep
lcall
test
or
mov
inc
dec
shll
mov
arpl
mov
mov
mov
mov
mov
dec
mov
and
les
mov
mov
jns
sbb
bsr
mov
pop
cmp
push
xlat
lcall
xchg
cmp
cmp
cmp
mov
cld
leave
in
add
leave
leave
dec
mov
inc
mov
movsl
test
mov
dec
imul
push
sbb
push
dec
dec
jl
test
cmp
adc
sub
and
nop
adc
inc
sbb
push
and
xor
dec
xor
pop
jle
int3
not
xchg
or
lahf
fimuls
enter
pop
add
adc
roll
push
dec
pop
cli
mov
pushf
push
xchg
push
and
loop
push
pop
leave
xlat
mov
movsl
out
mov
lret
movsb
xor
stos
test
pop
aam
or
mov
push
adc
stos
push
loope
les
jp
shlb
clc
cwtl
pop
fstps
or
js
jb
jp
sub
outsb
add
pop
scas
jne
sbb
cmp
sub
cwtl
enter
pop
out
cld
jb
adc
add
cld
sub
adc
add
popa
pop
sti
popf
mov
sahf
cmpsl
mov
stos
enter
dec
lods
stos
popa
ret
sbb
or
push
movsl
int3
enter
or
or
stc
pop
outsb
pusha
jnp
or
add
and
stc
mov
mov
out
dec
pushf
aas
sub
xor
mov
cmp
stc
subb
and
mov
ror
sti
or
adc
or
ficompl
lods
mov
pop
jle
mov
push
mov
mov
sbb
xchg
adc
rcrb
mov
xor
test
scas
mov
cld
cwtl
cmp
sub
into
fdivs
mov
rclb
pop
mov
xchg
mov
nop
fwait
mov
enter
ret
xchg
mov
push
cli
xlat
mov
fcmovnbe
mov
or
mov
lret
arpl
out
sub
xchg
fcmovu
loopne
xlat
sbb
scas
leave
push
cwtl
mov
pop
cltd
mul
cld
mov
add
xchg
js
mov
xchg
jp
lods
int3
mov
cmp
xchg
in
xorb
rorb
jmp
adc
adc
movsl
test
cmpsl
rcrl
jge
push
mov
in
cltd
enter
cli
xchg
sub
ret
sub
enter
test
lfs
push
mov
in
or
cs
jno
inc
push
push
inc
cld
sub
mov
or
pop
sahf
inc
loop
adc
cmp
push
push
dec
jns
shrl
fbld
fstps
out
jae
or
je
cmp
int3
scas
int3
mov
cltd
mov
and
xlat
mov
loop
xor
and
lea
inc
dec
mov
inc
lcall
scas
shlb
inc
pop
out
fcomi
iret
mov
sbb
lahf
xlat
adc
arpl
and
xorl
lret
notb
xchg
inc
fs
aad
test
xchg
and
push
sahf
gs
and
sbb
rorb
xchg
push
insb
mov
fistps
in
les
inc
js
aaa
mov
mov
push
test
mov
fisttps
pop
mov
xchg
push
lahf
cmp
fadd
fnstcw
mov
cmp
jl
cmp
jg
mov
int
cld
iret
xor
test
movsb
sub
lods
pop
ljmpw
jns
test
fs
ret
shl
xchg
dec
dec
mov
push
sub
jns
test
pop
or
pop
push
xor
imul
mov
inc
or
xchg
cmp
test
int3
inc
xchg
je
xchg
fildll
mov
mov
stos
jbe
repz
inc
mov
mov
jl
mov
or
gs
cwtl
std
movsb
adc
mov
add
mov
jnp
lcall
or
adc
ret
andl
mov
mov
push
cmp
faddp
mov
push
add
outsb
sub
pop
in
cmpsl
out
inc
add
lahf
adc
aad
mov
ret
mov
inc
popf
pop
mov
add
inc
ret
mov
popf
jg
cmp
push
add
lret
dec
mov
adc
sub
push
lods
inc
out
je
rolb
xchg
orb
push
sarb
or
test
push
stos
mov
cli
inc
pushf
jns
stos
in
sti
inc
jmp
dec
cld
push
mov
daa
pop
mov
mov
daa
lret
mov
loop
out
jp
lods
addr16
pop
xlat
cwtl
lret
dec
xchg
mov
cmp
mov
adc
arpl
clc
sbb
bound
mov
sub
daa
scas
xchg
mov
adc
push
fsubrl
xchg
data16
mov
enter
push
ljmp
cmpsb
cli
push
dec
cld
mov
jecxz
pop
adc
xlat
mov
fisubl
dec
mov
daa
mov
movsl
mov
mov
iret
cmp
inc
dec
popa
push
sbb
lret
cmpsl
daa
fdivrl
popf
push
shrd
add
adcb
mov
mov
lahf
xlat
repnz
daa
jb
xchg
stos
cmp
xchg
cld
fidivl
ret
mov
cs
nop
out
or
fisttpl
idivl
ja
cmpsl
dec
cmp
aad
daa
mov
xchg
mov
pop
popf
movl
and
lahf
test
lds
or
mov
stos
mov
scas
xchg
clc
int
scas
xchg
sbb
dec
pushf
rorl
cmpsl
add
and
test
aaa
xor
inc
mov
cwtl
ljmp
and
loopne
je
in
or
push
std
mov
jle
mov
and
mov
mov
cmc
lret
in
ret
nop
ret
xchg
push
mov
inc
xchg
mov
or
cmp
imul
or
push
mov
stos
cli
push
shl
xor
sbb
ror
dec
das
ret
mov
inc
add
inc
ret
and
jg
dec
mov
mov
divl
popf
jp
mov
push
pop
fnsave
out
dec
jb
jecxz
xchg
mov
movsb
sbb
push
inc
out
dec
orl
out
sarb
push
cmp
out
cli
cmp
add
dec
or
adc
sbb
hlt
xor
xlat
sbb
xchg
andps
mov
xchg
inc
and
pop
push
addr16
xlat
stc
leave
mov
ret
lret
out
push
mov
and
cmpps
xlat
rorb
fs
mov
push
fnstcw
stos
fucomi
std
aad
out
loopne
pop
mov
orb
cmp
sti
cmp
shlb
gs
bound
and
mov
cmp
sub
jl
bnd
mov
add
cli
cmp
jnp
mov
lret
add
into
les
loopne
mov
cld
cwtl
mov
mov
ret
dec
and
das
idivb
adc
mov
xor
jecxz
pop
cmp
xchg
xor
adc
in
sub
jl
lods
adc
jl
push
sub
aam
xor
add
mov
add
push
call
cmpsl
inc
icebp
or
enter
adc
mov
inc
fnstenv
sbb
mov
scas
ret
ds
inc
pop
out
xor
dec
mov
push
pop
jmp
mov
inc
sbb
cltd
mov
in
jp
fs
xchg
xchg
data16
push
mov
sub
jo
das
mov
testb
mov
lret
inc
mov
movsb
test
dec
mov
xor
jo
rcll
int3
cmpsb
test
mov
js
pop
dec
outsb
fld
arpl
jnp
xchg
in
mov
fcmovb
jae
shll
cmc
andl
dec
add
test
test
aad
popa
pop
inc
mov
and
pop
into
test
xlat
fbld
pop
push
daa
in
inc
adc
push
stos
ljmp
inc
gs
outsb
test
mov
lret
mov
jbe
pop
add
xchg
imul
mov
or
mov
gs
sahf
ljmp
mov
enter
fdivl
xchg
xchg
mov
mov
dec
shlb
and
lods
fstl
cltd
or
cmpsl
mov
lret
jecxz
mov
adc
dec
jp
inc
or
mov
std
sub
test
lods
and
lret
and
shl
and
push
loop
mov
icebp
nop
inc
in
roll
cmpsb
mov
cli
mov
outsb
repz
shlb
mov
je
outsl
sub
mov
es
dec
add
insb
fiadds
push
mov
lea
push
add
popf
popf
ficoms
mov
mov
shll
into
mov
clc
mov
ret
sahf
gs
sub
cli
stos
stc
mov
push
or
fmul
lahf
fxch
out
mov
cmp
aad
or
push
xor
xchg
xchg
ljmp
inc
inc
and
mov
jg
test
mov
in
lods
cmp
adc
sar
jns
pushf
lds
shrl
sub
lcall
lods
or
addr16
mov
lret
cmp
pop
mov
dec
push
push
cmp
xchg
dec
and
loop
pop
xor
lret
repnz
sbb
mov
rorb
push
xchg
insl
jmp
out
sti
pop
sar
dec
dec
adc
jecxz
sub
in
sub
ss
ss
hlt
or
dec
mov
jbe
bound
jmp
dec
sub
sub
popa
test
ror
sbb
das
xchg
fsubrl
xor
loopne
xor
adc
mov
mov
adc
or
lcall
rclb
adc
stos
mov
mov
and
xchg
lret
cld
mov
cld
mov
cs
cld
sub
testb
hlt
mov
test
cwtl
in
add
mov
jl
test
orl
fimuls
arpl
mov
mov
ss
jns
jo
dec
cmc
or
icebp
push
int
lock
iret
push
mov
push
jp
cli
nop
rorl
mov
xor
pop
xchg
cmpsb
cmc
push
daa
xchg
testb
mov
push
lods
mov
dec
pop
inc
enter
inc
pop
sar
mov
ljmp
lds
shlb
and
jns
sub
sub
notl
in
or
mov
jmp
sbb
aad
xor
jp
jl
xlat
sub
lods
add
push
faddl
add
gs
mov
scas
or
std
xchg
fwait
in
push
sarb
mov
adc
mov
cmpsl
sbb
shlb
dec
dec
in
dec
clc
ja
xchg
lret
js
in
add
jp
aaa
mov
aam
out
mov
out
test
xor
nop
cli
sbb
scas
insl
xchg
stc
inc
scas
ret
and
dec
loopne
shlb
and
mov
dec
imul
push
rcrb
push
rol
pop
sar
jns
mov
dec
inc
dec
mov
faddp
sbb
gs
or
jbe
aas
js
loope
clc
sbb
jl
shll
sbb
pusha
mov
or
xor
cmp
fldt
dec
aad
inc
cmpsl
xor
or
in
or
test
add
or
jae
mov
sahf
fs
popa
test
xor
mov
push
mov
test
or
mov
xor
inc
leave
xchg
shll
add
ljmp
movswl
jg
ja
jmp
xor
ss
cmp
push
outsb
push
test
and
rcl
lods
jmp
lods
push
faddp
pushf
rclb
call
int3
fsubrl
mov
lret
pop
test
jb
popf
sbbl
es
test
xchg
aad
xchg
popa
ss
mov
sub
nop
lods
push
xor
dec
mov
mov
loope
loop
cmp
and
orb
les
cltd
fbstp
daa
or
subb
jp
sbb
fadds
lods
dec
fcomps
movl
or
inc
jmp
mov
icebp
and
xchg
and
test
fstl
test
fnstcw
add
pop
cmp
dec
dec
dec
mov
mov
pop
mov
mov
cmp
mov
stos
outsl
or
test
cmpsl
cmp
subb
nop
js
scas
mov
push
es
cmp
jbe
dec
mov
pop
lods
inc
cmp
mov
mov
cwtl
add
add
fs
xor
sbb
jp
push
ja
out
push
scas
push
sbb
fnstcw
mov
pop
out
add
popf
cmpl
sbb
aam
pop
imul
inc
negl
scas
jecxz
stos
aas
jo
mov
add
and
xor
and
xchg
or
mov
lds
dec
adcb
push
loopne
nop
pop
jp
mov
adc
cmp
jp
mov
push
test
into
xlat
mov
mov
call
ljmp
push
pop
loope
jecxz
jb
jb
mov
scas
aaa
nop
sbb
outsl
pop
jecxz
test
mov
jae
mov
shlb
mov
out
notb
add
jp
mov
mov
push
mov
lret
mov
fs
adc
lods
mov
add
xlat
push
cmp
jo
xlat
pushf
push
push
adc
xor
sub
bound
dec
xlat
outsb
inc
imul
mov
int
aad
or
ljmp
mov
je
cmp
mov
push
das
mov
pop
ss
xlat
xchg
cwtl
mov
movsl
jg
jl
rcll
or
int
outsb
sbb
xchg
sbb
fwait
pop
jbe
and
mov
lods
or
jo
or
movsl
add
inc
adc
push
inc
push
test
pop
dec
subb
mov
cmc
scas
imul
mov
mov
lcall
adc
lods
jne
stc
dec
int3
fwait
mov
test
lods
push
mov
jl
and
sub
in
cli
sbb
or
push
cld
mov
mov
mov
push
movsl
pop
mov
stc
xor
dec
push
cmp
addr16
mov
sub
sbb
pop
xchg
loop
rcl
cwtl
addr16
mov
out
push
mov
insb
add
movsb
testb
pop
inc
jae
pop
dec
pusha
sahf
es
push
adc
dec
sbb
pop
push
mov
dec
mov
mov
push
dec
pop
js
ret
lods
push
dec
arpl
dec
fdivl
pop
or
lods
stos
mov
xor
push
sub
mov
or
pop
loopne
push
div
jns
jae
mov
cmp
cld
movsb
lcall
push
movsb
push
mov
jmp
subb
jp
inc
cmpsb
bound
push
jno
stos
mov
fnstenv
cmp
and
cltd
mov
nop
cmc
cmp
cltd
idivb
fadd
pushf
cli
mov
rcrb
and
add
push
adc
xchg
mov
dec
rol
pusha
sti
jne
push
test
stc
xchg
int3
cmpsb
sarl
sbb
jmp
sbb
xchg
mov
mov
or
mov
push
mov
cmp
mov
sub
jp
mov
jne
add
sub
mov
adc
mov
les
xor
add
mov
lret
aam
add
lret
mov
es
repz
fs
cli
test
inc
ja
dec
outsl
adc
push
clc
fs
stc
jns
call
leave
mov
sub
jle
mov
movsl
mov
mov
jp
mov
add
mov
test
pushf
mov
mov
movsl
mov
into
cli
cmpsl
std
jbe
cmp
and
lret
daa
hlt
pop
xor
rcll
or
out
xlat
and
into
ds
mov
push
dec
mov
mov
mov
jne
and
jb
and
add
add
add
jne
mov
outsb
ret
dec
add
add
or
add
xchg
sar
in
adc
add
sub
rorl
lock
add
push
daa
pushf
mov
dec
cmpsl
fistl
rol
sub
ret
mov
mov
push
mov
outsb
aaa
fcompl
jmp
fdivr
lock
xchg
dec
pusha
scas
cmp
test
dec
jbe
stc
stos
or
test
xchg
dec
xchg
jo
sub
push
or
sub
push
mov
xchg
jnp
out
ret
cmpsb
xor
cmpsb
mov
xchg
or
dec
push
inc
mov
cli
mov
rorl
lods
inc
add
ffreep
mov
dec
lods
lcall
stos
test
or
push
rolb
and
sub
jmp
int
loope
xor
push
fldcw
int
addr16
dec
and
or
xchg
in
rcrl
push
mov
test
int
addb
aam
pop
push
sahf
out
add
rolb
sub
stos
lods
mov
sub
leave
or
push
in
xchg
fsts
push
xchg
or
dec
dec
divl
jge
jge
ljmp
int3
cmp
dec
lahf
leave
push
shrl
sub
test
xor
sahf
test
movsb
mov
shrb
lea
imul
lea
cmp
sbb
mov
xor
mov
in
out
inc
loopne
mov
sbb
pop
lea
push
scas
les
fnstcw
mov
and
and
jb
add
aad
mov
lock
or
test
stc
out
push
pop
inc
js
sub
or
leave
and
loope
push
xchg
cltd
lods
dec
xchg
loopne
outsl
mov
inc
inc
pusha
jnp
cltd
jb
lods
push
pop
dec
ss
sub
adc
fldcw
mov
push
test
pusha
push
ss
mov
sar
xor
add
popa
sbb
test
bound
or
outsb
jecxz
outsb
xor
cli
cmpsb
inc
xor
mov
popa
mov
pop
daa
ja
xor
popf
div
ret
into
push
out
lods
faddl
les
push
jo
nop
push
fld
xchg
lods
pop
arpl
orb
lods
xchg
mov
cltd
nop
fisubrs
ret
mov
xchg
jnp
mov
bound
lret
jle
popa
jns
in
inc
aas
nop
in
push
in
mov
push
inc
push
aad
add
add
icebp
push
iret
sbb
stc
in
mov
mov
stos
ja
dec
je
sysenter
int3
out
jp
cmpsl
call
popa
pop
push
cmpsl
cmp
stc
mov
imul
mov
stc
mov
stos
add
mov
mov
mov
or
adcb
mov
mov
psubsb
mov
mov
cli
inc
or
test
setnp
dec
test
mov
mov
sub
mov
sub
xorb
rcrb
aam
insb
xchg
mov
mov
fwait
aas
js
or
push
xchg
loopne
mov
xor
aam
movsb
mov
in
sbb
mov
or
pop
sub
dec
into
in
pop
stos
test
test
icebp
sahf
cmp
cmp
jb
movb
shlb
leave
outsl
and
add
mov
inc
ja
cmp
or
sbb
lea
test
popl
stc
and
push
iret
popl
fnstenv
sub
mov
jle
cmp
leave
adc
test
ret
jl
cmp
movsb
cmp
les
clc
outsl
sahf
cmpsb
cmp
mov
addb
dec
rol
mov
adc
mov
test
sbb
push
fiaddl
stc
xor
xchg
lcall
into
inc
xor
xor
inc
cmpsl
enter
xorb
push
or
lods
loop
add
test
add
stc
mov
bound
movsb
bound
sub
inc
add
iret
lods
push
jg
add
mov
mov
sbb
and
test
mov
hlt
inc
loope
addb
movl
mov
sub
dec
insb
dec
orb
outsl
and
sarl
loope
dec
lods
xchg
arpl
xchg
lcall
addr16
and
add
mov
out
dec
cmova
rcr
movsb
mov
add
cmp
movl
add
loope
cltd
push
cmpsl
popa
inc
fwait
in
lcall
test
std
stc
stos
adcl
addl
stc
les
fnstcw
lcall
and
cmp
outsb
mov
out
pusha
xor
lods
cmp
push
fcoml
add
dec
les
push
sub
dec
pop
mov
mov
mov
cmp
add
adc
stc
jmp
add
fucomp
movsb
lret
dec
sbb
push
int
imul
mov
pop
lods
fmull
lahf
fs
fmull
fs
lds
mov
or
push
mov
mov
into
lods
and
adc
js
adc
in
inc
sub
test
aas
dec
ret
lods
sub
je
cs
jecxz
ret
addb
cmp
mov
outsb
fildll
in
cwtl
stc
dec
ret
jle
adc
fcoml
or
out
or
mov
sbb
sub
add
push
cmp
dec
add
inc
sbb
xlat
arpl
dec
ret
fsts
jne
incb
fiadds
pop
inc
iret
cli
add
jl
test
andl
popl
aad
out
dec
pop
movb
xchg
adc
test
pop
inc
daa
jp
into
mov
int3
lcall
mov
mov
dec
out
roll
inc
lods
in
push
fmull
push
add
sti
inc
dec
movl
push
fdivl
data16
xlat
out
cmpsl
shlb
xor
stos
mov
xor
scas
test
test
xchg
sub
jecxz
fmull
movsl
mov
or
jo
movsl
inc
fs
fsubr
xor
mov
ljmp
mov
fsubl
add
pop
and
jo
and
jp
jle
pop
faddl
pop
repz
mov
lods
loope
pop
jmp
inc
mov
or
jo
gs
loope
test
fdiv
test
add
imull
test
sub
test
inc
xlat
fwait
test
in
int
arpl
test
rorb
aas
and
push
cmp
push
pop
les
mov
repz
push
jecxz
cmp
pop
enter
inc
enter
cltd
mov
cli
push
add
test
or
fld
sub
test
xlat
jmp
dec
sbb
mov
icebp
mov
test
mov
mov
popf
jae
mov
push
test
mov
mov
aas
dec
jb
fsubl
lea
mov
or
pop
stc
int3
mov
fldl
jmp
jb
test
add
xor
mov
push
inc
cmc
mov
add
mov
mov
inc
add
ret
or
xor
sti
or
dec
inc
jmp
iret
add
imul
and
pop
add
pop
and
adc
push
push
and
into
push
roll
mov
jno
cli
stos
pushf
or
test
dec
psubsb
pop
add
lods
lods
adc
rorb
icebp
or
inc
cmp
push
mov
cmpsl
mov
inc
arpl
mov
pop
cmp
test
loope
add
cmp
rol
or
flds
jmp
dec
xchg
inc
mov
loope
adc
cli
pop
addr16
pop
add
test
sub
daa
js
scas
sbb
push
push
in
ja
ret
mov
inc
cmp
pushf
je
mov
pop
stc
aam
test
mov
rorl
cltd
jmp
dec
cmpsl
cmp
mov
push
pop
inc
aas
mov
push
jmp
call
cwtl
lea
mov
hlt
add
fidivl
xchg
jns
ffree
jbe
push
inc
mov
mov
popf
cli
test
xor
lcall
stc
cmpsb
aam
stc
mov
aam
stc
mov
aam
stc
mov
call
push
shr
clc
rol
xor
cmpsl
cli
adc
cld
xor
cmpxchg
or
and
lret
cld
sar
pushf
fwait
and
fs
add
aaa
mov
dec
in
sar
std
or
test
xor
cmp
push
dec
pop
mov
push
sbb
cli
movsb
xor
lret
rorb
cwtl
jmp
lret
fldcw
stc
shlb
mov
push
orb
lret
lods
insl
cmp
lods
pop
jg
dec
es
jle
jle
jns
xchg
pop
call
adc
mov
ljmp
mov
insl
or
shlb
xchg
mov
stc
xchg
bound
stc
out
dec
pop
add
jge
mov
xorl
rcl
lcall
bound
jae
dec
add
jp
mov
int3
jb
aaa
test
arpl
push
adc
adc
inc
sbb
loopne
sub
jp
add
jo
jge
xchg
scas
xchg
pop
lods
enter
push
push
jne
fbld
ret
mov
stc
iret
outsl
gs
add
rcrb
outsl
mov
stc
mov
mov
and
mov
mov
push
mov
jle
mov
sbb
out
xchg
inc
and
inc
pop
lods
test
stc
cmp
xchg
pop
divl
sti
loopne
insb
xor
pop
push
jmp
mov
popf
loope
in
lods
sar
inc
or
add
movsb
mov
movsl
loope
ja
inc
jmp
popa
inc
mov
clc
sub
rorl
js
shll
jne,pt
dec
cmpsl
cwtl
data16
jecxz
popf
imul
enter
inc
or
inc
mov
into
inc
fnstcw
lcall
mov
sarb
lods
lcall
add
loopne
pop
xchg
lcall
outsl
mov
adc
cli
rolb
repnz
sbb
mov
cmpsl
popf
push
arpl
add
decl
jo
jns
in
mov
cld
int
mov
inc
jecxz
xor
scas
aam
pop
pop
cltd
adc
push
dec
test
xchg
stos
xor
push
mov
jb
push
addl
inc
enter
outsl
mov
mov
mov
xchg
scas
xor
pushf
jle
clc
adc
lret
daa
mov
std
xor
add
enter
test
fmuls
pop
sbb
push
cmpsb
xor
xor
aas
fimuls
test
out
gs
and
loop
test
test
cwtl
movl
and
pop
pop
dec
ror
insl
sbb
jl
inc
pop
pop
and
ret
add
xlat
into
jp
pushf
push
mov
xor
repz
adc
add
lret
xchg
shl
loop
jae
mov
movb
jno
sub
mov
je
jl
mov
je
jl
test
shrb
shrl
dec
adc
mov
mov
test
add
xor
shlb
adc
pop
js
es
lret
push
aad
incl
imull
mov
mov
ret
push
andl
stos
mov
into
jnp
jecxz
es
fcompl
ret
jg
cmp
xor
jle
adc
cltd
comiss
cmp
cli
mov
and
jbe
pop
test
jno
fisubs
xor
stc
xchg
mov
ss
push
inc
addr16
inc
dec
push
mov
je
rcl
cli
in
fcmovnbe
sub
outsb
out
cli
jns
or
dec
add
push
adc
jmp
mov
cld
arpl
pop
into
insb
add
inc
dec
mov
sbb
lahf
pop
push
jo
cmc
push
fsub
dec
sub
inc
faddl
inc
in
fisubrs
sbb
cmp
push
bound
adc
lret
pop
inc
dec
pop
popf
pop
inc
dec
or
testb
repnz
jg
notl
test
test
jns
push
aam
stos
in
loop
jae
cmp
mov
add
add
test
cmpsl
mov
aas
sub
dec
pushl
bnd
cmpl
push
stos
adc
lods
sbb
pop
dec
xchg
icebp
test
mov
inc
mov
xor
jns
rorb
sbb
shl
xor
ds
lahf
xchg
addr16
pop
adcb
push
push
push
or
loopne
jbe
mov
cmp
jns
lods
mov
push
dec
sbb
cld
cwtl
sub
adc
mov
push
jbe
xor
mov
cmp
lahf
dec
adc
xor
sub
sbb
loop
lds
mov
fsubrl
pop
jns
mov
pop
lods
aam
cmp
js
dec
cmp
enter
fisttpl
mov
xor
ljmp
scas
jnp
fcmove
mov
pushf
mov
jns
dec
jnp
mov
call
mov
mov
idivl
mov
adcl
jo
push
pop
sbb
cmp
cltd
or
xlat
fwait
lcall
sub
int
lods
add
xor
sarb
mov
jb
xor
lret
loopne
ss
imul
cmp
mov
stc
mov
xchg
cld
and
jo
ret
je
ljmp
mov
mov
int
mov
icebp
add
cli
mov
add
mov
adc
mov
jae
inc
push
aam
push
sbb
cmp
sti
adc
stos
sbb
mov
stos
mov
sahf
pop
loope
push
jae
shlb
and
in
adc
test
mov
ficompl
sbb
jbe
shrd
mov
dec
push
jno,pt
cmpsl
mov
fsubl
mov
das
dec
ss
mov
call
mov
jle
mov
inc
cltd
push
std
sbb
sbbb
cli
mov
push
mov
pop
lods
jp
mov
lock
push
je
stc
push
pusha
pusha
cmc
mov
lcall
loop
inc
jns
jl
cld
ret
inc
repnz
xchg
sbb
repnz
daa
mov
mov
cmpsl
mov
xchg
xchg
inc
pushf
dec
cltd
add
ss
xchg
dec
cli
sahf
jle
mov
sahf
and
push
mov
stc
xchg
movsb
icebp
add
int3
mov
jo
rorl
xchg
xchg
pop
hlt
push
mov
mov
test
xchg
adc
js
leave
pusha
add
out
mov
popa
jge
cmp
inc
addr16
mov
push
flds
xchg
push
pop
sub
cmp
imul
inc
and
lods
stc
daa
sbb
jns
stc
push
scas
pop
call
je
cltd
loope
cli
mov
inc
shrb
cli
outsl
xchg
cld
fnstcw
sbb
icebp
testl
int3
push
stc
sub
fwait
and
xchg
in
js
int3
clc
or
fdivrs
sub
sub
sarb
push
inc
mov
cmp
mov
xor
jecxz
stc
push
imul
and
cmp
lret
lods
pop
into
flds
sti
cmp
lret
add
add
jle
inc
test
mov
lods
jae
test
cmp
pop
add
movsb
mov
dec
orb
pop
xor
leave
mov
in
jbe
mov
pop
dec
or
fwait
in
inc
push
push
fnstenv
stc
add
scas
inc
dec
cmp
inc
cmp
mov
rorl
or
repnz
jg
fwait
daa
pop
and
mov
push
in
enter
into
inc
popf
xchg
call
mov
fadd
outsl
cmpb
stc
lcall
cmp
mov
mov
mov
mov
mov
mov
jb
dec
mov
dec
adc
arpl
sbb
fistpl
jecxz,pn
stc
push
mov
mov
repz
or
dec
pushl
incl
test
orl
je
addl
shl
dec
jg
xor
in
mov
pop
adc
test
push
leave
sub
push
call
jle
fstps
ret
aad
aas
cltd
push
jmp
mov
or
loope
stc
mov
fcomps
int3
and
into
jmp
push
aad
aas
or
lcall
cmp
mov
jnp
mov
je
std
push
mov
dec
cmpl
icebp
dec
imul
inc
jg
sbb
mov
mov
je
mov
dec
mov
cmpl
mov
mov
test
repnz
jo
repnz
or
mov
or
mov
mov
mov
or
mov
jp
repnz
lret
mov
out
xorb
out
sub
aam
hlt
push
cmp
shlb
cmp
mov
xor
inc
fbstp
int
adc
pop
rorb
push
xor
fs
sahf
ss
icebp
jmp
test
ret
sbb
pop
or
inc
add
xchg
dec
mov
fwait
mov
mov
mov
clc
aaa
icebp
test
mov
aad
cli
xlat
and
jle
xor
mov
pop
add
xor
sub
je
mov
fnstsw
je
xor
dec
outsl
test
sar
fsubrl
repz
mov
test
fstl
test
jae
add
notb
xchg
mov
mov
mov
test
push
sbb
cmpsl
mov
inc
call
mov
sub
fstps
popf
fstl
xor
test
or
out
int
cmp
xor
cmp
xor
xor
dec
add
jnp
or
jmp
or
xchg
jo
lret
imul
add
nop
cmp
fsubs
enter
inc
lds
cmp
inc
cmpsl
jl
cmp
push
push
push
and
dec
gs
cmp
push
push
mov
xor
mov
mov
dec
adc
sub
cld
sub
fnop
in
out
xor
jecxz
or
sbb
mov
sahf
dec
sbb
jbe
push
xorb
pop
push
dec
into
add
push
jg
or
andb
pushl
movsb
clc
imul
or
mov
in
push
cltd
inc
jne
mov
int3
cmp
inc
inc
mov
ret
push
sub
nop
cmp
cli
xor
inc
mov
mov
adc
shr
xor
cmp
int3
rcr
testb
cmp
lret
leave
xchg
push
repz
mov
xchg
cmpsl
add
add
into
les
fsubs
aad
push
lods
sbb
lea
fisttpl
lret
pop
adc
and
es
pop
dec
push
fld
out
ja
fnstenv
js
add
js
mov
mov
in
xchg
mov
xchg
bndstx
mov
aas
dec
pop
mov
cmpsb
and
sti
mov
push
int3
add
js
shll
lds
mov
push
mov
ds
cmp
sti
mov
lods
in
fwait
notb
mov
cwtl
cli
stc
cmp
add
inc
cli
addb
sahf
cmp
icebp
shrb
sub
clc
addb
imul
xor
std
cs
cwtl
mov
fst
push
dec
mov
sbb
out
dec
mov
sub
push
int3
or
cmpsb
pop
es
mov
js
insb
mov
xchg
enter
pop
mov
fwait
aas
adc
mov
mov
mov
inc
std
or
inc
cmp
roll
xchg
test
notl
imull
add
aaa
sbb
daa
xor
scas
mov
adc
fldt
push
push
imul
jge
mov
dec
xchg
sub
adc
push
mov
and
mov
addr16
orl
mov
inc
dec
sbb
rclb
jge
mov
subl
cld
je
stos
leave
test
sub
fadds
and
ret
sti
inc
mov
stc
arpl
add
lret
test
dec
arpl
rcrl
mov
mov
int
cmc
adc
mov
rorb
adc
fninit
xor
jmp
fs
push
dec
mov
jmp
fisttpll
add
push
test
rcr
incb
mov
pop
imul
xor
push
jae
mov
push
mov
ja
mov
and
stc
lds
mov
lods
cmp
lret
mov
mov
and
mov
aaa
or
push
xchg
fadds
push
and
stc
repnz
inc
je
rorb
pop
test
mov
test
lods
inc
lods
push
das
ret
shrb
movsl
mov
lods
sub
insb
lds
out
fldcw
pop
jl
dec
gs
mov
xchg
stos
sti
ljmp
cmp
or
lcall
ja
fs
jb
shll
aam
test
test
int3
scas
dec
lods
cltd
jle
inc
xor
push
mov
sub
lea
jle
push
dec
lods
adc
dec
in
test
fldcw
pusha
lcall
mov
cltd
push
icebp
lea
lret
lret
pop
sbb
inc
out
mov
scas
sti
sub
enter
or
sub
cmp
ret
sahf
jge
lods
lods
insb
add
lods
stos
lret
inc
sbbb
adc
push
jl
outsl
push
into
fwait
out
pop
cmpsl
shrd
loopew
cmp
fisubl
stos
jo
stos
adc
mov
or
add
rcr
loope
jp
fwait
sub
cld
adc
and
jle,pt
js
cwtl
mov
adc
mov
mov
ss
arpl
inc
or
sub
inc
mov
cmc
pop
cwtl
aas
dec
and
insl
int
mov
cltd
inc
clc
xorl
mov
xchg
test
scas
adc
add
imulb
call
add
fldenv
add
lcall
cltd
test
mov
gs
add
addl
cs
sahf
inc
out
pop
or
sub
in
jo
xchg
xchg
jae
add
sub
dec
pop
dec
pop
xchg
adc
mov
cwtl
aam
fldcw
mov
dec
fidivs
dec
call
inc
dec
add
bound
mov
dec
push
add
jp
je
out
pop
mov
fldenv
push
je
insb
mov
jmp
ds
sbb
mov
sbb
imul
movsl
repz
scas
icebp
inc
movsl
mov
cmp
loope
outsb
and
sbb
mov
push
mov
mov
pop
aam
jno
pusha
enter
or
mov
mov
push
mov
xchg
addr16
jl
adcl
mov
push
hlt
cmp
lea
dec
std
push
push
pop
aas
push
fwait
jo
sahf
into
or
inc
iret
outsl
sbb
addr16
cmp
fldcw
outsl
lods
push
xchg
mov
ljmp
daa
xor
mov
inc
fcmovne
mov
mov
dec
dec
pop
arpl
xchg
add
push
scas
xchg
pop
sbb
xor
mov
adc
dec
mov
inc
or
out
enter
or
outsl
nop
in
mov
arpl
or
mov
cs
pushf
sub
adc
pop
fs
push
pushl
lea
cmp
mov
dec
mov
dec
movsl
jecxz
inc
add
icebp
int
or
jecxz
ficoml
cs
andb
gs
dec
jl
jns
scas
mov
add
stos
popa
jge
cmp
in
sub
push
sbb
mov
xchg
outsb
cmpsl
test
movl
jb
xor
insb
ja
pop
dec
xor
lods
mov
sub
arpl
lret
pop
push
xchg
cs
fsubrl
and
add
in
jg,pn
mov
jle
clc
add
das
test
push
cmp
inc
prefetcht1
lret
lods
out
pop
sahf
pop
leave
cmp
inc
sbb
add
add
adc
jo
xchg
adc
jg
and
xor
cli
pop
adc
mov
push
mov
jp
push
cli
decb
loop
ljmp
add
cltd
cmc
insl
lea
xchg
test
mov
sbb
stos
push
mov
fsubl
mov
add
enter
inc
mov
sbb
jl
clc
cmp
mov
jge
mov
rorb
mov
dec
mov
lds
and
xchg
sbb
xor
call
loope
bound
pop
jmp
stos
rolb
add
fcoms
fidivrs
fsubl
dec
vunpcklps
xchg
mov
add
scas
mov
jnp
je
cmp
fnsave
into
je
mov
into
push
sub
mov
push
das
aam
pushl
lods
mov
nop
insl
push
aaa
jmp
insl
cwtl
mov
dec
jnp
mov
adc
xchg
loopne
sti
xchg
or
cli
shlb
add
mov
iret
and
and
iret
repz
jecxz
scas
add
in
sub
lods
pop
and
push
push
dec
fsubl
dec
jg
lods
mov
in
and
xlat
pop
loope
push
inc
in
cld
push
ljmp
test
lods
push
shll
cs
cmpsl
cmovo
stc
jle
lock
inc
repz
loop
aad
lret
mov
adc
mov
shlb
jae
xchg
clc
lods
stos
push
inc
dec
mov
pop
xlat
pop
jae
cmpsl
mov
cmpsl
mov
cld
add
dec
jle
lods
add
sub
add
dec
or
mov
fnsave
mov
faddp
dec
popa
lcall
adc
pop
dec
cli
cmp
lea
or
sarb
xchg
test
jl
mov
sbb
adc
repnz
add
mov
flds
in
push
jl
adc
mov
int3
add
mov
jg
nop
mov
jecxz
mov
cmp
in
insl
jb
xchg
pop
push
lret
popa
jp
adc
rorl
pop
adc
scas
mov
and
jle
ret
ds
aad
jl
out
fnstcw
xchg
std
shll
mov
into
lods
dec
push
push
loop
clc
pop
test
es
dec
mov
push
fcoms
jns
or
test
lods
xchg
ror
mov
clc
push
add
sub
add
popa
lods
int
shrb
fistpll
jae
std
out
mov
mov
xor
mov
pop
sbb
mov
mov
inc
stos
jp
test
mov
test
push
stos
lds
sbb
push
negl
cmpsl
cmp
mov
cltd
shll
ret
dec
jecxz
xor
leave
dec
out
add
mov
das
xchg
pop
loope
pop
jae
nop
popa
aas
lret
sub
das
sahf
jns
lcall
pop
dec
mov
mov
shll
pop
cli
lods
out
into
sub
mov
cwtl
pop
lret
rcrb
out
dec
int
cmp
mov
es
sbb
lret
mov
popa
insl
xchg
and
cmp
mov
jmp
xorl
xchg
insl
push
sar
ljmp
mov
push
mov
xorb
stos
xor
xor
je
test
aad
mov
jne
je
mov
mov
jecxz
sub
xchg
mov
je
mov
add
jae
std
mov
push
enter
lods
inc
inc
jecxz
push
mov
xchg
sbb
movsb
xorl
xlat
push
cwtl
lods
jbe
or
pop
sub
or
mov
rcll
mov
jmp
sub
add
test
jecxz
mov
bound
mov
mov
popf
and
cmp
pop
fwait
push
pop
fwait
not
jbe
loope
jge
outsl
and
mov
pushf
mov
outsl
dec
mov
and
cltd
mov
mov
and
cmp
stos
sysret
push
daa
ja
jge
jb
jp
test
int3
iret
xor
test
iret
add
dec
push
or
fcmovb
shll
adc
jo
pop
cltd
xchg
mov
or
into
bound
cmc
cmc
jnp
fldcw
mov
add
les
dec
jno
ficomps
dec
mov
ret
mul
iret
enter
cmp
das
add
jp
nop
insl
sbb
imul
outsl
mov
rorb
icebp
cmp
in
scas
dec
xchg
and
dec
out
outsl
mov
lcall
outsl
cmp
repnz
sbb
xchg
mov
pop
iret
test
movsb
jmp
dec
stc
sub
inc
mov
lcall
adc
mov
push
loopne
xchg
scas
push
push
loope
and
insl
sbb
insb
icebp
and
inc
push
dec
stc
sti
fcom
pop
cmc
mov
sub
inc
cltd
addb
je
add
aas
nop
mov
cmp
jb
inc
out
dec
mov
dec
cmc
ja
test
mov
ret
fwait
inc
add
mov
xor
popf
sub
cmp
aad
and
test
aas
in
sbb
xchg
jl
enter
jg
and
aaa
jno
cmp
dec
popf
xchg
mov
jl
into
and
aaa
fs
lea
movsb
fnstenv
int3
inc
lods
push
mov
pop
rcrl
gs
mov
pop
sbb
test
mov
inc
push
sahf
lods
sub
movsb
inc
dec
jb
cli
push
mov
or
test
aam
into
add
test
addr16
fdivr
rcl
imul
cli
push
test
dec
shld
clc
js
mov
xchg
jbe
xor
sbb
leave
adc
in
pop
jo
in
pusha
in
ds
leave
in
push
dec
int
stc
fucom
xor
sahf
js
mov
add
and
mov
jb
jp
cmpsl
sub
xor
sub
scas
fildll
and
pop
jb
dec
int3
ljmp
rcrb
fnstenv
push
cmp
into
push
test
call
or
test
sbb
movb
andb
add
aaa
xor
rorb
xor
inc
test
cmpsl
divl
jbe
pop
add
mov
dec
int3
or
pop
push
mov
push
and
dec
rorb
xor
js
push
jp
aad
or
idivl
ljmp
mov
ret
fimull
fstps
jbe
pop
add
mov
pop
add
enter
repnz
cmp
addr16
mov
or
fsts
xor
cmp
inc
dec
or
lods
bnd
cmc
cmpsb
cs
cmp
push
ret
fimull
dec
and
popa
jle
mov
push
enter
test
popa
cs
ss
dec
mov
out
sahf
vpsadbw
stc
cmp
js
pop
mov
test
test
dec
push
test
xor
mov
add
mov
xchg
enter
inc
inc
adc
fsts
in
mov
xor
cs
xlat
xchg
int
xchg
data16
push
ret
jbe
jbe
pop
push
hlt
in
xor
sub
mov
in
ret
int
cmpsl
inc
inc
sbb
push
cmp
fisttps
ret
jns
sub
push
dec
int3
rorl
pop
inc
or
fnstenv
xchg
daa
dec
es
or
add
enter
arpl
pop
sbbb
dec
test
xor
addr16
test
mov
fiaddl
inc
shll
ret
test
sbb
arpl
aam
into
mov
loop
mov
sbb
stos
xor
push
sub
divl
pop
or
aam
sbbb
push
std
fnsave
loop
sbb
test
xchg
sbb
dec
rolb
or
fxch
lods
adc
jecxz
cmpsl
loop
enter
inc
dec
stos
test
aam
int
outsb
or
scas
imul
add
cmpsl
fcoml
test
add
mov
adc
hlt
jmp
popf
stc
mov
mov
ror
fwait
dec
xor
xor
es
push
adc
jno
fldenv
movsl
pusha
nop
xchg
sub
mov
cli
push
cmc
dec
xor
xchg
movsl
sub
mov
in
mov
jb
into
jge
out
aad
in
cmp
sti
or
addr16
lock
stc
push
ds
jl
mov
jne
lds
mov
inc
or
sbb
daa
push
mov
add
mov
xchg
ja
lods
push
stos
mov
pop
jae
movsb
dec
fbstp
or
movsl
stos
mov
jno
rorb
daa
in
cmp
call
pop
cmpb
pop
or
mov
fcoml
outsl
lcall
xorb
inc
pop
jb
dec
and
mov
in
movsb
daa
cltd
mov
aaa
xor
aad
and
pop
inc
or
hlt
mov
outsb
lds
push
pop
mov
push
sub
out
pop
jae
ret
outsl
fiadds
xorb
gs
sbb
cmpb
dec
enter
pop
push
gs
mov
mov
mov
aas
pop
xor
mov
jo
gs
dec
das
push
test
sub
gs
push
add
mov
sbb
mov
fdivl
loopne
jmp
loopne
movsl
sbb
test
decb
xor
and
enter
lods
mov
test
iret
das
lea
or
sarb
mov
je
call
scas
xchg
cltd
jmp
dec
or
jbe
cmpsb
test
mov
movsl
lcall
sti
rcrl
mov
sub
stos
test
and
into
cmp
add
call
mov
mov
sub
mov
orl
shlb
dec
sub
test
test
xlat
das
mov
sub
jo
sub
pop
test
add
icebp
xor
test
mov
push
sbb
xchg
sbb
push
push
add
mov
mov
push
mov
jns
sub
scas
sahf
mov
movsb
pop
push
imul
cmpsb
leave
mov
push
cmpsl
enter
insl
cmp
mov
inc
sbbl
mov
mov
insb
cmp
jb
cwtl
push
outsl
jnp
mov
inc
add
inc
mov
cltd
sub
mov
ja
jbe
pause
fwait
lods
xchg
pop
mov
mov
or
jnp
mov
mov
out
fldcw
out
jb
adc
jmp
fisubl
adc
rcl
les
daa
sub
test
int3
rclb
pop
daa
notb
lahf
lods
out
jmp
jp
dec
daa
sub
lods
mov
adc
daa
and
pop
pop
hlt
int
push
sbbl
call
stc
fldt
rclb
mov
out
and
mov
xor
ret
or
mov
fstl
int3
inc
fnstcw
mov
stc
mov
enter
or
adcl
pushf
addr16
xchg
sub
adc
in
adc
addr16
arpl
sbbl
push
fstps
cmp
sbb
jge
icebp
mov
sub
cli
inc
push
dec
xor
aas
lahf
cmp
jns
stos
push
cld
add
insb
ficompl
mov
pop
repz
push
testb
mov
ficoml
and
dec
adc
ret
xchg
dec
jp
or
leave
mov
das
test
and
cs
arpl
icebp
mov
mov
fisttps
ret
sti
xor
lret
repz
cltd
and
call
jnp
loop
ret
jb
push
fwait
mov
rcll
dec
std
cwtl
fs
repnz
xor
sbb
aas
mov
push
dec
test
cltd
pop
sub
mov
jo
iret
or
ds
mov
inc
lds
faddl
sahf
int
add
into
cltd
mov
mov
lret
xchg
cltd
push
call
idivb
and
jecxz
fmull
jle
int3
arpl
or
cmp
jmp
pop
cltd
mov
add
aad
push
pop
aaa
mov
adc
mov
jne
int3
test
lcall
push
xchg
in
xchg
stc
and
xor
lcall
gs
into
enter
shlb
rcl
dec
rcl
sbb
lea
sbbb
or
cmpsb
fs
outsb
lock
jb
imul
adc
dec
dec
fucomip
fldln2
mov
mov
lods
sbbl
xchg
enter
loop
jp
mov
mov
inc
ret
lret
fldenv
inc
les
movsb
mov
mov
roll
ljmp
mov
lods
ror
sub
mov
xor
in
test
insb
bound
movsb
adc
aaa
sub
mov
test
aad
sbb
sbb
and
fbld
xor
and
dec
ret
sub
int3
adcl
test
adc
stc
inc
test
inc
dec
cld
sub
fbstp
ret
pop
dec
out
mov
rolb
int
mov
int
dec
cmpb
fwait
pop
xor
loopne
inc
cltd
dec
sub
sti
xor
outsb
adc
subb
inc
dec
fnsave
in
test
ljmp
cmpsb
lock
incl
sbb
adc
mov
outsl
sub
lods
cld
dec
jg
rclb
xchg
data16
inc
xor
aaa
add
adc
xchg
xor
inc
sbbl
add
enter
inc
popa
popf
out
jg
fnstenv
push
fisubrs
fsubrl
mov
movsl
xchg
fcmovbe
add
inc
outsl
js
pop
adc
scas
mov
mov
sbb
pop
jo
sbb
rolb
mov
in
fcoml
sub
imul
pop
sbb
or
inc
cli
mov
sbb
cmp
jge
shlb
sub
push
pop
aam
mov
and
fnstenv
jmp
and
pop
push
dec
fisubrs
jb
jg
mov
popa
sbb
enter
mov
xor
xlat
outsb
xor
push
xchg
cmpsb
or
add
sbb
push
div
andb
lds
mov
test
mov
jbe
scas
int3
andb
pop
test
fcmovnu
cltd
stc
mov
xchg
add
cmp
shr
mov
sub
sahf
mov
mov
sub
cmp
test
cmp
dec
add
pushf
in
sub
aas
test
pop
orb
cmp
arpl
sub
fcmovne
movq
mov
or
sti
cmp
movsl
fistpl
cmp
jecxz
pop
fcomi
add
fildl
mov
adc
sbb
xorl
imul
aad
sbb
test
mov
dec
insl
sbb
loopne
jns
or
xchg
pop
jp
mov
and
sbb
int3
mov
test
int3
mov
inc
addr16
pop
stc
mov
mov
rol
lods
lock
or
pop
shrl
addr16
cmpb
sub
xor
mov
repnz
mov
or
addr16
shll
or
mov
and
inc
je
add
aad
fisubs
dec
movsb
pop
mov
mov
sub
cwtl
mov
mov
push
addr16
shrl
or
enter
out
mov
mov
fmul
add
and
jle
cltd
sbb
push
test
lea
mov
lods
dec
loope
xor
pop
mov
pop
xchg
stos
scas
test
jo
aam
add
mov
cwtl
add
aam
sar
loopne
dec
fiadds
jl
cld
cmpsb
stc
movsb
mov
lods
pushf
stos
jl
js
dec
mov
ret
pop
shrb
pop
out
aam
scas
aad
sub
mov
mulb
or
lods
sahf
jnp
jo
sahf
or
in
movsl
cmc
ret
repnz
dec
test
int3
scas
push
ror
dec
mov
aad
mov
movsb
test
int3
cmpsb
push
ror
test
push
stc
enter
mov
dec
mov
jno
fwait
cltd
cmpsl
cmp
inc
dec
jmp
aam
mov
popfw
rclb
fldl
mov
and
popa
sub
mov
mov
cld
or
cmp
lods
sub
mov
mov
orb
cltd
or
jecxz
add
xchg
sbb
or
call
ficoms
addr16
pop
stc
mov
mov
push
or
enter
out
adc
jle
jp
mov
ret
jg
mov
adc
imul
mov
or
adc
cmp
ficoms
outsl
jne
js
lea
loop
sahf
pop
pop
or
and
and
adc
dec
mov
jle
xlat
repz
add
xchg
gs
shlb
or
aam
cmp
push
push
mov
and
stc
lea
daa
pusha
nop
je
pusha
inc
mov
je
pusha
inc
mov
je
pusha
inc
mov
je
pusha
inc
mov
je
mov
je
mov
je
mov
mov
shlb
add
dec
mov
jo
mov
add
mov
or
mov
push
fstl
or
je
push
or
xchg
add
popf
sub
pop
lea
push
or
adc
dec
cltd
dec
adc
or
or
pop
dec
push
dec
xchg
inc
fdivl
sbb
jp
mov
or
test
cwtl
push
add
lahf
xlat
repz
cltd
int3
mov
xor
jle
jp
test
pop
add
xchg
cwtl
jp
fisubl
push
dec
les
jp
push
fsub
lret
mov
mov
dec
shlb
int
lods
inc
addr16
int3
loopne
sbb
orb
sbb
lods
sti
dec
adc
int
lods
or
dec
test
mov
push
pop
test
mov
stc
mov
out
in
sub
push
into
add
push
sub
push
into
add
push
sub
push
into
add
push
sub
push
into
add
push
sub
push
into
add
push
sub
push
test
xchg
test
aad
xchg
cltd
push
mov
test
ja
pop
test
fsubl
xchg
mov
xchg
adc
sbb
add
in
ljmp
pop
push
pop
fmull
pop
jnp
dec
pop
stos
inc
mov
or
dec
pcmpeqb
adc
push
push
lahf
mov
out
or
test
scas
roll
push
cltd
dec
mov
dec
xor
jecxz
cmpsl
cmp
cwtl
outsb
add
push
xlat
stos
push
cmpsb
push
jle
push
pop
call
lcall
or
mov
outsb
push
or
aad
xchg
cmpsb
push
jle
push
fsubrl
xchg
push
movsb
xchg
mov
or
add
popa
mov
dec
mov
jecxz
cmpsl
or
inc
dec
inc
je
aam
fsubrl
mov
dec
jle
jp
sbb
lods
pop
addr16
add
jmp
add
adc
and
adc
pop
adc
add
adc
push
adc
add
adc
dec
adc
add
adc
inc
adc
add
adc
cmp
push
sub
push
into
test
push
aad
push
cltd
push
mov
push
push
test
aad
push
sbb
leave
push
push
dec
inc
je
push
inc
fadd
push
mov
xchg
mov
inc
or
sub
lods
xchg
loope
mov
sbbb
sub
pop
dec
cld
sbb
rorl
push
push
or
sbb
test
imul
lahf
int
test
adc
dec
sysenter
loopne
or
dec
dec
xor
lea
pop
add
push
xlat
stos
push
cmpsb
push
jle
push
pop
jecxz
pop
dec
cltd
sbb
test
jno
or
test
faddl
lods
mov
or
xchg
fsubr
xchg
push
outsl
xchg
scas
imul
into
mov
test
pop
mov
mov
push
je
std
inc
fmul
or
fadd
ffree
or
cmpsb
mov
je
push
inc
mov
inc
mov
inc
mov
inc
mov
push
je
push
inc
rcll
mov
dec
push
jp
add
add
enter
or
jo
push
jp
mov
cs
arpl
test
int3
mov
add
dec
or
ret
xchg
xlat
xchg
addr16
jno
and
inc
pop
subb
mov
pop
or
adc
sub
jb
add
fdiv
aad
or
jecxz
add
mov
pop
cwtl
mov
int
xchg
loope
mov
shll
or
or
adc
sub
adc
xchg
stos
mov
fisttpl
inc
push
enter
cld
xor
jecxz
cmpsl
add
sahf
pop
add
push
xlat
mov
cmpsb
push
jle
push
pop
loop
pop
or
rcll
imul
stos
ficomps
add
add
lods
ja
push
lock
scas
test
sbb
dec
test
test
mov
fsub
stc
sub
mov
and
mov
pop
fdivrs
push
fdivrs
dec
fdivrs
inc
fdivrs
jp
cmpb
test
aaa
test
aaa
test
aaa
test
lods
pop
dec
sbb
jp
mov
add
inc
xchg
jmp
movsl
xor
pop
stc
sub
dec
add
jecxz
cmpsl
sbb
sahf
pop
sbb
inc
int
leave
mov
or
jle
push
fsubrl
mov
or
test
scas
xor
lods
dec
loope
mov
orb
cmp
jne
bound
daa
sub
lcall
or
pop
das
addb
fadd
test
push
add
pop
xlat
outsb
pop
cmpsb
push
ds
in
mov
fimull
mov
sub
jecxz
push
mov
je
cmp
cmp
dec
cmpsl
in
rolb
in
mov
adc
sub
dec
cmp
aaa
push
mov
mov
mov
xchg
je
xchg
inc
mov
xchg
je
xchg
inc
mov
xchg
icebp
movsb
xchg
ffree
or
fdivl
and
je
lret
movsb
lret
lret
pushf
lret
pop
lret
dec
lret
lret
lret
inc
lret
addr16
ror
mov
dec
push
fsubrl
loope
incl
jp
mov
xlat
imul
int3
mov
add
mov
push
or
dec
jecxz
or
or
scas
push
loope
mov
cmpb
gs
imul
mov
mov
addr16
sub
or
test
mov
or
mov
leave
mov
stos
xor
jecxz
cmpsl
es
imul
test
aam
inc
or
test
mov
out
add
fdiv
or
imul
mov
gs
inc
push
enter
imul
int3
ror
les
mov
sbb
xorl
js
sbb
into
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
test
mov
jge
cltd
push
xor
test
test
adc
dec
fxch
test
or
or
mov
jle
push
fdivl
push
lock
or
pop
or
test
int3
mov
loope
mov
shrl
dec
lea
in
sahf
jo
or
push
adcb
mov
mov
imul
ficomps
das
mov
mov
push
inc
imul
cmpsb
lods
push
das
adcb
sarb
sub
arpl
dec
push
dec
nop
je
lret
inc
daa
and
sahf
or
add
popa
mov
test
dec
fisubrs
or
push
call
dec
pop
dec
pushf
pop
pop
leave
mov
cwtl
dec
inc
or
xor
jbe
stc
mov
out
fisttpll
stc
rorl
aad
out
leave
dec
mov
rorl
dec
out
stc
dec
mov
in
sub
mov
test
cltd
push
and
test
out
push
test
mov
xchg
mov
push
pop
mov
dec
mov
adc
push
fdivrl
push
test
sahf
test
das
loope
mov
shll
mov
pop
dec
xor
jecxz
cmpsl
jns
mov
jbe
mov
stos
mov
fstpl
popa
add
test
lcall
or
fsubrl
push
in
incl
jp
movsb
jne
sbb
or
enter
inc
mov
mov
aaa
mov
or
or
test
int3
fiaddl
lods
push
loope
aas
scas
popa
mov
or
cmp
out
int
add
test
sahf
inc
jecxz
cmpsl
push
and
inc
cmpsb
daa
mov
repnz
push
sbb
cmp
push
or
mov
jl
mov
xor
mov
sub
mov
and
mov
pop
dec
mov
push
dec
push
test
dec
aad
dec
cltd
push
orb
inc
dec
push
test
jmp
addr16
scas
lea
jbe
inc
test
sbb
or
jle
jp
mov
adc
mov
mov
inc
or
andl
xchg
pop
sbb
or
je
adc
ljmp
sbb
or
enter
ds
adc
lcall
or
cmp
mov
mov
or
aas
enter
sahf
push
pop
or
add
or
nop
jecxz
dec
jne
outsl
jecxz
push
add
mov
mov
flds
iret
cmpsb
push
in
or
xlat
insl
iret
cmpsb
push
dec
adc
jecxz
cmpsl
adc
sub
stos
paddusw
paddusw
paddusw
or
paddusw
or
fmul
paddusw
or
fadd
paddusw
or
fdivr
paddusw
dec
jp
xor
dec
mov
mov
push
pop
dec
mov
dec
stc
push
dec
fmuls
xor
jecxz
cmpsl
pop
popa
incb
iret
lods
xor
push
test
imul
mov
jecxz
cmpsl
dec
and
pop
mov
enter
add
fwait
push
inc
pop
cltd
mov
ret
push
ret
dec
imul
int3
scas
inc
pop
lods
int
or
push
add
add
cmc
add
or
add
dec
mov
incl
mov
dec
jl
inc
movsl
scas
jne
inc
loope
inc
inc
xchg
xchg
loopne
fsubl
push
mov
jb
push
mov
lods
jnp
andb
cmp
dec
xor
jle
jp
xor
mov
pop
rcl
jno
jbe
pop
dec
test
repz
shrl
into
add
shrl
into
add
shrl
into
add
shrl
into
add
add
add
add
add
add
add
add
add
test
test
filds
push
test
cltd
push
or
add
movsl
sbb
test
fsubr
inc
push
bound
ret
fimuls
or
lods
loope
mov
adcb
lods
aas
adcl
sub
or
addr16
add
dec
dec
arpl
or
or
decl
imul
lods
les
or
jp
mov
or
test
movsb
sub
cmpb
fdiv
add
push
test
or
enter
push
sbb
or
enter
push
sbb
or
enter
pop
fdivl
or
inc
sbb
add
sbb
dec
inc
fwait
enter
imul
cmp
add
add
outsb
dec
test
pop
mov
movl
or
fdivl
ret
fsubrl
ret
fsubl
ret
ret
fst
or
ret
or
fmul
ret
add
add
jp
ret
jo
add
mov
add
js
mov
dec
add
dec
or
test
cwtl
or
pop
xchg
or
or
inc
movsl
scas
inc
loope
xor
inc
and
jp
mov
inc
mov
inc
or
pop
cltd
andl
test
int3
stos
xor
lods
ds
andl
push
stos
pop
lock
data16
adcl
orl
or
adcl
repnz
xor
push
xchg
inc
pop
push
push
or
push
imul
mov
mov
cmpsb
push
jle
push
fsubrl
push
mov
mov
push
sbb
enter
dec
inc
add
sub
inc
lea
ja
xchg
push
cmp
sbb
push
aam
dec
mov
loope
mov
add
ljmp
xchg
inc
mov
je
xchg
push
xchg
inc
mov
je
xchg
inc
xchg
inc
mov
je
lds
xor
je
lds
sub
mov
movsb
lds
push
lds
fadd
jp
xorl
ret
std
add
and
or
and
inc
das
adcb
mov
pop
imul
push
mov
cmp
pop
enter
xchg
lea
mov
sbb
stc
jmp
mov
adc
or
add
sub
lcall
lea
push
or
inc
jecxz
cmpsl
dec
movsb
repnz
jecxz
lcall
pop
mov
or
mov
mov
mov
dec
jle
jp
aam
repz
mov
push
mov
int3
dec
into
add
dec
sub
dec
into
add
dec
test
out
mov
mov
in
sub
mov
aas
mov
stc
test
mov
add
sub
mov
test
aad
mov
fnstcw
mov
sbb
sub
test
xchg
push
mov
ljmp
shll
mov
push
andl
and
adc
or
test
int3
stos
xor
enter
pop
add
inc
xlat
ja
cmpsb
push
jle
push
pop
mov
sub
scas
xchg
loope
mov
sbbb
movsl
sub
pop
add
or
jo
mov
or
rolb
jecxz
cmpsl
add
ficoml
cli
xlat
mov
cmpsb
push
jle
push
pop
out
or
gs
push
add
dec
test
int3
loopne
inc
out
addb
mov
mov
in
cmp
test
dec
inc
lahf
enter
xor
popa
cmp
jp
aaa
jp
stc
sub
das
jp
stc
and
daa
jp
stc
pop
jp
pop
jp
stc
push
jp
push
jp
stc
dec
jp
dec
jp
stc
inc
jp
inc
jp
cmpl
xchg
repnz
imul
xchg
jecxz
andl
jle
xor
mov
sahf
add
or
push
sahf
mov
lea
aas
mov
arpl
inc
sbb
aad
imul
into
jp
mov
pop
or
imul
das
cmp
enter
adc
sbb
inc
ret
enter
cmp
inc
fdivl
and
movsl
pop
mov
in
iret
out
adcb
mov
or
jp
test
daa
sub
mov
cmp
sbb
pop
cltd
or
sub
jecxz
push
jmp
sti
cld
mov
inc
or
out
xchg
adc
adc
cwtl
cltd
andl
test
dec
test
mov
push
pop
test
and
sarl
aad
out
leave
cmp
int
out
sarl
cmp
stc
stc
cmp
mov
jl
mov
into
add
jl
lods
jl
add
jl
movsl
jl
out
test
jl
push
adc
lret
test
cltd
aam
pop
mov
sub
inc
mov
push
aam
imul
or
sub
xor
jecxz
cmpsl
andl
dec
fistpll
mov
or
add
sub
dec
leave
arpl
or
pop
cltd
rcll
or
push
dec
or
lea
xor
dec
loope
mov
shll
or
cmpsb
add
pop
lods
or
and
and
scas
mov
rcr
sbb
inc
or
rcrl
in
mov
mov
jnp
dec
push
push
jnp
sarl
pop
dec
test
adc
pop
dec
mov
inc
jl
mov
add
jle
pop
mov
loope
lods
fs
ljmp
mov
dec
jns
inc
jns
mov
jns
cmp
jns
fsubrl
jns
xor
jns
and
jns
stc
sub
jns
pop
decb
sub
jns
mov
scas
pop
jns
fmull
rclb
jns
add
dec
jns
cli
jns
mov
jns
pop
xor
jns
cld
clc
jns,pt
stc
scas
jns,pt
dec
test
xor
shlb
stos
xchg
adc
or
test
or
mov
cmpsl
adc
fimuls
mov
outsl
sbb
inc
adc
jecxz
cmpsl
andb
rcll
fiadds
mov
pop
insl
or
out
scas
mov
mov
fcomps
push
adc
xchg
mov
loope
sub
std
and
adc
adc
or
sbb
xor
shrl
pop
or
int
mov
or
lods
test
enter
mov
add
or
jmp
sbbb
pop
dec
xchg
mov
jge
mov
push
add
mov
cltd
cwtl
aam
add
mov
pop
xchg
push
repz
out
frstor
mov
faddp
mov
sarb
sarb
sarb
add
mov
mov
outsb
add
test
add
fildl
cltd
push
lahf
add
dec
add
inc
add
inc
stc
repz
fmuls
xor
jecxz
cmpsl
movsl
and
jbe
sbb
or
enter
shll
jecxz
cmpsl
jp
mov
orb
in
push
sbbb
loope
mov
cmpb
cmp
lea
outsb
clc
or
aas
mov
loope
mov
pop
or
sub
adc
or
movsb
adc
ficoms
and
test
or
or
add
sub
aas
jns
dec
rcrl
test
int3
loopne
dec
xor
sbb
pop
dec
xchg
sub
push
xor
jecxz
cmpsl
add
inc
dec
inc
je
jg
fdivl
hlt
push
cmp
mov
jg
dec
jg
inc
or
inc
jg
jle
inc
mov
inc
mov
inc
mov
inc
mov
inc
mov
je
mov
mov
mov
lret
dec
mov
mov
lods
inc
mov
cmp
xor
test
mov
sahf
pop
cmp
mov
gs
mov
xor
arpl
push
sub
jecxz
movsb
movsb
cmp
aam
sbb
sub
sub
push
or
inc
arpl
gs
jmp
not
cmp
or
cmp
mov
add
push
dec
ret
jecxz
cmpsb
sub
daa
ret
test
mov
shll
ror
test
test
fistpll
xor
and
inc
pop
xorb
in
inc
rsm
sub
dec
pop
dec
xchg
sub
ljmp
cmp
rcrb
in
push
clc
xor
dec
mov
lods
dec
pop
sbbb
push
push
and
inc
fdivl
jno
stos
jno
scas
or
mov
jno
fisttps
jno
shll
xlat
or
lret
jno
iret
or
ret
jno
or
jno
jg
mov
ss
lods
jmp
mov
fs
jo
mov
test
mov
push
mov
arpl
test
or
adc
fiadds
stos
hlt
dec
push
dec
inc
xor
jecxz
cmpsl
cltd
popa
incb
iret
sub
or
dec
pop
mov
mov
cwtl
movsl
xor
subb
sbb
or
scas
into
loope
mov
shll
je
inc
not
adc
mov
test
pop
movsb
add
or
xchg
in
movsl
scas
ret
loope
mov
shrl
mov
cwtl
mov
push
inc
ret
sub
mov
mov
or
sbbl
mov
icebp
repz
add
dec
test
pop
or
mov
mov
dec
jle
jp
push
push
orb
fstl
xor
push
xor
dec
or
fmull
fldl
xor
inc
xor
jp
xor
jae,pt
xor
jae
ss
sub
jae
jae,pn
and
jae
es
sbb
jb
jp
xchg
jae
push
jae
push
or
jo
jae
test
jae
shlb
jmp
mov
push
loope
xor
or
test
sbb
or
rcr
inc
mul
or
pop
xor
sbb
or
enter
sahf
aam
or
add
orl
dec
cmp
inc
movsl
scas
xor
ss
inc
mov
out
inc
popf
enter
cwtl
lods
leave
loope
mov
shll
ss
imul
jbe,pn
or
mov
xor
andb
jle
jp
ficompl
or
enter
adc
ficoms
ljmp
dec
mov
iret
ficomps
cwtl
dec
inc
or
add
cmc
jns
jmp
loope
lods
in
ret
lods
cmc
mov
icebp
movsb
cmc
ffree
or
jae
inc
push
or
movsb
or
fmull
xor
aam
inc
mov
xor
shlb
jo
xor
add
fimull
sub
test
mov
jne
push
stc
or
lea
sbb
sbb
std
stc
cwtl
mov
push
das
mov
mov
out
dec
push
sub
or
pusha
sub
scas
mov
or
adc
add
xor
jecxz
cs
lcall
or
xor
jecxz
cmpsl
pop
popa
ds
roll
fsubrl
mov
inc
pushf
enter
sahf
fcoms
or
adc
add
ficoms
addr16
js
stc
mov
daa
xor
jecxz
push
shrl
lea
dec
push
fchs
sahf
stc
push
fdiv
mov
or
mov
dec
jle
jp
aam
lret
xchg
test
dec
mov
push
mov
das
test
daa
test
pop
test
push
test
dec
test
inc
test
aas
aaa
into
add
aaa
idivl
cltd
push
mov
aaa
push
test
pop
aaa
sbb
test
je
aaa
inc
fadd
aaa
inc
add
ja
dec
je
test
or
inc
lahf
jecxz
cmpsl
sbb
pop
roll
jecxz
cmpsl
cli
and
mov
stos
addr16
imul
sbb
or
jp
pop
push
inc
jp
or
aaa
shll
ljmp
inc
scas
fsubp
or
dec
sbb
jmp
rcll
aas
sub
cmpb
mov
or
test
cmc
gs
jno
or
test
faddl
lods
xchg
or
jns
add
dec
xor
enter
stos
out
sbbb
shlb
test
aam
dec
pop
mov
test
adc
fmul
test
fadd
test
fdivr
test
cmpsb
cwtl
jmp
mov
inc
mov
inc
mov
jmp
shr
mov
dec
jmp
add
jmp
lods
inc
sub
add
fbstp
sub
test
int3
mov
pop
imul
add
xchg
sarb
mov
adc
jg
imul
imul
xor
jecxz
cmpsl
adc
mov
or
enter
std
fdiv
lods
push
lea
ds
shll
movsb
jecxz
cmpsl
pop
and
jle
sbb
jecxz
test
cmpb
or
test
sbb
pop
jp
xor
scas
mov
or
lods
ds
mov
mov
or
add
out
mov
dec
mov
xor
sub
dec
pop
dec
mov
xor
jecxz
push
add
mov
mov
add
ljmp
stos
je
stos
inc
mov
je
stos
inc
mov
je
stos
inc
mov
pusha
stos
inc
mov
pop
stos
inc
mov
push
stos
inc
mov
dec
stos
inc
jl
mov
mov
jp
push
add
sub
jmp
or
aam
pop
jmp
cltd
jmp
push
iret
pop
wbinvd
pop
dec
test
mov
ljmp
sub
dec
lea
jecxz
cmpsl
sbb
pop
roll
jecxz
cs
mov
or
cmpb
aaa
cmp
inc
fdivl
imul
mov
adc
movsl
adc
les
sub
scas
jecxz
mov
push
or
sahf
xchg
inc
test
rcrl
je
cwtl
stos
push
sbb
fstp
dec
shlb
jecxz
cmpsl
pop
and
sahf
pop
sbb
sbb
dec
mov
or
dec
lods
jecxz
ret
sbbb
jle
jp
aam
in
mov
mov
push
pop
test
fdivs
shrb
outsb
out
lret
into
outsb
out
ret
outsb
out
cli
outsb
mov
mov
mov
stos
lods
mov
mov
cltd
push
lcall
test
push
mov
pop
cmp
cmp
rcr
push
addr16
out
daa
in
xchg
test
sbb
lods
cwtl
mov
shrb
push
or
jp
out
add
or
ss
mov
call
jne
push
or
lret
jbe
sbb
or
enter
push
xorb
arpl
test
mov
iret
cwtl
movsb
inc
subb
mov
arpl
sub
mov
cmp
mov
or
test
test
int3
fsubrl
int
icebp
lock
addr16
pop
in
mov
loope
mov
sbbb
movsl
pop
sbb
dec
mov
sarb
dec
mov
push
add
fucomip
xor
popa
xor
mov
inc
xor
mov
jo
xor
stc
xor
out
sub
out
and
out
pop
jo
push
jo
stc
push
jo
dec
jo
stc
dec
jo
test
aad
jo
push
jnp
test
xor
mov
scas
gs
xor
scas
xlat
cmpsl
scas
jmp
iret
mov
mov
imul
jl
mov
add
fdivl
push
pop
or
add
lods
daa
loope
mov
sbbb
movsl
sub
or
imul
lcall
lods
outsb
dec
das
fs
jp
add
sbb
inc
aad
gs
ret
add
mov
stos
fnsave
test
lahf
fsubrs
or
test
cmpsb
sti
pop
mov
lcall
or
stos
fsubrl
mov
pushf
or
add
popa
mov
dec
cli
xor
jecxz
cmpsl
andl
inc
fdivr
loop
dec
movsl
sub
dec
pop
dec
lcall
add
xchg
or
push
push
andb
inc
fsubrl
and
cmpsl
and
fisttpl
and
fbld
fst
or
and
lret
or
fmul
and
ret
or
fadd
and
mov
inc
mov
mov
and
lods
in
add
fsubl
mov
bound
inc
mov
int3
xlat
inc
bound
movsl
fistpll
addr16
hlt
mov
sub
or
jecxz
cmpsl
xchg
movsb
xor
shl
mov
orb
aam
je
inc
fsubr
loope
sbb
or
cltd
dec
push
pop
push
xor
jecxz
cmpsl
mov
pop
roll
jecxz
lcall
imul
jbe
mov
pop
or
enter
mov
or
shll
mov
popa
rclb
arpl
mov
or
sbb
leave
enter
sahf
push
pop
or
in
mov
movsb
dec
fiadds
cmp
lahf
enter
imul
inc
lods
add
push
or
out
mov
dec
in
mov
je
in
mov
je
in
mov
and
xor
mov
and
sub
mov
and
and
mov
and
pop
and
mov
je
and
lods
adc
and
nop
dec
and
inc
and
lods
cmp
inc
shlb
xor
lods
fs
ret
in
inc
fwait
enter
jno
or
test
cmc
mov
jmp
mov
sub
xlat
mov
mov
xchg
pop
fsubrs
mov
add
jecxz
sar
shr
lock
mov
sbbb
scas
adc
or
adc
cmp
fwait
push
push
out
fdivrl
push
in
daa
ds
shll
pop
jecxz
cmpsl
fbld
add
sub
pop
dec
subb
cmp
mov
jp
add
out
jnp
iret
jno
or
cwtl
or
dec
mov
cs
cmp
dec
imul
enter
and
loope
sbb
into
add
out
shl
mov
movsb
out
test
out
fsub
add
into
add
out
fsub
into
add
out
shl
into
add
out
enter
out
push
andb
fnstenv
es
test
es
es
push
popa
es
es
dec
enter
inc
fcoml
mov
or
jp
lods
test
mov
test
lcall
pop
or
rcrl
movsl
icebp
push
test
addr16
mov
test
or
imul
or
iret
lods
jle
push
repz
xorb
jle
jp
movsb
gs
imul
int3
cmpsb
xor
lods
jp
test
int
add
and
push
jle
push
pop
and
call
pop
or
sbbl
mov
repnz
add
add
push
xchg
mov
int3
aam
ljmp
xchg
cmpxchg
test
pop
test
push
or
dec
or
inc
or
cmp
call
xor
call
sub
call
and
lods
call
mov
pop
call
push
add
decl
pop
sub
aam
ljmp
daa
iret
xor
jecxz
jmp
call
mov
or
roll
addr16
adc
or
jp
out
add
push
jp
and
test
mov
push
xor
cmpsl
lea
stos
cmpsl
mov
or
xor
lods
lret
mov
orb
das
cmpb
jns
dec
push
cltd
sub
dec
or
lods
sbb
orb
das
popf
loope
mov
rcr
pop
adc
maskmovq
mull
or
sbb
dec
inc
cltd
enter
imul
imul
addr16
jmp
loope
lods
loope
ret
lods
testb
mov
addr16
addr16
mov
fnsave
fcmovu
lods
or
fsubl
fcmovu
fstp
or
fcmovu
aad
leave
mov
jp
sbb
outsl
icebp
mov
dec
mov
lock
push
mov
xor
mov
jns
pop
xchg
or
or
inc
movsl
scas
inc
loope
mov
shll
mov
icebp
ret
pop
or
lods
sbb
jmp
sub
jge
or
and
fs
lcall
mov
pop
and
jecxz
cmpsl
or
fldenv
test
cltd
cltd
or
loope
mov
sbbb
inc
mov
or
std
sbb
sbb
cmp
xchg
daa
gs
dec
test
mov
addr16
jne
repz
xchg
popa
or
sbb
pop
sub
enter
mov
inc
ret
addl
hlt
jmp
xor
sbb
hlt
jmp
xor
sbb
hlt
jmp
xor
sbb
fdivrl
cmp
mov
fcoml
pop
and
sbb
adc
fsubl
ret
xorl
add
mov
popa
lahf
push
imul
inc
mov
movsb
mov
or
test
add
fs
jp
inc
mov
cmpsb
or
enter
xchg
xor
jecxz
cmpsl
push
and
mov
sahf
inc
pop
or
pushf
jns
cwtl
ret
jmp
jp
daa
stos
cmpsb
add
fisttpl
or
mov
add
jle
addb
mov
jle
push
pop
loop
pop
dec
push
aam
or
lcall
jb
jno
mov
sub
sbb
dec
fstps
mov
dec
jle
jp
aam
js
jge
pop
negb
push
sti
faddl
xchg
lret
into
pop
inc
mov
pop
je
pop
inc
mov
pop
je
fwait
inc
mov
inc
mov
inc
mov
fstp
or
rorb
xchg
fwait
jp
dec
fwait
add
adc
jo
fwait
inc
lods
cmp
mov
fisubs
dec
sub
pop
dec
sbb
repnz
cmpsl
int
jmp
push
lods
cmp
or
jns
mov
push
or
stos
sahf
fwait
pop
or
ds
dec
pop
or
and
mov
mov
mov
daa
pop
adc
pop
or
sub
or
fistps
je
sahf
inc
fsubrl
hlt
push
lods
or
sub
and
cmp
pop
or
aas
sub
movsb
loopne
inc
ret
loope
mov
sbbb
daa
out
addb
mov
sub
dec
sbb
out
dec
cmpsl
popf
movsb
lock
jmp
bound
fdivl
pop
fsubrl
pop
fsubl
pop
jecxz
jmp
push
or
dec
pop
fisttpll
pop
faddl
fldl
pop
jecxz
pop
mov
mov
jp
ja
add
cs
mov
cmpsl
popf
pop
lock
pop
dec
popf
rcrl
adc
or
cmp
loopne
push
imul
sti
xchg
fisubl
int3
cwtl
mov
add
and
lock
mov
xor
enter
push
sbb
arpl
lods
adc
rcrl
pusha
xlat
je
cltd
int3
les
mov
jle
jp
movsb
sahf
mov
sbb
jmp
iret
sahf
inc
pop
or
adc
add
jle
mov
pop
or
pop
das
sbbb
inc
mov
xor
fists
or
dec
in
add
and
xchg
cltd
add
or
pop
mov
push
pop
test
mov
pop
out
fistps
mov
xlat
pop
mov
iret
pop
mov
pop
add
add
pop
sub
pop
into
add
pop
sub
pop
into
add
pop
sub
pop
test
addr16
push
test
aad
pop
cltd
push
fcomps
xchg
dec
push
fmul
pop
push
inc
ds
lock
lods
ja
lahf
fs
jp
int
sbb
inc
ror
push
mov
xlat
pop
or
pop
dec
sub
mov
shl
iret
lods
jo
or
das
adcb
mov
pop
xor
mov
sbbb
xorb
inc
mov
scas
gs
mov
shll
or
sub
jecxz
jecxz
jno
add
stos
push
lea
and
or
sbb
pop
fisubl
scas
push
addr16
sbbb
das
enter
mov
iret
mov
loope
mov
addb
pop
adc
call
xchg
dec
jecxz
add
in
jle
out
cmpsl
sti
lods
jae
dec
mov
je
roll
adc
inc
mov
adc
inc
mov
adc
inc
mov
adc
inc
mov
je
adc
push
adc
inc
dec
adc
enter
mov
push
outsl
jne
inc
imul
test
cmp
iret
pop
adc
pop
dec
xchg
sub
or
jp
mov
in
fbstp
addr16
jmp
jecxz
cmpsl
popf
enter
fstpl
or
or
adc
xor
ficoms
addr16
aam
mov
mov
test
or
shll
or
test
aas
rcll
aaa
adc
sbb
adc
iret
sbb
xor
out
orb
mov
sub
test
push
pop
and
pop
or
mov
mov
add
sub
dec
xchg
shl
sub
dec
pop
dec
addr16
dec
mov
push
mov
xorb
je
roll
icebp
int3
rcr
aam
rcr
fcom
or
rcr
les
rcr
enter
roll
rclb
mov
inc
mov
adc
adc
out
add
fsts
mov
push
adc
push
push
lods
leave
adc
dec
adc
stos
lods
mov
push
jns
mov
push
or
xor
test
or
xchg
sbb
or
test
cwtl
stos
push
add
xchg
xlat
ljmp
and
jle
jp
test
adc
mov
outsb
sbb
cmpb
inc
lods
push
fs
dec
add
fbld
adc
pop
or
iret
xor
push
stc
ss
fmuls
xor
jecxz
cmpsl
call
lcall
or
or
ret
jne
mov
fwait
test
dec
mov
cs
lds
mov
dec
add
fscale
xchg
mov
push
orb
mov
dec
xchg
mov
inc
xchg
mov
aas
aad
xor
out
aaa
aad
sub
out
das
aad
and
out
daa
aad
pop
aad
stc
pop
aad
test
aad
leave
aad
push
aad
flds
test
aad
mov
adc
adc
out
inc
pushf
enter
jno
or
test
xchg
xchg
sub
xchg
or
mov
mov
repnz
jle
jp
xor
scas
int
or
add
xchg
cwtl
cmc
loope
cmc
arpl
test
jno
or
test
sbb
or
enter
push
add
fcomps
xor
adc
daa
or
enter
sahf
or
or
push
je
or
cld
mov
outsb
sbb
jecxz
jecxz
aam
pop
pop
dec
test
ficomps
orl
adc
negb
subl
dec
mov
push
jle
ds
cwtl
sub
cwtl
into
add
cwtl
sub
cwtl
into
add
cwtl
sub
cwtl
into
add
cwtl
sub
cwtl
into
add
cwtl
sub
cwtl
into
add
cwtl
sub
cwtl
into
add
cwtl
sub
cwtl
into
test
cwtl
aad
xlat
cltd
push
xor
test
not
push
test
sbb
sub
xchg
push
xor
xlat
cwtl
push
cmp
lea
mov
and
mov
inc
push
pop
loope
pop
dec
addr16
or
dec
sahf
xchg
or
fdivrl
push
push
inc
lods
push
aas
push
test
sbb
pop
dec
mov
jno
or
test
xchg
test
cmp
xchg
mov
or
sub
jecxz
cmpsl
xchg
movsb
das
pop
and
cmpsl
inc
movsb
xor
je
lret
lret
movsl
xor
jecxz
jmp
and
sbb
pop
or
cs
loope
xor
or
fsubr
or
popa
or
or
push
int3
aam
cld
lods
add
test
test
out
pusha
dec
mov
pop
dec
mov
push
dec
mov
dec
dec
mov
inc
mov
cmp
stc
xor
push
out
test
fimuls
aad
mov
sbb
mov
shll
leave
jmp
addr16
insl
leave
xchg
cwtl
sub
pop
enter
sahf
mov
or
cmpsl
add
or
mov
insl
arpl
lock
test
sbb
or
test
call
jecxz
cmpsl
cmp
popf
jle
push
add
dec
xlat
lods
dec
cmpsb
push
and
pop
or
adc
dec
cltd
and
or
dec
cmpsl
lods
sub
push
mov
push
sbbb
jle
jp
xor
scas
shl
or
adc
cmp
mov
or
lcall
dec
or
xchg
pop
or
jge
cs
imul
mov
xor
or
add
or
mov
dec
sub
dec
into
aas
dec
out
scas
dec
mov
cmpsb
dec
mov
fimuls
dec
out
dec
mov
into
dec
push
test
cltd
push
cmp
test
mov
mov
xor
mov
and
enter
pop
cltd
add
or
int
mov
xlat
das
mov
lret
mov
lods
repnz
pop
push
inc
xchg
jecxz
cmpsl
adc
sahf
pop
sbb
xorb
or
add
jae
cmpsl
xchg
fisttpll
or
inc
nop
jecxz
cmpsl
add
mov
dec
mov
inc
or
lcall
or
enter
push
sbb
pmulhuw
fs
jp
imul
sbb
or
mov
add
push
mov
out
mov
into
mov
outsl
and
out
aam
jmp
xor
lea
jmp
sahf
xor
fsubl
push
frstor
push
fstpl
push
fcoml
fstl
push
fmull
fisttpll
push
faddl
fldl
push
jecxz
push
je
dec
inc
mov
dec
je
dec
jp
in
dec
add
scas
dec
outsl
jg
jp
pop
dec
add
sbb
dec
out
push
fmull
push
or
dec
cs
push
pop
cmp
pop
xorl
scas
mov
xor
mov
popf
or
enter
adc
enter
push
xor
int
mov
push
imul
mov
or
imul
daa
push
je
or
mov
or
rolb
mov
jle
jp
jmp
ret
dec
push
dec
mov
sti
daa
push
xor
jecxz
cmpsl
movsb
das
pop
and
dec
push
lcall
or
mov
imul
pop
dec
test
adc
or
mov
mov
shlb
push
je
testl
or
fmul
rcr
ret
or
fadd
rcrb
mov
inc
mov
inc
mov
inc
mov
inc
fists
mov
dec
adc
or
adc
ds
pop
lock
mov
push
sub
inc
arpl
or
cmp
push
or
into
sbb
adc
add
nop
xlat
das
nop
gs
or
gs
dec
or
test
push
sub
lods
add
fdivl
das
in
mov
sub
xchg
loope
mov
sbbb
das
addb
cld
jp
movsb
cmp
add
std
arpl
test
mov
or
add
bound
pop
dec
and
adc
mov
addr16
fs
adc
mov
gs
in
xchg
add
dec
test
jae
addr16
in
popl
pop
dec
test
repz
loopne
xor
sub
ret
sub
sub
ret
and
sub
ret
pop
ret
ret
push
ret
ret
dec
ret
ret
inc
ret
ret
jp
aad
add
fnstcw
push
test
add
loop
sbb
sbb
add
aam
mov
or
enter
adc
test
jno
or
test
mov
or
test
mov
jecxz
imul
cmpsl
je
addb
addb
pop
andb
and
scas
adc
ret
loopne
adc
add
std
arpl
test
mov
mov
adc
sbb
std
rcrl
les
fimuls
push
push
ds
pop
cltd
or
sub
jecxz
push
dec
sub
dec
pop
rolb
repnz
mov
cmp
sbb
dec
aam
addr16
add
ljmp
xor
or
int3
or
les
sbb
addl
les
mov
fnsave
les
push
les
les
aad
add
mov
mov
dec
les
or
test
add
add
fdivrl
push
dec
in
add
stos
lods
pop
loope
mov
shll
test
mov
xlat
xor
imul
inc
out
pop
stos
add
or
fsubrs
out
sub
xor
jecxz
cmpsl
xchg
test
add
stos
pop
or
sbb
mov
pop
or
pop
das
cmpb
mov
test
xlat
and
in
mov
inc
adc
jmp
inc
adc
cltd
or
pop
je
add
jne
jmp
cmp
popa
dec
pop
dec
sbb
sub
inc
xor
jecxz
cmpsl
mov
ljmp
std
inc
lea
dec
mov
dec
test
adc
test
inc
sub
add
inc
sub
or
aas
subl
into
add
subl
into
add
subl
into
add
subl
into
add
subl
into
add
subl
test
add
aad
sbbl
repz
pop
test
fdivl
push
add
rcrl
or
cwtl
lcall
or
enter
adc
add
push
jae
cmpsl
xchg
and
mov
or
enter
outsb
clc
or
jae
mov
mov
daa
inc
and
jecxz
cmpsl
shll
add
sub
or
xchg
mov
lea
cmp
pop
mov
jecxz
cmpsl
popf
test
or
sub
xor
jecxz
lcall
mov
addr16
sub
pop
enter
pop
daa
gs
pop
sbb
dec
inc
or
dec
add
pop
push
enter
push
fnstenv
pop
dec
test
repz
jo
add
inc
sub
inc
into
add
inc
sub
inc
into
add
inc
push
rcrb
mov
int
mov
lds
stc
inc
out
mov
into
test
cltd
push
xor
push
test
test
sahf
test
push
push
test
ds
test
push
test
or
cmp
movsb
enter
push
pop
sbb
in
iret
out
popf
loope
mov
sarl
or
push
mov
fstps
jno
sahf
push
pop
or
push
sbb
or
jae
mov
or
sub
pop
dec
rcrb
movsb
fcomp
adc
sbbl
xorl
xchg
jo
or
jno
or
ficomps
das
addb
mov
aaa
jbe
mov
dec
mov
out
inc
popf
enter
ficomps
mov
add
or
test
pop
xlat
je
cmpsb
push
sbb
mov
pop
sub
pop
into
add
pop
sub
pop
into
add
pop
sub
pop
into
add
inc
sub
inc
into
add
inc
sub
inc
into
add
inc
sub
inc
into
add
inc
sub
inc
into
test
aad
inc
cltd
push
lret
inc
aad
inc
sbb
xchg
xchg
push
mov
jecxz
inc
cltd
enter
fsubrs
or
test
cwtl
stos
push
sbb
pop
lock
scas
cli
add
stos
pop
sbb
pop
dec
xchg
sub
sub
cmpsl
inc
loope
gs
jge
lea
idivb
sbb
or
test
sub
or
xchg
in
movsl
scas
ret
loope
mov
sbbb
stos
das
mov
mov
push
xor
jecxz
cmpsl
frstor
or
inc
cld
jecxz
lcall
lods
imul
in
add
and
mov
orb
aam
and
cmpsl
pop
movsb
aas
mov
sbb
imul
mov
push
mov
mov
into
add
cmp
cmp
add
cmp
cmp
add
cmp
cmp
add
cmp
cmp
add
cmp
cmp
add
cmp
cmp
add
cmp
cmp
test
jns
clc
jns
push
stos
jns
fldcw
pop
test
cli
cltd
stos
loopne
int
dec
mov
mov
mov
push
xchg
push
cld
sbb
inc
jp
add
pushf
sbb
in
xchg
mov
ja
jmp
mov
mov
cmpsb
jns
inc
mov
leave
xor
sti
popf
push
inc
xlat
enter
cmp
pop
mov
and
fisubs
lods
ret
jnp
jae
je
mov
mov
lods
jns
xchg
shrb
or
mov
jecxz
push
fsubrl
add
jl
push
addr16
js
aad
cwtl
sbb
test
cmpsl
pop
mov
dec
mov
push
cli
das
inc
xorb
dec
mov
movsb
cli
cmc
or
stc
scas
push
lret
pop
xlat
loop
jle
mov
cmpsb
pop
pop
lret
shrl
outsb
ret
xchg
mov
jecxz
je
repnz
ljmp
inc
xlat
push
inc
idivl
inc
shll
jb
xchg
outsb
inc
cli
jmp
leave
loope
push
jecxz
jno
jp
mov
sub
sbb
sarl
mov
movsb
mov
pop
dec
outsl
loop
cld
adc
incl
mov
pop
mov
cmpsb
cli
inc
dec
xchg
fnstenv
sbb
mov
mov
xchg
cmp
mov
and
mov
fmul
es
jno
and
pop
cltd
fsubrs
mov
test
push
mov
bound
mov
data16
dec
mov
shll
dec
and
add
adc
loop
and
mov
jle
stc
in
jg
leave
dec
pop
jns
sbb
movsl
push
leave
sahf
leave
xchg
jl
xchg
push
push
insb
fmulp
xchg
or
push
and
cmp
cltd
lods
jecxz
mov
add
adc
adc
sahf
pushf
xchg
inc
movsl
mov
aaa
xchg
or
test
mov
faddl
fmul
adc
sub
lods
jo
mov
sbb
leave
cld
cwtl
gs
adc
mov
aad
xchg
push
jbe
leave
cmpsb
popf
jl
leave
cltd
push
mov
push
repnz
dec
lods
sbb
pop
test
ficoml
test
lret
sub
cmp
push
mov
jmp
cmp
sbb
dec
or
cld
xchg
dec
cmpb
lods
fbstp
jle
sub
jle
pop
or
push
mov
gs
inc
subl
sbb
mov
loopne
push
sub
mov
push
push
movb
jl
and
nop
mov
push
test
jne
or
pop
push
fmuls
fnstenv
fxch
cmp
add
dec
mov
dec
dec
stc
lods
cmp
mov
cmpsb
loope
or
and
mov
sarw
arpl
adc
or
fldcw
pop
pop
leave
jl
add
sbb
mov
fwait
pop
mov
mov
xor
jecxz
fisubrs
mov
cmp
fwait
enter
movsb
pusha
fs
int3
int
setns
jo
jnp
pop
mov
cli
xor
push
mov
and
xor
ficoms
xor
test
xchg
mov
lret
jl
scas
mov
adc
push
pushf
fnstcw
fisubrs
push
mov
inc
mov
xor
sbb
add
scas
inc
xor
ret
mov
sbb
jnp
outsl
push
or
fldenv
xchg
test
jp
pop
add
insl
sahf
lods
cmp
mov
pop
mov
scas
sahf
fistpll
xchg
inc
sub
decb
cmp
inc
enter
mov
scas
pop
fmull
dec
jmp
pop
sbb
pop
push
add
sub
pop
lods
lcall
and
pop
push
loopne
cmp
cmp
and
stos
pusha
mov
mov
jns
outsb
int
mov
sahf
shlb
xor
insl
push
lods
insb
cld
jb
inc
ds
stos
pop
daa
push
out
pop
mov
cwtl
loopne
test
mov
xor
mov
mov
fdivl
sahf
ret
dec
push
or
mov
out
mov
ja
int3
aaa
xchg
lock
add
out
scas
mov
mov
into
out
js
dec
and
mov
lds
xchg
aad
mov
lds
aam
dec
cli
test
push
dec
jns
ret
push
pop
flds
test
cltd
add
push
or
int
mov
stc
cmp
sahf
inc
jae
outsb
call
repz
lods
mov
push
dec
enter
int3
test
test
sbb
cli
pusha
adc
iret
outsl
clc
mov
push
enter
sti
stc
fldl
adc
nop
data16
call
pop
ror
sbb
out
and
cltd
inc
mov
frstor
lods
xlat
loopne
ja
jnp
cmp
or
push
mov
pop
mov
inc
and
sbb
jl
insl
test
and
scas
dec
jg
xor
clc
jne
enter
pop
fnstenv
std
fcoml
movsl
in
std
aam
shl
or
int
stc
inc
inc
mov
or
jb
mov
mov
xchg
lret
stc
leave
adc
std
xchg
adc
jmp
or
sbb
icebp
xor
icebp
jp
stos
ret
inc
loope
adc
les
js
add
cld
add
cmp
sbb
shlb
mov
idivl
mov
or
andb
cmp
adc
mov
dec
and
cli
cmpsb
bound
inc
mov
add
cltd
stc
int
sahf
cmp
and
mov
test
cltd
lods
imul
pop
je
pusha
cmp
jae
mov
jns
mov
jge
and
sub
ficoml
int3
dec
push
test
jno
gs
pop
lcall
int3
test
inc
pusha
mov
call
out
push
jl
cmpsl
add
xchg
inc
test
and
in
cmpsl
add
repnz
insl
stos
mov
mov
fptan
shlb
test
mov
sbb
rcrb
jnp
mov
popa
xchg
mov
sbb
rclb
les
sar
dec
adcb
mov
mov
cmc
icebp
test
mov
pop
dec
lret
test
adc
jp
lods
sub
jl
ljmp
xor
jo
mov
mov
xchg
cmovle
xor
out
shlb
shlb
mov
cmp
adc
push
sbb
imul
enter
stos
and
cld
sbb
aaa
lret
push
mov
test
mov
or
sbb
push
mov
sbb
xor
subb
lret
fldcw
roll
mov
ljmp
pop
mov
cmpsl
scas
outsb
popf
mov
inc
daa
push
lods
pop
xchg
dec
add
fisubrs
jae
inc
mov
dec
loopne
and
inc
out
jp
push
ds
in
lret
inc
mov
cmp
in
out
std
int3
jns
test
leave
xchg
test
in
cmp
add
cmpxchg
cwtl
inc
int3
sbb
out
mov
test
faddl
pop
stc
jbe
add
mov
push
mov
lods
dec
andb
push
mov
pusha
mov
sub
int3
or
enter
aam
add
mov
lods
movsb
mov
lret
out
pop
sub
int3
mov
pop
lahf
dec
fcmovbe
not
gs
stos
mov
nop
stos
enter
mov
dec
pop
lods
sbb
repnz
test
lcall
call
incl
movsl
mov
dec
mov
mov
scas
inc
test
test
mov
jp
stos
sub
lahf
mov
pop
push
adc
sub
inc
nop
call
repnz
push
ret
mov
cmp
sub
push
imul
cmpsl
and
fdivrs
mov
xor
aas
iret
cltd
fisubrl
lahf
cmpsl
lds
dec
aas
xchg
movb
aas
xchg
cltd
mov
pusha
mov
arpl
push
mov
fdivr
fstpl
pop
movsb
add
filds
dec
dec
mov
inc
shll
call
mov
mov
sub
shrl
pop
jle
xchg
addr16
cli
aad
test
pop
xlat
addr16
dec
jae
xchg
mov
dec
pop
leave
pop
dec
fisttpll
jg
faddl
pushf
mov
js
out
inc
cmp
stos
repnz
fsts
mov
dec
mov
cmpsb
push
lods
sbb
into
sti
jmp
mov
adc
mov
inc
sarl
xchg
clc
int
xchg
dec
mov
aaa
stos
xor
mov
cmp
cmp
xchg
test
addr16
rcll
rorb
frndint
les
cld
sti
rolb
dec
pop
leave
shlb
jle
mov
repnz
stos
and
getsec
inc
pop
pop
xchg
push
dec
andb
add
mov
mov
stos
mov
or
enter
repnz
pop
pop
fxch
mov
xchg
cmp
mov
sahf
stc
mov
cmp
fnstsw
js
mov
lods
pusha
je
xor
fimuls
mov
add
or
into
pop
add
fsub
dec
dec
mov
mov
dec
jb
push
fdivrl
out
dec
sbbb
xchg
filds
cmp
je
add
mov
xlat
lods
imul
test
sbb
sbb
mov
lods
cwtl
xchg
sub
rolb
pop
cmp
cmp
pop
jp
sub
dec
sub
test
out
xchg
xlat
push
sub
mov
lret
inc
loopne
mov
add
pushf
in
int3
add
sub
add
inc
enter
jb
sub
xor
pop
leave
lods
jno
dec
test
dec
xor
xchg
mov
je
ds
xchg
push
je
xchg
jecxz
cmpsl
inc
movsb
cs
punpckhdq
mov
mov
or
xchg
fcmove
fistl
dec
cmpsl
pop
and
scas
js
popa
ret
std
sarb
and
out
sbbl
jno
in
mov
pop
shrl
mov
mov
das
push
stos
mov
stos
outsb
mov
fxch
dec
test
loopne
addr16
xlat
lods
inc
and
xchg
stc
mov
cmp
sti
repz
mov
out
push
lods
test
and
lods
mov
lret
int3
mov
dec
enter
pop
mov
and
lret
sbb
xchg
fs
cmp
jg
and
call
adc
or
push
ret
or
je
rcl
push
test
mov
popl
loopne
inc
jmp
xor
add
pusha
push
sbb
xchg
addb
ret
stos
icebp
mov
iret
pop
hlt
call
into
push
push
cwtl
xchg
dec
jl
inc
mov
dec
hlt
cltd
enter
ss
or
ret
stos
xor
mov
aam
mov
stos
jno
push
cld
pop
or
xchg
xchg
inc
cmp
mov
arpl
int
mov
mov
cld
mov
cmp
mov
repnz
jge
clc
push
aas
xchg
loopne
sbb
clc
arpl
cld
push
pop
mov
mov
xor
testl
pop
popl
mov
fdiv
leave
cmpsb
sbb
enter
dec
mov
insl
call
mov
je
je
inc
int
rcrl
sub
orb
mov
je
stos
xchg
test
mov
push
lods
jnp
fnstsw
mov
mov
inc
dec
scas
mov
mov
loopne
sub
das
add
mov
dec
rorl
or
test
sahf
outsl
push
dec
sarl
sbb
sti
adc
xor
lods
fdivs
fcmovb
cltd
inc
cmp
test
rcr
test
mov
fsincos
repz
pop
test
sub
loopne
or
fldcw
or
mov
mov
jg
pushf
repz
stc
adc
fsub
and
push
repz
cld
cwtl
dec
inc
jl
add
xor
mov
mov
lds
sub
jb
cmp
mov
bound
sub
lea
inc
inc
lods
and
push
les
subl
fisttpl
jb
clc
bound
xlat
out
in
adc
xor
fdivrl
lods
ds
pop
gs
pop
inc
jle
mov
pop
ret
sub
sub
aas
mov
stos
xchg
mov
ret
add
call
loop
push
mov
xorb
jb
or
pop
jae
stos
lods
add
aaa
mov
aaa
lods
test
sbb
or
mov
add
movsb
xchg
push
into
inc
cmpsl
dec
push
mov
fs
lret
xchg
xchg
mov
lcall
mov
dec
mov
stos
test
xchg
loopne
add
mov
cmp
jae
adc
and
lods
sub
pusha
stos
push
push
push
mov
sbb
adc
daa
pop
scas
sarl
stos
ficompl
leave
push
inc
cmpsl
pop
push
mov
imulb
jle
inc
aad
pop
in
stc
hlt
ss
and
orb
into
push
mov
int
jb
cmp
or
inc
jp
in
enter
mov
jp
and
rcrb
in
sub
xlat
nop
out
add
stc
dec
ss
add
ss
cmp
nop
arpl
sub
cmp
jecxz
btc
outsb
dec
test
jo
jbe
dec
mov
pushf
mov
mov
cld
inc
add
fimull
add
test
lock
or
and
into
add
jbe
scas
test
xchg
cmp
and
inc
je
lds
xchg
lods
int3
stc
aam
adc
ljmp
scas
sahf
mov
lods
in
pusha
mov
mov
dec
scas
adc
loop
stc
and
test
aad
mov
xchg
adc
mov
movzbl
test
movsb
cmc
enter
cmc
mov
lret
movsb
cltd
push
mov
mov
or
inc
fcomps
push
add
and
cmpsb
pop
push
add
mov
xor
mov
pop
daa
popf
dec
adc
mov
adc
test
mov
packuswb
lock
xchg
stc
pop
xchg
mov
pop
lret
fsincos
fcoms
add
stc
inc
mov
lds
dec
aas
mov
cltd
pop
addr16
add
sub
xor
jbe
jp
sub
jp
inc
xor
js
jo
jne
sub
data16
pop
or
push
jne
jp
movsl
fsubrs
jne
lods
lea
lods
sbb
iret
scas
mov
dec
cwtl
jno
inc
inc
inc
mov
ljmp
jb
mov
lcall
test
cmpl
test
fld
in
adc
xchg
lods
adc
dec
divl
mov
insl
std
and
movsb
fs
lahf
popf
enterw
inc
xchg
lahf
insb
mov
xchg
aad
clc
addr16
nop
mov
push
loop
add
pop
clc
sahf
jmp
add
mov
into
shrb
add
xlat
mov
and
mov
mov
loopne
xor
cmp
push
push
fwait
lods
fdivrs
mov
pop
out
sti
js
xchg
adc
insl
mov
mov
adc
mov
and
enter
roll
addr16
int3
lods
test
loop
es
mov
je
adc
mov
cld
xchg
movsb
adc
add
add
js
popf
into
iret
out
jg
movsb
dec
push
test
mov
add
pop
adc
mov
aad
mov
movsb
push
xor
mov
outsl
pop
cmc
fdivrl
aam
ja
mov
add
test
pminsw
dec
lcall
mov
inc
ret
inc
lods
movl
icebp
mull
and
push
mov
mov
lods
and
mov
iret
sub
cltd
mov
xchg
pushf
xchg
outsb
inc
adc
xchg
outsl
push
xchg
dec
mov
push
lret
and
sti
imul
mov
jle
push
subb
loopne
iret
movsl
xor
daa
xlat
lods
cs
xlat
push
cld
jb
gs
stc
sbb
push
mov
scas
scas
mov
xchg
orb
jmp
xor
cli
insb
lret
ficomps
loopne
lds
jo
shll
xor
dec
adc
lret
testl
mov
jb
cmp
repz
lcall
mov
mov
test
repnz
xlat
mov
sbb
push
mov
fwait
test
lds
mov
add
ljmp
pop
mov
fsts
ja
xchg
push
and
ret
scas
icebp
mov
mov
or
loopne
test
mov
inc
lahf
and
cmpsl
mov
hlt
scas
ja
in
imul
push
pop
fstps
push
pop
dec
xchg
scas
stos
fisubrl
lods
lods
leave
ss
sbb
leave
cmp
adc
or
shrb
and
shrl
ret
pop
sub
jo
stos
adc
fnstcw
xchg
mov
add
ret
aam
pop
iret
or
dec
add
ror
test
ljmp
xor
dec
sti
adc
mov
cmp
mov
inc
push
pop
addb
aam
mov
stos
mov
data16
mov
lret
movsb
mov
push
push
ljmp
cwtl
scas
fstps
fisubrl
mov
fldt
test
sub
sti
dec
pop
jns
mov
xchg
lret
ret
jb
popf
fsubs
sub
sub
push
cs
fwait
add
cmpsl
scas
mov
or
dec
ret
pop
sub
shrb
test
sub
cmp
lcall
xor
popa
lret
ja
push
int3
scas
aaa
jmp
jmp
sbb
test
adc
inc
xlat
test
fldt
cwtl
test
xlat
lods
jbe
popf
out
mov
pop
push
push
or
out
cwtl
outsl
inc
xor
mov
mov
push
mov
test
pop
jmp
test
mov
or
inc
test
and
inc
or
test
je
jmp
hlt
flds
push
ljmp
es
clc
adcl
jmp
pop
fimull
mov
rcrl
or
mov
mov
rorl
xor
ja
ret
sbb
jo
ret
sbb
cmp
mov
aas
or
add
sub
mov
sub
sbb
sub
and
inc
ret
mov
sub
aas
add
mov
and
pop
lods
mov
test
mov
out
sahf
adc
bnd
shlb
imul
and
enter
inc
sub
sub
test
roll
xor
adc
jl
mov
fcmovnb
or
imul
movl
xor
or
jns
add
fxch
cmp
pop
mov
fwait
jecxz
cld
aam
push
fwait
addr16
mov
into
mov
add
add
out
jb
pop
lret
lods
and
int
cltd
jo
fnstsw
clc
jecxz
lret
dec
lods
mov
ret
out
hlt
fsubs
sub
mov
jbe
or
mov
aad
in
call
sbb
xchg
mov
daa
jae
call
iret
lods
mov
mov
mov
fucomi
notl
cmpsb
pavgb
int3
aam
xchg
shll
cmp
inc
jg
cmpsb
inc
enter
in
mov
inc
and
mov
sbb
pop
fs
xlat
mov
mov
cmp
pop
mov
popa
mov
mov
movsb
mov
mov
cwtl
sbb
fld
lods
pushf
inc
jo
or
jb
xchg
fcomps
fnstcw
mov
push
jo
insb
pop
add
pusha
sahf
aam
out
jo
mov
sti
flds
lahf
gs
imul
fmull
sbb
jcxz
hlt
lock
icebp
cmp
add
cwtl
dec
inc
dec
mov
cmpb
or
sbb
lret
daa
stc
jge
jbe
cmp
mov
add
stos
cwtl
pop
mov
mov
pop
adcl
movsl
inc
lret
xor
cmp
es
or
shrb
mov
cmc
mov
or
mov
repnz
jmp
fnstsw
xchg
mov
jmp
mov
stos
fmull
push
jp
push
push
das
add
inc
cld
lret
jecxz
pop
cli
shrb
imul
loopne
jmp
shlb
push
movsl
or
mov
stc
jmp
cmp
sahf
mov
in
out
add
iret
xchg
enter
push
fwait
xchg
jmp
in
lds
leave
mov
sub
inc
jle
xchg
adc
mov
cmp
daa
pop
or
add
into
stos
mov
pop
xchg
sbb
mov
cltd
popa
subb
cmp
sti
lea
sbbb
out
pop
test
jo
sub
imul
or
mov
push
orb
and
outsb
sub
leave
jg
inc
imul
rolb
dec
cmp
stos
jae
xchg
dec
mov
mov
rcll
movsb
idiv
mov
add
or
scas
xchg
sub
mov
sbb
dec
and
mov
mov
add
movzwl
xchg
scas
stc
stos
mov
fcoml
mov
mov
mov
add
addl
mov
out
xchg
pop
fnstenv
in
mov
add
and
out
imul
xchg
and
jecxz
mov
mov
test
push
and
les
js
or
lods
sbb
test
or
push
mov
xor
or
cs
mov
fldcw
mov
pop
jb
xor
inc
test
cs
decl
jp,pn
mov
inc
xchg
mov
jl
insl
inc
jno
out
rcrl
and
aas
outsb
mov
xchg
test
out
mov
dec
outsb
je
outsb
cmp
jb
xor
sub
xchg
dec
outsb
mov
dec
outsb
scas
and
sbb
lods
inc
subb
mov
mov
or
test
movsl
enter
push
lods
mov
js
inc
cmp
mov
dec
in
je
in
cmp
sub
fbld
in
daa
jmp
lret
pop
fxch
or
dec
sbb
in
mov
xchg
fimull
mov
pusha
mov
test
sbb
in
aaa
fisttpll
dec
inc
cld
in
hlt
adc
or
cwtl
or
fsubl
pusha
or
mov
inc
jnp
dec
lret
outsb
add
addr16
push
mov
ror
dec
mov
pop
mov
mov
ljmp
stc
cmpl
insl
or
js
aaa
mov
push
fwait
insl
inc
leave
jp
movsb
jb
imul
fsts
sub
andb
lods
mov
mov
loope
dec
into
xchg
cmpsl
jmp
lock
push
jbe
push
cmp
adc
inc
inc
stos
dec
ret
or
lods
sbb
cmp
mov
shrb
mov
adc
cmp
iret
js
mov
lock
mov
sbb
in
add
pop
mov
push
xchg
popf
lods
cld
pop
test
or
dec
mov
out
inc
lods
arpl
mov
cmpsl
or
add
cwtl
inc
inc
adc
cmp
sbb
lret
enter
dec
shrb
and
and
mov
js
jns
dec
aad
mov
mov
cmp
es
jb
inc
ja
jp
lods
jl
sbb
cmp
xor
add
inc
fsts
mov
fiaddl
arpl
test
lcall
jp
push
aam
js,pt
mov
or
test
mov
pop
mov
add
test
xchg
sahf
cltd
popf
mov
or
and
nop
mov
inc
cmp
mov
lds
test
aam
inc
mov
cltd
xchg
cmpsl
test
xor
pop
dec
add
jbe
jp
test
aam
inc
mov
cltd
xchg
cmpsl
mov
pop
dec
cmp
test
jp
test
aam
inc
mov
cltd
xchg
cmpsl
mov
divb
xchg
cmpsl
xchg
xor
pop
add
test
adc
std
xchg
sbb
dec
sti
xor
mov
mov
into
cmp
mov
cmp
adc
idivb
or
jg
pop
mov
dec
xchg
popf
or
push
cmpsb
mov
push
or
cmpsb
xlat
mov
dec
cmpsl
xorl
or
daa
pop
add
stc
repz
cwtl
mov
inc
test
je
daa
cmp
daa
fiaddl
add
int3
mov
mov
mov
jns
xchg
jns
or
fimuls
leave
jns
mov
xchg
idivl
cmc
test
add
addr16
ja
jns
xlat
mov
fs
dec
movsb
movzwl
or
xor
fisubl
jo
jbe
sub
push
cmpsb
inc
jge
nop
test
incl
inc
mov
cmp
imul
inc
rorl
cld
mov
cli
stc
sbb
mov
dec
stos
ja
jae
addb
add
pusha
mov
subl
mov
les
mov
fisubl
pop
cmpsb
int3
outsl
mov
nop
in
pop
xor
or
mov
fnstcw
nop
iret
cmp
inc
rorb
test
loop
adc
test
adc
cmp
mov
out
lea
xor
mov
int3
mov
repz
scas
xlat
push
mov
movsl
iret
scas
test
fnsave
push
cmpsl
clc
addr16
lods
imul
hlt
xchg
adc
push
mov
inc
cmp
test
cmp
cwtl
push
fnstcw
sarb
dec
jmp
fwait
mov
mov
lret
jae
pop
daa
or
jle
stos
dec
add
mov
out
int3
int3
push
pop
into
mov
int3
pop
cltd
dec
stos
lods
pushf
cmpsb
cmp
xor
test
imul
inc
gs
sub
pop
cmc
icebp
or
and
notb
xorl
lahf
in
push
adcl
and
jg
fwait
movsb
rcll
mov
mov
xlat
adc
add
int3
mov
bound
mov
lcall
add
clc
push
sti
ss
adc
out
push
movsl
imul
cmp
cltd
push
mov
mov
lea
out
pusha
xchg
imul
fldenv
add
sbbb
or
sub
mov
cmp
fnstcw
fnstenv
push
mov
push
add
mov
xchg
xor
iret
sub
cltd
inc
mov
dec
or
inc
aam
cmp
sti
mov
push
fiaddl
mov
idivl
mov
dec
adc
or
mov
fwait
dec
jge
icebp
ret
cmp
fsubr
add
cmp
pop
dec
cmpsb
mov
push
jo
fimuls
and
ficoms
fisubrs
inc
fcomps
inc
into
addb
fsubrp
push
xor
mov
jo
aad
jnp
dec
mov
adc
jnp
push
lock
imul
xchg
and
cmp
or
mov
mov
imul
mov
enter
push
inc
inc
imul
les
mov
xor
popa
gs
imul
fisubrl
dec
fistpl
fmull
popf
mov
push
add
adc
inc
or
fsubrs
aas
sub
icebp
clc
push
pop
gs
pop
pusha
filds
pop
test
jg
cmp
xrelease
frstor
mov
into
add
sahf
mov
into
lea
loop
popf
mov
adcb
lds
inc
pushf
jle
mov
rcll
lds
fucomp
addr16
adc
dec
lods
xor
aam
mov
mov
or
jmp
xchg
in
mov
addl
or
xchg
xchg
cmp
sub
add
fs
nop
push
pushf
fldcw
test
jl
enter
cltd
adc
xchg
dec
gs
fnstsw
mov
mov
mov
mov
in
clc
mov
enter
jb
add
mov
test
aad
pop
or
cmpsl
das
mov
hlt
push
mov
pop
test
pop
mov
mov
lea
jge
cltd
xchg
rcll
push
jle
jno
push
pop
xchg
popf
mov
or
fs
test
push
scas
and
out
or
in
and
mov
mov
mov
mov
sub
and
mov
cwtl
jecxz
dec
cmp
push
insb
test
xlat
pusha
and
cld
and
and
int
mov
mov
inc
pusha
add
sbb
mov
push
subb
insl
jb
in
mov
sbb
sahf
pop
or
adc
insl
into
sub
lea
sub
test
adc
mov
mov
xchg
call
push
ja
fsubl
mov
int3
mov
mov
mov
fnstcw
mov
mov
filds
jecxz
jp
sar
mov
sub
stc
dec
fists
add
sub
jmp
cmpsl
cld
mov
hlt
push
mov
jnp
mov
cmc
fstps
aas
mov
faddl
dec
pop
in
loopne
fisttpll
pop
adc
insb
pop
mov
jg
jp
test
push
pop
push
jg
test
inc
pop
cltd
aad
mov
mov
jo
lahf
cmp
movsl
lahf
jnp
adc
sahf
lahf
adcb
test
rcll
add
mov
sbb
mov
push
jle
inc
aam
lock
hlt
jp
mov
rorb
pop
xchg
cltd
test
repnz
mov
xchg
jecxz
mov
ret
aam
dec
outsb
pushf
rcl
mov
xor
adc
fidivrl
adc
mov
push
outsb
mov
pop
ficoms
mov
push
shr
xor
dec
shlb
adc
shl
gs
repnz
and
test
loope
and
aas
adc
shll
pusha
mov
jb
leave
mov
enter
lcall
je
jb
lods
out
inc
fcompl
mov
mov
into
add
adc
push
into
test
push
xor
mov
rorb
or
mov
sbbb
push
adc
mov
icebp
jge
sub
jecxz
cmp
neg
mov
daa
adc
das
mov
in
fsubrp
adc
xchg
pop
pop
rcr
sub
loopne
jae
xchg
mov
lcall
gs
or
test
frstor
int3
xor
nop
lods
cmp
cmp
cmp
mov
inc
call
inc
cld
daa
in
cmp
fists
push
xchg
daa
mov
stos
xlat
lods
xchg
dec
xchg
cmp
mov
daa
cmpsb
popa
push
sbb
xchg
sub
cld
mov
jb
sti
jl
push
outsb
jl
adc
pop
out
mov
mov
add
pop
sub
push
adc
aaa
mov
enter
xorl
scas
xor
or
push
fistpl
mov
push
fsts
push
dec
sub
jg
stc
mov
aas
and
in
enter
cmp
mov
nop
aad
imul
stc
pop
mov
cltd
leave
test
les
lcall
test
pop
mov
sbb
inc
in
pop
mov
xchg
dec
cmpsl
sahf
push
dec
enter
mov
jecxz
inc
stc
fcompl
inc
sbb
pop
lds
sbbl
roll
adc
pop
fmul
test
enter
lcall
orl
jnp
and
push
je
mov
mov
ret
dec
sub
jnp
insl
push
test
adc
cmpsb
add
dec
test
xchg
push
dec
insl
sar
inc
or
pop
xchg
or
push
mov
test
mov
test
stc
jne
fmuls
adcl
imul
mov
pop
xchg
sahf
repnz
mov
push
sbb
add
dec
mov
vandnpd
lahf
iret
rcr
mov
and
test
push
cmp
popa
dec
mov
pop
dec
push
aad
ljmp
stc
aas
or
push
xchg
xchg
xlat
cwtl
lds
loope
divb
dec
push
cltd
cmp
nop
lock
int3
push
mov
loope
cld
repz
xchg
stc
mov
pop
into
imul
lea
call
lods
push
out
clc
aad
and
xchg
mov
fnstenv
cld
cli
sbb
cs
fs
xlat
out
aad
pop
dec
mov
and
adc
jl
cmp
enter
aaa
push
adc
mov
add
mov
push
mov
cmp
adc
fcmovb
rol
not
and
xchg
jl
fwait
xchg
adc
in
cwtl
lea
fisubs
popf
mov
add
mov
push
jb
lods
adc
dec
push
dec
xchg
cs
lods
push
leave
adc
pop
sbb
or
push
inc
cmp
xchg
dec
push
aad
lods
outsl
push
scas
mov
push
lods
push
testb
movsl
push
xchg
xor
dec
lods
lods
mov
xchg
mov
shlb
scas
mov
repnz
adc
arpl
mov
push
into
ljmp
mov
adc
jp
fnstcw
or
stc
mov
pop
inc
xor
pushf
mov
push
repz
xchg
sub
cmpsl
test
inc
xchg
inc
lods
enter
mov
or
pop
orb
cmp
fmull
sbb
repz
cld
clc
mov
fnstenv
pop
push
pop
mov
ret
ret
xchg
jo
xchg
dec
inc
int
bswap
fisubrl
pop
sbb
orb
shll
sarl
lock
jnp
mov
movsb
push
pop
and
in
loop
xor
cltd
lods
xchg
lahf
inc
lret
sbb
ret
sbb
mov
inc
jns
inc
mov
mov
adc
hlt
adc
fidivrl
xor
fincstp
inc
lea
push
enter
cmp
jp
adc
jb
xchg
mov
lea
mov
dec
adc
sub
push
cld
subl
popa
ret
push
adc
mov
xchg
xor
jp
jmp
fs
xchg
or
sub
dec
add
mov
push
jne
and
inc
add
cmp
mov
lea
mov
push
push
push
hlt
test
adc
rcll
sub
dec
fisubs
out
roll
inc
js
xor
mov
movsl
mov
push
inc
mov
sahf
sarl
dec
mov
inc
xchg
jcxz
lcall
jb
cmpsl
ficompl
mov
jmp
cld
fs
cld
shrb
pop
and
int
addr16
push
jecxz
cmpsl
fcompl
pop
cmp
or
pop
je
cli
mov
fnstenv
nop
cltd
jg
and
rcrl
and
test
je
mov
jb
test
stos
mov
cmp
or
adc
xchg
push
lds
adc
xchg
xchg
ret
dec
fwait
std
push
xor
or
mov
rcll
adc
jge
pop
in
add
jle
sbb
insl
data16
mov
pop
push
or
push
out
inc
and
lods
sar
cwtl
mov
xchg
push
icebp
push
mov
xchg
popf
cmpsl
cld
je
dec
dec
pushf
adcb
and
push
sub
jo
jns
sbb
sub
dec
dec
mov
xchg
divl
push
xor
and
xchg
jecxz
and
int3
mov
gs
test
and
xchg
mov
jae
mov
inc
push
xchg
pop
mov
lods
dec
lahf
test
call
push
fs
ds
subl
xchg
xchg
pop
sti
mov
xchg
mov
push
adc
ljmp
cltd
out
loop
sbb
cmp
iret
jo
xor
movq
and
lods
cmpsl
push
sbb
mov
adc
cmpsb
clc
mov
and
shlb
ja
aas
ljmp
cmc
jmp
lcall
push
push
xor
xchg
mov
xor
adc
in
in
mov
fnstsw
nop
daa
push
push
fs
mov
sbbl
xchg
mov
adc
push
jecxz
test
adc
lcall
in
rcl
ret
subl
aas
push
inc
lods
adcl
xchg
roll
inc
std
int
test
outsl
loope
mov
xchg
push
rorb
loopne
mov
adcb
push
push
mov
jp
bound
dec
xchg
fadds
shrb
subl
add
cli
push
ficoms
or
lret
je
jg
mov
jp
push
and
mov
push
xchg
pop
push
rcll
pop
cmp
xor
cmpsb
xchg
pop
stc
cmp
xchg
stc
mov
cmp
test
lock
push
xor
or
inc
xchg
out
insb
and
fcmovb
lcall
cmp
sub
inc
xlat
dec
and
stc
lods
sbb
cmc
fdiv
hlt
imull
lcall
xchg
mov
addl
fdiv
push
data16
test
or
lret
add
add
lret
iret
clc
jns
lret
shl
les
inc
icebp
pop
cmp
stos
lock
sub
xor
push
fxch
mov
into
mov
arpl
addr16
hlt
push
lcall
dec
cmp
stc
xor
mov
cwtl
lods
test
test
int3
cld
xor
aaa
inc
pop
in
xor
inc
or
jmp
jbe
sbb
stc
ds
mov
xlat
gs
jecxz
xchg
xchg
mov
call
push
jo
fiadds
call
mov
dec
pusha
push
mov
fmull
repnz
dec
loopne
mov
mov
cmpl
aam
fsts
clc
dec
pop
addr16
dec
or
add
xorl
inc
fstpl
dec
push
adc
cwtl
cltd
adcl
loop
add
nop
cwtl
icebp
shll
call
or
lock
addl
sarl
test
stos
xlat
sbb
adc
xor
ljmp
add
repnz
inc
test
outsb
inc
data16
cli
jl
mov
add
xor
rolb
test
inc
insl
inc
or
mov
cmc
mov
pusha
push
rcr
shr
jo
call
pop
push
andl
cmp
int3
ret
add
fwait
push
sub
movsb
inc
sub
push
jnp
adc
inc
sbb
repz
inc
cltd
pop
push
repz
push
add
adcl
aas
ljmp
or
pop
pop
cltd
bnd
pop
sub
mov
and
mov
or
mov
mov
mov
fld
jno
iret
nop
and
popa
ficoml
mov
jmp
mov
inc
leave
stc
inc
xchg
out
test
mov
fadd
and
push
xor
loopne
dec
mov
inc
fndisi(8087
cmp
lock
sbb
rsm
dec
xor
idivb
push
or
jp
mov
adc
mov
jb
push
push
andb
mov
xor
add
jl
jle
out
aad
and
inc
mov
mov
dec
add
movsb
aaa
jne
and
pop
mov
cmpsl
hlt
mov
adc
fsubrl
jle
add
jmp
push
and
sti
push
enter
lcall
lret
mov
jnp
xor
jb
xor
jae
std
push
dec
add
mov
xor
outsb
jp
jb
sbb
and
push
cli
mov
mov
into
test
ja
jge
push
popa
pop
jbe
out
es
add
or
dec
int3
mul
subb
shlb
in
aam
lahf
filds
insl
jb
jnp
xor
mov
mov
ja,pt
sbb
les
stc
mov
push
ret
pop
mov
add
adc
aas
xlat
sti
dec
addr16
push
jecxz
lret
rclb
jb
mov
cmp
cltd
insb
mov
in
mov
sbbb
sub
pop
mov
inc
jl
out
mov
mov
xor
cmp
scas
pop
sbb
arpl
addl
into
pop
fmull
xor
repnz
sbb
mov
lcall
outsb
dec
into
sub
scas
push
jcxz
je
xlat
mov
mov
popf
outsb
aad
dec
sbb
adc
pop
int
sbb
sbb
sbb
test
xchg
ror
rcr
mov
lret
xchg
inc
les
dec
in
cwtl
and
leave
or
cwtl
into
or
add
inc
or
xor
and
fs
dec
push
es
repnz
arpl
xchg
add
add
inc
in
or
rorb
lods
dec
rolb
dec
adc
testl
nop
jp
jo
rclb
scas
fnstcw
shrb
xor
scas
dec
sub
cvtpi2ps
or
shrl
dec
xor
faddl
popf
fadds
dec
ffreep
dec
cltd
fstps
outsl
push
test
dec
cmp
adc
divb
add
sub
movsl
insl
cltd
fld
rcl
loop
cltd
push
add
push
add
js
adc
sti
sbbb
cmp
jbe
or
insl
fadds
shll
add
add
inc
mov
addl
imul
movsb
xchg
sbb
push
mov
or
loopne
cltd
adc
les
add
sbb
inc
push
or
test
fs
inc
sbb
adc
inc
popf
fadds
add
clc
cmpsb
into
add
add
add
sbb
jae
mov
mov
add
xchg
add
push
add
xchg
shld
push
or
inc
or
push
sub
mov
int
popa
mov
mov
cld
mov
mov
pop
je
jecxz
cltd
sbb
sbb
popf
jbe
int
sti
inc
mov
out
mov
pop
and
push
xchg
xchg
popl
gs
jl
jno
in
sub
jne
stc
ret
imul
lods
rcl
daa
data16
shlb
sahf
xor
sbb
roll
test
aam
push
iret
sub
in
sub
ljmp
dec
call
mov
push
sub
test
and
ret
add
mov
popf
mov
mov
inc
xor
test
lret
inc
out
or
int
mov
nop
push
inc
lock
push
or
mov
add
pop
xchg
sbb
push
xchg
jp
hlt
test
mov
xchg
fisubrs
rcl
add
and
add
fnstsw
fdivrl
ret
test
rcrl
dec
rep
dec
dec
cwtl
adc
inc
outsb
test
push
int3
les
test
mov
pop
lods
fildll
lds
push
pop
test
popa
jnp
sub
mov
into
in
mov
pop
and
ficoml
sti
cmpsl
test
mov
mov
gs
or
shrl
dec
arpl
fistpll
lods
loop
mov
loopne
mov
jl
adc
add
sub
jnp
jecxz
inc
js
mov
test
push
mov
stc
into
add
sti
jp
mov
mov
decl
ds
sbbb
push
inc
in
adc
sbb
adc
test
enter
in
test
notl
push
icebp
cmp
mov
cmc
add
mov
imul
pushf
cli
mov
das
sbb
bsr
sub
test
int
cmpsb
test
imul
rclw
pop
push
push
repz
cmp
cmp
sbb
lea
cmpb
jne
cmp
call
xchg
cld
and
sti
inc
add
popa
sub
test
loope
popf
xchg
mov
adc
test
cmpsb
push
addr16
out
push
push
popf
das
mov
add
shrb
ss
mov
lret
mov
ret
adc
sbb
xchg
lods
sbb
jle
in
pop
popa
lahf
mov
adc
cmp
in
lods
rcrl
jnp
in
jg
fs
pop
xchg
push
pop
sbb
pop
xchg
rclb
pop
lret
mov
push
xlat
mov
inc
sub
dec
icebp
into
lret
mov
sbb
cld
sahf
fnstenv
or
pop
inc
jp
push
dec
xor
dec
loop
push
and
test
cli
popa
xor
fs
scas
insl
je
cli
jp
in
pop
pop
ffree
cltd
push
popa
cli
into
je
dec
jo
and
lahf
cwtl
push
add
add
dec
int
out
std
cmp
xor
cltd
sub
popf
je
adc
fdivs
nop
shlb
push
sti
popf
mov
jmp
test
sbb
push
pop
lret
movsb
or
clc
cld
icebp
xchg
mov
es
jp
cmc
cltd
fcompl
addr16
dec
movsb
pop
mov
push
mov
lcall
mov
jnp
rclb
sti
popf
ljmp
cld
jb
jo
dec
add
clc
cmp
fwait
mov
lea
cli
cld
or
mov
and
mov
daa
test
lret
mov
inc
rcrl
scas
xchg
inc
into
xchg
sbb
add
pop
dec
adc
sub
inc
arpl
xor
cli
cmp
jp
out
lods
cmpsl
int3
add
icebp
es
pop
push
les
dec
inc
sub
dec
lods
popa
mov
mov
cmp
subb
jge
insb
sbb
int3
mov
cmp
lcall
imul
stos
inc
lcall
push
mov
xor
lods
mov
xor
std
mov
lcall
das
adc
lds
cwtl
rcll
sahf
mov
pusha
leave
push
adc
xor
dec
sbb
pushf
jle
pusha
popf
pop
cmp
add
jl
push
movsl
ror
inc
adc
loopne
mov
lcall
or
dec
pop
mov
jp
nop
jbe
bnd
scas
mov
add
insl
jbe
jmp
mov
mov
out
jmp
sub
into
movsl
or
fsubr
jnp
mov
stc
pusha
cmp
dec
enter
push
sub
andl
jecxz
push
sbb
jns
rcll
test
cmp
or
fucomp
call
into
dec
rol
jns
shr
push
cli
arpl
lret
lods
iret
mov
jns
sub
sub
inc
xchg
jmp
mov
fwait
shll
dec
inc
rolb
fstpl
jecxz
jmp
xorb
sbb
cmp
aas
jl
xchg
arpl
dec
fmul
outsl
int3
in
mov
test
mov
mov
out
sub
push
dec
shrl
and
jae
sbb
jb
lcall
int3
mov
test
push
ja
lock
rorl
sub
jecxz
icebp
addb
pushl
xor
loop
jns
hlt
xchg
sti
xchg
dec
inc
into
je
repz
xchg
or
cmp
and
add
mov
test
dec
loopne
idivl
test
fsubl
jl
push
cmp
int
je
cmp
xchg
xchg
cmpl
cmp
or
sub
shll
dec
jl
xchg
xchg
dec
mov
cld
or
dec
sbb
jne
shlb
cmpsb
push
sub
xor
pop
sbb
jl
sub
lret
mov
jl
enter
inc
pop
push
jl
fstpl
cld
aas
repz
add
inc
in
dec
std
nop
fdivr
dec
popa
call
filds
jbe
lds
arpl
xchg
lahf
cmp
cli
sahf
sbb
test
dec
jecxz
mov
mulb
mov
in
or
leave
xor
and
add
dec
mov
inc
jge
sub
sti
into
xlat
inc
loop
and
cmovne
mov
mov
xlat
jg
cmpsb
xor
mov
lods
lds
ljmp
add
adc
scas
mov
decl
icebp
imul
pop
push
mov
mov
ja
enter
push
mov
or
lods
push
cmpsl
lods
mov
ja
mov
jb
ljmp
add
fld
mov
xlat
shlb
sbb
xor
jg
test
xor
mov
or
test
ljmp
mov
and
inc
cmove
mov
int3
xor
iret
xchg
out
mov
or
je
in
insb
outsl
cmp
push
andb
push
dec
aas
movsb
shrd
push
xor
dec
dec
into
push
jb
jge
lret
movsb
das
nop
out
cmp
insl
movswl
inc
push
outsb
cmc
pop
jnp
mov
hlt
jp
jns
call
jmp
enter
out
mov
pushf
ret
cmc
and
in
sbb
jle
lods
lds
add
jns
iret
mov
mov
mov
jp
jmp
fstps
sub
push
cmp
cmp
mov
lea
sbb
dec
sub
cld
dec
dec
idiv
or
cli
dec
pusha
jle
aas
fwait
aas
sub
push
sub
shll
nop
adc
dec
pop
inc
cmpl
pop
cmc
daa
and
pusha
cld
push
js
loope
pop
imul
icebp
dec
stc
stos
fs
shl
push
insl
sbb
mov
test
dec
cmpsb
sbb
push
std
mov
bound
fnstenv
stos
push
jbe
rol
ss
cld
ljmp
mov
arpl
adc
js
mov
loop
repnz
stc
popf
leave
push
adc
lcall
mov
sti
outsl
aas
mov
xlat
push
cmpsb
or
mov
xor
mov
mov
shll
js
add
ds
xchg
mov
in
hlt
mov
mov
imul
adc
add
ret
popf
add
adc
add
mov
insl
outsb
xor
lret
js
push
shlb
fistpll
mov
xchg
cmp
mov
data16
aad
aad
cld
pop
fisubrs
sahf
lahf
into
pop
and
pop
adc
add
jne
std
dec
sar
mov
and
and
dec
jle
incb
cld
xor
xor
neg
fsts
dec
adc
pop
xor
sub
shll
adc
das
aam
loopne
push
idiv
leave
push
mov
fdivl
and
mov
pusha
jge
cld
nop
sub
xchg
mov
xor
test
cmpsl
xor
cld
stos
stc
mov
scas
inc
cmc
xor
out
cmc
loop
sbb
pusha
loop
rorb
mov
fldcw
or
xor
int3
sahf
cmpb
adc
xchg
fldl
or
inc
aaa
jb
push
dec
mov
arpl
mov
pop
pop
clc
mov
sub
pusha
push
cli
pop
out
cmp
mov
push
xor
cmp
imul
stos
inc
in
and
test
aam
or
and
lcall
xor
dec
or
test
jno
outsl
push
jno
addb
dec
sbb
adc
int3
cli
sbb
mov
or
xchg
ss
sbb
and
cld
pop
jl
sti
fstpt
mov
mov
rorb
jge
je
aas
cld
outsb
mov
aaa
mov
dec
ss
cld
nop
mov
incb
mov
jo
outsb
test
fisubl
dec
out
std
xchg
fnstsw
out
in
ja
ret
dec
clc
add
xor
adc
cmp
scas
lret
fs
mov
add
xchg
popf
push
xchg
add
imul
or
mov
lcall
popa
push
and
inc
add
jg
inc
repnz
pop
jmp
cld
enter
sub
sbb
jg
pop
add
add
xchg
xor
sahf
aam
daa
repnz
roll
push
addr16
fwait
shlb
dec
cmp
or
jl
mov
jae
mov
test
test
dec
jg
std
iret
dec
fisttpl
lret
int
pop
mov
jge
xchg
fisubrl
push
sub
mov
push
hlt
pop
jg
push
adc
outsl
mov
add
jb
push
insl
mov
pop
mov
mov
gs
push
movsl
or
addr16
mov
inc
push
mov
sahf
mov
movsl
je
sub
ret
mov
icebp
mov
fwait
mov
andb
xchg
bound
inc
jp
mov
repnz
xor
add
orl
or
jno
add
add
lock
inc
shr
loopne
jb
dec
xchg
mov
pusha
ret
inc
ret
xchg
pop
add
das
mov
jl
fsubrl
sub
mov
mov
sub
xor
adc
sbb
sahf
fbld
sbb
icebp
fnstcw
lods
lock
cld
mov
ja
movl
aaa
icebp
xor
lea
ret
cmp
mov
jo
sub
pop
xor
outsb
fsubl
out
mov
jmp
inc
addb
jle
test
mov
mov
inc
dec
js
push
test
aaa
jl
out
cmp
shl
lcall
mov
mov
cmp
int3
mov
pop
mov
fimull
mov
dec
mov
loope
mov
mov
pop
rol
fistl
sub
cmpsl
mov
adc
cmp
jbe
icebp
daa
fdivp
sbb
icebp
pop
mov
cmpsl
push
das
dec
or
sbb
mov
jle
inc
xchg
mov
ret
dec
mov
xchg
dec
stos
rcrb
xlat
push
dec
sub
seta
dec
or
test
fmull
xor
mov
mov
add
enter
dec
lods
stos
out
fsub
or
dec
mov
scas
setbe
stc
dec
dec
xor
xchg
imul
or
lds
fdiv
jno
inc
jg
ljmp
fdiv
jp
cld
cmpb
sbb
data16
jns
jns
inc
cli
imul
test
mov
into
or
push
fstl
movb
test
xor
cmpsb
out
jle
jbe
mov
lods
cmp
mov
adc
lods
mov
xor
xor
dec
in
xor
stc
outsb
xor
fmull
cld
inc
push
iret
test
mov
into
xchg
or
mov
nop
or
fdivl
hlt
ret
jg
pop
dec
jne
enter
cmp
jno
repnz
cmp
sbb
out
pushf
mov
sbb
into
inc
test
out
dec
mov
lods
stc
gs
test
ror
or
faddl
fucomp
test
push
cmp
xor
movsb
mov
js
nop
jle
adc
and
pop
inc
pop
jmp
inc
fcomp
sbb
movb
sar
dec
clc
xor
sub
sbb
push
lods
inc
inc
inc
lea
pop
movb
leave
fs
adc
repnz
or
xorl
movsl
out
mov
lcall
test
shlb
inc
lret
pop
jb
inc
or
mov
lret
test
je
adc
mov
test
fmul
add
cld
pop
mov
mov
cmp
in
out
push
cld
std
adc
ljmp
mov
xlat
push
xchg
pop
cli
jae
jb
popl
pusha
fisttpl
jns
lahf
lds
fisttpl
iretw
mov
out
fwait
mov
mov
cmpsl
inc
inc
roll
insb
mov
mov
cld
sbb
pop
sub
and
sti
cmp
pushf
rolb
fstpl
js
pop
std
imul
sub
or
mov
lock
aam
into
dec
or
fdivl
inc
mov
cmp
mov
cli
gs
bound
pop
ffreep
repz
cmpsl
mov
xlat
cmpsb
inc
mov
and
stc
adc
mov
xor
mov
sub
or
aaa
or
sub
push
inc
xor
pop
iret
adc
inc
mov
je
xor
sahf
cltd
je
xor
test
out
dec
mov
imull
adc
inc
sbb
sbb
inc
mov
cmp
cltd
cmpsl
shlb
mov
inc
rorb
loope
push
fxch
sahf
and
test
lods
int
rorl
xchg
sub
mov
dec
xor
adc
test
addr16
pop
cltd
adc
cmp
test
jae
hlt
fldl
cltd
dec
stos
testb
in
push
fcomps
or
add
cmp
mov
fcomp
imul
icebp
cmp
jno
sub
ss
std
push
xchg
add
and
dec
ja
inc
int3
mov
or
mov
xor
or
test
out
jb
ffreep
pushf
out
ja
xchg
into
xchg
push
ljmp
test
or
lods
gs
dec
sbb
lret
jae
stc
clc
sub
inc
lods
in
push
add
shlb
jnp
mov
pop
pushf
js
pop
test
popa
js
out
add
sub
mov
js
cmp
sahf
mov
js
in
arpl
lods
adc
inc
push
mov
pop
jl
sub
aaa
loop
cli
or
call
nop
int3
faddl
fwait
int
adcb
cmc
mov
pusha
jae
fwait
loopne
sarl
dec
dec
add
cmc
dec
pusha
xchg
xchg
push
dec
mov
inc
sldt
gs
fcoml
subb
mov
out
push
pop
sbb
ffreep
pushf
lds
inc
cmp
sti
arpl
and
mov
loop
fwait
pop
dec
gs
cmpsb
cld
and
stos
ret
sub
ret
aam
scas
adcb
sbbl
dec
lahf
lods
test
or
mov
mov
lret
xor
out
fiaddl
bound
test
and
stc
jecxz
mov
xchg
push
test
adc
mov
push
fdivrl
mov
cwtl
or
imul
cmp
insb
mov
inc
rcr
movsl
mov
and
ja
push
mov
mov
mov
pop
dec
fistpl
enter
das
mull
fdivs
push
int3
jne
std
mov
jne
sbb
ret
mov
cmc
or
sarl
cmp
in
dec
ret
leave
icebp
int
movsb
inc
addr16
cwtl
pop
repnz
mov
dec
mov
pop
mov
fldcw
shlb
movsb
in
push
xor
cmp
dec
fstps
stos
lret
mov
mov
inc
inc
sahf
int3
push
push
or
and
bound
rclb
leave
adc
imul
cltd
pop
lock
dec
xor
clc
jmp
jno
aam
test
clc
pop
xchg
test
mov
fmull
movsb
jge
sbb
dec
push
xchg
lods
pop
mov
pusha
cld
jo
int3
lret
lcall
mov
rorb
push
cmpsl
jmp
jl
idivb
loopne
lcall
sbb
sar
push
sub
mov
ret
jb
push
enter
ret
std
dec
lret
cmp
dec
fbstp
aad
cmp
mov
es
mov
out
cs
mov
insl
ffree
cwtl
test
cwtl
xchg
pop
add
das
xchg
lret
daa
dec
pop
xor
dec
dec
cli
test
test
cmp
cltd
ret
cwtl
sub
js
pop
popa
pop
or
addr16
js
mov
xor
cmp
inc
dec
pusha
movsl
popf
mov
mov
aaa
jne
mov
stos
push
js
sbb
push
jne
enter
mov
into
mov
jg
adc
inc
jp
jmp
xor
xlat
mov
push
jg
dec
data16
add
pop
dec
ror
stc
dec
add
push
cmp
jmp
bound
outsl
loop
movl
push
xchg
enter
mov
mov
fwait
in
dec
ljmp
mov
mov
pop
addr16
not
repnz
fs
fmuls
mov
xchg
add
lcall
add
sti
pop
out
test
outsl
sbb
mov
out
insl
out
fdivp
hlt
sub
push
test
mov
roll
cmp
mov
mov
aaa
ret
mov
adc
cld
inc
daa
cmp
add
cli
sub
aaa
popf
xchg
cmpsb
cmpsb
ret
adc
cmp
pop
xlat
sub
mov
call
mov
push
sbb
or
ss
ja
rclb
hlt
testl
pop
test
jns
in
addr16
notb
movsb
imul
mov
lret
andb
adc
lods
dec
xor
gs
enter
test
aam
inc
jl
add
stos
xchg
mov
push
or
jb
into
lcall
stos
add
mov
fmull
jecxz
dec
decb
movsb
xlat
sub
gs
mov
inc
stc
push
dec
int
add
aas
add
or
add
cmp
sbb
subb
xor
popf
cld
xor
inc
pop
ret
adc
sbb
leave
push
fcoml
dec
sub
push
xor
mov
stos
arpl
sub
sub
lahf
shrb
popa
scas
shr
in
jnp
ret
int3
fsubr
lret
mov
push
push
cwtl
cmp
divb
mov
int
les
ljmp
cmp
rcr
out
mov
inc
sbb
xor
push
mov
stc
scas
push
pop
in
out
jae
sbb
sub
mov
fwait
ljmp
int3
les
mov
popf
shll
cmp
xor
dec
idivb
fsubrs
dec
mov
xchg
inc
insl
popf
mov
mov
leave
dec
dec
mov
push
xlat
add
ljmp
push
adc
dec
xor
dec
movsl
or
cmpsl
int3
cs
jp
inc
inc
test
popa
arpl
push
loope
inc
fisubrs
inc
repz
iret
push
sbbb
adc
xchg
mov
fadd
mov
cmp
mov
push
sub
imul
mov
inc
add
loopne
xchg
vpcmpgtw
hlt
int3
mov
add
int3
pusha
add
cwtl
sbb
push
int3
scas
sub
gs
movzbl
dec
scas
mov
cmp
mov
adc
int3
jb
pop
pop
sbb
test
jb
jge
cmp
pop
sbb
or
aaa
bswap
sub
inc
mov
gs
jb
push
lret
dec
mov
loopne
enter
jmp
sub
sbb
mov
mov
cld
int
lret
call
lret
aas
cmpsl
mov
cmp
xlat
enter
xor
add
mov
mov
imul
cltd
enter
movsb
mov
aas
loope
dec
popa
dec
int3
jl
pop
fstps
gs
loop,pt
lret
int3
sahf
jmp
orl
cmp
cmp
pop
ret
mov
push
into
arpl
mov
test
stc
lods
test
enter
jae
lods
inc
dec
jo
lods
cmp
xor
jle
fsts
push
and
iret
cmpsl
call
and
mov
stos
rol
lods
imul
in
and
jecxz
jge
or
popf
mov
fisubl
lret
and
outsl
and
sbb
test
loopne
jl
push
aaa
mov
mov
and
jmp
xchg
jl
adc
cmp
fildl
stc
mov
dec
out
dec
push
inc
dec
fsts
cmpsl
pop
and
iret
cld
inc
jnp
enter
xor
push
jb
push
sub
jns
sub
popf
test
aas
bound
test
sar
cmpsl
jg
stos
arpl
es
fmull
sub
mov
xor
xchg
add
pop
push
inc
add
adc
mov
jbe
test
mov
sub
fimull
shrl
mov
push
in
sbb
push
mov
lea
mov
aaa
cmp
fucomp
mov
jg
imul
dec
sarl
cwtl
vpackssdw
add
xor
mov
cmp
aaa
pop
mov
add
subl
js
lcall
pop
out
adc
mov
les
divl
sub
in
push
xchg
test
stos
or
data16
dec
jmp
stos
pop
mov
inc
pop
sbb
and
into
out
les
roll
mov
call
inc
orb
xlat
mov
addr16
stos
sarl
and
mov
add
pushf
xor
test
cli
mov
mov
mov
fisubrl
jmp
sub
xor
dec
mov
movsl
out
test
mov
pop
add
push
dec
or
scas
nop
or
cmp
sbb
clc
push
cld
rol
mov
out
mov
shrl
push
inc
fcoml
outsb
int3
push
ret
push
xor
int
inc
ror
movsl
cmpsl
inc
cmp
add
or
int
fdivl
inc
lods
je
orb
cmp
dec
in
mov
stc
lcall
jp
inc
mov
ret
or
jb
xchg
xchg
inc
dec
push
sub
loope
mov
push
inc
out
cmp
fsts
sbb
addb
adc
xchg
test
lret
push
push
fmull
filds
xor
inc
add
scas
push
sub
adc
out
sub
sub
add
jb
jg
cltd
jl
mov
clc
movsl
popf
sub
mov
or
push
fcmovnbe
mov
add
stc
jae
dec
filds
ss
pushf
inc
add
icebp
daa
dec
dec
std
lea
leave
mov
add
enter
ja
xchg
andb
jge
inc
lods
pop
out
shl
dec
dec
jo
out
jp
fwait
mov
push
test
aad
out
jo
div
repnz
jp
jmp
xchg
gs
dec
int3
fsubr
loope,pn
cmp
mov
cmp
sbb
dec
fs
scas
enter
out
pushf
mov
pop
test
mov
ret
mov
and
xor
push
add
pop
pop
mov
add
out
sub
cmp
imul
mov
out
xor
nop
xor
lea
or
push
mov
mov
jb
mov
mov
xor
sub
outsb
inc
lods
mov
push
stc
sbb
xorb
mov
lds
mov
adc
dec
int3
inc
arpl
in
aam
push
mov
add
fidivrs
lods
fnstcw
jae
add
mov
sbb
int3
xchg
mov
mov
dec
in
addr16
arpl
push
or
fsubl
add
sub
dec
outsb
adc
xchg
lods
xor
lock
sub
dec
addr16
arpl
adc
insl
mov
jno
shl
fwait
xchg
mov
sub
rolb
jno
test
inc
fst
in
or
inc
mov
cld
inc
sar
or
mov
add
mov
jmp
clc
and
cld
or
xorb
mov
imul
packuswb
rorl
inc
jecxz
iret
ret
mov
pop
or
mov
pop
lds
inc
icebp
pusha
rolb
cmp
or
fimull
pop
inc
cld
pop
fnstenv
and
mov
xor
mov
stc
sbb
ficoml
sub
sar
pop
dec
fsqrt
aam
rol
fdivrl
jns
sbb
pop
xchg
enter
jbe
cli
mov
loopne
jle
call
ret
xlat
aam
out
dec
pusha
lcall
mov
sub
insl
out
jb
sub
insl
test
test
add
test
jmp
xor
dec
and
js
sub
mov
cmp
daa
mov
in
rorb
sti
lock
mov
xor
push
leave
adc
mov
insb
mov
insl
aas
insb
xchg
cld
dec
jp
xlat
push
int3
bound
mov
push
mov
lea
fisubrs
jnp
pop
sbb
cs
fmuls
mov
inc
xadd
movsl
jne
pusha
ss
lods
lret
rcrb
or
scas
sbbl
xor
cwtl
mov
adc
mov
mov
decb
iret
inc
icebp
int
sbb
sbb
mov
dec
lods
into
popa
addps
adc
xor
jo
cli
orb
push
mov
bound
std
sbbl
lods
je
hlt
adc
sub
add
aam
fisubs
out
pop
inc
pop
dec
or
push
decl
cwtl
adc
adc
mov
scas
fwait
sub
scas
inc
xor
jecxz
fisubs
xor
jl
mov
add
scas
loope
ja
cld
jecxz
cld
subb
lods
push
fcom
cmp
stos
lods
mov
dec
pop
xchg
jno
shr
and
xchg
dec
popf
add
push
pop
in
sbb
lods
cmpsl
push
jecxz
stc
pusha
das
cld
cmpsl
mov
pusha
popf
rolb
push
lds
and
fwait
outsl
in
sahf
pusha
cmp
rorb
mov
mov
cltd
loopne
dec
cs
jb
loop
movsb
std
les
jbe
pmuludq
jle
jnp
js,pt
aaa
and
out
inc
pushf
jle
mov
jnp
in
xor
and
inc
xorb
in
icebp
dec
sub
and
cmpsl
add
int
or
fdivr
and
adc
cwtl
cmpsb
xlat
bound
push
mov
mov
and
std
mov
scas
std
lahf
jns
inc
pushf
lds
cld
sti
decb
add
add
mov
pop
aam
fstps
bound
imul
cs
loopne
dec
mov
repnz
mov
je
push
dec
fstp
ja
imul
movsb
push
jns
in
xchg
int
xchg
mov
imul
test
xor
fsub
popa
inc
inc
push
mov
dec
movsb
out
test
xchg
dec
das
fdivrl
inc
std
sar
and
and
stc
pop
and
int3
cmp
pop
lods
pop
add
and
jb
roll
inc
add
lret
sub
and
add
mov
mov
ss
fld1
out
shll
popf
popa
pushf
int
mov
cmp
in
push
push
sbb
or
push
sbb
dec
popf
icebp
out
stc
jmp
inc
lds
xchg
stos
push
push
icebp
stos
sbb
xchg
imul
xchg
xchg
pop
addr16
mov
dec
aam
movsb
push
lret
jnp
inc
pushf
fwait
and
xlat
pop
adc
andb
push
xor
mov
add
jae
or
and
pusha
mov
sub
lret
add
hlt
repz
jbe
push
in
dec
mov
push
divb
push
sub
fcoms
and
je
inc
lods
mov
out
arpl
dec
movsb
stc
cmp
xor
notl
lods
mov
ja
adc
call
xchg
int3
cmp
lahf
cli
dec
mov
out
movsl
sub
aas
sub
or
movsl
push
push
jne
out
insl
popf
int3
repnz
xor
push
rolb
ds
stc
xchg
jecxz
fmull
stc
mov
xchg
aam
ss
sub
mov
loopne
rcrl
and
je
int3
fidivs
fld
mov
shll
mov
ret
adc
sub
stc
mov
ljmp
push
subl
fildll
and
test
scas
rolb
or
mov
mov
add
ror
cmp
mov
mov
cmpsb
fildll
jmp
test
mov
push
jg
mov
enter
hlt
dec
or
and
inc
pop
adc
ret
rcrl
fs
push
xor
push
test
call
xchg
mov
test
jno
dec
nop
pop
ds
cmp
dec
sbb
int
add
sub
incl
stc
mov
dec
out
icebp
push
sbb
dec
inc
fadd
aad
mov
stc
popf
out
movsb
dec
out
xchg
out
rorb
pop
test
movl
pop
xor
lcall
faddl
add
aaa
push
dec
and
stc
out
dec
dec
cmp
sub
add
sti
in
imul
jnp
js
ret
mov
in
push
xchg
es
jge
lea
push
pop
popa
mov
jb
inc
mov
lcall
mul
imul
arpl
sbb
inc
xor
inc
int
or
fsubrl
lret
fsubl
jg
orl
sub
or
fisubl
add
out
sbb
je
sbb
cli
sbb
mov
mov
test
push
jg
pop
testb
jecxz
pop
sub
push
fchs
sahf
rolb
mov
push
movsl
inc
popf
or
fmull
cmp
mov
ljmp
xor
fbstp
push
leave
lret
mov
int
in
leave
mov
psubusb
adc
hlt
insb
add
je
mov
idivb
mov
std
inc
mov
lds
push
aas
push
push
fs
jecxz
add
pop
inc
add
in
mov
adc
pop
and
and
xor
mov
add
ret
in
arpl
jg
push
push
and
loop
cmc
dec
mov
cmpsb
or
jl
push
fwait
je
mov
int3
jg
cli
pop
sbb
mov
adcb
les
dec
mov
pop
cmc
enter
repnz
or
outsb
add
gs
test
mov
addr16
lret
and
test
out
insb
mov
cli
rolb
fsubrl
pusha
test
inc
movsb
adc
imul
dec
mov
cwtl
mov
xor
dec
push
in
adc
inc
test
mov
fwait
push
push
and
jge
orl
test
ret
mov
pop
test
pop
test
outsl
push
into
test
fisttpll
adc
andb
or
flds
repz
fs
scas
addr16
fildl
inc
add
nop
lods
loope
dec
mov
jno
pop
cwtl
out
push
xchg
adc
sub
fsincos
xorl
sbb
scas
cltd
or
mov
and
xlat
jb
jecxz
xchg
out
ljmp
outsl
mov
cld
gs
or
mov
and
inc
jnp
lods
mov
rolb
je
pop
jp
cli
lcall
cs
cmp
push
pop
push
inc
push
in
or
dec
out
xor
mov
ss
jmp
test
mov
icebp
fstl
sahf
psubsb
jg
inc
pop
out
cmp
or
cmp
cmp
mov
pop
push
mov
mov
adc
inc
cmpsl
xor
and
in
xchg
test
or
mov
sub
or
pop
push
bound
inc
shlb
bound
in
mov
imul
test
test
into
test
rorl
push
mov
int
cmp
and
lcall
inc
outsl
mov
xchg
lret
xor
mov
jo
dec
mov
pushf
lds
cmp
or
test
fstps
pop
pop
call
mov
mov
mov
lods
push
shll
xor
add
adc
aad
sbb
inc
dec
and
adc
jl
into
or
pop
sbb
xchg
and
jnp
inc
cmp
daa
fnstsw
or
dec
es
xchg
pop
fsts
add
daa
scas
imul
mov
inc
mov
idiv
lea
cmp
xor
and
xor
jae
inc
mov
pop
xchg
dec
lea
js
loopne
je
inc
inc
andb
dec
mov
pop
addr16
sbb
mov
shrl
enter
mov
xchg
push
dec
fsts
inc
pop
mov
incb
std
push
addl
jg
mov
dec
cmp
fiaddl
lods
ficompl
mov
popf
lods
xchg
lock
inc
test
push
enter
cmpl
mov
bound
ja
push
mov
icebp
adc
int
mov
pop
inc
outsl
jge
sub
jecxz
shlb
es
push
or
xchg
xchg
enter
dec
mov
test
inc
pushf
xor
fstps
jae
fidivs
push
cmp
mov
cmc
push
int3
sub
in
jle
or
lret
or
test
fildll
xchg
sbb
popf
inc
out
jge
jo
cli
mov
xor
xchg
add
jnp
cmp
stos
bnd
pop
push
cs
insl
pop
out
mov
pop
mov
subl
and
test
bound
pop
xor
pop
inc
jge
imul
in
pop
sarl
pop
outsb
cli
pop
inc
cmpl
insb
stc
shrl
xchg
pop
push
add
pop
pusha
sbb
cwtl
les
fldenv
push
mov
and
ja
loopne
jecxz
dec
mov
ret
xor
movsb
stc
jge
sub
in
cltd
outsl
js
and
xor
scas
lcall
adc
adc
mov
out
sbb
test
mov
push
and
cmc
ss
mov
ret
push
sti
pop
daa
adc
dec
jnp
pop
insb
ljmp
or
pop
inc
stc
pop
add
int3
stos
sbb
fldenv
jg
mov
jb
mov
dec
jmp
mov
lret
xorb
rcl
mov
fwait
mov
xor
fnsave
stc
mov
nop
leave
lea
push
lret
idiv
adcl
les
jl
or
sbb
lods
out
lods
ret
pop
stos
mov
jns
xchg
cli
lods
fndisi(8087
sbb
or
jae
xor
sbb
int3
push
pop
test
mov
push
orl
jg
lcall
pop
cmp
mov
sbbl
fs
pop
sbb
jno
cld
outsl
pop
cld
addb
mov
test
cmp
xchg
rorb
test
or
inc
mov
mov
mov
aam
rcrl
popf
das
fmul
pusha
jp
sbbb
push
and
xlat
adc
xchg
sub
test
scas
cltd
sub
test
dec
push
int
add
aad
pop
pop
mov
test
mov
add
xchg
push
push
push
ja
push
aaa
add
cld
imul
fcoml
imul
enter
inc
sub
insb
iret
addr16
xlat
lods
pop
add
out
jbe
jne
xor
jmp
mov
data16
subl
adcl
ficoml
fbld
jmp
fldcw
gs
test
into
fdivr
loope
fwait
mov
jno
dec
inc
fmull
inc
or
and
xchg
jno
std
push
add
dec
jl
mov
je
int3
mov
mov
dec
scas
or
cltd
or
cmc
lcall
jo
vxorps
out
enter
xor
mov
or
or
rcrb
xchg
arpl
enter
cmp
mov
popa
int
inc
cmp
in
loopne
inc
xchg
adc
into
xchg
fadds
adc
xchg
movsb
sub
cmp
pop
movsl
add
int3
insl
cmpsl
inc
jmp
mov
aam
push
add
test
mov
mov
and
mov
nop
inc
stos
loope
adc
ret
xchg
mov
sbb
pushf
jle
mov
call
lret
mov
clc
sub
pop
bound
jle
fstl
xchg
pop
mov
out
mov
cli
ret
xor
lods
mov
pop
ss
mov
jo
add
leave
ds
adc
subb
jo
out
adc
fldcw
pushf
jo
test
mov
leave
or
incb
or
add
hlt
or
jo
sbb
mov
add
decl
rcrb
inc
mov
sbb
cmp
int
into
shl
rol
xor
cmpsb
mov
mov
sub
frstor
adc
in
scas
push
cmpsl
pop
int
mov
dec
add
sbb
jmp
mov
jecxz
leave
sahf
roll
sbb
push
mov
and
fwait
repnz
loop
fwait
sbb
jno
popa
xor
test
pop
in
leave
xor
mov
jno
or
inc
push
leave
and
or
push
and
sub
std
dec
clc
xor
xchg
mov
in
dec
mov
shll
test
in
test
jp
mov
dec
xchg
mov
push
or
fs
incb
add
xor
xor
cltd
mov
int3
bound
adc
sbb
push
lods
in
jecxz
cwtl
je
js
inc
jmp
and
ja
out
fsubrs
mov
pop
outsl
rorl
rcr
das
stos
dec
mov
xchg
sti
push
iret
cmc
fimull
scas
add
outsl
mov
push
outsl
or
pop
xor
arpl
push
bound
inc
fisttpll
jno
dec
imul
xchg
test
rcrl
pop
in
jb
inc
iret
lret
outsb
dec
or
or
nop
sarl
add
cwtl
adc
pop
mov
call
iret
add
movsl
push
adcb
repnz
fnstcw
adc
mov
push
mov
jp
add
add
mov
xor
sbb
jnp
pop
movl
mov
push
jmp
mov
loop
js
fstpl
jb
out
mov
std
pop
outsl
pop
fsts
fmuls
inc
fucomip
mov
stc
mov
stos
fistl
cld
jb
or
aam
sub
nop
sarl
adc
aad
mov
xchg
mov
mov
xchg
mov
or
jo
mov
test
dec
sbb
in
inc
imul
sbb
mov
sbb
pop
fsubrl
mov
pushf
mov
jge
repz
fnstsw
pop
or
lret
pop
pop
adc
popa
sbb
mov
inc
out
push
mov
pop
jge
mov
push
pop
lcall
adc
add
ret
lods
leave
add
mov
dec
cmp
dec
loop
hlt
ret
cld
inc
xchg
jl
sub
rorb
fldenv
popf
push
mov
outsb
stc
fxch
stos
fnstenv
xchg
insl
sbb
out
jge
test
push
mov
push
mov
jbe
es
sarb
lret
dec
mov
sar
dec
in
stc
sti
loopne
ror
sahf
mov
mov
and
popa
cmp
or
lret
push
sub
test
and
int
xchg
lods
pop
push
cld
add
jno
add
test
add
fwait
int3
and
jp
cmpxchg8b
and
and
lods
inc
xchg
dec
inc
and
gs
and
int
cli
call
cmp
xor
xchg
sarb
inc
lods
int3
and
aas
push
mov
dec
push
jecxz
or
dec
mov
jp
imul
lods
imul
lea
jle
and
sahf
mov
pop
or
or
pop
adc
add
popf
mov
arpl
mov
adc
dec
xor
insl
inc
cld
pusha
std
dec
inc
rcll
add
cli
lods
iret
xor
popa
shll
cmc
and
lods
pop
mov
push
mov
popa
sbb
dec
mov
jmp
push
push
lea
adc
vmovd
mov
lds
cs
loop
les
jge
inc
shrl
mov
inc
jmp
sub
pop
pop
mov
icebp
lret
jecxz
inc
inc
jle
shrb
cmp
iret
fmull
fists
pop
inc
push
das
dec
cmp
dec
adc
sub
fists
push
inc
ret
dec
fistpll
sub
xchg
sbb
cmpsb
stos
pop
or
cli
fbld
mulb
jae
mov
bound
loope
fsts
sti
dec
dec
push
xchg
sti
aad
jnp
xor
fcmovu
jp
jp
dec
pop
push
adc
jle
out
jl
mov
shrl
cmp
xchg
inc
pusha
pop
test
jne
cmp
cmc
pop
cld
lds
lret
mov
aas
inc
mov
cld
fnstenv
popf
sub
cltd
mov
popa
je
out
imul
cld
push
divb
lea
int
js
pushf
out
arpl
ret
mov
mov
add
push
cmp
cmp
sbbb
ss
lret
lcall
mov
sub
clc
sub
lahf
dec
sbb
fldcw
dec
sbb
outsb
mov
daa
mov
ficomps
clc
cmp
xchg
push
mov
aad
inc
daa
arpl
enter
cmp
inc
insl
cmp
pop
sahf
mov
or
push
lods
sarb
cwtl
sarl
push
jecxz
dec
inc
cmc
push
inc
gs
sub
sti
ljmp
mov
mov
jl
mov
lock
test
movsb
adc
mov
mov
fcomps
pop
adc
or
mov
int3
and
lods
mov
iret
mov
lahf
mov
add
xor
inc
mov
mov
mov
pop
push
nop
push
pop
in
mov
mov
mov
sbb
push
ficomps
push
cmpsl
dec
xor
dec
test
cld
xchg
add
fxch
xchg
stc
stos
std
xchg
pop
add
push
and
sbb
jmp
xor
add
lret
jnp
mov
and
stos
cmp
fdivrl
dec
add
jle
fcoms
cmp
xchg
sti
aaa
push
fsqrt
mov
fwait
in
push
ficompl
mov
arpl
aad
rcrl
mov
pop
std
in
push
jle
ret
int3
mov
mov
cmp
push
push
test
lock
lea
inc
mov
adc
xchg
enter
cltd
pop
pop
and
mov
repz
dec
pop
stc
adc
mov
push
mov
mov
repz
or
add
jl
sbb
jbe
mov
adc
cmp
lds
jno
ret
pop
ja
xor
pop
test
fbld
push
inc
pop
pop
dec
xor
dec
dec
dec
fsubl
xchg
adc
mov
add
xor
mov
shl
addr16
sub
dec
or
jne
addr16
stc
mov
aam
mov
mov
aam
mov
mov
cwtl
rclb
or
bound
inc
sbb
rclb
mov
add
les
xorl
lea
xor
rcll
cld
inc
sub
push
xlat
jb
and
mov
adc
push
mov
adc
cld
daa
gs
xchg
test
adc
xorl
cmpsb
pop
mov
jecxz
jnp
movsb
mov
push
push
inc
jno
enter
dec
mov
xor
push
xor
repnz
mov
lea
push
loop
out
test
movb
or
push
stc
lret
ljmp
arpl
rcrl
int3
arpl
test
lret
mov
pop
stos
ja
leave
mov
pop
in
or
imull
mov
sbb
xchg
repz
addl
push
gs
mov
fistps
cltd
cmpsb
fldl
andl
push
mov
mov
and
ret
addl
loope
subl
insl
add
mov
aam
xor
add
rcll
jno
cmp
fcomps
sbb
push
fwait
cmc
add
adc
test
leave
popa
sbb
adc
mov
addr16
cmp
and
sub
gs
jg
ss
xchg
mov
dec
movsl
or
mov
mov
and
out
or
stc
loopne
js
and
outsl
xchg
sub
inc
loop
ret
dec
std
xchg
pop
cmp
jnp
add
mov
pop
lret
push
mov
inc
xchg
bound
aas
push
cwtl
jecxz
add
mov
lock
xchg
das
cmp
xchg
repz
jae
cmp
sub
pop
leave
lahf
xor
mov
mov
push
lahf
ja
and
inc
push
xor
enter
and
sub
pop
fadds
inc
mov
mov
dec
filds
in
fistl
sti
clc
or
insb
daa
lret
mov
mov
repz
fistl
loop
fadd
in
or
sub
jge
cltd
int
pusha
cltd
aam
dec
add
mov
sub
mov
xor
subl
mov
pop
mov
jmp
mov
lahf
pop
arpl
jle
pop
sti
xchg
mov
xor
fs
pop
sub
call
dec
mov
cltd
xchg
mov
jp
sub
pop
stc
jg
mov
push
out
sbb
out
dec
hlt
push
ficoml
cmpsl
test
movsb
adc
push
push
xchg
pop
mov
out
jmp
jo
pop
cmp
arpl
imull
sti
frstor
int
sti
sub
lds
dec
enter
jmp
call
adc
mov
or
in
aad
push
sbb
push
push
popf
js
fld
push
xor
iret
jae
mov
stc
push
mov
xchg
insl
out
dec
pop
fxch
in
outsl
sub
rclb
jnp
push
loope
test
pusha
pop
dec
dec
lods
into
dec
lahf
test
lret
cmp
cwtl
jge
cmp
not
sti
pop
in
push
insl
adc
mov
inc
aad
inc
and
shlb
mov
fldt
imul
pop
loopne
out
ret
jb
xlat
dec
xchg
adc
jg
fstps
aad
inc
aad
test
sub
fdivs
andl
mov
mov
sbb
mov
fists
xchg
adcl
add
cmpsl
cwtl
push
pshufw
cltd
inc
xchg
movsl
shll
mov
lret
mov
shrl
mov
pop
adc
dec
mov
add
inc
leave
mov
std
cwtl
cmp
inc
fnstsw
mov
unpckhps
test
mov
das
int3
repnz
or
xchg
mov
xchg
xchg
push
and
mov
sub
jl
adc
cwtl
push
stc
mov
test
fidivl
fmull
add
add
lret
lret
cmp
xchg
jne
mov
aam
dec
add
jno
cmp
call
cmp
dec
ror
jne
mov
mov
or
js
leave
adc
mov
jo
mov
lods
mov
nop
aam
fcom
mov
fsubl
fmul
jb
or
scas
dec
mov
test
pop
fcoms
pop
fmuls
bound
cld
lock
push
into
adc
inc
mov
call
mov
dec
aas
push
cmp
mov
aad
into
lods
cmc
test
mov
cmp
les
xchg
fsubrs
pop
dec
pop
mov
xchg
xor
pop
test
insl
sub
outsb
bound
fwait
and
cmp
xchg
push
in
cmp
addr16
sbb
mov
xchg
or
and
sahf
sahf
subb
push
stos
cmp
gs
push
xchg
inc
mov
cwtl
hlt
xor
decb
in
aam
or
adc
out
aaa
dec
test
sbb
call
or
test
ss
arpl
cmp
adc
icebp
adc
ja
jmp
add
aam
push
stc
push
cmpsl
fcomip
xlat
gs
into
andl
lcall
loope
stc
int3
xlat
push
jae
cmp
xor
stos
mov
test
das
mov
or
jnp
mulb
sbb
pop
mov
xchg
pop
cmp
mov
dec
and
and
out
out
sahf
and
cld
lahf
jb
test
cmp
pop
sbb
push
push
fsubrl
push
push
lcall
out
add
push
scas
and
adc
fs
jp
inc
ja
cltd
out
stos
sbb
in
pop
sub
xchg
add
jnp
and
movsl
stos
cmpsb
pop
add
ljmp
into
shlb
cltd
push
add
xor
xor
lret
and
in
int
int
sti
jmp
fadds
adc
mov
sbb
imul
and
add
dec
mov
push
and
inc
lret
jbe
ret
lds
pop
mov
push
mov
sub
or
pop
and
xchg
std
dec
mov
test
out
sub
das
dec
cltd
sub
dec
push
divb
stc
ljmp
xor
adc
sbb
ss
jno
js
push
cmpsl
fstcw
inc
int3
lea
lods
pop
inc
pop
or
push
int
lods
hlt
mov
test
outsl
mov
push
jp
test
push
je
xor
or
push
mov
fs
pop
loopne
and
je
test
inc
int
rcr
push
test
lea
test
xlat
push
cltd
sub
leave
add
push
pop
leave
add
mov
fimuls
stc
inc
leave
mov
cmp
mov
repnz
sub
or
sbb
test
cmpsb
push
mov
gs
lcall
jmp
or
or
cltd
cmp
dec
inc
popf
pop
es
mov
cmc
enter
xchg
movsl
mov
mov
xchg
push
lods
lahf
sub
imul
add
dec
mov
popf
jmp
xchg
popf
xor
xor
cmp
arpl
dec
sbb
push
sbb
test
mov
fstl
mov
lret
lcall
mov
inc
mov
insb
lret
bound
mov
add
sbb
imul
inc
stc
push
inc
inc
or
pop
faddl
testl
fstps
rcrb
sbb
xchg
dec
xor
dec
cltd
outsl
jae
lods
pushf
int
insb
pop
mov
push
test
in
punpckldq
and
mov
push
jecxz
xchg
mov
aad
sbb
push
stos
mov
stos
cltd
ljmp
cwtl
mov
scas
es
aam
inc
xlat
xor
data16
inc
shr
aad
loop
and
sbb
ret
or
movsb
mov
jp
cmpsl
sub
cmpsl
xorl
xchg
incl
outsl
mov
push
inc
dec
bound
sbb
int3
mov
mov
sbb
jp
andb
dec
lcall
je
dec
inc
rcrl
mov
mov
es
in
out
ljmp
xorb
add
or
ret
int3
xchg
out
cmpsb
mov
lods
movsb
fdivrs
dec
ja
inc
cmovs
and
stos
push
das
push
dec
fldcw
gs
mov
rcll
ds
mov
jmp
mov
rcl
lret
dec
pop
cmpsl
mov
jb
ficomps
les
imul
mov
fndisi(8087
dec
xor
or
pop
lret
xor
sub
add
addr16
scas
dec
push
stos
push
cltd
in
sahf
push
repnz
adc
pop
lret
push
xor
outsb
sbb
sub
sub
cmpsl
mov
stos
or
sbb
push
jnp
stc
lcall
sbb
jnp
cltd
cld
rorb
dec
push
lcall
lret
sub
mov
cmp
gs
clc
mov
jns
sub
adc
jp
pop
or
push
fnstsw
fsubrl
int
cmc
dec
or
cmpsl
sbb
es
loopne
xor
push
iret
sub
mov
shlb
in
rorb
daa
loop
int
and
mov
out
pop
ficoml
aam
jbe
and
std
fcoml
dec
rol
arpl
mov
mov
inc
aam
pop
pop
or
in
pop
or
push
and
in
xchg
or
pop
mov
jo
mov
jb
sub
xor
push
mov
mov
and
les
inc
mov
leave
js
pop
call
add
loopne
xchg
add
scas
gs
stc
lret
mov
sbb
xlat
cwtl
push
in
mov
push
out
mov
and
jb
xor
adc
and
fptan
into
daa
gs
mov
into
inc
push
ror
loopne
sahf
and
fisubs
mov
fisubs
mov
mov
sbb
arpl
push
push
scas
push
popf
cwtl
mov
cmc
cmp
xchg
adc
shll
mov
add
mov
push
jb
jecxz
adc
mov
push
jg
mov
sti
ljmp
loope
dec
pop
popf
es
movsl
or
addr16
movsl
lds
test
outsb
mov
fwait
imul
das
divl
dec
roll
data16
pop
mov
jl
and
pop
adc
mov
jno
outsl
pusha
mov
and
ss
jge
mov
dec
rcll
test
decb
sub
jbe
xchg
or
adc
add
add
scas
aam
invd
pop
dec
outsb
inc
and
inc
pop
pop
dec
xor
add
jno
push
push
pop
inc
inc
pop
test
in
and
xlat
ret
dec
mov
imul
xorl
sbb
xchg
push
stos
mov
leave
push
inc
je
mov
sbbb
and
movsb
mov
cltd
lods
or
push
int
dec
pushf
push
std
sbb
mov
into
mov
int
test
xchg
loope
into
fisubl
mov
fidivs
int
cmpsl
in
fnstcw
xor
int
test
or
aas
sbb
faddl
lds
incb
sub
mov
loope
push
add
cli
test
lock
lods
gs
sbb
push
fadds
mov
test
iret
or
cmc
jecxz
dec
push
fsts
xchg
mov
jmp
pop
and
mov
je
fdivr
dec
incb
enter
dec
addr16
cmp
push
pop
sbb
jp
and
cmp
pop
inc
je
pusha
cltd
push
lods
ret
stc
ss
and
gs
test
mov
dec
cmpsb
dec
sbb
aas
lea
mov
pusha
cmp
popa
lret
sub
lea
mov
jle
cs
push
or
xchg
fyl2xp1
or
dec
mov
stc
fdivp
int3
mov
cmp
xor
or
xchg
cltd
mov
jne
cmpl
or
lock
xchg
dec
or
mov
shrb
dec
rclb
lahf
mov
cmp
push
cmp
dec
fs
add
icebp
xchg
test
notl
rolb
mov
mov
fisubl
mov
adc
mov
dec
xor
in
sub
xor
push
or
jo
lret
cltd
mov
push
xor
push
xchg
dec
mulb
addl
lcall
sub
inc
out
xchg
mov
dec
push
mov
and
or
jb
in
push
call
jns
dec
push
jnp
adc
dec
in
mov
je
push
jp
xchg
cmc
or
nop
in
es
inc
das
imul
adc
cltd
aaa
nop
push
loopne
out
mov
mov
xchg
lods
js
mov
inc
fbstp
aam
scas
mov
ss
ss
test
in
mov
pop
shrl
pusha
add
sbb
xchg
mov
push
mov
lcall
ljmp
iret
divb
in
arpl
iret
mov
stos
jl
loope
xchg
jbe
mov
xchg
pop
xor
pop
dec
dec
mov
and
ds
xor
jecxz
jno
fwait
xor
clc
mov
loopne
adc
iret
shlb
xor
xor
fbstp
adc
mov
dec
das
mov
dec
inc
jle
in
punpcklbw
jb
xchg
mov
cmc
sbb
int
push
out
sar
outsl
lcall
jae
sbb
cs
fldl
jmp
repz
dec
fs
test
loopne
outsl
loope
bound
dec
call
mov
int
mov
add
popa
imull
mov
dec
leave
das
je
popl
xchg
and
scas
and
mov
out
dec
out
xorl
jo
popl
movl
jb
pop
pop
mov
inc
nop
mov
pusha
popf
push
xor
and
push
js
lods
inc
mov
bound
outsb
lods
sub
push
fmull
jp
jnp,pn
add
mov
sub
and
mov
mov
mov
fldz
add
dec
xor
jp
popf
and
bound
imul
cmp
xchg
arpl
add
push
hlt
fsubl
sar
adc
mov
les
bound
ret
push
stc
lcall
out
mov
cmp
add
pop
lea
lds
popf
es
popf
leave
lcall
cmpsl
out
lods
pop
mov
cmpb
lds
xchg
leave
jmp
push
cld
dec
iret
and
aam
test
fldcw
jge
out
or
inc
iret
aas
or
dec
push
push
lds
popf
outsl
lds
jne
lcall
and
pop
out
bswap
add
daa
lds
leave
jnp
jp
adc
int
push
jnp
movsb
add
dec
adc
ss
cmp
mov
sbb
mov
int3
jp
ret
stc
mov
cltd
out
in
fnstenv
test
dec
sbb
fiadds
pusha
jae
and
push
xor
fwait
repnz
fnstsw
mov
rcr
cltd
in
dec
roll
enter
lahf
pop
fldcw
add
enter
subl
ret
sbb
pop
mov
js
in
jbe
arpl
bound
xchg
cwtl
cmpsl
push
insb
mov
cmp
mov
jo
ret
pop
adc
int3
push
ret
mov
dec
dec
sbb
dec
aaa
add
loop
add
iret
rolb
sbb
mov
and
lods
mov
and
and
sti
sub
sub
or
sub
mov
mov
subb
inc
mov
inc
adc
sbb
sub
mov
xlat
loope
push
mov
jne
push
push
cmp
jns
hlt
cmpsb
push
inc
xor
popa
int
ljmp
imul
fiaddl
xor
je
add
sub
dec
or
push
push
push
idiv
test
lods
sub
enter
inc
out
inc
add
cmp
imul
insl
xor
and
cmp
pop
pop
subb
lods
sbb
jle
test
or
xchg
enter
mov
pop
xor
xchg
sbb
sbb
int
addb
jo
pop
mov
cmc
sbb
in
das
nop
test
mov
lods
mov
ret
pop
pop
fcoms
mov
xchg
iret
ljmp
in
fdiv
rclb
test
test
je
dec
ljmp
stos
push
add
xchg
push
ljmp
adcb
add
fcoml
jnp
mov
inc
lahf
fadd
pop
into
shll
push
add
mov
js
lea
inc
add
iret
mov
mov
aad
or
inc
sub
xchg
push
movsl
lods
scas
xchg
out
movsl
mov
inc
movsl
movb
lcall
test
ficomps
sarl
lds
test
xor
jbe
mov
daa
int3
rcl
mov
mov
mov
adc
sbb
pcmpeqd
lds
push
in
mov
orl
push
cmc
shlb
cltd
sbb
jmp
int
push
test
lds
std
push
rclb
aam
popf
stos
cli
or
sub
fs
stc
add
das
cmp
dec
xchg
hlt
xlat
loope
fdivl
lods
in
out
ljmp
xor
mov
xor
or
lret
pop
pushl
out
mov
nop
leave
pop
pop
dec
or
leave
mov
dec
cmp
stc
xchg
and
jne
gs
mov
stc
xor
pop
add
inc
xor
aad
push
jo
inc
es
mov
push
inc
mov
push
int3
mov
xor
add
xchg
mov
add
into
cmp
movsb
leave
mov
jle
inc
test
jb
mov
notl
xchg
test
cmp
subl
bound
dec
arpl
daa
in
xor
iret
out
xor
in
and
xlat
iret
fldcw
mov
inc
cmpsb
call
fistpl
out
call
and
dec
add
lods
aad
call
stc
push
enter
enter
mov
dec
movsl
dec
pop
jb
clc
xor
add
lcall
dec
call
lods
mov
enter
jge
mov
add
mov
das
or
pop
movsl
scas
inc
mov
pop
cmp
adc
dec
sti
lea
addr16
sub
jns
aad
sbb
cmpsb
inc
xchg
rcrb
inc
xor
or
and
or
arpl
xchg
sbb
jmp
sbb
sahf
inc
ja
cmp
inc
test
stc
adc
std
mov
test
test
cwtl
lods
dec
popa
jb
xor
inc
imul
push
dec
xchg
pop
dec
ficompl
jae
cmc
test
mov
or
leave
jno
out
daa
out
in
mov
cmc
or
cmp
pusha
mov
cmc
sub
rorl
pop
jp
mov
aad
andl
mov
cmc
popa
or
lret
cmpsl
push
inc
sbb
xchg
int
outsb
inc
adc
mov
or
xlat
mov
or
sbb
cmp
outsl
jp
test
popa
xchg
cmpsl
or
inc
gs
in
int
cwtl
outsl
cwtl
or
mov
mov
mov
mov
pop
add
or
pop
adc
fcomps
out
mov
aam
dec
mov
rcrb
into
xor
test
and
fnstenv
inc
and
xchg
mov
shlb
pop
incb
stos
sbb
pop
jge
cmpsl
inc
addr16
test
cmpsl
leave
jo
inc
jp
bound
imul
xchg
aad
mov
xchg
int3
mov
jo
pop
inc
faddl
xchg
lods
dec
fcmove
inc
mov
cli
addr16
cmp
inc
pop
jl
and
into
out
xchg
lcall
cli
or
xchg
pop
sarl
mov
add
sbb
aas
add
shl
jb
into
xchg
lds
test
jns
mov
jbe
cmp
xchg
test
sbb
xor
add
sbb
gs
sbb
frstor
lods
fstps
dec
mov
push
xor
jg
jae
mov
je
xchg
jns
xor
ss
cltd
mov
popf
mov
pop
xchg
jp
jo
addb
dec
jp
mov
cli
jp
je
fld
js
mov
mov
mov
mov
cmp
mov
fstps
dec
cld
lods
int3
mov
mov
or
loope
loopne
add
gs
rolb
and
mov
mov
cmp
dec
add
stc
xlat
xorb
test
int
jbe
cmp
outsb
ds
test
cmp
and
mov
cmp
add
sub
in
sub
jb
fs
int3
push
out
sbb
pop
dec
sbb
push
cmp
and
jg
mov
mov
rcrl
out
dec
andl
ss
das
cltd
add
adc
xor
inc
fildl
jns
dec
cmp
mov
mov
sbb
sarl
mov
cmp
xor
test
jmp
cld
sbb
cld
subl
int
cld
insl
andl
cmp
pop
fstps
inc
int
cmp
mov
dec
stc
dec
pop
test
cmp
add
in
flds
cmp
xor
sub
pushf
movb
fldcw
mov
rcr
mov
dec
adc
jp
arpl
ficomps
sub
movsl
fdivrl
iret
inc
lret
jo
mov
fdivrl
xor
jl
int3
mov
xchg
imul
clc
out
or
fldenv
mov
dec
mov
nop
cmpsb
pop
lcall
ret
sbb
cmp
test
test
ja
rcr
sbb
std
ret
jp
ficomps
and
inc
fbld
mov
or
mov
add
inc
int
or
sti
cmp
jl
adc
cmpsl
sub
cmpsb
sti
cmp
pop
sti
cmp
dec
and
loop
imul
xchg
popa
mov
loope
enter
push
push
rolb
dec
hlt
jl
cmp
cmp
inc
sbb
xor
pop
outsb
andl
pop
mov
cmp
mov
mov
fildl
cmp
mov
pop
cmpsb
jl
cmovno
mov
mov
inc
jl
jle,pn
mov
push
mov
xor
pop
add
adc
cmp
into
jnp
cmp
jmp
test
cmp
repnz
sahf
mov
mov
outsb
cwtl
es
jns
sbbl
push
adc
mov
xor
test
int
js
jns
cmp
fldenv
stos
jns
lds
stc
rcrl
popa
jae
mov
cwtl
sbb
xor
gs
xor
add
std
or
jne
lods
jnp
add
ds
push
or
mov
mov
out
je
ds
test
or
fists
pop
lock
es
cltd
leave
mov
jle
sub
jle
out
mov
cltd
movsb
jle
jns
mov
adc
jp
mov
jle
jns
push
loopne
out
jne
loopne
lods
jno
add
or
inc
arpl
add
adc
arpl
xlat
cmp
out
xlat
push
outsb
jns
inc
inc
int
ljmp
js
add
stc
push
std
sub
and
push
pop
out
jecxz
push
cltd
pop
xchg
clc
shlb
cltd
test
andl
dec
or
jns
add
cltd
cmpb
pop
add
mov
stos
xchg
scas
add
out
cmp
cmp
imul
jns
or
cmpsl
leave
and
inc
and
jge
cmp
addb
out
jns
das
addb
jge
rcl
sub
in
fsubrl
jmp
dec
and
mov
dec
scas
loop
add
cmp
inc
cmp
mov
sub
leave
xor
rclb
scas
add
push
xchg
jno
leave
cwtl
fwait
cmp
cltd
imul
and
dec
mov
gs
inc
inc
mov
sahf
mov
add
sub
xor
fwait
rorb
xchg
loope
mov
pop
popa
xchg
insb
push
mov
xchg
add
stc
pop
add
gs
or
cmp
sub
cmc
into
je
lds
call
fstp
insl
cwtl
mov
inc
cmpsb
hlt
dec
lods
xor
xor
sbb
mov
test
pop
mov
out
push
in
push
scas
dec
mov
pusha
jns
mov
incb
xor
in
cmpb
add
mov
cs
pop
fbstp
cwtl
add
cmp
inc
pop
dec
je
ficomps
cmp
outsl
icebp
imul
cmpb
sbb
test
jp
add
pop
popf
test
test
int
mov
cmp
add
fcmovb
fdiv
cmp
fcoml
fwait
jecxz
seta
adc
icebp
sbbb
fcoml
mov
movntq
int
cmp
js
test
lret
or
int3
pop
inc
or
test
cmp
xchg
push
mov
inc
sub
dec
xchg
push
cmp
orl
mull
fxch
pop
out
cwtl
scas
adc
cmp
leave
imul
xor
subl
fwait
enter
pop
scas
mov
cltd
xorl
cltd
imul
dec
mov
jo
xor
pop
and
inc
imul
cmp
aas
adc
incl
sahf
pop
jbe
cmp
cmp
cmp
add
push
mov
jg
cmp
rcrl
cmp
dec
pop
dec
pop
addr16
dec
add
roll
or
pop
lret
cmpsl
jmp
jg
xlat
jae
pop
sub
rorb
rcr
lock
stc
repz
mov
mov
mov
adc
int3
and
push
dec
dec
ljmp
add
fwait
jecxz
cld
sbb
frndint
sbb
int3
mov
xor
inc
mov
mov
lock
and
dec
addr16
inc
mov
mov
lock
fxch
aad
repnz
aam
ret
or
ret
and
in
stc
pop
adc
fisubl
mov
xor
movsb
rcr
xchg
xor
jo
testl
sub
push
xor
mov
cwtl
xor
or
fsts
in
pop
xor
jb
mov
into
adc
arpl
in
jb
xor
inc
jae
add
test
mov
cwtl
dec
add
idivb
sub
lret
cwtl
std
nop
xchg
pop
pop
add
xor
cmp
sub
bound
hlt
sbb
cmp
push
xchg
adc
add
bound
lret
js
je
aam
hlt
fidivrl
pop
imul
pusha
loopne
lcall
cwtl
icebp
cmc
flds
stc
mov
daa
add
xor
adc
inc
jp
test
dec
ret
sbb
fldz
idivl
mov
cltd
and
ljmp
out
jp
jo
dec
test
add
sub
rcll
pop
dec
int
fmull
adc
popf
push
xchg
pusha
fnstenv
jbe
cmp
ds
inc
push
inc
imul
cmp
add
push
mov
jno
cmp
inc
cwtl
jno
mov
and
cmp
cmpsl
push
in
jl
cmp
stc
sbb
scas
push
cltd
fsubr
mov
inc
mov
mov
mov
adc
dec
push
stc
inc
mov
pop
mov
push
daa
pop
int
xor
cmp
ja
insb
mov
cmp
mov
hlt
cmp
je
hlt
cmp
iret
dec
xor
imul
pop
adc
imul
dec
test
aam
aam
jno
push
cltd
fsqrt
hlt
faddp
dec
push
add
in
xor
mov
nop
sbb
cmp
jno
roll
out
and
xor
shlb
or
outsb
pop
pop
sub
jecxz
or
cmpsl
popf
test
jecxz
mov
mov
dec
je
sti
inc
mov
inc
fcomps
jg
fidivl
pop
test
je
mov
cmp
mov
pop
xlat
mov
cwtl
add
jno
lret
int3
hlt
aaa
pop
fmul
lahf
aam
jle
xchg
loope
les
outsl
mov
sub
xor
add
cmp
push
mov
mov
fadd
mov
mov
insl
test
aaa
nop
jns
mov
pop
xor
inc
mov
jmp
mov
je
and
and
push
xor
repz
mov
test
je
xchg
stc
stos
fneni(8087
rep
and
xor
mov
shrb
mov
add
fdivs
aas
xor
mov
lret
jecxz
add
xor
call
inc
outsb
inc
sub
mov
pushf
mov
int
rol
icebp
jl
inc
pusha
decl
outsb
out
adc
sbb
das
cmp
mov
xchg
cmp
addr16
xlat
shrd
popa
enter
mov
push
mov
je
jae
push
sub
mov
gs
imul
les
scas
mov
pop
push
dec
aam
pusha
aam
popl
loope
lcall
xor
cmp
cwtl
mov
test
and
int3
push
mov
mov
push
cmc
mov
out
inc
jmp
ret
lods
mov
cmp
ljmp
stos
mulb
sti
nop
mov
imul
imul
sub
stc
xchg
into
cmpsb
or
lods
push
nop
or
movl
xor
jmp
stos
rcrb
popf
pop
inc
cltd
cmp
into
jae
dec
push
leave
ds
mov
ss
ss
lods
in
ss
fsubrl
ss
cmpsl
mov
dec
or
je
in
mov
outsl
cmp
mov
pop
fdiv
jbe
movsl
push
inc
mov
je
jbe
lods
add
faddl
mov
inc
dec
mov
scas
push
repnz
mov
sar
adc
jae
push
icebp
shlb
xorb
inc
hlt
jbe
cmp
test
cmc
jmp
iret
cmp
add
cmc
mov
and
dec
cmp
cltd
aad
add
stc
lahf
xor
sbb
je
xor
out
bound
popf
cmc
xchg
xor
fmuls
mov
je
inc
inc
mov
jne
sti
lods
or
mov
aas
stc
repz
sbb
fs
dec
mull
and
inc
mov
add
stc
cld
mov
test
into
add
clc
sub
clc
add
xlat
clc
sbb
int
or
out
in
das
lods
pop
add
dec
mov
cwtl
sbb
cmp
inc
cmp
jl
cmp
js
incl
stc
xchg
stos
cmc
stc
and
das
test
movsb
ffreep
popa
addr16
js
loopne
mov
push
add
sub
mov
xor
mov
insb
push
mov
mov
shll
test
addr16
push
or
dec
les
shl
test
std
xor
aaa
fisubrs
cltd
dec
adc
sub
aaa
or
shl
pop
fs
add
and
test
cltd
xchg
fldcw
inc
mov
fidivl
test
jge
dec
ja
fimuls
xor
into
es
or
push
mov
lods
int
push
faddl
ror
or
out
cmpsl
mov
jmp
ljmp
cmp
cwtl
jecxz
ljmp
js
inc
mov
sub
pop
lods
cmpsb
sub
fsub
inc
mov
dec
cwtl
dec
dec
cmc
and
in
leave
clc
cltd
fbld
leave
out
and
add
push
cwtl
push
sbb
mov
inc
dec
add
in
inc
je
test
int3
in
dec
mov
test
inc
lods
cmc
jmp
and
aas
stc
gs
cmp
adc
sbb
adc
sti
add
gs
imul
push
cmpsl
push
into
add
sub
sub
fsts
sub
sub
add
test
popa
stos
fbstp
imul
mov
add
stc
and
dec
iret
fwait
test
into
add
lods
jmp
jmp
mov
xor
fsubp
arpl
sbb
hlt
sahf
addl
dec
outsl
or
out
sahf
jno
pop
lods
fucomp
push
fcoml
repnz
mov
out
cmpsl
mov
sti
or
adc
cmp
push
sub
fs
pop
jp
mov
fdivr
insb
or
mov
aas
divl
arpl
push
pushf
mov
or
lods
sub
fsubl
stos
aas
mov
test
sub
stos
fimuls
dec
repz
stos
or
loopne
fnstcw
sub
add
call
xchg
stc
push
sbb
mov
cli
jmp
test
mov
mov
cmp
inc
dec
das
lret
clc
xor
mov
mov
jne
je
imul
xor
fsubl
into
and
out
cmpsl
mov
mov
imul
cmp
pop
fsubrl
scas
add
jp
or
je
scas
pop
lods
inc
scas
push
fdivrl
out
out
call
test
dec
xchg
stc
nop
dec
xchg
and
in
inc
cs
test
mov
sub
sbb
cmpsl
mov
xchg
stc
push
cs
shll
addr16
mov
mov
out
push
outsb
mov
adc
sub
je
test
lods
imul
adcl
lds
fcoml
dec
lods
test
fdivr
in
or
mov
aas
int
in
lods
outsl
in
int
jle
fmull
adc
and
pop
mov
test
mov
mov
in
jp
insb
dec
pop
mov
and
adc
inc
je
xor
mov
dec
fmull
xchg
rcrb
mov
je
insl
inc
mov
insl
lods
mov
mov
sub
fcompl
out
adc
cmpsl
mov
mov
sbb
push
test
adc
cmpsl
lock
or
sbbb
pop
dec
lock
inc
mov
hlt
outsl
inc
nopl
add
xor
mov
or
inc
xor
movl
fbld
add
mov
dec
push
or
mov
dec
jo
push
sub
jmp
mov
arpl
sbbb
je
mov
or
loopne
aaa
addb
fimuls
loop
enter
aam
push
mov
jle
xor
lods
leave
hlt
out
gs
movsb
ss
adc
mov
mov
std
mov
lret
adc
leave
popa
xchg
insl
ljmp
int3
and
fsubrp
fisubrl
lods
xlat
jnp
adc
mov
out
dec
shr
lods
das
mov
dec
mov
sub
lock
jl
mov
xchg
cmp
xchg
cmpsl
dec
lods
jg
movsb
and
inc
pop
add
enter
pop
xlat
das
cmp
inc
mov
push
mov
mov
push
mov
shlb
stos
int3
stc
and
lret
jo
outsl
jp
rep
add
mov
push
jae
sbb
sbb
mov
leave
xchg
out
pop
push
jae
fidivl
ret
xchg
xor
push
or
dec
iret
je
rolb
fstps
pop
mov
sar
shll
sbb
inc
pop
nop
subl
inc
cmpsb
ret
jge
sub
fwait
adc
mov
mov
or
stc
cmp
loop
out
sub
data16
cmp
push
rorl
fsts
test
dec
roll
sahf
lret
cltd
fldenv
iret
bound
ror
fmull
dec
loop
mov
xor
adc
cmp
and
mov
cmpsl
mov
pop
cltd
stc
cwtl
mov
addr16
fcmove
mov
cmpb
mov
nop
cmp
add
push
adc
sbb
sub
pushf
sbbb
ret
and
pop
cmp
jbe
mov
jle
stc
mov
bound
and
mov
mov
mov
sbb
movsb
aas
mov
dec
addr16
push
out
inc
adc
adcl
mov
jl
test
mov
inc
fcompl
mov
inc
stc
and
rolb
int3
orl
leave
push
push
decl
mov
sub
ljmp
ficompl
adcb
cmp
movsb
aas
test
loope
cmc
call
std
mov
pop
or
int
cmp
add
inc
pop
inc
xor
inc
pop
jle
lods
or
ds
enter
clc
xor
dec
or
mov
das
in
fldenv
cmp
pop
cmp
fyl2xp1
pop
or
repnz
cltd
push
jb
inc
cs
sti
dec
mov
into
cmp
int3
jmp
popf
sti
iret
sub
adc
repz
push
mov
movd
fnstcw
push
in
mov
xor
stos
mov
ret
loop
add
mov
aad
popa
daa
insl
fcomps
movsb
cmp
push
rcl
dec
xchg
mov
ret
inc
pusha
js
jp
xchg
jecxz
ficompl
add
cmc
iret
jecxz
movsb
dec
cmp
sarb
mov
stos
add
jbe
mov
fsqrt
push
arpl
or
adc
divb
movsb
je
pop
imul
mov
in
xor
inc
sbb
stc
aad
xchg
push
xchg
fildll
fisubl
add
xor
xchg
and
mov
or
mov
fs
add
ret
jg
ret
pop
outsl
fld
mov
pop
mov
cmp
sbb
jno
loop
sub
mov
xchg
mov
mov
mov
mov
ret
mov
mov
or
and
inc
test
jecxz
push
out
pop
jecxz
xor
inc
dec
xorb
inc
fcoml
ret
int
jns
adc
btr
ljmp
std
xchg
addl
fldt
and
fsubrs
adc
push
push
test
and
daa
push
inc
add
hlt
arpl
dec
sbb
lahf
mov
out
dec
ja
jmp
in
or
pop
scas
sbb
out
mov
mov
xchg
int3
pop
shr
pop
inc
dec
mov
jmp
mov
or
cmpsl
popf
mov
inc
mov
insb
arpl
cmp
dec
mov
je
cmpsb
push
sub
dec
mov
push
gs
xor
mov
xor
popl
cli
adc
stc
test
xchg
sarb
cltd
dec
push
dec
adc
test
leave
or
or
das
adc
push
popw
stc
inc
inc
dec
in
daa
sub
cmp
cwtl
lea
xor
inc
mov
leave
ljmp
out
addr16
test
cli
roll
mov
sbb
jge
add
shrl
idivb
pop
mov
xor
push
sbb
xchg
out
inc
sub
xchg
xchg
mov
fdivrl
pop
or
and
inc
pop
sbb
mov
shrl
or
inc
mov
in
mov
gs
sbb
aas
pop
sbb
and
push
mov
lea
push
pop
sbb
pop
push
add
jnp
fmull
mov
fistps
xor
xor
xor
pop
loop
fwait
ds
fidivrs
leave
dec
icebp
stc
jno
push
sarl
cmp
fbld
dec
rcll
sbb
loopne
mov
sbb
push
push
movl
lods
out
sti
mov
int3
aam
cmp
loop
jmp
sti
sbbb
popf
cmpsb
stos
fistpl
sti
arpl
enter
jge
int3
inc
mov
dec
loope
repnz
iret
jno
out
push
xchg
repnz
adcb
sarb
sbb
jb
push
lds
fnstsw
addr16
fs
cmc
xchg
jns
mov
test
mov
ficomps
dec
enter
xor
cmp
fildl
sbb
int
loopne
cld
fcompl
push
stos
inc
or
mov
push
push
dec
aaa
sti
arpl
add
inc
mov
cmpsb
sbb
push
mov
cltd
cmpsl
xor
fcmove
sbb
or
sub
int3
or
or
cmpsl
mov
push
pop
dec
inc
test
aam
pusha
test
dec
flds
inc
or
test
sbb
mov
faddl
movsl
leave
rorl
add
mov
popf
js
pop
mov
in
pop
repnz
arpl
xchg
jmp
popf
cmpsb
mov
rorb
sbb
xchg
in
lret
test
loope
and
ret
test
jle
dec
or
into
push
lods
add
xchg
push
cmp
mov
sahf
cmc
mov
push
scas
out
jle
loope
mov
mov
mov
out
aad
xchg
rolb
divb
popf
pop
pushf
insb
pop
daa
lods
adc
ss
and
cmp
gs
adc
jo
call
popa
sub
xor
sub
std
aam
mov
cmp
sar
sbb
xchg
push
mov
mov
lret
mov
lods
cltd
into
pushf
or
fcompl
sub
adc
sub
test
ret
mov
test
aas
push
sub
xor
add
push
fstps
popf
fstps
push
and
ror
mov
test
idivb
repnz
push
xor
sbb
lods
bound
imul
out
cmpsl
cltd
fprem
pop
sahf
out
cmc
std
jp
fldenv
ja
cmpsb
jo
arpl
sbb
ja
das
or
call
or
or
into
cwtl
and
out
sub
inc
test
or
test
push
pusha
out
cmp
dec
movsb
sbb
out
dec
mov
je
push
jb
daa
out
cmpsl
sti
add
sbb
sbb
aad
xchg
push
add
daa
imull
int3
fsubrs
loop
int3
mov
push
xor
lods
mov
mov
jo
out
fldcw
pop
cli
fldenv
outsb
adc
add
sahf
xor
test
mov
push
lods
jae
into
testl
sbb
std
cmp
mov
dec
sti
lods
fwait
cmp
mov
xor
xchg
pop
xchg
or
test
test
fidivrl
add
inc
fistpll
fs
xor
or
aas
jp
jecxz
sbb
pop
add
mov
sbb
mov
mov
jp
ljmp
mov
movsb
mov
fisttps
addr16
test
pop
ret
rorb
or
add
stc
pop
push
fstp
pop
cltd
jecxz
mov
push
test
roll
mov
sub
pop
or
mov
ficomps
mov
pop
adcl
lcall
push
lods
rcll
dec
stc
and
je
stc
jp
add
je
add
pop
loop
fwait
iret
sbbb
cmp
call
cmp
leave
add
and
int3
adc
cmp
subb
jne
mov
mov
xorl
pusha
jns
scas
mov
or
inc
stos
xchg
lods
enter
jle
andb
push
fsubrl
pop
lods
cmp
mov
mov
jo
lods
mov
pop
out
test
fistl
cmp
mov
pop
and
scas
jg
lods
stos
cld
add
sbb
dec
cld
cmpsl
stos
mov
or
inc
mov
xor
or
ret
faddl
and
fnstenv
test
push
fdivl
mov
fsubrl
cmp
mov
je
pop
lods
aaa
sbb
mov
mov
cmpb
sub
idivb
aas
add
or
loope
in
lret
outsl
popa
jnp
push
sbb
enter
sub
sbb
stc
mov
push
inc
mov
pop
cmpb
es
popf
push
lods
jnp
pop
data16
lcall
or
lods
subps
lods
adc
pop
inc
lods
mov
ja
pop
mov
sahf
daa
loop
icebp
dec
mov
pushf
outsb
cld
pop
lock
imull
iret
push
or
dec
xor
jbe
scas
jnp
cmpsb
and
push
xor
add
fildl
std
lods
xor
loop
dec
mov
fcoml
ds
test
push
or
stos
sbb
mov
fcmovb
and
ds
icebp
mov
sbb
fstps
mov
mov
push
pop
cltd
fldcw
ficoms
mov
xor
test
add
aad
pop
lods
inc
push
mov
lods
mov
sahf
fdivrs
outsb
mov
add
push
fdivl
push
mov
dec
mov
mov
addl
int
and
cltd
push
push
fwait
or
dec
fwait
icebp
lods
pop
xchg
cmp
inc
dec
adc
je
mov
lods
pop
add
jo
inc
sub
out
cmpsl
sti
add
fisttpll
sbb
ret
xlat
outsb
outsl
fstp
decb
mov
dec
negb
add
pop
loop
out
sbbb
bound
push
push
cmp
and
or
xor
jle
fcmovb
cmp
out
pop
dec
mov
loopne
mov
vaddsd
in
mov
xchg
out
cmpsl
sti
add
fnsave
sbb
negl
cmp
std
mov
or
dec
mov
test
mov
dec
ds
fiadds
and
lods
xor
std
ljmp
mov
mov
lods
leave
daa
test
std
sub
cmp
cs
leave
or
daa
test
sbb
scas
fisttpl
lods
pusha
sbb
lods
in
mov
in
mov
sub
mov
sub
lods
sub
cmp
jmp
xor
sti
xor
lods
mov
testl
mov
test
jo
out
adc
test
jge
flds
push
es
push
lock
jl
xchg
inc
cmpb
sub
jmp
fcoml
inc
add
dec
or
popf
mov
aaa
push
into
test
shrb
gs
sbb
arpl
dec
sahf
add
or
or
rorb
test
cltd
push
das
loopne
or
lods
int
fstpl
jp
add
fiaddl
in
mov
loop
enter
enter
fnstsw
lods
mov
lods
out
and
jb
inc
cmp
fldenv
and
in
inc
aad
and
xor
into
and
movl
in
in
lods
ss
sbb
scas
mov
cmp
push
push
rcrl
pop
push
mov
das
pusha
sbb
push
lods
push
inc
into
fmuls
fldl
cmpb
pusha
adc
fnstenv
xor
mov
mov
lret
stc
xor
xor
mov
jle
push
lods
cli
xchg
cmp
inc
mov
mov
mov
dec
mov
mov
cs
add
aas
cs
mov
mov
rcr
cmpsl
aas
daa
test
jmp
inc
mov
sub
inc
test
cltd
push
pushf
pop
or
dec
pop
xor
push
sub
movb
fnstcw
pop
pop
add
pop
mov
stc
dec
jg
lods
pop
fisubs
lods
roll
pop
dec
pop
lods
pop
jg
shrd
jg
add
test
loop
dec
or
loope
inc
test
mov
divl
add
lahf
pop
inc
xchg
or
sarb
test
js
cmp
jne
je
iret
xchg
sub
enter
loop
popf
repnz
int3
ret
subb
mov
frstor
adc
jl
aaa
xor
sbb
push
jne
inc
xlat
int3
adc
jl
cmpsb
sahf
fiaddl
int
adc
icebp
inc
test
jbe
xor
jb
jl
sub
sbb
scas
push
or
lods
xlat
push
jnp
pop
test
popf
jb
xchg
aad
push
out
ficoms
gs
int
cmp
and
mov
inc
mov
ficoms
andb
xlat
pop
xchg
popa
mov
add
xchg
js
inc
and
or
mov
icebp
mov
int
push
icebp
inc
and
jo
icebp
jp
aad
mov
push
pop
jo
dec
enter
repnz
push
lods
ljmp
je
out
cltd
xor
xor
fs
scas
xor
dec
lahf
adc
or
sti
add
inc
sbb
jb
aad
xor
in
jp
push
mov
push
push
xchg
jmp
repz
lcall
push
cmp
inc
cli
mov
test
xchg
push
inc
jno
jmp
repnz
add
imul
jnp
push
add
xchg
mov
xchg
and
xchg
inc
mov
push
gs
aad
pop
loop
cmp
fisubs
cmc
sub
icebp
dec
mov
sub
xchg
pop
mov
mov
sbb
sbb
movb
aam
jo
hlt
adc
xlat
xchg
adc
leave
lock
hlt
mov
inc
lock
xor
nop
cltd
mov
jecxz
test
dec
incb
mov
lahf
xor
add
xchg
mov
adc
inc
lods
jae
icebp
cmp
xor
pop
adc
mov
aaa
adc
je
sub
xlat
cmpsb
dec
cs
mov
pop
jp
rcll
je
add
je
add
push
mov
addb
fucom
test
or
aas
push
adc
mov
fisubs
ds
repz
rolb
ret
mov
aad
mov
in
stc
dec
mov
add
sar
push
add
shll
repz
add
cmp
mov
xchg
mov
test
stc
xor
roll
psllq
mov
push
mov
dec
ret
dec
fstpl
out
mov
xor
jecxz
imul
push
sbb
gs
fadds
adc
sarl
popf
inc
push
int3
mov
jne
addb
fstl
add
push
add
push
or
frstor
lds
ret
add
fildll
mov
shr
inc
push
push
test
sarl
sub
xchg
or
mov
arpl
testb
out
cmpsl
sti
add
fucomp
cld
sbb
insl
aad
mul
add
push
test
sahf
mov
sti
add
loop
lds
jp
dec
rcrl
dec
push
je
push
push
or
or
mov
loopne
jb
push
push
cmp
orb
pop
movl
mov
push
xor
inc
fsub
stc
sub
xchg
stc
mov
fldcw
push
sbb
scas
dec
or
lods
int
ret
jbe
scas
rorl
mov
repz
lods
icebp
xchg
or
mov
pshufw
push
add
xchg
xchg
lods
or
test
fists
in
mov
dec
xchg
je
push
lds
cmc
out
push
jg
or
fdiv
aad
inc
sbb
sbbb
pop
je
aad
fsqrt
mov
into
test
xor
jns
gs
gs
les
cmpsl
aaa
repnz
cmp
imull
or
and
dec
outsb
pop
xor
lods
cltd
inc
add
push
sbb
dec
cs
or
mov
fmulp
jp
cmp
cmp
mov
stos
pop
mov
cmp
mov
sub
pop
out
and
push
adc
movsb
lock
lods
mov
fdivrp
sbb
and
jbe
cwtl
enter
rorl
mov
addl
pop
stc
xor
insb
mov
fwait
ja
sub
mov
fstpt
fdivr
jge
jle
push
mov
in
xor
cmp
data16
and
push
jl
mov
inc
push
cltd
mov
dec
inc
int3
lea
mov
cli
in
fs
dec
sti
adc
std
jbe
xor
sbb
pop
mov
mov
push
push
gs
jecxz
jb
sub
enter
in
jecxz
fxch
jo
pop
xchg
push
add
imul
in
ret
mov
push
inc
int
mov
popf
arpl
push
flds
and
scas
cmp
iret
or
xor
imul
fsubl
push
int3
mov
mov
mov
bound
push
shr
and
xchg
stc
xlat
faddp
fwait
mov
movsb
sub
or
mov
pop
cwtl
fdivrs
ror
mov
pop
clc
imul
jp
and
cmp
mov
pusha
xlat
mov
dec
mov
or
cmp
jnp
fisubs
jmp
cmp
jno
or
sub
lock
lea
pop
jo
add
cmp
mov
adc
imul
mov
ds
outsl
sbb
repz
lds
push
mov
js
inc
rol
sbb
aas
xchg
in
dec
jmp
add
andl
rorl
inc
ret
movzwl
xchg
sub
pop
sbb
gs
mov
arpl
enter
nop
add
add
inc
or
xchg
arpl
lret
push
fs
rcr
adc
imul
xchg
aaa
inc
push
or
out
push
loop
rcll
add
imull
jg
in
inc
jno
ja
shlb
add
push
mov
repnz
xlat
add
sub
std
sbb
es
cmp
mov
test
push
cld
sahf
jo
mov
mov
mov
dec
xchg
mov
inc
ds
pop
cwtl
stc
int
cmp
rcll
enter
cmpsl
sbb
mov
adc
pop
inc
das
loope
mov
xlat
xor
xchg
inc
jp
mov
call
outsb
mov
push
repnz
inc
pop
cmp
dec
jecxz
xchg
sub
or
push
cmp
loope
xchg
adc
xor
jge
loopne
dec
cld
sahf
jle
in
push
cs
dec
jno
fldt
jno
mov
enter
clc
xor
leave
push
mov
push
jno
gs
inc
jns
dec
data16
dec
mov
mov
test
out
lods
cmpsb
addr16
mov
mov
aas
pop
in
and
test
cmp
loop
movb
jo
sub
mov
fdivl
testl
into
jo
js
aam
pop
daa
mov
bound
fcompl
push
add
push
fwait
xor
add
jmp
pop
daa
mov
fdivrl
cltd
pop
daa
popf
icebp
dec
jmp
daa
pop
mov
stos
mov
aas
mov
or
popf
jecxz
lea
cmp
sub
fnstenv
orl
stc
ret
mov
cs
sbb
int3
nop
lcall
dec
mov
jp
rcll
xor
pop
mov
push
stc
xlat
ficoml
cwtl
jne
mov
adc
cltd
lods
or
or
lret
pop
pop
mov
mov
mov
jecxz
lods
fdivrs
test
lret
jle
ficomps
sbb
pop
insb
imul
cld
xorb
pop
pop
les
cli
sub
ljmp
mov
jp
mov
push
cmp
xchg
test
or
cmpsl
or
nop
leave
cmp
pushw
mov
roll
mov
adc
lods
int3
mov
mov
or
cs
jge
gs
xchg
pop
add
inc
in
mov
mov
dec
aas
out
add
ljmp
pop
rorb
mov
sub
cli
lds
inc
mov
dec
bound
mov
scas
into
fdivr
push
dec
lods
mov
push
and
sti
jne
test
ret
movb
dec
es
mov
mov
pop
and
sub
mov
sub
mov
aas
cmp
mov
lds
movsb
or
test
jl
and
scas
mov
xchg
dec
sub
mov
xor
mov
mov
adc
xchg
pop
cld
out
cmp
mov
ds
mov
cmp
stc
dec
mov
scas
ds
add
sbb
repnz
scas
enter
leave
hlt
push
xchg
mov
push
sbb
test
xchg
dec
ds
leave
cmp
mov
ds
es
cmp
stc
enter
and
add
sti
mull
push
clc
mov
cmpsl
dec
sbbb
or
jae
cmp
mov
pop
test
xor
jno
test
sub
aas
into
or
fld
pop
mov
repz
js
fld
sahf
fldl
add
xor
dec
or
clc
dec
ret
jg
cltd
pusha
jmp
sub
sbb
push
outsb
mov
mov
fistl
js
add
jno
push
vmaxpd
dec
out
rolb
aas
scas
sub
xchg
enter
andb
push
fcoml
test
add
popf
add
pop
std
mov
mov
jg
xor
fdivl
jb
push
mov
pop
xlat
push
aad
test
aam
fs
aas
mov
lahf
push
push
aas
les
lds
xchg
std
ret
pop
test
mov
jcxz
scas
xor
faddl
mov
xchg
in
mov
xor
mov
add
push
mov
mov
jl
add
cmp
ror
lods
or
mov
arpl
std
sbb
mov
add
in
in
add
inc
cmp
xlat
inc
lret
mov
dec
inc
or
test
out
lods
or
add
out
mov
mov
dec
sub
xchg
mov
stos
out
and
mov
or
jnp
adc
or
pop
lock
adc
mov
ffreep
or
pop
test
aaa
cmpsl
pop
scas
rcr
test
loope
ret
pop
sub
mov
insb
sahf
add
addr16
in
dec
fcompl
outsl
insb
shll
push
popa
setg
xor
or
cs
cmpsb
cmc
imul
repnz
xchg
add
das
jecxz
pop
push
jle
pop
ret
cmp
mov
es
mov
subb
inc
stc
mov
adc
add
aam
push
push
rcrl
cmp
rcrb
sbb
adc
in
insb
out
arpl
lock
mov
iret
sbb
inc
pop
lret
je
icebp
inc
push
lret
xor
push
mov
add
popl
pop
cmpsb
mov
das
nop
adc
xorl
mov
inc
lods
cmp
iret
lds
mov
jns
add
int
jno
or
mov
and
enter
xchg
cli
inc
sti
adc
hlt
dec
loope
inc
mov
inc
mov
mov
jle
push
inc
xchg
lea
inc
aas
int
enter
cwtl
dec
daa
jmp
shrb
subb
inc
mov
mov
dec
daa
xor
lods
cli
icebp
lds
lods
mov
mov
add
dec
sbb
push
fistl
cltd
pop
arpl
xor
sub
xchg
andl
pop
rolb
dec
cmp
fnsave
ss
mov
or
ds
stc
test
fadd
jl
inc
cmp
inc
aam
push
mov
dec
adc
cmp
mov
pop
dec
sti
stc
xchg
cmpb
lods
mov
mov
xor
jecxz
push
vfrczss
push
stos
pop
mov
rcr
lods
dec
fdivl
or
jnp
mov
lods
aad
adc
repnz
test
test
outsl
push
imul
jb
sub
test
lods
or
and
out
or
xorb
jle
or
xorl
add
into
mov
mov
push
dec
fnstcw
mov
xchg
int3
flds
out
lods
mov
lock
or
fdivrl
rorl
cmp
hlt
mov
xor
stos
pop
ja
sbb
cmp
test
call
cmpsb
call
mov
addr16
stos
dec
mov
popf
sub
push
loopne
add
dec
push
call
pushf
push
loope
sahf
or
sahf
mov
sarl
paddusb
test
je
popf
mov
rcrb
add
dec
fldl
daa
dec
mov
mov
mov
pop
mov
int
in
mov
cli
mov
pop
dec
out
lods
sbb
testb
dec
outsb
mov
enter
mov
or
imul
scas
mov
dec
nop
push
sub
sbbl
mov
jns
dec
dec
add
push
aaa
int
push
int
sbb
pop
lret
sbb
dec
lds
subl
icebp
fidivrs
ss
lds
enter
cwtl
sbb
adc
mov
xchg
mov
mov
test
sub
ret
popa
push
mov
fistps
jg
jp
jl
repnz
push
fsubr
insl
mov
and
inc
add
outsl
dec
sti
lea
add
xor
push
jl
mov
add
fdivr
jp
or
push
xor
shlb
fimull
cmp
inc
ja
sub
inc
repnz
add
movsl
dec
jo
push
inc
jecxz
icebp
mov
push
cwtl
fiaddl
or
sub
pop
adc
xor
dec
enter
jl
pop
insl
imul
cli
xor
pop
sub
insl
imul
inc
dec
test
loop
nop
call
imul
daa
inc
divl
fisttps
das
mov
or
adc
orl
dec
mov
mov
hlt
int3
mov
insl
out
xor
adc
push
fcom
mov
insb
xchg
jb
sub
xchg
dec
stc
pop
test
mov
pop
xor
inc
mov
outsb
shrb
in
mov
add
divl
fnstenv
xchg
pop
rol
xor
in
xchg
enter
ljmp
pop
stc
nop
addr16
push
cwtl
or
lahf
xor
inc
push
lcall
movsl
pop
movsl
dec
out
js
clc
sarb
cld
xor
js
dec
scas
call
das
popa
dec
lret
adc
sbb
mov
cli
sub
jmp
mov
xor
add
lret
int
ret
ror
cmp
inc
mov
dec
adc
test
push
xchg
movsl
mov
jns
in
sbb
mov
divl
cmp
sub
ret
nop
fcom
js
cltd
dec
repz
ds
nop
pop
cmc
repnz
push
bound
test
jge
push
out
jmp
out
pop
push
subl
jp
xor
cli
fldcw
ret
mov
aam
rcl
cmpl
movl
aam
iret
mov
xchg
sbb
xor
sti
mov
bswap
adc
movsb
mov
jge
sub
cwtl
shll
xchg
or
in
push
add
fnstcw
cmp
mov
in
xlat
dec
fbstp
pop
cmovle
mov
fs
mov
and
push
jne
ds
pop
pop
dec
sub
adc
dec
mov
shrl
test
sbb
sarb
mov
imul
jns
out
jb
and
push
mov
push
cmp
ret
jl
jg
add
cmc
xor
movsb
clts
rcrb
lea
orb
dec
jp
xchg
int3
push
mov
jmp
push
mov
pop
out
adc
mov
gs
movsb
int3
mov
jmp
push
add
lret
out
js
enter
pop
test
adc
dec
mov
mov
psubusw
sbb
std
add
and
mov
mov
mov
adc
cs
iret
dec
dec
lret
pushf
pop
or
or
dec
mov
lret
pop
xchg
cltd
leave
enter
lods
shr
aaa
dec
fdivrl
jle
xchg
ficoms
ss
or
jae
stc
sbb
pop
xor
int3
mov
jecxz
jle
xchg
rorl
sbb
sbb
into
xor
cwtl
enter
cmp
sbb
lods
decb
xorb
ja
mov
shlb
cmp
loopne
cltd
pop
add
push
mov
call
sahf
add
mov
cmp
sbb
dec
cmp
xor
out
jle
adc
or
add
push
into
mov
mov
je
inc
sub
pop
mov
and
in
adc
mov
js
xchg
aaa
pop
add
lcall
mov
push
add
or
xchg
addl
test
adc
mov
mov
andl
push
and
fcompl
out
adcb
mov
aaa
jno
and
cmp
out
adc
mov
les
mov
movl
out
enter
mov
rol
loopne
push
or
sahf
push
push
xchg
mov
les
lret
add
cmp
ss
fnstcw
xor
pushf
add
mov
lods
or
xor
or
or
mov
and
or
inc
xchg
add
dec
xchg
add
and
xchg
jbe
jb
fcmovbe
iret
add
arpl
mov
mov
jnp
mov
xor
ficompl
lods
dec
sub
fwait
adc
rorb
arpl
rolb
test
add
add
add
int3
xchg
dec
xor
aad
add
test
inc
test
xchg
pop
cmp
xor
dec
dec
lock
je
lods
mov
inc
add
fcomip
ret
mov
and
add
dec
fwait
in
test
mov
jp
inc
push
or
shlb
loop
or
mov
mov
pop
mov
add
arpl
jo
jb
cwtl
addr16
gs
adc
jge
sub
xor
addr16
test
jg
dec
daa
jle
rolb
loope
mov
mov
addr16
out
dec
mov
xchg
cmp
mov
aas
inc
in
icebp
in
jmp
dec
dec
ret
mov
jnp
les
push
arpl
dec
fiaddl
push
outsl
jl
mov
mov
push
mov
pop
rol
push
insl
dec
mov
and
lock
push
mov
std
xchg
inc
push
arpl
enter
addr16
dec
sub
dec
dec
sbb
lcall
jmp
adcl
js
out
insb
jge
imul
int
out
push
je
dec
push
dec
xchg
inc
mov
jecxz
xchg
es
xchg
push
mov
mov
test
ret
pop
push
lds
xor
mov
or
jge
aaa
adc
fbld
add
adc
mov
mov
inc
inc
test
adc
jle
or
shlb
outsl
out
lods
inc
sbb
cmc
gs
in
aam
inc
mov
popa
stos
clc
mov
in
add
add
dec
daa
sti
je
add
dec
xor
push
xchg
lahf
mov
aaa
mov
test
std
inc
out
lcall
cmp
call
pop
push
add
inc
xchg
or
lcall
cmp
popa
shr
jg
stc
mov
inc
xor
lret
adc
add
push
sbb
cwtl
lret
xchg
gs
xchg
or
daa
in
jne
lock
jae
mov
sbb
sti
mov
add
mov
out
inc
cmp
mov
mov
stos
cmpsl
inc
ljmp
cmp
mov
jae
pop
aas
inc
pop
mov
mov
test
push
add
add
lds
out
imul
call
int3
or
fdivrl
sub
cmp
stc
cmpsl
jmp
divb
cmp
int3
push
arpl
int3
aaa
imul
leave
into
or
cmpsb
loop
push
jg
or
lods
js
ret
jg
push
sbbl
jmp
in
sub
cltd
adc
stc
int3
les
ret
in
dec
pop
jo,pt
jo
jb
adc
leave
dec
mov
jb,pt
adc
jb
inc
ret
ret
mov
cmpb
pop
mov
pop
int
rorb
loop
inc
mov
icebp
sub
sbb
mov
dec
iret
sub
mov
adc
jmp
or
out
cli
sti
pushf
into
mov
das
pusha
push
add
mov
add
mov
orl
pop
and
sbbb
aam
mov
mov
mov
or
out
inc
mov
inc
js
outsl
jbe
dec
dec
in
dec
jmp
adc
rcr
test
shlb
jl
mov
or
jo
sub
dec
mov
or
mov
cmpsl
jp
iret
test
enter
insl
push
dec
xchg
lcall
ljmp
mov
inc
mov
idivb
lret
out
sub
scas
dec
mov
mov
pop
int3
rorb
or
loopne
mov
fnstcw
stc
pop
or
jmp
push
jo
orb
loop
in
ds
pusha
xchg
push
mov
hlt
fadds
mov
adc
mov
mov
dec
inc
mov
lea
pop
adc
dec
inc
mov
cmp
lods
mov
repz
das
dec
adc
in
clc
xor
mov
pusha
jg
test
fnstcw
sbb
jmp
or
leave
mov
incb
aad
das
dec
inc
out
addb
mov
xor
pop
sbb
cmp
dec
fadds
push
mov
cmc
xor
test
dec
sub
pop
xchg
rcpps
mov
lds
jecxz
insl
iret
bound
iret
push
in
mul
xor
sub
add
add
cltd
pop
notl
ds
dec
shll
or
lods
les
int
or
fdivrl
in
fdivrl
jg
xchg
pop
mov
dec
or
push
mov
fistl
pop
loop
sahf
pop
cmp
cmp
out
inc
es
lods
scas
outsl
or
roll
sbb
mov
mov
outsl
mov
mov
mulb
aas
les
dec
inc
cmp
push
fidivl
hlt
push
int
insb
mov
mov
sbb
jne
cmp
movsb
lods
mov
cmp
repz
lock
push
aad
adcl
push
mov
loopne
shlb
dec
pop
pop
cmpsl
addr16
sti
dec
inc
insl
aas
xor
jo
sahf
test
pop
pop
xor
notl
pushf
fwait
stos
ret
mov
je
repnz
fldenv
lret
inc
sbbb
xchg
iret
and
cmp
jb
cltd
pmaddwd
mov
outsb
inc
iret
add
dec
and
andl
pop
movl
jp
mov
cmc
sub
dec
push
fnstcw
push
test
cmp
test
in
gs
ljmp
mov
movsl
test
pop
insb
cmpsl
lahf
test
outsl
dec
jp
fiaddl
adc
in
out
js
mov
push
mov
test
fidivrs
xchg
bnd
inc
rcrl
mov
mov
add
cmp
dec
or
mov
fidivl
xchg
jl
cmp
jl
mov
or
pop
dec
dec
mov
aad
jnp
int3
popf
ret
sbb
mov
rorl
out
imul
insb
cltd
push
and
push
sarl
fisubs
xchg
outsb
loop
inc
nop
jo
stc
cmp
inc
cmc
or
push
ds
jae
mov
adc
mov
lcall
in
mov
test
fstps
data16
rolb
addl
inc
cmp
xor
xor
push
inc
movsb
pmaddwd
xchg
es
movsl
cmp
xchg
push
sti
cmp
push
jmp
sbb
inc
mov
leave
jle
pushf
je
fbstp
loopne
bnd
lea
push
test
test
dec
faddl
push
imul
out
xor
test
jno
ror
ret
mov
jmp
dec
sub
add
cmpb
mov
lcall
jge
in
bound
mov
jo
jns
push
popa
lods
mov
ljmp
cmp
or
mov
sbb
cld
ret
jns
push
xchg
test
mov
cmc
fsubl
test
adc
mov
or
or
test
jne
loop
add
loopne
push
jmp
cmpl
test
add
xchg
in
or
icebp
test
pop
test
or
les
push
sbb
adc
cmpsb
or
stc
jmp
cmpsl
pop
inc
dec
enter
repnz
mov
inc
test
fsubrl
aam
iret
fs
lea
lds
xchg
mov
mov
daa
leave
mov
mov
xchg
jl
ljmp
or
mov
jb
outsb
clc
dec
out
sub
je
gs
cmp
aam
mov
xchg
mov
aad
cmp
mov
mov
dec
and
pop
std
cmpsl
cmp
add
add
jp,pt
mov
cmp
cld
jne
cmp
pop
or
pop
xchg
arpl
add
daa
daa
adc
push
mov
adc
mov
enter
out
xor
movsl
dec
cmp
mov
cld
dec
cli
adc
sub
xchg
xor
adc
pop
sbb
mov
inc
lods
adc
movsl
fdivr
lds
mov
cli
ret
mov
lods
in
ret
in
popa
mov
test
enter
jl
loopne
cmp
stc
cmp
int
or
jecxz
hlt
call
lods
inc
jle
add
push
cmp
jge
inc
pop
sbb
mov
bound
loopne
repnz
dec
sub
enter
stos
sbb
sti
and
or
stc
push
cmpsl
lods
fiaddl
enter
jl
lahf
gs
xlat
mov
pop
push
ds
sbb
lods
push
test
pop
sti
jl
xchg
adc
jne
xor
test
sbb
cs
std
mov
push
aam
add
leave
mov
test
xbegin
loope
rcrl
test
adc
aad
xor
sub
iret
lock
jns
js
mov
psrad
ja
sub
rorl
mov
cmp
out
clc
jmp
jne
push
mov
mov
inc
mov
push
or
std
xchg
sub
mov
lea
jecxz
mov
sub
xor
cwtl
dec
int3
rcl
jnp
daa
mov
xchg
lods
out
fidivs
dec
test
cltd
dec
aam
test
cwtl
jnp
sbbb
test
addr16
cli
ds
std
mov
mov
jns
adc
mov
mov
loope
ss
call
loop
mov
adc
push
sbb
mov
lcall
push
rcl
arpl
cltd
push
cld
mov
les
sbb
jne
dec
jl
rcrb
cmp
aaa
add
out
hlt
in
aam
arpl
cmp
push
jmp
cmp
push
mov
xchg
xchg
aad
xchg
jle
adc
mov
or
jne
push
jle
mov
mov
xchg
cwtl
daa
adc
out
fdivl
push
aaa
enter
jmp
in
jg
sub
jl,pt
xchg
icebp
das
add
mov
int3
push
cli
cmp
xor
mov
dec
adc
lret
inc
stc
fsincos
lea
es
call
jbe
pop
pop
mov
and
xorl
adcl
mov
test
adcl
lcall
mov
sbb
mov
js
mov
jle
jl
andl
mov
fsts
ljmp
xchg
in
dec
sub
in
push
cmpl
orb
orl
sbb
jns
fwait
es
cs
loopne
ds
fdivl
mov
cs
test
aam
shl
ljmp
sub
pop
inc
stc
sbb
les
or
sbb
dec
mov
fwait
out
cmp
jo
push
call
cmp
adc
std
or
and
shlb
testl
or
iret
inc
cli
faddl
sbb
dec
outsb
lods
inc
add
push
fadd
add
jl
push
inc
lret
mov
jne
cmc
mov
sub
rcr
imul
mov
sbb
mov
sbb
mov
pop
mov
sbb
fwait
loope
jl
daa
lds
cli
arpl
sti
sbbl
pop
mov
in
add
inc
stc
daa
add
cwtl
fs
pop
mov
insb
pusha
daa
mov
loop,pt
jnp
scas
add
mov
cmp
scas
jp
movsl
sub
popf
jne
fcomps
vandnpd
scas
test
cmp
cwtl
popa
or
cmp
and
mov
xor
movsb
pop
addb
out
mov
jl
sub
mov
jl
and
mov
test
xchg
jge
xchg
je
lret
jle
sbb
or
clc
mov
repnz
das
push
push
outsl
cli
adc
adc
adc
loope
mov
stc
loopne
test
cltd
mov
and
frstor
scas
adcb
fnsave
out
push
pop
inc
or
inc
loop
push
push
fdivs
dec
mov
dec
and
movsb
aad
addr16
leave
push
cli
mov
test
stos
add
dec
pop
inc
xchg
enter
and
sbb
and
out
jcxz
hlt
psllq
insl
adc
or
mov
mov
inc
sbb
push
dec
xchg
mov
incb
push
push
sbb
and
leave
push
jl
mov
mov
mov
adc
sbb
sub
inc
jl
mov
in
fistpll
pop
clc
fbstp
jl
nop
mov
cmp
stos
loope
add
push
stos
pop
nop
orb
test
push
adc
xchg
sub
mov
int
add
xchg
je
int3
xor
test
ror
inc
or
cmpb
mov
jno
pop
inc
cld
pop
mov
out
xchg
and
jmp
mov
cmp
shrb
mov
fwait
das
enter
jl
xor
and
add
jle
inc
shlb
mov
ficomps
daa
aam
rclb
scas
mov
pop
outsb
push
notl
aam
ret
int3
sbb
mov
fnstenv
jnp
add
nop
fdivrp
mov
xchg
pop
jp
mov
fdivl
sbb
ss
adc
jo
dec
aas
frstor
icebp
cmpl
call
out
and
scas
lahf
cltd
fldenv
pop
xor
test
xchg
add
popf
inc
add
jg
cmp
loope
jg
rcrb
pop
lods
outsl
jg
fchs
xchg
sahf
inc
fisttpll
test
test
xor
inc
mov
fs
test
mov
xor
jno
add
sbbl
adcl
sahf
sbb
sbbl
inc
push
push
and
shlb
mov
inc
dec
mov
imul
repnz
mov
mov
mov
cmp
pop
jle
mov
fsubl
outsb
pop
mov
je
xor
cmp
push
test
dec
inc
pop
test
dec
push
cmp
out
xchg
loopew
mov
mov
push
add
add
xchg
fwait
test
movsl
aam
xlat
mov
sub
mov
dec
and
mov
into
mov
test
sbbb
das
xchg
fnstenv
sub
addr16
psllw
mov
arpl
sahf
in
out
mov
sub
cli
out
add
adc
pop
xchg
scas
leave
dec
cs
icebp
test
xorb
orl
xchg
dec
imul
or
fbstp
lock
aaa
sub
and
mov
mov
sahf
xchg
push
push
adcb
add
mov
pop
stos
pop
adc
sub
jl
mov
jp
stos
mov
sub
mov
lcall
icebp
cmpb
xor
ret
jecxz
and
sbb
mov
sub
dec
lock
cmpb
shl
or
gs
mov
loopne
cmpsb
sbb
les
fidivs
xor
outsb
push
and
or
fmull
or
cs
mov
inc
cmp
test
sahf
or
cmp
pop
mov
add
test
mov
test
jp
repz
jl
mov
jl
orb
xchg
pop
xchg
jb
push
xchg
xchg
mov
inc
jnp
jl
inc
in
pop
ret
das
out
lea
mov
mov
loopne
mov
adc
mov
out
iret
add
into
sarl
scas
sti
popl
add
jle
pop
sub
shrb
imul
mov
cmp
xor
cmp
cmpsb
cld
cltd
mov
dec
dec
or
xor
ror
out
cmp
nop
cmpsl
ljmp
outsl
inc
add
sbb
movups
sub
ja
movups
adc
xchg
ds
shrb
sbb
mov
mov
popf
xchg
sti
inc
ja
pop
or
das
into
or
outsl
std
daa
cmp
add
or
jge
jle
jl
divl
mov
cmp
and
into
push
or
hlt
jl
add
pop
insb
cmpsb
hlt
jl
test
out
dec
cmp
cmp
or
inc
lods
bound
jmp
aad
sbb
sbb
je
and
mov
aas
clc
inc
xchg
insb
jb
mov
and
add
je
cwtl
dec
jb
pop
xchg
fwait
ds
dec
hlt
or
scas
loop
mov
aad
addl
xor
mov
in
ror
adc
and
or
and
ret
popa
pop
push
cmpsl
xor
mov
mov
daa
lods
mov
dec
in
lock
cs
shlb
add
sarl
aam
stc
mov
insl
push
pop
lret
shll
mov
push
jge
rcll
lahf
out
push
std
mov
je,pn
xchg
shlb
out
pop
cmpsl
inc
cltd
in
dec
test
mov
mov
sub
shl
loop
adc
lcall
leave
push
adc
andl
lods
stc
ret
add
cltd
xlat
fnstcw
je
dec
mov
lods
xorl
fcoml
inc
add
cld
loope
mov
sbb
add
call
sti
outsb
inc
fimuls
lock
test
mov
nop
std
or
xchg
leave
stos
mov
frstor
stc
imul
test
and
mov
xor
dec
ds
hlt
repz
mov
movsb
enter
fisttpl
mov
ret
sbbb
mov
sti
jo
dec
push
repz
ret
fld
lods
push
ret
adc
dec
add
rcpps
pop
scas
mov
test
leave
or
xor
jne
or
aaa
mov
xor
lcall
stc
out
jns
mov
pop
fdivl
das
mov
dec
cli
movsb
por
pop
bound
lret
test
push
xor
xor
xor
or
push
jns
test
or
jo
xor
sbb
sbb
add
shll
add
stc
jecxz
hlt
test
lahf
js
mov
or
sub
daa
mov
and
movsl
int3
sbb
dec
into
hlt
adc
lods
lret
arpl
xchg
jae
lds
shrl
into
adc
addr16
mov
stc
divb
lods
das
adc
or
cltd
enter
add
xchg
jns
test
jbe
mov
mov
mov
stos
ljmp
bswap
pop
rcr
movb
xchg
imulb
adc
mov
bswap
mov
add
dec
mov
push
mov
int
addr16
ss
stc
sub
fmuls
xor
jecxz
cmpsl
sbb
enter
pop
lea
dec
xorl
gs
add
and
flds
sbb
mov
out
orb
jp
mov
mov
add
mov
movsb
add
mov
sbb
or
test
mov
xor
jns
fprem
cmc
mov
cmp
stc
test
cmpsb
dec
movsb
test
dec
cli
movl
jo
cmc
inc
mov
je
cmc
inc
mov
je
cmc
inc
mov
je
xor
movl
sub
ficoml
dec
faddl
mov
fisubrl
jmp
adc
dec
mov
cmp
push
add
fiaddl
dec
scas
test
fstpl
add
orl
sbb
orb
ljmp
mov
popf
add
repnz
addb
adc
pop
dec
fldt
jne
sub
sbb
movsb
cs
mov
add
lods
xor
mov
mov
xor
enter
adc
cltd
mov
mov
push
adcb
stos
int3
int3
fisttpll
pop
into
dec
lds
popa
mov
stos
fstps
mov
push
arpl
gs
test
lods
cwtl
and
test
mov
sahf
out
and
arpl
and
enter
nop
cwtl
mov
xlat
and
enter
cmp
enter
aaa
cmp
mov
jo
test
movsl
add
out
test
dec
cmpsl
fldenv
dec
jp
fcmove
xchg
fldl
pop
into
icebp
jp
faddl
test
fdivrl
cltd
fdivrp
jl
scas
gs
sahf
inc
test
loopne
add
push
addr16
fisttps
les
dec
and
in
cmpsl
stc
aas
mov
aam
xor
push
sub
test
mov
frstor
cltd
dec
pop
ret
add
aad
lods
push
mov
and
enter
insl
leave
jns
pop
or
test
cmpsl
shrl
rolb
or
test
mov
push
flds
mov
xor
mov
mov
lods
int
lcall
mov
popf
dec
out
inc
stos
jns
mov
bound
gs
inc
pushf
lods
test
cld
lret
pop
fcoml
aam
cmp
mul
inc
or
testb
lods
add
cmp
lods
test
lds
or
add
hlt
and
nop
clc
jp
lods
in
and
nop
lock
scas
in
mov
mov
lods
and
mov
cmpsb
aaa
xlat
and
nop
or
add
adc
nop
add
add
or
nop
cmp
add
stc
add
fistl
arpl
or
cltd
dec
sub
and
int3
rol
fcompl
enter
push
cwtl
sarl
test
int3
ret
aad
or
cwtl
xlat
cmp
cmc
inc
into
mov
stos
insl
outsb
and
aam
cmpsl
int3
stos
lods
add
jl
adc
xchg
mov
filds
out
push
fildll
stos
cmp
push
stos
inc
sbb
scas
sbb
or
cli
jmp
stos
outsl
sbb
sub
lods
cld
stos
mov
lods
mov
out
mov
inc
cmp
jge
mov
sahf
and
xor
dec
jl
sub
into
in
faddl
ljmp
push
popa
ret
mov
ljmp
lahf
out
gs
push
adc
mov
xor
add
xor
cmp
jp
out
enter
jns
outsl
daa
cld
adc
clc
hlt
stos
mov
cmp
inc
mov
mov
jecxz
pop
test
sub
xlat
dec
sub
mov
cli
aam
cmp
sahf
xchg
aam
int3
cvtpi2ps
mov
xchg
testb
sti
push
push
lcall
adc
fsubrl
xlat
dec
sbb
mov
jno
arpl
push
pop
fsubr
das
in
enter
mov
enter
mov
inc
cmpsl
pop
pop
push
inc
jecxz
imul
mov
push
add
jp
mov
jl
add
dec
xorl
add
inc
ret
jb
ljmp
dec
es
xchg
test
dec
pop
dec
test
int
mov
lahf
mov
add
push
test
and
ret
mov
or
mov
inc
lret
mov
dec
cmpsl
inc
scas
mov
sub
icebp
call
pop
test
je
jmp
repnz
lret
int3
outsl
push
cltd
and
push
push
add
sbb
fiaddl
lods
in
lea
lods
xchg
push
push
loopne
and
leave
mov
xorl
pop
xchg
inc
imul
stos
and
mov
sub
mov
mov
sub
cmp
xchg
or
call
sub
jp
in
imul
pop
or
jo
imul
into
arpl
mov
or
jl
pop
addr16
cld
inc
shll
adc
jns
ljmp
std
pop
test
test
pop
lods
inc
pop
xor
fstp
das
push
pop
test
lods
mov
stc
leave
lods
push
mov
sarb
test
aam
ret
imul
adc
popf
or
lcall
in
out
clc
in
ja
jmp
ret
adc
mov
mov
in
mov
rol
imul
bound
xor
cmp
inc
lds
sbbl
enter
sbbl
rorl
fcmovu
lcall
xchg
mov
and
push
icebp
maxps
cltd
sub
mov
add
cmp
mov
into
lcall
cmc
jg
or
fmull
and
decb
pop
cltd
jns
cmp
push
dec
mov
push
mov
pop
or
lret
and
nop
cmp
jl
mov
nop
push
lods
ljmp
ljmp
xor
jecxz
ljmp
xor
insl
push
out
cmp
popa
ret
fldcw
lods
pop
xor
hlt
rclb
inc
mov
jg
rclb
add
imul
push
ja
pop
imul
mul
jle
pop
jno
inc
pop
and
in
cwtl
sub
push
jb
popa
daa
sbb
pop
flds
mov
mov
adc
jle
mov
flds
or
mov
lods
push
hlt
cmovs
add
leave
ffreep
loope
adc
mov
mov
popa
lcall
lock
and
sbb
jmp
pop
into
xchg
repz
rcrb
jnp
pop
sub
mov
jnp
and
int3
enter
add
inc
pop
je
imul
stc
dec
push
cmp
dec
push
imul
pop
call
cld
mov
into
lods
sub
sbb
aam
jmp
add
pop
cli
push
ret
mov
pop
sbb
cwtl
negb
push
jb
fnstenv
into
setbe
mov
scas
and
pop
mov
hlt
add
scas
loope
cmpl
adc
fsubl
cmp
ret
scas
shll
fbstp
ret
dec
scas
xor
dec
mov
in
push
shll
push
or
jp
ds
shlb
daa
mov
mov
shlb
rorb
mov
mov
xchg
cmp
sahf
xor
mov
mov
and
test
push
mov
cli
lret
mov
aad
push
aad
imul
inc
mov
jp
cs
ds
push
ljmp
jne
push
aas
mov
jo
inc
ss
jnp
adc
stc
jbe
cwtl
out
pop
add
jne
or
mov
jp
sbb
and
jecxz
test
cs
out
lea
sti
ret
pop
cmp
lahf
dec
and
stc
mov
out
lock
xor
cmp
cmp
rcr
dec
pop
mov
push
mov
popf
cmp
ficoms
dec
mov
pop
fwait
sahf
and
fsubrs
jl
lods
stc
ret
arpl
mov
mov
je
jnp
loope
xchg
ret
clc
mov
jb
add
stc
mov
jo
sbb
mov
test
jmp
push
xor
pop
fcmovu
cmp
mov
lods
jl
dec
cmp
jns
jl
in
jl
stc
stos
dec
ds
addl
je
jnp
decl
test
xchg
cmpsb
in
jl
lods
test
dec
sbb
nop
push
cmp
pop
in
jl
dec
push
orb
sub
dec
dec
xor
sbbl
jae
mov
ret
push
cmp
push
lods
pop
ret
sub
pop
loop
movsb
int
daa
and
sub
xor
push
test
fmull
inc
sbbl
dec
mov
stc
ret
pop
cmp
pop
cmp
insl
xor
sbb
daa
int
mov
pop
ffreep
je
int
lcall
sub
jp
std
nop
ds
lar
rorb
mov
cmp
out
ret
add
xchg
int3
mov
mov
mov
sti
ljmp
sub
stc
fsts
movb
jl
fcompl
popa
int
jo
ficoms
test
sub
mov
or
dec
ror
add
cmpsl
push
fdivl
cmp
pop
cltd
sbb
pop
sarl
int3
xor
mov
ret
int3
out
sub
sub
je
cltd
hlt
xor
sub
jne
lods
xor
xor
mov
test
into
addr16
mov
or
fsts
shll
or
jo
loop
sub
loopne
mov
jns
adc
dec
dec
fld
cwtl
adc
sahf
or
xor
sub
jo
test
orb
jl
dec
xchg
sub
jo
test
mov
mov
jl
dec
adc
scas
jl
cld
pop
ds
stc
adc
jl
dec
push
sub
scas
jl
cld
cmp
ds
stc
dec
scas
jl
cld
nop
mov
xor
xlat
ds
dec
sub
or
gs
outsb
mov
mov
xor
pop
dec
push
ret
adc
addb
cwtl
push
cmp
test
mov
dec
jo
int3
pop
add
sbb
ss
fs
sub
das
jno
shr
mov
out
xor
push
jnp
pop
enter
lret
fldcw
cmp
jg
ljmp
popf
addr16
pop
mov
outsl
jl
pop
outsl
jl
stc
or
cmp
outsl
sub
cld
outsl
addr16
outsl
pop
jge
sbb
in
jo
hlt
mov
sub
inc
clc
pop
ljmp
push
subb
push
jge
in
ret
mov
pop
cmpsb
xlat
xchg
and
dec
inc
push
add
mov
mov
mov
dec
fisubs
cltd
and
dec
rcll
ret
and
test
lcall
push
inc
xchg
push
mov
mov
and
mov
lea
ret
or
ret
mov
cltd
cltd
test
movsb
loop
dec
sub
or
mov
lcall
xchg
aam
ret
in
pop
mov
ret
pushf
mov
sbb
lods
outsb
jo
fnstcw
mulb
cmc
cltd
dec
jmp
mov
or
xorl
addr16
xchg
test
fcoms
ret
loope
and
orb
push
cmpsl
int3
test
mov
fists
lcall
lods
loopne
adc
push
fldl
or
mov
jo
or
lods
repz
stos
jle
mov
popa
cmp
or
pusha
mov
fmull
dec
fsubs
mov
test
xor
sbb
pushf
loope
xchg
loope
stc
mov
loopne
adc
push
test
aad
and
push
add
and
pop
sbb
cmpsl
and
aad
loopne
pusha
and
stos
lret
xchg
cli
cmp
lods
add
lret
call
popa
test
add
popa
sub
popa
into
test
popa
mov
popa
cltd
aad
or
adc
xorb
or
das
movsb
into
add
movsb
sub
movsb
cmp
movsb
xchg
fnstenv
dec
push
test
lods
ljmp
movsb
cmp
add
in
add
in
test
in
test
aad
in
clc
ljmp
clc
dec
test
add
stos
and
movsb
or
test
dec
das
and
cmp
and
test
adcb
and
or
mov
lock
or
imul
into
jp
adc
fldenv
fs
mov
fsubrl
fnsave
or
loope
mov
add
push
mov
js
pop
je
jecxz
mov
je
jecxz
fdiv
jecxz
xor
jecxz
sub
out
addr16
xchg
jecxz
int3
or
into
test
cltd
aad
mov
dec
jmp
and
mov
sbb
jmp
repz
dec
jle
test
test
call
cltd
stc
outsl
arpl
or
mov
cmp
and
test
or
mov
cmpsb
mov
jne
mov
xchg
add
dec
add
jo
xor
inc
add
out
data16
js
pop
je
out
mov
out
cli
sbb
out
jecxz
test
stos
es
pushf
pop
xlat
ss
mov
or
sbb
fldl
or
faddl
es
lea
loop
out
mov
insl
daa
shll
fs
data16
add
data16
add
data16
cmp
xchg
fldenv
adc
xor
add
movsl
xlat
sub
je
movsl
inc
mov
inc
fcompl
movsl
inc
lods
outsl
push
add
jg
xor
inc
dec
cmp
in
fs
pop
jo
in
mov
in
leave
in
fcoml
lods
scas
nop
add
mov
dec
dec
lock
lret
add
into
mov
orb
ss
cmpsl
cmp
mov
and
int
jb
and
jp
call
or
push
mov
test
mov
adc
gs
gs
aad
setns
dec
iret
lods
test
lods
mov
test
test
sub
test
test
cltd
aad
dec
cltd
push
bnd
mov
call
add
call
test
mov
call
cltd
xchg
sub
add
enter
fdivl
dec
fsts
sbb
sub
out
xchg
sub
test
sub
push
push
cmpsb
into
push
cltd
flds
mov
or
mov
mov
aam
inc
fcompl
inc
lods
mov
add
lds
cmp
mov
bound
loop
sahf
andb
addr16
cmpsl
mov
add
adc
cmpsl
outsb
mov
push
jne
test
push
or
out
frstor
or
fcoml
dec
fwait
out
cmc
andb
cmp
nop
out
test
cltd
xchg
adc
inc
mov
icebp
les
dec
lahf
daa
loop
jmp
daa
mov
inc
add
daa
xlat
jmp
js
pop
je
addr16
mov
je
addr16
addr16
lods
xor
addr16
inc
pop
iret
cltd
mov
test
cmp
fiaddl
pop
fidivl
sub
jns
adc
addr16
aas
sbb
data16
mov
or
push
sbb
jne
jp
test
xor
inc
test
sbb
aas
pop
aad
pop
cltd
xchg
sbb
je
pop
inc
mov
fcoml
pop
inc
lods
imul
lods
mov
jmp
xor
xor
add
lcall
lcall
insl
add
test
lods
inc
pop
dec
lcall
fnstcw
add
fxch
add
fldcw
flds
fldenv
push
dec
jno
test
sbb
cmp
add
sbb
sbb
fnstenv
pop
lods
dec
sbb
and
jp
out
add
rcrl
lret
pop
out
iret
pop
loopne
dec
pop
push
test
flds
cmp
cltd
adc
fstl
aad
hlt
iret
scas
ffree
incl
dec
cltd
inc
lods
test
add
mov
jp
aas
fsubr
outsl
fsubl
jbe
jecxz
test
leave
fsubrl
fmul
test
fdivl
faddl
pop
sub
xlat
jnp
cltd
mov
xor
sbb
fldenv
xchg
cmpsl
aas
cmp
mov
bound
mov
sbb
aad
sbbl
mov
xor
pop
test
push
pop
xchg
cmpsl
cmp
pop
fnstsw
pop
jp
aam
jp
movsb
lret
roll
cltd
mov
xor
pushf
add
adcb
add
pushf
sub
fildl
fldenv
push
push
add
ja
in
xor
fildl
flds
flds
fstpt
lcall
loopne
fistpl
xchg
in
lret
imul
movl
inc
sbb
add
out
repz
loopne
jle
push
test
xchg
call
dec
lcall
pop
add
mov
les
sbb
cmp
repz
out
negl
push
test
test
add
fwait
inc
fcoml
fwait
dec
fsts
stc
inc
fwait
mov
xor
loopne
mov
add
jo,pt
fidivrs
adcb
jp
lret
fiadds
dec
sbb
jns
mov
aaa
push
loopne
push
cltd
aad
inc
cltd
xchg
pop
jp
cmpsb
dec
xchg
stc
push
push
push
test
push
push
or
mov
aaa
pop
or
fs
jp
push
stos
add
pusha
pop
int
jns
lcall
pop
add
ret
pop
loop
pop
mov
sub
mov
sahf
cltd
aad
enter
sahf
icebp
test
fs
sahf
xchg
push
cmp
fldl
imul
cmc
dec
frstor
mov
push
sbb
add
flds
fstl
jno
je
sbb
mov
dec
sbb
xchg
xchg
or
fisttps
push
pop
gs
dec
dec
sbb
xchg
cmpsl
pusha
cmp
pop
inc
arpl
in
dec
pop
mov
cwtl
pop
aaa
ret
mov
cmp
inc
gs
aam
or
imul
loope
loop
mov
and
dec
popf
sbbb
mov
out
cmpsb
xchg
mov
loopne
push
xor
test
xchg
lods
mov
addb
inc
test
and
fisubl
loopne
and
push
mov
cltd
xchg
lret
ret
dec
lcall
xchg
test
aas
pusha
xchg
cmpsl
and
mov
inc
fisubs
and
dec
cli
jo
pusha
adc
arpl
cmp
xor
stc
movsb
mov
stc
shlb
push
test
outsb
test
loope
mov
stc
lock
sub
into
test
fbstp
jp
push
pandn
dec
std
lods
mov
movzbl
pop
mov
pop
out
push
pop
mov
cltd
pop
test
test
lcall
test
cltd
xchg
sub
je
pop
inc
mov
pop
je
pop
inc
fcompl
stc
add
pop
pop
int
cmp
lcall
lahf
mov
xor
out
push
lahf
mov
xchg
lahf
test
test
sti
shlb
xchg
test
add
shrb
ror
test
mov
rcrb
push
inc
rol
test
xor
adc
cmpsl
xor
mov
push
adc
dec
adc
sub
cmp
fld
aad
adc
push
mov
or
pusha
push
fisttpll
push
fmull
dec
or
dec
mov
aas
xchg
daa
mov
add
in
rclb
xchg
test
sub
xchg
into
test
cltd
aad
cmp
push
jnp
test
pop
inc
subb
mov
loop
loop
or
mov
jle
mov
inc
out
cmpsl
loop
outsl
jl
jg
adc
faddl
add
test
adc
out
cltd
push
mov
fcoml
faddl
adc
arpl
xor
inc
test
push
pop
test
test
add
into
add
push
sub
push
cmp
push
xchg
cmpsb
addr16
ja
sbb
add
xchg
inc
fsubrl
dec
pop
addl
stc
rcll
fwait
cmpsb
dec
jle
mov
dec
lret
adcb
mov
push
pop
aam
aam
or
mov
je
aam
mov
aam
fiaddl
popa
lret
lcall
test
aad
adc
xchg
or
inc
mov
adc
stc
adc
faddl
lods
fidivrs
dec
scas
push
mov
test
push
aad
push
cltd
xchg
mov
mov
stc
push
fnstsw
push
jp
sarb
jb
push
lcall
xchg
dec
pop
or
mov
cmp
push
dec
jo
rorl
orb
jne
xchg
mov
push
xchg
roll
psrlq
cmp
rcr
std
adc
mov
loop
adc
mov
or
pop
test
adc
xchg
adc
add
inc
mov
push
je
push
inc
cmpsb
mov
loop
push
jle
out
push
test
pop
test
push
aad
push
cltd
xchg
adc
je
push
inc
into
icebp
jmp
orb
dec
mov
lods
mov
popa
dec
xchg
and
sub
xchg
into
add
sub
or
subb
and
lods
mov
ljmp
leave
inc
test
mov
xor
push
push
test
xchg
pop
or
movl
xlat
adc
cltd
push
int
test
sbb
fdivrl
push
fnsave
push
dec
mov
loop
dec
jge
pop
push
test
inc
test
push
aad
push
cltd
xchg
addr16
je
xchg
inc
mov
xchg
je
xchg
inc
fdivl
rolb
push
xchg
xor
inc
add
xchg
xlat
pop
xchg
cltd
js
pop
icebp
rcl
jne
aad
imul
loop
mov
mov
xor
inc
test
aad
test
aad
aad
icebp
push
mov
add
aad
adc
mov
notl
jle
pop
xchg
lret
lcall
fmull
or
pop
scas
jae
push
fsubrl
frstor
push
fs
jp
xchg
aaa
ret
test
push
and
xor
push
test
fwait
add
add
xchg
sub
xchg
into
test
mov
xchg
cltd
aad
mov
icebp
test
dec
jo
xchg
inc
fcoml
mov
out
mov
inc
movsb
fdivs
lds
aad
adc
cltd
mov
jns
sbb
push
dec
adc
movsb
aaa
into
and
test
test
lcall
stc
test
push
add
popa
pop
mov
and
xchg
fnstcw
pop
ret
mov
cmp
mov
add
xor
scas
mov
cwtl
sahf
js
inc
fsubl
cwtl
inc
mov
repnz
xor
inc
add
cwtl
sbb
cwtl
sbb
push
mov
adc
call
cmp
xlat
xchg
fscale
xor
or
cmp
cwtl
xlat
jmp
inc
test
fwait
add
add
pop
neg
pop
mov
addr16
test
test
add
mov
pop
jmp
dec
pop
jo
push
or
or
lods
out
frstor
or
adc
dec
fwait
push
loop
cmc
dec
jo
push
adc
fsts
dec
sti
xchg
sbb
or
xchg
mov
pusha
xchg
loopne
ficoml
aad
xchg
mov
ret
xchg
mov
mov
popa
add
lods
es
or
fcoml
fmulp
loop
xor
lret
lcall
decl
mov
cmp
test
out
mov
je
or
pop
or
sub
jns
adc
mov
mov
sbb
or
adc
pop
dec
out
dec
dec
loopne
dec
push
test
outsb
test
xor
add
xchg
or
adc
mov
into
jo
mov
xorb
jp
lock
cmp
test
out
mov
inc
mov
mov
dec
leave
mov
jge
dec
lret
lcall
aaa
or
add
dec
adc
mov
out
nop
or
test
or
popa
je
jno
retw
lods
leave
jle
cmp
call
test
out
mov
inc
movl
lock
aaa
test
mov
sbb
pop
jo
addb
sub
mov
fldenv
mov
cmp
jmp
imul
sub
int3
hlt
or
movl
int3
inc
fmull
inc
lods
test
add
mov
test
or
test
aad
or
adc
cmp
xor
or
add
or
or
stc
inc
or
jae
mov
dec
ret
dec
mov
rolb
lods
adc
dec
faddl
dec
dec
mov
call
mov
mov
mov
jecxz
push
cmp
xor
mov
add
mov
mov
fstps
push
sub
lret
lcall
fldenv
lret
sahf
dec
shlb
or
lret
mov
xchg
test
test
lcall
lods
fimull
add
xchg
or
scas
add
or
sti
dec
or
loope
or
adc
add
in
jecxz
dec
fadd
imul
dec
push
add
popa
fldl
mov
jle
test
test
lret
hlt
cltd
cltd
outsl
mov
ss
sbb
add
mov
into
into
test
into
js
jp
push
cmc
jp
and
xchg
push
or
mov
or
into
scas
dec
ds
scas
inc
or
fdivrl
push
fnsave
or
fs
xor
aad
lcall
fcoml
push
add
lret
push
scas
dec
ds
scas
jns
push
fdivl
dec
fnsave
or
loope
dec
inc
lods
dec
jne
add
xchg
cltd
fldenv
dec
push
add
dec
sahf
dec
shlb
cmp
mov
mov
test
test
pusha
mov
fimull
scas
dec
sti
dec
subb
mov
icebp
int
push
mov
test
and
mov
push
add
int
dec
shlb
jge
out
ja
mov
cmc
or
test
lcall
stc
dec
or
sahf
dec
shlb
jno
out
imul
dec
sbb
test
test
xchg
dec
cmpsb
test
push
dec
shrd
or
dec
scas
dec
ds
scas
jne
fsubrl
frstor
lea
jp
mov
aaa
test
mov
sbb
add
shr
scas
lods
mov
sub
test
mov
push
pop
ror
lods
push
lcall
stc
mov
push
add
sahf
dec
shlb
mov
adc
sub
aaa
push
pop
xlat
lret
lcall
adcb
push
cmp
jecxz
dec
adc
cmpsb
push
out
ficoml
test
push
push
mov
cltd
push
lret
push
sti
imul
mov
aas
nop
sbb
adc
ficoml
loopne
and
ljmp
adc
dec
dec
nop
lds
add
out
iret
and
iret
mov
dec
iret
outsl
subb
sub
lret
shl
das
cltd
mov
movl
xorb
and
paddusb
cmovle
mov
loop
inc
fists
sbb
arpl
mov
push
dec
ucomiss
sub
dec
into
test
mov
dec
cltd
aad
push
pop
cmp
hlt
pop
subb
and
js
sub
cmc
sbb
movq
fdivl
test
xor
inc
test
mov
cmp
test
fcompl
jmp
int
movsl
popa
cmc
sbb
insl
pushf
stc
in
xchg
enter
mov
inc
ret
pop
jp
pop
test
ret
pop
sub
sub
jo
lods
cmpsb
ret
add
cmp
add
add
add
add
add
fldenv
push
xorb
lods
and
icebp
dec
inc
fs
inc
cmp
add
inc
into
add
inc
sub
inc
cmp
inc
xchg
fldenv
andb
test
cmp
mov
xchg
or
cwtl
xorb
in
cltd
xchg
mov
cmpsl
add
cmp
decb
roll
shll
dec
sub
dec
shll
fldenv
leave
shll
roll
insb
add
xchg
add
je
add
in
inc
lods
jnp
add
add
cmpsl
mov
mov
sbb
cmpb
inc
mov
inc
fdivl
inc
inc
test
inc
lods
jecxz
push
dec
inc
rolb
and
add
or
loope
cmp
adcl
mov
subl
adc
inc
mov
frstor
mov
les
jp
int3
jmp
imul
cltd
fldenv
les
nop
icebp
int
jle
sbb
or
fcompl
add
pushf
es
fldl2t
add
test
loopne
or
lds
inc
add
push
fisubrs
lcall
lods
xor
sbb
xchg
inc
mov
nop
inc
loopne
or
popa
scas
aad
test
cmc
daa
in
mov
dec
fsts
mov
push
test
test
test
aaa
out
xchg
inc
pop
test
aam
dec
test
ret
sub
ret
into
mov
ret
test
test
or
cmpsl
lods
cwtl
ret
push
movl
mov
and
into
test
add
jns
sbb
add
test
add
add
ljmp
jne
loop
cvttps2pi
inc
push
cmc
test
lcall
mov
mov
loopne
cmp
push
movsl
add
fldcw
sbb
mov
sbb
add
fcompl
int
sbb
test
loopne
loop
fmuls
fadd
sahf
sti
fimull
dec
loop
cmpsl
sub
fabs
aad
push
insl
in
sub
push
test
pop
push
xchg
sub
fmul
push
ffree
or
fdivr
push
dec
movl
mov
outsl
aad
inc
cltd
mov
pop
inc
test
sub
inc
or
mov
inc
mov
scas
xchg
das
push
sub
test
push
xchg
les
mov
mov
dec
xchg
mov
loop
lds
fld
add
adc
fnstsw
out
sbb
add
push
test
xor
scas
add
or
in
cs
icebp
ds
mov
jp
mov
dec
add
jo
inc
add
xchg
mov
stc
and
jp
addl
stc
xchg
fstl
cltd
aad
scas
cltd
push
ja
or
sbb
test
insl
test
cli
sbbb
roll
stc
roll
test
push
cmp
enter
add
enter
enter
cmp
enter
test
push
xor
xchg
mov
je
or
dec
or
cs
outsl
jo
dec
ret
sbb
pop
test
dec
aad
dec
cltd
xchg
mov
dec
dec
fisttpll
dec
xlat
dec
jp
and
int
cltd
scas
test
sbb
cltd
push
movsl
mov
push
xorb
movl
mov
ss
cltd
fld
adc
lock
fnstcw
test
or
out
js
inc
movl
dec
mov
sub
inc
test
push
mov
add
pop
xchg
cmpsl
xchg
cmp
pop
inc
jns
mov
dec
pop
outsl
jno
jp
cs
int
cltd
fnstcw
inc
push
test
inc
push
or
mov
jns
fnstsw
inc
jp
push
mov
int
cltd
fldcw
push
test
xchg
xchg
mov
cmp
cli
loope
xchg
push
loope
add
lret
adc
mov
add
adc
mov
addb
aad
and
dec
lahf
lods
in
cmp
push
mov
enter
inc
lods
inc
cmp
frstor
lods
jp
pop
inc
add
jp
mov
pop
je
jp
mov
je
jp
fmull
movsb
add
or
pop
aad
mov
add
push
mov
dec
inc
or
into
mov
lods
and
stc
xor
inc
add
stc
cwtl
sub
add
xchg
push
nop
stc
mov
dec
stc
mov
jno
inc
test
test
loopne
lcall
cmp
lret
or
fs
cmp
mov
jp
sarb
test
xchg
aam
loopne
jbe
mov
jns
out
mov
adc
pop
jns
dec
xchg
jns
push
in
mov
inc
push
inc
add
jns
repnz
je
mov
je
mov
inc
lods
cmp
add
dec
mov
ret
ds
cltd
js
pop
hlt
popa
mov
fwait
or
out
fbstp
je
jp
test
int
cltd
and
adc
mov
sub
cmp
add
cmp
fidivrs
stc
and
arpl
iret
cmp
xchg
ret
cmp
lds
and
add
jl
sbb
out
sti
sbb
test
fldenv
lods
push
ret
jl
add
ljmp
and
mov
push
dec
inc
je
mov
fwait
add
dec
aas
add
je
hlt
outsb
bound
in
loop
and
hlt
fmul
cltd
cmpsb
sbb
add
mov
test
sti
mov
scas
and
ret
rolb
pop
sti
xor
cmpsl
out
test
mov
cmc
cmp
test
cmp
push
cwtd
push
push
cmp
dec
push
lods
cmp
adc
cs
mov
jnp
xor
jnp
jo
movsl
jp
pop
lret
rcll
or
sbb
jnp
and
inc
dec
lods
cmp
fsubrl
mov
loop
dec
in
pop
or
aad
mov
cltd
push
sarl
aas
je
incb
sub
mov
push
incb
cwtl
push
fdivr
add
fld
xchg
cmpsl
push
cmp
ds
and
mov
dec
mov
push
ds
test
loopne
add
fyl2xp1
ds
cmpsl
cmpl
and
cwtl
xor
fsubrl
test
dec
jle
mov
aam
cltd
mov
mov
cmp
mov
mov
dec
mov
xor
lret
test
int3
fcom
mov
mov
xorb
mov
je
std
inc
fsubr
std
inc
test
std
lods
xchg
ret
std
fs
std
cmp
add
cmp
sub
cmp
xchg
fld
push
lods
lret
dec
cmp
and
add
jge
add
jge
lock
stc
ja
xchg
flds
cmpsl
push
test
jge
or
pushf
dec
jge
pop
jge
and
add
ror
cmp
sub
rolb
dec
out
test
lods
dec
ret
shlb
and
add
pop
js
or
pop
pop
sub
and
fldcw
test
jmp
pop
faddl
and
xor
das
mov
rcrb
mov
mov
in
mov
xor
cmpl
testb
addr16
dec
cs
lret
pusha
jp
mov
out
cmpsl
jl
fisttps
mov
jl
repz
pop
xchg
cmp
mov
das
std
pop
inc
ffreep
dec
cld
sub
loop
lods
sti
in
in
pop
dec
decb
sub
pop
mov
daa
in
scas
pop
jge
rep
xlat
ja
mov
lea
mov
rcrb
inc
ret
mov
mov
jmp
and
push
adc
cwtl
into
repnz
xchg
adc
cmpsb
gs
fnstsw
sbb
mov
test
adc
xchg
xchg
testb
scas
in
push
in
lds
sbb
pop
mov
xchg
inc
sub
mov
inc
adc
xor
push
loop
push
cmp
fiaddl
icebp
jl
cltd
gs
aad
pop
rolb
arpl
outsb
inc
lret
addl
aam
dec
test
push
jge
inc
or
xchg
in
sahf
push
mov
sbb
insl
mov
lret
fs
loopne
jmp
mov
dec
cmp
flds
fmull
popa
xor
faddl
push
faddl
pop
andl
test
aas
xchg
in
test
pop
shlb
xchg
pop
push
adc
dec
rcll
jge
in
dec
pusha
aas
in
or
push
dec
xchg
and
aam
aam
sti
test
jle
sbb
xchg
test
shlb
test
and
sub
cmp
jo
jg
popa
in
dec
ffreep
lea
lds
sub
mov
jg
inc
and
fs
jns
test
and
aad
mov
xor
fbld
outsl
std
enter
ljmp
or
mov
jl
pushf
push
sub
pop
inc
cltd
daa
pop
jg
mov
pop
sub
sbb
xor
push
dec
vcvttpd2dqx
xchg
jle
dec
test
orl
cwtl
jne
jle
sub
repnz
jle
xor
jle
movsl
test
mov
jle
in
popf
arpl
loop
add
lret
cltd
lods
iret
sahf
adc
xor
mov
fidivs
cltd
je
xor
fsubr
xchg
jle
cld
test
mov
xor
sbbl
adc
dec
inc
jmp
xchg
add
aas
xor
push
xlat
subl
jno
shr
mov
out
je
jb
mov
mov
scas
fs
mov
cwtl
dec
pop
inc
adc
adc
sub
sbb
test
mov
pop
mov
add
sub
adc
mov
xchg
sbb
inc
rcrl
mov
push
test
xchg
iret
out
lods
cwtl
xor
cmpsl
push
in
imul
mov
lods
fldl
popa
pushf
dec
dec
cltd
adc
fistpll
cmp
mov
aas
daa
loope
hlt
adc
mov
jb
cmp
dec
jge
loop
call
icebp
pusha
mov
or
fcompl
mov
daa
loope
lret
or
pop
enter
push
icebp
sub
mov
xorb
loope
pop
add
aaa
push
xchg
pushf
dec
fwait
cwtl
mov
mov
dec
sub
pop
xor
xor
add
xor
and
cltd
push
xor
fnstcw
mov
cld
loope
mov
iret
out
and
jp
cltd
dec
les
jae
cmpsl
test
test
out
and
jno
mov
xchg
int3
stos
ficoms
aaa
inc
mov
cmpsl
ret
lret
stos
lods
daa
mov
jns
sbb
lret
jl
test
pop
mov
add
dec
nop
mov
adc
jno
je
cmp
mov
sbb
mov
fidivs
andl
dec
jle
or
mov
cmpsb
fcom
cmp
out
xor
inc
cmpsb
cmp
jnp
cwtl
cmp
mov
push
pop
cmp
mov
fbld
xchg
hlt
mov
fiadds
add
sub
cmp
stc
inc
xor
add
xor
scas
xor
stc
xchg
mov
pop
xlat
out
xor
xor
loope
enter
jnp
push
sub
push
sbb
xor
cmp
xchg
xchg
add
jp
push
push
or
cmp
out
fadd
je
xor
leave
out
fildll
je
cmp
ret
or
mov
and
inc
and
je
inc
inc
ret
mov
jnp
or
cmpsb
or
xlat
mov
mov
addr16
sti
loopne
jbe
dec
insl
mov
movsb
andl
pop
in
xor
mov
mov
orb
cltd
mov
dec
repz
test
pcmpgtb
lds
add
sahf
dec
aad
repz
mov
shl
inc
in
cmp
insl
aaa
flds
pop
or
pop
push
jae
xor
aad
xor
dec
sbb
inc
or
fcoml
ffree
fisubl
test
mov
cmc
jae
or
lods
iret
das
mov
je
lret
mov
stc
push
in
jae
push
loop
cs
xchg
xchg
lahf
cmp
fidivs
call
mov
movsb
mov
test
stc
jae
fld1
xchg
rolb
in
mov
dec
or
flds
push
adc
stc
mov
push
push
inc
fdivrl
ret
push
int
arpl
sub
inc
sub
testb
sahf
mov
mov
inc
ret
imulb
out
jl
or
ret
ss
cmpsl
leave
lock
ss
mov
leave
xchg
add
pop
mov
push
mov
cmpsl
inc
out
or
ss
and
addl
outsl
jp
test
inc
data16
fldcw
jbe
enter
jbe
call
dec
xchg
jbe
xor
mov
or
outsl
sub
dec
std
mov
call
sub
dec
mov
je
repnz
lods
or
adc
add
aam
sbb
mov
shlb
lods
rcrb
faddl
push
mov
lds
xchg
clc
aad
mov
sub
call
or
and
fstl
mov
cmc
cltd
push
dec
fmuls
cltd
push
xchg
xor
pop
or
mov
and
push
add
in
stc
dec
lcall
ret
xor
arpl
xor
dec
fsubrl
sbb
mov
sbb
in
sub
mov
add
jo
pop
inc
fdivrl
jne
in
sub
push
and
stc
cs
xchg
outsb
dec
int
push
inc
sub
adc
jne
stc
mov
iret
jle
out
dec
in
push
cltd
pop
mov
int3
push
ret
or
ret
test
fmuls
cmpsl
mov
sbb
xchg
inc
je
pop
lret
sbb
pcmpgtw
or
add
clc
push
xor
in
cltd
or
cmpsl
inc
and
adc
inc
add
fadd
outsb
pop
inc
mov
cmp
loope
mov
push
loope
lods
jo
cmp
lret
imul
out
into
cmp
test
cmp
int
shrb
cmp
jb
test
fldenv
push
fsubrs
frstor
push
xchg
int
stos
inc
cltd
outsl
std
aam
shlb
js
ret
imul
mul
mov
push
jle
lahf
notb
add
or
mov
mov
and
mov
dec
js
lods
dec
adc
loopne
adc
aad
mov
stc
xchg
xchg
rolb
sahf
adc
ds
dec
inc
outsl
jp
add
push
shlb
add
pop
inc
fwait
sbb
mov
mov
mull
jge
int
lea
dec
push
std
mov
dec
mov
cmp
movl
aaa
xor
test
push
aaa
xchg
stc
aad
loopne
inc
aaa
push
add
adc
xchg
test
aaa
inc
lods
fst
add
sbb
push
ja
dec
xchg
ja
stc
add
lret
push
shll
dec
test
or
jo
adc
outsl
stos
shlb
je
test
mov
xlat
stos
cltd
mov
stos
sbb
inc
test
xorl
cmp
pop
jae
mov
push
push
jp
and
ss
test
ljmp
ljmp
dec
sbb
mov
and
cmp
hlt
test
jnp
xchg
fsts
sub
sbb
xchg
sub
mov
sub
ret
mov
cmp
push
je
sbb
or
inc
test
push
test
addr16
or
push
push
mov
push
aaa
mov
xor
pop
push
ljmp
dec
mov
and
int
icebp
push
cltd
aad
adc
push
or
lea
test
mov
inc
scas
and
cmp
shr
sahf
insl
pusha
enter
inc
xchg
inc
fstps
jmp
push
add
jmp
icebp
sub
scas
sub
pop
or
daa
sub
test
fiaddl
cmp
push
cltd
add
jmp
fsts
rcll
ljmp
jo
je
imul
or
imul
ret
imul
mov
ret
push
lea
adc
mov
arpl
pusha
mov
fs
lods
dec
dec
inc
sub
or
fs
ret
pusha
adc
mov
xchg
push
cltd
push
popa
in
lea
in
mov
jns
pop
mov
scas
jmp
flds
dec
add
cmp
inc
sub
sub
push
push
xchg
test
push
sub
or
mov
inc
sub
mov
push
lods
mov
roll
insb
test
cmp
add
jae
out
inc
mov
mov
cwtl
insb
inc
test
insb
push
aas
stos
out
xor
mov
ret
stos
jmp
imul
and
movsl
dec
inc
stos
loop
icebp
push
mov
xor
sub
jmp
fldcw
jmp
fxch
out
cmpsb
jmp
cmpsl
xor
jecxz
lds
leave
add
inc
fists
cltd
aad
xchg
cltd
push
jnp
lea
sub
push
push
pop
mov
scas
pushf
dec
pop
fcompl
test
int3
push
pusha
inc
mov
mov
test
call
imul
jp
pop
imul
or
leave
imul
fmull
imul
flds
imul
lock
lea
scas
mov
enter
shrl
add
sti
cltd
roll
sbb
out
cltd
aad
push
cltd
pop
fldz
xor
sbb
out
into
add
or
dec
fstpl
out
inc
enter
cs
loopne
imull
push
test
sar
test
gs
lcall
sbb
mov
pop
jle
imul
fdivl
sbb
inc
adc
mov
sbb
stos
jo
outsb
cmp
adcb
push
sbb
mov
lods
cltd
push
aaa
lods
into
add
lea
fisttpll
lods
sub
mov
cmp
add
fiadds
inc
fsts
lods
xchg
fldcw
adc
push
lods
xchg
sarl
out
in
test
orl
popf
in
add
in
add
fmull
pop
in
mov
dec
in
mov
in
sub
stc
push
sub
stc
int
xor
push
sub
mov
and
mov
test
jo
xlat
jp
insw
adc
aad
insl
out
ds
rolb
nop
lock
mov
test
test
push
test
mov
test
call
je
mov
lods
mov
ss
fs
lock
test
add
ret
jmp
lock
xchg
lock
test
lock
add
xor
jnp
push
fnstcw
xlat
js
fimull
test
int3
and
inc
inc
mov
dec
cltd
push
wrmsr
dec
or
test
jo
cmp
rcrl
jo
jo
rcr
mov
inc
insb
fs
pop
push
mov
test
adc
cmp
out
clc
scas
loopne
jg
push
test
or
sbb
pop
je
scas
jp
inc
scas
sahf
imul
out
lods
jns
cmpb
cmpsl
inc
and
push
sub
test
push
test
dec
aad
out
cmpsl
js
xchg
add
out
dec
rorb
out
or
fs
jp
sbb
shlb
xchg
das
mov
test
out
cmp
leave
cltd
push
jmp
dec
test
fsubl
add
inc
add
outsl
sub
outsl
cmp
outsl
xchg
or
repnz
mov
daa
mov
mov
or
push
adc
iret
add
into
mov
movl
dec
mov
mov
loop
push
aam
dec
dec
lods
and
fisttpll
loop
jo
mov
jg
adc
push
cmpsl
and
lds
and
jp
jbe
jp
xchg
adc
aad
out
inc
jo
bound
push
bound
adc
and
mov
and
and
sahf
add
lock
fldenv
sbbb
lods
push
mov
sti
add
bound
jb
cltd
push
sub
pop
cmp
sahf
sub
ja
pop
cmp
call
loope
pop
cmp
add
sti
jecxz
cmpsl
aaa
mov
and
std
and
mov
imul
push
test
call
sbb
and
xchg
push
add
fnstcw
adc
mov
jns
loope
mov
popa
cltd
push
leave
popa
xchg
scas
mov
or
popa
stos
sti
sub
lods
cmp
stos
cs
loopne
je
loop
push
or
mov
mov
inc
movsb
add
test
in
xchg
je
dec
jp
loope
sbb
stc
push
in
ret
mov
adc
xor
arpl
in
fldenv
push
ret
mov
je
and
lods
fisubs
pop
inc
lcall
and
stc
adc
add
and
push
pop
mov
imul
dec
fs
add
fwait
fs
movsb
jnp
jp
add
lcall
test
test
in
aam
into
dec
or
mov
dec
mov
test
push
addr16
mov
test
test
cmp
mov
scas
jecxz
mov
jecxz
mov
sbb
jecxz
xchg
fnstcw
push
add
jecxz
pop
pop
xor
in
mov
test
dec
repnz
test
mov
and
cltd
xchg
and
mov
adc
push
add
and
inc
mov
arpl
test
nop
push
inc
cmpsl
add
inc
fs
arpl
push
arpl
mov
xor
jg
or
fs
jp
add
mov
mov
push
cmpsb
mov
lcall
out
inc
out
push
xchg
dec
test
data16
mov
adc
mov
mov
enter
add
sbb
lea
call
arpl
mov
dec
es
jp
mov
cltd
popa
aaa
mov
sbb
inc
and
push
dec
shlb
push
mov
xchg
test
dec
data16
cmp
inc
fmull
adc
jmp
mov
fbld
sbb
fcoml
movsl
inc
jae
push
mov
and
sub
in
fldenv
loop
in
mov
in
jno
mov
sub
test
test
out
es
arpl
lret
outsb
jp
add
lcall
and
test
gs
mov
sub
fsubrl
add
inc
add
gs
gs
gs
fyl2x
andnps
je
test
lods
mov
fidivrs
fdiv
test
popa
or
fs
jp
xchg
aaa
cmp
xor
fistpll
cmp
mov
call
push
test
ja
aam
or
sbb
add
pop
inc
fdivrl
sub
test
pop
push
xor
sub
cltd
imul
push
sub
cmp
cmp
fdivr
push
loop
or
mov
xor
add
mov
push
int3
xchg
fsubl
add
or
cmpsl
adc
test
aad
cmpsl
out
enter
shll
add
dec
pusha
enter
pusha
gs
aad
out
aad
inc
cltd
pop
lcall
add
test
push
out
inc
cmp
out
pop
test
adc
test
daa
sahf
mov
je
daa
jp
aam
fiadds
mov
sbb
test
test
inc
mov
ljmp
out
inc
push
add
xchg
addr16
gs
mov
stos
sub
addr16
sub
mov
addr16
aad
add
test
mov
or
pop
ficompl
fadd
ficompl
test
push
add
nop
out
add
test
dec
sbb
cmovge
xchg
dec
xor
add
cmp
inc
pop
xorl
stc
sbb
pop
sahf
or
jp
rcrl
lds
lea
dec
pop
pop
test
test
jb
rcll
cmp
cld
adc
sub
push
fwait
in
xchg
mov
je
lcall
lcall
std
or
mov
jp
loop
adc
aad
stc
cli
mov
sahf
inc
cmp
es
addr16
notb
mov
cmp
fadds
inc
aad
sbb
sahf
cwtl
pop
je
sbb
inc
sbb
dec
cltd
sbb
and
xchg
sbb
pop
dec
dec
or
push
or
push
popa
ret
test
xor
repz
paddb
sub
adc
mov
dec
fldl
stos
xor
fsubl
jp
adc
jp
loope
adc
aad
fsub
add
hlt
mov
fsubl
mov
add
or
add
lds
hlt
sbb
test
cltd
mov
or
cwtl
sbb
mov
inc
xchg
lea
pop
or
aaa
das
pop
andl
add
pop
test
aad
jle
cmp
sbb
pop
xchg
fldenv
add
jae
dec
pushf
cld
adc
cs
push
test
pushf
push
or
mov
inc
pushf
inc
mov
ror
sbbb
sub
fildl
test
aad
in
fsubl
fcomi
and
mov
xor
push
fcmovnbe
pushf
and
hlt
or
xchg
fadds
inc
xchg
sahf
outsl
sar
in
or
psrlw
sbb
push
decl
mov
pop
push
shll
pop
inc
mov
pop
ror
insb
xchg
pop
shll
inc
fsubl
lods
inc
add
dec
jo
pop
inc
dec
mov
jb
jp
aas
add
fwait
test
fcompl
stos
les
fwait
cmp
fwait
xchg
fldcw
push
inc
jnp
mov
add
xor
fiadds
ds
mov
fisubrs
stos
sub
ficoms
dec
stc
cmp
loopne
sbb
aad
push
jecxz
xor
test
mov
ret
or
test
lock
test
pop
test
xchg
movsl
push
adc
fwait
jno
push
out
pop
xchg
sarl
or
test
add
test
xor
fs
sub
sahf
pop
sar
in
loopne
imul
adc
sbbb
iret
sahf
test
mov
cmp
ljmp
cmpsl
mov
stos
fsub
frstor
dec
xchg
fnsave
jbe
jp
xchg
adc
fisttpll
movl
mov
sbb
into
inc
pop
sbb
les
sbb
test
test
loope
addb
mov
bound
xchg
mov
mov
add
or
cmp
adc
and
add
ret
out
inc
flds
fs
popf
push
mov
ljmp
add
adc
test
into
popf
xor
fs
sub
loopne
roll
loopne
aad
pop
cltd
push
and
les
dec
adc
lret
popf
test
icebp
and
scas
and
mov
je
and
dec
fcompl
loop
jge
mov
iret
jb
mov
cmp
dec
mov
and
dec
pusha
inc
xchg
inc
add
pusha
mov
test
stc
pop
sub
mov
cli
xchg
cmp
jnp
push
lcall
mov
xchg
cmpsl
push
cmp
sbb
fmul
mov
sbb
mov
jo
cmp
ja
mov
icebp
fildll
pop
test
push
fistps
mov
jp
inc
jns
fistps
test
aaa
mov
pop
push
test
jp
out
movsl
jnp
sbb
dec
call
pop
push
test
mov
mov
inc
or
stos
dec
cmc
pop
fisttpll
or
fs
pop
jp
mov
sti
dec
loopne
mov
add
sbb
xor
sub
push
stos
lods
cmp
arpl
add
inc
lahf
test
xchg
xor
xchg
sar
pop
lahf
test
jne
xchg
cmpsl
sub
out
mov
rcl
fwait
inc
stos
or
rcr
rorl
sarb
bound
sub
adc
shlb
mov
adc
fcoml
adc
sbb
nop
adc
mov
jp
mov
xor
lock
push
jp
xchg
push
inc
test
push
push
aas
xchg
out
mov
sub
sbb
dec
test
mov
xchg
cltd
xchg
test
lahf
xchg
fsubrs
push
xchg
cmpb
aaa
jno
mov
scas
mov
pop
push
jnp
dec
add
sub
mov
aaa
cmp
mov
pop
notl
cmpsl
mov
sub
mov
ficoml
into
add
adc
out
sub
adc
fldcw
push
adc
push
add
mov
xor
push
lock
test
xor
add
push
add
fcoml
or
dec
push
mov
jmp
cmpsl
mov
inc
gs
add
mov
je
xor
fmul
xchg
pop
test
or
sti
mov
add
daa
mov
cmp
loop
xchg
fs
mov
in
aam
shrl
aam
test
mov
xor
add
adc
stos
fbstp
out
sub
adc
mov
mov
sti
sub
lods
sahf
adc
dec
or
jp
xchg
repz
inc
clc
push
mov
movsl
push
std
pop
cmpsl
stos
je
push
add
lahf
push
dec
sbb
je
mov
pop
aad
push
cltd
mov
notl
gs
mov
push
xchg
fwait
inc
stos
dec
xchg
xchg
fisttpll
or
mov
sub
sarl
shrl
pop
test
insl
or
gs
xor
roll
shl
cs
mov
movl
jo,pt
adc
jp
add
mov
mov
xlat
lcall
jnp
xlat
lcall
jnp
test
test
push
push
shlb
add
or
psrlw
push
loop
add
std
movsl
xorb
sub
xchg
pop
roll
xchg
mov
xchg
cltd
aad
std
cltd
push
mov
rclb
xchg
aad
cltd
xchg
or
jp
pop
fstpl
mov
je
add
or
dec
xchg
loop
jmp
mov
xchg
gs
xchg
add
test
outsl
push
fdivs
fwait
ret
dec
push
add
leave
push
je
push
sbb
or
add
xchg
dec
movl
jge
insb
push
push
and
jb
mov
out
pop
sub
add
cmc
mov
push
addr16
ret
push
xor
fisubs
mov
adc
jnp
loop
adc
shlb
pop
xor
fists
loop
cwtl
mov
mov
out
mov
dec
and
stos
mov
test
mov
aad
aad
add
push
lds
and
dec
adc
push
aad
test
aad
or
mov
and
inc
mov
adc
mov
inc
fcompl
add
dec
jo
adc
dec
push
jo
push
push
imull
popa
sbb
push
aam
into
dec
fcoms
ds
stos
les
sbb
test
test
jae
push
sub
loop
mov
add
xchg
sub
cmp
dec
push
aaa
xchg
nop
fsubl
cmovl
or
mov
mov
jne
outsl
push
ja
xchg
sarl
xchg
fadds
add
add
jbe
ror
xchg
sbb
hlt
insb
cmpsb
dec
negb
loop
dec
aas
lock
push
movsl
loop
testb
cmovnp
sub
sbb
mov
sub
add
pop
mov
mov
dec
test
arpl
test
test
or
xchg
cwtl
aaa
mov
xor
sbb
and
cwtl
add
fistpl
mov
stos
je
cwtl
add
mov
loop
dec
bnd
xlat
adc
and
add
ja
fcompl
pop
test
mov
dec
cmp
in
inc
xlat
loop
out
mov
adc
pop
scas
mov
movsb
and
mov
pop
mov
add
xor
cmpxchg
inc
loopne
xchg
cmpsl
mov
mov
aad
push
pop
pop
jae
sbb
mov
decl
push
test
mov
loop
mov
movsl
push
aad
les
cwtl
xchg
out
cmp
push
jo
xchg
inc
xor
xchg
mov
dec
xchg
lods
in
mov
dec
in
dec
cwtl
call
icebp
mov
sub
lods
or
std
iret
jno
or
mov
out
lret
mov
js
out
call
mov
adc
lret
daa
lret
mov
lret
cltd
js
jne
mov
or
or
mov
lcall
lods
add
and
sub
dec
cwtl
xor
stc
fsubr
rolb
stc
out
insb
outsl
icebp
mov
loopne
pop
enter
dec
adc
push
mov
popf
dec
sbb
mov
js
pop
je
mov
xchg
mov
cwtl
dec
mov
test
mov
incl
mov
mov
mov
adcl
cmpsl
leave
inc
cwtl
mov
sbb
leave
into
mov
cltd
mov
or
dec
lods
or
insb
sub
push
cltd
aad
xor
push
adc
push
dec
mov
jle
pop
dec
or
dec
inc
mov
ror
mov
dec
js
and
fsubrl
je
pop
cmc
movsl
das
pop
lock
rorb
mov
jo
mov
mov
fwait
inc
call
mov
lock
xchg
es
movl
int3
test
mov
insb
out
sub
or
int3
vorps
add
daa
jle
cwtl
mov
lcall
mov
sub
mov
aad
dec
cmp
cltd
xchg
stc
or
fldcw
out
push
or
stc
lahf
or
test
or
into
sub
sbb
cmp
or
cltd
stc
int
xchg
fldcw
jae
add
pop
pop
jmp
les
dec
cwtl
xchg
movl
mov
inc
dec
dec
fadd
dec
dec
aas
mov
stos
inc
or
fdivr
mov
cwtl
fdiv
mov
mov
repnz
jo
mov
mov
sbb
cmp
into
add
lret
mov
mov
fsubrl
lret
loop
into
mulb
pop
stc
lods
and
lea
jmp
cmp
sub
or
call
mov
jae
cltd
aad
ss
push
sbb
or
je
or
inc
or
mov
out
loope
dec
pop
test
push
decl
push
call
test
mov
jbe
cmc
shr
pop
pop
lods
adc
mov
sub
mov
jmp
out
call
psubw
mov
stc
mov
leave
out
movsl
adc
add
fdivrl
add
into
add
fsubrl
and
bound
cmp
cmc
jo
into
inc
test
push
xchg
into
add
mov
push
je
push
add
fsubrl
push
mov
dec
push
mov
dec
push
pop
mov
and
sub
push
test
je
mov
lock
or
dec
lds
out
mov
inc
pop
dec
loop
mov
shr
add
dec
dec
dec
psubusw
push
add
mov
mov
call
je
mov
push
pop
movsl
imul
les
addr16
scas
int
push
int
inc
call
mov
jp
sub
jp
jp
int
cltd
fld
int
arpl
in
or
or
sbb
or
jo
js
imul
dec
push
add
dec
sub
lock
pop
dec
xor
fwait
dec
pusha
sbbb
cltd
add
inc
xor
dec
test
test
in
mov
jge
mov
in
lods
lea
insl
add
sub
fadds
add
lea
lea
inc
stos
or
adc
jb
mov
dec
lea
arpl
xor
add
in
shrb
mov
or
inc
rolb
xor
sub
adc
scas
mov
test
mov
in
mov
dec
test
push
js
sti
push
sahf
mov
push
dec
ds
stos
loope
push
mov
push
dec
stos
xor
jg
aam
or
call
fcompl
mov
fldenv
insb
dec
pushf
jnp
cmpsl
add
mov
nop
mov
std
iret
push
test
bnd
bound
inc
fiadds
insl
push
cmpsl
sub
das
enter
sub
iret
cmp
iret
xchg
fdiv
sub
mov
lods
sub
ficomps
fnstenv
mov
insl
jne
pop
cpuid
or
addb
xor
add
jmp
dec
mov
push
dec
inc
test
dec
push
dec
inc
and
inc
add
dec
sub
popl
adc
xor
test
dec
jle
cmp
sbb
xchg
fld1
jmp
xchg
xchg
pop
je
ret
pop
ret
cltd
fstps
sbb
test
test
mov
or
dec
and
testb
jb
add
test
fcmovb
popa
add
xlat
push
push
add
imul
mov
cltd
push
fldl
add
loope
dec
inc
addr16
ret
inc
dec
dec
pop
inc
xchg
mov
add
mov
adc
mov
adc
sbb
test
push
cmpb
orb
lds
int
sti
sub
roll
dec
roll
mov
cltd
lods
shll
test
rcll
shrl
mov
cmp
lods
jle
shll
jnp
test
pop
pop
adc
lods
sub
lods
add
inc
test
add
ds
sub
in
stc
stos
inc
xor
testl
mov
and
mov
enter
inc
cltd
mov
lea
lcall
or
mov
scas
mov
insb
jbe
sti
sub
pusha
xor
mov
in
jmp
push
cmp
sbb
add
mov
and
push
mov
les
adc
mov
dec
and
xchg
add
xchg
fldcw
push
les
jns
cmp
cmp
ljmp
sub
fs
cmp
xchg
and
push
inc
test
cltd
aad
imul
aam
or
imul
fiaddl
dec
inc
lods
push
fs
cltd
fsts
inc
loopne
adc
scas
aad
test
jle
lock
test
stc
pop
test
test
test
dec
shrl
test
loop
mov
jmp
sub
ret
test
daa
ret
xchg
stc
fcmovnb
loopne
pop
ret
push
pop
jecxz
dec
xchg
lods
push
ret
dec
or
loop
popa
mov
ds
int
sbb
flds
add
stc
lret
mov
sbb
push
jo
add
mov
inc
aaa
jecxz
mov
cmc
add
inc
test
pop
inc
xchg
stc
loopne
loopne
dec
inc
push
or
dec
push
lods
pop
inc
dec
or
lods
mov
xchg
mov
loope
test
fiadds
loopne
lret
adcl
dec
lods
mov
loop
call
xor
add
movb
fs
mov
cltd
or
mov
dec
mov
ja
push
mov
sub
push
test
filds
xchg
stc
push
push
loopne
rolb
push
nop
es
dec
push
lods
mov
dec
popl
loop
sbb
jmp
inc
int
jle
jo
inc
jp
push
inc
jg
xor
inc
add
inc
sub
inc
cmp
inc
xchg
f2xm1
mov
add
xchg
sbb
xchg
xchg
test
push
popa
xchg
test
xchg
repz
aam
fnstsw
sbb
lds
cwtl
aad
in
clc
sub
test
cmp
or
xor
xchg
dec
pop
lods
jnp
fucomp
or
fs
jp
or
add
mov
sbb
and
incl
jle
je
jo
lods
in
outsb
pop
mov
mov
inc
repz
mov
addr16
das
inc
add
fbld
je
lods
push
das
ret
adc
fwait
dec
mov
dec
mov
cmp
mov
movb
add
enter
mov
mov
add
push
test
dec
out
xor
xchg
inc
aam
or
or
mov
je
cmpsl
inc
fsubrl
jmp
dec
jnp
roll
daa
mov
adc
sbb
loop
jno
mov
or
sub
dec
test
test
out
es
or
mov
hlt
push
cmp
scas
pop
sub
xchg
dec
push
test
mov
aam
or
push
mov
daa
pop
mov
mov
mov
mov
cwtl
lret
fbld
mov
js
mov
dec
repnz
in
add
out
add
lock
out
inc
pop
mov
pop
sub
jg
jo
daa
inc
or
cltd
cmp
xor
jp
lret
and
fildl
ss
lods
cmp
dec
lods
push
pop
add
sbb
jge
pop
test
push
mov
cltd
mov
cwtl
js
cmpsl
pushw
fildll
bound
dec
sbb
inc
cs
cli
cmp
sub
xchg
das
xchg
mov
xchg
fiaddl
fcompl
xchg
push
fcoml
xchg
imul
mov
cli
cltd
push
mov
lcall
ret
cli
and
jp
add
push
test
lods
cmp
inc
xchg
les
je
cmp
pop
cmp
into
or
xlat
cmp
mov
fcompl
cmp
inc
fsts
xor
ja
cmp
sub
inc
fiadds
pop
shr
ret
mov
addl
sbb
jp
add
inc
or
mov
inc
movl
jmp
jnp
test
rolb
in
les
subl
call
and
mov
jne
xchg
xor
lods
or
jb
sti
jl
pop
mov
out
repz
sbb
adc
cmc
lea
iret
push
dec
jle
inc
push
push
decb
inc
movsb
mov
iret
mov
dec
scas
or
movsl
mov
test
adc
inc
in
mov
mov
jo
stc
xchg
stc
xchg
fmuls
pop
test
xorb
int
cmp
aaa
dec
sub
repz
dec
inc
inc
fmuls
daa
test
lods
out
sbb
xlat
cmp
test
enter
jns
dec
fsubrs
in
loopne
pop
pop
jmp
lods
ja
ret
xchg
pop
push
pop
or
rcrb
orb
orl
iret
jb
popa
adc
jl
mov
mov
xorb
mov
push
rorb
fsubl
push
mov
test
xchg
sbb
jno
je
sahf
mov
xor
cld
add
ret
push
cld
hlt
push
mov
mov
lods
mov
cltd
aam
shll
mov
ret
xlat
scas
cmp
jle
inc
loope
sbbb
fs
cmp
fldcw
xchg
bound
sahf
pop
cmp
cmp
xchg
repz
bound
xor
mov
out
and
leave
mov
fstpl
je
lock
es
clc
ret
cmc
or
jb
ss
xchg
fldenv
push
mov
adcb
enter
pop
jns
pop
jg
sub
mov
lods
mov
mov
mov
add
cmp
xorb
jmp
and
adc
nop
out
ss
sbb
neg
pop
daa
adc
or
rcrb
dec
cwtl
scas
or
lcall
sub
sbb
mov
push
push
mov
mov
aaa
outsb
mov
leave
lret
stos
daa
dec
adc
sarb
adc
nop
mov
cs
mov
push
scas
mov
int3
mov
clc
mov
sbb
and
mov
sbb
dec
xor
cmp
stc
mov
mov
jo
xor
enter
out
clc
or
mov
std
xchg
xchg
icebp
out
mov
pop
outsl
push
inc
loopne
push
imulb
mov
push
mov
cmp
and
pushf
cmpsl
cmp
inc
sbbl
inc
scas
jne
jecxz
call
lds
fimull
sarb
jle
int3
mov
arpl
cmp
fimull
stc
jle
sub
lods
cmpsl
mov
movsb
push
push
movsb
addb
cmp
mov
cmp
ljmp
xchg
pop
sbb
insb
rcll
cmp
cmp
mov
scas
mov
add
test
rolb
faddl
jae
aaa
lods
lods
sub
ret
push
pushf
cmp
dec
aad
jl
addr16
dec
xlat
lods
jno
movsb
mov
mov
pop
sahf
movsl
ret
lods
sti
lds
jnp
daa
out
pop
pop
aam
mov
pop
sahf
ficoml
xchg
inc
scas
pop
jle
dec
lods
adc
daa
or
push
sbbl
push
scas
add
lds
rolb
scas
test
xor
mov
cmp
aad
stos
insb
je
inc
cmp
cwtl
add
push
mov
xchg
mov
pusha
repz
sub
sbb
cmp
cmp
mov
xor
leave
sahf
xchg
leave
xchg
push
pop
lods
shll
sub
mov
mov
mov
test
mov
faddl
push
dec
push
sbbl
mov
cmp
mov
fst
xor
testl
cli
stc
mov
pop
mov
enter
stos
jg
loop
cmp
jnp
daa
shrb
rcll
mov
dec
dec
sahf
cli
mov
inc
aas
call
lds
lock
jl
inc
fnstcw
add
sub
incb
add
jp
sbb
cmp
jle,pn
pop
test
ja
push
dec
add
ds
out
xlat
sub
int3
mov
orl
and
fldl
mov
movsb
jo
jle
sub
inc
fcompl
dec
lods
dec
jle
fadd
xchg
fnsave
mov
jmp
aas
xor
sbb
inc
dec
loopne
and
enter
push
adc
push
mov
mov
or
mov
inc
out
mov
mov
jne
sub
xchg
dec
std
movl
je
cmp
movsb
fldenv
sbb
push
cmp
xor
rolb
mov
jge
or
imul
mov
inc
xchg
test
loopne
jb
jp
mov
jmp
cmpb
or
mov
mov
or
lret
orb
pop
ds
aas
mov
pop
cltd
stc
push
and
es
sahf
insl
sbb
pusha
mov
gs
into
test
aad
add
dec
and
and
fxch
sub
dec
clc
inc
test
fmuls
out
dec
inc
mov
add
sub
inc
inc
test
fwait
lahf
popf
into
inc
loop
push
adcb
repnz
pop
and
xchg
stc
mov
push
test
mov
mov
mov
sbb
cld
mov
out
add
sub
incl
fldenv
sbb
push
lcall
add
cwtl
out
mov
inc
mov
cmp
jne
mov
ds
inc
ja
das
mov
lods
iret
dec
sub
cmovl
cs
mov
loop
scas
dec
je
jg
daa
jg
push
or
lods
pop
jge
into
jg
iret
mov
xchg
and
test
mov
test
arpl
lods
addl
push
lret
mov
sti
repnz
or
mov
pop
dec
repnz
int3
or
fcoml
fldl
addb
inc
je
or
mov
icebp
sbb
adcb
add
pop
leave
xchg
adc
adc
mov
into
xor
or
fnstenv
scas
cltd
sub
imul
push
fs
aad
dec
out
lds
stc
jb
icebp
jge
sbb
sub
cmp
inc
incl
pusha
int
dec
gs
mov
add
and
test
imul
push
icebp
dec
mov
icebp
repnz
xor
mov
inc
pop
xor
push
or
lods
ret
ret
jle
fldlg2
xlat
xchg
xchg
addr16
jnp
mov
ret
xchg
adc
jmp
cltd
push
movsl
jno
stc
mov
mov
lds
dec
lods
add
stc
mov
cmpsb
test
into
mov
out
aam
pop
test
cli
xor
mov
fidivrs
movsb
xor
fdivrs
std
jae
mov
vmptrst
push
fcompl
hlt
mov
loope
add
inc
jo
xor
je
or
je
je
lods
jno
push
fdivl
je
cmpsl
mov
sarl
xor
add
je
roll
test
out
dec
or
test
sub
addr16
mov
loopne
into
movsl
push
mov
out
aas
repz
ljmp
test
repz
mov
inc
repz
adc
inc
fwait
mov
adc
stc
jno
out
jo
xor
adcb
sbb
add
lods
sahf
inc
push
add
push
sub
jae
test
jae
mov
mov
fistpll
roll
fdivr
mov
imul
cmp
mov
pushf
dec
mov
pop
mov
fsubl
inc
rcrl
int3
outsb
dec
out
je
out
push
in
fiaddl
movsl
call
inc
push
dec
or
dec
mov
add
lods
inc
or
repz
ss
mov
sti
xor
sahf
aad
mov
jge
mov
sbb
leave
push
mov
lock
xlat
stos
out
cltd
into
sub
ds
in
inc
iret
int3
mov
xor
stos
sti
adc
mov
dec
dec
fldcw
out
inc
fdivs
ret
pop
int
push
xchg
lcall
mov
fistpll
mov
imul
int
in
dec
aad
loopne
add
xor
rorb
lods
mov
pusha
daa
lea
mov
jmp
mov
push
add
loop
sbbb
loope
les
aad
cwtl
nop
push
lods
push
rorl
orl
fdivp
lock
xlat
fidivs
sbb
xchg
lahf
scas
pop
sub
mov
mov
scas
lods
dec
in
sahf
fiaddl
cmc
push
icebp
dec
cs
leave
dec
and
sub
and
pop
push
add
add
jbe
dec
sbbb
mov
xor
xor
aam
pop
sbb
or
and
test
dec
add
jle
rcll
fmull
lods
mov
dec
cmpb
out
push
dec
and
lcall
int3
lcall
daa
push
dec
fdivs
iret
arpl
cmp
xlat
mov
sbb
jne
daa
mov
sbb
aad
mov
inc
addb
and
dec
mov
xor
jl
mov
or
lahf
cmp
lods
movsb
clc
dec
fsubl
mov
popa
pop
add
fimuls
pop
and
lods
ja
sub
fbld
sbbb
pop
test
cltd
mov
pop
cmp
fisubl
and
mov
inc
adc
js
and
js
dec
bound
push
js
mov
pop
push
js
loopne
fiaddl
int3
inc
dec
test
movl
mov
dec
aas
pop
sub
scas
fisttpll
mov
or
daa
outsl
and
ret
movsb
aaa
daa
mov
adc
xchg
push
sbb
mov
dec
cmpb
mov
test
movsb
negl
imul
loope
mov
and
or
mov
aaa
js
stc
jl
fnstenv
xchg
xorb
aaa
dec
fcompl
inc
lcall
xor
gs
and
xor
mov
jge
jo
aam
lds
or
out
sbb
pop
sbb
sub
pop
faddl
frndint
mov
lea
mov
jns
adc
or
pop
lds
add
cmp
sbbl
lods
mov
fs
lret
inc
lret
dec
jns
cmp
or
and
enter
je
push
push
mov
sarb
dec
cmp
cld
xchg
mov
or
adc
inc
aas
ret
arpl
fnstenv
dec
sub
wrmsr
out
test
shll
fstps
inc
pop
test
inc
stc
xor
mov
dec
inc
jle
loopne
jp
rcrb
inc
xor
ja
and
incb
pop
fistps
mov
fstp
sub
and
sub
out
aaa
stos
inc
into
mov
cmp
mov
lahf
adc
das
std
mov
jo
sub
test
xchg
pushf
sarl
cmp
dec
pop
push
leave
mov
mov
pop
out
and
dec
subl
vpavgb
xor
lahf
pop
leave
sbb
repnz
aaa
addl
pop
insb
or
xor
adcb
mov
fcoms
adc
int
jmp
mov
jnp
mov
mov
imul
hlt
and
testl
ret
data16
pop
dec
enter
jmp
orb
ljmp
data16
les
jge
jmp
mov
mov
movsb
xchg
sub
mov
ret
mov
ret
in
mov
xchg
xchg
outsl
xchg
pop
int
fisttps
pop
jns
mov
push
cmp
sbb
popa
push
repz
daa
mov
in
jnp
out
push
push
sbb
mov
fidivs
cmpsb
sahf
push
cs
mov
int
lea
repz
and
xor
movb
mov
push
js
pop
mov
mov
lret
cltd
sbb
sub
mov
add
mov
push
mov
pminsw
xor
jl
lods
adc
pop
lods
fwait
mov
pop
or
lods
and
push
mov
insb
jns
mov
xchg
xchg
psrad
push
test
inc
cmpsb
roll
mov
cmpsb
mov
inc
xlat
dec
xor
cltd
mov
jb
sub
dec
andb
mov
dec
lret
divl
ja
int3
sahf
mov
mov
mov
fimull
or
adc
pop
sarb
push
aam
mov
dec
cli
or
add
aam
pop
lret
xor
aas
psrad
fsubr
sub
mov
lea
fstps
push
inc
rcll
add
outsb
adc
or
cmp
aad
push
sub
sbb
push
inc
inc
sub
mov
aam
cmp
mov
add
push
mov
jb
pop
imul
dec
mov
outsb
dec
mov
add
int
sub
mov
lods
sbb
dec
scas
fldcw
stos
jns
mov
subb
stc
ds
or
adc
adc
daa
sub
orb
or
mov
mov
loopne
push
rcr
subl
ret
fdivl
roll
jnp
push
test
jl
cmc
stos
cmp
inc
or
shll
add
lcall
sbb
cwtl
inc
sbb
mov
pop
and
push
imul
pop
fs
add
test
out
pop
jecxz
mov
sub
rcl
mov
sbb
sbb
adc
inc
pop
add
inc
ret
xor
mov
push
xlat
sub
lret
mov
mov
sub
ret
addr16
arpl
nop
mov
lahf
loopne
jns
fdivrl
enter
pop
push
dec
and
or
test
xor
xor
sub
cmpsl
xorl
sub
cld
cltd
push
mov
test
sub
or
sub
cmpsl
inc
jo
sub
pop
std
imul
jns
mov
imul
pop
repz
roll
xor
int
out
adc
shll
inc
pop
inc
xchg
mov
sbb
into
fstl
jecxz
addl
imul
add
scas
xorl
or
cwtl
inc
fucomp
push
push
call
mov
ss
out
andnps
imul
cwtl
inc
pop
enter
scas
stos
clc
pop
push
lcall
sbb
push
in
add
scas
push
fucomip
cltd
fbstp
dec
mov
lea
insb
xchg
inc
jnp
pop
jo
cs
add
test
push
jmp
or
js
cmp
pop
mov
test
inc
flds
push
scas
dec
mov
lods
outsb
loopne
dec
lods
mov
dec
mov
dec
outsb
mov
dec
add
outsb
xlat
push
out
test
int
cmp
add
fdivrl
and
iret
cmp
add
or
cmpsl
or
lods
jp
test
dec
xchg
sbb
nop
lods
fdivrl
in
enter
cmpsb
add
out
add
or
pop
insl
sbb
out
cmp
xchg
int3
push
shr
cs
ret
cmpsl
popf
fs
in
pusha
fdivrl
cmc
sub
cmp
push
sub
xchg
dec
sub
dec
imul
cltd
mov
insl
sbb
insl
pusha
fdivl
push
inc
cltd
push
mov
add
push
mov
insl
cltd
jle
inc
les
dec
insl
fs
addb
xlat
mov
outsb
adc
mov
arpl
mov
frstor
pop
push
pop
lock
aam
ret
or
ret
insl
xor
lock
cld
adc
mov
inc
out
dec
jecxz
inc
push
sbb
enter
inc
out
rclb
mov
ror
sbb
sti
xor
js
and
lods
es
movsl
jg
stos
add
dec
frstor
cmp
xor
imul
dec
aad
xor
stc
mov
loopne
dec
lods
mov
add
jo
inc
dec
mov
dec
jo
fsts
jp
inc
faddl
test
dec
cmp
ret
scas
mov
xchg
scas
lds
dec
mov
xchg
pcmpeqb
sub
mov
and
inc
lahf
jb
dec
xor
xor
jne
daa
aad
out
outsb
jns
cmp
add
out
sub
jns
out
sub
out
imul
andl
jns
inc
gs
dec
leave
and
dec
ljmp
js
mov
sub
jnp
aaa
movsl
and
xor
jne
jbe
lds
lea
push
push
ret
ljmp
dec
inc
inc
je
add
ficoml
int3
ljmp
dec
scas
pop
add
fnstenv
cmp
outsl
adcb
xchg
add
adc
das
push
inc
lock
fcoml
test
test
sahf
andl
push
stc
lret
faddl
jo
lret
cmpsl
and
mov
cmp
inc
and
cmc
sbbl
xchg
cs
sti
add
xor
adc
xchg
daa
mov
mov
shr
adc
push
cwtl
das
mov
mov
and
mov
xor
sub
js
push
arpl
fsubrl
loop
xor
pop
js
cmpsl
adc
aad
jb
xchg
jle
xor
lds
inc
fldenv
aad
loop
int3
movsb
test
mov
push
dec
mov
jecxz
jmp
and
and
inc
dec
repnz
push
xor
inc
pop
pop
andl
insl
and
lods
es
and
movl
xor
and
mov
andl
test
and
jmp
cltd
xchg
int3
or
fs
bound
ret
mov
push
bound
test
xchg
xor
mov
adc
mov
fst
cltd
xchg
jp
cmpsl
push
adc
fmull
and
mov
fs
loope
pop
daa
cwtl
xor
loope
mov
dec
pop
loope
cmpl
gs
add
loope
dec
je
lahf
mov
testb
int3
cmpsl
out
mov
ds
and
sbbl
cmp
and
fcoms
mov
sbb
adc
sbb
fwait
and
roll
or
jne
adc
fmull
dec
inc
push
inc
aas
ret
and
or
loopne
mov
popa
sbb
and
stc
sub
test
popa
push
test
lods
faddl
dec
test
popa
loop
sbb
mull
or
jge
mov
pop
fldenv
xchg
loope
aam
push
or
inc
cld
ror
dec
pop
sbb
addl
sarb
pop
dec
repz
cli
cwtl
lahf
cmp
or
jg
jo
in
push
lock
sub
int
in
mov
push
fstpt
push
xor
rcrl
int3
xor
roll
mov
add
sbb
xor
and
mov
out
out
or
and
xor
pop
dec
fisubs
xor
inc
int3
push
xchg
sub
push
add
mov
xor
sti
add
mov
push
pop
and
mov
aaa
and
push
aad
fs
mov
fisubl
add
mov
add
mov
ret
fs
imul
or
fisttps
fs
xchg
push
cmp
or
jl
xchg
test
mov
cwtl
ficomps
cltd
pop
jmp
and
and
je
aam
push
cmpsb
iret
stc
popa
pop
cmpsl
push
xor
add
iret
and
push
adc
iret
mov
dec
or
mov
scas
xchg
cltd
xor
jecxz
dec
push
lods
stos
jecxz
test
sbb
cltd
fsts
aad
dec
lcall
jecxz
imul
orl
test
loopne
mov
int
cmc
leave
and
sbbl
inc
arpl
xchg
mov
cmp
pop
or
leave
xchg
test
into
inc
dec
and
enter
add
inc
cmp
inc
sub
dec
fwait
lods
mov
fnstenv
pop
jo
arpl
push
adc
cmpsl
sbb
daa
push
repz
aas
sub
sub
xor
arpl
test
adc
cmp
jp
cmp
add
fcmovbe
int
cmpsb
fisttps
mov
fs
or
inc
lcall
add
sbb
and
insl
addb
adcb
stc
xor
test
in
int
out
or
scas
out
jb
mov
adc
jmp
xchg
xor
fbld
xlat
out
sahf
gs
enter
xchg
lcall
rorb
mov
stc
mov
inc
out
popa
insl
das
iret
mov
ret
dec
fsub
dec
sahf
adc
stos
push
mov
mov
out
data16
xchg
push
mov
sub
mov
sub
scas
jge
sbb
ljmp
push
inc
inc
enterw
cmove
popl
mov
js
rorl
xor
push
dec
rcrl
sub
subl
movnti
lea
mov
mov
dec
fnstenv
or
push
pop
test
dec
jbe
shr
arpl
dec
add
or
pushw
mov
retw
or
jo
data16
aam
mov
dec
data16
cltd
fxam
adc
cmc
movsl
sub
movsl
into
add
movsl
sub
movsl
dec
dec
add
movsl
and
pop
sbb
stos
mov
push
or
sbb
fsubl
inc
mov
sti
cmp
stc
push
rorl
aas
in
or
cmp
inc
push
adc
mov
movsb
int
lcall
pop
in
xor
pop
inc
pop
insb
daa
test
in
push
lds
mov
add
jle
int
jle
mov
and
lods
jg
adc
and
and
xor
enter
call
mov
xchg
test
pop
in
sbb
or
mov
rcr
dec
add
iret
push
lcall
cwtl
ret
mov
stc
leave
int3
and
push
test
dec
pop
mov
fstps
in
ficompl
lret
inc
test
fcoms
mov
enter
les
mov
fwait
dec
or
jns
leave
inc
mov
dec
test
mov
cld
inc
aaa
cmpw
cmp
push
jbe
ret
mov
lods
rcr
rcrl
lcall
fxch
int3
mov
push
or
inc
test
fwait
cld
pop
cwtl
rorl
scas
iret
js
mov
cld
daa
dec
mov
cli
hlt
call
ljmp
dec
out
mov
ret
mov
dec
sbb
outsb
call
pusha
sub
cmpl
inc
cli
fmul
push
xchg
lock
test
rcl
or
in
pop
xchg
test
sarb
mov
mov
or
test
add
sbb
push
inc
fisttpl
enter
add
cmpsl
les
inc
lods
popl
call
lds
push
ljmp
push
or
jo
into
movsb
lock
push
sbb
aad
sbb
ret
sbb
cmc
cmpsl
sbb
cmpl
incl
mov
imull
icebp
mov
out
xlat
push
fcompl
pop
addl
mov
dec
enter
add
and
arpl
cmpsl
pop
or
mov
mov
addb
lods
adc
insb
or
or
enter
xor
dec
incb
cmpsb
push
in
cmp
in
sbb
and
add
or
pop
aad
movsb
and
mov
pop
mov
mov
jne
lods
cmp
cmp
fisttpll
pop
bnd
test
test
xchg
jmp
icebp
fs
or
sbb
fistl
mov
mov
je
pop
adc
or
iret
mov
xlat
mov
loopew
dec
icebp
mov
cmpsl
pop
and
lds
sub
mov
aam
or
mov
test
int3
add
fyl2xp1
xchg
mov
inc
fimull
int3
enter
mov
ret
test
test
int3
iret
ret
mov
push
jp
lahf
or
cwtl
into
xchg
jo
fiaddl
dec
leave
test
push
idiv
jo
rorl
mov
rcl
cmpsl
jbe
mov
sub
fst
lock
cmpsl
mov
addr16
xchg
pop
jp
adc
cmpsl
cltd
cmpsl
fsubs
inc
dec
mov
mov
scas
aam
shrl
inc
add
pop
cmpsl
stos
xor
jb
test
int3
test
stos
xor
dec
mov
and
cltd
mov
dec
mov
xchg
cwtl
mov
fsubl
or
test
int3
mov
test
mov
add
mov
test
sbb
mov
lcall
cmpsl
mov
add
mov
sbb
cwtl
pop
leave
out
push
mov
inc
jae
or
lret
or
xor
inc
cwtl
fstpt
test
int3
fadd
rorb
fstpl
inc
dec
aaa
fldenv
test
mov
gs
inc
dec
pop
fldenv
stos
aam
shrl
inc
dec
dec
lcall
mov
jo
mov
lcall
sub
sbb
cltd
sub
mov
lods
les
dec
jns
lods
mov
inc
arpl
cmp
dec
dec
fwait
mov
pop
lahf
ret
jbe
push
movl
out
addl
add
pop
lods
jg
jae
inc
mov
fsubl
xor
leave
fidivl
and
xchg
ficoms
rol
xchg
push
or
inc
dec
push
xchg
or
test
aam
rcr
imul
and
sbb
xor
std
cltd
pop
pop
stc
icebp
cltd
xor
nop
mov
jo
mov
orl
popf
stc
jecxz
test
mov
pop
addr16
adc
dec
push
in
adc
pop
or
push
pop
xlat
jl
cli
mov
lods
fwait
es
inc
iret
xor
roll
push
mov
popf
outsl
xchg
jb
fucomip
fildl
jnp
xchg
in
int
push
aaa
and
scas
test
xor
inc
mov
fyl2xp1
aaa
ror
adc
test
mov
rolb
cmpsl
shll
int
rcrl
fiadds
dec
fisubrs
lcall
mov
sub
xchg
ret
push
and
cmp
mov
mov
ss
sti
outsb
xor
repz
pop
insb
jp
cli
fnstcw
mov
decl
or
je
movb
sub
dec
movsb
dec
dec
add
adc
movl
or
sbb
mov
mov
mov
mov
jp
push
in
addr16
shl
mov
xchg
sbbl
cmp
push
xchg
xor
or
sub
cmp
xlat
cwtl
addr16
call
mov
push
push
cltd
cmp
clc
cmp
stos
add
xchg
aad
test
in
loopne
push
mov
mov
jno
pop
popf
or
movsb
stc
mov
loopne
or
repnz
inc
jmp
scas
cmp
push
shll
or
push
data16
add
and
inc
lcall
loopne
fs
adc
mov
sbb
mov
daa
or
xchg
enter
add
adc
or
andb
xchg
popf
sbb
test
ror
push
mov
and
adc
test
and
js
pop
lcall
stc
in
jne
sub
enter
sbb
or
insl
or
fsqrt
sub
loopne
fmul
movsl
jo
stc
aas
mov
push
pop
sti
and
push
dec
sbb
shl
lock
inc
lds
inc
mov
adc
add
fadds
xchg
xchg
addr16
mov
dec
xlat
cli
mov
mov
pop
dec
into
sub
mov
pop
add
loopne
sbb
inc
pop
pop
cwtl
mov
fnstenv
inc
xchg
inc
push
sbb
inc
and
cli
xchg
mov
orb
fbld
ljmp
push
add
xchg
fwait
inc
sbb
mov
add
inc
add
fiadds
inc
or
dec
xor
arpl
add
xor
enter
pop
call
pop
xor
fld
out
mov
inc
in
stc
sub
popf
stc
sbb
fbld
xchg
nop
or
hlt
inc
aas
mov
test
xor
or
enter
inc
int3
ds
push
test
cmpsb
cmp
lods
stos
popa
and
sub
enter
enter
cld
sbb
inc
lahf
dec
pop
ja
jmp
or
inc
jb
in
je
ret
adc
shlb
fstpl
dec
or
and
xchg
or
bound
les
mov
and
divb
es
sahf
push
jmp
sub
int
shl
push
xchg
out
fimuls
mov
in
pop
push
repnz
jl
mov
adc
mov
leave
arpl
lds
inc
ja,pn
int
xchg
dec
pop
outsl
jmp
daa
dec
lds
xor
push
xlat
aam
into
push
in
push
stos
loope
fisttpll
jo
sbb
adc
sub
add
mov
sub
outsb
enter
arpl
dec
into
mov
faddl
out
sub
jno
test
jl
mov
test
fcmovbe
int3
push
mov
popf
push
cmp
adc
hlt
mov
sbb
es
jp
inc
test
loope
sbb
push
mov
ja
ljmp
mov
into
loopne
rcl
pop
sbb
mov
lea
stos
push
push
ja
mov
dec
cwtl
cmp
add
xchg
mov
adc
jp
mov
faddl
push
dec
mov
nop
imul
pop
iret
dec
repnz
adc
repz
imul
mov
jle
inc
mov
xchg
dec
popf
mov
xorb
inc
pop
sti
pop
mov
ret
fistpl
pop
xchg
mov
lds
fstl
xlat
enter
pop
or
xlat
cli
jecxz
push
stos
jge
test
fistl
cwtl
adc
inc
lcall
adc
xchg
mov
mov
stos
dec
jb
push
scas
adc
leave
lods
inc
movsb
cmp
call
xchg
insb
mov
pop
mov
test
xor
push
mov
popf
dec
push
pop
mov
shrb
sbb
outsb
ficoms
mov
lcall
stc
js
insl
into
sub
add
test
popf
je
lret
cli
into
xlat
mov
cltd
push
xor
test
clc
loopne
xchg
mov
cld
iret
test
push
inc
mov
ret
pop
test
cwtl
in
mov
mov
xlat
mov
outsb
pop
lods
pop
pop
out
mov
arpl
pushf
popf
dec
push
jg
mov
mov
inc
es
cmp
adc
fldt
pop
jns
pop
shll
cmc
loop
out
mov
les
cld
xchg
imul
and
push
lods
aaa
inc
inc
sbb
cwtl
lahf
add
mov
les
cli
adc
pop
adc
test
mov
das
lcall
imul
addb
addr16
arpl
lods
mov
sub
pop
mov
out
dec
daa
push
mov
mov
into
aaa
sub
jl
iret
pop
mov
dec
and
mov
ret
mov
insl
fcoms
inc
add
cwtl
enter
pop
add
mov
jnp
mov
outsb
fbld
aad
inc
push
xchg
cmp
leave
jg
imul
inc
inc
mov
xchg
push
insl
addr16
jno,pt
pop
sti
and
test
mov
cltd
push
js
or
mov
cmp
clc
inc
push
mov
jg
mov
pop
dec
scas
incl
dec
call
inc
rolb
loop
iret
jo
mov
xorb
jp
clc
pop
out
fdivr
aas
inc
andb
and
xor
mov
rcl
push
xchg
inc
inc
jnp,pt
cli
in
mov
sub
pop
xchg
xchg
addr16
ret
push
sub
mov
jl
ficoml
xorl
imull
push
data16
mov
or
test
mov
iret
adc
mov
cmpsl
popf
cli
ret
mov
sbb
aam
or
jl
out
and
sub
add
psllq
outsb
sub
jb
mov
xchg
into
mov
xchg
jp
dec
sarl
inc
fxch
mov
test
in
cmp
arpl
mov
sub
lahf
test
adc
inc
xchg
and
nop
jne
fisubs
inc
push
enter
sbb
outsb
mov
add
testb
dec
fmull
rol
jbe
fs
popa
sub
test
rclb
push
and
mov
ret
push
shr
xor
rol
shrb
dec
movsl
aas
or
jge
scas
subl
std
in
jmp
push
jg
adc
divb
mov
data16
lret
call
cmp
mov
push
insl
push
add
dec
mov
repnz
mov
jo
addr16
add
cmp
add
xor
popa
xlat
aad
and
xor
or
adcb
dec
or
ret
push
jo
push
inc
dec
xchg
pop
jo
stc
daa
jecxz
push
jb
cwtl
out
or
bound
leave
lcall
jae
rcrl
fnstcw
xchg
push
adc
pusha
xchg
or
and
inc
jo
jl
mov
ret
fists
mov
mov
xchg
jo
xchg
inc
sbb
call
add
pop
ret
call
inc
or
adc
xchg
mov
xlat
mov
push
jecxz
xor
dec
loopne
xor
lods
aad
mov
mov
cmpsb
orb
inc
jae
mov
mov
test
lret
mov
jle
sub
dec
addb
sub
cmpsb
adc
jle
mov
test
mov
mov
addl
inc
inc
jae
xorb
mov
or
ret
xor
mov
inc
aam
mov
mov
jns
and
rcll
inc
mov
or
mov
lods
shrb
adc
push
sub
roll
pop
cmp
pop
jo
mov
xor
adc
and
fwait
cmpsb
fwait
dec
fiadds
dec
add
add
fildl
push
stc
jl
mov
xchg
pushf
test
xor
push
mov
mov
or
and
dec
fcmovnbe
push
scas
mov
push
push
inc
lock
inc
outsb
dec
les
pop
cld
push
inc
jle
xchg
add
aam
aam
sub
aas
cltd
cmpsb
sahf
aad
ret
je
xor
call
subl
nop
pushf
mov
dec
inc
inc
sub
in
aam
add
xchg
imulb
stos
stos
cmp
mov
dec
push
xchg
xor
add
pop
jns
xlat
iret
ja
aam
enter
mov
adc
mov
leave
sub
imul
lods
add
push
add
imul
cwtl
xor
lret
jl
sub
inc
cld
or
adc
loop
pop
pop
popa
aad
xchg
mov
loopne,pn
in
or
orb
imul
xchg
fdivr
adc
xor
pop
sub
fwait
and
inc
add
push
cmp
lods
jle
fsubr
iret
outsl
inc
dec
cmpsb
adc
push
cmp
add
stc
lahf
adc
pop
jne
xchg
and
icebp
mov
jle
push
xchg
stos
dec
and
xor
jp
mov
mov
pushf
mov
orb
jl
jbe
subl
bound
fdivl
scas
scas
sbb
hlt
orl
loop
hlt
out
fnstenv
push
pop
add
pop
js
pop
stc
insl
outsl
xchg
aaa
dec
lcall
leave
dec
mov
mov
test
stc
fs
imul
mov
lods
mov
push
sarb
cmp
out
std
mov
sbb
lock
adc
inc
adc
mov
xor
out
into
sub
fwait
jle
pop
push
or
cmp
dec
cmpsl
mov
mov
rcll
int
shrb
mov
jle
add
roll
ret
jns
or
mov
test
xor
xor
daa
pop
pop
push
and
fimuls
mov
orb
repnz
fwait
rcrb
pop
xchg
out
cmp
xchg
in
sbb
push
dec
and
sbb
inc
in
aad
gs
les
adc
ret
test
xchg
push
stc
pop
pop
and
mov
mov
push
popa
inc
push
mov
cmp
fmull
lds
mov
popa
sub
icebp
jo
jo
sbb
mov
mov
sub
xchg
fcomps
sbb
mov
stc
outsl
add
pop
scas
test
call
faddl
xor
add
pushf
out
push
imul
push
mov
aad
inc
stc
data16
inc
jge
rcll
inc
or
adc
dec
lods
cltd
pushf
jle
mov
xchg
mov
jno
jmp
adc
push
js
andl
fistpl
xchg
mov
push
scas
mov
xor
aaa
adc
sub
cmp
pushf
push
xlat
mov
addr16
sub
push
lods
push
cmp
dec
frstor
and
and
icebp
mov
mov
inc
loopne
das
int
test
adc
test
xor
dec
scas
shrl
push
mov
xor
inc
cmpsl
cld
mov
mov
xchg
rorl
std
iret
ficoms
fsts
dec
sbb
lods
push
push
cs
push
fs
mov
mov
icebp
lods
pop
sub
and
stos
mov
mov
cmp
into
fnstenv
cmp
and
xlat
lret
mov
xchg
gs
sbb
movsl
add
mov
pop
adc
cmpsb
and
xchg
pop
movsb
mov
rclb
dec
dec
test
stc
movsb
fmul
mov
gs
test
test
fcomps
dec
sbb
or
jecxz
push
adc
shl
jb
jnp
add
out
xor
pop
mov
outsb
adc
jp
mov
cmp
sbb
lret
xlat
fists
leave
popa
aam
arpl
sbb
push
cmp
dec
jo
pop
jp
sub
sub
stos
das
dec
test
cwtl
in
jle
adc
add
mov
mov
into
cli
movsb
mov
aas
stc
shrb
and
rcrl
add
pusha
jo
mov
in
cltd
pusha
xlat
popl
stos
cwtl
cltd
xchg
scas
mov
fldenv
or
mov
cmp
push
adc
cmpsb
dec
jmp
jno
dec
test
js
fists
data16
push
add
mov
xor
or
xchg
jb
dec
daa
dec
fcoml
lods
mov
xlat
xor
out
inc
xor
mov
pop
sahf
mov
xchg
xor
pop
mov
je,pt
loopne
cmp
out
ds
icebp
inc
test
xlat
out
pop
cltd
fstpl
or
sub
stc
sbb
test
and
or
xor
push
pop
jbe
cmp
or
mov
cmp
loopne
push
xchg
aad
push
sbb
add
push
xchg
adc
cwtl
mov
scas
or
push
push
xchg
sub
push
enter
enter
add
je
mov
shrb
add
and
xchg
popf
sub
add
jnp,pn
enter
fistpl
lret
bound
add
mov
adc
mov
xchg
cs
add
stos
out
loopne
outsl
mov
mov
stc
dec
cs
lods
sbb
mov
push
fwait
mov
imul
push
push
fsubp
sub
lret
xchg
xor
push
dec
mov
aam
dec
lods
inc
jbe
arpl
lods
adc
push
lret
and
stos
cwtl
sbb
lret
dec
xor
xor
xchg
lret
mov
pop
decb
pop
push
cmp
dec
dec
je
fwait
shrb
fstps
ss
mov
dec
lret
add
and
jge
and
ljmp
or
rdpmc
push
sub
fidivrl
mov
xchg
and
dec
and
sub
adc
xchg
cmp
inc
mov
push
aaa
xchg
mov
movsl
sub
cwtl
xchg
cmp
pusha
test
cltd
dec
and
test
out
jbe
push
jnp
and
inc
lret
lret
cwtl
pop
pop
adc
add
das
loope
xchg
mov
jl
test
sub
jp
mov
dec
loope
add
dec
jg
jbe
mov
rol
jle
pop
xchg
xchg
fmuls
cmp
or
test
add
sbb
mov
xchg
mov
adc
mov
in
scas
pushf
fwait
jecxz
iret
outsl
outsl
add
jge
lods
in
inc
ja
mov
rcl
fsubp
sti
or
and
enter
push
jmp
mov
push
aam
dec
stos
roll
dec
sub
stos
lea
stos
subb
push
or
dec
jb
cld
xor
push
mov
dec
fsub
xchg
xchg
test
enter
or
sar
pushf
movsb
or
mov
cmpsl
test
lock
lock
stc
cmp
jle
shl
pop
sub
dec
adc
lsl
clc
cmp
mov
add
mov
dec
dec
sbb
or
outsb
push
mov
add
imul
mov
ja
cwtl
mov
add
lods
dec
pop
mov
pusha
push
sbb
gs
inc
mov
shrb
mov
mov
fisubrs
aam
dec
adc
lods
test
xor
frstor
adc
out
push
xor
sub
xor
sahf
inc
dec
xor
xchg
jo
xlat
dec
and
mov
rcrb
sbbl
pop
mov
mov
hlt
or
or
add
int
test
xor
into
sub
or
mov
and
popa
sbb
cltd
or
mov
adc
mov
pop
shrb
adc
clc
lret
rorl
movsb
lret
xorb
sbb
add
dec
flds
cmp
imul
xchg
cmc
push
sub
mov
repz
rcrb
cs
jmp
add
fwait
jmp
dec
xor
in
jno
or
jne
jle
and
lcall
sub
jecxz
jno
packssdw
xchg
bound
iret
stos
sub
xchg
ljmp
pop
mov
sub
insb
fnstcw
mov
mov
imul
icebp
je
fs
clc
outsl
fldcw
xchg
jle
lcall
ss
jnp
out
jo,pt
mov
cs
dec
orl
enter
add
orb
mulb
sub
jecxz
jp
push
lret
inc
dec
push
adc
lods
xchg
lret
add
dec
lret
cs
or
stc
nop
iret
push
ss
cmpsl
mov
cmc
or
mov
mov
fmull
push
mov
int
addr16
inc
xchg
cmp
enter
arpl
test
insl
cmp
into
and
xor
jae
outsl
mov
jns
pop
bound
add
ss
xchg
outsl
pop
sub
rorb
push
jno
mov
aad
out
or
push
mov
fucomi
xchg
xor
mov
icebp
das
or
test
push
aaa
xchg
jmp
les
push
push
cli
addr16
lret
std
add
dec
mov
push
fldl
xor
inc
and
sub
call
mov
mov
sub
xor
add
mov
loop
push
cmp
inc
mov
rcl
flds
and
fiadds
shrl
negb
daa
ja
or
inc
fdivl
imul
dec
pop
sbb
gs
int3
jl
mov
jns
add
aam
out
pop
not
push
scas
mov
ror
and
sbb
mov
add
and
iret
in
leave
out
rolb
mov
test
rcrl
fdivl
xor
pop
dec
jb
cs
xor
roll
sbb
imul
mov
outsl
imul
es
or
or
lret
outsb
movsb
xchg
jmp
sbb
out
lds
fs
push
inc
push
enter
sbb
lods
xchg
cmp
cmpsb
clc
inc
mov
nop
cmp
addb
push
adc
faddl
lods
mov
and
sbb
jae
cs
xchg
ret
push
xchg
mov
sbb
mov
mul
js
mov
add
orl
mov
popf
aad
and
popf
sub
xchg
push
das
std
sbb
stc
pop
lret
xor
das
nop
mov
addr16
aaa
mov
out
push
push
lret
rolb
aad
mov
movsl
rcl
pop
fstps
xor
mov
movsl
repnz
xor
fwait
lods
cmpxchg
xor
xchg
mov
push
addr16
xlat
cs
sbb
xchg
pushf
cli
adc
test
test
pop
cmpsl
sbb
pusha
popf
les
sub
jno
outsl
cwtl
xchg
in
mov
int
lods
shll
jle
push
idivl
jmp
mov
in
stc
mov
int
lds
add
mov
jle
xchg
sbb
sbb
lret
xchg
daa
dec
mov
int
ljmp
int3
mov
movsb
les
inc
add
dec
mov
jnp
rorl
xor
stc
les
imul
sub
or
xor
jne
sbb
and
aam
add
mov
cmc
dec
sbb
mov
cs
insb
mov
mov
ljmp
insl
add
add
pusha
out
pop
cmpsl
mov
mov
dec
lea
add
xlat
js
out
mov
mov
frstor
lea
pop
sbb
and
cwtl
sahf
pop
add
jl
test
add
cli
inc
mov
rolb
pop
inc
mov
test
dec
mov
call
jns
shl
sahf
ret
imul
add
sbb
push
loop
mov
leave
cmp
into
cmpsb
cmp
lods
insl
xor
in
fcoms
inc
dec
fmull
jp
outsl
xchg
mov
cmp
jne,pt
daa
addl
adc
xchg
and
jb
lods
ror
stos
je
adc
daa
stos
sti
fwait
pop
xor
and
rcll
adc
outsb
pop
jmp
mov
pop
mov
and
cmp
cmpb
fcmove
dec
or
add
jle
sub
cltd
push
xchg
movsl
test
xor
loop
mov
shll
mov
mov
movsb
push
sub
or
shll
jno
pop
rclb
sbb
fs
dec
inc
test
add
aam
fcompp
sbb
xorb
mov
sbb
inc
sbb
inc
mov
scas
std
sub
mov
nop
xor
stos
jecxz
scas
fisubl
fs
xor
sahf
inc
xor
push
andb
cltd
sub
iret
add
mov
iret
sbb
jge
mov
in
add
xchg
mov
cmp
cmp
cltd
inc
inc
add
stos
and
fmull
test
fistl
repz
xor
in
sbb
fnstcw
andnps
cmpxchg
push
dec
mov
iret
mov
cli
pop
cltd
xchg
je
mov
and
cmpb
test
mov
das
dec
adc
cmp
test
ss
popa
jns
pop
test
pop
movsb
fnsave
add
gs
popf
subb
jp
loope
sbb
test
outsl
push
test
cltd
dec
cmp
les
decb
mov
adc
js
loope
lods
mov
int3
orb
pop
and
lcall
dec
and
stos
lea
adc
cs
mov
js
jo
popl
adc
inc
push
mov
xor
int
mov
push
pop
cltd
mov
outsl
pop
jp
xlat
xchg
dec
jb
mov
add
cmpsl
shll
lahf
inc
test
or
jo
ret
jb
popa
xor
cs
stc
jb
call
ret
mov
iret
aad
ds
pop
mov
dec
ret
dec
ret
mov
scas
mov
and
mov
inc
add
sbb
xorl
cmpsb
xchg
xor
xchg
cmpsb
fbld
xchg
icebp
sub
inc
pop
mov
faddl
loop
hlt
fisttps
fcoml
leave
mov
cwtl
lret
clc
jg
out
or
mov
mov
into
or
or
mov
test
and
mov
shll
loopne
push
cmc
outsb
std
faddp
lods
xchg
xchg
mov
test
in
push
push
lea
xchg
rclb
pop
jg
int
sbbb
fnsave
cmp
fdivrs
or
mov
andb
mov
mov
pop
stc
outsb
mov
hlt
rcr
andb
push
jae
mov
addb
int3
stc
mov
mov
out
pop
rol
add
shll
lahf
xchg
dec
aas
call
faddl
push
mov
xor
jb
nop
dec
mov
lods
pop
pop
fsubr
dec
mov
aad
shrl
fs
adc
cmp
add
and
mov
cmp
mov
and
test
loope
test
lret
inc
add
in
cmpsl
xchg
mov
cmp
lcall
push
stos
inc
sbb
mov
cltd
mov
mov
movsl
out
lret
cmpsl
dec
lods
or
pop
push
pop
pop
mov
jmp
adc
rcrl
cwtl
xchg
jmp
fmuls
mov
test
cwtl
loopne
pop
xchg
or
cltd
sbb
add
arpl
cmpsl
or
jo
les
rcrl
dec
in
bound
mov
mov
mov
rolb
jo
les
faddp
scas
bound
andb
jle
icebp
jge
mov
xor
cmp
sti
inc
add
lret
sarl
xchg
mov
cwtl
xlat
in
add
imul
cwtl
xchg
pop
loop
lds
jnp
xchg
inc
imul
and
fisttps
xchg
add
lods
insl
rcrl
lods
and
sahf
inc
mov
push
mov
ja
inc
clc
cmp
fiadds
imul
lds
out
rol
test
mov
cld
sub
mov
and
outsb
add
cmp
into
sbb
sahf
sahf
jno
jno
jmp
and
insl
mov
mov
outsb
jg
mov
outsl
arpl
inc
xor
shl
mov
push
or
cwtl
adcb
rolb
push
test
and
inc
sub
dec
inc
test
rclb
in
cmpl
sbb
aad
sub
and
arpl
ret
cli
in
fildl
bound
adc
insb
dec
insl
fadd
addr16
repz
inc
or
push
gs
test
cmp
xchg
cmc
pop
neg
pop
sbb
mov
push
fdivs
adc
test
aad
pop
add
in
imul
test
int3
adc
nop
fmull
ficomps
mov
shrb
das
sbb
and
sub
cld
pop
lret
clc
stos
loopne
in
cwtl
jl
cmpsl
pop
rcl
mov
jmp
xlat
outsb
cmp
daa
mov
or
xor
sti
cld
sarb
sbb
gs
pushf
pop
adc
xor
mov
and
out
std
jo
cld
add
pop
sahf
xchg
and
std
sub
add
test
test
cmp
fisubrl
sbb
aad
lds
dec
out
stc
aam
sahf
dec
inc
lods
loope
sahf
jne
ljmp
test
push
push
faddl
jecxz
hlt
mov
jge
pop
and
scas
adcl
dec
mov
xchg
or
int
or
or
ret
or
cs
pop
pop
jecxz
mov
data16
hlt
push
add
mov
sub
mov
dec
pop
cmp
jle
movsb
in
in
cmp
pop
lods
jbe
pusha
mov
mov
mov
mov
push
or
dec
test
cld
popf
mov
cmp
pop
push
movsl
data16
cmp
inc
int
cld
cmp
iret
push
movsb
mov
mov
jns
arpl
pop
push
xchg
nop
jbe
bnd
mov
jae
mov
int3
out
xchg
nop
push
sub
imul
mov
push
mov
ficoml
push
mov
sarb
add
dec
push
mov
add
es
cs
push
movnti
xchg
insl
in
mov
shrb
std
xor
cld
adc
jp
inc
gs
mov
scas
inc
inc
cltd
inc
out
and
pusha
ret
or
dec
and
lods
xchg
inc
lea
aaa
mov
xlat
sub
cmpsl
jecxz
add
loop
sub
sti
sub
mov
xorl
adc
movsl
push
add
aad
jb
push
sarb
mov
jb
and
jo
dec
ljmp
push
in
mov
push
sbb
and
insb
mov
or
shlb
cli
pop
ss
add
pop
mov
test
xchg
js
push
int
cli
mov
xchg
cmp
mov
jg
arpl
inc
pop
out
xchg
ljmp
scas
out
ret
push
dec
mov
in
dec
in
int
adc
jg
fldenv
push
subl
mov
jg
fsts
scas
lods
test
push
inc
pop
fmuls
enter
xor
hlt
jecxz
loope
jecxz
lret
push
mov
addl
and
cmp
test
enter
repz
ret
add
enter
mov
mov
enter
inc
adc
fistpll
call
in
into
push
mov
xchg
popa
jle
mov
push
mov
fwait
xchg
sbb
sbb
mov
cld
or
push
inc
ja
jns
or
lds
inc
repnz
inc
push
mov
inc
enter
cmp
test
cmp
mov
daa
inc
sbb
dec
xchg
test
test
mov
call
mov
loope
jecxz
jns
aam
inc
das
notl
jbe
lea
sub
es
popf
addl
stos
dec
test
test
xor
and
cltd
int3
test
inc
xchg
js
popa
test
or
lods
or
outsl
iret
iret
cmpsl
or
mov
out
sub
das
enter
js
mov
movsl
enter
rolb
xchg
pushf
add
jb
imul
enter
call
sahf
add
add
mov
or
adcb
mov
mov
cltd
test
lret
nop
add
add
push
xor
mov
int3
mov
inc
fmul
or
imul
sbb
pop
fwait
std
pop
out
fnstenv
cmp
mov
mov
stc
repz
fsubr
add
add
orl
mov
sub
dec
xor
in
xchg
inc
xchg
dec
xor
dec
int3
xor
mov
or
fnstenv
dec
orb
pop
mov
jp
jo
dec
and
ret
out
mov
mov
pusha
mov
sbb
push
icebp
and
cmpsb
in
sahf
jno
jno
test
pop
les
sub
jbe
or
lret
lcall
xor
or
out
test
mov
ret
lods
xchg
pop
cltd
js
test
push
mov
and
sbb
mov
daa
jp
data16
or
pop
push
flds
lcall
mov
xlat
aam
push
cwtl
inc
or
cmp
cmpsb
inc
adc
inc
add
inc
dec
inc
fsubr
mov
js
addr16
fstps
or
clc
out
push
jno
stc
lcall
jle
lock
and
sahf
mov
cwtl
cmpsb
push
in
js
fucomp
xchg
jecxz
mov
and
fistpll
push
mov
fs
iret
push
in
movsb
inc
sbb
or
andl
mov
stc
xchg
lds
cli
dec
jb
sbb
insb
cli
test
sbb
mov
mov
test
int
cli
dec
mov
jmp
mov
cmpsl
cmp
pop
cmp
stc
aad
pop
mov
jns
xlat
or
shr
inc
sbb
jbe
std
fwait
in
daa
lds
lods
ds
data16
inc
sub
jle
cmp
mov
stos
aaa
sti
push
xchg
lds
xorb
out
xchg
cmpsl
inc
lods
decb
sub
lcall
inc
cli
cmp
mov
imulb
aaa
insb
mov
adcb
adc
mov
dec
add
xor
jno
ficoms
dec
stc
lock
inc
mov
sbb
gs
popf
outsb
inc
and
dec
js
adc
push
jb
outsl
or
ret
out
notb
cli
stos
sbb
loop
dec
ret
lods
xor
decb
pop
fnsave
pop
inc
pop
cmp
outsb
sub
mov
mov
xchg
cmp
scas
cltd
jl,pn
sbb
ret
xor
ljmp
inc
popa
in
sub
push
shl
stos
xchg
cwtl
pop
cmp
adc
dec
repnz
mov
insl
jbe
sub
mov
sbb
icebp
rclb
fnstenv
fwait
pop
sub
mov
imul
push
xchg
cld
xchg
and
ret
dec
fmull
sub
int3
mov
pop
fs
mov
push
jle
pushf
in
mov
rcrl
cltd
aam
dec
test
mov
mov
inc
jnp
repz
xor
cld
and
das
jb
or
dec
mov
daa
into
xor
ret
mov
and
daa
mov
xor
pop
pushf
mov
mov
daa
test
cwtl
popa
mov
cmp
jne
arpl
adc
pusha
mov
push
les
rcrb
inc
sbb
cld
lret
test
mov
cltd
push
js
adc
leave
or
jb
jmp
in
ss
push
imul
fdivrs
pop
adc
mov
out
push
cmp
adc
cmp
rorb
cmp
es
ret
repz
and
sub
sub
pop
inc
loope
push
jnp
jmp
mov
xchg
mov
inc
in
add
xor
faddl
dec
mov
jl
mov
jl
inc
cmpsl
fisubrl
dec
adcl
mov
sub
or
push
add
sub
out
jmp
out
orb
lcall
push
adc
push
sub
fisttpll
lar
mov
or
pop
mov
xor
stc
cltd
cmpsb
testl
fisubl
movsb
mov
cmpsb
pop
add
push
inc
es
jnp
inc
fs
mov
scas
orb
inc
mov
lret
roll
stc
imul
out
nop
jp
push
sub
mov
sbb
xor
in
adc
cli
bound
cli
mov
mov
mov
rcr
lds
popa
mov
xchg
pop
dec
stc
mov
loopne
mov
mov
and
rcl
data16
sbb
popf
mov
mov
mov
dec
ret
sbb
stos
inc
das
out
mov
js
sub
jl
jns
gs
pop
pushf
leave
mov
push
fiaddl
int3
cld
or
jl
aas
enter
nop
mov
stc
jmp
sub
test
mov
jnp
inc
jns
and
cmpsl
add
xor
mov
mov
mov
jp
or
test
addr16
xor
fisttpl
gs
sub
sbb
dec
bound
cmp
push
cmpsl
es
jae
mov
mov
xor
ffreep
mov
xchg
pop
adc
push
push
pop
add
mov
faddp
enter
in
imul
adc
rol
rcll
adc
add
mov
sbb
pop
or
push
xchg
loopne
or
sub
out
enter
cwtl
pop
mov
movsb
test
lock
xchg
out
inc
jmp
adc
fnstcw
mov
sbb
add
int
mov
jno
add
push
sbb
cmpsb
loopne
pop
inc
popf
push
push
repnz
push
or
rol
xchg
dec
out
push
inc
loopne
mov
lahf
and
fldt
sbb
pushf
insb
pavgb
sbb
xchg
adc
pop
push
in
inc
jl
or
leave
shrl
test
push
add
xlat
inc
cli
jae
arpl
shl
inc
dec
pop
push
lods
mov
mov
jecxz
stc
push
push
mov
and
or
mov
xchg
mov
fistps
fldl
sti
jae
lods
mov
fldt
sbb
xor
lret
lret
roll
mov
enter
lcall
mov
addr16
cmp
in
cli
mov
jnp
adc
ficoms
xorl
dec
lds
push
xchg
ror
jecxz
std
inc
xchg
jg
add
in
inc
jle
cltd
and
popf
aaa
and
fsubrl
mov
mov
imul
pop
mulps
push
pop
jno
sub
aaa
inc
mov
aaa
inc
leave
pop
cmp
jns
jmp
cs
push
mov
fwait
cmc
jp,pn
clc
pop
lret
xchg
stc
jle
rol
mov
scas
inc
adc
les
xchg
add
iret
rol
aad
mov
inc
sub
mov
dec
fs
fmul
mov
unpckhps
ss
lds
shrl
ret
pop
jmp
cltd
stos
jmp
lea
repnz
ljmp
push
jmp
bnd
push
pop
mov
int3
cmp
movsl
iret
lcall
leave
adc
dec
dec
jl
cmpsl
cmp
dec
lds
inc
jl
ret
mov
cld
dec
fisttpl
push
stos
ss
cmp
addr16
inc
insl
jp
lds
ret
jle
jl
jns
sti
test
dec
or
cli
dec
pop
pop
clc
leave
ds
iret
cmpsb
dec
repnz
pop
les
cmp
pop
inc
cmpsb
cmp
lea
xor
leave
rol
lcall
lcall
or
push
ret
cmpsl
insb
xlat
mov
push
ret
cmp
mov
lret
movsb
jl
cmpsl
xlat
xlat
cli
cmpsl
mov
cltd
dec
pop
inc
cmp
push
jnp
mov
add
or
ret
push
cli
dec
adc
sub
mov
mov
mov
inc
sbb
and
pop
mov
push
push
iret
int3
dec
mov
int
mov
fcom
xlat
je
outsb
xor
movsb
mov
inc
call
ficomps
xor
cmp
adc
mov
xchg
and
jb
sub
insl
and
push
pop
jle
push
mov
test
lods
adc
pop
mov
inc
or
aam
inc
cmp
test
pop
dec
mov
xchg
or
stc
lcall
enter
movsb
ds
stc
dec
shrl
cmp
stc
jecxz
jbe
insb
inc
test
mov
cmp
mov
sti
movsb
cmc
fistpll
test
xchg
jno
add
xlat
pushf
testb
cli
mov
or
cmp
push
sarb
into
mov
or
mov
mov
sub
lret
mov
and
or
cmp
stos
cmp
pop
cmp
sub
mov
nop
push
jbe
xacquire
jp
push
cmp
adc
mov
jb
insb
test
inc
ret
push
push
in
mov
push
jmp
mov
mov
sub
adc
push
or
cmp
inc
sbb
cmp
and
stos
or
sbb
cmp
fucomip
fs
xchg
jmp
mov
sub
push
push
ljmp
push
add
enter
cmp
filds
cmp
push
dec
sub
addr16
adc
pop
sbbb
fidivl
fsub
push
out
push
bound
js
push
pop
push
sbb
in
dec
lds
fnstsw
les
into
jl
jle
cld
roll
test
cmp
and
lret
testb
sub
stc
pop
ljmp
mov
xchg
mov
cltd
jg
in
fiadds
or
lcall
xchg
js
fistl
pop
sub
xlat
jp
push
jbe
pop
mov
test
enter
test
pop
sub
pop
fs
inc
std
scas
rcll
cld
inc
jo
int
mov
inc
cmpsl
dec
or
add
ret
jmp
lahf
jmp
cli
lcall
popf
inc
sbb
add
rorl
dec
lds
test
lret
in
or
pop
les
lds
iret
push
cmc
popf
sub
pop
inc
mov
fcmovb
repnz
mov
mov
iret
sbb
enter
cmp
daa
clc
sbb
nop
fdivrs
out
xor
fidivl
popf
leave
push
repnz
daa
mov
pop
adc
pop
push
adcl
ficomps
cs
cmp
mov
push
add
pop
jbe
jmp
outsl
mov
or
cmp
repnz
not
inc
pushf
inc
jge
mov
and
add
repnz
pop
mov
adc
inc
shrl
cld
mov
out
cltd
fwait
call
xchg
fildl
inc
push
int3
nop
cmpsb
push
push
jecxz
pop
cmp
iret
adcb
ret
shl
std
js
aad
fisttps
or
roll
mov
in
ret
loop
inc
jp
mov
das
add
sarb
imul
add
ljmp
jo
sbb
and
xor
iret
enter
lret
movsl
adc
stc
sti
movsl
pushf
fstpt
pusha
cli
sbb
sbb
fyl2xp1
lods
mov
push
cmpsl
pop
leave
push
push
push
lret
mov
dec
cli
popf
ss
xor
pop
fcomp
fcompl
leave
sub
test
inc
rol
lret
cwtl
jae
xchg
jl
push
addr16
xchg
and
ljmp
xlat
sbb
ret
les
inc
cmpsl
fistl
adc
adc
cmp
sti
push
push
mov
sarl
mov
push
cmpsl
mov
push
sarl
roll
add
fstpt
jp
push
lret
aad
lcall
mov
cmp
inc
das
sbb
lcall
push
dec
inc
mov
test
inc
push
pop
push
dec
stc
adcb
scas
test
mov
mov
lahf
or
sbb
cltd
aas
and
mov
or
cmp
pop
jecxz
sub
jl
in
movsb
test
or
push
mov
mov
cld
mov
js
jge
in
idivb
sub
and
in
cmpsl
push
repz
test
vmptrst
fdivrs
jns
adc
test
jae
inc
jp
jmp
mov
test
ret
lea
lret
cmp
cld
mov
sub
dec
leave
xchg
pop
dec
fmul
xchg
jbe
out
inc
mov
aad
sbb
shrl
ret
adc
icebp
xchg
stos
mov
inc
enter
inc
inc
addr16
loopne
push
sbb
mov
dec
leave
pop
dec
iret
dec
sbb
dec
xchg
call
imul
lods
cld
sub
or
jl
enter
enter
fistl
fnstcw
enter
jns
mov
loopne
fimull
dec
inc
cmc
leave
lret
inc
fsubl
inc
inc
pop
cs
push
push
sub
adc
push
jne
sbbl
rorl
sbb
cld
xor
insb
jp
ret
mov
fsubrl
dec
push
lcall
jp
pop
sub
or
push
xor
add
mov
ret
inc
test
or
lea
push
mov
xorb
and
pop
push
and
in
lahf
roll
fs
dec
addr16
sbb
or
ret
stc
cli
lret
mov
into
cltd
jmp
add
mov
fsubl
cmp
ret
leave
sub
xchg
push
dec
icebp
lret
jns
loop
mov
jecxz
dec
adc
cmpsl
mov
rcrl
mov
pop
cmc
arpl
inc
push
inc
xlat
mov
test
xchg
push
iret
xor
add
enter
jmp
int3
add
inc
adc
mov
dec
fldenv
jle
in
orl
cld
addr16
or
stos
pop
test
ret
mov
mov
cmp
pop
enter
xor
push
xchg
stc
popf
repz
leave
outsb
jae
mov
inc
cmp
sub
testl
push
xorl
fnstsw
pop
mov
pop
bnd
pop
xlat
mov
adc
ds
popf
xchg
mov
push
into
popf
lods
fisubl
pop
ds
fsubs
sub
int
rorb
sti
fsub
rorl
jecxz
and
sbb
repz
mov
test
mov
addl
inc
cmp
enter
stos
jmp
push
bound
in
mov
orb
add
mov
les
int
cld
cltd
jg
ret
push
pop
cmc
or
adc
lcall
cmp
stc
sub
outsb
subl
mov
ret
inc
and
jnp,pt
mov
xor
xchg
mov
pop
andb
bound
ficomps
test
cmp
lock
mov
add
cli
add
push
sub
insb
loopne
sub
fiadds
stc
cli
pop
cmp
adc
out
xor
es
pop
sbb
jl
lds
mov
pop
test
sbb
push
sbb
mov
xlat
sti
les
or
ror
shr
shrb
leave
ret
cmpsl
shll
inc
sub
jp
ror
mov
cmp
dec
jno
int3
xchg
inc
ss
lds
inc
fsubs
lea
js
movsb
out
leave
sbb
add
push
iret
sti
outsb
xlat
mov
sub
ret
xchg
push
pushf
fdivrp
in
lods
jnp
inc
xor
pop
test
cmp
jb
mov
ret
xchg
mov
xchg
repz
je
clc
dec
cli
jae
inc
add
xchg
adc
jne
ljmp
push
push
jge
movl
fmull
cli
test
mov
or
xchg
mov
ja
add
and
and
popf
ja
test
mov
test
cmp
add
sbb
sti
push
mov
leave
std
andl
lds
or
pop
add
dec
adc
pop
fbstp
jns
push
bnd
add
xchg
mov
gs
ret
dec
mov
mov
xchg
lods
mov
repnz
push
jo
inc
enter
pop
adc
sti
shlb
sbb
push
hlt
lret
jbe
scas
push
addb
lea
shlb
dec
shr
scas
movsb
sbb
in
icebp
dec
lds
jmp
cli
push
mov
and
jb
ret
adcb
imul
dec
outsl
cwtl
cmpb
int
out
push
inc
scas
cmp
es
daa
mov
cmpsb
iret
stos
popf
jns
lea
test
mov
sbbb
mov
mov
push
lcall
cmc
adc
pop
jne
or
jne
cs
pop
push
in
loopne
inc
sbb
dec
cmp
pop
or
or
inc
mov
mov
stos
loopne
and
loopne
mov
mov
ror
push
daa
insb
jl
icebp
push
addr16
add
mov
push
and
jne
sbb
jmp
imul
stc
jmp
jge
mov
je
xor
out
inc
les
dec
out
dec
sbb
add
adc
insb
mov
pushf
push
icebp
cmpsl
mov
les
gs
je
cs
adc
mov
sub
stc
mov
jb
mov
dec
mov
mov
loopne
in
bound
int3
movsbl
popf
dec
pushf
sti
xor
lea
cmp
scas
mov
nop
enter
pushf
mov
sbb
test
lret
ja
orl
push
dec
orb
jle
add
iret
inc
jecxz
lret
cmp
push
lock
inc
pop
in
mov
mov
jbe
ret
xor
pop
inc
and
inc
sub
push
dec
mov
push
pop
in
xlat
sbb
cli
stc
mov
popf
pop
mov
cmpb
in
jle
mov
pop
pop
ret
xor
mov
jns
leave
in
data16
mov
cmpsl
adc
jp
xchg
jae
mov
pusha
addr16
loope
dec
mov
aam
jl
mov
arpl
cld
fdiv
dec
lret
cld
mov
test
lods
rcrl
jl
les
pop
daa
jmp
les
lods
dec
dec
jg
pop
jns
mov
push
insb
pusha
jle
fmulp
xchg
ret
fwait
xchg
dec
push
dec
loopne
enter
je
push
sub
loopne
mov
inc
repnz
push
mov
sahf
cld
adc
jge
push
sub
jge
add
pop
add
mov
loopne
push
push
mov
adcl
data16
sbb
ljmp
fs
xorl
sti
lcall
pushf
pop
stc
inc
sbb
mov
enter
rorl
into
sti
push
call
pusha
dec
push
pop
andb
cmpl
jl
lock
nop
out
mov
dec
cld
push
je
push
mov
fwait
push
call
subl
call
cli
pop
loopne
pop
mov
mov
dec
fmul
mov
sbb
pop
cld
test
xor
pop
mov
jmp
mov
mov
dec
dec
mov
inc
mov
push
sub
out
dec
mov
int3
cmp
int3
lods
popa
iret
mov
nop
push
mov
inc
lods
xchg
cmp
lods
movsl
or
rcl
lret
adc
push
and
sbb
dec
mov
ficoms
rorb
push
inc
popf
add
test
sbbl
rolb
jns
or
sti
adc
xchg
fistpl
roll
in
and
mov
nop
cld
paddq
sbb
xchg
cld
loope
inc
fnstsw
call
addb
sbb
mov
mov
mov
dec
jg
and
or
cmpsl
fcomp
sbb
fisttpl
dec
or
stos
push
lcall
or
repz
mov
push
sahf
shll
lret
pop
int
addr16
mov
dec
ret
in
ret
xor
loopne
cmpsl
lock
adc
lea
loopne
fstps
test
and
imul
dec
sbb
pop
fistpl
mov
adc
into
jnp
push
in
inc
adc
insb
dec
mov
testl
leave
ret
jmp
lahf
or
jae
pusha
outsl
pop
mov
lea
push
jno
xor
test
les
popa
out
push
adc
addr16
add
arpl
xor
inc
fisttpll
push
push
dec
lcall
je
repnz
lds
setns
inc
adc
enter
andl
sub
or
test
pop
xchg
sbb
mov
in
push
aas
test
lcall
fidivl
les
mov
enter
pop
mov
mov
adc
add
mov
aas
ficoms
mov
aaa
or
lds
lcall
mov
mov
mov
lcall
sbb
and
jl
or
mov
fwait
pop
loop
fisubrs
jmp
inc
lds
mov
popa
pop
f2xm1
shlb
fmul
mov
sahf
into
cmp
rolb
test
cld
or
ret
jecxz
adc
stc
xchg
lds
pop
loopne
xchg
add
mov
lret
lret
mov
cmpl
pop
jp
fisttpll
add
adc
pop
mov
iret
ret
insb
into
scas
imul
push
jp
pop
cltd
inc
cmpb
cli
popf
adc
mov
dec
mov
push
fcmovnbe
sbb
cmp
push
push
sarb
leave
jb
popf
xchg
sub
mov
gs
or
mov
leave
dec
sbb
push
scas
out
imulb
movsb
push
dec
pop
je
dec
inc
mov
ljmp
pop
gs
in
xlat
inc
inc
pop
adc
ficomps
mov
aam
pop
pop
popf
pop
push
loopnew
mov
ja
xchg
jle
inc
jns
adc
hlt
insb
xchg
dec
aaa
cld
dec
popf
sbb
sub
dec
jl
pop
add
sub
mov
movb
pop
push
or
push
in
leave
fs
dec
push
xor
fs
and
rcrb
rcl
sahf
push
mov
xchg
in
aam
outsb
mov
int3
gs
mov
int
mov
push
or
mov
lods
cli
push
out
enter
mov
test
in
add
sbb
cmp
scas
repnz
ja
pop
lds
dec
xlat
cwtl
mov
incb
repnz
mov
test
shlb
xor
movsl
sbb
fists
ret
cmp
adc
dec
lock
jl
sub
scas
mov
jle
push
and
dec
shl
adc
into
mov
js
jo
inc
dec
mov
fcmovb
mov
mov
adc
rcrb
test
sub
lds
js
shrl
sub
cwtl
mov
add
mov
int
inc
cli
jnp
les
pop
mov
mov
bound
sub
pop
popa
sbb
inc
cmp
imul
mov
cmpsl
aam
fists
push
ret
js
addr16
imul
pushf
in
mov
dec
fstpl
mov
push
mov
add
test
loop
ror
lcall
dec
ja
lods
or
mov
arpl
ja
nop
repz
int3
cld
ds
rolb
cmp
repnz
sbb
sbbb
inc
movsl
aas
mov
insl
mov
sub
fiadds
mov
shrb
in
orl
and
addb
aam
or
mov
mov
jno
xor
jns
aam
stc
cs
xor
roll
arpl
and
and
mov
inc
xlat
dec
mov
mov
inc
data16
ret
lea
xlat
ret
add
lods
or
mov
push
pop
int
or
aad
or
fldt
push
test
cmpb
push
test
dec
mov
push
ja
cmp
pop
mull
xchg
cmp
loopne
xlat
inc
test
lods
and
lods
outsb
dec
add
jmp
pop
mov
lods
lcall
cld
leave
punpckhbw
xlat
pop
out
dec
cmp
cmp
mov
jns
xor
sub
lods
fucomp
pop
sub
insb
adc
aaa
mov
in
xor
fcmovne
xchg
fsubp
jns
pop
sbb
loope
das
jmp
push
pop
dec
mov
ret
stc
dec
mov
stos
or
adc
pop
fstpt
shr
lcall
enter
sbb
push
ds
jbe
enter
js
cmp
adc
aaa
hlt
shll
sahf
xor
xor
sub
fucomi
mov
or
lock
pop
cwtl
test
mov
push
cmp
jp
int3
lret
xor
enter
mov
ret
xorb
push
into
iret
lcall
xorl
add
inc
push
xor
nop
push
mov
jecxz
iret
dec
cld
jnp
lcall
push
xlat
xchg
data16
mov
inc
xchg
cmp
jb
mov
ret
fldcw
push
or
lods
fistpll
push
ret
lahf
mov
mov
add
adcl
scas
cmp
mov
ljmp
loop
imul
jbe
mov
xlat
addb
rcrb
int
scas
ds
in
loopne
gs
test
xor
neg
stos
cli
add
loopne
jmp
and
stos
pop
jbe
stos
jge
ljmp
lret
xchg
xor
mov
lret
in
inc
sbb
adc
rcrl
fidivl
iret
pop
inc
test
shlb
mov
pop
or
mov
adc
xlat
fcomi
loope,pt
lods
sub
or
mov
push
pop
movsl
movsb
repnz
repnz
xchg
push
xchg
inc
sbb
or
add
push
pushf
xor
aad
xchg
jb
cmpl
movsb
dec
xlat
inc
add
sbbl
jg
mov
rcll
and
out
mov
lret
inc
lret
pop
jp
pop
and
fimull
mov
add
test
int3
rcll
sti
mov
mov
stc
fsubrs
inc
mov
mov
cli
inc
iret
lcall
loopne
sbb
sarb
xchg
out
lods
push
ret
mov
leave
int
orps
loop
cwtl
cmp
mov
imul
mov
dec
stc
push
sahf
jne
inc
mov
fisttpll
or
and
mov
cmpsb
int3
pop
les
pop
fimuls
ficompl
iret
bnd
jno
movsl
lods
sarl
cmp
cld
pop
pop
outsb
sbb
cmp
out
das
and
cmp
pop
xchg
xor
aad
jns
jge
inc
pop
scas
rcrl
out
test
or
dec
add
int3
xchg
ljmp
test
adc
test
inc
mov
lcall
mov
cmp
stos
mov
inc
test
fsubrl
adcl
mov
jb
iret
dec
sbbb
mov
ret
jecxz
push
fs
cmp
xchg
mov
stos
cmp
pop
aaa
sub
mov
pop
pop
mov
mov
int3
gs
mov
push
or
xchg
div
adc
fsubl
sub
xlat
adc
mov
ret
out
imul
jno
inc
call
mov
mov
jns
fmul
imul
xchg
sbb
enter
leave
mov
cltd
imulb
sub
pop
daa
xchg
mov
shl
test
lods
mov
xchg
fstps
mov
into
fbstp
out
mov
mov
xlat
iret
or
xacquire
add
lcall
mov
pop
push
mov
push
sub
adc
lods
outsb
add
mov
cwtl
cli
jb
fstpt
mov
imul
sub
sbb
out
stos
aaa
addr16
iret
fwait
push
loopne
push
pop
clc
or
inc
and
xor
fcoms
sub
lret
pusha
xchg
mov
and
loop
les
movsl
lret
mov
cmp
cmp
mov
bnd
jb
pop
xchg
addl
aas
cld
mov
lcall
aaa
fwait
inc
mov
in
bnd
fadds
push
sub
int3
cli
xchg
pop
mov
sub
int3
loop
fnstcw
mull
shr
xchg
sub
stc
mov
repz
fiadds
pushf
xchg
lods
stc
negb
mov
lds
loope
in
xor
mov
sarl
int3
push
push
dec
shlb
mov
sbb
lods
sub
out
inc
cmpsb
stc
jo
movsl
fisubrs
les
int
lods
xchg
mov
addr16
add
pop
add
cwtl
dec
je
inc
push
test
fstpt
push
sub
dec
in
lods
mov
or
dec
mov
addl
addr16
gs
mov
movsl
sub
xchg
pop
enter
dec
fcomps
or
inc
adc
mov
jo
sub
xchg
rorl
jmp
repnz
pop
sar
mov
or
xorb
xchg
dec
bound
cmpsl
push
adc
or
xor
pop
inc
filds
insb
inc
or
xlat
mov
push
push
mov
scas
aam
outsl
lcall
push
inc
cmp
mov
stos
jo
movswl
shrl
mov
or
mov
repnz
out
lods
movb
mov
enter
jl
mov
push
inc
mov
je
mov
mov
pusha
hlt
cli
xchg
mov
push
les
jno
jb
push
out
add
sub
decl
pop
mov
scas
cli
pop
addr16
and
dec
fdivrl
rcrb
pop
loopne
stc
in
fwait
mov
dec
mov
dec
cmpsl
adc
mov
dec
into
dec
daa
int3
enter
fdivr
clc
ret
lret
in
and
xchg
xchg
sldt
add
fwait
dec
pop
cld
add
lret
pop
mov
dec
xchg
aas
dec
aam
dec
lods
pop
test
jb
data16
jle
popf
mov
push
mov
xchg
sbb
mov
xor
les
gs
jne
shrl
inc
add
test
sub
mov
ja
pop
adc
dec
push
push
mov
aad
xor
mov
xor
mov
xor
popf
sub
movsl
ja
fildll
inc
xchg
aam
loopne
and
add
jl
or
leave
in
sbb
sbb
popf
xchg
mov
lret
sarb
ret
fisttps
lcall
lret
xchg
shrl
push
mov
pop
addr16
inc
lods
fwait
insl
out
bswap
fisttps
cmc
mov
stc
pop
xchg
pop
jmp
jne
imul
mov
out
add
int3
stc
push
pusha
jmp
push
insb
sbb
inc
mov
add
sbb
mov
xchg
mov
enter
fsub
lea
or
mov
xor
pop
cwtl
das
int3
lcall
push
popf
and
shrl
ds
aam
fistpll
test
ficompl
mov
cmp
inc
jle
mov
mov
dec
jae
or
push
rcr
push
xchg
adc
jge
push
mov
dec
mov
add
push
pop
les
push
mov
push
in
inc
addl
stos
cld
push
addr16
cmpsl
pop
nop
dec
inc
ret
push
jns
or
push
stc
in
pusha
frndint
jne
mov
xor
cmp
push
xor
cmc
faddl
test
ret
icebp
stc
jmp
movsb
xor
loopne
push
les
pop
popa
mov
mov
add
add
sahf
inc
aam
cmp
pop
pop
popa
dec
sbb
cwtl
xchg
rcrl
leave
xor
inc
pop
aam
mov
enter
inc
jae
shll
aaa
push
loopne
nop
rclb
stos
mov
leave
enter
sbb
or
jmp
fmull
sbb
pop
xchg
mov
rol
fstps
rclb
push
loopne
enter
aas
aam
arpl
add
in
lcall
cltd
cmp
push
out
movsb
xchg
inc
xor
aam
jmp
ja
cwtl
fiadds
movsb
ljmp
inc
or
xor
xchg
scas
push
inc
dec
mov
mov
aad
sbb
xlat
rolb
test
mov
fxch
rclb
dec
jp
push
mov
lock
dec
cmp
data16
popa
pop
addr16
and
scas
inc
test
xor
lea
pop
pushf
aam
xor
and
jne
arpl
enter
gs
mov
sbb
sbb
daa
inc
cwtl
lret
int3
imul
push
in
rcrl
leave
xabort
sub
data16
mov
aas
sub
lret
shrl
push
pop
lods
mov
addb
les
gs
inc
xchg
and
xchg
pop
pusha
cmp
stc
pop
inc
pop
xor
popa
jbe
mov
lret
in
lret
je
inc
pop
test
loop
push
xlat
mov
mov
mov
inc
rcrb
or
stc
adc
lock
je
insb
pop
cltd
das
mov
fldt
paddsw
iret
ffreep
sbb
sbb
jg
fstl
pushf
and
int
fsubr
aad
inc
xchg
cld
popf
test
ficompl
test
sbb
sub
jmp
sub
fisttpll
and
stos
aaa
mov
sbb
in
aad
rorb
stc
push
mov
gs
mov
sbb
ffreep
addr16
repz
cmp
lret
adc
aad
inc
push
jl
aaa
jnp
jl
enter
shl
mov
and
test
cltd
mov
push
insb
xchg
ret
inc
xor
decl
rcl
mov
mov
xchg
jns
insl
bound
iret
add
dec
sbb
cwtl
add
fcmovnb
pop
mov
das
push
inc
data16
push
push
sar
addb
adc
nop
jne
xlat
call
lret
pop
cli
inc
pop
cld
rorl
call
or
lods
out
lret
dec
addr16
cmp
xchg
push
fs
aas
out
lds
xor
pop
cwtl
sub
addr16
inc
pop
gs
call
mov
lret
loopne
mov
es
iret
push
or
push
mov
mov
xchg
fwait
data16
test
cmp
mov
push
iret
mov
pop
and
rcr
inc
cld
sbb
or
inc
adc
pop
gs
cmp
mov
aas
mov
cmpsl
sub
sar
cmp
mov
pop
test
push
dec
fs
pop
fcomip
mov
sbb
popl
xlat
push
adc
dec
sahf
jg
add
jns
xchg
in
loope
mov
sbb
lret
mov
es
pop
cmpsl
inc
adc
pop
xchg
xlat
mov
les
push
mov
mov
and
dec
fisttpl
push
add
fsubrl
fimull
mov
cmp
lds
mov
test
push
pop
mov
dec
sbb
jl
les
faddl
sbb
cli
in
addr16
xchg
cli
pop
int3
lods
aad
fidivl
test
test
mov
rolb
xchg
cli
or
cltd
and
gs
ror
push
test
out
inc
test
imul
adc
popf
pop
iret
inc
rcl
pop
rorl
std
and
or
lret
dec
fwait
mov
mov
dec
ss
adc
frstor
repnz
stos
jbe
stc
outsb
sub
gs
outsl
popf
push
nop
jg
popf
in
test
fbstp
mov
jmp
cwtl
lret
xlat
add
pop
sti
cmc
mov
popf
or
mov
cmpl
rcrb
jmp
lcall
addr16
mov
jb
dec
inc
dec
in
subl
addr16
add
popa
rolb
fisttps
pushf
xor
call
clc
icebp
sbb
pop
enter
ret
cli
or
cmp
pop
in
sub
test
cmp
adc
sub
mov
add
inc
popf
xchg
lods
mov
scas
icebp
stos
cmp
fldt
inc
push
imul
scas
mov
add
jmp
stc
gs
enter
orl
cmpsl
mov
neg
pushf
xchg
addr16
inc
bound
cmpb
xchg
hlt
mov
test
enter
and
cli
fcmovnu
dec
mov
pop
ficoml
inc
jp
fadds
jl
sbbl
out
mov
arpl
cli
or
mov
enter
lret
xor
xlat
nop
fwait
cld
push
sbb
lret
rcrl
add
ds
les
jne
movsl
dec
stos
inc
and
fwait
mov
shrb
add
pop
lods
stc
xchg
insb
or
out
shr
pop
shll
and
pop
fidivrl
mov
insb
cmp
daa
popa
push
xlat
jno
test
stc
mov
adcl
popf
cli
leave
fcoms
mov
aam
push
arpl
sub
push
pop
sbb
scas
loope
xchg
and
cwtl
mov
lret
jo
fistpl
push
mov
nop
adc
push
pop
call
sub
push
mov
mov
rorb
lods
aam
xchg
pusha
mov
lea
aaa
inc
jbe
mov
mov
mov
test
push
sub
cmp
loop
or
lds
sub
xchg
loopne
pop
pop
add
je
dec
push
int3
push
popf
pop
inc
push
repnz
mov
dec
cmp
xchg
dec
lahf
pushf
cmpl
fcompl
dec
jl
into
push
mov
add
stc
push
addl
sub
enter
mov
cld
es
inc
push
push
int3
rorb
subl
sahf
ja
inc
fcoml
xchg
sub
les
or
add
inc
inc
add
push
and
adc
mov
jo
stc
jb
mov
jb
and
push
cmova
ljmp
add
inc
pop
jns
mov
pop
stc
dec
into
sti
and
xchg
jg
xorb
cmpsl
sbb
adc
data16
sbb
ficompl
or
sub
xor
mov
pop
sbb
fnstcw
pop
xor
cs
cmp
loopne
xchg
mov
push
sub
test
dec
cmp
xchg
mov
mov
cmp
sbb
cmp
adcl
dec
add
fidivs
dec
push
insl
enter
jns
je
int3
mov
lcall
sbb
loopne
mov
sbb
data16
jno
test
sarl
rcll
jl
mov
lcall
repnz
inc
add
xchg
test
xor
xlat
and
jae
cmp
xchg
lds
push
cwtl
stos
les
mov
cltd
call
cli
or
push
jns
shl
jbe
and
cmp
jmp
or
call
pop
adc
popa
jmp
sbb
inc
xchg
mov
insb
nop
mov
cld
ret
test
push
pop
sbb
pop
mov
pop
dec
clc
cmpsb
cli
pop
popa
push
fmull
stc
cmp
xor
inc
inc
push
dec
je
jl
cli
or
cmc
popf
xlat
dec
stc
in
xlat
mov
sbb
fiadds
push
adc
push
cli
lcall
push
cmp
mov
aad
mov
mov
inc
stos
enter
fisubrs
and
jl
push
sub
popf
jecxz
push
jb
lret
call
pusha
lods
mov
test
rorb
aad
mov
mov
fmuls
bound
stos
lcall
and
mov
push
leave
decl
cmc
loopne
daa
rolb
jns
cmpsl
push
cli
popf
movsb
repnz
fwait
jg
ret
sub
and
repnz
xchg
inc
push
and
inc
movl
ret
inc
pushf
sbb
dec
stos
dec
inc
addr16
dec
cmp
pop
loopne
cmp
mov
inc
lods
xlat
mov
loopne
mov
pop
cli
mov
or
sbb
iret
cld
pusha
ljmp
cmpsl
jnp
repz
sarl
push
and
scas
ror
mov
mov
rol
in
inc
enter
sbb
push
outsb
lods
divb
fadds
lcall
dec
movsl
lret
mov
mov
jmp
cli
xlat
pop
xor
shll
aaa
pop
adcl
cmp
orl
test
cld
xchg
fnstcw
mov
test
fidivl
inc
insl
adc
daa
or
stc
leave
nop
jb
sbb
out
dec
sbb
in
pop
daa
out
aam
scas
mov
enter
inc
sti
jmp
lea
test
mov
cld
pop
mov
push
jbe
xchg
clc
and
sub
mov
inc
mov
pop
sarb
inc
mov
sbb
cmp
enter
xor
ret
cmp
or
gs
mov
add
add
xchg
adc
jbe
loope
push
jl
mov
mov
sub
mov
sahf
sbb
and
cli
enter
test
xlat
cmpsb
ss
ficomps
sarb
dec
stos
cmp
enter
xchg
fcomp
fadd
dec
jns
adc
lea
mov
mov
cmc
lock
and
and
jns
loopne,pt
jl
les
lahf
jne
cld
adcl
out
pop
popf
xchg
mov
inc
jp
cmp
mov
std
and
mov
fcmovnu
mov
jge
ret
cmpl
cmp
push
mov
fsubrl
mov
xchg
nop
xor
mov
jns
loopne
sbb
jne
rorb
mov
jnp
dec
repz
in
lea
dec
cs
sbb
incl
lds
inc
pop
scas
cmpsl
cmpsb
in
jb
pop
or
mov
pop
test
out
fldt
jns
in
mov
sahf
leave
stos
cmp
jb
cs
xchg
hlt
adc
stc
cld
jp
mov
popf
pop
and
adc
shll
mov
arpl
jmp
adc
dec
dec
jae
sbb
cmp
add
dec
mov
mov
fstps
xchg
fstps
mov
test
orl
dec
jno
out
lcall
jl
cmp
sti
mov
push
mov
xorb
xchg
mov
mov
cmovns
mov
add
sub
or
pop
mov
adc
stc
xlat
push
fimull
mov
cltd
sub
mov
lock
mov
jo
xchg
cmp
incl
lock
sbb
inc
sub
xor
xchg
addr16
sbb
inc
or
repnz
push
fstps
dec
lods
pop
cmpsb
sahf
or
lds
repnz
popf
ds
sub
or
push
xchg
dec
inc
jecxz
sub
mov
loop
pop
add
outsb
mov
shl
and
jl
fwait
lods
mov
mov
loopne
cmpsl
inc
push
mov
out
inc
mov
rorl
cmpl
ljmp
stos
rcrl
clc
mov
cmpsl
xchg
and
mov
xchg
xchg
lcall
sub
mov
sub
xchg
arpl
popf
lcall
aam
cmpsl
push
dec
or
adc
leave
and
add
jmp
mov
push
sub
push
mov
lods
xor
repnz
aas
sub
push
notl
lcall
dec
fwait
mov
jne
sub
jle
push
inc
clc
aad
or
fsubrl
xchg
ficompl
pop
inc
fsub
out
xchg
outsb
sbb
rorb
xchg
mov
int
push
mov
and
mov
push
mov
pop
mov
cmp
les
mov
bound
push
andl
mov
cmc
test
inc
loope
cmp
in
pop
lcall
jge
mov
in
cmp
jo
dec
lcall
outsb
nop
popa
jecxz
cmp
sub
andl
loopne
test
mov
fisttps
pop
rorl
stc
xlat
mov
cwtl
add
lret
test
iret
mov
cltd
movl
jns
mov
xorl
mov
std
xlat
fisubs
cld
dec
mov
cmpsl
mov
clc
incl
jb
lret
dec
add
sti
jb
test
lcall
and
sbbb
rorb
sub
test
mov
add
adc
xchg
idivb
pop
inc
daa
lods
sub
scas
fcoms
fistl
mov
ss
jns
imul
fcoms
popa
xor
mov
xor
inc
loopne
push
int
inc
mov
lret
pop
lcall
cmp
pop
lahf
mov
bound
outsb
stos
ror
test
inc
outsl
or
add
sub
lret
sub
lret
jns
cmp
insb
dec
jmp
test
sbb
ds
sbb
jno
popa
in
lods
cs
out
rolb
mov
inc
mov
mov
enter
jae
in
popf
leave
lret
shlb
sbb
roll
into
ffreep
sub
popf
add
pop
xchg
jp
sbb
pop
sbb
hlt
fwait
xlat
test
cmp
mov
fsubl
fld
push
mov
int3
sbb
adc
mov
inc
sbb
lds
jecxz
out
arpl
test
sub
push
mov
arpl
icebp
sti
mul
jno
call
cli
push
cltd
jg
jbe
ret
cmp
push
lret
xchg
inc
lret
ljmp
test
or
pop
cwtl
aam
mov
pushf
insb
jae
xchg
jge
and
xchg
cli
fmull
jl
ja
lds
lret
xchg
jp
add
add
adc
fstl
xchg
xchg
popf
push
sub
cwtl
inc
xchg
push
iret
and
insb
fdivs
in
pushl
and
adc
movsl
lret
or
fcomps
sbb
dec
imul
daa
cmp
push
fcomps
enter
inc
enter
dec
push
dec
enter
mov
adc
inc
mov
or
push
pop
rcrb
pop
mov
dec
cmp
pusha
ret
lds
and
mov
cmp
sub
shlb
jnp
sub
dec
mov
cltd
mov
mov
jle
inc
out
mov
cwtl
cli
mov
jl
inc
cltd
enter
outsl
mov
jb
inc
mov
add
fwait
fs
outsl
aas
xchg
inc
lret
push
mov
inc
in
push
sbb
enter
push
enter
xor
shlb
pop
pop
nop
pop
cld
inc
fwait
pushf
or
and
sbb
xchg
pusha
jns
cmp
inc
popf
mov
push
je
int
or
adc
jecxz
je
inc
mov
jl
je
mov
mov
sbb
stos
stc
cli
or
iret
ret
sti
cmp
or
dec
sbb
mov
cltd
pop
dec
sbb
les
adc
test
mov
xchg
dec
sarb
lcall
cli
inc
or
in
xchg
xlat
dec
stc
aam
lret
mov
push
fdivrl
push
shll
push
js
xchg
insb
jne
xchg
mov
inc
xchg
lds
enter
adc
mov
gs
push
dec
cltd
sete
mov
pop
in
mov
mov
xor
xchg
loope
xchg
std
mov
jne
mov
mov
mov
rcr
mov
xchg
xor
outsl
ret
add
pop
add
cld
dec
xor
out
popf
push
sub
mov
jns
adc
loop
mov
movsl
dec
push
push
and
rcl
inc
xchg
loopne
adc
flds
es
ljmp
push
xor
mov
xor
inc
adc
lods
push
repnz
dec
dec
dec
imul
in
decb
xor
xchg
sbb
fnsave
xchg
cmpsb
subl
mov
push
and
xlat
xchg
push
mov
out
mov
inc
fstps
scas
cmp
push
jno
cmp
roll
mov
dec
push
push
aam
fwait
iret
rcll
js
cwtl
xlat
dec
shll
out
sub
xchg
xchg
push
stc
xor
pop
xor
cmc
lahf
ja
insb
ds
enter
in
les
cli
ret
mov
addl
mov
rolb
inc
outsb
mov
enter
push
xchg
mov
inc
or
push
xor
xchg
mov
or
sbb
shll
jns
iret
adc
inc
fwait
movl
xor
jl
add
mov
inc
aas
jp
and
leave
shrl
lret
test
leave
data16
xlat
sahf
mov
cli
inc
dec
mov
ficoml
mov
sbb
loopne
xchg
scas
fistps
adc
pop
jnp
enter
imul
mov
lret
scas
sti
hlt
cmc
mov
inc
aam
sub
sbb
jne
sub
sub
xchg
jb
mov
mov
fucom
jb
in
je
ret
mov
cmp
cmp
jmp
popf
stc
xchg
ret
lds
or
or
inc
cmpsl
orl
mov
xor
stc
ror
test
rcl
mov
mov
jp,pn
push
add
pusha
sbb
push
dec
xchg
jo
loopne
ret
push
adc
aam
pushf
push
stc
dec
fsubrl
mov
xor
xlat
popa
pop
sub
ds
jb
bound
cmp
stc
and
addr16
mov
stc
mov
enter
cmp
dec
repnz
sbb
aas
or
aaa
add
inc
and
sub
test
inc
add
out
fists
call
sub
add
std
pop
fadd
and
ss
ret
rol
sbb
int
mov
les
cmp
pop
lods
cmp
or
xchg
in
inc
mov
jp
shlb
pop
dec
sub
enter
inc
jecxz
xchg
mov
test
mov
mov
xchg
repnz
addr16
sti
inc
sub
xlat
inc
pop
sub
lcall
int3
das
scas
std
push
xchg
add
addb
shrl
sbb
fs
cwtl
in
add
cwtl
mov
adc
add
andb
cli
dec
test
scas
or
sub
cli
aad
stc
xchg
mov
mov
sub
adc
dec
xlat
push
pop
add
mov
pop
lret
or
mov
jns
xchg
or
xor
adc
cli
scas
cwtl
sti
ficoms
or
cld
dec
jg
out
data16
jae
cltd
jno
mov
frstor
ret
dec
xor
mov
test
adc
bswap
jmp
mov
xchg
sub
push
int
and
inc
push
fldenv
jbe
lock
rcll
inc
mov
cmp
sbb
lock
mov
out
jl
test
or
inc
pop
cmpsl
sub
mov
adc
jmp
jno
push
sbb
adc
int
pop
fisubrl
int
sbb
cld
pusha
cltd
mov
or
cmpsb
inc
pushf
xchg
lods
dec
mov
in
xchg
cmpsl
stc
lret
xchg
jle
jp
sti
loope
mov
xor
jnp
leave
sbb
cmp
hlt
test
xor
mov
adc
jnp
push
or
enter
mov
dec
add
add
mov
push
add
xchg
add
mov
or
fcmovnb
jns
or
clc
mov
clc
adc
in
sbb
xchg
and
dec
mov
adc
xlat
add
lods
dec
jl
or
lahf
movb
xlat
iret
fildl
mov
xlat
pop
roll
push
xor
xor
popl
call
inc
mov
add
dec
in
and
mov
imul
jecxz
fildl
sahf
stos
fptan
pop
test
or
inc
add
sub
sbb
mov
mov
cmp
cld
lds
arpl
cmp
bound
lods
add
xlat
sub
mov
dec
orb
mov
or
push
into
in
cmpsl
popa
bound
lock
jecxz
fmul
sbbb
les
inc
cmp
mov
stc
xor
ret
push
xlat
insb
pop
sti
jge
pop
xchg
xlat
adc
sbb
fdivrl
push
mov
fmull
inc
in
xchg
push
push
scas
jp
jno
les
cmp
xchg
les
cmp
dec
pusha
adc
jb
lods
pop
cmpsb
mov
stos
fmuls
pop
lret
and
or
lretw
lods
add
jae
pop
inc
inc
mov
sub
nop
mov
popf
int3
sahf
stos
cld
push
mov
cmp
pop
loopne
pop
lea
mov
cwtl
pop
push
addr16
flds
cli
pop
pop
cld
adc
bswap
enter
movl
into
adcb
icebp
ret
xchg
stc
sub
xor
inc
int3
nop
test
mov
dec
and
add
mov
xchg
cld
leave
sbb
addr16
fsubrs
lret
ret
cli
cmpsb
clc
cmpsb
sbb
xor
sbb
mov
push
int
pop
mov
insb
popf
xchg
adc
xchg
ja
sub
leave
inc
jg
sbb
pop
and
es
sbb
pop
ret
std
mov
sbb
cmc
sbb
sub
add
outsb
xchg
adc
xor
dec
or
sbb
jecxz
push
jnp
bound
repnz
cmc
in
jl
sub
and
mov
or
xor
sbb
cmpsb
orl
push
push
cmp
pop
dec
inc
cs
or
mov
not
adc
cmc
pop
push
xlat
subl
ja
dec
xor
fcompl
mov
inc
mov
mov
mov
fcoml
lcall
mov
iret
pop
fstpt
std
dec
in
jle
add
dec
push
fldenv
push
xchg
cltd
dec
mov
jle
or
cmpsl
cld
test
jecxz
hlt
mov
sbb
lahf
jns
mov
int3
call
sbb
cld
mov
insb
fsubs
enter
stc
lods
out
pop
cli
enter
test
adc
add
xchg
jns
jl
cld
int
into
push
dec
push
lret
inc
add
cld
leave
cli
lret
fcom
sbb
mov
rcr
shl
test
xchg
imul
mov
or
enter
loope
jle
bound
in
leave
sbb
sub
adc
bound
ret
pop
or
cltd
and
mull
ljmp
or
cwtl
ljmp
pop
or
addr16
dec
out
pop
add
sub
adc
enter
inc
cvtpi2ps
into
rorl
addr16
dec
into
lods
dec
xor
xlat
pop
adc
test
cmp
ret
ja
fs
sar
aas
std
stc
int
or
test
mov
neg
enter
imul
pop
lret
mov
mov
lret
test
inc
fmul
pusha
push
aad
adc
adc
sbb
dec
mov
adc
jmp
lea
mov
mov
loope
adc
dec
push
in
adc
aam
cmp
push
insb
les
push
lds
cltd
or
shrb
test
rcrb
cmp
int
adc
push
mov
daa
or
enter
jl
int3
inc
repnz
mov
dec
lock
xlat
jmp
jp
lret
mov
mov
fsubs
mov
ficoms
inc
clc
mov
xor
jnp
mov
jl
or
jmp
fcmovnu
mov
inc
xchg
sbb
pop
mov
out
ror
jmp
pop
ljmp
in
into
dec
sub
in
mov
mov
iret
fldl
push
fbstp
aam
adc
fidivrl
push
adc
les
xchg
push
ror
fs
mov
cs
loope
ret
clc
pop
xchg
test
mov
inc
xchg
nop
or
push
into
mov
stos
shlb
imul
or
xor
das
pushf
cmp
scas
xchg
pushf
ja
lret
mov
pop
cld
and
gs
in
sarb
pop
nop
dec
filds
or
fadd
inc
add
stc
leave
add
jns
sarl
repnz
fmull
loopne
push
adc
inc
pop
in
ja
repnz
jp
dec
fcomp
mov
pushf
ret
or
push
rorl
ret
leave
lret
or
loope
filds
mov
xchg
addr16
test
rol
dec
lret
bound
enter
or
repz
ja
push
xchg
cld
mov
arpl
leave
xchg
pop
or
cmp
jge
divl
mov
shll
aaa
cmc
icebp
in
push
mov
cmp
lret
movsl
push
movsl
jb
push
push
sbb
mov
les
es
fisubs
in
shrl
push
shrb
faddl
xchg
std
loopne
int3
pop
adc
in
jp
pop
cs
jmp
xor
mov
iret
jle
jno
and
pop
imul
shrl
int3
gs
stos
test
jmp
xlat
push
repnz
adc
sbb
sti
je
scas
pushf
andb
cli
push
mov
mov
fidivrs
pushf
je
jns
mov
loopne
aam
pop
mov
ja
cld
in
xchg
dec
enter
stc
loopne
repz
xlat
add
out
inc
aam
mov
mov
test
cmp
shrb
push
dec
rorl
cwtl
aad
mov
inc
loopne
jb
dec
sub
mov
loop
icebp
mov
call
adc
mov
loopne
mov
cld
mov
test
sbb
fwait
mov
call
shll
inc
cmp
test
mov
lret
add
icebp
mov
iret
xchg
mov
rol
adc
repnz
mov
jecxz
jmp
adc
imul
xlat
test
xchg
aaa
pop
push
insb
xor
push
scas
jno
push
dec
lcall
mov
or
jae
fidivl
das
sbb
imul
sbb
js
cmc
sbbl
rolb
fisubrs
xchg
lret
cltd
mov
push
mov
repz
mov
addr16
xor
jg
mov
xor
aam
sti
mov
lods
lret
in
out
pop
ret
lcall
mov
push
add
adc
lret
ljmp
sub
enter
adc
mov
mov
pop
stos
add
pop
pushf
mov
scas
mov
add
mov
enter
lcall
adc
cmp
mov
xchg
mov
cld
out
aam
mov
mov
cs
jp
push
pop
div
pop
inc
push
lcall
mov
cltd
stc
push
ljmp
xchg
dec
gs
sub
inc
push
xchg
jp
es
lods
mov
jmp
mov
fucomip
or
mov
xchg
pop
add
sbb
lcall
dec
es
mov
pop
repz
mov
cmp
cmpsb
mov
loope
jp
sarl
cli
inc
lds
pop
addr16
leave
imul
pop
sub
jb
aam
jo
jb
dec
inc
fdivr
fst
dec
mov
mov
das
inc
stos
dec
cli
ret
in
add
inc
xchg
enter
lods
adc
add
mov
push
push
sub
mov
push
rcl
lret
and
xchg
or
push
cmpsl
std
jecxz
arpl
fists
jo
lret
or
and
jb
divl
pop
lret
loopne
pop
add
add
pop
jo
jmp
add
popf
movl
cli
xlat
pop
pop
aad
fisttpll
pop
gs
push
fdiv
mov
mov
daa
jl
mov
dec
pop
sub
mov
or
push
sbbl
sbb
xor
les
enter
and
repnz
xchg
lret
add
stc
lcall
lret
ficompl
mov
mov
es
repnz
daa
mov
mov
mov
shll
insb
sti
popf
or
add
push
jg
or
add
shll
mov
xchg
aam
inc
mov
mov
adc
faddl
iret
lods
cmp
pop
outsb
sub
in
fidivl
rol
cwtl
int
jne
cwtl
ret
add
push
or
xchg
dec
out
in
add
and
gs
lds
dec
call
test
bound
bnd
sbb
xchg
mov
jg
fwait
push
add
lock
or
cmp
ss
inc
stc
es
insl
mov
dec
dec
and
push
xchg
cld
inc
and
hlt
dec
mov
jns
xor
lcall
mov
scas
mov
jnp
ret
lods
and
dec
repnz
mov
outsb
stc
addr16
popf
aaa
out
add
roll
jp
push
ljmp
cli
leave
fimull
int3
dec
mov
test
dec
in
ror
lret
dec
shrl
xlat
adcl
add
or
cmpsl
fidivrl
pusha
gs
mov
sbb
jbe
add
pop
sub
sbbl
dec
and
daa
lcall
bound
sbb
xchg
leave
sbb
bound
lcall
scas
and
imul
xchg
inc
lret
and
adc
inc
dec
jno,pn
in
jg
sbb
add
sub
jmp
inc
insb
jp
sub
mov
shlb
push
std
clc
pop
mov
iret
dec
popf
jno
cmp
out
js
out
lods
shlb
jnp
adc
pop
mov
pop
cmc
xor
or
xchg
mov
cmpsl
loope
sub
stc
int3
into
daa
lcall
inc
mov
pop
lcall
fsts
mov
inc
shl
and
xchg
mov
enter
jmp
mov
xor
cmp
cmp
movl
inc
push
pop
stc
orl
sbb
stc
inc
mov
rcrl
cmpsb
dec
fldt
loopne
dec
les
sub
int3
lret
mov
lcall
gs
cli
push
push
gs
sti
mov
xchg
add
fs
arpl
cmpsl
mov
cli
adc
sbb
hlt
mov
xchg
pop
mov
mov
outsl
lds
push
int3
mov
mov
xchg
or
fucomip
mov
loopne
ja
cmp
stos
xchg
ffreep
into
push
aaa
stos
mov
mov
out
sti
sub
lret
mov
and
mov
jl
arpl
mov
aad
xchg
mov
sbb
sti
iret
test
or
lea
mov
push
dec
dec
stc
lods
mov
pop
inc
pop
std
and
mov
fldcw
fistpll
sbb
loope
mov
mov
je
sbbl
cli
stos
sbb
or
repz
into
clc
jns
jge
mov
dec
mov
aas
lea
jb
movl
stc
or
bound
lods
int
cld
movsb
in
repnz
out
push
into
pushf
lret
mov
cmp
dec
xor
into
loopne
inc
fmull
mov
pop
cltd
cmp
push
lea
out
out
imull
test
jl
data16
cmp
pop
xlat
adc
or
fisubrl
cli
and
enter
jmp
sub
cwtl
sub
fwait
leave
or
jno
iret
fiadds
xlat
pop
or
sbb
jns
push
sbb
add
adc
xlat
lds
into
gs
cwtl
sti
fwait
push
pop
rolb
out
sub
mov
pop
scas
add
lahf
aas
dec
cmp
pop
cmp
lret
gs
pop
into
outsb
pop
push
mov
les
ret
xchg
jne
popa
shrb
cmpsl
aas
pop
mov
mov
les
sbb
enter
dec
mov
inc
insb
mov
jp
fmul
fnstsw
lret
sbb
jg
in
xor
loopne
in
fsub
mov
pop
sbb
or
test
dec
fistl
xor
xchg
pop
aad
enter
leave
sub
fldt
dec
sub
imul
xor
loop
loope
mov
mov
add
mov
adc
movsb
xchg
pop
movsb
ret
int3
mov
lret
pop
addr16
and
cmp
xor
inc
fistpll
lahf
lcall
cli
add
or
aam
mov
cli
scas
cli
lods
pop
mov
push
sub
xchg
inc
push
sbb
leave
int
sti
sub
adc
push
cmpsl
xor
mov
mov
cs
mov
enter
out
stc
sbb
movsb
fstpt
rclb
and
insb
xor
cmp
mov
cmpsl
cmpsl
ficompl
daa
test
sub
xor
leave
daa
sbb
sbb
push
loope
jle
and
dec
cli
lret
inc
jns
mov
and
dec
mov
fsubl
movsb
rcll
enter
jo
jo
or
mov
stc
stc
test
sub
clc
inc
pop
cld
gs
fmull
loope
andb
enter
xor
in
adc
or
dec
adc
mov
js
ljmp
repnz
push
dec
in
jo
ja
negl
push
mov
pop
addb
leave
mov
add
loope
imul
adc
popf
and
or
dec
testl
mov
pop
cmp
mov
xchg
add
xor
jo
into
arpl
fsubs
add
inc
ljmp
mov
add
and
aad
or
pop
pop
dec
mov
sahf
ret
xor
or
sbb
xchg
in
add
lret
es
filds
pop
ljmp
leave
add
cmc
hlt
imul
lds
sub
cltd
jbe
add
adc
sub
nop
lods
cs
pusha
rcll
leave
nop
rclb
aad
sub
enter
rcr
lret
mov
mov
adcb
loope
jo
movb
dec
test
ret
imul
movsb
dec
shll
cmp
inc
scas
fisttps
push
leave
pop
xchg
rclb
das
pop
jmp
test
nop
scas
dec
sub
push
inc
cmpsl
adc
loopne
pop
mov
adc
iret
icebp
push
arpl
fsubs
mov
adc
insb
sbb
lea
dec
push
bound
pop
mov
inc
sub
cwtl
mov
mov
xor
dec
popa
sub
pushf
add
push
xor
push
xor
mov
and
sub
jo
add
mov
fcomi
in
bound
and
shr
cmp
sub
sbb
stos
cmpsl
test
ret
sbb
cltd
pop
fsubrl
pop
jb
sbb
sahf
adcl
rol
and
jge
xorb
add
das
jae
inc
mov
push
jmp
mull
mov
mov
mov
xchg
cmpsb
arpl
dec
dec
jno
sbb
fcmove
push
pusha
repnz
sbb
fdiv
lods
mov
call
call
cmp
pop
cli
into
cmp
in
fwait
jge
xor
and
stc
adc
inc
pusha
mov
push
add
pop
stc
dec
cld
push
cmp
jl
mov
mov
add
xrelease
mov
dec
push
stos
inc
sahf
inc
xchg
cmp
mov
xchg
adc
out
push
push
mov
push
ds
lahf
movsb
sub
mov
jl
call
push
mov
notl
mov
mov
lret
mov
or
inc
jp
pop
jmp
inc
mov
mov
daa
dec
dec
dec
sub
lcall
movsl
lcall
push
adc
fwait
mov
ret
or
lea
mov
subb
shl
or
ja
xchg
mov
pop
xor
fdiv
enter
clc
add
inc
scas
pop
lcall
aaa
pop
js
or
or
iret
lcall
mov
ret
fsubrs
addr16
or
call
adc
les
push
cmc
gs
mov
pop
cmp
outsb
lret
sbbl
ja
cmp
dec
dec
iret
pop
movsb
lret
cmp
orl
push
mov
dec
push
push
mov
lret
cld
adc
pop
fsubrs
xchg
pusha
aam
adc
jp
xor
fstpt
jle
stc
pop
inc
pushf
cld
pop
leave
mov
pop
cli
popf
inc
sbb
rol
iret
pusha
dec
mov
push
xor
push
jl
mov
aaa
clc
arpl
xlat
push
sbb
mov
nop
or
outsl
stc
push
orl
mov
cld
mov
mov
inc
stc
dec
in
push
call
mov
shrl
jb
je
cltd
fiaddl
popf
ret
bound
mov
fildl
das
lods
pop
cmp
les
pop
mov
cmp
repnz
in
lds
lods
stos
mov
daa
test
sbb
jl
sbb
push
fcmovb
inc
lds
cmpsl
mov
dec
cmp
mov
repnz
dec
shll
fcmovne
stc
faddp
sbb
pop
push
pop
cmp
xor
repnz
roll
mov
xchg
cwtl
les
stos
sarb
and
push
cmp
test
lcall
ret
pop
sbb
jbe
or
bound
insb
mov
repnz
fimuls
cwtl
das
pushf
sub
leave
push
or
push
pop
popf
mov
imul
pop
mov
inc
or
popf
xchg
mov
in
lods
mov
sbb
cmp
inc
mov
shll
xchg
inc
ret
or
and
jp
jge
lds
es
repz
arpl
faddl
fxch
loope
lret
sar
add
pop
mov
mov
fcompl
inc
cmpsl
stc
shlb
call
sub
movsb
inc
div
hlt
rclb
dec
sub
or
pop
in
xchg
xor
popa
xor
mov
fisubs
into
add
cmp
push
xlat
es
lcall
rclb
iret
adc
ret
int3
loopne
xor
ret
leave
mov
aas
mov
nop
sub
fisubs
sbb
pushf
test
int3
jp
ret
jmp
shlb
add
or
ljmp
popa
cmpsl
daa
call
in
stos
adc
cmpsb
dec
push
in
fs
cltd
mov
inc
push
pop
push
push
movb
enter
leave
out
inc
bound
divl
lret
lock
pushf
jg
and
sub
ret
dec
orl
fisttpl
mov
add
pusha
mov
gs
adc
das
mov
sbb
xchg
std
jg
shll
repz
sbb
mov
cmp
rcr
dec
mov
push
cwtl
test
push
pop
push
push
test
subl
ret
pop
js
sub
icebp
add
or
fcmovnu
mov
jl
pop
int3
vaddss
cmp
leave
inc
arpl
push
outsb
subl
lcall
xchg
mov
jns
cli
lcall
movaps
ret
push
mov
add
inc
fidivrl
jae
test
dec
xlat
ret
stos
dec
sarb
in
mov
push
mov
out
ss
push
cmpsl
dec
rcl
jo
popf
stc
or
pop
push
or
bound
sarl
aaa
outsl
mov
hlt
pop
fs
and
cmp
inc
pop
sbb
mov
adc
mov
testb
cld
cmp
adc
xchg
add
cmpsl
lret
lret
cmp
mov
les
jae
push
aaa
mov
repnz
and
cli
jb
icebp
enter
in
sub
push
dec
push
popf
in
out
cld
inc
test
bound
sarb
jmp
lock
lcall
xlat
movsb
pop
notb
and
popa
cmp
mov
or
xor
add
dec
int
jmp
and
aam
dec
add
int3
dec
mov
jl
cli
mov
rcll
leave
adc
add
or
cmp
shlb
cmpsb
jno
scas
dec
add
rcll
dec
mov
cli
pop
cmpb
cmpb
adc
inc
sub
add
push
in
inc
xorb
add
or
inc
loopne
adc
fcoms
fucom
or
out
mov
cmp
leave
push
rclb
push
ror
cltd
pop
xchg
loopne
ret
data16
push
aad
and
je
pop
add
xlat
xchg
push
cwtl
add
sti
popf
dec
dec
cld
mov
push
push
mov
shll
mov
iret
imul
mov
ss
xchg
daa
xor
xchg
sub
pop
add
xor
movsl
pop
mov
in
mov
popf
mov
inc
push
or
xor
repnz
cmp
or
int3
popf
xchg
jns
xor
xchg
mov
lret
out
sub
xchg
cmp
adc
test
fnstsw
fs
xchg
xlat
cmp
xlat
sahf
or
push
popa
cmp
leave
xchg
dec
and
push
mov
mov
jb
iret
ret
das
or
sub
lret
jb
aam
push
fnstcw
enter
add
mov
fildll
outsb
rorl
cmp
mov
into
sub
or
jnp
pop
mov
push
xchg
cld
loope
hlt
movsb
enter
out
orb
xlat
xchg
fists
jns
fwait
dec
cltd
add
cmp
add
or
adc
push
and
cmpsl
dec
sbb
data16
cltd
mov
add
push
push
mov
mov
xorb
jl
repz
sbb
xor
mov
pop
sbb
or
mov
mov
or
mov
adc
shll
mov
lea
lock
cltd
stos
bound
push
shrb
pop
fadd
call
push
lea
adc
sub
imul
or
je
jl
roll
xlat
push
sbb
pusha
rclb
scas
andb
test
stos
pop
fmul
int3
jb
xchg
mov
jb
push
insl
lret
jns
sbb
xor
inc
mov
mov
dec
iret
jl
adc
xchg
ja
imul
xor
jae
stc
or
cmp
mov
or
xchg
pop
popa
inc
cwtl
xor
mov
fmul
pop
adc
push
cmp
xchg
mov
scas
push
std
in
dec
inc
push
fisubs
mov
push
pop
inc
dec
aam
push
mov
mov
adc
cltd
xchg
push
or
mov
stc
sbb
mov
mov
or
fidivrs
mov
in
dec
ja
fistps
inc
pop
cmpsb
int
adc
out
pop
roll
mov
pop
movl
lds
test
inc
daa
mov
lcall
je
push
add
dec
aad
dec
shll
adc
xor
popf
imul
leave
xorl
idiv
add
into
lods
cmpsl
cltd
mov
add
lcall
mov
lret
mov
mov
dec
stos
ljmp
dec
sahf
inc
jmp
cmpsb
and
sbb
xchg
ss
or
lods
sub
push
adc
push
inc
adc
mov
stc
xchg
cld
push
add
push
inc
cli
add
out
pop
mov
test
das
add
pusha
xchg
mov
test
mov
test
scas
cmp
andb
leave
jnp
xor
mov
mov
inc
adc
popf
cmp
or
leave
into
mov
push
imul
test
gs
lds
cmp
hlt
sbb
movb
cmp
loopne
pop
faddl
jno
test
fsubrs
cmp
addr16
jne
cmp
faddl
rcl
or
mov
adc
push
and
pop
or
lods
dec
lea
fsubs
sbb
fdivrs
sbb
gs
fsubr
hlt
mov
fcompl
ljmp
adc
int3
mov
cltd
xchg
push
lret
xchg
ret
push
mov
push
push
cli
push
in
les
xchg
cs
push
repz
iret
stc
iret
add
and
inc
lea
mov
scas
lahf
xchg
scas
ljmp
shrl
divb
push
add
add
add
ret
push
outsl
inc
jns
mov
xor
jle
sti
ret
jge
and
jmp
push
fcompl
rcll
adc
and
enter
sub
andl
ret
int3
enter
mov
lahf
jmp
fcmovne
fisubl
jl
sub
sbbl
stc
mov
mov
iret
mov
mov
mov
cmpsl
out
adc
mov
lret
popl
iret
mov
mov
ret
lret
cmp
cli
dec
inc
in
mov
dec
adc
fsub
push
fdivrp
jmp
push
xchg
jle
out
gs
adc
adc
ret
in
jns
std
loop
or
pop
out
loop
and
xlat
int
xchg
pop
aam
xor
cmc
in
jle
xchg
xchg
pop
push
and
mov
cmpsl
inc
ss
push
fadd
adc
or
jno
shrb
call
test
ret
jns
mov
dec
jge
sub
xlat
out
shll
loop
leave
mov
stos
int3
sbb
pop
movsl
and
in
sti
ljmp
push
push
ljmp
dec
mov
xchg
gs
inc
jne
inc
pop
lods
fst
das
pop
cmp
leave
mov
jge
out
in
leave
sbb
and
ljmp
mov
mov
pusha
mov
mov
push
or
or
push
jg
sub
cld
leave
push
push
sub
jb
add
mov
rcr
jno
jno
pop
adc
loopne
pop
dec
and
imul
lea
stos
fiaddl
rcrb
push
insl
and
fwait
rorb
mov
lret
int
dec
nop
mov
xorb
ret
push
xlat
shl
sub
push
call
adcb
or
data16
sar
mov
mov
int3
imul
or
push
roll
jecxz
mov
sbb
lret
and
pop
repnz
imul
xchg
adc
xor
lods
push
iret
mov
ficoml
sbbb
popa
mov
sub
or
jmp
js
pop
mov
outsb
fdivs
lahf
iret
les
insb
in
imul
xlat
mov
addr16
dec
and
sbb
jl
jne
add
or
gs
clc
fsubr
pop
fcompl
out
inc
enter
dec
jl
ret
push
ud1
xchg
stc
ret
lods
int
pop
orl
cmp
lods
xor
add
lret
outsb
mov
shll
ja
out
fstpt
ret
arpl
dec
jmp
or
push
enter
push
cld
xlat
lock
xor
dec
rcrb
xchg
dec
call
push
mov
pushf
ss
fsubs
aad
leave
push
shrl
fcmovnbe
mov
in
cltd
loope
loopne
out
sarb
pop
xlat
xor
lahf
add
mov
add
inc
fistps
mov
enter
or
dec
mov
or
ss
repnz
push
hlt
mov
mov
mov
and
lret
cmp
cmp
psadbw
ljmp
mov
aam
pop
push
dec
lds
dec
xor
dec
shlb
push
pop
insb
push
pop
inc
push
int
je
ljmp
mov
fadds
dec
aad
xor
stos
cmp
test
xor
sub
cmp
mov
daa
mov
jmp
jle
in
loopne
mov
inc
lcall
pop
jo
mov
andb
arpl
xchg
mov
in
xchg
dec
mov
mov
mov
pop
pop
jge
pop
mov
push
add
cwtl
push
inc
test
xor
add
cltd
add
add
cli
cmp
aad
mov
pop
popa
xlat
jmp
jg
stc
ret
adc
pop
or
rorl
leave
nop
stos
bound
sar
insl
bound
and
cmp
enter
mov
fldcw
or
out
inc
lods
stc
xchg
xor
stc
jo
lret
pop
fists
lcall
test
loopne
cmp
mov
addr16
mov
test
mov
incb
test
loope
mov
xor
sbb
cmp
es
cwtl
push
shll
jnp
mov
pop
lret
cmpsl
jo
jp
and
leave
lds
outsb
xchg
incb
and
lock
out
cli
mov
push
cmp
das
enter
int
push
nop
sbb
lret
pop
test
xor
jbe
jne
movl
push
leave
mov
or
lods
je
scas
in
push
jnp
test
mov
xlat
aas
mov
adc
sub
jecxz
push
mov
faddl
or
addr16
mov
roll
pushf
jb
in
cmp
imul
roll
lds
inc
das
fwait
xchg
add
push
dec
lcall
cmpsl
dec
dec
or
jns
sbb
call
adc
sahf
push
jmp
ds
sahf
jnp
add
push
pop
or
cmp
jl
mov
into
fmul
popa
ja
iret
push
jnp
xlat
mov
mov
in
sub
lea
aad
adc
daa
push
ret
loop
pop
nop
pushf
fistpll
loopne
aam
fldl
xchg
mov
fcoml
dec
test
inc
out
in
sub
sub
enter
clc
jle
lds
int
xchg
add
push
nop
or
addl
pop
jecxz
mov
scas
insl
mov
leave
cmp
sbb
popa
das
or
les
loope
stc
pop
xor
add
cmpsl
cmpsl
outsb
dec
push
movntq
aaa
cwtl
cmp
sbb
push
jne
in
out
mov
mov
cmp
cltd
sahf
mov
aam
xor
xacquire
mov
sub
orl
aad
jg
pushf
mov
mov
mov
flds
pushf
or
leave
out
mov
mov
inc
out
int3
idiv
flds
mov
leave
mov
call
out
inc
pop
jb
popf
movsl
xchg
sbb
cs
fwait
mov
mov
lret
xchg
roll
inc
adc
xlat
int3
fstl
data16
lcall
int
loope
fmuls
sub
inc
lcall
bound
or
push
push
test
icebp
flds
sahf
dec
jp
xchg
mov
loopne
cmpl
xchg
addr16
call
shl
mov
leave
rclb
movsl
into
xchg
cmpsb
add
mov
scas
ss
push
jl
sti
cmpsl
aad
aam
mov
mov
cmp
or
lcall
jo
imul
test
cwtl
sbb
fnsave
fucom
stos
lret
jecxz
outsl
ret
repz
insl
push
xor
and
mov
push
ja
pop
pop
arpl
test
fsubp
stos
enter
cltd
push
mov
and
into
fnop
js
inc
push
rcrb
pop
popa
pop
out
and
frndint
fdivl
cltd
fisubrs
ret
enter
sub
jmp
inc
loopne
mov
push
inc
jl
inc
lret
adcb
mov
ret
mov
cmpsl
repnz
push
es
pop
cmc
cs
enter
ffreep
insl
test
pop
pop
xchg
fistps
fnstcw
insl
sbb
jl
mov
mov
int3
fisttpll
xor
movsb
into
test
pusha
pop
cmpsl
aad
int
fldcw
dec
xlat
stos
lret
out
or
jg
test
mov
dec
imul
ds
mov
and
xor
in
jns
out
ret
sbb
fmul
mov
lods
sar
enter
lea
cmp
insb
jmp
int
jns
mov
or
stos
dec
pop
mov
cmpsl
stc
in
and
test
pop
pop
fwait
lods
imul
sub
cmp
loopne
inc
into
mov
or
pop
into
cli
or
out
xor
roll
or
and
scas
popf
xchg
mov
in
jecxz
cmp
aaa
and
or
and
std
mov
fisubl
xor
push
shlb
adc
jo
lods
rorl
ret
dec
mov
outsl
push
stc
stos
mov
lods
add
decb
mov
orl
lcall
data16
dec
loope
stos
outsl
pop
add
xchg
xchg
mov
subl
push
inc
or
lock
xchg
sar
repnz
iret
jmp
shll
push
fmuls
int3
push
hlt
and
jp
inc
cwtl
mov
jns
push
sub
add
push
lock
push
ret
cmp
pop
push
fldt
mov
jl
xlat
sbb
xchg
imul
mov
fstl
int
aaa
fists
lret
mov
mov
jae
push
in
out
or
pop
fdivs
dec
push
int
daa
test
pop
lcall
push
xchg
push
sbb
pop
outsl
fsubrs
cs
cmp
nop
movsb
pop
rcll
jle
sub
es
mov
mov
xchg
mov
fsubrs
int
leave
inc
lret
mov
add
aas
add
shlb
fsubrs
icebp
jl
inc
rcrl
jns
mov
andb
mov
aaa
sbb
xchg
sbb
adc
or
adc
inc
xchg
mov
adc
push
lret
stc
incb
je
mov
mov
imul
lods
and
and
test
insb
ret
mov
pop
mov
cli
ficomps
jns
stos
fldl
fistps
mov
xchg
fnsave
lds
gs
cs
or
jns
in
clc
jbe
jmp
mov
xchg
mov
inc
sbb
jmp
test
cmp
and
fisubs
dec
sbb
insb
mov
ret
insb
stos
ret
or
sti
sub
sub
sbbl
and
or
pusha
mov
lea
pop
xor
lret
stos
xlat
cmpsb
jle
aad
mov
outsl
dec
loopne
lock
loop
cmpsb
imul
mov
rorl
jb
clc
mov
push
sbbb
out
ja
or
mov
aam
inc
sbb
dec
inc
fdivrs
xchg
sub
bound
lods
int
ret
sub
pop
xchg
sub
mov
mov
sti
add
lds
push
push
shrl
lcall
dec
dec
pop
iret
xlat
add
int
imul
cld
sarl
decb
jle
ficompl
scas
push
pop
loopne
inc
or
sub
mov
sub
cltd
fsubrs
lret
aam
push
loopne
sub
and
xlat
testl
xor
jl
sbb
lock
cmp
lcall
cmp
loopne
sbb
mov
lods
idivb
or
daa
pop
mov
or
test
mov
jbe
loop
adc
mov
mov
mov
mov
add
inc
out
mov
fwait
mov
ret
inc
inc
add
out
orb
cmp
jno
lds
mov
push
lock
enter
fnstcw
inc
dec
aad
sbb
jl
mov
add
rorl
mov
adc
jne
cmpsb
xchg
xlat
imul
cwtl
lods
pop
pop
in
pop
cli
xchg
test
ficomps
jl
fidivrs
push
inc
popf
inc
addr16
in
shll
jbe
stos
sbbl
loop
sti
ljmp
cltd
jl
cmpsb
fadds
es
pusha
or
mov
rcr
xor
data16
ret
xlat
out
pop
adc
aam
jo
aam
sub
dec
push
aas
or
aaa
push
push
lds
jbe
pushaw
cwtl
add
movl
mov
push
ja
adc
mov
inc
inc
popf
ret
xchg
dec
addr16
jmp
scas
or
and
fdivrs
les
inc
cmpb
mov
int3
xor
scas
jo
iret
out
xor
sub
mov
ret
lret
jb
subb
xlat
xor
je
cs
gs
sub
cmpsl
xor
testb
movsl
inc
in
adc
inc
inc
into
int3
insb
mov
sub
push
sub
pop
jb
aad
pushf
aaa
mov
push
bound
mov
cwtl
cmp
add
enter
and
mov
sub
cld
pop
mov
popa
loop
dec
int3
jns
jne
xchg
sbb
xchg
jae
cmpb
rol
insl
mov
rolb
pop
gs
data16
jo
aaa
mov
popf
mov
out
bnd
xchg
cmp
ret
xchg
sub
enter
es
mov
mov
fnstsw
xor
push
jns
mov
lcall
loop
adc
inc
cmpl
ja
aam
std
into
repz
mov
movsb
xor
js
in
into
stos
jb
push
sbb
aam
dec
lods
pop
int3
mov
dec
add
cmp
popa
test
fcoml
out
arpl
inc
gs
dec
rcl
cmp
enter
push
mov
repnz
xor
rcrl
cmp
addr16
and
rorl
dec
into
popa
push
sub
inc
popa
inc
int3
dec
xchg
ret
mov
rorb
pop
push
iret
push
cltd
in
jle
enter
sub
mov
enter
and
fisubs
jbe
cli
xlat
push
xchg
add
les
inc
filds
ret
or
movsb
xchg
dec
add
int3
sub
jl
and
pop
xor
xchg
add
xchg
fmuls
insl
sub
ja
mov
xchg
les
stos
push
dec
jne
xchg
ret
aad
cld
jp
std
jne
les
test
sub
pop
js
mov
jmp
mov
popf
adc
pushf
lods
lret
in
dec
rorl
push
cmp
dec
mov
fmul
mov
stc
iret
scas
push
sub
adc
dec
mov
sar
stc
push
std
lcall
jmp
push
or
je
jmp
pop
add
cltd
sub
xchg
out
loopne
sub
repnz
ljmp
shll
loop
lret
fmull
lods
ret
add
rcll
fxtract
mov
lret
mov
ret
not
fildll
xlat
ret
sar
stc
in
lret
pop
inc
sub
scas
int3
gs
jg
aad
dec
enter
mov
xchg
pop
push
addr16
adc
ds
jge
lret
mov
iret
cmp
bound
push
gs
or
push
push
xchg
push
jno
inc
add
dec
inc
aas
lret
mov
adc
inc
mov
cs
imul
xor
sarb
dec
aad
push
pop
cld
jns
mov
xor
sahf
adc
int3
pop
lahf
and
xlat
out
dec
sbb
sub
ret
add
xor
fcoml
stc
xlat
ds
adc
pop
sbb
call
xlat
cltd
inc
iret
lret
filds
cmpsl
hlt
loopne
insb
in
mov
mov
inc
cmpsb
in
aad
fstps
stos
fwait
ljmp
test
xor
stos
daa
ret
cmp
mov
and
scas
pop
cmc
inc
sub
dec
lea
out
adc
jmp
sbb
mov
into
sbb
ret
push
sub
repnz
shll
jns
dec
sbb
xchg
xchg
xchg
pop
sbb
pop
jno
addl
jp
popa
fiadds
fisubrs
scas
gs
xchg
shrl
iret
xchg
ret
decl
jne
jl
clc
or
stos
sti
test
cmpsl
aam
mov
std
jbe
push
xor
xchg
cmpsl
stos
mov
shll
mov
int
mov
movsb
ret
mov
mov
add
inc
in
sbb
fmul
mov
push
mov
loopne
jp
popf
cs
xlat
dec
shl
jns
mov
pop
mov
push
arpl
js
fs
int
sbb
mov
mov
lret
xlat
mov
or
aaa
jmp
roll
push
pop
push
mov
push
push
gs
jbe
cmp
subb
loop
cmp
insb
popf
rorb
cmp
jmp
test
cmp
repnz
pop
jmp
mov
adc
addr16
dec
popa
add
nop
adc
int
js
sub
mov
ret
sbbl
sub
loopne
pop
push
add
sbb
mov
imul
sub
sub
test
sbb
sbbb
mov
pushf
push
mov
iret
mov
clc
mov
lods
xchg
pop
cmp
int3
dec
mov
xchg
mov
mov
dec
insb
mov
cli
inc
cmp
sub
sub
pop
jl
aas
js
popf
pop
repnz
cmp
mov
dec
mov
inc
mov
int3
call
pop
dec
fildll
mov
mov
mov
gs
cld
mov
mov
fisubs
push
and
aam
aas
add
fptan
push
arpl
cwtl
test
push
inc
sbb
fsubrl
lret
shrb
fisubl
sbb
lret
insl
cld
pop
mov
daa
adc
push
pop
mov
lods
or
or
xor
mov
addr16
inc
add
loopne
test
ret
sarb
dec
jo
stc
mov
ja
mov
test
cli
stos
je
int
int3
fmul
adc
daa
or
jl
inc
dec
jecxz
mov
adc
adc
sbb
mov
das
mov
mov
jb
cmp
mov
fildll
dec
sub
jnp
ret
push
mov
pop
cmp
ja
pop
cvtps2pd
lods
dec
cmp
cmp
gs
test
out
jnp
ret
jne
fsubl
sahf
jp
push
pop
jle
inc
rcl
aaa
adc
insl
mov
mov
sbbl
out
mov
in
sbb
jmp
movsl
adc
mov
xchg
stc
dec
lods
es
shr
cltd
fsts
shl
lret
fistpll
fistl
mov
push
in
mov
gs
lahf
lret
mov
in
dec
dec
push
cmp
in
sub
inc
sub
outsl
xchg
arpl
gs
repnz
and
sbb
xor
xchg
ret
leave
dec
fs
lret
jge
addr16
imul
fldenv
jno
dec
sub
jne
rorb
sbb
fnsave
repz
fistpll
jns
mov
pushf
xchg
enter
push
jb
dec
jnp
add
stc
ret
push
mov
cmp
jae
pop
stos
jecxz
adc
mov
adc
push
les
mov
mov
mov
lods
in
dec
cwtl
dec
push
inc
fcomp
xchg
mov
mov
divl
dec
push
fstpl
add
xor
test
popl
scas
xlat
mov
hlt
mov
shrb
mov
orl
xchg
cli
jl
mov
jl
add
mov
loopne
scas
dec
xor
lahf
test
xor
rcll
dec
iret
outsl
sbb
shll
xchg
or
aad
je
mov
cmpsb
movsb
pop
xchg
ret
stos
roll
mov
mov
xor
dec
push
mov
fs
cmpb
push
sub
mov
repz
cmp
xor
ficoml
dec
sbb
xchg
push
shlb
test
mov
rorb
dec
sbb
and
es
test
stos
push
inc
add
xlat
lret
push
cltd
dec
mov
inc
and
pop
inc
lcall
fsubr
and
loop
jp
lea
inc
pop
inc
xchg
rcr
int3
mov
cmp
sbb
push
or
mov
xlat
cmpsb
sbb
out
pop
push
sbb
xor
imul
cld
mov
fsts
loope
test
dec
mov
dec
lock
jno
cmp
stos
iret
inc
add
jmp
add
mov
sub
cmpsl
and
lahf
repnz
addr16
sbb
dec
or
inc
or
scas
mov
lea
pop
cld
push
cwtl
jne
lods
push
mov
fwait
in
rolb
lcall
enter
fistl
dec
insl
mov
inc
sub
dec
dec
shrb
add
sar
ret
inc
xchg
daa
pop
pop
ljmp
xchg
mov
push
cmpsl
xchg
mov
sahf
lds
add
filds
cltd
cs
mov
pop
test
test
cltd
push
cmpsl
push
cmp
or
and
jmp
out
mov
aam
cmp
cs
cmpsb
xchg
cmpsb
xor
scas
sarl
pop
loope
mov
leave
scas
ret
cmp
push
jns
test
jge
in
and
add
loopne
add
fstp
push
dec
xchg
test
pop
mov
and
lods
and
push
fisubrs
ljmp
mov
xchg
adc
jl
push
shrl
stc
xlat
fildl
fsub
push
mov
push
sub
mov
and
test
cmp
push
pushw
xor
push
dec
and
rol
cwtl
and
cmp
cmpsl
cmpsl
cld
fucomi
pop
repnz
mov
jp
sub
sbb
in
pop
cld
jns
stc
dec
mov
cmp
or
leave
hlt
addb
adc
cmp
push
mov
lds
mov
scas
xchg
xchg
jp
insl
mov
lcall
xor
and
pop
mov
jl
in
daa
cli
cmp
dec
sti
inc
xchg
cmc
dec
and
std
cmc
adc
outsb
cltd
push
fneni(8087
add
xchg
xlat
xchg
outsl
aam
dec
push
push
push
popa
and
cmp
mov
ret
add
movsb
jo
sar
adc
movsl
xchg
push
or
jl
sti
movsl
movsb
in
push
sub
lock
cmc
pop
push
or
cwtl
loopne
pop
fdiv
cmp
sub
daa
push
leave
jl
addr16
aad
and
mov
pop
cmp
loop
push
in
fdivs
sub
lahf
loop
pusha
or
jno
and
aam
inc
cld
les
shrb
cli
fstpl
test
mov
mov
mov
ret
fcoml
ljmp
mov
das
dec
sbb
mov
or
push
jle
mov
add
pop
mov
sub
repz
loopne
mov
ror
loopne
fbld
shrb
mov
adc
pop
mov
js
mov
lahf
or
mov
xchg
shlb
mov
sbb
push
mov
cmp
test
jb
lcall
push
push
enter
push
jb
sbb
lds
mov
sbb
inc
push
cwtl
inc
aad
xlat
xor
xor
fsts
aam
rcrl
int3
aaa
js
mov
push
cmpsb
xor
fs
enter
mov
jp
add
testl
mov
and
popa
mov
arpl
push
ljmp
mov
push
sub
mov
dec
sub
push
cmp
xor
mov
push
jb
lret
jo
aam
mov
adc
sbb
xchg
mov
xchg
xchg
test
sbb
aam
xlat
xor
adc
inc
jo
push
mov
mov
sahf
sahf
aad
cmpsl
or
add
xor
jnp
mov
fidivrl
cmpsb
cmpsl
mov
push
pop
mov
mov
mov
mov
pop
mov
adc
loopne
addr16
les
es
xchg
or
scas
scas
sub
movsl
dec
hlt
fidivl
stc
jl
icebp
outsb
add
cld
push
js
sbbb
in
jb
lret
test
push
add
mov
ja
xchg
lods
mov
aas
or
mov
push
mov
popf
jmp
mov
jge
fcomip
push
icebp
in
xorps
int
sub
je
cmc
mov
lods
mov
mov
stc
cld
pop
jg
dec
push
hlt
pop
inc
int3
ror
adc
xchg
push
cli
xlat
push
cltd
mov
ficoms
iret
outsb
or
int
pop
jbe
stc
iret
or
paddusb
mov
sbb
inc
rcrb
mov
xor
mov
cmp
ds
test
push
push
sbb
add
inc
in
bound
stos
cmp
enter
sbb
jp
mov
fsub
adc
icebp
push
add
inc
push
sub
int3
cmpsl
gs
pop
xchg
adc
retw
pop
mov
in
jb
push
imul
lcall
aad
test
ss
shrl
inc
int3
inc
leave
mov
add
das
push
mov
ja
in
cmp
xor
je
insb
inc
push
cmp
adc
aad
andl
fadds
orb
in
test
inc
dec
int3
nop
mov
sub
jle
pushf
sbbb
mov
mov
jmp
cwtl
movl
movb
xchg
sub
inc
test
jp
iret
in
push
mov
icebp
stos
mov
fists
mov
cmp
inc
gs
push
jl
stos
xor
mov
sub
and
inc
push
pop
cmpsl
aam
inc
filds
dec
les
cmpsl
ret
pop
sbb
iret
inc
sti
jg
mov
sbb
fsubrs
les
lock
mov
mov
stc
out
adc
mov
rol
arpl
pop
aam
dec
enter
andb
fld
or
xor
add
add
cltd
lods
int3
push
test
mov
aad
nop
repnz
inc
dec
jge
add
add
out
xor
and
fists
loopne
dec
mov
pop
or
popl
fistpll
test
mov
pop
int
stc
dec
mov
popa
xor
lock
xor
mov
outsb
lock
cmpsl
das
lcall
dec
push
xor
shl
mov
rcrb
aad
push
cld
mov
xlat
dec
adc
dec
mov
pop
in
out
pushf
cmp
ret
mov
pop
sub
xor
sarl
adc
adc
popf
shl
aad
mov
adc
aam
dec
mov
dec
add
les
fdiv
test
mov
aad
arpl
std
push
mov
jl
push
aam
pop
in
ja
rcll
ds
pushw
dec
mul
lock
stos
and
push
jmp
aam
popf
pop
add
rcrl
add
imul
push
test
lret
and
dec
dec
test
push
fdivs
aad
cmpsb
mov
jb
js
push
aam
ss
mov
ljmp
mov
cmc
leave
inc
in
out
andl
inc
test
dec
lret
scas
movb
cs
mov
mov
insl
leave
test
dec
loop
mov
movsb
ret
push
push
setne
pop
sbb
fisubl
lret
mov
push
mov
mov
fwait
add
lcall
js
cltd
imul
sub
psadbw
or
mov
pop
imul
in
fidivs
dec
repnz
rcll
cld
xlat
mov
inc
int3
int3
stc
add
out
cmc
rorl
mov
sbb
mov
cmp
repnz
and
ljmp
cmpsb
in
in
dec
inc
adc
movsb
mov
ret
jg
insl
or
xlat
mov
mov
lcall
movsb
dec
insl
cwtl
aam
dec
fdiv
lea
and
dec
cmpsl
sbbb
inc
mov
call
sbb
stc
push
sbb
adc
ds
test
inc
jmp
xchg
adc
ljmp
and
lods
xor
cmp
mov
nop
xlat
adc
pop
pop
mov
ret
jg
testb
call
add
pop
add
test
cmpsl
xor
sarl
mov
dec
ljmp
sbb
test
pop
fwait
leave
fxch
cmp
ror
subb
xchg
and
pop
pop
lahf
stc
mov
mov
sbb
stos
les
and
js
fcomps
cmpsb
push
ret
cmp
ljmp
mov
mov
add
cli
adc
ds
popf
cwtl
arpl
xor
lret
xlat
mov
sahf
ffree
popf
pop
mov
addr16
xchg
mov
cmp
imul
xorl
cmp
push
daa
test
js
dec
insb
js
inc
pusha
pop
cli
pop
rcrl
fs
mov
fimuls
and
lcall
loopne
jb
cmp
rclb
test
push
or
aam
ret
cli
mov
jns
fmul
xchg
lods
jns
mov
jmp
xchg
add
mov
rorl
mov
jmp
pusha
loopne
fisttps
int
dec
loop
jl
mov
push
or
mov
pop
pop
adcl
test
mov
fs
pmuludq
xchg
filds
inc
xlat
fnstcw
or
movsb
cld
xchg
sti
xchg
inc
loopne
fildll
lods
cmp
lret
inc
pop
rorl
cmp
pop
push
into
ds
jb
fcoms
shl
mov
mov
push
cmpsb
inc
mov
aas
jl
fcmovnu
ret
cli
add
je
mov
pop
adc
or
movsb
nop
pop
pushf
nop
jl
loop
popf
cmpsl
test
inc
sbb
sbb
fwait
sub
add
pop
repz
dec
mov
test
out
lods
rcll
cmp
lret
aaa
les
add
cmp
xor
loop
xor
leave
mov
push
adc
scas
inc
lcall
mov
jecxz
bnd
ss
xor
cld
push
mov
xchg
mov
in
mov
into
mov
ret
sbb
and
scas
cmp
fnstenv
sti
xchg
add
popa
aam
xchg
fs
test
dec
push
adc
es
enter
lcall
dec
xor
fld
and
mov
mov
je
mov
into
lods
adc
in
dec
and
popa
aas
jae
lcall
enter
mov
movsb
or
repnz
les
es
fsubrl
fucomip
arpl
aam
pop
test
fmuls
popf
daa
jns
jnp
mov
cmp
cmp
bound
adc
cmpsl
fstps
mov
or
stc
sbb
dec
in
pop
mov
or
mov
loop
cmp
mov
and
test
jbe
inc
cmc
shlb
aad
mov
adcb
mov
popf
mov
repnz
fadd
sbb
cmp
sahf
inc
cmc
fldenv
xchg
push
inc
jbe
dec
xor
sbbb
into
or
into
leave
mov
push
icebp
push
sti
jmp
cmpsl
or
ret
fists
inc
xor
shll
jle
stc
das
jae
les
rcll
aam
inc
iret
test
aad
mov
push
call
stc
lcall
inc
xchg
sbb
test
js
or
xchg
scas
xchg
inc
iret
push
lds
icebp
xlat
pop
je
mov
shl
faddl
rorl
cli
mov
or
and
cmp
aam
xor
push
cld
in
enter
fdivr
popf
and
pop
movsb
fwait
cmpsl
pusha
imul
add
aas
xchg
adc
add
cs
mov
xchg
or
enter
add
lcall
pop
jl
cmp
pop
jo
adc
pop
cmp
cld
mov
sbb
cmp
rcpps
jg
test
movsb
or
lods
sahf
lock
and
stc
in
mov
test
popa
xlat
imul
xchg
scas
dec
shll
jge
test
mov
movsl
pop
cmpsb
cmpsl
or
rcr
sti
int
cld
sub
sub
mov
add
dec
xchg
xor
xchg
out
js
push
cwtl
imul
mov
dec
lret
cmp
push
sarl
call
aam
iret
lods
xchg
and
push
and
push
adc
popa
out
mov
out
mov
jbe
fadd
xor
xchg
inc
ja
mov
shlb
enter
lds
lahf
sarl
pop
rorb
jnp
sbb
stc
dec
bound
dec
test
movsl
xlat
das
test
cwtl
aad
adc
out
cmpb
sub
clc
pop
das
pop
jecxz
loopne
mov
nop
jp
loopne
adcl
dec
ret
xlat
jno
and
mov
ss
sarl
leave
arpl
xlat
pusha
rclb
xchg
pop
mov
inc
gs
mov
push
cld
outsb
cmc
add
int3
or
sbb
inc
push
outsb
arpl
ret
jg
fdivrl
sbb
pop
xchg
test
push
push
mov
push
arpl
xchg
fwait
lods
ret
mov
pusha
js
test
push
cltd
push
test
push
mov
add
mov
dec
mov
jge
notb
pop
mov
xchg
mov
mov
sarb
mov
sar
cmp
inc
ja
sti
inc
mov
addr16
pop
mov
adc
adc
mov
dec
xchg
pushf
cmpl
xlat
in
sbbl
cmp
xor
inc
or
sub
fcmovb
jne
jl
jae
iret
cmp
jns
xchg
and
loope
sub
push
cld
scas
adc
xchg
popf
mov
out
lret
xchg
mov
xchg
bound
adc
ds
inc
cmp
ret
mov
ret
inc
hlt
cmc
dec
cwtl
fildl
xlat
lods
jle
add
mov
mov
dec
push
mov
xor
loope
adc
adc
gs
cmpsb
push
loopne
mov
mov
dec
dec
mov
pop
mov
jae
inc
add
mov
mov
daa
imul
dec
fbld
push
outsl
xor
sub
mov
dec
mov
dec
jge
shl
lret
jo
ret
cli
ror
jnp
xor
notb
inc
cmp
fwait
push
movsb
enter
cmp
xchg
fsubr
mov
cli
gs
in
iret
mov
push
push
daa
push
push
repz
push
mov
shrl
iret
int3
leave
lret
fbstp
mov
imul
xchg
into
xchg
pop
jo
jmp
ficomps
jp
addl
fnstsw
push
xlat
fcomps
sub
jbe
push
mov
push
clc
dec
fbld
sub
adc
test
mov
mov
fisubl
cmp
popf
inc
sbb
ljmp
cltd
lahf
mov
popf
push
xor
sbb
cmpsl
stc
arpl
imul
mov
dec
mov
push
das
stos
sbbb
ret
mov
dec
push
sub
xchg
mov
xlat
and
mov
leave
and
add
add
mov
mov
sti
xchg
add
xchg
lods
std
shrb
pop
into
arpl
stos
sub
jl
push
pop
int3
lret
sar
xchg
imul
mov
inc
cld
in
xchg
jno
fstpl
pushf
lods
xchg
pop
pop
xchg
cmpsl
rol
outsb
inc
test
outsl
or
xchg
or
push
mov
cmpb
cmp
leave
addr16
leave
push
lret
cmpsl
les
shll
jb
cmc
rcl
xchg
shrb
dec
dec
cmp
push
adc
xor
in
cmp
daa
sub
ror
or
mov
ret
lcall
aas
test
rorb
mov
int3
mov
dec
pop
mov
and
pop
and
rol
fsubrl
add
push
xchg
sbb
rol
ret
mov
or
addr16
mov
cld
orl
or
or
inc
inc
add
mov
jl
or
jns
les
add
xchg
scas
cmp
movsb
lods
dec
jp
adc
decl
sub
pop
inc
sbb
jp
add
mov
enter
ret
or
notb
and
mov
sbb
in
jno
sbb
data16
pop
icebp
inc
outsl
out
lds
insb
mov
sahf
mov
dec
push
push
pop
sub
inc
ret
cld
xchg
adc
sbb
gs
adc
iret
mov
mov
rcrl
fsubr
push
sbb
cmpb
test
add
sub
sbb
stc
lret
pop
xchg
xor
rcrb
jae
or
std
jno
rcrl
mov
lret
push
jo
add
xor
nop
loopne
jp
xlat
fsubp
fsubrl
mov
iret
adc
mov
outsb
mov
aam
inc
fsubl
adc
and
dec
fisubl
jns
ficoms
mov
fisttpll
cmpsb
les
and
insb
jl
sti
sub
inc
pop
add
movsl
inc
jne
and
mov
in
mov
repnz
cmpsb
cmpl
push
ret
add
mov
xchg
out
cld
mov
call
mov
jbe
mov
loopne
test
mov
iret
jmp
sub
push
test
fwait
xchg
call
mov
mov
popf
int3
push
cmpsl
test
rol
arpl
dec
loop
sbb
jl
cwtl
arpl
cmp
mov
jmp
or
mov
mov
imul
pop
add
popf
xchg
jmp
lods
or
and
aad
lcall
repnz
cld
push
shl
sahf
mov
adc
fmull
mov
lods
inc
fnstenv
jno
pusha
lods
lret
dec
pop
insl
mov
test
or
popf
dec
enter
dec
movsb
lret
dec
jb
jbe
cmp
arpl
in
test
mov
pop
das
sbb
fldt
inc
xor
xor
or
xor
sbb
adc
cmp
adc
cld
stc
mov
mov
cli
lret
or
gs
int3
push
pop
inc
push
or
mov
cmp
xor
mov
notb
insl
mov
pusha
jnp
pop
jge
imull
mov
or
sahf
dec
or
stos
adc
mov
jmp
jecxz
lods
sbb
pop
add
mov
mov
mov
pop
push
insl
aas
shlb
lea
push
out
inc
mov
mov
xlat
gs
and
in
dec
sbb
cmp
pop
xor
loope
enter
pop
jae
mov
shr
mov
filds
mov
leave
dec
int3
fcompl
pop
lret
dec
push
fxch
leave
jg
jp
sbb
lea
imul
jge
pop
cmpsl
and
insl
mov
lret
inc
push
insl
fcomps
push
lret
repnz
xlat
jp
dec
shrb
dec
inc
lds
adc
clc
or
mov
outsb
lcall
mov
shlb
iret
push
sub
stos
mov
adc
adc
dec
jnp
xor
adcb
xchg
mov
bound
lds
add
int
les
mov
xor
xchg
xor
pop
sub
add
inc
fcomps
sub
adc
das
mov
test
iret
xor
fisttps
lods
jmp
adc
sub
xchg
add
int3
or
pop
pusha
lods
push
shlb
nop
inc
xorb
xchg
or
add
jle
cmp
iret
out
fsubrl
push
lret
inc
add
pushf
or
mov
cmp
arpl
popf
mov
outsb
jo
lds
iret
mov
cwtl
cmpl
sbb
push
jo
cmpsl
push
fcoml
add
cmpsl
lahf
xchg
dec
mull
iret
cmp
xchg
fimuls
or
xchg
aas
arpl
inc
jb
in
ja
xchg
iret
je
jbe
mov
adc
inc
pushf
or
les
xor
inc
or
sbb
popa
xlat
inc
add
fcomps
jg
mov
cmp
jb
ja
push
jnp
rcpps
xchg
jno
call
lds
cmpsl
iret
xor
int
aaa
fdivr
ret
cltd
in
imul
aam
lret
lcall
push
cmovs
mov
popf
fbstp
jp
mov
stc
mov
rcr
sbb
imul
cli
push
pop
hlt
push
test
hlt
inc
cltd
push
fistps
and
cmpsb
push
rcrb
movsl
mov
cltd
xor
movsb
nop
mov
cltd
pop
addr16
int3
out
sub
sbb
int
pop
lret
xchg
sbb
mov
aas
lds
add
push
enter
cltd
inc
dec
leave
pop
fcmovb
xchg
cwtl
cwtl
push
dec
pop
cmpb
push
cmp
xchg
std
push
mov
out
and
enter
repnz
std
movsb
inc
or
lods
ds
popf
mov
pop
roll
sub
popa
or
pop
dec
in
iret
and
ffreep
cli
pop
sub
shll
xchg
sbbl
jp
push
or
add
mov
cmp
std
into
popa
daa
into
or
ret
jl
aad
fisttpl
push
lcall
into
ret
lret
pop
out
enter
and
scas
out
cmp
insb
xchg
andl
inc
rcll
ret
xlat
push
nop
mov
push
xor
dec
js
outsb
gs
cltd
xlat
jae
outsl
mov
dec
shrl
imul
xor
mov
hlt
sub
mov
cltd
mov
push
rcrb
fsubrl
gs
push
pop
mov
jno
sbb
push
adc
test
pop
cltd
xor
movsl
pop
test
insb
cwtl
arpl
jbe
push
adc
sti
inc
test
shl
push
mov
icebp
movd
or
mov
adc
insl
test
mov
int3
je
lret
fs
lcall
inc
sub
mov
aam
mov
lcall
in
popa
in
pusha
push
pusha
cmpl
sbb
vpsubusb
pop
mov
mov
icebp
aad
xor
push
push
xor
rcll
push
dec
shlb
arpl
xchg
push
popf
inc
and
je
dec
stos
pop
fiadds
push
jmp
sub
mov
leave
dec
pinsrw
fldcw
pop
xchg
push
and
scas
jae
andb
scas
gs
dec
pushf
lret
mov
jg
sti
int3
mov
stc
add
lea
pop
mov
push
mov
jp
sbb
aad
sub
test
lret
lods
int3
mov
mov
lret
adc
rcr
mov
mov
das
xchg
loopne
sar
rorl
mov
adc
sub
push
jg
js
int3
fcoms
add
inc
cwtl
or
call
rcll
xchg
cld
dec
mov
test
jle
ds
imul
mov
dec
jbe
mov
mov
adc
rcr
jns
push
aam
sti
loopne
fdiv
imul
xlat
push
frstor
int
out
in
icebp
cmp
enter
mov
jmp
ffreep
cmpsb
adc
inc
and
jecxz
inc
ret
movsb
sub
iret
out
or
xor
iret
add
sub
out
sub
adc
negb
dec
xchg
loopne
mov
push
dec
mov
dec
cmpsl
leave
add
sub
mov
cmpsb
sbbb
jp
jmp
inc
stos
bound
cli
lods
pop
int3
scas
mov
sub
jl
insb
jmp
fldcw
mov
shrb
lcall
divb
ret
xchg
mov
sbb
bound
scas
lods
fs
mov
fisubrs
fdivs
je
cld
movsl
movsb
push
sbb
lea
mov
cmp
mov
and
stc
jge
cmp
enter
jns
push
cmp
test
dec
repz
push
int
scas
dec
fidivl
test
cmpsl
mov
push
jecxz
scas
dec
test
ficompl
mov
xlat
mov
mov
lods
cmpb
iret
add
aaa
loop
add
loopne
sbb
je
and
out
dec
dec
push
scas
rclb
aad
stos
mov
sti
loopne
jb
xchg
orl
jl
loope
ficomps
add
cmp
lods
enter
and
jp
pop
cmpsl
test
and
leave
orb
test
xchg
gs
out
in
sbb
stc
cli
outsb
adc
inc
sbbb
int3
sbbb
mov
add
sbb
int3
lret
and
sahf
in
fwait
gs
test
stc
repnz
aad
popf
insl
inc
cwtl
jle
out
test
ret
daa
fisttps
push
mov
insb
cli
xor
xchg
jl
pop
lock
cli
dec
cld
out
roll
jp
flds
call
pop
dec
lcall
jmp
pop
out
ret
imul
sub
daa
movsb
cmp
push
mov
pop
sub
fistpll
inc
mov
cmpsb
sahf
arpl
xchg
or
sub
out
and
mov
add
ffreep
jmp
mov
sbbl
adc
cld
jb
test
sbb
dec
ret
arpl
xchg
and
xchg
push
mov
pop
add
add
mov
jle
or
xlat
xor
dec
aam
push
mov
add
jle
sti
cmp
pop
cli
jns
pushf
enter
inc
push
ret
jmp
cs
mov
cmpsl
repz
adc
adc
push
shrl
andb
pusha
jecxz
insb
in
pop
pusha
mov
fldcw
mov
pop
inc
test
jne
cld
movl
mov
sub
movl
lds
mov
lret
and
jmp
dec
pop
daa
add
stos
rcr
int3
xchg
or
dec
mov
data16
xor
sub
cmp
enter
fimuls
test
fistps
ficomps
aam
dec
adcb
add
add
fnstcw
push
or
dec
cld
shll
daa
stos
push
or
mov
xlat
fcmovne
inc
rcrl
mov
cmpsl
xchg
jmp
lods
xchg
or
jl
inc
aad
sbb
xchg
dec
cmp
push
cs
adc
enter
dec
rcl
dec
adcl
lds
loop
push
leave
rorl
aad
adc
test
push
xlat
clc
lcall
ss
inc
ret
mov
mov
or
popa
inc
jecxz
mov
xlat
test
mov
or
je
fcoml
lds
jecxz
lcall
push
rcll
or
push
out
sbbl
push
and
ficomps
sbb
addr16
mov
dec
dec
jl
cmpsl
add
mov
pop
mov
pop
fcoms
cmp
xlat
push
shll
jmp
lods
faddl
test
push
mov
rcr
pop
iret
jmp
push
sbb
cmp
scas
pop
lret
mov
fmulp
arpl
jp
and
inc
stc
das
inc
mov
pop
ds
mov
fs
cld
scas
mov
repz
les
sbb
cmp
xchg
pushf
xor
jo
adc
mov
leave
dec
mov
stc
xchg
sbb
in
mov
xchg
leave
adcl
jg
mov
repnz
repz
add
cld
pop
movsl
sub
pop
and
es
jae
adc
cmp
lds
pop
jmp
push
jae
outsb
popf
add
test
and
inc
sti
cmpsl
dec
repnz
jns
mov
push
ret
and
out
xchg
shll
nop
push
int3
xor
mov
sbb
rcr
clc
pop
insb
add
je
testb
repz
std
popf
je
mov
cmp
or
sbb
lcall
cmp
jbe
lret
adc
cmc
adc
pop
sbb
mov
push
cmp
ss
mov
dec
cmp
mov
cmp
inc
jmp
clc
rcrl
mov
or
xchg
addr16
int3
jecxz
es
sbb
and
repnz
addl
add
pop
pop
enter
imul
loop
mov
cltd
fsubl
adc
pop
xlat
xlat
jb
mov
hlt
sarb
sbb
mov
rorl
dec
popl
sub
mov
popf
cld
xlat
into
adc
repnz
stc
pop
ret
in
push
inc
lahf
dec
cld
push
stc
lcall
and
js
mov
cld
pop
xor
pop
sub
mov
ss
pop
scas
mov
inc
fs
lret
mov
dec
mov
movsb
popa
mov
popa
cmp
sub
add
in
popa
stc
push
cld
lods
push
mov
lods
mov
mov
popa
and
xchg
dec
lret
push
out
addr16
cmpsl
fimuls
lret
mov
pop
imul
aam
lods
inc
jmp
out
xchg
mov
mov
push
add
in
aas
lret
mov
xor
adc
je
pop
shld
xlat
cmpsl
xchg
mov
dec
xlat
imul
cmp
ror
mov
sbb
cwtl
mov
jns
jmp
loopne
cvtpi2ps
popa
jl
xchg
imul
mov
pop
inc
mov
bndldx
jae
lret
xchg
shll
leave
ja
arpl
cwtl
xlat
cmp
xchg
fidivl
mov
fcomps
jl
fwait
jo
push
mov
add
xchg
sub
es
dec
add
xor
xchg
aas
inc
test
ja
cmp
gs
leave
aad
push
dec
das
jno
loope
gs
stos
pop
jb
negl
faddl
cltd
jb
roll
dec
xor
dec
imul
pop
mov
or
xchg
adc
stos
aad
add
in
mov
cli
icebp
push
jo
or
cmp
iret
int3
mov
rcr
movsl
sub
mov
xlat
data16
cmpsl
aas
pop
leave
mov
leave
cs
xchg
insb
lret
push
out
dec
cmpsb
add
inc
inc
and
jl
cmp
movsb
iret
push
rcrl
test
dec
add
sbb
ficomps
push
imul
inc
xchg
imul
rcr
mov
popf
stos
testb
dec
sbb
and
out
lock
dec
test
push
xchg
jae
std
iret
xchg
add
xlat
jae
push
mov
bnd
fldenv
jecxz
push
stos
mov
cmpsb
sbb
mov
push
xchg
lods
insl
imul
in
inc
sub
arpl
inc
mov
mov
iret
stc
repnz
das
push
dec
mov
pop
push
test
and
push
xchg
push
mov
loope
lods
mov
lods
movsb
pushf
jecxz
mov
push
mov
cld
repz
fsubrl
jle
shrl
ret
mov
mov
jl,pn
les
lret
cmp
pop
adc
lret
or
pop
jnp
fists
fiaddl
add
mov
cmp
cmpsl
dec
pop
jecxz
shll
pop
test
addr16
xchg
int3
xor
ret
inc
fistpll
das
dec
or
and
cmpsl
adcl
lcall
loop
pusha
pusha
fwait
int
mov
outsl
cmpsl
pop
push
sbb
add
out
pusha
jmp
xlat
cltd
pop
loopne
or
movsb
and
add
icebp
jle
mov
mov
outsb
js
rcrb
mov
test
add
sub
movl
cmp
mov
cmc
jns
pusha
adc
fstpt
dec
xchg
sbb
mov
xchg
or
mov
ficomps
inc
into
xchg
enter
add
mov
loopne
push
imul
js
lcall
add
imul
lods
adc
popf
cmp
aaa
cmp
inc
add
lods
fistps
xor
push
add
xor
rorb
xor
xchg
jle
pop
jl
out
xchg
mov
adc
int
add
add
out
cld
add
cmp
inc
pop
and
add
sbb
push
les
cld
mov
cmp
mov
out
les
sub
enter
movsb
mov
xor
dec
lcall
xchg
and
pushf
out
mov
mov
lret
scas
sbb
cmp
inc
sub
mov
push
push
inc
ds
push
stos
int3
pop
xor
scas
mov
sbb
dec
loopne
aam
and
push
dec
out
jae
mov
add
dec
jno
outsb
lret
xor
dec
into
andl
lods
mov
pop
mov
test
call
and
xchg
add
iret
push
sbb
scas
push
out
mov
fldt
fstpl
ret
call
sub
mov
pop
or
dec
fcoms
cmp
loopne
ss
in
jmp
adc
lret
inc
lcall
xchg
mov
push
jno
mov
cmp
sub
gs
or
or
mov
insb
int
fistps
insl
mov
lods
ret
jge
jns
sar
cmp
movsb
xchg
les
and
or
gs
ja
add
dec
stc
ja
pop
dec
jnp
mov
test
aaa
stc
mov
or
lret
aad
mov
xchg
in
es
sarb
in
mov
ds
add
dec
sbb
fsubrs
cmp
push
sbb
stc
dec
int3
loope
test
mov
ret
fildll
adc
fcomps
cmp
pop
neg
pop
shrl
pop
adc
into
out
mov
je
scas
inc
cmpsb
in
das
or
test
mov
ret
or
mov
cmp
rcl
or
int3
bound
fisttps
stc
scas
test
cli
mov
jb
xchg
neg
push
push
daa
scas
cmp
inc
jns
imul
sbb
insb
inc
loop
loopne
xlat
loope
in
add
sub
rol
mov
call
test
jb
pop
ficoms
inc
xchg
cmp
scas
je
jmp
sarb
sarb
dec
cmp
push
xchg
jp
sub
mov
shl
pop
mov
mov
into
mov
lods
movsl
mov
scas
lods
movsb
dec
and
cmp
enter
push
loope
fldenv
comiss
fs
mov
sub
push
scas
addr16
std
jmp
test
pop
jb
je
fwait
mov
jne
add
push
inc
mov
inc
sbb
repnz
aam
ret
dec
inc
mov
jo
jb
push
lds
fimuls
sub
js
and
mov
fnstenv
or
mov
jp
shrb
mov
hlt
mov
test
jl
push
jmp
push
stc
dec
cld
inc
cmp
mov
stos
in
fmul
mov
pop
xchg
popa
xchg
gs
int3
mov
pushf
sub
add
xchg
test
mov
fmul
inc
mov
cltd
bound
inc
jg
lock
sub
mov
cmp
les
inc
cli
mov
adc
mov
or
push
cmp
hlt
sub
incl
pushf
in
push
push
xchg
imul
sbb
push
inc
push
bound
mov
lds
jns
sbb
dec
fisttps
pop
sbbl
cltd
xlat
xchg
jle
fnstcw
dec
cmp
fisubs
scas
jl
int3
adc
frndint
fmuls
jno
repz
int
push
dec
outsl
lods
pop
out
outsb
and
sub
or
jg
lods
mov
ret
fisttps
stos
cltd
xchg
and
js
daa
stos
scas
inc
test
js
inc
test
cmpsl
or
addr16
in
inc
pop
and
mov
mov
inc
sub
push
cli
dec
mov
mov
xchg
sbb
fisubrs
xchg
jle
and
in
adc
rcrl
sbb
aam
add
sbb
fnsave
jl
jns
int
fistps
xor
push
adc
je
dec
or
out
fcomip
sahf
mov
pop
std
add
pop
lods
fcoms
loope
sub
push
test
push
adc
inc
cmp
jb
jae
aam
fists
fbld
out
fwait
xchg
or
out
mov
inc
fs
mov
test
push
jg
je
enter
imul
std
pop
add
aam
pop
add
aam
pop
add
aam
xchg
inc
aaa
push
cld
mov
xchg
pop
push
iret
adc
dec
mov
rcr
add
jp
and
pop
xor
mov
mov
jmp
lods
in
push
psubw
jns
stc
cmpsb
mov
fdivr
dec
jns
cmp
outsb
pop
test
rol
cltd
fnstcw
jbe
cmp
iret
jae
mov
push
pop
stos
push
int3
std
subb
lcall
popf
inc
ja
inc
jno
jge
loopne
int
cmp
cld
mov
mov
jae
stos
mov
mov
inc
rcrb
testl
leave
subb
je
sbb
mov
sbb
cli
jl
outsb
cs
and
pop
inc
ret
mov
pop
das
stos
mov
outsb
scas
inc
aad
call
test
add
ja
add
xchg
inc
arpl
xorb
dec
pop
cmpb
dec
pop
fisubrs
into
test
xchg
mov
dec
lods
mov
xchg
mov
mov
dec
xor
dec
imulb
and
lcall
pop
in
adc
aas
pop
jecxz
cli
imul
lahf
jp
xchg
jno
test
out
imul
scas
fisttpl
test
repnz
je
xor
mov
adc
ret
push
pop
sbb
cmc
popa
loopne
sbbl
adc
fwait
enter
out
mov
ficompl
jb
fcoms
popf
jg
push
int
mov
enter
pop
insb
pop
push
int3
sbb
jns
cmp
jno
es
mov
subl
jnp
dec
sub
xor
push
fs
jp
lret
add
xchg
cmp
fwait
jp
je
ret
lds
testl
and
insb
jb
jl
inc
addr16
sub
mov
pop
faddl
fsubrl
cwtl
fidivs
rolb
scas
xor
cmp
test
mov
mov
and
addb
mov
xor
push
rcr
sahf
fdivr
inc
push
and
and
mov
mov
inc
int3
pop
leave
jmp
push
roll
xchg
dec
mov
push
enter
cli
cwtl
sub
xor
mov
dec
pop
inc
jb
mov
push
fwait
jle
cld
cltd
xor
pop
mov
push
mov
cld
pop
push
pop
arpl
pop
mov
push
lcall
inc
xchg
push
scas
dec
push
mov
nop
sbb
push
mov
cmpsl
loop
fisubs
mov
push
jl
test
inc
fldenv
sbb
mov
sbb
repnz
arpl
shll
jmp
or
xchg
cmp
xlat
movsl
test
sub
mov
dec
mov
lods
mov
pop
adc
movsb
stos
aaa
mov
cmp
repz
sub
push
in
sub
data16
repz
int3
mov
lcall
push
jne
fwait
push
inc
jmp
imul
mov
sub
lret
xchg
inc
mov
xlat
pop
pop
test
lret
cmp
pop
lret
xlat
das
add
fisttps
jecxz
mov
popf
les
mov
sbb
nop
push
rolb
fcompl
mov
lods
fistl
mov
fisubl
dec
imul
pop
repz
pusha
scas
or
data16
enter
popf
jmp
mov
ds
je
inc
lock
loop
outsl
shrb
xchg
dec
add
jns
jmp
inc
test
inc
mov
test
pop
mov
insl
popf
lcall
je
test
outsb
pop
in
dec
pop
test
in
push
push
inc
adcl
xchg
and
dec
mov
mov
inc
mov
int3
push
push
lcall
pusha
iret
adc
inc
in
int3
jb
push
imulb
xlat
fdivl
mov
fdivrl
test
mov
inc
adc
ljmp
faddl
call
insb
enter
push
rorl
jmp
mov
add
add
cmp
enter
push
push
rcrb
pop
in
nop
mov
enter
aam
pop
jp
jae
aam
jae
ret
push
push
push
jae
nop
adc
out
dec
cmp
jp
lds
idivl
pop
test
mov
pop
dec
sbb
sub
lahf
ret
xchg
aam
shrl
roll
xchg
hlt
scas
lods
add
aaa
fs
push
and
stos
or
lods
iret
clc
push
fcomip
mov
cmc
sahf
in
lock
jns
mov
fmuls
add
xchg
dec
ret
jl
ja
stc
push
popa
jb
sbb
test
aam
int3
push
inc
das
insl
cmp
xlat
imul
inc
or
inc
inc
out
loop
inc
fcmovu
xlat
lret
leave
jns
sub
cmpsb
test
xchg
inc
stos
test
stos
sarb
push
out
test
sbb
sahf
inc
ss
or
sbb
divb
mov
gs
in
insb
lds
cmpb
cld
mov
jmp
xlat
imul
test
ss
shl
mov
lret
push
inc
out
jl
fisubrs
in
fcompl
push
out
sub
mov
or
stc
mov
add
lods
inc
test
test
lds
das
xchg
lret
int3
repz
repnz
xchg
cmp
inc
cmp
lds
xchg
dec
cmp
arpl
xchg
jmp
mov
xor
aaa
out
mov
addr16
ljmp
nop
and
adc
mov
push
shrb
mov
push
lret
mov
mov
mov
lret
stc
dec
push
insl
gs
xor
mov
mov
sub
or
xor
ret
pop
sbb
inc
loopew
aam
in
sub
sub
sub
cmp
cmp
stos
ret
je
std
cmpb
jne
cmp
in
outsl
icebp
mov
cmpsb
fldcw
subb
xchg
lods
fdivl
into
rorb
je
push
jp
int
jmp
mov
aaa
mov
mov
out
xor
cmp
pop
ficompl
fisubl
ret
mov
mov
xchg
movsb
jmp
hlt
dec
inc
loopne
sub
lfs
movsb
fstps
mov
jo
pop
scas
into
mov
lods
mov
push
xlat
js
inc
test
stc
pushf
pop
jbe
inc
clc
cmp
mov
adc
xor
pop
std
test
rcl
flds
fwait
mov
xlat
xchg
jle
ftst
sti
jno
mov
dec
xlat
dec
inc
fcmovnb
cmp
mov
add
fmull
mov
adc
imul
in
mov
imul
aad
sbb
into
ljmp
push
inc
fisttpl
pop
xchg
push
cmp
aad
sbb
add
aas
rorl
in
lcall
les
pop
stc
es
in
gs
jbe
xchg
pop
xor
cmpsb
adc
imulb
mov
adc
push
repz
rorl
cmp
sti
add
push
sub
jp
repz
in
ja
sbb
es
and
cwtl
call
fcmovb
fwait
pop
add
bound
notb
cmp
jne
test
push
mov
test
ljmp
sti
mov
jecxz
test
jne
xchg
orl
cmp
jb
les
fidivs
out
pop
fiaddl
inc
ficompl
add
fists
inc
xchg
sahf
popa
sub
pop
inc
mov
loopne
mov
lret
repz
sti
adc
jle
mov
daa
cwtl
adc
cli
leave
add
popf
mov
fidivs
jns
stos
xchg
pop
push
test
sub
mov
mov
and
fldt
xor
out
add
adc
aad
dec
popf
ret
fstpl
mov
cld
sahf
fdivrl
shlb
sti
sub
push
int
testb
cmpsl
movsl
out
mov
enter
in
lods
sub
push
add
mov
fdivrs
push
jnp
adcb
stc
ds
outsb
ds
jo
sbb
dec
jnp
push
nop
mov
or
mov
xor
push
sbb
sub
mov
push
incb
jb
je
pop
frstor
fcmove
sbb
aas
push
mov
cs
jnp
lcall
lods
or
repnz
test
in
dec
enter
fldenv
lods
xor
lds
fcmovb
jl
gs
ret
adc
cld
jbe
cmpsb
test
mov
movsl
fsts
nop
mov
dec
and
push
mov
add
mov
lods
mov
stos
mov
mov
mov
mov
mov
push
mov
cli
mov
std
into
or
int3
stc
fs
inc
or
mov
push
fcmovne
lds
ret
mov
leave
add
lcall
push
mov
sbb
lret
pop
pop
fsubrs
shrl
cwtl
or
popf
push
dec
xor
jns
push
xchg
jg
mov
jg
add
adc
jno
cli
xchg
sbb
adc
leave
mov
and
add
or
mov
adc
loopne
mov
insb
mov
mov
xlat
xor
stc
mulb
ss
and
sub
sbb
fidivs
arpl
push
xor
fcompl
scas
mov
mov
mov
rolb
lcall
mov
call
ds
mov
imul
inc
sub
sbb
jbe
mov
lret
xchg
xor
jo
and
push
test
jecxz
jo
in
dec
test
or
rcll
push
jle
fs
int3
sub
lcall
repnz
mov
lret
lahf
ss
rcrb
leave
cli
aad
cld
arpl
push
sub
ret
sbb
ret
sbb
mov
mov
adcl
pop
pop
lea
jp
mov
mov
stc
inc
das
dec
inc
int3
das
les
test
add
imul
and
stc
add
xchg
es
push
mov
bound
add
cld
jb
lods
or
rcr
lods
push
mov
cbtw
xor
push
xor
lock
mov
fbstp
fcomi
xlat
and
shlb
pop
cli
iret
lock
push
decl
mov
std
fdivr
rcrb
xor
repnz
pop
pop
add
test
and
xchg
push
test
add
xlat
dec
pop
lret
call
cli
push
push
lret
add
push
inc
sub
dec
and
ds
push
mov
sti
and
mov
andb
fst
rcrb
mov
out
stc
insb
out
int
mov
pop
push
scas
jae
inc
cmc
or
xlat
popf
adc
push
fidivl
mov
sbb
arpl
enter
out
arpl
pop
imul
sub
xchg
ret
jecxz
or
iret
nop
ret
add
mov
arpl
fs
ret
xor
push
jae
loop
cwtl
and
repnz
test
les
iret
addr16
adc
mov
fldenv
int3
jb,pn
jbe
stc
add
cmc
addr16
mov
andl
out
ficoml
scas
and
cli
addb
ret
fistpll
arpl
push
jl
pop
cltd
lds
mov
mov
pop
or
fcoms
lret
sub
add
dec
add
or
ret
dec
test
mov
cld
jecxz
out
aam
pop
shll
inc
int
inc
sbb
aad
and
scas
lds
xor
loope
dec
adc
shr
test
jmp
xchg
sub
add
mov
mov
xchg
fldl
jg
sbbb
dec
pop
loop
adc
fdiv
loop
outsl
add
shlb
push
loop
cmpsb
test
pop
ds
movsb
cmpsl
sbb
sti
xor
aam
sub
sar
inc
xlat
sbb
inc
pop
xchg
sbb
insb
or
mov
inc
dec
ds
sbb
cmpsl
cld
mov
shlb
pop
lret
ds
loopne
cmpsl
ret
push
stos
pop
adc
arpl
ds
and
mov
lods
fsubrl
cli
adc
mov
mov
test
sub
imul
js
movsb
mov
adc
add
jns
sbbl
fildll
inc
orl
jns
jge
add
pop
sar
and
and
push
push
int3
xchg
xchg
mov
lret
add
out
hlt
in
dec
fidivrs
sarb
jb
lret
mov
mov
outsl
mov
mov
scas
push
fldenv
push
int3
and
push
jl
xchg
sbb
xchg
insw
mov
std
iret
repz
adc
orl
add
adc
sub
mov
push
dec
sbb
jns
ss
std
sub
les
int3
scas
popf
cwtl
xor
mov
push
push
pop
mov
lret
pop
orl
pusha
imul
fcompl
inc
push
sub
or
stc
xchg
iret
pusha
jl
mov
stc
ret
iret
jg
pop
push
mov
icebp
out
adc
push
mov
xchg
fcoml
sub
lret
xlat
add
cwtl
ret
iret
lret
mov
mov
mov
mov
lds
loope
int3
mov
sub
xchg
stos
and
hlt
adc
mov
xchg
push
roll
repnz
dec
pop
data16
adc
adc
add
dec
lods
adc
scas
mov
pop
and
jbe
and
rcl
cmp
inc
mov
jno
push
mov
stc
stc
mov
xchg
scas
test
in
aam
repnz
fs
dec
or
enter
cmp
cwtl
and
mov
imul
cli
xor
aad
dec
lods
inc
push
inc
push
and
push
dec
lret
shll
and
or
jg
push
mov
sub
push
and
adc
mov
insb
dec
jbe
leave
inc
push
push
and
jb
mov
mov
in
and
subb
dec
xor
sbb
lods
dec
jmp
dec
pushf
lcall
nop
or
sbb
std
cs
and
mov
ret
mov
xchg
and
fldl
cmp
call
push
cmpsl
fsubrs
mov
push
adc
mov
jmp
or
mov
inc
dec
pop
xchg
adc
sub
jl
add
fwait
lret
int3
inc
in
ret
mov
inc
ret
iret
cmp
pushf
mov
dec
xchg
dec
and
test
sbb
aam
inc
lret
add
push
cvtps2pd
mov
roll
ffreep
in
mov
movsb
orl
fadd
fcmovbe
cmpsl
ret
jmp
fwait
loope
and
xlat
cmpsb
mov
leave
inc
mov
and
mov
mov
lods
movsb
or
sub
stos
test
mov
dec
mov
pop
mov
int3
xor
mov
rorb
dec
inc
cmpsl
xchg
fimull
add
mov
es
dec
jo
xchg
mov
test
js
xor
mov
ret
aam
inc
rorl
rolb
int3
int3
push
leave
and
orl
lret
mov
stc
aad
fcom
rcr
dec
aam
rorl
loopne
fisttpll
or
test
je
test
movsl
aam
inc
mov
fimull
add
scas
fnstenv
nop
stos
lds
dec
lods
test
lods
mov
stc
mov
dec
mov
mov
mov
xor
mov
mov
pop
add
mov
push
aas
push
push
mov
inc
lret
fdiv
xchg
push
push
xchg
orl
lret
flds
cltd
xchg
test
imul
stos
pop
fisubl
mov
es
mov
dec
stos
inc
ficomps
xchg
mov
fadds
mov
mov
jae
nop
dec
mov
mov
and
arpl
mov
movsl
sti
sarl
mov
ds
rcrb
lds
adc
insb
sbb
in
test
out
sub
movq
adc
mov
insb
aam
push
loopne
xchg
adc
xchg
mov
adc
int3
enter
les
cli
mov
dec
and
std
add
fdivl
dec
out
test
rorl
in
sub
cwtd
cmp
push
lods
pushf
in
sarb
mov
mov
mov
dec
cmp
enter
push
std
jle
dec
sbb
ds
cmp
xor
scas
mov
lret
add
mov
ret
xor
jb
inc
or
pop
insb
push
add
sbb
repz
cmp
xor
inc
testb
fmul
mov
add
sub
test
xchg
or
sti
push
xlat
nop
nopl
sbb
adc
push
and
mov
dec
rolb
leave
fildll
pop
add
enter
adc
js
mov
out
pop
sbb
aad
sbb
shrb
rclb
loopne
or
iret
pushf
pop
jmp
mov
xlat
mov
movsb
cmc
xchg
roll
mov
push
sub
xor
repnz
add
dec
fnstcw
and
cmpsl
jmp
enter
rorl
lret
sub
das
or
stos
imul
mov
mov
push
je
xchg
push
loopne
hlt
or
cmpsl
push
cmpsl
xor
icebp
movb
pushf
in
loopne
lret
enter
addr16
divl
adc
fstpl
or
jns
rorl
cld
adc
and
mov
xchg
fstl
xchg
push
popf
or
les
jbe
rcrb
adc
or
movl
faddl
mov
or
roll
sbb
mov
adc
jns
inc
jecxz
xlat
inc
sahf
aad
xchg
int
sub
int
js
cltd
ret
mov
ret
cmpsl
mov
push
stos
jo
ret
xchg
mov
subb
cmpl
dec
mov
stos
std
shlb
data16
mov
inc
and
stc
jae
or
nop
je
out
mov
popf
fdivp
lret
sub
out
in
lock
xor
adc
icebp
pop
pop
xchg
xor
pop
loopne
imul
jmp
cmp
push
aaa
cmc
lods
cs
addr16
sti
pop
hlt
push
pop
or
cli
enter
in
push
je
outsl
sbb
stc
sub
xchg
pop
sarb
je
out
cmp
pop
scas
pushf
incb
pop
dec
cmp
scas
mov
jmp
clc
cwtl
aas
dec
mov
jl
xor
pop
aas
scas
lock
es
aam
push
cmpl
push
xchg
jecxz
scas
movsl
dec
push
lds
lret
in
loope
sbb
cmp
ret
int3
push
push
dec
xlat
jmp
pushf
dec
imul
dec
out
mov
enter
mov
nop
sbb
adc
pusha
dec
loope
pop
pop
sti
jns
sbb
push
xchg
xchg
jle
sbb
xchg
clc
mov
adc
daa
push
stc
mov
lret
dec
mov
xchg
sub
sub
mov
add
cmp
add
subb
dec
push
jae
cli
push
test
jge
insb
sbb
dec
pop
sub
popf
stc
xchg
pop
mov
addr16
mov
push
lock
jge
push
push
data16
mov
cmp
test
ret
pop
mov
fcoml
mov
int
adc
clc
sti
push
ss
outsl
ja
clc
xchg
arpl
fidivl
imul
iret
test
sti
push
jg
fwait
push
push
out
or
cmc
dec
hlt
push
aaa
scas
xor
loope
in
mov
ret
lahf
int3
mov
call
and
fidivs
xor
or
and
in
lods
jle
add
push
cmpsl
adc
in
cmp
in
fcoms
in
jb
lcall
es
xchg
lods
aad
ret
mov
scas
push
test
cld
arpl
je
cmp
sub
push
inc
loopne
xlat
stc
fsubrp
mov
add
fsubr
sbb
popf
gs
pop
stc
xor
repnz
push
stos
cld
pop
mov
add
mov
sbb
xor
mov
test
test
rcr
jmp
leave
jecxz
lcall
dec
mov
enter
cld
push
aad
outsb
add
pop
iret
fdivl
jns
mov
mov
sbbl
adc
mov
mov
cwtl
cmp
aad
icebp
rclb
lds
xchg
dec
lds
xchg
cld
mov
lds
test
negb
sbb
mov
cmp
ficoms
xchg
faddl
or
stc
lock
push
loop
gs
push
mov
pop
test
popf
fsubrl
enter
aaa
push
adc
cmp
mov
pop
mov
xor
sub
fisttpl
mov
or
arpl
fnstcw
out
inc
xchg
into
mov
inc
push
mov
push
push
adc
pop
call
test
pop
repz
push
dec
leave
dec
sub
movnti
test
or
int3
mov
in
jbe
mov
pop
sub
lods
push
shrl
lret
inc
in
mov
mov
cmp
xor
lahf
test
xlat
loopne
ljmp
mov
rcll
cmpsl
addr16
andb
or
sub
xchg
into
shrl
dec
or
pop
mov
xchg
mov
arpl
imul
pop
inc
cmp
jle
mov
iret
enter
roll
loope
sahf
xlat
push
insl
mov
addb
aas
sahf
out
pop
dec
jl
sti
fisubs
rorb
or
sub
and
lea
xchg
adc
push
pop
cwtl
xchg
rorl
jnp
and
lret
loopne
or
push
ret
dec
inc
lret
loopne
inc
jb
mov
mov
in
push
movl
pop
in
in
mov
pushl
test
test
dec
stc
daa
mov
aaa
dec
repnz
jns
mov
jl
or
shll
stc
mov
ret
repnz
jge
dec
mov
cmpsl
lods
add
sbb
popa
push
lret
jnp
mov
test
test
jb
mov
movsl
push
pop
fildll
mov
xlat
ret
cli
cwtl
jle
or
mov
push
dec
iret
aad
in
pop
push
inc
fwait
push
fmull
xor
cli
gs
enter
xor
mov
pop
xchg
sub
xchg
sub
lcall
push
xchg
dec
mov
fninit
xchg
cld
lds
jns
adc
pop
pushf
and
mov
mov
out
stc
inc
mov
mov
lcall
sbb
dec
or
data16
push
fs
into
fmul
push
clc
cltd
sarb
popf
jp
mov
lcall
jno
aam
jecxz
roll
pop
and
lods
clc
gs
jl
gs
data16
mov
adc
jl
push
pop
push
loopne
dec
subl
push
push
xor
pop
mov
add
ret
cmp
add
lcall
pop
xlat
cld
fiaddl
ret
fistpll
xrelease
xchg
push
lock
mov
imul
aam
xchg
and
sti
jl
inc
sbb
xchg
sbb
cld
pop
lcall
cmp
shlb
loopne
push
mov
add
mov
mov
pop
rorl
fwait
pop
mov
cmp
xchg
mov
scas
pop
arpl
psrlw
je
xorb
daa
sarb
xchg
fidivs
movsb
push
mov
es
mov
dec
js
jge
add
pop
mov
jmp
mov
pop
in
into
inc
ret
leave
sbb
cld
mov
xor
mov
push
mov
insl
lret
jbe
cmp
sub
xchg
shrl
aam
adc
xchg
xor
mov
mov
xor
loop
sbb
insb
data16
dec
cmpsl
sbb
xchg
in
fwait
repz
mov
pop
stc
jae
dec
imul
sub
jmp
cwtl
sbb
jae
std
inc
lcall
mov
in
push
xchg
push
jecxz
mov
leave
js
gs
cwtl
and
sub
enter
xchg
jnp
xchg
fwait
faddl
mov
cmc
inc
add
sub
orb
xchg
cltd
jg
cli
loopne
mov
and
shufps
into
mov
xor
push
lcall
cli
outsl
jecxz
and
and
addb
cmp
insb
icebp
jl
mov
mull
push
test
cmp
jb
xchg
or
push
dec
repnz
ret
xchg
dec
sbb
ret
mov
pop
stc
test
int3
dec
movsl
xor
into
stc
jo
nop
sahf
add
data16
sbb
mov
testl
pop
xor
into
and
insb
imul
enter
test
jno
push
icebp
mov
adc
jnp
xlat
dec
adc
dec
sbbl
fs
sub
sbb
into
addr16
dec
out
xor
push
push
cwtl
sbb
add
adc
aas
xchg
push
rcrl
lea
mov
iret
adc
cli
adc
movl
or
out
jl
addr16
push
mov
adc
out
bound
sbb
mov
jmp
add
pushf
mov
mov
mov
je
pop
test
pop
loop
aas
pusha
jecxz
mov
lods
inc
and
into
mov
stc
cmp
repnz
and
mov
jb
dec
mov
jae
je
lret
test
inc
mov
cmp
out
pop
sbb
adc
sbb
out
push
clc
adc
mov
cwtl
inc
fwait
cld
lcall
xchg
mov
sbb
mov
jne
sbb
mov
ror
rolb
mov
cld
xchg
orl
jp
stc
fimuls
loope
loop
push
and
xlat
push
mov
test
les
leave
aam
cmp
inc
ja
jnp
imul
pop
popa
xor
stos
cmp
cmc
xchg
inc
lcall
mov
push
and
ja
dec
jo
mov
xchg
or
mov
mov
mov
stos
stc
test
xchg
mov
jns
add
jo
popf
into
sub
inc
push
les
in
cli
jle
mov
in
ret
sar
pop
mov
xor
cmp
push
stc
sti
pop
and
add
lods
into
addr16
sti
add
ret
xchg
push
test
inc
jl
fildl
cli
in
in
out
or
test
mov
in
rorl
mov
push
fistps
cmp
push
push
mov
test
adc
dec
push
sub
das
inc
xchg
jl
xchg
sarl
imul
das
push
pop
stc
lret
mov
call
imul
repnz
push
mov
call
mov
sbbl
add
rcrl
xchg
sbb
dec
pop
incb
pop
push
xor
push
cmp
mov
add
jbe
sbb
mov
xor
ret
mov
loopne
pushf
lods
lret
movsb
daa
rclb
cmp
cmp
and
repz
xchg
aaa
push
jo
dec
out
or
mov
jnp
clc
push
xor
icebp
sbb
dec
pop
pusha
inc
rcrl
cli
test
in
mov
jge
add
cmp
cltd
inc
mov
mov
sub
test
mov
addr16
nop
daa
dec
and
jnp
fsubrl
outsb
adc
jle
mov
int
cmc
out
getsec
into
mov
cmp
movsb
pop
enter
mov
fldl
xchg
roll
rcl
rclb
pop
xorl
mov
push
cmpsl
dec
dec
ja
pop
mov
repnz
rcrb
cs
inc
fadds
sub
mov
push
push
adc
adc
mov
cmp
xor
cli
sar
mov
jle
push
icebp
shl
sbb
shlb
rol
int
in
out
cmc
fbld
mov
les
cmpsb
jno
call
mov
sti
shl
movsb
cmc
fcmovu
cmpsb
addr16
adc
fwait
call
sbb
pop
cwtl
clc
je
les
and
xor
jb
fnstenv
rcll
mov
ljmp
jns
mov
or
mov
int3
les
sub
mov
jbe
pop
imul
jmp
stos
cmp
add
adc
jp
stos
jp
cmp
mulb
in
clc
lds
test
cld
mov
std
cwtl
call
jns
mov
sub
fiadds
push
fisubs
jo
lret
jg
adcl
jns
lcall
test
jnp
movsb
add
dec
push
jge
es
dec
cwtl
cmp
repnz
push
stc
fiaddl
stc
dec
xor
into
iret
xchg
sub
xchg
jnp
cwtl
xchg
lcall
inc
decb
loopne
xchg
lods
lods
enter
mov
pop
insb
push
jns
xchg
mov
mov
sbb
xor
pop
mov
mov
fwait
mov
mov
mov
cmp
aad
addr16
sbb
push
jecxz
mov
cmp
or
jns
lahf
dec
jnp
xchg
push
dec
lret
adc
ds
jmp
mov
mov
sbb
mov
pop
add
add
adc
popf
inc
mov
pop
cli
jb
xchg
cmpsl
in
popf
in
stos
xchg
lcall
jns
xadd
aad
jns
pop
push
bound
fwait
lret
cltd
imul
lock
inc
sbb
lds
int
mov
lods
jnp
xor
out
sub
add
or
and
divb
loopne
into
push
lea
iret
inc
ds
mov
push
mov
mov
popf
mov
inc
flds
mov
repnz
nop
shll
and
test
aam
dec
test
jl
inc
cli
sub
lds
or
hlt
mov
daa
adc
lock
jb
push
xor
outsl
adc
out
lods
cld
xchg
sti
test
or
ret
cltd
mul
xchg
incl
xchg
dec
mov
imul
bound
lods
test
mov
aas
pop
push
mov
rolb
or
inc
lcall
pop
orb
pushf
pusha
adc
shlb
rorb
stos
mov
test
adc
in
ret
mov
cmp
mov
aam
jb
adc
decl
push
mov
pop
int
sti
insb
sbb
dec
mov
fdivs
loope
mov
mov
imul
push
mov
nop
cli
movsb
movl
popf
movsb
sahf
test
jno
jg
dec
jbe
and
push
repnz
add
shrb
xchg
xor
jl
xor
andl
stos
pop
cmp
stc
popa
push
push
pop
push
adcl
xor
scas
clc
xchg
sub
push
xchg
xchg
or
shl
out
jns
pop
lea
loopne
cmp
dec
mov
jge
inc
or
stos
or
push
pop
jbe
lods
cmpsb
push
rcrb
and
pop
cltd
cmpsl
xor
popf
data16
aas
push
and
push
loopne
xchg
xlat
fimull
gs
pop
out
pop
mov
push
sub
cmp
sub
repz
push
iret
or
xorb
inc
adc
data16
xlat
lret
rcl
xor
stc
adc
sub
inc
jnp
dec
stos
rcrl
or
movsb
pop
mov
scas
mov
mov
mov
pop
popf
inc
xchg
adc
or
int3
push
mov
inc
out
stc
int3
jg
inc
lock
mov
imul
test
lds
push
sbbb
push
jp
jo
jns
push
adc
mov
std
rol
dec
fldt
adc
lcall
mov
sub
pop
mov
cmpsl
ss
lds
push
mov
mov
and
pushf
loope
dec
cmpsl
mov
es
dec
cwtl
adc
dec
imul
push
pop
sbb
cmpsl
jl
aaa
popf
fsts
iret
fsubl
stc
gs
rcr
outsb
jl
repnz
jmp
js
test
movsl
add
add
and
loopne
stos
shll
mov
insb
jo
jge
pminub
xchg
cmpsl
sbb
rcl
pushf
mov
rcll
icebp
mov
mov
mov
sti
inc
or
mov
shrb
dec
cmp
inc
pop
mov
sbb
xchg
jno
test
fisubl
adc
adc
jns
jecxz
xchg
mov
int3
cli
mov
fisubrl
stc
add
xchg
ret
clc
test
loope
inc
rol
adc
int3
sahf
lds
inc
sahf
fadd
cmp
push
mov
nop
jno
mov
stos
dec
in
cld
inc
mov
lcall
jns
pusha
insb
repz
loop
and
jl
or
cltd
inc
int
pusha
inc
mov
lret
xchg
add
inc
rol
push
test
cmpsb
mov
cli
scas
pop
jecxz
mov
stos
dec
sbb
adc
int3
inc
xor
ret
dec
out
mov
fs
out
add
and
jns
or
inc
cmpsl
test
cmpsb
test
mov
xchg
fs
scas
movb
pop
sbb
lods
pop
or
test
mov
into
mov
das
adc
int3
inc
cmp
movl
jns
mov
mov
shrb
shll
fnstcw
dec
repz
jns
movsl
test
mov
inc
enter
test
cmpsb
lods
test
test
dec
into
roll
cmc
sub
dec
jp
cmp
sbb
in
repz
mov
lahf
jl
mov
sbb
stc
jecxz
ljmpw
xor
je
sub
jbe
out
cmp
addr16
nop
popl
vcvtss2sd
lret
out
add
dec
cmp
jne
cmpsl
dec
mov
icebp
push
push
mov
es
add
rol
and
xor
mov
add
adc
lret
fnstenv
gs
xchg
jmp
test
lret
stc
fxch
dec
push
xor
iret
test
pop
popa
mov
hlt
mov
push
mov
mov
pop
push
cmp
jmp
ret
or
add
popf
cli
rorb
or
jns
adc
cld
push
push
aad
es
jno
icebp
mov
fildl
fsts
cmp
repnz
stos
roll
dec
push
andb
cltd
mov
inc
add
shrl
test
test
or
test
daa
push
cli
mov
fstpl
mov
push
push
sub
enter
pop
xchg
and
inc
fdivr
mov
movb
or
add
push
inc
fisttps
or
add
cmpsl
lods
test
das
xchg
cmp
or
add
push
frndint
popa
adc
lcall
dec
shlb
dec
jae
dec
or
fbstp
int3
int
or
add
ret
pop
movsb
mov
jl
js
cmpsl
add
fdivrl
lret
mov
cmpsl
insl
add
popa
clc
fistpl
pop
sbb
repnz
cltd
jg
mov
fsubl
and
pushf
sub
mov
xchg
mov
lds
in
jle
cmp
xlat
or
mov
adc
sbb
adc
lret
fisttps
or
test
sbb
or
sbb
xor
repnz
imul
popf
lock
jle
and
xchg
bound
cwtl
mov
xor
addr16
jmp
jnp
mov
adc
mov
cltd
lds
or
cli
fwait
or
or
lcall
rorl
nop
mov
fnstcw
mov
addr16
pop
push
add
fcoms
jo
lea
inc
jmp
mov
inc
inc
xlat
jb
sbbb
cmp
mov
loopne
outsb
ljmp
jb
dec
test
int3
mov
icebp
xor
jle
negl
lcall
mov
inc
xor
dec
stc
iret
mov
daa
jp
rorl
xorb
xlat
dec
mov
add
cmp
into
mov
sbb
add
loopne
mov
repz
mov
lret
mov
mov
je
int3
inc
dec
shlb
sar
mov
jmp
nop
mov
xchg
jb
xor
or
popa
aam
mov
jecxz
stc
loopne
cmpb
lahf
loope
mov
leave
int3
int
mov
add
pop
nop
jb
or
stc
jge
mov
dec
inc
or
xlat
outsb
mov
fcoml
mov
pop
andps
sbb
and
xchg
push
lret
ds
push
loopne
sbb
adc
mov
jp
mov
bound
mov
dec
incb
fcompl
fnsave
nop
cmpsl
xor
xchg
pusha
xchg
lahf
xchg
xchg
pushl
pop
push
cld
iret
lret
inc
jb
mov
mov
dec
xor
std
popa
add
lret
pop
mov
mov
mov
pop
inc
sbb
or
mov
add
or
sub
pop
les
lret
mov
mov
nop
int
jns
mov
push
inc
test
dec
jge
mov
popa
addr16
ret
fistpl
mov
mov
loop
jo
sbb
pop
mov
xor
shll
in
lock
add
lods
stos
push
insb
stos
and
or
test
adc
mov
jb
xchg
stc
jg
jnp
jb
push
pop
xchg
rol
mov
int3
add
dec
stc
lret
jne
cmp
or
mov
enter
clc
mov
dec
faddl
mov
int
pop
stos
clc
scas
push
xchg
mov
fmuls
mov
test
sub
stos
lea
inc
lds
in
movsb
leave
stc
sub
push
jmp
xchg
or
fsub
stc
dec
mov
mov
movsb
jb
jg
xchg
xor
add
pop
lcall
or
xlat
xor
leave
xchg
jecxz
or
daa
lret
outsl
mov
or
andl
inc
dec
or
add
out
cmp
jns
imul
or
fadd
dec
jmp
stos
in
xor
xchg
stos
int
pop
int
cmovae
insb
sbb
sub
ds
in
inc
incl
int
mov
pop
test
pop
xor
and
or
jns
or
test
fcomip
jmp
sbb
int3
xchg
addr16
das
call
scas
cltd
dec
adc
adcl
dec
cmp
mov
mov
int3
jns
sbb
int
mov
pop
xlat
cmpl
pop
jbe
xor
test
mov
pop
jno
ficoms
jb
xchg
lidtl
push
jecxz
mov
sbb
inc
dec
adc
mov
aad
xchg
out
add
fimull
mov
sub
les
test
xchg
pushf
sub
inc
sbb
push
cwtl
adc
adc
xchg
adc
pop
push
inc
xor
adc
adc
test
inc
mov
cli
fdivl
packuswb
pushf
dec
mov
cli
or
adc
ret
jns
shlb
mov
cltd
jns
adc
movl
jb
cmp
cmpsl
inc
pop
pop
inc
stc
sub
fisttps
filds
xchg
loopne
xchg
pop
adc
push
ja
aam
add
andl
add
and
push
fistl
loop
outsb
popf
dec
loopne
and
xor
ret
or
pop
out
pop
jns
sbb
jecxz
xlat
inc
lret
lock
popa
faddl
clc
ja
mov
cmp
sub
dec
sub
inc
fldcw
movsb
jb
cwtl
dec
sub
ret
test
out
jb
cmp
mov
rcrl
jb
inc
shlb
push
adc
xchg
inc
lret
inc
lret
enter
push
dec
lods
jl
mov
push
or
dec
enter
pop
lods
cmp
orl
in
mov
mov
mov
or
les
xor
push
add
mov
sti
inc
test
repnz
lods
xchg
fs
inc
cli
xchg
pop
jns
lcall
push
adc
sub
repnz
push
push
lret
fsubs
je
dec
jb
fnstsw
lods
adc
roll
addr16
daa
rcr
or
cmp
pushw
push
fstp
sub
stos
int
adc
xlat
fnsave
jl
cmpsb
jo
xor
fwait
push
jl
cmp
cmc
mov
stc
imul
mov
cld
xchg
dec
popa
nop
les
push
push
pop
sbb
shlb
add
sti
lahf
jo
xchg
dec
mov
enter
ret
push
mov
inc
or
adcb
loopne
bound
xchg
cmp
cmpsb
ret
ds
dec
addb
cld
or
xchg
lcall
lcall
negb
ret
int
xor
pop
push
inc
vmovupd
pop
int
fcompl
mov
sub
adc
pop
adc
loope
push
dec
mov
xchg
stc
addb
ds
lret
or
jns
mov
xor
pushf
sbb
enter
inc
pop
sbb
aas
repnz
and
pop
shll
add
call
pop
xor
cwtl
lock
lahf
xor
mov
popa
hlt
repnz
clc
and
jns
dec
add
push
jno
test
cld
sub
and
adc
lock
stos
mov
fimuls
inc
mov
mov
test
jl
les
adc
push
es
jns
xchg
ret
movsl
dec
aam
mov
xchg
addr16
push
ror
out
fsqrt
iret
mov
inc
stos
int3
stos
mov
sbb
les
lea
pushf
or
xchg
push
bound
and
mov
inc
dec
ret
int3
mov
ja
gs
ficoms
pop
xchg
arpl
add
mov
mov
mov
lods
pop
popf
mov
in
nop
sub
cmpsl
pop
imul
xchg
dec
or
scas
xchg
sbb
lret
lea
and
mov
sbb
inc
add
ret
push
mov
imul
xlat
int3
scas
xchg
cmpsb
cwtl
inc
jmp
rol
inc
or
xor
dec
out
adc
shrl
lcall
andb
data16
or
fldenv
dec
adc
jb
inc
mov
outsb
sub
mov
lods
cltd
cld
loop
sub
js
xorl
icebp
mov
mov
ret
mov
std
mov
sti
data16
pusha
out
cmp
test
test
scas
dec
push
lock
push
mov
lcall
dec
jp
test
xchg
insl
iret
sub
test
adc
pop
lcall
xchg
outsb
iret
std
cld
pushf
dec
cmpps
mov
pushl
bound
inc
mov
movsb
js
lahf
sbb
addr16
mov
popf
mov
ret
xchg
ficomps
xor
lret
sub
lret
jns
repnz
test
insb
sarb
push
in
jle
pop
insb
notb
imul
adc
fldt
cmpb
enter
dec
pop
mov
stos
lods
loope
dec
lret
inc
or
into
mov
dec
movsl
jb
add
sub
aam
mov
mov
mov
mov
cli
mov
dec
and
mov
fs
jp
inc
orl
adc
pushw
xor
mov
inc
adc
test
cltd
pop
addr16
cmpsb
sti
rcrl
push
ljmp
lock
loope
or
jl
cwtl
ficoml
cli
xor
lods
sti
add
mov
mov
lock
into
out
pop
adcl
mov
outsl
push
cli
mov
cld
jecxz
sbb
daa
mov
mov
leave
add
scas
out
xchg
xlat
inc
cmpsl
sahf
xor
in
mov
jl
mov
test
cmp
jae
mov
arpl
mov
jns
sahf
add
sahf
out
mov
push
mov
lahf
push
std
js
int3
fisubrl
sbb
dec
ss
inc
dec
ficoms
inc
out
pop
and
cmp
in
mov
push
and
test
shl
scas
mov
filds
stos
mov
ret
lods
fmull
enter
stos
pop
pushf
mov
adc
repnz
adc
lret
loope
int
js
scas
call
sbb
pop
cmpsb
addr16
xor
mov
rcrl
inc
fisubrs
xor
fistpl
mov
int3
xchg
add
xor
add
add
iret
cmp
sub
sbb
push
xor
rorl
fnstcw
xchg
adc
lcall
in
mov
mov
testl
lods
sub
lods
push
fucompp
rcrl
sbb
fsubr
inc
loopne
daa
out
out
int3
sti
jbe
cmp
addr16
sbb
into
pop
sbb
repnz
push
push
lcall
xlat
bound
dec
mov
mov
sub
inc
stos
inc
rcrl
test
inc
popf
dec
fbstp
lods
mov
add
fs
dec
lods
sub
jecxz
ret
mov
loope
add
mov
ficomps
les
xchg
push
ficoms
lcall
lds
xor
iret
mov
daa
sub
les
cmp
add
jecxz
pop
adc
dec
loopne
lock
sub
dec
movsl
imul
jmp
push
stos
add
push
and
pop
sti
mov
inc
inc
push
mov
mov
fcmovu
cli
filds
xor
inc
cmp
lcall
bound
ja
mov
jne
adc
push
jnp
xor
add
adc
jnp
jae
jns
cmpb
stc
lcall
es
push
inc
sbb
test
pop
adc
dec
nop
mov
lcall
jns
pop
xchg
xchg
pop
cmp
movsl
dec
lods
mov
imul
das
gs
inc
loop
sbb
test
inc
push
roll
cmpl
mov
pop
cld
lods
sub
inc
mov
xchg
leave
lock
filds
adc
ljmp
gs
fdivrl
xchg
test
mov
out
adc
lds
xchg
repnz
push
xor
faddl
mov
lcall
mov
adc
mov
xor
out
push
add
jno
outsl
mov
inc
test
push
sbb
push
iret
sbb
in
add
cwtl
ss
mov
into
daa
fdivl
test
xor
ret
jecxz
in
jp
and
push
ret
add
pop
or
add
adcl
testb
mov
mov
dec
cs
fldl
pushf
sub
sti
std
add
or
sub
int3
imulb
enter
xchg
call
ljmp
sbb
out
add
mov
push
in
jnp
jnp
dec
xlat
insl
mov
clc
push
xchg
sub
aam
repz
jb
xor
not
jae
sbb
sub
mov
sbbl
and
jb
sub
mov
sub
cmp
jb
cmp
cmpb
fcoms
inc
sub
lods
test
push
sub
shrl
jg
inc
push
mov
xor
ret
outsb
scas
lcall
cmpsl
outsl
sub
mov
fcompl
stc
enter
lcall
jmp
cld
pop
repnz
outsb
movsb
call
dec
push
sbb
cld
cmp
sbb
into
es
or
in
inc
push
pop
int
dec
les
mov
repnz
adc
fcmovu
pop
dec
pop
or
add
mov
jne
and
popf
je
test
lcall
mov
push
mov
dec
mov
jbe
int3
mov
addr16
mov
ja
jae
int
jecxz
icebp
cmp
mov
mov
mov
fimuls
test
and
mov
test
and
jb
bound
pop
mov
lds
inc
fwait
jmp
outsb
push
dec
fisubrl
cwtl
sub
jmp
dec
sti
sbb
adc
js
and
xchg
sbb
insb
and
mov
cwtl
movsl
push
xlat
pop
cmp
in
cmp
add
dec
mov
test
rcll
ljmp
insb
loopne
addr16
mov
adc
pop
iret
mov
frndint
mov
and
int3
addr16
fmulp
mov
popa
call
mov
fyl2xp1
lcall
in
out
leave
cli
mov
push
lds
fnstsw
xchg
and
or
jle
xchg
mov
movsl
jmp
push
push
ret
push
lods
leave
testl
nop
in
and
mov
movb
and
sbb
cs
sbb
inc
and
jl
mov
testb
adc
xorl
pop
ret
aad
fwait
cmp
xchg
cld
pop
enter
cmp
cmp
ss
cmp
add
dec
lods
cltd
movsb
or
mov
je
arpl
loopne
fstpt
sub
inc
rol
ss
lcall
jp
testl
xchg
insb
mov
in
mov
popa
pop
jae
roll
jecxz
test
cmp
mov
mov
mov
lahf
adc
xchg
xor
sbbl
jl
ficoml
ficoms
faddl
xlat
aam
inc
test
pop
push
frndint
xor
jo
lods
mov
dec
sbb
int
into
or
push
aas
jbe
pop
insb
xlat
outsb
ret
fldl
leave
mov
adc
mov
lcall
cltd
scas
inc
sub
lcall
dec
cmp
push
or
fimull
pop
je
iret
and
out
js
nop
imul
mov
and
rolb
push
dec
fiaddl
or
data16
andps
mov
sub
jbe
add
jb
add
xor
pusha
hlt
xchg
aad
clc
into
cmp
or
pop
push
xlat
sarb
cwtl
into
adc
sbb
repz
push
test
fisubrl
testl
fldt
sbb
and
add
into
fdivr
pop
dec
sbb
inc
stos
lret
mov
jmp
stos
mov
jns
pop
mov
leave
test
fldt
push
xchg
shrl
jp
enter
dec
mov
outsl
test
jg
push
jmp
xor
jne
in
into
xchg
inc
aad
pop
aam
fmuls
sub
in
mov
pop
xchg
iret
xchg
sub
jnp
fwait
cmp
mov
pop
push
sbb
movb
test
lret
mov
add
ss
push
cmp
lds
not
clc
subl
repz
movsl
outsl
xchg
cwtl
fs
pop
movsb
ljmp
push
sbb
fisttpll
imul
movsl
and
lds
inc
aam
orb
movsb
or
int3
test
stc
cmp
fisubs
int3
sbb
dec
xor
mov
mov
jb
mov
push
dec
stos
sbb
cld
cmp
sbb
push
or
aam
adc
push
popa
xchg
lods
mov
jne
mov
in
adc
rcll
adc
int
inc
movsb
sbb
imul
stos
imul
cmp
dec
pop
cmp
dec
cmp
insl
mov
in
mov
imul
add
xchg
pop
xchg
mov
popf
ret
push
jo
xchg
push
xor
sarl
cli
repz
mov
fs
js
test
mov
xor
cld
sbb
xchg
mov
mov
xchg
dec
pop
xchg
xorl
cmp
push
addr16
arpl
rolb
push
push
inc
ret
mov
push
adc
insl
icebp
cmpsl
popa
addb
mov
out
sbb
pop
lahf
lcall
push
jge
fimull
adc
pop
push
mov
mov
stc
mov
pop
ror
sbb
cld
movsb
lods
add
arpl
xchg
dec
cs
fst
das
mov
ret
loope
outsb
int
dec
test
enter
lea
dec
pop
call
cltd
adcl
fcmovnb
in
mov
loope
aas
nop
or
testl
pop
shr
cld
mov
outsl
mov
add
shll
sub
and
dec
jns
sbb
dec
or
jo
pop
xlat
cmp
lds
das
addr16
aam
mov
es
jnp
push
mov
jbe
push
in
xchg
stc
sub
mov
rcrl
fiadds
jle
jp
inc
in
stc
mov
mov
icebp
outsb
lcall
ret
pop
adc
inc
lods
popf
ss
pop
dec
mov
lcall
loop
push
jle
push
ljmp
movsb
lret
insl
mov
sbb
fnstcw
jge
mov
fstpt
xchg
pop
sbb
aas
shrb
arpl
mov
aaa
cmp
sbb
vunpckhpd
xchg
mov
cmp
fs
aas
pop
xor
loopne
pop
lds
fwait
aas
lods
and
xchg
mov
xlat
das
fdivs
filds
js
scas
inc
movsb
iret
push
into
sti
sbb
mov
and
lret
leave
jl
mov
out
rclb
pop
pop
jle
sub
or
xor
sahf
add
inc
add
popa
pop
stc
or
inc
adc
frstor
mov
jo
fists
cmp
in
pop
sbbl
sbb
xlat
popf
js
sahf
scas
xor
jns
push
mov
mov
stc
stc
stc
fsubr
jmp
rcl
hlt
js
sub
popa
and
lret
stc
cmp
ftst
adc
mov
mov
cmpsb
push
gs
add
xchg
inc
out
popf
int3
adc
xchg
xchg
xchg
mov
jp
imul
popf
icebp
push
jg
xchg
mov
inc
fldl
fsubs
sub
insb
or
adc
adc
leave
in
push
fucomp
adc
push
sbb
fwait
mov
sbbl
fcompl
fisttpl
and
negl
test
int3
cmp
mov
cmp
pop
ret
loopne
jae
mov
push
xchg
stc
xor
outsl
adc
push
pop
imul
xchg
shrb
pusha
add
or
das
dec
imul
in
in
or
aad
int
sbb
pop
push
dec
loop
mov
jmp
cmp
dec
inc
xchg
and
test
test
jbe
and
call
ljmp
das
ja
push
fsubrs
jge
lcall
push
and
push
mov
addr16
mov
inc
dec
pop
out
pop
sbb
cltd
js
inc
dec
pop
shll
and
mov
out
mov
mov
xor
ds
push
in
or
cs
pop
dec
mov
in
in
sub
inc
xor
call
pop
sbb
dec
mov
test
sub
pop
adc
pop
lods
mov
icebp
rclb
sub
pusha
mov
push
xor
mov
test
push
jns
mov
addr16
mov
cs
movsl
pop
popl
sbb
xchg
adc
fnstcw
or
mov
dec
dec
jno
pop
jl
bnd
pop
xlat
or
shrb
xchg
sbb
push
test
push
cmp
mov
test
jae
lret
test
xor
imul
mov
jo
pop
mov
xchg
mov
adc
sbb
pop
adc
lcall
loope
cmpsl
mov
inc
fcmovnbe
int
pop
lret
enter
mov
out
sub
push
movl
scas
xor
or
push
stos
xchg
test
pop
imul
scas
out
imul
dec
in
ficomps
test
shrl
dec
mov
mov
mov
mov
out
fcoml
mov
mov
cltd
mov
rorb
pop
xchg
mov
jmp
repz
adc
mov
adc
ss
adc
leave
adc
pop
and
test
leave
mov
sbb
enter
push
popf
lret
sbb
sbb
cwtl
push
and
test
insb
xor
ss
push
sub
repnz
imul
fcomp
enter
push
insl
pop
rorl
mov
jbe
mov
es
mov
xchg
mov
pushf
jnp
enter
push
ficoml
sbb
cmp
lret
fisubrl
popf
sbb
scas
pop
pop
dec
push
rcll
sub
outsb
lods
pop
cltd
fidivl
jmp
mov
jg
push
xor
aam
adc
jb
dec
jb
cwtl
out
movsl
or
loopne
pusha
pop
cmp
out
cltd
push
sbb
mov
mov
dec
pop
leave
out
insl
push
mov
and
mov
jno
ret
mov
cwtl
sub
outsl
fsubrl
cld
and
aam
sbb
lods
shrb
in
stc
imul
mov
fistl
inc
fisttpll
pop
loopne
shlb
inc
popf
mov
mov
and
fs
cmp
std
int3
movl
xchg
mov
push
sti
jnp
and
stos
dec
mov
dec
jle
iret
shrl
jmp
stos
cwtl
pop
nop
loopne
adc
dec
adc
sbb
mov
cmpsb
xchg
inc
aaa
dec
cld
mov
adc
inc
or
mov
cld
sub
imul
pop
jge
cmp
jl
mov
xchg
mov
pop
in
sub
inc
mov
addr16
rclb
cltd
cs
sub
sub
cld
nop
jns
xor
test
pushf
fwait
cmp
cwtl
popf
int
sbb
cmc
or
leave
add
sbb
shlb
roll
cld
pop
push
repnz
aam
sub
push
fwait
test
mov
jge
push
add
hlt
mov
dec
or
test
test
gs
call
mov
loopne
mov
jp
push
mov
jno
pop
jp
fcomps
loopne
fisttpl
sbb
out
mov
push
push
or
xchg
pop
cmpsb
jno
fstps
mov
mov
les
pop
mov
es
mov
ljmp
xchg
imul
popf
xchg
add
inc
hlt
fsts
mov
push
sbb
test
xor
std
pop
loope
cld
in
stos
repnz
xchg
pop
das
daa
dec
sbb
lcall
arpl
jo
jbe
pushf
jb
paddusw
mov
lret
inc
pusha
cmp
adc
cmc
cmp
or
popa
addr16
lcall
mov
dec
popf
jge
ret
daa
add
cmp
mov
sub
pop
movsl
aaa
imul
pop
cmc
add
aaa
lcall
and
clc
lods
je
adc
aam
add
out
push
pop
pop
mov
add
adc
mov
cmp
pop
fmull
lcall
dec
mov
stc
cli
cwtl
mov
rcr
dec
scas
sub
dec
call
das
and
push
push
xlat
xor
je
dec
jnp
dec
cmpsl
fistps
pop
stc
adc
insb
std
cmpsl
cld
les
fucomip
shlb
mov
add
rcll
add
add
pop
mov
std
movb
mov
repz
sbb
ffreep
mov
mov
inc
pop
jns
mov
pop
jle,pt
lods
jnp
inc
arpl
mov
iret
sub
in
jo
xchg
pop
mov
mov
push
cmc
mov
jmp
sub
int
ret
push
mov
add
inc
mov
push
repnz
mov
sbb
lret
fidivrs
mov
sbb
cwtl
out
xchg
cld
imul
aam
jb
sbb
mov
pusha
mov
fcomps
pop
leave
mov
sub
pop
aam
mov
cwtl
insl
aaa
xchg
push
pop
pop
aam
fistl
mov
jnp
and
int
mov
add
sub
test
push
pop
lods
push
push
shlb
lods
mov
pop
jl
gs
mov
xchg
or
fstpt
popf
dec
mov
aam
pushf
leave
insb
mov
sub
or
push
push
mov
xchg
stc
stc
xor
pop
and
xchg
inc
ret
add
mov
cmp
xchg
dec
inc
lods
adc
xor
test
out
push
mov
cmpsb
mov
xor
fdivrs
pop
inc
fimull
xchg
mov
ljmp
scas
test
jbe
cmpsl
icebp
mov
loopne
pop
flds
stc
loope
sbb
inc
stos
rcrb
arpl
and
les
or
pop
adc
dec
jb
in
add
pusha
or
push
dec
and
mov
insb
inc
xchg
or
mov
popf
iret
out
test
pop
js
cmp
mov
mov
cmpb
push
mov
cltd
mov
mov
daa
sbbl
in
add
push
stos
es
jnp
xchg
sub
mov
test
adc
xor
mov
cmpsl
ja
pop
sarb
add
in
add
mov
fbld
mov
xchg
lods
mov
add
mov
gs
adc
lret
mov
scas
pshufw
movsb
iret
mov
jne
shlb
cltd
aaa
jmp
mov
jg
sbb
rolb
test
push
mov
mov
and
cmp
inc
in
ja
shll
jl
xchg
push
cmpl
cmpsl
adc
sti
insb
cmpsl
arpl
jmp
xchg
sbb
mov
push
dec
mov
test
sub
jb
jae
sub
outsl
ja
imulb
fmull
or
xchg
call
pop
mov
mov
sbb
fwait
cmp
dec
jg
aas
std
push
adc
shll
fs
daa
dec
lods
jmp
gs
imul
adc
cld
xor
or
lods
adc
imul
les
jmp
add
aas
mov
pusha
jns
lcall
mov
clc
cld
add
mov
and
mov
pop
iret
aad
push
push
jbe
int
mov
add
pop
push
mov
outsb
push
ljmp
icebp
dec
cs
jae
pusha
xlat
jno
sbb
push
add
mov
dec
scas
adc
sbb
ret
inc
mov
outsl
push
dec
mov
fidivrl
sarl
jae
xchg
jge
in
pop
jns
xchg
stc
xor
ret
inc
loopne
int
hlt
mov
or
pop
cmp
sbb
icebp
cld
scas
mov
popf
scas
push
sahf
sub
cltd
mov
test
xchg
cli
aad
notb
mov
roll
xchg
or
out
nop
mov
lods
leave
pop
fnstenv
jecxz
mov
nop
out
sub
testb
int3
mov
out
push
ljmp
jo
repnz
sbb
or
inc
int3
mov
mov
enter
mov
popa
movsb
test
mov
sub
data16
stc
ja
or
mov
sbb
cmp
jl
mulb
xlat
imul
sti
cmc
xor
xchg
subl
gs
invd
fidivrs
pop
clc
adc
outsb
loope
movsb
imul
mov
cwtl
jae
adc
jae
cmp
pop
rclb
sbb
scas
ret
push
sbb
push
adc
cmp
jge
xchg
inc
sub
test
rolb
cmpsl
movsb
xor
test
push
inc
mov
addr16
dec
pop
mov
cltd
outsb
les
mov
setae
int
lods
and
xchg
xchg
loopne
dec
sub
addr16
sti
pop
add
jmp
jb
std
ret
popa
js
dec
cmc
push
add
cmp
adc
xchg
push
int
stos
jmp
cwtl
push
lcall
jns
mov
mov
cltd
imul
adc
lods
push
imul
enter
mov
dec
ret
inc
xchg
roll
divl
imul
lret
mov
xlat
push
xchg
dec
psrlw
mov
mov
lods
fldt
xor
daa
pusha
dec
test
dec
sbb
push
cmp
sbb
cmp
and
xlat
lods
test
lret
rorl
lods
inc
cltd
inc
out
pop
into
les
jne
lods
xor
js
jo
add
fnstcw
dec
jns
ficomps
bound
aad
push
xchg
shr
out
std
jo
pop
push
sbb
mov
pop
sub
mov
test
es
adc
push
xor
sbb
bound
nop
xchg
dec
cmp
xor
iret
fsubl
orl
cs
inc
lret
fcompl
ret
lcall
mov
movsb
mov
jecxz
xchg
inc
cld
test
ret
imul
pop
pop
fidivs
dec
push
sub
mov
popf
cmp
addl
pushf
dec
arpl
push
jl
pop
or
iret
dec
movb
mov
test
xchg
sub
enter
sbb
fdiv
rcrl
add
push
loope
ficomps
xchg
outsb
int3
outsb
or
test
mov
mov
loopne
insb
pop
sbb
sub
mov
or
mov
test
and
data16
test
in
inc
lret
inc
fdivrs
into
imul
inc
push
mov
roll
inc
sub
cmp
pop
cwtl
fwait
int3
test
pop
or
cmp
mov
ret
lcall
leave
lods
ret
jo
push
push
dec
lret
lcall
pop
xchg
sub
aad
sbbb
stos
aas
or
xlat
mov
in
mov
push
ljmp
jae
es
cld
gs
cmp
inc
lock
add
push
cmp
pushw
push
js
mov
sahf
stc
push
sbb
dec
lret
repnz
push
xchg
xor
aam
jbe
push
add
xchg
mov
sbb
dec
adc
push
iret
adcl
and
pop
sbb
push
fimuls
sub
jmp
pop
out
lods
cmp
push
pop
cpuid
jmp
rcll
cli
movsb
jne
sbb
ds
or
cmc
dec
push
mov
movhps
dec
sarl
jbe
mov
loope
pop
popf
pop
add
sti
sar
sarb
rclb
pop
xor
push
in
or
sti
fiaddl
dec
cli
mov
jl
cmp
sbb
mov
popa
jne
cmpsl
rolb
pop
dec
dec
fsubr
repnz
cli
test
or
aas
add
cmp
addr16
cmpsl
fldl
jnp
push
lret
adc
jnp
out
nop
outsl
into
bound
nop
or
ljmp
sub
mov
pop
cli
jp
cmp
or
push
jmp
stos
jmp
cmp
mov
lret
test
mov
cmp
shlb
mov
sti
dec
addr16
add
ret
sbb
fprem1
adc
call
into
mov
pop
iret
adc
ret
repnz
leave
xlat
push
pusha
into
push
mov
lea
jns
adc
out
or
mov
ljmp
btc
std
jle
cmp
inc
test
mov
mov
mov
jl
or
mov
xchg
push
pop
rclb
jb
test
xor
test
sub
pop
mov
inc
dec
sub
inc
sub
dec
sub
sub
push
fdivrl
fwait
mov
push
pop
cltd
dec
pop
mov
ror
test
out
push
mov
xor
scas
pop
dec
mov
xchg
add
adc
cld
mov
mov
jl
push
in
xor
cmc
aas
xchg
jecxz
pop
pop
rcrb
push
ja
into
mov
push
add
lret
outsl
inc
add
dec
lcall
add
data16
std
mov
mov
cmpsl
iret
add
dec
sub
and
cmp
fdivr
jge
sbb
shl
stc
pop
jmp
dec
lods
rcrb
fs
popf
pop
lcall
cmp
test
mov
and
aas
pop
jle
fs
psrlw
into
cmpsb
sub
mov
test
int3
fwait
jmp
adc
mov
dec
push
jns
mov
xlat
mov
in
mov
mov
mov
sbb
push
mov
int3
enter
push
xlat
pushf
pop
pop
mov
fcoms
push
push
adc
jl
fwait
cmp
jp
pmulhw
and
movsb
add
fisttps
push
jl
mov
test
add
add
nop
das
iret
ror
cld
and
mov
mov
or
repnz
or
adc
sbb
jns
xlat
in
jo
ror
lret
mov
pop
jo
out
cmp
out
mov
cwtl
mov
dec
pop
push
in
pop
lret
add
xor
dec
add
shll
mov
cld
movsb
outsb
stc
and
add
and
imul
into
inc
into
ljmp
mov
xchg
ror
adc
dec
mov
fistpll
jns
imul
js
push
mov
inc
inc
pop
and
pop
arpl
stos
sub
adc
fdivrl
movsb
xchg
inc
cmp
lret
repz
xchg
push
mov
pop
xchg
push
xchg
sub
sub
adc
fbld
scas
inc
loopne
mov
pop
xchg
cmp
inc
enter
cmp
cmpsb
mov
jl
jp
add
scas
daa
outsl
shl
mov
xchg
frstor
popa
dec
leave
jmp
dec
push
loopne
push
into
orl
cld
push
sub
cld
xlat
dec
pop
xorb
push
sub
pop
enter
lods
mov
push
popaw
lcall
rcrl
sbb
mov
mov
fsub
aam
out
push
add
fcoms
and
rolb
mov
mov
popa
sbb
cltd
jg
add
pop
adc
inc
adc
cmpsb
jl
cli
jae
cmp
sub
sbb
aad
sbb
pusha
dec
loopne
adc
mov
imul
loopne
cli
mov
popf
cld
pop
repnz
xor
push
repz
int3
test
sti
cmp
sub
les
stc
fistpl
fisttpll
push
roll
dec
repnz
loop
mov
fadds
sti
arpl
enter
lret
dec
stc
sahf
xor
pop
lahf
cmpsl
insl
ret
mov
xor
inc
stc
dec
push
js
sbb
push
xor
dec
lcall
call
shlb
inc
push
cmpsl
push
std
es
nop
adcl
inc
lcall
mov
jecxz
mov
cmc
cmp
lods
dec
imul
add
jecxz
fistps
cmp
fwait
or
or
mov
inc
inc
test
jb
mov
sbb
icebp
mov
mov
stc
jne
js
outsb
inc
pop
je
sub
subb
push
add
push
mov
adc
mov
popa
les
bound
imul
xchg
xchg
mov
and
popw
xchg
and
lds
lods
es
push
mov
sub
inc
xor
or
enter
jno
add
cld
and
lds
xchg
fisttpll
fdivs
sahf
sbb
adc
stos
xor
int3
lds
jecxz
aam
stc
mov
xor
jb
push
cli
aam
ds
fs
mov
aam
pusha
push
fldenv
std
add
data16
lds
or
int3
mov
ficoms
lods
stos
lahf
stc
in
stos
out
insl
lods
test
cmp
sbb
cmp
mov
test
scas
inc
push
pushf
dec
mov
nop
adc
std
out
lea
sub
xor
adc
mov
dec
add
pop
add
add
push
xchg
int3
pop
xchg
sti
test
out
ja
cwtl
inc
add
inc
mov
jae
mov
xchg
div
dec
jo
pop
insb
les
sub
cwtl
push
dec
jle
sbb
cld
out
rorl
outsb
int3
movsb
inc
inc
in
pop
js
push
aam
ret
adc
push
fdivrl
rcll
std
insl
push
cli
push
insl
clc
or
aad
ror
fmull
cmp
dec
ja
lods
mov
push
xor
inc
mov
js
lret
shll
ljmp
sbb
out
push
das
cld
mov
inc
repnz
dec
jae
dec
pop
bound
mov
int
bound
outsl
rolb
xor
xor
mov
mov
gs
mov
and
aad
cli
xlat
imul
sbb
mov
shl
mov
inc
nop
imul
lods
mov
test
fistps
push
dec
mov
pop
mov
rcl
sub
xchg
mov
fdivrl
movsb
rcrl
adc
inc
dec
jnp
in
adc
nop
mov
addb
insb
pop
sbb
xchg
je
mov
addr16
dec
lcall
mov
or
inc
repnz
leave
jae
jmp
ljmp
mov
fsubrl
je
ljmp
jl
negb
iret
repnz
inc
arpl
mov
flds
xchg
sub
stos
or
or
pop
movsl
adc
dec
jl
inc
adc
sbb
xlat
sbb
dec
daa
aas
push
fs
rclb
inc
leave
shll
fwait
sarb
and
pushf
adc
les
int
mov
idiv
mov
pop
in
out
adc
and
or
test
repz
aam
scas
sbb
push
sbb
mov
sbb
inc
or
data16
stc
lret
les
nop
mov
mov
and
les
leave
stc
lret
das
push
outsl
cmp
push
mov
cmp
sbb
push
fiaddl
lret
test
aam
ret
cmp
stos
push
xorl
jg
adc
mov
addl
add
push
lds
std
sub
pushf
int
pusha
out
xor
push
hlt
pop
dec
test
js
or
and
xchg
mov
enter
fs
shl
fs
mov
loop
inc
lods
push
jnp
push
arpl
mov
and
lret
dec
ljmp
loop
leave
cmp
adc
inc
adc
mov
rorb
loopne
movsl
xor
push
lcall
pop
add
jb
repnz
xchg
xlat
shlb
push
mov
cmp
dec
pop
push
xchg
dec
xchg
jno
cmpb
cmp
mov
roll
outsl
aam
movsl
cwtl
lock
stc
add
jb
nop
or
mov
push
push
clc
lret
insl
movsb
adc
mov
mov
push
jl
sbbb
pop
mov
lcall
lret
jns
in
cmpsb
add
mov
fwait
test
cld
push
xorb
fwait
cmpsl
imul
dec
sbb
mov
dec
adc
das
imul
imul
testb
add
lcall
orl
mov
bound
mov
stos
add
jp
frstor
mov
lcall
call
mov
jno
outsl
fcomp
in
int
xor
stc
fadd
scas
add
mov
lock
sub
dec
mov
lds
cwtl
shrl
fadd
test
das
and
sbb
test
or
cmp
sub
sar
lds
inc
cltd
enter
cli
jns
lcall
test
gs
sar
cmp
pop
push
inc
or
test
fs
popa
repz
jb
push
jl
and
mov
test
loop
js
loop
dec
retw
std
dec
dec
add
dec
fldcw
cmpsl
jmp
andb
cld
and
jae
or
mov
push
mov
cmp
dec
popf
push
mov
cmp
xchg
ror
mov
insl
decb
pop
rcll
and
mov
es
adc
cmpsl
inc
movsb
add
pop
gs
mov
sub
xchg
inc
cmpsl
pop
stos
push
mov
jecxz
add
movsb
and
cltd
mov
inc
test
arpl
adc
pop
arpl
fcmovu
mov
pusha
fldenv
xchg
test
movsb
arpl
leave
test
mov
push
push
lret
xor
addb
mov
rorb
imul
sub
mov
sbb
sub
dec
mov
test
cltd
shll
push
add
pop
mov
push
push
fiadds
rolb
dec
ror
arpl
fsubl
cmpsl
inc
cld
sti
pop
cltd
push
movsl
sbb
je
add
mov
aam
xchg
dec
in
cmp
cmp
inc
jg
ret
pop
mov
and
aaa
dec
in
mov
dec
dec
adc
jne
bound
ja
iret
fcompl
leave
movsb
inc
ljmp
fidivrs
and
pop
clc
ljmp
vucomiss
hlt
and
loopne
stc
push
popf
stc
sub
cld
stos
int3
jl
stc
loope
mov
stc
sbb
dec
inc
fcom
mov
push
lods
or
lcall
xor
mov
pushf
dec
stc
mov
or
push
xor
stc
cmp
loopne
dec
sub
jns
rcrl
push
mov
sub
mov
ret
mov
jne
sub
jmp
testb
js
xchg
jno
cmp
loopne
shll
enter
push
enter
mov
mov
jl
adc
nop
pushf
mov
inc
lods
lret
fmull
cltd
ret
dec
sub
push
and
repz
jge
mov
jns
mov
jl
pop
test
mov
or
mov
inc
fucomip
fwait
mov
adc
lret
movsb
sub
jmp
xchg
rcrl
mov
in
mov
lea
std
push
cwtl
cld
stos
or
inc
jns
jmp
lcall
mov
push
xchg
imul
stos
jns
ror
jecxz
sbb
out
call
roll
add
shll
or
pop
fistpll
pop
ficoms
ret
pop
mov
bound
cli
fcmovu
mov
clc
mov
loope
call
arpl
shrl
jns
call
in
jecxz
fdiv
bound
add
rcl
fwait
shlb
mov
cmp
dec
sti
dec
fdivrp
cmpsl
bound
addr16
sub
popf
cmp
cwtl
and
ret
inc
dec
push
iret
rcrb
cmp
pop
dec
aam
into
cmpsl
rcr
nop
aam
inc
inc
xchg
stc
push
pop
dec
fldl
fwait
sbb
pusha
retw
ficoms
mov
pop
test
repnz
cltd
out
mov
push
out
leave
push
lds
mov
addr16
test
sub
sbb
enter
lea
das
enter
cwtl
jl
inc
pop
cmpsl
dec
push
cwtl
scas
inc
fisttps
xlat
add
jmp
adc
jnp
jns
enter
dec
jecxz
test
xchg
or
cmpl
int
cmp
arpl
cli
cld
out
loope
mov
out
ret
fldt
lock
lahf
adc
lods
cltd
test
jns
iret
cmp
pop
dec
sti
dec
cmp
jns
imul
je
sbb
rorl
lods
jbe
cmp
out
dec
fbstp
andl
fimuls
enter
and
ret
popa
mov
sbb
scas
push
test
jbe
inc
test
cmp
out
in
xor
fdivl
push
shrb
out
push
inc
into
or
in
les
inc
add
adc
cmp
push
xor
les
cmp
int
push
lcall
pop
out
in
jo
in
cmp
jo
jmp
rolb
out
cmpsb
push
stos
imul
jmp
jns
lock
or
push
mov
xchg
jle
sbb
cli
push
movsl
jle
push
xorb
in
mov
neg
loope
and
xor
fisubl
inc
and
xor
xlat
mov
cmpsb
xchg
cmpsb
fwait
ror
fisubrl
fcoml
sbb
fsubrs
das
push
cld
xor
sbb
test
xlat
rorl
es
ljmp
stc
add
dec
push
sbb
jl
xchg
mov
int
and
test
push
cwtl
lea
sahf
clc
in
sub
iret
cli
push
sbb
ficompl
fdecstp
fldenv
fucomi
or
movsb
test
xchg
xchg
dec
cmc
mov
cmp
cli
push
aam
adc
lret
pop
mov
sbb
xlat
jge
xchg
or
lret
mov
dec
inc
inc
lds
jne
iret
aam
leave
repnz
jb
cwtl
ret
leave
in
push
jge
xlat
mov
xor
int
fistps
pop
movsb
std
pop
push
cld
push
dec
cmp
or
mov
cmc
inc
jle
add
push
lcall
arpl
mov
mov
push
ret
pop
std
test
jmp
push
stc
jecxz
pushf
mov
mov
xor
cli
xlat
pushf
cmp
and
xchg
adc
sbb
out
repnz
mov
xchg
pop
and
fidivrl
jmp
jle
je
std
mov
roll
inc
iret
xchg
xchg
sbb
rorb
cld
rorl
std
mov
lret
imul
mov
nop
dec
or
mov
pop
mov
stc
or
popa
lret
pushf
aaa
aam
xor
test
into
sub
mov
jb
jl
icebp
daa
mov
clc
movsl
into
dec
loopne
mov
lret
fnstsw
iret
mov
xchg
sbbl
pushf
push
inc
stos
add
int3
rorb
sub
push
pushf
add
pushf
rorl
ja
jp
lret
mov
adc
out
xchg
mov
mov
mov
mov
inc
inc
cld
mov
aaa
cli
div
stos
jl
xchg
pop
ds
shrl
test
push
push
arpl
pusha
xchg
cmp
mov
arpl
push
adc
inc
jns
mov
mov
cwtl
bound
mov
iret
mov
movsb
dec
mov
rol
sbb
sti
clc
add
xchg
jns
add
inc
inc
aad
mov
xchg
cmpsl
scas
mov
xlat
decb
cmp
or
add
lret
xchg
sub
mov
or
shrl
test
dec
daa
fildll
dec
cwtl
jl
sbb
adc
mov
mov
xchg
mov
and
rorb
dec
jno
inc
mov
cli
stos
add
jecxz
mov
lds
filds
pusha
in
adc
mov
stc
lret
adc
cmp
mov
cld
mov
js
or
lea
inc
jae
aad
inc
mov
enter
enter
cmp
dec
enter
cltd
aad
add
mov
mov
adc
xlat
addb
fildll
mov
push
lea
dec
or
mov
jns
push
imul
pop
fnstcw
mov
jle
pusha
jae
mov
out
mov
lods
cld
push
rcr
sarb
lahf
mov
cmpsl
or
pmaxub
mov
mov
pop
pushf
mov
lcall
stos
ret
popa
or
les
push
inc
or
in
cmp
jmp
cmp
test
cmp
dec
aam
dec
mov
decb
inc
cmp
shll
aam
andnps
dec
inc
and
repz
push
jp
push
xchg
mov
mov
test
sbb
mov
sbb
push
test
movl
flds
prefetch
pop
push
lret
xchg
jl
pop
jns
adc
add
and
sub
stos
pop
loopne
bound
push
mov
gs
and
adc
mov
inc
repz
or
iret
lret
jns
add
push
enter
lret
mov
pushf
xchg
lds
push
jecxz
js
xorl
xchg
sub
pusha
dec
std
mov
frstor
pop
jecxz
ret
dec
aam
jno
inc
adc
adc
or
enter
mov
mov
leave
mov
lret
iret
sub
addr16
fcmovb
imul
cli
int3
pop
pop
fsubrs
jge
cmp
inc
lcall
cltd
mov
inc
lea
cmp
cltd
ljmp
shlb
outsb
leave
pop
aam
test
inc
pop
jnp
enter
jle
ss
fdivrs
rcr
dec
jbe
adc
sbb
fxch
gs
mov
jns
pop
inc
fdivl
add
inc
faddl
loopne
pop
lea
cmp
fisubs
lcall
mov
jne
scas
sub
pop
addr16
ja
jbe
negl
push
in
add
add
mov
pop
mov
sub
adc
adc
add
add
inc
add
sub
popf
mov
shll
lea
xor
dec
xlat
or
cmc
dec
cmp
dec
xchg
push
mov
fcoms
out
dec
iret
inc
in
mov
add
push
or
push
xchg
stc
ror
lcall
pop
cmp
roll
push
test
js
fldcw
sbbl
rolb
in
out
and
mov
adc
mov
mov
shlb
daa
mov
mov
push
out
add
leave
sbb
sbb
stos
sti
clc
rorl
mov
jbe
int3
out
pop
inc
adc
test
sub
lret
adc
iret
loop
push
ror
ret
jns
or
mov
dec
hlt
sti
ljmp
insb
shrb
sbb
mov
add
push
enterw
out
pop
and
jb
addb
test
ret
aam
mov
mov
mov
mov
lret
daa
jno
mov
int3
sti
dec
lret
cmpsl
popf
lcall
cld
add
dec
sub
es
jge
lret
call
push
les
leave
stos
test
loope
add
mov
lcall
mov
mov
out
add
add
mov
or
mov
in
pusha
jae
xchg
leave
inc
add
inc
sbb
adc
inc
mov
cs
dec
push
ds
xor
inc
pop
fdivs
lret
mov
dec
jne
aam
dec
shll
inc
fs
inc
push
jmp
push
out
dec
xchg
stc
ljmp
fstl
fnstenv
cwtl
mov
adc
test
ret
js
sub
in
pop
pop
scas
or
or
loope
loopne
scas
and
add
mov
sbb
stos
sahf
push
out
loopne
mov
xor
loope
lcall
aad
push
push
testl
xchg
leave
pop
push
outsb
aaa
lcall
sbb
pop
mov
xor
cld
test
cltd
bnd
sub
jb
cmpsb
test
sar
sub
sub
gs
cmp
lcall
fwait
mov
xlat
mov
and
adc
inc
or
inc
xchg
pop
lods
jbe
push
mov
mov
push
das
mov
daa
mov
mov
mov
push
out
call
mov
sbb
add
cltd
mov
data16
cmpsl
inc
inc
movsb
cs
je
or
mov
cli
enter
sbb
sbb
mov
mov
ret
cli
pop
mov
pop
mov
jp
shr
lcall
pop
push
xchg
rcrb
cli
lcall
pop
or
in
int3
ret
sub
lods
stc
nop
mov
aad
lods
enter
leave
in
dec
fs
dec
test
clc
add
dec
dec
enter
and
mov
add
int3
dec
stc
test
adc
lods
sbb
cmp
mov
jae
jbe
mov
fadds
mov
jmp
nop
mov
push
stos
int
fistps
leave
arpl
inc
push
loopne
test
sub
fwait
push
xlat
decl
out
cmp
cmp
test
pop
or
or
sub
cmpsb
inc
jns
lcall
inc
arpl
jmp
xchg
xchg
inc
faddl
mov
js
ret
enter
rorb
stc
push
mov
lret
clc
das
push
or
push
movsl
pop
jg
cmpsl
push
test
mov
xchg
dec
cmp
dec
call
jecxz
add
or
inc
push
xchg
adc
fdivrs
dec
cmpsb
dec
xchg
inc
stc
inc
mov
cmpl
aam
loopne
pushf
lds
cmpl
lcall
dec
outsl
aas
out
add
mov
mov
jmp
and
insl
outsl
jnp
iret
fbld
shll
mov
enter
test
sub
jp
scas
mov
cwtl
mov
add
pop
aas
xchg
mov
cli
dec
mov
aas
xchg
xchg
pop
fdivr
pop
fsubrs
xchg
or
cmp
scas
jge
sub
mov
into
adc
inc
mov
or
cmp
xchg
xchg
mov
lea
and
xchg
push
test
add
mov
jbe
adc
jnp
sbb
xchg
push
mov
cmp
in
cltd
ds
dec
push
or
lcall
mov
popa
push
sub
mov
or
test
mov
scas
push
mov
mov
lds
cli
mov
jns
cli
mov
jmp
test
pxor
sub
scas
mov
mov
nop
ret
cld
dec
adc
outsb
push
push
pusha
das
les
divb
ret
and
mov
push
mov
mov
cmp
icebp
mov
ret
cli
sahf
adc
push
sbb
add
cmp
push
stc
addr16
popa
std
loop
xchg
stos
fmul
ret
loopne
jg
mov
pusha
jae
adc
mov
mov
ret
ret
jmp
fildll
xor
cli
add
xchg
jge
or
stc
daa
test
int
dec
cltd
stc
ret
jns
fldenv
sbb
and
enter
cltd
imul
leave
mov
push
outsb
iret
inc
cli
dec
movsb
pushf
inc
adc
ljmp
sbb
mov
sti
subl
imul
xchg
mov
cwtl
xchg
cld
sti
in
pop
xor
cmp
arpl
pop
std
ss
mov
xchg
cltd
stc
push
cmp
sub
sub
jnp
inc
pop
lds
pop
outsl
sub
push
adc
lock
repnz
enter
cmp
jns
xlat
or
jmp
in
out
icebp
mov
mov
popf
jmp
popf
pop
add
inc
pop
fcompl
mov
popf
or
xchg
push
lret
and
sahf
dec
pop
cs
xchg
cmpb
add
sbb
stos
jmp
in
stos
mov
outsb
inc
fidivrs
push
lock
sahf
pop
aad
push
cmp
je
loopne
push
dec
push
jle
cld
cwtl
mov
mov
mov
aam
rorb
movsb
fists
jl
push
les
xlat
and
inc
aam
sub
mov
push
aam
stos
js
sub
loopne
leave
lret
ja
in
ficomps
lret
inc
adc
ret
lods
int
dec
test
rdpmc
aad
repz
fisubrl
jne
xor
aam
dec
mov
sbb
mov
push
xor
loopne
and
jmp
bound
shl
sub
add
movb
sub
addr16
sbbl
test
in
fiadds
fcmovbe
jg
stos
mov
enter
adcl
inc
arpl
jl
pushf
aas
jns
loopne
inc
or
ret
ds
popf
add
repz
icebp
data16
into
rol
stc
aad
leave
ljmp
xchg
cmpsl
stos
or
cmp
cmp
rclb
rcrl
mov
ret
jns
pop
adc
sarb
mov
fwait
cs
adc
cld
scas
dec
shl
push
pop
xlat
into
dec
or
test
ficompl
jge
fsubr
jp
inc
call
mov
jns
jo
int
add
mov
stc
sbb
movsl
inc
adc
ror
mov
cmc
pushf
xchg
imul
sub
mov
jle
or
in
push
cwtl
pop
xlat
ret
test
pushf
aad
decb
cmp
add
mov
push
cld
add
dec
clc
and
sub
rclb
incb
cmp
inc
mov
movsl
in
dec
arpl
fnstsw
testl
mov
and
mov
xchg
shlb
push
sbb
push
jb
aad
pushf
sub
dec
and
movsb
ret
adc
and
adc
incb
jae
loope
inc
leave
pushf
jb
xlat
popf
adc
fidivrs
push
sbb
mov
dec
push
jmp
out
stc
adc
pop
scas
mov
dec
test
fsubrl
das
stos
fcoml
jecxz
mov
jmp
or
int3
sbb
mov
mov
lods
fcompl
imul
xchg
rorl
into
aad
jb
xor
shl
enter
out
xchg
jno
out
cmc
faddl
sbb
mov
stc
or
in
lods
sbb
push
scas
mov
lds
cmc
or
push
or
lods
mov
mov
shrl
push
imul
adc
dec
mov
loopne
mov
adc
mov
push
fdivl
fsubs
inc
jbe
dec
loop
rcll
dec
pop
pop
xor
jecxz
je
mov
mov
repz
adc
pop
push
mov
rcrb
jecxz
movb
sbb
pop
mov
xchg
int3
cmp
adc
push
aaa
fwait
nop
cli
fcomps
mov
sbb
rcrl
jns
xor
mov
int
into
cmpsl
mov
test
out
imul
mov
out
sub
or
or
add
xrelease
fstpl
call
sbb
sbb
and
rorl
dec
cmp
dec
add
daa
gs
add
inc
lock
int3
das
sub
lcall
xchg
lods
push
imul
jl
aaa
inc
mov
fwait
mov
mov
jmp
aam
mov
cmp
inc
rorl
xchg
mov
daa
jp
testb
push
in
push
jns
cltd
push
adc
iret
mov
addr16
pop
dec
loop
pushf
xchg
sbb
or
stos
pop
popa
cwtl
jnp
push
dec
shll
cmc
and
xchg
rorb
xor
pop
fs
dec
das
push
sahf
inc
int3
orl
push
xchg
pop
insb
dec
gs
push
loope
stc
rcr
fsubr
fstps
iret
movsl
pushf
dec
jb
mov
cld
iret
lcall
jb
ss
sbb
scas
insb
add
add
ja
mov
pop
xlat
dec
cld
push
mov
mov
jb
data16
mov
cmp
dec
sbb
test
testb
addb
adc
leave
pop
ret
pop
js
mov
loopne
cmp
lret
adc
std
or
pop
std
loop
loopne
in
add
mov
xlat
mov
out
xchg
jle
pop
push
call
mov
int3
push
loopne
aam
add
mov
and
xchg
call
xor
mov
es
jbe
out
mov
inc
xchg
clc
icebp
mov
push
xchg
mov
adc
push
xlat
and
sbb
cmpsl
dec
jmp
in
filds
xorb
lret
dec
push
jecxz
cmpsl
ds
mov
shlb
lods
sub
hlt
xchg
lret
xchg
inc
mov
jmp
inc
cwtl
mov
fcoml
movsb
pop
push
dec
lods
push
scas
in
or
pop
mov
xor
or
pop
mov
push
pushf
cmp
jle
pop
xchg
loopne
jge
pop
pop
push
pop
pop
mov
sbb
adc
dec
sub
lcall
int3
sub
sbb
clc
push
imul
xor
in
adc
clc
aas
pop
fstps
mov
and
xlat
jmp
cmp
xor
dec
mov
fiadds
stos
cli
std
push
outsl
in
jecxz
pop
dec
sbb
pusha
xor
adc
sbb
rorb
push
sbb
lret
adc
sbb
repnz
lret
adc
ja
dec
aas
subl
pop
inc
xchg
imul
fucomp
pop
mov
into
stc
test
mov
cmp
adc
adc
pop
push
mov
jae
shr
and
push
lds
push
ds
ljmp
sti
adc
in
imul
xchg
sbb
imul
enter
mov
pop
sbb
stos
push
push
add
jbe
or
mov
and
test
cmp
or
push
sub
lret
pusha
iret
je
mov
lcall
push
repz
cmp
sub
dec
add
mov
lcall
mov
cmp
das
dec
test
sti
test
jnp
pop
add
mov
not
shll
dec
mov
outsb
xor
sbb
mov
sub
ffree
xchg
pop
add
aam
push
xor
inc
popf
jnp,pt
jo
sti
shr
xlat
out
or
inc
xchg
popf
xchg
loopne
push
bound
mov
out
sbb
inc
xchg
arpl
mov
jecxz
dec
or
repnz
pop
ret
ficoml
inc
add
enter
cmp
dec
in
mov
jge
sub
push
xor
mov
jmp
gs
dec
push
scas
fsubs
lcall
cmpsb
lods
inc
ds
push
cwtl
in
jo
cmp
imul
lahf
sub
pusha
nop
cwtl
adc
outsl
fdivs
sbbl
adc
mov
ret
pushf
xor
es
mov
pop
pop
mov
stos
mov
mov
pusha
iret
cwtl
adc
mov
push
mov
aam
xchg
dec
mov
out
lret
dec
xchg
mov
push
pop
xchg
stc
out
mov
dec
sbb
inc
mov
dec
push
lret
ret
mov
nop
jge
stos
xchg
jns
cmp
in
sbb
out
adc
jae
lods
add
aam
shlb
call
xchg
stos
mov
fcompl
sub
mov
mov
fld
pop
mov
and
sbb
ret
mov
jns,pt
popf
dec
dec
pop
mov
jmp
adc
xchg
inc
jge
sub
jne
fimuls
inc
aam
sbb
loop
jp
mov
psubusb
cmp
cmp
in
mov
shl
fistl
mov
mov
cmp
push
sti
cwtl
mov
ljmp
sub
jecxz
push
push
push
and
cwtl
push
sarl
mov
add
sbbl
and
xchg
push
test
imul
pop
dec
mov
stos
popa
pushf
pop
cld
xchg
jns
dec
int3
add
sub
leave
arpl
int3
push
mov
xor
push
clc
popf
inc
daa
add
push
loope
jl
mov
dec
scas
pop
sahf
jns
mov
int3
adc
pop
push
cmpsb
or
jg
sbb
orl
stos
pop
orb
stc
and
cld
xchg
xor
add
leave
inc
or
push
sti
mov
jl
fiaddl
lcall
fwait
mov
call
or
fnsave
adc
jle
xchg
add
add
int3
push
inc
rcll
or
push
add
cwtl
insl
and
fmull
xor
jae
sbb
cs
out
sub
aad
sbb
addps
jne
inc
cld
mov
scas
das
popa
cmc
mov
dec
push
mov
cli
idivb
cli
jnp
ss
jae
adc
xchg
movsb
jno
sbb
xor
das
xchg
push
dec
xchg
cwtl
sbb
iret
shl
shrl
lods
imul
or
pop
cmp
addr16
dec
cmp
in
mov
repnz
orl
mov
sbb
adc
xor
dec
jl
sbb
dec
push
fxch
iret
push
stc
ja
popf
pop
jecxz
and
xor
into
adc
mov
adc
mov
mov
xchg
add
jecxz
mov
std
out
lcall
lods
push
outsl
movsl
enter
and
dec
sub
mov
sarl
shll
fists
adc
dec
jb
shll
sub
add
popa
shl
dec
push
mov
pop
addb
add
mov
mulb
mov
adc
sub
adc
dec
or
packuswb
fisubl
mov
mov
xor
push
enter
dec
fistl
push
jbe
call
aaa
stc
out
mov
cmpl
aam
loop
and
stos
pop
rcll
rorl
or
push
push
ret
sub
mov
loop
mov
push
int
outsl
loope
xchg
mov
ret
out
int
cli
pop
pop
mov
jb
popf
inc
fwait
shlb
daa
into
cltd
or
call
in
and
cld
test
aam
cltd
ret
mov
add
pop
movl
lds
mov
mov
out
sbb
sbb
mov
sub
popa
int3
adc
movsl
imul
push
jg
sbb
mov
int3
clc
loop
mov
dec
imul
fidivs
jb
cli
or
fcmovbe
inc
cmp
pop
scas
xor
ficoms
push
sbb
mov
jb
scas
ret
xchg
xchg
pop
adc
sbb
out
inc
sub
popf
inc
mov
xchg
dec
dec
xlat
dec
push
mov
popf
lock
dec
mov
xchg
subb
jb
sub
sbb
jbe
xor
mov
mov
test
sbb
push
data16
inc
mov
mov
mov
outsb
and
dec
cld
xor
sbb
xchg
sti
mov
fistps
xor
test
or
pop
or
dec
insb
mov
and
in
call
mov
dec
jns
imul
dec
push
ljmp
mov
sub
jmp
nop
cli
jbe
nop
push
in
iret
add
sub
inc
dec
cmpsl
xor
cmp
lret
jecxz
push
dec
scas
inc
cmp
out
adcl
leave
iret
pop
sarb
add
xchg
mov
and
mov
sti
scas
mov
lds
int
in
cs
sub
divl
and
nop
rcrl
sbb
xlat
movl
sbb
lds
xchg
test
xchg
lret
jp
insl
mov
inc
sbb
cli
xchg
lock
pop
cmpsl
dec
sbb
dec
cltd
cmp
pop
mov
sarb
add
pop
xchg
mov
jns
xlat
xchg
outsl
mov
jge
loope
lea
sbb
jnp
mov
mov
out
dec
int3
in
lea
pop
std
loopne
push
fnstsw
and
sbb
add
or
in
pop
std
sub
mov
inc
dec
sarl
xchg
shll
xchg
add
test
and
dec
or
stc
bound
sub
std
mov
xor
sbb
scas
inc
dec
hlt
xchg
mov
loopne
mov
sbb
sbb
out
and
out
sar
mov
inc
std
jmp
fisttpl
aaa
loope
call
dec
mov
test
dec
mov
adc
xor
sbb
imul
cli
mov
stc
enter
pop
aam
in
xchg
flds
mov
icebp
add
divl
leave
push
mov
dec
mov
mov
repnz
outsl
call
outsl
ds
mov
jae
addr16
jae
push
rcrl
and
test
dec
in
xlat
repz
daa
stc
mov
jmp
paddb
shlb
sub
lcall
add
outsl
rcrl
enter
repz
push
inc
and
mov
jecxz
jne
mov
xor
dec
sbb
fsubrl
test
movsb
cmp
rclb
lret
mov
popf
xchg
sbb
dec
sub
addr16
outsl
sub
jmp
adc
shll
js
dec
stc
in
inc
rorb
adc
push
cmpsl
sub
xor
adc
clc
orl
sub
aad
cltd
shrl
fnstsw
sti
mov
jp
pop
ret
push
loopne
std
sub
push
call
push
pop
mov
xchg
lods
in
adc
or
in
mov
mov
loopne
add
in
addr16
or
mov
sub
scas
add
movsb
jae
repnz
and
cmp
jmp
shlb
test
pop
push
shrl
or
push
xchg
push
jp
dec
and
mov
lcall
insb
jo
mov
fsubrl
cmpsb
mov
aad
xor
aam
mov
leave
mov
add
dec
sti
xorl
push
scas
mov
inc
loopne
stos
cmp
dec
cld
mov
dec
or
push
adcl
cmp
cwtl
mov
pop
leave
cwtl
popa
shll
inc
cmp
shlb
adc
les
setns
adc
push
mov
and
adc
push
push
js
enter
arpl
imul
in
pop
xchg
mov
in
inc
push
or
xchg
imul
xchg
in
xlat
pop
fisttpl
lret
cwtl
dec
xor
lret
ret
iret
mov
or
xor
mov
movsl
add
adc
nop
aam
xchg
jg
inc
adc
jge
lds
jmp
push
pop
lcall
fmul
sbb
clc
xchg
push
jle
lahf
adcb
outsb
push
lods
mov
push
cmp
ret
sub
fimuls
adc
stc
call
loop
insl
xchg
inc
sub
pop
pop
jl
daa
test
ficompl
jl
adc
lcall
push
or
jp
lcall
mov
fiadds
lcall
popf
roll
rcl
jb
hlt
inc
enter
cltd
scas
movsb
movsl
mov
inc
fcompl
inc
sub
rcrb
rcll
push
aas
mov
cmp
push
cmpsl
ja
push
pmuludq
mov
mov
or
push
mov
or
aas
jo
fs
arpl
push
pop
cld
popf
je
xchg
sarl
add
adc
js
adc
std
sbb
sbb
pushf
out
stc
jl
mov
mov
mov
add
fs
jp,pt
dec
jae
or
inc
sbb
mov
inc
cwtl
xchg
fwait
in
ds
inc
pop
jl
or
sub
cmpsl
int
cmp
test
dec
add
testl
dec
sbb
movsl
add
inc
mov
add
cwtl
imul
cmpsb
and
fsubrl
hlt
add
or
jbe
and
inc
dec
fwait
sub
push
pop
push
dec
and
lds
xor
dec
push
push
cmpsl
sub
mov
jno
cmp
or
loopne
jmp
out
jmp
sar
pop
add
fs
jl
xchg
es
cmp
pop
cmp
cmp
popa
loopne,pt
fnstcw
pop
mov
add
inc
test
push
fmull
mov
and
cmp
add
rcrb
sahf
push
mov
pop
fstpt
mov
pop
sub
mov
xlat
test
call
pause
or
xchg
adc
hlt
cmp
movsl
stc
xchg
lret
movsb
orb
jns
sbb
int3
fistpl
lret
pop
mov
int
jbe
cli
dec
fidivrs
push
jns
pop
fidivl
out
mov
mov
pop
ljmp
mov
repnz
xor
out
pop
fs
and
ljmp
xchg
lds
movsl
out
cmpsl
fnstcw
les
dec
xlat
push
sub
pop
outsl
xor
test
out
push
adc
pop
pop
xchg
mov
in
movsl
call
mov
lds
andl
pop
scas
lods
negl
dec
jns
mov
shll
dec
inc
into
in
dec
fldenv
cmpsl
lods
pushf
int3
lods
int
stc
xchg
mov
mov
ficomps
or
std
push
lds
push
and
insb
mov
mov
xor
lcall
dec
inc
fcompl
enter
std
jmp
cmc
faddl
int
jg
xor
jle
and
pop
push
call
imul
add
pop
add
inc
pushf
cld
pop
inc
pop
mov
adc
dec
push
xor
push
outsb
sbb
pop
xchg
add
sbb
rcl
or
movsl
mov
lret
sbb
cmp
and
loopne
aam
mov
shl
fisttps
lods
push
jae
fiaddl
stc
inc
repnz
lods
or
mov
negb
cmp
cwtl
fmul
sub
jp
mov
out
mov
lahf
in
mov
inc
xorb
push
pop
leave
int3
xor
inc
dec
test
inc
mov
js
bound
scas
cwtl
test
ret
test
dec
mov
xlat
mov
lock
enter
fs
gs
inc
inc
adc
add
scas
pop
xchg
pop
mov
enter
cmp
imul
cmp
test
int3
push
pop
movsb
jb
push
adc
cs
mov
inc
fs
sbb
movsb
mov
cld
sub
mov
add
pop
inc
dec
inc
test
xchg
and
adc
popf
and
pop
in
es
les
out
inc
and
or
fldcw
jb
ds
dec
jge
push
jp
add
fistpll
mov
mov
adc
cmp
mov
cmpsl
shll
fdivrl
or
es
inc
xor
inc
cmp
push
daa
int3
or
iret
out
xorb
sub
pop
sbb
lods
jp
sti
push
push
jno
add
nop
sbb
ljmp
cmp
insb
lcall
mov
mov
fcompl
cwtl
jl
xor
lcall
sub
loopne
push
cli
push
inc
or
jp
mov
les
scas
stc
insb
mov
sarw
rcl
roll
test
lea
or
xor
pop
mov
imul
leave
mov
movsl
movsb
dec
dec
fildll
sahf
adc
cmp
pop
pop
xor
sti
jnp
mov
aad
mov
pmaddwd
cli
adc
fimull
subl
call
mov
xchg
fwait
mov
mov
push
push
or
dec
inc
ljmp
add
adc
stc
lds
test
cmpsb
pop
mov
xchg
jecxz
fsub
xor
lods
lods
lcall
std
ret
jecxz
mov
jns
sub
test
shrb
in
fxch
and
movsb
scas
pop
icebp
mov
in
jg
and
or
lods
call
pop
and
popf
jns
in
movsb
add
iret
std
inc
aas
mov
aam
cld
ror
push
nop
jle
sahf
push
enter
ss
repz
xor
ret
inc
cld
sbb
or
inc
inc
add
test
dec
dec
lret
scas
imul
mov
jmp
jns
xor
fsubrs
ret
mov
lods
sub
jp
mov
test
mov
pop
popf
or
push
xlat
cmc
jo
push
pop
xchg
sarl
dec
mov
mov
repz
cmp
fimuls
fldcw
leave
xchg
sbb
fsubs
push
mov
shrb
dec
loopne
and
pusha
outsl
rorl
dec
pop
fwait
push
jnp
mov
inc
adc
shll
add
push
dec
sbb
loop
jge
sbb
cs
rcrl
incb
mov
in
mov
cmp
sbb
mov
gs
or
mov
xor
mov
cs
lret
mov
fsubl
fnstsw
mov
rol
mov
test
add
add
aad
insb
pop
popl
cmp
aam
mov
dec
fs
mov
pop
lea
sbb
int3
add
add
xchg
mov
dec
sbb
ss
mov
lcall
jo
cltd
cmpsl
pop
dec
fbld
push
outsl
adc
add
test
adcl
out
jnp
fisttpl
cmc
int3
pop
mov
mov
das
mov
lret
mov
xchg
inc
pop
or
and
rcrl
jp
test
mov
xchg
or
test
pushf
add
fstl
mov
inc
sub
ja
ret
rcrb
mov
cld
in
sub
xor
add
cmpsl
sbb
mov
add
sub
add
ret
in
ss
movsb
mov
pop
das
sub
sahf
push
popa
loop
cmp
sub
popf
test
sub
int
inc
ficoms
inc
mov
jmp
mov
inc
push
jle
xor
inc
xor
cwtl
add
jmp
add
pop
pop
nop
and
pop
fwait
mov
fnstenv
mov
mov
fwait
sub
push
adc
lret
cld
mov
push
xor
or
xchg
mov
shlb
stos
dec
cmpsb
in
ss
xor
andl
addr16
push
arpl
push
jmp
loope
jge
push
adc
stc
mov
sub
hlt
and
pushf
push
ljmp
push
fsubs
fwait
inc
or
add
xlat
sbb
or
in
aas
aam
cmp
or
dec
dec
push
cmp
mov
mov
jle
dec
mov
cmp
jb
fwait
add
loopne
mov
fcoml
xchg
loop
xor
dec
mov
lcall
xchg
enter
pop
mov
lds
cld
xlat
xchg
cmp
pop
xchg
jno
xchg
sbb
add
ret
shld
gs
aam
jle
pop
sbb
or
push
inc
loopne
push
fcmovne
loop
insl
inc
add
mov
lcall
lock
jg
mov
mov
sub
xor
popa
xor
add
adc
xlat
jecxz
addr16
jp
push
xchg
jl
sarl
movsb
and
leave
sbb
sbb
enter
inc
test
sbb
mov
push
jne
jl
inc
mov
mov
cmpsb
repz
xchg
testb
mov
mov
fldenv
or
cmp
lock
or
dec
cld
rcl
cmp
jl
cmp
xchg
mov
mov
sbb
cwtl
lcall
jnp
cmp
jmp
test
mov
add
sti
sbb
push
cmpsb
in
stc
inc
xchg
adcl
mov
xchg
iret
dec
adc
sbb
outsb
mov
gs
pushf
insb
scas
cltd
add
push
cmpsl
push
test
xor
add
xchg
lock
sbb
stc
dec
ret
and
xor
adc
pop
mov
and
jbe
fadd
out
pop
or
cli
and
jbe
sub
aam
les
mov
cmp
pop
pop
stos
dec
lret
xlat
dec
jae
push
jge
arpl
dec
push
lds
pop
mov
leave
and
xlat
pop
mov
enter
fwait
test
lcall
fwait
jecxz
lods
rcll
push
add
sbb
mov
daa
xchg
out
jb
or
dec
dec
mov
cmpsl
movl
repnz
add
mov
pop
mov
rol
cli
loopne
push
jmp
cwtl
std
cmp
mov
shlb
or
int3
pop
xorb
xor
cmp
orb
test
mov
iret
cmp
lahf
pop
or
xor
cld
out
or
jmp
xchg
jge
int
sbb
pop
inc
mov
rclb
sbb
jl
leave
iret
pop
pushf
pop
stc
insl
cmpb
popf
scas
inc
lret
ja
rclb
push
gs
xchg
enter
jb
fnstcw
sbb
test
inc
mov
loopne
sbb
and
leave
leave
stc
int3
or
nop
xchg
jb
sbb
inc
cld
add
add
or
mov
xchg
in
popa
or
or
arpl
xor
notb
ficoml
pushf
ffree
jns
mov
and
mov
ror
mov
scas
inc
bnd
subb
shrb
and
pushf
sarb
xchg
xorb
fmull
pop
jns
pop
rcll
mov
mov
sbb
mov
cmpsb
stos
mov
mov
pushf
mov
xor
out
imul
mov
jns
mov
mov
sub
cld
mov
mov
mov
mov
rcll
scas
cs
lods
inc
fsub
loop
ret
enter
aad
in
stos
hlt
fisubrl
lret
lds
movl
shrb
or
stc
inc
jbe
pusha
stos
lcall
loopne
popa
out
mov
xchg
scas
pop
xchg
xor
dec
ret
xchg
cwtl
add
bound
jbe
mov
sub
into
sbb
pop
mov
dec
jmp
leave
daa
ret
xor
jmp
iret
lret
stc
mov
push
lods
fimull
je
jb
stos
sub
daa
leave
nop
push
movsb
into
and
pop
scas
stos
mov
and
mov
repnz
dec
jns
mov
sahf
lahf
adc
sub
lods
add
jae
les
inc
lret
mov
loopne
loope
test
mov
pop
loopne
shl
jnp
sbb
cmp
loopne
cmc
push
ja
push
stc
add
mov
mov
inc
dec
or
clc
mov
ss
les
adc
scas
fists
jp
addr16
mov
jnp
fistps
jmp
out
lock
dec
loopne
das
addr16
icebp
dec
das
or
shlb
fwait
push
in
jg
sarb
mov
loope
mov
add
push
push
sbb
je
lea
mov
mov
loopne
repnz
leave
mov
pop
cmc
fidivs
jp
lods
bnd
int3
int
mov
sbb
push
pop
sbb
push
sbb
lds
push
push
push
jmp
sbbb
out
mov
fsubrl
mov
adc
rep
inc
ror
incl
add
xor
dec
mov
adc
inc
mov
mov
data16
rorb
inc
or
mov
pop
lret
sti
das
rcr
jbe
leave
in
fucomi
jmp
and
leave
push
orb
xor
roll
inc
mov
dec
mov
leave
stc
mov
pop
mov
push
sbb
ror
pusha
cwtl
xchg
sub
daa
adc
cmp
rcrb
ret
test
lret
inc
dec
jb
inc
push
scas
or
sub
repnz
pop
pop
push
fmul
loope
ds
jmp
push
es
inc
ffreep
jns
mov
pop
add
pop
cmp
add
fwait
mov
lcall
mov
cli
or
fsubr
push
jle
inc
cmp
add
sbb
cmp
add
imul
insl
cld
add
xchg
cmp
mov
pushf
cli
cltd
push
into
dec
sbb
mov
xorl
popf
sub
sbb
cmpsl
aaa
std
push
push
ret
xor
sub
cmp
ret
and
push
test
sub
bound
stc
cli
les
jmp
popf
popf
push
sbb
mov
ret
jl
dec
or
sbb
shl
test
cli
mov
jp
lds
or
stos
push
cmc
jg
xchg
jbe
jae
and
into
or
into
addb
in
fcomip
adc
mov
js
pop
fstpt
lcall
xchg
icebp
fld
mov
cmc
sub
sub
mov
cltd
nop
xchg
mov
cmp
mov
popf
dec
repnz
xchg
mov
ja
mov
mov
adc
arpl
pusha
int3
cmpsl
enter
push
aam
add
inc
mov
xchg
xchg
mov
mov
push
lods
outsl
lds
lahf
movsl
xchg
push
dec
test
inc
aam
cwtl
mov
xor
lahf
daa
push
adc
rcrb
lret
lock
jl
jbe
cmpsb
stc
lcall
dec
lds
and
clc
cmpsl
sahf
lret
ror
add
or
js
jae
mov
scas
es
js
lret
sbb
es
pop
jne
sub
pop
push
mov
icebp
movsl
test
pusha
imul
mov
fnstsw
sub
mov
inc
shrl
dec
test
push
mov
xor
fcmovb
sahf
ss
mov
mov
push
lret
lea
cmpsl
and
leave
and
imul
add
push
mov
pop
imul
test
mov
pusha
into
mov
int3
jp
lcall
ret
push
mov
lret
leave
jb
push
das
addr16
adc
aam
test
cli
jbe
xchg
cmpsl
mov
bound
and
pop
sub
out
mov
out
cmp
add
jae
out
lods
cmpsb
insl
popa
test
ficomps
inc
jmp
sbb
lds
rcl
leave
lea
repnz
push
add
shrl
mov
xor
pop
subb
outsl
loopne
imul
dec
jnp
mov
adc
or
in
jae
cmpsl
int3
stc
mov
dec
pop
cmp
cmp
mov
pop
or
jle
mov
cmpsb
fcmovne
addr16
dec
lret
sti
inc
dec
loopne
lods
inc
cmpl
es
and
dec
cltd
jg
ds
loopne
xchg
inc
lret
les
ljmp
push
mov
push
inc
mov
mov
lret
add
or
rclb
or
adc
inc
stos
xor
mov
mov
cmp
in
les
cmp
inc
mov
mov
jle
or
outsb
es
mov
ror
mov
add
nop
inc
or
sti
push
add
fs
fsubrl
inc
xor
mov
jp
mov
dec
add
pushf
icebp
pusha
mov
lret
dec
mov
pop
pushf
int
xor
loopne
dec
push
inc
jp
cmp
jp
dec
adc
data16
sarl
lods
lods
pop
pop
sbb
jl
pop
lret
rcr
mov
sbb
add
sub
mov
inc
or
movl
inc
popf
stc
sub
imul
shl
sub
mov
bound
stos
rorl
fmul
sub
push
pushf
jne
popf
inc
test
jge
pop
repz
pop
sbb
adcl
lods
jo
ret
jbe
jl
push
test
movl
cltd
pusha
adc
adc
adc
adc
xor
inc
ja
dec
dec
push
xchg
das
jno
rcrl
in
pop
cltd
cs
or
jge
dec
inc
jnp
lea
cli
xchg
lds
add
mov
sbb
lds
mov
jp
pop
sbb
mov
insl
lcall
mov
test
into
orb
ret
dec
push
sbb
dec
in
add
ret
roll
adc
mov
mov
out
and
cltd
leave
in
dec
adc
mov
mov
rolb
enter
mov
mov
dec
jns
push
and
shrl
sbb
clc
mov
mov
mov
pop
pusha
jb
mov
into
pop
cli
pop
dec
sbbl
jb
xchg
inc
inc
pop
mov
mov
sbb
scas
in
cld
mov
mov
push
inc
or
mov
imul
in
jnp
pop
ret
add
pop
enter
lret
in
cli
mov
mov
mov
in
push
and
flds
leave
sbb
test
inc
add
aas
ljmp
test
mov
pop
movl
sub
pop
jns
or
ja
aad
repz
stos
jmp
shll
or
cmp
and
sub
fisttpl
loope
out
loope
adc
or
addr16
jo
ficomps
lret
adc
cltd
in
ss
mov
js
je
idivl
push
xor
stos
mov
cmp
js
paddw
shufps
or
lret
or
push
and
or
cld
push
sub
add
sbb
fidivl
jle
pushf
fiadds
push
mov
adc
sbb
filds
fildl
pop
int3
shll
mov
lock
leave
fdivrp
push
daa
lods
outsl
out
scas
dec
xor
pushf
stos
adc
lds
test
mov
lods
sbb
shll
mov
pop
push
cli
lcall
dec
xchg
jmp
add
jbe
loopne
shlb
ret
mov
cli
adc
jns
cmp
mov
rcrl
insb
test
xor
xchg
mov
xchg
sbb
cmpsl
aam
xlat
add
cmpsb
std
mov
in
cmp
mov
mov
lods
fsubs
and
pop
add
sbb
push
fiadds
adc
clc
xchg
repnz
sbb
mov
pop
les
cmpsb
aas
test
or
add
sub
not
adc
jl
sti
js
test
lcall
xchg
mov
inc
mov
mov
mov
jl
lock
scas
sub
jno
mov
cli
gs
mov
movsb
inc
popf
jbe
fmul
add
outsb
pop
fsqrt
mov
jbe
add
lret
jb
push
stos
inc
addr16
lea
xlat
std
and
jns
fmuls
xlat
dec
repnz
sub
fisubrs
std
flds
les
push
jp
repz
mov
insb
in
stos
mov
dec
loop
mov
fcompl
popa
add
pop
movsl
ret
xchg
push
dec
ds
in
add
ret
dec
inc
clc
aam
push
dec
leave
iret
push
lcall
in
jmp
test
jns
leave
dec
fs
cld
jns
sub
lahf
pop
mov
push
or
sbb
dec
fcmovb
lods
and
fbld
sub
adc
cld
inc
add
call
mov
mov
cmpsl
gs
icebp
ret
and
add
addl
int3
in
fucomi
iret
mov
mov
inc
test
loopne
sbb
sbb
popf
inc
inc
lods
cld
add
jl
mov
pop
test
sti
mov
aas
repnz
hlt
lods
int
and
pop
fcmovnbe
test
es
fwait
push
stc
cmp
pop
mov
pop
mov
stos
ret
ficoms
pushl
jne
sub
push
scas
ljmp
sti
ret
pop
mov
cmpb
cmp
jp
inc
mov
add
arpl
ja
pop
fnclex
fidivrs
push
xchg
inc
sub
shrb
inc
loopne
cli
pushf
cmp
shlb
pop
lret
jg
shll
jae
cmc
push
bound
dec
mov
inc
and
inc
xor
enter
nop
jb
rorb
pop
cmpsl
jns
mov
sbb
aas
std
inc
icebp
mov
xlat
rclb
sbb
jno
lods
push
vmwrite
jg
adcb
add
aam
leave
mov
add
stc
pop
fstl
sub
mov
ds
aam
dec
inc
mov
fsts
cwtl
jg
ror
and
cmp
xchg
jo
movsb
loope
pop
arpl
sub
sti
inc
lea
push
andnps
mov
aad
or
roll
int3
sahf
sbb
mov
cmpl
push
cli
popf
inc
shll
cmpsl
push
push
jle
jnp
repnz
into
ret
daa
dec
iret
test
add
or
fldt
push
in
adc
movl
lret
pusha
inc
push
dec
pop
push
mov
nop
dec
xchg
pop
jb
stc
jne
lret
pop
or
int3
popf
cmpsl
xlat
push
cwtl
int
push
insl
popa
pop
and
lods
mov
mov
retw
mov
push
clc
repnz
adc
lcall
mov
shll
in
cli
or
mov
dec
jmp
cmp
fs
std
cmpb
pop
lret
test
pushf
mov
push
xchg
repnz
stc
lret
rol
shl
sub
mov
sub
lock
mov
cmp
fneni(8087
cld
sub
mov
mov
add
outsl
jl
add
sahf
leave
mov
lahf
and
pop
jb
adc
ret
push
mov
and
lods
sbb
adc
inc
sarl
xchg
sub
and
ret
mov
pop
cltd
xchg
and
fsubr
push
daa
pop
rcrl
jle
loopne
in
movl
test
push
sub
or
leave
inc
add
adc
jl
test
push
cmp
push
add
ret
cmp
pop
int3
inc
inc
test
sti
lcall
aaa
mov
dec
mov
loope
jns
inc
in
push
add
jns
mov
imul
push
and
xor
fistl
push
lret
jns
outsb
lret
adc
xor
push
ret
addr16
enter
mov
cs
fs
out
push
jno
les
dec
lds
xchg
ret
cltd
cmp
and
mov
push
sbb
pop
sbb
cs
push
push
adc
push
add
rolb
movsb
inc
xchg
roll
gs
inc
inc
push
jno
scas
jp
sub
lret
call
push
test
xor
xor
jnp
dec
dec
mov
arpl
enter
scas
xor
testl
and
xchg
sbb
or
jbe
aam
test
flds
pop
pushf
mov
sbb
test
dec
imul
ja
jae
pusha
lods
stc
xchg
dec
mov
pop
pusha
bswap
jmp
inc
cld
sbb
and
add
ljmp
add
xor
xchg
movsb
mov
adc
leave
roll
sbb
jnp
lcall
mov
fcomps
push
fisubrl
lret
cwtl
cmp
inc
mov
inc
cmpsl
movsl
or
fistl
hlt
lret
xor
lret
fiadds
mov
imul
cli
push
enter
sub
stos
ret
and
fld1
push
cli
mov
cmp
sbb
fcomps
rorl
inc
in
pop
sub
fdivs
cmp
and
fistpl
shl
in
sbb
pop
push
mov
cld
cmp
or
dec
pushf
cmp
xchg
imul
xor
in
and
pop
sbb
sbb
mov
es
loopne
or
xchg
aam
xchg
pop
xchg
popf
mov
push
cmp
xlat
in
mov
xor
sub
mov
pop
lret
dec
mov
mov
inc
in
cwtl
sbb
xchg
inc
in
orl
fstps
test
filds
dec
jns
cli
repnz
xchg
dec
cli
cli
jns
cmp
mov
loope
negb
xor
aad
rolb
int3
fistpl
inc
mov
addr16
cwtl
into
repnz
inc
jo
pop
imul
outsb
dec
cli
insb
add
int3
pop
mov
movb
mov
mov
daa
pop
arpl
xchg
sub
adc
mov
aaa
jo
inc
mov
inc
retw
sbb
pusha
pop
or
jl
mov
cltd
fisttpl
insb
cli
xlat
jge
arpl
sbb
cmpsl
inc
mov
add
aad
insb
xlat
mov
cwtl
nop
or
aaa
enter
aad
jo
imull
js
pusha
dec
push
decb
mov
or
fstpt
iret
call
pop
push
insb
mov
inc
loopne
inc
addr16
sbbl
in
push
rorl
pop
xchg
or
filds
dec
jnp
or
xlat
adc
cltd
add
adc
iret
pop
mov
orb
mov
rol
xchg
jle
add
xchg
sub
adc
popa
or
jg
ja
mov
inc
mov
aas
cwtl
mov
sbb
push
add
out
repnz
sahf
pop
mov
std
dec
into
push
ds
cmp
pushf
jae
dec
test
jns
mov
repnz
sbb
sub
flds
popa
and
dec
decb
sbb
dec
mov
mov
mov
fmul
std
pop
arpl
push
adc
cmp
lret
sbb
jns
mov
cmp
add
ret
in
jns
lret
mov
ret
call
mov
sbb
pusha
adc
cwtl
into
stos
jl,pt
lret
dec
nop
loopne
jp
pusha
mov
xchg
dec
cmp
enter
dec
jne
or
aad
sbb
movsb
add
inc
stos
cwtl
sbb
pop
stc
pushf
fcomps
cmp
mov
fildll
jno
rorl
mov
mov
pop
andb
mov
in
cmpl
int3
sub
sar
lret
enter
inc
add
adc
jnp
lods
fldt
pop
sub
insb
cmovns
adc
sbb
inc
lret
xlat
lcall
cld
mov
lods
push
xor
dec
loope
inc
shlb
jbe
adc
aam
lret
mov
loopne
push
sub
sbb
stc
inc
addr16
cld
sub
lret
leave
pop
inc
enter
das
cltd
xchg
jmp
cmp
push
ret
adc
xor
fadds
mov
push
movsl
clc
ljmp
mov
mov
popl
push
xchg
xor
push
xorb
out
pusha
cmpsb
rorl
subb
adc
and
fnstenv
adc
sbb
xchg
shlb
outsl
mov
leave
adc
lahf
mov
and
sub
stos
cmc
outsl
inc
mov
jo
sub
movl
lret
inc
inc
add
pop
sbb
adc
jbe
les
mov
or
ret
mov
fwait
lret
ret
in
pop
mov
adc
repz
mov
xchg
push
rorl
jmp
jl
cmp
xchg
dec
jns
shrb
push
aaa
jmp
sbb
out
jnp
mov
push
mov
or
jmp
jl
mov
inc
cmpsl
sbb
mov
mov
mov
pop
rorb
push
inc
dec
or
push
stos
mov
sbb
push
mov
rcl
in
div
aam
cmpsb
scas
ds
ljmp
gs
lcall
sub
addr16
leave
cmp
lret
add
lock
lods
stos
dec
shll
pushf
out
test
aad
fstpt
rcrl
cmp
imul
in
test
push
mov
iret
loope
xor
loopne
xor
sbb
inc
mov
and
or
sub
aad
repz
inc
sbb
scas
enter
nopl
aas
ficompl
int
fistps
shrb
rorl
test
cmp
jge
sbb
push
pop
mov
cmpsl
mov
mov
push
popf
push
cwtl
fwait
sub
adc
rcrb
sub
lea
jp
clc
incl
nop
scas
nop
ret
mov
shlb
push
insb
push
int
rclb
sub
push
inc
imul
push
leave
enter
sub
and
adc
sbbl
enter
pop
out
js
xlat
or
push
push
call
mov
mov
into
ror
addr16
pop
inc
dec
aam
xchg
imul
cs
stc
xor
rcr
stos
fstps
gs
in
cmp
push
int3
aad
jp
inc
shll
sbb
push
shll
pushf
jae
test
mov
mov
iret
insb
lret
lods
aad
icebp
add
pusha
and
repz
shl
mov
rcrl
lods
arpl
in
xchg
sub
push
lret
leave
push
loopne
in
nop
dec
mov
jp
adc
or
dec
pop
mov
or
or
fcoms
outsl
or
adc
mov
sti
mov
stc
adc
mov
inc
cld
punpckldq
sub
lret
push
icebp
pop
out
cmp
cltd
or
fsubrl
cmp
fwait
test
sub
cld
popa
fidivrs
aam
dec
adc
push
mov
or
out
lds
aaa
jp
push
pusha
dec
sbb
aas
mov
xchg
mov
mov
xor
jg
pop
mov
iret
xchg
movsb
ret
inc
cmpsl
xor
shll
daa
out
sarb
pop
jmp
pushf
icebp
xchg
lcall
xor
lds
jbe
cmp
xor
enter
dec
lret
jl
mov
push
cmp
mov
rorl
mov
mov
sbb
subb
mov
out
shll
ret
cli
lods
cmp
cmpsl
dec
pop
or
cmp
es
sub
imul
mov
jecxz
pushf
daa
fwait
xchg
gs
dec
dec
and
pop
cmp
movsl
test
and
iret
cltd
cmp
sbb
cmp
rol
sbb
xchg
es
ret
jo
and
lods
mov
mov
push
addr16
cmpsb
movsl
dec
faddp
dec
sbb
pop
aad
cmp
inc
les
cmp
dec
daa
lret
pop
ss
cmp
sbb
push
and
data16
jbe
test
repnz
xchg
movsl
adc
rcrl
in
mov
lret
adc
ds
adc
js
mov
push
add
jl
cmp
xchg
jns
cmc
repnz
dec
and
push
push
ds
jb
and
adc
movsl
aam
arpl
iret
cmp
mov
mov
repnz
std
call
out
or
jp
cld
test
pop
xchg
mov
daa
mov
jnp
iret
mov
cmp
clc
lds
shlb
lcall
jo
stc
pop
fsubp
mov
sbb
mov
mov
lds
popf
adc
outsb
pushf
xchg
cld
pop
mov
mov
pop
imul
or
inc
mov
mov
jl
inc
mov
jno
ds
bound
in
addr16
xchg
mov
xchg
in
add
sub
fwait
jp
out
sub
jb
cmp
and
lcall
shrl
mov
xchg
or
push
jl
xor
cmp
scas
push
ret
pop
out
mov
fisubrl
fwait
jl
sti
pop
rcrl
push
scas
cmpsb
shll
mov
mov
adc
das
stos
xchg
mov
xchg
inc
or
aam
xchg
dec
mov
lret
imul
mov
dec
ret
sahf
cmpsl
or
mov
addr16
xor
lret
stos
cltd
xlat
sub
cli
loopne
jp
popf
fwait
pop
push
fildl
xchg
lock
ret
jno
leave
cmpsl
fists
jbe
addr16
xchg
inc
jge
and
lret
jg
std
push
or
es
fs
add
and
lods
ror
shrl
mov
inc
sbb
dec
mov
fdivl
lret
inc
mov
and
ljmp
hlt
xchg
jns
inc
push
movsb
add
or
lods
add
arpl
and
xchg
aaa
loope
inc
inc
dec
addb
cmp
push
rcrb
int
adc
cmp
addr16
imul
pop
mov
dec
popa
or
pusha
fdivrs
sbb
xchg
mov
push
add
fs
popa
dec
dec
push
pop
xchg
mov
xor
add
gs
sub
addr16
mov
lret
xor
xor
gs
gs
cli
int3
fld
shrb
xchg
ret
js
push
addr16
and
fisubrs
arpl
or
ret
cmp
xchg
push
or
adc
push
pop
scas
cmpsb
inc
mov
fistl
xlat
sub
sbb
xchg
jmp
out
shl
xchg
push
cli
mov
loopne
loopne
aam
shrb
inc
xchg
jnp
adc
cmp
xchg
mov
in
cmp
cwtl
or
pop
mov
jnp
ljmp
inc
cmp
lods
enter
jns
inc
push
dec
faddl
insb
mov
orl
cmp
sbb
mov
jle
lret
cmp
mov
test
loop
rclb
outsb
pushl
adc
mov
leave
add
jmp
cs
sub
push
sub
call
add
lret
inc
pushf
subl
push
push
ja
std
mov
cmp
in
cmp
in
movsl
dec
int
inc
loopne
sarl
js
sub
es
rcrb
mov
mov
lods
les
jmp
dec
gs
lret
mov
cmp
xchg
movsb
inc
or
icebp
jp
mov
inc
aam
mov
test
xor
inc
popa
stc
sub
sub
push
cld
mov
stc
sub
xchg
adc
stc
inc
sbb
mov
fstps
jl
mov
mov
les
jbe
fiaddl
mov
iret
out
xchg
sbb
lcall
imul
adc
add
in
leave
enter
inc
mov
push
cmp
push
mov
lcall
mov
push
lcall
mov
enter
shl
inc
stos
cmp
mov
lock
mov
test
mov
ret
mov
xchg
aam
inc
cli
pop
ret
sbb
lret
add
mull
sbb
aas
xor
cmp
xchg
je
mov
lcall
push
insb
mov
daa
cmc
sbb
shrl
mov
popf
adc
push
adc
call
dec
sub
cmc
cmp
and
stc
xor
shll
fnstsw
mov
dec
sbb
or
jnp
sub
enter
les
fsubr
outsl
mov
sub
rcl
jns
test
inc
stc
enter
jmp
pop
inc
push
lock
test
xchg
and
mov
out
jns
jl
and
stos
mov
std
dec
mov
fsts
xor
fistl
popf
xchg
mov
icebp
adc
jl
mov
cmp
jne
mov
xchg
xor
mov
icebp
adc
jne
jle
jge
iret
push
jns
xlat
scas
icebp
outsl
mov
inc
push
int3
mov
std
push
lahf
mov
stos
movsb
push
in
loope
mov
pop
imul
into
lods
mov
ljmp
inc
dec
clc
inc
dec
lret
xlat
lock
pop
sbb
push
fmul
pop
mov
sub
inc
lds
sbb
testb
cmp
std
cmp
cmp
inc
pop
jp
inc
jb
ds
dec
dec
jecxz
jb
dec
imul
int3
sahf
xchg
in
test
jb
push
jno
ret
push
mov
leave
xchg
or
cmp
clc
sbb
pop
xor
nop
pop
cmc
rcr
xor
adc
enter
cmp
enter
xchg
xor
cli
lcall
in
xor
pop
and
xchg
dec
mov
push
jp
sub
add
test
dec
es
jb
ljmp
adc
or
shl
xchg
sbb
or
cmp
and
dec
pop
loopne
pop
xor
xor
sbb
clc
pop
lret
popf
xchg
lds
aad
movsb
lret
in
rcrl
stc
loopne
jl
shll
dec
sub
imul
inc
add
inc
mov
xchg
dec
popf
enter
stc
rcll
jne
ret
push
push
sbb
mov
cmp
mov
sub
add
insb
shrl
jo
into
rdmsr
add
in
sbb
sub
adc
nop
push
pusha
outsl
push
test
test
mov
inc
jp
xchg
stc
push
push
or
lds
mov
xchg
cltd
push
jp
popf
and
scas
mov
jle
jecxz
gs
iret
out
mov
sbb
mov
sahf
cmpsl
sbbl
cmp
loopne
dec
mov
int3
sti
aas
xchg
fistpll
cmp
in
mov
cmc
loop
push
cs
pop
adc
mov
das
lahf
lret
nop
repz
hlt
fsubs
and
scas
roll
xchg
lds
fs
mov
inc
mov
insl
pop
fsts
push
mov
fs
fisttps
fsts
call
arpl
pop
mov
push
das
jp
mov
and
iret
push
add
sbb
and
cwtl
aam
arpl
xor
xor
mov
xorb
lcall
mov
fisttpll
movsl
out
push
jl
lds
roll
cmp
outsl
jl
sub
cmp
add
add
lds
jmp
rol
pop
mov
dec
xchg
sub
ljmp
ds
jnp
stos
sar
pop
addr16
xchg
in
pop
cmp
mov
ror
pushf
sub
pop
push
shll
dec
test
adc
jno
xchg
lods
rcrl
push
loope
lods
push
lods
sbb
pop
pop
loopne
int
shlb
fwait
popf
jl
jg
sbb
cmpsl
xor
mov
jp
jg
mov
dec
shlb
or
mov
mov
xchg
mov
dec
adc
in
loopne
jp
pop
cltd
inc
subl
lds
loopne
inc
sub
mov
jp
lret
fcompl
and
jnp
jl
pop
outsb
fnstsw
fs
push
and
and
roll
imul
shrb
xchg
daa
and
enter
rcl
iret
push
cmc
enter
into
pop
jecxz
repz
dec
into
mov
fwait
jae
xchg
push
ret
mov
ret
cmpsl
or
mov
fisubrs
xchg
sbb
add
ret
out
test
repz
inc
int3
js
jnp
cmp
add
movsb
mov
mov
mov
movsb
mov
aam
jmp
mov
push
sarl
icebp
movsb
push
inc
jmp
test
in
std
push
xor
push
rcrb
cmp
fdivrl
sti
xchg
leave
ret
mov
sar
push
mov
adc
shll
sub
push
ds
pop
in
add
loop
lcall
jp
pop
stos
fcomp
enter
stos
add
enter
aam
das
sbb
inc
loope
adc
jo
mov
mov
xor
lods
and
push
sarb
add
and
mov
inc
lcall
out
orb
or
aam
jp
adc
inc
dec
add
sub
xadd
pop
ljmp
popf
cmp
jl
lret
jle
dec
push
out
add
repnz
mov
jbe
push
ja
add
nop
mov
mov
xchg
cmc
imul
mov
stc
or
jl
inc
lea
in
pop
jne
rcl
cld
in
cmp
mov
mov
dec
loopne
xchg
addr16
int3
ret
out
jmp
sbb
sbbl
cli
shr
jecxz
dec
bnd
inc
cmp
fadd
sarl
mov
jg
xor
push
cld
or
rcr
fidivrl
jmp
stos
inc
and
xor
xor
and
xchg
lret
push
xchg
cld
xor
dec
push
pop
xor
fcmovnbe
pop
out
mov
xchg
xor
popf
push
in
or
into
cmp
jmp
cltd
xorl
mov
cmp
aad
inc
shrl
jl
sbbl
xchg
icebp
loope
jecxz
andb
enter
int
scas
jg
cwtl
ficompl
push
jge
mov
sub
inc
pop
cwtl
add
inc
jecxz
adc
jmp
jmp
in
mov
and
pop
lock
mov
cli
in
outsl
adc
in
dec
jge
addr16
repz
scas
fs
into
mov
pop
xchg
jns
lcall
cld
xchg
xlat
mov
int
ror
xchg
cli
add
xor
jge
mov
xor
push
iret
sub
test
adc
fdivs
cmp
lods
insl
pop
es
rorb
in
out
sbb
icebp
iret
and
jmp
and
popf
dec
add
lret
push
out
nop
adc
xchg
repnz
pop
inc
jg
inc
pop
fs
cwtl
cmp
pop
jg
push
repnz
ss
xor
fisttps
ljmp
xlat
ja
inc
xor
mov
imul
js
mov
jl
dec
int3
mov
scas
rorb
fs
xchg
dec
test
push
jl
in
shll
mov
int
gs
fcmovb
jl
push
imul
pop
movsb
ret
xor
fbld
mov
cld
xchg
lds
jne
xchg
pop
gs
stos
leave
or
dec
scas
sbb
imul
test
xchg
jecxz
inc
into
push
lods
mov
pop
and
les
in
fmull
mov
pusha
lret
nop
sbbl
ret
adc
push
cmpsb
outsb
inc
and
out
imul
adc
jge
mov
aas
mov
mov
test
out
push
inc
lods
repnz
lret
sbb
dec
jnp
dec
fadd
rorl
push
ret
ret
loopne
js
xchg
xor
xchg
cmp
mov
ds
xchg
and
pop
pushf
jb
xchg
clc
xor
sahf
or
mov
fcompl
cmp
in
pop
inc
sub
and
in
dec
cmp
enter
add
or
mov
mov
jmp
and
cli
adcb
ss
push
or
sbb
jns
mov
pop
in
cmp
out
lret
pop
repnz
rorl
repnz
je
cmp
push
movsl
enter
cmc
movsl
sub
loopne
mulb
in
xchg
mov
mov
sbb
popf
add
lcall
aaa
adc
cmp
lods
repnz
jb
sub
mov
lret
cmp
jecxz
sub
repnz
pop
nop
add
jp
js
shrl
das
push
jns
adc
pop
and
pop
dec
test
mov
mov
jmp
and
enter
cli
pop
mov
pop
mov
or
xchg
cmp
stc
mov
inc
dec
push
test
fldlg2
mov
push
adc
or
int3
add
popf
pop
and
clc
pop
lcall
lods
test
mov
arpl
mov
aam
mov
movb
stc
pop
sahf
mov
cmp
fadds
stc
incb
imul
add
xchg
fs
push
and
pop
adcl
out
popa
sbb
jecxz
or
jp
jp
mov
insl
xchg
fdivrl
lock
xchg
dec
int
rcrl
into
cltd
pop
loop
mov
cli
jecxz
test
in
or
movl
test
or
lods
lds
push
testb
nop
leave
gs
fnop
mov
mov
fsubrl
in
cltd
and
adc
mov
andb
mov
insb
lods
inc
loop
aas
jo
mov
dec
adc
pop
leave
sbbl
adc
pusha
sarb
rclb
adc
fcomps
xor
xchg
leave
cmpsb
jmp
sbb
js
cmp
inc
pop
mov
sbb
cmpsl
xchg
ss
pushf
mov
imul
mov
mov
mov
or
mov
push
or
dec
into
mov
cmp
cwtl
cmp
xlat
push
lcall
cmp
fwait
mov
fnstsw
jp
xchg
sbb
stc
mov
lcall
sub
mov
daa
sub
xchg
roll
cmp
adc
lcall
stc
std
ret
int3
outsl
aad
test
pop
cltd
mov
jne
ror
js
shrb
cmp
add
adc
pop
icebp
test
jp
cld
test
fldenv
and
dec
fisttpll
loopne
iret
or
add
stos
cld
repnz
fsubs
test
lret
mov
mov
jmp
add
enter
or
dec
and
xchg
inc
sub
ror
fldpi
jae
or
pop
dec
pop
jae
pop
cmpsl
out
sbb
jl
fcomps
or
mov
mov
test
xor
cld
pop
adc
pushf
addr16
das
in
pop
cmpsl
call
fcomp
or
lret
mov
and
and
fstps
jl
stc
mov
pop
lods
sbb
stc
leave
popf
jns
lds
daa
test
xchg
xor
js
inc
orb
sahf
subl
mov
lret
pop
aad
arpl
les
or
inc
xchg
push
jp
xchg
lcall
lret
subb
mov
mov
xchg
stos
xchg
jge
inc
cltd
xchg
cmpsl
cmp
imul
mov
adc
out
adc
lods
rorb
pop
cld
push
xchg
popf
xchg
push
sub
not
add
jecxz
push
mov
push
xlat
or
adc
mov
in
sbb
jb
fnstsw
jle
les
shr
and
adc
roll
iret
inc
shl
or
cltd
enter
pop
xor
js
lcall
pushf
je
add
je
stc
pop
addr16
pop
and
mov
sub
jecxz
sub
daa
lcall
test
lret
repz
lods
mov
gs
push
loopne
inc
adc
testl
fsts
rcll
test
das
mov
mov
sarb
repnz
popa
ret
lret
ja
leave
xor
leave
inc
fs
lahf
lret
push
pushw
enter
ficoms
mov
jo
test
adcl
addr16
and
leave
mov
pop
push
test
enter
stos
dec
lahf
lcall
lret
pop
call
xlat
lahf
enter
adc
fsubl
push
iret
xchg
jle
test
cmpsl
xor
aad
sbb
shl
sarb
xor
repz
mov
cld
dec
std
imul
cmp
inc
xor
sbb
shll
mov
fwait
push
andb
or
fwait
bound
sbb
mov
iret
push
push
mov
sub
xor
fstpt
pop
lds
sub
loopne
aad
mov
aam
shll
in
call
sbb
cmc
pop
ds
xchg
sub
fstl
rcl
enter
mov
push
aas
popf
icebp
repz
cwtl
push
jb
pop
push
xchg
out
add
sbb
adcb
enter
mov
xlat
lods
mov
popa
in
jnp
pop
jns
pop
test
stos
out
popa
les
inc
mov
mul
push
das
test
pop
out
xchg
mov
and
jle
data16
cmp
cmp
mov
cmp
inc
lret
addr16
xlat
aas
in
aad
jnp
jp
addr16
and
dec
test
push
out
mov
jecxz
xlat
cmp
jecxz
xor
out
test
js
xlat
and
pop
cmc
sarl
mov
cld
repnz
sub
mov
xor
outsb
sbb
cmp
add
xor
sub
dec
stc
lret
gs
add
stos
fsts
xchg
adc
jl
xchg
mov
call
and
js
in
out
mov
xchg
cmpsl
ss
pop
inc
inc
clc
xor
insb
push
sbb
fdivs
xlat
push
inc
insl
lret
dec
lcall
cli
xor
push
inc
mov
in
push
jle
xor
mov
lret
push
movsb
iret
push
xlat
adc
mov
adc
lds
mov
or
add
out
xor
pop
mov
bswap
add
aam
xor
lret
jnp
sub
movsb
lods
insl
sti
fidivl
sub
ljmp
popf
aas
test
repnz
enter
std
negb
jp
mov
pop
push
aam
sbb
or
repnz
fwait
jns
std
mov
mov
push
loope
rcll
dec
daa
mov
and
mov
movsb
push
int3
mov
sti
xchg
adc
loopne
iret
xor
mov
pop
or
dec
fidivrs
push
sbb
jne
mov
sub
mov
cld
sub
push
cmp
scas
minpd
or
push
or
jge
mov
pop
rolb
adc
push
addr16
push
mov
popf
inc
and
mov
imul
adc
lods
cmpsl
sti
push
pushf
xor
pop
cmpsl
cmpsl
jb
mov
lds
lcall
sahf
mov
mov
dec
jge
mov
sbb
cmp
imul
sar
bswap
shlb
or
mov
dec
add
mov
loope
shlb
fnstenv
pop
fdivl
mov
or
insb
push
xorl
sbb
faddl
mov
or
repz
sbb
shll
mov
xchg
notl
dec
sar
hlt
pop
inc
rclb
sbbl
cs
cmp
lds
mov
or
outsl
cmp
stos
cmpb
push
mov
sbb
aas
jo
fadds
add
add
ds
jb
dec
mov
movl
aas
pop
out
mov
test
push
shr
cwtl
xchg
dec
mov
dec
jmp
stc
or
jbe
sti
mov
sarb
add
loopne
cmp
mov
sti
mov
test
sbb
pop
ret
lods
mov
pop
movsl
insl
add
pop
lcall
bound
xchg
iret
mov
imul
push
cmpb
mov
jae
push
mov
push
push
std
and
push
ljmp
daa
mov
jmp
pusha
mov
sub
arpl
andb
dec
out
in
jle
out
stos
imulb
mov
movsbl
and
sti
icebp
pop
push
xchg
push
loope
cwtl
sbb
lahf
fidivrl
cltd
pop
shr
fmuls
cmp
xchg
or
sahf
xchg
fsts
lcall
sub
rcll
scas
gs
fisttpll
cmpb
add
jmp
jmp
xchg
inc
addr16
ret
jmp
add
mov
inc
jp
push
jmp
fsts
imul
fcoml
xchg
inc
je
xchg
test
adc
dec
mov
cltd
popa
or
fst
arpl
push
icebp
lds
xchg
xlat
inc
gs
iret
adc
cmc
inc
sub
sarl
mov
rorb
sbb
in
lcall
mov
sti
loope
in
push
cmp
sbb
sbb
mov
mov
push
dec
movsb
scas
push
fildll
cld
adc
ss
ret
push
rorl
test
pop
in
mov
cmp
scas
inc
jg
scas
jns
cmp
call
inc
test
dec
pop
sub
dec
fdiv
mov
add
adc
lea
fidivs
jp
test
sub
data16
xchg
shrl
dec
push
mov
xchg
or
fldenv
cmpsb
add
add
pop
inc
ja
shll
les
push
sbb
jecxz
outsl
or
ljmp
jl
mov
dec
adc
push
stc
pop
add
pushf
jle
inc
add
loopne
mov
jl
adc
add
adc
mov
hlt
mov
lods
out
jmp
les
gs
aas
int
imul
xchg
ret
inc
aam
shll
xor
loopne
sub
xchg
and
mov
testl
sub
dec
movl
movsl
inc
sub
sti
mov
ret
jp
mov
lods
xor
call
insb
xor
jl
push
cmp
cmp
mov
mov
cmpsb
mov
adc
add
inc
lret
and
add
dec
lods
or
loopne
rclb
push
pusha
push
cmp
pusha
ds
into
push
or
fwait
cwtl
mov
nop
fdivrp
das
imul
and
outsb
jnp
jnp
add
testl
push
fisubs
shr
lcall
ret
out
fwait
orl
push
fcomps
pop
fimuls
mov
sub
lock
mov
push
pop
cmp
jp
pop
cli
lock
push
inc
pop
mov
add
mov
jbe
movsb
repnz
pop
sbb
outsb
and
sub
cltd
roll
cld
outsl
in
outsb
push
aad
push
cmp
mov
in
add
loopne
cltd
mov
pop
dec
and
mov
sbb
push
into
and
mov
mov
push
dec
int
sub
daa
push
mov
push
out
movsl
pusha
or
loop
push
sti
sub
mov
mov
cmpsl
dec
push
sub
push
pop
push
mov
sub
dec
adc
popf
push
push
repnz
shl
push
dec
imulb
movsl
jbe
jb
push
into
dec
add
out
clc
jbe
sub
popf
ds
jmp
pop
cld
fxch
sti
movsb
sarb
mov
ror
lods
adc
insl
aad
mov
adc
mov
xor
or
aad
cmp
cmp
mov
jne
mov
imul
pop
cmp
mov
mov
sahf
lret
test
pop
jp
ja
mov
fisttpl
mov
mov
jno
out
fisttpl
pop
mov
std
pop
xchg
fcomp
pop
fs
ret
xchg
aam
out
push
sub
or
push
aas
dec
lods
sub
jl
pop
sti
jbe
mov
fistpll
or
jl
add
jae
cmpsl
xchg
int3
loopne
sub
clc
xchg
int
pop
add
mov
dec
popf
inc
push
ret
xor
cld
lret
aad
mov
insl
sbb
add
push
fidivrs
icebp
or
pop
push
inc
mul
add
inc
fsts
sbb
stos
pop
ret
outsl
mov
pop
aam
adc
sbb
ss
insb
cmp
movsl
testb
xchg
das
mov
rcrb
pop
fldt
jl
adc
int3
sub
mov
add
or
adcb
sub
int
push
int3
lods
shl
pop
or
mov
sti
xchg
jmp
sbb
xchg
es
or
mov
push
test
ss
mov
xchg
iret
iret
ljmp
popa
aam
enter
stc
daa
mov
aad
in
shll
pop
fmuls
subb
push
nop
jle
xor
sub
pop
mov
mov
dec
iret
or
xchg
xor
sahf
sbbl
pop
mov
leave
mov
aam
adc
popf
and
sti
jl
mov
int3
cltd
flds
rcr
test
repz
imul
push
fstpt
sbb
sub
push
fiadds
mov
lret
in
gs
fst
jb
push
jg
cld
nop
addr16
sbb
dec
rcrb
push
push
sti
sbb
cmp
jmp
sahf
jo
lcall
push
loop
jnp
es
sar
pop
jmp
xor
lea
mov
pop
dec
adcb
orl
fmull
pop
pusha
fistpl
arpl
xor
test
stc
jp
mov
inc
test
adc
xchg
enter
leavew
notl
shll
sti
adc
test
adc
cmp
mov
orl
sub
mov
mov
mov
push
stos
ds
fstpl
sub
sbb
push
cmp
mov
inc
mov
xchg
push
lds
jne
test
jecxz
cld
adc
pop
xor
push
push
lods
lods
pop
popa
mov
pop
add
outsb
pop
cmp
nop
lds
test
jmp
sbb
out
lret
pop
jl
mov
jecxz
pop
cmc
sub
xor
int3
or
push
mov
insb
pop
jb
lret
sbbl
sub
xor
icebp
imul
jg
dec
jp
stos
xor
stc
arpl
add
cmc
lahf
mov
sahf
xchg
mov
mov
dec
jo
inc
add
jb
xchg
cmpsl
les
sbb
or
cmp
push
cli
mov
jns
outsl
ret
rolb
ret
add
ja
divb
jge
scas
cmpsl
js
push
push
sbb
add
mov
bswap
adc
dec
inc
jle
test
pushf
dec
cltd
testb
cmp
bound
std
dec
adc
mov
hlt
mov
arpl
push
subl
clc
sti
jne
jbe
xorb
ret
movsl
stc
loopne
push
pop
adc
lds
test
push
fidivrs
lret
lcall
enter
loop
rcl
enter
inc
gs
fidivrs
push
dec
xchg
xchg
fdivp
test
scas
xchg
shrl
sbb
inc
push
bound
jp
cwtl
or
mov
ja
in
add
fisubs
xor
xchg
rolb
aaa
mov
ficomps
pop
daa
aaa
imul
int3
ret
ljmp
inc
push
insl
sti
les
and
stc
jecxz
out
fcmovnu
and
cmc
push
fmul
nop
sbb
xlat
rorb
lock
pop
int3
push
add
cld
repz
mov
dec
mov
dec
dec
pop
mov
cmp
or
mov
push
pop
mov
aad
xor
jne
xor
insl
in
or
pop
ret
or
inc
int3
in
imul
pop
pop
jae
test
cwtl
or
lea
icebp
ret
mov
sub
test
mov
into
xchg
dec
jae
icebp
stos
inc
into
dec
jne
shlb
testl
xchg
jmp
adc
ds
jbe
shr
mov
jmp
xlat
loopne
idivl
leave
mov
jbe
dec
mov
jbe
xchg
cs
lods
cwtl
pop
push
ljmp
mov
push
add
mov
xchg
enter
push
clc
push
pop
mov
xchg
imul
mov
pop
cs
out
test
subl
mov
sbb
jl
lret
imul
arpl
rcrl
sbb
mov
outsl
mov
mov
mov
test
nop
pop
mov
insl
fdivs
mov
xchg
sub
inc
adc
pushf
stc
test
xlat
pop
cli
stos
mov
scas
mov
lcall
sub
mov
popa
sbb
push
out
inc
xchg
lret
mov
call
xchg
mov
js
mov
imul
in
add
ret
das
pushf
aam
jg
int3
adc
jcxz
jmp
cmp
xor
mov
and
int3
stos
cltd
xlat
cmp
lret
fstps
cmpsb
arpl
xchg
push
insb
je
pop
inc
push
push
lods
push
pop
sti
cwtl
pop
mov
in
sti
lds
jp
jge
jge
xor
mov
repnz
mov
outsb
or
xor
sti
mov
pushf
inc
lret
inc
lods
push
bound
push
les
les
ret
mov
and
mov
shl
lods
mov
out
push
lods
adc
les
repnz
sar
inc
call
arpl
addr16
lgs
mov
ja
cld
cmpsl
dec
rol
leave
mov
addl
dec
aas
lea
int3
xchg
mov
lock
les
aad
or
ds
xchg
cmp
lcall
jb
adc
cmpsb
and
shrb
mov
inc
push
scas
jne
lahf
inc
leave
or
push
jne
test
xchg
jne
pop
scas
in
scas
adc
arpl
paddw
pop
push
xchg
add
in
int3
ret
mov
cwtl
and
or
pushf
mov
jmp
sbb
or
pop
lret
push
push
movb
insb
or
test
mov
push
das
and
std
aam
add
push
filds
push
cmp
dec
sbb
adc
jl
adc
sub
pop
sub
aad
cmp
push
sbb
or
dec
sbb
adcl
les
dec
sbb
pop
arpl
nop
fstps
and
pop
xchg
pusha
ss
push
mov
popf
inc
pushf
mov
cld
into
pop
inc
inc
addr16
outsb
xchg
sub
ja,pn
xor
mov
mov
out
outsb
cmpb
jnp
leave
pop
fstl
mov
dec
xchg
and
or
cmp
bound
jns
subl
test
rorl
pop
in
xchg
inc
lret
test
add
adc
pop
sub
add
mov
pusha
inc
fnstenv
pop
sarl
cld
cwtl
pop
rol
pop
mov
xlat
int
mov
mov
mov
out
cwtl
inc
ss
lret
jb
clc
loop
ret
push
mov
sti
ljmp
icebp
je
dec
add
inc
xchg
cli
jae
or
inc
stc
in
cmp
fnsave
imul
xor
pop
arpl
ficoms
mov
jp
or
cmp
push
fneni(8087
decb
mov
and
pop
xchg
dec
in
and
popf
or
mov
inc
dec
imul
nop
stc
fld
push
xor
popf
mov
xchg
hlt
mov
jnp
mov
cmp
cmpsl
call
mov
test
cli
in
shll
pop
sub
lret
out
sbb
add
or
sarl
popf
or
repz
pop
inc
push
lret
js
mov
loopne
sbb
inc
inc
mov
jnp
jb
xchg
dec
mov
pop
pop
out
in
bound
insb
mov
stc
aam
mov
inc
adc
or
inc
pusha
and
sarl
dec
test
dec
push
adc
popf
pusha
outsl
adc
sbb
jb
push
jnp
pushf
xor
popf
jns
and
out
push
pop
xor
iret
imul
xor
sarl
mov
popf
rolb
inc
mov
cmpb
addr16
pop
jno
or
cmp
shr
movsb
xlat
inc
cmp
push
cmp
mov
pop
or
sbb
arpl
push
sbb
pop
shll
push
mov
pop
leave
jecxz
add
mov
lret
cld
push
mov
mov
push
inc
ret
cmp
test
pop
aam
xchg
jmp
inc
repz
lods
xchg
aam
mov
or
cmp
stos
call
adc
scas
mov
sbb
sub
aas
mov
push
jecxz
pop
mov
cli
adc
xchg
iret
or
mov
pop
mov
push
repnz
fiadds
mov
jmp
mov
or
xchg
sub
mov
insb
sub
adc
lods
cmpsl
jp
sbb
cmp
scas
xor
add
or
std
test
adc
lods
push
test
movl
sub
inc
nop
cld
mov
xor
int3
lcall
cld
stc
pop
cli
hlt
inc
sbb
jb
cld
rcll
push
and
cli
inc
imul
rolb
dec
lods
xchg
mov
sbb
stos
mov
sbb
adc
in
push
js
out
push
mov
enter
inc
fcmovbe
sbb
popa
mov
shll
sbb
push
ds
lret
mov
sbb
adc
dec
mov
xlat
mov
push
stc
adc
sarb
jl
rcr
jp
sbb
sub
mov
xchg
cwtl
xchg
inc
idivl
dec
pop
fs
adc
or
cmp
ja
or
gs
cli
aas
dec
lret
call
and
cwtl
cmpsl
clc
cld
clc
mov
rcll
rcll
adc
jns
mov
mov
mov
ljmpw
dec
mov
int3
lret
and
stc
jmp
jmp
pmaddwd
das
and
ds
fimuls
iret
push
push
or
add
test
int
into
dec
lret
adc
xor
lret
stos
push
lret
ss
dec
and
mov
cmpsl
repz
sbb
test
gs
aam
cmpxchg
and
enter
test
jl
ljmp
std
in
push
jo
ret
adc
cltd
notb
mov
jne
xor
arpl
scas
mov
mov
sub
jns
sub
fwait
push
ret
les
inc
dec
ret
cmp
sarl
and
test
pushf
mov
clc
faddl
movsb
iret
mov
inc
or
and
cmp
aaa
addl
pop
in
mov
or
sti
ljmp
sbb
dec
push
imul
fxch
test
adc
out
je
pop
push
adc
push
push
into
out
push
shrl
repnz
pop
fistps
xchg
sar
pop
cli
cltd
loopne
cmp
cwtl
fstps
pop
or
rorl
dec
xchg
fbld
adc
sahf
or
out
xlat
cmp
out
inc
adc
shrl
inc
bound
movsb
or
dec
cmpsl
cli
adc
add
test
adc
out
xorb
aas
cwtl
push
adcb
loopne
pop
dec
mov
arpl
add
out
js
loope
imul
inc
add
aaa
lea
jl
pop
ret
dec
iret
fwait
xor
shlb
pop
fdivr
mov
or
xlat
pop
xlat
or
mov
cwtl
push
pusha
adc
jbe
mov
dec
mov
stc
dec
or
jmp
sbb
in
xchg
push
sbb
push
sub
dec
test
out
inc
pop
mov
cltd
mov
rcrl
sub
and
or
xchg
popa
popf
lods
mov
iret
cmp
into
std
addl
cmp
lret
pusha
rorb
mov
insl
sahf
arpl
push
nop
cmpsl
paddw
cld
push
lods
add
jnp
test
iret
negb
repz
mov
mov
call
xchg
push
mov
fwait
popl
dec
in
into
aam
imul
ljmp
and
adc
sub
neg
xor
popf
cli
or
lods
or
iret
std
outsl
xchg
adc
test
inc
fmul
leave
lret
divb
into
lods
pop
rcl
jp
subb
pusha
push
jnp
loopne
jp
push
pop
aad
das
dec
sbb
inc
add
fnstsw
dec
push
fnstenv
mov
mov
loopne
push
dec
adc
sub
mov
add
negb
jmp
sub
rolb
js
iret
lahf
push
jmp
and
push
sbb
xor
insl
js
popa
inc
loope
pop
xchg
cli
mov
xchg
nop
femms
repz
sbb
or
sbb
cmpsb
xchg
dec
outsl
imul
mov
cmp
sbb
dec
inc
rolb
mov
cs
or
arpl
dec
call
les
test
cmc
jo
mov
loopne
addr16
xlat
insb
fldt
push
mov
jle
test
adc
xor
pop
mov
sarb
subb
fwait
into
xlat
adcb
lret
stc
mov
mov
popf
jge
imul
lea
mov
jg
cmp
imul
rcrl
imul
jns
pushf
jl
jne
pop
enter
or
cmp
or
adc
fmull
out
fisttpll
or
inc
popf
lcall
arpl
mov
push
mov
pop
lcall
stc
stos
outsl
aad
lds
pop
cwtl
push
or
sub
cmp
push
cmp
lret
aam
fwait
fs
push
aam
pop
mov
rolb
sub
push
cmpsb
mov
loop
loopne
std
mov
cld
jmp
out
dec
loop
sbbb
sub
cmp
lea
pusha
scas
ljmp
sbb
stc
hlt
pusha
rorl
and
rolb
cltd
cmpsl
sbb
inc
mov
test
sbb
mov
hlt
xchg
imul
mov
ds
out
cmpsl
jge
jge
sub
sti
movsb
sti
dec
out
mov
pusha
cmp
addr16
lret
enter
dec
les
jge
push
stc
jl
mov
sub
pop
iret
mov
push
pusha
pop
int
sub
pop
mov
adc
inc
stc
sbb
gs
cmp
pop
fstpt
dec
popf
push
pop
mov
push
xchg
enter
lcall
mov
jbe
inc
cli
xorl
cli
cli
leave
cld
pop
int3
cmp
push
lea
shll
popf
dec
lcall
dec
flds
int
pop
dec
cmp
or
fistpll
adc
int
mov
lahf
xchg
stc
test
or
or
mov
popf
cmp
decb
addr16
fidivrl
fld
subl
jne
sbb
mov
jns
testl
nop
dec
loop
mov
jno
aam
cwtl
xlat
xor
or
jle
pop
in
mov
sti
adc
les
mov
movnti
xlat
fsubs
lods
dec
pop
add
adcb
imul
cld
pop
ret
fisttps
cltd
push
rcll
adc
test
mov
lcall
xchg
inc
mov
inc
cltd
sub
sahf
fxch
jp
mov
xor
xchg
pop
cmp
mov
xchg
pop
mov
cmp
cmp
int
or
enter
pop
sti
push
fsubp
pop
lods
cmpsl
imull
cld
scas
sbbb
cwtl
leave
xor
lods
push
push
lock
pop
sahf
jno
ret
fistpl
add
jp
xchg
lods
sbb
jp
leave
test
xor
cmp
shl
out
stos
ret
or
and
jl
lcall
shll
inc
sbb
push
fisubrs
pop
stos
lds
push
movsl
push
cmp
test
mov
mov
add
ret
aad
cmp
into
insb
inc
enter
sbb
cmp
cmpsb
js
mov
in
mov
das
stos
pop
lds
lods
mov
ja
enter
cwtl
enter
mov
mov
add
std
pop
push
mov
push
xchg
push
aam
cmp
xlat
mov
fcomi
xchg
xor
aam
inc
fstpl
in
fidivs
mov
xor
dec
push
sub
lods
adc
sahf
cltd
mov
repz
movsb
and
loopne
lahf
push
filds
sbb
sarb
stos
test
aad
mov
stc
mov
xchg
mov
in
ret
popf
rclb
xchg
stc
cmp
out
ljmp
imul
rcrl
es
cmp
sbb
or
pop
jmp
cmpsb
push
out
shll
jo
addr16
test
jmp
sbb
mov
xlat
mov
pop
addb
mov
out
lods
icebp
jp
sbb
pop
stc
add
mov
mov
pop
js
push
push
lds
mov
ret
fcomip
cmp
into
insb
inc
inc
fcmovne
stos
insb
sub
test
bswap
adc
mov
mov
iret
enter
dec
and
stos
push
outsb
in
inc
and
mov
cmpsb
inc
repnz
lods
pop
xchg
cmp
test
lods
jno
push
ret
cld
cmp
mov
repnz
ret
imul
dec
jmp
fadd
mov
div
pop
mov
je
adc
or
and
rcrl
sbb
dec
mov
fsts
inc
dec
sbb
mov
push
sahf
in
das
popf
out
cwtl
repz
test
mov
push
enter
sbb
and
rol
shll
repnz
xorb
mov
cwtl
xor
jns
add
test
mov
add
push
leave
out
pushf
testl
sub
xor
insl
jae
addr16
hlt
mov
inc
xchg
xchg
and
shll
inc
mov
mov
inc
enter
iret
mov
cmp
jp
cltd
in
test
outsb
xchg
push
sbb
and
jmp
sub
ret
enter
ljmp
or
sub
nop
fstpl
cld
pop
dec
pop
fwait
test
ret
movsb
and
pop
cld
inc
loope,pt
loope
or
sbbb
cmp
ds
mov
das
stos
inc
sub
mov
xchg
add
std
scas
adc
jnp
pop
xchg
push
ret
or
push
insl
mov
fisttpll
push
xorb
andl
fwait
xchg
pop
sbb
sti
andb
or
jnp
or
mov
fistpll
jmp
or
sarb
nop
ret
int
xchg
cmpb
dec
in
sti
push
xchg
shlb
lcall
dec
repz
dec
cmc
push
js
out
add
or
pop
leave
frstor
lret
popa
adc
xchg
aad
arpl
ja
sbb
jo
mov
inc
add
push
inc
pop
mov
pop
jge
loope
sub
jge
push
xorl
xchg
inc
std
movsl
test
add
mov
cli
out
xor
push
scas
shll
dec
mov
aam
out
jae
inc
xor
lret
mov
lcall
mov
xchg
daa
push
sub
outsb
bswap
mov
sbb
dec
mov
mov
gs
sub
jne
movl
ljmp
sbb
mov
es
shlb
inc
nop
or
dec
xor
mov
jle
jb
inc
cmp
or
inc
ret
inc
fcmovb
sbb
pop
mov
fmuls
cmp
ret
and
das
shrl
insb
loopne
lcall
xchg
ret
pop
enter
dec
mov
repnz
adc
xacquire
scas
stc
adc
push
call
inc
rorb
xor
cwtl
out
mov
lret
pop
inc
in
mov
or
dec
push
es
shrb
mov
inc
mov
or
or
fbld
sbb
fdivrl
cmp
and
mov
loop
mov
mov
aam
add
push
mov
mov
mov
dec
push
ja
push
int3
iret
and
mov
test
adc
mov
inc
int
scas
rcrb
std
shll
lss
cmpsl
push
lods
mov
or
pushf
mov
adc
iret
popf
adc
imul
outsb
ret
mov
test
jp
dec
cltd
push
mov
mov
sub
push
cmpsl
and
adc
or
jbe
or
mov
dec
sbb
xor
lods
or
fs
cmc
mov
inc
int
sahf
push
fsubrp
andl
and
and
mull
xchg
test
push
pop
jbe
aas
sahf
or
lods
lea
stc
fdivrs
aad
jne
iret
shrl
cmp
jl
cld
imul
add
movsl
mov
push
into
push
in
imul
shll
insl
push
jnp
mov
pop
jmp
pop
sti
rclb
xchg
std
lds
push
in
jl
fwait
std
negb
pop
inc
xchg
push
mov
cmp
ret
repz
xor
aam
jns
lds
mov
push
jmp
insl
sbbb
leave
push
fisubs
dec
lcall
scas
push
gs
dec
in
cmp
les
or
mov
pop
or
pop
mov
lret
cmp
or
out
mov
das
into
add
dec
roll
inc
mov
push
sub
adc
xchg
std
adc
sbb
add
push
sub
cmpsl
sub
test
pop
push
ja
sbb
fxch
add
in
scas
gs
adc
and
push
insb
ret
fwait
addl
pusha
push
js
sub
xchg
imulb
mov
or
sbb
xor
xchg
iret
imul
add
fcomps
sbb
adc
pop
fistpl
lret
fsts
gs
cld
mov
dec
dec
cmp
mov
xorl
sub
outsl
cmp
popa
mov
mov
dec
jo
sarl
stc
xlat
jns
subb
mov
add
ds
daa
pop
test
fstl
adc
jmp
subl
xchg
test
mov
int3
inc
insb
jmp
fcmovnb
mov
push
mov
cld
inc
fs
fs
jge
lcall
cmp
or
xchg
adc
call
sub
cltd
jg
cmpsl
fistl
mov
mov
xor
pop
mov
movsl
lret
pop
mov
stos
pop
push
add
inc
popl
adc
pop
dec
jb
aaa
mov
sub
dec
jnp
push
testl
les
aas
pop
cmpsl
mov
shl
inc
sarb
stc
add
push
aaa
and
sbb
es
mov
out
mov
mov
cmp
arpl
loope
dec
cmc
dec
xor
mov
mov
mov
ds
fbld
testl
subb
mov
test
ret
loop
pop
leave
jns
cmc
inc
dec
fisttps
jp
or
jae
dec
push
sub
test
sbb
sbb
xchg
xchg
lods
mov
decl
addr16
insb
xor
sbb
cmp
jg
mov
lcall
rcrl
inc
mov
fadd
push
cmp
cmp
or
push
rclb
arpl
jbe
pop
or
push
loop
and
xor
mov
je
dec
stc
mov
call
aas
pop
push
shrl
add
pop
pop
cmp
push
rcrb
inc
iret
loopne
fstpl
clc
sub
adc
fidivrs
jle
fcomip
imul
mov
sti
xor
leave
inc
add
sub
fcomps
ss
cmpsl
mov
fsubr
test
mov
dec
and
std
int3
fwait
es
adc
mov
mov
fildl
sbb
mov
push
pop
call
les
ja
pop
dec
and
mov
sub
filds
ret
xor
or
test
roll
stc
or
mov
push
es
sub
add
cmp
mov
fbstp
adc
mov
loop
cmp
jecxz
aam
vshufpd
ret
lret
rol
iret
jmp
sub
into
cmp
lock
lret
xor
mov
push
cmp
xchg
cmpl
fldl
movsb
jo
sub
fstl
sub
rcl
fnstsw
loopne
test
mov
sbb
loope
pop
dec
push
outsb
popf
sub
leave
cli
mov
fmul
mov
lods
pop
push
dec
test
mov
movsl
ficoml
xchg
test
sub
push
test
adc
cmp
pop
dec
icebp
pushf
int
and
mov
push
in
sbb
notb
loop
or
or
push
xchg
rol
arpl
leave
imul
xchg
mov
aaa
fcoms
mov
cmp
jae
jae
testb
pop
stc
inc
ffree
sbb
cmpb
mov
addr16
pop
sbb
jns
pop
jge
stc
sbb
mov
lods
arpl
xor
nop
mov
ja
and
aad
jp
lcall
enter
mov
call
xchg
dec
mov
pusha
test
push
int
mov
add
mov
ja
mov
sbb
push
push
cmc
jo
inc
add
inc
add
jb
ret
rorl
clc
and
clc
lea
test
js
pop
cltd
out
pop
sbb
add
test
bnd
or
and
enter
cmp
adc
add
add
cmpsl
shrl
int3
dec
pushf
or
push
mov
and
les
or
fdivrs
jae
add
pop
xor
fs
mov
push
adc
push
push
sti
pusha
fiadds
rolb
push
pop
mov
cmp
stos
or
pop
cli
cli
mov
in
mov
jecxz
data16
int3
sarb
mov
pop
sahf
and
sub
mov
cwtl
xchg
xchg
sub
jno
ss
push
push
and
mov
sahf
addl
jbe
stc
or
jmp
nop
andl
stc
xchg
addb
repz
aam
orl
shrb
cwtl
jecxz
pop
int3
in
je
cld
std
mov
lret
xchg
cmp
push
cmp
iret
lret
loopne
mov
mov
fildl
pop
outsl
or
and
jmp
adc
mov
sbb
std
nop
xor
jge
xchg
lods
mov
lcall
pop
jmp
test
mov
mov
sbb
lret
rol
cmpsl
mov
push
ds
xchg
mov
fmulp
je
cmp
aam
sub
imul
cmp
or
add
mov
in
pop
adc
mov
fidivl
pop
push
in
pop
loopne
movsb
inc
sub
add
decb
sbb
ror
stc
inc
lret
insb
les
adc
pop
and
sbb
fildl
pusha
push
movb
test
mov
ja
dec
outsl
sahf
ss
test
ds
cwtl
pop
pop
dec
mov
stc
inc
in
shr
cli
jge
ss
pop
push
push
jmp
sub
cmp
enter
jns
sub
inc
push
mov
mov
call
dec
enter
outsl
sub
mov
shll
lcall
sbb
mov
adc
leave
loopne
shll
dec
xor
into
imul
jns
cmp
test
adc
rcrl
push
loopne
in
fadds
daa
dec
xorl
cmc
movsb
ret
mov
lods
es
cld
in
sahf
sbb
js
or
into
fisttpl
popa
test
loopne
fisttps
ljmp
sub
pop
fstpt
popf
add
cli
dec
loope
shrb
stos
int
loopne
mov
mov
int3
cwtl
fmull
fldenv
aad
inc
leave
lcall
jmp
cwtl
sbb
adcl
and
pop
addr16
cmp
scas
cmp
lret
mov
push
insb
and
and
pop
jle
xchg
or
xor
insl
jae
sub
mov
adc
sub
cmp
daa
pushf
jmp
lds
cmp
dec
inc
xchg
test
mov
popf
dec
jb
fnsave
mov
add
out
xor
xchg
and
cltd
or
mov
out
fmulp
cwtl
arpl
push
push
jb
pop
mov
cld
movsl
mov
stc
cld
cli
pop
jns
add
testb
sahf
xor
clc
push
mov
call
mov
popf
adc
in
fsubrl
ret
cmp
mov
lods
pop
cld
into
dec
stos
jmp
mov
movd
leave
cwtl
push
out
cli
push
sub
fstps
vunpckhpd
lret
lcall
jb
fcmovnb
test
jle
loopne
lahf
scas
cld
pop
stos
pop
dec
pop
arpl
shll
leave
jno
pop
mov
popa
lea
sub
out
adc
pop
cltd
arpl
add
jb
mov
in
sub
popf
jbe
les
or
cltd
fs
add
lods
mov
adc
and
test
jne
sti
aaa
frstor
out
pop
and
or
imul
data16
cltd
stos
dec
lcall
pop
iret
jbe
dec
and
sub
out
push
dec
adc
dec
xor
mov
movsl
out
or
mov
mov
popf
pop
jb
lea
call
mov
fldcw
ret
loopne
fdivrl
mov
popf
add
in
ja
push
mov
mov
inc
push
fcmove
or
lcall
das
jnp,pt
rol
xor
cmp
sub
into
pop
cmp
push
mov
mov
mov
jno
lea
fnstsw
sbb
sbb
xor
cmp
popf
xor
enter
lcall
in
lret
into
cmp
mov
pop
xchg
lret
aas
xchg
cmp
cmpb
roll
mov
xchg
inc
cli
pop
ret
mov
mov
adc
sbb
jmp
cmp
cmp
mov
push
mov
jmp
scas
int3
add
and
shlb
push
lcall
mov
cltd
xchg
fstpt
pop
stos
in
std
pop
rclb
test
sbb
mov
xlat
pop
or
leave
mov
repz
sub
sub
mov
jns
sbb
call
test
jae
into
ds
loopne
push
push
mov
mov
jmp
sbb
sar
repnz
mov
jge
push
cwtl
loopne
mov
or
mov
adc
in
mov
pusha
enter
mov
int
ret
push
sbb
add
jl
or
clc
xor
rcr
outsl
add
dec
push
add
ret
pop
cmp
lret
mov
cwtl
lcall
pop
cmp
shr
adc
ja
inc
fs
sbb
shrl
mov
addr16
mov
ss
sbbl
sub
jae
mov
or
add
cmp
in
outsb
movl
rol
aam
shr
shlb
lods
push
pop
pop
push
inc
addr16
fisubs
sub
or
xchg
faddl
jno
inc
cmpsl
das
test
push
iret
or
mov
adc
and
pop
and
or
aad
xchg
test
or
mov
enter
insl
mov
bound
inc
rol
cmpsl
mov
mov
lea
ja
xor
icebp
ficoml
mov
cmpsl
pop
lret
imul
in
fcmovu
xchg
sbb
ja
addl
xor
cld
xor
call
push
test
jne
cvtpi2ps
test
jns
cld
push
iret
subl
cmpsl
inc
pusha
inc
sbb
cmp
mov
pop
add
xchg
in
pop
xchg
leave
fs
loopne
pushf
pop
lret
push
andb
pop
mov
adc
cmc
movsb
add
cltd
jmp
stos
add
ljmp
lcall
popf
outsb
push
or
pop
cmp
movb
fsts
sub
cmpsl
fsubrl
cli
rorl
aaa
add
fisubrl
xor
pop
xchg
add
or
mov
cmp
xor
mov
jbe
test
repz
loopne
insb
jl
jmp
daa
outsl
into
and
inc
call
inc
fidivs
push
lods
push
cld
int
xchg
xlat
mov
int
mov
xor
int3
inc
ror
in
fs
sbb
test
push
insb
add
push
leave
dec
jle
lds
add
mov
gs
adc
gs
sbb
push
dec
xor
adcb
fcomps
mov
ret
cmp
mov
dec
lds
sbb
add
add
fidivrs
inc
leave
add
leave
pop
mov
cmpsl
lret
push
pop
lret
mov
jb
test
sbb
add
mov
push
dec
subb
enter
cwtl
mov
xchg
cmpsl
das
loopne
lcall
ret
add
xchg
dec
lret
pop
xorl
fstps
incl
aas
popl
sti
adc
and
lods
mov
nop
cmpl
pushf
je
mov
jle
cmp
rcr
inc
sub
popa
loopne
sbbl
nop
lods
mov
je
bt
icebp
ffreep
js
jb
mov
jns
cli
xor
lods
aad
xchg
push
cmc
jo
lret
or
or
pop
or
pop
dec
jns
int
pop
adc
rol
cmp
stos
movsl
pop
aad
roll
mov
adc
scas
mov
inc
cmp
mov
stos
mov
mov
mov
cmp
dec
cli
cmp
add
cli
xor
popf
adc
xchg
inc
inc
in
ffreep
repnz
dec
cmp
inc
cmp
or
xchg
cmpsl
popa
in
push
lcall
or
cltd
mov
pop
ret
push
ret
push
rorl
pop
cli
add
bound
lret
ficompl
fsubr
push
add
les
pop
push
xor
pusha
inc
ja
test
or
xor
xlat
jno
fdivrl
int3
push
add
jae
mov
dec
popf
mov
aam
dec
sub
adcl
aaa
mov
xor
fcompl
lds
hlt
cltd
jg
pop
loopne
push
jae
push
push
jo
stc
cmpb
jno
stc
sbb
jae
lock
decl
outsl
dec
call
repz
push
stc
pop
xchg
in
jp
popf
repz
test
xor
jle
aam
lds
push
xor
popf
push
subb
cmp
addr16
mov
out
push
push
idiv
cmpsl
pop
aas
mov
loop
test
not
sub
ljmp
loop
fdivrl
fdivl
push
add
loopne
mov
enter
stc
repz
dec
push
and
inc
ja
clc
and
mov
mov
outsb
xchg
mov
mov
dec
pusha
cmpsb
xchg
pop
mov
sub
scas
fs
sub
popf
aas
clc
hlt
loope
cmpsb
pop
add
push
loope
pop
pop
pop
inc
lock
mov
xchg
add
lcall
repz
outsl
mov
loopne
add
inc
xor
cmpsb
dec
mov
push
mov
add
dec
and
inc
mov
cmpsl
arpl
movb
fists
mov
aad
ret
inc
mov
mov
jne
repnz
cmp
xchg
sbbl
sbb
out
insb
sub
push
ja
outsl
jns
push
ret
adc
scas
shrl
aad
inc
ljmp
dec
inc
fnstsw
mov
pop
es
icebp
cmp
clc
test
mov
imul
mov
pop
lds
gs
sbb
int
dec
inc
cld
dec
jnp
sbb
shrb
fmuls
repz
xlat
fsubrs
movsl
cmp
in
test
sub
sarl
sub
cmc
adc
jg
shll
jb
jg
pop
setp
and
stos
add
imul
dec
stc
cmpsb
in
jecxz
movsl
cld
lods
pop
adc
movsl
push
pop
xchg
sbb
fmuls
test
lods
lahf
xor
out
mov
lea
cmp
test
xlat
shlb
add
jb
inc
push
hlt
mov
lods
xchg
mov
orl
lcall
xchg
repz
push
sbb
das
leave
dec
cmp
pusha
xchg
aas
out
lock
mov
inc
fistpll
mov
movsl
push
inc
cli
inc
adc
pop
pop
sub
lcall
sub
fistl
dec
sub
rcl
test
enter
mov
pop
fstps
sti
mov
add
mov
xchg
sbb
mov
gs
lret
and
and
mov
mov
flds
xchg
test
loop
adc
imul
arpl
movl
mov
ljmp
movsl
leave
jb
cmpsl
mov
sbb
int3
mov
movsb
xor
or
ret
mov
int3
int
lcall
push
in
push
fsubr
test
adcl
xor
int
adc
sub
push
or
out
lods
roll
incb
sar
stos
cmp
insb
sub
rorb
cmp
inc
sbb
push
or
cli
movsb
sub
jmp
outsb
dec
test
loopne
dec
cwtl
mov
cmpsb
out
inc
sbb
imul
add
push
dec
es
mov
add
inc
loopne
jle
and
xchg
adc
cmpsl
pop
jge
cmpsl
es
mov
addb
cld
rcl
cltd
push
clc
xchg
mov
stc
clc
sub
in
addr16
dec
add
dec
lret
rclb
stc
lret
xor
mov
cld
push
cmp
sub
xchg
test
add
and
shr
push
loopne
xchg
stc
inc
cmp
dec
stc
xchg
push
addr16
push
or
push
xchg
pop
xor
loope
pop
rorl
adc
dec
push
cs
push
sbbb
push
mov
xor
mov
cmp
cld
mov
icebp
mov
push
movsb
mov
test
addb
cli
or
jp
cmp
mov
inc
cli
inc
mov
inc
test
es
enter
inc
out
mov
fistl
mov
dec
int
push
mov
xchg
jbe
push
lods
shl
or
popf
xchg
push
fimuls
subb
in
mov
push
cs
mov
cmp
push
mov
xchg
flds
xchg
dec
in
xor
rol
mov
test
mov
pusha
insl
dec
stc
lret
mov
mov
mov
sbb
fidivrl
mov
stc
mov
dec
cwtl
cld
jl
cltd
xchg
out
add
in
cli
scas
jg
lcall
rol
sbb
arpl
ljmp
loopne
jns
std
mov
mov
mov
sbb
mov
ja
or
cld
pop
jbe
shrb
ljmp
jne
loope
cwtl
stos
hlt
sbb
cli
aad
pop
int
and
je
ret
addr16
jp
dec
out
xlat
out
sarl
cmp
stos
sub
outsl
xlat
cmpsl
shrb
sbb
mov
push
push
cmp
shl
jbe
xlat
cli
add
test
mov
pusha
xchg
adc
unpckhps
jg
stos
movl
pop
scas
lahf
vunpckhps
mov
shll
inc
ret
push
or
in
sti
ficompl
xbegin
rorl
scas
jbe
mov
loop
xchg
mov
aad
xor
adc
insb
sbbb
sub
push
mov
cmp
scas
jge
cld
xlat
mov
or
ror
inc
mov
jnp
cmp
mov
sub
cmp
lcall
jmp
mov
jecxz
jne
and
push
pop
add
mov
ds
mov
sar
jb
addr16
ja
inc
sbb
dec
mov
nop
stc
lret
inc
insb
pusha
out
mov
pop
cmp
cwtl
outsb
mov
xor
xchg
inc
ret
cmp
lods
dec
jl
pop
xchg
jns
sub
ds
gs
push
jnp
orb
mov
jnp
ja
push
jo
dec
imul
leave
scas
fmuls
inc
test
inc
sbb
or
test
enter
cli
sbb
pop
rcr
lret
dec
aas
sbb
dec
in
pop
fnstsw
adc
mov
int
ret
out
cld
mov
fxch
ss
and
scas
xchg
fcomps
xor
push
aad
dec
dec
pop
orl
add
test
stc
mov
push
xor
mov
les
mov
jo
into
pop
cmpsl
lret
test
ss
mov
xorb
inc
jnp
jl
inc
or
or
jp
stc
jl
adc
js
and
sub
js
aaa
lcall
mov
cwtl
or
jle
inc
mov
test
das
adc
sbb
ds
shl
es
stos
sub
push
mov
cmpsb
xor
ds
add
ja
ret
xchg
fwait
gs
aas
xchg
scas
pop
rcrl
jmp
fs
loope
sbb
inc
xchg
jecxz
add
cwtl
inc
loope
sbb
mov
mov
int
cmp
adc
push
rcll
mov
xcrypt-ofb
cmpsl
stos
mov
adc
mov
mov
cmp
xchg
or
dec
mov
sbb
mov
xlat
dec
push
sar
mov
lret
sti
popf
rol
xchg
arpl
movsl
clc
sbbl
scas
rorl
and
pop
rcll
cmp
adc
mov
mov
mov
test
xor
push
inc
lea
jle
mov
mov
mov
je
pop
loopne
sarl
les
out
jge
ror
xchg
shll
cld
in
mov
repnz
lods
sub
loopne
xchg
mov
ret
fcom
jo
sti
enter
inc
cli
dec
into
xlat
fdiv
sbb
lock
lret
add
stos
add
iret
in
adc
lret
aad
push
fcoms
xchg
push
nop
mov
enter
jae
sbb
mov
stc
out
push
fadds
add
mov
test
rcr
push
dec
pop
adc
test
fwait
pop
sbb
inc
adc
add
mov
mov
adc
mov
mov
call
dec
rorl
loopne
sbb
aam
push
ss
lret
cmp
out
mov
lods
adcl
pushf
imul
ds
movl
fidivrs
ljmp
test
ret
xchg
push
push
sub
cmp
insb
sub
mov
xlat
mov
mov
mov
repnz
cwtl
sbb
sbb
insl
cwtl
loopne
sbb
mov
push
mov
rcll
push
rcll
xor
rcl
add
leave
stc
pop
mov
inc
mov
add
test
sub
xchg
js
incb
je
inc
pop
mov
xor
adc
jne
push
and
or
dec
add
sub
ja
or
mov
mov
push
xchg
fisttpl
in
data16
ret
leave
vcmppd
xor
movsl
les
subl
mov
test
mov
test
adc
ret
les
mov
loope
fxch
mov
push
loop
sti
xlat
roll
mov
int
leave
xchg
call
insb
xor
cmp
push
push
jnp
and
mov
leave
ds
lret
push
sar
pusha
adc
jns
xorl
jg
xchg
inc
pushf
insb
movsl
pop
outsb
mov
andl
outsb
and
stos
lods
and
dec
lret
jae
lahf
lods
dec
push
xor
ljmp
xlat
cli
cli
leave
adc
lret
mov
fcoms
test
mov
dec
sub
xlat
sub
pop
fs
fwait
xlat
faddl
pop
push
outsb
sbb
xchg
jl
stos
inc
test
mov
repnz
in
pop
cli
fimull
xchg
mov
inc
xchg
xchg
lods
nop
adc
lds
jl
shr
sbb
mov
loop
mov
les
push
out
mov
cmp
in
inc
nop
jb
cmp
push
test
mov
test
mov
xchg
push
dec
stc
rcll
mov
sub
push
jp
mov
cmp
mov
mov
enter
inc
int3
scas
fisubl
jl
jl
mov
xor
fldenv
mov
or
scas
orb
daa
mov
push
int3
push
jmp
push
cld
arpl
imul
inc
jbe
leave
out
ret
inc
popf
xchg
rcrb
or
pop
pop
and
test
pop
mov
mov
push
push
pop
testl
rol
jns
sub
lret
sar
aad
fcomps
push
push
xchg
cmpb
test
adc
aaa
into
stos
test
push
jb
add
cli
or
in
scas
push
insl
sub
dec
insb
mov
fwait
gs
and
test
push
sub
insb
push
popf
test
mov
sbb
mov
inc
out
nop
daa
and
invd
andb
mov
fisubrl
mov
inc
lret
decb
and
sbb
cmc
push
jb
cltd
or
lahf
es
mov
mov
decl
dec
or
push
enter
hlt
shll
pop
sbb
jg
test
and
sbb
inc
xor
mov
xor
arpl
aaa
xor
sti
push
sbb
movsl
jnp
pop
mov
jmp
fstps
adcl
mov
cmc
lds
fimuls
pmaxsw
pop
pop
xchg
cmp
fcmovne
iret
push
or
movsb
out
addr16
call
xchg
arpl
vpsubw
cli
insb
sub
sbb
fimuls
rorb
mov
fsubrp
dec
jne
or
jns
js
loopne
mov
cltd
pop
and
dec
mov
jmp
int3
cmp
adc
lods
fcoml
lahf
cli
jb
lds
xchg
pop
les
jns
jno
sahf
mov
mov
int
adc
dec
cmp
xchg
cmp
in
xor
push
lods
xor
dec
lret
add
lods
push
fmulp
sbb
iret
cwtl
jl
or
ss
lcall
mov
adc
ror
cmpsl
in
lret
aam
lds
lcall
dec
push
mov
mov
ret
leave
push
dec
or
ja
xor
xlat
jg
lods
shrb
rol
mov
sar
xchg
fmuls
xlat
push
dec
addb
loope
xchg
inc
loop
iret
hlt
cmpsl
or
pusha
push
cli
pop
lret
sub
and
shlb
xchg
into
pop
orl
push
sbb
cmp
loopne
orl
sbbl
adc
mov
bound
xchg
push
shrl
mov
out
lret
xchg
sub
add
add
inc
ds
jl
mov
in
and
mov
fistpl
mov
cltd
jae
xchg
rorl
or
pop
les
mov
pop
jbe
aaa
stc
test
shl
pop
xlat
fld
mov
push
adc
addb
aam
mov
test
out
mov
out
lcall
cs
hlt
inc
mov
stos
push
dec
lds
ror
push
sub
imul
addb
daa
outsb
dec
mov
ljmp
pop
int3
cli
imul
js
clc
jno
cmc
test
cwtl
das
in
xchg
mov
push
out
adc
lcall
mov
divps
aaa
sub
cmp
push
mov
pop
mulb
add
mov
fsub
fsubrl
outsb
inc
add
jle
and
adc
daa
fcom
cmp
shlb
adc
push
repz
inc
fdivl
shrb
xor
and
hlt
xchg
movl
cwtl
push
outsl
push
jb
dec
pop
lret
ret
or
mov
dec
mov
repnz
aam
pop
out
and
adc
incb
cltd
or
fisubrl
fwait
testl
xor
mov
ret
rcr
pop
xchg
out
inc
push
dec
sbbl
in
inc
sti
mov
xor
push
sub
xlat
jmp
cmp
mov
out
ret
scas
mov
sbb
mov
in
inc
das
push
call
sbb
jle
sbb
daa
loopne
mov
test
mov
out
mov
mov
adc
cld
es
movsb
jmp
cli
xor
and
enter
fs
pop
jmp
aam
add
ficoml
xorb
adc
dec
stc
lcall
fidivs
xor
mov
int
and
xchg
mov
lds
cmpsb
incl
sub
mov
and
aam
stos
dec
ret
out
fucomip
sub
mov
push
fnstcw
mov
out
mov
je
cmpsb
gs
mov
fimull
lods
out
ds
mov
inc
fildl
jne
push
mov
xchg
jle
mov
hlt
and
jo
movsl
cmp
xchg
sbb
daa
lret
pop
movsb
pop
sahf
repnz
test
sub
push
enter
jo
test
or
sahf
push
enter
lcall
pushf
mov
test
add
jp
daa
sbb
jmp
aas
inc
xchg
and
mov
aas
lahf
test
popa
mov
shll
or
xor
and
movsl
and
sbb
push
add
lea
popf
add
cwtl
test
cli
pop
push
or
pop
cmp
lods
sti
push
cld
xor
jnp
jmp
cs
leave
mov
jae
push
lods
jbe
je
adc
cld
dec
jbe
inc
xlat
jl
nop
cmp
lret
xchg
dec
clc
add
cmp
rorl
daa
mov
popf
mov
inc
push
pop
popf
jns
mov
cld
fnstcw
push
adc
mov
push
mov
sub
in
and
jb
jns
cmp
loopne
pop
add
sbb
dec
mov
inc
sti
dec
repnz
faddl
jmp
leave
xchg
pop
mov
pop
sub
mov
fxch
cwtl
add
ror
jp
mov
enter
test
mov
arpl
stos
cmpsb
enter
or
dec
mov
and
pop
in
rol
cmp
mov
movsb
fstpl
enter
mov
mov
lods
iret
int
add
test
sarb
mov
mov
fcmovu
test
test
js
jecxz
enter
imul
popf
ret
bound
xchg
test
call
arpl
ja
enter
mov
enter
mov
mov
xchg
cmp
adc
cmpsb
sbb
jl
sbb
fs
xchg
cld
dec
jmp
sarl
inc
faddl
popf
push
je
nop
adc
mov
test
cli
jp
nop
mov
inc
jp
iret
cmp
sarb
arpl
test
jmp
test
loop
test
mov
jl
mov
test
andl
shll
mov
cmpsb
test
mov
jl
mov
cmpsb
test
mov
cmpsb
fmul
add
inc
out
xchg
inc
or
cmpsb
sarb
mov
cwtl
call
ret
mov
cmpsb
xchg
ror
add
inc
mov
cwtd
lret
xorl
mov
cwtd
lret
push
mov
addr16
inc
mov
add
inc
lret
push
sbb
data16
cltd
pushf
lods
jp
in
jo
mov
jns
stos
push
ret
lret
dec
subl
ret
jns
push
lds
or
stos
inc
popl
adc
fdivl
mov
leave
pop
pop
or
pushf
pop
sahf
movsl
daa
mov
movsb
scas
pop
fcoms
pusha
fcoms
pop
inc
jmp
daa
mov
push
test
and
mov
movsb
pop
push
jmp
pop
push
in
movsb
mov
and
mov
in
mov
insb
pop
sbb
fisttpll
push
pop
lret
and
scas
dec
inc
adc
ja
cmp
inc
mov
and
lods
mov
pop
lret
fldenv
insb
dec
or
stos
dec
sahf
in
daa
xor
insb
dec
nop
sbb
mov
test
mov
enter
dec
into
sub
sub
imul
fistpl
movsb
and
gs
not
pusha
les
xlat
shrd
dec
loop
jno
jo
cmp
sbb
fdivs
out
add
test
jns
adc
sbb
shrb
lock
mov
jl
rclb
ljmp
mov
addr16
test
inc
cli
push
xor
cmp
cltd
ret
xor
xchg
dec
iret
mov
test
mov
into
and
adc
aas
addr16
les
in
call
mov
adc
adc
mov
add
mov
xchg
pop
in
pop
fsubrl
mov
test
movsl
in
movsb
lds
jmp
push
sbb
out
fisttpll
cmp
jbe
xchg
popa
push
cmpsl
aam
dec
mov
or
loopne
rcl
sbb
in
lods
xchg
loop
insb
mov
divb
stc
in
imul
cmp
and
popf
lret
pop
xchg
pop
jae
jmp
mov
push
movsb
gs
imul
mov
in
inc
mov
cmpl
les
ret
scas
fsubrs
loopne
mov
jge
sbb
pop
or
imul
xor
xor
mov
jbe
adc
inc
dec
xor
lret
jns
pop
fsubl
leave
test
mov
push
mov
fucomp
push
pushw
stc
outsb
sarl
ja
cmp
dec
cld
es
or
and
ds
cmp
mov
ret
xor
push
bound
xlat
pusha
arpl
es
xchg
inc
aam
xchg
add
jnp
orb
sarl
enter
push
sbbl
push
add
mov
stos
fmull
div
movsb
pop
jnp
fisttps
mov
inc
adc
push
mov
push
xchg
lods
sub
leave
shrl
stos
gs
daa
inc
dec
inc
mov
xchg
ret
add
aad
sub
dec
add
xlat
pop
mov
ds
test
xor
mov
xor
lret
loope
xchg
lods
mov
lods
add
xchg
dec
cmp
ror
fisttpll
jnp
and
rclb
cwtl
movsl
js
sub
adc
test
cmpsl
idivb
jecxz
mov
stos
clc
inc
das
orl
adc
cmp
pop
cmp
or
pop
mov
mov
push
cmpsl
subl
jp
popf
inc
mov
push
aam
stos
aas
xlat
test
aam
or
xor
sbb
std
jle
loope
stos
es
lods
or
enter
add
mov
jl
mov
mov
ret
fisttps
pop
pop
adc
lds
cli
sbb
out
fmul
sub
imul
ds
insb
mov
cmp
js
adc
push
or
fdivs
xchg
aad
jl
push
mov
leave
insl
lds
jnp
std
mov
xor
or
test
aam
lds
subl
cs
pop
lds
bnd
pop
ljmp
jmp
sbb
or
push
cwtl
js
push
pop
mov
in
leave
iret
imul
adc
pop
mov
movl
lea
enter
bnd
out
push
inc
xor
add
or
gs
iret
test
leave
stos
cmp
add
cmc
lods
mov
int3
lahf
xchg
jp
dec
mov
sahf
out
js
popf
ret
pop
inc
rclb
push
adc
pop
xchg
xor
pop
xchg
js
stc
jnp
push
bnd
mov
mov
dec
mov
pop
push
jmp
mov
in
sbb
into
jno
dec
mov
push
mov
dec
sub
sub
xchg
dec
aad
bnd
xchg
xor
scas
leave
adc
dec
loopne
cmpsl
push
addr16
mov
fdivl
rcrb
mov
mov
dec
pusha
cmp
push
mov
ljmp
cwtl
lret
bound
js
pop
and
or
jb
jmp
insb
jecxz
push
insb
dec
xor
ror
loop
ret
jle
xchg
leave
int
es
sbb
push
jbe
inc
lret
push
out
push
dec
add
mov
test
addr16
lahf
fdivrl
cli
stos
xor
and
dec
lret
and
mov
dec
fsub
pop
inc
push
pop
shlb
jnp
rcl
rcl
shll
add
cmpsb
inc
jo
aad
lret
cmpsl
mov
jmp
sub
cs
xorb
aas
mov
gs
jbe
shll
sbb
or
mov
xlat
fiadds
cmpsl
cmp
movsl
into
sbb
inc
mov
stos
pop
jbe
jmp
or
xor
test
jecxz
fistpl
cmp
pop
mov
out
inc
mov
mov
popl
cmp
gs
pop
repnz
loop
mov
xchg
aad
in
push
repnz
adc
scas
sbb
pop
cmpsl
sub
cmp
fsubrl
enter
arpl
push
sbb
inc
sbb
jl
sub
clc
mov
bound
push
adc
and
fisubrs
mov
sub
sti
sub
xor
adc
mov
sahf
gs
xor
fidivrs
sti
movsl
mov
or
or
xor
jmp
cmp
adc
dec
push
stc
jns
pop
addr16
subb
push
lret
mov
inc
cli
cmp
test
sbb
hlt
inc
mov
shrb
lahf
and
mov
inc
or
test
arpl
dec
sbb
inc
mov
mov
xor
and
sti
cld
lcall
dec
inc
dec
sbb
jae
dec
and
cmp
adc
in
xor
std
push
out
xchg
mov
mov
xchg
mov
ljmp
xchg
mov
push
ret
das
sbb
int3
into
pushf
lret
fnstsw
or
add
inc
xor
cmpsl
mov
jns
sub
jg
out
stos
iret
ja
int
into
stc
pop
cmp
ret
adc
pusha
cmp
shll
xchg
mov
push
jge
orb
ds
push
ret
lds
out
jp
push
into
inc
or
jmp
ror
sar
test
mov
add
pop
push
push
inc
fdivrs
aad
push
push
jmp
add
inc
dec
mov
pop
sub
mov
rol
jns
fs
sbbl
cwtl
dec
mov
jp
dec
enter
mov
mov
insl
push
xchg
jle
cmp
push
sub
sub
xlat
cld
cwtl
andl
cli
std
mov
push
mov
dec
pop
cmp
push
insb
and
or
jnp
adc
mov
test
or
into
xlat
push
jl
mov
cli
iret
les
mov
iret
mov
shlb
cld
int
into
mov
icebp
or
jmp
push
xor
aam
cwtl
sti
mov
into
sub
jnp
jg
fucomp
push
pushf
mov
outsb
and
adc
xlat
fisubrs
xchg
fidivrs
pop
jns
lahf
jp
adc
jne
sub
add
mov
lret
xor
cmpsb
nop
push
inc
ret
inc
xchg
adc
loopne
pop
int
repz
sub
test
sub
iret
dec
mov
movsl
cmp
jns
fstpt
rcrb
add
mov
add
push
and
mov
jns
test
in
cmp
jl
insb
mov
mov
cwtl
mov
in
push
movl
adc
adcl
in
push
fistpll
mov
mov
pushf
pop
jmp
ret
movl
adc
add
imulb
cltd
sbb
sbb
fstpt
popf
rorl
int
jns
inc
rcl
sub
repnz
sbb
loopne
iret
mov
xlat
stos
int
push
inc
push
scas
fwait
les
je
jl
pusha
adc
jns
lds
jne
sbb
call
pop
mov
pop
jnp
pop
or
inc
pop
add
cld
xor
cmpsb
pop
add
dec
stc
movsl
mov
nop
dec
jb
xor
stc
pushl
dec
sub
adc
ret
lea
mov
es
xor
cmp
dec
std
mov
lods
push
clc
jno
xor
xor
mov
mov
pop
jmp
sbb
mov
movsl
or
sarb
and
cmpsb
inc
cwtl
jne
push
lcall
jl
cmp
les
jl
cmp
rcl
push
jmp
mov
cmp
xchg
into
add
xor
mov
lcall
lds
sbb
pop
inc
and
adc
cmp
jge
std
mov
dec
pop
cmpb
adc
adc
add
movsb
popa
arpl
mov
sbbl
jnp
dec
mov
iret
xchg
pop
daa
cwtl
push
mov
jl
nop
inc
lcall
push
cmc
popf
jmp
ror
rorl
dec
add
push
xchg
sbb
cltd
js
inc
rcll
push
dec
out
stc
xor
dec
adc
leave
lret
ret
pop
repnz
cmp
scas
mov
dec
call
fists
stos
push
and
adc
push
pop
mov
xor
mov
mov
loope
cmpsl
push
sbb
enter
mov
jno
push
pop
xchg
ja
rorb
push
mov
mov
or
insb
pop
insl
pop
lods
push
dec
aam
outsl
daa
mov
cmp
call
adc
inc
xor
or
jns
out
js
cli
pop
ss
rcll
push
mov
into
ds
xchg
daa
add
push
lret
xlat
aad
addr16
int3
push
rcl
jle
or
xor
jno
add
mov
inc
inc
inc
add
test
add
mov
loopne
inc
sbb
xchg
fstl
enter
xor
pop
pop
fwait
cld
jb
outsb
fs
dec
pop
sub
sti
lret
loopne
sarb
rorb
cmp
repz
cmp
push
jge
mov
adc
adc
dec
loopne
adc
pop
add
xchg
movsl
gs
negl
mov
out
add
stc
ficomps
bound
sub
ds
es
insb
or
sarl
add
fdivs
pop
popf
inc
sbb
rcrb
xchg
mov
cmp
jp
xchg
call
dec
jle
aaa
cmpl
sarl
lds
push
xchg
jnp
loopne
std
sub
popf
dec
and
std
pop
into
sbb
in
dec
in
lret
scas
aas
lcall
fisubrs
gs
push
shrl
out
ficoml
dec
cmp
mov
cli
xchg
iret
inc
xlat
sub
inc
bound
into
jnp
daa
lcall
enter
ret
and
lcall
ljmp
int
and
addr16
jo
or
into
push
or
ja
dec
xchg
test
or
push
or
or
stc
mov
cmp
dec
enter
jmp
aaa
int3
jp
jp
lds
mov
or
dec
jo
dec
inc
ds
or
push
lcall
add
and
pop
xor
push
jo
mov
and
mov
in
xor
xchg
push
cltd
shrb
ret
cltd
jnp
pop
dec
adc
sub
popf
inc
jbe
mov
inc
je
testl
imulb
mov
cli
push
js
pop
adc
mov
sar
xchg
cwtl
mov
leave
dec
cmpsb
cmp
and
xchg
mov
incl
fmulp
rcll
flds
mov
jnp
push
inc
scas
xor
xchg
xchg
test
adc
add
call
sbb
dec
dec
push
aas
mov
pusha
adc
das
cmc
sar
ret
sti
test
addr16
mov
ret
addr16
lcall
push
sub
roll
push
inc
jns
aad
mov
ds
and
scas
in
mov
cwtl
xchg
add
outsl
jle
popa
xor
mov
jmp
int
push
push
bound
stc
xchg
movl
repz
scas
enter
push
lods
jp
push
incb
icebp
dec
ficoms
js
daa
adc
add
cwtl
mov
insb
cmp
outsb
sbb
daa
sub
cmp
in
dec
rcll
subb
inc
dec
push
add
dec
andb
or
or
sub
fiadds
cld
sbb
xor
dec
jae
shll
dec
bound
push
testl
or
fidivs
ret
xlat
addr16
lds
mov
mov
aam
cmpb
imul
cmp
inc
xlat
jle
mov
dec
lret
xchg
rclb
mov
jp
ret
daa
mov
mov
pushl
jb
push
pop
jnp
pushf
lds
test
cwtl
inc
pop
inc
mov
shll
fcompl
enter
enter
int
push
imul
enter
mov
mov
iret
mov
decb
fisubrs
push
repz
dec
cli
and
push
enter
iret
xor
je
cltd
int3
enter
adc
faddp
int3
dec
mov
idivl
enter
push
pop
adc
nop
push
iret
cwtl
jns
iret
sub
mov
std
sbb
xor
add
or
push
mov
out
fstpt
xchg
stos
sbb
mov
into
dec
push
loop
enter
adc
jb
mov
mov
addr16
xchg
outsl
add
jbe
fdivrs
sub
imul
dec
sub
cmp
push
adc
stc
dec
cs
add
inc
jge
daa
rolb
mov
add
imul
rol
mov
sahf
sub
leave
sub
xchg
jae
lret
leave
into
xor
scas
mov
jns
ja
adc
cmp
push
mov
mov
cld
cmp
insb
jns,pt
arpl
ss
inc
pop
ljmp
mov
mov
jmp
dec
mull
pop
xor
and
inc
fidivrs
push
pop
ljmp
pop
cld
jp
ret
add
mov
cmc
add
sub
jecxz
inc
xlat
jle
lcall
imul
pusha
inc
mov
in
lret
and
dec
sbb
icebp
lds
adcl
add
cli
leave
lds
push
jp
push
in
jbe
inc
jp
leave
fwait
cmpl
adcl
ds
xchg
and
aad
xlat
iret
lret
mov
and
aam
rcr
inc
sahf
int
push
pop
in
mov
mov
mov
inc
fstps
sbbl
dec
push
insb
mov
jo
sbbl
sbb
ficoml
push
xchg
sub
out
inc
lea
fistps
adc
cmp
not
fmulp
or
les
insl
movsl
sub
loopne
pop
aaa
add
jbe
add
lds
jns
lret
repnz
push
jnp
sbb
shll
fwait
leave
jb
ret
nop
stc
loopne
push
adc
les
mov
inc
sbb
add
xchg
mov
lret
mov
pop
test
jp
or
pop
jae
lret
cmpl
jns
xor
sbb
mov
or
lret
pop
incb
mov
pop
mov
pop
out
fdivr
ljmp
shrl
fdivs
jg
inc
adc
mov
mov
xchg
inc
sarl
xor
int3
test
or
sub
pop
dec
push
aaa
nop
cmpsl
mov
jmp
mov
sbb
xchg
mov
cmpsl
add
sub
sub
fwait
pop
sahf
lds
sti
in
xchg
mov
jno
mov
cmp
test
mov
mov
insb
mov
rcr
fildll
outsl
and
leave
stos
int3
push
jl
mov
sbb
adc
sub
adc
outsl
sbb
lods
jnp
mov
outsl
inc
push
xchg
push
gs
faddl
arpl
push
leave
test
rorl
fadd
movsb
cmp
pop
push
mov
scas
inc
xor
xchg
enter
test
not
push
jne
leave
lcall
cmp
test
and
in
lods
dec
dec
les
pop
nop
loope
push
fs
repz
sbb
pop
mov
test
insl
push
cmpsb
int3
leave
out
scas
pop
clc
xor
sub
cmp
test
fwait
xchg
adc
dec
ds
loopne
jmp
inc
mov
insl
cmp
mov
lds
cmp
enter
push
or
and
add
xlat
mov
test
lcall
shll
ret
cmp
clc
pop
push
pop
fld
mov
cmp
data16
iret
xlat
das
dec
ret
js
or
orb
mov
inc
es
inc
mov
es
frstor
jp
xlat
out
roll
hlt
jno
ds
push
int
jmp
cwtl
xchg
xor
repnz
test
pop
pop
mov
mov
js
push
mov
scas
lods
jne
xlat
js
aam
cmpsb
xlat
xchg
leave
repnz
pop
mov
lcall
dec
sbb
push
imul
xor
mov
cmp
out
push
jnp
pop
or
lds
shrl
xchg
cmp
inc
movsl
mov
test
or
ja
add
and
add
movsb
aaa
mov
or
out
in
or
int3
xlat
loopne
push
xlat
add
stc
and
cmp
insb
insb
fdiv
loop
sbb
inc
divb
push
or
fistl
lds
jp
int3
push
xchg
bound
mov
and
mov
rcll
fisubs
or
push
aas
mov
jmp
inc
mov
xor
dec
cmp
rcr
scas
cltd
popa
lods
test
cld
sbb
out
inc
or
pop
in
mov
fldenv
mov
sarb
or
imul
jbe
rclb
out
mov
cwtl
add
or
cmp
inc
dec
stos
push
gs
pop
mov
aam
cmp
mov
cld
and
and
scas
or
shrl
push
fucom
ret
fwait
pop
out
test
ret
outsl
aaa
adc
xlat
mov
movb
mov
inc
add
mov
in
xchg
mov
and
sbb
lds
mov
sub
test
cmp
and
insl
pop
clc
lahf
jne
lds
out
mov
enter
out
cmp
or
xchg
mov
ret
mov
or
lock
leave
leave
xor
xor
leave
shlb
test
rcl
cmp
cwtl
mov
fsubl
xor
jno
fdiv
data16
fidivrs
mov
mov
and
cmp
push
das
sbb
xchg
pop
mov
sti
push
jle
call
or
cld
dec
or
push
mov
dec
test
rcl
pop
mov
mov
jp
jne
int
jle
mov
mov
sar
push
push
out
and
aam
lret
and
aaa
sbb
and
or
or
mov
push
sub
push
cmp
leave
cmp
std
sub
xlat
popf
adc
mov
pop
fdivl
inc
insb
popa
sbb
push
cmp
fiaddl
jnp
mov
mov
push
pop
imul
xlat
pop
loop
les
dec
mov
outsl
rcl
cmp
cwtl
xlat
repnz
std
pop
pop
cmp
mov
lcall
or
pop
sub
setns
or
or
jb
cmp
cmp
mov
add
imul
mov
int
pop
int3
scas
xlat
xchg
dec
jb
dec
iret
sbb
dec
jl
lret
imul
addr16
sahf
enter
fldcw
rcrb
mov
xor
imul
xchg
ret
std
ds
and
movsl
sbb
jno
sub
pop
jmp
push
test
or
imul
jmp
add
or
jg
andb
test
xlat
pop
iret
push
mov
ret
aad
jb
int3
ja
into
fucomip
rclb
mov
dec
xor
iret
pop
stc
int3
jl
icebp
cwtl
cltd
aas
and
iret
xchg
and
inc
test
int3
mov
xchg
adc
add
or
leave
push
pop
movsb
dec
lret
cwtl
sbb
inc
sbb
xchg
loopne
pop
pop
mov
fisubl
loopne
add
push
mov
push
sarb
test
lods
nop
push
lcall
xor
rcr
xor
jl
repz
aam
test
inc
or
fwait
aad
jge
mov
mov
add
nop
sbb
xchg
cmovne
das
arpl
dec
push
ljmp
xchg
sub
loopne
std
jo
mov
jl
fldt
loopne
push
sbb
push
xor
and
inc
test
bound
xchg
jb
xor
enter
cmp
loopne
dec
repnz
mov
lret
sti
mov
int
clc
orl
or
rolb
sbb
dec
dec
or
cmp
stc
mov
push
loope
sub
nop
pop
lret
int3
mov
and
leave
sbb
mov
das
pop
cwtl
push
sarb
xor
push
dec
mov
arpl
add
lahf
pop
mov
sub
sub
inc
lock
xchg
fimull
jno
mov
xchg
aaa
dec
xchg
dec
outsl
jnp
sbb
test
push
and
popf
adc
xlat
pop
cld
cs
and
mov
loope
mov
rcr
and
push
cmp
jnp
rol
xorb
test
and
mov
out
int3
cltd
add
movsl
arpl
mov
fsubs
stc
push
ret
or
push
pop
leave
sbb
xlat
cmpsb
fnstcw
es
sbb
push
lcall
loopne
int
movl
mov
aad
xchg
or
inc
xlat
pop
out
leave
in
mov
push
stos
ja
rcll
lock
xchg
dec
cwtl
ds
int
push
leave
push
jno
mov
les
xlat
enter
aam
adc
inc
push
sti
icebp
mov
aam
xor
dec
mov
jno
inc
inc
fmull
jg
add
jno
mov
addr16
pop
mov
adc
mov
xor
pop
test
roll
adc
lcall
lods
inc
cmp
aad
mov
add
fcmovb
mov
or
repnz
ret
mov
insb
push
ss
repnz
xchg
mov
pushf
xchg
rorl
xor
jmp
gs
cmp
vpmaxub
add
ret
pop
add
cld
jbe
shlb
insl
xchg
push
cld
jae
in
aam
mov
test
ss
jbe
das
xor
rolb
or
mov
rcl
mov
outsb
aad
cmp
fcoml
and
push
xchg
dec
and
pop
push
test
popa
insb
pop
andb
stc
mov
sbbl
loopne
dec
push
cs
adc
push
sub
xor
mov
stc
pushf
dec
dec
xchg
xchg
mov
subl
mov
push
push
mov
or
xchg
jmp
add
mov
push
ficoms
aam
mov
add
popf
popf
stc
scas
mov
ret
mov
mov
fidivs
cld
jle
or
push
sbbb
mov
push
hlt
flds
rcrb
sub
mov
sub
subl
ret
jl
sbb
adc
sub
xchg
fimuls
daa
mov
xor
repnz
divl
jno
add
and
rorl
jl
sbb
and
pop
pop
scas
js
sub
xor
in
push
ret
pusha
inc
sbb
sbb
inc
push
dec
inc
cmp
inc
aaa
testl
cmpsl
imul
sbb
imul
jae
xlat
test
int3
dec
les
int3
pop
sub
leave
es
ret
mov
jns
jb
jmp
or
cwtl
sub
xor
test
les
cltd
or
hlt
or
shlb
js
int3
decb
pop
add
mov
jmp
or
cmp
sahf
mov
daa
inc
pusha
push
leave
ljmp
mov
daa
inc
push
subb
push
push
pop
imul
xchg
jecxz
iret
mov
mov
lods
cmpsb
insl
dec
stos
or
mov
outsb
mov
cwtl
into
movsl
or
fldcw
mov
pushf
dec
stc
jb
pop
pop
mov
mov
and
enter
cmc
data16
enter
lods
testb
adc
jmp
or
add
push
cmp
pop
or
or
enter
add
push
in
pushf
test
inc
stc
inc
mov
jmp
test
cmpsl
mov
mov
stos
cmpsl
fildl
mov
inc
ljmp
adc
dec
fwait
sbb
push
mov
push
int3
adc
lea
xchg
mov
ror
int
dec
lret
addr16
call
lret
int3
stos
lret
pop
cltd
out
push
jmp
sub
sub
into
push
xchg
mov
imul
fstpt
xor
mov
xchg
xor
sbb
loop
xlat
mov
mov
push
jb
add
incb
sub
jmp
daa
aam
push
adc
loopne
add
mov
test
inc
movsb
sbb
xlat
dec
mov
inc
or
pop
push
fidivs
xor
popa
jnp
adc
movsl
inc
ljmp
xor
imul
xchg
push
pop
enter
mov
or
arpl
adc
mov
maxps
add
jp
data16
mov
push
pop
fsubr
sbb
out
mov
decl
in
pop
cmpl
xorb
push
mov
dec
sbb
rcrl
cmp
pop
cmpsb
repz
in
push
mov
mov
or
dec
xor
mov
cmovo
int
repz
int
sub
mov
adc
into
push
addl
xor
into
and
notl
ret
bswap
sti
clc
mov
in
enter
int
push
loopne
xchg
inc
mov
clc
ljmp
push
sub
jmp
imul
sarl
clc
out
stos
and
or
jne
rcl
fs
mov
jno
adc
or
cmpsl
sbb
mov
outsb
push
arpl
jns
cmp
push
lret
jnp
mov
cwtl
push
dec
popf
mov
adc
inc
inc
xchg
xchg
jp
nop
or
loopne
push
pop
push
cmp
ret
xchg
jnp
stc
cld
mov
leave
aam
ret
dec
pop
xor
jle
das
inc
mov
pop
loop
int
xlat
shll
mov
jne
mov
mov
mov
outsb
pop
and
adc
add
int3
lret
in
dec
insb
dec
mov
xchg
ds
push
iret
sti
ror
test
popf
jo
rclb
xorl
mov
call
xlat
add
and
data16
adc
jae
shr
jo
cwtl
mov
mov
ss
jae
jbe
sbb
cli
push
add
fcomps
pop
outsl
dec
sub
add
inc
dec
cwtl
cld
call
inc
ret
out
call
dec
int3
hlt
ds
icebp
ljmp
push
rol
push
repz
push
mov
mov
idivb
imul
xor
xchg
jl
iret
jmp
ljmp
cld
leave
mov
int3
fidivrl
gs
inc
stos
in
fbld
push
dec
push
mov
ljmp
sub
or
push
in
pop
cmp
pusha
fdivl
push
popa
xor
cmp
push
imul
lret
rorb
xchg
mov
test
push
int3
push
dec
add
in
jecxz
js
fisubrs
aad
fistpll
xor
andl
es
out
sub
leave
mov
repnz
xor
roll
add
iret
xchg
int3
cwtl
sbb
dec
xlat
dec
xchg
lcall
out
shl
je
jl
sbb
mov
aas
add
into
push
sub
push
mov
ror
jge
movsb
mul
mov
jle
cld
dec
mov
scas
in
dec
push
xor
call
inc
pop
xor
inc
pop
lods
into
stos
ret
mov
sub
cwtl
push
in
xor
dec
xor
addl
xchg
jg
imul
imul
adc
das
aad
cmc
push
jmp
pop
xlat
in
mov
fcoml
sub
shrl
pop
mov
cmp
andl
adcb
testl
sub
and
pop
sbb
mov
loope
gs
mov
or
dec
aad
jecxz
push
leave
ja
sub
loopne
push
cwtl
js
dec
lods
fildll
mov
sub
daa
xlat
dec
loop
les
and
pop
enter
lcall
fldcw
fcoms
jae
in
mov
jl
dec
push
pop
add
sbbl
int3
sub
test
aas
pop
movl
push
loop
xchg
adc
mul
inc
add
out
push
jg
lea
out
cltd
stc
pop
scas
xchg
adc
mov
enter
adc
rcrb
sub
rcrb
ja
sub
sub
mov
jle
setnp
pop
imul
sub
push
mov
mov
push
adc
hlt
cmp
sub
lds
shrl
mov
xorb
adc
aad
dec
cmp
insb
cwtl
inc
es
outsb
stc
cmp
pop
mov
inc
ja
inc
inc
cmp
test
cwtl
push
sbb
add
mov
mov
leave
sbb
pop
mov
rorl
ret
cs
mov
adc
push
sub
aad
leave
ja
ljmp
movsl
add
cmp
inc
xor
leave
aaa
std
js
dec
and
jns
cmp
adc
pavgb
adc
xor
mov
jmp
xorb
outsb
aas
fxch
mov
pop
push
jne
mov
xlat
and
add
gs
push
or
int
fwait
inc
push
test
mov
sub
sbb
js
arpl
in
bnd
int3
cld
jl
shll
cmp
jns
xchg
repnz
cmp
ret
popl
ret
cmp
adcb
pop
mov
mov
ljmp
jnp
cwtl
jb
nop
pop
push
stc
testl
or
pop
sti
push
inc
test
jl
push
dec
popf
adc
loope
xchg
es
sbb
mov
mov
roll
xchg
xchg
ja
andb
xorb
aam
add
int
sub
in
mov
cld
movsl
jo
and
ret
push
push
lretw
scas
push
cli
rcrl
sub
push
inc
jmp
ret
popf
ret
jns
or
ret
mov
xor
push
add
hlt
xlat
fadd
and
test
lea
mov
fsubl
lret
popa
aad
test
add
lcall
cmpsb
jle
nop
enter
cmp
mov
int
sti
lods
ret
scas
push
mov
lods
cli
lcall
movsl
repz
xchg
jp
or
rol
sbb
fisubrl
mov
mov
push
addr16
or
pop
gs
icebp
jbe
mov
mov
cmp
aad
iret
inc
dec
iret
mov
add
rolb
jbe
dec
shll
stos
inc
xchg
push
inc
aad
std
ss
sbb
inc
repz
dec
sub
std
mov
xchg
adc
fimuls
in
add
or
iret
pop
add
div
lcall
lcall
push
in
push
and
mov
fistpl
mov
cmp
push
jge
fildl
fcoml
push
xchg
aam
inc
sbbl
enter
inc
gs
int
leave
inc
and
dec
add
mov
ret
faddl
movsl
pop
js
int3
ror
sbb
cmp
jmp
faddl
push
fcompp
imul
or
jae
pop
sbb
lcall
movsb
lods
mov
loopne
imul
inc
outsb
mov
test
pcmpeqd
dec
mov
js
inc
aam
ret
and
fnsave
std
lcall
call
lods
stos
insb
outsb
mov
cmp
ds
push
push
rcll
push
lcall
cmpsb
addr16
push
mov
rorl
push
inc
in
addr16
inc
int3
enter
jge
add
mov
shlb
mov
test
mov
pop
inc
cwtl
dec
or
push
inc
insb
stos
jmp
pop
jae
dec
dec
dec
mov
sub
cmp
lret
lret
fidivs
repnz
sub
ret
int3
xchg
add
clc
and
nop
rorb
int
mov
mov
out
outsb
mov
sub
mov
jo
cmp
push
pop
outsb
dec
imul
push
jmp
mov
mov
mov
outsb
jo
shrl
movsb
jb
pop
test
jb
les
cmp
lea
inc
mov
lret
mull
lret
enter
int
faddl
cld
jnp
orb
xor
fwait
lret
enter
ljmp
or
inc
xlat
pop
andnps
push
adc
movb
repnz
inc
inc
les
shr
mov
ja
cmp
fisttpll
adc
imul
iret
cmpsl
lret
imul
sti
mov
or
dec
jl
leave
cmp
pop
ss
addb
pop
outsb
enter
push
pop
inc
xchg
adc
sbb
push
mov
lret
adc
std
roll
enter
adc
rol
mov
dec
lcall
and
mov
xor
in
push
test
dec
shll
mov
lea
add
shll
mov
in
mov
xlat
sbb
ficoml
mov
loopne
pushf
dec
stos
cld
dec
dec
xchg
dec
sub
insl
cltd
push
pushf
mov
mov
push
or
mov
push
cmp
jno
iret
shlb
mov
jl
mov
mov
dec
test
int3
inc
inc
adc
faddl
test
decb
imul
fiaddl
addl
xchg
mov
pop
inc
scas
ret
lods
cmp
arpl
xor
aam
push
lds
or
sbb
sbb
dec
popf
xchg
jo
pop
jge
xor
imull
dec
lods
stos
or
imul
pusha
imul
mov
ret
xchg
push
dec
adc
push
cmpsl
sbb
pop
xchg
fcom
sti
in
pop
pop
mov
cmp
mov
xor
hlt
add
cmp
jne
inc
iret
jecxz
rorb
imul
dec
movl
sarl
xchg
popf
cmp
push
leave
sar
mov
xor
push
lretw
movsb
mov
fmull
mov
fwait
jp
push
stos
and
push
adc
es
pop
sbb
mov
mov
cmp
loopne
lock
sub
xor
ficomps
outsb
rorb
xor
into
bswap
lret
xlat
loop
cmp
aad
mov
push
jg
dec
daa
xchg
push
addr16
or
loop
jmp
inc
popa
sub
mov
movsb
pop
jmp
xchg
loopne
push
add
jmp
add
cmp
adc
mov
std
sbb
sarl
pop
gs
dec
xorl
dec
data16
lret
imul
fnstenv
push
mov
fistl
mov
imul
mov
repnz
dec
loop
xchg
cmp
push
rcrl
pop
movsl
ror
ret
sbb
fs
mov
dec
enter
xchg
repnz
aam
push
aaa
repnz
inc
inc
push
xchg
pop
shll
pop
ja
xchg
cmp
lret
lcall
sbb
lret
jge
push
gs
cmp
jbe
sub
cmp
xchg
aam
mov
xor
ljmp
es
mov
mov
cmp
or
icebp
inc
aam
into
call
sti
mov
sahf
fbld
mov
sbb
insl
into
adc
std
mov
imul
loopne
aaa
mov
cmp
cmp
jp
jns
mov
mov
jl
dec
loop
dec
pop
xlat
inc
inc
fs
xchg
mov
aaa
sti
xor
repnz
cld
rsqrtps
sahf
or
pushf
paddw
in
dec
ljmp
rol
bswap
add
jo
pop
daa
ja
dec
enter
ljmp
pushf
ja
emms
bound
rol
sub
sub
adc
add
in
repz
mov
cwtl
jno
shrl
test
std
dec
xchg
roll
jns
mov
push
xchg
fwait
xor
mov
mov
fucomip
test
cmp
dec
lods
xor
jne
sbb
sub
sub
push
aaa
dec
fadds
sbb
pop
insb
jecxz
gs
aad
inc
inc
call
or
negb
cmp
cwtl
lcall
mov
mov
add
or
mov
std
cmp
jg
popa
lahf
into
push
das
cmp
cmp
sbb
es
sub
pop
inc
aam
inc
mov
lds
leave
stos
shrl
aam
dec
outsl
aam
mov
loope
rclb
test
fwait
xchg
pop
mov
in
push
in
int
jae
test
outsl
fimull
cmp
aam
shll
sub
sbb
xlat
jb
dec
fsts
cmpsl
inc
test
lock
inc
imull
and
cld
fs
jl
andl
push
into
iret
add
sub
cmp
sub
leave
repnz
inc
sub
pop
mov
leave
call
mov
sub
sarl
bound
adc
data16
or
fwait
lock
loope
aam
leave
bnd
cmp
lock
jb
xchg
xor
rcrl
loopne
imulb
nop
pop
jae
mov
fisubs
mov
fistpll
stc
add
xchg
or
mov
add
mov
mov
ret
cmp
or
ret
add
push
xchg
sub
loopne
popf
sbb
rcl
in
jbe
aam
daa
xchg
sbb
lds
inc
dec
js
cmp
or
leave
sub
xlat
aad
add
add
mov
jnp
ss
cltd
clc
mov
lods
add
mov
jl
fidivs
repnz
into
dec
add
xchg
mov
add
xchg
dec
pop
imul
mov
push
cmp
nop
movsb
mov
int3
xchg
xor
test
les
lcall
hlt
sbb
mov
addb
incl
lret
jno
sbb
stc
mov
iret
cld
sub
ljmp
int3
xlat
cmp
cwtl
xchg
enter
clc
sbb
mov
mov
out
cmp
sbb
mov
lret
and
mov
popa
jp
sub
arpl
cmpsl
dec
test
adc
and
shll
jle
and
mov
pushf
push
js
mov
outsb
mov
sbb
js
cs
testb
pushf
ret
pop
adc
sub
cld
and
pop
inc
mov
addr16
popf
mov
iret
ret
and
or
int3
mov
cmpsb
pop
mov
enter
push
test
stos
mov
xorl
rcl
aam
jp
push
dec
add
mov
cwtl
stos
jne
insl
or
jbe
mov
adc
xor
stos
mov
push
fcomp
cwtl
addl
stc
in
push
mov
in
cmp
push
jb
sti
jbe
cltd
ret
mov
and
test
lahf
adc
push
shlb
xor
std
sub
aam
aad
push
xor
fcompl
rorl
stc
xlat
out
xchg
xchg
mov
popf
imul
or
pop
add
stos
out
add
mov
adc
mov
faddp
push
dec
push
pop
pusha
out
in
push
aad
push
out
scas
rcrl
dec
ret
test
add
add
or
test
enter
test
mov
ret
adc
pop
add
aam
push
inc
movsl
pop
jbe
sbb
test
inc
incb
dec
or
test
xchg
mov
xlat
xchg
loop
int
fcomp
and
leave
adc
push
dec
test
dec
lds
mov
sub
pusha
stc
jl
jge
pop
js
push
jmp
mov
add
inc
pop
or
xchg
dec
inc
decl
lods
les
inc
jae
lds
mov
fsubrp
lret
or
sbb
add
dec
rcrl
or
es
cmp
cmp
xchg
adc
pop
add
sub
dec
sub
lods
mov
mov
outsl
dec
loopne
or
mov
xchg
mov
mov
mov
imul
push
loop
mov
insl
jmp
and
mov
fcmovu
pop
repnz
shl
movsl
jecxz,pn
jb
mov
jnp
cmpsl
scas
test
xchg
lcall
aam
stc
jl
mov
cltd
pop
jmp
in
inc
test
mov
mov
js
test
pop
adc
test
mov
inc
pop
dec
jns
xchg
test
inc
sti
lret
aas
fdivrs
cmpsb
mov
sarl
in
and
xchg
addl
mov
arpl
lahf
push
add
into
add
clc
jae
mov
push
cmpsl
mov
cmp
mov
imul
sub
insl
in
shll
pop
and
xor
or
sahf
outsl
lcall
outsl
jae
mov
cltd
mov
cmp
inc
pop
repnz
xchg
inc
sbb
mov
call
and
rorl
inc
pushl
jns
stos
les
arpl
mov
cmovb
or
jo
pop
shrl
xor
jae
xor
leave
mov
jg
mov
cltd
aam
into
jp
repnz
and
pop
testb
jmp
add
jp
mov
push
adc
sbb
fldenv
imul
lea
jbe
aaa
sbb
dec
loop
or
in
iret
xchg
xchg
sub
sbb
faddl
mov
mov
clc
xchg
enter
push
scas
rcrb
lods
jl
scas
push
aaa
or
jae
add
gs
xor
cld
rorb
cli
ret
into
or
adc
jno
mov
xchg
dec
int3
clc
xchg
roll
rcll
jge
dec
push
adc
cs
mov
mov
add
cld
jecxz
int3
insb
push
clc
mov
push
loopne
xchg
dec
idiv
enter
repnz
aas
loope
xor
sub
push
ljmp
lock
enter
out
lret
sbb
adc
jae
mov
or
cwtl
adc
push
data16
mov
lcall
in
mov
iret
mov
mov
testl
das
sbb
addr16
lcall
sahf
pop
pop
xchg
xor
pop
sbb
cmp
stos
push
out
dec
cmp
sbb
in
push
ljmp
push
dec
xor
ret
mov
pop
dec
sub
mov
jnp
add
loopne
dec
dec
add
xchg
jp
cmp
cmp
rorb
les
mov
test
or
fisttps
ret
inc
push
xchg
inc
jl
pop
cltd
in
jl
inc
push
out
fiaddl
push
call
in
sub
nop
mov
add
test
lret
dec
leave
lcall
fsubrs
dec
hlt
les
mov
int3
mov
out
loopne
sub
lea
dec
mov
sarl
and
addr16
fcom
inc
imul
mov
orl
mov
call
or
mov
pop
xor
sub
add
dec
jle
mov
loopne
aam
mov
sub
push
fildll
leave
fldl
push
mov
push
sti
dec
cmp
dec
lret
lods
mov
mov
lea
dec
cld
sar
push
pop
mov
enter
fcompl
push
fld
xchg
mov
jne
popf
fidivl
cld
clc
lods
or
add
rorl
cwtl
xlat
repnz
movsb
test
cltd
adc
loopne
inc
jae
cld
or
movb
outsb
lret
inc
sbb
cmp
stos
xchg
inc
ds
mov
lret
mov
test
xor
cmp
pushf
rcrl
or
jne
or
fs
push
js
leave
fmull
fsubs
lret
sti
jmp
arpl
jp
lods
pop
push
sub
jns
cmpsl
scas
mov
loopne
iret
dec
lock
and
test
inc
xchg
mov
in
icebp
xlat
cmp
mov
mov
cmp
mov
in
lret
rcll
out
test
sub
shlb
dec
stc
ja
mov
xor
xchg
jl
jle
or
or
scas
jno
stc
xchg
mov
jl
pop
sbb
mov
and
imul
ret
jg
aad
cmp
jno
ds
sbb
push
or
outsl
ret
cmp
sarl
dec
mov
pop
repz
add
fcomps
jne
ror
mov
sub
loopne
push
xchg
xchg
sub
mov
jmp
cltd
mov
in
xchg
adc
faddl
repnz
pusha
mov
outsb
adc
mov
pop
shlb
js
xor
cmp
xlat
prefetchwt1
or
jae
push
jmp
sbb
sbb
fsubrs
into
in
or
sub
pop
nop
rol
and
insl
testl
rclb
lods
cs
lret
leave
fidivs
aas
dec
push
xlat
jno
or
mov
jle
push
stos
test
sub
xchg
cmp
sub
cmp
dec
push
sub
inc
xchg
jmp
xor
adc
fcmovne
adc
adc
aad
repz
test
stc
roll
lods
test
push
in
xchg
iret
pop
xchg
sti
fld
or
or
jb
push
in
xchg
adc
sbb
in
fidivs
xor
xchg
pop
lret
xchg
mov
push
leave
xchg
in
dec
mov
push
in
shll
jmp
xor
mov
cwtl
adc
ja
fcompl
push
fisubrs
in
ja
dec
mov
sbb
ret
stc
add
sbb
cltd
jmp
adcl
sub
rcrl
fld
rcll
stc
les
hlt
and
lcall
stc
lds
in
pop
jno
mov
mov
mov
cwtl
aaa
jecxz
adc
pop
lret
push
sub
and
js
and
and
sub
arpl
mov
pop
sbbb
rcr
mov
jge
imul
push
and
test
loop
xor
test
repz
mov
cmp
scas
push
ret
mov
push
leave
mov
push
shll
dec
shrb
sub
mov
int3
rcr
xor
lods
mov
mov
sarb
add
loopne
lcall
dec
pushw
push
loope
flds
push
in
bound
int3
dec
loop
dec
ss
repz
mov
and
bound
ret
cli
ds
inc
test
mov
test
lds
inc
insb
inc
sbb
jbe
dec
mov
sbb
iret
mov
or
push
jle
loopne
xor
iret
jns
mov
cmp
data16
jbe
cs
lods
rol
das
out
inc
sbb
cli
nop
pop
ret
sub
cmp
mov
dec
rolb
aam
push
rolb
pop
sbb
out
or
fbstp
jno
jbe
lea
in
mov
gs
fadd
cwtl
call
movsl
mov
push
mov
test
out
inc
mov
roll
std
rcll
mov
jnp
mov
or
cmp
and
cmpl
out
loop
push
pusha
iret
lret
pop
cwtl
pop
sub
mov
rorl
and
xchg
ret
int
imul
insl
adc
ljmp
inc
lret
mov
push
rcrl
test
gs
push
pop
icebp
ljmp
iret
jb
insl
push
and
test
shll
rcrl
imul
mov
popf
das
push
rolb
push
enter
xor
xchg
xchg
push
ret
sbb
jne
pop
rcrl
jmp
shl
jb
call
sbb
dec
mov
lret
xor
mov
lret
adc
fiaddl
mov
mov
leave
pop
cli
push
xchg
lds
lcall
xorb
push
enter
mov
call
clc
jge
jge
cmp
sub
xor
jae
popa
cmp
pop
pushl
mov
dec
aad
pop
dec
mov
shlb
fcom
push
xor
mov
int3
arpl
xor
dec
sarl
or
rcll
xchg
int3
rcll
dec
ret
into
mov
out
push
dec
push
dec
pop
push
sub
test
pop
sbb
or
inc
mov
cs
add
cld
push
jb
jne
inc
push
cltd
mov
cmpsb
dec
mov
int
mov
rcr
jae
sbb
cmpl
lods
jb
dec
jp
loopne
and
nop
movsl
jg
int
pop
pop
pusha
mov
mov
movsl
adc
repz
push
xor
enter
pop
dec
ret
and
push
stos
or
aam
mov
and
push
jbe
cmp
mov
test
mov
xchg
add
inc
aaa
or
shrl
lods
xchg
fsubr
call
dec
enter
cwtl
xchg
je
imul
mov
iret
push
push
pop
pusha
xlat
enter
int
push
sub
xchg
jge
popf
fcom
dec
mov
or
jle
cmp
cs
call
inc
and
cld
jl
dec
mov
pop
aam
cwtl
and
loopne
mov
push
std
xor
mov
stos
ljmp
outsb
cmpsb
test
jne
and
xchg
mov
push
inc
repnz
mov
inc
jl
fmull
mov
loope
xchg
leave
push
pop
iret
test
cld
gs
cmp
mov
mov
jb
loope
cli
xchg
loopne
dec
sbb
mov
imul
repnz
adc
fadds
lcall
sti
add
xchg
lcall
lods
out
mov
jl
sbb
ret
and
enter
pop
in
adc
jle
int3
sarl
in
fcmovb
ret
cmp
add
mov
out
xorb
std
aam
fldl
jb
nop
leave
fimull
mov
cmp
cmp
push
sub
fld
cmpsl
loopne
outsb
flds
xlat
sbb
fistpll
sbb
fnsave
mov
mov
inc
jp
jmp
inc
sub
mov
scas
mov
cmp
mov
fwait
imul
xchg
pop
fstl
push
rorb
sbb
mov
jb
mov
add
mov
orb
lods
aam
int3
jns
das
xor
jb
inc
fldt
push
pushf
cmp
loope
push
pop
push
pop
movsl
call
jo
icebp
movsb
mov
lds
lods
mov
loopw
icebp
daa
xchg
mov
jnp
mov
jns
loopne
out
pop
test
cmp
push
dec
cmp
mov
test
ret
push
push
cld
adc
dec
arpl
shl
mov
flds
cld
outsl
cwtl
stc
dec
xor
adc
and
add
cli
jnp,pn
xlat
jge
push
inc
addr16
roll
mov
xchg
push
fisttps
dec
sub
aas
inc
in
in
int
subb
lahf
aam
ficomps
insl
sahf
lret
xlat
sub
hlt
pop
les
mov
xchg
inc
mov
fisttpll
xlat
cld
xchg
das
xor
lahf
sbb
test
out
aam
fldt
inc
or
push
mov
cld
in
and
push
sub
or
rcr
cmp
jae
jg
js
inc
mov
mov
mov
fidivs
fwait
inc
aam
add
loope
mull
ss
xchg
or
repz
jg
sbb
xchg
fldcw
and
mov
xchg
mov
pop
inc
insb
rcr
rcrl
pop
xlat
adc
sub
pop
mov
sarb
jle
push
sar
mov
mov
jle
movsb
xor
shr
sbb
sub
adc
jge
loope
dec
das
int
in
je
stos
pop
cli
inc
mov
out
mov
shr
fdivrs
push
jns
mov
ja
or
dec
loopne
sbb
sub
dec
xlat
xorl
dec
mov
mov
jl
and
push
cmpsl
push
mov
sub
aad
mov
xor
test
les
lahf
movsb
cmp
mov
xlat
and
jl
lods
mov
add
adc
fistpl
xchg
test
pusha
mov
pop
dec
cmp
fs
je
popf
xchg
push
insl
add
jmp
xchg
mov
addl
cmp
jo
rorl
xchg
dec
into
aam
movsb
inc
movsl
mov
imul
mov
jecxz
data16
sub
and
pop
lret
lret
arpl
es
insb
xor
mov
xchg
cmc
jae
inc
ds
fnstcw
insb
repnz
or
jl
pop
repz
pop
stos
xchg
pop
sub
adc
mov
in
pop
adc
rolb
int3
addl
sahf
sti
pop
les
ss
inc
push
jo
sbb
in
aad
push
rclb
loopne
sub
lret
mov
fdivr
ss
lret
aaa
or
xchg
daa
lret
push
sbb
mov
push
mov
loope
xor
and
xchg
adc
jl
fwait
ja
repz
hlt
mov
adc
std
xchg
mov
adc
mov
cli
fdivl
push
mov
loopne
adc
add
in
mov
push
add
fidivl
ja
in
dec
out
imul
aaa
add
mov
scas
dec
push
popf
mov
push
inc
xchg
cmpsb
andb
sbb
sub
mov
mov
cmp
sbbl
mov
lret
fmuls
push
push
jle
mov
leave
jns
jae
les
mov
repz
mov
loope
mov
call
lods
in
mov
movsb
daa
mov
add
popf
outsb
push
aas
stc
mov
popf
jecxz
mov
int3
push
dec
cmp
pop
mov
xchg
in
mov
testl
mov
or
push
mov
daa
dec
daa
mov
inc
xchg
js
jb
adc
pop
dec
cmpsl
stos
xchg
out
mov
lcall
mov
inc
xlat
and
dec
push
shlb
pusha
or
sbbb
imul
inc
pop
cmpsl
aam
dec
mov
into
pop
repnz
fists
clc
mov
push
or
ja
adc
mov
xchg
or
lods
idivl
psllw
das
int3
mov
fisubrs
test
dec
push
std
stc
call
push
dec
push
cli
stc
rcrb
dec
xchg
insb
shlb
push
repz
les
arpl
icebp
sysret
mov
sbb
movsl
shll
fdiv
stc
bnd
sub
leave
jbe
enter
gs
jbe
sbb
xor
sbb
jbe
mov
xor
adc
cwtl
in
adc
sub
sbb
clc
iret
and
loope
incl
jp
mov
sbb
cmpsb
lret
repz
mov
fstpl
sub
push
repnz
xchg
mov
mov
sbb
cmp
dec
xchg
mov
gs
outsl
push
je
js
and
xchg
movsl
dec
jnp
pusha
mov
andnps
sub
cmpb
rcrl
es
mov
jp
adc
shrb
arpl
jmp
or
popa
loopne
xor
movsb
push
push
or
loopne
push
sahf
xchg
xchg
pop
ror
adc
lock
cmc
hlt
push
xlat
mov
sub
mov
pop
cmpb
aad
lret
push
sbb
out
test
fcoms
jnp
roll
jmp
test
mov
jle
and
and
cmpsl
sub
into
push
dec
shrl
push
xor
ljmp
bound
or
fcoml
mov
mov
push
test
xchg
roll
xchg
add
cmp
xchg
sub
ret
jge
dec
sbb
es
or
xchg
stos
int3
in
inc
data16
jle
mov
dec
addr16
shr
bnd
loopne
jp
cld
lret
push
jl
add
pop
jae
add
mov
fmuls
sbb
arpl
cmp
repnz
push
dec
fmull
stc
sbb
jecxz
adc
jb
jg
or
mov
std
rorl
or
xor
add
add
cmp
fisubl
enter
xlat
scas
pop
and
sti
cwtl
mov
out
je
mov
jo
std
loopne
jbe
xchg
movsl
add
les
xchg
jnp
loope
mov
popa
mov
imul
fiadds
xor
pop
ljmp
push
adc
mov
inc
test
ret
jno
fidivl
decl
int
into
add
push
mov
loopne
cmp
fidivl
xlat
gs
dec
inc
shlb
inc
jb,pt
push
int
addr16
into
rorl
loope
dec
xor
push
clc
xor
or
ret
insl
fcomp
je
fdivrp
test
lret
pop
cld
adc
movsb
enter
push
xchg
and
or
add
cltd
cmp
inc
fisubrs
push
xchg
mov
jge
lcall
jmp
pop
inc
push
mov
push
xor
into
iret
mov
sbb
pop
cmp
and
cmp
lds
push
xchg
sub
in
xchg
ja
call
pusha
enter
imul
sbb
push
leave
mov
shlb
mov
out
adc
sub
int
push
bound
fsub
add
cmpsb
push
bound
outsb
ret
sbb
iret
and
scas
lahf
imul
dec
lds
ljmp
js
lock
pop
mov
fsubl
xchg
inc
mov
in
jl
xchg
mov
cmp
mov
dec
add
adc
stc
cli
push
cwtl
das
adc
fsubrs
test
push
test
sarl
sbb
add
cmp
lds
add
mov
pusha
mov
jbe
inc
cmp
push
lret
push
jl
push
in
add
cmpsb
dec
xor
mov
sbb
repz
or
jae
das
imul
data16
mov
cmp
in
push
mov
adc
dec
test
test
mov
ret
xchg
jmp
mov
mov
loopne
cmpsl
add
sbb
push
lret
add
mov
xor
push
out
test
dec
mov
mov
cs
lret
int
dec
test
pop
dec
loop
mov
test
flds
cld
hlt
fmul
das
rorl
in
xchg
cmp
stc
mov
fiadds
in
xchg
cld
ja
mov
std
ja
cmp
decb
inc
sub
adc
sub
fwait
xlat
cmp
mov
lds
les
cmp
fyl2xp1
push
cmp
fnstcw
push
add
xchg
aas
xchg
mov
mov
pop
and
scas
frstor
push
stc
mov
and
arpl
dec
cld
mov
fsts
push
fcmovnbe
add
dec
cld
mov
xchg
jnp
fisttpll
cmpsl
stc
enter
add
and
adcl
sarw
aas
adc
ds
mov
fidivrl
mov
int3
jns
pop
repnz
scas
sbb
insb
lret
in
test
in
xor
lret
inc
sub
sti
pop
cmpsl
fs
fs
fnstcw
adc
and
push
xchg
or
xchg
push
sbb
mov
leave
icebp
sahf
cmpsl
icebp
mov
xchg
mov
pop
test
cltd
xchg
sbb
jno
cs
xor
nop
cld
ret
fwait
pop
sub
and
cwtl
roll
out
mov
cmp
stos
rcrb
frstor
jno
lods
in
int3
mov
xlat
mov
pop
xor
scas
sub
shl
cmp
xchg
lret
addr16
enter
sti
cmpb
push
stos
mov
popf
jge
mov
jmp
cwtl
adc
cmp
cltd
cmp
or
sbb
mov
sarl
stc
lret
push
sub
add
mov
sarb
jle
arpl
mov
push
ljmp
jb
rcrl
aam
loope
sbbb
jb
pop
pushf
sub
leave
dec
xchg
pop
fstl
fldcw
push
pop
incb
mov
movsl
das
enter
push
stc
insb
sti
jl
icebp
movsl
adc
movsl
jb
xchg
mov
fcomps
mov
jne
add
mov
lahf
ret
push
mov
mov
mov
cbtw
cmp
push
add
dec
orl
pop
adc
fadd
out
push
popf
xor
mov
das
xor
add
mov
gs
dec
mov
orl
pop
insb
addb
add
lds
sub
dec
dec
subb
fs
sub
fildll
inc
popf
jb
pop
pop
mov
out
adc
cld
sbb
and
cwtl
xor
add
stos
and
fdivl
ss
xchg
mov
xor
into
lods
xor
add
mov
sub
pop
push
mov
push
fnstcw
sarl
es
xchg
mov
iret
lods
fldenv
inc
mov
and
mov
aaa
cld
sub
imul
in
cmp
fsts
out
pop
dec
stc
bound
push
mov
mov
add
jns
sbb
xor
sbb
sbb
sti
adc
test
mov
mov
jnp
cld
repnz
aam
in
adc
pop
dec
mov
ret
mov
cld
mov
out
cltd
cmp
stos
push
lods
push
adc
mov
sub
jno
mov
stc
pop
inc
lods
xchg
int3
jae
inc
mov
and
adc
mov
lcall
cmpsl
stos
mov
sbb
xchg
mov
cmp
mov
add
lods
out
pop
mov
loop
jg
and
fsubs
dec
inc
push
or
jle
jl
aad
lods
or
fidivrl
mov
les
sub
xchg
push
int
sti
jmp
and
rolb
adc
adc
int3
adc
fcoml
xchg
iret
mov
loop
pop
xchg
pop
or
popf
mov
outsl
in
aam
cltd
aam
orb
xor
aad
orl
jmp
pop
iret
add
cmp
xlat
cmp
mov
adc
loopne
sbb
das
jbe
mov
adc
jg
cli
mov
scas
pop
mov
in
push
insl
dec
xchg
cmpsb
dec
test
inc
js
inc
stc
sbb
mov
fisttps
pop
cli
dec
bound
xlat
adcb
jecxz
aaa
outsb
sahf
stc
aam
cmp
xlat
push
cli
into
cmp
cmovae
and
clc
push
sub
mov
mov
xlat
fsubs
mov
dec
jmp
out
and
lods
scas
inc
mov
sti
push
enter
sbb
adcb
cld
arpl
or
in
or
test
cmpsl
mov
stc
outsb
scas
movzbl
addr16
mov
cld
add
xor
and
lods
fsub
mov
pushf
in
fwait
mov
xchg
into
ret
lret
jae
lea
inc
mov
and
dec
je
fsubl
ljmp
or
cld
xlat
hlt
pop
movsb
mov
add
mov
ficoms
jnp
dec
push
cli
sbb
imul
pop
int3
inc
stos
dec
sbb
adc
mov
ror
mov
cli
cltd
into
in
mov
repnz
or
pop
lahf
lret
fwait
icebp
add
iret
push
mov
jl
cmc
add
les
mov
mov
mov
push
icebp
and
push
int3
loopne
pop
mov
fsubrs
sbb
lds
cmp
xchg
mov
push
jnp
ret
push
mov
cltd
fisubrl
shl
int3
mov
call
cltd
add
or
fwait
test
cmp
aas
sub
movsl
push
inc
imul
aad
lods
pop
ja
outsb
jl
scas
test
addb
aaa
fs
and
std
stc
mov
push
add
or
mov
jbe
sub
and
and
pop
ds
jmp
cwtl
ficoml
cmp
loope
inc
inc
add
cmp
sti
flds
push
pop
mov
xchg
push
jae
inc
push
scas
adc
mov
cmp
xchg
loop
fistl
cmp
imul
les
jns
inc
enter
arpl
mov
mov
int3
mov
lcall
es
push
pop
and
rolb
adc
int3
and
sahf
lods
stos
jl
imul
xor
mov
int3
or
sub
ja
enter
bound
loopnew
loop
jne
mov
jp
mov
xchg
mov
cmp
stc
xor
adc
movb
rcl
aaa
push
sbb
iret
mov
fs
loop
dec
stc
jb
and
test
cmp
cwtl
pop
cmpsl
popf
and
ds
addl
subps
leave
mov
or
das
lods
or
adc
push
call
jnp
xchg
gs
clc
ficoml
lods
adc
test
sbbb
rcrb
fs
test
sarl
lret
repnz
dec
mov
mov
mov
leave
adc
push
add
sub
adc
xchg
and
xor
stc
fwait
sbb
mov
jle
dec
cmp
fdivl
jmp
ja
mov
push
movsb
mov
add
inc
or
xchg
test
pop
push
pop
jo
mov
notl
adc
or
sub
je
repnz
arpl
mov
leave
subb
mov
dec
push
sbb
mov
movsl
pushf
mov
addr16
sub
loopne
cli
cmp
and
scas
mov
enter
out
xor
mov
xchg
incl
sub
fwait
xor
pop
pop
mov
adc
outsb
cmpsl
mov
and
mov
sub
out
sub
xchg
mov
addr16
jae
scas
jb
sahf
cmp
stc
jns
cltd
mov
xor
lcall
inc
sub
shrb
mov
dec
aaa
ss
mov
dec
arpl
cltd
push
das
sbbl
movsl
arpl
leave
push
data16
mov
pop
scas
movsb
jne
add
and
lock
jg
xor
cmp
xchg
mov
in
or
mov
imul
pop
xchg
leave
add
cmpl
pop
jns
and
faddl
cmp
jns
pop
fmull
mov
push
cmpsb
sub
jae
out
push
stc
arpl
lret
test
lds
pop
add
dec
xorl
cmp
or
repnz
repz
push
into
shll
lahf
movsb
jne
jg
inc
push
pop
dec
cmp
mov
mov
je
stc
icebp
inc
lret
cmp
cltd
outsb
sbbb
add
mov
cld
aaa
gs
sub
shr
mov
mov
aas
arpl
rorb
pop
mov
pop
dec
mov
dec
lret
aad
es
stos
fisubs
xchg
loop
ja
push
mov
jno
in
mov
or
mov
dec
test
fwait
jge
mov
fcmove
sarl
mov
pop
dec
push
mov
sbbb
in
pop
xor
rcrb
jmp
push
shlb
xchg
xchg
adc
imul
push
in
sbbb
jne
stos
jae
test
inc
scas
push
fldenv
mov
lods
inc
pop
sub
add
or
cli
faddl
or
pop
mov
adc
lcall
jge
out
fbld
sahf
test
test
inc
jp
sub
iret
mov
sub
fidivrs
mov
out
in
push
cmp
popf
int
cltd
lcall
dec
inc
cwtl
mov
daa
test
insl
xchg
sbb
insl
mov
lret
iret
inc
ret
lds
int3
mov
movsb
inc
add
fistl
mov
mov
iret
cmpsl
into
cmp
dec
push
ss
mov
xchg
icebp
mov
cmp
push
adc
aam
ret
sub
mov
rcrl
mov
cli
enterw
push
dec
decl
mov
loopne
movsl
sbb
jbe
dec
push
fwait
clc
push
cli
sub
cmp
xor
adc
call
add
adc
add
mov
lcall
aam
add
sub
nop/reserved
js
call
rcll
xchg
andb
pop
pop
cmc
pop
jmp
mov
pushf
repz
lea
jp
nop
push
cmpsl
aad
inc
shll
add
mov
jnp
mov
addl
add
cltd
cmpb
push
add
data16
ss
push
leave
mov
adc
leave
insb
sub
ret
call
and
cwtl
pop
mov
pop
xor
fdivl
mov
scas
ficoms
and
or
pop
sub
push
pop
push
inc
loop
orl
pop
jae
loopne
les
push
cwtl
adc
mov
xlat
pop
popa
jmp
mov
push
push
aaa
mov
cltd
movsb
int3
fwait
push
daa
loop
mov
sti
ficoms
pop
lret
faddl
mov
ds
mov
cmp
outsl
lcall
mov
mov
jb
inc
dec
xchg
sbb
mov
cltd
mov
xchg
mov
sub
dec
leave
daa
shrl
out
test
fwait
sbb
mov
inc
dec
ss
add
mov
fisubrs
outsb
pop
int
repnz
sub
pop
jmp
fadd
loopne
inc
ja
dec
cmp
fcomp
pop
mov
rcrl
or
cltd
rcrb
lods
cmp
push
shll
fcompl
pop
fcmove
int3
es
lahf
xchg
nop
fdivl
mov
sbb
pop
or
sub
inc
flds
adc
xchg
rclb
es
or
js
setnp
cltd
mov
add
sbb
mov
xchg
or
cli
mov
dec
loop
push
pop
mov
in
or
mov
mov
mov
and
test
mov
rcr
test
mov
pop
dec
mov
fidivl
pop
test
mov
arpl
leave
jl
rorl
arpl
xor
cld
jns
out
and
or
mov
cmp
mov
mov
lods
scas
lock
inc
fnstsw
sub
push
push
lret
adc
ds
jle
in
insl
fsubr
pop
cmc
mov
mov
test
add
mov
pop
cmp
jnp
repnz
dec
jno
cmp
jo
sbb
mov
mov
jns
sub
test
test
dec
jp
popf
cmp
sbb
rolb
sub
pop
xor
lds
iret
jbe
push
les
loopne
cwtl
ss
push
arpl
push
iret
ds
mov
stc
push
in
jp
enter
lret
out
inc
dec
pop
dec
pop
xchg
lret
lock
push
xchg
pop
mov
daa
in
cli
mov
lds
xchg
push
enter
pop
daa
xor
mov
subl
cmp
jle
pop
sbb
push
or
les
cmp
inc
lcall
lds
sbb
push
sbb
cmp
push
push
int
out
stc
fisubl
lcall
adc
mov
test
cld
and
loope
add
out
stc
lret
add
mov
jp
orl
je
jbe
mov
inc
sub
popa
pop
popa
mov
sub
push
mov
add
xorb
pop
or
shll
xchg
dec
inc
popa
push
popa
add
cltd
movsb
enter
adc
in
cs
jbe
adc
das
add
iret
pop
mov
sub
adc
lds
sub
dec
dec
rcll
repnz
stc
jp
lret
and
pusha
sbb
pop
addb
jl
mov
cmp
push
adc
call
shl
xor
lea
push
dec
jl
in
lods
mov
fdivl
and
hlt
or
push
sbb
add
popa
fmul
and
mov
jmp
adc
cld
mov
jno
sub
pushf
push
push
mov
dec
fs
xorb
pop
lret
jmp
out
insb
jp
inc
push
pop
stos
cltd
rcrl
jecxz
sub
jmp
or
mov
imul
cmp
arpl
test
jp
adc
out
lret
dec
cwtl
fcmove
bound
push
cld
add
mov
or
and
jp
sbb
outsl
nop
pop
shll
fisttpl
mov
cmp
pop
fisttps
fs
iret
rorb
and
sti
ret
repz
cld
cmp
xchg
ret
out
inc
adc
lds
shll
mov
aam
jae
lret
loopne
into
xchg
pusha
jp
pop
jp
jns
mov
cmp
dec
sbb
cmovb
test
je
popf
jle
push
fidivs
in
mov
scas
fsts
mov
fmull
std
mov
jg,pt
inc
movsl
mov
xchg
push
rcrl
cmpsl
lock
add
add
out
xchg
sub
movsb
xchg
idiv
int3
aaa
hlt
mov
loopne
jecxz
popf
sbb
pop
enter
in
popf
inc
sar
or
jo
adc
movsl
out
mull
or
pop
adc
aaa
mov
int
scas
lods
sti
pop
push
lcall
adc
test
movsl
dec
movl
mov
push
insl
push
test
ret
lea
sbbl
xchg
subb
ja
sbbl
test
mov
push
inc
mov
stc
test
test
stc
repz
in
iret
ss
mov
adc
addl
mov
jmp
fistpll
pop
adc
adc
sub
sbb
jmp
mov
popf
nop
and
lcall
jl
sbb
cmpl
call
mov
insl
popa
repnz
scas
lret
je
es
sahf
cmpsl
adc
iret
jne
mov
jmp
pop
rcrb
push
testl
leave
js
pop
into
inc
or
outsb
mov
aas
ljmp
psubw
arpl
cmp
fwait
call
add
ret
outsb
cwtl
in
mov
xlat
mov
mov
in
loopne
sub
pop
rolb
xchg
push
mov
fisttps
jge
out
and
in
xlat
ret
daa
or
je
cmp
cmp
scas
jmp
insb
test
sub
xchg
mov
int3
cmpsb
iret
arpl
cmpsl
sub
repz
fwait
mov
or
stc
mov
jmp
enter
adc
push
adc
stc
rcrl
pop
xchg
icebp
or
int
int3
dec
or
xor
fldenv
adcl
movsl
sbb
xor
xchg
cmp
or
or
lret
mov
aas
jle
pop
int
add
std
mov
repnz
cwtl
adc
mov
mov
leave
dec
cs
xchg
cwtl
int3
lret
loop
cmp
mov
dec
sub
or
and
inc
test
and
in
push
repnz
sub
addb
stos
inc
dec
xchg
and
xor
or
ret
dec
aad
mov
loopne
pop
ljmp
arpl
sub
push
pop
enter
mov
and
mov
cld
mov
int
xchg
add
in
test
cmp
xlat
and
inc
stos
pop
pop
mov
inc
fcmovne
mov
je
xchg
into
and
lods
addr16
jmp
push
jbe
lret
sub
lcall
incl
jl
sub
push
mov
dec
inc
lods
dec
jecxz
aad
sub
xchg
adc
cli
lret
addr16
cmpsb
dec
cmp
and
dec
or
icebp
cld
xchg
aam
sbb
mov
mov
push
push
pop
dec
cli
xchg
push
loopne
lret
sub
cwtl
mov
inc
lods
cmp
or
sarb
jae
adc
fs
mov
repnz
push
int
or
ljmp
mov
rorb
jnp
es
jns
ret
sbb
cwtl
mov
mov
xchg
jl
adcl
shlb
ret
addl
dec
push
sub
pop
and
aas
cmp
mov
xor
mov
ljmp
data16
mov
xor
mov
ret
dec
addr16
pop
in
enter
lret
mov
andl
ret
sub
imul
jb
sbb
dec
sub
mov
loopne
push
out
push
cwtl
call
dec
enter
jl
jmp
jnp
add
inc
int3
or
mov
xlat
and
mov
lds
dec
add
dec
aam
aas
imul
ret
cmc
sub
repnz
cmpsb
xchg
lds
or
push
mov
inc
mov
jb
inc
ljmp
fisubrs
xchg
nop
mov
aas
imul
dec
add
add
push
dec
or
push
jnp
test
lods
mov
sub
mov
mov
cltd
icebp
std
xchg
cmp
dec
pop
cmpsl
sbb
rcl
nop
movsl
sub
fadd
mov
xchg
subl
xor
pop
insb
sub
cld
scas
push
in
ljmp
push
shll
adc
or
mov
inc
pop
enter
push
ret
notl
stc
xor
adc
xchg
cld
cmp
cld
fcmovu
std
pop
or
stc
out
iret
jg
push
adc
pop
push
hlt
add
push
movsl
inc
push
or
jg
fisttpl
jecxz
lcall
ds
cld
lcall
insb
sbb
pop
fnstcw
pop
cmp
push
mov
in
add
enter
aaa
dec
xchg
nop
add
into
dec
jae
cmpsl
negb
cmpsl
mov
daa
lcall
cmpsb
add
cmp
outsb
sub
addr16
loop
mov
push
cmp
push
mov
fiadds
dec
ss
sti
push
adc
xor
in
in
fcoml
repnz
adc
push
mov
mov
add
jmp
cli
mov
xor
adc
repnz
jp
bound
and
sbb
ja
push
inc
inc
and
cmp
xchg
les
scas
dec
dec
scas
pushf
mov
clc
xchg
mov
push
sti
or
repnz
xor
lods
fs
mov
aas
mov
aam
pop
jmp
and
fxch
xlat
test
cmp
pop
push
imul
repz
mov
sti
stos
jp
sbbl
out
popa
mov
mov
sbb
data16
movsl
sbb
loopne
divl
popf
push
xor
sub
mov
rcl
addr16
popa
sets
fwait
inc
out
push
jecxz
jl
inc
mov
fsts
mov
test
jns
lret
xchg
imul
mov
fidivl
jnp
les
sti
inc
push
mov
mov
in
sub
jl
mov
dec
mov
gs
pop
sub
cmpsb
out
ret
rcrb
mov
adc
outsb
je
lahf
sbb
cmpl
insl
fidivs
pop
xchg
out
mov
jo
fdivl
nop
fdiv
testb
jb
mov
test
aaa
mov
cmp
pop
xchg
les
inc
jle
adc
pop
stc
sbb
subl
mov
xchg
int3
inc
lret
xlat
sbb
push
lock
addr16
lcall
mov
arpl
mov
cwtl
lds
sbb
nop
lcall
xchg
sub
jnp
dec
mov
mov
fnstcw
inc
push
and
sarb
clc
add
and
add
push
mov
in
sbb
clc
repz
mov
sbb
and
push
jnp
addb
lds
mov
add
hlt
fimull
fwait
gs
mov
pushf
push
lcall
push
mov
les
inc
lret
addr16
and
push
shll
sbb
pop
mov
mov
dec
hlt
enter
movsb
mov
dec
mov
cmp
test
pusha
ror
xor
popf
mov
jp
sub
jo
or
and
mov
sbb
xlat
inc
aad
fwait
sub
push
orb
pop
ret
aas
adc
stc
and
mov
push
mov
loope
stos
mov
xchg
lcall
sub
mov
inc
pop
sbb
mov
dec
push
js
rolb
sub
sbb
lcall
stc
je
hlt
stos
jo
out
test
mov
aam
inc
orb
cmp
pop
mov
lret
inc
sub
mov
push
pop
lret
daa
pop
roll
ja
addr16
cmpsb
mov
mov
ret
mov
xchg
ret
popf
repnz
or
fistl
sub
or
xor
or
adc
out
adc
push
imul
and
or
mov
mov
fwait
test
push
push
inc
push
into
adc
mov
psubsb
mov
movl
pop
push
aaa
mov
cmp
subb
imul
mov
testb
sub
push
in
adc
insl
xchg
ret
mov
stos
push
dec
lahf
jmp
mov
in
sub
xchg
sub
push
jg
adc
add
aam
arpl
ret
push
jbe
inc
jmp
inc
pop
sbb
mov
mov
test
in
repz
dec
mov
cwtl
pop
pop
int3
stos
daa
jnp
add
rcl
push
inc
mov
aas
addr16
dec
in
adc
adc
pop
dec
and
lret
sbbl
and
or
cld
aad
jg
jp
mov
inc
mov
jmp
xorb
sbb
xchg
movsb
jb
and
jnp
dec
bnd
orb
iret
mov
dec
call
xor
xlat
cwtl
xchg
pop
sbb
enter
test
outsb
mov
icebp
dec
adc
lahf
dec
jge
or
leave
cmp
push
ret
fisubrs
lcall
xor
por
inc
aam
xlat
mov
stos
arpl
leave
notb
xor
loopne
jl
out
push
iret
push
lret
add
fdivrl
mov
add
xchg
xchg
test
leave
in
call
test
or
call
mov
cwtl
ret
faddp
add
push
inc
and
jbe
loope
mov
bound
cmpsb
jmp
mov
mov
mov
xchg
mov
xchg
shll
insb
mov
jle
adcl
fcmove
mov
jp
mov
inc
ja
int
test
in
das
inc
dec
push
mov
je
shrb
sub
repnz
push
add
outsb
stc
jb
loope
in
push
dec
mov
iret
dec
adc
int3
and
fisttpll
dec
push
sbb
dec
shl
jle
cmp
fdivs
int3
cmc
sbbb
inc
xor
jge
sub
add
mov
jnp
aam
lcall
std
loopne
xchg
dec
cld
mov
and
mov
into
push
and
leave
push
cli
pop
test
dec
gs
and
xor
insl
subb
mov
or
push
cltd
jp
imul
icebp
movsl
mov
js
sbb
ljmp
xor
movsl
cwtl
push
pop
ret
mov
mov
push
aam
cltd
mov
movsb
loop
xor
cli
xchg
xor
cmp
mov
jmp
and
outsl
cmp
or
movsb
loop
mov
ret
mov
mulb
in
int3
xchg
lds
xor
or
leave
lret
ss
jb
or
mov
hlt
imul
addr16
lcall
push
xlat
xchg
ja
insb
shlb
aam
iret
outsb
xor
add
jl
mov
imul
test
movsb
xor
lcall
push
mov
enter
lcall
rol
call
xchg
and
repnz
add
stc
pushf
test
add
rcll
xchg
push
push
ret
inc
xor
sbb
sub
lcall
cmp
dec
adc
stc
pushf
jge
sbbb
not
stc
cli
or
loop
es
inc
rorb
pop
cmp
jmp
mov
icebp
fmull
mov
sub
pop
xchg
cmp
sbb
outsb
jbe
sarb
xor
in
push
push
loope
mov
mov
movsb
mov
jae
loop
mov
int
xlat
loope
popa
ljmp
push
in
cmpsl
aas
or
mov
popf
test
inc
lret
cli
movsl
mov
mov
mov
int3
sub
arpl
stc
es
int3
push
arpl
xlat
mov
ss
fs
or
js
mov
movsl
add
scas
inc
nop
sbb
xor
jns
lock
movsb
insb
and
pushf
cmc
mov
icebp
shlb
int3
out
and
js
pop
enter
xor
add
lcall
lcall
jge
jb
sbb
lods
je
es
add
xchg
sti
and
ret
mov
cmpsb
lret
mov
add
aas
imul
or
je
and
push
hlt
or
dec
jmp
insl
cltd
stc
adc
push
insl
xchg
sbb
xchg
mov
mov
inc
ror
and
popf
imul
lcall
daa
mov
cli
sub
out
inc
stos
add
mov
pop
mov
mov
sbb
and
push
in
repnz
ljmp
lods
cli
jmp
pop
fsubrs
adc
push
xchg
push
adc
rcrl
jg
jo
jecxz
rcll
cmovb
lcall
jmp
aad
lcall
mov
dec
movsl
push
stc
icebp
fcmovb
popf
push
cmp
cld
leave
push
jno
lds
popf
add
test
outsb
mov
mov
jle
pop
cmp
dec
pop
sbb
movsl
int3
in
int3
sarb
imul
mov
int
sub
xstore-rng
cmpsl
ret
sub
out
xor
dec
insl
mov
int
mov
mov
adc
sbb
push
lret
add
ret
popf
sbb
mov
mov
jno
push
mov
sbb
push
sbb
mov
xor
lret
cmp
cld
mov
xor
push
adc
in
loopne
in
cmp
push
fwait
out
cs
cltd
push
wrmsr
shlb
roll
dec
push
add
xor
and
xchg
adc
and
rcrb
aad
adc
js
pop
jnp
dec
imul
out
test
pop
fdivrl
xchg
jl
inc
push
outsl
and
je
pop
fst
mov
into
cmpsl
int3
pop
cmc
ds
add
mov
or
popf
inc
pop
xchg
cld
icebp
lea
clc
adc
inc
sbb
jl
cmp
lahf
pop
arpl
add
adc
mov
and
dec
cmpsl
popf
shlb
in
inc
ret
pop
jbe
mov
cli
into
mov
sub
fnstsw
in
cmp
rcrl
fists
cmc
xor
into
inc
arpl
sub
inc
dec
lret
sti
or
cmp
fwait
cmp
xchg
add
pop
mov
fstl
incb
pop
add
out
xor
outsb
andb
int
sub
ret
inc
sar
imul
loope
into
push
loopne
add
cmp
cmp
test
imul
scas
cmp
xchg
int3
jmp
mov
jb
out
or
mov
push
dec
push
push
inc
faddp
fnstcw
mov
sub
xor
iret
adc
cld
ss
loopne
jne
mov
add
add
mov
mov
leave
add
out
lods
aad
out
cld
arpl
jne
push
sub
mov
jl
div
test
lods
add
sub
lcall
mov
sub
lahf
ja
js
dec
jle
call
sti
aam
dec
push
lds
jmp
in
xchg
dec
or
cmp
icebp
and
xchg
loop
dec
xchg
iret
pop
out
lock
cld
insb
nop
sub
cwtl
mov
jns
jb
or
sub
imul
pusha
xchg
fidivs
jmp
mov
lods
mov
movsb
mov
mov
sbb
inc
leave
dec
jmp
cld
dec
outsl
or
and
fldenv
mov
inc
aam
loopne
and
jb
add
rolb
jmp
aaa
sbb
fdiv
mov
test
jecxz
scas
sub
dec
jns
jb
sbbb
test
cmp
inc
in
sub
fldenv
rorl
add
sbb
scas
cmpsl
mov
outsl
inc
cmpb
dec
cltd
adc
pusha
stos
xor
jns
leave
add
addr16
rcrl
cmp
xchg
pop
pop
xchg
fisubrl
add
push
dec
pop
jns
ret
jl
ret
aad
and
pop
fidivrs
imul
cmp
and
sbb
lretw
dec
fdivl
push
cmp
dec
and
push
jle
fst
adc
xor
fistpl
addr16
aam
xor
inc
xor
adc
incb
dec
mov
lods
push
add
mov
xchg
fldenv
hlt
outsl
mov
inc
test
loop
icebp
mov
mov
cs
mov
sub
sbb
iret
sbb
pop
jmp
or
jp
imul
jmp
stos
pop
int
add
mov
sbb
jmp
jne
dec
les
es
in
je
lds
enter
jmp
jb
mov
mov
bound
pop
stos
dec
out
ss
frstor
push
push
xchg
loope
gs
push
mov
gs
jg
xchg
adc
lahf
cmc
inc
cmp
jmp
jp
mov
cmpsb
rol
ljmp
test
sbb
mov
adc
cmc
jmp
dec
bound
jbe
test
scas
das
or
xlat
cwtl
test
xchg
stos
fmuls
mov
push
in
push
pop
cld
xor
or
cmc
dec
call
adc
fstl
hlt
cltd
cmp
sbb
testl
mov
mov
int3
aad
xchg
jg
mov
cltd
shll
or
daa
dec
in
stos
sub
loop
popf
or
lds
jnp
jl
or
gs
mov
mov
sbbl
xchg
add
push
je
dec
out
and
xor
shl
jmp
test
mov
leave
push
xchg
push
dec
sub
sahf
sti
int3
jne
inc
mov
cmp
cltd
ficoms
popa
js
cwtl
das
mov
push
jbe
push
lret
sbb
mov
or
addr16
cmp
pushf
arpl
mov
cld
add
insb
stos
cmp
imul
gs
int3
xchg
into
xchg
mov
and
int
add
pop
and
jb
rorb
and
insb
jl
adc
adc
fcoml
test
cmp
xchg
insl
iret
nop
and
stos
stos
or
lret
pop
popf
mov
and
mov
jl
testb
cmovo
mov
pop
movsb
jmp
in
jmp
les
or
sti
inc
insb
arpl
cmpsl
les
sbb
mov
movsb
jo
pushf
lods
mov
dec
cli
push
pop
divl
out
add
push
mov
sti
xlat
les
pop
pop
inc
xchg
push
cli
mov
xchg
jnp
pop
mov
enter
xchg
adc
xlat
mov
adc
mov
xchg
repz
icebp
lock
iret
adc
lea
leave
push
mov
pop
pop
arpl
adc
leave
or
add
das
xor
dec
loopne
pop
pop
xor
jmp
roll
sbb
pushf
cmp
cmp
cld
dec
cmc
jecxz
fmul
push
cld
inc
leave
dec
adc
aas
fwait
iret
int
cmpl
sub
inc
push
sarl
xchg
test
rcr
sbb
push
lret
push
jo
add
stc
int3
dec
xchg
adc
les
pop
and
xchg
push
scas
xor
cwtl
sbb
or
in
rcll
and
and
add
inc
push
jle
cmp
xor
jp
inc
mov
cli
out
push
insb
pop
cmp
loopne
das
or
out
adc
outsl
pop
xlat
jns
repnz
jbe
cltd
push
test
addr16
lea
lret
lcall
ja
jo
outsl
fmuls
ljmp
or
cmp
mov
mov
adcb
jne
add
sub
ljmp
sbb
add
mov
sbb
mov
jmp
repz
imulb
cs
mov
mov
jl
jb
or
cli
movsb
bound
mul
xchg
faddl
test
or
test
out
loopne
cmpsl
ret
mov
xchg
mov
mov
jl
stc
repz
dec
push
mov
aaa
cld
aaa
sarl
adcl
ss
cmp
xlat
mov
mov
push
and
pushf
les
push
or
lods
xchg
jmp
mov
stc
lcall
sti
in
and
add
fadds
pop
push
mov
push
shrl
pushf
aaa
les
inc
inc
pop
and
mov
push
fwait
stc
cmp
ret
movsb
repnz
xchg
push
pop
sub
mov
orb
or
insb
repnz
sbb
cmpl
mov
fstl
ja
pop
mov
mov
sub
and
pop
mov
addl
in
fdivr
mov
sbb
mov
popa
fld
cmp
inc
jecxz
push
pop
push
adc
rcrb
and
inc
xchg
aam
inc
pop
int3
bound
push
flds
fdivrl
outsb
fstpl
clc
flds
mov
xchg
dec
cli
fmul
or
adc
nop
push
push
pop
test
roll
insl
stos
push
rcrb
or
push
int3
adc
in
aaa
adc
push
into
xchg
cmp
and
into
xor
push
dec
das
aam
das
outsl
out
cmpsl
sub
sbb
dec
fnstcw
inc
or
xchg
ljmp
push
leave
sbb
add
or
outsl
jbe
adc
sbb
imul
pop
mov
push
inc
lahf
mov
rorl
and
dec
pop
mov
jnp
inc
enter
cltd
insl
out
push
filds
sub
cmpsb
rcrl
mov
pop
push
push
mov
or
ret
outsl
insl
fistpll
sahf
push
pop
push
outsb
lock
lret
pop
sbb
push
pop
or
clc
xor
call
ret
mov
cli
mov
mov
adc
adc
mov
mov
arpl
jmp
in
repnz
lods
mov
pop
scas
das
or
rcll
dec
xchg
rol
xchg
lea
scas
jp
mov
int3
push
and
dec
or
aad
or
xchg
jmp
cli
mov
jns
pushf
sarl
je
fidivl
cli
test
movsb
cli
mov
or
test
loopne
fcomp
pop
fldenv
cmpsl
pop
push
scas
ret
lcall
lods
push
test
lods
ret
or
and
and
arpl
les
xlat
adc
aam
sahf
in
mov
mov
xor
cmp
icebp
cmpsl
push
popa
jmp
and
in
mov
lock
popf
sbb
movsl
punpckhbw
addr16
test
xor
popf
xor
repz
ljmp
xchg
aam
dec
mov
int
and
daa
enter
pop
xchg
xor
mov
dec
sub
sbb
movsl
std
fwait
gs
out
mov
es
cld
adc
xchg
das
rcrb
nop
sbb
aam
daa
push
xchg
jne
sbbl
mov
xchg
jae
lds
aaa
mov
jno
jl
pop
adc
sub
pop
push
add
dec
sbb
lret
mov
cmp
sub
cmp
lcall
sti
xchg
adc
test
cltd
lds
aam
push
inc
xchg
xchg
int
or
push
xchg
jp
jecxz
js
test
add
xchg
enter
lcall
jmp
fsubp
ret
lods
sub
cmp
mov
daa
aam
push
jmp
stos
ja
sub
test
push
mov
mov
push
popf
aam
lods
add
leave
sbb
dec
xchg
in
sub
fwait
jo
cmp
sbb
push
and
xchg
mov
scas
rcrl
inc
xchg
push
nop
mov
fs
mov
sbb
cwtl
mov
fistpll
gs
rcr
mov
imul
fmul
pop
cmp
popf
enter
ljmp
cmp
repnz
test
outsb
sahf
sarl
imul
cmp
jb
bound
sbb
lock
fimuls
mov
mov
das
in
sub
call
add
or
inc
dec
xorb
pop
add
fadds
dec
add
dec
lds
dec
xchg
pop
std
sar
sub
push
adc
enter
ljmp
test
jle
or
enter
rcrl
and
dec
orl
popa
jecxz
push
fnsave
xchg
mov
sbb
rcll
mov
jl
inc
push
loopne
xchg
pushf
mov
jge
test
imul
sarl
xchg
int3
test
int3
in
repz
xchg
xchg
js
sbb
pop
add
cmp
xchg
push
push
jp
mov
push
jnp
add
dec
inc
sbb
mov
jge
mov
test
dec
outsl
mov
ficoml
mov
inc
jne
mov
movsb
mov
mov
pop
scas
stos
dec
jp
sbb
fsub
and
call
into
xor
rorb
xchg
sub
sub
sbb
mov
mov
test
push
data16
test
cmp
gs
gs
mov
mov
std
test
add
jne
add
ficomps
push
adc
mov
enter
xchg
mov
call
cmp
out
aam
mov
or
aas
pop
fcoml
sbb
inc
insb
sbb
das
push
out
xor
lds
mov
shll
mov
mov
sbb
out
loopne
test
jmp
mov
mov
mov
mov
leave
sahf
jle
scas
pop
push
aad
leave
fsubs
xor
fwait
xor
jne
es
mov
jp
xor
push
pop
jl
fcoml
es
dec
cwtl
cmpsl
dec
lock
and
push
mov
mov
lods
mov
push
shrb
rcr
cmp
sub
shlb
adc
xor
inc
add
out
jnp
rcl
insb
cmp
inc
mov
cli
xchg
sbb
lods
ljmp
scas
in
and
cmpsl
adc
xchg
ret
lcall
jb
scas
add
adc
pop
test
out
push
xchg
movsl
and
push
jecxz
adc
loope
sub
int
adc
mov
in
sub
dec
bound
repnz
inc
imul
rcrl
and
pushf
pop
lret
in
mov
leavew
push
inc
or
xor
insb
in
js
jp
push
les
mov
cltd
push
sbb
int3
hlt
adcl
dec
xor
call
cwtl
xchg
push
scas
call
cmpsl
lock
js
jmp
popf
repnz
daa
mov
cld
loopne
repnz
das
in
add
add
subl
das
ret
das
nop
ret
mov
cltd
rorl
inc
mov
adc
mov
and
lea
mov
int3
cmpsb
add
mov
cs
dec
xlat
in
out
cmp
sarb
in
push
sbb
lea
jle
stc
or
mov
ficoml
out
lea
push
pop
mov
xchg
inc
cli
or
test
mov
outsl
dec
stos
ror
fistpl
jecxz
enter
gs
ret
jl
or
cmp
inc
pushf
cmp
mov
into
or
popf
pop
inc
mov
adc
fnstsw
cmp
mov
add
fistps
mov
loopne
sbb
gs
clc
aam
pop
fistpl
dec
shll
hlt
cmp
rcrb
stos
cwtl
xchg
push
inc
sbb
into
pop
stc
xchg
cmp
addr16
xchg
and
daa
std
aaa
pop
rcl
mov
imul
lret
add
dec
add
lcall
decl
cmpb
or
or
adcb
jne
popf
fst
cwtl
mov
pusha
movsb
fnstenv
aas
movsb
dec
stos
ret
or
pop
call
int3
test
mov
flds
jecxz
xchg
lods
lock
call
dec
repz
jecxz
repz
add
mov
jb
mov
leave
test
inc
adc
xchg
cld
push
in
adc
minps
out
pop
add
fistpll
mov
lret
sbb
lret
fistpl
pop
in
mov
lods
addb
ret
lret
pop
pop
popf
cmp
jno
sbb
and
pop
lret
inc
pop
sbb
xor
data16
inc
add
cmpsl
pop
mov
addr16
fidivl
jp
ja
jl
in
fnstenv
cmp
ss
outsb
cmp
sti
pop
cmp
mov
mov
sub
fnstcw
push
or
dec
dec
clc
cld
popf
sub
lods
and
xor
push
xchg
dec
aam
movsl
jae
in
add
repnz
inc
test
or
mov
adc
push
dec
inc
push
cmp
push
dec
cli
mov
mov
jp
cmp
cltd
ret
mov
mov
mov
sti
fwait
les
sub
stc
in
mov
mov
pop
sub
mov
push
pushf
fstpt
xchg
cwtl
mov
adc
es
inc
test
ljmp
sub
jmp
pop
push
lock
dec
lret
mov
arpl
cmpsl
outsb
lcall
testb
pop
add
mov
stos
add
fdivrs
sub
test
push
push
adc
lret
xlat
cmp
aad
xchg
fs
out
insb
add
test
mov
xlat
fsts
cmp
pushf
push
rorl
imul
or
mov
mov
mov
jg
push
sbb
cs
mov
xchg
add
xchg
inc
jns
popf
add
mov
fdivl
mov
std
outsb
bound
jmp
xchg
xchg
jns
jl
jns
xlat
rol
jns
pop
push
mov
xchg
mov
mov
mov
daa
pop
fiaddl
push
or
pop
lahf
and
xor
lods
mov
leave
les
push
inc
lcall
clc
scas
or
fxch
cmp
inc
adc
int3
sarb
xlat
jnp
mov
cmp
sub
mov
mov
stc
ret
bound
xlat
fnstenv
jne
pop
add
lret
push
cmp
and
push
sar
repnz
add
lcall
dec
mov
mov
jl
mov
cmp
in
mov
in
jg
mull
inc
push
ret
add
mov
mov
leave
sub
xchg
xlat
push
lret
push
nop
ficoms
out
iret
mov
xchg
call
dec
inc
leave
lret
aam
gs
sti
sub
pop
push
into
mov
mov
cmp
arpl
xchg
add
adc
lret
cmp
and
or
aas
cmp
add
pop
jb
jg
pop
xlat
ret
mov
negl
xchg
aam
push
dec
or
add
push
cmp
adc
mov
mov
in
cmp
imul
push
loopne
pop
dec
add
mov
sub
cmpsl
test
repz
lea
movsb
addr16
inc
inc
icebp
xchg
mov
inc
xchg
and
in
out
test
int3
insl
aaa
lret
pop
inc
ljmp
or
inc
sbb
mov
fwait
cmpsl
and
add
int
jb
cmc
add
leave
sbb
mov
pusha
pop
push
push
dec
jno
xor
hlt
and
sub
js
mov
add
dec
sub
repnz
pop
pop
test
mov
ret
or
xor
push
fsts
push
ret
js
stc
pop
sub
loop
push
jp
pop
addr16
stc
loope
sub
mov
les
je
pop
int3
cmp
or
inc
les
dec
push
pusha
shll
ds
icebp
mov
repz
xchg
enter
mov
mov
je
push
sbb
push
into
pusha
sarl
sub
sub
add
jb
lahf
cld
movsl
movsl
mov
fldt
flds
mov
inc
add
lcall
mov
pop
dec
and
adc
pushl
push
sarl
sbb
ds
push
ret
sub
or
and
xor
js
dec
dec
cmp
leave
mov
les
inc
xor
xchg
cmp
xchg
inc
jp
aaa
xlat
mov
stc
add
sub
into
leave
test
mov
xchg
cmp
fadds
movsl
mov
cmp
clc
mov
pop
lret
sbb
ret
das
inc
lcall
push
xchg
and
loope
pop
and
jne
cmp
rorb
jo
imul
aam
inc
sbb
cld
cmc
jle
stc
cmpsl
dec
jl
cmp
mov
je
jl
mov
sbb
or
cmp
roll
push
pop
and
fldl
out
pop
dec
test
shrl
mov
rorb
dec
mov
ret
popf
inc
or
leave
mov
lret
push
or
cmp
push
arpl
stos
mov
mov
inc
dec
lcall
mov
jl
or
sbb
pop
jae
test
pop
fsts
ljmp
int
xchg
adcl
ljmp
loop
mov
inc
lcall
sbb
inc
ret
cltd
into
sub
xchg
pop
iret
movsb
mov
pop
mov
mov
mov
jl
xchg
cmp
ss
dec
xor
push
inc
enter
and
jnp
push
push
pusha
cmp
adc
or
dec
add
dec
push
pushf
push
nop
push
call
mov
fdivrp
lods
mov
ficoml
and
insl
sub
lods
lods
pop
dec
mov
cwtl
sub
fcmovne
call
in
mov
add
mov
test
push
mov
cltd
stos
pop
or
inc
imul
fnstenv
inc
jne
gs
sub
js
add
jmp
mov
cli
pop
push
aad
cmp
jnp
mov
ret
and
or
add
lods
jbe
jae
add
fiaddl
ret
lret
xchg
mov
sub
xchg
cmpsl
sbb
mov
pop
xchg
mov
mov
sarl
jl
push
enter
je
mov
add
and
fdiv
aaa
push
movsb
mov
push
inc
mov
jmp
adc
ret
inc
dec
fcomp
mov
into
adc
cmp
popf
test
test
test
adc
sub
vshufps
adc
fisubs
dec
cld
je
dec
sub
rcrb
mov
aam
jnp
aaa
movsb
inc
mov
push
sub
test
loopne
repz
pop
pop
int3
jnp
out
cmpsl
scas
cmpsl
in
push
push
stc
mov
mov
add
cld
popf
jmp
mov
cmpsl
lret
mov
fdivrs
sub
and
jl
sbb
sahf
xchg
lods
xor
sbb
fucomp
dec
and
pop
push
testl
jnp
add
mov
push
mov
jp
inc
inc
fwait
mov
aam
cs
mov
lods
adc
xchg
push
ret
mov
popf
dec
pop
fmull
adc
cltd
or
daa
adc
mov
fists
addb
push
rorb
sti
shr
sbb
push
popf
test
xsha256
cmpsb
xchg
mov
dec
pop
popa
jnp
xorl
xchg
xchg
cli
xchg
mov
mov
xchg
inc
sbb
testl
xchg
dec
jne
das
xchg
cmpsl
inc
arpl
nop
mov
movsl
mov
loope
loope
add
in
bound
out
push
jle
movsb
and
loopne
jp
mov
in
and
jne
cli
add
add
dec
js
adc
mov
mov
adc
sub
jnp
cwtl
push
pusha
push
arpl
outsb
loopne
xchg
frstor
jmp
jmp
negb
ret
mov
push
jl
pop
xchg
iret
pop
cli
sti
in
mov
xchg
inc
popa
push
xchg
out
inc
int3
mov
adc
or
xchg
pop
xor
push
mov
cmp
jb
pop
bound
or
mov
mov
mov
sub
outsl
fistpll
rcl
and
mov
stc
je
dec
or
das
inc
stos
mov
lret
xor
ret
jb
or
jo
pop
push
mov
add
fdiv
test
std
cmp
int
pop
gs
mov
ret
pop
popf
mov
push
repnz
cmp
fbld
test
movsl
sub
lods
xchg
not
dec
or
add
jae
test
push
mov
sbb
fwait
ja
dec
arpl
fwait
cmpsl
cmp
popf
mov
mov
push
sti
testb
adc
jnp
xchg
bound
cmpsl
cmpsl
push
pushf
xchg
fnstenv
push
push
cld
pop
loopne
sbb
test
andb
ret
jbe,pn
sbb
ret
fwait
push
clc
xor
mov
sti
dec
inc
repnz
or
jo
sbb
shll
int3
loopne
jge
lds
cmp
out
jns
cmc
fists
ja
xchg
mov
xor
js
dec
xorb
sub
mov
cli
ret
dec
ret
shll
mov
jns
inc
inc
cmp
pop
fidivrl
cmp
pop
push
out
inc
and
pushf
enter
sub
lret
pop
push
rep
sbb
shrl
iret
cmpsl
int
andl
cmp
jg
sahf
pop
outsb
and
cs
xchg
xor
sbb
cmpsl
iret
popf
mov
adc
sub
roll
sbb
idiv
scas
out
add
mov
fidivrs
stc
lods
in
testl
or
pop
pop
mov
lret
dec
test
insl
in
jmp
sbbb
cld
inc
or
and
ret
popa
js
add
pop
int
xor
ja
dec
push
dec
decl
aam
xor
lock
ljmp
loop
jmp
or
jo
es
por
xlat
push
ret
add
mov
inc
mov
int3
rorl
adc
xor
adc
lret
mov
ret
enter
jp
mov
addr16
mov
sbb
jge
push
cmp
xor
jge
add
xlat
dec
mov
movsl
push
imul
nop
mov
xor
push
lret
out
sbb
mov
insb
jl,pt
aaa
mov
test
out
loopne
jmp
xchg
pop
mov
cli
repnz
dec
adc
push
stc
xor
mov
icebp
push
cmp
loopne
push
mov
add
dec
add
push
jbe
cmp
popf
mov
jle
xchg
scas
js
push
std
push
push
jl
cmp
sub
std
pop
lret
movsb
scas
mov
or
mov
or
lret
ljmp
fcomp
lcall
ss
lods
sub
roll
mov
xor
cld
or
pop
mov
iret
cmp
nop
test
dec
bound
addr16
mov
sub
scas
pusha
loopne
sub
lcall
shl
dec
movsb
mov
pop
cld
dec
int3
add
push
mov
fcomi
sbb
or
ret
mov
or
pop
inc
cmp
lds
mov
mov
roll
adc
leave
sub
sbb
jecxz
xchg
mov
int3
dec
lods
inc
js
mov
dec
call
lods
in
pop
push
adc
leave
pop
faddl
adc
fptan
mov
adc
movsl
pop
mov
call
sbb
insb
hlt
mov
or
mov
sub
ret
sbb
cmpsb
sub
out
mov
add
flds
cmp
lret
mov
rcr
dec
test
push
push
mov
sbb
pop
lcall
test
lea
cwtl
inc
movsb
jp
popf
iret
push
cmpsl
icebp
fwait
repz
lcall
jo
jl
data16
jle
shrl
lds
loop
jmp
leave
sti
mov
fisttps
lret
cmp
jp
jmp
les
mov
push
dec
adc
push
cmp
or
and
inc
pop
lret
push
insb
jle
xchg
int3
xlat
pop
aam
in
pushf
cmp
int3
cli
fidivs
add
cli
mov
xchg
mov
cwtl
push
addl
call
sub
lret
push
mov
bnd
lods
fs
aaa
call
jnp
scas
stc
iret
lcall
dec
or
in
fcomp
jmp
outsb
fdivrs
inc
dec
xchg
inc
incl
cli
jp
or
mov
pop
dec
cmp
rcll
pop
add
and
pushf
cmp
or
push
mov
push
outsl
push
addr16
ret
pop
mov
pop
rcll
sbb
mov
mov
daa
push
lcall
mov
push
out
cmp
outsb
push
cvtps2pd
in
test
mov
out
faddl
arpl
pushf
mov
mov
outsb
jmp
testl
jmp
cwtl
fst
jae
sub
testl
sti
int
orl
dec
call
loop
lret
or
xchg
int
js
jle
ret
adc
mov
sbb
addr16
nop
gs
cmp
mov
inc
daa
or
adc
shll
sbb
push
mov
or
dec
mov
jl
pop
jp
jp
dec
fidivrs
lock
roll
cmpsl
int3
dec
test
inc
mov
cmp
add
push
mov
stos
xlat
insl
test
sub
xchg
dec
jmp
xchg
cld
sbb
mov
mov
mov
mov
pop
jns
lret
test
jbe
mov
dec
xlat
inc
xlat
test
mov
rcl
test
test
stos
pop
fwait
dec
mov
shl
sbb
in
fwait
mov
pop
int3
lret
fadd
jge
inc
pushf
jmp
xchg
in
movsb
test
add
sbbb
pop
negb
mov
daa
fisttpll
cli
pop
fsubrp
shll
xor
enter
lret
mov
xor
add
lret
inc
fiadds
sub
pop
aam
push
aas
stc
sub
push
xlat
imul
pop
shll
fadds
cld
scas
gs
cmp
cmp
mov
jp
pushf
sar
mov
cmovns
push
sbb
pusha
sub
test
ret
xchg
pop
andb
ja
rol
add
addr16
cwtl
adc
pop
or
mov
pop
pop
xchg
jl
addr16
test
xor
aad
add
shrb
mov
ret
cld
gs
movsl
fcoml
xchg
dec
into
cmp
leave
adc
cwtl
mov
push
xchg
aad
or
push
xchg
cmpsl
and
inc
flds
dec
mov
sbb
push
xlat
stos
xlat
sbb
jnp
inc
inc
or
pop
cmp
insl
aad
push
mov
inc
ss
imul
popf
mov
xchg
mov
dec
insb
jb
arpl
jns
sub
mov
mov
push
out
lds
int
sbb
cmp
dec
addb
lds
nop
daa
outsb
nop
addr16
mov
jns
aas
movsb
mov
inc
ret
in
arpl
or
lds
inc
xlat
sbb
cmp
inc
movl
enter
add
sarb
lcall
mov
pop
ficoml
xor
pop
pop
stc
cmp
frndint
adc
mov
or
iret
cli
lahf
stc
arpl
xchg
movsl
adc
xor
fcoml
shl
pushl
pop
push
mov
or
test
dec
test
push
mov
cld
mov
add
push
xlat
test
cld
enter
sub
inc
sub
sub
adc
arpl
jnp
inc
mov
add
mov
mov
sbb
out
out
scas
sub
insl
dec
inc
lods
in
mov
aam
into
xorb
fidivrs
enter
insl
mov
pop
out
pop
pop
test
outsl
pop
cmpsl
mov
xchg
lret
and
sbb
sbb
jp
dec
fistpll
xlat
cwtl
jge
inc
imul
add
lcall
pop
mov
enter
pop
in
xchg
mov
push
lcall
fisttps
test
cmpsb
jmp
pop
in
mov
jmp
push
xor
mov
or
add
mov
jne
inc
xchg
cmp
emms
pusha
ss
lods
mov
mov
push
mov
std
dec
fld
lret
and
push
xlat
popf
data16
push
jle
push
aas
ret
shll
push
and
cltd
jmp
add
jno
jo
nop
cmp
cmp
jns
fidivrl
mov
cmp
aad
dec
add
std
js
ljmp
inc
test
push
in
jmp
add
and
pop
mov
cmp
or
cmp
cli
jb
cmpsb
or
ffreep
jle
clc
fildll
xor
into
mov
nop
cmp
ss
std
hlt
in
xor
add
cmp
dec
cli
add
aaa
imul
inc
bnd
mov
movsb
rolb
jle
pop
or
fnstsw
repnz
pop
fidivrs
mov
mov
insb
cmp
or
add
ljmp
cmp
mov
sbb
stc
enter
ds
or
in
ret
int
ret
imul
inc
pop
cld
mov
xchg
into
cld
mov
dec
jnp
xor
and
popa
jbe
in
rorl
xchg
sbb
jbe
fbld
scas
add
xchg
fdiv
inc
lret
and
sbb
cmp
push
ds
fsubrl
jnp
int3
int3
jmp
test
cmpsl
ds
shr
pop
in
aam
inc
ret
test
push
sti
sub
pop
cmpsl
sub
sub
lcall
shlb
push
pop
mull
xlat
insl
iret
push
or
inc
mov
cmp
ja
jbe
mov
lret
insb
fsubs
ret
insb
call
lret
enter
lock
dec
push
incb
xor
imul
sahf
and
pop
mov
movsb
push
aam
xchg
subl
repz
roll
jl
jg
dec
xor
mov
aas
fildl
cmpsl
adc
cmp
mov
dec
inc
repnz
imul
add
sarl
jg
add
out
cmpsl
lret
cwtl
push
push
inc
inc
mov
insb
std
jge
out
jle
repnz
dec
xlat
data16
and
sub
mov
les
out
les
dec
sysexit
mov
sarl
jo
decl
stc
mov
aam
jmp
lea
adc
cld
sbb
int3
jl
add
idivl
sbb
clc
ret
sbb
pushf
xor
gs
ja
cld
inc
mov
jne
repnz
add
fdivs
cld
enter
js
adc
sub
repz
int3
jg
popf
cmpsb
push
xor
je
dec
or
and
inc
jbe
mov
mov
pop
fdivrs
push
or
mov
lcall
pop
push
and
shlb
inc
out
call
mov
enter
and
jmp
sbb
push
iret
test
cwtl
leave
and
stc
cmpsl
and
mov
or
test
pop
dec
jmp
mov
push
jle
jmp
into
pop
dec
and
adc
dec
inc
out
mov
mov
and
push
pop
lret
pop
imul
inc
cld
sub
les
cmp
ds
xchg
pop
jb
movsb
inc
cld
leave
xchg
repz
adc
inc
lret
pushf
cmp
cld
test
dec
popa
lret
in
adc
fnstsw
insl
add
lahf
mov
or
inc
pop
jl
adc
popa
mov
or
cli
int
pop
sub
mov
cs
jb
hlt
cmc
adc
fisttps
xor
movsb
pushf
cld
adc
jp
adc
jecxz
mov
bound
xor
xor
adc
ret
mov
inc
mov
sub
mov
out
ror
repz
mov
jnp
jb
negb
fmull
jmp
sub
fsubs
pop
ds
mov
shr
fildll
fnsave
inc
cs
int3
mov
mul
lret
inc
add
es
mov
movsb
push
test
add
jne
or
or
rcrb
int3
jnp
adc
xor
mov
and
mov
and
ret
jg
and
ljmp
mov
mov
leave
fwait
das
call
cmp
data16
inc
jne
cld
cmp
inc
add
and
add
lret
fnsave
lret
or
jns
mov
push
test
xchg
push
mov
inc
jb
call
icebp
adc
jge
ret
mov
jb
inc
jmp
clc
lods
and
js
xlat
add
in
inc
or
inc
pushf
jp
jp
shrl
rol
mov
adc
inc
ret
call
movsb
das
lret
mov
pop
sbb
clc
inc
rcll
xchg
push
mov
push
xchg
push
in
loopne
sbb
xlat
fdivrs
out
ljmp
dec
ret
mov
jp
popf
fisubrl
popf
push
pop
cmp
pop
dec
movsl
aam
leave
cmp
sar
push
pop
jne
pop
addr16
mov
xor
cld
sarl
fcompl
xchg
cmpsl
shrl
stos
fcmovnbe
pop
pop
mov
popf
ret
or
shll
movsb
xlat
and
imul
bnd
cmp
mov
xor
pop
jne
cmp
aas
ja
mov
mov
stos
pop
xlat
gs
loope
push
das
dec
fiadds
cmpsb
stc
pop
pop
sbb
ret
popf
or
sbb
arpl
inc
dec
cwtl
imul
cli
rcr
push
sar
and
out
cmp
cmc
inc
cmpsb
insl
rclb
test
adc
and
cmpsb
stc
push
popf
cli
rcrl
push
dec
push
lret
pop
xlat
sub
lds
mov
in
addr16
testl
aad
ret
jl
adc
in
push
mov
paddd
ret
jmp
add
lcall
pushf
lret
mov
jecxz
xlat
int3
loop
mov
movsl
fcmovnbe
pop
inc
push
sub
sub
in
fwait
aaa
mov
mov
stc
mov
syscall
movsb
out
cmp
cmp
mov
ja
mov
mov
add
xor
nop
xchg
aaa
xor
mov
cmp
data16
push
addr16
jl
cmp
mov
pop
jnp
xor
jmp
mov
pop
sbbl
mov
xchg
mov
jne
ss
leave
fiadds
jle
repnz
paddd
adc
xchg
push
ja
cmpsb
lret
and
cmc
cmpsl
and
movsb
add
cmpsl
push
mov
rcrb
insb
jl
cmp
in
in
xlat
pushf
les
adc
gs
adc
out
iret
pop
mov
xchg
ljmp
addr16
loope
insb
push
jmp
das
cmp
and
loopne
addr16
cmpl
jg
cmc
fchs
rcrl
adcl
enter
mov
xlat
push
and
mov
pop
fnclex
into
xchg
repz
lds
movsb
pushf
add
lret
cwtl
mov
les
push
clc
xchg
mov
jb
cltd
mov
add
or
cmp
cs
jl
mov
rcrb
sarb
gs
jp
mov
push
mov
adc
rcll
sub
sub
outsb
xchg
rolb
pop
push
or
push
push
mov
add
aam
rolb
fs
stos
jp
push
jge
cmp
add
mov
pushf
lea
pop
dec
lret
aaa
jl
and
lcall
pop
push
out
rcrb
daa
lret
pop
lds
sub
aad
pop
xchg
jns
pop
aaa
mov
dec
cmp
mov
insb
mov
push
adc
cmp
mov
call
stc
stc
pop
and
daa
negl
xor
cwtl
sub
aas
mov
insl
pop
mov
test
mov
push
pop
inc
dec
mov
data16
jge
mov
inc
cld
in
jne
add
pop
pusha
pusha
sbb
std
es
insl
fdivrs
mov
mov
adc
cmp
enter
mov
in
push
fidivs
dec
dec
jbe
add
aas
mov
pop
mov
xchg
sti
xor
pop
cltd
aam
into
enter
cli
dec
loopne
dec
fwait
lcall
daa
and
pop
scas
mov
movsl
loop
movsl
add
in
adc
push
outsb
arpl
pop
sarb
mov
push
push
xchg
mov
mov
lea
imul
mov
rorl
aas
mov
mov
cmpsl
shrb
add
rcl
test
jg
sub
iret
jns
inc
xchg
mov
shlb
in
movsl
pop
pop
aad
lret
inc
mov
mov
test
jb
jg
mov
mov
addr16
pop
mov
mov
pop
mov
shrb
jl
sub
dec
mov
xor
mov
rcll
inc
mov
pop
dec
ftst
jb
mov
pop
aad
or
scas
mov
inc
xchg
xor
sub
mov
add
xlat
repnz
push
repz
bound
daa
sarl
std
inc
jmp
mov
lcall
movl
iret
mov
popf
mov
ja
pop
jnp
cli
mov
or
mov
in
mov
out
xor
inc
out
test
xor
push
cmp
hlt
mov
xchg
xor
in
or
pop
lret
andl
cmp
cwtl
call
test
inc
out
lret
aam
push
push
aam
repnz
ja
movsb
xor
arpl
fidivrl
lcall
xor
stos
sbb
cmp
jp
arpl
ja
pop
sub
jo
stos
add
scas
pop
xchg
lret
cmpsl
enter
pop
jl
dec
mov
inc
dec
cli
sti
js
and
ja
lods
mov
loop,pn
pusha
push
or
cmp
fisubrs
cmp
jns
adcl
xchg
push
repnz
mov
loopne
adc
lret
cmp
dec
lods
mov
cmp
pop
cmp
in
notb
std
imul
popf
outsb
or
xchg
fs
leave
lcall
jb
popa
nop
ds
jbe
movsb
leave
fs
scas
cmp
dec
jo
test
dec
ret
inc
lcall
pop
sbb
in
mov
in
dec
or
push
mov
stc
repnz
and
sbb
rcl
xor
sbbl
pop
addb
stos
xor
movsl
dec
lods
lret
pushf
pop
cmp
aad
jbe
data16
inc
inc
jg
fildl
lret
cmp
dec
popf
xchg
xor
call
mov
add
cmp
std
dec
push
shlb
icebp
xor
xor
or
daa
std
bound
adc
adc
fnstcw
cwtl
and
sub
arpl
stc
aas
fsubl
sbb
lds
mov
push
add
sub
xchg
xchg
pop
rcr
addr16
cmpsl
cmp
adc
pop
mov
jl
aaa
sub
mov
ss
insb
jmp
cs
daa
icebp
js
mov
lods
mov
cwtl
sbb
pop
sbb
enter
xchg
mov
insl
jl
mov
dec
shrb
or
sub
nop
mov
mov
fdivl
mov
sbb
test
xor
lds
xor
rolb
fisttps
sbb
pop
add
push
push
or
in
jp
cli
mov
pusha
cmp
test
add
cmp
cli
test
les
mov
pop
cmpsl
test
mov
lods
cmpsl
fidivs
pop
aad
aam
leave
aam
stos
imul
daa
jle
shlb
int
sbb
test
inc
fsubl
inc
mov
stos
insb
add
dec
add
fnstsw
mov
push
ret
xchg
push
fdivrs
mov
stos
ror
jb
sbb
mov
lret
loopne
mov
mov
sarb
in
and
rorl
dec
cltd
inc
pop
pop
lret
pop
or
lret
xchg
dec
gs
dec
fnstcw
lods
xchg
jl
or
test
fxch
jl
mov
xchg
mov
cmp
mov
or
jge
int3
mov
pop
faddl
stc
js
pop
jmp
test
inc
jmp
fisubs
cmpsl
mov
dec
dec
gs
dec
dec
inc
mov
lcall
or
dec
test
test
xchg
test
sbb
cli
mov
mov
leave
mov
inc
pushf
sub
cld
test
adc
cmpl
test
ret
negb
pop
mov
xor
rclb
outsb
cmpsb
adcl
mov
call
pop
inc
push
mov
fcoml
int3
les
inc
sarb
mov
sti
push
xlat
xchg
cwtl
popa
jl
mov
sub
push
shll
xorl
dec
ret
pop
rcll
push
xchg
gs
mov
jecxz
dec
xchg
movsl
out
adc
int3
sbb
mov
mov
add
adc
mov
pushf
aas
cltd
xlat
sbb
jmp
mov
out
adcl
repnz
sub
push
adc
inc
scas
sbbl
mov
into
push
inc
jnp
sbb
cltd
inc
inc
inc
add
lret
mov
outsl
dec
lea
imul
lret
dec
inc
sbb
aas
std
sub
int
jl
mov
fldenv
lret
inc
cwtl
gs
sub
sub
mov
inc
dec
lcall
and
dec
push
enter
int
jb
idiv
push
loop
iret
mov
mov
cmp
enter
in
jns
in
cmp
test
dec
xorl
in
cltd
sbb
xchg
mov
repz
xor
bound
dec
bound
or
pop
push
shlb
mov
lret
inc
push
cli
mov
cli
arpl
push
push
mov
push
mov
fnstenv
pop
mov
js
js
inc
xchg
sbb
bound
jnp
std
sub
mov
leave
inc
xorl
int
sahf
scas
dec
push
cs
push
ds
lret
or
adc
sbb
mov
shr
fmuls
stc
aaa
repz
push
daa
in
lret
cltd
cmp
and
mov
mov
scas
movsl
fwait
in
mov
enter
fsubs
stos
aad
andb
pop
xlat
dec
sub
adc
cld
enter
sub
clc
ljmp
ds
dec
dec
pop
lcall
enter
incb
sub
jecxz
in
xor
sub
insb
movsb
xor
xchg
sbb
xchg
stos
movsl
dec
hlt
je
fdivrs
cmp
add
int3
rorl
add
aam
inc
lods
mov
xchg
mov
mov
and
iret
mov
fstl
test
dec
sbb
lret
iret
mov
rolb
pop
lods
mov
icebp
clc
iret
fiaddl
xchg
push
jl
pop
sti
cmpsl
push
add
inc
popa
nop
fldl
mov
add
rolb
sub
or
shl
rol
cmpsb
movsb
mov
add
aam
jnp
dec
cmp
mov
sub
jge
fcoml
jae
rcrb
jmp
popa
push
frstor
ljmp
jmp
shrl
dec
pop
fistpll
sbb
in
fsubrl
inc
nop
fxch
enter
scas
arpl
jmp
push
orb
push
daa
test
add
mov
push
lcall
mov
mov
mov
mov
xchg
sbb
pop
mov
or
dec
xchg
dec
pop
sub
sar
adc
mov
stc
add
loopne
and
les
cwtl
sti
jne
nop
lret
mov
jbe
jge
mov
jb
jle
push
sti
nop
mov
cltd
insb
lret
out
xor
fwait
xlat
daa
lret
push
and
cwtl
stc
sbb
xchg
daa
adc
pmuludq
and
mov
dec
mov
sbb
sarl
imulb
cltd
fnstenv
stos
js
inc
mov
lods
faddl
clc
pop
jge
jl
pop
xchg
mov
mov
mov
ljmp
jae
rcr
sahf
mov
pop
or
lds
push
adc
pushl
mov
lret
repnz
xchg
jmp
int
push
adc
and
movsb
mov
in
imul
adcl
mov
jmp
pop
fisttpll
out
pop
mov
ror
push
or
mov
and
fstpl
push
pop
push
scas
cld
and
xor
test
xor
mov
inc
test
aad
cwtl
lods
fadds
int3
mov
ds
scas
movups
jmp
xchg
xchg
lods
xchg
pop
jl
jmp
inc
push
xchg
push
add
mov
leave
mov
mov
lods
faddp
adc
push
pop
xor
push
sbb
scas
jmp
les
xchg
sub
sarl
daa
test
pop
jmp
orb
fcoml
int3
out
jp
cli
imul
aas
dec
movsb
cmp
mov
sub
mov
pop
test
inc
pop
lcall
int
pop
fimull
shl
scas
mov
push
mov
lds
and
jge
aam
movsb
adc
mov
push
fldenv
aad
test
inc
loopne
jg
pop
cmp
adc
pop
lods
int3
int3
int
mov
rcll
lret
cltd
in
or
or
pop
pop
arpl
rcll
pop
sub
test
fs
pop
int
adc
arpl
push
imul
xchg
jp
mov
data16
cld
fildll
orl
mov
mov
imul
aas
sub
out
scas
mov
shl
insl
or
inc
mov
sbb
jne
cmp
xchg
cld
es
jae
jae
mov
sbb
sarl
stc
popf
dec
jb
test
jecxz
push
testb
dec
mov
xchg
test
dec
cltd
mov
aaa
cwtl
test
add
push
dec
dec
dec
lcall
or
cmc
adc
pop
sub
push
push
outsb
lock
mov
daa
leave
movsb
and
jbe
dec
fwait
ds
sbb
xchg
loope
movsb
xchg
fldl
xor
push
inc
sahf
xchg
push
jp
lds
into
jl
or
addb
mov
mov
push
xchg
sub
adc
mov
sbbl
xchg
dec
push
and
mov
dec
subl
or
mov
out
fs
mov
jmp
test
add
cli
jmp
jp
int
mov
or
xor
mov
shlb
int3
mov
cmpsb
mov
lret
and
test
or
sbbl
xchg
fnstcw
push
loopne
daa
fists
movsb
mov
and
xchg
mov
popa
sbb
inc
mov
mov
out
aas
inc
rcll
in
fsts
jne
add
repnz
push
ret
inc
xlat
dec
pop
test
push
shll
dec
pop
push
mov
cmp
pop
xlat
hlt
aam
cmp
and
jecxz
xchg
adc
in
fs
jae
divl
repnz
addl
movsl
cltd
mov
mov
iret
cwtl
aaa
cmp
aam
and
icebp
mov
push
cld
mov
or
ja
leave
xchg
cli
jmp
enter
lret
mov
scas
ret
pushf
adc
or
test
sbb
stos
cmp
fbstp
or
lods
mov
int
sti
mov
gs
ror
scas
addr16
and
enter
xchg
fildl
ret
add
xchg
jne
rorb
addr16
fdivrl
stos
aad
test
mov
mov
xlat
push
fwait
les
push
dec
xchg
int3
insl
sub
mov
push
lds
mov
inc
lcall
xlat
jbe
push
jo
iret
adc
cs
aad
adcl
adc
xchg
mov
pushf
mov
sbb
enter
adc
ss
rcrb
or
iret
and
or
test
inc
xor
mov
add
addl
inc
int
mov
ds
es
jno
int3
adc
or
por
xchg
stc
aad
rcl
push
lcall
lret
mov
and
cmp
cwtl
pop
lcall
mov
xchg
outsb
pop
lcall
stos
les
lret
lcall
sti
call
ds
jne
out
sbb
xchg
stos
icebp
ret
mov
fmul
out
or
fstps
mov
mov
les
cltd
clc
lcall
std
iret
mov
add
mov
lahf
xchg
jno
sbb
dec
bound
leave
inc
aam
inc
ret
push
addb
mov
stos
fidivrs
or
std
mov
sbb
es
xchg
mov
jmp
jge
sub
pop
test
cld
sbb
icebp
or
fimull
jp
iret
bswap
push
mov
sti
rcl
jnp
in
lds
insl
rclb
adc
mov
movl
xchg
jns
mov
andb
jb
std
inc
movsl
push
fidivrs
cld
loop
rol
adc
out
push
sbb
mov
popa
adc
rolb
lcall
pop
jl
lds
adc
xor
cld
inc
loopne
mov
jl
ret
xor
sub
and
lods
test
dec
jo
fimull
cltd
enter
xchg
jle,pn
push
pop
insl
mov
xchg
aaa
out
mov
aad
loopne
adc
jl
mov
push
jge
lock
jecxz
icebp
popa
mov
sub
call
cmp
jno
adc
or
lock
jns
xchg
xchg
sbb
adc
dec
cltd
xlat
stc
sub
aam
leave
loope
cmp
icebp
or
cmp
pop
or
jo
jmp
mov
xor
add
adcl
xor
add
lods
adc
mov
int3
in
fwait
jp
jae
xlat
xorb
or
push
mov
push
nop
cwtl
inc
mov
mov
mov
push
and
test
sub
out
xor
movsl
push
mov
and
ret
lcall
lods
mov
mov
dec
leave
iret
or
sbb
sbb
mov
out
rcrb
jl
mov
push
cld
in
xor
enter
xchg
loop
mov
jp
cmp
insl
inc
add
mov
and
jge
clc
repnz
int
fistps
mov
test
inc
dec
shrl
pop
and
cmp
out
mov
sub
jp
test
pop
aad
mov
jl
into
mov
rcll
pop
jg
mov
push
cmp
shl
dec
faddl
repnz
cmc
movsb
pop
cmp
or
or
and
iret
xor
add
movsl
call
popf
es
jl
dec
aaa
lods
sar
pop
shl
jp
mov
push
adc
inc
repnz
or
jbe
test
and
push
mov
jmp
in
mov
pop
cmp
sarl
imul
test
aad
test
pop
push
cmc
test
sbb
aad
std
jmp
nop
adc
ret
leave
mov
or
xchg
mov
rorb
sbb
notb
and
and
sbb
pop
in
jle
shlb
dec
cltd
ljmp
dec
test
jo
mov
mov
adc
incl
adc
iret
rclb
push
mov
mov
stos
lods
ret
and
sbb
mov
ret
mov
xchg
ds
test
cmp
jmp
cwtl
jle
xchg
push
leave
ffreep
aam
jb
insb
mov
int
popa
push
sbbl
or
js
sbb
adc
sub
mov
push
push
jp
dec
shl
fcomps
add
push
dec
mov
in
adc
mov
adc
sub
mov
sbb
loope
shll
movsl
dec
ret
dec
clc
inc
cmp
xchg
pop
mov
adcb
insb
push
xchg
cld
xchg
fmul
in
in
addr16
jl
les
or
test
lods
dec
aas
sti
daa
stos
jnp
fdivr
test
xchg
lcall
push
aam
out
mov
mov
cld
popa
sub
mov
popa
and
xor
mov
lahf
and
xchg
adc
std
neg
call
cld
ds
cltd
add
cmp
addr16
fildl
data16
fsubp
xchg
cmp
dec
cmpsl
test
int3
mov
lret
inc
jb
mov
in
lcall
fsin
or
sub
push
mov
aas
inc
or
xor
pop
xor
ret
cmp
lret
jbe
dec
inc
and
lret
out
mov
or
aas
sbb
mov
push
jg
mov
aaa
in
clc
push
mov
mov
mov
loope
or
sub
mov
sub
das
cld
sub
dec
adc
dec
dec
stos
out
and
jo
sub
aam
mov
pop
test
sub
je
mov
testb
sbb
mov
das
lods
xor
cltd
push
or
orl
push
rol
insl
push
or
jae
aas
lock
pushf
mov
mov
mov
add
orl
jb
or
jb
pushf
adc
dec
test
or
popf
dec
jo
mov
roll
push
inc
lods
pop
sub
stos
les
jbe
pop
out
daa
and
mov
arpl
sti
faddl
movsb
enter
inc
mov
add
pop
sar
js
mov
inc
test
pop
je
inc
pop
std
jbe
int3
outsl
adc
aam
mov
leave
cld
shlb
sub
call
fisubrs
mov
cmp
jp
dec
dec
cmpsl
dec
rcrl
fsts
clc
xlat
or
push
rclb
push
ret
adc
jle
add
xor
dec
push
cmp
sbb
mov
cltd
push
inc
xor
jne
adc
jecxz
xchg
xchg
cwtl
inc
movl
add
pop
sub
dec
int
nop
stos
inc
add
mov
sub
shl
jmp
sbb
add
add
lret
iret
cmc
in
adc
lds
addr16
add
sub
push
rcll
and
addr16
sub
test
movsl
fcompl
pop
mov
fiaddl
jl
daa
mov
cli
clc
add
movsb
shll
mov
cmpsl
outsb
enter
nop
decl
jp
cmp
dec
rcl
xchg
sahf
pop
stc
sti
push
scas
and
fbstp
shr
arpl
xor
add
rcl
and
inc
aad
addb
lods
nop
xlat
dec
aam
cmc
xchg
rolb
jae
lock
xor
cmpl
jno
xor
call
mov
imul
fwait
cs
imulb
adc
ret
gs
sub
mov
sub
mov
push
jb
mov
sbb
bndstx
int3
xor
jne
sti
mov
jg
mov
das
test
push
xor
inc
mov
cmp
sub
adcb
movsb
insb
jmp
xor
cli
and
movsb
mov
sub
mov
fidivrs
mov
outsb
pop
aam
add
cmc
imul
inc
in
adc
loope
mov
adc
lods
iret
adc
jne
xor
dec
lret
insl
cmp
adc
inc
mov
fcoml
mov
xor
pushf
cmp
or
inc
inc
repnz
imul
pop
inc
adc
aas
dec
dec
mov
or
outsl
mov
ds
add
add
add
out
jle
lcall
jb
inc
jmp
lds
lcall
add
test
cmpsb
cltd
mov
sbb
or
rdpmc
mov
outsl
sbb
out
cmp
mov
xlat
pop
inc
addr16
aam
popf
sbb
lock
cmp
ret
mov
cmp
and
cmp
sahf
mov
stc
scas
bound
sub
mov
mov
dec
test
in
in
xchg
testl
or
scas
inc
mov
cs
lcall
shr
movsl
fstpt
mov
aad
xchg
sbb
popf
jmp
mov
xor
insl
jle
dec
shr
jns
stc
adc
jnp
mov
int
insl
pop
push
sub
ljmp
push
rorb
and
mov
lahf
push
sbb
fwait
or
or
sub
jecxz,pt
pop
adc
fstpt
cltd
xchg
xor
push
mov
arpl
cmp
mov
test
adc
lret
mov
push
std
aam
inc
lods
xlat
rcll
sar
push
sbb
push
xor
mov
repnz
pushf
roll
jle
push
xchg
cwtl
push
push
push
inc
cmp
das
ret
loopne
push
push
xor
sub
dec
popa
mov
xchg
stc
dec
sub
xchg
roll
xchg
adc
dec
adc
mov
clc
mov
mov
pop
and
pushf
and
xchg
scas
push
fxch
es
adc
lods
push
ja
int3
pusha
addr16
fcoms
or
gs
movsl
ret
push
mov
or
adc
arpl
sbb
pop
outsl
or
jg
add
dec
adc
roll
ret
imul
aad
pop
sbb
mov
out
cmp
out
adc
dec
lret
pop
bound
or
adc
or
popf
sarb
cmp
ds
movsb
push
xor
sbb
jb
bswap
push
fstpt
popa
cmp
or
cmp
repnz
or
dec
push
insb
js
sbb
int3
add
repnz
fadd
cmp
adcb
pop
mov
cmp
test
insl
negl
xchg
push
ja
cmpl
push
dec
repnz
cli
push
mov
jbe
imul
inc
popf
mov
mov
int3
outsl
out
repz
stc
aam
xchg
cmp
or
adc
mov
jb
dec
loop
mov
cmp
out
and
roll
popl
rol
jp
enter
dec
mov
in
std
dec
sub
cmp
or
cmp
fiadds
adc
xor
adc
pop
iret
loopne
bnd
rcrb
fmull
push
sub
push
jbe
fsubr
test
dec
in
mov
mov
cmpsb
inc
lret
ds
movsl
stos
or
maxps
mov
adc
js
es
add
sbb
xlat
sub
jmp
sbb
sbb
packssdw
pop
adc
mov
or
push
jae
adc
cld
push
call
loopne
and
xor
inc
mov
aas
push
or
mov
xchg
es
sub
jae
pop
cmp
cmp
cld
push
pop
std
dec
xor
push
stc
dec
lods
push
pop
les
fildll
xor
repz
mov
test
or
clc
mov
dec
inc
sarl
inc
mov
aaa
mov
in
add
ret
shll
bound
fistpll
popa
sub
add
add
add
mov
push
push
mov
inc
mov
cmp
int3
test
inc
adc
cwtl
xlat
push
push
xchg
mov
pop
sbb
adc
fstl
pop
push
lock
sbb
jae
pmovmskb
add
sbb
sub
adc
inc
push
or
jmp
cmp
dec
xchg
std
jmp
adc
lret
test
inc
hlt
cmp
mov
or
sahf
movsb
leave
vsubps
xor
imul
insl
rcl
test
push
pop
fistpl
ret
dec
div
lds
xchg
movsl
stc
pushf
sub
shl
sub
lods
mov
sub
add
push
and
cmp
je
shll
pop
adc
adc
int3
pop
pop
mov
movsl
add
lcall
jns
aam
xchg
mov
push
mov
js
fiadds
pop
aam
mov
dec
xor
push
dec
popf
inc
inc
stos
cli
lcall
cmp
xchg
pop
je
push
je
dec
shl
xor
dec
mov
enter
xchg
movsl
dec
push
xchg
push
bound
loop
arpl
adc
sar
jmp
nop
repnz
adc
mov
adc
cwtl
inc
mov
sbb
enter
jl
xor
dec
add
cwtl
jns
mov
inc
xchg
dec
rcr
xchg
mov
mov
fdivrs
ljmp
cmp
inc
rcl
fmuls
aas
pop
xchg
xor
dec
jb
out
in
iret
ficomps
dec
sub
fcmovnu
dec
mov
clc
cld
sbb
and
jne
add
pop
cmp
mov
or
mov
call
mov
stos
jmp
in
cmc
adc
cmp
arpl
dec
fmul
cmpsb
pop
xlat
adc
xor
ret
cmp
leave
imul
es
bound
pop
push
ret
and
stc
lds
push
sbb
lcall
add
std
xor
mov
lods
js
cmp
pop
test
xchg
fbld
and
and
in
out
jno
loopne
popf
call
xchg
insb
mov
dec
mov
xlat
call
sub
ret
outsl
les
scas
and
inc
mov
int
xor
dec
mov
stos
out
ret
bound
stos
lret
mov
mov
out
into
or
mov
push
popf
in
mov
cmp
jnp
cltd
sbb
sahf
fst
aaa
push
shlb
enter
fsubrs
jmp
xor
stc
pushf
pop
fnstsw
add
push
and
mov
dec
lcall
add
test
mov
faddl
add
ja
test
fsubs
add
xchg
sub
cmc
shl
arpl
sbb
inc
lods
gs
in
mov
xchg
jecxz
ja
pop
out
sub
sub
mov
pop
or
popa
stos
repz
out
scas
test
lret
pop
cmp
mov
icebp
xor
rol
cmpsl
int3
pop
mov
cwtl
outsl
xor
adc
insl
pop
add
or
jg
cmp
xor
js
lods
daa
sub
sbbl
fs
mov
push
mov
jl
dec
ret
insb
dec
inc
sbb
sbb
mov
outsb
xor
push
sbb
mov
nop
cld
arpl
pop
sti
or
clc
mov
pushf
and
enter
fsub
adc
addr16
push
mov
sbb
adc
sub
rorb
lds
lret
into
in
inc
mov
jg
mov
ds
popf
inc
sbb
outsl
pop
call
test
pop
jle
pusha
hlt
jmp
and
insb
pop
sub
xchg
js
cmpsl
xchg
pop
jg
or
mov
dec
fs
stc
mov
inc
ret
test
adc
mov
and
sub
lock
mov
mov
lods
imul
rsm
fneni(8087
jg
enter
enter
push
addr16
push
pop
cwtl
dec
lods
aam
inc
pop
into
ljmp
push
mov
daa
dec
xlat
or
into
in
cmpsl
dec
jnp
cld
sbb
cli
push
mov
into
movsl
lcall
rcl
ret
and
enter
adc
jae
adc
push
fcompp
add
es
dec
cmp
call
js
jecxz
rorb
out
or
pop
mov
dec
inc
xchg
jl
jp
idiv
arpl
dec
xchg
test
pop
ret
cmp
fwait
lods
out
int
je
bound
in
addr16
mov
sub
cmpsl
dec
mov
repnz
call
out
cmpb
mov
cltd
mov
repnz
mov
pop
xchg
test
je
test
fistpll
or
in
jb
std
fisttpll
mov
jb
xor
fbld
pop
pusha
mov
nop
insl
dec
xor
fdivrl
jmp
jl
mov
fcmovnu
dec
and
pop
cmpsl
cmp
cmp
mov
addr16
aad
idivb
fstps
mov
aas
nop
cmp
pop
dec
aas
push
fadd
or
inc
movsl
ret
mov
fs
mov
jl
sub
inc
xor
lds
adc
mov
out
jo
ret
or
cmp
movl
shlb
idiv
inc
dec
mov
test
test
mov
ja
jbe
adc
pop
rcll
aam
xchg
jg
adc
call
dec
sbbb
ret
aas
jl
ret
push
pop
adc
jns
mov
dec
leave
cmp
movsl
imul
inc
movsb
mov
popf
dec
or
pop
sbb
mov
mov
fwait
cmp
iret
adcl
adc
mov
fmuls
pop
push
or
mov
xchg
mov
iret
std
scas
jl
in
fisubs
daa
fsts
cltd
pop
into
push
mov
gs
filds
inc
inc
outsb
mov
lret
pusha
pop
gs
fldcw
sbb
in
jle
and
mov
mov
mov
popf
shl
addr16
sub
push
pop
adc
dec
negb
ss
leave
ret
test
gs
jl
push
sub
cmpsb
inc
fisubl
imul
sbb
repnz
stc
fs
dec
ljmp
jns
imul
mov
mov
dec
lock
imul
aad
xchg
repnz
test
sub
in
enter
in
cmp
movsb
adc
lods
push
cmpsb
adc
fdiv
inc
push
add
ret
stc
call
mov
mov
stos
test
pop
mov
loopne
pop
sbb
mov
loope
out
adc
loopne
rorl
mov
pop
adc
dec
stos
popf
add
addr16
dec
iret
loop
imul
loop
fstpl
mov
mov
jmp
aad
decl
cmp
cmp
pop
jp
sbb
mov
insb
inc
pop
mov
push
ja
push
decl
lgs
in
fsubr
mov
mov
loopw
into
lret
leave
mov
mov
dec
dec
cld
int3
mov
xor
adc
lods
xchg
cmc
and
cwtl
fwait
vmulsd
sarl
jle
push
adc
jg
cmp
jle
movb
adc
xlat
mov
xor
mov
mov
es
rcrl
jo
into
ds
mov
adc
mov
add
jnp
movsl
add
push
dec
adc
dec
pop
int
mov
ljmp
out
cmp
shll
aad
xor
popa
dec
mov
xchg
xor
pop
enter
mov
les
adc
cltd
lds
mov
push
add
mov
xlat
jb
test
pop
pop
jns
adc
lahf
cmp
enter
sbb
popf
fisttpll
repnz
dec
adc
test
and
mov
leave
push
insb
jno
or
and
inc
jg
pushf
or
pop
cltd
inc
cltd
aam
addb
mov
les
push
out
dec
stc
addl
dec
or
dec
push
daa
xor
daa
test
inc
fbstp
cwtl
repnz
pop
outsb
jnp
and
adc
push
inc
dec
sarb
pop
cmpsl
mov
mov
adc
orl
sbb
mov
nop
sbb
notb
jp
sub
outsl
call
jo
pop
sarl
orl
clc
jmp
je
loopne
arpl
push
mov
lods
ret
mov
mov
cltd
adcb
cmpsl
fmul
in
lret
gs
fcmovnbe
lds
stos
nopl
jp
jne
fmull
movsb
pop
mov
adc
xchg
mov
jb
paddw
repnz
sub
scas
fsubl
push
in
nop
arpl
cmpsl
mov
data16
cld
inc
shl
setbe
pmaxub
cli
xchg
jb
fisttps
mov
fdivl
lret
and
or
mov
pop
shrl
in
and
les
sbb
push
stc
dec
fistps
xlat
mov
ret
adc
push
out
out
push
and
fiadds
js
and
ja
jmp
jo
fcomp
dec
xlat
push
std
fwait
push
xchg
loopne
inc
mov
push
jns
fsts
pop
pop
pusha
mov
test
jo
add
iret
jo
jge
mov
pop
dec
sbb
faddl
mov
aas
push
or
je
fisttpl
cwtl
lods
sub
out
out
aaa
cmpb
or
mov
les
cmp
pop
enter
lret
call
add
push
insl
xchg
test
jnp
popf
fmull
hlt
jmp
cmp
movb
lds
cwtl
int3
fwait
adc
dec
lret
sbb
sub
mov
aas
fdivp
pop
cltd
aam
repnz
mov
aam
ja
dec
jnp
mov
adc
dec
cs
push
mov
cmp
enter
lahf
movsl
cli
pop
es
dec
xlat
fsts
inc
int3
mov
pop
push
scas
mov
rcrb
sbb
mov
jmp
enter
jmp
lods
mov
inc
sbb
shlb
mov
lcall
in
cmp
insb
mov
sti
inc
cwtl
aam
pusha
pop
inc
pop
repnz
add
ja
sbbl
and
mov
dec
sub
pop
push
pop
stos
in
pop
sbb
fs
push
jle
lea
stc
mov
repz
stos
lcall
lret
cmp
xor
in
and
jle
in
cld
cmc
push
lret
cld
xlat
cld
cmp
ds
dec
inc
sbb
or
adc
or
jle
or
xor
mov
es
fmulp
aad
in
movzbl
lret
fldt
mov
or
adc
xchg
popa
add
insl
in
lcall
xchg
sbb
out
int3
mov
adc
mov
lcall
mov
lret
test
xchg
sbbl
pop
jl
and
lret
mov
fldenv
add
inc
loope
sbb
jbe
test
orl
fsub
repnz
popa
jbe
dec
push
lods
call
and
adc
cmp
lcall
or
std
lea
and
lret
jge
insl
sub
js
and
test
clc
imul
mov
inc
adc
call
jp
cmp
in
lcall
adc
addr16
fbld
add
ficomps
leave
shrl
mov
xchg
and
mov
xor
jns
pop
fisubl
imul
ror
rclb
gs
dec
andb
rcrl
xchg
addr16
shrl
js
or
movl
stos
enter
xchg
jp,pn
sbb
shlb
adc
xor
cli
dec
std
js
add
imul
inc
and
pop
mov
adc
scas
daa
cli
xor
sub
out
nop
cmp
push
lods
jne
inc
out
aad
lret
mov
mov
dec
leave
fs
incl
mov
sbbl
add
ret
loop
data16
mov
ret
push
int3
jge
dec
jo
shll
mov
out
scas
push
shlb
cmpl
mov
iret
repnz
in
les
cli
push
fwait
outsl
shlb
jb
or
sbb
stc
pushf
xchg
push
popa
jle
and
fisttpll
inc
enter
imul
add
mov
repnz
jmp
adc
popa
jne
fnstsw
mov
lcall
push
dec
ret
mov
stc
jecxz
inc
cmp
mov
test
push
push
push
xlat
insl
add
pop
and
jns
rol
fimull
enter
movsb
jo
rorl
lret
out
cli
ja
mov
rol
outsl
inc
or
xor
dec
push
repnz
mov
mov
or
loop
fcmovnu
out
int
lret
fcoml
xor
sahf
add
and
mov
lret
roll
mov
orl
jb
or
mull
mov
add
xor
mov
mov
shlb
sbb
inc
dec
lds
sub
cmp
push
pop
mov
lcall
pop
out
test
add
adc
jns
cmpsl
aad
push
cli
inc
sti
inc
pushf
lods
fs
dec
push
lea
sub
in
sahf
stos
push
inc
out
rcl
mov
jns
fcoml
test
into
mov
pop
rcll
mov
mov
jmp
aaa
out
mov
test
jo
inc
mov
or
jno
push
or
shl
pop
rorl
xor
xchg
cld
pop
pop
stc
sarl
push
push
movl
add
movsl
scas
arpl
xor
add
mov
out
pop
jp
sti
mov
lahf
push
shrb
push
gs
addr16
dec
xchg
mov
hlt
sub
and
leave
cmpsl
iret
fisttps
data16
push
lret
mov
loopne
push
inc
sub
iret
and
inc
in
pop
cli
jecxz
add
mov
scas
movsb
rorl
scas
push
sbb
push
fdivrs
or
into
imul
sbb
addr16
or
jne
add
into
ds
mov
mov
ret
cmpl
test
inc
fcoms
dec
push
mov
sub
xchg
dec
mov
std
fisttps
pop
rclb
jle
push
sub
notl
push
mov
iret
cmp
enter
std
or
adc
sahf
adc
push
outsl
lret
mov
fsubs
fimull
xor
xchg
add
pop
jne
insl
fmulp
inc
bnd
jle
aam
aam
nop
gs
lock
pop
and
cmc
jge
add
test
test
mov
shl
sub
test
add
mov
cmpsl
shrl
inc
xchg
add
fs
ljmp
lret
in
add
jne
jns
vunpcklpd
dec
outsb
out
lcall
test
adc
pop
mov
dec
lea
pop
test
movsl
mov
mov
popf
fwait
pop
sub
add
push
dec
xchg
or
cltd
add
jge
addb
outsl
jb
cmp
scas
loopne
cwtl
or
scas
cmp
movsb
sub
push
inc
xchg
loopne
adc
popa
lcall
sub
pop
rorb
std
xchg
adc
cwtl
hlt
stos
add
call
sbb
mov
push
repnz
cmp
mov
ljmp
daa
lret
xor
and
jp
cmp
pop
push
mov
cwtl
mov
dec
dec
mov
stos
push
aaa
sti
push
pop
jmp
pop
pop
jl
insb
xor
cmp
mov
test
test
jmp
jecxz
enter
push
jg
dec
sarl
out
lea
jl
jb
cld
jnp
sbb
testl
mov
inc
pop
lret
sub
sbb
test
mov
lods
sti
push
push
jo
sbb
mov
xchg
push
push
push
ret
pop
mov
or
dec
push
fcomps
jp
lds
iret
add
lods
enter
aam
mov
ret
leave
mov
xorl
fsubrp
pop
lcall
sbb
and
ja
pushf
jl
in
inc
ret
cmp
mov
arpl
andb
mov
shlb
push
pop
fildl
jle
int
test
sbb
and
lods
sbb
sti
icebp
pop
mov
mov
cld
jmp
mov
add
frstor
enter
les
mov
sub
dec
mov
fnsave
dec
cli
xchg
imul
adc
adc
push
pop
stc
jns
xchg
pop
movsb
in
mov
cld
leave
cmp
add
lds
sbb
dec
movl
stc
and
setae
mov
nop
testl
mov
out
jo
inc
xor
into
test
pop
pop
mov
add
xchg
sbbl
and
dec
out
iret
and
jl
push
in
repz
test
ljmp
dec
jp
xchg
das
mov
mov
stc
xchg
stos
pop
ljmp
inc
xlat
stc
mov
push
sbb
inc
push
mov
lea
shlb
aad
adc
jmp
adc
sub
mov
cltd
test
cmpsl
fdivs
inc
mov
sbb
cwtl
cmp
icebp
fwait
or
test
xlat
lret
out
pop
out
pop
add
out
std
cmp
aaa
xchg
cmp
les
shll
xchg
inc
jmp
jbe
mov
pop
pop
shrl
dec
cmp
cld
lods
les
xchg
sub
cmp
cmp
or
and
xchg
inc
inc
inc
sarl
push
dec
les
fcomps
adc
lcall
add
fsubs
fcmovnbe
packsswb
out
jl,pt
add
add
push
mov
repnz
jle
mov
test
gs
rorl
xchg
adc
inc
jns
pop
mov
cmp
mov
add
xchg
and
mov
jns
cmp
lock
nop
inc
and
test
add
enter
shrb
jmp
ja
cmp
arpl
push
outsl
lock
inc
loopne
insb
and
sub
mov
leave
jl
pop
repnz
aam
sbb
testb
enter
or
jmp
mov
mov
fwait
cwtl
popf
inc
cltd
add
cmp
lds
and
nop
aad
iret
pop
pushf
dec
lret
xlat
dec
inc
sti
adc
mov
in
inc
sub
shll
ret
stc
add
adc
dec
stc
dec
adc
mov
push
stc
data16
lds
ss
decb
dec
stc
popf
jne
mov
mov
cld
pop
into
pop
mov
stc
xor
mov
push
add
retw
mov
cs
xor
lret
ss
dec
mov
icebp
mov
test
fidivl
rcl
lcall
stc
sub
les
and
cmp
aaa
jo
test
mov
sbb
dec
fwait
adc
movsb
sbb
xor
and
cmp
jmp
mul
mov
pusha
imul
sub
mov
and
sub
popf
call
pushf
pop
gs
int3
dec
jb
ljmp
scas
inc
ja
inc
fcomps
mov
mov
xor
push
movsl
shrl
mov
stos
sub
xor
loopne
push
ret
xchg
mov
lret
xor
push
cld
cld
cmp
lcall
lods
pop
xchg
sbb
pushf
or
adc
scas
dec
push
jmp
xchg
or
and
inc
enter
inc
mov
enter
jns
popf
popa
mov
mov
fmuls
mov
mov
addr16
push
repz
ficompl
xor
lret
pop
inc
pop
sbb
mov
sub
mov
jg
fisttpll
pop
sbb
sub
inc
push
xor
push
lret
cmp
dec
inc
push
mov
bound
mov
lret
pop
aas
sub
add
lcall
mov
xlat
push
mov
sti
cmp
shlb
mov
mov
push
aam
test
cld
fldl
fimuls
popa
push
sar
lahf
fistpl
jp
in
rcrl
sub
mov
imul
cmp
jp
cmpsb
stos
add
mov
aas
rorl
fstps
jns
aam
jg
push
cmpsl
leave
lods
arpl
stc
cmc
loope
test
stc
xchg
shll
nop
or
inc
and
xor
push
jmp
and
sbb
mov
sbb
xor
lret
or
mov
sbb
lret
dec
pushl
push
aam
inc
iret
test
cmpsl
pusha
mov
mov
pop
sbb
cmpsl
pushf
pop
mov
fcmovnu
mov
fildll
xacquire
test
jecxz
jbe
pop
lods
test
dec
out
in
dec
lea
mov
scas
cmp
and
inc
bound
stos
imul
lret
lcall
pusha
or
xlat
mov
jle
leave
cmp
lock
mov
cli
out
arpl
mov
dec
mov
lds
scas
popf
aad
shll
cwtl
cwtl
jo
jle
adc
enter
pop
pop
leave
sbb
dec
and
pslld
loop
mov
movsl
lret
dec
ret
adc
cmp
ds
xchg
sarb
cld
into
or
sbb
negl
test
pop
aam
aam
mov
mov
pop
xchg
sbb
xor
fdivrs
cmp
jns
mov
shll
or
push
mov
dec
mov
dec
fwait
xlat
xchg
gs
cmpsl
rcrl
add
nop
movsl
lcall
pop
daa
jo
jae
xor
xchg
bound
mov
mov
out
cmc
add
gs
add
pop
xchg
cli
jo
sub
sahf
rolb
idivb
sub
dec
int3
mov
jne
in
cmp
jnp
inc
sbb
mov
pop
shll
imul
push
test
icebp
pop
ljmp
add
negb
sbb
lcall
pop
ficoml
inc
push
fucomi
dec
mov
pop
sbb
add
movsb
mov
mov
dec
adc
sbb
dec
xor
dec
cmp
fidivrs
fdiv
movsb
movaps
mov
dec
fsubl
or
rcr
adcb
ret
cmp
sbb
sarl
shlb
fidivrl
add
xor
ret
adc
call
mov
mov
mov
adc
xchg
add
lock
pop
mov
loopne
popfw
pop
daa
dec
out
ja
fidivrs
or
mov
push
fmuls
adc
push
in
sbb
push
push
fldenv
ljmp
or
lahf
pop
adc
push
mov
stos
ljmp
orl
mov
mov
adc
or
nop
sbb
dec
aaa
jne
out
sti
into
jge
push
pop
ret
push
pop
inc
loope
push
sbb
imul
sub
sub
std
in
jmp
notl
dec
addr16
mov
pop
test
mov
cwtl
iret
stc
pop
leave
mov
fmul
sti
lds
mov
ret
mov
push
mov
outsl
subb
int
stc
mov
mov
mov
mov
inc
cwtl
stc
test
mov
and
sbb
mov
pop
mov
push
push
bsr
in
push
mov
xchg
ror
jl
movsl
shrb
sbb
mov
push
cmpsb
out
rorl
xchg
dec
movl
sub
cmpsl
xor
fldl
mov
mov
stos
stc
dec
jne
iret
adc
movzwl
mov
or
mov
imul
shl
mov
add
adc
jno
push
xor
mov
scas
mov
sti
mov
arpl
cmpsb
adc
sub
test
pushf
cmp
jmp
scas
push
push
inc
mov
ficoms
cmc
mov
mov
insb
mov
loopne
sbb
xor
ret
sub
inc
loopne
jae
mov
pop
mov
cmp
stos
fdivrs
jo
xchg
xor
dec
fimull
pop
dec
loopne
jns
orl
cld
les
addl
sti
arpl
cltd
cmpsb
cwtl
adc
mov
and
jmp
aaa
sbb
jnp
fldcw
push
pop
cmp
mov
sti
loopne
mov
cltd
nop
and
outsb
stc
in
push
rcrl
or
cltd
popf
ja
insl
sub
mov
pop
sti
mov
cltd
add
shr
mov
jp
xchg
xchg
sbb
jl
adc
xorb
push
fmull
mov
insl
loop
dec
pop
loopne
popa
ljmp
dec
mov
cli
inc
dec
xchg
fistpl
mov
paddq
stos
sub
cmpsl
ret
addb
jb
or
subl
jp
xor
jge
inc
stc
leave
mov
enter
das
popa
in
sbbl
cltd
ss
sub
inc
test
cltd
mov
ss
or
or
out
stc
fwait
add
and
pop
cmp
push
cmp
or
dec
pushf
cmpsb
inc
int3
lods
push
cmc
mov
loopne
lods
or
push
dec
enter
cld
ja
mov
jb
into
push
dec
mov
ficompl
test
scas
dec
dec
test
fidivrs
cmp
int
add
lahf
imul
test
mov
adc
in
or
xor
sbb
dec
push
adc
sub
test
push
aad
dec
cld
stc
fld1
jno
repnz
cmovno
lcall
add
jl
mov
jmp
stos
dec
call
adc
cmp
jne
jp
loopne
and
test
test
popl
insb
mov
pop
je
dec
jmp
lods
loopne
je
int3
ret
repnz
xchg
dec
jb
pop
movsb
lret
add
cltd
mov
imul
xlat
rclb
adc
and
test
filds
je
aad
pop
hlt
ret
int3
xlat
int
xorb
add
popf
in
test
cmpsl
cmp
idivb
jnp
lcall
adc
push
mulb
push
loopne
fcoms
cmp
lret
xor
les
cmp
movsb
into
mov
mov
aam
mov
pop
inc
pop
push
push
sub
loop
rorl
arpl
inc
ljmp
adc
mov
repnz
pop
mov
xchg
xlat
scas
and
pop
nop
add
aad
out
xor
cld
inc
popa
xchg
pop
lret
dec
leave
push
enter
mov
xor
movsb
cmp
sti
push
testb
pop
pop
add
bound
enter
lea
cld
insb
lods
test
fistpl
fdivrl
xor
in
push
xlat
inc
dec
or
fnstsw
cmp
nop
enter
sub
push
cmp
les
sti
mov
sub
cltd
popf
dec
movsl
xor
cmp
mov
lret
xor
repnz
fwait
ds
addr16
dec
in
mov
lds
or
sti
ret
shrl
dec
xchg
cmpsb
pop
push
mov
xchg
jl
iret
adcb
cmp
jp
sar
dec
mov
cli
xlat
int3
or
lcall
jo
dec
stc
or
lds
mov
int3
pusha
mov
test
fstps
xchg
mov
test
fsts
push
mov
mov
cmp
cmpsl
mov
int3
test
push
negb
ret
cwtl
mov
jle
cmpsl
inc
test
jnp
pop
loopne
pop
lds
data16
xchg
adc
sub
pop
jae
inc
dec
pop
and
pop
cmp
lods
mov
popl
xchg
fstps
ror
inc
data16
xchg
stos
or
xchg
mov
ljmp
mov
cltd
iret
mov
cmp
xor
outsl
mov
lods
mov
sbb
push
mov
shll
mov
push
outsb
outsb
movsl
cli
addr16
shr
mov
aad
sub
lret
addr16
push
aas
push
aad
lcall
sub
movsb
pop
lds
fldcw
mov
push
jmp
jbe
ret
xchg
push
mov
pop
loopne
mov
mov
fwait
xchg
or
enter
inc
lcall
inc
sub
and
or
mov
jl
xor
cmp
test
dec
inc
scas
push
xor
enter
addb
fisttps
pop
pop
repz
int3
stos
jl
cmpxchg8b
lds
dec
ss
mov
sub
gs
in
push
pop
jae
roll
add
mov
bound
fdivrs
stc
cmp
in
or
xchg
inc
inc
lds
cld
ret
cli
sbb
pushf
mov
push
cs
sub
in
mov
movsl
push
ret
cmp
cmp
insb
dec
push
lret
mov
xlat
cmpsb
addr16
rcrl
xor
push
xor
or
mov
popa
popf
xchg
mov
loop
pop
loop
mov
imul
sbb
mov
insb
ds
xor
lcall
adc
rcrl
inc
sbb
loop
scas
and
add
sbb
rol
pushf
xlat
test
leave
lcall
xchg
or
push
dec
cmpsl
movsl
and
pop
enter
ds
pop
fcomp
add
pop
fisubrl
popf
sub
push
inc
pop
mov
adc
jl
les
or
into
pushf
add
xor
mov
jge
xchg
movsl
push
sbb
rcrb
or
mov
js
adc
ficoms
push
push
das
xor
cmp
lods
jmp
jbe
jae
inc
fsubrl
out
xchg
cwtl
mov
push
test
push
push
ret
fidivs
cmp
pop
ja
btsl
pushf
push
add
mov
or
fidivrs
dec
mov
pop
adcb
mov
jb
lcall
lds
xor
test
ret
test
fbld
test
lods
add
popa
mov
mov
ret
add
mov
popf
inc
mov
bound
je
push
lcall
pop
pusha
repz
sbb
lret
aad
fisttpll
push
mov
mov
daa
int
enter
insb
enter
pop
pushf
jb
adc
clc
pop
rorb
adc
pop
adc
mov
mov
dec
dec
dec
je
popf
inc
or
int
mov
dec
int3
mov
inc
cmp
dec
lods
sub
fldcw
xchg
sub
lea
add
inc
push
cmp
cmp
pop
cmp
jl
inc
mov
mov
ja
movsb
mov
daa
jnp
scas
or
adc
pusha
mov
out
repnz
fcmovne
jge
jns
fldcw
lds
pop
jae
cs
roll
sub
loope
stc
xchg
cwtl
stc
xchg
popf
imul
sarl
test
adc
and
cltd
imulb
pusha
bswap
adc
int
xchg
rorb
sahf
popl
enter
inc
adcl
or
lea
fsubs
test
shrl
xchg
insl
mov
jns
or
pop
shll
sub
xchg
hlt
sub
fsubl
xlat
rorl
cltd
or
and
lret
cli
mov
dec
fs
pop
lods
popf
sbb
cmpsb
inc
call
pop
popf
sub
shrb
shl
sbb
dec
inc
dec
pop
cli
push
adc
cltd
fldcw
lcall
jns
movb
pop
xchg
mov
int
push
iret
xchg
fidivs
sbb
popf
mov
lcall
mov
loopne
dec
ret
push
or
mov
or
mov
push
sbbl
push
push
adc
lcall
sbb
sbb
rolb
or
fsts
mov
imul
lds
out
sti
xchg
std
punpckhdq
adc
fcompl
or
push
jecxz
dec
call
pop
loop
fwait
popf
pushf
sti
mov
xlat
and
lcall
pop
pop
dec
dec
or
add
inc
ret
push
sbb
negb
mov
pop
test
or
lcall
in
add
mov
rcl
hlt
fldl
or
mov
stos
fdivrp
and
mov
jecxz
and
mov
mov
pop
je
mov
data16
sbb
ret
push
cmpsl
xchg
or
scas
jne
push
push
loopne
sub
inc
jmp
js
ret
xchg
cltd
xor
mov
sarb
outsl
inc
cmpsl
pop
mov
testl
dec
lods
mov
xor
or
dec
pop
fcmovu
mov
jl
into
xchg
pop
ror
cmc
cmp
xlat
stos
test
or
je
mov
loopne
jbe
push
lret
xchg
push
add
add
out
jge
mov
dec
mov
push
pop
sbb
xchg
shrl
mov
lds
xchg
outsl
inc
popf
mov
mov
sbb
jbe
inc
test
rorl
lcall
pop
inc
sbb
das
fcmovbe
in
js
aam
cmp
movl
fnstcw
cmpl
int3
lds
movsl
xchg
xchg
xchg
movntdq
sbbb
mov
xor
mul
jl
in
out
shll
fldenv
out
mov
or
cmp
jmp
sbb
pop
dec
insl
pop
cmp
enter
outsl
jmp
fdivl
aad
mov
cld
ja
mov
lcall
cli
cs
sbb
push
sahf
in
lcall
xlat
sub
or
imulb
adc
dec
push
xlat
mov
jecxz
push
pushf
push
add
les
jns
fisttpl
dec
dec
cld
shrl
iret
fdivr
mov
mov
insb
push
stc
lds
stc
mov
stc
les
int
mov
lcall
outsb
fidivs
aad
popf
fmull
mov
cmp
iret
xlat
mov
or
ds
xchg
xchg
in
test
out
iret
into
cli
pop
cwtl
push
shll
fnsave
push
lcall
lahf
loopne
fcoml
pop
adc
enter
mov
mov
push
add
rol
mov
mov
pushf
sti
mov
and
pop
mov
xchg
lods
pop
jne
lcall
lcall
test
lods
mov
lret
stos
idiv
scas
jmp
mov
stc
and
test
lret
bnd
cmpsl
test
dec
sbb
aad
sub
shrb
mov
repnz
mov
push
loope
mov
dec
cwtl
pop
push
cli
sbb
aas
mov
jl
sbb
dec
pop
add
add
loopne
adc
sbb
cmp
call
mov
mov
shrl
popf
jp
mov
push
cmp
ds
leave
cld
fiadds
mov
and
inc
stc
add
inc
xchg
cmp
iret
sarb
mov
dec
sub
lret
sbb
add
dec
into
test
pusha
aam
adc
or
adc
call
cmp
insb
jns
pop
lret
enter
and
sub
cmp
loop
jns,pn
sub
xchg
loopne
ret
pop
dec
and
dec
jne
stc
mov
and
sahf
pop
xor
aam
cwtl
sti
fadd
push
or
pop
loopne
sub
outsl
or
sbb
xor
push
add
fdecstp
pop
dec
or
imul
mov
dec
ret
cmp
sti
dec
xor
cmp
aas
in
cmp
popf
cmp
xchg
sbb
jecxz
cmpsl
mov
inc
in
or
mov
mov
pushf
enter
or
inc
fldcw
ret
xchg
add
shrb
sbb
pop
outsb
dec
or
and
leave
lret
inc
iret
pop
pop
jbe
sti
dec
sahf
push
sar
faddp
or
xor
and
leave
ret
push
jle
dec
shll
jp
cltd
add
adc
mov
xor
or
aam
cld
les
ret
je
lret
sbb
cmp
dec
imul
mov
add
sbb
or
push
pushf
sub
mov
inc
dec
data16
cmp
or
sbb
jne
popf
fistpl
lahf
sbb
dec
xchg
mov
leave
std
pop
cli
push
lret
push
jecxz,pt
cmpsb
lcall
out
jno
mov
xchg
mov
mov
bound
adc
jb
mov
push
cmp
or
sbb
push
enter
jns
mov
aam
call
aam
push
cmp
push
sarl
call
push
iret
adc
ret
aas
dec
add
xchg
rcll
ret
sbb
int3
push
inc
dec
xor
dec
lret
xrstors
cmp
rcll
das
mov
or
sub
repnz
inc
xor
push
push
sub
inc
arpl
test
ret
rcl
dec
add
cwtl
xchg
xor
lret
or
les
pop
lds
mov
sahf
push
lods
xchg
cmpsb
push
cli
adc
pop
push
and
nop
cmp
mov
enter
dec
push
fdivl
xchg
and
mov
or
push
loop
pop
popa
iret
push
daa
sbb
stc
add
cmpsb
inc
mov
push
inc
cli
test
dec
or
shlb
test
sahf
stc
and
ficomps
or
in
add
and
les
lock
ja
jp
xchg
rcrl
push
inc
mov
xchg
pushf
xchg
mov
mov
pop
push
sbb
enter
in
rolb
push
cld
cmp
add
mov
cmp
pop
in
xor
adc
cs
cli
cwtl
lods
dec
aam
sti
shrb
fidivrl
iret
cld
jne
outsb
out
xor
xchg
daa
pop
pop
decl
xchg
repnz
incb
mov
shll
mov
pop
scas
mov
mov
jae
push
arpl
imul
sbb
xlat
test
pop
daa
dec
adc
sbb
mov
jp
jnp
test
test
rorb
gs
dec
push
push
inc
repnz
pop
sub
leave
sahf
hlt
lods
push
fcomi
cmp
sub
sbb
add
add
or
out
or
cmp
mov
lret
lret
pushf
shl
inc
mov
roll
pop
pop
iret
fiadds
int
jne
ret
popf
xor
test
pop
imul
rorl
les
int
stc
loop
jl
data16
inc
addr16
mov
sahf
add
int3
leave
test
jmp
insl
jmp
popf
testb
js
sub
cs
int3
sbbl
cli
in
xor
pushf
stc
push
sahf
add
clc
mov
call
jbe
push
sub
andl
pop
dec
cld
sti
xlat
pop
xchg
cli
sbb
repnz
aam
bound
lret
jg
xchg
push
jmp
push
enter
pop
aad
sub
add
leave
xor
jae
cli
ret
lds
mov
add
cli
push
xchg
add
pop
cmpsb
iret
imul
mov
and
cld
cmp
inc
jecxz
add
fists
pop
sub
pop
loopne
das
ss
repnz
addr16
add
mov
aad
in
cmpsl
int3
jl
ror
rclb
jl
sar
fildll
inc
data16
lds
inc
pop
or
adc
dec
pop
push
add
les
lret
mov
xor
and
ds
cli
mov
js
push
repz
sbb
and
jno
repnz
cmp
xchg
fidivs
lcall
lret
and
cld
inc
fisubrs
in
xor
rcr
or
pushf
mov
mov
faddl
popf
adcb
or
test
ficomps
or
mov
mov
ds
and
jge
mov
xchg
lds
and
inc
jns
pop
lcall
or
cmp
mov
adc
push
lcall
stc
mov
sbb
xorb
push
dec
scas
scas
leave
add
dec
pop
dec
fisubs
sbbl
dec
les
cmp
aad
pop
rcrl
adc
mov
inc
mov
xor
aad
fiadds
lea
sar
add
out
rcl
inc
inc
mov
dec
inc
sbb
nop
data16
les
movsl
xchg
mov
stos
dec
loopne
jmp
adc
imul
mov
sub
je
dec
or
stos
pop
mov
jnp
cwtl
outsb
xlat
aad
adc
inc
mov
push
outsl
cmp
sub
lcall
pop
or
lahf
enter
fsub
add
sahf
mov
mov
jns
xchg
lret
xchg
mov
and
test
jle
test
xorl
pop
push
fwait
shll
jp
jb
in
cwtl
inc
or
adc
pop
sbb
sbb
xchg
popf
hlt
roll
fiaddl
or
mov
mov
mov
and
sbb
int
out
dec
rcr
dec
jp
rolb
sub
jle
insl
aad
dec
pop
test
push
addr16
mov
lret
repnz
pop
dec
scas
jp
pop
mov
ljmp
jp
mov
out
dec
rcrb
cmp
pusha
cwtl
daa
xlat
lds
adc
mov
or
pop
or
xchg
pop
xor
mov
lcall
into
test
or
mov
arpl
roll
scas
icebp
gs
insb
movsb
orb
jle
sbb
data16
inc
rcr
les
inc
fdivrl
sub
or
or
pop
mov
and
cs
lret
mov
loop
cld
sti
push
test
jge
lret
mov
add
mov
rcl
xchg
jl
pop
sbb
repnz
xlat
ret
inc
popa
test
add
mov
mov
mov
push
stos
dec
test
dec
daa
mov
jecxz
xchg
movsb
xchg
cmp
ljmp
sub
iret
jae
dec
test
xchg
sub
dec
pop
mov
jo
out
inc
push
aam
cmp
leave
in
dec
ljmp
jne
ja
lcall
mov
jns
xor
lock
rcrl
pop
dec
addr16
sub
cwtl
and
imul
pop
outsb
pop
cli
push
in
or
outsl
xchg
lods
sub
ds
test
adc
cmp
xor
cwtl
push
fsubp
gs
inc
shrb
fisubrs
dec
inc
xlat
andnps
scas
inc
push
xchg
mov
inc
and
test
sub
loop
sub
gs
dec
mov
sti
jge
inc
xchg
rorb
sub
sti
jle
mov
inc
inc
fdivs
or
sbb
enter
subl
xchg
cld
and
add
in
push
sub
cmp
or
movsb
popf
clc
xor
incl
adc
dec
repz
nop
pusha
cmp
loop
sub
mov
cmp
in
arpl
rcll
and
out
adc
and
adcl
dec
ret
mov
and
ret
xor
cmp
add
shlb
outsl
nop
jle
jl
sbbb
jo
fwait
mov
mov
int
cmpsb
ljmp
test
mov
xor
push
cmp
mov
les
dec
fwait
imul
inc
in
jbe
xchg
mov
add
add
stos
ret
mov
cld
test
test
cltd
lds
ret
fsubrl
int
push
sub
fsubl
ret
scas
add
push
int
aad
and
idiv
xchg
cmpsl
into
data16
in
sbb
in
shlb
stos
mov
jmp
dec
mov
jnp
xchg
push
test
add
push
or
fsubs
flds
inc
lret
stos
mov
inc
lods
test
jecxz
pop
jae
sub
ret
inc
shrb
subl
sbb
shrb
leave
cli
test
andl
inc
lret
mov
lcall
lret
shlb
iret
pop
cmpsl
int3
xchg
dec
mov
push
stc
pop
mov
stc
aam
and
daa
pop
mov
and
mov
daa
adc
xlat
in
rorb
hlt
or
enter
push
dec
les
stc
inc
aas
out
inc
and
mov
sbb
ret
addr16
jl
push
pushf
xor
jle
iret
mov
pusha
jb
jbe
ret
sub
inc
push
testb
sub
mov
dec
rcrb
pop
adc
xchg
inc
int3
pop
sub
shlb
sub
inc
adc
les
mov
inc
movsl
pop
mov
mov
pop
cmp
inc
adc
push
sbb
stos
pop
add
arpl
push
lcall
les
cs
hlt
mov
popa
out
xchg
shlb
popf
dec
lcall
and
adc
xchg
mov
mov
jbe
in
dec
xchg
dec
iret
sub
lahf
addr16
stc
xchg
sub
lcall
pop
iret
aam
in
and
and
out
int
nop
ja
pop
mov
rolb
ja
sbb
pop
cli
cmp
jns
imul
pop
push
mov
pushf
and
fimuls
movsl
sbb
out
add
test
inc
inc
inc
int3
push
aam
adc
fwait
aam
cltd
aas
orb
fbld
fiaddl
leave
pop
cltd
or
and
xlat
xchg
or
ret
popa
mov
pop
adc
data16
or
jbe
inc
shl
jb
mov
pushf
push
popf
mov
inc
push
jle
cmpsl
pop
incb
sbb
mov
xchg
push
je
jne
mov
sbbl
xchg
jae
rcrl
in
inc
ret
loop
or
iret
push
gs
ljmp
or
das
test
xor
leave
add
mov
pop
xor
ret
jmp
push
in
adc
pop
inc
cli
into
call
out
rcrb
sbb
jne
cmp
push
icebp
xchg
shrl
pop
aam
mov
into
sub
aad
inc
and
xor
cmp
pop
outsb
imul
pop
xor
and
mov
jns
iret
subl
add
xchg
jl
jl
rolb
popf
jns
or
sub
adc
popf
insl
pop
popf
lods
shlb
mov
mov
pop
mov
inc
push
adc
or
xchg
and
push
cli
flds
pop
or
mov
mov
in
scas
sub
pop
adc
pusha
in
push
jl
dec
addr16
fistps
pop
xor
pop
fldl
cmp
int
or
xchg
cltd
push
cld
mov
pop
scas
cmpsl
dec
mov
xchg
dec
popf
jge
push
dec
jge
mov
test
xchg
cmp
bound
cmp
mov
pop
out
mov
mov
push
or
int3
add
dec
ljmp
lds
mov
lcall
dec
dec
ret
adc
fbld
pop
xchg
pop
inc
xchg
cmp
leave
fwait
jo
cmp
stos
test
mov
add
std
leave
enter
pop
test
add
jns
sahf
add
inc
fwait
call
sbb
or
or
xchg
ss
and
je
or
mov
out
xchg
and
movsb
cmp
xchg
adc
push
and
jp,pn
jecxz
cmp
imul
scas
out
js
ret
dec
inc
jnp
mov
jne
idiv
lret
stos
mov
xchg
jo
popa
jbe
add
pop
inc
sbb
push
push
dec
leave
ljmp
cs
push
dec
mov
jbe
vpshufd
mov
lcall
test
fstpt
das
insb
enter
test
mov
xchg
bound
push
dec
push
cmpsl
out
push
dec
dec
xor
fmul
sbb
data16
stc
mov
adc
scas
int3
and
je
push
add
movl
pop
enter
cmp
fsubr
into
rcrl
sub
addr16
cmp
call
push
mov
mov
mov
ret
inc
sti
shrb
xlat
or
leave
addr16
adc
test
int3
iret
in
mov
cld
dec
jb
and
push
lret
sbb
cwtl
scas
inc
cmpsl
in
xchg
or
mov
lahf
lret
and
rcll
sti
sbbb
mov
int3
mov
ret
jne
imul
adc
pop
fimuls
inc
mov
jge
xor
fwait
mov
mov
ljmp
fld
lret
test
cmp
xchg
cwtl
push
pop
sti
push
dec
repz
pusha
mov
fidivs
mov
fimuls
pop
dec
test
push
out
add
xor
xchg
lods
shrl
rorb
fsubr
jle
movsl
ret
cwtl
shrb
in
cmpsb
sub
cmp
xor
xor
mov
push
int
ret
sub
pop
and
adc
mov
cmpsl
decb
xlat
xor
cld
push
sbb
dec
dec
lcall
movsl
and
mov
insl
push
jns
lods
cmp
in
vpaddsb
and
pop
pop
xor
push
mov
test
lahf
lret
mov
pop
or
incb
aam
xor
mov
aad
inc
daa
mov
aad
pop
das
gs
sbb
lcall
sbb
icebp
sbb
faddp
push
ret
imul
vmread
or
idivl
mov
push
mov
movsl
cwtl
adc
insl
lea
mov
in
dec
shll
daa
jle
shrb
sbb
fstl
mov
sahf
push
in
mov
clc
jae
cs
push
call
ret
scas
leave
rcrb
in
rolb
cld
mov
jp
jl
mov
xchg
cmpsl
in
xchg
adc
jns
add
cltd
lds
or
xchg
sub
xchg
cltd
cmpl
popa
lret
and
jle
popa
fsubrp
push
je
call
or
outsb
adc
nop
insb
adc
fimuls
sti
js
push
sbb
addr16
xlat
cs
int3
out
sub
sarb
dec
cwtl
ret
movsb
push
and
rorl
sti
jp
sbb
add
pop
aam
cs
mov
pop
cmpl
mov
dec
rcll
sbb
data16
movsl
sahf
jns
dec
popf
inc
les
test
pop
or
xor
int
leave
filds
sbb
xor
aam
add
ds
mov
imul
ret
faddl
hlt
pop
cmp
xorl
xlat
test
popf
fs
mov
sbb
xchg
sahf
pop
ud1
paddd
scas
cmp
je
aas
fs
sarl
les
aad
clc
rcrb
adc
xor
hlt
lahf
xorb
add
rclb
lods
adc
add
imul
jne
int3
lret
pushf
imul
pusha
xchg
jne
sbb
lods
decb
cli
mov
enter
ds
stos
mov
rcrl
lds
mov
stos
adc
or
mov
ret
mov
popa
addr16
jge
pop
leave
sbb
push
push
stos
xchg
mov
loop
lcall
sub
cmc
push
sbb
mov
lds
mov
shlb
rcpps
xlat
sbb
cld
jo
inc
popa
es
cltd
mov
lock
iret
pop
add
sbb
mov
lret
push
roll
add
sbb
fs
add
pop
mov
loopne
pop
ret
sbb
leave
dec
mov
sbb
sbb
scas
imul
stos
jo
addr16
mov
rcrl
movsl
mov
or
pop
push
cmpl
push
fs
jbe
mov
push
cld
xchg
xchg
decb
inc
pushf
mov
shl
scas
aam
add
movsl
mov
outsb
insl
add
mov
mov
test
sbb
and
ret
push
inc
negb
jp
fimull
out
cmpl
test
pushl
jge
pop
fcoml
push
lods
ja
sbb
rol
push
mov
sar
adc
jnp
mov
add
fsubrs
add
sub
jbe
nop
mov
in
pushf
or
mov
sub
jno
jl
stos
bnd
and
mov
shll
popf
jns
icebp
mov
mov
mov
pusha
sbbb
pop
ds
jb
lods
mov
aas
and
addr16
stos
mov
adc
repnz
lret
pop
adc
dec
fmul
scas
inc
mov
jb
fsubrs
cwtl
arpl
mov
dec
stc
xor
leave
jl
or
inc
or
inc
ret
or
mov
mov
cld
push
data16
push
daa
fwait
rorl
inc
mov
loope
loope
xchg
ret
xor
int3
cltd
adc
iret
xchg
or
cld
inc
pop
pop
xchg
adc
fucomp
enter
dec
sub
in
sbb
sub
and
ret
dec
jecxz
jecxz
lds
fiaddl
and
pop
jmp
mov
mov
shrl
dec
test
pushf
insb
mov
dec
mov
lcall
ret
xor
sub
aam
cmp
data16
sbb
pop
aad
mov
mov
icebp
pusha
push
mov
test
add
pop
mov
dec
int
inc
xor
in
sub
pop
scas
aad
mov
rcrl
imul
inc
outsb
lret
or
cmp
fstp
movsl
jbe
jl
add
mov
cmp
stc
std
jnp
pop
fxsave
or
xor
mov
sti
repnz
fscale
mov
loope
push
fcoml
xchg
stc
add
mov
lods
addr16
fisubrl
push
adc
mov
mov
test
lods
stos
mov
loopne
cld
dec
push
xor
ret
es
mov
fldenv
jmp
lods
cld
xchg
movl
adc
or
inc
scas
scas
rcrl
fcmovnb
jmp
push
mov
mov
outsl
jl
and
fmull
test
aad
jne
lcall
fsubr
les
fldcw
lods
ret
addr16
add
xchg
sti
inc
movsb
xchg
and
jecxz
push
or
ljmp
mov
lods
aam
mov
int
push
mov
popf
fstpl
mov
cwtl
aam
sbb
std
aam
pop
xlat
add
pop
das
popf
les
mov
hlt
adc
movl
and
xor
aas
jle
inc
shl
ljmp
push
ret
cmpsb
test
shrl
shll
repnz
pop
sbb
pop
push
aaa
out
lds
pushf
push
int
in
push
mov
mov
jge
cs
xchg
iret
push
dec
sarl
jbe
sbb
dec
xor
loop
mov
jecxz
push
sub
pop
sbb
sbbb
fimuls
les
jb
decb
jns
push
cli
pop
into
insl
sbb
ret
gs
pop
outsb
std
repnz
pop
aad
mov
pop
sub
add
jp
inc
push
xor
paddusb
movsl
ret
rol
cld
adcl
jns
aas
loopne
pop
or
js
dec
popf
jne
adc
or
fcmovne
filds
test
push
les
scas
mov
cmp
xchg
test
mov
clc
pop
jle
ds
popa
sbb
hlt
jae
pop
add
sub
imul
mov
test
and
daa
pop
pop
or
hlt
out
push
push
mov
fdivl
lcall
clc
mov
pusha
or
aaa
cld
stc
mov
lret
xchg
lcall
pop
mov
add
scas
pop
mov
dec
fsubl
adc
inc
fdivl
pop
rorl
inc
movsl
cwtl
pop
fs
jle
pop
mov
push
and
or
sub
bnd
sub
lock
sub
sbb
ss
insl
push
imul
jns
aad
mov
push
adc
imul
loopne
imul
mov
fwait
jmp
out
aas
lret
sbb
sti
outsl
mov
sub
jl
aaa
adc
pop
jecxz
icebp
std
cltd
sub
sbb
xchg
xor
jle
int3
xor
dec
int3
mov
pslld
sbb
popf
cltd
or
jmp
cmp
mov
mov
lcall
pop
pop
jle
mov
enter
movsl
jmp
int3
jno
lods
lret
cmc
outsb
int3
xchg
or
pop
lret
js
xchg
fnsave
pop
cmpsb
arpl
and
dec
or
xor
mov
ret
jno
cmp
xchg
lcall
lods
or
jno
jmp
aam
mov
pushf
xor
dec
in
insb
pop
push
ret
push
pushf
mov
or
sbb
pusha
dec
add
hlt
sbb
pop
int3
push
mov
in
mov
leave
push
pop
test
iret
xchg
les
shll
leave
or
push
hlt
mov
test
add
sahf
mov
pop
jbe
enter
mov
cmpsl
and
stc
push
inc
movsb
mov
cli
aam
daa
insl
in
ljmp
lds
sbb
in
push
xor
scas
fldl
xchg
cltd
sti
fidivrs
cmp
int3
push
test
mov
xor
xor
mov
or
dec
in
pop
inc
fimull
mov
cmc
mov
add
aam
insb
fsubs
dec
mov
or
in
sub
fnstenv
shrb
lds
mov
gs
in
cmp
inc
test
pop
adc
push
lret
jns
pushf
push
and
stc
loopne
add
int3
add
enter
sahf
and
pop
pop
loopne
or
insl
xchg
and
jge
fadds
int3
in
es
push
stc
push
adc
fcompl
scas
int
into
jecxz
test
xor
or
fidivrs
xchg
rcl
inc
sbb
aam
cmpsl
mov
ret
incb
adc
in
lahf
rcpps
out
addr16
lret
aam
pop
push
mov
add
movsb
enter
jmp
xlat
xchg
stos
dec
xchg
inc
loopne
cltd
cs
call
fwait
insb
les
cltd
stos
ret
mov
out
mov
mov
arpl
cmp
push
bnd
leave
mov
std
es
pop
call
addb
scas
mov
pop
cmc
push
ret
negb
xor
lahf
mov
fmul
lcall
sub
push
xor
mov
sub
push
xor
and
popf
in
push
mov
clc
xor
adc
insl
mov
or
call
shlb
mov
cmp
ret
imul
sub
leave
add
lea
inc
fcmovb
addr16
stc
dec
jo
daa
nop
push
xchg
push
test
dec
xchg
dec
or
jg
xor
mov
ds
xor
into
dec
sbb
dec
cmp
cmpsl
repz
adc
out
orb
and
xchg
enter
imul
loopne
add
mov
pushf
pop
lods
cltd
xor
imul
out
xor
jb
dec
dec
dec
lock
push
jnp
mov
or
lods
stos
mov
ror
cmpsl
popa
iret
mov
jne
popf
xchg
xchg
rcrb
add
xor
inc
daa
pop
movsb
xchg
xor
push
aaa
insl
cli
dec
inc
loopne
fs
push
pop
push
je
mov
push
shr
cmpsb
push
iret
adc
dec
jle
aas
sbb
in
lds
dec
sarb
leave
cmp
or
push
ret
imul
scas
ja
sub
icebp
in
fiadds
cli
mov
mov
insb
mov
je
popa
sarl
test
fstpl
push
cmp
in
jmp
add
hlt
sub
and
sub
fidivs
fmull
lcall
in
or
jb
lcall
dec
sbb
ret
rcrl
leave
lahf
cld
jns
dec
sbb
mov
dec
aas
fcmovb
sbb
pop
imul
in
mov
sbb
jle
addr16
or
sub
xchg
sbb
cli
ror
adc
push
push
push
adc
loope
pop
in
xor
jae
fidivs
pop
jl
jp
das
push
pusha
imul
lret
aaa
sbb
mov
xchg
out
cmp
call
inc
inc
movsl
test
cmp
test
xor
les
dec
dec
int3
pop
cmp
lcallw
enter
nop
dec
mov
cld
sarl
xorb
cltd
inc
push
sti
and
and
inc
pop
and
addr16
jecxz
cmp
push
test
pop
movsl
enter
or
pop
push
pop
loop
les
mov
mov
push
and
arpl
cmpsl
shll
popf
inc
ret
inc
loopne
mov
aam
cwtl
mov
or
lods
ret
push
leave
cmp
lret
adc
lods
mov
xor
xchg
mov
xchg
out
hlt
cli
ret
push
insl
loop
enter
cmpsl
sub
and
stos
add
aam
push
repnz
pop
mov
xor
lods
inc
ret
cltd
int
fimull
sbb
dec
xlat
into
movsb
mov
xchg
test
lcall
filds
mov
cld
jbe
mov
iret
xchg
int3
xor
xlat
cld
sti
cltd
lcall
sarb
or
loopne
jno
das
lret
mov
jl
cs
fdivrl
adc
addr16
mov
imul
xor
mov
dec
int
cltd
outsb
mov
aaa
outsl
xchg
push
dec
fcmovbe
push
aad
addr16
aam
jecxz
xorl
push
insl
and
mov
mov
jb
pop
ret
aam
mov
rcrb
lods
clc
cmpsb
and
xor
sub
test
xor
lcall
lret
sbb
rcll
aam
push
sti
inc
xlat
adc
xor
in
ret
cli
nop
push
clc
xor
mov
dec
cltd
jb
jge
gs
push
sub
repnz
push
outsl
lods
fmul
xchg
enter
pop
aas
lcall
mov
loope
out
mov
sar
test
int3
cmpsb
and
enter
out
cmp
mov
imul
dec
cmp
jno
leave
and
frstors
bound
push
sbbl
test
add
in
and
lcall
pop
jns
jb
xor
dec
in
mov
add
mov
push
outsl
rcrl
into
pop
popf
cli
pop
adc
stos
push
ret
push
fisubrl
iret
enter
out
pop
mov
xor
inc
add
lcall
inc
out
xchg
fxch
fxch
inc
pop
jne
popf
aas
out
fsts
xor
inc
dec
popf
cmpsl
scas
cmp
movsl
sub
popa
sub
call
and
xlat
mov
adc
jnp
pop
les
insb
mov
mov
xchg
mov
inc
mov
mov
sub
xor
and
or
and
ljmp
loopne
push
in
fwait
inc
sarl
ret
es
dec
mov
in
ds
add
cmp
xchg
lods
data16
adc
jmp
adcl
and
lcall
subb
js
cmpsl
push
pop
loope
add
pop
mov
iret
sti
xor
and
rcr
fmul
add
out
inc
pop
sub
mov
xchg
int3
pop
in
push
cld
jnp
rcl
mov
ret
jecxz
in
push
inc
ror
fidivs
adc
stos
jnp
addr16
push
xchg
sysretw
in
inc
fwait
adcl
inc
imul
scas
stc
dec
pushl
in
rolb
cmpsl
test
cmp
push
adc
cmc
cs
popf
push
ror
cwtl
or
rcr
ss
jg
addb
fmul
push
add
mov
mov
cli
leave
enter
add
mull
lret
lret
xor
xchg
dec
xlat
inc
sbb
pop
shll
sbb
mov
lds
add
dec
jmp
lret
daa
adc
jb
cmp
fstps
pop
loopne
enter
lret
push
xchg
sub
mov
sub
into
gs
mov
xchg
mov
in
outsl
adc
pop
loopne,pt
inc
push
push
js
out
inc
mov
aad
sbb
adc
ret
insl
lret
sbb
add
sarb
loopne
rcr
cmp
out
addr16
shrl
in
loopne
xchg
subl
mov
imul
mov
lods
mov
aad
shll
sarl
sbbl
insb
int3
jg
cmp
adcl
pop
adc
addr16
fcoml
lods
push
sti
repnz
and
push
and
sbb
notl
clc
mov
pop
lods
push
rol
addr16
aad
sub
sbb
inc
inc
inc
test
mov
sbb
push
ljmp
or
stc
loopne
or
mov
cmpb
cmp
in
fldt
mov
js
pop
inc
insb
push
fidivrs
cmp
mov
sub
ret
lock
ret
pusha
frstor
mov
pop
filds
mov
jno
pop
add
incl
loope
cmpsl
mov
mov
pop
ret
xchg
or
call
adc
mov
dec
lods
loopne
cmp
sub
jmp
lods
icebp
or
mov
push
sbbb
fsub
repnz
test
jne
lods
je
mov
mov
add
lods
dec
add
adc
ret
xor
pop
in
outsl
ds
insb
pop
mov
add
dec
std
mov
insb
les
mov
test
xchg
rcrl
je
push
cmpsl
fldt
cld
xchg
rolb
fwait
cld
push
fildl
mov
pop
outsb
loop
leave
or
sahf
adc
dec
push
mov
lcall
dec
repnz
in
xchg
xchg
fcmovnb
popf
inc
xchg
out
orl
pop
out
mov
or
jmp
popf
jg
mov
loopne
mov
cli
ret
mov
xchg
outsb
pop
jbe
or
fisttps
xlat
xchg
adc
ret
sbb
mov
mov
and
dec
mov
mov
lcall
cmp
dec
sub
xchg
fs
in
call
out
adc
popf
mov
test
in
mov
les
jle
or
in
xchg
lods
mov
pop
sbb
push
mov
adc
punpckhwd
imul
mov
stos
out
daa
or
in
lock
push
adc
ret
cmpsl
repnz
jmp
add
test
lock
popa
or
mov
leave
or
or
movsb
setne
mov
mov
std
scas
mov
mov
fdivrs
imul
arpl
push
mov
aaa
pop
push
jb
into
dec
cmp
inc
sub
rcll
adc
shr
sbb
ret
lods
in
sub
mov
stc
mov
in
and
mov
iret
mov
xor
jbe
mov
xchg
pushf
cmp
or
cs
or
bnd
inc
lods
mov
push
popf
add
loope
test
jl
and
push
jae
in
outsb
pop
dec
insb
jl
xchg
mov
dec
rolb
cld
sub
fidivl
bound
xchg
mov
pop
clc
popa
push
mov
loopne
aad
cld
pop
pop
adc
xchg
pusha
aad
pop
mov
stc
push
cld
and
push
push
jle
int3
mov
test
cmp
and
lcall
xor
push
or
arpl
xchg
mov
dec
xlat
scas
aad
int3
ja
xchg
frstor
stc
xorl
xlat
pop
push
push
xor
in
xchg
and
pop
inc
ljmp
outsl
or
jb
ss
sbb
loopne
aas
out
mov
jb
lret
push
stc
lods
sbb
mov
add
mov
mov
mov
leave
fadds
and
xchg
lea
ret
rcrl
pop
pop
adc
sub
cmpsl
in
or
jecxz
xlat
inc
movb
push
data16
adc
rolb
rorl
adc
cmpsl
daa
and
xor
xchg
push
push
xlat
andb
and
jp
sbb
insb
add
decb
mulb
int3
mov
push
jo
dec
sbb
lcall
cmpsl
test
mov
fdivl
or
fcoml
mov
dec
mov
add
sub
pop
enter
jge
cmc
daa
dec
pop
add
push
inc
out
fwait
add
cld
and
and
sbb
mov
push
test
lods
enter
pop
pop
inc
insl
pop
jmp
popf
push
pop
lock
lret
out
dec
outsl
das
or
fimull
fstps
pop
lds
add
jnp
pop
xchg
push
mov
loopne
jle
xchg
inc
add
and
lock
das
pushf
xlat
sbb
testl
cmpsl
test
outsl
ss
dec
aas
enter
inc
jo
xor
jo
mov
jb
movsl
mov
push
shll
dec
stos
insb
lcall
cmp
sbb
cmpsl
push
pop
enter
ret
jmp
and
mov
fwait
jnp
pop
int
rol
ret
push
sbb
cs
mov
outsl
iret
inc
push
insb
push
adc
pop
mov
xchg
mov
mov
mov
mov
pop
and
jmp
cli
cltd
pushf
add
popf
cmp
jge
lea
clc
mov
faddl
lret
rcrl
mov
xor
mov
pop
or
inc
mov
dec
pop
jnp
sub
in
mov
mov
lret
pop
push
or
xor
inc
mov
iret
frstor
push
fwait
enter
xlat
push
xchg
test
push
ret
int3
scas
mov
out
inc
push
cmp
faddl
aas
lret
pop
and
mov
sbb
ret
cld
fbld
arpl
push
out
xchg
dec
lret
push
or
cwtl
rorl
loop
out
lret
pop
loop
mov
adc
ret
pop
inc
lea
pushf
xchg
lret
loopne
mov
push
in
xor
sub
and
mov
ficoms
jns
out
push
and
int
pop
dec
dec
dec
je
and
fdivrs
push
aad
cmp
addl
pop
in
rol
jbe
arpl
pop
xor
insl
add
hlt
xchg
and
push
in
xchg
in
dec
and
movsl
jl
roll
inc
adc
sub
mov
test
gs
xchg
lods
adc
clc
adc
out
or
dec
xor
aam
enter
sbb
mov
add
enter
pop
xchg
jbe
orl
dec
push
fidivrs
cltd
sti
cmc
jp
ret
cmp
dec
sub
stc
in
outsl
sar
adc
jnp
hlt
outsl
push
add
lods
sbb
inc
dec
jmp
lods
fistl
adc
adc
adc
dec
add
and
and
subb
sbb
adc
repz
adc
repnz
jge
and
mov
dec
ret
scas
testl
push
clc
test
adc
mov
ret
pop
out
sar
ds
fisttps
movsb
imul
xlat
ds
and
popa
dec
aas
jne
enter
or
subb
xchg
add
lahf
mov
mov
shll
lock
icebp
push
mov
int
adc
pop
pop
stos
pop
push
mov
add
stc
xchg
mov
mov
dec
fsts
pusha
add
inc
adc
jle
mov
fdivp
push
xor
cmp
xchg
cli
adc
sbb
or
lods
pop
xor
sbb
movl
dec
inc
pop
mov
imul
les
jl
dec
pop
xlat
xchg
movsl
fsub
int3
shlb
bound
and
call
iret
xor
adc
pop
pushf
xor
fdivl
xchg
std
lcall
mov
mov
test
insb
ds
cmp
pop
sbb
xor
dec
std
bound
cmp
rcrb
nop
cwtl
cmp
mov
push
sbbl
rcrl
xchg
xchg
sti
jo
insl
and
cmp
jle
stc
cmpb
ret
mov
shl
xor
pusha
sti
push
add
mov
push
jg
ldmxcsr
into
call
mov
dec
daa
test
or
lret
in
dec
and
pusha
nop
insb
ret
push
popf
jns
jae
sub
stc
xchg
imull
repz
push
add
cmp
inc
or
push
daa
lret
push
fistpl
mov
pushf
fadds
scas
add
push
sar
xor
dec
loopne
xor
and
xor
rcrb
push
or
nop
fistpl
fwait
jl
out
pusha
or
lret
fcmovbe
shl
jns
inc
adc
fadd
cmp
add
mov
aam
mov
cmpsl
xchg
in
jl
or
enter
dec
inc
push
push
sub
dec
jb
dec
adc
cmp
movnti
lds
stos
loopne
ret
filds
push
les
mov
ret
loopne
ret
mov
mov
inc
and
push
cld
test
or
cmp
xor
push
add
loopne
push
jnp
cld
push
push
push
les
mov
cmp
orl
fcmovne
jb
inc
mov
ljmp
iret
pushf
or
in
fiadds
in
mov
test
test
sub
cltd
dec
cmpsl
cmp
fstps
les
repnz
dec
jl
mov
in
hlt
pop
push
lret
mov
fisttpll
jp
inc
sub
dec
adc
pushf
gs
insb
jp
inc
outsb
fcom
add
rorb
pop
mov
mov
jp
push
insl
js
loope
aas
fnsave
mov
dec
das
insb
mov
data16
dec
sbbl
fists
fsubr
sub
inc
daa
dec
pop
repnz
pop
mov
push
xchg
mov
popa
movl
lds
push
mov
mov
cmp
sti
fstpt
xchg
loop
pushf
addr16
pop
cli
and
insb
das
rol
inc
test
xchg
mov
enter
and
inc
ret
repnz
sub
jb
push
aad
mov
sahf
jle
ljmp
pusha
sbb
or
cwtl
jg
pushf
lods
addr16
addr16
fcompl
imul
push
jle
lret
int3
mov
das
inc
rol
add
ret
rolb
stos
into
jno
sbb
dec
daa
xchg
cmp
ret
out
dec
std
aad
xlat
lcall
gs
or
ret
int
pop
mov
jge
in
add
into
add
jg
ds
xchg
pop
cmp
lods
xchg
add
lret
gs
js
inc
repnz
inc
loop
cmp
jl
or
cwtl
jnp
push
ja
cs
test
or
fimuls
fistl
into
out
sti
xor
push
out
add
sti
popf
es
pusha
pop
leave
imul
cmpsb
inc
ret
shr
cwtl
nop
mov
fstp
xor
cld
leave
xor
insb
je
jl
rcrl
push
sub
shrl
push
les
cwtl
push
int
cmp
cltd
sti
pop
inc
pop
cmp
mov
repz
jno
sub
lds
cltd
cmpsb
xor
insb
and
test
rcrl
aam
and
or
or
in
push
pop
add
push
clc
nop
jl
mov
add
mov
in
loopne
mov
mov
jge
sbb
les
iret
lret
test
sarb
leave
adcb
ret
ljmp
pop
nop
dec
sub
in
into
lock
mov
xor
mov
hlt
sbb
lret
sti
aam
add
adc
dec
nop
push
enter
cld
pop
aas
add
mov
mov
push
lret
jp
add
cltd
aas
pop
arpl
ds
iret
movb
imul
in
lret
lcall
call
xchg
int
inc
push
lcall
in
into
xor
aam
bnd
inc
mov
aad
iret
out
push
dec
sti
mov
stos
lcall
mov
iret
rcr
out
mov
rclb
rclb
sbb
gs
cmp
pop
inc
xchg
dec
xlat
push
rol
push
dec
dec
les
scas
jle
adc
sbb
mov
xorl
stos
and
push
mov
scas
sbb
enter
cs
jnp
ret
inc
stos
ret
jmp
mov
cld
mov
in
out
mull
sahf
and
lods
or
ret
push
loopne
icebp
iret
dec
xchg
adc
xchg
sbb
or
push
ret
pop
dec
cwtl
mov
scas
sub
arpl
dec
cwtl
push
repnz
call
mov
or
lret
lods
mov
cmp
mov
aam
ret
jmp
loop
cmp
pop
jp
into
divl
xchg
push
paddw
pop
into
pop
addr16
int3
xlat
mov
pop
dec
inc
cltd
xlat
inc
or
push
ret
add
xor
enter
fisttps
mov
arpl
inc
push
cli
inc
xorb
adcl
ret
int3
lds
pop
and
fisubl
sarb
add
cmpl
ret
imul
stos
inc
addr16
jg
or
inc
inc
enter
out
sub
xor
repnz
inc
into
pop
pop
pusha
mov
rorb
pop
mov
xchg
mov
mov
in
iret
aad
adc
cmpsl
loop
cmp
pop
fldenv
stc
ret
dec
or
lock
push
and
cs
imull
cmpsb
xor
scas
add
stos
iret
cmp
insb
cmp
stos
mov
addr16
jnp
lock
ret
cli
adc
inc
or
or
inc
pop
shll
push
jmp
push
iret
cmpsl
xchg
arpl
mov
mov
inc
fildl
push
movsl
push
pop
mov
data16
fnstcw
scas
jp
fstps
or
xlat
mov
leave
jl
add
out
pusha
sub
nop
rcrb
roll
stos
mov
imul
inc
jl
nop
lret
shll
jae
lds
mov
dec
and
mov
jp
dec
sbb
int3
mov
pop
cld
fmulp
lcall
mov
pusha
push
and
aam
cmpsb
xor
cmp
sub
jecxz
in
push
shr
jl
mov
ja
shl
inc
call
inc
inc
outsb
das
cmp
inc
dec
mov
clc
pop
cmpb
jl
cwtl
fiadds
jnp
cmp
int
sti
jp
daa
dec
push
and
push
int
sbb
push
inc
jp
pop
xchg
notl
and
sub
movsb
hlt
cmpb
pop
cmp
sbb
xchg
sub
shlb
fstpl
inc
ret
inc
mov
cmp
arpl
cmp
cwtl
xor
inc
sti
sub
pushf
add
fdivs
cmp
jl
loope
jno
dec
add
cltd
push
arpl
cld
or
in
scas
mov
pop
ret
lret
pop
insl
jl
xlat
cmpsb
cltd
cmp
mov
sbb
jbe
pop
mov
imul
rorl
or
add
pop
and
push
int
lcall
jae
cmpsb
mov
or
or
stc
fwait
xor
imul
cmp
mov
adc
cmpl
aad
lods
frstpm(287
adc
sahf
pop
in
mov
cmp
aas
int3
lea
out
addr16
and
ret
mov
and
movswl
push
leave
xor
mov
sbb
mov
xchg
dec
shl
rcll
mov
imul
mov
cmp
popf
andb
movsl
std
testb
ss
clc
sbb
mov
or
iret
fsubrp
pushf
xchg
test
pop
sbb
or
jns
sub
add
dec
test
lods
outsw
sbb
sbb
adc
pop
movsb
lret
cmp
add
and
pop
cwtl
xlat
and
inc
mov
sub
aad
and
push
mov
adc
fcoms
and
lret
dec
adc
fmulp
mov
mov
and
push
mov
rorb
mov
sub
cmp
es
ficoml
xchg
pop
mov
orb
inc
rcrl
lock
fs
les
or
xor
in
mov
scas
lcall
fisttps
add
mov
push
icebp
dec
enter
mov
dec
jnp
aam
stos
ret
mov
xor
mov
xchg
push
add
push
sti
or
pop
icebp
repz
cltd
cmp
add
sbb
push
popf
test
dec
cmpb
jno
cmp
xchg
xor
mov
xchg
pop
cltd
cmp
leave
mov
xlat
filds
stc
pop
andl
sbb
subb
sbb
decb
lods
mov
aam
arpl
sub
sub
xchg
push
sbb
and
sbb
add
mov
inc
dec
sub
jmp
mov
loopne
and
push
lods
or
adc
pop
pop
mov
fsts
aam
jb
sbb
lods
clc
clc
hlt
pop
and
mov
movsb
popf
pushf
lods
sub
mov
fdivrl
or
cmp
add
fidivl
push
dec
mov
decb
in
pusha
inc
fsubs
addr16
jp
hlt
mov
aad
pop
jmp
sbb
push
mov
xchg
sub
push
shr
mov
scas
xlat
cmp
jl
out
mov
daa
mov
adc
insb
jno
je
mov
fsubl
movsb
sbb
and
mov
add
mov
les
aaa
jmp
and
sub
inc
or
sub
jmp
pop
jg
cld
je
leave
imul
dec
push
push
inc
push
pop
ret
ret
in
ds
cmpsb
cli
leave
add
pushf
jnp
mov
mov
pushf
cltd
int3
dec
xor
int3
inc
js
scas
cwtl
cmpsl
aas
iret
lret
loopne
xlat
lds
cmp
negb
mov
das
jp
xchg
imul
add
into
or
lret
aad
lret
stc
imul
jle
cmp
dec
dec
ror
cmp
inc
pop
push
insb
fwait
dec
in
add
xor
out
xlat
cmp
lds
push
or
lds
mov
stos
push
mov
addb
push
sbbl
xor
data16
mov
or
push
cmp
repnz
movsl
pop
pop
push
sub
sub
in
pop
scas
cmp
pop
or
lods
popl
adc
cmp
ja
push
scas
bound
fwait
add
xchg
add
inc
mov
enter
lret
push
mov
imul
addr16
and
mov
inc
out
push
bound
cli
add
sbb
test
bound
cmc
mov
sub
push
and
lcall
push
xchg
in
mov
ljmp
sub
mov
mov
ret
lret
inc
push
ljmp
lret
mov
xor
out
and
mov
or
imul
cmp
jl
add
cli
mov
aam
leave
les
inc
arpl
stc
jge
pop
mov
fldcw
pop
jo
jp
fcoml
cmpsl
mov
push
into
enter
pop
mov
enter
add
jns
cmp
addr16
stos
rolb
ror
stos
stc
add
fwait
xchg
push
addr16
add
mov
cld
mov
aam
stos
int
jmp
fsubrp
call
lods
push
stc
movsl
xchg
popa
les
jns
cs
inc
ja
lods
or
sbbl
mov
push
cltd
mov
mov
push
imul
cmp
mov
pop
fwait
mov
cmpsb
mov
xchg
lret
jb
test
pop
xchg
ret
jl
sbb
push
aad
push
mov
lret
stos
dec
enter
cmp
into
and
fildll
loope
jo
scas
dec
xor
push
jl
pushf
jl
dec
add
push
lret
sbb
add
push
sahf
out
jl
or
push
xor
adc
mov
sub
mov
sbb
dec
and
xchg
fstl
lcall
xor
pop
fxch
fildll
mov
popf
or
jno
pop
sbb
push
sbb
cltd
or
call
mov
call
sbb
inc
inc
nop
xchg
stc
jl
pop
cmpsb
lret
shrb
cld
fldl
jmp
xchg
sbb
sub
sbb
daa
andl
push
enter
mov
dec
scas
lahf
add
sar
into
out
das
test
orb
sbb
xchg
cld
in
mov
aad
jl
push
cmp
enter
pop
xchg
inc
mov
jns
neg
repz
xor
xlat
dec
les
mov
sbb
sbb
inc
cli
movsl
or
popf
and
mov
test
cmpsl
fldl
or
or
or
cmp
push
or
fnstcw
inc
aad
scas
pop
add
push
cmp
rcl
ds
addr16
dec
pop
xchg
arpl
aaa
cmp
inc
xor
xchg
add
mov
dec
sbb
adc
xchg
mov
stc
or
jl
in
fisttpll
pushf
push
add
enter
cmp
addr16
push
pop
ja
ja
loopne
mov
stc
fisttps
les
fisttps
js
arpl
add
cmp
int3
and
cwtl
daa
out
lods
lret
aam
lds
or
jbe
add
xchg
jnp
xorl
jae
push
inc
insl
dec
aas
push
xlat
stc
jae
adc
inc
sbb
and
dec
loope
int3
jns
sbb
clc
dec
cwtl
inc
testl
add
adc
in
dec
jns
push
sahf
inc
cli
or
enter
popf
aam
push
xchg
mov
inc
sub
repnz
or
or
fcomi
stos
repnz
push
or
pause
add
sub
lock
and
leave
inc
sbb
xchg
lds
fildll
mov
aad
xor
sahf
femms
js
stc
loope
jecxz
ficoms
inc
pop
or
push
clc
out
in
fdivrs
cmpsl
and
push
std
sbb
mov
xor
enter
mov
sbb
mov
mov
mov
gs
sbb
mov
jo
enter
imul
xorb
and
repnz
pop
int
orl
pusha
les
movsb
addr16
sbb
notb
dec
xor
fsubl
dec
test
inc
push
lcall
out
ja
ds
pop
fwait
mov
das
push
data16
ret
push
cmp
jl
push
mov
cmpl
cmp
push
mov
mov
test
test
sub
push
loopne
addr16
add
inc
or
dec
sub
adc
dec
cmp
repnz
lret
cltd
mov
cmpsl
pushf
push
cmp
cmp
cwtl
jle
mov
cs
lcall
rorb
cltd
lods
lds
cmp
jns
mov
sbb
leave
fmulp
jecxz
mov
push
leave
out
arpl
add
push
cmp
lcall
popf
add
inc
stc
sbb
int3
lods
into
bound
xor
push
mov
pop
mov
add
push
adc
mov
mov
ror
lret
cwtl
in
dec
cld
lcall
pusha
xchg
add
test
jbe
je
in
scas
sub
push
inc
mov
cmpb
cmp
pop
out
pop
pop
cmp
cld
rolb
fidivrs
sub
jmp
adc
call
aam
mov
aam
out
and
push
mov
lret
push
cmp
adc
push
aam
or
or
mov
les
inc
ljmp
mov
addr16
mov
call
pop
shl
mov
add
outsl
cmp
lret
jecxz
mov
pop
mov
mov
jecxz
push
movb
test
loop
push
cwtl
sbb
mov
sbb
mov
xor
test
push
xor
mov
shrb
jmp
xchg
mov
out
mov
mov
cld
mov
xlat
inc
rclb
sahf
popf
cli
adc
stc
in
imul
sub
andl
sub
scas
dec
cmp
push
jmp
lret
mov
sbb
pushf
jp
xchg
ja
stos
popf
dec
mov
jecxz
xchg
enter
mov
pop
scas
cld
repnz
cli
in
pushl
mov
xchg
cld
out
test
cwtl
adc
lahf
sbb
and
jl
ret
adc
lea
jl
out
lret
cmp
pop
jmp
fs
inc
fsubl
insl
push
inc
jno
std
xlat
cmpsb
fcmovb
cmpsb
idivb
xor
mov
mov
mov
push
pop
loope
cmpsl
lret
xor
or
lds
mov
loopne
cs
mov
movsl
leave
sbb
jecxz
jmp
sub
jle
push
xlat
inc
pop
adc
lahf
in
sti
add
shlb
add
xchg
mov
xchg
mov
push
mov
adc
lret
push
add
das
shrl
shufps
rclb
adc
cmp
xchg
jge
dec
not
in
sub
int
mov
xchg
xlat
enter
fwait
repnz
pop
out
push
pushf
test
sub
jne
inc
icebp
or
in
jp
popf
or
push
enter
and
cmp
pop
popf
fldt
into
add
dec
test
cmpsb
mov
adc
or
testb
jle
gs
mov
decb
jle
mov
enter
inc
test
pop
jecxz
dec
fildl
cwtl
stc
xchg
adc
xorb
push
inc
mov
scas
aad
mov
fcomp
aaa
cld
mov
cs
fsubrl
int3
sarb
xlat
ds
mov
sub
xorl
fldl
rolb
sub
call
cmpxchg
pop
pop
xchg
rcl
xorl
push
jne
pop
or
jbe
sbb
or
mov
xlat
push
mov
jae
shrb
rcrl
in
sahf
lds
daa
in
xchg
jle
sub
outsl
mov
sub
inc
dec
add
xor
push
adc
fidivrl
xor
andb
pop
mov
jmp
clc
fwait
push
ljmp
jb
push
aaa
cmpsl
fildl
faddp
and
sarl
mov
cmp
lret
lcall
push
mov
enter
fucomp
jmp
jle
clc
cld
mov
sti
pop
sbb
xor
dec
inc
pop
inc
icebp
rcll
mov
fucomp
outsb
mov
sbb
inc
pop
les
shlb
or
cmp
mov
jbe
mov
repnz
jl
in
jle
leave
mov
cmp
sbb
xor
repnz
mov
mov
out
cmp
add
push
inc
cmpsl
xchg
scas
aaa
imul
sahf
icebp
dec
push
mov
ret
adc
scas
xor
cmpsb
addr16
sarl
xor
push
add
jo
clc
mov
jns
cli
xor
sub
loopne
test
repnz
lods
popf
addr16
xor
rcr
lods
mov
cmpb
cwtl
mov
sub
movd
push
ret
push
sbb
push
cmp
sbb
add
push
outsl
dec
mov
popf
xchg
cmp
fwait
or
repnz
push
or
xor
gs
shr
xor
cmp
dec
shl
enter
or
or
mov
es
mov
push
lods
enter
loopne
call
nop
sbb
lods
xchg
js
pushf
insb
pop
sti
mov
test
insl
cltd
ds
out
sub
xchg
pop
imul
push
cmpsw
insl
sub
jns
pop
add
push
xlat
mov
je
push
dec
sbb
lods
cmp
inc
dec
pushf
cmp
adc
jp
aas
xchg
addr16
pushf
xchg
inc
jne
or
pop
test
mov
mov
mov
xchg
sbb
and
in
inc
shl
cltd
aaa
adcl
fcompl
cmp
push
sub
lret
xor
push
fistpll
pop
sarb
inc
sbb
aad
jmp
pop
jo
bound
mov
or
scas
mov
xor
popf
imul
imul
add
push
cwtl
pop
and
enter
daa
jge
dec
loop
dec
leave
loopne
insl
sub
imul
int3
adc
arpl
cmp
push
pop
addr16
test
fbld
cmpsl
in
lret
or
add
xchg
stc
mov
in
gs
push
gs
jno
xlat
popa
mov
push
and
sub
xchg
jo
pop
add
adc
pop
jp
inc
cli
ret
shl
sbb
xchg
jb
popa
loop
test
adc
fdivs
xchg
mov
mov
adc
pop
dec
sub
sarb
pop
mov
pop
movsb
lcall
cmpl
cmpsl
aam
loop
sub
rep
sbb
cmp
insb
jmp
pop
push
xlat
repnz
jl
jmp
ss
sbb
push
insb
sbb
pop
sub
push
mov
lods
out
push
pop
sub
mov
mov
mov
jns
sti
add
imull
sarb
xchg
adc
fisubrl
dec
enter
stc
jae
hlt
fisubs
sub
cmpsl
js
jbe
inc
cs
in
xlat
scas
scas
cmp
or
outsl
je
dec
sub
pop
inc
jecxz
mov
imul
pop
popf
std
pop
inc
lds
sub
sub
add
loopne
lods
sarl
leave
sti
int
popf
in
jae
adc
scas
jno
stc
jmp
push
sahf
fistpll
add
pop
sub
test
adc
dec
stos
sub
sahf
fwait
scas
je
sbb
or
or
sbb
pop
dec
insl
nop
int
mov
mov
enter
fnstsw
add
sub
or
ljmp
test
sub
mov
iret
push
jg
jne
pop
std
loope
push
mov
leave
xor
ret
stc
stos
lods
xchg
sbb
dec
pop
into
sbb
fwait
mov
or
pop
loop
cld
add
enter
mov
shll
inc
sbb
xlat
mov
push
fimuls
cmc
subb
into
push
es
inc
or
hlt
jne
test
pop
xchg
sub
xchg
repz
xchg
clc
sub
in
stc
dec
cmp
or
outsb
xchg
nop
int
les
mov
mov
js
roll
inc
sbbl
aas
ror
fxch
sbb
int3
or
mov
ljmp
mov
jno
scas
lret
push
andl
cltd
ret
hlt
in
xor
adc
or
mov
cltd
mov
insb
add
adc
add
into
fdivs
adc
pop
sbb
push
int
add
mov
jns
subb
xchg
lea
xchg
pop
pop
add
dec
mov
dec
ret
aas
jbe
push
or
ret
push
push
dec
ds
push
je
shll
xchg
cli
mov
int3
leave
dec
or
mov
popf
mov
dec
xchg
and
ss
jle
mov
aas
dec
jnp
or
push
mov
in
pop
lock
les
rcrb
dec
nop
or
leave
push
addr16
jne
test
adc
cmpsl
ret
mov
into
inc
add
mov
xchg
mulb
rcll
cmp
fs
dec
lahf
addr16
out
xlat
push
push
xor
or
jmp
ret
pop
loopne
push
or
mov
cmp
imull
dec
int3
sbb
dec
adcb
sbbb
push
dec
push
mov
sarl
inc
int
push
cltd
stc
cli
outsb
test
out
cmpl
pop
pop
pop
cmp
push
jmp
enter
addr16
pop
popa
pop
xor
call
cmp
movsb
dec
jp
xchg
outsl
nop
ret
xchg
jns
js
jp
or
cmpsl
jmp
add
mov
clc
sub
pop
inc
jle
cmp
pusha
and
movsl
xor
dec
movsb
sub
loopne
popf
pop
and
pop
lods
dec
xor
test
rorl
pop
fimull
push
jle
les
push
xchg
lahf
fisttpll
addr16
icebp
mov
mov
jno
push
push
in
leave
pmuludq
fmull
ja
push
cltd
iret
loop
xor
ss
push
bndldx
mov
push
movl
dec
iret
inc
rcl
stc
or
leave
rol
cmp
movsb
leave
jns
in
xchg
shr
adc
roll
jge
mov
dec
ret
pop
cmp
cmc
adc
sbbb
test
cmp
jle
mov
mov
js
in
inc
jb
and
movsl
sahf
cmpsl
repz
and
xchg
inc
sarl
addr16
xchg
dec
lret
sub
push
pop
jns
inc
in
xor
pop
imul
outsl
pcmpeqb
add
xlat
and
sbb
jbe
dec
jmp
icebp
lret
jp
add
fxch
jns
loopne
ret
dec
lods
adc
cmpsb
cmp
jmp
xchg
sti
pop
dec
xchg
lods
nop
scas
rol
icebp
andb
add
pop
push
mov
xor
orl
xor
mov
jp
or
mov
in
xor
ror
enter
lds
mov
mov
cmp
cli
movnti
push
mulb
jmp
push
in
fstpt
mov
xchg
stos
adc
sti
rcll
in
jp
xchg
mov
mov
cmp
cmp
sub
jae
repnz
dec
pop
add
sti
daa
movsl
loop
loope
mov
test
enter
dec
sarl
daa
mov
mov
shlb
sar
jns
xchg
neg
push
lret
xor
fistps
mov
push
fnsave
outsl
enter
cmp
push
std
js
xchg
lods
adc
mov
lds
outsb
loope
cld
dec
enter
cmp
jecxz
into
xchg
jnp
adcb
mov
andl
add
adc
aam
movsb
imul
add
dec
jb
push
pop
test
iret
xchg
test
movsb
pushf
cltd
insb
sti
cmp
call
movsl
push
ret
jle
es
mov
push
or
mov
and
jl
stc
mov
js
adc
xchg
inc
cli
mov
adc
inc
pop
jb
loopne
push
stc
addl
mov
aas
mov
cli
iret
bound
cmp
cmc
movsb
clc
jp,pt
inc
movsb
je
mov
pop
stos
fwait
inc
fldenv
aam
cmp
or
cmp
in
push
stc
cmp
jmp
xor
mov
lret
cmp
push
pop
fdivrl
xor
dec
imul
hlt
movsb
std
into
lahf
iret
sarl
dec
cmp
pop
mov
leave
stos
dec
js
mov
enter
mov
rol
aas
jnp
inc
enter
sub
or
push
pop
push
xchg
cld
mov
mov
mov
in
andb
push
dec
push
mov
aam
cmpsl
gs
into
push
inc
enter
inc
aam
lret
pusha
cli
pop
clc
pop
push
dec
bound
lret
stc
fidivl
lock
xchg
pop
adc
imul
andb
cmpsl
lcall
or
aam
lcall
mov
xor
enter
cmp
test
iret
mov
ret
jae
repz
test
ret
sub
mov
in
test
inc
sets
out
xchg
mov
inc
cmpsl
adc
test
mov
cmp
xor
bnd
jne
mov
lods
sar
ret
rolb
jnp
lods
sub
mov
iret
push
rcl
nop
int
mov
xor
sbb
mov
sub
scas
push
xchg
cmp
shr
movsl
int
xor
pop
sbb
pop
lret
fists
mov
sub
xlat
mov
mov
test
mov
lret
dec
mov
jp
bound
xchg
fdiv
xor
cmpsl
mov
mov
fnsave
xchg
xor
xchg
pop
jns
xchg
movsl
frstor
mov
cmp
mov
cmp
outsb
xchg
enter
jnp
jns
dec
mov
retw
clc
jae
pushf
add
adc
iret
inc
sub
iret
and
vmread
cmpsl
adc
int3
inc
iret
adc
int3
inc
shlb
add
cwtl
ret
rorl
mov
sahf
and
jo
xchg
data16
cmpsb
in
invd
mov
adcl
sbb
ss
xchg
add
jl
mov
adc
adc
or
pop
std
int
xchg
stc
push
aad
sub
and
cmp
sbb
mov
add
cmp
lods
mov
repz
lods
mov
sahf
es
call
inc
mov
repnz
cmp
pop
movsl
mov
fnstcw
cld
push
ret
add
rolb
mov
fs
movb
sti
cmp
filds
add
sub
movl
or
xchg
pop
cmp
xlat
adcb
mov
loopne
sahf
stc
mov
xchg
cwtl
es
inc
jae
sahf
leave
xchg
aaa
clc
jb
ret
shlb
out
pslld
js
dec
fidivs
outsb
push
test
jns
enter
orl
dec
jl
lret
cmp
pushf
mov
jb
repnz
mov
sub
jno
test
sub
jle
cli
jmp
jns
leave
out
fwait
mov
cmp
dec
popa
or
jle
test
push
aas
cwtl
lea
xor
xchg
repz
popa
dec
iret
cmc
xchg
cmp
jbe,pt
repz
cli
jne
repz
insb
je
leave
sbb
cmpsl
jbe
cli
mov
stc
test
fcoml
xlat
hlt
call
ret
push
sarl
sti
push
aad
lods
enter
clc
pop
inc
call
and
pop
and
xchg
repz
lods
adc
popa
inc
cmp
icebp
nop
or
aam
sub
or
adc
aad
cli
enter
leave
sub
sbb
dec
jl
pop
ds
aam
je
cli
nop
sub
xlat
ljmp
enter
jo
xor
fs
andl
xchg
arpl
sub
dec
imul
lock
mov
adc
shrl
icebp
and
in
data16
mov
dec
ret
xchg
push
xchg
call
stc
pusha
fisttps
xlat
jns
rcrl
aas
fcompp
lea
mov
divb
cmp
xlat
ret
jns
lret
sarl
cli
mov
or
out
and
inc
scas
test
pop
and
push
inc
enter
ljmp
jno
xor
stos
push
adc
dec
pop
rorb
stos
mov
test
xchg
lock
stc
jae
xchg
or
shrl
fwait
push
aam
xchg
xchg
hlt
xchg
int3
and
enter
dec
enter
aad
leave
mov
mov
decb
push
inc
lds
inc
cmp
xlat
in
mov
movb
xchg
rolb
sbb
push
jb
rol
ret
out
in
or
imul
aam
or
std
ja
ss
push
rolb
aad
push
aad
lods
js
xor
movsl
mov
xchg
pop
sub
inc
pop
push
mov
mov
and
in
xorl
sub
sub
jmp
dec
mov
xor
push
or
cmp
and
ret
jns
pop
rolb
call
jmp
enter
xchg
cmpsb
push
in
xchg
cli
mov
in
dec
jge
push
dec
inc
fwait
ret
loop
int3
xchg
dec
bound
add
loopne
sub
fsubrs
je
pop
add
and
aad
test
mov
repz
xchg
popa
pop
cld
mov
enter
add
test
or
add
xchg
mov
push
int
cli
fistl
mov
mov
ret
sbb
push
repz
out
mov
inc
sub
int3
mov
mov
dec
adc
inc
mov
xchg
es
pop
mov
sbb
leave
aam
add
ds
lock
mov
mov
push
mov
mov
roll
fsubrs
push
nop
mov
add
cli
xlat
sbb
mov
pop
fcoml
out
sbb
sbb
or
roll
mov
hlt
push
push
sbb
inc
or
fdivrs
mov
sbb
xor
inc
jge
mov
add
lcall
cltd
jns
jb
inc
es
aaa
and
or
mov
inc
cmp
sahf
int3
cmp
fistpl
pop
xlat
lret
add
sbb
jb
push
mov
pushf
test
ret
shlb
pusha
mov
cmp
sub
in
nop
cmp
jecxz
mov
out
dec
mov
sub
enter
dec
cmc
sub
inc
ja
inc
aam
xor
mov
push
mov
fimull
mov
lret
lcall
popf
lds
negb
jg
call
js
lock
shrl
cmc
xor
xchg
stos
xlat
mov
xlat
adc
cld
lcall
insl
stos
cmp
mov
push
out
push
or
movsl
fst
jns
cli
lcall
mov
and
sub
ds
pop
mov
mov
xorps
cmp
fisubs
cmp
pop
stos
ret
iret
or
lcall
or
mov
cmp
lods
or
lret
fadd
cld
cmp
adc
imul
inc
std
jae
movsl
sbb
inc
popf
test
gs
lret
enter
sbb
andl
push
iret
add
mov
js
jns
gs
jp
jl
xor
mov
jnp
ret
cmp
lods
scas
jmp
ror
sti
pusha
clc
mov
incl
sub
sub
mov
sti
inc
and
mov
adc
sub
mov
int3
jae
aas
adc
loope,pn
repnz
pop
dec
jae
movsb
sahf
ret
and
sbb
push
cltd
ret
mov
jle
out
xor
mov
mov
addl
addb
repnz
xchg
mov
sbbl
xchg
pop
mov
or
sbb
sub
mov
arpl
ret
stc
test
adc
mov
jle
outsb
int3
xlat
fwait
sbb
fistl
xchg
sub
stc
push
lods
lods
call
add
sub
jbe
add
test
test
in
add
adc
cltd
leave
jge
pusha
push
mov
sahf
jnp
dec
lcall
insb
lret
mov
test
out
xchg
mov
mov
adc
cmp
mov
js
xchg
jns
push
mov
push
dec
xchg
cmp
and
mov
rcrl
add
or
ret
xchg
shrl
mov
adc
push
push
sbb
dec
leave
and
stc
mov
das
mov
jl
push
sub
xlat
xchg
loopne
mov
lods
push
aad
pop
or
jg
cmp
movsl
sub
push
addr16
lahf
ret
jl
sub
inc
xchg
cld
sub
out
inc
cmp
cmp
cmpsl
sub
mov
in
xlat
xchg
lret
jp
repnz
pop
and
add
arpl
inc
jle
xor
sub
and
push
push
xlat
es
add
ss
cli
jge
lds
sub
and
outsb
dec
mov
flds
pop
orl
pop
cmpsl
imul
pop
add
roll
aam
lcall
leave
mov
xor
mov
lret
jge
jnp
pop
or
sub
pop
fdivrl
frndint
jp
jae
or
sbb
in
or
sbb
loopne
xlat
shlb
or
rcrl
cld
pop
pusha
ljmp
sub
push
xor
mov
add
std
or
mov
sbb
ret
mov
pop
ret
aaa
lcall
addr16
jmp
pop
in
icebp
ret
mov
mov
ret
addr16
inc
cwtl
test
jg
xlat
mov
outsb
mov
cli
enter
cmc
xchg
mov
aad
jnp
dec
mov
ror
aam
fidivrs
jl
addr16
push
insb
sbb
jecxz
xor
pop
xchg
sbb
mov
dec
fidivs
mov
adc
not
or
sbb
scas
fistpl
sub
dec
cmp
xor
aad
ret
jp
test
lcall
pop
or
aam
repz
sub
out
aam
xor
stc
les
add
inc
xor
fsubr
push
rolb
sbbb
jbe
leave
sub
push
cmp
pop
ret
movsb
in
stc
out
ror
test
cli
adc
push
mov
cmpsl
pop
subl
leave
outsb
lret
cmc
adc
lods
pop
sub
cmp
push
arpl
mov
mov
loopne
and
add
inc
mov
dec
adc
popa
lds
cmp
push
xlat
lds
leave
js
bound
nop
ret
rorl
mov
popf
fldenv
lods
mov
sub
add
add
adc
and
subl
aas
dec
dec
ffree
pop
pop
push
lds
xlat
cli
lret
test
adc
sub
or
ret
mov
mov
lret
jmp
cmp
mov
mov
xor
fstpt
testb
in
sub
inc
and
push
adc
loopne
addr16
mov
pop
mov
cmp
cld
adc
fcomp
mov
jle
addl
stos
insb
sub
inc
scas
pop
icebp
je
addr16
iret
jg
add
lcall
mov
sti
test
imul
cmpl
leave
sbb
mov
aas
xchg
mov
mov
add
mov
fcomp
mov
xlat
ja
xchg
sub
sub
cmp
inc
arpl
stos
push
jb
and
xor
pop
out
sbb
enter
adc
jmp
es
dec
icebp
add
repz
lahf
cmpsl
nop
dec
lahf
clc
movsb
or
or
addl
enter
push
cmp
add
jo
mov
sub
lea
push
lret
cli
add
lods
sahf
inc
cmpsb
jns
jge
scas
es
jecxz
loopne
adc
lret
stc
lcall
lret
fs
inc
jg
dec
mov
stc
cwtl
add
pop
mov
test
mov
aas
jnp
aad
imul
pop
movl
in
jecxz
jecxz
dec
fs
jl
inc
int
mov
mov
push
ret
out
ret
ljmp
das
mov
cmpsl
not
sub
dec
jp
into
jb
pop
outsb
xlat
ret
popf
mov
add
clc
repnz
cmp
push
lcall
insb
jmp
mov
iret
jo
xchg
pop
rolb
dec
pop
fsubl
push
sbb
jle
rcll
mov
mov
and
loopne
and
push
lds
test
jns
cmc
pusha
mov
mov
mov
hlt
sub
add
sbb
sahf
in
cwtl
mov
fidivrs
test
loopne
cmp
jbe
cli
and
mov
or
ja
inc
jno
test
mov
push
xor
mov
sbb
jns
imul
inc
xor
addl
ds
ja
lcall
dec
dec
faddp
cld
cs
addr16
adc
jmp
popf
or
in
aaa
fwait
inc
and
dec
push
insb
jns
sti
testb
sub
and
imul
add
les
enter
jge
stos
fstpt
mov
dec
mov
jnp
cmp
or
fcoml
fsubl
ret
or
mov
int3
jno
aas
sarl
jnp
enter
and
pop
mov
xlat
rol
mov
idiv
js
popa
loop
xchg
sub
inc
nop
leave
pop
inc
sbb
mov
inc
or
jl
pop
popf
mov
sbb
and
pop
mov
je
test
lcall
mov
loopne
cltd
not
icebp
mov
ret
lods
ljmp
and
add
xor
ret
ss
mov
xor
mov
push
dec
rcrb
lret
in
xor
subl
dec
scas
mov
sti
fucomi
push
jg
adc
push
dec
in
mov
orl
cmp
insl
add
or
pop
fcoml
cwtl
in
cld
aas
jae
inc
popf
cmp
out
mov
xchg
push
mov
or
add
lcall
iret
fidivrs
iret
iret
cmp
in
cmp
pop
xor
sub
mov
inc
stos
imul
scas
rcll
int3
les
js
pop
pop
mov
shlb
stos
es
xlat
mov
decb
es
and
jns
leave
cmp
loopne
jb
rcrl
pop
sbb
cld
pop
push
test
pop
push
sub
xor
sub
mov
rcl
iret
inc
gs
or
inc
imul
les
fwait
mov
jne
mov
mov
sub
jmp
sar
dec
xor
add
jne
jb
rolb
cs
sbb
cmpb
push
mov
or
sbb
xor
and
push
insb
and
fadds
jge
in
and
push
pop
int3
mov
clc
into
scas
and
inc
addr16
mov
pop
push
imul
push
icebp
lcall
push
jge
dec
shll
dec
xor
outsl
mov
sub
sub
outsl
dec
push
inc
push
xor
and
lret
enter
pop
xlat
addr16
rcrl
dec
lret
clc
mov
adc
pop
mov
add
lcall
xchg
sbb
cmp
fdivs
loop
mov
lcall
fistl
mov
mov
add
outsb
ja
inc
lds
jnp
cmp
gs
cli
mov
sbb
ljmp
mov
lds
stc
pop
ljmp
cmp
sti
and
incb
fwait
mov
and
cmp
clc
inc
pop
cmpsl
and
add
sbb
mov
lret
mov
dec
pop
leave
iret
mov
insb
ds
jns
into
add
mov
mov
pop
ret
add
or
or
ds
aad
mov
add
push
pushf
cmc
xor
loopne
adc
aad
adc
xchg
jns
jb
inc
lret
insb
test
flds
test
mov
fstpt
pop
sub
cmpsl
lret
sarl
inc
dec
dec
or
lcall
and
pusha
add
push
xchg
fcoml
cmp
xor
dec
push
or
filds
dec
adc
cli
lahf
cmpsl
fbld
pop
fstpt
inc
out
leave
push
pop
sub
xor
inc
leave
rol
stc
inc
test
sbb
dec
xchg
leave
and
inc
jle
in
pop
lret
dec
jmp
xor
mov
jl
dec
xlat
clc
icebp
or
int3
js
cmp
frstor
std
mov
push
jl
scas
jb
mov
jo
cmpl
int
nop
rcll
stc
push
fsubrl
repnz
pusha
pop
daa
sub
push
sbb
stos
mov
push
jmp
cmpsl
xor
mov
lods
push
lods
xor
addr16
cmp
xchg
pop
imul
mov
push
add
mov
cmp
lods
cmpsl
pop
fldcw
stos
and
jmp
mov
imulb
jne
sbb
pop
mov
xchg
fimull
je
cmp
adc
aam
xchg
arpl
adc
lds
out
mov
fsts
mov
mov
pop
rcll
ds
sbb
cmc
push
mov
cld
pop
fildll
push
push
xor
add
pushf
mov
clc
fildl
xor
js
cltd
repnz
repnz
pop
mov
data16
fstps
pop
push
push
xor
or
jl
adc
mov
cwtl
push
addl
int
inc
cltd
push
popa
xchg
xor
dec
jl
mov
dec
testl
pop
std
pop
ss
inc
sti
ffree
add
fsts
add
inc
roll
pusha
mov
and
cmp
add
fdivl
pop
dec
fsts
jp
fwait
shlb
mov
test
cs
or
xor
rcl
call
jp
mov
sbbb
insb
ret
push
mov
dec
std
imul
inc
jo
and
xchg
lods
stos
and
test
xchg
jns
and
xchg
cli
inc
iret
in
ss
mov
dec
in
and
rcrl
imul
pop
add
mov
and
gs
dec
mov
sbb
sti
in
sub
sbb
mov
pushf
lret
roll
sub
cmp
insl
pop
fildll
scas
push
es
or
pop
cmc
mov
stc
jl
jnp
frstor
movsl
sub
jb
lds
and
dec
daa
lret
loop
or
pop
ljmp
inc
out
in
inc
jle
pop
cmp
cmp
and
add
xchg
dec
dec
adc
data16
into
add
mov
mov
add
filds
les
pop
cmp
mov
lret
push
cmp
dec
sub
pop
push
popa
mov
sub
jle
es
push
jge
inc
mov
jb
or
gs
int3
jl
sti
roll
addr16
repz
xor
push
insb
popf
dec
push
pop
enter
and
repz
pop
enter
rorb
orl
push
mov
xchg
sub
mov
stos
jb
sub
fs
movl
les
push
jp
outsl
sbb
loopne
push
lcall
imulb
mov
pop
lods
out
xchg
jecxz
mov
add
popf
mov
jno
out
push
icebp
aam
aas
sub
rcrb
sti
push
pop
inc
cld
mov
into
mov
sbb
std
mov
mov
add
clc
mov
repnz
cli
lret
jl
fdivp
lods
inc
sub
in
imul
loope
cmp
cld
dec
or
int3
cmc
sbb
and
and
in
xor
push
ficompl
sbb
dec
fwait
jns
nop
cmpsb
repnz
out
iret
fsts
mov
lods
push
ja
inc
ret
int
and
in
fsubrl
fcmovnu
enter
shll
lcall
lcall
mov
imul
and
pop
inc
sub
jne
ret
jnp
xor
pop
mov
int
adc
addr16
xorb
addr16
push
movsl
je
mov
mov
inc
pushf
jno
adc
icebp
daa
jp
hlt
stc
mov
jge
mulb
xor
test
jae
cmp
jns
shll
shrl
mov
inc
insl
sub
or
je
sbbl
mov
in
in
cwtl
mov
shrl
fisubl
ret
lods
test
inc
cmpsl
aaa
in
pop
std
cmpsl
adc
pusha
in
dec
or
dec
test
rcl
fmull
aaa
pop
mov
pop
push
jns
repz
mov
jne
repnz
iret
mov
push
fcomps
insb
xor
xlat
test
sub
pop
mov
loope
sbb
lcall
mov
cltd
iret
test
stc
cwtl
sahf
mov
in
fbld
sub
inc
mov
loopne
add
stc
inc
pop
stos
add
jnp
cmp
mov
pop
push
out
jnp
xchg
insb
leave
jb
push
je
cmp
xor
js
mov
stc
pop
add
push
das
int
or
lahf
dec
into
ret
sub
jecxz
fidivl
pop
cmp
ret
mov
dec
dec
in
into
xchg
inc
cwtl
cmp
aaa
mov
fldcw
cmp
cmp
inc
cmp
or
outsl
mov
sbb
jno
jle
inc
mov
jno
iret
mov
sub
fcompl
mov
hlt
or
cmp
mov
arpl
mov
or
sub
add
imul
dec
inc
cmp
jnp
stc
fld
cltd
aas
jp
pop
dec
rolb
or
ret
pop
mov
lds
lock
leave
mov
outsl
sarb
pop
int
stc
add
les
xchg
ret
mov
mov
push
xchg
mov
leave
and
jne
mov
mov
dec
cmpsl
es
test
ljmp
mov
cmp
js
cmp
movsb
test
push
repz
push
push
mov
cmp
push
fmull
mov
xor
imul
int
cmp
incb
push
adc
ret
dec
ror
or
aam
push
loope
xor
inc
out
inc
cli
cmp
mov
mov
mov
sahf
test
push
imull
sbbl
stc
std
push
pop
insl
mov
push
scas
mov
sbb
pusha
sarl
sub
jne
lcall
leave
mov
mov
sub
xlat
sbb
test
or
cmpsb
test
enter
jge
cmp
mov
ds
cwtl
mov
cmp
sti
fsubrl
xchg
cmp
adc
inc
arpl
dec
ror
rolb
arpl
fwait
test
jmp
sbb
inc
ret
push
pop
adc
xchg
imul
xchg
push
outsb
inc
push
test
mov
mov
push
dec
int
fsub
jp
or
stos
xor
cmpsl
mov
jmp
sub
shll
pop
xchg
push
sti
mov
mov
cmova
lea
movsl
mov
xchg
stc
ss
jo
dec
lcall
inc
xlat
scas
int3
mov
mov
adc
add
cltd
and
push
inc
clc
xor
add
jl
cmp
loop
and
push
mov
outsl
dec
fwait
push
leave
xchg
sahf
xlat
push
adc
cmp
and
inc
addr16
inc
inc
dec
fisttps
ljmp
cwtl
inc
xor
cli
fidivrs
out
add
sbb
jp
xor
push
cmpsb
jb
pop
enter
sbb
xchg
mov
cld
pop
ds
and
loopne
imul
sbb
ss
jb
mulb
fidivl
lock
or
push
xchg
xchg
jne
and
mov
and
mov
push
mov
stc
rorb
fxch
and
cmp
push
ret
push
sarb
xchg
cmp
adc
lds
and
pop
pop
sarl
fstl
jp
and
jb
and
mov
pop
inc
sbb
pushf
cmpsl
daa
sub
add
pop
pop
ljmp
orb
fucomp
push
and
push
outsl
cmpsl
mov
cmp
xlat
insb
pop
ret
or
mov
mov
pop
sub
lret
lret
ljmp
loopne
imul
xchg
xchg
xor
sbb
enterw
sub
mov
cli
adc
xlat
lock
pop
leave
mov
xchg
cmp
cmc
push
sbb
xchg
daa
add
daa
rol
xchg
fdivl
fsubs
arpl
ja
xlat
cmpl
cmp
inc
mov
fisubrs
fwait
xchg
aad
jp
mov
sbb
scas
pop
cld
sbb
adc
mov
push
and
test
inc
xchg
or
xchg
fsubp
mov
xlat
jmp
and
int3
mov
fistpl
sbb
lcall
decl
addr16
fiadds
add
cmp
cmpsl
sub
push
fs
roll
cmp
xchg
lret
das
lret
shrb
push
cmpsl
xchg
mov
outsb
dec
dec
out
dec
cmp
jecxz
xor
inc
movsb
hlt
aas
fcmovbe
dec
cmp
insb
pusha
cmp
ja
sbb
jp
cmp
inc
or
lret
jl
jecxz
push
test
jb
push
dec
lcall
mov
pop
mov
sti
in
outsl
and
push
dec
mov
ret
pop
loopne
xor
ret
fdivrs
rolb
push
xlat
jp
mov
cmp
sbbl
mov
mov
mov
scas
stc
addr16
sub
arpl
mov
mov
pop
pop
dec
inc
and
mov
mov
push
ror
clc
sbb
inc
push
rclb
fadd
setge
rorl
fdiv
add
or
je
mov
add
or
lret
cltd
pop
pop
sbb
pop
std
mov
inc
cmpsl
push
jne
lock
xor
loopne
sub
nop
inc
and
sbb
shl
push
ljmp
add
iret
outsb
out
xor
outsb
dec
scas
add
push
and
jb
mov
jp,pn
xor
out
mov
pop
enter
pop
rcrb
adc
push
lds
shr
adc
das
xlat
inc
jmp
cmp
int3
fidivrs
es
mov
dec
inc
jno
rorl
cmp
push
sbb
sub
ret
push
enter
pusha
push
aaa
xchg
jle
cmp
sub
cmp
movsl
loopne
out
inc
sub
repz
push
addr16
xchg
xchg
fsubs
add
cwtl
xor
call
adc
test
sbb
jmp
leave
xor
jnp
lods
sbb
cltd
xchg
stc
popf
jp
push
leave
ret
test
enter
dec
or
push
pop
sbb
fstpl
insb
mov
or
mov
dec
cmpsb
jns
loopne
and
daa
call
sbb
cld
dec
nop
sti
inc
scas
shrb
addr16
jmp
dec
mov
insb
cmp
cmp
inc
lcall
sub
bound
scas
push
fisttpl
or
inc
or
jns
xor
push
loop
sbb
mov
mov
cmp
cmp
fimuls
ret
mov
sub
stos
add
fadds
stc
cwtl
dec
cmpsb
inc
rolb
xlat
cmp
mov
jle
xor
mov
js
adc
or
pop
mov
test
fidivrl
ljmp
adcl
dec
dec
pminub
shll
pusha
ret
lods
dec
arpl
adc
xor
jns
std
jl
fwait
icebp
cwtl
popa
js
sbb
jbe
cwtl
call
push
cltd
lret
push
sti
outsl
mov
sahf
shrl
mov
jp
pop
cli
cmp
push
mov
cltd
notb
movsl
lret
jns
nop
add
andl
cmp
xchg
fisttpl
push
ds
dec
and
pop
inc
cmp
xchg
fldl
bnd
mov
xchg
stc
xor
mov
add
lods
dec
cmp
mov
pop
jp
cli
sbb
repnz
jbe
test
cmpb
bound
sub
pop
jae
leave
mov
jno
loope
out
bound
jle
pop
xchg
mov
push
test
inc
or
fsts
pop
icebp
cs
push
inc
pusha
fsts
mov
daa
add
clc
inc
out
inc
add
mov
adc
addr16
jecxz
push
push
call
cli
shll
push
mov
std
and
shlb
fwait
mov
in
mov
or
sbb
in
push
sbb
inc
or
push
mov
data16
sbb
test
pop
fnsave
scas
outsb
dec
fisubrl
stos
mov
leave
inc
push
inc
out
dec
fldenv
lds
scas
outsl
into
mov
cmp
mov
jo
mov
push
ficomps
cmp
mov
or
movsl
in
lds
imul
sub
repnz
cmp
fstpl
add
fdivl
mov
ljmp
push
lret
cli
add
push
negl
adc
inc
test
add
popf
ds
fsubrl
dec
mov
leave
sbb
inc
sub
add
sub
push
inc
add
cmp
fmuls
xor
ret
movsb
aam
scas
dec
int3
sbb
xchg
add
dec
movsb
lock
arpl
xchg
jb
mov
insb
jge
pop
cmc
jae
fs
sub
test
or
jecxz
ret
xchg
inc
pop
push
movsl
orb
movsl
inc
pmulhw
dec
loopne
mov
jb
or
gs
and
enter
pop
out
mov
sbb
test
mov
cltd
cmp
mov
inc
into
inc
dec
sub
lea
pop
push
cld
jge
and
dec
repnz
into
or
and
xor
cmp
popf
cli
outsb
int
std
into
test
sub
push
mov
pop
mov
mov
pop
dec
xor
cmp
jle
rclb
and
push
sbb
inc
fcomp
cmp
cmpsl
cmpsb
xchg
sbb
dec
sti
enter
aas
jmp
inc
fnsave
fisubs
inc
inc
les
sub
pop
leave
adc
pop
loopne
pop
or
ss
leave
xlat
iret
lock
xchg
fs
ror
mov
push
ret
sub
aas
mov
pop
scas
jne
popf
jp
imul
mov
divl
pop
iret
fstps
jmp
fstpl
jle
pop
mov
jns
cmc
stos
fimuls
add
loop
xchg
cld
lcall
arpl
push
adc
jb
bswap
je
aam
stc
fstps
lds
and
insl
pop
add
ljmp
mov
push
ljmp
mov
aam
mov
arpl
push
mov
lock
or
data16
inc
out
lret
movsb
push
mov
pop
dec
inc
xor
lods
adc
push
sti
jne
outsb
and
mov
jecxz
das
or
xchg
jns
jb
add
and
mov
sub
shrb
push
dec
add
test
test
xchg
orb
out
jno
rol
add
mov
mov
nop
fnstenv
inc
clc
lods
xchg
xor
divl
fiadds
leave
in
inc
mov
and
aad
xchg
mov
dec
fst
inc
pop
or
cli
sar
ret
jl
or
pop
int3
test
dec
cld
out
mov
pop
dec
xor
add
addr16
fldenv
cs
rcll
push
sbb
mov
movsb
dec
cmp
xor
push
mov
test
jg
fs
inc
jnp
pushf
cmp
push
jp
fwait
push
lods
stc
mov
mov
sub
sbb
leave
subl
pop
mov
lods
sub
pop
cmpsl
call
mov
mov
jb
mov
cmp
sbb
fistps
sbb
xlat
sbb
dec
stc
pop
or
inc
faddl
push
adcl
pop
inc
push
js
xchg
sar
adc
ja
sbb
sub
xchg
mov
jae
push
sbb
enter
mov
sbb
mov
push
mov
cld
sub
mov
mov
mov
mov
test
or
jmp
add
xor
mov
pushf
loopne,pt
addr16
push
ja
mov
pop
lds
mov
mov
and
sub
and
add
outsb
ret
or
jb
xor
inc
push
mov
xchg
pop
in
ret
fnstcw
or
scas
add
xor
pop
push
xor
or
cmp
push
xor
lcall
movsb
mov
pop
je
sbbl
pop
arpl
mov
adc
inc
insl
mov
mov
add
mov
leave
xchg
pushf
add
or
jns
cli
cmp
sti
clc
sbb
jbe
pop
mov
fxam
mov
inc
out
pop
or
flds
add
push
adc
imul
cltd
cmpsl
sub
xor
cwtl
jbe
mov
dec
ret
mov
aad
testl
lcall
stos
dec
aad
test
pushf
mov
ljmp
mov
shrb
rcrb
xchg
mov
cmp
mov
push
nop
push
inc
cmpl
imul
fdivrs
sbb
lahf
dec
int3
mov
stos
ret
xchg
pop
and
sahf
mov
outsl
jp
xchg
sbb
nop
adc
enter
adc
mov
testb
pop
hlt
pusha
inc
push
cmp
sbb
dec
inc
gs
xchg
inc
jae
lcall
js
push
xor
dec
xorb
lret
mov
enter
add
lock
in
shl
imul
js
cmp
xlat
in
xchg
push
divl
int3
sub
mov
sbb
popf
fwait
jge
imul
add
dec
jmp
sub
push
jl
int
fmull
sub
mov
orb
scas
aaa
loopne
lcall
ja
cmpsl
jns
rol
sbb
test
dec
lcall
adc
push
scas
cmpsl
xlat
pop
hlt
insl
jl
inc
iret
cmp
xlat
shl
ret
jb
push
fs
out
jns
das
xchg
lcall
xlat
std
stos
dec
jl
jmp
cmpsl
das
cmp
aad
jge
loopne
sti
adc
negb
int3
sbb
test
push
mov
cli
pop
jl
add
add
xchg
pop
shlb
andl
sub
jbe
ret
lret
mov
add
dec
mov
fidivrs
nop
lcall
inc
push
mov
sbb
rolb
inc
jnp
jmp
rorl
adcb
ds
jmp
adc
test
cmp
mov
sarl
mov
fs
sub
inc
cwtl
mov
cwtl
push
mov
arpl
push
pop
inc
setns
push
aad
push
adc
sbb
fists
dec
enter
dec
aaa
mov
push
dec
inc
rcll
test
pop
ljmp
lret
gs
fdivrl
push
loop
je
push
insb
jl
cmp
jmp
ret
fwait
mov
ds
pop
dec
pop
jp
lret
add
add
xor
xor
pop
dec
xchg
xor
lods
cmp
mov
loope
mov
nop
iret
test
mov
inc
out
adc
jnp
imul
es
in
lods
mov
and
jnp
mov
pop
push
mov
or
xchg
int3
addr16
rol
add
stc
push
enter
mov
mov
fcoml
inc
xchg
shrb
stos
cmp
adc
lea
insl
sub
insb
fnsave
ret
push
add
imul
pop
test
clc
adc
push
xor
test
sub
mov
mov
out
gs
jl
mov
push
fs
push
sbb
xlat
stos
mov
cmp
adc
in
out
insb
dec
lret
mov
js
inc
movsl
or
xchg
pop
daa
data16
adc
and
or
xlat
test
popf
gs
push
shrb
aam
mov
clc
imul
das
pop
popa
data16
inc
or
ret
fstps
outsb
jp
movsl
xchg
sub
mov
lock
dec
inc
mov
cmp
das
xchg
and
pop
adc
rorb
sbb
lret
lret
inc
xor
pushf
or
jae
inc
imul
or
push
and
mov
sbb
stc
mov
cltd
mov
lods
ffree
sub
test
cmpsl
iret
test
mov
stos
test
cltd
aam
mov
fildl
fisubl
jb
aad
or
out
fcoms
mov
ret
sub
push
sub
add
dec
iret
add
cmpsl
int3
lods
mov
mov
push
stos
or
xor
imul
cmp
in
test
ret
xor
jl
push
ret
pop
jns
xchg
test
push
stos
cmp
jg
xchg
dec
jns
cmp
inc
xor
cld
fmull
cmp
sub
arpl
sub
int
mov
les
lret
fnstcw
inc
daa
fsubrs
pop
pop
daa
jnp
cmp
pop
pop
or
sahf
xchg
leave
sub
jbe
cmp
cld
push
fwait
inc
push
cld
mov
push
mov
mov
insb
push
pop
sbbl
xchg
lods
cmc
rcrb
test
xchg
mov
sbb
xlat
pop
pop
repnz
sbb
push
aad
mov
das
shr
mov
jo
out
pop
mov
add
sub
add
test
pop
sub
mov
js
xchg
mov
pop
pop
sbb
test
xor
out
stc
popf
dec
push
popf
dec
and
addl
int3
cli
push
xchg
or
test
movl
jns
xchg
cmp
xchg
push
inc
jg
flds
mov
mov
jp
adc
mov
mov
stos
inc
push
stc
cmpsb
bnd
enter
inc
push
mov
pop
repnz
mov
dec
insb
cli
jb
popl
xchg
xor
mov
fsubrl
loopne
pop
leave
cmp
sub
xchg
mov
dec
lds
loop
int3
mov
inc
lds
or
mov
enter
dec
arpl
mov
mov
push
push
xchg
aaa
pop
pop
jge
xlat
jo
adc
sub
ret
pushf
xchg
jmp
dec
test
mov
enter
push
push
cmc
inc
inc
xchg
push
mov
mov
push
fwait
push
mov
jae
cmp
mov
in
sub
push
or
mov
cli
addr16
lcall
add
scas
add
push
lcall
mov
loope
int3
push
inc
stos
or
fmul
scas
jae
cmp
mov
mov
lods
repnz
sub
sub
sbb
xchg
int3
add
lea
sbb
aas
cld
stos
jle
jmp
pop
lcall
xchg
inc
xlat
stc
cli
pop
dec
into
test
cmpsl
lret
frndint
xchg
int3
and
or
mov
fcmovb
adc
cmpsl
xchg
rol
mov
sub
xchg
inc
xor
iret
ror
or
add
test
nop
aam
mov
fwait
dec
mov
mov
sbb
mov
mov
repnz
dec
cmp
push
in
mov
cmp
push
xchg
aam
leave
fnstsw
mov
mov
mov
mov
popf
jge
sbb
icebp
inc
push
testb
mov
aaa
mov
push
jp
xchg
or
add
pop
adc
xchg
xlat
stc
sbb
lret
xlat
sbb
mov
lods
stc
mov
mov
mov
fsubrl
jns
jl
cwtl
test
test
adc
repnz
add
sbb
les
mov
jp
push
xchg
subl
jns
test
out
sbb
popf
xchg
fcompl
movsl
stc
jp
inc
xchg
fcmovu
sbb
cld
pop
addr16
jb
outsb
test
push
stos
mov
push
ja
sub
pop
aaa
pop
out
nop
jp
movsb
orl
fs
add
out
nop
hlt
and
in
mov
mov
repnz
ret
cmp
addr16
mov
pop
inc
lods
cld
jp
in
fucom
hlt
test
inc
jle
shrl
fstpt
jb
mov
inc
jl
or
pushf
ja
sub
or
dec
sbb
test
pushf
dec
mov
and
xchg
fmull
push
fimull
pop
popf
cmpsb
add
add
mov
rcrl
sbb
jb
test
push
in
push
add
enter
inc
dec
ds
cld
test
cs
lcall
jns
aad
jb
add
lods
movl
fld
cwtl
ss
cmp
lods
and
dec
scas
pop
mov
scas
push
mov
lods
test
cmpsl
fimull
fdivl
repnz
cmpsl
add
sbb
pop
inc
add
mov
add
sarb
outsb
mov
aas
nop
negb
inc
push
int3
ret
adc
push
cmpb
test
fwait
pop
pop
sbb
jp
mov
jbe
or
jae
testl
mov
push
movsb
icebp
dec
test
pop
mov
sarl
mov
mov
ret
mov
ficompl
pop
iret
lcall
fld
and
lret
xlat
shll
test
movsl
inc
test
sbb
dec
sarl
std
scas
ljmp
sub
in
ret
aam
ret
and
aad
sbb
mov
inc
push
cmp
pop
leave
inc
push
inc
inc
lcall
jne
jae
test
inc
cmp
mov
mov
cmpsb
lcall
mov
mov
mov
xor
or
push
xchg
sbb
dec
mov
push
mov
xchg
inc
mov
adc
fidivrl
inc
inc
idivl
js
cmp
xor
mov
and
mov
sbb
jl
inc
cld
sbb
filds
add
ret
int
dec
inc
lret
inc
push
pushf
fs
jns
xor
mov
ljmp
pop
dec
mov
and
in
movsb
or
mov
xchg
mov
and
adc
xchg
xor
subb
fildll
sbb
push
dec
int
iret
iret
mov
xlat
sbb
sti
xor
js
fucomi
test
jl
test
pop
or
cwtl
lret
mov
mov
repz
stos
cli
jns
xor
mov
jle
movzww
rcll
add
adc
sarl
mov
pop
inc
rorl
xchg
and
or
fldcw
mov
adc
jae
cmpsb
mov
mov
ret
pop
inc
aam
std
in
push
lret
leave
lea
je
lea
cmpsl
push
sub
jl
rcl
nop
xchg
or
cltd
outsl
orb
mov
inc
in
xchg
push
leave
jle
add
dec
or
adc
cld
inc
lds
testl
sbbb
add
in
dec
cltd
stc
fwait
into
cmpps
popf
xchg
lret
test
mov
fsubrp
fdivrl
lret
stos
pop
sbb
cli
rcrl
stos
imul
mull
mov
and
dec
mov
shr
fucom
push
cmp
xchg
in
ret
dec
mov
dec
adc
add
mov
jmp
stc
test
roll
jg
shrl
cmpsl
cmpsb
push
mov
push
jnp
dec
cmpsl
loope
jmp
and
scas
pop
pop
mov
and
adc
and
sbb
je
mov
xchg
pop
cmc
lock
inc
stos
ret
add
mov
cwtl
xor
rorl
insb
lret
pushf
sub
xlat
push
inc
jecxz
sbb
inc
jl
push
mov
inc
mov
icebp
dec
pop
mov
cmc
sarl
ds
inc
movl
pop
mov
mov
mov
int
scas
push
stos
bound
cmpsl
lods
ret
test
lods
cld
cmpsl
mov
mov
push
mov
push
fcomps
sub
aad
inc
pop
dec
cmpsl
lds
aam
test
stc
rol
mov
mov
mov
faddp
lock
daa
dec
mov
dec
aaa
popf
mov
and
jp
fstpt
decl
cmp
fidivrs
repnz
leave
or
nop
flds
jmp
fcomps
cmpl
pop
sbb
fbld
in
sbb
jnp
cli
jl
jl
xor
rcl
bswap
gs
xlat
sbb
stos
fcom
vpsubsw
insb
mov
loope
sbb
cli
cmp
aam
push
mov
mov
add
stc
nop
jno
jp
enter
add
aam
push
imul
add
aam
push
gs
or
add
aam
push
lahf
dec
or
add
aam
push
mov
jmp
in
movsb
daa
fcomp
add
loope
cmpsl
fldcw
inc
enter
ds
popa
aam
lahf
sub
push
and
cmp
shl
add
push
iret
pop
sbb
enter
push
lahf
xor
or
sbb
adc
mov
add
cmpsb
add
aam
nop
std
movsb
inc
test
push
test
mov
daa
pop
into
lret
mov
cltd
ret
sub
mov
add
inc
dec
int3
dec
mov
jns
dec
inc
test
test
mov
fstps
dec
movsb
fbld
xchg
stc
test
xor
or
inc
jo
mov
out
pushf
das
lds
imul
sbb
nop
xor
xchg
movsl
jo
stc
fcompl
jne
push
loope
popa
push
xchg
into
stmxcsr
xchg
enter
mov
pop
xchg
test
ficompl
inc
and
or
cmpb
iret
lods
inc
and
aad
dec
xor
lret
pop
dec
sub
ror
pop
dec
daa
test
mov
add
mov
xor
inc
mov
test
enter
push
test
mov
sub
cmpsb
add
les
xor
jo
fistpl
cs
add
cld
int
test
pop
fcmovbe
push
pusha
or
jl
test
cwtl
pop
test
loop
pop
sbb
je
pop
adc
aaa
fmull
inc
mov
xor
cmp
mov
jl
mov
mov
add
mov
inc
mov
test
push
ss
das
mov
xchg
and
add
mov
outsb
in
adcb
scas
outsl
xor
and
inc
sbb
jecxz
push
inc
sbb
push
imul
scas
and
or
add
aam
push
test
or
add
aam
push
shrb
jns
insl
test
enter
fistps
add
rolb
call
test
enter
dec
ss
enter
xor
lods
inc
scas
sub
enter
xor
inc
and
push
test
enter
xchg
into
cmpsl
les
push
mov
cmp
inc
adc
add
lret
xchg
stos
xchg
mov
stos
mov
mov
fldcw
pushf
jbe
dec
enter
jns
mov
push
out
out
mov
repnz
sti
inc
mov
add
pusha
dec
das
les
es
sub
jnp
stos
js
mov
mov
enterw
andl
or
mov
test
inc
and
inc
inc
xchg
xor
mov
leave
int3
fistps
sub
mov
cmp
cld
mov
enter
push
lods
xorb
test
push
rol
mov
ret
ret
mov
cmpxchg
add
lds
sbb
or
push
les
cmpl
aas
and
push
divb
sbb
mov
ds
lcall
fwait
scas
mov
cmp
pushf
cmpsl
lds
fildl
sub
push
sbb
mov
insb
out
xor
js
push
or
mov
add
pushf
in
dec
rorb
das
mov
fiadds
outsl
pop
test
sbb
push
push
pop
mov
out
inc
addr16
xlat
movb
enter
push
jmp
stc
test
sub
jl
je
popf
xchg
add
popa
jnp
sub
fcmovnb
aad
andl
cli
mov
daa
pop
insb
jge
sub
jnp
loopne
push
cmc
aas
mov
roll
add
push
ja
fidivrs
push
jmp
xor
and
add
sbb
das
sbb
push
addl
mov
mov
adc
mov
adc
inc
loopne
sub
faddl
in
mov
pop
inc
ret
test
clc
out
das
add
leave
lret
fdivl
jmp
dec
and
push
jb
jecxz
cmpsb
std
adc
and
jl
cld
pop
lds
xor
mov
mov
std
stc
adc
or
and
pop
cmp
ja
lcall
int3
popf
ficoms
cmp
scas
cmp
fsubrl
inc
jb
mov
mov
scas
scas
in
stc
xchg
mov
jl
lods
rolb
insl
cltd
and
call
add
decl
jae
lds
cmc
inc
jmp
lret
cld
jnp
pop
jo
cs
xchg
lret
add
les
clc
sub
std
sub
push
movsb
outsb
jmp
cmp
cli
pop
xchg
cmp
xor
imul
mov
jns
fnstenv
dec
cltd
pushf
aaa
imul
inc
das
mov
js
mov
addr16
repnz
sub
sub
popf
mov
cmp
cmp
mov
mov
xchg
sbb
rcr
loopne
add
mov
mov
enter
stos
mov
adc
add
sub
addr16
cs
jbe
dec
stc
out
xchg
int3
call
inc
aad
ret
or
lock
dec
push
push
mov
mov
mov
push
sub
decb
lahf
roll
popf
pushf
nop
push
rclb
addl
pop
push
dec
das
cmpsl
test
popa
pop
sub
es
and
mov
or
mov
mov
int3
push
pop
push
cmpsl
adc
xlat
je
mov
lds
xchg
pop
enter
mov
mov
scas
sti
cmova
lods
shrl
add
jmp
loop
mov
in
cmp
jno
leave
test
pop
lret
dec
fmul
into
jp
cmp
jns
cli
jl
repnz
xchg
xor
xor
cmp
cli
les
mov
dec
fsts
sbb
pop
mov
rcll
push
inc
pop
dec
mov
or
inc
inc
sub
fld
popa
pop
xor
adc
add
xchg
add
flds
and
pop
stc
jle
test
ret
sub
xlat
pop
popf
mov
scas
insb
cmp
hlt
imul
mov
pop
sbb
insb
mov
and
popa
adcb
mov
xor
sbb
ret
sbb
movsl
ffreep
push
cmp
in
push
inc
mov
loopne
push
add
in
xchg
sub
jl
pop
dec
mov
sti
jb
ljmp
mov
pop
or
std
inc
rcll
gs
pop
adc
cld
lcall
xor
push
ja
cmp
sub
sahf
or
xlat
pop
push
dec
xchg
jo
cld
mov
push
sahf
inc
inc
xor
cmp
ss
mov
fs
jg
ret
dec
lods
fsubrs
sti
cmp
push
sti
lods
loopne
sbb
test
adc
pop
popa
or
cmpb
idiv
pop
pop
leave
inc
pop
pop
adc
pop
cmp
cli
ficompl
cltd
ret
lods
cwtl
dec
xchg
int3
ds
addl
mov
inc
ds
mov
lea
mov
outsl
gs
cld
loope
pop
inc
scas
inc
sbb
out
stos
daa
mov
push
mov
fildl
cwtl
mov
scas
sti
lds
pop
cmp
inc
cwtl
and
nop
lds
les
mov
dec
mov
jo
mov
lcall
outsb
jge
pop
jne
iret
xchg
scas
rcr
fnsave
xor
mov
jnp
ja
lcall
sub
xchg
insb
xor
imul
rcl
das
mov
loopne
leave
pop
mov
mov
cmp
ljmp
fwait
jae
or
adc
pop
push
lcall
xor
nop
pop
dec
cmp
lods
jne
pop
mov
mov
into
xchg
mov
stc
jge
ds
cmp
adc
outsl
out
loop
int3
test
lds
push
cmp
ds
jg
pop
inc
ret
loopne
push
stc
imul
mov
ja
or
jecxz
imul
lret
ror
pop
push
stos
mov
loopne
pop
or
lcall
scas
shrl
ret
sbb
in
mov
ret
add
jo
out
adc
popf
mov
mov
mov
cmp
sbb
dec
cmp
sbb
xchg
stos
stc
bound
mov
cmp
pop
test
mov
mov
inc
push
jb
test
xorl
and
loopne
mov
out
data16
cwtd
push
loopne
cmp
ds
js
or
sub
movsl
jbe
xchg
into
push
call
adc
or
jge
or
sbb
int3
mov
aaa
int
dec
push
dec
popa
pop
push
jecxz
lods
mov
cmp
lret
fwait
xlat
setnp
nop
pop
lcall
sub
jo
pop
mov
push
add
push
fwait
or
pop
movsb
add
fldenv
xchg
cmpsl
dec
inc
negb
rorl
lods
add
jle
bound
push
incb
cltd
cmpsl
inc
cmp
mov
idivl
cld
push
stos
test
int3
popf
push
stos
adc
xchg
enter
test
adc
in
test
inc
jbe
mov
mov
movsl
test
mull
push
or
das
push
int3
test
in
sbb
scas
mov
adc
pop
shrb
inc
test
mov
ret
into
shrl
mov
pop
mov
jbe
cmp
adc
and
popf
mov
leave
pop
mov
jl
aad
scas
fwait
and
xchg
mov
sub
add
dec
addl
mov
mov
movsl
aaa
inc
ljmp
push
sub
sbb
and
sbb
and
gs
or
push
stc
js
popl
addr16
idiv
jmp
lret
push
cmp
mov
cli
sbb
or
cmp
iret
rcll
lock
dec
repz
lea
fdivl
dec
ss
mov
xor
repz
adc
xor
cld
jnp
cmp
mov
int3
imul
fistpl
in
xchg
ds
inc
or
add
test
push
mov
dec
cwtl
out
lea
fisubrs
mov
jge
fcoms
push
dec
mov
cmp
rcrl
stc
mov
leave
fs
push
ret
mov
clc
or
xchg
sub
popa
xchg
les
gs
lcall
es
call
xchg
cli
lcall
and
jb
ret
sub
and
or
into
jns
push
or
shl
addr16
cmpsb
lret
aad
jmp
cmp
ret
fnstsw
mov
add
movsb
adc
dec
out
test
dec
or
pop
jmp
repz
sbb
pop
mov
jle
push
jmp
jo
and
pop
rol
iret
mov
mov
jbe
or
mov
cwtl
sbb
fwait
cmpsl
js
cmpsb
test
rcr
popf
movsl
loope
cld
pop
mov
mov
or
mov
lods
enter
sbb
paddw
imul
mov
adc
mov
aam
int3
ds
in
iret
cmp
popf
cmp
xchg
dec
cmp
and
js
mov
xlat
cld
lds
xchg
cmpsl
adc
lret
ss
push
push
cwtl
inc
pushf
lds
and
and
mov
rorl
repz
out
int3
jb
clc
stos
jns
sbb
fmulp
mov
sbb
sti
stos
pop
pusha
test
sahf
dec
jp
cli
iret
shll
cmp
repnz
mov
inc
adc
sbb
cmp
jmp
enter
shrb
lret
mov
pop
lret
lahf
sbb
mov
lods
int3
cmp
and
sbb
jns
cmc
imul
or
cltd
jl
int3
mov
gs
cmp
rclb
popf
ret
data16
pop
cmpsb
push
inc
scas
or
inc
pushf
mov
sub
test
pop
ljmp
jp
or
cld
add
adc
nop
adc
sbb
loopne
cmpsl
and
sbb
cmpsl
xchg
inc
pop
scas
add
fnstenv
pushf
jnp
adc
push
cwtl
sarb
leave
pop
lock
jl
inc
daa
loop
into
adc
insb
mov
or
sbb
mov
mov
pop
aaa
jg
xor
sub
sub
mov
pop
mov
call
pop
mov
fsubrs
inc
jns
movsb
fisubrl
loopne
add
pop
std
in
or
fsts
dec
and
pop
xorb
test
lods
cli
test
dec
inc
leave
sbbb
add
pop
xchg
xlat
sbb
xor
xchg
cmp
stc
test
mov
addr16
sahf
cmp
sbb
lds
les
add
dec
fwait
adc
jge
out
and
loop
push
cmpsl
push
mov
mov
shl
pop
mov
loope
push
sub
loope
fincstp
lods
cmpsb
jmp
sub
popf
adc
in
ret
jl
xlat
mov
cmp
imul
cmpsb
sub
lds
adc
lret
enter
fmull
pop
ret
or
and
sub
pop
jl
sub
mov
ret
in
hlt
cmpsb
imul
pop
aaa
mov
sbb
icebp
add
xchg
jae
jo
sub
leave
cld
imul
mov
dec
test
adc
in
fadds
lds
addr16
sub
add
push
out
test
mov
cltd
les
and
mov
pop
fcomi
adc
cmp
sbb
arpl
mov
ljmp
push
fwait
mov
lret
add
sbb
dec
pop
xchg
insb
xlat
pop
les
adc
aas
rcrl
nop
les
jge
sbb
sbb
push
inc
out
sbb
xor
cmovo
or
test
push
jge
sbb
xchg
mov
imul
xlat
fwait
cmpsb
adc
xor
pop
xlat
xor
jecxz
push
aam
in
sub
sbb
add
ljmp
jl
repnz
cmp
movl
js
cmp
out
push
lods
ret
mov
cmp
dec
sbb
lods
inc
daa
inc
push
into
mov
push
mov
pop
fdiv
mov
or
repnz
mov
jno
pop
add
mov
mov
pop
fprem1
pop
test
lret
andb
or
jae
mov
mov
std
jb
shlb
dec
mov
arpl
push
popf
add
lcall
andl
sbb
sahf
xchg
es
xor
xchg
add
stos
ret
enter
mov
sub
pop
mov
mov
pop
xchg
sbb
mov
aaa
xorb
fiadds
int
stc
adc
into
scas
lret
loopne
jp
arpl
dec
sbbb
call
dec
lcall
sti
push
sub
xor
test
les
pop
or
push
repnz
loopne
les
hlt
jno
sar
add
pop
add
aad
sub
lret
push
cltd
fwait
mov
inc
mov
cmp
insl
xchg
xlat
pusha
in
dec
sub
enter
xor
pop
sbb
pop
movb
pop
sub
daa
xlat
aad
cli
add
or
lcall
xlat
leave
sahf
add
bound
or
int3
and
cmc
icebp
xchg
ljmp
push
les
iret
mov
sub
mov
fistpll
and
xchg
ret
cli
lods
xchg
jp
cwtl
enter
js
cmp
pop
pushf
in
pop
imul
dec
or
or
sbb
sbb
or
and
sbb
xchg
cmp
xor
pusha
mov
fisubs
fs
dec
xchg
sbb
rol
mov
cmp
jne
loop
in
sub
jns
pop
jns
enter
pop
dec
jns
daa
movsl
mov
dec
in
pop
pop
leave
sub
ljmp
sbb
jp
cs
cld
push
loopne
test
shlb
cwtl
mov
cmc
jg
add
pop
fdivrl
jl
jno
cld
fidivl
jg
mov
sbb
aad
aaa
aas
xor
jno
cltd
push
mov
mov
sub
jge
dec
push
leave
nop
sub
out
les
xchg
ljmp
push
mov
cmp
out
repz
daa
pop
mov
in
xchg
cmp
dec
and
mov
cli
mov
push
sbb
repnz
jb
into
and
ja
mov
cmpsl
imul
cmp
inc
push
lods
mov
shlb
mov
mov
add
adc
mov
inc
jne
insb
lods
aaa
js
add
mov
test
loope
push
adc
xor
dec
xor
jno
hlt
cltd
cmp
mov
addr16
lret
insl
mov
movsl
rclb
mov
cmpsl
and
mov
arpl
lcall
jns
mov
xchg
jp
cmpsl
pop
push
adc
pop
fsubrs
xchg
xchg
mov
dec
loop
jge
movsb
add
rcll
xlat
or
loop
add
cwtl
and
ja
or
jge
jp
lods
roll
xchg
mov
xor
mov
icebp
fimuls
loop
cwtl
and
call
movsl
inc
ds
pop
out
int
cmc
stc
pop
sbb
mov
mov
cmp
push
mov
push
or
mov
lret
bound
add
lret
aas
sub
cld
jp
int3
mov
loop
dec
bound
in
mov
sub
loopne
rcll
jle
dec
shrl
ret
sub
sbb
pop
dec
jne
push
pop
pop
leave
cwtd
popf
mov
inc
cmpsb
xor
cmp
cltd
bound
loop
movsb
test
lea
aas
test
push
popf
aad
insb
test
mov
pop
aam
cmp
stos
vshufps
mov
lcall
push
mov
push
repz
and
pusha
cli
test
movsb
and
or
or
and
fs
xor
mov
insb
mov
jl
call
xor
shrl
jl
mov
aas
and
bound
mov
inc
clc
ljmp
loopne
or
js
mov
cli
jge
test
pop
cltd
push
jbe
pop
fists
aas
inc
jbe
stos
lcall
dec
cmp
adc
push
pop
push
lods
and
pop
ret
cmp
insb
or
push
std
fs
adc
test
cmpsl
sub
cmp
lret
sahf
mov
sbb
cli
xlat
rcrb
aas
sub
in
lcall
mov
xor
add
inc
sti
push
out
or
lcall
lret
push
aad
and
sub
adc
mov
pop
imul
jb
test
das
xor
or
rcrl
dec
cmp
mov
std
movzbl
je
adc
scas
les
mov
or
cmp
add
sar
gs
xlat
ds
fs
test
mov
fnstenv
test
add
repz
mov
es
insl
and
ds
mov
cld
add
mov
mov
mov
fistps
pusha
das
in
es
mov
mov
popa
mov
pop
imul
mov
rep
or
shlb
imul
ret
jo
repnz
cmp
xchg
int3
ss
aaa
repnz
lcall
lods
int
fstpl
sbb
pusha
out
lds
in
pop
popf
xchg
pop
jp
jmp
repnz
aam
ret
xchg
aam
iret
int3
xlat
xchg
inc
rolb
mov
mov
xchg
stc
into
lcall
cmp
lcall
pusha
inc
sbb
inc
fmulp
enter
stos
mov
mov
inc
gs
lcall
pop
or
cmp
xlat
mov
jns
lcall
jle
lods
sti
mov
and
mov
pop
in
mov
dec
xchg
enter
cli
jmp
cmp
push
mov
jne
sti
in
cmc
incb
pop
mov
cmp
pop
sbb
ja
aam
ret
fmuls
mov
cs
inc
sbbl
cmp
popf
stc
fiaddl
add
dec
dec
mov
cmc
inc
and
pop
int3
inc
fs
inc
sub
roll
loopne
sbb
mov
mov
mov
pop
cmp
or
test
mov
imul
fsubrl
inc
mov
push
ret
or
sarb
push
imul
cwtl
push
jl
cld
test
add
rcl
dec
inc
gs
inc
push
add
cwtl
inc
jle
inc
flds
xchg
ss
std
dec
test
lret
push
lcall
sbb
push
popf
aam
les
inc
adc
mov
les
les
gs
inc
cmp
in
sbb
mov
mov
xchg
lods
inc
dec
enter
stc
xlat
rcrl
cwtl
out
int3
cmp
test
inc
dec
fsubl
inc
push
xchg
stc
insb
out
lods
cwtl
mov
xchg
das
gs
add
mov
adc
mov
in
cmp
xchg
outsl
or
ret
std
gs
mov
pushf
pop
stc
addr16
jl
dec
dec
jne
mov
jl
incb
dec
sbb
pop
fdivrp
mov
mov
jg
lret
int3
fldcw
sbb
mov
mov
mov
ds
ret
lods
or
sbbb
jp
push
imul
dec
addr16
mov
jne
dec
push
pop
inc
or
jo
cmpsb
adc
ja
test
pop
cmp
sbb
pop
idivl
shll
dec
fbld
rcll
lret
adc
mov
ret
mov
push
std
incb
inc
popf
dec
ret
enter
shll
xor
adc
inc
mov
fstps
add
inc
test
push
jne
shll
jl
xchg
fisttpl
cmpsl
push
mov
mov
es
jmp
ret
inc
jp
xchg
pop
aam
pop
aas
cmp
pusha
es
sub
push
or
fistpl
sub
rcll
dec
sbb
inc
cli
popf
add
lcall
sub
xchg
xchg
scas
adc
hlt
fldt
scas
lock
ret
lods
xchg
jp
popf
test
adc
das
ret
arpl
test
add
clc
dec
sti
into
sbb
xchg
jns
fisttpl
sbb
fistpl
sti
fstpt
mov
sub
in
push
inc
inc
pusha
sbb
mov
push
mov
mov
dec
lahf
xchg
pop
jl
adc
dec
or
inc
and
loopne
lds
pop
push
test
jmp
adc
test
or
push
sti
add
adc
jp
cld
lds
jns
push
or
push
sub
stc
fdivr
push
movsb
test
jns
jp
inc
fneni(8087
inc
test
pop
lahf
lock
jo
jb
add
sub
iret
adc
popa
fcmovnbe
inc
sbb
cmp
and
subl
movsl
push
mul
and
or
ret
dec
xchg
or
fs
test
call
aam
jns
in
and
js
cli
or
popf
stc
int
push
pop
ret
push
fldenv
insb
xchg
dec
ret
mov
in
pop
cmc
daa
mov
aaa
iret
or
lods
xchg
push
subl
or
ds
shrb
add
push
xchg
ljmp
mov
pop
mov
pop
pushf
scas
xchg
stos
lds
lret
pop
aaa
ds
or
mov
in
mov
dec
or
pop
jnp
jecxz
popf
mov
jo
repnz
jg
lret
pop
outsb
xchg
addr16
mov
movsb
rcll
push
imulb
sbb
pop
enter
faddl
pop
bnd
dec
dec
retw
imul
ja
add
adc
mov
lds
stc
ljmp
mov
into
pop
xor
faddl
cmc
scas
xchg
pop
jmp
scas
add
inc
mov
cmp
repnz
xchg
mov
dec
dec
mov
stc
push
jae
out
or
dec
mov
rorl
in
jae
gs
jns
xchg
stc
add
sarl
adc
fnstcw
shl
fadd
cmp
fstpt
jb
jmp
ret
jno
sbb
std
or
pushf
cmp
and
jns
mov
enter
fiaddl
fwait
cmp
jmp
xchg
test
pop
int3
enter
cs
mov
add
sub
add
dec
dec
test
fwait
or
xchg
mov
sahf
ss
jb
mov
dec
mov
push
dec
aam
sub
xor
dec
shll
or
inc
cmpsl
cli
cli
jmp
movsl
ret
and
sub
dec
or
sarb
add
fadd
jno
sti
adc
scas
int3
iret
jb
add
ljmp
mov
pop
mov
lods
test
pop
jae
push
mov
jne
rorb
jo
sbb
and
jno
mov
cli
cmc
xor
popa
lahf
movsb
iret
popa
lds
add
aam
sub
sub
cmpsl
loopne
add
xchg
mov
sub
cld
jl
add
std
jmp
xor
roll
xlat
popf
mov
cld
and
insb
xor
mov
xchg
ret
dec
pop
xlat
push
arpl
test
mov
jl
mov
xlat
in
pop
inc
bound
xchg
test
xor
pop
lahf
in
test
fwait
mov
fisubrs
add
movb
dec
in
mov
jns
loopne
and
adc
jg
xchg
packuswb
cltd
pop
inc
add
pop
and
fbstp
cltd
idiv
mov
sub
push
mov
bound
into
cltd
stos
mov
ret
loopne
and
mov
mov
loope
push
xchg
fidivrl
rcll
insb
inc
stc
loopne
repnz
sarb
fstpl
pop
mov
push
xchg
movsb
mov
mov
inc
mov
xor
ret
or
pop
push
inc
mov
mov
lods
or
mov
mov
outsl
test
and
adc
das
ret
loopne
sub
inc
mov
pandn
cld
mov
inc
push
mov
dec
inc
ret
sti
leave
ret
stc
loopne
dec
test
lods
dec
pop
test
pop
jl
fnsave
cmpsl
cmc
mov
cli
cltd
neg
stc
sub
push
je
in
pop
ret
pop
sbb
lea
fldl
inc
jmp
adc
daa
rcrl
leave
mov
and
test
int3
inc
add
iret
enter
out
nop
mov
fadd
and
or
test
popf
mov
subl
and
fsts
jne
lret
xchg
bound
dec
imul
inc
push
pop
inc
leave
xlat
enter
dec
sti
ret
insl
into
inc
adc
insb
push
mov
dec
lcall
cwtl
sub
pop
ss
inc
jns
jb
push
dec
cld
bound
ret
push
fbld
cltd
jecxz
gs
orl
mov
cld
push
dec
add
inc
popf
scas
adc
sub
or
add
andb
cltd
push
mov
cli
fs
mov
xor
repnz
pop
inc
cld
sbb
stc
cli
push
mov
mov
loopne
and
insb
push
jge
mov
xor
xchg
rorb
adc
pop
fcom
add
jmp
pop
call
insb
xor
dec
pop
stos
and
mov
mov
mov
push
out
pop
add
xlat
mov
push
addr16
pop
ret
out
lcall
mov
push
lds
pop
mov
sbbl
xchg
cmp
push
aam
add
xchg
adc
and
and
enter
rorb
test
pop
subl
jns
or
mov
mov
leave
sbb
test
js
movsb
xchg
or
jmp
cmpb
add
es
xchg
push
in
xchg
inc
pop
sbb
xor
sub
sub
mov
sbb
test
mov
shl
call
inc
mov
mov
rol
popf
mov
sub
cwtl
pop
and
jp
sbb
cmp
shr
jmp
adcl
cmp
scas
xor
test
lea
mov
lret
cmp
clc
xchg
das
jne
enter
adc
popf
enter
dec
imul
inc
dec
mov
cmp
jmp
pop
xchg
stc
mov
movsb
in
enter
xchg
aaa
jb
mov
not
lret
popf
jb
sub
dec
pusha
cld
addr16
jnp
pop
aas
les
pcmpgtb
inc
push
xchg
xlat
pop
push
aaa
and
adc
cwtl
xor
mov
lret
gs
mov
push
jge
pop
test
mov
mov
sub
iret
lods
xchg
sbb
incb
into
and
lret
jae
outsl
mov
stos
jb
sbb
imul
mov
xchg
cmpsl
xchg
aaa
fists
in
lret
pop
or
xchg
mov
or
addr16
hlt
sbb
loopne
pop
push
leave
jno
xor
xor
dec
pusha
xor
add
aaa
lahf
push
mov
test
adc
or
pop
mov
in
add
cmpsl
jbe
enter
repnz
dec
mov
repz
cmp
sbb
and
pop
push
xchg
push
or
sarb
in
cmpsl
pop
repnz
xchg
lret
add
cmp
pusha
cld
repz
stos
sub
cmp
xor
or
push
leave
int
add
mov
nop
jl
iret
adc
mov
mov
popf
xor
pop
out
jo
es
test
loop
out
leave
sbb
xchg
cmp
xlat
out
lret
push
jb
pop
sbb
adc
jb
jp
imul
popf
inc
dec
and
loop
in
cmc
cs
cmp
push
mov
in
call
xchg
pop
sbbb
adc
test
int3
mov
and
add
stc
or
jl
outsl
hlt
fldl
inc
ds
pop
dec
rol
test
sar
ds
sbb
cli
jl
inc
mov
sub
mov
and
or
lahf
int3
adc
jmp
lock
mov
es
sbb
pop
xchg
js
ret
in
xchg
mov
mov
icebp
jmp
ffree
xchg
in
jno
pusha
pusha
mov
faddp
lret
sbb
push
mov
sahf
inc
xchg
loopne,pn
xchg
mov
fidivrl
lret
add
ret
jmp
mov
jp
adc
enter
addr16
mov
add
jge
faddl
test
in
mov
jne
lock
mov
inc
inc
xor
fcoms
out
inc
fnsave
add
repz
out
push
xchg
fcoml
sub
jnp
xchg
pop
enter
or
pop
cmp
mov
or
testb
push
iret
es
clc
cmp
pop
fnstenv
nop
in
loopne
sub
jo
into
lret
push
cmpsl
inc
fwait
addr16
jo
mov
mov
or
cmp
clc
fldl
fnstenv
add
add
mov
adc
into
rcrl
inc
lods
push
outsl
mov
or
pushf
test
decb
xor
int3
lcall
mov
fildll
xlat
rcrb
leave
dec
lret
lret
mov
cmp
fnstsw
pop
or
lret
pop
pop
mov
dec
ret
xlat
ds
add
cld
lcall
lret
test
mov
ja
int3
ret
daa
lret
dec
add
mov
fs
mov
sbb
js
loopne
arpl
popf
in
xor
lret
ljmp
enter
ja
jl
add
or
leave
push
push
lcall
push
or
test
xchg
int
adc
pusha
ret
divl
push
cmpsb
cmpsl
outsb
and
inc
loope
aad
and
test
out
mov
mov
enter
aam
pop
add
pop
clc
dec
pop
test
movsl
pop
push
dec
leave
ds
ret
adc
push
fsubr
adc
mov
inc
mov
or
push
mov
rcrb
xor
mov
cli
arpl
jp
or
les
dec
insl
push
ret
lret
imul
addr16
lods
out
or
adc
inc
orb
insl
mov
dec
insb
fildll
sub
leave
ret
pop
roll
fdivl
pop
dec
test
leave
decb
adc
push
push
xchg
add
mov
jp
mov
scas
repz
mov
pop
aam
inc
out
mov
testb
divb
sbb
ret
jle
cltd
xchg
out
lock
fmull
dec
mov
xor
repnz
repz
cmovb
adc
in
or
es
imulb
add
jb
paddsw
and
jnp
lds
or
int
xchg
pop
jle
int
jo
idivb
inc
test
mov
sbb
pop
fidivl
xchg
inc
cwtl
jl
and
sub
repz
pushf
dec
dec
dec
pop
push
mov
mov
fdivrl
call
fimull
or
rcl
lock
xchg
push
stc
dec
push
imul
or
push
jns
xor
pop
flds
mov
pop
fs
jnp
js
or
sub
vphaddubw
loopne
push
sti
cltd
ja
fadds
push
fmulp
jp
test
enter
pop
push
jb
icebp
push
sub
xor
ret
clc
cmpsl
inc
iret
mov
mov
inc
scas
ljmp
pop
adc
sub
and
rorl
rorb
xchg
sbb
mov
pop
arpl
aaa
xor
ret
and
lock
outsb
js
fisttpll
stos
cmp
xchg
mov
sub
in
lahf
lds
mov
adcb
lock
enter
fstpl
dec
mov
hlt
mov
notb
cmp
xor
mov
fcomps
mov
das
pop
fbld
fsts
jg
inc
addb
push
or
inc
inc
cmc
stc
push
mov
stc
mov
cmc
jo
jns
push
push
adc
inc
stc
imul
arpl
push
xor
mov
stc
push
mulb
jns
mov
arpl
push
cli
jns
pop
cmp
mov
arpl
outsl
cmp
roll
dec
mov
loopne
lret
mov
cwtl
dec
mov
sub
je
cli
mov
clc
mov
nop
adc
mov
dec
push
subl
mov
test
xlat
out
mov
push
add
dec
xor
and
mov
pop
pop
dec
ret
mov
stc
cmp
pop
mov
fwait
arpl
lcall
cmp
mov
push
adc
cld
sbb
sti
sbb
faddl
jmp
inc
or
leave
sbb
cmp
fs
in
dec
xorl
dec
cmpsl
pop
jno
jle
int3
out
mov
mov
lods
ret
sbb
mov
es
sbb
adc
pop
nop
xor
adc
mov
inc
pop
jns
int
iret
cmp
sbb
sarb
cmpsl
lods
push
sub
inc
into
cmp
pop
jmp
push
pop
dec
out
mov
stos
pushf
cli
mov
test
cmc
dec
shr
sbb
cmp
fcompl
rol
lcall
xlat
inc
push
sar
cmpsb
pop
dec
int
sahf
lret
pop
sub
mov
test
adc
add
adc
test
dec
pop
incl
loopne
fucom
or
test
fldz
pop
jge
stos
cmp
or
and
jmp
imul
pop
jo
out
push
xor
ret
inc
mov
xor
and
sbb
cmp
loopne
dec
adc
hlt
push
or
dec
fcoml
adc
mov
inc
loop
lds
cwtl
lods
push
test
out
or
mov
sbb
movsb
xchg
cld
and
dec
mov
sub
es
dec
cli
xchg
in
cld
and
ret
push
dec
pop
mov
ret
or
sub
shlb
push
shll
mov
push
test
vmovdqu
xrelease
mov
xchg
fistps
xchg
stc
in
inc
or
mov
enter
clc
push
sbb
ret
cld
mov
sub
int3
xor
stos
xor
adcl
xchg
add
mov
ja
push
popf
cmp
iret
fld
rorl
jecxz
fistl
lret
sbb
leave
mov
or
outsl
sbb
sbb
js
mov
pop
push
dec
gs
pop
scas
dec
fcmovnb
leave
pop
cmp
mov
inc
mov
int3
pop
mov
cmp
lods
loopne
incl
or
stos
mov
sub
in
xchg
jmp
in
leave
test
daa
aad
mov
xchg
mov
loopne
or
fistpll
xorl
loopne
mov
test
pusha
mov
push
xor
outsb
add
xchg
aam
les
mov
jle
xchg
cmp
mov
fsubr
js
sbb
in
mov
pop
add
fld
push
cmp
jne
pop
mov
in
dec
data16
lds
shlb
mov
nop
loope
push
pop
or
aam
jp
pop
fnstcw
cmc
int3
and
push
jg
movsl
punpckhbw
dec
add
xor
std
mov
and
test
addb
mov
add
clc
push
movsl
cmpsl
int
sub
pop
loop
jnp
lret
mov
sbb
adc
sti
test
pop
sbb
push
sub
sarl
sub
mov
mov
out
push
cmp
imul
nop
cmpsl
or
loopne
jae
das
push
int
out
iret
dec
fdivrl
mov
mov
dec
xor
mov
mov
out
int3
inc
fists
test
fsubp
lods
ret
out
jp
mov
ja
or
ja
stc
dec
popf
pop
mov
out
mov
imul
or
push
je
mov
dec
cli
cltd
arpl
popf
cmp
jno
push
js
daa
rcll
or
jo
fidivrs
cmp
xlat
dec
stc
rorl
inc
dec
dec
sahf
std
lret
sub
mov
popf
fistps
iret
mov
mov
and
pop
cltd
cmp
ljmp
lcall
cli
jb
mov
mov
push
pop
movsl
jno
addr16
data16
imul
push
mov
rcrb
mov
shll
aaa
pop
xchg
gs
or
into
mov
pop
push
mov
fistps
and
pop
ja
nop
cld
mov
fcos
int
stc
ljmp
div
or
sub
adc
ret
jae
pop
jae
pop
sub
aas
mov
jmp
sbb
fistpl
dec
add
mov
mov
and
xchg
enter
mov
std
mov
test
lods
cmp
cli
pop
nop
stc
jns
insb
sub
ficoms
sbb
mov
mov
mov
loope
mov
rcr
sub
repnz
sbb
loopne
imul
int
fbstp
sub
stc
aaa
out
fsubrl
jb
pop
enter
adc
int3
cltd
push
fldz
lcall
lret
jl
jnp
fisubl
jp
jg
adc
dec
lcall
ret
call
add
aaa
rcl
popa
rcr
iret
call
jmp
test
xchg
pop
dec
or
mov
xchg
test
dec
dec
in
push
or
mov
lret
lahf
jb
jb
inc
mov
pop
pop
mov
js
dec
enter
push
inc
enter
andb
push
dec
sub
test
int3
int3
push
gs
and
mov
or
push
jno
arpl
fldcw
ficoml
test
fmull
test
fmuls
push
daa
adc
push
leave
shll
js
add
and
mov
rcl
mov
sti
addl
add
jbe
dec
mov
dec
in
scas
mov
call
pop
mov
jb
and
lds
push
pop
cmpsl
adc
add
or
sar
cmp
mov
sbb
jbe
inc
push
inc
pop
lret
enter
and
rcr
lcall
outsb
bound
xlat
push
add
iret
pop
adc
push
sub
sub
inc
movsb
mov
inc
ficoms
mov
cmpsl
xchg
adc
jmp
cmpsb
out
test
test
xchg
in
pop
jecxz
sub
push
aas
fldenv
mov
mov
loop
fmuls
xor
movsb
mov
int3
jae
cmp
or
ror
ja
fwait
add
es
sbbl
and
push
sarl
add
jb
dec
xchg
xchg
sarb
inc
jae
lods
sub
enter
fists
nop
mov
sti
addl
fcmove
idiv
inc
mov
cmp
mov
aam
aas
fwait
jp
sbb
ljmp
jmp
dec
cmp
lret
pop
dec
mov
sar
ss
mov
das
add
mov
sub
xchg
rcll
rcl
in
adcb
dec
cmp
sub
pusha
leave
nop
push
inc
pop
mov
xchg
lds
aaa
les
and
rolb
scas
mov
pop
test
mov
insb
add
mov
push
orb
fnstsw
sbbb
fisttpll
loopne
data16
les
pop
popf
xlat
mov
mov
shrl
test
jo
sbb
fs
push
test
inc
ret
popa
cld
mov
mov
mov
push
and
lea
flds
scas
and
or
int
pop
stc
leave
and
fcomps
sub
dec
xlat
inc
or
jns
push
sahf
stc
mov
xor
push
sbb
jnp
sbbb
pop
inc
dec
fwait
mov
and
inc
mov
dec
sub
xor
sub
adc
arpl
stc
fldenv
enter
push
insl
lods
imul
mov
inc
sbb
mov
inc
pop
shlb
xchg
push
fdivrl
pop
stc
adc
sub
xchg
in
mov
mov
out
jl
jle
clc
sub
cmp
pop
scas
dec
or
rcpps
push
pop
les
mov
in
mov
adc
iret
gs
push
cmp
jp
fisubs
inc
loopne
inc
adc
in
xlat
xlat
mov
mov
lods
mov
push
stos
in
leave
loopne
sbbl
sbb
incb
test
push
cmp
or
fsubs
rorb
roll
mov
sti
pop
cmc
dec
xchg
pop
lds
sub
ret
add
lcall
mov
xchg
arpl
adc
and
cs
pushf
mov
mov
pop
cs
outsl
das
rolb
insb
aam
jns
cmp
cmp
mov
stc
sbb
test
fsubrs
push
mov
mov
fmul
cmpl
mov
push
xor
or
sub
jno
jecxz
mov
in
leave
pop
push
mov
pop
cld
shl
dec
pop
dec
ret
fisubrl
bnd
into
dec
fstps
cmp
lds
out
mov
test
enter
push
fidivs
add
mov
fdivrp
cmp
sub
inc
mov
stc
testb
jecxz
sub
icebp
ret
inc
rol
cwtl
fs
dec
cmp
shll
sbb
int
sti
inc
out
ret
mov
sub
call
scas
dec
fisttpl
mov
xor
lcall
aad
dec
in
enter
sbb
pop
or
bound
test
dec
sbbb
flds
aas
mov
push
adc
add
int
ret
mov
pop
stc
mov
or
and
imul
jecxz
out
lcall
int3
jb
mov
mov
and
movnti
in
rcr
cmp
pop
fimuls
lret
lds
sbb
or
pop
xchg
fildl
out
aaa
dec
popf
jge
push
sub
ret
test
jmp
stos
sub
scas
aam
push
jl
mov
fwait
stos
cli
popf
xchg
add
push
mov
mov
ja
sub
lods
hlt
inc
sbb
xor
mov
adc
dec
repnz
outsb
mov
loopne
aad
aas
mulb
cmp
pop
sti
xlat
jmp
jns
bnd
int3
lcall
cli
and
loope
sbb
repz
iret
mov
or
lret
les
mov
scas
push
xor
pop
push
dec
clc
cltd
or
shl
inc
lahf
in
fwait
enter
add
enter
pop
inc
dec
aad
push
ret
inc
aas
rcrb
xchg
and
jp
jb
mov
nop
pop
test
pushf
lods
inc
imul
inc
xchg
and
rorl
push
pushf
mov
mov
test
push
insb
push
cmp
pop
mov
sbb
cli
test
mov
mov
stos
sti
insb
push
aam
pushw
std
cmp
popf
inc
add
outsb
jmp
enter
into
sbbl
jl
dec
sub
pop
xchg
cmp
call
fdiv
cmp
into
addr16
inc
test
loopne
xor
xchg
add
lds
push
mov
out
out
pop
fwait
enter
cmpsl
test
lds
jl
nop
mov
pop
mov
xchg
sub
add
sarb
inc
xchg
stos
lahf
lret
cmpb
push
std
cmp
inc
xchg
and
sbb
cli
jl
cmp
cli
pop
loopne
mov
lds
stos
into
cmp
mov
jp
cmpsl
jne
pop
or
inc
idivb
add
or
jl
mov
inc
pop
popf
ret
lret
dec
mov
jae
aad
or
sub
or
rolb
jae
push
mov
fldl
enter
and
insl
rorl
pop
loop
mov
leave
cmp
jae
mov
lock
mov
dec
sbb
add
cwtl
mov
mov
pushf
sub
mov
xchg
stc
add
xchg
dec
jmp
xchg
inc
mov
xorl
cmp
jo
sbb
xchg
sbb
sbbl
stos
sbb
mov
add
dec
shl
sub
xor
lret
ja
lea
inc
or
mov
xchg
sub
and
and
addr16
insb
jnp
xchg
add
mov
jmp
out
std
pop
jge
sbb
xchg
mov
mov
inc
ror
js
cld
pop
adc
pushf
or
ss
rcrl
enter
pop
xchg
mov
push
out
out
jmp
mov
adcl
inc
and
sub
inc
fcoml
in
repz
mov
xchg
and
push
insb
fidivrs
mov
movl
push
adc
adc
cmp
inc
sar
lcall
fmull
jns
repnz
rcr
ret
ja
repz
jl
mov
sbb
and
dec
xor
les
movsb
loopne
sarl
jl
into
sub
stc
fnstenv
xchg
les
push
mov
sbb
jl
add
or
and
test
leave
jmp
adc
mov
fldt
xor
lret
sub
push
lods
xchg
inc
pop
jo
lahf
sahf
jle
sub
rcrb
mov
mov
add
sbb
and
stc
fstpt
jl
rorb
aam
xorb
cld
les
fsqrt
push
bound
or
insb
dec
xlat
rorb
pop
xchg
push
dec
aaa
fcompl
daa
sub
shlb
bound
sahf
mov
idivb
push
or
or
inc
xor
inc
or
add
test
test
lods
repz
shl
insl
ret
push
fwait
adc
aad
mov
or
xchg
xchg
adc
xor
push
cwtl
jp
clc
pop
mov
stc
dec
lret
enter
mov
sti
sub
pop
sbb
mov
pop
xor
mov
jmp
push
add
xchg
mov
lcall
test
jbe
push
dec
test
and
fists
movsl
push
cmp
push
push
loopne,pt
cmp
fcmovbe
mov
add
mov
pop
int3
jmp
add
jge
cmpl
add
into
rol
sub
push
mov
add
jns
enter
cli
int3
enter
mov
inc
or
and
push
je
stc
mov
movsl
jns
aad
or
or
loop
jge
jl
dec
cld
xchg
movsl
into
jmp
mov
fisttps
rorb
adc
inc
lods
mov
sbb
mov
ret
dec
frndint
mov
insb
push
pop
fwait
test
leave
push
fdivr
pop
cld
lret
lret
inc
jecxz
fcmovb
push
xlat
fsubs
movb
xorl
insb
mov
cli
stos
out
mov
sub
ret
sahf
loopne
mov
push
or
xchg
dec
push
inc
xlat
movsb
btr
lret
mov
fisubrs
loopne
shll
push
push
imul
xor
test
mov
sbb
loopne
lret
push
shlb
sbb
rcl
cltd
or
test
in
ljmp
lds
insb
unpckhps
xor
insb
xchg
loopne
ror
mov
fadd
push
rcl
xor
mov
dec
ret
test
cli
cmp
fmul
dec
cmpsl
ret
imul
repnz
lcall
fstps
fiaddl
mov
sarl
mov
ja
push
push
roll
sub
lods
pop
adc
pop
push
xor
outsl
inc
xor
inc
fsubs
mov
mov
cld
ficoms
dec
rcl
dec
and
add
bound
or
cmp
dec
cmp
daa
jg
mov
pop
test
mov
push
fs
mov
xor
fildl
jae
rcrb
mov
sbb
cmp
push
sbb
shll
out
xlat
inc
push
iret
push
jge
fimuls
jns
fbstp
pop
ss
sub
push
popf
mov
leave
inc
pop
push
inc
rol
lret
pusha
pop
mov
frstor
enter
cld
mov
push
push
xchg
add
pop
adc
jns
out
jo
push
pop
fs
hlt
push
cmpsb
add
sbb
lods
test
in
mov
lret
cmp
fcomps
jb
inc
andl
jl
bound
fsqrt
std
mov
cld
ljmp
dec
add
inc
jbe
dec
cli
lods
mov
mov
and
int
gs
xor
mov
ret
lret
adcl
mov
or
movsl
lods
int
addr16
mov
shrl
sbb
pop
mov
sbb
les
imul
shll
add
xor
rol
dec
out
dec
xchg
lcall
sbbl
bound
addr16
ret
int
lds
cmp
cld
je
add
cmc
icebp
push
call
addl
iret
repnz
sarb
mov
xchg
inc
cli
pop
sbb
mov
push
movsb
mov
and
test
mov
sub
or
aam
scas
pop
scas
lret
xlat
mov
addr16
outsl
lahf
pop
mov
popf
cmp
xor
or
pop
inc
rcrl
cmp
cmpsl
xor
popa
inc
xlat
lock
mov
cltd
push
sbb
scas
fildl
cmpsl
out
lar
fidivrl
sbb
push
mov
jmp
xor
fdivl
jmp
into
cld
pop
lods
xchg
push
sbb
mov
fwait
pop
aam
es
mov
dec
mov
pop
cltd
fldenv
insb
repz
fneni(8087
mov
push
and
push
into
fs
mov
dec
insb
cwtl
xlat
mov
addr16
fadds
xlat
lret
dec
int3
lret
adc
adc
push
in
data16
push
fwait
or
cli
add
xchg
dec
aad
nop
mov
adc
mov
sti
mov
dec
mov
lret
in
mov
xchg
inc
imul
test
mov
nop
mov
cmp
int3
or
or
repnz
xor
push
mov
rorl
cmp
xchg
loop
jp
pop
or
sbb
in
into
inc
and
pop
lds
inc
fldenv
repnz
inc
mov
int3
cli
mov
icebp
sbb
popf
mov
jns
sub
nop
xchg
dec
les
xorl
popa
lret
loopne
mov
push
sub
xor
push
jnp
fs
push
loopne
xchg
inc
out
jo
mov
push
in
inc
push
testl
or
xchg
add
xchg
or
or
fcoml
iret
ficoms
jno
leave
fmulp
dec
cld
sti
mov
inc
fcmovnb
push
xchg
enter
je
fstps
inc
in
stos
mov
xor
jbe
inc
ljmp
xorps
fadds
aad
cmp
clc
push
pushf
enter
mov
roll
or
jle
xorl
or
push
ss
push
xchg
mov
pop
jmp
sarl
pop
out
mov
cltd
enter
xchg
inc
sub
mov
jb
pop
test
mov
push
adcb
in
sbb
mov
lret
sbb
lods
jmp
add
mov
adc
in
push
stc
in
pop
pop
pop
cmp
dec
leave
sbb
jecxz
mov
das
jp
xor
enter
popf
jns
or
lods
dec
mov
loopne
stos
cwtl
in
leave
andl
add
dec
xchg
dec
xchg
sbb
orl
jb
dec
cs
mov
fsubrs
add
iret
inc
loopne
mov
fstl
stos
jg
cmp
dec
add
inc
testb
ja
and
arpl
repz
aas
les
mov
cmp
cmp
mov
cmpl
aaa
pop
sbb
mov
mov
lahf
cld
push
shll
stos
dec
mov
out
xchg
ret
enter
dec
xor
in
pop
dec
add
fnstsw
xchg
inc
sub
js
mov
mov
ret
inc
in
add
cwtl
xorl
int3
arpl
mov
pop
fidivrs
jge
dec
test
adc
adc
out
inc
outsb
fimull
scas
push
cmpsb
push
push
fs
aad
jecxz
mov
es
addl
sbb
loopne
mov
cmpsl
dec
xchg
inc
dec
into
mov
cld
lock
mov
dec
or
lds
push
repnz
sarl
mov
mov
cmp
adcb
aam
xchg
cs
les
jp
clc
mov
stc
scas
ret
and
inc
cld
clc
mov
sarb
pop
icebp
ret
pushf
loop,pt
addb
mov
inc
add
ret
and
arpl
mov
sbb
dec
or
cld
cmpsb
cmpsb
mov
std
js
insb
push
push
les
push
pop
es
ficoms
add
add
cwtl
inc
test
push
popf
xchg
mov
push
cmpsb
pushf
fmull
add
add
cmp
inc
repnz
sbb
mov
push
fcomps
sub
push
push
adc
xlat
inc
lods
pushf
inc
push
inc
mov
ret
rcrb
jl
cmp
pusha
xor
mov
jg
fists
push
sub
arpl
xchg
aas
lahf
adc
fwait
rclb
lds
xchg
mov
repnz
arpl
adc
lods
aam
sbb
cmp
lcall
mov
js
push
push
gs
ret
stc
notl
loopne
push
lahf
cli
jns
or
in
cwtl
jl
jle
cld
mov
lods
je
fbld
cltd
push
cltd
cmp
clc
sub
dec
movsl
adc
stos
fcompl
out
cmp
cmpsl
mov
leave
push
ret
popf
xchg
cmp
and
cmp
stc
mov
mov
dec
xor
add
inc
push
inc
aad
cmp
xchg
push
or
pop
pushf
stos
push
and
insl
nop
fildl
insl
in
push
push
cli
mov
pop
and
cmp
ret
popf
lret
mov
in
sub
insb
rcrl
aam
xchg
dec
adc
push
mov
add
popa
xchg
mov
dec
and
mov
pop
ret
in
sbb
sbb
xlat
mov
xchg
pop
add
cmp
popf
pop
adc
pop
push
adc
int
int3
int
bound
jb
dec
inc
mov
pusha
pop
loopne
or
xchg
in
cwtl
enter
into
adc
test
adc
pop
jns
xchg
sbb
pop
cmp
mov
sub
loope
bound
inc
jle
in
push
or
lock
lret
ret
push
adc
lods
fidivrs
cmc
out
pop
or
fs
xlat
jl
lcall
fcmovb
dec
enter
repnz
adc
cld
xor
xchg
xor
mov
pop
stc
mov
out
aaa
dec
es
addr16
cmpsb
mov
iret
lds
cmpsb
xchg
shll
pop
sarb
fbstp
mov
sahf
shl
out
int
mov
mov
lea
jns
push
lds
mov
mov
sbb
push
pop
xchg
mov
mov
mov
xor
mov
sub
int3
stos
mov
mov
imul
sbb
inc
je
nop
test
movsl
stos
lods
lahf
leave
add
mov
repnz
cwtl
stos
and
pop
xchg
fcoms
call
bound
les
loopne
out
jp
add
enter
xchg
arpl
ffree
insb
push
cmp
and
mov
push
and
pop
mov
ret
cmp
xchg
out
loope
sbb
push
adc
sub
cli
fimuls
test
xchg
push
addr16
sub
mov
push
mov
pop
mov
cmp
or
leave
out
lret
les
xchg
dec
lcall
or
mov
mov
push
cltd
cmc
cmpsb
loop
push
or
lret
out
pop
insb
scas
cmp
jb
call
movsl
jns
stos
jge
mov
jle
mov
xchg
popf
in
sbb
add
push
cmp
leave
xchg
sti
lea
xlat
lea
int3
and
mov
sti
hlt
jbe
inc
sti
jl
cli
lock
xor
mov
mov
fdivrs
in
aam
mov
adc
movl
cwtl
decb
push
outsl
stc
cmpsl
sbb
sub
jp
mov
jns
stos
call
push
mov
lds
mov
lret
dec
mov
sub
dec
frstor
adc
inc
cld
mov
cld
cmp
repnz
add
mov
add
scas
shl
lret
sbb
cmpsb
enter
fwait
mov
cltd
xchg
cmpsl
cmp
jb
cmpb
or
ret
mov
sahf
xchg
jp
popf
cld
jp
test
pop
xchg
cld
mov
mov
mov
fisttps
xchg
dec
mov
jns
negl
pop
mov
mov
lcall
mov
lds
gs
in
cmpl
andb
push
mov
dec
mov
sbb
mov
mov
gs
incl
lds
or
pop
mov
test
cmp
jne
divb
dec
mov
inc
push
fidivrs
mov
pop
int3
shlb
hlt
adc
cmp
test
mov
insb
lea
sub
shll
pop
cmp
into
je
clc
push
hlt
cmpsb
push
mov
or
xor
jb
lods
inc
pop
xchg
shrl
adc
rcll
or
lcall
pop
in
aas
add
pop
and
les
addb
inc
mov
or
addb
imul
popa
jbe
push
mov
or
aam
cmc
inc
dec
push
push
ret
shl
ror
and
jns
xchg
nop
ds
subb
sbb
xor
cli
pusha
or
push
cmp
mov
shlb
xchg
mov
inc
cmp
ja
inc
loopne
fisttpl
repnz
jle
dec
inc
insb
push
int3
imul
mov
iret
inc
mov
pop
outsb
xor
out
mov
jl
cltd
bnd
jns
cmp
push
mov
repnz
enter
push
xchg
je
jle
jo
sub
lods
shrl
xor
dec
mov
fldt
sbb
cmp
rorb
lods
test
enter
cli
ficompl
lret
xor
repnz
pop
sub
into
cltd
mov
mov
repnz
mov
cmp
jb
xor
and
call
cmp
sbb
inc
add
push
std
shlb
mov
sbb
enter
or
cmp
ret
cmpsl
mov
clc
loopne
je
cs
and
mov
popf
jb
cmp
std
lret
stos
mov
shl
mov
leave
inc
fadd
enter
dec
jbe
xor
pop
mov
pusha
or
and
cmp
pusha
inc
push
out
sbb
xchg
pop
mov
sub
test
loope
sub
dec
cmp
and
sti
jp
cli
lods
adc
lds
and
enter
enter
leave
lret
push
das
sub
pop
pop
sahf
push
repnz
mov
in
test
jo
test
sbb
das
mov
xor
cli
pop
sub
in
push
fcomps
dec
mov
cmpsb
shrl
das
syscall
xlat
subb
call
cmp
cmpsl
js
pop
out
int3
stos
fnstsw
popf
dec
enter
push
xor
jle
stos
addb
sti
les
gs
lcall
cld
aad
pop
mov
cltd
lret
and
inc
adc
or
xlat
stos
cmp
mov
scas
lods
adc
scas
sub
out
jl
aam
mov
jp
xchg
cmpsl
stos
jo
mov
ret
mov
sbb
inc
and
cmpsl
les
mov
cltd
inc
fcmove
lret
add
lcall
dec
mov
mov
aad
daa
test
mov
cmp
mov
cmp
mov
mov
cld
jno
lret
lret
leave
mov
dec
lret
mov
sub
cli
mov
rorb
movsb
inc
insl
cwtl
cmp
sbb
loopne
xorl
int
xlat
jnp
mov
test
jbe
push
xchg
mov
movl
stos
movsb
lret
mov
sub
loop
shl
adc
push
ret
cmpsb
movsb
aam
jns
ficompl
popa
inc
test
shrl
mov
dec
add
in
push
pop
fidivrs
test
cmpsb
sbb
cs
lds
xchg
inc
mov
cmp
stc
xchg
inc
mov
cmp
movsl
add
xchg
mov
mov
pop
sub
scas
fcompl
enter
ficoms
dec
jb,pt
jns
in
in
repnz
mov
jle
popa
xchg
add
inc
xchg
inc
insb
shl
cmp
sarb
std
xor
pop
cmp
aaa
jle
mov
mov
fidivrs
in
adc
flds
sbb
mov
inc
fmull
mov
mov
push
jle
inc
bextr
xor
mov
cmp
or
mov
shll
outsl
xchg
jl
or
cmpl
sbb
je
repz
lock
int3
mov
mov
and
dec
lods
loop
ds
cld
shlb
dec
jl
bound
dec
cltd
sti
sbb
mov
lods
fildl
push
je
inc
cs
flds
stc
mov
inc
pusha
mov
cmc
int3
enter
fisubrl
pushf
push
xlat
rorl
loopne
mov
mov
jnp
dec
popf
test
pop
sub
jmp
jg
mov
jo
ror
fstpt
adc
test
mov
mov
xor
or
jle
add
shlb
rsqrtps
pop
push
cmpsb
xchg
out
xchg
dec
xlat
mov
daa
xchg
jl
pop
int
mov
xor
in
pop
adc
mov
pop
movl
insb
mov
pushf
sbb
lahf
lcall
lret
inc
or
cmp
mov
cli
pop
mov
and
jae
xorl
xlat
inc
addl
xlat
pop
fmull
or
popf
inc
daa
mov
push
mov
xbegin
arpl
pop
jns
test
jecxz
fnstsw
fcom
mov
adc
xchg
mov
pop
dec
mov
mov
arpl
leave
jb
aas
mov
mov
push
out
mov
adc
xchg
insl
jbe
outsb
mov
xchg
ficomps
ret
ficompl
repnz
dec
movsl
xor
sbbl
fildl
sbb
hlt
and
test
das
mov
pop
in
roll
dec
enter
pop
out
ret
push
rclb
out
ds
iret
adc
push
lcall
out
cs
mov
jns
mov
mov
inc
push
insl
mov
cs
ret
movb
sub
xor
stc
inc
mov
lds
jg
jns
inc
in
xor
cmpsl
xchg
pop
fcomps
mov
mov
test
arpl
and
test
fsubrl
mov
pop
mov
scas
fisttpl
push
mov
pop
or
ret
sbb
jg
add
je
test
dec
imul
push
jns
inc
fwait
mov
repnz
xchg
inc
inc
xchg
push
in
lret
xor
lret
cmp
mov
pop
dec
mov
and
lret
lcall
mov
push
sub
sbb
push
mov
or
test
sub
sarl
cmpsb
test
push
rcrl
rcr
mov
inc
fmul
dec
movb
mov
fdivl
mov
loopne
cwtl
enter
xor
mov
cli
pop
and
cli
push
ret
rcrb
call
push
sbb
mov
cmpsl
ljmp
lahf
jb
pop
add
scas
pop
jae
filds
mov
jp
push
lcall
sbb
das
mov
popa
mov
mov
push
xchg
repnz
push
and
dec
push
popf
pop
pop
scas
adc
dec
dec
je
fistpl
cmp
mov
bnd
sub
inc
push
push
decl
sub
push
push
mov
iret
xchg
mov
jno
or
pop
stos
lods
inc
jno
aaa
daa
inc
adc
mov
ret
hlt
jmp
mov
dec
sub
fidivs
dec
test
mov
cmpb
mov
jp
insl
lret
arpl
addr16
stos
das
pop
les
arpl
mov
jp
mov
ret
mov
pushf
ds
rcrb
mov
sbb
mov
mov
mov
int3
mov
fadds
sbb
mov
les
aas
cmp
rorl
scas
sub
fwait
cmp
dec
xchg
aad
add
pop
fxch
sahf
scas
cmp
test
addb
pushf
jp
stc
loopne
inc
iret
movl
outsb
xchg
mov
inc
jl
mov
mov
sbb
cli
popl
pop
stc
jbe
fimuls
add
enter
insb
jle
adc
pop
fmul
clc
repnz
push
cld
and
subl
lret
jp
or
out
js
mov
dec
test
popf
xchg
mov
fs
data16
sub
mov
addr16
sti
push
sub
les
je
aam
inc
dec
inc
pop
cmc
mov
adc
imul
jp
int
loopne
cs
cwtl
cmpsl
or
xchg
cld
in
insb
hlt
sub
jmp
rep
je
ljmp
sti
movsb
mov
xor
pushf
je
mov
stc
mov
add
xor
adc
fldt
lods
je
push
xstore-rng
cmpsl
ret
dec
mov
dec
sbb
in
mov
add
mov
icebp
xor
les
repnz
cmp
mov
lret
popf
or
nop
pop
xchg
fimuls
aas
cwtl
pop
sbb
mov
ret
sub
push
sub
xchg
sbb
lods
stos
pop
cli
sbbl
mov
xchg
inc
fildl
push
or
sub
pop
test
shr
in
jp
loopne
sbb
jmp
pop
faddp
sbb
fbstp
mov
out
mov
xor
jb
aam
or
out
test
sbb
jl
mov
xchg
dec
lret
aad
pop
dec
pop
sbb
repnz
mov
cmp
mov
fnstcw
stos
xchg
mov
scas
inc
mov
stc
addr16
cmc
test
fchs
stc
aad
icebp
sub
push
lret
push
mov
mov
lcall
xchg
xor
or
add
lret
xlat
stc
adc
mov
sbb
xchg
js
mov
jbe
enter
int
mov
idivl
push
jns
jp
popf
jge
cli
adc
sub
add
sti
js
jl
outsl
shl
insb
pop
int
test
mov
xchg
lds
pop
enter
repz
bnd
adc
pop
sub
call
ror
push
jl
jmp
les
call
sbbb
sbb
xor
push
add
xchg
cmp
fcmovne
inc
loopne
push
std
sbb
lds
and
mov
dec
xlat
ljmp
lret
jbe
movsb
cli
xchg
inc
lds
out
push
int3
push
insb
or
ja
test
xor
sub
scas
clc
sub
pushf
mov
jbe
pop
movsl
mov
cmpl
jl
mov
push
and
popa
add
call
xchg
enter
mov
sub
jns
cmp
inc
pop
cwtl
mov
mov
mov
popf
mov
cltd
mov
fiaddl
xorb
imul
mov
sub
data16
mov
push
addl
add
xchg
dec
insb
jg
sbb
ljmp
jne
push
jmp
addr16
mov
add
loop
or
scas
xchg
sub
add
fistl
cmp
hlt
enter
cltd
repz
push
xchg
in
ret
mov
mov
pop
clc
hlt
insb
aas
cmp
lret
mov
or
repnz
xchg
int3
add
jp
aad
mov
idivl
inc
inc
fildl
xchg
lcall
fs
or
cmp
aas
movl
sbbl
mov
insb
ror
cmp
pusha
aad
pop
mov
jecxz
stos
popf
stc
cmp
fs
mov
sbb
aad
jp
pushf
dec
leave
popf
cmp
jb
test
sbb
and
ret
loopne
sub
arpl
xchg
inc
add
test
push
push
roll
cld
lcall
sbb
cli
xor
jmp
ret
iret
push
or
push
inc
sub
imul
lods
out
sbb
mov
cmp
push
lods
xchg
sarl
movsb
fdivrl
dec
dec
mov
repnz
add
imul
rcl
test
das
mov
add
popa
dec
inc
add
or
cmp
push
mov
sbb
scas
cmp
iret
addr16
ret
xlat
mov
leave
push
inc
sbb
sub
adc
dec
mov
movsl
mov
and
lea
dec
or
into
mov
pushf
ja
mov
sti
push
cs
mov
imul
mov
add
adc
dec
jns
dec
adc
lods
adc
add
mov
push
sti
rol
push
rolb
repz
xlat
lcall
gs
aam
js
mov
loope
mulb
xchg
mov
mov
sbb
jl
mov
mov
mov
dec
rcrl
mov
mov
int3
mov
pop
inc
mov
loopne
arpl
repnz
and
roll
push
xorb
lret
fisttps
sbb
fwait
call
dec
push
roll
and
mov
add
inc
das
loopne
mov
std
push
call
push
inc
cmc
cwtl
fisubrl
lock
clc
push
push
xlat
or
cmpsb
add
popf
pop
movsl
inc
mov
rorb
jl
dec
or
sti
stc
sbb
dec
or
adc
add
mov
xchg
subb
sarl
mov
push
jmp
push
js
pop
sbb
lret
pop
fwait
xlat
aam
shl
js
push
dec
jle
loopne
iret
dec
mov
sub
adc
xlat
les
mov
cmp
lret
jge
lds
popf
or
jae
mov
testl
push
dec
dec
push
dec
dec
cltd
xlat
sub
push
movsl
push
fwait
mov
popf
inc
xor
into
mov
adc
push
dec
stc
imul
cmpsb
pushf
bnd
xchg
les
cmp
mov
mov
lods
dec
or
nop
dec
mov
stc
jno
xor
mov
pop
mov
test
loop
sub
mov
sti
xor
inc
sbb
and
sbb
insb
repnz
mov
jns
mov
orb
xor
mov
pop
pop
popw
cmp
insb
mov
les
test
sub
add
add
nop
int3
xor
mov
cmpsl
dec
fists
shll
push
pop
dec
cmp
cwtl
jecxz
repnz
or
pop
inc
test
adc
jae
hlt
fptan
or
xlat
inc
xchg
push
pop
lcall
insl
insl
fwait
xor
dec
push
inc
popf
sub
xchg
pminsw
jne
mov
jbe
push
cmpsl
xchg
scas
inc
dec
ljmp
dec
pusha
dec
cli
pop
xchg
mov
mov
fistl
ret
jo
test
xlat
jbe
mov
lcall
push
pop
or
pop
lods
mov
xchg
pop
dec
and
push
jp
mov
push
add
push
scas
sti
sbb
jp
cltd
dec
rorl
pop
add
int
lret
inc
ret
inc
xor
cmp
je
jl
cld
jbe
mov
pop
pop
pop
lea
lods
stos
in
mov
mov
mov
mov
sub
sbb
fidivl
test
xchg
mov
stc
push
xchg
mov
or
sti
aad
and
js
mov
jl
mov
cmp
jo
xorb
mov
jecxz
push
xor
aad
or
repnz
xchg
mov
aaa
mov
pushf
lret
clc
mov
mov
dec
jge
enter
mov
loopne
or
mov
test
xor
dec
push
inc
enter
fadd
cmp
repnz
cltd
rclb
jmp
adc
xorb
jl
aam
in
repnz
jl
into
popf
mov
fs
pop
cmp
in
cmp
mov
enter
ds
mov
cld
scas
mov
test
sub
jb
insl
pop
clc
jp
mov
push
iret
aad
jecxz
es
out
push
cmpb
std
lret
xchg
mov
clc
pop
out
rolb
inc
ljmp
and
dec
fisubrl
fstpl
fsubp
pop
mov
mov
lcall
xchg
push
cltd
scas
pop
adc
pop
lea
push
inc
or
sar
pop
cmp
aad
or
cld
out
orb
push
mov
xchg
lods
sub
sbb
xchg
push
sti
push
add
xchg
mov
mov
xlat
sar
icebp
sbb
add
or
scas
orb
jmp
pop
sti
or
xchg
lret
pop
jecxz
add
loope
mov
jp
dec
inc
add
in
jno
enter
adc
pop
loopne
popf
addr16
out
nop
add
mov
nop
rorb
mov
mov
mov
or
data16
and
mov
lea
int
mov
movsl
test
test
sbb
ret
push
mov
xor
sti
push
cli
sub
dec
ret
or
loopne
push
cmpsl
mov
mov
mov
insb
fmull
ret
push
mov
push
push
or
jg
sbb
fsts
xchg
adc
mov
jecxz
adc
inc
aam
lcall
xchg
ret
ret
in
pop
arpl
pusha
lods
daa
xchg
xor
cli
idivl
es
fbld
dec
dec
adc
leave
loopne
add
addb
add
leave
fstl
mov
dec
fwait
or
pop
lret
push
fs
stos
data16
xor
sti
push
jl
push
fwait
orl
push
push
jge
add
sub
stos
orl
xchg
jge
iret
cmpl
adc
ret
stos
shrl
push
sub
aas
mov
pop
clc
lods
mov
jbe
jle
aam
and
test
jmp
push
cmp
test
aam
pusha
cli
push
adc
faddl
mov
cmp
xor
repnz
scas
jecxz
xor
push
andl
in
nop
arpl
rorb
mov
sti
pop
mov
cmpsb
in
fwait
mov
fadd
leave
mov
pushf
xchg
icebp
jb
addr16
ffree
xchg
xchg
pop
lret
xchg
sub
stos
add
mov
pop
shrl
mov
cli
testl
sub
lods
stos
mov
out
stos
pop
cmpsb
mov
fadd
fmulp
loopne
rclb
sub
dec
adcb
mov
mov
xlat
sub
pop
mov
mov
sub
roll
jmp
cmpsl
stc
xlat
sub
stc
xlat
sub
test
data16
pop
cli
push
int3
dec
or
jle
xchg
loop
xchg
xchg
push
jmp
cmpsl
cmp
mov
fisttps
int
lret
divl
add
leave
test
xlat
data16
adc
push
rolb
addr16
jmp
enter
xor
pop
mov
adc
inc
scas
mul
dec
ljmp
out
aam
out
xchg
lods
insb
mov
loopne
repnz
add
in
adc
js
dec
jg
push
mov
addl
push
rcrb
sbb
sti
add
push
pop
wrmsr
out
mov
mov
lea
ds
push
push
xchg
mov
mov
mov
jae
push
cld
cmp
mov
and
mov
sbb
imul
inc
xchg
mov
lcall
inc
dec
mov
pop
push
test
xor
or
outsl
ret
movsb
int3
insb
mov
and
test
pop
sbb
cmpb
dec
xchg
cmp
add
mov
ffree
bound
cmp
mov
sbb
push
cmp
test
mov
jmp
rcrl
test
cmc
jg
lods
bound
dec
jl
popf
pop
dec
or
or
fwait
inc
add
inc
push
inc
aaa
adc
jo
in
push
mov
dec
hlt
enter
leave
mov
in
add
loope
add
push
mov
int3
jge
mov
bnd
cmpl
es
ljmp
int
popf
adc
test
mov
enter
xor
nop
push
push
ja
out
jmp
add
and
mov
iret
sbb
stc
inc
cmc
les
shlb
filds
dec
lret
add
adc
lret
cli
test
jecxz
add
sbb
or
repnz
shlb
out
jbe
xchg
sub
push
cli
push
mov
pop
loop
xchg
ret
mov
imul
jnp
mov
mov
mov
test
cli
nop
insl
inc
inc
lods
push
inc
fsqrt
fnstenv
inc
push
cmp
mov
cmpsb
dec
add
dec
rol
mov
cmp
mov
rcl
pop
aad
sbb
cwtl
add
lcall
mov
cmpl
sbb
sub
xchg
cmp
mov
outsl
xlat
fcompl
test
pop
cmovbe
sbb
ss
jbe
aaa
stc
or
into
sbb
jl
std
sti
in
movsb
ss
sbb
cmp
dec
cli
adcb
inc
jle
cld
lock
adc
push
cmp
mov
mov
lds
jle
dec
mov
and
fwait
jg
inc
movb
push
inc
ret
pop
add
insb
xchg
notb
lods
fdivr
jns
in
imul
gs
jns
out
sbb
sti
push
out
inc
and
sarb
mov
nop
dec
pop
fwait
je
aas
adc
push
inc
fsubr
loop
cmp
xchg
xor
xor
mov
jmp
jb
cmp
rcrl
enter
roll
jp
xor
mov
pop
idivb
push
adc
loope
mov
or
add
mov
xchg
jecxz
pop
inc
adc
data16
stc
push
jg
arpl
pop
sbb
cmp
push
sbb
or
roll
rcrl
outsl
arpl
imul
mov
aad
sbb
aas
cld
repz
push
rol
loope
fwait
push
mov
push
ret
int3
push
push
cltd
jnp
daa
cmp
or
adc
pop
mov
mov
les
mov
mov
bound
gs
mov
and
xchg
xor
and
push
stos
popa
cmp
add
sub
adc
push
into
gs
pop
mov
rol
test
imul
dec
mov
jecxz
or
dec
fwait
lock
mov
stc
lret
jb
pop
stos
or
fiaddl
fdivrs
dec
mov
push
inc
mov
mov
push
push
popf
mov
mov
les
push
dec
push
scas
cli
mov
mov
aaa
xchg
fsubl
mov
mov
sbb
or
int
mov
iret
repnz
xchg
pmulhuw
xchg
mov
cmpsl
pop
out
push
addb
mov
aam
or
push
xchg
sub
jp
in
sub
pop
mov
cmp
arpl
mov
in
xchg
andl
fsubr
shl
and
cmp
sub
cld
adc
xchg
or
jbe
push
shrb
dec
sub
mov
xchg
inc
dec
jb
loop
cli
sbb
in
mov
pop
cli
add
mov
jb
in
fcoml
lea
insl
mov
mov
mov
pop
lahf
dec
jns
pop
enter
movb
inc
nop
or
sub
lea
fistl
mov
lret
xchg
fwait
popf
insb
push
iret
loopne
jmp
xlat
push
pop
jns
into
xchg
or
add
into
jo
jns
add
ret
mov
or
aam
rorl
mov
xchg
cmp
cmp
imul
mov
and
shlb
xor
xlat
cmp
push
sbb
aad
jmp
cmpsl
cld
or
or
dec
cmpsl
push
xchg
mov
shlb
cli
dec
fcompl
les
pop
mov
mov
pop
inc
cmp
lcall
or
jb
in
cmc
enter
insl
inc
mov
push
jns
pop
mov
or
sbb
dec
and
jl
xchg
sbb
rorl
insb
stos
add
fidivrl
loopne
cli
mov
les
pop
cmp
and
mov
std
xchg
adc
popa
push
mov
orb
data16
xor
cmpb
adc
or
loopne
sbb
mov
jmp
jle
das
ret
xor
inc
sbb
fbld
xorl
xchg
mov
in
xchg
inc
sub
sbb
stc
xchg
movsb
xchg
pop
cmp
test
clc
fmulp
pop
dec
movsl
dec
cmpsl
aas
pop
aam
aas
mov
push
mov
imul
mov
xchg
mov
pop
jle
cli
adc
scas
stos
jmp
add
enter
adc
sbb
cli
mov
lcall
iret
cmp
enter
imul
mov
xchg
push
testl
test
bsr
cmp
inc
jae
push
inc
aas
inc
movsl
push
pop
repnz
mov
popl
je
jne
fildll
lcall
pop
gs
sbb
push
cmp
stc
lcall
add
movb
dec
iret
mov
sbb
adc
js
push
frndint
jle
push
test
sarb
sbb
jp
test
sbb
repnz
push
mov
negl
add
movsb
bound
mov
fsub
mov
ret
dec
fistpl
stc
mov
into
fnstsw
mov
xchg
sbb
sub
inc
movsb
cli
lds
push
mov
fs
sbb
popa
xchg
movl
adc
divb
cmp
int
sbb
or
stos
mov
les
lcall
imul
mov
cmp
ds
mov
cmp
mov
cltd
dec
jecxz
lods
fistl
je
push
mov
push
dec
pop
enter
shll
popf
mov
xchg
lea
in
leave
popfw
pop
std
in
sbb
or
fldt
cmp
mov
jnp
jge
mov
or
in
sbb
cmp
push
cmp
add
sbb
inc
or
fdivrp
je
in
push
into
mov
and
filds
nop
lds
sar
inc
sub
jle
push
ret
cld
popf
push
es
sub
or
sub
inc
cld
inc
jnp
dec
sub
gs
mov
cmpsl
jmp
lret
jp
push
jns
jb
fcoml
mov
lods
test
loopne
pop
inc
iret
dec
mov
mov
sarl
adc
inc
push
sub
push
test
ds
pop
jmp
fdivs
add
and
repnz
xchg
inc
fwait
aas
inc
xor
insb
mov
mov
push
out
push
xchg
das
mov
inc
mov
pushf
cld
lret
repnz
mov
shrl
xlat
push
out
mov
dec
and
imul
loopne
cs
or
ret
pop
sbb
mov
stc
xlat
cmpsl
leave
lret
in
rcrl
sub
dec
les
xchg
mov
mov
andl
sbb
nop
in
xlat
in
popa
mov
aaa
lds
aaa
test
xchg
in
cmp
pop
or
sti
sub
or
push
sub
stc
lret
mov
adc
sbb
lcall
fdiv
je
or
dec
shl
jl
das
sbb
mov
pop
mov
xchg
push
aad
cmp
push
cmp
xor
xchg
nop
xor
xor
dec
insb
xchg
cmp
add
sti
cmp
jnp
fdivrl
pop
push
fs
lds
dec
sbb
shlb
xchg
dec
push
cmp
pop
in
lods
mov
adc
stc
out
push
mov
pop
mov
cmpsl
xor
movlps
test
mov
lock
sbb
mov
mov
fs
inc
jbe
dec
inc
ret
loop
or
add
mov
add
test
nop
lods
ret
cmp
jbe
add
test
cmpsb
dec
pop
mov
push
popf
mov
adc
or
ret
fnstcw
insl
sub
pop
int3
sbb
pop
mov
test
inc
adc
enter
les
into
lcall
in
inc
je
and
sub
loopne
inc
cld
cmpsb
mov
mov
rcr
repnz
dec
jl
loopne
dec
ret
shrl
hlt
push
mov
repnz
inc
push
jmp
lret
dec
lret
and
fmuls
in
push
xchg
pusha
or
pop
sbb
jb
repnz
mov
push
in
push
xor
and
dec
push
into
jnp
aam
xchg
pushf
jnp
lcall
jmp
call
loopne
dec
push
push
or
xor
test
cmp
push
sub
sbb
push
sahf
cld
sub
lcall
fadd
loope
iret
imul
fcoml
cmp
lret
xlat
movsl
push
xchg
inc
inc
enter
inc
dec
stos
fcoml
les
or
sbb
fdivr
cmp
mov
stos
pop
mov
shr
insl
fildll
in
call
sbbb
mov
pop
loopne
sarb
test
mov
cmp
scas
lods
iret
push
das
nop
int
mov
sub
inc
mov
leave
mov
and
fists
ljmp
rcr
xor
jge
in
aam
sbbb
xchg
dec
stc
lret
pop
shr
sbb
inc
push
mov
fmull
inc
sti
out
cmpsl
repnz
sarl
jb
xor
xor
cwtl
xor
xorl
mov
sti
sub
addr16
inc
inc
push
sub
lods
cmp
inc
mov
mov
mov
fwait
inc
push
sub
out
test
cmp
xor
pop
adc
movsl
sbb
and
int3
sar
sbb
leave
lret
add
les
fstps
mov
push
xor
jbe
stc
sbb
stos
add
pop
cmp
push
cld
cmpsl
cmp
mov
add
fmuls
inc
stc
cli
addr16
pushf
shrb
pop
cmp
leave
ds
fdivrl
lods
mov
jp
xchg
pop
test
pushf
sti
jae
mov
xchg
push
cltd
cmpsl
pop
xor
mov
repnz
in
leave
or
iret
pusha
mov
inc
mov
mov
inc
mov
inc
adc
xor
orl
push
mov
adc
stc
jmp
xchg
cmp
in
outsb
lret
movsl
sub
bound
dec
addr16
or
test
adc
sbb
mov
sub
jmp
movsb
jmp
lds
mov
aad
mov
inc
stc
pushf
cmp
and
lret
rcrb
mov
int3
sbb
push
jns
scas
lods
dec
dec
into
mov
mov
xor
addr16
jns
repnz
or
adc
push
into
dec
push
add
test
int
mov
mov
loopne
cli
xchg
adc
mov
lds
xchg
cmp
sub
jns
pop
adc
enter
cmp
fistps
cltd
clc
stc
popf
negl
cmp
roll
gs
rcr
push
add
add
push
cmp
scas
push
xchg
xor
sbb
mov
cli
fsubl
lea
sbb
fwait
mov
popl
sbb
fsubl
sub
pushf
jbe
dec
jne
inc
xchg
stc
xchg
cmc
inc
and
mov
adc
fcmove
sub
ss
loop
cmp
sub
in
pop
add
es
dec
enter
test
popf
cmp
cli
jmp
mov
lcall
fcmovne
inc
popf
cmp
pop
xlat
mov
lcall
adc
inc
sti
xchg
mov
fsubs
cli
repnz
aaa
xchg
nop
dec
repnz
dec
mov
negl
test
mov
sti
xchg
clc
sbb
mov
leave
lods
int3
or
push
shlb
cmp
ret
sarl
add
pop
shrb
sbb
in
or
dec
popf
pushf
push
repnz
leave
call
mov
mov
fnstsw
outsl
into
lcall
adc
movsl
xchg
lds
test
mov
js
inc
sbb
or
lcall
xor
mov
pop
jp
int3
or
push
dec
sbbb
hlt
mov
retw
aad
pop
push
jae
sbb
cltd
and
mov
cmp
mov
out
jb
lret
mov
cli
fs
push
sbb
pop
mov
push
movsb
clc
bound
cli
rorl
add
pop
mov
mov
inc
inc
xor
int3
jl
in
cmp
int3
cli
lret
lret
fsts
inc
adc
lds
add
scas
iret
push
fsub
js
xchg
out
movsb
jns
sar
out
mov
mov
outsl
insb
adc
xchg
cli
add
dec
xchg
xlat
jo
call
shll
rcl
enter
cltd
aam
ret
jecxz
repnz
enter
pop
inc
xor
into
inc
xchg
sub
jp
mov
add
out
inc
aaa
inc
imulw
jl
cmp
xor
cmp
out
push
dec
mov
push
je
pop
push
in
mov
push
popf
enter
into
cltd
push
jge
insb
pop
inc
inc
dec
flds
lret
push
mov
aam
add
out
xchg
push
addr16
roll
loope
test
mov
imul
inc
sbb
fldl
rcr
mov
jb
imul
cmpsl
xchg
pop
lcall
and
xlat
push
mov
pop
cmpsb
roll
arpl
stos
inc
mov
stc
mov
ret
fnstcw
fmull
inc
pop
scas
test
pop
or
cmpsl
inc
repnz
aam
pop
sub
or
cli
sbb
push
enter
cld
or
enter
loopne
dec
push
ret
negl
out
push
mov
inc
fisttpl
inc
xchg
into
cli
inc
push
jp
leave
push
sub
mov
jp
mov
lods
pop
nop
mov
insl
fistpl
pop
in
pop
push
adc
pusha
jle
push
aas
mov
xchg
push
lods
enter
inc
addl
jmp
mull
jne
loopne
rorb
in
popf
lds
dec
lock
pop
aaa
pop
mov
push
add
popf
push
rcl
les
pop
lret
fs
roll
fcompl
sti
dec
push
sbb
push
mov
jo
push
shll
or
dec
or
aaa
rcrl
cmpsl
mov
inc
jmp
mov
add
push
inc
es
jbe
mov
mov
add
add
jp
test
mov
lods
sub
mov
aaa
loopne
sahf
lcall
inc
mov
mov
mov
cmpsl
in
adc
orb
cmpb
push
and
xor
push
mov
aas
or
pop
lds
xchg
dec
mov
adc
movsl
lds
clc
pop
andb
or
adc
jns
gs
jp
lret
xchg
stos
into
pop
andb
das
stc
inc
sbb
stc
int
cmp
jl
cmpsb
repnz
test
and
sub
test
fmull
xchg
mov
inc
inc
mov
xchg
roll
test
daa
bnd
sbb
adc
or
mov
nop
bound
push
stc
jge
push
xchg
or
sahf
cmp
and
lods
sub
cmp
dec
cmp
in
aaa
dec
stos
mov
mov
clc
jno
sbb
mov
sti
out
or
mov
icebp
jnp
pop
sbb
jmp
mov
shl
adc
mov
adc
adc
or
jb
lock
jns
sub
ret
cmp
dec
cwtl
sub
jecxz
add
lock
popf
mov
adc
dec
fidivrs
std
cmp
mov
push
add
push
jecxz
test
stc
loopne
dec
loopne
sbb
mov
repz
jne
xchg
fstpt
shrb
mov
xchg
bnd
repz
leave
mov
iret
cs
mov
rolb
push
jae
jmp
cmp
mov
in
mov
mov
popf
iret
sbb
and
out
cmpsl
dec
lods
mov
test
jp
jne
dec
cltd
push
and
push
ds
dec
inc
mov
xlat
jge
cmp
push
dec
bound
and
inc
xor
pop
dec
mov
das
scas
loope
stos
nop
jecxz
mov
jns
cwtl
mov
popa
mov
enter
cli
mov
xchg
int
iret
push
and
push
cmp
inc
movsb
cmpsl
jnp
ret
cltd
cwtl
dec
mov
pop
jl
inc
and
fwait
sbb
jns
cmp
or
pop
dec
jmp
jl
sbb
jne
mov
and
rcrl
mov
cli
cltd
lahf
inc
xchg
push
mov
test
mov
sbb
cld
jns
sahf
mov
jo
aam
mov
hlt
and
das
test
pop
xchg
enter
xor
push
mov
jns
enter
mov
jle
icebp
dec
sarb
mov
inc
gs
loope
xlat
pop
xlat
adc
xlat
repnz
push
dec
popf
test
mov
inc
cmp
shr
test
add
pop
push
cmc
adc
xchg
insl
ds
or
or
bnd
add
lds
dec
mov
mov
pop
cmp
add
xchg
mov
sbb
cmp
stc
mov
dec
fidivrs
jb
fnsave
jle
adc
push
iret
add
test
adc
dec
cmp
mov
jmp
push
inc
fdivs
shll
leave
push
mov
mov
or
fwait
inc
mov
pop
sti
or
popf
jle
lock
jle
mov
imul
pop
mov
sti
mov
nop
push
clc
xchg
push
ret
imul
enter
push
out
dec
loopne
fwait
lds
add
mov
jno
xchg
fadd
pop
push
push
into
test
mov
lret
pushf
lock
pop
inc
inc
scas
out
mov
fistps
cmp
jg
or
test
push
sbb
xor
push
jge
icebp
in
cmpsl
insb
cmp
xchg
loopne
inc
dec
xor
fdivl
or
inc
jl
sub
sbb
fchs
cli
mov
xchg
xor
cmp
sub
out
je
jecxz
pop
mov
or
push
adc
jl
jbe
insb
mov
sbb
popf
cmp
nop
int3
es
jp
push
sbb
push
xchg
adc
das
imul
add
push
aas
xor
dec
and
lret
xchg
jb
bnd
test
jl
or
adc
sbb
or
cld
jb
cmc
mov
arpl
mov
dec
cmp
std
dec
fisubl
mov
mov
repz
mov
adc
xchg
mov
sub
push
xor
loopne
jmp
and
fisubl
add
rolb
inc
and
dec
imulb
inc
xchg
sbb
les
and
xor
and
inc
mov
inc
arpl
pushf
mull
jl
icebp
cmp
or
cld
push
out
xor
mov
andb
enter
out
cli
push
fstps
cltd
subl
test
jle
hlt
jae
les
cmc
insl
insb
cmp
ss
sbb
sti
add
adc
add
rcrl
pcmpgtd
sahf
jno
jnp
imul
pop
call
mov
jp
lods
fidivl
int3
es
out
sub
push
xchg
cmp
int
or
outsl
enter
xchg
test
loopne
fcompl
mov
mov
push
and
pop
xchg
scas
ret
loope
pop
sbb
imul
sbb
and
test
fwait
arpl
mov
loopne
je
mov
mov
ror
enter
lret
mov
icebp
xorb
jbe
popa
mov
in
pusha
or
aad
cmpl
clc
push
lahf
pushf
inc
sbb
je
cs
mov
sbb
int
pop
fsubrl
sbb
movb
sar
popf
mov
gs
and
aas
add
jo
inc
sub
mov
dec
mov
dec
cmpsl
lods
adc
aad
sbb
jne
add
mov
cmp
test
daa
cli
fdiv
ret
lods
jp
loope
push
dec
xor
mov
popf
test
push
inc
je
js
and
inc
sbb
ret
xchg
test
cmc
mov
mov
test
rorb
inc
add
enter
pop
lods
push
or
ds
mov
test
xchg
test
enter
cmpl
sbb
lahf
dec
xchg
mov
mov
lods
roll
add
setle
popf
inc
adc
jmp
add
jmp
shl
cmpsl
les
add
int3
sbb
or
cmp
cmp
cwtl
lret
pop
jb
lods
out
lds
sti
mov
enter
xchg
fcoms
cltd
sbb
pop
lahf
outsb
sbb
add
and
repz
dec
inc
test
repnz
sti
inc
lds
shrb
lahf
into
mov
pop
jae
lds
loope
cmp
adc
repnz
pop
scas
shlb
xchg
rorl
mov
mov
lret
or
ficoml
sbb
jns
mov
add
mov
push
mov
mov
ja
mov
sub
and
mov
or
je
sub
lea
lcall
add
cld
push
jl
jbe
leave
xchg
push
add
push
jb
mov
or
push
sar
jecxz
in
pop
push
clc
fdivrl
cmp
mov
pop
add
fucomip
pop
test
xor
cmp
and
push
aad
ret
stos
sub
xlat
sub
mov
cmp
aas
outsl
pop
inc
add
ret
and
rolb
xchg
fs
lds
in
cmp
fnstsw
aam
arpl
cmpsb
xor
dec
mov
xor
out
mov
inc
rcrl
and
cmp
and
xor
mov
xor
sahf
jg
or
inc
cli
pop
incl
cltd
popf
xor
mov
jns
mov
leave
pop
inc
dec
inc
call
jl
ljmp
and
adc
inc
jnp
add
xorl
aas
std
jl
add
sbb
pushl
sub
xchg
fldenv
pop
sbb
mov
pop
add
dec
out
insb
jb
add
jl
test
add
sbb
fsubr
std
inc
jb
sbb
cli
mov
sub
jns
mov
test
scas
add
loopne
mov
popf
push
add
cmp
sub
jecxz
sbb
cmp
ret
mov
push
sub
jp
lret
out
sahf
lcall
mov
inc
mov
mov
jecxz
pop
push
and
xchg
iret
fnsave
adc
cmpsl
inc
push
mov
jo
clc
enter
sahf
push
leave
push
push
hlt
rcrb
orl
movl
imul
int3
cmp
jae
cmp
mov
jle
les
test
inc
mov
mov
sbb
inc
cmp
mov
dec
cld
int3
std
leave
jl
pop
inc
repz
loope
sti
add
sub
sbb
orl
fistl
cli
repnz
mov
mov
cmp
dec
jp
cmp
lcall
rclb
shll
or
nop
push
inc
inc
repnz
addr16
add
leave
iret
loope
movsb
mov
lret
out
add
aaa
pop
int3
and
push
adc
nop
xor
mov
loopne
fmull
cld
sbb
push
cs
inc
cmp
pop
push
xorb
scas
fdivrs
repnz
mov
xchg
jp
or
les
test
and
add
xchg
iret
pop
push
dec
test
dec
cli
jae
movsl
sub
shll
xchg
repnz
pop
and
orb
ja
lds
mov
xchg
test
jb
movsl
enter
add
ss
lods
pop
xchg
xor
leave
ljmp
jae
iret
pop
mov
adcl
jl
xchg
cli
xchg
addr16
cld
mov
in
pop
data16
mov
add
fsubs
clc
lret
adc
ds
pop
jns
push
lcall
fildl
fwait
add
insb
xchg
sbb
and
pushf
js
std
and
xchg
movsl
jl
lds
int
stc
data16
and
shl
xchg
rcll
push
mov
mov
jnp
sub
mov
push
sub
gs
mov
cmp
push
adc
insl
sub
sub
inc
add
push
shlb
lods
inc
pop
push
push
rcrl
popf
push
ret
je
pop
pop
ljmp
cmc
fsubrl
fwait
push
sbb
outsl
xchg
inc
lds
fcmove
adc
pop
or
ret
xchg
mov
pop
movb
add
push
adc
in
xor
cli
test
jmp
ret
push
inc
test
loopne
mov
fimuls
jg
sub
je
mov
push
mov
fnstsw
push
jns
stos
mov
aad
subl
and
mov
mov
pop
loopne
sub
jl
pushf
fwait
cli
pop
pop
add
lock
into
dec
add
ret
adc
inc
lods
mov
mov
repnz
add
or
cmp
cld
aad
xchg
adcl
mov
cli
rol
fildl
jb
shll
sbb
insl
sbb
xor
adc
int
sub
cmp
js
cli
pop
dec
cmp
addb
jns
inc
stc
enter
lcall
insb
les
mov
or
inc
cmp
mov
repnz
inc
mov
sbb
pop
cld
push
subl
pushf
aas
inc
inc
xchg
rcrb
lcall
fwait
cmp
imul
push
fs
jno
mov
add
xchg
sub
test
jbe
decl
push
push
aas
jp
pop
xor
mov
mov
rorl
sbb
xchg
push
adc
orb
loop
xchg
popa
cmpb
addl
sub
xchg
pushf
lods
iret
in
or
mov
decl
mov
inc
in
inc
dec
push
cmp
and
gs
gs
insb
xchg
pop
in
dec
mov
stos
push
mov
sbbb
pop
xorb
mov
sub
xor
pop
pop
cmpsl
inc
or
dec
or
sub
test
xlat
leave
adc
popf
ror
stos
xchg
dec
pop
and
jp
mov
js
hlt
sub
lcall
push
dec
push
sbb
test
cli
jmp
mov
pop
jbe
dec
enter
dec
jnp
xchg
sub
mov
stc
jge
pop
cmpsb
repnz
int3
cld
mov
shl
sub
and
rclb
ret
cmp
or
repz
pop
jns
iret
push
scas
push
arpl
add
or
cs
inc
cmp
popf
inc
mov
imul
lcall
inc
jmp
xchg
pop
mov
loop
shrb
mov
inc
and
sti
jbe
ret
cmpsb
pop
lea
adc
fcmovne
inc
mov
mov
jge
fucomp
and
push
out
push
insb
xor
popf
inc
rorl
lcall
mov
or
mov
sbb
xor
xlat
not
rol
mov
cmp
pop
sbb
nop
jb
mov
loopne
xor
jle
pop
cld
fldt
mov
aam
loopne
adc
faddp
mov
ret
or
dec
add
lcall
xchg
push
add
fsts
mov
jbe
inc
fcoms
sahf
mov
dec
popf
jecxz
inc
pop
loop
loopne
ficoml
enter
inc
xor
jp
pusha
xlat
rorl
test
test
inc
mov
loopne
mov
jmp
dec
pop
fimuls
std
pop
ret
and
jnp
out
ja
push
mov
xor
mov
outsl
cli
lods
jbe
testb
mov
and
ret
push
cli
mov
fiaddl
pop
roll
js
or
push
or
xorb
pop
inc
les
dec
mov
test
enter
add
je
inc
inc
dec
test
push
or
pop
adc
pop
fadd
js
dec
push
test
sub
ljmp
add
inc
js
dec
icebp
mov
enter
jno
jp
dec
fiaddl
lds
inc
mov
ljmp
ljmp
loope
add
lods
fisttpl
test
fs
fimull
lds
mov
pop
stos
push
flds
add
pop
push
cmp
push
sbb
dec
cmpsl
movsb
movsb
add
mov
stc
fisubrl
lds
ret
dec
push
test
ja
gs
movsb
in
rcll
push
or
fxch
push
enter
sti
xchg
dec
ficompl
jp
ds
dec
push
shll
sbb
movsb
add
aam
push
out
lock
lods
test
jp
dec
or
pop
cltd
fldl
lds
cs
imul
add
pop
rorl
xlat
jle
push
scas
cli
adc
mov
int
inc
lret
adc
aad
lcall
add
mov
and
lods
cli
xorl
lret
je
lret
fsts
pop
xor
push
push
xchg
dec
mov
lret
into
add
pxor
cmpsl
repz
enter
mov
cmp
int
xor
dec
out
mov
fldcw
jle
cmp
cmp
lods
xchg
cmp
ficomps
push
dec
cmp
or
fs
add
add
movsl
test
xor
std
scas
test
cwtl
mov
push
jp
bound
mov
lret
inc
fldt
mov
xor
iret
jp
movsb
enter
inc
xchg
xlat
inc
test
push
cltd
pop
dec
cli
test
mov
movsl
lds
lret
pushf
hlt
lret
xchg
mov
pop
push
inc
test
in
dec
and
rclb
int
sbb
cmp
cld
xor
outsl
roll
arpl
xchg
ffree
pop
xlat
fdivrs
mov
and
sub
fs
je
rolb
cmpsb
sti
dec
pop
sbb
test
in
sarl
pusha
mov
fiaddl
cli
mov
inc
jo
repnz
push
jl
pop
push
xchg
fcmovb
mov
jb
rcrl
xchg
mov
inc
rcrl
mov
mov
icebp
pop
push
jae
aam
lds
pop
aam
fiadds
and
imul
adc
std
or
clc
rolb
adc
ja
mov
fildll
xchg
push
xchg
dec
stc
movsl
lds
push
nop
adc
sahf
jns
inc
sub
mov
in
adc
cmp
aas
cmp
mov
cltd
sub
push
incb
shrl
ret
pop
nop
mov
cmp
fs
loopne
pop
jg
jp
add
ret
mov
inc
xchg
add
lcall
popf
cmpsl
in
sub
jge
push
fwait
push
arpl
and
dec
mov
cli
pushf
cli
lret
repnz
call
inc
lea
mov
lods
daa
or
rclb
das
hlt
xor
mov
add
cmpsl
mov
movsb
sbb
jnp
cvtdq2ps
jnp
loope
push
cld
rorl
jp
push
xchg
cmc
or
enter
adc
iret
or
ror
lahf
mov
fcom
stc
popf
add
rol
in
jl
mov
jecxz
addr16
out
jecxz
sub
adc
mov
jns
pop
pop
and
push
jno
je
int3
fidivrl
rorl
jecxz
aad
rol
adc
jb
adc
pminsw
pop
mov
pop
fmull
lods
lcall
push
jnp
cmp
jge
xchg
jne
cwtl
jae
inc
xchg
pop
dec
add
cmpl
cmp
sbbl
clc
fwait
pushf
scas
jmp
dec
mov
nop
packuswb
xlat
dec
cld
jecxz
inc
xchg
into
inc
imull
xchg
dec
cld
jne
cmp
aam
mov
sti
bnd
and
inc
push
or
loopne
push
mov
loop
std
xor
jae
pop
fs
fsub
stos
mov
mov
addr16
push
std
mov
lods
popf
fcomp
adc
call
push
sti
xor
xchg
dec
clc
loopne
mov
repz
dec
bound
xor
lcall
or
mov
push
or
jp,pn
push
and
ret
mov
or
fisttps
cmc
stos
mov
shll
xor
lret
imul
xor
pslld
cli
insb
mov
xlat
pop
mov
out
ror
into
repnz
jmp
dec
cld
in
mov
pop
movsl
fistps
insl
dec
bound
xchg
movsl
roll
data16
mov
sbb
out
cltd
lea
inc
clc
dec
push
lret
xor
mov
mov
dec
nop
push
lods
mov
movsb
sub
add
test
scas
lret
std
testb
pop
clc
add
dec
ror
shrl
mov
loop
cmc
xlat
push
mov
jnp
push
leave
xlat
imul
jl
pop
cld
int
mov
push
js
push
cmc
aaa
add
repz
pop
in
mov
rclb
and
mov
addr16
vorps
mov
mov
cmp
lret
sub
or
dec
mov
sbb
pop
cmp
repz
dec
xlat
sbb
cld
cmpsb
push
sub
fptan
jb
xor
jge
jp
adc
mov
push
or
pop
dec
adc
nop
push
jp
jnp
mov
lcall
lock
cmp
cmp
cmp
mov
movl
or
adc
repnz
shll
mov
stos
je
shlb
clc
popa
mov
cmc
jmp
xchg
push
ret
mov
xchg
xchg
sub
mov
mov
std
pop
mov
cmpsb
pop
cld
push
in
add
sub
rol
aad
movsl
add
push
jecxz
sub
adc
pushf
cld
int
and
mov
mov
sub
xchg
stos
cmp
xchg
add
push
inc
scas
and
ret
repnz
push
jmp
add
jb
fld
cmp
xchg
lret
xor
xor
add
inc
push
mov
shll
xchg
lahf
popf
out
inc
insb
fs
mov
push
lock
inc
sub
mov
sub
inc
sbb
cmp
cmp
into
lret
repnz
test
mov
inc
adc
lods
ret
loop
pushf
pop
jle
push
cmpsb
inc
cmp
add
addr16
inc
mov
cltd
sbb
mov
pop
adc
shll
adc
jne
mov
inc
push
test
rcrb
fimuls
cld
sub
mov
xor
pop
aam
test
dec
lret
addr16
lret
mov
cmpsl
adc
or
jb
testl
mov
sar
pop
jae
je
sub
xchg
les
dec
fstl
xorl
ret
js
mov
sub
sbb
push
cli
mov
in
mov
and
add
bnd
inc
fistpll
mov
test
movsl
test
or
fimull
push
int
daa
pushf
cmp
testl
pop
mov
movsl
pop
sbb
cmp
mov
loopne
movsl
rcll
fnclex
pop
pop
inc
sbb
mov
push
icebp
mov
sbb
enter
test
aas
movsl
cmp
cs
loopne
fcmovnu
pop
loopnew
inc
mov
loopne
sub
jo
or
cmp
jns
cli
inc
pop
cmp
cmp
stc
and
fiaddl
jp
add
iret
mov
xlat
dec
out
adc
in
call
and
dec
out
loopne
arpl
inc
sbb
sbb
inc
int3
mov
cmp
sub
cmp
mov
xchg
mov
jmp
punpcklwd
add
xchg
mov
sub
ljmp
adc
jb
or
ret
aam
pop
test
scas
mov
leave
or
fs
add
cmp
in
faddp
inc
mov
lcall
sub
dec
cld
shll
in
ror
in
outsb
and
pop
inc
loope
or
mov
and
mov
pusha
movsb
push
test
or
pop
pop
mov
inc
add
shrl
sub
shlb
inc
mov
or
rcrb
jg
cmpb
mov
push
popa
fwait
lret
fiadds
or
dec
rcrb
mov
push
dec
or
ret
out
dec
bound
mov
cmp
mull
mov
mov
mov
mov
imul
cld
fistps
sbb
loope
add
ljmp
lods
jge
scas
cli
mov
lahf
fs
cmpb
popf
xchg
sbb
mov
jp
loop
fmuls
pusha
das
mov
inc
loopne
cli
push
mov
popf
leave
in
mov
imul
shrl
test
jb
pop
or
sbb
mov
push
or
ret
add
aad
dec
inc
test
test
push
cmp
lods
dec
fs
insb
jecxz
jb
push
pop
repz
lret
xchg
ret
xchg
dec
lret
jl
mov
out
orl
lahf
cmpsl
jbe
jecxz
in
cld
pop
cltd
sub
adc
cmp
mov
ljmp
lds
popf
jp
mov
dec
dec
imul
dec
loopne
mov
ror
sbb
je
pop
adc
rcr
rcl
dec
pop
cltd
enter
or
imul
dec
sar
or
rorb
aam
push
pop
test
add
popw
test
inc
clc
cmp
mov
jmp
pop
sub
subb
cwtl
xchg
jae
mov
cld
les
sti
fbstp
clc
cmp
jl
int
sbb
fldl
cmp
test
cmp
out
cmp
xchg
push
and
inc
cli
inc
jge
orb
cwtl
jmp
xor
sti
xchg
xor
cld
icebp
xor
and
sub
subb
pushf
jle
jmp
mov
mov
stos
mov
cli
outsb
repz
sub
inc
popf
pushf
xor
rol
loopne
lock
mov
add
mov
cmp
adc
jo
or
mov
int3
mov
sbb
inc
sub
mov
cmp
xchg
mov
dec
cmpsl
cmp
adc
cltd
dec
mov
pusha
add
cmp
fucomip
and
movsb
sarb
repnz
lret
imul
pop
cmp
es
in
std
fnstcw
pushf
notl
mov
pop
lcall
push
mov
lods
lea
test
out
mov
in
inc
cld
mov
cmp
sub
cld
pop
insb
aas
stos
stos
sub
inc
mov
sahf
cmp
jae
sahf
cld
inc
mov
inc
sahf
jp
faddl
and
dec
mov
dec
loope
dec
jl
mov
inc
xor
mov
push
repnz
int
popf
into
mov
dec
gs
push
inc
je
and
push
mov
xor
mov
xchg
mov
xor
imul
stos
ret
cmpsl
push
sbb
mov
sub
in
pop
enter
dec
sbb
call
fisttpll
push
xor
pushf
cmp
mov
insb
lret
and
dec
stos
repz
in
sti
mov
dec
rcl
gs
mov
scas
adc
dec
sub
test
stc
lcall
dec
lods
enter
out
jae
push
jmp
test
fwait
into
enter
fimuls
ja
mov
enter
adcl
rcl
sbb
shl
clc
xchg
mov
push
add
pop
pop
push
mov
setae
dec
stc
lret
xlat
js
test
lcall
jb
xlat
roll
ret
stc
and
and
and
sub
push
insl
pusha
mov
push
js
aad
jge
xchg
inc
les
push
and
mov
push
std
loopne
cmp
jl
fwait
popf
mov
xor
sahf
adc
mov
test
jl
dec
iret
cmp
test
xor
repz
push
ljmp
cmpsl
mov
stc
bnd
fcompl
ret
jl
cs
mov
lret
xor
jb
xor
push
cmp
push
addr16
jnp
inc
push
int
cld
lret
sbb
add
push
scas
lahf
roll
or
inc
sub
stos
xor
jnp
jecxz
pop
mov
test
xor
stc
jnp
pop
add
xlat
rclb
adc
imul
test
cmp
ror
cli
jbe,pt
ss
dec
enter
cli
mov
jb
fcoml
push
outsb
mov
jns
in
push
add
sbb
ret
lods
push
pop
inc
fildll
mov
ret
fs
enter
jl
cmpsl
fildl
addr16
fstp
fadd
stc
fldenv
sti
aad
jo
add
sub
jnp,pt
push
pusha
cmp
cmpsl
enter
or
push
outsb
repnz
cmp
sbb
sbb
sahf
insb
insb
incl
mov
cld
pop
and
les
mov
xchg
mov
adc
enter
jecxz
xchg
shrb
jecxz
mov
out
into
push
xchg
dec
sbb
or
push
sbb
jmp
lret
ret
and
mov
clc
cmp
addr16
std
lods
test
lods
mov
rcll
xchg
cmp
mov
in
pop
cmpsb
lods
lods
test
cld
or
jle
enter
les
ss
push
cld
push
dec
rcrb
gs
and
nop
js
fisttpl
mov
hlt
in
or
test
out
popf
mov
xor
or
xor
sbb
cmpsl
ret
lcall
pop
ss
aaa
fs
int
lret
sbb
cld
sub
ljmp
loopne
pushf
lret
popf
inc
leave
es
cmpsb
mov
or
mov
rorl
cmc
mov
insb
cmp
les
hlt
mov
dec
xor
rcrb
js
test
test
lahf
xchg
pop
adc
sbb
push
sub
popf
rcrl
ret
mov
cmp
sbb
inc
rcll
dec
jg
xchg
pop
int3
in
inc
andb
dec
push
test
mov
sbb
in
fsubs
mov
int3
iret
pushf
jbe
sti
add
xor
and
xchg
orl
inc
pop
xor
cmp
cli
and
insb
adc
mov
sbb
xlat
adc
sub
xlat
stc
mov
push
ss
test
leave
or
cmp
lret
mov
cld
cmp
frstor
loope
cmp
sub
imul
xchg
xchg
add
fldt
add
cwtl
mov
mov
stos
cmc
mov
xchg
pop
lret
or
clc
dec
sbb
or
sub
aam
adc
dec
ja
enter
movsl
jl
add
add
jle
cld
mov
dec
ret
fwait
inc
ds
test
cmp
pop
repnz
push
mov
cmp
add
shll
stc
and
add
aaa
sbb
in
enter
adc
insb
mov
mov
add
pop
xor
ret
and
inc
push
stc
lret
sub
jg
dec
inc
pop
xchg
and
int3
aas
inc
ret
scas
pop
inc
cltd
testb
loopne
sbb
add
mov
int
or
nop
pop
add
inc
jno
jns,pt
xchg
mov
cmpsl
mov
jae
mov
jg
or
ret
les
in
xor
adc
pop
lds
push
mov
jl
adc
loopne
xchg
es
adc
call
aaa
popf
sbb
ljmp
js
or
std
sbb
or
jle
jp
xor
xchg
adcb
cmp
push
sbb
or
icebp
iret
test
xchg
dec
sbb
xchg
sbb
pop
cltd
add
test
add
sarb
fxch
sub
int
xchg
repnz
pop
jmp
and
lahf
xchg
pop
int3
lea
cmp
pop
pop
dec
fwait
mov
jg
inc
stc
dec
arpl
test
int3
and
xchg
subb
pop
sub
and
pop
stos
jns
cmp
subb
in
pop
push
addl
push
xchg
cmp
out
cmpsd
test
xchg
push
movsb
add
adc
pop
push
mov
mov
mov
sarb
adc
xlat
mov
mov
addr16
mov
dec
lcall
dec
push
data16
movsb
cmp
lcall
out
stc
xchg
outsl
push
jne
or
insb
xchg
lcall
and
cmp
loopne
lcall
sarl
mov
sbb
xlat
dec
nop
sub
dec
mov
out
lcall
push
dec
ret
out
push
ret
test
je
pop
and
cmp
inc
fwait
add
pusha
push
pop
cld
inc
mov
inc
dec
jge
adc
jg
outsl
mov
iret
mov
and
leave
xlat
mov
lcall
pop
dec
push
jle
iret
lea
std
lret
stc
mov
mov
sar
dec
insb
icebp
jae
sahf
out
stc
lods
or
jp
sbb
dec
jb
add
in
fistpll
rorb
mov
fnstenv
pop
mov
inc
mov
mov
fcmovnbe
mov
test
mov
arpl
mov
mov
outsb
pop
jo
push
dec
cli
out
dec
mov
aaa
pop
scas
xor
mov
dec
or
test
stos
push
out
push
fistpl
or
shll
xor
cmp
xlat
push
add
loop
aad
scas
or
mov
add
sbb
lods
mov
inc
sbb
cmp
mov
ret
mov
cmp
daa
adc
inc
cmpsb
lret
or
jbe
movsl
inc
out
test
stos
adcb
cli
pop
xchg
mov
lret
and
add
fdivr
mov
inc
test
dec
lds
add
pop
sub
lcall
insb
iret
movl
fwait
mov
stc
mov
mov
cli
insb
sti
cld
push
pop
pop
nop
iret
or
fsts
add
test
xchg
push
lret
sub
or
xchg
movsl
scas
xor
fcmovb
cmp
or
lret
test
inc
or
leave
xor
repnz
cmp
pop
ret
xchg
cli
test
push
xchg
or
loopne
jo
adcl
sbb
jb
loop
push
out
or
pop
pop
addr16
xchg
repz
inc
pop
adc
popa
lahf
cmp
jb
add
clc
mov
push
mov
leave
mov
push
cmpsl
dec
rcrb
fnstenv
lcall
ret
sbb
push
sbb
sbb
sahf
pop
jns
cmp
add
repnz
aas
lret
push
or
xchg
sbb
and
vandps
das
aad
jge
lret
mov
push
dec
aaa
test
ret
cld
inc
sahf
sbb
jb
mov
cmp
lret
xor
jne
cwtl
mov
sbb
sub
rol
push
notl
popa
cmp
sbb
jo
ret
lret
dec
inc
jne
push
push
arpl
cmp
aad
cmp
mov
jne
cmp
out
shrl
inc
mov
jp
adc
in
test
test
mov
lcall
dec
lea
iret
addr16
shll
movsl
lock
add
xchg
stos
fs
xchg
orb
cmp
dec
add
adc
test
pushf
jnp
inc
add
cmp
inc
shrl
mov
out
mov
pushf
cmp
xor
adc
dec
repnz
insb
pop
add
inc
add
jp
cmp
pop
jo
xor
das
pop
test
jl
lea
insb
es
nop
or
outsb
test
inc
push
mov
lods
push
pop
push
scas
xchg
cmpb
mov
xchg
lods
nop
pop
sub
fwait
mov
mov
test
popf
mov
cmp
sbbb
cltd
sub
pop
push
sub
jecxz
sbb
jmp
mov
xchg
aaa
cmc
pushf
cmc
xchg
mov
testb
add
mov
adc
sti
pop
mov
or
cli
dec
inc
pop
test
test
stc
sub
fdivrl
push
and
loopne
pop
mov
add
cmp
mov
enter
mov
repnz
mov
mov
setl
push
push
inc
pusha
ret
inc
dec
jbe
inc
inc
or
test
add
inc
sub
push
sbb
int3
stc
mov
pop
add
sbb
cli
orl
sub
fildl
jmp
popf
enter
sub
push
jns
ret
divb
push
icebp
call
adc
xchg
inc
jecxz
pop
lret
or
add
sbb
lock
mov
push
or
mov
into
aaa
fidivrs
adc
pop
test
cmp
outsb
jbe
push
or
jmp
leave
int
pusha
test
push
scas
mov
mov
pop
and
sbb
inc
in
fiadds
xchg
push
inc
ja
pushf
fstl
fwait
mov
dec
jle
in
loopne
jb
or
inc
lcall
stc
jb
mov
insl
cltd
test
sub
cli
gs
mov
or
repnz
adc
adc
add
dec
aas
mov
cmp
xor
sbb
mov
jl
cmp
stc
shlb
pop
fdivr
jo
int3
mov
outsb
and
add
je
sarb
faddp
mov
cmp
pop
mov
fcmovnb
fld
xchg
push
xlat
inc
icebp
jge
inc
xchg
cmpsb
mov
arpl
xlat
jb
sbb
mov
imul
and
movsl
mov
cmc
xor
cld
jns
cli
jno
mov
or
cmpb
hlt
fsincos
int3
pop
push
pop
insb
and
mov
popf
js
dec
andb
fadds
ss
popl
clc
lcall
lds
and
popf
and
dec
cmpb
jnp
cmc
mov
xchg
push
lret
aad
addr16
add
and
cmp
mov
add
mov
sbb
cmp
fisttpl
bnd
sub
lret
lds
and
popf
iret
aam
aad
push
fisttpl
mov
or
nop
repnz
movsb
and
dec
xchg
sub
xlat
inc
jnp
in
and
xchg
insl
mov
enter
mov
adc
out
pushf
std
and
cmp
pop
out
mov
lret
aaa
popa
push
rcl
or
or
add
aad
xor
mov
and
stos
jl
fld
mov
iret
add
and
orb
mov
stos
cmp
mov
filds
int3
sub
outsl
js
flds
fwait
add
inc
add
les
dec
cli
mov
pop
jp
push
bound
movsb
lret
dec
or
xchg
enter
add
sub
add
jge
add
jns
shll
xchg
sbbb
dec
mov
mov
and
push
arpl
pop
rol
dec
pop
dec
notl
xor
mov
add
add
ret
enter
int
jns
inc
lret
fcmovne
cmp
adc
or
int3
adc
rorl
add
insl
inc
lock
aad
dec
pop
xor
sbb
mulb
gs
jg
cli
adc
aad
insl
xlat
xlat
in
adc
mov
mov
shll
jmp
dec
je,pn
sbb
xchg
lods
test
movsl
xchg
mov
or
inc
ret
fimuls
jp
sbb
stos
cld
in
pop
jnp
sbb
pop
dec
xchg
ret
fsubrl
add
mov
jl
pop
sbb
fwait
ss
mov
ljmp
jae
mov
mov
pushf
mov
ss
stos
rol
loopne
push
jp
fmuls
leave
add
or
and
loopne
iret
adc
mov
into
mov
imull
pop
push
stc
decb
popf
add
test
dec
cmp
mov
mov
pop
adc
std
jge
jb
stos
sbbl
sub
ljmp
bnd
insl
push
jne
lret
pop
dec
jl
mov
test
push
sahf
sbb
int
fisubrl
mov
ret
mov
sbb
mov
sbbb
sub
test
mov
ret
mov
push
aas
leave
fnstenv
mov
pop
in
add
imul
xchg
out
push
in
xor
dec
lahf
xchg
jb
mov
sbb
sub
and
les
lds
mov
jle
sbb
mov
cltd
inc
cld
fistl
cmpsl
and
iret
fs
enter
sti
lret
cmp
jp
inc
push
mov
call
sub
inc
arpl
out
scas
rcll
adc
push
cltd
push
cmp
xchg
int
xor
icebp
int3
stos
fmull
in
ret
xchg
inc
lret
ja
repz
mov
dec
mov
mov
dec
fxch
lea
mov
in
shl
lret
mov
test
sbb
push
loopne
jp
mov
jl
popa
ret
into
cmp
mov
sbb
push
mov
shlb
or
push
ds
push
stc
clc
fcomi
xor
dec
add
scas
lds
mov
js
icebp
sub
out
movsb
jo
mov
mov
fs
lods
jp
xlat
ds
and
mov
jne
push
mov
imul
pop
cmp
inc
enter
in
lods
les
mov
jnp
int3
cltd
fcmovu
mov
loopne
mov
daa
shl
pop
popl
pop
cmp
popa
xor
jp
mov
mov
lret
aam
lods
mov
ds
shrb
sbb
jns
xor
lahf
loopne
xchg
mov
test
xchg
lcall
ficoms
cltd
fidivrl
push
gs
xchg
test
sti
jbe
mov
dec
scas
xlat
cmp
aad
and
dec
mov
iret
push
subb
mov
add
repnz
sbb
ja
push
inc
fldcw
outsl
mov
push
sbb
jb
or
dec
mov
cli
loopne
pop
shrl
xor
iret
cld
cwtl
les
repnz
add
xchg
aam
xorb
leave
cmp
sub
mov
mov
stc
repnz
sub
mov
xchg
lret
sahf
jp
xchg
mov
push
inc
cltd
xchg
repnz
loopne
xchg
lret
xchg
in
cli
mov
les
repnz
in
notl
test
mov
xlat
stos
stc
adc
cmp
xlat
xor
addl
mov
ror
mov
ss
dec
jge
mov
jns
mov
fiadds
cld
xor
lods
and
clc
mov
and
mov
cmp
ret
xor
mov
stos
sbb
pop
loopne
dec
mov
unpckhps
inc
xchg
mov
icebp
icebp
jne
xchg
dec
decb
pop
mov
pop
shlb
fld
repnz
out
add
int3
jns
jl
imulb
fisttpl
fiaddl
sub
insl
or
mov
sub
jg
inc
arpl
mov
repnz
mov
mov
cmp
in
inc
push
xor
add
jns
push
push
cli
xchg
dec
cs
xchg
fcoml
inc
out
rolb
sbb
jno
cmpsl
ds
loopne
jp
push
aad
mov
mov
xchg
mov
mov
cmp
adc
push
int
pop
xor
or
xchg
cwtl
sahf
mov
mov
leave
dec
sbb
pop
mov
mov
test
shlb
and
and
loopne
mov
xchg
sub
push
sbb
xchg
fcoml
fcoms
mov
lretw
add
pop
nop
std
inc
stc
enter
in
mov
mov
test
mov
fldl
mov
mov
jl
mov
test
aam
xchg
mov
mov
sub
pop
test
mov
mov
xor
xchg
dec
cmp
hlt
adc
cmp
pusha
xchg
inc
push
in
cmp
jns
dec
fwait
lahf
cmpsl
sbb
xlat
pop
lret
xor
mov
sub
aam
xchg
inc
cld
mov
jp
mov
inc
sbb
fwait
or
jnp
cmp
dec
stc
pop
xchg
push
fs
std
insb
xor
sbb
dec
dec
xor
pop
ss
mov
ficomps
adcb
rolb
aad
and
xchg
pushf
or
xlat
fisubs
imul
pop
mov
cmc
stos
inc
fs
test
dec
xchg
roll
orb
cld
xchg
push
push
stos
mov
enter
adc
mov
popf
add
cmp
nop
mov
dec
add
jp
add
xlat
into
mov
jecxz
je
in
mov
jnp
adc
fistpll
push
loopne
or
push
cld
insb
xor
dec
xor
dec
andb
mov
test
sti
xchg
or
cmp
inc
sub
mov
scas
sub
adc
xchg
xlat
mov
xor
pop
or
insb
cmpsb
push
iret
mov
popa
cmp
iret
add
sti
pop
orl
sbb
mov
add
mov
movsb
lea
scas
mov
dec
push
loopne
orl
sub
add
pop
fsubr
out
sub
jmp
stc
mov
int3
jae
xor
add
cmpsl
push
mov
sbbl
test
mov
jns
movl
pop
out
pop
push
sbb
cmp
fistpll
or
test
jge
insb
cmpsl
data16
je
cmp
imul
popf
push
nop
out
jmp
push
mov
cld
adc
je
or
into
push
jns
aaa
rcr
pushf
pop
cmp
in
cld
dec
jp
cld
jns
jmp
sbb
inc
leave
cmc
insb
add
lock
push
mov
ficompl
cmp
shll
outsb
pushf
loope
ret
out
mov
mov
ret
jmp
mov
push
loopne
xlat
sub
mov
sbb
mov
sub
popf
xchg
jbe
cmpsb
out
outsb
sti
imul
in
cmpsb
out
mov
add
adc
mov
jmp
scas
mov
inc
repz
sbb
loopne
in
aaa
arpl
mov
pop
or
sti
fidivl
test
ffree
jne
into
dec
loopne
pop
pusha
adc
shrb
inc
rcl
sbb
bound
push
orl
and
lcall
adc
sub
shrb
stos
push
jo
popa
and
test
pushf
inc
lods
mov
jbe
nop
aad
cmc
mov
jp
ret
ret
mov
insl
jp
sub
movl
stos
ficompl
test
dec
cmpl
adc
inc
rclb
sub
dec
inc
push
insb
sub
fisttpl
iret
lods
jbe
stc
cmpsl
push
ljmp
push
adc
cli
mov
mov
shrb
add
inc
mov
mov
sub
scas
mov
dec
dec
pusha
dec
icebp
aas
jle
mov
mov
push
sbb
xchg
push
inc
inc
jo
orb
jecxz
mov
xchg
test
push
dec
rol
cli
jl
addr16
jb
add
fidivs
ret
gs
inc
mov
add
jp
or
les
jnp
jns
xchg
xor
jl
fwait
cmpb
mov
shll
push
scas
jo
scas
cli
testb
xor
fxch
sbb
or
jg
repnz
or
mov
adc
sbb
and
cmp
lods
loopne
aaa
adc
enter
add
imull
add
insl
scas
std
or
rcrl
das
mov
mov
pop
jp
inc
ret
mov
notl
inc
out
jl
pop
inc
jp
jbe
dec
ret
aam
mov
push
pop
pop
adc
jp
xchg
loopne
hlt
pop
out
jl
scas
popa
adc
sub
jb
cmp
push
aam
movsl
shll
xlat
mov
pop
or
add
into
cmp
lods
jp
inc
fldenv
push
inc
mov
jmp
push
mov
loope
mov
and
ret
and
push
repnz
imul
ss
pop
sub
add
rorb
mov
rorb
test
mov
mov
rolb
xchg
fnstenv
out
int
push
fcompl
popf
push
outsb
adc
add
xchg
mov
jp
dec
pop
sahf
pop
inc
inc
jl
imul
arpl
xchg
cmp
jp
cltd
subl
sub
or
push
popf
popf
mov
add
ret
test
pop
leave
and
push
loope
jmp
push
mov
addr16
push
cld
movsb
cmp
mov
stos
mov
into
cmp
test
fbstp
arpl
addb
pop
sub
lods
fldcw
xor
jmp
xchg
lret
push
sbb
in
jle
loope
add
push
and
sbb
cmc
jle
nop
loope
ds
ret
pop
xchg
cld
sbb
push
lods
loope
cmpl
fisttpl
push
aaa
dec
loope
mov
popf
adc
inc
das
jg
cli
es
mov
cmp
inc
sarl
iret
loopne
jl
inc
add
xor
aad
inc
nop
add
mov
jb
and
and
pop
dec
int
mov
push
jb
mov
xor
sbbl
sahf
mov
stos
imul
pop
orb
dec
push
scas
adc
popf
xchg
dec
mov
loope
iret
cmp
xchg
ljmp
or
cmp
sub
fstpt
cmp
or
and
je
repnz
sub
fimuls
sbb
jns
cmp
inc
dec
sbb
les
pushf
jg
mov
cmpsb
cmp
cmc
push
clc
repnz
int3
test
scas
add
repnz
push
inc
cltd
cmp
push
sbb
xor
inc
leave
mov
mov
insb
sbbl
leave
lret
movsb
xor
fcmovu
inc
mov
loopne
sbb
push
ret
mov
xor
insb
jle
inc
lret
cmpsb
adc
cltd
js
shrl
cli
popf
pop
cli
xor
mov
dec
add
xchg
lods
testl
addr16
lret
stc
subb
addl
aad
enter
cmp
mov
mov
mov
dec
stc
xchg
push
adc
lret
popa
sar
aaa
fcompl
jl
push
xor
hlt
pusha
fs
push
mov
sbb
cltd
insb
roll
cs
popf
jns
sub
fisttpl
cmp
popa
jno
outsb
test
lcall
or
pop
mov
mov
add
les
jmp
shr
jno
sub
fwait
jl
push
sbb
mov
divb
lds
test
xlat
cmpsl
cmp
das
scas
mov
xor
sbb
rolb
cmpsl
mov
mov
mov
stc
jno
mov
mov
dec
pop
xor
add
mov
stc
mov
jb
fdivl
mov
js
repz
inc
jb
lods
push
loopne
arpl
xchg
dec
imul
fnstcw
shrb
cmp
or
jmp
jmp
jbe
jg
jo
jmp
jp
int3
mov
ss
fiadds
mov
xor
aad
xchg
pop
push
mov
xlat
repz
dec
xor
aaa
sub
push
inc
popf
adcb
cwtl
push
movl
push
dec
add
push
push
mov
push
jp
aaa
jle
cli
dec
cmp
je
sbb
push
in
clc
sub
xchg
sahf
mov
cli
in
je
rcll
dec
jecxz
xor
std
sub
cmp
std
or
int3
outsl
mov
push
cmp
jmp
mov
dec
or
dec
add
and
inc
stos
popa
mov
stos
in
dec
int
mov
push
xor
pop
cmp
mov
xchg
clc
adc
push
test
movsb
jmp
iret
aas
cmp
adcb
xor
fnstsw
mov
xchg
mov
and
outsl
or
add
pop
std
iret
fdivl
adc
mov
or
mov
sahf
negl
popf
icebp
xor
aas
adc
in
je
mov
push
ds
dec
repz
inc
or
test
push
stc
les
lcall
xchg
repnz
jle
inc
fisttps
inc
pushf
cmp
mov
xchg
gs
lods
mov
enter
fwait
lods
cmpsl
cwtl
cmp
jle
cwtl
movsl
push
std
pushf
xlat
stc
mov
xchg
addr16
movsl
loopne
xor
mov
cltd
mov
cld
enter
mov
cmp
test
inc
dec
insl
ret
sub
xchg
sub
fwait
in
shll
cmp
lcall
decb
cmp
cmp
fldenv
push
mov
mov
jns
adc
gs
loopne
into
ds
cmc
push
fsubs
repnz
les
insb
sub
movsb
daa
cmp
dec
pop
fdivr
and
mov
dec
fiaddl
test
jp
and
jl
mov
dec
pop
in
or
loop
push
cld
scas
incl
mov
inc
and
addr16
lret
arpl
test
rcll
add
ret
or
lret
dec
fidivrl
mov
pushf
xchg
fisubrs
sub
imul
mov
dec
cmp
lahf
xchg
in
jmp
imul
push
dec
movsl
aaa
jns
rolb
or
test
pop
jb
not
adc
aam
add
enter
scas
ret
cmp
mov
rcll
mov
imul
mov
rcll
cs
cmp
push
push
push
fmul
cmc
mov
cld
mov
andl
stos
lret
movsb
aaa
mov
in
push
iret
ljmp
fs
dec
test
rcrb
or
cltd
mov
and
xor
adc
lret
lods
das
loopne
mov
lods
cmp
nop
sbb
fnstenv
jmp
insl
aas
dec
in
pusha
out
gs
sbb
xorb
push
loope
popa
xchg
xlat
stc
xchg
aas
ret
xchg
addr16
stos
insl
pop
mov
sti
test
cmpl
cmpl
ret
jns
ffreep
pop
adc
add
shlb
stos
fwait
add
loopne
push
add
xchg
jae
out
mov
mov
mov
mov
ret
mov
or
add
jbe
cli
out
addr16
jp
mov
jmp
into
into
add
push
mov
sub
cmp
pop
insl
outsb
xor
adc
sbb
scas
push
mov
lods
into
mov
mov
data16
dec
push
pushf
fdivr
std
incb
dec
popa
scas
test
xchg
cmp
sub
sbbl
push
mov
lds
dec
sbb
mov
call
xchg
mov
xorb
or
cmp
pop
mov
test
shrb
into
sbb
scas
scas
cmp
sub
lcall
xchg
cmp
lret
mov
sti
xchg
fnstcw
cmp
mov
int3
iret
mov
shll
add
pop
dec
ror
mov
mov
mov
inc
mov
loope
mov
mov
lcall
jecxz
scas
pop
xchg
pop
jb
leave
cmp
int
mov
pop
sub
outsb
and
inc
jp
cld
cli
pop
mov
repz
cmc
ljmp
insb
lcall
mov
xor
cmp
das
xchg
cmp
jb
add
lret
fcmovne
aad
ja
dec
jl
push
sub
inc
and
ja
cs
stos
push
mov
push
test
jne
es
in
cmp
or
add
or
int3
mov
push
loop
add
fistpl
dec
and
lds
mov
inc
aad
mov
enter
pop
pop
sti
jno
xor
xchg
loopne
sarb
mov
add
daa
add
test
sub
int
mov
or
lods
mov
push
cwtl
je
mov
push
xchg
in
push
and
rorl
ret
xor
and
shll
fmul
repnz
aaa
lret
ret
out
sbb
xchg
ret
bound
sbb
inc
push
rol
cmp
fnstsw
hlt
adc
fdivl
cld
dec
cs
loop
adc
xor
aam
js
addr16
adc
roll
pushf
and
gs
ret
bnd
loopne
lods
pop
jmp
mov
rclb
cmpsb
sub
mov
cmp
aam
mov
sbb
lea
sti
call
push
pop
fsubrl
jle
cmp
mov
lret
fnstenv
gs
mov
jno
stos
and
mov
add
test
inc
fstl
lods
clc
xor
shl
jns
fidivrs
enter
cmpsl
out
shll
dec
enter
add
or
sbb
lds
cs
xchg
sub
addr16
rclb
fnstcw
and
cmp
jp
loope
cwtl
cmpsb
inc
cmp
pop
pusha
je
pop
movsl
test
lret
cltd
cmp
fimuls
xchg
pop
test
or
cmp
adc
or
mov
andb
dec
mov
xlat
pushf
sahf
cmc
or
decb
loopne
mov
cli
pop
pusha
inc
aad
or
add
mov
add
push
ret
sbb
rcr
popa
les
stos
movaps
test
and
inc
pop
inc
inc
cwtl
mov
add
cli
adc
or
and
rolb
pop
dec
fldl
lcall
or
or
nop
shrl
daa
adc
xchg
fisttpll
push
addl
xchg
jns
mov
push
in
push
lcall
adc
xor
dec
mov
ret
cmp
jmp
pop
xlat
xchg
adc
push
enter
cli
js
fildl
icebp
cmp
or
ret
or
sti
and
lock
fsubrp
adc
fwait
push
mov
mov
cmp
rorl
push
adc
cmp
in
mov
mov
mov
jl
dec
mov
dec
mov
fisttps
ds
add
mov
pop
and
inc
lea
xor
and
sbb
push
test
shl
aaa
xlat
inc
nop
push
dec
fsubrs
outsb
cmp
ds
sub
xchg
cmp
xchg
repnz
lds
mov
aad
add
sti
andl
add
stc
pop
dec
in
fidivrs
mov
repnz
call
popf
push
xchg
mov
cwtl
add
xchg
add
shrl
jo
std
jbe
push
push
in
rol
out
mov
pop
inc
mov
xchg
fldenv
adc
fldcw
xchg
enter
fsubrs
leave
push
cwtl
xor
cmp
xor
lea
xor
cld
fxch
xchg
push
les
imul
pop
cli
mov
add
pop
mov
push
inc
rol
pop
stos
arpl
cwtl
push
jae
fimuls
mov
ds
popf
subl
addb
dec
sub
enter
or
mov
mov
mov
push
test
subl
roll
sub
aam
cmp
fldpi
adc
mov
fucom
test
jae
jl
adc
stc
jb
mov
push
mov
push
imul
inc
fidivrl
cmp
mov
inc
or
pop
inc
jmp
lcall
stc
push
sub
je
inc
adc
fidivrs
pop
stc
fs
test
cld
sbb
jns
mov
and
pop
lret
jge
lock
jb
pop
cmpsl
mov
movsl
into
ljmp
fisttps
enter
xchg
push
mov
pop
inc
pop
adc
ja
cmp
pop
dec
clc
insb
fwait
xchg
cmp
fs
or
jns
mov
cmp
dec
fmull
cmpsb
pushf
sbb
data16
ret
lds
sbb
sbb
add
jnp
cmc
mov
xchg
inc
test
int
dec
imul
pop
xchg
jns
int3
fmuls
or
pop
out
jb
xor
lcall
cltd
and
cmp
lret
fwait
cli
stc
mov
movsl
mov
or
rcrl
lock
dec
iret
in
cltd
repnz
leave
add
push
mov
inc
add
cmpsl
sahf
int
mov
mov
xchg
push
sub
mov
fmull
xor
jnp
arpl
mov
or
sub
adc
xchg
mov
inc
jl
xlat
shrl
stc
in
pop
add
rolb
fs
push
xlat
cmp
inc
fs
rorb
push
loopne
xchg
inc
test
push
cmp
dec
repnz
xor
fwait
lcall
cli
std
mov
pop
stc
repnz
cmp
inc
inc
insl
cvtdq2ps
loopne
jbe
bound
mov
mov
inc
in
popa
xor
xchg
call
xchg
cmp
push
adc
dec
cld
pushf
jl
stc
repz
pop
aas
cld
push
ror
ret
mov
sub
stc
test
sbb
cs
jmp
mov
cmp
add
mov
enter
adc
pop
jmp
mov
mov
inc
push
ja
dec
xchg
fidivs
adc
push
push
mov
shrl
and
adc
daa
movsl
jle
cld
mov
addr16
and
sbb
cs
or
addl
mov
push
cli
repnz
jp
sbbl
addr16
cli
pop
cltd
cwtl
popf
jns
ds
sbb
sbb
movl
xchg
std
iret
inc
add
push
testl
add
sti
clc
xor
cmp
dec
mov
addr16
cld
mov
stos
jge
add
inc
scas
and
stc
push
ret
pop
ss
imul
nop
into
lock
add
mov
or
jns
fnstenv
push
rcr
mov
cli
test
or
insb
fwait
icebp
movq
aam
mov
cs
imul
adc
lret
imul
pop
mov
rorb
sbb
scas
dec
cltd
jl
test
cmp
inc
shlb
push
pop
jne
mov
enter
mov
jl
lret
push
insb
sti
dec
push
mov
pop
ss
repnz
fmul
pop
sub
lcall
lea
in
mov
jl
dec
add
xor
cmpsl
inc
xchg
shlb
imull
lret
push
leave
bound
shl
lods
lods
xchg
cli
mov
adc
xor
ss
aaa
notb
mov
pop
dec
xchg
cmp
popa
push
mov
rcll
pop
aas
ficompl
push
jl
arpl
or
xchg
mov
pop
loop
sti
out
std
fdivl
repnz
sbb
or
lods
lcall
ja
nop
enter
leave
jp
jbe
iret
fucomi
repnz
pusha
push
jns
gs
lods
iret
aam
aas
shll
jbe
mov
sub
stos
insl
mov
imul
cmp
mov
xchg
shlb
subb
pushf
xor
xchg
dec
inc
inc
out
xchg
jle
inc
sbb
add
out
lods
mov
or
cli
movsb
andl
repnz
push
mov
sbb
add
call
nop
mov
or
mov
cli
lret
les
movsl
cli
jb
or
pop
add
roll
jno
dec
lahf
test
sbb
leave
or
and
insb
sbb
inc
cmp
mov
mov
mov
sbb
dec
int
or
jbe
push
push
cmp
cmp
sti
lret
loop
cmp
sbb
test
ret
popf
mov
rolb
sub
mov
inc
aam
mov
orl
sbb
mov
sub
gs
pop
std
cs
sarb
rcr
pop
cmp
sub
cltd
idiv
jmp
xor
xchg
lret
data16
dec
pop
sub
mov
mov
lret
in
rol
popf
jb
pop
sub
push
fimuls
mov
fnsave
jo
iret
bnd
cmp
dec
nop
dec
cld
shrb
inc
cld
fidivrs
negb
sbb
pop
push
adc
xchg
stos
enter
xor
jo
inc
mov
mov
ljmp
push
cmp
orl
fadds
jecxz
mov
das
leave
jo
sub
and
dec
daa
aam
pop
push
jns
jns
sti
cmp
push
test
pop
jb
imul
fisttpll
dec
movsl
test
and
stos
jge
or
pcmpgtb
outsb
insb
into
fmull
shr
je
test
add
dec
in
and
sbb
or
repnz
jecxz
or
pop
das
test
test
mov
jge
ret
in
aaa
sbbl
insb
repnz
mov
lcall
jecxz
inc
repnz
cmp
es
lret
clc
jo
xchg
ret
fwait
mov
sahf
aam
push
fidivrs
adc
addl
or
cmp
or
dec
cmp
sub
dec
flds
aam
int
decl
fs
rclb
xchg
mov
in
pusha
xchg
xchg
jp
jne
jl
xor
shll
ret
jmp
cmp
mov
addr16
movsl
sbb
jbe
sbb
test
lds
shrb
sbb
out
test
int
loopne
sti
pusha
push
cmp
push
repz
data16
xor
jne
scas
add
xchg
int
scas
out
mov
outsl
jns
xlat
idivb
test
mov
fmull
movsl
cli
pop
or
mov
jmp
leave
nop
enter
pop
bound
cmp
shll
enter
movb
aas
mov
dec
add
mov
inc
dec
push
jmp
pop
movsl
fadd
loope
in
test
sub
sub
mov
sub
shlb
enter
fwait
cmp
add
rorb
aad
les
sbb
sub
out
cwtl
and
cmp
fistpl
jl
inc
in
dec
sub
xchg
data16
pop
mov
dec
lret
or
stc
pusha
fwait
cld
mov
xchg
xchg
inc
xor
lods
popa
movsb
sub
arpl
and
mov
jae
lea
pop
mov
dec
push
mov
add
neg
stos
stos
cmp
stos
stos
mov
or
bound
inc
enter
dec
and
and
call
cmp
adc
sub
lea
loopne
int3
pop
mov
push
subb
int
pop
mov
sub
pop
xchg
sar
loopne
nop
push
xchg
add
add
jne
test
or
mov
pop
loopne
arpl
data16
test
fcmovb
fstl
add
inc
outsb
test
add
or
imul
fwait
pop
mov
inc
movsb
pop
aad
pushf
out
inc
fnstcw
push
mov
arpl
daa
mov
mov
movl
arpl
mov
mov
cmp
repnz
mov
xor
cmp
nopl
xchg
cmp
nop
fdivrp
jp
mov
cmp
dec
ficoms
dec
pop
jae
inc
add
xchg
inc
add
inc
xchg
lahf
mov
mov
loopne
aad
repnz
sbb
dec
and
fidivrs
or
test
inc
pop
nop
jp
jne
cmp
cmp
or
daa
lcall
dec
aam
push
adc
or
jb
pop
mov
pop
cmp
stos
enter
mov
inc
dec
aad
xchg
xchg
test
pop
or
sub
dec
test
mov
gs
push
scas
and
mov
repnz
arpl
xlat
lcall
int3
xchg
push
xor
iret
cli
sbb
gs
mov
cmp
jl
jb
pusha
into
mov
dec
jmp
inc
mov
xchg
cmp
and
push
add
test
push
mov
les
mov
jb
dec
call
jg
lods
arpl
repnz
addr16
cmp
fcmove
call
pop
gs
repnz
xor
sbb
cmp
xor
mov
or
jp
sbb
test
mov
pop
jb
jnp
popf
popf
or
repnz
out
dec
pop
loopne
insl
ja
sti
out
jmp
ror
stos
out
mov
shl
cmp
stc
pushf
jp
add
gs
jb
subl
push
jle
call
xorb
sbb
pop
dec
or
cmp
insb
mov
xor
ljmp
adc
int
mov
jno
test
outsl
push
fwait
mov
nop
jl
mov
cmp
mov
clc
and
repnz
movsb
or
pop
pop
popa
loope
inc
jo
lods
scas
jbe
inc
shl
stos
and
aad
mov
mov
jo
lods
cli
mov
sbb
cmp
leave
enter
lret
lds
mov
insb
lcall
push
xchg
hlt
lahf
dec
shrl
xor
ficoms
mov
ret
repnz
mov
fld
mov
pop
add
mov
xchg
addr16
mov
sub
sub
decb
stos
pop
adc
shl
jp
call
inc
inc
pop
and
xchg
stc
cmp
stos
xchg
jl
push
nop
mov
mov
sub
mov
lahf
test
mov
stos
int3
cmp
lcall
sub
push
pusha
cmp
in
cmp
cli
xchg
push
push
sarl
adc
mov
cli
pop
push
sub
out
ljmp
ss
ds
mov
sti
adc
inc
loope
pop
xor
or
mov
in
mov
sbb
aad
dec
addr16
into
mov
ja
sbb
cli
pop
dec
push
shll
or
or
out
xor
adc
inc
inc
insl
fcompl
pop
imul
adc
in
cmp
into
adc
push
cmp
fistl
adcl
jmp
shrl
push
jecxz
fidivl
iret
sbb
mov
cmp
xlat
push
jnp
mov
pushf
cmp
or
sbb
dec
cmp
sbb
jae
hlt
jmp
repnz
dec
cld
addr16
push
or
lcall
lcall
pop
sbb
in
inc
dec
cltd
notb
test
mov
test
addr16
cld
mov
lret
mov
xchg
iret
ljmp
int
sub
aad
je
test
in
pop
les
jmp
cmp
cmp
inc
mov
fimuls
lds
insb
jbe
add
and
inc
add
popf
arpl
xchg
pusha
mov
call
xor
xchg
or
shll
lret
ds
pop
rorl
stc
popa
sub
mov
mov
sbb
add
mov
add
scas
push
loop
xor
popa
pop
jo
pop
jl
dec
sbb
repz
cmp
and
sbb
mov
enter
jae
jbe
sti
push
inc
iret
int
in
outsl
or
or
in
mov
push
cld
call
dec
add
xchg
je
addr16
fimull
aad
insb
jmp
mov
fcoml
and
add
and
pop
xlat
push
shl
jp
test
test
cmp
loopne
cli
iret
xor
repnz
mov
shll
icebp
icebp
adc
mov
add
inc
cmp
scas
mov
mov
andb
loope
dec
dec
sbb
push
ffree
xchg
rorb
leave
cmp
enter
imul
dec
xchg
add
pop
ret
xor
cmp
jns
xor
or
cmp
int3
int
lds
dec
pop
sbb
sti
and
mov
inc
leave
and
mov
dec
sahf
cld
pop
mov
cmp
inc
inc
dec
stc
mov
jb
and
andl
repnz
inc
mov
stc
scas
push
scas
pushf
shll
or
aad
dec
cld
mov
cmp
add
addl
arpl
adc
lock
sti
aam
xor
push
jno
xchg
sti
aam
insl
mov
xchg
inc
mov
ja
jl
sbb
aad
jge
jp
cmp
mov
sbb
enter
iret
mov
aad
dec
xor
jbe
rcrb
popf
or
cmp
enter
insb
mov
shll
or
jmp
xchg
xor
rcr
cmp
xchg
push
add
and
fistl
es
pop
aad
add
clc
pop
sbb
roll
jecxz
cmp
sub
sub
add
aam
repnz
fsubs
insb
int
jno
ret
jnp
sub
pop
loope
stos
rorl
std
icebp
pop
jge
mov
loopne
lahf
push
aas
repz
cmp
sub
aaa
jne
adc
adc
mov
ljmp
scas
shr
jg
mov
add
xlat
fadds
enter
sbb
sbb
mov
decl
push
pop
mov
sbb
cmp
lcall
add
and
sbb
sub
in
je
shlb
dec
notl
ljmp
cmp
lcall
or
dec
notl
icebp
loope
ret
xor
cli
xor
xchg
cld
push
sub
js
push
lret
mov
ret
fstps
adc
addr16
fwait
mov
mov
or
lock
dec
xchg
push
test
movl
in
pop
sub
fcmovne
test
je
nop
daa
cs
xchg
cmp
popf
sub
mov
cld
in
loopne
pop
lcall
aas
cmc
icebp
je
cmp
push
sub
movsl
and
cmp
psubb
loope
cltd
stos
aam
test
aad
jnp
push
xor
pop
mov
pop
inc
mov
or
xor
pop
cmp
sub
push
xor
jno
xor
icebp
push
xor
lcall
jl
or
addb
mov
sarb
repnz
xchg
pop
cmp
movsl
cmpl
inc
inc
fisttpll
lods
pop
sahf
pop
test
sbb
cwtl
xchg
stc
cmp
cmp
iret
jb
adc
rcrl
negl
fistl
mov
std
add
lret
mov
popa
mov
dec
loopne
pushf
sub
xchg
inc
inc
sub
rol
pop
inc
pop
adc
or
mov
xlat
mov
inc
mov
jb
pop
clc
sar
jo
dec
jns
add
sub
test
xchg
stos
xchg
lret
stc
pop
loope
mov
cli
push
bsf
mov
cmp
add
and
insb
cmp
sbb
std
mov
xor
xchg
int3
int3
mov
sti
or
lods
push
pop
dec
xchg
xor
sbb
cmpsl
or
loopne
jo
in
cmp
pop
cld
sbb
jb
jnp
ret
fwait
scas
and
outsl
mov
mov
aad
mov
imul
cld
out
stc
in
cmp
pop
xchg
popf
xorb
incb
test
addl
dec
jl
pop
mov
mov
pop
xlat
repnz
fs
popa
sub
mov
bound
mov
inc
adc
sub
dec
mov
or
mov
add
inc
mov
pop
leave
jle
mov
pop
iret
stos
xor
jecxz
cmpb
repnz
sti
cmp
cmp
in
ret
dec
fmuls
jl
vunpckhps
mov
push
rolb
mulb
mov
mov
movsb
mov
or
mov
or
inc
ret
and
cs
and
mov
sub
sbb
addr16
stc
mov
mov
aam
inc
outsl
iret
jnp,pt
cmp
or
push
and
dec
adc
das
pop
sub
sbb
push
ljmp
cmp
mov
push
jb
push
adc
outsb
rol
inc
add
sbb
mov
mov
cmp
popf
popf
push
lods
jo
jb
cmpb
jo
movsl
mov
mov
stos
call
pushf
mov
add
inc
mov
sbb
out
insb
lds
lods
lods
cmp
ja
sbb
mov
jl
lahf
shlb
mov
popf
test
scas
xchg
sbb
jl
inc
push
jg
pop
adc
imul
js
enter
pop
mov
inc
outsb
outsl
add
dec
jp
icebp
fidivs
xchg
mov
flds
leave
xchg
push
mov
jnp
ljmp
sbb
mov
jo
jp
jecxz
xor
inc
ret
cwtl
and
cmpsl
enter
es
clc
scas
sub
xor
repnz
addr16
negb
jmp
loope
push
scas
decb
cmp
xchg
mov
push
jl
cli
mov
jns
cli
jbe
dec
std
loopne
pop
sti
jge
mov
lcall
out
faddl
jmp
scas
mov
call
sarl
ficompl
ret
xchg
shll
jge
add
xor
lret
inc
mov
fstps
push
fcomps
cmp
mov
iret
sbb
inc
add
out
into
out
sub
shlb
rolb
aam
aad
in
cwtl
pop
cmp
sahf
addl
sbb
and
lods
mov
mov
iret
sbb
shlb
cwtl
mov
mov
fisubrs
ja
into
outsl
sbb
mov
cmp
fnstcw
mov
inc
jmp
lret
pop
mov
cmp
rol
cmpsl
stc
jmp
and
and
out
mov
mov
or
mov
push
stos
rcr
add
jns
hlt
out
subb
loop
das
cld
int3
inc
mov
mov
push
loope
mov
insl
cmpsl
xchg
xor
in
lods
test
gs
mov
sbbl
rorl
in
imul
nop
in
xlat
mov
hlt
cwtl
shll
mov
jne
adc
pop
mov
inc
leave
lcall
sub
xor
inc
add
mov
push
mov
scas
call
dec
fsubrl
pop
js
jge
sbb
fdiv
sbbb
jle
fdiv
in
cmp
mov
or
cmp
jp
sub
scas
inc
sbbb
popf
pop
cli
imul
jge
repnz
cltd
cmp
movsl
mov
out
test
int3
xchg
and
inc
addb
adc
movb
in
es
pop
pop
cmp
cli
stos
cmp
xchg
repnz
pop
push
arpl
das
shl
inc
daa
or
insb
mov
mov
push
imul
dec
popa
fnstsw
iret
mov
pop
out
fdivrp
ds
ds
enter
js
lret
cmp
adc
dec
jnp
mov
mov
jp
xchg
inc
das
adc
dec
test
push
sub
pop
aas
ja
pop
dec
sbb
cld
stos
out
cs
or
scas
incl
pop
push
push
aaa
or
cmp
xlat
inc
xchg
iret
loope
shl
add
int3
mov
leave
pop
jp
mov
jbe
xchg
aaa
jge
add
cmp
mov
add
ret
fcmove
xchg
lret
cmpsl
mov
stos
repnz
test
lods
and
lcall
hlt
test
jmp
lods
mov
sarb
cmp
mov
aam
ret
xchg
xlat
insl
sahf
insb
out
pop
mov
xchg
cmpsl
sbbb
push
mov
addr16
push
lods
fsubl
mov
repnz
ret
test
mov
pusha
pop
add
fldt
fidivs
mov
daa
dec
sarl
adc
lret
pop
adcb
push
scas
add
push
shll
clc
sbb
and
out
xchg
and
jle
or
aam
pop
dec
data16
in
fcomps
push
inc
in
xor
push
jge
mov
cltd
xor
mov
out
add
and
out
mov
roll
mov
dec
inc
sbb
sub
mov
aaa
jns
and
rcrl
sbb
test
or
lret
jg
push
or
sub
and
xchg
push
cmp
xchg
in
mov
test
jb
inc
mov
inc
fsub
sbb
fdivrl
or
or
test
ljmp
stc
jmp
cmp
xchg
gs
cmpsl
add
mov
cmp
dec
inc
xchg
movsl
in
jmp
enter
ljmp
lret
xchg
add
repnz
add
or
stc
xchg
fs
fstpt
mov
bound
inc
addr16
mov
rcrl
imul
fsts
es
mov
adc
xlat
sbb
mov
adc
mov
leave
or
fbld
pop
sub
ds
dec
xchg
xor
ret
lret
ljmp
push
roll
outsb
xchg
push
fsub
mov
scas
dec
or
sarb
lock
decl
push
xor
fsubl
xchg
inc
and
lret
lret
loope
lods
sbb
test
lret
iret
pop
mov
jnp
cmc
mov
add
je
ds
pushf
jae
xchg
xchg
and
int3
xlat
ljmp
or
fld
sbb
jmp
mov
xor
arpl
pop
aaa
idivl
pop
cmp
out
add
ficomps
dec
pop
mov
call
mov
push
mov
fimuls
jl
shlb
test
mov
sbb
add
jle
mov
lods
int
xchg
or
jle
test
xchg
and
add
pop
or
pop
jnp
sbb
xor
dec
lret
bound
fdivl
movsl
push
xor
jle
jns
sti
lds
nop
test
push
mov
pop
mov
fstpt
outsb
add
in
fldcw
dec
push
test
ss
fs
rolb
jns
out
lods
dec
lods
jno
out
aam
aas
mov
mov
test
inc
movl
xlat
mov
cli
push
xor
js
insb
pop
loopne
xlat
in
aas
mov
add
mov
mov
lds
stc
ljmp
ja
cmp
arpl
dec
pop
mov
insb
stc
cltd
cmpl
lret
pop
sti
xlat
cld
cmpsl
call
insb
nop
mov
sub
push
cmp
stc
sti
lock
das
and
dec
iret
sbb
addr16
push
fisubrs
rcll
push
inc
add
cwtl
mov
cli
fsubrl
insl
cltd
jns
scas
dec
or
jmp
add
bnd
aas
shll
pushf
mov
adc
cmp
lcall
cmp
in
test
int
cli
pop
cltd
faddl
mov
cmp
vcvttss2si
popf
push
aam
add
fcompl
mov
sbb
xor
cmp
fldcw
mov
ret
inc
int3
jmp
jo
pop
jle
es
mov
adc
and
iret
or
xor
fstps
and
mov
mov
pop
push
fmull
xor
dec
lds
lods
lods
mov
into
lock
mov
inc
cli
in
loopne
jb
call
push
jnp
push
arpl
cwtl
xchg
loopne
mov
xor
jo
repnz
pop
aam
mov
and
add
adc
sbb
test
test
xlat
cwtl
leave
daa
iret
pop
mov
mov
mov
jo
jnp
fs
pop
pop
xor
sbb
cmp
inc
add
sbb
and
imul
lret
test
mov
stc
adc
aam
jae
cmp
mov
bound
cmpsl
jns
dec
rclb
icebp
lret
clc
loop
mov
jecxz
jg
pushf
inc
push
insl
sub
xlat
cmp
movsb
cmpsl
iret
subl
mov
test
adc
fs
lret
enter
lcall
ret
and
mov
xchg
cmp
addb
mov
cli
rcrb
push
push
insb
push
ljmp
mov
or
pop
sbb
jl
pop
jle
mov
pop
daa
pop
filds
gs
sub
adc
movsb
lock
cltd
sub
bnd
shll
fcomi
mov
sub
push
int3
jns
lret
leave
popf
or
cltd
cmp
sbb
mov
lods
mov
cmc
shrl
dec
lret
iret
hlt
repnz
cmp
mov
or
xchg
xor
stos
mov
mov
inc
das
mov
adc
cld
add
int
sbb
inc
pop
or
push
add
cwtl
cmpsl
adc
jl
fwait
jns
or
loop
pop
dec
cli
dec
mov
imul
popf
fidivrs
lcall
popf
test
cmp
sbb
xchg
stc
das
adc
inc
sbbl
adcl
cld
sub
js
sub
mov
testl
les
ret
out
cmp
dec
stc
repnz
leave
add
out
jg
sub
xor
and
pusha
mov
in
dec
rorb
cltd
pop
dec
fisttpl
xchg
addr16
jg
outsl
mov
dec
inc
mov
js
idiv
cmp
mov
pop
mov
pop
stc
xchg
add
mov
fsubrp
inc
and
sub
adc
daa
or
mov
loop
testl
push
xor
adc
lods
lahf
dec
xor
add
dec
movsl
xchg
lret
push
dec
outsb
clc
xchg
les
loop
push
inc
cmp
movsl
xchg
ja
and
sub
flds
into
xlat
sbb
lret
daa
jp
scas
enter
jo
dec
add
mov
aam
rcl
cwtl
in
pop
sub
std
faddl
loop
add
sub
js
and
xor
mov
or
jl
mov
mov
add
jno
add
push
push
ds
mov
sbb
pop
mov
cmp
xchg
mov
lea
les
pop
outsb
in
fcmovnb
and
push
jge
andl
mov
rol
popf
dec
cmc
sbb
pop
jmp
mov
mov
data16
jecxz
dec
pop
xchg
cmp
xchg
fimull
imul
mov
push
mov
sbb
sbb
lods
xchg
or
jge
lds
stc
inc
pop
shll
add
arpl
iret
mov
mov
fadd
std
lret
stc
lret
lods
popf
xchg
add
rcl
sbbl
fwait
dec
mov
inc
sahf
rorb
sub
add
aas
xor
repnz
dec
shlb
push
xlat
adc
push
rcl
mov
push
cld
jmp
adc
xor
pop
test
dec
add
mov
add
add
sbb
mov
mov
aas
sti
les
cmp
int3
test
xchg
hlt
mov
mov
lods
es
push
cli
lahf
dec
dec
ror
mov
push
test
jle
dec
subl
jns
out
cli
cmp
dec
les
popa
sub
jne
push
xchg
or
xlat
ret
pop
xor
mov
lds
cs
and
pushf
insb
das
inc
sarl
faddp
lahf
sbb
in
inc
pusha
push
pop
lret
adc
mov
xlat
or
sbb
repz
lahf
pop
test
out
sbb
cmp
test
lret
or
int3
aaa
pop
mov
sub
cmp
ret
in
push
ficompl
pop
xor
xchg
push
mov
divl
cwtl
jb
test
inc
cwtl
les
mov
push
mov
sub
or
cmp
xlat
xchg
or
push
popf
dec
mov
push
mov
push
out
jp
pop
mov
push
xor
rclb
push
push
test
ficoml
lret
std
mov
pop
sub
sub
js
lea
in
inc
lret
xchg
gs
fsub
mov
rcl
repnz
adc
popf
mov
mov
daa
cwtl
push
dec
mov
and
cmp
fs
cmp
xlat
dec
adc
repz
sbbb
movsl
fstps
mov
stos
jne
jno
ficoms
fabs
add
rcl
dec
rcl
stc
pop
xlat
mov
es
leave
adc
int3
jp
add
addr16
mov
das
jnp
mov
fsubl
pop
pushf
rorb
rcrl
cmpsb
jmp
adc
push
adc
nop
andb
fstps
mov
mov
jb
sub
cmpsl
dec
repnz
sub
fmuls
es
fsubp
ret
std
or
ljmp
mov
int
setp
sub
mov
lcall
mov
cltd
outsb
cmpsb
inc
push
int3
xor
lret
lret
mov
jnp
sub
xor
push
cmp
fsts
in
push
mov
mov
outsl
mov
sub
inc
cli
jle
dec
stc
sbb
push
xchg
js
pop
mov
fidivrs
ds
sub
add
pusha
ret
mov
adc
shlb
xlat
es
jb
mov
mov
xchg
push
test
mov
rolb
outsl
cmp
test
cs
add
movsb
movsl
test
clc
xorl
repnz
and
inc
cltd
scas
inc
ficoml
insb
sub
sbb
mov
sub
mov
add
sbb
sbb
sub
fsts
sbb
mov
sub
aaa
mov
loope
xchg
xorl
mov
lds
rcl
pop
add
dec
and
fwait
mov
clc
xor
sub
push
in
jo
cli
push
dec
jno
mov
pop
cmpsb
in
sub
inc
cwtl
das
fsubr
sub
das
mov
lea
imul
mov
fldt
insb
cmp
fsts
movsb
fcmove
mov
push
jp
repnz
sar
pop
jl
pop
lock
cs
pop
push
or
mov
lret
xchg
xchg
fmull
xor
xchg
push
jge
add
cli
add
push
mov
imul
sahf
sbb
fdiv
les
inc
or
flds
mov
inc
std
out
push
mov
dec
rorb
cmpsl
test
cmp
pop
outsl
fimull
push
shrl
stc
dec
bound
xchg
ret
movb
xlat
sbb
cmp
stos
mov
rol
push
xchg
mov
jle
mov
loopne
ret
lret
push
inc
or
popf
xchg
mov
int
popf
mov
pop
fbstp
cmp
inc
pushf
dec
lret
fs
adc
pop
and
pop
mov
cli
sbb
add
mov
dec
pop
aam
mov
mov
fcmovu
iret
pop
lcall
cwtl
cld
or
stc
mov
cli
sbb
inc
jmp
scas
add
mov
ret
cmc
mov
enter
adc
loope
xchg
testb
and
incb
popf
jg
in
clc
ret
dec
sbb
sahf
dec
inc
inc
xchg
ret
inc
lcall
sbbl
loope
or
xchg
pop
cltd
adc
xlat
and
scas
loope
mov
adc
inc
loopne
dec
cld
xchg
or
mov
inc
outsb
jle
cmp
and
aam
mov
sbb
mov
or
cmp
cmp
stc
cmp
out
pop
mov
push
add
dec
adc
cmp
arpl
jno
adc
or
iret
jne
lret
push
sub
mov
adc
and
adc
enter
cmpsb
iret
pop
cwtl
or
mov
dec
leave
test
cmpsl
ja
xchg
ret
clc
cmc
mov
xor
loopne
ljmp
cmpsl
imul
rorl
loope
inc
cmc
xor
jle
cmpsl
mov
add
dec
mov
mov
clc
mov
jbe
lds
sub
pop
fildll
std
add
out
int3
cmp
lea
inc
xchg
xor
push
inc
mov
pop
sahf
mov
pop
add
jnp
clc
push
sbbl
jne
cmp
cld
mov
sbb
stc
adc
mov
mov
mov
stc
repnz
dec
sbb
loope
sub
jo
test
cmp
xchg
and
jmp
xor
xchg
aad
leave
cli
xchg
and
add
dec
dec
enter
lret
inc
movb
and
mov
pop
cld
roll
loop
pusha
scas
mov
fs
ss
add
rol
hlt
fnop
mov
imul
mov
sbb
push
fcoms
shrl
inc
adc
dec
push
pop
push
add
out
dec
push
mov
insb
loopne
movsb
ret
xchg
pop
data16
add
add
mov
fisubrs
push
pop
ficoml
fadds
shr
cmpsb
insl
mov
cli
enter
mov
mov
jne
test
mov
lds
pop
push
ret
pop
adc
loopne
add
add
xlat
mov
add
mov
gs
pop
add
jecxz
ror
mov
xor
into
dec
pop
scas
jb
push
cmpsl
lcall
pop
jns
jle
cmp
popa
lods
aaa
inc
cmp
add
adc
rorl
lcall
pop
adc
xor
outsl
inc
pop
pop
xor
neg
sbb
ja
nop
pop
cwtl
mov
mov
xchg
mov
mov
loop
sbb
test
cmp
cmp
call
stos
dec
pop
or
jp
jmp
push
in
push
clc
xor
jno
xchg
cli
ficoml
jecxz
mov
leave
popf
add
stc
mov
push
loopne
dec
fmuls
enter
addr16
iret
dec
and
xorl
cltd
int3
into
push
lcall
shll
sbb
in
mov
movsb
aad
or
mov
xchg
out
js
inc
cmpps
or
cld
pop
xchg
mov
inc
sub
inc
fs
jge
sbb
push
or
add
mov
xor
fisubl
sbb
loopne
daa
sub
stc
inc
pop
jp
popf
addl
movsb
cs
mov
adc
dec
sbb
mov
and
fwait
push
push
nop
mov
jno
mov
cmc
push
fsubr
mull
add
std
adc
sub
inc
push
inc
sub
add
sub
idivl
ja
sbb
mov
or
orl
adc
lods
dec
cltd
push
sub
adc
enter
xor
jmp
fld
mov
bound
push
lods
imul
xchg
and
sbb
jae
cs
fbld
movsb
adc
mov
movsb
sub
addr16
iret
addr16
or
cld
scas
enter
pop
test
mov
adc
rolb
lds
mov
ja
mov
lret
or
push
int
in
or
movsb
push
repnz
inc
jns
lods
mov
cltd
mov
mov
outsl
add
cmp
and
lods
hlt
or
in
inc
ss
pop
cmpsl
iret
xchg
lahf
xchg
adc
daa
pusha
cld
movb
bound
sub
dec
shlb
and
or
jg
test
stc
popa
xor
test
loope
leave
mov
fmull
addb
sbb
sbb
cmp
xchg
loope
inc
imulb
inc
popf
inc
jo
lret
data16
pop
test
call
lret
jle
sub
fldcw
pushf
leave
sub
test
pop
jl
ds
lcall
int3
mov
jbe
pop
xchg
cwtl
ret
mov
lds
iret
repnz
pop
int3
adc
sub
rclb
sbb
aam
in
mov
lret
xor
inc
fimull
stc
mov
std
mov
push
push
mov
mov
adc
mov
sbb
adc
cmp
xchg
shll
or
fadd
iret
pop
popf
mov
add
in
cmp
or
sbb
and
jnp
sahf
popf
adc
sbb
or
cli
push
aad
cmp
cmp
xchg
aad
stos
cmpb
enter
xchg
es
or
push
in
lock
imul
popl
push
inc
xchg
sbb
stc
fisubs
test
mov
lock
js
xchg
nop
test
xchg
movsb
mov
lahf
mov
lret
inc
fldl
loopne
push
push
inc
push
fdivrl
cmpsl
jmp
pop
cmc
out
xlat
mov
mov
popa
xchg
sbb
fiaddl
adcl
lcall
stos
lods
xor
push
mov
loopne
or
repz
fmuls
into
or
xor
outsl
xor
aaa
mov
enter
jl
ljmp
pop
js
jne,pt
fildll
aad
into
jbe
les
roll
and
or
mov
arpl
dec
fistl
inc
mov
pop
xchg
xchg
nop
add
jnp
lret
in
cmc
lcall
pop
lock
addr16
clc
fsubl
mov
or
dec
and
or
out
inc
int3
jmp
cmp
fmull
mulb
mov
dec
push
mov
sub
popf
scas
dec
sub
add
inc
gs
lods
inc
push
pop
cmpl
add
push
mov
insl
inc
int3
faddp
data16
add
push
ss
mov
jmp
pop
or
add
mov
popa
out
sbb
movsl
sbb
or
fnstenv
jb
push
imul
jmp
mul
or
lcall
jne
scas
xchg
xor
test
stc
or
mov
jnp
loop
loop
jl
enter
lods
lret
pop
jns
and
jp
fsubl
stc
dec
push
jae
roll
test
mov
xor
inc
jp
jb
test
inc
ljmp
jmp
ret
inc
inc
push
enter
sub
dec
scas
sub
je
movsl
es
xchg
xor
int
jbe
rclb
sub
add
jne
push
ret
jecxz
cmp
inc
in
xchg
push
pusha
inc
dec
insl
mov
mov
xlat
jge
push
jp
cld
call
mov
fdivl
sub
mov
sub
cmp
enter
daa
adc
mov
sbb
mov
fldenv
addr16
cmpsl
outsl
mov
lahf
jns
mov
out
popa
nop
test
xor
mov
mov
popa
enter
and
fld
adc
inc
mov
push
mov
fwait
int
cmp
pop
push
popa
je
mov
outsl
movsl
pop
test
sti
sub
in
push
inc
push
inc
xor
int3
or
mov
fcomps
adc
sbb
inc
fnstcw
aam
call
cwtl
int3
pop
xchg
jg
cmp
or
push
daa
jp
mov
gs
jne
addr16
and
pop
jns
out
mov
ret
mov
pop
lods
xchg
cmp
orb
xor
add
adc
mov
ret
and
xchg
push
and
bswap
xchg
pop
sahf
inc
nop
and
sbb
nop
popf
mov
add
jl
adc
inc
pop
sbbl
pop
xor
mov
aam
jg
inc
push
mov
dec
dec
dec
mov
pop
repnz
aam
les
shll
insb
cmpsl
push
arpl
inc
loope
repnz
xor
inc
push
js
gs
mov
push
dec
pop
cmp
jmp
xchg
inc
enter
mov
insb
mov
mov
inc
sbb
xor
pop
popf
paddw
iret
repnz
insl
call
xchg
dec
fstpl
dec
leave
test
aad
je
xor
lea
pop
and
mov
and
mov
mov
mov
adc
cs
les
xchg
and
xadd
lar
push
push
jno
in
aas
cmp
mov
sub
addr16
lcall
idiv
fdivs
fsubl
mov
shr
pop
jno
sub
addr16
push
push
addr16
lret
imul
addb
dec
int3
mov
jb
push
cmp
insl
leave
push
inc
jge
mov
enter
es
inc
loopne
insl
insl
jns
lock
sbb
icebp
cmpl
mov
call
cli
lods
xchg
inc
pop
dec
mov
pop
cmp
dec
or
sbb
dec
dec
or
add
stc
add
ret
xor
fs
cmp
fdivrs
stc
push
sub
imul
out
rcr
dec
sbb
inc
sbb
in
mov
lcall
and
clc
jmp
loopne
sub
push
out
fldcw
fdivl
inc
mov
lret
or
adc
adc
inc
inc
lcall
lcallw
lret
lret
xor
ror
push
daa
jg
jmp
xchg
xchg
cmp
cmp
mov
scas
loope
test
jbe
adcb
mov
lds
and
adc
sbb
in
mov
mov
cmpb
movsl
out
inc
cmp
cmp
stc
cld
mov
push
sub
dec
cmp
mov
inc
in
mov
imul
fs
or
ret
xlat
and
js
push
mov
outsl
mov
or
or
fnstcw
xor
fcoml
inc
xchg
ss
pop
inc
push
cld
addr16
testl
daa
sbbb
fadds
shrb
xchg
lcall
inc
movsl
xlat
test
cmp
movsb
outsl
push
pop
pop
int
pop
mov
pop
inc
mov
jns
pop
push
int3
inc
clc
stc
rorb
dec
int
mov
add
xor
leave
mov
int
fmul
test
aam
pop
mov
mov
or
ret
xchg
lcall
or
das
fdivrs
jmp
roll
movsl
and
sub
shll
leave
cli
add
jmp
push
aad
push
xchg
jmp
jp
mov
repnz
inc
sub
mov
pop
sub
movsl
rcrl
mov
jecxz
gs
jmp
loopne
shll
inc
sub
imul
outsb
mov
rcrb
enter
inc
mov
rolb
cmp
push
stos
jb
mov
aam
test
push
cld
cmp
stos
xorb
pushf
sbb
jle
cmp
sub
lods
and
aad
push
cmp
lods
cs
aad
xlat
cmc
jle
add
mov
dec
das
mov
mov
out
out
push
mov
dec
fimuls
jp
popf
add
test
roll
inc
xchg
inc
lret
sbbb
call
fstpt
push
cmpl
nop
push
roll
xchg
iret
jle
cld
cmp
cmpb
xchg
fdivs
int
call
imul
push
mov
push
fiadds
mov
ror
xchg
syscall
mov
lods
mov
jb
dec
add
mov
lcall
cld
xchg
sbb
mov
cld
dec
push
jmp
inc
shll
jl
roll
or
fnstenv
or
in
sbb
pop
xchg
xchg
push
int
lcall
lods
pusha
xchg
push
ret
movsb
dec
sbb
add
andb
xor
or
iret
jmp
inc
xor
pop
inc
mov
mov
cltd
loopne
add
repnz
cmpsl
mov
popa
fcompl
insl
ss
das
mov
pop
push
cwtl
or
ret
sahf
arpl
mov
dec
add
inc
mov
add
dec
xor
repnz
jl
mov
mov
lds
int3
loope
sarb
mov
and
dec
pop
add
mov
mov
mov
fsts
subl
popf
xchg
mov
fnstenv
mov
mov
inc
inc
mov
lods
nop
mov
pop
dec
imul
sbb
pop
mov
push
add
inc
mov
jb
mov
push
aad
xchg
loopne
je
iret
jmp
mov
int
inc
sbb
or
cmp
push
sbb
dec
pop
out
call
nop
int
jb
int
xor
addl
inc
dec
int3
testl
dec
lcall
mov
bound
int3
and
stc
sbb
push
mov
lds
jl
and
or
test
enter
test
flds
sub
and
adc
inc
xor
and
sti
mov
xlat
inc
adc
mov
xchg
push
pop
xchg
add
inc
lret
pop
dec
push
clc
ror
popf
xor
ret
sbb
cmc
pop
fnstenv
lahf
addr16
mov
mov
stc
repnz
pusha
lret
lods
movl
sub
push
stc
rol
add
stc
sub
sbb
outsb
frstor
cmp
ficoms
jbe
push
mov
rcll
sbbb
xor
pop
aaa
lret
out
dec
loopne
leave
inc
mov
dec
jl
repnz
repnz
ret
movsl
sarb
pop
mov
push
ficoml
mov
les
jne
int
pushf
shrb
dec
loop
pop
mov
xchg
inc
into
and
or
test
inc
ljmp
jns
mov
idivl
add
xchg
cmpsl
bound
or
leave
add
inc
inc
nop
int3
int
lcall
shll
push
cli
mov
enter
mov
sbb
aad
fiadds
dec
out
cmp
pop
out
or
arpl
xchg
icebp
xlat
push
cld
in
fcoml
pushf
aad
mov
je
sub
or
insb
mov
ss
movb
push
adc
jl
xchg
rorl
jne
mov
scas
insl
push
jnp
dec
push
fldt
sar
mov
push
cld
dec
repz
xchg
cmp
fmull
outsl
add
jb
out
lahf
bound
adc
push
pop
hlt
pop
outsl
mov
mov
addb
enter
nop
stc
xchg
cmp
jae
pop
sub
dec
push
mov
stc
cmpsl
or
push
fldcw
inc
scas
cmc
les
aaa
imul
lret
in
mov
into
or
jae
movl
mov
mov
push
push
mov
out
mov
in
xchg
sub
adc
dec
shrb
fs
in
cmpsl
adc
arpl
aam
adc
sub
sbb
cmpsl
cmpsl
jmp
xor
pop
mov
js
dec
test
fldt
and
sub
and
adc
mov
sub
pop
jecxz
fucomi
lcall
xchg
mov
les
das
sbb
mov
repnz
or
inc
stc
test
loop
ljmp
inc
cmpsb
test
movl
and
push
loop
xor
lcall
lods
sarl
ret
mov
hlt
jecxz
sub
and
fstpt
mov
pop
jmp
ljmp
mov
mov
push
lret
mov
or
dec
adc
sub
or
add
cli
jmp
into
cmp
push
lret
insb
lcall
mov
inc
jne
mov
push
cmp
loopne
pop
mov
jg
pop
iret
fldcw
movsb
jg
dec
pushf
hlt
and
mov
in
and
leave
aas
ds
fistps
out
pusha
shrl
inc
sub
mov
push
jne
cld
jo
testl
in
outsb
nop
inc
push
stc
xorb
jg
fs
lds
and
pop
cmpsb
adc
lods
fildl
add
and
sets
lods
pop
stc
mov
dec
int3
sbb
addr16
sub
xchg
insb
loop
sarb
fcoms
sbb
xor
scas
jl
test
jbe
loopne
daa
add
cmpsl
inc
cmpsl
icebp
jo
fwait
stc
add
jle
or
fld
mov
je
xchg
imul
scas
test
mov
mov
ja
xchg
ret
push
mov
mov
sar
jp
fmull
cwtl
jg
lds
sub
push
cltd
mov
loopne
xchg
jl
pop
sbb
jns
test
nop
and
sbb
addr16
and
push
inc
lock
stos
adc
push
int
cld
sub
mov
sbb
cmp
aad
jle
js
ds
fwait
and
add
sahf
push
mov
inc
xchg
nop
inc
repnz
cld
in
push
mov
imul
fcompl
push
cmpsb
pop
lret
push
dec
jne
xor
scas
mov
xor
add
add
ja
push
xorb
aas
loope
sti
or
clc
aam
gs
lcall
dec
int3
fmul
pop
cwtl
ljmp
dec
cmp
loopne
std
es
xor
cs
aad
push
cld
sbb
xchg
mov
orl
and
lcall
pop
test
and
pop
aad
jbe
jbe
imul
or
addr16
out
xor
xchg
and
hlt
pushf
in
imul
mov
ja
cmp
lcall
inc
lods
cmpsb
mov
pop
cmp
push
scas
jbe
cmc
mov
mov
dec
aaa
xor
mov
pop
push
enter
fcompl
aam
int3
int3
pop
lret
test
pop
enter
jge
mov
mov
push
jmp
cmpsl
sets
or
xorl
sub
sbb
pop
sbb
adc
lock
aad
push
enter
popf
jb
pop
stos
fstpl
push
cmp
dec
push
movsb
adc
cmp
pop
push
bound
fisubs
cwtl
jle
cltd
mov
jmp
inc
jnp
jle
mov
sbb
enter
call
sub
in
and
dec
out
cmp
push
sbb
repnz
loope
lods
popa
or
push
mov
jp
daa
xchg
push
push
cmp
or
aad
fisttpll
or
lret
lcall
jmp
sub
shl
out
and
ds
jecxz
adc
xchg
add
xlat
shrb
mov
aam
xlat
lret
sub
lods
sahf
popf
dec
popa
mov
enter
imul
sub
adc
out
push
mov
mov
inc
push
mov
sub
inc
cmp
add
pop
jl
cmp
xchg
stc
int3
mov
int
int
dec
push
cmpl
xchg
ret
enter
fidivrs
adc
dec
icebp
rcrb
xlat
dec
dec
js
pop
mov
mov
nop
add
adc
push
jns
xchg
les
sub
push
int3
adc
sub
repnz
mov
push
dec
jge
fisttpll
fwait
dec
mov
pop
pop
add
test
sub
lcall
test
dec
jecxz
mov
push
push
int
dec
fs
or
popf
std
add
push
loop
movsb
inc
sub
mov
mov
iret
call
lret
and
in
cmpsl
pop
jb
movsb
jb
xor
popf
add
cld
fcmovne
mov
sub
mov
xlat
cmp
push
popf
repnz
add
jp
int3
add
sbb
int
jl
pop
mov
mov
and
insl
dec
subb
cltd
cmp
imul
test
in
adc
inc
pop
lods
out
ja
mov
lea
mov
jmp
cltd
roll
mov
fs
in
call
xchg
xor
cmove
fsubs
pop
mov
xchg
adc
mov
push
test
fadds
lds
andb
dec
mov
sbb
push
imul
cmp
cli
repnz
pop
adc
jle
cld
sub
leave
enter
xchg
or
or
pop
add
call
xor
int
and
xchg
shrb
imul
cmp
dec
mov
cmp
or
add
mov
or
jl
addr16
pop
daa
mov
inc
inc
jae
cmpsl
sub
cmpsl
jmp
inc
dec
lea
in
out
dec
cmpsl
xor
jecxz
fisttpl
push
pop
fidivrl
xchg
sub
jl
jge
es
pop
xchg
stc
in
imul
cmp
ss
pop
clc
sub
loopne
add
sub
frstor
xchg
mov
adc
jl
loopne
lret
dec
jl
les
sbb
fnstenv
stos
xor
dec
or
or
dec
stc
outsb
pop
pop
addr16
cli
pop
aas
and
adc
cmp
imul
dec
pop
repnz
daa
pop
inc
jne
popf
and
stos
push
outsl
enter
jl
push
ss
test
nop
ja
dec
stos
jbe
ret
orl
push
xor
mov
push
rorl
repnz
pusha
stos
call
push
in
cltd
cmpsl
mov
xor
or
stc
xor
jae
sub
int3
cwtl
scas
push
enter
jne
push
aam
gs
jmp
popa
and
cltd
cmp
clc
and
in
xchg
inc
mov
add
fimuls
loopne
jp
and
push
mov
pusha
xchg
mov
add
inc
push
call
outsl
sbb
lret
stc
jne
dec
mov
lcall
movsl
aaa
inc
add
or
jp
popf
shl
pop
dec
push
sbb
pop
movsl
pop
js
xchg
enter
popf
inc
inc
cmp
lds
cmp
dec
inc
cli
or
fsubr
cmp
sbb
popa
lcall
cltd
cmp
jl
clc
and
dec
add
xchg
pop
mov
push
test
cltd
ret
stos
jo
mov
scas
jmp
iret
ret
pop
arpl
dec
mov
sub
fwait
mov
lods
movsb
inc
inc
pop
add
shrb
mov
cmpsl
cltd
fists
outsb
orl
mov
pop
std
cvttps2pi
sbbb
sbb
xlat
repz
push
ret
subb
fdivrs
addr16
arpl
scas
sub
xchg
nop
add
pop
out
out
or
test
pop
and
dec
popf
push
dec
cli
mov
lret
lods
clc
popf
fistl
cmp
dec
sbb
lret
lods
stos
ret
leave
inc
stos
lcall
inc
sbb
lods
push
add
lds
sbbl
inc
pop
dec
jb
test
addr16
lock
outsl
int3
aam
scas
push
mov
inc
add
loopne
aam
aam
mov
inc
dec
push
cmp
das
cmp
mov
incl
aam
mov
cmp
loopne
sbb
mov
mov
push
pop
push
mov
in
adc
mov
pop
cmpsl
pause
mov
pop
jb
jnp
in
mov
in
aam
setp
jle
add
subl
insl
sub
add
fmulp
pop
sahf
sar
jp
sbb
mov
pop
jno
stc
xchg
cwtl
in
inc
fucomi
mov
rolb
and
mov
lcall
push
xchg
cli
cld
fxch
dec
movsb
ret
mov
sarl
inc
daa
daa
cltd
inc
jl
or
leave
jp
xchg
dec
adc
or
fstpt
adc
sub
sbb
decb
jp
test
pop
push
mov
out
scas
mov
lret
scas
loop
cld
pop
popf
dec
lahf
lcall
xchg
ret
add
aaa
jp
in
cmp
fiadds
test
push
sbb
and
ret
dec
mov
or
je
or
mov
jmp
sub
or
mov
inc
xor
je
sbb
ds
inc
movsb
cld
and
movsl
loopne
sbb
xchg
add
add
lret
fdiv
fwait
xchg
ds
xor
cmpsl
mov
bnd
test
sti
cmp
stc
cli
iret
lret
mov
add
mov
aas
mov
rolb
jle
inc
pop
mov
inc
out
xor
shrl
pop
mov
inc
les
mov
nop
cli
add
dec
daa
adc
sbb
ror
iret
jp
sti
push
pop
imul
fcmovnb
out
adc
push
rcll
jb
jl
fadds
aad
inc
ret
mov
lret
cmp
jb
fwait
or
push
xor
iret
dec
jnp
push
stc
xchg
cmp
orb
add
dec
adc
rorb
mov
push
adc
nop
mov
into
adc
enter
mov
add
fisubrs
or
loopne
aaa
mov
push
dec
mov
cmp
adc
js
fwait
lcall
or
jae
pop
loopne
and
push
test
ret
aad
dec
pop
xlat
adc
push
xchg
shl
push
test
xchg
aad
sub
cltd
jp
pushf
dec
test
subb
push
mov
fdivrp
insb
lret
test
pop
shr
call
jbe
aas
movsl
dec
fadd
out
call
int
es
push
nop
xchg
subb
pop
mov
xchg
stos
xor
inc
push
cmp
or
daa
cmpsl
dec
inc
pop
xor
dec
jg
or
insl
or
mov
mov
test
in
dec
subl
jp
ja
cs
enter
and
ja
jmp
out
ljmp
cld
xchg
mov
mov
inc
scas
rcr
and
sub
in
xor
sub
enter
mov
sti
lods
jns
out
mov
xor
and
jmp
xchg
xchg
mov
xchg
stos
push
push
nop
aas
jl
cld
mov
cmp
lcall
cmp
pop
imul
jle
test
int3
ljmp
popf
hlt
fs
sub
pushf
lods
jl
lock
fstpl
mov
sub
scas
cmp
sub
lahf
dec
mov
mov
jmp
cmp
adc
cmp
flds
int
lods
ljmp
mov
pop
loopne
xlat
les
push
mov
fsubrl
cmp
adc
and
cmp
jns
sbb
loope
shlb
out
or
mov
in
push
mov
in
hlt
mov
cs
mov
mov
adc
outsl
lret
iret
jge
xchg
stos
add
inc
mov
mov
jp
push
mov
pop
outsb
stos
popa
adc
fidivrl
rol
mov
scas
gs
xchg
jo
les
mov
movq
mov
xlat
cltd
enter
or
fwait
daa
stos
mov
push
lret
mov
adcl
lret
adc
jne
push
jb
fsqrt
and
push
pop
test
mov
mov
nop
push
loopne
nop
xor
jl
pop
cwtl
shrl
in
ss
xchg
mov
adc
ficompl
ror
cmp
sbb
sub
ror
lcall
or
mov
into
xchg
mov
mov
enter
rclb
ficompl
and
sub
ljmp
lret
adc
mov
test
cwtl
and
jb
fwait
pop
and
nop
adc
mov
mov
movl
ror
cmp
pop
clc
push
out
rol
add
jge
push
repnz
incb
jg
pop
inc
daa
sar
popf
inc
aad
sbb
enter
lods
aaa
push
xchg
fidivrl
lcall
cmpl
shrl
pushf
jns
xchg
add
adc
movsl
cmp
push
pop
mov
je
push
imul
rcl
fwait
mov
out
mov
inc
mov
xchg
ret
mov
push
loop
mov
sarb
pop
push
adc
push
sbb
fdivr
xlat
clc
cs
dec
bound
pushf
loop
cmpsb
adc
jp
je
pop
or
xlat
push
or
cmp
jecxz
push
fs
or
subb
test
mov
iret
push
lea
cmpsl
and
call
fiadds
push
jo,pt
pop
sbb
pop
mov
imulb
inc
mov
ret
push
mov
push
popa
adc
mov
mov
push
test
ret
mov
out
push
gs
xlat
fwait
xchg
pop
mov
aad
fs
or
or
xchg
jo
cwtl
stos
push
and
lret
clc
ret
push
mov
in
xchg
enter
mov
mov
test
aam
pusha
shlb
dec
rolb
faddl
adc
aad
loopne
jp
lods
add
sbb
enter
jo
jge
lea
add
out
pop
rcr
ljmp
addl
ror
jecxz
enter
inc
lret
in
jmp
shll
cmp
aam
pop
dec
outsb
mov
or
inc
push
movsl
or
mov
lret
pop
push
sub
mov
sbb
pop
lcall
inc
mov
scas
mov
sbb
pop
and
addr16
sbb
shl
fiaddl
push
insl
xchg
lcall
jg
ret
lret
cli
bound
lret
jne
sbb
leave
mov
jge
xchg
lret
mov
int3
out
dec
fwait
xor
xchg
cmpsb
adc
jo
inc
les
xor
outsl
pop
pop
sub
push
and
mov
or
xchg
ret
xchg
pushf
stc
call
enter
pop
mov
adc
fidivs
xadd
fistps
push
test
mov
outsl
jecxz
movsl
iret
and
test
cwtl
dec
nop
cli
cwtl
xchg
xchg
push
lret
into
mov
les
repnz
push
loope
and
add
xchg
iret
sbb
insl
enter
or
incl
adcl
cmp
lret
mov
out
jp
jmp
rcll
mov
adc
imul
jmp
leave
jmp
push
int
jl
push
mov
repz
setl
xchg
iret
fistpl
cli
gs
pop
outsb
bound
lcall
lcall
and
mov
mov
jb
xchg
sbb
dec
dec
jg
push
xchg
cmp
jbe
cmp
cmpsl
xchg
cmp
loopne
mov
inc
xchg
out
and
test
ja
bound
jnp
lods
adc
lea
sub
dec
call
ror
in
and
sbb
push
xlat
add
and
mov
cmpsl
xchg
mov
fldt
outsb
sbb
icebp
stos
loope
stos
rcrb
insb
cli
mov
hlt
and
repz
inc
jns
jns
iret
dec
enter
notb
ret
lods
mov
push
and
cmp
or
int
xchg
in
and
mov
mov
int3
push
sub
enter
pextrw
addr16
out
out
dec
cmp
ljmp
xchg
test
movsb
and
sub
push
popf
add
push
jle
adc
lret
imul
dec
jl
xchg
in
cmp
xor
aaa
aad
clc
iret
xlat
out
rorl
jmp
and
test
stc
out
sbb
sbb
mov
or
sahf
xor
and
lcall
mov
fs
jns
outsb
sbb
lea
mov
sbb
rol
mov
jecxz
sti
xor
or
mov
loope
push
jp
sub
cmp
iret
bnd
cld
inc
lcall
mov
sub
mov
or
jnp
fs
lcall
ret
jnp
jne
out
leave
nop
pop
dec
adc
loop
xchg
pop
in
scas
ret
mov
cmp
adc
inc
ds
dec
pop
fcoms
lahf
rcll
mov
repz
jns
add
out
dec
push
stc
jnp
and
push
popf
pop
iret
xchg
pop
iret
mov
sbb
stc
jb
cmpsl
push
xor
inc
add
inc
mov
enter
adc
mov
aaa
es
jp
scas
jmp
and
test
xchg
mov
adc
mov
sbb
test
lcall
mov
mov
sbb
lcall
cwtl
mov
movsb
adc
mov
int3
pop
xchg
sbb
rclb
stc
sub
in
pop
test
ficoms
adc
dec
aam
inc
or
push
mov
mov
jl
sbb
leave
mov
adc
xchg
lds
dec
mov
stos
repz
mov
lcall
rcl
ret
out
mov
popf
or
add
in
adc
xchg
push
mov
and
push
movsb
popa
repnz
xchg
int3
test
aam
dec
xor
lcall
inc
int3
push
or
or
int3
push
sub
shr
ljmp
outsl
mov
push
and
adc
adc
cmp
stos
sub
push
dec
mov
stc
mov
pop
nop
insb
pop
jl
inc
sbb
xor
sub
or
xchg
xchg
not
lret
mov
loopne
femms
dec
popf
ret
push
cwtl
test
mov
fs
cli
cltd
rorb
and
xchg
jp
mov
fdecstp
mov
stc
inc
pushf
enter
mov
lcall
cwtl
xor
cmp
lahf
dec
ss
xlat
xor
cwtl
mov
xlat
dec
inc
enter
xlat
iret
stos
cli
sarb
pushf
into
add
ret
jns
dec
xchg
les
sub
iret
sub
outsl
orb
xchg
cmpsl
pop
incl
pusha
test
jl
jnp
mov
pop
pop
xorl
mov
outsb
cmp
test
adc
cmpl
dec
pop
mov
addr16
mov
dec
add
lcall
repz
push
cmp
pop
cmp
mov
pminub
fwait
cmpsl
push
xlat
iret
jmp
cwtl
jle
add
leave
mov
jno
ret
test
push
add
aam
ror
jmp
addr16
movsl
dec
enter
test
addl
push
mov
fistpl
insb
jl,pt
jl
and
shrl
mov
lret
mov
dec
sbb
xchg
sbbb
insb
dec
jmp
push
ret
icebp
in
cmp
popf
jge
into
xlat
daa
inc
or
or
mov
mov
mov
mov
mov
mov
popf
cmp
leave
inc
push
in
popf
repnz
rolb
hlt
adc
lcall
adc
pop
xlat
mov
in
sbb
mov
scas
jae
mov
aad
or
aas
jbe
btr
jno
push
dec
scas
lods
mov
jg
jbe
dec
sti
cltd
dec
imul
inc
mov
popf
xor
push
sbb
mov
cmpsb
jp
inc
inc
adc
xchg
sbb
dec
cld
popf
mov
xchg
scas
or
clc
add
and
mov
movsl
cmp
cmp
sub
fmulp
bound
push
and
fwait
call
xor
adcb
pushf
scas
push
in
pop
mov
mov
popf
mov
adc
jp
inc
aad
lcall
cwtl
pop
pop
leave
iret
fildl
or
and
sbb
xor
push
cmp
jbe
sub
dec
jle
test
sbb
sbb
cs
adc
push
sub
ja
mov
bound
dec
and
rcl
lret
xor
dec
xchg
mov
cmp
outsl
hlt
cmpsb
sub
xchg
loopne
push
mov
pop
xchg
mov
sbb
ret
pop
xchg
imul
lcall
cwtl
sub
mov
into
lods
pop
push
test
add
adc
push
sub
fstpt
jge
aam
dec
sub
dec
mov
or
cltd
sbb
enter
push
xacquire
fistpl
insb
xlat
mov
or
jl
mov
sub
dec
or
pop
lods
outsl
pop
adc
sub
iret
popf
sbb
aad
popf
ss
add
inc
inc
imull
dec
mov
inc
push
inc
aaa
xor
push
sahf
jmp
pusha
mov
repz
mov
ret
jnp
lcall
adc
aam
pextrw
push
xchg
sti
xor
xchg
rcl
into
fsubrl
jmp
xchg
jl
cwtl
and
mov
mov
add
loopne
inc
test
int3
mov
pushf
adc
punpckhbw
push
pusha
cli
les
loopne
lcall
and
and
mov
mov
pop
mov
arpl
cmp
scas
dec
adc
mov
cmp
pusha
mov
fcompl
fs
sub
adc
add
adc
out
sti
lock
lods
mov
or
adc
or
data16
das
mov
movsl
mov
insb
or
popf
shll
xchg
shll
jl
insl
mov
sub
gs
pop
lea
and
pop
push
pop
cmp
jae
dec
or
mov
shr
cmpsl
arpl
mov
int
test
jg
add
push
lret
ret
mov
dec
push
dec
jns
dec
or
jb
sub
xchg
mov
filds
inc
iret
lret
fisttps
fisubs
mov
inc
shl
mov
jae
aam
fisttps
mov
adcl
or
sub
dec
sbb
loopne
xchg
or
paddw
lods
jmp
and
cltd
xor
icebp
mov
adc
xchg
dec
push
mov
mov
insl
enter
fs
sbb
and
mov
push
loopne
push
pop
jecxz
mov
dec
xchg
inc
jge
pop
mov
les
sbb
jle
movsb
cltd
out
push
mov
sbb
pop
repnz
adc
cwtl
loopne
cmp
mov
add
addl
mov
lahf
lahf
sub
push
push
stc
adc
negb
push
mov
or
xchg
add
rclb
xlat
pop
dec
lods
popl
jp
dec
cmp
mov
inc
xlat
xchg
adc
mov
arpl
lods
pop
out
popa
fdivrs
repnz
fwait
test
int3
cmp
out
inc
pop
out
xchg
dec
lock
js
outsl
xor
js
xchg
fs
jmp
jbe
mov
test
je
gs
dec
adc
sbb
popf
repz
fld
popf
pop
xchg
roll
clc
rorl
ret
call
scas
dec
inc
jmp
push
cltd
addr16
cli
gs
xlat
ret
pop
mov
mov
xlat
or
or
cld
mov
imul
mov
mov
dec
arpl
addr16
pusha
inc
inc
pop
stc
cwtl
dec
mov
add
mov
inc
inc
and
inc
mov
cmp
jmp
sbb
ds
sarl
sarl
js
inc
imul
pop
sahf
dec
fs
cmpl
push
ret
clc
pop
fildl
sub
and
sub
jb
or
xchg
or
jmp
rcrl
pop
dec
movsl
stos
pusha
dec
nop
imul
push
cld
mov
ficomps
jb
cltd
dec
imul
xor
inc
stc
jp
sub
or
inc
mov
xor
pop
lea
mov
mov
and
xor
cmp
cmp
mov
xor
dec
test
dec
mov
pop
aad
fcmovnu
jmp
je
cmp
add
cmp
and
push
jl
sub
popf
mov
int
inc
mov
mov
testl
loopne
movl
cli
es
add
call
cmp
mov
push
ja
pop
sbb
in
adc
fisubrs
in
emms
and
mov
jne
das
lea
shll
call
test
inc
sbb
stos
stc
xchg
insb
rcll
scas
inc
pop
inc
xchg
sbb
jne
and
sti
push
test
pop
inc
mov
mov
rorl
repz
mov
sub
add
jp
cmp
mov
mov
fmuls
sub
jmp
clc
mov
rcr
sub
fdivrs
dec
lds
loopne
xchg
sti
sub
lret
lea
pop
xor
ret
cli
test
subb
cs
test
aaa
add
push
dec
add
and
mov
add
es
ljmp
dec
pop
subb
test
xor
xor
lods
lcall
test
pop
inc
or
pop
sbb
andl
sar
pushf
dec
mov
adc
mov
insb
jno
and
sub
xchg
xchg
push
add
enter
lar
push
fistpl
iret
jb
sub
and
dec
ja
inc
mov
lret
add
mov
fldt
ljmp
popf
inc
adc
pushf
cmp
popf
aas
push
cmpb
push
movsl
or
dec
pop
inc
repz
jno
jne
cld
push
inc
push
sub
mov
mov
call
mov
and
mov
cmp
sbb
push
push
sub
mov
test
test
movsl
nop
cmp
mov
jge
push
push
std
pop
call
leave
and
pop
cmpsb
or
inc
and
push
mov
aad
cld
je
cmpsl
enter
inc
jmp
into
cltd
sahf
inc
sub
cmp
cmp
adc
sti
mov
add
cmp
jle
into
pminub
addr16
iret
mov
fcomps
xchg
dec
jecxz
xor
mov
or
lods
ret
and
sti
fsubl
lods
xchg
mov
daa
loop
addr16
das
cmpsb
sbb
push
push
add
sbb
xor
mov
jmp
mov
popa
addr16
mov
xlat
cmp
ja
jb
arpl
nop
fistpl
inc
shl
dec
xor
jne
lcall
xlat
andb
cld
lcall
out
jecxz
pop
dec
rclb
sub
les
inc
mov
xor
jp
mov
mov
push
sbb
ret
int
sti
jmp
xor
sub
and
inc
jb
mov
cld
jne
jle
push
dec
enter
ss
cld
push
mov
or
imul
dec
jmp
adc
ja
icebp
gs
in
cld
es
stos
lods
popf
aaa
xchg
add
jns
stos
or
lcall
in
enter
int
pushf
bound
faddl
mov
push
jecxz
sbb
xchg
mov
ljmp
lcall
fwait
xchg
dec
cwtl
sub
lods
fstps
sbb
cmp
repnz
xchg
lret
adc
mov
test
mov
or
sahf
dec
gs
pop
rol
int
enter
mov
nop
test
out
dec
jne
cmp
test
mov
jp
xchg
adc
stc
cmp
cmc
mov
cmc
cmpl
and
xchg
stos
push
mov
cmp
repnz
leave
pop
lret
in
jae
in
push
sahf
inc
pushf
sbbl
push
ljmp
push
int3
mov
test
enter
dec
pop
ret
mov
pop
or
stos
jl
xlat
test
in
sub
push
or
lcall
add
mov
xorb
ret
clc
mov
push
jle
jecxz
mov
jl
repnz
mov
pushf
push
jne
lods
enter
sub
xchg
mov
pop
enter
xor
sbb
or
popa
stc
add
idiv
mov
mov
mov
xlat
xlat
cmp
mov
out
or
popf
jmp
pop
dec
pop
dec
ljmp
push
adc
std
mov
movsl
mov
push
cltd
ret
jmp
jae
in
loope
sub
or
sbb
pop
xchg
out
cmp
ja
pop
icebp
xor
mov
xchg
mov
add
lds
jno
movsb
mov
pop
orps
jnp
xor
adc
repz
negb
lds
movsb
xor
inc
push
inc
sbb
mov
stc
mov
or
fsubr
jl
pop
adc
mov
pop
pushf
sbb
mov
test
add
ja,pt
jmp
psubd
jo
dec
sub
testl
or
lea
pop
cmp
sahf
es
test
dec
pop
lret
sbb
cltd
push
pop
test
add
mov
in
or
sbb
jae
jne
push
enter
aaa
pop
mov
push
lods
call
pop
mov
mov
pop
xchg
cwtl
das
ret
adc
push
ja
stc
das
xor
sahf
insl
cmpl
cld
imul
cmp
int
cwtl
test
push
or
lds
and
test
fsts
rolb
add
mov
dec
divl
mov
cli
pop
add
push
xor
sub
adc
or
sbb
jne
adc
mov
inc
cmpsl
push
xchg
faddl
out
xchg
les
mov
icebp
mov
inc
leave
adc
imul
push
test
mov
jge
mov
enter
prefetchnta
lods
mov
aam
dec
sbb
fbld
and
add
jge
pop
jge
cmp
pop
jle
dec
pop
xchg
dec
jno
out
cwtl
cltd
fxch
mov
ret
testl
cli
pop
sbb
insb
xor
lods
mov
ljmp
enter
xchg
fnsave
sbb
lods
inc
jecxz
ljmp
pop
inc
and
decb
cltd
lret
repnz
and
cltd
mov
pop
dec
cltd
fsubrl
sub
test
and
xlat
lret
pop
cmc
aas
fucom
sub
jmp
icebp
cmp
fwait
roll
sbb
in
inc
xor
iret
pop
cmp
push
push
push
mov
ret
ret
mov
inc
mov
inc
push
mov
ds
popf
jns
cmc
add
push
hlt
fidivrs
stc
lds
call
pop
mov
fdivrl
and
mov
je
bnd
sbb
lods
aaa
ja
lcall
dec
or
mov
cmp
add
enter
movsb
push
sar
or
jo
mov
pop
cmp
sar
mov
daa
jl
adc
xchg
loop
out
cmpsl
mov
ror
xor
repz
sahf
ret
or
jns
pop
cmpsb
test
mov
sub
pop
nop
ss
mov
ljmp
pop
push
int
fdiv
lret
into
cwtl
les
es
cmp
lea
mov
jb
or
jge
adc
movsl
cwtl
mov
test
and
add
cwtl
add
lock
cmpsb
iret
jo
sahf
cli
mov
enter
out
test
add
stc
push
or
xor
daa
nop
cmpsl
in
dec
loopne
adc
dec
pop
hlt
pop
lods
jb
cmovs
mov
lcall
cmpsl
cli
xor
pop
repnz
loope
push
push
scas
mov
push
jno
out
fwait
mov
xor
fdivl
mov
dec
stc
jecxz
dec
cmp
push
pop
sbb
add
mov
mov
mov
pop
mov
push
pop
or
add
vmwrite
adc
xor
or
lahf
mov
ljmp
stos
lret
mov
add
jge
out
and
fbld
lds
ja
cmpsl
jl
jb
sub
or
cmpsb
test
mov
out
fdivl
fisubl
das
mov
shll
enter
pop
inc
xlat
lea
mov
xchg
inc
roll
leave
pop
pop
les
roll
bound
arpl
in
pop
cwtl
xchg
cli
xchg
cli
cmp
lcall
daa
adc
lcall
mov
adc
out
mov
loope
push
push
in
adc
idiv
lds
clc
adc
outsl
mov
sbb
adcb
pop
ljmp
pusha
test
pop
pop
pop
xor
xorb
loop
pop
push
adc
and
and
dec
ds
add
add
dec
push
sub
idivl
mov
sub
pop
sbb
loope
xor
repz
clc
stos
fnstcw
mov
stc
sti
cmp
andb
sbb
and
push
mov
mov
lods
subl
cwtl
scas
inc
sbb
addr16
mov
icebp
mov
and
pop
or
xchg
sbb
inc
lds
jle
popf
cmp
and
cmp
jne
dec
inc
test
fldcw
jbe
or
adc
dec
test
or
pop
decb
aam
dec
dec
pop
test
stc
imul
test
xchg
pop
bound
fwait
loop
xor
add
lcall
lods
lret
pop
jb
sub
xchg
dec
je
rorb
enter
push
mov
popa
outsl
push
mov
mov
sbbl
inc
pop
cmp
add
insl
mov
jne
test
flds
pop
push
xchg
fistpll
popf
ja
ret
scas
int3
mov
cmp
scas
xlat
std
add
inc
into
test
jmp
imul
popa
rolb
outsl
add
mov
call
pushf
pop
enter
iret
ftst
inc
xchg
imul
and
jbe
push
loopne
jnp
cmpsb
jb
and
mov
cmp
lock
flds
pop
sub
insb
in
fldl
sbb
movsb
mov
pop
pop
popf
decb
add
cmp
stc
cmovp
lret
lcall
hlt
dec
mov
mov
popf
loopne
mov
ds
mov
pop
lret
inc
sbb
cld
mov
xor
mov
scas
push
popf
mov
mov
pop
pushf
xlat
repnz
lds
ret
fdivr
in
fisubrs
mov
scas
xor
mov
pop
or
js
push
clc
leave
add
pop
xchg
xlat
dec
inc
cltd
xchg
push
jg
adc
test
inc
scas
sub
loope
test
jp
test
lods
nop
flds
stos
dec
mov
nop
jo
cmp
hlt
inc
add
es
lods
pop
fnstsw
cltd
addr16
xchg
jno
fsts
gs
clc
int3
mov
mov
scas
mov
dec
dec
flds
nop
pop
push
test
inc
inc
mov
mov
fdivs
pop
mov
or
dec
mov
mov
sti
addr16
pop
fldt
aaa
pop
ret
and
in
push
cld
orb
jnp
adc
mov
repnz
xchg
loop
xlat
dec
jmp
or
cmpsb
fwait
jecxz
push
mov
std
pop
les
xchg
sbb
dec
push
fnsave
sbb
pop
stos
loope
test
dec
out
rorb
push
movsl
dec
test
jg
aad
xor
inc
cmpsl
fldenvs
cli
inc
inc
cmpsb
jae
jbe
ss
xor
mov
push
loopne
cmp
ljmp
cmp
sbb
mov
sbb
jae
lods
in
xor
dec
add
dec
lcall
outsb
xchg
incl
jnp
lahf
ffree
mov
movsb
pop
stc
rol
xchg
mov
pop
shrb
mov
daa
adc
add
sub
cmp
fs
sub
sarl
or
xchg
jmp
jae
std
aas
lock
mov
push
jno
pop
stc
inc
mov
aad
jne
cmp
loope
ljmp
jp
mov
jl
add
fwait
xchg
idivb
cltd
xchg
mov
daa
int3
fwait
cli
cmpl
ja
cld
jae
inc
test
cmp
add
mov
sbb
xchg
push
sahf
xlat
mov
lahf
lods
cmp
jns
cmp
adc
mov
sub
outsl
sysenter
scas
fs
out
push
or
xor
inc
imul
xorb
mov
scas
js
mov
push
cwtl
loope
add
and
xor
loopne
enter
xchg
and
push
sub
ret
notl
insl
sahf
push
jecxz
jmp
lcall
iret
cmp
add
and
or
pusha
jecxz
mov
sub
cmp
sub
ret
sbbb
aam
pop
dec
ret
mov
cmp
push
shll
dec
ja
arpl
call
xchg
test
jns
enter
xchg
ljmp
clc
mov
and
int
int
push
enter
xchg
nop
cli
mov
aad
enter
test
ret
stc
dec
lea
jle
ret
mov
and
aad
fdivrp
inc
pop
dec
xchg
fsubrs
jo
add
rcr
fisubrl
or
subb
test
mov
cltd
mov
mov
and
enter
mov
mov
add
into
pop
test
add
inc
mov
sbb
inc
rorl
loopne
aam
and
or
add
adcl
mov
adc
movsb
mov
inc
xlat
inc
adc
pop
jno
arpl
push
dec
fsts
push
cmc
inc
inc
or
fwait
movsb
dec
leave
test
push
lods
inc
ret
xorb
mulb
fsubr
int
adc
adcb
xchg
sbb
cltd
mov
rolb
fmull
add
mov
fdivrl
add
jg
adc
add
jbe
jbe
add
mov
roll
stc
fbstp
ret
pop
mov
add
add
push
mov
push
je
pop
mov
das
orl
sbb
aas
fs
loopne
lret
lods
push
imull
mov
scas
mov
cwtl
cld
fbstp
test
stos
jne
mov
movl
lods
dec
push
pop
jp
movsb
inc
pop
mov
dec
jbe
je
push
dec
mov
ret
jp
mov
fidivrl
or
idivl
cmpb
mov
movsl
insl
sbb
sbb
jb
dec
push
cld
dec
cltd
sbb
cmp
mov
jno
icebp
shrl
test
popa
pop
pusha
loopne
mov
xchg
dec
ret
mov
mov
loopne
clc
pop
jmp
sahf
pop
daa
cmpsl
in
sbb
mov
dec
shr
mov
dec
enter
out
out
xor
mov
repz
add
cmpsb
adc
adc
adc
rclb
rclb
rclb
rclb
shl
imul
sti
je
inc
cmp
fldln2
cmpsb
or
dec
stc
xlat
jle
sbb
cmp
ljmp
adc
repnz
or
and
fimull
lods
add
sar
push
bound
mov
notl
jle
jo
mov
popa
and
push
mov
cmp
in
inc
and
xchg
xor
lcall
xchg
shr
nop
sti
jns
cmp
jbe
xor
pusha
sub
cmp
stc
pop
lods
stc
data16
stc
pop
mov
outsb
jge
sbb
mov
pop
movsl
aad
xchg
sbb
popf
mov
inc
cmpsl
sub
insb
cs
fs
cld
pop
and
test
fprem1
pop
cwtl
jp
pop
shrb
jle
jp
outsl
push
jo
roll
cld
pop
js
mov
call
inc
lret
cmp
mov
test
imul
sub
xchg
cli
inc
fsubl
ror
xchg
test
xchg
insb
jo
adc
cmp
ss
mov
or
pop
addr16
cmp
adc
loopne
jp
inc
xlat
js
sbb
pop
ftst
xchg
jno
int
pop
mov
xor
fcmovne
dec
and
and
mov
outsb
rol
sub
push
mov
inc
cs
sub
jae
outsb
mov
sbb
dec
test
push
jmp
int
adc
and
dec
add
fnstenv
pop
xchg
ret
stc
loopne
out
sti
push
lret
add
pop
jle
aas
add
cmp
mov
pop
push
cmp
mov
pop
sbb
sbb
fwait
test
mov
push
jns
into
dec
sbb
jne
hlt
inc
and
push
cltd
inc
into
push
xchg
loopne
jmp
out
pop
in
pop
cmpsb
or
sbb
pop
adc
push
mov
mov
xchg
xor
iret
cmp
jae
in
iret
jp
mov
lahf
ficomps
pop
mov
call
xchg
shlb
mov
fildl
pushf
add
adc
int3
sub
xor
mov
stos
push
sbb
inc
out
mov
or
outsl
adc
pop
push
das
ja
pop
add
pop
cmpl
mov
lods
mov
pop
addl
into
inc
or
cwtl
pop
jl
sbb
dec
fwait
insb
loop
aas
cltd
loop
xor
bound
adc
cmp
cld
pop
pop
mov
mov
arpl
push
push
cltd
sub
pop
push
mov
push
and
dec
popf
jl
or
test
inc
xor
lods
jb
cmpsb
ret
test
repnz
sbb
fsubl
and
sti
test
mov
fucomi
pop
jno
roll
inc
mov
cmp
jne
xchg
pop
pop
in
pop
pop
movsl
push
or
aaa
mov
push
shrl
mov
fisubrl
pop
rcr
movsl
jecxz
lods
push
pop
mov
div
emms
mov
xchg
jg
push
or
cwtl
add
dec
mov
mov
jmp
je
dec
sub
mov
jno
pop
jne
pop
lcall
test
sub
nop
je
mov
jmp
popf
xchg
cmp
sub
push
cmp
pop
sub
mov
out
pop
movsb
stc
xlat
nop
or
dec
inc
pushl
cmpsb
ret
pushf
fists
adc
or
and
lock
sub
pop
jb
jp
in
lcall
xorb
ret
and
cmp
adc
jb
pop
push
jo
xlat
call
dec
pusha
mov
test
mov
bound
dec
rcll
into
jp
ja
out
movsb
xor
cmp
sub
mov
pop
outsl
scas
nop
mov
mov
ljmp
mov
ret
sarl
mov
xlat
arpl
adc
cltd
cmp
push
sbb
add
cmp
sti
cmpsl
ss
inc
addr16
rcrl
add
mov
sbb
repnz
cli
push
enter
call
nop
std
mov
test
cmp
cli
nop
stc
adc
lods
sub
leave
push
scas
loope
adc
das
push
push
sti
jmp
fsubrl
add
fsubrl
inc
xor
aad
jns
rorl
repnz
mov
push
sub
mov
or
adc
xor
inc
cltd
fldz
lahf
lcall
cmp
cwtl
fistl
test
ffree
sub
lcall
add
dec
mov
pushf
lds
popf
jns
inc
int3
aaa
and
shll
xchg
addl
jmp
test
loopne
adc
or
test
push
xchg
or
dec
cli
inc
popa
dec
in
lret
push
sbb
xor
ja
aam
lds
repz
cld
orl
fwait
dec
jnp
adc
sbb
sub
push
sbb
lods
stc
push
enter
int3
add
lret
adc
mov
or
push
jno
arpl
fldcw
ficoml
fbstp
mov
stc
mov
mov
lcall
and
lret
imul
mov
int3
mov
mov
iret
scas
pop
add
dec
insb
cmp
stc
adc
sub
add
mov
js
test
jge
dec
lret
and
dec
mov
je
sub
andl
push
xor
icebp
cltd
or
sbb
xchg
inc
sarb
cmp
scas
jnp
insb
and
mov
loopne
dec
bound
movsb
mov
add
cmp
sbbb
xor
mov
jns
ljmp
inc
mov
mov
je
test
test
inc
jmp
pop
fldt
push
sbb
mov
ror
stos
cmp
adc
sbb
js
lret
dec
repnz
sbb
fxch
incl
gs
sub
bound
fmuls
cltd
ljmp
inc
fwait
xchg
jmp
jb
pop
jp
jle
and
sbb
pushf
add
inc
das
add
scas
test
xor
mov
sti
push
or
fwait
xchg
jl
test
out
mov
sub
lods
mov
mov
loopne
jge
add
idivb
xor
int3
add
dec
jnp
push
jb
addr16
mov
in
xor
xchg
inc
insb
dec
sbb
popa
pmulhuw
inc
cmp
jmp
mov
jp
cwtl
mov
xchg
mov
jmp
in
test
mov
mov
cmpsb
gs
adc
mov
push
cli
dec
push
ja
cmp
loopne
xor
cmp
push
lods
call
mov
loopne
xor
stc
pop
test
mov
push
clc
inc
cld
iret
arpl
add
repz
xor
adc
sti
add
pop
cli
push
fbstp
out
insb
mov
outsb
dec
pop
and
stos
ja
ret
gs
sahf
mov
add
sbbb
sbb
jge
xor
mov
popf
mov
addr16
lret
outsw
push
repz
psraw
mov
or
test
les
jp
or
lods
in
es
xor
xchg
cmc
xchg
lods
fisubs
stc
addl
shll
cmp
push
add
std
fsubrs
add
xor
addb
inc
cwtl
in
test
daa
or
pop
cltd
cmpsl
sbb
in
lcall
sbb
in
sub
aad
mov
popf
das
dec
xrelease
pop
hlt
addr16
loop
leave
aas
std
adc
jbe
or
dec
cmp
mov
cltd
lods
ret
nop
ja
stc
mov
addb
cltd
stc
int
xlat
movsb
gs
dec
mov
les
test
xchg
mov
xlat
jmp
into
sbb
imul
cld
clc
mov
sbb
lret
adc
jge
mov
sub
mov
or
iret
dec
mov
xchg
aas
sub
ret
xchg
xchg
stc
add
lcall
iret
sub
cmp
sarl
mov
popf
mov
test
loopne
cwtl
pushf
push
cli
ret
iret
nop
xor
push
les
xor
scas
stc
int
cld
es
gs
sub
xchg
mov
xor
popf
mov
or
push
push
mov
pop
mov
fnstenv
or
add
cmpsl
call
jno
lret
push
pop
and
cmp
lret
les
mov
or
cmp
inc
aad
ret
shlb
aam
inc
enter
mov
out
ficompl
inc
pop
sar
mov
test
sub
push
add
scas
or
sbb
mov
enter
cmpsl
mov
cld
jne
sub
xor
jae
or
jae
add
loopne
push
mov
mov
ret
mov
mov
xchg
pop
pop
mov
push
int
push
je
cld
jl
rcll
push
push
mov
test
xchg
in
in
or
inc
push
stc
sti
popf
mov
xor
shlb
or
push
lds
dec
bnd
into
mov
popf
aas
add
cmp
jl
loopne
push
mov
clc
ret
out
fiaddl
sub
mov
loop
and
dec
cmc
test
pusha
cmp
imul
push
mov
pusha
cmp
test
dec
xlat
fidivrl
test
inc
leave
xchg
or
jmp
xchg
ror
nop
or
push
out
push
lock
cmp
push
ret
enter
inc
rcrb
ljmp
push
jecxz
iret
cwtl
push
or
test
cmp
xchg
and
xchg
adc
dec
mov
test
ss
dec
enter
mov
test
mov
out
stos
fildl
sahf
lret
pop
dec
out
sbb
sbb
adc
leave
jg
mov
aas
xchg
lahf
es
cli
sub
fwait
push
ret
xchg
mov
pop
mov
xor
jno
push
ds
xchg
mov
js
test
push
xor
jb
push
ljmp
aad
mov
test
push
cmp
xchg
pop
cmp
fcompl
cmpsl
mov
mov
sub
push
inc
mov
std
cs
scas
and
leave
negl
mov
push
call
cmp
test
sub
cmpsl
xor
sbb
cmp
add
add
inc
dec
add
jo
mulb
enter
cwtl
movsl
popf
inc
push
je
fcmovnb
pop
mov
mov
xchg
adc
push
pop
inc
jo
or
cwtl
inc
addr16
sbb
or
mov
into
push
or
or
xchg
inc
xchg
pop
sub
pusha
pop
adc
xchg
pop
fistl
push
jecxz
push
sub
enter
and
adc
in
push
icebp
sbb
loopne
cmp
test
cwtl
mov
mov
dec
push
in
sbb
mov
jnp
daa
cwtl
lods
xchg
imul
push
in
cmp
stos
fcos
je
add
stc
scas
mov
out
mov
cltd
aam
test
jp
fisttps
shll
xor
dec
or
or
cs
sbb
push
out
jne
and
inc
test
push
add
cmp
inc
lods
arpl
rcrl
mov
xchg
or
xlat
mov
jne
mov
in
imul
loopne
mov
mov
cli
pop
cmpsb
jmp
cmpsl
mov
inc
jne
sbb
popf
xor
imul
push
je
mov
mov
add
les
lret
and
xlat
sbb
push
dec
xor
cmp
cmp
sub
pushf
cmpsb
insb
fmulp
sbbl
add
pop
inc
std
sahf
cwtl
inc
or
gs
pushf
adc
dec
jns
sub
popf
push
imul
sbb
imul
es
sbb
xchg
cmpsb
fisttps
jo
mov
out
xchg
and
mov
cwtl
cmp
ficomps
notl
dec
inc
sbb
lock
push
dec
imul
enter
push
add
lret
sub
mov
lds
fdivr
jl
push
sbb
xchg
inc
stc
cmc
test
aas
rcrb
sub
pop
ret
or
jno
mov
cli
jle
mov
jbe
add
les
loopne
jl
nop
popf
sbb
in
in
outsl
add
push
push
add
push
xchg
push
push
inc
test
aas
xchg
and
mov
lret
mov
dec
sub
jnp
pop
xlat
pop
mov
mov
fs
adc
fdivl
xor
or
add
int
mov
mov
mov
fnstenv
mov
mov
push
repnz
dec
inc
adc
out
dec
leave
movsl
push
lods
dec
std
add
pop
test
push
add
push
xchg
sbb
adcl
sahf
ret
lock
mov
aad
push
xchg
cmc
or
lahf
fdivrs
xchg
add
shl
mov
sbb
dec
xor
mov
pop
dec
mov
adc
jp
fsubs
mov
lods
adc
push
xor
push
fistpl
push
fsubr
push
out
xchg
add
fcoml
adc
dec
inc
lret
and
dec
inc
addr16
cli
fimull
jnp
sbb
mov
cmc
jb
scas
fldt
jl
fs
jnp
jb
mov
mov
call
xchg
es
sub
or
push
mov
sbbl
pop
mov
popf
jmp
and
mov
clc
movl
test
dec
mov
dec
addr16
cmp
or
add
pop
jg
mov
sub
andb
lods
enter
mov
ret
loopne
mov
push
mov
xchg
xlat
mov
js
adc
enter
pop
or
push
xchg
mov
call
jp
arpl
roll
xor
ret
xchg
iret
movsl
xchg
aam
loopne
push
rcr
push
push
push
addr16
std
or
repnz
lret
add
mov
daa
iret
and
loopne
mov
add
sbb
mov
lods
mov
xor
addl
jp
fists
cltd
or
ficoml
mov
ret
fwait
add
sub
icebp
jnp
ja
mov
pusha
imul
mov
lods
dec
int
xor
inc
fistps
stos
pop
test
repnz
jbe
inc
fld
push
scas
xor
mov
pop
fld
push
mov
aas
dec
inc
adc
jno
xor
xor
std
jp
addr16
adc
pop
gs
xchg
fldt
pop
popa
dec
inc
jmp
xor
shl
loope
out
fsubs
mov
fcmovnb
cli
xchg
dec
fld
mov
xor
outsl
xchg
or
dec
jns
outsl
cmp
and
cltd
add
scas
sub
lea
add
fistl
shl
js
cmp
jl
mov
jp
inc
fwait
jg
add
cltd
cmpsl
enter
or
xchg
and
inc
jns
dec
cmpsb
pop
mov
insb
arpl
xor
sbb
xchg
dec
inc
stos
jp
dec
pushf
int
in
ret
jl
mov
loopne
ds
push
movb
stc
jp
sub
jmp
stc
inc
sbb
dec
pop
lcall
ja
filds
push
or
aaa
mov
cmpb
mov
dec
inc
sub
or
or
in
mov
push
sub
mov
fs
push
js
mov
arpl
inc
xchg
cmp
push
xor
dec
cmp
lahf
add
cli
test
int3
sub
nop
pop
cli
inc
shrl
mov
into
xchg
push
inc
iret
rcl
ljmp
movsl
push
jecxz
mov
sar
les
pop
or
repz
lea
xor
test
push
mov
mov
inc
fwait
cltd
lods
mov
movsb
fwait
sub
rcr
out
mov
mov
jg
in
fnstenv
push
in
mov
cmp
push
cld
pusha
stc
ffreep
mov
cwtl
ss
stc
mov
popa
cmp
sub
adc
cmp
loop
jno
fs
pop
insl
fidivl
sub
mov
sbb
and
shlb
lret
lcall
ret
sbb
pusha
and
inc
jle
mov
lods
fimull
popl
cmp
xor
xchg
push
sbb
mov
test
push
xor
aam
or
add
inc
js
inc
xchg
loop
mov
orl
or
xor
jne
mov
lcall
mov
mov
dec
mov
lahf
insb
cmpsl
push
xor
mov
jle
cmp
xor
sti
fadd
xor
fcoms
jecxz
xor
sbb
adcb
cmp
out
fstps
sbb
pop
fdivl
mov
mov
inc
lret
inc
xchg
scas
dec
or
imul
iret
loopne
push
ret
rep
fstpl
push
ret
inc
inc
and
ret
xor
aad
or
xchg
rol
pop
inc
jb
cld
push
dec
add
int3
jmp
stos
inc
mov
fmul
or
pop
adc
jns
mov
mov
xor
mov
xchg
lahf
mov
rcrl
rorb
pop
sbb
or
sub
pop
mov
and
pop
and
shrb
xchg
jg
les
fmull
dec
jp
in
sarb
aaa
and
stc
xchg
rcrl
test
sub
fadds
sub
decl
lods
cmp
mov
xlat
xchg
xor
xchg
jl
sbb
pop
pop
leave
pop
pop
mov
dec
pop
pop
adc
ret
pop
pop
enter
or
test
int3
adc
fildl
pop
popf
cwtl
and
mov
mov
add
cmp
lahf
mov
js
stc
pop
pop
stc
divl
dec
enter
sub
sbb
pop
enter
es
cld
cmp
cmp
cmpsl
sub
or
ja
fsts
or
in
andl
jp
mov
add
stc
clc
mov
sbb
xchg
mov
pop
fs
dec
mov
shlb
loope
into
inc
test
xor
mov
jns
sbb
inc
push
and
les
push
mov
jae
and
int
dec
loopne
or
test
jbe
enter
decb
xor
pop
push
inc
scas
ret
and
xchg
icebp
fcmovnbe
dec
addr16
mov
dec
int
lcall
jle
mov
popf
ret
jo
das
sub
mov
push
mov
or
mov
xlat
adc
enter
out
arpl
cltd
in
repnz
loope
fildll
mov
inc
dec
imul
mov
ret
repnz
push
aam
pop
mov
pop
xlat
aas
ja
mov
mov
xor
fxch
dec
and
push
dec
aas
dec
loopne
dec
jl
xchg
data16
fstpt
mov
mov
mov
xchg
inc
repnz
decb
popf
fmul
int
and
fdivl
push
inc
icebp
inc
popf
jp
adc
jg,pt
xchg
adc
pop
add
mov
loop
lret
outsb
ret
or
icebp
xchg
adc
jnp
or
cmpsb
and
add
mov
jecxz
inc
in
lret
or
cwtl
pop
dec
pushf
cmp
clc
pop
push
ror
or
inc
loopne
and
sbb
and
adc
mov
les
sbb
sbb
sbb
add
mov
aad
call
enter
aas
dec
popf
push
loopne
inc
repnz
cltd
fcomp
mov
in
jg
add
mov
lret
xchg
cmp
test
mov
ret
lret
lahf
lret
xchg
dec
adc
test
rol
sbb
lahf
lret
repz
mov
mov
sbb
daa
les
mov
pop
mov
fcmovnu
sub
aad
pop
cmp
flds
cmp
movsl
cli
cmpsb
fnstenv
sarb
test
pop
int3
pop
rcrb
roll
sarl
ret
add
enter
lods
pushf
ret
jns
mov
cwtl
sbb
push
jns
xchg
in
stc
push
rol
sbb
jae
or
mov
push
adc
mov
mov
sahf
stos
sub
shll
sbb
mov
fistps
xor
sbb
fstps
xchg
add
xor
xchg
rorb
fwait
jo
mov
xchg
out
pop
pop
cmpsb
jno
pop
add
or
or
or
iret
loope
loop
divps
test
loopne
shr
xchg
cli
fdiv
out
and
stc
sub
cmp
movb
pop
gs
or
dec
insb
fstpl
stc
push
sub
lds
sbb
popf
dec
mov
fbstp
repz
ret
mov
and
pop
inc
pop
stos
push
cmpsl
xor
jp
cs
loopne
and
hlt
les
pop
shrl
jl
inc
dec
aad
ljmp
ret
jbe
call
xchg
imul
nop
rolb
pusha
pop
xlat
pop
jno
mov
xchg
inc
mov
xchg
paddusw
aad
cld
leave
cwtl
xlat
pop
and
sbb
lods
stos
cltd
ficompl
push
jbe
in
adcl
cmpsl
in
aam
pop
cwtl
fldcw
xlat
fbstp
ret
push
add
rcr
int3
push
push
fidivs
push
jne
aam
fidivs
mov
popa
push
fwait
movsl
mov
pop
and
fcmovnb
cmp
jmp
outsb
movb
dec
aad
xlat
out
jecxz
add
fidivrs
lods
mov
fimuls
stc
mov
mov
les
loopne
lcall
out
imul
inc
dec
addr16
insb
enter
adc
add
push
jb
cmp
rcrb
popf
cmp
mov
xchg
inc
rcrl
cmc
loopne
mov
sbb
add
xchg
jmp
inc
xchg
movsb
push
pop
lcall
dec
push
mov
adc
cmp
add
mov
push
loope
jae
cmpsl
call
jb
sbb
shl
cmp
dec
xor
mov
pandn
mov
aas
fsub
arpl
mov
js
or
aam
leave
cmpsb
jns
fwait
adc
aad
pop
sub
push
loope,pn
and
pop
stos
add
and
shlb
mov
loop
jb
mov
inc
adc
or
hlt
stos
xchg
dec
je
ret
or
cwtl
push
cmpsb
scas
pushf
into
mov
inc
sti
push
shr
cmp
xchg
mov
xchg
add
pop
int
loopne
jbe
xchg
test
call
enter
addr16
xor
push
fldpi
dec
xor
cmp
cmp
inc
test
push
stos
xchg
inc
and
dec
int
add
sti
pop
inc
push
and
out
cmp
mov
adc
dec
pusha
inc
adc
out
mov
mov
dec
dec
mov
cmp
loopne
shr
mov
mov
enter
cmp
fisttps
mov
lret
fdiv
sbbl
add
scas
pop
out
pop
jl
push
fcomps
ja
sar
lret
movsl
mov
lret
push
jb
sbb
outsb
mov
pushf
in
int
pop
test
sub
lret
lods
enter
lss
insb
in
push
mov
mov
push
insb
jne
mov
inc
in
rorb
or
xor
les
cmp
and
sub
xlat
push
xor
pop
cs
inc
rcrl
xchg
ljmp
xor
lahf
add
sbb
das
pushf
xor
vcvtdq2pd
fwait
inc
aam
inc
cli
stc
int
rol
ret
push
cli
enter
leave
xlat
mov
nop
push
into
jg
mov
push
sbb
stc
or
sub
inc
into
inc
add
sbbb
mov
imul
inc
or
fldcw
fsubrl
dec
xlat
xorl
nop
test
sub
fadds
or
loopne
mov
push
arpl
pushf
ror
fisttpl
daa
sub
outsb
add
pusha
jns
mov
fstpl
sub
adc
mov
fistpl
or
mov
lds
lods
gs
mov
mov
cli
push
rcrb
jp
cmp
mov
inc
sub
jl
jne,pt
or
push
lcall
or
lcall
mov
sbbb
ret
jl
pop
cli
cmp
pushf
xor
int
inc
or
cmpsb
int
jne
jg
pop
sub
jle
ret
xor
fld
push
dec
push
iret
jg
cmp
int
push
fdivs
add
nop
out
stos
mov
inc
in
add
into
sti
shlb
jl
cmovne
test
daa
lock
mov
xor
rclb
xchg
inc
inc
push
dec
insb
addr16
xchg
imul
or
adc
adc
add
icebp
enter
outsb
push
cs
jecxz
test
rorl
sub
inc
int
cmpsb
mov
inc
cmp
int3
mov
cmpsl
fldenv
pop
cmp
pop
mov
mov
mov
or
popa
adc
xlat
adc
scas
cld
mov
or
push
jb
lods
mov
pop
mov
test
shrl
ja
mov
sarl
jnp
lds
fistpll
test
aam
mov
lock
pop
and
cld
movb
ret
jmp
jge
repnz
mov
cmp
add
cs
mov
push
mov
add
popf
inc
push
out
or
lret
aam
xchg
test
mov
jp
sbb
xchg
rorb
decb
hlt
jge
cwtl
test
sub
push
lock
rcr
pop
leave
xlat
pop
mov
dec
test
push
arpl
push
jl
popl
int
pop
pop
mov
mov
lret
stos
int
add
push
mov
movsl
and
push
pop
test
mov
adc
jns
sbb
xchg
in
mov
insl
or
dec
pop
push
cltd
xorl
jnp
push
in
cmp
test
dec
sub
or
lret
nop
add
jp
loopne
and
or
fs
xbegin
push
push
in
repnz
push
cmpsl
dec
leave
inc
lods
inc
jg
sti
dec
ret
jl,pn
push
imul
nop
dec
lret
enter
les
cld
inc
mov
lods
pushf
shlb
movsl
pop
sbb
push
sub
call
inc
and
repnz
xchg
into
and
mov
sub
ret
adc
mov
push
xlat
push
pop
enter
insl
sub
or
add
adc
scas
roll
mov
insl
test
lret
push
dec
enter
adc
mov
dec
sub
mov
data16
mov
add
inc
aam
inc
mov
sti
add
stc
jno
fstps
cmp
add
push
push
jne
mov
js
sub
add
pop
mov
inc
cmpsl
mov
xchg
aam
ret
push
cwtl
leave
fwait
inc
xchg
rcr
sarl
nop
cmp
inc
std
mov
push
jne
add
aaa
shll
aaa
movlps
or
lods
mov
mov
add
or
sub
mov
dec
std
push
shl
dec
test
xchg
pop
dec
test
xor
xchg
mov
pop
enter
push
pop
sub
adc
inc
clc
xchg
ja
mov
push
push
test
pop
pop
rclb
rcl
cli
cmp
aas
push
inc
insb
fnstsw
fidivs
push
sub
shll
lret
sbb
mov
cmc
nop
cmp
ret
cmp
aas
dec
inc
fwait
jp
mov
xchg
in
push
jmp
fsub
sbb
xor
fmul
fwait
sbb
roll
lock
xlat
xchg
xchg
les
cmp
test
push
inc
sub
cli
lods
jl
mov
mov
dec
dec
sbb
dec
or
std
cs
push
mov
adc
lret
repz
out
das
mov
dec
int3
mov
dec
mov
imul
enter
daa
lret
mov
data16
xchg
sub
xor
dec
fildll
sub
test
add
inc
mov
aad
xchg
lods
aad
push
les
jle
add
mov
das
and
inc
xchg
mov
jle
cmpsl
testl
jg
enter
insl
jg
xor
jo
adc
inc
movsb
cmpsl
adc
mov
jmp
adcl
cmp
pop
lds
out
repnz
test
jp
loopne
mov
jne
das
inc
mov
adc
fs
popf
scas
add
xor
xlat
xchg
imul
clc
pop
pop
and
push
xor
mov
test
jbe
lahf
jecxz
dec
mov
add
mov
mov
pop
je
jo
mov
push
xchg
xlat
loopne
ret
mov
test
dec
fildl
adc
lods
mov
iret
sbb
adc
aad
rcrb
adc
push
adc
or
movsb
jp
lcall
dec
mov
rcrb
adc
xor
inc
sub
clc
femms
int3
xlat
pop
push
push
push
push
sub
fcmovnu
pop
or
sbb
imul
mov
cmp
mov
pop
clc
dec
add
add
cmp
push
not
fucomip
jno
lds
fs
lcall
in
es
pop
fs
add
mov
sub
pop
mov
loope
push
nop
shlb
mov
inc
inc
fistps
fadds
xchg
jae
xor
sarb
stc
lret
ret
mov
stos
pop
jnp
xchg
popf
xor
and
enter
rolb
push
pop
jecxz
lret
ret
mov
pop
stc
loope
mov
sbb
movsl
add
shll
enter
push
sub
clc
dec
sub
cmp
rol
pop
loopne
out
sbb
jbe
jl
mov
leave
iret
ret
mov
sub
jbe
or
push
xor
bsf
ret
iret
sub
imul
addr16
shlb
sbb
scas
leave
and
inc
add
movsb
cmp
mov
test
iret
add
sbb
jnp
popf
push
pop
cmp
rcl
fisubrl
movsl
repz
sti
jns
push
cli
inc
jg
mov
or
movsb
inc
mov
divb
jb
int3
sub
lods
ret
push
mov
cmovno
xor
cmp
dec
jb
rclb
push
xor
and
inc
testb
cltd
rclb
push
mov
pop
adc
aam
push
add
out
sti
dec
je
lods
xor
dec
jb
cmp
iret
mov
push
sti
int
cmp
mov
add
addr16
or
inc
push
sbb
adc
lock
loope
dec
mov
stos
aam
push
adc
cmp
testb
mov
mov
jl
call
push
stos
push
sarb
rcrl
or
out
pusha
xchg
mov
mov
jbe
xlat
enter
jge
add
or
dec
shl
dec
jbe
inc
jg
add
pop
and
sarl
pop
pop
add
sub
lret
inc
dec
cmp
xor
mov
dec
mov
xor
std
inc
lret
mov
fsubl
fbstp
or
fldt
xor
outsl
add
jo
cld
leave
fiaddl
and
aas
dec
cmpsl
pop
sbbb
mov
cmp
pshufw
and
sbb
clc
bound
rcrl
add
cli
fsts
pop
pop
dec
je
orb
loopne
xor
addl
add
push
xlat
xor
orl
jb
ret
mov
mov
sar
mov
cmp
mov
loop
push
lea
pop
movsl
pop
cld
or
enter
xchg
int
pop
add
ret
jle
stc
in
xchg
add
push
stc
iret
adc
movsb
rcrl
adc
in
jmp
in
enter
push
rcll
and
int3
dec
cmp
dec
xchg
inc
js
sahf
mov
movsb
sbb
ret
ret
fs
xchg
adc
addb
add
div
cmp
addr16
jg
std
aas
test
fstps
sub
repz
jl
setae
cmp
lds
psubusw
inc
sbb
in
pop
sub
pop
imul
lods
cltd
lods
into
loop
jno
aad
push
pop
mov
enter
inc
xchg
sub
add
ljmp
adc
jg
js
cmp
mov
adc
popf
inc
push
sarl
inc
in
insl
mov
out
into
sub
in
loop
test
jbe
iret
nop
test
push
ret
mov
mov
enter
movb
lret
xor
mov
cmp
fwait
xorb
outsl
mov
adc
sbb
rcrb
aad
movsl
dec
pusha
mov
push
pop
mov
jns
mov
mov
nop
and
push
pop
iret
inc
loopne
push
push
mov
cmp
push
loopne
inc
xchg
mov
or
repz
cli
and
sahf
es
lret
sub
negb
and
cmp
imul
ret
pop
pushf
fxch
mov
jae
daa
mov
jnp
pop
jp
pop
test
lcall
lret
push
dec
int3
lcall
aam
shlb
enter
sub
add
imul
xlat
mov
cltd
cmp
pop
cltd
and
in
jg
adc
adc
imul
pusha
addr16
mov
mov
dec
ret
je
int
lret
out
mov
je
pop
and
popf
or
push
sarl
in
rclb
dec
pop
test
lods
fcomps
movb
aam
outsb
ja
xchg
dec
dec
sub
cwtl
stos
xchg
mov
lea
mov
scas
jne
add
mov
cmp
in
repz
repz
mov
add
pop
lods
push
jmp
mov
mov
lods
cltd
mov
xchg
ffreep
lods
insl
ud0
mov
mov
add
push
xchg
mov
rcr
je
cli
stc
jns
push
daa
addl
ljmp
push
adc
addb
and
pop
mov
sbb
dec
adc
mov
pop
xchg
jge
adcl
and
loope
stc
mov
jnp
fistpll
js
cld
ret
and
pop
xchg
mov
loopne
jle
dec
outsl
ror
mov
push
fistps
cmpsl
xchg
test
insb
mov
mov
fwait
add
out
ret
fwait
mov
pop
scas
int
jp
lcall
xchg
cmp
xor
pusha
loop
sub
stos
jl
jb
loope
xlat
popa
mov
rcrl
fs
mov
ror
stos
or
ret
jecxz
pop
push
mov
fs
aaa
lock
add
iret
sub
dec
rclb
add
fcompl
adc
dec
push
int3
les
outsl
cltd
les
dec
cli
add
adcb
push
adc
lcall
pop
push
mov
mov
adc
xchg
movsl
stc
xchg
call
xlat
jp
dec
xor
ret
inc
sbb
sbb
cmc
dec
ss
inc
test
mov
push
jle
popa
push
jnp
pop
xchg
push
dec
scas
mov
add
movl
or
xor
fcoms
stc
pop
arpl
add
adc
out
xchg
inc
iret
int
mov
shlb
sbb
ret
xor
inc
and
cwtl
fs
jg
lods
mov
sbb
fldt
jbe
mov
cmpsb
seta
add
cmp
shll
push
dec
scas
insl
dec
test
jecxz
adc
aas
mov
std
mov
dec
int3
dec
add
orl
mov
mov
and
mov
lret
cltd
sbb
leave
pusha
enter
mov
repnz
mov
mov
fsubrl
sbb
xor
inc
cld
ror
ret
or
out
xor
ljmp
pop
push
jecxz
mov
cli
loopne
test
or
mov
or
out
pop
pop
addr16
out
dec
push
or
lret
push
or
pop
int
fisttpl
test
and
fisubrs
arpl
push
inc
or
mov
jbe
dec
pusha
test
add
dec
dec
adc
aas
ss
cmp
aas
idivl
xor
pop
std
in
push
loopne
jle
and
les
inc
dec
push
pop
and
test
jne
lea
in
lret
add
mov
cltd
repnz
jbe
lcall
push
xorl
inc
lcall
push
or
mov
lock
ret
jb
xor
js
adc
popf
ljmp
cmp
inc
jb
mov
add
ss
aad
das
dec
jnp
sub
repnz
xor
stos
inc
dec
ret
mov
adcb
sbb
mov
mov
js
cmp
lcall
mov
movsl
xor
xchg
imul
sbb
loop
iret
aaa
dec
and
adc
dec
call
inc
dec
enter
mov
lret
add
ljmp
or
add
enter
add
ret
dec
movb
inc
inc
ret
fildl
mov
orl
mov
xor
std
xchg
sub
jl
pop
fcoml
mov
xor
ds
movsb
jmp
xchg
std
subb
les
xchg
add
mov
xor
adc
push
xchg
jge
shlb
add
and
push
push
dec
pop
repnz
inc
xchg
adc
mov
or
fidivs
dec
mov
add
rol
ficoms
push
cmp
aam
or
pop
mov
movsl
pop
into
pop
jecxz
jp
mov
fstl
ret
xlat
pop
cld
mov
lcall
pop
ret
in
js
sub
add
push
into
jb
inc
jmp
hlt
das
inc
ret
push
xchg
call
xlat
inc
xor
dec
in
xlat
push
add
or
push
addl
mov
lods
fdiv
aam
mov
adc
inc
mov
mov
mov
cs
push
push
stos
sub
mov
in
fsubrl
cld
aad
mov
add
retw
repnz
shlb
push
jge
jge
sub
shll
repz
adc
xchg
lock
fstl
cli
sbb
movsl
jns
and
pop
out
mov
xor
cwtl
cmp
pop
rorb
cmp
enter
flds
add
scas
stc
pop
add
xchg
mov
push
dec
mov
scas
push
adc
mov
inc
add
jae
cwtl
push
lret
into
mov
sbbb
gs
enter
push
inc
add
pop
jae
mov
mov
inc
push
mov
sar
mov
dec
ret
push
pop
inc
mov
push
or
push
pop
cwtl
jmp
jle
sub
pop
in
imul
scas
xchg
inc
fwait
into
mov
sar
push
in
fsubrs
adc
lret
sub
mov
into
add
cli
lock
adc
mov
xor
test
std
or
push
int
pop
xchg
push
cmp
cltd
aam
mov
push
hlt
hlt
imul
cli
sbb
aaa
adc
and
gs
mov
jns
inc
addb
leave
xor
lds
add
mov
dec
pop
mov
adc
push
nop
les
add
jo
loope
jbe
inc
jb
pushf
mov
sub
in
mov
mov
pop
lret
push
popl
xchg
bound
inc
push
lahf
loope
xor
test
mov
in
xchg
pop
arpl
dec
test
nop
loope
faddp
movsl
mov
xor
jle
bound
dec
ret
mov
add
daa
jmp
mov
mov
cmp
repnz
mov
lods
push
and
stos
cmpsl
lahf
cld
movsl
and
fiaddl
cmpsl
dec
add
enter
jl
lret
dec
fnstenv
dec
ret
fsubr
stc
sub
iret
rcr
add
fnstsw
int
loopne
int
inc
pop
add
fistpll
sar
pop
leave
shrl
repnz
ret
lret
pop
add
stc
fcom
and
jmp
fsubs
stc
ror
sub
cli
cmpsl
scas
xchg
xor
test
stc
xlat
fstpl
stc
stc
fidivrs
pop
repnz
lods
fsubs
cmp
fidivrl
mov
cmp
stc
push
inc
int3
movsl
mov
or
faddp
rolb
mov
mov
lods
mov
lods
sti
jno
sub
xlat
push
inc
stos
inc
mov
aam
lods
stos
movsb
cmp
test
stos
lods
fcmove
mov
or
inc
mov
mov
ret
mov
mov
inc
mov
mov
jo
int3
or
lods
mov
in
je
enter
sbb
stos
sbb
sbb
addr16
lods
es
sahf
scas
add
cld
push
cmp
mov
adc
fdiv
mov
xor
xor
lock
cmc
lcall
stc
inc
add
leave
in
out
jae
mov
mov
out
and
xchg
sub
inc
mov
test
jg
in
arpl
jae
dec
inc
int3
fldt
pusha
mov
xchg
insb
les
fsubrs
push
cltd
stos
cld
pop
dec
insb
out
je
iret
or
lds
sarl
sar
sbb
pop
dec
sub
dec
sub
jb
pop
or
xchg
sub
or
cmc
popf
adc
dec
pusha
cmp
inc
cli
sub
sub
loopne
outsl
fisubrl
shll
add
loopne
inc
cmp
xlat
loop
mov
xor
xor
mov
xchg
fsubrl
mov
int3
sbb
sti
jne
test
fnstcw
iret
sbb
jns
inc
mov
mov
gs
add
add
stc
push
das
into
lret
outsb
push
mov
adc
push
cld
mov
loop
xchg
outsl
mov
add
mov
sti
pop
or
aaa
or
sar
stos
dec
leave
fnstenv
xchg
push
sub
movsl
fisttpl
xchg
movsl
inc
ja
mov
mov
pop
mov
repnz
repnz
test
jb
sbb
in
test
iret
mov
mov
jecxz
sbb
into
xchg
dec
cmp
loopne
push
mov
sub
sub
test
xor
in
rclb
and
inc
rcrl
add
and
shlb
enter
lahf
pop
push
daa
ret
fcmove
arpl
mov
xorl
gs
jb
jmp
cmp
push
std
shr
cmpsb
and
mov
ds
shr
jmp
push
push
mov
cmc
push
aas
ljmp
cmp
mov
xchg
jbe
jb
inc
dec
movsl
mov
outsl
or
mov
rorl
dec
das
dec
xor
cmp
iret
scas
iret
fisttpl
ja
ret
ret
jg
mov
fdivrs
ret
jg
lock
stc
leave
dec
lock
push
push
sbb
repz
mov
dec
xchg
mov
push
lcall
jno
xchg
xchg
mov
testb
xchg
cmp
lret
adc
jb
rcr
ret
mov
sbb
mov
sub
mov
and
push
xor
sbb
iret
pop
jns
sti
cmc
ljmp
in
stos
dec
jns
shl
mov
call
adc
sbb
jns
in
in
add
rcrl
mov
cld
loopne
sub
addr16
rol
pop
xchg
push
fimuls
pop
jns
mov
int3
add
jns
aam
jg
lock
pop
or
sub
fcomps
inc
loopne
loopne
pop
jge
push
xlat
mov
sbb
jae
jo
sbb
dec
add
mov
add
mov
in
aaa
neg
rep
faddp
dec
or
and
mov
pushf
ret
and
lcall
ret
push
lds
add
inc
xor
mov
or
jmp
repnz
xor
adc
add
out
lods
call
lcall
push
adc
sbb
lock
clc
or
pop
pop
sbb
inc
cmpsb
movsb
nop
ret
xlat
movsb
xor
jno
mov
inc
and
icebp
sbb
sahf
xchg
sbb
pop
jbe
in
xorl
mov
loope
aad
sti
dec
mov
sbb
repz
cwtl
mov
xchg
dec
inc
or
sbb
cmp
sti
and
shll
push
inc
xor
sahf
push
jno
imul
or
pop
jnp
movsb
cmp
push
in
push
jno
and
shll
sbb
test
aad
js
test
cmp
adc
inc
xorb
movb
cmp
add
push
cli
cld
xchg
jmp
sti
jb
fcomps
and
pop
mov
ljmp
leave
lret
sub
mov
sub
sub
insb
lods
cwtl
adc
setne
jno
fisubl
lret
ficoml
and
dec
mov
movsb
pop
dec
jnp
cli
cmpsl
cmc
shl
mov
inc
or
test
xchg
cwtl
pop
pop
shll
pop
pop
or
mov
hlt
sub
xlat
inc
dec
enter
rcll
xlat
xchg
mov
pop
adc
std
shll
repnz
xchg
scas
icebp
or
mov
pop
cltd
adc
cmp
xchg
ds
enter
dec
mov
lcall
sarl
test
iret
repnz
mov
mov
add
xchg
mov
jp
xor
nop
fmull
in
dec
cld
scas
shlb
jo
push
sahf
flds
add
push
jne
push
xor
dec
cmp
shll
cli
rcll
or
push
enter
fucom
adc
pop
in
data16
dec
push
faddl
xchg
dec
xchg
add
lcall
xlat
and
pushf
xchg
ret
imul
shll
outsl
ror
stc
cld
mov
lods
and
mov
rorl
shrb
rcrl
jmp
sbb
stc
dec
mov
adc
stos
ds
out
lods
dec
das
mov
cmpl
cltd
orl
cli
sbb
xchg
pop
ds
mov
mov
movsl
mov
add
dec
cmp
inc
sbb
mov
lret
push
cmp
mov
outsl
fcmovnu
mov
movsl
lods
mov
cld
adc
add
insb
lcall
and
imul
jb
sub
fdivl
and
jo
or
mov
test
icebp
push
mov
or
imul
imul
fistl
and
add
mov
push
jmp
mov
add
mov
mov
or
inc
jb
jg
cmpsb
pop
sbb
insb
jno
xchg
mov
dec
pusha
aaa
push
arpl
xchg
xchg
test
negl
movsl
arpl
imul
mov
enter
push
lcall
in
icebp
rcrb
inc
mov
fsubrl
shl
sub
mov
aas
lods
xlat
xchg
clc
jb
lds
push
jle
loope
rcll
dec
xchg
add
rolb
and
cli
adc
mov
cmpsl
mov
jmp
mov
mov
pushf
cmp
int
loopne
push
sti
push
cmpsb
ret
stc
push
imul
sbb
jmp
in
lcall
sub
and
into
pushf
fistpll
add
jl
aas
inc
cmp
rclb
repnz
sti
pop
cmpsl
stc
mov
cmp
inc
add
sbb
dec
mov
push
stc
aaa
jp
bound
into
xor
dec
dec
dec
add
sbb
push
das
push
or
sti
jge
cmp
out
ret
inc
stos
xlat
dec
inc
iret
in
mov
movsb
or
push
xlat
push
lods
aas
int
add
sti
shlb
int
fucomp
sti
xchg
xchg
les
sub
mov
xchg
stc
inc
ret
push
inc
jecxz
push
or
js
cmc
movsl
mov
int
pop
sbb
lock
clc
or
adc
je
stc
dec
aad
xor
addr16
cltd
dec
push
cmp
out
push
mov
imul
mov
and
ja
fnsave
sub
or
dec
inc
das
push
jmp
andb
iret
fnstenv
aad
mov
xchg
les
test
fwait
int3
je
add
lods
dec
inc
or
loope
cmc
popa
clc
and
xchg
jp
or
mov
lret
inc
inc
ret
ds
ss
pop
adc
pop
rorb
lods
in
mov
push
or
insb
cmc
cltd
cmp
xorb
cmc
int3
jg
lahf
nop
adc
adc
push
pop
xor
sbb
nop
popa
push
in
inc
std
dec
cmp
lret
push
and
repnz
push
lcall
cmp
mov
sar
mov
xchg
mov
dec
mov
push
shlb
mov
and
mov
fiadds
loopne
scas
mov
fucom
les
std
sbb
lret
ficomps
fwait
stos
les
stc
sti
test
mov
or
pop
pushf
stc
test
mov
sbb
dec
fisubrs
test
push
push
lcall
xor
and
cmp
arpl
das
push
inc
repnz
rclb
mov
mov
dec
xor
cmp
and
or
mov
jl
jns
push
fucomp
scas
fisttpll
inc
mov
xchg
mov
cmp
jl
jle
andl
sbb
xchg
or
into
inc
fsubr
fsts
cmp
loopne
push
into
add
or
inc
jl
mov
inc
notb
loope
dec
or
sub
into
dec
loopne
aad
out
fdivrp
rol
dec
sub
cltd
or
popf
pop
push
add
jns
xchg
xchg
fildl
aad
xor
andl
into
xor
ret
aad
add
push
les
xor
mov
into
lods
mov
mov
lret
inc
cmp
mov
aad
movsb
ja
daa
movsl
popf
shl
jmp
test
cli
repnz
push
loop
mov
ja
pop
daa
lret
jmp
cltd
nop
push
cmp
jp
jmp
dec
ret
inc
icebp
jle
cltd
jp
popf
xchg
lret
cmp
int
xchg
cmp
outsb
adc
push
pop
pop
out
push
out
popf
shlb
xchg
test
xchg
add
rorb
mov
mov
nopl
fdivrl
mov
or
mov
dec
cli
dec
incb
leave
int
jae
add
mov
shll
and
loopne
dec
xchg
jae
jecxz
enter
mov
cmpsb
lods
pusha
xchg
sub
pop
cli
dec
inc
cld
xchg
fdivr
cmp
push
jl
sub
cmpsb
ret
cmpsl
dec
nop
push
jns
xchg
pop
movsl
adc
insl
push
mov
mov
aad
cmpsl
sbb
add
mov
pushf
in
test
gs
jb
mov
sbb
pop
leave
mov
aad
pop
cmpsb
lock
jo
mov
in
cwtl
jmp
scas
cmpsl
xor
dec
les
cltd
lcall
aaa
add
cli
mov
push
dec
sub
test
inc
imul
loopne
sbb
add
jns
inc
mov
cmp
inc
repnz
push
aad
push
mov
add
xor
dec
shll
jp
insl
xor
cmp
and
int
mov
fistpll
mov
adc
les
mov
stc
ror
scas
inc
jbe
push
std
hlt
mov
mov
in
int
xlat
xor
fs
xor
jp
cmpsl
popa
addr16
push
enter
mov
xchg
mov
jb
arpl
sbb
push
loopne
sbb
ret
xor
stos
popf
cmp
scas
mov
mov
cmp
popf
fildll
xchg
push
in
stc
fcmovnbe
fwait
sbb
jle
int3
and
roll
push
fwait
jl
cmp
stc
xchg
xor
out
inc
pusha
shll
movsl
push
pushf
je
dec
adc
subl
pop
sbb
lret
ret
pop
jmp
cli
sarl
adc
int3
mov
lock
cmpsb
mov
add
cmpl
scas
fcmovnb
or
lcall
sub
fdivrp
mov
fwait
lret
call
subl
mov
push
sahf
aad
cmp
daa
dec
add
or
dec
sti
adc
add
push
insl
lret
dec
cli
aam
xchg
pop
mov
pop
dec
pop
rcll
xchg
push
lcall
or
mov
xchg
inc
sbb
fisubrs
add
mov
repnz
cld
shlb
shll
cmp
cmpsl
pop
mov
jnp
mov
push
test
imul
push
insb
cmpsb
add
fs
mov
add
out
test
imul
pop
dec
push
into
roll
push
cmp
fsubrs
adc
xor
mov
cmp
ljmp
bnd
mov
mov
pushf
movsl
mov
jge
inc
aas
mov
cwtl
adc
out
enter
push
and
mov
push
jp
inc
xchg
mov
dec
sti
xor
and
cmp
mov
lods
xlat
push
mov
xor
fsub
cld
ficoml
ljmp
clc
xchg
mov
jbe
push
mov
cmp
or
and
dec
inc
dec
mov
cmp
call
push
aam
sti
or
and
sbb
inc
clc
sub
fwait
jp
fists
sti
dec
cli
ret
ret
fnstsw
movsl
and
ffreep
cwtl
ret
xor
push
mov
lods
xor
jp
dec
cmpsl
dec
sbb
mov
scas
mov
lcall
icebp
aas
test
cs
stos
in
cmp
ror
fptan
test
sbb
xor
dec
push
fimull
add
cmpsb
dec
in
lahf
adc
push
enter
sti
jle
dec
stc
or
test
or
mov
xchg
cmp
jg
pop
cmp
in
loopne
jae
or
repz
and
lcall
cmpsl
insl
ljmp
dec
xchg
test
fs
mov
lcall
fldenv
dec
je
cmc
jae
sbbb
test
sbb
xchg
cmp
push
repnz
push
movsb
cli
mov
ret
cmp
js
lods
xor
xchg
jmp
dec
les
cld
add
popa
mov
idivl
pop
lock
xlat
jb
dec
rcll
lods
cli
mov
js
jb
test
ret
push
mov
dec
dec
add
push
sub
je
in
adc
fmuls
into
cmp
inc
jnp
imul
mov
int
popf
xchg
cld
cld
sbb
and
test
les
addl
cmc
xchg
mov
add
mov
push
gs
xlat
add
das
mov
repnz
lret
cmpsl
and
imulb
pop
shll
and
aaa
pop
stos
cld
in
les
mov
out
js
add
aas
pop
lret
mov
xchg
mov
cmp
mov
inc
jmp
call
xchg
push
in
sbb
mov
push
jo
xlat
aaa
rcl
cmpsb
jmp
int
in
cmp
cli
dec
les
enter
cld
inc
mov
mov
and
enter
fnstsw
sbb
jb
test
lods
mov
mov
and
inc
cld
push
mov
fld
dec
jp
adc
outsb
or
mov
xchg
mov
std
jns
icebp
fs
cmpsl
dec
mov
orl
push
lcall
sbb
xchg
push
xchg
cmp
fmull
jns
jb
jo
cs
push
fdivs
dec
dec
mov
bnd
push
arpl
mov
ret
mov
aaa
xchg
sub
push
cmp
inc
cld
push
xlat
lock
nop
mov
jb
sub
fwait
cmp
and
xlat
les
dec
push
lcall
mov
dec
push
mov
cld
mov
cli
leave
jne
fsub
cmpsl
pop
mov
scas
cli
dec
inc
ret
sub
mov
push
arpl
inc
or
push
pop
and
addr16
jg
mov
pushf
jle
cmp
mov
xlat
and
mov
stc
lret
jl
stos
cli
insb
std
inc
mov
loopne
sti
loope
leave
jmp
xor
sub
mov
sub
cmc
lcall
sub
frstor
popf
xchg
xchg
enter
in
and
int3
push
ret
out
push
ret
push
and
jne
scas
mov
into
inc
sbb
sbb
fwait
test
mov
cmp
mov
push
movsl
ret
test
cli
mov
and
dec
addr16
mov
insb
and
mov
push
sub
daa
enter
mov
jp
add
rorl
cmpsb
mov
shll
mov
enter
fbld
mov
mov
jmp
or
xor
mov
sub
shr
stc
pop
push
mov
dec
mov
lods
lret
pop
aam
mov
dec
push
inc
mov
cwtl
enter
lds
test
call
test
ret
pop
insl
ret
xchg
xchg
push
stc
pop
popaw
mov
cmp
jo
aam
scas
mov
lea
xchg
mov
xchg
in
jl
cmp
dec
data16
lods
fcmovb
mov
inc
or
jmp
jb
mov
pop
mov
or
test
pop
outsb
test
push
cld
shlb
sbb
jmp
push
lcall
mov
sbb
mov
add
lea
stc
mov
movsl
jle
vxorpd
push
jne
add
dec
dec
stc
cmpsl
repnz
sub
dec
pop
inc
inc
jle
jge
addl
xchg
test
enter
and
push
clc
adcb
shrl
and
dec
mov
nop
addl
dec
lods
mov
fisubrs
addl
pop
jns
xchg
push
jae
mov
jno
pop
test
xor
fdivs
jg
test
pop
add
test
mov
test
mov
add
or
mov
mov
mov
clc
dec
scas
adc
test
int3
lods
hlt
aaa
aad
push
xor
andb
sarl
shrl
int3
push
cmp
aam
fstpl
inc
lods
xor
in
pop
stos
jl
and
les
loopne
sbb
xor
mov
lahf
jno
leave
mov
xchg
sbb
mov
fsubrl
mov
or
fsubs
mov
mov
in
push
inc
cmp
push
push
mov
sar
jmp
sbb
cmp
lods
mov
push
cwtl
mov
sub
dec
fbld
xlat
pop
mov
cld
xchg
dec
sub
inc
cmp
cld
addr16
into
push
cli
sub
xchg
push
jmp
dec
jne
shll
shrd
sbb
adc
jge
push
sbb
test
loopne
cmc
cmp
movsl
xchg
inc
je
std
inc
inc
ljmp
push
jp
or
enter
mov
scas
xchg
push
push
xor
push
pop
lock
sbb
cli
mov
xlat
pushf
fisubrs
mov
xor
cmp
cmp
or
lods
xor
push
jl
test
ret
pop
pop
and
ljmp
in
rcll
andl
subb
aam
xor
fsubrl
mov
xchg
fdivrl
nop
ss
leave
je
aad
cltd
cmp
test
jns
sbbb
xchg
cmp
test
xchg
mov
popa
movsb
mov
inc
popf
dec
int
je
shr
inc
popf
or
movb
into
xlat
and
jns
fsubrp
test
dec
cli
hlt
fs
xor
xchg
faddl
pop
mov
jo
les
dec
je
popa
shl
push
sub
movsb
xchg
xchg
push
pushl
sbb
jo
movsb
sub
les
push
iret
dec
ret
mov
fnstsw
sbb
jl
jmp
mov
or
and
xchg
fistpll
and
in
sbb
cmc
fsub
jl
lcall
pusha
mov
or
lea
mov
ret
push
mov
adc
xchg
test
mov
aas
test
arpl
fprem1
adc
stc
lds
jb
jecxz
or
movsl
add
ffree
cmc
mov
cmp
adc
cmp
cld
or
pop
cli
bnd
jge
jb
dec
inc
cwtl
xchg
inc
sbb
jmp
loop
lret
cli
stc
jo
fildll
and
cmp
pop
jp
adc
push
fsubl
add
cltd
in
xchg
cmp
mov
adc
xchg
xor
aam
pop
lods
sub
and
xor
insb
jae
xor
push
sbb
push
shlb
or
test
in
push
pop
test
aad
fsubrp
pop
pop
xor
xchg
xchg
cmp
xor
pop
imul
push
cli
popf
add
push
jno
aas
and
mov
mov
sbb
mov
xchg
stc
xorl
jp
mov
sub
insb
mov
daa
adc
cmp
mov
inc
enter
outsl
fcoms
mov
jl,pt
je
cwtl
pop
popf
fs
inc
dec
fdivrl
fistpl
out
cmp
xchg
sahf
fs
inc
mov
mov
jns
mov
sbb
cltd
mov
inc
cmp
test
loopne
pushl
leave
ljmp
jno
adc
iret
sbb
cld
push
popf
call
rcl
ljmp
push
outsl
jp
sbb
fcoml
or
mov
jmp
inc
outsb
rcrb
jnp
mov
add
add
inc
outsb
ret
leave
int
xchg
sub
test
mov
sbb
mov
cmp
mov
scas
test
push
and
xor
cs
mov
arpl
jno
mov
bound
sbb
dec
stos
push
sti
lods
jecxz
or
cld
nop
cmp
scas
rorb
pop
adc
cmc
andl
mov
sbb
test
xchg
aam
ret
mov
daa
jecxz
mov
push
and
es
or
jnp
dec
jp
or
mov
sbb
scas
push
ljmp
iret
xlat
inc
sub
test
stc
icebp
pop
dec
retw
repz
cmp
clc
nop
sahf
rorl
sbb
fidivrs
add
sbb
pop
mov
xor
xchg
jmp
push
mov
ret
and
das
inc
imul
dec
stc
ret
pop
stc
out
jle
sti
ret
jmp
mov
sahf
jge
aaa
jecxz
sbb
inc
outsl
xor
fwait
stc
pop
adc
inc
leave
lcall
dec
sub
movl
es
push
cld
jno
xor
pop
or
cmpb
sti
mov
xor
orl
or
gs
sub
test
cmpl
sbb
cld
push
or
movsb
int
faddl
jno
rcrl
jbe
mov
jl
in
cwtl
sbb
test
test
sbb
js
test
dec
test
nop
ja
insl
loop
leave
mov
mov
imul
js
fstps
inc
dec
dec
int
sub
test
push
mov
dec
mov
shll
test
stc
out
cmp
push
sub
testb
int3
pop
cld
jne
adc
sahf
add
adc
mov
mov
lret
mov
cmp
test
lods
adc
sbb
pop
sub
cltd
cmp
shll
adc
shl
push
xchg
stc
and
jmp
mov
pop
out
jp
stos
stos
cld
aaa
ret
int
xchg
sti
xor
push
popf
mov
cwtl
or
xchg
add
insb
cmp
adc
enter
inc
mov
pop
es
lds
ljmp
cld
xchg
sbb
dec
data16
in
cmp
push
cli
xchg
pop
pop
repnz
enter
movsb
das
lcall
add
pop
gs
in
es
rsqrtps
pop
mov
sub
add
xor
mov
or
ror
cmpsl
rcr
pop
mov
push
or
out
mov
or
idiv
sti
xor
lcall
sub
adc
mov
insb
mov
std
mov
and
dec
or
or
movsb
jmp
mov
pop
fisubs
mov
cmp
mov
adc
or
dec
enter
dec
push
mov
lea
dec
mov
adc
dec
jmp
pop
popf
mov
les
adc
cli
fldl
sub
aad
inc
loop
inc
fidivrl
pop
push
jns
xchg
and
push
enter
jle
mov
mov
sbb
push
dec
xor
lock
mov
fcoml
iret
stos
call
cmpsl
xchg
cmp
adc
sbb
iret
scas
fadd
cwtl
icebp
ret
cmpsl
or
pop
mov
aam
or
popf
movsb
or
push
ds
sbb
dec
cmp
mov
dec
xchg
stc
xchg
les
dec
sbb
enter
push
cmpsl
nop
int
stc
dec
dec
clc
jns
loop
xor
int
xor
xchg
adc
xchg
int3
cmp
movsb
cmpsb
scas
loop
cmp
jl
add
adc
sub
cmpsb
es
cmp
insb
icebp
fucom
or
fcmove
inc
pop
xchg
adc
movsb
cld
adc
pop
sbb
stc
pop
inc
adc
movsl
mov
pop
lcall
mov
pusha
mov
test
hlt
mov
push
lcall
scas
mov
dec
cmpsl
mov
xchg
dec
movsb
cmpsb
mov
lcall
jp
mov
xor
stos
jne
dec
mov
xor
movsl
iret
or
inc
jp
mov
orb
fdivrl
add
mov
pop
arpl
hlt
cld
push
mov
insb
movsl
xor
lcall
cmpsl
mov
adc
jnp
in
in
jb
and
mov
pusha
mov
out
test
mov
lret
loope
lcall
sahf
jecxz
mov
adc
pop
imul
lock
mov
pop
cmp
pop
rcrl
mov
les
and
jmp
cmp
subb
mov
aad
push
ss
cwtl
xchg
jmp
std
cli
roll
jb
repnz
mov
mov
add
in
test
cmpb
arpl
sbb
rolb
aas
mov
mov
nop
inc
scas
out
xor
lds
cmp
mov
subl
cmc
es
js
in
repnz
aad
add
cmovs
sar
hlt
outsb
imul
jge
test
inc
jns
stc
mov
aam
inc
inc
nop
dec
xor
rol
push
rcrb
xchg
and
repnz
dec
cmpl
adc
std
sbb
mov
mov
jmp
jl
nop
cmp
in
repnz
pop
mov
xor
adc
sub
xchg
push
pop
lahf
and
cld
fcmovnbe
iret
imul
push
cmp
fbstp
mov
in
mov
enter
rorb
shll
lret
push
mov
or
leave
rorb
mov
jo
fildl
sbb
mov
and
ja
shrb
push
lea
dec
das
add
inc
rcrl
inc
sbb
test
mov
xchg
gs
ret
add
sahf
lcall
mov
mov
dec
pop
inc
or
cltd
in
lock
lds
mov
cli
mov
lcall
adc
push
lds
jmp
enter
jg
notb
ficompl
lret
jo
jecxz
popf
loope
and
add
jp
add
sbb
push
out
mov
cltd
leave
testb
dec
sbb
insb
pop
pop
push
jecxz
cmp
in
mov
cmp
mov
enter
jnp
lds
in
cld
pop
gs
sbb
out
pop
mov
enter
mov
xor
add
xchg
inc
add
mov
lret
push
fwait
cmp
popf
out
mov
inc
ret
fists
in
test
and
stc
pop
fwait
push
mov
cmp
sub
adc
fwait
add
aam
loopne
ds
ret
inc
push
jl
addr16
fildll
jmp
mov
addl
pop
cmp
addr16
add
bound
mov
in
stc
sbb
add
jmp
sub
int3
dec
mov
mov
mov
xchg
mov
in
dec
movzbl
das
inc
nop
cmp
push
cmp
outsl
sbb
jmp
push
in
subb
push
dec
push
dec
xor
inc
pop
gs
add
xchg
lea
inc
loope
pop
jae
jbe
cmp
sbb
jbe
jbe
pop
fsts
dec
mov
cli
enter
testb
mov
cmp
and
into
sbb
movsl
fstps
lret
addr16
sbb
jnp
pushf
mov
mov
test
mov
jl
sbb
mov
pop
cli
repnz
push
enter
xlat
xchg
pop
test
movsb
or
sbb
mov
dec
sbb
adc
inc
inc
xor
jmp
jecxz
imul
stc
out
das
pusha
insb
leave
cmp
mov
sbb
imul
sbb
or
in
cwtl
xor
sbb
mov
in
pop
adc
xor
xchg
mov
incb
xor
test
fcmovbe
cli
lods
xchg
mov
xor
insb
pop
sub
arpl
push
xchg
push
or
push
add
mov
xor
rolb
jle
mov
iret
decb
out
cmpsb
leave
mov
ficoml
mov
xlat
jbe
cmpsb
insb
and
add
lret
dec
test
and
ret
test
pop
xor
dec
in
and
stos
adc
xor
arpl
mov
clc
or
in
mov
cmp
push
push
jle
dec
rorb
lret
or
mov
cld
repnz
push
push
mov
mov
inc
mov
adcl
ja
sahf
imul
fnstcw
lcall
push
and
stos
sub
push
cmp
jl
das
and
rcr
xchg
out
das
or
js
dec
push
xsave
pop
mov
sarl
mov
dec
ss
leave
cli
sbb
mov
in
add
adc
std
push
rcl
mov
dec
push
lds
lods
add
inc
scas
or
pusha
cmp
sbb
push
sub
jns
lahf
cmp
mov
bound
inc
cld
mov
pop
mov
hlt
es
fwait
cmp
xchg
or
sbb
das
dec
xor
lea
and
cli
nop
xor
jns
rol
xor
push
aad
inc
mov
pop
or
int
xchg
mov
mov
pop
stc
cli
pop
insb
cmp
push
in
mov
cmp
out
mov
push
jmp
sbb
sbb
ljmp
sub
and
or
xchg
int
ja
test
sbb
mov
fs
leave
ja
stos
popf
or
cli
fs
jae
stc
fists
loopne
scas
adc
sbb
ret
clc
or
jp
push
jno
mov
jge
mov
mov
xchg
mov
jl
insb
xor
add
fwait
pop
mov
cltd
jnp
jle
inc
lcall
nop
ret
add
push
test
mov
or
xchg
cmp
pop
addb
or
xchg
rclb
cmc
mov
sbb
int
lcall
js
rcrl
jle
stc
repnz
dec
out
stc
jge
ret
sbb
movsb
outsl
mov
rcll
mov
aam
scas
out
nop
add
xlat
inc
push
faddl
lret
mov
sub
and
push
enter
pop
dec
lods
push
pop
inc
cli
scas
push
mov
pushf
mov
mov
xchg
cld
or
pop
and
cmpsb
jecxz
cwtl
les
outsl
fistpl
into
inc
js
mov
sbb
push
lds
sbb
sub
mov
loopne
imul
push
leave
pop
or
les
push
inc
push
fbstp
popa
xchg
outsb
clc
mov
add
movsb
xchg
rclb
icebp
push
jge
ficoms
negb
fldenv
adc
lret
test
xchg
jno
subb
mov
adc
mov
gs
iret
aad
nop
xor
mov
mov
fsub
or
mov
test
negl
jmp
mov
dec
inc
add
xlat
rcrb
fmull
xchg
mov
leave
inc
push
movsb
sub
paddsb
mov
imul
or
dec
cmp
mov
test
cld
push
ret
mov
sar
testb
int
mov
int
push
lock
mov
mov
gs
test
jmp
jmp
dec
jns
imul
idiv
mov
dec
cmp
arpl
test
imul
ljmp
fisubrl
xcrypt-ctr
cmpsl
cwtl
enter
xchg
inc
push
push
xchg
mov
ss
mov
enter
inc
test
dec
dec
mov
test
iret
dec
data16
pop
jb
or
jns
or
es
cmpsl
mov
imulb
xor
popa
mov
jae
adc
cld
out
insl
jb
aad
add
divb
aad
mov
ljmp
add
pop
outsl
es
push
repnz
jp
sub
or
stos
push
decb
add
xor
xor
movsl
sbb
cld
sahf
orb
xor
add
mov
test
aam
cmp
sub
inc
xchg
in
and
push
sub
or
fcmovb
addr16
cmp
int
sbb
pushf
sbb
jp
cld
sbb
mov
idivl
mov
or
aas
inc
mov
mov
nop
nop
loope
shrb
ds
mov
fwait
and
add
jmp
repz
adc
mov
cmp
sub
adc
bound
sbb
aad
out
mov
cmp
pop
mov
and
mov
sbb
pop
rorl
and
cli
sahf
jp
mov
or
cmpsl
lds
mov
dec
outsl
lahf
pop
sbb
sti
fnstcw
pop
movsb
push
mov
cmpsb
dec
lcall
dec
out
lods
rorb
sub
pushf
inc
push
js
adc
xchg
mov
cmp
lret
adcb
mov
in
and
mov
lcall
stos
cmp
add
cld
test
loopne
mov
outsb
push
xchg
lods
out
cmp
stc
sbb
jae
mov
loopne
adc
ret
mov
mov
mov
jle
push
mov
pop
mov
pop
in
adc
data16
cmpsl
xchg
int3
movsl
cltd
jmp
xor
ficompl
push
jne
adc
fmulp
or
cltd
or
jmp
lret
fwait
mov
jae
mov
mov
and
add
jl
lret
cmp
mov
mov
or
inc
js
push
aam
cwtl
push
sbb
ret
mov
dec
mov
pop
push
cld
and
roll
ror
sub
add
int3
outsb
scas
std
test
inc
pop
fxch
dec
fstpt
sarb
mov
mov
sbb
test
pushw
push
in
xor
mov
imul
push
int
enter
dec
cld
mov
lret
mov
jp
cmpsl
test
dec
cmp
sbb
aas
mov
xor
dec
test
mov
fbstp
jge
aam
scas
xlat
loope
aam
aad
dec
mov
loope
mov
push
ret
dec
ror
lods
and
out
lcall
in
test
jbe
sub
popf
jo
xchg
pop
push
xchg
pop
sub
xchg
lahf
test
leave
inc
addr16
jl
jecxz
xor
mov
int
inc
out
shll
xchg
and
lret
fcoms
movsl
pop
inc
enter
test
test
inc
mov
mov
ffree
ss
lcall
mov
leave
mov
xor
or
aad
loopne
scas
inc
mov
jp
push
mov
add
pop
sbb
jp
hlt
mov
leave
popf
mov
arpl
inc
insb
test
fs
in
enter
sarl
fwait
repnz
adc
and
pop
jae,pn
pop
mov
push
xchg
call
ret
cmp
notb
sub
add
out
mov
pop
inc
imul
push
mov
lods
adc
cmp
jecxz
sbb
stos
mov
rcll
mov
repnz
cmpsl
stos
pop
mov
pop
add
ljmp
cld
arpl
mov
pushf
push
fsubrs
popf
mov
sbb
aad
out
fbstp
roll
les
and
and
fsubl
xor
ret
stc
jge
cmp
cld
mov
andb
icebp
addb
rcl
mov
loop
pop
mov
mov
cmpsl
stos
cmp
cli
pop
fmull
jns
adc
mov
push
push
inc
push
lret
add
sbb
adc
mov
ret
jb
push
pusha
hlt
dec
pop
testb
dec
add
pop
inc
mov
scas
popa
xchg
mov
cmp
mov
mov
pusha
addr16
jne
mov
inc
iret
push
mov
les
out
sub
cmp
add
cwtl
dec
lahf
cld
insl
test
cld
cmp
mov
ror
add
das
push
xor
sbb
pop
imul
popa
jecxz
sbbb
gs
and
fisubrs
jo
cmp
pusha
inc
test
popl
adc
inc
enter
jno
push
xchg
ret
mov
mov
mov
sbb
xchg
sbb
cmp
rclb
lods
std
fbstp
xchg
clc
or
or
mov
sbb
shll
sbb
cwtl
sbb
dec
ja
out
shll
push
pushf
pop
push
cmpsl
call
fwait
cli
fs
dec
sbb
pop
enter
test
std
insb
mov
and
popa
and
adc
cld
mov
inc
insl
aam
gs
xchg
cmp
scas
mov
and
movsl
sbb
pop
dec
sbb
mov
sub
cmp
mov
cmp
inc
jb
mov
shl
cltd
mov
imul
add
cwtl
xchg
stc
mov
mov
sbb
xor
xchg
mov
xchg
mov
inc
push
inc
dec
pop
dec
mov
mov
inc
rcl
dec
test
lods
jl
xor
jb
sub
stos
fisubs
jmp
cld
cltd
into
mov
jp
mov
outsb
push
pop
dec
stos
test
add
jp
sbb
ret
aad
clc
adc
jns
leave
inc
mov
in
popa
dec
sub
push
je
icebp
cmp
insl
sbb
xchg
out
aas
inc
or
sbb
lcall
mov
les
js
test
inc
stos
or
cwtl
add
clc
insb
loopne
cli
enter
mov
pop
xchg
xchg
sub
sub
push
flds
push
mov
es
sub
inc
mov
fldt
cmp
addb
add
lcall
imul
mov
or
imul
ds
jg
into
push
mov
stc
cld
push
xchg
mov
out
sarb
push
pop
sbbl
lods
cmpsl
mov
pop
mov
jbe
adc
add
and
outsl
test
push
outsb
push
cmpsl
jno
sbb
mov
sti
inc
movsb
loopne
lret
push
mov
fwait
xor
in
jns
int3
xchg
out
or
lret
test
or
mov
rcrl
cmp
pop
push
fidivrs
mov
xchg
pushf
gs
dec
or
stc
mov
dec
pop
js
xor
lret
push
sti
fistps
shrl
add
pop
ret
mov
xchg
xor
add
inc
and
fistl
lods
fsubl
sbb
les
push
dec
test
mov
sbb
stos
ljmp
mov
out
sbbl
into
cmp
into
outsl
lods
inc
and
dec
cltd
test
fsubl
int
ret
rcl
fistpll
pushf
adc
inc
push
inc
cmc
add
mov
xor
xchg
sbb
negl
sahf
movsl
xlat
add
insb
out
or
cmpb
out
pop
arpl
test
pop
pop
sbb
ljmp
rclb
ret
mov
iret
or
cmpsb
shll
enter
stos
enter
pop
sahf
inc
ret
movsb
push
in
jmp
dec
test
ret
sub
lcall
pop
jmp
test
lcall
rcr
mov
xor
inc
lcall
into
jns
int
inc
mov
fsts
sub
pop
fwait
add
enter
lcall
jecxz
jle
shll
and
dec
push
sbb
jle
xchg
adc
mov
inc
lcall
popa
popf
dec
mov
and
xchg
jle
or
sar
mov
repz
idivb
rcr
nop
iret
mov
pop
pop
pop
mov
lss
insl
pop
xchg
pop
in
loopne
int
cmp
loope
test
lds
xchg
sbb
std
in
stc
int
enter
jg
rorl
xchg
rclb
mov
jnp
push
sub
inc
push
xlat
inc
mov
pop
dec
in
lret
lods
cld
push
bound
mov
jg
movsb
pop
in
jg
test
cld
sub
or
dec
cli
sub
push
mov
ja
sub
sbb
sub
rolb
jnp
mov
daa
in
test
cltd
xor
xchg
inc
loope
xlat
inc
mov
stc
mov
and
xchg
sub
push
sbb
push
mov
imul
enter
adc
mov
popa
and
mov
and
lret
adc
cmpsb
dec
repnz
dec
rolb
enter
jmp
cmp
adc
fmuls
test
repnz
inc
jnp
mov
mov
mov
mov
loopne
add
es
jb
in
stos
sub
push
lods
xor
test
and
cmpsb
sub
mov
pop
mov
mov
test
lods
test
dec
adc
mov
inc
xchg
sar
mov
adc
sar
or
ret
dec
stc
lds
stc
stc
pushf
rorb
imul
in
mov
pop
mov
push
sub
pop
or
cmp
or
lret
loopne
mov
cmp
cwtl
test
adc
lret
ret
mov
xchg
cmp
outsl
enter
out
sahf
pop
pop
sub
incb
mov
or
pushf
xor
mov
sub
sbb
mov
cmpsl
aad
push
push
xor
insl
out
repz
test
or
out
inc
insb
push
adc
cmp
xchg
pop
outsb
out
mov
in
int3
aad
ror
push
pop
mov
lock
cli
xchg
dec
cmp
icebp
in
cmp
adc
pop
jge
aaa
mov
or
mov
mov
xchg
orl
cmp
or
or
cmp
lcall
push
or
pop
mov
lret
adc
pop
mov
cmp
xor
cmp
pop
icebp
rorl
mov
mov
les
pop
mov
sbb
add
repnz
or
stc
mov
adc
cld
addr16
addr16
or
or
leave
lods
leave
popa
push
sub
ffree
jl
push
xor
cmp
mov
pop
lahf
push
test
cmp
mov
inc
loopne
mov
push
add
enter
sub
xchg
mov
enter
lods
pop
popf
inc
ja
mov
push
call
xchg
mov
dec
ret
pop
into
mov
movsbl
xor
push
outsb
out
faddl
je
std
push
push
push
jp
xchg
leave
lock
dec
push
push
imul
push
xchg
data16
pop
daa
xor
psubd
cwtl
xor
ret
xchg
or
cli
push
mov
mov
xor
push
sbb
shr
xchg
jo,pt
repnz
or
aam
jns
stc
mov
mov
arpl
adc
inc
jno
pop
cli
sarb
mov
dec
in
loopne
incl
int3
ss
lret
sub
rcl
mov
add
cmp
sbb
add
dec
jmp
jae
push
aam
lret
fcoml
scas
ret
outsl
hlt
cli
icebp
je
cld
cmp
adc
xor
xor
cltd
mov
push
push
jbe
fistpll
movb
adc
sbbl
test
les
inc
sbb
pop
mov
dec
loop
sbb
mov
enter
jae
test
or
xlat
xchg
in
mov
outsl
loope
push
ficompl
loopne
mov
loopne
in
int
enter
fldl
mov
movsb
and
pop
enter
push
ret
std
fistps
push
ljmp
push
xor
jbe
aas
push
xor
les
movsl
sbb
xchg
xlat
jo
push
lods
pusha
lds
test
fisttpl
mov
icebp
frstor
add
push
cmpsl
psubsw
cmp
test
cld
sub
xchg
cmp
sbb
lcall
int
fimuls
mov
adc
jne
sub
dec
pop
xlat
mov
inc
pop
or
in
ret
cmpsl
pushf
xor
shl
shll
aad
mov
imul
pop
iret
sbb
push
ja
cmc
lods
sbb
int
movsl
jp
popf
cmp
mov
repnz
xorl
push
filds
inc
push
sarl
push
in
push
orb
lods
xlat
lock
ret
and
shrl
or
and
fcmovnbe
mov
dec
add
push
in
xor
lods
add
cmp
push
int3
xchg
repnz
sub
insb
or
xchg
xlat
cmp
sti
shl
dec
push
popf
dec
loop
push
jbe
and
negb
movaps
in
pushf
cli
pop
in
stos
das
test
mov
shll
sbb
mov
push
mov
pop
sbb
adc
dec
fmull
cmp
pushf
loop
mov
push
cs
iret
dec
repnz
stos
test
xchg
lods
mov
cwtl
pusha
xchg
cmpsl
dec
sar
mov
lods
xor
stc
xor
xchg
add
dec
fs
fldcw
outsb
push
cmpsb
mov
cli
dec
mov
fwait
mov
iret
stos
scas
sbb
stos
cmc
repnz
test
mov
lds
xor
popf
and
mov
stc
pop
mov
inc
push
and
xor
add
cmp
cmp
push
sub
inc
cli
mov
inc
or
dec
cmp
xchg
cli
inc
loopne
bound
xchg
and
lock
inc
push
mov
add
mov
negb
jnp
in
sub
add
adc
lahf
push
int3
aad
mov
or
fsubrp
sbb
mov
lcall
lret
int
pop
int3
sbb
leave
xlat
popf
mov
stc
cwtl
andl
insb
dec
cmpsb
outsb
scas
outsl
push
data16
add
leave
outsl
mov
xchg
das
fbstp
cmpsb
or
out
movsb
mov
ja
lods
lods
lods
movsb
mov
iret
xchg
mov
xchg
mov
les
jns
aas
test
push
inc
iret
sub
ficoml
ret
fmull
aas
adc
and
movsb
add
mov
mov
leave
mov
sbb
lea
pop
lcall
or
xlat
jo
xchg
cmp
movb
xchg
pop
fucom
in
cmp
cld
xorb
jmp
in
gs
adc
scas
int3
sub
pop
push
push
or
sub
add
push
dec
lock
jp
cmp
inc
rcrl
cmp
scas
lods
cwtl
pop
lods
repnz
xchg
sbb
lret
jge
fs
xor
lret
repnz
stos
mov
cmp
jo
rcrl
mov
movl
and
dec
adc
pop
scas
jbe
push
dec
and
push
cli
inc
hlt
orb
test
cmp
ret
shlb
int
cwtl
sbb
loop
sbb
inc
rcr
and
mov
leave
je
dec
jne
pushf
adc
pop
mov
cld
and
mov
xchg
add
jns
mov
pop
scas
out
roll
xchg
inc
cld
lret
and
sbb
fdivl
faddl
aad
mov
lods
fisttpl
in
lods
jne
inc
xlat
outsl
dec
xor
cmp
xchg
lcall
xchg
sbb
cmp
add
test
cmpsl
orb
lods
mov
cmp
pop
add
call
pushf
sbb
mov
add
jl
inc
or
cld
popf
cmp
jae
or
sbb
leave
mov
push
add
and
mov
mov
cmp
and
dec
cmpsl
cmpsb
or
test
cwtl
mov
arpl
rol
inc
mov
int3
fsub
push
pop
fldcw
adc
out
dec
addr16
lds
xlat
fnsave
test
sbb
push
popf
rcr
in
cmpsl
pop
pop
add
xor
mov
mov
lcall
jns
push
dec
mov
mov
mov
jge
inc
movsb
lods
dec
adc
jmp
push
out
xchg
cmp
pusha
pop
push
xlat
test
dec
mov
adc
add
lret
test
dec
mov
pop
out
iret
sbb
push
push
lods
test
mov
cmp
jno
popf
ret
stc
jne
pop
fs
mov
jecxz
adc
fistpl
test
ja
mov
cmp
jns
sahf
loope
lret
test
sub
or
rcrl
fildll
fdivrs
sub
pop
or
xchg
jne
mov
xchg
setne
adc
fildl
rcll
aad
or
xor
bound
ret
mov
fwait
add
movsb
inc
mov
ja
mov
int3
test
inc
aam
roll
stc
fwait
inc
aam
fimull
mov
test
cld
push
stos
les
bswap
xchg
pushf
ja
sbb
sbb
mov
mov
bound
dec
jnp
or
mov
mov
xchg
andnps
mov
stos
xchg
lea
dec
jmp
pop
inc
xchg
mov
xor
in
les
iret
jns
sbb
xchg
rcrb
or
add
addr16
dec
ret
mov
aaa
mov
andl
and
scas
jp
sbb
mov
lods
repz
iret
xorl
into
pop
pop
mov
loopne
jmp
lret
lahf
push
and
fs
xor
les
mov
pop
aam
jb
sti
inc
push
or
clc
test
jp
mov
pop
jmp
pop
daa
sarl
mov
nop
ret
add
out
sti
test
shl
orb
movb
daa
shll
enter
stos
xor
imul
int3
xor
xchg
cmp
arpl
mov
xor
out
test
jp
add
aas
sbb
fcomps
fs
mov
push
shlb
xlat
repnz
inc
cld
sub
rcr
mov
sbb
add
adc
fmulp
xchg
pop
add
cltd
cld
push
data16
jnp
dec
and
sbb
push
cmp
mov
rol
std
sahf
and
lret
in
push
mov
mov
negl
int3
sbb
jnp
aam
mov
fisubrs
loope
test
xchg
adc
jb
lods
invd
sbb
lcall
les
xlat
enter
push
icebp
jl
inc
insl
mov
xor
sub
mov
lcall
xchg
push
sbb
aaa
mov
cmp
out
orb
dec
icebp
cld
leave
faddl
cwtl
test
icebp
leave
shll
dec
mov
jl
jns
fbld
inc
mov
xlat
xchg
mov
lds
lcall
in
int3
ret
xor
sbb
hlt
inc
fcomps
mov
dec
cld
hlt
dec
mov
inc
mov
movsl
test
cwtl
pop
push
test
fs
dec
jo
cmpsb
rcrb
xchg
out
mov
sub
jb
lahf
fistl
lods
jg
and
loopne
sbb
jg
ja
stos
nop
cmc
int
add
jae
stos
mov
scas
rclb
push
xchg
pop
xlat
add
inc
repnz
adc
pop
mov
arpl
lods
adc
pop
sub
pushf
push
fists
les
sub
cmpsb
idivl
bound
jmp
mov
pop
in
and
mov
jae
sub
pop
push
add
pop
repnz
adcl
jl
sbb
jnp
cmp
mov
push
mov
lods
mov
jmp
jae
arpl
cmpsl
pushf
sub
inc
xlat
and
mov
lock
mov
rolb
insb
jp
andb
es
loop
data16
inc
leave
int3
jns
jl
repnz
mov
in
mov
mov
in
and
cmp
xlat
mov
and
xchg
mov
fldcw
imul
arpl
nop
mov
ljmp
cmp
nop
sbb
rorl
mov
push
add
cld
xchg
arpl
push
inc
push
xchg
test
pop
stc
fisttps
push
lods
mov
add
fsub
sbb
arpl
adc
dec
fnstenv
rol
jl
jo
test
mov
mov
fcomps
sbb
fwait
lds
scas
or
notb
jo
js
jns
mov
aam
addr16
dec
shrl
push
shrb
xchg
test
enter
mov
and
inc
or
aad
cmp
xlat
mov
jae
jle
xchg
int
adc
pop
mov
sub
icebp
add
sbb
dec
cmp
cmpsl
xchg
xchg
mov
xor
pop
lods
mov
jno
insl
fsubrl
jo
xchg
enter
test
lret
push
les
mov
lods
adc
and
mov
xor
mov
xor
push
rol
push
fists
cld
push
mov
pop
fists
add
mov
adc
pop
icebp
adc
inc
xchg
lods
jle
hlt
mov
cmp
sahf
ljmp
xchg
lods
aad
aad
and
sub
jp
or
push
sbb
sahf
int
inc
loopne
mov
addr16
or
out
adc
cmp
int
sbb
enter
cltd
in
orl
ret
and
sub
cs
push
mov
loopne
sbb
add
orb
pop
mov
cltd
jp
popf
fwait
popa
inc
mov
int3
xlat
ds
sbb
cmpl
push
scas
fistps
cmp
fdivr
cmc
into
cli
in
push
lea
hlt
and
mov
mov
rcl
movsl
repnz
mov
pop
pop
cmp
push
jnp
jmp
lcall
mov
or
pop
mov
mov
cmpb
mov
fwait
enter
shlb
mov
mov
xchg
cmp
push
mov
call
sti
inc
shl
stc
daa
cmp
popf
pop
fwait
movsl
jae
insl
lcall
test
test
sbb
add
inc
adc
xorl
pop
mov
jp
outsb
xchg
fistpl
mov
popf
jmp
dec
mov
popf
add
inc
shll
xor
rorb
pop
xchg
int
cwtl
pushf
inc
xchg
jne
clc
mov
push
xor
movsb
and
imul
lret
jl
mov
mov
aad
popa
xlat
fnstcw
adc
and
push
jne
lret
fnstsw
xchg
add
adc
loop
faddl
jmp
std
adcb
jp
mov
movl
nop
dec
add
dec
inc
cmovns
fidivs
mov
cld
movsb
in
je
sub
pop
adc
cmp
es
lds
jbe
push
mov
push
dec
mov
icebp
and
pop
pop
mov
andps
jg
loope
pop
dec
jecxz
ljmp
mov
sub
pop
sbb
je
xor
test
push
mov
adc
cld
mov
imulb
push
in
adc
dec
cmp
lcall
xor
and
enter
mov
in
ds
stos
mov
rclb
lods
sub
andl
les
xlat
popf
repnz
push
push
das
push
fldenv
dec
out
sub
cmp
mov
jbe
xor
cmp
xchg
mov
jl
dec
sbb
fadd
sbb
test
inc
imul
add
add
and
outsb
cld
popf
dec
cld
xlat
lea
dec
adc
lret
enter
sti
mov
negl
lret
ja
pop
and
push
cmpsl
pop
test
mov
mov
sbb
inc
push
call
mov
sub
mov
lods
and
jne
push
sub
pop
test
inc
les
pop
aad
and
fldl
bound
push
pop
jns
fstl
stos
push
fwait
fwait
mov
out
pop
sbb
jns
xchg
mov
dec
xor
jbe
add
mov
shr
sub
xor
dec
sar
adcb
push
push
dec
inc
popa
in
lcall
or
loop
stc
out
push
arpl
jae
insl
mov
xor
mov
dec
out
daa
add
int
idiv
lret
xchg
cmp
xchg
cmpsb
add
lcall
adc
pusha
rcl
sbb
jb
lret
psubb
sbb
clc
xchg
mov
shl
cmp
jno
jge
rol
dec
mov
in
jnp
push
ret
mov
rcll
movsl
inc
test
lea
lods
adc
mov
stc
test
mov
push
stos
clc
inc
sbb
push
in
mov
cmpsb
sarl
mov
inc
sbb
dec
mov
loop
into
and
stos
jle
mov
frstor
mov
xchg
push
mov
scas
sub
sahf
mov
ret
mov
mov
mov
cmp
sbb
or
push
pop
mov
fadds
dec
out
mov
cmp
add
repz
daa
test
or
xor
mov
xor
in
lock
test
sti
xchg
push
cwtl
fistpll
sbb
fucomi
sbb
lea
scas
push
dec
shrl
int
add
jbe
push
jmp
xor
add
xor
mov
cltd
adc
insl
dec
xchg
sti
add
fisubs
push
and
sub
repz
push
dec
mov
jns
jp
inc
sbb
cld
fs
dec
add
loopne
dec
fwait
mov
fistpl
cmp
ds
ret
lds
sbb
mov
sti
mov
imulb
mov
pop
mov
repnz
shl
jns
cli
push
popf
xchg
adc
mov
shlb
test
leave
sub
fwait
inc
pushf
mov
sti
mov
xlat
or
lods
cmp
aam
rolb
push
inc
push
scas
mov
dec
or
test
or
jecxz
pop
movsl
mov
pop
movb
sti
insl
adc
jge
outsb
sar
xchg
lods
pop
shl
in
mov
jns
outsl
imul
jge
dec
sub
pop
mov
fisttpl
mov
push
adc
in
jmp
jecxz
loopne
push
adc
movsb
fidivl
jbe
fisttpl
test
push
mov
addr16
jb
pop
sti
add
leave
insl
adc
mov
xchg
rcrl
xchg
scas
lods
in
rolb
lret
push
cmp
pop
adc
pop
cmp
mov
jg
fisubrl
inc
pop
dec
mov
add
lds
movsl
gs
test
pop
fildll
into
mov
popa
int3
xchg
stc
mov
outsl
cmp
cwtl
jecxz
mov
jb
jmp
pop
mov
insl
cmp
lock
int3
push
icebp
loop
ret
stc
psraw
dec
inc
lcall
or
lcall
mov
clc
stc
xchg
xor
arpl
ret
add
mov
stc
cli
in
lcall
xlat
int
cmp
rcll
sbb
push
inc
push
push
cltd
test
rol
or
fucomi
sbb
movsl
mov
cs
sbb
fistpl
push
adc
addr16
out
enter
test
push
jmp
jecxz
lds
arpl
push
xor
sbb
pushf
aaa
andps
push
dec
adc
shlb
mov
lds
mov
cmp
inc
add
push
mov
scas
mov
cmp
adc
mov
dec
lahf
mov
loope
shr
mov
pop
scas
cmp
add
jmp
icebp
mov
mov
jnp
cmp
adc
ret
cmpsl
push
fistl
test
mov
in
je
aaa
ret
or
test
lcall
mov
and
cld
sub
insb
in
jns
mov
cmp
cmp
cld
fdiv
pushf
sub
sarl
mov
and
jl
add
popa
mov
sarl
or
scas
test
mov
stos
fmull
lret
loopne
push
push
rol
mov
lea
shll
addl
stc
int3
loopne
xlat
and
jecxz
int3
pop
xchg
test
xor
out
mov
or
mov
orl
cmpsb
jmp
stc
add
adc
dec
das
or
test
add
dec
fildl
gs
and
fwait
mov
gs
enter
jae
pop
cmpsl
mov
xorl
adc
push
cmp
jns
movb
and
cli
cmp
ret
loop
cmp
das
add
cmp
lret
pop
andb
dec
pushf
ja
shll
mov
push
cld
push
xchg
or
arpl
mov
jbe
mov
mov
xchg
in
push
into
inc
iret
xchg
push
mov
jl
jns
lret
nop
push
outsb
loope
mov
xchg
test
xchg
in
add
shlb
mov
jae
fwait
mov
push
test
xchg
imul
repnz
sbb
fbld
je
bound
jle
ret
mov
shrb
mov
mov
sub
ret
jns
dec
nop
outsl
xchg
inc
int3
pusha
jb
push
shlb
pop
loopne
pop
push
ret
mov
rol
mov
jmp
lods
jl
or
jecxz
or
in
sub
xacquire
cld
scas
int
cli
push
mov
sbb
in
push
filds
mov
xchg
loopne
mov
xchg
leave
mov
clc
dec
or
add
cmp
nop
lods
outsb
dec
test
test
pop
ret
mov
push
aam
lcall
cmpb
rolb
lds
pushf
xlat
or
xchg
dec
inc
xor
ds
mov
adcl
addl
lahf
mov
cmpsb
bound
lds
lods
scas
imul
lods
inc
mov
mov
mov
leave
clc
jnp
pop
ficoml
push
pushf
int
ret
inc
in
sub
insl
sub
push
dec
fisubl
sub
xor
in
popf
inc
push
xchg
das
ret
dec
cwtl
movsl
or
mov
in
pop
cmp
ret
xorb
out
sahf
mov
fnstsw
cmovs
dec
inc
mov
mov
dec
jno
ljmp
ljmp
jmp
lods
rcrl
lods
jg
imull
cmp
mov
mov
sub
push
sbb
stc
out
fistpll
outsb
in
insl
incl
movsb
push
mov
inc
rdtsc
frstor
addl
sbb
dec
lds
sub
pop
jle
mov
sub
pushf
dec
adc
xor
adc
psubq
fstpt
sbb
pop
sbb
mov
ret
outsl
mov
push
adc
test
and
rcrl
sbb
and
and
add
in
lret
test
fsts
dec
mov
test
in
mov
add
mov
daa
mov
fwait
bound
xchg
inc
cld
lretw
add
outsl
sbb
mov
push
xchg
pop
lods
xlat
push
mov
cltd
mov
sub
lea
add
clc
lcall
dec
or
fsubrl
ljmp
mov
or
rclb
adc
aad
dec
cld
rclb
loopne
sbb
inc
fcoms
mov
sub
rorl
push
sarl
sahf
adc
adc
iret
xchg
repnz
test
popf
addr16
test
push
ds
bnd
jg
xorl
xchg
pop
sbb
jg
mov
lods
jecxz
dec
popa
dec
push
mov
dec
movsb
inc
mov
mov
adc
sub
lret
fwait
popf
inc
je
xchg
outsl
mov
push
jae
cmpsb
je
dec
inc
dec
cwtl
sbb
movsl
sbb
loop
mov
pop
cmp
leave
jl
push
cmp
mov
dec
lret
or
cmpsb
pop
mov
adc
loope
cmpsl
fisttpll
or
jns
decb
or
push
dec
pop
xor
andb
inc
enter
mov
mov
cld
imul
adc
les
insb
sarl
movsb
xor
test
ret
sub
hlt
jmp
cmp
mov
insb
add
cmp
mov
mov
xor
or
jb
push
into
mov
jl
rcrl
in
jbe
jp
dec
cmpsl
dec
les
pop
adcl
popf
xchg
dec
push
lds
sbb
dec
or
sbbb
cli
repnz
cltd
sbb
iret
and
ret
lds
sub
and
pop
adc
mov
ret
jns
or
xlat
pushf
lds
popa
cmp
dec
adc
inc
push
add
sub
in
insl
test
lds
xor
ljmp
push
xor
cmp
mov
bound
mov
std
xor
xchg
ret
mov
push
popa
sbb
imull
imul
ret
adc
push
pop
sbb
leave
push
out
pop
fmuls
adc
cmc
cmp
loopne
repnz
push
jne
stc
in
mov
xchg
fldl
mov
les
inc
or
mov
sbb
lods
add
insb
repz
sub
gs
outsl
aam
push
mov
push
jae
dec
jle
mov
fbstp
scas
aaa
rcl
fcompl
xchg
pop
xor
push
jl
cmpsb
jl
test
or
popf
scas
aaa
jmp
aam
into
lods
inc
and
bound
cli
movsl
fsubrl
arpl
popf
into
das
ret
gs
jnp
lcall
aam
fildll
js,pt
push
add
mov
ret
ret
lret
stc
cld
pushf
les
loop
jo
jns
std
data16
dec
inc
popf
mov
push
fimuls
mov
cmp
ja
mov
faddl
xchg
sahf
mov
adc
enter
mov
sbb
mov
fwait
add
orl
mov
inc
js
or
cld
adc
dec
lds
lds
pop
mov
ds
stc
push
daa
mov
sub
fmul
jne
packsswb
push
incl
and
add
jno
imul
lret
pop
jns
gs
cwtl
push
jp
popf
pop
iret
mov
ret
push
xchg
faddl
mov
adc
aad
sbb
dec
rorl
sbbl
ror
cmp
push
xlat
adc
dec
xor
test
mov
roll
sbb
stos
outsl
lods
dec
pop
cwtl
cli
leave
dec
into
leave
divb
push
insb
loop
or
ja
push
arpl
cmp
andb
iret
mov
push
pop
std
movb
cmp
sbb
shrl
mov
push
leave
jg
subl
adc
sbb
aas
testl
dec
add
push
std
orl
jb
pop
loope
push
pop
lcall
pop
btcl
jg
movb
iret
sbb
sub
stc
mov
xor
roll
adc
fmuls
pop
xchg
iret
sbb
ret
imul
sbb
pop
shl
xor
pop
aad
cmc
fcomp
out
inc
shll
pop
mov
pop
lds
dec
mov
push
shl
call
xor
pop
cs
cmp
xchg
mov
je
jge
movsb
inc
ja
popf
add
movsb
push
mov
fnstsw
mov
cwtl
jp,pn
sahf
sarl
loopne
mov
lcall
mov
sahf
cmpsl
data16
and
insl
adc
outsl
sbb
call
and
shlb
imul
cmp
push
sbb
sbb
test
inc
fwait
push
into
sbb
js
mov
ror
cwtl
mov
jns
jbe
mov
js
pushf
mov
loopne
les
push
inc
das
mov
mov
pop
stc
mov
mov
push
mov
sbb
ja
sbb
ret
pusha
adc
addr16
mov
test
or
cmp
lock
pop
fdiv
out
in
out
pop
push
in
pop
push
and
xchg
jae
mov
adc
dec
pop
cmpsb
test
dec
notb
aad
outsb
in
xchg
outsl
jne
lods
jmp
mov
jmp
adc
mov
mov
popf
cmpsl
and
dec
sub
repnz
leave
clc
shrb
jp
pusha
lds
loopne
push
in
sahf
mov
rorb
xor
cmpxchg
enter
jecxz
xchg
test
and
sbb
cmc
fsubl
cmp
cmp
aam
outsb
mov
addl
mov
xor
sub
jb
sbb
ljmp
mov
incl
adc
movsb
push
mov
pop
mov
outsl
leave
nop
pop
rcrl
xor
cmp
xor
ficompl
push
inc
mov
jno
mov
xlat
aad
dec
fcomip
test
xchg
movsl
dec
in
sub
insl
pop
xchg
xchg
jl
pushf
fstl
mov
push
filds
pop
cmpl
scas
imul
fmull
sub
mov
movsl
add
mov
adcl
loopne
mov
or
jb
add
add
lods
jmp
jae
mov
pop
mov
aas
dec
adc
jmp
sarb
xchg
movsl
and
push
mov
loop
cmp
push
add
xchg
lea
movsl
sub
jo
cli
mov
sbb
adc
cli
mov
cmpsl
pop
ds
bound
inc
cld
repnz
mov
ds
cmp
ret
loopne
cltd
dec
outsl
jge
aam
sbb
out
sbb
ja
xor
cmp
jp
xchg
jmp
jl
popa
repz
mov
popa
xchg
push
jg
test
ret
xchg
in
mov
mov
aas
mov
mov
ret
mov
cli
adc
pcmpgtw
fisubrs
addr16
pop
iret
push
pushf
aad
shll
jl
inc
pushf
pop
sarb
fcompl
xchg
xchg
mov
cmp
lods
cmp
xlat
cmp
or
jl
jnp
inc
add
bound
adc
in
mov
bound
aaa
sbb
lcall
xor
jnp
cli
pusha
cmp
mov
mov
sbb
xchg
sub
inc
cld
adc
mov
rdtsc
aam
shrl
ret
jl
adc
daa
sub
mov
and
negl
test
cltd
mov
jg
push
jnp
mov
mov
mov
loop
dec
lahf
mov
arpl
mov
scas
bound
pop
int3
stc
lods
cmp
lock
and
imul
adc
cmpsb
sti
xchg
push
fldenv
test
enter
pop
mov
fnstenv
stos
out
dec
sub
sarl
rcll
cld
pop
or
loop
cmpsb
cmp
ror
xor
mov
fbld
jns
cmp
sbb
test
cli
mov
stc
test
jns
sbb
push
or
adc
mov
sbb
popf
sub
out
ret
sbb
pop
cmp
push
and
push
sbb
adcl
call
pop
daa
cmp
pop
dec
test
jns
fmull
cltd
xlat
ret
mov
stos
stos
stos
sub
inc
lret
fcmovb
orl
dec
repnz
iret
or
adc
inc
repnz
scas
mov
pop
lret
mov
jns
pushf
mov
clc
ss
insl
jle
rcrb
inc
xorl
inc
sbb
mov
and
mov
mov
loopne
and
shlb
dec
arpl
cmp
jmp
into
aam
iret
pop
or
xchg
ret
pushf
test
pop
shrb
cmpsl
push
int
push
test
rol
mov
mov
jp
jbe
push
jb
pop
push
cli
loopne
push
add
in
push
mov
int3
pop
sbb
cmp
fstps
or
adc
enter
inc
pop
lret
push
jb
mov
dec
mov
inc
mov
sahf
mov
inc
lds
push
mov
inc
data16
sub
cld
orb
fisubs
pop
sub
mov
push
or
xor
mov
hlt
cmpsl
push
sbbl
mov
lcall
js
lods
mov
scas
push
inc
in
les
call
ror
jns
or
cmpl
movsl
lods
or
jnp
push
dec
push
iret
jns
sub
xor
inc
incb
lea
flds
jnp
mov
jg
cmpsl
pop
mov
sarb
out
add
mov
adc
or
shrl
xchg
xchg
leave
es
lcall
xor
fsubrs
lcall
jp
sbb
push
jmp
ret
mov
js
roll
lds
stc
fdivl
fcoms
adc
cld
aaa
cltd
dec
inc
or
hlt
sbb
xchg
in
jnp
add
outsb
xchg
jp
or
mov
scas
jg
dec
or
sbbb
mov
xchg
jmp
movsb
fsubs
les
lods
push
add
xchg
rolb
add
lret
js
push
pop
push
gs
lods
push
inc
outsl
xchg
add
ljmp
xchg
or
dec
or
xor
ret
add
test
out
imul
mov
mov
in
mov
mov
jmp
xor
sti
jp
les
xchg
cltd
jge
sub
inc
roll
in
dec
je
jnp
movsl
xchg
jg
fidivrs
mov
cmp
sbb
pop
int3
jl
jmp
sub
xor
inc
hlt
and
mov
adc
mov
or
adc
xchg
lcall
adc
dec
imul
in
jae
loopne
imul
sbb
filds
push
loope
jbe
cli
push
sub
dec
ret
push
clc
push
mov
ret
dec
enter
lcall
jecxz
es
sti
push
sahf
add
rcl
mov
cwtl
adc
int3
addl
and
xor
enter
mov
xchg
mov
jmp
lds
push
mov
popa
cmp
repnz
sbb
cmp
push
jp
xor
mov
dec
mov
jmp
jae
insb
add
mov
push
and
iret
pop
lods
push
dec
push
push
sbb
mov
push
or
add
ret
fwait
insb
sbb
pop
push
mov
lcall
bound
jg
sarl
sub
mov
adcb
push
icebp
sub
mov
pop
pop
out
jecxz
sbb
fpatan
mov
pushf
sbb
mov
mov
push
pushf
sbb
adc
xchg
mov
jle
sub
mov
call
sbb
test
ja
scas
mov
repnz
jp
cmp
stc
push
jl
inc
jle
push
popf
std
inc
ret
cld
pop
inc
adc
inc
push
repnz
out
xor
push
cmp
setge
mov
pop
insl
in
dec
into
sub
mov
cmp
lods
aaa
adc
mov
xlat
leave
jbe
lret
loop
ror
or
adc
inc
xchg
or
dec
fsubrl
aad
sbb
jl
dec
pop
in
js
push
lods
icebp
aas
and
enter
jl
in
jb
hlt
int3
popa
push
pop
cmp
sbb
xor
dec
insl
or
repnz
in
cwtl
jns
lret
push
decl
popa
cmp
sahf
pop
inc
xchg
push
or
mov
push
xchg
mov
lret
lods
call
mov
and
cmc
xchg
mov
lret
dec
cli
movsb
xlat
repnz
adc
cmpsl
scas
push
mov
push
mov
nop
call
push
or
mov
push
dec
dec
insb
lcall
lcall
int3
or
xchg
pushf
inc
jl
js
mov
dec
push
lret
mov
cmp
data16
dec
lock
dec
sbb
mov
es
mov
push
loopne
inc
push
or
inc
faddp
lret
xchg
stc
cmpsl
xchg
fiadds
xor
sbb
stc
mov
sti
movsb
lds
cmp
fildll
add
mov
fnstcw
and
xchg
rolb
sub
ret
pop
push
sti
jns
mov
or
or
outsl
mov
call
cmpl
adc
enter
fcmovnbe
lea
pop
cmp
dec
lret
gs
movsl
jp
stc
dec
loopne
sub
xlat
aas
dec
cltd
add
mov
inc
int
mov
pushf
jge
lods
lcall
dec
ret
shrl
cmp
jg
adc
push
lods
andb
add
xorb
outsl
aaa
mov
mov
push
pop
imul
scas
shll
dec
iret
lcall
sbb
enter
ret
clc
cmpsl
movl
ret
push
std
inc
roll
jne
xchg
mov
rcrb
mov
pop
and
jo
and
dec
lods
and
lds
jnp
adc
insl
push
mov
fimuls
jge
adc
mov
addl
lods
push
mov
loope
enter
test
sbb
mov
xor
pop
dec
icebp
sbb
sub
enter
cli
cmpsb
loope
fisubs
inc
gs
pop
inc
stos
inc
or
bound
fxch
fsubs
jns
inc
mov
inc
decb
dec
movsl
jle
push
cwtl
shlb
mov
jmp
jnp
scas
xorb
fimuls
sti
cmp
lock
std
popf
sub
aas
xor
fdivs
and
jnp
lcall
cld
cld
push
sub
jp
inc
in
mov
fildll
enter
push
insb
femms
mov
sub
cbtw
lahf
pop
mov
and
pushf
mov
aas
xchg
add
mov
cltd
scas
add
gs
push
xchg
xchg
mov
push
sub
mov
imul
lahf
inc
out
push
or
adc
add
cld
adc
xor
inc
and
dec
adc
or
push
sbb
jno
xlat
jnp
jecxz
adc
sarb
test
push
rorl
adc
jb
mov
dec
cs
cmp
popa
lods
ss
icebp
sbb
xchg
scas
into
popa
dec
pop
popf
xor
sbb
xchg
mov
aam
xor
pop
stos
mov
test
mov
xchg
mov
lret
add
ret
or
mov
rclb
push
enter
mov
rol
popa
movsb
xor
lret
stos
mov
imul
push
rorb
mov
addl
pop
movb
mov
aaa
pop
or
fidivrl
and
mov
ds
clc
sbb
add
mov
mov
xchg
mov
jge
in
pop
inc
inc
mov
jnp
ret
sbb
pop
test
pop
cltd
test
insb
repnz
stc
sbb
jecxz
in
xchg
push
cmpsl
pop
jne
adc
sbb
mov
cmpsl
xchg
mov
test
push
cmp
rol
stc
into
sarl
sub
into
insb
enter
gs
sbbb
or
insb
mov
imul
aad
cmpsl
adc
sarl
mov
faddl
mov
je
movsb
test
cmc
test
or
mov
fisttpl
dec
and
mov
sub
rolb
push
outsl
frstor
cmpsb
int3
test
out
fnsave
pop
xchg
xor
add
inc
jne
in
cwtl
pop
fsub
cmp
mov
leave
fwait
or
popf
push
lea
std
sub
cld
sub
lea
call
adc
dec
aam
fbstp
cmp
lcall
dec
lods
scas
fmull
push
cmpb
stos
lods
fnstsw
shrl
inc
test
jp
xchg
cmp
fnstenv
or
movsl
cmpsb
int
fmul
lock
mov
lods
jge
jl
fnstenv
decb
lods
int
xchg
repnz
xor
mov
aas
test
jl
out
out
scas
xor
fcmove
ret
cltd
dec
jl
mov
xor
fsub
inc
mov
sti
xchg
mov
mov
cmpsl
cltd
dec
dec
je
jg
lret
scas
enter
in
sbb
dec
orb
rcr
lods
enter
out
push
ror
push
inc
lret
scas
sbb
loope
xchg
js
push
outsl
dec
jp
rcl
fbld
enter
repz
mov
pop
xor
lds
sub
cltd
test
mov
rorb
inc
pushf
cwtl
mov
fistpl
pop
sub
mov
adc
lret
repnz
mov
fwait
inc
scas
nop
lods
add
jns
push
lcall
add
js
inc
dec
rcl
xchg
add
repz
iret
lret
jb
dec
sbb
fnstsw
mov
xor
and
push
push
iret
fistpl
push
sub
lds
loopne
inc
fwait
insl
cmp
dec
lret
mov
test
sbb
cld
pop
in
mov
jb
cs
cmp
mov
pusha
pop
xor
movsb
adc
or
and
pop
out
jno
outsl
sbb
and
sub
ret
and
xor
cld
inc
std
inc
mov
test
mul
or
rorl
push
sub
push
faddl
sub
les
xlat
push
sbb
leave
out
cmp
addr16
movsl
rcll
and
xor
inc
mov
cmp
popa
data16
xor
adc
jns
push
adc
cwtl
lcall
sbb
xor
sbb
aad
stos
std
js
scas
inc
sbb
jb
ret
push
xor
aad
lcall
pop
into
cmc
aam
push
lret
inc
jb
push
xchg
push
ret
lods
fildl
iret
lret
js
push
pop
pop
stc
xchg
push
es
adc
gs
lahf
mov
ds
add
cld
sub
sbb
dec
xor
js
sbb
mov
fwait
mov
test
rorl
int3
inc
cmpsb
lret
ds
sbb
lods
add
mov
movsl
adc
add
int3
ret
cli
cmp
push
xlat
or
mov
fimuls
out
ds
es
movsb
aaa
loopne
mov
ret
and
inc
xor
stos
rolb
test
imul
popa
mov
and
les
scas
push
les
roll
jb
xlat
and
arpl
aam
outsb
test
mov
shll
repz
rcr
inc
push
in
mov
leave
add
fwait
inc
daa
lock
shrb
sbb
jns
leave
xchg
lret
pop
jns
dec
sbb
mov
les
mov
push
mov
cmp
jbe
inc
pop
pop
mov
int3
push
cmp
addr16
mov
mov
inc
mov
les
pop
inc
xchg
sbb
popw
mov
stos
in
dec
pop
rolb
mov
ljmp
scas
mov
mov
jmp
mov
adc
push
clc
lret
dec
lock
or
movsb
out
mov
inc
adc
cwtl
dec
arpl
fcompl
sbb
mov
adc
push
std
sbb
and
ror
push
sub
inc
out
shll
fstpl
push
daa
add
adc
repnz
add
arpl
imul
in
xlat
pop
lods
xchg
sbb
mov
xchg
xor
aas
xor
imul
test
pop
pop
out
inc
push
adc
in
add
jp
addr16
lret
xchg
pop
jmp
mov
fcmovne
int3
add
pop
inc
adc
push
roll
sub
and
lea
mov
sbb
mov
add
push
jmp
push
fidivrl
mov
andb
insb
mov
and
mov
test
enter
cmpsl
add
loop
or
adc
mov
mov
cmp
push
cmc
adc
inc
push
cmp
and
mov
cmpsb
fs
cmp
test
pop
mov
jp
dec
xor
fwait
push
inc
sbbl
pop
dec
cld
repnz
loop
es
lret
dec
lods
into
lods
js
test
ja
mov
push
lcall
sarb
dec
cmp
sbb
lock
lods
outsl
int3
aad
push
enter
and
add
sub
gs
test
gs
add
mov
test
pop
rcr
xchg
mov
aam
out
ror
gs
cmp
or
push
xor
sbb
pop
mov
or
lret
leave
push
jp
bound
fcomps
lcall
xor
and
mov
cmp
pop
sbb
mov
cli
pop
adc
sbb
gs
push
mov
es
mov
mov
or
popf
inc
sbb
inc
insl
or
mov
in
sbb
sub
cmpsb
test
loopne
push
jge
mov
mov
subb
sbb
mov
inc
jo
dec
test
aam
sti
xchg
imul
jb
xchg
scas
es
mov
int
inc
dec
imul
adc
xor
and
fcoml
add
pop
in
and
sbb
loop
dec
push
or
fidivrl
adc
pop
adc
cmp
pop
cmp
xlat
add
lcall
push
loope
xchg
ljmp
or
std
data16
stc
adcl
push
popf
cmp
or
cmp
jne
hlt
dec
mov
adc
dec
ret
jae
push
xchg
movsb
in
addr16
cwtl
cld
push
adc
push
hlt
pop
xchg
stos
data16
fldcw
sbb
sahf
mov
inc
xor
sub
test
out
xor
mov
cmp
fs
pop
add
repz
or
ret
fsubrp
or
jge
inc
jmp
mov
hlt
insb
lods
add
cmp
mov
xor
fldl
mov
sub
cwtl
es
cmc
pop
and
mov
inc
sub
push
into
mov
mov
sub
mov
aaa
push
push
stos
or
mov
pop
fdiv
je
loopne
add
outsl
in
nop
arpl
mov
repnz
movsb
sti
in
jle
call
mov
insb
cmp
pop
jb
cmc
dec
push
jnp
adc
rcrl
ret
fs
jb
lods
aas
push
repz
orb
gs
and
mov
inc
ret
jb
and
repnz
mov
lret
adc
outsb
jge
push
push
inc
pop
jns
iret
push
aam
enter
xor
lods
out
mov
out
xor
movsl
cmpl
pop
and
mov
sbb
push
iret
push
ret
fidivrs
adc
test
mov
rorl
cmp
push
outsl
mov
pop
aam
adc
mov
sbb
mov
lret
cwtl
pop
pop
loope
pop
stc
repnz
nop
push
mov
adc
dec
cmp
sbb
out
sbb
mov
cmp
inc
loopne
jp
mov
divb
ljmp
pop
inc
xchg
js
dec
mov
loopne
sbb
les
push
cmpsl
fs
lret
adc
pop
mov
mov
push
sbb
cmp
sub
and
pushf
or
xchg
lods
pop
ret
aam
jp
mov
stc
test
aam
or
data16
push
sub
es
nop
xchg
mov
mov
les
dec
test
mov
repnz
ss
rep
mov
mov
mull
daa
addl
ret
hlt
call
cmp
push
pop
xorb
push
mov
js
bndldx
and
in
jmp
icebp
loopne
sti
test
add
addr16
fimull
cld
mov
fnstsw
decb
addr16
cmpsb
ja
add
or
cmp
outsl
or
aad
sarl
mov
insl
mov
push
xorb
leave
jl
push
jp
sbb
fadd
xor
inc
cmp
repz
imul
mov
jl
jae
rorb
mov
xor
aaa
lcall
mov
je
addr16
mov
popf
jb
adc
sub
add
xchg
push
repz
test
in
stos
cltd
adc
or
mov
mov
cmp
sbb
int3
and
repz
call
cltd
iret
frstor
cmpsb
aaa
cwtl
sbb
hlt
pop
imul
loope
cmpsl
inc
adc
jge
xchg
mov
bound
pop
sub
or
stc
push
mov
cmp
fsubrl
mov
std
push
js
adc
sub
mov
std
paddusb
mov
or
adc
femms
cmp
cmp
pushf
test
ffreep
sub
jecxz
push
lret
bnd
add
add
fnstsw
mov
add
out
or
fs
mov
or
mov
pop
pop
and
cld
pop
test
lea
rolb
sbb
ret
add
inc
lcall
sub
or
insb
add
outsb
dec
cltd
lcall
and
ret
cmp
xor
push
lret
cld
aaa
cs
xlat
rol
add
test
nop
pop
xor
add
inc
dec
iret
jnp
call
jo
mov
mov
ret
mov
or
mov
mov
loop
push
pop
movsl
or
fsubl
mov
mov
jno
movsb
lds
ja
sarl
adc
sbb
push
shlb
jb
add
scas
aad
xchg
or
repnz
sub
fwait
sub
jae
inc
mov
mov
jbe
leave
xchg
dec
sub
adc
std
jo
fmulp
xor
mov
sbb
movsb
cld
xlat
popf
jns
dec
in
fimuls
imul
or
add
test
adc
add
arpl
call
outsb
test
orl
into
in
clc
aaa
xchg
mov
sbb
inc
dec
mov
repz
out
insl
push
inc
popf
jecxz
mov
inc
loopne
pop
pop
fstpt
push
popf
mov
cld
cmp
lret
jmp
push
sbb
xchg
fyl2x
int
bnd
int
or
enter
mov
cld
pushf
push
push
jne
test
pop
sub
lret
jns
loopne
or
icebp
inc
jne
pop
in
call
push
fsubl
pop
pop
xlat
inc
pop
pop
aas
dec
addr16
sbb
fmulp
sub
or
repnz
popf
cmpsl
cld
push
adc
fdivrl
in
mov
dec
pop
jns
cmp
add
mov
aam
xor
notl
xor
xchg
lock
dec
and
data16
adc
xor
sbb
leave
mov
int
js
ss
fs
cmpsl
bound
xchg
mov
inc
call
inc
cld
adc
sarl
or
mov
sbb
pop
jecxz
dec
push
call
out
shrb
leave
jbe
jns
jl
mov
and
inc
mov
stos
sbb
ret
insb
xor
pop
pop
pop
in
enter
repz
jp
repnz
push
subb
lods
fcompl
lds
sbb
push
int
jle
sbbl
cmc
mov
cmp
xchg
mov
fldcw
inc
movb
fsts
aad
and
mov
dec
jl
jns
inc
mov
or
inc
fidivrl
xor
and
mov
pushf
cmp
les
mov
fs
lock
into
fildl
lods
push
arpl
lods
jle
int
add
xor
mov
nop
fsubrl
cld
mov
sub
mov
sbb
xchg
cmp
or
sahf
jge
aas
enter
pushf
or
outsl
test
mov
mov
xor
mov
and
mov
orl
cmpsl
push
cld
jmp
mov
jbe
in
jl
dec
jb
lock
xchg
push
xlat
xlat
enter
mov
daa
cmp
sub
mov
cmp
pushf
and
lret
sar
andps
pop
mov
shll
in
cld
ljmp
inc
push
mov
rcr
mov
jnp
cmp
lds
test
lcall
mov
mov
mov
mov
jecxz
mov
cmpsl
stc
pop
scas
add
addl
inc
repnz
nop
cs
inc
rolb
lret
shrl
fwait
mov
pop
sahf
mov
sbb
adc
mov
clc
pop
mov
dec
and
xlat
cld
enter
pop
xchg
aad
jl
fadd
in
into
andb
mov
sbb
lret
dec
xchg
ds
jl
sbb
or
push
and
xor
add
call
repnz
xchg
scas
stc
insl
inc
sub
add
bound
pop
les
xchg
cltd
cmp
push
sub
test
jecxz
shlb
push
aaa
mov
enter
add
dec
test
pop
imul
mov
mov
out
testl
out
adc
daa
shl
jle
jns
std
fwait
mov
lcall
xchg
xlat
push
rorl
int3
pop
mov
fwait
or
or
xchg
xor
cmc
mov
out
loopne
or
xor
fdiv
push
sub
lods
gs
shr
xchg
fdivl
sti
in
mov
sbb
xchg
int3
jbe
fs
and
mov
pop
mov
jae
add
add
dec
lcall
xchg
inc
sbb
or
std
inc
or
and
mov
xor
xchg
dec
cmp
sbb
cld
push
popf
insb
cmp
stos
insl
xchg
std
sbb
scas
mov
shlb
stos
xlat
or
mov
pop
sbb
or
fsubrl
aam
adc
xchg
vmovups
testb
enter
dec
into
xchg
push
sub
mov
pop
lret
std
xor
inc
jmp
mov
mov
fisttpl
pop
sbb
add
mov
fs
cmpsb
mov
lret
int
stc
sub
or
sbb
sbb
jne
sbb
ficoml
out
sbb
rcl
push
outsl
jle
dec
cmc
adc
sbb
loop
lds
inc
jne
jne
jae
jo
push
mov
cwtl
pop
inc
push
ret
decb
in
outsl
cmp
jg
dec
shl
xchg
test
enter
push
aad
test
out
sub
lds
or
aas
loopne
fdivrs
mov
fsubr
inc
push
ja
lds
hlt
push
imul
inc
push
decb
jnp
mov
jae
pop
pop
flds
or
fsts
push
ret
outsb
imul
fldenv
rclb
pop
pop
mov
lock
jne
lahf
inc
out
mov
sbb
xchg
test
lret
lods
cmp
inc
test
popa
pop
dec
outsb
js
insl
push
push
test
out
push
jle
xor
arpl
repnz
fisubrs
cmpl
pop
jle
dec
mov
clc
imul
out
mov
or
and
adc
add
lds
test
dec
aaa
orl
outsl
or
xor
rcr
and
sub
test
ret
mov
clc
gs
punpckldq
mov
jle
shll
push
cli
mov
sub
shl
lods
or
pop
and
ljmp
xchg
lea
sbb
sub
push
add
inc
jge
rcll
sti
pop
mov
push
inc
inc
repnz
push
arpl
xchg
mov
dec
add
aam
adc
or
cmp
mov
arpl
push
sub
lcall
mov
in
adcb
cmp
pushf
mov
subb
fidivl
or
inc
mov
fstps
sub
cmpl
mov
into
loope
cmpsl
mov
fucomip
inc
cwtl
mov
fxch
cwtl
sbb
mov
jb
dec
ret
mov
ds
add
jb
or
xchg
mov
std
test
sbb
inc
push
int3
add
add
push
mov
xchg
mov
ss
pusha
push
jge
jl
in
xor
mov
fnsave
xchg
and
or
xor
xchg
push
xchg
sarb
jle
mov
xchg
popf
lds
xchg
push
cli
mov
dec
sub
push
rolb
imulb
fsub
pusha
sub
or
outsl
xchg
or
mov
popa
fwait
movsl
inc
push
ret
adc
push
gs
iret
mov
add
xor
je
outsl
mov
sub
jg
frstor
xchg
pop
cmp
pop
adc
fstpt
ret
add
fadds
jecxz
ficoms
iret
cmpsl
adcl
jne
push
int3
cli
pop
jae
into
sarb
push
les
xor
rcl
push
or
mov
pusha
in
pop
ret
es
or
outsb
fdivrs
out
inc
or
rolb
dec
jge
cmp
add
mov
repnz
les
out
mov
lret
adc
jle
add
mov
outsl
int
test
movsl
xchg
leave
adc
aam
mov
sbb
frstor
hlt
pop
xchg
mov
jb
push
fs
cmp
push
popl
mov
jnp
arpl
mov
fldenv
jns
push
flds
adc
ds
dec
leave
dec
inc
jle
push
xor
addb
dec
les
scas
test
int
insb
xorl
push
xor
push
or
push
mov
aad
pop
xor
movsb
jns
nop
mov
or
mov
lret
fucomip
add
xor
movsl
jns
pop
or
test
jmp
mov
rcl
gs
jnp
jno
es
adc
shlb
in
sar
cmpb
cmpsl
jecxz
iret
xor
mov
push
lods
test
int
xlat
push
jge
or
test
repnz
mov
sbb
cmpsl
or
lcall
into
ror
push
sbb
insb
mov
testb
mov
lods
popf
dec
xchg
cmp
testl
mov
or
test
pop
mov
dec
inc
lret
push
stc
addr16
mov
test
jl
xor
jb
dec
sbb
mov
lock
inc
pushl
adc
pop
sbb
sub
dec
int
mov
in
lea
mov
pop
push
pop
push
pop
addr16
xchg
mov
xchg
inc
bswap
mov
lods
les
fcomps
or
mov
cmp
xlat
aam
orb
stc
lods
inc
xchg
and
mov
jge
inc
jns
iret
mov
xchg
jo
sarl
rcrl
sub
enter
push
cltd
cld
lods
fistps
stos
and
fcompl
pop
lcall
nop
imul
mov
jb
mov
lods
adc
inc
loopne
and
pop
incl
fldcw
sbb
mov
cld
mov
daa
dec
in
lea
fcoml
movsb
dec
shlb
lea
push
out
push
lock
dec
in
or
in
mov
sub
mov
cmp
js
dec
ret
add
cmp
push
jnp
cmpsb
adc
setp
dec
push
sub
test
or
cmp
xor
lcall
mov
lret
cmpsl
into
leave
fcompl
ret
pop
movq
mov
aad
ret
enter
lds
inc
shrl
fistl
lds
sub
jl
dec
pop
mov
loope
push
int3
pushf
jecxz
push
xchg
and
pop
daa
dec
xor
ficomps
arpl
das
test
mov
fistps
cmp
inc
bound
fucom
ljmp
test
sub
inc
cmp
cmpsb
out
dec
movsl
add
in
push
out
mov
testl
inc
add
sbb
int3
int
rcrl
mov
scas
int3
adc
xchg
sub
bnd
mov
jns
sbb
int
push
mov
test
test
icebp
rcrb
pop
rorl
push
mov
data16
sahf
shlb
jl
es
addr16
add
pop
dec
ret
adc
mov
add
outsb
mov
out
cwtl
add
adc
in
cmp
ds
add
dec
int3
outsb
and
xchg
push
sar
sbb
sub
inc
lods
or
test
cmp
push
es
out
fs
popa
xchg
loopne
mov
fxch
push
je
jne
cmp
sbb
cmp
nop
lcall
orl
dec
or
xlat
movsl
iret
dec
bnd
lods
dec
loopne
mov
into
mov
and
push
xchg
add
adc
mov
adc
into
xor
or
sbb
sbbl
mov
loope
dec
std
enter
imul
mov
push
xchg
sub
xchg
mov
push
lcall
in
sub
lret
fdivrl
and
test
lea
cmpsb
jmp
add
add
mov
stc
pushf
sbb
push
push
das
cmp
mov
iret
mov
mov
cli
push
jnp
xchg
mov
fsubrl
sbb
adc
lcall
sbb
sbb
stc
cmp
or
sub
add
or
and
adc
imul
in
dec
insb
mov
dec
sar
je
rcrl
repnz
shll
add
pop
bnd
fwait
int3
mov
popl
xlat
jo
push
ljmp
sbb
mov
dec
sti
xor
lods
pop
arpl
pop
xchg
add
mov
xor
fdivl
insl
lcall
push
pop
pop
fidivrs
or
and
js
lret
xor
enter
push
or
xchg
enter
ja
dec
xchg
enter
or
cmp
xchg
loopne
sbb
push
and
movsl
outsb
in
mov
sbb
les
jae
or
mov
test
mov
dec
sub
les
movsl
leave
inc
sub
dec
cmp
dec
xor
int3
mov
stos
daa
sbbb
cmp
rorl
ss
sbb
repz
out
gs
loope
mov
lret
cld
jnp
mov
incl
arpl
icebp
push
inc
sub
cli
xor
outsb
ljmp
fcomps
flds
repz
mov
pop
push
ss
leave
pushf
push
aad
dec
aas
fcoms
ret
push
xchg
sbb
icebp
inc
lcall
or
mov
stos
addr16
jb
mov
lret
xchg
mov
stos
movsb
add
mov
test
popf
stos
adc
ds
aas
stos
scas
ror
push
dec
fidivs
mov
pusha
sti
cmp
cmp
jl
dec
cmp
shll
int3
jle
inc
pop
mov
repz
mov
insl
jecxz
mov
aas
xor
add
push
and
enter
rcr
jmp
mov
stc
popf
mov
jle
push
adc
jl
mov
jne
jmp
int3
mov
setge
mov
cmpsb
and
xlat
mov
nop
in
add
test
sub
packssdw
jo
xor
cmp
outsb
scas
jmp
scas
insb
sbb
mov
jecxz
les
cwtl
ret
mov
sbbl
sbb
cltd
xchg
fbld
inc
push
loop
nop
shrb
lret
adc
push
jb
cmc
mov
mov
fwait
xchg
cmp
aam
pop
movsb
call
lcall
and
xchg
adc
lods
push
fmull
dec
int3
jo
push
in
addl
mov
lret
sbb
and
sbb
pop
adc
out
ret
cmp
aaa
mov
xchg
inc
mov
push
xor
push
jno
daa
inc
orb
add
fmulp
mov
mov
cmp
mov
cli
mov
fdivrs
mov
in
pop
sub
insb
mov
or
in
mov
sti
fisubl
push
mov
in
cld
sub
xchg
lods
sahf
mov
inc
cs
cmp
mov
js
pop
mov
mov
and
addr16
inc
jge
movsb
stos
lcall
xlat
push
shll
ret
cld
push
sahf
roll
sub
dec
fldenv
mov
push
inc
xor
scas
bound
jl
xchg
in
push
aam
movsl
push
mov
scas
cli
jmp
jno
push
notb
push
jne
xchg
out
dec
test
inc
mov
stos
bound
movsb
sbb
dec
je
iret
nop
andl
mov
adc
xlat
cld
dec
lods
lret
adcl
cmpl
out
push
ret
movsb
jge
rorl
dec
and
jae
mov
xlat
mov
rcrb
test
cld
push
xor
dec
adc
inc
mov
pop
adc
aaa
test
ret
daa
int3
mov
test
xchg
leave
mov
fstpl
stc
and
jp
jae
pop
cld
and
jb
ficomps
or
ss
flds
aam
mov
push
enter
shll
inc
push
fs
xchg
and
mov
and
dec
dec
shrl
cmp
pop
mov
jae
adc
je
mov
mov
clc
shr
inc
and
test
int3
scas
cmp
inc
jb
out
popa
mov
cwtl
pop
dec
mov
leave
push
jns
cmpsl
mov
in
push
and
lods
popf
or
fildl
xor
stc
sbb
dec
mov
dec
ds
adc
mov
and
xor
inc
insl
cwtl
test
dec
aam
cwtl
mov
out
push
gs
dec
jns
pop
cmpsl
in
ror
sub
por
cmp
iret
mov
push
xor
addr16
mov
mov
push
sub
js
scas
mov
mov
sahf
sbb
cli
or
adc
aad
push
test
mov
addr16
fistpll
loopne
mov
push
loop
or
pop
push
xlat
mov
mov
cmp
addr16
mov
jle
cmp
push
pop
sub
inc
mov
pop
stos
inc
jp
loope
ficomps
enter
xlat
sbb
push
inc
rcl
subl
push
bnd
hlt
sbb
lods
iret
mov
mov
or
sar
aad
jne
int
cmp
lods
mov
xchg
repz
sarb
andl
into
es
lret
in
rorb
adc
lods
fdivl
ret
and
fcmovbe
jns
mov
push
dec
aad
fcomps
xor
and
dec
mov
xchg
cmpsl
in
mov
into
sarb
or
xchg
mov
or
xchg
xor
fdivl
outsb
int
sti
add
adc
fnstcw
and
xlat
scas
push
cmpsb
xor
andb
xchg
push
iret
test
jo
push
test
pop
iret
test
add
aad
mov
xlat
lods
mov
pushl
push
aam
mov
repz
push
in
jmp
test
lods
aad
push
fistl
idivl
rclb
flds
mov
popa
cmp
jns
inc
inc
sub
sub
or
je
enter
arpl
fldt
add
mov
stc
lcall
pop
add
repnz
cmpsl
fbld
rcll
leave
rolb
enter
fs
jo
push
shrb
mul
icebp
mov
movsl
fwait
test
cmp
loop
int3
xlat
stos
push
dec
shr
fdivr
lock
shll
pop
add
jbe
mov
sub
ret
mov
cltd
mov
inc
sub
scas
test
mov
popf
or
ret
cmpsb
in
pop
test
push
fstpl
and
mov
cmc
dec
ljmp
jns
sub
sub
cwtl
frstor
jns
scas
int3
fisubl
out
lret
popf
test
xchg
dec
mov
jp
xor
sbb
cmp
add
fs
cmp
shll
mov
push
lods
cmpsl
loop
popw
out
push
sbb
sbb
jns
sbb
jnp
cld
mov
popf
imul
ret
pop
inc
mov
jp
adc
sbb
mov
arpl
jle
mov
je
lea
into
cld
je
bound
aaa
push
jb
and
push
and
pop
orl
fldcw
mov
loopne
sti
xchg
mov
dec
lea
rol
cwtl
ret
adc
sub
sub
out
test
mov
inc
pop
in
xor
mov
xor
mov
mov
adc
cmpsl
inc
rcrl
fcoms
pop
imul
subl
rcl
xchg
push
adc
clc
fdiv
jae
xchg
sbb
dec
shrl
xchg
xchg
xchg
push
push
dec
outsb
shll
xchg
xor
test
or
aam
add
sbb
dec
rolb
test
pop
sub
pop
fisttpll
cmpsl
les
jge
lret
mov
fwait
aad
jge
aaa
push
dec
fdivr
and
adcb
fimull
or
inc
inc
mov
rcrb
jp
outsb
fistps
roll
int3
inc
mov
out
icebp
sub
inc
int3
movsl
imul
cmp
test
test
mov
or
loopne
cmp
shlb
mov
shrl
push
mov
sub
xor
cmp
dec
lcall
adc
add
icebp
lret
pop
cmp
test
es
sar
fildl
xor
mov
lret
dec
shll
mov
or
in
insl
test
sarl
in
daa
enter
into
inc
jbe
and
scas
xlat
jns
adc
cwtl
gs
sarl
je
jnp
emms
imul
lock
pop
cli
test
pushw
xchg
shll
lods
mov
cmp
in
xlat
test
pop
sbb
mov
sub
mov
adc
sbb
cmpsb
dec
pop
movsb
xchg
jmp
adc
dec
jbe
lods
mov
push
dec
mov
dec
adc
and
xchg
pop
mov
or
dec
sbb
cld
in
out
inc
clc
mov
movsl
mov
jp
sbb
push
rolb
movsl
adc
push
cmp
test
and
sub
add
popa
sub
cs
rcr
cmpsb
sar
xor
fcmovne
push
popf
dec
sbb
mov
repnz
insl
cmp
dec
adc
sbb
or
mov
add
xor
pop
cmpsb
pop
popf
sahf
stc
stc
enter
lret
dec
xor
fldenv
push
mov
les
cmc
push
pop
fdivl
insb
cld
cwtl
or
xlat
mov
cmp
jns
dec
mov
lds
lods
pop
add
jmp
mov
push
cmc
push
sub
mov
xlat
and
mov
or
cmpsb
fwait
push
stc
pop
test
idivl
sbb
imul
push
fistpl
push
jp
push
mov
jne
outsl
data16
jg
outsl
pop
fdivs
sub
lcall
pop
xor
imul
sbb
mov
icebp
nop
mov
arpl
cltd
push
sub
imul
in
xorb
ret
imul
mov
arpl
jb
jl
std
sti
lods
cmpsl
stos
or
cmp
ret
cmp
jb
pop
lret
ffreep
rcr
hlt
stc
dec
cltd
loope
ss
xlat
mov
aad
in
bound
mov
inc
ror
stc
mov
sub
test
jns
jbe
test
ret
enter
stc
adc
cld
iret
xor
mov
int
lods
test
and
sub
das
iret
cltd
insb
mov
rcrl
mov
ret
dec
or
sbbb
test
loope
sub
lods
test
ret
scas
rcr
xlat
test
pushf
jb
fdiv
lods
pop
stc
add
inc
data16
out
sbb
cld
addl
enter
stc
imul
inc
in
scas
xchg
stos
or
stc
in
testl
xorl
stc
pop
loope
push
lds
and
cmp
sub
inc
mov
pop
jmp
jo
aad
dec
leave
pand
xlat
sti
and
lds
pop
fcmovnbe
lret
inc
lds
lret
and
xchg
in
test
jl
leave
movsb
iret
mov
or
int3
sub
xor
enter
std
ds
nop
vpinsrw
add
dec
mov
out
cmp
and
pushf
and
mov
dec
mov
scas
mov
loopne
lds
fstp
or
cmpsl
rcl
aam
fldt
mov
out
lods
inc
lahf
push
mov
add
shlb
shlb
jmp
fwait
js
stc
add
addb
mov
cltd
fldenv
push
test
mov
shrl
lods
lret
out
lods
leave
cmpsl
int3
inc
paddq
cmp
outsb
jl
inc
fadd
mov
xor
leave
fyl2xp1
push
sub
mov
int3
pop
iret
fs
and
stc
mov
stc
or
inc
fidivrs
int3
mov
pushf
imul
test
ret
mov
inc
dec
inc
ret
insb
stos
dec
stc
ret
mov
ret
sbb
outsb
ret
ss
add
dec
add
repnz
ret
xor
clc
rorl
in
cmpsl
ret
or
or
test
mov
push
test
mov
inc
mov
leave
mov
rcll
fld
jp
add
xlat
mov
add
ret
icebp
pop
pop
fildl
jge
mov
fstp
rorl
adc
cmpsb
roll
xchg
ljmp
inc
repnz
inc
ret
leave
popa
fdivrl
lret
jbe
push
cmpl
cmp
jg
push
push
pop
mov
mov
cltd
rcrb
stos
dec
jae
cmp
punpckhdq
lret
test
rclb
imul
mov
int
sbb
and
lret
leave
stos
inc
push
faddl
push
mov
std
xor
enter
mov
mov
int
xor
pop
les
push
rcr
fmull
movsb
sub
cmp
or
mov
mov
negb
inc
into
test
dec
mov
xchg
push
pop
mov
pop
mov
sbb
mov
lods
and
cmp
movsb
and
xor
mov
jl
adc
stos
test
jge
test
mov
mov
pop
dec
aad
lahf
stc
shll
cli
loopne
sbb
or
cltd
fs
and
mov
xchg
xchg
fildl
pop
rcll
fcmovne
pop
cmpsl
scas
mov
mov
stc
rcrl
pop
test
idiv
shl
jl
stc
jmp
test
inc
dec
jns
xor
rorl
xchg
lret
xor
or
fs
jae
xchg
xchg
out
fidivl
arpl
fmull
arpl
fld
mov
lcall
mov
add
jle
mov
mov
xchg
push
jp
rorl
dec
add
mov
arpl
mov
dec
test
pushf
dec
test
ja
push
cmp
mov
inc
int
in
jb
lret
js
das
inc
add
jo
push
stc
fbld
add
fbld
or
sub
rcr
loopne
dec
sbb
stos
inc
cmpsl
push
or
mov
push
fdivr
lds
stc
dec
shrl
and
aas
subl
dec
add
mov
inc
lret
loope
inc
ffree
adcl
dec
ror
mov
stc
std
and
cmp
ficoms
ret
add
sbb
mov
les
xlat
pop
test
lret
clc
gs
inc
insl
ret
imul
inc
inc
andl
cmp
adc
xchg
in
shll
scas
dec
cmpsb
jl
nop
mov
mov
fldlg2
xor
jns
test
lret
mov
ret
sub
cmp
xlat
dec
mov
xor
dec
js
sub
inc
imul
xor
jo
cmpsb
stc
push
or
add
imul
xchg
mov
aad
stc
insb
push
jmp
add
stos
add
mov
out
repz
xchg
sub
cld
or
leave
pop
inc
lods
mov
dec
ret
push
test
jne
add
mov
lret
xor
test
or
test
dec
cltd
xchg
fsubr
push
lcall
mov
mov
out
mov
push
lock
xor
nop
arpl
xor
test
iret
into
mov
flds
mov
test
and
imul
pop
mov
js
aad
push
movsl
jb
adc
icebp
shll
inc
mov
fst
or
mov
les
shrl
inc
or
test
add
pop
pop
xor
std
xchg
dec
stc
cmc
or
lods
faddl
stos
fsubrl
pusha
mov
lock
mov
cmc
test
lods
cmpsb
cmpsl
sbb
jmp
clc
xor
dec
sbb
adcl
test
fmul
dec
ret
and
test
rclb
inc
inc
ret
dec
inc
movsl
cmc
push
mov
movsb
mov
jp
ret
int3
mov
daa
call
or
cmpsl
mov
rorl
ret
daa
cltd
xchg
cld
mov
cld
add
inc
mov
inc
rcrb
outsb
xchg
aad
jo
mov
jl
orl
daa
mov
movsl
xlat
lret
aam
mov
cld
rcl
adc
mov
mov
rcl
jb
add
std
xor
xor
inc
shrl
fmull
mov
loop
sti
cmpsb
dec
xor
add
mov
test
ret
xor
push
dec
mov
fsts
rorl
dec
mov
inc
lods
cmp
test
pop
cld
sbb
jl
stc
cmpsb
jae
push
cltd
flds
xchg
mov
ja
inc
out
mov
cld
add
inc
leave
ret
sub
ret
mov
daa
push
int3
sbb
and
fnstenv
arpl
test
pop
leave
fildl
push
ret
inc
leave
or
rcr
int3
inc
bndstx
pop
mov
leave
sbb
addr16
lret
aaa
cmpl
into
movsb
and
popa
mov
dec
push
arpl
roll
bound
push
mov
mov
not
enter
pop
mov
mov
xlat
xchg
sbb
fld
mov
dec
inc
and
xlat
mov
stc
ret
fcmovne
inc
mov
xlat
mov
les
mov
xlat
mov
aas
dec
xor
stos
cwtl
movsl
in
ds
xchg
int3
jae
sbb
in
fisubrl
fadd
int
and
lds
mov
xlat
repnz
and
dec
push
push
cmpsl
push
stc
cli
jb
mov
and
stos
cmpsb
xor
cltd
ret
filds
mov
movsl
mov
mov
mov
fmull
mov
lret
femms
cmpsb
inc
push
enter
mov
loope
fld
mov
add
dec
lods
fxch
int3
and
fmull
daa
rcr
dec
fcmovnu
movsl
int3
pusha
shll
stc
and
sub
into
test
mov
mov
jl
inc
inc
mov
mov
mov
inc
test
loopne
dec
mov
cmpsb
int3
sub
scas
fmull
sarl
inc
and
nop
fdivrp
xlat
push
inc
dec
cwtl
mov
inc
test
test
jae
push
inc
adc
int3
and
xlat
mov
mov
and
fadd
xlat
test
inc
inc
inc
mov
cmp
cmp
inc
mov
mov
and
mov
test
popa
test
lods
ret
fisubrl
sar
inc
movsl
cwtl
leave
stc
pop
cltd
cwtl
pop
cltd
rcrl
test
stos
jp
ret
jl
dec
dec
mov
mov
ret
and
stc
mov
xor
lret
cltd
rcr
sub
cmpsb
fldenv
cwtl
scas
stc
lret
jle
ret
push
cmp
or
pusha
iret
mov
vpclmulqdq
fdivr
and
scas
add
fdivrl
push
fmul
pushf
inc
push
movsb
cmp
mov
jmp
sarb
loope
lret
in
xor
ret
mov
add
roll
rcrl
lods
mov
mov
clc
lock
add
int
cmp
sub
stc
ret
cs
fnsave
mov
mov
test
test
pop
xlat
test
mov
push
pop
lods
xor
push
inc
mov
jp
inc
xlat
push
enter
ret
test
stc
aas
inc
loopne
mov
dec
mov
mov
js
inc
into
dec
mov
mov
hlt
int3
inc
fwait
dec
nop
dec
sbb
push
inc
mov
sahf
xlat
or
add
jle
roll
mov
imul
test
or
inc
or
mov
jno
or
stc
jg
jmp
fincstp
test
inc
or
add
push
xchg
mov
jle
add
cwtl
loope
dec
shll
into
jne
cmp
xlat
rcl
cwtl
loopne
push
pop
push
mov
or
iret
test
mov
mov
cltd
cmpsb
in
xlat
lods
mov
jle
andb
in
xchg
sbbb
dec
inc
cld
fildll
cmp
adc
fadd
jno
mov
push
xchg
jae
mov
lea
sub
lock
inc
pop
fiadds
cwtl
fsubr
inc
xor
mov
aad
daa
pushf
xlat
cli
xchg
jae
sarl
dec
mov
mov
addr16
sbb
mov
popf
idiv
fbstp
lea
movsb
xchg
dec
dec
mov
jecxz
fists
cmpsl
leave
fdivl
sahf
daa
ss
iret
cmpsb
adc
shrl
arpl
sarb
sub
stc
or
xchg
fimuls
test
dec
test
lahf
test
movl
xor
stc
lea
add
cmp
outsb
sbb
inc
rorb
fmuls
fdivrl
lods
xlat
mov
mov
iret
stos
mov
and
mov
lds
dec
ljmp
fstps
dec
pop
mov
stc
fcmovne
arpl
rcrb
repnz
dec
les
mov
std
mov
and
xchg
sbb
xlat
in
and
or
leave
faddl
pop
in
std
jo
fidivrl
xor
jnp
test
mov
int3
scas
stc
lahf
mov
pop
shrl
mov
xchg
test
dec
cltd
lret
mov
test
stos
faddl
sti
or
mov
mov
jl
ror
aad
call
test
imul
inc
ret
adc
add
into
cmp
mov
push
int3
movsb
mov
push
fstpt
cmp
rorl
xor
mov
mov
lods
cmp
cmpsl
mov
dec
cltd
inc
lock
mov
mov
movsb
mov
test
nop
cmp
aam
inc
lds
or
in
pop
mov
aad
mov
sbb
inc
lret
lret
inc
xor
and
mov
cmpsl
and
iret
ret
add
outsl
jnp
mov
rolb
roll
add
xor
xor
dec
lea
or
inc
mov
dec
xor
lret
xchg
out
xlat
fld
jnp
or
mov
mov
inc
cltd
fcomps
dec
dec
ss
mov
je
inc
arpl
inc
mov
and
scas
stc
jb
fs
rorl
mov
xlat
xlat
ret
push
cltd
mov
jb
adc
ja
sbb
scas
cmpsb
jle
mov
pop
rcll
cmp
scas
test
xchg
mov
stc
mov
mov
aad
xor
inc
int
dec
aaa
mov
and
sub
rcl
mov
push
movsl
dec
push
idivb
and
cmpsl
test
push
add
dec
pop
cld
inc
leave
inc
ffree
lods
mov
pop
push
fildll
cmpsl
xlat
fld
test
mov
bswap
test
or
jmp
fnstcw
sub
ret
aas
inc
cli
mov
cmpsl
adc
xor
push
scas
jno
stc
ret
test
mov
lcall
enter
mov
xlat
flds
and
movsb
movsl
lret
fdivrl
aad
lds
lcall
nop
ror
dec
inc
mov
movsl
insl
add
incb
jne
cmp
jecxz
sbb
mov
pop
iret
or
fstps
pop
stc
mov
dec
insl
call
movl
lret
sub
pop
push
aam
add
ret
test
shrl
xlat
push
mov
sti
shr
inc
and
stc
insb
inc
mov
cmp
mov
inc
inc
dec
lret
test
inc
mov
int3
movsl
test
inc
dec
aaa
add
in
ror
or
xor
cltd
mov
mov
push
push
push
cmp
mov
test
ret
add
int
stos
jle
leave
jne
in
jmp
fldenv
arpl
dec
mov
pop
fsqrt
cmpsl
fisubrs
mov
stc
enter
mov
cmp
int
int3
repnz
pop
inc
scas
mov
cmp
int3
jnp
pop
dec
aam
scas
cmpsl
mov
test
cmp
aad
dec
cmp
inc
cmpsl
inc
cmc
movsb
cmp
mov
int3
cmp
insb
sbb
inc
lods
stc
int
movsl
dec
and
sub
dec
fcomip
or
movl
ret
loop
aas
mov
lods
mov
ret
cmp
fucomip
out
fcomip
fs
mov
bound
imul
fcomip
scas
mov
adc
fsubs
addr16
cmp
arpl
mov
push
add
movsl
out
clc
add
sub
mov
fmull
mov
jl
and
lods
fldl
dec
mov
movsl
push
fistps
inc
sub
cmp
faddp
rcr
dec
pop
fldenv
dec
pop
fadd
cld
int3
and
dec
aad
test
inc
pop
aad
mov
push
rolb
cli
mov
inc
cmp
fmull
inc
fstps
fnstcw
fs
fxch
mov
jne
jne
repnz
xrelease
test
push
iret
dec
pop
inc
mov
stc
cmp
sub
sub
dec
popa
jg
movsl
push
imul
mov
ret
lret
jmp
xchg
mov
and
mov
dec
stos
or
mov
lcall
addl
dec
int
rol
pop
mov
fmull
push
pop
fwait
cld
mov
les
ret
test
mov
inc
pop
dec
sbb
int3
mov
adc
aam
inc
xlat
mov
cmp
fsubrl
ret
fmull
stos
inc
mov
sub
or
test
jnp
daa
aam
inc
sbb
stc
cmp
mov
outsl
mov
stc
sub
lods
test
in
test
mov
stc
xorb
xor
mov
rol
or
ret
jne
int3
std
mov
sar
ret
jmp
outsb
adc
aas
outsb
sahf
bound
and
popa
and
jb
adc
js,pn
fwait
aas
and
jnp
adc
out
fbld
lods
ffree
adc
fistpll
mull
push
mov
fildll
imul
lds
inc
mov
lret
out
lods
test
sbb
mov
cld
shll
ret
movsl
shll
mov
mov
inc
or
mov
or
add
int
add
test
and
inc
ds
mov
jbe
dec
jge
outsb
cmp
inc
int
pushf
bound
in
mov
popa
or
or
lods
cmpsl
popf
test
sub
mov
mov
lret
clc
mov
stc
pop
xor
xor
fadd
aaa
dec
mov
fidivrl
pop
and
jbe
add
mov
movsl
add
pop
push
fcmove
int3
scas
inc
test
repz
cwtl
scas
scas
jl
mov
fucomip
iret
ret
stos
insb
std
stc
cli
mov
inc
stc
movsl
stos
int3
mov
mov
mov
addr16
mov
loop
ret
jp
lds
mov
insb
das
sbb
aad
fisubrl
dec
lods
mov
cmp
mov
mov
lret
aam
cltd
mov
and
lods
sahf
adc
int
orl
inc
ds
lds
add
xlat
lcall
mov
call
mov
cmpsl
mov
mov
sahf
ret
dec
inc
fs
mov
dec
insl
and
cmp
stc
aam
out
jecxz
xchg
rorb
iret
stc
pop
pop
in
test
mov
mov
jb
fcmovnu
dec
dec
jge
stc
int
stc
test
cmc
inc
roll
inc
cmc
xor
fldl
mov
fisttpll
pop
cmpsb
aad
mov
pushf
sub
push
cld
scas
jns
mov
iret
mov
jl
lds
mov
cmp
mov
cwtl
pop
push
lret
clc
pop
mov
enter
lret
mov
stc
ret
leave
int3
inc
push
test
cmp
mov
xor
test
and
aam
shrb
inc
iret
fmul
and
pop
cld
lret
movsl
test
cmp
pop
in
push
ffreep
dec
lret
test
mov
pop
dec
lret
push
or
test
movsl
flds
fmull
cmp
cmc
lcall
mov
inc
or
sub
add
imul
pop
mov
sub
test
fnstenv
jecxz
test
dec
adc
lock
cld
enter
mov
fdiv
add
test
push
mov
dec
and
push
lods
frstor
pop
ret
dec
ret
ret
push
inc
mov
push
nop
xor
scas
enter
aad
sub
test
fcmovne
and
lret
data16
mov
rcr
lods
mov
sub
jb
inc
lods
mov
ret
push
bswap
xlat
stc
mov
ds
stc
jns
dec
ret
mov
pop
mov
fbld
sub
lret
fisubrl
pop
add
cld
jnp
inc
stos
mov
inc
cmp
push
test
ds
das
cmp
jp
test
int
js
jl
and
aam
lods
rcl
leave
pop
push
cmpsl
rcll
test
xlat
xor
add
cmpsl
jecxz
in
fdivl
add
and
lret
mov
inc
arpl
les
mov
arpl
stc
and
mov
or
mov
mov
rcrb
addr16
jns
mov
cmpsb
addr16
xor
js
rcrb
addr16
pop
arpl
ds
inc
pop
push
dec
and
mov
in
dec
inc
lods
push
enter
call
cmp
iret
sti
lea
insl
lods
test
inc
cltd
xchg
lods
push
mov
lods
mov
jl
das
mov
ret
sar
daa
cltd
repnz
push
cltd
stos
fbstp
aad
adc
enter
mov
adc
fdivrl
xadd
jno
inc
push
mov
stos
mov
jns
ret
inc
mov
mov
jp
inc
std
mov
xlat
test
pop
jl
loope
cmp
imul
add
bound
out
ret
fcmovu
add
pop
pop
fsubl
aam
jae
test
mov
outsb
ret
cmp
dec
add
mov
jmp
fst
lods
push
lds
cmp
dec
lds
inc
std
dec
mov
xor
movsl
frstor
sub
ds
mov
mov
stc
cmp
mov
test
repz
sahf
mov
or
ss
test
inc
int
aad
incb
pop
in
fbld
std
jle
xor
jle
jmp
outsl
mov
and
mov
or
pop
xchg
mov
xchg
mov
xchg
mov
mov
sbb
shr
test
cli
je
lret
outsb
pop
ret
xor
ret
das
imul
sbb
pop
mov
mov
stc
ret
pop
pop
dec
repz
xchg
xchg
xor
xlat
leave
add
out
mov
lds
cmpsl
insl
test
mov
leave
lds
cld
mov
shl
lods
sub
cld
mov
mov
push
mov
xchg
test
stos
lods
movsl
stc
jb
add
daa
shrb
rcrl
lret
pop
outsb
inc
fidivl
aas
lret
xlat
ficomps
fs
lret
enter
add
lods
movq
test
adc
xlat
mov
dec
or
pop
int3
incb
jecxz
jl
jb
push
cmp
mov
ret
cmp
xchg
pop
dec
in
iret
mov
je
movsl
dec
test
and
adc
cwtl
xlat
das
bound
pop
sub
stc
dec
dec
inc
pop
dec
xchg
xchg
cltd
sbb
in
jnp
lret
mov
jmp
ret
ror
dec
push
test
push
sub
jae
scas
ret
or
inc
dec
fisttpl
mov
mov
aaa
add
mov
test
or
dec
leave
and
cmpsl
inc
jmp
pop
cltd
sub
mov
mov
leave
mov
push
imul
je
sbb
fistl
int
jle
nop
pop
inc
scas
rcrb
shrl
subl
stc
or
xor
sti
stc
mov
fnstcw
add
rol
fnstenv
dec
loopne
lods
test
sbb
andl
aam
fwait
stos
cmpsl
leave
loopne
mov
adc
lods
mov
ret
dec
leave
mov
xchg
xchg
cmp
int3
mov
fmull
cmc
mov
dec
and
test
cltd
mov
repz
mov
inc
in
out
mov
movsb
sub
mov
test
inc
inc
pop
enter
mov
pop
adc
rol
mov
rol
outsb
fsts
or
leave
fisttpll
mov
push
fldcw
or
inc
jl
inc
add
lds
repz
lret
mov
xchg
mov
roll
lods
jl
mov
stos
test
dec
add
into
popa
aam
hlt
dec
enter
faddl
nop
fldcw
lds
and
push
cmpsl
movb
sub
xchg
or
shll
jp
inc
rorl
inc
addb
cli
sbb
mov
cmpsl
or
aas
ficoml
mov
push
xor
ret
negl
lret
scas
les
daa
jnp
mov
enter
int3
push
jecxz
add
jmp
in
test
mov
mov
enter
loope
and
shll
mov
test
ret
movb
enter
leave
push
jo
cmovs
mov
test
xchg
lods
stc
stos
faddl
jnp
ret
scas
fmull
stc
stos
or
mov
cmp
mov
pop
sahf
inc
flds
mov
inc
lods
ror
dec
bound
lret
mov
flds
dec
mov
out
leave
mov
enter
push
int3
leave
popf
mov
cmp
ret
push
mov
das
sar
leave
lods
leave
fs
sar
inc
outsb
mov
dec
lods
loopne
ret
inc
enter
hlt
mov
movsb
jp
ret
xchg
fcmovnu
imull
fldenv
cltd
pop
outsb
iret
rcl
dec
daa
test
pop
inc
lods
mov
cmpsl
test
rol
mov
pop
stc
dec
pushf
dec
mov
dec
fcomp
rorb
mov
add
fcmove
dec
push
mov
leave
cmp
jo
dec
cmpsl
jp
fisttps
inc
mov
or
dec
enter
clc
outsb
ret
push
stos
dec
add
hlt
stc
mov
dec
loope
into
inc
aaa
cli
hlt
mov
cmpl
lcall
iret
or
push
push
cltd
cld
and
rcr
push
adc
popa
leave
inc
fldcw
nop
cwtl
fcompl
xlat
ret
rol
inc
inc
pop
int3
addr16
xlat
int
enter
rcrl
cmp
lods
mov
fmul
mov
xor
xchg
mov
add
fs
sub
enter
cltd
cmpsl
fcmovne
daa
ret
dec
mov
dec
and
adc
lods
dec
mov
mov
add
dec
add
leave
les
and
cld
enter
aam
cwtl
mov
test
ljmp
lret
fcomps
sbb
addl
loope
or
push
mov
mov
jp
int
gs
pop
fdivr
inc
leave
fisttpl
in
mov
fdivrl
mov
sub
inc
std
mov
dec
xor
cli
pop
cli
cwtl
leave
int3
add
test
enter
dec
xor
or
test
mov
mov
test
mov
pop
stos
mov
dec
or
stos
enter
cmpsl
mov
fyl2xp1
andb
test
and
dec
cmc
test
test
aam
aas
jmp
stos
enter
test
push
adc
mov
mov
fcmovnbe
mov
jns
pop
inc
push
shr
insb
stos
jecxz
int3
inc
add
xchg
in
nop
cmp
xor
faddl
rorl
push
xchg
xor
ret
sub
sbb
mov
pop
cmp
jmp
pop
mov
stc
dec
stc
sub
add
cld
gs
xchg
jbe
aad
sub
or
add
inc
int3
sub
or
pop
mov
push
movl
ret
xor
shr
cltd
les
fcmovu
fwait
cmc
in
xchg
cmp
test
add
xchg
cltd
sub
test
xchg
lret
mov
cmpsl
mov
mov
lods
pop
lret
pop
add
xor
dec
sub
nop
fldt
aas
cs
sub
inc
lds
adc
lods
push
iret
lret
xchg
pop
leave
xor
scas
scas
stc
jb
mov
xor
stc
fs
fnstenv
jno
cli
outsb
stos
data16
popl
sbb
movsl
out
sbb
and
ret
pop
lret
pusha
nop
cld
fdivrl
pop
inc
js
push
push
cmp
adc
fadd
rclb
lret
sarb
mov
jnp
ficomps
shll
inc
data16
or
and
out
jp
add
in
mov
into
mov
stos
dec
bound
ja
and
mov
loopne
icebp
mov
lods
test
aaa
push
mov
shrl
les
cmp
xchg
dec
or
sbb
inc
out
jnp
xor
lret
daa
or
add
push
and
add
loopne
xchg
andb
pop
push
sahf
push
test
adc
mov
scas
jno
or
mov
daa
or
add
push
adc
mov
cmpsl
daa
or
mov
frstor
int3
imul
mov
stc
sbb
inc
pusha
shrl
and
pop
rcl
mov
iret
int3
xor
mov
pop
lods
xlat
lds
test
mov
lods
loopne
xlat
test
fisttpll
and
test
cmp
mov
adc
imul
mov
into
lods
into
es
mov
sub
and
mov
push
add
loop
mov
pop
mov
lret
pop
frstor
push
enter
push
aam
push
stc
stos
nop
sbb
adc
lods
jg
adc
lods
scas
fs
pop
test
stos
enter
out
enter
mov
mov
je
lret
jl
and
iret
es
and
sbb
inc
pop
cmp
je
add
test
sub
dec
aad
dec
pusha
push
rsqrtps
dec
pop
sub
jecxz
cltd
sbb
pop
stc
pop
push
adc
dec
mov
and
rol
insl
ret
dec
xchg
arpl
mov
fnstsw
fcompl
mov
pop
cmp
mov
leave
mov
lret
int
faddl
repz
mov
in
and
test
sub
mov
dec
imul
inc
add
and
insb
cmpsb
cmp
lea
cmp
imul
outsb
mov
mov
pop
cmp
test
ret
dec
dec
fiaddl
push
mov
call
pop
stc
enter
xor
mov
faddl
mov
lds
jge
mov
insb
outsl
bound
dec
outsl
arpl
add
inc
gs
jb
jns
arpl
insb
gs
je
jb
popa
bound
mov
mov
movb
push
pushl
ret
aam
pop
mov
pop
fsubl
pop
mov
addr16
in
cmp
gs
mov
fistpl
loopne
pop
pop
in
fdivrl
ficomps
fsubl
pop
popa
pop
pop
mov
mov
pop
jecxz
mov
aaa
popl
bt
stc
cmp
cmp
call
add
inc
gs
jne
dec
outsb
jne
add
inc
gs
jb
jns
outsb
jne
lea
je
pushf
dec
aaa
and
sub
clc
movzbw
mov
rcr
pusha
cwtl
shl
mov
jmp
add
inc
jo
outsb
fs
outsb
jne
add
scas
mov
pushf
pusha
lea
jb
jne
movzbw
movb
pusha
not
lea
jp
not
push
pusha
lahf
pop
lea
jmp
push
lea
je
rcr
bt
bt
mov
btr
pushf
movsbw
add
pushf
pop
mov
pushf
test
pushf
call
call
add
push
gs
outsl
jbe
push
jb
jo
add
add
gs
outsl
add
mov
push
call
add
dec
jne
je
inc
jns
gs
outsl
push
imul
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
outsl
bound
inc
jb
add
test
fwait
add
pusha
add
shl
mov
bt
clc
pushf
push
add
pushf
jmp
mov
ret
or
mov
stos
xchg
xchg
and
cwtl
outsl
aas
dec
mov
rol
lds
cmp
xlat
push
inc
mov
repz
repz
pop
ljmp
mov
lods
push
lods
mulb
shl
jge
push
ja
lods
mov
add
test
pop
cmpsb
jmp
loopne
cmp
test
fldl
test
inc
mov
shll
bound
and
stos
sbb
leave
jbe
ss
dec
arpl
ror
jnp
mov
outsl
fsubrs
jo
fs
sar
sarl
leave
roll
ret
push
inc
insb
push
jp
jp
insb
inc
mov
or
jbe
les
mov
adc
sbb
mov
mov
mov
sbb
subb
dec
sbb
adc
imul
pop
lock
inc
jg
je
outsb
fisubrl
jge
and
add
rcr
pushf
movl
pushf
mov
movb
lea
jmp
push
lea
jbe
shrd
shl
shl
mov
or
dec
xor
bswap
add
adc
sar
shld
mov
movzbw
cmp
add
call
clc
neg
bt
movb
cmc
cmp
mov
movsbw
bswap
movzbw
lea
jmp
pushf
dec
pusha
xor
test
bt
call
add
inc
gs
jb
jns
imul
add
je
imul
outsl
jb
stos
pusha
push
movb
lea
jmp
add
inc
jb
ja
gs
inc
add
add
je
imul
js
dec
outsb
addr16
inc
add
leave
pushf
push
pusha
lea
call
jmp
push
jb
add
mov
sbb
cld
mov
int3
jb
ret
pop
les
sub
lcall
cmp
loop
pop
and
xchg
cmp
sti
rol
or
jp
jmp
push
fwait
xchg
subl
insb
mov
mov
adc
popf
jge
pop
je,pn
mov
test
xchg
inc
fldl2e
movsl
mov
cmpsb
or
cld
les
sub
push
sub
lcall
push
sahf
scas
roll
stos
adc
leave
inc
into
jns
jb
cli
and
xchg
add
movsb
xor
sarl
mov
sub
xchg
inc
movsb
mov
stc
rcr
enter
inc
stos
dec
mov
mov
cld
and
push
lcall
jmp
stos
movsl
cmp
jg
xlat
sbb
or
fnsave
jb
jo
insl
imul
pop
cli
rorb
ja
jmp
mov
mov
cmpsb
test
stc
outsb
cmp
cwtl
sbb
cmp
arpl
add
int
sarl
leave
stos
mov
cmp
int
push
and
nop
repz
in
rcll
rcll
mov
je
lret
pushf
clc
push
movsl
fstpt
sub
mov
dec
rcrl
inc
rcrb
push
and
cmpsb
lea
xbegin
insb
dec
cmp
popf
fstpt
lea
adc
fcomps
xor
jnp
cmp
mov
pop
mov
xchg
jb
cmp
jbe
mov
xchg
xchg
jb
mov
fmull
mov
xchg
add
xchg
mov
fnstcw
dec
pushf
leave
dec
pop
dec
sti
leave
out
xor
ror
jae
inc
mov
sub
push
lods
es
or
cmp
fistpl
sbb
test
std
popf
stc
mov
cmp
bound
sbb
xlat
cld
pop
xor
andl
pop
imul
jge
xchg
sub
mov
pop
loop
lret
movsb
jb
aaa
test
xchg
jl
sub
jmp
lret
and
mov
jns
pop
daa
fs
inc
fdivl
inc
clc
mov
mov
and
jns
into
ja
cmp
mov
mov
stos
fld
fdivrs
int
in
in
jl
pop
cld
int
jae
int3
pop
scas
add
stos
cmp
es
popf
hlt
jl
lcall
or
fnstcw
sub
shll
push
sbb
ret
andb
lret
lahf
jecxz
test
jl
pop
pop
push
enter
rcr
jns
jb
cmp
cmp
xor
mov
pop
jp,pt
mov
pop
addr16
loop
cmpl
stc
sub
mov
stos
adc
aaa
cmp
sub
shll
shr
mov
iret
or
scas
aam
mov
aaa
popa
xchg
adc
sbb
push
inc
pushf
ret
add
sub
inc
clc
sub
sbb
sub
push
lods
test
or
pop
es
lds
lret
pop
les
int
inc
cmpsl
xchg
xor
ret
test
orl
ficompl
mov
stc
xor
add
jp
jl
dec
lret
push
in
lcall
cli
push
jb
jl
aad
cld
test
stos
les
mov
movsl
dec
mov
dec
aas
mov
stc
mov
mov
cmpsl
pop
jmp
leave
lods
leave
xlat
or
inc
out
dec
lret
lods
or
xlat
dec
pop
arpl
pop
cmp
leave
shrl
push
cmpsl
rcrl
pop
stc
aam
ret
lds
test
fldl
into
ret
fcomps
fisubrs
imul
loopne
fsts
mov
shll
xchg
lods
sub
ret
ret
aam
jp
ja
data16
iret
sbb
mov
xlat
and
les
test
inc
fsubl
cmpsl
mov
ror
dec
mov
lods
add
sar
push
lret
mov
dec
mov
mov
lahf
rol
js
push
cld
jno
mov
stos
popa
mov
rol
loope
shl
mov
xchg
mov
imull
cmp
shlb
dec
mov
andb
int
scas
fisubrl
mov
shr
fstl
mov
fmul
lcall
push
fisubl
xchg
std
add
loopne
int
push
test
mov
movsl
popa
andb
std
mov
insb
push
lods
arpl
cmp
aas
lcall
cmp
int
mov
sbb
int
out
arpl
arpl
inc
lods
adc
push
addr16
shrb
sti
mov
mov
outsb
pop
fstpt
movb
mov
pusha
adc
cmp
jmp
rol
mov
test
cmp
cld
cmp
rcrl
lods
or
loope
dec
jge
ljmp
push
rcrl
push
mov
jge
and
pop
in
push
cmp
push
push
pop
add
mov
jne
nop
pop
iret
cmpsl
sub
jl
cmp
mov
inc
jmp
mov
stos
mov
mov
fnstenv
ret
mov
rolb
insb
cmp
jmp
cmp
xor
mov
jb
dec
add
fldenv
cli
jb
or
repz
mov
icebp
js
clc
mov
ja
or
push
mov
in
jns
shll
sbb
dec
int
mov
jb
jb
mov
into
push
cmp
jle
mov
test
inc
cwtl
fsubr
xlat
jb
test
mov
int3
jne
adcb
int3
push
adcb
jp
inc
loope
sbb
jle
das
cli
faddl
icebp
std
inc
cmp
sarl
xchg
mov
mov
or
jg
es
lret
das
add
stos
mov
jecxz
pop
pop
loopne
cmc
pop
sbb
push
dec
bound
ret
faddl
lret
pop
jge
jl
nop
ficomps
or
inc
jns
mov
arpl
dec
into
mov
jb
inc
cld
je
movsl
ficomps
xchg
rclb
sub
pop
mov
pop
movsb
cmpsb
into
pop
out
sub
iret
inc
cld
push
xor
rcr
mov
stc
das
fimuls
ds
into
or
mov
loop
int3
mov
lock
jmp
iret
mov
add
daa
fisttps
and
shll
std
sub
mov
stos
subl
mov
jp
dec
jb
xor
rcrl
mov
sub
and
lods
mov
jb
mov
ret
mov
lods
nop
ret
inc
pop
mov
mov
sarl
mov
xchg
aam
cld
int3
pop
sbb
test
xor
jnp
fstpt
mov
lret
mov
js
push
mov
insb
cmc
sub
mov
and
test
je
pop
push
mov
lods
scas
ja
mov
insb
ds
pop
jle
imul
lcall
jp
push
fcmovnbe
push
popl
in
sbb
xchg
aam
ret
mov
mov
inc
sbb
stc
es
jl
imul
cmp
out
xor
inc
sub
fisttpl
shll
jns
arpl
adc
push
cmp
sub
mov
scas
and
dec
js
sub
lret
mov
js
adc
cmpsl
enter
js
leave
push
mov
stc
int
jae
mov
push
rclb
mov
gs
fld
dec
adc
shlb
sbb
aaa
push
push
sbb
pop
fistpll
shlb
aad
imul
sbb
xor
xchg
inc
mul
cld
pop
xchg
mov
imul
ret
pop
dec
js
mov
jl
mov
mov
frstor
or
shrb
cwtl
sbb
pop
loope
lds
jl
test
push
lcall
cmp
fs
movsb
xchg
adc
dec
pop
and
outsb
daa
jg
add
bound
push
jl
test
enter
mov
cmpsl
mov
fbld
rorl
push
addb
cmp
mov
aam
push
loope
jb
mov
jnp
adcb
mov
jns
cmp
ja
call
pop
push
lret
mov
pop
rcl
xchg
push
aaa
ror
std
sub
jl
jl
push
test
stos
ret
cwtl
inc
bound
lcall
bound
inc
push
inc
in
inc
iret
sub
lea
pop
repz
lds
mov
dec
lret
inc
cmp
push
xchg
cmc
jl
ljmp
stos
cmpsb
shl
mov
mov
mov
test
xchg
ds
ret
int3
jns
dec
movl
jl
jb
mov
repz
sub
fdivrs
shr
lret
mov
sbb
dec
sbb
lahf
sub
aaa
push
cwtl
subl
mov
inc
insb
add
cmc
and
jb
jae
mov
xor
mov
out
out
sub
data16
jl
push
push
aaa
dec
cmp
cmp
and
mov
push
scas
scas
inc
jo
jl
cmp
leave
iret
int
nop
lret
addr16
icebp
cli
fdivrl
cmpsl
mulb
outsl
sbbl
dec
jo
fnstcw
push
mov
lock
insb
aas
fnstenv
shlb
mov
repnz
pop
cltd
in
pop
stos
or
sub
movsb
pop
sbb
cmp
stos
std
cltd
jle
shrl
sub
iret
push
mov
cmp
movsl
scas
pop
cmp
rorl
les
pop
sub
mov
push
pop
xchg
mov
cmp
stos
jmp
sub
mov
fstpt
ja
negb
je
mov
pop
xchg
stc
mov
or
sub
fdivs
stc
push
dec
adc
fisubl
jae
push
cld
adc
imul
push
and
sub
pop
xchg
les
push
cli
ret
aaa
push
xchg
ds
rcrb
pop
outsl
mov
shrl
adc
fisttps
mov
xchg
pop
jne
fsubl
cli
inc
pop
fcoml
sbb
cwtl
sub
jle
rorl
loop
mov
lods
inc
lcall
push
sub
push
add
stos
dec
das
cs
pop
add
imul
mov
ret
popa
leave
mov
sarl
push
ret
lret
jns
mov
jb
and
imul
xorl
inc
inc
dec
adc
jb
jp
sbb
pop
pop
ficoms
jl
je
sbb
push
xchg
sarl
sarl
pop
movsl
stc
add
xchg
xor
xchg
cs
fisttpl
into
jb
mov
sub
int3
enter
inc
push
data16
and
jge
jg
push
pop
pop
inc
jno
mov
push
pop
data16
test
sbbb
inc
cmpb
insb
arpl
imul
jmp
stc
inc
pop
mov
dec
jb
push
adc
stos
test
imul
aam
dec
int3
scas
out
mov
mov
and
mov
mov
sar
jbe
jecxz
dec
mov
int3
mov
mov
imul
aam
test
mov
jbe
lret
adc
roll
psubw
hlt
pushf
xchg
sub
mov
into
adc
push
addr16
jl
mov
push
cmpsb
pop
ret
cmp
cmp
js
mov
bswap
jl
mov
fucompp
adc
mov
lods
cwtl
shlb
xchg
adc
rolb
jae
es
shrb
or
out
inc
sbb
lock
xchg
jns
and
jp
ret
pop
dec
sarb
mov
cwtl
pop
or
xchg
mov
shlb
sbbb
and
stos
int3
jp
dec
ret
cld
adc
sarl
or
pop
arpl
nop
test
adc
inc
cli
mov
js
mov
lret
mov
push
inc
js
mov
mov
push
sub
pushf
or
out
push
jne
lret
lahf
cwtl
and
mov
cmpsb
int3
inc
lcall
movsb
aaa
cld
packsswb
jmp
cmp
xchg
shlb
mov
push
adc
sbb
add
faddl
jbe
std
cld
and
jne
cmp
jne
test
add
outsb
gs
int
movsb
je
repnz
jno
iret
lret
push
mov
cmpsl
mov
mov
push
jb
lods
pop
psrad
aas
push
pop
mov
xchg
mov
je
xor
push
push
jg
leave
fstps
cli
add
xor
call
xlat
cmpsb
cmp
mov
repnz
aaa
sbb
lods
fsave
aas
pop
fsubrl
fcmovne
loopne
shr
arpl
test
lret
cmp
or
add
jbe
add
shll
imul
mov
push
mov
xchg
jp
xchg
mov
iret
sbb
push
push
cltd
mov
add
sarl
jb
mov
cmp
js
lods
pop
repnz
jb
and
sub
inc
sbb
shl
cld
xchg
pusha
sub
mov
lods
jp
movsw
test
inc
lock
data16
inc
icebp
push
mov
cli
lods
int
dec
call
ljmp
pop
or
lret
jg
repz
ret
inc
jg
push
ja
cmp
and
pop
or
fidivrs
insb
int
arpl
dec
push
jo
and
shll
inc
ret
aam
mov
pop
push
adc
aam
mov
cmp
aam
sbb
imul
pop
fidivs
xchg
mov
leave
and
lcall
sub
sarl
pop
lea
adc
mov
dec
in
enter
mov
popf
cli
pushf
lahf
and
fdivl
shlb
dec
push
inc
test
arpl
sarb
xor
and
mov
nop
jecxz
movsl
mov
mov
mov
nop
int
jl
mov
popf
inc
fiadds
in
jle
lahf
inc
adc
xor
idivl
cmp
sub
mov
seta
adc
jecxz
dec
and
ficomps
lcall
push
push
test
pop
mov
mov
lahf
into
iret
movsl
ljmp
jb
jmp
sbb
stc
and
imul
jp
popf
shll
push
cmc
ret
xchg
adc
mov
add
mov
cmp
hlt
fildl
inc
pop
cmp
pop
call
mov
jle
mov
mov
inc
add
roll
mov
punpckhbw
cs
add
xor
lods
xchg
jb
test
loop
cmp
push
arpl
push
arpl
cmp
add
mov
push
mov
lret
push
push
popa
cld
cld
fxtract
cmp
dec
fcoms
push
in
lods
or
in
mov
sbb
test
cli
push
in
dec
in
sti
cli
jb
or
outsl
mov
les
xchg
and
popa
push
into
cmp
and
fsubrl
jne
xor
mov
mov
or
lods
xchg
insl
test
scas
sarl
loopne
mov
in
cltd
pop
mov
outsb
pop
mov
xchg
int
jb
jl
inc
mov
pop
jle
shl
jno
cwtl
ret
mov
pop
sub
shrl
add
pop
ljmp
aam
movsl
ret
lods
mov
jo
add
push
push
push
notl
dec
mov
sbb
cmp
cmp
scas
test
adcl
inc
imul
lods
jmp
outsl
movsb
in
das
ret
xchg
sub
cmp
std
mov
pop
xor
sub
shrb
mov
ret
xor
push
jle
rcrl
cmc
gs
lea
out
and
jns
aaa
push
cltd
roll
sub
mov
insl
lcall
jmp
xchg
out
test
pop
mov
mov
xorb
mov
aad
out
dec
and
aaa
movsl
out
movsb
cmp
mov
in
jge
sbb
sbb
push
xchg
dec
jl
sub
std
in
add
ret
xchg
cmp
roll
cmpsb
mov
pusha
in
stos
xchg
inc
jnp
xor
inc
arpl
xor
cli
xor
jnp
mov
jmp
cmpb
inc
add
in
enter
sub
xchg
jae
cmpsl
pushf
fsubrs
cmp
xor
fnsave
sarl
sbb
cmpsb
ror
in
fdivl
jb
jns
mov
sub
pushf
sub
inc
add
ror
aaa
std
or
loope
int
fcomi
cmpsb
out
pop
push
or
cmp
dec
arpl
mov
js
fnstsw
pop
insb
adc
sub
mov
leave
shll
and
jl
ret
mov
arpl
push
out
or
scas
jne
mov
popa
nop
jno
in
or
cwtl
shll
inc
cld
jb
pop
push
les
stos
int
clc
xchg
sti
shll
mov
imul
sub
ja
movb
ret
jnp
shll
xorl
clc
out
push
lcall
mov
jmp
push
push
push
xchg
call
enter
and
movsb
aas
ret
jnp
test
sub
mov
mov
mov
sub
cmpsl
outsl
data16
cmc
loope
aas
xorb
stc
lret
pop
push
jae
push
mov
lock
mov
rclb
adc
icebp
dec
mov
mov
dec
and
jle
mov
dec
adc
lcall
mov
arpl
xchg
orl
mov
imul
or
arpl
xlat
pop
mov
sub
jbe
rcr
jg
fstpl
dec
mov
data16
movsl
sub
adcb
cli
aas
mov
cltd
aam
push
pop
sarl
inc
ret
test
mov
sarl
sti
lock
repnz
jp
mov
adc
fdivl
push
cld
sbb
loopne
cmp
push
test
in
inc
rcll
and
jnp
mov
cld
jbe
jle
lds
cld
sbb
fidivl
lds
xor
adc
enter
xchg
cmp
jo
int3
mov
es
sub
repnz
sbb
inc
mov
or
jle
lcall
pop
inc
push
cmp
popf
mov
int3
sub
dec
sub
jge
cli
roll
push
pusha
mov
cmp
inc
sub
xlat
es
jno
test
outsl
xlat
enter
fstpl
orb
dec
xor
xor
mov
je
jge
ret
ret
std
js
jnp
cld
pushf
jb
inc
pushf
add
pop
or
jmp
xchg
adc
push
inc
xlat
lret
push
test
jbe
js
mov
ljmp
lret
push
test
dec
inc
jb
subb
mov
pop
test
cli
imul
enterw
test
lret
adc
sbb
mov
cmp
fcmovnb
xchg
rolb
mov
push
mov
je
dec
cmp
cwtl
inc
movsl
sbb
mov
or
push
js
or
test
leave
in
pop
je
pushf
enter
add
and
push
inc
inc
loope
shrl
push
xor
cmp
movsl
pushl
cltd
push
jb
or
mov
aam
sbb
mov
jnp
int3
shrl
sbb
push
pop
jae
mov
mov
push
inc
aad
and
rcll
mov
jb
adc
orl
add
dec
out
mov
cwtl
popa
adc
test
or
mov
pop
or
rcl
cld
lret
sub
xor
push
cmp
adc
push
stos
fstpt
les
mov
lea
jns,pt
pop
dec
mov
int
jl
cmp
pushf
clc
mov
jno
icebp
shrl
jecxz
jp
mov
popa
cmpsl
mov
jns
and
jp
int
xchg
push
loopne
ja
iret
jmp
mov
xlat
cmpsb
cmp
sbb
mov
cltd
stc
pusha
movsl
in
out
ret
jns
jb
xor
xchg
fnstsw
pop
cmp
sbb
push
push
or
cmpsb
aam
jns
lods
cmp
jge
int3
in
mov
jmp
ror
jb
icebp
sub
add
add
int3
cli
push
idivl
mov
test
mov
pop
fildl
stos
jge
insb
mov
jns
mov
sahf
pop
cld
lret
sbb
cmp
pop
stc
mov
jmp
stc
rcl
sub
sub
iret
xchg
insb
sub
and
pop
outsl
xor
daa
push
push
rcrl
emms
idivl
aad
fs
mov
and
cld
insl
fimuls
mov
clc
iret
stos
std
int
stos
jp
lcall
cmp
test
movsb
cmp
mov
call
std
rol
jle
xor
jl
cld
xor
lods
daa
inc
sarl
dec
mov
insl
dec
dec
mov
mov
xchg
dec
sub
stos
cmpsl
mov
sbb
cltd
movsb
lret
add
je
mov
sub
test
std
mov
xchg
pop
push
rclb
aas
xor
test
mov
and
sub
nop
mov
insb
dec
shrl
push
pop
je
xchg
xor
leave
adc
pop
fistl
mov
repz
scas
rcrl
dec
insb
movsb
mov
rorl
fsub
inc
stos
cmc
shlb
push
pop
inc
add
ds
fsubl
sbb
ficoml
into
cmc
xchg
pop
mov
add
mov
xor
aas
mov
or
and
bnd
or
ror
movsb
xchg
dec
xor
push
fiaddl
rclb
or
xor
dec
push
pop
pop
pop
sub
iret
stos
leave
jb
mov
dec
jne
jb
les
add
sub
fisubs
adc
push
movsb
int
dec
es
lret
sub
das
fistpll
add
js
inc
iret
lret
inc
js
aaa
or
push
push
flds
sub
add
xlat
rcrl
sub
subl
movsl
and
lods
rol
xor
and
fists
loopne
inc
jle
mov
psubw
int3
stos
mov
inc
push
fnstenv
fwait
mov
dec
cmc
insb
inc
test
sbb
adc
out
roll
cmp
or
lods
fdivrs
cmc
cmpsb
shrb
or
add
rcll
orb
mov
jle
sti
dec
mov
mov
lahf
fs
int
pop
subb
inc
imul
jb
es
cmpsl
mov
push
xchg
cli
cmp
cs
mov
sbb
mov
mov
les
sarb
in
cltd
iret
fcmovnb
jb
mov
mov
pop
cmp
mov
adc
aas
scas
call
and
mov
or
repnz
out
jb
mov
jne
mov
xor
mov
cmpsl
dec
sbb
call
jmp
push
lcall
cmp
xchg
mov
mov
sbb
stos
push
xlat
gs
jnp
xchg
adc
shrb
aas
cwtl
lret
mov
rorb
jg
xchg
aas
arpl
push
mov
jmp
lcall
mov
sahf
aad
cmpl
mov
jae
dec
andb
inc
aad
call
pushf
std
mov
push
pcmpgtd
cmp
and
mov
cli
pop
pop
stos
lret
cmp
mov
mov
ds
js
cmp
popf
fwait
push
adc
mov
stos
cld
pop
and
clc
pop
push
int3
sub
jnp
sti
ljmp
in
fisttpll
fs
nop
lods
fdivp
push
sbb
jb
xor
and
aas
pop
ljmp
push
popf
xor
sub
fsts
jb
cmpb
push
push
inc
cmp
movsl
lret
xchg
xor
das
je
mov
dec
mov
mov
rcll
mov
push
sti
push
xchg
mov
mov
sbb
insl
mov
cmpsb
out
jmp
xchg
cmp
cmpsb
push
lret
rcrl
mov
push
push
iret
pop
pop
jl
aam
dec
lods
testb
or
mov
aam
ret
imul
push
sub
adc
fistpl
mov
lcall
inc
mov
out
cmp
lcall
xchg
adc
fstpl
xor
mov
or
call
jl
clc
sbb
push
aad
or
mov
mov
xchg
movsl
rcr
push
inc
mov
mov
outsl
dec
mov
lock
shll
sahf
call
ljmp
je
dec
fld
push
movsl
in
aas
jle
mov
cmpsb
pop
rcl
adc
int
lret
mov
mov
xchg
xchg
rcrb
into
push
cs
js
mov
pushf
adc
mov
iret
or
push
cld
mov
xor
sbb
ja
cltd
ja
mov
enter
jb
movsb
je
and
push
jo
cmpsb
dec
pop
es
insb
push
pop
outsb
jnp
lods
sub
ret
mov
cld
fucom
mov
stc
lret
rcl
inc
mov
and
dec
jb
mov
xchg
ret
sub
outsl
mov
lret
roll
into
mov
xlat
xor
faddp
movsl
les
sub
incl
loopne
inc
dec
insl
jbe
add
xor
cmp
fsubp
adcl
mov
mov
pop
pop
movsl
jp
sub
int
mov
mov
rcll
jns
movsl
lods
cmp
mov
jmp
scas
mov
xchg
cmp
lea
rcrl
arpl
ficoml
loope
cmp
xchg
cwtl
jnp
pop
adc
les
ret
cmp
sub
sub
pop
dec
add
cmc
xchg
lods
int3
test
jb
sarl
lret
jg
aam
add
cmp
stos
jl
jl
pop
sub
ret
aad
and
pop
xchg
data16
into
stos
lret
mov
xlat
ret
dec
sub
cwtl
les
sarb
add
or
rorb
cmpsl
push
int3
subl
pop
dec
stc
jb
popa
adc
xor
int3
lret
pop
push
adc
insb
adc
fadd
es
outsl
xlat
sub
pop
popa
movsb
bound
mov
in
cwtl
in
rorb
leave
adc
pop
repz
mov
adc
pop
ret
cmpsl
gs
mov
jb
lret
jl
dec
shll
inc
cmp
test
popf
xor
lods
aaa
rcl
mov
in
pop
push
mov
gs
fnstsw
test
jne
push
sub
xchg
lcall
ja
mov
cwtl
call
outsl
mov
mov
dec
clc
jae
dec
sub
cmp
imul
mov
cmc
les
shlb
xor
mov
shrb
cld
hlt
leave
mov
std
addr16
dec
push
add
xor
orl
mov
mov
jo
ret
adc
adc
test
shll
mov
into
insb
dec
iret
xor
mov
jno
cmpsl
mov
mov
jo
fldenv
clc
shrb
mov
cmp
sbb
jle
test
in
jge
jp
jb
xor
cmp
mov
mov
cwtl
mov
sbb
popa
nop
jl
mov
mov
fucomp
inc
cmc
lds
push
inc
xchg
fbstp
and
aaa
mov
decl
mov
adc
inc
dec
dec
sahf
mov
sbb
fstpt
and
divps
mov
add
lods
inc
fisttpl
bound
test
testb
ja
inc
pop
push
fcmovnu
test
mov
mov
dec
xchg
cmpsl
mov
push
or
adc
mov
xor
pushf
add
mov
xchg
mov
or
mov
adc
jo
push
shll
dec
cmp
add
mov
fisttps
xor
mov
es
mov
push
fadd
out
mov
repnz
add
jmp
push
repz
mov
ret
fstpt
clc
cmp
inc
aas
les
sub
aaa
mov
enter
mov
cmp
in
dec
test
dec
leave
xchg
adc
mov
xor
sub
pop
mov
sub
scas
fisttps
int3
jl
ja
jg
lahf
mov
dec
cmc
add
mov
pop
scas
mov
jno
fstl
lret
inc
mov
outsb
jb
addl
mov
inc
mov
fwait
aam
sub
dec
mov
pop
jns
mov
push
je
adc
pop
sub
subb
lret
movsb
mov
pop
mov
mov
mov
dec
rorl
pop
mov
xchg
cli
in
fildl
int
cld
mov
cmp
mov
jg
lcall
inc
imul
hlt
rolb
imulb
fbld
leave
xlat
mov
xor
ret
testl
xchg
and
and
out
cmp
jbe
pop
jo
imul
fstpt
js
mov
jbe
pop
cmpsl
aaa
mov
mov
mov
sbb
fcmovnu
cwtl
pop
test
sub
rclb
cmpsb
pushf
aad
jg
in
in
add
pop
xor
ret
xor
mov
ljmp
adc
mov
lret
hlt
jmp
test
aad
imul
and
out
mov
jns
in
leave
fstpt
test
sub
mov
out
add
push
inc
adc
popf
int
stos
sbb
sub
sbb
mov
push
push
inc
mov
jg
pop
cwtl
pushf
cli
mov
mov
mov
fwait
pop
mov
push
or
les
test
test
mov
insb
mov
mov
dec
and
sbb
pop
and
imul
out
mov
ret
movl
dec
push
mov
lea
ror
in
dec
mov
dec
add
sub
out
popa
call
pop
mov
push
inc
aaa
in
inc
xchg
std
mov
popf
sbb
ret
fistl
jl
push
scas
test
jbe
rcl
cwtl
pop
jl
aam
in
inc
xor
lods
mov
lock
lds
testb
stc
sub
jl,pn
push
icebp
addl
mov
mov
mov
dec
jne
and
adc
fidivrl
out
xor
jle
ds
xchg
pop
mov
popa
and
iret
mov
mov
ret
fs
mov
mov
mov
jb
push
nop
mov
fisubrl
dec
out
push
pop
in
mov
mov
cmp
loopne
gs
or
mov
fdivl
mov
std
rcll
adc
imul
sbb
sarl
sub
mov
mov
pop
adc
adc
scas
or
fsave
jo
dec
push
xchg
into
cld
mov
pushl
inc
test
mov
xchg
je
aas
or
xchg
les
dec
mov
jp
repz
scas
mov
mov
sub
mov
sbb
leave
stos
mov
js
stc
cld
adc
xlat
pop
mov
sbb
push
dec
mov
popa
mov
cmpsl
jmp
inc
test
push
jl
lahf
push
aas
dec
mov
stos
xor
push
movsb
or
fldl2e
lds
mov
lcall
xor
stos
popf
mov
xchg
inc
push
shll
cmp
je
or
jae
mov
mov
mov
jl
sahf
mov
jb
rcr
arpl
adc
andl
cmp
inc
int3
dec
pop
and
sbb
loope
cltd
ret
or
loop
aas
aad
lahf
push
dec
jl
mov
or
rcrl
inc
daa
aas
hlt
cli
mov
xor
push
adc
push
sahf
mov
pop
inc
xor
inc
dec
jp
cmpl
mov
popa
or
lret
mov
test
mov
int
hlt
push
stos
scas
out
iret
jge
sub
jb
in
fwait
movsb
mov
testb
mov
xchg
mov
data16
mov
lret
pop
jne
and
mov
mov
clc
jle
insl
mov
stc
cwtl
mov
mov
enter
pop
iret
ret
mov
or
pop
test
leave
call
add
push
stos
pusha
pop
imul
adc
jmp
addr16
mov
sbbb
and
or
repnz
test
sub
hlt
push
cmp
mov
cmpsb
mov
mov
gs
outsl
in
add
enter
loop
adc
dec
popf
movsl
mov
pushf
sbb
mov
and
push
mov
in
dec
cld
setg
add
cmpsl
pop
cmpsb
fwait
xor
mov
push
lret
cli
lret
pop
insb
mov
mov
rcl
stos
lcall
es
sbb
xor
add
pop
loope
jno
mov
aaa
stc
and
ret
fdivrs
dec
lret
push
mov
mov
push
pop
in
jno
fmull
shll
sub
mov
xchg
int3
jns
mov
arpl
mov
mov
fsubp
mov
and
mov
scas
mov
imul
mov
clc
sub
mov
sbb
loop
movsl
xor
mov
xchg
jmp
sub
repz
add
jnp
and
mov
mov
or
mov
ds
repnz
jl
nop
add
hlt
inc
cmp
mov
mov
jb
stc
bound
adc
movl
xchg
jge
mov
sub
xor
dec
pushf
mov
lret
fildl
ret
mov
add
dec
dec
int
inc
cwtl
imul
stos
xor
test
or
ljmp
add
xlat
hlt
mov
jecxz
jb
aad
mov
pop
sbb
sub
mov
test
aad
loopne
outsl
loop
ja
out
add
mov
cmp
loope
xchg
add
fucomi
sbb
sahf
jno
aad
mov
mov
push
mov
or
arpl
cmp
push
mov
clc
mov
fdivrl
idivb
call
inc
jl
add
mov
mov
cmpl
cmp
cmp
aaa
fistl
sahf
mov
ret
fcmovnu
push
mov
pop
mov
mov
int3
inc
or
sarb
mov
sbb
mov
cltd
out
mov
mov
fcoms
popa
cmpsl
push
clc
cmpl
sarb
lret
jmp
outsl
adc
mov
or
loope
gs
sub
cltd
pop
mov
je
cmp
aad
lock
adc
nop
mov
stos
fs
sbb
icebp
pop
push
mov
cmp
mov
xor
adc
pop
sbb
or
stos
lret
lock
or
stos
add
mov
and
add
aas
add
aad
imul
push
sbb
mov
dec
fwait
or
adcl
leave
leave
repnz
fldt
mov
sbbb
adc
pop
ret
addl
cmp
add
lcall
xchg
mov
pop
js
outsl
mov
in
mov
out
mov
pop
pop
ja
jo
sub
xor
aam
cmp
lods
cmp
ret
loopne
sub
repz
jmp
mov
sbb
mov
mov
mov
jne
shrb
movsb
shll
cltd
mov
lcall
add
aad
hlt
mov
inc
loope
stc
mov
dec
mov
push
pop
or
mov
push
xor
rorb
sbb
iret
adc
std
test
loope
int3
lds
jmp
in
and
pusha
aas
add
stc
xchg
insb
gs
int3
scas
ret
call
cltd
dec
jae
dec
adc
or
int3
aaa
cmp
leave
dec
pop
mov
ljmp
pop
dec
cmp
dec
jl
jg
xchg
cld
jl
add
mov
fstl
push
mov
lods
mov
xor
test
sub
mov
insb
loopne
mov
dec
sub
cmp
mov
cld
lods
push
push
lret
mov
mov
push
sub
or
or
rorb
push
roll
inc
or
inc
lods
insl
fs
xlat
push
fistl
rcll
mov
lock
bound
lret
cmc
jae
and
sar
push
out
sub
sub
loopne
jge
dec
icebp
mov
sub
in
stos
idivb
xor
dec
ret
add
std
add
and
daa
mov
mov
pop
adcl
sbb
xor
fcompl
mov
cmp
pop
mov
jno
mov
cwtl
stc
mov
iret
ret
sbb
pop
mov
jae
arpl
rorl
sahf
xlat
rcr
pop
mov
into
push
inc
lret
jmp
dec
mov
add
mov
insl
mov
mov
sub
lock
enter
jl
and
pop
inc
jb
adc
add
icebp
push
mov
fcoml
aas
imul
stc
or
call
add
push
gs
insl
gs
push
add
fbstp
add
ss
inc
bound
xor
stos
lcall
sub
or
mov
daa
xor
mov
push
adc
fnsave
xchg
imul
je
lock
pushf
push
data16
mov
subb
and
cltd
push
mov
test
mov
add
je
insb
imul
inc
popa
je
add
add
imul
jae
addr16
add
add
je
gs
inc
outsl
insb
outsl
jb
lea
jae
jmp
rcl
sub
shrd
add
pushf
shl
mov
add
mov
pushf
mov
test
repnz
push
push
push
lea
jne
jne
push
pusha
movzbw
push
movb
not
lea
lea
mov
pop
call
add
push
arpl
outsb
push
outsl
inc
insb
imul
pusha
dec
pushf
cmc
test
lea
jne
xor
jmp
mov
inc
es
mov
add
adc
or
or
xsha1
cmpsb
dec
sbb
insl
ret
ds
xlat
adc
pop
inc
movsl
mov
mov
fistl
int3
fcomps
or
mov
sbb
or
jno
es
repz
push
insb
xor
dec
adc
div
fsubrp
fisubl
pop
aad
ja
sub
jbe
xor
mov
mov
mov
cmp
out
or
jno
leave
loopne
retw
jne
cs
jbe
lea
je
pushf
lea
jo
pushf
pusha
adc
mov
push
lea
jmp
jge
or
into
mov
xchg
xchg
ljmp
ret
out
jg
fdivrs
dec
xor
lods
faddl
jo
push
adc
mov
jae
xchg
iret
jp
or
loop
mov
jno
pop
lds
xchg
fsubl
dec
dec
sbb
mov
and
jno
nop
imul
push
and
adc
cs
xor
xor
mov
lea
test
add
neg
mov
cmp
test
add
cmp
pushf
movzwl
clc
btr
mov
jmp
lea
je
pushf
pushf
push
lea
jmp
cmc
pushf
cmp
call
lea
je
call
pushf
movl
push
jmp
inc
call
pusha
add
push
movb
jmp
push
lods
nop
mov
push
js
js
bound
inc
bound
int
dec
mov
push
or
cs
xchg
rcrl
xchg
and
out
iret
xorb
bound
add
inc
or
jbe
outsl
cmp
in
mov
loopne
dec
outsb
fisubrl
mov
cltd
xor
push
ljmp
shrb
or
lcall
pushf
imul
ja
arpl
sbb
xlat
jbe
dec
mov
test
lods
inc
jne
xor
adc
ret
fwait
ss
jp
sti
lret
ljmp
fcomi
jbe
and
pop
iret
sub
inc
sub
or
mov
jns
sbb
xorb
popf
bound
sub
pushf
mov
shl
pop
clc
shr
jbe
ja
inc
in
sti
scas
mov
push
mov
ja
sub
lret
jmp
sbb
xlat
fst
cmp
cmp
jbe
daa
sahf
xor
jne
xor
xor
test
xor
sbb
pop
in
mov
iret
mov
xlat
push
jno
xchg
int
into
call
dec
data16
loop
xorl
xlat
sub
inc
lods
fcomip
out
inc
mov
pop
push
outsl
fisubrl
push
arpl
or
push
fnstcw
jb
insb
insb
adcl
lds
outsl
jne
xor
push
cmp
cs
cs
test
stos
xchg
mov
or
test
fmulp
shl
cmp
cld
jne
test
sbb
adc
mov
lret
pusha
xchg
int
add
push
ja
lcall
lea
vcvttsd2si
out
daa
rolb
cmp
pop
push
addr16
cmp
clc
dec
imul
out
sbb
cld
pop
adc
xlat
out
sbbl
ds
add
sub
inc
scas
enter
cmp
add
or
mov
xor
push
test
mov
fistl
pop
xchg
mov
imul
cmp
sub
jnp
lret
xor
cmc
push
dec
jb
push
fs
aam
out
or
xchg
out
inc
jmp
dec
stc
push
clc
push
inc
mov
ja
imul
test
or
subl
xor
ljmp
lret
adc
lret
pop
sub
int
adc
int3
xchg
xchg
jns
lret
cmp
ret
icebp
sar
iret
in
aam
aad
mov
test
les
bound
ret
xor
enter
popa
add
in
lahf
lock
and
iret
sbb
jl
addr16
outsb
shll
jne
xor
push
fs
ret
neg
clc
pushl
sub
cmc
rol
test
neg
cmc
call
cmp
test
cmp
jmp
bt
cmc
add
pushf
pushf
pusha
lea
jmp
add
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
fs
jbe
stc
shl
not
bt
mov
pusha
adc
shrd
add
add
bswap
mov
shrd
add
bswap
add
rcl
bts
movl
bts
sub
mov
mov
clc
cmp
push
lea
jbe
bswap
pusha
clc
sub
or
bt
cmp
mov
sub
lea
bswap
neg
mov
test
neg
movsbl
add
adc
btr
pop
shr
shl
stc
rcr
mov
shld
add
pusha
movzbw
jmp
mov
mov
lea
pusha
pusha
call
mov
push
push
push
pushl
ret
and
test
movb
stc
add
pusha
movb
pushf
movl
lea
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
imul
je
js
lock
fprem1
pusha
out
bound
pop
jno
jne
jle
je
jmp
push
push
test
inc
jg
nop
pop
sbb
movsb
mov
mov
mov
dec
mov
lods
xorb
cli
test
movsb
lahf
movsl
inc
pop
sub
imul
negl
and
push
sub
mov
subb
daa
xchg
xor
mov
dec
push
mov
push
pusha
mov
mov
lea
call
push
pusha
movb
mov
pushf
lea
jmp
push
mov
pusha
lea
je
shl
xchg
bt
neg
sub
or
inc
shl
mov
clc
jmp
add
inc
imul
je
imul
cmp
test
cmp
call
add
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
rol
mov
rcl
mov
pusha
call
add
inc
gs
imul
addr16
js
add
inc
outsb
popa
bound
imul
add
bt
test
pushf
cmp
cmp
pusha
call
btc
mov
cmc
pusha
and
movb
jmp
add
push
gs
imul
inc
js
inc
js
add
inc
gs
imul
bound
gs
add
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
push
push
xor
xor
fs
insb
add
add
je
je
arpl
bound
arpl
xor
nop
jecxz
fs
jae
stc
cmp
cmp
push
pushf
lea
jae
cmp
bt
cmp
call
jmp
add
inc
jb
popa
je
inc
insb
insb
imul
outsb
add
add
data16
je
imul
dec
jb
inc
js
lea
call
call
add
push
arpl
insb
add
add
je
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
inc
gs
outsb
jne
je
insl
dec
inc
add
mov
neg
bt
cmp
cwtl
movzbw
cwtl
lea
cwtl
not
mov
jmp
add
dec
data16
je
arpl
addr16
call
xchg
outsl
push
jbe
fptan
popa
or
xchg
mov
xchg
mov
dec
mov
ficoml
sbbb
adc
ja
cmp
jbe
enter
dec
imul
imul
jne
cmp
rcl
add
dec
jae
push
movzbw
pushl
mov
lea
setp
movsbw
lahf
lea
mov
pushf
mov
movl
call
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
gs
add
push
je
push
outsb
ja
outsb
add
add
gs
je
push
outsl
insb
imul
lea
call
push
lea
jb
pushf
pushl
movb
pushl
ret
add
dec
insl
popa
addr16
imul
je
outsl
jns
add
inc
gs
jb
arpl
jae
gs
imul
fs
pusha
pushf
lea
call
pusha
adc
lea
jge
pushf
pushl
pusha
lea
jae
pusha
pushf
lea
jne
call
add
dec
push
je
inc
push
add
add
imul
inc
insb
outsl
jae
add
add
gs
je
push
arpl
outsb
add
add
push
gs
imul
outsb
addr16
add
test
inc
add
cwtl
movb
lea
movzbw
push
mov
jmp
call
add
push
imul
bt
call
mov
iret
call
ss
push
bound
push
gs
js
jl
jecxz
int
gs
xlat
sti
clc
aad
lea
stc
loope
enter
fldcw
insb
lret
loopne
pusha
mov
shrw
pop
lcall
or
xor
mov
xchg
inc
inc
dec
push
push
loope
pop
outsb
shll
popa
sbb
jge
jnp
cmp
pop
mov
in
xchg
jge
mov
mov
push
loopne
pop
lcall
push
jb
fs
cli
pop
pop
jae
fldln2
push
hlt
pop
icebp
pop
cli
sbb
cmp
out
mov
dec
ss
mov
xor
and
push
and
sub
mov
push
out
gs
xchg
popf
xchg
ds
and
fsubrp
pop
jbe
imul
inc
out
into
das
loop
jne
shl
pop
mov
sbb
xchg
inc
pop
sub
add
push
jmp
pop
lcall
dec
jb
subb
xlat
stc
or
lret
je
jne
cmp
jno
cli
adc
sarl
aam
dec
pusha
push
pusha
dec
bound
ljmp
ljmp
lods
mov
mov
jle
pusha
data16
in
loopne
push
pop
in
adc
inc
cmpsl
mov
aas
ficoml
xchg
lahf
aaa
mov
xchg
cltd
and
mov
inc
insl
xchg
and
in
fsubr
pop
repnz
notb
jne
cmp
repz
add
push
movw
push
mov
jmp
call
push
movl
push
pushf
pushf
lea
jmp
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
lea
jne
pusha
movb
push
lea
jmp
cmc
shr
shl
ror
mov
bts
add
or
add
mov
mov
bt
jmp
jmp
add
mov
cmc
pusha
cmpb
pushl
jmp
add
inc
gs
je
imul
inc
add
add
je
gs
arpl
imul
fs
call
pushf
pusha
call
lea
jb
push
cmp
pusha
pushf
lea
jae
call
mov
not
pop
pusha
pushf
pushl
ret
pusha
lea
call
pushf
mov
push
jmp
jmp
pushf
pusha
movw
mov
lea
jb
pushf
clc
test
cmpb
jmp
pushl
xchg
pusha
dec
jmp
add
inc
jb
popa
je
push
arpl
outsb
dec
outsb
imul
add
je
gs
jo
popa
je
inc
add
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
add
je
outsl
arpl
add
add
outsb
inc
insb
imul
add
jnp
stc
incl
add
popa
jb
push
popa
add
add
fs
insl
popa
addr16
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
je
outsb
jne
rol
call
call
das
jnp
insl
xchg
lds
ss
cmp
lcall
daa
int3
xchg
ja
push
xchg
adc
enter
in
insl
testb
aas
mov
mov
and
sbb
cmc
xor
push
mov
mov
mov
cmc
ss
xchg
jmp
popa
aam
inc
mov
scas
or
test
insb
mov
int3
sbb
cmp
mov
mov
lods
add
mov
push
inc
pop
outsl
andl
or
cli
jne
ja
jne
cmp
jg
add
inc
gs
popa
jo
jne
add
outsb
pop
jno
fmulp
sarl
and
scas
nop
mov
xchg
lahf
xor
and
cmp
mov
ja
loop
stc
fnstsw
push
pop
push
rcr
and
jp
imul
jne
aas
in
fcmovb
arpl
fs
xor
cs
insb
add
dec
jge
jne
ss
loop
aam
leave
loope
test
outsl
nop
push
mov
mov
rclb
imul
popf
jle
sahf
jns
fucomi
inc
hlt
or
fisubl
gs
mov
cmp
jge
and
jg
sbb
je
icebp
and
xchg
xor
xor
dec
cltd
loopne
or
pop
add
inc
test
cld
cmp
cmp
xor
jne
fnstenv
cmp
int3
int
int
xor
lods
out
jne
jb
jne
aas
inc
jl
push
add
adc
add
out
fdivr
in
shl
cld
leave
decb
loop
mov
fs
ljmp
add
add
mov
mov
les
out
lahf
adc
into
mov
ss
cld
lods
jg
fidivs
imul
sarl
and
ret
cmp
fidivrl
adc
sub
xchg
mov
cs
sub
cli
push
jbe
leave
sarl
and
push
or
fnstenv
lea
mov
inc
push
dec
cmpsl
mov
je
pusha
pop
ja
jle
mov
pushf
mov
ds
fstpt
ficoml
cmpsb
lods
mov
cmp
pusha
fidivrl
lods
subb
xchg
jnp
jge
push
jge
loop
out
clc
or
ds
jge
add
inc
gs
outsl
insb
jns
imul
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
shlb
loop
clc
sub
push
call
add
push
gs
outsb
jne
je
insl
inc
imul
inc
xchg
and
popf
das
adc
dec
roll
add
pop
ljmp
xchg
dec
push
fstl
roll
jp
nop
inc
push
scas
dec
dec
adc
pop
sbb
xlat
lret
lcall
arpl
push
les
mov
fcomps
or
dec
mov
loopne
icebp
pop
int3
fcoms
xchg
push
ret
test
inc
aam
les
inc
call
ret
fdivp
aaa
cmpsb
sbbl
or
sbb
scas
adc
addl
aaa
or
rol
cmpsb
lret
add
pusha
xchg
adc
lahf
mov
adc
mov
dec
dec
mov
cmovbe
sub
and
dec
test
inc
fiadds
inc
ret
mov
loopne
outsb
pusha
outsb
pusha
hlt
in
fbld
out
loopne
xchg
sub
fs
dec
lret
inc
mov
sub
mov
aam
mov
sub
popa
test
mov
test
ret
ret
push
test
pop
mov
or
push
lcall
fcmovnbe
stos
fidivrs
shrl
mov
jnp
mov
mov
jl
pop
cmp
jmp
sarl
test
ret
or
loopne
adc
inc
mov
adc
pop
pop
add
pop
int3
add
pop
xchg
mov
test
inc
or
stos
rcrb
xor
fs
cld
sarb
fldt
cmp
push
leave
push
fsts
jnp
cmp
lret
push
rcll
into
cld
je
shrb
mov
je
cld
int
test
cmpsl
mov
cld
push
xchg
cmp
mov
cmp
sbb
shrb
inc
int
iret
test
les
lret
fildl
fmul
mov
stos
adc
lds
jecxz
test
sbb
push
jl
jns
int3
cmp
lret
inc
lods
fldcw
mov
sbb
aaa
add
ret
push
cli
lods
lret
mov
rcll
in
mov
mov
int
dec
cmpsb
fidivrl
push
cld
lret
mov
lret
leave
lret
stos
mov
fcmovnbe
aam
cmp
addb
inc
cmpsl
cmpsl
fdivrp
mov
mov
mov
rcrb
jle
mov
push
int3
jl
lods
lcall
or
and
mov
pop
push
scas
cld
xchg
fistl
ja
enter
push
or
mov
enter
cmp
adc
test
mov
fnstcw
fistps
push
mov
lret
out
ja
lods
lret
je
jo
mov
or
lret
in
loope
iret
int3
fbld
mov
iret
cmp
or
lret
pop
out
es
jne
mov
dec
stc
into
lret
adc
mov
scas
inc
adc
stc
es
push
out
ror
lock
fldl
sub
lock
mov
stc
jae
sub
test
and
sbb
and
mov
call
je
outsb
inc
outsl
ja
cmpsl
jp
lret
cmp
jns
test
sbb
ret
adc
stc
mov
test
enter
push
adc
fstl
jns
mov
lea
faddl
mov
cld
enter
dec
andb
enter
enter
cwtl
mov
cld
dec
int3
gs
sbb
adc
mov
fcmovnu
mov
je
push
je
int
or
lds
cmpsb
sub
out
mov
cmp
ss
inc
cli
mov
popa
lds
dec
aad
jne
dec
cli
mov
in
mov
in
ss
add
jge
aad
mov
cmpsl
cli
xor
ss
mov
pop
jmp
mov
ljmp
adc
arpl
icebp
fstl
xchg
fdivrl
aad
cmovne
adc
std
cld
pop
inc
lcall
cltd
leave
pusha
mov
test
dec
aad
test
jnp
aad
dec
test
xor
mov
push
mov
dec
sbb
cmp
fxch
fistpll
or
leave
pusha
in
cmp
cmp
out
cmp
sti
std
stc
jmp
les
pop
mov
leave
rolb
inc
and
out
sbb
inc
xor
adc
jl
je
cmpsb
fld
jl
leave
fnstsw
fs
mov
xchg
dec
fisttps
pop
mov
lret
call
dec
sbb
jp
adc
leave
ljmp
ret
out
test
sub
leave
pushf
push
dec
xor
jbe
inc
push
pop
and
inc
push
cmp
and
sbb
pop
cmp
inc
ljmp
sbb
cmp
in
out
pop
cmp
sbb
cmp
inc
std
inc
aad
loop
js
out
les
mov
or
sti
add
jge
in
mov
pop
mov
out
cmp
jbe
xor
pop
call
cmp
or
std
mov
leave
faddl
test
pop
xor
push
cmpsl
push
les
cmpsl
ror
inc
mov
jecxz
inc
in
cmp
les
jmp
pop
cmp
pop
mov
cmp
rcrl
cmp
inc
stos
add
jns
ljmp
dec
cmp
pop
pop
test
sahf
mov
pushf
dec
cmp
ljmp
sbbl
cmp
xorl
xchg
cli
pop
sbb
inc
in
test
in
test
pop
insl
aad
or
xchg
sarl
rorb
roll
cmpsl
shll
cmpsl
js
sub
or
add
leave
inc
cmp
stc
int
cmp
mov
jmp
ret
daa
lcall
cmp
xchg
mov
mov
call
mov
xlat
sbb
pop
je
pusha
fs
xchg
sti
xor
jmp
cmp
sti
nop
push
cmp
addl
add
sti
and
cwtl
mov
pop
cmp
testb
dec
mov
enter
pop
shr
xlat
mov
fisttpll
movsb
lahf
test
cli
jmp
fnstcw
pop
mov
or
pusha
lods
inc
pop
fstp
addr16
mov
mov
inc
jnp
sahf
frstor
fdivr
shrl
fstp
fcoml
enter
cwtl
mov
mov
out
push
nop
cli
adc
cmp
pop
mov
xchg
adc
aam
dec
mov
pop
and
mov
pusha
rolb
push
cmpsl
xchg
inc
adc
inc
xchg
stc
fists
xchg
or
mov
mov
sbb
jns
xlat
add
push
sbb
fadds
push
mov
cmp
xchg
dec
xchg
movsl
int3
popf
movsl
pop
mov
int3
dec
dec
mov
rorb
lods
cmp
es
shrl
adc
stc
jns
pusha
stc
enter
es
lahf
lods
add
dec
dec
pusha
into
rcll
pusha
mov
insb
shrl
push
xor
push
push
stos
fisttpl
inc
test
test
test
lret
jb
movsb
sarl
fs
or
jp
inc
mov
les
ret
pop
outsb
dec
xor
pop
mov
push
adc
sub
mov
stos
fst
and
rol
fxch
push
cli
xchg
int3
or
push
mov
ret
inc
sub
fistps
push
int3
cmpsl
stc
test
int
dec
lock
sbb
sbb
les
and
dec
cmpsb
leave
pop
data16
push
pushf
lret
xchg
ret
xlat
rcr
je
pushf
xchg
aas
xor
rol
or
mov
mov
dec
adc
mov
xchg
dec
jl
shll
mov
cld
or
fs
push
xor
movb
enter
cld
push
dec
test
add
inc
fbstp
fists
mov
aad
inc
pop
outsl
aam
jp
sub
shll
test
push
adc
js
leave
fildll
jns
push
leave
rol
mov
cld
mov
mov
mov
push
pop
inc
or
lds
inc
aad
xchg
test
test
fadds
retw
xor
and
inc
popa
faddp
jns
xor
mov
mov
mov
cmp
sar
inc
call
aas
gs
inc
jmp
enter
push
stc
sbb
cmpsb
lret
int3
mov
lret
xor
stc
cmpsb
adc
xchg
push
fwait
aam
cld
lret
int
sub
movsb
mov
ret
jno
rorl
stc
inc
stc
in
ret
sub
mov
fistpll
roll
scas
pusha
enter
pusha
int
roll
out
test
stos
xor
sub
shr
dec
sbb
pop
or
mov
sbb
inc
mov
dec
push
push
sbb
sub
pop
inc
sbb
jae
dec
shl
stc
or
inc
mov
adc
inc
rcr
scas
mov
pop
mov
mov
rcrl
cld
shlb
mov
add
inc
js
rcr
iret
pop
cld
sbb
lret
int
inc
loop
xchg
dec
cwtl
pushf
rcl
jge
sub
cmpsl
int
int3
cld
roll
pop
enter
inc
popf
jp
stos
lahf
lret
mov
outsb
enter
daa
jns
sbb
adc
fiadds
fmul
test
test
xor
inc
shlb
rcrb
dec
fstpt
fbld
dec
adc
scas
rorb
insb
aam
ret
data16
and
xchg
adcl
test
test
xchg
stos
or
fmulp
jge
xchg
add
mov
test
or
add
xor
sbb
xchg
cmpsl
or
or
jnp
ret
cmpsl
pop
scas
sbbb
or
data16
push
or
mov
ret
aam
dec
fcmovnbe
adc
cltd
shll
xchg
sbb
mov
lcall
push
mov
popa
mov
push
cld
ret
loopne
pop
pop
jns
mov
ret
lcall
add
adc
shl
in
mov
movsl
mov
cmpsb
pushf
cmp
rclb
lret
test
iret
lods
aad
xchg
ret
rcrl
ret
cmp
bound
popa
rol
or
and
push
and
cmpsl
xchg
shlb
test
lahf
lret
jp
dec
les
int
inc
or
xor
sub
dec
mov
sbb
inc
std
pop
add
xchg
cltd
dec
stos
jne
mov
in
enter
pop
in
mov
fcmovnb
mov
dec
sar
pop
adc
sbb
aaa
push
sbb
sbb
fcomip
lret
cld
dec
leave
xchg
pop
jl
dec
mov
cmpsl
mov
sarl
xchg
movsb
lcall
or
movsb
cmpsb
inc
out
mov
xor
mov
dec
dec
xlat
mov
inc
loope
movsb
push
lahf
fiadds
out
or
call
sbb
lods
cmpsl
adc
pop
mov
shr
int
push
js
stc
add
inc
mov
mov
xchg
cmpsl
shll
mov
lcall
repz
push
dec
dec
cld
in
rcl
fxch
xor
push
pop
mov
mov
mov
dec
adc
movsb
dec
sarl
les
outsl
aaa
addb
sub
mov
add
dec
cmp
mov
aaa
in
cmp
cmpsb
mov
scas
cmp
int
inc
sbb
in
add
out
cmp
mov
add
add
rclb
add
add
dec
cmp
mov
es
dec
sbbb
fmuls
int
test
adc
sti
std
sbb
movsl
jb
shl
mov
cld
sbb
push
adc
cmp
inc
cmp
fsubrs
icebp
pusha
call
xchg
test
inc
adc
movsl
inc
xchg
int
scas
fcmovnu
xor
int
test
dec
stc
test
shlb
jbe
sub
mov
in
pop
dec
mov
push
sub
int3
ret
mov
sarb
adc
mov
popf
push
xlat
push
stc
int
push
mov
movsb
rcll
cld
fwait
call
sbb
xor
and
out
push
lret
add
ret
jbe
cli
dec
dec
je
dec
push
bound
fmul
inc
enter
mov
jp
or
rcrb
sbb
out
ds
pushf
mov
or
mov
roll
pop
inc
push
xchg
loope
test
or
mov
movsl
jg,pt
xor
pop
fdivl
sbb
js
lret
rorb
xchg
pop
test
ror
aam
mov
mov
pop
scas
fldt
fwait
mov
aad
test
fmuls
addb
dec
cli
add
gs
lret
cmp
pop
les
sub
add
push
ret
les
sub
ljmp
cmp
mov
push
inc
dec
adc
pop
ljmp
negl
ret
pop
mov
iret
pop
ds
mov
pop
sarl
mov
inc
adc
fdivp
pop
cld
int
xchg
mov
aam
mov
imul
cmpsl
pop
cmpsl
xchg
ret
cltd
cwtl
lds
fdiv
addr16
jp
scas
and
addr16
xlat
pop
mov
fdivrs
mov
jno
int3
sub
test
cld
mov
xchg
andl
mov
shll
ret
fiaddl
sti
jae
shr
pop
jl
roll
dec
sbb
add
add
sub
movsb
ret
aad
iret
mov
fcomp
mov
aam
fmul
fdivrs
test
cmp
cmp
mov
dec
mov
push
mov
rcrl
leave
shlb
lret
xor
jnp
lods
addl
cmpsl
ret
rcr
cwtl
sahf
lret
fcmovnbe
and
mov
into
xchg
mov
lahf
stc
stc
es
jns
or
pop
xchg
fisubs
adc
push
pop
int
xchg
xchg
sarl
push
aad
push
mov
imul
shrl
lret
movsl
sbb
adc
cs
and
lcall
xlat
dec
lret
mov
xor
inc
push
loopne
mov
out
xchg
scas
rcl
dec
adc
ret
fadds
mov
mov
push
insb
leave
pusha
ret
lret
mov
cwtl
fs
loopne
sub
mov
and
mov
adc
mov
leave
sub
push
jmp
dec
test
test
lret
rol
mov
fiaddl
daa
popa
push
rcl
lret
into
inc
push
fld
sub
mov
mov
pop
mov
lea
cld
pop
test
jo
movl
adc
pandn
into
xlat
inc
dec
mov
lds
mov
int
movsl
fisubrs
pop
adc
inc
test
lods
sub
mov
xor
test
es
xor
pop
or
sbb
addr16
adc
pop
inc
mov
les
insb
jb
mov
movsl
sub
lret
fbstp
ret
sbb
adc
cli
sub
sbb
and
push
lcall
cwtl
xor
enter
dec
cwtl
add
sarl
xor
movsl
sarl
test
cwtl
lds
lds
imul
je
cwtl
add
stc
mov
fdivrl
mov
xlat
test
sub
mov
imul
ss
dec
or
adc
mov
and
imul
pop
dec
cmpsl
inc
aad
lret
cli
popf
roll
jns
mov
xlat
test
cmp
push
xchg
inc
cld
mov
sub
movsl
xchg
iret
and
rolb
leave
ss
mov
mov
rcr
pop
sbb
fstp
lds
ret
jae
fisttps
sbb
mov
fstpt
push
aad
cmpsl
push
mov
inc
xlat
leave
pop
push
xchg
imul
pop
outsb
loopne
push
pop
ds
cmpsb
sub
cmp
clc
pop
sub
sub
cmpsl
dec
rcr
lcall
and
popa
push
ret
dec
fcoms
and
enter
flds
dec
lods
mov
sarb
out
fmul
mov
les
leave
pop
mov
push
fisubs
rcl
lret
mov
sub
cwtl
je
sbb
cmp
shll
es
mov
rcll
lcall
push
roll
jl
ret
and
lretw
xchg
lahf
sarb
jp
rep
dec
ljmp
mov
int3
leave
mov
push
jl
cli
rcll
rolb
mov
inc
loopne
rolb
rorl
jge
stos
mov
ja
lea
ja
pusha
mov
not
inc
pushl
dec
inc
bt
or
xor
seto
xchg
btc
pop
mov
and
sar
mov
stc
movb
cmp
pushl
xchg
not
mov
pushf
cmc
sub
pushf
rep
mov
mov
pushf
lea
jmp
add
inc
insb
outsl
bound
inc
insb
popa
addr16
add
push
gs
ja
imul
fs
jne
bsf
bt
or
xor
aad
call
lods
add
jp
bt
neg
clc
clc
stc
pushf
ror
cmp
call
outsl
insb
xor
cs
insb
add
add
je
dec
push
xor
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
pushl
movb
lea
jne
pushf
pushf
call
icebp
hlt
fdivp
iret
cli
int
shl
stos
out
mov
shll
lret
xchg
mov
cmp
and
inc
add
ja
in
out
sub
lret
jo
xchg
sar
sarl
jo
cmp
push
in
fcmovnb
add
dec
jae
popa
fs
outsl
fs
je
add
add
je
jo
outsb
inc
imul
add
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
lea
jne
cmc
setbe
sub
bts
mov
cmp
test
cmp
call
lods
lock
add
in
sbb
cmc
call
fadds
push
mov
mov
adc
cmp
or
mov
and
popa
rol
push
push
jg
jge
mov
jno
xchg
mov
jecxz
add
xchg
pop
inc
add
or
mov
sub
dec
in
movsl
sahf
lcall
and
dec
mov
adc
incl
gs
sub
insb
xchg
roll
pop
mov
imul
sbb
mov
stc
in
cld
xchg
test
popa
push
call
pop
lcall
mov
cmp
mov
not
fldcw
leave
dec
dec
loopne
pop
xor
shlb
repnz
jecxz
negl
mov
nop
xlat
dec
dec
xchg
sub
loopne
mov
mov
fucomip
sub
pop
lds
add
pushf
pop
jnp
sub
push
dec
sbb
mov
insb
vxorps
out
pusha
pusha
movb
lea
jb
pushf
pushf
pushl
ret
pusha
dec
dec
call
add
inc
gs
imul
add
test
add
incl
add
insb
inc
imul
dec
popa
jo
je
imul
sbb
add
test
call
add
push
push
js
arpl
gs
add
add
jo
je
push
popa
addr16
add
add
jmp
mov
btc
add
xchg
sub
jmp
mov
lea
ja
jmp
add
dec
insb
gs
jne
add
add
je
imul
inc
js
inc
js
mov
lea
je
pushf
lea
jmp
jmp
lea
cs
add
and
and
daa
push
xor
bound
mov
stos
aad
std
notb
add
push
cwtl
pushf
out
push
adc
jmp
inc
push
icebp
pop
icebp
pop
loop
call
mov
sbb
mov
sbb
jmp
nop
js
sbb
push
and
pop
mov
not
jmp
stos
pushl
lea
jmp
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
arpl
add
add
gs
je
push
outsl
jne
fs
arpl
outsb
add
xor
jle
fs
jne
cwtl
call
sar
sub
sub
rcl
and
sub
shld
add
add
movzbw
pushf
inc
lea
mov
test
mov
mov
repnz
movb
movb
call
add
push
popa
imul
jo
imul
mov
add
sub
call
btr
mov
adc
pushf
not
sbb
add
clc
rol
mov
stc
clc
cmp
jmp
pop
mov
cmc
pushf
jmp
cmp
pushf
call
add
inc
gs
fs
jo
gs
dec
outsb
outsw
add
jmp
add
inc
gs
outsl
arpl
push
imul
clc
call
inc
dec
dec
xor
cs
insb
add
cmp
mov
jmp
jmp
inc
bt
movb
shr
call
repnz
mov
lea
jne
pushf
lahf
setg
movb
call
pusha
pushf
movl
lea
je
pusha
push
pushl
lea
jmp
call
lea
ja
push
call
inc
add
test
shr
add
lea
rol
clc
bswap
sub
mov
jmp
pushl
popl
clc
test
bt
pushf
cmp
call
add
inc
jb
ja
fs
add
je
imul
je
add
push
gs
popa
jo
jne
gs
movsb
pushf
mov
pushf
lea
jmp
push
mov
mov
fistl
sub
add
cmp
cmp
xor
xor
scas
pop
or
test
cs
xor
and
jae
ja
aam
scas
mov
sbb
push
cmp
sbb
cwtl
xchg
or
push
mov
mov
out
push
mov
push
dec
cld
inc
cmc
dec
out
inc
decl
pop
testl
pop
inc
and
or
jmp
adc
mov
inc
jne
pop
xchg
test
add
inc
gs
jb
jns
arpl
add
test
fwait
add
push
push
lea
jmp
add
inc
imul
add
add
gs
outsb
imul
add
add
popa
jo
imul
imul
jb
add
add
fs
gs
jne
arpl
adc
pushl
mov
pushf
lea
jmp
lea
jns
and
jno
add
push
pusha
pushf
mov
lea
jmp
call
add
inc
outsl
insl
jo
jb
push
je
imul
insl
imul
jae
je
loop
popf
movsl
dec
dec
sub
fimull
jbe
jae
pusha
push
jle
dec
jp
std
adc
adc
and
in
and
insb
cmp
enter
jae
fs
add
mov
and
ror
add
mov
shl
jno
pushfw
sahf
sub
rclb
jno
insb
push
pop
and
adc
aas
jb
jno
cwtl
add
jo
fadds
xor
mov
push
bnd
pop
mov
sbb
jge
cmp
inc
imul
pop
or
mov
loop
fwait
or
movsb
adc
mov
xor
enter
fsub
push
push
cwtl
popf
mov
cmp
int3
pushf
gs
movsl
xor
leave
jmp
sbb
mov
jl
jl
jnp
jle
jne
ss
pop
jecxz
lret
inc
gs
jns
je
insl
dec
outsb
outsw
add
add
je
inc
add
enter
and
pusha
mov
setns
lea
call
add
inc
gs
imul
pushf
lea
jae
jmp
add
inc
jb
ja
outsl
arpl
push
arpl
add
insb
imul
je
mov
cs
jb
pusha
dec
ja
insb
inc
jbe
out
cmpps
mov
add
push
push
or
sub
aam
mov
adc
jg
rcr
cmpsl
aam
lods
sbb
push
mov
mov
scas
hlt
notl
dec
push
fnstcw
dec
push
mov
jg
mov
lds
cmpsb
mov
xchg
ret
fnstenv
xor
or
xchg
sti
rcll
daa
test
hlt
inc
in
hlt
pop
lock
ljmp
in
subl
sub
and
sub
das
push
cmp
and
mov
mov
push
fmulp
sub
cld
inc
cmpsl
mov
fs
movsb
push
stos
inc
xlat
ss
pushf
test
imull
andb
mov
idivl
mov
xchg
and
lea
xchg
rorl
scas
mov
bound
fldt
dec
jp
jle
jns
jp
jae
jp
jne
pop
dec
jne
int
add
rcrl
sub
add
push
and
sahf
imul
pop
jge
and
loope
sti
rcll
inc
mov
mov
arpl
pop
cltd
enter
lret
and
mov
push
xor
cmpsl
push
in
dec
or
adc
or
mov
out
ret
jo
popa
jg
jae
and
pop
loop
aad
add
jbe
dec
jne
push
jb
jo
jb
dec
gs
fs
sub
jp
ss
push
xchg
mov
mov
scas
andb
mov
movsl
jecxz
shrb
push
movsb
repnz
repnz
jne
cld
push
inc
ja
je
cld
sbb
xor
mov
add
repnz
cmp
inc
loop
push
fadd
jle
mov
es
test
lock
jl
mov
movsb
xchg
and
mov
subb
mov
arpl
rcl
adc
sbb
jp
lea
jle
jae
push
sbb
add
ss
lahf
test
lahf
scas
or
mov
dec
mov
xchg
aas
fst
div
push
jecxz
aaa
sbb
lret
and
in
scas
jnp
clc
cmp
clc
aas
lcall
xlat
ja
std
jno
loop
es
dec
call
inc
mov
ja
pop
mov
sbb
test
cmp
mov
xchg
cwtl
sub
in
in
rcrl
fwait
xchg
mov
aaa
rcrl
mov
pusha
xchg
sbb
sbb
stc
call
inc
repnz
mov
gs
pop
mov
mov
lea
fstl
sub
cmc
movsb
sahf
mov
out
out
clc
dec
mov
ret
fwait
pop
jnp
mov
ret
mov
mov
imul
imul
mov
or
mov
les
neg
sbb
inc
mov
arpl
push
mov
pop
pop
push
sbb
mov
mov
mov
jbe
cld
lahf
lret
rorl
inc
testb
imul
icebp
lods
push
adc
dec
dec
hlt
pop
call
fidivrl
testl
pop
cmpsl
loop
inc
lret
enter
sbb
pop
mov
xor
fidivs
cmp
pop
lods
xchg
cltd
add
inc
push
imul
outsl
insl
push
outsl
imul
not
test
test
sub
stc
rol
call
add
dec
gs
jo
insb
insb
outsl
arpl
xor
cmc
shl
rcr
setno
not
adc
sub
stc
rcl
rcr
rcr
rol
pushf
pushl
movb
inc
call
add
dec
outsl
popa
fs
jne
jae
jb
add
xor
push
pusha
call
cmp
pusha
cwtl
sar
dec
mov
scas
mov
nop
mov
test
enter
out
mov
pusha
xchg
aaa
inc
pop
dec
mov
adc
insb
adcb
push
imul
push
into
lahf
inc
inc
jge
repz
and
cmp
jns
rorl
xchg
test
mov
mov
pop
out
loopne
repnz
jne
popa
mov
lcall
sar
stc
cmp
add
pusha
cmc
pushl
test
pushf
lea
jne
pushf
call
add
pushl
clc
movzwl
pushl
mov
bt
pushf
pushf
add
jmp
pushf
call
clc
pushf
sub
stc
clc
push
cmc
repnz
movb
pushf
lea
jne
dec
jae
bsf
mov
shrd
mov
pushf
shr
sub
btr
shld
lea
pushf
sub
stc
pushf
pushf
stc
pushl
popl
pusha
cmp
call
xadd
mov
clc
rcr
xchg
mov
btc
lea
bt
mov
push
or
pushf
jmp
lods
setb
jmp
pushf
mov
bt
cmpb
movb
lea
jne
test
sub
dec
push
seto
btr
mov
cmp
test
adc
stc
add
ror
dec
dec
rcl
mov
cmp
call
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
add
gs
je
inc
dec
inc
imul
push
gs
je
gs
push
outsl
fs
or
sub
jp
imul
inc
std
add
sub
mov
mov
int3
and
adcb
repz
in
push
lods
jecxz
jb
dec
inc
adcl
call
pop
mov
shrb
or
shlb
mov
xchg
pusha
ds
sarb
and
push
inc
repz
cmpsb
loopne
ret
sub
adc
lods
les
pop
mov
and
xor
and
pop
loope
or
or
ljmp
out
and
sub
dec
jnp
mov
in
adc
daa
pop
mov
sbb
mov
repnz
dec
add
xorl
ja
xchg
in
and
xor
push
inc
gs
out
repz
loop
lock
ljmp
push
pop
dec
xor
shll
and
or
sbb
add
cmpsb
dec
cmpl
mov
xor
push
push
arpl
iret
bound
fwait
sub
adc
in
add
sbb
lahf
and
push
scas
push
in
jecxz
pop
ja
jbe
jge
jg
and
or
pop
jbe
stc
dec
pop
mov
cmp
fists
and
lods
xor
xchg
mov
rcr
add
je
jne
jb
outsb
je
jb
arpl
jae
add
push
insb
jae
gs
popa
insb
jne
add
xchg
add
call
lea
jne
rcr
sub
ror
bsf
mov
cmp
stc
pushf
pusha
add
cmc
jmp
add
inc
gs
jb
arpl
jae
gs
jo
call
cmpb
pushf
call
add
push
gs
arpl
and
movsb
decl
rcr
mov
setae
mov
shrd
stc
mov
movb
pushf
xor
cmp
clc
test
jmp
push
pusha
pushf
lea
jae
clc
push
movb
pushf
sub
jmp
add
dec
outsl
popa
fs
arpl
inc
add
add
popa
insb
push
gs
insb
insb
outsl
arpl
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
jbe
dec
jne
inc
insb
outsl
jae
add
add
outsl
outsl
jae
inc
outsl
insb
outsl
jb
add
cmp
add
outsl
bound
dec
popa
outsb
fs
add
add
insb
arpl
insb
gs
add
push
lea
je
test
stc
cmp
call
add
dec
outsb
je
jb
arpl
arpl
add
gs
je
push
outsb
add
add
jb
outsb
push
add
add
imul
add
add
add
push
gs
imul
outsl
arpl
jae
mov
jp
pop
push
pushl
ret
cmp
fs
and
ss
push
pop
jo
outsb
inc
jno
jge
insb
inc
push
push
xchg
push
sbb
add
lds
jp
stos
mov
adc
xchg
jb
lds
mov
mov
inc
adc
loope
imul
movsb
loop
jae
lahf
imul
mov
fisubrl
setge
ja
lret
cmc
test
xorl
sub
popa
cmp
mov
sar
sbb
or
push
ljmp
test
mov
mov
add
xor
lea
call
jmp
add
inc
gs
outsl
fs
gs
imul
add
add
jb
je
push
lea
jae
inc
rcl
shld
mov
rcr
bts
bsf
neg
mov
call
cmp
adc
lock
in
icebp
hlt
notb
out
sbb
mov
loop
pop
mov
mov
push
xlat
pushf
cmpsb
inc
mov
clc
push
out
adc
mov
test
push
das
or
fwait
mov
dec
push
sub
out
inc
stos
movsb
lahf
xor
sub
push
mov
cmpb
sbb
loope
cmpsl
ret
or
lcall
add
cmpsb
ret
lret
mov
jle
jnp
imul
fsub
jne
cmpl
xchg
mov
xchg
or
sub
xor
mov
push
mov
mov
inc
data16
dec
lock
or
pusha
sub
pusha
sbb
adc
sbb
shr
data16
cmc
pop
jmp
xchg
ja
shlb
inc
lods
int3
repz
ret
inc
and
aas
xchg
and
jne
addr16
pop
leave
shll
or
cmp
or
adc
xor
xchg
ja
xchg
and
pop
lock
repz
cmp
ud0
out
mov
adc
out
add
inc
lock
outsl
jae
clc
adc
ficoml
movsb
movsl
add
add
sub
mov
pop
and
sbb
and
mov
mov
push
jne
xchg
test
add
insl
imul
insl
push
jb
jo
jb
jns
lea
jne
push
pushl
pusha
lea
jmp
pushf
pusha
pushl
lea
ja
jmp
add
push
gs
jne
jb
outsb
je
imul
jns
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
push
and
add
add
xchg
lcall
xor
add
xchg
and
int3
jle
add
dec
sbb
bound
add
andl
stos
jne
add
push
sbb
sbb
add
pop
sbb
or
add
mov
add
and
add
add
add
orb
add
add
add
or
add
adc
add
add
add
sbb
and
cmp
add
push
sbb
mov
and
pop
xchg
add
jle
add
jmp
and
stos
fwait
and
aas
pushf
and
and
add
jge
add
cmp
add
and
mov
sbb
enter
mov
andb
ret
pop
and
lret
add
add
add
lea
add
arpl
add
push
sbb
cltd
add
pusha
aaa
and
or
and
lret
add
mov
add
push
and
in
and
rcrb
ja
and
mov
mull
add
cmp
add
push
sbb
xor
add
dec
sbb
push
pop
and
out
pop
sbb
out
arpl
add
arpl
add
sbb
cmp
xchg
jns
add
xor
sbb
sarb
add
add
hlt
and
popl
sbb
ds
and
ja
sbb
repz
sbb
mov
pop
sbb
or
sbb
and
mov
and
jnp
and
pusha
dec
sbb
sti
pushf
and
jle
and
mov
and
adc
add
add
jmp
and
shrb
and
ja
and
pop
xchg
and
dec
popf
and
les
add
and
outsb
aaa
and
mov
dec
sbb
fisttpl
add
pop
sbb
rcrl
add
and
add
add
jle
add
and
loope
and
fstl
add
jmp
add
andb
mov
and
hlt
jmp
and
cwtl
push
sbb
outsb
arpl
add
and
cmp
add
and
pushf
fwait
and
jmp
and
jno
and
cmp
xchg
add
add
cmp
add
and
imul
repnz
and
lcall
add
mov
and
mov
and
mov
jno
add
jl
add
jne
add
pop
and
cmc
movsl
sbb
test
and
dec
fwait
and
or
sbb
aad
and
pop
pop
and
pop
add
add
add
add
outsl
and
mov
and
sbb
and
or
and
mov
mov
and
add
and
dec
jnp
add
and
std
push
and
xchg
and
jo
and
mov
cmp
add
arpl
add
add
gs
add
lea
add
jle
add
and
add
sbb
or
cmpsb
js
add
and
in
cmp
add
and
adc
and
sub
pop
sbb
leave
jmp
add
popf
and
ds
sbb
notb
add
dec
sbb
xor
and
movsl
jle
add
push
sbb
popl
and
or
and
orb
add
mov
and
das
push
sbb
cmpsb
xchg
and
loopne
and
push
pop
and
mov
sbb
ja
and
ds
sbb
fnsave
add
js
add
pop
and
cmc
pop
sbb
push
jle
add
and
int
and
lea
add
and
je
and
sbb
add
cmpsb
sbb
dec
and
inc
push
and
jecxz
and
push
cmp
add
pop
sbb
inc
outsl
and
decl
and
ret
add
pop
and
and
and
pop
popf
and
sbb
and
sar
and
pop
cmp
add
pop
sbb
fcoms
add
pop
sbb
sbbb
cmpl
rolb
add
add
push
sbb
sbb
add
push
sbb
popa
push
sbb
sbb
push
sbb
jle
sbb
hlt
call
and
sub
and
and
and
int3
cmp
add
and
sub
js
add
cwtl
and
mov
and
and
add
add
add
popf
and
mov
pop
and
in
and
push
mov
and
mov
and
xchg
push
sbb
fimull
ds
sbb
lds
and
popf
dec
sbb
scas
and
xchg
stc
and
jmp
add
js
add
lcall
cli
cmp
add
sbb
cmpsl
pop
sbb
sbb
and
mov
and
pop
sahf
and
insb
xchg
add
andl
mov
and
cmp
sbb
dec
xchg
add
aas
and
or
and
adc
add
add
add
pop
sbb
cmpsb
push
sbb
xchg
and
xor
and
mov
and
cli
push
sbb
mov
pop
sbb
mov
cli
and
addl
and
xor
and
andb
call
dec
sbb
popf
and
dec
and
cmp
sbb
push
xor
sbb
aaa
and
dec
xchg
and
jmp
sbb
mov
add
and
or
add
and
mov
add
and
dec
jbe
add
mull
add
sbb
and
and
testb
add
add
cmp
and
lods
pop
sbb
cmpl
add
andl
add
fwait
and
add
add
pushf
and
loope
and
test
sbb
shrl
add
hlt
and
push
aaa
and
pop
cmp
add
andb
pop
fwait
and
cs
sbb
sub
add
push
sbb
sbb
add
sbb
popf
jmp
add
cmp
add
and
dec
cmc
and
sub
add
sbb
mov
push
and
jp
and
out
sbb
xchg
popa
and
xchg
add
add
add
mov
add
pusha
sbb
ljmp
add
cli
and
mov
sbb
loope
and
xor
and
adc
add
in
push
and
mov
add
xor
add
add
add
lea
add
jmp
and
inc
push
and
xchg
pop
sbb
add
add
or
add
mov
add
andb
add
or
add
add
add
adc
add
add
add
ret
jno
add
and
ret
outsl
and
sbb
add
add
jle
sbb
add
add
mov
fwait
and
or
and
mov
add
jle
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
gs
dec
outsb
jne
add
push
gs
arpl
gs
imul
xor
movw
lea
je
stc
clc
stc
call
call
add
inc
jb
popa
je
inc
arpl
insb
gs
je
jb
popa
bound
add
adc
movw
pushf
mov
push
lea
jmp
lea
je
bt
jmp
jmp
add
inc
gs
imul
inc
add
add
gs
je
inc
outsl
insl
jo
je
bound
inc
add
decl
cmp
mov
jmp
loopne
jmp
sar
push
movsl
std
adc
add
in
stos
stos
sahf
jg
xchg
test
or
sti
dec
and
mov
ja
jae
jge
fs
jae
xor
xchg
mov
test
adc
aaa
ret
xchg
ds
insb
dec
decb
jne
jno
lea
inc
xchg
sbb
bswap
movsbw
mov
shl
push
bsr
push
call
pusha
add
pushl
cmc
cmc
call
test
push
lea
je
pushf
call
cmpsb
out
push
mov
fwait
or
and
das
add
cmp
push
adc
scas
cld
push
cmpsb
mov
cli
pop
dec
movsb
repnz
and
push
les
cmp
leave
cmp
pop
std
cmp
or
int
add
addr16
jle
jae
outsl
les
cmp
mov
ror
ror
mov
cmp
cmc
bt
pusha
cmpb
mov
pushf
jmp
push
adc
movb
pushl
lea
jmp
lea
ja
jl
pusha
push
lea
jb
pushf
cmpb
jmp
neg
xor
rcl
mov
bt
pusha
movb
bt
cmpb
call
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
push
gs
imul
inc
gs
jb
arpl
fs
jae
add
in
ljmp
mov
pushl
jmp
add
inc
gs
popa
jbe
inc
imul
add
inc
and
pop
jno
adc
add
add
xor
pusha
mov
push
movl
lea
jmp
add
dec
outsl
arpl
inc
jb
add
push
pushl
pushf
pushl
ret
clc
jmp
and
push
jno
ss
xchg
mov
lahf
mov
sub
mov
fiaddl
out
push
inc
dec
scas
inc
test
lret
stc
push
loope
jp
aam
dec
in
enter
cmpsb
mov
jmp
mov
stos
push
bound
ja
test
and
in
fisubrs
test
cli
cmpsl
call
scas
mov
pop
negb
jae
or
add
mov
and
in
ret
adc
pusha
jae
pushf
lret
dec
jg
popa
ret
jne
jae
arpl
pop
push
scas
divl
rclb
mov
xchg
mov
sbb
inc
fbld
xchg
jns
out
outsl
cmc
out
pop
cwtl
push
mov
cmp
movsl
or
cmpsl
or
sbb
xchg
pop
nop
mov
shlb
cmp
gs
inc
jmp
in
inc
repz
testl
insl
insl
in
add
adc
mov
movsb
pop
repz
out
std
pop
jne
jb
cld
out
pop
je
leave
shll
xchg
jle
enter
insl
mov
adc
jb
outsl
cltd
xor
pusha
dec
jl
ja
data16
sub
sub
inc
loop
xlat
pop
mov
jno
sbb
in
je
repnz
sti
out
pushf
fst
and
arpl
js
jle
fnsave
mov
jg
pusha
call
add
push
push
outsb
outsl
ja
pushf
lea
je
clc
stc
cmp
jmp
mov
jmp
add
dec
imul
add
add
jb
outsb
inc
add
add
gs
je
inc
imul
jmp
add
and
hlt
jmp
add
sbb
fsubl
add
and
les
and
and
and
fs
and
test
and
dec
push
and
insl
xchg
and
cwtl
push
add
and
jno
sbb
adc
and
js
and
or
sbb
pusha
outsb
and
mov
and
repz
and
jo
and
mov
add
add
add
add
push
and
mov
add
add
add
add
add
and
int3
repnz
inc
push
sbb
mov
and
hlt
repnz
jno
and
fsubrl
add
repz
or
and
call
repz
insl
xchg
and
cld
outsb
and
sbb
and
test
and
add
and
push
gs
arpl
insb
insb
push
outsl
jae
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
ret
incl
add
insb
arpl
imul
inc
and
movl
mov
pushf
pushl
ret
cmp
clc
add
push
push
pushf
lea
jmp
add
ja
jbe
dec
jne
inc
gs
jne
inc
gs
add
add
imul
dec
jo
outsb
add
movl
lea
jnp
pushf
movl
pushf
pushf
lea
jmp
lea
jb
bt
cmpb
pusha
lea
jne
jmp
add
push
je
outsb
push
arpl
adc
pop
xor
bt
sub
cmp
cmc
test
pushl
popl
stc
mov
cmc
clc
cmp
jmp
add
inc
gs
je
gs
push
outsl
fs
mov
xor
clc
jmp
lods
xorb
jecxz
jle
jne
push
dec
pusha
dec
cld
push
inc
mov
aam
pop
jae
stos
out
nop
data16
psubsb
shr
loop
aaa
rolb
fisttpl
mov
in
shll
xlat
mov
lahf
xor
mov
aas
adc
pushf
xlat
jecxz
scas
rep
add
and
sub
inc
lods
cmpl
xchg
ja
xchg
xor
mov
inc
sub
mov
push
pusha
ret
fs
into
jp
cmp
jbe
mov
mov
add
adc
aas
sbb
adc
xchg
imul
lcall
test
fiadds
xchg
int3
daa
ljmp
xchg
mov
outsl
jb
xchg
adc
dec
loope
stc
dec
scas
addr16
fcoml
fisubl
mov
inc
fidivrs
jnp
jmp
out
in
negl
pop
mov
mov
dec
dec
stc
aad
js
shll
or
cmp
sbb
sub
in
inc
sbb
add
in
mov
inc
sbb
or
repnz
mov
cvtps2pd
inc
jmp
ficoml
clc
jmp
int3
fdivl
arpl
imul
push
jnp
lods
in
jnp
or
cld
mov
imul
jne
jbe
ss
pushf
pushl
lea
call
stc
clc
test
cmp
jmp
add
push
outsb
jb
imul
popa
jae
inc
add
add
sbb
xchg
fsubrp
fucompp
icebp
icebp
fsubr
push
mov
xchg
pop
jns
xchg
inc
lret
push
repnz
and
xchg
scas
popf
mov
add
sub
xchg
mov
lods
add
sbb
sbb
mov
mov
add
inc
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
add
je
imul
add
add
jo
imul
add
imul
arpl
outsb
add
add
je
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
pushl
bswap
mov
movb
push
pushl
ret
add
push
gs
gs
jae
inc
popa
jo
jne
add
add
insb
insb
push
imul
outsl
arpl
xlat
hlt
fdiv
iret
loop
loope
out
fucomp
lds
ficoml
push
add
xchg
popa
aas
lret
xchg
add
outsb
xchg
call
cmp
jae
and
sub
or
xor
add
rorb
notb
in
inc
lock
cmpsl
outsb
test
or
leave
les
inc
push
fidivrs
sbb
js
mov
add
inc
insb
outsl
bound
push
imul
gs
imul
imul
jns
add
add
inc
insb
insb
outsl
arpl
add
push
popa
je
insb
je
not
jmp
mov
pushf
inc
jmp
insb
cmp
and
lret
pop
push
jp
jle
jge
insb
inc
jne
insb
inc
std
or
loop
mov
dec
inc
lods
pop
insl
mov
sbb
stc
test
mov
shll
mov
sub
movsl
pop
adc
add
in
incl
pushf
mov
cld
mov
push
data16
xchg
out
and
xor
jb
je
jne
jp
insl
sarl
xor
fs
test
mov
mov
xchg
push
mov
sub
jb,pn
cmp
pop
and
sbb
add
add
subl
xchg
inc
mov
aas
aad
insl
mov
repnz
inc
imul
andl
mov
call
xor
fsts
cmp
aad
xor
das
cltd
jo
ret
lret
in
in
out
jmp
call
dec
std
dec
cli
inc
out
adc
xor
ljmp
or
clc
call
adc
jnp
push
adc
sarl
pop
push
jnp
fldcw
mov
sti
lret
xchg
xchg
xchg
arpl
xchg
mov
adc
add
xchg
push
lret
cmpsb
mov
out
add
add
xchg
and
sub
xor
cmp
mov
sub
jns
xchg
or
stc
add
cwtl
outsb
popa
dec
neg
jne
jp
xchg
lea
add
imul
imul
inc
outsl
jb
popa
je
add
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
fs
ja
push
pushf
lea
jb
clc
stc
pushf
cmpb
mov
pushf
pushf
push
lea
jne
shl
mov
push
add
cmc
movzwl
btc
jmp
add
dec
gs
jo
jb
popa
je
add
jbe
cmc
add
call
lea
jne
sar
movsbw
mov
clc
test
call
jmp
add
inc
gs
imul
push
jo
arpl
add
jmp
pop
sbb
adc
leave
sarl
cli
aad
shl
fdiv
fsubr
lret
in
icebp
pop
negb
dec
cld
pop
lock
repz
lahf
ja
sub
sub
popa
orb
in
mov
or
push
jne
jge
test
not
stos
mov
not
mov
sets
mov
mov
call
jmp
add
dec
outsb
jbe
insb
imul
je
or
dec
lods
es
sub
mov
mov
scas
nop
mov
mov
out
dec
adcl
sahf
dec
out
adc
in
or
xchg
lcall
fstps
or
and
cmc
xor
icebp
sbb
xchg
sub
mov
mov
fisubl
xlat
dec
inc
lret
cmpsl
mov
rep
cltd
sub
xor
das
mov
rorb
insl
jle
mov
icebp
add
jbe
repnz
cld
sbb
jl
cli
out
fs
jne
pusha
pusha
movb
pushf
lea
jmp
add
inc
gs
je
imul
push
add
add
je
arpl
jo
jns
xchg
pushf
mov
pop
pushf
jmp
jmp
add
dec
outsl
popa
fs
imul
fs
ja
sbb
xor
sub
inc
add
or
mov
clc
shl
mov
push
stc
call
push
lock
std
std
and
fs
ret
jl
push
int3
int
or
mov
pop
dec
ss
mov
dec
insl
jge
jns
and
cltd
aam
push
roll
shrb
adc
test
popa
into
jge
aad
add
xchg
adc
xchg
push
mulb
fs
xchg
test
adc
sbb
dec
add
dec
outsl
imul
inc
add
add
fs
push
dec
jne
je
inc
jns
add
add
je
gs
je
jo
imul
add
add
add
je
arpl
insb
insb
push
popa
outsb
add
push
lea
jae
pushf
cmp
cmc
cmp
pushf
pushl
jmp
pusha
lea
jne
pushf
push
pushf
lea
jmp
add
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
add
mov
pusha
mov
push
jmp
add
insl
imul
insl
dec
jne
add
test
mov
decl
mov
add
and
btc
mov
pusha
call
add
inc
js
je
jb
arpl
jae
add
inc
jb
popa
je
inc
imul
jns
add
in
jl
pop
jb
mov
adc
dec
fcmovnu
out
shr
icebp
into
jecxz
out
stos
std
pop
rorb
in
jg
sbb
add
xchg
ds
test
fsubrs
int3
sub
mov
hlt
aaa
and
adc
cmpsl
and
test
xchg
pop
adc
sbb
shr
int3
and
in
cmpsl
xchg
push
in
mov
pop
fildll
jns
mov
into
mov
iret
js
sarb
and
stos
int
sahf
mov
pop
mov
adc
mov
loop
mov
or
add
push
jb
je
inc
imul
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
ds
fiadds
push
jg
arpl
inc
bound
das
jo
pop
push
xchg
mov
mov
int
sub
into
xchg
mov
adc
add
pop
pop
hlt
fdivrl
jl
mov
push
test
cld
push
or
jge
or
aaa
xchg
fucomi
push
push
loopne
loop
xor
fisubrl
xchg
or
ja
dec
sbb
jmp
xchg
cmp
xor
rcrl
xchg
pop
inc
inc
mov
out
out
std
dec
cli
or
sbbl
shlb
mov
pop
ret
pop
pushf
bt
pushf
jmp
add
inc
gs
jne
jb
outsb
je
bound
arpl
mov
dec
cmc
btc
test
mov
jmp
adc
es
pop
pop
jg
jne
bound
pop
jbe
imul
xchg
arpl
aaa
cmp
icebp
dec
in
pop
mov
mov
mov
xchg
popa
aas
mov
push
xchg
and
pushf
cs
ss
inc
adc
test
push
push
jecxz
test
dec
dec
les
gs
push
mov
mov
or
mov
inc
mov
leave
fs
ret
insl
lds
leave
aaa
push
jbe
lahf
xchg
push
sbb
push
xchg
xchg
mov
adc
add
add
dec
fcmovnbe
loopne
lock
leave
neg
icebp
int3
loope
push
mov
jbe
sbb
jg
sub
sub
xorb
sub
in
cltd
jno
xchg
incb
fsubr
inc
movsl
pcmpgtw
adc
mov
shl
jae
mov
cmp
xor
inc
adc
cltd
xlat
in
ja
stos
pop
std
pop
scas
inc
addr16
jge
xchg
fs
ja
loopne
inc
scas
out
std
bound
or
mov
cmp
mov
xorl
mov
add
gs
je
inc
outsl
outsb
je
outsb
imul
add
insb
jae
jb
jo
inc
add
mov
add
bt
bt
sub
jmp
add
inc
imul
add
add
dec
call
clc
xchg
inc
push
mov
stc
pushf
cmp
pusha
sub
lea
jle
pushf
rep
lea
lea
pusha
pushf
mov
mov
pushf
lea
jmp
push
lea
je
clc
stc
cmp
pusha
pusha
call
call
add
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
je
popa
outsb
fs
gs
outsl
jne
je
adc
call
lods
cmp
bt
neg
clc
pushf
cmc
stc
ror
pusha
test
add
call
not
rcl
mov
dec
setne
shr
xor
bts
mov
stc
pushf
bt
or
pushl
jmp
lea
jge
pushf
mov
mov
jmp
stc
push
repnz
call
jmp
add
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
not
movb
bt
test
stc
sub
cmc
call
cmp
sub
in
mov
insl
pop
push
ror
iret
std
lret
lock
jmp
pop
mov
lret
cmc
mov
mov
pop
push
and
popa
mul
push
mov
ret
cs
push
mov
pop
mov
add
jne
cmpb
add
lret
rcl
mov
pusha
xor
not
not
jmp
mov
cmc
clc
push
test
call
add
insl
imul
jo
gs
jb
dec
gs
fs
mov
jmp
pushf
pushf
movb
lea
je
push
pusha
stc
add
clc
test
bt
cmp
movw
movl
lea
jb
test
cmp
pushf
cmc
cmp
pushl
pushf
lea
jae
add
shr
mov
sbb
inc
lea
bts
mov
bsf
dec
mov
jge
pusha
sub
jmp
mov
lea
call
call
add
dec
popa
jo
imul
imul
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
add
je
outsl
arpl
add
add
rcrb
fs
je
lea
bsr
xor
add
sbb
mov
clc
add
cmp
pushf
mov
btr
mov
stc
pushf
push
clc
cmp
lea
jae
pushf
pushf
pushf
lea
jbe
or
mov
ror
btr
add
bswap
mov
xor
add
shr
inc
movl
shl
movzbw
clc
inc
mov
pusha
bt
cmc
bt
cmp
mov
pushf
lea
jbe
btc
inc
shl
sub
lea
push
movl
mov
stc
mov
sbb
test
shr
sar
add
or
and
add
shr
xor
shld
btc
mov
btr
bt
add
call
btc
add
ror
rol
dec
ror
shr
not
neg
push
mov
neg
call
add
inc
jne
insb
imul
outsb
fs
add
xchg
ret
pushf
inc
lea
inc
pusha
dec
dec
inc
add
rol
neg
xchg
bsf
sar
lahf
daa
mov
shr
mov
cmc
push
call
mov
pushl
clc
mov
or
jmp
add
inc
gs
gs
imul
fs
jae
push
imul
arpl
add
add
jbe
inc
inc
add
mov
add
outsl
bound
inc
gs
gs
inc
je
insl
add
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
les
in
mov
mov
pusha
stc
cmc
pushf
test
pushf
movb
call
push
jmp
lea
call
push
pushl
movb
movb
lea
jmp
lea
je
test
push
test
mov
add
pusha
pusha
lea
jmp
add
push
arpl
gs
imul
je
js
bt
test
jmp
xchg
call
jmp
add
inc
push
outsb
jne
je
insl
add
add
gs
je
push
push
add
mov
bt
cmpb
movb
jmp
pushf
push
mov
mov
movl
pusha
movl
pushl
pushf
lea
jmp
lea
call
jmp
neg
mov
test
jmp
pushf
push
lea
jae
test
jmp
add
inc
gs
jb
jbe
je
push
jb
imul
imul
push
gs
arpl
push
arpl
inc
jae
push
call
int
shr
out
fnstenv
int
sub
clc
push
mov
imul
inc
mov
aad
pop
mov
sbb
mov
mov
mov
xor
js
fsubs
mov
scas
mov
imul
cmp
xchg
mov
and
repnz
sti
pop
xchg
es
loopne
flds
movsl
pop
push
roll
jns
cmp
loopne
cmp
aam
and
insl
ret
addb
lcall
pop
xlat
mov
rcrb
stos
adc
jne
mov
movhps
mov
jns
pop
pop
ja
push
notb
inc
push
jo
in
inc
dec
lods
push
imul
pop
mov
mov
add
out
movsl
sahf
cmp
xor
cmp
ja
sahf
mov
cwtl
jp
je
adc
in
add
fldenv
sub
mov
mov
push
adc
stos
test
lahf
sub
mov
mov
into
aas
mov
and
xor
sub
mov
gs
lcall
aam
xchg
shrb
mov
xchg
lahf
add
in
shll
sbb
repnz
pop
push
test
mov
add
dec
arpl
imul
jb
insb
insb
push
imul
add
cmpb
pushl
jmp
add
push
imul
push
arpl
inc
js
add
add
outsb
fs
gs
inc
imul
popa
jbe
dec
jne
push
gs
je
add
push
push
dec
outsl
je
data16
arpl
inc
add
pusha
pushl
cmpb
push
lea
jne
push
pusha
pushf
lea
jmp
add
dec
jo
outsb
push
jb
outsb
je
jb
add
or
sbb
mov
cmp
jmp
out
fucomi
neg
hlt
fsubr
pop
mov
adc
push
lahf
xchg
das
test
xor
cwtl
sub
dec
cli
pop
addr16
inc
iret
imul
sbb
je
cmp
fadds
mov
mov
fldenv
or
fisubl
jl
jmp
push
insl
inc
movlps
fsubrl
xlat
xlat
jns
jp
shrb
jbe
test
loopne
add
loope
xchg
mov
stos
add
pop
addr16
add
imul
outsl
jne
arpl
add
push
imul
outsl
insl
push
outsl
imul
in
pop
loopne
out
in
mov
jecxz
cmp
add
je
inc
push
add
add
je
jne
jae
jb
outsl
jae
dec
bt
test
call
push
ja
popa
dec
mov
lea
shr
lock
jmp
ret
test
mov
push
sbb
iret
stos
scas
pop
inc
mov
jmp
pop
imul
lret
jb
dec
mov
sbb
mov
or
leave
jbe
movsl
or
mov
into
and
dec
push
bound
sbb
lock
sub
gs
inc
jl
cmpsl
add
and
es
das
fiaddl
xchg
subb
push
mov
int3
outsb
iret
addr16
jne
mov
jo
dec
pusha
dec
scas
loope
mov
nop
mov
mov
or
fidivs
mov
lock
sbb
fwait
div
sbb
dec
arpl
shrb
mov
jnp
mov
in
xor
mov
in
sti
out
leave
ja
mov
into
push
xor
cmp
leave
ja
and
in
sahf
repz
sbb
insl
rcl
pop
lock
loope
jne
lret
cmc
incb
pushf
leave
rorl
xchg
test
leave
ja
andb
aam
in
and
test
dec
popa
test
mov
and
jmp
inc
adc
sti
stc
push
mov
push
xchg
xor
jo
mov
sbb
fbld
pusha
pushf
shl
fs
xchg
jne
lea
je
dec
popa
push
mov
push
xor
movsl
test
mov
lea
ljmp
dec
mov
mov
iret
push
shl
and
repnz
ds
sub
mov
cmpsl
or
push
scas
push
xchg
je
mov
jns
inc
dec
movsl
les
xor
push
imul
jecxz
fistl
fs
call
pusha
call
shl
not
call
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
jmp
fcoms
pop
lret
decl
subl
call
pusha
mov
lea
je
clc
pushf
cmc
sub
bt
cmc
clc
test
cmp
pushl
lea
ja
pusha
pushf
clc
imul
pusha
clc
push
cmc
add
push
pushf
mov
mov
lea
jmp
movzwl
cmp
movzbw
bt
mov
call
pusha
lea
ja
jmp
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
add
add
fs
popa
imul
insb
gs
outsb
imul
imul
lret
sub
xor
cmp
cs
aaa
add
and
xchg
inc
mov
lret
dec
je
jbe
xchg
pop
push
ret
pusha
pop
mov
fs
repz
pop
popf
or
shrb
jg
jo
out
scas
and
or
test
lret
mov
sub
fidivl
inc
fst
hlt
imul
pop
out
ds
mov
enter
ja
outsb
cwtl
enter
ja
cld
or
cli
xchg
pop
icebp
jmp
int
bound
ja
cmp
jmp
mov
sbb
mov
add
mov
insl
push
jo
movl
pop
test
inc
pop
loope
push
lret
adc
push
lret
adc
dec
mov
fstpt
adc
mov
dec
cmp
lret
jae
stos
cmp
sub
mov
iret
cmp
sarb
out
mov
aad
ja
dec
push
hlt
mov
leave
arpl
jmp
mov
cwtl
test
test
jb
aam
cmp
cwtl
pop
mov
stc
jle
stc
push
sahf
mov
mov
fwait
subb
int3
cmpsl
fisttpl
mov
fistpl
jne
loope
pop
lds
mov
rcll
cmp
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
stos
mov
test
inc
fmulp
fnstsw
sahf
cmp
mov
hlt
stc
sub
scas
jbe
jmp
dec
cmp
xor
mov
out
mov
ljmp
sub
scas
dec
sub
inc
sub
sarl
test
fldt
ljmp
sub
out
mov
mov
jnp
ss
movl
sub
dec
mov
add
fs
clc
dec
test
sub
insl
lods
stos
mov
ja
jo
aaa
test
sbbl
mov
sub
stc
in
xor
adc
adc
dec
dec
or
loopne
xchg
and
dec
pusha
xorb
mov
mov
mov
loopne
lahf
int
mov
or
cmp
xlat
mov
rorl
fnstsw
xchg
pop
int
lret
mov
pop
loopne
int
fistpll
aam
rol
fisttpll
add
xchg
ret
shll
in
pop
adc
push
jg
jbe
in
inc
clc
sub
jns
ret
roll
inc
sbb
mov
test
mov
cmpsb
mov
jns
lcall
sub
leave
aaa
mov
adc
mov
cli
mov
ret
fnstcw
test
aad
inc
shl
fiadds
xchg
nop
mov
stc
add
xor
add
add
js
jp
aas
cmp
int
cmp
add
add
mov
enter
jb
shll
fiaddl
mov
inc
mov
outsb
lds
mov
outsb
jl
stc
sub
pop
shll
es
call
js
or
insb
cld
add
and
xchg
ret
jbe
inc
test
pop
movsl
mov
mov
xchg
flds
enter
movsl
fcoms
lods
and
ret
pop
push
mov
dec
mov
shll
imul
add
insl
iret
rclb
lret
scas
cmp
out
out
aad
ds
or
mov
jno
jle
or
adc
xor
les
int
pop
sarl
ds
shr
adc
das
test
sbb
leave
push
cmpsl
cmp
mov
repnz
mov
and
mov
rorl
popa
aam
clc
fsts
rorb
scas
mov
enter
pop
dec
into
test
mov
aam
push
jle
jg
shrl
and
stc
imul
mov
dec
stc
sbbl
push
cld
xchg
fnstcw
ret
dec
enter
xor
leave
out
paddw
mov
xchg
test
or
enter
scas
jge
lds
or
jae
jecxz
xor
dec
inc
mov
enter
int3
into
jmp
scas
xor
jl
iret
js
or
outsl
push
vhaddpd
fadds
jmp
shrb
xor
or
adc
mov
adc
xor
mov
push
fscale
test
jg
stc
cld
out
enter
or
sarl
push
mov
sti
xor
ds
lret
sti
jl
and
fistpll
cmp
int3
out
aas
sbb
stc
mov
dec
jae
stc
int3
xchg
popf
daa
cwtl
adc
int3
sbb
jno
xchg
test
stc
cmp
jl
mov
lcall
mov
sbb
test
data16
mov
sbb
mov
fistpll
fucomip
filds
pop
dec
xchg
fiadds
push
push
pop
nop
stc
and
jl
nop
cld
sahf
pushw
jl
loopne
stc
push
and
cli
sbb
sbb
std
orl
inc
jmp
scas
or
add
cmpsl
sbb
sbb
sbb
sbb
sbb
sbb
xchg
xchg
in
pusha
stc
sti
add
cld
icebp
ret
xchg
xor
je
xchg
fdivrs
jne
popf
mov
es
cmp
incb
dec
lret
roll
xchg
stc
push
out
push
imul
jp
movsb
lock
pop
sahf
cld
dec
push
enter
sbb
arpl
mov
insb
mov
das
stc
sbb
jl
and
fildll
stc
sub
jl
frstor
outsl
xor
or
repnz
jbe
movsb
hlt
out
sti
mov
in
into
loope
xor
pop
mov
fsubl
aas
jge
test
cmp
jge
aad
dec
std
aam
push
aaa
lret
cmc
add
sub
inc
xor
mov
loopne
and
inc
sbb
bound
cld
sub
cmp
sbb
iret
loopne
mov
jg
sbb
mov
enter
iret
sbb
test
jp
xlat
clc
test
or
cli
scas
mov
sbb
lret
enter
mov
mov
int3
stos
scas
lcall
xchg
shr
push
pop
test
mov
pop
xchg
cmc
xchg
mov
scas
xchg
and
or
sbb
rcr
ljmp
shlb
out
pop
xor
idivl
and
add
mov
fisubs
jb
jo
mov
lds
mov
inc
jo
cmp
into
out
inc
mov
jo
jb
pop
jae
pushf
fldcw
mov
andb
mov
cmpsl
int
mov
loope
cmp
jg
sub
pop
out
enter
sbb
outsb
clc
in
aad
rol
movsb
stc
mov
ret
xlat
fwait
cmc
mov
dec
xor
mov
nop
lret
dec
cli
scas
mov
mov
jp
jo
mov
iret
mov
fsubl
int3
lret
xchg
cs
and
divl
mov
xchg
aaa
sti
sub
leave
jp
inc
stos
sub
mov
push
lock
jo
nop
sub
xor
and
lds
les
pop
adc
or
jmp
lods
subl
sub
clc
mov
or
mov
nop
imul
test
mov
inc
mov
pop
pop
push
inc
sarl
adc
loopne
mov
pop
sbb
mov
inc
mov
stos
mov
aam
mov
shr
bound
fadd
pop
push
jp
mov
popa
into
push
fs
xchg
mov
push
jb
adc
out
mov
xor
or
ret
inc
mov
jp
or
and
addr16
fcomip
pop
notb
lahf
sbb
loopne
pop
test
xchg
xchg
shl
ds
mov
mov
je
jns
jmp
rorl
xchg
dec
jno
aad
ret
loope
sbb
lret
mov
clc
movsb
aas
pop
mov
pushf
int3
xchg
loopne
cmpsl
les
movl
mov
stos
leave
or
mov
sbb
lods
xchg
in
jp
dec
fmul
pop
lret
fstpt
inc
cmpsl
leave
cmp
adc
xor
mov
repnz
dec
mov
aaa
xor
mov
lret
mov
mov
pop
jns
shrl
enter
cmpsl
mov
leave
jns
sub
sub
loope
mov
fmuls
jne
and
mov
adc
jp
jb
andl
aaa
cmp
xlat
les
iret
dec
inc
jo
xor
outsl
xor
mov
cwtl
pop
jl
test
mov
cltd
or
repnz
mov
rorl
test
leave
int3
gs
pop
pusha
xchg
adc
mov
mov
enter
mov
mov
mov
sub
cmp
stc
jp
inc
in
in
enter
les
imul
inc
aaa
stos
jno
rol
insb
mov
sub
int
aam
and
fstpt
test
or
movsb
cmc
and
or
or
lret
iret
insb
lahf
xlat
pop
xlat
enter
jmp
dec
mov
enter
xor
icebp
test
pop
lods
stc
add
clc
sbb
sbb
mov
mov
imul
xchg
enter
mov
jle
ss
inc
jnp
les
ret
in
jl
inc
fbld
inc
movsb
inc
mov
push
mov
test
add
push
xchg
rorl
dec
dec
pop
int
les
cld
mov
pop
shll
cli
xor
cwtl
lahf
aad
cli
addr16
or
stc
inc
push
rcll
cld
int
cli
stos
lret
cli
mov
iret
lahf
cli
les
or
or
lea
mov
lods
cli
bound
enter
adc
xor
push
inc
enter
out
pop
mov
stos
ret
or
xchg
dec
mov
mov
adc
dec
jbe
cltd
popa
sbb
dec
sahf
loopne
ret
sbb
ffreep
mov
pop
fwait
in
jmp
adc
lret
mov
fsubl
mov
mov
inc
inc
shrb
les
pop
dec
test
cmp
inc
push
enter
pop
lods
sarb
enter
into
cmpsb
fcmovnb
mov
das
cmp
push
divb
ret
xor
jl
or
movsl
xchg
dec
sub
pop
mov
int3
sbb
adcl
sub
fidivrl
ret
pop
dec
les
lret
ret
xor
daa
adc
jecxz
out
fbstp
lods
repz
inc
xchg
mov
jl
dec
xor
mov
aad
push
mov
mov
gs
dec
dec
fwait
movsb
pusha
push
fsubrl
rol
mov
dec
inc
test
inc
movsb
aam
dec
stc
cld
jns
stc
mov
xchg
call
cld
adc
inc
mov
sub
cld
or
stc
les
xchg
stc
mov
mov
mov
jp
rcll
mov
sub
rol
int
cwtl
leave
xor
shl
test
push
pop
movsl
push
mov
sub
xchg
pop
cmp
pusha
lahf
xchg
pop
jp
lds
mov
add
fdivrs
nop
iret
mov
cmc
cmp
or
clc
enter
mov
stc
cmp
push
test
inc
sbb
pop
fstps
cltd
leave
pop
push
lcall
adc
stc
nop
adc
jp
sar
in
xlat
xor
stc
scas
jbe
lret
mov
repnz
mov
leave
cmp
rolb
iret
mov
push
ret
mov
jmp
cli
sbb
inc
lcall
ja
push
xor
mov
mov
int3
mov
lcall
lds
inc
xchg
mov
lcall
push
stos
inc
lcall
ret
push
scas
inc
lcall
les
inc
or
dec
add
movsl
leave
shrl
or
inc
lcall
ret
inc
int3
fisttpl
fimuls
iret
push
fists
rorb
ror
shrb
inc
int3
rorl
dec
or
ret
push
adc
push
mov
adc
lahf
pop
mov
loopne
pop
sbb
mov
cli
inc
mov
jns
mov
mov
inc
jns
adc
xchg
das
adc
xchg
push
mov
les
lds
movb
nop
mov
inc
inc
roll
or
jb
rcll
mov
pusha
push
pop
xchg
mov
inc
push
movb
inc
add
fidivs
jl
inc
mov
sub
jl
cld
test
mov
jl
inc
push
pop
cmp
test
xor
push
cmpl
jl
cmp
stc
gs
stc
mov
jp
ret
pop
jl
add
dec
cmp
cli
ret
xchg
sub
pop
jl
add
add
inc
cmpl
cli
cwtl
stc
or
jl
enter
inc
in
inc
dec
fisttpl
stc
jl
lds
jl
lds
mov
inc
fistl
inc
vpaddq
mov
iret
jnp
cli
push
dec
cwtl
or
sbbl
jl
inc
enter
add
dec
jl
ret
dec
jp
mov
dec
fcompl
inc
enter
test
adc
dec
fldt
cmpl
inc
cltd
inc
fildl
stc
xor
cld
pop
add
jne
test
leave
ror
dec
jl
roll
addl
push
cli
lea
sbb
mov
test
add
push
xor
scas
into
rorb
int
pcmpgtb
sbb
loope
push
or
push
lock
jl
rcr
sahf
add
push
into
jl
dec
ret
add
jl
mov
fcmovne
inc
jp
cmpl
rorl
jl
push
inc
addb
into
fmuls
orb
js
sub
fdivrs
jp
fstpt
dec
cmpsb
add
jl
or
movl
fnstcw
test
mov
adc
or
or
inc
add
adc
or
mov
jl
inc
mov
test
push
xchg
dec
fldt
lds
fcomp
stc
add
jl
lret
or
test
jl
pop
lds
push
mov
sub
test
push
les
adc
pop
faddp
sbb
sbb
movsb
jl
int
pusha
test
test
fldt
xchg
sub
add
xchg
adc
xchg
sbb
ret
ret
jle
lret
cltd
push
lret
mov
push
test
lods
rclb
push
jp
adcb
jb
cld
sar
inc
or
xchg
dec
mov
or
pop
fsts
lds
dec
xlat
xchg
fstpt
add
jl
adc
adc
cld
rcrl
loopne
in
cmp
stc
xor
adc
ret
fs
leave
stc
lahf
daa
out
cmpsl
orl
movl
leave
stc
mov
and
and
cltd
pop
fcmovne
inc
sbb
sahf
inc
repz
push
pop
roll
insl
jl
test
cmpsl
mov
sub
mov
fiadds
inc
into
jl
sbb
int3
pop
jp
jl
sbb
test
cld
pushf
jecxz
faddp
push
xchg
sbb
jb
or
jp
pop
sub
jl
add
cltd
mov
pop
sbb
add
sbb
subl
subb
les
jns
pushf
push
leave
jl
sub
lea
test
sbb
fiaddl
test
jl
lds
jl
lds
enter
mov
cli
ret
jl
sub
dec
call
dec
test
test
sbb
pusha
inc
movd
test
hlt
and
mov
into
or
movsl
sub
jl
or
test
lea
fisttpl
cmpsb
jo
test
jl
push
dec
arpl
pop
inc
jl
and
jecxz
out
jns
jl
jl
in
dec
jl
add
push
jl
mov
ret
dec
and
jp
lcall
fistpl
add
sbb
inc
and
fs
or
subl
jle
push
jl
jp
das
fucomi
jno
cli
scas
push
jl
xor
inc
or
lock
ret
mov
dec
dec
push
mov
ret
xchg
cmp
ret
add
dec
test
vpmullw
inc
mov
lea
cld
adc
or
test
mov
fisubrl
rol
aaa
cld
out
ja
mov
ret
test
add
sahf
dec
pop
cltd
imul
cli
ret
add
setp
sub
jne
lds
fisubrs
mov
sub
in
inc
cli
jmp
sub
jmp
test
shrb
mov
jl
add
stos
inc
imul
ja
adc
aaa
popa
cli
xor
mul
inc
mov
xchg
add
xchg
fnstsw
fildl
psubb
mov
nop
or
jbe
inc
test
or
jl
inc
test
cmc
fildl
jo
jbe
lds
dec
inc
daa
dec
lds
add
xchg
rcrl
push
push
add
fcmovnu
lea
divb
or
add
addr16
int
add
addb
cld
xor
inc
cmp
pop
shl
mov
shll
push
jl
add
add
pop
xchg
push
cli
dec
scas
jl
xor
jns
icebp
fdivs
jl
add
shll
fs
add
xlat
mov
outsl
mov
dec
jmp
mov
inc
cmpsl
les
add
lea
dec
add
fucom
mov
enter
or
inc
pop
jl
andl
or
mov
fstpt
gs
jl
inc
test
mov
pop
jle
cwtl
push
jl
ds
or
xchg
addr16
xor
push
or
test
sahf
roll
mov
push
inc
inc
dec
pop
mov
sbb
jno
adc
cmp
stc
sti
inc
add
push
inc
out
cli
pushf
xchg
ja
mov
or
mov
fnstcw
add
jl
xchg
cld
lret
inc
mov
or
mov
dec
xor
pushf
stc
push
mov
mov
addr16
cli
addl
jl
orl
pushf
xchg
test
pop
addr16
jle
fs
test
pushf
inc
xchg
inc
into
jl
cltd
adc
inc
loopne
ja
add
lds
inc
add
dec
xchg
push
push
jl
inc
xchg
jl
or
stc
in
pop
dec
lds
dec
inc
sbbl
fcomps
add
mov
cwtl
dec
jl
nop
dec
test
adcb
add
lods
inc
adc
jl
dec
or
popa
jl
les
roll
int
inc
inc
jl
inc
pushf
inc
mov
sar
roll
or
pushf
inc
pop
int3
inc
lds
movb
ret
bound
ret
adc
xchg
mov
mov
mov
pop
test
adcl
cmpsl
inc
addr16
shlb
jl
lds
movsl
rolb
mov
mov
push
test
lea
js
jl
or
sarl
arpl
jl
dec
ret
sub
inc
cltd
push
pushf
pextrw
enter
inc
cld
mov
xchg
sbb
jl
or
das
jl
push
fiaddl
mov
mov
or
enter
int3
pushf
dec
stc
cmpl
mov
outsb
jl
dec
mov
lea
jl
das
mov
dec
add
ret
test
or
xor
dec
mov
mov
mov
hlt
movsl
nop
lret
clc
sbb
mov
movsl
push
cmp
enter
iret
mov
fmul
mov
push
cld
ret
shr
mov
add
add
cmp
in
cmpb
inc
loopne
vpsubw
movsl
rol
cmp
jl
pushf
jns
dec
add
cmpsb
mov
fsubrp
pop
sub
xchg
pop
xchg
sub
and
pop
inc
lods
ds
movsl
push
inc
into
cmp
mov
mov
stc
aam
enter
dec
stc
scas
fistpll
rcll
cmp
inc
in
cli
popa
pop
mov
cld
add
xchg
roll
cmp
xlat
mov
mov
jp
jl
movsl
pop
sbb
ret
leave
dec
sub
xchg
inc
jno
dec
xor
adc
mov
enter
mov
sar
fsubrs
xor
push
mov
mov
mov
ljmp
iret
inc
rorb
cmpsl
pop
xchg
ror
pop
jns
or
pop
xchg
sarb
andl
fdivrl
mov
addr16
lret
int
pushf
inc
enter
mov
lret
fcoml
or
rcrb
mov
test
jg
and
or
lods
mov
cmp
and
fnstsw
leave
mov
jg
nop
pop
shll
inc
pop
xchg
lds
int
leave
jns
mov
push
cmpxchg
loopne
lods
inc
fadd
hlt
scas
inc
movl
leave
cmp
or
dec
and
mov
push
or
setne
fidivrs
xor
cmp
das
mov
inc
stc
cltd
dec
dec
test
mov
lret
roll
sarl
sarl
pusha
cli
rolb
cmp
pop
and
mov
sub
stc
sub
cmp
aad
rcrl
sar
dec
fadd
stc
outsb
push
mov
pushf
sbb
stc
ret
dec
add
ds
cmpsl
shll
setbe
xchg
ret
sub
mov
mov
mov
pop
call
mov
movb
pop
dec
ror
leave
cmp
dec
subl
cmp
mov
inc
cld
lret
push
stc
lcall
sub
xlat
xorl
sar
faddl
mov
rorl
dec
test
nop
push
pop
sub
and
fstps
inc
dec
ret
and
cld
test
int3
add
lods
fcompl
jp
leave
mov
loopne
inc
push
xor
adc
jb
fcoml
or
jbe
rolb
movsb
xlat
cmp
mov
xchg
adc
mov
in
into
aam
test
fildl
test
loopne
and
mov
mov
inc
inc
ds
cmpsl
sarb
cli
movsl
ss
cmpsl
xchg
scas
ficoml
vaddsubpd
xor
mov
out
addr16
loopne
mov
lret
mov
and
in
rcrl
enter
inc
mov
dec
fdivr
scas
adc
mov
sub
lahf
sbb
sub
test
lret
mov
mov
lcall
leave
lcall
push
rcr
stos
test
int
stc
sbbl
ret
leave
nop
ds
pushf
sub
movsl
shll
cmp
mov
lret
stos
xchg
test
lahf
scas
lret
pop
pop
movsb
scas
lds
rcrb
inc
inc
iret
inc
ret
adc
rcrb
adc
imul
lret
mov
mov
or
dec
pop
lea
push
mov
cmp
pop
cmp
cld
and
enter
bswap
and
cmp
mov
inc
ss
movsb
inc
ret
stos
cmpb
mov
mov
jl
sub
or
inc
mov
mov
or
pushf
movsl
lret
cld
test
repnz
lods
xor
cmpsl
add
scas
mov
and
das
and
mov
mov
stos
stos
mov
rcrl
jp
stc
dec
scas
mov
mov
ret
mov
mov
cld
pop
pushf
cli
les
inc
push
dec
rolb
xlat
xchg
ret
mov
xor
sub
cmp
les
and
pop
sub
mov
lret
or
aad
xchg
fchs
push
add
test
sahf
or
jns
inc
mov
sub
ret
inc
test
mov
mov
pop
cmp
cmpsb
lcall
inc
fwait
pushf
repz
pop
jge
ret
sbb
mov
dec
inc
add
mov
cmc
sar
dec
enter
inc
or
shrb
lcall
test
mov
cmp
fsts
xchg
inc
mov
pop
lds
cmp
bound
and
push
data16
cltd
cmpsl
out
enter
add
mov
inc
inc
and
dec
ficompl
pop
cmp
adc
xchg
nop
stos
pop
pushf
sbb
ss
mov
inc
shll
movsl
mov
pop
push
mov
orl
in
and
cmp
cmovbe
inc
cld
fwait
sub
mov
fildl
fcompl
jl
fists
cmpl
fmull
dec
and
cmp
xlat
scas
movsb
cmp
test
mov
or
push
movsl
pop
mov
and
dec
sarl
xor
lret
pop
rcll
inc
mov
lea
fst
mov
mov
jl
pop
mov
push
loopne
inc
rol
mov
pop
mov
mov
rol
mov
cmp
add
pop
pop
pushf
jl
push
and
pop
test
stc
pop
enter
inc
dec
addl
rol
sub
lret
cmp
sbb
cmp
xchg
or
mov
mov
add
xlat
test
insl
dec
ss
ficomps
test
adc
add
xchg
int3
test
ret
cmp
mov
iret
add
push
and
push
ss
fst
lods
test
cmp
xchg
dec
mov
fcompl
sub
mov
jp
mov
into
pop
dec
iret
adc
push
aad
daa
pushf
push
orl
and
pushf
test
sub
sub
push
push
pop
shll
cmpsl
pushf
push
inc
push
iret
push
lds
shrb
inc
cwtl
loopne
cld
roll
punpckhdq
mov
pop
inc
mov
pop
sub
inc
ret
pop
cmpl
xchg
dec
es
movl
scas
mov
and
ror
push
iret
push
xchg
enter
inc
mov
sub
aad
mov
cmp
and
fildll
loop,pt
sarb
inc
lea
cmpsb
imul
add
das
inc
ret
xchg
mov
lahf
mov
and
xlat
sub
pushfw
out
ret
movsl
jp
rcll
iret
cmp
movb
mov
movsl
xchg
lret
push
cwtl
cli
sub
cli
mov
pusha
hlt
sarl
in
into
int
inc
adc
inc
leave
lods
mov
xchg
and
test
cmp
pop
les
adcb
movsb
mov
pop
sub
lret
sbb
js
mov
pop
ds
jb
es
jp
into
es
movsb
jp
stos
cmp
inc
test
cmpl
cmpsb
inc
enter
push
sarl
dec
mov
ret
cmpsb
scas
dec
scas
push
clc
test
gs
pop
lret
stc
fstl
mov
mov
scas
jp
sub
mov
sub
push
rcll
andl
mov
cmpsb
shrl
or
pop
fisttpll
les
jns
shlb
mov
rorl
movb
xchg
out
mov
ret
mov
enter
iret
stos
sbb
ret
ss
push
sub
sub
pop
and
or
push
lret
mov
cli
sub
cmp
ret
fcoml
push
movsl
dec
and
test
xor
inc
mov
adc
rcl
or
pop
pop
dec
mov
mov
mov
and
pop
lods
pop
pop
sbb
stos
ret
scas
lret
push
adc
or
adc
jne
inc
scas
iret
jl
movl
xlat
enter
pushf
fwait
iret
mov
mov
pop
lods
cli
cmp
pushf
fmull
fimull
pop
pop
xor
dec
stos
popl
cld
orl
int
loopne
fsubrl
inc
and
into
fcoml
nop
mov
and
or
add
and
inc
movsb
pushf
sub
test
sub
rorl
dec
jl
mov
jl
mov
xchg
daa
nop
xor
sub
iret
loopne
les
stc
mov
pushf
ret
sub
mov
jg
rol
or
xor
xchg
in
rol
mov
aam
pop
xchg
fisubrs
sub
pop
stc
mov
test
xchg
mov
stos
jb
and
aam
ss
and
dec
or
mov
bound
cmp
stc
inc
mov
xor
das
test
cmpsb
jle
pop
add
dec
test
xlat
push
mov
pushf
dec
sarl
sbb
xorl
mov
or
push
subl
xor
mov
enter
insb
mov
into
les
stc
addb
xor
lods
dec
jnp
cmpsb
loop
adc
add
jp
mov
enter
nop
fsubrs
test
xchg
push
ret
mov
mov
pop
call
das
jnp
and
mov
cltd
lods
mov
jns
jge
int3
cmpsl
xor
mov
leave
pop
shl
lret
aas
enter
jns
push
mov
out
pushf
dec
pop
cwtl
mov
push
push
or
inc
shlb
dec
mov
stc
mov
or
xor
insb
scas
pushf
xchg
dec
int3
das
in
test
sub
xchg
mov
int
lds
xlat
test
in
push
psubw
shrl
or
cwtl
ffree
lahf
ret
aad
les
pop
cmpsl
shll
push
movsl
and
mov
mov
xchg
jns
cmp
mov
shl
and
inc
lea
xor
pop
ret
mov
adc
inc
cmp
pushf
cs
and
aam
leave
ret
mov
test
dec
pop
and
mov
ljmp
dec
inc
fnsave
inc
xchg
lret
ss
int3
mov
rol
lods
andb
fiaddl
or
xor
and
or
lret
stc
push
pop
and
dec
dec
iret
inc
stos
pusha
lea
lods
pushf
sbbl
push
push
int
movsl
mov
lret
sub
mov
or
sbb
jnp,pn
xchg
cmpsb
push
roll
inc
addr16
xchg
mov
pop
fldt
out
sub
enter
mov
mov
enter
lds
sub
ffreep
adc
es
ret
imul
jne
daa
lret
lds
iret
sub
das
jns
add
dec
fcmovu
pop
cmpsl
popf
out
or
mov
push
xor
push
dec
iret
cli
lea
lds
push
insb
xlat
stos
adc
sub
cld
sub
pop
dec
xlat
stos
leave
xor
cs
or
and
jl
xchg
dec
dec
add
hlt
adcl
pop
sub
stc
mov
sarl
lods
mov
pop
jp
insb
scas
shll
addl
movsl
je
xchg
sub
fmull
sub
add
or
cmc
ja
cmp
mov
aaa
nop
jns
cmp
stos
lods
scas
sub
mov
and
fisubrs
push
dec
dec
add
sub
push
lds
in
stos
fidivrl
into
push
lods
movb
inc
enter
mov
loopne
stc
jnp
pop
dec
mov
dec
mov
add
sub
xchg
pop
adc
jle
movsl
test
shll
or
xchg
imul
xor
inc
push
test
inc
jp
loopne
and
ret
push
push
pop
dec
das
dec
pop
cmp
rcr
lret
movl
or
jge
iret
xor
clc
int3
dec
cli
rorl
fnstcw
test
rorl
or
int3
inc
test
inc
dec
shlb
in
test
lcall
inc
movsb
out
xor
lds
mov
lds
int3
faddl
fiaddl
cli
lcall
cmpsb
call
and
push
rol
mov
push
test
cmpsl
rcrl
dec
xchg
cmp
inc
mov
daa
mov
pop
ds
jl
fisttps
les
aam
aad
imul
inc
jge
and
das
scas
sbbl
scas
mov
movsl
scas
data16
mov
inc
outsb
pop
dec
cmp
cwtl
ret
fldt
out
stc
aam
mov
ljmp
int3
cwtl
scas
xchg
es
iret
mov
push
sub
jns
add
xor
xchg
mov
test
mov
cmpsl
and
dec
stc
subl
les
test
sbb
les
cmp
dec
aaa
popa
scas
xchg
sbb
xchg
stc
mov
mov
js
xchg
mov
fs
ret
test
xchg
iret
rorl
xor
sarl
xchg
ret
mov
xlat
jl
mov
and
jecxz
mov
arpl
pop
les
inc
mov
or
jecxz
insb
loopne
test
nop
dec
dec
fisubs
mov
movsb
lods
inc
stos
subl
jp
into
dec
ret
psubsb
shlb
inc
lret
dec
insb
inc
test
stos
in
idivl
andl
lods
lea
add
jne
mov
rcll
jo
subl
fsts
clc
cld
sbb
fs
aad
mov
xchg
xor
cmpsb
cli
test
xchg
cmp
stos
push
xor
cs
sub
pop
test
inc
push
sub
fstpt
add
call
les
cmpsl
inc
jge
or
lahf
popa
scas
fstp
mov
mov
outsl
sarb
mov
or
cmc
into
mov
cmp
dec
pop
xchg
inc
insl
and
shl
sar
mov
imul
mov
outsl
cmpsl
add
xchg
rcrl
loopne
enter
jmp
cmpsl
cld
bound
rolb
sub
sub
dec
scas
push
sub
ss
jl
cs
movsb
or
sub
add
mov
stos
int
mov
xorl
xchg
and
je
jno
imul
aas
xchg
lods
pop
rol
cmp
xorl
mov
lods
in
leave
int3
mov
cmp
cmp
jbe
push
dec
cmpsb
sbb
push
cmp
fstps
push
fs
lret
cli
jle
mov
xor
shlb
fdivr
jl
push
leave
pop
aad
aad
dec
inc
iret
ja
lcall
add
dec
ret
push
cmp
movsl
iret
loopne
ja
mov
push
test
push
and
push
xchg
aam
and
orl
xor
sub
sub
stc
shlb
mov
mov
nop
push
push
pop
sarl
and
jp
mov
lods
scas
test
add
clc
roll
mov
lods
leave
sbb
test
repnz
mov
movsl
cmp
scas
xor
mov
mov
cld
xor
lret
es
inc
mov
inc
pop
inc
mov
push
xor
add
sub
push
and
inc
into
or
jo
mov
in
fldt
movb
bts
push
cli
arpl
and
mov
cmp
fisubl
lea
int3
jl
movsb
jp
lret
fldt
cmp
movsb
mov
orl
gs
dec
ret
sub
fstp
cli
cmp
cmpsb
iret
xor
ja
shrl
xlat
mov
stc
in
pop
pusha
scas
sub
dec
inc
aas
shlb
pop
sarb
inc
fcoml
inc
mov
add
rclb
lds
mov
inc
dec
inc
dec
aad
pushf
fmull
out
rcrl
lret
cmp
mov
sub
fisubrs
dec
pushf
cmpsl
cmp
mov
cmpsb
movsl
lret
aas
mov
mov
orl
js
dec
inc
popf
jmp
dec
cltd
pop
push
inc
xchg
stc
fs
push
test
jns
test
inc
shlb
ss
lahf
adc
add
jns
leave
cmc
dec
iret
test
jns
fldt
ret
lds
bound
aam
add
sarl
jmp
xchg
cmpb
cmpb
xorb
jae
cmp
stc
movsb
shrb
push
fdivr
jns
subl
cmp
or
lahf
cmp
insl
cli
addb
dec
mov
addl
jns
stc
jns
xor
xor
pop
jnp
scas
or
addl
jns
push
fisubs
xchg
jns
sbb
mov
scas
xchg
andl
nop
xchg
dec
mov
pop
xchg
add
orl
push
adc
jg
pop
jl
jge
test
pop
testl
sub
out
cmpsl
shlb
cld
in
mov
add
push
xchg
ret
test
cli
pop
cli
leave
ret
into
movsb
push
mov
xchg
dec
adc
inc
dec
add
cmp
jecxz
cmpsl
and
add
push
dec
xchg
dec
cltd
jns
dec
sub
adc
test
jl
cli
or
jae
enter
fs
jns
or
rcrb
enter
test
or
jns
cmp
cmpsl
lea
jns
fldl
cmp
ret
jns
inc
das
aad
mov
xor
int3
jno
into
in
gs
or
lods
jns
mov
xchg
mov
jns
imul
fcomp
cmp
mov
sub
cmpsb
pop
lea
movsl
testl
sub
andb
fstpl
xchg
dec
jns
cs
sub
and
mov
jns
cmpsl
daa
xchg
cwtl
push
lods
cli
add
xchg
fidivrs
ret
cli
xchg
cltd
jns
cld
fs
ret
inc
mov
xor
sbb
add
ret
mov
pop
bound
or
movl
stc
loop
xchg
mov
xchg
mov
xlat
call
xor
jns
adc
or
cld
dec
ret
push
mov
jo
cld
jns
cmp
inc
out
jno
dec
enter
push
xor
cli
add
dec
mov
dec
gs
push
push
stc
mov
cli
bound
pop
xchg
rcrb
ljmp
mov
add
fcompl
and
leave
mov
add
lods
mov
ret
jb
mov
inc
jnp
pop
inc
dec
xchg
cld
add
aad
sub
xchg
loope
fiadds
xor
xchg
or
inc
cltd
jns
xlat
inc
addb
mov
dec
loopne
push
fdivr
fmull
and
cmp
inc
loope
aad
mov
and
and
jmp
roll
mov
or
dec
xor
mov
sub
inc
mov
lea
cltd
jns
sub
int
inc
lds
push
cli
xchg
ret
les
inc
lds
fcompl
pop
pop
inc
ret
jns
inc
add
add
adc
leave
insl
inc
cmp
test
dec
lret
nop
imul
jge
sarb
mov
jns
cli
and
nop
mov
pop
mov
js
push
dec
sub
stc
jne
pop
aad
mov
inc
stc
pop
sbb
enter
mov
and
xchg
jbe
jl
jns
cli
sub
mov
aam
mov
shll
dec
leave
mov
jns
sbb
dec
pop
pop
lea
out
mov
into
popa
xchg
fcompl
ss
cli
inc
push
sbb
pop
pop
mov
add
insl
or
adc
mov
or
jno
rorl
jecxz
orl
inc
adc
fsts
inc
mov
mov
in
pop
rcll
dec
push
xlat
and
mov
das
cmp
insl
push
and
cmpsl
ret
ficomps
sub
and
outsb
jns
sarl
test
jae
les
dec
imul
and
xchg
int
jp
dec
adc
dec
sub
xchg
xor
and
add
mov
add
fnstcw
lcall
mov
pop
mov
xlat
push
ror
fsts
push
fmul
enter
cmp
pop
mov
fstp
pop
stos
insb
mov
mov
dec
test
jnp
mov
jle
orl
xchg
cmp
xchg
fidivl
ret
xor
lds
add
inc
mov
push
xor
enter
mov
lock
mov
add
fildl
push
pop
aad
movsb
mov
xchg
jbe
stc
aad
cmp
cwtl
ficoml
pop
fstpl
add
rolb
pop
rcll
test
mov
sbb
push
rorl
xor
fimuls
add
mov
fcomps
push
cli
mov
ret
int3
jns
jp
mov
mov
fs
rolb
outsb
int3
stc
dec
imul
das
movsb
pop
or
mov
cld
pop
cmpsl
cmpsb
das
inc
add
rcrl
ficoml
mov
xor
push
mov
xchg
mov
sub
fsubrs
les
lcall
dec
gs
dec
in
inc
adc
xor
outsb
inc
popa
mov
mov
adc
sub
mov
pop
push
test
popf
push
xchg
jae
inc
pop
pop
mov
xchg
sbb
fimuls
sbb
int
mov
mov
inc
mov
mov
negb
lds
or
mov
sbb
lret
adc
sbb
and
pusha
leave
inc
push
int3
rcll
pop
jns
sarb
aam
push
les
adc
push
adc
mov
repz
stc
sbb
fcoml
test
cmp
mov
divl
sub
paddw
mov
lods
int
cmp
adcl
out
push
lock
rcll
scas
outsl
stc
xor
mov
xor
cli
cli
imul
scas
out
inc
cmpsl
iret
or
jl
repz
dec
es
adc
sub
fcmovnbe
mov
gs
in
fcom
in
adc
lds
cmp
aad
adc
cli
xchg
mov
int3
leave
xchg
xor
out
pop
lea
push
ret
jo
sub
loopne
fs
in
dec
arpl
fcomps
lds
stc
lods
int3
mov
mov
mov
mov
mov
test
scas
lcall
cmpsl
push
fstp
lcall
fsubrs
inc
lret
int3
lcall
shrb
inc
ret
ret
lcall
fnstcw
mov
mov
mov
scas
dec
movsb
les
inc
loopne
rcl
lcall
ret
inc
cli
ret
mov
lcall
cmpsb
push
rcl
lcall
push
mov
int3
push
or
lcall
lret
inc
push
int3
pop
xlat
lcall
fsubrs
inc
push
int3
adc
push
aaa
pop
xchg
mov
daa
popf
sbb
jno
cmpsb
aaa
push
stos
xchg
fistpll
and
loopne
popf
push
fstpl
mov
cmp
mov
sbb
sub
lcall
punpckhbw
sbb
sub
push
dec
xchg
lods
pop
iret
mov
or
pusha
inc
add
sbb
xchg
push
sbbl
nop
push
jp
clc
fcmovu
iret
out
mov
int
or
lea
shrb
inc
nop
sbb
lods
sbb
mov
lock
enter
loop
cltd
mov
sub
in
pop
jecxz
loope
lods
sbb
mov
call
aam
xlat
out
in
mov
iret
inc
orb
mov
pusha
lea
or
das
adc
adc
xor
dec
aaa
dec
sub
dec
sub
mov
stos
adcb
xchg
test
push
mov
sbb
push
pop
pusha
push
mov
or
push
or
mov
dec
daa
lret
mov
andl
orl
xlat
or
xor
loopne
or
sbb
add
fimuls
push
dec
sub
add
sahf
adc
add
inc
jo
or
bound
out
lds
add
lods
shlb
dec
fsubl
add
sbb
jmp
ret
dec
icebp
mov
iret
dec
cli
sbb
rcrl
ror
pusha
jo
xchg
rclb
mov
pop
pop
jmp
iret
add
pop
pop
dec
scas
mov
sbb
lock
ret
sbb
cli
fimuls
test
inc
xlat
ret
shlb
push
popf
fmul
fldcw
push
or
aam
hlt
andb
insl
ss
mov
push
lock
mov
sti
cmp
cmp
test
lcall
push
scas
jle
mov
leave
std
push
aam
lcall
add
inc
inc
jnp
add
leave
mov
pushl
les
aad
mov
int3
int3
repnz
lcall
mov
stc
mov
flds
fbstp
lcall
mov
int
hlt
int3
ret
ror
fnstenv
test
xor
les
fisubrs
inc
fmul
test
ss
mov
mov
lcall
jne
fiaddl
fdivrp
lcall
js
leave
inc
mov
shl
lcall
ja
mov
mov
ljmp
push
inc
aam
jmp
int
imul
cli
int3
in
lret
sub
pop
test
insb
ror
stos
lcall
int3
sub
punpckhbw
out
fcompl
outsb
leave
aad
lods
inc
rorb
int3
mov
stc
insl
push
lods
lock
jo
int
scas
mov
push
shlb
sub
popa
pop
sar
add
lods
loope
mov
mov
pop
jmp
jns
int
aaa
mov
cmp
fadd
fcmovb
shr
enter
push
cmpsb
xlat
iret
xlat
in
jmp
scas
aad
fs
jo
vcmpss
xorl
mov
outsb
jnp
nop
iret
cmp
jge
cmp
dec
pop
push
mov
jg
dec
insl
rorl
aad
enter
call
or
pop
push
outsb
xor
mov
sarb
stc
inc
fs
add
xor
push
mov
jo
cli
mov
jb
cmp
clc
pop
or
scas
sbb
ds
lods
cmc
xor
divl
out
inc
inc
es
mov
pop
mov
shrb
ret
add
add
leave
ret
mov
in
lock
mov
pop
loope
mov
rcrl
les
cs
roll
or
mov
and
leave
jbe
adc
mov
dec
rcll
or
lods
mov
pop
movsb
mov
aas
jae
data16
cmc
je
ret
mov
movsl
push
fcmove
popa
dec
lret
or
mov
fdiv
hlt
in
cltd
add
mov
fsubs
ret
inc
in
aad
popf
sub
ret
pop
ret
push
lods
pushf
scas
clc
test
test
enter
mov
xor
mov
push
test
movl
cmp
jne
pop
dec
pop
test
push
fs
mov
mov
and
fsubrs
movsb
shr
xor
sub
into
mov
scas
test
add
leave
fdivrs
popa
movsl
test
shll
outsl
inc
jo
push
leave
lds
push
iret
cmp
ljmp
xchg
lods
nop
ss
push
dec
movsb
push
enter
mov
arpl
ret
mov
ja
int3
les
fisubrs
movsb
fmull
mov
and
stos
movsb
aam
sahf
stos
push
push
gs
xor
sarl
call
adc
cmpsl
cmpsb
cltd
mov
lret
imul
fdiv
xchg
stos
shll
mov
inc
jns
sbb
in
ljmp
loop
adc
jmp
mov
in
sub
fs
cli
shrl
inc
dec
aaa
sub
sbb
lods
repz
fidivl
aaa
enter
jnp
jae
in
xor
loope
test
pusha
push
jl
sub
dec
mov
mov
push
les
cmpsl
ret
mov
add
movsb
sub
cmpsl
push
ret
nop
dec
icebp
int3
into
mov
dec
inc
sub
inc
mov
iret
sub
movsl
lds
xchg
lcall
lret
mov
sub
jo
xor
push
mov
out
loope
xchg
xor
add
sbb
popl
pop
in
xchg
loopne
pop
dec
cmpb
mov
outsb
movsb
cmc
cwtl
std
fs
dec
mov
cmp
xor
test
ret
movsb
ret
shrb
xchg
mov
enter
in
fxch
or
pop
rcr
popf
pusha
xlat
xchg
adc
insl
cwtl
xchg
inc
pop
cld
mov
jg
aam
sbb
into
push
lahf
push
push
jecxz
stc
cmp
dec
lds
xchg
orb
test
pop
sarl
mov
fcomip
pop
iret
cmp
icebp
enter
fs
push
mov
cmp
inc
push
clc
fxch
mov
xor
cli
inc
dec
mov
je
adc
jo
inc
cmc
add
and
add
clc
cmp
jne
adc
xchg
mov
xor
mov
xchg
sub
mull
xchg
je
mov
dec
cli
cwtl
sub
mov
mov
lds
or
cld
inc
stc
push
int3
xchg
lcall
xchg
push
sbb
jecxz
mov
movsb
mov
mov
mov
test
ljmp
cmp
aad
stc
leave
mov
lds
mov
test
sarl
mov
cli
dec
mov
inc
lret
cmp
jp
rcll
push
cvtps2pd
int3
lock
inc
and
jbe
cld
fsubrl
pop
loop
int
lds
dec
rcll
ret
mov
xor
dec
nop
jl
mov
ss
sub
xchg
mov
and
mov
lahf
sub
adc
or
rcll
lret
sti
pop
aad
scas
stc
xlat
or
mov
int
stc
add
iret
stc
gs
ror
mov
pop
lds
lret
sbb
rcrl
iret
mov
mov
inc
mov
insb
mov
mov
outsl
test
mov
rorl
test
jge
stc
xlat
inc
dec
lods
test
jl
mov
out
cmp
mov
imul
stc
or
out
sub
jmp
push
lret
popa
ret
mov
cmc
notl
scas
cs
jp
test
in
pop
lret
xchg
je
mov
mov
jp
mov
xchg
cli
mov
rcl
add
popf
in
inc
lret
cli
fadd
sarb
faddl
fimuls
or
iret
add
jp
lock
xchg
mov
sar
movsl
aam
aam
mov
cltd
lods
loop
cs
ss
cld
dec
pop
adc
clc
loop
notl
pop
adc
aam
adc
aad
inc
sub
cmc
and
add
rcll
jns
ljmp
mov
or
insl
sbb
fucomip
pop
add
scas
in
mov
mov
cld
adc
enter
lcall
movsl
pop
enter
cli
mov
call
stc
cs
movsl
cwtl
cwtl
lret
and
das
push
lcall
mov
mov
fcmovnb
mov
mov
inc
inc
inc
dec
mov
add
dec
mov
inc
jns
lea
xchg
mov
push
or
cmp
mov
jp
inc
pop
mov
push
movb
mov
inc
dec
stos
lret
xchg
pop
jns
mov
adc
dec
mov
ret
add
inc
mov
adcb
mov
xor
mov
ss
movl
mov
pop
js
rcl
ret
add
cli
je
shlb
in
int
int
dec
cwtl
rorb
das
enter
or
iret
pop
rorl
mov
pop
fsts
fs
push
xchg
pop
dec
dec
mov
orb
dec
les
iret
xchg
mov
lret
mov
das
ror
es
push
push
imul
fbstp
dec
rcr
ret
pop
cmp
mov
jp
dec
cli
shll
xchg
ret
xchg
shlb
push
mov
push
cmp
ret
mov
cli
xchg
mov
mov
leave
lret
leave
ret
mov
xchg
ret
fs
fisubs
enter
fstps
dec
mov
dec
fisttpll
enter
scas
in
mov
les
fisubrl
in
cld
pushf
in
mov
popa
jge
movl
xchg
pushf
push
jno
les
push
mov
lret
data16
ror
test
push
int
leave
test
pop
test
xor
dec
dec
mov
xchg
mov
mov
and
jb
dec
dec
cli
or
sar
vrsqrtps
enter
testb
ret
cmpl
call
fbld
jle
loopne
popa
fst
lret
rcr
aam
xlat
into
enter
fs
sar
xchg
roll
aam
lcall
lret
movl
dec
pop
sti
adc
push
cmp
or
sbb
ret
enter
xor
pop
add
stos
dec
sbb
dec
push
rol
lods
xchg
shll
lahf
sahf
sbb
rcl
lahf
filds
inc
mov
das
and
lods
or
lret
push
jns
stc
xchg
cld
inc
loopne
xchg
lods
cwtl
cli
in
stc
or
inc
mov
adc
rorl
test
cli
outsb
jecxz
rcrl
fsubrs
int3
rolb
fldl
sar
add
ret
aad
test
lret
mov
andb
push
enter
movsb
adc
sub
mov
lds
idivb
pop
xor
jnp
xchg
mov
jg
xchg
in
mov
adc
inc
mull
jno
ret
loopne
jp
insb
push
fcomp
pop
cli
jne
jmp
dec
into
dec
cs
cmpsb
shll
mov
mov
mov
jb
jg
cld
repnz
test
inc
mov
mov
sar
mov
cmp
fists
xchg
ret
cmp
dec
and
popf
push
hlt
out
ret
jns
pop
insl
xchg
xlat
and
or
loopne
push
xchg
ret
les
out
mov
js
xor
mov
jb
repz
push
adc
fxch
lret
fstl
or
ret
pusha
dec
aam
mov
push
pop
shll
popa
add
lds
int3
cmp
int3
mov
cmp
mov
mov
inc
fadds
mov
lret
and
sbb
mov
stos
pop
xlat
add
jp
shrl
jo
jb
out
sub
push
lret
jns
aad
lds
int3
cmpsl
sbb
pusha
int
mov
cwtl
les
scas
and
icebp
lret
daa
sbb
ret
add
fdivs
das
fisttpl
add
push
xchg
mov
mov
faddl
fldt
retw
movsl
dec
fadd
sbb
mov
mov
mov
mov
pusha
lods
data16
cli
lret
daa
sbb
ret
add
pop
mov
cmpsb
mov
add
push
cmp
mov
daa
or
push
mov
pusha
test
or
pop
daa
or
mov
mov
pusha
mov
jp
pop
daa
or
shrb
push
mov
mov
mov
test
lret
stos
push
mov
push
jns
pop
mov
mov
std
push
daa
or
cmpsb
push
dec
pusha
mov
push
pop
daa
or
scas
push
push
pusha
mov
push
outsb
mov
mov
dec
or
mov
mov
add
push
sahf
mov
or
test
xor
mov
lcall
xchg
test
jl
xor
mov
xchg
test
mov
daa
or
test
es
or
inc
lahf
mov
xchg
push
nop
rorl
or
jle
adc
or
test
and
rcrl
or
ret
xchg
xor
and
push
mov
ficoms
daa
or
add
push
or
dec
or
or
adc
sbb
or
add
mov
pusha
add
push
pop
or
add
push
cmp
mov
sbb
jle
add
inc
orb
push
add
jle
add
inc
outsb
or
sti
add
jle
add
inc
jne
push
jle
add
inc
arpl
push
mov
sbb
inc
hlt
or
mov
sbb
cmp
ljmp
out
mov
sbb
jle
add
or
mov
sbb
std
sti
push
mov
sbb
jle
add
xlat
xchg
mov
adc
sbb
xlat
push
fs
test
int3
mov
inc
cmp
aad
jl
fadds
pop
dec
mov
fstl
stc
enter
ror
test
pushf
mov
rol
dec
cmp
jns
xchg
cmp
cld
popa
fisttpl
iret
lds
insb
push
cltd
mov
cmp
nop
movb
add
or
dec
adc
xchg
or
punpckhbw
sbb
sub
cmp
int
ret
jl
xchg
lahf
xchg
rcrb
mov
sbb
mov
fiadds
int
mov
mov
cmc
in
cmp
push
mov
bound
mov
mov
scas
test
push
cmpsl
mov
pop
adc
sbb
add
and
mov
inc
and
pop
xchg
jge
cltd
push
ret
pop
aam
xor
pusha
pop
out
push
push
pop
inc
les
or
mov
mov
fcom
inc
pop
mov
xchg
pop
ret
push
xchg
rcr
xlat
adc
push
inc
xchg
fisttpll
dec
ret
mov
or
jb
cmp
cltd
fldl
sahf
test
cmp
xchg
lahf
pop
addr16
push
xlat
ret
or
fdivrl
pop
out
leave
jns
push
lcall
sub
in
hlt
xlat
xchg
cltd
xlat
ret
mov
xchg
sub
xchg
mov
and
dec
cmp
adc
rclb
fucomi
sbb
hlt
ja
xlat
popf
loopne
mov
fs
adc
pop
jno
ret
aam
mov
xchg
lret
rcll
sbb
inc
push
fcmovnbe
movsl
pop
fst
js
sbb
sub
cmpsl
ret
pop
jns
mov
sbb
push
add
das
mov
mov
int3
jne
js
cmpsb
dec
xchg
inc
adc
or
ret
jns
aaa
mov
ret
mov
ret
jo
int
lahf
ret
push
dec
xchg
inc
aad
cmp
mov
jmp
push
into
or
lock
lea
fadds
xchg
pop
enter
nop
pop
inc
sbb
test
push
aam
rorl
out
shrl
adc
sbb
push
sub
popf
and
movsb
out
or
int3
mov
mov
xor
pop
jle
iret
lret
scas
lea
push
stos
filds
int
rol
fmulp
lea
popf
jge
movsb
mov
inc
add
scas
aam
lea
fcmovnu
les
xchg
inc
mov
mov
cld
int
shlb
sbb
mov
aad
ret
xchg
pusha
orb
enter
xlat
daa
cli
pop
push
ret
xor
rorl
testl
aam
jne
push
push
outsl
jle
or
test
pop
lea
loope
xlat
or
sbb
in
fldl
leave
dec
bound
pop
adc
dec
sbb
xlat
enter
or
mov
bound
aad
xlat
rcr
es
mov
popf
adc
das
push
call
mov
xchg
inc
sub
popf
inc
lds
xchg
inc
adc
cmp
xchg
lahf
cli
stos
mov
popl
mov
xchg
aaa
sub
add
dec
int3
push
lea
push
push
cltd
stos
ret
fisubl
mov
mov
popf
dec
mov
cltd
inc
enter
mov
pop
jp
int3
push
fcoms
repz
dec
rolb
mov
xlat
test
popf
leave
aad
adc
call
movsb
sub
arpl
dec
enter
xchg
movsl
mov
lret
fisttps
fmuls
push
xchg
int
shlb
lahf
dec
shr
jmp
lds
dec
mov
mov
or
push
dec
xchg
movsb
and
test
outsl
dec
nop
xlat
lea
or
mov
push
rcr
pop
cmovl
jecxz
lds
aad
xchg
jae
xor
jle
mov
fstps
add
sub
lret
cmpsl
mov
lea
push
adc
add
mov
mov
and
xlat
nop
aas
ret
je
bound
pusha
fisttpll
mov
mov
mov
xchg
xchg
adc
adc
mov
inc
and
aam
dec
int
loope
pop
sbb
cbtw
pop
fcom
push
orl
dec
xchg
in
jmp
push
into
mov
in
mov
inc
push
fisttps
dec
cld
mov
xlat
or
mov
xchg
test
mov
cld
cwtl
aam
mov
ret
sbb
pushf
cmpsl
lods
mov
shrl
cli
pop
outsb
dec
xor
scas
xchg
jl
stos
fyl2xp1
test
enter
test
lret
mov
pushf
mov
jl
rol
aam
loope
aam
into
sub
imul
movsb
fs
jb
enter
push
insl
std
cmpb
xor
lahf
inc
je
rcrl
mov
mov
fdivrl
insl
inc
mov
bound
mov
mov
outsl
fcoml
pop
fisubl
lret
hlt
push
inc
inc
fucomip
out
or
push
fcomp
leave
ret
loopne
or
xor
cmc
push
int
or
test
test
lods
or
cltd
lds
push
push
inc
lds
mov
mov
imul
out
mov
loop
in
dec
lds
packuswb
cld
or
xchg
out
dec
shll
jno
cltd
mov
mov
jp
adc
mov
mov
pop
mov
adc
jb
leave
xor
test
inc
lahf
aam
jb
xchg
inc
lds
lcall
dec
xlat
aad
mov
ss
inc
loope
lahf
jbe
cmpsl
jge
or
adc
jg
mov
aaa
dec
aad
pop
lret
int3
pop
sbb
je
adc
inc
xlat
loopne
mov
fcompl
loopne
out
adc
lods
dec
int
loopne
orb
xchg
lret
stos
dec
pop
fucomp
shrl
pop
adc
ror
mov
dec
out
or
je
mov
jo
mov
pop
lahf
xchg
fisttps
or
dec
mov
pop
or
inc
movsl
fstp
leave
mov
test
mov
dec
xchg
lret
rorl
dec
mov
ror
dec
test
mov
jl
cld
out
enter
cwtl
fimuls
sbb
cmp
test
shr
mov
push
dec
dec
aam
add
jp
mov
pusha
imul
or
movsl
push
mov
call
fs
push
aad
movsl
pop
daa
jo
mov
inc
dec
inc
clc
ffree
xchg
push
push
push
or
push
lcall
aad
les
ja
mov
cld
and
ret
cmp
rcll
js
jb
mov
adcb
stos
test
lcall
push
mov
pusha
aam
add
int
mov
test
addr16
fcomps
lret
jg
shrb
rorb
fists
pop
lret
mull
pusha
fs
inc
ret
or
cltd
loopne
aam
dec
mov
in
sbb
inc
popf
movsl
movsl
and
jb
loope
dec
cmp
inc
sub
fisttps
add
adc
aad
jb
stc
add
movl
ret
push
or
push
xchg
aad
loopne
fists
pop
sub
add
stc
mov
xor
ret
sar
mov
mov
aam
rcl
dec
pushf
mov
lds
cld
sub
mov
lret
or
pushf
mov
mov
test
inc
ror
aam
lcall
into
push
mov
enter
cli
inc
stc
mov
sub
mov
shrb
mov
mov
lcall
stos
mov
movsb
int3
cmpsb
cmpsl
lcall
loopne
roll
mov
inc
out
cmpb
cld
inc
xchg
mov
cli
push
enter
mov
cmpb
cmp
out
imul
cld
enter
cld
rol
mov
pusha
or
xlat
lret
and
sbb
stc
adcb
rol
aam
leave
ret
push
pusha
mov
pop
push
ret
sbb
fmul
leave
push
data16
fs
cmpsl
movsb
and
or
add
mov
cmc
xor
cmp
cli
in
sub
cmp
xchg
rcrl
test
fistps
repz
dec
fs
iret
pushf
jecxz
mov
cld
lret
pop
fistl
mov
ss
jecxz
pop
pushf
cmp
int3
lret
pusha
insl
in
aam
pusha
sub
push
insb
jno
mov
push
inc
mov
inc
fs
das
int
ss
ret
mov
mov
mov
mov
jle
adc
clc
dec
in
and
into
xor
fs
mov
into
enter
mov
mov
mov
ror
dec
push
add
mov
fistpl
leave
ret
push
add
mov
leave
mov
mov
rcl
popa
cld
jb
cmc
add
sbb
push
mov
icebp
dec
ror
std
dec
or
jl
xchg
and
cmp
pop
cmpps
mov
mov
insb
daa
inc
lcall
stos
and
pop
push
adc
stc
adc
arpl
cld
into
add
sarb
scas
and
test
rolb
mov
les
inc
int3
mov
pop
les
lcall
dec
push
mov
cmp
movsl
leave
test
inc
int3
flds
lds
inc
inc
int3
roll
leave
add
aad
les
push
mov
sbb
mov
sahf
into
lret
push
xchg
loopne
sarl
pop
inc
xlat
pop
fnstcw
pushf
mov
or
aam
popf
cld
cmp
loopne
sbb
pop
sahf
mov
les
inc
and
sub
lcall
jp
inc
inc
int3
dec
push
lcall
sub
inc
sub
cmp
std
mov
dec
leave
dec
push
and
les
leave
aas
fnstcw
mov
dec
int3
or
les
leave
and
inc
xor
hlt
jnp
jl
cld
inc
leave
dec
push
pop
sbb
sub
ss
pop
lds
mov
outsl
ret
pop
stc
sbb
js
loope
mov
ds
sbb
fcmove
or
pop
inc
dec
test
xor
jl
shr
adc
mov
cltd
mov
js
or
pop
sbb
enter
jl
mov
imul
mov
movsl
cmpsl
lret
movsl
lds
sarl
and
bound
push
int3
movsb
or
mov
movsl
and
mov
adc
mov
movl
mov
js
sbb
out
fst
int3
out
lret
mov
xchg
cmpsl
scas
add
push
xorb
cmpb
aam
leave
cld
mov
into
addr16
inc
cmpsl
inc
or
test
dec
jle
stos
fnstsw
inc
push
aaa
mov
xchg
dec
sbb
push
push
cwtl
xchg
rcl
cld
sbb
mov
push
fistpl
inc
stc
int3
ret
sbb
test
call
lret
cli
test
stc
mov
cli
cltd
in
pop
ret
rorb
and
ret
scas
sub
push
daa
ror
fs
aaa
cmp
mov
filds
mov
xchg
cmp
daa
pop
xchg
sbb
mov
or
mov
mov
int3
jg
dec
out
pop
outsb
jle
into
jne
and
sti
mov
fstp
pop
mov
jb
push
mov
scas
cltd
adc
std
fbstp
mov
repnz
and
pop
hlt
stos
inc
mov
inc
int3
rol
add
hlt
imul
je
pop
testl
mov
dec
xchg
and
pop
push
xchg
aad
mov
mov
lods
xor
mov
xchg
mov
and
push
sti
mov
mov
or
sbb
mov
xchg
lcall
mov
test
pop
lret
in
pop
jl
pop
shrl
stos
mov
mov
mov
cmc
in
mov
aam
repz
addr16
pop
dec
sbb
fucomi
clc
ret
cmp
aad
in
js
mov
pop
add
fmull
push
sbb
imul
sub
mov
mov
dec
pop
jno
test
dec
xor
lret
aaa
xchg
fmull
mov
bswap
push
je
lods
sub
test
xor
sub
ja
enter
mov
mov
idivl
cmp
add
xor
mov
sbb
mov
jo
fimuls
out
adc
jns
sub
leave
mov
cmp
xor
mov
fs
scas
aam
dec
mov
xchg
dec
mov
add
sbb
pushf
mov
ds
xchg
mov
mov
js
pop
or
lods
fstpt
push
mov
push
jo
hlt
add
cmp
sub
mov
mov
dec
dec
adc
mov
push
mov
adc
and
insl
push
xor
xor
int3
xchg
in
mov
inc
mov
das
aaa
adc
out
cld
movsb
stos
mov
mov
inc
and
push
sbb
lds
xchg
push
jnp
out
out
jns
fwait
mov
mov
test
mov
std
out
jle
fsubs
int
adc
mov
test
adc
xchg
push
xchg
dec
ret
jl
fists
adc
in
xchg
aam
push
xchg
std
sbb
sbb
pop
dec
push
repz
push
out
inc
sbb
jnp
mov
sahf
dec
loope
xchg
sub
push
lods
xchg
int3
mov
lret
int3
xchg
dec
or
and
xchg
sbb
cmp
push
stc
add
addr16
jge
ret
xchg
pop
sbb
mov
push
push
int3
sahf
jae
test
xchg
mov
mov
jnp
xchg
jg
dec
mov
fwait
jo
sbb
mov
inc
jmp
out
mov
and
pop
fsubrp
sub
popf
inc
je
and
std
pop
in
movsb
fucom
mov
stc
fldpi
dec
out
add
adc
xchg
mov
push
push
pop
shll
or
push
add
inc
in
inc
ljmp
add
rorb
adc
xchg
pop
pusha
shlb
negl
push
lret
add
inc
cwtl
pop
popf
xor
mov
mov
xchg
ret
loop
mov
push
push
mov
pcmpgtd
dec
cmp
mov
mov
lcall
enter
fnstcw
mov
mov
mov
int3
test
scas
les
inc
mov
mov
leave
test
fiaddl
rcl
lcall
shrl
fld
pop
pushf
mov
mov
mov
mov
test
lods
lcall
cmpsb
push
lcall
lret
push
mov
xlat
popa
rorl
mov
or
mov
mov
mov
sarb
mov
mov
mov
mov
mov
cli
shrb
push
fcmovu
lcall
cmpsb
jne
mov
push
stc
data16
test
dec
cli
vmread
mov
mov
sub
mov
movb
push
int3
rcl
jbe
mov
ret
psubw
xchg
mov
push
lcall
mov
mov
mov
mov
mov
mov
mov
mov
leave
repnz
xchg
test
mov
shlb
mov
xchg
inc
add
inc
and
out
pop
dec
out
add
ret
testl
js
push
add
cmp
lods
inc
jns
inc
outsb
lods
inc
cld
sbbl
pop
or
mov
int3
push
pop
pushf
aam
push
dec
inc
adcb
mov
and
xchg
lods
mov
stc
mov
fmulp
xor
aam
mov
mov
adc
or
sahf
dec
push
jae
or
imul
rorb
icebp
and
add
adc
dec
push
cmp
jge
mov
jl
test
xor
pop
pop
xchg
sub
lahf
push
pop
push
fst
jns
mov
dec
or
lods
insl
xor
mov
push
movsl
rcl
lcall
sbb
mov
pop
leave
push
push
or
mov
les
leave
dec
push
mov
mov
outsl
cld
and
xor
addr16
push
jle
int3
pop
mov
adc
sti
or
faddp
and
repnz
pop
jecxz
test
in
cmc
bound
add
in
outsb
xchg
inc
lret
fistpll
cwtl
jo
aam
test
inc
movb
insl
repz
ret
xor
sbbl
push
pop
stos
rcll
and
sbb
repz
mov
pop
mov
leave
or
adc
lock
lahf
pop
ja
xlat
rcr
fbld
pop
mov
jno
jbe
sbb
loopne
mov
lods
xor
jb
ja
shr
mov
push
leave
adc
or
es
dec
out
outsb
dec
mov
adc
lds
xchg
pop
jle
sub
push
or
mov
nop
xchg
mov
adc
adc
cld
repz
jecxz
and
aad
mov
sbb
lahf
repnz
jg
lods
mov
fimuls
or
filds
sub
mov
stc
pop
fcomps
aad
stos
cld
inc
rorl
xchg
or
mov
popa
out
arpl
pop
pop
fwait
fstl
sub
pusha
lcall
call
dec
adc
ret
enter
fimull
mov
call
aaa
loopne
sbb
lock
pop
sarl
ret
dec
inc
leave
out
sbb
andl
add
mov
xchg
movsb
xchg
rorb
and
adc
pop
lret
pop
fbstp
sbb
aam
or
mov
pop
test
outsl
sub
and
rcrb
inc
sub
scas
xchg
inc
cmpl
fiadds
mov
call
pop
dec
inc
sub
pop
rcll
mov
clc
iret
mov
in
mov
mov
mov
into
lret
iret
nop
push
adc
cld
lea
int
xchg
push
fdivrp
movsb
mov
push
or
les
int
adc
and
leave
mov
push
out
mov
int
adc
test
imull
push
jle
cmp
xlat
daa
shrl
and
sub
and
gs
movsb
or
sahf
mov
mov
add
outsb
enter
cmp
or
enter
push
out
enter
prefetch
enter
mov
pop
xlat
enter
stos
mov
mov
outsb
enter
cmp
sbb
enter
jp
fistpl
mov
fstl
call
adc
mov
and
cmp
dec
inc
les
or
pop
int
push
lods
sbb
iret
push
mov
pushf
mov
pop
mov
mov
cmp
mov
stc
pop
cld
test
mov
xlat
jno
jecxz
xlat
std
iret
orl
lcall
outsb
popa
sahf
pop
push
xchg
addl
dec
nop
lcall
dec
push
or
test
andl
outsb
push
dec
mov
xchg
add
and
or
add
and
ret
push
and
test
mov
mov
lcall
jnp
mov
adc
or
dec
adc
movl
push
xchg
lds
rcl
pop
je
or
mov
popf
pop
insb
push
mov
or
fstp
inc
mov
adc
or
mov
push
pop
cli
push
inc
push
mov
pop
mov
inc
lods
nop
lahf
je
cmp
jl
ret
mov
lret
mov
rcrb
enter
mov
and
pop
jl
mov
in
push
xchg
inc
sbb
inc
mov
jns
push
jecxz
adc
xchg
rolb
gs
mov
out
or
cltd
pop
fsub
enter
filds
mov
mov
or
int
mov
out
je
hlt
outsb
orb
and
adcb
arpl
cmp
nop
stc
bswap
xor
push
mov
sbb
pop
mov
pop
js
ds
call
cltd
push
sbb
lcall
out
push
jle
xchg
mov
cld
je
mov
cwtl
mov
jmp
add
inc
gs
imul
outsb
addr16
add
add
je
jne
jae
jb
outsl
jae
add
push
gs
je
dec
popa
outsb
fs
add
add
je
imul
gs
add
dec
jae
popa
fs
jb
je
push
je
add
add
gs
dec
bound
arpl
pop
seta
not
pop
movsbw
lea
jmp
js
add
into
mov
push
ror
aad
iret
jecxz
loop
neg
in
lds
sarb
mov
xchg
js
test
movsb
sbb
subb
dec
repz
mov
pop
jecxz
pop
xchg
ja
mov
xor
movsl
jp
push
push
sarl
jns
jne
call
add
je
inc
dec
inc
push
add
add
push
dec
inc
inc
jb
insl
push
je
imul
mov
out
jne
decl
and
jne
cmc
jmp
add
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
pushf
pushf
movl
pushf
pushl
pushl
lea
jmp
add
push
gs
insb
imul
inc
popa
je
add
add
addr16
jb
popa
je
dec
gs
js
add
enter
or
xor
neg
setl
not
test
sub
mov
ror
rol
pushf
push
sete
inc
pushf
pushl
stos
mov
mov
pusha
mov
lea
push
pusha
movb
lea
call
pushf
jmp
add
dec
jae
imul
jae
popa
addr16
add
add
imul
insb
gs
bound
arpl
bt
stc
movzwl
shl
inc
shld
mov
movb
test
add
call
or
fs
mov
and
mov
movsb
xchg
mov
add
mov
cmc
call
and
push
cwtl
sar
ljmp
push
mov
jbe
aad
jno
jno
ja
jo
jnp
xor
push
iret
mov
pop
aas
sub
enter
xor
mov
sub
ljmp
lcall
or
push
movzbw
pop
lea
movb
jmp
inc
dec
dec
inc
push
dec
xor
cs
insb
add
lea
mov
bswap
mov
pushf
pushf
mov
bswap
mov
jmp
push
push
lea
ja
mov
call
test
pushf
call
mov
movb
pusha
add
call
add
push
gs
gs
jae
push
gs
popa
jo
outsl
jb
add
push
and
add
add
xchg
lcall
xor
add
xchg
and
int3
jle
add
dec
sbb
bound
add
andl
stos
jne
add
push
sbb
sbb
add
pop
sbb
or
add
mov
add
and
add
add
add
orb
add
add
add
or
add
adc
add
add
add
sbb
and
cmp
add
push
sbb
mov
and
pop
xchg
add
jle
add
jmp
and
stos
fwait
and
aas
pushf
and
and
add
jge
add
cmp
add
and
mov
sbb
enter
mov
andb
ret
pop
and
lret
add
add
add
lea
add
arpl
add
push
sbb
cltd
add
pusha
aaa
and
or
and
lret
add
mov
add
push
and
in
and
rcrb
ja
and
mov
mull
add
cmp
add
push
sbb
xor
add
dec
sbb
push
pop
and
out
pop
sbb
out
arpl
add
arpl
add
sbb
cmp
xchg
jns
add
xor
sbb
sarb
add
add
hlt
and
popl
sbb
ds
and
ja
sbb
repz
sbb
mov
pop
sbb
or
sbb
and
mov
and
jnp
and
pusha
dec
sbb
sti
pushf
and
jle
and
mov
and
adc
add
add
jmp
and
shrb
and
ja
and
pop
xchg
and
dec
popf
and
les
add
and
outsb
aaa
and
mov
dec
sbb
fisttpl
add
pop
sbb
rcrl
add
and
add
add
jle
add
and
loope
and
fstl
add
jmp
add
andb
mov
and
hlt
jmp
and
cwtl
push
sbb
outsb
arpl
add
and
cmp
add
and
pushf
fwait
and
jmp
and
jno
and
cmp
xchg
add
add
cmp
add
and
imul
repnz
and
lcall
add
mov
and
mov
and
mov
jno
add
jl
add
jne
add
pop
and
cmc
movsl
sbb
test
and
dec
fwait
and
or
sbb
aad
and
pop
pop
and
pop
add
add
add
add
outsl
and
mov
and
sbb
and
or
and
mov
mov
and
add
and
dec
jnp
add
and
std
push
and
xchg
and
jo
and
mov
cmp
add
arpl
add
add
gs
add
lea
add
jle
add
and
add
sbb
or
cmpsb
js
add
and
in
cmp
add
and
adc
and
sub
pop
sbb
leave
jmp
add
popf
and
ds
sbb
notb
add
dec
sbb
xor
and
movsl
jle
add
push
sbb
popl
and
or
and
orb
add
mov
and
das
push
sbb
cmpsb
xchg
and
loopne
and
push
pop
and
mov
sbb
ja
and
ds
sbb
fnsave
add
js
add
pop
and
cmc
pop
sbb
push
jle
add
and
int
and
lea
add
and
je
and
sbb
add
cmpsb
sbb
dec
and
inc
push
and
jecxz
and
push
cmp
add
pop
sbb
inc
outsl
and
decl
and
ret
add
pop
and
and
and
pop
popf
and
sbb
and
sar
and
pop
cmp
add
pop
sbb
fcoms
add
pop
sbb
sbbb
cmpl
rolb
add
add
push
sbb
sbb
add
push
sbb
popa
push
sbb
sbb
push
sbb
jle
sbb
hlt
call
and
sub
and
and
and
int3
cmp
add
and
sub
js
add
cwtl
and
mov
and
and
add
add
add
popf
and
mov
pop
and
in
and
push
mov
and
mov
and
xchg
push
sbb
fimull
ds
sbb
lds
and
popf
dec
sbb
scas
and
xchg
stc
and
jmp
add
js
add
lcall
cli
cmp
add
sbb
cmpsl
pop
sbb
sbb
and
mov
and
pop
sahf
and
insb
xchg
add
andl
mov
and
cmp
sbb
dec
xchg
add
aas
and
or
and
adc
add
add
add
pop
sbb
cmpsb
push
sbb
xchg
and
xor
and
mov
and
cli
push
sbb
mov
pop
sbb
mov
cli
and
addl
and
xor
and
andb
call
dec
sbb
popf
and
dec
and
cmp
sbb
push
xor
sbb
aaa
and
dec
xchg
and
jmp
sbb
mov
add
and
or
add
and
mov
add
and
dec
jbe
add
mull
add
sbb
and
and
testb
add
add
cmp
and
lods
pop
sbb
cmpl
add
andl
add
fwait
and
add
add
pushf
and
loope
and
test
sbb
shrl
add
hlt
and
push
aaa
and
pop
cmp
add
andb
pop
fwait
and
cs
sbb
sub
add
push
sbb
sbb
add
sbb
popf
jmp
add
cmp
add
and
dec
cmc
and
sub
add
sbb
mov
push
and
jp
and
out
sbb
xchg
popa
and
xchg
add
add
add
mov
add
pusha
sbb
ljmp
add
cli
and
mov
sbb
loope
and
xor
and
adc
add
in
push
and
mov
add
xor
add
add
add
lea
add
jmp
and
inc
push
and
xchg
pop
sbb
add
add
or
add
mov
add
andb
add
or
add
add
add
adc
add
add
add
ret
jno
add
and
ret
outsl
and
sbb
add
add
jle
sbb
add
add
mov
fwait
and
or
and
mov
add
jle
add
add
add
add
je
jns
je
insl
dec
gs
imul
sub
xchg
xchg
sub
shld
mov
setns
neg
sub
mov
jmp
add
inc
gs
gs
imul
adc
xchg
cwtl
jae
jle
cwtl
popf
nop
cmpsb
add
in
pop
mov
xchg
mov
outsl
nop
pop
fdivl
sbb
mov
jne
repnz
movlps
repnz
jle
push
popa
dec
jnp
jo
mov
ja
es
loopne
mov
sbb
mov
push
xor
dec
mov
push
and
mov
sbb
mov
in
rcll
push
push
loope
or
in
je
in
adc
mov
shl
inc
imul
sbb
aaa
dec
ja
mov
leave
das
jmp
mov
out
ret
fdiv
shr
in
shr
hlt
jne
sbb
std
pop
out
inc
cmc
inc
hlt
aad
les
or
aad
scas
sahf
xchg
mov
mov
shll
adc
and
imul
push
cli
push
jmp
scas
out
inc
mov
test
mov
cmp
inc
mov
xorw
push
push
incl
shrd
mov
cmp
mov
bt
mov
sbb
mov
bt
pushf
call
add
inc
insb
insb
imul
out
imulb
jb
bt
push
cmpb
call
add
inc
insb
outsl
bound
inc
imul
inc
add
mov
rcl
sbb
mov
xchg
jge
mov
sub
sub
sub
setbe
not
mov
lods
mov
jmp
add
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
add
push
imul
jmp
add
inc
gs
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
dec
jae
arpl
jo
jns
sub
cmp
ljmp
subb
movsl
mov
les
jle
daa
and
pusha
lods
shlb
xchg
fdivp
or
ja
mov
lret
adc
jne
ficoml
xchg
dec
inc
jno
stc
fisubs
mov
jno
jl
outsl
fisubrl
lds
into
xor
les
push
pop
scas
push
sbbl
sub
idiv
leave
aam
add
gs
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
js
add
push
gs
popa
jae
inc
jb
outsl
jb
add
inc
insl
jo
jns
insb
imul
add
and
pushf
movl
pusha
mov
pushf
pushf
pushf
pushl
ret
stc
pusha
sub
lea
pusha
inc
lea
jmp
call
add
inc
gs
imul
js
inc
add
je
or
test
add
and
bts
mov
btc
sub
not
mov
push
sub
cmc
clc
pushf
pushl
popl
bt
stc
cmp
call
aas
or
lret
in
sar
xlat
in
fucomi
ret
cld
lret
in
hlt
push
mov
xchg
inc
insl
push
fisubrs
inc
lods
dec
fists
daa
movl
popa
iret
addr16
test
movsl
cmc
cli
sub
adc
lea
xchg
mov
or
mov
xor
xor
mov
xor
sub
lds
cs
jge
sbb
js
fisubs
enter
repz
in
sti
pop
negl
pop
jmp
test
mov
popa
fs
imul
je
push
dec
outsb
outsw
add
mov
decl
pop
jmp
movb
push
call
bt
add
pushf
lea
jmp
mov
xor
sub
je
stc
bt
not
jmp
call
mov
call
setge
inc
push
setno
jmp
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
xor
xor
cmp
mov
repz
out
repnz
out
bound
mov
adc
add
mov
bound
sub
fmul
ja
xchg
idiv
cmp
dec
or
daa
push
and
mov
cwtl
stos
xorl
lea
mov
lret
cmpl
insl
gs
movsb
xor
movsb
cld
dec
hlt
pop
cli
or
stc
sahf
cmpsb
mov
je
popa
jo
outsl
fs
xor
ss
pop
dec
faddp
out
fsubr
aad
fsub
sar
int3
cli
pop
cmpsl
inc
mov
pop
cmp
adc
and
cmp
aaa
xchg
cmp
aam
push
xchg
les
push
and
std
fwait
dec
mov
aaa
fs
push
or
lea
add
jl
insl
clc
adc
addr16
mov
mov
nop
mov
push
cmp
adc
push
ljmp
std
hlt
cmp
adc
inc
in
inc
in
cmc
pop
repz
clc
inc
popa
test
sar
add
mov
sahf
ja
cmpsb
bound
mov
xor
mov
je
pop
jbe
fndisi(8087
into
dec
mov
xchg
bound
mov
scas
pop
mov
sahf
ja
sub
jecxz
mov
mov
rol
aaa
addr16
addr16
push
aam
jne
clc
push
push
dec
inc
dec
xor
cs
insb
add
add
je
gs
popa
addr16
imul
popa
imul
je
jo
gs
bound
arpl
add
inc
jb
popa
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
test
pusha
test
inc
mov
jmp
inc
dec
popa
pop
mov
lea
mov
cmpsb
lods
test
add
mov
lahf
xor
add
test
pop
push
imul
in
imul
decl
push
stos
mov
aaa
shlb
outsl
loope
js
mov
faddp
lea
mov
sbb
insl
cmp
subl
mov
lret
add
mov
mov
lods
jae
jo
dec
mov
movsb
xchg
cmpsl
or
sbb
lea
test
sar
gs
fcomi
or
xor
je
sub
adc
lods
jae
mov
lcall
jno
fs
mov
decl
lret
ss
jp
mov
xchg
xor
jb
leave
adc
out
std
lock
sbb
mov
or
sbb
add
push
gs
jo
outsb
dec
gs
js
add
add
jae
outsl
jb
inc
inc
add
lea
je
test
sub
cmp
cmc
push
cmp
jmp
add
dec
jae
imul
popa
bound
add
dec
ss
add
stos
push
lcall
test
jp
xor
push
mov
jno
call
pop
jo
jae
cld
push
pop
push
jb
xchg
stos
sbb
bound
ja
mov
and
cwtl
mov
jmp
sbb
add
dec
mov
jecxz
cmp
cmpb
das
test
andb
xor
subb
ja
dec
xchg
fwait
jnp
into
pop
mov
pop
mov
fwait
xor
jne
cli
inc
jl
sbb
add
ss
in
fsubr
int
into
in
loope
jb
dec
movsl
jbe
xorb
xor
mov
loopne
push
icebp
adc
fistpll
aas
jmp
std
cs
subb
mov
cld
mov
shrl
arpl
mov
add
sbb
cmpsl
inc
mov
iret
adc
fdivrl
adc
loope
loop
and
sub
arpl
std
mov
test
sar
dec
and
mov
ja
sub
ljmp
cmp
nop
stos
cltd
mov
xor
and
cmp
add
fxch
mov
sbb
jge
push
in
ret
push
xchg
stos
or
mov
or
mov
adc
je
js
sub
ja
pop
cmp
adc
inc
jne
jle
stos
push
cmp
std
dec
ja
out
comiss
divl
cs
xor
cmpsl
mov
scas
push
mov
sahf
clc
dec
and
js
cwtl
int
aaa
lret
mov
aas
and
mov
push
test
mov
lds
sub
ficompl
popl
mov
outsl
test
sbb
sbb
push
movsb
aad
mov
mov
mov
psubd
scas
fidivl
and
fidivrl
insl
fisubrs
jne
cld
mov
shl
push
push
ss
add
and
adc
mov
stos
int
or
push
mov
push
push
mov
hlt
mov
andl
mov
pop
pop
subb
les
jecxz
fwait
jbe
fs
mov
lea
subl
xor
mov
ja
mov
fucomip
add
lods
mov
pop
push
mov
jl
jnp
popa
lret
jne
cld
cmp
sbb
cld
mov
xor
mov
mov
dec
mov
lods
mov
jp
addl
mov
data16
cmp
jl
jmp
cmpsl
lret
jne
or
push
xchg
sahf
lock
testb
testb
mov
xchg
pop
fnstenv
rorb
adc
xor
rorl
pop
popa
push
repnz
out
adc
inc
sti
lock
inc
gs
je
imul
inc
js
add
and
mov
movb
not
lods
movb
cmc
neg
bt
ror
stc
add
call
ljmp
cmp
and
aaa
or
das
test
dec
pop
push
lcall
out
leave
je
xchg
enter
ja
repnz
mov
jg
in
jo
roll
jno
fs
fdiv
cmp
mov
jne
dec
popfw
fwait
cmpsb
std
ljmp
nop
mov
lret
pop
inc
lret
int3
jmp
dec
test
subb
jl
rolb
jbe
mov
std
sbb
int3
test
mov
jmp
fsubr
inc
push
clc
call
jle
jge
jnp
jno
cmc
push
mov
push
fxch
pop
mov
and
add
leave
call
fdivr
push
incl
inc
repnz
inc
xchg
lahf
and
lret
xlat
mov
dec
inc
jae
mov
push
xchg
movsb
xchg
xchg
out
test
adc
push
mov
lea
jbe
ds
into
pop
out
loop
inc
bound
xchg
cmp
add
addr16
dec
add
push
gs
imul
je
js
call
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
pusha
pushf
lea
jmp
add
insb
jae
jb
popa
je
add
add
jb
jne
insb
push
jne
jb
add
or
xchg
lea
je
jmp
movl
call
add
inc
gs
je
dec
popa
outsb
fs
add
add
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
add
imul
popa
jae
inc
add
add
jne
inc
imul
gs
imul
bt
btc
neg
movl
setg
xor
mov
sub
bt
cmp
push
cmp
cmp
pusha
call
add
inc
gs
outsb
jne
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
rorb
add
add
add
pushl
mov
lea
jmp
add
inc
gs
imul
popa
arpl
outsb
je
lea
je
jmp
add
inc
imul
lcall
mov
inc
pusha
jmp
add
push
jb
outsb
jae
popa
je
dec
gs
popa
add
or
out
pusha
mov
mov
push
movw
pushl
ret
setns
pop
pusha
pushf
mov
call
call
sbb
sub
ljmp
dec
jns
outsb
pop
jge
imul
add
jno
std
sub
daa
adc
sub
push
loop
fucomp
inc
notl
mov
outsl
dec
cmpsl
rcll
inc
test
in
jo
jnp
jge
push
add
frstor
insb
xchg
dec
inc
cmpsl
dec
add
scas
mov
iret
jecxz
outsl
xchg
mov
mov
mov
popf
mov
cwtl
imul
dec
loopne
and
sbb
cs
sbb
add
mov
adc
mov
mov
inc
popf
push
sub
cmp
mov
dec
jnp
lock
lock
and
call
ficoms
clc
pop
lock
mov
or
mov
popf
jne
add
sub
fisttps
xor
xor
mov
lods
jl
ss
rcll
inc
jo
insb
push
jns
popa
dec
addr16
sub
or
mov
scas
out
mov
pop
pop
sub
mov
cltd
scas
or
pop
xor
mov
je
and
mov
mov
ja
and
pop
pop
aaa
dec
cmp
cmpb
mov
and
jno
and
xchg
add
xchg
dec
out
and
and
lret
sbb
xchg
jp
cmp
out
out
or
xchg
pop
mov
mov
jne
add
push
sbb
lret
sub
mov
sbb
sbb
pop
ds
or
lea
fnsave
test
movsb
out
cli
sbb
aad
inc
jb
imul
sbb
xchg
add
test
sub
cmp
push
adc
cmp
xchg
pop
sbb
std
pop
out
pop
testl
dec
lret
ficompl
lods
sbb
push
cmp
xchg
and
cmpsl
cltd
xchg
cmp
add
ret
loope
daa
jne
xlat
lret
push
ror
cmp
cmp
cmpsb
mov
push
dec
mov
pop
js
insb
mov
fwait
cwtl
lahf
jns
es
cmpsb
or
cwtl
xor
cs
jo
and
fucomi
sbb
repz
insb
int
jo
jg
jne
add
insb
add
dec
outsl
popa
fs
je
imul
dec
outsb
data16
popa
je
push
arpl
ficomps
pop
loopne
cmp
gs
mov
fistpl
loopne
pop
pop
in
fdivrl
ficomps
fsubl
pop
popa
pop
pop
mov
mov
pop
jecxz
mov
add
popa
jo
gs
jb
jns
lea
je
push
cmc
cmp
add
push
mov
lea
jmp
test
ror
shr
mov
lea
btc
push
pushf
mov
bsr
dec
jmp
daa
int
enter
scas
les
xchg
and
push
mov
mov
xchg
jl
les
inc
mov
pop
dec
loopne
xor
sub
int3
pop
rcrb
dec
leave
ret
inc
jns
ds
int3
mov
sub
push
pop
lcall
test
mov
mov
lret
xchg
xor
das
leave
cmpsb
push
pop
pop
lcall
dec
push
inc
cli
fnstcw
mov
jbe
test
inc
sub
and
lcall
aas
push
sbb
cli
xlat
dec
les
bound
into
leave
dec
fld
xchg
mov
lcall
push
int3
push
dec
lcall
mov
mov
sub
push
aad
dec
push
inc
dec
sbb
int3
mov
mov
mov
les
shrl
inc
dec
int3
into
push
lcall
mov
mov
and
daa
dec
pop
aam
xlat
inc
dec
int3
push
lds
fmul
rcrb
scas
mov
movsl
mov
push
inc
xlat
int3
into
ret
add
jbe
mov
mov
pusha
les
push
push
ret
jp
mov
mov
test
inc
and
push
dec
push
xlat
leave
dec
push
stc
ds
mov
lcall
movsb
push
rcl
lcall
les
inc
jns
mov
lcall
loopne
push
inc
push
int3
int3
push
lcall
cld
mov
cld
push
stc
inc
push
lret
stc
push
cs
int3
in
lcall
roll
inc
mov
mov
sub
mov
inc
lods
ret
or
inc
ret
lcall
fldt
inc
movsb
int3
xor
rcl
pop
stc
js
ret
xlat
lcall
aam
mov
cmpsl
orb
leave
cld
flds
xchg
mov
mov
and
cmpsb
sub
push
leave
aad
lret
int3
inc
dec
sbb
int3
xor
stc
ss
mov
lcall
shrl
inc
dec
int3
int
lcall
cmp
mov
mov
push
push
dec
rcrb
int3
ds
stc
xor
inc
aaa
int3
sub
fmul
loopne
aam
aad
lret
ret
les
cmp
push
mov
pop
inc
and
jl
dec
jl
xchg
cmp
push
aam
mov
mov
xor
inc
dec
adc
push
fstpl
movsl
dec
and
sub
inc
mov
ds
lret
aad
lcall
push
push
movsb
sub
les
leave
ds
cmpsb
push
ret
mov
mov
push
dec
or
mov
rcrb
int3
dec
scas
les
inc
rorl
xchg
mov
sub
es
jp
mov
pusha
cld
movl
push
dec
mov
mov
fcompl
cli
mov
ret
mov
mov
or
or
ret
jnp
mov
nop
fcmovnb
dec
pop
dec
adc
mov
push
jne
push
mov
aam
nop
mov
stc
loopne
jl
les
leave
out
popa
inc
scas
mov
cmc
leave
mov
addb
ljmp
or
lret
push
fwait
sbb
mov
sbb
mov
jge
jl
mov
inc
xchg
add
lcall
adc
inc
pop
int3
sbb
lcall
in
push
xor
fnstcw
push
int3
pop
lcall
fwait
push
movsb
jo
scas
dec
jmp
push
mov
inc
add
iret
nop
lcall
lret
push
aam
lcall
and
out
inc
scas
int3
push
lcall
cld
test
ret
inc
pop
int3
rcrl
lcall
int3
outsl
sub
les
leave
inc
fnstcw
inc
int3
mov
in
movsb
push
cmc
jb
cmp
les
leave
pop
push
cltd
in
bound
les
leave
je
add
cmp
jbe
mov
lcall
out
bound
lods
mov
jb
jle
stc
clc
cld
inc
leave
ret
push
aad
lcall
bound
inc
lods
int3
jne
lcall
les
dec
push
xchg
popf
lcall
and
inc
jmp
mov
adc
rclb
push
dec
aam
mov
xchg
clc
loopne
xchg
shll
iret
cltd
xchg
jnp
add
mov
test
sub
add
mov
mov
sbb
loop
inc
outsl
cmp
push
cmpsl
xchg
dec
fnsave
mov
les
pop
push
mull
pop
lahf
addr16
jp
cli
xchg
adc
fimuls
cmp
xchg
xchg
mov
pusha
pop
sbb
xchg
fstpl
adc
fbstp
push
fistl
int3
sbb
xchg
loopne
pop
push
push
pop
addl
adc
and
pusha
adc
sbb
mov
jae
popf
shl
xchg
dec
hlt
or
adc
aam
or
xchg
pusha
je
mov
sahf
dec
ds
xchg
cmp
cli
out
pop
mov
and
pop
or
mov
or
pop
and
int3
out
insl
push
jp
sahf
sub
pusha
imul
jecxz
in
cmp
aam
adc
neg
mov
ret
sarl
mov
mov
addr16
rclb
or
mov
clc
or
enter
bound
cltd
xor
pop
xchg
cmp
push
das
and
jo
pop
adc
mov
mov
rclb
xchg
ret
push
xchg
cltd
pop
xorb
add
addr16
popf
adc
test
stos
pop
jne
jg
roll
inc
xor
sub
sub
js
rcr
dec
rcl
mov
repz
scas
dec
and
ss
xchg
leave
xchg
pop
dec
out
cmp
aad
or
xlat
in
shll
notl
lahf
xor
mov
and
jmp
ror
movsl
adc
dec
xlat
mov
jno
bound
repnz
ficompl
mov
or
mov
pop
test
and
adc
dec
jo
fists
shlb
pop
sub
xchg
push
xchg
shl
push
pop
sub
inc
ret
enter
and
fnstenv
cmp
push
sub
and
cmpl
fs
inc
mov
add
std
or
dec
int
inc
roll
les
out
adc
or
fsubrl
and
pop
or
cli
mov
adc
mov
dec
cmp
dec
popf
pop
scas
ficomps
ret
jle
xchg
mov
cltd
mov
pop
inc
adc
loopne
lcall
es
es
fadds
mov
mov
data16
or
rolb
and
jnp
mov
in
mov
xchg
pop
fnstenv
mov
xor
jae
mov
dec
ret
fbld
mov
push
mov
sub
shll
cmc
mov
ret
xchg
nop
mov
mov
outsl
ret
stc
xchg
xchg
push
stos
sub
mov
mov
rol
pop
push
stc
push
shll
enter
jp
into
pusha
cmpsl
mov
pushf
jl
push
daa
or
mov
cmpsb
test
mov
add
into
xor
mov
in
xchg
stos
jp
cmp
into
lret
ret
ja
mov
cmpsl
dec
mov
nop
xlat
dec
pop
cmpsl
mov
jl
test
mov
fnsave
scas
jb
ficomps
cld
stc
sbb
je
test
test
lret
andb
scas
lods
ret
push
js
push
lcall
imulb
inc
inc
add
sbb
fldl
stc
inc
mov
lret
pop
cmpsl
stos
aam
mov
push
adc
int
cmpsb
lea
pop
jge
dec
sti
call
rol
adc
mov
imull
lock
movsl
jmp
cmpsl
out
fwait
lods
mov
movsl
cld
lret
arpl
mov
mov
mov
cs
mov
stos
outsl
lods
xchg
imul
xlat
cmpsb
jo
iret
es
cmpb
out
mov
xchg
xlat
mov
imul
and
mov
lcall
mov
jle
mov
push
xchg
cwtl
fbld
fs
mov
stos
mov
sub
mov
and
mov
jle
push
push
jle
fildll
cmpsl
lret
aam
xchg
loope
xorb
sbb
xlat
mov
cmpsl
stos
xchg
and
iret
push
inc
shrl
pushf
scas
cmp
mov
jns
in
lods
mov
jecxz
rorb
gs
int
bound
or
cmp
dec
aas
or
jnp
jae
jbe
cmc
std
movsl
in
cmp
sub
dec
pusha
or
mov
lea
adc
nop
mov
inc
mov
mov
and
ss
iret
add
shll
mov
pusha
mov
or
dec
iret
ds
push
adc
ds
lahf
mov
in
out
movb
jne
mov
mov
sub
xchg
ret
js
cmpsl
add
stc
stos
shll
lea
cmp
push
mov
and
insb
loopne
rorl
inc
pop
or
jmp
insl
jl
div
lock
movsl
dec
rcr
notb
push
mov
jo
repz
int3
xor
dec
mov
lods
cmpsl
pop
xor
pop
fldt
in
xor
and
mov
iret
push
push
int
or
push
adc
cmpsl
jae
sbb
fistpll
mov
xor
xchg
rcll
nop
stc
test
mov
aad
push
ret
mov
and
push
lods
mov
lods
jmp
push
int3
sub
mov
push
ret
cmp
loopne
out
stos
lret
mov
push
imul
les
mov
mov
lret
inc
and
stc
xlat
addb
enter
int
sub
cmp
movsb
fwait
ds
int3
test
mov
dec
adc
xchg
dec
fbstp
inc
inc
xchg
fucomip
test
adc
ret
cwtl
movsb
repz
flds
xchg
mov
jae
mov
jle
lds
mov
adc
ret
outsb
mov
mov
mov
xchg
jo
fst
inc
mov
inc
mov
in
rorl
call
fmuls
and
mov
clc
add
das
rorb
imulb
ror
mov
inc
mov
jmp
cmp
sub
cmp
loopne
enter
inc
repnz
test
cwtl
aas
dec
enter
pop
or
mov
out
test
sahf
repnz
sub
inc
or
mov
enter
push
lods
mov
imul
stos
xlat
jo
inc
scas
outsl
jmp
mov
dec
inc
pop
fucom
jae
cmp
push
jecxz
dec
enter
mov
sbb
xchg
lods
dec
jg
test
mov
mov
popf
lret
loop
jo
xor
bound
inc
pop
aas
cmp
pop
std
enter
push
sbb
sbb
aas
add
aas
add
xchg
adc
scas
mov
popa
cmp
dec
pop
pop
adc
fwait
in
dec
sti
mov
xor
fs
or
xchg
adc
dec
mov
push
jecxz
and
mov
cmc
jb
test
push
je
mov
enter
mov
ds
xlat
icebp
mov
mov
pop
insb
mov
jg
cld
lret
dec
es
push
sahf
lock
aam
jecxz
mov
jb
jge
sbb
fwait
jl
pusha
dec
jp
jne
and
loope
or
sub
scas
mov
fcoms
jge
mov
cld
mov
imul
jo
clc
fdivrl
pop
sub
xor
mov
lock
imul
lods
add
loopne
pusha
xchg
adc
jp
xlat
clc
test
or
cli
scas
mov
sbb
lret
enter
test
leave
out
scas
es
enter
movl
cmp
lret
push
jp
stc
or
add
push
add
push
or
push
xor
or
lods
mov
jns
popa
dec
les
xchg
mov
adc
vpshufhw
leave
stc
int
je
dec
daa
or
sbb
sbb
loop
inc
cmp
outsl
mov
insb
ljmp
mov
lcall
mov
sarl
push
out
mov
mov
adc
cmp
add
add
subb
shrl
or
xchg
iret
leave
filds
or
loope
arpl
mov
dec
cmp
dec
addl
test
cld
notl
cmp
mov
dec
sub
sub
adc
inc
enter
mull
test
xor
cmpsb
imulb
jns
push
jle
push
adc
push
adc
popa
cli
cmpsl
sub
push
cwtl
xlat
dec
mov
jl
loop
repz
mov
pop
push
cmp
push
push
repnz
call
pxor
jp
adc
gs
dec
in
mov
jne
add
cs
rep
and
push
or
sahf
mov
jg
inc
xchg
xchg
fwait
push
xor
push
cmp
sar
jnp
or
inc
dec
or
push
adc
adc
out
mov
or
aam
shlb
cmp
adc
ret
or
jae
mov
imul
lret
xchg
jg
sbb
pushf
ds
sar
fldenv
mov
fstpl
into
inc
jl
les
xor
popa
lds
jo
nop
mov
lret
jecxz
or
and
pop
xchg
ds
pop
int3
mov
sub
push
jl
xchg
and
sbb
adc
fldl
sbb
je
scas
adc
mov
mov
cmp
mov
mov
cld
and
je
mov
imul
jl
loop
ja
lods
popf
out
add
jg
add
mov
mov
jb
hlt
dec
insl
icebp
iret
mov
dec
ss
push
jns
in
or
xor
stos
loop
leave
fbld
in
out
loope
inc
sub
or
jmp
xor
mov
mov
mov
fisubrl
jne
sbb
lret
xor
jae
ljmp
cmc
vpcmpeqw
mov
shlb
rcll
xlat
xchg
mov
fistl
jmp
insb
fstpt
js
out
mov
imul
lods
ss
inc
inc
mov
insl
sub
lds
inc
jne
insl
jge
or
ljmp
int
inc
pop
mov
fimuls
rorl
scas
mov
xor
stos
insl
jo
stos
mov
shll
jo
mov
mov
xchg
mov
cmp
orl
ljmp
imul
gs
outsb
incb
test
xorb
stc
scas
shr
lods
mov
mov
sarl
aaa
mov
dec
push
mov
adcb
test
iret
or
mov
mov
xorb
pop
fists
lahf
shlb
sub
lds
xor
jle
mov
jmp
mov
sub
mov
rcr
mov
cs
xor
shrb
mov
into
in
inc
testl
adc
xchg
inc
mov
fnstsw
and
push
jp,pt
inc
cmp
daa
and
flds
nop
pop
cmp
dec
cltd
mov
xor
rorl
jmp
sub
lock
test
xlat
inc
lock
nop
dec
scas
ret
pop
add
sub
xchg
push
addr16
mov
inc
insb
mov
cmp
addb
ljmp
out
xchg
outsb
pop
jp
stos
xor
adc
movsb
sub
scas
outsl
lock
fs
inc
inc
pop
ja,pt
loop
add
lock
and
outsb
mov
jne
repz
push
inc
scas
cmc
movsb
or
mov
iret
mov
push
pop
int3
jp
add
test
jne
mov
and
repnz
xor
xorb
cmpsl
in
jp
mov
fs
inc
xor
imul
mov
sub
inc
mov
mov
jge
sub
jecxz
lods
aam
jo
ror
cltd
push
inc
aas
es
mov
cmp
adc
ret
lods
xor
or
cmp
movsl
pop
mov
mov
cmp
cmp
jo
sub
xlat
das
pop
js
jle
test
mov
add
mov
fsubrl
mov
ret
mov
xor
ret
dec
sbb
and
xlat
scas
daa
sub
sbb
js
clc
jp
dec
mov
lea
pop
cltd
add
out
lret
dec
sub
lret
aas
outsl
jae
mov
gs
call
insl
das
push
pop
rcrl
or
xchg
hlt
int3
lret
jge
scas
out
pop
out
lret
leave
push
lret
jge
cld
repnz
jge
fiadds
xchg
push
aam
adcb
movsb
push
mov
push
dec
or
incb
cld
sub
push
sbb
pop
lods
mov
pushf
imul
iret
addb
loopne
fisttps
sub
dec
add
or
popf
lds
lahf
test
clc
nop
iret
sub
or
test
and
push
inc
inc
hlt
rorl
fmull
push
andb
add
or
adc
xor
imul
testl
test
push
mov
mov
and
call
in
aaa
and
lahf
fstp
enter
inc
dec
push
inc
cmp
inc
stos
popf
shll
fiadds
xor
es
inc
and
nop
repz
pusha
cmpsb
movsl
dec
clc
ss
push
arpl
imul
in
xor
cmpsl
xchg
xchg
dec
lret
cmp
mov
jg
xchg
into
adc
fsubl
push
enter
inc
jmp
or
fldt
stos
int3
int3
data16
inc
sub
test
xlat
and
cmp
add
fdivrl
lcall
dec
or
mov
push
pop
xlat
pop
mov
push
adc
xchg
push
adc
jg
adc
xchg
cld
push
adc
lahf
pop
pop
clc
mov
pop
sbb
iret
nop
push
aad
lea
int
prefetchnta
leave
je
pop
pop
mov
in
cld
xchg
push
jmp
push
sbb
xchg
lret
ficomps
cmp
rcll
pop
negl
add
lahf
dec
or
or
mov
push
pop
adc
push
adc
or
adc
in
int3
sti
push
test
mov
add
shll
int3
xchg
pop
ret
xchg
nop
inc
xchg
fsubs
xchg
push
mov
add
xor
iret
or
adc
mov
fxch
nop
insb
adc
mov
rcll
mov
fst
and
mov
mov
scas
addr16
adc
leave
sbb
rcl
xchg
push
je
jp
dec
adc
push
mov
stc
mov
cli
push
mov
mov
movsl
dec
lahf
jbe
mov
push
cmpsl
fs
cmp
mov
dec
push
ss
mov
adc
shll
nop
ret
xchg
nop
jo
movsl
or
dec
pop
mov
test
ror
aad
ret
sbb
fsts
shlb
push
cmpsl
cld
sbb
rol
ret
mov
push
and
mov
or
mov
test
push
mov
iret
sbb
jbe
sarl
fldcw
pop
scas
ja
push
fisttps
inc
pop
test
cmpsb
xor
mov
adc
push
xlat
lret
mov
xchg
jbe
leave
mov
mov
scas
pop
fcomip
nop
arpl
inc
cmpsl
or
fdivs
scas
push
leave
fstps
fstp
mov
mov
adc
push
rcl
jge
mov
scas
leave
faddl
mov
stc
inc
fnstcw
fmull
cmpsl
mov
cmp
stos
ret
and
push
adc
push
push
scas
leave
pop
int3
movsl
or
jbe
lret
mov
push
jbe
or
scas
lahf
dec
mov
jp
adc
jge
mov
inc
enter
adc
or
ds
test
jno
lret
ja
fs
sti
rcrl
push
fsub
jp
mov
ja
xchg
cwtl
cli
popa
rcll
js
cwtl
test
inc
pushf
int3
adc
jb
jg
data16
ret
mov
mov
lds
leave
sub
imul
fsubs
dec
sahf
stc
cmpsl
bound
inc
aam
mov
nop
push
outsb
enter
and
jg
mov
cld
fcmovb
js
inc
shlb
aad
fldl
lds
lcall
popa
ror
arpl
nop
sub
imul
or
xchg
lea
int
or
adc
xor
inc
stc
adc
mov
mov
lds
jb
bound
inc
mov
int3
fs
push
test
push
jbe
xchg
cwtl
lods
test
rclb
movsw
jnp
sbb
and
mov
movsl
cwtl
cwtl
into
outsb
fisttps
ret
push
lds
pop
push
rorl
mov
push
nop
inc
cmpsl
mov
inc
xchg
ficoms
adc
dec
lcall
xchg
jno
ljmp
xchg
nop
lret
mov
cmp
mov
int3
xchg
loopne
mov
mov
xchg
push
cwtl
lds
lds
mov
adc
imul
mov
ret
push
pop
mov
xchg
add
adc
lcall
xlat
sbb
jno
je
push
arpl
sbb
mov
arpl
sub
lea
roll
mov
dec
repz
rcll
outsb
sbbb
push
mov
dec
scas
push
xchg
sub
sbb
subb
sub
push
fsub
out
xor
fs
fcmovnu
in
jb
sbb
sbb
fists
xchg
sub
or
mov
sahf
aaa
mov
loope
xchg
enter
sub
push
mov
xchg
inc
ffreep
pop
nop
pop
or
pop
cmp
cmp
cmp
adc
int
mov
xchg
sahf
dec
fidivs
pop
cld
cmp
mov
dec
cmp
cmp
push
mov
dec
shll
push
add
test
cs
xlat
movb
scas
out
cltd
pop
pop
loopne
pop
stos
jno
cmp
sub
leave
fadd
xlat
inc
xchg
or
push
loopne
dec
ror
mov
loopne
mov
adc
stc
aam
and
cmp
cmc
jp
popf
fadd
push
push
rorb
dec
fdivrs
add
mov
outsl
bound
mov
xor
lcall
lods
pop
orb
les
pop
sub
fdivrl
popf
inc
fstps
mov
ret
mov
xchg
aad
jecxz
sub
data16
sub
arpl
xorb
outsb
stos
les
and
cs
dec
sbb
fbld
fisubrs
je
repz
jno
jb
test
push
cltd
xchg
jl
filds
add
pop
rorl
test
cmc
loope
dec
test
mov
popf
cli
aaa
jns
xor
lret
sarl
mov
mov
xlat
std
arpl
sbb
vpcmpeqw
pop
push
inc
xchg
jns
aad
ret
enter
jbe
out
jp
push
jns
stc
lds
lock
jbe
push
pushf
pop
adc
or
mov
imul
cmp
dec
pop
sbb
sbbb
inc
or
in
push
cmp
dec
jle
rcll
aaa
mov
inc
push
push
add
cli
jno
pop
fs
popa
add
dec
jl
and
jecxz
and
shrb
mov
pop
or
testl
push
into
sbb
es
lcall
or
sub
lret
add
loopne
daa
bound
outsb
jp
dec
adc
cmp
test
push
mov
cld
mov
movsl
test
fs
jo
outsb
jp
lods
jecxz
cld
stc
or
mov
sub
xor
fnsave
jl
in
push
sub
lcall
jmp
in
test
dec
loop
mov
push
pop
sbb
adc
rclb
gs
bound
rorl
jp
inc
cmp
cmpsl
sub
inc
hlt
mov
roll
sbb
mov
pushf
jle
filds
mov
dec
test
or
mov
mov
lods
sbb
les
jle
xchg
pop
push
mov
cmpsl
mov
call
outsb
int3
mov
lods
int
jmp
sbb
aam
fcmove
repnz
inc
sbb
arpl
lcall
dec
mov
add
lods
xchg
mov
push
pusha
adc
addr16
push
adc
cmp
fldcw
pop
jns
aad
cmp
roll
mov
pop
pop
xchg
pop
inc
mov
sbb
andl
inc
call
push
imul
icebp
mov
mov
push
in
daa
in
jl
pop
push
add
adc
into
pop
pop
mov
push
push
and
inc
mov
shl
add
lcall
test
leave
push
out
stos
inc
pop
addr16
mov
jns
js
xchg
cmp
pushf
push
pop
push
and
cwtl
or
mov
mov
scas
inc
clc
ljmp
xchg
mov
or
or
push
stos
pop
aam
loop
mov
repnz
mov
mov
xchg
cmp
mov
push
mov
insb
dec
lods
int3
dec
je
cmc
and
subl
nop
adc
cmc
xchg
mov
xor
enter
cs
out
jp
arpl
mov
in
jp
sub
into
jge
pop
push
cmp
push
or
fldenv
adc
outsb
add
lea
inc
pop
cmpsb
dec
push
push
xchg
jns
aas
stos
push
les
sub
jo
pop
jecxz
shlb
sti
jl
inc
cmp
lods
loope
mov
or
mov
orb
enter
mov
test
int3
inc
mov
pushf
or
inc
inc
mov
fidivl
push
dec
mov
sub
fmull
stos
pop
cmp
mov
in
lret
int
mov
icebp
cmpsl
pop
add
out
mov
or
dec
sub
mov
stc
aam
fucomip
movb
addr16
shll
pusha
movsl
popl
jbe
mov
mov
dec
lea
sub
jle
test
and
inc
mov
or
int
idiv
dec
mov
mov
sti
aaa
add
test
jns
pop
jle
leave
iret
movsb
int3
and
mov
and
cli
mov
repz
leave
sbb
fistpll
lods
and
pop
aam
inc
push
jge
test
cld
ret
mov
sbb
mov
lcall
mov
cltd
rorb
xchg
out
dec
lret
mov
sbb
fistl
jnp
nop
stos
sbb
add
mov
mov
pop
dec
sub
int3
mov
add
jl
sti
pop
int3
jb
adc
or
dec
mov
stos
insl
inc
sahf
xchg
xchg
add
mov
pop
dec
cmp
lret
sub
cmp
sbb
in
and
test
rcrb
inc
push
xchg
push
stos
adc
or
pushf
xchg
mov
sub
test
dec
xlat
mov
xchg
test
outsb
dec
lcall
sub
or
outsb
push
les
dec
aam
andb
fistpl
push
enter
fstpt
lret
pop
sub
cmpsl
iret
pop
mov
push
cltd
xchg
mov
cmp
test
or
add
adc
test
je
mov
and
pop
mov
ja
jns
push
xlat
and
ret
sub
cmpsl
sbb
out
sahf
enter
rcrb
or
incl
ret
enter
push
jmp
push
out
cli
jmp
and
daa
push
mov
pop
sbb
rorl
dec
push
mov
jp
and
pop
mov
daa
inc
xchg
cmp
dec
xor
push
xlat
test
vorps
or
push
imul
pop
cmp
dec
sbb
sbb
mov
mov
mov
int3
cmp
add
add
lods
push
leave
cltd
stos
fmulp
mov
sub
cmpsl
rclb
push
or
adc
xlat
jne
leave
lcall
sub
sbb
xchg
in
or
loopne
int
cli
xor
nop
jns
add
mov
mov
xchg
fcmovnu
xor
lods
jo
xchg
or
scas
outsl
dec
je,pn
push
mov
test
pop
ret
into
mov
sbb
cltd
lea
sbb
or
sahf
cld
aam
lret
hlt
outsl
je
or
idivl
insb
jae
or
mov
jecxz
dec
test
rcr
pushw
pop
loop
out
sahf
xchg
ljmp
cmc
push
outsl
addb
aaa
mov
loope
lods
push
adc
cmp
adc
stc
adc
loopne
push
arpl
in
insb
mov
sti
mov
mov
jmp
mov
je
push
push
enter
ljmp
in
mov
notl
add
cmp
arpl
pop
loop
pop
dec
jecxz
shlb
cmp
lret
cmp
cmc
xor
inc
mov
push
in
ret
pushf
nop
jl
xor
pop
mov
notl
sub
sbbl
jns
rolb
int3
ds
fldenv
aaa
xor
inc
insl
out
mov
cmpsb
dec
mov
dec
mov
adc
inc
pop
out
mov
std
orb
roll
sahf
and
mov
enter
push
mov
je
sub
insb
es
mov
sub
test
mov
les
sbb
aam
fucomp
jbe
int
cmpsb
jnp
inc
and
fsubrl
lds
lock
sub
shll
and
mov
test
jmp
orl
in
hlt
mov
pop
or
pop
push
mov
xor
or
stos
shlb
cmc
popa
sub
sbb
aaa
out
mov
push
movsl
push
shrl
mov
imul
jg
xor
push
mov
imul
inc
in
sar
cwtl
mov
adc
and
incl
in
jp
rol
insb
aas
mov
leave
pop
repz
addl
clc
and
mov
sub
sub
and
mov
int
pop
cltd
cmp
mov
out
movsb
js
test
sbb
bound
sar
les
cli
pop
lea
sbb
cli
into
pop
ret
push
mov
xchg
pop
stos
sub
fsub
dec
or
dec
dec
fldl
fidivrs
fidivrs
hlt
lods
mov
mov
add
mov
ljmp
xchg
cli
mov
jp
lret
jns
push
inc
pop
cmpsl
in
mov
inc
jle
pop
cltd
imul
jmp
addr16
lret
mov
imul
jns
sub
aad
in
stc
lods
jo
cli
imul
or
ret
popa
push
sub
sarl
mov
jle
pop
cltd
fs
leave
mov
faddl
movl
test
fisubl
outsb
shlb
cmp
lock
mov
scas
lods
ss
aaa
cmp
mov
enter
jp
in
inc
mov
test
sub
rorl
push
xor
inc
dec
shrb
mov
iret
mov
leave
pop
dec
popa
jb
cli
stc
lods
jo
mov
into
adc
sub
rcrb
mov
lea
fs
ret
nop
pusha
jp
inc
dec
adc
dec
dec
dec
inc
dec
inc
or
mov
jo
and
or
xchg
ret
lods
arpl
mov
popf
dec
mov
pop
pop
mov
stos
enter
test
sarl
int
fmuls
dec
or
cmp
jl
lahf
sbb
push
cmp
mov
sub
xchg
inc
rcl
push
stos
add
mov
xchg
jmp
mov
int
jns
lret
adc
enter
mov
scas
dec
in
mov
imul
sub
ja
int3
repz
cmp
xor
pop
repnz
sub
jl
lcall
push
jns
add
popa
push
les
xchg
mov
pop
or
xlat
loopne
shl
test
jns
outsl
popf
popa
lods
test
ja
int
jo
nop
dec
adc
popa
sub
leave
inc
adc
or
add
cmp
cwtl
stc
cmp
mov
inc
xor
addr16
int3
daa
xchg
mov
in
jbe
mov
in
push
sahf
shrl
movsb
movb
rol
cmpsl
nop
pop
mov
pop
jl
les
mov
sbb
sbb
adc
add
inc
add
hlt
dec
inc
push
out
and
imul
insb
adc
popl
loopne
in
add
loope
loope
fcmovne
jbe
dec
adc
jecxz
pop
add
mov
push
pop
sbb
daa
pop
icebp
jp
cltd
mov
cmp
gs
aam
mov
mov
mov
cmp
jecxz
daa
dec
adc
cmp
gs
loope
ss
sbb
sbb
gs
and
pop
sbb
sti
push
jecxz
push
add
in
pusha
sbb
mov
fwait
loope
ret
jno
cmp
fwait
jg
xchg
std
in
pop
xor
sahf
shlb
jecxz
lea
fwait
incl
push
gs
stos
mov
fildll
jl
xchg
lcall
ljmp
inc
dec
mov
nop
leave
push
fldl2t
jo
test
ljmp
leave
insb
push
lods
imul
jmp
mov
and
loop
loope
and
pop
lcall
leave
fldcw
inc
addr16
out
lcall
test
gs
and
dec
es
out
cmpsb
push
jecxz
lcall
pop
push
pusha
and
pop
leave
sbb
int3
lahf
pop
lcall
shrl
inc
aam
xchg
push
lcall
lret
inc
push
int3
pop
xlat
lcall
fsubrs
inc
push
int3
adc
push
les
leave
push
adc
lcall
jl
daa
jl
addr16
ds
inc
push
xchg
push
cmp
les
inc
stc
int3
mov
cli
les
fimull
in
lcall
cld
cltd
leave
pop
push
les
lret
lcall
int3
leave
or
dec
inc
mov
fcoms
les
leave
shrl
inc
int3
add
lcall
iret
push
adc
lcall
int
mov
push
into
lcall
lret
push
mov
or
les
inc
xlat
int3
cwtl
pop
lcall
adc
int3
xchg
lcall
push
push
adc
add
mov
inc
jnp
inc
test
int3
or
lcall
add
int3
movl
mov
aam
mov
mov
jb
xor
lcall
ljmp
inc
or
add
cmp
inc
jle
ds
lcall
mov
cmp
stc
mov
cli
leave
pop
push
dec
xchg
push
leave
push
inc
add
mov
jo
mov
cmp
js
push
test
imul
imul
and
stc
jecxz
dec
dec
jl
mov
dec
jmp
lods
fnstcw
jns
jnp
mov
movl
cmp
adc
ret
mov
inc
mov
pop
add
outsl
fistl
mov
xchg
clc
mov
mov
jg
insb
add
push
cli
xor
mov
lret
inc
push
lret
push
ret
or
scas
inc
fistpl
fistpl
fisttpl
test
addb
movl
inc
mov
rol
adcb
pop
add
mov
nop
jl
inc
test
jl
adc
jl
cld
mov
and
cld
rorb
aaa
fldenv
stc
ret
mov
rorb
iret
lret
jns
inc
imul
dec
ret
cwtl
or
int
ret
jns
dec
leave
lret
or
lcall
dec
dec
cmp
or
scas
lret
xchg
jl
push
jl
pop
cld
ror
xlat
cld
and
lds
insl
xchg
push
fisttpl
stc
popa
push
stc
pop
push
xchg
outsl
push
stc
pop
adc
or
stc
mov
and
cmp
aam
rcll
push
and
adc
mov
push
out
adc
ficomps
nop
movsl
jns
mov
mov
pusha
pushf
mov
mov
mov
inc
outsb
sbb
push
sahf
cld
insl
int3
fistps
or
cld
mov
jae
stc
in
stc
out
stc
push
leave
pushf
stc
test
xor
sub
movsl
cltd
xchg
sti
mov
lcall
fidivl
fistl
daa
fcmovnbe
out
andb
mov
call
test
xchg
gs
movsl
mov
sub
movsl
xchg
incb
cmpsb
mov
and
mov
mov
push
push
movsb
mov
and
mov
mov
push
and
dec
loop
push
mov
xor
out
das
ret
ret
loopne
ret
shll
lret
int
ret
les
push
lret
sub
lret
lods
repz
subb
imul
cld
jbe
cld
cmc
imul
sub
mov
cld
cli
insb
cli
mov
xor
sub
lret
in
lods
mov
imul
lret
jmp
lret
push
shrb
cmpb
stos
adc
ja
shlb
cmpb
mov
sarb
mov
lret
clc
mov
mov
fldenv
xor
into
mov
cmp
or
cld
adc
cld
xorb
fabs
xor
xchg
repz
nop
mov
repnz
out
je
fnstenv
aad
dec
mov
fldcw
fistl
pushf
jg
mov
mov
inc
in
jl
mov
mov
loope
cld
pop
cld
sarb
inc
dec
std
lret
je
xor
scas
aaa
or
push
mov
cld
in
sub
out
cmp
sti
out
mov
or
push
cmp
add
lods
ret
dec
sub
clc
or
movsb
sub
inc
push
adc
push
or
inc
mov
dec
xor
mov
pop
imulb
jno
into
inc
aam
inc
xchg
adc
sub
cltd
sbb
nop
and
cli
or
mov
sbb
push
movsl
std
scas
jmp
lcall
gs
cmp
xchg
or
inc
add
gs
cmp
xorb
or
xchg
mov
rorb
addr16
jo
test
lods
sahf
leave
xlat
popf
sarb
imul
add
mov
in
fs
pop
popa
insl
pusha
mov
shr
push
sub
dec
je
es
mov
out
xor
cmp
in
enter
or
or
lods
ret
leave
or
test
jo
scas
sahf
jge
sbb
mov
jp
mov
insb
nop
jo
aad
loope
enter
dec
dec
jp
or
addr16
jb
add
xchg
jae
mov
fwait
inc
dec
adc
int
pop
pop
adc
adc
pusha
setl
aaa
and
mov
ret
cmpsb
out
cwtl
jne
mov
pushf
and
or
mov
mov
mov
ret
clc
mov
rcr
loope
aaa
and
add
popa
mov
rol
or
fadds
mov
xor
mov
adc
lret
loop
xchg
lcall
mov
lret
shll
gs
in
push
fcmovnu
adc
sbb
dec
ret
push
sti
sahf
pop
sub
mov
dec
pop
leave
loopne
rcrb
adc
ret
jo
mov
pcmpgtb
mov
push
jbe
inc
or
lds
dec
movsb
inc
push
aam
jle
jae
mov
cmp
pop
pop
enter
in
mov
fidivrl
mov
inc
outsb
xor
xlat
or
rcrb
cltd
enter
and
push
sbbb
ret
pop
jmp
mov
add
icebp
gs
add
cmpsl
shrl
dec
je
scas
jns
mov
lret
mov
outsb
sub
cmpsb
xchg
cltd
js
jl
pushf
mov
cld
test
xor
stos
scas
test
fidivrs
jecxz
mov
mov
test
add
push
cmp
test
dec
mov
cs
mov
add
mov
addb
mov
shll
sarb
jp
push
pop
testl
ja
addr16
fisubs
sbb
test
jecxz
cmpsl
popf
inc
xchg
clc
jle
loope
dec
cwtl
enter
or
add
out
scas
subb
mov
cmp
stc
mov
push
shrb
movsb
aam
mov
cmpsl
cmc
jnp
push
adc
lret
sbb
mov
jb
lea
nop
iret
loop
mov
fdivr
jl
mov
xor
cmp
mov
mov
lods
adc
int3
clc
mov
mov
or
cmp
mov
dec
dec
ss
push
sub
rolb
das
inc
test
gs
mov
repnz
jmp
mov
adc
xchg
pop
add
clc
cld
jp
pop
pop
or
cmp
mov
push
push
cld
sbb
push
inc
push
outsb
dec
jae
add
xor
mov
push
sbb
nop
and
mov
out
jbe
add
imul
sbb
popf
lods
adc
mov
sahf
fmuls
inc
lahf
int3
cltd
fs
fwait
mov
or
pop
cmp
push
xchg
pop
dec
or
xor
aam
jle
js,pt
fmuls
outsb
into
pop
adc
inc
adc
lcall
inc
or
mov
xchg
mov
fldl2e
jbe
hlt
add
bound
mov
push
adcl
fcmovnb
push
sbb
insb
leave
mov
aas
loop
jp
ja
lods
xor
ljmp
hlt
shll
add
or
fwait
jle
jp
nop
lea
inc
aam
adc
xchg
jne
mov
dec
nop
iret
mov
inc
idivb
out
or
fxch
cmpsl
and
mov
jmp
cld
loope
loop
ror
cltd
xchg
nop
lahf
sub
divl
mov
int
lea
popa
test
mov
lea
push
iret
int
inc
cltd
mov
dec
add
push
nop
int
pushw
xchg
ljmp
xor
mov
and
mov
sar
add
popa
xor
cwtl
fnstsw
mov
dec
adc
pop
fsubl
mov
and
test
mov
fmuls
jp
adc
cmp
mov
inc
popa
jg
jb
jl
push
inc
jmp
fcomps
jp
loopne
shlb
divb
mov
xor
mov
lea
es
jg
mov
pop
and
les
int3
aam
mov
dec
int3
mov
or
lret
xchg
cmp
push
lret
mov
push
les
adcb
inc
pop
sub
int3
int3
inc
mov
dec
leave
test
int3
lret
mov
pop
in
popa
mov
sbb
xchg
stc
push
fmull
adc
jnp
sbb
and
dec
lea
test
add
popf
mov
mov
aas
xor
sahf
test
insl
aaa
or
cmp
les
xor
dec
fmuls
mov
adc
dec
gs
xchg
in
mov
adc
cltd
popa
add
add
call
sbb
fistps
and
push
popf
les
sbb
dec
nop
movsb
jns
push
adc
or
test
add
test
mov
stos
out
jmp
push
fsts
hlt
dec
fnstcw
fs
jmp
add
ret
lds
add
push
pop
mull
subb
cmp
mov
add
add
mov
lods
test
ja
pop
ljmp
test
test
xchg
out
push
imull
cmp
in
ljmp
dec
jp
ljmp
idiv
mov
je
jg
test
or
sbb
cmp
mov
xor
or
sahf
mov
pop
out
or
dec
mov
jnp
call
jmp
dec
dec
nop
mov
mov
inc
jmp
sbb
gs
xchg
imul
mov
mov
dec
pushf
mov
mov
out
test
test
cmp
adc
dec
push
mov
test
jns
mov
sub
pop
gs
add
dec
fdivs
sbb
sbb
push
jno
rclb
nop
test
outsb
dec
andb
out
loopne
cmp
cltd
jbe
ja
scas
jl
in
cmc
xor
adcl
mov
cmovp
shll
mov
adc
push
mov
test
add
push
addr16
nop
fnstenv
adc
ds
enter
mov
dec
inc
cs
rol
mov
mov
sub
mov
inc
cmpsb
inc
mov
out
imul
dec
xchg
fwait
push
jge
ret
mov
add
icebp
call
adc
icebp
xor
mov
dec
lods
les
imul
out
jno
pusha
sahf
in
push
inc
add
xchg
cmp
pop
or
push
mov
cmp
pop
dec
call
inc
add
loopne
out
jne
or
into
je
cmp
mov
xchg
lock
xchg
mov
sub
adc
pop
mov
sub
sub
xchg
cmp
sub
xor
dec
dec
out
fnstcw
sbb
mov
adc
enter
jnp
fnstsw
ljmp
jae,pt
lcall
test
dec
sbb
mov
shrb
mov
xchg
add
ljmp
sbb
and
jbe
dec
dec
add
push
shlb
inc
out
xor
dec
leave
xor
add
adc
xor
or
lods
nop
mov
add
fwait
cmpsl
iret
xor
or
nop
int
or
push
sbb
lcall
cmp
bound
loopne
repnz
outsb
xor
in
inc
insl
int
in
shrb
rcrl
lcall
movsb
les
mov
clc
adc
mov
jmp
push
mov
ret
sbb
and
jp
cs
mov
push
push
imul
test
pop
ret
lds
push
int3
mov
lea
arpl
aad
xor
inc
sub
lods
pop
push
daa
pop
imul
rolb
mov
jge
dec
hlt
jnp
aas
into
stos
je
or
jo
lds
es
xchg
add
psadbw
pop
dec
mov
addr16
dec
mov
in
gs
sub
push
jo
jne
fisubrs
cmc
and
push
mov
int
addr16
in
ficomps
mov
int
add
inc
dec
jnp
push
lods
or
inc
iret
dec
add
clc
orb
call
jle
jle
push
test
jle
out
mov
and
push
inc
mov
jns
or
push
ret
out
popa
xchg
fmuls
fsubrl
xabort
inc
aam
pop
pop
add
std
test
leave
push
aas
les
nop
xchg
pop
pop
lods
pop
cmp
ss
dec
test
push
jae
or
aaa
push
push
sbb
dec
dec
inc
loop
out
xchg
test
lods
pop
sbb
xchg
cmc
scas
jo
das
mov
imul
add
div
mov
loop
xchg
push
in
mov
sbbl
cmp
roll
dec
movsb
test
xor
in
mov
mov
popa
jne
lods
mov
mov
xchg
mov
test
jle
mov
or
leave
sub
cs
ljmp
bound
repz
xlat
adc
addl
pop
xchg
sahf
ret
test
add
inc
lods
inc
fildll
pop
dec
dec
cs
add
xor
inc
fildll
test
lcall
test
inc
int3
pop
js
mov
adc
cli
gs
es
xor
mov
adc
push
lret
dec
enter
ss
and
lods
or
inc
outsl
push
jl
in
lods
loope
inc
xor
adcb
push
in
ds
inc
imul
ficompl
lret
push
dec
push
ret
dec
lock
xchg
nop
xor
or
push
lods
stos
jg
scas
clc
add
mov
or
test
sbb
jp
in
push
dec
and
xor
inc
or
xor
sti
push
imul
sarb
fcomi
test
data16
in
cs
out
test
popa
aam
popa
adc
sbb
cmp
push
sbb
jp
jle
adc
test
mov
or
outsb
in
les
popf
ret
mov
dec
and
cld
inc
into
push
dec
js
push
pop
push
ret
stos
mov
cmp
jne
int3
fmuls
inc
jge
int3
addr16
ds
jge
mov
hlt
loop
mov
xor
jmp
xchg
fs
ljmp
inc
and
imul
repnz
in
push
and
mov
and
rcrl
pusha
mov
bound
jno
pop
in
mov
inc
mov
mov
dec
ret
push
mov
cs
cmp
cmp
gs
jb
outsb
xchg
rorb
add
scas
outsb
imul
outsb
ss
sbb
fs
mov
adc
enter
mov
pop
in
jnp
push
in
ljmp
cmpsl
std
lret
lcall
iret
sbb
dec
insl
daa
loop
js
icebp
das
insb
jne
sub
stc
sbb
outsb
cmp
mull
adc
insl
aam
sbb
dec
loope
mov
popl
mov
xchg
push
stos
je
jno
imul
or
outsb
dec
mov
into
mov
enter
loop
movsb
mov
jmp
mov
stos
sub
ret
lcall
or
rol
fldcw
jne
out
mov
rcrl
mov
sub
mov
inc
cld
sbb
cmp
adc
ljmp
aam
insl
inc
std
or
pop
addr16
cltd
push
and
pop
and
mov
cltd
adc
lds
push
jp
dec
mov
pop
in
outsl
ss
lret
jl
lcall
jecxz
cmp
adc
mov
into
xchg
jle
enter
push
popa
fiadds
movsl
movsb
cli
out
lods
push
add
pop
loop
push
sub
add
xchg
mov
mov
jge
mov
cmp
push
cmp
pop
and
iret
psllw
xchg
mov
test
jmp
inc
dec
je
andl
out
add
orl
mov
out
popf
push
repz
nop
cmc
cmpsb
test
sub
test
inc
jb
ja
rolb
iret
xchg
aam
int
addr16
cmpsl
dec
xor
fadds
mov
and
adc
push
xchg
idivb
fwait
mov
shlb
lea
fsts
add
xchg
aam
int
addr16
cmpsl
int
ret
sbb
andb
movl
aas
rcrl
xlat
psubw
jae
fiaddl
imulb
xchg
xchg
mov
xlat
xor
and
in
jbe
cmovs
xor
jg
aad
push
ja
sbb
jbe
mov
push
mov
stos
sub
mov
ja
jp
xchg
addr16
lea
adc
mov
popf
cld
ljmp
mov
push
jecxz
test
insl
cs
dec
dec
enter
movsb
lods
xor
mov
push
iret
xchg
ljmp
jle
inc
test
xor
and
sti
inc
or
sti
test
repnz
adcb
test
adc
ljmp
aam
cmpsl
inc
add
mul
or
fstps
xchg
stos
jp
lods
push
jecxz
test
sti
sub
and
cmp
jge
add
mov
xchg
lret
loop
xor
outsl
dec
aaa
les
xor
and
arpl
test
push
fsubr
shlb
xchg
cmc
mull
movsb
cmp
int3
mov
je
cmp
fiaddl
cli
in
insl
dec
push
and
add
test
mov
mov
jmp
loopne
jmp
mov
cwtl
xlat
fwait
loopne
and
aad
test
mov
adc
ja
jns
repz
gs
push
sbb
push
xchg
je
add
stc
mov
sub
ret
push
pop
repz
mov
sub
sub
popa
jp
or
mov
pop
mov
lods
fisubs
inc
nop
adc
fidivrs
fdivrl
cs
push
into
push
mov
dec
jno
mov
inc
mov
or
push
mov
mov
jnp
scas
mov
mov
mov
mov
popf
jb
mov
xchg
jle
push
mov
mov
out
jb
int
mov
mov
jg
sbb
rol
arpl
push
hlt
inc
test
jb
xchg
lods
int
add
je
jg
adc
int
add
sti
das
adc
jb
push
jbe
inc
add
loopne
mov
ja
fmull
pop
popf
mov
icebp
adc
fldpi
sbb
test
into
js
cltd
cwtl
dec
lds
daa
gs
fwait
gs
repnz
adc
sub
pop
repz
mov
inc
jae
sbb
jne
push
pop
test
mov
pop
sub
bound
push
and
pop
lods
cmpsl
or
jno
or
out
test
test
int
data16
xchg
test
repz
sub
mov
adc
xchg
cs
jmp
enter
and
iret
and
dec
push
jg
mov
or
test
push
inc
jo
mov
xchg
fs
inc
jae
cmp
ljmp
adc
cmpl
adc
cmp
add
inc
rolb
outsb
inc
cmp
sti
mov
adc
aas
xchg
xchg
jl
call
xchg
add
fcomps
shlb
fdivs
push
movsl
fs
or
imul
jbe
dec
aaa
jo
and
add
cmpsl
ret
cmp
cmc
aam
sbbb
dec
mov
xor
mov
xchg
xor
sahf
xchg
push
insb
adc
adc
mov
incl
add
xchg
pop
nop
fdiv
mov
or
add
adc
push
push
mov
and
xor
adc
int
mov
ja
vmread
adc
in
loopne
ja
push
inc
test
inc
dec
push
mov
test
dec
dec
push
movsl
bound
nop
test
add
int
fs
decb
adc
repz
mov
out
add
das
cmc
jnp
loop
push
push
pop
inc
pop
cld
mov
fsts
cld
sti
in
cmp
xor
loopne
mov
pop
or
jmp
adc
test
dec
jecxz,pn
xor
pop
int3
sti
inc
cmc
mov
out
or
inc
dec
jmp
dec
mov
mov
sti
pop
sbb
cmp
dec
adc
fdivrs
js
lahf
xchg
cmpsl
or
pop
sti
ljmp
and
test
fwait
adc
ljmp
sub
pop
pusha
sub
aas
sub
push
lods
fmuls
jg
dec
add
sti
push
divl
jne
or
xor
jg
push
xor
or
imul
dec
lret
xor
add
jge
xor
fldl
pop
mov
ljmp
out
push
test
in
das
fisubl
adc
mov
subl
cmpsb
add
nop
dec
test
or
xor
movsb
and
loopne
jp
cltd
fnstsw
in
xor
jne
in
pop
mov
jle
insl
in
adc
cmp
or
dec
cs
out
cmp
push
mov
dec
dec
cs
movsl
lcall
push
add
jns
mov
pop
mov
xor
out
mov
out
mov
sub
arpl
out
lret
test
cmp
ljmp
rcll
dec
shll
ljmp
pop
les
mov
mov
or
pop
fs
not
retw
insl
icebp
push
ret
repz
adc
fwait
adc
sti
cs
push
insl
negb
out
xor
addr16
out
in
daa
fisttpl
sub
mov
pusha
sbb
adcl
add
lods
and
add
andl
popa
mov
xchg
lret
aas
popa
orl
jp
in
pop
mov
inc
cmp
test
jno
add
xchg
jmp
jmp
mov
push
sbb
adc
xchg
bound
jmp
dec
push
int
mov
dec
jp
mov
pop
lods
pop
bound
sub
cld
cmp
scas
hlt
xorl
jb
clc
inc
and
aam
mov
pop
dec
insb
fwait
xchg
pop
dec
cld
out
and
das
sbb
out
jb
loopne,pn
ret
addr16
mov
das
jae
cmp
add
loopne
dec
and
incl
jo
push
pushf
xlat
dec
mov
inc
cmp
ret
imul
push
int
cltd
jae
popf
xchg
add
inc
xchg
cmp
js
test
repz
lods
dec
pushf
and
pop
sbb
dec
das
inc
xor
xchg
call
lcall
dec
sbb
fdivrl
inc
sar
cmp
fsubl
adc
dec
add
fcoms
popa
xor
std
dec
decb
loop
pop
lahf
sbb
adc
outsl
decb
adc
pop
jecxz
ret
pop
jmp
jmp
jnp
in
rcrl
cmp
mov
shlb
pop
out
jle
sub
stc
xor
dec
ds
mov
stc
cld
lods
mov
scas
test
xchg
leave
pop
sub
std
jns
and
jg
test
dec
xor
stos
pop
neg
adcw
mov
pop
fcmovne
sub
push
jns
mov
std
decl
movsb
inc
sbb
lret
stc
adc
lret
mov
stc
into
mov
stos
insb
int
mov
adcl
sbb
js
lds
sti
mov
sti
pushf
jmp
ret
in
stos
stos
stc
aaa
mov
lret
in
inc
lret
lods
ret
dec
inc
jp
fstpt
mov
or
fbstp
add
push
push
scas
mov
jnp
mov
inc
mov
adc
mov
cmc
push
lret
xlat
cmpsl
xlat
int
ror
inc
jl
mov
nop
inc
es
inc
push
mov
iret
mov
lret
add
push
or
mov
push
xchg
lds
fildl
bound
int3
sarl
ror
inc
sbb
lds
mov
add
mov
leave
fldt
sarb
enter
addr16
enter
iret
mov
popa
lds
xchg
lods
sub
push
stc
or
mov
cmp
je
nop
lds
nop
pop
inc
movl
nop
mov
int3
test
push
add
addl
flds
test
movsb
mov
ret
fisttps
mov
lret
or
stc
sub
mov
mov
stc
scas
mov
popf
lds
stc
mov
stc
stc
je
sbb
pop
add
mov
jp
fsubrs
ljmp
cltd
iret
push
push
mov
mov
imul
out
add
add
fistpl
push
test
shll
inc
inc
fistpl
stc
fistpl
faddp
mov
aad
mov
push
mov
xor
pop
lea
pop
adc
ret
mov
iret
push
ret
test
jg
mov
pop
je
adc
xor
imul
mov
pushf
ret
mov
lds
jle
mov
iret
sbb
xlat
xchg
dec
data16
lock
pop
mov
add
scas
out
pop
push
fcmovne
push
fcmovnb
mov
lods
fdivrl
ficomps
cltd
pop
fs
mov
scas
lret
fdivrl
jle
dec
pop
sbb
sbb
fistps
iret
imul
xor
aad
mov
int
xlat
addr16
fisubl
xlat
scas
aaa
stc
or
inc
xchg
fnstcw
sbb
daa
or
rorl
test
call
xor
pushf
mov
fbld
dec
lods
test
int
jle
add
test
cmpsl
loop
rcrl
aas
mov
sub
mov
mov
mov
je
outsl
pop
fmul
mov
mov
jnp
fldt
stos
stos
aad
stc
out
mov
fidivrs
cmpsl
ljmp
cmpsb
sub
mov
mov
iret
sub
fisubrl
mov
mov
hlt
jecxz
stc
mov
test
mov
scas
mov
aaa
cmp
mov
pop
mov
jp
mov
mov
int
dec
mov
mov
or
mov
enter
ror
xor
jle
scas
jb
fldcw
into
dec
mov
push
fildl
mov
lcall
mov
fiadds
cmp
cmp
iret
dec
shl
add
cmpsl
mov
push
int
mov
mov
rcll
mov
mov
filds
loopne
ret
cmp
pop
add
mov
pushf
pusha
cmp
fxch
pushf
mov
dec
fildl
ror
push
mov
jecxz
stc
mov
jae
ficomps
jns
je
jns
dec
push
fxch
fstpt
stc
int
mov
pop
cltd
scas
mov
adc
stc
jo
mov
fnstenv
xor
popf
pushf
loopne
lds
mov
lods
mov
mov
mov
stos
ljmp
pushf
insl
aad
iret
mov
ja
xlat
xchg
mov
fildl
push
jle
out
lret
mov
cli
lds
adc
je
inc
xchg
push
push
int3
insb
lahf
ror
cld
sbb
ret
leave
ss
cwtl
push
mov
adc
pop
lret
je
push
pop
std
stc
fwait
inc
or
mov
ficoms
shrl
mov
jb
xor
mov
cld
fcoms
inc
mov
cmpsl
cmp
fs
enter
lods
das
mov
inc
mov
sarl
stc
jno
mov
ret
mov
sbbb
lods
mov
dec
cmp
dec
mov
mov
and
iret
test
nop
mov
jle
lods
sub
int3
pop
movsl
mov
lret
cwtl
mov
test
pop
mov
ret
aad
test
xlat
sub
push
shrl
mov
cltd
fildll
lds
mov
push
lods
cmp
lret
rcrb
mov
test
lods
mov
fwait
add
je
pop
push
cld
je
mov
scas
in
je
in
stos
lods
mov
call
lret
data16
dec
int3
fwait
dec
loope
fisttps
mov
jle
cmpsl
iret
bound
cmpsl
mov
mov
mov
sub
stos
stos
pushf
into
sub
into
mov
mov
movsb
ret
ja
int3
mov
xor
mov
mov
mov
fdivl
mov
jp
inc
test
pop
xchg
adc
mov
test
call
shl
mov
jp
lock
mov
leave
mov
add
mov
stc
adc
stc
rorl
xchg
push
lods
mov
cli
test
mov
mov
cmpl
sub
ds
scas
cmpl
scas
subl
lret
out
stc
loope
add
fidivrl
arpl
push
test
lds
push
push
lret
dec
mov
lock
jo
das
mov
inc
test
pop
popf
sub
mov
dec
fisttpl
sub
mov
mov
stos
stos
jp
int
testl
or
roll
pop
inc
jl
mov
cld
cld
mov
aam
bts
push
fs
xlat
pop
leave
shll
ret
jecxz
les
scas
mov
jp
cltd
mov
jp
loopne
fldt
jp
push
mov
int
lret
cmpb
dec
push
jae
push
mov
fmull
fs
fldlg2
lret
cmove
push
sar
shll
dec
ffreep
inc
cmpsl
addb
mov
mov
cmc
test
jl
stos
jle
stos
sub
pop
loopne
pop
add
loope
cwtl
lds
leave
mov
add
cmp
rcl
sahf
mov
aaa
test
icebp
fsts
iret
in
arpl
rolb
sbb
cmpsl
ja
add
mov
leave
imul
es
cld
mov
lret
pop
cmpb
lods
test
lds
data16
cli
mov
mov
mov
pop
or
inc
sub
aad
pop
or
repnz
xlat
pop
cmp
fsubrl
addr16
ja
inc
sub
enter
dec
fists
lcall
rcrl
js
add
ret
push
push
mov
add
fbstp
or
ret
ret
xchg
add
loopne
icebp
cli
test
inc
mov
cmp
xchg
or
shrl
mov
fistps
cmp
int
mov
xor
les
dec
xlat
je
pop
push
pop
scas
fidivrl
sahf
lds
jl
cld
gs
cmp
addr16
stc
rcll
ret
scas
lods
or
mov
adc
jnp
add
loope
cmp
cwtl
iret
mov
cmp
mov
lds
mov
ror
mov
imul
test
cld
popa
leave
push
mov
lds
xlat
insb
mov
sbb
stc
cltd
inc
cld
inc
inc
cmpsl
enter
fcmove
int
adc
stc
fbstp
lods
adc
roll
stc
stc
mov
icebp
ret
int3
push
out
fsubl
scas
mov
aam
mov
cmp
movsl
iret
je
movsl
sub
push
xlat
pop
fldenv
sbb
or
ret
iret
xchg
add
stos
jo
dec
lds
mov
cmpsl
orl
aad
cli
cltd
testb
sub
fdivp
leave
xchg
cli
xchg
ffree
adc
xlat
daa
and
fwait
rorb
fs
push
mov
and
ds
cmpsl
sar
fildll
dec
fs
insl
cmp
mov
rorl
xchg
cld
cld
and
push
out
adc
cmp
lret
dec
push
mov
popa
add
inc
int3
jb
mov
lds
loopne
iret
aam
xchg
add
xlat
add
cmp
fldl
cld
cld
ret
iret
sub
mov
pop
inc
leave
jb
cmpsl
sbb
loopne
or
test
mov
fld
jmp
pop
add
fcomps
movsb
pusha
fildl
push
cmp
jb
scas
pop
push
ret
mov
cli
cltd
push
pushf
cs
pop
lods
lods
dec
cli
jg
pushf
cli
mov
or
sub
outsb
cli
or
jmp
mov
inc
mov
cltd
into
xor
inc
push
adc
push
lret
cmp
fstpt
pop
xchg
mov
clc
dec
outsb
pop
mov
lea
mov
sub
or
sub
jo
lret
stos
jmp
and
ret
or
shll
sti
push
xor
fildll
or
or
fstl
mov
ret
mov
movsl
popa
stos
mov
enter
and
dec
push
dec
mov
fisttps
fsts
cs
popa
iret
movsb
ret
cwtl
cli
mov
cmp
xor
and
mov
push
mov
xchg
add
stos
or
mov
dec
mov
fstpt
jbe
xadd
fbstp
shll
pop
mov
fs
inc
push
flds
xor
lds
cmp
or
fisttpl
mov
jmp
mov
mov
shll
test
test
je
das
sub
jno
test
add
scas
mov
lods
mov
mov
fisttps
stos
or
aas
mov
icebp
adc
lret
mov
shrl
mov
adc
stc
fistpll
test
lods
mov
cmp
add
fstpt
lods
mov
mov
jg
nop
movb
mov
fistpll
pop
hlt
scas
mov
jl
enter
aam
mov
xchg
mov
xchg
sub
pop
xchg
iret
sti
lods
xor
fmul
jns
lds
or
repnz
jo
cs
add
lds
inc
dec
push
cmp
dec
loopne
cli
or
test
or
push
fsts
mov
inc
lcall
inc
out
data16
mov
les
mov
ror
aam
mov
test
inc
adc
dec
push
lcall
add
lea
inc
dec
int3
prefetch
push
push
cmp
notl
lret
add
test
fdivr
sti
cmp
test
inc
je
insb
pushf
lcall
mov
push
fistl
jecxz
dec
rorl
mov
inc
iret
mov
mov
jmp
xchg
iret
pop
mov
lock
fcoms
movl
fildll
pop
add
rcr
sub
jmp
daa
mov
fcomip
int
repz
mov
jo
nop
fnstsw
push
and
mov
pop
ret
stos
push
jmp
stos
inc
xchg
les
out
ret
jmp
je
xchg
loop
xor
aad
mov
in
adc
pop
sbb
mov
lret
ficomps
lock
pop
jmp
sbb
mov
test
mov
mov
incl
repz
mov
mov
pop
jecxz
stc
mov
lods
rol
cmp
jmp
leave
lods
fstp
int3
mov
sbb
or
sbb
mov
mov
mov
testb
add
movsl
aad
aam
fsub
mov
adc
adc
inc
inc
aaa
dec
cmp
ja
jnp
mov
push
sub
mov
xchg
imul
dec
aas
inc
xor
jg
jae
mov
pop
and
mov
lahf
arpl
jns,pt
dec
cmp
jle
imul
sub
outsb
sahf
cltd
mov
inc
mov
xor
cmpb
test
mov
push
and
xchg
popa
xchg
gs
mov
mov
popf
mov
lret
push
sbb
mov
or
mov
and
cli
fistpll
cmpsb
jns
ret
mov
pop
mov
cld
xlat
mull
je
mov
enter
cli
jp
jp
cld
cli
xchg
enter
or
inc
mov
jl
add
mov
fidivrs
into
fsub
int3
add
stc
xchg
lret
test
cld
test
cli
mov
andb
sbb
mov
cmp
cli
cmp
jl
sarb
mov
ret
leave
shrb
inc
int3
cmpsb
lcall
fisubrs
inc
jl
pop
dec
lcall
push
push
sub
cmp
les
leave
pusha
push
pop
dec
lcall
push
push
es
lcall
pop
push
pop
dec
lcall
push
push
and
dec
les
inc
inc
int3
daa
push
lcall
pop
push
and
xor
les
leave
pop
push
pushf
mov
fs
xchg
push
push
nop
les
mov
int3
lcall
leave
xchg
push
xchg
lcall
sahf
push
cltd
mov
popa
leave
xchg
push
gs
lcall
popf
push
addr16
lcall
lahf
push
arpl
les
fwait
push
mov
aaa
stc
call
xchg
inc
mov
cmp
adc
les
xchg
inc
mov
cmp
cmp
les
xchg
inc
mov
cmp
add
les
xchg
inc
mov
cmp
push
xchg
inc
mov
cmp
push
xchg
inc
mov
cmp
push
xchg
inc
mov
cmp
push
xchg
inc
mov
cmp
cmp
les
xchg
inc
mov
cmp
add
les
xchg
inc
mov
cmp
add
cmp
adc
cmp
or
cmp
sbb
cmp
pop
xchg
inc
mov
cmp
pop
xchg
inc
mov
cmp
setae
cmp
pop
xchg
inc
mov
cmp
add
les
xchg
inc
mov
cmp
or
les
xchg
inc
mov
cmp
mov
push
int3
xlat
lcall
leave
push
int
ffree
cld
leave
int3
push
enter
dec
loopne
cmp
aam
mov
add
in
adc
sbb
xor
loopne
sub
mov
cli
leave
push
jp
lcall
inc
push
mov
test
cmp
or
cmp
push
push
pusha
jl
cld
out
mov
stc
mov
cmp
add
mov
inc
int
or
enter
inc
pusha
add
xchg
movb
orl
inc
mov
inc
mov
dec
mov
pop
mov
mov
enter
inc
inc
dec
or
xchg
fucomi
jmp
mov
jns
mov
inc
incb
dec
enter
xor
mov
xlat
test
mov
mov
mov
int
loopne
jns
xchg
cli
rcl
fsubrs
iret
fcoms
out
jno
mov
push
scas
test
sub
mov
mov
mov
push
adc
lods
pop
call
test
mov
cld
add
mov
dec
add
dec
sbb
adc
and
inc
in
in
hlt
fnstcw
mov
outsl
cmpl
ret
int3
xchg
mov
xchg
dec
xchg
les
xor
dec
cld
les
stc
push
iret
dec
lret
adc
mov
movsl
dec
pop
je
cmp
stc
add
pop
cmp
xchg
fidivrs
and
cmp
orb
inc
sub
daa
rcll
cld
lds
sub
mov
fdivrp
fisttpl
outsb
mov
and
orb
scas
shl
jp
inc
js
iret
stc
mov
orl
aad
and
cwtl
fstpt
cmp
fistps
fnstcw
mov
mov
add
stc
pop
movb
inc
fsts
dec
mov
adc
ret
mov
fisttps
mov
mov
js
stc
enter
fisubl
mov
jl
movl
mov
inc
sbb
sub
jl
cli
loop
sub
cmp
cs
jl
mov
loope
leave
mov
jo
mov
shrl
cmp
add
mov
inc
pusha
dec
int3
push
mov
inc
adc
xor
pop
mov
mov
das
lret
dec
xor
lods
iret
sahf
mov
or
push
pop
loopne
popf
adc
xchg
aam
fstpl
test
sahf
push
iret
clc
out
inc
enter
mov
popa
iret
out
inc
aad
in
rcll
mov
cmpsl
mov
jmp
cmp
lcall
loopne
fwait
mov
sahf
inc
dec
cmp
stos
sahf
jne
stos
dec
mov
or
scas
mov
cli
adc
inc
jno
test
pop
test
shll
call
enter
nop
cmpsl
jmp
adc
adc
xchg
mov
adc
mov
addb
int3
movsb
hlt
lcall
dec
xchg
les
stos
pop
daa
ffree
push
or
lods
push
das
cmpsl
lret
fcomp
or
aam
cs
lret
ffreep
mov
leave
mov
fimuls
rorl
cld
inc
push
and
adc
shl
jp
xchg
jge
loopne
stos
stc
loope
rcr
dec
xchg
loopne
xchg
fistps
inc
ret
fmulp
dec
inc
mov
insb
cmpsl
pop
lret
insb
pusha
popf
and
popf
push
inc
fldcw
xchg
mov
and
mov
xchg
pop
mov
rcll
xchg
nop
enter
cs
or
xchg
xchg
popa
cwtl
lcall
mov
fsubp
xchg
pusha
adc
sub
xchg
and
popf
pusha
stc
ret
and
cmpsl
sub
jns
mov
add
les
je
daa
cmp
inc
mov
push
dec
sub
and
cmp
mov
pushf
rorb
fxch
lods
fcmovb
loop
loope
push
les
int3
shrl
incl
jnp
lock
in
pop
je
mov
xchg
mov
repz
mov
clc
fidivs
leave
or
leave
outsl
pushf
lock
push
movsl
adc
nop
pop
or
sbb
int3
xchg
lods
lcall
sbb
mov
rcll
mov
mov
andl
fnstcw
fisubrs
dec
lds
stos
pushf
iret
sub
mov
pop
leave
aad
inc
push
push
mov
mov
ret
fldt
sbb
sub
pop
sbb
jmp
mov
out
ja
imul
add
xchg
rcrb
mov
xchg
sbb
pop
xchg
pop
and
inc
adcb
out
int3
int3
adc
les
stc
sbb
cwtl
mov
adc
mov
push
mov
repz
and
int
lods
ds
adc
jbe
pop
test
inc
push
add
mov
lds
iret
dec
ret
repz
aaa
stc
fcoml
scas
xchg
xor
fst
push
int3
cmp
dec
mov
scas
xor
mov
lock
in
add
aam
leave
jecxz
dec
mov
sub
notb
adc
fs
aas
cmpsl
jp
stos
mov
add
stos
incl
mov
dec
cmp
inc
lahf
shl
or
mov
or
aaa
sbbb
add
fildll
fcmovnu
fwait
xchg
mov
push
fstl
rcl
mov
jp
push
adc
lahf
add
inc
and
call
dec
xchg
loopne
iret
ret
xchg
int3
mov
dec
test
xchg
push
push
xchg
and
es
inc
int
xor
rorl
pusha
sub
mov
pop
and
rclb
mov
repz
jo
fs
xchg
inc
pop
rorb
pushl
iret
xor
fists
xor
pop
xlat
int
pusha
rol
adc
and
adc
xor
pop
mov
xchg
lods
cmp
push
adc
xor
scas
shr
and
dec
pop
cmpsl
aam
and
call
mov
push
leave
cld
push
les
or
or
cmpsb
and
xchg
hlt
lret
dec
int3
imul
rol
sahf
mov
jecxz
ds
sub
xor
mov
xlat
xlat
jnp
jno
sahf
sub
sbb
out
sub
jns
stos
mov
or
jecxz
inc
xchg
and
pop
frstor
xchg
dec
fxch
add
sarl
popf
loopne
insb
lahf
xlat
pop
ret
call
mov
lcall
das
int3
scas
out
stos
rorl
and
loop
into
mov
dec
pop
aad
int
jo
push
rorl
arpl
pop
fsubs
pop
sbb
mov
stos
fs
fisttps
les
fildl
lret
fidivrl
mov
mov
mov
lds
rorl
je
mov
aaa
rcr
xlat
mov
push
int3
iret
fstpt
sahf
stos
dec
and
lcall
scas
pop
lret
dec
ficompl
push
ret
cmp
dec
mov
lds
xor
jno
mov
mov
mov
xchg
mov
mov
jo
sbb
mov
inc
xchg
into
xlat
lock
rcr
daa
out
test
push
jmp
arpl
fbld
out
stc
aam
sbbl
xchg
bound
mov
mov
mov
mov
inc
mov
cmpsl
pop
lret
cwtl
or
adc
push
sbb
push
mov
outsb
add
mov
stc
iret
insl
lods
ret
lret
cmpsb
leave
in
fsubl
mov
mov
sub
rorl
repz
cld
fs
jmp
outsl
mov
mov
cld
push
dec
mov
or
enter
cmpsb
lcall
pusha
xchg
pop
mov
aas
xchg
fstl
sub
arpl
and
mov
jns
mov
dec
push
dec
dec
xchg
dec
mov
loopne
mov
xchg
jle
mov
jp
dec
and
push
dec
mov
nop
and
mov
dec
out
sbb
ret
pop
sahf
int
les
cmpsl
cmpsl
into
movsl
mov
push
inc
loopne
cmpsl
push
fstl
aaa
or
addr16
int
sarl
pusha
das
sbb
rol
inc
fisttps
shlb
cs
mov
bound
int
pop
leave
sub
pop
addr16
adc
jne
fsubrs
out
inc
mov
mov
outsb
es
sub
xlat
in
or
test
insb
popa
adc
std
pop
stos
push
int3
fidivrl
out
stc
test
pop
ret
sbb
negb
cmp
xchg
pop
sahf
adc
jns
lods
int
adc
pop
movsl
dec
sub
push
pop
lods
push
shrl
inc
add
pop
cltd
sbb
xchg
sub
aam
push
dec
movsl
pushf
int3
mov
mov
aaa
fs
int
orb
xor
std
dec
lahf
aam
jno
adc
jns
jns
jl
sub
or
cwtl
mov
mov
nop
test
test
push
fbstp
ficoms
mov
stc
cli
fisubl
mov
rol
lods
mov
fldl
sub
js
xchg
jns
in
mov
in
leave
sar
sarb
leave
shll
xchg
mov
fcmovb
and
iret
loop
xlat
dec
jle
iret
pop
stc
int
jo
mov
mov
xor
sub
fldt
push
fnstcw
xchg
push
fiadds
in
add
mov
mov
jo
xchg
int
mov
les
lret
daa
mov
mov
stc
inc
lds
adc
xadd
adc
add
shrl
je
mov
stc
pop
or
cmpsb
xchg
scas
mov
dec
fbld
movsb
mov
movsl
stos
mov
or
pop
mov
cmp
fistpl
aam
aad
mov
pop
hlt
mov
xchg
fisttps
xchg
xchg
cmp
dec
bound
dec
cld
xorb
cld
loop
mov
xchg
fcmove
out
mov
loope
test
mov
sub
jb
and
adc
xchg
repnz
push
sub
mov
cltd
inc
shl
adc
inc
sahf
xchg
data16
les
mov
int
out
and
mov
mov
jle
push
pminsw
xchg
mov
icebp
mov
cmpsl
lds
lcall
ret
mov
dec
mov
leave
lret
mov
or
stos
out
mov
fs
push
mov
aam
adc
fmulp
mov
outsl
dec
enter
ffreep
mov
inc
pop
or
test
aad
push
push
xchg
fsubrs
mov
vmaxss
or
pop
std
repz
pop
fxch
push
sahf
inc
and
sahf
rcrl
cmpsb
or
sar
mov
stc
dec
mov
in
iret
test
incb
cmp
and
stos
xor
loop
test
push
in
or
lret
movl
sbb
mov
mov
lahf
or
pop
ret
mov
leave
dec
inc
stc
pop
nop
ret
xchg
xor
je
ud0
push
xchg
scas
lahf
push
repnz
cli
lret
pop
cmp
in
test
mov
dec
je
add
movl
out
mov
xchg
sahf
push
rcrl
inc
cmp
cld
fadd
lret
int3
test
sahf
int3
mov
cld
into
inc
ror
sbb
int3
es
sub
fcom
addb
sub
xchg
popf
movsb
jp
fsqrt
mov
popf
stc
lahf
frndint
into
int
mov
cld
les
ss
ljmp
lret
dec
mov
dec
leave
mov
xlat
pop
dec
jnp
or
fcom
int3
int
xchg
ds
cmp
shlb
mov
frstor
daa
stos
jne
adc
sbb
int3
xchg
cmp
pop
xlat
les
rclb
pop
cli
dec
iret
push
int
xchg
ret
cmpsl
xchg
push
sarb
xor
mov
pop
and
push
les
test
ret
rorl
dec
loopne
jp
push
shll
adc
push
lret
enter
mov
ret
and
xor
fmul
fbld
mov
shll
rcll
negb
mov
shrl
rcrl
adc
jne
movzwl
cmp
nop
adc
fistpll
testl
daa
dec
jp
mov
inc
loop
leave
les
jo
xor
inc
inc
add
iret
sub
mov
lea
xor
mov
pusha
lahf
sub
testb
or
pop
xlat
ss
mov
loopne
dec
ret
outsl
cltd
lea
shll
mov
repz
cmp
add
push
cwtl
addl
test
sub
out
push
xchg
mov
or
add
mov
mov
lret
outsl
or
push
add
test
xlat
xchg
jne
ret
test
into
xor
xchg
popf
pop
es
lret
cmp
pop
mov
mov
shll
lahf
xor
sbb
test
loop
insb
cmp
mov
es
sbb
sub
mov
mov
ss
push
push
lret
nop
sub
sbb
sub
and
cltd
mov
sahf
pop
test
push
xorl
rcrl
lret
push
shrl
aam
ret
test
inc
add
push
mov
loopne
cmpsl
test
outsb
dec
sbb
out
pusha
ror
xchg
add
stc
pop
dec
add
rcl
and
stc
cmpps
adc
xlat
addr16
add
leave
mov
ret
dec
jns
inc
pop
and
push
ds
cmp
fisubrl
dec
rcrl
int
movsl
or
stc
cwtl
mov
xchg
xor
fwait
lret
inc
cs
dec
xchg
add
fidivl
pop
cmp
das
jl
cld
mov
rorl
ror
aad
leave
or
mov
pop
cwtl
add
lock
fistps
fstpl
cmp
mov
pop
sarb
lods
and
popf
push
sarb
sti
std
repz
sub
dec
cmp
int3
ja
sub
mov
jl
dec
mov
roll
mov
dec
xchg
jns
jo
shll
outsb
lcall
lret
mov
icebp
pop
push
clc
insb
call
mov
lods
xchg
mov
fdivl
sub
popf
sbb
enter
mov
sbb
adc
cmp
nop
add
mov
ror
mov
pop
xchg
sbb
imul
rcrl
pop
rol
push
pop
mov
fisubs
mov
cwtl
jae
pop
push
stos
mov
and
outsl
add
lret
cmpsl
iret
or
adc
imul
sahf
push
test
ret
int
loope
jnp
icebp
sbb
dec
lret
jg
and
mov
jle
sub
in
push
mov
mov
cmpl
rcl
mov
or
lcall
xchg
pop
sub
popf
stos
shr
insl
aam
push
cmpsl
xchg
jmp
enter
int
pop
fisubl
movsb
xlat
cmc
mov
leave
frstpm(287
lret
jae
mov
xchg
repnz
xor
adc
fcmovb
add
adc
shlb
inc
sub
or
sti
shll
dec
imul
jp
arpl
aam
pusha
loope
mov
sbb
add
test
stc
sub
cld
aam
pusha
imul
and
cmc
and
sbb
cld
inc
mov
lods
scas
mov
leave
in
ret
sahf
inc
leave
dec
mov
pop
stos
aam
pop
lods
xchg
rcll
shrl
cmpsb
iret
lret
mov
and
mov
lods
leave
mov
int3
aam
lcall
cld
mov
mov
mov
fcomps
inc
test
stos
movsb
arpl
fidivl
jne
cmp
xor
pop
outsl
add
dec
jmp
add
pop
inc
ret
jbe
push
movl
scas
inc
arpl
test
cmp
stc
lret
add
xor
mov
mov
scas
je
bound
lret
lret
enter
jo
bound
rorl
lret
enter
mov
mov
jl
lods
mov
subb
fiadds
cmp
stc
and
lret
int3
lds
enter
lock
mov
ds
mov
and
int3
subb
mov
cmpsl
leave
fimuls
mov
loop
pop
mov
pop
add
loop
leave
loop
ret
int3
sbb
enter
jbe
push
test
mov
lret
sub
ret
mov
cld
mov
enter
xlat
mov
mov
int3
sbb
enter
mov
fxch
mov
or
stos
test
add
mov
sub
xlat
pop
add
outsl
mov
shrl
int3
sbb
enter
lds
mov
cmpb
mov
pushf
lret
enter
lret
mov
xlat
pop
lret
das
xchg
mov
add
das
test
mov
mov
int
int
mov
rol
jnp
mov
mov
out
int3
hlt
lret
loope
xor
out
test
lahf
aad
lret
enter
test
mov
or
enter
mov
pop
lahf
into
pushf
int3
ret
xchg
enter
mov
push
rcl
mov
sbb
test
aad
mov
lret
lret
enter
xor
into
pushf
lret
enter
push
xlat
jo
lods
rcrl
enter
test
sarb
enter
jecxz
int
xor
mov
lds
test
imull
xor
mov
int3
xchg
test
sahf
lods
add
test
cld
mov
mov
fistpll
inc
jns
ret
lock
test
shl
lods
fldt
mov
or
jbe
push
test
mov
enter
fyl2xp1
mov
add
mov
int3
enter
fldcw
dec
lods
rcl
mov
inc
cmp
mov
sbb
test
mov
scas
mov
mov
enter
sub
insl
test
imul
leave
insl
lods
shl
mov
dec
ror
mov
mov
in
stc
add
mov
sub
aad
dec
stc
sub
sub
push
enter
cmpsl
shr
add
mov
enter
mov
scas
mov
mov
subb
ffreep
in
out
lret
enter
pop
inc
shr
stos
mov
fcmovnbe
mov
andb
dec
lods
mov
push
xlat
lret
int3
mov
enter
jmp
lds
int3
or
jecxz
leave
ficoms
ds
push
mov
inc
fldcw
mov
lods
and
movsl
enter
push
mov
clc
inc
loopne
movsl
enter
scas
mov
outsb
out
int3
sbb
enter
jbe
enter
xlat
mov
int3
cmpsl
enter
scas
ja
mov
mov
xorb
sub
cs
pushf
int3
iret
lret
sbb
and
or
int3
fcmovne
xchg
lret
push
xlat
add
sahf
stos
add
int3
mov
enter
mov
out
out
rcll
enter
mov
lods
rorl
out
jbe
enter
movsl
mov
or
lods
lods
outsl
shll
dec
stos
push
in
mov
or
inc
roll
into
enter
mov
pop
leave
scas
mov
mov
sbb
pop
mov
movsl
inc
scas
dec
pushf
into
lods
lret
sbb
and
add
into
imul
mov
mov
int3
sbb
enter
mov
push
jo
andb
cmp
mov
lods
and
push
frstor
mov
flds
iret
sub
enter
je
adc
hlt
fisttpl
rcrl
lods
xor
sub
aad
shl
xlat
int3
mov
add
mov
enter
mov
shll
sbb
push
pop
rcl
ss
ret
xchg
inc
dec
mov
fldcw
lods
xlat
ss
cmpsl
jno
mov
xlat
stc
stos
out
int3
sbb
enter
xlat
mov
push
stos
mov
pushf
int3
rcll
stos
mov
rcl
jl
adc
test
push
cld
cltd
iret
fyl2xp1
insb
mov
cmpsl
jl
es
jns
int
jl
shll
insb
dec
leave
inc
lods
leave
cmp
cmp
leave
stc
inc
cmpsl
adc
into
mov
pop
cmpsl
push
enter
jns
insb
stc
mov
movsl
aam
leave
mov
cmp
ret
sub
mov
xchg
mov
repz
nop
cld
cmpsb
mov
stos
sbb
mov
scas
jb
test
je
mov
stc
enter
mov
mov
stc
stos
mov
movsl
std
fdivs
sub
fmul
in
aam
fisubrs
popa
mov
addr16
inc
stc
test
dec
mov
mov
in
fs
mov
enter
cmpsl
fs
imul
lods
stc
lds
imul
fadds
rol
push
fs
enter
repz
inc
popa
sub
fdivs
dec
movsl
test
pop
mov
lods
mov
xchg
movsl
stc
leave
lods
mov
enter
or
test
inc
cld
mov
mov
mov
jp
mov
ss
stos
mov
mov
rol
imul
mov
shrl
leave
fdivr
repnz
shll
xchg
aad
push
add
iret
aam
pusha
int
cmp
mov
cltd
sub
xchg
xchg
stc
ffreep
sub
add
sub
sub
mov
mov
push
cmp
add
sahf
mov
cld
lcall
sbb
rclb
fidivrl
cltd
int
push
lret
dec
ret
push
adc
add
lret
dec
imul
xlat
push
ret
movsl
insl
shrl
sbb
mov
jecxz
jo
outsl
or
add
sahf
mov
cmp
sub
mov
std
fldl2t
add
imul
lcall
mov
pop
xor
scas
xor
test
mov
push
mov
push
adc
cltd
xlat
push
rcl
cmpb
ret
rolb
push
stc
incb
scas
push
fldcw
mov
xor
ror
push
stc
sub
mov
int
iret
test
mov
rclb
xorb
mov
dec
test
iret
lds
stc
test
lds
in
mov
daa
int3
cmp
pop
cmp
aad
add
adc
fstl
or
cmpsl
leave
lahf
mov
scas
pushf
stc
out
mov
ljmp
lds
mov
lret
dec
pop
pop
addb
xlat
lret
xor
int
mov
fistl
test
stc
adc
fistpll
or
lock
or
mov
mov
stos
test
shll
ja
fnstcw
shll
xchg
inc
dec
lcall
lret
adc
cmp
lds
cmpsl
test
frstor
aaa
mov
lcall
mov
fmul
add
xor
fildll
enter
add
shl
enter
enter
or
flds
aaa
inc
mov
push
fiaddl
fdivrl
inc
daa
push
int
rorl
fucomip
mov
enter
mov
fcmovne
xor
mov
mov
leave
cmp
mov
out
mov
inc
dec
int
mov
mov
lret
mov
cmp
in
int
dec
mov
shll
fsts
shll
sar
fldcw
shrl
stos
out
lods
and
sub
xorb
repnz
xor
js
stc
into
dec
je
pusha
inc
int
rcll
add
cmpsl
js
or
pusha
int
lods
outsl
rcl
into
mov
mov
sbb
mov
cmpsl
mov
movsl
mov
pop
mov
cmp
scas
fbstp
xlat
insl
leave
test
shll
or
push
and
mov
decl
push
mov
lret
pop
jle
int3
cmp
add
call
inc
gs
clc
push
and
mov
and
lods
inc
stos
test
jecxz
icebp
cld
mov
int
shrl
cmp
nop
mov
lcall
ffree
cmpsb
fstl
lret
out
dec
roll
lret
push
or
add
push
mov
test
stc
sub
lds
les
jp
hlt
fcmovne
test
adc
mov
jne
lret
or
jne
mov
popf
das
lods
jne
or
pop
mov
xor
fildl
xor
inc
mov
loop
push
insb
mov
cmpsl
mov
repz
ret
call
mov
pop
fcmovu
inc
ret
or
stc
add
sahf
lret
enter
lret
xchg
xlat
push
stc
aad
loopne
roll
mov
ffreep
stos
jmp
inc
cmc
imul
test
shrw
leave
xchg
mov
mov
sbb
movl
fldl2t
sbb
xchg
lods
xor
sbb
adc
inc
mov
sub
xchg
out
shl
int
dec
stc
les
inc
jp
stos
cmp
stc
lret
mov
pop
mov
inc
ffree
fbld
mov
cltd
fildll
mov
mov
mov
int3
lds
int
sbb
leave
push
test
jns
mov
roll
addb
mov
into
mov
ret
outsl
xlat
xchg
mov
mov
or
ss
fmul
sahf
push
int
stc
or
lret
push
pop
mov
xchg
xlat
push
leave
test
mov
jno
push
imul
lret
lcall
hlt
push
shll
push
sub
cwtl
mov
lods
xlat
into
lret
addr16
into
shll
cmpsl
mov
push
lods
inc
mov
int3
mov
dec
lret
xorb
or
fadd
push
adc
lods
xor
sub
iret
xor
and
addb
leave
mov
aad
stc
rorl
lret
fstp
insl
cmpsb
mov
and
adc
subb
mov
cmp
dec
jae
mov
stc
insb
ficoms
add
int
ret
pop
ror
fnstenv
mov
cmp
leave
imul
rcrl
fisubrs
fcmovnu
inc
sbb
fld
xor
scas
pusha
lods
mov
enter
lods
movsl
mov
sbbb
mov
lods
xchg
cli
fwait
push
test
rorl
or
ror
lods
adc
inc
mov
int3
roll
fmulp
pop
push
add
dec
int3
mov
lcall
test
inc
inc
int3
mov
lcall
cld
xchg
inc
push
push
push
lcall
push
push
add
test
add
repz
sbb
and
int3
les
or
xor
shlb
sbb
fldl2t
inc
fldl2t
ret
dec
fldl2t
leave
fldl2t
push
fldl2t
aam
jmp
fldl2t
daa
fldl2t
cmpsb
fldl2t
and
jmp
fldl2t
mov
jmp
fldcw
fistl
xor
dec
xor
int3
xor
pop
xor
shll
pop
xor
fidivs
pop
xor
mov
mov
test
mov
ss
cmpsl
push
stc
je
xchg
mov
test
je
fbstp
mov
aad
jp
mov
test
push
sub
pushf
and
iret
lret
stc
int
or
into
leave
lret
stc
xor
pop
rcl
xchg
iret
push
shrl
aad
fstps
stos
cli
stc
movsl
popa
shrl
scas
scas
popa
shrl
mov
push
push
pop
iret
xor
fcomi
rol
pop
cltd
hlt
in
test
ret
hlt
xor
outsb
flds
mov
lods
fbld
push
lods
movsl
rcrl
inc
fldl
sbb
mov
xor
xorb
xor
lods
xchg
xchg
mov
movsb
and
fucomp
out
mov
imul
int
stc
iret
jae
dec
inc
mov
or
lcall
cmp
jbe
pop
in
mov
pop
rol
or
mov
sbb
push
mov
mov
mov
addb
mov
dec
mov
push
leave
loop
sub
stc
aam
cmpsb
leave
mov
icebp
and
inc
rcr
leave
jno
jno
aaa
roll
ffreep
xchg
iret
enter
fcmovu
or
sbb
inc
xchg
int3
cld
aam
fstp
jo
jno
test
add
or
subb
imul
dec
stc
les
leave
mov
fildl
ficompl
ret
stc
add
push
in
rcll
xor
mov
dec
mov
pop
mov
out
into
es
mov
mov
and
mov
int
mov
aad
mov
lret
lcall
mov
rcll
mov
test
ja
imul
xchg
lods
pusha
mov
inc
push
aad
jo
pop
adc
sbb
aad
addb
or
test
lds
shrb
test
add
xchg
rorl
rorl
push
int3
jl
addr16
pusha
mov
fnstenv
mov
mov
mov
push
mov
stc
fsts
mov
push
add
shrl
mov
push
mov
js
mov
loopne
inc
jns
ljmp
xchg
fld
out
mov
fstl
xchg
sbb
rcl
mov
test
xlat
mov
movsl
push
xlat
in
das
scas
or
mov
leave
xorb
pop
lcall
lcall
fcmovu
dec
fcmovu
lret
imul
pushf
stc
push
lret
orb
mov
lcall
stos
mov
movl
shll
mov
ret
sbb
scas
lret
sbb
scas
shll
int3
cmp
lcall
cltd
fistpl
fldenv
sarl
loop
cmp
inc
mov
fmul
mov
stos
lds
data16
mov
mov
aad
lods
mov
outsl
rcll
ror
iret
pop
ret
stc
aam
sbb
add
and
add
mov
or
mov
aas
lods
icebp
dec
lret
or
mov
sub
mov
stc
mov
adc
add
cmp
push
outsb
insb
fidivrl
fsubrl
xlat
int
dec
incl
fisttpll
mov
dec
sbb
mov
pop
inc
mov
fcmovnbe
mov
sub
cmp
cwtl
mov
hlt
mov
daa
fneni(8087
sarl
cltd
lods
mov
mov
inc
add
shr
addb
insl
int
mov
addr16
mov
ret
rclb
inc
lret
pushf
cli
leave
xor
mov
enter
das
int3
leave
rcll
jno
into
stos
mov
rol
inc
xor
inc
dec
lret
inc
mov
daa
inc
add
sahf
iret
cld
lcall
cmp
je
daa
push
je
inc
cmp
fisttpll
into
lret
dec
xor
sub
jo
add
xchg
hlt
leave
rcll
add
test
into
out
into
and
jbe
xor
imul
adc
lods
mov
out
mov
cmp
cmpsl
ficoms
out
mov
add
add
add
add
add
add
add
add
add
add
add
add
adc
loop
dec
adc
lods
adc
lods
adc
lods
adc
lods
adc
lods
adc
inc
mov
inc
lcall
inc
int3
orl
les
leave
mov
inc
xlat
int3
adcb
inc
dec
push
les
leave
mov
int3
sbb
bswap
arpl
inc
mov
call
jge
or
adc
aad
movsl
lods
addb
dec
push
orb
dec
into
mov
sbb
xchg
dec
into
pop
dec
into
fwait
dec
into
sbb
dec
into
loope
into
insl
dec
into
in
dec
into
js
into
repz
into
jg
into
decb
mov
xor
test
sub
dec
add
cwtl
add
add
adc
xor
mov
aam
outsl
rcll
xor
std
push
pop
mov
cmpsl
iret
outsl
iret
push
call
xor
xor
test
test
test
xor
push
push
test
orl
iret
sar
aam
outsb
dec
into
cwtl
dec
into
xchg
aad
adc
fwait
mov
and
mov
out
mov
sub
mov
xchg
repnz
int
movsl
leave
mov
cli
movsb
rcr
add
mov
movsl
mov
lods
fstl
test
aad
jle
sub
gs
fnstenv
fcomip
mov
hlt
mov
push
gs
mov
mov
add
push
push
pop
and
mov
ffree
popa
fisttps
lret
gs
iret
mov
rcr
cmpsl
stc
test
cld
push
xchg
in
stc
and
lret
outsl
xor
mov
lods
stos
pusha
test
mov
orb
dec
lret
xor
shll
xor
iret
dec
lods
inc
iret
mov
pop
add
sahf
xlat
aad
fld
mov
leave
addr16
pusha
movsl
add
xchg
scas
lret
popa
scas
mov
or
iret
xchg
mov
xor
movsl
pop
mov
iret
movsl
adc
lods
adc
lods
push
leave
data16
pop
xor
mov
fistpll
mov
cmpsl
movsl
mov
mov
roll
sub
mov
mov
mov
cmp
cmpsb
mov
ret
or
add
sahf
lret
pop
add
sahf
rol
cmp
mov
ds
dec
xor
mov
or
mov
dec
cmp
scas
shrl
push
cmpsl
les
push
jnp
mov
and
mov
cmpb
sti
push
flds
add
int3
push
mov
frstor
jmp
test
ret
jnp
cld
mov
cmp
rolb
enter
lods
add
dec
lods
shll
ret
dec
enter
mov
push
dec
int
mov
inc
ret
mov
xor
std
mov
dec
mov
lds
lret
adc
adc
out
fs
lods
jns
fnstcw
mov
mov
dec
xor
rolb
fistl
rcr
shrb
dec
leave
into
fnstsw
mov
mov
scas
mov
mov
insb
lret
jl
inc
lods
scas
mov
mov
stos
mov
pop
test
out
daa
mov
ret
enter
or
mov
popa
aad
shrl
test
test
andb
stos
push
lds
mov
mov
mov
sbbb
inc
lret
lods
ret
cmpsb
adc
lods
adc
lods
add
daa
fst
and
ffreep
xor
cld
scas
mov
fldt
test
lret
mov
arpl
mov
lcall
or
adc
pop
stc
jns
pop
ffreep
test
inc
jp
xlat
xchg
scas
arpl
test
hlt
scas
jno
push
stc
clc
mov
dec
jl
mov
lods
mov
inc
test
mov
mov
cmp
fiaddl
in
mov
scas
fdivl
and
lods
fistpll
push
mov
imul
and
rcl
test
mov
enter
stc
cmp
cli
xchg
stos
loope
cli
arpl
mov
lret
and
fildl
or
arpl
lock
outsb
dec
stos
mov
stc
jne
lods
dec
hlt
ror
or
int
orb
xchg
lds
add
add
add
orb
test
lods
adc
lods
adc
lods
adc
lods
adc
lods
adc
imul
jecxz
mov
or
inc
repnz
cmp
int
mov
xor
dec
mov
lds
add
sahf
fcmovne
stc
stc
sbb
and
jp
stc
fldenv
push
iret
sub
test
movsl
ffree
fs
imul
lds
mov
xlat
iretw
aad
leave
push
iret
fstpl
push
or
inc
scas
and
mov
mov
jns
test
aam
cmpsb
sarl
stc
pop
lcall
add
xlat
stc
add
and
leave
leave
test
push
xlat
push
stc
leave
shll
or
test
ss
mov
ret
mov
mov
enter
fsqrt
enter
lods
xchg
pop
test
xor
enter
addb
fnstsw
shrl
inc
stos
in
lods
lds
sbb
mov
mov
mov
movsb
fnstsw
iret
push
mov
mov
mov
gs
and
inc
fbld
push
xor
mov
movsl
andb
or
fcmovu
fistps
fnstenv
lds
cli
sub
ret
inc
jle
rcr
aam
movlps
aad
mov
iret
stc
test
roll
adc
mov
cltd
int
dec
scas
cmp
inc
jp
ror
mov
inc
das
iret
push
rol
test
mov
push
push
cmp
push
jle
mov
lret
clc
ret
ret
jle
cltd
iret
popa
imul
psrld
mov
mov
xchg
lret
inc
test
movsl
and
fcmovne
mov
mov
push
push
mov
je
push
fadd
and
inc
ret
sub
leave
orb
jl
lret
dec
add
mov
lods
rorl
ret
add
and
push
int3
cmp
addr16
pusha
lods
movsl
data16
mov
rorl
stc
fs
test
stc
test
mov
aaa
fildl
xchg
mov
push
loope
ret
or
mov
or
test
aas
stc
enter
test
mov
pop
add
cmpsl
out
inc
rorl
outsl
mov
inc
or
rcll
mov
ret
sub
lret
mov
dec
mov
scas
dec
cmpsl
sbb
ror
fs
leave
lods
int
pop
inc
aad
mov
push
roll
sbb
addr16
xchg
iret
pop
je
push
fxch
sahf
leave
push
test
test
test
test
test
or
or
or
or
or
mov
test
rorl
lds
rol
mov
fists
fisttps
ljmp
lods
lods
add
mov
mov
mov
lds
nop
mov
cwtl
mov
sbb
dec
mov
aad
fnstenv
sbb
push
jno
sahf
cmpsb
mov
mov
les
mov
aas
stc
inc
inc
mov
pop
inc
xor
lods
scas
into
aad
inc
into
rorl
dec
mov
scas
or
gs
mov
mov
int
jo
inc
push
mov
stc
and
leave
xor
lods
jl
ror
xchg
scas
aam
mov
cwtl
xor
andb
int
mov
pusha
mov
test
mov
pop
test
xor
or
or
or
or
or
or
fyl2xp1
xorl
data16
mov
mov
loop
mov
daa
int3
jl
addr16
xlat
cli
or
aam
pop
or
aam
pop
adc
inc
inc
mov
filds
les
sub
lret
imul
pop
add
add
push
mov
lods
fldcw
push
iret
mov
iret
jo
mov
roll
push
roll
test
shl
nop
lods
movsl
sbb
scas
mov
stos
sbb
scas
mov
mov
push
fyl2xp1
test
mov
enter
or
adc
lret
cli
lret
push
test
ror
mov
mov
daa
or
rclb
sbb
push
stc
inc
or
or
or
fistl
cmp
mov
stc
mov
mov
enter
rorl
fyl2xp1
das
mov
sahf
mov
test
jl
mov
fstp
out
xorl
ret
les
loopne
test
mov
xchg
mov
inc
mov
das
fstps
aad
mov
leave
xorl
filds
loop
jbe
test
out
scas
inc
pop
add
mov
sti
add
mov
int3
inc
test
rorl
iret
mov
pop
mov
inc
out
cmp
inc
dec
cmp
out
jno
in
fst
out
outsb
mov
fbstp
pop
repz
ret
stos
xor
push
add
cs
add
rcll
rorl
int3
push
ffreep
loope
add
xchg
mov
mov
xor
adc
shll
jbe
dec
fadds
sub
inc
cmp
aad
int
cli
sbb
dec
ffree
int
lods
jle
fnstenv
rcr
int
into
add
pop
enter
mov
pop
stc
scas
xor
insl
shll
iret
lret
cli
mov
rcr
fstpl
stc
fildl
mov
mov
or
lods
stc
inc
pop
add
push
xchg
lods
push
and
or
push
fstl
mov
leave
mov
lret
xorb
pop
mov
mov
scas
mov
mov
jo
fimuls
adc
or
in
mov
test
or
fstpl
ds
pop
aaa
mov
sbbb
ret
mov
daa
lods
ret
xchg
xchg
mov
mov
shrl
addb
mov
or
test
rorb
les
pusha
or
pop
test
cmpsb
shll
nop
int
and
sbb
movl
int
iret
dec
xor
data16
enter
int
lcall
jp
aam
pusha
xadd
inc
mov
add
shll
filds
push
add
pop
stc
test
data16
cmp
or
bound
pop
dec
scas
lds
les
cmc
das
mov
mov
xlat
ffree
mov
lock
fst
lret
lcall
shlb
stc
leave
cmpsl
mov
leave
jp
fldt
shrl
inc
or
inc
lret
popa
test
scas
daa
or
movsl
jo
jg
mov
adc
lods
add
inc
stc
add
mov
inc
ret
int3
stc
shll
iret
jp
int
lret
lcall
inc
aad
rorl
nop
add
push
fldl
enter
push
mov
insl
ficompl
lods
stc
into
stos
push
in
push
fnsave
iret
pop
cmp
xor
and
shll
mov
roll
mov
dec
sbb
cmpsl
data16
mov
jl
scas
data16
lods
xor
inc
push
rcl
xor
and
or
add
push
add
cmp
mov
inc
dec
int
mov
stos
xlat
mov
or
in
adc
dec
or
ret
int
pop
push
lods
mov
push
das
rol
int
shll
daa
mov
stc
fldl
push
enter
fs
push
scas
sbb
inc
mov
mov
mov
mov
fsts
mov
ret
shrl
jl
filds
sar
pop
aad
mov
imul
fsubl
cmc
lcall
test
stc
shlb
data16
stos
test
xor
push
lods
xchg
gs
gs
test
ja
test
imul
addr16
pusha
repnz
outsb
gs
mov
outsb
jae
mov
xor
ror
or
cmp
xchg
pushf
enter
and
sbb
stc
andb
movsl
inc
mov
jbe
test
subb
cmpb
add
repnz
aam
ret
mov
pop
scas
daa
int
enter
scas
les
and
dec
push
mov
ds
int3
mov
lcall
and
int3
loopne
lret
pop
sub
pop
leave
pop
push
dec
dec
lcall
ds
stc
mov
int3
sub
fcmovb
pop
leave
pop
push
dec
leave
bound
mov
cmp
mov
lods
das
lcall
pop
push
push
lret
dec
ret
leave
inc
push
inc
mov
mov
jbe
mov
sub
and
inc
sub
mov
mov
nop
mov
push
aad
mov
bound
inc
into
lcall
les
adc
cwtl
and
fidivrl
push
push
dec
jns
mov
mov
sub
int3
push
aad
dec
dec
dec
push
sbb
leave
scas
push
pop
pop
lcall
into
push
inc
stc
fnstcw
mov
push
pop
fistps
dec
leave
push
push
cwtl
pushf
mov
lods
subl
push
xlat
leave
into
push
mov
test
push
pusha
push
lcall
ret
push
inc
aas
int3
mov
lcall
pop
push
push
xlat
lcall
stc
fnstcw
mov
cmp
movsb
dec
fld
shrl
inc
pop
int3
int3
rcrb
jns
mov
mov
lods
int3
mov
push
les
int3
push
ds
or
inc
dec
ret
leave
lret
or
rcr
cs
inc
in
jl
lcall
xor
fiadds
jns
mov
mov
sub
les
or
ret
dec
lcall
cmpsl
push
lods
mov
shll
mov
ret
int3
xlat
aam
loopne
es
jo
mov
cmpsl
orb
mov
int3
inc
mov
xor
mov
and
sub
dec
push
aad
lret
inc
inc
mov
inc
xor
cld
ss
stos
push
mov
pop
ror
push
push
dec
inc
lcall
cld
mov
mov
int3
mov
ffreep
push
leave
push
push
rol
lcall
cld
xor
xor
inc
sub
mov
fadd
loopne
aam
aad
lret
ret
dec
inc
add
mov
lcall
inc
mov
pop
mov
mov
xchg
mov
mov
mov
int3
xor
dec
adc
leave
leave
push
pop
movsl
lcall
mov
mov
ds
inc
aad
ret
iret
lcall
fisubrs
inc
movsb
int3
sub
xor
ds
cmpsb
retw
mov
mov
fdivr
loopne
sbb
dec
dec
or
ror
test
test
inc
movsl
int3
lcall
push
xlat
xchg
mov
xchg
and
cmp
loopne
cld
inc
test
and
push
cmp
inc
mov
enter
stc
pop
lret
cwtl
test
inc
ret
mov
cld
lret
xlat
mov
movsb
push
stc
push
popa
pop
cltd
dec
push
add
int
das
loop
jle
test
fcmovnu
mov
dec
mov
push
dec
shll
addr16
pop
pop
imul
imul
cmp
inc
jnp
daa
loope
test
push
cltd
xor
loop
xlat
jnp
imul
je
xor
leave
fildll
mov
cmp
loope
or
loopne
inc
cmp
xchg
dec
ds
push
mov
sub
jb
mov
pop
gs
fsubl
push
outsl
sub
dec
aas
enter
and
push
dec
jge
ret
and
xchg
fistl
inc
std
movsb
push
xchg
xchg
test
pusha
popf
pop
dec
pop
mov
js
jmp
jecxz
std
mov
sbb
loope
lret
xor
movsb
std
lea
lods
jnp
in
pop
js
adc
mov
dec
sbb
add
jae
sub
and
sarb
mov
jb
imul
shll
jne
or
movsb
mov
inc
pop
cmpsb
rcrl
xchg
fistps
rol
mov
dec
in
jle
fistl
dec
and
or
jle
xchg
xchg
int
pop
stc
sub
loope
xchg
test
dec
xor
ljmp
jle
or
xchg
int
pop
xor
jecxz
in
cmp
pop
push
push
orb
mov
xor
push
imul
mov
xor
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
outsb
fs
outsl
arpl
stc
movb
cmc
add
test
pushf
stc
mov
movb
call
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
add
ja
jbe
dec
jne
dec
jo
outsb
add
add
imul
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
adc
add
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
add
lea
ja
pusha
jmp
add
push
gs
dec
push
xor
mov
movsl
mov
out
in
rorb
jl
pusha
dec
jge
imul
jle
ss
addr16
push
mov
mov
pop
dec
subb
fwait
and
imulb
or
mov
psubusw
nop
jbe
xchg
adc
insl
dec
jne
fwait
sar
shll
popa
sarl
pusha
fldenv
into
lds
add
je
jb
outsl
arpl
fs
js
push
add
add
insb
insb
push
arpl
sub
out
lea
je
test
pushf
push
test
add
pusha
stc
cmp
movl
push
lea
jb
bt
push
push
cmp
jmp
call
add
inc
gs
gs
dec
gs
imul
lods
mov
call
add
inc
jb
popa
je
inc
jbe
outsb
je
add
add
je
gs
popa
addr16
outsl
jae
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
sar
sub
sub
sub
push
sub
and
and
add
pushf
outsl
cmp
insl
add
lret
cmp
sbb
ljmp
fucomp
pop
in
adc
les
inc
sbb
jno
dec
add
adc
mov
push
cld
add
jl
fwait
outsb
adc
ss
sub
xchg
mov
cmp
lahf
test
cmp
subb
sub
data16
mov
fdivp
adc
enter
jge
lea
movsb
add
xchg
xchg
lods
mov
xor
cs
insb
add
rolb
movl
nop
sar
add
inc
gs
gs
popa
addr16
add
pusha
push
addr16
cmp
into
ds
mov
mov
int3
add
movsl
jge
shrl
and
in
les
cmpb
pusha
lcall
mov
jp,pn
cltd
lcall
cmovnp
mov
jmp
cmpb
jg
loopne
mov
pop
mov
andb
fwait
pop
leave
aad
pop
notl
jo
neg
nop
jae
es
shlb
jge
mov
mov
ds
loop
cwtl
insl
push
mov
int
pop
add
fucomp
fstpt
ret
and
in
cmp
out
add
mov
cmpsb
inc
dec
push
pop
jne
jae
out
loopne
cmpsl
mov
stc
fcomi
xlat
clc
shl
xlat
shlw
lret
push
jno
lds
adc
push
jb
or
cli
punpckhbw
dec
in
inc
call
inc
mov
pop
inc
rol
mov
shld
pusha
pop
sar
sub
shl
sar
lea
test
pusha
bt
sub
cmc
test
jmp
and
lcall
not
test
iret
repz
call
jns
enter
adc
jnp
jmp
scas
sbb
in
cmc
ds
ss
jg
imul
adc
sbb
mov
xchg
xor
outsb
into
lahf
lret
pop
aaa
rclb
and
cmp
loope
fisubs
mov
xchg
aam
sub
add
jbe
inc
jbe
lock
mov
ljmp
std
in
int3
out
or
int3
loop
jae
adc
mov
or
and
and
sub
lock
mov
inc
push
add
adc
lcall
fnsave
jns
je
push
divl
cltd
test
xchg
incl
add
je
arpl
gs
imul
add
je
outsb
push
gs
js
gs
imul
gs
add
inc
gs
outsl
jb
addr16
jne
fs
imul
inc
and
xor
pushf
push
movl
movb
pushf
lea
jmp
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
lea
jne
btr
rcl
not
mov
sbb
movzbw
sub
not
cmp
bt
bsr
mov
test
bt
sub
call
call
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
ret
inc
add
lods
jmp
movb
lea
ja
ror
sub
shl
add
pusha
bt
shr
shr
mov
or
mov
pusha
repnz
pushf
movb
movl
pushf
lea
jne
sete
movb
setb
pushf
jmp
add
inc
js
push
gs
dec
jne
inc
add
add
add
add
or
xchg
cmp
dec
push
movsl
or
dec
jo
sub
mov
xchg
loopne
fdivr
pop
pop
fisubrl
jb
fidivl
and
fwait
cmc
lret
rorb
mov
gs
subl
into
bound
lea
lea
pushf
mov
pushf
lea
js
push
pushf
mov
movsbw
call
bsr
btc
and
mov
bt
stc
add
cmp
cmc
stc
stc
movzwl
xor
or
mov
cmp
stc
call
add
inc
gs
jb
jo
add
add
imul
push
gs
popa
jb
add
in
jmp
lea
call
jno
pushf
adc
call
add
push
outsb
push
imul
outsl
outsl
imul
lahf
movb
mov
pushf
pushl
mov
jmp
lea
ja
rcl
sub
cmc
add
shrd
btc
mov
not
ror
sbb
dec
mov
call
add
push
outsb
fs
gs
popa
addr16
add
jmp
incl
add
fs
popa
add
add
je
imul
js
inc
add
add
outsl
jae
dec
popa
outsb
fs
gs
and
push
outsl
jne
fs
arpl
bt
test
clc
add
pushf
pusha
lea
jne
not
mov
pushfw
jmp
movzwl
clc
mov
call
add
dec
outsl
popa
fs
imul
add
add
inc
popa
fs
gs
fs
je
add
push
gs
decl
adc
push
jge
mov
movl
jmp
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
xor
xor
jmp
add
push
je
jb
inc
outsl
arpl
pusha
lea
jae
jmp
mov
pusha
cmpb
pushf
lea
jne
rcl
sbb
btr
daa
xor
jmp
add
inc
outsl
insl
jo
jb
push
je
imul
cmc
stc
cmp
push
movb
lea
jae
test
pusha
clc
add
push
mov
pusha
lea
jmp
bt
bts
push
add
push
lea
bsr
sub
shl
push
xor
push
sar
push
shl
shl
bt
aam
push
shld
mov
cmc
push
push
pushf
test
lea
jg
je
add
cmc
mov
xor
bsf
bsr
btc
add
lea
mov
pusha
pusha
cmc
stc
test
pushf
call
add
inc
gs
jns
je
insl
inc
imul
jns
add
add
addr16
insb
outsl
jae
dec
gs
add
push
gs
gs
jae
inc
inc
add
add
popa
jo
jb
add
add
jae
push
jne
je
gs
popa
add
add
je
jb
imul
imul
dec
fs
adc
sbb
popf
stos
xchg
mov
mov
int
outsb
cmp
pop
cli
and
and
iret
lods
mov
jp
pusha
mov
shl
push
push
dec
mov
rcrl
ret
xor
xor
inc
mov
pop
sbb
mov
inc
push
push
cmc
cmc
and
lcall
mov
and
pop
inc
outsb
fisubs
adc
leave
insb
insl
inc
jecxz
repz
lock
cld
push
stc
dec
out
inc
outsl
jne
pushf
sbb
and
pushf
pushf
movb
pushf
pushl
ret
call
add
inc
push
jo
jb
add
add
je
outsb
jne
je
je
add
mov
dec
jmp
and
inc
cmp
test
clc
pushw
popfw
push
lea
jg
pushf
inc
pusha
jmp
add
inc
gs
outsl
jo
imul
add
je
arpl
insb
insb
push
outsl
jae
add
inc
jb
gs
imul
jmp
movl
pusha
pusha
pushl
mov
mov
mov
mov
pushl
pushl
ret
imul
imul
add
inc
jb
popa
je
dec
outsb
jne
pusha
mov
push
push
lea
jmp
mov
jmp
jmp
pusha
mov
mov
jmp
push
rol
cmc
rol
pushf
shrd
xor
pop
dec
pusha
push
or
neg
lea
shld
sub
pusha
lea
sub
movzbw
xadd
cmp
xadd
mov
mov
xchg
add
shld
mov
rcr
lea
xor
stc
and
add
js
shld
inc
ror
neg
sbb
movsbw
adc
shl
not
shld
xor
movsbw
pusha
movzbl
rol
mov
jmp
jmp
pushl
mov
pushf
mov
pusha
push
lea
jmp
movb
mov
jmp
btc
xchg
add
bsf
mov
seto
jmp
push
add
stc
clc
sub
call
pop
add
jmp
add
movl
mov
jmp
mov
pushf
pushf
pushf
movw
lea
jmp
pusha
call
rep
rcr
lea
sbb
add
mov
dec
bsf
mov
jmp
and
mov
cmc
test
sub
jmp
cmp
sub
push
cmc
push
bt
shl
pushf
pushl
pushf
mov
jmp
cmp
mov
cmc
bt
clc
call
mov
jmp
call
movsbl
mov
push
call
mov
mov
pushl
lea
jmp
add
pusha
pusha
mov
push
push
movb
pushf
lea
jmp
pusha
pushf
jmp
pusha
mov
pushl
popl
push
pushl
pushf
push
lea
jmp
jmp
add
add
movzbw
pushf
mov
mov
mov
push
pusha
lea
jmp
mov
pushf
push
mov
pusha
lea
jmp
cmp
sub
call
jmp
dec
aam
sbb
mov
seto
mov
stc
not
push
cmp
clc
not
call
pusha
xchg
pushl
jmp
mov
pusha
call
test
bsr
mov
xor
bsr
rcl
pop
movzbw
stc
pop
cmc
sub
setp
pop
not
or
std
rol
pop
bt
jmp
stc
pushf
jmp
mov
jmp
push
pusha
mov
pushf
mov
mov
movl
mov
call
dec
not
rcl
cmp
mov
pushf
stc
test
add
call
pushl
lea
jle
push
mov
jmp
jmp
jmp
mov
push
pushf
jmp
mov
push
pushf
call
jmp
pushl
pushl
popl
pusha
lea
jmp
pushf
mov
mov
mov
lea
jmp
mov
movb
pushf
pushl
lea
jmp
and
ror
aas
setb
mov
dec
mov
clc
add
pusha
pusha
call
pushf
mov
pusha
mov
mov
pusha
mov
call
call
add
pushf
pushl
mov
pusha
push
push
lea
jmp
movw
lea
je
test
push
test
sub
jmp
jmp
jmp
sub
adc
xchg
sub
mov
test
mov
clc
push
test
sub
clc
cmc
call
jmp
sub
lea
mov
jmp
call
movw
call
pushf
pushf
mov
push
movb
mov
lea
jmp
rol
sbb
neg
shr
and
inc
rcr
cmc
mov
pushf
test
stc
pushf
sub
push
push
mov
mov
pushf
pushf
lea
jmp
push
pushl
movw
mov
movb
jmp
dec
pusha
btr
xor
jmp
pushf
xchg
test
mov
pusha
clc
mov
stc
jmp
pushf
jmp
test
pushf
add
push
pushl
jmp
push
call
push
mov
pushl
jmp
jmp
add
mov
lea
jmp
mov
pushl
mov
jmp
bt
bt
sub
call
sar
stc
mov
pushf
rcl
call
sbb
aas
notl
sar
aaa
rcr
ror
mov
cmc
bt
bt
cmp
sub
call
call
mov
push
push
lea
jmp
repz
popl
pusha
mov
push
mov
pushf
lea
jmp
pusha
mov
xchg
movzbw
pop
pushl
popl
bswap
mov
not
call
push
repz
popl
pushf
jmp
mov
movzbl
pushl
popl
bswap
pop
movsbw
not
movl
call
movb
mov
mov
movw
pushf
popl
mov
pushl
popl
pushf
pushf
push
pushl
lea
jmp
pop
movsbl
mov
push
pushl
pushf
pushl
lea
jmp
cmp
movb
sub
push
movl
jmp
call
stc
sub
test
cmc
cmp
call
pushf
popl
call
mov
jmp
push
dec
pushf
mov
lea
jmp
shr
mov
mov
setg
pushf
lea
jo
bt
mov
push
bt
jmp
call
mov
push
pushf
jmp
pusha
test
pusha
add
pushf
mov
movb
pushf
pushf
mov
lea
jmp
pusha
pushf
push
mov
pushf
mov
lea
jmp
lea
jmp
lea
jne
push
xor
push
xchg
pusha
pushf
call
sub
sar
mov
shld
neg
mov
push
bt
cmp
clc
add
pusha
pushf
movb
call
movw
mov
mov
jmp
xchg
clc
mov
cmc
mov
cmp
pusha
sub
mov
jmp
push
mov
call
pop
push
lahf
mov
call
jo
pusha
mov
pusha
pushf
pushf
lea
jmp
call
or
pushl
pushf
lea
je
test
ja
sub
call
pushf
pusha
mov
pushl
mov
jmp
pushl
jmp
pushf
jmp
pushl
pushf
popl
movw
pusha
call
cwtl
call
mov
pushf
mov
pushf
popl
push
jmp
pushf
jmp
bt
bt
shr
push
pushf
call
pusha
sub
lea
je
pusha
mov
jmp
call
rol
call
push
call
xchg
jmp
rdtsc
das
popf
cltd
movsbw
not
pop
push
pusha
call
mov
stc
xor
mov
stc
push
mov
clc
pushf
pusha
pushf
sub
pushf
jmp
pusha
mov
mov
mov
jmp
clc
bt
clc
add
pusha
pushl
pushf
popl
pusha
call
add
bt
jmp
mov
jmp
mov
pushl
pushf
pushf
mov
jmp
pushf
pushf
pushl
popl
pushl
pushf
pushf
lea
jmp
pushl
pusha
mov
pushf
pushf
pushl
mov
pushf
jmp
mov
jmp
cmc
mov
ror
not
shl
setae
mov
pusha
add
pushf
shld
pushl
mov
pushf
pushf
popl
push
pushl
popl
pushl
lea
jmp
mov
pushl
jmp
pushf
popl
jmp
inc
mov
clc
bt
pushl
add
pushl
stc
mov
call
call
cwtl
add
stos
cwtl
add
mov
xchg
add
dec
xchg
add
aam
add
pop
cwtl
add
ljmp
add
add
repnz
add
xchg
add
push
cwtl
add
mov
xchg
add
mov
xchg
add
pushf
xchg
add
fstl
add
ret
and
xchg
add
mov
add
pop
xchg
add
pop
xchg
add
call
cltd
add
es
add
aam
add
xor
add
fists
add
mov
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
push
xchg
add
mov
add
popf
xchg
add
pop
xchg
add
notl
add
aam
add
stos
xchg
add
ret
addb
add
xchg
add
sub
add
mov
add
xchg
add
add
dec
cwtl
add
cmp
add
es
add
adc
xchg
add
xchg
add
xlat
cwtl
add
cmp
add
dec
xchg
add
push
xchg
add
loope
add
inc
xchg
add
repnz
add
push
cltd
add
adc
mov
cmp
add
mov
xchg
add
cmp
inc
xchg
add
mov
xchg
add
ret
and
add
sub
add
pop
cltd
add
or
mov
adc
add
adc
xchg
add
popf
cwtl
add
ljmp
mov
pop
xchg
add
xchg
orb
adcb
add
add
aad
add
xchg
add
mov
add
adcb
add
xchg
add
dec
xchg
add
mov
xchg
add
inc
cwtl
add
ljmp
add
add
adcb
fstl
add
xchg
xchg
add
inc
xchg
add
notl
add
sub
add
mov
xchg
add
dec
xchg
add
sub
add
call
cltd
add
es
add
es
add
adcb
inc
mov
cwtl
add
cmp
add
ljmp
addb
add
mov
cwtl
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
pop
xchg
add
loope
add
xor
add
add
mov
add
in
add
cmp
add
sub
add
push
xchg
add
popf
xchg
add
notl
add
push
xchg
add
fists
add
ss
add
enter
ljmp
mov
dec
cltd
add
or
add
inc
xchg
add
xchg
add
xchg
add
pop
xchg
add
pop
xchg
add
mov
xchg
add
xchg
xchg
add
aam
add
xchg
xchg
add
inc
xchg
add
mov
add
mov
add
aam
add
popf
xchg
add
in
add
stos
xchg
add
pop
xchg
add
aam
add
aad
add
cmp
cmpb
add
xor
add
sbbb
call
xchg
add
in
add
repnz
add
adc
xchg
add
aam
add
xchg
add
pop
xchg
add
pop
xchg
add
dec
xchg
add
xchg
xchg
add
popf
xchg
add
ss
add
push
xchg
add
call
xchg
add
push
xchg
add
dec
xchg
add
inc
xchg
add
sub
cmp
test
xor
clc
pusha
xor
stc
cbtw
stc
test
bt
cwtl
jmp
sub
jmp
dec
pushl
push
push
lea
jmp
mov
pusha
push
pushl
ret
call
movb
push
repz
popl
call
pushf
pushl
call
call
pushf
pusha
mov
jmp
call
push
movl
jmp
cmc
movzbl
not
sar
sub
bsr
xor
cmc
pushf
lea
jge
rol
bswap
dec
shr
neg
rcl
xor
movsbw
lea
movsbw
movsbw
dec
call
pushf
lea
lea
mov
pushf
movsbw
jmp
pushf
movw
mov
pusha
call
shl
mov
jno
mov
bt
xor
cmc
clc
pushf
pushl
rol
mov
pusha
mov
dec
cmp
test
movb
test
sub
jmp
pushf
movb
call
pushl
popl
pop
movzbw
movl
mov
movl
mov
pushf
bswap
mov
pushf
movb
lea
jmp
pushf
mov
movl
movl
movw
movb
pushl
ret
pushf
pushf
popl
pusha
call
pushf
call
mov
push
jmp
call
pop
rol
rol
setbe
not
dec
ror
xor
bswap
sets
dec
dec
bt
xor
stc
movzbl
clc
stc
mov
mov
jmp
mov
pushf
mov
pushf
lea
jmp
movb
lea
cpuid
jmp
call
sub
pushf
jmp
mov
jmp
aaa
shrd
mov
rol
mov
test
pushf
sub
pushf
shl
jmp
pushf
pusha
mov
mov
jmp
xchg
cwtl
movzbw
mov
jmp
bswap
aaa
mov
call
mov
movb
mov
jmp
movsbw
pushl
popl
movl
movl
call
xchg
not
movzbw
movsbw
pushl
popl
jmp
sar
stc
mov
clc
xchg
pushf
call
movl
xchg
bt
test
test
pusha
mov
bt
call
movl
mov
call
movl
call
mov
movb
push
lea
jmp
pushf
movzbw
mov
push
mov
mov
lea
jmp
call
mov
jmp
jmp
push
pushf
pusha
pushl
popl
movw
lea
jmp
pushf
pushf
popl
pushf
pusha
pushl
movsbw
mov
pushf
not
pop
mov
pusha
movsbw
lea
push
pushf
mov
movsbw
mov
jmp
pushf
movl
mov
call
jmp
test
bt
sub
pushf
clc
shr
pushl
jmp
movl
call
pop
movl
pop
movsbl
jmp
call
pusha
call
call
lea
jge
dec
test
push
xor
cmc
lea
js
cmc
xor
call
xor
jmp
push
pushl
popl
movb
pushf
mov
lea
jmp
mov
call
mov
push
push
mov
jmp
shr
pushf
jmp
push
pop
not
shld
bt
xor
setns
pusha
call
bt
xor
call
test
stc
cmc
sub
pusha
pushf
mov
movb
pushf
call
lea
jb
pushf
lea
pusha
jmp
inc
stc
add
clc
movsbw
or
sub
btc
mov
movb
push
pushf
stc
add
push
pusha
mov
jmp
cmc
shr
mov
mov
mov
stc
jmp
mov
pushf
pushf
pushl
push
lea
jmp
call
pushl
popl
push
movb
lea
jmp
call
dec
add
mov
pushl
pusha
setb
mov
mov
call
cmc
pushf
sub
jmp
neg
bt
btr
rcl
mov
test
pushf
pusha
movw
sub
jmp
mov
jmp
jge
movzbl
btr
neg
clc
dec
xor
bts
bts
not
rol
jmp
pushf
mov
pushf
jmp
pushf
pushl
popl
push
movb
movb
mov
lea
jmp
jmp
pushf
mov
movb
pushf
pushf
lea
jmp
neg
movzbw
push
jmp
pusha
pushl
popl
movb
pushf
pushf
mov
lea
jmp
cmpl
call
jmp
pushf
mov
jmp
push
mov
jmp
push
pusha
pushl
movb
pusha
mov
mov
movw
call
movzbw
not
not
mov
jmp
push
repz
popl
jmp
pushl
or
call
mov
cmp
mov
push
and
shl
mov
test
call
push
movl
mov
jmp
jmp
lea
mov
btc
shl
mov
jmp
pushl
pushl
mov
call
not
movsbw
lea
call
movb
push
pushl
popl
pushl
pushf
lea
jmp
neg
test
mov
mov
clc
mov
xchg
pusha
mov
cmp
add
jmp
mov
push
mov
mov
lea
jmp
movzbl
jmp
pushf
add
pushf
push
jmp
mov
mov
movb
lea
jmp
mov
movsbw
push
call
pushl
popl
mov
push
pushl
lea
jmp
call
rol
call
test
sub
mov
xor
pushl
bt
push
xor
cmp
cmp
sub
stc
cmc
call
ror
mov
test
clc
cmp
jmp
mov
pusha
pushl
movb
lea
jmp
call
not
mov
pusha
test
sub
call
lea
jne
clc
call
clc
test
pushf
add
bt
stc
std
pushl
popf
pushf
push
lea
jmp
movb
lea
je
call
push
push
mov
mov
call
cmc
stc
clc
add
pushf
mov
pushl
movb
pushf
push
lea
jmp
pusha
push
bt
sub
cmc
test
bt
pushl
xchg
push
stc
pushl
mov
pushl
call
jmp
mov
jmp
call
cmc
bt
add
jmp
clc
xor
pusha
movb
add
stc
xor
stc
mov
movb
pushf
add
lea
je
cmc
rol
call
jmp
shr
sub
clc
mov
cmc
cmp
cmc
xor
bt
rol
call
push
pusha
call
pushl
popl
mov
pushl
lea
jmp
pushf
jmp
jmp
stc
shr
jmp
pusha
mov
call
test
shl
bswap
movzbl
push
pushl
test
mov
bt
movb
call
mov
not
pushf
push
mov
pushf
setge
call
mov
dec
sub
inc
xor
call
pusha
mov
movb
push
mov
lea
jmp
cwtl
push
jmp
pushf
pushf
mov
pushf
pushf
call
lea
jne
bts
xorb
pusha
lea
jnp
push
mov
pusha
pushf
lea
jmp
pushf
pushf
inc
rdtsc
mov
rcr
not
and
lea
mov
stc
pusha
test
not
movl
bt
not
bt
test
test
pushf
and
call
mov
mov
jmp
repz
popl
jmp
btr
mov
mov
cmc
cmp
call
mov
pushf
lea
jbe
lea
push
mov
mov
pushf
movb
push
pusha
lea
jmp
pushf
mov
push
call
mov
mov
movb
call
mov
pusha
lea
jmp
stc
pushf
sub
call
mov
mov
pushf
popl
pushl
pushf
pushl
popl
pushf
lea
jmp
pushf
mov
pushf
pushl
push
movb
mov
jmp
push
pushl
mov
movl
movb
mov
lea
jmp
sub
pushl
pushf
jmp
mov
call
mov
call
mov
movb
mov
push
mov
lea
jmp
mov
movw
mov
pusha
repz
popl
push
pushl
mov
jmp
mov
push
pushf
mov
pushl
lea
jmp
add
jmp
pushf
mov
push
pushf
mov
movsbw
call
bts
mov
cmc
clc
jmp
mov
pushf
jmp
mov
pushf
mov
jmp
mov
movzbl
setl
mov
mov
jmp
mov
pushf
lea
jmp
mov
movb
mov
pushf
mov
pusha
mov
push
mov
repz
popl
pushl
mov
jmp
pushl
sub
pusha
mov
movb
jmp
pushf
call
pusha
mov
push
mov
lea
jmp
cmc
test
cmc
bt
sub
jmp
jmp
call
movsbl
pushl
popl
movzbl
mov
movl
lea
pushl
pushf
pushl
mov
pushf
mov
lea
jmp
call
pushl
mov
pushf
mov
pushf
pushl
pushl
popl
pop
lea
jmp
lea
pusha
pushl
popl
lea
movl
pop
call
pusha
movb
pushl
popl
pushl
pushf
pushl
pushf
lea
jmp
mov
pushl
mov
call
mov
pusha
jmp
mov
jmp
jmp
call
clc
cmc
sar
lea
pusha
pusha
cmc
cmp
movb
pushf
lea
ja
inc
mov
adc
shl
cmp
add
lea
stc
sub
mov
lea
rcl
sub
and
jmp
pushf
movsbw
rcr
not
jmp
movzbl
lahf
push
mov
pusha
mov
pushf
movb
mov
mov
lea
jmp
call
btc
mov
pushf
bt
lea
jo
clc
add
pushf
pusha
jmp
movb
call
pushf
mov
call
mov
jmp
mov
jmp
stc
clc
cbtw
clc
test
mov
cwtl
cmc
cmc
jmp
jmp
pushf
lea
pushf
mov
pusha
pushf
lea
jmp
mov
jmp
pushf
push
mov
push
pushf
mov
mov
pusha
call
call
pushf
pusha
pushf
popl
pushl
movw
pushl
popl
movb
lea
jmp
mov
pusha
mov
pushf
pushf
pushf
popl
pushf
pushl
popl
pushf
lea
jmp
jmp
jmp
mov
mov
mov
pushf
pushf
pushl
ret
mov
movl
pusha
mov
pushf
repz
popl
mov
mov
call
pushf
pushf
pushf
push
lea
pusha
mov
mov
pushl
push
lea
jmp
push
call
pushf
mov
pusha
call
xor
jmp
pushf
add
pushl
pushf
pusha
pushf
popl
jmp
pushf
mov
jmp
jmp
call
jmp
pushf
pushf
popl
push
pushl
popl
pusha
pushf
movw
lea
jmp
cmc
call
call
pushf
divl
call
call
pushf
pusha
call
jmp
movsbw
jmp
jmp
pushf
call
call
push
movw
mov
pushf
push
pushf
mov
lea
jmp
and
mov
jmp
mov
movb
jmp
push
pushf
adc
movzbl
sbb
add
setbe
rcr
btc
rcl
rol
or
call
sub
call
mov
xchg
not
pushl
popl
call
setne
mov
mov
bswap
movzbw
repz
popl
pusha
mov
lea
rcr
mov
rcr
bswap
pushl
popl
ror
movl
movzbw
call
aad
mov
not
shl
setno
mov
stc
clc
call
mov
mov
pusha
pushl
repz
popl
movw
mov
call
pushf
popl
movb
pushl
pushf
push
pushl
popl
pusha
lea
jmp
mov
bswap
pusha
pushl
popl
movzbw
pop
lea
movl
push
mov
movb
lea
jmp
push
lea
pushf
pushf
call
sar
not
mov
cmc
jmp
lea
jl
popl
push
pushf
pushl
push
lea
jmp
pushl
popl
pushf
mov
lea
movsbw
movl
push
mov
push
mov
pushf
pushf
lea
jmp
call
mov
pusha
lea
jne
call
movb
push
mov
pusha
mov
push
pushf
pushf
pushf
lea
jmp
aaa
mov
stc
bswap
clc
xor
cmc
clc
test
pusha
not
jmp
xchg
lea
jo
push
pushl
popl
not
not
not
push
call
pushf
popl
call
cbtw
mov
pushf
pushf
add
jbe
bt
mov
cmc
je
stc
sub
cmc
jmp
push
movl
pushl
mov
movw
movb
movb
pushl
ret
lea
jns
mov
push
push
pushf
pushl
lea
jmp
sub
movb
call
push
mov
pushf
jmp
xor
clc
clc
jmp
jmp
bsf
sar
neg
jmp
jmp
cmc
clc
cld
pushl
popf
movb
mov
lea
jmp
movl
add
stc
pushf
movb
pusha
xchg
push
add
bt
movb
cmc
clc
rol
cmp
not
cmp
lea
jo
push
add
pusha
sub
pusha
mov
movb
pushf
pushf
lea
jmp
jmp
bt
mov
sub
pushf
pusha
and
call
push
dec
push
jmp
pushl
bt
xor
call
jmp
pushf
lea
jne
test
xor
call
stc
popf
pusha
lea
jmp
pushf
not
rol
add
pop
rol
lea
and
jmp
pushl
pushf
bswap
movl
jmp
rol
pushf
test
add
movb
pushf
dec
pushf
push
movb
mov
mov
push
pushl
ret
clc
cwtl
call
movzbw
rol
mov
call
movb
mov
jmp
call
mov
pushf
pushf
movb
pushf
pushl
ret
pushf
mov
lea
jge
pushf
pushf
popl
call
cmc
rol
pushf
bt
xor
test
cmc
pusha
cmc
mov
add
je
cmc
cmp
sub
pusha
pushf
pushl
mov
pushf
push
pushf
lea
jmp
lea
mov
pusha
lea
jmp
mov
movw
xchg
jmp
movl
pushf
pushf
mov
mov
pushf
pushf
push
lea
jmp
xchg
not
call
mov
repz
popl
jmp
ror
add
aam
sbb
mov
dec
setnp
lea
shrd
mov
cmp
test
bt
call
rcl
movzbl
adc
xor
btc
shl
clc
xor
xor
bts
bts
shrd
adc
add
pushf
rol
sbb
ror
bsf
btr
xor
pusha
call
mov
jmp
stc
cmc
bt
xor
movw
pushf
pushf
xor
stc
jmp
repz
popl
mov
pushf
movb
mov
pushf
mov
not
pushl
popl
not
pushf
movl
movzbw
mov
pushf
pushf
lea
jmp
mov
push
push
lea
jmp
call
mov
jg
pushf
lea
cpuid
push
clc
jmp
mov
jmp
and
pusha
pushl
cmc
push
cmp
pushf
lea
jne
lea
ror
shrd
xorb
jmp
call
mov
pushl
mov
pushl
jmp
jmp
pushf
mov
pushl
pushf
push
lea
jmp
pusha
jmp
movsbw
jmp
pushf
mov
movb
mov
mov
call
pushl
mov
call
mov
pusha
pushf
mov
movb
pushf
pushf
mov
mov
jmp
mov
lea
jbe
pushf
jmp
push
mov
jmp
cbtw
cmp
jmp
call
mov
pushf
pushf
push
push
lea
jmp
bswap
mov
call
mov
pushf
call
and
btc
bts
sar
mov
clc
shrd
mov
stc
add
call
pushf
jmp
pusha
pusha
mov
push
lea
jl
pushf
push
mov
pusha
push
movw
mov
mov
mov
pushf
jmp
jmp
jmp
jmp
xchg
pushf
stc
rol
push
not
pushf
cmc
clc
add
test
mov
mov
jmp
call
mov
mov
pushl
lea
jmp
mov
mov
pushl
ret
test
pushf
add
pusha
pusha
lea
jmp
jmp
jmp
movb
lea
jne
shr
sbb
adc
or
mov
bt
pushf
and
stc
pushl
bt
cmp
cmp
call
pushf
mov
jmp
shl
jmp
mov
push
lea
jmp
clc
shr
lea
js
pushf
mov
pushf
mov
jmp
btr
lea
mov
dec
add
pushf
mov
pushf
push
lea
jg
mov
pusha
lea
jmp
call
shl
bts
pushf
xor
bsf
mov
shr
cmp
movzbl
cmp
test
mov
pusha
cmc
cmc
mov
or
pushl
push
call
push
lea
call
movl
pop
jmp
jmp
push
jmp
bt
rdtsc
cmc
call
call
dec
stc
pusha
mov
sub
push
push
xor
bt
stc
xor
cmc
cmp
jmp
pushl
popl
push
movb
pusha
lea
jmp
adc
jmp
pusha
mov
pusha
movb
mov
lea
jmp
pushl
jmp
mov
lea
not
jmp
movzbw
mov
push
mov
lea
jmp
mov
push
sub
mov
sub
jle
test
pushf
shr
call
call
std
cld
push
call
mov
lea
setns
movsbl
movsbw
mov
pusha
setg
mov
movsbl
jmp
call
mov
mov
push
call
mov
call
push
jmp
pushl
popl
push
push
movb
push
lea
jmp
pushl
popl
pop
not
movsbw
push
push
pusha
pusha
mov
push
push
lea
jmp
pusha
stc
stc
pushl
popl
add
jbe
bt
test
pushf
add
sub
jle
clc
clc
clc
popf
push
lea
jmp
push
lea
jne
lea
btc
bswap
mov
push
cmc
call
push
mov
pushf
popl
call
movb
pushl
xchg
mov
jmp
repz
popl
pushf
call
sub
push
movb
call
jmp
mov
push
xchg
lea
bswap
pushf
call
jmp
lea
js
pusha
pushl
popl
movb
pushl
lea
jmp
mov
push
pushf
popl
call
jmp
sar
shr
clc
pusha
mov
xor
test
setae
mov
movb
sub
stc
shl
mov
mov
call
mov
mov
mov
call
jmp
xchg
push
pushl
popl
jmp
stc
cwtl
mov
push
clc
bt
stc
add
call
rcr
add
dec
sbb
mov
shl
mov
jmp
pusha
call
movw
dec
mov
mov
mov
lea
jmp
shrd
pusha
push
mov
pushf
pushf
popl
jmp
mov
pushf
lea
jmp
cmpl
call
pushf
movb
repz
popl
mov
mov
jmp
push
movzbl
bt
test
cmp
add
bt
clc
rol
pusha
pusha
dec
push
mov
stc
movb
neg
jmp
push
mov
pushl
lea
jmp
repz
popl
call
movb
mov
movb
mov
mov
movw
lea
jmp
push
jmp
mov
mov
mov
pushf
pushf
popl
call
pushf
cmp
cmc
sub
pusha
call
