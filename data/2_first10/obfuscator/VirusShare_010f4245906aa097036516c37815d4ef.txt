lods
sub
xorb
scas
into
cmove
pop
test
mov
enter
gs
mov
test
pop
movsl
jne
gs
pushf
pop
push
cmpsl
pop
xchg
sbb
popf
shrb
stos
mov
paddsw
in
mov
ja
mov
decb
das
and
cmp
and
pop
mov
mov
ret
call
jmp
imulb
fwait
loop
cmp
test
in
in
or
add
outsl
iret
mov
xchg
cmp
cmp
out
inc
mov
push
add
inc
jg
stos
sbb
mov
adc
add
les
lcall
lds
cwtl
pop
hlt
mov
sbb
push
xlat
add
sahf
outsb
sub
repz
or
add
push
mov
fmull
neg
lgs
movsl
cmp
es
imul
stc
call
mov
sub
jmp
dec
inc
push
dec
inc
dec
xor
cs
insb
add
out
push
pop
xchg
add
in
and
add
into
mov
test
xchg
imul
nop
imul
popf
inc
in
leave
mov
push
mov
insb
or
xchg
mov
fdivrs
adc
cmp
imul
xor
enter
push
rorb
xchg
sbb
rcrb
mov
aas
dec
push
adc
repz
lods
idivb
stc
xor
dec
inc
aad
mov
inc
and
addb
sar
jmp
cmc
add
add
aad
jbe
push
mov
iret
mov
push
shlb
out
subb
xlat
enter
dec
out
in
push
xchg
sbb
ret
cld
js
test
nop
mov
test
sub
out
mov
outsl
add
ret
into
adc
xchg
lds
sub
sub
and
ficoms
push
mov
sti
pop
cmp
sub
jge
mov
fcmovb
mov
cltd
sti
mov
scas
clc
dec
insl
add
add
int
lds
lods
sbb
loop
dec
xchg
adc
sbb
mov
mov
jmp
inc
mov
sbb
mov
inc
fadds
xor
pop
add
add
ret
xchg
imul
mov
jl
adc
imul
mov
test
out
in
xor
ds
mov
mov
in
mov
and
hlt
cmp
and
pop
add
mov
mov
movsb
push
mov
mov
icebp
fdivrl
loope
xor
lea
jae
cmp
jmp
mov
pushf
mov
movzbl
movzbw
push
lea
movb
pusha
pushf
movl
pusha
mov
mov
pushl
push
mov
pushl
ret
call
sub
stc
bt
pushf
cmp
pushf
jmp
pusha
imul
test
jmp
push
jmp
lea
je
push
pushl
sub
call
loop
dec
mov
pop
js
into
mov
cmp
push
jo
mov
sahf
imul
jns
mov
sarb
mov
dec
imul
or
repz
push
dec
mov
add
icebp
shll
scas
xchg
sbb
pop
psubd
adc
push
jmp
cmpb
push
pusha
pushf
mov
lea
jne
stc
lahf
aaa
sub
stc
rol
lahf
mov
inc
sar
ror
clc
add
jmp
push
pushl
pushf
lea
jb
cmc
cmc
cmp
call
movw
pushf
clc
mov
movsbw
mov
pushf
bt
cmc
cmp
jmp
push
mov
test
dec
sub
bt
lea
jnp
shl
add
mov
pushf
cmc
sub
stc
push
pushl
popl
jmp
cmp
clc
cmc
jmp
not
lea
pusha
push
pusha
movl
jmp
call
and
and
flds
sbb
int3
mov
lods
pop
cwtl
dec
call
cmpsb
cld
push
rol
jno
and
cmpsl
lea
and
fs
xor
int
test
std
adcl
sbb
inc
fistps
lea
jg
inc
fmul
pop
mov
jge
push
ret
sar
loopne
cwtl
push
xchg
cli
adc
cld
mull
insb
jnp
push
sbb
bound
pop
int3
stos
rclb
arpl
fistpll
jmp
loopne
cmp
mov
sahf
scas
mov
push
cmp
jbe
lods
adc
mov
in
repz
loop
and
insb
jbe
mov
push
pop
sti
or
sub
pop
and
in
lea
ret
or
into
outsb
rolb
in
hlt
inc
mov
out
test
mov
pop
mov
stos
pop
or
es
sarb
movb
divb
in
mov
decl
movl
pusha
mov
mov
pushf
push
pushl
ret
mov
lea
jmp
inc
cwtl
cmp
in
adcl
cmp
jb
pop
ds
inc
rcrl
inc
mov
stos
sti
or
fs
in
scas
xchg
in
aam
lods
loopne
pop
mov
mov
addb
jne
in
or
xor
aaa
pop
aaa
jb
inc
adc
pop
dec
xchg
sub
out
pop
and
iret
sbb
mov
push
fistl
sahf
dec
add
ret
in
mov
sub
push
dec
dec
dec
xor
cs
insb
add
repz
pop
and
lret
xchg
and
dec
jmp
jecxz
mov
mov
andb
cmp
pusha
mov
data16
pop
fwait
sub
nop
scas
mov
das
cmp
pop
jb
push
xor
and
dec
aas
arpl
pop
cmp
andl
jne
mov
loop
insl
jnp
mov
dec
fisttpl
mov
out
std
mov
add
dec
insl
insl
dec
outsl
arpl
dec
inc
add
fs
jb
bt
clc
cmc
cmpb
push
pushf
pusha
lea
jne
inc
test
movsbl
mov
cmp
clc
cmc
bt
add
push
bt
movzwl
lea
shl
pushf
bt
shld
mov
movb
add
pushl
pushf
cmc
cmp
mov
pushf
cmc
test
call
loope
sub
out
mov
es
jb
cmpsb
add
xor
inc
dec
mov
pop
mov
xchg
and
negl
mov
dec
push
push
outsb
pop
inc
jp
mov
cli
mov
ja
stos
hlt
pop
jg,pt
stos
mov
mov
rcrb
xlat
ja
mov
adc
lea
stc
cmp
jbe
or
xchg
add
or
xchg
xor
push
adc
cmp
jns
mov
jg
imul
loopne
add
call
jmp
movl
pusha
pusha
push
movl
pushf
mov
push
lea
jmp
mov
pushf
pushf
movb
pusha
lea
jmp
pushl
lea
jne
shr
jmp
and
aaa
sbb
pop
lods
sbb
and
loopne
xor
jle
xchg
aam
mov
adc
adc
push
iret
mov
cwtl
or
rol
loope
adc
or
jp
outsb
xchg
and
pusha
xchg
and
inc
jl
iret
push
das
je
decl
inc
fiaddl
lret
insb
sbb
mov
mov
aam
or
xchg
outsl
pop
sub
pop
mov
lock
imul
add
pushf
lea
jmp
int3
push
cmpsb
inc
inc
inc
lret
mov
les
inc
or
ficoms
hlt
mov
mov
addb
dec
push
and
les
jge
mov
sub
mov
push
xor
movsb
xor
icebp
and
sbbb
or
pop
cmp
lret
ffreep
movsb
in
mov
imul
data16
lcall
lock
xor
push
lock
std
std
test
xchg
ret
jne
bound
enter
xor
pop
inc
ss
jno
mov
in
sub
xor
dec
aam
pop
lds
ljmp
push
test
ds
pop
in
mov
mov
movsb
push
push
pushf
xchg
adc
add
adc
jmp
sbb
inc
sub
pushf
stc
shr
push
pushf
pushf
pushf
lea
je
call
dec
and
shrl
xchg
popf
add
and
xor
xor
fs
add
roll
repz
shl
cmpsb
cmp
xlat
into
xchg
dec
fwait
and
cmp
adc
mov
or
loope
jmp
fildll
mov
and
mov
cmp
inc
adc
test
xchg
mov
push
arpl
dec
adc
inc
push
mov
and
xorl
dec
lea
cmpsl
dec
add
idivb
push
mov
icebp
mov
call
movl
mov
mov
mov
pushf
push
mov
push
pushl
ret
jbe
call
pusha
adc
mov
loop
sbb
mov
xor
pop
daa
mov
ret
daa
cmpb
cmpsb
pop
imul
xor
add
xchg
out
sarl
in
lods
shrl
testb
testl
push
jmp
fistpll
out
stos
push
or
push
xchg
xor
dec
fistps
repz
pop
adc
dec
sub
push
pop
outsb
push
lods
mov
jl
push
sbbb
adc
xor
ljmp
jecxz
mov
and
jmp
xor
push
sahf
add
mov
rcrb
lock
daa
xchg
fsubr
or
and
jge
mov
movsb
mov
mov
dec
push
or
leave
and
sbb
imul
push
push
adc
out
out
push
pop
ret
int
aaa
ja
ret
xchg
xor
loop
mov
xchg
inc
adc
pop
cli
xor
fsubrl
fistpl
fcmovnb
popa
inc
ss
mov
mov
sub
xor
dec
sti
movsb
dec
loop
mov
hlt
pop
scas
dec
add
push
lea
jmp
movsl
addr16
movsl
mov
imul
pop
roll
imul
dec
mov
scas
cmp
popa
insb
int
cmpb
int
push
adc
das
mov
shrb
jnp
push
xchg
lahf
add
xor
ja
sbb
mov
mov
jge
repnz
cmpsl
xchg
or
scas
int3
push
xor
fmull
les
xchg
in
stos
cmpsl
mov
push
mov
xchg
out
outsl
push
in
sbb
mov
repz
fcomip
jbe
add
add
xor
dec
push
test
mov
pop
adc
mov
fs
mov
or
push
std
push
pop
pop
push
call
push
push
mov
mov
mov
hlt
mov
lea
push
pushf
pusha
push
pushl
ret
mov
lea
jne
clc
setge
xor
cmc
cmp
dec
lahf
mov
test
stc
shr
add
ror
clc
test
mov
push
test
pushl
lea
je
pushf
call
bt
add
movb
mov
movl
lea
jmp
push
pushf
pushf
lea
jmp
lea
jne
shld
or
bswap
sub
btc
movzbw
aam
mov
pusha
bt
add
adc
and
mov
stc
test
pusha
push
call
rol
inc
shrb
cwtl
mov
fidivrs
inc
mov
int3
pop
push
inc
mov
mov
loopne
dec
sub
movsl
test
sbb
in
stos
scas
xchg
popa
in
dec
or
mov
out
scas
push
xorb
push
pop
clc
push
imul
pop
in
insb
dec
pusha
add
lds
add
lods
cmc
or
movsl
sub
mov
addr16
xchg
mov
and
mov
mov
roll
jmp
pushf
pushf
dec
inc
not
push
setnp
not
mov
jmp
pop
or
into
roll
ja
lret
pop
xlat
scas
inc
mov
push
add
ljmp
pop
xchg
imul
push
xchg
outsl
insl
out
mov
fidivrl
stc
icebp
into
in
fstpl
mov
pop
icebp
inc
push
insl
dec
add
lods
xchg
pop
sub
push
cs
mov
into
mov
mov
loope
dec
in
insl
repnz
jl
dec
das
push
mov
cmc
loop
ret
lods
push
cmp
jp
out
mov
clc
pushf
hlt
mov
nop
repnz
mov
addr16
inc
pusha
jge,pt
in
lea
sub
sub
pusha
cld
lret
jno
mov
loopne
rol
cli
jb
push
sub
jae
rorl
inc
cmp
fisubrs
loopne
out
mov
mov
ret
je
andb
pop
push
movb
lea
je
sar
stc
btr
or
add
rcl
shrd
btc
mov
call
movb
dec
stc
clc
pusha
pushf
shl
jmp
adc
cmpsb
and
xor
sbb
stos
and
repz
pop
adc
lret
xor
js
dec
cli
mov
iret
ret
jmp
test
test
xchg
test
pop
and
push
mov
mov
sub
dec
gs
push
or
mov
scas
push
mov
cltd
push
inc
mov
lahf
or
das
jnp
in
mov
nop
sub
xlat
inc
fs
repz
pop
cmp
fnstsw
sub
push
push
ret
sub
jmp
cld
mov
scas
inc
movsl
les
imul
push
push
jno
scas
sub
icebp
jno
insl
sub
ret
lods
sub
ret
outsb
das
lods
ret
ret
insl
scas
mov
das
out
lods
ret
ret
icebp
jo
jno
ret
ret
jno
mov
das
jo
outsb
icebp
ret
das
out
ret
xor
sub
ret
mov
jle
bound
testl
add
sbb
inc
pop
pop
mov
jo
mov
and
and
sbb
lcall
jno
jg
rcrl
mov
fstpl
or
push
stc
icebp
pop
inc
mov
or
push
dec
out
int3
xchg
ss
stos
mov
testl
idiv
decl
popa
xchg
add
pushf
mov
pusha
push
lea
jmp
add
dec
outsl
arpl
inc
jb
add
in
cmc
mov
ds
ret
mov
out
sbb
or
mov
scas
shll
iret
dec
ret
adc
pop
sbb
cmpsb
test
jo
cltd
das
push
push
pop
insb
dec
cmpsb
pop
sarb
inc
cld
dec
ret
lods
mov
les
or
sahf
cld
jnp
push
cmp
enter
fs
or
inc
and
xor
add
xchg
inc
lods
pop
mov
and
mov
outsb
mov
clc
mov
and
push
jmp
lea
movb
lahf
cwtl
jmp
pushf
not
mov
mov
jmp
call
cmpb
call
lea
je
jmp
int3
or
cmp
pop
stos
cmp
divl
sbb
inc
mov
test
lahf
shlb
sbb
test
mov
cmp
push
jmp
imul
adc
or
and
sbb
jg
jge
loopne
sbb
push
incb
or
pop
mov
mov
add
cmp
xor
pusha
pushf
lea
call
call
test
stc
pusha
sub
jmp
sti
push
cmp
aas
sbb
xor
insl
jmp
and
aas
inc
sub
push
outsl
xor
loopne
cs
sti
sbb
pop
aad
addr16
pop
or
push
mov
cmpsb
pop
dec
mov
stc
stos
add
arpl
inc
and
mov
jmp
ret
jp
movsb
mov
mov
mov
inc
out
test
rcrb
mov
jge
dec
xor
mov
mov
lret
into
jns
mov
arpl
jl
mov
insb
jno
cwtl
in
fildl
mov
je
mov
mov
jmp
int
and
inc
roll
or
mov
mov
cli
dec
test
and
stc
movzbl
mov
cmp
clc
cmpb
jmp
sbbb
pop
mov
push
scas
push
ljmp
mov
dec
stos
lahf
inc
orb
sbb
mov
aaa
movsb
flds
clc
scas
ljmp
lret
out
pop
mov
cmp
in
loopne
aam
push
or
mov
pop
cmpsl
fmul
scas
popl
sub
popf
push
lret
jo
stos
movsl
mov
cli
push
push
lahf
xor
xchg
ficomps
test
add
mov
cmp
push
fiaddl
mov
dec
aas
jmp
jns
push
fdivs
cmpsb
lahf
jb
sar
xchg
nop
ss
xlat
or
stos
inc
push
cmp
mov
sub
push
and
push
dec
insl
and
adc
add
shlb
cmc
adc
mov
or
outsl
out
mov
popf
push
mov
jo
push
push
mov
in
jbe
mov
mov
sti
mov
ljmp
mov
push
or
xor
xchg
aam
jle
xor
inc
sbb
ss
ret
repz
fstl
icebp
inc
cwtl
gs
adcb
push
or
lods
jb
js
out
outsl
aam
adc
sbb
je
int3
sbbl
and
popf
inc
movl
mov
mov
lea
ja
cmc
sub
neg
add
neg
btc
mov
ror
bt
cmc
xor
mov
clc
cmp
repnz
pusha
lea
jne
cwtl
jo
movzbw
not
movb
not
setl
call
bt
sub
cld
pushw
popfw
mov
call
lea
call
pusha
adc
call
jmp
movb
jmp
sub
test
cmp
stc
cmp
pushl
popl
pusha
pushl
cmp
stc
cmp
pushf
pushl
jmp
call
jmp
mov
leave
shll
cltd
cmpsl
daa
scas
pop
cmpsl
adcl
pop
lcall
mov
dec
pop
sbb
call
xorb
decl
idivb
call
fwait
test
adc
into
jmp
lahf
jbe
xchg
fwait
repnz
lcall
push
or
arpl
jmp
repz
inc
or
mov
push
sub
test
jg
push
int
xchg
jb
out
ss
fidivl
cli
cmpsb
inc
xchg
sbb
xor
mov
lods
mov
sub
mov
mov
popa
jp
mov
arpl
bnd
xor
xor
lahf
lods
ja
test
fcoms
push
mov
adc
xchg
xor
imul
call
jl
dec
jmp
pop
orl
mov
pop
idivl
jae
mov
mov
jbe
mov
sahf
push
cli
xor
stos
mov
sahf
pop
fisubrs
mov
add
daa
xor
xchg
aam
lahf
pop
fstpl
out
and
enter
mov
push
push
cmp
jg
or
pusha
ficoml
xlat
and
push
mov
stos
xor
mov
jmp
call
mov
xlat
pop
and
cmp
push
mov
sahf
test
lret
cmp
inc
sub
out
dec
inc
fwait
pop
out
and
ret
inc
jge
aad
inc
adc
mov
cmp
call
mov
fcoml
inc
shrb
adc
or
jg
and
imul
test
inc
test
pop
enter
push
bound
imul
fcmovb
subl
lahf
jge
out
imul
dec
jne
icebp
cwtl
movsb
jg
push
rorb
lock
cmpsb
xlat
cmp
in
pop
push
jo
and
neg
sub
pop
xor
jbe
aam
arpl
push
mov
xchg
fwait
sub
aas
fstl
iret
or
lret
jle
jno
lcall
sub
jle
push
mov
jns
lock
das
testl
hlt
adcl
mov
in
aas
or
cmp
sahf
mov
xor
mov
and
pop
pusha
mov
jecxz,pt
mov
out
push
movsb
sbb
dec
lret
mov
mov
jle
cmp
cs
or
pop
cmovns
fs
movsb
clc
xchg
push
in
and
repz
les
mov
pop
dec
xlat
cmp
xor
daa
stos
scas
cmp
in
add
push
push
cmp
aam
jl
outsl
data16
dec
leave
lret
imul
stos
xchg
xor
div
and
mov
sti
xchg
push
mov
push
adc
aad
sbb
insl
loop
shrl
cwtl
dec
popf
jmp
popa
dec
inc
imul
xchg
inc
mov
inc
clc
je
lock
jae
addb
cltd
cmp
and
or
inc
repnz
cmc
out
push
inc
or
adc
loopne
adc
loop
and
xor
jno
ds
sbb
pop
dec
push
mov
popf
xchg
test
or
sbb
sub
test
mov
inc
xor
rorl
roll
xor
jecxz
xchg
mov
cs
jb
call
jp
ret
nop
mov
enter
mov
cmp
inc
mov
jo
pop
jne
cmp
sbb
daa
add
cmpsb
mov
lret
mov
lds
mov
mov
jo
shlb
popf
mov
add
pop
dec
sbbl
in
fnstenv
jmp
rolb
jno
push
adc
outsb
jo
or
nop
add
mov
sub
test
add
ljmp
push
fcoms
insb
dec
mov
jbe
icebp
std
fsubs
adc
mov
jge
sub
jecxz
add
mov
subl
or
adc
pop
cmpsl
push
iret
cmpb
mov
fcmovbe
fst
pop
xchg
adc
test
fsubs
inc
and
adc
loop
or
leave
add
xorl
inc
out
ret
jns
je
sbb
push
adc
xchg
cmpsb
sarb
je
add
sub
sahf
xor
shlb
out
dec
sub
sub
xchg
adc
rcr
sarb
mov
outsl
shlb
cmp
arpl
dec
jle
into
sub
or
dec
fs
mov
faddl
mov
mov
xchg
inc
jl
cmp
fimull
mov
loope
jo
fldl
scas
xor
sbb
in
xor
std
jg
aas
sub
adc
sub
sbb
cwtl
cmc
adc
hlt
jle
push
pop
push
add
mov
fidivrs
inc
shlb
add
inc
std
shr
popf
add
xchg
jne
pop
pop
test
push
dec
mov
jp
std
loope
ljmp
add
pop
movsb
lret
add
push
pushf
cmpsl
dec
xchg
push
imul
test
ficomps
mov
xor
mov
adcb
push
lret
fcompl
fcmove
fnstenv
ret
faddl
mov
out
pop
add
mov
cmp
hlt
scas
in
jne
mov
rol
into
mov
adc
sub
sbb
jo
aaa
sarb
out
add
sbb
sub
andb
iret
mov
jns
add
es
add
xchg
push
sbb
mov
adc
xchg
and
inc
xchg
mov
mov
insl
pop
and
dec
int
jg
sub
loop
ss
stc
clc
leave
rcr
enter
repz
repz
lods
ret
sub
in
mov
js
inc
loopne
mov
adc
add
dec
shld
repz
push
outsl
push
push
xchg
adc
sub
or
xchg
mov
push
dec
xor
ret
cltd
das
les
jnp
ds
int3
leave
loopne
std
dec
in
dec
jo
movsb
sub
add
es
idivb
push
ds
nop
sub
out
and
shll
les
inc
or
dec
mov
add
and
rorl
xchg
add
clc
bsf
shld
mov
bswap
setbe
add
add
mov
bsr
btr
bswap
add
shl
movl
not
pushf
sub
pusha
mov
add
pusha
movw
cmp
jmp
push
mov
lea
ja
jmp
jne
addr16
push
pusha
lds
or
and
jp
in
aaa
mov
push
push
daa
xchg
idivb
fcomp
xchg
in
adc
fnstcw
xchg
mov
cmp
inc
sub
lcall
xor
jp
mov
pop
dec
adc
je
iret
out
xchg
cmp
jg
add
lcall
jge
xchg
mov
and
add
mov
nop
ror
out
pop
mov
ja
mov
sub
push
push
inc
push
xor
cs
insb
add
pushf
popw
clc
mov
call
adc
xchg
mov
cmpsb
and
push
sbb
sub
clc
xchg
mov
xor
std
je
hlt
jp
fbstp
loopne
mov
rcl
pop
cmp
insb
mov
jg
adc
lods
cwtl
fdivl
dec
or
mov
jno
mov
popf
sub
rcr
mov
hlt
lods
cwtl
cltd
js
shlb
fldt
sbb
xor
sub
or
xchg
mov
push
in
pop
lock
inc
test
and
inc
in
jbe
jo
cltd
test
int3
mov
dec
xchg
fdivr
xchg
inc
mov
mov
jge
xchg
cmpb
scas
mov
test
lret
in
xchg
fistps
pop
icebp
ja
mov
movsl
sar
push
push
testb
xor
cltd
pop
pop
push
mov
adc
out
mov
mov
dec
sti
mov
rorl
leave
xor
add
xchg
mov
inc
movsl
rcrl
dec
repnz
loope
xor
adc
int
outsb
test
shr
dec
imul
xchg
call
andl
inc
mov
mov
ja
sbb
pop
sub
jp
les
pop
sbb
jns
test
stc
sub
cmp
bsr
add
lea
lea
stc
jmp
mov
jmp
lea
ja
pusha
bt
pushf
imul
cmp
call
push
pusha
sub
call
not
call
cmp
add
pushf
push
movb
pushf
lea
jmp
mov
imul
xchg
ret
pop
fbld
push
mov
outsl
cmpsl
pop
imul
adc
movsb
loopne
xchg
jns
mov
nop
or
and
add
jnp
adc
add
cmpsl
or
sti
sbb
cmp
fmulp
scas
cld
adc
nop
jmp
lea
jne
pusha
jmp
lea
jae
push
mov
pusha
mov
pushf
not
inc
not
push
mov
call
jmp
pusha
lea
jae
pushf
add
call
cmp
pusha
pusha
mov
lea
ja
rcr
sub
neg
add
cmp
mov
ror
pushf
shl
mov
stc
repnz
pusha
jmp
es
add
fistpll
and
fnstcw
fstps
jle
fs
mov
rcr
jbe
push
outsl
lods
pop
push
pop
in
inc
aaa
pop
ret
cmp
mov
in
adc
add
inc
pop
adc
insb
dec
or
push
inc
imul
jl
push
jbe
pop
xchg
or
sahf
dec
add
jg
pop
inc
mov
add
pop
dec
cmpsl
pushf
xchg
jmp
outsl
int
lret
mov
or
lds
mov
and
add
adc
pop
sahf
xchg
imul
pop
adc
push
mov
mov
xchg
xor
push
mov
decl
and
mov
lock
mov
arpl
int
pop
movsb
and
fstl
jmp
pop
out
push
call
lret
jnp
cltd
inc
lret
push
jne
stos
xchg
mov
or
add
inc
decb
and
popa
sbb
shll
mov
jecxz
loopne
imul
repz
les
sub
lret
jp
jge
xor
iret
pop
rcr
and
rcrb
or
es
shrl
ljmp
mov
xchg
push
xchg
das
xlat
fbstp
mov
add
inc
pop
rolb
popf
push
ljmp
sbb
push
in
or
idivb
jmp
ja
scas
into
mov
push
in
pushf
mov
daa
mov
or
mov
fwait
mov
dec
mov
inc
sarb
leave
inc
or
aas
in
xchg
mov
xchg
into
mov
push
xlat
jg
scas
aam
je
sbb
sub
mov
mov
mov
xchg
add
mov
dec
or
bnd
or
arpl
out
into
mov
xchg
push
mov
or
mov
jmp
cmp
cmc
mov
cmp
push
jmp
push
cwtl
pop
loop
mulb
leave
pop
sarl
inc
add
cmpb
lahf
dec
loop
jno
jne
in
push
popa
repz
mov
dec
mov
adc
repz
lcall
mov
cmpsl
or
sub
and
cmp
jo
xchg
lds
idiv
mov
je
lret
imul
cmpsl
mov
or
fwait
stos
jp
push
cmpsl
mov
push
sbb
inc
mov
in
ret
lea
sub
ss
sub
push
dec
mov
cltd
sbb
in
cmpsl
icebp
imul
cmp
xchg
pop
into
call
push
cmp
xchg
je
adc
test
push
xchg
xor
sub
dec
repnz
pop
push
and
rorb
mov
daa
loope
sub
aas
les
jp
lret
or
add
lea
jae
pushf
lea
jae
pusha
bt
bt
xor
pushf
pusha
jmp
push
adc
pushl
movw
mov
lea
jmp
jmp
into
xchg
es
fisubrl
mov
fidivrl
and
mov
pushf
cmp
sub
pushf
add
jle
daa
test
ds
pop
std
rcrb
es
clc
mov
fidivs
push
sub
fs
jae
adc
cmpsb
daa
test
repz
pop
std
iret
mov
pop
int
imul
mov
cmp
push
or
xchg
push
fsub
in
sub
mov
out
test
mov
nop
adc
popf
jmp
repz
cmp
mov
mov
sbb
in
add
mov
insl
fldt
movsl
icebp
jmp
adc
fwait
push
out
xor
and
pusha
movsl
nop
outsb
jns
rcrl
sub
jne
and
jae
test
mov
jcxz
jg
fsubrl
inc
cmp
push
shll
mov
lea
mov
cld
xchg
rcr
add
repz
fiadds
call
das
inc
and
jnp
gs
mov
or
mov
rep
pusha
lea
mov
movw
lea
jmp
jmp
pushf
pushl
pushf
mov
mov
push
pushl
ret
lea
jne
pusha
mov
pushf
stos
pushf
push
pushf
lea
jmp
mov
mov
jnp
jns
pop
mov
cmpsl
ja
pop
add
pop
mov
xlat
dec
loope
mov
fistl
push
inc
and
mov
cmp
test
shlb
push
push
push
or
rolb
in
push
cli
and
xchg
or
mov
int3
leave
outsl
fisttpl
sub
insl
mov
mov
jmp
push
lds
sub
pop
sbb
data16
fstpt
clc
ret
dec
pop
add
nop
fnsave
mov
lret
jno
out
add
mov
or
jp
inc
and
mov
fs
call
pusha
pushf
mov
lea
jb
push
pushl
ret
lea
bsf
mov
cmp
jmp
movl
pushf
push
pushf
mov
lea
jmp
add
shlb
dec
push
mov
mov
movsb
rorb
sarb
mov
test
xor
imul
stc
hlt
adc
and
xchg
mov
pop
mov
icebp
je
aad
jl
cmp
mov
mov
lret
out
fiadds
sti
push
dec
pusha
push
add
mov
dec
loope
xchg
xchg
mov
dec
add
ret
cmp
or
mov
movw
mov
jmp
stc
add
pusha
pushl
pushl
push
lea
jmp
pushf
lea
jne
call
mov
ss
lret
mov
leave
pop
add
sbbl
ljmp
add
popf
mov
dec
ljmp
push
inc
dec
paddsb
jo
and
mov
cmc
add
cmp
add
push
adc
testl
lret
aas
inc
xchg
ret
dec
shll
in
faddl
lods
sub
xor
jl
lcall
and
push
loop
mov
cmpsl
aaa
jmp
xor
dec
es
std
in
faddl
lods
cs
and
call
cmpb
jbe
add
mov
js
test
sub
test
xor
push
cmp
lret
shrl
aaa
jnp
enter
aas
les
imul
mov
psubw
dec
xor
cmp
push
int3
mov
ss
out
mov
lds
jo
js
sbb
add
addr16
sbb
aaa
jp
shr
sbb
dec
bnd
pop
rcrb
insl
stos
mov
pcmpgtw
pusha
lea
jne
jmp
rol
cmc
cmp
stc
neg
test
stc
clc
cmp
mov
mov
cwtl
bswap
lea
call
and
bound
cld
jle
and
cmp
and
paddusb
add
and
push
cmp
daa
pop
mov
adc
inc
add
xor
cmp
xchg
or
iret
dec
lahf
lcall
or
outsl
dec
inc
test
xchg
pop
cwtl
dec
xchg
and
movsl
add
mov
adc
add
add
add
in
add
add
add
ja
add
add
add
out
add
add
add
push
out
add
call
add
adc
add
repnz
add
add
add
xor
hlt
xchg
add
mov
jmp
adc
or
enter
xchg
add
scas
ffreep
lods
sbb
inc
jl
push
aaa
add
out
les
pusha
stos
cmpsb
arpl
sub
aaa
aas
jl
mov
out
jbe
dec
mov
shll
sub
sbb
and
addr16
mov
and
jnp
mov
mov
pop
fwait
pusha
aad
cmp
aas
xchg
lock
lods
test
and
dec
pop
sbb
adc
cmp
inc
adc
push
lret
push
roll
or
xlat
add
call
shld
movzbw
call
pushf
mov
pushl
pushl
push
mov
lea
jmp
pushf
movl
pushf
movl
movl
pusha
pusha
push
lea
jmp
push
pushf
push
movl
pushl
jmp
pushf
pushl
pusha
lea
jae
clc
bt
stc
jmp
pusha
lea
jne
call
cmp
jmp
repz
mov
cmpsb
inc
fldenv
lret
xor
mov
neg
testl
shl
and
dec
fcoml
data16
scas
test
fidivl
incl
pop
popf
fisttps
inc
add
pop
pop
std
sbb
jbe
xor
fs
mov
cld
add
and
mov
lods
pop
nop
pop
test
cmpsb
icebp
or
pusha
ss
mov
mov
movsb
gs
mov
adc
lcall
test
stos
pusha
lea
jmp
add
add
add
add
add
std
in
add
add
add
ja
add
add
add
out
add
add
add
push
out
add
call
add
adc
add
repnz
add
add
add
insl
pop
xchg
pop
inc
pop
inc
cmc
push
add
push
sbb
add
jne
inc
xlat
and
out
mov
sub
mov
in
ljmp
aaa
dec
pop
cmp
test
cld
icebp
es
dec
and
mov
pop
mov
ljmp
sarl
mov
enter
sbb
daa
add
xor
repnz
push
xor
sahf
push
adc
cmp
mov
mov
dec
pop
mov
adc
shrl
mov
lds
add
xor
or
cmp
pop
hlt
hlt
add
jmp
inc
andl
xor
jnp
add
pop
xchg
stc
enter
stc
lcall
push
rcl
mov
aam
aas
subl
pop
push
leave
push
cwtl
int
mov
inc
mov
jmp
sbbl
insb
adc
sub
cmp
jbe
fmuls
clc
push
aas
lcall
pop
shll
nop
std
xchg
mull
sahf
clc
pop
mov
push
mov
popa
or
xor
mov
pushf
hlt
pushf
mov
adc
xchg
pop
sub
mov
fcomp
fwait
rclb
sub
sbb
mov
mov
push
mov
adc
repz
sbb
sahf
adc
inc
pop
gs
enter
xchg
jae
push
push
pop
jne
mov
xchg
sbb
pop
clc
sbb
shrb
sbb
ljmp
xchg
adc
fs
sbb
mov
pop
ret
out
imul
in
dec
jl
pop
adc
lea
bound
in
xchg
test
jp
push
pop
in
pop
jl
cmp
test
jae
jle
push
mov
iret
pop
mov
sbb
adc
in
popa
jnp
out
call
mov
out
test
outsl
jge
cmp
inc
sbb
adc
adc
sbb
cli
dec
mov
clc
jbe
clc
aas
push
push
std
stc
ficomps
outsb
pop
sbbb
sti
and
jle
push
popf
add
push
push
pop
jne
dec
mov
jl
bound
cld
cmp
jbe
cmp
imul
sbb
mov
sub
and
add
adc
sbb
sub
push
rolb
push
hlt
hlt
hlt
push
cmp
lods
sbb
jmp
push
jle
arpl
sbb
sbb
clc
push
pop
sbb
sbb
sbb
in
pop
jl
push
push
jnp
ljmp
push
inc
sbb
outsl
in
outsb
push
push
xchg
insb
push
sbb
jge
dec
push
outsb
pop
nop
push
pop
jne
dec
ljmp
cmpsl
dec
mov
push
data16
jle
mov
push
mov
cmp
dec
dec
sahf
push
push
pushf
clc
jle
fwait
jne
push
in
in
jl
stos
loopne
jae
out
ljmp
mov
shl
jle
bound
pop
adc
insl
sbb
push
sbb
jbe
or
push
push
outsb
or
mov
popf
stc
sbb
sbb
pushf
sbb
sbb
or
xor
push
pop
clc
sbb
sbb
mov
sarb
push
adc
cmp
jl,pt
pop
sub
xchg
fisubrl
repnz
cli
in
out
ljmp
lcall
jl
pop
mov
jp
push
push
ljmp
jl
pop
jle
xchg
adc
xchg
add
insb
and
mov
imul
sbb
jne
sbb
ret
mov
popw
push
or
stos
jg
scas
pop
mov
jns
sub
pop
sbb
outsb
cmp
pusha
xchg
inc
insb
movsb
jp
push
out
leave
adc
insl
push
cmp
mov
mov
insl
xchg
lret
or
outsb
dec
lods
dec
adc
sbb
bt
cmp
call
cmc
pusha
add
jmp
cmp
jmp
fldcw
lea
inc
in
xor
insl
das
rolb
aam
dec
sbb
scas
mov
push
push
mov
cmp
or
stc
sbb
stc
mov
sub
loope
xor
nop
mov
repz
sbb
cmp
or
dec
jle
mov
xchg
div
mov
xor
or
xor
pop
adc
inc
adc
xchg
lods
aas
jge
add
sbb
or
push
lret
orb
or
decl
neg
and
shlb
mov
rolb
int
mov
sub
lea
mov
mov
cli
mov
or
or
jle
mov
pop
sub
fbstp
in
scas
xchg
jnp
scas
sub
ja
dec
dec
lods
in
inc
dec
lds
push
or
xor
sbb
aam
jb
addl
lods
test
xchg
push
loope
repz
pop
mov
mov
lods
les
inc
and
jne
aam
je
ret
fmul
roll
in
adc
repnz
push
fmull
lock
pop
jge
or
jbe
mov
stos
push
inc
mov
ja
mov
or
cmp
push
cmpl
adc
out
mov
sbb
cmp
test
jnp
cmpsl
mov
mov
adc
jb
in
mov
xchg
inc
push
sub
lea
jg
xchg
call
aam
lods
je
add
int
push
mov
adc
jmp
mov
xor
popf
push
movsb
popf
pop
jb
mov
nop
xor
ret
and
sub
mov
pop
lods
jp
xor
leave
popl
cmpsl
or
jae
mov
dec
push
in
cld
lds
mov
sbb
push
sbb
test
xchg
enter
lcall
push
push
sub
inc
sbb
pop
or
xor
xchg
pop
or
jnp
cmp
sbb
jno
lea
insl
and
test
leave
iret
addl
xor
or
decb
mov
adc
stc
stos
out
cwtl
cmp
dec
mov
mov
mov
cmp
mov
in
xor
cwtl
sbb
ja
out
dec
ret
ja
mov
mov
xor
hlt
pop
pop
inc
loope
iret
shll
mov
mov
mov
cmp
loop
out
shlb
test
int
push
lods
mov
lea
sbb
pusha
adc
push
aas
lods
rorl
out
fwait
in
cltd
ss
cmp
pop
cmpsb
dec
ret
sub
js
bound
es
lds
jecxz
mov
sbb
mov
ret
mov
das
jo
ret
ret
insl
scas
mov
das
out
lods
ret
ret
icebp
jo
jno
ret
ret
jno
mov
das
jo
outsb
icebp
ret
das
out
ret
xor
sub
ret
mov
cmc
inc
add
push
fistpl
sbb
into
call
and
insb
or
lods
xor
loope
into
jb
orb
xor
xor
in
pop
xor
ds
icebp
mov
iret
ret
loope
mov
rcrb
push
wrmsr
lahf
rol
fadds
jne
sar
sub
jecxz
aad
mov
js
lea
xchg
pop
aam
movsl
addb
dec
inc
js
or
es
idivb
movsl
rcl
mov
jl
out
aam
mov
or
push
or
fidivl
fisubl
and
nop
dec
or
sbb
push
fildl
adc
xchg
imul
dec
pop
cmp
in
jg
dec
sbb
push
inc
mov
jmp
scas
sahf
inc
loopne
aaa
mov
int3
orl
add
leave
mov
je
adc
dec
in
jns
jbe
fdivl
add
mov
ret
mov
push
mov
shlb
bound
pop
pop
xor
pop
sahf
add
jns
mov
adc
fildll
or
imul
push
mov
sbb
mov
sbb
sbb
mov
sbb
movsl
adc
pop
mov
or
jne
adc
imul
aam
adc
insb
sbb
gs
mov
push
mov
outsb
arpl
jnp
gs
mov
imul
cli
bound
cld
data16
test
stos
test
push
jae
dec
imul
sbb
inc
sbb
xchg
and
popa
dec
fsubrl
adc
push
shrb
jbe
sahf
pop
pop
mov
adc
shlb
fwait
addl
push
mov
cmpb
popl
in
repnz
dec
pop
adc
imul
xor
pop
sub
pop
push
mov
out
fucomip
fwait
movsl
inc
or
xchg
es
inc
pop
fadd
bound
sbb
outsl
pop
cltd
mov
push
mov
fstpl
mov
mov
xchg
mov
aam
lcall
jno
xchg
fiaddl
mov
jp
pop
stos
loopne
adc
push
push
and
inc
pop
mov
sbb
ss
xor
rcrb
mov
std
rcll
cltd
add
ret
and
push
pop
fstpt
scas
popf
push
movsl
pop
hlt
lcall
xchg
mov
dec
clc
inc
cltd
cs
icebp
pop
push
mov
pop
cmpsb
mov
cmc
cmc
jne
push
push
jmp
insb
outsb
int
clc
mov
insl
jle
adc
pop
mov
jle
push
inc
fldl
test
pop
pop
sbb
adc
adc
insl
push
pop
dec
fdivp
push
scas
mov
jl
lcall
aas
js
cmp
pop
or
jbe
xor
popf
push
fwait
aad
xchg
xlat
addr16
cs
adcl
sub
rcrl
pop
jle
push
sbbb
or
cltd
ds
addl
push
inc
xlat
mov
lahf
or
test
fsubs
inc
nop
push
xor
sbb
roll
loopne
cmp
mov
push
mov
pop
xchg
fdivl
jo
mov
inc
test
aam
lea
pop
sub
fsubrl
lcall
cmp
push
xchg
mov
mov
push
or
outsb
cli
mov
in
imul
or
adc
fwait
js
cltd
and
pop
loopne
push
pop
push
adc
mov
and
xchg
subb
insl
push
mov
xchg
ficomps
sbb
or
mov
mov
bound
pop
push
fwait
adcl
mov
mov
mov
das
scas
sub
outsb
lret
pusha
jle
movsl
stos
mov
hlt
mov
adc
jnp
add
movsb
in
lods
aaa
test
fwait
dec
mov
lods
mov
push
pop
aas
sbb
or
add
mov
popf
dec
cmpsl
je
pop
lcall
push
sbb
fcmovbe
pop
insl
rclb
test
xchg
xchg
push
pop
dec
je
test
test
scas
dec
repz
wbinvd
loope
xchg
ficomps
outsb
adc
clc
xchg
int3
xchg
xor
jp
sbb
insl
mov
movsl
lcall
pushl
sub
jp
popw
fstpl
pop
mov
xchg
sbb
pop
jle
mov
sbb
pop
sbbb
fwait
push
fwait
dec
fdiv
fstpl
cmc
cmp
ss
pop
add
movsl
dec
out
cmp
ljmp
xor
xchg
pop
ss
jae
fldt
adc
mov
sbb
outsb
sbb
sub
push
pop
cld
xchg
pop
add
lahf
cmpsl
push
add
jno
and
mov
push
push
mov
add
fnstsw
daa
sbb
outsb
adc
fwait
cmp
xor
or
xchg
in
push
push
mov
adc
les
loop
xorb
xchg
cli
xor
adc
cmpsl
lock
push
xor
pop
jnp
xchg
pop
adc
test
movsl
adc
xor
sbb
and
dec
mov
push
loope
xchg
addr16
clc
mov
xchg
cld
fwait
xlat
sbb
mov
adc
sarb
ja
fdivr
mov
outsb
cwtl
mov
xlat
mov
fnstcw
sbb
mov
jno
push
fwait
push
loope
lock
lea
add
lcall
jns
adc
push
push
inc
std
outsl
sbb
xchg
adc
stos
fnsave
imul
mov
xchg
adc
mov
inc
or
je
cs
repz
sti
data16
or
pop
stc
scas
adc
sub
out
sbb
and
xchg
bound
xchg
dec
xor
inc
sbb
mov
adc
add
repnz
inc
ss
stos
test
sub
imulb
fistpl
lods
or
popf
clc
sti
mov
push
test
dec
jbe
jb
outsb
sub
adc
mov
mov
ficoms
mov
hlt
jmp
cmpsl
test
pop
mov
ss
add
and
idiv
mov
xor
xchg
adc
in
inc
cmpsl
mov
jbe
jp
or
or
jne
dec
pop
dec
jge
std
loop
xchg
insl
int
push
adc
sbbl
adc
cmpsb
xchg
hlt
xchg
mov
mov
in
sarl
int3
lret
imul
scas
sahf
lea
push
xchg
sbb
mov
data16
outsb
adc
xor
xor
outsl
inc
pop
jl
in
inc
imul
jg
sbb
adc
imul
insl
mov
jb
cmpsb
cmp
stos
js
sbb
jle
mov
inc
test
popa
out
jne
adc
xchg
jl
out
and
imul
jmp
xor
add
sahf
jnp
xor
jge
insl
pop
pop
fimull
insl
dec
adc
pop
xchg
popa
gs
push
pushf
xchg
clc
nop
out
dec
jle
jno
jp
adc
ljmp
sti
shll
es
adc
sub
dec
push
loopne
jle
jl
adc
push
pop
sti
stos
rorl
cmp
mov
inc
or
adc
test
dec
fs
mov
fwait
pushw
cli
xchg
out
inc
dec
insb
bound
mov
incb
push
ss
idiv
sti
dec
push
stc
fiaddl
cs
aam
adc
dec
dec
xlat
pop
scas
dec
cs
adc
cwtl
cltd
scas
cmpsl
aaa
mov
mov
jb
dec
jnp
in
sbbb
inc
adc
nop
ss
in
sub
xchg
imul
movsl
gs
jl
push
xchg
sbb
ss
add
jle
js
jbe
fcoms
lcall
adc
jmp
mov
cmc
pop
jbe
adc
aas
jnp
jbe
pop
adc
inc
and
insl
pop
xchg
fildll
je
orps
lock
int3
jbe
pop
out
cmpsb
stc
test
xor
gs
push
cmpsl
mov
in
imul
mov
jg
out
sbb
xchg
dec
sbb
ljmp
cld
ficoml
push
mov
mov
popa
mov
ja
fcomps
adc
push
jbe
scas
jp
jle
xor
xchg
pop
scas
dec
pusha
mov
mov
sub
cmp
fcoms
mov
out
call
push
stc
push
adcb
push
cmp
andl
es
and
fwait
lcall
fcmovu
mov
into
mov
cmp
pop
xchg
into
call
jp
fstpl
jge
add
sbb
adc
push
fwait
add
xchg
sbb
pop
daa
dec
scas
cld
mov
lods
pop
leave
aad
sti
mov
fcompl
rcrb
fldl
jg
adc
ficomps
popf
and
sahf
adc
xchg
push
add
and
pop
or
dec
and
fwait
inc
popf
pop
xchg
mov
je
outsl
mov
or
push
pop
es
pop
out
pop
xchg
mov
cmp
or
jp
jns
gs
adc
lcall
sbb
xor
jl
adcl
popf
pop
fwait
add
and
lds
dec
fidivrs
cli
and
and
inc
cmc
into
test
push
adc
sub
xor
pop
xor
fcmovnu
pop
jno
cmp
jbe
adc
popa
js
je
out
ja
js
repz
sub
jg
cmp
call
xchg
sbb
mov
lcall
dec
fs
add
push
xor
pop
add
cmpsb
lret
xchg
test
adc
inc
or
pop
ljmp
sbbb
mov
cwtl
or
movsl
pop
sahf
pop
ljmp
inc
push
fstpt
in
je
loopne
jl
imul
mov
mov
cmp
adc
jmp
lds
outsl
sbb
mov
push
test
stos
inc
outsb
lcall
insl
out
inc
xchg
rolb
mov
repz
lret
scas
push
add
stos
xchg
adc
push
jns
sbb
xchg
pushf
sub
lods
data16
addr16
jge
syscall
push
dec
call
les
addr16
fwait
scas
dec
push
enter
adc
mov
clc
js
in
inc
push
iret
fwait
jge
push
mov
cmp
xlat
ds
pop
adc
xchg
inc
inc
dec
mov
je
inc
jl
pop
outsl
xchg
scas
sbb
imul
jno
outsl
enter
pushf
cmp
js
mov
xchg
outsb
xchg
push
sub
shrb
shlb
flds
push
insb
sbb
adc
pop
xchg
and
fwait
push
dec
gs
pusha
pop
sarl
adc
mov
fwait
std
sbb
fisubrl
mov
sub
push
enter
adc
sbb
sbb
or
shrl
test
cld
sub
pop
mov
pop
xor
jmp
jb
fistpl
jp
xorl
cmp
fdivl
sbb
push
sub
pop
outsw
ljmp
xchg
sub
or
pop
cli
xchg
adc
sbb
push
popf
pop
notb
sahf
jg
adc
xchg
pop
stc
inc
mov
and
stos
cmp
sbb
jle
bound
pop
cmp
jno
sbb
cmpsb
pop
aas
jle
outsl
pop
sbb
ja
call
imul
repz
stos
adc
adc
cmp
fnstsw
mov
adc
xchg
outsl
adc
push
jp
push
div
fdivl
jbe
movsl
adc
in
shrb
add
data16
bound
fs
insl
popf
push
pop
jne
pop
dec
scas
fdivrl
inc
pusha
lea
insb
push
mov
fsubrs
sub
sbb
sbb
dec
pop
daa
mov
icebp
pop
jmp
movsl
pop
dec
in
outsb
icebp
xchg
inc
test
push
sub
arpl
outsb
ss
jbe
in
xchg
adc
sub
sbb
stos
cmp
cwtl
xchg
push
insb
sbb
xchg
mov
pop
rolb
pop
sbb
jae
cmp
fstps
loope
inc
mov
adc
out
add
or
frstor
fdivs
sbb
fidivrs
mov
xor
sbb
mov
movsb
mov
push
inc
cltd
aad
or
fstl
pop
arpl
pop
sbb
jb
pop
out
das
sbb
xchg
cltd
mov
fwait
sbb
xlat
push
push
ljmp
or
fs
roll
insb
mov
sbb
sbb
dec
outsb
sub
adc
jle
lea
xchg
jbe
push
cs
rclb
loope
push
mov
sbb
push
sbb
ds
inc
gs
xor
push
mov
push
pop
push
fs
xor
outsb
mov
cs
dec
loopne
adc
adc
pop
arpl
test
inc
div
adc
repnz
outsb
cmpsl
ret
cmp
mov
sahf
addb
imul
push
jne
adc
popa
adc
hlt
data16
mov
out
inc
sahf
sub
sbb
xchg
orb
lret
mov
insb
mov
jnp
sti
fmul
mov
orb
mov
jg
adc
push
jmp
mov
xor
pop
adc
pop
dec
dec
jle
or
rcrb
cwtl
std
std
dec
test
andl
les
out
adc
popa
mov
xchg
mov
popf
outsb
pop
mov
xchg
xchg
pop
dec
xchg
xchg
insb
sahf
enter
add
push
push
add
stos
inc
push
xorb
push
sbb
xor
jmp
filds
pop
jl
outsb
mov
adc
sbb
cwtl
movsl
loop
sbb
pop
mov
ja
pop
dec
add
xor
mov
jge
add
adc
bnd
movsl
cmp
push
movsl
in
cwtl
popf
aad
dec
mov
aad
sahf
mov
jb
lods
insb
adc
out
pop
inc
push
dec
sub
fnstsw
push
inc
call
or
mov
adc
jl
xchg
popf
add
mov
out
sbb
inc
int3
mov
push
imul
mov
mov
adc
jge
push
imul
ss
push
fcoms
movsl
shrb
mov
in
dec
clc
ja
jge
addr16
pop
push
mov
jg
lret
cmpsl
addr16
jg
pop
xchg
dec
mov
push
cmp
mov
aaa
adc
addr16
lcall
xchg
mov
int3
pop
cwtl
jbe
ret
pusha
movsb
sbb
xor
sbb
test
loope
bt
or
or
mov
push
and
imul
pop
popf
and
dec
cmp
sbb
mov
mov
mov
dec
mov
push
arpl
adc
push
add
sarb
add
lret
insb
mov
jecxz
flds
cltd
mov
push
aam
xchg
pop
mov
cmp
push
mov
mov
push
jns
sbb
adc
insl
add
and
dec
fwait
inc
cs
add
pushf
sub
xor
inc
xor
divb
in
inc
mov
out
push
outsb
pop
mov
ss
pop
mov
imul
adc
std
mov
je
xchg
jns
sbb
mov
call
xchg
lcall
push
mov
inc
or
leave
popf
cmp
sarb
push
daa
dec
adc
inc
outsl
xchg
testb
pop
xchg
cmpl
pop
push
addr16
push
jns
or
xor
push
outsl
dec
mov
orb
push
and
mov
pop
inc
gs
mov
xchg
inc
imul
stos
clc
stc
mov
popf
and
push
push
jnp
in
insb
jl,pt
invlpg
test
fs
jns
push
test
push
mov
fs
ljmp
jbe
adc
mov
rorl
pop
xor
scas
faddl
lcall
push
arpl
push
push
and
inc
inc
jg
cltd
or
inc
notl
adc
dec
adc
rclb
dec
xor
mov
outsl
xchg
dec
rcrl
dec
dec
bound
xor
adc
sbb
push
scas
cmpsl
jns
addr16
in
jp
scas
push
into
sbb
ss
cli
push
and
mov
push
xor
cmp
aad
push
inc
inc
xor
lods
fldl
sbb
mov
sbb
xchg
out
movsl
mov
cmp
bound
ja
fs
adc
bound
xor
pushf
push
jmp
std
xchg
cmp
push
jge
in
adc
inc
mov
jae
push
add
movsb
and
pop
ficoms
into
xor
mov
in
jo
xchg
add
repnz
push
mov
test
iret
outsb
push
les
jecxz
dec
leave
xchg
pop
cmpsb
push
fwait
je
jp
scas
push
fwait
lcall
lds
sbb
cld
adc
movsl
inc
popa
test
push
leave
popf
or
and
sub
mov
lea
inc
movsb
mov
mov
ljmp
mov
jge
movsl
adc
jns
pop
sbb
sbb
mov
insl
sbb
hlt
xchg
pop
mov
xchg
sahf
xorl
sbb
xchg
insl
sub
fs
xor
inc
pop
pop
push
sub
fcompl
ljmp
pop
xor
pop
mov
lock
call
frstor
sbb
push
loopne
jmp
push
rorl
ret
push
sbb
mov
test
xchg
pop
push
out
push
pop
jbe
or
mov
sub
ds
push
loope
push
sbb
sbb
icebp
lret
ljmp
shl
cwtl
enter
fildll
jge
xchg
movsl
sti
push
sub
xor
cmc
cltd
push
jmp
pushf
push
pop
inc
mov
outsb
stos
jge
std
insl
jb
xchg
dec
stos
adc
pusha
jl
ret
js
repz
xor
ja
adc
in
sub
xchg
adc
sub
jmp
cmc
enter
sahf
pop
pushf
jo
pop
sub
jnp
sub
cmp
add
mov
je,pt
mov
mov
jne
lods
jl
jno
jb
jl
fwait
mov
adc
adc
sbb
adc
pop
nop
pop
xor
cmp
insl
insl
or
cmpsl
nop
mov
jle
in
sub
cs
sbb
test
dec
out
sbbb
fsubrl
pop
adc
shlb
lcall
fmuls
aam
adc
into
push
inc
sbb
fwait
lds
sbb
inc
fldl
ret
pop
jle
sbb
cltd
xchg
aaa
scas
add
hlt
lea
mov
mov
xchg
add
pop
xor
pop
andl
ss
outsb
mov
lcall
in
dec
pop
fbld
jp
cltd
xlat
mov
mov
imul
xchg
insl
or
sbb
fisubrs
ljmp
push
decb
sbb
pop
arpl
dec
lds
cmp
pop
dec
pop
scas
sbb
push
mov
lret
mov
jle
cmp
jg
mov
test
inc
xor
push
out
shrb
push
int
mov
mov
jl
add
adc
stc
mov
sbb
inc
add
pushf
xchg
pop
xlat
cmp
jp
mov
add
or
pop
jp
xchg
pushf
xchg
xlat
les
adc
ds
push
dec
cltd
out
inc
dec
adc
insl
adc
dec
jne
adc
xchg
popa
adcl
test
sbb
iret
insb
lret
xlat
cmc
mov
push
jae
cld
js
pop
mov
fdivrl
mov
jbe
push
fs
xchg
pop
xchg
outsl
mov
push
jl
pop
insb
dec
jp
lods
sbb
out
clc
insl
pop
ss
xor
jp
mov
jp
lods
cmp
inc
sbb
jp
adc
adc
inc
mov
out
loopne
adc
add
insb
sub
adc
adc
mov
sahf
out
jp
adc
pop
cmp
outsb
or
and
push
push
push
out
jnp
outsb
jae
inc
dec
outsb
inc
imul
push
adc
out
inc
and
movsl
push
lret
scas
pop
cmpsl
enter
jle
cli
cmp
jp
jo
out
stc
jbe
push
inc
repnz
repnz
iret
jle
movsb
int3
inc
xchg
mov
rclb
cmp
xor
pop
inc
out
bound
jp
mov
jp
mov
jp
mov
jle
mov
push
cmc
xchg
mov
jl
notl
jge
aam
and
outsb
sbb
mov
adc
mov
push
push
sbb
jg
xchg
sahf
sbb
outsl
push
subb
fimuls
fs
pushl
fistl
dec
jae
sbb
into
inc
sbb
push
pusha
pop
xor
sahf
add
mov
sbb
sbb
bound
mov
ja
sbb
outsl
xchg
in
sbb
sahf
adc
xchg
mov
xlat
lods
adc
push
push
dec
fwait
mov
cld
cmpsb
cli
imul
jg
mov
mov
into
insb
xchg
jle
pop
add
pop
mov
sbb
outsb
fistpll
or
adcb
mov
test
lret
sarl
mov
ss
push
mov
cmp
lods
adc
and
fsubs
push
fucomi
sbb
dec
xchg
mov
inc
pop
xchg
mov
pushf
push
hlt
xor
mov
or
add
push
mov
pushf
sbb
adc
scas
or
insb
mov
xor
push
into
pop
mov
sbb
and
add
xor
sbb
outsl
push
lahf
mov
sbb
sbb
sbb
sahf
xchg
mov
data16
out
ja
ss
cwtl
sbb
mov
inc
xor
jp
movsb
or
mov
in
push
sbb
or
jecxz
push
dec
mov
insl
and
mov
dec
stc
movsl
jo
sbb
mov
xorb
stos
xchg
add
mov
add
pop
imul
sub
imul
adc
out
sbb
fnstsw
outsb
test
push
adc
sbb
or
js
sarl
pushf
add
ja
das
aaa
fdivr
fcompl
popf
cmp
bound
sub
push
or
cli
xor
int
mov
add
ja
sahf
loop
fnsave
mov
and
sbb
sub
call
add
mov
pop
add
jge
adc
push
lret
stos
test
insl
je
jbe
pop
inc
mov
lea
in
dec
push
pop
pop
inc
lods
stos
adc
mov
pushf
addr16
push
pop
xor
sbb
and
ds
ds
cld
aad
sbb
mov
inc
fnstsw
aas
xor
into
mov
push
sub
arpl
arpl
gs
stos
jb
pusha
cmp
and
test
lock
fst
or
mov
inc
xchg
mov
push
insb
pop
sub
ret
lods
push
inc
in
and
mov
xor
sbb
xor
xchg
mov
fs
cmp
popa
scas
dec
and
fdivr
mov
icebp
sbb
fistpl
insb
pop
testb
insl
xchg
adc
adc
icebp
ja
add
jg
adc
xchg
or
sbb
cmp
pop
mov
fisubrs
rcrb
insb
jns
out
leave
lcall
test
frstor
mov
sbb
mov
xchg
adc
fldl
fwait
insb
add
cmp
xchg
bound
test
adc
sti
sub
add
jl
sbb
popa
sbb
pop
mov
mov
movsb
xchg
push
push
inc
aaa
mov
jle
pusha
ret
dec
jbe
xchg
aam
push
jecxz
sbb
pop
xor
mov
mov
pushf
lret
xor
xchg
push
ds
jge
jg
mov
jge
sbb
pushf
fnstenv
sbb
mov
xchg
movsb
xchg
jo
adc
fistpll
imul
shll
out
leave
jno
shrb
push
jns
add
sbb
mov
sub
sahf
inc
inc
sub
jns
adc
mov
nop
rorb
sarb
sub
les
sbb
mov
in
mov
xchg
je
jg,pt
popa
lret
sti
pop
les
mov
in
push
push
xchg
push
adc
jp
das
addr16
or
outsl
lcall
mov
ljmp
mov
mov
insb
mov
sbb
lock
mov
addl
in
mov
pop
jg
and
jne
jp
mov
adc
test
jge
gs
lcall
nop
sbb
dec
int
dec
add
out
inc
pop
pop
std
in
ja
cld
and
adc
lahf
sub
push
sbb
sub
int
inc
jle
stos
lods
pop
lods
sub
dec
adc
outsl
lcall
cli
xchg
and
cmpsb
les
push
pop
adc
inc
loopne
test
imulb
fwait
mov
jg
push
pop
shll
adc
imul
outsb
cmp
sub
or
mov
hlt
jne
fistl
push
insl
xor
scas
ss
shrl
add
sbb
mov
push
dec
push
stos
es
xchg
inc
cli
stc
add
test
push
mov
cmpsl
cltd
inc
pushf
sbb
add
adc
cmp
add
jle
adc
adc
xchg
jbe
xor
sub
jg
das
std
scas
mov
inc
aas
jmp
sarl
enter
add
das
mov
fldt
mov
aaa
insl
mov
es
imul
dec
cmp
fiaddl
fldcw
js
adc
cltd
adc
inc
xchg
ret
and
inc
mov
pop
imul
fcoml
pop
mov
outsl
xchg
jae
popa
clc
mov
das
jbe
add
inc
test
out
pop
lret
xor
xchg
jg
mov
mov
sbb
jns
outsl
sub
fcomps
data16
in
mov
inc
mov
sbb
add
inc
adc
inc
mov
dec
pop
bsr
push
push
int
mov
jle
mov
sbb
mov
push
jg
mov
push
mov
clc
imul
in
sbb
mov
cltd
jae
sbb
sbb
sub
mov
adc
roll
xor
aam
xlat
imul
cwtl
mov
stos
pop
in
jno
cwtl
dec
int3
sub
sbb
test
lret
xor
insb
jae
lcall
or
pop
loopne
xor
lock
mov
add
jb
jne
js
inc
push
pop
int3
jns
int
sub
adc
subb
jne
adc
test
xchg
ret
jo
cwtl
pop
adc
pop
rcll
mov
sbb
add
sub
dec
add
rcll
xchg
pop
xchg
test
or
popa
xor
fdivr
or
call
adc
xchg
pop
sbb
sbb
rcrl
dec
pushf
mov
stc
ret
cmpsl
dec
jmp
sbb
inc
xlat
mov
jecxz
adc
adc
cmp
dec
je
orl
mov
pop
outsb
adc
push
jle
call
sub
push
fs
mov
push
add
lcall
adc
push
sbbb
sbb
jl
fdivrs
cmp
aad
cmp
fucomi
scas
jl
pop
push
fildl
mov
pushf
xchg
movsb
lcall
pop
mov
pop
jp
jg
add
and
movsl
cmp
xchg
jecxz
and
shl
cli
sub
add
data16
inc
add
xchg
push
push
push
fisttpl
xchg
xor
or
and
nop
outsl
xlat
pop
push
hlt
pop
sub
test
push
sbb
sahf
push
and
jge
push
and
pushf
scas
adc
push
test
ss
arpl
outsb
out
adc
xor
xchg
pop
pop
mov
pushf
adc
push
push
mov
sbb
in
xor
sub
scas
mov
adc
jns
test
rcl
xor
mov
das
jb
lods
xor
mov
xchg
dec
adc
cmc
inc
test
pop
sbb
xlat
push
mov
movsb
jnp
out
stos
cmpsl
sub
push
rorb
mov
pusha
cmp
push
mov
push
dec
bound
push
xor
sbb
adc
dec
adc
jbe
mov
nop
mov
in
dec
push
shll
push
pop
or
dec
xor
push
xchg
sub
add
outsl
pop
loope
push
jnp
dec
pop
xchg
jp
push
loopne
popf
add
cmp
in
mov
sbb
jo
pop
arpl
xchg
roll
pop
xlat
clc
sbb
arpl
xor
cmp
call
dec
sti
popf
add
bnd
outsl
scas
xor
cmp
in
or
test
xor
dec
mov
jo
jl
fnsave
cwtl
pop
mov
jge
lods
in
xchg
aad
sbb
into
push
hlt
lods
mov
fwait
adc
in
cli
jmp
sbb
and
rclb
mov
lods
pop
lret
les
cmpsl
pop
sbb
test
out
pop
sbb
stos
pushf
jg
outsl
popf
add
push
mov
mov
ljmp
adc
paddusb
jne
mov
mov
mov
test
js
js
sbb
pop
jle
lods
or
pop
add
paddsb
mov
cmp
or
mov
lock
out
scas
ja
imul
aam
pop
data16
mov
adc
mov
pop
fcmovnb
push
mov
sbb
imulb
dec
fsubl
popf
cmp
cs
jle
scas
and
xchg
mov
jae
pusha
pop
fsubl
pop
push
cmp
sbb
push
outsb
fldl
popaw
sahf
outsl
enter
outsb
sahf
jge
inc
jl
push
lods
data16
xor
sbb
mov
cli
push
stc
sub
in
clc
out
or
scas
mov
fisubrs
imul
fcomps
sbb
inc
add
inc
xchg
outsl
xchg
es
andb
sbb
lds
cmpsl
lret
jo
xlat
dec
pop
rol
insl
inc
mov
jb
pop
sbb
data16
push
push
dec
xchg
test
push
andb
push
push
mov
jae
mov
in
in
cmc
xchg
into
clc
inc
addl
jg
jne
pushf
mov
pop
push
mov
lods
adc
jle
push
push
mov
adc
mov
adc
adc
enter
fcomp
inc
xor
pop
mov
or
dec
jae
stc
xor
add
jp
sbb
inc
add
sbb
loop
test
cli
xchg
pushf
repnz
scas
test
lds
or
and
lret
cmp
cmpsb
test
jns
mov
lds
lret
js
into
pusha
sahf
xchg
or
mov
sub
xchg
in
loop
pop
xlat
pop
or
pop
mov
jne
inc
fnstcw
jne
sbb
mov
sti
inc
push
sbb
inc
xor
imul
sbb
push
adc
rcrl
popa
push
jne
cmpsb
ret
lahf
sbb
cwtl
in
jp
pop
xor
jp
add
xor
mov
stc
xchg
mov
and
ja
sub
jne
xchg
popf
cld
dec
cmpsl
jne
xor
les
popf
ret
outsb
dec
adc
inc
xchg
in
gs
xchg
xchg
out
sbb
mov
addr16
aam
clc
mov
sbb
nop
xor
into
addr16
xchg
add
xor
pop
sahf
inc
popf
mov
inc
xchg
push
dec
outsb
inc
or
lcall
dec
mov
sbb
xor
cli
inc
mov
push
cmpsb
push
mov
jne
aad
test
cmpsl
dec
xchg
sub
xor
out
sub
push
pop
mov
rorl
xor
pop
mov
pop
mov
inc
stc
mov
pop
into
xorl
gs
hlt
in
dec
adc
fdivl
fidivs
mov
jne
mov
mov
adc
lock
inc
sbb
int3
testl
xchg
push
aad
adc
jp
mov
mov
pop
mov
out
xchg
ss
les
out
mov
cmp
mov
fmull
pop
sub
scas
jne
subb
push
sti
bound
jae
ret
jle
outsl
std
adc
repnz
mov
jge
sbb
jae
sbb
xchg
push
cwtl
clc
add
xor
lea
xchg
adc
adc
pop
fcomps
enter
dec
adc
jns
jge
and
jge
mov
dec
insl
push
jle
mov
lods
fwait
lahf
cmp
or
addb
jmp
jmp
and
insb
cld
inc
mov
xor
shll
cmc
mov
push
call
sbb
and
adc
mov
popf
cmp
js
imul
dec
sub
stos
xor
push
pop
cld
mov
hlt
cltd
cli
lods
std
and
mov
scas
jle
cmpl
cmp
lahf
std
movsb
mov
lods
cs
outsl
mov
cmp
jle
out
push
mov
in
xor
shll
pop
sbb
sbb
jnp
fistpl
mov
jp
add
dec
fwait
mov
dec
xor
cmpsb
mov
add
fildl
out
mov
xchg
adc
xchg
lret
push
inc
dec
xorb
daa
mov
pop
jg
dec
add
or
popf
insb
xor
mov
jmp
xchg
adc
outsb
popf
test
outsb
cmpsb
lods
ds
hlt
xor
into
jle
loop
xchg
and
xor
pop
xchg
mov
mov
movsl
dec
mov
test
dec
dec
cmpsb
testl
rcrb
pop
cmp
std
insl
pushf
push
aad
sbb
pop
pop
mov
mov
jle
or
test
push
outsb
cmc
mov
cltd
adc
push
stos
ss
lret
mov
pop
and
outsb
mov
jle
scas
mov
repnz
adc
mov
gs
sub
aas
ljmp
loopne
mov
test
pop
dec
bound
test
adcl
stos
add
ss
mov
in
pop
mov
out
stos
dec
mov
mov
ss
mov
outsb
push
popa
jp
xor
cli
mov
or
fldenv
sbb
inc
adc
and
test
pusha
jns
bound
mov
pop
data16
sub
and
pop
je
pop
call
and
xchg
jp
jbe
ds
pop
jb
sbb
xchg
shrb
pop
sahf
cmp
aas
cwtl
mov
movsb
js
sbb
add
jp
ss
fisubl
sbb
xchg
ficompl
xor
xor
xor
insb
dec
mov
or
mov
push
pop
pushf
int
ss
and
and
arpl
clc
ficoml
adc
cwtl
sahf
es
pop
mov
pop
adc
in
andb
int3
jbe
sub
pusha
and
push
xchg
insb
aas
mov
dec
out
push
rcrl
jmp
dec
lret
shlb
cli
mov
cmp
clc
lret
fldl
aas
mov
test
sarl
mov
sbb
dec
int
imul
lret
sbb
xor
mov
add
sub
xchg
stc
push
fimull
lods
mov
pop
imul
insl
cltd
sub
js
push
sub
adc
mov
or
and
arpl
popf
lcall
push
mov
ret
scas
jbe
icebp
ja
push
cmpsb
inc
dec
dec
cmp
in
test
lods
cli
dec
push
outsb
add
sub
xor
push
test
sahf
stos
lods
ss
xchg
call
cmpsb
sti
scas
inc
jo
jp
data16
jmp
jnp
dec
lret
sub
divb
ljmp
xchg
js
lcall
dec
rcrl
lock
movsb
inc
imul
mov
mov
imul
rcr
or
xor
lcall
and
data16
ds
mov
ss
popf
lea
js
push
pop
adc
std
or
jg
ss
das
leave
ficoms
dec
gs
jl
imul
mov
test
shlb
cli
movsb
xor
cwtl
jle
aas
shrl
sub
fsubs
mov
fcompl
mov
test
insl
pusha
imul
inc
cmp
sbb
or
fwait
inc
sti
mov
popf
lea
iret
jnp
inc
test
out
clc
mov
insl
sbb
add
sbb
sbb
sbb
mov
fmull
jo
cmpsb
sbb
adc
xor
push
and
outsl
sbb
push
sbb
mov
sub
mov
bound
sbb
cmc
scas
xchg
jge
mov
fistpl
inc
lods
scas
xor
dec
bnd
std
xchg
pop
xchg
jne
jp
mov
xor
dec
adc
push
mov
pop
mov
push
push
xchg
mov
cli
testb
mov
pop
sbb
lods
cmp
add
push
jne
nop
outsb
add
nop
loope
cs
nop
adc
outsb
xchg
add
cltd
outsb
bound
sbb
adc
pop
adc
adc
jp
jecxz
std
movsb
outsl
lcall
mov
push
cwtl
adc
idivb
les
movsb
cmc
adc
shrb
adc
cli
jp
push
ljmp
outsb
movsb
out
or
xchg
outsb
mov
jge
mov
jge
mov
xchg
gs
adc
std
mov
fs
inc
mov
adc
pop
pop
push
stos
xchg
mov
hlt
jae
leave
mov
xchg
adc
idivb
lcall
imul
cmp
fwait
xor
mov
jmp
inc
pop
sbb
gs
pop
sbb
cmpsb
and
dec
or
cs
inc
out
arpl
sub
rcr
sbb
pop
xchg
xchg
xor
jbe
adc
mov
pop
sub
lcall
add
clc
cs
stos
scas
sbb
and
mov
pop
outsl
repz
push
or
out
pop
fiaddl
sti
sbb
in
cld
jns
xchg
cltd
pop
sub
inc
lea
mov
jae
scas
mov
push
xchg
sbb
ja
outsl
cmp
into
pop
xchg
ds
rolb
inc
fidivl
or
bound
fs
aad
cmp
cmp
fnstsw
popa
pop
outsl
rclb
push
mov
lret
push
inc
mov
mov
adc
sub
xchg
cli
inc
mov
and
jge
ja
jg
es
pop
jb
jns
std
xor
inc
fisttpl
es
xor
pop
scas
jns
clc
mov
sti
fsts
fildl
out
cmp
out
adc
fstpl
sbb
adc
push
pop
lret
movsb
enter
jp
jmp
adc
mov
xchg
popa
pop
push
add
adc
xchg
cmp
imul
mov
push
cmp
dec
dec
aad
loop
jecxz
mov
sbb
aam
xor
jnp
xchg
xchg
and
push
xchg
push
shl
pop
mov
outsb
xor
pop
xor
enter
or
dec
scas
aad
cmp
sub
xchg
mov
arpl
je
mov
shr
pop
in
xor
sbb
jp
testl
dec
or
insl
sub
pop
or
dec
stos
pop
push
mov
push
es
adc
inc
push
pop
mov
pop
sbb
adc
lods
xchg
pop
movsw
mov
jne
test
jae
cld
lods
xchg
dec
outsb
push
adc
imul
pop
adc
out
in
gs
adc
mov
xchg
fisubl
ret
jp
subb
shlb
jle
shlb
mov
movsb
sbb
insl
ficomps
popf
pop
inc
aas
mov
dec
sub
sbb
push
imul
int
mov
mov
cmp
pop
outsb
add
imul
fmull
or
imul
fcom
test
aaa
mov
adc
pop
xor
in
adc
enter
jne
adc
cmp
les
jae
daa
xchg
mov
rcl
xchg
imul
stos
nop
testl
ljmp
pop
add
out
xor
cmc
popl
and
pop
test
cmp
fimuls
ds
mov
sub
test
in
int3
out
cmpsb
pop
lahf
lods
movsb
loopne
fiadds
lret
sahf
inc
mov
outsb
add
xor
rclb
call
lea
jae
pushf
pusha
lea
jp
jne
pusha
jmp
movb
mov
pusha
pusha
mov
push
lea
jmp
jmp
pushf
call
lea
jbe
bt
adc
xadd
sub
shld
mov
call
movb
movl
movb
mov
mov
lea
jmp
pushf
push
lea
ja
call
je
xchg
pop
in
idivl
sbb
xchg
stos
push
jb
nop
std
push
dec
xchg
mov
jmp
mov
insl
adcl
sbb
cmpsb
addr16
scas
mov
rcl
loopne
sbb
push
sub
mov
dec
xchg
mov
mov
sub
adc
pop
fisubl
cmp
aam
or
mov
sahf
iret
into
int
lahf
loopne
mov
movsb
sub
mov
mov
mov
or
add
clc
stc
add
pusha
push
movl
pushf
lea
jmp
pusha
pushf
lea
jae
test
cmp
pusha
cmc
sub
mov
pushl
pushl
push
lea
call
ja
pushf
lea
jae
dec
dec
mov
mov
dec
not
inc
jmp
push
pushf
call
adc
pushf
call
inc
mov
icebp
or
push
sbb
lock
in
pushf
cld
insb
push
hlt
xchg
xor
sahf
loope
inc
xor
outsb
pop
repz
mov
adc
pop
or
pinsrw
inc
push
decl
test
je
xchg
inc
in
lds
mov
call
add
out
mov
sub
cltd
xchg
clc
scas
xchg
lret
nop
mov
xchg
mov
scas
popa
es
dec
xchg
jp
mov
or
lock
ja
jnp
loop
adc
sub
sub
gs
imul
jbe
mov
rcrb
arpl
in
sbb
mov
mov
xchg
dec
enter
add
sbb
iret
or
icebp
inc
mov
sbb
cmpsb
test
and
mov
dec
push
pop
adc
sbb
icebp
cmp
xlat
ja
jae
fisttpl
inc
stos
pop
cmc
lcall
cwtl
int3
jb
cmp
and
and
jle
arpl
daa
cld
or
loopne
push
inc
test
test
mov
push
mov
mov
shll
dec
and
xchg
cmp
icebp
jmp
push
das
fwait
jnp
xor
mov
mov
mov
lret
mov
sar
call
mov
adc
jmp
cmp
daa
rol
pop
ljmp
mov
insl
xchg
pop
pop
mov
out
inc
pop
jae
test
jns
lock
xchg
aad
lret
pop
insb
push
pop
subb
jbe
sub
ret
test
enter
mov
fwait
pop
out
nop
inc
push
dec
or
jmp
fcmovb
mov
std
test
sub
lods
ljmp
pop
lods
xlat
xlat
xor
pusha
and
popa
adc
rcrl
pop
aad
add
mov
scas
or
aas
loopne
dec
mov
mov
lahf
sti
mov
ljmp
fdivrl
push
rolb
or
ret
jnp
xor
push
mov
or
sbb
inc
xchg
pusha
leave
pop
push
pop
in
pop
ret
les
cmp
aam
popa
ss
xor
xchg
inc
xchg
test
jnp
leave
inc
pop
add
fistps
dec
sarl
mov
cmp
scas
fdivs
ret
int3
add
inc
sub
icebp
add
js
pop
xchg
mov
lcall
mov
scas
icebp
daa
ss
cmpsb
sub
into
loope
loopne
int3
mov
cmp
sbb
mov
sbb
mov
inc
in
sub
aad
das
sbb
or
fs
je
cmc
pusha
bt
jmp
not
inc
lea
not
pushf
inc
sub
ror
xchg
sar
bswap
mov
mov
sar
mov
stc
push
rcr
jmp
pop
je
jbe
mov
jmp
std
mov
aad
aaa
les
ficoms
popa
adc
jns
rolb
pop
xor
xchg
dec
fstl
cwtl
inc
cmpsb
xchg
mov
dec
aad
adcb
jne
sub
or
cmpsl
aaa
iret
das
jmp
cmp
loop
sub
fsubl
adc
dec
jmp
mov
aas
sub
pop
mov
push
cmp
enter
je
daa
dec
jbe
fimull
jb
enter
fimuls
out
mov
loopne
or
testb
mov
push
sub
stos
adc
aas
mov
push
mov
sub
lods
xor
mov
xchg
push
pushf
in
mov
jo
push
mov
movl
jmp
in
adc
mov
adc
add
aad
jmp
repz
adc
scas
adc
int3
pusha
pop
mov
loope
adc
pop
cmp
cmpl
cmp
adc
mov
ds
scas
jno
sbb
and
lahf
fnstenv
mov
pushw
pop
movsl
push
cltd
outsb
or
cmp
loopne
scas
sub
adc
addr16
push
push
fld
cmp
sbb
xor
cmpb
jg
fsubrl
xor
out
lea
or
fcmovnu
jg
lock
fstl
inc
addr16
cmc
push
pop
push
cmp
mov
dec
in
cmp
dec
fsts
test
cmpsb
movsl
mov
dec
push
pop
sbb
mov
daa
aam
inc
je
dec
cmc
lods
icebp
jno
fnstsw
lds
xchg
pop
sub
add
test
add
ret
fcompl
lcall
sbb
mov
test
push
or
jns
adc
pop
push
test
daa
adc
jecxz
inc
pop
test
mov
lods
inc
and
callw
dec
sbb
mov
mov
push
imul
jmp
in
sub
jno
orps
cmp
and
daa
fstps
xchg
loop
adc
push
sub
scas
inc
sbb
jmp
push
ret
ljmp
mov
mov
adc
fs
dec
fwait
jp
fistl
cmpsl
fadds
adc
fsubl
xor
mov
push
cmp
cmp
inc
or
sbb
lock
inc
mov
cltd
push
iret
inc
iret
aad
jno
mov
call
inc
ds
inc
movsb
hlt
xchg
in
cmp
xor
push
gs
mov
ja
outsl
aaa
mov
jno
in
fstpt
add
aaa
ljmp
xlat
sub
sub
and
lods
lcall
imull
cmp
or
mov
popa
sbb
mov
jp
fcoms
push
jmp
mov
and
sbb
bound
lcall
jb
rorl
or
cli
shrb
rcrl
lock
fwait
sub
in
push
dec
xor
cwtl
pop
lds
movsl
mov
xchg
dec
mov
insb
dec
imul
cmpsb
mov
cmp
stos
fsubrl
dec
or
cli
push
shlb
adc
pop
decl
or
jbe
or
ja
mov
mov
pop
mov
jl
bound
mov
pop
insl
fsubr
sub
sub
cmc
nop
sti
or
add
lret
mov
adc
add
add
fwait
outsb
push
stos
loopew
je
push
pusha
testl
les
cmpsl
pushf
sub
sbb
push
call
test
dec
call
cmp
dec
jmp
dec
ret
push
adc
gs
add
jae
ja
jno
lret
dec
fcompl
add
mov
test
inc
daa
aaa
loopne
sbb
mov
lds
add
add
repnz
dec
fnsave
add
xchg
pop
mov
mov
mov
jg
push
jb
int
icebp
pop
sub
imul
js
sbb
test
inc
sbb
cld
fsubs
push
inc
add
lds
movsb
repz
inc
pop
pushf
cli
xor
dec
cmp
inc
or
sub
xor
sub
ret
mov
jo
scas
inc
cld
dec
shlb
mov
push
mov
or
insb
sub
das
sub
test
dec
sub
rcrl
ljmp
mov
jae
mov
adc
inc
roll
cmc
push
adc
mov
xorb
lret
mov
push
lock
ss
or
inc
push
push
push
sbb
out
ror
fcmovb
ret
dec
sbb
pop
lods
lock
mov
pusha
sub
movl
cmp
jo
mov
xchg
cmp
mov
push
push
jbe
das
jmp
push
in
int
xchg
jg
dec
fbld
jmp
pop
into
add
pop
jae
add
int3
shlb
in
or
xchg
pop
lods
or
inc
clc
jge
shlb
adc
add
sub
aaa
sub
addr16
cmpsb
das
subl
repz
loopne
xchg
out
xchg
sbb
jno
push
ja
add
mov
cltd
xor
pop
add
arpl
repz
dec
mov
clc
bt
stc
jmp
push
aaa
lahf
pop
push
pop
js
inc
adc
push
add
and
xor
inc
cmp
into
fildl
mov
push
mov
cmp
popa
mov
mov
mov
lea
push
fs
or
jne
xchg
mov
mov
notl
dec
mov
mov
lods
push
mov
lea
jae
call
pusha
pushf
xor
lea
call
mov
movl
push
jmp
test
ret
jns
sbb
lods
inc
movsl
push
lods
dec
icebp
inc
add
or
push
in
faddl
mov
lods
fwait
inc
fimuls
sbb
repnz
hlt
mov
or
sub
add
movsb
sub
les
xor
and
lret
test
mov
daa
mov
out
rolb
and
hlt
jbe
lret
cmp
and
cmpb
inc
push
ss
mov
pop
in
add
and
ljmp
sbb
scas
test
neg
pop
push
pushf
cmp
out
movsb
jb
mov
insl
adc
loope
xor
and
lea
int
dec
rep
fdivp
into
into
dec
cmpsb
sbbb
sub
sub
pop
jmp
adc
mov
out
jmp
pop
loope
sub
mov
pop
xchg
dec
jno
xchg
cmp
addl
sub
loope
sbb
dec
fisubl
sbbb
jl
jl
loope
jp
cmp
sbb
out
mov
push
das
push
jmp
adc
outsb
std
sub
out
or
int3
sub
aaa
adc
orb
jmp
add
xchg
scas
inc
stos
aam
mov
imul
popf
mov
mov
mov
lods
int3
je
pop
xchg
cwtl
aaa
push
in
sub
shl
push
ret
push
scas
push
push
fnsave
mov
mov
lcall
arpl
jbe
int
sbb
sbb
pop
int
add
mov
test
lahf
xchg
scas
mov
push
add
pop
filds
xchg
jmp
lock
mov
sub
inc
push
ds
mov
movsb
mov
es
nop
das
jae
mov
mov
int
and
cmp
mov
mov
mov
andb
xchg
or
sub
mov
sub
xchg
dec
or
or
rorb
xchg
cwtl
ja
shrl
inc
gs
add
push
adc
cmc
jb
dec
mov
push
ret
or
push
inc
lea
call
test
mov
call
and
movsbw
movzbl
mov
clc
cmpb
pushf
jmp
jbe
outsb
lods
outsb
jo
outsb
sub
outsb
out
das
ret
sub
sub
subl
mov
not
cmp
sub
pushf
movb
pushf
lea
call
pushf
cmp
pushf
movb
lea
jae
jmp
jl
cmp
cmp
js
stos
pop
lock
imul
sub
arpl
scas
mov
ds
cmp
cld
jno
xchg
sub
push
jne
adc
enter
pop
cmc
pushf
bt
jmp
movb
mov
pusha
pushl
ret
pushf
pushf
lods
clc
cmp
jmp
imul
fcmovnb
jno
dec
inc
adc
es
dec
push
scas
imulb
arpl
dec
outsl
add
mov
ljmp
pop
je
pop
ds
ret
lahf
fnstsw
dec
pop
adc
cltd
adc
xlat
push
and
pop
mov
cmp
rorl
mov
in
rolb
mov
and
data16
pushf
das
stos
pop
leave
lock
iret
lods
ret
push
push
cmpsl
cld
xchg
dec
iret
mov
mov
or
jmp
adc
xor
lods
add
aaa
mov
add
mov
cwtl
mov
cmpsl
ljmp
sbb
outsl
push
popf
nop
dec
roll
in
mov
in
cmpsb
sbb
outsb
sub
loop
pushf
mov
popf
cmc
inc
imul
outsl
push
fs
pop
dec
outsb
cmp
xorb
dec
xchg
rcl
out
loopne
push
adc
loop
mov
mov
fmuls
fmull
mov
mov
out
iret
not
ror
mov
clc
shl
shl
lea
add
neg
shr
xor
test
mov
pushf
add
pushf
bswap
mov
lea
push
pusha
mov
mov
push
lods
pusha
ror
bt
pushf
stc
call
jne
btr
das
sub
clc
mov
inc
dec
rol
add
sbb
rol
pusha
mov
stc
test
lea
js
pusha
lea
je
push
pushl
clc
cmc
sub
test
stc
movl
pusha
cmp
call
mov
out
adcb
inc
sbb
push
fldcw
lods
pop
lds
pop
mov
add
addb
jns
sub
inc
lock
fdivs
outsb
inc
aam
dec
pop
cmp
lcall
sarl
clc
pop
push
cmp
into
ret
dec
dec
insl
jno
aam
jo
dec
pushf
jne
or
inc
adc
fisubrl
fdivrl
clc
gs
js
adc
mov
call
pusha
pushl
jmp
jne
dec
sub
cld
cmpsl
je
in
mov
mov
shlb
les
sarb
bound
inc
repz
lret
neg
stos
jp
dec
sahf
test
xor
cmpsl
icebp
mov
add
outsl
movsb
mov
mov
sbb
mov
sahf
push
inc
or
xchg
mov
mov
xchg
std
jp
xchg
dec
push
scas
and
mov
pop
pop
dec
push
sub
pushf
lea
call
pushf
pusha
lea
jae
call
push
leave
out
adc
hlt
movsb
pop
lods
push
shlb
xchg
idivl
ret
push
les
in
test
enter
sti
cld
xor
xor
decl
loop
and
dec
push
mov
sti
jecxz
and
aas
and
in
mov
or
jns
int
push
xchg
sbb
cli
test
xchg
clc
mov
shll
cmc
bound
lods
sub
fwait
cmp
mov
pop
mov
pusha
lea
ja
cmc
imul
test
push
add
movb
pusha
lea
jmp
pusha
lea
je
pushf
add
pusha
stc
clc
cmp
pusha
lea
jg
push
lea
jb
bt
cmp
push
lea
jae
stc
adc
movsbw
mov
btc
or
movzbw
mov
btc
sar
shr
mov
push
stc
sub
pushf
push
repnz
call
mov
pushl
mov
pusha
pushf
push
push
lea
jmp
push
pushf
pushl
mov
pushf
lea
jmp
xchg
xor
mov
mov
xchg
repnz
divb
pop
arpl
mov
mov
xor
or
scas
popa
mov
jbe
pop
adc
push
sbb
xor
pop
ret
aam
aas
inc
mov
gs
pop
std
or
outsb
sets
mov
iret
in
lcall
shlb
fcoml
movsb
push
mov
pause
scas
xor
sti
lcall
test
mov
cld
scas
xchg
jb
pushf
aaa
and
pop
xchg
sub
les
mov
inc
xor
mov
mov
in
mov
pusha
lock
xor
xor
xor
into
adcb
aad
movl
push
add
into
add
bt
stc
clc
call
mov
lea
pusha
mov
push
pushf
lea
call
jmp
add
dec
jae
imul
call
ja
inc
pop
incb
inc
ja
adc
popl
inc
lahf
dec
or
xchg
pusha
inc
mov
push
sarb
adc
rolb
push
or
jne
insl
int3
call
xorl
insb
adc
mov
xor
clc
outsl
push
cmp
shrl
jnp
sub
adc
add
pusha
dec
sub
dec
shll
mov
pop
xchg
lea
jne
neg
call
pushf
push
push
lea
jne
stc
sub
sub
adc
dec
bsr
mov
neg
shr
stc
call
data16
out
leave
loopne
jbe
sbb
mov
cmp
movsb
pop
les
scas
jae
out
mov
dec
inc
adc
dec
xchg
mov
mov
sub
mov
pusha
inc
adc
dec
shll
mov
fistl
andl
inc
push
imul
repnz
lahf
sbb
or
cwtl
or
push
add
mov
lods
pop
mov
scas
and
xchg
pushl
test
dec
pusha
inc
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
mov
ljmp
mov
shr
mov
incl
add
je
outsl
fs
gs
imul
add
icebp
aad
mov
jl
mov
mov
fnstcw
add
clc
push
pop
mov
jle
and
dec
jge
mov
add
add
push
xchg
adc
fwait
ljmp
sti
cmp
push
fs
xlat
aad
dec
test
dec
push
cmp
sbb
and
jno
in
mov
loope
shll
icebp
mov
inc
clc
xor
xchg
push
push
mov
pop
repnz
outsl
popa
fs
imul
add
xchg
adc
add
mov
imul
stc
add
pushf
lea
jmp
ror
cwtl
pushf
xchg
shl
add
dec
bsf
mov
not
sub
shrd
push
shl
lahf
push
btr
cmp
push
aad
cwtl
push
xor
mov
clc
bt
test
pusha
jmp
call
push
lea
je
shrd
bsr
add
mov
cmp
setp
add
shrd
mov
bt
pusha
cmc
bt
test
jmp
lock
add
pop
jno
add
fwait
add
clc
cwtl
add
xchg
lea
add
fwait
add
add
add
add
add
xorl
and
add
xchg
lea
add
fwait
add
adc
add
add
add
pop
jno
add
fwait
add
add
add
mov
int
inc
ss
sarl
mov
mov
cmc
aaa
lock
incb
fldl
in
sub
notl
xor
cmova
sarb
inc
fsub
mov
and
dec
lahf
ljmp
in
xchg
pop
jne
adc
movsl
push
js
test
mov
pusha
xchg
sbb
xadd
sahf
adc
adc
loope
fstps
test
dec
pop
jb
cld
icebp
insl
stos
sbb
push
mov
sbb
roll
jmp
cmpsl
lret
jp
xchg
dec
xor
push
repnz
fnstcw
mov
cmp
outsb
push
dec
or
popa
push
sub
shll
mov
imul
stos
fcomi
in
push
ret
add
in
mov
push
fsts
enter
popa
inc
mov
ss
sbb
lds
pop
sti
mov
inc
push
mov
inc
cmc
dec
rolb
leave
add
sub
dec
or
fcmovnb
jmp
sahf
and
std
in
shrb
add
sarb
sti
seto
and
cli
mov
addl
insl
push
push
and
or
addr16
shlb
jmp
aad
cmp
or
pop
clc
popf
data16
cmp
mov
add
cmc
bt
test
mov
push
mov
lea
jne
push
movb
pushf
mov
mov
jmp
shlb
mov
in
rorb
xchg
push
fisubs
data16
push
hlt
int
cmp
jae
mov
addb
mov
outsl
outsl
out
enter
cltd
divb
js
addl
push
andl
shl
mov
push
outsb
or
fistl
push
cwtl
push
lahf
in
push
push
enter
add
outsl
jecxz
dec
fwait
decl
pop
lods
mov
cmp
aad
adc
mov
sbb
addr16
add
mov
or
repnz
add
add
jl
add
add
mov
add
add
add
add
add
or
add
inc
and
add
add
hlt
push
add
lcall
add
add
movsl
sbb
add
sbb
add
sbb
add
sbb
add
pop
add
pop
and
add
sbb
add
add
enter
pushw
add
dec
pop
add
mov
add
mov
add
enter
inc
and
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
in
add
stos
in
add
mov
in
add
fldlg2
add
in
add
clc
in
add
add
add
sbb
add
and
in
add
inc
in
add
dec
in
add
popa
in
add
jns
add
xchg
add
cwtl
in
add
mov
in
add
inc
popa
outsb
fs
outsb
fs
jb
arpl
inc
outsl
insl
jo
outsb
fs
jb
arpl
dec
dec
dec
inc
pop
dec
gs
jb
jns
dec
dec
dec
inc
pop
dec
outsl
outsb
imul
add
gs
outsl
outsb
imul
add
gs
outsl
outsb
jbe
jb
imul
add
gs
gs
jb
jns
dec
insl
gs
outsb
jne
push
imul
jb
add
gs
jae
popa
jo
add
gs
gs
imul
jb
push
je
insb
add
gs
outsb
jno
imul
push
jb
arpl
jae
gs
dec
insl
gs
imul
jb
add
gs
gs
arpl
insl
gs
gs
arpl
gs
outsl
outsb
je
js
add
gs
gs
outsl
insl
jo
jae
je
outsl
outsb
push
je
imul
push
outsl
inc
jae
imul
gs
outsb
jb
imul
jb
add
je
data16
dec
inc
add
popa
je
jae
outsb
fs
jb
arpl
push
dec
push
outsb
fs
jb
arpl
dec
push
pop
pop
dec
dec
cs
dec
inc
add
add
daa
xchg
lcall
dec
mov
sub
adc
and
dec
enter
repnz
in
adc
xchg
jns
fisubs
mov
fcmovu
mov
and
lret
aaa
add
jmp
pop
push
pop
cmp
testb
xchg
mov
pushf
cld
push
je
pop
mov
mov
repz
xor
int
shll
lcall
iret
in
lahf
movsl
lcall
and
es
sbb
gs
pop
ss
lods
sub
fldenv
push
lahf
inc
mov
mov
fwait
pmulhw
jmp
nop
and
pop
add
imull
js
dec
mov
mov
sub
sbb
movsb
mov
gs
dec
insb
dec
pushf
mov
pop
icebp
ret
lcall
into
inc
in
popa
sbb
mov
into
mov
call
gs
popa
addr16
outsl
js
add
adcl
add
push
sub
jmp
stc
mov
jmp
add
inc
js
je
jb
arpl
jae
popf
dec
daa
jns
jbe
fildl
out
jge
cltd
sbb
pop
add
aaa
sbb
adc
jae
ret
push
ss
jns
jae
dec
je
cld
test
adc
mov
out
or
jp
das
std
in
jmp
xor
mov
jno
xor
xchg
je
and
push
or
jmp
adc
fstpt
xchg
shlb
sub
or
test
loopne
call
sub
cmc
push
cmc
bt
pushl
popl
test
stc
cmp
push
pushl
lea
ja
shl
sub
cmp
movsbw
add
cmc
add
bt
shrd
mov
mov
sar
mov
pusha
bt
repnz
pusha
lea
jne
push
movb
pop
jmp
add
sbb
fidivl
and
add
sbb
mov
jle
dec
std
mov
sbb
jns
xchg
adc
scas
insl
dec
push
ljmp
repnz
sub
ret
out
mov
add
push
fistps
lcall
aaa
jmp
js
mov
inc
popa
enter
les
out
shr
mov
push
sub
movl
lea
ja
call
pop
int3
xor
test
mov
mov
test
loopne
xor
and
sub
mov
imul
xor
inc
adcb
push
ret
arpl
fnstsw
decl
or
gs
mov
and
mov
or
shrl
xchg
inc
and
or
jno
inc
rcll
popa
and
mov
and
sub
cmp
cmp
icebp
test
xchg
cmp
inc
mov
jo
cmp
imul
xlat
dec
int
mov
imul
add
les
repnz
sub
sahf
testb
lcall
inc
inc
mov
and
stc
fcompl
push
push
popa
faddl
hlt
xchg
out
push
ljmp
push
stc
sub
ja
jno
repz
push
fldl
loop
and
popf
mov
xor
add
dec
repnz
dec
decb
std
jle
pop
pop
inc
fldl
adc
jp
mov
and
xchg
cli
cmc
mov
push
or
adcl
inc
xlat
das
iret
pop
mov
pop
inc
lods
xorl
pop
jbe
dec
xchg
aas
cmpsb
in
hlt
lods
das
cmpsb
mov
fisttps
and
lods
pop
lods
mov
inc
pop
repz
scas
mov
popf
mov
jg
in
jmp
pop
fdivp
mov
cmp
jno
push
loopne
pop
fildll
fwait
mov
imul
sub
movsl
or
pushf
lea
jmp
add
inc
gs
gs
imul
stos
pushf
lea
jmp
jmp
cmp
sub
pushf
cmp
pusha
lea
jae
pusha
pusha
lea
jmp
push
lock
std
std
popl
xchg
pusha
dec
mov
ret
jl
add
enter
and
pop
xchg
ss
sub
pop
in
fmuls
cld
and
aam
push
int
mov
pop
cltd
es
cmp
ds
add
xchg
inc
mov
and
xchg
push
out
test
mov
pop
mov
jmp
adc
inc
aad
xlat
inc
pop
xor
inc
pop
xor
fstl
xchg
ljmp
xor
pop
in
push
mov
iret
ret
and
ljmp
daa
jne
je
loopne
fbstp
xor
bound
ljmp
dec
dec
out
lods
je
bnd
and
inc
jl,pn
dec
xlat
das
xchg
cmp
popf
mov
mov
sbb
aas
movsb
xor
dec
int
jbe
hlt
add
mov
pop
mov
test
aam
adc
setl
leave
mov
push
adc
push
lea
call
call
ret
test
into
jb
test
lea
fwait
inc
mov
addr16
sub
sti
mov
loope
mov
dec
imull
rorl
and
dec
mov
cmp
in
pop
out
mov
fidivl
out
scas
rcl
or
neg
ljmp
mov
int3
inc
cmp
lahf
test
scas
pusha
jge
out
xor
xchg
jg
xchg
push
dec
mov
cmp
push
inc
mov
out
or
sub
and
mov
jno
sbb
adc
pop
test
fs
pop
je
xchg
adc
xchg
in
or
iret
jg
ret
sbb
cmp
cmp
mov
cld
adc
es
in
push
fsubp
fisttpl
add
gs
fnstenv
add
bnd
or
insl
inc
inc
and
loope
jp
cmp
inc
sub
mov
sub
mov
ljmp
lahf
push
daa
xchg
arpl
ds
lss
test
out
xor
mov
adc
test
jb
js
jbe
das
in
ja
sub
cmp
mov
mov
fdivs
mov
insl
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
push
or
and
mov
mov
fimull
ds
push
out
ljmp
nop
into
lods
cli
lods
je
sbb
dec
adc
out
lds
aaa
sub
lock
dec
lock
lock
xor
clc
mov
ret
nop
lock
mov
dec
ds
jmp
jae
mov
nop
lds
sub
test
mov
pusha
cltd
push
jecxz
loope
inc
mov
cli
aad
mov
fdivrl
cmp
cmp
inc
push
mov
lods
scas
les
test
push
xor
or
sbb
inc
mov
rorl
or
out
ss
jge
push
lds
sub
and
ljmp
dec
add
adc
fwait
stos
mov
fldl
lret
out
jl
push
ss
pusha
adc
dec
in
lea
lods
stos
jecxz
rcr
push
mov
sub
dec
lock
jg
mov
insl
mov
add
enter
cmc
test
pusha
pushf
lea
js
je
bt
sub
test
push
clc
cmp
pusha
lea
ja
stc
clc
bt
jmp
push
mov
lea
call
bt
bt
jmp
pop
jo
mov
addr16
out
outsb
in
lcall
loop
push
sahf
push
stc
push
add
mov
xchg
xlat
pushf
jno
scas
test
cld
shlb
js
cmp
cwtl
nop
mov
pop
adc
pop
add
aad
pop
lcall
dec
sarl
out
xchg
and
xor
mov
pop
jno
add
pop
mov
dec
in
gs
mov
mov
pushf
mov
loopne
dec
xor
push
sub
xchg
cltd
jmp
inc
cld
mov
push
adc
cmp
dec
into
in
icebp
push
mov
test
daa
lods
sbb
mov
inc
scas
repz
shrl
mov
cld
dec
imul
cli
unpcklps
inc
imul
mov
dec
dec
or
add
and
leave
jecxz
ret
jg
movsl
jbe
je
ret
push
es
lcall
xor
xchg
cmpsb
inc
push
lahf
xchg
sbb
push
ret
xor
outsl
fists
mov
notl
sbb
ret
sub
sub
add
roll
adc
inc
jle
rolb
mov
jns
add
xor
aas
jno
dec
nop
mov
xchg
jne
imulb
push
lcall
arpl
sahf
out
inc
mov
jge
popl
outsb
push
mov
outsb
mov
mov
repz
jle
or
dec
into
data16
sub
fidivl
loopne
pop
push
pop
leave
std
movsl
inc
mov
idiv
addb
dec
sbb
stos
mov
int
cmpsl
xor
shl
shlb
lret
add
mov
aas
test
jne
scas
arpl
mov
mov
rolb
adc
mov
outsb
inc
mov
fs
xchg
push
dec
push
xchg
lretw
adcb
dec
mov
and
negb
ljmp
orl
jb
ds
mov
ss
mov
lods
push
les
mov
push
inc
and
push
ds
movsl
fldt
cmc
repnz
jne
xchg
das
pop
dec
sti
dec
in
ljmp
ffree
cs
xchg
xor
fbstp
mov
imul
and
cmp
loop
mov
mov
call
imul
pusha
jmp
lods
push
ficoml
mov
mov
push
shlb
bound
ficomps
add
push
in
in
cltd
jne
outsl
cmp
jae
out
xor
or
cmp
cmp
dec
cli
imul
imul
jg
scas
dec
adc
clc
ja
jge
pop
and
cs
movsl
mov
jo
inc
sti
imul
mov
jns
stos
push
js
sub
cmp
test
ret
sub
fnstsw
and
inc
les
xor
adc
push
mov
shld
push
pop
or
into
mov
inc
or
insl
mov
sarl
and
add
movsb
aam
mov
fisubrl
cmp
fdivl
mov
or
pop
mov
mov
das
lahf
adc
daa
jecxz
ud1
lods
jecxz
jbe
cmp
lods
sbbl
add
mov
lds
mov
jle
into
xor
repnz
jg
add
fdivs
fs
rcr
sahf
movsl
stos
es
divb
imul
loop
lock
mov
cltd
mov
jno
aaa
das
pusha
sub
cwtl
or
call
in
cmpsb
pop
call
xor
dec
dec
cmp
cmc
xorb
xchg
sbb
insb
sub
sub
in
in
push
xor
orl
dec
mov
inc
mov
jno
clc
fdivr
xor
movl
jmp
inc
pushf
call
jmp
pusha
sub
call
push
pushf
lea
ja
stc
stc
call
lods
lock
lock
xor
mov
imulb
sahf
xchg
nop
iret
dec
sbb
add
cmpsb
jbe
imul
jge
jmp
adcl
jb
push
insb
add
mov
fninit
xchg
add
cmc
pushl
pop
mov
cld
add
pop
cs
lods
pushf
pushf
fcoms
sbb
jg
negl
adc
std
dec
stos
adc
in
cltd
xor
rolb
push
into
mov
inc
nop
std
lahf
scas
fimuls
stc
in
decl
call
xchg
xor
pop
jg
mov
pop
daa
push
fcoml
inc
insl
adcb
xchg
int3
cmp
cmc
pop
xor
ret
and
cld
dec
push
xchg
nop
push
dec
mov
std
aas
mov
loopne
iret
out
and
lret
into
inc
xchg
cmpb
adc
dec
std
push
sub
sar
sub
pop
arpl
ficoms
clc
out
jmp
push
mov
lea
jae
test
btr
neg
mov
sar
neg
shrd
mov
sbb
rcl
shl
mov
test
push
sub
clc
push
repnz
push
mov
jmp
mov
pusha
pushf
pushl
ret
cmc
jae
push
jo
dec
fmuls
iret
mov
add
jge
jns
mov
inc
sub
lods
nop
push
hlt
pop
cli
lods
int3
xor
cmp
in
push
push
xlat
pop
leave
jl
gs
ss
cmp
push
inc
sub
adc
sub
pusha
test
or
mov
jmp
lods
mov
add
fwait
lret
imul
es
mov
fiaddl
jae
shrb
dec
orl
push
out
push
cli
xorb
dec
loope
dec
fldl
xchg
mov
int
xchg
fwait
mov
xchg
xor
hlt
push
ljmp
fs
ljmp
push
mov
vcvttps2dq
push
lea
push
je
cmc
clc
mov
adcl
or
inc
mov
popa
inc
out
dec
jmp
je
inc
dec
or
pop
aas
push
add
cs
es
fimuls
lods
jns
sub
jmp
lea
lcall
movsb
mov
fidivrl
cs
lcall
into
aad
fcompl
popa
popf
hlt
inc
and
lret
push
jle
test
pop
pop
mov
cltd
xor
test
cmpsb
loopne
cmpsl
cmp
push
dec
fsub
sti
jb
push
mov
jb
push
sub
xchg
fisubl
lods
jmp
lds
sub
dec
ds
into
push
push
in
sbb
pop
stc
inc
das
adc
jg
cld
jmp
mov
test
sar
fwait
cwtl
jne
dec
xchg
ficompl
roll
lahf
orl
mov
or
call
les
sbb
inc
ret
lahf
sub
repnz
jge
scas
pop
or
dec
mov
push
outsl
mov
jne
inc
push
cmp
sub
pusha
clc
stc
pushl
cmp
push
jmp
lea
call
pusha
jmp
or
lock
xchg
jne
inc
fsts
lea
aam
cmp
mov
in
out
push
imul
xchg
fidivrs
pop
stos
inc
fcmovb
pop
fistl
cmp
add
xchg
imul
mov
shrl
cmp
lahf
movzwl
push
dec
push
push
imul
popf
aas
pushf
xor
inc
subl
cmp
ljmp
mov
lea
jae
pushf
pusha
jmp
bt
xor
clc
test
movw
sub
pushl
call
pop
or
out
cmc
mov
sbb
mov
push
lcall
popa
jge
les
inc
xchg
mull
cmp
les
mov
test
clc
xor
insl
push
cs
mov
into
in
lea
cs
cmpsb
and
cmp
cmp
xlat
mov
inc
testb
pop
faddl
adc
out
test
mov
sti
je
xor
hlt
mov
scas
loopne
mov
jg
bound
pop
xchg
lods
lock
xor
in
sbb
xchg
lret
mov
mov
ja
push
mov
or
stos
push
push
push
dec
jb
inc
out
sub
je
jb
adc
in
xor
ljmp
pop
outsl
addr16
jg
outsb
mov
bnd
mov
js
leave
imul
mov
pusha
pop
fidivrs
addb
lahf
xor
out
outsl
paddusb
pop
outsl
stc
xchg
sahf
adc
jns
xchg
pop
ret
stos
xor
push
or
popa
dec
sarb
cwtl
inc
mov
mov
inc
adc
cmp
pop
push
inc
sbb
sarb
rclb
sbb
mov
ja
push
sbb
xlat
icebp
lcall
sbb
js
sbb
mov
lahf
loopne
imull
dec
xor
dec
jbe
adc
sbb
les
push
sti
xor
xlat
adc
aam
out
dec
fisttpl
jns
push
adc
fwait
xor
mov
daa
dec
mov
inc
or
sahf
push
fiadds
xchg
dec
pop
pop
cmpl
dec
pop
xchg
pop
adc
jb
into
jp
xor
and
push
jle
popf
cmp
mov
adc
xchg
xor
xchg
scas
fwait
cltd
bound
push
outsl
fidivs
xchg
sbb
jb
mov
fisttps
popl
iret
push
and
jno
ret
sbb
in
xchg
mov
mov
jg
or
jg
out
sbb
xchg
adc
fidivrs
push
ss
test
out
push
adc
adc
jecxz
mov
imull
loop
fcoms
xchg
ljmp
inc
out
pop
cltd
push
xor
daa
jge
xchg
les
test
sub
mov
jp
add
xor
data16
lods
leave
sbb
or
repz
jno
mov
cld
aaa
clc
outsb
xor
sub
pop
push
xor
pop
push
test
or
jbe
adc
sbb
sbb
fwait
out
fsubs
push
je
sbb
outsb
leave
out
push
lods
sahf
cs
xchg
outsb
pop
jl
or
outsl
xchg
test
in
jle
pop
sbb
adc
lods
ss
stc
fisttps
cs
sbb
in
arpl
mov
das
inc
ds
inc
pushf
mov
adc
aas
jb
test
in
call
pop
arpl
stos
add
adc
add
adc
loop
mov
movsl
inc
jge
xchg
mov
jecxz
dec
repz
test
aaa
push
and
inc
pop
in
pop
dec
add
orb
sahf
inc
pop
add
xchg
fildl
xchg
ds
mov
mov
push
cld
mov
mov
mov
gs
fidivl
into
in
fcompl
xchg
or
fsubrl
fstpt
adc
mov
mov
push
ds
imul
mov
adc
lcall
into
shlb
insl
push
sahf
mov
sahf
hlt
inc
add
data16
push
jl
sahf
xchg
leave
fsts
int3
stos
jp
sbb
push
dec
jl
in
sbb
inc
push
data16
mov
mov
mov
jp
aam
pop
adc
out
js
adc
repnz
scas
push
fimull
adc
jb
mov
outsb
cli
jge
jge
adc
dec
push
fcoml
mov
jbe
mov
jge
out
fsubrl
jne
jle
jle
jp
pop
pop
outsb
dec
mov
xchg
cs
and
imul
loop
into
into
out
insb
lret
or
lods
xchg
out
data16
adc
mov
out
repnz
ljmp
outsb
pop
mov
call
adc
cs
xchg
dec
in
outsb
ljmp
lret
pop
ss
pop
outsb
cli
scas
es
or
sahf
cmp
outsb
aam
bound
bnd
jnp
hlt
push
lods
jl
sub
test
push
outsb
out
es
push
ficomps
lods
mov
sbb
jns
jge
je
js
lods
mov
xor
pop
sbb
cmpsb
adc
push
les
movsl
ret
push
adc
dec
outsb
mov
pushf
es
in
push
ljmp
in
jle
jp
jbe
push
mov
cli
repnz
dec
mov
lret
pushf
xchg
dec
ret
jbe
mov
inc
adcb
rorw
scas
mov
push
inc
sahf
stos
dec
es
shll
sub
pop
and
fs
outsb
gs
xchg
push
add
adc
jo
ficompl
rorb
xor
and
ljmp
inc
inc
xor
sbb
mov
push
jne
mov
dec
out
mov
and
faddl
in
loop
pcmpeqb
xchg
cmp
pop
cmp
push
xchg
fucompp
sbb
inc
xor
pop
fcmovnu
push
jbe
add
ss
jp
xchg
bound
adc
xlat
rcr
dec
mov
adc
lods
jno
int
loop
fstps
stos
adc
ss
lods
push
aam
sbb
or
lret
jne
sbb
out
push
mov
bound
sbb
jg
je
stc
add
inc
or
cwtl
lret
imul
iret
sahf
mov
test
mov
fstps
jge
dec
sbb
adc
xchg
sbb
fbstp
mov
loope
cmpb
js
mov
push
ds
push
lahf
scas
test
ficoml
loope
xchg
insb
sbb
ss
test
fiaddl
xor
sbb
mov
adc
sub
aad
int
xor
das
cld
icebp
xchg
push
ss
pop
and
icebp
push
test
sbb
push
inc
cmp
push
out
dec
ret
cltd
sahf
cmp
ret
inc
pop
adc
aad
pop
jns
js
push
inc
cltd
or
fmuls
mov
mov
mov
dec
mov
push
jno
inc
in
enter
scas
jbe
mov
imul
loop
hlt
xlat
sti
sub
cmp
sbb
mov
sub
repz
push
xchg
adc
xchg
jnp
and
mov
sbb
adc
sti
xor
push
push
pop
sbb
dec
xchg
mov
cmpsb
mov
jg
mov
aam
fcmovbe
enter
es
push
les
sbb
dec
fiaddl
clc
jg
sub
pop
fldl
adc
ficomps
cmpsb
xor
jl
subl
mov
mov
out
icebp
xlat
int
shrb
stos
mov
stos
jbe
outsb
jns
jne
mov
hlt
pop
or
enter
aas
mov
inc
test
or
pop
adc
xchg
add
lock
jle
aaa
aas
bswap
bswap
movb
jmp
frstor
jne
jmp
inc
jg
mov
fisttps
fwait
sub
xchg
jns
stos
mov
mov
mov
outsl
jle
push
cmp
cltd
xchg
jbe
int
insb
aas
cmpsb
std
data16
mov
xchg
mov
into
test
and
sbb
mov
mov
lock
data16
dec
add
mov
mov
ret
cmp
mov
or
inc
mov
pop
xchg
rol
js
stos
sbb
sbb
leave
xchg
fisttpl
cmp
push
cmp
cltd
mov
setb
lods
stc
cmc
stc
xor
clc
sub
pusha
not
jmp
clc
or
xlat
pop
lods
js
mov
data16
sbb
xchg
shl
jp
insb
xchg
sub
add
stc
push
and
jmp
lds
and
rcrl
outsb
jg
adc
cmc
leave
shl
jge
or
jmp
repnz
sub
ror
imul
loop
push
ja
cld
test
in
fcomps
cmpsl
and
mov
in
movb
mov
sub
cmc
imul
cmc
pushf
add
push
mov
pusha
lea
jmp
jmp
iret
sbb
inc
lods
arpl
push
sbb
loopne
xor
cmp
lods
and
insb
ss
xchg
fimuls
cmp
and
fbld
xchg
push
hlt
jmp
xchg
jbe
pop
aaa
lahf
push
mov
push
mov
lds
push
jle
mov
fstps
mov
sub
push
lcall
mov
xor
in
pop
shrl
hlt
sub
dec
xor
out
pop
xlat
inc
in
or
jns
inc
cltd
pop
je
xor
outsl
iret
ds
push
mov
push
pop
push
mov
out
sbb
cld
jl
inc
es
fstpl
pop
mov
dec
adc
loopne
xor
ret
pop
outsl
push
jno
outsb
sub
loope
pop
push
in
push
jecxz
divb
in
push
into
push
ror
lock
sbbb
test
mov
push
push
push
inc
sub
sahf
neg
mov
xchg
bound
mov
jne
loop
pop
push
push
scas
pop
pop
sub
push
pop
sub
mov
sub
xchg
push
daa
test
lods
sub
dec
mov
mov
jle
addl
adc
mov
lcall
subl
pop
scas
push
pop
js,pn
lods
dec
dec
dec
dec
inc
insb
jno
lcall
divl
shlb
test
aaa
cmp
jbe
outsb
mov
mov
adcb
mov
cwtl
mov
mov
mov
inc
xor
inc
inc
fadd
cld
mov
mov
mov
mov
mov
clc
mov
or
or
les
pushf
pop
push
and
push
mov
push
cmp
mov
jge
mov
mov
push
pushf
mov
sub
add
icebp
jmp
pop
jl
mov
dec
test
cmp
je
inc
mov
sbb
sti
pop
jp
mov
in
pushf
mov
pop
icebp
pop
fucomip
inc
cmpsl
dec
loop
inc
scas
add
jl
shrb
mov
xlat
pop
xor
jne
mov
pop
mov
dec
aas
mov
push
fwait
xchg
adc
icebp
inc
jns
ja
sahf
ficoml
jo
std
inc
mov
repz
pop
jae
mov
sub
jbe
mov
outsl
gs
scas
cmpsb
sub
pop
jo
ds
stc
cmp
and
and
and
sbb
imul
xchg
or
sbb
push
mov
sbbl
mov
scas
out
pop
mov
outsb
cmpsl
pop
and
mov
mov
xchg
mov
dec
dec
jo
nop
mov
or
stos
push
test
mov
push
adc
sbb
mov
mov
adc
push
xor
test
mov
push
pop
pop
pop
out
cmp
sbb
mov
adc
ret
imul
jmp
push
push
cmpsb
and
pop
xchg
push
pop
pushf
inc
mov
notl
mov
mov
aaa
push
cltd
mov
adc
stos
pushf
push
push
push
pop
dec
lea
inc
fwait
dec
lods
push
add
stos
pop
pop
pop
rclb
mov
mov
mov
push
mov
xchg
stos
mov
mov
sbb
inc
dec
pop
jbe
jp
xchg
sbb
pop
scas
mov
jbe
in
cld
out
pushl
icebp
cld
lret
jbe
aad
sbb
inc
scas
xchg
push
mov
test
push
and
add
orl
adc
pop
push
mov
xchg
jg
insl
ljmp
push
in
fnstenv
jns
rolb
mov
insb
dec
xchg
adc
lock
adc
ljmp
adc
loopne
int3
push
in
sub
xor
xchg
adc
popf
fs
jb
inc
push
push
in
mov
cli
xchg
shrb
pop
sbb
pop
jl
pop
mov
cwtl
in
cld
jl
pop
sub
xchg
xor
or
subl
pusha
pop
je
xchg
scas
insb
mov
in
loop
lods
adc
loop
push
sarb
adc
sub
ljmp
fimuls
int
lods
adc
and
mov
daa
adc
adc
sbb
and
sbb
insl
loope
cld
cmp
fisttpl
pop
dec
in
test
popf
push
out
push
mov
icebp
jl
or
je
flds
repnz
and
loope
jbe
adc
hlt
jmp
fdivrs
cmp
mov
dec
dec
adc
mov
xchg
jle
shlb
dec
xor
mov
mov
xchg
fstpt
xchg
sbb
push
out
arpl
xor
ficomps
aaa
ds
lahf
mov
aad
and
shll
insl
shl
cmp
fisubrs
arpl
aad
xlat
sahf
cmp
dec
dec
bound
xor
add
mov
push
xor
ds
sub
in
popa
sarl
mov
cmp
push
shr
ljmp
dec
jecxz
cld
jl
push
pop
scas
mov
adc
orb
stos
jns
cwtl
dec
push
xchg
mov
popa
movsb
jecxz
bound
dec
fldt
gs
push
ss
sub
das
mov
fbld
sub
dec
int3
xchg
push
pop
vcvtpd2psy
and
or
pop
mov
pop
nop
movsl
and
push
call
pusha
push
push
sti
xor
mov
clc
dec
push
dec
cmc
sbb
jbe
sbb
push
out
imul
scas
dec
addr16
mov
adc
movsl
pop
rcl
mov
xor
pop
fnstsw
xchg
xor
out
cmp
roll
jns
je
xlat
xor
js
mov
mov
fistpll
mov
divb
push
sar
push
bound
dec
push
int
scas
xor
adc
or
sub
popa
inc
incb
inc
filds
mov
aas
icebp
notl
dec
adcb
mov
adc
sbb
pop
fstpt
xchg
fstps
xchg
test
push
fs
imul
lahf
outsb
push
or
mov
or
outsl
push
or
cs
mov
cmc
push
shll
mov
push
in
sbb
sbb
xor
mov
push
mov
push
aas
scas
push
inc
notb
mov
push
mov
pushf
lea
pop
les
adc
ficompl
mov
lret
fsubr
clc
jns
xor
jecxz
pop
pop
out
hlt
lret
mov
xchg
in
shrl
push
or
push
mov
lret
fildll
and
jnp
hlt
push
pushf
sbb
fsqrt
sub
insb
lahf
push
fs
subb
inc
outsb
sti
andb
push
insb
xor
out
in
sbbl
jge
into
outsb
sahf
pop
push
arpl
dec
xchg
stc
dec
and
iret
jo
movsl
mov
push
xchg
mov
pushf
mov
push
mov
cwtl
stc
cs
cmp
mov
idivl
jmp
or
xor
xor
sub
xchg
lods
or
inc
sahf
mov
out
loopne
mov
test
mov
mov
push
mov
sub
xor
dec
lret
daa
negb
rclb
cld
mov
push
insb
sarl
icebp
sysenter
aad
sbb
scas
mov
add
push
jb
sti
arpl
stc
ja
mov
popf
xchg
push
fsubrp
or
add
xchg
cmpsl
outsl
cmp
xchg
test
addl
push
adc
clc
add
mov
push
daa
cmpb
enter
add
push
push
fiadds
out
mov
xchg
icebp
inc
scas
pop
dec
in
cmpsl
push
pop
in
js
cli
cld
and
dec
jecxz
ds
adc
xlat
bound
lret
sub
sbb
dec
sbb
and
mov
out
sub
fisubs
cs
mov
aam
or
inc
in
test
popf
rcr
cmpsb
bound
repnz
test
ja
mov
dec
hlt
mov
lcall
sahf
icebp
mov
mov
inc
roll
inc
pop
fadd
jb
push
and
mov
rolb
xchg
fidivl
inc
out
nop
pusha
or
pop
movsl
cmp
push
sub
or
lods
add
pop
fsubp
shl
pushf
clc
stos
inc
pop
icebp
add
mov
popa
push
push
or
xchg
inc
push
sbb
sbb
jge
fldt
push
pop
sbb
pcmpeqw
push
stc
xchg
and
push
sub
jns
outsl
sbb
push
insb
sahf
test
mov
push
mov
xorl
push
mov
hlt
mov
fcomps
inc
pop
sti
mov
sub
fidivs
hlt
inc
jl
ds
sbb
data16
sahf
dec
mov
stc
lds
push
xorl
cmp
bound
push
jno
xlat
lods
sbb
xor
cli
and
or
sbb
adc
push
mov
mov
incl
cmp
fwait
or
sub
scas
xor
or
sbb
lods
out
cmp
fs
fbld
pop
dec
pusha
test
push
cmp
arpl
xchg
push
insb
xor
xchg
cmp
push
pop
pop
ja
jne
push
inc
dec
pop
sbb
cmpsb
mov
add
mov
mov
inc
xchg
jmp
adc
sahf
mov
das
push
xchg
out
out
push
fisubs
int
jbe
jle
xlat
je
and
jl
out
aad
push
mov
or
pop
push
insl
notl
cmpl
test
fidivs
xchg
adc
mov
push
cmp
jmp
xor
jl
jecxz
subl
imul
push
xchg
or
test
ret
repnz
xor
lahf
push
fcoms
and
jns
imulb
push
inc
hlt
push
mov
mov
bound
lea
sbb
xchg
jge
sbb
push
mov
push
lret
int
roll
jnp
sbb
pushf
ret
push
push
mov
loopne
jg
rcrb
jle
jbe
add
fisubs
in
push
adc
cld
sbbl
dec
push
loope
fadds
pop
movsl
sbb
hlt
shrl
dec
sbb
add
fldt
xchg
js
adc
rclb
cmpsl
xchg
adc
sbb
xchg
pop
mov
into
sbb
cmp
adc
sbb
jecxz,pn
cs
xor
stc
push
scas
or
repz
mov
push
jno
pop
cmp
push
push
and
shl
sahf
popf
bound
test
mov
xor
mov
test
sub
bt
not
call
xchg
call
bswap
mov
not
pop
lea
movsbl
pop
not
movsbw
not
bswap
pop
bswap
lea
pop
pushf
movb
pushl
ret
push
movl
jmp
shr
not
shl
sub
push
mov
pushf
pusha
sets
mov
pushf
movzbw
mov
mov
not
mov
push
mov
call
cltd
and
call
into
rclb
cmpsb
pop
lcall
mov
inc
mov
nop
scas
lock
aaa
jno
jmp
decl
and
out
pop
popa
push
incb
mov
mov
xchg
or
pop
les
ds
push
ret
mov
insl
test
in
xor
aaa
mov
xchg
xor
mov
push
cmp
inc
mov
sub
cs
add
pop
mov
int3
lea
adc
out
int
fcoml
pop
and
jno
out
sub
repnz
mov
xor
pushf
mov
fdivrs
or
cmc
jl
fcoms
mov
xorl
push
push
sub
push
hlt
testl
push
mov
mov
inc
stos
mov
push
add
loop
sub
iret
pop
cli
lahf
cld
jno
jmp
mov
mov
mov
aad
ret
popf
test
xor
mov
adc
dec
sbb
xorl
jbe
cmc
repz
ret
cmp
mov
outsb
sbb
addl
repnz
xchg
lret
inc
cmp
leave
sub
xchg
lea
outsl
and
push
xor
sahf
xor
pushf
test
mov
push
mov
ja
stos
scas
jl
pop
sti
mov
bnd
std
inc
mov
sub
cmpsl
cmp
aam
push
sub
les
dec
mov
pop
mov
lea
cmc
mov
fmuls
jg
movnti
push
in
jb
dec
mov
int3
aam
sub
in
adc
mov
loope
clc
enter
dec
inc
jne
es
or
push
std
xor
daa
adc
xchg
xchg
jbe
dec
xchg
jb
xchg
shrb
mov
loope
adc
pop
pop
mov
int3
push
pusha
out
rol
mov
loop
mov
mulb
mov
xlat
xchg
aad
or
mov
lea
call
jmp
btc
mov
neg
setns
shr
mov
test
dec
mov
stc
mov
cmp
neg
pushf
pushf
stc
stc
ror
jmp
lock
sbb
dec
int3
push
adc
pop
rclb
mov
mov
cld
jne
mov
insb
mov
pop
cmp
or
test
fsubs
mov
add
mov
pushf
jmp
xor
sub
sub
not
pushf
movb
pusha
stos
jmp
push
bswap
pusha
pop
movzbw
lea
pushl
push
movl
pushf
call
mov
movsbw
lahf
jp
lea
pusha
push
mov
call
movb
pusha
pushf
movl
call
pusha
call
clc
pushf
cmp
pushf
pushl
lea
jns
pushf
lea
jae
push
clc
test
push
add
call
call
jmp
lods
push
xchg
sbb
repz
insl
mov
outsb
cwtl
xlat
jb
loop
mov
out
fs
jnp
mov
jg
xlat
pop
rclb
fistps
dec
andb
xchg
push
xchg
mov
adc
fwait
xchg
jg
push
mov
adc
xchg
pop
sbb
and
push
push
sbb
ss
imul
fisttpl
inc
fildl
test
cmp
adc
outsl
enter
dec
lret
cmp
adc
or
jle
mov
sub
ret
scas
fsts
cmp
imul
outsb
jle
sbb
mov
mov
xor
mov
out
xchg
jne
outsb
jmp
mov
pushf
ret
sub
popf
mov
xor
ret
repz
adc
sbb
mov
in
xor
fnsave
das
push
xchg
pop
scas
imul
cmc
scas
int
in
gs
ficompl
mov
sbb
add
jmp
or
aas
fistl
sbb
out
push
es
xor
sbb
test
add
xor
mov
pop
jne
inc
pop
ja
pop
aad
mov
dec
out
jmp
jb
ret
outsb
ss
inc
outsw
fidivrs
cwtl
shrb
cmp
scas
in
sbb
or
pop
ficompl
pop
mov
call
push
sub
lods
insb
cmc
or
ljmp
scas
cmp
fcomp
insb
adc
push
push
mov
or
add
and
shrl
test
mov
unpcklps
rcll
addr16
subl
test
scas
xor
jge
lcall
fs
pop
sbb
xor
jbe
xchg
jmp
ret
pop
and
cmp
aaa
jnp
fs
xor
pusha
mov
ficoml
adc
imul
ds
in
sbb
adc
setle
sbb
lods
xor
ljmp
push
pop
push
mov
pop
push
or
rol
xlat
shl
pop
sbb
rcrb
mov
jge
sub
cs
pop
mov
subl
in
adc
cmp
sbbb
inc
jbe
dec
pop
ja
adc
adc
les
mov
test
xchg
lahf
cmp
add
sbb
xor
sub
aas
lock
jle
push
stos
xchg
mov
add
xor
stos
add
fadd
cld
les
sub
sbb
sbb
bound
sbb
and
cli
add
mov
xchg
push
cmpsl
xchg
testl
xchg
push
jge
jg
pop
sub
popf
sbb
mov
in
jl,pn
pop
and
adc
lock
clc
xlat
adc
pop
mov
loop
jmp
ds
xchg
outsl
jmp
ficoms
dec
xor
ret
sub
jbe
cs
fldl
and
mov
mov
xchg
pop
pop
add
mov
push
jno
loopne
fiadds
cmpsb
jmp
outsb
mov
adc
xor
out
incl
not
xor
sub
adc
xchg
outsl
mov
iret
inc
push
pop
push
xchg
push
xchg
add
ret
decl
push
add
mov
test
jb
lcall
sti
add
inc
xor
iret
stos
in
adc
mov
adc
in
popa
push
lds
push
rolb
out
inc
out
in
inc
adc
insl
xchg
sbb
pushw
cltd
dec
je
popf
sbb
daa
ret
sahf
out
adc
loop
es
push
cmp
mov
xor
sbbb
sbb
sbb
and
sbb
jmp
ljmp
hlt
sbb
popf
xor
pop
ds
xchg
cwtl
add
sub
and
xchg
lods
push
cmpsb
dec
xchg
add
sub
ror
pushf
mov
sub
sub
push
rcrl
sbb
push
jle
pop
sbb
xchg
pop
pop
push
push
ss
push
mov
into
or
pop
sub
ljmp
in
lea
adc
pop
dec
or
pop
sub
fldenv
mov
pop
add
mov
push
pop
int
cmp
jnp
inc
pushf
in
mov
insb
push
dec
pop
dec
lds
subb
loop
andl
xchg
ret
pop
jle
adc
cld
xor
mov
push
loop
popf
add
repz
insb
ss
mov
cli
xchg
sbb
sbb
inc
xor
out
test
ds
popf
push
inc
and
mov
and
and
int
inc
xor
sbb
ret
sahf
add
add
push
add
xlat
push
mov
adc
daa
jmp
xor
gs
cli
enter
and
std
scas
jne
rclb
or
fwait
adc
stos
xor
xchg
shrb
jp
fs
dec
xor
xor
insb
add
sbb
imul
fdivrl
sub
lods
mov
add
add
loop
mov
cmp
inc
dec
scas
or
push
and
pop
cmp
jl
jns
lcall
pushf
sbb
or
js
outsb
xchg
mov
in
cld
imul
dec
mov
insl
jns
adc
fildll
pushf
cld
icebp
stc
movsl
incl
aam
sub
sub
lcall
stos
clc
sbb
repz
sbb
fisubrs
pop
arpl
pop
pushf
push
xor
movsl
inc
call
pop
jmp
scas
fildl
lcall
sbb
push
cs
cmc
and
cmp
pop
daa
in
sub
xchg
xor
or
in
sbb
fcomip
clc
ror
sbb
push
xor
mov
inc
mov
in
jnp
dec
inc
loop
cli
dec
outsb
loope
xchg
xor
jns
dec
jl
in
imul
adc
xchg
mov
pop
sbb
cmp
sbb
mov
in
mov
fcoms
fstl
outsl
xchg
call
mov
cli
cmc
std
insb
xchg
test
pop
es
adc
mov
call
scas
sbb
mov
test
pop
sbb
ja
ss
and
lea
mov
into
sub
and
lds
xor
xchg
cld
pop
ljmp
fidivs
cltd
out
stos
gs
dec
xchg
cmp
cmp
push
pop
xor
fisubrs
scas
pop
add
nopl
jne
or
sbb
xlat
cmp
add
pop
jne
pop
mov
enter
ficompl
cmc
aaa
cmpsl
xchg
es
insl
ret
xchg
mov
mov
dec
stc
gs
lea
jmp
push
js
sbb
fdivr
sub
cmp
lcall
push
add
ja
sub
pop
ss
sub
nop
mov
call
push
mov
adc
out
jl
fsubrs
cmp
mov
dec
cmp
sbb
jle
xchg
test
cltd
push
ss
cmpsb
bound
insb
sub
inc
addr16
pop
push
mov
fwait
mov
cs
adc
push
xchg
iret
nop
repz
add
stc
mov
xor
mov
mov
pop
cmpsl
mov
pushl
in
lea
mov
xor
sbb
popf
jbe
or
lods
int
stos
jnp
dec
mov
jmp
xchg
jo
push
or
adc
jbe
aam
negb
mov
sbb
mov
cmp
pop
xor
fists
arpl
mov
outsb
or
loop
xchg
pop
outsl
cwtl
pop
jb
lahf
ljmp
sti
ds
or
xor
cmc
cwtl
xchg
xor
cmp
sub
rorb
push
lods
fwait
mov
ds
and
in
stos
loop
or
cs
add
xor
sub
arpl
out
inc
cs
sahf
mov
jmp
dec
in
cmpsb
xor
es
mov
outsb
jg
jno
sahf
dec
movb
xchg
mov
mov
xor
scas
and
sbb
jbe
push
add
jo
pusha
inc
push
scas
push
cmpsb
push
sti
mov
shrb
ja
fisttps
insl
push
xor
push
jae
adc
mov
fidivrs
sub
repz
adc
jl
out
push
iret
mov
push
lods
inc
cmpsb
mov
repz
fisttpl
inc
sub
fiaddl
cmpsl
out
in
mov
pop
xchg
jbe
jo
popa
in
fadd
je
fildll
ja
sbb
testb
pusha
ja
test
sbb
add
sub
test
mov
adc
mov
adc
loope
icebp
mov
sub
outsb
sbb
lcall
add
movsbl
inc
lret
adc
push
mov
insb
xor
shlb
cmp
adc
sahf
sub
arpl
rorb
mov
jle
ds
out
xchg
jecxz
adc
cmp
adc
ss
push
jecxz
aam
pushf
push
xor
sbb
movsl
cmc
push
dec
popf
bound
sub
sub
out
adc
adc
mov
loop
orb
arpl
cmpsl
sahf
cmp
and
jbe
in
test
stos
pop
jp
pop
loop
sub
add
test
mov
sbb
pop
xchg
ficompl
insl
out
sub
pop
xor
cmp
xor
pushf
frstor
add
mov
or
add
xor
fnstsw
shll
sbb
mov
add
aam
loope
pop
pusha
lcall
jge
sub
aam
sub
or
fimuls
test
les
push
jnp
or
pop
shlb
mov
xchg
sbb
dec
xor
insb
xchg
sbb
sbb
fimuls
push
lods
ss
cli
fldt
add
xchg
adc
cltd
add
ds
or
push
cmc
add
imull
lods
inc
or
hlt
orl
and
hlt
cmp
outsb
int
jecxz
adc
mov
add
shrb
dec
and
out
pop
cli
insb
add
xor
inc
add
out
cltd
adc
cli
adc
jl
xor
mov
cmp
stos
aad
xchg
xor
or
fcmovu
in
pusha
jg
push
mov
mov
iret
cmp
xor
ss
insl
inc
sub
mov
outsb
pop
push
push
or
mov
cwtl
inc
rclb
insb
cltd
stos
jge
or
rclb
fisttpl
pop
or
sbb
cwtl
or
fidivl
jne
es
jno
jae
pop
movsl
je
jno
popf
push
mov
shrl
ficomps
xchg
xchg
xchg
xor
push
adc
and
loop
outsb
add
add
push
ret
jns
outsl
lcall
jns
arpl
scas
loop
dec
jl
pop
js
fcom
pop
add
icebp
cmpsl
aas
addr16
cwtl
mov
icebp
ret
cmpsb
or
jns
push
dec
inc
pop
xor
jbe
imul
js
xchg
push
loop
jo
mov
fmull
or
inc
in
or
arpl
push
dec
jle
adc
fstpt
aam
sti
jns
outsl
push
sarl
mov
jno
mov
fnstcw
insb
sbb
sub
inc
jg
xor
pop
adc
cmp
add
cmc
ficomps
jp
pop
icebp
das
adc
pop
push
xchg
nop
cmp
cmp
sbb
mov
jge
cld
xchg
push
jge
inc
or
aaa
data16
push
add
pop
push
in
push
mov
sub
adc
icebp
dec
xor
pop
or
out
mov
sbb
pop
push
adc
push
jge
jp
arpl
push
mov
xchg
je
ss
and
popf
sbbb
cmp
dec
cmc
stos
xchg
jp
push
mov
out
es
mov
inc
jl
sbb
push
cmc
xchg
int3
cmc
insb
bound
mov
fnstcw
mov
int3
mov
xor
decb
mov
movsb
lods
jne
cli
enter
rorl
hlt
int
push
lods
jl
scas
pop
popf
or
push
arpl
xor
adc
xchg
xlat
ss
pop
jns
stos
outsb
aaa
lcall
fsubl
jbe
pop
pop
jl
jp
das
pop
test
frstor
cmp
jmp
insb
test
stc
or
daa
sbb
mov
scas
mov
pushf
rorl
cvtps2pd
xchg
mov
adc
mov
lods
ds
dec
sbb
mov
dec
add
lods
xchg
cmp
fistpl
and
jns
fistpl
insb
lods
test
adc
xor
adc
call
pushf
xchg
adc
jne
dec
test
xor
lret
pop
loop
mov
jmp
in
jge
xor
push
xor
les
xchg
jbe
xchg
or
and
mov
jg
fsubl
add
adc
pushf
rcrb
push
aam
test
lahf
loope
mov
es
mov
add
sahf
sahf
sub
dec
imul
cmp
iret
mov
gs
iret
dec
cmp
sbb
cld
hlt
mov
bound
mov
pop
repz
jmp
addr16
pop
sbb
or
push
xor
in
enter
je
sar
cmpsb
mov
fwait
push
sahf
add
push
popl
and
xchg
xlat
cmovge
hlt
cs
loope
sub
mov
fdivrs
push
sbb
xor
cli
push
adc
shlb
add
pop
push
call
or
setnp
in
test
mov
push
jl
sub
vrcpps
jge
in
cmp
enter
jl
xchg
in
jmp
outsl
mov
sub
or
jge
lds
mov
in
ds
sub
sbbl
sbb
or
sbb
add
jnp
cltd
cmp
ss
mov
mov
jae
xchg
jb
push
lea
adc
cmp
int3
jns
sbb
adc
xor
pop
sar
inc
fiadds
mov
sbb
int3
or
fisubrl
mov
imul
loop
mov
loopne
mov
ss
shll
fistpll
jno
fs
dec
cmp
xor
outsl
add
xchg
sbb
adc
sbb
jbe
dec
xchg
pop
popa
sbb
xor
insb
mov
sti
sub
fst
insb
sbb
pop
sub
gs
sti
push
fldl
sahf
add
dec
fistpl
pushf
dec
cli
outsb
out
stc
lods
xor
push
ljmp
pop
jae
or
popf
ret
sub
in
sbb
into
cmpsb
sub
dec
push
loop
ret
push
cmpsb
out
xchg
sbb
das
or
inc
push
rorb
inc
aad
rclb
fstp
ja
movsb
sahf
jbe
add
loope
sub
pushf
repz
addr16
inc
cmp
divb
lods
ss
cwtl
or
mov
push
lcall
jns
xchg
fldl
in
fdivrl
pushf
cs
jb
and
xor
incl
mov
fisttpll
icebp
cli
scas
push
and
pop
aad
das
xchg
sti
pushf
stos
xor
cmpsl
int
inc
call
inc
mov
popa
test
xchg
push
push
or
call
mov
mov
repnz
insl
inc
push
and
ds
inc
rol
ror
aam
ss
dec
mov
push
pop
enter
pop
xchg
jb
cwtl
push
sbb
inc
ss
ja
cs
push
xchg
loope
mov
out
adc
adc
outsb
lods
pop
pop
sahf
xor
push
pop
insl
aad
pop
cmp
sti
jbe
xchg
pop
data16
lods
in
into
adc
daa
jecxz
sbb
imul
mov
aad
inc
or
push
add
mov
sub
add
loope
int3
push
sub
lahf
xchg
icebp
outsb
ja
sbb
pop
cli
outsl
push
push
or
inc
dec
cmp
mov
cmp
mov
stos
pop
sbb
add
into
cs
movsb
inc
jl
pop
push
mov
push
xchg
daa
adc
sbb
dec
out
jmp
js
repnz
outsb
insl
jns
stos
add
shlb
cmpsb
xchg
adc
outsl
jecxz
xlat
mov
sbb
pop
pop
add
setle
push
add
imul
push
ljmp
push
fisubs
scas
ljmp
mov
sbb
add
fnsave
pop
and
push
faddl
stos
push
push
imul
out
dec
push
cmp
js
pop
insb
push
mov
test
jb
dec
lcall
fcoms
inc
lods
icebp
mov
xchg
inc
adc
scas
or
xchg
pop
jbe
inc
fdivrp
ss
and
push
jbe
rorb
in
or
and
xor
in
jg
mov
out
or
ja
js
inc
outsb
mov
cmp
sahf
ss
test
push
fstpt
pop
xchg
sbb
sbb
in
popf
jno
bound
mov
ficompl
adcl
scas
mov
data16
dec
lods
dec
pop
xor
shlb
xchg
bound
loope
xchg
mov
cmp
pop
fucomp
push
push
jns
dec
adc
adc
fdivr
sub
outsl
out
ficoml
mov
aad
fsubp
xor
shrl
fwait
or
adc
dec
ljmp
mov
pusha
pop
jge
les
jbe
dec
js
rcll
mov
sbb
xor
cmp
xchg
push
jmp
mov
rolb
xorl
push
out
scas
jp
pop
fwait
mov
push
notb
mov
pop
mov
xor
pop
mov
push
ss
in
sbb
stos
inc
scas
aaa
xchg
les
insb
les
je
dec
xchg
data16
loope
repz
add
mov
cmp
roll
dec
fsubs
pop
test
cwtl
imul
rcr
arpl
jle
adc
std
push
cmpsb
scas
fwait
lods
xor
outsl
shll
adc
mov
movsb
ds
xor
test
cwtl
cmp
jl
arpl
or
rcll
adc
stc
jg
inc
push
scas
sbb
lahf
sub
jb
mov
push
mov
adc
xor
xlat
insb
dec
jno
lock
sbb
add
pop
int
pop
inc
jo
mov
inc
xchg
movsb
jl
lret
adc
push
icebp
in
sbb
ss
movsb
insl
into
sub
sbb
divl
push
js
push
enter
or
ja,pn
mov
xor
shlb
pop
jno
xor
jp
call
and
out
fs
popf
cmpsb
sar
sbb
sti
mov
mov
xor
dec
adc
xor
mov
xor
push
xor
sahf
pop
adc
xchg
loopne
aad
mov
xor
xchg
push
mov
loopne
repnz
cmp
jmp
mov
xchg
jge
jmp
test
sbb
xor
jmp
jbe
xor
mov
cmpb
sbb
pop
testl
pop
stos
out
ss
bound
popf
inc
add
fs
adc
pop
inc
mov
jp
idivb
adc
adc
fstpl
push
rol
fisubl
es
clc
mov
push
push
sbb
out
les
xchg
fbld
inc
cmp
fsubl
in
mov
xchg
jl
xor
data16
cmp
fnstcw
add
fwait
jmp
fdivl
sub
mov
mov
cmp
test
dec
sbb
push
push
pop
and
stos
lret
xor
sub
xchg
push
pop
out
jg
hlt
sbb
push
xor
pop
mov
iret
jae
stos
jp
imul
add
pop
mov
adc
aad
lods
sbb
inc
pop
pushf
jmp
push
jb
pushf
sti
js
push
or
subl
repnz
jne
xor
jge
xor
mov
xchg
jmp
jl
adc
ljmp
fistl
push
aad
ljmp
sub
cltd
ss
addr16
sub
ljmp
je
cmp
jb
pop
pushf
dec
test
cmc
cmp
cli
fdivs
cmc
insb
cmp
out
cmc
xor
and
push
mov
int3
sub
addb
dec
imul
hlt
add
mov
faddp
sbb
xor
add
call
sbb
xchg
jecxz
outsb
enter
ss
hlt
sbb
add
imul
pop
mov
pop
imul
mov
es
xlat
inc
in
popf
pop
outsl
xchg
mov
lds
movsb
and
adc
loop
pop
adc
outsb
repnz
inc
lret
call
outsl
call
gs
dec
push
out
or
pop
adc
stos
push
cld
add
pop
in
nop
add
mov
add
aad
mul
adc
push
mov
push
pop
push
xor
in
xor
mov
scas
mov
mov
xor
sub
mov
mov
adc
imul
dec
pop
inc
mov
jmp
out
mov
cs
and
in
cld
cli
stos
rcll
dec
bound
movsb
roll
inc
jl
outsb
push
jno
sub
insb
scas
outsl
fcoml
inc
je
loop
sub
pop
sahf
ret
dec
jns
cli
add
aas
insl
mov
pop
mov
xchg
push
sbb
pop
js
test
jle
test
mov
fdivl
out
fiaddl
jno
jmp
fwait
push
dec
push
mov
ficoml
in
cs
cmp
mov
mov
pop
xchg
imul
cltd
xchg
xchg
lock
fcmovnb
mov
fidivl
rolb
sbb
dec
outsl
sahf
arpl
jne
sbb
lahf
dec
xor
ss
in
adc
dec
mov
ljmp
aam
mov
addr16
sti
out
mov
popf
dec
mov
lock
in
xor
xchg
pop
into
add
push
lods
ja
stos
leave
insl
sbb
stc
pusha
adc
sti
fbstp
dec
out
xchg
cmp
dec
in
mov
sbb
movsl
ss
dec
test
add
mov
inc
jecxz
cli
ja
xor
dec
jb
sahf
sbb
xchg
and
inc
popf
fisubrs
or
xchg
fisubl
fildl
pop
scas
lret
sub
jg
ljmp
mov
movsb
dec
into
pop
inc
addb
pop
outsb
mov
push
stos
cmp
push
out
scas
fsubrl
enter
stc
mov
jb
jo
push
jle
push
xchg
pushf
adc
lcall
and
jbe
jne
xchg
dec
dec
dec
ljmp
pop
pop
loope
dec
int
sbb
inc
xor
out
inc
jl
fisttpll
mov
ss
cmp
ss
insl
and
jg
fs
and
gs
cmpsb
lods
fstps
mov
mov
xchg
xchg
add
jl
mov
push
imul
outsb
std
jl
jge
lds
mov
push
sbb
fst
data16
sub
lods
mov
fwait
pushf
ret
jl
adc
popa
cmp
ss
cmp
add
arpl
fsubp
mov
scas
leave
int3
sahf
out
lds
movsl
xor
jle
dec
les
cmp
ja
out
jle
mov
push
jno
xchg
shrb
ds
daa
cmpsb
mov
mov
test
fists
sbb
push
or
cmpsb
scas
adc
hlt
iret
cmp
into
pop
inc
xchg
sub
lcall
sub
incl
cmp
dec
pop
xchg
dec
mov
mov
scas
pop
sbb
sub
stc
int3
inc
jecxz
data16
dec
adc
ss
dec
sbb
jo
xchg
inc
pop
inc
pushf
lret
or
push
jnp
call
xorb
jge
xchg
add
mov
xor
clc
pop
sbb
rorb
adc
es
int3
in
xacquire
and
enter
add
pop
mov
jecxz
push
or
sbb
sti
sbb
cld
repnz
push
jg
push
xchg
sbb
cld
lods
dec
adc
shr
xor
rcrl
and
or
stos
stc
jmp
fnstsw
insb
adc
aaa
leave
pop
cs
xchg
or
jge
int
jmp
aad
mov
outsl
cmp
jns
jae
or
or
movsl
mov
xor
mulb
cmp
fcmovnu
out
movsl
sarl
sub
jp
out
inc
xor
jmp
rcrl
adc
or
mov
cld
mov
sbb
or
ret
cmpb
xchg
arpl
sbb
push
sub
lahf
sbb
sbb
sub
sarl
cmp
imul
cmp
jnp
jb
push
clc
adc
ss
push
in
subl
cmpsb
push
fs
les
out
movsb
insl
lods
movsl
outsb
xor
jge
shll
pop
pop
jp
jl
gs
int3
jp
aam
sbb
sub
aam
sub
adc
mov
std
sbb
inc
test
sbb
fnstenv
jmp
imull
dec
ret
test
nop
in
push
jecxz
cli
pusha
sub
dec
sbb
mov
lea
pushl
in
adc
movsb
jp
push
jmp
xchg
mov
or
rolb
and
lcall
sub
jmp
js
xchg
lods
mov
adc
xor
dec
rcr
pop
ficoms
inc
or
addr16
dec
dec
mov
sub
push
add
daa
stos
jge
sbb
add
ja
pop
imul
mov
aam
lcall
mov
sbb
mov
popf
sub
ss
and
outsl
ja
mov
jae
sbb
fsubl
aad
dec
out
pop
push
or
mov
push
xor
sbb
and
sti
cmp
jae
stc
jle
or
pop
mov
xchg
cmp
mov
push
inc
out
cmp
daa
loop
jno
jns
inc
mov
test
pop
mov
cmp
mov
jno
adc
in
lods
daa
nop
inc
dec
cmp
xorl
sti
dec
inc
inc
xchg
mov
xchg
push
push
ficomps
inc
test
adc
loope
and
das
popf
adc
jb
pop
xchg
xlat
nop
sbb
jle
pop
ds
outsl
in
inc
fcomip
sbb
dec
lahf
pop
insb
out
push
cmpsl
cwtl
cmp
xchg
sub
mov
popa
lods
sub
fnstenv
sahf
jno
jecxz
sub
push
xrelease
dec
call
cmpb
cwtl
mov
dec
mov
jne
stos
or
cld
push
ss
movsb
pusha
mov
cmpsb
outsl
cltd
je
xor
sub
jns
rolb
mov
add
test
call
aad
dec
in
add
loopne
fwait
jmp
loopne
dec
dec
push
mov
mov
je
push
sti
call
sti
mov
mov
or
divl
jbe
pop
jl
lods
cmp
sahf
int3
nop
ret
shlb
cmp
and
mov
or
sub
adc
inc
dec
mov
mov
imul
repz
pushf
jno
cmpsl
jl
ss
hlt
in
and
lods
jmp
push
mov
insl
cmp
imul
pop
sub
jp
ja
in
inc
xor
cmp
int3
dec
jb
adc
pushf
push
shl
shll
out
and
push
fstl
enter
inc
xor
add
xchg
dec
sub
dec
add
cmpsl
out
push
adc
sbb
ss
outsl
jp
addr16
mov
mov
rorb
push
xchg
das
movsl
loope
mov
ret
cmp
enter
call
movb
test
xor
or
sbb
movsb
inc
lock
sti
outsb
jnp
insb
lcall
loop
pop
add
push
ja
ret
cltd
inc
shrl
out
add
xor
movsb
mov
xor
and
jbe
fs
jecxz
xchg
ss
mov
out
ficoml
jb
addb
adc
cs
in
inc
jbe
cwtl
fndisi(8087
pop
shlb
and
fwait
jmp
cli
mov
pop
cli
xor
push
push
lods
or
stos
pop
pop
cld
or
es
mov
push
clc
outsb
sub
imul
push
pop
cli
aad
imul
cmp
lods
pop
mov
imul
mov
fld
popa
in
sbb
sbb
cmp
jnp
push
hlt
xor
jb
push
mov
jns
aad
dec
pop
int
mov
ds
mov
mov
xor
imul
inc
leave
mov
lock
movsb
push
fcmovbe
jmp
data16
mov
outsb
cmpsl
and
aaa
mov
imul
push
test
mov
insb
cmp
xchg
mov
je
iret
xchg
into
xchg
or
sbb
adc
dec
sub
adc
aam
mov
inc
lods
jae
and
mov
add
and
test
xchg
mov
sub
xor
mov
mov
jmp
xchg
pop
jb
shrb
outsb
mov
cmp
push
sti
xor
or
mov
sub
mov
jns
mov
push
jne
sbb
cmc
mov
bound
pop
jecxz
outsl
mov
xchg
jg
xor
out
push
xor
and
xchg
push
inc
in
int
jl
das
jns
add
adc
jg
cmpsb
sbb
outsl
sahf
invd
cmc
mov
in
popa
sbb
sbb
loope
fwait
pop
adc
daa
jge
mov
pop
jge
sub
popa
dec
gs
inc
dec
ss
mov
xor
ret
adc
in
lcall
shrl
mov
lahf
xlat
bound
mov
dec
loop
outsl
scas
push
mov
js
outsb
jge
sbb
xor
push
nopl
jno
roll
xchg
imul
add
or
jbe
xor
lock
test
push
mov
and
jg
sub
mov
push
inc
xchg
mov
stos
out
aad
test
push
data16
scas
push
adc
popf
push
in
push
scas
dec
fidivl
sub
adc
test
in
jl
lods
sub
cld
sbb
cmpsb
mov
push
xorl
jmp
test
sub
add
ret
ljmp
test
sub
lods
pusha
mov
push
jno
inc
addr16
push
mov
add
shll
loopne
call
fstl
arpl
sti
push
adc
xor
sub
in
push
sbb
out
and
add
jns
add
loope
mov
pop
mov
cmp
mov
jb
jne
cmp
insb
repz
insb
ss
xchg
inc
mov
lcall
or
es
pop
xchg
sbb
adc
aad
or
dec
mov
leave
pusha
lea
insb
adc
jnp
and
lret
pop
xor
test
stos
arpl
std
mov
xchg
sbb
jae
push
jg
orb
stc
ss
mov
xor
aad
or
sahf
stc
inc
cmp
and
fdivrl
lret
or
or
pop
inc
jo
gs
mov
sbb
sti
bound
sar
jb
xchg
in
dec
sbb
cs
out
ss
pusha
xchg
or
add
call
shrb
fisubrs
ss
popa
cs
adc
imul
pop
dec
xchg
mov
int
pop
jbe
xor
dec
in
jo
inc
insb
pop
pop
inc
push
or
jl
xor
cmp
lcall
push
jg
pop
jne
test
dec
xchg
jg
shll
in
aad
int3
stos
inc
lea
das
mov
cmp
pop
push
xor
jne
push
xchg
test
lds
xchg
out
lcall
in
popf
xchg
ljmp
lods
sbb
inc
mov
mov
and
pop
in
push
dec
xor
insl
lea
xchg
ds
out
xor
xchg
sar
into
ret
sahf
lret
adc
adc
jns
es
int
and
sub
pop
stos
lock
jno
cmpsl
push
jle
inc
faddl
fwait
push
mov
test
loope
pop
lret
or
fisttpll
movsl
mov
inc
sbb
icebp
dec
pop
cwtl
xor
jp
int
dec
insb
sub
orb
hlt
mov
pop
dec
std
out
inc
movsb
test
xchg
inc
mov
aad
jno
inc
xor
jae
xor
test
ss
add
inc
std
dec
test
rcll
insl
fwait
sbb
cs
test
xchg
call
adc
jmp
mov
jecxz
icebp
adc
sarb
mov
sbb
loopne
idivl
mov
cmpsl
ret
adc
out
in
sub
or
xchg
insb
lret
test
stos
jl
out
push
popa
jb
mov
cmp
mov
adc
cmp
fistps
fs
sti
adc
add
fwait
xchg
sysret
sub
fiaddl
std
xchg
ret
dec
sbb
nop
xor
jno
test
jb
stc
dec
lea
dec
scas
js
lret
into
sbb
add
aad
cmp
lock
xchg
jmp
ja
dec
aad
in
mov
mov
notb
jbe
jns
imulb
or
outsb
push
nop
jne
jno
int
out
je
in
pop
push
addr16
sbb
movsl
xor
push
or
ljmp
fs
xlat
stos
std
dec
mov
roll
in
push
scas
aad
inc
dec
movsb
jb
shrl
cmp
xchg
mov
pextrw
es
jle
mov
pop
push
push
test
xor
and
das
pop
xchg
sbb
sbb
pop
adc
fstpl
aaa
adc
adc
mov
ficoms
cmp
pushl
ja
iret
lret
rol
arpl
push
sbb
int
inc
imull
stc
push
inc
add
loop
ja
lods
mov
xor
es
mov
push
jl
jg
sub
mov
pop
xchg
stos
sahf
fs
and
push
jno
ja
adc
mov
in
or
scas
mov
mov
shll
jne
imul
jle
jl
and
nop
push
xor
pusha
lcall
mov
push
mov
mov
cmc
fwait
aaa
mov
pop
sbb
addr16
xchg
out
fwait
inc
xor
in
pop
push
test
push
call
xor
inc
rclb
aas
ss
push
arpl
jns
fistps
inc
sbb
outsl
loop
les
jp
cmpsl
jns
push
xchg
pushf
outsb
stc
pusha
pop
mov
scas
mov
ss
add
std
in
stos
xor
jns
lds
push
stos
ss
fcmovnbe
xor
mov
xchg
into
les
loop
insb
push
and
stos
adc
outsl
imul
int3
inc
cli
jae
or
aaa
cli
mov
dec
jae
mov
pop
mov
sbb
and
or
xor
lds
jb
cmp
mov
mov
xor
push
and
jns
scas
adc
xor
les
in
mov
imul
inc
out
lods
pop
or
fwait
sbb
lds
aad
cmp
sub
mov
adc
lock
ss
push
fsubr
sub
sbb
xor
cwtl
push
lret
ss
mov
inc
mov
mov
adc
stc
hlt
inc
adc
lret
xor
push
add
stos
add
cmpsb
ss
loopne
fbstp
subl
outsl
call
out
sub
xchg
ja
and
int
cmp
pop
cmp
fsubl
jo
aaa
pop
out
insl
out
lods
fbld
xchg
or
sbb
fnstcw
fst
push
and
mov
or
cmpsb
push
dec
push
sub
sbb
jl
jmp
mov
cmpsl
scas
mov
pop
sub
call
loop
divl
out
fsts
std
xor
lods
popa
cmpsb
jl
dec
xchg
cwtl
mov
add
and
inc
cmp
pop
fstpt
fsubrl
adc
std
shll
fwait
mov
js
cmp
push
and
xchg
repnz
in
sbb
push
test
mov
mov
sbb
daa
insl
push
dec
bnd
cmp
movb
popf
rcrl
loopne
insb
testb
adc
sbb
fdivrl
adc
loop
stos
mov
xor
out
aam
popa
adcb
enter
jge
test
xchg
ss
movaps
pop
add
sub
decb
xor
push
aaa
pop
fsts
bound
out
cli
cmc
add
xchg
cmp
test
xlat
mov
aad
xchg
lahf
test
mov
in
and
xlat
or
sub
pop
fists
jmp
pop
leave
or
mov
mov
or
pop
or
inc
cs
repnz
loop
ljmp
imul
loope
pop
jmp
jmp
inc
lahf
pushf
hlt
inc
das
scas
stos
mov
pop
pop
stos
mov
mov
subb
cli
or
pop
adc
in
lock
test
pcmpgtw
pop
imul
popa
mov
jmp
sub
xor
test
dec
pop
mov
insl
mov
sbb
mov
leave
jg
cmpsb
scas
cmp
mov
stos
jae
push
and
mov
fnstenv
push
add
push
loopne
jb
mov
sbb
cmc
lahf
insb
jg
mov
xchg
pop
pushf
aad
jle
movsbl
push
inc
sbb
loopne
testl
add
outsl
xor
je
out
test
stos
jo
imul
fidivrs
lods
jb
jge
dec
and
adcb
shrl
cmp
jo
mov
popa
cmpsb
push
mov
jne
pop
idivl
pop
jbe
adc
inc
push
repz
out
rorb
xchg
jge
mov
pushf
aas
aam
mov
shll
ss
ds
insb
outsl
mov
sti
push
orl
jno
jle
ss
xchg
ja
mov
sbb
pop
inc
dec
jnp
lret
movsl
sub
push
dec
test
les
dec
imul
xchg
int
sbb
test
pop
jns
lods
inc
loopne
in
fidivs
jle
cwtl
push
mov
jne
cmpsl
pop
add
aad
movsl
mov
fiaddl
in
out
movsb
and
enter
out
push
shll
mov
imul
adc
jbe
add
pop
inc
or
out
mov
int3
stc
pop
call
push
or
adc
jne
xor
xchg
test
push
clc
fcomp
in
aaa
inc
xchg
imul
incl
jo
loope
xor
lahf
adc
pop
test
bound
jmp
dec
push
inc
movsl
mov
adc
xor
or
pop
ss
or
or
out
push
xchg
pop
ret
int3
dec
loop
jbe
jl
cmp
lea
jb
dec
insb
pushf
jg
mov
out
rcll
stos
mov
mov
xchg
fildl
cmp
push
lds
xchg
jcxz
sbb
arpl
iret
pop
pop
imul
or
ficoml
jns
fwait
xchg
xchg
sub
dec
mov
adc
addl
push
xchg
fsts
adc
fimull
jbe
lods
test
pop
loope
adc
or
ss
or
sti
mov
popa
repnz
inc
jns
xor
fdivrs
inc
mov
push
insb
push
stos
xor
mov
scas
or
out
bsr
dec
icebp
adc
dec
push
inc
pop
push
inc
aas
out
daa
adc
sbb
imul
mov
lret
pop
repz
dec
decl
int
jnp
sahf
loopne
insb
sub
inc
sub
jge
repnz
jo
inc
loope
mov
push
outsl
in
out
or
xor
scas
jb
ja
bound
stos
lcall
testb
popf
dec
push
and
mov
add
or
fnstsw
jmp
addr16
push
mov
mov
ror
inc
stos
fidivl
pop
outsl
insb
jo
into
loop
xor
dec
fsts
mov
fistpll
mov
scas
xor
lret
adc
popf
or
leave
out
mov
div
mov
stc
aam
stos
pop
mov
xchg
and
jle
push
jo
inc
mov
aaa
dec
push
stos
jns
lds
jbe
sbb
xchg
sahf
jne
mov
out
fcomps
test
jle
fs
fisubs
es
add
fwait
cmpsb
mov
addr16
adc
movsb
xchg
enter
mov
xchg
sub
or
imul
ljmp
sbb
fs
fisubl
pop
sbb
mov
mov
sub
cld
xor
xor
sub
push
outsb
rcl
out
shll
mov
sub
jo
adc
sbb
cmp
imul
lret
xor
popa
fldt
xchg
stos
xchg
inc
enter
sbb
cmpsl
jmp
iret
mov
xor
ja
dec
adc
pop
jge
adcl
std
mov
jmp
and
dec
jl
and
pop
in
xor
js
mov
pop
sbb
repnz
mov
xchg
inc
fisubrs
fnsave
add
insb
sbb
jge
and
adc
aad
stos
lods
popf
sbb
push
mov
sbb
shrb
or
sbb
and
adc
gs
mov
imul
iret
es
xor
mov
jb
or
mov
out
mov
insb
stos
xchg
dec
lods
out
shl
xchg
or
mov
dec
adc
add
mov
or
mov
lret
outsl
push
jmp
call
jp
loopnew
loop
adc
call
mov
test
adc
xchg
in
in
sub
dec
xchg
notw
data16
xor
stos
jp
dec
push
call
jl
or
xchg
popf
push
ss
shlb
jecxz
lds
pop
adc
or
xor
and
sbb
push
es
and
pop
jle
dec
push
adcl
cmp
push
mov
test
and
inc
push
loop
jge
lock
loope
mov
std
push
push
push
imul
jg
cs
test
call
gs
and
add
loope
xchg
call
cmp
adc
dec
pop
xchg
fwait
adc
or
add
into
push
mov
dec
xchg
faddl
stos
test
dec
inc
lret
insb
mov
push
adc
mov
insl
fsubl
add
jl
icebp
sbb
inc
xor
mov
cmp
cmp
push
xchg
pop
ss
insb
cli
mov
sbb
out
jb
inc
aam
mov
add
push
push
xchg
xor
or
ss
inc
rcrb
pop
pop
addl
add
lcall
outsl
and
pop
fldt
ret
jo
mov
add
fucomip
das
push
dec
dec
fdivs
je
out
xor
jbe
fs
ss
shrl
cmp
dec
aaa
scas
scas
mov
push
mov
jl
or
ret
gs
mov
loopne
xchg
mov
lahf
js
inc
out
outsl
ljmp
mov
sarb
fdivrs
jns
xchg
fsubrl
xchg
sub
push
sub
sub
dec
xor
fisttpll
push
jo
adc
les
outsb
adc
xchg
or
shr
lods
aam
aad
outsl
xchg
pop
ja
iret
movsb
and
ss
xchg
stc
stos
xchg
inc
bound
fstl
roll
vpavgw
xchg
enter
ss
popf
stos
and
adc
pop
fstl
lods
jno
push
jbe
divb
sbb
inc
insb
xor
jbe
outsl
out
js
aad
sarl
and
pop
jmp
mov
jmp
ljmp
or
mov
ss
add
jle
aaa
sub
sub
mov
mov
sbb
push
jle
adc
fucomip
ss
inc
push
sahf
aad
mov
jecxz
mov
jl
mov
orb
leave
test
dec
pushf
cmpb
dec
xor
or
xor
test
pop
shlb
dec
add
sti
mov
mov
cmp
clc
stc
adc
push
mov
rcr
fdivrl
inc
sbb
or
and
xchg
out
scas
push
mov
lds
int
je
stos
xor
pop
dec
imul
ss
adc
daa
jmp
cmpsb
dec
push
push
in
jb
jl
pop
cmpsl
aad
dec
push
repnz
xchg
pop
imul
adc
daa
mov
sub
addr16
sti
mov
mov
or
xchg
mov
shl
dec
out
insb
jb
rorb
addr16
push
mov
jl
xchg
jb
sahf
sbb
mov
testl
call
push
xchg
insb
mov
loopne
and
ss
jecxz
call
add
loopne
ja
sub
int3
and
inc
adc
mov
pusha
fisubrl
mov
test
stc
fldl
and
push
lahf
enter
in
ss
or
jno
aad
xchg
pushf
push
push
outsl
jecxz
jmp
ret
out
les
push
test
mov
shl
shll
sbb
les
mov
enter
ret
js
pop
mov
pop
jb
xor
iret
xchg
jae
cli
xor
stos
add
pop
xor
ret
adc
sbb
and
jle
xor
mov
sub
push
fiaddl
adc
adc
sub
push
rcrl
fmull
adc
mov
stos
outsl
xchg
call
sbb
jae
cmpsl
in
xor
dec
add
xor
mov
sub
mov
cmp
in
mov
mov
jnp
repnz
mov
xlat
shrb
pop
xor
cmp
loope
repnz
push
push
pop
jns
add
push
xchg
jb
jecxz
rcr
dec
lahf
dec
sbb
or
insl
adc
outsb
in
and
cld
and
lcall
mov
xchg
dec
call
jmp
push
imul
pop
into
aaa
or
das
stos
push
fimull
jne
xchg
xchg
dec
ficoms
std
sarl
xor
push
pop
xchg
mov
call
mov
lret
test
mov
and
mov
test
dec
adc
shl
mov
mov
pushf
pop
cli
jno
xor
das
add
arpl
daa
inc
outsb
cwtl
int3
imul
ds
stos
lret
pushf
adc
mov
stos
xor
mov
mov
out
leave
mov
push
lcall
inc
pusha
mov
imul
out
xchg
xor
cmp
sub
lods
mov
add
push
jg
incb
jbe
sbb
imulb
test
fnstcw
inc
cmpb
out
dec
jbe
xchg
and
add
test
repz
pop
sbb
adc
ds
roll
xchg
jge
mov
mov
add
movsb
push
adc
and
scas
loop
jno
mov
cli
popa
inc
xchg
lods
mov
adc
sbb
scas
and
xor
out
je
xchg
jmp
adc
jmp
jne
pop
fsubs
mov
pop
mov
cmp
jg
icebp
mov
jp
inc
push
mov
out
push
jmp
stos
mov
leave
mov
in
mov
and
mov
ss
jp
xchg
data16
adc
out
xor
pop
jbe
xchg
dec
jno
jge
mov
sbb
fcompl
aam
or
pop
pushf
ret
call
cltd
arpl
lahf
jno
mov
xor
movsl
scas
push
cltd
or
rclb
js
or
stos
ljmp
bound
push
into
xor
xchg
lea
dec
xchg
mov
stc
test
iret
mov
pop
dec
scas
push
aaa
loop
jns
leave
sub
sbbb
out
js
jnp
xor
ljmp
out
mov
mov
xor
gs
das
fistpll
fsubrp
cmc
jp
out
add
mov
cmp
pop
pusha
cmpsb
scas
mov
sbb
ss
rolb
iret
in
push
sub
mov
cmpsl
ss
or
or
ret
add
push
jo
arpl
dec
sub
fisttpll
cld
mov
test
and
fmuls
jno
pop
outsb
enter
xor
add
daa
xchg
fidivl
mov
inc
movsl
neg
xor
cmp
pop
pop
jp
pop
adc
sbb
cltd
xor
leave
ja
aad
loop
or
jle
or
jle
or
fmulp
fcmovbe
fldl
ss
sub
lds
mov
pusha
out
rorb
adc
mov
popa
and
mov
sbb
and
cmp
mov
mov
xchg
add
or
lods
pop
rolb
mov
and
repnz
mov
jmp
xchg
iret
push
or
jno
or
loopne
sahf
xchg
int3
inc
insl
mov
data16
pop
mov
fists
loope
out
ljmp
cmc
mov
movsl
out
ret
jle
inc
sub
jmp
mov
mov
add
fs
push
sbb
pop
mov
data16
jmp
push
mov
insb
dec
test
insb
arpl
adc
ja
shrb
lock
mov
adc
fwait
pop
mov
ficomps
aam
imul
lea
xor
rcl
fisttps
mov
pop
inc
mov
push
sbb
data16
push
xor
pop
ljmp
or
rorb
push
jge
ss
adc
cmp
dec
pusha
push
insb
mov
jbe
mov
sub
jmp
jb
mov
pop
sbb
or
jmp
seta
sbb
sub
ja
sbb
dec
lahf
in
cmp
sbb
cmp
mov
sbb
xchg
test
mov
in
cli
sub
cmp
in
data16
xchg
shr
xchg
dec
addl
mov
jns
and
out
mov
jle
mov
shrb
xchg
mov
xor
data16
das
das
push
mov
mov
add
add
jae
sti
cmp
daa
push
dec
fimuls
xor
int
push
jo
imul
js
fildl
sbb
or
push
outsb
test
in
out
push
jl
adc
rol
mul
or
std
cmpsb
fnsave
shrl
and
xchg
mov
ds
lret
xor
pop
imul
pusha
lcall
xor
adc
cmpsb
pop
adc
cmpsb
fs
xor
out
xchg
stc
iret
stos
lods
cli
xchg
sbb
push
ret
loop
cltd
pop
xor
sub
dec
aas
call
add
cmc
ret
add
repz
xchg
ljmp
lret
inc
pop
mov
lods
fidivrs
mov
mov
mov
pushf
mov
and
leave
adc
sbb
xchg
es
prefetchwt1
or
sbb
test
ficompl
lea
cmp
xchg
and
vmovlps
mov
jl
or
idiv
in
pop
dec
mov
push
add
inc
sub
cmp
push
ret
jge
imul
enter
mov
rorb
mov
pop
push
xor
and
arpl
mov
fincstp
iret
push
dec
mov
std
inc
push
in
adc
sub
in
mov
mov
pop
stos
fildl
jb
and
shll
dec
pop
mov
inc
push
sub
stc
std
gs
pusha
mov
sbb
shlb
xor
scas
je
pop
nop
cmp
jmp
adc
xorl
icebp
push
sub
sbb
xchg
out
mov
sub
mov
mov
pop
das
xchg
bnd
in
movsb
mov
pop
xor
inc
mov
mov
out
mov
addr16
sub
push
mov
xchg
ljmp
jae
in
sbb
jbe
adc
inc
shll
in
scas
push
mov
lret
mov
jb
sub
mov
lods
setno
fstl
mov
push
sub
test
insl
mov
and
mov
pop
loope
pop
xchg
lcall
inc
cmp
push
jl
push
lods
push
mov
sub
cltd
sbb
mov
jp
test
adc
sarb
hlt
jns
out
sbb
je
pop
jb
dec
push
and
xchg
sbb
enter
lahf
in
hlt
push
jbe
jb
jnp
push
mov
js
mov
js
pop
inc
lock
adc
mov
call
jle
sahf
les
daa
add
int3
sbbb
out
divb
xchg
jne
and
xor
and
sti
xchg
in
aad
adc
adc
push
dec
xor
mov
add
pop
or
rclb
adc
adc
sub
out
jge
shrl
dec
clc
fimuls
mov
cmp
mov
rol
cs
xor
scas
rolb
or
push
xor
ret
dec
iret
mov
xor
enter
ret
fsubs
lret
loop
xor
dec
ds
inc
xor
arpl
pop
js
dec
inc
add
pop
int3
xor
mov
xchg
repz
daa
push
inc
jns
push
stos
stos
xor
icebp
shll
in
sbb
xorl
sarb
cmp
adc
jo
hlt
pop
or
cmp
lret
dec
push
fidivs
mov
aas
dec
lods
fistpl
push
movsl
sub
hlt
sarb
loop
call
pop
xor
or
stos
popf
xchg
sarb
sbb
nop
stos
scas
and
jmp
adc
jp
stos
aam
adc
sti
and
xor
xchg
or
inc
data16
fsubrs
xor
xor
pop
xor
imul
or
or
dec
xor
jno
inc
adc
jno
xchg
stos
std
dec
jle
out
fnstsw
pop
xchg
jle
mov
mov
xor
jb
ja
aam
xchg
cmp
mov
xchg
cmp
aaa
call
pop
inc
cmp
sti
jge
dec
add
movsb
ds
jb
or
mov
add
sbb
sub
push
push
jle
sbb
fwait
mov
jmp
xor
mov
mov
fcoml
int3
and
sub
pop
mov
loopne
dec
push
les
pop
sbb
lods
cld
in
shll
call
jns
xchg
push
and
sub
xor
popf
sub
and
mov
mov
inc
jno
imul
dec
jl
xchg
orb
push
stos
mov
jp
scas
loopne
mov
xchg
xchg
sbb
cmovg
sahf
aas
iret
xchg
out
loop
inc
mov
mov
or
sarl
gs
or
repnz
scas
push
xchg
cld
cwtl
push
ds
or
imul
jbe
xor
lcall
jp
outsb
push
shlb
das
inc
jne
and
adc
insb
jge
jb
push
xchg
scas
dec
jle
ss
pop
sub
addl
push
jg
push
pop
push
rcrl
xchg
out
push
ss
adc
js
sbb
push
ret
movl
outsl
ja
sahf
mov
loop
out
lcall
mov
shl
sub
sahf
arpl
push
andl
stos
xchg
sub
test
xor
sbb
test
or
mov
fnsave
or
jmp
or
add
fnstenv
and
and
push
or
add
rcrl
mov
pop
lock
mov
jge
inc
add
sbb
xchg
ss
or
jno
cmp
je
les
mov
sahf
lret
jbe
aaa
pop
fstl
push
shl
out
fisttps
inc
aam
repz
cmpb
in
fidivl
pop
mov
mov
cs
sahf
subb
push
and
inc
inc
jo
fstps
fbstp
xchg
cli
jae
and
cld
and
mov
add
mov
ret
jmp
ds
xlat
ss
mov
in
std
mov
mov
mov
pop
push
orb
cmp
or
cld
scas
add
jne
cwtl
dec
icebp
repz
mov
adc
loopne
mov
out
dec
and
clc
jle
push
mov
jl
scas
sub
dec
cmp
jns
sub
push
add
xor
jno
in
jmp
sahf
sub
xor
ficoml
mov
outsl
gs
jae
sub
sub
inc
jmp
inc
jb
inc
icebp
mov
fbstp
mov
jnp
mov
popa
xor
sbb
sahf
scas
push
inc
jg
sahf
xchg
daa
in
mov
fsubl
int
push
sar
loope
mov
loop
push
sbb
insb
inc
lds
push
aam
xchg
scas
pusha
outsl
mov
gs
push
push
pop
push
out
jp
sub
lds
in
addr16
pop
jo
sbb
mov
push
xor
pusha
enter
in
sub
iret
jl
fldcw
and
mov
push
in
mov
dec
fcompl
test
mov
fisubl
loope
in
and
push
push
lcall
xchg
orl
jp
xor
test
fistpl
xor
in
xchg
push
jecxz
mov
sbb
ficompl
xchg
sti
jle
repz
push
dec
inc
or
pushf
rolb
and
pusha
sub
push
nop
in
mov
adc
aam
cmpxchg
mov
addr16
xchg
outsl
and
and
out
aas
insl
test
push
daa
dec
imul
cs
call
ds
negb
push
sbb
push
pop
imul
aam
out
sbb
outsb
sbb
push
mov
fistpll
lret
fdivl
loop
sbb
pop
loope
mov
jle
adc
addr16
sahf
ja
or
mov
imul
pop
lahf
sub
cmp
jns
jbe
push
sti
and
insl
dec
mov
sbb
pop
pop
fistpl
clc
sbb
add
push
push
insb
loopne
push
mov
and
adc
lret
pop
mov
push
daa
mov
jno
std
clc
and
addr16
sahf
daa
scas
cwtl
scas
add
and
push
push
pop
jp
sub
and
sbb
loope
out
aas
push
inc
jmp
sbb
insb
pop
enter
fdiv
lcall
xchg
fnsave
push
scas
cld
enter
gs
push
in
mov
xor
ss
adc
sbb
out
and
push
xlat
addr16
imull
out
push
push
cmc
cmp
push
push
jg
pop
or
sub
xchg
xchg
xor
jge
insl
loopne
push
dec
push
and
fwait
xchg
enter
jns
arpl
jg
aad
jnp
cld
sahf
fiadds
out
sub
cwtl
mov
mov
popa
lret
sbb
pop
sahf
repz
aas
adc
push
cmpsl
sbb
mov
adc
push
push
push
in
dec
sub
jle
imul
lcall
popf
pusha
inc
sbb
pop
fimull
push
push
inc
movl
push
push
popa
sub
add
lret
faddl
das
rcr
js
mov
out
push
addr16
sbb
daa
jle
scas
xorb
sbb
push
popa
push
aad
mov
lods
fildl
lcall
add
pop
push
lods
xor
arpl
pop
insl
push
repz
jg
push
sahf
adc
cmpsb
mov
ret
pop
repnz
popa
and
xor
rorl
leave
cmp
inc
sbb
mov
cwtl
mov
push
fstpt
shr
daa
sub
mov
call
pushf
sbb
sbb
fs
aaa
sub
sarl
push
loop
jnp
mov
push
xchg
cld
mov
ljmp
push
add
or
clc
pop
lea
push
jmp
push
fidivs
stos
cmp
out
push
fnstcw
sbb
lret
xor
sbb
mov
push
cmp
push
xor
pop
push
push
sub
outsb
add
or
and
mov
xchg
mov
test
mov
push
sub
mov
insl
dec
mov
jle
inc
mov
sbb
push
mov
sbb
push
in
fistpl
push
dec
xchg
rep
popa
xchg
jl
sbb
or
add
out
data16
lods
push
adc
enter
sti
inc
push
pusha
push
xor
test
out
imul
icebp
push
sbb
sbbl
hlt
insl
dec
push
roll
push
mov
stos
mov
cmpsl
mov
fisubl
imul
sbb
pop
es
add
sub
out
jbe
clc
cs
into
dec
push
sbb
hlt
adcl
or
pop
mov
sbb
into
ljmp
sahf
test
jp
aam
lahf
add
rcrl
mov
movsb
icebp
iret
in
push
out
std
and
jns
push
ret
lret
repz
popf
push
push
mov
push
push
imul
loopne
xor
fcoms
sub
pop
out
scas
mov
sbb
cmp
or
popf
fisubrs
mov
lock
xlat
dec
addr16
sbb
push
jns
and
aaa
inc
pop
mov
imul
js
cmp
push
xor
pop
sub
add
inc
push
es
lods
sbb
loopne
idivl
xchg
sbb
cmpsb
jle
jnp
inc
and
sahf
loopne
push
addr16
push
mov
scas
decl
movsl
mov
test
dec
push
in
add
xchg
adc
jp
push
dec
pop
xlat
sbb
in
outsl
push
mov
mov
iret
fs
repz
mov
mov
pusha
push
das
ret
mov
mov
xor
mov
ljmp
mov
je
fnstsw
mov
pop
test
test
push
imul
in
movb
and
aad
sahf
insb
fxch
in
out
repz
imul
sti
push
add
jp
inc
mov
ficompl
sub
pop
fiadds
xchg
mov
mov
jle
stc
jo
jl
int
push
pop
mov
in
aaa
xor
sbb
push
ljmp
mov
loope
xchg
cmp
arpl
mov
pop
push
pop
nop
cmp
xor
jmp
jns
sbb
loope
sub
push
ds
insb
popa
push
insl
or
jne
int3
sbb
mov
cmp
cmp
in
test
push
cmp
sbb
es
mov
jbe
fwait
out
aad
sbb
push
xchg
ljmp
add
jp
mov
inc
leave
cmp
mov
xchg
mov
xor
ret
iret
aad
popa
insb
sub
insb
negb
in
add
sub
sbb
je
push
gs
in
outsl
cltd
and
xchg
mov
dec
push
call
pop
lea
out
push
orb
std
mov
xor
pop
fimuls
mov
sbb
pop
sahf
sti
aad
out
xchg
ffree
inc
aas
add
fwait
divb
push
inc
cmp
dec
imull
outsb
lcall
push
dec
stos
sub
mov
pushf
cmpsl
add
and
and
xor
mov
pop
insb
push
dec
pop
inc
cmp
sti
test
push
add
xchg
lods
ror
cmpsb
cmovs
sbb
insl
arpl
cmpsb
fsubrp
pop
mov
cmp
sahf
fs
push
xchg
push
push
je
adc
xor
inc
pop
xor
pop
push
or
hlt
push
adcl
ds
inc
sbb
jp
js
push
add
xor
cmp
push
jmp
sahf
call
jb
adc
mov
popa
mov
pusha
gs
test
dec
mov
adc
dec
and
push
jecxz
popf
sbb
pusha
jg
test
or
je
jne
push
sbb
in
jbe
and
jle
cmp
enter
rcl
jg
push
mov
pop
idivl
pop
mov
xlat
pop
push
test
sbb
pop
test
adc
jae
xchg
sub
push
sbb
fsubr
mov
jle
jnp
jge
sub
pop
ds
cltd
pop
push
or
es
shrl
xor
movsl
dec
xchg
jge
inc
sbb
pushf
pop
cmp
sahf
pop
cmpsl
push
pop
xchg
out
lods
push
cmp
ja
push
add
jo
cmpsl
fsubr
outsl
xchg
cmp
out
pop
insb
andb
push
and
mov
or
cmp
pop
push
cmp
xchg
sbbl
sub
dec
inc
sbb
sbb
mov
loopne
xlat
xor
in
xor
jo
call
cmp
adc
push
fs
xor
movsl
and
int
test
bound
sbb
cli
mov
mov
setle
xchg
repz
gs
je
push
test
out
xor
jbe
es
sbb
and
imul
negb
shll
and
in
adc
push
insb
xchg
cwtl
stos
and
sahf
xchg
cmp
or
xchg
cmp
mov
stc
iret
xor
pop
fimull
out
push
xor
aaa
push
mov
push
mov
mul
flds
xor
xchg
mov
or
jecxz
push
imul
cmpsb
mov
pop
push
push
in
jne
jno
or
out
push
ja
sbb
fdivs
je
outsb
cmpsl
shl
addb
nop
pop
dec
loopne
push
icebp
insl
test
jns
mov
out
ja
lods
mov
jge
cmp
dec
pop
push
xor
out
mov
pop
sub
cmp
cmp
push
call
and
push
jnp
add
add
ljmp
fs
pop
xor
pop
aad
sbb
daa
mov
ds
dec
or
mov
shll
mov
decl
cli
pusha
mov
adc
pop
xlat
je
sub
in
push
and
jns
dec
fmul
sbb
pop
jae
dec
jp
sahf
lea
mov
mov
mov
pop
outsb
hlt
stc
mov
and
and
daa
push
jp
or
xchg
lahf
sbb
xor
idivb
in
xchg
jg
lahf
cs
jnp
and
dec
push
mov
fcomps
push
out
frstor
ds
push
dec
xchg
adc
int3
pop
or
xlat
or
mov
push
push
loope
push
and
das
jle
pop
pop
dec
imul
rclb
sti
ja
jecxz
lcall
pop
push
adc
aaa
jle
pop
lahf
jge
push
loopne
xorl
ds
add
in
pushf
xor
aam
notl
in
jnp
dec
pop
sahf
xchg
mov
push
push
jb
or
adc
shl
sbb
imul
mov
push
out
pusha
stos
dec
xchg
add
pop
ljmp
mov
sub
insl
cmp
push
cmc
test
sahf
xchg
js
movsl
mov
lret
add
insb
add
jle
xchg
or
and
xchg
inc
push
mov
push
pop
sub
pop
fidivrs
cwtl
dec
cmp
fidivrs
or
push
movsl
jbe
xor
cmp
insl
xchg
pop
lea
clc
paddd
sbb
mov
push
pushf
rcrl
sub
sub
push
xor
push
ja
pop
and
in
pop
mov
nop
push
jp
cmpsl
adc
push
jp
mov
shl
jl
adc
jle
in
inc
fwait
mov
out
mov
push
inc
pop
sbb
inc
lahf
jae
addb
push
mov
lock
cmc
add
push
inc
rol
dec
push
btr
rcl
push
shr
rcl
push
ror
pushf
btc
cmp
mov
rcr
movsbw
rcr
movsbl
mov
xadd
clc
sub
mov
stc
push
ror
stc
xor
lea
setne
lods
bt
adc
xor
push
cmc
or
sub
call
call
test
test
cmp
jmp
aas
jge
iret
shlb
mov
adc
cmpsl
divl
sti
adcb
ljmp
sub
cmp
addb
and
into
xor
mov
ret
lds
adc
xchg
sarl
lds
adc
sbb
or
or
mov
sub
into
xor
cltd
ss
dec
leave
stos
or
mov
fsubrp
rcl
sahf
inc
add
jmp
fsub
lret
push
mov
jbe
shlb
aam
ss
clc
jp
sbb
leave
fs
jmp
cmc
test
fdivrs
test
push
and
mov
adc
loop
pop
out
mov
mov
dec
pop
and
fcmovb
inc
fcomps
sbb
mov
push
jnp
mov
popf
arpl
mov
fwait
add
and
sub
inc
pop
mov
sub
push
outsl
cs
les
sarl
jns
mov
jg
es
dec
cmc
cmc
mov
not
cmp
cmc
xor
sub
jb
cbtw
jmp
jmp
pushl
popl
movb
lea
jmp
inc
call
lea
jne
cmc
xor
jmp
call
jmp
sub
call
jmp
bt
call
mov
mov
lea
jmp
cmc
stc
and
pushl
mov
pushf
push
jmp
rdtsc
mov
call
add
pusha
pushf
push
push
lea
jmp
clc
ror
push
pushf
push
neg
mov
ror
push
call
movl
jmp
pushf
push
movb
mov
push
lea
jmp
and
mov
bsf
mov
clc
or
or
mov
mov
test
test
add
test
stc
shrd
jmp
call
jmp
cmc
btr
push
shld
mov
bt
add
pushf
pusha
pushl
movb
lea
jmp
xchg
bswap
pushl
popl
push
dec
call
call
sub
btr
shrd
shrd
mov
clc
call
jmp
mov
movb
jmp
stc
mov
sub
pushf
bswap
pushf
cmp
xor
pushf
call
add
call
mov
call
aam
adc
rcr
mov
clc
add
jmp
mov
call
cmp
cwtl
call
call
push
mov
movl
lea
jmp
jmp
xor
bt
movb
xor
call
pusha
pushl
popl
push
push
pushf
lea
jmp
call
add
jmp
and
movw
cmp
jmp
mov
pusha
pushf
push
movw
lea
jmp
mov
pushf
jmp
inc
pushf
rcr
movzbl
stc
bt
jmp
rol
cmc
notl
jmp
shl
mov
daa
mov
push
cmp
push
jmp
aam
ror
mov
bt
bsf
mov
shl
ror
or
mov
call
movb
mov
jmp
mov
call
setp
movzbl
shl
add
movsbw
bswap
pushf
mov
dec
pusha
ror
ror
call
cmc
mov
sub
call
mov
pushf
push
push
lea
jmp
pusha
mov
pushl
pushf
movb
lea
jne
pushf
not
btr
and
mov
stc
mov
jmp
stc
sub
call
pusha
jmp
pushf
push
repz
popl
mov
mov
push
movw
call
call
pusha
sub
lea
jp
shr
jmp
pusha
push
lea
je
bt
xor
push
stc
xchg
push
pusha
pushf
test
mov
jmp
add
pushf
push
push
mov
pusha
push
jmp
bt
add
pushl
sub
bt
cwtl
stc
clc
sub
jmp
mov
pushl
pushf
popl
movw
mov
pushl
popl
pusha
mov
lea
jmp
shl
mov
rcl
add
pushf
mov
pusha
pusha
mov
pushf
lea
jmp
call
bt
push
xor
clc
pushf
call
mov
pusha
pushf
pushf
call
mov
push
mov
lea
jmp
pushf
movsbw
mov
sub
xor
ror
mov
pusha
cmp
movl
push
sub
pushl
clc
shl
mov
mov
push
pushf
movb
call
mov
pusha
push
mov
lea
jmp
cmc
push
cmp
push
pushf
call
call
call
cbtw
jmp
ror
shl
adc
mov
shr
pusha
mov
test
movw
sub
mov
pushf
pushf
cmc
shl
mov
mov
jmp
call
mov
bt
xchg
cmc
clc
clc
pusha
sub
cmp
stc
not
test
pushf
sub
pushf
rol
jmp
mov
pusha
push
lea
jmp
rep
or
rcl
call
pushf
pushf
mov
pushf
lea
jl
mov
pusha
mov
lea
jne
xor
shrd
shl
mov
stc
pushf
and
mov
push
cmp
jmp
mov
pushf
call
pusha
jmp
pushf
pushf
popl
pusha
call
mov
pushl
pushl
pusha
repz
popl
push
mov
call
call
pushf
call
mov
push
movb
push
lea
jmp
pushl
jmp
mov
pushl
popl
pushf
pushf
pushf
mov
lea
jmp
or
cmc
clc
bts
mov
pusha
mov
stc
add
pusha
push
mov
pushl
pushl
push
lea
jmp
lahf
clc
mov
movzbw
shl
mov
bt
not
bt
pusha
pusha
not
jmp
call
movzbw
not
movsbw
jmp
movl
mov
mov
movl
mov
movb
lea
jmp
call
pusha
mov
lea
jbe
pusha
pushf
repz
popl
pusha
call
call
mov
jmp
push
mov
jmp
push
mov
repz
popl
push
push
pushf
jmp
xor
movzbw
das
mov
btr
not
shl
shrd
mov
clc
test
push
add
push
push
mov
push
mov
pusha
pushl
lea
jmp
mov
add
pusha
mov
mov
mov
push
mov
mov
lea
jmp
aad
mov
cmp
mov
jmp
jmp
jo
pushf
push
mov
mov
pushf
push
jmp
jmp
jmp
mov
call
pushf
movl
movb
push
pushf
mov
pushf
movb
pushl
ret
lea
push
not
bswap
pusha
mov
pushl
std
pushf
jmp
pushl
popl
push
movl
lea
jmp
pusha
mov
pusha
jmp
mov
jmp
stc
xchg
pusha
mov
test
movw
sub
call
mov
dec
add
fildl
pusha
jp
add
sbb
pusha
mov
add
push
jne
pusha
or
pusha
cmp
add
dec
add
sub
mov
lds
pusha
stos
pop
add
push
add
loop
add
movl
pusha
jp
add
pop
add
fildl
pusha
adc
add
and
add
pop
add
sub
cmp
pusha
loop
add
jg
pusha
repnz
add
cmp
mov
mov
add
mov
lds
pusha
xor
pusha
repnz
add
mov
add
ljmp
pusha
bound
jp
add
aam
pusha
ljmp
pusha
lret
pusha
loop
add
fcmovb
add
jg
pusha
mov
lds
pusha
lret
pusha
push
add
cmp
pusha
xchg
fildl
pusha
mov
xor
mov
xlat
add
dec
add
ljmp
loop
add
ljmp
push
add
jnp
pusha
cmp
add
push
add
dec
add
ljmp
loop
add
lods
add
imul
xchg
fildl
pusha
xor
add
or
add
mov
ljmp
repnz
pusha
mov
imul
bound
adc
add
push
add
add
dec
add
mov
add
jl
pusha
stos
pop
add
add
xchg
out
add
xor
pop
imul
cmp
pusha
lcall
pusha
fidivrl
add
add
push
jne
pusha
lcall
pusha
ret
pusha
push
add
add
jnp
pusha
repnz
add
ljmp
mov
inc
add
add
add
repz
inc
add
xchg
fildl
pusha
cmp
pusha
mov
inc
add
or
pusha
bound
mov
inc
add
mov
mov
add
inc
add
mov
push
add
mov
inc
add
mov
mov
add
inc
add
repnz
pusha
sar
add
repz
inc
add
repnz
add
repz
inc
add
sub
pusha
mov
repz
inc
add
sbb
add
jnp
pusha
mov
inc
add
bound
push
add
mov
inc
add
repnz
pusha
xor
pusha
mov
inc
add
cmp
pusha
stos
pop
add
repz
inc
add
push
jne
pusha
lcall
pusha
sbb
cli
dec
add
add
repz
inc
add
cli
dec
add
add
dec
add
add
cmp
add
push
add
xchg
out
add
cmp
or
add
add
add
imul
add
add
ljmp
pusha
add
add
dec
add
dec
add
lods
add
imul
mov
movl
pusha
loop
add
xor
pusha
add
add
mov
add
add
add
add
add
add
add
sub
pusha
adc
add
mov
sbb
pusha
mov
dec
add
jg
pusha
mov
jbe
pusha
add
add
and
add
or
pusha
and
pusha
xor
add
lcall
pusha
cmp
pusha
or
pusha
push
add
lcall
pusha
mov
push
add
ljmp
lret
pusha
sbb
add
mov
add
jne
pusha
adc
add
or
add
repnz
add
mov
add
lds
pusha
mov
imul
add
add
or
call
bswap
jmp
jmp
stc
cbtw
test
jmp
pushl
popl
push
lea
jmp
cmc
clc
cmc
pushf
pushl
popl
stc
push
push
jmp
mov
call
not
inc
mov
call
mov
push
lea
jmp
pushf
movw
mov
lea
jge
pushf
pusha
pushf
popl
mov
pusha
mov
pushl
popl
push
lea
jmp
pushf
popl
jmp
movb
xchg
pushf
movl
call
stc
call
clc
add
jmp
add
movb
pushf
popl
mov
jmp
jmp
lahf
cwtl
mov
jne
push
pusha
mov
call
adc
movzbw
ja
btc
notl
cbtw
btr
or
aas
mov
cmc
clc
bt
sub
pushf
pushf
movb
cmc
and
pushf
pushf
popl
jmp
sub
push
jmp
pushl
mov
mov
lea
jmp
mov
bt
sub
pusha
pushf
push
pushf
lea
jmp
push
mov
pushf
mov
pushf
pushl
ret
bt
stc
sub
call
pushl
pushl
popl
movw
movw
lea
jmp
pushf
pushl
popl
pushf
pushf
push
pushl
lea
jmp
mov
pushf
lea
jmp
pushf
popl
jmp
jmp
push
test
stc
cmp
shr
call
pushl
jmp
push
mov
pusha
mov
mov
jmp
jmp
pushf
pushf
mov
mov
pushf
lea
jmp
call
pushf
mov
jmp
cmp
cmc
sub
push
pushl
pushf
mov
push
pushl
movw
mov
lea
jmp
cmp
clc
lea
test
clc
cmc
cmp
sub
pushf
sub
push
mov
pushf
lea
jmp
pushf
jmp
adc
call
mov
call
movb
pushf
pushf
popl
call
jmp
bswap
mov
push
pushf
mov
pushf
push
lea
jno
pushf
mov
pusha
pushl
lea
jmp
pushf
clc
std
pushl
popf
pushf
lea
jmp
bswap
stc
call
call
movsbw
movsbl
mov
pusha
mov
pushf
jmp
shr
btc
rcr
mov
pusha
add
rol
and
add
shl
cmp
pushf
ror
add
not
bswap
pusha
push
ror
setge
bt
pushf
neg
mov
stc
ror
pushl
adc
xor
or
add
or
mov
call
mov
push
movb
lea
jbe
push
mov
pusha
jmp
push
pushf
pusha
pushl
mov
pushl
pushf
movb
lea
jmp
push
mov
call
repz
popl
push
jmp
mov
mov
movb
mov
pushl
ret
jmp
jmp
mov
pusha
pushl
push
push
pushf
popl
pushl
pushf
jmp
push
movw
push
mov
jmp
push
mov
mov
call
movw
jmp
pushf
shld
mov
shld
xor
not
mov
mov
push
add
jmp
call
movb
pushl
pushf
popl
call
jmp
lea
js
sub
pushf
test
add
bt
call
stc
ror
mov
cmp
pusha
clc
clc
sub
mov
shl
call
stc
push
add
test
sub
bt
pushf
bt
mov
bt
movw
clc
pusha
sub
movb
jmp
mov
mov
push
lea
jmp
movw
lea
ja
sar
btc
sbb
rdtsc
mov
bt
mov
shld
seta
lea
stc
or
shl
add
sub
lea
lea
add
stc
and
mov
sub
not
movzbw
push
mov
mov
push
pushf
popl
jmp
mov
xchg
pusha
movl
push
mov
pusha
mov
movw
push
mov
push
pushl
ret
mov
mov
pushf
call
std
cld
call
mov
mov
pusha
pushl
lea
jmp
jmp
xor
not
dec
jmp
jmp
clc
add
call
xor
call
lea
jl
push
lea
je
jmp
pushf
popl
pushl
mov
jmp
ror
shl
btc
bt
add
dec
add
call
push
jmp
mov
movsbw
bsr
mov
bswap
mov
xor
dec
not
bswap
bt
xor
jmp
mov
push
pushf
pushf
lea
jmp
pushl
mov
push
push
pushf
pushf
popl
pusha
pushl
popl
pushf
movb
pushf
lea
jmp
repz
popl
lea
jl
push
mov
push
pusha
push
call
btr
inc
sar
mov
test
pusha
bt
sub
call
movb
pushf
repz
popl
call
pushf
stc
mov
bt
or
push
jmp
pushl
popl
mov
lea
jmp
repz
popl
pusha
call
mov
lea
jne
cmp
xorb
movsbw
jmp
add
btc
mov
clc
cmc
pushf
add
pushl
pushf
pushf
movl
mov
pushl
lea
jmp
push
mov
mov
repz
popl
push
push
mov
call
mov
push
mov
movb
divl
push
pushf
mov
call
lea
cld
cld
push
call
pushf
pushf
popl
jmp
dec
push
dec
pop
not
call
pushl
popl
pushf
mov
lea
jmp
push
mov
push
movb
mov
pushf
mov
repz
popl
pushf
movb
pusha
mov
movw
pushl
mov
push
mov
pushf
lea
jmp
xchg
movzbw
std
not
movsbw
mov
std
jmp
mov
lea
ja
popl
push
pushf
mov
mov
lea
jmp
repz
popl
call
pushl
jmp
mov
push
mov
lea
jmp
push
mov
clc
shld
adc
mov
stc
not
stc
clc
jmp
aas
lahf
movsbw
mov
pushf
cmc
cmp
call
push
mov
pusha
call
pushf
mov
movb
pusha
pushf
movb
lea
jmp
add
call
pushf
call
stc
cmp
add
jmp
call
jmp
push
mov
movb
pushf
lea
jmp
and
mov
push
test
add
pusha
mov
jmp
mov
pushl
pushl
mov
pushf
push
mov
mov
lea
jmp
mov
pusha
pushf
mov
pushf
lea
jmp
pushl
popl
push
push
pushl
lea
jmp
mov
pushf
call
lea
jne
pusha
clc
pushl
cmc
xor
pusha
jmp
jmp
sub
mov
clc
jmp
bt
pusha
btr
bsf
add
clc
add
pushf
xor
bt
not
push
and
pop
and
rcr
mov
push
test
pushf
test
sub
pushl
movw
call
pusha
pushf
mov
pusha
pushf
call
lea
mov
pushf
pushf
lea
call
call
pushf
popl
mov
pushl
popl
pushl
pushl
movl
lea
jmp
pushl
popl
pushl
lea
jmp
mov
pushf
pushf
popl
push
pushf
pushl
popl
pushf
pushf
movb
lea
jmp
not
test
test
sub
pushf
test
cmc
and
call
mov
jmp
push
pushf
pushl
mov
bswap
pusha
not
mov
pushl
lea
cpuid
jmp
pusha
mov
call
add
add
call
mov
pushl
mov
movb
lea
jmp
pushl
popl
pusha
movb
movb
lea
jmp
movb
mov
jmp
call
push
pushl
popl
movb
movl
lea
jmp
pusha
mov
mov
mov
call
pushl
jmp
stc
shr
pushl
mov
call
dec
shl
jmp
and
mov
pusha
test
stc
sub
movw
call
mov
mov
pushf
call
bswap
jmp
call
xadd
bsr
xchg
mov
push
sub
xor
mov
test
add
jne
push
bt
sub
cmc
jmp
pushl
pushf
pushf
mov
pushl
lea
jmp
mov
jmp
jmp
xadd
bt
pusha
mov
jmp
pusha
pushf
mov
pusha
mov
movb
pushl
lea
jmp
movb
and
mov
pushf
popl
pushf
pushl
popl
push
lea
jmp
xadd
dec
mov
mov
shl
xor
mov
call
dec
btr
test
movsbw
not
pushl
bsr
neg
push
movsbw
inc
add
stc
pop
stc
rol
movzbl
pusha
setl
bt
rol
mov
jmp
pushl
popl
movb
pusha
lea
jmp
pushf
popl
call
jmp
call
pushf
popl
pushf
pushf
pushl
popl
pushl
push
lea
jmp
pop
pusha
push
lea
jmp
jmp
call
je
pushf
pusha
xchg
jmp
push
movb
pusha
mov
movl
pushf
popl
pushf
pushf
pushl
popl
mov
lea
jmp
clc
mov
mov
call
not
xadd
add
bsr
rdtsc
pusha
cmp
sub
call
lea
jne
push
mov
push
pushf
repz
popl
call
push
pusha
call
lea
bt
pushf
ror
jmp
jmp
mov
pushf
mov
pushf
push
lea
jmp
not
mov
lea
mov
push
pusha
movzbw
xchg
movsbl
dec
setb
xchg
lea
jmp
mov
mov
mov
mov
lea
jmp
dec
bsr
mov
stc
clc
xchg
cmc
cmp
pusha
pushl
sub
cmp
pusha
not
test
sub
clc
push
clc
pushf
rol
lea
js
clc
push
lea
test
jmp
jmp
clc
sub
bt
jmp
rcr
das
shl
lea
call
setle
inc
movzbl
jmp
call
pushf
sub
bt
pushf
bt
cmpl
push
call
lea
push
pushf
movb
mov
movb
pushf
push
pushf
lea
jmp
pushf
sub
call
mov
call
setg
dec
mov
bt
add
call
jmp
jmp
mov
pushf
jmp
pushf
pushf
mov
call
jmp
pusha
movb
mov
movb
call
mov
pushl
mov
pushf
movw
mov
movw
lea
jmp
pushf
pusha
mov
pusha
jmp
movzbw
mov
not
pushf
rcl
cmc
mov
call
mov
mov
pushf
lea
jmp
stc
stc
cmp
shld
push
push
mov
call
cmp
bt
shr
jnp
mov
call
stc
stc
push
xor
pushf
pushf
dec
test
not
pushf
pushf
xor
pusha
sub
call
cmp
sub
lea
je
push
movb
pushl
mov
pusha
pushl
pushf
pushf
lea
jmp
btc
bts
sete
mov
sub
rcr
sub
mov
push
stc
add
mov
mov
push
movb
pushf
push
lea
jmp
call
pushf
repz
popl
pushf
movb
pushf
pushf
mov
movb
mov
push
push
lea
jmp
mov
sbb
mov
clc
pushf
test
add
movb
mov
movl
lea
jmp
mov
pushf
jmp
rcr
rol
movsbw
sub
mov
clc
sub
clc
jge
add
jmp
movw
mov
movb
pusha
mov
lea
jmp
pushf
movw
mov
jmp
pusha
dec
pusha
pushl
ror
cmp
add
pushf
dec
clc
add
cmp
test
call
clc
add
call
mov
pushf
mov
lea
jmp
aad
mov
test
pusha
pushl
sub
jmp
xadd
mov
and
rol
neg
mov
stc
stc
pushl
popf
movb
lea
jmp
ror
mov
pusha
shl
and
mov
stc
stc
sub
sub
jbe
test
bt
test
shr
call
or
cmp
jmp
pushf
pushf
popl
push
call
jmp
lea
jne
add
lea
shl
xorb
mov
push
mov
pushf
push
lea
jmp
pushf
mov
jmp
pop
shl
pop
pusha
and
neg
mov
movzbw
rdtsc
ror
cltd
mov
xadd
daa
neg
mov
cmp
xchg
adc
mov
bsf
shr
cmp
mov
xadd
mov
pushl
popf
push
bswap
movzbl
cwtl
mov
lahf
movzbw
mov
mov
mov
pushl
ret
add
pushf
push
push
push
mov
push
pushf
call
aas
mov
bts
test
std
movzbw
pop
add
jmp
jmp
pusha
jmp
push
mov
mov
push
mov
lea
jmp
mov
mov
push
pushl
lea
jmp
mov
movb
mov
pushf
lea
jmp
movzbw
call
xchg
mov
mov
pusha
repz
popl
push
jmp
mov
mov
jmp
pushf
popl
call
pushf
mov
push
mov
pushf
lea
jmp
pusha
mov
mov
push
pushl
call
mov
push
mov
bswap
push
lea
inc
rcr
xor
bsr
neg
movsbw
push
lea
movsbl
sar
or
sub
and
setae
mov
inc
and
bswap
btc
mov
neg
sub
rol
bt
add
xadd
mov
rcr
stc
add
not
call
movzbl
jmp
rcr
movzbl
add
cmp
btc
add
xor
shl
bsr
not
neg
add
cmc
and
cmp
cmp
neg
adc
mov
bt
test
clc
stc
add
pusha
jmp
mov
push
lea
movb
call
pushf
call
inc
mov
jmp
pusha
pushl
repz
popl
pushl
call
mov
pushf
lea
jmp
stc
sub
clc
shr
call
cwtl
clc
sub
pushf
bt
mov
pusha
stc
push
sub
pushl
push
lea
jmp
