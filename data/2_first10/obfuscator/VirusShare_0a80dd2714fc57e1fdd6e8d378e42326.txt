mov
push
mov
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
jb
add
mov
push
mov
sub
push
pushl
push
call
add
pop
sub
mov
add
ret
add
sub
push
push
push
push
call
add
pop
sub
mov
add
ret
add
in
sub
push
push
push
pushl
call
add
pop
mov
mov
push
pushl
pop
call
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lea
push
pop
rep
call
add
push
lea
mov
shl
add
add
pushl
pop
pop
cmp
je
push
sub
jl
pop
cmp
ja
jmp
pushl
ret
hlt
add
mov
push
mov
sub
push
push
pushl
pushl
call
add
pop
sub
mov
add
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
push
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
push
push
call
add
pop
sub
mov
add
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
pushl
push
call
add
pop
sub
mov
add
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
add
sub
push
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
push
push
call
add
pop
sub
mov
add
ret
add
add
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
sub
mov
push
push
subl
mov
push
subl
mov
xor
inc
call
sub
mov
pop
mov
mov
lea
push
pop
dec
and
mov
mov
xor
adc
adc
lea
mov
sub
or
adc
add
mov
pushl
sub
sub
pop
bswap
sub
cmp
jne
xor
push
xor
mov
nop
call
sub
ret
add
sub
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
push
push
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
push
pushl
call
add
pop
sub
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
pushl
pushl
pushl
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
push
pushl
push
call
add
pop
sub
mov
add
ret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
pushl
push
call
add
pop
sub
mov
add
ret
add
mov
push
mov
sub
push
pushl
pushl
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
pushl
push
push
push
call
add
pop
sub
mov
add
ret
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
pushl
call
add
pop
sub
mov
add
ret
add
sub
push
push
push
push
push
call
add
pop
sub
mov
add
ret
mov
push
mov
sub
push
push
pushl
push
pushl
call
add
pop
sub
mov
add
ret
add
dec
fidivrs
sub
lock
fwait
rcrb
out
cmp
mov
jnp
mov
enter
movsl
push
sub
lcall
cs
sub
iret
das
xchg
and
fidivl
mov
lcall
mov
repnz
stos
dec
pop
fbstp
into
mov
mov
and
ss
leave
movsb
pop
adcl
adc
scas
sub
xchg
fidivrl
testl
pop
fimuls
daa
pop
mov
lret
jnp
mov
fs
lods
lahf
lcall
xchg
xchg
ret
cmpsl
scas
aad
rcrb
mov
push
scas
fsub
jns
out
jns
xchg
sbb
sarl
sbb
mov
inc
sbb
lret
xor
test
dec
xor
mov
jns
pop
aaa
leave
cmp
mov
call
es
shll
xchg
sbb
xchg
dec
insb
ss
xchg
daa
fnstcw
ret
pop
sub
cwtl
in
adc
xchg
cmp
aaa
scas
xchg
out
test
scas
push
jnp
sub
lds
dec
jg
idivl
shll
cwtl
jg
mov
sub
or
mov
cwtl
push
mov
jecxz
mov
add
adc
cmp
mov
add
and
lods
cld
lock
mov
mov
nop
sbbl
or
jo
test
xchg
add
jecxz
jae
call
xor
sahf
out
shlb
das
adc
shr
and
mov
inc
or
lret
dec
mov
and
inc
push
mov
in
push
jmp
or
adc
insb
stos
push
xchg
hlt
lods
push
dec
insb
stos
push
or
popf
dec
sub
jmp
shll
dec
in
dec
sbb
stc
xchg
out
pop
mov
dec
gs
push
and
repz
mov
orl
mov
aas
enter
adc
inc
inc
inc
xor
or
xor
or
in
int
sarb
data16
rcrb
imul
mov
cmp
ret
jae
mov
push
out
test
sub
roll
pushf
mov
test
cmpsb
pusha
sub
out
mov
sar
cs
int3
xchg
pop
sub
inc
fprem
lds
pop
xor
js
daa
xchg
imul
jge
imul
pop
cmp
test
cmpsl
pop
sbb
movsl
into
in
sbb
in
mov
jle
loop
leave
push
jae
adc
lahf
sbb
ret
in
add
sbb
jg
and
fidivrl
push
lret
sbb
in
dec
mov
fildll
xor
xor
sti
les
pushl
mov
push
adc
and
ret
xchg
pushf
std
mov
insb
addr16
test
addr16
in
pop
clc
pop
mov
adc
inc
pop
negl
push
imul
hlt
xchg
mov
test
sub
pushf
and
mov
sbb
or
pop
test
cmp
sbb
jo
out
out
imul
push
xor
lds
gs
mov
add
add
xlat
jge
jmp
outsl
xchg
mov
inc
sub
dec
cmpb
pop
mov
aaa
xlat
sarb
sub
xchg
mov
iret
xor
pop
inc
mov
pop
xchg
push
ja
mov
lods
push
scas
dec
mov
cmpb
xchg
jge
mov
cli
ss
xor
pop
inc
lock
addr16
lahf
fwait
orl
shrl
cmp
inc
gs
or
xor
int
xchg
jbe
xchg
mov
call
and
shl
pop
adc
pop
pop
in
int
and
leave
out
cwtl
test
and
mov
cmp
nop
sub
cmc
frstor
push
jle
roll
out
adcb
and
and
mov
fldl
xchg
push
sub
stc
imul
adc
orb
mov
push
sahf
lret
rcl
push
outsl
xchg
mov
popa
outsl
adcl
push
xor
pushf
push
cmp
lahf
xor
loopne
loop
xor
sbb
mov
sub
insb
call
outsl
sub
cmpsb
sbb
rorb
jbe
pop
lret
cld
jne
mov
lcall
stc
push
mov
jl
je
outsl
insb
sbb
insb
xchg
and
adc
shrl
stos
enter
push
jge
adc
adc
cvtpi2ps
lock
imulb
sbb
dec
xor
add
mov
bound
fwait
out
xor
cltd
lods
pop
bound
xchg
dec
arpl
cmpsl
aas
xor
into
loope,pt
test
sub
loopne
dec
daa
aad
out
cmp
mov
cmc
int3
pop
div
repz
jne
push
ret
scas
pop
cmp
or
aam
mov
cwtl
jle
addr16
push
and
add
cmp
jmp
cmp
je
cmp
in
xchg
dec
ja
popf
sub
lock
fidivrl
inc
scas
movsb
push
std
mov
ljmp
mov
fisubrs
and
mov
xor
aas
jge
push
jnp
pop
inc
adc
jne
xchg
adc
mov
sub
mov
das
pop
dec
inc
aad
mov
inc
js
mov
cmpsl
inc
mov
stos
hlt
gs
mov
nop
outsl
fbstp
adc
addr16
sarl
fwait
int3
push
lret
dec
pop
stos
mov
fnstcw
push
sbb
mov
into
andb
jnp
mov
adc
repz
push
leave
inc
test
loopne
add
add
lret
incl
mov
inc
call
out
pop
sub
outsl
adc
xchg
fsubrs
aad
addb
jg
inc
popa
arpl
mov
xor
adc
outsb
nop
dec
out
fstpt
lods
push
adc
test
mov
sbb
cmpsb
cs
cmpsb
xchg
or
cli
jae
mov
pop
hlt
mov
fsubs
addr16
cltd
js
and
and
adc
sbb
leave
std
xor
push
ss
imul
les
push
ss
imul
les
push
ss
imul
les
push
ss
imul
dec
mov
ss
out
leave
fwait
dec
mov
cmp
mov
pushf
dec
ret
adc
lcall
jle
stos
imul
data16
cltd
mov
daa
.byte
