push
call
ret
ret
leave
repz
pop
ss
sub
push
pop
insl
pop
dec
mov
out
mov
sub
das
lock
cmpb
mov
sub
xchg
xor
mov
xor
sahf
sub
aas
xor
into
and
les
push
mov
dec
aaa
into
fidivs
cmpsl
push
loop
into
add
dec
stc
or
mov
ret
and
daa
imul
out
jno
sbb
movsb
fldcw
cmpsb
adc
fs
inc
bound
dec
aas
mov
fmulp
iret
popa
lods
mov
les
repz
or
lods
js
pop
xchg
sub
mov
xchg
jo
cmpsb
int
iret
pop
xor
pop
xchg
bound
cmp
sbb
push
push
dec
push
in
mov
xchg
jno
loope
xchg
add
shrl
mov
js
push
mov
dec
fxch
ja
out
mov
push
push
fistps
or
loop
add
adc
cmp
mov
sbb
in
stos
mov
xchg
insl
bound
jne
ds
movsl
fmull
int
std
jb
add
pop
ret
cmp
sub
jno
xchg
sti
ja
pop
iret
fidivrl
push
inc
dec
lea
inc
add
add
ljmp
push
je
mov
mov
jmp
fistl
push
ja
mov
or
inc
dec
sbb
mov
mov
push
xchg
into
sub
outsl
sbb
jp
lds
pop
push
loopne
lcall
add
sub
rorl
out
mov
xor
insb
nop
cltd
ljmp
scas
dec
xorl
xor
sub
cmp
xchg
adc
shll
sub
dec
iret
cmc
fcompl
aam
mov
mov
adc
sbb
cwtl
xorl
pop
inc
jl
cmp
popa
xchg
mov
addr16
fsts
xchg
rolb
xor
ss
rcll
test
cmp
xchg
leave
mov
pushf
push
xchg
adc
arpl
imul
inc
cmp
test
inc
test
xor
xor
test
out
mov
push
push
mov
lcall
pushf
mov
inc
test
push
sub
std
not
mov
divl
js
data16
movsb
ss
sub
inc
adcb
lea
inc
cmp
sub
outsl
ffree
fwait
or
dec
cmp
xor
scas
ljmp
or
leave
int3
sub
push
mov
popa
jnp
fwait
sbb
sti
scas
loopne
rcrb
subb
jg
cmp
sbb
imul
ljmp
jge
in
lcall
inc
cs
ror
fisubrl
je
lahf
sbb
out
rcrb
fdivs
xchg
jmp
jp
mov
ficoms
movsl
lods
cld
cli
in
mov
mov
push
xchg
fadds
xchg
add
sub
or
jl
sub
mov
xlat
sahf
add
mov
sbb
sbb
fdivr
daa
fistps
add
push
fcomps
std
push
cmp
repz
mov
xor
in
mov
dec
sbb
jle
es
icebp
jno
notl
xor
aaa
push
sbb
xchg
and
jbe
out
sub
pop
rorl
lea
mov
test
arpl
andb
cltd
pop
adc
inc
jno,pn
lods
mov
xlat
and
mov
jp
fwait
movsb
lcall
jae
mov
lock
inc
test
jecxz
lahf
bound
sbb
push
movsb
fmuls
test
insl
out
push
sbb
ds
push
sar
jmp
repnz
loope
push
lock
cmpsl
push
popf
test
in
inc
mov
cmp
xchg
mov
pop
std
adc
fucomip
xor
pushf
adc
xchg
es
fisttpl
filds
mov
in
cvttps2pi
or
cmp
cltd
sub
orb
jne
clc
fwait
clc
test
sti
push
push
mov
cmp
test
jne
add
dec
in
std
movl
rorb
xor
fiadds
xchg
add
enter
cmp
mov
dec
dec
sbb
mov
push
jbe
hlt
mov
push
dec
adc
leave
in
jmp
mov
push
and
test
xor
sub
mov
test
in
dec
jno
adc
scas
adc
jb
sbb
test
dec
jl
pop
cli
mov
sub
test
repz
or
or
mov
in
mov
pop
pop
sub
pmulhw
ds
cmc
bound
and
mov
stos
jl
enter
and
push
push
gs
and
and
popa
push
push
xchg
push
aas
lret
mov
popa
movsl
dec
push
or
mov
pop
or
out
xchg
or
mov
movsb
inc
les
mov
out
test
jbe
and
fnstcw
negb
push
adc
push
push
push
pop
call
pop
iret
jno
mov
in
lea
les
andl
push
pop
dec
dec
xor
sbb
repz
test
fwait
scas
add
inc
inc
mov
jle
cmovbe
pop
cmc
mov
lcall
or
jmp
push
add
bnd
cld
push
add
cmp
add
fsts
rcl
adc
out
out
cs
cltd
cmp
stos
sahf
adc
loopne
ficomps
pop
repz
adc
xlat
loop
push
roll
std
addr16
pop
mov
adc
inc
ret
inc
inc
fidivl
add
mov
xor
mov
jnp
test
xchg
cmp
adc
mov
cmovl
movsl
mov
adcl
add
cltd
scas
jo
sbb
fldt
mov
add
sub
pop
jl
pmullw
push
inc
xchg
fwait
repz
dec
jae
xchg
dec
fwait
pop
mov
movsl
jle
test
popf
mov
and
pop
pusha
add
loop
cmp
dec
shrl
mov
cmp
mov
ss
xor
xchg
jbe
cmp
jne
mov
in
int
int3
jb
mov
sbb
fcoml
adc
into
push
xchg
decb
xlat
mov
and
inc
xchg
enter
inc
cmpsb
inc
xor
adc
stc
cmpsl
mov
jp
xor
add
incb
roll
xchg
stos
dec
adc
or
inc
sbb
inc
jns
aam
mov
shl
test
mov
loopne
mov
mov
sub
jp
add
jnp
fisubs
icebp
rorb
mov
push
push
adc
sbb
inc
aaa
dec
mov
adc
arpl
shrb
out
or
shlb
add
outsl
ror
int3
jmp
lcall
pop
push
pop
sbb
mov
fs
inc
pop
push
sub
xor
cs
mov
cmp
daa
insb
orl
ljmp
cmpsb
jl
fsts
add
test
call
std
loop
adc
hlt
add
jp
xor
inc
inc
aad
sarl
aaa
jnp
jge
jmp
sub
rorl
push
or
inc
shrl
ss
leave
or
sbb
add
iret
fcomps
lahf
lahf
pusha
sub
lcall
xor
jae
and
divb
push
and
ficomps
insb
cmp
shll
add
fstpt
out
push
notl
test
and
lahf
dec
leave
in
mov
aaa
fcompl
dec
push
push
icebp
pop
iret
push
sti
add
add
aad
xchg
cmp
mov
jle
sub
fidivrs
or
adc
or
scas
xchg
incb
cmp
fwait
popa
and
fadds
or
cmp
and
sar
xchg
push
pop
imul
outsl
dec
incb
sub
pop
push
xchg
aaa
mov
stos
mov
mov
and
push
dec
xor
clc
adc
or
xor
sub
adc
jno
rcll
mov
add
cs
pop
or
clc
adc
iret
test
scas
js
dec
stos
cltd
or
pusha
xchg
pop
loopne
lahf
mov
or
fsts
adc
ret
mov
mov
push
popa
pop
jge
cwtl
xchg
outsl
adc
jne
lock
and
rclb
imul
es
and
nop
push
push
xor
sub
jmp
fisubl
pop
push
push
loope
shll
out
sahf
dec
rcr
mov
in
enter
ljmp
aas
jne
popf
lods
ds
repz
add
push
or
mov
stc
fdivp
add
lock
jo
movsl
daa
loop
jo
mov
jg
subl
or
push
cld
repz
push
sbb
sub
movsl
gs
out
pop
movsl
cmp
loop
jg
jnp
and
xlat
orb
lods
xchg
push
mov
push
add
test
fildl
sar
mov
insl
leave
scas
ret
ja
push
cmp
in
fdivl
imul
in
lcall
xor
push
hlt
test
jo
add
rclb
jmp
insl
pop
divb
bound
mov
add
sti
packsswb
adc
popa
hlt
popf
leave
loope
loope
cmpsl
pushf
lods
sahf
cltd
dec
cmp
test
or
jnp
out
dec
jae
or
push
add
jle
arpl
inc
xchg
ds
gs
mov
xor
push
xor
test
lret
cmc
iret
rcl
pop
imul
cmp
xchg
add
jecxz
xchg
jmp
jmp
loopne
adc
test
and
out
add
sbb
aad
sahf
push
ds
jns
add
ja
mov
sbb
inc
push
cwtl
cltd
jne
mov
xchg
mov
mov
dec
pop
int3
addb
cmc
ficompl
push
cs
sub
outsl
outsb
pop
add
popf
int3
addr16
cmp
icebp
aaa
inc
mov
das
inc
mov
lock
xchg
test
fisubrl
sbb
jl
int
add
ja
icebp
repnz
repnz
adc
cmp
cmc
cmc
cld
mov
jp
adc
pop
and
data16
sbb
hlt
mov
and
imul
mov
dec
adc
jb
add
movsl
push
mov
inc
out
sbb
jb
and
pusha
jmp
aam
jg
sbb
lds
stos
mov
push
sbb
insb
lds
dec
fwait
movsl
jp
sub
scas
ror
mov
int3
or
fwait
cs
clc
test
sysret
lea
les
mov
sbb
jnp
dec
aam
jl
sbb
aam
xor
push
xor
xchg
pop
inc
aaa
je
pop
xchg
xchg
pop
inc
data16
out
test
inc
push
pop
cmp
lret
sub
add
cmp
je
stos
imul
mov
out
lea
stos
mov
and
in
sbb
inc
shr
jo
sti
ret
jle
pop
push
sbb
and
mov
test
icebp
jle
adc
dec
pushf
pop
imul
pop
inc
imull
loope
xor
gs
and
mov
inc
mov
dec
mov
cld
add
lea
lcall
jecxz
imul
push
xor
pop
js
or
pop
push
lret
mov
add
pop
scas
or
mov
clc
ret
pop
xchg
popf
scas
hlt
or
fnstenv
jae
pop
cwtl
rcll
sub
daa
cmp
xchg
pop
adc
loop
fcmovu
sub
push
cmp
imul
mov
mov
out
mov
cli
in
sbb
aas
imul
dec
mov
out
shrl
cmp
popa
pop
xor
cltd
cmc
xor
sahf
bound
in
data16
repnz
mov
scas
jle
out
ja
pop
sbb
aaa
sbb
daa
jae
hlt
addb
jns
sbb
subb
rorb
fnstenv
ret
in
in
mov
pushf
and
imul
push
mov
cmp
sbb
mov
call
out
lea
inc
cs
pop
fcoms
shl
rcrb
clc
inc
btr
push
push
scas
std
push
jmp
dec
repnz
dec
std
push
fwait
int
enter
jns
lcall
iret
pop
push
sub
push
movsl
adc
filds
ljmp
push
outsl
jl
idivl
call
arpl
xchg
and
daa
imul
push
pop
and
cmp
jl
push
inc
mov
out
fwait
daa
leave
inc
test
je
into
cmc
fcoml
sub
pop
outsl
dec
cmp
test
push
test
ljmp
pop
lds
insb
movsl
fnsave
imul
push
push
pop
imul
jmp
jne
or
outsl
sub
es
sub
and
ljmp
lret
pop
in
mov
cmp
icebp
or
mov
lahf
mov
in
mov
loope
loop
or
mov
xchg
mov
enter
mov
jp
in
and
adc
fildll
adc
mov
xor
adc
sub
fdivr
rdtsc
xchg
test
adc
jl
xor
shll
repz
data16
xor
imul
lret
xor
sub
ret
in
mull
int
sub
and
mov
add
pop
pusha
lds
sbb
add
or
and
test
jo
mov
push
jns
adc
loop
lock
outsl
jp
popf
ret
dec
inc
inc
sub
mov
push
cmp
xor
sbb
xchg
inc
push
mov
lods
pop
mov
inc
ja
or
scas
bound
and
in
mov
cmc
sahf
push
ja
xchg
out
fnstenv
sti
push
fs
jge
jb
or
mov
and
out
rolb
jle
aad
push
jge
add
aas
sub
inc
sbb
fistpll
mov
add
out
cmpl
insl
aam
xor
pop
daa
jecxz
sbb
outsl
mov
jns
mov
pop
je
dec
cld
stos
fwait
dec
sahf
mov
gs
jl
bnd
xchg
sahf
shlb
xchg
cld
pop
pop
push
fld
add
add
or
dec
sub
pushf
test
iret
lods
mov
xchg
adc
mov
lret
xchg
loopne
popf
jmp
mov
add
cli
inc
ucomiss
cld
shl
fcmovnb
sub
jnp
cmp
inc
cmp
jbe
addr16
loopne
fwait
mov
in
pop
test
jno
test
jns
or
imul
loope
xchg
cmp
mov
hlt
or
rorb
sub
mov
push
sub
aad
addr16
in
cmp
pop
inc
mov
mov
mov
int3
cmp
push
dec
arpl
xor
into
insb
inc
mov
or
push
xchg
jmp
imul
std
stos
in
dec
mov
pop
xchg
fs
test
mov
adc
mov
aaa
dec
fnstcw
or
mov
jb
jge
ss
or
mov
mov
or
mov
ret
les
or
sub
data16
adc
mov
xor
push
daa
int
mov
ds
sbb
fldl
fstpl
movsb
mov
pop
xor
xchg
into
call
cmp
sahf
arpl
push
mov
mov
adc
jge
cmpl
inc
sbb
mov
push
mov
xchg
scas
jecxz
stos
fistl
jecxz
cmp
mov
je
loop
sbb
ss
test
push
sub
ss
cmp
outsl
and
push
and
in
mov
dec
or
sub
cwtl
es
jb
pop
lods
ret
loopne
add
push
lret
fistps
push
jp
sti
mov
in
outsb
dec
mov
push
fstl
pop
mov
inc
add
mov
test
cmpsl
or
dec
popf
jmp
rol
fmuls
mov
inc
inc
push
lahf
cmpsl
lods
ljmp
insl
test
insl
sahf
rcrl
ftst
mov
mov
scas
xchg
mov
xchg
data16
cli
xor
push
lahf
dec
adc
adc
add
add
sub
das
pop
mov
rcrb
shl
les
pop
shlb
jmp
jae
scas
mov
cmp
popf
in
and
movsl
dec
jl
addr16
scas
int
pop
or
rol
lret
pusha
bound
jecxz
hlt
push
loope
lock
adc
test
rorb
out
js
sub
push
sub
dec
adc
xor
mov
mov
lods
mov
pop
mov
pop
push
addr16
dec
xchg
push
out
subb
lock
pushf
and
mov
pop
cwtl
mov
fwait
stos
rolb
test
in
outsl
add
je
sbb
pop
add
cmp
inc
lock
test
xlat
pop
or
orl
mov
mov
repnz
xor
add
push
pop
aaa
bound
in
aad
push
mov
sub
ficoms
pop
add
cmp
pop
push
sbb
orl
js
inc
add
dec
pusha
inc
mov
test
shrb
cs
cmp
lahf
icebp
push
xchg
hlt
mov
pop
mov
pop
mov
cmp
pop
mov
test
mov
fs
push
push
aas
push
outsl
movsb
out
addr16
cli
lcall
lret
inc
adc
inc
sub
lcall
int
fs
gs
imul
cmp
push
jg
xchg
mov
push
sub
mov
sub
imul
in
mov
adc
xor
sub
cmpsl
fisttpll
addr16
in
jg
mov
js
subb
aas
push
std
incb
lret
cmpsb
std
sbb
out
ds
aad
sub
das
pop
repnz
jecxz
call
lret
aas
mov
cmp
jle
jmp
xchg
es
jecxz
fidivs
cmp
in
fdivrp
pop
in
inc
sbb
inc
and
sbb
or
imul
ja
add
dec
lds
lret
mov
inc
adc
out
mov
das
add
mov
sbb
push
adc
cs
pop
sbb
into
scas
add
addl
hlt
popa
icebp
xchg
or
ja
in
cmpsb
adc
inc
out
sub
mov
fwait
sbb
push
push
dec
mov
inc
pop
adc
sub
jnp
stos
ret
daa
add
out
sahf
sbb
cwtl
pop
es
xchg
cs
xchg
sbb
lahf
cs
fwait
rolb
cmp
jae
shl
cltd
mov
mov
add
adc
js
mov
jno
call
or
pop
jg
popa
inc
push
or
dec
inc
out
sub
push
sub
fld
adc
jno
or
xchg
data16
lods
fimull
add
sbb
daa
rorb
inc
std
adc
scas
inc
xor
mov
jmp
fidivl
es
or
sub
shlb
sub
inc
call
mov
push
sub
les
adc
push
jne
aam
inc
enter
sarb
add
dec
and
pop
faddl
pop
adc
adc
std
or
cli
orb
xor
dec
inc
jge
mov
inc
inc
stc
addr16
inc
aaa
push
iret
fs
into
adc
ret
or
push
fwait
xor
pop
aad
mov
testb
insl
xchg
sbb
out
in
mov
cltd
mov
pop
mov
in
mov
or
sbb
jl
push
test
enter
and
repz
xor
rcrl
stc
and
test
scas
lahf
jge
dec
mov
fisubrs
pushf
into
movsl
addl
das
fildll
hlt
jae
mov
js
lods
andl
cld
cmp
into
add
scas
fistpll
push
cmp
pushf
int
loope
mov
xchg
dec
inc
iret
jge
jno
aaa
repz
lahf
popf
mov
mov
mov
pop
cmp
into
or
pop
data16
shlb
mov
adc
xchg
mulb
idivb
adc
icebp
iret
mov
sub
mov
out
push
fadds
sbb
pop
lret
mov
pop
ljmp
out
sbb
inc
in
pop
mov
adc
mov
jg
shl
sub
jmp
pop
xlat
xor
enter
xchg
test
mov
dec
int
ror
repz
cmp
xchg
pushl
out
ja
cmp
nop
adc
imul
fs
lret
xchg
cmc
xchg
popf
loope
cmp
bound
sti
mov
push
fisttpll
movsb
xchg
into
push
sub
xchg
dec
lock
lods
jns
lea
pushf
es
mov
pminsw
out
dec
fwait
scas
and
lcall
ret
stc
cmp
or
mov
popa
mov
shrb
imul
cmc
insb
xchg
pop
iret
fs
mov
add
adc
aas
or
aad
pop
jecxz
lods
fstp
out
shl
out
mov
inc
jge
cmc
leave
push
popf
dec
push
mov
dec
and
ret
inc
push
dec
test
xchg
xchg
xchg
inc
push
lret
sbb
ret
hlt
pop
cmp
jnp
hlt
sub
push
mov
cmpsl
cmp
sti
xchg
mov
bound
rol
shl
fdivs
jbe
pop
adc
enter
aad
jns
or
cmp
xor
sbb
std
and
inc
fstpl
xlat
xchg
js
movsb
test
fld
add
adc
les
xchg
shll
incb
je,pn
push
or
pop
xchg
sbb
divl
jae
or
ret
jecxz
or
or
je
pop
pop
addr16
daa
and
or
jmp
and
or
outsb
jp
add
ljmp
pop
add
fstl
dec
pop
sub
add
mov
mov
push
imul
aas
pushf
dec
in
movsb
ja
aas
icebp
in
xor
push
or
mov
jnp
sub
test
inc
cmpsl
dec
push
jle
pop
mov
dec
xor
mov
ss
and
enter
icebp
mov
mov
push
fwait
pop
cmp
mov
and
int3
pop
sub
lcall
pop
jne
lds
pop
rcll
dec
sahf
outsl
sub
jnp
call
sti
mov
pop
loope
pop
mov
sbb
loope
test
pop
jg
xchg
pusha
imul
cwtl
loopnew
xchg
ljmp
stos
lea
add
xor
cwtl
xchg
orl
add
or
ffree
xor
mov
ja
cmp
sub
mov
jne
xchg
pusha
in
lods
cmp
mov
nop
xlat
aad
adc
sub
fsubr
xor
jp
inc
mov
push
insb
rcl
dec
mov
add
pop
sub
pop
or
xchg
push
dec
mov
lods
xor
inc
xor
pop
pop
cmp
xchg
mov
and
xor
xchg
inc
add
pop
sbb
stos
sub
inc
pop
add
lock
pop
div
sti
fisubrs
mov
lcall
dec
pop
test
lcall
push
bnd
xor
hlt
or
aas
mov
dec
jecxz
out
xchg
add
in
loop
add
xchg
fbld
loope
pop
nop
or
enter
or
dec
jne
stos
imul
repz
xor
int3
or
sbb
shl
sbb
out
push
loopne
sahf
imul
subb
cmp
dec
int
inc
enter
aas
fcomip
nop
mov
out
lods
mov
push
xchg
push
push
stos
sbb
adc
neg
jo
jno
or
stos
cmp
loopne
ljmp
addr16
inc
sub
inc
mov
push
roll
adc
sbb
and
inc
pop
aas
sbb
push
repz
push
cmc
pop
ror
push
sbb
testb
push
incb
mov
mov
dec
test
out
daa
fistl
shlb
and
jnp
insb
sbb
mov
add
sub
push
inc
dec
insl
stos
inc
stos
mov
icebp
inc
xchg
jo
imul
cwtl
fstl
nop
sbb
gs
bound
mov
mov
fcmovbe
xchg
iret
or
cmpsb
jns
push
loop
mov
cli
xor
add
sbb
out
xchg
push
adc
or
adc
inc
xor
xor
repz
lock
aad
inc
fnstsw
ja
lahf
mov
mov
cmpsl
ss
stc
pop
sbb
cmp
repz
call
lcall
mov
mov
xor
and
clc
sub
add
push
jp
incl
and
sub
add
push
lahf
lods
sub
pop
ret
xchg
or
and
and
pop
test
jge
mov
mov
rclb
xorb
xchg
call
repnz
lret
lcall
out
fbld
inc
adc
push
shlb
fsubrl
xchg
sub
lods
iret
xchg
dec
in
int3
push
mov
inc
inc
fbld
or
stos
push
movsb
sbb
jp,pt
adc
cmp
sbb
dec
push
cltd
ss
pop
pop
adc
jp
mov
jp
xor
cmp
clc
cmc
flds
shl
adc
in
inc
cmpsb
leave
call
cmp
ljmp
pop
pop
dec
add
inc
push
jle
inc
mov
in
jns
rorb
pop
push
inc
add
mov
scas
popa
sub
sub
out
sbb
repz
fprem
push
jno
sub
pop
jno
sub
add
add
clc
cmp
and
inc
ss
repnz
in
lods
std
add
leave
nop
nop
sbb
mov
std
push
into
jge
daa
sub
dec
add
pop
xor
xor
fisubl
jns
mov
outsl
arpl
fisubs
pop
mov
ficompl
cs
xchg
int3
cli
sarb
cld
imul
mov
fcoml
in
sbb
mov
repnz
stos
fldcw
mov
jns
and
mov
or
push
cld
pushf
or
xchg
jp
popa
imul
mov
out
sbb
stc
loope
sar
cwtl
test
push
jnp
popf
xorl
fldt
sbb
xchg
push
mov
lcall
hlt
cmp
cmpsb
pop
call
stos
lea
scas
insb
ja
push
jne
popa
sti
push
xor
arpl
mov
vmread
fdivs
in
jge
push
lods
xchg
loope
subl
or
dec
xchg
jb
inc
arpl
sar
sbb
insl
push
aad
dec
and
data16
sbb
imul
ljmp
loop
sub
aas
cmp
and
loope
aas
sbb
out
dec
gs
test
sub
scas
add
fisttps
xchg
shll
dec
shlb
xchg
inc
cmpsl
stc
dec
sbb
pop
loopne
stos
inc
outsb
sub
cmp
stc
xchg
dec
xchg
fwait
jmp
add
nop
mov
fcompl
scas
add
fnstsw
xchg
mov
movsl
repz
jno
mov
or
aam
lcall
pusha
jb
aad
mov
aam
aad
icebp
or
inc
add
xchg
adc
xorb
or
mov
sbb
mov
popa
xlat
fcoml
in
sbb
int
rcrl
je
or
ljmp
movsb
xor
imul
jne
loope
fdivl
in
icebp
fistpll
sbb
jns
stos
fsubrs
dec
movl
cltd
push
pop
mov
jo
mov
and
mov
push
lahf
imul
gs
mov
fiadds
pop
dec
shl
and
stos
and
cld
cmp
stos
and
mov
jge
iret
jnp
inc
dec
or
mov
inc
gs
mov
ljmp
and
jns
in
inc
jae
add
pop
jl
mov
jg
cmc
mov
jmp
adc
popa
xchg
jb
aam
mov
and
sbb
xchg
popf
ret
add
and
gs
jno
test
inc
and
inc
or
mov
aas
mov
and
push
mov
out
mov
jno
sbb
dec
ret
lock
popf
inc
xchg
clc
shrb
mov
jbe
jns
inc
into
int
pusha
inc
mov
push
sbb
dec
sti
push
icebp
inc
ljmp
ds
mov
or
and
and
adcl
dec
decl
pop
outsl
ret
xlat
sbb
test
int
nop
test
int3
mov
data16
repnz
stos
xchg
pop
inc
mov
cmpl
jne
lcall
lahf
insb
bsr
int
cld
inc
push
roll
js
xchg
mov
incl
adc
hlt
cmp
cmp
into
push
sbb
jno
cmpsb
mov
nop
inc
or
sub
out
vmovd
mov
daa
and
push
xor
repz
xlat
push
call
clc
rclb
dec
xchg
andl
push
xchg
cltd
xchg
adc
or
cmpsl
dec
dec
jnp
lret
fs
cli
pop
mov
stos
mov
rorb
mov
inc
clc
pushf
popa
sbb
xor
es
mov
pushf
and
and
inc
mov
and
mov
scas
cmp
add
shrb
mov
push
and
std
popf
lret
jge
movsb
mov
xchg
in
in
and
and
mov
arpl
xchg
scas
mov
mov
outsl
mov
rcrl
mov
sub
xchg
mov
and
lods
push
insl
pop
scas
js
stos
in
psraw
xor
pop
push
adc
mov
out
cmpsl
sti
jb
ret
into
imul
push
fbstp
dec
and
div
push
mov
mov
fistl
xor
push
scas
xor
pop
adc
mov
xchg
pop
ss
and
xchg
gs
inc
adc
push
push
add
jnp
in
xor
stos
pop
xor
andl
xchg
mov
cltd
movsl
ljmp
mov
lahf
aad
sahf
sbb
pop
movsb
jae
ss
ret
pop
push
dec
mov
fidivrl
addr16
fiadds
pop
and
cmp
cmp
sbb
loope
stos
sbb
shl
test
jne
sbb
mov
mov
xor
int
iret
dec
jo
jp
in
push
sub
dec
sbb
in
mov
mov
aas
xchg
push
xlat
adc
cmp
mov
pop
mov
mov
adc
loopne
mov
aad
mov
es
fmull
sub
js
xor
pop
ja
stos
lcall
dec
jno
sub
inc
pop
cmp
mov
in
dec
jp
aas
shlb
jb
and
lea
adc
bound
imul
fadds
into
sti
add
ret
shll
mov
ljmp
jp
fcmovu
call
sub
push
mov
dec
inc
aam
jbe
adcb
cmp
xor
pop
int
xor
jle
call
hlt
xor
push
iret
test
push
jge
sti
lret
jg
jecxz
iret
mov
jb
or
xchg
push
xor
insl
pop
push
iret
scas
sbbl
sbb
add
inc
out
test
push
push
xor
dec
outsb
or
mov
cld
sti
int3
outsb
xor
aas
es
sub
add
ret
js
imul
sub
popf
or
sahf
mov
mov
mov
lahf
cli
lods
sub
adc
lret
pusha
mov
lea
ja
cld
insl
cmp
cmp
and
adc
pusha
call
adc
push
cmp
pusha
push
int3
fcomps
clc
es
fstpt
pop
pop
loopne
add
lds
into
push
jle
into
adc
sub
add
loopw
addr16
pop
cmc
stos
or
xchg
lret
mov
sti
jno
xchg
cmpl
fwait
insl
pop
les
cli
stos
shl
orl
enter
stos
fdivrl
mov
dec
lahf
xor
inc
cmp
addb
pop
dec
loop
nop
rcrb
aas
sbb
fisttpll
mov
mov
into
mov
repz
ss
pop
add
sbb
nop
rclb
jae
or
dec
in
jp
xor
aad
adc
xorb
dec
xlat
cli
cmp
cmp
lods
arpl
js
testl
and
dec
mov
mov
movsl
in
jb
mov
pop
pusha
xchg
adc
mov
jle
aam
add
sub
jne
aad
lcall
inc
scas
div
fbstp
dec
pop
dec
and
add
stos
pop
in
call
push
iret
dec
jg
je
inc
int
lods
push
popf
cmpsb
hlt
out
adc
les
mov
mov
and
shrl
out
popa
dec
scas
inc
shlb
inc
sbb
in
out
mov
inc
mov
pop
mov
aam
mov
sti
mov
fucomp
pop
ficompl
mov
xchg
mov
icebp
mov
lret
mov
aas
dec
leave
mov
mov
rcll
push
lea
ret
cmp
mov
test
adc
mov
bound
mov
xor
stos
push
and
mov
les
mov
pop
in
dec
sbb
jns
adc
lods
lock
dec
xor
xor
je
shlb
jmp
pop
add
cmpl
adc
or
dec
arpl
cmpsb
push
mov
in
or
sbb
fcomps
cmc
ja
mov
jae
mov
es
push
xchg
in
mov
popf
stos
jnp
push
and
fs
pop
xor
mov
decl
and
jp
mov
sub
jp
dec
fwait
xor
pushf
xlat
std
imul
sub
push
pop
fildl
xchg
sub
imul
inc
sub
mov
lret
xchg
aaa
lret
sub
adc
daa
mov
mov
cmpsb
pop
add
sub
or
stc
in
stos
aas
je
sub
stos
pop
and
xor
xor
inc
mov
in
xchg
mov
xlat
mov
outsl
in
cli
dec
je
xchg
arpl
jmp
popa
jg
movsb
je
inc
rorb
sbb
inc
ds
jmp
cmp
mov
adc
mov
outsl
jne
aad
ss
sbb
gs
push
insl
scas
lock
imul
insb
iret
fidivrs
jae
and
btc
lret
or
mov
inc
and
outsb
xchg
xchg
jge
sub
jns
jl
cmp
in
inc
cmp
stos
dec
and
add
aam
xchg
sub
add
jmp
das
out
xchg
xor
sub
jecxz
sti
inc
dec
xchg
jl
stos
mov
jnp
push
shll
xchg
mov
sbb
cmp
mov
jns
rcl
stc
push
inc
fistpll
out
sbbl
jl
imul
addr16
out
cmp
mov
jmp
mov
pop
cmp
and
push
sub
int3
call
jl
push
xlat
fwait
push
iret
inc
scas
cmp
sub
xchg
cmpsb
xor
jmp
into
data16
loop
and
loop
sbb
and
cs
out
pop
iret
mov
push
cmp
shrl
cmp
mov
add
movsl
shll
inc
lods
loopne
adc
lcall
int
cmp
push
bound
xor
or
or
inc
xchg
popa
mov
mov
stos
dec
es
sbb
jg
idivl
cmp
shll
push
push
cli
rorl
cmc
rcrl
stos
lcall
fidivrl
in
pop
jo
daa
insb
arpl
mov
jne
xor
in
les
xor
icebp
push
adc
jg
aaa
pop
out
mov
mov
cmc
mov
test
xchg
sbb
mov
dec
mov
xor
xchg
jge
out
sbb
imul
and
je
jecxz
mov
or
adc
and
lea
sbb
lds
fisubrl
adc
test
or
in
mov
ret
mull
and
ret
inc
aaa
outsb
fildll
dec
xor
sar
fstpl
inc
arpl
mov
or
fmul
mov
sbb
rorb
jle
sub
push
push
pop
and
loope
jo
mov
cmp
enter
in
inc
xchg
jbe
cmc
andb
xlat
stos
sti
pop
inc
cmp
push
nop
aaa
push
bound
imul
xsavec
push
aaa
shlb
pop
das
and
inc
stos
lret
pop
mov
sub
dec
mov
and
fisttps
inc
fnstcw
orb
pop
faddl
popa
push
mov
jecxz
jle
addr16
data16
or
jmp
inc
mov
jb
pop
pushf
or
rcl
lcall
xor
and
fstps
orl
lret
mov
pop
iret
ja
outsb
imul
andb
shlb
mov
hlt
les
jmp
mov
sub
pushw
jbe
jle
xor
mov
movsb
xor
and
das
popa
push
push
mov
add
inc
mov
outsb
cmc
dec
shlb
jbe
dec
out
cmp
cmp
push
jo
rclb
jecxz
int3
jl
adc
mov
mov
mov
lea
pop
or
mov
in
sub
adc
lock
jecxz
dec
push
xor
cmp
les
xchg
repnz
jmp
outsb
clc
jmp
outsb
test
sahf
stos
sbb
cmp
aam
in
dec
and
mov
mov
sbb
icebp
sbb
jl
sbb
mov
stos
imul
rcrl
xchg
out
xchg
cld
pop
adc
mov
xor
or
nop
xor
xor
and
or
je
add
mov
clc
mov
pop
fstpl
mov
jmp
mov
in
jb
ret
inc
mov
lcall
scas
repnz
and
sub
jmp
repnz
fcomps
push
rorb
dec
mov
xchg
lds
mov
jns
sub
lret
cmp
jnp
xchg
and
add
pop
in
sub
xor
mov
pop
fistps
call
mov
ret
rcl
mov
mov
push
arpl
mov
cltd
movsb
mov
adc
mov
cltd
fidivrs
in
imul
pop
xlat
pop
ljmp
lahf
mov
sarb
out
xchg
xor
shlb
cwtl
cltd
cmp
sbb
aam
jp
dec
mov
mov
dec
inc
sbb
mov
push
add
mull
jle
mov
jae
or
cmpsl
mov
sahf
jecxz
pop
and
lahf
pushf
seto
pop
outsl
xchg
xorb
inc
ss
and
mov
pop
xlat
cwtl
negl
jo
out
aad
loopne
sti
push
pop
bound
jno
repz
popf
jecxz
ss
out
xor
jae
out
std
xchg
movb
inc
cmc
pushf
inc
pop
pop
push
xor
jb
std
and
out
pop
cmpsl
push
push
jnp
push
mov
das
xchg
sbb
inc
dec
cwtl
xchg
cmp
push
pop
repz
xchg
in
les
in
pop
into
inc
ss
nop
cli
push
or
inc
xchg
push
stos
cld
mov
scas
push
sti
into
inc
push
insb
push
loope
mov
add
out
icebp
xchg
popa
out
sub
mov
imul
sbb
cmpl
insl
dec
fidivrs
and
shrb
cmp
sub
jle
mov
dec
insl
rorl
add
dec
cmpsb
mov
inc
jg
in
stc
mov
into
sub
stc
add
jmp
push
in
xor
adc
jno
sub
stc
mov
inc
std
test
adc
inc
inc
jmp
cmpsb
xchg
push
jnp
insl
popf
push
push
push
lds
ss
call
cld
sub
pop
mov
mov
add
pop
pop
imul
inc
mov
lea
dec
mov
cld
xor
int
nop
fisubrl
dec
shrl
mov
push
loopne
push
mov
and
adc
ss
add
aam
pop
pop
rcll
push
mov
shll
clc
push
mov
add
call
mov
and
inc
call
adc
test
js
aad
push
fdivrs
sbb
ss
or
inc
pushf
movl
pop
mov
mov
mov
cmc
aam
mov
pusha
dec
inc
iret
jl
stos
cmp
pop
shll
and
push
movsl
xchg
mov
push
mov
mov
jb
jns
mov
fld
mov
rolb
inc
test
mov
sub
xor
out
out
popf
jmp
push
insl
mov
stc
pop
popf
out
jp
ja
push
xchg
fdivrp
jbe
test
push
mov
inc
mov
and
xor
lret
mov
out
sub
push
int3
sbb
pop
lahf
mov
xor
mov
pop
push
mull
sbb
xchg
mov
push
push
and
xchg
xor
test
push
add
push
fisubl
pop
dec
xchg
adc
mov
sbb
adc
xor
mov
out
fmull
adc
addb
mov
sti
push
popa
in
mov
andl
sbb
mov
inc
in
cmpsb
movq
aam
dec
loopne
cmp
lods
ja
fdivl
stos
outsb
ljmp
and
imul
stc
lods
mov
jmp
mov
mov
mov
jb
movsl
iret
mov
lods
repz
mov
imul
out
pop
pop
repnz
xchg
ja
in
cltd
xchg
lods
adc
cmp
mov
xor
sbb
push
std
in
mov
insl
les
test
cwtl
pop
mov
hlt
jp
add
dec
hlt
in
popa
pop
imul
outsl
mul
and
in
mov
lcall
jmp
idiv
sbb
insb
cmp
movsl
movsb
pop
jns
pusha
arpl
sbb
cmp
ds
xchg
aad
sti
repz
adc
stc
jg
aaa
enter
loope
faddl
movb
aam
dec
xorb
pop
mov
pop
sub
mov
or
out
inc
mov
mov
pop
push
adc
ret
fistps
inc
faddl
pusha
dec
and
popa
out
in
sub
or
ret
cld
xchg
fs
jbe
mov
popa
jmp
xor
daa
orb
or
ficoml
aam
push
and
cmp
dec
dec
int3
daa
in
xchg
mov
sbb
push
cmp
push
ds
pop
pushf
inc
mov
cmpl
and
push
fldt
je
dec
fsubrs
pop
and
adc
push
push
mov
hlt
je
cmp
sub
mov
inc
pushf
ja
xchg
xchg
movsl
add
data16
cltd
pushf
jno
loopne
outsb
les
cmp
out
movsb
push
mov
call
dec
lahf
xlat
cmp
mov
mov
push
sub
jg
jb
mov
test
stos
and
jnp
mov
adc
jo
lds
enter
xor
jle
jae
adc
pop
adc
cmpb
push
jmp
inc
pop
jg
int
dec
in
negb
call
test
pushf
jge
and
imul
sti
dec
std
out
icebp
rcll
push
sub
xchg
lret
mov
jno
mov
mov
push
inc
jecxz
cmc
sbb
dec
inc
and
dec
clc
sbb
sahf
rorl
js
xchg
loope
pop
stos
insb
orb
sub
push
adc
popf
repnz
fmulp
fdivs
xor
lds
jnp
cltd
inc
lods
lret
mov
in
sbb
ljmp
loop
clc
mov
into
int
add
ss
adc
cltd
imul
adc
mov
imul
mov
adc
jo
in
dec
push
repnz
and
push
push
jbe
mov
or
jp
pop
cmp
std
mov
or
cwtl
scas
pop
cmp
xchg
adc
cld
mov
nop
push
pop
jg
jnp
and
sbb
icebp
sbb
aad
and
out
pop
sbb
gs
stc
mov
dec
incb
mov
ficoms
mov
scas
es
mov
jbe
scas
hlt
in
cmc
fs
mov
mov
push
inc
push
data16
xor
sub
int
xor
cmpsb
fimull
int3
scas
cmpb
and
notb
cmpsb
xchg
ret
fbld
ret
pop
insl
jbe
xor
jb
repnz
xorl
jg
bound
sarl
jae
pop
mov
outsb
pusha
pop
mov
and
mov
ret
call
jge
dec
aas
xchg
cmp
add
in
out
outsb
int
aad
aas
inc
mov
add
or
dec
mov
push
push
jecxz
and
xor
lock
rolb
add
inc
es
cmp
adcl
out
imul
jg
icebp
rorl
add
add
imull
orl
mov
inc
adc
orb
cld
adc
dec
jmp
inc
shrl
leave
and
or
call
pushf
lods
sbb
mov
insb
inc
and
adc
add
sub
in
fcmovne
mov
mov
or
adc
push
push
orb
jl
rol
cwtl
mov
inc
outsb
and
adc
push
mov
mov
xchg
jo
aad
inc
cmpsl
cli
out
inc
adc
jg
rcll
mov
outsb
mov
fmull
cmpsb
sbb
les
add
push
push
outsl
push
lcall
jbe
sub
mov
daa
xor
cli
pop
cmpsb
les
addl
sub
push
sbb
leave
out
fabs
sub
mov
xor
add
pop
cmp
sahf
ljmp
add
pop
pop
jp
lret
cli
dec
add
lea
mov
in
cwtl
insb
js
movsl
pop
out
or
push
or
aam
movsb
push
sub
adcl
jl
stos
cwtl
pop
and
mov
and
insl
bnd
sub
push
sub
cmpsb
ja
sbb
mov
hlt
repz
dec
fnstsw
pop
add
in
pop
cmp
mov
inc
inc
movsl
mov
xlat
iret
dec
scas
or
mov
leave
push
sub
or
mov
pusha
xchg
shlb
and
into
shll
push
cmp
sub
and
lcall
stos
pop
fcoms
sti
lds
rcll
or
aas
dec
cmp
int
pop
cmp
sub
js
adc
jo
xchg
filds
jae
mov
clc
adc
ret
movsl
sub
and
jbe
adc
add
mov
bound
pop
sbb
stos
dec
jne
mov
out
add
ficoml
and
and
stos
std
int3
sarl
push
xchg
addb
xor
loop
sbb
nop
mov
jb
mov
jo
lret
lds
fdivrs
adc
aad
fidivrs
cld
dec
dec
add
push
ds
push
xchg
lret
mov
jnp
mov
xchg
sti
movsl
pop
jl
jle
insb
bound
cltd
test
cmp
and
enter
movsb
pop
add
fcmovu
and
mov
movsb
and
jnp
lea
mov
pop
sub
pop
xor
ret
mov
mov
mov
mov
out
cwtl
loope
xlat
fsubs
arpl
fndisi(8087
mov
std
mov
insl
sbb
test
ja
mov
jl
adc
jge
and
and
inc
fistpl
test
mov
enter
mov
xlat
inc
xchg
dec
dec
mov
jmp
in
xchg
inc
in
movsl
pop
cmc
xchg
gs
fnstsw
mov
aad
imul
das
outsb
cmp
jbe
and
stc
das
cmp
cld
dec
aad
rclb
jbe
stc
mov
adc
fs
stos
mov
dec
mov
out
mov
push
xchg
cltd
mov
mov
lds
cmp
lret
cwtl
push
gs
dec
jge
xor
loopne
jnp
xor
negl
xchg
aad
fdivl
jne
jecxz
mov
push
push
sub
lock
or
jecxz
xchg
mov
in
jle
std
pop
in
pusha
lds
cld
cli
fimull
inc
push
sbb
mov
mov
ret
inc
or
movsb
pop
inc
dec
or
loopne
push
push
in
mov
fidivrs
pushf
insb
lods
cmp
pop
mov
push
adc
gs
adc
xor
mov
adc
xchg
stos
push
or
adcb
scas
mov
mov
jmp
jmp
jle
add
in
mov
subl
inc
sbb
daa
addr16
inc
scas
clc
mov
pop
jp
inc
stos
dec
jg
sbb
test
fwait
or
lcall
test
inc
add
clc
daa
adc
out
shr
cltd
dec
adc
jne
dec
xchg
stos
pop
cmc
xor
jg
loope
fidivl
xor
jno
fucomi
adc
inc
jecxz
dec
mov
gs
mov
dec
popf
shlb
dec
push
ja
sbb
in
sub
addl
stos
or
mov
sahf
push
pusha
lds
jo
and
dec
jp
xchg
aaa
fimuls
lods
fwait
and
lret
rcrb
testl
xchg
lahf
add
push
sub
pop
add
pop
je
mov
insl
popfw
xchg
mov
clc
xchg
jo
les
loop
sbb
mov
andl
loope
push
push
mov
ds
stos
dec
ss
gs
mov
out
js
adc
jmp
imul
insb
cmp
scas
outsl
and
mov
push
rol
dec
mov
shll
cmpsb
outsl
daa
loop
mov
out
loope
cltd
icebp
es
stos
mov
xchg
adc
lret
loope
int
stos
jns
aad
stos
in
popa
jecxz
push
add
and
gs
negl
push
aam
mov
sub
mov
sti
pop
cmp
nop
or
sbb
sbb
or
cmp
sub
mov
nop
and
insl
dec
int3
xchg
pop
fs
fildll
jo
dec
test
dec
pop
lret
or
lds
insl
jp
or
add
mov
mov
pop
xor
push
testb
stos
cmpsb
arpl
test
pop
mov
push
adc
hlt
bound
subb
int3
xchg
xchg
sbb
push
push
cmp
sbb
out
add
mov
nop
sbb
test
std
lea
out
cs
and
xchg
sbb
fildll
dec
push
pop
call
jmp
insl
test
test
jno
push
les
arpl
push
imul
xchg
or
cmc
inc
loop
sbb
ja
mov
pop
fnsave
cmp
out
shr
loopne
xor
pop
call
lods
ljmp
xchg
xchg
dec
ret
insl
push
cltd
sbb
cmc
mov
stc
leave
insl
pop
imul
cmp
or
adc
outsb
inc
mov
jmp
mov
lods
push
xchg
cmp
mov
inc
in
addr16
sbb
inc
sbb
dec
and
lea
insl
push
dec
repnz
addb
popf
dec
mov
pop
and
and
adcb
roll
or
mov
mov
out
stc
cmp
sbb
jno
or
sbb
jecxz
out
in
loop
mov
dec
sub
shr
cmp
inc
test
sub
xlat
jp
or
imul
aaa
cli
cmp
dec
xor
pop
out
jnp
dec
mov
mov
pop
pop
mov
xor
cltd
adc
push
jle
and
sbb
jns
cmpsl
imul
mov
cmpl
loopew
incl
test
adc
xchg
push
enter
inc
call
cmpsl
jbe
adc
jl
in
loopne
mov
mov
sti
test
lods
inc
mov
inc
test
loope
outsl
mov
jle
subl
test
enter
fadd
test
sbb
inc
cld
in
enter
or
in
ret
pop
push
leave
outsb
dec
and
push
add
in
decl
jns
frstor
pop
fnstsw
inc
add
js
adc
call
cwtl
pop
test
std
push
sbbb
push
inc
jno
insl
push
xchg
rorl
aam
pop
xchg
sti
jge
mov
and
addr16
jl,pt
mov
roll
pop
and
clc
and
push
and
mov
sbb
xchg
inc
mov
mov
xor
cmc
loope
pop
inc
pop
pop
push
lcall
cld
aam
xchg
ss
push
push
aas
inc
mov
push
stc
cltd
cld
dec
mov
xchg
mov
jns
push
mov
test
sub
push
test
push
cmpsl
repnz
shlb
push
xor
test
sti
nop
cmp
pop
ror
add
in
adc
push
outsl
and
loop
adc
push
add
leave
iret
mov
mov
gs
popa
inc
test
jl
sub
fldcw
push
lret
out
fucomp
loop
sbb
and
mov
lahf
xor
jl
roll
cmp
sub
dec
sbb
cmp
mov
scas
ret
fcomps
in
out
jo
inc
mov
clc
adc
add
adc
xchg
xor
das
jb
or
gs
iret
or
rcll
mov
and
or
xchg
fwait
mov
das
or
mov
pop
rcll
mov
inc
mov
inc
fildll
mov
jnp
add
fisttpl
lods
push
movsl
sbbb
sub
ret
loopne
mov
loopne
mov
sbb
fidivl
cmp
fdiv
adc
xchg
addl
push
pop
inc
inc
xchg
sahf
popf
jl
push
js
xchg
out
scas
and
and
cmp
cmp
cmpb
and
adc
mov
mov
push
xchg
cmp
xor
mov
push
sub
in
sti
add
pop
push
stos
das
dec
repnz
aad
pushf
sub
xlat
xorl
sti
aad
popa
pop
movsl
xor
gs
add
xorb
popf
out
pop
mov
nop
test
movsl
mov
or
loope
dec
cmp
jns
lock
pop
testb
sub
cmp
jnp
stos
push
jne,pt
data16
into
inc
jbe
test
sbb
jl
jns
mov
leave
ja
imul
sub
jb
cmc
adc
mov
inc
outsl
add
les
adcl
outsl
xor
lret
cmp
mov
push
inc
data16
pop
cmp
shl
das
xchg
les
pop
jnp
lods
fcomip
and
sub
fisubrl
adc
or
outsl
pop
pusha
icebp
xor
out
sbb
scas
mov
and
loope
xlat
sbb
mov
mov
xchg
ret
sub
popf
mov
lret
shll
int
stc
pop
rolb
aad
ds
sti
xchg
and
mov
inc
bound
and
test
loope
movsb
push
mov
cmp
cmp
jae
aam
arpl
sub
inc
mov
jae
in
add
lock
pop
dec
cwtl
push
add
inc
sbb
shrb
mov
add
retw
adc
gs
inc
int3
loope
mov
js
mov
jnp
lds
mov
cs
add
int
iret
and
pushf
sbb
adc
mov
and
fidivs
pop
sbb
call
mov
in
stc
xchg
popl
cmpsl
rorb
popa
cmpsb
ss
imul
mov
ja
mov
mov
inc
leave
lock
dec
mov
jge
loopne
pusha
jns
iret
icebp
subl
mov
sahf
insl
mov
aaa
bound
repnz
xor
and
inc
cltd
pop
fistpll
xchg
mov
xchg
mov
repz
xor
jo
pop
pop
push
sub
pushl
inc
mov
jecxz
mov
insl
mov
clc
lahf
lret
add
mov
jne
inc
negb
and
pop
stos
adc
mov
push
pop
sbb
fwait
inc
je
lahf
push
inc
cs
dec
jne
fisubrl
xor
ficoml
jno
cmp
sbb
xor
idivl
faddp
ret
repnz
lea
bound
in
mov
adc
cmp
mov
lock
and
xor
push
shlb
ss
test
loopne
cwtl
add
inc
adc
ljmp
inc
xchg
cltd
xlat
scas
clc
out
mov
lods
dec
lcall
scas
stc
add
add
dec
shl
mov
pop
mov
xchg
mov
repz
cwtl
or
mov
dec
aaa
jp
inc
nop
movsl
int
mov
insl
adc
js
mov
push
xor
or
lods
jo
inc
dec
pop
inc
scas
gs
cld
cmc
add
pop
push
cmc
or
push
push
stos
andb
push
sub
dec
test
jecxz
push
fcomi
or
mov
movsl
pop
cmpb
and
add
loope
jmp
roll
adc
mov
test
scas
cmpsb
jmp
or
aaa
mov
cwtl
sarl
add
dec
xor
int
fidivl
inc
inc
add
inc
lds
pop
fcoml
in
cltd
in
int
xor
ljmp
imul
fnsave
push
fwait
push
or
dec
and
or
sub
xchg
add
out
add
dec
jb
mov
loop
pop
insl
lret
sub
adc
push
sbb
and
sbb
add
ficompl
into
add
mov
stos
out
mov
popf
in
mov
mov
leave
hlt
lods
mov
pop
cs
into
out
mov
out
xlat
iret
ret
mov
inc
jl
or
outsb
test
bound
sbb
in
pushf
fdivrp
addr16
mov
cmpl
jge
mov
loopne
push
jg
sub
push
je
mov
and
xor
fcoms
stos
ljmp
idivb
pop
mov
jb
sarb
sub
arpl
add
jecxz
dec
test
push
cmp
aam
push
adc
les
fistl
push
xchg
ljmp
push
scas
mov
incl
dec
pop
mov
xor
stc
or
adc
sahf
iret
xchg
pushl
pop
enter
jp
push
mov
mov
pop
loopne
hlt
das
pop
inc
push
aam
fstpl
pop
sbb
loopne
fwait
rcll
xchg
push
rorl
mov
jns
movsb
sub
cmpsb
jg
jmp
xchg
and
sti
out
push
fxtract
sub
dec
sbb
pop
ja
or
dec
int3
leave
in
outsl
mov
push
cmpsl
adc
lods
jle
rcr
push
rorl
aam
dec
and
loop
js
adc
mov
xchg
fadds
out
dec
shlb
lea
add
out
cmp
inc
cmp
pusha
lea
call
shlb
test
lahf
sub
nop
pusha
lods
fnstsw
dec
jns
push
add
in
mov
pop
out
add
in
imulb
pop
inc
cmp
cmc
jne
adc
scas
into
or
and
testb
push
jno
roll
mov
add
in
mov
repz
push
lahf
mov
adc
fidivs
adc
cli
cmp
cld
xchg
push
mov
jmp
stos
lds
loopne
dec
scas
push
and
xchg
mov
xchg
push
imul
jl
js
mov
cmc
lret
je
scas
rcrl
xor
bnd
lods
cs
cmp
imul
pavgw
aad
add
nop
pop
enter
mov
mov
aas
pop
out
test
out
cwtl
dec
mov
pop
or
mov
jmp
mov
dec
xchg
imul
sub
jge
idivb
jae
xor
fsubrs
cmp
pop
repnz
cmpsl
pushf
dec
adc
movsl
ja
pop
mov
inc
and
js
sub
rorb
and
xchg
shll
mov
sub
inc
repnz
and
test
sbb
mov
in
cld
pop
cmpsl
addb
das
push
out
ret
repz
scas
movl
mov
sbb
insl
sahf
insb
dec
cmp
stos
stc
mov
add
mov
ret
hlt
cld
add
xchg
std
aas
push
push
cmp
cwtl
idiv
mov
add
fwait
mov
jecxz
mov
call
addb
ror
test
mov
inc
repz
ret
test
nop
jns
xor
data16
xor
rcll
push
push
js
mov
shrl
sub
aaa
hlt
pop
add
mov
xor
push
frstor
sbb
aad
imul
jnp
ljmp
popf
or
out
or
dec
add
je
and
jns
push
xchg
rol
bound
pusha
fcoml
fldenv
xlat
dec
push
stos
movsb
das
xchg
mov
and
subb
cmpps
inc
mull
jmp
push
push
sub
aad
jns
add
cmp
push
inc
orb
mov
jnp
subb
sbbb
inc
dec
jo
sub
mov
or
insl
push
push
jns
in
cltd
pop
jecxz
icebp
mov
test
lock
add
xor
jo
aad
fnstcw
stos
lret
mov
push
push
cmp
cmpsl
xor
fsubs
push
cmpsb
push
cmp
fldt
das
push
sarb
loopne
inc
mov
sub
cwtl
mov
dec
lret
fisubrl
and
fwait
test
call
roll
lock
out
pop
in
call
dec
insl
mov
pushf
rcl
cmp
out
sub
jo
add
inc
pusha
push
jo
test
mov
lds
mov
shr
sub
mov
xchg
hlt
lds
mov
jmp
pop
or
fs
cltd
mov
mov
push
test
cli
int
loop
lcall
push
xor
dec
fidivrs
ret
jecxz
addr16
pop
lock
dec
divl
xchg
cs
lahf
sub
sarl
xchg
cmc
je
insl
xor
inc
xchg
cmp
sbb
mov
cmp
ja,pn
mov
inc
push
mov
scas
movsl
xchg
out
dec
mov
xor
xor
shl
icebp
jg
aaa
into
ss
stos
pop
add
pushf
and
les
inc
jmp
call
lret
jl
mov
enter
pop
aaa
ljmp
mov
pushf
es
pusha
out
lret
out
jns
cmpsb
test
inc
dec
test
imul
inc
add
dec
xchg
mov
sub
jmp
icebp
testl
mov
mov
add
lret
push
in
mov
push
pop
loopne
cli
iret
sahf
loope
cmp
xor
hlt
pop
and
xor
xchg
dec
mov
and
xor
sub
popa
add
mov
scas
jmp
fbstp
fs
pushf
in
pop
cmp
mov
daa
stos
loope
stos
in
hlt
movsl
scas
aas
pop
push
sbb
fnstsw
push
mov
adc
lock
outsb
mov
mov
push
in
out
loopne
mov
inc
insl
clc
xchg
mov
cs
xchg
in
mov
insl
adc
or
pushf
rorl
jnp
inc
xchg
mov
add
sbb
jg
icebp
gs
xchg
add
push
mov
jmpw
cwtl
jle
fwait
push
mov
mov
in
push
js
lods
ja
cld
adc
adc
cmpsl
pushaw
or
outsl
inc
and
mov
jg
fadd
fcmovbe
mov
int3
mov
inc
ror
cld
cmp
xor
add
popf
cmp
xchg
jmp
adc
ret
jecxz
push
add
insb
mov
pop
mov
sub
jae
xorl
xchg
lds
pop
push
mov
mov
idivl
inc
inc
inc
add
or
mov
push
add
fildl
or
dec
adc
mov
sti
stc
popa
inc
in
inc
and
push
jmp
push
mov
inc
hlt
pop
mov
lock
cwtl
jno
ja
imul
mov
lahf
sub
iret
sarl
pop
xchg
jle
xor
cmp
int3
adcl
test
or
mov
xchg
mov
add
ret
xor
stc
addr16
fs
icebp
push
lds
xor
je
lahf
push
bound
arpl
xlat
xchg
popf
lea
or
out
inc
testl
call
inc
pop
pusha
inc
in
fistl
xor
test
fnstenv
leave
mov
adc
inc
outsb
jnp,pn
mov
sub
xor
imul
and
jb
ret
arpl
imul
and
pop
or
mov
adc
sti
fdivp
mov
push
mov
dec
ret
mov
mov
xchg
xchg
pop
or
cmc
jnp
jle
add
jmp
test
nop
lods
mov
popf
jbe
xor
jge
daa
scas
jmp
or
add
test
ret
popf
lock
or
or
cwtl
cmp
pop
jo
cld
lods
add
xchg
add
decb
in
cmc
xor
or
adc
mov
sti
imul
xchg
out
add
jbe
and
inc
fdivs
xor
mov
add
int
sub
sub
mov
inc
xchg
mov
repnz
arpl
ja
sub
dec
es
sub
xchg
cmp
je
frstor
cmpsb
nop
mov
cwtd
jns
addb
ds
and
cmp
notb
lods
inc
popa
pop
addb
jmp
pop
xor
wbinvd
mov
ja
stc
pop
mov
fstpl
jl
inc
bnd
cmp
or
ljmp
sub
sub
inc
test
sti
sub
sub
push
call
loope
movsb
or
gs
xlat
into
in
xor
mov
mov
push
xor
cwtl
mov
test
inc
loope
jmp
mov
clc
cli
in
punpckldq
test
push
push
clc
pop
push
cmp
xor
sbb
mov
sarb
lcall
mov
push
cmp
test
iret
cld
xchg
popa
xchg
mov
shlb
fstl
mov
push
jne
cmpsl
xor
jae
xor
cli
mov
aad
dec
dec
adc
or
jo
imul
mov
hlt
push
incb
repnz
pop
pop
cmovbe
arpl
adc
mov
pop
pop
lret
pop
decl
sub
test
loope
xchg
jmp
dec
pop
jns
ss
mov
xlat
jmp
fmulp
and
dec
mov
ret
and
push
push
iret
divb
xor
aas
stos
jmp
xor
inc
pop
sbb
adc
int3
jecxz
nop
and
inc
jb
pusha
cmp
test
dec
cmpsb
lods
push
jae
lock
xorl
test
in
aas
jle
dec
pop
jecxz
in
mov
pop
mov
and
pop
cmc
or
scas
out
or
gs
ljmp
add
mov
test
in
sub
das
stc
xor
fsubrs
mov
nop
ja
cmpsb
jmp
xlat
xchg
sbb
fs
fistpll
or
aad
or
inc
inc
lahf
cltd
xchg
and
mov
cmp
jb
mov
psubw
int
rcrl
pop
scas
mov
push
aaa
push
jo
dec
push
popa
ja
xor
call
leave
outsl
movsb
fisubrs
sti
int
scas
xor
lahf
inc
rcr
int3
subb
adc
xchg
sbb
ret
or
out
inc
pop
adc
mov
jo
push
or
cmpsb
push
pop
pop
gs
or
and
movsl
fldt
push
pop
ds
imulb
mov
movsb
test
push
mov
mov
cmp
or
mov
loope
imul
push
sub
mov
nop
out
jae
dec
mov
call
ds
adcb
imul
sbb
dec
fcoml
mov
mov
xor
lcall
movsb
mov
adc
cmp
sub
cmpsb
jne
jp
cmpsl
adc
cmp
jmp
lock
pop
sbb
repz
rol
jno
push
mov
push
jo
mov
cmpsl
cmpsb
or
mov
scas
and
rcrl
adc
push
adcb
mov
cs
insb
cmpsl
jge
inc
adc
test
iret
mov
jns
sub
adc
mov
nop
add
add
xchg
mov
hlt
out
aaa
cmp
add
cld
mov
add
cmp
push
lret
rcll
out
and
or
fwait
mov
jno
mov
fsubr
mov
loope
mov
mov
popf
lds
cld
mov
push
ret
hlt
int
add
rolb
push
insb
mov
ret
loopne
mov
jp
hlt
pop
pop
push
sbb
enter
test
xor
or
mov
inc
cmpsl
scas
scas
sub
cmp
roll
dec
mov
add
jno
dec
dec
loope
enter
pop
sbb
movsl
in
jge
or
sub
and
cmpb
pop
inc
cs
dec
int3
out
mov
lret
xor
fisttps
sub
mov
imul
and
sub
add
jno
outsb
lods
lods
imul
sub
inc
sbb
pop
push
add
push
jg
push
xor
test
nop
int
jmp
xchg
andb
and
jae
and
lret
pop
adc
sbb
popa
stos
xchg
add
movsb
jl
imul
out
shl
push
mov
mov
or
popf
xor
xorl
inc
cmp
push
lea
loop
jmp
lret
gs
mov
inc
jg
cltd
xchg
aam
mov
push
adc
sbb
mov
xchg
into
sub
xor
cwtl
xor
mov
xchg
inc
and
std
daa
es
cmp
pop
gs
data16
jp
cmc
cs
xor
je
push
cs
push
pop
dec
in
enter
shll
pop
inc
out
je
mov
push
loopne
mov
adc
out
mov
push
fcmovu
cmp
mov
in
xorb
pushf
fisubl
dec
and
xor
stos
lcall
mov
adc
enter
push
inc
mov
addl
add
add
pop
add
add
addb
addb
add
pop
add
addb
add
lock
orb
add
xor
add
mov
add
pop
add
add
add
add
addb
add
pop
add
add
add
add
add
add
addb
add
clc
add
addb
add
adc
add
sub
add
inc
add
addb
add
pop
add
addb
add
jo
add
mov
add
mov
add
add
add
add
add
pop
add
mov
pop
add
rolb
add
call
pop
add
add
add
sbb
add
xor
add
pop
add
add
add
add
add
add
pusha
add
orb
add
add
nop
add
adcb
add
add
add
add
addb
add
pop
add
add
add
add
subb
add
or
or
add
loop
add
testb
adcb
addb
add
and
add
inc
or
sbbb
add
or
or
add
loopne
add
clc
add
adcb
add
pop
add
add
add
add
add
pop
add
add
add
add
inc
add
add
pop
add
add
add
add
push
add
add
pop
add
add
add
add
pusha
add
add
pop
add
add
add
add
jo
add
add
add
pop
add
add
add
add
addb
add
add
add
add
add
nop
add
add
pop
add
add
add
add
mov
add
add
add
add
add
add
mov
add
add
add
pop
add
add
add
add
rolb
add
add
add
add
add
rolb
add
pop
add
add
add
add
loopne
add
add
add
pop
add
add
add
add
lock
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
adc
add
add
add
pop
add
add
add
add
and
add
add
add
pop
add
add
add
add
xor
add
add
add
pop
add
add
add
add
inc
push
add
add
add
pop
add
add
add
add
push
push
add
add
add
pop
add
add
add
add
pusha
push
add
add
add
pop
add
add
add
add
jo
add
add
add
pop
add
add
add
add
addb
add
add
add
add
add
add
add
nop
push
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
pop
add
add
add
add
add
push
add
add
add
pop
add
add
add
add
add
push
add
add
add
pop
add
add
add
add
add
push
add
add
add
pop
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
pop
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
pop
add
add
add
add
addb
add
add
in
add
add
add
clc
sbb
add
add
in
add
add
add
adc
add
call
add
add
add
add
adc
add
in
add
add
add
inc
pop
add
test
add
in
add
add
add
cwtl
incb
add
add
add
add
add
stc
add
push
add
add
add
add
and
add
add
add
loopne
add
test
add
in
add
add
add
js
add
push
add
add
add
add
add
in
add
add
add
dec
pop
add
adc
add
in
add
add
add
pop
pop
add
or
add
in
add
add
add
pusha
pop
add
insb
add
add
add
add
add
add
pop
add
faddl
add
in
add
add
add
test
add
aam
add
in
add
add
add
jl
add
inc
add
add
add
add
add
add
pop
add
mov
add
add
add
add
add
add
add
add
add
add
sbb
add
in
add
add
add
xor
add
add
add
add
in
add
xor
add
in
add
add
add
and
add
add
add
add
add
add
add
imul
add
add
add
add
add
add
add
add
in
add
add
add
sbb
add
in
add
add
add
cmp
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
in
add
add
add
push
scas
add
pop
add
add
add
add
add
add
add
add
add
in
add
add
add
pop
scas
add
push
add
add
add
add
add
add
add
add
in
add
add
add
push
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
in
add
add
add
add
inc
add
dec
add
add
inc
add
push
add
dec
add
add
inc
add
dec
add
inc
add
add
pop
add
add
inc
add
add
push
add
add
dec
add
add
dec
add
inc
add
or
inc
add
dec
add
push
add
dec
add
inc
add
add
add
inc
add
push
add
or
add
dec
add
dec
add
push
add
push
add
inc
add
push
add
dec
add
push
add
push
add
push
add
dec
add
push
add
dec
add
add
inc
add
dec
add
push
add
add
push
add
push
add
dec
add
push
add
dec
add
add
dec
add
push
add
dec
add
inc
add
push
add
add
add
pop
add
push
add
dec
add
push
add
add
push
add
push
add
dec
add
add
cmp
add
push
mov
hlt
pop
je
xor
push
xor
insb
test
out
out
xchg
gs
mov
shll
jg
in
cmc
ret
gs
mov
ret
loop
and
xchg
inc
repz
mov
fldt
loope
test
dec
dec
imul
xchg
test
push
xchg
out
pop
inc
fisubrl
xchg
cmp
push
pop
jl
psrad
pop
pop
ds
in
arpl
cmpsb
aad
out
ret
push
jb
cmp
add
repnz
or
dec
mov
sub
and
repz
mov
xchg
sarb
jns
iret
push
mov
test
lcall
andl
dec
sarb
repz
imul
pusha
mov
jl
dec
idivl
adc
xchg
cmp
in
push
lods
lods
xor
mov
pop
pop
sub
enter
scas
push
repz
jne
loope
stc
xlat
pop
arpl
js
and
fcoms
push
addb
jmp
addr16
mov
insb
cmpsb
shlb
lret
call
hlt
nop
lret
cmpsl
fsubrl
fisubl
subb
arpl
mov
pop
cmp
daa
xchg
jl
sub
or
xchg
cmp
sbb
clc
in
pusha
inc
mov
xchg
mov
push
xor
add
pusha
cmp
jl
repz
mov
sbb
mov
and
hlt
xchg
insl
dec
xchg
push
les
adc
jg
shll
and
inc
test
dec
mov
in
aaa
mov
std
stos
dec
and
es
negb
mov
mov
movsb
xchg
sbb
aaa
sahf
fildll
push
push
jl
adc
pop
inc
sbb
mov
push
sub
fnstsw
mov
dec
inc
or
lea
aam
adc
sbbl
mov
jl
mov
mov
movl
ja
ficoml
out
add
sub
adc
dec
sbb
sahf
outsb
mov
lods
js
xor
xor
sub
icebp
loopne
adc
or
mov
jne
in
mov
repnz
ficompl
addb
aaa
fsubr
mov
pop
lds
jmp
inc
int3
mov
jle
fcmovnu
lret
mov
pop
xchg
add
addr16
mov
sti
sahf
mov
outsb
test
gs
dec
inc
xchg
lret
icebp
and
mov
mov
jnp
push
push
sbb
mov
sub
or
in
pop
aam
stos
jmp
lock
jb
shlb
lret
pop
jo
andl
add
clc
cwtl
jge
sbb
clc
xor
mov
into
push
jb
inc
jbe
jne
inc
add
ss
cmp
bound
mov
psubd
les
lods
lret
mov
fwait
sbb
pop
xchg
sbb
and
add
sub
fsubrl
sti
push
fiadds
pop
pop
movsb
sar
add
or
xchg
movsl
ja
push
ljmp
sahf
mov
adc
inc
fmull
pop
int
mov
pusha
xor
movb
mov
div
les
out
sbb
fdiv
insb
lock
add
mov
mov
or
add
lcall
jns
ljmp
xchg
xchg
not
xchg
jns
outsb
or
sub
rcrl
mov
mov
test
sbb
add
test
push
mov
incl
in
jno
mov
mov
in
xchg
mov
je
lahf
push
sbb
clc
cwtl
jmp
dec
int3
xchg
cmpb
pop
movsb
cmpsb
sbb
or
sbb
repnz
icebp
cld
icebp
jle
inc
movsb
outsl
or
and
jne
or
iret
mov
adc
dec
scas
fimull
popa
mov
jns
mov
leave
mov
add
cwtl
mov
dec
lret
cmp
jmp
add
or
rorl
testl
mov
rep
jbe
inc
imul
pop
inc
xor
xorl
inc
mov
ljmp
jecxz
addl
cmp
jp
dec
push
mov
mov
lahf
je
movl
ja
arpl
adc
repnz
inc
gs
iret
mov
or
inc
add
xchg
sahf
push
mov
gs
cwtl
or
in
out
or
rolb
out
int
insb
or
mov
mov
mov
sbb
inc
jo
mov
fcmovnbe
or
add
dec
adc
push
xor
rcl
cmpl
inc
movsl
aad
or
mov
addr16
xchg
hlt
xlat
ja
or
cwtl
in
xchg
and
inc
out
inc
ljmp
fcmove
add
xchg
sti
fwait
and
dec
filds
fisubl
push
cmp
sbb
mov
cmp
adc
xlat
std
rclb
fistpl
rol
xor
cltd
cmc
leave
jl
pop
hlt
mov
sbb
je
aam
xchg
jno
adc
sbb
inc
pop
push
lock
dec
lahf
mov
repz
xchg
jnp
push
out
push
cmc
in
clc
jmp
clc
fs
rolb
or
pop
mov
or
jae
jge
xchg
or
or
sub
sbb
push
movsb
pop
xchg
out
mov
and
enter
fisubs
vmovaps
inc
cld
ja
xchg
es
or
jecxz
inc
icebp
dec
mov
xchg
xchg
jmp
pusha
shrl
in
popf
cmpsl
push
or
push
lahf
stos
sub
pop
pop
mov
fildl
scas
push
movsl
push
fcompl
jge,pt
pop
dec
jae
dec
cs
js
pop
adc
aaa
add
xor
pushf
mov
mov
and
sub
xor
sbb
pop
sbb
jge
or
in
pop
adc
xchg
int
cmp
ds
lea
mov
mov
shr
mov
fldenv
adc
mov
imul
push
fimuls
das
xor
in
push
pusha
imul
stos
clc
ja
push
cmpsl
pop
or
fnclex
sti
test
inc
and
das
jns
or
mov
fs
aas
insl
scas
jmp
push
pusha
push
sbb
sbb
xor
fdivrl
dec
jl
mov
jnp
pop
cmpsb
frstor
out
imul
jae
push
add
data16
pushf
andb
sbbl
inc
insl
fs
sbb
pop
into
pop
ficompl
xor
dec
sbb
xor
and
ljmp
adc
dec
cwtl
adc
rolb
inc
cmp
pop
xor
cmpsb
xchg
sub
mov
mov
pop
inc
push
xor
cs
pop
rep
dec
cld
mov
rol
gs
fmul
dec
and
adc
push
push
xor
adc
jae
mov
jmp
sub
pop
and
std
xor
fs
jl
dec
scas
cmp
or
gs
cs
pusha
enter
add
scas
jno
xchg
xchg
mov
xchg
stc
cmpb
sbb
arpl
dec
mov
adc
mov
mov
push
sub
ret
aad
or
xchg
mov
in
in
sub
push
insl
imul
xchg
out
fstps
xchg
xchg
pop
rolb
pop
cmc
pop
xor
gs
sub
mov
es
addl
sbb
and
shll
pop
jbe
je
out
sbb
sbb
push
adc
andb
cmpsl
dec
cwtl
in
push
dec
and
imul
shll
push
dec
rclb
push
orb
inc
popf
cmpsb
or
bound
or
fs
clc
xor
jg
push
add
pusha
mov
add
mov
in
push
xor
outsb
imul
movsb
outsb
add
dec
test
out
mov
into
pxor
mov
fsincos
sahf
or
adcb
pop
inc
inc
push
int
push
test
xor
dec
lods
adc
xor
imul
lea
or
mov
mov
xchg
inc
pop
sti
pop
stos
push
out
pop
scas
jp
shl
ljmp
fdivrs
idivl
andb
adc
push
add
pop
add
repnz
insb
mov
or
push
mov
sbb
stos
dec
inc
ljmp
jmp
dec
cmp
jmp
shrb
pop
xchg
jae
push
std
or
mov
add
cmp
jnp
push
dec
loope
mov
dec
jle
addr16
dec
adc
dec
adc
iret
sub
pushf
popf
pop
popa
sbb
add
push
mov
add
sbb
and
mov
jle
sahf
pop
lret
ljmp
xchg
lods
andb
and
sbb
lea
jne
cmp
xor
cmp
dec
mov
dec
das
mov
pop
sbb
mov
xchg
mov
cltd
xchg
outsb
jl
jnp
nop
out
mov
xchg
fdivl
testl
push
xchg
stos
push
pop
jecxz
imul
xchg
mov
imul
js
lock
xor
push
int3
sub
pop
stos
mov
pusha
fwait
mov
ret
es
fiadds
bound
out
dec
mov
xor
add
in
cmp
adc
rorb
div
mov
cmp
and
loop
xor
shrl
in
in
sub
pop
mov
cltd
lock
repnz
cltd
mov
js
dec
jae
mov
xchg
mov
inc
mull
jg
add
cs
jo
fidivrl
lcall
add
jno
xchg
cmpsb
mov
enter
stos
jae
enter
xchg
inc
cmp
outsl
outsl
stos
mov
cmp
test
sbb
jnp
mov
inc
jne
xor
fnsave
cmpsb
pop
in
mov
dec
ljmp
and
push
popa
xor
loope
add
test
cmpsl
out
mov
sub
pusha
subl
aaa
out
popa
test
popl
mov
push
and
data16
repnz
mov
iret
lods
mov
addl
call
cmp
int
incb
lret
hlt
popw
xchg
lcall
inc
fldenv
popa
out
jp
mov
mov
sti
fiadds
aas
xor
pop
pop
and
test
movsb
fdivp
out
xor
addr16
lea
test
inc
pop
and
adc
je
and
pop
insb
outsl
or
jmp
lcall
push
lret
lret
sahf
add
or
test
pop
or
mov
push
aas
dec
lahf
sbbb
out
rcr
testl
and
mov
pop
or
fcomps
test
ret
push
jo
adc
cmpsl
outsl
in
rclb
lods
aaa
ret
bound
ds
add
mov
sub
and
cli
push
lods
shl
stos
out
pushf
mull
insl
std
add
fsts
push
es
cmp
inc
lret
movsb
sbb
jno
or
test
dec
or
sbb
incb
clc
xchg
shll
in
mov
sti
pop
fdivrp
addl
icebp
add
imul
add
dec
scas
dec
mov
dec
xchg
mov
je
mov
ss
loope
jae
test
pop
jno
loop
cmpsb
jno
xchg
xchg
push
xchg
cmpsb
cld
and
adc
jge
cmpsb
pop
addb
mov
in
dec
xor
int3
push
je
scas
mov
mov
arpl
je
xor
add
pop
nop
mov
inc
xchg
xlat
ret
inc
cmp
and
pop
dec
mov
stc
push
lods
mov
aaa
dec
push
testb
movsb
cmpsl
std
push
xchg
ss
push
mov
cmc
push
cmp
loop
js
les
faddl
xchg
mov
les
ja
int3
cmp
jae
jle
pavgb
mov
into
int3
sbb
nop
and
out
movsl
push
add
xchg
frstor
movsb
loopne
gs
daa
inc
js
or
rol
lods
stc
xchg
sub
pop
push
leave
push
push
test
jbe
sbb
add
push
xchg
rol
mov
mov
testl
adc
adc
mov
orl
lahf
shlb
out
scas
divb
fisttpll
dec
and
push
aad
rcll
cmp
movsl
xchg
cmpsb
sar
jbe
scas
or
fwait
push
sbb
popf
mov
mov
add
xchg
out
mov
lods
mov
cmp
xor
mov
cmpb
int
push
lods
dec
pop
orps
gs
ljmpw
rolb
mov
mov
lret
xor
push
dec
jae
inc
sbb
sbb
push
inc
add
pop
push
and
xor
push
sbb
out
mov
sub
inc
je
and
daa
dec
push
push
mov
mov
iret
cmp
jge
adc
addl
xchg
sbb
pusha
bound
inc
mov
xor
xchg
sub
lock
xchg
xor
mov
mov
fsubrl
in
inc
test
push
inc
test
out
inc
dec
push
add
lods
jae
cmp
enter
outsl
xor
mov
pop
repnz
jle
pop
xor
out
cmp
rcrl
xchg
icebp
lods
sub
mov
insl
add
pop
push
or
xor
in
push
jns
mov
sub
cmp
jns
jnp
fwait
dec
pop
xor
cmpsl
and
sub
pushf
rclb
xchg
int3
pop
add
xchg
test
mov
dec
pop
imul
sti
stos
mov
repz
adcl
and
jb
mov
dec
daa
lods
sub
mov
xchg
jne
fcmovb
pop
fwait
or
mov
dec
xor
push
inc
xchg
mov
cld
lahf
jns
jb
repz
add
imul
mov
sbb
call
add
dec
mov
mov
xchg
subb
jmp
and
rorb
inc
mov
adc
mov
jo
mov
scas
data16
subl
sbb
inc
mov
fists
orb
rep
gs
int3
sbb
add
sub
mov
bound
out
cmp
leave
jecxz
dec
lea
shll
or
shr
call
add
out
stos
push
mov
arpl
jne
fnsetpm(287
nop
mov
lret
imul
xor
lods
xor
jl
push
aas
std
callw
and
daa
dec
stos
movsl
icebp
xor
aaa
mov
imull
mov
out
xor
push
repnz
dec
in
xchg
cmpsb
xchg
mov
fwait
and
das
pusha
cmp
mov
mov
xor
stc
rcll
sub
jge
push
sahf
sub
aam
and
push
out
lock
test
and
push
arpl
dec
pushf
rolb
xchg
test
ret
mov
mov
fwait
inc
xchg
push
adc
cli
std
inc
xchg
out
aam
imul
test
jmp
pusha
scas
leave
movsl
lret
push
shrl
popa
mov
jl
lea
jp
xor
inc
fsubl
gs
fs
or
inc
fnstsw
jnp
jbe
mov
mov
xchg
outsl
xor
add
in
icebp
mov
roll
add
xor
daa
ret
add
iret
sti
stos
sbb
imul
mov
push
push
and
iret
push
add
test
mov
test
movsb
bound
ret
cmpsb
stos
xor
and
imul
out
inc
lahf
pop
inc
inc
fdivs
jbe
mov
mov
cmpsb
scas
mov
xor
cwtl
jp
push
in
xor
lahf
movsl
push
int
imul
sub
cmpsl
mov
add
sbb
insl
mov
mov
test
jl
js
pop
push
fucomp
scas
push
pusha
loopne
push
xchg
lods
repnz
leave
jno
popa
push
dec
jmp
stos
iret
hlt
mov
adc
pop
cmp
inc
iret
ficomps
jne
xlat
pop
dec
push
out
jnp
shlb
addr16
or
stc
daa
cltd
and
and
cmp
inc
adc
inc
pop
call
cmc
sbb
lods
add
or
fidivrs
and
inc
insl
aas
xor
and
cmp
sarl
or
cli
ja
xchg
ja
xchg
sarl
mov
add
fists
addr16
sub
mov
pop
lea
test
fidivrl
pop
arpl
or
xchg
push
mov
ret
ljmp
insl
imul
pop
subb
lcall
add
mov
negb
lock
lock
and
mov
icebp
in
iret
rcrl
sub
push
push
les
mov
movsb
sub
sbb
cmp
or
add
es
lock
mov
in
jp
xor
push
std
jns
test
imulb
cmc
andl
neg
movsb
fmull
lret
pop
std
xchg
xor
inc
mov
adc
loopne
lret
mov
add
int3
and
fptan
pcmpgtw
add
push
ret
cmc
mov
and
jge
mov
push
xor
popf
mov
ja
pop
ret
push
xchg
bound
or
jmp
jo
scas
cmp
outsl
cli
icebp
fisttps
mov
int
ficomps
sar
mov
and
pop
sub
cmp
adcb
sbb
das
push
imul
xchg
pop
jne
and
fmul
push
adcl
fldt
mov
cmp
pushf
arpl
int
adc
nop
cmpsl
aam
fldl
push
sub
pop
repz
popf
add
push
push
shlb
mov
outsl
fwait
and
sbb
pusha
jo
ljmp
aam
sub
test
adc
stc
inc
or
enter
ds
int3
shl
mov
enter
xchg
jp
mov
push
mov
dec
mov
ljmp
rcll
rcrl
outsl
ja
cmp
insl
xor
mov
cmp
push
in
mov
or
or
das
and
cmp
ds
jo
fisubl
sbb
or
cmp
sub
fdivr
fwait
shll
mov
aad
dec
add
mov
out
mov
dec
enter
daa
add
fwait
sbb
loop
adc
cltd
out
shlb
mov
outsb
inc
nop
fdivrl
or
outsl
push
cmp
xchg
jl
dec
cmovbe
mov
addl
jecxz
mov
std
adc
lock
sarb
cld
sub
cld
jmp
sub
fbstp
sti
xchg
mov
mov
fsubrs
mov
outsl
cmp
lret
das
sub
or
out
push
loopne
lcall
lret
adc
cltd
inc
or
mov
or
and
jl
inc
pop
and
addr16
jo
add
pusha
bound
pop
mov
inc
sbb
dec
jge
leave
mov
out
cmp
push
jae
test
xchg
out
cmp
or
dec
stos
pop
and
cs
mov
lahf
ss
scas
mov
les
inc
mov
out
or
js
mov
jo
or
xor
nop
push
ja
test
rol
pop
insb
mov
cwtl
cmpsl
das
xor
mov
inc
inc
lahf
test
outsb
or
mov
cs
ds
popf
clc
lahf
shrb
jmp
fidivrs
and
testb
scas
in
leave
jae
out
mov
pop
add
aaa
mov
aad
lds
fildl
jae
jae
sbb
ret
out
andl
clc
xchg
xchg
movsl
fstpt
add
jle
and
fcmovb
or
mov
adc
push
enter
cmpsl
mov
fdivl
sbb
xor
jbe
jbe
ret
push
or
shll
pusha
adc
repnz
dec
or
sahf
mov
or
int3
dec
xor
or
mov
or
fwait
jmp
cmpl
jge
or
ljmp
nop
xor
repz
push
and
push
sub
mov
mov
mov
aas
inc
or
mov
and
push
mov
xor
in
shlb
outsl
lret
insb
sbb
mov
mov
movsb
adc
test
fwait
cli
add
pushw
popf
popf
cli
adc
arpl
repnz
repz
jno
lock
dec
fdivrs
pushf
pusha
ret
addl
testl
pop
je
fsts
mov
repz
pop
adc
je
inc
int
mov
mov
add
push
or
sbb
xchg
data16
daa
jle
in
push
fistps
adc
cmp
dec
jecxz
jle
mov
xchg
cmpsb
dec
mov
imul
popf
popf
sub
into
inc
xchg
mov
aas
hlt
inc
sub
gs
xorl
inc
sbb
movsl
jo
mov
scas
dec
cmc
lea
jo
xor
mov
sqrtps
dec
subl
jne
push
shll
or
jg
outsl
xchg
sub
xor
add
xchg
push
pop
scas
pusha
push
inc
sbb
in
in
lods
mov
out
je
arpl
test
insl
pop
in
cld
outsl
push
pop
lahf
sbb
idivb
sub
clc
int
clc
sub
or
xor
push
xchg
sub
nop
mov
aad
push
mov
xchg
bound
mov
push
stc
fcomps
xor
fmul
test
push
cmpsb
ss
mov
out
pop
mov
and
shl
or
add
xor
aas
and
repnz
jl
test
jle
jnp
push
hlt
add
fiadds
sbb
xchg
mov
and
xchg
leave
cmp
cmp
dec
out
shlb
notb
shlb
and
out
movsl
mov
cltd
push
dec
pusha
mov
cmp
mov
xor
and
aam
ret
es
pop
lods
movsl
test
in
mov
sub
dec
outsl
mov
cs
xchg
out
mov
out
push
test
xchg
inc
xlat
mov
int
clc
mov
daa
or
jle
xchg
mov
hlt
or
out
das
xchg
fidivrs
imul
mov
add
adc
cmpsb
stos
and
jle
fisttps
adc
dec
leave
test
loopne
jmp
ret
xchg
xor
fstl
dec
fcomp
jle
cmp
dec
push
inc
add
push
std
pusha
inc
lods
adcb
pop
paddb
shll
inc
int
pop
push
adc
xor
mov
dec
lods
jne
je
cmp
mov
ja
je
dec
adc
dec
inc
icebp
jle
push
fsubrl
dec
pushf
outsb
sub
leave
ret
jl
jge
js
stc
jl
add
mov
scas
mov
scas
icebp
pop
add
das
bound
mov
lahf
cmp
xchg
test
hlt
jmp
xor
lods
dec
sub
sbb
pop
and
gs
jo
lods
inc
xchg
jno
int
imul
push
out
push
sub
adc
xchg
pop
add
aam
pop
bound
inc
xor
dec
lahf
insb
cmpsl
fsubrs
js
push
loope
jg
fdivrp
test
jne,pt
int3
lret
pop
cmpsb
mov
xor
lret
je
mov
sbb
xor
outsl
shll
lock
jp
push
dec
sub
outsb
out
mov
out
bound
popa
cs
mov
adc
jns
outsl
test
sbb
push
jno
cltd
lds
mov
xchg
vpackuswb
xchg
or
xchg
scas
xchg
mov
mov
ds
push
xchg
mov
push
add
rcrl
mov
fwait
divb
push
pusha
dec
jmp
std
mov
out
cs
inc
cmpsb
inc
jge
sahf
in
mov
dec
sti
rolb
mov
inc
dec
push
in
and
das
pop
insb
scas
insl
ljmp
lock
mov
cmp
mov
subb
pop
mov
pop
ss
adc
xor
insb
arpl
shrb
xchg
mov
and
xor
out
pop
push
cmp
and
pusha
je
aam
stc
mov
or
cmp
jecxz
push
push
jg
out
gs
fsubr
push
dec
daa
sahf
mov
movsl
push
push
int
out
aas
fstpl
xor
xchg
sahf
dec
and
jle
push
sub
add
cwtl
push
gs
call
jp
jne
hlt
aas
mov
mov
mov
dec
push
outsb
lds
fisubrs
cmp
jns
mov
ljmp
and
sti
addr16
std
fistps
and
xor
push
cmp
loopne
es
pop
dec
mov
in
je
lcall
dec
mov
loope
incb
std
imul
into
lea
mov
mov
scas
aas
or
sbb
aaa
insl
mov
and
repz
add
mov
or
dec
xorl
hlt
orb
outsb
in
dec
repz
lea
or
daa
dec
mov
into
leave
arpl
ret
mov
fmuls
sbb
push
fs
inc
or
fadd
pop
lahf
subl
dec
cld
jp
mov
inc
addr16
adc
insl
xchg
lock
xor
mov
daa
shl
data16
ljmp
add
push
xor
fs
adcl
push
jge
cld
pop
cli
insb
push
cld
bndstx
cs
test
cmp
add
push
fsts
mov
xchg
sti
ret
inc
inc
jnp
pop
add
lahf
adc
inc
js
stc
js
test
push
ret
push
mov
jo
cld
lcall
mov
xchg
cmpsb
js
retw
loope
cld
in
sbb
mov
insb
bound
fldt
inc
xchg
pushf
add
ja
mov
adc
rcrl
xchg
incb
stc
mov
adc
push
sub
cmp
ret
inc
mov
inc
insb
pusha
and
xor
mov
sub
sub
mov
repz
repz
mov
insb
or
lret
imul
inc
daa
and
sbb
out
test
mov
or
add
aaa
mov
lods
add
inc
or
fwait
mov
inc
popa
dec
xchg
cmp
and
xchg
aaa
mov
in
fcoms
aad
jb
mov
lahf
pop
cmpsl
les
add
shrl
sub
push
add
insb
adc
inc
push
test
adc
orl
cli
dec
sti
push
int
jmp
jl
shll
out
les
sub
pop
fcmovnu
jg
mov
dec
stos
jp
xor
popf
rclb
into
pop
pop
jl
shr
jbe
out
insl
outsb
das
insl
pusha
stos
pop
xchg
icebp
cmc
push
pop
std
xchg
xor
push
cmpsb
daa
shrl
iret
mov
xchg
and
dec
xor
pop
les
insb
mov
sbb
inc
push
aad
mov
and
frstor
sbb
mov
mov
shl
and
cmp
pop
or
into
add
xor
sbb
dec
loop
lods
ss
je
add
clc
cwtl
repz
mov
sbb
add
cwtl
sbb
push
inc
lock
adc
xlat
cld
mov
inc
push
inc
sbb
aas
jae
adc
mov
divl
mov
in
cmpsl
fdivl
or
push
mov
popf
xchg
adc
pop
mov
mov
arpl
into
jl
js
sbb
stc
push
out
push
pop
xor
clc
ret
lret
add
mov
loopne
and
out
das
loop
popa
fdivp
mov
popf
push
cmp
aas
in
popf
xchg
testl
in
sbb
mov
dec
or
mov
push
adcl
out
inc
pop
cmpsl
bound
and
scas
pop
jecxz
and
jns
sub
and
divl
inc
aas
lret
push
mov
subl
and
push
aaa
test
mov
aam
sbb
push
popf
in
scas
jno
aas
jne
stos
xlat
rcrl
xchg
add
decl
insb
dec
decl
inc
sub
bound
cltd
sahf
pop
out
and
je
sbb
xchg
insb
sub
aam
and
push
enter
pop
adc
out
mov
adc
mov
mov
out
ret
jne
jecxz
rorb
aas
fmuls
dec
cmp
mov
dec
mov
xchg
fsubl
xorb
mov
mov
ljmp
sub
and
loope
mov
inc
nop
mov
or
pusha
test
push
lahf
bound
mov
xlat
pand
xor
mov
push
and
shrb
xchg
popa
or
addl
xchg
test
mov
enter
pop
cld
lret
pop
add
xor
sub
push
sub
sahf
xlat
inc
dec
xor
adc
sti
je
jp
std
or
push
pushf
sbb
scas
push
ret
jmp
fstp
jge
pop
cmp
xor
mov
mov
loope
push
int3
dec
int
loope
mov
pop
and
adc
xchg
push
seta
jp
dec
mov
xlat
xor
inc
mov
cltd
xor
sbb
xchg
xlat
xor
inc
sarl
stos
push
xchg
imul
fs
cmp
push
aad
jmp
test
nop
clc
aas
je
add
or
fadd
adc
sub
inc
fimuls
or
loop
sub
jp
cwtl
jle
test
in
out
xchg
push
sub
test
dec
mov
jmp
xor
inc
mov
jp
and
insl
mov
lea
add
fwait
mov
fadds
ljmp
sbb
js
push
in
adc
mov
jg
cmpsl
shl
es
jo
sti
ds
insb
jmp
iret
cmpsl
sub
test
in
mov
adc
lcall
inc
jmp
pop
mov
inc
rolb
testl
adc
fs
cltd
mov
cltd
push
mov
loope
push
push
bound
and
insl
cmpsb
cld
pop
push
test
push
inc
jge
jns
cmp
icebp
push
mov
arpl
outsl
jge
jl
xor
fiaddl
push
jmp
sbb
xchg
or
mov
mov
popa
lcall
or
daa
mov
inc
in
int
insl
lds
mov
mov
xor
add
xor
add
mov
ljmp
fdivrs
out
push
mov
test
lea
lret
pop
fdivr
lret
ret
sub
enter
mov
mov
mov
and
test
pop
pop
mov
out
lcall
cs
push
lods
sbb
push
ficoml
xchg
aaa
dec
push
and
lahf
adc
aam
out
pop
cld
add
pop
in
shl
stos
dec
mov
mov
inc
lret
and
push
push
mov
add
push
sub
into
out
aad
sub
push
faddl
cmp
les
sub
testb
pop
sbb
add
pop
lock
fnsave
aad
test
mov
mov
mov
mov
popa
jle
fmuls
faddl
pop
mov
xor
stc
loope
dec
scas
jno
loopne
leave
movsl
leave
inc
push
sbb
enter
lods
jno
jl
jb
push
xchg
std
aad
sarb
push
daa
mov
aad
lods
add
pop
dec
push
pop
dec
adc
and
jp
and
test
imul
insb
push
gs
pop
or
sub
out
mov
setno
int
pop
dec
or
int
xchg
ror
in
aaa
mov
cwtl
rcrl
or
stc
adc
fiaddl
daa
mov
and
in
movsb
mov
in
push
push
jle
loop
mov
cld
mov
inc
in
shlb
mov
mov
fcmove
js
out
sbb
icebp
pop
clc
dec
adc
cld
mov
mov
xchg
enter
scas
data16
add
in
bound
mov
mov
lret
dec
pop
jg
pop
orl
lea
ret
hlt
loope
sti
and
test
addb
stos
stc
subb
jge
clc
jg
mov
fiaddl
mov
sub
data16
jns
or
lods
xor
out
or
imul
and
mov
adc
xor
js
xchg
adc
scas
jle
loopne
push
adc
out
mov
lcall
subb
mov
cmpsb
popa
cmp
push
scas
cltd
and
pop
jmp
sahf
cmp
inc
dec
push
xor
mov
pop
in
bound
ret
inc
mov
jecxz
and
mov
addr16
es
test
outsb
movsl
sbb
out
movb
leave
out
js
pop
cmp
push
ret
or
xchg
sub
ss
push
push
in
cld
sahf
dec
ss
jecxz
movsb
jne
mov
aad
xchg
pop
jno
adc
das
pop
xor
rolb
roll
mov
dec
cwtl
rolb
mov
jp
test
inc
je
push
lds
sub
dec
rcrl
negl
lcall
xor
cld
enter
iret
sub
push
sbbb
inc
lret
cmpsl
jae
xchg
mov
adc
scas
mov
int3
inc
popf
mov
nop
stos
mov
push
in
iret
cld
stos
inc
xchg
mov
lahf
imul
push
ret
xchg
push
movsl
push
faddl
mov
push
out
lock
cmp
push
mov
sbb
test
xchg
out
insl
and
popf
push
or
and
fwait
mov
pop
pop
mov
lods
lret
adc
pusha
aam
lds
test
imul
fnclex
js
gs
loopne
das
inc
ljmp
popf
cmpsb
xchg
ljmp
mov
ret
add
jp
sbb
ss
clc
lahf
incb
ds
pop
testl
jbe
sub
out
int
jo
jge
jno
bound
cmp
stc
in
inc
out
lods
dec
cmp
sub
xchg
outsl
shrb
ret
enter
pop
mov
out
in
ss
mov
mov
mov
push
push
out
notb
adc
mov
jbe
pop
mov
lods
xor
pop
sub
cltd
ljmp
rcl
jae
add
lods
push
fstpl
dec
sbbb
xlat
dec
in
test
inc
push
and
cmp
pop
sbb
dec
push
cli
dec
add
int3
pop
xchg
cmp
nop
sub
push
fstpl
cmp
shlb
imulb
push
int3
jmp
cmp
lea
pop
lods
pop
and
out
int
mov
out
cmp
lea
sbb
jo
movhps
out
in
int
sbb
pop
cmp
and
shr
test
js
push
outsb
std
push
out
mov
push
xchg
in
or
mov
adc
xchg
mov
lea
cmp
pop
inc
clc
sbb
adc
dec
out
lea
aad
sub
int3
sbb
shll
pop
arpl
mov
in
adc
cmpsl
jns
dec
push
inc
dec
pop
test
int
mov
mov
jmp
gs
lds
ja
xor
call
add
pop
cli
js
pop
sub
push
adc
sti
arpl
mov
add
push
adc
xor
push
test
movsl
mov
sub
imul
xchg
push
in
loop
jbe
jle
pop
or
sbb
pop
stc
insl
adc
push
stos
jmp
shll
nop
inc
cmp
fs
push
ja
mov
loopne
xchg
pushf
or
push
cmc
stc
mov
fs
enter
sbb
mov
pop
mov
inc
xchg
jns
cli
pop
fcmove
fmull
fimull
icebp
int
out
gs
lcall
cmp
orb
mov
mov
mov
es
sbb
xchg
inc
sbb
adc
xchg
pusha
aaa
cltd
arpl
and
xchg
xchg
mov
push
insb
lahf
mov
dec
add
movsl
dec
lea
sub
push
test
inc
push
xchg
push
movsb
or
jb
push
gs
mov
test
ret
arpl
adc
sbb
adc
ja
jle
mov
test
mov
jno
push
push
clc
inc
ljmp
mov
and
icebp
jns
cmp
lret
inc
je
popf
and
int
mov
out
loope
inc
into
fnstenv
repz
int
popa
mov
ja
push
imul
pop
scas
ret
fidivl
sub
mov
push
lods
pop
dec
arpl
mov
cmpsb
xchg
pop
ficomps
fnsave
mov
mov
ret
pop
mov
je
cmp
fildl
sbb
addl
jge
mov
dec
sub
incb
adc
sub
jno
xchg
mov
cmp
xchg
xor
ffreep
inc
and
icebp
call
ja
sbb
rcr
daa
and
xchg
std
test
push
movsl
sti
xorb
lods
jne
insl
mov
jecxz
das
aaa
jle
dec
dec
cwtl
ja
ss
into
xorb
xchg
xchg
jne
xor
jmp
or
pop
xor
lahf
inc
xchg
stos
idivb
sbb
loop
cli
lods
pop
and
adc
hlt
or
jg
loope
cmp
in
das
lcall
out
mov
daa
and
xor
sub
lock
jp
add
sbb
adc
nop
pop
mov
das
call
cmpsl
and
das
cs
mov
loopne
fiadds
cmp
xor
inc
sub
or
out
jnp
adc
cmp
inc
xchg
jmp
lret
xchg
addr16
test
ror
sbb
jmp
es
push
mov
cli
fsubl
pop
scas
add
or
lret
repnz
jp
inc
add
jmp
lret
xchg
add
jnp
sbb
pop
xchg
mov
cmp
pushf
in
and
and
mov
fstpl
dec
subb
mov
lret
iret
push
ss
dec
or
mov
cwtl
jecxz
jl
wbinvd
imul
fsubrs
in
push
mov
sbb
cmc
mov
add
lods
ljmp
or
cmp
je
add
in
clc
rcll
dec
push
dec
xlat
dec
imul
in
adc
sahf
push
pop
lds
cli
xchg
fwait
pop
sub
inc
pop
jl
in
loope
cmp
lret
sub
shrl
pushf
jmp
sbb
ja
push
out
repz
mov
les
push
jmp
push
xchg
inc
push
cli
inc
cwtl
push
mov
std
inc
adc
cmp
xchg
push
js
bound
mov
aad
xchg
and
dec
sbb
xor
inc
add
mov
loopne
fsub
pop
loop
hlt
dec
icebp
sar
jb
inc
fs
xchg
lods
push
dec
addr16
xchg
insb
mov
cmp
sub
pushf
frstor
mov
gs
xchg
scas
xor
jge
xchg
sub
jp
out
stc
xor
add
in
icebp
pop
dec
sbbl
test
xor
inc
jp
in
js
add
inc
daa
jl
mov
jne
and
jle
pop
xchg
push
mul
lahf
add
lea
sbb
dec
cwtl
loop
cmpsb
push
xchg
fs
pop
subb
cmp
addr16
shl
and
mov
mov
incb
out
lds
imul
inc
push
and
mov
icebp
sarb
leave
rcrb
cmp
pop
dec
mov
pop
ficoms
xchg
push
ljmp
outsb
jno
pushf
cmp
and
imul
aam
and
sbb
pop
add
iret
sti
mov
jp
bnd
imull
mov
sub
push
sub
imul
lcall
cmp
insl
push
xchg
decl
cmp
ss
ds
pop
fadds
aas
sbb
cmp
rcl
sbb
mov
mov
pop
sbb
lods
mov
xor
sbb
lahf
lods
inc
push
outsb
jnp
add
and
push
dec
or
nop
lret
lcall
jne
cltd
fbld
adc
cltd
movsb
xlat
mov
pusha
mov
sahf
inc
mov
call
mov
mov
aam
mov
fisubs
pop
mov
out
push
nop
xchg
adc
mov
add
and
out
sbbl
imul
cmp
inc
dec
loopne
lods
in
xor
test
arpl
adc
push
fnsave
mov
adc
jne
dec
lahf
jg
mov
or
xchg
loope
rcll
fs
mov
dec
sbb
push
jo
xor
mov
int
aaa
push
add
jecxz
xor
sbb
daa
sbb
xchg
sarl
cmpsl
aaa
add
pusha
xor
and
pop
loope
cld
out
or
test
sbbl
das
pop
std
clc
xchg
push
or
and
dec
jmp
pop
hlt
int3
ffreep
inc
fld
divb
jbe
hlt
bnd
adcl
test
jb
imul
cmpb
pop
test
xchg
xor
lret
jae
mov
icebp
xor
outsb
cli
cmp
clc
add
jl
and
lods
in
mov
rcrb
dec
add
and
cli
cmp
pop
mov
xchg
inc
in
cs
sbb
pop
negb
pop
or
data16
xchg
mov
mov
hlt
pop
cmp
mov
mov
mov
pusha
pop
mov
or
js
cwtl
out
and
xor
test
xchg
cs
cltd
cmp
cli
std
or
in
call
xchg
sbb
pop
push
rcrb
insb
push
inc
mov
cli
bound
sbbl
jne
mov
popf
add
loop
data16
mov
bound
push
lea
scas
test
ss
jl
adc
sbb
inc
sbb
imul
cmpsb
icebp
xor
inc
mov
int3
cld
stos
les
sbb
stos
loopne
mov
cmp
or
daa
xor
add
testb
add
cmpsl
leave
sub
gs
loopne,pt
add
popf
call
and
and
mov
jecxz
out
outsb
jmp
mov
inc
sub
stos
mov
xchg
fwait
lds
mov
outsb
pop
ret
pop
iret
lds
stos
sbb
sbbb
sbb
mov
outsl
loopne
psadbw
sbb
push
mov
inc
leave
rolb
test
and
sti
test
xor
cmp
lret
in
fldt
aad
iret
or
test
mov
or
add
lcall
aas
out
idivb
xchg
pop
daa
sbb
in
push
mull
nop
rclb
negb
lock
jg
out
mov
insb
sbb
xchg
xchg
out
xor
xchg
pop
movsb
sub
out
adc
sbb
mov
xor
mov
inc
push
leave
stos
mov
test
jp
push
outsl
sbb
scas
add
or
inc
jl
xchg
ss
dec
ja
inc
mov
push
jbe
jnp
mov
and
sbb
xchg
pop
xchg
dec
cmp
lds
test
in
aam
scas
xor
dec
sbb
xchg
lahf
cld
pop
or
or
fsubl
gs
and
xchg
in
mov
jno
or
inc
ret
lcall
lods
fistl
push
push
loope
stos
pop
mov
arpl
adc
xchg
dec
pop
in
adc
movsb
or
lret
pop
sub
xor
jb
ljmp
or
popf
popf
dec
sbb
jle
lods
lahf
fldl
dec
cmp
arpl
mov
popa
cld
adc
xchg
mov
cmp
roll
imul
push
rclb
jno
dec
pop
jo
mov
push
faddl
mov
outsb
sub
scas
insb
mov
lds
scas
mov
jno
push
jecxz
mov
js
add
jbe
cmp
dec
add
mov
dec
mov
ret
pop
lods
inc
pop
cli
mov
jno
jnp
stc
addr16
loope
and
ljmp
outsl
lock
jecxz
mov
xchg
js
lds
hlt
in
mov
sub
cmc
mov
jno
enter
xchg
mov
inc
nop
mov
and
mov
ljmp
inc
push
dec
cli
mov
add
icebp
das
in
jp
mov
stos
inc
xchg
sbb
fnstenv
jmp
mov
inc
and
push
movsl
and
aas
xor
aaa
mov
cmpb
vcvtps2uqq
and
inc
xchg
dec
cli
push
loop
les
pop
xchg
sub
hlt
lods
pop
lds
test
jo
pop
jle
iret
imul
push
enter
xchg
or
add
add
out
xchg
pop
sbb
pop
push
cmp
aam
jae
int
lds
out
in
inc
out
add
or
jnp
and
xchg
in
out
xor
pop
shrl
sub
adc
lock
cmc
test
pop
inc
fwait
test
imul
lds
call
dec
mov
add
inc
jl
push
add
nop
pop
jae
push
test
or
cmp
mov
mov
leave
sub
jo
movsl
imul
or
cld
les
mov
sbb
fcoml
fwait
or
xor
xchg
sub
clc
test
mov
fs
jo
stos
xchg
les
ds
test
jl
add
or
divb
inc
neg
xchg
ret
pop
fmulp
aas
sahf
rorb
xchg
inc
adc
in
pop
mov
dec
xlat
mov
faddl
push
sub
rclb
cmpsb
jns,pn
loop
movsb
dec
div
mov
enter
push
jae
xchg
adc
bound
add
arpl
orl
pop
cmc
xchg
into
cmp
dec
lret
fcmovbe
repnz
mov
fwait
mov
lret
cld
test
movsb
ret
xor
sbbb
inc
adc
daa
sbb
imul
xorb
add
pop
les
jbe
and
int3
jbe
or
adc
aad
dec
and
rcrl
or
lcall
cli
mov
bound
outsl
cmpl
xchg
pop
rep
daa
jle
addr16
fsub
imul
dec
xchg
pushf
insl
jg
and
incl
mov
scas
sub
jmp
fs
cmp
out
scas
cwtl
sub
and
popa
sbb
cmc
cmpsb
mov
jmp
xlat
sub
inc
jg
add
add
aaa
scas
sti
lcall
out
rclb
sbb
hlt
es
push
imul
push
out
ficoms
adc
es
jns
dec
jl
loopne
adc
arpl
lret
lods
ljmp
cmpsb
mov
inc
mov
test
loope
insl
std
pop
or
loop
daa
pop
dec
mov
enter
leave
add
movsb
xchg
xchg
imul
mov
inc
rorb
jnp
jne
faddl
cltd
out
stos
add
fists
sbb
sbb
negb
xchg
enter
fisubrs
xchg
add
and
test
sub
enter
cmpsl
jp
xchg
out
in
dec
cli
and
pop
movsl
jne
mov
stos
adcb
mov
sbb
xor
clc
out
ret
shl
inc
and
inc
sbb
push
out
in
sahf
xor
aas
in
dec
std
add
dec
shlb
mov
mov
ljmp
out
jae
ret
jmp
push
xchg
sub
xchg
lock
js
jbe
test
stc
ja
ret
test
jne
out
and
ret
cltd
xor
pop
iret
inc
mov
jb
mov
mov
xchg
jnp
adc
jecxz
cmpsl
mov
and
in
xlat
mov
push
push
mov
dec
add
pop
bound
push
pop
xor
addr16
movsl
mov
test
dec
jb
mov
scas
push
mov
out
sbb
cld
sub
ret
lds
xor
sbb
aad
jmp
xchg
clc
ficompl
movd
add
add
pop
repnz
push
cmp
mov
test
call
xchg
mov
das
jae
outsb
fdivrl
cmp
fsubr
adc
cmpxchg
jb
xor
imul
push
insb
mov
push
out
jle
jge
jmp
rolb
sbb
xor
test
dec
fsub
jle
pop
sub
lods
fisubl
pop
pop
pop
pop
xchg
fldt
mov
push
fldcw
popa
fmull
test
jl
dec
lret
dec
jge
cmp
aam
jb
cmp
push
xor
inc
add
hlt
fildl
jo
pop
inc
dec
sub
xchg
lods
mov
cld
pop
adc
xor
int
push
jbe
adc
and
cli
popf
int
adc
cmp
fcompl
inc
out
in
loope
fxam
mov
iret
dec
dec
mov
or
dec
cmp
adc
out
call
inc
nop
mov
je
movsb
pop
sahf
or
sarl
mov
inc
or
push
gs
xchg
and
imul
in
ret
dec
cmp
data16
or
jo
sub
arpl
js
sarl
adc
ja
xchg
inc
mov
mov
mov
mov
ja
sub
cmpsl
mov
xchg
popf
or
dec
xor
and
out
dec
jge
mov
or
sti
jo
and
mov
or
cs
js
aaa
xor
or
enter
push
xor
xchg
ss
data16
sbb
inc
jge
mov
dec
or
pop
int3
insl
ficoml
bound
fcom
stos
flds
in
sub
test
cli
pop
push
pop
daa
shrb
scas
ret
scas
popf
pop
bound
shld
inc
loopne
aas
mov
into
mov
mov
cmc
mov
jbe
shrl
pop
cmp
daa
out
popa
lret
int3
jmp
rolb
sbb
push
inc
int
out
cwtl
mov
sub
mov
mov
add
test
push
imul
shrb
fidivrs
cmp
push
cld
in
bound
filds
enter
inc
jg
add
lcall
repz
jo
xorl
dec
mov
sbb
xchg
pusha
fimull
sbb
in
cmc
je
xlat
mov
int
pop
popa
test
or
mov
push
ljmp
mov
test
not
lea
sahf
adc
and
addr16
mov
adc
xchg
cwtl
flds
icebp
sti
stos
lods
lcall
aas
push
mov
pop
pop
jns
sub
adc
stc
jl
mov
imul
or
movsb
jle
push
mov
shll
fnop
bound
test
repz
clc
push
sti
ds
dec
rorb
add
js
inc
dec
dec
scas
sbb
mov
xchg
jo
int
add
push
xchg
sbb
mov
aaa
mov
ja
fiaddl
ljmp
ret
and
adc
dec
push
dec
mov
pop
or
jp
les
pop
mov
popa
and
rclb
stos
cmp
addl
dec
sbb
pop
jb
fstpt
int3
popf
cld
lds
sub
push
inc
mov
inc
inc
scas
sbb
sbb
or
fistps
mov
mov
xchg
cmp
pop
sub
hlt
orl
clc
pushf
or
inc
jle
inc
aaa
inc
push
fisubl
xor
mov
jns
cmp
in
stc
mov
push
jl
lret
and
lock
sahf
cmp
inc
mov
divb
mov
cmp
jp
pusha
fwait
mov
add
cli
mov
and
and
pop
sub
xchg
mov
mov
push
dec
roll
push
out
gs
je
lret
ljmp
daa
add
std
add
loopne
sub
push
lcall
mov
mov
movsb
nop
aam
mov
fs
and
lahf
pusha
test
loop
data16
shll
mov
aas
aaa
and
lahf
fcomps
enter
aas
mov
xchg
cmp
jne
xchg
mov
rclb
popf
scas
icebp
outsl
fsubr
jae
add
sahf
xor
pop
leave
je
mov
xor
xor
cmpsb
jg
xchg
adc
xlat
ja
mov
cmp
and
daa
mov
sub
subb
pop
scas
aaa
icebp
pop
icebp
mov
cmp
and
dec
sti
inc
jl
xorl
test
out
nop
cmp
icebp
int3
lods
mov
jns
inc
mov
xchg
dec
fdivl
mov
sub
bound
fmul
cltd
test
add
rcrb
sarb
loop
in
or
iret
repz
test
ja
and
fidivs
fs
push
sbb
bound
iret
and
adc
outsb
mov
or
or
mov
addb
inc
inc
mov
pop
sbb
je
fbld
cmpsl
xchg
inc
lea
mov
inc
ret
xchg
add
cld
and
mov
fidivs
inc
std
js
out
add
jmp
jno
cmp
scas
mov
xlat
lds
sbb
cmp
mov
jae
dec
in
fdivs
bound
jne
stos
outsb
fbstp
add
mov
sbb
cld
dec
hlt
icebp
sub
push
jns
xchg
ss
mov
mov
enter
jnp
fisubl
inc
dec
xchg
xchg
push
popa
stc
stc
dec
xchg
or
cli
pop
in
jae
ficoms
mov
aad
and
sbb
pusha
pop
pushf
lret
test
mov
addr16
and
push
jmp
push
stc
cmp
out
div
je
sub
dec
iret
mov
inc
and
mov
ljmp
sbb
mov
mov
jne
es
xor
lea
pop
add
cmp
mov
stos
add
jo
into
and
sub
add
inc
pop
iret
adc
adc
scas
jne
arpl
out
inc
stos
cmp
fmuls
xor
ja
sahf
adc
call
ret
testl
mov
dec
push
js
movsl
mov
jp
push
cmovp
lahf
push
or
int
mov
sbb
mov
adc
popa
push
lcall
and
xor
push
add
pop
gs
mov
sub
es
imul
mov
mov
or
mov
aad
addr16
jbe
notb
and
push
adc
dec
test
cmp
ljmp
popf
cld
pusha
cli
testl
inc
adc
aaa
loop
mov
sbb
xchg
ss
pop
xchg
clc
cltd
add
pop
cli
and
mov
cs
pop
lret
lods
movsb
mov
popa
add
inc
sub
js
mov
outsl
gs
pushf
jp
mov
adc
pop
fisubs
cmc
bound
out
clc
mov
xchg
xchg
mov
data16
jnp
stc
or
call
mov
mov
mov
test
pushf
or
lods
call
mov
cmp
out
mov
rorl
mov
leave
xchg
ljmp
pop
aad
sub
test
mov
sbb
pop
xchg
push
or
ja
les
std
aam
or
sbb
dec
popf
ret
cmovb
int3
fistpl
mov
mov
out
rol
inc
aad
add
or
and
dec
loopne
mov
xchg
jo
jmp
fiadds
into
adc
jmp
cmp
loope
dec
ja
jmp
xlat
mov
daa
pop
jne
pushf
iret
mov
xchg
lret
cmc
and
adc
jmp
das
pop
jl
jmp
mov
js
aad
ljmp
adc
mov
sbb
push
cmp
nop
fidivrl
mov
lcall
push
int3
xorb
dec
dec
fildl
adc
inc
mov
jp
fwait
rcr
sahf
push
aas
push
mov
stos
sbb
cmp
and
dec
inc
iret
shl
mov
daa
xor
out
addr16
in
loope
and
and
shrb
inc
fprem1
push
xor
sbb
lea
dec
clc
xor
fmull
dec
pop
jl
lret
ds
rorb
das
push
outsl
push
cmpsb
jo
icebp
lock
mov
mov
jecxz
lret
fsts
shrb
scas
adcb
scas
xor
into
loopne
lds
jl
adc
orb
cld
dec
ret
adc
pop
inc
xlat
sbb
jmp
stos
inc
sub
cmp
mov
fwait
sbb
cmpsb
pop
ja
aad
mov
lock
aaa
xor
adc
dec
cwtl
sti
iret
and
test
jbe
cli
adc
adc
jne
pop
outsl
or
adc
outsb
imul
jg
sub
popa
adc
sub
lahf
and
mov
les
cmp
loope
fstp
mov
push
mov
sub
xchg
jb
mov
subl
pushf
xchg
stos
pop
inc
shll
cwtl
imulb
in
repz
mov
and
jecxz
jnp
add
out
sbb
and
mov
fnstsw
sbb
ret
jnp
ds
push
ljmp
scas
push
inc
iret
mov
mov
sarb
imul
jns
xor
sti
add
and
push
xor
les
sbb
daa
dec
hlt
mov
dec
jecxz
pop
repz
hlt
dec
div
jno
add
sbb
movsl
cmc
movsb
js
dec
sub
push
xchg
mov
sub
cmpl
xor
jns
shl
dec
jp
fwait
stc
stos
inc
cld
lods
add
ss
xchg
cwtl
and
insl
push
adc
sbb
xchg
or
dec
loop
scas
pop
jmp
pop
pop
popf
loop
jle
inc
dec
cmp
cmp
lods
out
test
mov
sahf
xor
sub
mov
xchg
sahf
aad
or
dec
mov
orl
nop
test
mov
rclb
or
std
sti
sub
cmpxchg
imul
cli
and
les
adc
push
sbb
ficoms
cmp
jbe
xlat
pushf
addl
mov
sub
push
faddl
sbb
mov
popa
inc
mov
sub
xor
adc
clc
sbbb
aaa
mov
pop
dec
xchg
and
mov
repz
or
cmp
inc
adc
into
leave
mov
fsubl
add
pop
insl
rcrb
push
sub
test
shll
jg
fs
sbb
stos
xor
push
shrb
adcl
les
xchg
ret
sub
test
sar
or
inc
psrlq
test
xlat
mov
or
sahf
xor
in
int
roll
loopne
lea
add
std
xchg
lret
mov
sub
xchg
jmp
stos
cmp
dec
outsb
test
lea
idiv
movsb
jmp
fistl
mov
mov
imul
repnz
ds
lds
add
add
pushf
xchg
xchg
cmp
js
cmc
out
inc
xchg
dec
push
lahf
jnp
lahf
mov
xor
inc
addr16
mov
sahf
sbb
cmc
cmp
test
pop
inc
jb
leave
lock
std
pop
popa
xor
mov
cmpl
jnp
in
aad
xor
xor
shl
xchg
fwait
shr
push
stos
icebp
repz
addr16
jnp
mov
and
cmp
inc
test
lods
push
cwtl
mov
out
stos
pusha
inc
or
ds
add
push
mov
rclb
out
test
add
js
jle
loopne
sub
add
jecxz
pop
add
outsl
jl
mov
push
jecxz
fmull
call
adc
movsl
pop
cmp
rcrl
lea
aam
mov
daa
dec
mov
push
xchg
stos
notb
jmp
and
push
mov
test
lcall
cli
loop
mov
fs
out
sub
movaps
and
xchg
sbb
push
jp
inc
mov
dec
or
ss
gs
stos
fistpll
add
sbb
pop
inc
fisubrs
xchg
repz
js
push
inc
cmp
fbstp
mov
insl
mov
pop
stos
cwtl
jl
stos
insb
mov
add
pop
loope
das
xchg
in
not
mov
stc
or
mov
xchg
cli
sahf
adc
data16
hlt
dec
or
cmp
movsb
dec
jmp
push
and
stos
jbe
push
mov
xor
pusha
mov
pop
sbb
add
push
mov
insb
sub
jg
or
cmp
xchg
les
or
xchg
sub
fbstp
inc
add
sub
push
adc
sbb
std
xchg
popa
movsl
sbb
insb
xchg
pop
lea
pop
mov
inc
mov
cmp
sub
xor
ds
sub
cmp
mov
and
int
add
mov
mov
dec
or
sti
mov
or
mov
or
push
gs
in
xorb
test
arpl
ret
fimull
pusha
das
imul
and
mov
mov
sarl
or
jno
ds
mov
mov
outsb
hlt
or
lods
inc
mov
lret
loopne
dec
mov
mov
ss
je
push
stc
jg
lret
cltd
cmp
xor
sub
lods
test
inc
mov
cld
lahf
xchg
push
test
repnz
decl
or
popa
mov
xchg
push
clc
mov
loop
inc
mov
cwtl
lods
pop
testb
pusha
dec
dec
mov
cli
fists
pushf
test
fnstenv
out
xlat
ret
les
adc
mov
arpl
mov
xor
out
or
push
jl
and
popf
jnp
bound
test
or
sub
pop
sbb
mov
adc
pop
stos
push
dec
and
divl
test
xchg
sbb
jmp
fisttpl
orb
mov
repz
cmp
shlb
repnz
data16
fcoms
in
or
jle
scas
pop
cmp
aam
in
adc
jae
push
and
les
xchg
and
mov
mov
aad
adc
fld
adc
and
mov
inc
fidivrl
dec
cwtl
in
iret
dec
jno
pusha
dec
out
lods
sub
jle
aam
ja
xor
and
cmp
ret
rolb
sub
test
ljmp
notl
push
dec
jle
push
jle
cmc
jnp
xchg
js
inc
outsb
or
ljmp
cmpsb
cmp
dec
out
sub
fwait
push
fucomi
dec
jns
xchg
or
dec
cmp
sub
sbbl
sbb
sub
or
mov
jg
outsb
mov
lods
cmp
in
push
popf
mov
mov
dec
out
leave
sbb
push
movsl
mov
dec
roll
addr16
xchg
xor
daa
aam
add
test
jle
arpl
push
inc
divl
xlat
pop
adc
sbb
inc
stos
lds
sub
scas
leave
repz
or
pushf
inc
scas
or
enter
push
add
movl
xchg
mov
sbb
mov
dec
rorb
mov
stc
mov
hlt
repz
test
inc
push
outsb
push
fldenv
loop
das
xor
push
pop
dec
and
pop
add
aam
mov
mov
rcr
movsb
imul
adc
push
hlt
out
pop
ja
or
movsb
out
out
sub
aad
fwait
imul
xchg
rol
sub
adc
fildll
divb
jl
cld
push
fcompl
xchg
sub
adc
sbb
inc
addr16
insb
int3
aam
pop
js
clc
xchg
mov
pusha
loope
hlt
stc
xchg
imul
pushf
pusha
add
out
lods
jbe
jbe
test
cltd
jge
in
cmc
xorb
cmp
mov
jmp
cli
dec
dec
mov
mov
xchg
mov
out
popa
add
push
pop
sbb
scas
popf
dec
les
cmp
sub
cs
xchg
push
ss
aas
dec
inc
rolb
dec
mov
push
es
out
ds
addb
adc
adc
hlt
test
faddp
xor
lret
xor
sbb
sahf
cmp
mov
push
insb
aaa
das
jo
push
pop
mov
sub
incb
mov
or
in
xchg
push
jg
jmp
mov
mov
lods
sbb
enter
or
xlat
loope
xchg
sub
xchg
psrlq
dec
in
xchg
in
shlb
sbb
pop
das
add
or
inc
gs
push
jns
sbb
cli
cmp
cmpsl
test
repnz
stc
insl
test
push
leave
out
mov
inc
push
inc
sub
nop
or
aas
dec
bound
ret
mov
test
divb
sbb
fdivrs
imul
scas
ficoms
mov
cmc
cli
add
iret
js
mov
lds
insb
clc
inc
das
pop
pop
add
rorb
inc
add
add
xor
add
xor
jb
stos
mov
cmp
cmp
dec
adc
je
cltd
pushf
push
push
ret
adc
pop
mov
mov
lds
mov
es
nop
pushf
sbb
filds
clc
or
cltd
jb
xchg
jns
out
xor
add
faddl
mov
cmp
aas
jnp
popa
and
cmc
push
adc
push
lret
mov
mov
out
sbb
mov
adc
inc
and
fiaddl
sbb
aam
cmpl
add
pop
outsb
dec
mov
les
pushf
cltd
dec
fwait
out
in
xchg
rcrb
and
push
add
loope
jle
xchg
pop
inc
fisubrl
xor
add
in
sbb
sar
push
mov
jnp
sti
and
xchg
mov
scas
sub
fs
pop
pop
movsl
popa
sub
xorl
inc
mov
sar
outsb
aad
sub
jno
sbb
jl
out
xchg
dec
fldl
add
jae
adc
adc
jg
outsl
jnp
dec
jne
test
bound
shr
std
push
pop
push
mov
pop
hlt
fstpl
rorl
adc
mulb
push
jl
jo
cmp
nop
shrb
xor
and
repz
sbb
xchg
sbb
rolb
cmpsb
je
in
dec
sbb
test
imul
dec
cmp
test
mov
push
inc
pop
packuswb
inc
sbb
mov
dec
jle
int3
fistps
notl
sbbl
sarb
pop
fisubs
mov
inc
cmpsb
pop
into
sbb
cmp
cmpl
aad
pop
out
sub
int3
ret
je
scas
mov
mov
xor
mov
or
test
jp
cmpsb
inc
test
add
in
cld
sbb
xchg
inc
adc
xchg
mov
cmpsb
mov
push
frstor
jnp
add
cltd
rol
xchg
push
push
xchg
adc
nop
mov
cmpsl
bound
adc
add
pop
fisttpl
xchg
paddusb
mov
testl
add
aaa
shl
sub
xlat
js
fstpt
dec
pop
adc
xchg
lods
jbe
sbb
add
out
ljmp
insl
cmp
dec
add
and
xchg
sbb
dec
jnp
xchg
jecxz
sub
or
cmp
push
popl
xor
pop
cmp
test
ss
mov
leave
and
xchg
inc
pop
int
push
setnp
cmp
ljmp
cld
sub
push
pop
int
dec
cmp
fwait
aaa
xorl
and
dec
or
mov
sahf
jb
pop
xorl
xor
daa
loope
int3
jl
pop
mov
sysexit
jecxz
pop
push
sub
inc
push
jecxz
sub
fwait
push
pcmpeqd
sbb
lret
adc
lea
enter
dec
ret
mov
in
add
fldenv
loopne
and
cmp
jle
repz
test
test
dec
test
scas
cmp
lea
sbb
dec
clc
or
xchg
test
add
aam
fs
gs
test
in
inc
sbb
fnsave
out
pop
add
jle
icebp
mov
lods
imul
sarb
sub
lods
test
clc
js
mov
pop
cld
dec
pop
movsb
fldt
lods
lret
cmpsb
jg
mov
sub
rcrb
adc
loopne
inc
jb
push
ja
aad
fidivl
xchg
xchg
cmp
cmp
movsl
jmp
sbb
lret
shll
iret
movsl
sbb
cmp
jl
jne
push
pop
pusha
sbb
call
call
xchg
mov
mov
or
jno
rcr
mov
imul
arpl
inc
imul
adc
dec
xor
dec
fildll
xor
rorb
ret
jns
ljmp
les
sub
cli
fsub
or
cmp
or
mov
xchg
dec
test
and
add
pop
push
dec
mov
xchg
hlt
scas
push
jp
popa
fdivrs
or
test
pop
fbstp
pop
jp
pop
stos
lods
dec
jp
cmovge
leave
popf
jl
insb
or
into
push
pop
loope
stc
inc
sub
rcrl
add
mov
xor
cld
call
movsl
es
lds
fisttpl
xor
stc
lea
test
cmp
pop
sub
mov
bound
je
in
push
insl
jg
cmp
mov
repnz
dec
mov
fisubrs
mov
outsl
pop
xor
mov
add
rclb
xchg
sahf
shrb
imul
xchg
inc
and
pop
mov
icebp
bound
pop
cmc
sti
or
bound
rol
jg
sarl
cmc
jne
lret
jp
mov
js
mov
and
data16
adc
cmp
or
jo
fldenv
jecxz
loope
scas
subl
notl
inc
js
pop
inc
sub
jmp
mov
pop
pop
shll
sub
in
mov
xor
and
inc
mov
test
out
stc
xor
jge
les
out
or
jecxz
xor
nop
addr16
pushf
mov
jbe
lods
bound
cmp
repz
fiaddl
mov
add
dec
sub
sub
mov
mov
rorb
gs
and
and
add
ret
jmp
push
lcall
mov
les
subl
jne
mov
add
or
xchg
jl
lahf
pop
js
into
xchg
sbb
and
outsl
inc
aas
bound
jmp
rorl
adc
mov
ds
gs
cmp
bound
inc
mov
lea
cmp
inc
inc
push
add
lods
push
sahf
jecxz
pop
and
outsb
dec
stos
or
pop
imul
mov
stos
pop
shll
adc
cmp
scas
insl
push
jmp
jge
iret
nop
jne
sbb
and
xchg
mov
jbe
add
in
push
inc
sbb
sub
iret
jb
mov
mov
in
inc
push
ud1
sbb
dec
sti
jo
int
subl
dec
test
or
jns
mov
mov
mov
and
pop
gs
ss
lret
push
lods
int3
jne
sub
repz
idiv
pushf
shl
cmc
push
mov
shrb
xchg
dec
and
std
pop
pop
clc
push
fnstenv
idivb
loop
push
test
ja
loopne
sbb
sahf
gs
leave
stos
cltd
mov
pusha
imul
popa
fstp
jle
mov
push
sahf
scas
adc
aaa
xchg
mov
inc
lock
std
mov
xchg
cwtl
outsb
jne
fstpl
fidivs
scas
pop
roll
prefetcht1
mov
or
sbb
xchg
mov
pop
jo
mov
mov
xchg
mov
aaa
pop
bound
push
sub
pop
mov
cld
sub
jno
ds
jp
jl
hlt
pop
push
movsb
stos
adc
aaa
int
out
add
iret
arpl
push
or
lret
inc
fstps
xchg
cltd
sub
imul
xchg
jmp
pop
cli
repnz
in
test
xchg
insl
scas
xchg
rcrb
cs
jne
stos
and
push
sbb
fldl
inc
add
frstor
inc
sti
maskmovq
testl
es
xor
dec
pop
dec
orl
xchg
add
inc
mov
fdivr
fdivl
xor
dec
scas
pop
imul
xchg
mov
and
jle
rclb
pop
icebp
lds
mov
inc
fcmovbe
sub
fdivp
mov
sti
out
push
std
cmp
sub
jecxz
push
add
mov
adc
popa
dec
cbtw
jb
and
imul
dec
cmpsl
push
adc
dec
xor
pop
or
pop
iret
xor
cmc
pop
popf
xchg
call
xchg
dec
roll
ljmp
sub
push
jmp
loopne
cli
jmp
cmc
fwait
xchg
aad
dec
jl
enter
dec
repz
add
or
xchg
icebp
sub
mov
into
inc
lods
push
lds
cs
adc
andl
pop
push
movl
add
out
push
in
flds
ljmp
leave
mov
mov
xor
in
xchg
jle
insb
sbbl
out
cmp
fs
pop
xor
pop
push
flds
into
in
fs
xchg
rorb
sub
test
or
and
mov
lods
pop
mov
sahf
mov
lret
xor
inc
inc
cmp
loopne
pop
rcl
mov
scas
mov
pusha
in
jl
pop
repnz
xchg
jmp
and
leave
inc
sti
lea
sub
jp
rclb
mov
imul
adc
lock
das
xchg
dec
push
dec
pop
mov
into
fs
jecxz
subb
fistpl
fs
clc
das
xor
gs
mov
nop
pop
xchg
sub
hlt
clc
xor
xor
sbb
idivl
sub
addr16
mov
cli
mov
inc
repnz
shrl
pop
jmp
mov
xchg
and
sbb
push
in
hlt
push
xchg
sbb
ficoms
and
xlat
pop
popa
addl
sbb
idivb
xor
jne
pusha
mov
clc
xchg
jmp
inc
in
test
push
adc
shl
or
int3
sub
popa
les
cmpl
pop
negl
not
fsub
push
fcomp
andl
ret
test
xor
mov
fisubrs
ja
subb
pop
xchg
cld
cmp
popa
int
push
push
js
out
xchg
movsb
call
inc
pushf
aas
pop
jle
cmp
cmpsb
cmc
mov
push
pop
data16
and
sub
stos
or
pop
mov
mov
lds
call
lret
popa
js
xchg
aas
loop
aam
addr16
mov
xchg
xchg
ret
push
inc
call
add
cmc
pop
int3
std
inc
int
imul
daa
xor
lods
cld
in
mov
jmp
aas
repnz
mov
xchg
mov
inc
aam
sub
sub
sub
mov
fstps
pop
icebp
out
test
flds
and
das
fnstsw
fnstenv
sbb
mov
repnz
jne
or
adc
jo
and
sbb
test
push
pop
lods
call
leave
iret
xor
lcall
jno
es
pop
and
xchg
mov
aad
pushl
sub
add
push
push
fisttpll
jecxz
in
inc
add
fcoms
mov
mov
mov
mov
xchg
test
mov
or
js
aas
aaa
sbb
fmuls
imul
push
push
arpl
lods
cmp
ljmp
adc
dec
push
push
add
hlt
push
adc
mov
push
jp
sbb
mov
sbbb
pop
fmuls
sahf
mov
push
fcmovbe
dec
cmpsb
jg
inc
cmp
pop
out
cmp
ret
xchg
int3
inc
cld
sub
xchg
xchg
test
fsubrs
faddl
ss
call
push
push
push
int3
cmpsb
stc
sbb
arpl
pop
push
and
mov
adc
jge
push
or
cltd
xchg
fucomp
es
push
pushf
daa
frstor
or
cmp
mov
mov
lret
sti
pop
fcmovb
in
add
cmpsb
push
push
add
rcr
lcall
mov
out
mov
cmpsl
xchg
jmp
cwtl
mov
sarl
pop
imulb
cmp
mov
push
jbe
pop
dec
imul
pop
inc
mov
enter
xchg
repnz
sarl
mov
push
sbb
lea
int3
pop
sbb
push
rcrl
push
pusha
lods
outsb
xchg
sbb
rcrb
jns
cmp
push
dec
iret
jne
mov
adc
mov
push
xchg
push
cld
cmpsl
jne
dec
or
pop
mov
in
mov
pusha
add
mov
das
mov
cli
mov
dec
lock
leave
cs
add
push
fmuls
add
jno
push
jge
cmp
or
shll
ficompl
into
ret
testb
and
and
jae
push
fwait
dec
jg
in
inc
and
pushf
ror
jne
and
dec
mov
push
push
cmpsb
add
xor
addr16
or
mov
shlb
repnz
decl
gs
sub
les
lcall
xor
je
jbe
mov
push
repz
mov
adc
loopne
fisubrl
sti
call
add
lret
inc
into
or
js
xchg
cmpsb
pusha
sub
push
fisubrl
negl
enter
pop
inc
mov
imul
ljmp
js
out
stos
iret
in
stos
cmp
push
rolb
je
testl
inc
jge
in
xlat
jle
xor
xchg
cmpsl
xor
sti
mov
inc
xchg
mov
jmp
mov
sbb
jl
add
std
and
sbb
or
mov
ja
pop
mov
mov
lods
pop
mov
ss
addr16
push
dec
push
cvtps2pi
inc
dec
sub
lods
mov
adc
push
repz
fnsave
loope
das
stc
daa
in
cmc
inc
push
dec
mov
les
pop
ja
sbb
mov
fxch
jno
push
and
nop
rcr
mov
inc
dec
sbb
in
jns
repnz
mov
ret
mov
into
sub
imul
push
in
fs
sbb
sbb
push
xchg
faddl
test
mov
adc
rorl
xchg
sub
fisttps
pop
and
cmp
daa
fcmovbe
shl
or
jno
daa
jbe
addb
xor
jbe
popf
aas
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
mov
call
mov
movswl
add
sub
call
xor
xchg
test
xor
imul
testl
rcrl
add
call
adc
in
add
push
dec
dec
outsl
jl
mov
pop
xor
adc
sub
jnp
mov
sub
xor
push
call
in
imul
xchg
popf
adc
loopne
pop
aas
or
movzwl
pop
popl
sub
sbb
add
movswl
cmp
jne
call
lret
mov
pop
add
and
cltd
xchg
mov
mov
ds
dec
gs
fstpl
pop
movsl
adc
and
mov
inc
int3
sahf
das
jle
loop
cmp
int3
mov
xchg
add
mov
inc
mov
testl
in
ret
inc
jne
jmp
scas
testl
outsb
fmull
push
ds
clc
pop
push
jo
int3
xor
cwtl
mov
mov
jnp
out
mov
dec
cmp
lcall
js
dec
out
or
xor
idiv
inc
jge
ljmp
jge
mov
push
adc
xor
dec
push
cmpsl
and
mov
fwait
jmp
inc
int3
pop
cmpsb
push
repz
int
fwait
repnz
push
jmp
and
sbb
fcmovb
mov
sub
hlt
pop
jb
dec
jno
jb
das
adc
rorl
inc
push
jmp
dec
push
jmp
dec
int
movsb
mov
sbb
adc
enter
hlt
jbe
scas
dec
push
je
js
and
jno
inc
sbb
pop
push
cmpl
dec
mov
cmpsb
adc
imul
xchg
fcos
push
ja
adc
mov
lods
test
std
xchg
sbb
xor
add
push
dec
sbb
stos
xchg
fcoms
mov
push
sbb
push
jmp
cmpsl
jp
sub
lods
clc
inc
lods
inc
in
mov
rorl
sub
lahf
sbb
xlat
push
or
dec
iret
inc
sub
shrl
std
inc
jne
iret
inc
lods
ret
jns
xor
mov
adc
mov
insb
inc
or
hlt
inc
fmul
aaa
xor
lods
inc
out
sub
mov
mov
repnz
int
lods
inc
inc
push
dec
cmp
jge
std
mov
sub
sub
test
ret
movsl
inc
iret
ja
aad
inc
lods
lds
or
rclb
push
das
push
js
lret
jge
in
daa
or
mov
pop
mov
shlb
shrl
out
pop
xchg
iret
mov
popa
shrl
pop
and
cmp
data16
pop
rolb
sbb
push
cmp
inc
inc
push
movl
fmull
jmp
inc
cmp
divb
inc
fmuls
or
xor
pop
addr16
cmp
ljmp
call
mov
pop
aaa
adc
out
sub
mov
push
or
pushf
ss
adc
push
pop
sub
movsb
push
or
int
mov
xchg
in
ss
cltd
jp
adc
push
icebp
pop
inc
negb
inc
mov
inc
mov
push
inc
negb
cmp
cli
lahf
pop
cmpsl
jno
dec
xchg
scas
fbstp
bound
ss
lahf
pop
fadds
imul
mov
and
clc
lahf
pop
fmul
imul
stos
xor
lahf
pop
inc
negb
mov
jo
int
pop
adc
pop
sub
aad
negb
add
mov
lahf
or
xchg
scas
pop
push
testb
push
push
or
loope
mov
adc
inc
xchg
push
inc
divb
and
stc
cmp
adc
ss
lahf
pop
clc
add
push
inc
testb
push
inc
negb
push
inc
neg
lods
jp
lahf
pop
pop
neg
lea
lcall
push
inc
notb
fcoml
cmc
lahf
pop
mov
dec
add
inc
negb
fcoml
cmc
lahf
pop
cli
ljmp
jp
lahf
pop
cli
aas
test
roll
pop
inc
ja
inc
sti
aas
xchg
rol
xchg
mov
dec
dec
psubb
inc
notb
jnp
ja
adc
sub
lahf
pop
clc
and
js
jnp
clc
xor
js
jnp
inc
popa
fnstcw
inc
imulb
add
lret
inc
adc
ss
lahf
pop
xchg
ja
jmp
stc
popf
mov
clc
jl
cmp
adc
clc
jl
cmp
adc
ja
xor
or
inc
stc
and
push
inc
negb
fdivrl
cmc
lahf
pop
cli
aas
lods
aad
hlt
mov
pshufw
jno
mov
push
inc
dec
pop
mov
jbe
pop
pop
notl
into
imul
pop
inc
negb
dec
stc
xchg
jle
stc
in
xchg
shrl
ja
pushf
incb
adc
cmp
call
scas
stc
adc
or
fistpll
adc
cmp
call
inc
testb
or
fldcw
jo
pushf
push
mov
push
std
repz
sub
jmp
fwait
call
mov
not
jg
pop
pop
mov
negb
push
std
repz
sub
jmp
fwait
call
inc
jmp
lahf
pop
inc
mov
std
repz
sub
jmp
fwait
call
das
xlat
testb
lret
repnz
and
xchg
xchg
jl
adc
ljmp
insl
jg
xchg
pushf
push
mov
push
std
repz
sub
and
pop
jle
lahf
mov
push
shrl
xlat
ud2
jecxz
repnz
and
fdivrs
sarb
out
xor
xor
fsub
std
jecxz
dec
cmp
add
inc
ja
dec
stc
outsb
mov
xor
xor
movsb
fsub
xchg
pop
sub
and
cltd
xchg
lahf
pop
clc
cmp
out
stc
lahf
pop
inc
test
inc
cmc
lahf
mov
scas
push
sarl
rorl
lcall
inc
fidivs
leave
hlt
test
jno
ljmp
mov
ja
shl
and
pop
inc
testb
add
inc
jmp
adc
xor
cmp
negb
popa
mov
test
sbb
mov
cmp
push
nop
stc
and
test
jge
rcl
mov
arpl
push
out
lret
jnp
jne
cmp
nop
jnp
ret
or
repz
aad
call
or
sub
jp
scas
mov
ds
negb
pop
inc
negb
pop
inc
negb
pop
inc
negb
mov
mov
stc
lahf
pop
inc
negb
cmp
lahf
pop
inc
negb
pop
stos
ja
pop
inc
negb
pop
inc
negb
pop
mov
push
in
pop
popa
repnz
mov
mov
cwtl
cld
pop
lds
adc
jmp
mov
xchg
push
or
mov
clc
mov
pop
test
push
jl
ss
mov
clc
pop
lods
cld
and
add
mov
mov
push
subb
scas
push
rolb
sbb
minps
test
mov
adc
clc
pop
adc
mov
scas
shl
out
push
add
je
cmpsl
cwtl
jnp
inc
xor
scas
into
psadbw
in
dec
rolb
xor
arpl
aad
movsb
or
test
xor
sbbb
dec
add
xchg
add
pop
mov
jae
mov
xchg
pop
aad
bnd
and
sti
push
jbe
imull
sub
pop
lds
sar
jg
out
loope
clc
cmp
dec
xor
and
iret
add
xor
in
jge
out
inc
in
ljmp
dec
mov
xchg
scas
out
out
mov
cs
jne
xor
lret
in
pop
aad
inc
lret
iret
and
sub
imul
popf
jb
cmp
fwait
dec
rcrl
dec
int
mov
xchg
cmpsl
cmpb
nop
mov
icebp
xchg
xchg
sbb
xchg
pop
jns
cli
andl
and
add
sub
pop
popa
mov
stos
jl
sub
sub
xor
lret
arpl
adc
mov
mov
aam
test
jecxz
icebp
and
pop
xor
imul
sub
js
adcl
sbb
ret
ds
sbb
lea
xchg
cwtl
fists
lds
es
insb
daa
xchg
pusha
push
clc
jmp
mov
or
in
jae
sbb
test
xchg
pop
sbb
xchg
arpl
cli
lret
rcr
mov
hlt
dec
movsl
ljmp
pop
or
cli
es
in
inc
or
insl
cmp
cld
sub
ja
mov
stos
stos
adc
add
cltd
jp
jl
or
lea
aaa
or
sub
mov
and
lods
lret
xor
add
adc
call
sbb
lock
xchg
rcrb
and
sbb
cmp
test
jmp
xor
sbb
adc
mov
push
jne
gs
xorl
shl
lods
das
jae
sahf
fs
daa
mov
mov
lds
pushf
or
inc
adc
imul
fcomps
outsl
jno
ss
and
add
add
add
mov
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
mov
add
cld
mov
add
or
add
adc
add
push
mov
add
sub
add
aaa
mov
add
inc
mov
add
popa
fs
jo
xor
cs
insb
add
imul
insb
add
gs
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
addb
add
mov
add
add
add
leave
mov
add
fistpll
add
add
inc
jb
gs
imul
inc
gs
arpl
popa
jo
add
add
imul
jae
js
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
add
xor
add
add
push
add
and
add
add
call
add
adc
add
add
sub
add
add
xor
add
add
or
test
add
add
and
add
add
or
test
add
add
add
add
add
add
push
add
xor
add
add
add
add
and
add
add
add
add
adc
add
add
add
add
or
sub
add
adc
add
and
add
add
and
add
add
inc
add
add
cwtl
imul
sbbl
nop
nop
nop
and
add
add
mov
mov
cmp
insb
fs
cmp
shll
subl
popl
scas
scas
scas
add
leave
sar
cmpl
jge
pop
aaa
int
push
out
push
dec
dec
and
dec
je
ret
and
inc
imul
jno
jno
in
fdivrp
in
fmul
jmp
aam
call
ret
mov
xchg
mov
mov
mov
ret
jo
mov
mov
xchg
xchg
xchg
or
in
sar
out
fst
in
fxch
ljmp
call
ret
sub
loop
jecxz
lods
pop
jge
jge
loopne
icebp
jecxz
out
jmp
enter
ret
jmp
sarb
jmp
jae
mov
xchg
add
fcomp
hlt
jmp
out
out
loopne
jmp
rol
jmp
sarb
push
in
jmp
jge
fcmovnb
lods
call
mov
popa
popf
xchg
mov
add
add
fcmovu
push
in
in
repz
sar
call
iret
mov
call
mov
inc
movsl
ja
jecxz
mov
shll
addr16
jbe
fcmovnu
in
jmp
jmp
jmp
int
in
mov
jmp
mov
in
frstor
fnstcw
push
inc
mov
push
or
push
push
ror
into
hlt
stc
hlt
icebp
push
icebp
in
push
in
in
jmp
int3
mov
jmp
enter
xchg
ljmp
mov
je
mov
push
jmp
scas
sahf
push
popf
pushf
fwait
push
loop
fsub
div
in
cld
imul
jmp
jmp
enter
ret
scas
jmp
lret
jecxz
xchg
fidivrl
pushf
call
mov
cli
cwtl
jp
mov
jecxz
jecxz
int
int3
jecxz
clc
ffree
mov
fcmovnb
test
call
mov
cltd
call
scas
xchg
ljmp
mov
add
call
movsb
mov
xchg
lds
lahf
shll
inc
fwait
jl
mov
jg
add
add
push
je
lret
movsb
test
inc
mov
test
mov
push
lahf
mov
jmp
add
repnz
add
add
add
add
add
pop
add
rolb
add
add
add
add
add
pop
add
incb
add
decl
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
push
dec
sbb
sub
pop
push
push
push
push
inc
cmp
stos
shll
push
loopne
pop
mov
aaa
push
outsl
popl
pop
push
push
adc
sub
outsl
mov
dec
mov
pop
sub
sbb
mov
filds
call
lods
dec
incl
xor
push
aas
aas
aas
add
arpl
jnp
jns
push
sbb
pop
add
add
add
add
add
inc
daa
test
xor
fdivs
push
fcmove
xchg
cmp
sbb
dec
dec
push
test
jle
sti
loopne
fidivl
cmp
push
add
movups
add
add
cmp
pop
cmc
cmc
cmc
call
ror
inc
mov
insl
mov
sbb
aaa
pop
pop
pop
add
outsl
add
sbb
test
scas
pop
mov
or
add
add
add
mov
in
dec
cmpsb
inc
ljmp
and
add
add
add
add
and
and
mov
in
in
call
int
ret
ret
mov
cld
jae
push
xor
pop
add
lret
lds
adc
mov
jg
add
inc
adc
in
in
in
sarl
shrl
or
add
add
jg
jg
push
push
push
jnp
hlt
hlt
fcom
sar
out
fst
jmp
int3
jmp
aam
fmul
mov
mov
popaw
cmpsb
and
and
cltd
mov
fstpt
xchg
add
add
hlt
rclb
rep
jmp
ret
ret
scas
dec
dec
dec
add
popl
sbb
sbb
call
ror
out
fst
in
fcmovne
in
fcmove
ljmp
fcmovne
mov
mov
imul
iret
jecxz
mov
rclb
cld
repnz
imul
popf
fistpll
inc
pop
pop
pop
add
lcall
sar
lock
out
in
fmul
in
fcmove
jmp
leave
jmp
jmp
iret
mov
dec
mov
mov
inc
lods
pop
mov
out
aad
fdivrl
hlt
add
add
add
pop
pop
xor
call
loope
loop
iret
out
loope
out
in
in
fcmove
jmp
enter
ljmp
call
int
call
ret
jmp
stos
in
xlat
mov
cli
idivl
pushl
add
add
aas
aas
add
xchg
xchg
mov
rcl
int
repnz
push
loope
out
loopne
out
fst
in
fcmove
jmp
ljmp
ljmp
jmp
iret
mov
cld
sti
mov
fistpll
fwait
sub
daa
sbb
add
add
icebp
icebp
fcmovu
in
aad
repnz
push
jecxz
out
loope
out
jmp
lret
jmp
aam
jmp
sarb
jmp
sarb
cld
cld
sar
lret
jo
shlb
test
lock
dec
dec
andl
lahf
add
add
add
and
or
call
into
push
jmp
icebp
in
push
loope
out
ljmp
jmp
rol
call
sarl
jmp
lret
out
out
push
out
lods
out
fistl
fadd
mov
fcmovnb
mov
sarl
xchg
in
push
dec
inc
jge
and
adc
add
add
dec
dec
outsb
icebp
icebp
icebp
call
rcl
ljmp
push
out
push
in
push
loop
out
fst
ljmp
call
sarl
jmp
iret
mov
fmulp
scas
sti
clc
mov
push
loop
call
lods
push
call
mov
mov
loope
mov
fcmovb
lods
call
mov
sub
inc
xor
add
add
add
add
add
iret
iret
jmp
rcl
into
push
in
out
hlt
jmp
push
call
fdivr
icebp
jecxz
in
fcmove
jmp
rol
jmp
sarl
jmp
into
mov
jmp
lret
call
idivb
call
mov
cmp
sahf
pusha
faddp
scas
jmp
lret
jecxz
mov
ffreep
stos
dec
mov
hlt
mov
frstor
add
add
jg
jg
addr16
out
out
dec
int
out
call
call
push
ljmp
icebp
in
ljmp
jmp
sarb
jmp
int
jmp
int3
mov
fadd
scas
clc
out
scas
jmp
int3
test
mov
mov
push
fsubl
dec
lods
mov
loop
scas
jmp
scas
jmp
lds
aam
andl
add
add
add
add
adc
sub
loopne
neg
fstp
call
rcl
clc
icebp
in
push
out
jmp
push
jmp
push
call
out
ret
rol
jmp
iret
mov
jmp
int3
mov
jmp
leave
mov
loop
movsl
std
divb
ljmp
lods
ffree
lahf
call
mov
incl
mov
test
jmp
mov
add
add
pop
add
out
dec
enter
out
ljmp
lock
imul
call
push
jmp
xlat
jmp
rol
jmp
iret
mov
jmp
lret
mov
jmp
leave
mov
fcmovnb
lods
push
loopne
jmp
rcll
mov
ja
faddp
lods
dec
mov
jmp
test
ljmp
xchg
xchg
addb
add
rcl
shl
call
rcl
stc
cmc
icebp
clc
repz
push
repnz
push
out
ljmp
ljmp
in
mov
jmp
int3
mov
jmp
mov
ffreep
mov
fld
mov
jmp
inc
and
lret
mov
fnstcw
ja
in
int
fnstenv
pushl
jae
leave
ror
leave
sbb
add
add
add
add
aas
aas
add
cmp
pop
mov
repnz
cli
div
stc
hlt
lock
clc
repnz
push
lock
cmc
out
call
in
jmp
into
mov
jmp
lret
loopne
mov
faddp
scas
fdivrs
fwait
std
icebp
movsl
std
rep
mov
nop
je
call
mov
fstpt
test
aam
mov
lret
negl
push
pop
pop
pop
add
push
push
sub
hlt
lock
stc
stc
cmc
repnz
clc
repz
icebp
in
push
out
ljmp
fst
jmp
int3
mov
jmp
mov
ffreep
mov
fadd
lods
jmp
into
xchg
stc
jecxz
push
fisttps
jmp
xchg
call
mov
lahf
fdivrs
fwait
call
mov
ljmp
push
rorl
add
add
scas
test
in
in
icebp
in
jmp
div
in
push
out
call
jmp
lret
loopne
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
fwait
call
mov
call
mov
mov
call
mov
call
mov
call
mov
inc
mov
inc
mov
mov
mov
xchg
xchg
mov
fcom
jecxz
out
repz
out
jmp
jmp
leave
mov
ffreep
mov
ffree
scas
fadd
lods
fstpt
cmpsb
fnstcw
fdivrs
sahf
call
mov
call
mov
call
mov
call
scas
nop
cltd
je
roll
add
add
add
mov
shl
out
fld
scas
cmc
ffree
mov
fadd
lods
fcmovnb
stos
fidivrl
movsb
call
mov
lahf
call
mov
call
mov
call
mov
call
scas
nop
call
lods
pushl
pusha
cmp
cmp
add
add
jp
push
dec
subl
mov
fdivrs
call
mov
call
mov
call
mov
call
scas
xchg
call
lods
dec
test
test
mov
mov
push
cmp
mov
push
push
daa
push
inc
xor
mov
xlat
mov
pushf
call
mov
call
scas
xchg
dec
lods
mov
into
test
dec
movsl
test
mov
push
xor
insl
push
sbb
es
mov
stos
mov
mov
dec
lods
dec
test
dec
movsb
test
rcrb
movsb
push
ds
arpl
inc
sub
pop
aas
cltd
lods
mov
movsl
xchg
enter
xchg
push
sub
addl
sub
jae
sub
lahf
lahf
lahf
add
lea
lock
add
add
add
incl
cld
pop
filds
pop
incl
add
incl
add
incb
add
cld
add
cld
add
aas
clc
add
aas
clc
add
jg
add
pop
lock
pop
loopne
add
rolb
add
add
add
add
add
add
add
add
add
add
pop
addb
pop
loopne
add
clc
add
paddd
add
incl
add
cld
add
incl
jg
inc
push
ljmp
add
add
add
add
add
add
and
add
add
andb
add
pop
pop
add
sub
push
cmp
pop
pop
pop
push
cmpb
cmp
inc
sub
mov
movsl
dec
in
xchg
aas
stc
mov
fiaddl
adc
pop
pop
pop
or
add
add
add
add
or
mov
leave
outsb
in
lock
lock
in
into
jo
in
popa
fnstsw
push
push
and
addl
pop
sbb
sbb
and
push
push
stos
xchg
dec
mov
adc
inc
add
xchg
mov
lret
jnp
sti
filds
out
iret
jae
shrl
cld
test
add
add
dec
dec
dec
add
push
push
adc
sbb
addr16
add
add
cmp
sbb
pop
xchg
daa
movsl
stos
mov
iret
aam
push
out
call
fisttps
mov
sbb
inc
add
push
add
stc
fldl
shrl
inc
fwait
jge
lret
add
add
adc
add
add
cmp
add
and
dec
mov
mov
ret
ret
ret
jmp
outsl
imul
clts
outsl
outsl
outsl
add
add
add
sbb
aas
mov
mov
pop
in
int
in
into
jo
mul
in
xchg
outsb
fs
xchg
or
add
or
outsl
add
int
pop
sti
fisttps
dec
mov
inc
sti
cmp
adc
add
inc
add
add
jg
jg
add
add
test
test
hlt
hlt
hlt
loope
loop
mov
stos
cld
insb
arpl
pop
cmp
add
pop
ja
ja
add
add
daa
daa
daa
add
jle
ss
mov
insl
pushl
mov
adc
add
inc
add
add
add
cmp
push
sub
cld
out
in
imul
cmpsb
inc
jmp
or
cmp
add
xor
add
sbb
jg
pop
pop
pop
add
inc
inc
je
lock
repz
leave
call
leave
mov
inc
mov
mov
test
adc
xor
dec
dec
dec
add
add
je
jle
inc
in
shlb
lea
mov
xor
inc
cmp
pi2fd
add
add
add
add
inc
cmp
xchg
idiv
jmp
fnstenv
ljmp
and
add
and
add
add
sub
sub
xchg
xchg
xchg
add
add
ret
call
in
in
ror
sar
leave
fmulp
ret
enter
ret
mov
pushf
icebp
popa
pop
pop
sahf
or
lock
xchg
mov
xor
fadd
xchg
sub
add
add
pop
pop
pop
add
mov
mov
fnstenv
dec
repnz
or
add
add
add
add
add
add
pop
pop
pop
add
add
add
or
pop
pop
pop
xchg
stc
stc
stc
out
out
out
dec
lret
lock
jmp
int
jmp
aad
fmulp
sar
mov
inc
mov
popf
negb
push
xchg
adc
adc
and
and
mul
icebp
les
dec
test
imul
add
add
add
sti
out
or
cld
hlt
lods
call
mov
pushl
add
pop
aaa
aaa
aaa
add
arpl
pop
pop
pop
add
aam
out
repz
fdivrp
leave
in
fst
in
fcmovne
in
fcmovne
jmp
lret
enter
lret
mov
dec
mov
stos
ljmp
push
dec
xchg
adc
mov
cltd
in
jle
ret
cmc
loopne
mov
add
repz
repnz
sti
cli
repnz
jmp
mov
push
clc
movsl
inc
add
add
jnp
jnp
clc
clc
clc
jmp
lret
leave
out
in
fst
out
in
fcmovne
in
fcmove
in
fcmove
ljmp
jmp
rol
fmul
mov
dec
mov
stos
cmpsb
cltd
nop
jmp
repz
test
dec
dec
cmpsl
push
movsb
add
add
cld
icebp
mov
cld
divl
jmp
mov
pop
int3
clc
repnz
das
das
das
add
out
clc
out
out
out
fcmovnu
lret
out
out
in
in
fcmovne
in
fcmovne
in
fxch
ljmp
jmp
rol
jecxz
mov
aad
mov
int
scas
inc
mov
fxch
sahf
out
mov
iret
cmpsb
inc
hlt
cmpsb
xchg
pop
dec
sti
divb
jmp
mov
xchg
imul
add
add
add
pushf
pushf
pushf
lret
repz
jmp
jmp
int3
leave
out
loope
out
loopne
out
in
out
in
fcmove
jmp
lret
fmul
jmp
jmp
aam
jmp
rol
jmp
into
mov
call
shll
imul
scas
fdivs
mov
sti
stc
mov
jmp
ret
fstpt
leave
sbb
add
add
aaa
aaa
add
xor
repnz
lock
aad
loopne
int
lock
out
loope
out
out
in
fmul
in
fcmove
in
fxch
jmp
ljmp
ljmp
ljmp
out
mov
xlat
ret
mov
loope
test
imul
stos
cld
cld
mov
jecxz
pop
scas
xchg
inc
movsb
rol
add
add
add
or
push
mov
mov
cmc
cmc
cmc
jmp
in
dec
mov
icebp
jecxz
out
loopne
out
loope
out
in
fmul
in
fcmovne
jmp
leave
ljmp
ljmp
ljmp
jmp
rol
jmp
sarb
fcmovb
scas
push
in
mov
cld
cld
sar
cmc
mov
out
pusha
fidivrs
inc
xchg
push
push
push
pop
inc
inc
inc
add
add
add
or
add
cmc
cmc
cmc
in
in
in
dec
into
iret
jmp
fcmovnbe
push
in
lock
push
loop
out
loope
out
out
in
fcmove
ljmp
ljmp
ljmp
jmp
rol
jmp
sarl
fcmovnb
mov
jmp
mov
cld
sti
mov
loope
pop
call
mov
mov
popl
insb
or
dec
dec
add
add
add
jnp
or
int
ljmp
int3
leave
hlt
jmp
icebp
in
icebp
jecxz
out
loopne
out
loopne
out
jmp
lret
xlat
ljmp
jmp
rol
jmp
rol
call
sarb
out
mov
clc
repz
cld
cld
int
fistpll
sarl
dec
mov
jge
xor
sub
add
add
add
add
je
je
div
idiv
jecxz
jecxz
int3
int3
int3
jmp
out
push
out
repnz
push
jecxz
icebp
loop
push
loope
in
fst
jmp
enter
call
aam
jmp
sarb
call
sarb
jmp
iret
mov
in
scas
cld
cli
mov
push
out
fcmovnb
mov
fadd
mov
fadd
scas
call
mov
movsl
cwtl
mov
xor
sub
add
adc
inc
add
add
add
dec
add
sbb
aas
in
in
jmp
jmp
fdivrp
int
push
ljmp
repz
icebp
in
push
in
icebp
jecxz
out
loopne
out
fst
ljmp
jmp
aam
call
sarb
jmp
iret
mov
out
mov
fcmovb
mov
cmc
in
mov
cld
sti
sar
shlb
repnz
fstpt
fs
mov
mov
loope
mov
fadd
scas
xlat
mov
movsb
inc
mov
sti
mov
lret
and
push
pop
pop
pop
add
add
add
or
jnp
icebp
icebp
in
in
mov
loopne
hlt
jmp
hlt
ljmp
repnz
icebp
in
lock
out
loope
in
fcmovne
jmp
aam
jmp
rol
out
mov
out
mov
out
mov
loop
mov
stos
cld
clc
mov
fsubrs
jp
out
loop
dec
mov
mov
ffreep
mov
in
mov
jecxz
mov
loopne
mov
fcmovnb
stos
mov
fwait
inc
mov
cld
test
mov
push
push
push
add
add
add
and
add
xor
pop
ljmp
call
xlat
fdivr
iret
int3
lret
out
out
cmc
in
in
hlt
ljmp
repz
push
in
icebp
in
push
loop
ljmp
jmp
rol
out
mov
jmp
iret
mov
jmp
into
mov
in
mov
out
loopne
std
cli
mov
call
test
call
mov
hlt
in
mov
iret
scas
pop
inc
sahf
push
sarb
mov
in
mov
jecxz
mov
loop
mov
ffreep
lods
fidivrl
xchg
clc
mov
insl
jecxz
addr16
mov
add
add
add
add
test
repnz
loopne
loopne
out
call
call
push
jmp
push
ljmp
repnz
repnz
out
loope
jmp
aam
jmp
rol
jmp
sarl
jmp
into
mov
out
mov
jmp
int3
mov
fcmovb
test
cli
icebp
mov
cld
cli
mov
inc
fwait
inc
inc
test
loopne
mov
ljmp
mov
lods
jmp
enter
enter
enter
lods
faddp
test
mov
insl
fsubrs
xor
add
add
daa
daa
add
inc
inc
js
lock
jmp
iret
iret
ror
int
clc
icebp
in
imul
call
cmc
in
in
repz
repnz
icebp
in
out
loopne
jmp
rol
out
mov
in
mov
in
mov
in
mov
in
mov
ffree
mov
out
movsl
cld
divb
mov
lea
dec
mov
fld
cmpsl
mul
fwait
mov
jnp
dec
mov
loopne
lods
jecxz
scas
loop
lods
loop
lods
dec
scas
mov
scas
mov
cwtl
jns
mov
addr16
pop
pop
pop
lret
lret
lret
in
out
out
out
call
xlat
xlat
inc
ret
ret
push
out
jmp
div
ljmp
in
in
hlt
jmp
hlt
ljmp
repnz
in
fmul
jmp
rol
out
sar
sarl
in
mov
jmp
lret
mov
jmp
lret
mov
loope
mov
fadd
test
imul
cmpsb
std
divl
ljmp
mov
fnstcw
scas
jmp
leave
xchg
jmp
push
and
test
fs
fdivrs
stos
jmp
les
cli
mov
data16
mov
popa
leave
cwtl
mov
adc
adc
bound
xchg
hlt
hlt
hlt
jmp
loopne
call
rcl
aam
sar
clc
repz
push
icebp
in
div
jmp
imul
jmp
push
in
in
repz
repnz
jmp
rol
out
sar
iret
mov
in
mov
jmp
lret
jecxz
mov
loop
mov
ffree
scas
loopne
mov
clc
lock
xchg
fs
xchg
push
jnp
faddp
scas
ffreep
scas
call
mov
ja
scas
xchg
dec
call
pop
mov
mov
fnstcw
loop
mov
mov
lods
aam
rolb
ja
ja
sbb
sbb
xlat
xlat
xlat
repnz
out
fcomp
fdivr
mov
repnz
clc
repz
clc
repnz
div
in
imul
ljmp
in
in
hlt
jmp
repz
fdivrp
out
out
sar
iret
mov
in
mov
loope
mov
loop
mov
loop
mov
loopne
mov
xlat
mov
popf
cld
repnz
inc
lods
js
jne
sbb
sbbb
into
mov
ffree
lods
xlat
mov
xchg
jmp
shll
xchg
inc
popf
jbe
xchg
jo
lcall
leave
cmpsb
sbbl
outsl
fs
add
add
push
push
jl
lock
loopne
loopne
leave
lret
aad
stc
cmc
repnz
stc
hlt
icebp
clc
repnz
clc
repnz
push
icebp
jmp
imul
jmp
hlt
in
in
repz
out
ret
iret
mov
jmp
into
mov
loope
mov
loop
mov
loopne
mov
loopne
mov
ffree
scas
call
mov
sahf
cli
lock
jge
xor
pop
cmp
call
mov
cmpsb
fnstcw
jbe
in
int
loop
pop
call
test
cmp
mov
mov
call
insl
push
xchg
ljmp
add
or
add
sub
dec
xlat
xlat
xlat
in
rcl
sar
mov
hlt
icebp
cli
div
stc
hlt
icebp
clc
repz
clc
repz
push
icebp
in
push
out
ljmp
in
in
repz
in
mov
in
mov
jmp
lret
loop
mov
loope
mov
faddp
mov
ffree
scas
call
mov
cwtl
std
out
mov
pushl
nop
pop
lcall
scas
cwtl
call
mov
jl
in
iret
je
repnz
jmp
mov
imul
xchg
popa
repnz
jns
iret
fwait
js
shlb
add
addl
or
jp
jp
aad
clc
cli
div
cli
div
stc
cmc
repnz
stc
hlt
lock
clc
repz
div
in
div
jmp
cmc
out
jmp
hlt
jmp
lock
in
mov
jecxz
mov
loope
mov
loopne
mov
ffreep
mov
ffree
scas
mov
cwtl
sti
ljmp
std
repnz
std
lock
cld
in
popf
movsl
mov
jns
cmp
iret
mov
aam
sahf
mov
mov
shll
cwtl
aam
cwtl
std
cmpsb
test
sahf
jp
mov
in
in
in
add
add
add
jnp
sysret
add
add
test
in
ljmp
div
stc
hlt
icebp
stc
hlt
lock
clc
repz
push
icebp
in
push
out
ljmp
in
out
lock
jmp
into
mov
loope
mov
loope
mov
loopne
mov
ffreep
mov
ffreep
mov
fadd
lods
out
xchg
cli
loop
cld
jmp
nop
sti
loop
push
fisttpl
jmp
leave
xchg
call
mov
call
mov
fidivrl
sahf
call
mov
fdivs
cltd
mov
jne
mov
mov
add
add
add
dec
inc
ror
lret
aad
in
in
out
ljmp
stc
cmc
icebp
clc
repz
push
icebp
in
push
lock
imul
jmp
icebp
out
jmp
int
jmp
lret
loope
mov
loopne
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
stos
fdivrs
nop
ljmp
call
mov
lcall
mov
lahf
fdivrs
sahf
call
mov
call
mov
xlat
mov
call
mov
cld
lcall
mov
push
add
mov
mov
jmp
out
lock
out
jmp
clc
repz
div
in
imul
ljmp
jmp
mov
loope
mov
faddp
mov
ffreep
mov
faddp
scas
fadd
lods
fadd
stos
fstpt
movsb
call
mov
mov
fnstcw
mov
fdivrs
pushf
aad
cltd
call
mov
call
mov
shll
insb
fcoml
pop
aas
movsl
mov
scas
push
movsb
movsb
movsb
push
jno
outsb
dec
scas
stos
test
loopne
out
fsubrp
icebp
jmp
div
icebp
in
cmc
out
jmp
loop
mov
ffreep
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
test
fnstcw
fdivrs
mov
xlat
mov
pushf
mov
aam
xchg
aam
xchg
aam
xchg
shrb
xchg
nop
imul
imul
test
test
pusha
pop
pop
cmp
ror
fsubp
fstp
ljmp
jmp
faddp
mov
ffreep
mov
faddp
mov
fadd
lods
fadd
stos
fcmovnb
stos
fnstcw
movsl
fidivrl
xlat
mov
mov
aad
fwait
call
mov
call
mov
call
mov
shll
call
lods
mov
mov
arpl
lods
jbe
cmp
imul
jns
jae
iret
lret
loop
xlat
jmp
mov
faddp
mov
fadd
scas
fcmovnb
lods
fcmovnb
stos
fidivrl
cmpsb
fnstcw
call
mov
lahf
call
mov
call
mov
aad
cltd
call
mov
call
scas
xchg
call
scas
xchg
shrb
mov
pusha
cmp
stos
mov
add
bound
push
pusha
pop
pop
push
mov
mov
aad
cmpsl
icebp
ffree
scas
fnstcw
cmpsb
fnstcw
mov
sahf
aam
pushf
aam
lcall
mov
shrb
nop
dec
stos
mov
int
mov
into
test
xchg
imul
pop
cmp
fcmovnu
fildl
xchg
sub
pop
dec
cmp
sahf
cmpsb
mov
into
mov
in
fidivrl
mov
call
mov
pushf
shll
cwtl
call
mov
shrb
nop
dec
stos
mov
int3
cmpsl
mov
int
xchg
mov
push
jle
xor
jnp
xor
sahf
xchg
nop
add
add
test
es
cmp
gs
dec
lcall
xchg
out
mov
popf
call
mov
shll
xchg
dec
lods
xchg
shrb
dec
cmpsb
xchg
int3
movsl
test
mov
ds
push
xor
lock
add
add
add
aaa
xor
push
imul
mov
pushf
test
aam
fwait
cli
shlb
xchg
dec
lods
dec
stos
mov
int3
cmpsb
xchg
lret
movsb
test
lret
mov
push
das
mov
cmpsl
mov
add
aas
cmp
sbb
dec
xor
addr16
test
xchg
jbe
int
test
cmpsb
xchg
lret
dec
mov
jne
jl
xor
gs
inc
pop
out
out
out
add
add
add
push
or
pop
adc
push
cmp
jbe
pop
inc
test
andb
movsl
xchg
lret
inc
mov
dec
je
sub
lret
adc
add
add
arpl
sbb
and
sbb
pushf
nop
push
inc
mov
dec
sub
addr16
dec
dec
pop
pop
pop
add
sbb
push
pusha
ds
insb
inc
daa
xchg
pop
inc
xor
xlat
aad
or
add
add
ret
int3
enter
loope
push
clc
pop
add
inc
sldt
sti
orb
add
incl
add
add
clc
add
pop
add
push
push
add
sldt
push
add
add
add
jmp
add
add
add
inc
add
sldt
inc
add
cmpb
add
addb
cmp
add
cmp
add
add
add
incl
add
add
add
incb
add
add
add
incb
add
add
add
cld
add
add
jg
add
add
add
pop
add
clc
add
add
pop
add
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
add
add
add
add
add
add
add
add
add
add
addb
add
pop
add
loopne
add
add
add
clc
add
add
aas
add
incb
add
add
add
addb
add
add
lock
add
add
cld
add
add
add
incl
add
incl
add
inc
add
incl
add
clc
add
incl
add
incb
add
add
incl
jmp
ud0
add
clc
ud0
add
lcall
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
lcall
cmpsb
xchg
insb
add
lea
mov
jge
mov
jbe
shrb
outsl
add
movsl
ja
lret
add
mov
push
add
jge
out
shll
mov
test
add
movsb
sahf
add
stos
cwtl
add
mov
add
mov
addb
mov
test
shrb
add
scas
xchg
add
mov
add
mov
xchg
add
mov
add
mov
add
mov
add
mov
lahf
add
mov
cmpsl
add
mov
movsl
add
lea
loope
mov
jecxz
xchg
add
iret
xchg
add
lret
out
xchg
add
loop
add
ret
fcmovnb
test
add
ret
scas
add
ret
mov
ffree
mov
loopne
movsb
add
frstor
add
mov
jecxz
mov
loopne
mov
jecxz
mov
jecxz
mov
add
int
add
iret
mov
add
sarb
add
in
add
les
ror
roll
ror
add
rcl
add
fcmovu
add
fcmovu
add
rol
add
aam
add
rol
add
aad
add
aad
add
xlat
enter
enter
lret
fcmovne
add
fmul
add
fcmovnbe
add
add
fstp
add
hlt
lds
out
loopne
add
loope
add
loope
add
jecxz
add
out
add
call
in
hlt
ljmp
imul
jmp
add
hlt
icebp
add
or
add
or
add
add
add
add
add
adc
add
add
push
add
add
add
add
push
cmp
add
add
add
add
dec
pop
pop
pop
push
inc
xor
add
sbb
bound
push
dec
dec
nopl
add
add
dec
popa
bound
push
inc
inc
dec
adc
sub
add
sbb
addr16
push
inc
inc
or
or
add
dec
gs
inc
cmp
adc
add
imul
add
or
add
push
xor
sub
add
add
cmp
sub
and
add
and
and
sbb
add
pop
push
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
sbb
inc
and
xchg
nop
je
add
test
add
mov
add
dec
add
cwtl
inc
add
adcb
mov
stos
nop
outsb
add
lea
test
nop
jne
stos
xchg
jl
mov
jbe
mov
jnp
mov
jge
mov
mov
dec
add
cmpsb
inc
add
movsl
dec
add
lods
dec
add
lods
push
add
lods
push
add
scas
pop
add
mov
add
mov
add
mov
add
mov
pop
add
mov
pusha
add
pushf
jl
shlb
push
add
mov
add
mov
pop
add
ret
jecxz
popa
add
les
loopne
insb
add
leave
push
add
int
add
lret
jo
in
into
jae
call
enter
sarl
out
aad
add
popf
addl
mov
addb
fwait
addb
popf
lea
mov
fwait
cwtl
add
mov
mov
test
mov
xchg
add
test
fwait
add
movsb
mov
add
test
add
mov
add
movsb
test
ret
add
cmpsb
mov
int3
stos
mov
shrb
add
mov
add
mov
add
mov
add
mov
mov
ret
add
scas
xchg
add
mov
add
mov
fwait
add
mov
xchg
add
mov
lcall
mov
popf
add
mov
add
mov
test
shll
add
mov
scas
add
mov
mov
add
mov
mov
add
mov
mov
iret
mov
test
mov
xchg
add
les
add
int
add
int3
test
in
xlat
mov
ljmp
add
fisttps
add
into
xchg
add
rcll
loop
fwait
add
fcompl
add
loope
add
loopne
add
jecxz
add
loope
add
in
add
loop
add
jmp
mov
add
shrl
fcmovb
lods
add
ret
ffree
scas
add
leave
scas
add
ret
rol
mov
fcmovb
mov
faddp
mov
fcmovnb
mov
rol
mov
add
int3
mov
add
lods
add
shrb
add
fisubrs
add
mov
loopne
mov
jecxz
mov
in
mov
loope
mov
in
mov
jecxz
mov
add
int
add
into
mov
add
sarb
add
loopne
add
out
add
out
mov
add
out
scas
add
icebp
movsl
add
rep
add
rep
add
out
add
divb
add
idivb
add
sti
mov
add
mov
add
int
add
into
ret
int
add
ror
add
ror
add
rcl
add
rcl
add
aad
add
aad
add
fcmovu
add
add
fstp
add
rol
add
aam
add
rol
add
aam
add
lds
ljmp
add
fmul
add
fcmove
add
fcmove
add
fcmove
add
fmul
add
fst
add
fst
add
add
cld
roll
cmc
leave
add
loopne
add
loope
add
loop
add
loop
add
loope
add
jecxz
add
in
add
out
add
loope
add
out
add
out
add
call
call
add
call
loope
hlt
jmp
add
in
out
hlt
out
call
add
repnz
add
icebp
icebp
add
repnz
hlt
hlt
add
hlt
icebp
pop
xor
add
add
xchg
push
sbb
push
push
add
add
add
and
add
dec
jnp
add
add
pop
and
add
add
sbb
add
hlt
lret
jno
add
add
mov
shl
movsl
lahf
jno
add
sub
add
shlb
add
hlt
into
xlat
mov
sbb
add
int
out
fcmovu
mov
jae
cmp
lock
fsub
jecxz
fcmovu
fidivrl
les
add
in
in
out
fcmovu
mov
xchg
daa
dec
shl
in
out
jecxz
fcmovu
fidivrl
in
sub
dec
add
int
in
in
in
out
fcmovu
mov
sarl
dec
ljmp
fidivrl
pushf
xor
xchg
je
add
add
add
lock
div
in
in
mov
scas
stos
les
subb
scas
scas
pushf
sbb
add
push
hlt
leave
repnz
div
cmc
in
fcmovnu
mov
mov
mov
mov
push
pop
lods
cmpsl
cmpsl
push
insl
add
add
ror
sti
cli
cli
div
in
xlat
mov
mov
mov
cmpsb
ret
pushf
subb
je
arpl
add
push
lock
idiv
in
in
mov
mov
mov
xchg
stos
mov
push
pushf
cmp
add
add
iret
iret
sti
cli
cli
div
out
mov
mov
lar
cmp
add
add
add
sti
cli
cli
cli
jecxz
mov
lea
pusha
jge
pop
inc
add
add
add
add
cli
cli
cli
mul
mov
mov
xchg
insb
insb
sbb
leave
repnz
cli
cli
cli
jecxz
mov
insb
imul
inc
add
add
aam
cli
ljmp
xchg
xchg
jne
insb
addr16
dec
add
lret
mov
jne
imul
add
jbe
jne
jne
imul
dec
gs
imul
add
add
imul
add
inc
push
push
adc
aas
adc
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
pop
cmp
add
sbb
jge
and
jnp
aaa
add
data16
jnp
add
jo
add
jne
add
xorb
mov
add
mov
add
xchg
cmp
fsubrs
dec
add
xchg
inc
add
pop
add
nop
pop
add
fwait
pop
add
mov
cwtl
pusha
add
cwtl
imul
mov
jae
lods
nop
jne
stos
cwtl
jae
movsl
xchg
jp
stos
xchg
jl
mov
jl
mov
lcall
mov
mov
jle
les
add
mov
dec
add
test
add
stos
dec
add
mov
add
stos
push
add
movsb
pop
add
scas
pop
add
lods
push
add
mov
add
mov
add
mov
add
mov
push
add
mov
data16
lods
fs
test
pusha
add
mov
imul
les
js
lret
mov
add
rcrl
ret
ffreep
jl
in
pusha
add
insb
add
lret
in
into
jb
loopne
jl
out
jnp
in
shlb
jmp
jl
lock
aam
add
cwtl
add
xchg
addl
scas
fwait
xchg
test
cltd
mov
stos
fwait
mov
mov
test
test
xchg
add
mov
mov
lods
mov
cwtl
add
cmpsl
xchg
add
test
pushf
add
mov
add
stos
add
mov
add
mov
addl
lret
add
cmpsl
mov
stos
mov
into
stos
mov
shrb
add
mov
add
mov
add
mov
test
mov
mov
leave
lods
xchg
add
scas
nop
add
mov
add
mov
add
mov
add
mov
add
mov
lcall
mov
sahf
add
mov
add
mov
add
mov
stos
add
mov
stos
add
mov
mov
add
mov
mov
int
mov
faddp
nop
add
lret
fwait
add
lret
out
mov
jmp
fimull
add
fiadds
add
fisttps
add
rcll
add
ficoml
add
fcompl
add
loope
add
loope
add
out
add
jmp
cltd
add
in
add
jmp
add
shlb
stos
add
shrl
add
sarl
ffree
mov
mov
aam
mov
add
leave
mov
add
lds
jecxz
stos
add
mov
loop
mov
in
mov
add
sarl
add
loope
add
loopne
add
in
add
ljmp
hlt
in
add
jmp
add
icebp
movsb
add
icebp
stos
add
loop
add
in
mov
cld
out
mov
cli
hlt
mov
stc
idivb
add
ret
ret
add
mov
add
int3
lret
add
enter
int
add
iret
int
ror
add
ror
add
aam
add
xlat
aad
xlat
xlat
fadds
fcmovnu
fildl
out
roll
aam
add
lret
add
enter
int3
add
fcmovnbe
add
fst
add
add
sti
ret
cmc
lret
add
loopne
add
loope
add
loope
add
in
add
call
jecxz
ljmp
add
jmp
add
jmp
add
out
jmp
add
repnz
add
repnz
hlt
icebp
add
clc
testl
add
das
cmp
or
add
add
push
push
push
dec
cmp
add
addb
add
outsb
sahf
mov
arpl
add
inc
push
stos
stos
inc
add
add
mov
add
add
add
add
xor
push
stos
cmpsb
data16
add
movsb
mov
add
add
cltd
jae
add
add
add
outsb
inc
push
or
add
pushf
scas
dec
xor
add
cld
fcmovnu
mov
add
add
add
sbb
add
add
mov
cmp
add
fnstsw
add
add
into
dec
sldt
add
enter
cmp
add
add
cld
fucomi
jmp
mov
jb
add
add
add
rcll
jge
add
add
cld
hlt
loopne
jmp
fnstsw
add
add
roll
outsl
push
jmp
jmp
out
mov
lret
xor
inc
push
hlt
cld
jecxz
out
jmp
jmp
call
xchg
pushf
cmpsb
xor
add
add
je
neg
out
out
out
jmp
jmp
call
mov
xlat
int3
inc
dec
cld
cld
jecxz
repnz
out
jmp
jmp
out
call
ret
xlat
push
dec
addb
add
out
out
out
out
jmp
call
out
call
in
xlat
dec
ds
add
outsl
cld
mul
ljmp
jmp
out
out
mov
mov
inc
insb
add
add
add
cld
jecxz
repz
repnz
out
jmp
out
out
out
out
mov
push
ds
xchg
xchg
xchg
bound
add
hlt
fcomi
repnz
out
jmp
out
out
out
mov
in
iret
cmp
mov
hlt
div
clc
repnz
icebp
jmp
call
mov
shr
inc
aad
inc
mov
mov
pop
add
hlt
mov
repnz
icebp
jmp
out
out
mov
mov
aad
push
leave
xor
mov
xchg
add
add
add
add
mul
fdivrp
clc
clc
clc
repnz
out
out
out
mov
lret
xor
cmp
xchg
mov
mov
sub
add
add
add
hlt
mov
clc
repnz
out
out
mov
rol
xlat
cmp
inc
mov
rol
rol
sub
add
add
add
neg
fdivrp
cli
clc
clc
clc
clc
repnz
out
out
mov
rol
leave
adc
mov
rol
rorb
add
jecxz
cli
cli
cli
stc
clc
clc
clc
repnz
out
mov
rol
int
cmp
sbb
pop
xchg
rol
ja
add
add
add
hlt
fninit
cli
cli
sti
stc
stc
clc
clc
clc
bnd
mov
rcl
push
push
sub
mov
mov
add
add
jecxz
jecxz
cli
cld
sti
sti
stc
stc
clc
clc
repz
rcrb
mov
pop
or
sub
add
add
cld
hlt
fninit
cld
sti
sti
sti
sti
stc
stc
clc
clc
bnd
rol
mov
add
or
xchg
adcl
xor
imul
add
add
jecxz
jne
std
std
sti
sti
sti
stc
stc
clc
clc
repnz
shlb
push
test
inc
inc
and
sub
add
add
add
add
std
std
std
std
sti
sti
sti
stc
clc
cli
repnz
mov
xchg
movsl
int
ror
mov
add
xchg
mov
popa
jb
jne
std
std
std
sti
sti
sti
stc
stc
clc
repnz
les
movsb
lods
mov
mov
sub
add
jecxz
idiv
std
sti
sti
sti
cli
clc
repz
les
push
fwait
mov
mov
sub
add
div
cli
cli
cli
cli
clc
clc
ffree
les
cwtl
xchg
mov
mov
jbe
pop
mov
cli
clc
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xchg
xchg
xchg
mov
test
sub
add
mov
lds
cwtl
cwtl
cwtl
xchg
xchg
mov
test
pusha
add
in
mov
mov
cwtl
xchg
xchg
mov
mov
sub
jae
insb
cwtl
mov
mov
mov
sub
add
add
xchg
cwtl
mov
mov
sub
sub
add
bound
xchg
xchg
mov
jns
js
sub
add
imul
sub
gs
js
sub
sub
add
add
jns
dec
and
pop
add
pop
and
sub
add
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
add
add
add
add
add
add
add
add
add
addb
add
add
add
addb
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
pop
add
add
add
add
add
add
mov
or
add
add
mov
mov
push
mov
clc
clc
mov
mov
mov
add
mov
add
add
xchg
add
sti
add
pushl
add
icebp
mov
add
daa
add
loopne
add
rolb
add
add
add
add
add
add
add
pop
add
cld
sldt
decl
add
incl
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
add
add
add
add
jo
call
add
add
addb
push
jo
add
add
add
mov
or
add
mov
add
add
add
xchg
or
add
add
add
add
clc
mov
call
add
or
vpmacssdd
add
add
mov
add
add
add
mov
add
add
mov
add
add
jg
mov
add
add
mov
add
add
clc
clc
clc
clc
mov
mov
clc
decl
mov
jo
clc
clc
mov
jle
mov
decl
jbe
xchg
decl
mov
push
add
mov
clc
clc
mov
mov
add
decl
mov
out
mov
add
ud0
clc
mov
call
add
mov
decl
mov
add
add
mov
add
add
add
or
xchg
add
add
add
mov
js
add
loopne
add
js
jle
add
add
add
add
decb
jmp
ud0
mov
incl
into
aas
incl
data16
incb
add
cld
add
jg
add
clc
add
jg
add
pop
lock
add
add
add
add
add
add
add
add
add
pop
rolb
pavgb
add
lock
pop
cld
add
pop
incl
add
cld
add
incl
inc
push
ljmp
add
add
add
add
add
add
add
add
add
addb
add
addb
addb
add
add
addb
add
addb
add
incl
add
add
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
or
add
add
ja
mov
rolb
mov
add
outsb
mov
xchg
add
add
add
add
add
decl
call
mov
add
psubb
or
add
call
add
add
add
add
jo
or
add
clc
mov
add
add
add
decl
jo
mov
add
clc
mov
clc
out
add
mov
jle
add
add
add
add
mov
or
mov
mov
call
add
mov
clc
clc
mov
mov
add
add
add
add
clc
mov
mov
add
add
add
clc
mov
mov
mov
or
decl
mov
xchg
add
add
clc
mov
mov
add
add
mov
mov
call
xchg
add
add
clc
mov
mov
mov
jg
mov
mov
mov
mov
mov
mov
clc
clc
decl
mov
call
mov
add
or
clc
clc
clc
mov
mov
enter
call
clc
clc
mov
mov
mov
add
clc
decl
mov
call
add
clc
mov
decl
clc
call
call
add
add
clc
clc
mov
divl
jle
js
loopne
add
or
mov
mov
add
add
clc
mov
mov
mov
add
add
or
clc
clc
clc
mov
mov
jo
add
add
add
clc
clc
mov
mov
mov
ja
add
add
add
add
mov
js
ja
or
mov
xchg
add
add
add
add
mov
js
xchg
add
mov
js
xchg
addb
add
add
js
call
xchg
add
add
xchg
enter
add
or
xchg
add
in
ja
add
add
add
add
addb
xchg
add
incl
add
cld
aas
add
inc
pop
add
sti
sarb
add
incl
lock
add
cld
jg
lock
add
clc
pop
and
add
clc
pop
jecxz
incl
add
lock
sar
add
loopne
jno
incl
add
loopne
adc
incl
add
rolb
cmp
add
rolb
xchg
add
incl
add
incl
add
incl
add
pop
incl
add
add
add
incl
add
add
add
incl
add
add
add
aas
add
cld
add
add
sldt
clc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
add
rolb
add
pop
add
rolb
add
sldt
rolb
add
sldt
rolb
add
pop
add
loopne
add
add
add
lock
add
aas
add
clc
add
add
jg
add
add
add
jg
add
addb
add
add
jmp
add
add
add
clc
add
add
add
incl
add
incl
add
jmp
add
incl
add
clc
add
incl
add
incb
pop
incl
add
inc
ud0
add
push
ud0
add
cld
pop
incl
add
aas
incl
add
incl
add
incl
add
incl
add
incl
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
rolb
cmpsb
dec
sub
add
add
inc
repnz
adc
mov
sbb
cmp
ret
and
add
cltd
jl
leave
addr16
popf
add
in
cmpsl
std
push
cmp
adc
sti
hlt
adc
sub
sbb
cs
pushf
ss
jne
mov
xor
sbb
in
add
pop
adc
mov
mov
fisttpll
dec
test
jbe
popa
mov
imulb
hlt
icebp
xchg
jge
mov
call
cld
add
stos
mov
dec
repnz
outsb
icebp
fnsave
test
je
loop
sub
lret
xorl
and
cmp
cs
mov
decb
mov
push
fiaddl
push
adcb
je
jge
repz
sbb
aad
xchg
iret
shrb
mov
add
inc
pop
mov
sub
hlt
outsb
push
pop
push
inc
cmpsl
adc
or
push
sbb
sbb
stos
dec
bound
add
aam
jno
out
lret
adc
mov
fs
lahf
lea
mov
rorb
mov
lret
stos
test
pop
inc
stos
pop
icebp
mov
test
cmc
lock
push
imul
sbb
dec
mov
jns
xor
cmp
inc
mov
ja
flds
jmp
lret
sbb
in
lret
mov
inc
xor
sbb
mov
pop
enter
or
ds
jae
xchg
movsl
cmp
mov
xor
add
cmp
or
mul
pop
pop
sysenter
push
in
pop
xchg
and
mov
fnstenv
push
cwtl
stos
test
outsl
mov
or
sbb
into
or
into
jb
sti
add
lret
outsl
fdivr
and
adc
push
sub
add
das
jns
out
outsl
pusha
dec
cmc
in
jmp
outsl
sbb
xbegin
xor
xchg
jae
and
ljmp
dec
push
rol
mov
mov
popl
stos
lods
sub
cli
inc
dec
sbb
dec
add
iret
movsb
out
js
mov
push
xor
fists
rclb
addr16
push
pop
je
pop
jb
fs
mov
xchg
mov
cltd
das
rclb
cmp
int
mov
jo
pop
fidivrs
loope
mov
push
ret
shrb
roll
jb
jno
mov
ficoml
push
cmp
push
in
call
jnp
inc
push
std
mov
outsb
sbb
idiv
inc
aam
ss
fisubs
mov
inc
mov
xor
es
push
rcrb
ret
xor
in
sahf
sahf
rorl
push
xchg
push
dec
sub
jg
lods
aaa
adc
jge
stos
imul
mov
outsb
cmp
out
xchg
xchg
xorl
arpl
adc
add
inc
addb
aaa
movsb
mov
cmc
xor
and
stos
fisttpl
mov
cmp
test
addr16
mov
sbb
pop
cltd
divl
stos
mov
sbb
insb
add
jno
inc
mov
ds
fwait
jnp
sub
xchg
mov
adc
inc
outsb
ret
mov
repz
xchg
sbb
rorb
push
pop
aad
pop
push
ljmp
outsb
out
jne
jl
fs
mov
lods
lret
mov
in
shll
jecxz
dec
add
ret
lods
adc
aas
mov
mov
inc
mov
jl
fistpll
or
mov
cmp
call
aaa
sub
fstl
pushf
aam
loope
sarl
xor
add
pop
xchg
push
lods
mov
mov
pop
inc
pop
mov
sbb
mov
pop
xchg
cwtl
imul
pop
fcomps
jg
dec
or
pop
mov
mov
mov
or
mov
loope
pop
imul
pop
and
jmp
out
bound
lock
push
or
cmp
and
lds
jno
adc
repnz
stos
mov
les
int3
movsb
and
push
mov
andb
fscale
and
push
mov
ret
jae
icebp
je
aas
xor
insb
pminsw
mov
inc
jge
fsubrs
mov
repz
add
pop
roll
jmp
mov
sti
adc
data16
push
neg
jo
adc
repnz
int
xlat
dec
pop
loop
cmp
repz
aas
inc
and
sarb
xor
lahf
loop
or
test
add
ficoms
and
ss
test
in
or
popa
xor
push
ds
xor
cli
sbb
loope
push
inc
jle
pop
mov
cs
arpl
into
cmp
fdivs
xor
fwait
push
pushf
sbb
int3
push
cmp
out
imul
jp
push
mov
out
or
in
ret
push
pop
xchg
fcompl
add
dec
or
jnp
add
dec
push
into
jge
aaa
pusha
jecxz
inc
push
int
movsl
jb
outsb
xchg
in
ret
ret
jo
inc
and
xchg
pop
sub
fisubrs
mov
dec
mov
xchg
fistpll
fstp
mov
xchg
scas
xchg
iret
arpl
xlat
stos
clc
jo
push
dec
cmp
cmp
ja
xor
add
mov
cmp
lcall
arpl
movsl
push
rcl
jg
add
dec
sub
mov
or
adc
std
in
call
repnz
sub
outsl
mov
mov
xchg
or
enter
dec
cmc
sub
ret
pop
pusha
out
push
in
jmp
aad
int3
cmp
jb
outsb
jb
aas
add
leave
xchg
inc
mov
cltd
icebp
cmp
adcl
xchg
xor
cltd
orl
cwtl
loopne
sbb
pushf
xchg
jo
cmp
cmp
add
dec
mov
pop
sar
popf
mov
jecxz
inc
gs
push
inc
cmp
or
xor
pop
in
rcr
mov
push
mov
lock
jo
mov
adc
filds
insl
mov
fsub
aaa
rcrl
sub
cs
scas
in
jecxz
push
scas
jmp
in
aam
lods
push
sbb
leave
push
movsb
xchg
add
ret
nop
mov
lds
leave
sbb
xchg
xchg
out
jne
jecxz
jnp
mov
jecxz
fisttps
aaa
into
iret
inc
es
test
js
add
insl
pop
jbe
pop
imul
fnsave
add
and
icebp
jbe
cmpsb
cmp
aad
lret
cmp
adc
jecxz
mov
outsl
and
push
leave
das
mov
mov
scas
inc
sub
add
adc
mov
xor
imul
mov
cmpsl
rorl
rcrb
mov
add
pop
loopne
xor
push
sbb
mov
test
add
fiaddl
pop
xchg
mov
in
mov
movups
sub
sahf
inc
mov
sti
hlt
mov
imul
mov
xorb
xchg
loop
lods
nop
sub
subl
sub
ljmp
mov
push
enter
or
imul
mov
lret
sub
enter
cmpsl
std
sbb
sub
push
mov
lock
push
cli
ret
cltd
mov
mov
iret
leave
pop
rolb
scas
outsl
adc
adc
pop
cs
push
adc
mov
and
data16
stc
out
ja
rcl
or
xchg
push
add
fdivrp
mull
push
jb
mov
jl
push
jmp
push
mov
dec
mov
mov
xchg
ficoml
mov
sub
ret
xchg
sti
push
add
inc
pop
fbld
pop
addb
sub
xchg
inc
arpl
push
mov
in
jge
cmp
pop
jbe
xchg
jp
xlat
mov
fwait
push
sbbb
pop
xor
and
or
lcall
fcompl
das
xchg
insl
cmpsb
loop
pop
fnstenv
inc
push
cmp
cmc
dec
jge
arpl
pusha
iret
sub
pop
imul
sbb
scas
fwait
rorb
inc
inc
xchg
iret
xor
aas
and
cltd
xor
xchg
aaa
pop
jecxz
jb
adc
test
les
pop
jbe
outsb
dec
mov
or
jg
mov
mov
xchg
mov
loopne
lret
sti
or
outsb
mov
pop
dec
mov
pop
idivb
mov
inc
addr16
xchg
mov
lods
jns
and
jl
into
xorl
aas
cmp
jle
lods
and
add
ljmp
mov
cmp
ret
pop
fists
test
sahf
sub
jae
lcall
jecxz
pop
sbb
fcomps
fcomps
dec
subl
outsl
ss
bound
mov
mov
lcall
mov
fsts
roll
adc
int3
inc
xchg
pushf
lret
and
insl
inc
push
jle
stc
rolb
sub
dec
jo
leave
push
pop
dec
inc
and
add
mov
cmpl
lcall
xor
mov
mov
cli
cmp
mov
flds
add
xchg
outsl
cmp
sub
stos
push
xor
leave
sub
mov
jl
push
js
mov
ret
push
in
cmp
imul
push
adc
cwtl
cmp
cmpsl
inc
push
sahf
movsb
mov
sbb
mov
sbb
fs
pop
je
dec
xorl
ret
out
aas
push
xchg
cmpsb
xchg
test
iret
sysret
adc
pop
pop
leave
push
jo
inc
jl
push
or
idivl
movsl
aad
out
addr16
mov
jg
subb
mov
mov
add
js
xchg
pop
xor
subb
popf
push
shrb
jae
push
out
shlb
fdivs
daa
push
in
cltd
cld
xlat
sbb
mov
jnp
fdivrl
pop
fwait
cmp
cld
xchg
fdivs
mov
pop
iret
sahf
mov
push
pop
loope
xchg
xchg
outsb
mov
push
push
xor
fstpt
js
test
push
in
inc
push
sub
xchg
pop
or
mov
add
mov
daa
stos
xchg
imull
ret
aaa
sub
pop
in
and
mov
dec
xor
lods
enter
jecxz
repnz
loopne
adc
xchg
jns
das
pop
push
nop
xchg
mov
insb
rol
ds
push
pop
mov
ljmp
push
xchg
jae
ljmp
jg
add
sbb
cmp
xor
dec
xchg
pop
mov
xor
mov
dec
fsubl
mov
push
mov
lock
add
ret
icebp
sti
mov
test
dec
jecxz
dec
adc
jne
jle
out
dec
dec
pushf
scas
adc
callw
adcl
cmc
pop
jle
cmp
push
mov
dec
cmp
mov
repz
push
add
psubsb
leave
mov
call
fildl
pop
adcl
pop
imul
mov
sahf
sbb
imul
adc
jne
push
inc
cs
ss
testl
or
cmp
lock
or
add
xchg
aam
mov
rorl
es
jne
inc
sbb
aam
icebp
out
pop
sub
mov
jl
mov
ret
and
sbb
pop
arpl
sbb
pop
mov
inc
sub
jno
insb
pop
sbb
out
mov
stc
test
dec
fs
js
push
dec
mov
cmpsb
jge
push
mov
nop
xchg
pushl
popa
or
add
xchg
nop
movsl
loopne
subl
dec
les
inc
sbb
addb
or
les
ss
mov
je
fidivl
inc
push
and
inc
xchg
push
aaa
enter
or
push
xchg
sahf
mov
dec
and
int3
dec
loopne
out
clc
jmp
sub
inc
pop
sahf
xchg
sub
xchg
rcl
adc
popa
orl
xchg
scas
mov
cli
pop
jg
std
sbb
nop
push
lahf
imul
stc
rorb
or
mov
inc
mov
call
xor
xchg
inc
out
sub
out
int3
mov
lock
lahf
cmp
dec
clc
mov
addr16
or
call
movsb
jp
sbb
jb
imul
ds
outsl
mov
xchg
add
mov
sbb
jmp
and
push
push
imul
inc
adc
or
shll
xlat
pop
jle
pop
push
sub
push
xor
pop
test
call
mul
cmp
lar
xor
aaa
fistps
mov
pop
lret
adc
mov
lret
xchg
xchg
pop
mov
in
ret
lea
xchg
mov
and
jle
dec
push
loop
push
cli
mov
fcmovne
es
fst
mov
cltd
test
mov
xchg
add
cmpsl
pop
xchg
ljmp
and
xchg
daa
data16
cmp
dec
rolb
ja
ficoml
jne
pop
loop
push
dec
js
sub
push
mov
test
xor
ss
cmp
cmpsl
push
and
jp
aaa
xor
clc
mov
jns
arpl
int3
push
cmpsb
jl
shrl
adc
xchg
lcall
loope
cmp
aaa
stos
test
push
jo
lods
daa
imul
call
cs
sbb
xchg
jns
xor
movsb
mov
jo
ja
xor
mov
je
mov
sub
outsb
int
cmp
xor
repnz
inc
jl
jne
test
mov
pop
xchg
cmpsl
nop
imul
push
jmp
cwtl
shr
mov
out
add
inc
mov
cmp
mov
push
loope
addb
lods
pop
inc
mov
cmp
push
in
add
and
inc
in
scas
and
jecxz
gs
and
inc
loopne
pop
xor
pop
pushf
sti
sbb
mov
jecxz
loope,pn
test
stos
jmp
mov
jmp
xor
jae
cmp
aam
shrb
addr16
lods
dec
and
dec
sbb
outsl
xchg
sbb
xchg
adc
lock
dec
addb
lods
out
ds
ljmp
rep
imull
sub
daa
cmp
fmuls
mov
in
push
mov
mov
pop
icebp
cmp
insb
push
adcb
add
stos
test
inc
clc
xchg
ljmp
push
lret
in
pop
test
pop
call
cmpl
xor
sub
mov
sub
xchg
dec
pop
inc
fiadds
mov
pushf
subl
bound
jl
mov
repz
sbb
pushf
repnz
and
dec
js
adc
icebp
push
jnp
arpl
ret
sahf
aad
fcoml
incb
or
mov
cmpsb
sahf
or
xchg
xor
sti
mov
mov
ja
or
mov
mov
pop
lahf
mull
or
adc
repnz
xlat
xchg
or
outsl
inc
cmpsb
xor
sarl
outsl
push
lods
testb
or
lods
add
daa
xor
ja
lods
int
push
aam
jecxz
mov
inc
nop
sahf
sbb
xor
fsubrs
adc
jge
or
incb
and
jne
fisubrs
lds
mov
lret
bswap
fstps
aad
lahf
lcall
xor
add
hlt
push
les
lahf
in
cs
mov
adc
insl
adc
in
mov
and
inc
daa
icebp
adc
lcall
lahf
test
inc
fbld
imul
cmc
testl
je
pop
enter
jecxz
cmc
imul
mov
dec
inc
sbb
pop
xchg
stc
fstps
movsl
mov
mov
or
xchg
rorb
fistpll
mov
movsb
sub
out
test
test
js
add
fistpl
jno
out
ljmp
scas
dec
ja
jcxz
aas
sti
stos
rcrb
push
ret
clc
packsswb
xchg
lods
fnsave
dec
mov
fs
mov
mov
notl
scas
mov
mov
sub
addr16
fsts
and
xchg
popf
ja
cmp
out
ss
mov
mov
jmp
xor
out
mov
jo
scas
xor
cld
adc
xchg
mov
in
sbb
mulb
jp
mov
mov
cmp
int3
fwait
xchg
popa
push
and
add
stos
insb
cmp
inc
neg
in
dec
and
clc
dec
nop
repz
jle
jle
dec
js
outsb
pop
addl
xchg
pop
lods
xchg
shrl
leave
and
pusha
mov
mov
dec
and
sbb
mov
xchg
jl
fisubrl
cmp
and
pop
ds
mov
ljmp
sub
cmpsb
pushf
and
scas
pop
mov
mov
test
cs
movb
jg
popa
mov
xor
lret
call
dec
fstl
ds
es
push
fst
lahf
stc
mov
mov
xor
outsb
cli
cmp
fs
adc
jmp
insl
inc
aad
mov
cmovbe
sbb
lea
fdivrp
xor
pop
mov
fsubs
adc
das
int
cmc
shld
ja
sub
push
inc
std
sarb
rorb
cmp
adc
and
mov
rcl
das
rcrl
mov
inc
mov
pop
cli
cmp
stos
aaa
mov
cmp
pop
fistpll
addb
mov
push
shl
pop
jp
pusha
dec
fwait
mov
pop
jns
adc
shll
jne
mov
mov
xor
push
mov
mov
shrb
mov
mov
mov
inc
out
pop
cmpsb
movsl
fcoml
add
iret
insl
inc
lds
adc
add
insl
test
loope
jne
cli
lea
int3
xor
stos
pop
jg
inc
inc
mov
repz
in
xchg
xchg
ret
jle
mov
int3
dec
xor
sbb
dec
xor
xlat
push
cld
add
int3
mov
lods
ret
jo
dec
shrb
aam
push
fcoms
stos
push
inc
mov
fnstcw
and
mov
ret
enter
lret
jae
xchg
xchg
insb
cmpsl
sub
cltd
sub
test
repz
jl
js
ficomps
clc
xor
sub
sub
pushl
outsl
cmc
or
js,pn
mov
cs
out
dec
and
ret
hlt
xor
scas
mov
shrl
aaa
sub
mov
out
test
sub
aad
pop
xor
pop
movsl
mov
xchg
sbb
aaa
pop
jp
ds
push
pop
popf
stos
mov
dec
popf
dec
cmp
mov
popa
jb
inc
mov
jecxz
xor
stos
cs
adc
xor
mov
insl
jnp
push
pusha
adcl
jno
aam
sbbl
lds
jg
sub
mov
mov
aaa
cli
ficoml
and
mov
push
mov
xor
add
mov
cmp
sbb
jg
rclb
jmp
mov
mov
mov
cld
movl
stos
fsubs
cmpsb
mov
int3
test
out
push
fistpll
int
xor
out
adc
pop
imull
pop
and
or
ficompl
sbb
xchg
and
imul
adc
xchg
or
testb
inc
jmp
shr
mov
movsl
jmp
mov
loope
clc
adc
lods
or
sub
jns
aas
sarl
cwtl
mov
lret
jle
ljmp
popa
cmp
jmp
das
jns
mov
mov
inc
jl
pop
ret
fisubrl
jp
mov
xchg
adc
xor
sub
out
sub
sbb
int3
aam
push
out
xchg
lret
shll
push
ss
inc
in
out
xchg
nop
shl
and
cmp
or
jnp
pop
xor
cmp
jle
sbbl
pop
pop
xchg
push
add
mov
push
leave
aaa
push
inc
int
jbe
lahf
test
setge
shll
fs
ds
mov
inc
add
dec
adc
mov
cmpsl
cld
cmpsb
out
mov
adc
hlt
xor
jbe
in
int
popf
xor
ret
and
mov
sub
or
cmp
jae
xor
addr16
test
fcomps
out
movsb
or
insl
mov
aas
mov
sub
dec
sub
inc
aad
add
mov
in
jo
jb
popf
mov
les
cli
and
dec
jmp
jo
cmpsl
in
dec
jg
xchg
imul
xor
test
pushf
nop
push
push
arpl
mov
xchg
out
mov
test
mov
mov
dec
movb
xchg
dec
test
pop
test
fidivrs
xorb
inc
xchg
mov
or
daa
sbb
add
mov
test
and
mov
sub
add
or
cmc
jb
mov
in
shlb
pop
rorl
add
insl
jo
movsb
loopne
loopne
fwait
jbe
cmp
mov
jmp
or
fidivrl
mov
jae
fs
imul
pop
call
adc
stc
cmc
push
mov
loope
dec
pusha
cmp
aam
mov
cltd
push
mov
shll
jl
in
and
mov
mov
and
iret
pop
test
inc
cmpb
daa
mov
mov
mov
mov
xor
fisubrl
decb
addb
mov
cmp
adc
xor
sub
cld
xchg
mov
xchg
cltd
movsb
jns
cmp
xor
lock
mov
xor
roll
mov
out
xchg
enter
aad
inc
js
fwait
xchg
sub
cs
std
scas
jecxz
dec
rorb
add
and
sbb
scas
aas
sbb
hlt
jl
lds
inc
push
scas
inc
js
pusha
mov
jg
dec
or
cs
xchg
test
lahf
sub
test
and
aad
orl
pushf
xor
mov
push
xchg
sub
cmp
and
test
movsb
jne
add
lcall
bound
mov
clc
fsubrp
pushf
mov
std
shll
push
loop
xor
mov
aas
cmpsb
popa
repnz
jbe
dec
testb
or
and
and
or
mov
pop
jno
ja
sub
xchg
mov
lds
repnz
cmp
cmpsb
test
pusha
lds
loope
cmpsb
pop
cmp
sub
arpl
adc
xor
push
inc
pop
mov
ds
fildl
and
dec
lods
imulb
out
rorb
cltd
xchg
ds
mov
arpl
lret
push
and
orl
sbb
mov
xor
and
mov
into
ret
arpl
mov
loop
sub
add
fistl
test
dec
xchg
and
inc
test
dec
in
in
push
cmp
bound
adc
push
add
xchg
in
stos
push
push
popf
aaa
testb
add
shlb
xchg
xchg
cmpsl
adc
inc
mov
adcl
sbb
popf
dec
popa
xchg
or
les
add
push
scas
mov
mov
jne
xor
jmp
xchg
call
add
push
xchg
push
push
jno
ds
and
add
add
sbb
push
cmp
jb
sub
insl
gs
movsb
mov
inc
adc
leave
int3
inc
psrld
insb
inc
mov
jns
in
stos
enter
lcall
call
daa
into
lret
popl
mov
sub
lahf
inc
sahf
int3
push
xor
mov
sub
mov
test
cmp
nop
mov
imul
mov
stos
mov
inc
leave
fidivrl
and
sti
pusha
jb
faddl
in
call
push
int
js
push
rorb
fcoml
stc
adc
jb
adc
cltd
add
out
jl
xor
lods
xchg
and
out
or
fs
or
push
das
xor
dec
mov
loop
push
jb
mov
add
sub
mov
out
xchg
or
rolb
stos
push
and
cmpsb
add
notl
pushf
push
and
enter
ljmp
xor
orb
std
push
xorb
inc
leave
dec
cmp
mov
sahf
mov
mov
fists
cmpl
add
movsb
adc
mulb
lods
orl
daa
fstl
clc
or
in
push
mov
mov
or
adc
cmp
jae
ds
subb
imul
add
ss
shl
popa
leave
adc
mov
dec
sti
add
inc
das
leave
inc
pushf
into
add
and
add
lret
adc
add
jl
cmpsl
loop
out
or
imul
pop
aaa
decb
pop
mov
out
cmp
mov
dec
inc
mov
xlat
push
lahf
fisubs
or
movsl
ret
xchg
jae
add
sub
dec
cli
xchg
xchg
sarl
pop
mov
jne
lret
inc
rcrb
pop
add
jnp
sbb
push
push
dec
add
xchg
mov
mov
add
fwait
loopne
mov
mov
push
fcompl
sub
add
mov
addb
scas
pop
and
out
push
dec
pop
adc
jne
rclb
inc
mov
sbbl
jno
cmp
xor
add
popf
or
mov
sub
mov
fsubrs
es
gs
jbe
mov
roll
dec
into
sub
jecxz
hlt
mov
jns
pop
pop
lcall
jnp
mov
push
adc
pop
cmp
in
jb
icebp
jnp
pop
aam
push
outsb
sbb
push
xor
xchg
daa
fcomp
popf
push
cwtl
jnp
cmp
push
mov
jbe
faddl
mov
test
loopne
sahf
inc
decl
lahf
cmpsb
addr16
mov
imul
jo
sub
pop
inc
pop
and
enter
pop
into
cmpsl
hlt
testb
aam
call
rorl
imul
les
iret
inc
int3
pusha
inc
lds
test
jnp
pushf
cmp
jns
jle
mov
xor
aas
jns
xchg
inc
jmp
or
out
leave
ret
add
mov
push
sub
sti
add
aad
out
dec
iret
and
lea
lock
cmp
loope
shlb
testb
out
lods
pop
pop
pushf
push
xchg
roll
test
ljmp
in
lods
fwait
lahf
std
dec
insl
mov
sub
and
aam
add
cmp
sub
lcall
clc
iret
sbb
add
jle
sbb
xchg
jo
mov
jp
test
sar
mov
jg
adc
or
imul
imul
mov
inc
mov
in
sub
popf
fsubl
imulb
outsl
pop
push
pop
sub
jns
push
sbb
movsb
jl
cltd
cmp
in
addr16
cmp
shl
test
aaa
dec
mov
pop
xchg
imul
xlat
data16
sub
mul
dec
ret
mov
jno
popa
xor
xor
out
cwtl
xor
leave
jns
in
int3
dec
ret
fistpl
mov
pop
insb
dec
mov
int3
sahf
jbe
outsl
dec
adc
jl
jns
mov
andl
or
pop
into
jae
push
lods
pop
movd
loope
pop
push
les
push
push
fcoml
inc
cmp
sub
stc
loop
push
sbb
dec
push
mov
test
ror
and
sbb
jmp
cwtl
mov
xor
mov
clc
inc
inc
call
ja
andb
xor
in
ljmp
lock
ljmp
and
pop
push
push
popf
sbb
xchg
int3
js
dec
dec
jae
mov
lods
mov
rorl
jo
movsb
fildl
sub
add
pushf
cmp
jns
imul
stos
repz
sti
loope
lret
mov
or
popf
and
outsb
inc
imul
outsb
and
int3
aas
adc
cs
test
push
mov
ss
dec
shll
cmp
scas
lock
adcl
push
lret
xor
dec
int
add
in
aam
sub
mov
xlat
mov
pop
in
in
xchg
mov
data16
cmp
dec
in
and
adc
mov
cld
xor
popl
fsubrs
sub
xor
repnz
popf
call
stos
dec
add
scas
outsl
leave
scas
pusha
int3
pop
clc
shll
pop
xchg
push
fs
inc
inc
mov
adc
ja
dec
or
aam
jbe
lods
inc
jl
jmp
mov
pop
pushf
arpl
sub
rcrl
adc
jns
rorl
sbb
dec
int
mov
lahf
jp
fcoms
fnstcw
mov
pop
es
cltd
adc
cmc
scas
pop
pusha
or
shll
imul
mul
loopne
ret
cmp
sub
fcoml
call
test
lds
in
adc
lds
xadd
out
into
xor
xchg
pop
iret
xor
cmp
cs
mov
xor
inc
mov
lcall
loop
sbb
sti
xchg
mov
divps
pushf
and
popf
arpl
push
jmp
mov
ret
jecxz
data16
sbb
out
enter
daa
dec
or
sahf
dec
push
push
cltd
xchg
jl
idivl
aas
lea
popf
pop
hlt
sbb
cmpsb
mov
test
call
push
jmp
inc
int
pop
jns
mov
cmp
std
fstpl
and
lret
push
arpl
cwtl
pop
jb
add
into
push
aam
jbe
sub
mov
cmpsb
inc
xor
xchg
stos
adc
js
jno
lret
sbb
xorb
das
lock
leave
inc
sahf
mov
sub
xor
out
loope
dec
and
lret
inc
fldenv
popf
jge
arpl
js
lahf
lcall
inc
loopne,pn
mov
sub
add
mov
pop
sub
push
xchg
pop
icebp
adc
mov
adcl
cmpsb
sub
lods
and
cmc
lock
push
inc
jmp
nop
jbe
xchg
xchg
xor
mov
out
loopne
push
out
data16
daa
cltd
loope
add
fbstp
xor
leave
sub
mov
mov
cmp
loope
adc
push
out
nop
mov
mov
add
nop
shll
hlt
aam
inc
or
and
xchg
fs
adc
cmpsl
addr16
cmpsb
pusha
rcrb
jp
test
mov
lea
dec
inc
mov
mov
cmc
imul
inc
mov
or
inc
stos
mov
xchg
xorb
rcrl
cmp
aam
sbb
dec
jl
mov
hlt
insb
pusha
lods
clc
fwait
fs
mov
sbb
ljmp
pop
in
mov
dec
pop
dec
jb
add
imul
mov
push
lds
mov
cwtl
das
stos
sti
cmp
and
cmp
into
push
out
cwtl
in
pop
and
rcrb
pop
inc
fwait
add
add
sbbb
pop
xchg
orb
adc
call
in
mov
lds
and
and
add
gs
adcb
insb
fnstenv
je
cmp
lods
out
sbb
lods
lea
jb
jnp
sbb
dec
repnz
or
pushf
and
or
xor
push
fldln2
xchg
fadds
ret
adc
mov
push
fisubrs
lcall
add
mov
testl
jns
jle
xchg
xchg
movsb
mov
jge
or
repz
dec
ret
mov
aas
inc
push
aas
outsl
out
mov
push
pushf
leave
push
popf
push
fs
jnp
mov
mov
pop
xor
stc
cli
cmp
ljmp
lret
mov
sub
push
mov
insl
nop
inc
xchg
ss
jg
bound
lods
or
xor
add
push
mov
sub
xor
cli
je
jp
pop
xchg
jnp
fsub
iret
out
jns
push
or
cmc
fldcw
sub
pop
xchg
sbb
imul
or
adc
in
rcll
mov
xchg
jae
push
cld
std
out
stc
push
dec
mov
sub
movsb
ds
inc
inc
add
pop
jp
aas
adc
jno
pop
aam
stc
jge
mov
xor
push
ds
jle
in
in
lcall
lock
cmp
pushf
divb
sbb
icebp
sbb
cmpsl
subb
or
mov
xchg
cwtl
mov
mov
add
loopne
enter
mov
clc
mov
jmp
mov
out
popf
mov
sub
mov
or
pop
add
mov
mov
sarl
jl
leave
mov
sti
push
in
adc
xor
sub
jg
jns
enter
pop
outsl
or
test
lds
out
cmp
push
adc
push
and
rep
mov
std
fwait
pop
jo
sbb
aas
push
aam
and
in
adc
popa
imulb
cmp
loopne
hlt
inc
inc
les
sti
sbb
out
fidivrl
cmpsl
fildll
sub
mov
mov
and
mov
das
and
inc
xchg
jp
mov
cmpsl
mov
pop
mov
stos
inc
ljmp
xchg
out
sbb
push
mov
fsubl
inc
or
mov
ljmp
imul
xchg
jle
xchg
pop
sti
or
jbe
outsb
mov
add
movsb
mov
and
sbb
jp
clc
xor
sti
or
adc
pop
mov
mov
inc
push
dec
xlat
jg
inc
adc
pop
iret
push
outsb
jno
stos
lods
xchg
fsubl
or
dec
rcll
mov
dec
ljmp
movsl
pop
test
sbb
jge
aaa
test
cli
jg
mov
dec
mov
mov
gs
arpl
pop
cmpsl
pop
into
cmp
sbb
test
loopne
inc
aaa
mov
iret
pusha
sbbl
xchg
aad
loopne
mov
push
jae
mov
add
pop
popa
sub
adc
ljmp
ss
sbb
imul
in
test
lods
mov
int
cs
mov
mov
xor
or
cli
gs
pop
cmp
push
mov
pop
add
aas
sub
or
cmp
gs
push
jp
popf
insl
mov
adc
lods
sub
add
sub
sti
pop
push
adc
out
dec
xchg
into
xor
movsl
dec
unpcklps
imul
bound
loope,pt
loope
mov
adc
push
jp
xchg
mov
dec
stc
jo
inc
mov
cltd
fs
mov
mov
push
jg
inc
dec
inc
mov
movsb
add
sub
daa
cmc
inc
lret
in
into
cld
jb
gs
out
push
add
inc
pop
insb
lock
cmpsl
jge
outsl
or
push
xor
sub
xor
sub
and
fdivs
cli
sbb
fnstenv
test
inc
jg
pop
in
push
fistps
lds
and
ds
pop
int
adc
inc
sbb
icebp
and
sub
imul
es
xchg
in
roll
dec
cld
sub
push
lahf
mov
jmp
outsb
inc
jae
or
adc
es
lods
fdivs
add
std
push
mov
fnstenv
inc
cmp
or
stc
lock
pop
push
icebp
sbb
cmp
in
das
es
out
mov
rcl
mov
inc
jns
cmpsb
test
cmp
loop
and
jo
mov
or
lods
cld
sbb
pop
mov
xchg
jl
dec
add
xchg
les
or
dec
fcoml
filds
sub
sti
mov
arpl
mov
pop
lea
fwait
push
es
xchg
fwait
sahf
dec
fcompl
movsl
call
stos
cld
imul
and
or
jbe
loopne
jno
xchg
jecxz
dec
addr16
lock
dec
xor
xlat
jecxz
fbstp
test
orb
std
pusha
dec
int3
in
dec
pop
sbb
fs
maxps
popf
imul
xchg
lods
aam
jno
lods
fbstp
jmp
orb
sbb
rcrl
int
mov
out
inc
jmp
pushf
and
mov
pop
jmp
and
mov
xchg
gs
call
pop
and
test
shlb
pushf
loop
xor
cmp
aas
les
sub
test
or
pushf
mov
negl
fists
cwtl
pop
xchg
xor
aas
rol
push
pop
cmp
in
sub
xor
and
test
sahf
fstp
mov
js
mov
imul
pop
repz
mov
sub
aad
push
icebp
pop
push
push
lock
or
xchg
mov
xchg
movsl
or
mov
xlat
aas
xchg
fdivs
iret
andb
pop
sub
sub
popa
add
mov
mov
dec
out
inc
in
jae
jae
lcall
fs
xor
fadds
xlat
loop
repnz
lods
push
xlat
mov
insb
call
sub
sub
ds
aad
roll
pop
out
xchg
inc
push
es
push
call
sbb
jne
int
jmp
cmc
pop
je
ret
push
cmc
call
dec
les
cwtl
xor
sbb
mov
push
cltd
or
pushf
push
fstpt
pusha
adc
pop
fisttps
fbstp
cmpsb
jp
lahf
sti
cmc
add
ret
inc
icebp
out
mov
adc
insl
push
pop
and
shll
pushf
lds
cmp
push
in
in
fs
and
ret
cltd
leave
adcb
ror
inc
xlat
das
fdivr
repz
xchg
and
inc
jmp
test
out
lcall
or
andl
aam
lcall
popa
fdivl
mov
jns
xchg
ljmp
rorl
xchg
inc
jo
es
cli
aad
adc
dec
add
or
xor
cmp
or
jb
bound
aaa
dec
xor
mov
ss
jae
sbb
or
dec
scas
push
jp
mov
clc
push
xor
lret
and
addl
test
mov
mov
imul
cwtl
cmpb
popa
push
and
push
dec
inc
ret
dec
push
cmc
push
push
mov
add
pop
nop
xor
mov
sbb
adc
mov
cmp
clc
pusha
push
pop
scas
xchg
adc
xchg
cmp
cmp
dec
ss
pusha
dec
movd
pusha
jns
cmp
lret
in
cmp
xor
shll
adc
scas
dec
mov
lock
rcrb
mov
inc
jge
push
inc
gs
jg
bnd
sub
insb
pop
inc
push
pop
andl
cmp
dec
mov
mov
jbe
add
mov
push
sahf
mov
ret
enter
mov
gs
jp
nop
fs
lods
jg
mov
dec
and
stc
xchg
mov
mov
xchg
fstpl
test
sar
aad
lods
iret
and
into
int3
pop
stos
loopne
push
clc
loope
adc
in
bound
dec
mov
inc
mov
fwait
imulb
lcall
das
adc
add
out
pushf
sub
popf
rcr
shll
or
xrelease
add
xchg
bound
sbbl
fninit
dec
aas
cltd
lret
aad
fwait
mov
rclb
xchg
cmp
add
out
xor
dec
sub
ds
cmp
mov
jne
xor
rep
test
xchg
imul
cmp
das
jae
mov
orb
jp
in
add
mov
aaa
dec
pop
cmp
icebp
jbe
pusha
int
push
mov
sub
fnstsw
lcall
push
daa
push
fs
mov
int3
arpl
adc
nop
clc
and
subl
orps
js
adc
jle
push
hlt
fisubs
sahf
push
jnp
popf
or
ds
sbb
xlat
out
mov
sub
sarl
pop
push
sub
std
inc
mov
mov
inc
cmp
addw
imul
push
pop
add
push
stos
lcall
dec
bound
into
fbld
mov
jae
lcall
ret
push
inc
push
outsb
int3
fs
nop
shll
movsb
sub
push
mov
mov
jecxz
ret
push
aam
int
push
cmc
cmpsl
mov
test
lea
sub
and
fxch
dec
jbe
mov
loope
cmp
xchg
push
pop
jmp
sub
out
pop
adc
scas
nop
dec
dec
aaa
cwtl
push
jmp
imul
in
xor
push
shll
xor
iret
aas
loop
iret
push
stc
jo
psrld
push
or
sub
sarb
inc
mov
fstps
add
jb
mov
fmull
stos
cmp
imul
scas
outsl
mov
push
int
pop
xor
in
sub
fbld
xchg
mov
inc
dec
loope
ja
mov
fstpt
mov
sbb
idivl
lret
add
jae
clc
or
mov
inc
rcll
shl
int
sbb
cwtl
sbb
popa
jne
push
jo
ds
pop
jns
test
pop
pop
add
into
or
fcoms
mov
fdivs
das
loop
dec
mov
add
mov
mov
xchg
mov
mov
mov
sbb
pop
jecxz
mov
add
or
arpl
insl
ret
push
dec
lcall
jg
mov
in
cmc
cmp
push
xor
xor
mov
rcll
test
faddl
daa
mov
enter
les
mov
ds
mov
lcall
mov
xchg
out
mov
es
jbe
into
rcll
mov
mov
cld
fwait
xor
ror
ret
sub
mov
loopne
scas
mov
roll
mov
stc
dec
mov
push
shlb
push
push
jp
lods
clc
cmp
fldl
mov
int
nop
and
and
ret
mov
pop
loopne
in
push
das
mov
popf
jge
lret
pop
inc
mov
xchg
insb
test
mov
cli
mov
sbb
jle
aas
sarb
jg
idivb
jns,pt
pop
sub
orb
lcall
aas
es
lods
jae
adc
sbb
jecxz
push
in
push
and
sub
stc
leave
add
pop
mov
push
mov
nop
dec
fwait
repz
pushf
sahf
push
scas
jne
loopne
mov
sbb
and
pop
cmp
shll
lods
pop
dec
lret
mov
sub
xchg
popf
and
fwait
mov
xchg
call
clc
sbb
dec
lahf
add
dec
lds
mov
in
out
je
outsb
popa
sub
cli
sbb
and
push
inc
cmp
push
pushf
imul
or
xor
push
cmp
lahf
jmp
dec
xlat
adc
fcmovu
movb
push
test
and
inc
movsl
out
es
inc
or
xchg
push
sub
push
repnz
lahf
pop
scas
fwait
cmpb
lock
ret
mov
out
jmp
add
xchg
fdivrs
test
fwait
adc
push
in
mov
mov
js
fstps
insb
arpl
sbb
xchg
mov
daa
fucomp
xrelease
or
mov
cld
jge
add
notl
mov
mov
xor
jae
popf
in
adc
mov
inc
roll
adc
bound
and
and
fadd
addl
aaa
sub
mov
les
je
mov
mov
jbe
mov
movswl
sbb
js
add
sub
int3
shl
repz
jnp
push
je
insb
ja
sbb
mov
rorb
pop
dec
mov
mov
add
pop
push
imul
outsb
enter
out
xchg
mov
dec
jo
push
pop
inc
loopne
lcall
cmc
call
push
cmp
clc
lret
sub
scas
shrl
inc
sub
xchg
js
ja
inc
jp
stos
std
dec
and
sub
fisubrl
cmp
stc
rcll
arpl
xor
mov
mov
inc
inc
and
mov
mov
call
mov
or
enter
or
bound
cli
jg
pusha
jp
inc
sub
adc
negl
pop
lods
aaa
push
adc
js
imulb
xchg
je
inc
mov
js
xlat
lods
xchg
lahf
adc
cmc
fwait
ret
mov
mov
mov
pop
mov
jnp
ret
cmpsl
or
push
sub
outsb
ja
pop
sbb
sub
insb
lods
add
inc
adc
adc
inc
out
add
mov
mov
jbe
insb
push
in
cmp
into
jecxz
mov
cmp
cmc
out
fnsave
lods
add
mov
xor
and
in
fwait
lahf
mov
push
mov
mov
mov
sub
es
pop
jbe
loope
stos
inc
bound
adc
addr16
xchg
mov
js
adc
jae
xor
in
and
xchg
adc
inc
ds
aad
sub
mov
sub
outsb
cmpsb
imulb
sbb
inc
mov
adc
ljmpw
mov
fnstcw
push
inc
mov
inc
mov
addr16
fcmovne
or
roll
arpl
dec
push
and
pop
add
pusha
pop
add
scas
mov
mov
inc
mov
mov
cmp
in
dec
jecxz
mov
push
xchg
push
dec
stos
ja
mov
test
or
pop
nop
jbe
mov
mov
xchg
cmp
pushf
test
pop
or
fldl
in
pop
and
mov
clc
out
cmp
in
lds
inc
in
xlat
push
addr16
ja
stc
add
in
negb
sbb
leave
cwtl
ljmp
out
ja
push
jno
cmp
into
inc
addr16
mov
xorl
test
mov
imul
adc
push
inc
xlat
adc
pop
stos
push
fwait
cmp
mov
insb
test
outsb
xor
dec
sbb
mov
and
shlb
xchg
push
gs
lods
jecxz
call
sbb
jle
cmp
mov
or
push
jmp
and
xor
stc
add
xchg
out
mov
push
jl
out
mov
mov
sbb
mov
test
sub
or
jl
add
sub
setae
xchg
mov
pop
jle
fidivl
xor
icebp
cmp
push
sbb
pop
out
pop
pop
ds
inc
push
dec
push
xchg
imul
mov
push
xchg
cmpsl
and
shrl
mov
gs
jl
addb
movsl
mov
fs
call
sub
sbb
adc
xor
mov
cmp
dec
rclb
jp
mov
cmpsb
pop
int
test
cmp
mov
stos
fucom
adc
or
into
out
and
les
pushf
repz
ret
hlt
add
lock
bound
sbb
mulb
test
inc
pop
mov
mov
jne
mov
cmp
sub
mov
add
push
jecxz
mov
xchg
adc
push
imul
orl
jge
lds
pop
mov
pushf
stos
xor
lods
mov
ds
fbstp
and
push
push
std
inc
pop
and
fldl
imul
adc
test
rcrl
addr16
push
xor
test
jp
jp
add
mov
fcoms
mov
int
sub
or
aam
mov
jp
je
inc
sbb
xchg
stos
xor
mov
jecxz
mov
mov
pop
sub
int
mov
pop
mov
cmc
mov
inc
fnstcw
sub
mov
inc
add
test
into
scas
insb
jb
fwait
mov
test
mov
pop
in
stc
jl
lret
mov
in
int
outsb
and
ljmp
add
mov
adc
movsb
jmp
leave
lcall
mov
dec
ds
rcr
pop
hlt
push
fisttpll
sub
mov
int3
lret
mov
loopne
lret
dec
xchg
push
fwait
dec
andb
cmp
inc
mov
int
mov
xchg
into
sub
push
cwtl
in
dec
imul
mov
jge
push
mov
jae
xor
add
push
jns
imul
roll
loopne
cwtl
adc
ret
sbb
pusha
notl
das
mov
in
ljmp
xchg
cmp
jb
jnp
xchg
jbe
pop
add
jnp
jle
pop
adcl
lret
int3
mov
mov
cwtl
jne
mov
jae
or
fstpl
inc
enter
iret
push
lcall
cmp
mov
mov
sbb
jmp
mov
push
and
push
jecxz
lds
adc
pop
pop
mov
push
adc
fcoml
rol
jge
cmp
mov
movsb
cmpsl
jo
call
cwtl
in
mov
mov
and
in
adc
jle
loopne
gs
mov
jmp
xor
cmp
call
jmp
repz
add
jne
lahf
sbb
fdivrs
lret
push
cwtl
sbb
inc
pushl
and
test
mov
fs
xchg
rorl
shrl
out
inc
mov
sub
sub
mov
and
or
std
add
xor
cwtl
shll
xor
push
fistpl
insb
xor
push
nop
add
test
sub
pop
lahf
out
cmpl
sub
sbb
fidivs
inc
sahf
loope
shl
mov
xchg
ret
mov
xor
in
sub
jp
xor
and
fwait
and
shll
data16
aam
xchg
addr16
mov
jno
sub
jo
inc
xor
cwtl
xchg
add
fdivp
dec
bound
cmp
push
adc
stos
adc
sbb
insl
jns
inc
or
xor
lea
jp
mov
fnstsw
jmp
and
lahf
scas
sbb
cld
mov
pop
ret
shl
out
fidivl
test
rcrb
jae
sbb
andb
sti
xor
inc
mov
pop
sbb
jge
pop
andl
mov
test
push
lods
sbbb
daa
inc
scas
mov
jp
int
addr16
mov
scas
xor
mov
loope
mov
lods
mov
cli
adcb
aam
in
mov
loopne
dec
push
push
jo
push
popf
or
mov
mov
jb
repnz
cld
daa
jmp
jg
jl
repnz
dec
xor
jmp
pop
daa
or
add
aam
mov
mov
arpl
outsb
sar
mov
xchg
shll
sub
pop
mov
jae
mov
call
push
sahf
rorb
cld
scas
and
adc
or
cmp
sub
push
imul
es
fcoms
rcll
test
loope
sub
or
inc
shlb
lahf
adc
mov
mov
push
push
xor
nop
xlat
popa
lods
aam
imul
mov
iret
cmp
or
fbstp
nop
mov
fwait
add
mov
mov
xor
cmp
cs
mov
sub
arpl
out
test
shr
cmp
add
test
or
inc
inc
popf
fcomps
jp
in
inc
aad
ror
xchg
xchg
xchg
fs
jb
pop
test
out
scas
jle
add
sbb
and
jno
jo
mov
sbb
es
pusha
test
insl
mov
stos
xchg
sbb
aam
inc
mov
cmpl
sub
and
fisttpl
movsl
pop
out
outsl
or
pop
jo
pop
cld
cmpsl
mov
mov
stc
aad
aam
xchg
xchg
jnp
mov
xchg
mov
pop
test
lods
scas
orl
jp
and
adc
push
dec
mov
push
lcall
nop
ret
and
outsb
pop
sub
push
adc
fs
xchg
xchg
pop
cmpsl
mov
mov
mov
push
xchg
cmpsl
call
mov
out
adc
or
lcall
inc
ficoms
aad
adc
rolb
outsb
dec
jnp
mov
ret
andb
nop
sbb
pop
enter
lods
lret
push
lret
and
movsl
mov
push
cwtl
fadd
scas
jae
ds
pop
iret
and
ljmp
cmp
fildll
mov
cmp
lock
push
icebp
add
lret
dec
add
xchg
clc
nop
cmc
and
movsl
fimull
sub
das
lock
add
cli
loopne
push
add
dec
xor
pop
inc
sub
xchg
sub
cli
lods
shr
push
dec
out
lock
and
sbb
rol
rclb
insb
es
out
push
sub
outsb
frndint
or
cmp
cmpsb
dec
mov
adc
inc
aad
mov
dec
sarb
mov
mov
ljmp
jb
insb
push
fidivrs
and
xchg
xchg
cltd
out
loopne
add
sub
outsl
dec
fdivs
leave
aad
idivb
int
pop
pop
pusha
mov
inc
incb
cmc
adc
sti
out
call
insl
push
pop
push
loope
pop
idivb
mov
fistps
loope
hlt
out
in
shl
lcall
dec
jbe
mov
mov
or
dec
adc
cwtl
sbb
adc
outsl
mov
sbb
jmp
lret
mov
or
xlat
jo
xchg
loope
fildl
pop
fidivl
fs
jne
xchg
test
sbbl
dec
or
dec
adc
aad
jl
stos
das
fs
in
xchg
fnstsw
and
pop
sbb
xchg
jmp
push
adc
clc
mov
aaa
cmp
sub
cmp
gs
shrb
lcall
dec
jle
mov
inc
cmp
ss
xchg
ss
les
ds
dec
jns
or
dec
inc
push
cmpsl
mov
add
mov
cmp
insb
hlt
adc
or
into
cmpb
push
aam
push
out
data16
sbb
pop
xchg
mov
push
repnz
notb
sub
push
js
mov
test
sbb
adc
sub
shll
mov
xchg
mov
subl
jno
mov
mov
adc
sbbb
popa
in
push
sub
lds
or
xchg
and
dec
in
jge
jp
sahf
xor
mov
cmp
jbe
clc
sbb
leave
sub
push
push
mov
mov
adc
into
test
sahf
scas
fdiv
add
sbb
dec
add
jo
xchg
test
xchg
ljmp
movlps
ljmp
insb
jge
ja
lret
mov
dec
outsl
push
stos
mov
rcr
mov
inc
jae
add
aam
push
mov
mov
push
jg
test
int3
scas
or
mov
cmp
pop
out
add
repz
push
lret
rcrb
jns
mov
jg,pn
je
mov
lock
out
fnstenv
adc
cs
add
lcall
jb
int3
pop
test
and
ret
mov
jl
out
xchg
aam
xchg
fdivl
fistpl
stc
mov
test
mov
scas
dec
push
push
pop
xor
lahf
shlb
movb
leave
mov
push
xor
jns
loopne
or
jecxz
or
pop
out
aam
icebp
lds
pop
in
out
push
in
popf
push
arpl
xchg
lret
popa
add
adc
popf
jns
lds
scas
sub
push
mov
cmp
dec
popf
pop
cli
lcall
cmp
scas
xchg
mov
xor
fcmovne
arpl
leave
sub
xorb
dec
mov
jp
data16
mov
dec
push
push
sbb
and
shl
nop
cwtl
or
iret
adc
fnstenv
test
cmp
lods
data16
or
push
inc
and
add
arpl
repz
xchg
out
inc
scas
mov
dec
test
pop
loope
pop
xchg
cmp
pop
dec
outsl
pusha
pop
es
push
outsb
and
test
adcb
mov
movsb
push
pop
cld
enter
je
sbb
repnz
ljmp
cltd
pop
loop
sbb
inc
stos
or
push
mov
add
hlt
rcll
mov
push
mov
pop
aam
ja
cwtl
movb
test
xchg
and
push
sbb
popa
aam
out
xor
insb
popf
in
adc
xor
and
inc
and
vpaddsw
and
nop
fistl
outsl
test
push
out
mov
rolb
in
jbe
loope
add
daa
cmp
xorl
and
or
adc
movsl
adc
cltd
loope
xchg
push
lods
mov
jb
ljmp
stos
mov
movsb
loop
cmc
out
pop
lret
push
data16
xchg
cmp
leave
or
xchg
imul
xor
mov
mov
stc
addl
xor
mov
inc
ja
clc
lret
ljmp
mov
mov
fwait
int
loop
out
pop
sbb
mov
dec
inc
inc
leave
xchg
lea
mov
test
sbb
inc
jnp
xchg
and
pop
daa
popf
call
neg
push
lahf
test
dec
pop
es
jp
xorl
xor
insb
hlt
jno
sub
fiaddl
ss
scas
test
cmpsb
push
aam
fldcw
dec
fcomip
lock
inc
outsb
popf
nop
out
movsl
das
and
pop
add
adc
add
xor
out
pop
aam
pop
push
adc
adc
loopne
enter
xor
test
inc
and
xor
pop
pop
cmp
sti
pop
and
lods
gs
and
adc
in
sub
sub
xchg
aam
mov
ss
arpl
insb
movl
outsb
xchg
ret
inc
js
cmp
cmc
and
push
dec
jne
mov
mov
nop
rorb
loope
or
mov
out
test
ret
iret
lret
pop
jnp
shll
fistps
outsl
pop
or
and
sbb
cltd
stos
lret
movsb
sbb
inc
sbb
or
jae
into
sub
and
pushf
sbb
imul
xor
xor
push
js
imul
mov
mov
jnp
mov
decl
xchg
ret
addb
adc
arpl
sarb
fnsave
push
imul
xchg
adc
adcb
aad
addb
iret
jle
fildl
xchg
sub
push
pop
inc
mov
enter
mov
jge
popa
scas
ror
and
push
scas
test
das
mov
popa
bound
mov
dec
jno
in
or
jp
insb
sub
xor
jl
dec
xor
jne
xor
rol
sub
rol
xchg
inc
testl
shrl
out
negb
adc
sbb
fisttps
xchg
fnstcw
sub
pusha
push
cmp
push
cmpsl
sti
int
test
dec
out
push
push
adc
xor
fs
fwait
dec
xor
push
shrl
popa
mov
cmc
mov
mov
stos
pop
scas
and
leave
andl
shr
or
mov
push
ror
dec
xor
mov
fimuls
pop
nop
push
mov
xchg
pop
pusha
into
lds
jp
sbb
shl
push
fimull
jp
sub
xor
into
call
push
insl
lcall
jno
mov
scas
or
enter
cltd
daa
mov
adc
arpl
xchg
mov
sub
add
mov
sub
sbb
leave
mov
or
orb
aam
adc
roll
mov
mov
scas
mov
sarb
push
rol
xchg
dec
divl
ds
sub
les
inc
repz
cmpl
dec
out
aam
mov
add
inc
xchg
pop
dec
imul
sub
push
movsl
mov
mov
je
or
or
push
das
push
fucomip
out
cmp
lock
inc
adc
lret
cmp
sub
lahf
ss
lret
cwtl
ficompl
mov
fldenv
xchg
mov
aaa
fisttpll
fisubrl
arpl
in
fstps
adc
lock
outsl
cmp
xchg
add
sahf
mul
scas
jg
jno
es
sub
inc
cmpsl
jns
arpl
out
scas
fdiv
repnz
mov
inc
add
not
popa
inc
negl
xor
scas
iret
das
arpl
mov
push
jcxz
frstor
sub
pop
inc
adc
xor
add
dec
sub
or
js
loop
ja
pop
fcmovnu
push
dec
cmp
or
sub
test
adc
movsl
mov
jecxz
or
jecxz
cli
lea
je
mov
xor
arpl
nop
insb
add
shlb
data16
fdivrs
scas
ljmp
hlt
outsl
addr16
jmp
int3
xchg
rclb
aad
in
test
inc
push
enter
mov
mov
adc
lret
cmpsb
sbb
out
mov
pop
sub
ret
and
adc
add
push
jp
push
jns
cmpsl
cmpsb
lock
and
mov
cmpsl
scas
xor
and
mov
je
pop
inc
mov
pop
in
push
out
sahf
or
addl
cs
xchg
loopne
mov
mov
shr
mov
jge
adc
mov
dec
cmpsl
insb
mov
xor
pop
push
xchg
cltd
jae
fcoml
sbb
jno
insl
mov
sbb
xor
jg
jns
sub
sbb
dec
testb
mov
push
sbb
shll
cmc
repnz
dec
stos
push
xchg
mov
pop
fisubrs
int3
cmc
xor
push
and
inc
push
xchg
cmc
sub
mov
test
adc
jmp
out
pop
imul
je
lock
shrl
dec
xchg
mov
mov
inc
rcrb
adc
pop
xchg
mov
lret
push
jbe
lds
xchg
jnp
popa
xchg
cmp
repz
xor
sub
negb
jb
loop
push
mov
mov
fs
out
jp
push
sti
cld
fs
jns
jp
mov
ja
mov
mov
adc
scas
shll
popf
hlt
add
stos
shrl
mov
add
xchg
daa
jbe
push
xor
cmpsl
dec
and
repz
jp
mov
out
push
add
or
cmp
xor
arpl
sti
shrl
push
mov
vmovntps
ljmp
cmc
or
sbb
rorl
cmp
and
xor
lret
int
gs
add
jmp
pop
jp
pop
int
dec
sarl
sub
adc
mov
scas
xchg
push
cmpl
orb
imul
jge
js
aas
xchg
xchg
nop
pop
fcmovnbe
popf
aas
push
xlat
imul
shl
sti
jle
jp
lea
push
xor
mov
sub
push
cmp
xor
dec
inc
arpl
rorl
push
add
mov
stos
cwtl
outsb
ljmp
call
xor
sbb
out
jp
loope
push
adc
and
adc
mov
in
fstps
cltd
test
xchg
aas
fildl
call
imul
and
mov
pop
adc
dec
add
out
or
ret
jge
push
mov
repnz
jno
lea
ret
pushf
add
adc
ja
sahf
add
ljmp
xor
add
out
dec
jne
mov
mov
jmp
lea
xchg
addr16
sbb
push
icebp
xchg
ljmp
decl
xor
lods
mov
or
repnz
stos
je
ja
sub
enter
sbb
mov
jge
sbb
ret
je
ljmp
in
or
mov
ljmp
fs
cmp
sub
xor
orl
push
int3
cld
push
lahf
dec
ss
xlat
shll
jne
test
icebp
sub
add
sub
add
jmp
aas
xorl
loope
adc
add
dec
sbb
mov
sub
fxch
dec
testl
xlat
push
jne
mov
outsl
adc
xlat
insl
sub
add
cmp
sub
xchg
adc
dec
push
loop
add
mov
pop
push
xor
ret
add
test
loope
addb
pop
push
add
cmp
and
jge
lods
out
mov
mov
xor
inc
ror
scas
inc
xor
loope
rol
xchg
or
push
loope
out
clc
inc
ds
dec
mov
je
loop
stos
pop
sbb
jecxz
pop
jmp
cmc
orl
pop
imull
jle
jle
pop
test
mov
repz
mov
aad
cmp
dec
imul
fisttpll
cmp
xor
cmp
adcb
sub
lret
pop
cmpsb
push
int3
imul
clc
insl
inc
cltd
icebp
ljmp
mov
jnp
pop
lock
sarl
jmp
ret
lods
dec
ja
add
cmpl
xchg
jae
cmc
dec
fisubrs
mov
lods
or
xchg
push
mov
xor
mov
lret
lock
xor
js
mov
jg
mov
inc
cmp
or
xor
bound
popf
xor
fidivrl
sub
mov
pop
repz
and
mov
adc
sub
add
xchg
aam
pop
into
aas
scas
and
pop
and
push
add
mov
sbb
mov
enter
add
pop
and
scas
xlat
lods
lock
stos
inc
aad
inc
cli
and
lret
jecxz
call
dec
imul
xchg
cmp
aas
and
sti
dec
loopne
mov
fdivrp
data16
sub
stc
mov
popf
cmpsb
shrl
and
or
adc
sbb
push
add
adc
pop
sti
addl
into
jle
dec
cli
cmp
scas
add
arpl
lods
test
push
ljmp
mov
pusha
xor
or
jns
cmp
pop
mov
or
xor
push
mov
movsb
dec
fcomp
call
popa
sbb
xchg
fistps
xchg
xorb
or
aas
push
repz
bound
ja
mov
mov
inc
sbb
jecxz
cmp
mov
pushf
sbb
adc
dec
add
xlat
adc
mov
mov
leave
test
xchg
sub
mov
mov
pusha
mov
and
cld
inc
in
and
jne
sub
jb
pop
xor
es
inc
in
mov
pop
ja
mov
pop
and
mov
adc
pop
jle
std
dec
les
les
inc
call
shlb
ss
push
jp
jmp
icebp
stc
sbb
and
adc
mov
pop
jne
popa
sbb
lret
imul
iret
sbb
mov
fcoml
ja
add
lods
idivb
rcll
xor
mov
lods
push
jo
mov
subl
xor
adc
push
out
fimuls
cmp
imul
movsl
jl
xor
ss
pop
in
out
push
rorl
jge
inc
daa
shrb
mov
inc
push
aas
pop
dec
xor
mov
lea
dec
data16
out
out
mov
mov
mov
in
or
data16
lods
fs
jmp
push
in
fidivrl
and
inc
hlt
addb
mov
xchg
mov
clc
jae
scas
jle
pop
pop
sahf
jp
aad
imul
lock
bnd
and
push
xchg
add
xor
push
inc
jecxz
mov
pop
std
call
movd
push
outsl
mov
push
adc
cwtl
push
mov
mov
jecxz
mov
or
sub
adc
and
bound
std
pop
imul
popf
mov
sub
inc
jne
scas
lahf
outsl
dec
mov
fwait
or
sbb
and
and
mov
dec
out
jp
aas
loop
mov
inc
pop
jbe
inc
xlat
test
pusha
mov
and
add
mov
jb
xor
loop
lods
aam
xchg
in
fdivl
daa
rorl
call
jg
movsl
cli
inc
daa
xchg
push
cltd
xchg
push
aad
aam
mov
loope
out
outsl
shll
js
jbe
mov
and
pop
cli
inc
or
mov
or
fdivrp
pop
ja
orl
out
and
push
rcll
push
push
xlat
movsb
rorb
sti
enter
sbb
xchg
sub
dec
scas
test
and
sub
jno
je
in
dec
rorl
push
movsb
in
fisubrl
mov
loop
adc
lahf
mov
aad
fwait
mov
lods
call
aas
cltd
cltd
dec
cmc
shrl
mov
jae
dec
or
loopne
xchg
shlb
or
cltd
in
mov
adc
cmc
pop
pop
and
xor
jo,pt
rcl
rorb
sbb
and
push
mov
popf
test
loopne
mov
or
shll
mov
pop
leave
sbb
jns
jae
xor
mov
mov
sbb
test
int3
add
in
push
sbb
pop
dec
add
cmpsl
jle
adc
jbe
jae
popf
clc
and
add
xor
lret
and
lds
loop
sbb
push
pop
mov
xorb
movsb
xor
sbb
outsb
adc
mov
insl
fs
test
cmpb
popf
jne
pop
arpl
cmpl
fsub
dec
in
in
sbb
jp
mov
push
jbe
les
test
outsb
repnz
int
add
into
les
stos
lods
clc
sbb
fstpl
hlt
in
shll
cmc
mov
sti
sub
or
mov
rclb
and
stc
push
push
loope
cmp
mov
add
xlat
dec
sbb
jl
lahf
scas
xor
lock
mov
xchg
loop
mov
andb
mov
sti
inc
adc
sub
inc
mov
fwait
xchg
cltd
movsl
and
aas
mov
jae
popa
xchg
imul
dec
dec
mov
xor
sub
or
mov
testb
or
push
pop
xchg
and
xor
push
xlat
repnz
flds
cli
mov
pop
fs
shl
ja
jnp
repnz
xchg
mov
scas
out
mov
inc
mov
mov
out
add
push
dec
stc
frstor
fistpll
mov
inc
gs
lea
and
enter
das
push
aad
leave
pop
cltd
mov
jge
test
fstl
and
test
cmpsl
mov
mov
cmp
jns
mov
insl
mov
sbb
jno
enter
mov
push
jns
dec
fnstsw
mov
fldenv
mov
dec
sub
lret
js
gs
mov
jmp
mov
repnz
add
sbb
push
push
jmp
push
push
jge
xor
inc
cwtl
push
cmp
dec
sub
je
mov
push
fnstenv
jg
or
mov
pop
imul
cmp
divb
xchg
test
sub
sub
xor
lock
dec
pop
out
or
jp
pop
push
loope
dec
pop
jmp
mov
cmpsb
stc
mov
mov
mov
dec
or
inc
enter
jecxz
xor
daa
dec
loopne
inc
inc
cltd
jae
add
mov
push
jl
iret
sbb
popf
push
sub
lds
in
into
pop
mov
mov
cmp
jnp
mov
inc
jne
fcoml
push
adc
jecxz
popa
sbb
hlt
jp
sbb
fwait
mov
jns
popa
adc
daa
xor
sbb
jnp
cmp
sbb
jg
cld
xchg
mov
push
sti
std
clts
and
push
ds
add
cmp
mov
pop
int
movsl
or
xor
or
xorl
sti
jle
pextrw
aas
loope
icebp
mov
in
hlt
pop
jns
mov
lods
out
pop
lea
popf
lahf
lahf
lods
mov
jecxz
cmp
arpl
mov
cmp
jmp
sbb
xorl
ror
mov
popf
std
js
jne
rorb
nop
mov
popa
sbb
mov
mov
jne
gs
lcall
test
lahf
std
insb
repz
pop
mov
mov
fiaddl
mov
cmp
mov
and
icebp
fadd
push
cmp
jno
dec
pop
jno
dec
pop
divl
push
test
push
clc
flds
add
cltd
and
ds
leave
mov
data16
sbb
pushf
aaa
pop
xchg
push
pusha
nop
pushf
data16
scas
sbbb
ds
xchg
jp
popf
loope
pusha
sub
jle
inc
adc
sbb
repz
sarl
outsl
mov
inc
sub
push
cld
les
push
inc
or
mov
xchg
test
fildll
in
jle
into
mov
dec
inc
xor
pop
lds
pop
and
pop
sti
shl
test
dec
and
mov
pop
test
fwait
lock
rcll
xchg
lods
aaa
xchg
mov
dec
ds
pop
loope
cmp
sbb
mov
or
repnz
xor
in
jb
call
dec
sbb
mov
or
rorl
cmp
adc
push
push
pop
lds
sub
sarb
fs
push
push
dec
mov
add
fnstsw
lds
inc
xchg
pop
sbb
cwtl
outsl
aad
mov
insb
or
pop
rcll
repz
out
cmp
xchg
in
fisttps
lahf
or
ss
jecxz
lods
pop
imul
test
addr16
mov
push
mov
xor
sbb
jl
push
or
scas
add
outsl
movsb
mov
scas
popf
or
jb
inc
and
mov
jmp
pop
mov
inc
mov
pusha
lea
jg
mov
jg
mov
ljmp
fildl
mov
lea
fisubrl
xor
dec
das
mov
jb
cmp
dec
andl
push
int3
test
push
cwtl
or
insl
notb
adc
pop
repnz
leave
xchg
int
fcoml
mov
xchg
jecxz
sub
fcmovnb
movsb
xchg
inc
stos
cmp
sahf
xchg
sub
repz
cmp
pop
mov
xchg
jecxz
popa
ljmp
movzwl
push
lret
sub
mov
jmp
dec
enter
jnp
arpl
xchg
xor
mov
repnz
jmp
add
in
pop
push
jge
fs
cmpsl
mov
nop
mov
jns
aam
lret
xchg
dec
xor
push
test
mov
ret
adc
push
or
mov
xchg
cwtl
stos
add
push
push
or
xchg
jecxz
or
fistps
outsl
adc
mov
bound
cmp
pop
iret
lds
shll
mov
aad
leave
jecxz
sbb
mov
leave
fsubs
repz
mov
lds
mov
and
shl
imul
adc
dec
faddl
pop
mov
add
std
sub
push
lea
mov
in
mov
pop
xchg
mov
lea
daa
ret
dec
shll
faddl
mov
mov
rcrl
or
jo
out
sbb
leave
mov
in
jecxz
and
lcall
test
dec
lods
imul
arpl
jae
and
enter
jb
gs
scas
insl
loopne
test
setg
outsb
push
xor
pusha
push
and
jle
mov
ds
push
lods
sbb
xchg
and
pop
sbb
mov
out
jbe
lds
sbb
sub
mov
mov
decl
add
negl
leave
pop
jl
in
popf
jno
adc
stc
sub
and
lock
mov
test
ss
or
mov
bound
out
inc
pop
pushf
out
push
sarb
xchg
xor
push
out
int3
xor
push
out
xchg
cmp
fs
xchg
xchg
push
lret
inc
push
stos
xor
jg
sbb
adc
imul
outsl
or
ds
into
dec
cs
mov
out
jno
shlb
xchg
lret
rcll
in
dec
cltd
lret
aam
dec
cwtl
or
xchg
jmp
rcr
pop
adc
cmpsl
testb
stc
lret
repz
lret
sub
dec
cmp
cmc
mov
stos
mov
mov
popa
movsl
lcall
mov
vmread
mov
mov
fldcw
jo
pop
lahf
inc
cmp
jmp
sbb
adc
mov
icebp
add
enter
push
cli
sub
in
mov
jg
xor
cmp
aad
sahf
mov
mov
jle
inc
dec
dec
dec
jl
pop
es
mov
sbb
loop
into
in
jns
and
adc
icebp
ss
rcl
adc
hlt
cli
lods
test
das
mov
rcll
fistl
lcall
nop
insl
movl
fldl
xcrypt-cbc
pop
jae
and
push
sbb
fisubrl
ss
add
sbbb
pop
xor
push
adc
das
inc
jae
inc
std
lds
mov
sub
in
jmp
push
xor
lds
inc
xor
loopne
sub
xchg
ss
out
outsb
add
inc
test
les
fcomps
cli
les
cltd
adc
bound
adc
mov
clc
lcall
jecxz
push
mov
leave
cmp
dec
dec
sub
xchg
leave
inc
xor
jmp
shrl
cwtl
cmp
cmp
inc
and
daa
pop
icebp
dec
pop
les
mov
rorb
cmp
lret
movb
cmp
aam
pop
push
fstl
mov
mov
daa
sti
les
push
add
and
xchg
sub
ss
aaa
xlat
leave
cmpsl
xor
add
hlt
mov
mov
pop
lds
and
les
and
sub
jmp
jmp
sub
lock
outsl
lock
sub
pop
xlat
adc
repz
ja
jae
call
dec
callw
mov
push
and
jo
loope
cmp
mov
stos
daa
pop
stos
movsl
pop
aad
in
dec
pusha
sub
jecxz
push
mov
inc
sub
in
adc
in
mov
ss
test
sbb
enter
inc
jp
push
lahf
jne
jbe
cmp
add
add
or
lock
xor
inc
fisttpl
ja
pop
cmpl
sub
aam
shll
sbb
add
pusha
sbb
dec
movsb
ret
mov
mov
lods
push
std
je
adc
cmpsb
mov
call
jecxz
inc
push
dec
push
or
adc
aaa
dec
outsb
js
and
and
adc
mov
test
mov
mov
dec
rorl
loop
xchg
adc
inc
insl
add
popl
inc
push
lret
sarb
add
mov
cmovns
call
dec
lods
test
rcll
ret
aas
jns
xchg
inc
mov
cltd
test
adc
test
fisttps
mov
sub
mov
addl
pusha
add
hlt
mov
in
loop
shlb
lahf
sub
mov
mov
and
call
arpl
stos
mov
sub
mov
addr16
mov
jge
xchg
mov
inc
or
or
lea
call
das
inc
xor
fcoms
lea
mov
jmp
out
rol
cmpsb
jnp
jge
dec
push
dec
xchg
ss
push
mov
loopne
jp
lret
bound
mov
imul
divl
xchg
jg
leave
fsub
in
cld
jg
jg,pt
jbe
adc
insl
push
mov
cmp
int
int
xchg
sbbl
scas
push
or
ds
out
sbb
sub
lds
insb
inc
lret
imul
mov
std
dec
mov
daa
push
nop
loope
xchg
repnz
stc
iret
enter
stos
orb
cmp
stos
stos
pop
aad
gs
and
je
sbb
test
ficomps
lret
fimuls
aaa
jge
dec
xor
mov
es
xor
mov
aaa
mov
mov
push
fxtract
pop
fdivrl
sbbb
push
mov
push
sub
inc
in
cmpl
add
lea
sti
xchg
adc
and
movsb
jo
out
cmp
jb
daa
inc
mov
add
pop
push
mov
dec
clc
loope
mov
imul
sub
testb
aaa
cmpsl
lea
xchg
arpl
mov
gs
lcall
mov
mov
and
adc
mov
stc
add
mov
sahf
cmpsl
fcompl
pusha
xchg
out
mov
scas
insw
cwtl
scas
jns
popa
stos
xor
sbb
jp
popa
addl
push
in
fcmovnu
rcl
dec
and
movsl
mov
mov
aad
jmp
int3
loope
cwtl
inc
pushf
dec
movsl
jbe
and
out
sub
pop
call
insb
xchg
les
cli
or
daa
in
jle
sbb
pop
sbb
inc
ss
sahf
pusha
imul
mov
pop
lea
in
inc
fdivp
test
out
xor
dec
in
je
clc
add
mov
sub
xchg
mov
cmc
imul
std
test
jge
jne
inc
iret
cmpsl
inc
mov
int
sahf
outsl
push
pop
xchg
out
adc
clc
loope
mov
adc
xchg
iret
inc
std
push
push
and
ja
rorl
xchg
or
loopne
sti
xchg
imul
lea
out
enter
and
in
movsl
xchg
rclb
xchg
test
mov
fmul
int3
fimull
mov
cmc
outsb
sub
jbe
push
jne
movzbl
adc
sbb
add
xchg
vcvtdq2ps
test
dec
insb
add
imul
push
cmp
sbb
leave
stos
sub
sub
dec
sbb
addl
jp
nop
xor
les
cld
or
popa
loop
mov
inc
fldcw
push
insl
mov
mov
mov
and
in
outsb
loop
rorl
mov
imul
adc
sbb
stc
lret
cwtl
cwtl
xchg
and
ljmp
clc
ficomps
outsl
mov
jnp
sbb
inc
mov
addr16
in
pop
jb
jmp
int3
jb
mov
jb
dec
lea
mov
fldt
or
xlat
ss
push
fwait
std
movsb
inc
daa
jmp
fs
insb
bswap
mov
lock
lret
fstl
and
int
leave
cmp
iret
push
mov
mov
imul
addb
push
push
dec
mov
leave
je
subb
int3
mov
and
xchg
mov
xchg
mov
popa
xor
mov
sti
or
lahf
push
xor
inc
mov
test
adc
sbb
pop
sub
sub
push
xlat
mov
or
push
dec
lea
movl
fcomps
push
mov
adc
add
or
mov
pushf
scas
mov
inc
adc
ret
add
fldt
xchg
or
icebp
int3
xchg
push
sub
xchg
mov
pusha
inc
fcoms
mov
lods
outsb
rclb
int3
aam
sub
mov
adc
jns
fsts
inc
mov
or
jmp
cmp
imul
xor
mov
rcrb
lea
fnstenv
andl
lcall
xchg
shlb
dec
mov
dec
mov
sbb
mov
xor
lea
jge
stc
sbb
xchg
mov
cmp
outsb
ret
idivl
fsubr
int
cmpsl
orb
loope
rcrl
les
push
movl
fldt
or
arpl
xor
sbb
push
call
mov
repz
mov
add
sbb
mov
lea
out
push
fldt
sub
int3
dec
aaa
imul
dec
push
sub
daa
xchg
mov
or
push
mov
rcrb
fistpl
arpl
mov
loope
pop
mov
adc
fwait
movsb
and
xor
jbe
fs
inc
adc
fbstp
lods
shl
inc
sbb
in
add
leave
push
fadd
out
notl
jns
xchg
sub
xor
and
movsb
push
add
pusha
jne
pop
orl
mov
dec
lret
aas
mov
mov
loop
ja
pop
and
or
cmp
std
pop
sub
xlat
push
icebp
outsl
and
pop
cmp
mov
aad
mov
mov
jmp
outsb
enter
mov
int3
aad
xchg
cld
push
sbb
xchg
pop
fcmove
jb
pushf
lds
mov
jae
imull
loopne
ret
aad
inc
out
adc
insl
call
cmp
mov
pop
hlt
vmovntdq
pop
fstps
addr16
mov
test
push
popf
xor
push
adc
cwtl
or
xor
sbb
mov
negl
cld
in
jmp
dec
cmpsb
jmp
jne
jecxz
movb
or
mov
repz
fsubrl
fbld
cmp
sahf
arpl
or
pop
addr16
ss
push
mov
push
aas
push
int
shrb
push
inc
dec
mov
adc
test
sahf
test
popa
add
mov
in
test
scas
out
test
imul
mov
pop
das
stos
dec
repnz
subb
pop
icebp
xchg
aam
fisttpl
push
mov
ds
mov
pop
add
sarb
push
or
sub
and
mov
imul
fistl
popa
adc
cmp
sbb
shll
jle
jp
pusha
cld
xchg
mov
add
push
mov
mov
insb
xlat
fwait
adcl
push
test
mov
pusha
lea
out
ds
cmpl
sahf
adc
cmc
dec
cmpsb
fldenv
ret
into
loop
push
push
pop
and
lods
or
push
add
pop
mov
fs
mov
rorb
lahf
fadds
dec
js
cmp
xchg
insb
pop
adc
lods
addr16
jmp
movsb
and
or
mov
lods
push
add
je
dec
push
mov
inc
test
out
and
fmull
adc
jmp
stos
leave
push
mov
mov
andb
repz
clc
cmp
mov
mov
lahf
iret
inc
fsubs
popa
cwtl
inc
sub
fisubs
jo
pop
cmp
test
call
mov
add
sbb
push
jle
out
lcall
mov
mov
jp
pop
clc
jns
jle
nop
mov
cwtl
movsl
jo
fwait
cwtl
fs
dec
pusha
fisttps
cmp
inc
and
add
js
pop
xchg
xchg
cmp
mov
outsl
loopne
hlt
ret
or
fs
sbb
out
cltd
xor
xchg
push
test
lret
leave
cmp
add
add
mov
or
push
fdivrp
mov
mov
jne
neg
ds
xlat
loope
inc
mov
pop
les
sbb
out
adc
push
push
cmc
adc
sub
mov
inc
xor
add
or
dec
loopne
in
ljmp
pushf
push
out
mov
notl
xchg
aam
push
or
ret
or
and
daa
mov
xor
int
aad
jmp
rcrl
int
pusha
repz
xor
test
test
ljmp
mov
jne
popa
es
addl
adc
xchg
ja
test
sarl
push
sub
push
lahf
scas
fmull
jl
inc
or
adc
sbb
pop
jnp
jl
add
sbb
pop
xchg
bound
xchg
xchg
mov
cmp
cwtl
movsl
push
pop
jmp
leave
xchg
mov
inc
hlt
sub
outsl
imul
js
pop
pop
pop
jl
bound
adc
and
add
adc
lds
adc
jg
xor
push
int3
arpl
mov
add
xor
shlb
or
push
push
mov
cmpsl
jno
test
jle
jb
test
add
les
flds
and
add
inc
push
les
leave
inc
mov
push
shlb
leave
fistpll
popf
mov
mov
add
inc
jnp
ret
sbb
inc
xor
imul
push
sbb
or
repz
xchg
xlat
mov
sub
dec
or
dec
pop
hlt
cmp
fidivs
sbb
imul
cltd
test
or
fadds
mov
or
in
cs
arpl
jmp
lret
inc
outsb
jl
dec
int
mov
leave
std
push
mov
movl
out
aad
fdivrs
stos
pushl
mov
lcall
repnz
push
sti
sub
les
push
xor
roll
addb
adc
sub
flds
add
add
cmp
add
xor
pop
mov
or
test
push
mov
clc
js,pn
push
jl
loope
out
gs
pushf
inc
aad
in
xchg
fidivrl
dec
pop
adc
shlb
js
ljmp
out
jmp
bound
stc
into
sub
dec
fstp
mov
gs
and
mov
bound
adc
fdivrl
subb
aas
xor
mov
cmp
out
inc
rolb
jns
push
add
push
outsb
aas
lea
scas
lods
int
mov
dec
mov
fbld
or
xorl
fs
cmp
or
stos
fwait
mov
dec
push
movsb
subl
xlat
js
addr16
or
dec
or
scas
cld
data16
pushf
cmp
inc
adc
mov
andps
in
jp
ja
inc
sbb
sbb
mov
add
or
mov
out
push
sbb
orb
and
shll
xchg
fucomi
pusha
mov
enter
negb
fwait
mov
stc
mov
hlt
pop
pop
adc
shll
sub
inc
sbb
xor
sbb
loop
xchg
adc
xor
mov
sti
jecxz
lahf
cltd
test
out
sbb
cmp
mov
pop
sub
jo
dec
ror
jns
pandn
outsl
shrb
inc
jne
push
in
nop
xor
dec
cmp
cs
xchg
insb
dec
mov
mov
mov
push
xchg
dec
push
push
mov
mov
pop
loope
insb
fs
ret
cmp
call
cmpsb
lahf
inc
inc
and
divl
ret
iret
sub
outsl
fdivl
rorl
and
mov
dec
iret
push
cmp
push
xor
lock
fcoms
icebp
cld
fisttpl
je
xor
jge
movsb
mov
mov
jo
mov
inc
cmp
sub
push
aaa
out
lods
arpl
jmp
jo
fs
dec
mov
inc
cmp
adc
mov
adc
sbb
adc
xchg
pop
inc
sub
xor
scas
cmc
sbb
cwtl
cmpsl
sbb
cmp
pop
xor
fbld
or
out
mov
push
sub
jb
lea
push
stos
incb
data16
mov
push
in
pop
mov
mov
xchg
xchg
cltd
dec
jbe
sbb
shlb
adcl
insl
xchg
add
xor
andl
sub
in
outsl
mov
sub
out
lsl
stos
pop
push
outsb
cmp
mov
mov
sti
push
pop
in
es
sbb
shlb
fnstcw
jns
sbb
add
stos
mov
loope
pop
dec
push
and
fldt
add
mov
mov
ret
lods
cmpsb
pushf
clc
pusha
aam
or
dec
nop
aaa
fld
shl
xlat
test
es
mov
xor
pusha
mov
jne
pop
pop
jmp
jnp
notb
adc
movsl
int3
push
dec
xlat
jno
leave
movsbl
pop
popf
and
rcl
sub
or
ror
jle
es
lret
iret
adc
xor
pushf
mov
jmp
lods
cmpb
mov
mov
mov
mov
fsubl
aam
rcl
arpl
adc
sub
add
ss
sub
in
out
ret
mov
jmp
push
into
dec
push
add
dec
xchg
nop
cmp
jecxz
filds
bound
or
inc
cwtl
inc
rorb
jno
mov
jmp
mov
ss
pop
jecxz
and
aas
inc
in
sahf
cmp
cmp
fdivrl
pop
add
scas
aaa
lods
xchg
mov
mov
sub
dec
mov
dec
fldcw
or
adc
mov
xchg
adc
test
outsl
and
jb
lcall
inc
rorl
std
mov
push
xor
mov
sub
jl
mov
xchg
fiadds
in
xor
rorl
hlt
cmp
sarl
add
stc
xchg
data16
leave
bound
jnp
repnz
rolb
outsl
add
push
lods
sub
pop
loope
es
inc
push
test
test
inc
mov
cmp
dec
pop
fildll
das
call
lea
lahf
mov
shl
mov
incb
out
mov
xchg
test
sbb
push
in
aad
cli
ret
dec
dec
decb
les
and
add
cmc
mov
mov
pop
call
fists
mov
push
sti
cmpsb
and
int3
clc
and
mov
push
mov
adc
inc
push
fdivs
mov
push
and
and
lds
rolb
inc
push
cmp
mov
xchg
into
stc
js
call
fsubrs
jp
adc
adc
int3
or
cmp
and
dec
sub
shlb
adc
fsubrl
mov
push
cld
jo
lret
loope
sahf
dec
test
in
xor
mov
add
sub
cli
adc
xor
sahf
mov
imul
xchg
jp
xor
inc
ret
loopne
xorb
adcl
je
jnp
add
sbb
sub
pop
add
jmp
outsb
into
test
cmp
mov
sbb
mov
call
xchg
jl
outsb
mov
pop
xchg
leave
jo
and
inc
out
sbb
cmpsl
lret
fidivl
xchg
xor
fsubs
imul
jle
cmpsb
mov
cmpsb
mov
aas
sarb
clc
decl
jbe
pushf
dec
test
adc
mov
lds
stos
jg
dec
adc
and
xadd
cmp
push
mov
dec
int
insl
sub
sub
push
fcmovnu
cmc
dec
push
fidivs
loope
clc
dec
imul
cmp
inc
cmp
popl
imul
mov
pop
sub
xchg
sbb
daa
add
hlt
js
adc
scas
test
aaa
std
add
outsb
lret
mov
cs
inc
out
fs
cmp
lds
lret
mov
iret
lods
iret
data16
adcl
mov
mov
xor
lock
jmp
or
push
daa
sbb
jbe
xchg
scas
adc
int3
mov
rcrl
mov
mov
lcall
add
cmp
and
daa
jecxz
out
add
nop
stos
inc
pop
andl
or
ljmp
jbe
push
and
add
inc
sbb
jno
inc
test
add
cld
xchg
fisubl
call
jp
fbstp
stc
xchg
ret
push
jae
es
cmp
loop
in
movsl
mov
push
mov
jb
mov
std
jne
and
das
pop
out
fwait
xchg
fildl
or
mov
mov
dec
lods
push
or
cld
sbb
insl
js
or
enter
jle
xor
insb
jecxz
add
fistpll
xlat
addr16
jae
mov
pushf
fsub
adc
jmp
std
sbb
mov
in
es
ss
xor
subb
or
dec
add
ljmp
cmp
dec
call
stc
and
jle
pop
ds
push
movsb
cmp
inc
movsl
or
cmp
leave
and
adc
and
cwtl
mov
add
outsb
cmpsb
js
repz
imulb
sub
dec
sub
je
mov
pop
jge
mov
add
mov
cs
cmc
hlt
and
test
ja
icebp
push
mov
xchg
aad
pop
and
lds
ret
push
pop
sub
sarb
shrb
shr
jno
sub
jnp
gs
or
sub
aaa
add
or
pop
loope
jo
mov
hlt
in
xchg
or
mov
hlt
mov
sti
frstor
inc
jecxz
clc
fdivl
mov
mov
test
xlat
mov
jae
cmp
jnp
pop
jno
int3
jle
push
push
enter
sub
mov
push
mov
pop
sbb
mov
pop
xchg
iret
adc
mov
mov
jmp
sub
or
pop
clc
pushf
xor
roll
in
dec
sub
push
push
ret
mov
mov
and
xchg
xlat
push
das
push
shll
int
dec
negl
push
inc
cmp
jg
lea
adc
repnz
scas
pop
cltd
mov
inc
xlat
inc
sahf
shlb
test
inc
push
arpl
mov
out
les
inc
mov
ljmp
scas
mov
or
sub
pop
test
adc
pop
jl
mov
lahf
cmp
cld
pop
xchg
push
mov
jmp
mov
mov
xchg
outsb
pushf
mov
inc
push
or
out
add
jb
sahf
and
push
arpl
push
unpckhps
lock
or
les
jb,pt
jo
mov
xor
rcll
clc
xor
mov
sub
addb
leave
mov
fists
fmuls
xchg
icebp
fimuls
adc
or
xchg
pop
inc
cmp
jg
movsb
hlt
sahf
cmpsb
insb
xchg
add
mov
fistl
shlb
ja
mov
xchg
loope
add
fwait
adc
dec
inc
sub
in
and
xchg
rcr
in
dec
push
push
inc
xor
fists
shlb
in
in
imul
fidivl
clc
int
or
or
mov
stc
dec
pop
mov
outsb
jecxz
pop
and
pop
sarl
insl
xor
mov
dec
and
repnz
sub
shl
xchg
add
test
pop
int3
lret
dec
and
fdiv
insb
pop
jb
jne
mov
xchg
out
sti
pushf
sbb
jns
sbb
mov
mov
push
mov
xchg
inc
imul
push
dec
dec
dec
pop
sub
mov
jns
mov
pop
dec
add
popf
jecxz
mov
sub
fstpl
mov
cmpsb
leave
les
sub
push
mov
inc
xor
adc
cmp
and
pop
insb
push
je
cmp
cmpsl
mov
lds
mov
adc
out
stc
pop
add
scas
out
inc
jmp
stc
sbb
pushf
test
stos
jb
adc
fildll
xchg
lock
cwtl
out
mov
and
jns
xchg
and
std
shlb
ficoms
pushf
mov
leave
mov
es
cmc
push
ror
sbb
sahf
mov
mov
mov
stos
cld
call
aad
inc
pop
inc
adc
jge
mov
mov
icebp
pop
jns
pop
sbb
fistpll
insb
cmpsb
push
cmp
pop
dec
popw
xor
inc
pop
scas
adc
gs
fwait
xor
stos
mov
mov
sbb
pop
loopne
repz
je
scas
sbb
xor
mov
cmc
inc
jmp
mov
mov
mov
sbb
jmp
cmp
call
rorl
mov
push
jecxz
mov
mov
dec
jp
shrb
cmpsl
dec
and
dec
fstpl
fisubl
pop
push
clc
lock
in
inc
pop
ljmp
sbb
mov
scas
mov
jo
frstor
pop
scas
and
in
jl
call
cmpsl
lret
mul
mulb
push
ljmp
jecxz
dec
scas
xchg
enter
inc
repz
out
andl
and
movsb
mov
add
adc
push
enter
mov
sub
addl
cltd
sub
jle
sub
xor
xchg
stc
jmp
xor
pusha
lret
mov
and
dec
lcall
lock
in
pop
pop
cmp
jl
pop
shrb
andl
and
xor
rcr
jle
leave
pop
jl
jecxz
mov
popf
sbb
mov
mov
dec
daa
outsb
jns
xor
arpl
mov
or
addr16
movsl
aad
jns
jns
push
fistpl
cmp
lret
and
mov
jg
inc
jne
fstl
outsl
jns
adc
ljmp
repnz
ljmp
sbb
loopne
test
stos
dec
mov
pushf
fdivrl
fwait
sbb
adcl
inc
mov
clc
sub
or
push
loopne
in
hlt
inc
aad
cmpsb
out
mov
das
mov
scas
inc
pop
and
push
add
push
or
mov
sub
or
addr16
popf
ja
xchg
mov
dec
in
in
stos
and
mov
jns
imul
addr16
movb
xchg
cmpsb
fcmovnu
addb
xor
aaa
push
xor
dec
mov
jg
iret
sbb
lods
sti
and
mov
mov
pop
jo
sub
mov
sub
mov
sbb
mov
das
test
in
aaa
pop
xchg
cmc
pop
push
rolb
push
mov
mov
nop
lock
mov
or
mov
jno
mov
loop
add
les
push
push
adc
repz
adc
add
push
adcb
inc
aad
dec
insl
out
movzbl
push
ret
imul
pop
in
cltd
mov
cld
add
mov
dec
mov
mov
test
jae
data16
hlt
cmc
lcall
pop
pop
jecxz
or
mov
inc
int3
jnp
push
les
dec
and
in
ss
cmp
lock
js
sub
push
insb
das
gs
dec
push
adc
mov
lea
push
lock
ljmp
pop
iret
bound
sbb
mov
pop
sub
loope
cmp
xchg
loope
xor
aad
push
shlb
xor
mov
adcb
repnz
outsl
jae
pusha
roll
jl
loope
movsl
gs
push
xor
clc
stos
mov
jecxz
mov
gs
and
aas
lods
pop
jmp
fucomp
int3
add
pushl
jge
insl
dec
das
lea
jge
scas
and
push
dec
cld
mov
mov
scas
jge
dec
inc
cmpb
mov
adc
jbe
enter
sub
stos
cmpb
and
std
mov
test
mov
sub
f2xm1
cmp
cmp
inc
inc
and
and
mov
inc
push
aas
test
sub
nop
jg
pusha
or
lock
mov
inc
cmp
mov
sub
mov
inc
adc
jns
pop
xchg
daa
daa
stos
mov
jae
inc
push
mov
adc
inc
fwait
mov
xchg
sbb
lock
lock
lods
pop
and
ret
lds
pop
push
mov
inc
mov
gs
adc
ret
xchg
cmc
test
fcmove
push
mov
imul
dec
data16
sbb
xor
into
dec
sbbl
loopne
xchg
cmc
mov
lea
in
cltd
pop
ss
mov
push
dec
xchg
jecxz
mov
loope
inc
and
push
lods
popa
enter
ret
lea
fucomi
jbe
inc
les
sub
xchg
jae
adcl
mov
adc
fnstcw
fsincos
fsub
cltd
sub
enter
ret
mov
loopne
mov
and
stos
cwtl
jp
and
cli
mov
inc
pop
adc
pushf
push
or
imul
cli
mov
dec
inc
in
mov
sarb
je
jno
aaa
or
mov
push
repz
mov
shlb
popa
clc
or
mov
mov
add
int3
push
sbbb
insl
pop
ljmp
rorb
rcrb
jg
rcrb
roll
fisubrl
sub
sbb
sti
cmp
jae
lret
or
xor
adc
adc
xchg
xchg
inc
xchg
cld
mov
bound
dec
push
es
mov
jp
jp
repnz
or
popa
inc
leave
in
pop
movsb
adc
dec
mov
das
fdiv
std
out
setge
mov
lret
leave
test
fstpl
sub
cld
add
push
aas
sahf
fldt
mov
inc
dec
mov
mov
sub
dec
scas
dec
add
call
cmp
loopne
lock
enter
repz
push
mov
jmp
stos
inc
imul
fistps
mov
jle
push
cmpsb
les
mov
xchg
sbb
gs
imul
sub
mov
sbb
fs
shl
and
dec
data16
push
lret
repnz
adc
cmp
adc
shl
test
jmp
sbb
stc
sub
call
mov
ljmp
add
pop
inc
inc
inc
dec
xor
lcall
adc
jbe
or
xchg
es
cmp
push
mov
or
cmp
shr
decl
gs
cmp
lock
test
loope
fmull
mov
roll
jns
in
sub
leave
imul
sbb
dec
dec
shlb
xor
movl
call
pop
fcmovne
in
sbbl
icebp
mov
pop
out
dec
inc
cmp
cmp
ss
adc
mov
push
jl
jae
sbb
das
gs
lds
adc
mov
scas
push
push
mov
cltd
je
pop
sbb
pusha
ret
mov
xor
adc
xchg
xlat
fstpl
jle
sub
or
adc
fistpl
push
adc
mov
les
imul
test
shll
adc
into
push
insl
dec
mov
loop
push
sbb
repz
mov
jl
xchg
adc
xor
dec
pop
xchg
popl
jecxz
sub
lods
test
movsb
ljmp
jbe
mov
ror
push
aad
sub
outsb
mov
insb
sub
cmp
xchg
scas
data16
push
sahf
push
decb
jns
shrb
stos
mov
sub
cmp
out
mov
pop
add
in
iret
sub
ret
mov
int3
adc
mov
sub
insl
cmp
mov
mov
mov
mov
sbb
push
xchg
add
xchg
xor
add
loopne
mov
call
rcrb
cmp
outsl
cmpsl
pop
mov
mov
xor
sti
jmp
cwtl
push
lds
sub
sub
dec
inc
inc
cmp
js
jg
pusha
jae
cmp
jle
and
sub
push
and
mov
bound
sbb
push
sahf
push
cmp
sbb
add
pop
outsb
rcr
pop
test
movsb
inc
mov
push
nopl
lods
imul
in
mov
cmpsl
pop
add
push
test
arpl
sbb
mov
push
movups
arpl
push
aas
add
lods
dec
lock
mov
sub
sbb
sti
js
std
call
out
pop
cs
mov
das
push
fildll
adc
in
lahf
inc
das
xchg
sahf
pop
subb
in
cld
test
js
das
or
aaa
or
xor
sub
mov
bnd
bound
rcrl
mov
adc
mov
jb
data16
lcall
sub
or
jbe
mov
shll
jae
jge
inc
jbe
fldcw
xchg
into
lret
push
mov
pushf
cmpsb
mov
dec
aas
mov
or
mov
xor
iret
pop
test
xor
add
ljmp
fwait
pop
adcb
std
test
leave
testb
jg
ds
push
rorb
or
jo
imul
cmp
add
dec
xor
lods
cmp
test
mov
sbb
push
lcall
inc
xor
sbb
daa
lock
testl
pusha
outsl
cmp
test
mov
addb
xor
and
cmp
lret
add
fcomip
xor
test
popa
lods
pop
loope
lret
dec
mov
mov
testl
inc
push
lods
mov
cld
bound
push
cs
repnz
push
adc
pop
xchg
std
decl
pop
pushl
iret
dec
pushf
dec
inc
cld
add
mov
decb
enter
and
popa
jne
jb
mov
inc
in
outsl
test
add
popa
push
into
adc
mov
mov
jbe
imul
pop
dec
test
adc
and
pop
and
and
pop
loope
inc
dec
xchg
fdivr
cld
or
cmp
mov
xchg
dec
xor
fistl
inc
and
inc
sbb
xchg
loope
jg
pop
xchg
outsl
mov
mov
mov
jnp
js
xchg
mov
and
push
mov
sbb
mov
lahf
sub
mov
mov
mov
adc
mov
xchg
pop
sahf
inc
pop
cmp
cli
mov
fnstcw
jne
adc
xor
movsb
xchg
sarb
sbb
sub
popa
pop
mov
dec
add
pushf
mov
fs
bnd
cmp
jne
cmc
mov
xchg
rcll
cld
push
mov
cmp
fxch
rcr
lcall
mov
hlt
dec
add
ss
fldt
mov
jmp
or
pop
ljmp
xchg
inc
fistpll
pop
pop
adc
iret
bound
dec
lods
xchg
adc
xchg
mov
aam
or
jmp
and
push
dec
inc
pop
stos
insl
lret
sub
insb
mov
adc
test
mov
mov
cld
xchg
add
test
arpl
test
in
out
lods
sbb
ss
cltd
loopne
loope
jo
insb
cmp
ss
rcl
lods
mov
pop
pop
mov
push
std
inc
sub
xor
bound
fisttps
fwait
pop
mov
iret
mov
sbb
cld
adc
sub
iret
movsl
sbb
push
pop
pop
arpl
fwait
mov
movsl
and
js
sub
ret
pop
int3
cmp
ja
jb
std
lret
xor
cld
sbb
scas
loope
mov
lret
push
mov
ja
jmp
sti
and
out
and
pop
xchg
push
mov
xor
pop
std
sbb
cltd
cwtl
fildll
fildl
sub
jge
dec
pop
jo
push
cmpsl
push
shr
cmp
dec
jb
dec
int3
sbb
cmp
imul
in
inc
fstps
adc
enter
xor
sub
xchg
push
or
fdivp
int
negl
xchg
repz
xor
dec
mov
outsb
les
test
arpl
add
add
lret
cmp
adc
scas
mov
test
lcall
decl
xchg
sahf
adc
sub
test
movl
mov
jle
jbe
inc
or
int3
xchg
es
jmp
and
imul
es
loop,pn
add
decl
shl
fsubl
jo
mov
mul
popa
cmp
scas
stos
dec
out
andb
or
fbld
jp
mov
adc
bound
sub
rolb
les
icebp
aad
fists
ret
xchg
xchg
mov
shlb
ss
popf
outsl
shll
jmp
icebp
push
hlt
test
nop
and
aas
cmp
mov
movsl
or
push
xorb
jns
mov
fiaddl
xor
cmp
pop
xchg
test
or
ret
lods
cltd
adc
add
sbb
add
mov
sbb
adcb
cmp
mov
cmpb
lea
pushf
rcll
jle
repz
insb
lea
add
cs
or
das
test
fstps
pop
mov
rcr
dec
test
ds
xlat
pop
mov
pushf
xchg
inc
mov
enter
xchg
dec
aad
xchg
mov
sub
pop
xchg
mov
cmp
and
or
stos
mov
sahf
int
jmp
fisttpll
and
add
dec
mov
js
fistpll
inc
inc
jne
xor
aas
stc
inc
or
call
js
in
inc
leave
xor
xchg
test
mov
les
rcr
xchg
cmc
and
push
pop
xor
xor
adc
jb
pop
repz
and
push
sti
fnstcw
xchg
out
gs
push
sub
add
mov
bound
push
pop
xchg
int
nop
inc
push
scas
orl
in
dec
dec
lds
cmp
imul
int3
pop
imul
rcr
mov
mov
pop
push
shrb
imul
mov
sbb
cmp
pop
adc
idivl
dec
sbb
pop
dec
xchg
fdiv
mov
cmp
je
mov
lods
out
mov
mov
mov
mov
shl
sbb
lea
pop
mov
leavew
lcall
mov
int3
daa
jbe
add
sbb
dec
leave
push
sub
sbb
pop
mov
mov
nop
stc
adc
mov
inc
mov
loop
aaa
clc
xchg
jmp
xor
jg
lods
sub
or
and
je
mull
mov
xchg
adc
int3
out
push
pop
push
push
pop
jne
push
jnp
sbb
mov
jns
mov
sbb
and
adcl
icebp
mov
cld
add
repz
cmp
inc
jnp
sub
inc
mov
jae
sbb
mov
and
les
adc
dec
pop
add
fdivrs
clc
pop
orb
jb
adc
jle
mov
push
xor
shufps
and
roll
and
mov
cmp
inc
xchg
testl
iret
mov
xchg
pop
cmp
xchg
dec
lock
stos
pop
addr16
repz
cmp
sub
ret
nop
mov
mov
addl
pop
in
test
ljmp
jns
pop
gs
mov
xchg
ds
sub
and
aaa
or
jnp
xchg
add
xor
fidivrs
ret
xchg
fisubrs
testb
lds
push
cmp
ds
or
jecxz
jo
pusha
xor
xor
es
popa
leave
sbb
lea
les
inc
jle
pop
xchg
xchg
mov
push
test
icebp
loope
mov
adc
loop
into
mov
xchg
ret
push
int3
aam
fsqrt
mov
push
out
frndint
jecxz
and
dec
push
ror
test
fsts
cmpsb
scas
lahf
adc
mov
xorb
mov
lret
mov
mov
sbb
mov
into
rcrb
mov
imul
adcl
jmp
cmpsb
push
repnz
and
test
cmpsl
pop
jmp
push
mov
pop
sub
dec
jnp
mov
imul
negb
fstl
adc
jl
mov
push
in
shr
jns
push
les
ljmp
ret
std
gs
jb
jge
in
scas
popf
jbe
movsb
sbb
movsl
js
inc
shlb
adc
out
sbb
sub
add
bound
pop
inc
and
inc
sarl
push
stos
jno
sti
scas
ret
and
and
mov
das
xchg
cwtl
dec
jecxz
dec
dec
jns
loope
add
nop
pop
insl
repnz
in
sub
addl
outsl
or
jmp
mov
jecxz
scas
call
pop
popf
jg
push
sbbb
hlt
test
mov
in
enter
jp
cli
jbe
shrl
sahf
or
sarb
mov
pop
cmc
sub
ficoml
jecxz
cmc
and
ljmp
xchg
repnz
mov
push
dec
imul
adc
xor
mov
jno
adc
lahf
insl
cmc
dec
movsl
call
outsb
mov
sbb
cmp
decl
lcall
sbb
dec
add
aad
mov
mov
inc
addr16
rorl
mov
xor
testl
outsl
jge
xchg
pop
jmp
cld
call
scas
cs
cmpsb
pop
push
and
mov
hlt
or
fisttps
push
sbb
inc
loop
sbb
ret
movsb
test
lock
lahf
adc
pushl
sub
push
and
push
dec
adc
xchg
test
stos
and
push
outsl
rol
adc
jne
cwtl
clc
lds
adc
push
shrl
cmp
stc
aam
ds
fstl
les
mov
movsl
jmp
or
mov
xchg
test
fsubrs
lret
je
sbb
out
mov
stc
stc
lret
aas
jnp
mov
xchg
loope
jg
lods
sbb
addr16
repz
sub
mov
mov
nop
mov
mov
insl
jnp
mov
cltd
imul
daa
leave
test
adc
je
xchg
jae
pop
test
sbb
inc
xor
mov
cmpsb
cld
xor
sbb
lods
mov
fsubrl
lcall
jno
fstps
insl
cmc
sub
subl
cli
push
sahf
inc
and
mov
lock
fmulp
test
mov
pop
fsubr
xlat
lds
xchg
mov
das
insl
push
mov
leave
js
dec
ss
popf
dec
int
jbe
mov
adc
lcall
or
outsl
in
scas
push
lret
aam
and
ret
sbb
test
xchg
lahf
adc
and
adc
movsb
mov
arpl
icebp
xchg
fbstp
push
jl
movsb
sti
jns
dec
repz
lcall
cltd
std
loope
in
jno
pop
stos
fwait
ret
repz
xchg
jbe
xchg
dec
mov
or
fcoml
xchg
mov
test
and
sbb
xchg
daa
jno
or
sub
inc
inc
and
dec
mov
fsts
movsl
sub
inc
ljmp
fmull
mov
add
pop
push
or
aas
int3
add
sti
adc
repnz
std
shufps
stc
mov
jbe
xchg
pop
sti
test
divl
sahf
adc
js
push
psubb
pop
mov
inc
das
mov
sub
inc
mov
push
pop
pop
dec
mov
ficomps
in
jbe
cmp
out
mov
cs
add
mov
mov
int3
adc
lock
or
stc
out
mov
ja
dec
sbb
mov
std
add
ss
and
ljmp
fcoml
jb
pop
inc
sti
or
mov
mov
push
mov
add
icebp
cld
xorl
mov
push
inc
inc
scas
cmp
mov
and
shll
sahf
out
out
out
jo
sub
mov
adc
jg
insl
mov
sbb
in
ljmp
roll
pop
sti
rolb
or
dec
sbb
jle
fisubrl
mov
cld
insl
pop
rorl
xor
in
nop
scas
mov
push
mov
imul
hlt
xorb
in
and
iret
and
mov
aas
sbb
fdivrs
and
movsb
mov
sub
xchg
add
sarb
pop
dec
sbb
pop
shr
sub
inc
xchg
xchg
in
fbld
jae
push
cmp
popf
xchg
rclb
add
bound
xchg
gs
outsb
dec
sti
roll
dec
mul
xor
pusha
sbb
mov
outsb
push
icebp
push
in
pop
mov
incb
out
pushf
push
popaw
pop
jmp
roll
or
pop
xchg
outsl
sub
push
mov
mov
mov
jle
pop
scas
pop
pushf
adc
int3
stos
sub
pop
and
lret
fdivs
xor
repnz
loope
ficompl
push
jnp
xor
mov
pop
addl
xchg
fdivrs
lds
xchg
arpl
fwait
jo
imul
aas
nop
jns
test
sbb
loop
push
adc
dec
inc
aad
inc
xchg
jg
outsb
popf
lcall
add
xor
inc
and
cmp
ljmp
mov
xchg
push
mov
xchg
or
das
add
imul
addb
pop
and
push
or
hlt
push
mov
inc
xor
mov
daa
fstpt
ret
movsb
xchg
pop
and
add
jle
cld
push
inc
in
xor
les
cmp
fdivp
jg
inc
xchg
push
mov
mov
add
daa
addr16
les
orl
lret
shll
push
fdivs
shrl
addr16
sub
lock
nop/reserved
mov
cs
ret
popf
ret
jbe
js
and
fld
jecxz
enter
add
fidivrs
aam
mov
imul
inc
arpl
push
inc
cmp
pusha
gs
shll
sub
insl
cmp
dec
les
cld
in
loope
daa
jae
xchg
subb
push
jmp
inc
in
mov
jb
pop
add
and
icebp
mov
sbb
dec
dec
sbb
xchg
dec
leave
pusha
pop
jg
shll
fmull
pop
sbb
jo
lret
push
mov
cmc
mov
pop
imull
fidivrl
stos
arpl
xchg
xchg
mov
cmpsb
in
add
mov
pop
in
lods
inc
int3
rcrl
adc
mov
cmp
shll
inc
leave
mov
sub
sub
scas
fs
dec
push
repz
sbb
imul
imull
adc
lret
and
jb
jne
xchg
and
loope
std
jno
ffree
xor
adc
dec
xlat
imul
inc
cwtl
mov
fs
mov
pop
in
popa
test
lret
ret
jbe
cld
cmp
ja
pop
dec
negb
sub
add
leave
jno
push
dec
push
pop
scas
inc
dec
adc
cmovnp
jp
sbb
jns
je
hlt
loope
jb
push
daa
xor
std
test
stos
daa
movsl
add
xchg
shll
pushf
mov
xchg
cmp
sub
stc
cltd
cld
lock
cli
and
and
push
pop
inc
lods
mov
add
shl
stos
in
push
pusha
xor
out
cmp
sti
fistl
pop
jbe
push
movsb
mov
inc
add
add
shlb
cmp
aad
ljmp
or
or
mov
fcom
lcall
movb
lea
sbb
xor
dec
jns
xchg
cltd
mov
cmp
push
jb
popa
push
ret
jmp
movsl
rcrl
pop
add
les
cmp
jecxz
or
in
sahf
stos
gs
add
lret
jo
adc
data16
pop
pusha
mov
xchg
ds
jns
les
repz
lods
cmp
mov
mov
sub
mov
lea
and
sub
push
loope
mov
cmpsl
jnp
movsl
push
mov
xchg
les
addr16
neg
loop
cmp
jb
popf
inc
xchg
ret
push
lret
call
add
push
inc
push
loop
xor
add
jp,pn
sbb
mov
iret
mov
sbb
adc
dec
mov
or
popa
mov
pusha
xor
or
add
stos
ret
inc
lret
ja
mov
cmc
mov
inc
sbb
jae
into
push
push
stc
sub
push
adcl
lret
test
scas
xchg
pusha
sbbb
lock
lea
das
xor
out
push
jns
aas
movsl
xor
jmp
test
test
es
pushl
stos
mov
push
fcoml
dec
in
xor
fwait
mov
push
sbb
addr16
pop
fwait
scas
or
xchg
push
push
cs
nop
pusha
insl
xorb
ret
xor
cli
aas
mov
fwait
out
push
xchg
jae
jbe
or
lds
or
ja
mov
push
leave
js
xlat
call
push
inc
or
pop
push
in
pop
dec
pop
loopne
pop
pusha
or
stos
aas
cmpl
sub
dec
unpckhps
addr16
movb
cmpsl
jbe
lock
push
popa
int3
andl
popa
pop
pop
push
inc
pop
out
loopne
jae
adc
push
imul
es
or
dec
mov
add
jle
jae
lods
cmpsl
fsubr
inc
push
clc
push
gs
cltd
mov
cmp
xchg
fdecstp
rorb
or
dec
iret
and
in
jnp
inc
test
jp
je
push
enter
sbb
loopne
dec
mov
mov
sbbl
lahf
stos
mov
mul
and
lcall
lods
nop
into
push
aas
mov
jno
fldcw
fisubrs
fcoml
aaa
and
fbstp
enter
sub
nop
xor
and
dec
lret
outsb
jne
mov
push
sbb
pop
dec
pop
lea
test
lea
mov
dec
repnz
adcb
sti
clc
dec
std
cwtl
jb
sub
aam
pop
pusha
shll
push
mov
add
adc
dec
pop
sbb
mov
test
inc
xor
fmull
rol
cmp
or
mov
in
dec
fimull
jae
cmc
push
dec
add
inc
xchg
jae
dec
xor
sub
mov
xchg
es
mov
pushf
or
movsl
lea
sbb
ja
xchg
cmp
jl
inc
call
out
addl
pop
pop
nop
push
pop
iret
fwait
shr
fstps
int
sbb
xor
cmpsb
loope
push
push
jle
jne
and
sarl
mov
cwtl
pop
jo
popa
add
push
jns
ljmp
cmp
mov
push
push
pop
lea
imul
daa
push
mov
cmp
cmp
inc
stos
add
pop
dec
mov
and
xor
loop
cmp
push
dec
add
xorb
mov
push
in
add
lcall
icebp
lahf
lahf
std
movsl
out
cmpsb
mov
and
add
jb
adc
or
data16
mov
mov
inc
adc
jle
aam
push
iret
mov
sti
fstpt
lret
cmc
push
add
imul
push
cmp
mov
sbb
enter
lret
subb
pop
std
or
in
pop
test
call
ljmp
dec
dec
scas
clc
jg
or
add
bound
cmc
movsl
std
dec
test
ljmp
aad
or
mov
mov
sti
xchg
sbb
push
es
xchg
jg
andb
cs
lret
xchg
mov
shl
stos
pop
stos
inc
outsb
outsb
sti
nop
push
es
rcrb
pushf
xchg
bound
cmp
inc
pop
inc
push
test
sti
and
lock
inc
sub
mov
int3
clc
sti
inc
icebp
cmc
fildl
fucomp
mov
xchg
push
lea
jge
mov
cld
jp
push
push
ror
loopne
pop
loopne
loopne
jmp
cli
or
ss
aam
fsub
mov
dec
cmp
cltd
sbb
xchg
xor
sbb
lret
xor
popf
mov
or
sbb
imul
xor
mov
inc
jb
mov
loop
les
lahf
cmp
in
xchg
fwait
inc
jae
mov
mov
cmp
jns
fisubrs
bound
jl
nop
scas
mov
fldcw
scas
test
xchg
jg
push
fnsave
or
arpl
lods
or
inc
dec
std
loop
aas
test
sub
jp
pop
iret
add
or
sub
jp
imul
adc
mov
fs
mov
and
cmp
fistl
and
js
jg
fs
xor
divb
in
outsl
andb
jmp
div
dec
sbb
mov
cmpsb
cmp
jle
inc
shlb
cmp
ds
mov
add
jp
int
in
jo
imul
push
mov
inc
pushf
stc
rcl
je
xor
mov
dec
xchg
mov
sbb
sti
shrl
outsl
data16
xchg
adcl
hlt
jg
movsl
mov
test
das
das
stos
mov
sbb
aas
sahf
fistpll
adc
out
sub
sbb
insl
or
mov
rorl
hlt
imul
cltd
sub
gs
rolb
pop
or
pop
mov
insl
push
mov
push
into
push
popa
jecxz
mov
test
call
push
mov
mov
test
int
adc
out
imul
cmpsb
outsb
sbb
push
outsl
mov
mov
imul
xor
arpl
push
push
ds
mov
mov
pushl
out
nop
inc
pushf
mov
scas
or
pop
std
mov
enter
gs
scas
cwtl
pop
es
jp
lahf
movsl
mov
divb
mov
insl
hlt
ret
or
dec
jg
xor
cmp
pop
popa
inc
stos
scas
xchg
sbb
ffreep
sub
or
jecxz
loop
mov
leave
loopne
gs
mov
cmp
xor
cmp
mov
insb
sub
cmpsl
pushf
cmc
mov
popa
mov
das
sbb
ficompl
mov
mov
add
cmp
push
outsl
int3
mov
in
in
test
sti
out
fimuls
popa
dec
decl
jg
js
pop
imul
fnsave
movsb
pop
jno
push
mov
sbb
and
jo
jge
sahf
or
call
xchg
mov
add
scas
push
pop
jne
loopne
les
mov
movsl
cmp
cs
push
inc
in
rorb
loope
cmpsb
add
xorb
sbb
and
mov
popa
jne
xchg
arpl
pop
call
jns
in
ljmp
push
jne
lret
in
add
loopne
jne
jns
mov
or
xchg
mov
cmp
imul
cmp
call
push
jg
enter
mov
push
sbb
out
add
orl
cltd
les
jb
inc
cs
push
inc
mov
add
pusha
cmp
out
mov
insl
mov
test
and
mov
imul
sbb
es
pop
clc
idivb
jo
xor
sub
lret
dec
cld
aad
dec
sti
cmp
cwtl
ret
inc
pop
int3
sbb
pushf
ljmp
addr16
or
push
sub
cmc
mov
out
mov
push
mov
pop
jle
sbb
sub
ljmp
or
lahf
and
out
divb
sbb
cmp
fstps
mov
aad
daa
arpl
lods
inc
nop
pop
pop
in
add
fstps
arpl
push
scas
ja
ffreep
orl
push
mov
movsb
push
jmp
movl
loope
in
jae
data16
xlat
ja
nop
pop
gs
ljmp
jb
fs
inc
and
test
sub
inc
in
xchg
or
sti
sahf
jle
inc
andb
xor
jo
ficoml
dec
xor
adc
fstpt
ljmp
mov
add
rol
mov
push
repz
addb
jns
hlt
pop
dec
mov
mov
jp
dec
ret
add
pop
leave
lahf
mov
xchg
pslld
clc
clc
loopne
cmpsb
insb
push
xchg
daa
mov
jl
gs
adc
sbb
mov
hlt
sti
mov
mov
inc
scas
xor
cld
repnz
xchg
imul
lcall
mov
data16
call
sbb
adc
mov
cmpsl
jne
dec
xchg
shrb
mov
or
in
icebp
push
sbb
lods
fldenv
jge
sub
in
push
xchg
pop
out
push
or
fsubp
push
mov
sbb
cmpsl
xor
dec
inc
orl
shl
subb
pop
push
pop
mov
aad
xor
js
lret
fnstenv
xor
pop
xor
sbb
sbb
jmp
mov
mov
xchg
push
jbe
call
inc
negl
fisubs
lea
movsb
es
mov
cmp
push
pop
fildll
std
out
lret
jmp
jp
or
js
or
xchg
cltd
adc
pop
imull
adc
dec
and
push
pop
inc
push
mov
arpl
jne
in
and
xor
cld
in
or
mov
push
lret
xor
sahf
xchg
leave
adc
jae
icebp
and
aad
loopne
out
sub
ljmp
xchg
in
jecxz
repz
test
and
push
test
stos
pop
dec
cli
jb
add
pushl
stos
xchg
rcll
or
repnz
ret
jne
push
jl
test
push
xor
test
dec
jnp
inc
adc
ss
stc
out
mov
and
cwtl
jb
jne
inc
imul
aaa
cli
mov
cmpsl
ljmp
and
ss
int
inc
xlat
fisubs
movsb
xchg
mov
aad
jecxz
sbb
shr
stos
add
or
add
add
loop
shrb
cmp
mov
stc
and
jnp
lods
mov
outsb
nop
and
je
mov
dec
xchg
js
stos
jne
stc
subl
cs
loopne
xchg
mov
gs
nop
out
inc
test
mov
stos
push
sbb
movsl
push
mov
lahf
notb
popa
inc
sub
add
cmp
or
jbe
add
jae
add
out
lock
inc
vmovdqu
arpl
rcrl
adc
in
jmp
repz
std
bound
inc
push
mov
or
jb
xor
test
enter
les
ja
adc
cli
inc
mov
scas
ja
sbb
je
sub
dec
jge
lret
mov
jp
mov
scas
lahf
add
jo
add
dec
rol
pop
dec
inc
in
inc
repz
sti
mov
xchg
movsb
arpl
pop
das
pop
lea
lds
cmp
les
adc
ret
insl
adc
jmp
jmp
cltd
ljmp
into
loop
push
outsb
xchg
push
pop
inc
sub
loopne
out
xchg
adc
or
ja
mov
shrl
stos
aaa
out
imul
push
mov
insl
xchg
add
mov
push
push
pop
mov
sahf
mov
test
mov
inc
out
lcall
dec
jp
push
push
adc
movsl
jae
clc
cmp
lock
adc
orb
pop
or
inc
jo
scas
pop
in
js
sub
mov
jg
out
dec
sbb
adc
mov
jp
stc
and
add
lods
repnz
ljmp
call
add
inc
mov
pusha
push
shrl
inc
xor
sbb
in
jnp
in
loop
icebp
sti
adc
adcb
in
pop
fmull
xchg
jns
inc
movsb
cmc
or
pop
outsl
fistl
push
mov
mov
dec
cmpsb
sahf
test
cmp
je
into
jl
mov
jp
mov
mov
sti
inc
sub
lahf
adc
subb
sbb
push
out
lret
pop
stc
cmc
movsl
fs
inc
dec
shrl
and
bound
adc
xchg
das
sbb
mov
or
cs
push
push
mov
jns
fsubr
leave
xchg
mov
xchg
rol
lahf
or
out
movsb
xchg
push
or
mov
mov
test
mov
cmp
fwait
pusha
in
xor
jmp
stos
out
arpl
add
orb
sbb
push
dec
mov
and
mov
movsb
int
pushw
push
movsl
aaa
dec
mov
mov
push
sub
popa
ja
push
divb
js
cmpsb
les
lds
aad
inc
rclb
adc
loop
rolb
add
mov
cmp
sub
jmp
or
jnp
fisttpl
and
jo
cmpl
gs
cmp
ret
popf
pop
rcll
jo
adc
out
frstor
sub
mov
in
hlt
cmp
cwtl
stc
enter
push
mov
call
pop
mov
fcomp
push
test
push
inc
dec
in
cmp
imul
std
pushf
sbb
sbb
data16
inc
mov
mov
mov
sahf
lods
inc
adc
jle
mov
adc
ljmp
xor
outsb
sbb
mov
ljmp
sub
pop
scas
mov
lahf
fdivrp
sbb
dec
or
pop
sub
lcall
mov
adc
and
arpl
sbb
xchg
testb
mov
int
add
in
and
xchg
jo
mov
les
sahf
int3
push
push
leave
jne
out
pop
inc
fcmovb
sub
out
pop
adc
das
dec
dec
cmc
into
cmp
mov
xchg
aam
lods
mov
popa
mov
popa
mov
rcll
into
out
lea
xchg
pop
xlat
pop
adc
rorb
xor
push
lret
cli
jne
pop
aas
pusha
inc
pop
add
ljmp
jge
push
mov
outsb
jns
pop
inc
cmp
cmpb
xchg
fwait
push
mov
in
lock
sbb
mov
arpl
pop
sbb
test
mov
loop
adc
xor
lret
addr16
push
mov
js
outsl
pop
divl
lret
pushf
mov
add
scas
push
cmp
test
shll
cld
push
or
daa
xchg
int3
cltd
push
xor
test
add
clc
adc
insl
lret
or
sbb
in
insb
jmp
fimull
pop
xor
mov
pop
xchg
outsl
jmp
inc
xchg
xchg
adc
mov
mov
mov
dec
stos
pop
jno
mov
cmp
mov
or
into
aaa
sbb
cld
mov
mov
mov
add
pop
add
pop
sbb
js
mov
aad
pop
xchg
lods
ja
mov
sbb
cmp
cli
push
mov
je
ss
sbb
add
flds
mov
shlb
imul
pop
fsubs
pop
ljmp
fwait
dec
dec
sub
scas
aas
popa
call
movsb
leave
mov
lods
mov
andl
xchg
pop
mov
int
xor
jns
mov
jecxz
cmpsb
rorb
xchg
adc
jle
rcrb
aas
or
sbb
sbb
mov
lock
jns
je
out
push
stos
jbe
shll
jmp
mov
fsubl
js
imul
inc
pop
or
mov
adc
pop
mov
sub
shr
and
jnp
mov
pop
inc
in
lds
mov
add
lock
pop
jmp
mov
push
push
inc
test
cs
lods
lock
sub
sarb
dec
mov
push
dec
pop
sbb
jb
lret
inc
std
adcb
add
and
sbb
ljmp
popf
popa
fs
cmpxchg
cwtl
stc
aaa
cmp
mov
sti
test
xchg
xor
pop
sbb
es
lcall
scas
jp
inc
sub
jns
push
in
fst
sub
dec
pop
lcall
push
scas
jo
mov
repz
add
cli
add
mov
push
jb
xchg
push
dec
or
pushf
repnz
clc
dec
jno
xchg
outsl
int
and
mov
je
fxam
cmp
mov
lfs
xlat
inc
pushf
inc
clc
sbb
add
xlat
and
in
or
jns
pusha
ljmp
leave
ficomps
cltd
jge
bound
int3
jg
jl
cmp
xor
loop
int
mov
aad
daa
cmp
mov
fadd
mov
lret
mov
cli
mov
sbb
pop
mov
stos
sub
inc
cltd
lods
mov
movsl
imul
cmp
jl
into
rcrb
cmp
inc
push
mov
sub
xor
pop
xchg
test
and
imul
fs
loop
push
outsl
push
loope
mov
in
dec
jmp
and
movsb
imul
cmp
into
pushf
shrl
pushf
push
js
imul
and
xlat
and
aad
bnd
or
enter
mov
and
sbb
ljmp
int3
sbb
xor
mov
jmp
xchg
add
stc
sbb
sti
cmp
add
mov
pop
push
lods
jle
dec
pop
mov
adc
adc
rorl
popa
jge
insb
dec
pop
sarl
rolb
lea
xchg
mov
and
cmp
cmp
mov
and
cmpsb
cwtl
scas
dec
add
xor
stc
pop
inc
xor
insl
adc
sub
mov
inc
xchg
insl
aam
inc
out
mov
les
jne
mov
lock
lods
mov
push
push
or
ret
or
aaa
aas
sbb
sub
dec
xor
sub
mov
scas
imul
inc
mov
push
leave
or
dec
sub
outsb
push
push
dec
dec
lods
cmp
dec
mov
mov
push
cmp
aad
cmp
int
icebp
jnp
push
push
push
inc
lods
out
divl
sbb
jb
loopne
push
pop
xorb
push
cmc
push
fcomps
mov
data16
fwait
mov
aam
lds
movsl
sahf
cmp
sti
or
addr16
push
push
dec
movsb
and
adc
mov
xlat
clc
inc
mov
mov
xchg
adc
jecxz
adc
pop
test
out
cmp
mov
cltd
lcall
add
jo
pusha
dec
lds
cmp
arpl
and
fs
and
push
cmp
sbb
inc
add
pop
push
push
fiaddl
adc
leave
mov
push
inc
sub
jge
sbbl
xlat
cmp
sub
mov
push
inc
cmp
test
clc
mov
cmpsb
push
or
int
mov
push
push
and
arpl
insl
push
cmp
je
and
inc
fbstp
add
clc
in
gs
inc
push
mov
add
add
cld
lods
push
divb
pop
jge
das
sti
lds
cwtl
aam
setae
or
inc
jae
cmp
leave
cmc
pop
test
adc
mov
dec
int3
jns
daa
pop
int3
dec
xor
popf
or
inc
mov
mov
jmp
xchg
add
test
rorb
push
notl
inc
test
jb
dec
xchg
adc
jg
repz
jb
push
fwait
xchg
mov
mov
xlat
sbb
add
scas
dec
ja
mov
pop
and
pusha
jmp
xor
push
rcr
xor
xor
or
aad
add
loop
sbb
mov
cmp
les
stos
sbb
dec
rol
ljmp
adc
add
xchg
call
push
stos
fistl
pop
aad
int
add
jo
inc
fs
lahf
cmpsl
sub
pop
into
sbb
test
jecxz
add
add
xchg
addr16
pop
cmpsl
xchg
and
mov
ret
xchg
mov
jp
push
ja
xor
pop
je
push
mov
jo
lock
push
or
mov
dec
xchg
mov
jbe
dec
cltd
adc
mov
mov
jg
inc
test
cmc
inc
loope
out
push
cs
and
mov
dec
inc
mov
inc
ret
jle
jmp
enter
or
mov
int3
cltd
int3
cmp
out
in
fsts
imull
add
outsb
cmp
xor
test
push
repz
sub
test
scas
popf
icebp
fwait
testb
je
jo
push
mov
add
es
imul
xor
pop
jl
push
ret
ss
sbb
shr
ljmp
pop
test
add
sub
rcll
repnz
nop
inc
xchg
scas
int
push
mov
sub
xor
adc
cmc
xchg
jp
dec
cld
ljmp
pavgb
mov
xchg
mov
negl
sbb
jns
dec
imul
in
sub
pop
std
jle
xchg
leave
jge
imul
adc
test
xor
mov
adc
rcl
xor
sub
ret
pop
lods
cld
bound
adc
dec
daa
dec
xlat
les
lock
in
push
pusha
sahf
out
loope
sbb
or
mov
test
loope
add
fs
pop
xchg
push
xor
sub
and
not
xchg
xchg
pop
cmp
es
mov
arpl
leave
test
frstor
add
sub
jle
pusha
flds
sbb
push
stc
jmp
clc
and
push
stos
dec
push
xor
or
xchg
fwait
inc
sahf
jecxz
lock
lea
adc
sub
adc
ja
ss
test
bound
sub
stos
pop
sahf
mov
pop
mov
xchg
ja
or
inc
pushf
cltd
jno
pop
jp
sbb
in
pop
push
in
inc
cmpl
loop
data16
jbe
in
mov
xor
xor
mov
xor
test
add
shr
add
xchg
aad
xchg
lods
test
adcb
jg
and
fwait
test
sub
hlt
cs
aaa
rorb
insl
push
fsubrl
mov
repz
xchg
loopne
jnp
bound
or
adc
xchg
mov
push
mov
and
ss
push
scas
in
inc
pop
je
add
aaa
jbe
or
mov
adc
popl
sbb
sbb
cltd
push
outsl
push
mov
sub
and
jmp
mov
test
or
out
ret
divb
rorb
or
sarl
daa
mov
iret
add
insl
filds
pushf
mov
sub
and
bound
adc
addr16
xchg
outsb
sbb
sahf
orb
pop
dec
adc
mov
dec
and
fstpl
jle
mov
dec
aas
sar
adcb
or
cmpsl
fnstsw
or
sbb
and
je
ret
es
jnp
or
xchg
mov
and
and
mov
jge
inc
cmp
inc
lods
jno
push
mov
in
and
xlat
push
adc
push
stc
mov
xor
sbb
cld
in
push
repz
cmp
cmp
adc
pop
push
rcl
jmp
in
aad
inc
lcall
inc
cmp
mov
mov
add
scas
and
rolb
aas
lods
xor
mov
xchg
mov
js
adc
pop
xor
out
xchg
in
cli
sub
out
insl
mov
xchg
xchg
lods
das
jne
mov
popa
fadd
test
push
mov
daa
inc
xchg
ret
push
test
inc
cmpsb
sub
in
flds
adc
daa
iret
arpl
lret
cmp
clc
and
adc
lea
clc
cld
adc
je
xor
out
jecxz
xchg
jnp
into
mov
inc
jnp
es
int
ret
clc
jl
and
sub
mov
ss
data16
inc
movsb
ss
rcl
fdivs
ds
stos
pop
pushf
shlb
in
push
scas
pop
and
addr16
push
int3
lds
iret
bound
push
jmp
mov
in
or
repz
shr
cltd
clc
xor
inc
shl
inc
mov
mov
cwtl
out
or
iret
mov
mov
mov
jae
stos
fcompl
dec
push
sub
int
out
mov
xchg
sub
cmpb
cld
mov
jae
jg
cltd
jl
mov
dec
pop
xchg
jecxz
imul
xchg
mov
dec
outsb
rclb
xor
push
jmp
movsb
mov
jne
jns
xchg
iret
jmp
push
fsubrl
imul
and
adc
mov
push
push
jns
xchg
push
shr
pop
fldl
mov
push
movsb
fdivr
jns
out
das
add
xchg
cmp
add
adc
jecxz
ds
loope
or
out
loop
outsl
in
dec
pop
ret
jns
adc
sub
or
sbb
sub
sub
mov
or
pop
cmp
inc
fwait
movsb
in
cmp
mov
dec
mov
lds
dec
out
adc
xchg
in
lea
cmp
notb
in
pop
aaa
pop
pop
sub
rcll
mov
xor
jo
pop
rolb
out
popa
mov
imul
aad
test
fs
dec
cmpsl
add
pusha
add
pop
sub
push
fdivr
das
fwait
in
repz
outsb
pop
ret
push
push
bound
sub
lods
sbb
lcall
aad
jae
jns
loopne
mov
dec
and
mov
ss
jnp
dec
push
ret
push
loop
add
push
fisubl
cmp
out
xchg
and
lcall
jecxz
sbb
add
cmc
inc
hlt
pop
xchg
pop
jae
sbb
pop
xor
mov
out
mov
cmpsl
lea
xchg
aaa
and
cli
xchg
mov
and
push
inc
push
fiaddl
cmpsl
inc
dec
mov
fwait
leave
imul
mov
cmp
icebp
lea
test
xchg
test
test
cltd
call
adc
inc
push
fyl2x
push
dec
add
ljmp
negb
sub
jnp
inc
test
sbbb
iret
mov
icebp
push
rorl
xor
push
stos
decb
nop
bnd
inc
and
addl
adc
jnp
and
rorl
adc
xor
adc
xchg
aam
adc
adc
cmp
repnz
ret
cmpsl
cmpb
mov
jae
aaa
mov
adcl
lods
fwait
lret
shlb
inc
jl
out
jg
es
jmp
pop
or
mov
pop
ss
sbb
push
or
sub
sub
fwait
or
pop
outsl
adc
fs
pop
and
mov
mov
sbb
inc
cmp
test
or
push
lods
in
popf
add
and
sti
mov
cmp
test
push
ficoms
sub
scas
movsl
in
cmpsl
addr16
sub
cld
or
in
movb
adc
push
mov
movsl
jnp
shlb
push
mul
fwait
aas
cmpl
mov
lock
mov
fcoml
nop
mov
or
scas
cld
adc
std
pushf
jmp
inc
adc
shll
insb
adc
test
fdivl
cld
loop
sub
repnz
push
sarb
aaa
inc
ret
loop
mov
sbb
sbb
aad
bound
inc
cmpsl
xchg
int3
mov
add
sbb
rclb
inc
push
adc
push
add
bound
push
inc
aam
jbe
xor
imul
insl
sar
mov
mov
push
insl
lods
daa
and
test
and
ret
ljmp
fcompl
inc
stos
daa
push
fwait
fwait
call
pop
fimuls
mov
out
loopne
out
xor
cmpl
dec
xchg
mov
rol
out
mov
jg
ss
rcrl
xchg
loope
jo
inc
outsb
xchg
out
out
and
sub
jg
xor
or
jbe
xchg
dec
das
sbb
cmp
outsb
xor
cmpsb
jl
in
pop
loope
insl
or
sub
std
cwtl
cmp
lcall
enter
adc
cmp
pop
ljmp
subb
sti
gs
inc
arpl
pop
ret
rclb
adc
cli
sub
sarb
push
fnstcw
hlt
cmpsl
dec
adc
mov
jp
cmpsl
push
fidivrs
inc
stc
or
mov
mov
je
lcall
add
ret
lret
mov
pop
push
repz
data16
sub
rclb
inc
adc
ljmp
mov
sti
fwait
iret
sbb
dec
mov
ror
cs
inc
repnz
pop
mov
xchg
cmp
xchg
push
cmp
test
cs
push
popa
jle
iret
pop
cmp
pop
add
sbb
jle
jno
sahf
ffreep
cli
mov
movsb
mov
inc
add
mov
in
push
stos
jmp
nop
push
cwtl
insl
push
in
push
pop
mov
and
gs
scas
push
mov
repnz
das
addr16
sbb
daa
in
stos
dec
jmp
scas
fwait
mov
repz
test
or
daa
jecxz
scas
pop
lds
pop
dec
xchg
cmp
mov
sahf
repz
mov
inc
or
jno
sbb
cmp
movsl
pop
sti
xor
inc
mov
sbb
xlat
ret
and
cwtl
mov
xor
sbb
aas
pop
push
jno
movsb
ja
pop
movl
add
mov
dec
stos
xor
mov
inc
aad
fdivrl
sbb
push
sub
insb
and
mov
cs
and
jne
or
ret
lds
aam
movsb
xchg
lahf
jl
adc
push
jo
inc
jbe
iret
pusha
xlat
incb
insb
out
ljmp
jnp
loope
dec
mov
or
std
adc
cld
or
push
add
mov
adc
data16
mov
shrl
icebp
subb
je
js
addr16
mov
fists
cwtl
test
sti
push
pop
xchg
repz
jbe
movsl
push
out
iret
and
call
adc
mov
les
lret
mov
fidivl
sub
pusha
xchg
sub
xchg
fsubs
pop
popa
mov
sub
mov
scas
and
bound
sub
shlb
dec
push
jp
mov
xorb
push
call
push
dec
iret
idivb
xchg
ret
push
fadd
cmpb
cmp
or
cmp
sbb
jno
jge
push
and
mov
mov
clc
das
jmp
ds
mov
sub
add
or
roll
mov
jns
es
mov
sahf
adc
das
int
into
mov
sbbl
cmp
cmp
pop
push
mov
stc
popa
hlt
add
xchg
sar
xlat
out
cmp
adc
mov
mov
sub
insl
and
popa
dec
imul
push
xor
ret
insb
mov
out
mov
sbb
enter
sbb
notb
cmp
pop
dec
fisttpl
jmp
mov
fbstp
cmp
sub
push
iret
and
xor
stc
data16
mov
inc
out
in
pusha
xchg
xchg
and
or
jb
push
cmp
mov
jmp
pop
popf
jecxz
stos
loopne
out
or
sub
lret
ret
into
adc
mov
adc
sub
in
xor
pop
add
scas
push
adc
jmp
mov
aam
hlt
subb
pop
and
mov
fmuls
jae
add
push
sti
jae
insl
out
xlat
test
add
jno
out
loop
loope
adc
out
jmp
or
outsb
pop
insb
fists
fisubs
and
cltd
in
ja
sub
dec
std
andw
fwait
sub
cmpsl
xchg
adc
and
inc
insb
jns
outsl
bound
jecxz
js
sbb
mov
sub
loope
cltd
push
pushf
adc
and
clc
sub
leave
push
push
lahf
sbb
and
adc
pop
inc
inc
mov
jecxz
cmp
aad
xchg
insl
add
ds
jmp
jge
jg
clc
cltd
push
pushf
ljmp
inc
sbb
shl
gs
lods
mov
pop
sub
xchg
cwtl
jmp
sbb
jp
push
das
pop
add
iret
fimuls
or
mov
mov
leave
pushf
or
xor
imul
inc
sahf
in
sub
or
adc
inc
mov
fldenv
clc
aaa
ja
xchg
push
sbb
dec
call
push
mov
adc
cwtl
fnsave
lock
push
dec
push
mov
sub
or
xchg
ror
dec
dec
ljmp
shlb
mov
fistps
push
add
pop
pop
lret
js
sub
test
aad
mov
adc
mov
xor
mov
insl
movsl
sub
push
inc
mov
adc
cmovb
rcrl
mov
imul
es
xorb
jge
fmull
test
ljmp
push
jg
jo
js
js
cld
stos
dec
xchg
test
dec
sub
into
flds
cmpsl
jne
popf
mov
popf
rol
xlat
xor
jno
or
or
sti
dec
mov
and
rorb
or
inc
mov
outsl
xor
push
adc
pop
or
loop
lret
dec
cmp
adc
fcmovbe
cld
mov
mov
add
loope
pop
pop
or
mov
jge
jmp
jo
test
cmp
test
and
in
mov
adc
pop
cmpsb
ljmp
adc
les
int
xor
flds
cmp
cli
and
rcll
sbb
cmp
mov
hlt
pop
adc
out
push
inc
insb
mov
xor
and
movsb
push
mov
shl
jge
in
hlt
xorl
add
rcll
cmc
cmp
fbstp
dec
and
push
inc
ja
sbb
aas
sub
stos
lea
aad
nop
cmp
clc
rorl
xchg
sub
jae
jge
arpl
adc
pushf
add
adc
pop
repnz
dec
ljmp
lock
test
leave
dec
add
cmp
test
push
in
mov
imul
xor
aas
mov
push
mov
pop
inc
pusha
icebp
sub
lret
fisttps
das
jns
fldcw
mov
out
sub
lretw
pop
out
repnz
lahf
movsb
sub
cmp
pop
cmpb
outsb
add
lcall
in
rep
or
imul
pop
mov
pushf
or
jl
inc
movsb
shlb
aam
inc
mov
sbb
pop
dec
sar
or
fidivs
inc
jo
add
in
pop
xchg
add
sbb
or
mov
xchg
pop
mov
cmp
jo
repnz
adc
sbb
inc
ret
sub
dec
sti
jb
scas
and
andl
push
lret
imul
pop
aas
sbb
sub
aas
cmp
jecxz
lret
xchg
xlat
cmc
out
or
mov
scas
dec
sbb
pop
aad
iret
iret
loope
lock
popa
fisubrs
push
xor
dec
mov
sbb
cltd
movb
cmpsl
ret
mov
cmp
std
xchg
cltd
mov
or
imul
jne
dec
repz
icebp
test
add
test
nop
xchg
stc
sarl
stos
imul
push
mov
cmpsl
rcrl
lahf
out
xor
testl
adc
dec
imul
outsb
push
mov
mov
movsb
daa
daa
sub
mov
dec
mov
xor
sbb
std
imul
hlt
lcall
dec
lds
test
mov
fistpll
and
cmp
push
mov
mull
xchg
stos
insb
add
cmp
loop
gs
pop
adc
sti
sbb
inc
lcall
movsl
adc
fnstsw
add
rorl
dec
in
mov
mov
shl
stos
jmp
aaa
jae
lea
mulb
xor
push
cs
mov
inc
push
sub
xchg
loope
and
sub
jo
push
shrb
lea
mov
lret
ret
pop
mov
add
cld
adc
inc
jecxz
add
faddl
loopne
sub
jge
mov
lahf
negl
sub
mov
loop
xchg
fcmovne
xchg
sbb
inc
add
mov
mov
jp
pop
xor
add
mov
xchg
call
push
call
cli
ret
jmp
adc
lea
push
rclb
and
lock
into
insl
cmp
out
inc
ret
ja
jl
push
pop
lods
ret
ror
pop
pop
not
loopne
ret
cmp
xor
dec
je
add
daa
cmp
loop
or
fs
ljmp
pop
jo
leave
xor
shll
fidivrs
mov
out
decb
sub
xor
add
push
aas
addr16
adc
jge
pop
je
push
push
sub
pop
mov
std
jne
sbb
insl
idivb
cmp
mov
dec
notl
mov
add
aad
adc
cmpsl
adc
hlt
jge
pop
pop
push
dec
jle
push
lcall
insb
je
popa
test
mov
fists
inc
inc
insb
fcoms
inc
and
mov
out
lret
push
lock
inc
jbe
mov
rclb
xchg
push
shl
test
je
jb
or
mov
jge
push
xor
push
push
cmpsb
pop
int
or
and
jns
sub
mov
mov
add
sti
fstps
movsl
mov
out
pop
push
and
shrl
int
sahf
dec
xor
pop
lahf
pop
push
pop
aaa
pusha
out
adc
jmp
das
xlat
add
es
jl
xor
push
mov
sbb
ret
xchg
mov
xchg
mov
jb
fidivrs
pop
nop
lret
lcall
sbb
cs
hlt
and
mov
sub
adc
or
cs
push
pop
dec
jne
aaa
mov
mov
xchg
inc
sti
jns
in
cmp
hlt
pop
cmc
pop
jae
insl
pop
imul
pop
adc
and
adc
repnz
add
loop
add
sarb
inc
loop
pop
cmp
mov
mov
ret
adc
divb
mov
jg
sbb
sahf
int
pop
add
sbb
inc
dec
jno
sbb
push
les
in
xchg
jl
adc
inc
push
mov
or
loopne
mov
push
and
ss
or
and
mov
xchg
xor
pop
in
stos
lret
mov
repnz
cwtl
push
pop
insb
sarl
and
test
rolb
jns
adc
std
xor
inc
popf
pop
xor
xchg
pop
dec
fcmovne
jbe
cmpsl
or
add
jmp
stos
xchg
cmpsb
jae
push
inc
hlt
cmp
into
imul
jl
imul
push
insl
rolb
int
xor
jbe
cmpsl
cmpsl
inc
add
xchg
mov
lcall
pop
sub
cmp
mov
adc
jnp
shl
flds
mov
jl
dec
mov
aam
nop
icebp
jecxz,pn
xor
sti
dec
mov
jnp
pusha
outsb
lock
add
jns
jo
scas
movsb
dec
scas
movsb
mov
lock
dec
dec
fsub
movsb
lods
inc
sbb
or
or
les
inc
jge
pusha
ja
mov
push
dec
pushf
jno
loop
mov
imull
das
push
and
inc
add
mov
add
mov
aaa
jge
test
push
push
imul
adc
dec
push
mov
sub
sub
pop
sbb
outsb
les
xor
and
add
cmp
inc
push
js
outsl
inc
icebp
xchg
or
adc
xor
mov
mov
or
in
andb
sbb
fnsave
sbb
mov
mov
push
mov
cmp
xchg
je
xor
mov
movsl
subb
cwtl
jo
shl
imul
pop
sahf
adc
or
jns
xor
int3
adc
jecxz
push
push
stos
lcall
mov
mov
sub
pop
inc
in
mov
sub
xor
call
sub
sub
jae
pop
std
lock
ret
int
jo
jo
scas
xchg
ja
jne
lahf
jb
fimuls
fldt
aaa
imul
into
test
lods
cld
pop
out
mov
call
movsb
filds
imul
stos
in
cmp
and
lret
sub
repz
sbb
cwtl
sub
sbb
jl
push
arpl
and
mov
ds
dec
mov
je
inc
popf
push
addl
mov
std
mov
gs
mov
imul
pop
sub
sub
lods
adc
shl
std
inc
outsl
inc
mov
push
fcmovne
fwait
test
stos
in
push
sub
les
jns
mov
cmp
pop
or
sti
inc
sbb
xlat
push
jmp
test
cmp
ds
mov
movsb
mov
push
jmp
cld
dec
add
xorl
or
ficomps
loope
inc
add
jo
mov
mov
pop
roll
jl
cmp
cwtl
cmpsl
fstps
xor
mov
repnz
stc
xchg
and
pusha
cmc
inc
fistps
or
test
sbb
or
call
fiadds
dec
mov
fwait
divb
outsb
xchg
icebp
jo
ret
push
scas
lea
xchg
imul
fucomip
rdpmc
repnz
jae
pop
sub
arpl
out
mov
mov
sub
sbb
push
dec
test
cli
jl
or
push
sub
fildll
andb
out
adc
xchg
inc
adc
mov
adc
sub
loope
cs
jns
lcall
clc
aaa
test
push
xchg
push
adc
xchg
mov
lea
sub
mov
add
sub
xlat
incb
add
pop
cmc
xor
pop
push
in
xchg
mov
test
mov
out
jg
sub
mov
push
outsl
lret
icebp
push
adc
xlat
test
outsl
icebp
pop
popf
or
pop
pop
pushf
mov
jecxz
add
jge
fsubl
dec
pop
std
fucomi
jle
cmp
sbb
iret
mov
jno
xor
lods
loop
sub
sub
scas
cld
sahf
je
ds
jb
mov
int
mov
ret
ds
mov
mov
xchg
loop
gs
stos
jo
dec
lods
out
cs
rcr
fdivl
call
lds
cmp
movsl
lret
div
mov
jae
outsl
loopne
pusha
or
sbb
lods
sub
push
jg
jae
int3
cmp
das
call
sbbb
sbb
movsl
mov
adc
lods
or
mov
movsb
push
sbbl
jp
push
shrb
iret
cmpsb
imul
inc
aaa
jge
sbb
xchg
shr
sbbl
or
pop
mov
lcall
jecxz
cld
movl
repz
imul
outsb
sbb
hlt
jae
loop
or
ret
cmp
fwait
lds
mov
mov
add
add
cmp
mov
pop
out
shll
push
sbb
js
ss
fists
les
ljmp
jb
test
add
dec
mov
jp
stc
rcr
iret
push
mov
dec
dec
test
dec
ds
xor
cmp
mov
repz
xor
pop
out
mov
gs
data16
pop
movsl
push
in
xlat
jmp
scas
and
int
leave
cmp
or
or
lods
and
pop
pop
ret
dec
rcll
arpl
pop
test
mov
aaa
mov
add
mov
sbb
pop
cs
add
adc
add
jp
xor
pushf
in
inc
hlt
movsb
fidivrs
stos
clc
movb
ja
cmp
sbb
test
fwait
mov
or
jle
push
add
jmp
jae
lret
ret
mov
inc
mov
lcall
ss
fsts
add
mov
fsubrs
ja
movsl
jne
pop
pop
in
xor
rol
pop
add
dec
out
stos
mov
mov
pop
dec
fstpl
xlat
ds
hlt
xor
ficomps
pop
iret
fs
notb
call
mov
push
cmp
inc
adc
shrb
mov
sbb
fucomip
jo
sti
hlt
dec
or
sbb
test
test
ret
inc
out
ret
arpl
fnstcw
inc
popf
jl
cmp
push
add
shrl
push
jne
xor
in
sub
lret
mov
ljmp
pop
dec
rcrl
repnz
mov
out
push
js
xchg
dec
mov
jmp
icebp
ss
jb
push
iret
filds
mov
cli
dec
cmpsl
sub
fldl
loopne
daa
fwait
cmp
pop
jg
int3
lea
mulb
dec
cmp
int
cmpsl
inc
dec
sub
sub
clc
aad
nop
lea
testl
mov
nop
and
jge
xor
xchg
fdivs
outsb
sbb
outsl
in
movsb
push
sbb
movsb
add
mov
sbb
pop
xchg
pushf
inc
jg
mov
mov
rclb
je
loope
pop
jbe
cli
es
xor
inc
sub
xor
and
lcall
pop
lods
jae
sub
jp
dec
test
test
imul
and
adc
testl
mov
lret
or
loop
ja
and
sub
lds
divl
push
inc
das
cmc
push
and
icebp
aaa
sti
ljmp
or
xorl
sub
fwait
xlat
lret
xchg
sarl
inc
and
out
pop
inc
bound
or
cltd
movsb
cld
stos
ja
lea
inc
dec
idivb
decl
jecxz
xchg
jo
into
or
inc
lcall
scas
loopne
mov
cwtl
test
pusha
xchg
ficoms
ja
inc
mov
mov
clc
int
pop
jmp
cltd
fwait
xchg
notb
adc
dec
push
ljmp
mov
pop
int3
or
ret
fildll
cltd
push
dec
mov
outsb
bound
in
inc
adc
stos
add
addps
cld
or
adc
push
mov
mov
insl
xor
scas
insb
add
fsubrl
sbb
add
mov
loop
stos
stos
adc
int3
inc
nop
fsubl
dec
push
fistpll
sub
repnz
and
lret
pop
shll
add
cmp
jno
orl
pop
xor
or
lret
push
loop
sbb
sub
jmp
push
jl
sbb
push
sub
ret
or
push
into
add
insb
outsl
enter
xchg
or
in
mov
inc
pop
or
dec
enter
adc
mov
lock
push
fdivs
repz
iret
shll
sbb
icebp
xchg
xchg
bound
push
loop
fimuls
xchg
outsb
rol
sbb
les
adc
cwtl
dec
adc
push
push
dec
mov
or
sbb
jbe
iret
cmc
push
lods
push
lahf
arpl
jnp
bound
jg
mov
movsl
rolb
icebp
es
sub
push
cs
stos
test
cmpsb
popf
std
push
mov
jmp
add
jo
jecxz
sbb
scas
mov
rcll
das
mov
pop
fdivrl
data16
in
enter
mulb
out
adc
mov
mov
dec
fwait
cwtl
dec
push
pop
push
and
jge
arpl
clc
arpl
in
pop
xchg
add
lcall
sub
in
bound
push
add
rcrl
pop
inc
pop
rcrl
dec
into
in
shrb
ds
mov
xor
repnz
push
adc
faddl
outsb
sbb
xchg
mov
mov
call
push
cs
push
aaa
lock
mov
stos
outsb
ret
idivl
scas
xchg
adcb
insb
inc
in
pop
scas
add
mov
push
clc
xchg
push
push
into
add
push
xchg
in
es
cmp
test
addb
inc
lahf
enter
aad
jecxz
pop
fsub
or
and
push
movsl
lods
and
test
or
rclb
rcll
cmp
fwait
adc
notb
push
fs
sub
mov
jp
xchg
popf
mov
jp
mov
cmpsb
out
push
js
and
sbb
lods
test
js
xchg
xchg
jl
test
dec
adc
lea
push
mov
or
es
test
xchg
inc
jge
fsubl
jg
pop
sub
push
in
xor
dec
xchg
pusha
sbb
jl
call
insl
fs
push
cli
lods
int3
insl
popl
scas
cwtl
sbb
lea
cmp
enter
pop
popf
jg
lds
fldl
jne
ret
cld
inc
enter
cmpsl
ret
int
ret
xchg
sbb
inc
sub
dec
dec
mov
fsubrs
shrb
ficomps
sub
aad
cli
jecxz
pop
push
enter
lcall
push
xchg
xor
sub
mov
xchg
adc
mov
sahf
mov
dec
lcall
decl
xchg
pop
dec
mov
ja
ret
cmpb
out
pop
mov
pop
testl
cli
mov
sub
gs
push
movsb
adc
push
sbb
lock
in
fdiv
and
mov
roll
out
outsl
ja
pop
xchg
xchg
movsl
fstpl
xlat
jo
popa
loopne
push
mov
aaa
dec
lock
sub
jmp
adc
push
and
loope
xchg
scas
push
mov
test
push
adc
cmp
mov
jl
cmp
cmpsb
or
mov
mov
push
adc
xchg
out
xchg
dec
or
jnp
dec
movl
mov
inc
or
pop
add
add
xor
sub
ljmp
xchg
je
and
pop
mov
xchg
sarb
and
out
daa
fs
hlt
xchg
dec
pop
cwtl
aaa
lcall
inc
cli
js
fdivrp
and
daa
mov
jbe
mov
sbb
sbb
out
repz
stos
stc
inc
push
and
iret
stc
int
sub
hlt
cltd
jmp
cmp
stos
xor
or
cmpsb
mov
or
movsb
sub
out
dec
aam
sarl
ret
inc
inc
inc
fsub
out
daa
push
ficoms
aad
adcb
inc
add
outsb
fs
or
mov
xlat
hlt
push
fcmovnu
mov
mov
iret
push
mov
xchg
mov
inc
adc
popa
aaa
pop
lea
push
mov
dec
in
daa
mov
sub
mov
xor
sbb
stos
pop
sarl
jb
mov
or
data16
xor
or
pop
inc
hlt
mov
dec
jl
fnstenv
add
jnp
adc
push
test
and
imul
mov
inc
sti
jp
cmp
add
lock
jb
pop
push
add
out
mov
pop
nop
lret
stos
sub
mov
enter
shr
sbb
lret
xchg
enter
push
push
stos
or
lods
pop
sbb
pop
stc
dec
and
add
mov
test
xor
popa
pop
dec
ret
movsb
mov
sub
lret
dec
xor
subb
jecxz
aam
inc
jle
ret
cmp
sub
test
cmpsl
fmuls
ja
adc
xor
add
ja
mov
fisubl
cli
fbstp
popf
inc
or
jno
mov
pop
mov
icebp
jg
jmp
pop
das
hlt
mov
adc
sub
lods
cltd
cmp
in
je
xor
push
xchg
orl
sub
test
fnstsw
push
shl
aaa
data16
cmp
mov
out
lds
xor
push
adc
xor
sub
pusha
clc
dec
or
hlt
shlb
jmp
cmp
mov
push
inc
sbb
jb
inc
adc
test
xor
push
push
adc
pop
lea
xchg
inc
lret
mov
psrlw
cmp
movsb
xchg
repz
data16
js
rolb
mov
push
movsl
sbb
lret
iret
dec
jns
sti
jns
lods
ss
ss
lods
inc
mov
jo
mov
fidivrs
fdivrl
add
clc
std
cmc
xchg
out
inc
xchg
xchg
lds
pop
dec
xor
adc
add
fsubrs
mov
loope
imul
pusha
enter
mov
ja
test
insb
lea
adc
cmp
or
or
inc
imul
lcall
in
adc
js
sbb
lret
and
mov
xor
imul
pusha
xor
in
fisttps
clc
rcll
adcb
and
jae
testb
test
shrl
push
inc
cmpsl
lret
mull
jecxz
xchg
out
in
stos
sbb
mov
out
fstpl
push
xor
or
mov
sub
insb
and
cmp
outsb
les
pop
jno
xchg
inc
jo
fistps
add
push
icebp
push
nop
in
das
shr
out
and
mov
mov
or
inc
test
cmpsl
out
das
cmp
xchg
jp
lahf
orl
lret
adc
xor
mov
stos
pop
cmp
outsl
inc
mov
xchg
sahf
movsb
push
push
sbb
pusha
iret
loop
add
xor
pop
mov
int3
pusha
js
fidivrl
cmpsb
popf
sahf
dec
stos
clc
std
test
insb
mov
dec
jecxz
aam
cmp
jg
mov
inc
imul
adc
jmp
out
std
faddl
outsb
pusha
nop
jb
int
fwait
jo
icebp
add
pop
pop
and
mov
fbld
imul
aam
push
xor
xorl
jbe
push
incb
rcrl
ficomps
push
pop
or
and
fmul
dec
mov
ds
loopne
ret
leavew
cmp
leave
std
pusha
gs
xchg
in
sbb
dec
jo
mov
stc
insl
jle
mul
and
loope
sub
inc
push
adc
fmul
pop
test
add
jmp
or
movsb
fcoms
push
outsb
jmp
push
mov
pop
jb
shr
and
dec
vmwrite
int
xchg
xor
testl
ss
jp
adc
js
ljmp
addr16
push
and
mov
sub
mov
rorb
mov
pop
mov
xlat
push
int3
test
test
scas
test
mov
add
lods
push
icebp
ja
add
call
out
sbb
pusha
sarl
aaa
negl
mov
mov
dec
mov
mov
push
lahf
xchg
bound
outsl
repz
push
leave
movsl
pop
icebp
das
or
repz
clc
imul
lods
mov
aas
mov
jnp
sub
fstp
mov
stos
cld
xor
insb
test
fwait
jb
jp
xor
sub
cli
xor
ss
repz
insb
jmp
inc
aam
add
cmp
movsb
pop
call
dec
stos
mov
or
dec
add
pushf
push
test
cmp
movsb
cmp
sub
movsb
xchg
lahf
mov
jo
lahf
cmp
push
loop
mov
adc
test
mov
mov
jo
xor
mov
cmpsl
cmp
xchg
jle
aas
mov
movntps
inc
and
insb
sub
sbb
push
ss
xchg
adc
loope
jno
movsb
loop
sub
xchg
adc
clc
repz
and
cli
pop
jne
mov
mov
jno,pn
mulps
out
add
mov
les
or
stc
or
and
add
clc
xchg
mov
loopne
negl
js
dec
out
pop
push
ds
es
pop
and
adc
inc
mov
xchg
adc
pop
pop
xor
cmp
out
pop
ret
mov
or
and
popf
and
inc
fbld
out
cmp
fwait
in
out
shrl
push
ret
pop
inc
repz
test
in
sahf
subb
or
pop
jmp
lods
lock
sbb
adc
js
jne
arpl
xlat
mov
dec
mov
sbb
dec
ja
xor
lock
popf
inc
fs
sub
rolb
adcb
in
inc
mov
xor
cld
scas
mul
cmp
and
jecxz
jnp
popf
mov
pushf
mov
sbb
lahf
int3
mov
imul
mov
rcrl
dec
sbb
cmp
xchg
gs
arpl
xchg
and
inc
mov
add
xchg
das
inc
shl
mov
jecxz
xchg
cltd
mov
jae
aad
jns
and
orb
adc
mov
cmpsl
xchg
ja
loope
inc
cwtl
xor
push
bound
pop
incb
and
pop
in
inc
fnstenv
push
jl
jo
mov
shrb
dec
scas
aas
push
jge
cmc
mov
inc
lahf
ret
xchg
mov
mov
mov
jle
pop
or
jno
aad
test
mov
nop
cltd
scas
push
sbbl
sbb
jnp
cs
push
xor
lds
cmpsl
mov
loop
insb
clc
jb
mov
test
inc
jp
push
lds
and
ja
test
sti
inc
inc
or
sbb
mov
clc
test
fimull
xlat
shrl
leave
jg,pt
sub
push
add
sub
xor
cmp
mov
mov
rorb
mov
mov
nop
leave
adc
push
inc
mov
and
sub
xor
mov
aas
jg
and
sbb
xchg
icebp
adc
negl
inc
and
cld
jb
or
jmp
imul
stc
dec
fisttpl
inc
adc
pop
fildl
inc
and
mov
sbb
push
sbb
pop
data16
push
data16
das
ds
jae
movsl
scas
or
ja
ja
into
lock
loopne
xor
cmp
aam
push
cwtl
mov
cmp
movsl
sub
sbbb
sbbb
xchg
std
lcall
pop
in
sub
inc
pushl
bound
cltd
push
push
xor
xor
cmp
and
xchg
fdivr
xchg
mov
inc
push
je
mov
dec
ss
adc
call
or
lahf
or
outsb
ja
push
dec
mov
mov
jnp
xchg
push
jb
cmp
imul
cmpsl
jp
test
das
xchg
pop
inc
mov
hlt
mov
mov
leave
sub
push
testl
ljmp
sub
es
pushf
inc
or
jae
data16
push
cmpsb
and
pop
xor
inc
test
in
mov
xchg
add
lds
call
add
lcall
jno
push
xor
inc
inc
call
xor
ds
xor
sub
xchg
pop
pop
sti
inc
mov
push
push
push
jmp
sar
push
shl
popf
fidivl
or
shll
cmp
or
push
das
inc
push
push
xor
push
jp
pop
jnp
mov
imul
jno
jne
jne
dec
dec
mov
scas
pop
icebp
lods
in
xor
mov
mov
add
add
fldl
lods
pushf
enter
dec
ljmp
lods
mov
iret
in
inc
and
inc
stos
push
mov
and
xchg
out
lret
cmpsb
ds
mov
mov
push
stos
xchg
cs
push
xchg
push
lret
xchg
mov
insl
nop
dec
out
lret
push
adc
mov
popf
loopne
mov
inc
mov
mov
inc
cld
mov
daa
repz
xor
hlt
leave
and
xor
out
fstl
stos
mov
and
xlat
das
or
mov
jecxz
dec
adc
sahf
in
aaa
stos
inc
adc
fstl
insb
out
and
sub
inc
or
xchg
mov
popa
es
cmpsb
dec
in
sbbb
mov
sub
or
jge
sub
jnp
inc
arpl
mov
dec
leave
aas
mov
mov
add
fiaddl
jmp
xchg
sub
sbb
ja
xor
sbb
jo
push
or
push
stc
push
add
lret
mov
sbb
movsb
dec
and
mov
xchg
adc
dec
movsb
lds
stos
scas
cmp
xchg
jb
lds
xor
mov
mov
xchg
in
push
or
or
pop
push
xchg
ds
jae
aaa
dec
shl
cmc
mov
lret
mov
rorb
loopne
loope
mov
dec
sbb
cmp
and
lock
scas
add
shld
fnstenv
push
rcl
dec
ja,pn
sbb
pop
lret
or
inc
icebp
pusha
add
dec
loopne
cmp
mov
push
stos
mov
xlat
inc
leave
insb
pop
or
push
jmp
add
je
aaa
jmp
mov
mov
sbb
rolb
icebp
pop
addr16
repnz
insl
sub
dec
ret
lock
test
jg
or
pop
mov
pop
jle
mov
or
ja
clc
fnstsw
mov
ficompl
in
leave
jg
push
mov
add
mov
mov
mov
fwait
sbb
mov
sahf
out
fstpl
pusha
or
mov
or
push
ret
in
ss
pop
out
aad
fcom
out
mov
cltd
test
mov
xor
test
xor
fsubrs
dec
stc
dec
jge
sbb
jnp
adc
mov
xlat
stc
and
andl
lret
decb
xchg
es
imul
or
mov
lods
adc
sbb
loopne
inc
mov
and
pop
adc
sub
add
jns
iret
jecxz
xchg
fildl
adc
comiss
pop
pop
add
rcl
cli
or
outsb
out
adc
jle
movsl
dec
fisttpl
stos
inc
cmc
loope
jg
jmp
mov
dec
test
cli
imul
insb
adc
cmp
or
scas
rolb
cmpsl
cmp
pop
add
sbb
rcll
cmp
cli
je
xchg
lret
xchg
shll
mov
aaa
jp
xor
cmp
aam
push
js
jnp
loop
sub
sti
and
mov
cltd
popf
cltd
xlat
add
pop
push
jmp
push
int3
out
and
push
xchg
dec
leave
add
sub
loopne
mov
aam
das
dec
into
out
mov
ret
push
iret
orb
fwait
pushf
mov
mov
or
lahf
push
sbb
mov
orb
pop
fistpll
dec
adc
in
xchg
pop
sarb
dec
or
out
push
cli
xchg
dec
sbb
pop
ljmp
divl
cltd
jb
inc
xor
loope
adc
sbb
bound
fistpl
adc
repnz
adc
jmp
push
dec
js
cmpsl
adc
add
and
inc
push
aam
es
aas
sub
repnz
rclb
mov
aas
sub
or
jecxz
test
cmpsb
dec
dec
ret
sbbb
in
call
push
jg
add
inc
jp
or
mov
xchg
addl
mov
movswl
xchg
daa
pushl
test
mov
je
push
xchg
rcl
stos
sbb
mov
rcr
push
mov
mov
xchg
jb
mov
xor
lret
rclb
jecxz
scas
pop
leave
add
lock
testl
nop
hlt
shrl
lea
jle
je
inc
jl
mov
push
mov
aad
aaa
cmp
outsb
cld
popf
ja
out
ja
iret
pop
xor
adc
or
inc
insb
enter
xchg
sbb
pop
sub
inc
push
adc
testb
cld
pusha
wrmsr
loopne
mov
mov
xchg
mov
push
mov
fnstenv
inc
sub
or
mov
movsl
pop
inc
ja
loope
in
push
or
out
or
pusha
icebp
fldt
outsl
sub
shrb
sbb
inc
fsubrl
add
xor
mov
inc
mov
inc
push
inc
jns
mov
dec
or
adc
jge
cmc
push
ficoml
lret
lods
int3
les
dec
js
negb
sub
enter
js
or
aam
and
pop
add
and
hlt
push
add
popf
iret
into
xor
sub
mov
inc
mov
lea
jl
pop
ds
cwtl
les
aas
dec
sub
notl
dec
inc
and
lods
jle
sbb
mull
jl
add
inc
in
dec
and
roll
cmp
hlt
sub
das
cmpsb
dec
jno
pop
xchg
stos
call
push
pop
cwtl
push
les
or
daa
pop
mov
mov
out
mov
stc
mov
pop
dec
xchg
hlt
sbb
sbb
outsl
out
sbb
mov
pop
lret
popa
sbb
cld
inc
loopne
cmp
inc
mov
and
and
lea
xchg
adc
out
loopne
jl
xchg
inc
mov
lods
push
xchg
notl
pop
mov
push
xor
pop
mov
and
fimull
cmp
sub
push
test
repz
pop
mov
testl
filds
xchg
xchg
xchg
sub
and
sbb
dec
mov
cmp
lahf
mov
out
cmp
ret
je
mov
outsb
push
cmpsl
cwtl
lret
mov
push
sahf
inc
ffree
xor
push
add
push
out
pop
js
push
and
out
or
pop
push
je
or
rolb
insb
fs
adc
lds
push
lret
and
repnz
cmpsl
out
xchg
cmpsb
call
insb
pop
push
cmpsl
jle
and
adc
in
loope
pusha
pop
gs
aaa
mov
popa
cmp
lods
fisubl
jno
ret
dec
pop
mov
xchg
inc
dec
cmp
fs
xor
mov
pop
in
mov
adc
pop
bound
pop
jns
shll
and
sbb
imul
fdiv
xor
lret
jge
push
push
cld
lahf
mov
or
movups
insl
dec
xchg
add
dec
mov
movsl
aam
addr16
push
sub
es
mov
inc
inc
sub
mov
jp
gs
stos
aam
mov
mov
inc
mov
stos
inc
sbb
jno
out
dec
jo
faddl
mov
xchg
cmpsb
xor
xchg
into
jl
xor
cmpsl
repz
sub
negb
jge
inc
into
mov
jge
movsb
push
sub
outsb
clc
sub
movsb
popa
jnp
ja
fsubrs
iret
cmp
or
xor
jb
into
mov
ja
push
hlt
ficoml
pop
fmuls
push
scas
jecxz
add
jg
xchg
or
xor
pusha
aad
popf
inc
xor
or
fbld
lock
imulb
add
mov
pop
sbb
xor
cwtl
push
mov
adc
cmp
clc
or
pusha
stos
and
and
das
enter
clc
lret
mov
shlb
insl
pop
push
cmc
lea
iret
popa
mov
pop
mov
dec
fwait
sub
and
call
push
sbb
ret
mov
push
fidivl
popl
popa
dec
or
incb
mov
jnp
in
sub
mov
mov
stos
sbb
jbe
nop
ret
sbb
in
ret
scas
shlb
mov
fstpl
movsl
push
mov
cld
sub
push
cmp
sbb
in
enter
mov
push
pop
ret
bound
sub
jge
out
jnp
arpl
out
adc
fsts
push
push
mov
dec
inc
cmp
xchg
pop
sahf
outsl
and
pushf
mov
mov
fistl
mov
xor
test
test
insl
inc
cmp
mull
mov
mov
fists
xor
cmc
xor
loopne
das
lea
addr16
outsb
jbe
negb
cmc
repz
mov
stos
cmpsl
fnstenv
or
hlt
push
int
dec
xor
and
sub
idivb
mov
outsl
imul
cmp
sbb
cmp
push
sahf
and
sbb
mov
add
mov
xor
add
imulb
dec
or
jns
sub
fiadds
mov
add
xchg
test
inc
dec
pop
dec
xor
sbb
push
jecxz
mov
mov
push
aad
push
push
mov
push
daa
xor
test
loop
dec
aam
ljmp
test
inc
or
insl
mov
sahf
lods
dec
and
adc
xor
cmp
push
push
inc
fs
cltd
push
adc
rcrl
xchg
stc
rcll
js
cmpsl
or
xor
mov
in
into
cmp
fldcw
cmp
daa
push
imul
std
dec
js
pop
fsubr
fsubl
sahf
cwtl
leave
ret
jl
clc
dec
outsl
cmp
movb
popa
sbb
xor
xchg
lcall
call
inc
sbb
mov
sbb
xor
sbb
fwait
popa
fwait
mov
in
sub
pop
and
pusha
loope
inc
negb
lock
out
cmc
jne
push
adc
movsb
inc
sahf
mov
lret
lahf
aaa
je
pop
subl
and
mov
lods
sub
insb
cmpsb
into
inc
xor
mov
inc
sbb
add
mov
inc
gs
inc
and
roll
bound
mov
xchg
mov
dec
lahf
and
dec
out
or
mov
cli
repnz
popf
xor
lcall
mov
addb
jae
sbb
leave
inc
push
mov
imulb
fs
mov
js
pop
and
sbb
fwait
jmp
and
inc
and
or
sahf
jo
es
add
xor
scas
cltd
popf
cmpsl
and
lods
pop
jl
iret
nop
es
pop
test
dec
aaa
xor
lods
mov
sti
aas
jae,pt
filds
cltd
test
add
push
mov
jg
pop
xor
cs
lahf
sbb
inc
popa
mov
jecxz
mov
outsb
push
addr16
add
push
leave
pop
js
repnz
mov
pop
data16
inc
lahf
mov
xorl
push
insb
fistpl
inc
gs
mov
or
hlt
icebp
jg
mov
arpl
push
popf
mov
pop
negl
push
sub
push
in
mov
mov
inc
loop
xor
jl
in
mov
cmp
movsb
inc
fldl
pop
sub
dec
enter
stos
aad
xor
mov
fs
loop
sub
mov
pop
fisubrl
jnp
jb
fsts
int3
lret
fisttps
or
pop
and
mov
movsb
sub
push
repz
pop
mov
jp
jnp
pop
gs
mov
push
adc
sbb
ret
aam
in
mov
stos
out
jp
xchg
pop
aam
jp
add
sbb
ret
sbb
fadds
es
mov
shr
pop
mov
int
adc
jnp
sub
mov
mov
lods
jmp
push
sub
cmp
pop
xchg
lods
je
push
testb
loopne
loop
outsl
loope
jnp
or
mov
ret
push
cld
aad
xor
push
push
lods
int
sbbb
sahf
mov
mov
push
xchg
js
dec
shr
je
hlt
ss
jl
sub
imul
sbb
mov
sub
repz
xor
test
push
jecxz
loope
mov
fistpl
pmaxsw
dec
sbb
mov
xchg
mov
xchg
xchg
out
add
and
aaa
cmpsb
push
sbb
mov
pusha
lods
pop
or
mov
loopne
mov
or
fisubrl
nop
test
dec
inc
push
pop
mov
cmpsl
pop
ret
in
loop
js
push
jbe
shl
insb
dec
into
int3
arpl
jo
iret
mov
hlt
or
bound
addr16
jle
jnp
rcr
or
xor
out
pop
enter
mov
hlt
cmpsb
mov
cmp
scas
cmp
in
lcall
xlat
push
int3
ret
add
or
cmp
push
mov
movsl
popf
shl
jnp
xor
out
mov
aam
imull
shrl
cmpsb
into
mov
imul
lret
sbb
int
mov
xor
or
fstps
outsb
pop
inc
inc
cmpsb
outsl
push
sti
mov
push
xor
scas
jns
adc
imul
adcl
jg
jnp
cmp
fldl2t
push
movl
mov
or
dec
add
das
rol
add
xor
mov
popf
neg
jmp
mov
icebp
movsl
xlat
or
sbb
cmp
adc
inc
out
mov
out
jno
shr
daa
xchg
cmp
mov
sbb
xor
imul
pop
sbb
and
mov
mov
mov
sbbb
out
and
fistpll
pop
mov
subb
mov
mov
dec
xor
mov
inc
cwtl
arpl
pop
inc
rcrb
aaa
ja
sti
sahf
fldt
dec
sub
pushf
mov
jecxz
lea
lcall
les
bound
lock
ljmp
dec
in
stos
ds
cmp
dec
scas
fdivrs
cmpl
rorl
dec
or
insl
jbe
stos
popf
inc
pop
jo
out
test
cld
mov
lock
das
pushf
mov
sbb
mov
jns
js
dec
mov
xchg
xchg
jbe
stos
lahf
das
pop
jnp
mov
jae
push
xchg
adc
mov
add
or
xor
jns
mov
xchg
xchg
out
fs
or
jg
mov
xchg
xor
sub
cmpsb
insl
pop
cs
mov
mov
mov
add
push
xchg
fincstp
adc
jae
push
ret
inc
pop
pop
frstor
mov
pusha
aas
push
cwtl
js
out
cmpsb
pop
ret
ficomps
lahf
add
dec
movsl
stos
sarl
xorb
sub
mov
mov
je
mov
inc
outsl
in
pop
jge
sub
cmpsl
mov
cmp
pop
sub
mov
or
lret
sub
mov
xchg
mov
out
loope
in
xchg
fiaddl
adc
adc
cmpsl
dec
pop
cmpsb
mov
xor
mov
inc
mov
fildl
inc
pop
in
add
shlb
inc
adc
jp
into
jp
daa
add
jge
cmp
int3
xchg
ds
jle
dec
stos
clc
in
mov
pop
mov
roll
mov
or
xchg
cmpsl
cltd
in
stc
imul
or
and
adc
mov
inc
push
cmpsl
mov
inc
xchg
push
sahf
push
cmp
bound
iret
xlat
jno
mov
dec
push
movq
lock
push
xor
out
call
movl
xchg
jp
jbe
adc
fistpll
lahf
mov
sbb
cmp
add
popf
sbb
outsb
mov
inc
jnp
sub
or
repz
push
lahf
mov
pop
sti
arpl
jo
pushf
add
aaa
push
push
ret
push
mov
cmp
jno
lock
cwtl
ja
push
jae
jae
jbe
mov
mov
lret
out
push
mov
sahf
jg
mov
je
loopne
popa
mov
pop
jnp
dec
mov
cs
xchg
jno
imul
es
or
inc
daa
cmp
xchg
inc
jp
addr16
aad
cltd
fcoms
pop
jne
outsl
out
mov
movnti
adc
adc
aad
adc
bnd
repz
lahf
xchg
in
aaa
out
test
stos
mov
rcr
loope
jbe
imul
lods
negl
push
lcall
mov
cmpb
adc
sub
jae
lret
pop
gs
sbb
or
mov
pop
mov
cmpl
inc
sarb
fadds
cltd
or
jge
scas
leave
or
xchg
jle
mov
decl
js
lock
pop
pop
sub
call
pop
aad
dec
popf
ljmp
int
xlat
shlb
hlt
and
aam
jnp
jnp
mov
in
add
fwait
aam
pop
pushl
or
aad
pop
push
repz
or
verw
sbb
add
mov
addr16
mov
dec
dec
add
add
sub
rol
fdivrp
scas
and
xor
inc
aad
push
sbb
jmp
in
or
stos
add
shr
or
and
call
push
pop
aaa
mov
popa
adc
fsubrl
dec
leave
push
inc
push
pop
sbb
std
jns
js
mov
lahf
test
adc
mov
imul
lret
xchg
pushf
mov
or
and
and
cmc
stos
jne
jmp
int3
jae
imul
lds
orb
pop
out
xor
mov
push
jns
dec
xor
jle
jmp
or
mov
rcll
jo
test
mov
cmp
scas
stos
ja
popa
pop
inc
shr
pop
fs
sub
jns
outsl
fcmovu
fimuls
adc
jg
popa
pop
shll
sti
push
das
mov
dec
mov
popf
xchg
cmpsb
cmpsl
jns
dec
adc
fcmovbe
mov
mov
mov
add
sbb
lods
dec
cmp
mov
mov
cmp
clc
sub
hlt
cmp
and
mov
rorb
adc
bound
or
adc
fdivp
addb
imul
ljmp
cmp
mov
xor
shrb
daa
xchg
test
jg
std
aas
js
pop
push
in
neg
adc
outsl
andl
rcrb
imul
dec
clc
stos
xchg
adc
dec
aad
push
dec
inc
push
xchg
sbb
inc
mov
or
cli
insl
notb
pushf
push
pop
adc
dec
mov
xchg
mov
ja
sub
xchg
add
sub
push
enter
push
pop
mov
sub
xchg
mov
imul
xor
decl
mov
sbb
repz
lret
jmp
mov
lahf
cmp
call
dec
mov
sub
int3
insb
sub
dec
arpl
insl
dec
pop
pop
mov
mov
or
test
sarb
outsb
fcompl
push
pop
adc
addr16
sub
sbb
gs
xchg
add
sar
adcl
insl
adc
dec
loopne
rol
enter
jle
outsb
mov
jbe
mov
add
xor
cmc
xchg
fs
scas
jns
fsubr
dec
jmp
jl
push
arpl
test
stos
mov
clc
or
push
jl
dec
loopne
sub
arpl
mov
cld
pop
xor
mov
inc
or
pop
out
xor
lods
popf
popa
and
sbb
mov
movsb
or
stos
xchg
xchg
addl
fstl
inc
xchg
loopne
xlat
add
int3
or
jbe
adc
test
xchg
adc
xchg
in
cmpb
push
adc
mov
dec
cwtl
fcmovnu
sbb
or
adc
addb
and
out
cmp
jb
lock
mov
test
xor
xor
mov
insl
enter
add
fidivrl
cld
je
movsl
pop
orl
push
fwait
lret
jle
mov
iret
fidivs
mov
jns
inc
jl
mov
jecxz
ja
mov
mov
sub
mov
xor
adc
cmp
ret
mov
test
jno
sbb
add
mov
shll
cmpsl
fcmove
aad
mov
test
and
out
fiadds
jle
fsubrl
pop
adc
out
negb
jne
out
je
into
std
jbe
and
mov
orb
aas
xor
xor
and
lahf
imul
add
stos
std
scas
bnd
je
jg
sbbl
adc
ljmp
sbb
sahf
sbb
adc
xchg
and
aas
jl
mov
es
js
call
inc
subl
sub
sti
outsb
mov
xchg
insl
push
jns
jne
or
mov
cmpsl
mov
into
mov
shll
test
dec
ret
test
loopne
or
leave
or
in
xchg
xchg
mov
xor
cmp
or
mov
mov
jns
xchg
sub
js
inc
out
adc
iret
mov
fwait
incl
or
sub
inc
cmpsb
and
out
dec
incb
mov
adc
jp
xor
push
and
adc
movsb
cmpsb
jns
fistpll
and
mov
sbbb
loopne
sbbb
dec
outsb
roll
stos
cmp
in
add
sub
repz
xchg
add
jbe
or
jle
cmp
int3
sub
xor
lcall
jb
fs
into
insb
out
mov
add
xor
movsb
scas
bound
iret
adc
jge
test
aam
lods
add
mov
xchg
inc
repz
sub
push
add
popa
repnz
iret
scas
rcrl
adc
push
mov
xor
mov
fcmovnu
int
mov
std
adc
daa
int3
adc
fs
dec
cmp
xor
pop
ja
xchg
push
xor
sbb
int3
aaa
xchg
and
or
pop
inc
loopne
repnz
test
daa
xchg
dec
add
xchg
add
or
sbb
ljmp
jb
iret
popa
out
inc
in
ret
fs
notb
mov
cwtl
jne
mov
sarb
sub
xor
lcall
sbb
popa
push
fnsave
movzwl
pop
insb
push
scas
mov
push
loopne
xchg
test
xchg
mov
stos
cmp
add
jo
add
jl
fadd
lahf
mov
sbb
call
xlat
outsb
jae
jne
lret
add
in
les
and
xchg
xor
sbb
xchg
sbb
push
mov
cli
cmpsb
sbbb
mov
dec
adc
arpl
cld
and
out
dec
or
fs
adc
dec
lahf
xchg
mov
fcomi
mov
jo
ret
je
cli
or
pop
push
inc
decl
test
rol
hlt
int
shrl
push
stos
jp
rcrb
ss
pop
add
shl
xchg
xchg
push
inc
popf
js
aas
aas
adc
lret
les
leave
outsb
ljmp
and
lods
shll
cmp
sbb
pop
mov
fsts
push
pop
pop
cltd
xor
ja
jno
movsl
outsb
fsubrl
mov
fisubrl
jge
aas
scas
call
fstp
pop
icebp
loopew
mov
pop
cbtw
xchg
int
and
pushf
pop
insb
cwtl
mov
xor
xor
mov
adc
add
jo
push
adc
lar
nop
jmp
and
cmp
mov
movsb
iret
ss
shr
gs
fstps
cltd
lods
imul
lahf
bound
or
cmp
in
jno
mov
mov
and
and
mov
or
adcb
addr16
sbb
inc
or
dec
into
mov
jl
dec
ljmp
sub
inc
xchg
insl
daa
mov
xor
sbb
in
mov
adc
xor
idiv
je
fwait
nop
inc
mov
imul
push
scas
add
cmp
mov
xor
sarl
sub
stos
mov
dec
sbb
stos
das
push
in
sbb
adc
cmp
pop
xor
and
pop
les
loope
push
loopne
mov
jb
mov
std
bound
negl
lods
andb
adc
sub
cmp
and
sbb
lods
out
and
ss
in
xlat
dec
mov
xchg
add
mov
ficoms
stos
test
jg
test
sbb
pop
mov
cmovl
mov
in
push
loop
lret
mov
repnz
inc
mov
and
ficoms
and
ret
and
shll
cli
xchg
mov
pop
push
mov
aas
sub
pop
or
inc
fs
mov
or
sti
inc
sbb
gs
into
shll
cmp
lahf
xchg
dec
std
jns
mov
call
xchg
fimull
popf
sbb
es
fcoml
xor
mov
and
lahf
lea
sub
rorl
loop
daa
jb
out
adcl
rorl
push
mov
pop
call
xor
mov
sbb
movsl
std
mov
mov
loopne
ljmp
adc
int3
movsb
jge
addl
jp
sbb
pop
fadds
sbb
fadds
xchg
add
cmp
sbb
mov
in
add
insb
sub
inc
pop
ja
dec
push
cwtl
mov
xchg
pop
pusha
dec
std
sub
add
push
or
in
push
jno
std
in
mov
xchg
inc
mov
mov
mov
cmp
inc
out
scas
test
xchg
lret
sub
sbb
mov
mov
repnz
ret
xchg
xchg
push
fincstp
lods
ljmp
shlb
mov
or
jne
mov
lods
cld
ror
xchg
hlt
test
fisubs
test
cld
inc
fcmove
imul
jb
push
mov
adcl
mov
nop
fs
push
dec
xor
push
outsb
icebp
jecxz
push
sbb
mov
mov
adc
inc
or
push
mov
add
inc
cmp
loope
cmp
pop
or
push
xor
and
and
push
adc
xor
imul
popf
aad
cmp
cltd
out
daa
mov
pop
pushf
mov
push
jnp
jp
xchg
adc
lcall
call
push
rcrb
xchg
cmpl
push
fisttpll
push
ret
mov
push
ss
pop
mov
in
mov
rol
cmp
in
cmp
flds
adc
insb
mov
xor
jne
cmp
xchg
or
or
sbb
mov
cmp
push
mov
aam
js
sbb
xor
imul
cmp
adc
add
push
int3
outsl
sub
or
adcb
mov
xchg
push
mov
add
push
mov
daa
and
push
sub
in
sbb
lods
and
fmulp
lahf
xlat
jmp
mov
sbb
icebp
push
fisubl
nop
out
out
imul
insb
mov
ljmp
jno
mov
mov
inc
sti
or
sub
mov
xor
test
adc
pushf
imul
jg
mov
mov
cld
jmp
inc
jecxz
mov
and
gs
dec
nop
pop
push
sti
repnz
mov
pop
jno
adc
cli
pushf
sbb
rolb
fwait
xor
into
inc
xchg
sub
sbb
in
pop
mov
mov
xchg
ljmp
notb
je
out
loopne
loope
sbb
sbb
inc
pop
stos
lods
xlat
mov
jg
ss
xchg
jg
mov
mov
fcompl
fsubp
pop
lcall
and
adc
fmuls
mov
sub
sti
xor
fdivrl
add
adc
and
and
mov
xchg
adc
mov
fistpl
xchg
shrl
jmp
xchg
bound
xor
je
mov
adc
rcll
es
stos
mov
pop
mov
adc
sub
scas
out
pushl
xor
pop
xor
jne
inc
pop
sub
ret
push
mov
jne
sub
inc
dec
add
scas
cmpsl
mov
jo
push
xchg
js
idivb
xor
mov
add
mov
mov
sbb
lahf
xchg
cmp
dec
cmpsb
mov
fwait
scas
iret
mov
popa
xor
jp
cmpsb
add
push
das
cwtl
add
jl
cmp
and
adc
cli
rcl
xchg
mov
sahf
xchg
inc
cmp
test
sbb
mov
std
rcll
adc
mov
imul
stc
sub
popa
or
dec
mov
cli
adc
push
mov
push
pop
outsl
cmp
cmpsl
pop
cmp
rcrb
in
and
or
leave
pop
mov
xchg
push
flds
xchg
pushf
nop
and
inc
dec
int
shrl
cmp
jo
popa
cltd
adc
imull
cmp
ja
in
pop
lcall
cmp
in
orb
adc
mov
pop
iret
sub
cmp
mov
in
xorb
adc
cmp
ret
mov
fstps
push
mov
xchg
pop
xchg
aaa
mov
imul
mov
inc
test
xlat
movsl
xor
add
mov
cmpsb
dec
lods
mov
mov
push
and
pushf
pop
adc
adc
call
or
ljmp
int
push
mov
shl
sarb
push
call
jbe
jl
jne
cli
sub
imul
mov
cmp
rol
sub
jge
pop
adc
out
jge
pop
dec
rcll
jbe
pop
ja
ret
pop
mov
pop
loopne
scas
or
loope
scas
inc
adc
xor
or
xchg
pop
scas
sbb
mov
add
jb
push
fwait
mov
test
js
ljmp
and
pop
mov
dec
and
or
jae
fidivrs
clc
adc
rolb
xor
movsl
or
push
dec
push
push
into
clc
shll
xor
mov
nop
test
repz
sub
cmpsb
adc
mov
push
lds
cmp
xlat
iret
std
insb
inc
fidivl
cmp
cld
mov
imul
push
subl
sbb
and
mov
cmp
js
jnp
sbb
cs
mov
jge
rcl
xchg
mov
popa
inc
test
xor
cmp
sub
xchg
adc
pusha
inc
xchg
sbb
jne
and
push
mov
pop
int3
push
adcl
mov
aas
inc
in
nop
inc
sub
sbb
mov
sarb
cmpsl
pop
out
fsubrl
out
out
movsl
mov
pop
add
and
das
int3
push
outsb
pop
sub
bound
cmp
push
pop
test
mov
mov
popa
aad
jns
aad
into
mov
mov
cld
xchg
xchg
loope
xor
shlb
scas
and
popa
iret
jle
fcoml
xchg
cmp
scas
aas
xchg
add
pop
lcall
out
ficomps
ja
cmp
pusha
jecxz
mov
cmpsl
xlat
out
push
inc
call
out
call
ljmp
in
cmp
mov
lret
dec
icebp
push
jae
ss
adc
inc
xor
cmp
mov
aas
cmp
cmovno
inc
lret
push
scas
lock
push
or
sbbb
incl
mov
mov
inc
shll
stos
pop
es
in
inc
inc
cwtl
data16
push
jecxz
adc
into
mov
inc
push
popf
ja
cmp
inc
scas
and
mov
ficoms
test
in
sub
outsl
out
xchg
mov
repnz
jmp
mov
push
xchg
pop
mov
cmpsb
lret
mov
sbb
rclb
push
imul
jbe
dec
sbb
mov
jbe
ret
daa
cmpsl
and
mov
repz
push
mov
inc
add
xchg
mov
sbb
jae
add
mov
mov
ficoms
cmp
sbb
mov
cmpsl
ja
jmp
fwait
lcall
scas
into
cmpsb
mov
ret
icebp
std
mov
movsl
and
pop
jmp
popa
into
popf
movsl
filds
or
notl
ret
dec
fcmove
cmpsl
insl
fwait
mov
cmpsb
jno
rorl
movsb
ljmp
cmp
dec
cs
lret
cmp
nop
xor
sbb
imulb
add
adc
sub
cld
add
subl
pop
lret
or
sbb
mov
adc
loop
outsb
pop
sbb
sub
pop
jg
mov
mov
inc
das
rolb
lods
shll
jbe
into
sub
sub
pop
imul
insb
xchg
sbb
jle
fwait
mov
ret
incl
adc
adcb
mov
rolb
and
jecxz
int
rcrb
add
sub
push
wbinvd
mov
ja
scas
add
cmc
cmp
es
adc
cmp
sub
out
xchg
xchg
sbb
xlat
xchg
pop
popa
iret
pop
mov
add
sub
lret
ret
push
dec
shll
aas
or
mov
scas
cmpsb
loope
in
cltd
dec
mov
mov
ja
add
add
push
jo
dec
push
sbb
addb
mov
test
dec
and
and
shl
cmpsl
jg
dec
sub
jge
divb
push
out
movsl
pop
clc
pop
add
adc
jmp
ret
repnz
jle
out
in
or
insl
dec
jne
and
sbb
int3
mov
inc
jnp
lods
jecxz
ds
mov
rcrl
jg
cmp
out
xchg
xchg
sub
rorb
pushf
sub
movsl
and
mov
xchg
int3
inc
cmp
dec
jecxz
xchg
jge
cmp
cmpsb
and
adc
and
cmp
sbb
jp
std
jne
push
mov
mov
adc
push
shll
repz
and
adc
jg
pop
clc
inc
sub
jmp
pop
push
mov
mov
testb
xchg
pop
leave
es
subb
adc
popa
out
ret
add
mov
ss
xchg
dec
mov
dec
out
dec
lods
cs
xchg
aam
cmpsl
rcr
cmp
scas
loop
mov
mov
addr16
push
and
mov
sub
ljmp
cli
add
int
pop
mov
ja
xchg
mov
popa
xor
lsl
jmp
adc
add
mov
mov
cmp
cmpb
cmp
scas
mov
mov
test
mov
daa
xor
imul
scas
push
arpl
adc
lods
jb
mov
loopne
or
aaa
popf
das
enter
mov
xchg
sbb
sbb
add
mov
bound
dec
ret
and
bound
repz
fcmovu
aam
pop
inc
adc
loope
and
test
int
mov
outsl
add
repnz
xor
jecxz
hlt
adc
ja,pn
lret
mov
and
mov
fildll
xchg
sub
xor
jg
inc
pop
jge
ja
cmpb
movsb
aaa
shr
inc
push
arpl
les
add
mov
popa
test
mov
shrb
iret
cmp
cmpb
adc
mov
test
lods
sbb
popa
clc
test
push
cmp
aad
mov
or
and
fstl
pop
mov
inc
inc
lahf
repz
ds
call
xchg
jmp
mov
dec
rorl
inc
mov
shrb
data16
sub
les
pop
push
mulb
adc
popf
jmp
pop
mov
cmp
jbe
ljmp
mov
mov
movsl
push
sub
cs
daa
ja
jmp
ror
out
movl
rorl
adc
mov
cmp
enter
add
stos
test
mov
or
fnstsw
pop
je
push
dec
pop
jg
outsb
push
mov
int3
push
push
jg
inc
mov
pop
mov
cli
sbb
int
xor
pop
inc
out
jae
jnp
xchg
adcl
js
scas
xor
xor
xor
cld
adc
aas
jl
lret
std
out
jp
icebp
mov
sub
jne
add
icebp
int
imul
loope
stos
les
ljmp
mov
xchg
mov
add
mov
sarl
insb
mov
ljmp
mov
div
std
xchg
gs
xchg
stc
mov
into
mov
mov
repz
es
orl
imull
test
insl
andb
sti
cwtl
jle
and
cmpsl
xor
or
arpl
data16
xlat
je
lock
leave
sub
xor
movsl
lret
add
push
imul
or
jmp
mov
cmp
ss
hlt
rcl
cmp
mov
stos
mov
ljmp
xor
adc
jp
xor
cmc
popf
stos
lret
cmp
cmp
mov
adc
in
mov
jno
add
dec
int3
xchg
mov
sbbb
addr16
push
lods
les
loope
subb
or
dec
aas
mov
rol
outsb
nop
sub
xchg
jnp
fldenv
lret
cwtl
dec
rcrl
xor
loop
std
adc
dec
out
scas
xchg
enter
insl
mov
inc
or
pop
inc
jecxz
mov
fwait
icebp
inc
xchg
xlat
in
dec
stos
icebp
fs
adc
add
movsl
jmp
movsl
outsl
shlb
fisubrl
mov
add
lods
inc
xchg
imul
dec
dec
push
cmc
cs
insb
iret
ret
jmp
add
cltd
xchg
mov
addr16
stos
xchg
mov
out
cmc
mov
xor
stc
mov
jne
les
adc
out
adc
aad
cld
jae
shrl
and
iret
mov
imul
les
dec
inc
movsb
js
pop
sahf
pop
pop
mulb
ffreep
add
jb
jle
shl
test
inc
mov
and
sbb
mov
adc
fisubrs
adc
sbb
inc
jmp
pop
iret
daa
or
dec
xor
sub
xorl
push
flds
sub
pop
add
push
mov
enter
xor
pop
inc
push
ss
int3
repz
dec
xor
ficoml
inc
rclb
ds
push
inc
add
push
jecxz
iret
lods
add
mov
rcrl
subb
mov
outsl
gs
push
mov
xchg
pop
dec
dec
push
sub
push
pop
jbe
ror
cmp
pop
inc
xchg
mov
jne
cmp
cmc
add
lds
mov
bound
ljmp
prefetcht1
mov
insl
je
faddl
sbb
pushf
movsb
mov
cmp
addb
mov
decl
ljmp
in
add
popa
cmp
jo
cwtl
dec
xor
fnstsw
sub
fsubl
jno
adc
or
aas
ljmp
mov
lcall
jmp
pop
sti
xor
mov
aaa
int3
mov
shlb
daa
pop
ljmp
and
or
jp
cmp
xchg
fcomp
imul
dec
sub
or
clc
add
in
mov
xchg
pop
mov
das
lea
les
xor
repnz
mov
ficomps
jp
pop
pop
repnz
aas
ljmp
out
push
pop
xchg
cmp
mov
mov
add
popf
icebp
fisttpl
shlb
jl
and
out
test
or
dec
lea
fwait
pop
or
idivl
push
dec
cmc
lret
in
jp
dec
jp
stos
aad
sub
fistpll
ljmp
jl
in
cmp
mov
js
lcall
push
cmpsl
enter
pop
fwait
sub
jns
push
fnsave
cld
stos
es
sub
lahf
inc
fsubs
mov
outsb
lret
inc
sub
pop
push
daa
sbb
pop
push
icebp
int
sub
mov
lahf
into
aas
jae
dec
mov
clc
push
fs
mov
push
push
imul
xchg
pop
jl
and
sbb
jecxz
daa
push
les
cmp
adc
mov
lods
mov
dec
jne
cmp
sub
pushl
loopne
stos
dec
fdiv
int
mov
mov
fwait
or
dec
js
inc
mov
jno
int3
mov
mov
and
pop
jmp
pushf
push
int
mov
loop
mov
jp
xchg
ret
leave
or
repnz
pop
aas
xchg
push
hlt
imul
fwait
in
or
ljmp
jo
sbb
or
xor
mov
cmc
fucomp
and
sbb
sar
lret
lahf
rcr
imul
or
mov
jl
and
dec
push
xor
mov
cli
bound
pop
out
jb
pop
jp
jecxz
mov
or
xor
cwtl
dec
inc
mov
push
xchg
out
lahf
cld
inc
or
ljmp
shrl
lcall
pop
cmpsl
icebp
sub
sub
rclb
dec
add
out
aas
lahf
inc
test
dec
test
fsubs
push
mov
out
and
jle
mov
test
and
jns,pn
sbb
pop
mov
fadd
repz
negb
push
outsb
jb
jg
popf
lods
fcompl
sbb
cld
xor
pop
lock
dec
jle
jmp
mov
sbb
fs
push
fimull
cmpsb
mov
pop
roll
fs
pop
aaa
mov
push
push
sti
mov
sub
mov
pushf
inc
and
inc
sbb
fcmovnbe
adc
inc
test
cmpb
push
mov
lea
jp
mov
inc
pushf
dec
mov
jmp
mov
sbb
inc
jae
mov
mov
cmp
mov
stos
sub
loop
frstor
mov
outsb
lods
std
jl
inc
or
cmp
sbb
sarl
icebp
rcll
popf
out
nop
scas
out
lret
arpl
jmp
push
xor
mov
sub
jmp
mov
add
add
popf
xor
jne
jo
pop
rorb
incb
andl
sarl
out
adc
aad
ja
je
pushf
std
lahf
xchg
push
js
test
pop
jp
aaa
out
pushf
push
add
ret
loopne
pop
sub
lret
fstps
jecxz
outsb
fwait
xor
les
sbb
jle
cmp
push
into
in
fbstp
sub
cli
test
dec
xchg
bound
xchg
add
inc
pop
clc
pop
test
cmp
cmp
stos
xor
inc
cwtl
push
fcoml
shrl
out
loopew
addr16
mov
shlb
jnp
shll
sub
pop
hlt
mov
xchg
inc
jne
mov
mov
cmp
sbb
mov
out
xchg
jg
aad
dec
jae
ja
sti
imul
fidivrl
lcall
in
fsts
mov
sahf
pusha
stos
xchg
xlat
add
xchg
lret
ds
mov
sbb
sbb
out
mov
cli
movsb
pop
mov
xchg
in
test
push
mov
push
sub
into
outsl
sub
xlat
cmp
pop
fst
adc
int3
cmc
cmpsb
or
dec
hlt
int
test
mov
dec
int
mov
xor
shrl
sbb
out
xor
mov
fldl
xchg
xchg
mov
cli
std
aad
add
push
les
jns
pop
sbb
jmp
movsb
mov
les
data16
mov
leave
lock
into
xor
rorl
sub
adc
sti
test
clc
xchg
insb
xor
pop
ret
repnz
mov
jbe
into
push
and
leave
xorb
add
icebp
cld
les
jge
insb
movsl
das
mov
dec
xorb
pop
jp
adc
mov
fisttps
xchg
fcmovnu
sbb
cmc
or
or
mov
adc
sarb
add
imul
add
insb
dec
std
loope
mov
jae
lods
inc
cmp
int3
js
mov
sub
imul
inc
push
imul
inc
jmp
push
lock
mov
mov
loop
stos
xor
push
sbb
mov
or
jecxz
pop
xchg
std
hlt
shll
aam
sahf
out
cmp
lret
and
xchg
fwait
movsl
gs
push
repz
movsl
sub
xor
test
dec
outsb
dec
in
or
cmc
add
rorb
outsb
aaa
push
jmp
movsl
jg
repz
rcrl
loope
aad
dec
jl
or
fcmovnu
jecxz
mov
test
pop
sbb
mov
mov
loope
repnz
push
hlt
xor
mov
mov
add
xor
push
aad
adc
add
lret
pop
into
ret
mov
or
push
jno
adc
mov
rorb
xlat
jne
xor
aad
cmpl
jnp
lds
sbb
jg
pop
imul
cmc
cltd
mov
cmp
dec
mov
pop
mov
shr
add
in
inc
xor
add
inc
repz
jno
scas
adc
in
jl
pop
lret
cli
dec
stc
dec
ret
les
mov
jl
jg
fs
jno
push
pushf
mov
aas
pop
into
mov
cmp
add
sbb
idiv
scas
xchg
ret
or
and
shr
stc
lcall
pusha
inc
repnz
sub
js
mov
notl
and
inc
fidivrs
nop
mov
or
aad
roll
mov
scas
je
adc
sbbb
pop
sti
xor
lret
xchg
mov
into
xor
pop
lock
aaa
sbb
or
xor
fucomi
jno
xchg
xor
xor
call
sbb
addr16
sub
scas
push
enter
mov
lret
lahf
sti
ss
inc
pop
xlat
in
inc
xlat
mov
mov
adc
imul
mov
testl
stos
aaa
ret
pop
dec
pusha
dec
add
cli
mov
mov
push
inc
shr
aam
or
js
push
pop
jbe
push
stos
cld
sahf
mov
jp
mov
cld
mov
or
es
xor
jecxz
icebp
pusha
sub
test
mov
sbb
scas
bound
sbb
in
or
push
mov
cmc
xchg
xchg
inc
cmc
insl
in
sbb
ss
fwait
adc
xchg
push
arpl
or
inc
bound
push
arpl
psubusw
mov
push
jp
lahf
mov
fisubl
xor
call
fcomps
jb
mov
and
mov
int3
push
lea
enter
and
movsb
divps
xor
xor
std
je
leave
and
inc
fcomp
xchg
lea
in
sub
or
sarl
jg
xor
jg
pop
ss
arpl
xor
inc
sub
pop
call
imul
xchg
mov
mov
es
pop
sbb
push
jno
popa
or
outsb
outsl
js
popa
clc
rcrb
mov
jo
stc
jp
pop
fstl
mov
mov
cli
lods
loopne
sbb
jo
lcall
stos
pop
add
sbb
xchg
pusha
outsl
xor
mov
and
fwait
xchg
mov
mov
decb
xchg
jo
sbb
xchg
idivb
lock
cld
inc
fwait
fs
int3
mov
adc
lods
cmp
jge
cmp
ss
jnp
mov
mov
rcl
push
ret
sbb
sbb
fists
jne
mov
stc
mov
outsl
sbb
mov
push
sub
std
movsb
dec
jbe
and
rcr
cmp
cmp
inc
out
arpl
dec
push
dec
mov
sbb
stos
xor
push
pop
js
iret
jnp
sbb
push
shll
or
jmp
mov
add
and
jns
daa
lcall
xorl
adc
imul
das
mov
dec
es
inc
xchg
push
dec
sarb
xor
sub
aad
loop
and
aad
xchg
mov
or
jo
lock
mov
dec
call
add
sbb
roll
bound
mov
addb
cmp
inc
cmp
incb
clc
or
ss
push
push
jg
jbe
or
shlb
cmp
pop
shrl
xor
stc
pop
insb
cs
mov
mov
scas
iret
lret
mov
lods
std
sbb
shl
mov
mov
pop
pop
lds
jmp
mov
test
loopne
test
lods
repnz
pusha
jne
mov
dec
jae
lock
add
mov
insb
jnp
jge
iret
xchg
inc
call
push
add
fiaddl
clc
push
ret
or
loop
and
jmp
push
pop
test
fimull
sbb
adc
mov
or
jo
cwtl
pusha
jp
mov
pop
popl
cld
fs
das
ret
push
lock
sbbb
push
xor
lock
fisttpl
addb
push
xlat
ds
xchg
and
jns
rolb
cli
inc
movb
push
bound
push
xor
xchg
nop
test
movsb
lea
int3
in
cmpsb
fs
cmp
into
lods
das
faddp
mov
sbbb
mov
ja
xor
or
sti
imul
sahf
jbe
jne
ret
cwtl
sarl
pop
pop
std
or
or
lret
cmp
jg
mov
mov
add
ja
mov
jno
setne
adc
add
scas
mov
aaa
aaa
mov
mov
and
ret
lret
iret
cmp
sbb
into
pop
jae
imul
loopne
or
stos
pop
test
loopne
push
jg
mov
dec
push
or
add
movl
pop
aas
mov
pusha
or
inc
add
xor
cmp
out
fnstenv
mov
scas
add
outsl
scas
mov
xor
push
push
push
in
lods
aaa
cwtl
outsl
mov
pminub
loope
xchg
outsl
push
adc
and
outsb
cmp
ljmp
test
inc
mov
pop
xchg
mov
lods
mov
pop
jmp
shlb
fwait
sbb
rorb
sub
ret
xchg
out
sub
xchg
xchg
into
movsb
inc
mov
sarb
call
jp
cmp
outsl
ljmp
outsl
inc
rcrl
out
out
aad
adc
adc
fistps
clc
adc
mov
fbstp
insb
xchg
pop
lds
push
push
sarb
sub
adc
push
sbb
mov
pop
test
xchg
outsl
mull
sub
pop
add
inc
mov
mov
mov
xor
lcall
cltd
push
dec
dec
outsl
push
lret
dec
cwtl
lahf
add
lds
inc
pop
cmpsl
lods
lcall
into
fldcw
arpl
pop
push
xor
addl
push
mov
lahf
jl
fisttpll
stos
aad
inc
test
mov
add
pushf
cmp
xchg
pop
push
or
push
mov
test
jae
pop
rcl
xchg
inc
in
inc
test
shlb
mov
add
addb
addl
mov
cmpsb
adc
addr16
jmp
int
jbe
jae
sub
jecxz
ret
rorb
sahf
inc
fs
jb
movsb
cmp
enter
mov
int3
ret
push
fnstcw
push
aas
fsubrp
inc
test
inc
testb
dec
cwtl
fwait
movsb
xchg
ss
stos
xchg
addb
cmp
lret
mov
adc
arpl
nop
sarl
rcr
push
mov
lret
cmc
fdivr
or
cmpsl
pop
fnstcw
push
push
mov
sub
pop
shlb
nop
ret
and
dec
xchg
cmp
push
fmull
push
jno
out
insb
shll
repz
add
mov
fistps
cmp
fimuls
push
sbb
pop
cltd
rcrl
out
aam
aas
sti
out
jle
lds
pop
sub
sbb
adc
push
mov
add
inc
js
shlb
adc
stos
add
mov
std
xchg
sub
gs
push
or
hlt
fisubs
mov
fwait
sub
adc
repnz
ljmp
cmp
lcall
inc
cmpsl
mov
aad
out
or
push
fdiv
mov
cmp
add
sub
mov
cwtl
sarl
lods
pop
aaa
lea
in
sahf
ljmp
insl
pop
push
xchg
cltd
inc
les
scas
sub
rorb
pop
pop
sub
jle
adc
ja
addb
sub
dec
ljmp
pusha
fidivl
dec
xor
lods
mov
xlat
rcll
push
es
popf
xor
cld
mov
sub
in
daa
mov
call
imul
sub
test
sub
faddl
iret
xchg
adc
cld
les
jo
push
mov
cmp
addl
int
dec
jmp
shlb
fdivrs
push
in
flds
pop
test
iret
xchg
inc
and
cmp
pop
xchg
iret
stc
adc
mov
pop
lock
xor
test
mov
arpl
cmc
repnz
mov
xor
sbb
repnz
fcoms
xchg
xchg
jnp
mov
jne
mov
mov
outsb
xor
sub
xor
sahf
insb
add
cmpsl
aaa
push
cmpsb
jle
scas
xchg
jp
push
aaa
inc
dec
dec
push
inc
cmp
inc
sub
lods
and
jg
inc
cmpsl
les
lock
fdiv
rcrb
or
les
sub
inc
movsl
jecxz
les
cmp
sub
inc
or
sub
pop
hlt
adc
in
inc
mov
lea
xor
pushf
mov
lods
outsl
ljmp
aas
out
mov
pop
adc
aam
pop
jmp
imul
stos
mov
inc
mov
repnz
arpl
into
movsb
ja
enter
or
cmp
test
roll
cmova
pop
test
sbb
in
push
mov
repnz
icebp
mov
mov
out
jp
ret
sub
mov
in
sbb
test
bound
inc
xchg
xchg
in
cmp
add
out
mov
xchg
scas
aaa
cmp
jnp
shlb
hlt
shlb
mov
xchg
enter
out
or
jae
nop
sub
jmp
push
or
mov
ds
shr
push
repnz
out
lcall
imul
mov
fcomps
loope
insb
or
fcomps
mov
test
lcall
adc
jle
adc
mov
lahf
pop
daa
ss
xchg
jbe
push
mov
cmp
mov
pop
es
cmp
ret
lahf
jne
adc
dec
and
ss
aas
xchg
jbe
popa
push
les
mov
jp
add
push
mov
lcall
shll
out
das
xacquire
jle
cmp
das
jbe
fistps
mov
arpl
mov
sub
bound
mov
fadd
xor
aas
loopne
pop
sub
mov
jo
imulb
inc
out
pop
jbe
shl
mov
and
push
adc
jge
and
pushf
mov
shl
out
cltd
into
in
jns
lahf
daa
or
ret
xlat
cwtl
add
push
mov
or
pop
lock
xchg
xchg
out
dec
and
and
push
std
dec
fs
lods
lcall
iret
cmpsl
fwait
inc
sub
mov
fxch
jg
lock
addb
dec
test
mov
cmp
mov
addb
dec
jle
ret
fdiv
int3
sti
in
push
xchg
push
das
das
cmpsb
std
mov
dec
xor
lcall
or
sbb
mov
imul
and
ja
xchg
sbb
lret
int3
inc
das
mov
daa
mov
sbb
movl
std
dec
adc
push
mov
push
sub
jae
pop
lods
clc
in
ficomps
movsb
mov
les
test
stc
rclb
mov
cmp
jo
xchg
mov
mov
loope
out
scas
les
insb
mov
cmc
sbb
push
fs
or
loop
mov
pop
push
mov
push
fnstcw
loop
or
repnz
jmp
ret
mov
xchg
fadd
imul
jp
mov
mov
fists
out
push
leave
scas
es
adc
loopne
push
dec
jge
inc
sub
add
fsubs
and
adc
insl
shlb
lret
gs
push
ja
pushf
and
mov
add
push
ss
mov
enter
test
test
cltd
cmp
pop
inc
jnp
sub
rcrb
les
mov
sti
mov
insb
addr16
mov
adc
fldenv
movsl
roll
jge
and
mov
dec
lahf
mov
aam
test
nop
pop
or
rorl
out
xor
js
xchg
xor
stos
jecxz
lret
or
lret
fidivrs
out
jno
aad
nop
sub
rcrb
jecxz
pop
dec
mov
orl
mov
mov
outsl
adcb
or
jb
pop
les
fs
sarb
cs
xor
mov
jb
loope
add
xor
add
cmp
push
xchg
into
jnp
dec
outsb
test
bound
call
fidivrs
nop
mov
inc
iret
pop
cmpb
sbb
pop
add
out
loop
out
cmpsl
cmc
pusha
in
pop
push
mov
hlt
adc
jecxz
inc
lahf
cld
mov
push
fdivrp
mov
sbbb
jb
pop
in
inc
shll
sbb
sbb
pushf
cmp
mov
jo
xchg
stos
out
in
lods
test
lds
test
and
clc
jne
sub
divb
test
scas
enter
sub
sarl
inc
inc
jns
jns
ret
inc
and
fldcw
cmc
push
shll
das
fsubl
xchg
dec
or
adc
inc
xor
imul
xchg
add
mov
movsl
out
mov
mov
xor
mov
adc
mov
les
inc
gs
mov
lahf
push
or
jbe
nop
sbb
es
data16
cli
in
push
cmpsb
and
adc
cmp
sub
sub
movsb
and
sub
dec
arpl
xor
lcall
cltd
mov
nop
and
loope
xchg
les
fisubrs
fdiv
mov
lcall
cli
idiv
push
out
das
stc
mov
xor
and
pusha
outsb
inc
dec
or
aas
aaa
xlat
sbb
mov
pop
je
ret
sbb
movsl
out
mov
sbb
xchg
sbb
loopne
mov
sub
sub
xchg
mov
inc
or
add
in
clc
ljmp
push
push
mov
aaa
cmp
adc
jl
jg
xorl
in
cmp
js
movsb
adc
das
das
jne
sub
sub
fsubs
push
pop
sub
jno
mov
lods
xchg
add
mov
adcl
mov
pop
stos
lcall
mov
out
adc
sub
jae
stos
xlat
dec
stos
inc
mov
adc
pop
push
mov
cli
test
shlb
cltd
lock
mov
adc
data16
ds
clc
sub
add
loop
jg
xchg
sub
gs
dec
ljmp
xchg
and
dec
mov
cli
icebp
das
shl
imul
lods
adc
sub
xchg
cwtl
mov
loope
pop
jns
sbb
call
adc
or
cs
xorb
inc
cmp
leave
aaa
mov
mov
cmp
jle
mov
shll
or
or
mov
stos
or
and
loope
lods
jo
adc
push
fidivrl
mov
cmp
mov
and
mov
mov
add
test
sbb
mov
jno
das
cmp
xor
sub
fs
mov
add
cmc
dec
mov
nop
mov
pop
sub
scas
mov
sarl
mov
jno
out
scas
push
or
push
mov
cmp
sub
push
fwait
shrl
or
inc
cmp
cmp
xor
lret
mov
push
iret
xchg
movsb
add
movsb
test
jbe
test
mov
stos
mov
pushf
popa
sbb
mov
pop
out
inc
pop
push
mov
jne
dec
popa
push
cmpsb
ret
mov
mov
dec
ds
ret
dec
mov
cli
loop
cmp
xor
imul
xchg
iret
sbb
and
int
jg
inc
leave
bound
js
pusha
sbb
mov
jle
aaa
pop
inc
dec
inc
test
mov
imulb
fnstenv
scas
cmp
mov
cmpsb
add
call
and
adc
mov
mov
adc
sub
popf
sarl
aas
call
lea
loope
push
repz
and
cld
sbb
jmp
or
pushf
mov
daa
test
pop
out
inc
stos
filds
push
shl
cmpsb
mov
ljmp
or
ja
cmp
dec
test
jle
mov
fstps
fdivs
mov
pop
out
add
and
sti
push
sbb
test
pop
stc
pop
lods
inc
or
imul
pop
fwait
xchg
imul
adc
int
ficoml
movsb
jmp
ret
xchg
out
sti
negl
pop
xorb
push
pushf
mov
leave
cmp
mov
dec
jge
rcrb
leave
sub
jne
stos
test
jo
jne
in
test
insb
push
inc
xor
lods
imul
sub
cmp
or
aas
mov
faddl
or
mov
pop
icebp
jmp
cmpsl
cmpb
lock
jmp
int3
int
inc
sub
in
cmovs
addr16
aad
xor
adc
or
jo
fs
sub
ficoml
mov
shll
js
stos
and
pop
xchg
popf
sbb
sahf
mov
or
add
jo
cmp
lret
jo
pop
in
push
pop
mov
dec
das
testb
inc
aas
divl
jne
jnp
cmp
filds
stc
gs
mov
scas
push
data16
or
movsb
xchg
xor
fwait
sti
aaa
sub
movsb
movsb
mov
loope
movsb
mov
lds
subl
nop
sbb
ret
xor
mov
outsl
mov
jg
push
mov
xchg
mov
pop
sar
mov
ja
sub
cmpsl
pop
stc
lds
inc
xor
insl
xor
sub
dec
icebp
loopne
and
mov
jae
sahf
das
sbb
and
pop
sub
sbb
adc
and
jb
std
lret
into
inc
inc
stos
nop
iret
jnp
adc
mov
loopne
jno
in
push
dec
fldenv
and
xlat
test
gs
and
mov
or
dec
inc
mov
xchg
scas
js
sub
sbb
popa
cmpb
dec
pusha
loop
mov
push
jae
or
jl
inc
pop
sbbl
add
arpl
int3
sbb
jge
es
jae
js
sbb
mov
jno
aad
or
stc
inc
aaa
sbb
push
into
fildll
sub
cmpsb
inc
roll
dec
xchg
dec
in
cltd
mov
add
scas
filds
jmp
icebp
add
mov
inc
test
test
xchg
xchg
pop
testb
ja
fdivrs
mov
jle
lahf
mov
aam
cmp
dec
xor
sub
and
xchg
mov
fwait
push
push
mulb
jg
xchg
pop
xor
test
push
scas
push
sub
cmp
cmp
add
xchg
loopne
loop
mov
aaa
addr16
andl
imul
sub
adc
or
fimuls
xchg
jmp
int3
inc
push
call
xor
push
mov
push
dec
test
lahf
mov
fnsave
sub
mov
dec
sbb
cmp
adc
test
out
outsl
mov
ds
pop
out
loope
enter
mov
outsb
cmp
dec
mov
dec
adc
and
mov
pop
cmp
jo
pop
xchg
adc
add
jae
mov
sbb
lret
mov
xor
add
clc
cmp
xchg
dec
mov
cmp
push
mov
sub
in
outsl
negl
dec
adc
movsb
lea
push
push
inc
add
xor
adc
xchg
int3
lret
xchg
sub
jne
adc
int3
adc
cmc
xchg
bound
loopne
bound
sub
sbb
or
les
add
dec
mov
out
jno
out
mov
xor
or
ret
out
outsb
jo
testb
loop,pn
dec
sub
movsl
xchg
mov
out
cltd
in
ficomps
mov
inc
cmp
pop
xchg
int
mov
subl
fisttps
pop
add
test
pop
xchg
inc
testb
mov
fucomp
inc
dec
shll
sbb
add
xor
lret
push
dec
shr
les
popl
cmpsb
popf
cmpl
jle
cld
in
push
sub
pushf
imul
testb
inc
fsubrp
add
int3
jmp
cmpsb
mov
add
xchg
cli
mov
mov
sbb
test
jle
cmpsb
jae
addl
jnp,pt
xchg
push
idivl
push
lcall
pusha
mov
push
mov
in
mov
cmpb
sub
addr16
mov
aaa
rorb
loopne
jo
aam
pop
mov
ret
fldl
imul
jnp
lcall
iret
test
lret
lcall
adc
mov
add
mov
popa
xchg
cmpsl
jmp
sbb
sbb
pusha
pop
push
dec
das
jecxz
imul
sbb
mov
sahf
in
loope
es
jle
ljmp
jle
sbb
jnp
fsub
pop
faddl
in
in
or
mov
in
mov
imul
lret
push
into
jo
and
add
pop
mov
and
mov
cld
push
and
das
gs
cmp
mov
mov
sbb
mov
scas
pop
push
pusha
repz
cmp
icebp
xchg
cli
or
outsl
pop
filds
test
cmp
dec
ljmp
mov
loope
sub
cmp
or
pop
mov
sub
ja
xchg
test
js
gs
xor
dec
int3
aas
hlt
fisubrl
jecxz
outsb
out
mov
mov
push
dec
lds
insb
lret
sbb
mov
cld
mov
ss
aas
call
jns
scas
mov
mov
adc
and
push
icebp
pop
push
jne
loop
sahf
add
call
addr16
lahf
mov
mov
test
out
addr16
sbb
cli
mov
mov
lea
ja
psubusb
push
sti
test
inc
mov
dec
jl
insl
cmpsb
test
aad
jne
je
xchg
push
cmp
pushf
test
dec
ret
mov
out
sub
mov
xor
sbb
sti
push
lods
mov
repnz
jmp
lea
and
in
mov
xchg
loope
out
imul
fisubl
jnp
fcomps
and
hlt
lods
testl
aam
daa
mov
out
mov
jae
stos
shlb
lret
jmp
push
test
lea
and
jmp
loop
call
xchg
cmp
repnz
subb
sub
adc
fs
mov
ret
inc
leave
inc
fbstp
cmp
lods
jae
xchg
js
out
adc
mov
arpl
enter
rcrb
xchg
out
ret
inc
mov
adc
or
jge
cld
add
dec
inc
push
and
test
scas
inc
enter
inc
push
pop
or
outsl
aad
in
popf
and
push
dec
add
adc
fidivl
xchg
out
fildll
cmp
scas
mov
xchg
cmpsb
jae
push
mov
hlt
cmp
lock
imul
outsl
repz
pop
jae
mov
and
leave
ret
in
ja
fisubl
lret
sbb
pop
loope
popa
pcmpeqb
xlat
sbb
jo
sub
lcall
push
arpl
xchg
xchg
test
sbb
sub
aam
jb
daa
icebp
stos
cmp
test
dec
dec
xchg
incl
add
loop
push
push
in
mov
test
icebp
xor
rcrb
dec
pop
push
inc
hlt
push
dec
out
lahf
jle
pop
fsubr
cs
les
cmp
lock
push
dec
inc
push
mov
gs
aam
popf
sahf
ja
xchg
inc
int3
mov
xor
les
sbb
outsb
sub
je
jns
jg
jne
xchg
daa
mov
iret
push
iret
mov
jge
daa
jbe
cmp
dec
xchg
cltd
sbb
jne
push
jo
inc
mov
repz
mov
sub
or
sub
push
mov
push
imul
outsb
push
rcrl
adc
test
and
or
sub
pavgw
enter
sarb
popa
xchg
sub
aam
inc
adc
in
push
addr16
add
xor
cltd
out
push
out
loope
adc
loopne
sbb
adcl
std
iret
jmp
loopne
inc
inc
scas
cld
dec
mov
xchg
mov
sbb
add
dec
dec
adc
ja
xchg
mov
outsl
fcmovu
inc
fdivs
inc
add
das
xchg
or
xor
sbb
xchg
add
scas
push
es
pop
xor
xor
loop
cmp
sub
lcall
push
popa
fdivp
or
les
ljmp
mov
sbb
daa
pop
test
orb
aaa
mov
cmp
sbb
insl
je
adc
test
roll
or
mov
popa
mov
xor
andl
rorb
push
cmc
push
sub
test
mov
pop
sti
inc
leave
imul
aas
mov
jl
int
dec
xor
dec
or
or
repnz
sub
and
jae
test
dec
loop
sbb
out
xchg
test
or
in
js
sub
in
pop
jecxz
sub
out
insb
add
push
pop
mov
pop
sbb
mov
out
inc
inc
repz
push
fimull
in
mov
mov
mov
adc
cld
ret
addr16
mov
mov
daa
pop
fisubl
cmp
xchg
icebp
mov
push
gs
je
add
sub
or
pushf
shl
shlb
int
ret
rclb
push
gs
enter
inc
pop
dec
jbe
jp
sbb
lods
loopne
out
aas
fsub
scas
in
lahf
lret
lds
jge
jp
add
out
pop
inc
xor
in
xchg
inc
xchg
mov
or
mov
bound
js
daa
lahf
les
stos
jne
iret
push
les
mov
repz
dec
cmp
rcrb
jno
push
mov
push
fs
push
mov
hlt
dec
lock
adc
dec
inc
adc
out
testb
out
into
adcl
sub
sbb
mov
mov
in
mov
bound
mov
stos
enter
and
pop
and
push
andl
test
mov
jp
mov
out
push
lcall
and
lds
xor
cld
dec
add
adc
pop
js
jecxz
js
or
mov
out
enter
jmp
call
and
lret
and
inc
loop
cltd
int
or
dec
or
dec
inc
ds
stos
das
add
adc
imul
imul
push
and
jb
loopne
mov
cmpsb
fwait
sbb
fwait
cwtl
aaa
inc
or
call
addl
roll
outsb
xchg
shll
cmpl
sti
jmp
and
sbb
das
sub
sbb
pop
jno
push
lock
dec
mov
ljmp
imul
adc
aad
sahf
inc
leave
movhps
pop
mov
lds
jp
jp
test
gs
push
into
push
popa
mov
push
ficoml
mov
xlat
xor
loopne
movsl
cmc
jb
cli
rcl
xchg
or
and
sub
pop
rclb
sahf
sub
mov
xchg
repz
in
xor
push
xchg
sti
mov
cmp
in
and
and
adc
inc
sbb
pop
stos
ret
dec
js
in
sbb
mov
jmp
pop
or
mov
ror
dec
dec
sarb
es
lret
cmpsb
outsb
sub
xor
dec
jg
push
stc
and
adc
rcrb
xchg
out
jno
decl
rcrb
add
addl
mov
stc
adc
addl
jg
sub
lcall
in
pusha
test
lcall
test
dec
mov
pop
inc
mov
loop
fwait
adc
cmpsb
mov
sbb
mov
jecxz
ds
mov
inc
fst
ja
push
cmpsb
push
sub
shrb
cmp
or
cmp
jb
or
cld
mov
mov
in
adc
sbb
adc
pop
int3
imul
cmc
adc
inc
pop
je
lret
xor
in
enter
mov
stos
es
sub
push
loope
test
scas
stos
inc
iret
repnz
scas
cli
or
jl
sbb
inc
mov
gs
push
jl
sbb
and
add
adc
cwtl
les
testb
push
xor
mov
fsubs
sub
inc
mov
ja
add
cmp
adc
inc
push
xchg
int
cmpsl
dec
bts
addl
in
xlat
outsl
push
sbb
push
lahf
mov
fisttpl
nop
mov
push
mov
popa
mov
shlb
es
lock
int
aaa
push
push
fsub
pop
add
lods
or
mov
cmp
xor
mov
pushf
fidivs
push
sub
test
jno
lods
mov
mov
std
pop
adc
inc
test
lods
gs
add
out
mov
popf
push
lcall
fistpll
ss
jmp
mov
mov
mov
adc
mov
xchg
int3
and
lea
add
mov
adc
fwait
mov
arpl
push
fs
aas
notl
aaa
stos
jns
ret
jnp
add
daa
sbb
and
and
insb
fldl
fisubs
inc
jg
pop
rcrb
sbb
pop
sub
pop
dec
jno
push
xchg
xchg
sub
outsb
xchg
loopne
jge
lahf
out
in
pop
pop
adc
rcll
iret
leave
inc
pop
test
shrl
add
mov
pop
sub
mov
je
out
push
daa
jp
loopne
and
mov
or
jne
arpl
fwait
pop
cwtl
test
imul
pop
adc
jb
lahf
sub
fs
or
dec
jb
out
push
aaa
jbe
cmp
aam
movsb
sahf
gs
pop
hlt
xor
adc
cwtl
add
jmp
les
jb
or
mov
fwait
push
fstpt
or
xor
fs
insb
outsl
jno
pop
hlt
jcxz
fwait
add
jnp
inc
mov
popa
fcoms
jge
sub
daa
loopne
enter
lret
jno
int3
inc
ss
or
jo
imul
sub
gs
adc
or
fcmovnb
fs
adc
imul
imul
cmp
popf
lahf
movsl
pop
ja
jmp
dec
lahf
jmp
push
ss
jns
sbb
jnp
in
dec
mov
jno
or
shrl
inc
mov
add
popa
pop
jb
push
mov
pop
mov
ja
xchg
jge
dec
pop
xchg
push
scas
call
jmp
sbb
int3
cmp
imul
mov
mov
ljmp
adc
xchg
jnp
outsb
add
inc
pop
sbb
sbb
gs
and
push
push
in
push
cld
mov
xchg
mov
inc
mov
add
andb
mov
out
push
push
into
fs
lods
xchg
sbb
mov
sub
or
stc
fldt
orl
loopne
xor
lods
iret
mov
cmp
lcall
dec
clc
lret
or
shrl
test
pop
xchg
push
cmp
dec
add
test
mov
mov
jmp
push
lcall
orl
dec
xor
sbb
cmp
shll
and
push
mov
push
fwait
cmpsl
push
sahf
push
pusha
mov
xchg
dec
jno
aas
fstpl
sub
mov
push
pop
out
mov
jl
scas
xchg
xor
shll
mov
push
sbb
movsb
shl
sbbl
xor
dec
pop
cmpsb
insl
fdivr
lock
push
push
imul
sbb
pop
ret
fisttps
mov
adcb
jns
mov
or
adc
mov
and
jns
add
jg
and
insb
mov
enter
or
nop
daa
jnp
adc
adc
orb
jae
test
mov
push
iret
arpl
out
adc
inc
cs
mov
dec
imulb
sbb
jae
test
xor
movsb
push
dec
nop
call
mov
jae
int
xchg
dec
not
inc
aas
add
shrl
vfmaddsub213pd
arpl
mov
out
cmp
jmp
jo
sbb
imul
stos
mov
int
cli
rorb
das
sbb
jae
xchg
ficoml
adc
das
loopne
lods
lea
adc
fdiv
dec
cmp
hlt
lock
or
inc
jg
popa
mov
push
lea
lods
lods
daa
mov
popa
inc
xchg
push
mov
sub
or
adc
cld
cltd
mov
in
xor
inc
add
int
xchg
add
test
iret
xchg
dec
int3
int
movsl
mov
lret
pusha
mov
js
rsqrtps
push
adc
js
mov
movsb
popa
ljmp
push
push
loop
scas
adc
cmp
or
les
and
stos
addr16
pop
in
mov
addb
stc
or
sub
loope
lea
imul
inc
in
std
imul
pop
lods
aaa
jne
pop
dec
rol
jl
dec
sbb
xor
mov
pop
pusha
ja
cwtl
fstl
test
xchg
xchg
push
stos
push
sub
aad
cmp
inc
mov
cmp
dec
sbb
das
lcall
decb
popf
fmull
fwait
inc
xchg
mov
mov
scas
sbb
add
xchg
mov
dec
inc
in
jns
xchg
pop
and
in
pop
xchg
aam
and
and
jns
outsl
loope
or
pop
leave
add
xchg
outsb
ds
mov
push
out
cmp
cmpsl
test
aas
mov
mov
les
lods
mov
jl
shll
lret
mov
loopne
mov
stc
mov
insl
cmpsl
xor
pop
jno
mov
push
scas
test
pop
int3
sub
movsl
cmp
sti
movsb
xlat
cmp
cli
sub
xcrypt-ctr
cmpsl
lcall
out
sbb
in
push
sub
pop
xchg
mov
popf
pop
in
pop
mov
mov
cmp
mul
pop
in
call
or
and
outsb
mov
fcmove
pmaxsw
lret
push
icebp
jmp
mov
push
mov
inc
repnz
loop
popf
adc
fmull
adc
rcll
mov
mov
decb
and
mov
mov
icebp
popf
push
cmc
dec
sub
ljmp
sub
pop
test
lea
fs
mov
inc
cmp
cld
jp
inc
and
ljmp
inc
into
dec
rcrl
push
fsub
out
mov
push
mov
popa
rolb
mov
xor
lods
int
add
popl
or
and
in
xchg
sbb
inc
jb
rol
in
cmc
jg
xchg
cmp
out
inc
lret
xor
xchg
imul
jl
mov
sbb
inc
lret
dec
push
sar
push
jecxz
cmp
sbb
cmpsb
mov
pop
lods
outsb
insl
fildll
xchg
aas
dec
adc
mov
insb
jb
adc
cmpsb
mov
cmp
test
adc
stos
leave
aaa
inc
or
cmp
add
out
jne
out
and
out
loope
imul
dec
add
pop
push
inc
test
loope
gs
sub
pop
adc
push
cmp
or
xchg
cmp
out
or
stc
sbb
aaa
mov
cmp
fdivs
lock
sbb
jns
xchg
pop
adc
mov
rcl
cmp
mov
lret
pop
mov
cmp
pop
push
lods
pop
mov
push
mov
push
aad
jae
mov
enter
mov
mov
rsm
adc
jnp
cmp
cmc
or
or
fwait
jno
fdivrl
cmp
jmp
dec
cmp
imul
sbb
sub
pop
loopne
lahf
fsubs
xchg
clc
js
xchg
test
idivl
int
mov
mov
and
dec
mov
pop
sub
jecxz
std
and
jecxz
and
ljmp
jg
addb
jnp
rol
jp
inc
inc
sbb
pop
mov
arpl
sub
in
push
sub
shll
and
addr16
push
xchg
insl
rcrb
and
mov
sbb
xchg
mov
xor
add
xchg
clc
and
add
inc
jb
mov
pop
fwait
test
jbe
out
into
mov
mov
cmp
adc
cs
test
in
sub
repz
out
repz
xchg
sbb
and
xchg
or
mov
repnz
jne
je
cld
adc
adc
out
pop
out
xchg
js
inc
mov
and
stc
jnp
jns
in
pusha
mov
aam
adc
add
lcall
cs
outsl
movsb
clc
xchg
xlat
ror
cmp
mov
pop
mov
rcrb
int3
push
mov
fidivrl
xor
adc
enter
sbb
jbe
pop
leave
xlat
dec
sub
sti
add
lock
loope
mov
or
cld
xor
arpl
and
sbb
repz
pop
cltd
push
icebp
push
sub
jae
push
loopne
mov
int3
mov
mov
mul
out
push
and
insb
movsl
mov
pushf
or
push
pop
lods
orl
aas
pushf
adc
ret
mulb
int3
lock
push
jp
add
mov
adc
ficomps
xchg
lahf
push
sub
push
mov
out
add
jg
insl
push
and
jne
sub
aas
mov
sub
mov
cltd
add
ljmp
ja
push
andl
xchg
pop
sbb
xchg
xorb
fsubrl
xlat
sarl
outsb
push
add
pop
xor
inc
adc
iret
adcb
jae
in
inc
mov
fists
mov
pop
pusha
inc
movsl
cmp
adc
pop
add
push
cltd
xor
out
pop
div
cmpl
xor
daa
adc
les
xor
cltd
adcl
xchg
push
xchg
andl
add
fidivl
rcll
push
mov
push
and
fwait
dec
jb
scas
mov
ljmp
inc
adcl
pop
mov
adc
or
push
pop
inc
sarl
loopne
sub
mov
sub
cld
push
jae
lcall
cmp
mov
cmp
sub
insl
test
enter
mov
jo
int
inc
in
clc
sub
std
lcall
gs
sub
rorl
or
cmpsb
test
jecxz
push
repz
xor
mov
repz
out
adc
xchg
cli
test
fimull
pusha
inc
xchg
js
lea
repnz
xor
sbb
mov
push
mov
das
aaa
movsl
stc
je
xchg
sub
aad
int3
loopne
push
std
jns
xor
push
and
pushf
mov
push
sbb
pop
in
imul
push
fsubl
insb
sbb
pusha
roll
and
or
out
aad
stos
lds
jo
push
rol
cs
ret
lret
sbb
and
mov
jl
jl
stc
leave
cs
push
repz
divl
mov
ljmp
jle
shlb
push
test
fisttpll
cld
iret
cld
movsl
shl
inc
sbb
gs
lods
inc
ss
mov
outsb
xchg
test
sti
or
addr16
inc
xchg
cmp
test
mov
mov
mov
mov
dec
loope
fiaddl
mov
push
pop
xor
mov
clc
adc
std
jnp
outsb
sbb
pushf
push
fldenv
hlt
je
in
stc
and
push
or
insb
loope
movsl
mov
rclb
data16
pushf
loopne
xchg
dec
or
fbld
mov
inc
mov
mov
add
or
cmpsb
rcrl
mov
scas
outsl
stos
xor
dec
lret
lret
arpl
xchg
ljmp
in
js
pop
xchg
es
inc
cli
pop
insb
test
mov
dec
push
addr16
imul
xchg
cmpsl
dec
popf
push
adc
xchg
cli
mov
imul
outsb
pop
add
ljmp
push
add
imul
xor
sub
jmp
icebp
inc
jle
imul
data16
mov
test
ret
ss
xchg
dec
and
fildl
dec
cmp
push
xor
ja
xchg
rcr
add
inc
mov
cmp
insl
and
mov
sub
push
mov
pop
fisttpll
loope
mov
scas
adc
xchg
cmpsb
push
jno
xlat
and
push
mov
adc
push
push
mov
mov
xorb
js
ss
orb
mov
mov
mov
mov
sbb
es
scas
cltd
ja
das
sbb
fisttpl
leave
nop
in
shrl
adc
xchg
popa
fdivl
lods
ret
mov
loopne
dec
iret
adc
cmp
pop
hlt
jg
pop
cli
push
loop
movsl
push
cmp
outsb
ret
cmpsl
rcll
add
adc
jmp
lret
adc
aas
mov
jecxz
int3
scas
mov
and
inc
xchg
and
aas
push
shrb
push
fs
pop
unpckhps
cwtl
aad
shlb
cli
popf
lahf
jl
out
sub
mov
jbe
out
movsb
push
popf
jmp
and
push
lahf
nop
dec
lods
or
add
pushf
mov
in
push
icebp
clc
enter
sar
das
inc
imul
inc
loopne
pop
cmpsl
icebp
mov
adc
filds
or
sarb
fdivrl
xor
dec
sbb
in
mov
fsubl
add
mov
mov
and
jge
ds
mov
or
dec
stos
xchg
pop
pusha
pop
dec
shl
popa
or
loopne
mov
adc
fs
imul
mov
mov
nop
mov
cmpsb
push
sarb
push
cmpsb
inc
lods
orb
test
loope
stos
dec
js
pop
jbe
push
pop
dec
jae
les
ljmp
dec
jle
add
adc
test
jmp
hlt
ljmp
pop
sbb
lock
dec
fwait
jl
sbb
ret
into
adc
loope
mov
mov
ss
adc
cs
popa
inc
sahf
aas
sub
cmp
insl
loop
syscall
std
data16
fildll
inc
loopne
inc
idivl
test
pop
mov
inc
dec
mov
adc
fstps
dec
hlt
pop
sbb
mov
subb
or
adcb
icebp
mov
pop
hlt
sbb
xorl
negb
loopne
in
push
fidivrl
lods
imul
and
adc
jge
jg
insl
sub
add
dec
push
and
and
mov
xor
mov
push
push
or
cwtl
pop
clc
dec
shlb
les
in
mov
xlat
lcall
dec
or
loop
arpl
rcrb
inc
mov
movsb
lret
int
je
lret
data16
addr16
lcall
inc
lds
mov
lcall
pop
frstor
into
mov
aam
repnz
sbb
jns
adc
cmpsb
xchg
addr16
or
ss
mov
xor
mov
cmp
nop
mov
pop
or
fldt
sahf
ret
popl
lods
pop
testl
or
fsubr
xor
jo
cmp
add
xor
inc
mov
or
cmp
cmp
enter
leave
cli
outsl
mov
das
mov
subb
fsubl
mov
dec
aad
dec
aam
sbb
adc
mov
les
stos
insb
test
sbb
and
sbb
or
jne
inc
jmp
adc
xlat
repnz
jo
xor
mull
test
pop
es
movsl
push
sub
js
outsb
rolb
inc
dec
ja
lods
xchg
pop
mov
mov
sub
inc
jo
mov
jb
xchg
lahf
pop
cmp
cmp
xchg
mov
fdivrl
sbb
sbb
mov
push
rcrb
int
rolb
outsl
dec
data16
shlb
lret
repnz
lods
sbb
jecxz
sub
mov
rcrl
or
loope
popf
test
insl
shrb
mov
aam
fldz
and
outsl
cli
push
mov
mov
aam
or
push
repnz
cmc
cmp
bound
jno
push
and
gs
inc
jp
lea
adc
mov
push
not
iret
mov
xor
mov
orb
push
cld
jbe
and
mov
int3
out
cmp
jg
adcb
dec
popa
adc
push
inc
ds
mov
stos
lds
test
pop
cwtl
xor
aas
or
push
mov
fcoml
lahf
test
push
movsb
test
adc
clc
arpl
fidivrl
push
add
mov
and
out
arpl
cmp
loope
dec
cltd
or
and
xchg
mov
mov
xchg
fwait
mov
add
jno
icebp
xchg
cmp
std
ror
or
xchg
mov
frstor
or
es
cli
jae
cmp
clc
mov
fists
sbb
call
mov
dec
jae
xchg
xchg
cmp
jle
fdivl
jl
inc
sbb
sbb
dec
mov
jp
data16
mov
out
mov
movl
aam
outsl
mov
push
in
xorb
cltd
xor
sbb
pop
dec
sbb
xor
rorl
mov
shll
dec
xchg
mov
sub
mov
mov
loop
lahf
cmp
mov
ret
sub
xchg
jecxz
leave
inc
outsb
mov
test
mov
push
or
inc
nop
imul
shrl
push
fnstenv
dec
xor
mov
or
pop
arpl
xor
and
out
mov
mov
push
out
push
aas
xchg
paddusb
dec
xor
xor
in
inc
adc
repnz
fisttps
hlt
xchg
and
add
jecxz
dec
cld
das
mov
sub
lahf
inc
jb
xor
dec
xor
shld
int3
add
jp
enter
and
repz
gs
nop
and
pop
mov
dec
addl
or
dec
out
fdivs
loopne
arpl
outsb
mov
inc
push
ja
or
je
mov
inc
dec
insl
lret
pop
or
xchg
fcoml
loope
and
in
pcmpeqw
ficoml
sahf
xchg
xchg
scas
int3
sub
mov
adc
adc
dec
int
nop
test
jp
gs
mov
mov
sub
inc
mov
cmpl
pop
ret
mov
dec
xchg
test
sbb
mov
mov
xchg
mov
ja
std
out
loopne
xchg
stc
inc
inc
dec
adc
xor
mov
xchg
sbb
fcompl
mov
xor
rolb
ret
pop
cmp
pop
sbb
mov
gs
inc
pop
dec
test
cmpsb
je
inc
data16
pop
iret
pop
lock
enter
push
jle
push
popf
mov
lods
pop
jmp
fs
sahf
mov
inc
cmp
popa
test
add
or
ds
mov
stos
test
mov
mov
jle
fsubs
push
jno
int
push
sbb
or
insb
js
jl
dec
lea
lods
lret
add
push
dec
lret
adcl
mov
aam
je
dec
lcall
clc
dec
andl
sub
jbe
adc
jmp
lods
roll
vphsubdq
dec
mov
mov
jmp
add
bound
nop
cmp
and
or
jno
ljmp
dec
and
push
inc
mov
in
gs
cs
dec
lret
inc
xor
sbb
cli
xchg
xchg
xor
loope
add
add
push
push
mulb
xor
rolb
dec
push
and
mov
insl
mov
xor
fldcw
and
xchg
ja
cmp
cmp
shl
lds
popa
cmp
add
sbb
dec
or
addr16
ss
jp
jecxz
dec
insl
jl
imull
or
test
divb
mov
inc
outsl
jmp
pop
jbe
pop
mov
filds
dec
rorb
cltd
fists
addl
call
sbb
movsl
pop
sbb
aas
cwtl
sbb
jb
cmp
int
lock
aad
test
shr
lahf
insl
std
lods
xorl
xchg
mov
mov
dec
jbe
pop
fistl
or
xor
mov
loopne
lea
mov
push
fsubr
aam
add
mov
xor
iret
inc
xlat
movsb
xor
icebp
shl
stos
ja
mov
mov
xorl
lea
xchg
lds
cwtl
imul
xlat
mov
xorb
cmp
lock
shl
imull
mov
sbb
inc
test
das
sub
jne
adc
les
shrl
jae
mov
xlat
inc
add
addr16
sbbb
pop
mov
stos
cmc
addb
adc
movsl
push
jno
hlt
dec
or
adc
sub
jb
jbe
sbb
inc
sbb
loope
mov
loopne
or
lea
xchg
icebp
mov
cwtl
arpl
add
lds
popa
mov
and
sbb
sub
fsubrs
jl
fdecstp
xchg
pop
inc
adc
xchg
lahf
xor
lea
stos
cmp
cld
rolb
outsb
dec
dec
aas
push
pop
add
jmp
xchg
adc
inc
xor
test
into
ss
jl
dec
lahf
jb
in
push
test
aad
fidivrs
pushl
mov
and
imul
xchg
pop
dec
dec
outsl
cmpsb
stc
aam
push
cmp
ss
pop
mov
inc
push
push
mov
dec
rolb
dec
popa
jne
or
mov
mov
cltd
push
mov
mov
pop
xor
mov
nop
lret
or
push
sahf
lods
fstpl
push
hlt
sahf
sub
dec
fistl
sub
push
lret
cmp
mov
filds
lds
ret
and
sahf
lods
outsl
push
jl
gs
inc
js
mov
dec
call
xchg
inc
gs
adc
cs
out
add
mov
pop
subb
pop
outsl
int3
dec
push
jle
sbb
in
mov
cli
pop
dec
cmp
sub
cmp
push
lods
dec
std
je
pop
and
cmc
pop
mov
cmc
cwtl
pop
or
xlat
fimull
stc
and
push
push
inc
repnz
outsb
sbb
pop
adc
jle
cmp
sbb
cmp
shlb
inc
leave
mov
addr16
stos
xor
jg
cmc
pusha
push
ds
and
shr
push
lret
mov
jno
jmp
lcall
mov
sbb
fwait
jnp
mov
or
push
das
sub
xlat
in
aam
fldl
add
int
aas
lahf
push
pop
je
std
cmc
and
pop
push
insl
mov
adc
jl,pt
ljmp
aaa
push
and
inc
lahf
cwtl
cltd
std
rolb
cmpsb
fwait
mov
push
jne
insl
sub
dec
cmp
out
xor
and
data16
xor
js
mov
push
adc
lcall
stc
test
xchg
and
pop
mov
js
jmp
mov
popf
aam
cmpsl
and
add
pushf
and
jecxz
fwait
in
push
aad
cld
std
loop
stos
mov
ficompl
fmull
insb
pop
mov
sbb
mov
inc
push
dec
out
arpl
xchg
scas
test
add
repnz
rorl
cmp
xchg
mov
adc
cs
fdivrs
out
cmp
mov
mov
pop
pop
or
mov
sub
aam
and
inc
test
pop
add
or
sbb
cmpsl
jmp
mov
pop
inc
sub
test
mov
jle
mov
loopne
movsb
inc
sti
jne
xchg
pop
adc
jo
popf
sti
lock
ret
pop
ficompl
sbb
repz
ds
rcrb
std
cld
lret
or
sub
jne
into
jo
cli
push
jmp
test
in
mov
fldt
test
push
fdivrl
pop
loopne
and
or
xchg
pop
xor
pop
mov
mov
mov
test
push
push
call
xor
in
inc
test
test
push
icebp
cmovns
pop
or
decb
xchg
push
dec
adc
pop
add
in
xchg
nop
cs
nop
lods
cmp
stc
sub
push
lret
int
sub
cs
aaa
in
or
dec
gs
or
shrb
filds
aad
mov
sbbl
and
and
scas
imul
mov
fdivl
les
adc
pusha
aam
adc
sbb
popa
out
jne
pop
leave
mov
pop
fwait
push
xrstors
fistl
inc
xchg
or
xchg
mov
sub
sub
sbb
adc
push
or
cmpsl
xchg
scas
ret
movl
jae
pop
and
adc
or
cmp
push
dec
and
add
jb
cld
mov
mov
adc
and
or
dec
negb
stos
dec
sbb
xor
ljmp
lods
xchg
rcll
push
or
jne
jbe
jecxz
or
ds
sar
cmpb
inc
aad
out
repnz
inc
xchg
int3
ret
cmp
mov
or
adc
je
hlt
insl
adc
jb
push
loope
imul
xor
decl
adc
push
leave
cmc
inc
mov
add
jmp
cmp
mov
or
mov
or
cltd
sbb
sub
and
mov
and
inc
cmp
jg
repnz
lods
int3
sarl
mov
sbb
mov
jmp
loopne
out
jle
int
addb
dec
dec
xchg
xor
add
imul
mov
daa
pusha
jmp
and
cmp
stc
imul
gs
fidivrs
sbb
xor
sbb
ja
adc
xchg
lret
ret
add
scas
in
adc
jle
pop
rolb
dec
rcll
std
mov
out
mov
iret
xlat
mov
daa
mov
cmp
iret
sub
dec
outsb
daa
pop
pushf
in
fdivrs
aad
rcrl
pusha
ljmp
movhlps
and
inc
jl
ficoml
pushf
xchg
leave
addr16
adc
inc
jb
inc
fdivrl
fwait
cwtl
in
fwait
inc
adc
add
dec
movsb
push
daa
iret
jno
dec
sti
add
adcb
insl
ljmp
loope
mov
mov
add
xchg
dec
popf
cmp
push
frstor
stos
bound
fimuls
pusha
sub
hlt
ljmp
mov
jp
dec
sub
mov
jg
test
out
frstor
pop
sbb
push
adc
pop
orl
bound
repnz
mov
xlat
mov
mov
push
mov
out
sahf
xor
pop
cmpsl
inc
inc
mov
loope
clc
cmp
mov
bnd
clc
and
js
addb
xorl
lcall
cwtl
pop
sbb
push
mov
ja
add
or
test
in
mov
inc
shl
or
cli
push
clc
insb
adc
cmc
clc
xchg
xchg
aaa
mov
std
xchg
inc
xchg
push
outsb
scas
mov
and
mov
lret
jge
fcoms
cld
test
out
push
sbb
aaa
insl
outsb
cmp
cmp
and
inc
or
xor
popa
addr16
imul
push
mov
pop
dec
sub
mov
aad
mov
aaa
mov
push
xchg
in
mov
lods
fmuls
xchg
jecxz
mov
or
jo
imul
pop
jmp
into
cmpsl
fwait
xor
inc
mov
bound
ret
pop
mov
mov
icebp
fcmovb
aad
adc
dec
cmp
mov
or
dec
xchg
popa
or
cld
mov
xchg
repnz
add
adc
pop
and
or
jns
sub
in
rorl
pushf
add
repz
stc
arpl
cmc
gs
shl
jge
jne
sbb
adc
and
mov
lods
adc
fiaddl
pop
xlat
jne
icebp
lcall
mov
icebp
xchg
jmp
daa
fsts
test
mov
jnp
add
or
hlt
iret
inc
mov
les
mov
pop
fildl
test
or
push
in
pop
ret
mov
mov
mov
popf
and
stos
add
sbb
cltd
fnstsw
jp
fwait
enter
cli
roll
and
test
in
inc
sbb
popf
gs
scas
sub
cld
inc
negb
push
and
sbb
push
mov
cmp
sbb
mov
fcmovb
sub
into
fs
pop
xchg
push
mov
aad
push
int
jno
into
jg
mov
push
scas
icebp
sbb
or
fisubl
leave
imul
mov
inc
ljmp
mov
push
lret
xlat
mov
stos
arpl
push
mov
xchg
cmp
and
xchg
mov
lds
pop
or
mov
repz
adc
addr16
into
hlt
enter
aam
and
stos
or
movsb
sti
rcl
adc
pop
jge
popf
push
sbb
imul
mov
aaa
aad
pushf
jns
or
in
mov
cmp
adc
in
rol
inc
hlt
cmpsl
xor
mov
test
xor
insb
jl
fists
sbb
and
cmc
loopne
pop
cs
stos
mov
pop
jns
pop
test
iret
movl
pushl
xchg
test
jno
adc
pusha
mov
jne
jae
test
mov
loop
mov
ja
lds
adc
pop
fcoms
adc
inc
aam
js
insl
movsb
fldenv
cmp
imul
pusha
mov
adc
cmp
loopne
pushf
mov
xchg
or
jnp
sbb
popa
cmc
jle
cli
jmp
xchg
push
sub
daa
cmp
gs
mov
cmp
stos
adc
pop
xchg
xchg
xchg
push
test
incb
pop
jle
lods
sbb
int
arpl
movsl
xchg
aam
sub
es
jmp
outsl
lahf
sub
xor
sub
les
arpl
repnz
mov
and
icebp
pop
imul
or
inc
sbb
fdivs
inc
xor
sbb
out
test
push
and
sbb
inc
sub
jbe
ss
dec
xchg
add
fisubs
mov
outsb
hlt
test
ljmp
inc
jnp
or
pop
lret
je
je
and
aaa
dec
sbb
xchg
shlb
jmp
and
aad
repnz
fwait
xor
jg
popf
rep
jmp
mov
jmp
adcb
cld
xchg
ja
insl
lret
inc
push
and
filds
mov
ret
and
ret
sub
and
lahf
jns
sub
dec
sbbl
incl
enter
lock
pop
pop
or
adc
mov
lret
and
out
out
cmp
aas
mov
push
out
inc
roll
sub
dec
jae
adc
scas
fidivs
add
lret
dec
pushw
pop
xor
xor
pop
rolb
adc
dec
iret
pushf
fwait
jns
pop
xchg
lcall
loop
adc
lock
inc
adc
je
jp
aas
imul
inc
popf
cmp
mov
and
jo
movsl
arpl
imulb
ficoml
mov
into
into
xor
sub
jbe
or
jg
mov
cmp
inc
or
stos
aam
dec
mov
jns
pushf
jmp
adc
incl
aam
adc
lret
pop
push
fildl
std
or
pop
pop
dec
mov
leave
dec
cmp
cmp
mov
sub
xchg
sarb
xor
out
shl
push
jl
mov
in
lods
adc
js
testb
icebp
pusha
push
mov
in
jae
sbb
jnp
cmp
xchg
and
push
sbb
and
or
cs
add
push
lret
jne
xchg
xchg
in
clc
lea
lods
dec
pop
lock
sbb
jle
sub
jmp
rclb
cwtl
xor
cwtl
dec
and
adc
out
inc
push
mov
mov
cmp
dec
jo
jl
mov
push
rorb
mov
cmc
adc
loopne
fstpt
mov
jnp
jge
xchg
cmpsl
loopne
hlt
mov
inc
js
fcmovne
test
lock
pop
out
push
mov
fwait
jb
xor
pop
popa
fisubl
lods
lcall
sti
arpl
jns
push
mov
cmpsb
iret
push
cmp
or
mov
mov
mov
pop
pop
mov
push
cmpsb
sub
in
loope
fs
push
cmp
lea
mov
pop
jecxz
repnz
imul
and
dec
xchg
in
xor
fneni(8087
xlat
test
sub
rcll
movsb
scas
rorb
int
cmp
pop
push
sti
jb
movsb
and
inc
es
in
pop
and
jmp
or
xor
leave
push
jno
lds
repz
adc
pop
inc
or
push
stc
ss
insl
mov
cmp
push
pop
xchg
jecxz
cmp
imul
mov
scas
xlat
sub
pop
adcb
xor
push
aam
or
faddl
jns
adc
jae
out
repz
insb
ja
push
jno
mov
mov
push
jb
mov
es
mov
lret
mov
aaa
aad
or
add
push
popa
inc
shll
ds
test
pushf
xchg
int
leave
popf
call
sahf
std
xor
hlt
inc
dec
or
cmp
out
pop
jb
cwtl
insb
movsb
mov
lahf
loop
fs
lahf
loope
adc
andl
lds
lret
popf
pop
jmp
xchg
push
int3
cmpsb
xor
cwtl
pusha
add
lcall
movsl
enter
jecxz
cltd
mov
and
and
in
fadds
jnp
pop
fmull
aaa
inc
jbe
out
data16
dec
dec
gs
cmpsl
sahf
fstpl
notb
pop
cmp
nop
std
dec
fadd
push
jbe
outsb
mov
cmp
pop
pop
mov
push
shl
add
dec
pop
int
cmc
rcll
aad
add
sbb
mov
int3
jne
push
jmp
gs
xchg
inc
lds
add
lret
pop
mov
xor
or
dec
out
sahf
dec
mov
dec
repnz
lds
push
es
ffree
mov
fimull
daa
jmp
cmp
xchg
push
fiaddl
fsubs
add
mov
daa
xchg
jne
push
jno
inc
out
pop
fstpl
dec
jecxz
xor
insl
mov
gs
mov
sbbl
imul
lods
cmp
jge
aaa
roll
mov
loop
push
mov
pusha
pop
dec
pop
in
fucom
ds
mov
mov
lcall
inc
and
xor
loope
nop
add
dec
aaa
mov
add
or
mov
dec
xor
and
sub
in
loop
pop
mov
push
sbb
test
or
in
adc
pop
add
mov
lea
lret
pop
cmp
pop
mov
mov
in
dec
inc
nop
jno
outsl
sub
sub
xor
lock
jmp
inc
mov
jbe
dec
scas
push
fld
jne
or
mov
cmp
stos
and
pop
div
mov
mov
stos
fisttpll
and
mul
xchg
clc
ljmp
jb
sbb
xchg
mov
adc
andl
sbb
movntq
push
mov
ds
sub
out
xchg
out
cmpsb
jecxz
shlb
icebp
push
outsb
insb
out
xchg
fsubs
notb
jmp
sub
mov
mov
xchg
xor
out
test
notb
insb
imul
test
arpl
push
cltd
out
dec
mov
shlb
repnz
inc
in
mov
mov
or
mov
fwait
cmc
mov
or
mov
sbb
mov
mov
icebp
andl
sub
test
sbb
pop
mov
push
jbe
or
aas
out
and
jp
cmp
adc
pop
scas
adc
cs
ret
ret
jl
sbb
pop
in
imul
or
adc
pusha
adc
movb
fisttps
ds
xchg
sub
fwait
mov
mov
je
xor
idiv
movsb
sahf
push
std
inc
loope
aam
mov
and
jg
insb
inc
add
or
sbb
dec
and
sub
and
and
or
mov
xchg
push
imul
add
popf
ds
roll
test
sbb
add
es
adc
loopne
aas
sub
insl
mov
std
pop
mov
jecxz
lods
adc
call
jmp
fdivrs
mov
out
xchg
and
clc
sub
in
cltd
and
out
mov
dec
mov
jae
shrb
loopne
out
int
adc
daa
push
movl
lahf
cli
add
mov
push
lods
fnstcw
xchg
leave
mov
inc
jge
cmp
mov
ss
cmp
inc
jns
mov
rcll
dec
sarb
mov
add
scas
pusha
jmp
testl
cli
fmul
fidivrs
repnz
int3
jle
pop
jle
pop
ljmp
pop
inc
or
mov
bound
loop
jno
arpl
sbb
int3
jns
mov
sub
mov
mov
xchg
adc
shll
ret
call
mov
aam
ret
pusha
xor
sbb
push
pop
call
stos
nop
mov
push
clc
pop
add
and
adc
sbb
jp
aaa
jnp
repnz
push
xor
fsubs
pop
andl
out
xchg
call
inc
pop
negb
mov
mov
cmp
cmp
push
pop
push
mov
and
mov
and
sbb
inc
mov
ds
lock
sar
mov
call
sahf
push
ja
arpl
fldcw
lahf
aaa
rcll
adc
mov
push
lock
mov
xor
or
lods
dec
mov
jno
inc
popa
push
lea
xchg
cmp
fs
fbstp
addr16
cmp
cmpsb
inc
fnstsw
inc
cmp
jmp
mov
fstpt
mov
iret
fs
jne
addl
clc
sarl
fcompl
xchg
and
cmp
hlt
xorl
ficoml
add
dec
xor
mov
and
push
and
cmp
gs
add
cmpsl
xchg
push
out
imul
ficomps
sbb
push
or
ds
movsb
nop
lods
jbe
pushf
mov
loopne
adc
xor
jg
pop
push
cmp
jecxz
cmpps
mov
mov
fmull
repz
pushf
xor
add
dec
es
mov
jecxz
or
mov
add
icebp
add
sbb
movl
jecxz
or
jno,pn
shrb
leave
dec
jae
jecxz
sbb
cmp
xchg
push
stos
push
ljmp
inc
jbe
xchg
data16
dec
pop
mov
and
int
sahf
bswap
subl
scas
das
xor
orl
pop
cmp
pop
sub
sbb
repnz
sub
jo
or
mov
mov
loop
movl
in
sub
scas
scas
or
cmp
push
addl
dec
pop
jae
iret
push
mov
out
stc
xchg
imul
bound
jge,pt
sub
mov
in
pop
sbb
stos
lods
out
fdivs
mov
and
negl
sbb
inc
fistpll
lods
scas
or
mov
cld
je
jmp
daa
cwtl
mov
jne
xor
insl
or
or
cltd
adc
sbb
aad
pop
adc
fcoml
xchg
stos
and
stos
mov
sub
jle
mov
xor
push
ljmp
fildll
shrl
stos
mov
mov
adcl
xchg
jmp
cmp
pop
aas
testb
das
mov
lock
test
je
jno
inc
push
aas
out
pop
call
mov
push
je
pop
in
int3
cmp
push
lods
mov
jae
nop
in
mov
adc
test
mov
cmp
adc
mov
aam
push
cli
movsb
popf
pusha
test
push
dec
mov
in
sub
repnz
xlat
outsb
inc
lret
or
pop
test
fs
data16
xchg
pop
cwtl
es
sub
jge
sti
enter
shrl
xchg
stc
loope
pop
into
mov
fidivrl
pop
or
mov
testb
jecxz
jl
setno
push
sbb
pop
sbb
shl
mov
fisttpl
loop
cld
fldt
fimuls
inc
sbb
ret
lods
fistps
lock
xor
dec
sahf
jo
aaa
push
mov
inc
fcmovnu
out
jecxz
cmp
add
ret
mov
popa
subb
xor
mov
mov
roll
arpl
push
enter
test
mov
lahf
aam
jg
mov
fisubl
into
push
out
lock
ret
insb
mov
push
popf
jl
xor
arpl
push
loope
call
jge
data16
xchg
ljmp
scas
jb
leave
fadd
lea
out
pop
test
and
pop
mov
or
adc
xchg
lret
out
clc
ret
data16
mov
push
sarl
jb
int3
fldl
sti
jo
xchg
xchg
mov
mov
test
fs
cmp
es
mov
ret
push
jp
mov
fnsave
cmp
out
inc
jge
mov
sbb
push
mov
inc
scas
incb
xor
fisubl
inc
aam
sbb
jle
and
push
push
minps
jge
ror
testb
jmp
rclb
xchg
call
mov
inc
fsubl
shl
mov
mov
hlt
gs
jge
popf
and
outsl
into
mov
push
jbe
cld
cmp
stc
enter
and
xchg
add
lock
aam
lahf
adc
sahf
lods
out
inc
pushf
inc
fwait
test
arpl
mov
xchg
fadd
push
lods
sub
push
ss
movsl
add
inc
or
mov
add
inc
out
or
cmc
sub
je
icebp
or
leave
bound
xchg
stos
ds
push
pop
xor
movb
pop
pop
xchg
jns
ja
push
scas
pusha
in
imul
addr16
shlb
jg
or
idivl
sub
sub
daa
in
cmpsb
dec
or
scas
dec
xchg
push
daa
scas
cmp
mov
dec
arpl
xor
rcr
cmp
stc
mov
cmpsl
jnp
dec
rcl
notb
cli
clc
jg
andl
mov
pop
adc
jo
add
jb
rorb
and
outsb
sub
gs
pop
or
loopne
loope
sub
mov
pop
pop
mov
stc
sub
jne
outsb
cmp
dec
cmp
imul
fldl
xlat
aad
fisubrs
jae
js
push
dec
inc
mov
ljmp
lods
shrl
js
imulb
dec
pop
mov
mov
push
mov
mov
and
adc
fiadds
cmc
popa
mov
pop
pop
out
mov
adc
aam
adc
scas
xchg
fsubs
repz
jns
pop
push
cmp
pop
rcrl
pop
cmp
mov
ret
mov
dec
pop
push
xor
push
mov
sbb
inc
push
mov
sbb
pop
sahf
ret
nop
push
xchg
sti
icebp
mov
rcll
push
add
dec
or
push
jp
or
and
mov
std
js
mov
dec
in
pop
mov
add
mov
add
cmpsb
xchg
mov
pop
jmp
ret
jnp
push
pop
clc
push
push
jmp
aaa
add
sub
push
bound
int3
xor
divb
loope
cmp
aas
sbb
dec
pop
mov
inc
adc
push
dec
mov
add
jp
in
notl
push
lods
ret
xlat
xchg
xchg
fdivrs
mov
jb
jns
ljmp
cld
push
ret
dec
pop
lret
add
cld
cmp
xchg
inc
sahf
cmc
jno
icebp
scas
pop
stos
fidivl
repnz
repz
inc
sub
jns
cmc
std
or
pop
out
jns
pusha
or
sub
sub
movsb
mov
inc
mov
lock
inc
mov
dec
daa
movsl
and
popf
arpl
mov
add
cmp
xor
loop
jbe
outsl
out
lods
mov
jnp
loope
aam
cmpsl
lret
popf
mov
sbb
in
test
inc
jae
leave
xchg
rcrb
cmp
out
sbb
xor
sub
or
xchg
cmpsl
push
in
test
in
sub
jno
pop
ljmp
cld
add
out
pop
add
jp
pop
jl
cmp
scas
push
gs
mov
ds
gs
lea
cli
add
movsl
push
push
jge
mov
mov
mov
mov
and
icebp
stos
inc
stc
cmpl
mov
or
inc
out
cmp
addr16
jp
das
or
mov
out
inc
and
outsl
sub
pop
pop
pop
shlb
outsl
les
test
cmp
mov
inc
roll
push
nop
dec
cltd
sarl
jns
cwtl
push
jle
mov
insl
mov
xchg
cmp
push
push
xchg
scas
ror
sub
sbb
xchg
imul
mov
adc
xchg
adc
inc
dec
pop
stos
sbb
and
or
and
clc
in
dec
jno
movsb
xchg
push
dec
outsl
out
outsb
int
cmp
cmp
sti
stos
mov
sbb
aas
fmuls
push
enter
adc
daa
insl
pop
test
js
push
push
rolb
push
into
ja
adcb
pop
xlat
imul
dec
outsl
out
out
lock
adc
dec
repnz
je
adc
fs
sbb
shlb
push
pop
jbe
pop
sub
sti
scas
xchg
dec
arpl
jmp
sbb
daa
arpl
mov
out
scas
mov
adc
rcll
mul
fsubs
pop
xor
popf
push
push
in
sub
mov
cmpsb
gs
pop
lcall
popf
adc
int3
xchg
dec
shrd
leave
hlt
fsubrl
mov
jae
mov
shl
fisubs
jae
movsl
lods
xchg
cmp
shlb
push
mov
outsl
mov
sub
jbe
sbb
mov
enter
pop
sub
mov
inc
jne
cmc
mov
js
push
testl
lods
out
out
fs
nop
icebp
adc
jmp
jl
push
repz
stos
jmp
adcl
std
cltd
ljmp
inc
mov
sti
xor
lods
subb
adc
and
shll
js
xor
add
mov
mov
xchg
mov
xchg
out
sti
sbb
mulb
mov
jo
out
in
mov
movsb
fistpll
sub
fimuls
xchg
and
cs
loopne
inc
dec
pop
mov
xlat
loop
dec
aad
fisttpll
movsb
and
cltd
insb
sar
or
gs
sub
mov
sar
in
sarb
test
mov
jmp
sub
pop
aaa
push
push
or
xor
enter
ffree
mov
clc
jbe
dec
int
sub
cmp
sub
test
insl
fimull
adc
mov
inc
mov
test
dec
out
cmp
in
xlat
test
cwtl
push
dec
jl
repz
cmp
shll
rorb
sarb
inc
push
jno
mov
dec
xor
cltd
xchg
xchg
mov
pop
jmp
andb
cmp
or
mov
insb
fcompl
jp
jp
cmpl
or
aam
cmp
int
jge
dec
fimull
arpl
xor
jl
cwtl
movsb
insl
inc
xchg
sub
mov
int3
mov
in
sub
out
leave
ret
sbbl
lret
call
push
and
icebp
jae
repnz
je
jp
dec
mov
mov
mov
ja
cmovle
mov
sbb
jbe
hlt
cmp
or
push
lret
mov
xchg
fdivrp
sbb
mov
add
loopne
out
and
dec
push
orl
push
add
sub
xor
pusha
jl
fs
mov
xchg
stos
push
push
inc
push
test
xchg
rcrb
pop
in
or
xor
xor
addb
in
push
stos
lret
sbb
xor
call
pop
add
pop
mov
out
lea
sbb
aaa
sbb
sbbl
pop
xchg
ret
lcall
std
rolb
nop
fildl
test
aas
test
inc
add
adc
mov
jmp
mov
stos
and
sub
mov
lds
adc
lahf
mov
stos
fsubrs
inc
std
xchg
cmp
movsl
xchg
cmp
sbbl
imul
das
movsb
fdivs
aaa
adc
cmp
mov
cmp
arpl
lret
lods
stc
fprem1
sub
insb
js
cwtl
pushf
cmpsb
fistpll
jge
jp
lea
sbb
xor
fimull
push
xor
addb
cmp
inc
mov
add
rcl
lds
xchg
popf
mov
jecxz
lcall
push
xor
pop
or
sbb
xor
cmc
xor
repz
pusha
lahf
arpl
mov
ffreep
imul
outsb
push
imul
xchg
mov
arpl
and
lea
fcomp
outsb
scas
sub
cmpsb
dec
pop
mov
and
ja
jecxz
notl
add
cwtl
jl
sub
enter
roll
sub
leave
aam
adc
mov
cs
push
adc
mov
pop
into
mov
lock
jle
pop
pop
cmp
call
push
iret
mov
sub
and
imul
or
or
xor
xchg
scas
sbb
pmaxsw
jns
push
cmc
outsb
and
leave
xchg
dec
call
daa
pop
mov
adc
pop
mov
out
out
mov
inc
jl
xchg
xor
dec
stos
and
xchg
je
jno
mov
pop
xchg
push
jp
iret
inc
test
mov
add
xlat
mov
ficompl
scas
mov
hlt
and
stc
es
std
outsb
stos
inc
push
imul
loopne
pop
repnz
mov
pushf
jo
pop
inc
jns
pusha
pop
add
sub
adc
ss
mov
cmp
dec
xor
mov
jb
mov
sarb
pusha
push
cmpsl
dec
es
mov
jecxz
std
xorb
imul
adc
pusha
enter
ficompl
es
cld
sbb
adc
shrl
sbb
push
pusha
mov
jns
ds
dec
clc
inc
out
lods
push
negb
incb
xchg
mov
sbb
jecxz
mov
sub
inc
fsubl
cmpsl
sbb
call
mov
sbb
repnz
jb
das
mov
loopne
or
leave
hlt
inc
pop
shll
jno
ljmp
popa
mov
into
pop
mov
add
stos
inc
cltd
cmpsb
or
out
mov
ror
inc
xor
in
orl
stc
cmp
outsb
push
movsl
scas
movsl
sbb
pusha
push
das
and
loopne
add
insl
xchg
mov
loop
out
mov
and
or
pop
pop
sarl
arpl
in
xchg
adc
repnz
pop
nop
dec
out
test
xchg
pop
jnp
faddl
xchg
clc
cld
sub
lea
xlat
mov
das
pop
popa
faddp
cltd
movsb
std
clc
lds
test
fwait
rcrl
popa
iret
sub
sbb
pop
repz
sarb
sbb
fdivrs
sahf
xor
push
jecxz
jo
push
jne
inc
adc
leave
xor
add
imul
es
cmpsb
or
dec
into
mov
iret
cli
dec
mov
out
inc
pop
ss
push
rcr
aam
int3
xchg
sub
jp
insb
lahf
rol
mov
cmp
sbb
push
push
iret
mov
inc
incl
mov
adc
loopne
int3
sbbl
xor
mul
jmp
les
pop
fidivrl
dec
adc
dec
dec
dec
jae
push
in
pop
rclb
pop
and
sbb
les
pop
aam
hlt
sbb
lret
out
aam
dec
jmp
jp
xor
rol
mov
inc
fdivl
fdivl
loop
das
roll
ret
and
xor
clc
notb
loop
cwtl
pop
jns
mov
aas
jge
sbb
sbb
fbstp
push
fisubl
push
insb
aam
pop
push
andb
les
pop
jge
and
pop
cs
loopne
loope
lods
sbb
fnstenv
xchg
es
pop
es
jecxz
cmp
mov
gs
test
test
cmp
mov
addl
out
js
cld
adc
jmp
fs
lds
adc
cld
sahf
mov
push
pop
dec
push
xchg
repz
out
xor
sub
int3
adc
adc
call
push
aam
sub
jmp
mov
ret
push
pop
mov
shll
jmp
xorl
push
loope
ljmp
cs
test
arpl
mov
mov
mov
jle
jp
sbb
in
dec
mov
xchg
dec
fsubs
cmp
push
repz
sub
adc
mov
pop
push
cld
mov
fsubrp
adc
lea
sti
ret
jp
int3
mov
or
andb
cs
fsts
jo
rorb
push
xchg
push
add
stos
add
popa
xor
mov
push
shll
iret
add
mov
fnstenv
xchg
push
mov
das
enter
cltd
mov
imul
in
jb
cmp
scas
fmulp
add
lahf
inc
popf
lret
sbb
inc
ficompl
fdivrs
insl
push
jns
mov
adc
sub
das
xchg
adc
sbb
sub
mov
lods
cs
stos
int3
ljmp
mov
jge
push
mov
arpl
sbb
filds
iret
xchg
in
cmp
icebp
xchg
push
cmp
mov
and
sub
sbb
pop
lahf
ret
loopne
in
dec
mov
test
add
lods
sahf
out
loopne
insl
mov
cs
cwtl
mov
xchg
aas
adc
sbb
fadds
ret
pop
cmp
mov
fs
cmpsb
mov
xchg
pop
xchg
cmpsl
dec
aad
cld
sbb
in
push
xchg
inc
sbb
stos
mov
je
jns
ja
add
cmp
xor
and
mov
xchg
push
lret
lret
sbb
or
es
push
fcoms
out
aam
lock
scas
dec
cs
fs
or
pusha
hlt
mov
dec
pop
leave
stos
movsl
jle
shl
mov
cmp
sbb
out
xchg
out
xchg
movsb
test
and
jmp
lods
stc
add
insl
pop
inc
pop
daa
adc
frstor
push
cltd
or
xlat
xchg
or
fmulp
xlat
test
add
leave
adc
mov
pusha
into
scas
ss
js
push
out
jo
adc
into
dec
popa
aas
mov
sti
cmp
push
sbbl
jge
inc
out
nop
pop
push
dec
mov
into
pop
fdivrs
sub
std
std
jbe
adc
dec
push
mov
mov
lock
in
and
aad
hlt
push
jle
dec
cmp
or
or
xlat
xchg
add
lret
ja
or
aas
in
dec
in
mov
popa
push
adc
adc
mov
and
and
leave
into
push
enter
lahf
insl
pop
movsl
pop
fisttps
push
push
fdivp
mov
scas
sti
ds
mov
jp
push
pop
or
jecxz
or
pop
pushf
or
hlt
and
or
shll
test
cld
popa
in
daa
xchg
add
mov
or
outsl
pop
shr
aad
rorb
inc
dec
jl
pop
lods
jmp
in
dec
pop
xchg
ret
jns
mov
mov
fsubr
pusha
test
addb
dec
push
cmpsb
pop
daa
adc
jae
pop
push
jecxz
mov
push
sbb
cmpl
xor
inc
bnd
xor
cmpsb
push
aas
fisubrs
or
push
inc
cmp
aad
out
int3
js
lods
arpl
pop
dec
pop
xchg
xor
imul
loope
pop
cwtl
dec
xor
inc
dec
push
in
daa
js
lods
fwait
call
push
jbe
stos
jbe
or
add
jg
jbe
sbb
lret
imul
mov
fisttpl
lea
hlt
in
popa
inc
push
lahf
mov
popf
push
or
popf
andl
mov
pop
fistl
imul
inc
cltd
leave
clc
fistpl
jo
in
mov
out
or
sub
call
sti
es
add
mov
pop
push
lea
cld
divl
adc
addr16
pop
xor
jl,pn
sbb
xchg
adc
shrb
loop
adc
push
pop
mov
push
adc
lahf
dec
add
mov
ret
jo
cmp
add
push
jnp
into
pushl
push
in
inc
inc
jns
jge
jnp
popa
push
sbb
lock
int3
inc
mov
dec
cmp
pop
cmp
push
push
mov
test
push
out
mov
mov
pop
pushf
int3
mov
mov
incb
dec
shl
stos
test
push
ss
mov
ret
andl
inc
xchg
mov
sbbb
dec
jge
ds
cmp
out
inc
daa
pop
and
mov
jne
dec
arpl
or
fistpl
and
add
ret
loopne
or
or
leave
dec
loop
or
les
and
insl
xchg
cwtl
jo
ss
adc
cmp
test
push
dec
push
test
sub
xor
sahf
mov
cmp
adc
push
orl
stos
inc
out
xor
mov
add
or
das
ret
punpckhbw
scas
repz
test
sbb
aam
iret
inc
xchg
mov
fwait
movsb
sahf
insb
or
xor
adc
add
mov
fld
adcl
idiv
inc
jno
mov
xadd
cmp
push
mov
aad
fbstp
div
pop
icebp
dec
sub
ds
and
and
ljmp
adc
mov
test
loop
sbb
cmpsl
fwait
lods
sbb
int3
cld
arpl
int3
cmp
inc
dec
add
fld
sub
jno
dec
cs
shl
add
jne
paddsw
xor
xchg
push
rcr
mov
add
sbb
leave
dec
dec
stos
imul
adc
out
push
mov
fs
xlat
cmp
mov
jns
inc
fcoms
pop
jp
cld
push
rdpmc
mov
cmpl
jle
enter
xlat
pop
pop
or
mov
mov
in
inc
xor
push
lret
addl
out
sub
xchg
mov
clc
out
clc
push
jp
cmpsb
add
xchg
cmp
popf
jo
inc
push
addr16
nop
mov
add
out
gs
lock
mov
and
xor
add
lcall
enter
popa
idivb
sub
xchg
stos
cmp
jbe
mov
in
fs
mov
clc
leave
sbb
mov
andb
jl
cmp
jno
imulb
or
fwait
and
xor
mov
icebp
dec
xor
sub
push
icebp
sub
fwait
ret
xor
loop
fs
pop
jmp
notl
jl
and
push
push
add
lods
cmp
jne
notb
add
test
pop
jmp
or
outsl
push
mov
aas
jmp
dec
outsb
dec
cltd
movsb
andb
loope
shll
dec
int3
fadds
mov
or
icebp
mov
jl
das
xor
hlt
hlt
adc
sub
cs
sub
dec
xchg
repnz
in
inc
mov
hlt
dec
push
lea
jbe
inc
fwait
adc
movsl
rcll
jecxz
xor
mov
xor
pop
mov
out
bound
add
rolb
adc
sub
jae
fdivrs
sahf
xchg
int3
jb
adc
push
ljmp
ret
cs
mov
sub
int
movsl
dec
inc
pop
loope
fldenv
popf
popf
hlt
lret
jl
shr
pop
mov
daa
mov
mov
push
cld
fadd
bnd
dec
add
pusha
xlat
rcrb
and
adc
fstpl
inc
mov
je
inc
sub
sbb
jbe
xchg
xlat
mov
or
xchg
mov
fildl
cld
divl
iret
cmp
mov
fisubrl
jbe
cmp
sub
test
mov
call
sbb
stos
cmp
jbe
push
imul
pop
hlt
mov
test
notl
cmp
mov
lret
push
mov
fisttpl
shlb
mov
jae
xchg
mov
jmp
idivl
and
jnp
mov
inc
push
inc
inc
adc
adc
jge
mov
pop
sbb
mov
lock
shll
cmpsb
ret
jle
cmp
ret
gs
pop
dec
mov
adc
cmp
push
and
mul
mov
int3
mov
dec
dec
orb
movsb
pop
jb
pop
push
mov
mov
dec
out
and
dec
loopne
stos
inc
xchg
push
inc
jl
mov
inc
scas
enter
loope
cmp
fucomip
sub
mov
es
pop
sub
mov
insb
divb
push
iret
fsubrs
cmpl
jge
pop
fisubrs
inc
pushf
xchg
in
insl
cmp
flds
add
cmp
pop
imul
loopne
inc
or
clc
mov
pop
test
xchg
in
adcb
mov
lahf
out
adc
dec
adcl
stc
jnp
inc
scas
dec
roll
lock
lret
pop
inc
fisttps
call
mov
stc
add
jle
les
xchg
outsb
pop
sbbb
fadd
daa
icebp
fstps
ror
xchg
mov
cmc
dec
xchg
dec
dec
or
rcr
loop
ja
pop
out
jnp
xchg
int3
stc
pop
nop
adc
mov
and
xor
clc
sbb
xor
jns
sarb
xchg
xor
dec
nop
enter
sub
mov
inc
mov
idivb
daa
sti
cld
cmpsl
and
mov
inc
xor
ds
test
mov
fldlg2
imulb
cmp
js
pop
pop
jo
mov
push
aad
adc
movsb
fdiv
popf
stos
and
sar
mov
dec
inc
xlat
shlb
fdivrs
and
sub
push
inc
outsl
cmp
dec
lcall
pop
mov
fisubrl
xchg
fcmovbe
movsl
sub
fsts
fiaddl
xlat
cmp
sub
adc
lds
mov
cmpl
xor
jne
ret
push
or
mov
push
sbb
xor
repnz
stos
popf
inc
cmc
divl
std
inc
outsb
push
popa
mov
rol
sbb
ss
mov
subb
iret
out
shrb
rcll
inc
out
sti
fildll
mov
arpl
mov
add
push
std
adc
shr
add
xchg
pop
pop
sbb
ds
enter
mov
push
stc
ja,pt
enter
and
or
pushf
std
sbb
sbb
xchg
adc
mov
shlb
stc
inc
or
sub
and
mov
aam
test
clc
mov
pop
or
fstl
jbe
adc
in
insb
into
sbb
fbstp
cmp
or
pop
pop
ljmp
flds
mov
xchg
rolb
sub
scas
and
mov
rcrl
sbb
jp
popa
cmpsw
inc
out
in
mov
addb
negb
mov
jo
adc
and
cld
int
xchg
imul
pop
hlt
sub
dec
hlt
pop
in
lahf
inc
mov
push
xchg
rcll
pop
adc
sbb
sti
out
fdivl
mov
cwtl
pop
mov
mov
repz
jge
pop
fisubs
shlb
mov
dec
dec
cld
push
add
and
dec
pusha
adc
loope
cmc
inc
clc
test
mov
pop
mov
add
jns
out
into
addb
mov
je
lret
mov
movsl
jnp
ret
xchg
xlat
lea
push
ret
push
push
vhsubpd
adc
and
movsb
pop
in
in
rcll
rcrl
push
ret
fdivs
or
fs
nop
mov
in
mov
jecxz
int
repnz
push
push
mov
adc
arpl
xchg
movups
and
sbb
fwait
and
jb
call
int3
out
push
pop
scas
jns
sbb
mov
popf
pusha
dec
pop
arpl
sbb
insl
sub
sub
hlt
mov
mov
shl
inc
xchg
pop
gs
nop
and
xchg
mov
push
xchg
test
sub
sub
xor
and
jmp
es
cmp
loop
cli
shrb
mov
inc
pop
or
pop
mov
dec
arpl
ja
icebp
addr16
lods
iret
and
push
int
test
rcr
xor
aaa
dec
lds
push
jp
add
rorl
mov
push
or
cmc
mov
orb
add
sbb
xchg
dec
adc
addr16
jg
adc
xor
jno
jmp
js
imul
mov
insl
sub
dec
mov
les
aaa
arpl
jl
lds
jl
xor
sbb
mov
add
sub
lea
insb
mov
mulb
adc
cmp
mov
js
push
sub
push
callw
in
adc
sbb
in
bound
inc
pop
loopne
stos
push
fmulp
jge
lds
cmp
push
cmp
pop
jne
mov
jns
pop
add
push
outsb
imul
mov
mul
lahf
cmc
jecxz
xor
pop
pop
dec
adc
add
inc
xor
in
xorl
sti
scas
sbb
add
test
shll
in
mov
mov
sub
mov
into
mov
xor
pop
sbb
sarb
push
pushf
mov
jp
faddl
inc
lret
adcl
sbb
sbb
ret
jnp
lcall
xchg
jle
adc
lds
clc
xchg
into
ficoml
lahf
leave
inc
or
and
in
cwtl
mov
leave
cmpsb
fdivrs
loopne
test
jnp
cwtl
push
jae
lea
loope
outsb
adc
sub
nop
or
insl
jle
mov
inc
xchg
ja
dec
push
insb
in
push
addr16
jmp
ficoml
jo
ret
pop
and
jle
aad
scas
sbb
int
push
mov
mov
cmp
adc
xcrypt-ofb
cmpsl
out
in
lcall
and
filds
call
mov
xchg
ret
jmp
js
or
sub
stc
sbb
pop
adc
mov
mov
les
ja
mov
ret
test
fldt
lds
xchg
bound
lret
sub
rorb
mov
mov
out
xchg
adc
and
insl
jmp
movsl
fisttpll
popf
lret
jne
sti
adc
jo
push
xor
sbb
nop
pop
jecxz
adc
add
add
stos
lret
es
dec
js
add
fcoml
sbb
and
std
sbb
ret
mov
pop
push
jnp
jmp
sub
mov
mov
add
iret
shlb
popf
add
repnz
test
or
mov
jo
mov
xorb
mov
push
push
pop
scas
lea
cwtl
jns
ja
pusha
mov
pop
addr16
xchg
dec
add
push
mov
push
lods
push
cmpxchg
push
scas
dec
add
mov
lds
movsl
iret
popf
dec
cmp
pusha
ljmp
in
adcl
sub
xlat
arpl
in
mov
fildll
loopne
ret
pusha
pop
add
dec
fwait
pop
mov
jl
jle
mov
lock
push
fs
inc
push
test
xchg
addb
mov
rcrb
and
lret
xchg
ss
cld
xchg
adc
cmp
xchg
sarb
sbb
lret
repz
dec
fwait
mov
xchg
scas
test
fcompl
cli
int
mov
cmp
push
popf
mov
adc
jns
and
scas
push
popa
cmpsl
push
repz
mov
lcall
in
pop
xchg
sahf
lock
inc
push
pushf
push
jae
pop
repnz
lock
int
outsb
cmp
push
push
push
mov
stos
jbe
stos
cmp
imull
sub
dec
push
fiadds
test
inc
arpl
pop
inc
out
pop
movsl
mov
fnstsw
jb
sbb
adc
jne
adc
cmpb
jb
stos
and
mov
sbb
mov
jmp
sbb
stos
cmp
xor
lods
xchg
mov
lods
clc
into
clc
adc
and
sbb
push
int3
outsl
adc
jecxz
outsb
xchg
xchg
mov
fisubs
mov
xor
mov
test
test
xchg
scas
lods
std
jmp
mov
push
lcall
or
and
out
mov
or
popa
fcmovnu
repnz
mov
mov
pop
add
add
sub
stc
and
jp
rolb
and
pop
mov
xchg
sbb
push
push
xlat
repnz
push
adc
xchg
xor
dec
jo
movsl
mov
into
or
and
fiadds
insb
xchg
dec
cwtl
fstpl
flds
adc
std
int3
fcmovnu
frstor
int
dec
leave
push
arpl
xchg
push
sub
jle
sbb
or
sbbl
rol
je
stos
mov
mov
or
sti
imul
repz
and
stc
pop
add
mov
sbb
repnz
mov
dec
lret
mov
lock
jle
cmpb
mov
fwait
inc
push
aas
or
jmp
nop
cmp
in
shrb
call
xchg
dec
jecxz
cmp
cs
loope
pop
mov
incb
sub
or
lock
imul
xor
or
add
std
fdivs
pop
loop
ja
out
xchg
jbe
iret
adc
xlat
sbb
push
subb
cmp
jne
pop
dec
hlt
push
cmpsb
inc
adc
movsb
push
adc
and
arpl
mov
dec
test
sbbb
dec
sbb
call
in
mov
pop
mov
or
sbb
scas
sbb
imul
fcomps
loope
add
iret
cmp
les
clc
outsl
mov
popa
mov
ret
add
aaa
stos
cmpsb
mov
cltd
mov
mov
test
es
test
jl
inc
mov
sarb
jne
enter
xchg
xchg
mov
mov
pop
pop
in
mov
xchg
xchg
cmp
mov
jbe
popf
out
or
or
adc
jns
dec
shrl
ror
mov
imull
ja
imul
add
jbe
push
mov
sub
push
mov
std
das
mov
and
rep
daa
pop
mov
push
mov
rolb
or
or
dec
mov
popa
pop
cmp
inc
jp
mov
jne
lods
xchg
aas
mov
and
mov
clc
fadds
jge
mov
push
in
outsl
sub
fldcw
mov
xor
subb
nop
xchg
fsub
adc
pop
dec
pop
aad
out
lret
sub
call
stc
insl
insb
decl
sarl
xor
popa
sub
movsb
push
cs
ffree
cmp
fwait
sub
mov
pop
or
icebp
lcall
pop
in
rcll
shrl
notl
add
aam
jmp
icebp
clc
adc
xchg
lds
pusha
ficompl
sbb
pop
call
mov
or
arpl
aaa
dec
mov
mov
scas
sbb
inc
push
inc
adcl
cwtl
xor
dec
xlat
push
test
gs
je
lds
xor
out
in
andl
fbstp
bound
cmp
sub
pop
mov
push
stc
movsb
lret
enter
js
gs
jge
leave
scas
jb
pushl
mov
repnz
mov
in
dec
sbbb
sahf
or
ret
nop
mov
fstps
loope
dec
insl
sbb
jg
sti
sbb
and
aam
xchg
mov
loop
clc
mov
xchg
xchg
icebp
arpl
fwait
push
inc
popf
mov
and
push
mov
and
xchg
rolb
shl
mov
movsl
dec
and
jbe
dec
pop
out
jge
dec
sbb
add
jo
ret
adc
jo
or
cmp
loop
xchg
in
pop
mov
add
sub
movsb
rorl
mov
aas
xor
pop
ss
mov
add
adc
insb
push
mov
loop
cmp
sub
sub
lds
fidivs
sbb
js
imul
push
pusha
ja
pop
xor
lret
daa
adc
or
xor
clc
in
ss
push
ja
push
adc
lds
addr16
mov
push
add
lock
mov
movl
sahf
pop
xor
lcall
test
sbb
adc
iret
mov
aam
ljmp
mov
cmpsb
jecxz
sahf
sub
xchg
jnp
mov
out
enter
xchg
xchg
push
lea
cmpsb
push
ficoms
stos
xor
mov
clc
xchg
ret
mov
insl
mov
les
je
sbb
insl
es
or
test
sahf
call
xlat
jno
imul
mov
lcall
mov
mov
sub
rorl
sub
sub
daa
ds
mov
bswap
pop
sub
jmp
lahf
in
faddp
mov
sbb
fcomp
jmp
inc
es
imul
mov
popa
cmp
push
ficompl
push
inc
inc
jo
ss
push
shl
fdivs
mov
or
jl
pop
inc
mov
in
push
sbb
sub
jmp
and
dec
mov
test
gs
enter
push
pop
ja
fcompl
scas
and
dec
mov
addl
dec
fidivs
in
fnstenv
cmp
jecxz
lods
imulb
adc
xchg
sub
mov
push
fcmovu
xor
call
lods
xor
sub
push
pop
push
sbb
dec
add
sahf
nop
and
jns
add
rclb
push
fidivl
in
das
leave
xchg
sub
cli
in
cmp
inc
cli
cmp
int
test
adcb
in
sub
call
das
jns
adc
outsb
fsubs
mov
dec
pop
push
inc
mov
lds
xchg
test
jmp
pop
push
cmc
xor
xor
arpl
lea
mov
stos
fcomp
addl
movsb
enter
bound
js
inc
mov
mov
popf
fidivrl
das
js
lds
jmp
int3
loopne
movsb
push
stos
cwtl
int
test
adcb
xor
imul
pusha
sub
pop
fcompl
bound
lahf
or
cli
jbe
dec
xor
jo
cmp
fiadds
sub
jecxz
jmp
stos
xor
pop
cmp
xchg
sbb
dec
xchg
jecxz
add
sub
push
and
es
loopne
stc
lea
sub
gs
dec
xchg
jns
inc
jo
jp
test
xlat
fcoms
movsb
dec
shll
jnp
xchg
push
daa
fcomps
jno
push
mov
pop
mov
add
jl
sbb
adc
enter
jbe
imul
pusha
pop
cmp
setb
mov
out
push
sub
and
int3
push
add
fsubr
call
push
sbb
fdivrs
std
xchg
pop
or
ja
inc
xor
outsl
arpl
dec
jnp
out
sub
icebp
dec
ja
mov
sbb
inc
xor
push
push
call
outsb
lahf
inc
mov
addb
mov
into
and
add
jbe
adc
adc
mov
add
je
mov
and
dec
add
ja
cmp
mov
lods
call
dec
in
addr16
add
pop
scas
jnp
icebp
pop
sti
das
out
bound
mov
repnz
fisubrs
jns
lahf
rclb
mov
aaa
pop
dec
sbb
mov
and
push
int
jns
dec
lock
stc
add
iret
ss
fildll
mov
cmp
idivl
mov
bound
fbstp
stc
in
shl
mov
rcrb
pop
es
pop
inc
and
or
cmp
jb
cwtl
cmp
mov
cld
imul
out
popa
cmpsl
xchg
or
xchg
fld
xchg
cmpb
sahf
lahf
jnp
or
mov
imul
cmp
add
and
mov
mov
mov
pop
int3
sbb
scas
ret
push
mov
aaa
hlt
jmp
popa
int3
lods
arpl
pop
int
insw
pop
inc
sbb
arpl
or
pusha
bound
int3
mulb
pop
jne
loop
push
data16
pushf
fsubl
pop
call
es
lds
inc
adc
inc
and
mov
xchg
pusha
int
pop
push
inc
mov
mov
mov
xorl
out
sbb
push
xchg
xchg
std
mov
bound
mov
fwait
icebp
adc
and
mov
in
rolb
push
mov
in
fmuls
sbb
addr16
xchg
adc
leave
js
ds
xchg
filds
adc
dec
loope
inc
pushf
testb
xchg
add
pop
out
adc
adc
inc
adc
insl
hlt
ret
es
test
imul
ja
jp
jle
ja
xchg
addl
hlt
mov
lods
or
jae
or
pop
mov
mov
test
adc
sbb
pop
fidivl
inc
subb
mov
lret
cmp
shlb
cwtl
stos
insl
mov
popa
cmpb
xchg
xchg
xlat
mov
imul
pop
mov
seta
hlt
jmp
jle
ret
push
push
mov
pop
xchg
push
dec
out
push
das
aam
sub
xchg
lret
mov
mov
je
or
xchg
cld
add
in
fistpll
aam
hlt
aaa
mov
jnp
sub
mov
pop
push
push
nop
ja
or
ljmp
in
inc
and
mov
ss
or
loopne
nop
out
fs
pop
pop
iret
pop
ds
mov
lods
in
dec
test
fwait
xchg
pop
fucompp
cmp
sub
push
xor
xor
mov
pop
add
cmc
scas
mulps
lret
sarl
cwtl
rolb
rcr
lcall
mov
mov
xchg
js
mov
adcb
int3
ret
imulb
sbb
dec
mov
xchg
leave
popa
mov
xchg
dec
mov
pop
mov
pop
mov
inc
cli
sub
or
test
sbb
jl
ss
fisttps
lret
mov
cltd
xchg
or
insl
enter
fxch
arpl
add
jb
cmp
dec
xor
mov
lods
jge
dec
loope
push
jb
out
sbb
jl
mov
imul
dec
loope
cmp
arpl
fsts
jle
lcall
or
dec
sbb
dec
in
or
int3
xor
xchg
push
repnz
jns
dec
test
or
in
jae
je
out
xor
or
jae
mov
inc
adc
xor
in
lods
inc
and
pop
pop
pop
add
outsb
pusha
fisubrs
jmp
lret
insb
ja
stos
sar
xchg
xchg
sub
ret
in
aam
int
or
data16
mov
xor
jns
outsl
hlt
or
into
mov
movsl
jp
ljmp
cmpsb
xlat
aas
jl
andl
jl
fstps
addr16
jbe
and
rcrb
enter
dec
mov
into
xor
clc
jge
adc
int3
adc
inc
sub
inc
cli
test
es
mov
add
mov
loop
cmp
add
push
push
outsb
repnz
jmp
movsb
jecxz
cmpsl
mov
jbe
add
add
push
imul
cli
mov
into
xchg
push
arpl
pop
inc
data16
xchg
mov
sbb
adc
movsl
xor
fwait
in
stc
push
jg
mov
xchg
pop
push
mov
mov
sub
push
into
mov
xchg
or
or
xor
outsl
ja
fdivs
sub
aas
loopne
sti
jecxz
add
daa
xor
dec
mov
lret
or
daa
in
cld
in
and
adc
add
mov
jbe
xchg
mov
or
insl
fnstsw
and
sbb
mov
cmp
sbb
mov
rorl
sub
and
jg
stos
stos
adc
pop
fadds
dec
mov
ja
add
movsb
mov
xlat
pusha
cmc
mov
jg
std
je
rcll
jg
movsb
sub
repz
push
adcl
adc
adc
mov
ret
fcoms
mov
cltd
repnz
enter
mov
aaa
scas
mov
mov
add
subb
jle
add
cmp
cmpsb
jg
cmpsb
mov
mov
aad
test
cmpsl
aad
sub
rolb
sbb
bnd
fwait
roll
push
and
scas
xor
arpl
pop
sub
inc
mov
aad
popa
rolb
mov
lds
add
push
repz
jae
clc
ret
pop
imul
lret
addr16
xchg
jecxz
iret
mov
ljmp
or
lock
testb
fxch
popa
inc
push
out
shll
scas
jg
mov
xor
lret
push
mov
pop
pop
cld
scas
clc
dec
adc
and
mov
cmp
cltd
push
shrb
out
stc
nop
and
es
shlb
xor
ret
jae
or
mov
sti
pop
xchg
sbb
aaa
jbe
adc
cmp
jo
xchg
leave
add
and
lods
fbld
iret
lds
push
jle
pop
or
ljmp
in
and
outsl
div
push
adc
inc
dec
pop
dec
rcrb
js
cli
and
mov
into
sub
mov
out
mov
jle
bound
rcrb
mov
jb
cli
pop
outsl
es
add
push
jbe
pop
stc
leave
pop
or
pop
ds
in
lods
fimull
mov
dec
push
jp
data16
jno
and
call
and
scas
popf
jnp
stc
neg
dec
jge
loopne
xor
inc
mov
loop
je
mov
cmp
sahf
test
add
fildll
lret
aaa
inc
sub
imull
test
and
icebp
cmp
setle
push
and
hlt
push
jne
jo
rcll
or
pop
mov
mov
and
sbb
mov
int3
push
in
rcrl
mov
loopnew
dec
imul
sarl
pushf
in
neg
popa
bound
xor
aad
xor
mov
arpl
arpl
or
loop
es
mov
scas
movsb
nop
or
insl
cmc
in
cmpsl
incl
mov
jmp
cwtl
iret
mov
mov
dec
enter
in
nop
push
bound
and
ja
jb
pop
cmp
add
dec
lret
pop
movsl
rcpps
jns
and
jmp
push
ror
test
popa
sbb
or
adc
jo
xor
insl
dec
into
ret
mov
mov
cld
fsubl
and
out
sti
adcl
cld
cmp
idivl
pop
jns
mov
jb
insl
fidivs
test
bound
add
ret
cs
ja
jno
mov
jae
in
stos
or
cld
add
in
test
lcall
roll
fwait
outsl
mov
outsl
ret
push
nop
rclw
jmp
xchg
pop
inc
std
lods
mov
dec
xor
sub
xor
mov
jp
js
and
sbb
and
jo
out
imul
sub
mov
mov
cmp
cmp
sbb
cs
popf
dec
ja
imul
data16
call
mov
mov
or
ljmp
jns
fldcw
jle
mov
repz
enter
clc
loopne
es
daa
jp
in
call
jae
jge
push
insb
pop
ja
dec
mov
mov
dec
fs
aas
rcll
or
stos
loope
cs
push
repz
xchg
sub
cmp
test
clc
or
jae
xor
fsubl
stos
cmp
or
jl
xchg
pop
mov
and
dec
add
les
inc
mov
mov
mov
gs
push
pop
rcrb
clc
xchg
mov
xor
dec
sbb
cmp
es
dec
add
fidivs
fbld
popf
add
xchg
push
fcmovne
popf
lock
cmp
cld
lahf
and
out
cmpsl
cld
dec
push
out
sbb
push
sub
mov
out
cmp
cs
jg
das
push
xchg
sub
mov
xchg
lret
or
shl
js
shlb
pusha
rcrl
faddl
dec
xchg
js
int3
pop
push
test
dec
push
xor
push
xor
dec
xchg
scas
ja
lahf
adc
out
leave
xchg
loope
lret
lods
or
fcomi
sub
mov
sar
sub
repnz
fisubrs
mov
add
mov
and
lods
icebp
cltd
push
push
push
sub
movsb
rclb
adc
addr16
call
xor
or
pop
outsb
sub
in
jp
lods
sub
push
in
pusha
adc
outsl
in
and
int3
pop
bound
mov
popf
mov
in
dec
push
mov
in
les
and
cmc
insl
pop
cmp
fwait
je
ficoml
iret
sub
add
std
sbb
mov
inc
das
lock
int3
scas
lds
stos
loope
data16
je
test
and
std
rcrb
ds
lcall
fcoms
sti
in
shll
scas
scas
call
andb
jbe
out
bound
insb
xchg
inc
ss
mov
xor
in
push
sbb
xchg
jmp
mov
call
cli
fisubl
fisttpll
mov
jl
lds
push
shlb
sub
jl
jl
lcall
hlt
call
xchg
cmp
pushf
pusha
clc
cltd
mov
push
and
mov
inc
adcb
mov
cs
movsl
mov
push
ret
leave
int3
mov
mov
dec
mov
into
cmp
jg
jno
fisubl
dec
xchg
pop
dec
jmp
in
push
scas
cwtl
inc
pop
sar
push
xchg
mov
movsl
ss
mov
fcmovnbe
popa
sti
fildl
mov
or
cmp
imul
sbb
decb
rcll
out
mov
and
insb
inc
xchg
fs
aam
add
notl
push
jb
rcrb
pop
ljmp
ljmp
xchg
mov
mov
or
add
fistpll
lea
xlat
jb
push
mov
flds
loop
and
adc
mov
cmp
bound
fistpll
pusha
sbb
cmpsb
cmp
jp
out
inc
dec
imul
or
loop
cltd
add
jne
gs
add
xor
out
lcall
push
jno
xor
and
repz
dec
outsb
dec
clc
ds
scas
icebp
and
pop
test
push
jl
lcall
fadds
push
sahf
and
aas
cmc
pushf
repnz
push
pop
lods
and
mov
jae
into
imulb
daa
mov
icebp
cwtl
xchg
mov
psrlq
push
insl
cwtl
shl
xchg
adc
jo
mov
and
cmpl
movsb
dec
and
inc
sbb
imul
xchg
mov
inc
out
sbb
xchg
movsb
leave
in
es
jle
cli
add
jge
out
pop
push
call
cmpsb
stos
push
das
notb
dec
icebp
enter
mov
sbb
push
push
nop
ret
ffree
xor
cld
aas
jp
sbb
arpl
inc
dec
push
test
int3
cli
fidivrl
test
test
sub
xchg
sub
imul
loopne
inc
mov
aam
pushf
ss
push
cli
in
pusha
mov
inc
lods
ss
and
add
pop
sbb
mov
mov
mov
pop
xchg
mov
mov
mov
test
aas
aam
add
mov
test
mov
aam
cs
rcrl
shl
cmp
lcall
push
js
sbb
iret
pop
pusha
xchg
jg
xchg
lds
into
stos
push
imul
cmp
pop
out
xor
aas
cs
fsubrp
push
lods
shll
pop
pop
mov
repz
divl
fld
stos
arpl
test
cs
mov
mov
add
pop
adc
test
jge
loop
movsl
loope
dec
and
jmp
lods
lods
inc
sub
std
cltd
cld
jae
pushf
pop
ret
jb
jb
lods
and
cmp
mov
and
dec
jl
xor
adc
sub
push
xchg
in
js
les
enter
mov
dec
jmp
sub
sbb
loope
and
popa
xchg
repnz
push
ret
test
idiv
clc
jmp
or
inc
xor
mov
adc
gs
inc
pop
dec
imul
or
mov
shrl
mov
xchg
mov
mov
mov
push
mov
in
or
test
mov
rcr
cmp
leave
sub
mov
add
out
inc
xor
aas
add
stos
adc
or
mov
mov
dec
in
repz
mov
nop
aaa
movsl
add
rol
dec
or
loopne
hlt
sub
movsl
dec
mov
les
push
mov
nop
subl
or
cmpsb
pusha
ret
pop
xor
inc
mov
test
mov
and
loope
and
or
cmp
fistpll
mov
xor
rcrb
rcrb
dec
push
jb
xlat
lods
and
or
xchg
sbb
add
sbb
into
or
or
pop
mov
stc
movsb
sarl
xor
std
jo
add
pop
pop
loop
push
add
add
sbbl
gs
jbe
je
frstor
lods
add
addr16
adc
nop
mov
or
mov
dec
mov
fstps
adc
pop
xor
pop
pushf
shr
popf
push
xchg
or
cmpsb
call
sbb
mov
dec
dec
push
ror
lds
push
xor
sbb
or
add
cmp
mov
test
cmc
test
or
jmp
push
stos
repz
aaa
jmp
mov
mov
push
jmp
js
shll
add
jp
push
add
and
dec
jecxz
push
addb
out
js
shrb
mov
imul
test
outsb
and
aas
mov
lock
xchg
sbb
aad
into
bound
push
inc
dec
aam
cs
ret
sti
jno
adc
outsb
inc
push
cwtl
xor
mov
xor
jl
mov
sbb
sbb
push
sub
mov
dec
leave
push
sub
loopne
addl
jecxz
insb
out
popa
xor
std
dec
pop
and
mov
lahf
sub
add
or
imul
popf
int3
leave
movsl
fnstsw
leave
xor
and
stc
xchg
fs
sbb
xbegin
or
xor
push
loope
and
int3
aas
mov
push
mov
and
jp
daa
mov
xchg
movsl
xchg
push
lret
je
mov
std
dec
xor
and
test
push
add
std
mov
dec
std
cmpsl
pop
fbld
adc
xchg
mov
insl
adc
out
mov
enter
adc
xor
push
jg
jg
inc
es
jge
adc
mov
dec
mov
mov
pop
int3
enter
jbe
cmp
addr16
push
adc
xchg
movsl
sub
xchg
push
call
inc
test
arpl
fadd
push
adcl
pop
lods
push
mov
mov
pop
or
xchg
movsl
mov
ljmp
sbb
icebp
push
sub
insl
jns
xchg
ja
inc
push
dec
sbb
and
push
rcrl
pushf
sub
outsb
jmp
sub
frstor
ljmp
dec
and
jle
mov
jge
sarl
clc
movsl
inc
sub
iret
pop
dec
stos
jp
scas
mov
adc
pusha
icebp
push
out
lods
pusha
bound
js
and
je
pusha
aam
out
enter
jge
inc
ja
push
ret
inc
inc
and
xchg
jo
sti
sarb
js
mov
jo
push
mov
out
cmp
daa
cmpsl
xor
pushf
stos
pop
mov
dec
loopne
jb
mov
dec
or
or
inc
out
push
pop
popf
in
in
jmp
movsl
sbb
push
insl
mov
in
or
push
jp
sbb
rorb
stos
mov
dec
data16
adc
lods
mov
sahf
ljmp
sbb
call
xchg
jge
push
and
addr16
mov
xchg
push
loopne
inc
sbb
insl
cwtl
sub
and
or
mull
adcb
mov
fcomip
jmp
inc
lds
add
xchg
and
fiaddl
xor
in
add
clc
test
les
fs
das
loope
sbbl
push
aaa
ret
ljmp
outsl
mov
das
insl
push
das
jle
pop
sahf
mov
pop
push
lods
dec
cmp
sub
dec
rorl
push
mov
push
lea
add
and
dec
mov
out
push
pop
out
nop
xchg
jmp
sub
jb
imul
add
fadd
out
fisttpll
mov
pop
mov
divb
idivb
in
ret
xchg
cmp
mov
test
ret
jg
lods
dec
mov
xchg
orb
jnp
pusha
out
aam
cmpsb
aaa
push
dec
call
pop
or
xchg
cmp
cltd
ljmp
test
ret
mov
or
pop
mov
cmc
mov
lahf
push
roll
xchg
mov
inc
pop
lcall
mov
insb
incl
notb
cltd
test
mov
enter
ret
leave
xor
jne
xchg
lods
push
xchg
xor
and
and
into
dec
add
shlb
push
jecxz
clc
cmpsl
ret
repz
mov
xlat
iret
xchg
cmpl
aas
adcb
fidivrs
jge
adc
int3
scas
xchg
sub
call
je
xlat
jno
inc
cmp
dec
or
fcmovu
imul
inc
jnp
sub
jge
sbb
xchg
push
push
fmulp
popa
xchg
push
mov
mov
fisttpl
aaa
add
mov
lods
and
insb
popf
adc
cs
in
or
and
rorl
pop
call
movsb
lea
mov
std
in
inc
int3
mov
shll
mov
push
fdiv
dec
out
mov
or
or
insb
cli
push
mov
call
dec
mov
mov
ljmp
lock
pop
sbb
rcrl
test
shll
xor
inc
and
jp
sub
lods
lret
lret
jae
cmp
mov
aaa
cltd
sarb
fwait
mov
push
sbb
jge
fdivrl
iret
pop
dec
fistl
inc
inc
sbb
xor
mov
test
sub
ret
mov
aas
les
outsl
or
push
addr16
es
or
sbb
cmpsl
mov
pop
fs
mov
cmc
shlb
test
loope
pop
push
push
mov
cltd
cltd
xchg
test
sub
lcall
push
jl
mov
stos
mov
aaa
imul
ds
dec
cld
mov
in
ret
inc
mull
mov
popf
add
shl
insl
insl
lock
xchg
mov
imul
cwtl
fstpt
adc
push
cwtl
or
movsb
cmp
xor
mov
cmpsl
into
ljmp
cld
push
bound
push
sub
jmp
test
mov
pop
adc
xchg
aaa
ret
pop
jnp
fs
xchg
xchg
das
rol
test
outsl
mov
push
xchg
xchg
out
mov
pop
pop
std
pop
out
mov
cltd
dec
pop
mov
mov
mov
aas
adc
push
cmc
jge
rdmsr
pop
cmp
mov
aaa
inc
insl
daa
mov
mov
fstl
loop
lea
sub
xor
push
adc
outsl
lea
pop
cs
sub
sysexit
jo
inc
dec
dec
imul
jmp
enter
mov
cli
je
imul
fnstenv
pusha
fimuls
adc
xchg
inc
les
and
jl
xchg
cmp
loope
sbb
movsl
sub
pop
sub
mov
arpl
jo
push
pushf
out
mov
shll
leave
test
stc
icebp
adc
xchg
stos
push
hlt
lea
dec
cmpsb
and
add
movsl
out
lods
add
les
pushf
cli
shl
lret
loope
cltd
jecxz
fistpll
dec
pop
ret
pushf
out
sahf
pop
or
mov
xor
xchg
je
sbb
cmpsl
and
mov
mov
mov
xor
xchg
mov
aas
scas
push
inc
or
inc
add
stos
xor
cld
or
cmpsb
outsl
int
cli
inc
push
gs
mov
pop
jbe
push
jns
xor
test
out
in
cmpsl
ljmp
add
xor
mov
pop
adc
fsubr
fnstenv
dec
outsl
xchg
push
cld
push
and
cmp
xor
adc
aaa
pop
bound
mov
pop
xchg
inc
mov
jecxz
sub
sub
xor
mov
sti
movsb
and
cmc
xlat
fcomip
shr
inc
rolb
in
insb
sub
push
sub
hlt
ret
xor
jge
jmp
fwait
push
loopne
push
jmp
int3
dec
imul
jl
aas
mov
adc
xchg
push
bound
dec
js
mov
xchg
test
lock
jg
shl
add
dec
cltd
adc
push
sub
xchg
pop
or
pop
xchg
mov
lods
mov
add
stc
scas
fmull
jb
xchg
lret
outsb
jmp
bound
mov
inc
adc
insb
xchg
mov
xor
out
push
xchg
sub
inc
push
mov
sbb
es
sbb
sbb
dec
ss
daa
push
add
mov
popa
jle
rcl
mov
inc
lods
xlat
rorl
test
lahf
int3
xor
fiadds
xor
cmp
jmp
movsb
inc
test
mov
shrl
inc
xchg
and
rclb
stc
mov
inc
fs
in
dec
add
subl
pop
int
adc
adc
mov
outsb
xchg
and
shr
shll
dec
inc
mov
idivb
mov
loopne
lods
mov
mov
lcall
inc
mov
aas
les
xchg
pushf
test
and
jmp
mov
mov
icebp
fisttpll
push
rolb
aas
out
push
xchg
mov
mov
test
mov
mov
dec
repnz
pop
adc
daa
add
inc
lcall
test
repnz
xor
jae
aam
int
xorl
mov
adc
jge
fstps
mov
adc
arpl
je
push
ljmp
leave
pop
cmc
fs
pop
push
incl
scas
add
fwait
dec
jmp
sub
test
inc
xchg
mov
inc
add
inc
call
jns
mov
push
sbb
int
cmpsl
das
inc
dec
bound
in
inc
imul
in
add
imul
dec
xchg
movsb
mov
loopne
cmp
pushf
pop
adc
jae
shlb
out
mov
pop
addr16
push
xlat
push
mov
and
pop
outsl
out
jmp
hlt
outsl
fld
mov
cmp
not
pop
add
pusha
imul
pop
push
fstpl
mov
xchg
jb
sub
jbe
popf
test
add
sbb
out
adc
clc
pop
adc
imull
push
clc
or
jge
pop
and
popf
test
push
and
mov
int
lcall
orl
dec
xlat
xchg
repz
pop
jmp
clc
cmpsl
imul
mov
push
jmp
fisubrs
fs
out
notl
cmp
jo
mov
jb
jle
xor
stc
ret
pusha
fdivrs
mov
xchg
or
cmovnp
mov
push
int
rcrb
xor
jmp
shrl
inc
add
clc
aas
push
mov
into
aaa
push
data16
aad
ja
stos
fisttps
pop
cltd
mov
cld
int
sub
ret
and
inc
int3
or
mov
orb
pop
mov
in
in
pop
mov
and
lds
pop
jecxz
jmp
aas
mov
push
mov
sub
jge
dec
lret
ljmp
sbb
xchg
popa
sar
rorl
cmpsl
jno
mov
mov
xor
shrb
mov
pop
in
clc
test
push
mov
push
or
data16
gs
inc
lods
or
adc
iret
pop
or
fsub
sbb
dec
jecxz
gs
adc
inc
outsl
add
cmc
sub
push
outsl
mov
pop
sub
in
mov
sub
cmp
jnp
dec
inc
jecxz
inc
loop
rorb
xchg
or
dec
into
std
lods
les
inc
mov
inc
pop
inc
mov
in
addr16
inc
xchg
enter
repz
adc
mov
jo
dec
insb
fsubr
in
sub
add
dec
push
dec
pop
mov
test
push
aas
cmpsb
dec
jns
inc
dec
sbb
adc
fsubl
sub
das
repz
inc
cmp
dec
push
adc
inc
fcmovnb
push
test
xchg
adc
mov
fidivl
int3
rclb
ret
adc
push
xchg
xchg
in
dec
xchg
jo
mov
jne
fs
sbb
nop
out
cmp
mov
and
jne
xor
test
loop
loope
inc
jbe
shr
jbe
sub
clc
mov
sub
aad
in
adc
mov
ret
adc
jb
fildl
fiaddl
jno
push
jl
push
xchg
cmpsb
sub
int
adc
jg
xchg
out
xor
pop
aam
pop
inc
jge
dec
mov
cmp
shl
orb
outsl
add
dec
xor
and
cwtl
mov
adc
mov
fidivrl
jge
xor
out
pop
dec
mov
push
in
outsb
jmp
addr16
aaa
cmpsl
mov
dec
je
mov
xchg
ljmp
xor
mov
mov
push
dec
mov
push
push
xor
sbb
es
jae
lds
dec
push
jb
sub
iret
stc
test
jmp
xorb
insb
cmpsb
shrl
daa
loop
movsl
pusha
inc
xor
inc
fld
subl
cwtl
repnz
cmc
sarl
xchg
lahf
dec
sub
outsb
push
stos
push
push
push
aaa
mov
in
sub
pop
fsubr
inc
mov
shl
cmpsl
in
call
mov
xchg
js
dec
pop
aam
popf
hlt
sub
cmp
mov
mov
int3
lock
stc
ljmp
shlb
cmp
adc
sub
jo
sahf
cmp
and
inc
pop
lret
in
dec
int
in
repz
cld
insb
mov
mov
xor
dec
lds
out
cltd
into
inc
mov
enter
inc
pop
inc
enter
and
test
call
pop
mov
leave
out
icebp
xchg
pop
rorb
xor
in
mov
lret
cwtl
cmp
inc
pop
jge
int
inc
fs
cld
xor
push
aaa
cwtl
add
pop
inc
repnz
pop
xor
inc
mov
mov
popa
test
test
or
mov
aas
inc
fcmovu
pop
inc
rcl
popa
add
lret
notl
dec
or
loop
cld
jge
mov
mov
int3
mov
sti
xchg
fs
filds
adc
cmp
pusha
fstl
test
scas
mov
pushf
and
mov
push
jl
fnsave
inc
push
mov
rcrl
dec
xchg
lea
push
push
xchg
adc
imul
add
loop
icebp
test
stos
out
lds
mov
pop
cli
aas
adc
jl
sub
out
pop
inc
push
in
adc
out
mov
push
jmp
icebp
xor
cmp
sub
and
in
lock
sti
xor
pusha
xor
sti
dec
stos
fidivrl
xlat
inc
inc
add
js
test
xor
dec
jmp
dec
dec
fwait
sbb
insb
in
aas
mov
jge
fadd
or
adc
inc
into
mov
mov
pop
jg
jmp
mov
sub
imul
pop
push
ds
pop
dec
hlt
mov
or
mov
cmp
push
in
repz
cmp
push
test
ljmp
push
mov
mov
push
aad
jle
push
sbb
push
mov
xor
repz
mov
hlt
ds
fs
xchg
mull
stc
and
les
xchg
pop
xor
scas
rclb
mov
je
fsubs
xchg
lods
cmp
adc
adc
stos
cld
sub
test
aam
push
add
dec
xchg
mov
test
popa
lret
rcr
fldl
mov
mov
dec
inc
cmpsl
mov
clc
and
adc
xchg
cmp
test
popf
mov
int3
pushf
in
dec
push
bound
movsb
cmpsb
mov
cmpsl
push
fisubrl
mov
sub
sbb
nop
rcrb
lods
ret
push
xor
lret
cmp
mov
outsb
das
test
and
cmpsl
imul
xchg
leave
loopne
outsl
fcomip
mov
iret
fcmovnu
xchg
adc
xchg
cmp
sbb
jmp
xor
adc
cmp
roll
arpl
push
arpl
sub
sbb
jle
push
dec
stos
pop
adc
jmp
insb
mov
jns
sbb
iret
fdivrs
and
shr
testl
push
mov
in
push
fmul
mov
movsl
test
test
jns
sbb
jge
jns
add
jbe
mov
or
or
mov
mov
add
imul
jl
fs
mov
or
rcrl
loope
push
je
push
jbe
xor
xchg
repnz
mov
stc
mov
pop
mov
xlat
jmp
dec
pop
pusha
out
cmc
and
cmp
lock
addr16
iret
in
dec
pop
fs
dec
out
mov
jno
bound
dec
push
sbb
dec
call
mov
adc
push
mov
mov
mov
mov
std
subb
clc
orl
add
mov
in
push
mov
arpl
sbb
cmp
mov
xlat
out
in
dec
fwait
mov
inc
cmp
lea
je
xchg
es
in
xchg
dec
movsb
sarb
adc
in
ret
pushl
jl
sub
xchg
cmpsb
push
inc
push
sahf
lcall
shrl
into
sub
inc
popa
jmp
pusha
mov
xchg
adcl
mov
pop
xchg
mov
out
adc
mov
cltd
pop
sub
data16
xchg
xchg
dec
imul
cmp
cmp
fnop
jae
movsb
and
jle
in
dec
loop
fidivs
mov
leave
add
mov
push
int
aad
adc
add
shll
dec
mov
in
lds
xor
adc
and
movsb
xor
pop
mov
lods
js
xchg
repz
sbbl
inc
jnp
xchg
imul
inc
mulb
cmp
addr16
jbe
sub
nop
xor
bound
mov
call
popa
loopne
add
gs
popa
cmpsl
cmp
jae
call
inc
js
cmpsl
and
xchg
lods
int3
lea
daa
cmc
xlat
bound
push
mov
stos
mov
cmp
xchg
xor
inc
fwait
mov
xchg
ret
inc
call
pop
decl
dec
rcll
pop
sbb
cmc
mov
or
stos
ret
xor
pop
cmp
mov
lods
sahf
xor
and
or
push
jl
or
push
pop
test
mov
in
inc
fs
enter
movsl
cld
adc
sub
xor
pop
scas
dec
xor
mov
leave
mov
and
or
dec
mov
push
enter
pop
js
mov
xchg
jae
and
aaa
in
out
or
jle
and
adcl
loopne
pop
and
rcr
pop
xchg
hlt
lahf
in
add
shl
int3
aad
mov
mov
pop
dec
xchg
js
jle
jmp
inc
jno
ljmp
insl
enter
ret
aaa
mov
in
cmp
fnstenv
clc
in
lods
ja
xor
mov
dec
mov
aas
scas
leave
fidivl
ss
test
xchg
aad
push
jnp
fwait
mov
iret
addr16
mov
or
hlt
push
mov
inc
adc
dec
add
repnz
sahf
and
faddp
and
jbe
fs
incl
mov
xchg
cwtl
lcall
lcall
pop
lods
adc
loopne
jbe
pop
aas
or
and
loopne
in
test
cmp
push
push
iret
pop
mov
mov
lea
pop
and
xor
or
orb
push
mov
push
sbb
popf
lret
mov
xor
fdivrp
jnp
fsubr
clc
cmp
mov
ficoms
loopne
push
mov
add
mov
test
xor
cmpsl
nop
or
or
cmp
fadds
sub
ljmp
fwait
cmp
mov
sbb
or
pusha
adcl
icebp
jge
inc
sbb
movsb
mov
sub
aad
jne
pop
not
fucomip
mov
loop
pop
cmpsb
pop
sbb
and
test
cltd
jle
adc
cmp
sub
or
pop
push
mov
or
popa
mov
scas
mov
inc
pop
std
adc
push
pop
aam
stos
or
daa
cmp
mov
arpl
xchg
arpl
movsb
mov
pusha
mov
xor
pushf
jno
test
push
mov
bound
sbb
jbe
mov
enter
scas
imul
lret
inc
push
int
add
xchg
cmp
or
sub
aas
sbb
inc
inc
test
std
repz
push
andb
or
and
fimull
cwtl
add
mulb
notb
xorl
sbb
in
mov
cld
cmp
mov
xor
fbstp
and
repnz
push
fldcw
fisubrs
pop
pop
lahf
xor
dec
mulb
mov
mov
lret
std
xor
mov
inc
int
mov
add
push
mov
lods
int
dec
add
mov
ficomps
sub
pop
push
add
sub
adc
mov
insl
stos
jae
mov
xchg
xor
subb
in
add
and
sbb
aad
mov
mov
ljmp
daa
outsb
jg
test
lret
jno
pop
xchg
cmp
xchg
mov
cmpsb
sub
push
cld
cltd
cmp
xchg
mov
and
lds
imulb
cmpl
in
or
mov
add
leave
xchg
outsl
je
es
jg
cmp
xchg
jnp
idiv
std
mov
clc
or
lahf
daa
push
es
imul
jl
jecxz
push
fisubrs
xor
xor
mov
arpl
ljmp
fstpt
adc
outsl
subb
jp
jg
and
add
cwtl
shl
call
and
push
pop
cltd
or
mov
push
mov
adc
sub
imul
into
fs
adc
mov
fnstsw
ds
pop
pop
test
pusha
movups
dec
mov
or
icebp
lret
test
and
push
and
fstl
lea
cmp
xchg
ss
or
jg
daa
cmp
in
mov
stos
lret
or
stos
adc
shld
ja
loopne
popf
or
pusha
mov
adc
test
out
outsl
testl
test
daa
cli
cltd
jmp
jl
xchg
sbb
clc
ret
lahf
jle
adc
mov
push
cmp
inc
mov
mov
out
jl
mov
cli
fdivrs
scas
xor
lret
insb
mov
shl
jp
jae
add
cmp
stos
dec
loop
std
dec
iret
daa
and
or
out
sahf
push
push
test
sub
lea
cmp
in
xchg
mov
dec
aam
int3
lock
xchg
fisubrs
xchg
popf
sahf
insb
out
lret
cmp
stos
mov
fcmovnu
push
jl
xor
pextrw
jae
mov
fisubrl
inc
xor
push
fstl
fisttpl
sti
out
roll
or
dec
in
mov
sbbl
cmp
mov
call
jo
lcall
sub
loopne
cltd
jnp
stc
insb
cmpps
mov
nop
sahf
dec
inc
pop
sahf
xorb
pop
ljmp
mov
push
mov
lds
jle
fs
xchg
repz
jmp
fs
jae
push
insl
cmpsb
add
mov
adc
mov
incl
sub
imul
jb
jns
loop
hlt
mov
or
adc
jg
jb
fwait
add
jae
jmp
dec
ljmp
sub
mov
xor
jecxz
dec
insb
shlb
dec
insl
mov
insl
imul
outsl
jecxz
and
xor
sahf
xorl
loopne
mov
js
inc
adc
push
jo
or
hlt
ds
jecxz
sbb
adc
or
inc
cmovns
icebp
push
pop
leave
enter
popf
data16
adc
ret
in
pop
popa
pop
adc
in
inc
add
mov
inc
inc
jp
leave
out
outsl
and
mov
lret
xchg
adc
xchg
jecxz
mov
iret
pop
rcr
cmp
jecxz
jbe
inc
fwait
push
or
int
pop
cmpsb
cmp
jb
inc
cmp
shld
push
mov
jns
push
ret
inc
lcall
jno
sub
jno
push
and
fisttps
xor
xor
push
mov
xchg
or
jne
insl
in
dec
out
jmp
fildl
popa
mov
xorl
mov
push
lcall
notb
mov
push
push
push
jg
js
ret
sahf
xchg
stc
insb
sbb
mov
js
outsl
sbb
int
data16
stos
sarb
stc
jmp
inc
sbb
adc
out
xor
push
mov
pop
cmc
or
in
push
cmc
movl
adc
fstps
and
xorb
in
dec
xchg
pop
subl
fiaddl
ffree
scas
cwtl
jo
in
stos
imul
jle
cli
sub
fldlg2
sti
xchg
inc
xchg
xchg
pop
and
cltd
mov
jmp
stos
and
in
int
icebp
out
test
int
rcrb
stc
xor
je
jmp
addl
leave
stc
lock
bound
inc
adc
mov
mov
jae
mov
scas
mov
aam
pusha
into
xchg
push
push
adc
add
shlb
mov
insl
int3
lret
test
sub
add
adc
lds
ss
pop
xchg
pop
xor
mov
and
lahf
leave
pop
lock
cmp
out
push
subl
fdivr
mov
sti
addr16
pop
pusha
enter
insb
pusha
sbb
icebp
cmpsl
xchg
lahf
out
scas
jo
lock
lea
pop
movb
mov
xchg
cmpsl
sub
loope
fildll
in
push
dec
ficoml
lcall
andl
cmp
aam
pop
mov
add
sbb
mov
push
int3
mov
sbb
add
mov
jecxz
sub
xor
imul
mov
je
add
mov
add
mov
es
fiadds
aad
xor
in
icebp
nop
repz
out
lock
hlt
fwait
cmp
jno
fmul
sub
or
mov
stos
ja
imul
out
rcrb
popf
call
add
jno
xchg
add
adc
jge
add
jae
push
pop
push
aad
push
sub
in
xor
imul
xchg
test
enter
mov
mov
cltd
sbb
add
imul
cmp
mov
cmp
lcall
cmp
mov
sbb
adc
push
out
inc
mov
or
mov
leave
dec
jge
xor
add
adc
sbb
cmp
xchg
cmp
mov
cmp
aas
fbld
mov
cmp
enter
push
in
data16
int3
xchg
js
jmp
fstl
xor
sahf
movsl
sbb
mov
test
add
ja
jg
add
iret
inc
fidivrs
and
mov
add
notl
cmp
mov
jge
sub
ret
xor
sub
lret
pop
push
sbb
stos
mov
stos
pop
sbb
push
xor
pop
and
mov
mov
stos
and
push
lcall
cmp
pop
jp
subb
insb
mov
xlat
push
sub
xor
pop
in
clc
int
ljmp
dec
stos
aaa
aad
mov
pop
push
iret
xchg
adc
in
sbb
mov
test
ds
jge
pop
or
jecxz
fmuls
stos
dec
ss
mov
inc
mov
push
fmull
sbb
inc
jno
xchg
sbb
sub
or
popl
xchg
rorb
icebp
pop
icebp
inc
test
loop
or
out
rcrl
loop
xchg
rclb
pop
popa
lret
jns
jmp
cmp
jnp
shll
cld
cmp
lea
pop
out
dec
or
mov
mov
jae
lret
xor
cmp
stos
and
das
test
and
push
push
xchg
stos
add
sbb
std
xchg
push
ja
pop
jge
and
adc
lret
mov
xchg
xchg
fsubl
divb
cmc
xchg
adc
arpl
rcr
lea
cmp
outsb
std
inc
push
imul
inc
mov
sar
or
scas
mov
inc
enter
sub
aad
adc
outsb
ss
lcall
sbb
ret
push
pop
scas
test
lcall
fcoms
ja
gs
push
add
clc
pop
ret
mov
cli
add
ljmp
jmp
mulb
rcll
outsb
inc
xor
pop
push
cld
xchg
cltd
ljmp
sub
jns
mov
shlb
out
inc
int
fwait
ret
sub
xchg
sbb
aad
push
push
xor
cmp
jg
dec
add
jle
cltd
ret
test
ret
or
xchg
pop
dec
mov
lods
and
mov
adc
aam
mov
ljmp
aad
ret
nop
lahf
les
xchg
pop
pushf
inc
dec
or
and
aas
push
in
xor
xchg
jg
pop
cmp
stos
mov
pushf
or
aaa
sub
xor
out
loope
ret
mov
and
add
push
rclb
into
pop
insl
sbb
loope
xchg
shr
lcall
fs
je
shr
push
mov
mov
add
push
xchg
fsubl
stos
shll
pop
or
or
scas
sub
sar
sub
jg
mov
mov
aam
xchg
nop
repz
mov
fstl
and
sub
pop
nop
and
fwait
pop
jbe
push
mov
pusha
xor
incb
mov
cld
jb
hlt
lcall
in
in
sti
jno
shr
incl
movsl
out
mov
pop
adc
imul
gs
pop
push
push
xchg
or
jns
rcll
sahf
jecxz
adc
addb
int3
inc
cld
ss
cmpsl
nop
std
es
sub
or
mov
cwtl
daa
repnz
xor
pop
movsl
jae
cli
xchg
sbb
jb
addr16
jle
or
imul
inc
fisubs
mov
or
mov
cmp
add
mov
outsb
or
mov
xchg
pushf
into
push
pusha
leave
pop
sub
call
cltd
xchg
push
shll
and
outsl
call
xchg
mov
sbb
loopne
mov
in
or
inc
in
pop
push
mov
aad
imull
xchg
scas
lret
cwtl
aam
mov
pop
mov
and
inc
sbb
sahf
push
aam
sbb
dec
jle
repz
mulb
sub
adc
stos
aas
xchg
or
sbb
jbe
sbb
or
and
push
inc
clc
xlat
les
adc
jbe
and
stos
inc
jge
jl
cmc
daa
loopne
jg
imul
jbe
pusha
sbb
loopne
mov
in
pop
in
inc
push
fidivrs
pop
sahf
cmpsl
inc
jbe
ss
in
adc
xchg
xor
mov
adc
sbb
in
mov
jge
jae
sbb
sub
out
jne
outsb
stos
pusha
and
xor
pop
push
mov
das
aad
ljmp
loopne
push
je
xchg
xorb
ss
inc
add
les
add
mov
pop
cli
fstpt
xchg
mov
cwtl
fdivr
xor
in
push
iret
mov
jbe
pop
mov
sub
xchg
shll
cmp
sub
dec
repz
adc
xor
cmp
inc
inc
cmp
lcall
sarl
jmp
mov
jmp
scas
jmp
push
cmp
mov
mov
pavgw
leave
dec
jge
xor
mov
std
mov
mov
push
mov
cmp
into
mov
aas
stc
sub
sbb
repnz
or
pop
daa
leave
fs
add
pop
push
cltd
sub
jp
inc
movsb
loope
push
jmp
bound
and
pop
jbe
outsb
mov
xchg
xchg
dec
or
sbb
pop
xchg
mov
jbe
stos
dec
or
loopne
int
lods
imulb
mov
mov
inc
ret
or
mov
aam
ljmp
stos
sahf
outsb
xor
fcmovnu
xchg
mov
je
shlb
dec
call
leave
sbb
lret
push
clc
cwtl
mov
cmpsb
push
mov
insb
mov
aas
xor
mov
add
or
xor
loopne
xchg
mov
movsb
mov
pusha
loop
xchg
je
cltd
mov
xchg
call
xor
push
jo
sti
lock
sbb
jo
enter
dec
data16
mov
es
fimull
fmull
cmp
sub
fucomi
xor
test
cmp
or
test
popa
jno
or
out
jmp
cmp
sub
and
inc
jns
inc
mov
mov
adc
sbb
scas
test
pop
aaa
jecxz
lods
ss
jmp
imul
fnstcw
xor
dec
stos
dec
push
hlt
push
mov
in
jge
add
pop
xchg
iret
and
in
sbb
std
add
call
cmp
inc
adc
cmpsl
pop
or
shlb
repz
lret
cmp
mov
mov
sub
push
cmpsl
into
je
enter
jle
sbb
xchg
and
scas
adcl
lea
pop
push
imul
and
mov
xor
lods
pop
jne
lret
mov
test
out
orb
sbb
mov
outsl
lret
pop
jo
lods
inc
push
in
and
and
bound
mulb
pop
mull
out
jae
out
add
fsubr
lea
dec
pop
sbb
sub
repnz
cmp
push
jecxz
adc
sub
ss
mov
xchg
pop
dec
ret
inc
add
mov
into
mov
pop
cltd
mov
pop
cltd
lods
test
cltd
lcall
mov
and
test
push
mov
mov
div
test
mov
into
bound
and
jmp
ret
shll
loopne
jecxz
arpl
push
fadd
enter
mov
cmc
mov
clc
mov
xlat
fwait
add
push
mov
imul
ds
jmp
inc
mov
mov
jge
push
pop
test
lret
aad
or
jno
pop
nop
and
xchg
jp
dec
sub
mov
into
mov
cli
dec
enter
and
ror
dec
sub
xchg
sub
mov
mov
add
lods
clc
push
in
inc
test
push
mov
pop
or
les
and
bt
push
sbb
add
xchg
cltd
jle
divl
adcb
out
push
ss
clc
call
mov
inc
popa
push
sub
stos
inc
push
and
jp
mov
rcrb
mov
stos
sbb
mov
fildll
mov
push
jae
in
mov
xor
bound
jle
inc
jge
jo
jge
inc
xor
clc
adcb
mov
mov
dec
mov
adc
clc
push
pop
sbb
pop
lods
fs
rorl
scas
mov
jne
inc
call
movsl
loop
std
fcomps
enter
je
xor
out
popf
aaa
xchg
dec
mov
sub
arpl
mov
jno
insb
and
mov
aad
or
jb
jns
std
pop
imul
jecxz
hlt
jmp
pop
lahf
pop
push
test
faddl
out
cli
scas
rol
dec
insl
adc
cmp
sub
adc
xchg
insb
mov
inc
or
call
inc
jns
addl
scas
in
stos
cmpsb
lock
and
cmp
fmul
pop
xlat
sub
push
idiv
mov
sti
push
jno
mov
adc
push
ljmp
outsb
xchg
cltd
out
mov
rcrl
fdivr
repz
mov
iret
xlat
ss
add
enter
and
insb
cmp
sbb
lds
push
ss
daa
out
mov
das
xchg
xor
mov
scas
push
popl
insl
push
imul
lods
cwtl
dec
jo
push
pop
xor
sub
mov
jae
das
add
push
mov
cmp
addr16
sub
inc
stc
dec
paddd
les
gs
jo
inc
xchg
pusha
xchg
cmpb
sbb
das
clc
outsb
push
outsl
insl
cmp
push
daa
push
inc
adc
imul
repnz
sbb
and
add
or
scas
mov
push
inc
pop
fidivrl
insl
sbb
push
jecxz
fbstp
ljmp
roll
xchg
negb
lahf
adc
sti
ljmp
jns
mov
xchg
xorl
push
ret
sbb
mov
push
and
cmp
test
ss
ror
xor
push
inc
add
movsl
insl
xchg
push
pop
fistpll
and
adc
sti
pop
fldcw
out
pop
cmp
out
inc
and
mov
cmc
mov
and
arpl
cmp
xchg
fidivl
loope
push
lea
xchg
adc
xchg
xchg
push
sub
or
sti
push
addl
dec
or
pop
lcall
mov
jmp
sub
or
xlat
aam
jae
andl
sti
stos
pop
or
outsl
mov
outsb
pop
mov
ss
scas
add
mov
and
lret
lods
scas
leave
xchg
jno
push
sub
push
jb
mov
lds
dec
lea
pop
leave
or
mov
jns
push
mov
sub
clc
dec
fbstp
int
or
xor
andb
sbb
adc
sub
adc
pop
fs
loope
les
dec
popf
inc
sti
gs
popf
mov
les
pop
sbb
jge
and
and
inc
insb
push
repz
je
repnz
call
or
mov
xlat
test
loope
or
mov
ja
lret
sbb
mov
cmpsb
or
xor
mov
rcrb
stos
fimuls
add
or
jno
jl
jp
in
das
xchg
imul
push
add
pop
pop
lret
dec
pop
and
jp
cmpsl
mov
cmp
cwtl
pop
push
inc
divb
jb
mov
and
mov
rorl
cmpsb
repnz
mov
std
dec
data16
jae
sti
sbb
adc
fwait
push
push
add
mov
mov
repnz
push
pop
sbb
je
mov
test
xchg
test
pop
xchg
push
fcmovnu
in
mov
icebp
out
sub
mov
push
mov
movsb
test
filds
enter
sbb
std
inc
and
rcll
push
stos
into
je
xchg
lret
fldenv
mov
adc
or
xor
jg
cmc
pop
hlt
jo
lret
out
sti
loop
inc
aam
mov
inc
fs
fdivl
fcmovu
repz
call
int3
xchg
lret
cmp
push
outsl
sbb
add
sbb
mov
jle
xor
in
enter
das
xor
mov
xor
mov
int
sub
pusha
insl
pop
sub
jp
jp
lret
scas
jge,pt
push
testl
clc
add
xchg
sbb
jg
sbb
aam
push
push
movsb
ret
mov
js
aad
andl
and
xlat
sub
pop
push
add
fists
rcrl
jbe
stos
repz
cli
sti
push
ficompl
jecxz
enter
lea
adc
push
add
lret
pop
xchg
std
std
dec
xlat
or
test
lahf
daa
insl
rolb
inc
mov
xor
mov
btr
mov
insb
fidivrs
es
int3
add
mov
sbb
push
or
cmp
mov
rorl
adc
mov
in
lret
fimuls
out
sbbb
jmp
movsl
popa
jp
scas
jl
pushf
hlt
mov
popa
movsb
addl
dec
adc
xchg
cltd
data16
mov
fists
das
inc
test
and
or
sbb
lea
jmp
mov
push
rorl
jb
mov
pop
dec
jno
and
aad
jae
push
sbb
es
push
push
int3
push
clc
subl
arpl
stos
inc
outsb
ret
ret
or
inc
int
js
jb
mov
nop
xchg
jne
inc
in
pop
push
rcrb
inc
iret
pop
push
xchg
adc
scas
sbb
and
mov
adc
and
push
jp
test
sub
js
cmpb
add
xor
mov
mov
and
movsl
lods
out
fdivrl
decb
subl
add
mov
xchg
jns
lcall
xchg
cmc
sub
mov
fidivrs
addr16
rorl
adc
mov
dec
pop
cmp
rcrb
sahf
dec
mov
test
xchg
test
in
lods
test
inc
push
lods
gs
sub
int
add
call
out
jb
adc
data16
or
push
xor
test
rcrb
xchg
xor
cmp
out
pop
dec
adc
push
or
aam
ljmp
sbb
pop
mov
vandps
or
push
loopne
xchg
or
jns
pop
add
xchg
cmp
cmp
xchg
insl
push
mov
sub
jmp
mov
cmp
sub
pop
fdivrs
fidivrs
fistpll
jecxz
jnp
ja
mov
sub
add
mov
js
add
sahf
test
icebp
pop
xchg
outsl
clc
cmp
sub
jp
xchg
sti
incl
stos
dec
mov
leave
xlat
jae
mov
xchg
push
fwait
mov
aas
je
push
cmp
push
das
pop
sbb
inc
xchg
and
and
and
in
sub
push
bound
cmc
push
push
fisttpll
mov
inc
mov
test
xlat
add
pop
insb
mov
push
or
lahf
js
outsb
sbb
mov
cli
mov
pop
lret
mov
and
jge
push
daa
jne
sarl
add
cmp
or
mov
mov
add
lods
sarb
sbb
mov
lock
inc
lret
clc
repz
pushf
pop
mov
aaa
jmp
and
insl
sbb
push
lret
inc
mov
adcl
pusha
sub
inc
sub
push
mov
cmp
fstl
in
rcrl
pop
or
addr16
mov
xchg
dec
iret
inc
inc
in
sbb
cs
jo
xor
mov
mov
adc
fldt
xor
push
xor
fnstsw
pushf
push
sti
lock
jle
test
stos
pop
dec
push
out
rcrb
cld
pop
xor
stos
xor
adc
adc
xor
call
pop
mov
loop
sbbl
inc
inc
test
sbb
enter
scas
cmp
xlat
int3
jl
cmp
lock
cmp
loop
dec
sti
fistps
push
scas
cmpsb
sub
lods
cltd
dec
jp
jns
pop
push
pop
push
push
push
lods
push
data16
cmp
pop
pop
gs
and
test
push
out
xor
lock
lea
mov
mov
test
jb
in
sub
decb
xor
add
fwait
xchg
push
mov
xchg
xor
lea
je
xchg
aad
insl
and
lods
sub
pop
pushf
xchg
mov
cmp
adcb
jmp
out
jge
inc
lcall
call
cmpsb
cmc
test
outsl
es
mov
cmp
nop
fisubrl
and
test
lahf
and
cmpsb
dec
loopne
and
push
jg
lahf
push
xchg
push
and
mov
fs
add
andl
ljmp
pop
leave
cmp
fdivrl
or
in
push
ljmp
lret
in
inc
pop
and
jb
sub
sarl
scas
stos
popa
cmp
push
pop
jo
xor
inc
jo
pop
dec
sti
xchg
cmp
lea
xor
cwtl
mov
jl
inc
flds
xchg
push
gs
dec
push
xchg
sbb
mov
xor
pusha
aad
and
pushf
sbb
loopne
fdivl
test
pop
cmc
push
cmc
cmp
adc
out
pop
or
shlb
push
lahf
or
and
push
repz
inc
pop
xor
pushf
sub
mov
xor
arpl
xor
xor
push
stc
mov
mov
cmp
push
shlb
test
ja
cs
aad
mov
adc
les
xchg
mov
jne
insl
xlat
or
mov
lret
push
nop
out
daa
mov
imul
testb
and
mov
add
pop
mov
out
or
test
mov
cmp
cwtl
adc
adc
daa
mov
mov
ret
hlt
mov
or
adc
cmc
jne
push
add
in
dec
mov
jp
jle
ret
dec
mov
mov
push
data16
jne
and
scas
add
std
dec
cmpsl
sbb
iret
ds
mov
jp
or
ss
out
int3
dec
jecxz
mov
out
sbb
sbb
add
and
sub
ds
mov
js
lea
repnz
test
mov
aas
pop
dec
icebp
ja
mov
outsb
leave
adc
cmp
jnp
nop
push
ja
roll
pop
in
stc
pop
pop
pop
pop
xchg
sbb
pop
cwtl
sbb
out
sbbl
or
rolb
sub
or
jecxz
jo
mov
add
pop
leave
bound
adc
ss
je
jge
and
int
pop
cmpsb
mov
cmp
cmp
and
xchg
pop
mov
adc
inc
fimuls
cmc
or
cli
dec
mov
inc
cwtl
cmp
jg
jecxz
daa
dec
andb
bound
jnp
add
outsl
arpl
dec
stc
lea
call
icebp
dec
in
sbb
xchg
mov
loope
sub
popa
pop
xchg
push
cld
push
call
jge
testb
cmp
or
xor
neg
or
cmp
in
out
jno
mov
ljmp
mov
dec
imul
add
push
cmp
jl
sbb
add
xchg
adc
lock
inc
nop
addr16
add
inc
cmpsb
sbb
pusha
pushf
jne
sbb
mov
loope
add
xor
cmovle
enter
cmpsb
sbb
and
dec
ds
fchs
add
mov
mov
fstl
shlb
push
mov
pushw
xor
mov
xchg
stc
imul
dec
mov
jo
popa
jmp
stos
stos
xchg
aas
fs
cmpsb
xor
jge
dec
ret
das
adc
mul
dec
sbb
adc
xor
ljmp
icebp
xor
dec
dec
add
push
xlat
mov
gs
push
stos
mov
mov
out
add
push
jno
mov
or
sub
jge
scas
test
scas
cld
sub
int3
arpl
rorb
jmp
xchg
and
sbb
stc
lea
ja
sbb
push
mov
sbb
mov
popf
pop
rep
fnstcw
cltd
insb
pop
clc
xchg
adc
jno
scas
fisubrs
adc
in
sbb
jne
sub
fwait
cmc
xor
sbb
mov
loop
enter
push
sbb
sub
jbe
test
mov
imul
add
adc
or
adc
popf
into
cmp
popl
out
adc
push
movsb
inc
addr16
jecxz
add
adc
push
jns
jge
clc
add
jmp
xchg
and
push
cmp
xor
jno
jmp
out
outsl
data16
xchg
insl
fdiv
rclb
and
mov
pop
in
int3
dec
lock
adc
or
sbb
adc
hlt
xlat
and
addl
xor
pop
and
dec
je
pop
jnp,pn
mov
xor
scas
lea
add
outsl
cmp
ss
icebp
mov
sbb
adc
out
imul
xchg
mov
std
push
stc
mov
fsubrp
nop
and
push
fsubrl
xor
mov
and
inc
stos
rorb
cwtl
dec
or
popf
std
arpl
fwait
jno
cld
fidivrs
mov
ret
pop
out
stc
bnd
pop
ja
pop
rcll
in
aam
xor
lea
leave
dec
test
sub
dec
test
push
add
jmp
icebp
cwtl
lods
jae
shlb
int
sbb
or
mov
in
push
ret
mov
or
jbe
sub
stc
movsb
scas
or
adc
and
xchg
lock
xchg
jle
jne
jae
jo
xorb
rcl
mov
lods
test
sbb
push
insl
xchg
jl
inc
mov
daa
stc
pop
cmp
pusha
cmp
cli
pop
xor
imul
mov
out
sti
jp
fst
inc
xchg
icebp
mov
outsb
mov
ret
std
pop
scas
dec
mov
lcall
pop
inc
sbb
shll
ret
inc
sub
xchg
into
sub
xchg
test
int3
push
jl
fidivrs
dec
push
or
sbb
push
jecxz
pop
hlt
cmpsb
xor
pop
cmp
push
push
cmp
cltd
das
mov
lock
mov
ret
sbb
add
ficoms
inc
ficomps
jno
ljmp
mov
mov
enter
adc
rol
push
jg
out
cltd
rclb
dec
ret
mov
loopne
mov
shll
enter
fistpll
jnp
movsl
dec
cwtl
jg
jge
cmp
outsl
jbe
jns
call
iret
add
js
stc
mov
push
rorb
xor
cltd
xchg
jp
iret
mov
push
cmp
cmp
pusha
imul
mov
mov
rcrb
fiaddl
xchg
mov
and
lds
mov
or
push
gs
xor
ret
mov
cwtl
into
push
push
les
and
sub
test
push
add
lock
in
sub
xchg
scas
dec
out
mov
cli
cmp
push
mov
sub
sti
cli
sub
mov
into
cli
lods
inc
pusha
mov
int
in
pushf
inc
mov
jns
in
push
icebp
lret
mov
sbb
dec
sub
sbb
jae
jb
add
push
gs
dec
mov
lret
mov
sub
lods
ja
orl
fcompl
js
push
andl
mov
pop
cwtl
pop
clc
fsubr
adc
sub
ret
insb
shlb
sbb
pushf
pop
jne
xchg
test
fldt
xchg
or
enter
xchg
pop
fistpl
jmp
lgs
cmp
data16
push
jmp
popf
and
in
popf
dec
data16
and
pop
mov
clc
and
addr16
fimuls
jo
or
fwait
imul
lods
mov
mov
and
jne
lds
mov
cmp
push
xor
adc
aas
push
lret
dec
and
ret
sti
aas
dec
pusha
neg
dec
sarb
repz
lret
or
pop
pop
jecxz
mov
daa
push
inc
stc
popf
sbb
aaa
jno
inc
xchg
imul
xchg
xchg
out
addr16
test
xorl
xor
sub
jge
pop
sbb
xchg
fistl
lret
fistpl
outsb
scas
loope
mov
jnp
mov
adc
xchg
push
push
jo
push
or
sarl
add
gs
and
or
mov
stos
pop
sbb
addr16
mov
add
mov
and
mov
xlat
pop
movsl
bound
lods
lods
popf
subb
jge
aam
inc
ss
or
dec
and
or
pushf
lcall
roll
pop
dec
imul
mov
cmpsl
pop
dec
or
jae
pushf
add
pop
cmp
aam
out
out
mov
mov
into
mov
das
movsb
jae
inc
sub
dec
out
and
test
push
loopne
bound
sbbl
sub
sub
mov
out
jbe
in
fsubl
loope
out
add
mov
cmp
aam
sbb
int3
push
or
push
push
popf
xchg
loopne
mov
imul
les
pop
and
xchg
data16
mov
push
mov
pop
rclb
push
pop
fcmovnu
push
addl
inc
xor
adc
in
sub
leave
mov
push
jne
xor
jecxz
ret
pop
lods
cmp
mov
loop
dec
fldcw
pop
icebp
add
push
call
push
jbe
cmpsb
outsb
orb
addl
fcmove
mov
mov
fwait
ds
mov
fcoms
inc
ret
inc
dec
in
jne
sbb
xchg
dec
imul
mov
sbb
fsubrl
push
cli
pop
mull
add
stos
pop
adc
js
push
jmp
loop
shlw
push
jnp
loop
jb
enter
stc
ficoml
jg
add
pusha
mov
lock
outsb
test
ja
xor
dec
js
push
aam
cmp
call
leave
dec
mov
mov
push
das
lgs
xchg
mov
sbb
and
adc
lcall
push
sbb
insl
xchg
jno
jp
nop
push
mov
aam
out
pop
nop
push
lods
xchg
fsubrl
mov
sbb
adc
ljmp
andb
fldcw
dec
mov
inc
rcr
xchg
dec
sbb
jmp
push
push
fcomps
popa
scas
cmp
les
ret
nop
negl
cld
dec
jecxz
mov
pop
push
std
in
mov
mov
in
fldl
mov
sub
adc
xor
cwtl
mov
xor
sahf
xadd
fsubrs
sbb
ja
pop
mov
and
lret
jo
and
inc
inc
push
out
repz
push
and
les
adc
imul
push
pusha
ss
and
rcr
or
pop
rcrl
sahf
inc
pop
bound
fstpl
pop
movsl
jb
and
pop
ljmp
addl
xor
pop
jne
jmp
mov
sbb
iret
fldt
rdmsr
adc
cmp
out
ljmp
shr
sbb
mov
or
push
int3
divl
mov
sub
lcall
fstps
and
adc
sbb
jbe
popa
mov
hlt
lret
add
std
into
cmpsl
popa
subl
inc
cmp
adc
mov
and
jg
insl
dec
push
xor
fidivrs
jle
les
data16
fcomps
cmc
push
insb
pop
jecxz
inc
pop
or
stc
pop
lret
jae
xlat
adc
daa
repnz
fildll
clc
popa
jnp
adc
sbb
mov
xchg
push
sahf
lds
popf
stc
add
mov
mov
and
test
mov
xor
je
les
imul
shll
lret
popf
in
cwtl
rcll
dec
xor
in
xchg
mov
push
outsl
mov
or
popf
fwait
cltd
scas
sbb
cld
test
fs
sbb
add
test
sub
insl
imul
mov
test
sbb
pop
mov
insl
sub
addr16
sti
or
ficoml
sub
jmp
and
xchg
int
mov
dec
mov
aaa
aam
lret
faddl
sbb
add
or
cs
adc
loope
sub
xor
enter
mov
or
inc
add
incb
sub
cmp
xchg
lret
mov
add
loop
sahf
dec
jp
jmp
mov
push
into
cmp
fsts
add
lods
pop
cmp
xor
mov
lret
lcall
jbe
popf
mov
bound
loopne
jb
add
cmpsl
ret
mov
aas
adc
push
lock
fcom
hlt
mov
push
int
cmp
pushf
roll
mov
scas
bound
pop
fwait
pop
mov
xchg
fcmovnbe
push
cmp
pop
nop
inc
jg
push
mov
xchg
mov
or
sbb
mov
mov
std
nop
inc
repz
lret
cs
lret
mov
adc
and
in
or
fisubrs
pop
lods
mov
addb
adc
test
mov
in
rcll
or
mov
cld
popf
cmp
mov
add
arpl
int
fwait
test
nop
cmp
mov
shlb
fcmove
inc
lds
jge
dec
into
mov
out
jmp
lods
or
mov
pushf
out
add
mov
ja
dec
xor
add
dec
ror
add
mov
inc
push
rol
hlt
pop
std
mov
std
les
mov
vmptrld
pop
imul
fs
jl
cwtl
xchg
data16
push
in
pop
xor
pusha
cmpsl
hlt
clc
mov
xchg
cmc
lds
sub
test
rorb
inc
pop
and
pop
xchg
xor
or
mov
sbb
and
lods
out
jmp
lods
hlt
cmp
xor
sarb
lea
rorl
mov
dec
adc
cmpsb
or
jno
fs
int3
jbe
add
adc
dec
and
insl
xlat
xchg
mov
setge
add
inc
in
mov
popf
jecxz
aad
mov
out
popf
adc
add
out
jnp
push
addr16
jb
pop
lcall
cli
aas
div
inc
fwait
test
cmpsl
mov
sahf
xchg
int
mov
sbb
aam
adc
lds
ffreep
or
sbb
cmp
adc
or
pop
testl
mov
jp
popa
jecxz
fnsave
negb
xchg
jecxz
loop
aam
aam
xor
xor
push
out
dec
and
jo
test
sbb
ret
xchg
or
cmp
dec
rorl
aaa
cmp
push
mov
inc
and
push
test
sbb
push
dec
push
inc
lret
iret
mov
in
ret
xor
or
xor
insl
stos
add
and
xchg
faddl
xchg
mov
adc
lret
or
das
pushf
mov
jl
mov
fldt
aad
push
rcrl
cmp
insl
xor
sub
test
rol
push
sbb
push
into
mov
int3
cltd
popa
pop
mov
mov
lods
mov
stos
push
aas
push
add
sahf
fisubs
add
jno
lods
sbb
xchg
jl
xchg
mov
lea
in
fucomi
rolb
add
pop
and
nop
sbb
dec
adc
dec
push
mov
and
scas
mov
fcoml
or
repnz
adc
scas
out
lcall
and
adc
insb
pop
dec
pop
adc
or
jecxz
adc
sbb
inc
cltd
lods
mov
add
adc
jge
push
les
jmp
mov
lea
mov
sti
cltd
add
repz
xor
inc
push
and
add
lahf
inc
out
inc
pop
insl
jl
clc
mov
jge
loopne
push
xor
mov
std
add
jle
lcall
jp
cmp
mov
pop
jecxz
cmp
inc
stc
andl
xchg
mov
lds
shll
sbb
pop
leave
jle
sub
jno
inc
bound
fnstenv
inc
push
ss
cmp
xchg
imul
je
pop
mov
aad
inc
sbb
xlat
js
sbbl
and
decl
xchg
adc
mulb
mov
mov
ds
and
lds
push
dec
movsl
sahf
jp
sbb
jb
shlb
sbb
fidivrs
adcl
xchg
pop
xchg
ret
sub
push
int3
dec
push
cmpsb
in
call
lods
lahf
lahf
outsl
in
xchg
pushf
jp
sbb
xor
mov
loop
cmp
xlat
cmp
jp
jne
ret
aam
sub
lcall
fidivrs
sbb
xchg
gs
dec
mov
jle
fdivr
hlt
hlt
outsb
add
mov
mov
inc
into
and
dec
add
xor
mov
mov
mov
fabs
es
or
xor
and
stos
in
int3
adc
xchg
inc
flds
add
and
xchg
cmp
mov
rcrl
push
stos
popf
jle
or
std
jno
xor
mov
mov
aad
mov
mov
add
pop
jp
mov
in
sub
push
cmpsb
and
cmp
ss
dec
in
rcr
dec
inc
or
cmp
repnz
jo
adc
jp
push
inc
add
adc
popa
cltd
lret
cmp
mov
mov
sub
sbb
cmpl
test
leave
fwait
xchg
pushf
outsl
mov
jl
adc
mov
std
movsl
jb
mov
xor
mov
cmpsl
pop
test
inc
fs
dec
inc
lds
bound
mov
imul
cmp
jns,pt
aaa
shlb
xchg
adc
loopne
lret
jmp
push
fs
lds
lahf
out
popf
fcompl
xchg
adc
lods
ljmp
and
ja
inc
adc
addb
and
mov
scas
cs
mov
jb
xchg
hlt
sub
push
jae
inc
jp
pop
add
dec
insb
in
lcall
add
shl
mov
insb
decb
addr16
jecxz
int
je
clc
clc
jecxz
fdivs
lock
aaa
iret
xchg
rcll
aam
push
addr16
push
sbb
daa
fcom
or
ljmp
or
pop
pop
mov
push
icebp
cmp
test
push
pushf
fwait
and
test
push
mov
fwait
stos
aad
test
sub
out
xchg
nop
ficoms
mov
push
mov
aad
in
push
xchg
xorl
xor
int3
sub
mov
lods
outsb
movsb
aas
mov
add
fnsave
shlb
xorl
sub
cmp
insl
and
push
js
test
ljmp
adc
rcrl
jecxz
les
lea
ljmp
hlt
pop
stc
mov
lock
les
movsl
mov
mov
shr
gs
andb
fistl
stos
clc
rorb
add
and
test
loopne
pop
mov
daa
ss
fdivrs
xor
xchg
and
xor
int
lods
movb
or
and
or
cmp
xor
push
jb
clc
dec
mov
jp
orb
loope
or
outsb
adc
add
fdivrl
xchg
pop
dec
and
mov
mov
jecxz
mov
fidivrl
pusha
stc
adc
cltd
aaa
mov
in
test
cld
outsb
ljmp
call
add
sub
adc
mov
dec
cmp
dec
adc
in
outsl
mov
andb
inc
fmull
rcll
enter
inc
rorb
jle
pop
push
sbb
outsb
push
jmp
adc
rolb
loop
or
mov
push
sub
mov
shl
lahf
test
aam
cmpsb
xor
or
or
les
dec
js
mov
mov
push
fistps
bswap
ret
lret
subb
call
ja
xor
sti
sti
sbb
push
jmp
mov
add
sub
push
arpl
push
xchg
sub
rolb
pop
sahf
add
pop
mov
jbe
xor
repnz
dec
mov
xchg
inc
cmc
push
int3
es
mov
mov
push
cli
pushf
and
addr16
aas
loopne
cmpsl
xchg
dec
call
cmp
addr16
xchg
cmp
and
lds
sub
repnz
shll
adc
imul
xor
cmp
cmp
repz
adc
xlat
sub
mov
xchg
pop
jl
dec
jae
das
add
dec
aam
mov
push
insl
xchg
lods
push
dec
int
dec
out
lods
fdivrs
add
mov
push
jno
sub
xor
jnp
aam
ss
adc
jbe
loopne
add
lret
mov
imul
ja
sbb
cmp
cmp
iret
xor
jle
cmpsl
push
shll
sub
xchg
cltd
mov
push
or
into
mov
add
adc
dec
cmp
test
imul
outsl
data16
xor
inc
hlt
cmpsb
mov
imulb
jge
sub
icebp
aas
ss
push
pop
pop
pop
sbb
adc
shrl
and
bswap
and
addr16
popa
xchg
outsl
idivl
sub
sbb
out
data16
fisttpll
xor
dec
mov
std
out
inc
jle
push
jo
fbld
scas
xchg
inc
dec
repnz
cwtl
mov
and
cmp
pop
xchg
mov
jl
aas
push
fincstp
cld
stos
and
xor
mov
ficoms
movsb
lds
ljmp
or
loopne
stc
push
pop
jns
icebp
xchg
cmp
repnz
cmp
lret
cs
mov
ret
pop
lods
repz
repnz
and
das
push
pop
adc
scas
add
xchg
add
adc
adc
add
shll
jno
stc
loop
push
adc
clc
jmp
jmp
cmp
lods
adc
in
mov
inc
pop
inc
add
push
cmovnp
cmp
iret
lahf
out
lea
rep
sbb
out
aam
sub
fimull
scas
stos
es
push
and
xor
push
xlat
xchg
das
mov
adc
test
lret
add
xor
dec
nop
xchg
test
inc
push
bound
mov
cli
mov
enter
adc
je
inc
mov
sub
notb
xchg
xor
ret
adcb
inc
sbb
push
cmc
mov
inc
inc
js
fs
adc
in
add
rcrl
xor
adc
stos
fdivrs
xor
lcall
cwtl
fisubrl
push
sbb
mov
xor
sbb
shrb
shll
sti
jmp
adc
dec
loope
mov
addl
enter
mov
pop
test
loopne
xchg
and
adc
lret
pop
sub
pop
and
fcmovu
arpl
push
xlat
dec
pusha
jnp
cmp
je
sarb
mov
mov
les
daa
mov
xor
fwait
add
scas
inc
scas
push
adc
lock
jb
dec
mov
xor
ds
in
xchg
mov
push
jge
and
cmp
lods
loop
out
adcb
pop
mov
dec
push
mov
aad
sub
adc
dec
mov
into
ss
mov
sbb
pop
jae
fimull
sbb
andl
mov
loop
ljmp
push
lcall
jne
movsl
aam
mov
insb
jl
push
jns
sbb
out
cmp
movsb
push
jo
cmp
mov
insb
push
jne
mov
mov
add
pop
addb
xlat
jnp
fnsave
add
or
push
loopne
pop
sbb
cmp
jg
inc
idivb
daa
fwait
xchg
mov
ret
fildl
ret
lods
lahf
push
jbe
adc
and
inc
adc
jno
or
jg
inc
dec
dec
leave
leave
sbb
ds
into
push
dec
insb
xchg
jmp
push
pop
inc
push
mov
and
imul
sbb
ss
out
or
push
lret
aam
lret
mov
inc
mov
add
pop
mov
cmp
ret
in
sti
cld
jbe
test
sbb
sub
jmpw
jmp
xor
xlat
jb
jns
fildl
aam
mov
test
xlat
inc
mov
fisttpll
jne
insb
and
aam
popa
hlt
iret
xor
ljmp
mov
in
loop
sar
cs
or
pop
in
rolb
mov
orl
loopne
mov
dec
scas
pcmpeqw
cmpl
push
jg
mov
pop
test
jnp
cld
cmp
daa
inc
push
mov
insb
push
push
mov
or
add
arpl
out
xor
xorl
mov
in
and
out
lock
pusha
test
test
mov
mov
jg
loop
ret
loopne
loope
pop
test
daa
sarb
push
cld
cli
push
mov
jbe
fs
or
sub
in
insl
jns
xchg
pop
jg
movl
pop
imul
mull
sbb
loopne
jns
mov
into
stos
adc
fsubrl
cmp
mov
mov
mov
divl
imul
inc
shl
mov
mov
jns
and
mov
mov
mov
sbb
add
test
xor
int
out
pop
cmp
mov
xchg
std
bound
sarb
ret
jae
cmp
jno
gs
sahf
rcr
movd
pop
push
push
push
mov
aad
mov
mov
adc
shl
fs
fnstcw
adc
rolb
sti
xchg
mov
push
rolb
cmp
out
jmp
fdivrl
test
ret
jge
in
dec
push
pop
xchg
push
mov
pop
out
mov
pop
sbbl
cmpsb
push
jg
into
mov
cmp
aam
push
ret
pop
addr16
cmp
pop
xchg
subl
mov
jne
push
xchg
mov
sbb
cli
iret
divb
rorb
lods
test
pop
inc
cmp
mov
iret
dec
pushf
mov
xchg
fisubs
psubb
cmp
imul
scas
outsb
mov
adc
add
pushf
pusha
mov
hlt
sahf
push
lcall
mov
xchg
incl
xor
scas
test
mov
or
mov
sub
adc
xchg
idivb
add
adcb
shlb
dec
cli
add
pop
inc
fidivl
xor
shrb
sub
pop
fs
scas
push
ds
inc
rcrl
push
jbe
push
repz
aaa
fcoms
fstpl
sub
jns
inc
xor
or
adc
push
push
mov
ljmp
fcoml
sbbb
xor
jge
xchg
int3
or
add
mov
mov
or
pop
js
sbbb
sub
scas
cld
je
add
testb
daa
lods
imul
pop
out
icebp
sarb
shll
aam
push
repnz
cmp
mov
mov
mov
cwtl
in
lock
rcrl
dec
jg
cmp
fnstcw
lock
iret
jl
mov
inc
imul
sbb
mov
xor
decl
push
ja
sub
sub
sbb
jecxz
imul
xlat
cmc
andb
lds
int3
jl
mov
lods
jmp
mov
imul
loopne
fprem
cwtl
leave
outsb
fistps
xchg
jmp
mov
stos
or
cwtl
add
popf
xchg
loop
fcomp
insl
cltd
int3
dec
cmp
or
sti
pop
mull
cli
jle
movl
imul
or
dec
addl
push
push
or
mov
sub
nop
jo
lahf
mov
jecxz
fs
cmp
pushf
mov
lahf
testl
test
aam
out
sti
lock
and
in
sbb
and
mov
fs
jecxz
pop
ja
jb
out
sbb
mov
xchg
xor
add
xchg
xchg
adc
fucomp
es
loope
dec
clc
jecxz
mov
jmp
xchg
add
sbb
test
int
cli
add
jbe
cli
pop
pop
jle
lcall
mov
inc
push
je
sub
ret
ss
iret
mov
bsf
lock
inc
mov
insl
inc
je
lcall
dec
bnd
in
sbb
mov
and
rcll
cmp
in
insl
jns
xor
cmp
push
insl
sbb
jno
icebp
jo
movsbl
push
sbb
decl
sbb
pop
xor
iret
pop
or
sub
mov
xor
in
sbb
sbb
dec
into
mov
sub
xchg
test
icebp
std
add
jp
inc
in
add
mov
call
pop
pminub
int
xor
lock
adc
add
lcall
add
mov
xchg
and
sub
cmp
in
jp
movsl
mov
repnz
gs
dec
testb
adc
mov
movsl
inc
hlt
pop
cwtl
inc
mov
cli
outsl
sti
fs
out
cmp
push
xor
stos
pusha
sbb
mul
jecxz
mov
clc
push
mov
shlb
sbb
sar
sub
aas
or
mov
daa
test
pop
sbb
mov
addb
mov
pop
dec
lret
inc
push
ret
mov
cli
leave
shrd
lcall
dec
in
jae
cmp
cvtpi2ps
lea
stos
insb
rcl
xlat
xchg
cmpsb
dec
sbb
ljmp
outsb
dec
and
cli
inc
sarl
js
adc
or
mov
xor
or
xchg
adc
mov
mov
mov
push
pop
incl
push
jns
insb
mov
cmp
loop
sahf
cmp
push
pop
add
pushf
out
jp
cmc
nop
dec
mov
dec
stc
ljmp
add
mov
jns
or
and
iret
jp
xchg
or
nop
orb
lret
imul
cmp
les
scas
movsl
ficompl
jbe
popa
jns
arpl
repnz
add
jp
or
xchg
mov
lds
aad
mov
jno
pop
jmp
out
cmp
loope
cmpsl
imul
push
loope
sub
fldln2
popa
mulb
fadds
or
rolb
or
bound
sbb
xchg
dec
cld
ret
push
sti
sub
cwtl
adc
adc
mov
cltd
fistps
mov
daa
mov
mov
inc
xor
and
and
je
lret
and
fstl
push
movsb
scas
push
sub
mov
stc
sti
jge
movsb
cmp
stos
mov
out
jp
sub
shll
in
or
xor
dec
test
lret
push
jmp
aam
cmp
add
subl
cmp
out
outsb
outsl
out
adc
pop
fstpt
addr16
xor
lods
rcrl
mov
loop
imul
adc
in
rorl
test
sti
out
pop
rcr
hlt
xor
scas
into
mov
jle
fisubs
enter
mov
mov
xor
lods
adc
jecxz
push
xor
jbe
push
aad
in
cmp
test
cmp
mov
mov
test
pop
dec
ss
jecxz
sub
xchg
aam
icebp
pop
cli
cmp
leave
cltd
cmpsl
mov
cli
mov
adc
imul
shlb
fstpt
mov
push
imul
mov
sbb
pusha
fldl
fs
cmp
mov
cmp
ret
pop
fmuls
mov
daa
inc
sbb
enter
sbb
jne
arpl
xchg
das
sbb
imul
gs
mov
mov
mov
lock
push
cmp
inc
les
outsb
test
jl
out
xor
add
add
or
lret
scas
sub
mov
mov
aam
inc
jge
cmp
hlt
xor
jns
sti
loopne
inc
adc
std
addb
lds
or
arpl
xchg
clc
jecxz
xor
adc
in
inc
mov
shll
jp
mov
mov
sub
addr16
enter
sbb
jg
testb
inc
test
add
mov
gs
inc
jno
and
dec
pushf
movsb
jge
ret
jg
jno
and
dec
jbe
inc
jp
mov
or
cmp
cmpsb
pusha
popl
pop
clc
into
aaa
cmp
and
xchg
sti
jbe
outsl
dec
mov
jb
rcr
mov
add
loopne
push
outsb
int3
in
adc
pop
out
mov
add
dec
call
add
dec
jne
xchg
xor
dec
mov
iret
push
lret
fidivrs
insb
pop
pop
out
pop
and
std
lret
inc
jnp
imul
xchg
pop
sub
xchg
clc
mov
fs
mov
add
adc
mov
ss
outsl
inc
pop
out
cld
mov
mov
cltd
mov
xchg
and
add
mov
cwtl
call
cmpsl
inc
push
sub
std
outsl
mov
mov
arpl
iret
rclb
mov
in
mov
sbb
mov
xor
roll
outsl
lods
icebp
out
lahf
fists
popf
shl
xchg
push
add
sarl
dec
xlat
jmp
rolb
std
xor
fdivs
std
inc
dec
add
mov
adc
fdivr
jl
shll
xor
inc
push
test
fbstp
shlb
jne
jge
popf
rcll
repz
adc
test
push
xchg
xor
outsl
adc
push
and
dec
lds
pop
mov
mov
sbb
shr
out
jle
adc
cmp
movsb
push
push
aas
pop
gs
test
xchg
fimuls
mov
push
xchg
push
push
jg
adc
inc
in
sbb
inc
pushf
jle
and
add
push
addb
jge
je
xchg
pusha
adc
sub
rcl
xchg
out
push
or
cmpsl
mov
fisubs
adc
cmp
dec
fwait
lret
mov
push
or
addr16
mov
inc
addb
mov
lds
lds
pop
sub
aas
aad
inc
out
les
cld
mov
or
fdivrl
std
xchg
shr
or
mov
out
aad
jg
ret
xchg
stc
push
pop
cld
movsl
sarl
sub
or
xchg
sbb
or
xchg
mov
cmp
nop
sub
bound
inc
jo
mov
sarb
stc
push
test
jmp
leave
mov
fimuls
pop
lds
dec
dec
lock
inc
mov
cltd
fwait
pop
ds
fldcw
and
test
dec
mov
jge
ljmp
push
mov
insl
fcomp
push
cltd
push
or
jnp
or
repz
xlat
loopne
pop
out
js
mov
mov
in
lcall
sbb
ljmp
jmp
mov
add
in
lock
push
xchg
scas
xchg
lahf
xor
mov
cmp
jns
mov
push
jbe
add
mov
mov
adc
mov
les
in
mull
mov
pop
imul
push
push
mov
cmp
add
out
icebp
insb
cmpsb
mov
mov
test
mov
dec
xchg
mov
jno
fisttps
push
jns
dec
cmpb
add
jnp
cwtl
cmpsb
cmp
mov
movsb
cmp
mov
mov
lea
inc
cmp
inc
push
xor
cmp
pop
mov
into
cmp
movsl
mov
ds
std
xlat
loope
pop
shlb
fistps
setl
jl
lds
and
stos
icebp
push
ja
fcomps
push
and
bound
ret
xchg
mov
jmp
cmp
push
sbb
out
jmp
cwtl
out
test
push
gs
or
xor
scas
xchg
and
lea
mov
mov
mov
repnz
lock
ret
ret
sub
and
or
loopne
mov
pop
mov
inc
cmp
pop
lods
or
mov
cmp
ret
xchg
dec
test
pop
lret
cmpsl
mov
das
push
sbb
xor
cmpsb
dec
mov
out
mov
jb
cmc
and
mov
push
mov
push
shll
dec
nop
call
fisubl
jle
xor
ljmp
push
outsl
inc
mov
dec
lods
cmp
sbb
push
fdivrl
insb
or
sbb
jno,pt
das
call
inc
ret
pop
lods
cli
mov
enter
insl
iret
shl
or
and
and
loope
xlat
add
ljmp
xchg
dec
inc
dec
jge
les
lods
fsubs
rcrl
mov
lret
and
out
inc
int3
cli
pop
xchg
or
ret
aaa
jl
mov
scas
xchg
sub
pusha
mov
and
in
outsl
adc
movsb
sti
out
lds
mov
in
fidivrs
xor
add
lods
int3
inc
test
in
push
scas
outsl
pop
scas
popf
mov
cmp
jae
cmp
dec
sbb
pop
xchg
lods
in
lahf
sbb
mov
mov
inc
dec
lock
adc
out
call
stc
fistpl
pushf
scas
test
pop
mov
sahf
rorb
daa
xor
out
push
and
inc
into
xor
rcll
into
cmpsb
outsb
pop
outsb
and
sti
sti
fsubp
jnp
rcl
testb
mov
mov
aam
outsl
pop
fcmovb
ret
call
jge
jmp
and
addr16
xchg
adc
jle
add
mov
xchg
mov
rorl
cmpsl
dec
rclb
inc
pushf
popa
xor
cmpsl
stc
and
mov
and
mov
pop
out
mov
xor
pop
movsl
adc
add
cmp
leave
hlt
sub
push
sbb
data16
inc
push
mov
shl
mov
fsubrl
aad
adc
mov
xchg
pop
int
dec
and
xchg
scas
lahf
mov
les
cmp
shlb
es
mov
decb
cmpsl
out
and
mov
int
enter
ud1
mov
cltd
cli
sti
adc
mov
popa
imul
mov
mov
and
fidivl
pop
roll
push
sbb
into
daa
jne
in
lret
int3
sub
cmpsb
in
adc
into
fdivrl
jne
cmp
inc
pop
mov
mov
inc
jp
mov
dec
insb
shll
sub
test
push
sbb
inc
lea
inc
lahf
stos
pop
dec
fucom
xchg
add
daa
fs
sub
int3
out
dec
lock
call
jmp
and
roll
sub
sahf
sahf
flds
subl
mov
ds
lock
xor
add
mov
dec
adc
pop
stos
pop
sub
stos
sub
jno
add
sbb
test
nop
test
aam
mov
subl
fistpll
and
cld
push
mov
fs
mov
test
cld
push
stc
in
lahf
sbb
leave
xchg
fisttps
jg
pop
jae
inc
imul
movsl
cmp
lock
xor
push
xor
jge
xchg
mov
divb
sarb
aaa
push
adc
mov
lret
fistpl
fimuls
sub
jl
adc
pop
pop
insb
aaa
sbb
out
scas
jl
mov
imul
iret
cmpsb
or
fmuls
add
mov
lea
sub
nop
adc
daa
jne
in
js
div
push
add
adc
in
dec
test
inc
adc
pop
into
push
push
sub
mov
sub
jbe
ljmp
les
mov
mov
insb
out
cld
mov
mov
mov
lds
stc
stos
add
ret
mov
mov
aaa
scas
subl
cmp
sub
or
icebp
cmp
adc
inc
clc
jle
movsl
outsb
lret
test
xchg
je
sahf
push
or
lods
cmp
mov
orl
pop
dec
inc
xchg
push
xchg
inc
fsubs
aam
aas
repz
cmpsl
inc
cltd
xor
outsb
dec
add
fwait
arpl
frstor
popf
je
pusha
push
stos
idivb
push
push
push
js
into
dec
mov
pushf
ss
pop
inc
pop
out
mov
cmp
fucomip
jle
cmp
mov
inc
movsl
jp
fcomi
dec
out
mov
lods
pop
lret
adc
bound
test
call
scas
cwtl
add
sbb
xor
mov
ds
mov
mov
aaa
jge
jns
push
xchg
inc
stos
push
jbe
daa
xor
bound
add
movsb
jo
pmuludq
mov
inc
dec
cld
arpl
fwait
nop
add
adc
cs
xor
out
xchg
jg
push
xchg
adc
ljmp
pop
sbb
xor
es
fisubs
not
sbb
pushf
mov
add
and
aaa
aaa
fnstsw
std
mov
pop
mov
scas
subb
int
mov
orb
push
testb
jo
iret
fisubrl
inc
insb
jne
insb
xor
dec
std
std
ja
shll
cmpl
add
and
add
sbb
xor
movsb
ret
cwtl
mov
cld
push
push
out
in
push
mov
pop
and
les
mov
inc
dec
mov
rorb
mov
in
sahf
xchg
mov
in
or
sbb
pop
dec
sub
adc
xchg
cltd
cmpl
repnz
call
pop
inc
test
sbb
incl
sbb
and
test
pop
push
xchg
cwtl
addl
gs
in
jmp
or
cwtl
loop
sub
pushf
jp
sub
dec
imul
sbb
movl
sbbb
jg
jae
stos
int3
imul
pop
mov
and
sbb
push
sub
add
jae
pushf
and
mov
push
xorb
fwait
rcrl
pop
mov
cwtl
mov
or
scas
int
sbb
ficoms
js
pop
mov
sbb
or
loope
outsl
aaa
jmp
lods
es
inc
sub
add
sbb
loope
and
sahf
mov
mov
aas
adc
adc
and
cmpsb
add
idivl
cmpsl
outsb
cmp
jl
mov
adc
in
inc
xchg
clc
add
pop
das
mov
jnp
movsl
aaa
add
adc
push
fidivl
push
pop
xor
pop
cltd
loop
aad
or
int
xchg
xor
rcr
jno
cmp
mov
loope
dec
ret
imul
test
or
mov
xor
and
mov
or
ds
pop
pop
loope
cmp
dec
mov
adc
shl
sub
loope
add
les
inc
mov
daa
pop
faddl
call
jecxz
jnp
leave
inc
scas
push
mov
cmpsb
jecxz
pop
adc
xor
xorb
mov
jo
jb
inc
pusha
les
jl
mov
dec
insb
jmp
mov
mov
xchg
or
xchg
cmp
test
pop
movsb
dec
mov
mov
ror
cltd
les
je
cld
shl
imul
add
and
leave
lock
or
dec
xor
js
mov
stos
push
sbb
add
or
dec
aam
call
cmp
add
jmp
jbe
dec
jecxz
and
dec
rorl
jecxz
inc
ljmp
xchg
mov
loopne
sar
mov
mov
push
cli
and
sbb
lahf
lret
push
mov
lret
pop
int
xchg
in
push
jge
mov
push
cs
insl
jo
shrb
mov
dec
lcall
dec
push
mov
pushf
mov
je
push
xor
and
jnp
mov
jl
mov
adc
cs
add
sub
lret
xchg
lea
stos
fwait
sbb
test
dec
push
out
lret
in
mov
ret
inc
pop
test
fdivl
mov
imul
stos
out
or
pop
jns
testb
sub
mov
lds
pop
in
lods
popf
out
xor
jbe
mov
cmp
jecxz
cwtl
xchg
add
mov
xchg
adc
clc
sub
fisubl
add
push
xchg
push
dec
xchg
mov
mov
out
and
nop
enter
and
les
das
adcb
repz
lods
add
arpl
lahf
jo
fs
lock
js
add
mov
sbb
je
loope
jmp
outsb
dec
or
xchg
sub
xor
mov
repz
adc
jge
adcl
frstor
hlt
mov
sbb
mov
gs
sahf
inc
push
pusha
cmp
inc
xchg
lret
push
push
fisubs
sbb
or
or
movsb
xchg
xchg
aam
insl
popa
dec
aas
adc
mov
movb
in
xor
push
xor
or
iret
sub
lods
add
fwait
xor
add
fmull
pop
call
scas
pop
adc
and
adc
mov
dec
dec
sbb
popf
jno
mov
outsl
aam
rcrl
int3
outsb
nop
fidivl
dec
sahf
push
xor
clc
adc
movsb
nop
push
dec
loopne
imul
imul
adc
dec
push
int3
xor
mov
mov
aam
xchg
stc
popa
xchg
loope
dec
push
cmp
les
dec
shl
pop
std
ljmp
push
cltd
mov
push
pop
lea
stc
jp
bound
push
mov
dec
dec
mov
clc
mov
xor
push
ljmp
es
cmpsw
popf
adc
cwtl
out
jge
jne
cmp
mov
rorb
and
shlb
xchg
fmuls
mov
ret
mov
lea
adc
rcll
sbbl
or
push
inc
movsb
inc
push
pusha
mov
adc
sub
gs
ja
pop
lret
test
xor
mov
addr16
std
lcall
fldenv
sbb
loope
pop
repnz
mov
bound
ret
shrl
lds
mov
or
cmp
shlb
sub
out
mov
mov
outsb
jb
shlb
and
cmc
dec
out
lods
mov
or
ss
fdivrl
imul
adc
sbb
and
stos
xchg
sub
ss
enter
adc
addb
jl
into
negl
xchg
or
pop
mov
testb
push
addr16
lds
dec
mov
repz
pop
scas
push
cmp
movsl
sbb
cwtl
mov
mov
movsl
unpcklps
xor
xchg
xor
aas
dec
rcr
add
sub
es
adc
test
jbe
jae
and
sbb
cmpsb
cltd
mov
adc
inc
push
jne
cmp
sbb
aas
ret
mov
sbb
jae
mov
fwait
pop
xchg
xor
pop
xor
pop
sbb
jmp
jl
mov
rolb
lock
ss
cs
shl
jae
ds
inc
ljmp
adc
push
push
mov
hlt
inc
cmpsl
jg
xchg
pop
push
jl
repnz
dec
lret
sbb
mov
jl
into
in
mov
test
dec
ret
cmp
mov
xor
int3
jmp
jbe
mov
and
lds
aaa
push
in
mov
ret
mov
push
dec
push
shll
jl
mov
push
xlat
push
test
stc
sahf
lock
lds
xchg
pop
sti
mov
lahf
ret
in
lods
adc
movsl
mov
or
mov
jg
push
fidivrs
fnstenv
cwtl
dec
es
or
jecxz
out
xlat
lahf
pop
sub
idivl
cmp
jno
jae
lock
loopne
adc
mov
mov
out
mov
in
inc
int3
iret
sbb
ss
fnstenv
mov
push
pop
rol
fwait
icebp
cltd
jb
les
mov
lea
or
arpl
dec
push
pop
imul
adc
xchg
movsl
lret
mov
das
in
out
or
xchg
and
lock
divl
cltd
out
push
imul
dec
pusha
lea
shrd
jg
mov
cmpsb
jns
and
dec
inc
mov
mov
jae
aas
andl
dec
xor
cmc
and
out
push
in
ret
and
shlb
shlb
and
jmp
repz
xchg
in
fimuls
orb
out
loopne
iret
pusha
add
pop
jl
int3
pop
add
push
and
test
and
out
cwtl
jl
cs
lcall
aad
xchg
ljmp
dec
jne
mov
movb
cltd
dec
xor
inc
adc
sbb
push
xor
cmp
outsb
cmp
and
push
push
aad
sbb
or
sahf
stc
cmpsl
cmp
pop
mov
movsl
movsl
lock
test
fcmovb
mov
ffree
inc
pop
movsb
mov
insb
jge
in
inc
fcoml
jg
arpl
cmp
xchg
test
aam
dec
mov
jno
popf
mov
mov
xchg
xchg
pop
pop
cwtl
popf
adc
std
push
imul
cmp
fdivrl
popa
push
inc
mov
sub
mov
and
into
idivl
sti
mov
popa
and
lods
lea
xor
push
int
mov
xorb
push
mov
sti
test
jp
push
jb
cmp
int3
andl
sub
push
push
enter
das
inc
push
and
cmp
adc
pop
pop
jno
testl
push
pop
loop
pop
cmc
xchg
xor
mov
jbe
and
inc
inc
cwtl
lahf
shlb
fldenv
mov
sbb
incb
cmpsb
add
xor
and
mov
mov
lahf
mov
push
insb
mov
mov
cld
rolb
dec
cmp
dec
inc
divb
xchg
es
add
and
icebp
sub
aad
fimull
mov
pop
sti
mov
fmuls
jo
xor
add
idivb
push
or
jp
orb
mov
xor
push
imul
pop
sti
popf
sub
push
xchg
test
mov
fdivl
add
iret
das
sti
or
pop
jmp
loope
daa
adc
data16
or
dec
jle
push
je
dec
scas
sub
lock
aaa
adc
push
fisubl
dec
and
jecxz
popf
in
icebp
add
repz
ds
stos
jae
pop
inc
imul
push
cmpsb
test
xchg
sub
and
push
xor
or
arpl
in
xor
data16
xchg
jecxz
dec
movsl
adc
movsb
insl
push
push
js
fisubs
push
dec
dec
jb
addr16
inc
in
xchg
jo
xchg
sub
test
pop
lret
cmp
pop
mov
sti
dec
add
int3
outsb
out
cmpsb
push
aad
push
test
add
xchg
sahf
mov
dec
cwtl
arpl
mov
fiadds
pushf
enter
dec
popf
gs
cmpsb
and
jmp
lcall
dec
cmp
enter
xor
push
clc
stos
sbb
test
out
and
sbb
xchg
cmp
sub
cld
add
vcvtps2dq
sarb
ficoml
xor
xor
mov
icebp
je
cli
loop
addr16
fwait
ljmp
and
jl
xchg
fwait
or
fwait
mov
pusha
mov
mov
rorb
int3
ret
ljmp
adc
inc
icebp
jnp
loope
lea
mov
ret
pop
xor
or
loopne
sub
sub
jl
loopne
and
imul
or
mov
jno
jmp
cmp
rclb
sub
in
fldt
push
jo
hlt
inc
imul
cmpsl
stos
mov
or
loop
push
in
jl
repnz
stos
leave
pop
jb
les
xor
jp
xor
push
fwait
idivl
or
cltd
outsl
jo
cmp
mov
adc
mov
imul
ja
fcomps
and
fwait
xlat
xchg
push
insl
in
std
aaa
adc
std
cld
pop
jb
ret
sbb
fists
adc
push
sub
adc
imul
mov
imul
cmp
outsl
icebp
and
in
fs
mov
mov
or
mov
mov
jns
cmp
test
and
add
js
pop
or
xchg
sahf
hlt
inc
out
jg
adcl
pop
or
fldl
inc
icebp
cwtl
addr16
leave
fcomps
mov
xchg
mov
mov
lock
idivb
lahf
jle
mov
jns
dec
jp
frstor
popa
or
pop
aaa
shlb
mov
addr16
arpl
fsubrp
and
mov
lock
scas
inc
inc
jne
push
js
test
rcll
outsb
scas
jae
cld
leave
fisubrs
stc
xchg
dec
fistl
popf
xlat
jle
inc
mov
xchg
rcrl
cmpsb
add
fdivrl
lock
in
mov
popf
ss
stos
and
push
rorl
out
xchg
sbb
adc
add
sub
aas
sahf
lret
test
rol
mov
jo
test
testb
push
imul
rcr
pop
sbb
inc
mov
pop
inc
cltd
push
js
fnstenv
loope
jle
enter
inc
cmpsb
ja
fdivl
jl
pusha
and
rcr
es
mov
outsb
test
pop
mov
or
add
inc
sahf
jnp
xor
sbb
outsb
mov
jle
fidivrs
aam
es
jae
and
cmp
xor
jmp
stc
xchg
sub
scas
nop
and
pop
enter
sub
enter
insb
fiaddl
inc
mov
aad
cmp
jle
jne
jmp
dec
call
movsb
adc
stos
mov
repz
ds
push
mov
adc
sbb
push
sbb
add
fdivrl
pop
or
fmuls
ret
movb
mov
xor
sub
les
insl
out
xchg
call
icebp
mov
jnp
mov
ds
cmp
xchg
aaa
inc
imul
popa
out
push
repz
xor
imul
mov
mov
leave
mov
jle
cs
insl
rcrb
fwait
insl
jne
jb
mov
in
push
dec
xchg
jg
aad
sub
jmp
jb
add
jbe
xchg
lds
scas
jge
push
icebp
adc
sti
jae
scas
and
popa
shrb
push
in
push
jns
jmp
fldenv
push
out
jb
ljmp
and
jg
fimull
mov
pop
sub
arpl
clc
mov
jge
xor
fwait
out
mov
push
aas
add
mov
sti
adc
stos
jno
push
imul
and
out
or
cmc
push
xor
push
inc
cli
jbe
movsl
sbb
inc
mov
xchg
and
inc
fisubs
inc
dec
xchg
jns
mov
sti
push
push
dec
sbb
test
sahf
dec
jo
jne
mov
and
mov
int
in
lret
gs
out
mov
sbb
push
add
sub
lret
xchg
mov
or
pop
sbb
in
pop
jge
loop
fs
xor
cmpb
repz
imul
add
das
xchg
jnp
sbb
lea
cmp
mov
inc
das
rcr
cwtl
in
xor
or
add
popf
sahf
out
or
sbb
fdivl
mov
or
inc
or
add
cmp
mov
sub
pop
add
cwtl
mov
mov
jge
stos
pop
inc
hlt
and
popf
push
nop
mov
daa
inc
xor
sub
shll
jns
xchg
push
inc
vunpcklps
cs
pop
jns
pop
and
sbb
mov
cmpsl
fisubl
jmp
test
or
pop
or
out
push
dec
cltd
stc
shr
cmc
or
icebp
enter
jb
popf
add
dec
je
xor
sti
aas
es
cltd
dec
and
pop
sti
xchg
push
mov
pushf
cwtl
data16
pop
movsl
je
mov
dec
mov
dec
pop
sti
jg
push
pop
sahf
ret
cwtl
mov
and
jb
mov
lods
rorl
popa
adc
movsl
js
lea
es
xor
movsl
mov
fmuls
outsl
mov
sar
xchg
test
and
fnstsw
dec
outsb
rcrl
js
dec
pop
mov
add
mov
jle
ja
adc
pop
xchg
xor
pop
adc
sub
mov
jl
aam
test
fs
orl
pop
jecxz
xchg
insl
mov
mov
push
cmp
aad
or
push
shlb
mov
add
pop
inc
mov
inc
push
pop
inc
in
xchg
mov
ss
mov
pop
sarl
add
mov
xchg
ljmp
daa
sbb
xchg
subb
shlb
test
xor
sub
pop
xor
arpl
sub
rolb
xchg
stc
sbb
mov
es
icebp
sbb
mov
cmp
stos
arpl
cmc
loopne
mov
shrl
outsl
outsl
cmpsl
movsb
or
gs
jge
outsb
ficoml
cwtl
pusha
pop
scas
arpl
inc
xlat
fsub
loop
loopne
or
lret
mov
inc
sub
adc
add
xor
not
pop
shr
je
out
push
push
ss
inc
add
jge
rorb
adcl
or
cmpb
dec
adc
test
in
push
pop
cld
bound
fs
cmp
fimull
mov
rclb
lea
xor
js
adc
or
add
mov
idivl
push
js
jle
xchg
jge
xor
mov
sbb
ret
or
mov
andl
andb
negl
int
sbb
lret
inc
sti
inc
loopne
inc
movsb
fnstenv
mov
movsb
sbb
loopne
adcb
shl
sbb
rolb
movb
push
jno
adc
or
es
mov
cmpsl
fnstsw
add
pop
or
mov
pop
add
jp
pushf
jb
push
mov
dec
or
cmp
adc
ds
jns
punpcklbw
mov
fs
hlt
sysret
pusha
cmp
dec
div
jmp
les
push
sbb
pusha
push
ret
add
sarb
jb
scas
or
incb
scas
mov
js
stos
mov
lret
mov
ljmp
mov
stos
dec
mov
and
mov
cmp
push
sbb
clc
repz
imulb
mov
dec
sbb
jmp
xor
xor
push
repz
sti
js
in
stos
movl
imull
fbstp
xlat
mov
mov
sub
jle
mov
gs
or
dec
xchg
add
jb
pop
mov
pop
push
pop
xchg
cmp
sti
testl
add
enter
fs
xor
rclb
popf
test
sti
push
mov
mov
inc
mov
out
fwait
dec
pop
lods
ret
jl
xchg
sub
les
or
or
mov
in
jno
inc
add
xchg
cmc
jmp
cmp
imulb
andb
or
repz
lret
js
imulb
lods
cmp
inc
dec
jmp
icebp
test
fisttpll
adc
mov
jl
pop
filds
or
ret
push
sbb
neg
ss
sbb
mov
cmp
add
sub
fists
aad
dec
adc
and
pop
insl
xchg
xor
jge
push
push
inc
packuswb
or
adc
insl
xorb
xchg
in
xlat
sub
out
inc
sbb
int
std
cmp
testl
mov
adc
cmp
jnp
fbld
lcall
mov
movsb
adc
pop
jno
nop
outsl
lea
popf
mov
icebp
clc
pop
je
cli
or
icebp
push
cmp
mov
aas
gs
cmpsl
clc
inc
pop
and
loopne
xchg
jo
sub
or
jb
dec
pop
cmp
adc
subl
mov
fstpt
mull
sbb
xor
mov
cmp
push
xor
and
insb
add
repnz
fildl
outsl
add
pop
or
inc
daa
int
test
shll
insl
adc
mov
icebp
leave
adc
sub
cmpsb
cmpsl
sbb
mov
xorb
mov
je
or
add
and
popf
and
cli
mov
mov
stos
jge
in
inc
test
and
mov
repnz
jbe
int
lea
fiadds
mov
sub
scas
sub
daa
popa
js
jne
lods
sub
bnd
imul
or
or
std
movsb
mov
and
aam
mov
sub
add
dec
mov
dec
dec
jmp
cmpsl
movsl
iret
or
push
sub
inc
add
hlt
outsl
jbe
divl
stos
cmc
sbb
in
in
mov
cmp
movsb
scas
inc
inc
or
jp
xchg
je
fisttpl
mov
mov
clc
sub
into
mov
jl
ret
jecxz
rclb
or
xchg
sarb
mov
lahf
call
stc
jns
push
jae
js
or
xchg
sub
pop
sub
or
lods
cltd
faddp
mov
inc
shlb
rcll
mov
rcr
pusha
filds
in
xor
mov
cmpsb
mov
daa
iret
leave
es
mov
nop
hlt
ret
test
inc
push
out
fmuls
das
jge
loop
insb
cmpsb
pushf
outsb
addr16
sahf
jo
xchg
fs
mov
sahf
int3
jle
int3
or
mov
mov
rorb
xchg
mov
outsb
push
lcall
fists
imul
hlt
adc
mov
or
rep
rol
int3
xchg
push
int3
insl
mov
mov
or
jbe
lock
js
xchg
lods
ret
in
lods
mov
outsl
fnstsw
pop
scas
mov
sbb
pop
lock
sub
cmp
push
push
rclb
pop
rcrb
int3
adc
loopne
lret
idivb
sbb
or
in
mov
mov
mull
dec
inc
out
sub
inc
jmp
nop
jb
subl
mov
inc
cmpsl
xor
pop
enter
dec
ffree
ljmp
leave
out
jo
push
add
or
arpl
adc
and
icebp
pop
leave
pop
dec
aaa
jns
mov
outsb
mov
xor
fsubr
in
xor
mov
mov
lea
iret
repnz
jbe
out
stos
lret
adc
cmp
dec
enter
lcall
dec
jge
adc
into
mov
shlb
popa
repz
push
in
imul
pop
stos
sub
stc
xlat
and
in
cmp
jae
or
hlt
mov
push
xchg
in
mov
xor
orl
mov
cmp
test
aam
sbb
cld
adcb
loop
push
jg
xchg
lcall
or
mov
repnz
xchg
mulb
mov
dec
xchg
cwtl
loopne
jne
ljmp
xor
lock
pusha
dec
add
cli
stos
mov
pop
pop
pusha
aaa
mov
fninit
fiadds
call
ret
je
out
xchg
and
jnp
out
fs
fwait
push
add
mov
adc
push
addr16
sbb
sar
adc
call
insl
pop
push
mov
shrl
adc
cwtl
add
in
imul
sub
out
jno
into
repnz
push
sbb
cli
ficoml
test
or
sbbl
pop
mov
movsb
jp
out
or
push
sub
mov
mov
push
xor
adc
mov
cmp
sbb
pushf
andl
iret
mov
or
std
test
cmp
subl
add
movsb
mov
out
jge
lahf
xlat
icebp
jb
pop
add
sbb
push
jns
movsl
mov
fmull
cmp
or
xchg
inc
outsl
mov
pop
cld
push
add
repnz
inc
js
cwtl
sub
add
inc
out
roll
mov
jae
test
sbb
pop
sbb
add
or
inc
cwtl
cld
fiaddl
xor
rol
leave
punpckhwd
add
dec
in
mov
xchg
insl
ficomps
push
add
pop
pop
push
int
jg
daa
aas
pop
cmp
adc
adcl
pop
sub
jg
addr16
fadds
test
cmp
jno
mov
jb
push
es
repz
into
sti
push
outsb
bnd
movsl
mov
test
push
test
mov
cs
data16
pop
sbb
loop
sbb
movsb
fbstp
notl
fs
inc
cld
xchg
pop
push
sbb
aad
ljmp
adc
popf
jns
cwtl
push
pop
out
pop
rcl
mov
xlat
negb
cmpsb
cmpsb
addr16
add
adc
lret
pop
fidivrs
iret
or
pop
fbld
jl
cli
stos
cmp
call
js
fidivs
ja
xchg
sar
leave
out
bnd
cld
das
sub
std
out
movsb
dec
mov
mov
scas
fiaddl
rcrl
dec
enter
mov
cmp
sbb
sarb
xchg
hlt
fs
gs
aam
addr16
insb
mov
scas
pop
fs
iret
dec
in
rcl
adc
sbb
lds
out
iret
adc
or
jb
inc
or
std
push
mov
add
mov
adcl
shlb
sbb
jo
in
pop
add
cmp
sub
cmp
mov
mov
enter
jnp
mov
mov
cmpsl
mov
mov
mov
inc
paddd
scas
addr16
ret
imul
test
jecxz
cmp
lds
or
fdivp
mov
jae
cmpsl
mov
addr16
lcall
xchg
dec
lock
sub
inc
inc
jmp
daa
cmpb
cmp
jp
adc
add
jns
adc
pusha
clc
mov
int
sbb
or
pop
and
cmp
adcb
xchg
push
push
mov
in
pop
les
out
xchg
clc
shlb
aad
add
mov
jno
addr16
pusha
fstps
pop
xchg
std
ret
stos
cmc
incl
and
cmp
jne
dec
fsubrs
cwtl
mov
xor
push
and
out
fcoms
cmpsb
jmp
arpl
xor
call
movsl
les
fnstsw
imul
jle
lds
inc
andb
push
loop
or
cmp
mov
xor
fsts
leave
leave
pop
clc
add
call
adc
fbld
leave
test
scas
subb
call
add
rcrl
lods
in
push
adc
adc
push
jb
xchg
bnd
push
or
dec
insl
jmp
mov
test
add
push
aas
insl
push
sub
xor
out
imul
mov
les
loope
xor
iret
scas
sub
clc
cmpsb
and
cmpb
mov
stos
push
xor
cmp
negb
lcall
cwtl
pop
mov
stc
stos
loop
add
push
out
cmp
aaa
jp
mov
jae
imul
lahf
jge
mov
movl
mov
icebp
push
sbb
jle
ljmp
shrl
jbe
rorl
iret
js
movsl
jb
jp
xchg
sbb
insl
sub
pop
sbb
lahf
test
mov
push
mov
and
push
test
shrb
cmp
push
shlb
xor
es
sbb
cmp
ds
mov
adc
iret
and
scas
pushf
in
ljmp
xchg
jge
call
out
out
lret
jp,pn
sub
adcb
enter
jge
lock
out
mov
mov
adc
fwait
mov
xor
int
push
pop
lds
pusha
jbe
test
mov
cli
rorb
xor
ja
push
dec
sbb
and
cmp
sarb
fisttpll
sub
rcl
xchg
xor
jmp
nop
inc
cld
pop
fnstcw
adc
dec
in
bound
mov
nop
push
or
adc
in
mov
test
popf
outsl
cmpsb
les
jg
xchg
std
dec
and
and
pandn
cmp
sbb
ss
dec
or
pop
cld
fidivs
fwait
push
jle
adc
cmpsb
add
call
xchg
movsl
mov
mov
push
adc
mov
inc
inc
out
add
pop
mov
in
lock
into
and
aam
shrb
stc
imul
pusha
shlb
sar
outsb
jnp
test
xor
pusha
test
rol
dec
lcall
testb
pop
and
pop
pop
lret
lods
shlb
xor
in
lods
and
popw
cmp
adc
push
pop
cmp
or
or
shlb
sar
jl
xor
mov
sub
std
cld
dec
xor
or
bound
xlat
lret
loop
mov
cmp
fs
pop
ja
mov
rcrl
mov
pop
sub
fs
mov
bswap
add
fstl
pusha
adc
out
inc
mov
fsubr
addb
jecxz
inc
or
jmp
aas
lret
es
rorb
push
jae
push
daa
ss
ja
out
mov
pop
rep
pop
adc
repnz
jmp
lods
pop
pop
in
jle
mov
fidivs
int
adc
sbb
addr16
xchg
jbe
sub
fstpl
sub
mov
xor
mov
or
xor
das
xlat
push
cli
and
adc
sbb
xchg
mov
cmp
outsl
in
jle
test
aaa
inc
push
cmp
mov
fwait
dec
jle
sbb
stc
add
ds
sbb
mov
mov
fmuls
jmp
pusha
js
mov
mov
mov
dec
stos
lret
or
push
out
sbb
inc
cmp
rcl
and
out
adc
jnp
repz
aaa
movsl
mov
je
lods
lcall
mov
fstpl
inc
mov
stc
outsb
pop
aaa
pushw
cmp
dec
daa
sti
data16
movsl
cmc
dec
outsb
ja
shrb
xchg
dec
jg
repnz
add
or
iret
or
lock
adc
or
pop
imul
push
jo
jae
push
mov
int
cmpsb
lods
fidivl
add
mov
mov
leave
daa
xchg
mov
inc
ss
shr
cmp
adcb
pop
and
sbb
arpl
aam
adc
push
lcall
movsl
xchg
push
lods
inc
adc
mov
pop
xlat
fldl2t
fadd
std
or
cmp
jmp
sbb
ficompl
addr16
xchg
stos
loope
mov
sahf
or
push
cmp
cmc
or
adc
movsl
add
and
push
data16
mov
xchg
fpatan
out
mov
adc
aas
jl
xor
test
ljmp
test
iret
jge
loopne
cmp
int3
xor
int3
cltd
lret
hlt
cvtdq2ps
in
push
in
or
mov
repz
pushf
mov
popa
and
cli
nop
ret
aas
mov
mov
mov
cmpsb
fldcw
mov
outsl
inc
movaps
and
rorb
mov
movsb
movsb
scas
cmpsl
sbb
mov
xchg
lods
mov
lcall
xor
sub
mov
ret
mov
pop
dec
std
mov
xchg
jns
dec
out
fs
loop
loop
out
stos
add
add
mov
sub
inc
ss
inc
dec
mov
pop
insl
lret
and
lcall
popa
rcrl
lods
int
inc
jne
inc
stc
sub
lods
outsb
dec
xchg
xor
pop
jnp
sub
nop
sbb
fcomi
idivb
push
mov
faddp
add
test
xchg
or
sbb
cmp
cmpsb
jnp
les
jb
sarl
lock
in
inc
shll
fimuls
jp
xchg
das
cli
push
repz
ja
jp
cmc
ljmp
cli
movsl
int3
xor
lahf
sbb
js
xor
cmp
or
jo
pop
daa
rcrl
insl
repnz
cmp
cmp
es
aam
add
xchg
or
and
mov
test
out
call
xchg
cltd
daa
scas
pop
mov
jae
fidivs
mov
call
mov
xorb
call
pusha
mov
jge
mov
inc
mov
mov
in
sub
jbe
xor
data16
mov
cltd
mov
or
imul
daa
xlat
add
push
nop
addr16
or
lea
or
sub
es
loope
sub
iret
pop
mov
popf
cld
jb
enter
jle
push
push
call
lds
ljmp
ja
mov
mov
cmpsb
out
cmp
fnstsw
push
pop
jp
add
inc
mov
jle
push
mulb
leave
rolb
xchg
pop
aaa
cs
mov
xchg
scas
jg
lea
clc
iret
lret
push
or
andl
in
loopne
push
sbb
sahf
lret
jg
sarb
outsb
jmp
lcall
in
cmpsl
shlb
mov
lea
lea
fsubrs
inc
cmpb
xor
add
xor
adc
pop
cli
ss
xchg
lods
mov
lahf
iret
inc
add
lods
enter
sahf
movsl
push
popa
sbb
aaa
push
sbb
push
shlb
and
xor
sbb
imul
ja
adc
cs
ret
mov
and
lcall
or
frstor
std
sahf
lock
cmp
and
cs
xor
out
stos
mov
clc
repnz
and
es
aad
or
add
fsubs
sahf
mov
sti
or
sub
jo
sub
lea
outsb
xor
icebp
xor
das
and
out
in
movsb
mov
sbb
adc
pop
mov
fcomp
fs
lods
or
dec
movsb
push
fwait
mov
and
mov
sub
je
das
insb
push
rcrb
xor
iret
mull
jg
push
stos
out
pop
sbb
pop
loope
imul
ss
mov
xchg
mov
outsb
xor
fildll
pop
dec
pop
adc
add
hlt
stc
push
pop
inc
add
pop
lcall
sbb
aas
sahf
sub
nop
or
xchg
leave
mov
sub
out
mov
adc
jo
imul
cmp
xor
pusha
lret
mov
mov
clc
jle
data16
sub
adc
pusha
cltd
fcomi
adc
aas
or
push
andl
sbb
dec
aam
push
dec
pop
push
inc
dec
cltd
sub
aad
cli
xor
dec
or
mov
push
and
dec
aam
lret
notb
movl
popf
push
cmp
xor
push
mov
adc
clc
outsb
mov
cmp
daa
dec
push
sbb
adc
ja
add
ss
insl
inc
push
lahf
icebp
ljmp
adc
jne
dec
sbb
and
test
dec
daa
and
int3
pop
jo
int3
pop
sbb
xchg
xchg
dec
cwtl
cmp
push
jmp
pop
sub
mov
mov
loope
xchg
mov
or
jno
andl
out
pop
cmc
test
pop
jg
add
out
divb
mov
mov
push
mov
sbb
cmp
push
loope
inc
cs
lea
push
push
xor
xchg
les
je
js
inc
into
inc
mov
sub
pop
clc
pop
mov
mov
es
mov
mov
dec
adc
cmp
sub
lret
sub
idiv
les
add
adc
lret
lock
sbb
xchg
pop
loop
xor
xchg
or
dec
outsl
pop
jge
popf
cld
cli
imul
and
fldenv
std
dec
or
add
push
jecxz
jmp
lds
add
icebp
out
cmpsb
pop
lret
lods
xchg
and
inc
xchg
stos
sub
vpsrlq
bound
mov
mov
shll
das
leave
inc
mov
cmc
leave
adc
ret
cmc
data16
testl
and
fists
mov
fsubl
and
in
int
pop
or
xor
mov
arpl
jg
ljmp
pop
data16
shlb
movsl
out
mov
push
xchg
rcrl
mov
and
aaa
or
xlat
sub
pop
sbb
inc
shl
push
rorb
dec
or
pop
int3
aas
in
jbe
aas
lret
dec
outsb
push
inc
mov
pop
das
and
push
mov
and
sbb
dec
lahf
mulb
mov
dec
jae
pop
movsb
and
movsb
stc
inc
aas
dec
mov
push
aam
je
pop
mov
xchg
ja
es
popf
inc
movsl
and
stc
sbb
sub
pop
pop
clc
sbb
sbbl
dec
inc
stos
js
mov
mov
ds
xchg
mov
inc
pusha
pop
and
cmpsl
xor
lret
jg
xchg
mov
or
or
pop
jo
in
sub
ret
adc
icebp
popf
call
addr16
mov
pop
sub
loope
clc
xchg
mov
cltd
sbb
dec
mov
dec
inc
sbb
jge
jg
out
shl
cmp
int
rcrl
fisttps
clc
vmwrite
out
stos
sub
mov
jb
inc
and
je
jg
enter
fsubl
xlat
in
ret
mov
lret
sahf
daa
pop
orl
or
mov
adcb
ds
mov
inc
mov
pop
imull
xchg
mov
xchg
dec
xchg
pop
jne
addr16
sub
cmp
jp
ret
int
lahf
popa
xor
push
ret
rcrb
stc
lods
fsubl
repnz
fucomp
bound
aam
cmp
cld
pop
lret
pusha
sbb
test
and
fcomp
daa
xor
mov
push
xor
mov
pop
daa
mov
stc
movsb
outsb
xchg
aad
push
mov
xchg
popa
movsb
and
sub
stos
lods
fldt
lock
inc
jge
stos
sub
push
cmpsb
hlt
xor
cli
pushf
sbb
mov
mov
movsb
xchg
jge
pop
or
popl
aad
xor
shrb
or
sbb
cmc
lock
dec
idivl
stos
and
movsb
sub
loopne
aas
shrb
jae
mov
hlt
loopne
xchg
xchg
lcall
popa
in
cmp
xor
mov
cwtl
hlt
out
inc
insl
out
mov
inc
push
insl
fucomi
add
outsl
cmpl
das
in
inc
jg
inc
lods
push
fstl
iret
sbb
push
aad
push
mov
mov
fsubs
mov
lcall
leave
aas
mov
push
mov
jmp
sub
pop
mov
add
xor
repz
mov
sti
loopne
mov
and
rorl
pop
cltd
add
icebp
add
xchg
iret
pop
std
ljmp
mov
data16
xor
push
sub
push
imul
adc
loopne
fisubrs
inc
test
jne
ss
out
cmpsb
dec
je
fs
imul
cmc
mov
xchg
pop
out
sub
test
mov
pusha
test
mov
cwtl
stc
stc
rclb
or
ret
mov
adc
iret
lods
test
jmp
mov
pushf
or
jbe
idivb
mov
nopl
pop
scas
pop
sarb
mov
mov
test
pop
andb
push
mov
and
fldcw
and
test
mov
mov
enter
push
adc
pop
push
cmpsl
sbb
out
jecxz
insb
pop
mov
ficoml
inc
push
pop
pop
xchg
cmp
mov
push
mov
fwait
fs
insb
cmp
cmp
sbb
and
scas
adc
pusha
call
push
nop
jecxz
dec
call
movsl
dec
add
jae
dec
dec
cmp
loope
es
and
cld
ja
mov
cmpsb
cltd
sub
lcall
cmp
xchg
jno
adc
ljmp
data16
push
test
fstps
xchg
arpl
rcrl
lcall
arpl
sbb
push
in
jmp
dec
int
test
ficoml
xor
fcoms
pop
jae
in
push
cli
pop
mov
sub
inc
push
and
call
loop
out
xchg
aaa
jge
adcl
sti
pop
iret
pop
mov
inc
outsb
xchg
adc
mov
cmp
addr16
cmc
inc
fs
mov
push
mov
mov
cmc
cmp
aas
sbb
mov
test
cwtl
loope
xor
dec
lret
testb
pop
cmpsb
sbb
inc
ljmp
push
sbb
test
inc
fdivs
xor
inc
push
jns
xchg
inc
in
add
rclb
pusha
cmpsb
push
je
push
loopne
dec
or
mov
cltd
mov
push
in
sub
es
push
sub
cmpsb
jne
jle
pop
out
sbbb
pop
push
pop
test
mov
add
dec
inc
lds
jl
inc
mov
inc
mov
or
call
lods
add
sbb
imul
and
mov
scas
cltd
pop
data16
stos
sub
push
add
lcall
xchg
push
mov
adc
xchg
lods
add
sbb
xchg
adc
cltd
jg
lcall
out
push
mov
push
xor
lea
mov
clc
lahf
and
loop
push
ds
sub
mov
dec
filds
xchg
adc
cwtl
xchg
out
insb
jns
ret
sub
ret
cmp
mov
das
push
or
pusha
push
in
sub
cmpsb
mov
popf
xlat
ja
ficompl
jnp
imul
add
test
and
dec
sbb
jl
xchg
outsb
push
test
or
jg
pop
push
mov
push
lcall
add
mov
jb
mov
dec
addr16
adc
dec
cli
xor
icebp
adc
mov
fidivrs
inc
adc
aas
mov
and
xchg
jp
out
pop
outsl
ret
jge
lret
jecxz
push
dec
push
add
insb
push
or
xchg
sub
and
dec
cltd
movsl
hlt
arpl
fcomi
pop
jge
ret
clc
shll
popa
xor
lea
lret
cmc
jb
repz
xchg
int3
jg
sub
insb
lods
mov
ja
in
push
cmp
fisubl
xor
pop
jl
adc
add
aaa
fwait
cmp
jg
sti
into
shr
in
iret
fisttpll
outsb
jg
loopne
pop
fcmovu
sbb
mov
cmp
push
inc
pop
aad
cmp
mov
dec
dec
sbb
test
xor
aaa
imul
jmp
fnstenv
pcmpeqd
gs
cmc
movhps
sahf
cwtl
loopne
or
les
dec
or
mov
int3
inc
stc
mov
pop
xchg
or
pop
cmp
orb
test
or
lret
pop
and
push
ljmp
inc
pop
jl
push
sbb
pop
jmp
lret
inc
inc
and
jae
subb
test
and
lock
lret
pop
mov
or
jbe
stc
pushf
jns
pop
jle
xchg
cwtl
js
mov
in
xor
nop
and
daa
or
adc
movsb
stos
loopne
aas
pop
inc
rorb
cmp
scas
sbb
adc
jge
push
out
push
jmp
insl
xchg
iret
aad
jae
cmp
push
jl
loopne
test
sub
sbb
dec
xchg
mov
scas
fcoms
lock
cmp
adc
mov
pop
lods
mull
clc
das
adc
inc
out
hlt
push
das
mov
lods
inc
les
fldcw
cmp
es
xor
lret
loopne,pt
loop
int3
insl
lock
mov
or
xor
jne
scas
sbb
push
aad
cmp
and
xchg
push
pop
filds
pop
fcompl
mov
jne
pop
fcoml
pushf
mov
lock
dec
mov
adc
out
mov
call
dec
cmp
psllw
and
rcl
lret
sti
lret
sbb
rcr
mov
pop
mov
adc
pop
cmc
inc
mov
mov
roll
je
mov
mov
xchg
or
push
lock
and
push
jp
repz
fimuls
pop
loopne
inc
lret
das
and
clc
shll
cmc
or
add
stos
lods
sbb
fldt
fisubl
ds
gs
cs
int
loope
cwtl
test
notb
jns
cmp
push
cmp
es
jecxz
jl
adc
ds
xchg
inc
cmpsb
cltd
lret
push
divb
lds
push
out
adc
mov
xchg
pop
mov
cmp
push
sub
outsl
or
addb
sbb
xchg
out
lcall
jecxz
shl
aam
adc
pushl
jnp
pop
jl
aas
dec
cmp
dec
and
fsubrl
mov
lcall
jo
call
ja
dec
bound
fs
mov
jb
aaa
pushf
mov
xor
adc
rcl
or
xor
ljmp
xchg
inc
into
push
xor
sub
sub
sbb
jle
arpl
lahf
in
lds
lock
mov
push
mov
sbb
test
sub
lahf
jmp
cmp
lds
test
xchg
sub
mov
imul
push
push
movb
imul
sti
sub
cmp
cld
pop
test
xor
jg
in
je
jnp
fs
jno
rcll
lret
jp
xchg
aaa
push
pop
pop
pop
cmp
out
roll
sahf
push
fldt
in
push
jg
or
fimull
mov
fsubrp
rcrb
outsl
shlb
cmp
pop
shrl
xchg
or
inc
xchg
stos
aad
adc
mov
repnz
fcomps
shrb
mov
cmp
dec
xchg
pop
outsb
jl
xor
cld
in
or
sbb
out
lcall
out
addr16
repz
in
mov
int
push
pop
inc
cmpsb
mov
stos
icebp
push
sbb
xchg
inc
pushf
sub
test
outsb
or
lahf
cld
fldenv
jb
or
pop
jmp
mov
xor
lcall
pop
hlt
jne
xchg
test
xor
jle
lock
iret
sub
adc
pop
sbb
jno
jle
dec
push
into
inc
shrb
cli
mov
hlt
lahf
and
rcrb
inc
scas
jo
sub
aad
xor
and
testb
add
mov
cmp
lock
insb
jp
push
xlat
mov
sti
jge
mov
mov
idivb
dec
mov
fsubp
cmc
fdivs
sti
or
mov
add
adc
pop
mov
push
dec
ljmp
imul
ss
jg
insb
pop
add
in
dec
jmp
dec
sub
dec
push
mov
xchg
inc
and
imul
cld
cmpsb
stos
lcall
mov
fs
pop
push
xchg
testb
daa
jecxz
leave
mov
mov
inc
fdivrs
pop
sbb
pop
lret
mov
xchg
test
jns
xchg
and
clc
ja
into
sbb
scas
mov
cmp
mov
push
imul
out
std
mov
nop
pop
mov
outsl
movsb
fsts
sti
leave
repnz
mov
fs
lret
fstl
pop
test
imul
cmp
mov
test
stos
push
jg
mov
ds
mov
mov
push
mov
add
movntq
sub
enter
out
pop
sbb
clc
xchg
jnp
add
push
push
cmp
rorb
sub
hlt
movsl
imul
add
xchg
push
in
testl
sarl
xor
shl
cmp
shl
leave
adc
repz
sbb
icebp
inc
and
mov
push
add
xor
mov
dec
iret
pcmpgtb
fisubs
aas
dec
insb
push
add
and
sbb
mov
and
xor
and
xor
jecxz
cltd
sahf
mov
lret
xlat
mov
add
add
push
jne
xchg
inc
sbb
jne
cld
mov
mov
jnp
mov
mov
fnstcw
out
pop
call
pop
push
and
mov
or
xorb
iret
inc
fidivrs
and
call
dec
jl
nop
sub
xor
jne
es
pop
xchg
ds
inc
xor
cmp
jge
xchg
cld
imul
jecxz
jne
ficoml
pop
xchg
mov
lods
pop
mov
mov
mov
mov
aad
nop
pop
test
and
loopne
lret
mov
xchg
cmp
mov
pop
int
loop
push
fmull
cmp
ljmp
shl
pop
pusha
stc
sbb
xor
cmpsl
xorl
mov
adc
push
daa
sbb
dec
enter
sti
xor
mov
cmp
lock
jg
mov
xor
pusha
cmp
icebp
pop
push
mov
xchg
push
push
pop
xor
aam
jnp
mov
jp
repz
fisubrs
lock
or
adc
dec
lret
mov
or
add
lods
jg
inc
lea
sbb
inc
idivl
das
shrl
jl
out
ret
into
in
cmpb
jecxz
sahf
je
in
lcall
je
dec
inc
test
ja
and
mov
fcomip
add
cmp
out
out
mov
das
clts
cld
aad
push
mov
xchg
cmp
int
jle
movsb
std
fs
jle
in
lcall
andl
mov
or
lret
lods
add
cmp
xor
jmp
push
and
xchg
dec
stos
fcomps
leave
int
js
pop
sub
sti
xchg
jae
xor
mov
scas
testb
stc
repz
mov
push
imul
adc
mov
mov
ret
adc
push
fstpt
dec
cmp
ss
pushf
push
lods
mov
add
adc
xchg
fadd
adc
lret
and
push
xchg
in
lock
sarb
push
ffreep
mov
mov
loopne
xchg
test
pop
push
xor
data16
ja
cli
data16
or
ret
inc
pop
jl
cmp
mov
lea
je
insl
mov
jns
xchg
imul
filds
lds
repnz
cmp
pop
xor
cmp
push
les
push
jae
mov
ret
dec
out
inc
or
xchg
sbbb
add
cli
jmp
addr16
sub
sbb
cmpsb
fistpl
adc
push
mov
cld
cmp
cli
jmp
pop
fadds
arpl
xchg
call
pop
lahf
pop
mov
jecxz
std
test
cmpsl
ljmp
loope
jmp
push
push
imul
and
mov
test
sub
mov
and
pop
shr
mov
es
and
test
push
nop
mov
adc
sub
imul
fstl
pop
inc
subl
mov
xor
loope
rolb
add
jl
imul
sub
dec
fidivrs
ss
lahf
inc
mov
aam
adc
jno
cld
xlat
jmp
mov
stos
push
or
int
dec
dec
repz
stos
insb
push
jns
sbb
shrl
shll
and
jae
inc
inc
pop
cwtl
or
sub
es
sbb
and
popa
mov
imul
fmulp
sbb
push
shll
je
stc
test
push
or
fidivl
dec
or
jp
fwait
jle
fadd
sub
fstpt
sub
cmp
jae
xor
dec
lods
imul
mov
mov
jl
rclb
sarl
lret
mov
ja
test
push
pop
sub
mov
sbb
xchg
and
xlat
adc
or
inc
outsl
cmp
and
ds
bound
add
lods
out
in
mov
arpl
push
ret
les
scas
xor
aaa
lret
mov
addl
push
add
out
ret
add
dec
subb
outsl
pop
dec
pop
sub
mov
imul
int3
ret
imul
sahf
std
sub
ljmp
pop
scas
dec
push
push
cmc
and
push
adc
js
cmpsb
sub
sub
les
test
xor
hlt
pop
xchg
clc
sbb
insl
faddp
or
mov
push
lea
dec
stc
sbb
les
push
mov
mov
cwtl
fadds
hlt
inc
stos
mov
mov
test
pop
or
xchg
mov
xor
cwtl
mov
in
sbbl
cmpsl
pop
dec
push
loopne
adc
divl
cmpsb
stos
ret
adc
xor
mov
das
rcrb
ret
sub
cwtl
rcl
fdivrl
jmp
popf
and
dec
flds
and
movsl
xchg
daa
popa
push
aam
jne
lds
mov
pusha
jle
jge
pop
or
arpl
in
aas
mov
pop
xlat
cmp
and
lret
lds
int3
jecxz
in
int
cmp
mov
icebp
or
idivb
aaa
ret
jnp
out
lret
dec
pop
sub
adc
iret
mov
add
adc
ljmp
pop
xor
push
sub
xor
add
movsb
rorb
mov
xchg
leave
mull
fmull
sub
das
daa
cmp
out
pop
jp
stc
mov
pop
mov
inc
shrl
call
adc
xor
xor
mov
dec
mov
test
lods
cmovo
outsl
inc
in
popf
in
xchg
cwtl
popf
jns
in
in
inc
pop
lahf
xchg
xchg
and
xor
out
jg
les
add
rorb
xchg
dec
and
jl
sbb
std
fbld
lcall
xchg
imul
mov
sub
dec
shl
mov
xchg
aad
mov
xor
loope
gs
mov
sub
insb
mov
add
push
push
call
jo
and
call
fwait
push
std
xor
movsl
add
lock
xchg
in
jb
sarb
fisubrl
out
test
inc
mov
rcll
mov
lods
push
cltd
lods
mov
cmc
in
sti
sub
lock
stos
pop
dec
xchg
xor
popf
xlat
into
loop
insb
mov
fcomps
lcall
push
rorl
in
or
xchg
fsubrp
mov
sub
and
rorl
and
pop
jb
sbb
sbb
jmp
sub
jmp
andb
and
cmp
jmp
adc
movsb
icebp
mov
mov
adc
aam
aaa
mov
das
sub
jmp
push
rcr
leave
into
xchg
inc
cs
mov
inc
mov
sarb
mov
cmpl
xchg
ja
xlat
idivb
mov
fiadds
mov
push
sub
cwtl
ss
push
cmp
or
or
fldt
int
or
pop
jge
jo
je
rorl
mov
inc
in
iret
or
lods
mov
dec
xor
push
fxch
pushf
jns
loopne,pt
movsl
int3
lods
mov
xor
add
add
cmpsb
pop
sbb
mov
cmc
xchg
mov
sarb
enter
pop
fs
sbb
lds
repnz
cltd
dec
sbb
jmp
imul
test
insb
push
or
xor
outsb
scas
fnstsw
clc
jno,pt
dec
icebp
jns
jns
sub
mov
and
lret
pop
xorl
mov
or
stos
mov
nop
or
mov
js
scas
in
mov
pop
jnp
aam
movsl
sbb
loope
lahf
sarl
ds
dec
mov
xchg
cmpsl
and
sbb
inc
mov
inc
pop
pop
xor
xchg
sahf
push
fwait
lcall
bt
repnz
in
mov
xchg
pop
dec
insl
mov
insb
push
add
mov
add
xor
popa
stos
mov
ja
pop
push
mov
push
add
lahf
scas
mov
cmc
out
mov
jno
call
paddq
cld
nop
mov
loopne
lods
xchg
jecxz
mov
outsb
sub
int3
imul
jb
in
pusha
inc
push
cs
cmp
ljmp
sbb
cmpsl
lods
stos
jecxz
sub
andb
mov
xchg
in
cli
fcomip
mov
cmpsb
push
outsl
pop
mov
or
test
xchg
cli
push
mov
sbb
xchg
clts
cli
push
mov
dec
popa
sub
add
dec
sarl
jnp
or
bound
iret
ljmp
hlt
imul
test
xor
mov
test
dec
add
aam
or
adc
xor
cmp
jns
or
sar
and
mov
out
sub
mov
pop
loope
fisubrl
pop
dec
dec
xchg
xor
les
leave
dec
scas
mov
mov
add
aaa
mov
sti
add
mov
mov
adc
xor
adc
loopne
test
ss
inc
stc
ret
push
test
rcr
ret
push
ja
add
and
xchg
sbb
dec
leave
adc
stos
out
shll
sbb
scas
jb
insb
or
xlat
xchg
and
pop
inc
aad
stos
jno
jmp
or
out
sub
push
setge
pop
enter
stos
shl
or
and
out
jp
xchg
mov
int3
jmp
clc
iret
insb
iret
mov
shrb
mov
sbb
cltd
sbb
xchg
xchg
int3
dec
cli
pause
lret
mov
leave
inc
mov
cmp
insl
dec
push
dec
jle
int3
into
ss
mov
mov
scas
call
iret
test
test
push
imull
or
pop
data16
dec
jg
addb
outsb
scas
inc
xor
xorl
lea
leave
mov
into
test
loope
mov
sub
lahf
mov
mov
add
scas
mov
jmp
sub
pop
inc
push
leave
jae
jb
push
dec
sub
or
push
xchg
dec
jge
jnp
mov
and
or
mov
sbb
aam
push
test
sub
mov
or
cs
and
push
jp
push
pop
into
mov
pusha
or
sbb
imul
fcoml
jo
pop
imul
mov
cmp
jl
inc
ret
xchg
pop
xchg
pop
xlat
jge
jle
push
pop
repnz
mov
xor
push
pop
out
push
stos
xor
mov
mov
fmuls
int3
sahf
fwait
xchg
aam
mov
fisttps
cmc
scas
stc
sub
lods
repz
dec
in
imul
cmp
shr
dec
into
mov
in
dec
jo
sahf
stc
ds
jp
inc
in
push
loopne
shrl
fwait
inc
mov
cmc
mov
adc
inc
nop
test
mov
incl
mov
xchg
mov
push
addr16
cmpsb
sarl
mov
call
daa
jno
fdivs
enter
pop
xchg
xor
imul
aam
int
push
movsl
lret
fistl
mov
add
xor
adc
cmc
sarb
cs
and
pop
jbe
popa
imul
scas
call
cmp
mov
es
pop
dec
inc
loope
fnstsw
dec
cld
cmpsb
stc
push
cmc
aad
imul
sbb
stc
adc
push
ret
and
lea
sub
filds
dec
dec
outsl
inc
jbe
movsl
mov
jmp
rcrb
loopne
or
and
xchg
and
sub
insl
cli
flds
je
outsb
push
clc
fidivrl
popa
insl
lea
push
mov
pcmpeqw
insl
mov
mov
std
sbb
cmpsl
pop
insl
loope
mov
daa
pop
ss
cmp
mov
ret
ja
imull
ja
les
sbb
adc
inc
and
inc
or
xor
in
fdivs
lret
dec
movsl
fsubs
insb
sub
adc
lahf
pop
adc
jp
dec
xchg
mov
daa
lock
dec
pushf
mov
or
xchg
pop
ljmp
gs
sbb
xor
loopne
sbb
mov
jl
iret
push
popa
xchg
loop
push
cli
ret
xchg
jp
push
jecxz
sbb
fisttpll
out
add
test
and
pop
rcr
inc
jge
setnp
push
mov
jmp
inc
lock
add
fcmovnb
pop
adc
cmpsl
jecxz
mov
adc
ret
jmp
js
icebp
or
into
addr16
ljmp
pop
js
mov
inc
hlt
xchg
add
mov
in
testb
insl
pop
dec
push
insb
adc
fwait
cmpsb
sarb
and
push
insb
push
ds
cmp
ret
xor
pop
push
push
std
sbbl
xchg
sbb
insb
fcom
or
repnz
in
sub
rolb
xor
and
inc
jp
imul
add
rorl
fs
jae,pn
pop
mov
jno
call
mov
pop
mov
pop
outsl
push
cld
sahf
sbb
dec
jecxz
out
sub
imul
push
push
cmpl
or
jno
sub
or
sbb
das
push
or
sub
add
aas
imul
xlat
fadd
test
stos
dec
cmp
inc
int
out
push
jns
arpl
pop
add
subb
push
test
dec
cmp
mov
dec
daa
clc
repnz
addr16
loopne
rorl
add
movsb
xchg
pushf
mov
scas
sub
sub
pop
fnsetpm(287
inc
lods
test
push
xchg
arpl
lods
inc
adc
xor
xor
and
test
inc
inc
fs
or
xchg
fwait
aad
mov
repnz
cmp
fisubl
lods
scas
les
adcb
mov
push
loop
or
ja
sti
xchg
add
jle
lods
jp
xor
int3
stos
out
gs
jae
dec
mov
jmp
nop
xor
mov
scas
out
daa
mov
aam
inc
push
mov
lcall
into
out
setg
sahf
incl
mov
pop
adc
aam
mov
push
leave
xor
jmp
and
insl
bound
cld
sub
pop
fwait
xchg
roll
push
sar
les
xchg
int
loop
adc
loopne
outsl
xor
orl
mov
jg
adc
pop
or
inc
adc
add
xor
rol
adcb
das
notl
xchg
or
pushf
pushf
mov
popf
inc
aam
pop
flds
leave
sbb
or
insb
cwtl
test
push
inc
lea
lahf
movsl
ret
or
lcall
inc
or
das
and
stos
scas
mov
lahf
daa
jne
dec
sbb
out
adc
aam
mov
jmp
sub
xchg
call
sbb
inc
mov
loopne
xor
lahf
aad
pop
cmp
pushf
cmp
enter
push
int
aam
push
cwtl
loope
cld
inc
xchg
leave
adcb
sub
fistpll
and
out
daa
mov
stos
movsl
or
dec
add
jbe
cli
or
inc
push
xchg
fst
dec
sub
dec
xor
dec
jp
cmpb
mov
sub
sahf
dec
mov
inc
imul
sarl
fdiv
aas
out
movsl
cmpsb
push
int3
pop
test
push
sub
adc
fidivs
push
loopne
jae
ret
icebp
repnz
cmp
mov
xorl
dec
sbb
out
pushf
das
dec
sub
js
sub
nop/reserved
xchg
movsb
mov
aam
es
loop
insl
in
je
enter
mov
mov
test
cwtl
je
hlt
xchg
jg
push
test
pusha
insb
sbb
xchg
push
loop
stc
jle
inc
lret
pop
bound
dec
ss
test
jo
lock
cmp
xchg
inc
or
stc
stc
fadds
orb
sbb
cmp
repnz
shrl
negl
lock
adc
jb
out
jmp
or
test
shlb
push
stos
nop
xchg
shr
in
push
mov
inc
jge
dec
setg
loop
loopne
jo
pop
adcb
inc
xchg
and
push
xchg
dec
in
clc
sbb
add
je
loop
inc
xchg
ds
les
add
pop
clc
xchg
push
out
sbbl
dec
mov
aam
frstor
in
jl
inc
or
and
cli
iret
out
jbe
mov
xchg
push
jno
mov
shlb
mov
jmp
daa
repz
sbb
jne
inc
jecxz
mov
imul
cwtl
mov
add
cmp
mov
push
std
lahf
jecxz
outsl
ja
out
push
lcall
subb
adc
movsb
sub
lcall
cli
mov
lods
cli
add
in
adc
int3
rcll
shlb
sub
pop
out
add
aas
sub
jo
sti
jnp
jg
loopne
jae
loop
mov
pusha
stos
adc
dec
add
push
jnp
mov
push
stos
pop
rclb
sarb
xchg
or
mov
adc
xor
cmp
or
add
outsl
push
cmpsb
cmpsl
add
push
mov
in
repz
push
stos
and
popf
lret
lods
adc
cmp
jo
js
shll
push
pop
daa
jno
stos
mov
push
fists
mov
mul
mov
cmp
push
mov
pop
loop
sub
sbb
divb
bound
scas
cld
adc
and
adc
les
mov
xlat
dec
xor
ret
mov
popa
mov
rcrb
xor
scas
push
mov
pop
inc
inc
cmpsb
inc
int
and
xchg
xlat
jne
or
sbb
or
fsubl
jle
jbe
or
arpl
push
test
loope
dec
jb
push
push
pop
mov
repnz
push
xor
sbb
test
ja
pop
inc
mov
push
mov
lahf
enter
aas
divl
nop
dec
addr16
iret
pop
cmp
jmp
xchg
xor
sub
xchg
mov
xchg
hlt
push
loopne
xchg
xchg
dec
fisubrl
push
js
test
sub
jmp
dec
in
add
clc
nop
jecxz
cmpsb
inc
mov
mov
xor
push
out
inc
mov
out
xchg
dec
sub
aaa
dec
fwait
popf
push
push
pop
nop
rcll
cmp
pop
push
cmp
pop
jp
xor
int3
push
mov
test
mov
ret
cmc
adc
inc
adc
jle
ficoms
sbb
mov
and
xchg
lcall
sub
hlt
add
scas
in
lds
push
cmpsl
out
mov
aas
sub
push
push
shl
jg
or
mov
xor
inc
addl
jmp
sarb
fwait
pushf
mov
jno
mov
je
cwtl
dec
mov
fcomi
and
fimull
fstp
movsb
dec
aaa
mov
test
cmp
push
pusha
dec
pop
enter
mov
mov
lahf
xchg
lods
test
addr16
jp
jb
push
addb
cmp
dec
xor
or
decl
sub
ret
icebp
inc
in
push
sahf
sub
xor
int3
sub
jmp
add
mov
js
aad
jae
pusha
xchg
inc
daa
pop
filds
lret
jp
mov
mov
fcomps
out
pop
pop
cmc
inc
cmpsb
cmpsb
lret
add
pop
xchg
pop
adc
push
dec
std
mov
dec
aam
mov
push
dec
fidivl
add
stos
push
inc
flds
fdivl
pop
enter
mov
push
addb
add
mov
paddd
sbb
ds
filds
push
fisttps
add
push
pop
dec
pop
add
mov
mov
roll
pop
ljmp
xor
push
xor
dec
jecxz
or
stos
mov
jmp
inc
adc
cmpsl
and
cmp
insb
jbe
pop
push
movsb
stos
data16
out
sub
pop
movsb
jne
jg
pop
bound
cmp
ja
imul
cltd
or
pop
jnp
mov
aas
adc
inc
cs
mov
lea
int3
repnz
test
les
adc
jne
les
adc
fldl
cmp
popa
push
adc
xor
pop
mov
aas
inc
stos
js
lock
pop
in
loope
pop
xchg
sub
bound
lahf
neg
sub
sub
mov
or
je
dec
xchg
push
ficomps
aas
mov
mov
jl
xchg
lds
dec
mov
and
jo
xchg
sbb
or
shld
xor
pop
inc
mov
push
pop
incl
mov
pop
dec
loopne
xchg
mov
pushf
stos
popa
and
pop
pop
mov
pop
xchg
ret
push
pop
in
movsl
adc
test
jo
add
add
pop
mov
imul
lods
fstps
and
xchg
xchg
inc
mov
imul
mov
sbb
jbe
mov
mov
xor
mov
dec
cmp
cmp
stos
std
ss
cmp
xchg
xchg
mov
cmp
stos
in
ret
xchg
movhps
adc
sahf
sbb
xlat
js
leave
xchg
or
and
push
jl
loopne
xchg
das
test
cs
mov
insb
jle
or
shrd
xchg
scas
ljmp
pop
ds
out
dec
xchg
and
mov
enter
pop
rorb
in
or
hlt
in
lcall
adc
xchg
idivb
push
mov
pop
sub
test
sub
pusha
sub
xor
sbb
or
cmp
mov
xchg
or
mov
nop
pop
rcll
push
lret
mov
fdivs
jmp
pushf
cmp
fwait
stc
adc
ds
fsubp
or
sbb
sub
ljmp
sbb
and
fidivl
fidivl
dec
inc
adcl
or
rcll
add
mov
popf
neg
in
cmc
pop
aad
push
or
fldt
pop
jne
scas
sub
int3
inc
or
addb
into
sub
loop
dec
cmp
xchg
inc
adc
fsubrl
jecxz
push
jp
les
pop
jnp
fwait
les
cli
push
ss
das
mov
mov
jno
push
cltd
subb
mov
adc
adcb
push
ret
and
rolb
xor
je
mov
cltd
jmp
test
dec
bound
mov
roll
inc
inc
inc
jg
push
mov
push
adc
daa
pop
in
mov
dec
sbb
mov
lds
pop
xchg
xor
and
xchg
popf
xchg
addb
dec
or
jecxz
mov
out
inc
stos
popa
test
ret
in
dec
mov
push
ror
sub
pusha
sbb
repnz
lret
test
jae
xor
and
pop
sahf
stc
test
fidivl
dec
inc
fisubrl
dec
lret
sub
clc
mov
inc
xchg
scas
fstps
into
push
into
lret
fucomp
mov
pop
mov
sub
dec
js
lcall
pop
mov
mov
iret
cli
mov
leave
lds
jb
push
mov
daa
pop
xchg
xor
xchg
pop
insl
push
sbb
ja
iret
ret
repz
dec
inc
pusha
and
adc
repz
mov
or
push
jno
shrl
or
fimuls
push
push
push
mov
inc
inc
add
mov
icebp
sub
nop
and
cmpl
adc
int
addl
dec
adc
and
jne
pop
pop
sbb
rcr
outsl
xchg
adc
pop
jmp
mov
outsb
or
inc
jle
jge
es
in
insb
mov
pop
loope
or
rcrl
adc
jb
sbb
sbb
lods
into
scas
sbb
test
sub
dec
cli
add
cmpsb
adc
cmpsl
cmp
pop
sbb
loop
and
cwtl
cwtl
idivb
xchg
ss
inc
jne
scas
xor
fcmovu
mov
mov
sbb
push
cmc
insb
fistl
pop
push
call
push
mov
sbb
leave
enter
test
xchg
cs
lret
das
inc
sub
sbb
dec
sti
inc
xchg
pop
lcall
aaa
movsb
paddd
sbb
cmp
xchg
adc
cmp
push
pop
sub
mov
test
mov
jl
push
or
push
dec
rol
lcall
movb
lock
pop
pop
mov
lahf
or
insl
insl
js
jne
push
fwait
out
shll
cli
add
pop
jle
loop
or
loopne
movsl
sbbl
mov
dec
aas
lret
xchg
mov
aam
jo
xlat
jecxz
inc
jge
test
xor
mov
mov
xor
fiadds
cld
rcll
cmp
mov
bound
push
inc
and
fmull
fcomp
ja
xor
test
addr16
xchg
mov
sbb
test
add
data16
xor
jecxz
jge
mov
sbb
cli
mov
lock
xchg
dec
pop
jbe
or
ss
in
incb
addb
dec
mov
scas
push
jnp
and
sub
jnp
cmp
into
lret
lcall
mov
cli
mov
cmc
mov
pusha
loope
or
xor
cmp
sbb
jl
sub
add
cld
xor
movsl
xor
imul
daa
or
pop
movsb
inc
pop
jne
xor
lods
rclb
and
iret
xor
add
sbb
fldcw
mov
inc
cmpsl
mov
iret
icebp
loop
xchg
out
mov
xchg
dec
add
in
cmp
filds
das
cli
dec
leave
mov
xorl
xchg
clc
push
in
push
fsubrs
cmpl
jbe
sub
or
add
shr
xchg
mov
orl
adc
aas
ljmp
nop
push
adc
xchg
imul
cmpsl
inc
adc
mov
out
add
rorl
decb
arpl
test
insl
sub
mov
prefetchnta
or
aaa
rcll
push
jne
add
xor
shl
xor
push
xchg
ds
xchg
scas
in
shll
mov
gs
adc
addr16
mov
xchg
pop
cmc
pavgw
xchg
in
pop
pop
jo,pt
out
fs
xor
lds
cmp
add
and
cmp
jl
dec
push
fsubs
repnz
aam
push
xor
dec
pop
mov
pop
js
dec
jmp
cmpsl
scas
pop
and
fnstcw
in
xchg
mov
in
xchg
sub
cmc
inc
mov
push
int
loopne
mov
cwtl
and
ficoms
out
jmp
xchg
fadds
ds
cmc
loopne
cmp
mov
pushf
push
jno
mov
adc
xor
pushf
xor
stos
push
outsl
xchg
es
sbb
jmp
add
adc
mov
in
std
cs
mov
push
and
sub
insl
les
mov
inc
pop
mov
cmp
out
ja
mov
jo
pop
idivb
imul
cmp
xchg
call
rol
cmp
leave
leave
sbb
adc
xor
push
fisubs
lods
scas
add
cs
xchg
xor
scas
enter
xchg
cmpsb
push
hlt
out
and
daa
test
ja
mov
shlb
or
insl
ds
imul
addr16
adc
enter
ret
repz
flds
mov
aam
dec
lret
call
ljmp
lea
xor
pop
bound
pop
mov
jae
fnstenv
mov
mov
mov
shll
aam
test
pop
lds
add
int3
sbb
cmp
adc
aad
mov
fistl
aaa
lahf
mov
adc
mov
fisubrs
fwait
adc
lds
sbbl
mov
fld
sub
jo
pop
ds
xchg
pop
mov
mov
iret
pop
pop
mov
cmp
stos
mov
pop
loope
movsb
sub
add
test
add
dec
icebp
lcall
cmp
pop
add
sub
repnz
jno
call
xchg
hlt
roll
mov
inc
or
fs
sbb
incl
push
into
jae
xor
mov
es
jecxz
dec
popa
xchg
rclb
dec
add
mov
push
push
outsl
jb
or
mov
repz
push
shrl
sbb
push
xor
fiadds
rcl
add
cmpsl
push
into
or
mov
fcmovb
inc
and
pop
adc
push
mov
test
cltd
push
xchg
push
mov
dec
sub
xchg
pusha
mov
push
cmpsb
sub
add
orb
inc
imul
push
ret
cmpsb
data16
fs
jg
inc
adc
xlat
or
sti
or
pop
popa
adc
sub
std
or
push
mov
and
cmc
dec
or
add
and
cmp
mov
xchg
mov
and
sbb
cmpsb
jo
mov
sub
movsb
ret
int
pop
xor
cmp
add
mov
sub
clc
sbbl
lds
iret
mov
lock
and
mov
pop
sbb
cltd
jl
ds
scas
push
push
mov
sbb
in
mov
cmpsl
xchg
je
ss
shrb
add
outsb
dec
js
sub
jp
repz
pusha
rorl
mov
pop
pop
cmp
adc
jbe
mov
and
cmp
gs
jae
cwtl
sub
sar
add
aaa
adc
xor
cld
dec
les
loop
jb
sahf
adc
imul
mov
jecxz
pushl
cltd
hlt
call
repz
adc
fwait
lods
dec
or
lods
dec
ds
sub
testl
sbb
ds
es
das
fidivs
cmp
and
loopne
popa
pop
arpl
fidivrs
sar
ret
pusha
mov
mov
mov
out
xchg
mov
cmp
sub
fwait
push
hlt
loop
push
icebp
jns
mov
repz
cs
push
mov
std
sbb
inc
ljmp
lods
jl
mov
insl
into
imul
cmp
ss
pop
inc
adc
inc
loop
lret
cld
aad
fadds
ss
pop
or
mov
sbb
call
or
mov
cmp
jmp
pushf
movsb
push
sti
hlt
fildll
or
adc
out
push
cwtl
jl
out
pop
push
xchg
inc
test
push
cmpsb
mov
insb
out
pushf
int3
xchg
xchg
cs
out
mov
sub
in
xor
or
mov
lahf
add
ret
sub
mov
int
xor
mov
adc
scas
mov
cmpb
lret
add
fmull
fxch
xchg
fs
outsl
mul
enter
mov
rcrb
decb
sbb
pop
and
jb
inc
jl
scas
mov
jmp
outsl
mov
imul
divb
cmc
ds
xor
xchg
lods
sub
ljmp
clc
dec
pop
mov
mov
movsl
bound
cmpsl
int3
test
inc
and
orb
jle
jo
push
aas
mov
test
jmp
loopne
mov
je
daa
mov
and
addr16
mov
loopne
xor
dec
ret
push
icebp
jp
ret
ret
shll
push
in
aad
nop
mov
inc
inc
es
es
pop
and
out
popf
or
rclb
mov
scas
xor
cmp
loop
rcrl
outsl
jnp
inc
into
repnz
cmp
fbstp
ret
xchg
pop
imul
mov
in
ds
mov
sub
jg
cmp
mov
xchg
rclb
mov
in
pop
cwtl
jnp
into
xor
daa
cmp
pop
jg
mov
push
sar
push
adc
add
cwtl
mov
aam
push
mov
xchg
loope
cmp
sar
mov
cli
cmp
addl
mov
std
inc
dec
push
fstpl
push
test
cld
repnz
or
jg
jnp
cmpsl
mov
inc
sub
jbe
jge
nop
xor
nop
add
cmpsb
pop
jnp
inc
xchg
push
push
ds
sbb
sub
pusha
jmp
pop
sub
xor
pop
out
outsb
xchg
aaa
clc
lahf
jg
icebp
test
iret
xchg
subl
mov
notl
inc
sbb
pop
adc
adc
xchg
mov
add
je
daa
lods
xchg
outsl
movsl
insl
push
bound
bound
dec
inc
cli
sub
insl
stc
out
xchg
cmp
fldt
icebp
adc
pop
jp
push
push
push
adc
hlt
mov
and
mov
mov
aaa
pop
pop
mov
sub
mov
mov
xchg
mov
dec
jge
or
cmc
es
mov
jmp
clc
test
aas
jae
adcl
adc
inc
and
insl
jns
daa
loopne
dec
movsb
push
or
fisubl
pop
mov
aas
test
xchg
mov
or
out
iret
rorl
dec
pop
cs
add
sub
bnd
popa
push
jge
ss
movsb
repnz
popa
into
and
stos
js
fidivrs
addr16
lret
sbb
shlb
mov
mov
test
in
mov
inc
sbb
pop
out
and
idivl
outsb
sub
pop
clc
repz
incl
enter
fcmovbe
cmpsl
in
stc
imul
ljmp
outsb
push
mulb
mov
faddl
inc
cmpsb
int3
jl
dec
or
sub
rclb
inc
addl
loopne
mov
jno
mov
mov
out
add
test
scas
fs
nop
stc
mov
fucomi
outsb
out
popa
loop
mov
rcr
inc
lods
cltd
int
scas
hlt
xchg
lods
shll
es
outsl
test
xor
out
out
jo
mov
addr16
addb
test
fbld
dec
loope
shll
cmp
ret
mov
psubusb
pop
pop
adc
out
idivb
popf
pop
orb
add
scas
cmpsb
ljmp
push
mov
filds
cmpb
or
in
and
cmp
or
gs
mov
lods
stos
cmp
rcll
jne
cli
sub
add
pop
xor
cltd
pop
pop
loop
jmp
leave
and
inc
xchg
or
mov
ret
xchg
fcmove
jns
add
sub
jl
push
mull
andl
sbb
or
es
xrelease
repz
es
push
mov
jne
lods
in
in
cmp
repnz
sbb
cs
or
dec
pop
push
mov
ljmp
add
out
xor
sbb
dec
inc
ret
fiaddl
inc
leave
movsl
fisubrs
mov
jns
in
jb
loope
into
cld
andb
rol
and
jb
cli
test
lret
mov
imul
xorl
push
dec
fcompl
jmp
clc
mov
xchg
ret
mov
shrb
addr16
test
or
into
sbb
xchg
push
lods
mov
push
xor
sub
or
sbb
jno
mov
inc
sti
sbb
or
add
add
jmp
cmp
and
cmp
jmp
data16
add
aas
jp
fcmovb
subl
fnstenv
jns
iret
lcall
es
into
pop
ret
cltd
or
xchg
stos
cwtl
jp
int
fsub
sub
sbb
fiadds
xchg
in
and
stos
fldcw
hlt
xchg
jg
lods
xlat
test
fcoml
jge
das
pop
orb
das
adc
cmpsl
rorl
pop
xor
aad
jl
sub
in
xor
out
adc
fucom
pop
mov
cmpsl
pop
inc
jbe
push
arpl
add
rcll
js
mov
dec
push
sub
icebp
sub
add
out
jmp
out
xchg
cmp
cmp
loope
ja
lds
or
movsl
popa
mov
push
pop
pop
ret
jno
xchg
and
push
cmp
pusha
and
pop
dec
pop
lret
sub
jbe
jg
ret
jp
mov
lods
mov
imul
cmp
sub
ja
push
rol
adc
into
adcl
inc
lret
dec
adc
xchg
push
xor
adc
xor
mov
sbb
push
in
aas
dec
xor
popa
mov
cvtpi2ps
cmpb
pop
inc
xor
inc
mov
cmp
mov
or
cmp
adc
xchg
sbb
inc
ret
sub
outsl
pop
dec
xchg
cltd
mov
mov
pop
jnp
int3
leave
stc
cmp
lods
lcall
movsl
sub
out
fstpl
xlat
adc
sub
add
dec
mov
mov
xor
loopne
push
mov
cmp
mov
sub
imul
mov
ficompl
push
or
xchg
dec
pop
dec
insb
dec
fs
mov
mov
sti
call
test
ljmp
es
mov
add
pop
pop
fwait
idivl
push
xchg
inc
sbb
test
inc
repnz
mov
aam
lret
xchg
in
movb
imul
std
fchs
xor
mulb
push
pushf
imul
cltd
lods
jbe
or
gs
xor
cs
mov
insl
xlat
outsb
leave
cmc
mov
rorb
dec
insl
adc
fwait
jno
push
sbb
int3
mov
inc
dec
xor
cmp
pusha
mov
loopne
cmp
and
jb
xchg
mov
clc
push
mov
mov
pop
or
and
add
outsb
loop
movsb
mov
les
loope
pop
cmp
fidivrs
cs
pop
mov
mov
jno
arpl
push
mov
into
pop
add
out
aad
fs
hlt
aam
or
mov
add
and
dec
adc
jae
mov
js
insb
mov
adcb
loopne
push
shrl
es
dec
cmpb
movsl
mull
jmp
in
cwtl
and
push
mov
jo
push
imul
push
nop
icebp
adc
adc
in
pop
leave
jae
and
pop
dec
fs
dec
ret
sub
fisubrs
insb
sti
jnp
pop
xchg
mov
inc
jae
out
dec
pop
mov
add
and
jae
test
outsl
jne
pop
int3
push
push
sub
mov
add
inc
and
gs
es
mov
fnstcw
data16
inc
and
sbb
inc
popa
jns
aam
mov
sbb
pop
jnp
pop
jmp
push
add
repnz
les
arpl
dec
xchg
inc
or
ror
imul
inc
cmpsl
pop
sbb
mov
out
dec
test
loop
inc
push
sahf
cmp
inc
or
mov
lahf
mov
lea
inc
jno
leave
mov
cli
mov
dec
mov
loop
stos
mov
lock
dec
call
sti
fbstp
ret
and
jecxz
leave
lods
sbb
fcmovnbe
cli
adc
push
scas
ljmp
sbb
mov
das
or
insl
lea
imull
mov
int3
xor
aam
jnp
out
cmp
nop
inc
mov
jne
idivb
inc
xchg
mov
sub
cmp
mov
adc
sub
jns
repnz
cmp
test
xor
xchg
addr16
fcmovu
insl
in
jl
outsl
mulb
xchg
in
enter
les
aad
notb
mov
or
aam
cwtl
mov
int3
outsb
dec
cmp
cmp
lock
cmp
insl
ret
inc
data16
repz
lods
dec
lods
dec
insb
mov
or
cmpsb
ffree
jno
inc
cmpl
pop
ret
mov
loop
cltd
cltd
fbld
shll
sub
add
dec
sbb
lea
lods
addr16
or
aam
cmp
xchg
jp
jae
adc
les
into
shlb
add
push
scas
int
arpl
sbb
mov
aad
xchg
sub
cli
xor
xor
pop
movsl
pop
mov
in
gs
ja
mov
jmp
test
jo
out
push
outsl
loop
call
aas
in
pop
sbb
test
insb
push
or
fisubs
test
repz
pop
imul
push
int3
fcompl
add
cmpsl
xchg
inc
insl
cmpsl
loop
or
lods
adc
push
lods
loop
mov
movb
dec
das
out
andl
inc
xchg
jp
sbb
push
mov
sub
in
add
clc
pusha
pop
arpl
jae
cmp
sbb
fsts
mov
in
jno
push
nop
jge
add
in
sahf
jmp
sbb
pushf
mov
lods
in
loopne
adc
mov
arpl
and
cmc
loop
jnp
leave
jnp
sbb
mov
cmp
imul
xor
rorl
mov
mov
dec
lds
repz
mov
add
fcom
cli
in
andb
add
scas
sub
cs
inc
stc
dec
jno
leave
outsl
int3
lea
movsb
jmp
lds
out
mov
lcall
jb
jne
pop
fdecstp
test
ss
jge
adcl
push
cmp
jge
and
aas
sbb
mov
sub
mov
stos
loopne
jne
add
aas
idivb
mov
mov
add
leave
pop
movsl
fbstp
gs
xor
imul
push
push
sub
mov
addr16
pop
mov
mov
mov
sbbl
lahf
out
fildll
pushf
sub
sahf
mov
imul
mov
lcall
xchg
repz
std
pusha
cmpsl
mov
pop
push
fisttpll
pop
pusha
repnz
ret
mov
in
mov
js
icebp
xchg
cwtl
mov
in
jb
int3
fldenv
mov
notl
add
imul
xchg
pop
call
arpl
pop
and
xor
inc
pop
test
mov
aaa
xor
cli
inc
push
and
push
popa
pop
jmp
push
adc
inc
data16
mov
mov
pop
mov
out
mov
into
add
sub
test
addr16
imul
cld
in
add
add
int3
jmp
or
jmp
testl
inc
fldt
into
cmp
loopne
and
jo
fdivrl
std
cmp
daa
stos
aam
mov
pop
mov
fmuls
sahf
pop
mov
adc
clc
enter
cmp
loopne
fwait
shl
mov
test
inc
addb
pop
loopne
int
and
sub
stc
xchg
push
xor
jne
imulb
jle
sub
out
inc
push
aas
push
fs
push
and
mull
push
movsl
inc
push
sarb
pop
xchg
or
aas
jbe
push
fs
fisubl
xchg
pop
cmp
shlb
leave
jge
pop
mov
jmp
xchg
xor
dec
push
repnz
int3
inc
hlt
addr16
mov
fnstenv
add
pop
or
loope
cwtl
fs
enter
lods
mov
jmp
add
out
int
imul
pop
jnp
rcr
lcall
sub
sub
dec
andb
inc
pslld
fisubs
sti
in
inc
sahf
pop
ret
jno
or
stc
mov
and
push
test
sbb
test
inc
pop
loope
fucomip
insl
sub
adc
jno
sub
mov
push
lock
mov
addl
xor
jne
repz
loope
negb
imul
mov
movsl
push
outsb
and
mov
push
xor
sub
inc
mov
cmpsl
dec
pusha
in
shrl
add
imul
cmp
mov
mov
jge
xchg
scas
xor
pop
loopne
les
repz
psubw
jbe
fisttpll
xchg
xchg
jecxz
sbb
xor
cmpsb
adc
mov
dec
dec
or
lds
inc
xor
sbb
mov
aas
pop
shrb
rcrl
cmpsb
arpl
loopne
mov
rolb
xor
movsl
test
fcom
and
mov
repnz
push
inc
mov
stos
mov
stos
ss
cwtl
inc
std
aas
test
sbb
mov
lcall
imul
and
jmp
dec
arpl
int
out
imul
xor
cmpsb
dec
rcr
add
dec
pop
daa
fwait
movd
cmp
pop
jmp
xor
movsb
sarb
and
scas
loop
hlt
les
ds
push
pushf
rcrb
sbb
xor
pusha
lods
int3
xchg
pop
test
inc
aas
clc
jno
outsl
push
jb
loop
fidivrs
in
push
rcrl
lret
fistpll
push
fstl
movsb
inc
or
cmp
push
into
movsl
shll
jmp
adc
cmpsl
sub
mov
cmovge
fbld
sub
fnstcw
sbb
sub
add
repz
xor
or
push
add
fsubs
je
cmp
popf
nop
pop
xor
mov
sbb
cs
dec
sbb
hlt
jns
ret
movsl
xchg
adc
sub
lret
cmpsb
nop
addb
mov
jg
ja
fstpt
sbb
push
mov
mov
fs
pop
insb
js
insb
in
pop
sub
xchg
adc
sub
xor
dec
and
lds
inc
lds
mov
scas
push
mov
xor
loopne
sub
xor
mov
les
add
jl
fisubl
iret
pop
arpl
stos
dec
lea
jo
inc
push
and
push
or
inc
xchg
jmp
sub
hlt
addr16
xor
sbb
and
lea
shll
repz
cs
imul
adc
ss
cmc
fstl
ret
jne
int
das
sbb
in
int
test
or
push
sahf
push
or
cmp
lret
gs
or
xchg
inc
mov
or
xor
xchg
dec
jg
jne
data16
test
int3
int3
stc
xchg
fptan
pop
dec
mov
sbb
and
push
int
xlat
mov
jl
cli
fwait
xchg
mov
dec
cmpsb
jnp
or
ficomps
test
adc
mov
ret
loopne
cmpb
notl
mov
nop
push
mov
inc
loop
pusha
fistps
shlb
mov
sbb
jecxz
inc
outsb
xchg
push
leave
out
push
jp
fcom
int
rol
push
add
xchg
orl
pop
dec
adc
jmp
std
inc
mov
lea
push
xor
push
dec
pop
jmp
call
cltd
ja
jmp
pop
xor
dec
arpl
push
std
inc
aam
enter
push
fcmovne
test
test
xor
mov
jmp
fcomps
sub
mov
sbb
rclb
push
andl
cmpsb
mov
jge
mov
push
jg
stos
mov
pop
jnp
or
mov
shl
test
jnp
les
sub
cs
out
mov
jnp
mov
push
xchg
mov
shlb
arpl
loopne
push
fmull
lea
add
hlt
insl
xchg
out
mov
outsb
dec
mov
push
cmp
mov
pop
scas
dec
jmp
sbb
aaa
mov
out
hlt
fbstp
xchg
decb
gs
mov
inc
call
dec
dec
fwait
shll
mov
xchg
jb
jns
call
scas
xor
data16
add
and
out
and
cmp
sub
sbbl
and
rcr
pop
xchg
in
xlat
movsb
pop
adc
sbb
xchg
xchg
sti
loopne
mov
jb
xor
shll
dec
mov
and
push
repnz
enter
scas
out
test
popa
fldcw
sbb
mov
pop
adc
shlb
idivb
fs
and
popf
xor
xor
stc
mov
push
lret
lret
outsl
xor
mov
mov
inc
adc
pop
and
enter
sahf
out
into
fcoml
xchg
jae
adc
sub
dec
and
clc
and
repnz
subl
mov
mov
jne
enter
aam
jge
sbb
mov
xor
das
jo
dec
pop
int3
xchg
cmp
cmp
push
mov
loopne
push
std
in
xchg
push
push
sbb
push
leavew
lea
js
inc
xor
dec
pop
inc
jg
out
loop
xchg
add
or
mov
cli
cmp
pop
pop
pop
cmp
ja
loop
je
mov
dec
inc
inc
pop
inc
stos
dec
push
cmp
movb
and
dec
jno
lods
and
subb
sbb
jmp
jl
adc
dec
std
fwait
fwait
repnz
adc
jp
xor
mov
sbb
out
out
lock
cmp
fwait
ljmp
fsubl
push
xchg
xchg
aas
sub
aam
icebp
adc
pop
cmp
dec
aam
imul
dec
adc
xchg
sub
imul
jnp
mov
loopne
popa
outsb
xchg
push
std
loopne
sbb
dec
add
into
shll
adc
mov
sub
xchg
jg
mov
or
mov
popf
fsubr
int3
test
nop
xchg
int
mov
iret
mov
scas
cmpsb
dec
ja
jae
mov
sbb
sub
mov
push
call
popf
ja
jb
loopne
push
mov
jae
test
and
or
inc
lcall
push
jp
add
sbb
pop
add
and
repz
mov
cmp
jp
repz
cmp
push
pop
mov
std
jne
cltd
jle
in
and
clc
inc
pop
fucomip
xor
js
cwtl
add
mov
notb
xor
icebp
lods
orl
mov
jge
adcb
repz
stc
leave
or
jb
inc
xlat
shlb
mov
jbe
out
mov
enterw
adc
fisubs
push
push
dec
sbb
sbb
lods
xchg
aaa
scas
cltd
sti
or
test
test
loop
addr16
fildll
push
xor
adc
mov
push
inc
pushl
mov
imul
mov
mov
inc
daa
std
cli
stc
icebp
sbb
lock
jb
lret
mov
or
lods
clc
inc
push
lret
daa
sahf
scas
add
and
pushf
mov
xchg
cmp
aad
das
inc
dec
push
mov
in
aam
imull
das
jnp
ret
stos
dec
sbb
sub
das
add
xchg
cmpsl
pop
dec
int
mov
adc
lea
cmpsl
sbb
push
adc
out
mov
add
cwtl
je
push
sbb
dec
mov
cmp
sub
aas
lods
popf
push
outsl
lret
sub
mov
imul
mov
cmp
stos
mov
sar
sbb
in
adc
fildl
ss
fcompl
jl
dec
mov
xchg
sbb
push
cmp
push
mov
adc
and
or
ret
pop
add
cmp
outsl
daa
popa
sub
xor
stc
inc
jnp
inc
dec
mov
inc
dec
xor
adc
imul
repnz
adc
fpatan
rcrb
ficomps
dec
inc
stos
loopne
mov
pop
lahf
clc
insb
push
sbb
and
adc
xor
mov
cmp
and
cs
mov
iret
shlb
push
lcall
outsl
aad
dec
xor
sub
and
popa
lret
aaa
frstor
sarl
xor
js
add
aam
pop
add
push
sahf
inc
int
sbb
cli
jo
mov
shl
xchg
outsb
pop
add
cmp
mov
insb
repnz
int3
inc
sbb
pop
dec
jb
jbe
mov
testl
inc
jne
movsb
pop
lret
or
push
popf
sbb
and
cmp
push
notl
add
cltd
sub
jmp
hlt
sbb
xchg
dec
loopne
stos
mov
aam
fists
fistps
inc
popf
ljmp
cmp
pop
pusha
scas
test
addr16
bnd
repnz
popf
jmp
add
sarb
pusha
movb
mov
jnp
cli
mov
lret
cmp
ja
pop
or
mov
rorl
clc
cmpsb
out
jp
dec
jle
sahf
dec
in
jge
mov
adc
mov
mov
shlb
mov
dec
sbb
out
mov
jp
dec
push
sub
add
push
sub
jl
std
jg
les
outsb
lcall
pop
jb
inc
cwtl
dec
imul
xchg
push
fldcw
iret
pusha
jl
fisubrs
or
jge
and
mov
lods
loope
add
pop
xor
and
push
rolb
xchg
clc
jge
int3
cltd
inc
jp
add
gs
jno
es
dec
inc
jmp
loope
inc
mov
addb
es
dec
xorb
jns
inc
lea
or
push
inc
add
xchg
xor
fs
push
in
pop
jbe
mov
mov
int3
inc
or
ljmp
aas
mov
push
lret
push
xor
nop
push
sub
shrl
pusha
xchg
xchg
adc
mov
jp
cmp
sub
pop
aam
scas
adc
push
lret
fisttpl
repz
pop
adc
xchg
dec
pop
jnp
js
and
mov
xchg
das
adc
xchg
ret
call
repz
push
loopne
jle
test
push
inc
ret
xchg
lahf
stos
sbb
outsb
push
xchg
insl
xchg
push
jns
fsubrs
shrl
mov
push
flds
jmp
dec
out
lock
cmc
pop
js
mov
pop
js
and
xchg
fbld
sub
stc
fcmove
dec
pop
mov
and
cld
inc
addr16
outsb
mov
bnd
sahf
jne
jbe
dec
jb
sub
pop
mov
xchg
ds
pop
nopl
inc
std
push
mov
add
imul
inc
mov
xchg
insl
or
jl
xchg
test
sub
sub
in
pop
sub
push
insb
mov
cmpsl
jne
mov
aas
or
push
lret
adc
sub
sub
and
fidivl
cmp
mov
jmp
sub
and
fistpll
out
jo
inc
adc
dec
mov
es
movsl
inc
inc
lret
cmpl
jg
xchg
xchg
roll
imul
in
leave
mov
xchg
xchg
mov
xor
xchg
xor
int
xchg
add
pop
xchg
jle
and
jle
mov
xchg
inc
or
rcr
aaa
jne
scas
jl
int
test
adc
xchg
into
mov
xor
mov
push
or
cld
sahf
nop
or
movsl
add
xor
test
ret
xor
into
or
insl
dec
xlat
push
call
dec
jg
loopne
fisttpll
mov
sbb
jo
outsl
xchg
xor
push
sbb
fildll
mov
mov
inc
dec
xchg
fbld
mov
lock
xchg
pop
cmp
inc
lds
mov
lods
sbb
test
adc
addb
test
cmp
je
adc
xchg
ljmp
cmp
insl
and
mov
mov
bound
pusha
ret
call
lret
sbb
lock
in
cmp
push
mov
hlt
xchg
or
insl
mov
nop
add
mov
push
leave
jne
xchg
push
jo
xor
cmpsl
test
xor
mov
mov
stos
enter
movsb
sub
les
js
cmp
cwtl
xchg
mov
loop
jb
lahf
mov
pop
pop
and
adc
or
andb
pop
lcall
scas
rcr
add
in
bound
and
jne
scas
sarl
push
outsl
sub
fsub
xlat
mov
mov
inc
int
pop
push
jns
adc
jb
lods
stos
test
jb
nop
sub
mov
inc
xchg
sub
xor
pusha
push
cltd
push
shl
mov
cli
and
pop
mov
sub
mov
faddl
sbb
jo
in
loop
lods
and
leave
push
in
lgs
sbb
leave
xor
push
or
inc
cwtl
or
pop
mov
cwtl
adc
cmp
int3
sbb
es
xchg
push
shlb
fisttpll
outsl
push
jnp
inc
test
and
jb
cs
int3
stos
inc
sub
in
cwtl
pop
or
inc
jno
push
sub
aad
cmp
or
or
testl
xor
sub
rcr
xchg
and
jp
cmp
or
lock
rcrl
ss
xchg
out
fstl
in
lret
faddl
roll
test
jle
cmp
push
icebp
mov
and
hlt
repnz
test
inc
mov
mov
fidivl
or
inc
rcr
jmp
xor
xchg
mov
mov
dec
mov
scas
pushf
clc
jns
xchg
dec
adc
enter
xchg
test
mov
dec
jno
mov
pop
push
roll
out
ljmp
std
xor
das
jg
jmp
orl
sahf
das
fstl
inc
bound
jp
sbb
adc
lahf
push
xchg
dec
into
loop
pop
and
xchg
pushl
ss
shll
mov
out
pusha
test
and
imul
sbb
ret
mov
sub
mov
lahf
push
frstor
lahf
cmp
push
dec
mov
and
fsts
mov
pop
cmp
jge
das
sbb
dec
rcr
mov
pop
gs
insl
mov
pop
das
imul
test
sbb
in
roll
jno
inc
xchg
adc
out
mov
fdivl
nop
push
aad
cmp
ljmp
xor
jnp
fadds
negl
jl
setns
sahf
test
dec
dec
xorl
das
cmp
pop
test
or
pop
mov
sbb
mov
hlt
adc
inc
in
jge
mov
sbb
xchg
cmp
add
imul
push
jae
rolb
aam
adc
mov
adc
aas
popf
xchg
mov
scas
xor
push
inc
or
iret
pop
xor
lret
lods
xchg
push
outsb
iret
test
movl
shl
movsl
push
jle
ret
movsb
stc
sub
ss
jnp
fdivp
aam
xor
dec
popf
pop
cmp
mov
jg
ret
mov
and
xchg
daa
jp
xchg
xor
std
xchg
xor
adc
das
adc
cld
andb
adc
das
fstpt
xchg
push
lods
movsb
mov
jo
mov
sub
dec
out
sbb
mov
cmp
mov
mov
lcall
inc
cwtl
push
push
imul
fisttpl
cmp
mov
push
xchg
jae
je
and
dec
push
outsl
adc
mov
pop
mov
xchg
mov
dec
cltd
shrb
repz
test
inc
fs
lods
sub
mov
sub
ret
loop
test
bndstx
cmp
das
imul
ja
mov
hlt
adc
mov
jnp
push
lret
lds
mov
ss
jns
jl
mov
push
or
in
mov
mov
jne
push
dec
in
jne
fcomip
in
or
aam
jecxz
sub
fwait
inc
daa
test
sbbb
lret
in
jmp
cltd
sbb
lock
cltd
pop
mov
lret
push
es
daa
call
fcomps
es
ja
call
xchg
xchg
mov
pop
push
lods
xor
shr
scas
arpl
and
push
enter
lahf
imul
mov
scas
push
ror
nop
pop
sub
cli
xchg
cltd
inc
dec
insl
fsub
cltd
imul
or
stos
mov
sti
aad
fs
aaa
clc
mov
jbe
cmp
cmp
pop
cmpsb
pop
ret
repz
lahf
repz
adc
pushf
add
dec
or
sti
test
icebp
ficomps
inc
push
test
and
out
cli
inc
pop
popf
mov
dec
push
aaa
test
xchg
mov
dec
jg
and
add
mov
imul
mov
movsl
push
xchg
fistpll
cmpl
inc
push
jmp
mov
inc
shlb
mov
das
es
ja
adc
fwait
push
jp
lods
lret
rorl
jne
nop
cmp
jge
sbb
leave
lahf
xchg
jb
pusha
repnz
jns
adc
jge
xchg
mov
xchg
pop
ja
mov
or
cwtl
fisttps
test
into
jb
ljmp
sahf
fisttpl
sub
mov
and
clc
sbb
mov
add
cmp
rorb
lods
jmp
clc
push
and
arpl
je
inc
mov
xchg
fwait
inc
cltd
fiadds
mov
inc
cli
push
add
xchg
cmp
add
divb
stos
dec
rcr
push
cmp
into
or
jae
mov
xchg
xor
xchg
test
or
sub
shrl
push
inc
ja
adc
adc
sub
aaa
daa
lea
in
es
pop
mov
xor
or
enter
stos
shlb
outsb
and
xor
sub
pushl
dec
lods
dec
mov
add
pushf
and
mov
ss
scas
lcall
xor
rcrl
push
inc
mov
out
hlt
jnp
push
xor
lods
dec
push
adc
aas
in
je
jbe
popf
sub
pop
lea
pushf
xchg
js
xchg
xor
iret
inc
gs
in
or
mov
mov
mov
dec
cs
pop
pop
sahf
rorl
lds
notl
ret
inc
stc
fwait
stos
popf
popw
popa
mov
outsl
mov
jo
mov
adc
adc
loop
cld
mov
inc
sub
mov
test
xlat
jae
das
cli
movsb
jecxz
fs
cwtl
adc
adc
lods
and
dec
test
cli
cmp
sbb
into
add
leave
cmpsl
push
in
xor
inc
fidivrl
mov
clc
mov
jno
jne
fcmovne
pusha
pop
pop
aaa
outsl
add
ljmp
stc
addr16
bound
pop
mov
push
jge
or
add
std
sbb
data16
lahf
rorl
jle
les
fsubr
jl
sbb
fcompp
addr16
push
mov
dec
jbe
inc
mov
repz
push
sbb
ret
divb
out
cmp
or
test
add
push
int3
sarb
adc
movsb
inc
push
mov
cld
mov
fwait
mov
les
and
in
cmp
mov
jb
stos
movsl
out
repz
xor
das
cld
pop
repnz
hlt
adc
addr16
je
push
dec
aaa
adc
hlt
inc
call
mov
call
xchg
pop
mov
inc
fstpl
mov
rorb
mov
or
mov
fxch
into
in
cli
in
pop
insl
clc
xor
add
ljmp
out
test
push
test
mov
cld
insb
fistl
outsb
xchg
xor
sbb
sti
cmp
cmp
xchg
inc
lcall
jo
hlt
fiadds
mov
xchg
pop
fidivrl
ret
xchg
cs
fwait
jnp
cmpl
je
je
dec
sub
sahf
mov
ss
outsb
inc
jae
mov
dec
call
fs
add
cmp
aaa
ret
jns
addr16
pop
xor
mov
addps
fcmovnu
movsb
jg
pop
repz
in
cmpsl
inc
jae
stc
jo
xchg
insl
in
dec
andb
add
jnp
jge
sahf
mov
dec
mov
out
enter
call
push
ss
fwait
jmp
sub
cmp
push
push
stos
mov
mov
mov
int3
or
aad
ss
jle
or
add
popf
sti
pop
pop
iret
bound
pop
popf
call
stos
and
out
jle
sub
imul
and
out
adc
jbe
jle
das
in
mov
ds
pop
pop
push
aam
pushf
jecxz
arpl
sahf
sub
mov
scas
sbb
cmc
push
jno
xchg
scas
leave
xchg
mov
mov
sub
ret
mov
lahf
scas
mov
push
test
sahf
lods
xorb
add
sbb
imul
lret
jns
inc
mov
cmp
je
add
cmp
jmp
cld
out
add
xchg
subl
push
lret
xor
add
inc
pop
out
and
mov
daa
adc
pop
mov
or
ss
insb
std
mov
mov
lods
cltd
push
xchg
sbb
inc
je
nop
arpl
repz
outsl
fdivrs
xlat
rclb
push
popa
cmpsb
sti
shll
pop
sbb
out
arpl
lcall
jns
lea
sub
add
mov
cmc
inc
jae
adc
push
les
pop
adc
cmp
sub
outsl
imul
insb
loope
mov
out
jb
imul
jnp
das
int
in
mov
jbe
adc
and
jno
outsb
push
scas
push
cs
and
cmpsb
cmpsb
pusha
xchg
leave
add
sbb
js
mov
fldt
inc
int
jmp
sahf
testb
dec
jno
addr16
lea
adc
ss
push
fimuls
dec
push
xchg
rcr
scas
repz
mov
sti
mov
pushf
loopne
jnp
or
pop
sbb
out
cmp
imulb
pop
pushf
mov
addl
cmpl
jns
push
aas
jecxz
mov
xchg
sub
add
dec
inc
std
roll
adc
inc
pop
push
into
aaa
lahf
cmp
lahf
cwtl
pop
mov
mov
iret
push
mov
arpl
adc
fld
xor
push
xchg
cmp
data16
or
lahf
out
jb
xor
jae
push
and
and
cld
cli
ja
rorb
lock
movsl
or
jno
xor
add
xor
mov
movsb
mov
lea
fmul
mov
inc
mov
scas
cld
sbb
movsb
xor
mov
fs
stos
incb
outsl
lods
dec
inc
cmpsl
cwtl
mov
fisttps
lods
add
add
mov
and
xchg
and
mov
adc
nop
repz
data16
add
jno
bound
movsl
xchg
imul
push
lds
jb
jns
cmp
out
imull
mov
jns
lcall
cmp
jecxz
mov
imul
mov
leave
push
pop
xor
sbb
lock
into
aas
pop
xor
jl
xor
pop
mov
mov
push
popf
pushf
push
pushf
repnz
mov
xchg
push
dec
dec
mov
stc
in
testb
pop
decb
mov
jae
mov
or
mov
pop
inc
or
pop
xchg
or
int
inc
popf
cmp
lods
xchg
std
xchg
outsl
xchg
arpl
loope
mov
mov
test
arpl
pop
push
push
in
addr16
and
std
pop
and
cmp
fwait
out
xor
pop
testb
fs
inc
cld
out
int
shll
mov
add
ret
xor
mov
xchg
lcall
movsl
aad
inc
js
fistps
jmp
and
or
aam
pusha
notl
inc
das
xchg
fmuls
xor
ja
xor
mov
popa
lret
mov
and
cmp
lds
mov
aas
inc
invd
or
repz
jbe
sub
cmp
xor
cmp
mov
jo
xchg
add
lock
mov
jns
loop
jbe
mov
addr16
cmp
sbb
js
or
cmpsl
les
mov
and
and
arpl
mov
icebp
ret
in
xlat
scas
push
sbb
jno
pop
leave
mov
into
mov
dec
xor
jno
pop
pop
nop
sub
mov
int
addb
mov
fchs
aaa
xchg
jb
xor
cmp
sub
ljmp
xor
pop
push
fsubrl
movsb
sarl
rclb
mov
dec
mov
adc
insl
in
xchg
xor
clc
mov
test
xor
lahf
push
xor
pusha
test
mov
lret
mov
push
int3
ret
pop
mov
dec
loope
test
std
xor
lock
cltd
push
sub
ss
dec
or
lods
bound
movsb
mov
mov
add
fs
les
clc
test
aam
add
ljmp
dec
dec
pop
lea
clc
fnstenv
ja
jg
xchg
inc
out
ffreep
dec
pop
bnd
mov
mov
sbb
scas
in
test
lods
pop
iret
rcll
jecxz
pop
cmpb
mov
cmpsb
mov
mov
mov
adc
sti
mov
enter
jge
loope
push
lret
sti
loopne
scas
fldl
mov
divl
testl
mov
mov
push
mov
mov
popa
hlt
fldl
add
lahf
jns
lcall
aaa
jge
push
call
dec
scas
jne
adc
adcb
test
jg
aam
push
push
push
loope
cli
test
or
hlt
outsb
popf
in
mov
adc
mov
test
lods
imul
rcrl
sub
in
push
aad
mull
lret
and
cwtl
sub
sbb
push
cmp
mov
jbe
add
adc
mov
or
movsl
inc
sub
into
insb
mov
fs
and
out
not
outsb
rol
shll
fistl
and
ljmp
fldt
aaa
xchg
into
leave
inc
movsl
inc
or
pop
insl
lds
enter
dec
sbb
mov
js
push
mov
nop
sbb
mov
jb
mov
fisubrl
dec
leave
jg
nop
out
movsl
or
lret
and
cmp
xor
fiadds
loop
mov
cmp
ljmp
inc
scas
into
or
in
stos
sarl
mov
out
fidivs
add
lods
loopne
ja
inc
jne
dec
mov
fsubs
push
pop
sub
and
xchg
fnstsw
int
not
mov
cmp
xchg
popa
dec
sub
insb
cmp
xor
sti
repnz
mov
imul
mov
and
stc
or
inc
jno
pop
int
arpl
or
fistpl
fidivl
pop
xchg
pop
push
fdivl
jo
mov
ja
hlt
enter
xor
sub
jecxz
cmc
mov
ja
inc
push
iret
gs
pop
outsb
dec
repz
lock
push
xor
or
insb
fiadds
insl
push
loop
xchg
mov
jno
mov
and
stc
repnz
jnp
arpl
stos
adc
sarl
inc
jae
mov
mov
in
inc
int3
adc
clc
adc
mov
fldcw
fldl
mov
pushf
sbb
jb
gs
add
jg
inc
mov
inc
jle
aad
add
pop
dec
mov
iret
dec
test
and
repnz
push
test
xor
orb
cwtl
test
lock
arpl
pusha
mov
scas
unpckhps
mov
in
jg
aas
movsl
lods
mov
in
hlt
mov
mov
cli
add
test
icebp
xchg
lods
loopne
repz
xor
dec
rol
and
adc
jno
sub
bound
cmpsb
xchg
ror
aad
sbbb
pop
push
sbb
push
aam
cwtl
xchg
outsl
sahf
xchg
fmulp
lret
pop
xchg
fwait
push
sub
sti
out
mov
sbb
mov
fsts
imul
mov
xorb
fsubrl
fsubrl
cmp
cmp
repnz
pop
and
jmp
sbb
js
cmp
rorb
dec
movsl
xor
dec
loopne
or
or
stos
push
pop
ja
xorb
outsl
fisttpll
daa
lods
xor
mov
pop
inc
int
addr16
fisttpll
test
mov
cmp
data16
dec
ret
or
sub
fsubrl
inc
dec
mov
arpl
ffreep
mov
dec
mov
dec
add
push
cwtl
mov
les
adc
or
sti
fwait
jle
aam
aad
lds
cmp
lahf
aad
popa
xor
fistpl
adcl
add
movhps
cmp
cltd
mov
loop
dec
out
insb
in
add
shlb
push
shl
call
mov
jo
mov
cmpsb
push
inc
mov
imul
repnz
js
in
fstl
out
ljmp
sub
outsb
push
xchg
or
mov
and
mov
or
lcall
mov
cwtl
cmp
scas
pop
adc
mov
mov
add
sahf
inc
out
push
jno
leave
data16
inc
inc
pop
pop
mov
lahf
rcrl
outsb
sub
fwait
es
std
push
data16
nop
daa
jno
ds
add
lock
nop
lea
adc
fwait
adc
push
mov
and
mov
jne
push
inc
mov
inc
dec
nop
ret
dec
test
pop
cmp
sub
arpl
xor
ret
test
xchg
sub
aas
dec
dec
xchg
inc
int3
shrl
and
mov
mov
mov
mov
xchg
out
fmull
in
mov
inc
mov
pop
out
cwtl
imul
pop
mov
add
xor
inc
jle
push
pop
xor
dec
fstl
push
popf
sbb
xchg
sbb
sbb
cld
loop
repnz
fiaddl
mov
cmp
or
xchg
int
cs
mov
push
stc
dec
mov
je
xchg
dec
lods
cmpsb
dec
sti
shll
xor
mov
jle
and
pop
cmpsl
loop
jge
pop
shr
and
jg
mov
sbb
popf
out
cld
pop
or
bound
fildl
or
add
out
cwtl
pop
mov
xchg
in
rorl
idivb
aad
jp
xor
xor
jg
jne
leave
xor
jl
xor
rorl
cmp
sub
xorl
nop
xorb
mov
mov
outsb
insb
jno
mov
cli
jo
xor
pop
mov
sbb
rorb
fisttps
repz
add
mov
ret
xchg
add
push
fdiv
pop
dec
mov
mov
scas
leave
cmp
jns
jae
aad
xchg
pushf
pop
add
insb
hlt
sbb
bound
sub
inc
mov
jbe
fwait
dec
push
inc
or
mov
cmp
inc
les
aas
divb
xlat
aam
pop
repnz
lahf
add
mov
mov
repnz
test
imul
in
push
shlb
std
ret
jbe
js
iret
in
push
jae
iret
or
repz
lock
dec
fwait
cmp
sbb
adc
xchg
xchg
sbb
jbe
jl
mov
push
add
sti
clc
fisubrs
push
jb
paddw
inc
mov
test
adc
repnz
adc
repnz
cmp
leave
xchg
scas
xchg
jb
jbe
sbb
sub
pop
push
lcall
mov
div
imul
push
jge
mov
repnz
outsb
or
push
mov
out
lock
and
pop
mov
cltd
xor
cmpsl
out
pop
push
rorb
dec
fwait
cli
nop
je
cmp
mov
lret
push
lods
fcmovu
add
fcomp
push
stos
mov
mov
add
aas
inc
adc
outsb
insb
sahf
inc
in
out
js
sub
sub
stc
aad
cmp
adc
and
rolb
sbb
jno
xlat
inc
add
ficoms
xchg
push
dec
adc
sub
jnp
fdivs
inc
and
xchg
int
scas
cmp
lret
jbe
in
fldt
dec
xor
push
adc
fimull
cmp
add
pop
adc
test
ficomps
pop
test
add
xor
fsubrs
fmuls
xor
rorb
sub
xchg
xchg
es
or
das
mov
add
sub
mov
xchg
mov
jmp
push
xchg
adc
shll
pop
std
enter
popl
xor
mov
mov
pop
add
add
mov
or
and
cmp
clc
ret
mov
jge
add
iret
mov
mov
adc
mov
lahf
xchg
in
pop
aas
sbb
fistpl
outsb
pop
aaa
js
ret
sub
inc
xlat
enter
cmp
jecxz
lahf
call
sbb
mov
xchg
in
adc
inc
lret
loop
cld
mov
je
pop
rcrl
mov
addb
dec
push
adc
mov
and
call
push
or
cmp
lea
ja
in
mov
or
jmp
sbb
cmp
cwtl
pop
popa
pop
movd
shrb
fwait
rolb
aaa
stc
arpl
xchg
jmp
mov
cltd
and
mov
adc
mov
ljmp
iret
ds
xchg
mov
out
movsb
sbb
jl
arpl
cld
pop
cmc
xchg
jo
sbb
xor
cmp
ss
mul
or
ficomps
rorl
mov
sbb
pop
jb
ljmp
push
dec
push
mov
pop
inc
cltd
inc
mov
inc
inc
xchg
mov
inc
jno
popa
test
test
nop
jl
inc
inc
mov
rorb
nop
hlt
in
mov
fisubs
mov
data16
ljmp
mov
pop
dec
out
rcrl
pop
int
cli
lds
pop
jns
push
add
outsl
cmp
shll
push
add
or
pop
test
add
shl
xor
and
cmpsb
and
cmp
in
sbb
jns
jo
add
mov
imul
cmc
jnp
es
hlt
insl
cld
and
out
iret
fwait
icebp
call
lods
stos
mov
mov
fcomps
add
sbb
mov
cmp
popf
lahf
out
enter
pop
scas
lret
fcompl
iret
pushl
movsl
adc
mov
addr16
dec
push
ja
sbb
or
add
mov
sub
adc
mov
mov
adc
pushl
mov
sbb
mov
adc
lods
je
enter
cmp
mov
xchg
cmp
rorb
hlt
adc
cwtl
outsl
xchg
cli
lea
add
lods
xchg
mov
cmpsb
daa
lahf
adc
sbb
shlb
xor
stos
out
xlat
inc
push
sbb
lea
add
iret
movsb
jo
aas
inc
mov
imul
test
cmp
pop
movsb
and
je
jnp
xor
inc
sub
fst
and
sbbb
and
inc
mov
imul
push
shll
push
div
popa
fnsave
loopne
jg
mov
mov
je
xor
push
cwtl
and
insb
js
fdivrs
ds
insb
sbb
cmp
fisubl
inc
xchg
daa
lods
fwait
dec
mov
movsl
mov
imul
jp
jle
cmp
adc
xchg
sbb
stos
pop
fldl2e
adc
cmp
repnz
mov
addr16
in
fwait
xchg
sub
fmull
xchg
loopne
push
rclb
gs
movsb
mov
data16
je
and
xchg
in
repz
out
mov
dec
jecxz
fmul
sub
in
xor
aad
mov
mov
push
dec
aam
xchg
lahf
and
push
ficoms
loop
out
stc
sub
dec
xchg
dec
pop
cli
xor
adc
mov
mov
adc
add
mov
xor
push
inc
outsb
lock
aaa
pop
add
mov
jle
inc
jmp
cmp
out
pop
in
sub
sbb
xor
adc
arpl
sub
arpl
sub
repz
or
mov
out
out
repz
mov
gs
mov
out
or
or
mov
ds
mov
mov
gs
mov
jo
sub
setg
push
std
inc
daa
mov
adc
jecxz
xlat
notl
mov
pop
lods
dec
dec
jns
jnp
neg
cs
cwtl
sub
aas
int3
imul
insb
push
daa
repnz
cmp
cmp
ja
sub
cwtl
mov
ljmp
inc
push
pop
std
pop
pop
fcomps
mov
push
scas
out
jg
jbe
stos
call
jp
pop
das
jg
cmp
addr16
add
fidivrl
mov
cmp
adc
inc
das
mov
insl
mov
jmp
popa
cmpl
gs
std
jp
negl
jnp
dec
mov
cmp
cmp
int3
fisubrl
std
mov
push
imul
xlat
js
add
mov
test
cmp
pop
xor
ret
test
add
sbb
rcl
int
push
xor
daa
lret
cmc
or
xchg
cmp
pop
lcall
xchg
cltd
mov
sub
test
test
sbb
stos
dec
add
mov
out
out
stc
mov
xchg
mov
in
es
std
std
mov
int
movsl
xchg
in
dec
dec
ret
shr
int
test
ret
fwait
adc
xor
mov
stos
insl
shlb
jbe
icebp
dec
jge
mov
sbb
mov
sbb
fldt
sti
jle
mov
jp
inc
sub
les
leave
mov
arpl
fcomps
dec
pop
pop
or
sbb
and
mov
sub
jo
inc
call
jmp
dec
cmp
push
push
jl
or
pusha
mov
popf
je
push
mov
mov
xor
cs
mov
dec
adc
gs
test
ret
sbb
jb
aas
mov
push
das
push
pop
xor
and
sub
xchg
mov
mov
push
mov
jae
popf
xor
repz
fs
xchg
fwait
scas
andb
in
xchg
add
push
in
or
inc
cs
nop
lahf
imul
xor
xchg
cltd
xchg
push
es
iret
xor
or
in
cmp
popa
cltd
outsl
push
push
lret
aad
pop
mov
xchg
push
scas
adc
adc
insb
stos
push
mov
cmpsl
mov
cld
xchg
add
cmovg
xchg
mov
xor
into
push
adc
xor
out
mov
pop
lds
add
call
adc
jne
pop
add
lods
mov
push
sarl
fnsave
sbb
int
sbb
adc
or
pop
push
cli
mov
mov
xchg
add
cmpsl
fsubrp
cli
int
push
pop
ja
pop
xor
dec
add
push
mov
movsb
pop
lret
inc
lods
fsubrp
in
mov
adc
inc
push
movsb
mov
ljmp
icebp
xchg
pusha
sub
incb
xchg
push
cwtl
jp
sub
pop
jge
sub
push
or
imul
sbb
jo
cmpsb
in
sarl
rorb
inc
insb
es
cmpsb
xchg
ficomps
jp
adc
loop
sbb
leave
negl
add
insb
sub
mov
mov
dec
ficoms
push
popf
idivb
mov
push
dec
les
inc
inc
orb
data16
aas
mov
dec
dec
arpl
mov
insb
jmp
cmc
push
xchg
sub
sbb
mov
dec
fnstenv
jb
push
sub
or
mov
sahf
pop
arpl
mov
imul
sbb
mov
loopne
mov
inc
mov
sahf
cmp
in
aaa
andb
insb
lcall
shlb
mov
xlat
outsb
fdivr
and
push
xor
mov
bound
sbb
pusha
jno
dec
arpl
scas
cmovo
mov
icebp
test
sbb
fcmovbe
cmc
add
imul
pop
mov
xor
mov
int3
jg
fistpl
push
sahf
fcmovb
sbb
mov
lods
add
sbb
fiadds
jno
sub
sub
rorb
mov
xor
out
imulb
addr16
imul
outsl
popf
mov
ja
xchg
popa
test
clc
cs
je
negb
mov
jmp
inc
and
mov
dec
or
push
hlt
xchg
push
aas
push
jg
loope
movb
je
subl
hlt
adcb
shll
xor
cwtl
nop
adc
inc
ss
testb
mov
mov
pop
jle
jecxz
mov
popa
enter
sub
loopne
sbb
mov
inc
mov
repz
pop
mov
aas
cs
mov
into
pop
sbb
negb
outsl
adc
pop
movsl
cmp
adc
lds
fmuls
mov
xor
std
pop
cld
int
rorb
rclb
andl
inc
fdivl
xor
xlat
dec
or
add
push
imul
push
insl
lcall
mov
repnz
scas
fmuls
leave
out
mov
enter
insb
dec
mov
test
pop
enter
push
xchg
sub
enter
and
and
hlt
adc
jl
xchg
jno
lret
pop
fs
xlat
out
lahf
adc
nop
add
call
into
paddq
add
and
mov
xchg
adc
int
ds
loopne
inc
mov
aas
in
fdivrs
fstps
pop
pop
add
cltd
loop
hlt
test
sub
jns
inc
mov
dec
cmp
push
pop
pop
xchg
or
je
jne
xchg
push
xor
and
mov
and
bound
sbb
and
lahf
dec
cmp
dec
call
mov
dec
mov
insb
aas
sbb
mov
and
test
pusha
cmp
pop
outsl
scas
inc
aaa
loopne
cmp
jbe
add
jecxz
pop
stos
jb
cwtl
ret
sbb
jge
fisttpl
adc
mov
ficompl
pop
mov
or
in
add
sbb
les
sbb
mov
addr16
lea
jp
sub
je
jge
fcmovb
xchg
xchg
pop
cmpsl
sbb
or
rorb
ret
addr16
push
shl
xor
xchg
jb
les
push
push
cmp
in
mov
mov
cmp
mov
xor
dec
fbstp
sbb
or
loope
mov
loope
mov
sbb
and
cmp
loop
sahf
repz
js
push
and
cltd
mov
stos
mov
pop
in
mov
mov
mov
movsl
or
cmp
pusha
mov
mov
xchg
mov
out
mov
sub
aas
push
pop
mov
cmc
rorl
and
mov
sbb
mov
aaa
xor
les
shlb
ret
data16
add
clc
sbb
fbld
imul
repz
pushl
pop
adc
mov
mov
and
adc
jg
loope
fldenv
repnz
sub
mov
pushf
add
fbld
hlt
sub
dec
cmc
outsl
cmc
jo
mov
lods
mulb
dec
stos
pop
loopne
cmpsb
and
mov
push
ljmp
cmp
les
push
cmp
inc
divl
test
mov
in
xchg
dec
scas
xchg
fildll
mov
pusha
inc
pop
mov
and
add
or
pop
fdivrl
dec
fwait
add
iret
call
shufps
aas
push
adc
test
mov
inc
dec
out
adc
push
pop
jle
in
fsubrl
fcmovnb
cmp
mov
cpuid
pop
int3
push
xlat
ja
and
cwtl
cmp
sbb
int3
jl
shl
js
jmp
fcompl
std
iret
jp
popf
mov
shrl
fs
das
lret
cltd
and
inc
hlt
mov
xchg
push
add
int3
fwait
pop
subb
mov
add
sub
incl
adc
sbb
jmp
lods
xchg
dec
bound
in
mov
mov
add
inc
inc
les
sbb
mov
jge
scas
and
mov
mov
pop
mov
xchg
pop
xchg
push
add
pop
out
insb
and
xor
inc
ljmp
cltd
rcll
mov
and
sub
lock
mov
push
push
cld
push
inc
es
or
push
inc
nop
out
fsts
les
and
mov
adc
mov
out
sahf
or
scas
pop
repnz
je
fsubs
inc
jo
les
jge
pop
or
lds
lods
sbb
sarb
push
and
out
inc
cmpsb
mov
sub
movsl
test
jl
push
decb
aaa
or
or
loop
stos
dec
dec
rcr
or
orb
push
inc
mov
fs
mov
mov
add
lahf
dec
cmc
pop
xor
lret
mov
mov
inc
push
mov
jmp
lcall
jbe
sub
dec
mov
adc
adcl
xchg
shlb
int3
and
sbb
or
test
fwait
cmp
dec
mov
add
out
test
das
xchg
jl
movsb
mov
scas
shll
xor
inc
sarl
nop
lea
sti
mov
scas
xor
fsubs
xchg
out
int
aam
mov
add
cld
mov
sbb
dec
sbb
add
mov
sbb
adc
jle
push
ljmp
sbb
dec
data16
adc
repz
sub
loop
sub
cmp
xchg
sbb
es
mov
int3
loop
sti
testb
stos
jge
push
mov
stc
adc
test
sbb
lret
enter
jbe
cli
icebp
cmp
xchg
int3
jp
in
mov
dec
shlb
push
lahf
jmp
imul
mov
js
sbb
loope
cmp
out
xor
bndldx
sarl
mov
adc
dec
cmp
inc
and
dec
push
jmp
out
rcll
leave
rcrb
jge
push
int3
imul
push
xchg
or
iret
lret
push
sarb
sbb
pop
fiadds
mov
mov
or
inc
mov
mov
iret
adc
pop
pop
jo
add
mov
jo
hlt
mov
add
jno
cmc
ret
mov
push
adc
es
iret
jge
clc
insb
mov
das
fcmovnu
lock
pusha
xchg
clc
push
xchg
sub
icebp
loope
pop
adc
lcall
jecxz
pop
xchg
jmp
sub
cmpsb
sub
fidivrl
outsl
test
inc
xor
push
pop
ret
inc
insb
enter
jns
popa
cli
mov
ss
inc
stos
add
fistpll
add
fiaddl
mov
mov
pop
pop
dec
out
in
xor
adc
inc
fwait
aad
cmp
dec
and
sahf
pop
xorb
sbb
dec
jns
lea
mov
xor
sbb
cmp
lcall
xchg
pop
mov
lret
fwait
neg
pusha
dec
add
ficoml
xchg
scas
xlat
imul
dec
cmp
and
outsb
leave
push
or
push
pushf
mov
movsl
dec
adc
push
jo
ja
push
add
mov
std
stos
mov
fbld
mov
scas
sbb
xor
das
push
stos
cmp
pop
pop
or
adc
xchg
and
mov
and
fmul
xchg
out
inc
lret
dec
and
mov
mov
test
sbb
subb
mov
sbb
lahf
into
jl
lcall
jl
inc
dec
dec
cwtl
aas
lea
imul
lcall
inc
pop
or
aad
js
pop
ror
push
cmp
jp
lods
loopne
push
sub
enter
sub
test
pop
and
sahf
mov
dec
adc
pop
fwait
jae
insb
sti
aam
in
jbe
jbe
fsubrl
pop
mov
out
jmp
aad
clc
cmp
imul
add
xor
xor
adc
or
ror
fisubrs
pop
sbb
lock
dec
adc
movsl
inc
sbb
xchg
or
lcall
sbb
das
pop
cmp
mov
test
sahf
jnp
or
test
mov
push
fwait
sbb
mov
xchg
cwtl
mov
mov
loope
mov
mov
inc
subb
mov
or
and
sub
add
fisttps
arpl
fimull
sti
mov
mov
and
popa
xor
or
jae
push
sbb
xor
xlat
imul
gs
pop
push
pop
cmp
mov
pop
outsl
inc
inc
jmp
arpl
mov
lods
ja
sti
sbb
adc
push
and
aam
rorl
aaa
test
jg
stos
jns
mov
lret
jl
repz
push
mov
addr16
adc
out
loopne
outsl
es
cmp
adc
mov
test
jecxz
push
stos
xor
mov
sub
out
pop
sbb
test
dec
scas
mov
nop
into
leave
out
imul
mov
fldenv
adc
jns
roll
popa
xchg
pop
cmp
xchg
sbb
lret
loopne
jnp
xor
scas
subl
arpl
push
or
xchg
lahf
jne
test
call
push
roll
fsts
insb
aam
mov
cmp
sbb
mov
and
into
hlt
movsb
loop
dec
pop
push
cmp
test
push
push
and
fsubl
fimull
pop
pop
lret
aad
mov
ljmp
lea
adc
dec
popf
cmp
or
mov
cmp
push
jmp
push
test
das
enter
ja
mov
add
out
clc
mov
adc
loop
xchg
xor
mov
mov
cmc
mov
inc
add
aam
test
es
imul
insl
sar
pop
daa
testb
jecxz
inc
push
loop
mov
mov
stos
fcmovu
cmp
arpl
pop
into
pusha
sbb
pop
xchg
dec
add
xchg
add
fisubrl
test
xor
sbb
jecxz
dec
add
mov
and
and
mov
jp
mov
sarb
xlat
mov
mov
in
xor
data16
pop
and
jecxz
mov
mov
ja
mov
mov
fsts
shr
push
pop
and
mov
mov
pop
and
setnp
xchg
pop
out
sbb
bound
addr16
ljmp
sbb
xchg
fdivrs
insb
scas
ljmp
xlat
repnz
mov
pop
and
and
inc
mul
jle
push
dec
jmp
sub
lret
cltd
cmp
mov
and
ficompl
add
out
testb
dec
mov
push
lcall
popf
aad
sub
pop
lret
xchg
add
inc
fldcw
jne
outsl
mov
subb
fldenv
insl
cmpsb
dec
imul
mov
cmp
icebp
hlt
fisubrl
stos
and
sbb
xor
mov
aam
cld
loope
mov
pop
inc
insl
shll
cmp
ret
repz
sbb
sbb
je
out
loop
int
mov
icebp
mov
sahf
test
adc
insl
es
repnz
cmp
pop
and
mov
dec
fcmovnu
or
das
popf
in
inc
shrb
movsb
test
and
in
or
das
hlt
add
and
adc
lahf
arpl
scas
sub
add
inc
ja
inc
addr16
mov
loop
ja
ljmp
rolb
idivb
pop
mov
stos
mov
faddl
sbb
loope
pop
sub
popa
mov
xor
mov
imul
mov
jle
jns
fnsave
mov
mov
iret
mov
xor
or
into
and
jle
mull
push
add
mov
sarl
or
push
or
int
inc
call
pop
dec
xchg
inc
push
filds
inc
push
mov
inc
mov
mov
jo
call
clc
pop
das
inc
dec
je
cs
pusha
test
stos
notl
rcl
xor
xchg
sub
mov
rcrl
sub
cmpsl
mov
dec
jo
imul
dec
call
push
aas
lods
and
and
fwait
sbb
out
jecxz
lock
in
or
xor
jo
mov
push
pop
ret
or
push
out
ljmp
mov
adc
neg
dec
lret
mov
push
xor
adc
mov
and
mov
or
dec
ljmp
lea
cmp
das
shll
cwtl
and
sbb
xorb
xchg
int
lds
das
sub
out
xchg
cmpsl
scas
pop
shrb
sbb
fwait
jge
fidivs
mov
pop
pop
mov
sbb
push
sahf
xchg
jle
add
es
xor
scas
and
adc
js
aad
aaa
out
pop
push
mov
cmp
mov
push
add
out
popa
and
pushf
rclb
bound
insb
mov
cmpsl
arpl
mov
pop
push
leave
in
pushw
mov
dec
pop
xlat
xchg
int
movsb
lret
cld
scas
cmp
rclb
loop
mov
roll
ret
bound
or
add
out
dec
xchg
addr16
dec
test
sub
adcl
fcomps
fisubrl
test
das
std
xchg
jbe
mov
imul
cmp
sbb
add
cld
mov
dec
pushf
cmp
mov
js
inc
pop
gs
mov
shl
lds
inc
xlat
ja
jmp
mov
jecxz
outsl
or
cmp
dec
aam
cmpsb
add
loop
into
and
push
insb
ds
rclb
xor
call
push
aaa
popa
ss
lods
pusha
push
out
sub
test
mov
das
test
lret
mov
sbb
outsb
popa
xor
cmp
enter
push
rorb
rep
dec
push
aam
dec
pop
pop
arpl
and
lea
fsubrs
fsub
jge
mov
insb
xchg
lods
cmp
sub
inc
jp
jmp
int
push
mov
andb
mulb
andb
push
dec
test
divb
push
xchg
cmpsl
inc
das
jge
cmpsl
add
iret
sub
test
sbb
sbbb
outsl
mov
jle
int3
push
or
mov
dec
jmp
cmp
xchg
faddl
insl
sub
dec
push
xchg
repnz
popf
xor
pop
jae
dec
mov
jo
cmp
xor
mov
sbb
cmp
push
dec
add
dec
cmc
dec
jge
or
and
mov
adc
mov
mov
xchg
push
fstps
imul
xchg
adc
sbb
mov
adc
int3
testb
sub
xchg
cmp
lock
adc
aas
mov
sbb
aad
lret
xlat
push
lahf
push
cltd
lahf
aas
call
adc
pop
or
xchg
xchg
popf
int
or
ja
sub
fcompl
fnstcw
cmp
or
inc
repnz
ret
push
mov
push
xorl
aas
and
imul
mov
es
in
lods
lods
pusha
xchg
add
push
test
cmc
lea
fstp
mov
cmp
add
lods
xchg
cmpsl
test
mov
adc
js
mov
insb
adc
loopne
leave
andl
inc
mov
fwait
mov
jge
xor
mov
jae
and
adc
mov
xor
mov
stc
mov
pop
ljmp
mov
stc
sbb
mov
push
push
inc
test
adc
adc
repz
push
incl
cs
lret
push
mov
jno
insb
or
bound
repnz
sub
out
inc
pop
or
test
icebp
xor
pop
dec
test
dec
mov
gs
iret
sub
outsl
xchg
xchg
and
or
mov
jbe
dec
dec
mulb
popa
jmp
lods
mov
in
cmp
pop
pushf
sbb
dec
mov
xchg
std
push
sub
shll
fildll
pushf
aas
cmp
filds
aad
push
movsb
inc
add
jl
mov
mov
fs
fsubs
cmp
and
fidivrs
lea
leave
pop
fs
xchg
mov
xor
pop
cld
adc
lock
daa
mov
stos
sbb
outsl
inc
jmp
sub
xor
test
inc
inc
pop
mov
and
dec
ss
cltd
xchg
hlt
int
sub
imul
jo
cmpsb
gs
movsb
roll
jno
and
add
cmp
popa
shlb
or
sub
xchg
inc
ret
adc
aas
arpl
in
negl
and
sbb
adc
hlt
jo
inc
lret
test
xor
mov
mov
daa
ds
fidivrs
andb
pop
mov
pop
pop
cmp
fwait
les
scas
jbe
daa
xchg
dec
jecxz
mov
mov
ret
pop
push
inc
mov
notb
aad
ljmp
mul
mov
xor
sbb
cmp
inc
repz
sub
xorl
mov
aas
les
shll
ljmp
out
stc
in
icebp
insb
mov
and
shlb
imul
sti
lret
xchg
in
in
sbb
dec
push
cmp
sbb
movsl
xchg
js
mov
jns
mov
mov
mov
mov
movsl
push
mov
inc
sbb
stc
negb
scas
and
setbe
xchg
add
or
cmp
cmpsl
dec
jl
les
or
xchg
movsb
aam
insb
pop
clc
jo
cmp
enter
dec
xchg
das
xchg
pop
dec
aaa
fwait
xor
int
and
lock
outsb
icebp
push
dec
jecxz
scas
cmp
gs
inc
or
push
cld
add
mov
fnsave
out
jg
call
xchg
pop
hlt
add
fcomps
addr16
lcall
int3
jae
jnp
xchg
ret
popa
inc
fsubrs
aas
cltd
in
sub
adc
test
std
jbe
sub
push
lahf
test
jp
add
cmpsl
cmp
or
aam
add
jmp
je
jo
sbb
cmpb
pop
repz
mov
mov
dec
ds
in
lock
into
xlat
imul
imul
add
cmpb
push
adc
sub
push
int
jae
xchg
jno
fnstcw
mov
dec
jb
nop
pop
xchg
loope
and
call
nop
pop
sbb
cmp
jmp
scas
adc
enter
mov
aaa
fcomip
dec
mov
insb
lea
adc
adc
and
inc
cmp
out
call
sub
gs
dec
jl
xchg
and
cmpsb
imul
jmp
jbe
repnz
outsl
inc
ficomps
jns
lds
dec
sbb
push
hlt
jo
mov
test
jecxz
outsl
je
pop
xchg
push
dec
scas
fmul
mov
and
ljmp
push
jnp
cmp
leave
inc
mov
cmpb
mov
fisttpl
mov
into
adc
int3
mov
xor
ficoml
idiv
xchg
jecxz
test
es
sar
les
shrl
out
in
dec
mov
fimull
loope
mov
loop
sub
sub
cmp
daa
into
test
in
shr
push
popf
mov
mov
mov
dec
popa
lret
into
mov
rcll
sbb
cmp
cmp
mov
adc
fwait
mov
mov
add
xor
aas
or
adc
loope
scas
xchg
cwtl
sahf
rcr
push
pop
push
adc
idivb
orb
inc
jmp
lahf
pop
fidivrs
ret
lods
sbb
jns
jecxz
cmc
mov
xchg
push
out
xor
mov
rorl
shll
inc
loopne
jecxz
aaa
ja
mov
mov
mov
movsl
out
movsl
lods
icebp
jbe
xchg
jg
dec
clc
cmpsb
jns
cmp
sbb
push
repz
and
into
cli
xlat
pop
shl
inc
out
mov
mov
xlat
out
dec
out
push
jb
ss
adc
xor
fs
aas
inc
dec
movsl
leave
pusha
out
adc
cmpsb
add
sub
or
fmuls
loop
cmc
mov
push
jg
jnp
les
cwtl
and
imul
in
pop
inc
fidivrl
add
dec
push
dec
lock
adc
jb
incb
stos
pop
ret
adc
cmp
mov
jge
mov
xchg
xor
mov
mov
xor
xor
sbb
arpl
daa
pop
dec
sbb
or
mov
fstps
shrl
leave
mov
das
mov
add
dec
xor
shrl
jmp
sbb
jg
mov
repz
cmp
frstor
outsl
aaa
out
in
das
pop
or
dec
test
js
int
and
es
fcomi
mov
push
ret
js
ss
mov
cmpsl
push
std
sarb
cli
pop
adc
add
add
xchg
js
or
movsb
cmp
mov
pop
sbb
push
int
cli
pop
call
lahf
rol
lock
pop
cld
lock
in
lea
ljmp
mov
add
cwtl
pop
pop
cwtl
dec
inc
cld
sub
jnp
inc
adcb
add
cmp
mov
or
dec
out
out
adc
mov
testb
mov
mov
scas
jb
push
and
mov
and
jge
jae
pop
mov
sbb
dec
fwait
jbe
ds
lret
mov
negl
sbb
dec
adc
fcompl
in
loopne
roll
inc
fiadds
dec
dec
dec
popf
dec
and
dec
jb
lods
sub
pop
push
adc
sahf
mov
leave
bound
push
popf
cmp
pop
adc
into
hlt
lds
sub
aam
jb
repnz
test
dec
sub
add
pusha
mov
inc
jle
cwtl
int3
leave
scas
cmp
popa
inc
adc
jnp
les
negl
xor
loopne
pop
mov
cmc
daa
lods
mov
sub
cmpsb
xchg
dec
inc
jae
xchg
dec
mov
repnz
pop
sbb
fisubrs
push
add
jbe
mov
iret
sbb
push
cmp
xchg
repnz
loopne
push
gs
sub
xor
mov
ror
pop
adc
mov
inc
lcall
fucomip
fs
fs
dec
lret
dec
mov
dec
mov
ret
jne
popf
mov
cltd
and
push
lea
out
adc
data16
mov
xchg
lock
stc
cld
je
inc
pushf
das
cli
pop
cmp
pop
push
pop
and
dec
lahf
mov
jo
jge
shrl
jl
mov
lret
mov
hlt
mov
ja
mov
xor
mov
mov
and
jo
push
xor
mov
fcoms
pop
add
inc
out
dec
hlt
ret
lcall
jb
loopne
xchg
cwtl
inc
inc
test
rcrb
out
arpl
ss
pop
inc
and
adc
push
sub
push
push
xchg
mov
es
shl
ret
cmp
outsl
mov
add
incl
sub
mov
popa
cli
cmpl
inc
outsl
data16
mov
sar
cmpsl
addl
mov
fisubs
fwait
in
pop
sbb
mov
prefetch
lahf
pusha
imul
sahf
test
shl
pop
ljmp
je
bound
sub
cmp
push
push
sub
xchg
cmp
push
ds
dec
pop
lds
shrd
fisubl
push
push
lcall
add
dec
push
jns
in
fdivs
jle,pt
push
xchg
or
dec
sub
idivb
roll
in
shr
mov
lods
push
roll
adc
push
les
dec
popa
xchg
movsb
and
lahf
rcr
sub
enter
xchg
lods
jle
sbb
int
orl
pop
and
outsb
or
imul
inc
notb
mov
rorl
and
mov
or
and
mov
pop
imul
inc
push
mov
mov
int
js
lods
adc
cwtl
add
inc
and
xchg
dec
stos
mov
scas
das
fld1
test
xor
aaa
pusha
jnp
sub
jge
adc
dec
out
push
and
decl
rcrb
inc
pop
inc
sub
insb
leave
dec
add
pop
add
das
loope
sub
js
or
adc
scas
dec
mov
sbb
sbb
or
pop
leave
cld
mov
pop
push
pop
add
xchg
in
in
mov
loop
daa
push
mov
data16
mov
add
and
mov
push
cwtl
add
jp
sbb
test
scas
sub
mov
out
mov
xor
adc
cli
inc
mov
inc
lock
test
addr16
adc
and
movb
sahf
cmp
add
and
jo
jge
cmp
xor
xchg
jns
pop
xor
add
cltd
xchg
fsubrl
lock
pushf
pop
mov
bound
pop
lret
out
adc
dec
mov
out
jno
je
daa
mov
das
imul
push
cmp
mov
in
mov
insb
push
loope
sub
xchg
pop
mov
stos
mov
push
arpl
int
les
adc
cld
lcall
push
or
mov
adc
push
xor
jmp
aas
stos
pushf
dec
xor
ret
xorb
fiadds
shlb
lahf
sahf
pop
inc
xchg
loop
orb
and
sbb
jae
mov
inc
lcall
xor
xlat
or
adc
adc
orl
aam
inc
daa
adc
mov
mov
ss
das
sti
cwtl
rorb
cmp
push
mov
mov
loopne
sub
xchg
lret
fdivrs
leave
push
push
inc
adcl
xchg
add
sub
adc
add
jo
cmp
icebp
or
pop
push
xchg
jnp
and
mov
das
push
inc
aad
movsb
orb
pop
scas
out
pop
cmc
sub
cmp
fldcw
lea
aaa
adc
xchg
sbb
inc
loope
mov
enter
movsb
add
test
mov
inc
and
nop
je
cmp
test
xchg
push
sbb
push
mov
je
dec
shll
xor
sarb
aaa
pop
mov
aas
or
jmp
xor
adc
xchg
or
push
mov
mov
mov
cwtl
mov
push
es
push
jge
aad
cli
push
sub
sub
xlat
mov
dec
mov
xor
and
mov
jno
mov
push
sub
xlat
cwtl
adc
popa
call
mov
lock
cmp
scas
pushf
icebp
jle
xchg
dec
sub
rcll
mov
jecxz
push
neg
mov
cmpsb
inc
mov
pop
loope
xorl
ss
sub
push
dec
ficompl
push
push
mov
and
pop
hlt
xor
jae
fisttpll
addl
cmp
pop
fadds
pop
cmp
hlt
arpl
and
popa
sbb
jbe
pop
je
xor
enter
mov
add
loop
mov
mov
lret
and
add
outsl
fmull
sbb
hlt
mov
pop
add
jmp
ret
ss
cmpsb
mov
and
dec
leave
test
pushf
pop
mov
inc
out
xlat
dec
mov
scas
int
roll
dec
push
jbe
rorl
and
jmp
mov
rcr
cmpsl
push
add
and
mov
fst
xchg
add
push
jecxz
xchg
lahf
fcmovbe
cmpsb
dec
jne
in
mov
xchg
adc
mov
add
fiaddl
scas
xor
add
and
js
xor
cmpl
jge
inc
push
aam
rorl
pop
outsl
pop
popf
adc
andb
fsubrs
leave
push
imul
cmpsl
jnp
scas
lahf
imul
push
inc
jmp
fucomi
cs
mov
nop
jo
xchg
jno
pop
sbb
cmp
and
imul
es
dec
andl
sahf
and
test
xor
in
rolb
fwait
cli
adc
cmp
mov
mov
mov
and
xchg
insb
push
rcrl
ret
mov
jp
fcmove
pop
stos
push
add
aad
clc
repz
mov
adc
bound
loop
stos
sbb
push
pop
pop
lret
or
xor
fisttpll
jne
pop
xchg
out
or
scas
pop
add
dec
push
in
jno
add
shrb
mov
iret
aam
mov
nop
sahf
subb
inc
rcll
adc
mov
jo
fstl
and
sar
xchg
push
pop
nop
adc
push
adc
add
pop
hlt
pop
push
mov
mov
insl
jo
test
lods
out
and
pop
fld
outsl
mov
jno
add
js
pop
dec
repnz
std
scas
popa
jp
mov
xchg
mull
xlat
add
cmp
mov
sbb
lds
ljmp
pusha
cmp
cmp
pop
stos
push
jns
xchg
icebp
cld
sub
call
mov
loopne
das
fdiv
inc
daa
jne
les
dec
icebp
fidivrl
fsubr
or
jp
leave
xchg
jo
jne
sbb
push
test
scas
fcmovnbe
push
into
inc
cmpsl
mov
mov
scas
movsb
push
mov
in
xor
xchg
and
sbb
enter
mov
pop
std
divb
stc
pop
fsubrp
repnz
setno
in
cmpsb
lcall
and
addl
cli
movsl
mov
dec
pushf
fsub
xchg
lods
cmp
arpl
xchg
ficomps
pushf
loop
or
insl
dec
nop
mov
fildll
pop
test
ret
dec
cmp
sarl
xor
popf
jo
fwait
test
add
mov
sub
jno
loopne
lret
sahf
mov
sub
sub
cmp
push
fimull
test
jp
dec
adc
xor
movl
push
out
or
popf
mov
out
test
cmp
push
pop
out
jnp
inc
in
sub
imul
sbb
xchg
out
lret
in
addl
mov
out
mov
cmp
xchg
fnsave
lcall
nop
fldt
or
dec
js
mull
inc
sarb
test
and
movsb
mov
or
mov
out
inc
mov
js
and
icebp
shlb
fiadds
mov
mov
sahf
sti
cmp
pop
sub
das
nop
repz
movb
cmc
test
xor
pushf
mov
jb
shrl
out
mov
cs
lods
out
std
lret
mov
in
call
sbbl
mov
out
rcl
pop
jmp
fldl2t
jmp
inc
das
dec
inc
in
jge
or
add
sub
pop
ljmp
pushf
cmp
push
add
in
jb
sti
jns
mov
jp
shrl
xchg
pop
mov
dec
pop
fbstp
xchg
xchg
daa
adc
xor
andl
cmp
mov
adc
pop
mov
fldl
test
int3
popa
iret
cmp
dec
sarb
adc
sahf
push
mov
popf
mov
dec
andb
mov
bound
aas
pushf
xadd
out
pop
les
mov
and
jae
xchg
dec
xor
aas
jnp
dec
or
add
test
xor
andl
stos
pusha
rorb
fwait
push
push
mov
cmc
sub
fcmovbe
jmp
sbb
leave
mov
pop
enter
cmp
test
ret
popa
out
pop
add
push
adc
or
ret
mov
sub
push
pop
pop
daa
stos
inc
loopne
in
push
push
dec
inc
mov
jbe
mov
push
sbb
movsb
popf
inc
cwtl
inc
stc
mov
rclb
gs
dec
iret
andb
scas
daa
ss
jp
pusha
arpl
dec
and
sbb
or
xchg
imul
bound
and
add
xchg
push
into
mov
sub
jge
push
sbb
mov
jo
into
dec
cld
ljmp
add
pop
jae
test
xchg
mov
push
push
pop
fldt
fsubrp
ret
ds
fstp
adc
add
pop
loopne
cwtl
push
pop
xchg
loop
data16
mov
clc
je
les
mov
mov
fcmovnbe
mov
rorb
push
fs
cmp
popf
push
xchg
add
cltd
jp
std
adc
inc
das
jmp
and
pop
adc
jne
pusha
lret
stos
rcrb
das
push
shlb
or
scas
mov
repnz
jae
sbb
sub
jecxz
xor
pushf
jl
jmp
outsl
mov
jb
iret
and
mov
pop
movsb
push
xlat
push
movsl
outsl
mov
cmp
add
jbe
pop
out
idivb
xor
push
pop
ret
mov
xchg
decb
mov
jge
add
sbb
and
push
push
jle
mov
clc
pop
and
push
mov
and
aam
nop
insb
ret
outsl
test
push
out
push
add
ret
pop
icebp
test
jmp
jbe
aaa
int
ret
stc
test
pop
push
idivb
dec
lock
test
jo
xchg
jns
push
out
mov
and
xor
add
repz
mov
imul
adc
sub
sarb
jbe
push
sub
movsb
mov
mov
stc
cs
in
repz
jecxz
adc
lds
dec
js
mov
xchg
enter
lods
js
fstpl
out
inc
push
push
sbb
test
insl
xor
push
pop
fwait
xchg
dec
lods
xor
jle
xor
xchg
pusha
rcrb
jo
mov
lock
fs
pop
subb
adc
dec
loope
mov
fcoml
pmulhuw
fisubs
lcall
push
aam
stos
cld
xor
pop
inc
shlb
lret
or
int3
pusha
jmp
loop
push
into
xchg
or
nop
mov
cwtl
mov
sbbb
pushf
faddl
xor
loope
bound
xchg
nop
inc
mov
in
adc
xor
and
int3
out
sbb
jle
push
mov
xor
ret
test
push
dec
sarb
lea
dec
pop
sbb
inc
jae
dec
adc
mov
lea
das
test
decl
jmp
aam
xlat
test
mov
mov
out
cs
ds
orl
adc
xchg
repnz
xor
aam
push
lds
jnp
mov
pop
push
jnp
mov
xor
ret
shlb
pop
or
shrb
scas
fcomp
mov
ljmp
outsl
mov
jne
pop
lcall
cs
or
jecxz
pop
or
jo
imul
pop
mov
cmp
in
add
stc
xchg
mov
jns
jno
mov
popf
movsl
aam
jl
sbb
jge
jp
mov
dec
adc
mov
out
and
xchg
jp
sbb
int
xchg
pop
int3
fsts
push
jns
mov
inc
cmpsb
pushl
int3
add
add
loope
iret
imul
adc
lcall
sbbb
mov
cmc
sti
mov
imul
dec
out
pop
jae
or
dec
outsb
ja
inc
fsubrl
push
sti
xor
push
data16
jmp
jns
push
sbb
pop
in
sbb
mov
pushaw
les
sbb
aad
and
mov
jle
ret
test
adc
push
mov
cmp
mov
ja
push
mov
jb
xor
ljmp
sbb
leave
push
or
loope
lret
fnstsw
mov
or
add
and
inc
jecxz
xchg
and
inc
arpl
inc
jmp
add
shrl
and
stc
adc
sbb
test
jmp
hlt
lds
jge
mov
arpl
cmp
out
sbb
mov
rorl
rclb
aas
pop
inc
shll
push
scas
and
jne
inc
das
inc
test
sbb
pop
lods
subb
sub
int3
roll
mov
leave
mull
add
jbe
or
mov
mov
das
xchg
dec
push
in
mov
pushf
imul
jns
xchg
out
mov
lock
xlat
fucomi
pop
mov
js
insb
adc
pop
mov
add
push
divb
pop
jne
nop
push
cwtl
outsb
pop
push
lret
jae
testb
sub
loopne
popf
aaa
add
mov
sbb
sahf
aad
mov
jbe
mov
ja
push
adc
jge
das
jg
js
loopne
stc
lcall
pop
cmp
xchg
cld
cmp
dec
inc
out
aam
adc
out
xchg
adc
es
adc
stc
jg
jecxz
test
test
adc
jno
daa
sub
fwait
push
rcr
hlt
in
fwait
sbb
pop
jmp
inc
inc
jecxz
or
push
fs
jno
in
int3
mov
rcr
fcoms
into
das
roll
mov
rclb
mov
mov
mov
pop
xchg
mov
or
dec
into
pusha
data16
sub
aad
fwait
aad
jno
or
in
adc
andb
push
and
xor
sbb
dec
mov
movsb
inc
or
rcl
mov
mov
xchg
sbb
xchg
cs
pusha
mov
shr
adc
xchg
test
pop
jo
mov
jns
iret
in
sbb
push
pop
mov
pop
xor
mov
sub
loop
loop
add
jb
lea
sub
jbe
std
and
sub
jbe
cmpsl
add
xor
jne
add
push
pop
mov
jns
mov
fdivl
pop
enter
adc
inc
outsl
jae
movsl
pushf
rorb
mov
out
add
inc
sub
fisttpl
and
xchg
push
lea
movsl
xor
jecxz
pop
xchg
add
push
cmpsl
lock
shll
lods
cmp
cmc
adc
call
jecxz
in
movsl
sbb
cmpsb
fidivrs
mov
inc
lret
mov
xchg
stc
xlat
nop
jb
cmp
dec
add
int
xchg
out
insb
arpl
push
repz
cld
and
lea
sbb
inc
push
push
sbbb
push
inc
pop
test
or
insl
mov
push
hlt
lcall
sarl
and
sbb
loop
dec
mov
xchg
adc
in
ret
incl
push
out
stos
inc
and
mov
dec
pop
or
push
mov
pop
mov
clc
popa
stos
sub
mov
shll
push
je
ss
enter
repz
mov
pop
mov
mov
ljmp
xchg
in
adc
xchg
ds
add
arpl
hlt
sahf
jle
add
sub
jle
jl
and
rcrl
push
or
inc
jmp
and
mov
cmp
xor
cwtl
cmp
adc
test
imul
sti
jmp
out
test
das
pop
and
sub
or
mov
arpl
popa
leave
into
insb
ss
pop
or
ja
enter
je
sti
push
mov
hlt
dec
and
push
lds
push
mov
dec
cmp
push
pop
gs
nop
cmp
or
mov
xchg
sub
in
pusha
xchg
mov
out
aaa
xorb
into
jg
pusha
mov
add
repnz
sub
ss
mov
mov
das
mov
repz
adc
push
dec
sahf
sub
mov
lcall
jne
in
jnp
imul
dec
ret
cmp
repnz
cwtl
or
loop
sbb
cmp
sbbb
inc
notb
out
jne
mov
inc
sbb
daa
fwait
xor
push
loopne
mov
in
push
inc
mov
cmpsb
call
in
arpl
mov
rcl
xchg
mov
inc
mov
push
leave
dec
nop
fidivl
fistps
out
jae
cmc
add
jne
popa
in
insb
mov
hlt
test
xchg
or
and
xchg
sbb
cmovb
dec
and
adc
cmpsl
out
test
dec
or
sub
popa
fs
movsb
pusha
sarl
dec
mov
sub
pop
dec
push
into
not
jbe
mov
add
iret
loope
negb
fcoms
xor
ret
insl
das
jecxz
int3
test
pop
mov
mov
rolb
cmp
test
rorb
shl
dec
ss
aaa
out
dec
test
ljmp
push
push
das
andl
fcompl
lahf
ds
jbe
sub
lret
fstl
dec
loop
push
daa
fwait
push
mov
mov
jb
mov
jae
xor
aas
and
xchg
push
mov
popf
push
test
int3
fisubrl
adcl
jmp
loop
sti
cmp
adc
xchg
mov
movb
push
cmp
sbb
and
jle
xchg
inc
sbb
pop
jb
jnp
push
or
test
out
in
addr16
mov
mov
orb
sarb
mov
sub
repz
mov
divl
xchg
adc
movups
jecxz
add
mov
sbb
arpl
push
pop
in
jne
push
xchg
arpl
cwtl
xchg
mov
pop
fadds
push
in
sub
add
pop
rcr
dec
cltd
and
cmp
cmp
push
xor
and
jg
int3
mov
pop
imul
and
mov
dec
dec
inc
mov
mov
jae
push
in
cli
push
fistps
cmp
stc
push
lock
mov
sarb
xor
js
inc
add
shrl
cmp
insb
xor
jo
stos
neg
sub
repz
stos
xchg
pop
popa
insl
cmc
ret
inc
in
movsb
mov
mov
jle
jno
jl
xor
push
pushf
imul
cvtps2pd
pop
dec
sarb
into
imul
jae
js
or
mov
movsb
or
sti
cmpl
inc
in
lods
add
inc
fwait
hlt
sahf
ss
or
mov
xchg
inc
arpl
push
dec
mov
aaa
xor
sub
ja
xor
call
repnz
or
test
mov
add
ss
jae
jb
push
or
imul
and
outsb
mov
pop
xlat
dec
lea
sbb
bnd
add
or
ja
mov
dec
arpl
pop
or
jecxz
cmc
lods
adc
sub
fldenv
fnstenv
adc
fsubs
cwtl
into
pop
inc
xchg
and
cmp
loop
mov
xchg
scas
add
mov
sbb
xor
mov
mov
subb
cmpsl
push
or
xchg
or
dec
out
stos
lahf
leave
js
ljmp
jecxz
xlat
arpl
gs
adcl
xchg
in
fbstp
push
das
dec
dec
jmp
ret
fiaddl
push
in
fdiv
mov
ss
mov
arpl
inc
sub
add
cmpsl
roll
pop
mov
pop
les
outsl
repz
xchg
or
sbb
push
mov
stos
and
stc
mov
sub
popa
fimull
mov
cmp
daa
or
subb
fdivr
idiv
test
and
xlat
ljmp
and
push
mov
test
xlat
lods
inc
mov
push
cmpsl
dec
bound
jle
