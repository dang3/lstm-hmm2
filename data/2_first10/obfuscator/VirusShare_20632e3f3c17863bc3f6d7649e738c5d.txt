push
call
ret
ret
in
pusha
seto
sub
sbb
out
add
mov
orb
xor
xchg
leave
dec
cs
in
bound
sub
jp
shll
jne
imulb
sub
or
sub
cmp
stc
popa
aas
sbb
ja
adc
xchg
movsl
lret
sbb
xchg
inc
ja
mov
pop
add
aaa
dec
mov
cmp
push
pusha
push
cld
mov
add
push
jge
cmpsl
popa
sbb
lds
sub
roll
inc
lea
cmc
push
cmovp
icebp
push
sbb
mov
daa
ds
stos
inc
jp
imul
sti
scas
sub
aaa
cmp
and
fidivrl
test
sub
insl
inc
lods
test
dec
daa
jecxz
add
mov
filds
aas
dec
pusha
adc
add
pop
and
lods
popf
fwait
mov
dec
inc
xor
inc
out
das
dec
call
pop
push
push
pop
sub
xor
push
cs
lcall
ret
out
dec
fsubr
xor
sbb
hlt
mov
loopne
cmp
xor
int3
xchg
mov
and
add
stc
sub
ljmp
sub
lds
xchg
inc
ret
call
mov
mov
imul
loopne
mov
or
mov
loope
outsl
fsubp
pop
loopne
call
cmpsb
adc
test
hlt
pop
mulb
add
in
cmc
out
mov
ret
cmp
fists
repz
stc
sub
popa
paddusw
mov
test
add
aad
jb
int
loopne
mov
adc
bound
jns
jp
jno
lret
sub
xchg
mov
in
mov
adc
repnz
pop
jbe
push
jo
test
adc
in
int3
and
push
pop
jnp
xchg
push
jbe
js
bound
lea
cmp
pop
int
sbb
pop
and
out
int
arpl
flds
mov
int
in
mov
lahf
outsl
ret
jg
out
insl
das
rcr
sbb
std
in
daa
out
stos
out
inc
lock
and
lahf
stc
fimull
mov
ss
mov
pop
imul
dec
sti
sbb
mov
xchg
cmp
mov
mov
and
fidivrl
enter
bnd
adcl
jne
and
adcl
sbb
sub
mov
dec
mov
fisubs
in
mov
jg
lret
int
pop
outsb
fdivrs
loope
loopne
jl
push
nop
nop
push
add
repz
shrl
cmp
mov
inc
and
nop
xlat
pop
sahf
outsl
mov
test
lods
hlt
ret
dec
adc
jne
mov
out
test
enter
cmp
or
out
int
in
outsl
rorl
cmp
inc
mov
inc
ljmp
mul
rcr
cmp
mov
bound
xor
shl
sbb
iret
lods
inc
inc
les
aad
and
and
int3
lods
inc
push
test
add
dec
mov
inc
xchg
fsubs
sbb
test
jge
jnp
dec
or
ljmp
xor
dec
loopne
dec
lods
mov
cmp
popf
cltd
jle
dec
xchg
push
ljmp
int
aad
fwait
xchg
dec
jmp
ficoml
mov
das
leave
cwtl
adc
in
pushf
mov
push
mov
out
sti
mov
push
cmpsl
cmp
push
sti
mov
lock
in
sbb
pop
xor
and
adc
sub
rcll
loope
icebp
push
push
ret
adc
pop
mov
lock
jno
mov
pop
mov
sbb
arpl
adc
sarb
movsl
pop
js
shll
dec
mov
pop
push
je
jmp
or
xor
pop
lret
pop
popa
in
and
hlt
jbe
jno
cltd
fcoml
xchg
scas
adc
mov
cmpsl
push
xlat
pop
in
imul
mov
ficoms
adc
jp
cli
ret
mov
or
cmp
xchg
in
mov
mov
jbe
add
das
pop
sbbl
push
and
adc
orl
or
test
dec
aas
xor
divl
js
gs
xor
dec
jge
test
pop
outsl
push
push
out
lds
out
cmpsl
inc
mov
sub
fdivl
test
cmp
mov
mov
push
pop
or
pop
rolb
adc
and
outsl
add
daa
xor
call
push
xlat
shrb
stos
scas
lcall
pop
ja
and
xor
int3
aaa
pushf
xor
dec
xchg
in
mov
cs
dec
das
out
mov
testl
mov
cmp
inc
adc
add
mov
rcrl
into
and
rorl
outsb
hlt
iret
inc
push
add
insb
gs
jno
mov
adc
adc
mov
xchg
pop
adc
and
shrl
aam
imul
and
call
dec
jb
dec
or
in
arpl
or
int3
daa
jno
popa
test
cwtl
mov
mov
and
arpl
jecxz
idivb
cli
xor
addr16
jns
mov
xlat
je
inc
add
sbb
dec
dec
std
xor
enter
gs
cmp
scas
push
sub
ss
aam
popf
xlat
into
movsl
and
dec
pop
jecxz
add
fdivrl
stc
pusha
in
xlat
out
je
jns
mov
les
cmpsl
sbb
les
cmpsb
mov
cmp
sbbb
cmp
add
xchg
push
sub
rcll
pop
fdivrl
nop
fxtract
ss
xchg
xlat
pop
cmp
push
jbe
call
push
in
xchg
rolb
push
fdivs
dec
mov
loop
test
jb
mov
mov
andb
lahf
mov
adc
pop
outsb
mov
xor
outsb
pop
sbb
adc
sarb
inc
mov
jmp
icebp
xchg
push
lds
jbe
hlt
push
push
ret
push
mov
pop
mov
pushl
popf
icebp
or
jno
call
mov
gs
ja
mov
jp
mov
insl
pop
sub
lods
in
jb
iret
call
mov
sarl
lret
setns
sbb
jno
loopne
out
flds
ret
pop
dec
cmp
dec
pop
pop
mov
dec
insl
loope
mov
inc
inc
dec
stc
or
es
cltd
test
pop
jo
cmp
mov
lods
in
cli
inc
imul
arpl
out
cmc
push
inc
xchg
cli
push
adc
popa
outsb
js
jecxz
int
push
dec
xlat
mov
xor
std
ja
adc
rorl
repz
inc
sub
mov
cmp
lock
jle
popa
sub
test
mov
aad
loope
pusha
nop
xor
jne
or
sub
pop
adc
mov
js
push
or
aam
or
mov
popf
sub
mov
lds
insb
inc
inc
iret
or
popa
sbb
ja
dec
jns
inc
outsl
addr16
jp
sub
pop
pushf
std
sbb
adcl
push
orl
inc
inc
xor
pop
data16
stos
shlb
push
jmp
roll
xor
sub
bound
lahf
push
pop
adc
aam
push
sbb
pop
xchg
mov
push
push
loope
lods
loopne
insb
cmp
aas
repnz
jmp
daa
fisttpll
dec
in
outsb
fdivp
mov
aam
dec
stos
test
xorb
adc
subb
cwtl
jg
cltd
inc
adc
movsl
xchg
xchg
cmp
or
fisttpl
jne
xchg
push
xorl
fdivs
sahf
xchg
out
xorb
sbb
sub
icebp
dec
inc
imul
pop
add
pop
ss
cmp
call
adc
pop
dec
in
cmc
call
addr16
enter
cmc
pop
adc
or
push
dec
loop
xchg
adc
enter
pushf
jge
xchg
test
cmpl
scas
pushf
jge
and
jnp
push
lods
nop
rol
in
push
xchg
push
subb
sub
lcall
add
mov
ficompl
sub
sahf
mov
mov
sbb
std
lret
test
ljmp
test
mov
fprem1
mov
out
lods
push
mov
push
pop
push
sbbl
nop
imul
daa
clts
sbb
fwait
sbb
movsb
xchg
imul
cli
push
dec
inc
out
sub
mov
in
xlat
js
cmpsb
loop
inc
aas
xchg
and
dec
push
int3
repz
add
jo
dec
cmp
pop
fldt
jno
or
clc
cmp
or
mov
loope
clts
jbe
fs
ds
dec
lret
jl
dec
xor
add
mov
je
iret
popl
add
pop
push
lds
mov
mov
in
stos
dec
xchg
adc
mov
add
and
sub
inc
inc
loopne
add
pusha
jge
mov
cmp
mov
loope
adc
inc
mov
enter
jge
lret
push
cmpsl
ret
cmp
or
jb
outsl
dec
ret
adc
in
jae
and
jge
in
pushf
fists
int3
data16
scas
scas
mov
cmp
mov
and
cmpb
sbb
rcl
mov
aas
int
fmuls
lods
pop
dec
mov
in
jne
fadds
sbb
scas
and
cmp
loopne
in
outsl
shlb
test
subl
jmp
jb
pop
cmp
mov
inc
xor
pop
mov
std
testl
adc
stc
mov
push
cmp
fsubrl
ss
adc
mov
xchg
js
pushf
mov
cli
sbb
lock
roll
fs
lret
movsb
mov
mov
sub
mov
jnp
outsb
jmp
xor
test
fldenv
mov
popf
stc
adc
cmp
adc
enter
mov
sysenter
clc
icebp
and
mov
push
ret
mov
inc
gs
inc
aad
jp
add
and
rcrl
mov
dec
daa
xchg
add
mov
mov
imul
ret
dec
addb
les
aaa
and
or
lea
jb
cmp
cld
xor
arpl
push
inc
xlat
cli
addr16
jne
mov
repnz
mov
xor
mov
push
inc
jge
in
push
aas
ljmp
enter
dec
outsl
iret
adc
sub
push
adc
movsb
xor
scas
pop
movsl
pop
mov
test
xchg
enter
xor
lret
mov
pusha
sub
and
imul
adc
out
inc
jne
ja
neg
rolb
shl
jne
add
shlb
arpl
enter
decl
dec
ss
inc
rorb
int3
in
idivb
or
pop
inc
inc
push
push
add
mov
sahf
pushf
test
ja
cmpsb
subl
in
or
cmp
fisubl
mov
mov
add
xchg
fiadds
inc
call
adc
sub
daa
std
lods
gs
xchg
jmp
mov
jge
test
sbb
inc
sbb
scas
fisubl
mov
and
inc
cmp
scas
test
sub
jge
dec
jo
and
and
pop
mov
cld
shlb
shlb
fbstp
movl
xorb
pop
pop
pop
cmpsl
xchg
mov
test
dec
lock
mov
cmp
in
add
xlat
repnz
icebp
ss
push
loop
negl
mov
clc
insl
cmp
xchg
sarb
and
pop
mov
dec
test
inc
gs
or
cmp
sbb
lea
xchg
push
cltd
test
push
pop
inc
scas
pop
pop
scas
mov
int
push
sbbl
adc
and
popf
loope
dec
imul
ljmp
sbb
inc
sbb
inc
orb
inc
pop
pop
dec
out
int3
mov
rcll
or
mov
mov
and
xor
xor
push
ljmp
cltd
mov
stos
mov
mov
movsl
imul
clc
sbb
leave
popa
jge
fsts
mov
inc
cmp
or
test
out
jge
mov
aas
mov
xchg
xrelease
mov
push
mov
loopne
pop
xor
and
loop
cmpsl
mov
push
jo
sub
into
test
lret
lods
cmp
push
xchg
stos
and
dec
adc
int
pushf
xor
dec
cmp
sbb
adc
or
in
pop
xchg
rcr
mov
aam
jo
pop
cwtl
inc
cmp
pop
inc
mov
mov
xchg
push
jmp
xchg
inc
lods
incb
and
out
adc
xor
dec
rorb
xor
rorb
leave
jo
jno
pushf
lds
sub
ds
rclb
idivb
pop
call
add
fisttps
adc
test
add
or
rcll
push
inc
dec
mov
dec
jne
mov
or
ret
sub
push
pop
cmp
sar
in
imul
iret
sub
mov
or
mov
mov
cmp
idivl
lods
cmp
aam
jae
or
subb
jnp
xchg
lret
jbe
xor
cmp
loop
mov
sbb
mov
fsts
dec
repnz
nop
cmp
jle
ds
inc
jp
mov
cld
dec
or
fisubs
jmp
and
pop
xchg
jmp
sbb
push
mov
and
outsw
xor
scas
and
dec
push
jmp
aaa
es
std
out
add
popa
push
in
xor
jmp
aas
lret
in
add
aad
jge
fwait
negb
jge
mov
add
loopne
neg
out
and
xor
cmpsb
lcall
inc
push
mov
xchg
cmp
push
push
pop
pop
dec
xchg
addl
jg
clc
cli
js
lods
jp
push
cld
iret
call
repz
cmpsb
mov
jnp
mov
xchg
aam
fldt
fidivrl
aaa
mov
push
mov
popf
lods
imul
sub
les
lock
daa
pop
cmp
notb
adc
adc
fildll
sub
add
mov
sub
sub
movsb
xlat
ret
mov
xchg
out
sbb
add
mov
mov
dec
pop
scas
cltd
int
pop
fidivl
ss
pop
cmp
add
mov
cmc
cltd
das
mov
sub
cmp
mov
gs
lea
jge
cli
cmp
lret
xor
mov
andl
shl
mov
xchg
test
in
cmpsb
mulb
cwtl
aaa
fstpt
into
cmp
sbb
fld1
subps
data16
jmp
push
push
xlat
mov
inc
in
xor
cmp
sbb
fucomp
cmpsl
fbstp
loope
cmp
js
inc
jge
mov
lock
outsb
insb
push
mov
cmc
in
insl
add
clc
popf
push
jl
adc
adc
jbe
fistpll
stos
pop
xor
sub
mov
pusha
nop
stos
pop
push
lcall
xchg
ja
enter
int
mov
mov
or
shll
cmc
or
cmp
push
mov
ds
push
mov
push
aam
mov
filds
sbb
dec
mov
mov
sbb
stos
fsubrl
sub
mov
sub
cmp
jecxz
sbb
sbb
rorb
push
push
pop
xchg
icebp
fldcw
sub
stc
jne
push
add
cmp
xlat
jb
cwtl
dec
mov
out
mov
lahf
rorb
sti
dec
cmp
sbb
sub
push
inc
out
out
clc
jge
adc
push
cltd
jns
cltd
mov
inc
mov
stc
or
mov
jge
jp
lods
das
sbb
mov
sub
pusha
pop
out
push
mov
pop
inc
inc
cmp
in
xor
xor
mov
mov
push
mov
mov
es
xorb
pop
aam
add
pusha
outsb
fsub
cmp
sti
test
push
or
mov
dec
clc
pop
mov
dec
repz
mov
pop
ret
xchg
stos
into
leave
add
xchg
das
cmpsb
shlb
imul
cmp
daa
jle
out
mov
movsl
cmp
outsl
cmpsb
out
push
fisttpl
iret
jnp
dec
xlat
add
movsl
enter
cmc
mov
mov
pop
jb
ret
pusha
int
fdiv
cmc
pusha
jg
sub
sub
sbb
loop
cmp
aaa
lods
cmc
mov
push
stc
push
pop
xchg
lret
jae
jle
jno
ss
rorb
xchg
pop
lret
in
mov
cmpsb
jmp
inc
lods
pop
dec
inc
sub
add
jl
filds
lods
push
dec
mov
jle
pushf
or
fistpl
es
cltd
hlt
call
ret
divb
sbb
nop
pcmpgtb
xchg
xchg
cmpsl
mov
mov
into
clc
inc
xchg
xor
ljmp
mov
xchg
mov
fsubr
sti
sub
jle
lock
dec
rcr
sub
cmp
mov
push
push
cli
cld
jg
int3
sarl
dec
sub
pop
imul
test
adc
js
xchg
movb
ss
pop
or
lods
lods
cmp
test
cmpsl
sub
pop
leave
imulb
test
and
outsl
adc
xchg
adc
adc
scas
out
cwtl
test
aam
lods
xor
inc
xor
pop
cmp
rclb
cmp
insb
dec
mov
push
rorb
cmp
add
outsl
int
dec
jae
xchg
lret
xor
xor
stc
inc
cli
cs
mov
xorl
push
add
int
jecxz
pop
into
cmp
negl
xchg
leave
or
enter
add
and
mov
fildll
stos
das
mov
sbb
mov
dec
sbb
adc
or
pusha
cmp
mov
xchg
mov
and
sub
mov
lods
enter
and
push
cmp
int
or
jno
inc
mov
sbb
nop
push
gs
hlt
jp
test
orl
lods
in
out
jbe
mov
cltd
arpl
push
jo
add
and
sbb
cmp
dec
cld
mov
pop
pop
loope
popa
popa
pushf
repnz
sbb
loopne
cltd
cwtl
mov
sarl
adc
lods
ret
fdivl
xor
das
jecxz
push
insl
cwtl
pop
cltd
ljmp
lods
ljmp
sbb
adc
push
hlt
test
stos
aad
fimull
mov
mov
adc
mov
out
xor
mov
out
pop
push
or
jmp
add
jp
cmp
xchg
push
pop
arpl
inc
gs
mov
mov
pop
or
push
fnsave
mov
add
cmc
xorb
shlb
int
bound
xchg
in
jl
sub
scas
fisttps
into
push
add
mov
stos
fstl
addr16
mov
or
rcr
out
push
daa
rorl
pushf
ficoml
push
pop
cltd
xchg
and
ljmp
aas
daa
pop
lret
sbb
jae
clc
add
jecxz
aam
in
shlb
stc
shlb
jo
ror
sbb
cli
xor
mov
and
pop
mov
pop
fisttpll
es
cmp
movsb
and
js
push
push
jnp
leave
sahf
jecxz
lods
push
push
adc
mov
fisttpl
div
fwait
outsl
mov
cwtl
jo
insl
or
cmpb
iret
add
popf
addr16
mul
iret
pop
daa
mov
movsl
fwait
scas
loope
mov
mov
cltd
push
pushf
dec
iret
mov
stos
icebp
into
ss
mov
xlat
push
imul
hlt
push
shlb
or
inc
xchg
adc
cmpsb
popa
aaa
push
in
je
in
mov
hlt
xchg
mov
add
maxps
enter
data16
pop
enter
mov
sbb
mov
mov
xchg
push
or
das
push
pop
cmpsb
inc
repnz
push
xchg
cmp
lods
imul
inc
les
mov
add
dec
mov
dec
aad
xor
xchg
scas
popf
loopne
and
fnsave
bound
pmaxsw
insl
add
adc
scas
leave
ret
mov
mov
dec
nop
data16
mov
xchg
je
sbb
xlat
jnp
es
dec
je
scas
mov
bound
cmc
sub
xchg
mov
dec
xchg
cmpsl
inc
ja
cmp
xorl
es
stos
push
and
pusha
push
ret
.byte
mov
add
add
call
add
addb
add
inc
add
orb
add
pop
add
addb
add
add
add
add
add
add
add
add
mov
add
add
add
lock
andb
add
add
add
mov
add
add
add
enter
add
add
add
add
fadds
add
adc
add
outsb
add
sbb
add
test
add
add
add
adc
add
add
inc
add
dec
add
add
inc
add
pop
add
inc
add
dec
add
add
add
sbb
stos
cmpb
sub
rcl
mov
lods
sbb
xchg
push
dec
xchg
add
mov
insl
jo
sub
push
nop
in
sbb
ja
add
fmuls
enter
cmp
lea
and
pop
cwtl
mov
mov
dec
xor
lea
fldl
in
iret
adc
out
inc
inc
sahf
mov
dec
lods
repz
incb
stc
sahf
push
hlt
imul
add
pop
mov
adc
aad
mov
repz
add
or
push
mov
mov
arpl
sub
int3
enter
std
xor
insb
xchg
xor
jno
in
push
inc
test
adc
push
and
int3
jl
jl
cld
dec
xor
inc
push
and
movsl
out
lahf
mov
push
imul
fs
stc
das
jnp
cmp
xor
adc
jle
aas
jb
insl
in
pop
jge
nop
jg
xchg
int3
inc
mov
vcvttss2si
xchg
push
xor
xor
in
mov
adc
sbb
xor
mov
clc
push
xlat
adcl
lds
stos
xchg
repnz
push
sbb
out
xor
pop
adcl
inc
xor
rcrl
and
add
jecxz
add
lea
mov
int3
pop
cmp
push
add
out
fwait
pop
xchg
fwait
arpl
push
fadds
icebp
sbbl
cmp
lods
das
mov
xchg
sub
sbb
lds
inc
xorl
pushf
or
add
leave
or
divb
jae
lret
mov
and
test
mov
sahf
aas
shlb
adc
pop
hlt
rcrb
mov
jb
mov
pop
fistps
pop
stc
adc
add
outsb
dec
mov
aas
lds
sahf
fcomi
xor
addr16
xorb
lea
test
pop
push
cmp
orb
jmp
push
jmp
test
daa
xchg
xchg
repz
sbb
arpl
inc
lods
or
fstl
pop
inc
sbb
push
sbb
inc
lea
int3
mov
in
mov
les
cmp
dec
sub
and
mov
inc
lahf
out
xlat
jecxz
mov
mov
ja
ror
arpl
adc
out
mov
adc
xor
lcall
push
xchg
add
call
sbb
push
lods
xor
insl
mov
out
mov
xchg
loopne
shll
jecxz
aaa
pop
mov
inc
leave
or
popa
mov
sbb
arpl
jecxz
adc
mov
push
jmp
mov
jmp
push
mov
push
in
sbb
add
push
pop
pop
cmp
jge
fcom
dec
mov
pop
test
push
insl
mov
sbb
and
jg
pop
call
dec
dec
loope
or
or
call
jnp
mov
or
imul
sbb
test
int
pop
test
jl
das
xchg
jo
shl
push
xchg
push
push
rcl
hlt
xchg
lahf
ja
mov
movsb
cmpsb
fsubs
in
rorl
movsl
stc
arpl
outsb
std
dec
xor
js
dec
sbb
stc
call
pop
pop
lods
add
int
lret
cltd
addb
cmp
sahf
sbb
hlt
imul
pop
and
sbb
xor
rorl
mov
cltd
mov
loopne
or
dec
push
push
js
pop
jmp
sbb
xor
mov
pushf
cmp
inc
inc
insl
xorb
adc
repnz
hlt
sbb
dec
dec
arpl
adcb
jg
mov
fcmove
fwait
cmpsl
stos
and
mov
cmp
mov
sbb
insl
or
add
mov
pop
push
mov
inc
lods
jo
or
dec
xchg
lret
fs
xchg
and
fcomps
pop
xchg
sub
mov
into
clc
andl
ds
pop
je
jecxz
cmp
xchg
insl
js
imul
jae
and
jns
lahf
stos
loop
das
sbb
mov
cltd
pushf
cmp
out
sub
add
pop
or
orl
inc
pushf
mov
push
adc
xchg
fnsave
inc
ret
test
cltd
add
xchg
mov
add
mov
adc
sbb
push
or
sub
cmp
mov
je
rorb
xchg
xchg
inc
mov
into
stc
dec
jg
jnp
cmp
cmp
stos
cmp
adc
cmp
xor
sub
cmpsl
push
and
sbb
sbb
mov
mov
mov
dec
loop
mov
aam
push
jo
movsl
jmp
mov
ret
repnz
loope
jne
icebp
imul
mov
ja
xlat
pushf
jmp
addr16
jo
inc
outsb
sahf
xchg
ss
pushf
sbb
outsb
sub
fstpl
mov
pusha
cmp
mov
loopne
mov
push
add
xchg
enter
inc
divl
or
addb
push
pop
lcall
fnstcw
jecxz
loopne
add
ret
pop
mov
push
cmp
out
mov
push
mov
lcall
cld
test
jmp
dec
pop
sub
xlat
jns
lock
outsb
sub
xchg
push
mov
sbb
mov
sbb
ret
pop
mov
popf
jl
xor
sti
or
fbld
add
mov
daa
outsl
call
adc
ljmp
adc
add
mov
and
cmp
cli
jge
mov
mov
shl
or
xor
mov
stc
sub
push
movsl
cmpsb
rol
sahf
inc
sub
pusha
daa
dec
addr16
xchg
stos
gs
pusha
out
lds
adc
add
pop
xchg
inc
movsl
test
faddp
inc
clc
in
lods
sbb
test
sbb
scas
pop
adc
mov
jns
inc
rclb
outsl
jl
xchg
xchg
cmpsb
gs
in
pop
push
ds
xchg
fs
cmpsb
lea
push
jnp
jb
pop
pop
pushf
dec
sub
insb
lock
add
test
mov
es
xchg
out
inc
js
popf
roll
bound
lahf
js
fwait
xor
xchg
aaa
cmp
aam
iret
sub
push
scas
in
adc
xchg
fimull
cmp
lock
cmpb
sbb
outsb
lahf
dec
in
push
repnz
ja
sahf
ja
mov
test
and
test
add
mov
sbb
push
fisubl
xchg
out
icebp
cwtl
and
mov
das
fsubl
popf
xor
cmpsl
push
fnstcw
dec
mov
bound
rol
jne
jne
test
pusha
sbb
jl
lcall
mov
and
in
imul
jle
pop
adc
subb
jecxz
inc
xchg
sub
cmpb
test
cmp
xor
out
push
pop
jo
es
lods
insl
pop
push
scas
in
xor
insl
jo
pop
stc
xchg
sub
arpl
or
inc
sub
pop
enter
xlat
or
mov
outsl
and
mov
xorl
push
mov
in
popa
inc
jns
nop
pop
adc
out
notl
dec
xchg
stc
jne
mov
add
dec
and
daa
inc
sbb
scas
dec
push
sbbb
mov
push
sub
pop
insb
cmp
cmp
and
ss
test
movsl
mov
xlat
push
add
jmp
cli
movsl
xchg
enter
outsl
aaa
aam
adc
xchg
push
fcomps
pop
add
inc
mov
push
push
jbe
mov
add
push
nop
out
out
mov
cmp
fmull
mov
fiadds
mov
xor
pop
cmp
pop
fisubrs
push
loopne
call
jmp
add
sub
clc
pop
add
cwtl
adc
mov
mov
xchg
xchg
push
push
jecxz
and
jp
inc
push
fmull
jecxz
les
sub
sbb
adc
mov
ret
in
enter
mov
test
repz
inc
pop
std
fidivs
out
sub
and
adc
inc
sub
mov
adcl
adc
in
test
fadd
es
cmp
mov
mov
xchg
xor
mull
mov
adc
aam
mov
sub
mov
lods
cmp
imul
cmp
ret
aaa
cmp
popa
xchg
push
enter
sub
and
or
dec
imul
repnz
mov
lds
adc
insl
js
inc
jecxz
jne
cmp
xor
mov
push
and
nop
aad
icebp
bound
cmp
js
enter
mov
mov
jnp
lea
aaa
or
lret
out
in
lcall
jmp
cmp
xchg
push
mov
lahf
sbb
aad
mov
sbbb
test
iret
test
sub
or
decl
add
jo
mov
sbb
add
cmp
fnstcw
push
mov
pop
mov
mov
push
mov
mov
inc
mov
push
cmp
jge
sbb
lods
pop
cmc
bound
repnz
inc
push
add
mov
inc
jne
pop
negb
ss
test
rorl
loope
test
mov
es
bound
xor
xor
adc
jno
xor
sbb
pop
or
insl
dec
xchg
push
mov
push
pop
adc
pop
pop
cld
push
inc
roll
pop
mov
je
movsl
fwait
shlb
xor
or
adcb
insb
loope
test
mov
and
daa
fmull
push
addr16
movsl
push
and
and
cld
gs
xor
in
mov
outsb
and
daa
adc
xchg
or
movsl
cmpsb
lahf
xor
inc
rcr
enter
cmp
adc
aam
or
mov
fsubl
sbb
dec
repz
jns
and
sub
pop
int
popf
scas
jle
cwtl
in
adc
popf
in
jmp
movsb
popa
cwtl
mov
pop
push
loope
dec
je
pushf
or
filds
and
jae
xor
imul
movsb
inc
aad
xchg
icebp
xor
cmpsl
push
pop
xchg
ret
inc
inc
pinsrw
test
xor
xchg
push
jle
out
mov
jle
dec
inc
mov
bound
add
fnop
out
stc
sbb
sub
push
nop
cmpsl
cmp
clc
or
nop
and
jecxz
movsl
jle
ret
sbb
cmp
cmp
sbb
in
push
mov
sub
xor
ds
cwtl
sahf
callw
and
push
add
mov
stc
movsb
dec
sub
ljmp
mov
data16
rorl
or
sub
adc
pusha
fstps
jmp
dec
divl
mov
int3
push
cwtl
das
and
aaa
pop
xchg
out
add
inc
stc
inc
inc
aam
mov
jp
push
jns
fcmovb
add
pushf
inc
arpl
cmp
xchg
loope
fcompl
push
lods
loopne
rcl
xchg
xchg
call
jl
das
stos
sub
repnz
test
sti
int
fwait
xchg
int3
mov
xor
jne
and
dec
sbbb
push
imul
rcll
inc
add
int3
bound
mov
push
test
test
bswap
push
movsl
lock
add
add
fcoml
das
les
sbb
sbb
pushf
mov
push
dec
nop
pusha
pop
cmpsb
dec
push
add
mov
fisubrl
ficomps
mov
mov
test
or
cwtl
sbb
sbb
lds
add
and
jge
mov
inc
addb
pop
mov
dec
fadd
test
outsl
mov
push
sarl
test
fbstp
adc
sbb
test
addr16
mov
pop
add
xor
sub
pusha
mov
pop
xor
mov
push
in
sbb
lods
xor
fs
dec
mov
push
and
adc
dec
xchg
mov
lock
jae
pushw
gs
mov
push
ljmp
and
dec
ja
pop
fisubrs
cmpsl
outsl
cmc
cmp
inc
rcrb
cli
out
out
in
sbb
xor
imul
xchg
clc
or
in
and
daa
push
inc
sbb
cmp
inc
mov
jne
pop
mov
shll
movsb
stos
test
paddsw
ret
mov
ja
out
outsl
fs
adc
stos
push
xor
dec
sbbl
dec
mov
jb
pop
pop
addr16
rcrb
pop
cmp
inc
sbb
inc
sbb
inc
push
jl
dec
push
sahf
or
lcall
popa
lahf
inc
adc
outsl
adc
sub
idivb
cld
imul
inc
jmp
mov
rorb
inc
jg
inc
gs
mov
mov
scas
ljmp
or
ret
xor
nop
lahf
sbb
push
mov
jb
call
test
dec
push
addr16
iret
test
push
ret
out
ja
jbe
mov
push
xor
dec
dec
shl
mov
or
cmp
test
insl
popa
jge
pushf
cmp
sub
ss
shl
xor
mov
sub
inc
test
sti
adc
mov
mov
call
xchg
add
aam
iret
lret
cmp
rol
add
inc
popa
shrb
outsl
cmp
jl
das
aaa
les
pop
sbb
lahf
sub
out
jecxz
shrl
jb
pop
insb
or
mov
push
popf
arpl
xchg
ss
push
push
xor
mov
jae
adc
stos
mov
subl
and
mov
sbb
call
jg
repz
and
cmp
cmp
idivb
inc
insl
or
pushf
ja
pop
add
imul
mov
or
outsl
mov
popa
aas
out
call
adc
fldl
rolb
rolb
dec
jb
arpl
aaa
sub
aas
cmpsb
cltd
pop
jge
in
add
cmp
pop
mov
jne
pop
add
fistl
push
lcall
lods
loop
leave
rorl
aam
add
sbb
fisttpl
inc
jmp
cmp
popa
xor
divl
sti
aaa
ljmp
mov
aas
inc
xor
mov
icebp
and
std
outsl
orb
pushf
inc
shll
test
loope
movl
mov
je
sub
push
cltd
sbb
inc
jns
push
mov
sbb
pop
sbb
outsb
in
jne
xchg
mov
xchg
cmpsl
dec
mov
push
cmp
mov
in
neg
fisttps
or
push
call
clc
push
add
dec
mov
into
aas
in
lods
sti
pop
pop
call
ret
stos
dec
lcall
mov
loope
loopne
fbld
dec
lods
and
xchg
loop
dec
arpl
adc
lods
repz
test
cwtl
testl
into
arpl
fs
mov
push
adc
cmp
inc
cwtl
and
stos
push
jno
call
inc
dec
xor
not
pop
push
rcrl
ds
int3
cmc
shlb
jnp
mov
fcoms
xorb
pop
sub
aam
pushl
stos
imul
adc
sarl
sarl
rorb
lods
pop
xchg
sbb
int
test
dec
adc
jmp
aas
sub
mov
jnp
lock
xor
gs
xlat
orb
popa
pop
jle
mov
mov
sahf
imul
jae
mov
out
ljmp
or
fwait
roll
mov
jmp
mov
add
mov
mov
out
dec
js
pop
aas
hlt
xchg
push
sbb
fcomps
or
fbld
es
dec
fwait
daa
pop
insl
stos
fcoms
insl
mov
call
push
push
push
jnp
jmp
xchg
testl
rclb
ficomps
fildll
add
xchg
je
pop
inc
cmp
add
sbb
mov
sbb
or
sub
mov
add
hlt
jg
jle
mov
add
pop
push
insb
scas
inc
lahf
jle
xor
loopne
and
adc
cmp
mov
push
jge
mov
test
fwait
cmp
test
out
and
test
cld
pop
or
or
daa
out
stc
rorl
push
imul
fisubs
stos
push
insl
jae
adc
rolb
dec
sbb
pop
jbe
pop
std
inc
std
jl
outsl
or
ret
es
dec
idiv
call
rep
jnp
ret
mov
xchg
mov
fwait
sub
pop
es
clc
push
lea
and
aad
pop
loopne
jp
mov
lds
nop
inc
repz
cmpb
lock
dec
arpl
inc
pop
adc
stos
jno
mov
loope
push
xchg
fcmovu
pop
dec
pop
xchg
mov
les
stc
addr16
cmp
stc
stos
sbb
jg
jmp
or
bound
push
repnz
pop
xor
dec
aad
cwtl
and
fcoml
add
push
out
imul
cs
xchg
imul
jno
lret
mov
sbb
pop
fnstsw
mov
les
fnsave
jecxz
or
sub
sti
fsubrl
cmc
and
xor
lcall
repz
out
add
sub
or
imul
jne
fadd
in
stos
movsb
jle
fisubs
xchg
inc
add
xor
ret
push
pushf
aam
push
outsb
fcmovnu
dec
in
push
inc
or
lods
push
cmp
push
inc
scas
dec
push
call
inc
pop
mov
jmp
dec
adc
lahf
sarb
orb
push
js
xchg
xchg
mov
sahf
aas
scas
aam
in
in
int
ss
cmp
shrl
inc
loopne
shll
xchg
popa
and
outsb
cltd
lods
hlt
or
loope
sub
push
cld
sbb
and
dec
pop
or
movsb
mov
mov
sub
and
push
adc
inc
stc
or
sqrtps
mov
inc
fnstcw
push
inc
jnp
enter
out
jae
push
push
jnp
add
xchg
or
rcrb
mov
pop
das
push
scas
sub
xor
icebp
sub
mov
dec
sbb
push
ljmp
dec
mov
xlat
mov
and
pop
pop
sbb
push
jp
mov
inc
inc
scas
and
aas
jb
jecxz
mov
imul
jbe
mov
mov
negl
movsb
ds
cmp
adc
lcall
or
adc
inc
cmpsb
aam
stos
addr16
es
xor
jmp
mov
enter
bnd
fisubs
out
rol
cwtl
js
ficoms
adc
sbb
aam
daa
das
fucom
push
lcall
sti
xchg
xor
loopne
mov
pushf
je
shl
pop
pop
shll
sti
mov
scas
outsl
xchg
pop
shlb
cmp
pop
int3
outsb
int
pusha
mov
sbb
test
loopne
outsb
and
xor
inc
push
lahf
iret
sub
out
out
jbe
xchg
ret
push
addl
fsubrp
outsl
xor
inc
lahf
ss
pop
std
mov
xchg
add
out
lcall
inc
xchg
push
popa
mov
ror
mov
xor
in
xchg
mov
dec
sub
int3
lahf
in
jecxz
aaa
cltd
ljmp
lods
cmpsb
pop
mov
jne
shlb
rolb
dec
fadds
mov
or
mov
pushl
push
xor
loop
mov
adc
loope
fildl
mov
pop
repnz
and
jle
xor
mov
sbb
inc
sbb
stc
mov
mov
pop
dec
add
lea
sub
scas
xchg
adc
pop
mov
jnp
inc
mov
mov
fcoms
push
add
pop
pop
inc
dec
xor
jecxz
cmp
sarl
adc
hlt
lahf
mov
cmc
or
dec
in
and
jmp
pop
xor
mov
out
rorl
das
jae
mov
mov
repnz
sti
data16
orb
mov
iret
jbe
ficomps
mov
clc
add
outsl
sub
loope
xchg
push
xor
sub
push
rcr
inc
or
mov
cmp
lods
rcrb
xchg
insl
xorb
mov
pop
sbb
rorl
push
loop
mov
sub
push
mov
pop
scas
sub
push
jecxz
sarl
imul
sbbb
mov
sub
pop
leave
xor
gs
out
inc
jmp
pop
ja
fbld
push
xor
les
mov
stc
sub
test
movb
push
mov
or
ret
sub
and
roll
cmp
push
push
jecxz
push
lret
adc
jbe
scas
xchg
dec
mov
push
inc
sbb
in
andb
div
popf
leave
adc
sti
jne
gs
dec
cld
les
aas
sub
popf
iret
jno
pop
inc
or
fsubr
pop
orb
sbb
lret
cltd
fsin
mov
fstpl
lret
add
and
push
adc
adc
cmp
mov
std
pop
push
and
pop
lds
aaa
pop
lods
sbb
adc
ret
insl
nop
cmp
inc
add
arpl
push
mov
popa
mov
cmp
xchg
add
sub
jmp
sub
daa
push
or
add
push
out
out
aam
dec
cmp
push
mov
outsl
mov
cld
int3
fwait
xchg
jo
mov
mov
mov
add
aas
dec
shll
ret
gs
and
cltd
mov
pop
loop
enter
jg
into
jmp
jae
rcr
in
cwtl
sbb
scas
push
add
sub
aam
pop
icebp
mov
pop
imul
enter
add
mov
mov
fsubrl
test
mov
mov
mov
and
popa
pop
jmp
cmpsb
or
jbe
mov
cmp
loope
mov
cld
iret
adc
inc
in
cmp
lds
fsubs
scas
fistps
add
or
test
fbstp
pop
subb
and
inc
cmpl
addb
enter
adc
lods
lret
scas
cs
sbb
scas
or
xor
test
add
cmpsl
xchg
sarl
jl
int3
jmp
mov
xorb
shrl
std
orb
ss
push
pop
push
outsb
mov
sbb
mov
data16
out
pusha
fsubr
mov
movsl
lock
loope
add
flds
test
dec
iret
xlat
push
shll
or
push
push
add
mov
mov
or
adc
sbb
xor
cmp
cli
fbstp
ds
and
adc
jg
outsb
and
mov
push
lahf
mov
aaa
loopne
push
xlat
cmp
and
sarl
call
js
ret
jecxz
das
js
jno
cmc
aaa
inc
icebp
adc
xor
mov
js
push
out
repz
push
shlb
and
mov
aam
xor
xlat
outsb
icebp
sub
rclb
push
pop
test
pop
push
add
and
sbb
jbe
movsb
loopne
push
addr16
pop
stc
ficoms
jae
cmp
mov
in
les
adc
scas
sbb
sbb
pop
shrl
outsl
int
hlt
lock
rolb
push
mov
adc
in
cmp
and
xor
out
jge
sbb
lret
arpl
sbb
ja
jb
mov
dec
mov
sbb
xchg
xchg
daa
ret
sub
mov
cltd
jge
pop
fadds
outsl
dec
xor
xchg
mov
push
push
ds
repnz
fsubl
fisubrs
cltd
out
scas
mov
shll
lock
aas
mov
inc
clc
xchg
xlat
add
and
js
sub
sub
jbe
mov
test
in
imul
stos
pop
in
xor
dec
cmp
and
pop
xor
outsb
ret
lods
sub
leave
sbb
xor
popa
ss
cmc
sub
repz
push
add
or
idivl
out
hlt
lahf
mov
and
xchg
xor
bound
cmpsl
daa
icebp
adc
leave
and
inc
iret
pop
jg
and
sub
nop
and
xchg
out
add
imul
jnp
aas
inc
push
inc
push
cmp
js
xchg
mov
scas
rdmsr
fs
fdivl
push
movsb
movsl
jo
jl
gs
scas
sub
daa
test
jb
mov
push
add
je
jnp
inc
fwait
les
and
ljmp
enter
xor
pop
push
daa
inc
pop
movsl
lds
cltd
cmp
fcoml
addb
pusha
incl
sub
scas
push
adc
out
add
pop
mov
mov
mov
mov
xor
lcall
mov
dec
scas
xchg
xchg
and
add
mov
sub
mov
lret
jmp
pop
paddq
inc
mov
fwait
into
rorb
das
and
mov
movsl
mov
cwtl
add
pop
ds
lock
leave
loopne
jb
into
imul
push
push
or
xchg
inc
mov
push
sbb
pop
cmp
cmp
dec
xor
xor
pop
jg
add
mov
pop
cmp
or
leave
shll
fiaddl
repz
mov
movsb
jg
pop
es
adc
les
cltd
cld
enter
mov
and
and
iret
fwait
repz
push
gs
leave
push
push
fcmovnu
jg
in
in
xor
cltd
mov
xchg
shlb
outsl
dec
popf
roll
add
dec
repnz
data16
data16
insl
sbb
push
popf
dec
adc
fwait
inc
fs
mov
aas
or
int3
das
movsb
cmpsl
movsl
xchg
lods
mov
and
out
aas
int3
lea
xchg
roll
lods
cltd
movsl
pop
cwtl
mov
aam
rorb
adc
mov
ljmp
stc
daa
loope
outsb
inc
xor
cmpb
or
je
ljmp
lret
test
je
pop
xor
out
xchg
mov
dec
mov
push
push
jmp
sahf
lret
lods
into
shlb
andb
lods
iret
fisttpll
xchg
mov
jbe
mov
out
vpmaxsw
pop
repz
pop
sbb
inc
ret
inc
pusha
icebp
std
loope
jge
xor
pop
push
cld
mov
or
inc
mov
xchg
aam
rolb
call
sub
sbb
stos
dec
sbb
imul
js
repz
add
fmulp
bound
sbbl
mov
lcall
sahf
rcrl
adc
mov
mov
pusha
or
pop
push
out
xchg
daa
popa
movsl
pop
leave
or
jmp
movsb
pop
mov
loop
jb
adc
inc
jecxz
ss
jo
dec
xor
mov
lret
aad
xchg
imul
and
out
fdivs
jg
mov
xor
sbb
pushf
stos
push
rorb
inc
lahf
push
sahf
jo
andb
or
mov
mov
sbb
aad
or
das
daa
xor
test
add
stos
lret
div
hlt
inc
push
lods
sbb
xchg
jecxz
pop
xchg
shll
lods
or
xor
push
xor
outsb
lods
dec
pop
mov
add
and
out
cmp
or
scas
jl
and
add
in
insb
xor
sbb
fisubs
lea
push
or
imulb
or
or
push
push
fidivs
in
stos
arpl
fucomp
push
aam
sub
adc
lds
jbe
jecxz
xchg
add
push
stc
ret
sbb
pop
mov
mov
pop
rclb
in
fs
aas
sub
ret
xor
inc
lcall
icebp
iret
adc
pop
or
jnp
xor
mov
push
dec
xchg
fimull
cmp
popf
repnz
adc
std
mov
dec
lds
fwait
in
cmpsl
bound
xchg
mov
or
mov
inc
dec
fnstsw
push
inc
adc
mov
insb
cmp
out
mov
cmp
out
aad
push
ret
in
ja
sub
iret
jmp
cmp
xor
push
cmp
das
adc
adc
jbe
rcll
stos
ja
xor
pop
jl
sbb
dec
adc
ds
loopne
dec
sahf
icebp
push
xchg
fldcw
outsl
pushl
scas
sub
lods
jo
out
aaa
jmp
cmpsb
lret
sub
fstp
and
fwait
icebp
rcrb
jp
in
and
enter
and
adc
lcall
or
mov
jl
cld
jbe
xchg
call
in
inc
insb
dec
arpl
ss
fbstp
jbe
cmpsb
or
cmp
in
adc
sub
dec
mov
jg
sub
adc
pop
add
mov
xchg
sub
mov
mov
inc
mov
sub
xchg
mov
nop
and
dec
push
inc
push
out
imul
pop
andb
xor
push
pop
aam
testl
push
nop
mov
fisubrs
and
lret
jno
jbe
push
jo
lods
add
in
inc
lahf
idiv
xchg
push
fildll
mov
aad
cltd
jmp
pop
dec
movsb
adc
sbb
cwtl
add
shlb
aam
jge
mov
les
push
std
imul
jns
pop
mov
out
popa
mov
xchg
inc
ja
in
aas
pop
inc
adc
negl
mov
xor
inc
cmp
sbb
xchg
popf
sbb
mov
nop
mov
outsb
cld
in
cmpsb
and
mov
xor
mov
sahf
dec
imul
popl
fildl
and
fnsave
les
mov
insl
sti
dec
or
pop
notb
xlat
dec
or
mov
cwtl
frstor
inc
push
adc
mov
jge
inc
sbb
enter
inc
movsb
sbb
jmp
inc
pop
and
jge
xchg
repz
int
movsb
int
or
cmp
push
bound
aas
or
cmpsl
out
push
sub
mov
scas
mov
xor
aas
add
dec
into
fs
mov
data16
flds
and
je
mull
divb
and
fdiv
dec
divb
nop
cs
stc
lret
lcall
out
dec
mov
pop
shlb
dec
xchg
imul
jo
inc
cmp
in
rcr
repnz
lock
stc
mov
out
lahf
out
adc
out
pop
shlb
jb
lods
mov
mov
jbe
sbb
adc
cmpsb
adc
pop
push
inc
in
shlb
loope
leave
mov
icebp
jo
cmp
loopne
imul
lret
or
jecxz
fldenv
or
inc
sbb
lock
mov
sahf
js
mov
movsb
js
mov
in
xchg
sub
or
les
outsl
cmpsb
cmc
push
sahf
aaa
xchg
mov
das
out
jmp
cmpsl
dec
sbb
pop
inc
lahf
pop
pop
mov
ja
dec
push
or
mov
pusha
dec
sbb
dec
jg
mov
sbb
lahf
mov
add
sub
das
and
pop
sbb
cmp
cmp
cmp
pop
mov
or
repz
scas
imul
ss
movsl
orb
and
stc
in
sbb
add
rclb
stos
jne
in
or
clc
cmpb
addr16
in
mov
lahf
push
cld
loopne
mov
sub
sbb
cs
mov
fisttpll
cld
lds
test
mov
pop
sbb
insl
push
push
je
in
pop
popf
jne
push
pop
dec
in
adc
or
movl
and
repz
outsl
push
repz
outsl
mov
cmp
sub
push
adc
sbb
and
sbb
jmp
mov
cmp
mov
jp
sbb
movsl
lret
cmpsl
fsts
andb
lock
pusha
xor
add
stos
mov
outsb
and
cmc
das
cmp
or
imul
data16
jne
testl
sahf
cmc
out
fsub
iret
sub
rolb
cmc
lds
or
rcrb
mov
cli
adc
sub
xchg
test
aaa
int3
mov
push
adc
sarl
lahf
pop
mov
add
cmc
movsl
add
or
mov
or
loop
pop
popa
mov
sbb
jnp
js
ja
add
pusha
jns
and
scas
mov
movsl
sbb
test
sti
cmc
and
out
faddp
add
in
or
dec
add
push
pop
sub
push
cmp
jg
mov
inc
mov
jl
mov
int3
push
sub
shl
jle
sbb
test
rorb
ljmp
in
mov
or
jecxz
dec
pop
cltd
lods
pop
push
xor
mov
dec
cld
imull
cmc
jbe
stos
stos
dec
lret
mov
push
add
xchg
push
lret
arpl
add
or
dec
xor
mov
mov
jmp
xchg
test
ss
mov
jl
mov
or
int3
cmp
mov
pop
pop
add
xor
push
sbbb
cmpb
clc
push
mov
aam
lods
fdivl
add
xchg
les
lea
clc
add
or
inc
arpl
fstps
rorb
loop
mov
lret
loop
fs
in
ret
test
ja
and
sahf
dec
int3
subb
mov
sbbb
loopne
xor
je
and
in
cmc
xchg
mov
mov
lcall
jl
push
movsl
pop
addb
ds
mov
cli
out
lret
push
mov
repz
mov
arpl
pusha
lret
cwtl
add
xchg
fwait
arpl
leave
movsl
jge
sbb
mov
pop
sbb
jnp
fmuls
push
push
dec
pop
hlt
in
out
fmulp
std
decl
add
decl
mov
jae
lcall
jmp
stos
imul
sbb
or
rorl
cwtl
adc
xchg
sub
aad
loope
and
mov
movsb
jns
inc
push
pop
add
imul
xor
xchg
pushf
jmp
clc
sbb
pop
pusha
data16
sub
adc
push
add
fwait
cmp
es
jae
cmp
lret
icebp
fcom
mov
jmp
xorps
stos
dec
and
dec
xchg
sti
add
dec
sub
fdivr
call
stc
push
add
push
and
push
push
scas
and
cli
add
div
cmp
popa
mov
pop
outsb
or
insb
les
movl
xor
adc
cli
jmp
sbb
shll
inc
adc
insl
test
sbb
les
ds
orb
outsb
lcall
xor
fsts
sbb
dec
inc
inc
out
push
or
adc
rorb
fildll
push
bnd
adc
adc
cmp
add
les
jnp
bound
subl
es
outsb
daa
lcall
mov
push
cmpsb
xor
xchg
inc
inc
xchg
stc
fmull
clc
mov
sti
sarl
pop
xor
lret
outsl
cmpsl
sbb
mov
jmp
aad
fadd
arpl
shl
daa
jmp
pushf
cmp
inc
cli
sub
andl
xor
jno
out
movsl
mov
xchg
dec
imul
dec
xor
mov
push
cld
idivb
cmp
es
scas
cmp
aad
and
mov
add
inc
sbb
mov
addb
insl
or
je
aam
imul
jbe
mov
ss
out
mov
loope
mov
add
out
jge
mov
xchg
ret
movsl
movsb
sbb
push
or
fstl
stos
or
dec
cmp
xor
repz
xchg
leave
mov
test
pushf
int3
add
jle
dec
pop
and
push
fs
icebp
icebp
jbe
cmp
push
pop
xor
xor
sub
or
into
ret
pop
mov
iret
fs
ret
adc
add
in
jns
gs
xor
cli
aaa
sbb
arpl
decl
lret
mov
mov
mov
inc
lock
pop
scas
sbb
sbb
inc
in
adc
or
nop
out
out
fdiv
enter
mov
enter
mov
pop
lret
jmp
outsl
lahf
jns
dec
popa
mov
push
arpl
ret
cwtl
pop
test
mov
xor
mov
pop
aas
jne
mov
pop
pushf
inc
mov
pop
enter
sbb
cmp
data16
cmpsb
add
cmp
rol
rorl
cmp
and
or
aas
jmp
mov
scas
xchg
jne
jno
jns
pop
push
hlt
pop
ficoms
inc
mov
not
pusha
sbb
pop
cmp
imul
call
je
dec
push
stos
xchg
mov
mov
inc
and
movsb
dec
mov
shl
jnp
insb
or
jge
push
xchg
out
adc
aaa
xchg
jo
lds
xchg
in
mov
pushf
push
imul
push
mov
adc
adc
std
fstpl
jb
icebp
jmp
add
push
dec
mov
dec
sub
xchg
mov
into
xor
repz
dec
dec
outsb
mov
sub
adc
fidivl
inc
sbb
sub
test
aaa
add
jmp
mov
mov
orb
icebp
sbb
or
dec
xlat
cmpsl
inc
ljmp
movsl
scas
in
mov
dec
pop
mov
jae
push
sub
fxch
out
push
mov
mov
loope
and
movsb
add
aas
push
and
bound
jle
shlb
or
mov
xor
jmp
add
es
and
ds
outsl
stos
inc
mov
stos
jns
jg
ds
mov
cmp
bound
lods
shrb
in
or
push
xor
mov
sub
mov
adc
popa
lcall
dec
stc
xchg
xchg
aas
jbe
jno
cmpsb
pop
scas
xchg
loope
xor
std
bswap
icebp
push
daa
enter
das
cmp
or
cli
clc
lcall
fildll
or
fmul
das
ljmp
mov
mov
or
mov
push
mov
fs
pop
loope
push
jl
test
in
test
xor
cld
lods
push
pop
repz
or
lret
lcall
xor
jp
mov
inc
dec
enter
dec
jae
fdivrl
dec
xor
xlat
push
clc
inc
test
sub
bound
dec
cmc
das
stos
addb
jl
mov
fstpt
push
xchg
xlat
iret
rol
xchg
mov
jb
addr16
andl
arpl
or
push
hlt
js
xor
mov
jge
jmp
pop
repnz
out
jmp
aaa
frstpm(287
inc
insl
mov
inc
les
out
add
sub
jns
dec
rol
dec
outsl
mov
mov
cmpsl
jle
popa
sub
addb
jnp
out
jbe
adc
ret
icebp
adcb
and
push
clc
jno
xchg
dec
xorb
call
xor
xchg
pop
jge
lods
mov
sti
repnz
cwtl
rol
lock
push
xor
gs
ret
aaa
pop
push
jae
fnstcw
mov
inc
xchg
and
mov
adc
push
push
jecxz
push
cld
cmpl
popf
into
mov
jge
sbb
jmp
xor
int3
aas
or
adcl
and
push
adc
pop
push
mov
sbb
and
imul
scas
mov
enter
dec
int3
mov
mov
imul
jmp
cmp
jno
or
imul
lods
bound
sbb
sbb
or
fiaddl
jp
inc
mov
mov
ss
push
cmpsl
push
inc
insb
jl
push
shlb
pop
lahf
cld
insl
iret
push
fcompl
sti
xchg
scas
sub
xchg
push
push
jbe
jo
mov
adc
mov
clc
jne
lock
mov
mov
popa
jns
stos
scas
add
js
fidivrl
and
pusha
dec
dec
push
push
loope
mov
out
enter
pop
pop
inc
xchg
sar
ret
aas
sub
stos
mov
lock
movsb
adc
in
out
mov
xchg
hlt
mov
inc
sti
dec
stos
pop
mov
pusha
dec
stos
mov
sub
and
pop
insl
mull
sarb
mov
inc
repnz
sarl
ss
repz
inc
cmpsl
fsubl
pusha
mov
lret
xchg
xor
pop
es
divl
push
inc
xor
xor
repz
cld
or
int3
pop
push
push
rdmsr
call
cli
je
mov
xlat
in
es
out
loop
and
mov
adc
lret
mov
mov
out
addr16
xchg
add
mov
pop
jmp
adc
les
mov
xchg
fistps
sub
sub
lea
fnop
or
into
mov
xchg
hlt
and
cmpsb
dec
sub
in
push
das
pop
rclb
cs
repnz
std
mov
out
or
lret
clc
push
testl
aam
mov
sbb
inc
cwtl
fdivl
and
pushf
dec
orb
mov
push
push
rorl
mov
sti
push
sbb
orl
fisubs
shlb
lret
fs
pop
hlt
push
scas
mov
dec
out
lea
dec
je
jno
pusha
cltd
jge
hlt
xchg
popf
xor
mov
aad
clc
cmp
xchg
mov
pop
dec
pop
repz
xor
jecxz
mov
decb
pop
hlt
fmul
cmpsb
push
jmp
cmpsl
nop
cltd
sahf
xor
es
js
das
test
fnstsw
pusha
sub
inc
fdecstp
out
xchg
ds
lea
cmp
mov
sub
or
out
inc
cmp
mov
dec
xlat
dec
cwtl
cmp
daa
divb
test
ljmp
fistl
repz
jge
in
imul
jge
xor
lret
enter
push
call
cli
and
div
fwait
push
xor
inc
rorl
cmp
ss
das
add
dec
sub
rorb
daa
iret
insl
les
push
scas
mov
sti
pop
lahf
and
push
mov
sahf
fsubrl
jmp
fldcw
es
rcrb
test
add
mov
inc
pop
inc
cwtl
mov
mul
js
pushl
sahf
pop
lock
addr16
and
add
imul
jmp
dec
shll
test
pop
inc
shrl
jo
sub
in
stos
cmp
or
cmp
pop
subb
add
sub
dec
divb
gs
push
xor
cs
cmc
push
pop
test
addr16
pushf
add
inc
or
inc
jg
adc
push
push
mov
or
pusha
mov
jae
rcrb
mull
stos
push
pop
dec
push
push
pushf
aam
pop
aam
outsb
push
push
sub
pop
xchg
nop
test
pop
mov
les
imul
pop
mov
sub
clc
cmp
pop
test
call
xchg
push
mov
fs
movl
fisubs
xchg
hlt
jno
or
sbb
add
fwait
mov
rolb
subb
mov
add
ret
in
jne
fiaddl
je
out
add
sub
in
mov
popa
push
adc
push
add
cld
pop
xlat
adc
data16
test
push
rorl
inc
mov
adc
mov
out
daa
xchg
pop
push
pop
xchg
shl
rorl
fs
in
out
mov
xor
hlt
imul
xlat
add
fsubs
cmp
inc
xor
jle
sub
push
xchg
xchg
mov
dec
mov
or
bnd
push
push
fwait
adc
push
sub
aam
sti
call
mov
addr16
adc
idivb
jno
cwtl
mov
mov
test
add
icebp
and
push
cs
iret
xchg
sub
sbb
xlat
sbb
dec
js
xchg
or
mov
imul
push
loope
stos
and
and
movsb
mov
inc
in
shl
cld
add
push
mov
call
ftst
in
mov
dec
pushf
or
fstps
call
add
insb
xchg
xchg
jg
and
lea
lret
adc
aad
sahf
xor
mov
pop
push
jnp
hlt
lock
insl
fsub
xchg
fnstcw
inc
mov
aaa
sbb
out
xor
inc
in
mov
in
nop
into
addr16
mov
repnz
cmp
cmpsb
pop
fisubrs
push
and
mov
jbe
fnsave
test
rol
popf
mov
and
cmp
bnd
test
pop
xor
std
test
dec
jns
icebp
pop
xor
xor
pop
push
and
rorb
lods
push
adc
push
fstpt
or
shlb
add
int
xchg
in
mov
icebp
mov
movsl
sahf
int
negb
push
rorl
in
icebp
ret
sub
shl
mov
les
fnstcw
nop
cmp
xchg
lahf
cmp
pop
lcall
inc
mov
mov
xchg
popa
das
add
addl
cmp
xchg
mov
jo
das
ja
out
mov
orb
inc
movsl
rol
and
push
sub
neg
test
andl
arpl
mov
fsubr
fadd
or
dec
les
jb
mov
std
ret
pop
repnz
adc
mov
lds
cmp
cmp
push
cmc
pop
movsl
ret
imul
jge
and
and
cmp
sbb
sub
fldenv
sbb
insb
jo
shlb
dec
lahf
inc
or
sub
jge
mov
push
or
pop
mov
in
daa
mov
push
dec
inc
cmp
int
mov
les
inc
clc
movsl
pusha
xchg
iret
mov
mov
adc
push
in
popa
adc
jg
or
or
int3
sbb
pop
pop
push
sub
popf
cltd
mov
sbb
shll
mov
insl
repnz
test
aad
int3
pushf
push
pop
xchg
loop
test
mov
stos
out
arpl
imul
dec
lret
adc
and
xor
push
lds
mov
sub
xchg
les
rorb
scas
mov
inc
sahf
mov
pop
loopne
mov
out
aam
adc
arpl
repnz
sub
sub
or
sbb
jl
loopne
fstpt
push
mov
dec
mul
sub
mov
jl
mov
int3
movsb
mov
incl
shrl
jmp
mov
popf
mov
mov
mov
cltd
dec
jbe
psubb
int3
dec
ret
sub
std
imul
loopne
sti
mov
inc
dec
jae
xchg
enter
movsb
cmpsl
push
test
inc
jnp
cs
sbb
cs
or
popa
in
mov
add
jb
ljmp
pop
fnsave
test
and
inc
or
xchg
rolb
js
jne
adc
stos
out
in
fdivp
loopne
pop
sbb
cmpl
sub
rcrb
jb
lds
or
outsl
or
xlat
lcall
mov
leave
and
xchg
cld
jne
xlat
and
inc
hlt
xchg
xchg
mov
bound
cltd
cmp
jle
mov
mov
push
cld
pop
into
push
cltd
scas
fucomi
push
mov
cmp
sub
fistps
scas
cmp
lea
xchg
js
mov
mov
xchg
dec
push
shll
inc
mov
xchg
in
and
adc
frstor
hlt
imul
lret
stc
push
dec
fs
pop
mov
addr16
xor
sub
divl
xor
xchg
bound
cmp
dec
mov
sub
loopne
push
fmull
repz
pop
insb
dec
adc
xlat
insl
cs
or
daa
lock
scas
out
pop
jp
out
or
cmp
mov
sbbb
daa
adc
mov
fstps
sbb
pop
imul
fstps
mov
lea
in
xchg
push
add
add
hlt
arpl
pusha
dec
xchg
mov
pop
lods
fstpl
in
push
xorb
lcall
stc
ret
pusha
sbb
rolb
push
cwtl
inc
cli
add
fwait
in
lcall
xor
cli
pushf
jo
adc
incl
test
test
ljmp
jecxz
pop
fistpll
or
push
cmp
or
pop
push
mov
jmp
mov
xor
sbb
je
push
mov
mov
insb
int3
mov
test
mov
or
pop
adc
les
scas
mov
enter
xlat
mov
add
xchg
int
lahf
mov
ds
push
shll
xchg
in
push
dec
cmp
fldcw
jge
rcl
popa
rcll
cmc
gs
xor
add
scas
div
jge
jecxz
pop
fs
sub
loop
js
int
cli
gs
pop
and
sbb
outsb
inc
pop
cmp
ja
insb
or
js
les
out
xchg
xchg
jne
rclb
sbb
push
ds
popf
rcll
fcoms
mov
imul
sbb
and
pop
xor
hlt
push
js
test
cwtl
cmpsl
xor
adcl
sbb
add
xor
hlt
sub
push
adc
pop
shrb
add
jno
cmc
pop
mov
aam
gs
mull
pop
or
sub
rcll
dec
adc
xchg
outsb
sbb
and
hlt
adcb
xchg
dec
out
mov
and
popf
notl
cmp
mov
test
adc
push
bound
cmpsb
test
push
das
or
mov
mov
lods
mov
add
or
mov
dec
pop
mov
push
mov
xchg
ret
fmull
dec
push
or
or
and
dec
xor
push
mov
and
push
scas
pop
das
sub
sbb
xor
mov
or
daa
cld
mov
enter
sbb
mov
and
adc
add
out
rorb
jmp
popa
mov
imul
sub
sarb
sub
lods
push
leave
rcrb
fs
mov
jne
xor
mov
xchg
lea
pop
in
xchg
cli
sahf
mov
and
mov
inc
sub
mov
stc
pop
rorl
stc
mov
pop
adc
mov
andl
adc
or
ret
jne
out
or
xor
mov
mov
or
je
dec
fldt
dec
test
pop
aaa
dec
push
or
pop
mov
mov
inc
leave
rorb
faddl
pushf
pushf
cltd
add
add
test
mov
stc
outsl
cmp
aad
mov
js
fdivrl
lret
xchg
pop
mov
sbb
dec
call
pop
jge
jmp
roll
ja
rol
pop
fwait
ljmp
cld
loope
mov
adc
xor
cmp
not
inc
clc
in
mov
test
push
and
push
cmp
nop
mov
jge
mov
incb
int3
fwait
inc
sub
mov
cmp
push
popf
lahf
call
cld
enter
add
xchg
jl
rcll
orl
adc
push
lcall
mov
in
out
inc
push
push
adc
lock
scas
fcmovnbe
jl
sti
cmp
lds
mov
movsl
sbb
popa
push
sahf
push
lock
add
cmp
dec
cmp
or
xchg
mov
mov
aam
mov
xor
and
xchg
jnp
sbb
cmp
pop
enter
xchg
pop
inc
repz
cmp
mov
enter
mov
mov
js
mov
xchg
add
cmp
pop
push
cmp
mov
enter
or
cmp
adc
out
push
and
dec
outsb
sub
stos
stos
repnz
inc
sbb
test
lcall
loop
mov
pushf
in
std
shlb
mov
out
cltd
scas
addr16
jle
jne
adc
mov
fxch
adc
pop
mov
xchg
sub
ljmp
inc
in
push
into
rclb
popf
fs
and
jbe
or
lcall
jbe
iret
jge
call
insl
repz
dec
dec
mov
inc
fnstenv
fs
scas
clc
cld
ss
or
mov
ds
fsubrl
xor
lods
fsubrs
xor
cmpsl
jae
push
js
sbb
je
sbb
inc
loope
fistl
imulb
lcall
inc
mov
mov
cmp
xchg
sbb
mov
mov
stos
leave
in
outsb
adc
lret
fstl
inc
imul
and
bound
push
fists
pop
jp
dec
movsl
ret
hlt
jnp
push
xor
pop
test
jae
mov
dec
addb
fisubrs
mov
jle
and
add
mov
roll
push
xor
mov
cmp
cli
sbb
iret
icebp
fbld
mov
dec
add
ja
call
inc
push
cs
int
adc
add
mov
ds
sub
pop
loopne
cmp
lret
add
cmp
or
add
pop
mov
pop
sub
jne
cld
ja
lcall
and
sbb
mov
test
enter
ja
repz
push
mov
sub
xor
bound
mov
jns
lea
call
sahf
fnsave
inc
bound
lds
ds
lret
insb
xor
int
mov
xchg
fildll
jl
jle
test
xchg
divl
jnp
popa
wbinvd
notb
jno
mov
fsubr
push
movsl
test
inc
stc
std
jge
sbb
cmp
mov
add
fmull
add
aam
jno
add
dec
das
cld
enter
fsts
cmp
adc
ds
shrb
scas
popf
insb
lods
mov
add
pop
inc
mov
aaa
inc
fildll
mov
rcll
dec
adc
in
leave
adc
cmc
leave
lock
in
ljmp
xor
clc
mov
push
mov
mov
add
mov
xor
jp
sbb
ja
stc
push
fstps
cmpsb
adc
and
aam
js
sub
lahf
arpl
jle
movb
ljmp
cwtl
cmp
pop
sub
pop
out
jle
scas
bound
mov
inc
cmpsb
testb
mov
idivl
ja
jg
xorl
in
lock
jne
mov
hlt
and
mov
popa
xor
fstpt
cli
popa
mov
pusha
push
addr16
cmp
dec
cmp
mov
mov
lret
inc
sbb
xor
rolb
ret
jg
xor
psubw
gs
aas
icebp
aad
cmc
mov
jg
gs
jo
insl
iret
mov
dec
pop
pop
or
adc
mov
sbb
xlat
out
mov
pop
in
pop
pop
cmp
aam
xor
arpl
je
push
push
adc
ss
hlt
outsb
xchg
and
lret
pop
scas
pop
aam
and
mov
ret
movsl
inc
xor
push
repnz
dec
imul
clc
jo
outsb
imul
adc
adc
sub
sbb
outsl
hlt
aaa
xor
add
cmpsb
sub
push
sub
mov
mov
xor
cmp
mov
push
mov
and
jns
test
shl
pop
mov
mov
das
adc
cli
rcll
xlat
jecxz
push
xor
loope
cmc
arpl
in
add
xchg
sub
test
mov
inc
xchg
cld
test
or
stos
dec
in
jl
ds
push
arpl
mov
into
xchg
push
adc
push
out
cmp
sub
gs
js
not
orl
pop
jecxz
inc
adc
pop
xchg
dec
sbb
icebp
int3
and
push
cmpsl
pop
inc
loop
and
in
movsb
xor
scas
sahf
xor
fsubs
sub
out
add
sub
jmp
and
cmp
inc
or
sbb
and
call
xchg
lcall
cmp
or
mov
gs
arpl
and
inc
icebp
xlat
mov
or
adc
lods
decl
aam
jmp
xor
inc
add
pop
sarl
fisubrs
xchg
pop
call
imul
pop
imul
lds
lcall
add
mov
jbe
mov
stos
or
push
mov
icebp
ljmp
stos
rep
sbb
imul
dec
dec
lods
fmuls
push
mov
inc
imul
inc
lret
push
fisubl
cmp
scas
sbb
dec
decl
cmp
enter
std
dec
mov
jle
mov
add
adc
jbe
mov
sti
shlb
xor
mov
jnp
jnp
and
outsl
in
xor
xchg
xchg
pop
jnp
xchg
and
mov
rcrl
dec
cmc
xor
sub
sub
push
fisttpl
incb
and
jns
xchg
cmp
mov
xchg
sti
jecxz
and
lcall
jl
ds
mov
into
xchg
inc
cmpsb
jecxz
out
cld
push
stos
add
sub
in
mov
add
mov
jne
pop
inc
mov
jl
sub
pop
or
fbstp
ds
clc
out
stc
and
mov
inc
insl
js
and
mov
xor
xorb
pop
ljmp
fwait
notl
cmp
pop
push
testb
jle
ljmp
and
pop
sahf
and
pop
cmp
mov
push
xor
mov
or
adc
mov
out
sub
and
xchg
cmp
mov
scas
subl
addl
repz
test
out
vpmadcsswd
rorl
inc
push
jno
shll
stos
lock
ret
out
sub
sub
xchg
mov
pop
jno
and
enter
ror
dec
or
lcall
rolb
addps
lcall
lret
sbb
loopne
or
aaa
das
loope
cmpsl
mov
movsb
dec
cmp
xchg
pop
xchg
out
addb
cmc
int
lahf
xchg
ds
sti
sub
fadds
mov
ret
xor
push
loope
fdivrs
loope
cmp
cmp
pop
push
inc
xor
sbb
in
push
and
in
iret
dec
ja
and
ja
imul
or
dec
addl
sub
shll
inc
pop
icebp
xchg
mov
sti
adc
aam
neg
jno
push
push
cmpsb
lahf
sbb
push
ds
int
outsb
push
cs
test
jle
rclb
pop
es
hlt
mov
and
and
push
mov
repnz
add
dec
or
es
ja
loop
loopne
outsb
fbld
mov
xchg
mov
out
data16
and
insb
test
in
jecxz
and
je
in
adc
cld
cmp
insl
daa
outsl
sbb
inc
divb
jae
daa
adc
subl
cmp
cmp
cmp
adc
sbbl
inc
sahf
xchg
jo
sub
lea
push
jbe
mov
ret
imul
inc
leave
imul
call
loope
pop
sar
xor
jns
xchg
lcall
bound
mov
and
ror
pop
push
mov
cwtl
mov
push
addr16
push
shlb
lret
inc
adc
faddl
inc
ret
pop
add
rorl
dec
mov
push
fwait
jecxz
or
inc
and
lods
in
icebp
pop
and
dec
lods
xchg
jne
xor
jl
mov
mov
enter
pop
shlb
stc
push
into
lods
dec
in
lcall
lea
shrb
into
xor
loopne
mov
inc
push
lods
sti
ret
xor
pushf
lea
xlat
mov
mov
fwait
xchg
popf
imul
data16
jno
inc
sarl
movsl
dec
xor
ljmp
movsl
dec
push
sbb
ret
pusha
movsb
sar
xchg
stc
outsl
xchg
cmp
add
xchg
adc
xchg
hlt
stos
sbb
cmpsl
pop
mov
dec
popa
lea
add
in
dec
pop
push
shlb
loopne
push
cmc
mov
btr
pop
je
pop
sub
sbb
push
sbb
push
or
mov
jg
dec
repnz
sub
sbb
inc
push
nop
cwtl
mov
rorl
sbbl
inc
lods
sbb
add
sbb
mull
and
mov
cli
pop
adcb
les
push
or
mov
incb
pop
and
push
xchg
cmc
and
testl
shrl
mov
lods
adc
jae
xor
mov
push
repnz
rcrl
shll
dec
fcoml
adc
loopne
cmpsb
jle
leave
or
shrb
pop
mov
out
fdivp
or
cmpsb
push
mov
test
pop
cmp
fimull
jle
adc
push
popa
lahf
mov
in
scas
in
mov
fdiv
mov
loope
ret
xchg
ss
dec
mov
test
icebp
mov
pop
dec
cmc
and
ret
jle
add
mov
ret
inc
jns
add
ret
mov
cmp
xchg
imul
mov
sbb
aaa
rcrb
mov
inc
js
cmp
cmc
sub
mov
mov
in
mov
shr
mov
mov
pop
and
lea
inc
mov
cmp
dec
push
loope
iret
xchg
mov
fimull
lret
fwait
cmp
adc
shl
movsl
xor
pushf
mov
repz
pop
daa
xor
inc
rcrl
xchg
push
xor
xchg
dec
lahf
sub
pop
js
and
incl
stos
push
dec
in
xor
stos
dec
xor
outsl
inc
fcompl
pop
repz
push
popa
mov
sbb
sbb
jmp
cmpsl
rcrb
sti
out
push
mov
sbb
pop
in
fucomip
loopne
xor
pop
jne
adc
push
inc
and
pop
push
adc
sbb
dec
ret
nop
xorb
mov
pop
adc
or
xlat
adc
test
adc
mov
popf
inc
mov
data16
pushw
ss
stc
or
shl
pusha
pop
or
enter
cmp
sarl
push
adc
jmp
mov
and
mov
out
std
mov
inc
and
fldcw
and
fdivs
xor
stos
push
jbe
sub
pop
cmc
ficompl
inc
jmp
mov
add
jle
lcall
xchg
push
mov
or
lahf
xlat
pop
jb
jo
add
js
adc
sbb
shlb
push
data16
stos
ja
filds
inc
xchg
out
cmp
mov
insb
fstp
cmp
mov
xor
add
lret
mov
inc
and
cmp
in
adc
insl
dec
lock
cmpsb
push
pop
xor
add
leave
jmp
and
sbb
mov
jb
fidivs
pop
arpl
test
adc
pushf
add
lods
aad
add
in
mov
mov
jp
scas
sbb
out
arpl
fimuls
pop
rcr
or
imul
out
mov
cmpsl
mov
mov
pop
bound
leave
cmc
xor
stc
xor
push
setno
cmp
ss
xchg
les
jno
xchg
jae
push
and
cs
push
dec
scas
std
aaa
int
clc
cmp
call
mov
pop
push
call
jae
xchg
lods
bound
popa
push
mov
mov
ja
outsb
daa
pop
pop
es
push
jl
add
mov
mov
mov
divl
pop
sub
mov
xchg
and
cmpsl
or
mov
mov
scas
jbe
pushf
mov
pop
mov
cmpsb
or
adc
xchg
outsl
and
dec
inc
add
mov
push
cmpsl
leave
cmp
xchg
push
pop
sarl
add
push
mov
push
sti
mov
rol
xchg
out
or
xlat
add
inc
aad
je
xchg
adc
in
outsl
imul
pop
adc
mov
subl
lock
sub
repnz
scas
sub
mov
pop
pop
add
jno
push
in
mov
popl
jg
ja
and
and
push
add
scas
xor
or
push
add
ret
lcall
aam
aad
clc
sub
ret
cmp
cltd
xor
and
xchg
add
push
jo
in
inc
cmc
cmp
fwait
xor
repnz
mov
pop
mul
pop
sub
xchg
fildll
lahf
cmp
mov
push
or
add
jge
pop
mov
shlb
xlat
cs
adc
cli
cmpsl
clc
xlat
or
or
stos
push
fstpl
stos
je
hlt
jns
jl
pop
call
cmc
add
xchg
inc
and
mov
cli
popf
jecxz
push
ja
sbb
shrl
daa
dec
and
nop
sub
xor
negl
adc
xlat
push
jg
sub
mov
push
pop
dec
pop
nop
mov
mov
sub
mov
mov
es
ficoml
push
sbb
std
inc
mov
sbb
out
ret
icebp
ror
cmp
data16
jns
push
inc
jg
pop
cmp
stos
popa
mov
movsb
xor
div
push
xchg
cmp
in
fcompl
andb
xchg
pop
repz
fisubrl
jmp
and
pop
dec
lahf
fsubrl
inc
adc
std
dec
pop
jo
scas
flds
arpl
out
pop
add
imul
pop
add
mov
push
cli
xlat
pop
sub
sbb
lock
mov
pop
ljmp
test
cmpb
push
in
daa
push
test
outsl
push
jns
cmp
outsb
mov
cmp
rcll
jae
lock
imul
subl
insb
push
or
loop
push
and
in
iret
iret
dec
inc
daa
sbb
cmc
xor
and
mov
cwtl
cld
jne
xchg
stos
arpl
lock
sbb
xchg
xchg
or
in
jg
jmp
repnz
aam
push
and
pop
mov
lcall
lcall
lock
jns
dec
imul
pop
xor
xor
ja
adc
pop
jbe
aad
scas
out
cmpsl
and
out
lcall
xchg
ret
xor
loopne
int3
dec
mov
push
scas
pop
mov
add
sub
loop
enter
jecxz
cmp
pushf
sbb
push
cwtl
cmp
repnz
mov
push
xor
out
xchg
leave
mov
mov
in
mov
mov
push
aaa
lret
adc
sbb
pop
push
and
cmpsl
fsubrs
cmp
inc
add
call
je
adc
jns
sbb
cmp
imul
jle
paddb
adc
mul
sbb
sti
pop
xor
xor
pop
pusha
mov
jb
pop
sbb
mov
jbe
jbe
ja
pusha
rcl
int
shrl
cmc
in
lods
mov
loopne
shlb
ficomps
xor
adc
aad
adc
lock
imul
mov
xchg
xor
fstpl
adc
fnstenv
mov
filds
xor
jge
xor
lret
dec
test
sar
pushf
mov
inc
shll
shlb
shl
out
ss
data16
ja
mov
into
imul
adc
iret
clc
pop
fldenv
dec
das
popa
push
hlt
insb
push
push
rcpps
shrl
movsl
in
imul
ja
sahf
add
sbb
jns
inc
sahf
repz
cmp
outsl
add
out
int
xor
rorb
stos
imull
orb
loope
mov
sbb
int
and
mov
ljmp
pushf
xlat
fs
pop
loop
mov
aam
lds
addb
sub
dec
out
fcoml
iret
sub
sbb
cmpl
mov
pop
cwtl
stos
imul
xchg
fisubrs
stos
jl
xor
mov
gs
fildl
inc
fisubs
xchg
and
mov
mov
leave
pop
jno
jo
loopne
xor
add
sbb
leave
push
in
and
jo
pop
xor
das
adc
mov
popf
insb
in
mov
and
scas
cli
mov
cmp
jbe
and
inc
mov
in
dec
std
cmp
mov
leave
push
sub
pop
test
xor
add
xor
std
push
shlb
sub
inc
mov
out
scas
and
pop
cmp
cmc
mov
xor
lds
mov
clc
jecxz
out
call
shl
iret
cmp
add
daa
xor
mov
jo
sahf
pop
mov
outsl
popa
lcall
rcr
out
and
add
and
jle
shll
xchg
out
cwtl
dec
jmp
loope
push
xchg
icebp
xchg
js
mov
sub
xchg
sbb
mov
mov
jbe
mov
pushf
mov
in
pop
pop
xchg
xor
aad
decl
push
xchg
repnz
arpl
mov
push
xor
jb
add
das
mov
sub
leave
enter
stos
add
or
repnz
or
jb
in
inc
xchg
jp
mov
inc
add
push
insl
push
add
fldl
jle
imul
imul
hlt
mov
fldenv
mov
scas
pop
xchg
out
loope
stos
xor
adc
jb
dec
and
data16
fnstsw
iret
inc
inc
js
mov
pop
jno
dec
pop
minps
cmp
mov
pusha
jae
jle
call
mov
fiadds
dec
loopne
cld
popl
insb
or
xor
cmp
inc
mov
xchg
mov
lea
pop
mov
and
shll
xchg
and
call
movsl
sub
inc
ss
iret
pop
pop
or
inc
stos
xor
pop
lcall
sbb
add
pop
push
pop
loopne
pop
ret
pop
rcrl
clc
clc
cmp
mov
lods
or
adc
add
xor
ja
jge
mov
pop
loopne
scas
addb
dec
dec
mov
or
cmp
pop
cmc
dec
jb
sub
cmp
adc
inc
nop
pop
adc
mov
xchg
inc
push
dec
and
arpl
jnp
popf
cmc
cltd
aam
dec
or
outsb
fisubrl
inc
imull
jecxz
inc
and
mov
movsb
ret
or
dec
jl
jl
movsb
fdivrl
lcall
in
jp
decb
iret
pop
xchg
push
outsl
out
xchg
inc
jmp
sbb
push
add
cs
push
sub
cmp
add
icebp
xchg
xor
stc
lahf
test
out
lcall
jb
stc
iret
mov
pop
cmp
jle
push
cltd
das
mov
push
fcompl
jne
jmp
inc
push
jmp
adc
jo
popa
sti
jp
jg
push
out
test
jb
jecxz
inc
pop
cmovl
enter
sub
mov
sub
cs
shlb
jg
int
bound
or
fisttps
xor
cmp
mov
fs
jecxz
lock
fisttpll
mov
clc
jl
rolb
dec
and
xchg
mov
int
or
loopne
pop
sarl
adc
xlat
pop
push
clc
or
test
xor
cmp
add
mov
cmp
fwait
ljmp
mov
cs
repz
add
dec
rcll
jmp
sti
scas
test
movsw
incl
fcomip
and
and
or
push
scas
xchg
dec
loopne
xlat
pop
cmp
ror
and
jle
shlb
lcall
sahf
enter
and
pop
roll
jecxz
or
dec
xchg
push
push
orb
xchg
pop
jecxz
ss
sahf
add
movsb
pop
jns
stos
test
ljmp
mov
mov
sub
imul
shrl
shlb
daa
stc
negl
or
fidivl
jp
xchg
cli
les
out
pop
addb
inc
stos
lock
xchg
addr16
push
pop
xchg
negb
stc
xchg
and
ja
clc
shll
in
or
or
movsl
ljmp
push
mov
hlt
dec
js
out
adc
lahf
sbb
stos
cmp
or
jge
out
hlt
cmp
xlat
std
xor
jnp
sbb
fmull
adc
test
imul
add
xchg
pop
cmpsl
loop
rorl
shl
cs
jb
lret
add
movsl
outsl
mov
leave
mov
shll
jnp
sub
mov
ss
daa
shrl
or
add
je
movsb
aam
dec
mov
mov
fnstsw
aad
testb
jae
aam
pop
dec
mov
add
iret
ss
add
cmp
adc
inc
ret
jle
pop
sbb
jecxz
jb
and
pop
bound
fstpl
adc
or
mov
xlat
inc
push
je
punpcklwd
sbb
ja
test
add
daa
outsl
mov
sar
idivl
xor
shrb
test
cmc
jg
aaa
aam
pop
loop
nop
ror
jo
mov
xor
sbb
lret
push
test
sbb
adc
aaa
or
lock
cmpb
push
mov
or
push
aam
ds
mov
sub
sar
outsl
imul
aaa
ret
inc
pop
scas
jl
aaa
js
pusha
cmc
in
pop
dec
inc
mov
jp
shl
fcomps
push
sub
repz
and
sarb
sahf
sub
or
cwtl
str
outsl
mov
jnp
xchg
pop
xchg
cmpsl
andb
dec
cmpsl
out
mov
scas
jmp
mov
mov
popf
mov
in
pop
imul
idivb
sbb
mov
dec
and
shll
and
sbb
in
push
jle
jb
daa
jl
addr16
inc
dec
xchg
movsl
cmc
add
sarb
push
cli
adc
je
pop
ljmp
cwtl
mov
adc
insl
mov
dec
xor
pusha
add
mov
cwtl
insb
es
clc
push
inc
mov
mov
dec
insl
add
mov
adc
push
mov
test
lock
bound
cmp
loope
jnp
dec
xchg
fimuls
mov
shrb
pop
and
gs
xor
and
cmp
nop
push
push
add
repnz
mov
adc
add
dec
daa
adc
mov
mov
xor
je
aad
pusha
jae
add
pusha
flds
ljmp
pop
dec
or
xchg
imul
mov
pusha
jno
mov
stos
mov
adc
jg
aas
or
push
cmp
sub
test
in
inc
cmpsb
loope
shlb
cmp
mov
sub
ljmp
xchg
cs
dec
jg
in
pop
add
mov
push
push
inc
dec
aaa
adc
stc
cmp
fmull
repnz
xor
jns
rcrl
notl
jge
std
xchg
nop
js
inc
daa
outsl
mov
adc
iret
inc
mov
pop
ljmp
jl
ds
js
je
std
cmp
mov
in
fnsave
jp
cmpsl
mov
je
inc
push
sub
outsl
test
jno
cmpsb
insb
popf
inc
imul
or
jb
stos
push
pop
cmp
not
push
lds
mov
jo
and
cmpb
aas
adc
stos
adc
in
mov
fbld
repz
or
inc
rcl
dec
xchg
xchg
nop
movsl
jb
movsl
imul
scas
mov
loope
pop
jbe
outsl
ret
and
push
and
fmul
test
vpcomb
cmp
cmp
cmp
or
sbbb
mov
popa
cwtl
cmpsb
cltd
xor
rol
pop
push
orb
push
jmp
pop
lea
aas
fadds
mov
mov
push
arpl
and
sbb
xchg
cmp
sbb
repz
inc
mov
bound
shlb
sub
test
imul
adc
imul
cli
xor
adc
jbe
das
bound
lcall
sahf
decb
ret
mov
adc
mov
jae
pop
cld
add
push
aam
mov
jne
xchg
inc
iret
les
into
fstpt
ret
cmc
insb
push
ljmp
rcrb
mov
je
or
push
mov
cmp
xchg
jle
cli
in
dec
pushf
nop
pop
repnz
fistpll
jl
dec
gs
xor
mov
adc
and
jg
sti
push
je
in
popf
repz
dec
movsb
or
insb
shl
mov
popf
pop
xchg
cwtl
movsb
mov
sbb
imul
mov
pop
fs
jmp
mov
push
rcll
loopne
jle
outsb
insl
inc
xor
push
jg
jp
sti
clc
xor
add
ret
cmpsl
or
lods
loopne
stos
les
pop
je
cwtl
ret
out
push
lock
mov
pop
cltd
aaa
lahf
std
jno
jnp
movsl
fisttps
subb
ja
loop
sbb
lcall
cmc
jb
adc
cmpsl
sub
addr16
mov
and
sbb
les
daa
fstpt
adc
add
mov
ja
xchg
push
push
mov
in
enter
xchg
loopne
nop
sbb
push
mov
push
mov
jecxz
adc
cld
inc
push
pop
cmp
fucomp
pop
loopne
cmpsb
lcall
mov
push
sub
jecxz
mov
scas
data16
mov
or
jmp
jecxz
int
into
push
add
rcrb
jo
test
subb
xor
cmc
dec
inc
repnz
push
cli
movsb
data16
push
gs
gs
pop
push
adc
nop
sub
movsl
orl
mov
and
mov
pop
fsubrl
mov
outsb
call
ds
popa
cmp
fwait
mov
push
mov
sarl
cmpsb
cltd
fwait
movsb
cmpsb
adc
dec
ret
jge
push
out
mov
nop
daa
stos
push
push
sbb
mov
cltd
aam
lahf
gs
inc
dec
leave
mov
dec
pop
divl
mov
jo
inc
or
mov
int3
jb
cmp
dec
out
shll
ja
adc
mov
mov
add
popl
push
sbb
mov
sbb
scas
xor
cmp
mov
out
or
or
aaa
cmpsb
dec
outsl
sahf
adc
arpl
mov
adc
sbb
insb
dec
stos
test
cli
adc
cltd
jmp
mov
push
gs
sarb
leave
insb
outsb
mov
fmuls
rclb
aas
rcll
cmp
pop
std
lcall
xor
flds
inc
insl
xlat
out
mov
jbe
test
xchg
xor
lcall
mov
aad
xor
dec
xchg
jge
pop
and
adc
cmpb
xchg
adc
xchg
xor
fiaddl
pusha
adc
jp
dec
scas
pop
mov
rolb
xchg
test
pop
lahf
stos
pop
push
stc
mov
pop
cltd
lcall
notl
xchg
add
and
push
push
mov
das
mov
popf
adc
add
pop
cltd
loope
mov
and
sahf
push
imul
lods
mov
imul
mov
lods
iret
leave
inc
fwait
lods
dec
and
cmpsb
pop
mov
push
aam
in
mov
jo
sub
mov
sbb
cld
mov
stc
in
cmp
leave
add
inc
inc
pop
dec
pusha
xchg
cmc
mov
fwait
mov
insl
add
push
loope
or
adc
cs
stos
push
loopne
xchg
jmp
cmp
lret
or
sbb
call
pop
fldcw
dec
mov
push
call
imul
sbb
jo
div
cmp
pop
stc
dec
sbb
xor
sub
xor
jno
into
push
lock
and
fcompl
dec
aam
and
sbb
xor
and
sbb
mov
inc
push
mov
addl
shr
add
xor
popa
lods
rcl
pop
int3
sbb
push
mov
fistpll
test
push
es
dec
cmp
lcall
sar
jae
xor
aas
cmp
shlb
insb
mov
sbb
sub
xchg
addr16
in
mov
mov
inc
mov
mov
sbb
mov
xor
xchg
negl
lock
xchg
outsb
mov
pop
sbb
jge,pn
sub
lret
lret
aas
repz
push
jle
icebp
leave
mov
repnz
nop
or
sahf
cmp
bnd
loopne
clc
and
repz
fisttpll
lods
inc
push
dec
adc
sti
sub
push
mov
aaa
mov
pop
adc
pop
sbb
mov
loope
cmp
cmp
das
mov
outsl
sub
push
lcall
lods
mov
rclb
and
pop
hlt
jmp
bound
mov
repz
repz
shlb
xor
sub
stc
xchg
mov
scas
pushf
in
sub
push
sbb
sbb
jmp
and
add
push
inc
or
or
dec
shrl
lds
sub
adc
shl
ficoms
lret
and
sub
jmp
pop
lods
int
push
in
inc
mov
negl
cwtl
mov
push
lock
mov
or
push
lcall
or
fmull
loop
lret
jmp
aaa
inc
cltd
dec
cld
pop
in
lds
xor
bound
mov
cmpsl
xchg
ss
mov
xor
jmp
shlb
fcmovu
mov
push
imul
hlt
mov
adcb
xchg
cmp
sbb
shl
cld
cli
sub
clc
scas
pop
js
dec
sub
mov
sbb
push
fistps
aam
movsb
mov
mov
jmp
ret
test
shll
and
xor
or
jmp
jmp
lret
out
cmp
pop
mov
test
add
aam
fwait
jne
cli
imul
push
es
adcl
xchg
jle
mov
jno
clc
push
pop
imul
mov
orb
mov
ss
xchg
push
sti
mov
cmp
mov
and
mov
and
xchg
jo
sub
push
and
lahf
adc
jmp
push
jae
shll
stc
aad
aas
mov
aam
orl
xor
cmp
mov
imul
mov
enter
push
lods
xor
bound
and
or
fbld
push
or
pop
cs
mov
pusha
sar
mov
lods
enter
out
sub
jge
cmp
xlat
and
xor
mov
popa
inc
out
jge
js
jno
xchg
insb
fbstp
cmp
sub
mov
addr16
sbb
cmp
in
addb
scas
clc
sbb
lret
or
pop
mov
push
cmp
lods
mov
data16
ljmp
popf
div
lretw
in
jl
lods
imul
sub
leave
jg
xchg
mov
nop
mov
outsl
mov
sub
cmp
pusha
xor
xchg
sbb
aaa
loope
push
sbb
mov
or
mov
pop
inc
add
mov
rolb
clc
adcb
test
mov
rcrb
cmp
push
fimuls
mov
sub
push
jnp
test
aaa
or
jb
sbb
inc
push
in
out
push
sbb
inc
xchg
test
cwtl
cli
or
dec
cmpsl
ret
sbb
sub
movsb
test
sbb
std
pop
mov
cmp
out
je
in
pop
repnz
xor
or
bound
inc
pop
jne
stos
lock
or
xor
sub
pop
out
mov
loop
and
jne
cmp
and
rcr
push
cmp
add
and
pusha
mov
mov
mov
shll
sti
fdivl
mov
jbe
and
jecxz
imul
mov
and
mov
sbb
arpl
lds
imul
lock
test
lds
addr16
aaa
lahf
sbb
adc
incb
imul
and
xor
mov
mov
add
fbstp
pop
das
or
cld
stc
not
stc
pop
ljmp
adc
andb
inc
movsl
js
adcl
or
add
pop
xchg
mov
aam
mov
mov
sbb
mov
roll
cmp
or
ficompl
jb
mov
pop
out
daa
sti
sub
or
mov
loopne
jbe
sbb
fmul
in
int
xor
adc
jne
inc
in
push
fnstcw
loope
or
xchg
pop
mov
inc
or
stos
sbb
push
outsl
iret
sbb
addr16
sub
xorb
test
sub
pop
enter
icebp
pushf
add
leave
xor
inc
mov
or
xor
imul
fnstenv
cmp
scas
mov
mov
mov
mov
mov
loopne
and
rolb
mov
aad
mov
inc
pop
jne
adc
mov
and
sbb
inc
mov
xor
mov
jne
call
stos
aad
jns
xchg
mov
nop
clc
je
pop
adc
jno
int3
outsl
sbb
lds
and
popa
repnz
call
loope
lods
mov
cwtl
sub
or
pushf
mov
jmp
fcomi
or
fwait
sbb
or
fsubrl
xor
sahf
shr
imul
sub
in
outsl
xchg
lods
cmp
push
cld
adc
xor
ja
call
enter
cmp
cld
mov
push
push
xor
out
sub
clc
mov
scas
test
push
out
xlat
xchg
addl
push
insb
jg
jp
int
mov
dec
lcall
leave
add
adc
out
mov
push
out
sbb
xchg
je
sbb
bound
lock
fisubs
mov
fstps
push
leave
lds
lret
ret
mov
cmpsb
push
adc
nop
sbb
das
shll
xchg
push
repz
shlb
lret
fnstsw
xor
dec
inc
scas
pop
sbb
std
mov
add
lret
shl
mov
inc
insb
add
push
rcrl
test
xor
jae
jmp
loope
push
adc
out
insb
scas
cmpsl
dec
xchg
jl
inc
mov
bound
jbe
sbb
and
mov
cld
xchg
xchg
inc
les
in
push
iret
sub
dec
push
mov
mov
shll
xchg
jp
pop
imul
push
jge
cmp
orb
sahf
test
xor
lcall
mov
bswap
outsb
jl
mov
icebp
imul
push
int
inc
sbbl
and
jbe
cld
xor
cmp
adc
js
jno
mulb
lahf
loopne
cmc
or
sarb
rorb
fsubl
and
mov
mov
lret
call
mov
cs
and
adc
sub
push
push
jg
inc
inc
xlat
cmp
rcr
fcompl
mov
scas
jmp
xchg
xor
call
adc
shlb
mov
add
in
repnz
inc
jecxz
add
int
fistpll
jmp
movsb
out
loop
std
mov
outsl
xor
adc
jl
inc
dec
ja
or
fdivrl
fstpl
fists
and
ss
into
jmp
xchg
mov
std
movsb
or
push
ds
jns
and
call
out
pop
push
jno
add
xchg
add
adc
push
pop
stos
ljmp
into
sti
fbld
sub
push
xchg
xchg
pop
or
js
adc
lea
dec
cli
outsl
mov
cld
xchg
scas
xchg
int3
js
sub
add
ret
outsb
out
jp
mov
iret
push
dec
int3
xor
fldcw
out
xchg
je
out
add
test
addr16
inc
sub
add
cmp
inc
jmp
inc
das
pop
push
repnz
scas
sbb
std
mulb
cmp
pop
loop
imul
out
fs
jnp
sub
xchg
stc
repz
adc
jmp
pop
int3
adc
jae
pusha
push
or
enter
int
xor
mov
inc
mov
pop
sahf
repnz
adc
rorb
jbe
push
mov
adc
fbstp
shl
mov
mov
fld
repz
insl
div
mov
mov
in
cwtl
dec
fwait
pop
jecxz
mov
pop
in
out
cltd
mov
pop
loope
je
fwait
sbb
rol
stos
mov
push
shrb
imul
imul
dec
int
mov
pop
loope
rol
mov
add
lods
mov
fadds
test
mov
movsb
fidivrl
rcrb
inc
test
ret
mov
push
sbb
subb
or
repnz
sbb
push
lahf
pop
repnz
jp
jle
scas
scas
leave
lahf
pop
dec
hlt
outsl
mov
xlat
inc
xor
insl
insb
mov
xor
stos
push
inc
mov
xchg
sub
xchg
scas
fcmovnbe
outsl
mov
les
ficoms
insb
je
sbbb
or
push
xcrypt-cfb
cmpsl
cmpsl
xor
cmp
lcall
data16
ds
and
ffreep
sub
xor
loopne
xor
jae
dec
or
aad
jmp
and
repz
sub
mov
mov
dec
push
push
shlb
rcrb
add
jne
into
stos
pop
movsb
out
jg
fs
xor
popa
sbb
dec
lods
sti
int3
popa
cmp
cli
cmpb
pop
fs
fbld
sbb
dec
sbb
xlat
xchg
lcall
mov
das
pushf
in
pop
ds
loope
cmp
repz
xor
sub
test
inc
in
insl
lcall
aam
xor
aad
add
xchg
cmpsb
cmp
ret
adc
mov
dec
sti
inc
jecxz
cltd
or
jl
fimull
bound
adc
imul
or
jmp
out
gs
xor
xor
mov
lret
pop
aaa
sbb
lods
sub
add
lret
lods
sub
mov
dec
or
xor
mov
or
mov
cmp
fildl
lods
shl
fs
es
pop
sbb
push
sub
js
jb
inc
push
sub
aam
xchg
mov
mov
aaa
xor
cmp
or
jnp
add
inc
ret
push
ja
js
xchg
and
hlt
fs
icebp
jns
xor
in
lods
clc
out
cmpb
mov
test
add
cli
cs
sbb
subb
test
inc
ret
add
arpl
pop
ret
mov
mov
rcrl
scas
lret
js
pop
sarb
and
or
inc
pop
xchg
push
sub
push
pop
dec
test
js
jns
test
jmp
loopne
imul
orl
cmpsl
rcll
add
jmp
and
enter
mov
mull
stos
lock
mov
and
les
xor
add
push
xor
bound
mov
outsl
ljmp
sbb
rorl
mov
dec
dec
mov
pop
cmp
cmp
cmp
xchg
dec
adcb
dec
adc
dec
loopne
out
popa
pop
sbb
push
sti
pop
or
pop
shrb
pop
out
scas
outsb
pop
push
or
insl
stc
outsl
sub
sub
cmpsb
mov
pusha
dec
add
jns
mov
fdivrl
std
or
popf
test
loop
jmp
lret
jo
xor
test
fsubs
inc
pop
mov
test
lcall
pop
jbe
outsb
inc
lret
add
jmp
test
fisttpll
dec
dec
out
xchg
inc
mov
add
mov
sbb
mov
sub
shll
mov
push
push
push
test
jb
and
in
xor
mov
xor
stos
scas
pop
sbb
push
pop
xor
inc
mov
pop
ja
lahf
mov
jns
jp
add
jmp
aam
mov
mov
mov
xchg
loop
stos
fs
sbb
xchg
xchg
xor
push
imul
dec
cmp
mov
xchg
fmuls
xchg
into
cmp
inc
std
lods
sbb
xor
sub
insb
jmp
cld
fadds
mov
push
mov
repnz
lret
sub
xlat
dec
mov
xlat
adcb
and
add
lret
sarb
inc
test
adc
rcrl
mov
popf
cmp
ret
mov
popa
rcll
rcl
inc
imulb
popf
hlt
xchg
xor
jmp
loop
add
mov
repz
push
insl
add
iret
pushl
add
sbb
xor
leave
or
or
xor
xchg
cmc
lea
fxam
mov
pushf
cmp
repz
sbb
sub
into
pop
outsl
test
and
fdivp
xor
aaa
jg
pop
xchg
arpl
pop
inc
sbb
loopew
loopne
add
cmp
aas
jl
fsubr
iret
in
xchg
mov
cmp
adc
mov
push
jmp
test
and
mov
shlb
mov
cmpb
movl
fcoml
aas
jl
ja
mov
fimull
test
jp
sub
imulb
gs
xor
lcall
orb
mov
data16
dec
ret
mov
jp
loop
xchg
std
lahf
cmpb
adc
adc
fcomi
mulb
addl
mov
mov
inc
in
jle
jnp
data16
fildl
lahf
xchg
jmp
outsb
in
push
nop
aaa
sub
push
pop
mov
or
adc
or
out
mov
arpl
and
shrb
data16
inc
fsub
xlat
inc
rcll
dec
mov
icebp
je
rorb
add
ror
dec
mov
push
jecxz
pusha
movsl
jmp
push
cs
or
dec
iret
adcl
fisubl
dec
push
movl
mov
into
inc
mov
pop
fistl
fs
rcrb
ret
push
fcmovnu
xlat
sbb
std
xchg
dec
loopne
and
add
fdivr
int
aas
or
lret
adc
in
lret
movsl
testl
insl
pop
insl
sti
cmp
push
sub
incb
test
cli
jo
jl
notb
int
sbb
jno
cli
shll
cld
dec
aas
cmpsb
xor
loopne
stos
test
mov
mov
push
pop
push
add
popf
pop
pop
shrb
loope
pop
data16
in
divb
mov
push
mov
or
loop
pop
or
stos
jbe
dec
or
les
aaa
mov
movsl
insb
push
push
sarb
lods
aaa
pop
pop
mov
loopne
mov
aad
ljmp
movsl
pop
in
pusha
mov
loopne
mov
mov
dec
movsl
mov
cs
jb
xchg
cmp
push
mov
add
pop
jo
jbe
mov
addl
push
and
testl
in
jae
lds
push
xor
fnstenv
jl
or
push
cmp
xchg
jae
mov
jl
test
push
pop
mov
imul
push
in
fsubrl
jne
sub
fisttps
xor
lret
xor
enter
pop
repz
aad
pop
push
stc
pop
fnsave
push
jg
xor
dec
ja
loope
sbb
arpl
add
aaa
sahf
add
and
das
fnstcw
adc
pop
cmc
decb
movsl
scas
xchg
fldenv
gs
dec
ss
in
push
popa
push
fbstp
push
stos
sub
xor
and
xchg
mov
cmp
ds
lds
lods
into
sbb
lret
sub
std
or
mov
or
cs
or
jg
aaa
icebp
xchg
dec
shlb
xchg
inc
rcrl
aaa
add
push
pop
inc
stos
push
shll
rcr
mov
fistpll
cmp
insb
dec
adc
sub
sti
xorb
stc
sub
ja
sbb
cmp
mov
xchg
xlat
xchg
das
nop
jle
adc
in
inc
push
cld
add
sbb
lahf
imulb
idivl
movsl
fcmove
stc
jb
mov
ja
push
leave
in
out
rcll
cmpsl
xlat
mov
xlat
fwait
rclb
insl
in
outsb
cmp
push
pop
stc
lock
mov
lcall
sbbl
jo
aad
mov
cmp
inc
pop
in
dec
out
sub
fldt
pusha
pop
push
jg
fstl
rorb
popf
divb
test
xchg
mov
xor
out
dec
int
or
ret
call
pushf
mov
pop
movsl
inc
pop
xchg
or
aad
popa
addb
pop
cmp
mov
xor
fsts
sub
stc
les
sub
mov
jae
stos
in
call
in
push
pop
in
dec
push
dec
inc
je
sar
xor
mov
das
ret
adc
sbb
vmovdqa
xchg
mov
loop
fdivrs
sub
cmpsb
jne
mov
lahf
jns
shlb
pop
adc
outsb
into
mov
ficompl
insl
xchg
insb
xlat
adc
stos
shll
aam
ss
movsl
adc
push
push
mov
push
mov
jg
push
sti
jno
jns
aam
icebp
jp
push
inc
adc
lods
into
adc
xchg
push
int
sub
add
push
dec
push
adc
mov
mov
xor
add
cmp
in
call
pop
mov
xchg
jae
cmp
ret
push
mov
dec
cmp
lock
rcll
jp
xor
sub
pop
lret
loope
popf
or
popaw
sub
push
jl
cmpsl
bound
fisttpl
lret
cmpsb
imul
mov
idiv
sub
mov
hlt
sub
ja
push
mov
jne
lret
xor
mov
ja
add
scas
mov
out
in
out
insl
mov
adc
scas
jp
cmpsl
repnz
xchg
fiaddl
cwtl
sbb
not
mov
dec
in
bsr
imul
sarl
out
cmp
and
jecxz
dec
cld
mov
adc
mov
adc
xchg
mov
inc
cmpsl
dec
add
dec
inc
fidivrs
jecxz
lret
mov
pushf
cmp
xorb
xchg
lcall
sub
iret
shld
lock
js
rorb
ja
jl
and
mov
mov
xchg
jnp
loope
lods
and
and
inc
jmp
inc
into
mov
pop
xor
jp
sbb
mov
fdivrl
or
pop
push
imul
subps
shrb
nop
outsl
lds
shll
andb
stc
scas
shlb
sub
jae
dec
inc
inc
sub
mov
mov
fucomp
lret
aad
faddl
jns
ja
xchg
leave
push
stos
mov
into
shl
sahf
test
enterw
mov
xchg
lea
das
mov
cmp
mov
shlb
adc
ja
ss
inc
js
sbb
ja
cmp
mov
dec
xor
js
loope
jo
enter
lock
sbb
sub
cmpsb
rcrb
xor
imul
out
or
mov
stos
mov
into
and
f2xm1
adc
mov
jb
lcall
jmp
aad
pop
mov
ret
xlat
mov
lea
rolb
xor
test
les
cmp
mov
xchg
jae,pt
aas
subl
pop
inc
jle
arpl
stos
inc
xor
jae
mov
pop
das
jno
lds
repnz
pop
lock
adc
ret
pop
inc
js
mov
pop
sub
xchg
sub
ja
rcrb
movsl
jle
or
push
dec
lds
mov
repz
push
jb
push
dec
pop
hlt
test
movsl
dec
js
scas
and
in
scas
mov
jg
sbb
bound
inc
adc
repz
pop
jecxz,pt
push
add
testl
sub
cmp
ror
add
fnstsw
dec
cmp
fcomps
stos
inc
nop
mov
fsubs
cli
insb
sub
xchg
sub
pop
inc
cmp
adc
lgs
out
dec
hlt
dec
insb
mov
push
ds
aas
cmpsl
adc
mov
and
push
jecxz
test
or
jle
sub
jp
iret
pop
sbbl
cmp
ljmp
ss
add
enter
cmpsl
neg
inc
cmc
je
fidivrs
xchg
adc
adc
mov
add
cmp
xchg
in
add
and
sub
mov
imul
jno
mov
popa
cmp
je
test
dec
and
outsl
and
data16
jle
push
sarb
repnz
adc
dec
and
sbb
mov
test
lods
adc
xor
icebp
movl
mov
mov
clc
gs
mov
pop
mov
add
sub
frndint
fldenv
xor
hlt
testl
or
jo
outsb
fadds
jo
jns
xor
cmc
push
jbe
adc
cmp
lods
xor
or
xchg
cwtl
xchg
shlb
data16
popa
mov
leave
xchg
sarl
pop
fdivr
mov
pop
mov
inc
sbb
adc
jo
push
enter
add
pop
push
jecxz
rcll
inc
call
mov
or
sbb
loope
xor
push
divps
outsb
icebp
and
out
cltd
or
sub
jns
das
cmc
adc
dec
addr16
sti
je
neg
xchg
pop
ret
and
pop
frstor
lret
mov
fwait
xor
lahf
xlat
mov
inc
sub
xor
pushf
hlt
int
jg
xchg
dec
jnp
das
call
dec
sub
push
mov
int3
dec
dec
rcrb
sbb
mov
fnop
add
cmp
jge
pop
shll
dec
ja
push
cmp
in
push
pop
lret
outsb
sub
mov
and
xchg
cmc
lcall
fldenv
in
dec
enter
je
sub
inc
jle
mov
mov
in
mov
and
mov
hlt
out
popl
les
xor
mov
faddl
inc
mov
cmp
push
xchg
shl
loop
mov
jns
imul
shr
sub
mov
int3
mov
fwait
inc
scas
cld
les
xchg
lods
bound
int
loopne
aaa
out
shl
stc
testb
popa
cltd
cmp
cmc
ja
insb
leave
hlt
mov
mov
test
jg
clc
ret
fstpl
xchg
sub
stos
adcb
lret
xor
mov
inc
xchg
ljmp
shrb
test
mov
mov
std
jae
in
in
das
clc
lds
dec
sbbl
movsb
fdivrs
push
outsb
cmc
scas
lret
not
rcl
mov
subb
push
or
mov
stos
clc
sahf
cmp
out
pop
adc
cmp
jbe
mov
pop
mov
add
pop
push
fcmovnbe
mov
or
inc
in
pop
lahf
mov
inc
inc
push
sbb
mov
cwtl
inc
call
fcomps
mov
dec
and
dec
push
icebp
xchg
pop
test
pop
outsb
jo
xchg
enter
inc
fsts
data16
and
mov
arpl
out
cmp
pop
mov
test
jecxz
push
cmc
loopne
inc
mov
dec
enter
add
push
mov
imul
insl
xchg
mov
adc
cs
scas
mov
add
add
push
push
gs
fsubrl
out
loop
adc
ss
jne
aam
adc
test
mov
and
ss
cmp
sbbl
mov
xlat
sbb
mov
sbb
addr16
dec
popa
xchg
lods
mov
jp,pn
push
stos
ret
idivb
clc
xlat
jbe
loopne
xchg
dec
pop
mov
repnz
aad
sub
test
pop
cs
ljmp
nop
inc
add
mov
std
fistpl
sbb
sbb
je
insl
dec
scas
dec
insl
sub
xor
push
mov
sbbb
mov
sub
or
test
mov
inc
test
sbb
aas
repnz
pop
dec
xchg
fcomi
subb
sub
pushf
imul
call
popa
push
negb
or
xor
add
data16
lock
xchg
push
and
pop
enter
stos
sub
dec
js
add
adc
pop
rolb
mov
jg
dec
jae
fnstcw
cli
ficoms
sub
cmp
fsubs
mov
roll
push
in
sbb
aaa
test
and
and
push
rcl
sub
jae
iret
je
push
fiadds
in
push
fidivl
fcoml
jno
mov
add
inc
in
mov
adc
in
xchg
push
int
call
pushf
out
xbegin
nop
adc
sub
rorl
das
cwtl
add
dec
and
scas
sbb
inc
shrb
pop
dec
std
xchg
add
mov
xor
lock
std
and
pop
sti
dec
push
lods
imul
les
lock
lret
insl
sub
in
out
fstl
mov
sub
dec
out
or
cwtl
shlb
nop
push
cli
cmp
fstl
ja
outsl
daa
xlat
movsb
repnz
add
gs
adc
mov
out
dec
mov
pop
xlat
fsts
das
es
push
and
std
fists
add
xchg
add
test
xor
cwtl
pop
inc
pushl
sti
dec
imul
cli
pop
dec
pushf
jo
popa
out
push
push
dec
mov
repz
jecxz
testb
jmp
add
adc
les
and
xchg
mov
xchg
scas
dec
adc
sub
movsb
stos
adc
fmuls
push
add
fnstcw
xor
and
loop
add
leave
mov
cmp
ds
mov
mov
mov
es
jle
je
jo
mov
and
sti
and
test
jl
xor
std
push
push
xchg
bound
test
in
mov
stos
push
rcrl
loope
xor
daa
pop
out
push
fidivrs
dec
jb
out
xchg
je
loope
out
dec
lods
jne
ss
xchg
arpl
dec
movsl
popf
push
cmpsb
fwait
xor
scas
push
orb
mov
pop
mov
fcoml
inc
sub
fmull
mov
jg
fs
and
mov
push
in
test
sbb
lcall
loopne
cld
mov
mov
ss
mov
outsl
pusha
jnp
es
inc
out
nop
das
inc
xchg
movsl
ds
xchg
les
loope
out
dec
xchg
addr16
jg
test
test
pop
mov
cmp
push
mov
sbb
je
mov
loopne,pn
dec
stos
pusha
or
sub
mov
jp
pop
aaa
pop
jg
mov
and
inc
inc
cs
fisubrl
sub
scas
test
inc
mov
pop
lahf
sbb
mov
fdiv
fcoml
inc
and
jns
pushf
ss
loope
outsl
push
sbb
sub
and
outsb
das
push
roll
pop
rcrb
inc
mov
stos
and
push
jge
push
out
fcmovnu
push
and
add
inc
lcall
mov
add
sbb
pop
mov
push
push
mov
pop
xchg
sti
ss
cld
ss
xor
pusha
sbb
sub
lret
jmp
mov
adc
push
int
mov
jge
xor
inc
fldt
mov
popf
or
cmc
inc
repnz
mov
and
test
nop
adc
pop
imulb
in
jnp
stc
cmp
inc
pop
mov
xchg
stos
dec
aad
aad
shrl
inc
push
push
lea
push
shrb
mov
icebp
stos
fldl
sarl
push
jb
leave
push
mov
pushf
cmpsl
mov
mov
push
mov
sbb
adc
sbb
dec
and
pop
sub
and
subl
push
lock
mov
icebp
mov
aaa
mov
mov
loop
stos
outsl
adc
sub
adc
and
or
aad
test
inc
js
loop
pop
jae
jbe
mov
mov
in
jno
pop
bound
jno
loope
mov
sub
sbb
jmp
pop
cmp
or
mov
push
adcl
cmp
cmp
and
xchg
outsb
rcll
cwtl
int3
adc
push
or
ret
fidivrl
adc
lock
fcmovnb
dec
push
dec
mov
adc
jg
lea
lea
repnz
pop
dec
cmp
pop
aad
sub
mov
mov
xchg
rcrl
xchg
je
repnz
lcall
cs
out
fwait
xchg
adc
jno
mov
jae
loopne
aaa
mov
and
loope
lock
push
adc
xchg
lret
in
jnp
add
nop
or
shlb
xchg
lret
in
outsl
pop
arpl
fs
and
xchg
inc
mov
ret
lds
out
stos
add
fmuls
les
imul
cmpsb
fwait
mov
cwtl
movsb
add
sbb
fdivrl
in
lods
imul
icebp
mov
aad
clc
imul
sub
xor
xor
and
jle
leave
mov
add
cmp
cmp
push
repz
shll
in
jbe
jb
pop
dec
jne
bound
insl
mov
sub
xchg
mov
iret
jae
add
add
cli
push
dec
pop
jmp
aam
ret
sbb
lret
out
out
xor
adc
scas
jp
loop
in
xchg
iret
lahf
inc
dec
popa
mov
lahf
sahf
jne
rcll
pop
pop
fs
insl
loopne
xchg
es
jle
aam
fld
das
out
fisubs
mov
movsl
outsb
arpl
and
xchg
jp
out
jns
cwtl
inc
adc
sub
aad
rol
mov
cmp
jle
jecxz
iret
repnz
cltd
fists
adc
push
mov
jle
setne
inc
jecxz
inc
adc
dec
sub
sub
inc
mov
repz
sarb
pop
cmp
jns
and
pop
xchg
fistpl
jae
jo
sbb
cltd
cmp
nop
loop
call
mov
test
and
sub
shll
inc
xor
mov
es
cld
push
mov
sub
xor
imul
aad
mov
and
push
cmp
ficomps
ds
mov
and
mov
and
aad
xlat
and
outsl
jle
cmp
lea
mov
ret
pop
sub
jns
inc
push
dec
hlt
push
cmp
dec
cmp
inc
lods
xchg
fldcw
sub
ret
loope
int
out
xchg
jg
push
mov
sbb
push
lock
jg
pusha
jb
lcall
dec
push
or
rolb
and
mov
repz
enter
nop
pushf
inc
cmp
rcll
add
orb
xchg
int3
mov
mov
sbb
xchg
add
dec
jnp
outsb
pop
mov
cmp
xchg
mov
cltd
loopne
xchg
jae
xchg
movsb
sbb
roll
aas
into
push
test
in
sub
adc
sub
xor
arpl
inc
mov
sbb
std
adc
out
xor
lea
ret
adc
sarb
pushf
mov
adc
cmc
das
pop
fs
and
push
pop
adc
fistps
das
mov
cmp
lods
sbb
or
insl
and
aas
sbb
push
invd
jo
nop
pushl
divl
cmp
repnz
insl
rorl
pop
jnp
movsb
mov
cs
in
dec
push
inc
pop
inc
xlat
aad
sbb
push
pop
aad
xor
daa
popa
aad
xor
sar
add
mov
mov
mov
xor
test
xor
pop
mov
in
aad
js
rolb
cli
inc
cmpsb
jp
cmpsl
dec
jle
jo
sti
sbb
sub
pop
out
cmp
fsubl
into
sbb
xchg
popa
test
lds
pushf
shll
in
ficompl
inc
xchg
popa
es
negl
or
mov
cmp
loopne
pusha
mov
or
xchg
iret
mov
push
loope
ret
fadd
mov
sbb
imul
or
loop
dec
fisubl
xchg
dec
mov
sbb
xor
dec
xor
fnstenv
mov
ret
divb
push
xor
test
out
adc
stc
popa
inc
popa
push
cmpl
dec
loop
add
imul
dec
inc
arpl
dec
es
pop
insl
movsl
pushf
push
push
mov
rorl
dec
xor
xor
xchg
inc
xchg
push
ljmp
insl
aam
jl
repz
and
jecxz
xchg
sbb
push
mov
aad
cmpsl
lret
adc
cmp
sbb
add
addr16
mov
jecxz
nop
enter
mov
jo
and
mov
push
outsl
mov
jecxz
mov
mov
lea
jmp
test
mov
fdivs
and
ficompl
ss
dec
pop
jo
std
sarl
and
das
fisttpll
xor
stos
cwtl
cmp
decb
imul
mov
pop
call
loopne
or
jmp
repz
jge
pop
jae
insb
pop
int
shll
gs
xchg
mov
mov
out
wbinvd
test
sub
imul
mov
sbb
xor
add
cmpsb
notb
rcr
push
xchg
inc
mov
push
mov
lods
mov
rcr
icebp
cmpsb
pop
xchg
pop
inc
popl
out
cs
dec
inc
push
mov
cmp
adc
jno
mov
cmpsl
mov
and
std
pop
cmp
xor
pop
les
divl
mov
cmpl
jnp
adc
lcall
in
xor
in
add
dec
or
adc
mov
mov
push
andb
push
aam
shl
xor
hlt
adc
les
sub
dec
sub
out
fucomip
cmp
andl
outsl
jle
xchg
cmc
ja
lods
das
add
iret
pop
xor
cld
cmp
insl
or
push
pop
nop
adc
jns
jbe
dec
fdivs
dec
pop
nop
pushf
add
mov
pop
les
pop
jg
imul
inc
xchg
ds
inc
movsb
rclb
mov
dec
or
jl
or
pop
and
leave
jp
xchg
imul
in
and
aam
add
jge
cld
cmpsl
aaa
bswap
popa
add
xchg
sub
mov
inc
pop
push
pop
ss
adc
or
rcl
jb
leave
jl
adc
stos
sbb
mov
bound
lret
push
sub
push
mov
das
pop
cmpsb
shl
add
sub
dec
mov
jp
cltd
dec
cltd
jae
daa
dec
ss
xor
sub
sub
jno
lret
call
popa
jae
inc
popa
add
xor
pop
dec
push
pop
pop
sub
addb
arpl
shrb
scas
xor
movsb
mov
pushf
mov
mov
mov
jg
or
pusha
mov
jns
int
sub
lock
mov
data16
ret
stos
push
xlat
lahf
int3
in
ret
cwtl
xor
mov
aad
add
and
mov
test
cltd
arpl
mov
into
mov
mov
inc
arpl
loop
cmp
push
in
push
ror
andps
icebp
cltd
add
ljmp
mov
or
mov
pop
imul
and
mov
jge
lods
notl
out
and
push
lock
test
add
dec
add
notb
iret
sbb
sub
ss
push
xchg
mov
mov
xchg
mov
aam
adc
jnp
rorb
data16
pushf
dec
fmul
dec
mov
fadd
push
sbb
and
pop
test
popf
dec
xor
xchg
mov
sti
fsts
jecxz
sub
lock
int3
cmpsb
xor
lret
mov
adc
stos
jne
dec
mov
sbb
aam
mov
mov
mov
sbb
rcr
andl
pop
imul
xlat
mov
xchg
push
inc
or
sti
lahf
hlt
mov
xchg
cmp
mov
push
clc
insb
jae
call
out
cmp
cmpb
mov
hlt
sub
sub
scas
mull
in
iret
and
jns
sbb
lea
movsl
add
or
add
push
lcall
push
cs
inc
and
mull
cmp
in
int3
or
sub
filds
sub
mov
testl
lods
adc
mov
pop
or
xchg
inc
call
mov
add
ds
cmp
fisubrl
cmp
mov
jge
pop
inc
imul
or
jnp
std
dec
shlb
ljmp
iret
movntps
or
push
add
sub
cld
and
movsl
jb
jno
fidivrl
push
add
jg
jg
adc
fwait
or
aaa
and
xor
movsb
adc
xchg
xchg
je
xchg
or
add
lret
pop
cmp
cmp
in
adc
addb
pusha
lahf
add
push
es
mov
divb
in
inc
mov
push
push
test
imulb
enter
les
add
adc
push
enter
popa
scas
loope
xor
outsl
imulb
clc
pop
mov
fldl
aam
jb
xor
nop
loopne
cmc
xor
pusha
dec
mov
fistpl
jns
xor
hlt
ljmp
fsubrp
nop
aas
mov
mov
cmp
inc
jle
jl
cmp
inc
pop
test
in
cmpsl
adc
jnp
cmp
movsl
cwtl
sub
adc
movsb
out
mov
mov
xchg
sbb
stos
repnz
data16
sbb
mov
jns
cs
cltd
pushf
adc
lahf
push
bound
xor
xor
and
iret
loop
cmp
add
ret
inc
add
sbb
out
pop
xchg
pop
or
cmp
outsb
es
push
and
xrelease
push
cld
push
dec
call
std
or
nop
imul
pop
sbb
xor
pop
getsec
jl
xor
pop
test
arpl
test
cmc
scas
aad
popf
icebp
out
es
inc
xchg
jl
lahf
es
neg
sub
scas
xor
orl
mov
cmp
ja
xor
in
dec
jmp
xchg
mov
xchg
cltd
cmpsl
nop
sub
dec
out
sbb
push
adc
rcr
xor
sbb
out
add
pop
xor
and
repnz
adcb
stc
cmp
test
dec
or
push
push
out
orl
jb
lcall
lods
sub
aad
hlt
repz
sti
add
adc
and
sbb
xchg
icebp
leave
xor
push
mov
clc
scas
lret
mov
inc
sub
or
cli
aad
push
imul
sbb
int
in
push
or
pop
push
inc
rol
je
mov
push
push
out
daa
cmp
outsl
out
mov
xor
stc
test
jb
addl
int
pop
dec
movsb
das
pusha
nop
inc
nop
dec
std
je
adc
mov
ret
jo
int3
push
ljmp
sti
inc
sbb
cmpsl
pop
insl
jmp
mov
mov
test
adcl
ss
ret
aas
cltd
in
and
or
test
xchg
sbb
jnp
jle
push
movsl
dec
ja
mov
notb
add
stos
jae
insb
cmp
dec
xchg
push
dec
and
sbb
xor
fidivl
ja
fwait
movsl
mov
shl
imul
lret
xor
insb
out
or
call
xlat
sahf
and
in
push
mov
loop
mov
insb
jge
inc
mov
ja
dec
lret
xchg
sub
aaa
mov
mov
xchg
jns
ss
into
cmp
adc
jl
test
jg
mov
xchg
lods
inc
cmpl
rcrl
mov
sbb
ss
outsb
jno
leave
loope
xchg
imul
adc
mov
movsb
sbb
mov
and
xchg
sahf
or
lock
mov
jl
cmp
clc
push
xchg
lods
pop
adc
icebp
sub
lods
dec
pop
push
stos
inc
mov
jae
xchg
cmp
push
mov
cmp
cmp
adc
jmp
push
adc
fwait
shll
sub
mov
ja
push
gs
and
mov
or
cmc
test
repz
push
or
xchg
notrack
push
mov
cmc
push
adc
sub
negb
test
sub
data16
sub
jne
lcall
fdivr
jecxz
and
dec
pop
icebp
or
mov
mov
cmp
push
shlb
popf
in
into
fsubrl
ret
mov
mov
popa
xchg
fisubs
xchg
cmpl
mov
pop
daa
nop
adc
pop
jbe
jle
pusha
jl
ss
lret
or
mov
sbb
stos
jne
push
cmpsb
jl
popa
arpl
jb
andb
std
cmp
das
stos
mov
repz
inc
add
std
xor
push
or
jne
push
pop
inc
dec
insb
mov
and
mov
xchg
addb
idiv
adc
xchg
ds
or
xor
int
mov
mov
sarb
mov
out
cmc
cmpsl
and
mov
sbb
stc
ficoml
icebp
cmp
pop
xchg
test
mov
loopne
and
add
lahf
and
jns
push
outsb
dec
sub
or
xchg
das
jmp
shlb
int3
lret
les
xchg
mov
xor
pop
bound
ret
hlt
iret
add
mov
jne
adc
arpl
dec
lcall
mov
js
sti
in
lret
add
popa
bsr
jnp
in
jns
or
mov
rcr
pop
rolb
push
pop
mov
out
pop
dec
push
jl
mov
mov
xor
sahf
jne
out
mov
fldl
testl
sbb
aad
mov
pop
dec
sahf
mov
insb
sbb
mov
push
into
jns
push
dec
inc
out
push
jecxz
popf
inc
sub
or
pop
add
dec
lcall
cmp
test
mov
popa
in
jge
jae
jns
outsl
xor
push
sahf
cmp
out
xor
adc
stos
inc
inc
sub
xor
xlat
mov
sub
jecxz
add
imul
es
addl
clc
mov
and
mov
inc
bound
pushf
xor
cld
shrb
jb
in
stc
jb
clc
out
push
jp
sub
scas
mov
add
xlat
das
jl
push
cmp
test
mov
ss
mov
out
adc
jae
pop
jl
fwait
or
ds
nop
iret
xchg
mov
rorb
pop
mov
dec
fmull
cli
mov
scas
loope
xorl
ja
faddl
adc
mov
push
cmpsl
or
adc
out
aas
cmpsl
pop
and
push
aas
mov
push
xchg
testb
push
stc
hlt
stc
nop
dec
pop
popf
jae
xor
shll
lcall
mov
push
nop
je
outsb
push
mov
dec
sub
push
xor
and
jno
fnsave
xchg
mov
inc
dec
popa
push
call
inc
bnd
push
dec
addl
pop
arpl
loop
dec
push
push
enter
xlat
sub
jg
and
xor
mov
mov
dec
popa
jbe
popa
mov
mov
mov
vpaddusb
push
jmp
push
pop
ss
mov
addl
cmp
and
cmp
out
sub
xor
loope
rcrb
iret
pushl
pop
in
xchg
std
stos
dec
push
jne
test
popf
orl
std
add
int3
in
es
push
in
int
shrb
sbb
mov
mov
into
pop
cmpsl
pop
adc
cmp
inc
xrelease
lret
movsl
xchg
fisubrl
jmp
push
shlb
and
aam
mov
int
add
inc
fsts
scas
mov
lock
xchg
rcrl
test
jl
cmp
and
sub
mov
fwait
inc
dec
pushl
inc
cmp
xchg
stc
pop
stos
inc
or
pushf
mov
aas
sbb
stos
sahf
mov
popf
jecxz
mov
pop
dec
xchg
push
aam
xchg
mov
xor
std
jecxz
adc
ret
popa
out
cmp
mov
jb
cmp
in
xchg
mov
stos
pop
xchg
inc
out
and
fs
mov
pop
adc
jb
testb
fisubrs
pop
fdivs
imul
aam
sub
jle
cwtl
jle
ja
loop
lahf
or
add
cwtl
repnz
iret
xor
push
push
lock
mov
push
call
cmp
daa
and
jnp
dec
jae
imul
ret
xchg
gs
out
xchg
in
add
mov
mov
adc
push
pop
js
aaa
inc
cltd
aad
push
lret
mov
repz
je
sbb
iret
daa
or
add
aas
stc
jns
subl
sbbl
into
pop
pop
push
aam
jo
cmp
enter
lcall
and
cmp
jae
aad
fadd
xor
scas
cmpsl
popa
je
inc
test
mov
jne
xchg
ds
lret
sub
outsb
xor
sarb
cmp
cmpsl
sbb
lcall
mov
mov
ret
adc
ret
int3
push
shll
mov
mov
loopne
jg
and
mov
out
mov
cmpsb
mov
sbb
outsl
mov
and
decb
sbb
aam
inc
ljmp
sbb
jae
lahf
cmp
mov
push
inc
aam
les
inc
mov
dec
fiaddl
inc
inc
stos
je
push
adc
push
and
daa
jne
dec
lret
mov
inc
stos
xchg
jp
and
scas
xchg
mov
pop
inc
cwtl
dec
sbb
outsb
aam
xor
lret
adc
jno
imul
push
call
sbb
lret
mov
jp
int3
xchg
gs
mov
add
mov
fstpl
pop
movsl
ljmp
lret
xchg
jns
pusha
jo
popf
fildl
andl
in
shlb
sub
fnstenv
mov
cmp
jae
adc
sub
push
sbb
sbb
sub
jge
in
mov
idiv
dec
pop
test
adcb
in
push
out
xorb
pop
pop
adc
sub
pop
ds
xchg
push
scas
mov
cmp
push
mov
xor
ror
dec
cs
cltd
inc
cmpsb
jo
pusha
pop
mov
mov
fstpl
sbb
pop
loop
adcl
sbbl
fwait
arpl
enter
mov
dec
and
fadd
test
and
rcrl
bnd
js
clc
fistl
xor
daa
nop
mov
jl
fdivr
cld
das
mov
mov
cs
sbb
popf
fwait
lahf
sahf
pop
ja
dec
sub
mov
pop
fmul
in
pusha
jmp
call
lea
xchg
div
scas
daa
xor
cmpsb
cmpsl
jbe
jmp
inc
pusha
adc
mov
enter
jge
sti
xchg
lret
push
or
imul
cli
mov
loop
mov
mov
pop
subb
hlt
pop
cs
shrl
cli
or
inc
out
xchg
int
out
gs
jl
xchg
cmp
mov
ja
jle
stos
out
adc
cld
ss
sbb
sbb
xchg
mov
std
imulb
sub
mov
lds
aas
push
popa
pop
mov
push
inc
aaa
mov
movsb
or
test
inc
imul
push
dec
pop
sarl
fdivl
loope
sti
mov
xlat
daa
shl
inc
mov
out
xchg
sti
nop
and
test
inc
pop
icebp
enter
jmp
adc
bnd
and
sbb
push
sub
das
sub
das
add
pushf
mov
fsubl
sbb
fisubs
mov
pop
dec
imul
js
enter
xchg
xchg
aad
pop
xchg
push
fwait
std
cmp
push
push
iret
sti
lea
push
aad
mov
jb
das
lds
mov
fwait
popa
sub
adc
les
clc
mov
xchg
or
jp
jo
xchg
stos
popa
enter
dec
fldcw
insl
lret
sub
dec
push
pusha
mov
fcmovnbe
call
push
cmp
stos
int3
ja
sahf
pop
lods
push
push
add
or
cmpsl
pop
lahf
out
cltd
push
dec
stos
sbb
imul
scas
ds
es
imul
mov
xor
adc
inc
adc
scas
test
xchg
inc
es
xchg
pop
fs
ja
add
mov
lods
jno
push
ljmp
sub
inc
or
repz
lret
fs
shll
repz
fisttpll
pusha
stos
jnp
and
shrb
mov
test
mov
xchg
xor
out
out
fisubrl
adc
sub
in
sbb
cmpb
popl
aas
out
push
mov
mov
aas
sbb
jmp
push
push
fldcw
xchg
pop
sub
lret
inc
in
mov
test
and
xor
xor
data16
pop
jns
sbb
sub
mov
cmp
adc
mov
push
lds
jg
dec
dec
pop
and
xorb
insb
or
dec
fs
dec
int
jge
inc
dec
xchg
pop
jb
loop
mov
jae
mov
mov
or
fistpll
inc
inc
and
repnz
pop
cmp
sbb
aaa
lret
js
mov
andb
inc
sbb
popa
shl
popf
gs
hlt
mov
xrelease
shl
dec
inc
cltd
xchg
incl
sarl
sub
sub
sub
cmc
fbstp
rcl
int3
icebp
mov
pushf
push
sub
xor
xchg
or
pusha
lea
mov
pop
ljmp
adc
hlt
pop
jnp
mov
xorl
in
sub
dec
rorb
fcmovnu
push
emms
pop
cmp
push
mov
or
jp
pop
push
mov
xchg
int3
cli
sub
scas
or
lea
add
test
imul
popa
loop
ss
movb
clc
jno
pop
lds
pop
fwait
aas
adc
cwtl
repnz
lea
push
jmp
arpl
jns
mov
pop
fadds
cmp
flds
dec
stos
fsubrl
inc
punpckldq
jmp
or
xchg
jne
aad
cmp
dec
cmp
sarb
sub
ret
inc
or
cmp
jp
pop
jae
dec
arpl
mov
add
in
dec
movsb
or
or
sub
aad
int3
xor
pop
clc
adc
mov
dec
xlat
mov
sub
insl
xor
cld
cltd
insl
xor
fldenv
rol
pop
and
mov
test
pushf
push
dec
dec
fcomps
fsubl
lret
cmp
jmp
add
sbb
sub
shrl
dec
jb
out
arpl
xchg
mov
lcall
jo
insl
xchg
adc
jo
push
imul
or
insl
mov
outsl
or
mov
rolb
cmp
inc
call
jge
push
test
fbstp
sbb
xor
lahf
out
pop
testb
out
cs
xor
mov
call
add
mov
xrstor
insb
push
cmp
lret
lods
cmp
mov
mov
cmp
pop
dec
mov
jmp
ret
xchg
add
addr16
bound
xchg
xor
insb
lods
xchg
outsb
sub
imul
idivb
arpl
addr16
xchg
cmpsl
jle
push
mov
xor
nop
jne
in
test
and
mov
outsl
pop
push
mov
mov
and
xchg
mov
fistpll
mov
lcall
aaa
out
cli
shrb
jp
mov
xchg
int
out
repz
fcmovbe
jno
stos
loop
ljmp
dec
je
stos
sub
ret
mov
sub
dec
cmp
push
out
xchg
mov
daa
xor
lahf
and
aad
mov
add
call
cltd
idivl
jns
sahf
inc
mov
out
and
fwait
cli
pushf
pop
inc
sub
lcall
or
mov
fistpll
lods
daa
loopne
popf
in
mov
cltd
mov
pop
testl
pop
mov
pop
dec
add
inc
js
lcall
xchg
stos
arpl
shlb
sbb
lea
test
jecxz
pop
stos
mov
mov
repz
dec
push
enter
repz
repz
dec
sbb
jnp
mov
jl
and
mov
call
adc
xlat
and
add
and
xchg
inc
pop
popa
stc
jl
and
fsubr
push
int
pop
mov
test
xor
fwait
out
test
xlat
std
fdivrl
xor
xchg
es
ja
push
pushl
gs
mov
sbb
add
jnp
inc
outsb
mov
dec
xchg
inc
push
push
xchg
addr16
xor
or
cmp
add
mov
fcompl
movsb
ss
xor
test
ret
xchg
push
hlt
cmp
in
out
mov
cs
aas
mov
push
xorl
sahf
mov
arpl
dec
xchg
fbstp
imul
pop
jp
int
int
xor
fistps
in
loopne
in
jl
push
adc
and
aad
push
mov
sti
and
fucomi
adc
jp
push
pop
adc
mov
push
inc
out
mov
shll
and
inc
icebp
flds
dec
push
fnstenv
lds
xor
mov
mov
push
cld
pop
cmp
lds
fstpl
inc
movsb
shll
add
cli
dec
scas
xchg
adcl
xor
jecxz
sbb
mov
in
fisubrs
push
cwtl
push
dec
xor
fimuls
mov
xor
push
mov
inc
cmp
ljmp
ja
add
pop
ds
test
and
xor
das
xor
mov
push
icebp
cmovae
xor
fistpl
xor
or
mov
dec
test
rclb
xor
test
push
xchg
ret
scas
push
icebp
std
mov
cmp
adc
jo
push
or
inc
mov
fldt
push
adc
jmp
clc
or
call
mov
mov
push
add
sub
insb
dec
in
pop
mov
add
push
xor
inc
fstpt
jns
fs
in
adc
cltd
rcll
jle
inc
fcomip
xor
jo
pop
sbb
cmp
push
inc
lcall
and
shll
popf
xchg
xchg
dec
push
adc
cld
adc
push
movsl
push
aad
pop
or
out
cmp
and
out
xchg
push
mov
jecxz
lret
jb
cld
loopne
repnz
inc
mov
test
add
scas
jnp
orb
adc
test
sub
out
lret
pop
and
and
mov
jne
ss
addr16
mov
ljmp
ljmp
ret
adc
pop
sarl
xchg
in
inc
jae
pushf
cmp
inc
pop
out
sub
inc
jmp
add
arpl
std
push
xor
in
adc
and
lods
fisttpl
add
std
aas
and
and
sar
ret
pop
dec
scas
xchg
pushl
sbb
sti
sar
pop
push
mov
xor
mov
sbb
sub
out
jns
inc
push
push
push
ret
jae
shlb
out
leave
out
cmp
or
stos
in
ljmp
ja
add
or
out
outsb
mov
div
hlt
or
in
mov
test
xchg
adc
sahf
lock
lods
mov
inc
imul
negl
cmpsb
adc
int
cmpsl
loop
dec
aam
mov
fdivs
shrl
push
popf
add
std
pop
push
rcrb
aas
sbb
xchg
lods
mov
cs
push
add
lret
and
sub
dec
dec
icebp
jns
sub
fsubl
mov
jmp
clc
push
mov
fcmovnu
sbb
ja
aam
jg
and
dec
pop
fsubrs
and
iret
jl
dec
xchg
jnp
push
aaa
jo
ds
and
push
inc
xor
mov
pop
jns
dec
cmp
xor
pop
jae
lods
xor
andb
test
mov
xchg
push
stos
pop
out
ja
and
test
cmp
pusha
inc
push
jmp
jmp
incl
xchg
sub
pop
pop
pop
std
xor
pop
sbb
lahf
mov
lds
mov
mull
add
das
and
mov
hlt
ret
out
pop
into
lds
xchg
inc
pop
xchg
add
aad
sub
mov
xor
jne
xor
in
popa
xor
hlt
mov
es
jae
fidivrs
sub
mov
stc
testl
sub
stos
pop
pcmpgtb
shll
mov
xchg
cmp
in
in
adc
fildl
dec
imul
js
sbb
xor
cli
jmp
out
sbb
mov
inc
push
addr16
test
mov
xor
in
mov
ds
mov
push
and
push
scas
sub
or
cs
rsqrtps
dec
xor
mov
dec
xor
or
mov
xor
add
adc
je
loop
ret
jmp
cmpb
inc
outsb
in
mov
mov
enter
mov
pop
push
jle
xor
mov
ficoms
lret
push
das
jmp
cmpsl
fadds
adc
out
cmpsb
jge
inc
sti
ljmp
xchg
inc
pop
jns
add
sub
jmp
cmp
shlb
hlt
rcll
stos
fistl
mov
or
scas
xor
insb
mov
clc
daa
gs
jmp
adc
sahf
test
mov
jg
mov
lds
inc
jle
adc
and
test
and
push
sbb
imul
fdivs
xor
cmpsl
scas
arpl
and
ret
fnstsw
adc
scas
int
cmpsl
rclb
sahf
int
aad
clc
scas
cmpl
leave
pop
dec
loope
push
dec
clc
mov
pop
mov
lret
or
loop
or
mov
int3
mov
push
push
in
loope
and
repnz
mov
aas
push
xchg
movsl
mov
push
jp
xor
push
lds
ja
pusha
xchg
in
pusha
test
xor
xchg
ljmp
repnz
sub
adc
pop
ljmp
js
cmp
addr16
jle
cltd
dec
fidivrl
dec
out
mov
and
rcrl
inc
scas
xchg
push
cmc
and
shrl
cmc
stos
jp
ds
hlt
cmp
roll
addr16
push
adc
icebp
jnp
mov
and
xchg
sbb
pop
and
sbb
jge
add
dec
out
fwait
jg
lock
out
insb
cs
inc
jnp
das
cmp
testl
jno
mov
mov
inc
cmpsb
fbld
icebp
fwait
inc
call
aaa
jl
int3
jo
add
fwait
xchg
sarl
jno
mulb
fs
imul
add
nop
xor
loop
fidivl
push
pop
pop
xchg
cmp
mov
mov
adc
sub
ja
repz
test
mov
in
add
aaa
add
lahf
fwait
icebp
dec
imul
int3
nop
out
pop
mov
cld
jmp
test
test
mov
mov
dec
pusha
insl
aaa
ja
sbb
dec
dec
jl
ret
ljmp
dec
pop
outsw
push
cs
mov
and
xlat
das
jae
rcrb
xlat
jge
jnp
sbb
xor
jg
cmp
fmull
cmp
or
sub
xlat
rcrb
adc
dec
repz
fisttpll
enter
xchg
cmp
fwait
ror
add
and
mov
cld
push
sbb
add
push
push
cmp
and
lea
mov
ret
inc
pop
dec
sahf
adc
loop
in
cli
lods
xchg
cmp
es
sub
aaa
xorb
aad
jne
icebp
lahf
xchg
sbb
data16
insl
aad
popf
xor
pop
popf
lea
add
mov
ficoms
mov
add
loop
cmpsb
cwtl
js
cmp
rol
addr16
xor
pop
pop
aad
shl
adc
inc
mov
jae
or
aam
test
mov
mov
aas
or
push
subb
xchg
ds
inc
adc
mov
inc
popa
pop
lret
xchg
jnp
dec
pop
imul
sub
imul
jmp
dec
add
add
scas
ret
ss
jmp
adc
adc
sbb
insl
adc
mov
sarl
leave
sub
shlb
xchg
aas
xchg
ret
pop
push
cltd
nop
outsb
add
mov
push
aad
sub
repz
in
movsb
mov
movsl
sbb
flds
or
dec
mov
jne
cltd
mov
mov
xor
mov
inc
ds
cmpb
fadds
pop
inc
popa
and
mov
in
dec
dec
fadd
jl
fisubrl
or
lods
cmp
ret
mov
and
inc
cmp
in
mov
stos
xchg
or
mov
clc
gs
mov
push
fwait
lods
mov
ss
fsubrs
aaa
inc
jp
xchg
mov
pop
bnd
jl
movsb
pop
repnz
shl
dec
iret
ja
lods
mov
sub
push
loope
cwtl
cmp
outsl
xor
or
lahf
clc
mov
jp
lret
adcb
out
inc
test
and
xor
es
pop
hlt
fnstsw
les
pop
pop
notl
sbb
xor
xchg
fisttps
sarb
mov
jg
push
mov
leave
push
jo
test
jecxz
mov
out
and
inc
aas
xchg
ds
bound
das
push
cltd
mov
out
test
cmpsl
sbb
sub
ret
sub
sub
cwtl
testl
es
push
sub
cmp
repnz
in
xor
js
xchg
ror
pop
dec
in
push
xor
roll
fldcw
movsb
pop
leave
or
cmp
adc
or
mov
pop
add
cmp
mov
add
push
ret
cli
dec
inc
into
movsb
arpl
mov
push
loopne
pop
xchg
lahf
lcall
xlat
divb
repz
test
cltd
cwtl
call
adc
leave
and
lcall
cmpsl
enter
xchg
lret
xor
pop
ficomps
jp
mov
pusha
mov
mov
xchg
pop
cmp
fadds
popa
ss
jle
mov
lcall
mov
lret
mov
and
insl
in
cmpsb
xor
jne
mov
outsb
pop
arpl
mov
mov
stc
mov
sub
push
out
mov
and
xchg
mulb
ds
in
or
aam
push
inc
jae
push
mov
lds
jae
dec
mov
mov
cmp
add
pop
sar
pushf
das
push
ror
push
out
in
arpl
dec
cmpsb
nop
xor
in
lret
repnz
js
push
gs
je
loop
xor
fbstp
adc
out
shlb
aam
js
in
sub
xchg
mov
rolb
lds
xor
ds
jp
inc
cld
aad
cwtl
aaa
mov
ret
push
call
and
jns
in
rolb
shlb
pop
mov
hlt
lods
add
fadds
adc
cmp
jae
add
mov
jmp
add
add
add
subb
cmp
sti
ja
xor
aas
pop
or
mov
xchg
sbb
js
sarb
idivl
cmpsb
cmp
sub
imul
jb
fistpl
xor
je
decb
test
xor
or
inc
mov
inc
mov
xchg
cmp
cmpsb
adc
lret
cmp
push
mov
dec
popl
xchg
mov
mov
daa
test
imul
mov
xor
inc
je
and
mov
imul
lds
jns
add
test
mov
mov
lock
sub
mov
shl
jnp
call
popa
stc
mov
cmpsl
push
mov
or
cmp
movsb
jge
cmp
xor
scas
insb
mov
mov
sub
insb
jp
mov
in
add
jbe
dec
pop
mov
in
xor
bound
ret
sahf
push
bound
ja
inc
pop
ds
xchg
add
pop
mov
sub
repz
out
sub
jmp
fnsetpm(287
lods
shlb
push
shrb
in
icebp
xchg
add
and
or
test
sub
inc
sub
sti
fsubrp
xchg
dec
push
push
in
push
sbb
and
xor
cld
and
xor
push
dec
sti
push
dec
push
xor
pop
xchg
jbe
das
mov
scas
cltd
inc
xor
iret
ljmp
mov
das
test
in
and
sub
push
xchg
icebp
push
pusha
mov
xor
sbb
nop
xor
pop
add
mov
pop
in
add
arpl
jne
mov
in
sbb
push
loope
push
cli
sub
push
cmp
push
xor
cmp
int3
mov
xorb
mov
and
fwait
fs
in
lret
jae
cltd
cmp
sub
push
hlt
sbb
gs
out
out
jnp
cvttps2pi
cmp
push
sbbl
ljmp
dec
outsb
or
adc
loopne
aam
adc
pop
pushf
arpl
push
lcall
sbb
cmpsl
int3
sbb
test
jnp
mov
jl
repnz
adc
data16
std
mov
mov
and
mov
icebp
test
xchg
mov
pop
mov
lods
ljmp
repz
dec
inc
mov
rcrl
scas
push
out
cmp
or
das
mov
loope
mov
imul
pop
cs
nop
adc
add
and
rcrl
out
aas
int
fistps
jns
ljmp
lcall
sub
mov
int3
adc
sti
addb
shrb
mov
mov
xor
gs
lods
mov
cmp
jb
out
add
mov
out
mov
inc
lods
xor
cmc
aam
nop
imul
fidivrs
popf
add
scas
imul
and
fdivrl
adc
jb
xchg
mov
mov
mov
scas
xor
lods
add
and
jo
add
pop
pcmpeqw
scas
inc
xchg
sti
push
cmp
mov
adc
nop
addr16
or
and
mov
push
sbb
negl
mov
pusha
add
ficoms
jae
lcall
cwtl
mov
pop
pusha
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
daa
aam
jb
inc
jns
pop
insb
xor
pop
mov
add
call
outsb
setl
inc
pop
xor
shlb
cmp
pop
pop
sub
mov
mov
mov
sub
adc
xor
push
mov
pop
add
mov
push
call
test
push
jmp
hlt
sbb
fidivrs
pop
pop
popl
jmp
mov
test
cmpsw
push
std
repnz
push
push
jmp
xor
xchg
test
xor
imul
pop
sub
or
dec
mov
cmp
jne
add
jmp
pop
mov
es
mov
mov
jmp
or
icebp
push
inc
sub
dec
ret
xlat
test
mov
imulb
mov
xchg
add
cmp
push
sub
sar
mov
or
testb
push
imul
ror
sahf
repnz
inc
mov
js
out
cmp
test
outsl
outsl
dec
ret
xlat
mov
and
js
xor
ss
mov
pop
sahf
inc
jb
out
mov
into
stc
lods
or
inc
arpl
shrb
fidivl
dec
ret
xlat
pcmpeqw
xlat
divb
cmp
lret
inc
mulw
push
sbb
ret
aam
ljmp
outsb
and
mov
jmp
xchg
in
add
mov
inc
dec
push
pusha
dec
inc
push
mov
inc
aaa
xor
std
mov
lods
loop
mov
fildll
mov
pushf
dec
mov
mov
mov
cltd
cmovne
jns
pop
loop
or
movl
mov
mov
xchg
mov
push
mov
roll
call
mov
cs
add
bound
daa
loop
ljmp
popa
test
push
dec
xchg
stos
xchg
lock
push
roll
call
je
mov
pushf
mov
mov
ds
pop
adc
xchg
cmpsb
ljmp
fwait
pop
xor
add
jecxz
inc
outsl
inc
mov
xor
iret
int
rorl
inc
outsl
mov
inc
cwtl
mov
daa
xchg
stos
ljmp
xchg
mov
out
hlt
loopne
aaa
adcl
out
or
mov
pop
mov
sub
pusha
jg
mov
fwait
cmpb
ret
test
inc
mov
jle
jnp
push
cmpsb
push
mov
std
lret
xchg
aaa
fstpt
in
jl
sub
mov
pop
andb
push
fisubrl
mov
je
mov
cmpsb
xor
jbe
pop
movsb
lahf
mov
inc
jg
xchg
inc
or
push
std
jne
or
cmpsb
aaa
mov
aas
xor
xor
sub
push
inc
push
cmp
ja
jmp
xor
mov
imul
pop
gs
js
movsl
stc
jnp
movsl
insl
out
lea
fdivp
movsl
xchg
cltd
push
sbbl
mov
adc
sti
jle
cmpsl
aad
js
xchg
or
out
inc
loop
and
jl
xchg
shll
or
mov
adc
xor
xchg
or
xor
jl
xchg
shll
push
stos
pusha
out
pop
gs
pop
test
mov
push
xor
dec
inc
mov
ja
xchg
or
out
das
sbb
stos
cltd
mov
out
leave
in
xchg
scas
mov
pop
adcb
inc
xorb
into
or
xchg
pop
lahf
daa
push
pop
jne
xchg
pop
stos
pop
pop
gs
int
mov
pop
gs
sbb
xchg
stos
sahf
out
pop
gs
cmc
movsl
fs
out
mov
sahf
inc
fs
lahf
dec
out
pop
gs
mov
or
xchg
mov
gs
fstp
mov
pop
gs
outsl
jle
xchg
and
lea
fs
jle
out
sbb
fnstsw
push
or
xchg
fnstsw
xchg
pop
les
mov
mov
out
pop
ljmp
pop
gs
push
les
inc
fs
xor
xchg
stos
std
gs
sub
xchg
sub
lcall
in
lods
je
mov
enter
or
out
sbb
out
call
out
test
out
fcmovu
sub
stos
out
mov
inc
ret
lea
cwtl
insb
and
test
or
inc
fs
jle
out
sbb
fnstsw
xchg
pop
dec
push
int
fs
stos
out
sbb
pop
in
xchg
mov
clc
out
pop
dec
out
pop
gs
xchg
pop
gs
stos
in
push
mov
push
add
faddp
add
imul
cmp
or
cwtl
popa
xor
xor
push
or
cmp
mov
pop
gs
xlat
push
js
imull
shl
push
xlat
aam
sbb
adcl
sti
cmp
sbb
dec
js
xchg
xchg
movl
inc
into
sbb
adcl
sti
cmp
addr16
push
mov
inc
fs
inc
into
sbb
adcl
sti
cmp
xor
cmp
popf
mov
jae
inc
pop
gs
push
or
push
sti
sub
xchg
pop
ja
imull
shl
push
xlat
rcll
sbb
adcl
pusha
pop
out
adcl
int
out
mov
sub
mov
sub
loope
mov
stos
cwtl
inc
popf
xor
clc
xchg
stos
pop
inc
jo
es
mov
jl
push
les
inc
test
inc
popf
xor
clc
xchg
mov
mov
mov
push
xchg
pop
gs
stos
movsl
imul
jnp
xchg
inc
sbb
lret
insb
cltd
clc
push
adc
les
cltd
push
jge
sti
cmc
push
cld
xchg
pop
mov
inc
fs
push
ljmp
or
pop
int
xchg
pop
les
sbb
jl
pop
push
inc
out
cmc
movsl
jnp
xchg
stos
dec
mov
xor
push
int
gs
xchg
pop
jp
and
or
jp
imul
out
scas
fcmovbe
movsb
jnp
inc
stos
jnp
or
jge
sti
lcall
cld
loop
arpl
pop
and
ss
and
cmpsb
scas
mulb
clc
rcrl
push
cmpsb
hlt
cltd
add
dec
test
push
nop
je
sbb
cwtl
sub
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
pop
gs
sbb
out
fwait
jle
imul
xchg
pop
gs
pop
gs
int
gs
pop
gs
pop
gs
add
out
pop
gs
pop
gs
pop
gs
pop
gs
jns
addl
mul
add
test
ret
mov
popa
fs
addr16
sub
aad
lret
or
mov
fwait
aad
jb
xchg
mov
mov
pop
jge
out
sub
cmp
cld
movsb
push
clc
adc
xor
in
inc
cmp
repnz
or
and
aad
sbb
into
add
push
push
iret
inc
iret
sbb
scas
in
aas
aas
push
rorl
adc
add
mov
korb
cmp
xchg
xchg
sbbl
sub
arpl
push
dec
pop
les
std
lahf
aaa
ljmp
mov
cmp
inc
push
fisttps
stc
ja
pop
inc
icebp
rclb
jle
add
pop
cmpl
lahf
test
and
gs
lods
jge
ret
push
cs
inc
bound
cmp
jne
sti
test
arpl
push
xor
outsb
aad
push
mov
pop
sahf
mov
pushf
loopne
pop
out
adcb
mov
cmpsl
xchg
adc
fildl
sbb
test
pop
mov
stos
xor
sbb
in
insb
sbb
xchg
jge
in
lcall
fldcw
mov
test
add
enter
sub
outsb
ret
xor
mov
ljmp
sti
jno
or
aad
mov
hlt
jns
mov
incl
test
test
and
movsl
fsubrl
das
jne
enter
ret
lds
mov
ss
int3
or
sub
pusha
jp
mov
add
mov
jmp
sbb
into
loope
jb
ficoml
jl
mov
jo
ret
adc
loopne
cmp
loop
dec
xor
mov
shlb
push
push
adc
and
out
pop
or
ret
fildl
dec
sbb
cmpsb
cld
out
sti
fcmovu
dec
mov
test
mov
imul
in
pop
adc
leave
push
data16
push
lahf
rol
mov
push
mov
mov
fldcw
filds
out
mov
adc
mov
icebp
shl
insb
fisubrl
add
outsl
pushf
and
mov
int3
ja
repnz
pop
xchg
mov
testb
popa
push
lds
repnz
push
insb
xor
and
sbb
mov
mov
test
cmp
pop
jp
push
xor
xor
inc
add
dec
inc
es
rcrb
addr16
in
adc
stc
mov
xor
sub
jb
push
adc
dec
in
and
add
and
add
add
add
int3
add
cmp
add
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
int3
add
hlt
lret
add
cld
int3
add
push
int
add
int
add
add
adc
add
pusha
int
add
int
add
add
sub
add
jo
add
ss
add
add
inc
int
add
add
add
gs
xor
fs
insb
add
imul
insb
add
jbe
jo
xor
cs
insb
add
jbe
jb
cs
insb
add
je
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
add
add
add
add
add
add
int
add
add
add
int
add
add
add
int
add
add
add
add
je
outsb
jo
je
je
je
add
add
je
je
arpl
bound
arpl
add
fs
arpl
jae
inc
insb
insb
outsl
ja
fs
arpl
add
pop
gs
je
add
dec
gs
jo
inc
jne
data16
jb
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
add
add
add
and
add
add
or
test
add
add
sub
add
and
add
inc
add
add
add
add
add
add
add
add
incl
cltd
incw
dec
incl
cltd
int3
int3
add
dec
add
xor
add
fadd
add
int3
int3
add
xor
add
add
push
add
or
push
add
add
or
push
pop
push
add
or
or
push
or
add
add
or
or
push
or
pop
push
add
or
or
add
push
pop
push
or
add
add
or
or
add
add
push
or
pop
push
add
or
or
add
add
pop
push
or
add
add
or
or
add
add
add
add
push
or
pop
push
add
or
or
add
add
add
add
pop
push
or
add
add
or
or
add
add
add
or
add
or
pop
push
add
or
or
add
add
add
add
add
push
pop
push
or
add
add
add
add
or
or
add
add
add
add
add
or
or
or
pop
push
add
add
add
or
or
add
add
add
or
or
add
add
push
pop
push
or
add
add
or
or
add
add
add
or
add
push
pop
push
add
or
or
add
add
add
add
add
add
add
add
or
add
pop
push
or
or
add
add
add
add
add
add
add
add
add
or
or
or
or
or
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
or
or
or
add
add
add
or
or
add
add
add
add
or
add
or
or
add
or
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
or
or
add
or
add
add
add
add
or
or
add
add
add
add
add
add
or
or
add
or
add
add
or
or
add
add
add
add
or
or
add
or
add
or
add
add
add
or
add
or
or
or
add
or
add
add
or
add
jg
cld
aas
clc
pop
push
ud0
loopne
inc
add
incl
add
incb
add
add
aas
clc
add
pop
lock
pavgb
add
rolb
add
add
add
add
add
add
add
add
pop
lock
psubb
add
cld
add
aas
incb
add
add
incl
add
jmp
pop
push
ud0
clc
pop
cld
aas
jg
movsb
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
roll
add
push
cmpsb
test
adc
add
add
add
or
sbb
ljmp
loop
push
lds
out
out
scas
fxch
addl
xor
mov
xchg
call
and
or
vpcmov
or
xrelease
fnstenv
sbb
lds
xchg
test
movsb
xchg
das
inc
and
leave
cmpsb
ret
jmp
out
sub
pushf
clc
subb
inc
jle
jno
mov
cmp
dec
test
and
pop
or
mov
dec
pop
stos
loope
mov
mov
or
mov
dec
cli
mov
sti
imulb
stos
ljmp
add
fstps
xchg
dec
orl
bound
lods
aas
pop
sub
sub
dec
leave
dec
bound
repz
lds
cmp
addr16
std
cmp
or
jne
iret
add
mov
out
leave
addl
jnp
pop
sti
jns
lret
fs
pop
popa
int3
dec
nop
push
repz
inc
out
cmp
cmp
lods
mov
cmp
popa
cmp
lret
ljmp
dec
push
inc
sahf
and
and
test
xchg
loopne
pop
mov
mov
aad
or
fwait
mov
push
clc
cmp
iret
push
fcompl
dec
cld
xor
aad
lods
imul
sarl
stos
mov
rcll
negl
push
push
outsl
and
movsb
pop
lea
push
sbb
fwait
xor
mov
sahf
pop
add
out
gs
fsubrs
notb
and
cmpsl
hlt
pop
sbb
je
fsubs
shrb
and
pop
mov
sbb
call
in
roll
pop
rcr
and
or
mov
sub
add
ret
lods
sub
iret
mov
cmp
jp
test
xchg
mov
lcall
sub
popa
xchg
or
jbe
or
stos
sbb
lock
mov
jae
jb
mov
outsb
xchg
xor
popf
in
imul
push
cltd
into
cwtl
fiadds
mov
jge
mov
pop
xchg
stc
in
shll
sbb
sub
jo
push
insl
push
xor
out
xlat
pop
mov
cs
mov
jo
inc
sbbb
xchg
imul
mov
andl
test
and
xchg
adc
push
sbb
sbb
push
dec
test
push
sti
jbe
cmp
inc
cmp
or
test
push
nop
push
xchg
dec
sbb
mov
in
repz
ret
mov
roll
mov
or
sti
push
scas
ljmp
cld
jns
incl
arpl
add
adc
shrl
lcall
xor
montmul
cmpsb
inc
sti
inc
out
cmp
sbb
clc
mov
movl
add
jne
inc
push
inc
and
xchg
xor
dec
lods
adc
jbe
dec
mov
out
mov
or
xchg
lret
cmp
add
mov
sub
js
add
push
jnp,pt
pop
jg
pop
call
xor
push
add
roll
addr16
cltd
push
xchg
ficoml
cmp
fdiv
mov
jge
inc
push
icebp
xchg
sbb
cmp
mov
mov
std
pop
pusha
outsl
jg
push
arpl
scas
fwait
cmp
dec
pop
mov
pop
ss
sbb
out
lods
xchg
aad
hlt
fcomp
inc
mov
pop
mov
mov
out
xchg
xor
fmull
into
sbb
outsl
sbb
incb
adc
ljmp
adc
into
movsb
mov
lret
add
ret
pop
dec
adc
mov
ja
fs
jae
popf
orl
mov
add
pushf
sbbl
xlat
daa
cmp
sbb
jmp
addr16
pop
cmp
pop
aad
cli
sub
mov
xchg
add
imul
out
outsb
shlb
sub
jmp
adc
mov
push
ret
ds
lret
cmp
sbb
mov
fwait
adc
sub
mov
jb
pop
pop
test
sti
ds
movb
adc
cmc
in
xor
in
in
test
shlb
xchg
lods
push
sbb
lea
sarl
add
sub
std
insl
bound
xor
stc
inc
push
adc
orl
jnp
lock
pop
sbb
lcall
test
hlt
pop
rorl
xchg
lods
in
xor
sbb
inc
fcomi
into
mov
sbb
or
add
loope
shrl
cmp
dec
sub
inc
icebp
pop
or
repz
shrb
xor
pop
inc
mov
mov
xchg
test
push
aam
ljmp
fstl
or
popa
fnstcw
jp
cld
mov
inc
xor
sbb
cltd
scas
test
out
dec
add
xor
push
or
pusha
in
jg
mov
shlb
hlt
hlt
xor
dec
mov
inc
sub
lahf
add
arpl
daa
cwtl
loop
push
in
inc
test
push
jg
xor
shll
cmp
sub
cmp
cmc
jbe
sbb
dec
pop
or
mov
dec
xchg
es
sub
in
xor
lahf
pop
and
jp
mov
mov
mov
sarl
or
das
fcoms
push
or
cmp
mov
jmp
fsub
pop
popa
out
adc
movsb
stos
test
lea
add
cmp
bound
bound
gs
pop
cmpsl
jg
scas
fcomps
xlat
leave
mov
fiadds
push
popl
stos
scas
xchg
stc
adc
pushf
aaa
call
push
jns
push
push
jo
mov
je
cmpsb
loop
out
cmp
inc
sub
rcrb
mov
sbb
jmp
push
out
adc
iret
push
mov
testb
lea
loope
xor
xchg
cmp
sbb
mov
aas
ljmp
sub
or
push
add
js
add
mov
shlb
push
mov
push
dec
cmpsl
push
xchg
pop
sti
cmp
adc
xchg
jmp
test
jo
push
pop
mov
cli
jne
sbb
mov
ja
out
add
push
cmp
movsl
lods
bound
mov
push
fstpl
sbb
adc
or
pop
pop
cli
rcrl
andl
loop
push
pop
ja
in
notb
cmc
adc
insb
push
mov
xlat
xor
fidivrl
bound
fmulp
fs
mov
sub
es
sub
pop
icebp
mov
cmp
xor
lret
orb
call
adc
xor
mov
xor
out
arpl
pop
mov
sub
xchg
dec
je
lret
pop
xchg
sub
js
lret
jnp
lret
pusha
mov
jbe
dec
cmpsb
dec
fcomps
xor
sub
imul
cmp
sbb
pop
in
fs
fstp
pusha
movsl
push
sub
mov
imul
inc
dec
iret
repnz
lret
add
add
add
clc
xor
mov
pop
push
xor
sub
push
xchg
mov
pop
dec
pop
sbb
aas
and
addr16
es
ss
xchg
int3
inc
adc
xchg
fdivs
mov
call
add
mov
or
insb
outsl
mov
clc
dec
fldt
xchg
test
fistl
cld
push
push
jb
adc
mov
mov
das
mov
xchg
dec
fs
sbb
in
stos
rcl
lds
and
mov
cmp
and
int
fucomp
dec
lea
mov
imul
adc
fsubrl
sti
mov
mov
xor
cmc
pop
mov
xchg
add
nop
repz
mov
cmpl
lods
cmc
dec
pop
pop
les
cmp
cmpsl
xchg
dec
xchg
ret
adc
into
sub
lret
fdiv
lock
ja
lahf
mov
push
push
mov
aam
fdivp
jb
jb
mov
jb
clc
cmp
mov
pop
nop
xor
pop
cmp
cmp
gs
xchg
cmp
je
mov
adc
add
lcall
mov
fs
mov
inc
jp
inc
jle
test
jge
lret
xchg
fnsave
inc
cli
cwtl
mov
pop
adc
fdivs
stos
out
pop
push
mov
subl
js
lahf
xor
mov
call
scas
push
sbbl
add
mov
cmc
nop
cmpsl
push
ficompl
mov
inc
int3
adc
stc
in
dec
test
jmp
idivl
lods
jg
mov
push
mov
and
pop
inc
loop
jnp
out
call
es
mov
push
iret
xchg
std
jle
sub
int
add
outsl
and
mov
popa
jp
jno
and
mov
movsl
xor
cld
loop
cmpb
sbb
cltd
sbb
sbbl
and
aad
sub
push
push
jg
inc
dec
aad
aas
push
cmpsl
push
sbb
pop
sub
sbb
lret
inc
or
lahf
movaps
les
pop
rcrl
loop
and
pop
sbbb
and
and
fmuls
rclb
and
add
adc
jle
ds
jnp
popf
shr
sub
rorb
in
inc
enter
ljmp
icebp
mov
mov
nop
outsb
sub
gs
jae
mov
lahf
out
inc
mov
add
call
inc
push
test
mov
jg
aaa
xchg
add
arpl
push
jecxz
inc
enter
in
ja
es
inc
mov
insb
lods
inc
gs
popf
xchg
movsb
dec
out
das
jo
mov
cltd
cmp
dec
jo
sub
push
cmp
ror
cmp
mov
int3
dec
jbe
test
cmp
stc
add
adc
pop
xchg
testb
icebp
mov
pop
jl
gs
pushf
mov
sbb
mov
gs
sbb
xchg
out
ret
adc
inc
dec
rclb
mov
push
je
iret
xchg
sbb
xchg
cli
sub
mov
inc
pop
jp
sti
hlt
in
xor
pushf
stos
orb
in
int
ds
add
jno,pn
cld
ret
add
xchg
mov
xchg
jb
ficompl
push
dec
shll
pop
movsl
gs
mov
pop
aas
cmp
or
dec
roll
dec
ljmp
push
push
push
pop
pminsw
into
push
cmp
push
inc
cmp
add
inc
mov
aad
test
dec
and
push
call
mov
xchg
insl
in
jne
dec
pop
mov
sub
popf
inc
push
xor
out
sub
cmpl
iret
sbb
and
cmp
dec
pop
fwait
and
je
mov
gs
or
adc
cli
cmpsl
insb
lods
mov
push
out
push
sbb
sub
pop
mov
jo
cmp
xor
js
bswap
mov
aad
scas
or
loop
add
xor
add
aam
jecxz
out
jmp
and
jno
dec
mov
xor
shll
ljmp
jp
clc
mov
cld
aas
fisubrl
mov
or
clc
test
ret
aam
in
shll
lds
lds
pop
mov
scas
dec
movsbl
test
rep
icebp
into
pop
sbb
xsavec
mov
ret
jg
fbld
adc
cmp
in
xor
es
popf
int3
addb
pop
sub
push
mov
inc
test
lods
jnp
dec
leave
mov
dec
xchg
lods
mov
xchg
roll
jl
push
mov
cmpsl
stc
pop
mov
js
cmp
clc
mov
lds
mov
sar
clc
jmp
mov
aas
push
fimull
cmpsb
mov
imulb
and
insb
sarl
int3
or
and
into
and
int
imul
ret
cld
pop
cmp
aam
xor
add
lods
push
and
mov
test
pop
jbe
xor
imul
leavew
mov
jo
cmp
in
mov
sbb
cmp
dec
aam
popf
fsts
pushf
cld
testb
sub
pop
pop
gs
mov
lds
jg
loopne
cmpsl
jmp
mov
rcll
cmp
int3
or
add
cmpsl
stc
cmpsl
push
dec
lret
pop
xor
fcoms
add
int
dec
jl
mov
jl
cmp
out
mov
fs
mov
pusha
pop
inc
push
addr16
lock
mov
ret
pop
and
cmp
pop
jg
repz
sarl
mov
or
das
arpl
and
subb
loope
call
mov
adc
push
or
js
jecxz
xchg
sub
or
rcll
sahf
lret
jecxz
mov
mov
pushf
push
enter
or
lret
cltd
rorl
sbb
clc
call
xor
jg
aaa
pop
pop
js
add
and
adc
xor
mov
fwait
adc
fistl
xor
sbb
adc
mov
repnz
jge
push
mov
or
cmpsl
lret
outsl
and
neg
add
dec
out
mov
mov
ljmp
mov
ljmp
sbb
int3
jge
outsb
xor
mov
flds
je
sub
xchg
fcoms
lods
add
fwait
cwtl
sbb
pop
aas
sahf
cmp
push
sbb
fwait
stos
movsb
push
cmp
inc
fmul
out
insl
stos
add
pusha
xchg
inc
pushf
mov
jne
call
or
xor
insl
mov
fiadds
inc
jmp
push
mov
push
inc
pop
stc
and
xchg
lods
cld
sub
and
jmp
sbb
ja
inc
pop
test
xchg
popa
xor
pop
leave
push
out
mov
in
faddl
das
mov
scas
js
inc
sbb
lods
xor
pop
cmpsb
fcompl
mov
push
call
idivl
cmpsl
mov
fwait
pop
out
and
fsubs
mov
das
out
mov
mov
repnz
rcrb
sub
adc
testb
imul
out
add
idivl
popf
shlb
and
jle
addb
mov
mov
add
jl
iret
fwait
sub
leave
sti
shrl
adc
or
push
cmp
cmc
scas
test
sbb
mov
mov
push
xchg
enter
mov
adc
dec
mov
xor
pushf
push
mov
jno
loopne
or
in
sub
xor
movsl
jle
call
repz
in
out
push
mov
push
xor
adc
xchg
adc
push
mov
aam
call
int
lds
xor
xchg
sbb
fidivrs
xchg
push
orb
pop
in
pop
inc
iret
cmp
mov
lcall
sub
ret
cmpl
lods
rolb
lods
jmp
sbb
popa
call
sub
inc
push
dec
jecxz
out
pop
jp
out
jmp
pushf
push
testb
pop
dec
loopne
movsl
xchg
fs
lea
mov
xorb
test
mov
xor
addr16
sbb
enter
mov
fucomi
testb
popf
scas
xor
jg
xor
rcrb
or
xor
movsl
cld
inc
cmpsb
mov
jle
lea
aad
mov
movl
imul
lods
dec
jg
adc
cmp
xchg
les
ret
test
cmp
lret
aad
lea
or
in
or
pusha
clc
ret
insl
cmp
pusha
pushl
outsl
xchg
pop
fmuls
stos
ja
cmp
xchg
fidivs
dec
cli
jb
or
sub
in
sub
incb
jns
insl
dec
cwtl
mov
jmp
pop
push
mov
test
fwait
or
jo
xchg
jge
pop
adc
insb
mov
mov
mov
addr16
inc
xor
xchg
movsl
cwtl
lds
or
aad
repz
sarl
iretw
pop
ds
es
fdivl
cmpsb
ja
lods
lahf
pushf
xor
pushf
cli
and
pop
cwtl
fdivrl
aas
cmp
out
ret
test
repz
loopne
cmc
and
push
movsl
xor
flds
sub
aam
and
push
push
fildl
inc
jae
push
notb
or
das
in
orl
pop
add
fwait
push
mov
add
pop
stos
lea
dec
pop
pop
sub
xchg
flds
js
dec
cmp
mov
negl
dec
data16
mov
pop
sbb
inc
insb
fucom
jb
call
call
sbb
jns
and
test
jae
cmp
xlat
fisubl
sbb
xchg
fwait
and
dec
lret
bound
mov
imul
repnz
movsl
into
push
popa
cmp
and
cli
sub
mov
enter
rcrl
je
ljmp
jmp
mov
prefetch
or
mov
cmc
cs
rcll
test
repnz
mov
push
rorl
movsl
push
insb
dec
repnz
sub
data16
xchg
xchg
test
test
jle
movsb
dec
iret
mov
test
movsbl
pop
repnz
add
inc
pop
dec
fldt
jg
xor
or
ss
sub
xchg
test
cwtl
inc
adc
dec
cmpsl
shr
push
arpl
mov
inc
lret
add
pop
jno
cld
daa
xchg
dec
sahf
jbe
gs
roll
or
or
inc
inc
jecxz
add
jle
aam
outsl
xchg
es
rorl
repz
aad
inc
into
mov
adc
sar
shr
jns
jbe
add
sbbb
cmp
dec
ljmp
pop
nop
outsb
mov
rcrl
pop
scas
loopne
inc
mov
sub
adc
add
sub
pop
movsl
mov
js
mov
mov
jo
inc
mov
cltd
jns
dec
xchg
xor
pop
jb
aad
into
cmp
mov
cmp
cmp
fsubrl
pop
movb
test
push
mov
sbb
mov
inc
pop
jno
mov
jne
mov
arpl
jnp
push
sbb
dec
xchg
add
aam
mov
aaa
xchg
fstpl
call
sbb
xchg
pop
pop
sub
or
cmpsl
idivl
out
lock
imul
jmp
lds
push
xor
loopne
fwait
scas
int3
subl
nop
int3
fisubrs
and
scas
andb
pop
out
ja
jnp
fadds
test
jmp
xchg
fcmovnbe
outsb
add
cmp
mov
in
mov
aaa
dec
push
push
test
and
aaa
je
into
out
dec
mov
fsubrl
out
sbb
cmp
sbb
xchg
lahf
fsubl
ret
dec
aas
stos
xchg
push
leave
clc
hlt
cmp
cmpsb
std
rorl
or
shr
pushf
pusha
sub
jl
inc
xchg
mov
push
sbb
repz
mov
mov
testb
cli
jmp
icebp
pop
push
das
pop
push
and
jo
adc
or
les
lea
jle
adc
leave
cwtl
je
or
jae
in
and
cmp
mov
in
in
jo
cs
jecxz
cmp
add
cmp
mov
sub
mov
lock
cli
pop
pop
out
mov
xor
and
xor
add
pushf
in
push
dec
push
lcall
sbb
adc
in
cli
aaa
jge
iret
movsb
movl
pop
xor
scas
dec
decl
add
xor
lock
loopne
data16
mov
xchg
pop
shr
hlt
mov
push
arpl
push
push
loopne
rol
cli
fcoml
mov
add
add
xlat
nop
jl
lods
or
xorl
jp
mov
in
unpckhps
shlb
xchg
xchg
jnp
lret
stc
sub
or
xlat
mov
pop
lret
loope
mov
mov
mov
mov
pusha
mov
mov
or
adc
pop
mov
or
jp
cld
fdivrs
and
lea
cmpb
dec
jl
out
les
fwait
cmp
xchg
shrb
pop
xchg
sbb
pop
addb
or
lahf
fs
les
push
add
lods
cmpsb
adc
xchg
bound
cmp
and
movsb
dec
stc
sub
scas
andnps
dec
sub
or
pop
inc
aas
lds
movsl
jo
data16
iret
jg
ds
lds
ret
add
xchg
imull
and
xchg
add
cmp
and
stos
sbb
test
mov
rorb
mov
std
int
push
sub
jnp
cltd
rol
stos
call
mov
data16
ret
stc
mov
in
xchg
mov
mov
pop
mov
adc
imul
and
sub
push
sbb
int3
xor
iret
push
add
jne
cwtl
jge
movl
dec
aad
dec
dec
dec
and
fstpl
or
xor
jae
popa
push
jmp
xor
stos
addl
cld
gs
movb
mov
or
cmp
out
mov
cwtl
and
dec
cmp
js
mov
inc
in
cmp
movsl
push
sti
iret
adc
mov
push
dec
pop
mov
in
das
data16
mov
lods
cmpsb
aad
test
pop
xchg
jmp
inc
in
sahf
pushf
bnd
test
rol
lds
and
mov
dec
or
sbbl
adc
adc
cs
test
in
sbb
stos
pusha
xlat
or
push
sub
or
push
jb
fbld
xchg
add
stos
jl
lods
cmpsl
mov
lret
cmpsl
dec
sub
shrl
jns
jo
xchg
xchg
sbb
imul
movl
and
inc
mov
shll
daa
mov
gs
std
pop
xchg
inc
push
imul
or
imul
clc
lcall
std
repnz
lcall
xor
shl
or
addl
cwtl
dec
int3
cmp
xor
sbb
xor
pop
fwait
ror
jns
push
add
testl
cmp
fneni(8087
xor
push
mov
mov
pop
mov
cmpsl
adc
aas
arpl
shl
lods
addr16
fs
lea
adc
nop
add
mov
in
jp
subb
mov
nop
in
xor
sub
in
xchg
and
jns
fstpt
or
sbb
aam
inc
hlt
cmp
test
lods
adc
jp
or
xchg
fsts
xchg
pushf
mov
pop
lcall
es
and
enter
cmc
pop
or
push
and
xchg
sub
push
aad
pop
push
jmp
sbb
insb
xorb
imul
and
lods
insl
or
outsb
fstl
sub
jno
pusha
das
xor
scas
cmp
out
pop
add
iret
sahf
pop
and
xchg
leave
push
jnp
dec
and
cmp
inc
sbb
inc
leave
adc
sub
je
gs
mov
int
out
je
shrl
mov
fcmovbe
std
loopne
fnsave
stos
cmp
sbb
sahf
and
stos
int3
inc
je
mov
push
data16
mov
int
adc
or
xor
push
nop
mov
mov
movsb
mov
xor
push
enter
insb
jp
mov
in
cwtl
xchg
ss
and
ds
inc
clc
cmc
push
stc
movsb
jnp
shl
xor
js
and
adc
fs
imul
lcall
adcb
pop
lahf
add
mov
fwait
lock
and
sub
arpl
xorb
pusha
in
jecxz
or
shll
ret
jmp
dec
daa
xchg
adc
xlat
push
cltd
add
rorb
popf
sbb
loope
cltd
in
dec
xchg
jb
inc
mov
dec
jge
xchg
outsb
xlat
xchg
cmp
inc
add
cmp
loop
or
ss
jb
cmp
mov
aaa
out
and
std
cs
popf
imul
and
out
out
add
sahf
jnp
cld
push
sahf
rcll
fnstenv
pop
cld
and
sub
mov
mov
je
fwait
lods
dec
ljmp
inc
xchg
cmpb
roll
das
roll
mov
pushf
sarb
test
das
sbb
mov
lret
test
outsl
clc
iret
pop
stos
xor
test
push
jb
cwtl
jo
sub
hlt
ljmp
sub
jge
mov
adc
mov
pop
lcall
xchg
push
push
daa
push
jne
pop
mov
add
in
push
sub
fnsave
adc
mov
pushf
arpl
adc
push
xchg
cmp
cmpsl
inc
push
mov
and
test
pop
aam
jle
push
enter
enter
sub
popa
jmp
jl
stc
adc
outsl
add
out
ret
pop
out
inc
icebp
sbb
sbb
rol
es
fwait
stos
loopne
ret
je
jbe
jge
fsubl
cld
fstpl
sarl
movsl
adc
sti
jae
cmp
lds
or
inc
aad
scas
gs
add
jl
lock
dec
inc
hlt
mov
nop
inc
mov
ja
pop
stos
loop
xchg
in
dec
mov
and
scas
jnp
add
cwtl
sbbb
pop
test
lcall
sbb
loop
mov
enter
mov
or
aaa
add
or
bound
sub
in
std
in
inc
out
sbb
data16
jp
pop
fs
movsl
test
fstps
in
movsl
test
notl
imulb
fdivs
int
push
shl
add
bound
in
add
push
jne
push
dec
sub
mov
pushf
add
pop
daa
imul
rolb
in
sbb
fstpt
xchg
inc
and
xchg
sbb
mov
jno
in
sub
xchg
ljmp
aaa
sbb
cld
and
adc
cmpsb
fldl
dec
call
cmp
iret
dec
xor
jnp
mov
inc
fldenv
mov
sub
into
mov
sarl
jne
hlt
cld
mov
mov
decl
pop
mov
fcoms
mov
ret
push
pusha
mov
sub
adc
call
and
cld
mov
push
inc
ja
fstl
jne
outsl
movsb
popa
loop
popa
sbb
inc
and
or
cmp
push
or
fidivrl
inc
dec
sbb
mov
mov
pushf
xchg
mov
ss
setge
das
cmp
std
mov
push
push
loop
push
test
test
stc
or
inc
aam
sahf
shll
inc
sbb
pop
push
jg
or
and
out
lret
popa
xor
movsb
cmc
lods
adc
adc
sub
push
loop
shrb
fdivrp
mov
mov
or
push
inc
xor
sub
xchg
dec
cmp
push
jnp
cmp
jle
fidivrl
push
lahf
icebp
xchg
rol
mov
lods
mov
shll
jp
jg
adc
hlt
jne
adc
adc
push
push
pop
xor
dec
lods
dec
shrb
push
cld
add
dec
push
xchg
aad
cld
cmc
mov
dec
mov
cmp
add
mov
dec
pop
test
into
xor
mov
mov
test
inc
inc
mov
stos
ret
push
cmc
inc
sub
mov
add
and
sbb
cmc
and
and
sub
adc
or
testb
mov
pusha
cmovle
mov
shlb
push
lock
cmp
sahf
clc
dec
test
fs
jo
xchg
das
dec
jae
cmp
notl
jg
mov
lea
enter
dec
mov
cld
inc
lea
cmpsb
lahf
add
les
push
and
imul
lret
jnp
or
cmpsb
push
cwtl
and
sarl
shl
xchg
push
cmpsl
ds
sbbl
jl
loop
mov
dec
push
sar
jae
cmp
lock
clc
sbb
pusha
or
clc
jnp
lahf
popa
out
add
std
call
rcrb
negb
jp
xchg
hlt
mov
ljmp
out
int3
xchg
mov
push
lock
adc
mov
les
cmp
out
cs
movsb
adc
sarb
cs
test
dec
mov
mov
mov
dec
out
stos
add
inc
push
fucomip
pushf
scas
insb
add
popa
pop
add
bnd
imul
inc
mov
imull
daa
sub
jae
and
pop
rorb
mov
add
push
testb
movsb
fidivrs
aaa
rcrb
bound
mov
push
add
ljmp
and
addb
push
jno
sub
scas
push
push
inc
pop
out
jb
lret
jmp
clc
test
xor
cld
lret
repz
push
or
pop
xor
push
test
dec
mov
mov
inc
jne
aad
and
xor
add
inc
sub
cli
sahf
inc
loope
cmp
cs
adc
ss
cmp
dec
adc
mov
cli
xor
push
fmull
pop
pop
fstpt
js
sti
sti
outsb
lcall
add
jge
dec
xor
lcall
jecxz
loope
push
lret
negl
adc
fistpl
inc
or
adc
stc
aaa
jb
push
bound
pop
inc
push
push
div
pop
inc
cmp
push
cmp
sahf
shrb
xchg
adc
loop
setle
fimuls
out
push
push
test
adc
cmp
imul
push
cltd
clc
stc
outsl
std
push
jle
mov
fildl
push
cmc
sbb
dec
add
or
out
pop
xlat
adc
add
clc
xchg
scas
cmpsb
adc
cmp
pop
cmc
add
fucom
mov
mov
mov
mov
inc
loop
push
push
cmp
enter
pop
adc
clc
xchg
adc
xchg
fcoms
adc
nopl
adcb
sub
out
out
ljmp
add
cmp
mov
ret
xchg
xor
js
in
xchg
scas
repnz
nop
in
leave
scas
jb
mov
nop
loopne
scas
or
add
and
inc
sbb
ljmp
xor
mov
popa
fcom
sub
std
xchg
pop
sub
sarl
notl
pop
aam
mov
pop
jl
gs
test
sar
mov
inc
test
jmp
sub
leave
cltd
sub
inc
or
leave
addr16
sub
push
xor
repnz
dec
lea
mov
push
cmp
pop
aad
push
pminsw
push
les
int3
mov
push
dec
mov
fs
or
adc
call
xchg
idivl
pop
stc
push
test
lods
pop
dec
xchg
pusha
pushf
push
xchg
adc
lcall
push
rcl
and
ficoms
cmp
pop
mov
xor
lock
mov
jns
cmp
or
test
mov
mov
mov
outsb
repnz
push
dec
insb
xorl
in
sarb
sbb
pop
mov
pop
shrb
shrl
sbb
lcall
inc
jg
xor
sahf
loopne
or
insl
adc
mov
mov
and
cmp
daa
out
fmull
inc
inc
adc
pop
push
mov
clc
xchg
add
ljmp
repz
js
xchg
jb
and
inc
enter
lods
or
mov
add
inc
push
mov
mov
sar
pusha
push
or
test
sbb
fisubrl
pushf
loop
scas
jecxz,pn
xor
cmp
out
pusha
sti
inc
gs
xchg
andb
pop
rorl
jg
sbb
jno
and
int
or
andl
sub
pop
xchg
jge
jl
or
int
xchg
inc
pop
pushf
jnp
cmp
fimull
and
fdivrs
inc
xchg
or
xchg
stos
jecxz
and
aaa
mov
andb
lret
mov
movsl
faddp
fwait
push
cmp
mov
sbb
cs
pop
xchg
pop
repz
repz
cwtl
imul
scas
add
out
shll
inc
jp
into
jmp
fnstsw
push
loope
mov
sbb
xor
loop
je
inc
mov
bound
pushf
mov
push
sbb
adc
xlat
ficoms
dec
inc
jmp
cltd
cmp
jae
js
in
fldl
int3
scas
mov
pop
fdivr
test
mov
cmp
mov
mov
mov
adc
mov
adc
jmp
jp
aad
insb
mov
jo
jne
clc
inc
lret
lds
ss
std
into
sbb
mov
mov
mov
pop
adc
and
sub
jmp
adc
jns
jge
mov
xchg
and
adcb
add
fmulp
push
jg
out
mov
idivb
push
dec
xchg
dec
and
add
add
mov
shrl
xchg
ss
adc
sub
in
repnz
mov
lds
cs
sbb
mov
dec
and
pop
xchg
lods
mov
sub
in
cmc
and
sahf
les
lods
je
movsl
rolb
mov
hlt
dec
aas
insl
fwait
rolb
scas
xchg
add
jno
ret
js
mov
jmp
ljmp
out
sub
adc
pushf
jmp
scas
cltd
cld
jae
mov
loop
shr
inc
lds
mov
jbe
call
shll
mov
cmp
xor
mov
push
cmpsl
mov
pop
dec
test
test
sbb
push
push
sbb
rcr
xor
cmp
out
ljmp
cld
loopne
pushf
pop
mov
push
imul
fwait
dec
outsl
sbb
push
adc
fcmovnbe
jg
dec
stos
push
mov
test
nop
jae
ss
jp
shlb
jg
out
mov
clc
ds
jg
jg
cli
out
push
js
inc
insb
mov
leave
jne
adc
mov
xor
xor
dec
sbb
dec
push
jae
mov
xorl
sbb
push
sub
mov
xor
insl
xlat
fcoms
outsl
fstpl
in
jp
xchg
jl
and
cld
or
or
je
lret
sahf
dec
or
scas
adc
push
pslld
mov
filds
dec
jecxz
jecxz
cmp
push
lock
push
xchg
pop
das
jp
push
sbb
lods
dec
cltd
dec
push
or
xor
test
movsb
adc
mov
imul
push
pop
adc
inc
pop
xlat
pusha
imul
cmp
jmp
lds
push
mov
mov
dec
nop
dec
cmpsl
fsubrl
xor
xor
in
add
ret
or
mov
adc
push
or
mov
addb
stos
mov
fsubrs
push
add
sbb
push
jb
and
inc
testb
pop
aas
dec
shrb
jg
add
inc
test
mov
xchg
cmp
repnz
out
or
or
pop
fsub
outsl
inc
fndisi(8087
cmp
fstpl
xor
adc
mov
or
sbb
stos
dec
shl
test
aad
mov
cs
lret
mov
pop
xor
mov
or
outsb
mov
stos
test
mov
icebp
jecxz
adcb
test
pop
lcall
adc
movsb
push
in
scas
insl
mov
fistpll
fdivrs
loop
add
adc
mov
js
inc
and
sar
dec
mov
ret
loope
rcrl
mov
mov
clc
popa
pop
sbb
cmp
sbb
jl
es
ret
push
cmp
xor
lret
cmp
shrl
addb
insb
pushf
filds
addl
cs
sub
jp
or
xor
decb
mov
lret
mov
fidivl
sub
ret
cmc
push
mov
xchg
cmpsb
fmuls
jmp
pop
aaa
inc
dec
and
push
sti
pop
add
dec
cs
mov
and
gs
push
ds
test
sub
or
mov
cli
lahf
add
lret
int
pop
sahf
leave
cmp
jnp
shrb
inc
dec
jge
fists
sbb
jle
cmp
xchg
mov
ficoml
dec
mov
xchg
push
pop
push
push
dec
cmp
inc
arpl
nop
inc
mov
shll
subl
adc
or
dec
xchg
push
insb
mov
out
fildll
sbb
ss
and
ret
stos
mov
jb
add
arpl
cmp
popl
in
mov
or
cmp
fxam
jle
cli
mov
dec
ret
mov
sub
xchg
stos
adc
xor
test
sti
mov
jle
lock
jbe
fs
stos
inc
jbe
mov
aas
iret
pop
cmp
ficomps
mov
sar
and
xchg
jg
clc
xor
call
popf
jge
popf
mov
mov
or
rcl
cmpl
or
mov
inc
mov
xchg
add
pusha
mov
insb
and
mov
cmp
cmp
movsl
pop
outsb
cld
pop
add
scas
cmp
in
cli
sbb
xor
sbb
out
es
or
loop
push
cmpsl
and
andb
iret
dec
ljmp
mov
aas
roll
loop
pushf
sti
jecxz
cltd
jbe
loopne
cmpsl
or
inc
pusha
add
daa
mov
sub
cmp
nop
enter
xchg
or
cld
dec
cmp
dec
xchg
lock
add
rol
ds
out
cmp
xlat
pop
cmpsl
in
add
cmp
inc
pusha
adc
sub
xchg
xor
popf
sub
sub
rcll
mov
cmpsb
xchg
push
leave
aas
leave
sbb
jne
sbb
addr16
jno
jae
aaa
jno
outsl
ret
push
sub
mov
ja
movsb
adc
lahf
add
cmp
das
sub
int
ud1
jno
mov
lret
scas
fidivs
clc
or
mov
mov
cmp
out
or
xchg
dec
test
push
cmp
aaa
in
push
aaa
fdivl
and
inc
mov
faddl
mov
sub
mov
xchg
cmp
rorb
sbb
cmpsb
mov
movsl
dec
and
sbb
and
into
xchg
and
ficoml
mov
js
imul
or
mov
outsl
mov
sbb
jmp
or
out
mov
ds
pop
push
sbb
fildl
inc
inc
cmpsl
outsb
out
push
outsl
cmp
cvttps2pi
cmp
push
push
fmuls
mov
xchg
popf
mov
out
test
ljmp
movsl
inc
jmp
mov
sub
out
enter
lret
subb
mov
mov
aaa
fwait
cmp
push
rorb
fs
cmp
cmp
xchg
out
mov
pop
daa
add
cmp
cmp
or
cmp
mov
incb
dec
push
sbb
add
ja
in
pop
fcompl
xchg
loopne
lea
aaa
repz
cmc
push
add
int3
ljmp
sub
jno
mov
xchg
sub
mov
out
and
jnp
mov
xchg
xchg
jmp
sbb
xchg
lods
das
stc
jp
dec
pop
mov
scas
adc
dec
cmp
in
push
pushf
mov
sub
fwait
cmp
filds
notl
icebp
jge
out
mov
pusha
mov
dec
push
lods
sahf
sub
js
mov
pushf
aad
imul
data16
enter
repz
xor
int
mov
xlat
test
lret
sbbb
fwait
mov
stos
add
push
in
xchg
and
sbb
or
jno
xor
es
in
aas
pop
in
fisubs
dec
out
lds
mov
sub
cwtl
test
or
jecxz
pop
fadd
mov
push
xor
mov
add
cmp
and
inc
xchg
inc
push
xchg
dec
cld
adcb
test
mov
int3
ljmpw
push
add
xchg
clc
sub
inc
mov
cmp
cld
les
out
mov
sub
sub
fs
push
cwtl
lcall
adc
or
outsl
mov
cmp
xchg
lahf
out
addr16
flds
lea
leave
scas
mov
ret
sbb
push
xchg
lcall
or
jp
pop
mov
rol
andl
pop
das
xor
jl
adc
sub
les
xor
jnp
xchg
sbb
or
insb
lret
adc
in
xchg
fcoms
jl
dec
pop
fstl
fstl
ret
js
sbb
inc
xchg
or
testl
sbb
jae
jnp
sbb
push
stc
popf
adc
inc
cs
int
mov
fwait
mov
mov
mov
mov
fprem
mov
in
jno
pop
int3
rorl
lock
leave
and
lock
cmp
stos
xchg
in
imul
mov
outsl
aam
mov
add
push
sbb
mov
aad
ret
cs
and
insb
dec
fldcw
fld
push
popf
das
mov
xchg
xchg
cmp
sub
in
jmp
idivb
int
lcall
mov
fcmovne
enter
cli
in
jecxz
dec
bound
cmpsl
enter
movsl
ficomps
fucomip
into
lea
jnp
js
je
xchg
ss
rcrl
mov
ja
inc
daa
xor
mov
mov
lret
fprem
aaa
rcl
jbe
icebp
pop
push
lods
jne
cmpsl
mov
pop
fdivs
imul
movsb
add
or
leave
sub
jnp
dec
in
ja
jp
mov
and
js
lahf
inc
jae
cld
mov
jg
scas
jo
aas
out
or
les
arpl
sbbl
ret
jl
aaa
les
adc
fnsave
es
pop
push
or
dec
stos
mov
je
pop
mov
divl
xchg
repnz
pop
pop
les
rcr
dec
pop
hlt
ds
addl
inc
loop
out
rorb
shr
jb
ret
cltd
clc
mov
or
add
mov
mov
cltd
jnp
sub
mov
xchg
jmp
mov
fnsave
fldenv
xchg
mov
std
repz
orl
or
adc
aam
push
aad
xor
add
dec
stos
and
or
jecxz
mov
fdivp
in
lret
ss
loop
mov
aaa
cmpsl
das
mov
addb
negb
je
or
cmpsb
jp
aad
mov
addr16
inc
leave
mov
jb
pusha
mov
scas
inc
outsb
clc
mov
mov
and
addr16
xchg
jbe
mov
sub
cmp
ror
into
outsl
cs
mov
cmpsl
test
int3
cmp
mov
data16
add
sti
cwtl
dec
lret
sbb
xor
imul
push
sti
ljmp
shll
stos
movb
sub
mov
push
gs
subl
pushf
pop
subb
fstl
inc
sub
xchg
addr16
data16
lock
pushf
mov
int
lret
jp
pop
xchg
push
push
imul
shll
nop
adc
adc
loopw
jbe
xlat
mov
xchg
mov
xor
xor
js
mov
push
xchg
dec
add
mov
andl
or
mov
mov
lcall
pop
pushl
es
sub
pop
call
dec
aad
and
xchg
call
cld
lahf
std
xchg
bound
dec
pushf
mov
or
inc
scas
mov
mov
not
sahf
call
clc
push
out
add
jl
xor
cmp
test
mov
leave
cld
hlt
mov
inc
imul
and
adc
and
jp
cmpsb
or
lods
fdivl
cmp
xchg
in
and
pop
cmp
mov
adc
pop
imul
dec
pop
fucomi
push
xor
dec
stos
imul
sbb
movsl
sbb
cmc
test
jbe
and
dec
or
imull
arpl
sub
sti
movsb
cmpsb
push
ret
adc
cli
fstpl
adc
stc
push
and
push
adc
xor
jns
dec
dec
mov
in
mov
dec
sub
xchg
mov
iret
add
inc
cmpsb
xchg
fildll
jle
decb
mov
or
and
cwtl
ljmp
pop
pop
dec
in
cmp
fs
jg
ds
in
shll
push
push
dec
mov
pop
or
mov
iret
push
push
mov
das
js
scas
dec
mov
test
ret
jo
dec
add
add
adc
in
mov
inc
pop
xchg
sarb
and
bound
and
jmp
inc
cmp
sbb
dec
test
out
arpl
lahf
inc
outsl
mov
daa
lea
repnz
mov
je
and
aaa
mov
adc
ds
jg
pop
dec
shrd
scas
dec
aam
scas
xchg
or
mov
mov
rclb
stos
cltd
jne
jb
push
loopne
mov
xor
and
pop
flds
xor
stos
sub
add
cmp
jae
sub
data16
jle
imul
test
add
int3
aad
mov
push
mov
pop
scas
mov
popa
push
arpl
aam
pop
loopne
movsb
push
lret
dec
inc
and
xchg
jbe
divl
inc
movsb
into
stc
out
aad
jg
xchg
out
aas
cs
mov
orl
popf
pop
jae
push
push
cli
sbb
jne
outsb
cld
testl
cmp
mov
scas
sub
inc
push
dec
out
pop
push
or
sub
push
add
jmp
shlb
xorb
subb
repnz
out
xchg
xor
das
cmpsl
xlat
dec
scas
or
cs
push
inc
out
sbb
dec
lock
and
stos
mov
sbb
out
mov
sub
icebp
loope
mov
fmuls
push
les
and
stc
xor
movl
gs
jnp
jns
pushf
pop
fimuls
fs
mov
cmc
mov
std
outsl
xchg
adc
test
les
xor
idivb
push
es
fimull
arpl
add
lods
fnstsw
fdivs
popa
sub
cwtl
push
shll
into
mov
repz
sub
mov
popf
or
dec
lea
stos
push
mov
test
or
adc
xlat
push
or
inc
inc
stos
clc
jg
sbb
pusha
out
mov
push
shlb
xchg
xchg
sti
mov
and
in
push
mov
or
jbe
out
in
in
pop
dec
out
add
std
jl
push
cmp
sub
inc
push
in
or
cmp
call
jno
mov
ljmp
adc
jbe
and
insl
mov
jmp
and
add
outsl
push
adc
jnp
lods
movsl
push
loope
lods
xchg
add
ljmp
xchg
add
imul
xor
fisttps
inc
lahf
cltd
dec
daa
fildll
sub
mov
cmc
jge
pop
or
mov
pop
stc
lcall
pop
lock
pop
sbb
mov
add
cs
aad
add
xchg
out
push
sbb
adc
pop
test
andl
adc
mov
fldl2t
scas
dec
xor
mov
pop
push
push
movsb
ss
or
jg
in
sub
xor
mov
nop
leave
jle
dec
pop
push
cmp
cmp
popf
jge
mov
loop
mov
sbb
push
das
jns
xchg
cld
inc
adc
out
fs
adc
or
pop
ds
popf
loop
jmp
adc
and
fucom
out
adc
nop
push
sub
xor
mov
mov
outsl
sahf
cmpb
xor
inc
push
and
dec
fdivs
or
popa
fwait
inc
cmp
lret
sub
out
pop
cmc
cmp
enter
ljmp
add
mov
sub
jp
push
jne
jp
jle
icebp
lods
mov
sbb
imul
ret
int
xchg
inc
mov
cmp
and
xor
sti
pop
imul
jb
push
cmp
addb
addl
cmpsb
jo
ret
mov
pop
cmc
jge
in
inc
addr16
jb
fwait
add
je
sti
or
push
and
add
nop
pop
fmuls
int
add
addr16
and
fs
pop
push
push
outsl
sub
adc
cwtl
rcr
ds
fnsave
or
mov
xlat
bound
arpl
dec
xor
pop
inc
out
jae
push
dec
push
aad
xlat
loop
cmc
shr
into
std
jae
jmp
inc
test
nop
lcall
xchg
sti
lods
lods
enter
test
ds
rcrl
clc
daa
push
mov
cmpsl
inc
lea
and
cmpsl
repnz
sbb
cmpsb
movsl
mov
dec
xor
int3
fisubl
push
jg
cmp
add
cmp
mov
jae
inc
je
xchg
push
icebp
jp
pusha
xlat
scas
inc
sub
jp
mov
fistps
pop
xor
xchg
in
lock
scas
or
in
jbe
aas
test
mov
lret
lcall
jge,pt
rclb
push
jle
cwtl
sub
fsubrs
mov
xor
loopne
or
and
dec
pop
inc
jbe
add
jmp
pop
mov
int
fwait
inc
mov
add
mov
ds
xlat
imul
sbb
add
outsb
loop
call
jae
lret
mov
jg
hlt
outsb
imul
stc
sbb
and
sbb
stos
mov
xor
mov
mov
orl
stos
fists
mov
arpl
dec
adc
sub
mov
sub
sbb
xor
and
push
push
push
cmpsl
les
test
les
xchg
sub
push
sub
mov
adc
mov
xchg
xlat
ror
push
punpckhdq
xchg
dec
outsl
test
mov
mov
push
imul
cmp
cmp
xor
or
cmp
fwait
jo
into
push
inc
add
scas
lea
fwait
mov
movsl
fstpt
jle
mov
ljmp
in
shrl
and
inc
ds
pusha
jle
mov
data16
mov
mov
in
or
sbb
inc
dec
aas
dec
xchg
js
out
cld
push
add
mov
cmp
pop
dec
pop
test
pop
pop
push
mov
lods
xor
cmpsl
mov
inc
cld
addb
adc
ret
stos
les
and
pop
jns
cmpsl
ret
inc
mov
ret
dec
cwtl
inc
or
dec
loope
arpl
dec
adc
push
pop
sub
push
add
test
stc
add
out
push
insl
adc
xlat
xor
dec
fadds
adc
test
xchg
int
pop
xchg
ja
or
sbb
mov
sbb
jmp
dec
jbe
push
inc
cmpsb
xor
arpl
pop
roll
fwait
icebp
cmp
cmp
mov
imul
cmpsl
fisttpll
stc
adc
lods
dec
fnsave
and
fdiv
gs
lds
inc
pop
sbb
xchg
xchg
orb
add
lret
jecxz
jo
dec
sub
mov
sar
nop
arpl
clc
adc
jae
rolb
xchg
and
push
or
adcb
lock
fcomi
mov
rcl
rcll
inc
cwtl
into
cmp
jge
subb
cld
push
sbb
outsb
stos
mov
and
and
imul
inc
jb
movsb
scas
adc
or
scas
hlt
in
pop
jns
es
inc
lahf
subl
dec
xor
daa
adc
fcmovnb
jae
xor
mov
add
inc
leave
sub
inc
jb
push
sbb
push
sbb
or
adc
dec
jecxz
stos
lret
jle
stc
pop
xchg
or
or
and
pop
and
imul
ja
in
pop
pop
jbe
dec
inc
dec
mov
and
xor
add
flds
xchg
aas
xor
aam
push
push
jns
mov
jo
andb
icebp
int
sub
jnp
pop
jo
out
mov
cmp
lret
rorl
jo
ljmp
mov
loopne
mov
push
lcall
in
pop
dec
lods
push
and
mov
xchg
mov
and
ret
imul
shrl
cmp
notl
push
not
push
fbld
and
repz
repz
jno
aas
jecxz
jl
jbe
mov
inc
testl
rol
test
mov
cmp
filds
xor
xor
outsl
ds
movsb
push
scas
jb
sub
xor
pop
daa
sub
cli
jne
test
sbb
mov
mov
icebp
mov
sub
inc
sbb
enter
xchg
int3
inc
out
arpl
mov
inc
pop
aam
fcomi
mov
jne
icebp
cmp
call
std
imul
jbe
push
aas
lods
adc
repz
aam
xchg
mov
pop
dec
iret
adc
les
mov
testb
out
pop
push
adc
jns
int3
sahf
sbb
fistl
bound
xchg
push
xor
imul
orl
sub
movsl
jb
loopne,pt
jecxz,pn
and
jo
outsl
enter
and
add
and
or
or
pop
movsl
mov
xchg
out
aad
js
push
inc
pop
cmp
or
pop
lahf
ret
push
daa
xchg
ret
sbb
das
addr16
push
aad
lcall
jecxz
das
aas
addr16
push
inc
sub
mov
sahf
xor
jo
mov
mov
imul
gs
out
push
or
mov
dec
adc
push
adc
or
fwait
mov
leave
dec
in
fwait
int
pop
call
jbe
cmpsb
mov
je
pop
sbb
pushf
fistps
jne
ror
lcall
cmp
and
int3
push
push
mov
mov
mov
and
mov
add
mov
adc
stc
xor
fisttpl
inc
icebp
addr16
push
fisttps
pop
adc
popa
jo
pop
lcall
incb
jge
jae
cmc
mov
or
push
pusha
mov
ljmp
idivl
xor
cmp
pop
mov
push
int3
aad
divb
loop
imul
aas
loopne
adc
fidivrl
mov
or
dec
rclb
adc
enter
pop
clc
addr16
jmp
fadd
and
fidivl
nop
stc
lods
sbb
xor
in
or
xchg
pop
cmp
jl
inc
sbb
test
inc
fwait
inc
xor
sar
adc
test
not
push
mov
test
pop
dec
in
push
in
xor
cmpsl
iret
aaa
ret
mov
movsb
out
or
fs
lods
xor
bound
mov
cmp
dec
adc
sbb
add
sub
ja
inc
xchg
sbb
outsl
pop
fisubl
and
and
imul
enter
stos
pop
mov
movsb
ret
cmp
xchg
jns
jmp
push
stc
cmc
add
xor
mov
adc
jle
js
push
loopne
daa
push
mov
popf
adc
cmp
pop
push
repnz
sub
or
xchg
sub
adc
xor
sti
dec
pop
mov
push
iret
sbb
test
aam
lret
imul
test
out
test
lods
jbe
jecxz
mov
cltd
repnz
das
dec
and
adc
insb
push
pop
dec
insl
cmp
and
pop
lret
mov
pop
cs
inc
shr
sbb
cs
fildl
imul
mov
and
in
popf
mov
dec
cmpsl
lahf
addb
sbb
adc
push
out
movsl
test
inc
push
xlat
xor
xor
lods
push
xor
test
cwtl
adc
ret
scas
or
mov
ret
xor
lcall
sbb
sbb
test
sbb
lods
fnsave
daa
test
push
int
jmp
ret
cmc
lcall
mov
or
push
mov
jmp
clc
add
popf
push
fwait
dec
data16
roll
ss
mov
into
mov
push
pop
inc
push
and
sbb
sahf
test
push
and
pop
sbb
lahf
in
mov
jg
notb
out
test
pop
mov
jmp
mov
pop
je
jp
mov
andb
push
inc
shlb
xchg
fmull
mov
pop
mov
hlt
xor
je
cld
mov
insb
cmp
push
jae
push
mov
inc
mov
dec
mov
sti
mov
mov
cmpl
adc
push
sbb
wbinvd
out
jo
xchg
mov
and
or
sbb
dec
out
loopne
add
jle
push
adc
fbstp
sub
and
cmp
les
mov
and
fisttpl
push
jmp
ret
cwtl
cmpl
mov
dec
sti
subl
bound
sahf
jne
aad
jbe
ret
outsb
cld
dec
cmc
adc
ja
sub
xchg
fistpl
stos
es
push
mov
jl
mov
mov
jmp
cld
add
repz
or
mov
mov
idivb
lcall
adc
dec
data16
or
jne
ret
das
test
mull
ret
icebp
lahf
addl
leave
mov
in
arpl
call
dec
mov
xchg
fwait
push
push
push
imull
ja
dec
lahf
cmp
rcll
mov
popa
mov
cmc
popa
stos
adc
ficoms
add
push
insl
cs
icebp
fnstsw
hlt
pusha
mov
out
pop
and
jns
lret
sbb
imul
imul
popa
inc
leave
xchg
xor
xchg
pop
push
xchg
mov
loop
push
or
push
sbb
cld
sarb
out
adc
std
pop
cltd
gs
xor
mov
sbb
dec
push
sbb
push
nop
jb
xchg
hlt
aam
mov
mov
mov
xor
adcl
adc
inc
inc
fisubl
rorb
add
xchg
xlat
fists
sub
jne
mov
push
inc
push
dec
and
add
aam
cltd
inc
jg
cmc
ret
sbb
add
aaa
rcrl
dec
lahf
out
andb
test
xor
mov
fistl
js
mov
out
imul
jge
jo
clc
inc
stc
lcall
sbb
popa
mov
imul
sub
decb
in
ret
pop
scas
fdivrl
dec
aaa
inc
inc
xchg
ret
sub
fwait
push
jmp
lods
xchg
in
jno
add
std
cld
inc
jbe
js
adc
cwtl
pushf
mov
xor
inc
jo
rclb
or
jb
xchg
fldt
pop
divl
aam
addr16
rol
or
jae
push
mov
jo
lcall
lahf
add
int
pop
scas
mov
push
scas
jecxz
lret
or
dec
sub
bound
adc
mov
dec
rol
ds
pushf
nop
ja
push
sarl
cwtl
aad
lods
xor
fwait
xor
mov
lods
mov
add
setb
dec
outsb
addr16
or
cmpsl
test
dec
addr16
sbb
arpl
xchg
popa
lock
add
jl
mov
fnstcw
loopew
jg
mov
adcl
aam
in
stc
mov
psubusb
fmul
inc
inc
jmp
or
mov
pop
cli
ret
outsb
icebp
mov
addr16
cmp
jb
aas
xchg
jp
sbb
fildl
shrl
das
psraw
push
imul
gs
fwait
lock
inc
mov
loope
jo
cs
push
shll
stos
and
imul
scas
inc
push
into
scas
mov
add
xlat
repz
xchg
pop
loope
xchg
or
movsl
push
mov
rclb
loope
jne
adc
popf
scas
popa
lods
mov
push
in
pop
add
mov
loope
fwait
repz
test
mov
or
jge
in
test
sbb
and
fucom
insb
sbb
and
rcr
ret
repnz
and
aaa
fmul
in
data16
popf
cli
adc
push
add
or
add
mov
sub
adc
movsl
stos
sbb
jne
or
inc
aam
and
ljmp
or
test
test
dec
inc
pop
sahf
aaa
jp
daa
mov
xor
shll
or
clc
aaa
jno
sbb
jns
push
lds
xchg
mov
or
jne
jns
jmp
mov
mov
pop
add
loopne
lret
mov
push
cltd
or
dec
or
jne
or
cwtl
mov
inc
lds
push
cmpl
leave
mov
sub
mov
jg
ljmp
call
incb
arpl
filds
dec
or
aas
sub
add
pop
loopne
movsl
call
add
pop
addr16
imul
dec
xor
xorl
xchg
lret
loopne
dec
sbbl
xchg
adc
push
push
fstpl
pop
pop
adc
jmp
jp
stos
jno
cmp
mov
imul
shl
mov
pop
sarl
fcomps
sbb
mov
stos
subb
fsubr
cltd
dec
cltd
in
nop
push
push
xchg
add
add
movsb
dec
mov
outsl
inc
mov
mov
std
in
in
mov
pop
xor
add
movsb
xor
jmp
icebp
xchg
movsb
popf
into
dec
mov
je
adc
insb
gs
lret
jl
cli
pop
std
or
xor
sti
enter
push
add
xchg
repz
cmp
adc
pop
stos
in
pop
rcrb
push
xchg
js
mov
hlt
adc
mov
outsb
adc
cwtl
rolb
jo
loop
cld
push
mov
aas
jne
or
adc
in
cmp
rorl
xchg
sub
arpl
movsb
in
push
inc
xor
orb
xchg
aaa
out
push
dec
pop
loope
cmp
jp
jp
fdivr
in
push
outsl
xchg
stos
es
enter
fstpl
inc
xor
push
inc
js
imul
adc
sbb
mov
addl
mov
ficoms
add
fwait
push
mov
xchg
loop
push
sbb
andl
add
movsl
jb
out
stos
lea
sub
adc
test
push
adc
popa
add
es
or
std
jno
jno
inc
into
jge
pushf
es
xchg
xchg
in
repz
insb
lock
lret
adc
popf
dec
std
cmpsl
dec
lods
sbbb
cmp
scas
cmp
sahf
ss
and
out
inc
lcall
scas
xlat
sub
dec
fs
sub
mov
repnz
andb
sbbb
inc
inc
daa
sub
mov
pop
dec
out
cli
in
sbb
push
xchg
lahf
ljmp
in
ljmp
call
out
cld
jno
shl
dec
pop
fcoml
xor
mov
mov
hlt
movsb
jmp
adcb
mov
pop
lret
mov
dec
xor
ljmp
ds
inc
sbb
xlat
push
inc
ja
cmc
or
mov
add
insl
adc
dec
sub
add
pop
pop
jno
mov
cltd
mov
es
adc
sub
sbb
rclb
movsl
lock
jge
xchg
pop
in
and
movsb
mov
pop
fdivrs
imul
ret
inc
mov
mov
or
push
mov
jns
mov
xor
mov
cld
jle
pop
insb
jo
or
in
or
xor
sub
mov
inc
xor
aaa
roll
or
test
ret
pop
cli
xrelease
jl
or
cwtl
adc
adc
add
jge
aad
daa
push
and
sbb
mov
jl
push
aas
xchg
shll
lcall
mov
out
push
mov
xor
jnp
push
test
dec
mov
cmp
and
cmp
xchg
mov
and
sbb
add
lcall
push
cltd
and
sbb
sub
movsl
inc
fadds
cmpsl
add
adc
loopne
jmp
mov
mov
push
insb
cmp
ja
pusha
out
cmc
adc
ja
mov
or
or
jno
fisubrl
jb
jae
test
ss
jns
sbb
inc
sub
mov
repz
das
cmc
scas
xchg
cld
notb
dec
xor
pusha
xor
xlat
xorb
push
sti
outsb
mov
inc
sbb
rcrl
shll
jge
out
rorb
addr16
xor
xlat
loopne
imul
sub
push
loope
xlat
fstpt
jno
mov
ja
jnp
pop
popa
and
mov
add
lods
or
dec
ret
leave
and
jp,pt
rcrl
stc
icebp
cmp
outsb
xor
pop
sub
mov
in
test
xchg
out
enter
hlt
outsb
or
aam
xor
mov
pop
out
cmp
ljmp
cld
js
and
testl
iret
adc
lret
cmp
jb
fadd
mov
lahf
icebp
pop
inc
pop
adc
sbb
jl
jmp
mov
push
xchg
or
jnp
jg
inc
or
jl
jg
adc
mov
push
mov
or
dec
addb
insl
jp
pop
sbb
popf
fstpl
insl
outsl
gs
xor
cmp
pop
jo
lods
jb
lea
in
cmpsl
arpl
out
sbb
into
sub
inc
push
xchg
lods
mov
mov
roll
out
mov
jb
cld
mov
dec
daa
adc
lcall
or
in
lahf
add
or
neg
cmp
mov
cltd
shlb
mov
je
push
mov
popf
imul
fwait
bound
cwtl
mov
push
ret
dec
dec
inc
loopne
rcrb
sub
icebp
dec
xor
lea
sbb
cli
mov
mov
xchg
inc
out
es
outsl
pushf
or
in
mov
jecxz
insb
jmp
ss
dec
andl
lret
jl
icebp
adc
push
ret
aas
nop
sbb
int
cmp
mov
fcmovnbe
fisttpl
das
sarb
xor
xor
mov
sub
push
js
or
xchg
sub
xor
icebp
scas
dec
lea
add
data16
fidivrl
jp
aaa
cmp
imul
aaa
push
les
adc
xor
aam
jge
mov
lods
cmp
ljmp
push
mov
popf
adc
xor
popa
clc
jle
xor
sbb
cli
inc
cwtl
and
lds
and
iret
jnp
outsl
les
insb
xchg
push
stos
dec
pop
add
dec
int
add
add
xchg
pop
add
imul
jmp
repnz
out
mov
xor
cmc
xchg
cwtl
in
mov
xchg
mov
insb
inc
fs
jmp
lods
cmp
xchg
dec
add
or
les
mov
and
add
mov
mov
mov
sahf
nop
fwait
clc
and
jns
in
push
data16
xor
and
cmpsl
and
jne
mov
bound
aam
fildll
pop
or
mov
dec
fldcw
test
addr16
dec
mov
shll
push
fdivrp
cmp
out
mov
jmp
push
pop
sahf
jmp
mov
js
cmp
jl
or
xor
nop
push
imulb
and
push
add
mov
add
fisubrs
test
dec
pop
fs
clc
pop
cld
jbe
inc
data16
lds
in
test
fsts
xor
bound
push
rcr
dec
hlt
iret
mov
push
int
insl
lret
sub
cltd
shl
mov
sbb
push
cwtl
dec
mov
mov
dec
cmc
mov
mov
data16
sub
mov
movsl
das
cmp
ss
cltd
sbbb
loop
icebp
ljmp
mov
rorb
inc
dec
inc
push
xchg
and
or
sbb
mov
inc
bound
out
insl
push
cmp
cli
lahf
adc
cmp
in
out
cmpsb
xor
cmpsb
repz
xchg
pop
lods
dec
cmp
loopne
fistps
shll
xchg
adc
and
jns
push
jno
pop
outsl
dec
icebp
clc
pop
sahf
xor
pushf
inc
mov
pop
test
bound
ds
add
pop
aas
call
nop
jns
mov
jae
cmp
or
aaa
fcomps
dec
dec
ror
cli
lret
lret
mov
push
pop
int3
fisubrs
xor
cmp
and
pop
ret
cmpsl
ret
ret
sbb
insb
mov
add
dec
mov
inc
dec
push
xor
test
sub
sbb
cltd
loope
in
mov
scas
pushf
loopne
adc
imul
fsubrl
int3
shlb
inc
mov
xchg
dec
jle
test
xor
fs
test
jmp
push
shrl
xlat
scas
das
loopne
cld
jns
xlat
lret
mov
jp
out
std
stc
xor
pop
outsl
out
shl
jo
add
adc
push
gs
push
sahf
fst
in
int3
nop
movsb
add
mov
mov
pop
mov
in
push
pop
repnz
dec
sbb
ss
insl
insb
lea
adc
mov
jo
push
cwtl
aad
loope
mov
sub
in
mov
lds
adc
lock
mov
movsl
cli
push
push
shll
icebp
cmp
add
sbbb
inc
loopne
addl
xchg
insl
jb
cld
pop
pop
mov
icebp
rep
push
jb
dec
into
jne
dec
arpl
lds
scas
fsubr
sbb
push
add
pop
xchg
push
stos
test
push
outsb
inc
hlt
jge
push
or
push
mov
je
add
jp
mov
fisubs
xor
cs
add
sbb
repz
jmp
adcl
add
xor
popf
mov
sbb
lretw
fnstsw
insb
nop
jl
icebp
sbb
push
xor
xchg
cld
cmp
shl
xchg
add
mov
pop
dec
jbe
jbe
dec
pop
push
sub
repnz
aad
cli
dec
mov
add
popf
dec
cwtl
dec
inc
divb
xchg
hlt
fucomi
sbb
sub
add
xchg
push
xor
scas
cmpsl
mov
jecxz
add
negb
imul
jmp
cmp
sub
shrl
cmp
decb
ret
adc
dec
inc
addr16
lret
jns
mov
push
sub
jnp
push
mov
int
lret
insb
pop
adcl
and
hlt
movsb
dec
add
in
jmp
jns
xor
sub
jb
sbb
cmpsb
jns
scas
pop
mov
sbb
xor
adc
xor
push
inc
or
into
or
int3
mov
stos
mov
lahf
outsb
test
cmpsl
pop
rcr
outsl
outsb
cmpb
xor
loopne
mov
fs
iret
cmp
mov
jecxz
mov
call
jge
inc
cmp
push
dec
jbe
and
int
into
mov
push
pushf
arpl
add
or
and
mov
jae
std
in
call
loop
test
dec
insl
adc
je
cwtl
xchg
sub
jp
push
push
and
mov
mov
test
jmp
stos
in
hlt
cmc
aaa
add
cmc
outsw
out
push
sbb
jle
push
popl
pop
mov
fcmove
xor
dec
fwait
pop
pop
lock
adc
add
push
outsb
pushf
roll
jmp
mov
push
push
aad
lret
movsl
loop,pn
out
adc
jmp
xor
in
imul
dec
roll
or
lahf
test
add
idiv
out
push
xor
xchg
scas
int3
mov
dec
mov
shlb
int3
cmp
xor
mov
cmp
mov
lods
bound
mov
jnp
cld
test
adc
xor
lret
and
add
push
cli
jo
cmp
lods
mov
cwtl
lock
lock
push
lea
xchg
jle
cli
sub
ss
adc
shrl
mov
push
sbb
pop
jo
jnp
inc
dec
xor
mov
iret
xchg
mov
psrad
xor
stos
pop
ret
jb
sbb
pop
out
lock
bound
cmp
pusha
icebp
jo
xlat
imul
xchg
mov
sub
insb
add
xchg
or
jg
add
or
repz
mov
cmp
bound
negb
hlt
xchg
cli
cmp
fmull
clc
fwait
inc
stos
jmp
iret
loope
nop
or
int3
test
push
les
int3
pop
jl
dec
sub
adc
mov
add
in
or
jl
xlat
add
pop
mov
scas
insl
sub
std
push
lea
jge
pop
jmp
xchg
scas
fwait
xchg
push
pop
and
inc
pop
loop
scas
push
sub
xlat
sbbb
movsb
hlt
outsb
ds
sti
in
test
jae
cmp
inc
push
in
xor
out
pop
call
push
xlat
xlat
push
pop
mov
fwait
mov
into
adc
les
dec
les
sub
flds
sub
stos
pop
sub
mov
adc
int3
dec
mov
cmp
lcall
push
or
rorl
call
clc
or
mov
mov
clc
jo
push
sahf
push
jp
push
xchg
mov
bound
or
arpl
adc
jo
jle
and
rcrl
mov
sbb
ds
cmp
jnp
stos
rcrb
outsb
loope
shll
pushf
xor
icebp
imul
pushf
xchg
push
adcb
ret
jge
dec
pop
xchg
ret
in
inc
ja
adc
mov
jp
mov
aaa
aad
cwtl
and
mov
es
sahf
cmp
mov
push
idivl
or
jno
fcom
sbb
repnz
lds
xchg
mov
sub
xor
in
gs
xor
add
inc
sub
jbe
rorb
xchg
xchg
mov
dec
sbbb
cmp
lods
icebp
jb
dec
aas
pop
aas
jo
icebp
pop
sbb
adc
jg
popa
enter
cmp
pop
inc
ds
sahf
ficoms
fdivl
shlb
sbb
loopne
mov
xchg
add
push
xchg
popf
and
sub
mov
mov
adc
xor
adc
rcrl
stc
notl
adc
jnp
xor
inc
in
mov
sub
int
push
hlt
out
aam
lahf
inc
add
mov
fiadds
vmwrite
xchg
fldenv
jge
arpl
test
iret
lahf
inc
insb
push
outsb
mov
dec
fcompl
and
mov
sbb
add
mov
lods
pop
cmp
dec
insl
sub
xor
jl
adc
movsb
sbb
push
lcall
mov
mov
lds
fwait
add
repnz
dec
mov
outsb
out
mov
sub
cmp
into
xor
daa
and
in
fistl
in
cmpb
scas
testb
movsb
jg
jbe
mov
jg
add
cmpsl
inc
shll
std
shlb
data16
les
jg
cli
dec
dec
dec
sbb
insl
roll
sub
in
push
jbe
scas
icebp
mov
mov
cld
in
push
dec
lods
ds
jo
xlat
xchg
adc
push
scas
jo
add
notb
fs
fsts
dec
adc
insb
dec
push
lods
adc
stos
les
dec
xchg
and
cmp
inc
xor
stc
dec
lahf
dec
js
cwtl
sbb
cwtl
out
inc
cmp
pop
xchg
test
negl
lahf
mov
jae
sub
cmpsb
mov
mov
mov
mov
or
pop
sbb
pop
or
cmp
dec
repnz
popa
mov
add
jp
sub
rcrb
addr16
stc
sbb
mov
aad
inc
or
mov
pusha
aas
movsl
mov
jbe
cmovb
mov
scas
mov
sbb
std
insb
cmp
pop
xor
es
sbb
or
pop
mov
js
and
mov
xchg
lea
and
shrb
stos
dec
pop
scas
clc
imull
enter
imul
or
aad
xchg
enter
jo
mov
xor
fsubrs
repz
lods
inc
inc
xor
divb
inc
push
mov
add
cmp
std
out
fcoms
aaa
lods
test
lods
stos
cli
cmp
jge
arpl
clc
and
or
add
push
aam
jge
dec
mov
lds
je
pop
xor
sarb
or
jns
sbb
out
lods
adc
rclb
iret
push
outsb
inc
aad
daa
shll
out
pushf
cmc
mov
lea
pop
int3
std
ljmp
ja
xchg
xchg
adc
cmp
sub
dec
lods
leave
pop
div
int3
and
add
and
int3
mov
mov
sbb
insl
mov
call
hlt
data16
inc
mov
push
outsb
inc
lea
jae
inc
jl
popf
pushf
inc
aam
dec
push
lret
sbb
int
mov
aas
sub
jne
cmc
sub
xor
call
xor
aad
mov
sub
loopne
gs
dec
push
sub
mov
rcll
jo
push
into
mov
cmp
mov
mov
test
mov
add
pop
push
sbb
adc
xchg
pop
pop
je
ja
roll
lret
lock
decl
dec
sbb
and
cmpsb
xchg
movups
pop
mov
dec
filds
add
ret
mov
icebp
jns
mov
mov
loope
adc
xor
push
inc
stc
rolb
mov
js
dec
add
imul
pop
insb
mov
pop
ja
xchg
jae
mov
mov
dec
push
std
scas
bound
inc
lock
dec
jl
or
dec
and
mov
pop
lock
mov
or
enter
aad
sbb
rcrb
mov
repnz
sub
outsb
dec
lock
mov
fildll
or
fimuls
shrl
dec
sbb
mov
or
jae
and
sbb
aad
loope
push
cmp
jo
in
jg
dec
mov
ja
inc
cmp
mov
sub
repnz
push
addr16
insb
xchg
loopne
xchg
cmpsb
inc
mov
enter
push
notb
xchg
mov
sbb
loope
idivb
adc
xchg
or
mov
loop
movsl
mov
out
sub
pop
sub
pushf
pop
out
and
das
mov
mov
test
inc
fnsave
out
sbb
add
ljmp
push
xchg
fidivrs
insl
sbb
lods
scas
jg
addr16
cltd
jle
xchg
mov
lds
xchg
mov
arpl
cmp
adc
aaa
inc
fisubl
mov
ljmp
mov
cmp
mov
sub
push
adc
or
ret
movsl
jb
les
inc
repnz
xchg
adc
jecxz
cmpsb
test
test
mov
fistl
rorl
jnp
pop
repz
lods
cltd
xlat
add
rcl
scas
dec
roll
pop
movsb
or
test
sbb
mov
icebp
jne
ds
cmp
adc
cmp
clc
scas
testb
and
ss
stc
dec
cmc
pop
out
push
mov
outsb
ja
inc
lret
push
sbb
sbb
outsb
push
loopne
push
icebp
in
inc
mov
out
fistpll
lret
mov
scas
mov
imul
aam
mov
inc
push
sbb
mov
sbb
cmpsl
jbe
lret
cli
rcrl
pop
lret
push
or
filds
lock
mov
dec
xchg
xchg
dec
ljmp
aam
ja
dec
cmp
xchg
sarl
test
mov
mov
lret
ja
jg
fcomp
test
pop
or
jp
sub
sbb
jmp
loopne
and
and
jne
push
mov
insb
mov
repnz
lahf
and
mov
mov
xor
and
jecxz
inc
push
mov
push
je
jecxz
ljmp
push
cwtl
xor
imul
jno
js
and
ljmp
fs
repz
add
pop
xchg
les
adc
add
or
sub
flds
mov
xor
fnstsw
or
sbb
fs
add
mov
js
lret
xor
adc
jnp
in
les
adc
in
test
push
lcall
inc
hlt
cmp
cmp
push
mov
adc
out
jecxz
and
jg
xor
mov
push
das
fwait
pop
push
mov
imul
leave
fwait
int3
pop
lcall
sbb
sbb
jge
imul
rol
push
fimull
sub
test
inc
pop
sahf
test
pmullw
adcl
lahf
mov
aad
cltd
cmp
insb
lahf
scas
call
call
dec
add
add
adc
push
or
fmull
push
mov
stos
adc
dec
icebp
inc
mov
repnz
int3
hlt
mov
inc
lods
jne
jb
scas
imul
xchg
jge
stos
mov
fmul
shlb
lea
mov
mov
sbb
out
inc
sbb
add
rorb
xor
sub
dec
mov
incl
scas
mov
test
jl
andb
mov
mov
sti
shlb
and
stos
xor
into
dec
pop
adc
adc
xchg
aas
sbb
xor
das
jb
cmp
scas
push
ja
push
jecxz
imul
scas
add
push
repnz
stc
sub
call
stos
outsb
test
ret
mov
push
push
insl
fwait
pop
testl
sub
jg
jb
xchg
sub
or
xchg
int
jb
inc
cltd
sbb
adc
js
jg
fdivrl
lds
leave
mov
cltd
lds
lea
fisubrs
cmp
ficoms
out
imul
xchg
nop
mov
fwait
and
jl
arpl
loopne
mov
and
ja
call
fdiv
repnz
adc
aas
and
push
pop
jge
faddp
mov
dec
subl
pop
pushf
mov
les
les
lcall
popa
cmp
loop
add
shll
push
jae
push
das
pop
adc
dec
add
scas
mov
lret
gs
and
int3
bound
cmp
into
add
leave
dec
and
inc
pop
push
leave
fisttpl
movsl
scas
pop
jg
icebp
inc
lahf
dec
jmp
xlat
push
fldcw
outsb
hlt
cmp
dec
add
jecxz
hlt
push
std
mov
and
sbb
pop
sub
sti
sbb
cmp
dec
mov
dec
mov
loope
pop
add
jl
cmp
jp
std
lods
clc
into
cmp
dec
mov
test
lds
outsb
jb
inc
pop
loop
xchg
fistl
sub
lcall
pop
jmp
inc
sub
dec
add
sub
xchg
out
push
aam
and
vpshuflw
scas
notl
add
inc
dec
mov
pusha
add
testb
adc
add
mov
dec
pop
mov
out
popf
int
je
dec
mov
adc
mov
xor
jns
std
cwtl
aad
push
arpl
movl
xchg
xchg
shl
cmp
aad
out
mov
jmp
xchg
or
and
push
mov
cmp
add
jne
nop
mov
scas
sbb
push
cmp
repz
sbb
shufps
cmpl
adc
test
push
bound
loopne
das
add
shl
fdivrs
jo
mov
inc
fnsave
jg
sub
add
or
inc
addr16
cltd
pop
outsl
testl
inc
mov
jno
test
dec
jnp
test
xchg
sub
out
sub
pushf
jb
mov
mov
lret
adc
or
xorl
mov
push
inc
or
cltd
mov
andl
adc
mov
sbbl
mov
decl
sub
inc
mov
jmp
sub
sahf
pop
lods
dec
hlt
enter
pop
int
iret
mov
add
cwtl
dec
jecxz
jns
ljmp
ret
ljmp
pop
dec
movsb
jno
insl
sbb
mov
jnp
or
push
fsubr
add
pop
jp
arpl
jmp
das
inc
mov
cld
movb
jb
inc
and
inc
add
inc
inc
sub
adc
xor
mov
mov
hlt
dec
pop
cmp
xchg
aaa
dec
lods
pop
dec
aas
jecxz
fs
bound
xlat
xchg
pop
sub
sub
mov
in
out
mov
shl
outsb
pusha
mov
cmp
sar
imul
mov
and
insb
adc
push
mov
add
xor
sti
subl
pop
shll
mov
cmc
sbb
mov
imul
jp
xor
aad
ror
or
sar
aas
and
jecxz
dec
push
inc
or
or
fiadds
scas
pushf
out
int
push
add
lcall
mov
out
jp
icebp
dec
push
add
adc
mov
pop
in
fdivrs
aas
adc
incb
mov
and
add
stos
push
push
shl
in
push
lods
sarb
rolb
movsl
dec
out
mov
dec
int
decb
cmpsb
lods
dec
xlat
imul
sub
jg
and
aam
je
daa
and
lea
xor
push
pop
xchg
fcom
lods
add
sub
add
mov
addr16
mov
xor
sub
cli
lret
mov
std
and
mov
mov
outsl
pop
adc
leave
rcrb
outsl
cmp
add
addr16
push
or
or
xor
shlb
ja
aad
and
in
dec
push
movsl
push
xchg
add
loopne
adc
mov
cwtl
test
addl
sbb
pop
cmp
add
fldcw
nop
cmp
js
rol
mov
popf
and
dec
xchg
in
stc
std
xchg
pop
cmp
push
mov
and
mov
movsl
dec
inc
cmp
addr16
mov
gs
lods
std
cmp
inc
sbb
cmp
jno
icebp
cmp
addr16
push
jl
loop
bound
cs
push
jbe
xchg
mov
div
lds
pop
adc
add
xchg
arpl
out
dec
mov
call
push
aad
inc
sub
jge
push
sbb
pop
loop
pop
jcxz
xor
adc
ds
movsb
or
insl
sub
and
fsubs
push
into
push
mov
icebp
or
xchg
imul
stos
pop
and
xchg
push
sub
test
dec
jne
pusha
cmpsb
jne
imul
sbb
popa
ficomps
xchg
repz
fildl
or
dec
rorb
add
mov
push
int3
xchg
xchg
lds
jno
ret
pusha
sar
into
test
fldt
fdivrs
and
or
jecxz
mov
jae
cli
mov
mov
xchg
scas
jmp
pushw
inc
stos
mov
or
pop
push
lds
lods
or
je
fs
stc
enter
xor
add
test
int
cmp
pop
xor
xor
outsl
xchg
jnp
xor
lcall
mov
xchg
roll
out
fmuls
mov
in
test
scas
jl
rorb
outsl
mov
sbb
cmp
aam
orb
xor
jl
push
pop
xchg
arpl
inc
aaa
jnp
mov
sti
repz
mov
imul
pop
and
dec
adc
xchg
add
or
add
imul
mov
xor
inc
int3
clc
jg
andl
cli
pop
lahf
incl
in
mov
popf
mov
or
xlat
sti
sbb
jo,pt
xchg
pop
jl
xor
push
pop
les
int
das
and
sti
dec
xchg
sub
lods
sub
inc
lea
icebp
inc
into
fstl
jo
xchg
cmp
or
sub
inc
sbb
mov
adc
jmp
mov
stos
dec
and
xorl
lret
cmpsl
cli
outsl
jae
outsl
pop
pop
push
sbb
jmp
jae
and
dec
call
or
rolb
fwait
rcr
ja
xchg
or
int
fucomip
into
pop
ja
sarb
adc
push
mov
jmp
loop
in
push
jns
inc
mov
or
fstps
adc
aas
mov
test
fnstenv
sub
cmpsl
push
adc
arpl
icebp
iret
repz
add
test
ja
pop
mov
icebp
test
add
pop
clc
ret
movsl
xchg
pop
xor
enter
lret
loopne
push
and
test
mov
test
pop
jne
shufps
add
jg
test
or
adc
int3
imul
pop
cmc
lcall
shlb
shrb
xchg
sub
jns
cmpl
pop
xchg
fidivs
imul
dec
xchg
cmpsb
icebp
es
lock
or
aas
push
ror
outsb
cmp
push
push
out
out
dec
pop
pop
test
std
sub
adc
jno
and
pop
pop
add
jp
sbb
xchg
lret
push
loop
pop
xor
fmulp
xchg
insb
mov
sub
pop
push
mov
mov
repz
pop
xchg
icebp
popa
leave
push
or
or
test
jmp
pop
adc
dec
fisttpl
push
and
push
ljmp
inc
inc
cltd
pop
std
mov
cs
cltd
mov
imul
pop
xor
or
sti
sbb
incl
ret
jl
pop
aas
mov
outsb
mov
mov
movsb
cmc
lods
in
sub
dec
hlt
into
js
in
jmp
pop
shll
mov
sbb
dec
cld
aaa
mov
lds
ret
test
mov
adc
add
mov
and
ret
adc
push
subl
shll
mov
les
loop
and
pop
sti
push
nop
addr16
sarb
fwait
rcrl
cld
loop
sahf
rcrb
nop
jae
jg
fcmovbe
push
leave
pop
imulb
call
xchg
jnp
test
fs
jg
inc
pop
imul
call
push
sub
stc
push
jbe
popf
mov
ss
nop
test
int3
cmp
dec
adc
push
adc
jne
rol
push
cltd
add
push
data16
call
insl
negb
cmp
push
mov
mov
pop
push
mov
aaa
sub
xor
jge
mov
cmp
insl
mov
cltd
iret
lods
lahf
imul
xchg
lds
jecxz
es
hlt
out
aaa
int
sar
jecxz
push
jne
lcall
mov
adc
cs
rclb
mov
push
jp
mov
insb
xchg
inc
cmp
cmp
pop
insl
aam
xchg
aad
mov
adc
shl
jmp
jge
dec
cmp
sbb
sbb
or
ljmp
das
fwait
ljmp
lea
cwtl
fdivrl
out
push
or
jne
add
cmpsl
movsb
jne
mov
and
cmp
es
iret
fmull
dec
adc
mov
cmc
rcrl
pop
lods
mov
adc
call
add
ret
sti
jo
fidivl
repz
div
aad
mov
mov
jne
imul
in
mull
mov
mov
loop
sub
mov
test
das
pop
mov
mov
arpl
int3
stos
sub
xchg
mov
clc
fnstsw
mov
mov
add
xchg
rcrl
pop
pushf
leave
mov
addl
ds
xchg
loope
jp
call
lods
xchg
lds
ljmp
xchg
xlat
push
sub
jge
movsl
and
push
add
cmpsb
jns
xlat
mov
push
fidivrs
pop
shrb
or
inc
xchg
repnz
inc
outsl
lods
int3
xor
pop
and
aas
outsl
xchg
mov
xor
in
sbb
mov
push
mov
ljmp
sub
or
inc
stos
aad
xor
mov
jmp
nop
xchg
pusha
jecxz
call
les
frstor
jp
pusha
cli
mov
inc
add
jmp
inc
movsl
ja
mov
js
insb
pop
sbb
cmp
lcall
add
sti
push
pop
mov
mov
xchg
aas
nopl
inc
rolb
xchg
shll
xchg
ret
shlb
adc
fstpt
add
jbe
dec
jno
jecxz
xor
int3
fisubrl
adc
gs
cmp
cwtl
in
push
jno
jmp
xor
add
ret
mov
out
pop
pop
push
in
mov
mov
inc
mov
loope
mov
cs
stc
xchg
dec
push
sub
incl
mov
jae
inc
lsl
mov
mov
xlat
push
imul
fimuls
xor
je
inc
cltd
dec
test
mov
and
adc
pusha
test
stos
es
je
dec
in
jge
addb
lea
outsb
inc
sbb
rclb
or
ljmp
jmp
push
sti
xchg
popf
pop
stc
lods
ret
dec
inc
in
mov
or
inc
cmp
push
std
addr16
sbbl
fwait
lret
ljmp
std
les
add
jmp
or
pop
fwait
mov
and
xor
mov
hlt
mov
pinsrw
lcall
insb
cmpsb
fnstenv
movsl
enter
pop
loopne
mov
lods
imul
sbbb
mov
aaa
out
pusha
jae
and
callw
fwait
daa
adc
mov
stos
lock
dec
fidivl
jecxz
ss
xchg
icebp
fdiv
sbbb
test
push
or
or
mov
lcall
rcll
test
mov
ljmp
outsl
mov
xor
adc
or
mov
mov
lods
push
jp
sub
dec
nop
ja
add
cltd
lcall
test
sbb
adc
pop
cmp
sahf
subb
cmp
or
cmpsb
stos
xchg
jbe
adc
test
push
add
in
cli
nop
xor
adc
lahf
adc
sbb
out
sahf
dec
pop
pop
xchg
cmp
outsb
rcl
xchg
movsl
jns
outsb
popf
sbb
xchg
mov
mov
das
lahf
cld
bound
mov
push
lds
and
cmpsb
loope
or
fsubs
xor
xchg
inc
enter
addr16
add
or
stc
ffreep
mov
hlt
ret
sub
jmp
jb
movsb
ja
xchg
mov
inc
in
les
cmp
shrl
pop
in
jne
xor
rorl
iret
push
push
mov
divl
inc
lahf
push
hlt
test
inc
pop
test
mov
nop
out
dec
je
inc
shlb
push
mov
roll
dec
adc
call
inc
jo
lods
push
iret
lds
nop
mov
mov
pusha
adc
shr
scas
xorl
mov
movsl
mov
inc
cmc
arpl
push
xlat
adc
je
ljmp
cwtl
jb
popf
mov
and
arpl
mov
repz
sub
mov
fdivr
into
push
or
push
jp
jno
pop
pop
hlt
mov
test
sbb
shl
incb
out
je
sub
in
push
jno
popa
aas
sub
mov
jnp
adcb
push
ja
sbb
pop
call
jnp
xchg
pop
xchg
push
outsb
fcmovnu
sarl
add
xchg
addr16
les
mov
cmp
imul
mov
das
mov
jnp
ja
enter
subb
mov
mov
jns
add
add
mov
movsl
fdivs
mov
sub
aaa
nop
sub
or
daa
jns
adc
sbb
enter
jnp
jbe
push
popf
xor
icebp
sti
mov
add
hlt
dec
xchg
test
imul
insl
push
xchg
hlt
movsl
push
ljmp
out
add
cmpb
pusha
popa
mov
adc
xor
cmp
pop
lds
inc
or
mov
subb
and
and
xchg
test
push
ja
repz
pop
loope
jmp
insb
out
mov
out
lret
cld
outsb
lahf
ficoml
cwtl
out
jnp
je
aad
cs
cmpsb
mov
jl
stc
jmp
insb
add
ror
cwtl
in
jmp
scas
push
addr16
mov
shrl
sbb
sub
dec
mov
mov
mov
xor
into
ds
sti
jge
lret
in
xor
lahf
push
adc
mov
arpl
lods
stc
adc
int
mov
xorb
mov
cmp
cmpsb
push
sub
sbb
dec
mov
pop
mov
js
cmc
enter
dec
iret
js
movsb
iret
inc
add
mov
mov
and
and
inc
sbb
scas
adc
pushf
lret
gs
dec
sbb
daa
push
fnstcw
inc
fsts
aad
cmp
mov
mov
add
xorb
dec
cmp
mov
arpl
aas
push
inc
lods
icebp
dec
xchg
mov
dec
in
pop
mov
mov
clc
jl
outsb
divl
in
outsl
dec
dec
mov
mov
jb
hlt
cltd
cmp
sub
mov
das
out
ficompl
jbe
out
pop
xor
mov
lcall
les
cmp
jne
lcall
xor
ljmp
jge
loope
inc
push
sahf
ss
mov
cmp
cmpsl
ss
xchg
das
push
dec
fcomps
inc
mov
fcoms
rcl
or
es
in
and
xchg
clc
gs
cmp
sbb
ljmp
aas
sub
rol
aam
push
sti
lds
sbb
inc
mov
cmp
hlt
ret
insl
arpl
into
mov
cmp
adc
stos
stos
pop
popf
ficoml
int3
pop
fadd
je
add
or
xor
or
ret
insl
sbb
cmc
mov
xchg
sub
insb
dec
pop
dec
add
stos
roll
pop
pop
imul
add
inc
ljmp
out
iret
cwtl
in
add
jae
mov
xor
and
test
dec
adc
mov
ficoml
loope
cmpsl
mov
xchg
adc
lahf
inc
icebp
lea
fdivl
add
orb
hlt
mov
pop
pop
out
jle
sbb
clc
dec
and
add
jmp
jb
jae
dec
sahf
mov
test
cmpsl
mov
inc
mov
jp
jb
pop
inc
sub
push
pop
xchg
fsubr
test
or
push
jne
and
cmp
jns
movsb
fsubr
mov
ret
daa
hlt
orb
mov
fnsave
movsb
mov
stos
xor
and
jge
popf
sub
jo
repz
das
add
aaa
mov
mov
test
pop
cltd
es
movsb
dec
popa
dec
pushf
stc
pop
shlb
push
xchg
xor
iret
jns
lcall
ret
mov
add
dec
int3
icebp
in
scas
mov
dec
cld
bound
test
mov
lea
loop
cmc
push
ljmp
lcall
cmp
mov
stos
jge
cmpsb
jne
inc
cmpsb
and
addr16
cmp
test
and
ja
sti
stos
out
xor
sbb
sbb
std
dec
dec
xor
mov
sbb
sbb
loope
dec
negb
out
lea
jno
ud0
sbb
lods
adc
xor
cmp
inc
or
mov
mov
sub
aas
jecxz
mov
bound
ja
mov
fisttps
das
xor
push
dec
rolb
push
fmuls
lcall
into
mov
fwait
mov
xchg
or
mov
mov
test
ljmp
sbb
es
into
pop
add
aas
sub
in
lea
and
push
lods
inc
and
out
push
lds
pusha
push
push
adc
fnclex
adc
mov
adc
xchg
mov
cmovnp
dec
push
pusha
out
mov
sub
mov
shl
shll
andb
bound
dec
push
sbb
aam
shll
lea
mov
notl
add
test
jmp
mov
mov
stos
ja
xchg
ds
pop
lcall
and
dec
test
pop
test
dec
jnp
sub
pusha
test
lea
pop
inc
cmp
and
push
mov
xchg
add
cmp
shll
push
cmpsb
fnstsw
adc
fdivr
push
imul
pop
iret
mov
loop
pushw
lods
mov
jecxz
ljmp
pusha
sbb
sbbl
loope
mov
push
hlt
pop
dec
push
dec
pop
stos
arpl
ljmp
aaa
mov
mov
pop
cmpsl
and
dec
jg
scas
out
pop
adc
xor
mov
ds
aas
add
xor
outsb
mov
push
clc
sbbb
dec
rcll
mov
push
pop
mov
leave
sbb
lahf
test
jb
push
js
xchg
lods
jl
cmpb
movsb
sub
adc
adc
or
pop
shlb
ret
xchg
jp
in
rorb
std
loop
xor
in
sbbb
cmpsb
or
xchg
xchg
jp
pushf
cmc
stos
out
adc
in
scas
fldl
xor
ret
ret
cmp
sarl
adcl
sub
add
rcrb
or
pop
clc
mov
loopne
fstp
rcr
fsubl
jmp
mov
cmp
or
mov
push
sti
cmp
mov
adc
sarb
test
pop
mov
jbe
fstps
subb
xchg
sbb
mov
andl
xor
xlat
fbstp
and
test
test
outsb
iret
mov
sbb
out
cmpb
mov
in
ljmp
add
cmp
mov
mov
xchg
sbb
or
and
xlat
leave
sub
jecxz
call
repz
roll
outsl
pushf
sbb
mov
mov
mov
cmp
mov
pop
xor
aad
loop
xor
sbb
xchg
pop
nop
mov
xchg
popf
sbb
mull
cmp
or
subl
inc
lret
imul
icebp
popl
imul
cmp
push
xchg
pop
lock
inc
shl
xchg
cmpsb
sub
mov
rep
in
sbb
inc
sub
fwait
xorb
mov
mov
loope
lods
je
leave
out
pop
sbb
loop
jne
mov
pop
cltd
lods
rorb
mov
popa
push
scas
mov
cltd
lcall
xchg
mov
rorl
in
mov
testb
cmp
in
inc
push
pop
dec
ja
int3
lcall
scas
popf
in
sti
arpl
rclb
out
ljmp
jg
clc
sub
cmpsl
lods
mov
fs
push
dec
inc
inc
xor
mov
test
jecxz
inc
adc
test
push
mov
cwtl
mov
outsl
lods
push
sar
dec
es
into
sbb
and
jecxz
push
hlt
inc
idivl
lods
leave
outsb
push
subb
int3
pop
pop
sbbb
dec
or
outsb
ret
mov
aad
in
ljmp
mov
sbbb
pop
arpl
adc
sub
fdivrs
pop
and
fstpt
jle
sbb
pushf
adc
xchg
ret
insl
movsl
aam
add
mov
addl
pop
dec
loope
jle
sti
xchg
jge
lahf
pop
and
xor
sbb
dec
scas
je
cmp
xor
dec
repnz
pop
popf
test
leave
inc
sbb
das
in
push
sarl
dec
push
fcmovnu
xorb
jbe
enter
jmp
sbb
ret
scas
sub
push
inc
xchg
js
push
or
cmp
ljmp
sbb
int3
dec
cmp
cmp
xchg
jo
jb
or
dec
cld
push
xchg
and
and
scas
js
jecxz
jb
xchg
add
pushf
push
adc
or
mov
fimuls
xadd
dec
divl
and
adc
or
jo
mov
add
jbe
mov
mov
test
addr16
pusha
test
lock
jle
ja
pop
push
scas
iret
mov
ja
xor
xlat
pushf
gs
dec
movsb
xchg
mov
inc
lret
jae
rcll
cmc
movsb
push
and
ret
jge
out
xlat
scas
cltd
pop
sbbb
daa
xchg
pop
adc
loop
loope
jae
cwtl
idivb
popf
das
and
cltd
adc
fs
pop
mov
iret
ffreep
or
or
xor
and
ja
xchg
add
push
mov
xchg
pop
pxor
dec
or
bound
push
xor
push
push
mov
xchg
or
sub
aas
adc
jns
mov
shlb
mov
cltd
dec
iret
mov
dec
cmp
cmp
std
add
testb
hlt
fwait
imul
idivb
loop
sbb
push
pusha
inc
sub
ja
scas
pop
push
aad
sub
sbb
mov
call
push
mov
pushf
mov
out
inc
outsb
mov
or
icebp
sahf
or
sub
add
jo
repnz
imull
mov
mov
dec
push
in
add
sub
dec
adc
int
mov
repz
mov
push
divb
out
mov
push
cmp
imull
hlt
sarl
push
pop
xchg
xchg
notb
jns
fs
into
push
out
inc
nop
cmc
push
cli
jle
fwait
mov
shl
add
push
lcall
mov
cld
rcr
add
adc
push
push
jecxz
popf
inc
std
daa
mov
xor
sbb
test
dec
xchg
sbb
xchg
xchg
add
push
repz
es
inc
repz
cmp
mov
jecxz
adc
mov
push
cs
fdivrl
daa
inc
aas
das
adc
mov
sbb
lcall
xlat
shld
jp
jecxz
adc
fldl
pop
cmpsl
or
xchg
fcomp
loopne
sub
push
test
cmp
enter
aam
sub
repnz
jne
lret
adc
loopne
mov
inc
cmp
fcoms
lret
inc
in
dec
ret
adc
clc
aad
adc
out
out
out
sbb
out
incb
pop
push
dec
cmp
sbb
enter
cmpl
inc
mov
adc
adc
push
push
pop
xchg
xchg
pop
lds
add
outsl
sti
cmpsb
or
mov
mov
icebp
push
testl
sub
xchg
adc
outsl
mov
ljmp
dec
mulb
xchg
rol
push
adc
pusha
lret
fcmovb
sub
push
scas
fcmovnu
cli
repnz
insl
mov
or
xor
cwtl
mov
loop
cmpsb
in
scas
hlt
sbb
mov
pop
fs
repz
repz
add
pop
stos
sub
push
xchg
ss
jnp
insl
in
repz
jne
xchg
mov
xchg
popa
add
cmp
sbb
fistpll
scas
inc
pop
dec
scas
and
repz
call
iret
leave
pop
xchg
hlt
imul
lods
mov
gs
popa
stos
dec
pop
dec
popf
xor
lret
lods
orl
cwtl
das
mov
and
test
in
mov
push
mov
xchg
inc
mov
lods
out
nop
pop
cwtl
mov
test
mov
mov
mov
orl
pop
add
neg
test
into
push
lahf
incl
xchg
repnz
xchg
pop
jbe
lcall
scas
sbb
lret
lcall
fmuls
out
std
fs
js
jecxz
call
roll
lcall
jb
ljmp
adc
int
xchg
sbb
lcall
lcall
arpl
mov
bound
ljmp
mov
push
ds
lods
mov
xchg
xor
pop
sub
dec
jl
pop
adc
mov
adc
in
xlat
aam
push
loope
push
subl
dec
insl
cmp
addl
ret
movsb
xor
sbb
inc
ret
mov
fwait
xor
fdivrl
sar
push
xchg
sbb
sub
pop
jp
out
jl
dec
stos
inc
scas
sbb
pusha
in
xor
and
ret
gs
dec
call
adc
dec
repz
sbb
jg
mov
ljmp
imulb
popa
inc
out
out
push
cltd
sti
lret
lcall
pop
lret
jne
fcoms
sbb
mov
fsubr
or
adc
mov
aas
ja
fcmovne
cmpsb
ljmpw
sub
and
sbb
scas
sbb
loopne
jg
outsl
fs
jl
test
push
test
cld
lahf
in
mov
movsb
test
mov
cmp
pop
push
lods
mov
es
cli
aaa
insl
ret
addr16
mov
jp
rolb
and
stos
in
shll
mov
clc
add
sbb
or
fcompl
testl
sbb
sahf
iret
mov
push
or
sarb
dec
into
and
add
loopne
das
xchg
cli
and
dec
push
arpl
or
mov
cmp
pop
xor
and
and
pop
stc
dec
test
pop
std
sub
mov
stos
pop
insb
nop
addr16
mov
sahf
fsub
loop
int
xchg
bound
jo
lods
ja
push
test
jecxz
repnz
mov
icebp
icebp
mov
jge
add
in
xor
or
jae
aaa
ret
test
adc
add
out
call
push
sub
mov
dec
popa
inc
jb
insb
leave
adc
lcall
or
lret
jns
xchg
xchg
fiadds
cmpsl
insb
adc
sarb
xorb
or
inc
mov
push
xlat
or
mov
xchg
mov
sti
jle
cmp
jbe
mov
and
jo
push
scas
mov
movsl
sbb
stos
pop
insb
xchg
loope
adc
in
out
insl
ret
adc
scas
inc
mov
xchg
sti
sub
movsl
loopne
jle
sub
dec
aas
enter
xor
lock
push
iret
pop
rclb
push
lret
enterw
pushf
xchg
inc
or
das
ds
xchg
pusha
mov
fstp
push
lods
xchg
pop
inc
fstl
pop
movsb
mov
scas
int
fimull
lock
cs
push
push
fstpt
nop
daa
mov
neg
dec
xchg
dec
lock
push
push
inc
ja
inc
enter
int3
sub
stos
mov
nop
out
xchg
jnp
repnz
ret
dec
std
movsl
scas
hlt
nop
push
jecxz
lods
cmpsb
sub
sub
or
pushl
push
mov
ds
rorl
mov
adc
xchg
ds
dec
push
in
andl
inc
xchg
les
adc
mov
xchg
dec
int
rclb
int
jns
or
jle
shll
sbb
ficoml
div
dec
add
bound
dec
push
sub
sub
ja
inc
and
mov
in
add
pop
arpl
enter
test
pop
pop
pop
mov
jmp
xchg
jl
js
cmp
add
mov
iret
inc
mov
mov
aaa
push
add
jg
mov
jg
dec
arpl
sub
push
ret
mov
pop
clc
sbb
xor
pushf
push
adc
fisubl
icebp
mov
jp
mov
inc
cmc
or
cmp
fidivl
sbb
mov
bound
out
imul
push
jo
cltd
sub
repz
outsl
push
scas
or
dec
movl
mov
jnp
push
mov
loop
inc
cmpsl
sub
mov
jge
jne
and
cmp
fdivrs
mov
out
stc
rcl
xchg
shll
sbb
lcall
out
movsl
xchg
add
mov
mov
clc
hlt
jmp
cs
jb
mov
adc
aad
or
ret
xlat
add
scas
mov
or
mov
lods
rol
mov
or
out
bound
mov
ja
jmp
pop
rorb
and
cmpsl
loope
lcall
pop
stos
sub
fs
mov
lock
add
addr16
push
into
jbe
mov
in
add
or
ret
jae
lahf
insb
test
loope
cmp
cmp
cmp
or
pop
pusha
lahf
leave
inc
inc
push
loopne
rorl
lods
movsl
add
add
xchg
xchg
scas
mov
aam
enter
test
pop
mov
and
dec
loope
fst
and
dec
mov
cmp
inc
ficoml
mov
pop
imul
jmp
mov
daa
and
xor
loopne
test
xchg
mov
mov
xor
xorl
dec
sbb
inc
and
push
icebp
outsb
mov
xor
shrl
cmp
data16
std
jge
ja
dec
hlt
cmp
pop
pop
inc
cld
and
sbb
sahf
imul
mov
sbb
sbbb
pop
jp
ds
lds
sub
pop
sub
xchg
imul
mov
fidivs
mov
fnclex
adcl
lret
mov
loop
imul
push
xor
jmp
xor
insb
addl
js
fimuls
mov
iret
popa
stos
sub
fildl
adc
mov
ss
mov
mov
sbb
scas
pop
inc
pop
pop
jp
sub
jb
std
outsb
mov
loop
jne
jnp
popa
mov
imul
push
je
clc
push
and
enter
test
mov
imul
sub
out
daa
mov
dec
jp
sbb
dec
xcrypt-ofb
cmpsl
sub
mov
dec
repz
das
out
mov
shrb
sub
clc
add
xor
dec
hlt
fidivl
nop
jnp
push
cld
shll
mov
insl
adc
or
adcl
push
shlb
cmp
add
jmp
aam
daa
movl
popf
xor
inc
fs
shl
call
push
adc
ljmp
push
popa
into
dec
std
dec
sbb
lock
jnp
das
mov
mov
push
adc
das
movsb
cmp
call
add
xor
xor
xchg
fstpl
js
pop
bound
leave
jns
sub
add
push
loope
imul
mov
push
repz
xchg
inc
mov
insb
and
mov
push
mov
dec
leave
jmp
fcomps
push
movl
scas
pop
push
cli
mov
mull
jnp
pop
rcrb
cmp
adc
outsb
scas
mov
and
mov
jge
iret
lcall
stos
movb
cmc
and
nop
outsb
ret
mov
dec
add
fnstenv
jg
jnp
repz
pusha
mov
int3
jge
ret
sbb
mov
cmp
inc
xor
test
out
movl
imul
fdivrs
ja
cmpsb
mov
pminub
int
mov
mov
sub
or
repnz
les
inc
cmp
mov
mov
sbb
add
lea
leave
mov
and
out
add
cld
pop
add
jo
xchg
adc
cli
adc
fstl
cld
mov
loopne
push
scas
jb
popa
mov
or
ljmp
add
sbb
sahf
cli
mov
xchg
int3
stos
inc
and
pop
fcmovu
pop
inc
xchg
sahf
stos
push
jns
aad
negb
pop
dec
outsb
xor
ficompl
jae
fildl
or
inc
sub
outsl
and
fcompl
sbb
sbb
sbb
and
sub
jnp
inc
cli
cmp
push
iret
cmp
pop
jge
aam
clc
mov
jge
out
lock
fisubrs
fcomip
daa
push
jg
jmp
out
gs
cmp
ja
das
xor
out
add
and
push
jns
mov
sbb
xlat
cmp
or
scas
push
mov
out
inc
push
enter
in
es
or
dec
xchg
xchg
push
lretw
out
ss
xor
cmp
sub
lea
jae
out
cmp
sub
mov
jae
stos
cmp
jl
mov
inc
stos
mov
les
add
adc
xchg
xor
jecxz
dec
push
push
xor
push
sbb
push
fcmovu
jmp
inc
push
cmp
repz
inc
pop
jo
pop
loop
xchg
jle
fcomi
push
jns
ret
lret
bound
and
mov
xchg
aad
dec
lret
imul
mov
adc
stos
mov
cld
mov
xor
sbb
testl
outsb
cmp
pusha
jmp
add
clc
xchg
sbb
and
aam
out
in
lods
and
out
mov
cld
bound
pop
cmp
pop
es
decl
push
enter
push
gs
mov
cmp
stos
push
sub
add
pushf
pop
cmp
lret
xchg
cwtl
mov
fwait
in
hlt
or
add
or
jns
dec
dec
jle
dec
xchg
orb
lods
loope
cmpsl
xchg
jl
sbb
mov
shll
fcmovbe
push
push
sbb
sub
and
pop
test
mov
add
iret
call
push
incb
cmp
cltd
add
cmc
das
mov
pop
or
in
lock
stos
mov
daa
jmp
pop
roll
call
mov
cmpsb
sub
cmpsb
in
push
inc
cmc
aam
arpl
ljmp
mov
es
dec
dec
dec
lods
test
pop
cwtl
shll
push
cmpsl
jecxz
in
mov
gs
stc
lods
cld
jp
pop
outsb
adc
arpl
sub
mov
mov
pop
aas
scas
test
cmp
daa
incb
mov
ds
fistpl
iret
lods
push
je
sar
das
mov
aaa
sti
mov
fnstenv
inc
cmpsl
fsubrp
popa
mov
fisttpl
inc
into
out
pop
cs
popa
mov
sub
outsb
jne
das
mov
dec
pop
fdivs
mov
mov
stos
add
sbb
aas
outsl
xchg
xchg
rorb
mov
aad
or
sbb
cmpsl
data16
jle
nop
or
pop
xchg
in
mov
dec
lcall
out
cld
dec
movb
negl
ficomps
ret
movsl
or
and
addr16
push
repz
or
dec
andb
lods
dec
xchg
popf
xchg
call
jmp
dec
lds
push
test
mov
sti
sbb
mov
sub
push
cmp
test
test
in
imul
mov
ret
mov
pop
xorl
jae
xchg
jp
in
cmp
push
pop
inc
jne
sbb
dec
gs
mov
push
popf
dec
pop
fidivrs
add
shrb
out
mov
mov
insl
in
sub
pushf
mov
pop
push
cmpsl
sub
popf
mov
sbb
mov
inc
cmc
das
add
std
ja
in
mov
scas
pop
lret
xchg
imul
push
aas
sahf
nop
neg
cmp
movsb
fstl
add
lcall
xor
mov
cld
std
hlt
push
call
cmp
fidivrs
lret
ja
popa
cmp
cld
push
pop
mov
jne
scas
lea
lea
das
nop
push
repnz
mov
dec
adc
sahf
daa
leave
mov
mov
pop
inc
ret
and
pop
add
xor
mov
mov
call
sub
mov
cwtl
daa
xor
movsb
push
xor
mov
clc
and
out
push
mov
sar
repnz
lahf
je
cmp
mov
negl
mov
sbb
aaa
orb
addr16
xchg
sub
adc
shlb
sub
or
lds
sub
mov
clc
fldl
jae
push
push
mov
push
insb
or
xor
dec
xchg
xchg
leave
jmp
cmp
fnstcw
jg
mov
cltd
push
mov
jne
call
xchg
xchg
or
dec
xor
cmp
dec
sub
stos
int3
or
mov
xchg
jp
pop
jno
or
sbb
shll
inc
fwait
mov
mov
xor
xchg
pop
clc
cmc
shl
adc
sbb
xor
jne
cli
cmpsl
in
pop
push
loop
std
pusha
add
je
fisttps
push
cmp
cmc
mov
lods
pop
lret
dec
xchg
push
mov
test
adcb
ljmp
mov
pop
push
mov
cmp
mov
dec
or
test
mov
repnz
push
iret
lahf
push
cld
adc
or
push
xchg
pop
icebp
jg
jns
inc
cld
pop
or
inc
xchg
int
add
lcall
jae
push
sbb
or
mov
push
cs
mov
jnp
cmp
movsb
repz
or
cmp
scas
imul
push
jg
aam
mov
fistpl
pop
insb
dec
mov
stc
inc
add
xchg
lret
stos
add
aaa
and
inc
mov
mov
dec
lods
add
or
cmp
jge
sbb
xorl
andl
adc
mov
adc
orb
data16
test
dec
push
lods
push
fidivrl
cmpl
in
scas
mov
sub
clc
mov
mov
pop
iret
xlat
or
add
mov
jge
cld
shll
or
lret
push
adc
in
inc
daa
push
mulb
mov
aad
xchg
mov
loopne
inc
sti
jl
loopne
adc
lret
mov
fdivp
mov
test
ret
push
pop
pusha
xor
and
jg
fcoml
xorb
push
adc
notb
adcb
jp
mov
es
cwtl
nop
movsb
inc
jae
mov
push
ds
and
adc
rcl
or
aam
pop
rol
mov
jne
inc
stos
add
xchg
shlb
jo
icebp
jns
pop
add
stc
out
push
fucomp
stos
sub
cmp
adc
mov
std
pop
fcmovnbe
aam
inc
mov
dec
cli
pop
scas
je
inc
mov
movsl
pop
in
or
dec
cltd
loop
aaa
clc
pslld
sahf
ret
lds
mov
cld
push
lods
mov
and
jno
inc
adc
jge
push
cmp
cmp
inc
int
mov
mov
les
inc
lds
mov
push
mov
sti
sti
mov
sub
fs
fldcw
cmp
xorb
fcompl
sub
pop
add
test
mov
mov
ret
xchg
insb
and
sub
pop
pop
sbb
sub
enter
and
in
push
mov
xchg
mov
rcll
out
aaa
test
pop
dec
dec
push
test
stos
sub
lahf
add
cmpb
fs
mov
popa
mov
ja
jmp
push
jne
bound
jp
sbb
stos
jg
mov
cs
fidivl
mov
dec
dec
cmp
test
jne
push
subb
xor
stos
and
sub
pop
add
cli
pop
mov
aam
push
ja
lcall
in
add
inc
mov
stc
or
lret
scas
adc
fwait
sbb
rcl
test
es
gs
call
mov
cmpps
push
cwtl
pop
cld
aam
pushf
push
daa
adc
dec
sbb
and
inc
xchg
scas
pop
out
xchg
pop
aas
push
clc
xchg
jno
xchg
inc
dec
mov
sarl
stc
out
popf
mov
push
ljmp
mov
das
pop
add
or
or
call
popf
push
cmp
pop
jae
jecxz
insb
imul
mov
popa
sub
mov
adc
mov
add
mov
push
popa
cli
sub
dec
inc
dec
cmp
rcrl
ret
das
jle
loop
dec
cmp
sbb
adc
pop
mov
inc
bound
hlt
movsl
bound
mov
dec
add
jnp
jmp
enter
fsubrl
fcmovbe
push
test
push
jnp
pop
lods
push
sti
or
popf
into
ljmp
mov
xchg
add
fbstp
pop
cmp
incl
cmp
jnp
hlt
or
stos
test
cmp
insl
les
mov
mov
cmp
jge
inc
xchg
adc
xchg
arpl
mov
sbb
test
jge
mov
daa
lret
pop
int3
aas
add
lds
lods
scas
cwtl
pop
sbb
loopne
cmpsl
mov
cmp
pop
loope
lcall
inc
xor
or
fcmovnb
add
cmc
jo
rcrb
test
enter
adc
xchg
stos
test
pop
xchg
jbe
mov
flds
scas
popf
mov
push
mov
xor
mov
add
xchg
lds
push
or
out
enter
and
mov
int3
cs
mov
push
rorl
jge
push
inc
xor
pop
jbe
or
lahf
sbb
or
insl
dec
aas
lret
pushf
ss
out
dec
pop
jns
shr
cmc
mov
push
adc
jns,pn
dec
push
pop
int3
dec
and
sti
add
outsl
cwtl
mov
lcall
out
mov
fnsave
inc
mov
push
loop
inc
cmc
mov
hlt
adc
cld
addr16
add
sub
mulb
push
adc
ret
dec
push
push
xorb
sub
cmp
outsb
scas
jmp
xchg
inc
mov
dec
pop
movsl
cltd
icebp
cld
sarl
add
xlat
mov
dec
stos
mov
xlat
sbbb
push
push
std
mov
adc
clc
xor
jb
push
xor
cmp
cld
fisubl
cltd
cld
mov
sub
mov
mov
mov
adc
inc
in
add
rorb
ret
sbb
mov
enter
cli
pop
cwtl
mov
stos
lods
fs
shll
icebp
mov
push
mov
xchg
lret
jecxz
jns
xchg
in
cmp
adc
push
outsb
pop
xor
cmp
cmova
mov
lea
mov
cs
in
out
js
jp
inc
inc
js
cmp
lahf
sub
inc
pop
mov
sti
mov
or
mov
xor
sbb
xchg
aam
lcall
xchg
pop
lods
movsb
and
int3
adc
loop
dec
notb
icebp
adc
and
sbb
stc
rcrb
or
adc
mov
adc
jb
aad
daa
inc
bound
cmp
jnp
push
ror
cmpl
cmp
dec
aas
xor
les
insl
int
xchg
or
test
js
stos
or
in
fiadds
stos
ds
arpl
vpaddb
jl
pop
enterw
push
popf
add
inc
out
push
mov
gs
and
push
rolb
xchg
icebp
mov
and
test
add
jbe
cmp
mov
jbe
mov
xchg
jb
jge
in
jns
pop
xchg
sbb
mov
push
outsl
fmull
arpl
ret
mov
imul
imul
scas
scas
add
insb
mov
lds
leave
xor
jp
cmp
icebp
inc
jle
leave
inc
shll
fsts
repnz
in
xchg
loop
jle
sahf
dec
pop
dec
cmp
fwait
push
inc
mov
cmpsb
push
cmp
cld
insl
mov
pop
cmovnp
cmc
or
pop
fs
push
stc
push
xor
push
jne
ja
int
out
push
imul
xor
aaa
cmp
rolb
hlt
pusha
mov
mov
xorb
popa
sbb
repnz
xlat
cmpsb
fildll
out
pushf
into
jmp
pop
mov
and
pop
mov
pop
mov
sub
cmp
xor
cmp
sbb
push
inc
js
cmp
jne
lahf
test
pop
fisubs
pop
int3
test
cld
add
mov
lret
jno
and
out
mov
mov
pop
in
jo
mov
xor
jmp
xor
push
enter
mov
stc
es
cmp
addb
mov
push
cmp
mov
shlb
mov
dec
imul
imul
jno
or
add
lret
or
int3
outsl
sub
jae
inc
jp
jp
mov
cmp
cs
outsl
rcrl
test
jb
ja
ljmp
ss
lcall
mov
push
test
jne
imull
stc
pop
sbb
xlat
and
js
mov
in
popf
xor
xlat
sarb
xor
rclb
jne
mov
xchg
jge
jns
cmp
mov
lret
mov
pop
jne
enter
cmc
out
jns
movsl
sbb
xor
fdivl
imul
mov
pushf
cs
cwtl
pmaxub
inc
int
sub
and
jae
and
lock
cmp
cli
ret
lret
ret
inc
mov
and
cmpsl
lods
sti
mov
dec
out
pop
ret
cli
cltd
mov
cmp
fadds
add
pusha
es
push
mov
cld
jo
mov
or
lods
pushf
icebp
movb
inc
in
dec
and
icebp
ljmp
dec
add
inc
cld
pushf
cwtl
adc
pop
std
lret
add
pop
call
out
aas
fnstcw
adc
push
add
lea
sbb
xor
rcl
shl
cli
mov
mov
test
jbe
jnp
mov
std
adc
pop
mov
fistpll
mov
and
mov
push
scas
rolb
scas
daa
int3
adc
xchg
or
add
fs
outsl
outsb
clc
shrb
and
xchg
orl
dec
adc
xchg
push
sub
fwait
lods
outsb
cltd
add
jno
addr16
lock
aam
ret
sbb
lods
sub
movsl
imull
jmp
daa
loopne
mov
ja
cmpb
cli
cmp
jbe
xchg
sub
pusha
add
shll
inc
fisttpl
or
inc
leave
add
add
and
es
mov
mov
xor
aam
push
scas
insl
inc
and
cmp
mov
loop
ficoms
cmc
dec
xor
jge
lods
into
mov
mov
lods
popf
insb
mov
arpl
and
dec
sub
jle
icebp
dec
inc
les
sub
arpl
aam
aas
xchg
lea
stc
inc
ja
fs
xchg
inc
fstps
cwtl
test
mov
int
cmp
or
mov
cmp
loop
pusha
push
cmp
add
push
pop
jg
sub
nop
dec
xchg
xchg
iret
sub
mov
idivl
sbb
mov
push
adc
add
sbb
sbb
sbb
push
lret
sbb
js
cmp
sbb
lods
scas
xchg
push
and
enter
adc
xor
mov
int
jo
rol
mov
lds
pushl
dec
jno
rcrb
hlt
cmp
mov
pop
mov
shll
pop
imul
mov
pop
xor
outsl
jl
or
je
cmp
and
scas
leave
and
ja
xor
cmp
cltd
pop
xchg
inc
sbb
cs
add
push
xor
mov
sbb
and
out
adc
test
aas
inc
dec
and
ds
shrb
sub
xor
or
shrb
lock
scas
fiaddl
and
xchg
jae
xor
add
jns
addl
or
push
jbe
pushl
in
pop
data16
test
call
pop
aas
pop
add
xchg
push
mov
jp
jns
ffree
adc
cmp
mov
push
and
push
fs
ljmp
aad
clc
push
jge
lock
push
sbb
jecxz
and
les
push
ljmp
in
call
cmc
inc
sbb
sub
push
ja
aad
or
xchg
sarb
inc
mov
rorb
rcl
lock
sub
dec
adc
and
sar
loope
xor
imul
jge
pop
lods
shrl
inc
sbb
mov
push
dec
repz
fbld
pop
push
jl
lods
push
pop
lahf
cmp
in
sbb
or
and
push
or
outsb
ja
add
push
movsl
dec
out
hlt
pop
pop
push
jno
push
xor
loopne
adcb
xor
ret
inc
jnp
pop
and
xchg
ljmp
xchg
ret
jmp
sahf
bound
dec
push
push
sahf
jmp
enter
add
aas
push
pop
or
scas
imul
fwait
lods
shll
repnz
adc
pop
ret
mov
lods
and
cmc
cmp
aam
mov
aad
xor
pusha
lcall
jg
sar
xor
rorb
pop
lods
and
out
sbbl
cmpsb
sarb
out
sbbb
cmp
test
sub
mov
lcall
stos
testb
xchg
add
pop
cmp
mov
adc
jno
push
pop
xor
mov
pop
mov
cmp
in
loopne
pop
jne
jge
es
jns
stos
pop
jl
xlat
out
sti
jnp
in
xchg
ljmp
xor
cmpsb
mov
shl
ds
jnp
out
lods
push
pop
mov
call
cltd
fcompl
aad
push
bound
xor
inc
cli
mov
test
adc
cmp
push
ljmp
inc
xchg
int
fnsave
sub
mov
lods
jo
add
push
in
aam
mov
std
pop
xorb
sbb
jle
scas
sbb
addl
fimuls
jg
cmp
aad
repz
jg
in
or
jno
notl
out
std
adc
repnz
xor
cmp
lods
cmc
leave
gs
cmp
cmp
cmpl
or
and
sub
aad
and
movsl
mov
add
js
pop
xchg
leave
xor
jge
addr16
push
jle
push
lock
sub
and
andl
dec
pop
nop
push
adc
js
push
popf
jmp
dec
mov
sbb
adc
jnp
xchg
rcrl
or
call
aad
fistps
iret
insl
push
rcll
push
pushf
repnz
pop
inc
cmp
lds
sarl
push
push
cmp
stos
sbb
push
fisubrl
and
adc
clc
orb
cli
cmc
push
or
lock
mov
xor
fwait
xchg
mov
jnp
add
mov
scas
int3
adc
sbb
loope
pop
aam
loop
xor
fldcw
mov
insl
test
pop
nop
push
inc
fsubs
or
push
out
inc
xchg
push
loop
pop
pop
adc
inc
sarb
xor
mov
lods
loope,pt
adc
inc
and
fsubs
repnz
push
filds
mov
push
outsl
jbe
inc
cmp
sti
or
add
mov
enter
lret
cmp
scas
pushf
loopne
xchg
add
in
loopne
jae
push
popa
or
ret
je
adc
outsb
scas
scas
loop
inc
test
lret
ret
pop
outsl
int3
mov
stc
out
mov
in
xor
rol
test
sbb
jae
dec
incb
mov
shrb
test
xchg
mov
lods
add
popa
fwait
out
mov
mov
rorb
jae
bound
and
mov
push
arpl
xchg
insb
mov
pop
add
push
mov
mull
shll
cltd
inc
int
sub
fldl
loop
adc
fldcw
test
int3
xor
and
test
adc
jg
popa
cmp
orb
mov
lods
add
sbbl
mov
pop
xchg
test
outsl
dec
mov
pop
ds
les
les
jmp
xor
add
mov
mov
imul
cld
pmulhuw
sub
and
dec
inc
xor
push
sub
sbbl
jae
out
arpl
fs
xchg
insl
test
push
mov
push
stos
sub
pop
dec
into
sbb
mov
nop
push
outsl
mov
sub
sub
inc
call
inc
cmpsl
lahf
mov
subb
iret
dec
popf
and
imul
aam
mov
imul
insl
xor
in
sbb
lods
or
jp
xchg
push
out
cmc
and
lret
adc
xchg
adc
leave
pop
push
lea
mov
xchg
xchg
or
jg
mov
jl
ss
mov
addr16
sub
pop
js
or
cltd
idiv
push
mov
andb
stos
pop
rorl
js
pusha
cwtl
xchg
sarb
push
fwait
push
fistpll
cmp
pusha
sub
xchg
cmp
insb
fsubrs
sti
rorb
es
mov
mov
sbb
mov
mov
aam
enter
push
sbb
clc
xchg
sub
ss
push
xchg
sbb
jns
cmpsb
sti
aam
adc
out
push
fidivrs
push
mov
aam
sbb
push
pop
scas
inc
inc
add
icebp
cmp
xchg
fimull
xor
aam
aam
and
in
lock
js
sbb
sbb
popa
inc
mov
iret
enter
call
sarb
cmp
sahf
dec
cwtl
adc
ds
xor
loope
mov
outsb
mov
loope
pushf
hlt
mov
sbb
sbb
arpl
adc
aad
int3
or
data16
mov
xchg
lcall
insb
cwtl
rep
mov
aam
push
push
inc
test
pop
mov
sbb
ror
add
scas
mov
test
fidivrs
mov
sub
scas
adc
sbb
mov
mov
outsl
imul
jns
cmpsb
inc
dec
mull
stos
test
movb
ficompl
sub
pop
dec
test
cltd
iret
pusha
subb
mov
daa
aad
adc
pop
in
mov
loop
jl
and
add
shll
popa
lret
insb
fcomi
xchg
push
jmp
inc
mov
add
fsts
outsb
or
cmp
xor
leave
popa
pop
mov
xor
and
cwtl
cmpsb
test
pop
and
jbe
sub
dec
imul
sub
shlb
cmp
pop
mov
xchg
jbe
mov
or
out
pop
fdivrl
mov
push
clc
jno
push
jle
pop
test
mov
mov
cmpsl
dec
xchg
jno
sub
mov
test
daa
mov
mov
adc
div
pop
adc
lret
mov
lret
bound
punpckldq
push
sub
jmp
and
orb
scas
das
into
test
adc
notrack
xchg
add
pop
aaa
aas
and
pop
mov
xchg
xor
test
jnp
mov
jns
mov
mov
push
adc
cld
pop
movsb
push
jae
int3
pop
xor
adc
cmp
sahf
or
loopne
loopne
inc
inc
mov
iret
fldl2t
cwtl
pop
fistl
stos
popf
pause
add
xor
ret
aam
mov
dec
push
push
mov
jns
enter
psrlq
ret
xchg
mov
mov
pop
mov
jg
or
sub
add
jmp
or
push
mov
nop
jns
dec
inc
mov
add
dec
in
nop
mov
bound
mov
pop
addb
dec
out
sahf
imulb
fdivr
jnp
jl
or
mov
pop
add
sbb
addr16
cmc
adcl
roll
mov
xor
cld
dec
addl
imul
into
outsl
cmp
jl
ja
jge
fmul
or
and
mov
stos
pop
inc
jmp
enter
clc
mov
mov
shrb
mov
push
gs
adc
mov
aas
in
inc
mov
or
pop
xchg
add
dec
loope
mov
pop
add
jle
repz
in
fiadds
mov
mov
inc
pushf
aad
call
mov
int
addl
sarl
inc
xchg
in
adc
or
in
dec
sbb
lods
and
imulb
inc
inc
mov
loopne
lds
push
add
andl
lods
scas
xor
jle
jo
pop
ror
mov
or
add
sbb
cltd
inc
mov
mov
outsl
xchg
dec
fistpll
shll
daa
mov
cmp
lea
xchg
xchg
mov
mov
movsb
sub
pop
cmp
in
pusha
or
cmp
lret
mov
adc
sbb
bound
mov
xor
imulb
int3
in
sub
and
mov
in
ffree
push
leave
xchg
das
adc
out
mov
in
xchg
dec
popf
in
lret
dec
cmpb
das
shlb
push
aas
push
rcll
mov
sbb
arpl
clc
pop
pop
popa
inc
adc
push
dec
cmc
int3
push
or
inc
pop
ret
sub
adc
push
aad
pushf
test
cmc
mulb
sbbl
add
adc
dec
andps
xchg
ds
push
sub
push
fsubrl
xor
test
out
arpl
push
xchg
push
mov
and
aad
pop
jecxz
aas
jb
inc
jns
push
push
into
sub
lahf
push
scas
hlt
adc
xor
or
fdiv
dec
std
sti
add
es
test
pop
pop
push
push
cltd
jns
or
shll
pop
test
add
out
ret
ret
or
dec
stc
les
loop
aam
out
mov
mov
rorb
dec
mov
andl
scas
mov
divl
outsl
dec
sbb
pop
cmpsb
mov
jne
sub
and
sub
dec
jg
cmp
sub
pushf
sub
mov
shll
sahf
js
cmp
jle
xchg
shll
jnp
cmpsb
xchg
lea
xchg
rcrb
lods
loopne,pt
lcall
sub
in
xlat
dec
mov
daa
cmp
jmp
mov
cli
sbb
sbb
mov
mov
pop
inc
push
cmp
and
lcall
cmc
or
lods
add
dec
fidivs
push
sbb
jno
push
jl
popf
adc
mov
pop
inc
add
clc
fs
pop
jp
stos
add
cmp
mov
cmp
sbb
push
lahf
jl
fmul
cmp
jno
xchg
int3
sbb
testl
orb
rolb
outsl
nop
incl
fidivrl
xor
sbbb
insl
out
hlt
fistl
mov
mov
mov
addr16
adc
loopne
mov
cmp
cmc
xchg
cmp
mov
jl
xchg
in
adc
fcoms
and
adc
push
push
mov
xchg
lds
cs
push
mov
in
popa
push
cwtl
mov
int3
or
mov
pop
jbe
cmp
inc
icebp
and
test
daa
adc
ljmp
jg
mov
cwtl
cs
divl
inc
mov
mov
add
aam
imulb
int
loope
jmp
push
xchg
push
add
dec
sbb
push
andl
push
mov
xor
test
jae
push
ds
scas
stc
in
rcrb
stos
jno
into
sbb
out
inc
test
mov
mov
add
cmp
cs
mov
push
rolb
iret
xlat
mov
shrl
mov
and
std
cmp
les
cmpsb
add
xchg
rcl
jo
sub
aad
icebp
mov
lahf
das
cwtl
cmpsl
cmp
mov
add
movsb
out
and
ret
push
cwtl
in
pusha
xorb
mov
pusha
mov
aaa
sub
add
icebp
in
push
loop
outsl
sub
mov
cs
adc
mov
in
ret
xchg
dec
sbb
sbb
sbb
pop
dec
add
out
xchg
xor
std
popa
lahf
loop
mov
sbb
add
mov
push
xchg
dec
hlt
mov
push
sbb
sbb
test
sbb
mov
jnp
xor
xchg
adc
ja
pop
jno
loopne
xor
mov
cmc
push
fdivrs
sub
push
dec
les
or
push
in
push
ja
loope
addr16
arpl
add
test
test
sub
mov
mov
test
leave
sbb
dec
in
push
mov
push
jge
and
sub
pop
pop
lods
mov
lock
lret
lret
push
mov
daa
call
jne
mov
pop
pop
mov
std
xchg
push
mov
cltd
mov
xchg
inc
sahf
push
je
push
out
push
jno
loope
scas
sbb
mov
hlt
inc
outsb
dec
jg
or
pop
inc
repnz
mov
mov
jecxz
ret
adc
push
icebp
xchg
cmpl
leave
push
xchg
xchg
or
nop
mov
clc
fldt
das
pop
mov
repnz
push
popa
and
movsb
pushf
cmpb
dec
outsb
mov
lods
cmpl
jbe
sub
jne
cwtl
add
sub
mov
xor
sub
mov
and
cmp
xchg
cmpl
cmp
in
xor
vmwrite
jge
pop
dec
sbb
mov
ror
xor
jno
shlb
inc
push
shll
mov
xor
inc
aas
fldenv
inc
das
addr16
xchg
lret
sub
mulb
xchg
sbbl
addb
inc
xchg
insl
cmp
nop
clc
fs
jg
pop
adcl
inc
filds
daa
loopne
test
call
in
pop
iret
jo
pop
mov
sub
roll
mov
lret
jo
sub
mov
xor
sub
pushf
dec
sbb
ljmp
sub
rclb
cmp
mov
push
test
cmc
ljmp
lret
loope
xor
xor
clc
dec
hlt
fwait
cmc
nop
std
ja
dec
fucomip
repnz
shl
fdivl
addr16
fnsave
mov
xchg
inc
mov
daa
pop
push
pop
xor
enter
cmc
mov
xor
and
dec
mov
adc
sti
test
dec
add
or
arpl
rcl
xor
and
les
jl
mov
pop
lret
mov
cmp
mov
leave
xchg
cmp
into
sbb
add
xchg
sub
lar
into
test
int
pop
xchg
movsb
mov
in
cmp
mov
stos
clc
insl
subps
xchg
cs
adc
cmp
out
xchg
and
mov
nop
mov
fadds
ret
push
xchg
rcrb
xchg
out
fsubrl
addr16
inc
sub
daa
and
pop
shlb
add
fcompp
xchg
addb
lds
sub
sub
xchg
ffree
xchg
inc
into
cli
fisubl
adc
scas
add
mov
push
push
ds
xchg
xor
adc
xor
fisubrs
xor
ljmp
and
or
out
out
into
outsb
out
repz
mov
pop
je
cmpsl
idivb
mov
mov
jnp
pusha
xor
or
jno
lods
or
lcall
jmp
cmp
add
lahf
dec
stc
mov
xor
cmp
adcl
sbb
sub
cmpsl
aas
loopne
pushw
bound
arpl
lcall
and
mov
sub
push
loopne
sub
mov
push
push
xor
sahf
test
out
mov
popa
push
sarb
scas
mov
nop
add
pop
dec
inc
or
push
imul
pop
std
add
push
jmp
lcall
push
test
or
and
add
jp
sarl
ljmp
lods
fisttpll
mov
arpl
bound
push
imul
sub
push
xchg
adc
jbe
cmp
cltd
mov
fldenv
jl
sub
movsb
push
loop
shll
adc
inc
cs
push
out
dec
pop
jae
pusha
mov
lods
mov
mov
cmp
mov
xchg
mov
out
cs
xor
fnstcw
icebp
cli
repz
push
fcomp
mov
push
push
mov
jno
dec
sbb
mov
mov
std
cmp
pop
cmp
aam
adc
mov
lods
icebp
roll
aad
dec
cli
lret
sub
loopne
mov
insl
loope
push
adc
mov
enter
rcll
pop
sti
rol
fs
ljmp
int3
or
pop
pop
pop
cmpl
cmpsb
mov
outsb
add
sbb
std
mov
cmp
ret
cmp
cmpsl
imul
mov
push
bound
adc
jp
rorl
xchg
rorb
xor
pop
inc
scas
js
inc
imulb
shl
repz
movsl
scas
ljmp
mov
jmp
pop
std
mov
fndisi(8087
stc
bndldx
into
mov
lds
lods
xor
bound
or
imul
rclb
test
mov
jne
les
ret
scas
pop
inc
repz
sbb
mov
mov
jmp
ss
jl
push
xor
cmp
jno
loopne
lret
mov
xor
lds
iret
stc
push
mov
cmp
rcll
inc
cmp
jge
out
mov
insb
mov
jae
movsb
cmpsl
sbb
test
adc
sub
and
push
loop
andl
insb
imul
sbb
test
fcmovnbe
xchg
jne
movsb
pop
mov
push
sub
mov
outsl
jae
adc
stc
adc
inc
mov
sub
and
pop
cli
cltd
enter
fucomip
loope
xchg
lahf
loope
int3
pop
xlat
lea
mov
cmp
xchg
jnp
sub
push
or
and
cmp
cld
mov
mov
mov
xchg
push
in
cmc
sub
fwait
sbb
lret
or
inc
xor
add
sbb
dec
sti
pop
xchg
jne
mov
mov
or
rol
jae
inc
addr16
add
push
mov
push
xchg
push
cmpsl
push
mov
sbb
xchg
popf
pop
lret
fdivrs
sub
jo
ja
jle
das
mov
xchg
xchg
in
in
sarb
jns
inc
cltd
lds
pushf
add
jb
lock
push
rcrl
imul
xchg
and
pop
and
dec
push
ret
outsl
cld
lret
dec
or
inc
add
test
ds
int3
addl
lock
xor
lea
dec
mov
jl
push
push
mov
stos
sbb
sbb
jmp
scas
fldenv
sub
hlt
jg
shll
aad
mov
test
std
test
cmpsb
and
adc
lea
inc
hlt
sbb
fists
loope
dec
mov
loopne
jae
leave
aad
popf
push
or
sbb
rcl
popa
sbb
movsb
rorl
insl
outsb
aas
addb
cmp
fcomps
jmp
sub
jle
sub
in
fdivrs
and
repnz
cmp
push
mov
dec
jnp
pop
in
jo
in
pop
mov
push
sub
add
gs
jns
rcll
lods
xchg
jge
inc
cwtl
mov
aad
push
sti
imul
aas
iret
mov
xchg
cmc
mov
dec
aad
repnz
xor
jb
xorl
in
js
adc
out
pop
ljmp
rolb
out
jne
cld
in
pop
mov
insb
cmp
add
mov
clc
aad
mov
scas
push
in
js
insb
gs
lret
loope
jnp
lds
pop
mov
xchg
gs
xchg
sahf
int
jb
fstpt
fwait
test
inc
loop
cmp
inc
movsb
or
sbb
xlat
cs
xor
mov
jg
jle
mov
stc
ljmp
cmp
xor
sbb
mov
ret
dec
or
rcr
sub
xchg
add
ljmp
lods
data16
cmc
push
dec
dec
shrl
fucomi
aad
adc
dec
push
mov
scas
fdivr
xlat
les
cmp
sahf
jne
stos
repnz
mov
aaa
pop
jno
cmp
ljmp
shll
pop
sub
int3
inc
ja
add
mov
adc
cmp
scas
lea
xor
lods
daa
jmp
cmp
stos
adc
cmp
cli
mov
cltd
std
and
lret
dec
repnz
repnz
ja
and
stc
cmpsb
push
mov
lret
nop
sub
cmp
inc
mov
add
testl
imul
pop
mov
sti
adc
ja
rcrl
lea
mov
mov
and
jo
mov
cli
popf
loop
jp
test
in
movsb
in
dec
sbb
cld
or
lods
add
movsl
outsb
xor
lods
cmc
fcmovnb
out
out
lahf
into
push
arpl
cmp
and
pop
push
push
mov
in
jne
pop
nop
xchg
or
iret
xor
fmull
std
inc
and
out
out
js
mov
inc
call
mov
jb
js
xchg
jnp
rorl
mov
cmpl
loope
stc
mov
int
mov
xlat
mov
scas
jno
push
adc
mov
dec
popa
nop
sti
popa
sbb
icebp
mov
adc
loope
mov
dec
movsl
lcall
sti
insb
jg
leave
hlt
push
cmc
sbb
xor
insb
mov
push
xchg
andb
sbb
je
sbb
adc
sahf
adc
icebp
xchg
test
jmp
sbb
ret
stc
dec
pop
clc
rclb
imul
dec
addr16
shll
pop
imul
inc
jne
mov
mov
movsb
xor
cmp
xor
sub
js
clc
shrl
daa
movsb
movsl
dec
push
sbb
orl
jg
xchg
sbb
cli
xchg
pop
sbb
fndisi(8087
sub
or
cs
dec
out
lret
xchg
xchg
push
pop
aad
dec
inc
inc
push
push
dec
je
in
cli
mov
xchg
or
pop
mov
arpl
pushf
subb
dec
and
fisubs
and
jl
shrb
sub
lea
into
push
cmp
dec
aam
pop
cmpsl
das
push
fninit
fistpll
xor
mov
dec
push
xchg
xchg
test
mov
pushf
cmp
cmp
add
pop
mov
dec
push
inc
js
xchg
les
insl
into
push
xchg
mov
loop
or
lds
rcl
sub
jge
addb
jne
xchg
push
dec
xor
pop
xor
or
cmpsb
sahf
mov
js
or
mov
mov
imul
add
jns
and
and
imul
sbb
fwait
andl
ja
fisttpll
fldt
and
xchg
iret
hlt
movsb
cmpsl
mov
lcall
lcall
adcl
xchg
pop
push
inc
sub
stos
mov
test
jb
in
dec
push
xchg
mov
add
sbb
shrb
sahf
mov
sahf
loop
mov
or
xor
out
js
lods
and
add
cmc
push
lret
icebp
ficompl
addl
stos
add
dec
jb
inc
sbb
xchg
cld
inc
ss
fsubrl
dec
jle
pop
sahf
mov
inc
mov
test
push
lods
insl
lahf
xchg
cmc
int
in
popfw
jmp
cmpsl
mov
mov
dec
xchg
xor
jns
addr16
jecxz
adc
shrl
jns
in
dec
mov
je
cmp
push
popl
rolb
adc
icebp
dec
adc
incb
pop
std
jp
jnp
xlat
xchg
aad
mov
ljmp
push
cltd
dec
adcl
std
stc
out
pop
push
xchg
xor
insb
icebp
in
lret
jno
aam
daa
scas
cli
adc
cmp
andb
and
jb
repnz
add
or
pop
push
cmp
test
rorl
push
js
int3
push
inc
pushf
xor
movsb
jbe
adc
inc
and
push
mov
leave
mov
addb
adc
cmp
out
fwait
popa
test
jg
rcrb
jno
enter
sarl
or
adc
push
dec
mov
push
repnz
mov
std
sahf
fldenv
fsubrs
lahf
cwtl
cmp
adc
aas
jbe
mov
xchg
jp
mov
arpl
cltd
mov
inc
repnz
lock
loop
pop
mov
and
push
push
mov
push
dec
les
lods
ds
lahf
repz
rcl
pop
cmp
scas
scas
sub
out
jecxz
lret
sbb
sub
xchg
push
cmp
mov
into
sti
shll
xchg
mov
in
push
lret
decl
adc
ret
das
jl
and
ficoms
cmpsl
call
inc
push
jo
sti
inc
dec
pop
imul
or
xchg
xchg
sub
in
push
sub
lods
bound
inc
sbb
add
xrelease
add
mov
dec
fistps
in
pop
jmp
jp
adcb
cmpb
ret
cli
xor
mov
mov
jmp
orl
test
push
sti
xor
mov
xor
push
cltd
inc
mov
pop
and
adc
fisttps
pusha
enter
push
xorb
shrb
test
cmp
jl
pushf
cmp
and
adc
and
iret
andb
inc
subl
fcompl
push
xchg
enter
sbb
les
xor
push
mov
das
xchg
ret
in
push
push
das
and
push
adc
call
push
gs
fists
int
adc
daa
inc
push
cmp
stc
out
je
cmp
mov
xlat
fsincos
jbe
add
loopne
testl
mov
mov
into
mov
int3
and
mov
sub
fisubl
push
es
shll
pop
adc
jg
add
das
cmp
add
fwait
shlb
push
adc
cmp
inc
sbb
adc
adc
push
repz
jbe
mov
fsubrl
or
leave
pushf
and
xlat
popf
mov
push
cld
xchg
mov
xchg
mov
adc
or
mov
jae
insb
pop
sbb
scas
sub
dec
test
pop
imul
loope
inc
stos
cmp
lock
add
inc
mov
mov
xchg
or
outsb
movsb
lea
mov
push
ss
cwtl
jo
xor
cmpl
shl
mov
shrb
push
arpl
push
and
push
sti
rorb
popa
popf
aas
mov
fwait
inc
mov
out
or
lods
mov
in
shl
sub
xchg
outsb
jb
and
pop
data16
mov
xchg
test
mov
popa
pop
cld
lahf
mov
xor
mov
repnz
mov
outsl
mov
fsubrs
push
icebp
and
xchg
and
js,pn
mov
testb
add
add
int
leave
push
lock
test
int3
movsl
pop
inc
mov
sub
outsl
mov
push
scas
pop
cmpsb
add
xchg
test
fidivrl
sbb
cli
xor
xor
add
rcr
aaa
add
add
leave
fildl
mov
add
loope
push
rol
cltd
loopne
loope
test
cld
gs
loop
arpl
call
jo
testl
add
notl
dec
popf
divl
xor
aam
int3
mov
jge
sti
and
mov
mov
jb
lods
insb
fldt
push
movsb
xchg
rcl
push
pop
sub
outsb
nop
cld
stos
sahf
fstp
cld
sub
fdiv
std
pop
push
mov
cmp
or
inc
push
adc
dec
pop
mov
es
test
aam
inc
lahf
shlb
inc
icebp
sahf
adc
xchg
iret
jmp
xchg
push
gs
or
mov
pop
lods
sarb
cld
add
push
aad
xchg
lock
mov
sbb
call
std
or
inc
pop
dec
popa
aas
lock
mov
js
outsb
xor
inc
out
cmp
adc
cmp
in
and
push
test
fisttps
jecxz
insl
or
and
movsl
mov
scas
cld
fwait
adc
xlat
pusha
jg
sub
xor
adc
bound
dec
push
imul
sbb
shrl
push
pop
es
xor
imulb
push
jns
fucomi
sub
pop
call
fsubrs
xor
in
es
test
mov
roll
push
shlb
mov
data16
in
sti
and
or
daa
jne
or
adc
into
mov
push
addr16
aad
testb
cmp
inc
and
std
add
sub
push
inc
mov
jb
jb
sahf
popa
pop
fmull
or
or
pushf
sbb
popa
pop
push
imul
push
jg
inc
insb
push
lods
shll
cltd
sbb
inc
lret
std
mov
mov
ret
lahf
es
subb
repnz
jns
scas
ret
shll
add
jno
bound
mov
xchg
xchg
out
sbb
push
pop
mov
loope
or
mov
mov
movsl
xchg
aam
adc
addl
add
cmpsb
leave
arpl
cld
adc
negb
int3
out
dec
sti
push
in
pop
sbb
jmp
stc
inc
jno
dec
mov
ret
pushf
inc
mov
jb
jmp
lret
ret
mov
stc
xchg
fcompl
sti
pusha
shll
repnz
mov
cmc
mov
lret
fwait
dec
sahf
push
rcrb
andl
mov
fists
mov
mov
mov
mov
cli
sbb
lods
push
inc
or
lods
pop
leave
jl
loope
add
daa
cli
inc
xchg
or
addr16
jg
push
out
xchg
jp
mov
mov
sbb
push
pop
xor
out
ficoms
mov
mov
jnp
pop
cwtl
int3
jle
add
adc
mov
sahf
dec
sbb
fstpl
in
mov
inc
ja
push
and
shll
sbb
stc
pop
lret
push
stc
in
mov
adc
push
icebp
sub
sahf
add
or
movsb
fimuls
xor
cwtl
mov
jb
xchg
test
aaa
mov
cmp
and
or
dec
mov
in
lahf
lcall
addr16
aas
dec
enter
mov
mov
mov
gs
data16
stos
outsb
out
pop
outsl
mov
pop
mov
push
mov
inc
les
push
out
fsubs
sbb
xchg
add
jb
xor
popf
rclb
dec
mov
inc
fidivrs
imul
sub
xor
ss
add
xchg
jl
enter
cmp
push
push
movsl
jge
push
jno
mov
movsl
ret
mov
or
jnp
repz
mov
not
test
cmp
pop
fprem1
mov
mov
inc
cli
or
push
out
sub
or
icebp
pop
int3
incb
push
pop
add
mov
aas
adc
bound
stc
out
insl
shll
popf
call
mov
cmpsl
cli
popf
les
pop
pop
or
cmpsl
inc
fisttps
in
movups
mov
f2xm1
pushf
aad
xor
stc
push
icebp
xchg
jo
ljmp
push
and
sbb
inc
sub
dec
insb
sbb
cmc
clc
cli
popf
push
push
xlat
add
test
ja
ss
or
sbb
sbb
sbb
xor
movsl
push
xor
jg
jmp
lahf
cmp
mov
decb
adcb
imul
mov
cs
fistps
inc
push
aad
iret
push
in
dec
inc
fsubrl
mov
add
testl
dec
push
sub
jmp
repz
sbb
xchg
mov
dec
nop
and
dec
movsl
addr16
dec
es
mov
pop
aas
daa
pop
daa
mov
rcl
sbb
cmpsb
test
sbb
aam
inc
nop
adc
xchg
out
xlat
and
int3
mov
fcomps
shrl
into
push
adc
scas
push
jge
shrl
imull
lods
divl
push
bound
or
xchg
push
jne
pop
dec
rolb
mov
mov
push
dec
xor
loopne
dec
addr16
inc
das
lock
adc
and
sub
add
add
and
test
jne
pop
xorb
cmpsl
rcr
stos
out
leave
xlat
jp
dec
jne
lret
insl
fidivrs
or
dec
pop
sub
mov
data16
inc
add
cmp
mov
jo
stc
and
xor
mov
push
sbb
hlt
scas
push
es
mov
pop
lret
fs
push
push
outsl
out
inc
incl
mov
movl
dec
push
xchg
adc
or
push
push
into
stos
stos
test
dec
sbb
cld
scas
out
js
cmp
pop
xchg
dec
or
cmp
sub
repnz
fidivrs
movb
or
gs
xor
add
rorb
jne
dec
adc
stos
decl
push
jns
lock
add
mov
mov
mov
shl
neg
mov
inc
lahf
lcall
sub
call
sub
mov
inc
mov
je
or
mov
in
sbb
mov
shll
fadds
jge
add
dec
xor
jmp
repz
aas
xor
dec
lcall
push
fwait
rol
sbb
scas
pop
ds
icebp
les
lret
dec
inc
aad
push
sbb
adc
add
pop
stos
repnz
popf
or
cmp
jne
mov
out
sbb
in
sahf
cmp
cmpl
cld
data16
xor
loopne
lahf
xchg
fstps
pop
dec
push
lcall
faddp
fisubrl
popa
xchg
adc
jl
sub
stc
sub
loope
pop
lcall
sbbb
popf
in
iret
jnp
popf
add
loopne
mov
aas
inc
sub
jmp
insb
cli
test
jae
ds
mov
sub
add
add
stos
or
sbb
jb
leave
mov
inc
lock
cld
movsl
shlb
jle
cld
mov
inc
cld
add
test
mov
jns
into
inc
jo
inc
lods
outsl
and
mov
popa
or
movsl
mov
out
dec
mov
int3
dec
fldt
stos
xor
xor
xlat
push
sub
in
ja
call
and
mov
aaa
call
jnp
fcomps
in
les
adc
roll
jp
mov
push
jb
push
mov
inc
mov
aas
repnz
sbb
xchg
cld
push
jl
ja
in
dec
stc
rcl
jp
sbb
sbb
and
mov
push
pop
popa
pop
pop
xchg
add
add
jmp
dec
cmp
inc
loopne
in
sbb
mull
mov
inc
sti
je
xchg
ret
and
dec
xchg
xchg
dec
mov
mov
xor
testb
mov
mov
cmp
mov
subl
jb
jns
sahf
addr16
dec
xchg
cmp
jne
lods
fisttpll
sbb
push
or
outsb
cmpsl
loop
xor
jecxz
je
movsb
icebp
iret
inc
sub
jl
dec
cmp
loop
adc
jb
fmul
neg
addr16
loopne
mov
sahf
popf
sbb
push
mov
sti
pushl
dec
ret
mov
adc
cmc
das
adc
fs
cmp
mov
pop
sahf
sbbb
loope
adc
movsb
les
xor
leave
pmulhuw
sahf
into
cmc
pop
cmp
dec
push
and
or
xchg
pop
mov
dec
jo
cmp
push
xchg
push
dec
mov
cmp
scas
and
xchg
bound
mov
mov
lret
xchg
frstor
imul
fidivrl
jle
xor
fstl
push
jne
loopne
fisubs
jne
mov
mov
frstor
mov
xchg
dec
mov
mov
push
stos
cmpb
mov
jmp
xchg
add
sub
lahf
push
std
hlt
int3
cmp
pop
das
jbe
data16
xor
add
push
sub
mov
ret
mov
iret
pusha
xchg
mov
insl
mov
mov
pop
and
outsl
je
popf
inc
ret
loope
mov
sub
sbb
cmp
popa
aaa
pusha
lea
cmp
sbb
mov
pop
pop
jns
ja
xor
xor
popf
in
inc
sbb
out
pop
je
ljmp
das
mov
inc
enter
test
adc
ror
popf
adc
cltd
pop
pop
leave
lock
push
sbb
or
add
mov
dec
mov
inc
cs
push
dec
add
dec
bound
mov
aad
jno
and
sahf
xor
cmp
outsb
mov
into
mov
jecxz
addb
cmp
jmp
mov
in
mov
push
push
push
das
lock
sub
push
test
sub
adc
es
pop
fldz
mov
pop
and
xchg
rorb
or
inc
insb
fdiv
mov
sbb
iret
push
inc
sbb
insb
adc
in
imul
sbb
mov
dec
mov
jecxz
add
inc
call
sub
dec
hlt
mov
sub
lcall
out
adc
sti
scas
jns
mov
xchg
call
dec
cmpsb
mov
pop
lock
xchg
inc
sarb
ret
out
sub
clc
mov
lea
enter
sahf
mov
jns
cmp
inc
dec
adc
mov
dec
or
cmpsl
pop
mov
mov
xor
jge
sub
idivl
xchg
mov
fisubrl
xor
stc
sarb
mov
cmp
dec
daa
pop
cld
inc
adc
bound
sub
jg
mov
sub
cmpsb
mov
fldl
push
jbe
xor
icebp
popf
dec
cmpsb
in
mov
inc
inc
xor
pop
mov
cli
inc
and
lods
fsubs
jmp
mov
fs
stc
mov
fidivl
mov
or
js
scas
add
js
insl
jg
fs
mov
fsubl
adc
mov
fsub
scas
daa
mov
sbb
pminub
icebp
mov
jecxz
arpl
xchg
test
outsl
xchg
sbb
push
fsubs
or
test
out
popf
enter
imul
insl
fstl
out
movsl
inc
test
push
lahf
inc
popa
jne
push
mov
loopne
loop
test
mov
mov
js
xor
cltd
fiaddl
mov
rorl
ret
lds
cli
mov
cmpsl
pushl
sbb
inc
loopne
lock
or
aas
imulb
sbb
adc
xchg
popa
jae
test
cld
jb
loop
jecxz
mov
inc
aaa
xchg
xlat
std
in
ss
cwtl
push
adc
dec
arpl
inc
cltd
aas
jne
xchg
clc
es
xchg
fucom
rolb
cmp
shrl
or
or
hlt
test
push
in
mov
and
aaa
out
mov
leave
inc
sub
jg
stos
cmpsb
add
cli
mov
xchg
inc
inc
orb
lods
imul
push
push
dec
pop
lods
fiadds
mov
js
call
repz
push
mov
or
mov
jbe
jge
xchg
dec
mov
mov
jo
dec
xchg
fxch
mov
jns
add
dec
loopne
sub
inc
hlt
jb
lea
adc
jecxz
dec
imul
test
iret
push
jecxz
sbb
xlat
insl
dec
dec
insl
xor
push
push
mov
aaa
mov
or
ljmp
mov
cmp
jmp
outsb
add
ret
dec
out
dec
sbb
dec
mov
push
sub
icebp
xor
adc
faddl
ret
xor
ljmp
jg
or
or
fldenv
pop
lcall
jg
mov
popf
pop
mov
add
cmpsl
inc
and
or
inc
fldt
sbb
clc
stos
nop
pop
rcrb
sti
icebp
arpl
add
and
les
or
jp
int
inc
push
fs
jle
jg
int3
or
and
dec
in
pop
add
test
mov
pushf
into
pusha
jecxz
ds
daa
mov
mov
mov
js
dec
mov
cmp
lahf
jbe
ficompl
cmp
push
test
sub
mov
testb
pop
add
stc
push
pop
movl
sub
cmp
xchg
pop
push
mov
inc
pop
add
fcomps
mov
idivl
fucomip
and
enter
jnp
pop
xor
inc
push
mov
xchg
fstpl
add
sar
out
lods
fstpl
roll
pop
mov
fadds
jge
mov
mov
xor
push
inc
xor
call
mov
sti
movsb
sbb
fiadds
into
xor
hlt
mov
jne
leave
push
mov
pop
clc
add
data16
mov
scas
add
cmpsl
jno
adcb
xlat
push
call
ss
adc
and
and
jle
jmp
bound
ficomps
cmpsb
out
inc
push
scas
dec
cmpsb
sbb
mov
shl
outsl
lods
inc
jns
movsb
jne
mov
int3
aaa
fistpll
inc
in
fdivrs
xor
mov
mov
popa
fistl
ja
hlt
dec
dec
dec
imulb
out
imull
mov
aaa
das
repz
jg
push
xchg
aam
popa
pop
filds
in
adc
sti
jecxz
jbe
andb
int
add
xchg
or
out
inc
jne
jns
push
sub
fwait
jl
xor
cmp
mov
fcomps
dec
lcall
test
daa
cmpb
imul
jne
ret
fiaddl
and
mov
ds
jnp
and
sti
rcr
aam
enter
cmp
and
adc
xchg
jl
call
pop
add
fdivp
pop
fs
mov
test
clc
xchg
pop
stc
jg
aaa
sbb
leave
je
das
sub
mov
jg
cltd
mov
bound
mov
cmp
ret
dec
cmp
and
xchg
add
sti
adc
add
data16
pop
xlat
mov
mov
xor
xor
cmpsl
pop
xchg
lcall
cli
mov
clc
add
std
test
movsl
mov
cmp
mov
jnp
and
mov
pop
loope
mov
ss
hlt
repz
mov
and
out
in
mov
fadds
jp
push
repnz
icebp
mov
in
andl
rorb
rclb
mov
fldl
mov
and
imul
mov
jl
push
subb
pop
mov
insl
popa
adcl
sub
lods
push
clc
and
stc
sahf
mov
dec
lret
mov
aaa
roll
fsts
xchg
mov
out
movsl
xchg
sahf
pop
pop
push
pusha
fistpll
cmp
jne
or
dec
dec
adc
xchg
dec
lcall
fnstcw
add
jo
add
mov
ss
push
shll
popf
fmuls
popa
jmp
or
push
dec
pop
mov
testb
fsubl
cld
cmp
lods
imul
mov
fiadds
mov
sub
add
sub
pusha
popa
in
add
outsb
fstps
or
push
mov
jl
mov
dec
adc
cmp
dec
test
or
lahf
lret
imul
lret
fmuls
repnz
test
push
test
movsl
mov
and
or
leave
xchg
sbb
rorb
mov
xor
xor
add
dec
ret
popf
insl
fimull
push
arpl
mov
mov
fisttpll
icebp
lret
stc
or
and
or
push
cmp
call
test
insb
add
outsb
push
pop
ficoml
shl
jg
jg
and
pop
rolb
fildl
rclb
lret
lds
dec
pop
leave
sbb
outsl
pop
dec
int
insl
xor
imul
jbe
mov
and
jmp
xchg
xchg
cmc
pop
add
inc
das
push
pusha
shlb
mov
push
push
push
out
enter
mov
enter
push
rcl
loopne
jo
push
popa
adc
xchg
jnp
pop
mov
mov
sahf
andb
jnp
lret
js
lea
fdivl
sbbb
outsl
sub
lea
les
mov
arpl
xchg
sbb
mov
cmp
outsl
je
jge
ret
mov
mov
mov
inc
cmp
das
lods
adc
add
shr
xor
test
int3
fwait
in
mov
adc
popf
out
pop
mov
lods
push
in
mov
pop
mov
iret
mov
push
dec
packuswb
je
dec
dec
adc
js
push
push
cld
fsubl
xor
movsl
cmp
andl
gs
xlat
nop
rolb
imul
jno
movsl
or
mov
cmp
outsb
push
pcmpgtw
sbb
push
jo
pop
je
or
mov
sbb
sahf
dec
sub
and
xor
sub
lods
jecxz
outsl
je
add
add
test
ds
dec
in
js
sub
add
xchg
dec
lods
jl
movups
jg
mov
mov
mov
pop
mov
inc
outsl
aad
test
and
test
scas
mov
aad
es
std
adc
xor
loopne
sub
sbb
call
fbstp
cmp
add
add
mov
gs
mov
hlt
xor
testl
sbb
into
cmp
ret
cli
jo
stos
loopne
imul
or
test
in
insb
pusha
popa
lahf
sub
jl
adc
and
mov
adc
xor
and
xchg
inc
scas
ja
xchg
lock
ret
mov
push
loop
push
loop
ljmp
add
adc
out
in
xchg
out
fsts
mov
outsb
mov
inc
js
adc
les
mov
mov
mov
mov
jnp
mov
jb
mov
xor
jno
test
mov
xchg
mov
nop
cmp
test
lret
rol
sbb
fiaddl
rolb
mov
hlt
dec
lds
js
test
xchg
leave
adc
dec
pusha
pop
and
mov
mov
aas
leave
pop
push
in
in
add
cli
xor
xchg
mov
mov
cwtl
fstps
push
test
std
stos
mov
imul
xchg
jle
shr
sar
pop
cli
out
adc
out
mov
fdivrl
inc
inc
pop
fdivrl
cmp
out
cmc
xor
mov
jecxz
push
test
push
jne
mov
ffree
mov
fistps
fdivr
xchg
jb
dec
rcrl
in
aad
jo
insl
pop
aam
push
dec
push
dec
pop
popf
xor
mov
jg
imul
cmp
ret
shrb
les
jae
sub
jl
add
xacquire
clc
lods
shlb
dec
movsb
xchg
jmp
enter
xchg
imul
das
sub
inc
pop
ds
jecxz
in
int3
std
inc
lea
imulb
xchg
loope
fiadds
stos
pop
js
dec
or
jbe
push
push
push
outsb
cli
push
pop
out
xor
js
inc
ljmp
or
scas
pop
pop
and
in
cmp
mov
push
shrl
shll
push
and
cmp
scas
and
push
cmp
or
jle
pop
xchg
out
sub
push
push
fistpll
inc
xchg
adc
cmpsb
and
enter
adc
push
inc
cmp
fsubp
insl
sti
test
arpl
inc
xor
or
test
cmc
sbb
jmp
and
jne
mov
nop
mov
add
push
xchg
fs
add
xchg
loope
cltd
and
cmp
xor
cld
push
jnp
push
cmc
cs
sbb
jb
pop
jae
cmp
out
clc
es
lret
xchg
or
xor
xchg
test
mov
int
xchg
add
gs
xchg
and
xor
xor
pusha
mov
and
lods
into
sub
ljmp
sub
test
clc
cmp
aaa
jnp
push
lea
scas
dec
push
popf
sub
repnz
mov
leave
cwtl
mov
lahf
pop
popf
mov
es
in
sub
or
xchg
scas
adc
ficoml
shlb
fs
add
daa
aaa
adc
lods
lret
popa
lret
and
repnz
adc
ljmp
jmp
mov
jnp
xor
dec
sub
test
insl
sarl
lcall
enter
inc
pop
ljmp
push
inc
xchg
cmp
imul
xchg
inc
vpmacsdqh
ja
in
cwtl
inc
lcall
mulb
xchg
inc
jb
lods
xchg
adc
fsubrl
pop
in
shll
call
leave
and
stc
pop
out
dec
outsl
scas
and
or
sub
ds
std
ljmp
xor
mov
leave
xchg
arpl
sub
pop
sub
cmp
daa
out
adc
or
jne
cli
das
xor
jecxz
adc
js
and
shl
std
adc
xchg
cmpsl
sub
push
lods
stc
hlt
mov
subl
xchg
push
sbb
inc
lcall
xchg
shl
mov
mov
and
push
xchg
lock
or
out
in
les
es
ja
ret
sbb
lods
lods
jl
rcl
add
adc
mov
pop
xchg
shlb
scas
xchg
in
mov
test
xchg
aam
and
dec
cltd
and
mov
mov
sub
mov
shll
out
push
push
add
pop
mov
mov
fs
xchg
sbb
sbb
out
sahf
in
shlb
pop
push
into
mov
and
sbb
add
ret
xchg
add
jg
bound
jnp
push
add
add
xor
or
mov
add
dec
jno
lds
pop
add
arpl
les
cld
aaa
fwait
dec
fs
and
sub
jl
jb
or
add
fadds
cli
inc
inc
push
push
les
and
cwtl
and
lahf
pushf
inc
or
or
rcl
cmp
mov
and
pop
hlt
js
mov
add
xor
mov
adc
mov
dec
fstpt
mov
fistl
dec
clc
push
pop
jbe
sub
dec
or
xor
sub
stos
push
repz
push
xchg
call
push
pop
cmp
sbb
pop
loop
adc
arpl
std
jo
pushf
notb
sbb
pop
test
pop
or
cmp
out
in
or
push
mov
lahf
xchg
jmp
rorl
fmuls
xor
mov
aam
jecxz
dec
gs
cmp
mov
push
popf
imul
mov
das
and
testb
icebp
mov
aad
and
lret
jp
pop
pop
mov
jmp
inc
xor
add
das
sahf
aam
lahf
pushl
arpl
sahf
mov
push
sub
inc
lea
push
lods
mov
cmp
out
in
adc
lock
cmc
pop
lods
les
pop
test
jge
and
movl
faddl
mov
adc
jbe
pop
adc
loop
pusha
fidivrl
nop
loope
popa
loopne
jl
lret
iret
popf
adc
dec
das
jno
sar
bnd
mov
popa
lahf
lcall
pusha
lret
inc
cmp
in
mov
outsb
inc
xor
jno
mov
ret
popa
push
insb
mov
sti
add
jecxz
dec
pushf
aas
ret
inc
or
push
lds
pop
push
xor
inc
mov
jae
push
test
cmp
jmp
push
ss
push
mov
fmull
or
sbbb
fmuls
test
adc
imul
jne
cmc
repnz
cmpsl
pop
cmp
push
pop
mov
mov
push
movsb
push
dec
xchg
push
fsubrs
out
fsub
add
ljmp
inc
adcb
fsub
cmc
cld
xchg
mov
test
adc
pop
push
xor
push
into
into
cmp
push
les
ret
add
mov
ss
and
test
pop
pop
out
je
les
lea
test
test
sbb
pop
aad
vmovntpd
stos
dec
push
pop
mov
mov
cld
dec
shll
iret
mov
test
fdivl
mov
dec
imul
xchg
lods
jmp
push
mov
sbb
mov
mov
aad
mov
sti
push
sbb
or
daa
lods
jne
int3
mov
testb
stos
sbb
xchg
inc
mov
mov
stc
dec
pop
pop
in
mov
jmp
ss
xor
or
shlb
bound
ficoml
sbb
es
ss
xchg
cmp
sbb
xchg
sub
pushl
hlt
sub
adc
inc
inc
mov
lods
cs
mov
lds
sbb
andl
xor
push
adc
movsb
sbb
enter
addl
jno
cmp
and
and
cmpl
pop
inc
mov
ss
sarl
jmp
int3
jl
xchg
fcomi
cmp
mov
xchg
mov
and
cmpsl
mov
outsb
xorb
jbe
ds
dec
lret
fisttpl
fs
ljmp
out
sub
outsl
bound
jb
add
imul
mov
jg
insb
cwtl
stos
xor
push
inc
or
add
fdivrl
adc
mov
sti
inc
sarl
fsubl
pop
pusha
pop
adc
out
sub
mov
aam
mov
mov
in
mov
pop
lcall
ret
sbb
and
xchg
inc
sbb
das
shll
roll
cld
sti
jb
pop
or
std
js
cmpsl
cmpsl
mov
in
arpl
daa
sahf
jb
jp
jp
cmp
jge
mov
mov
jae
stos
pop
cmc
pop
ljmp
xor
cs
cmpsl
inc
dec
or
dec
ja
dec
insb
add
filds
nop
test
mov
mov
jo
pop
push
add
arpl
mov
iret
lea
lods
rcrl
out
mov
and
or
jmp
adcb
pop
xor
movl
mov
inc
sub
mov
xchg
jp
int3
sub
shlb
test
cld
cmovle
stos
sub
push
jnp
pusha
mov
push
xchg
cmp
sti
mov
enter
shrl
adc
mov
sbb
fs
mov
mov
jae
inc
shrb
movsl
jb
mov
loop
xor
sbb
adc
aam
hlt
sarl
sbb
test
stc
subl
mov
aam
ss
jnp
scas
and
stos
aad
insb
fldl2t
adc
dec
lds
out
push
or
and
outsl
ror
sub
out
lahf
adc
mov
jb
ss
cmc
mov
jnp
aad
pop
mov
lret
mov
sbb
inc
inc
adc
or
xchg
sub
xor
xchg
dec
xchg
imul
imul
cmc
test
cli
dec
shll
xchg
mov
inc
mov
xchg
sbb
pop
pop
lds
sub
lds
pop
in
cmp
or
or
push
jno
int3
adc
js
and
mov
dec
sub
stos
ret
jae
adc
shll
cmp
mov
out
sti
mov
outsl
cmp
mov
xor
jo
sbb
jae
pop
adc
aas
les
dec
jg
in
mulb
add
adc
pop
out
lahf
shlb
sahf
arpl
inc
rcrb
and
mov
jmp
imul
std
fsubrl
data16
pop
stos
addr16
cmp
subl
push
inc
add
mov
jmp
dec
adc
daa
das
jnp
int
jae
or
adcb
inc
loope
int3
cmp
push
jl
push
and
xor
adc
je
add
mov
fdivs
push
sub
sbb
int3
fsts
adc
sub
mov
xchg
pop
mov
mov
push
push
movsl
push
adc
loope
pop
push
cmp
lock
jae
push
push
jbe
xchg
scas
add
in
bound
int3
out
mov
and
cld
in
pop
in
test
ss
gs
lods
scas
adcl
xor
lcall
std
push
lods
mov
inc
lret
lahf
pop
or
outsl
popa
adcl
jb
push
test
adc
xor
and
mov
or
aam
std
jno
leave
lods
imul
negb
push
pop
fs
mov
push
lock
dec
xchg
idivb
aam
cmpsb
out
enter
jle
stos
push
out
mov
mov
cwtl
or
ljmp
mov
leave
push
or
les
cmc
mov
cld
jb
call
sbb
mov
scas
xchg
lock
push
shlb
xchg
divb
enter
insb
and
movsb
jp
or
xchg
and
imul
mov
cmp
std
nop
sbb
cli
mov
shr
inc
jmp
jnp
push
into
adc
xchg
push
cld
xchg
incl
xchg
jg
and
inc
sbb
sub
hlt
sbbb
xchg
rcr
xor
pop
mov
xor
xor
sbb
sbb
or
jns
stc
pop
imul
pop
inc
mov
lds
mov
mov
sub
ss
cmpsl
into
pusha
push
adc
shrb
scas
popa
mov
mov
scas
jns
sbb
js
mov
cmpsl
mov
add
or
je
jnp
js
dec
and
aaa
subl
jle
pusha
lcall
sarl
mov
in
or
fsubrs
dec
or
pop
test
pop
pusha
jp
cmp
sti
sbb
push
out
fs
iret
jmp
jns
xor
jle
addl
and
push
xchg
inc
out
dec
fnsave
jbe
maskmovq
mov
mov
int3
cmp
jg
pop
mov
or
add
jecxz
sub
cmp
push
stc
mov
ds
or
sahf
mov
cmp
in
sbb
idivb
arpl
adc
adcl
cmc
negb
cmp
xor
xchg
and
xchg
xchg
add
fs
dec
imul
add
ficomps
mov
push
flds
xchg
jnp
call
cmp
add
cmp
insl
int
int3
or
push
sbb
das
test
and
jo
fwait
je
push
mov
cmp
sbb
inc
and
inc
aad
lahf
push
jnp
or
rcl
xchg
jmp
cmp
xchg
adc
aaa
mov
ja
mov
fcoms
jo
iret
leave
ret
pop
lock
pushf
sbbb
je
dec
cmp
inc
and
cltd
ret
adc
dec
or
and
xor
xor
in
add
inc
sbb
leave
sahf
pushf
mov
or
imulb
aas
jl
imul
xor
fidivrl
xlat
adc
in
lret
bound
dec
faddl
iret
jnp
das
in
outsb
rcrb
mov
nop
loope
dec
nop
aaa
push
mov
mov
sub
xlat
nop
cmp
xor
push
loopne
lret
push
js
sbb
mov
or
dec
clc
mov
rorl
pop
xorl
and
sub
jae
jmp
pop
mov
xchg
dec
fildll
xchg
push
lcall
fdivrl
jmp
movd
cmp
mov
xchg
pop
iret
xchg
pusha
xchg
test
std
dec
imulb
pop
lock
mov
xchg
inc
fwait
or
fwait
mov
cmp
cvtps2pi
rorl
int3
arpl
cltd
stos
test
xchg
mov
lret
outsl
out
dec
das
mov
out
dec
or
add
fiadds
clc
in
lcall
cmc
fsubrl
jle
or
jne
jno
cmp
xchg
lea
repnz
jb
dec
mov
insl
sbb
stc
cmpsl
ss
mov
loopne
push
jle
jb
jmp
data16
mov
es
jne
dec
lods
fisubl
ljmp
mov
xor
jne
pushf
jmp
insl
dec
and
push
push
pop
es
xor
imul
mov
hlt
sub
subl
xor
out
or
lcall
xor
sbb
sar
inc
rorl
rcrb
mov
pop
mov
fidivrs
mov
push
pop
ss
xor
xchg
mov
push
add
popf
pop
or
out
xor
adc
lret
scas
cmp
mov
loopne
xchg
jb
xchg
and
inc
jp
loope
mov
push
mov
mov
xor
pop
add
sbb
and
out
mov
or
aas
fisubrl
xchg
mov
clc
jne
xchg
lock
xor
cli
push
das
data16
fldcw
roll
jge
pop
or
sbb
shrl
les
insb
lods
in
orb
pop
negl
xor
sbb
mov
sbb
xchg
jge
inc
outsb
xor
xor
jge
and
dec
cmp
xor
dec
jle
sbb
jns
jp
outsl
pushf
add
lods
jecxz
je
mov
or
popf
insl
or
lds
lea
xor
fldl
sbb
dec
cli
bound
mov
jno
ja
cli
add
cld
push
dec
insb
in
lods
popa
jb
or
inc
or
gs
fcoml
xor
loop
sti
mov
lret
cmpsl
jo
sbb
xchg
ljmp
rcrl
push
pop
pop
pop
cld
lcall
and
push
mov
das
adc
inc
jmp
insl
je
adc
cmpsl
jge
jb
dec
pop
xchg
rcrb
insb
repnz
xor
xlat
loope
and
outsl
cmpsl
jbe
cld
add
mov
out
cwtl
dec
out
mov
sub
push
lods
ficomps
inc
stos
pop
mov
lods
addr16
xchg
leave
jg
xor
pop
inc
aas
fadd
inc
movsl
or
clc
pop
sbb
pop
xchg
mov
sbb
mov
int
dec
test
popf
out
int
adc
xchg
jge
xchg
sub
ja
out
dec
jno
out
mov
sbb
sbb
sbb
push
mov
fwait
sub
rcll
fildll
popa
mov
sub
cltd
fisttps
fisttpl
in
jno
push
mov
iret
aam
xchg
jb
ficoms
sarb
es
aam
jb
leave
push
and
movsb
movsb
mov
lods
mov
ds
cmp
outsl
adc
push
mov
add
mov
jg
in
ljmp
cmpsb
stos
fdivp
ret
jns
xchg
call
int
jg
scas
adc
pop
mov
cmp
xor
es
fs
shl
mov
or
leave
ds
out
clc
or
mov
js
out
push
adc
mov
xor
test
lods
jecxz
stc
xor
lahf
cmpl
rcrl
faddl
fistpll
dec
jb
sub
daa
and
or
inc
sub
dec
ds
lret
clc
jmp
cmpl
mul
loop
jne
xor
iret
or
jmp
inc
pop
mov
out
xor
mov
insl
neg
xchg
mov
jne
sarb
xchg
cmp
fwait
mov
jp
mov
and
mov
leave
xchg
fwait
add
outsl
pop
mov
aaa
cld
add
repz
fs
xchg
mov
jp
mov
pop
fildl
loop
stc
lahf
ljmp
repz
mov
in
mov
push
and
sub
stos
mov
nop
les
fisttpl
mov
and
int
jmp
pushf
mov
jg
cld
sahf
jae
cld
cmp
out
ret
fsubrs
int
ficompl
push
movsl
mov
stos
pushl
shll
xor
mov
jmp
dec
lret
faddp
test
push
aam
mov
loopne
stos
inc
hlt
arpl
leave
jbe
mov
iret
call
std
ja
pop
js
icebp
jo
pop
iret
rcll
mov
stos
xchg
add
cmp
and
push
movsb
push
negb
movsl
stos
sti
fcom
inc
shr
inc
negb
shlb
mov
stos
pop
xchg
pop
leave
aad
jmp
dec
add
push
sbb
dec
xor
popa
push
loopne
mov
inc
or
xor
mov
int3
enter
jp
inc
lods
test
xchg
cmp
stos
sub
push
pushf
in
cld
mov
or
out
daa
and
fs
cmpsl
or
xor
std
lods
cld
mov
mov
inc
lods
das
or
inc
in
lods
lea
xor
push
xchg
outsl
add
cld
sub
inc
cmp
adc
dec
int
pop
cmpb
or
push
popa
in
js
pop
sbb
cs
cwtl
mov
lahf
fsubrl
lods
ds
xlat
stos
loope
lret
and
sub
mov
fs
cmp
enter
xchg
lods
sarl
or
and
inc
inc
mov
add
mov
addr16
mov
xchg
lea
ljmp
fwait
repz
cmpsb
outsl
imul
dec
repz
adc
inc
inc
mov
cli
test
jle
sbb
jl
and
div
cmp
mov
daa
test
fbstp
and
inc
rcrb
gs
add
inc
lea
cmp
movb
test
sub
ret
sbb
sahf
movsl
lret
daa
mov
xchg
popf
sub
int
mov
mov
lock
push
in
jbe
imul
and
push
movsl
inc
xchg
mov
fdivrl
cs
xor
pop
std
aas
arpl
lret
cmp
out
dec
cmp
sub
in
popa
or
sub
out
out
add
in
test
movsb
out
cmpsl
inc
in
and
data16
mov
aas
lea
movsl
mov
pop
xchg
cmp
jecxz
xchg
lods
loopne
lock
cmpsl
pop
shlb
bound
ja
stc
or
addr16
and
mov
mov
mov
cmp
stos
cli
test
xchg
mov
punpckhbw
jle
leave
mov
jae
sub
mov
pop
dec
sub
jns
push
cltd
lods
fwait
pop
aam
pop
and
inc
cmpsb
dec
add
jo
lcall
sub
push
xor
orl
mov
ja
in
loop
andl
jmp
jnp
mov
adc
xchg
jle
mov
das
pop
pop
or
mov
imul
or
dec
fdivs
mov
mov
ds
push
mov
pop
sahf
lds
mov
das
pusha
mov
aad
pop
sub
push
pop
dec
daa
sahf
nop
fadd
ja,pt
xchg
mov
out
jl
icebp
fbstp
adc
mov
scas
into
ljmp
or
in
dec
out
dec
xchg
mov
sbb
push
mov
int3
clc
in
ljmp
push
das
in
jl
cmp
push
and
stc
mov
pushf
das
mov
mov
int3
sub
cltd
xchg
rcrb
test
mov
mov
xchg
shlb
movsl
jle
jne
push
sbb
cmp
sbb
test
shl
sahf
sub
iret
aam
call
add
dec
add
je
jl
xor
xchg
or
push
fcompl
dec
mov
in
or
arpl
sti
jno
test
fidivrl
cltd
int3
push
sub
or
fcomi
jle,pt
sbb
aad
fsubrl
sub
lahf
cmp
sbb
mov
cmp
lret
push
jp
jmp
shrl
imull
xor
pop
xchg
lret
lret
stc
ret
jmp
call
pop
mov
inc
sbb
sub
and
xchg
mov
dec
adc
das
pop
inc
sbb
dec
mov
cmp
xchg
inc
arpl
add
mov
insb
pop
fcmovne
sbb
insl
cmp
cmpsb
lret
xchg
xchg
enter
aaa
das
ljmp
loopne
cltd
testl
add
xor
pop
scas
repnz
rcl
and
outsb
push
rcrb
in
lds
xor
xchg
inc
inc
mov
xchg
pop
in
pop
and
in
inc
lahf
loopne
jmp
test
mov
inc
jnp
xchg
add
push
es
cmpsl
repz
mov
dec
iret
insb
jmp
sub
test
mov
mov
ja
orb
mov
testl
loop
mov
idivb
out
icebp
and
xchg
mov
addl
inc
aam
pop
popf
lods
out
pop
int3
push
pusha
out
push
or
xor
ret
adc
ret
xchg
inc
jle
mov
sbb
popf
inc
cmp
and
add
mull
pop
push
gs
das
pop
fldt
inc
icebp
jo
inc
popf
mov
sub
adc
loopne
fsubl
stos
loope
sbb
sub
mov
je
dec
and
leave
jg
lret
cltd
jecxz
cmc
mov
mov
fwait
sbbl
je
mov
push
fcomi
ja
jge
jl
ficompl
xor
mov
add
outsl
ljmp
mov
pushf
jne
out
test
or
mov
test
mov
or
mov
lcall
jmp
mov
jp
cmp
cmpsl
addr16
mov
dec
xchg
imul
leave
sar
aam
jecxz
dec
cmp
stos
and
stos
push
imul
jl
jmp
dec
leave
pop
movsb
enter
and
into
mov
or
ss
inc
pop
fnstenv
xchg
pop
sub
sub
sbb
fwait
cmp
mov
push
outsb
pusha
stos
imul
lcall
es
inc
leave
mov
popa
popl
adc
repz
call
fs
mov
adc
add
push
aam
shll
cmp
adc
push
adc
insb
xchg
das
jmp
xlat
std
adc
cmpsb
push
js
jle
or
pop
jae
or
js
cmc
das
cs
rolb
push
xlat
jb
jns
imul
pop
xlat
push
mov
popf
xchg
dec
adc
cmpsl
test
loope
nop
in
inc
lds
mov
add
outsb
fwait
inc
mov
test
jno
sbb
mov
cmp
call
orb
inc
push
jo
push
push
fcoml
popa
sbb
or
js
negl
in
mov
es
mov
add
cmc
enter
fldl
inc
outsb
out
push
das
test
dec
jg
aaa
or
sbb
jb
addr16
aaa
cmp
add
fwait
jne
daa
push
jne
inc
dec
mov
inc
call
adcl
or
aad
xchg
lods
cli
xor
test
test
sarb
lret
dec
jp
xor
pop
nop
outsl
sub
ljmp
pop
fwait
lahf
inc
mov
dec
xor
mov
push
pop
jge
test
push
cwtl
adc
xor
ds
cld
fildl
push
inc
push
cltd
inc
inc
dec
pop
loop
subb
inc
sbb
mov
inc
push
loop
cli
int3
inc
xor
imul
decb
push
mov
test
test
xchg
jne
mov
cltd
int3
mov
pop
lret
add
inc
popf
pop
fildl
out
and
push
outsl
nop
into
in
push
lock
jg
mov
out
add
dec
and
dec
aad
fistl
mov
xor
sbb
inc
loop
sbb
or
imul
mov
arpl
iret
dec
mov
imul
mov
in
mov
outsl
xlat
lds
les
cmp
pop
cmp
jns
push
jg
fs
lahf
fildll
jns
jg
fldl2e
int
repnz
sbb
xor
sarb
mov
sbb
jg
jbe
cwtl
sbb
jl
lods
xchg
out
jno
jecxz
loope
xchg
nop
idiv
xchg
mov
mov
rorb
jecxz
pushf
push
imul
jmp
adc
sahf
lret
test
mov
mov
cmp
mov
xlat
inc
push
inc
push
dec
sub
popa
push
xor
xchg
aam
int
stos
or
mov
imul
dec
mov
ret
mov
fistl
imul
sub
xchg
sub
ror
lock
aas
call
adc
mov
xchg
outsb
nop
mov
fnstsw
test
push
sub
and
cmpl
mov
lock
int3
dec
cmp
mov
fisttps
pop
ds
outsb
fimull
pop
ror
pop
mov
push
inc
mov
and
test
dec
sub
mov
adc
test
fs
adc
dec
sbb
mov
movsb
and
push
les
lcall
testl
sub
mov
mov
cmp
data16
pop
js
enter
je
xchg
pop
xchg
cmc
clc
pushf
adc
mov
clc
lock
sahf
add
xlat
andb
mov
outsb
pop
push
ret
push
xchg
xor
ret
inc
jno
arpl
xor
addl
aaa
in
insl
jg
test
mov
subb
adcb
insb
mov
add
aad
xchg
add
cmp
call
pop
jno
or
mov
testl
les
das
jno
push
xor
add
xor
pop
dec
xor
xor
les
fnstsw
mov
into
xchg
adc
scas
sti
push
call
or
dec
dec
push
lock
sbb
enter
gs
pop
pop
or
out
out
ljmp
std
outsl
arpl
xchg
adc
xor
lret
loop
rolb
mov
outsl
ljmp
add
stos
lods
pushf
roll
jmp
dec
mov
mov
pop
mov
push
xchg
jb
pusha
enter
add
pop
mov
outsl
mov
inc
shrl
call
shr
ja
cli
mov
and
jb
pop
mov
arpl
adc
popf
test
mov
fsubr
std
cmpsb
adcb
rorl
inc
outsl
data16
cmp
inc
or
or
pmaxub
jae
stos
or
cmp
hlt
pushf
add
popf
adc
xchg
cmpl
or
leave
xchg
add
mov
mov
add
mov
sahf
into
sub
insb
js
inc
push
sbb
dec
cmp
cmp
mov
outsb
daa
stos
lret
ret
fldl
sbb
mov
data16
dec
xchg
or
mov
jecxz
inc
aam
pop
cld
pop
lds
push
data16
daa
pop
pop
test
bound
adc
sbb
das
sbb
pusha
icebp
mov
repnz
or
add
call
and
data16
xorl
leave
js
stc
or
cltd
sub
pop
jne
shrb
leave
inc
arpl
popf
dec
fnsave
pop
fistpll
jbe
sbb
cmp
cmp
cs
sbb
xor
movsb
ja
aam
or
jle
sbb
mov
mov
shll
ss
push
enter
sbb
shll
mov
popa
mov
bound
xor
rorl
pop
out
adc
std
mov
mov
scas
cld
rclb
inc
jno
mov
test
sub
repz
repz
iret
push
lds
fnstcw
sbb
popf
xor
jle
mov
sbb
hlt
jl
dec
aad
jo
mov
test
outsl
xchg
outsb
push
cmpsl
dec
bound
sti
nop
cmp
xchg
ja
mov
movsb
mov
testb
popa
roll
mov
xchg
aad
jl
cld
inc
bound
adc
sti
movl
sarl
notb
mov
fistps
mov
pop
sub
xchg
pop
xor
lock
scas
stos
aad
scas
and
ret
out
sbb
hlt
vandpd
lret
or
jns
mov
in
and
mov
mov
jne
mov
push
or
push
nop
sub
hlt
popf
or
mov
ss
push
bound
imul
mov
inc
je
pushf
mov
dec
pop
ficomps
inc
jo
or
pop
jae
mov
iret
pusha
push
sar
push
and
mov
sub
test
out
into
cmp
cld
xchg
xchg
out
sub
xor
or
js
xor
xchg
mov
fisubrl
ret
jo
cld
je
or
je
adc
push
sbb
push
out
in
popf
xorb
in
push
pop
pop
lods
or
cmc
stos
lea
sub
jae
leave
call
in
cmp
iret
cmp
cmp
mov
dec
push
jge
dec
adc
cltd
mov
push
mov
repnz
pop
mov
imul
inc
sbb
and
add
sti
es
sbbl
mov
pop
or
xlat
out
push
fistps
push
jmp
dec
jno
push
jle
dec
jae
leave
jl
dec
aad
xlat
imul
push
sub
in
cmpsb
mov
xchg
lahf
aas
dec
in
inc
push
and
fmull
mov
xchg
mov
out
mov
add
mov
aas
test
mov
addr16
in
stos
mov
movsl
push
ljmp
shl
and
call
in
mov
into
mov
cld
mov
mov
mov
xchg
hlt
pop
dec
cld
sub
test
movsb
sarl
add
pushf
fmull
dec
push
jl
mov
mov
xchg
jbe,pt
or
fs
sarl
inc
pop
mov
push
xlat
push
mov
push
xchg
mov
pop
pop
xchg
imul
dec
lret
sub
lcall
mov
adc
push
popf
sbb
pusha
or
ja
cmp
pop
mov
inc
pop
push
pop
scas
aam
mov
dec
insb
or
fidivrl
pusha
lods
push
adc
repz
pop
lea
xchg
fwait
mov
and
std
inc
push
dec
lds
movsl
in
enter
sbb
adc
shr
or
pushf
jp
js
ret
cli
rcll
repz
add
mov
rol
repnz
sub
roll
push
mov
notb
mov
fwait
xchg
jg
andb
mov
movsl
cmp
loope
xchg
and
cmpb
repnz
adc
fdivr
cwtl
push
js
mov
sahf
inc
push
sti
call
or
sbb
ffree
xchg
dec
inc
xlat
imul
sub
pop
test
test
data16
jnp
sbb
lret
pop
cli
and
jnp
sbb
or
push
lods
jle
imul
push
mulb
add
mov
ss
xlat
mov
sbb
popa
cld
jo
les
clc
jmp
fs
add
fmuls
xlat
jg
outsl
mov
mov
xor
and
jbe
mov
cmp
mov
lret
pop
push
xchg
sub
fistpll
push
inc
imul
pop
add
ret
aam
mov
and
subl
or
sub
dec
dec
cwtl
sub
mov
lcall
std
or
imul
jmp
add
mov
jg
cmp
in
xchg
fdivrs
daa
shlb
cmp
subl
sbb
ret
xchg
pop
nop
gs
iret
call
add
mov
jp
lds
je
jb
popf
shrl
gs
mov
jle
int
sbb
xchg
popa
notb
je
sbb
jmp
insb
test
dec
popf
out
xlat
out
pop
mov
cld
pop
jge
inc
jae
jge
cmc
cwtl
add
jg
testl
sbb
xor
pop
and
jle
mov
dec
aas
dec
sub
in
stos
sub
sbb
dec
jne
sbb
dec
shrl
lods
subl
fimull
fwait
lds
shll
leave
jle
ret
dec
cld
outsb
mov
int3
xor
jge
cwtl
add
lahf
cmpsl
cwtl
in
mov
pop
inc
mov
mov
pop
pop
or
jecxz
jnp
and
xchg
cmp
jmp
pop
mov
jo
lcall
testl
mov
xor
push
pop
test
and
dec
jne
jns
aas
xchg
outsl
mov
lock
inc
dec
inc
lret
mov
adc
pop
in
in
mov
iret
cld
push
pop
jno
cwtl
pop
es
repnz
add
pusha
lods
ret
hlt
mov
imul
sub
dec
sbb
faddl
scas
pusha
mov
mov
dec
pop
jno
mov
imul
push
sbb
sub
and
mov
inc
inc
add
dec
pop
std
add
jge
fs
aaa
or
jmp
mov
mov
push
jo
sahf
inc
pusha
mov
call
mov
aam
dec
fldt
cmp
adc
fldt
sbb
lds
push
xlat
inc
orb
sub
das
clc
cmp
fisttpll
in
stos
xchg
push
xor
inc
jne
add
in
sbb
out
xor
xchg
enter
mov
aad
pop
mov
pop
aad
les
dec
lods
inc
adc
xchg
mov
sbb
xor
ret
das
fld
fisubrs
xor
iret
sbb
jb
cld
sub
lret
cmp
xchg
pop
ljmp
xchg
iret
lds
xchg
sub
rorb
das
and
sbb
sub
les
in
inc
pop
fsubs
repz
notb
cmp
enter
repz
xor
mov
push
jmp
mov
pop
enter
pop
sbb
fxch
int3
jae
push
jnp
outsl
adc
inc
icebp
or
sbb
sub
sbb
out
sbb
xchg
loopne
and
sbb
or
pop
push
cmc
scas
lcall
ljmp
add
js
ficoms
xchg
inc
adc
push
xchg
js
insl
scas
in
pop
out
push
out
inc
lods
imul
mov
dec
andb
mov
stc
jl
sub
jmp
pop
xor
out
loopne
cmpsb
pop
loope
out
push
shll
rclb
xor
leave
lock
je
mov
popl
jmp
jg
negb
cmpsb
mov
cltd
add
and
cmp
mov
mov
pop
outsl
cmp
fisubrl
inc
nop
in
mov
and
mov
sbb
enter
xchg
hlt
pop
stc
pop
insb
mov
cmp
aad
xchg
pop
mov
sbb
imulb
xlat
adc
cmpsb
in
dec
ret
pop
pop
sub
fdivrl
aad
jb
sarb
push
scas
popf
mov
mov
nop
mov
inc
cmpsb
aam
mov
inc
xor
add
sbb
adc
hlt
lcall
mov
jno,pn
jo
lret
cmp
mov
pop
loop
dec
daa
adcb
add
in
add
scas
lods
sbbb
in
iret
cmpl
mov
out
mov
push
mov
xor
jmp
xor
popf
mov
xchg
repz
js
aam
and
mov
cmp
or
stos
mov
mov
imull
aad
bound
popa
xchg
lods
xchg
imul
out
xchg
inc
stos
fcmovne
and
mov
push
fadds
ja
ljmp
int3
adc
sbb
fisubrs
pop
aas
jp,pt
add
pop
push
mov
mov
fiadds
lods
push
aas
rorl
or
pop
or
mov
mov
xchg
cmp
cli
repz
sbb
mov
push
in
andl
faddp
clc
lea
adc
mov
sbb
bound
cs
out
add
xchg
xor
and
int3
mov
popa
pop
scas
push
rcll
and
cmp
xor
std
int3
lret
push
fwait
adc
jbe
mov
mov
xor
jae
mov
es
hlt
iret
int
push
lret
and
or
iret
inc
je
cmp
pop
aaa
or
or
inc
xchg
bound
in
mov
adc
xor
push
and
cli
movsl
inc
loopne
out
fcompl
push
mov
cmp
shrl
test
or
loopne
sub
xor
in
sub
add
fnstsw
bound
bound
adc
add
cwtl
cmp
push
mov
test
pop
jg
xchg
mov
mov
out
inc
cli
add
pop
int3
hlt
cmpl
popf
and
push
fnstcw
mov
jns
and
inc
push
sbb
shrb
mov
cmp
adc
fbld
push
add
jne
sar
test
dec
pop
mov
ja
and
push
pop
or
cmp
fadds
add
pop
in
xchg
popa
rclb
sub
inc
xchg
pusha
sbb
inc
mov
push
rcrb
mov
sti
xlat
mov
enter
repnz
xchg
jle
dec
insl
pop
jbe
mov
pushl
xchg
mov
int3
bound
pop
jecxz
mov
imul
iret
mov
mov
xor
call
fs
inc
push
insl
cltd
inc
aad
shr
cmp
adc
in
mov
pop
cmp
pusha
inc
push
inc
daa
cli
and
negl
pop
push
cmp
sbb
xchg
loopne
mov
outsl
pop
xorl
sub
xor
mov
cmpsl
jg
shrb
xchg
pop
sbb
and
mov
sbb
add
xchg
dec
xchg
inc
ror
jae
insl
fmul
sub
and
or
js
ljmp
jge
fsts
push
push
jno
insl
dec
loop
cmc
jbe
mov
pop
cmpsl
and
popl
sub
cmp
cmp
jnp
inc
in
and
aam
sbb
dec
cld
push
lcall
push
repz
inc
sub
dec
mov
cmpsb
and
fcomps
mov
test
insb
stos
push
inc
lock
and
fs
lretw
outsb
xchg
out
lods
jbe
mov
fcmovbe
hlt
push
push
jns
fisttpll
push
fisttpll
mov
push
add
add
push
scas
pop
loopne
mov
in
xchg
sti
outsb
xor
pop
cmpl
jae
jmp
test
and
aas
jge
xchg
stos
rclb
outsb
xchg
les
dec
sbb
cwtl
mov
xchg
aad
push
out
xor
mov
lcall
scas
or
cmpl
or
in
out
add
mov
jl
sbb
push
mov
out
xor
pop
bound
gs
js
and
pop
or
inc
mov
pop
inc
xchg
or
sub
stos
cmpsb
cmpsl
adc
repz
jnp
rorb
push
dec
or
das
psubsb
stos
sbb
xchg
and
inc
inc
les
pop
mov
mov
test
lahf
mov
sub
add
pop
inc
adc
and
mov
sbb
xchg
mov
jge
outsl
dec
lds
dec
je
jle
shrl
fsubrs
mov
sbb
jae
lcall
inc
pop
adc
lock
shrl
push
inc
testl
rcr
dec
adc
icebp
or
lock
inc
int
sub
pop
adc
add
insl
les
xchg
fcoms
aas
int
loope
fstpl
cmp
pop
pusha
dec
out
adc
or
lret
pop
sub
std
sbb
or
pusha
adc
sti
jno
lret
adc
ja
push
imul
mov
push
mov
fcomps
jl
and
icebp
sbb
imul
imul
out
add
ljmp
cmp
fildll
xor
dec
xchg
test
loope
imul
mov
enter
shrl
pop
cmp
mov
mov
dec
std
xor
mov
aas
sbb
outsl
cmpsb
popf
iret
imul
or
xchg
pushf
dec
testl
pop
add
add
enter
xor
mov
xlat
lods
sub
arpl
aad
inc
out
testb
inc
ljmp
mov
mov
or
jno
add
push
push
or
call
jns
ret
jbe
lret
add
cmc
sbb
jmp
inc
out
xor
and
xlat
ljmp
daa
lret
fistpll
push
adc
ljmp
insb
xor
lret
lods
xchg
pop
xchg
lock
movsb
lods
xor
fmuls
xlat
fcoms
pusha
stos
mov
sub
flds
stc
pop
pop
out
jb
std
stc
int3
popa
mov
lods
nop
aas
xchg
int3
add
in
mov
jnp
fidivl
sbb
mov
lods
jae
xor
outsl
lret
cwtl
pop
pop
jge
dec
nop
repnz
inc
jo
and
jecxz
les
mov
lds
rcl
fstpl
cli
mov
pop
pushf
mov
leave
mov
mov
add
fnstcw
clc
add
mov
mov
and
sub
sar
or
xor
out
cmc
lret
mov
rcll
je
or
dec
sahf
sbb
sub
std
xchg
fcomi
cwtl
in
pop
shlb
xchg
lahf
in
inc
push
inc
mov
jnp
rclb
xor
int
jle
mov
imul
call
cmp
divb
push
mov
insl
dec
or
es
sbb
in
mov
jae
sahf
adc
or
fidivrl
cmp
rorl
bound
leave
ret
sub
mov
idiv
lods
xor
stos
push
out
mov
out
adc
iret
int3
xor
aam
stc
push
test
fisttpll
ret
jns
or
popf
popa
in
into
out
enter
mov
inc
xor
lret
inc
es
xor
sbb
outsb
or
lahf
jne
repnz
xlat
push
mov
js
lret
dec
sub
jle
push
fimuls
mov
jle
test
xor
test
inc
andb
js
add
sub
call
call
mov
and
into
jnp
ja
ljmp
sbb
push
in
add
xchg
pop
jl
xor
cwtl
cltd
mov
cmp
lods
lock
mov
push
arpl
and
aam
cmp
int
mov
ja
cwtl
jmp
jo
ljmp
rclb
add
mov
fwait
pop
stos
or
loop
pop
sarl
outsl
adc
into
pushf
clc
mov
imul
leave
in
outsl
cmp
xchg
into
jle
xchg
dec
xchg
mov
fcomp
aas
sbb
icebp
ja
in
mov
das
sub
cs
xchg
daa
jmp
stos
pop
enter
movsb
mov
push
dec
fmulp
leave
ds
out
xchg
icebp
aaa
sub
sbb
pop
push
shrb
xchg
test
add
jl
and
loope
sub
out
stos
add
cmp
out
cld
imul
xor
xchg
notl
iret
sbb
xchg
popf
sub
mov
or
adc
xchg
mov
jl
mov
mov
mov
icebp
out
mov
cs
jp
adc
pop
out
dec
xchg
mov
jmp
push
adc
mov
cmp
jbe
cmp
or
bound
rcrl
lret
fdivrl
shlb
idivb
jae
and
movsl
sub
mov
out
cld
mov
in
inc
insl
js
dec
inc
sbb
in
ljmp
dec
mov
bound
stos
mov
daa
cli
mul
imul
xchg
sub
aas
inc
dec
pop
add
daa
inc
jg
sbb
push
and
xchg
sub
cmc
fldt
adc
into
add
aaa
cmp
arpl
in
mov
dec
subl
inc
adc
push
scas
dec
push
or
testb
ds
or
mov
mov
sbbb
jb
pop
ret
loopne
mov
lock
popf
int
mov
test
inc
inc
and
cltd
ljmp
inc
sub
mov
or
sub
fs
add
xchg
add
movsb
fmull
push
mov
cld
stos
cwtl
xchg
incl
dec
inc
call
inc
fnstenv
adc
sbb
ds
lea
jmp
loop
mov
push
notb
imul
neg
cld
js
outsb
test
cld
nop
and
cmp
push
xchg
mov
leave
call
adc
mov
mov
xlat
push
arpl
sbbb
mov
xorb
sti
cli
cmpsl
xor
lea
or
push
sbb
dec
pop
adc
sub
dec
jnp
aas
repz
cmp
loope
mov
or
test
push
mov
mov
push
nop
ror
sarl
arpl
dec
xchg
scas
nop
addb
push
and
insb
insb
sub
mov
js
orb
test
push
and
fistpl
std
popf
shll
jno
mov
daa
jl
outsb
add
testb
in
out
adc
rol
xchg
mov
stos
adc
and
insl
ss
sbb
pop
pop
mov
sub
dec
mov
cld
popf
pushl
sub
int3
pop
addr16
cli
dec
cwtl
and
movsl
pushf
ret
in
sar
ret
mov
inc
fcompl
jmp
pop
and
lods
mov
out
sub
loopne
pop
add
sarl
xchg
cmc
push
insl
loopne
nop
add
xor
in
xor
and
xorl
outsl
xchg
aam
xor
bound
js
mov
and
or
sbb
subb
cli
lret
mov
xchg
push
out
mov
fldlg2
push
ret
call
push
fldcw
int3
cmp
xchg
mov
inc
addr16
cmpsb
push
mov
aaa
xor
add
jnp
xchg
adc
lock
sub
into
and
flds
inc
add
add
mov
jmp
pop
pop
fsubrp
jmp
pop
add
loopw
aad
and
int
iret
aam
sbb
scas
pop
jge
and
adc
aas
pop
lock
dec
or
cmpsl
iret
shll
mov
leave
mov
mov
and
rorb
mov
jecxz
mov
in
rcll
sbbb
push
dec
sahf
movsl
cli
rorb
in
shl
jne
in
cld
lcall
clc
xchg
push
mov
aad
aas
or
test
fstpl
orb
fcmovbe
cmpsb
add
xchg
mov
xor
gs
push
inc
imul
fildll
pop
loopne
fstpt
mov
mov
inc
mov
push
fdivrs
push
pop
scas
xlat
jnp
jle
pop
cmc
aad
addr16
push
shll
inc
xchg
fmuls
pop
inc
sbb
jl
cmp
ficomps
out
and
cmpsb
pop
mov
sub
jnp
test
dec
lods
adc
mov
mov
lods
sub
push
mov
cld
adc
clc
or
or
in
leave
insl
add
hlt
incl
and
dec
sbb
sbb
jnp
pop
mov
push
dec
mov
sub
push
frndint
imul
adc
aas
push
or
mov
shll
jae
xor
testl
cmp
dec
inc
int3
int
aam
lods
imul
jb
dec
gs
gs
jne
jmp
and
out
aam
pusha
cld
mov
jbe
ret
not
jnp
das
sub
mov
push
push
adc
std
mov
ss
mov
fucomip
cmpsb
dec
pop
enter
aam
mov
xchg
push
mov
test
imul
lods
xor
test
mov
je
loop
or
sahf
push
shlb
js
shlb
pushf
pop
sbb
f2xm1
loope
adc
inc
cmpsb
in
vpcmpeqd
jns
into
je
mov
and
or
popf
fwait
je
dec
cmp
pop
push
mov
sub
lds
loopne
ret
fldt
and
sbb
test
movsb
mov
jb
adc
lods
repnz
xchg
xchg
mov
cld
orl
sub
test
test
daa
pop
or
cmpsb
repnz
lcall
xor
mov
xchg
mov
jno
dec
pusha
dec
dec
dec
rol
shlb
dec
scas
dec
mov
mov
loope
aad
jmp
jae
mov
dec
call
iret
test
xor
jl
dec
sub
and
aad
jge
cmp
insl
inc
add
lock
adc
movsb
pop
adc
gs
sub
addl
call
push
add
adc
es
xchg
or
int3
out
push
adc
add
out
movsb
inc
orl
push
fiaddl
in
adc
mov
adc
rorb
mov
and
inc
xor
iret
iret
xchg
insl
sbbl
je
mov
test
ret
jnp
pushf
xchg
imul
mov
and
xor
outsb
bound
lds
das
rclb
ljmp
push
add
fisubl
mov
ss
sub
mov
loop
cld
inc
adc
or
les
out
jp
loop
jno
shl
push
add
or
push
aam
jo
nop
pop
dec
pop
jmp
jmp
sub
out
sbb
and
in
rorl
mov
and
or
adc
js
adc
cli
sti
push
xchg
pop
cmp
scas
shr
xchg
mov
test
sub
scas
xlat
mov
loopne
aaa
push
push
ja
movsb
inc
aaa
daa
stos
push
sbb
mov
adc
ljmp
sbb
std
outsb
insb
inc
outsb
cmp
lds
inc
rcr
dec
cmp
pop
movb
cmpsl
scas
fldln2
push
xlat
cmp
adc
setb
stos
sbb
insl
test
mov
inc
dec
jbe
fwait
cmpsb
adc
xchg
cld
sbb
test
leave
cmp
into
cmp
sub
shlb
lret
dec
jae
fisttpl
sub
std
add
adc
mov
ret
lds
test
mov
gs
out
jnp
push
dec
aam
pop
pop
out
outsl
aas
xchg
adc
ljmp
push
imul
sbb
mov
mov
adc
test
jmp
jmp
inc
and
push
repnz
loope
jl
dec
sahf
jb
aam
rorb
xchg
cli
pop
dec
push
push
mov
push
push
arpl
ds
xchg
test
hlt
or
mov
fucom
mov
mov
je
push
decb
dec
popa
or
cmc
sub
and
mov
cmp
mov
mov
push
dec
in
in
pop
or
sub
popa
rclb
jne
imul
call
jbe
test
push
dec
push
stc
pop
fidivrl
mov
icebp
in
add
je
scas
adc
lock
aad
popa
divl
aad
je
inc
lcall
stos
testb
lds
inc
cmp
pop
and
cmpsb
insl
sahf
jge,pt
repz
sub
js
lcall
cltd
lea
push
mov
cmp
cmp
xor
lods
xlat
ret
std
jo
mov
push
ljmp
cltd
mov
clc
popa
push
xor
xchg
mov
enter
es
push
imul
dec
sub
cmp
mov
subb
lret
and
sbb
push
cmp
shlb
loopne
jp
dec
movsb
lock
out
mov
das
bnd
inc
or
xor
adc
ja
add
rorb
and
cmp
xor
outsl
std
push
xor
xor
insb
or
add
mov
lahf
mov
xor
sub
and
mov
jbe
jns
cmpsb
push
mov
jb
insb
movb
ret
daa
mov
hlt
mov
dec
sbb
sub
pop
outsb
ret
push
pusha
inc
lcall
out
add
scas
push
ror
dec
xor
push
inc
inc
cmc
cwtl
fwait
cmp
cmc
dec
mov
sbb
lahf
jns
jg
sbb
hlt
mov
mov
inc
jge
out
xchg
bound
sbb
push
fiadds
icebp
cmpsb
dec
xchg
repz
dec
xchg
out
push
gs
aas
jb
pop
and
mov
into
roll
std
call
imul
test
mov
arpl
mov
das
stos
jge
mov
scas
pop
movsb
xor
mov
popa
mov
lcall
int
cmp
inc
cmp
leave
mov
xchg
xchg
mov
push
mov
xor
aam
bound
ret
add
xchg
pop
push
mov
ficomps
xor
adc
inc
push
adc
enter
mov
outsb
hlt
mov
pop
addr16
sbb
movsb
cmc
js
mov
movsb
add
inc
push
xor
gs
add
cmp
xchg
es
std
push
xor
mov
xor
bound
stos
mov
xchg
jnp
clc
pop
mov
cmp
push
or
test
test
mov
sbb
test
scas
sar
push
sub
rcrb
in
push
cmpsl
xor
push
mov
xor
adc
es
xchg
ljmp
aas
xchg
cmp
jae
adcb
push
pushf
pusha
xor
jmp
std
lahf
iret
shrb
push
mov
dec
lahf
in
mov
jns
jb
out
dec
aas
xorb
add
out
loope
popa
movsl
hlt
pop
pop
out
pop
sub
inc
mov
mov
mov
test
js
or
push
xchg
outsb
repnz
movsl
and
xchg
fincstp
mov
cmp
mov
in
lock
out
inc
nop
sahf
cld
stos
or
jge
lret
or
or
mov
sub
loope
and
xchg
movsb
pop
add
xchg
jne
inc
mov
pop
jge
pop
xchg
pop
std
iret
adc
mov
aas
add
insb
cmpsl
dec
repnz
mov
or
and
in
shl
cwtl
mov
in
ss
cmp
xchg
mov
icebp
xor
pop
mov
stos
sub
cli
jns
inc
push
pop
and
js
out
xor
fdivs
fmuls
into
xor
jmp
cmpb
push
es
movsb
lds
inc
out
pop
loopne
test
movsb
push
orl
fnstsw
insb
jmp
xchg
xchg
xor
dec
lods
iret
rorb
test
subl
push
loope
dec
sub
push
sub
dec
and
test
mov
mov
or
jns
and
or
ljmp
lret
shlb
push
arpl
or
adc
int3
mov
icebp
sub
push
pop
push
mov
mov
mov
icebp
mov
pop
or
lcall
xchg
push
mov
cmp
jnp
fstpl
frstor
jl
sub
mov
rcr
test
and
jno
in
xor
sub
xchg
mov
mov
jne
movsb
push
xorl
lcall
fs
sub
cmp
mov
leave
fidivrs
and
pop
push
and
mov
jnp
and
dec
aas
push
cmpsb
xor
test
or
daa
jmp
xor
xchg
arpl
rclb
subl
xchg
dec
cltd
and
loop
pop
inc
mov
out
adcl
mov
loopne
int3
or
adc
lock
pop
adc
add
pop
lods
add
adc
mov
push
mov
xor
adc
fnsave
shll
and
lahf
scas
jl
dec
aad
push
push
ffree
push
add
or
arpl
ja
pushf
inc
lds
mov
mov
xchg
push
add
popa
imul
or
imul
insb
cmp
dec
jb
fs
das
aas
repz
xchg
xor
or
jg
enter
sti
jbe
add
imulb
loopne
push
incb
test
leave
arpl
addr16
cmp
in
or
in
pop
or
test
ja
pop
and
cmp
movsl
jl
adc
enter
cwtl
iret
xchg
fnstenv
adc
pop
push
add
test
inc
adc
mov
or
adc
lea
sbb
jne
mov
cmp
xor
mov
out
in
stos
mov
test
sti
std
mov
xor
and
les
call
lcall
and
enter
jp
stc
cmpsl
out
jecxz
jns
testl
imul
xacquire
imul
lods
fwait
add
push
and
cli
cld
cmp
ror
in
shlb
sbb
lods
js
or
cmp
cmp
repz
jnp
sbb
jns
into
imul
cmpsl
and
mov
lods
add
push
push
push
stos
inc
sub
sub
fdivs
les
dec
xchg
stos
ficompl
sbb
jmp
or
out
fsubrs
and
cmp
ror
pop
scas
aaa
hlt
cmp
push
aam
test
orl
sbb
lret
push
push
push
mov
jecxz
sahf
mov
out
stos
sub
dec
push
inc
in
xor
dec
adc
inc
bound
push
outsl
lods
std
pop
mov
aas
xchg
ja
xchg
inc
and
or
fnstcw
out
repz
call
out
adc
cmp
cmp
push
sbb
or
scas
addr16
movsl
add
push
inc
push
xchg
movsl
dec
int
xor
lcall
test
loop
jle
push
inc
jmp
pop
int
xchg
mov
pushf
arpl
sub
sarl
shr
add
xor
push
das
test
sub
dec
dec
lds
mov
xor
pop
dec
mov
loopne
push
xchg
jmp
adc
mov
imul
addr16
xchg
pop
movb
add
loope
sub
inc
imul
leave
push
pusha
loope
mov
insb
push
push
inc
mov
pop
mov
test
iret
fadds
or
add
shll
int3
add
jnp
push
and
ss
ret
jle
stos
into
scas
adc
jae
out
cmp
int3
fsubp
adc
cli
or
mov
xor
pop
lods
and
dec
jbe
and
pop
das
cmpsb
push
daa
ljmp
jnp
mov
lds
sub
rol
cwtl
call
jmp
mov
pop
mov
pop
sub
cmc
mov
scas
rol
pop
lods
add
sub
ror
mov
xor
jne
push
xor
jge
xor
inc
xchg
dec
lahf
push
pop
call
movsl
je
inc
imul
out
jb
mov
icebp
or
out
orl
lret
cmc
test
orl
push
sub
cmpsl
dec
push
shrb
js
icebp
lods
add
sbb
inc
mov
aam
sbbl
jbe
push
mov
adc
imull
sti
mov
ret
adc
mov
mov
add
subl
cmpsb
inc
movsb
scas
repz
imul
dec
mov
inc
or
jg
int
into
xorb
push
adc
lahf
xchg
and
adc
ret
adcl
std
push
out
add
gs
sub
hlt
xor
ljmp
mov
dec
mov
lock
shr
mov
mov
or
lret
jp
mov
cmp
inc
jo
jecxz
and
push
xor
je
and
call
mov
stc
jle
pop
jo
sub
sbb
push
jecxz
inc
adc
ss
int
scas
adc
sbb
or
sbb
lahf
in
jnp
enter
xor
mov
pop
cmp
mov
mov
clc
ja
leave
and
stos
mov
mov
movsl
adc
mov
xor
pop
lret
fnstenv
or
in
sub
or
loopne
sti
mov
add
or
xchg
jae
out
cld
nop
out
xchg
iret
jae
repnz
test
xlat
sysret
gs
outsb
loope
fcmove
push
dec
lret
push
push
aad
or
imul
adc
test
sbb
test
fmull
xor
xorl
jle
sbbl
je
iret
ret
rclb
cmp
cmpsb
test
scas
dec
mov
loop
xchg
xchg
or
fnstsw
sti
mov
aam
fs
mov
or
cwtl
out
mov
aad
xor
scas
mov
xor
fbld
push
mov
lods
outsl
mov
add
or
push
xchg
adc
mov
loop
adc
lret
fldt
in
mov
fdivr
jg
or
mov
and
push
ret
iret
adc
sahf
push
mov
jg
mov
divl
jge
stc
repz
mov
test
es
rcrb
xchg
stc
jmp
in
sbb
dec
xchg
dec
push
std
jno
pop
lods
pop
repnz
test
jmp
cwtl
ss
call
or
ficomps
lods
jmp
pushf
scas
nop
jp
cld
fisttps
cmp
loop
rolb
add
sbb
xlat
cmpb
or
lea
bound
mov
ficomps
out
inc
cmp
leave
xchg
scas
dec
dec
rorl
xchg
pop
shr
xchg
stos
cmp
in
rcll
jmp
popf
pushf
and
mov
in
mov
push
adcb
test
jg
xchg
jmp
adc
out
jo
clc
inc
jns
mov
push
neg
cmpsl
lds
jae
imul
adc
scas
rorl
icebp
je
push
cwtl
mov
jnp
mov
out
cmp
dec
lods
outsb
mov
jno
mov
int3
scas
sub
fsubrl
xchg
std
divb
mulb
into
lods
xor
add
ret
repnz
jns
cmp
dec
sti
insl
loope
sbb
js
pop
mov
arpl
cld
lcall
das
cmp
mov
push
sbb
mov
imull
fbstp
push
ja
out
push
adc
cmpsb
sbb
decb
cmc
pop
sbb
dec
adc
inc
adc
lods
outsb
in
sub
mov
adc
push
adc
insb
jnp
xchg
sub
leave
cmpl
mov
mov
je
sbb
dec
sbb
mov
push
andl
out
xor
push
or
jbe
iret
stos
push
insb
sbb
popf
arpl
lock
test
xor
push
scas
imul
icebp
push
insb
xor
push
xchg
lcall
ret
stos
cmpsl
loopne
stos
xchg
mov
mov
fwait
sbbl
mov
push
adc
xchg
mov
pop
mov
mov
mov
es
mov
sbb
lods
enter
fucomi
cmp
xchg
je
movsb
imull
adc
aas
int3
sbb
or
pushf
push
aad
xchg
pop
pushf
es
and
jmp
cmpsl
add
dec
add
cmp
js
out
fsts
rcrl
dec
lret
ss
jge
sub
lds
sbb
andb
xchg
dec
dec
lock
sbbb
cmp
mov
and
addb
jne
dec
cmovo
into
and
dec
xor
mov
and
dec
lds
test
lea
iret
push
stos
push
int3
lds
je
popa
js
mov
sub
dec
popl
jnp
mov
daa
dec
or
fstp
pusha
push
lea
jnp
and
outsb
in
xor
inc
bound
push
movb
cmpsb
lock
outsb
dec
cmp
mov
pop
icebp
mov
clc
mov
movsb
adc
fildll
mov
pop
push
adc
sbb
and
stc
das
jg
push
bound
push
jno
shlb
jns
dec
cltd
cmc
imul
or
fcompl
and
dec
mov
xor
jg
mov
mov
fsubrs
mov
int
andb
pushf
push
add
das
add
std
bound
xor
test
mov
lret
jle
dec
out
push
icebp
rcr
das
fdivrl
gs
roll
xchg
scas
sbb
sub
mov
cli
je
pushf
cli
push
mov
test
mov
jnp
xchg
fcoml
sbb
rorl
xor
cs
jns
jle
test
test
sahf
lods
xor
sbb
adc
adc
insl
fisubl
jae
inc
fidivs
arpl
mov
fldl
stos
and
iret
xor
jo
pop
jne
mov
subb
cmp
out
mov
popf
dec
sbb
leave
jo
jecxz
inc
mov
xor
cmp
add
rcl
insb
stos
div
subb
pushf
inc
jmp
sbbl
xchg
lret
sub
jge
insb
add
insl
cmp
negb
add
bound
movsl
sbb
mov
or
push
adc
jbe
sub
dec
cmp
push
gs
into
or
lods
in
in
adc
push
xlat
xchg
pminub
push
pop
mov
mov
inc
out
pop
inc
or
xor
data16
test
imul
ss
nop
out
sbb
nop
push
in
scas
sub
loopne
idivl
rcll
jmp
jecxz
stos
inc
cmpsl
adc
adc
shll
jns
jnp
jne
jg
pop
lock
mov
aas
push
inc
xchg
jmp
mov
cmp
add
ljmp
loop
mov
push
xchg
scas
xor
fdivl
pop
push
cmp
sub
mov
pop
or
inc
out
mov
mov
pop
push
je
push
adc
cmp
scas
jle
mov
and
lahf
les
dec
pop
subl
cmp
xchg
and
mov
clc
ja
jb
sti
add
icebp
push
mov
push
enter
enterw
les
and
test
loop
pop
leave
pop
rorl
addr16
jbe
sbb
or
inc
and
les
push
int3
push
mov
and
or
pop
pop
mov
xchg
pop
jno
std
xchg
fwait
add
mov
testl
stos
aas
dec
cwtl
fnstenv
pop
sub
mov
sbb
sub
push
ljmp
scas
and
addb
inc
inc
adc
pop
xchg
lret
mov
test
lea
push
jbe
pusha
testb
sub
dec
xor
lock
dec
pop
fs
scas
mov
jno
ret
adc
push
or
mov
int
lods
test
mov
fstpl
jp
xor
mov
mov
xchg
push
sti
scas
jl
push
bound
loop
mov
stc
and
mov
cmp
aam
test
sbb
dec
cmp
test
inc
scas
dec
pusha
out
fsubs
cmp
push
out
jg
cmpsb
movsl
inc
aaa
test
lea
push
stos
add
jp
les
mov
adc
xor
sbb
lods
mov
add
loop
sbb
mov
das
mov
push
xor
cwtl
in
pop
sub
xchg
and
call
in
std
pop
mov
filds
xchg
push
bnd
imul
fidivrl
dec
push
outsl
push
imul
mov
mov
stos
loopne
mov
push
aas
lret
cs
inc
int3
add
outsb
mov
adc
inc
push
lcall
or
aaa
mov
std
pop
lcall
insl
xchg
in
jle
inc
in
mov
aam
mov
lea
push
mov
hlt
xchg
test
cld
fnstenv
sbb
stos
sbbb
adc
jmp
popa
dec
pop
aas
mov
xchg
clc
imull
sarl
popa
xor
push
pop
xchg
out
cmpsb
fdivrs
aad
xchg
lret
aaa
orb
jns
cwtl
popa
push
cmpsl
shrb
aad
pop
icebp
push
cltd
cmc
xchg
jo
or
push
adc
jbe
into
mov
sahf
sub
pushf
aad
dec
and
fwait
sub
rol
or
loope
sbb
call
cmpl
add
mov
outsl
or
adc
movsl
adc
push
in
fistl
add
sarb
sti
out
push
rclb
rorl
mov
dec
mov
js
xor
mov
test
sbb
sbb
mov
pop
mov
loope
cltd
push
and
mov
mov
adc
xchg
fdivr
sti
jge
inc
mov
cmp
jo
out
repnz
xlat
inc
pop
mov
lock
mov
rcr
jo
jnp
mov
inc
adc
push
or
sub
mov
pop
sbbb
push
insb
rclb
repz
xor
push
mov
mov
imul
dec
adc
dec
mov
popf
mov
mov
and
mov
push
cmp
fnsave
arpl
xor
xchg
xor
loopne
daa
jns
cmpsl
sbb
aad
movsl
xor
sahf
push
idivb
mov
decl
stos
mov
pop
in
out
cmpsl
cmc
icebp
and
loopne
ret
mov
add
inc
popf
lds
xchg
int3
jge
and
jo
cmp
aad
mov
xchg
in
or
and
in
inc
mov
sub
mov
lods
insb
or
mov
dec
lds
in
jg
dec
fld
adc
xor
pop
movsl
fs
pushf
fnstcw
pop
adc
bnd
pop
daa
rclb
jl
pop
mov
outsb
dec
push
mov
xchg
adc
jmp
xchg
mov
and
inc
sbb
pop
adc
cmpsb
push
jp
jae
or
add
das
movsl
mov
sub
pop
jmp
loope
or
movsb
shrb
jne
push
inc
xchg
inc
pop
mov
ret
jl
add
leave
mov
jbe
sti
jo
inc
cmp
addr16
fwait
sbb
outsl
sbb
sbb
add
push
or
mov
xor
and
adc
sbb
mov
fadd
test
adc
nop
mov
mov
ret
or
mov
lea
scas
insl
out
gs
push
mov
jno
mov
cmpsl
shll
cmp
add
cwtl
adc
loopne
push
mov
data16
leave
aam
push
and
aas
repz
inc
mov
push
in
add
adc
jmp
push
xor
jp
add
lcall
lret
and
pop
xor
hlt
test
sbb
jmp
sar
mov
xchg
jne
inc
xor
popf
jmp
andb
inc
mov
cmp
sbb
sbbl
add
js
movsb
movsl
ljmp
push
push
jae
jg
inc
or
adc
scas
test
and
cmp
push
fldt
pop
adc
fcom
and
je
jecxz
push
orl
stos
fcompl
sub
das
lods
pop
xlat
scas
iret
or
fs
int
mov
pusha
or
jecxz
call
insb
lods
repnz
int3
jmp
xlat
or
lods
popf
ret
mov
add
insb
fcomps
shrl
outsl
xor
sbb
sbb
add
adc
push
test
xor
in
push
in
jne
cmp
mov
jo
or
popf
dec
ss
sti
xchg
cld
and
pushf
pop
inc
repz
pop
fldcw
in
mov
stos
sbb
iret
or
addr16
push
jmp
out
xor
test
push
pushf
insb
ss
jb
leave
jp
push
jbe
je
adc
cmp
sbb
hlt
sub
dec
jno
jo
cs
arpl
cmp
push
or
push
lea
xor
lahf
add
mov
sub
movsl
arpl
sub
adc
nopl
xchg
jo
sub
leave
adc
test
mov
push
inc
jne
and
inc
out
inc
lds
inc
or
sbb
adc
div
and
lret
jnp
int3
cmp
xchg
lcall
mov
dec
cmp
sub
pop
mov
lods
mov
push
movsl
sahf
mov
dec
mov
iret
push
sbb
push
mov
ljmp
mov
inc
loop
orl
shrb
js
jge
dec
ficoms
stos
mov
adc
lock
out
xchg
fwait
inc
mov
popf
cmp
icebp
mov
add
pop
xchg
jmp
push
adc
xor
xlat
fists
push
sbb
mov
stc
dec
ja
jl
ja
pop
out
popa
mov
xchg
xor
fsts
lock
adc
aam
dec
ficomps
mov
sub
std
cmp
jbe
pop
xchg
ss
jnp
and
hlt
outsb
mov
pmullw
xchg
sbb
mov
fisttpl
les
loope,pt
iret
jbe
popf
lret
shl
add
and
scas
fnsetpm(287
cmc
sub
dec
popf
inc
push
icebp
mov
dec
js
jo
into
jne
adc
mov
rorl
icebp
ja
pop
mov
sub
dec
jbe
or
sahf
mov
sbb
or
je
jecxz
cwtl
mov
xchg
jo
das
pop
jnp
mov
jle
enter
fwait
add
push
pop
int3
lods
addl
pop
popa
xor
repz
xchg
jge
cmc
rcrb
flds
xchg
inc
sbbb
ficoml
lret
jbe
push
push
ficompl
adc
test
test
dec
adc
ss
jecxz
mov
pop
jne
adc
inc
imul
out
xchg
adc
jns
or
mov
jns
js
fmull
push
mov
js
dec
adcb
or
jbe
cmpsl
sub
sub
testb
adc
std
test
pop
inc
aaa
stos
fisubrs
pop
mov
xchg
mov
scas
jmp
inc
std
mov
lea
in
xor
scas
cmpsb
inc
sub
popa
lods
mov
mov
fdivrl
cmp
jns
lods
sbb
pop
ret
jns
nop
imul
mov
fisttps
xchg
out
add
mov
test
mov
xchg
inc
aad
xor
js
pop
negl
push
cli
lods
jns
jnp
mov
stos
mov
xchg
xchg
ret
pop
inc
ret
pushf
adc
mov
stos
mov
mov
xor
xorb
pushf
mov
jnp
jl
and
xor
loopne
add
cmp
xor
stc
je
inc
ret
sub
push
inc
push
jbe
dec
jne
push
add
add
mov
jbe
jbe
dec
or
sti
push
jbe
dec
mov
mov
mov
ret
add
ret
inc
push
mov
adc
and
outsb
popa
add
sbbb
sub
mov
stos
subl
dec
add
call
out
popa
mov
sar
xchg
mov
cmp
outsl
add
inc
jg
cmpsb
cwtl
cmpsb
xor
cmp
jnp
jmp
addr16
jno
sub
mov
push
dec
push
sbb
push
loope
cmp
mov
sub
out
lcall
leave
sbb
inc
push
dec
sub
pusha
push
and
out
arpl
cs
mov
rep
ror
mov
outsl
or
jle
scas
and
in
xchg
insl
dec
mov
jge
cs
mov
add
arpl
or
lock
sub
sbb
insl
jb
dec
sti
lock
jge
dec
pop
jnp
pusha
sub
inc
add
int
jne
mov
xor
pushl
mov
in
cmpb
pusha
pop
into
mov
cwtl
stos
fwait
pop
pop
enter
js
sbb
inc
int3
dec
mov
jns
cmp
ret
popa
movsl
out
fcmovb
mov
scas
out
imul
das
pusha
clc
arpl
sbb
adc
pop
jns
scas
push
inc
pop
xor
fsts
or
cmc
fsub
mov
xchg
sub
sub
cmc
push
test
mov
lahf
pop
insl
ret
pop
dec
pop
mov
cmp
mov
mov
or
xchg
push
xchg
mov
mov
xchg
incl
dec
cmp
xchg
loope
rol
dec
push
inc
outsb
std
mov
sbb
sub
or
mov
or
jle
mov
push
repz
mov
jns
std
xor
xchg
clc
and
lcall
mov
mov
mov
les
mov
dec
int
loope
jno
mov
add
fadds
xchg
jo
jle
andl
mov
jmp
fildl
imul
cld
das
divps
out
fstps
in
fstpt
dec
xchg
cmp
mov
cmp
jl
jb
xchg
jno
cmp
movsb
mov
push
lahf
cmpsb
or
push
xor
cmpsb
nop
imull
jb
loopne
outsl
jl
pop
jb
adc
fists
movsb
push
outsb
cs
pop
push
sub
inc
dec
repnz
out
jle
mov
popf
cmp
sub
les
xchg
xor
icebp
xchg
ss
sbb
dec
out
pop
shll
xchg
mov
mov
or
push
jns
sbb
or
and
ja
pop
cs
sub
mov
das
push
mov
xchg
gs
push
lods
pop
je
mov
cmp
ficoml
xor
push
rcll
xor
add
mov
inc
mov
xorl
cld
push
adc
inc
push
xchg
mov
scas
mov
loopne
cmp
push
jne
pop
inc
shll
imul
inc
mov
adc
rorl
push
dec
fcoml
aad
sbb
or
mov
sub
add
sub
insb
mov
jecxz
add
inc
xchg
xchg
adc
stos
orb
imul
lods
clc
pop
sub
bound
bound
add
jmp
mov
jg
jo
les
sub
cld
mov
shlb
mov
sbb
dec
test
je
outsb
push
sub
inc
pop
jno
push
rcrb
int3
inc
cmpsb
sti
jl
xchg
xor
jne
insl
adc
cmpsb
xchg
pop
pop
repnz
xor
mov
test
js
clc
add
in
mov
and
test
sub
mov
dec
push
fcmovnb
jnp
xor
call
xchg
jns
adc
loope
loopne
fistpll
notl
sub
pop
cmp
mov
dec
roll
je
js
ret
daa
sahf
mov
inc
insl
sub
mov
and
jle
sbb
lods
into
cmp
pop
imul
sub
inc
andl
test
bound
add
add
push
rol
jno
push
jbe
pushf
fldcw
sub
in
sti
test
daa
sahf
or
repnz
lret
fldl
dec
cwtl
mov
and
xchg
cmp
mov
xchg
imul
and
inc
cmp
lahf
add
xor
fldenv
and
pmaddwd
inc
inc
pop
add
cwtl
and
fldt
in
mov
shll
push
or
test
mov
mov
test
repnz
gs
cmp
xlat
lock
push
fists
test
sahf
out
cmpb
or
mov
sub
cmp
jp
jmp
cwtl
push
mov
subb
push
push
outsb
jb
cmpsb
sub
lock
jp
push
pop
pop
fwait
into
cmpsw
mov
add
fiaddl
ret
arpl
in
adc
add
test
shll
les
out
ffree
imul
or
mov
in
iret
cmc
or
aad
xor
sub
cmp
cmp
xlat
stos
mov
push
movsb
cli
fsubrl
mov
or
dec
stc
mov
lods
adc
mov
lret
es
mov
shl
xor
lock
dec
add
insb
sub
repnz
pop
inc
movsl
lods
andb
fstps
jg
fistpll
mov
lds
repnz
mov
jl
and
popa
cwtl
mov
sub
or
adc
orl
aam
imul
cmp
inc
std
jle
icebp
push
cmc
ret
adc
fmuls
jb
jecxz
mov
dec
idivl
out
push
xchg
divb
ja
fisubrs
mov
push
jl
ffreep
mov
cmpsl
dec
mov
sbb
add
outsb
inc
jecxz
inc
xor
fwait
adc
std
cmp
cltd
sahf
push
fs
test
stos
mov
lret
das
xlat
mov
xor
js
mov
shll
cmpsb
fwait
dec
dec
repz
sub
int
les
jmp
add
dec
fcmovb
push
jecxz
pushf
lahf
adc
in
das
out
pop
repz
out
and
mov
sbb
pop
stos
sbb
movsl
dec
insb
mov
test
push
or
pop
lds
sub
lods
or
add
int3
fdivrl
dec
mov
adc
je
dec
or
icebp
jo
lods
jmp
mov
xchg
cs
add
add
mov
movsl
es
push
jmp
stos
repz
les
mov
dec
mov
xor
cmc
outsb
or
movsb
repnz
data16
xor
and
fwait
ds
test
lret
mov
mov
or
fcomip
rcr
mov
repnz
bound
loop
mov
adc
mov
gs
test
dec
adc
rorl
into
rcll
pop
mov
mov
aam
bnd
pop
push
iret
mov
and
push
stos
out
lods
mov
nop
call
lods
fcmovnu
adc
pushf
xor
ja
popa
gs
pop
aam
cld
inc
andb
inc
adc
shrb
enter
insb
roll
jne
add
lock
inc
add
add
sbb
xorl
testb
mov
test
adc
mov
pop
jne
lods
cmp
pop
xor
cmpsb
dec
pop
jecxz
mov
repnz
jb
repnz
in
je
jge
fimuls
repz
jno
in
stos
sub
or
jp
enter
xchg
sbb
loope
pop
push
inc
sbb
add
and
ror
gs
loope
add
cmpsb
and
loop
popf
jp
in
pushf
shl
add
pop
sub
arpl
cmp
dec
hlt
out
mov
add
ljmp
cwtl
dec
mov
ljmp
xor
scas
cmp
fcmovne
fidivrs
jl
loop
pop
jb
in
jo
pop
sub
sarl
bound
inc
std
fsubl
xor
mov
sahf
jae
in
add
or
adc
inc
cmp
test
xlat
lcall
pop
test
jmp
or
cmc
and
adc
pop
das
rolb
pop
mov
mov
outsb
push
pop
pusha
jns
adc
xchg
jg
std
insb
stc
inc
fdivrs
inc
into
shll
mov
mov
dec
add
push
sbb
mov
add
cmp
cmpsb
lds
or
mov
std
push
lods
je
mov
ja
adc
and
mov
scas
js
repz
mov
rcl
jl
inc
cwtl
cmc
stos
mov
or
or
mov
xor
adc
dec
xor
imul
add
pop
scas
inc
and
fstpl
push
test
pop
pop
mov
mov
das
movsl
pop
imul
pop
out
and
arpl
popf
dec
pop
jl
lea
stos
loope
nop
dec
fdivs
cwtl
int3
adc
lea
mov
mov
repnz
push
pop
push
sbb
xchg
out
mov
stos
cli
pop
pop
adc
push
call
loopne
cltd
in
sub
mov
jnp
sbb
inc
ret
mov
or
es
ret
cmp
mov
mov
loop
sbb
inc
dec
test
mov
jo
fwait
hlt
fs
ss
insl
xor
jb
clc
push
fs
mov
lods
jecxz
pop
popf
rolb
fwait
mov
in
dec
jbe
addr16
add
push
xorl
scas
fs
subb
sti
out
mov
idivl
xchg
mov
test
setae
adc
sbb
in
imul
lcall
inc
sub
or
jle
mov
jle
aas
fiaddl
inc
lock
cmp
push
pop
movsl
inc
dec
push
test
addb
mov
movsl
mov
test
aas
xor
sub
push
xchg
add
aad
jmp
jle
cmpsl
push
inc
cmpsl
pop
push
aam
rorb
outsl
xchg
sub
cmpsb
xchg
sub
pop
dec
cmp
inc
and
lods
shl
or
mov
mov
inc
adc
or
jbe
dec
fldenv
cmp
mov
daa
je
fnstsw
cmp
loopne
cmp
fstl
inc
jle
into
js
adc
out
push
push
cs
adc
jb
add
rcrl
inc
loope
popl
cmp
xchg
mov
cmp
xchg
in
inc
jp
movsb
aam
sub
mov
inc
or
and
xlat
jmp
pop
pop
ret
loopne
and
int
popa
sub
nop
pop
push
and
inc
in
ja
cmp
cmp
jg
lret
add
out
push
popf
pop
out
push
sahf
int3
inc
jnp
mov
out
push
out
clc
jbe
aam
imul
xchg
xlat
pusha
pop
mov
fnstenv
mov
ret
mov
mov
xor
out
push
pusha
sbb
outsb
add
jae
mov
popf
mov
loope
xchg
sbb
pop
mov
push
dec
js
add
inc
inc
adc
dec
xchg
lret
sub
outsl
mov
not
loopne
cltd
in
xor
push
ja
int3
add
xor
icebp
call
mov
scas
mov
mov
ss
ret
sub
or
sub
imul
push
jns
lock
push
or
inc
push
fs
movsl
ds
mov
fwait
ljmp
xlat
popa
push
xor
pop
or
mov
mov
mov
shlb
add
lea
xchg
push
enter
xchg
lahf
jae
jno
arpl
xchg
icebp
pop
dec
rcrl
sub
xor
repnz
pop
xor
or
popf
int
sbb
lea
push
xchg
clc
cs
sbbb
push
mov
aaa
mov
adc
mov
push
scas
pop
test
xchg
jl
add
mov
je
fistps
stos
lods
xchg
ret
dec
adc
pop
jmp
in
or
sahf
leave
xor
jle
xor
add
mov
dec
add
js
je
out
xchg
inc
add
cmpsb
aam
add
mov
and
sbb
mov
mov
shlb
enter
mov
adc
cwtl
mov
insb
stos
insb
xchg
pxor
sbb
adc
mov
pop
jmp
stos
push
pop
flds
movsl
sub
mov
push
sbb
lods
mov
push
andb
out
je
imul
jne
mov
xchg
jno
bound
push
lret
aaa
addr16
scas
pop
mov
mov
xchg
mov
inc
test
loopne
gs
push
and
push
fwait
mov
jb
jge
jnp
cmp
movsl
adc
mov
cmp
gs
inc
push
inc
mov
mov
out
das
lods
gs
loope
xchg
fistps
or
dec
leave
xlat
daa
ret
or
out
push
pop
shrb
imul
cmp
xor
and
aas
mov
cmp
add
lods
out
scas
icebp
popa
pop
inc
into
enter
xchg
arpl
rol
addr16
dec
fisttpll
add
mov
mov
xchg
enter
jbe
xlat
dec
mov
inc
fmull
mov
push
mov
xchg
cmp
lock
ret
xlat
mov
repnz
jle,pt
je
fwait
add
shlb
repz
scas
in
adc
shlb
cmp
xchg
cmpsb
cwtl
loopne
stc
sub
test
add
aas
aaa
outsl
jnp
fidivrs
push
daa
loope
loopne
push
jge
in
in
testb
xchg
shlb
mov
pop
sbb
mov
ss
push
js
pusha
sub
adc
clc
ds
dec
leave
cmpsb
dec
adc
sub
repnz
cmp
inc
and
jp
adc
ss
push
pushf
sub
jb
cmp
imul
fwait
jle
rcrl
pop
cli
fs
dec
stos
jg
cs
cmp
mov
mov
outsb
sub
cmp
dec
sbb
scas
std
jb
jne
push
lret
lcall
ret
fcmovnb
sbb
idivb
inc
pop
or
insl
sbb
mov
inc
lock
and
mov
cmp
jnp
cwtl
mov
xchg
fs
sarl
mov
and
lods
loope
rcrl
movb
mov
pop
aas
rcl
sub
and
pop
movsl
loopne
and
push
out
lcall
out
lods
add
in
sahf
sub
pop
push
jae
cmp
call
pop
stos
cmc
andb
jp
pop
xor
dec
fmull
mov
xor
pop
outsb
shll
cmpsl
movsb
sahf
scas
cmpsb
mov
jnp
ret
mov
lods
jmp
adc
and
xchg
pop
or
mov
jmp
pop
jbe
scas
mov
lods
aam
pop
xorb
pushf
mov
xlat
dec
ficoms
jmp
mov
jp
lds
std
or
enter
push
inc
add
movsl
mov
sbb
mov
fdivrs
lret
jg
aas
daa
inc
xlat
mov
xchg
push
mov
ljmp
dec
mov
mov
sahf
or
lret
aaa
ljmp
fwait
pop
fs
test
pushl
pop
mov
shlb
or
xor
jno
inc
out
rcll
rol
adc
lods
push
call
inc
jmp
xchg
dec
jbe
jb
xchg
es
js
decl
clc
jp
pop
fisubrs
loope
mov
mov
push
cmpsb
pop
outsb
es
sti
dec
js
mov
jb
pop
push
xchg
push
push
imul
mov
aam
fisttps
cmpb
or
add
andb
cwtl
mov
cmc
cmp
mov
lods
dec
xchg
test
je
cld
cmpsb
test
out
inc
mov
psllw
push
cmpsb
dec
and
je
inc
jg
mov
add
ffreep
jnp
push
inc
add
ja
inc
js
push
dec
imul
adc
out
in
gs
pop
jne
push
mov
sti
and
inc
cltd
dec
add
call
mov
push
dec
test
sahf
adc
out
push
ss
gs
push
fs
arpl
imul
es
mov
arpl
pop
stos
xor
and
push
in
push
mov
pushf
or
out
lods
loop
push
xor
int
int3
cltd
movsl
mov
or
pusha
popf
rclb
stos
xor
mov
int3
inc
mov
ds
std
mov
iret
ds
popf
ljmp
insl
sbb
lods
add
lahf
js
jo
lods
arpl
leave
jno
insb
adc
fwait
sbb
cmpsl
inc
jecxz
and
sbb
roll
mov
int3
cmp
outsl
std
sahf
movsl
mov
sub
or
movsl
sub
and
fcompp
lds
cmp
sbb
sub
dec
cmpsl
test
dec
movsl
sub
mov
and
in
jb,pn
jp
scas
mov
iret
mov
inc
in
ror
int3
fnstenv
xor
add
inc
aaa
scas
pop
sti
mov
out
dec
cmpsl
popf
push
fbld
mov
sti
jae
dec
scas
in
dec
mov
inc
mov
repnz
mov
in
jge
lock
lds
dec
test
sbb
loope
subb
bound
sarl
and
adc
cld
stc
pop
into
pushf
fs
repz
push
je
out
xchg
ds
fnstcw
orl
adc
repz
sub
jne
sub
das
aas
test
mov
fldenv
push
call
jbe
in
mov
aad
mov
fwait
mov
add
inc
lea
mov
inc
mov
dec
add
aaa
inc
out
push
mov
out
mov
add
mov
in
mov
fcomi
jmp
imull
xor
cmpsl
xor
mov
fisubl
xor
pop
outsl
outsl
or
sub
xchg
dec
out
loop
mov
jae
mov
lods
hlt
insl
repz
adc
pop
pop
mov
ljmp
cwtl
pop
pop
sbb
das
aad
push
iret
pop
jo
mov
xchg
jmp
test
pushf
and
jbe
add
add
mov
arpl
leave
dec
in
dec
mov
and
mov
jecxz
test
addr16
fdivp
adc
or
leave
stos
fs
mov
ret
mov
scas
pop
cwtl
push
xchg
xor
mov
add
js
jnp
roll
pop
xchg
mov
jno
and
mov
nop
jg
inc
sbb
pushl
add
mov
xchg
movsb
nop
and
add
ljmp
outsl
fidivs
mov
loop
dec
cmpsl
mov
and
mov
pop
dec
outsl
sub
add
sub
mov
xor
inc
push
out
test
imul
inc
ucomiss
into
pop
sbb
shll
dec
pop
and
je
sbb
std
fildl
xchg
adc
ficomps
imul
dec
cmc
bound
pop
jp
ds
ds
out
int
repz
inc
or
push
fs
imul
lret
idivb
or
mov
or
std
lahf
xchg
cld
cmc
stc
push
shl
stc
mov
lea
pop
jmp
jae
add
jne
fwait
in
ja
inc
mov
jbe
lds
jge
mov
sarb
sti
inc
add
je
lret
jecxz
fwait
jns
cmp
stc
mov
cltd
add
and
test
mov
xlat
lcall
lret
or
sub
ljmp
icebp
inc
in
data16
sub
xor
xor
xchg
cli
das
pop
enter
lods
inc
jg
xor
and
dec
nop
cwtl
daa
packsswb
outsb
add
mov
test
cli
dec
mov
data16
hlt
mov
cmp
push
fnstsw
lods
cmp
cmpsb
inc
je
jbe
or
jbe
bndldx
sahf
sbb
xor
fnstenv
je
idiv
jbe
sbb
adcb
repz
push
jbe
xchg
test
push
and
cmp
adc
cmp
push
aad
sub
dec
mov
cmc
and
ds
lret
inc
mov
cmp
and
pop
iret
xchg
add
mul
sbb
scas
fistps
sub
test
cli
push
mov
inc
orl
divl
aad
jl
and
pop
lret
sub
loopne
sub
push
ljmp
aad
push
mov
adc
outsl
daa
hlt
cli
sbb
clc
cmp
sbb
pop
xchg
adc
sub
jnp
jecxz
lahf
dec
adc
nop
sub
cmp
bound
cltd
insl
and
pop
cmp
cltd
add
out
loope
orl
aam
add
cltd
pop
cli
getsec
jmp
and
sti
sbb
xor
test
fimuls
sbb
pop
scas
test
js
js
mov
jmp
and
les
imul
pop
pop
pusha
test
dec
cmpsb
jmp
out
cmpsl
ficoml
dec
dec
fimull
lock
insl
subb
scas
outsb
ljmp
call
je
pop
and
dec
insb
mov
gs
add
ja
orl
aam
sub
sub
sbb
fnstcw
mov
out
andl
in
jo
outsb
lea
sti
mov
pop
mov
mov
push
pop
mov
jge
andb
xor
or
insl
adc
fldl2e
sub
jae
adc
filds
subl
mov
test
aaa
call
pop
xor
mov
faddp
cltd
mov
test
ljmp
jbe
movsl
scas
adc
mov
popl
das
mov
mov
in
cmp
adc
adc
xor
cmpsl
lds
in
lock
xor
sbb
out
adc
dec
cmp
xchg
or
addb
insl
adc
les
add
dec
icebp
add
loopne
hlt
ficompl
call
call
das
lods
add
dec
dec
fdivrp
out
push
mov
pop
stc
dec
scas
push
mov
mov
sub
mov
xor
loop
xor
jbe
mov
sbb
adc
xor
or
enter
shrl
insb
cmp
aas
outsb
xchg
dec
xchg
or
jecxz
cmp
xchg
xchg
ret
inc
sbb
sub
lcall
xchg
pop
call
mov
loope
rclb
inc
test
adc
cmp
mov
hlt
mov
push
mov
xor
add
mov
shrb
out
popa
shll
and
xor
and
jnp
sbb
push
hlt
ja
cmp
dec
cmp
and
dec
mov
or
push
sbb
push
popf
mov
imul
and
outsb
mov
es
inc
pop
add
sbb
inc
xchg
xor
dec
sbb
hlt
adc
mov
inc
cltd
ljmp
xor
div
jb
lret
in
mov
push
push
ficompl
cmp
cmpsl
cmpl
pusha
or
push
aas
ljmp
xchg
sbb
cmpsl
cmc
cmp
jo
xchg
push
cltd
fisubs
pop
add
lock
xchg
iret
cmpsl
or
out
xlat
adc
inc
adc
cmpsb
pop
fists
fcmovnb
pop
sub
outsb
cmp
mov
aam
insl
jo
push
sub
xchg
mov
jo
rcrb
cltd
pop
sub
cmp
push
or
daa
les
cvtss2si
jmp
jge
mov
inc
or
jo
stos
cmp
loop
add
fdivs
or
mov
and
pusha
mov
cld
push
loope
out
stos
xchg
push
cmp
xor
fwait
jecxz
or
sbb
inc
test
lahf
xchg
insl
repz
push
cmpsl
sbb
xchg
cmp
push
xchg
jbe
sarb
repz
mov
pop
xchg
cmp
push
pop
sub
pop
shrl
push
cld
jb
jne
pop
mov
popf
cmpl
mov
mov
scas
push
pusha
cmc
add
ficoms
addr16
out
in
mov
into
adc
mov
xchg
lock
inc
xchg
xchg
fcomps
out
jl
sub
outsb
jae
mov
mov
mov
mov
sahf
xchg
or
lea
stos
mov
or
jns
jle
incb
xchg
xchg
or
inc
or
sub
test
fxch
xor
test
jns
movsb
mov
mov
ret
xor
test
xor
pop
inc
cld
jecxz
cld
ja
and
subb
sti
shrb
fs
fs
mov
lcall
test
push
dec
mov
stos
push
adc
addb
jae
pop
add
sub
aad
scas
jno
aaa
mov
test
pop
jp
shll
out
lea
and
testb
mov
sub
pushf
mov
sub
sub
add
or
mov
inc
aaa
subb
arpl
adcl
pop
fisubrl
sbb
int
fimull
cli
pushf
dec
mov
stos
lods
adc
sbbb
scas
add
out
cmp
adc
or
pop
stos
mov
xchg
imul
testl
test
jle
xor
xchg
test
std
xchg
test
shll
pop
in
dec
adc
mov
jle
negb
hlt
jge
push
xchg
jmp
out
adc
xor
mov
lods
pushf
sbb
sbb
in
sahf
out
inc
lahf
cmpsl
repnz
add
push
mov
cmp
movsb
pop
dec
push
cmp
outsb
inc
jne
out
fbld
adc
mov
add
aas
cmp
sub
fwait
xor
leave
and
mov
testb
les
mov
and
lock
dec
push
xor
cmp
icebp
cmp
ret
mov
stos
pop
and
jecxz
dec
in
jg
sub
mov
jns
jmp
in
xlat
xlat
test
imul
leave
mov
cmp
out
clc
mov
mov
outsl
int3
lcall
push
fcomi
cmp
std
push
or
pop
pop
sub
pusha
stos
aas
jns
sti
or
movsl
jl
add
je
lea
inc
std
and
out
aam
cmpsb
push
mov
call
xchg
add
jb
pop
test
sbb
sahf
add
sbb
push
adc
sbb
aaa
popf
fs
call
lret
dec
xchg
lock
in
and
mov
or
pop
push
xchg
inc
int
or
mov
dec
cmc
inc
sbbl
or
mov
mov
inc
xor
loop
lea
jge
arpl
iret
add
mov
add
add
add
adc
sbb
ret
fistpl
push
out
subb
mov
adc
jle
stc
and
ss
lahf
lahf
mov
dec
in
int3
push
movsb
push
sbb
aam
jns
imul
add
mov
lret
push
fldt
dec
outsl
and
fmul
add
jecxz
cwtl
ss
inc
dec
xchg
jecxz
lock
xor
push
lea
add
jge
pop
movsb
pop
xor
je
and
cld
and
mov
inc
pop
push
xchg
ret
mov
mov
adc
nop
cmp
movsl
add
jg
mov
js
add
or
cmp
jne
out
rolb
pop
rcrl
and
push
subb
add
fidivrl
jle
movsb
stos
dec
pop
dec
pop
decl
jae
popf
jne
xchg
dec
add
lea
cmpl
orl
xchg
mov
ja
idivb
mov
mov
shr
xchg
cwtl
cmpsl
fildl
call
addr16
shlb
bound
mov
xor
out
mov
lds
jecxz
ja
xor
mov
dec
cmp
and
jne
lea
test
ret
push
xchg
ja
sbb
mov
shlb
dec
ficoml
ret
push
cmp
push
jmp
adc
mov
out
clc
adc
ja
and
lret
mov
nop
cmc
and
sub
pop
dec
jmp
lods
adc
mov
jbe
sub
and
push
xor
stc
inc
dec
jno
add
cmp
sub
push
int
mul
inc
push
push
push
je
dec
fnstcw
or
arpl
inc
in
bound
mov
xor
pop
inc
stos
inc
mov
jecxz
frstor
lret
sbb
sbb
out
fisttps
jg
lods
push
mov
ja
js
lods
mov
mov
cltd
xchg
and
push
adc
paddw
jne
push
fstps
mov
xchg
and
mov
jl
xor
push
xchg
pushf
es
xchg
mov
notl
sbb
popf
js
xchg
sbb
cld
test
push
mov
andl
in
fdivrs
fldcw
xchg
insl
xor
test
add
leave
enter
jmp
cmp
push
jns
call
add
dec
gs
lret
mov
scas
xchg
rolb
shl
push
or
outsb
scas
rclb
or
test
mov
and
add
push
and
ficoml
lods
sbb
aam
subb
xchg
sbb
adc
data16
cmp
jmp
aaa
stos
inc
push
shl
push
or
mov
add
pop
mov
sub
jb
in
bound
loopne
mov
fstps
push
push
cli
out
nop
jl
jecxz
mov
push
sbb
mov
or
dec
and
xor
dec
dec
mov
test
fstpt
xor
mov
jb
cmc
cmp
daa
gs
lock
rclb
adcb
ljmp
testb
add
ret
aam
sub
cmp
push
xor
mov
mov
cs
push
mov
popa
cmpb
add
and
aam
sahf
xchg
stc
loope
adc
mov
stos
mov
adc
mov
dec
push
mov
dec
pusha
jmp
mov
adc
and
or
dec
imul
imul
mov
ret
out
push
aas
push
mov
and
ja
push
adc
pop
cmp
xor
addr16
cmp
daa
fwait
mov
gs
inc
fmulp
addr16
xchg
xchg
ror
mov
mov
mov
jle
lahf
pop
mov
data16
sub
dec
or
insl
loopne
ss
cmpsb
xchg
mov
jo
pop
shll
fiadds
or
cmp
imul
imul
cmp
xchg
fldcw
aas
xchg
mov
outsl
mov
les
pop
mov
test
movsl
popl
outsb
fistpl
xchg
sub
push
push
jg
add
mov
cmp
or
sarb
sbb
push
jbe
push
lea
inc
out
mov
adc
scas
jmp
mov
sub
and
sub
les
xor
push
cmc
sbb
loope
push
fs
dec
dec
shl
sbb
mov
test
dec
into
lds
pop
pop
add
cmc
sbb
xchg
cmp
dec
cmp
mov
and
das
leave
inc
pop
sbb
xchg
not
sbb
fwait
adc
fisttpl
push
mov
push
sbb
xchg
add
sbb
clc
mov
sar
mov
imul
neg
out
sbb
cmp
add
popl
xor
sbb
mov
imulb
inc
pushl
jp
or
aas
loopne
test
stc
sub
pop
mov
aam
addr16
scas
jmp
js
mov
enter
push
pop
sub
fstpt
nop
sbb
pop
sub
push
jmp
popa
pop
insl
sub
fstl
inc
ret
dec
xchg
scas
in
mov
mov
mov
adc
into
arpl
sbb
or
stos
cmc
mov
and
ljmp
repz
es
sbb
pop
dec
leave
sub
and
add
pop
cld
xlat
cmp
mov
xor
xchg
test
loope
fisttpl
jg
ret
hlt
cwtl
jl
les
out
jbe
adc
aas
add
adcl
sbb
movsl
inc
xor
inc
call
mov
aaa
add
addr16
xlat
lea
inc
nop
data16
xchg
jne
iret
mov
push
pop
js
pop
adc
xchg
and
rcrb
shrb
jnp
xlat
jg
jae
in
xchg
mov
jo
clc
loope
lea
stc
and
adc
addb
std
ret
shrb
dec
mov
sbb
ja
call
adc
jne
ljmp
dec
jl
push
fdivrs
or
insl
mov
or
xchg
push
std
xor
mov
inc
dec
jecxz
mov
xlat
fldl
cmp
insl
inc
repnz
mov
bound
pop
lods
sub
mov
xor
jp
mov
sbb
mov
jge
lea
inc
push
mov
dec
push
adc
adc
test
mov
call
sar
test
movsl
push
lods
inc
comiss
mov
add
es
cs
cld
cmp
xorl
sbb
xor
rol
xchg
mov
mov
lahf
inc
jns
dec
add
adc
test
dec
lods
mov
xlat
mov
call
imul
psadbw
and
rolb
rorb
mov
mov
frstor
or
jmp
int
mov
push
sub
inc
sarb
stos
fists
mov
cmp
out
les
loop
jnp
dec
push
adc
and
jno
pxor
ja
jb
ret
leave
gs
popa
mov
enter
leave
xor
ja
clc
jl
aaa
rcrl
popf
test
pop
shll
xor
mov
loope
ficomps
jecxz
aad
pop
repnz
adc
and
or
stc
mov
in
and
scas
in
aaa
stos
pop
jnp
into
xchg
jl
mov
scas
inc
dec
inc
jge
popf
xchg
push
mov
inc
jle
in
xchg
scas
loope
repz
and
xor
test
lea
pushf
push
xchg
pop
jns
jmp
xchg
in
sbb
mov
mov
fstps
jno
mov
jno
sub
pop
sbb
test
and
mov
sbb
ja
out
adc
adc
xchg
mov
subb
shlb
add
mov
jns
lahf
xchg
mov
push
pop
pushf
shl
int3
hlt
and
lods
lret
jbe
cmp
ja
push
pop
mulb
sahf
js
lret
xor
xchg
nop
or
stc
stos
push
scas
and
push
pop
or
adc
ret
data16
rcl
mov
mov
divb
sbb
sub
loop
enter
sbb
xchg
stos
mov
pop
inc
jnp
imul
ds
add
aaa
xchg
ret
fisubrs
leave
cmp
jg
jnp
test
inc
cmp
dec
or
xor
in
or
das
faddl
repz
jg
lds
xlat
stc
mov
int3
int
mov
ja
cwtl
xchg
nop
sub
or
mov
jbe
xchg
push
cs
ds
ret
dec
sahf
cs
jns
mov
sub
dec
daa
mov
xchg
arpl
cld
inc
lds
ja
stos
loop
or
mov
rcrw
sbb
sarl
aas
jmp
sub
mov
sub
icebp
adc
push
jo
faddl
jg
inc
cmp
mov
sarl
dec
scas
push
mov
add
or
test
xor
jg
cmp
or
add
lret
inc
int3
imul
xor
push
mov
mov
repz
cmp
idiv
xchg
xor
sti
inc
sbb
jbe
leave
inc
mov
mov
out
lea
sub
dec
and
in
cmpsl
pop
mov
movsb
push
xlat
lea
mov
and
stc
xor
cmp
cmp
add
mov
pop
loopne
xchg
shll
push
push
cmp
out
inc
sub
adc
or
inc
push
std
pop
or
sub
out
add
cmc
inc
inc
popa
and
imul
or
mov
out
dec
mul
es
jg
addr16
mov
dec
enter
lods
jge
stos
dec
or
cmpb
lcall
test
cmp
adc
cmpsb
add
nop
out
std
icebp
into
ds
aam
jecxz
ljmp
sbb
or
inc
mov
pushf
pop
scas
cld
hlt
push
sti
dec
ficompl
mov
cmpsl
xlat
aam
pop
dec
adc
jge
jne
popa
cmp
test
inc
mov
inc
jo
sub
call
pushf
push
push
cs
aaa
daa
das
inc
loopne
insb
adc
jo
fnstenv
xor
in
push
xchg
mov
lcall
in
or
jbe
lahf
xlat
ss
xor
push
and
test
enter
jne
pop
arpl
fisttpl
mov
sbb
and
xchg
movsb
jecxz
cmp
mov
pop
lods
outsb
and
cld
add
lods
pop
out
pop
dec
imul
fdivrp
in
repz
out
subb
js
pusha
and
mov
and
push
push
dec
sbb
scas
sbb
dec
push
adc
and
addl
adc
sahf
popa
int
mov
cltd
test
aad
pushf
add
in
addr16
ret
sub
popf
cmpsl
lahf
or
lods
xlat
in
shrl
mov
mov
dec
in
inc
repz
das
daa
push
adcl
dec
sahf
xor
insl
jmp
insl
outsb
xchg
nop
mov
mov
clc
sti
out
xchg
sbb
jmp
jmp
lods
push
pop
jmp
mov
pop
mov
out
in
push
mov
and
xchg
cli
adc
mov
cltd
dec
lcall
push
je
fcoml
inc
mov
sti
push
pop
arpl
ja
sub
inc
test
inc
jns
pop
dec
repz
lods
lcall
in
stos
pop
cmp
sbb
in
lahf
cmp
or
adc
scas
pop
sbb
shl
xor
mov
jp
push
dec
cmp
stos
shll
push
aad
mov
xchg
xchg
imul
or
in
into
sub
movsb
jb
incl
sub
push
or
fcompl
pop
aas
xchg
sti
imul
xchg
xchg
mov
push
or
hlt
out
push
adc
pop
sub
add
adc
mov
pop
insl
pop
daa
add
aad
scas
cmc
adc
shll
in
jp
or
arpl
inc
inc
pop
sub
popa
ficoml
sub
mov
lahf
dec
movsl
xorl
dec
sbb
add
int3
xor
insl
mov
mov
mov
pop
pop
pushf
adc
test
xchg
lahf
mov
mov
jmp
fnstenv
ja
js
mov
bound
push
cwtl
sbb
pop
push
es
clc
ja
test
or
or
sub
xchg
mov
sarl
int3
jbe
mov
jg
popf
daa
movsl
jnp
lret
shrl
xor
or
xor
jl
mov
xlat
lcall
fmul
mov
out
pop
jae
addr16
lahf
in
cmpsb
inc
adc
mov
mov
insl
mov
in
inc
daa
xchg
lcall
aaa
pop
pop
cwtl
in
mov
cli
movsb
iret
aam
repnz
and
cs
cmc
xchg
xchg
cmp
dec
std
lds
push
fs
dec
fldl
inc
and
js
push
inc
loopne
inc
dec
jo
cwtl
and
inc
dec
out
mov
sarb
fildll
mov
rcrl
pop
lds
pop
sbb
mov
icebp
jge
sahf
push
lea
and
lea
repnz
loope,pt
jo
aam
lods
cld
xor
sbb
cmpsb
outsl
popa
or
jne
out
scas
popf
movsl
cmp
leave
aas
test
in
mov
out
xchg
xchg
mov
out
jb
out
enter
push
les
movsb
pop
sti
add
mov
or
cmp
rorl
orb
dec
xchg
andl
lahf
mov
mov
xchg
out
lods
lahf
jmp
mov
mov
lods
cld
and
inc
ss
mov
push
mov
in
push
inc
rorb
mov
add
xchg
popa
mov
shr
or
insl
dec
nop
insb
fisubrs
inc
sbb
fxch
pop
out
inc
mov
mov
fidivrs
xor
mov
dec
or
fmull
movsl
shl
gs
push
mov
out
adc
cwtl
or
sbbb
imul
mov
dec
dec
test
sbb
xor
fcmove
add
gs
sub
jnp
xchg
sbb
cwtl
dec
adc
xchg
lods
mov
xor
sbb
pop
loope
sbb
ret
adc
jne
gs
push
aaa
inc
cmp
jle
arpl
negl
cltd
push
xor
out
jns
dec
mov
test
stos
in
push
mov
push
add
ss
out
clc
push
fisubrl
mov
pop
mov
mov
mov
push
jl
jl
outsb
dec
dec
add
in
mov
jne
mov
pop
jle
fists
mov
xor
jbe
sbb
push
pop
dec
or
cmp
pop
das
sbb
pop
mov
in
out
mov
movsb
xlat
dec
into
lret
icebp
bound
and
dec
fstpl
cmp
in
sbb
in
lcall
sbb
imul
mov
test
mov
dec
scas
jbe
cli
ret
cmp
sbb
fbld
xchg
ficompl
je
push
adc
xchg
repz
test
repz
inc
add
nop
mov
sbb
or
gs
xor
stos
lea
out
idivl
xchg
dec
rcrb
cmpsb
jne,pn
xor
mov
add
xor
popa
dec
sub
cmp
push
emms
mov
mov
cwtl
cs
shrb
icebp
fildll
or
add
inc
push
adc
ret
test
adc
mov
jnp
sbb
sbb
ss
in
lret
test
mov
xchg
imul
jns
pushf
push
or
pop
push
lea
insl
repnz
push
mov
leave
mov
les
pusha
adc
daa
lret
ljmp
or
in
sbb
loopne
add
pop
daa
cwtl
jecxz
inc
lds
push
adc
mov
cmc
pushf
outsl
test
mov
fcmovnbe
jmp
push
mov
jmp
inc
fwait
aam
push
and
mov
gs
xor
mov
pop
loopne
jb
xchg
cmp
cwtl
daa
icebp
xchg
aas
jg
mov
and
fadds
lret
dec
dec
inc
mov
dec
and
xlat
adc
pop
leave
lock
insb
ss
mov
ss
icebp
sbb
xor
loop
loope
cmpsb
sub
push
in
lret
pop
mov
jo
sub
or
sub
adc
sub
gs
and
imul
arpl
inc
outsl
push
dec
inc
movsb
sti
idivl
xor
mov
outsb
scas
mov
jno
jb
push
xchg
jle
imul
repnz
addr16
and
scas
fcompl
sbb
ficoms
xor
lret
xor
clc
test
sbb
dec
in
ss
mov
or
xor
xor
jle
or
push
pop
outsb
arpl
dec
pop
fstpt
inc
cli
jl
in
bound
sbb
incb
jmp
shll
ljmp
ret
and
scas
pushf
mov
jl
adc
pusha
dec
lahf
mov
xchg
int
xchg
xchg
imul
movsb
pop
scas
jbe
sbb
sub
dec
outsb
jb
pop
adc
or
and
test
cwtl
xchg
rcr
sarl
push
test
fnstcw
mov
int3
adc
mov
movsb
mov
je
and
fisubl
cmp
mov
rclb
or
dec
daa
push
aaa
lret
sub
test
insb
pop
add
mov
jl
cmp
cmp
push
das
insl
mov
xor
push
adc
adc
push
aaa
int3
mov
pop
sub
sti
iret
and
sbb
repnz
mov
dec
pop
ljmp
mov
shlb
loop
or
sub
add
sbbb
xor
mov
and
cmp
in
add
ret
ret
mov
maskmovq
lcall
jns
aaa
inc
out
xlat
dec
pop
mov
loopne
and
inc
fst
pop
sbb
and
std
std
sub
repz
mov
mov
push
rclb
jp
loopne
lret
ret
roll
je
sar
mov
hlt
imul
inc
sarb
les
mov
xchg
or
sbb
ds
pusha
sub
ljmp
dec
repz
and
div
dec
aam
out
adc
push
xor
test
jmp
bound
ljmp
lahf
in
outsl
iret
mov
mov
ja
push
mull
testb
out
cwtl
inc
ljmp
and
les
jns
adc
push
dec
cs
ret
push
pop
push
mov
mov
mov
andl
push
lea
in
adc
push
xor
xchg
jp
mov
dec
dec
jecxz
mov
out
adc
sbbb
jmp
scas
pop
mov
push
xchg
popf
scas
sub
xor
mov
cmpsl
jecxz
insl
daa
and
movsl
mov
and
ljmp
dec
les
xor
test
push
or
shl
sub
pop
icebp
mov
dec
dec
mov
out
jecxz
inc
ss
lret
jmp
add
cli
mov
mov
cli
stos
jnp
aaa
jb
cmp
push
jns
jnp
mov
dec
xchg
test
lret
mov
mov
outsl
cmp
xchg
push
in
shl
jbe
jns
popa
pop
jo
mov
adc
ret
sti
adc
xor
pusha
aas
lods
sti
jae
cmpsl
iret
fldcw
cltd
ror
xchg
hlt
hlt
add
mov
sbb
dec
add
sbb
push
or
aas
inc
and
shrb
les
pop
fdiv
jp
addl
adcl
push
jne
push
jl
out
and
insb
aaa
inc
cltd
sub
hlt
push
fmuls
shlb
lods
sbb
jo
pop
jecxz
jecxz
fidivrl
dec
adc
js
dec
mov
mov
jmp
dec
jmp
jae
lock
movsl
mov
stc
loop
push
xorl
aas
inc
pusha
in
int3
pop
jns
dec
xor
inc
add
aad
outsl
mov
pop
adc
mov
inc
sub
inc
mov
cmc
aaa
inc
rorl
cmc
js
cmp
inc
hlt
repz
or
orl
mov
cmp
inc
mov
mov
inc
inc
push
adc
dec
jl
sub
out
mov
test
insl
dec
xor
clc
idivb
in
jae
xchg
scas
jb
sub
adc
daa
push
xor
lods
clc
lods
out
out
fadds
int
pop
divl
cltd
jl
fsts
ss
out
xchg
cltd
pop
dec
loop
push
bnd
or
popa
jl
jbe
ret
and
fs
aas
icebp
clc
dec
mov
pop
loop
nop
dec
out
mov
aad
aas
decl
iret
mov
aas
jecxz
cld
pop
ret
pusha
in
xchg
lock
popa
mov
sbb
test
xor
xor
mov
jle
add
fiadds
out
and
nop
in
dec
sub
mov
add
fdivrl
push
add
mov
imull
xchg
lahf
or
daa
ja
pushf
ret
sub
rorb
or
pop
pop
pop
outsb
ja
test
push
push
pushl
jae
or
into
pop
lods
outsb
adc
std
jmp
push
mov
jg
ja
fistpl
aas
lds
jne
xchg
cltd
call
push
jae
xchg
pop
std
movlps
bound
arpl
xlat
sub
fld
outsl
push
add
call
mov
xor
lods
mov
or
ret
mov
pop
addr16
sbb
clc
into
shrb
outsl
ret
cmp
adc
dec
out
mov
dec
xchg
jne
sbb
push
sub
cltd
push
pushf
mov
mov
push
imul
pop
cmp
add
fimull
mov
fmul
mov
fidivrs
pop
fldt
jmp
sbb
xor
jmp
push
xor
lds
data16
inc
outsl
sbb
xchg
leave
lea
test
mov
push
nop
int3
rorb
mov
xchg
bound
outsb
xchg
jg
adc
int
xor
movsb
push
and
cmp
xchg
jmp
adc
cmp
xorb
stos
lret
xor
sti
jmp
int3
imul
mov
lahf
popa
je
jb
iret
shl
aam
repz
leave
push
test
jmp
mov
mov
int
sbb
mov
dec
jg
movsl
rolb
inc
in
jl
sbbl
stos
add
xor
pushf
cmp
insl
cmp
add
ficoml
jge
sbb
idivb
dec
pop
addr16
insb
mov
dec
mov
push
xchg
insb
aas
jbe
cmpb
faddp
roll
orl
lret
adc
xchg
sbb
sbb
mov
cmpsl
std
adc
sbb
xchg
or
sbb
mov
push
and
adc
sbb
loopne
cld
int3
test
jne
mov
loope
movsl
lds
mov
add
dec
inc
pushf
data16
or
in
xchg
and
jle
ficomps
sar
mov
push
dec
pushf
xor
sbb
test
sbb
cmpsb
adc
mov
xchg
ss
inc
shll
mov
mov
mov
mov
test
add
shlb
lods
mov
dec
les
mov
addr16
in
sub
adc
inc
mov
in
popf
sbb
ds
adc
mov
push
and
and
lds
mov
xchg
mov
mov
xchg
pop
cmpl
and
fistl
add
inc
jl
ret
ss
imul
loop
arpl
xor
out
cmpsl
or
sbb
enter
hlt
fwait
inc
mov
loop
push
shll
pusha
push
pop
push
ret
mov
lcall
jae
mov
lods
insb
pop
rcll
arpl
fadd
es
pop
pusha
iret
cs
loope
pop
xchg
inc
fbstp
int3
imul
inc
push
push
xchg
sarl
shrb
push
jns
test
sbb
mov
test
mov
loopne
pop
loop
and
scas
movsb
jmp
jmp
mov
adc
xchg
pushl
icebp
mov
mov
iret
outsb
es
pop
stos
push
mov
sbb
loopne
movsl
aam
sub
inc
lods
roll
jge
adc
leave
bound
lcall
stos
add
and
clc
inc
in
jno
lods
xchg
sub
test
xor
iret
fstp
dec
stc
pop
push
push
push
pop
add
lret
mov
mov
inc
pop
insb
push
mov
jo
in
cmp
cmp
das
shrl
dec
lds
push
pop
jmp
in
jmp
or
jmp
cwtl
pop
cmpsb
push
lds
sbb
ja
lock
add
loopne
into
outsb
sahf
jns
and
and
jns
jge
xchg
jl
lret
push
jp
add
pusha
out
scas
mov
or
pop
aad
stos
adc
movsb
test
in
jmp
cld
js
sbb
ss
push
sub
and
lock
jg
ljmp
test
xchg
in
in
popa
in
push
add
add
data16
andl
test
xor
dec
mov
insb
imulb
cltd
jg
pushf
mov
movsl
in
pop
les
fadds
xchg
movsl
mov
lahf
sti
es
jl
fnstsw
and
mov
xor
or
test
xor
pop
sbb
je
lahf
add
jns
mov
push
push
pop
push
movsl
into
insb
xchg
out
adcl
adc
xor
into
call
mov
and
and
and
shlb
xchg
enter
rcrl
jl
mov
imull
int3
stos
loopne
lcall
and
popa
dec
add
pop
sub
lahf
xlat
and
push
pushf
xchg
xor
mov
out
lret
cmpsb
shr
call
mov
jnp
cmp
mov
notl
xchg
call
xor
sti
popa
dec
inc
cmp
rorl
lret
lods
fistpl
mov
adc
adc
xor
addr16
ror
jecxz
xchg
outsl
add
inc
mov
cmp
xor
cltd
or
int
loope
dec
xor
lock
add
sub
icebp
lcall
cmp
loop
sbb
aaa
or
pop
xchg
adc
mov
cwtl
lret
xchg
mov
adcb
inc
xchg
dec
xor
cld
xor
loop
nop
push
pop
leave
lds
xchg
sbb
mov
dec
test
dec
jmp
pop
cs
cld
push
xor
or
rcrb
xchg
enter
sub
insb
pop
fdivrs
pop
in
aad
inc
push
or
fscale
sbb
out
test
fisubrs
mov
rclb
mov
push
push
add
mov
pushf
dec
decl
push
pop
aam
or
jl
inc
fdiv
adc
rclb
mov
jecxz
enter
jo
pop
adc
out
mov
pop
cmp
out
test
cmp
sub
sub
dec
andb
mov
cmp
lock
fsubl
shlb
loop
push
in
movsl
cmp
jae
popf
and
nop
movsl
jo
pop
fsubp
dec
jmp
shrb
pop
ja
add
lret
fidivl
decl
sub
outsl
dec
mov
arpl
mov
mov
sub
push
cs
and
in
nop
pop
les
push
inc
cmp
mov
decl
fstl
xchg
xor
lds
push
bound
int3
xor
es
out
loop
mov
mov
inc
push
into
stc
lods
int3
mov
and
xchg
rorl
sbb
pop
lahf
xchg
in
fwait
arpl
imul
aad
xor
shrl
cmpb
cmpsb
mov
lods
sub
inc
cmc
push
pop
mov
outsl
xor
adc
inc
imul
mov
cmpsb
nop
stos
dec
mov
fildll
mov
cwtl
aad
movsb
lcall
je
jge
das
loope
jae
cmp
fstl
mov
sbb
jg
sbb
nop
jl
pop
rep
stc
add
add
cmp
mov
aaa
xor
idivl
repz
lret
outsb
pop
xchg
cmpsb
fwait
cs
pushf
ja
adc
aaa
jecxz
dec
test
xchg
lahf
add
push
xchg
out
xlat
xor
mov
jle
and
mov
daa
cli
pop
push
xchg
sbb
dec
dec
lahf
sub
and
push
and
testl
stos
push
cli
out
xchg
sub
adc
fwait
sbb
lock
and
leave
sahf
xor
sarb
cmp
add
jnp
out
lea
stos
and
fnstcw
in
out
fs
cltd
jecxz
outsl
cmpsb
push
fs
ja
ret
or
hlt
int
bound
jmp
jbe
jge
dec
and
notb
or
dec
mov
pop
mov
cmpsl
xchg
xchg
int
mul
dec
imul
scas
shrb
cwtl
lods
cmp
or
cmp
or
xchg
cmp
sbb
jae
setle
dec
jo
push
enter
cwtl
jne
repnz
push
in
xlat
jb
adc
je
rolb
je
popf
stc
std
sbb
negb
cmp
popl
in
pusha
sub
inc
test
les
mov
push
adc
mov
shl
dec
jle
mov
test
or
icebp
lock
sti
fsubr
lods
pushf
mov
mov
data16
cmp
lret
xchg
bound
test
mov
xor
mov
sub
mov
adc
in
mov
out
ss
xchg
xchg
cmp
outsb
mov
mov
jp
fucomp
jle
fwait
out
jg
popa
dec
push
jno
sub
push
es
mov
sbb
push
sahf
fwait
vunpcklps
inc
inc
dec
popa
mov
lea
xor
je
xchg
cwtl
xchg
loope
iret
aas
sbb
fucom
and
xchg
sbb
dec
incb
insl
mov
sub
stos
pop
sti
pop
cmp
adc
outsb
xchg
mov
pop
dec
and
jmp
lock
int
mov
xchg
dec
or
jecxz
icebp
dec
and
insl
mov
sub
cli
pusha
add
mov
out
sub
enter
add
xchg
dec
adc
lcall
cmp
scas
xchg
xchg
push
push
or
movsb
sbb
cld
mov
inc
icebp
shrb
and
push
ret
and
push
in
stos
pop
dec
sbb
jne
jle,pt
ja
call
cmc
mov
mov
add
and
sub
lahf
mov
jmp
jnp
std
sub
lods
jecxz
and
fadd
pop
and
cwtl
lods
jle
sub
inc
mov
xchg
mov
xor
vpmadcswd
vphadddq
jmp
xchg
mov
pop
push
test
jl
cmp
cmpsl
dec
div
in
inc
mov
popf
or
add
mov
mov
ds
ret
xor
push
je
push
rorl
bound
inc
pop
sbb
ja
jns
jns
jbe
lods
push
mov
mov
cmpl
mov
pop
add
in
shl
icebp
ds
insb
mov
aad
test
sar
pusha
push
add
jecxz
xchg
pop
call
cmp
push
mov
or
mov
push
push
out
mov
cmp
lahf
or
and
push
xlat
push
cmp
jbe
xor
push
xchg
sbb
xor
and
sarb
loope
xchg
es
imul
jnp
and
xchg
pushf
push
xchg
es
nop
mov
or
sbb
loope
fldt
or
mov
popa
cwtl
fisubl
add
ds
je
shl
jmp
popa
clc
and
leave
sub
cwtl
mov
push
xor
out
jg
add
movsl
xor
test
add
pop
mov
inc
fucomi
and
int3
orl
inc
mov
test
pop
cs
lret
fdivrs
and
inc
es
rcrb
pop
mov
test
mov
ds
xchg
aad
push
xor
xchg
xor
dec
jp
xlat
pop
rcll
fs
repz
jg
mov
push
repnz
xchg
pop
xorb
fsubrl
push
pusha
arpl
ja
or
psrld
jle
cmp
mov
imul
loopne
inc
mov
rep
jge
out
sahf
jb
mov
mov
popa
push
lea
dec
iret
fistps
imul
xlat
ret
mov
popf
push
divps
popa
mov
mov
ss
xor
cmp
stos
enter
stos
xorl
jns
push
xor
mov
mov
iret
push
mov
lods
xor
sbb
mov
nop
lods
outsl
in
bnd
jle
inc
in
push
movb
mov
sarb
and
nop
cwtl
std
sub
cltd
xor
pop
repnz
popf
push
and
xor
ja
jmp
jae
shlb
repz
int3
mov
das
jge
cmpsb
cli
ret
mov
fisttps
movb
ja
ficompl
sub
stos
jne
cmpsb
lret
bound
pushf
out
xchg
jne
sbb
ss
add
xlat
jb
or
sarl
cwtl
lret
lret
pop
cli
mov
lret
adc
dec
jle
jl
mov
mov
pop
dec
xor
loopne
or
adc
mov
or
pop
into
jp
rcrb
mov
or
lods
and
sti
and
push
cmp
jbe
js
inc
fcomps
lret
ror
pop
add
mov
jmp
add
mov
testb
nop
xor
mov
push
shll
inc
ja
push
add
mulb
dec
mov
jge
sub
dec
dec
div
xor
fnstenv
cmpsb
imul
icebp
mov
push
jge
inc
adc
mov
cs
decl
or
jmp
mov
jb
movsb
xchg
xchg
jg
sbb
imul
in
pusha
leave
cmp
cli
cwtl
jmp
nop
push
push
and
in
test
or
aaa
or
pop
jl
pushf
sub
mov
rorb
jo
jbe
mov
stc
loope
cmpsb
mov
loopne
pusha
sub
addb
aas
sahf
mov
out
sub
shlb
js
mov
outsb
adc
mov
xlat
mov
xchg
movsl
fwait
dec
mov
insl
repz
pop
stos
push
mov
call
negl
pushf
repz
pop
pop
or
sub
ss
std
fldl
ljmp
push
bound
fmuls
push
lea
inc
mov
clc
roll
enter
in
mov
add
xchg
dec
iret
sti
shl
and
mov
push
inc
xor
fsubr
aam
fdivrs
cmp
or
in
inc
mov
push
mov
xchg
sub
cld
mov
pop
cld
aaa
push
lods
aam
scas
aam
pop
ja
jno
divl
rorl
add
and
xlat
in
sbbb
inc
push
cltd
jns
cmp
adc
push
xchg
movsl
imul
push
lock
cmc
in
lods
pop
dec
sahf
dec
dec
mov
and
and
cltd
add
jae
dec
lea
das
stos
push
outsb
arpl
cli
ljmp
or
xchg
psllq
jmp
out
mov
sub
push
lret
and
mov
inc
or
fiadds
push
icebp
fildll
push
aas
mov
pop
cmp
fwait
xchg
sub
lds
leave
rorl
mov
jo
dec
sub
cmp
sarl
jo
cs
mov
mov
shrb
add
mov
int
mov
sbb
insb
sub
push
inc
jg
je
fldenv
cs
int
push
sub
dec
fidivs
shll
mov
testl
cmp
inc
or
adc
pop
xor
ja
jmp
inc
ja
pop
push
push
stos
stos
mov
push
bound
dec
sbb
jb
fwait
mov
sahf
mov
lret
test
jmp
xchg
iret
push
push
xor
jo
shll
pop
dec
pop
sub
and
pushf
or
and
pop
xor
sbbb
repz
sbb
jle
jbe
pop
arpl
jb
sbb
ja
rcl
test
or
adc
adc
xchg
sahf
mov
repz
fwait
pop
jns
movsb
inc
jae
add
adc
jno
fisttps
jae
mov
xlat
mov
and
popa
push
sbb
jb
je
cmp
add
mov
sbb
icebp
testl
stc
pushf
push
rcl
dec
scas
test
xchg
push
loop
cmp
inc
adc
mov
jle
sbb
inc
cmpl
push
dec
xor
mov
push
xlat
pop
push
pop
lock
es
lock
fwait
lgs
test
adc
mov
xor
testb
push
jg
mov
jo
mov
add
loopnew
pop
jl
je
std
jne
push
aaa
pop
adc
push
lods
xchg
loope
pop
shrl
movsb
sub
bound
add
xchg
inc
inc
lea
add
out
xor
rorb
test
stos
incl
stos
aas
add
inc
addr16
stc
push
andl
mov
add
ss
pushf
cmpsb
jmp
push
rolb
pop
pop
pop
jmp
fmuls
je
in
dec
adc
mov
popa
scas
inc
arpl
stc
sub
push
xchg
inc
jno
js
fneni(8087
sub
lds
stos
adc
xchg
cmp
mov
push
xor
sub
psubw
and
inc
lret
out
pop
pminsw
jnp
dec
bnd
push
mov
and
mov
push
and
es
xchg
imul
bound
sbbl
les
cmp
mov
mov
xchg
xchg
cltd
push
cli
add
inc
add
subl
mov
push
sub
fisttps
cmp
mov
int3
icebp
fs
pop
mov
in
pop
sbb
add
mov
adc
sahf
les
je
data16
pop
scas
shl
out
mov
in
and
outsb
int
lods
addr16
jns
push
lret
mov
fstl
or
cmp
push
sbb
sbb
mov
mov
cmpsb
adc
std
xchg
das
xchg
xor
fcoms
xor
or
icebp
adc
stc
mov
mov
out
xchg
inc
mov
ds
push
xor
jmp
push
shrb
mov
push
stos
adcl
jge
sub
and
xchg
push
sbb
test
dec
imul
int
adc
loopne
cmp
in
sbb
jae
in
ficompl
insb
sbb
adc
rclb
sbb
iret
sarl
jmp
xor
jl
lret
dec
mov
xchg
scas
popa
push
pop
sub
jg
bound
inc
jo
repz
jnp
or
pop
push
sbb
sub
xor
movsl
mov
incb
dec
sbb
mov
les
inc
cs
fstl
sbb
or
lahf
stos
jne
dec
inc
imull
mov
fldenv
xor
mov
inc
cs
cmp
gs
xchg
jmp
shrl
mov
push
sti
jecxz
movsb
mov
add
das
nop
popa
je
inc
adc
enter
lods
das
cli
addr16
cmp
ficoml
jae
or
icebp
mov
jp
mov
cmpsl
xchg
lea
andb
add
jnp
cltd
xor
adcl
fmuls
inc
cwtl
aad
jns
cmpsl
cwtl
sbb
xchg
add
lods
xchg
in
fisttpl
adc
xchg
mov
mov
add
and
aas
jmp
cmp
pop
push
testl
fs
mov
xor
mov
sub
ss
jecxz
and
dec
cmp
inc
rolb
mov
push
cmp
xchg
insb
dec
loopne
rcr
scas
dec
outsb
jmp
push
dec
adc
enter
insl
xchg
and
push
xor
and
push
icebp
popf
sbb
int3
ja
adc
mov
repnz
inc
dec
aaa
ljmp
cli
scas
sbb
or
popa
xchg
pop
fwait
loopne
dec
ja
fisttpll
cs
dec
ficomps
mov
mov
orl
stos
add
or
xorl
jne
mov
pop
jecxz
ja
sbb
cmc
cmpsb
add
dec
mov
testl
imul
dec
or
bound
fwait
popa
divb
hlt
loop
lcall
push
mov
cli
sbbb
push
mov
push
inc
inc
movsb
xorb
fstl
lahf
mov
jbe
adc
pop
mov
das
sub
jmp
cmc
sbb
pop
jae
sub
frstor
mov
subb
adc
mov
mov
test
jmp
call
mov
sub
dec
fs
jae
mov
xor
pop
adc
ljmp
inc
sbb
aad
imul
sbb
bound
jge
std
adc
leave
mov
mov
xchg
cli
dec
mov
adc
and
fsubl
repnz
roll
cmpsb
sbb
in
or
pop
mov
inc
lea
hlt
lahf
mov
dec
pop
fwait
mov
call
cmp
lret
inc
nop
jmp
mov
pushf
rorb
push
mov
add
or
inc
addr16
add
and
cmp
movsb
mov
aas
push
push
orl
imul
pop
lods
nop
into
test
jbe
and
aaa
jg
add
mov
sahf
push
or
out
mov
push
mov
jo
push
decb
rol
mov
inc
int3
cmp
mov
mov
in
mov
les
inc
ljmp
push
and
push
shrl
dec
push
sub
xchg
cmp
xchg
loope
jmp
mov
ret
fwait
sbb
sbb
popf
jle
shll
lods
lret
ret
push
sbb
lcall
ds
jne
dec
shrl
aad
dec
mov
sbb
cld
mov
and
imul
das
ret
push
xchg
notb
xchg
data16
jmp
adc
inc
fwait
sbb
stos
jb
nop
dec
xlat
cmp
data16
pop
mov
clc
and
orl
jno
cs
lea
adc
push
movsl
xchg
movsb
repz
rolb
push
in
ret
mov
shll
aaa
hlt
xchg
repnz
mov
in
ljmp
jecxz
lret
mov
sub
loope
outsb
je
lock
daa
push
test
and
ret
pop
pop
pop
shl
cmp
adc
imul
xchg
inc
stc
jmp
push
int3
imul
pop
cltd
pusha
js
mov
mov
cld
add
rcrb
add
pop
xchg
mov
jecxz
cld
aas
incb
xchg
mov
adc
mov
bound
pop
fisttpll
jno
loopne
adc
ljmp
movsb
or
sbb
or
push
je
jmp
fnsave
popf
fstpl
jp
imul
cld
or
dec
sti
pop
js,pt
fistps
or
jns
rorb
jne
mov
cli
call
dec
cmp
jle
rorl
jne
rcl
mov
cli
out
xor
fs
or
and
lods
enter
out
dec
jl
sub
xchg
sbb
ror
jmp
cmp
inc
push
lret
mov
out
adc
cwtl
movsl
insb
shl
sbb
inc
jbe
inc
push
sbb
jne
ljmp
in
mov
cmpl
out
xor
cmp
xor
ljmp
scas
popa
mov
push
cmp
rol
and
subl
fwait
cli
testb
ljmp
push
in
mov
gs
cmp
xchg
cli
mov
cmp
jle
daa
mov
out
repz
negl
std
enter
cmp
mov
xchg
mov
add
mov
imul
jge
jae
push
mov
sbb
or
dec
nop
or
mov
mulb
push
add
jbe
popl
in
popf
mov
cld
arpl
xor
dec
outsb
or
leave
xor
in
push
fwait
mov
and
xchg
dec
xor
imul
lods
push
les
in
push
loope
mov
fisttpl
pop
test
xchg
lock
testb
insb
sbb
std
xchg
fsubrl
roll
fimuls
fwait
push
mov
icebp
out
xor
cpuid
into
or
and
in
xor
push
adc
jb
ljmp
xchg
sbb
jne
fwait
push
cmp
sbb
cmpsl
adc
insl
dec
pop
lds
les
mov
and
inc
mov
roll
jecxz
fs
pop
cmc
push
fcmovb
mov
mov
adc
mov
inc
loopne
scas
and
mov
push
inc
sub
loopne
jns
and
dec
pop
scas
sbbl
push
test
xchg
lods
dec
jno
dec
inc
out
or
mov
xchg
inc
cwtl
mov
sub
xchg
sub
mov
mov
data16
loope
test
repz
das
das
jne
clc
mov
cmpsl
inc
cmc
ret
aas
aam
mov
jno
inc
das
aad
dec
mov
mov
aas
and
movsb
inc
pop
in
xor
pop
lret
je
push
out
out
imul
cmp
sarl
mov
out
cmp
in
in
and
ss
sbb
hlt
fwait
sub
xchg
xchg
decb
jb
and
inc
sub
enter
push
xchg
fiadds
leave
xor
pop
je
add
or
dec
lret
or
jne
pop
jb
enter
push
cmp
lahf
aam
std
sbb
and
jb
les
enter
mov
inc
mov
xchg
add
inc
sbbl
icebp
aad
andb
dec
daa
or
outsb
loopne
sub
xor
repnz
sbb
les
test
add
push
xor
es
xor
jmp
mov
add
mov
fisubrl
ret
push
in
mov
lret
iret
js
loope
arpl
testl
dec
pop
loop
xchg
cmp
mov
mov
je
jne
stos
rcr
aas
test
outsl
push
stc
cli
fiadds
outsb
test
xchg
and
sub
outsl
lea
outsl
pop
mov
inc
mov
xchg
inc
jbe
add
test
test
pop
inc
out
xchg
push
hlt
inc
lock
loopne
inc
ficoml
mov
cmp
loope
imul
pop
inc
popf
stc
xchg
or
mov
insl
mov
shlb
cs
adc
sub
bound
sbb
xor
out
loop
push
ljmp
or
xor
mov
pop
push
int
lcall
mov
pop
mov
call
sbb
cld
pusha
vxorps
pop
or
outsl
sub
inc
jg
lock
je
inc
popf
xor
aam
negb
aad
std
xchg
adc
lret
mov
shll
sbb
push
lea
mov
fistps
push
loopne
iret
or
jg
stc
dec
and
mov
decb
shll
pop
mov
jmp
dec
movsb
push
dec
sbb
and
pop
into
ljmp
pushf
insl
and
pop
lods
subb
pop
sub
inc
addr16
dec
fs
imul
sbb
cmp
fadds
jno
mov
and
insb
dec
jae
xchg
pop
shlb
stos
pop
inc
mov
adc
push
adc
sti
pop
imul
jae
rcrb
adc
xchg
ret
mov
inc
mov
fisttpll
xor
scas
rorl
and
out
push
jns
or
shl
movsl
xchg
adc
jns
aad
scas
sub
jns
bound
inc
stos
fdivrl
pop
leave
adc
jns
mov
fs
cmpsl
arpl
shrb
inc
push
jo
pop
ss
jmp
cld
dec
in
jmp
cmc
out
pusha
data16
push
stos
cmc
xor
jne
push
and
es
dec
mov
ss
test
pop
mov
bound
add
adc
enter
inc
shll
inc
lret
mov
xor
fsubrl
mov
test
dec
mov
and
sbb
test
sbb
add
jnp
push
out
adc
cmp
dec
push
push
xor
daa
xchg
mov
jecxz
pop
dec
imul
in
jbe
push
fs
or
cmp
stos
cmp
adc
sbb
aaa
cli
pop
rclb
pop
clc
cld
dec
ds
sbb
leave
sbb
xlat
and
xor
pop
fcoml
adc
sub
xchg
and
subb
jg
aam
or
xor
cmp
pop
push
or
add
xchg
rclb
mov
push
dec
js
sub
movsl
xchg
or
add
test
or
sub
sar
inc
cmp
add
mov
push
aad
sbb
push
stos
lret
sbb
push
leave
and
pop
movsl
jbe
xor
mov
imul
xchg
adc
insb
sbb
or
ja
mov
push
add
iret
pop
in
mov
lock
add
adc
xor
xchg
jno
fs
and
adc
pop
cmp
loopne
push
push
mov
xor
cmp
mov
rcrb
mov
cmc
mov
sub
sbb
dec
sub
cmp
lods
xchg
mov
dec
insb
xchg
mov
mov
mov
jne
mov
cmp
or
aad
stos
and
les
cmpsl
ds
push
test
inc
jmp
pop
mov
fildll
or
push
dec
das
xor
jle
pushf
arpl
cmc
jnp
inc
xor
es
mov
push
and
push
mov
int
repnz
imul
mov
notl
ss
xchg
dec
rcl
jns
sti
fld
push
popl
jno
test
lds
xor
insl
inc
cmp
jg
jae
jle
mov
test
pop
scas
pop
pop
dec
jmp
push
lret
dec
mov
cs
bound
insb
mov
adc
inc
out
popa
cmp
into
shl
cs
ds
xor
rorb
or
rcrb
call
pop
pop
jge
cmp
xlat
push
outsl
ds
movsb
add
cs
out
test
xchg
jecxz
mov
int
test
dec
or
mov
int3
bound
mov
jb
mov
add
inc
xor
jae
fs
aad
pop
inc
cs
hlt
sahf
frstor
inc
pop
sub
je
xor
push
movsl
frstor
cmp
nop
dec
insl
xchg
daa
fcoml
and
sarl
sahf
jno
es
pop
adc
pop
cmp
jno
dec
and
jg
cmp
or
loop
mov
add
sub
sub
or
pop
pushf
aad
cmp
notb
sti
xchg
repnz
pop
scas
jns
dec
adc
adc
ja
cmp
lcall
push
inc
mov
inc
les
frstor
rcl
and
aam
inc
out
lea
fnstcw
and
pop
jmp
cmp
movsb
xchg
loope
into
cmpsl
popa
cmp
jb
fcom
dec
push
jp
add
push
sub
cmp
lret
pop
inc
aaa
cwtl
push
adc
mov
add
add
outsl
mov
jmp
mov
ja
xchg
bound
rclb
xchg
push
cld
jmp
mov
or
testb
adc
lret
pop
cmc
sub
fcoml
movsb
out
jns
mov
leave
and
mov
orb
in
push
ret
jp
mov
or
mov
xchg
dec
imul
xor
das
test
add
adc
fsts
mov
aad
jecxz
jle
pop
add
sbb
xor
pop
int
mov
mov
shl
hlt
or
jmp
jnp
dec
ljmp
arpl
mov
xor
scas
sbb
roll
mov
lds
jl
sub
jl
sub
jle
stos
mov
sub
mov
add
rol
aad
sub
mov
push
bound
jae
sub
je
nop
jle
push
xchg
aaa
cmp
outsl
ljmp
popf
cs
test
pop
pop
jmp
jl
in
or
imul
ret
sub
data16
mov
jmp
in
das
xorb
pop
out
mov
clc
jbe
push
out
mov
pop
pusha
pop
int3
pop
orb
stc
jae
dec
imul
fiaddl
cmpsb
cmp
jmp
aas
adc
scas
lods
std
mov
xor
icebp
pop
pop
mov
aaa
sbb
jnp
jmp
cli
je
testb
pop
pop
mov
mov
mov
add
cld
dec
mov
aas
push
push
fs
mov
adc
dec
jb
aaa
mov
sarb
cwtl
add
jl
je
inc
push
and
je
mov
shll
out
std
xchg
mov
add
hlt
shlb
dec
fstl
dec
add
ss
cmc
cwtl
mov
movsb
mulb
mov
repz
xor
xchg
movsb
loopne
and
cmc
mov
adc
push
les
pusha
movsb
lock
mov
out
fstpl
int
loop
adc
call
les
and
sahf
insl
or
ja
mov
out
sbbl
mov
and
outsb
xor
ret
popa
int3
imul
shll
mov
wrmsr
cwtl
pop
push
aaa
fcompl
cmc
push
in
arpl
movsb
or
and
mov
inc
xchg
mov
adc
dec
ret
push
sbb
xor
jne
hlt
into
jp
or
outsl
dec
aaa
and
aaa
stos
mov
fistpll
cltd
mov
xchg
in
push
jns
ja
dec
mov
nop
rcll
in
cmp
repnz
inc
xchg
or
aam
xchg
data16
jecxz
fwait
subb
lahf
inc
push
sbb
inc
fnstsw
jecxz
fsubrl
xchg
xchg
mov
push
pop
pushf
sub
mov
mov
aad
inc
add
clc
inc
or
jno
push
inc
mov
aam
and
shrb
push
lods
int3
or
frstor
sbb
aam
mov
and
sub
adc
leave
data16
lock
ret
adc
bound
fidivs
enter
push
arpl
mov
enter
pop
or
fwait
mov
pop
jnp
addps
ljmp
repz
sti
movsb
lahf
out
push
sbb
imul
push
adc
or
and
mov
jl
outsb
ljmp
cmpsl
mov
sbb
push
dec
inc
flds
clc
xor
icebp
xor
pusha
iret
push
inc
sbb
jb
js
negb
jmp
loope
hlt
push
cmp
sub
add
aas
inc
lret
sbb
repz
lds
mov
xchg
mov
push
fwait
repnz
ss
push
repnz
pop
cmp
dec
pop
insb
jmp
stos
insb
imul
xchg
fsubrl
jle
jae
xchg
decb
push
iret
cli
adc
insl
cmc
xor
and
shll
cmc
aam
inc
int
or
xchg
push
pop
mov
fsubl
in
pushf
in
rorb
jp
inc
ficoms
xlat
mov
repz
push
ds
jbe
inc
pop
inc
cwtl
ja
mov
pop
ss
arpl
cmp
xor
mov
aaa
fs
pop
and
jno
andb
mov
cmp
xor
int3
push
outsl
pmulhuw
push
adc
stos
mov
xchg
shrb
loope
fistpl
popa
jne
idivl
pop
inc
cmp
mov
push
jge
fiaddl
ret
mov
push
push
es
sbb
add
jbe
jns
inc
pusha
fildll
push
movsl
mov
mov
mov
and
xchg
lods
pop
jne
sahf
out
push
jb
pop
loopne
pop
sub
jg
jge
adc
xor
xor
mov
lds
mov
icebp
cwtl
int
push
mov
iret
imul
pop
aad
fs
jne
loopne
cli
imul
jae
test
nop
divl
mov
imul
cwtl
mov
push
sbb
push
nop
xor
test
ljmp
jl
lds
inc
inc
fwait
cmp
js
add
push
mov
pop
cmp
clc
pop
int
pop
mov
mov
dec
inc
push
mov
cli
xchg
dec
sub
cmp
mov
pushf
mov
mov
mov
dec
push
cmpsl
arpl
and
mov
dec
xor
sbb
ret
mov
je
sarb
mov
ss
and
gs
repz
inc
or
inc
mov
es
push
adc
mov
sub
arpl
jl
mov
gs
inc
jmp
cs
xchg
aam
push
and
xchg
or
inc
sbb
hlt
push
xor
jl
or
push
push
out
mov
jge
cmp
and
cltd
movsb
sbb
cmc
jge
lods
mov
adc
inc
push
adcl
inc
pop
pop
cwtl
mov
xchg
xchg
movsb
jecxz
and
and
or
adc
push
popf
mov
loope
jne
dec
cmpsb
push
dec
jge
mov
cmp
pop
ss
dec
pop
push
mov
lds
cwtl
cmp
cmpb
iret
push
cwtl
iret
push
jne
sbb
shl
bound
les
jbe
fldt
xchg
sbb
sub
push
ret
push
leave
fadds
les
xchg
in
and
push
nop
or
cmp
nop
ja
and
mov
call
fcomps
xor
insl
xor
les
inc
daa
gs
and
adc
xchg
push
cmp
outsb
and
push
aas
push
insb
jmp
mov
int
pop
jno
shrl
pop
outsb
sbb
xor
gs
jns
xchg
hlt
xorl
sti
mov
arpl
inc
lret
mov
lods
sahf
in
leave
lcall
aam
pop
or
insl
nop
mov
lea
js
sbb
fmuls
repz
jb
add
inc
push
into
xchg
sti
roll
push
pop
outsb
push
shrl
mov
jge
mov
cmp
pop
icebp
or
gs
sub
test
push
js
aas
lds
push
sbb
cmp
ja
or
out
out
and
fdivs
repnz
iret
push
das
or
xchg
add
icebp
insb
imul
jg
stos
pop
dec
mov
jne
popf
daa
arpl
sbb
dec
xchg
mov
int3
push
cmp
nop
or
sti
hlt
rorl
pop
into
loop
jnp
leave
xchg
fdivs
aas
xor
cli
ret
imul
add
outsb
fdivrs
mov
mov
add
pop
test
mov
push
adc
sub
push
push
icebp
pop
cmp
and
fbld
cwtl
data16
int
mov
adc
aad
rcrl
aas
imul
jne,pt
in
sub
imul
fisttpll
mov
lret
xor
lahf
aaa
bound
sbb
pushf
movsb
movsl
sarl
stc
adc
in
inc
add
or
inc
mov
jno
popa
out
lahf
sti
loopne
jge
mov
pop
scas
ret
jno
jne
adc
imul
ss
adc
lahf
push
ret
xor
and
test
cmp
sti
dec
jmp
mov
out
pop
jg
pop
inc
sub
das
xchg
xchg
das
xchg
lret
inc
sbb
xor
imul
and
inc
push
inc
outsb
leave
xchg
mov
mov
idiv
push
jo
lahf
stos
ror
mov
inc
in
add
mov
and
insl
sarb
xchg
xchg
ret
arpl
iret
cmpsb
ja
push
xchg
sbbb
sub
lcall
mov
or
lds
into
jae
ds
lret
xchg
popf
mov
fwait
bound
mov
add
push
popa
xchg
add
jnp
jo
mov
inc
xor
mov
push
mov
push
or
gs
mov
dec
cmpb
cwtl
in
jl
stc
ret
js
orb
xchg
mov
jge
ret
shlb
cmc
das
pop
jnp
sbb
xchg
shll
sub
sahf
jne
sub
cmpsb
addr16
mov
clc
mov
loope
imul
add
cmp
adc
sti
jnp
pop
imul
dec
mov
cmp
ret
and
ds
mov
popa
xchg
inc
imul
mov
adc
daa
cs
xlat
sub
mov
push
jp
rcr
mov
sarb
jp
jle
inc
push
pop
bound
dec
or
inc
and
into
into
mov
push
push
fidivs
push
xor
inc
mov
sub
cltd
iret
dec
loopne
inc
adc
aam
xor
xchg
sbb
sub
jae
shrl
in
ret
xchg
int
popf
jbe
mov
adc
mov
gs
dec
leave
lcall
mov
es
test
out
cmp
js
xchg
push
cmpsb
mov
xor
mov
imul
pop
movsl
stos
push
xor
cmp
dec
sbb
sbb
test
sarl
inc
push
lock
and
push
adc
pop
in
icebp
cltd
mov
or
jns
jmp
rolb
leave
outsl
fdivrp
repz
xchg
add
lds
inc
sbb
mov
out
jne
movsl
stos
in
ds
mov
mov
out
dec
icebp
fwait
xchg
add
jmp
mov
jb
add
push
ds
and
pop
call
sub
out
mov
daa
jge
cmp
xchg
cltd
pop
pop
and
sbb
mov
popa
xchg
sbbb
cli
stc
iret
idiv
mov
ss
push
and
jne
repz
fcoms
mov
scas
test
popf
inc
sub
cmp
pop
ljmp
insl
inc
cmp
or
add
imul
jecxz
mov
dec
cmp
push
outsb
jb
aad
push
sub
jmp
or
jmp
jle
mov
fwait
cwtl
cltd
insb
sbb
push
mov
push
imul
mov
scas
sub
cwtl
rcl
clc
or
repz
andl
bound
inc
sar
sub
in
sbb
sub
fistps
test
sahf
lret
filds
push
jp
dec
mov
stc
lea
mov
scas
add
repnz
das
stc
scas
xchg
mov
test
mov
jecxz
bound
clc
adc
fwait
jg
or
jl
xchg
pop
std
cmp
push
jne
adc
push
loope
mov
and
push
add
pop
popa
pop
imul
cmp
or
outsb
mov
mov
mov
data16
loope
jl
and
sub
xchg
and
and
test
sub
pop
sbbb
aaa
xor
sbb
cmp
mov
test
or
mov
fisttpl
les
mov
cmpsl
cmp
ficoml
aam
jg
add
leave
lock
and
lods
push
ss
and
sti
aad
xor
out
adc
mov
mov
daa
stc
stos
push
pop
add
pop
sub
in
mov
jb
or
mov
mov
jne
push
popf
sbb
cli
sarb
test
dec
add
jb
mov
mov
push
sbb
je
shr
inc
xchg
popf
pop
cmp
pmaxub
cs
mov
or
scas
idivb
mov
push
fcompl
test
insl
flds
push
adcl
lret
mov
jo
mov
cmc
add
cld
fdiv
cmpxchg
mov
jb
or
icebp
and
dec
sub
ret
shrl
cmp
mov
bnd
lcall
in
stc
cmp
rcrl
int
or
negl
push
popa
jl
test
jb
xchg
lods
jp
js
das
pushf
cmpsb
clc
in
stos
push
push
sbb
mov
or
jno
xor
adc
add
mov
and
inc
push
pushf
jge
fimuls
mov
out
int
andb
cmp
xor
addl
popa
scas
sbb
sbb
adc
fisubs
testl
addl
sbb
nopl
pop
adc
stos
orb
addr16
inc
test
cmp
pop
dec
out
adc
orb
int
out
push
dec
dec
inc
jo
push
fldcw
loope
cs
popf
cmp
lds
mov
jae
aad
mov
push
add
or
loopne
pushf
mov
push
xchg
int
pop
inc
sub
pop
and
mov
sub
push
jbe
mov
xchg
into
test
push
push
les
push
in
lret
dec
push
fwait
add
sahf
jg
push
xchg
lret
jns
lret
ret
sub
scas
mov
cmp
mov
inc
pop
in
mov
int
mov
sahf
pop
out
sub
push
out
mov
mov
gs
ss
xchg
imul
pushf
mov
cli
xchg
lods
cmp
xor
dec
rorl
sbb
mov
out
dec
jmp
les
ljmp
inc
sub
das
arpl
mov
sub
sub
pop
xchg
test
push
mov
sub
inc
loop
sub
pop
xor
int3
ss
icebp
andb
inc
iret
dec
movsl
inc
inc
cmpsl
int3
and
jmp
inc
inc
in
adc
cs
jecxz
inc
divb
into
aam
dec
push
negb
int
out
ss
inc
mov
jle
por
cmp
sbb
out
push
mov
lock
jle
hlt
sbb
out
dec
daa
add
jle
movsb
movsb
add
daa
arpl
xorb
aas
push
xorl
pushf
jge
hlt
popf
push
fistpll
pop
repz
jg
mov
fsub
mov
lods
cli
pop
jmp
and
das
mov
or
inc
cmp
addr16
pop
mov
jp
nop
push
call
pushf
scas
mov
test
pop
lea
dec
and
aam
stc
mov
pop
and
rclb
xchg
push
inc
xlat
adc
sahf
dec
cmp
int3
push
mov
lcall
aaa
or
jmp
lret
pop
push
popf
test
mov
or
fcmovb
mov
sbb
fs
jg
es
ljmp
aaa
push
push
shl
add
xchg
dec
jmp
and
and
shlb
and
lret
mov
jns
push
shlb
cmp
das
fsts
ret
xchg
std
loop
or
arpl
out
pop
popf
add
je
inc
xchg
mov
ja
fimuls
dec
cltd
pop
mov
fbstp
loope
fisttpll
pusha
or
xorb
xor
test
sti
xchg
mov
das
lret
aas
popa
mov
jbe
test
shrb
adc
cmp
fisubl
inc
jp
hlt
lret
repnz
adc
xchg
into
mov
jnp
jg
stc
leave
mov
arpl
push
push
popf
pop
sub
mov
hlt
daa
hlt
test
adc
popf
mov
push
int
scas
lret
push
ret
stos
clc
movsl
push
pushf
adc
dec
push
fwait
mov
and
or
cmpsb
popl
stos
push
jns
mov
in
outsl
pop
jge
dec
mov
pop
lock
or
imul
cmc
jmp
sub
mov
leave
push
incl
ud2
lcall
lock
jne
and
cmp
pop
iret
int
add
movsl
xchg
lret
or
sbb
test
aas
jne
imull
nop
adc
iret
jns
mov
repz
clc
mov
testl
je
lds
xchg
jo
es
scas
fists
and
push
xchg
jns
mov
xchg
add
ret
daa
jmp
popf
sub
int
popa
and
lock
dec
or
dec
clc
jg
xor
push
mov
jp
mov
daa
adc
popa
pop
in
pushf
pop
sub
daa
xor
loope
cltd
gs
hlt
or
scas
jge
mov
ja
stos
push
jmp
inc
pop
inc
in
xchg
hlt
and
mov
adcl
push
gs
pop
sbb
and
or
sbb
repnz
fmuls
pop
pop
jmp
hlt
xchg
xchg
mov
fyl2x
out
es
lahf
shlb
scas
add
cmpsb
and
aaa
out
test
add
sbb
fmull
push
fbstp
and
int
mov
das
lahf
adc
pop
mov
adc
addb
or
push
jns
lods
add
aaa
mov
and
push
je
leave
jbe
sbb
adc
scas
int
cmp
push
xchg
outsl
inc
andl
aaa
mov
pop
test
std
sbb
add
rcrb
test
jle
sub
push
cmp
dec
ja
jne
dec
lea
rcrb
repnz
loop
das
test
loop
mov
mov
jno
insb
pop
mov
rcrl
and
shr
mov
imul
sub
in
jns
cmpsb
loopne
fsubp
jae
mov
lret
std
mov
add
adc
xchg
dec
pop
jmp
mov
sbb
push
xlat
repz
cs
addb
hlt
xor
test
out
addl
cmp
sbbl
decl
or
dec
add
fsubs
xor
data16
adc
lea
pop
xchg
push
add
repnz
and
imul
push
cmp
mov
rep
pop
fldl
int
in
xchg
into
repnz
inc
insb
cmc
bound
in
rorb
and
int
fnstsw
cltd
xchg
ljmp
in
adc
iret
jbe
cld
rorl
adc
jns
sub
dec
aam
call
sub
mov
fcoms
mov
sub
cltd
out
xor
out
jmp
dec
jecxz
fs
sbb
rcl
inc
sbb
sbb
jne
mov
mov
cmp
xchg
sub
call
cmpsl
jmp
push
jbe
cltd
cld
jb
loop
pop
dec
xchg
lods
mov
mov
js
mov
jp
gs
in
fdiv
int
adc
jp
mov
cld
in
lods
in
dec
je
dec
jnp
sti
cmp
or
mov
aas
inc
daa
push
imul
cld
test
mov
inc
dec
mov
outsl
inc
aad
mov
add
dec
xchg
imul
enter
jno
in
xchg
mov
push
call
ret
mov
cmpsb
jae
ficoml
sub
stc
dec
lock
push
pop
cmpsl
adc
push
pop
aaa
int3
inc
loopne
mov
in
negb
pop
or
adc
loop
cmpsb
sbb
adc
in
sub
jmp
lret
faddl
sbb
pop
icebp
arpl
enter
fcompl
call
push
loope
push
mov
inc
std
inc
cmp
aaa
in
dec
enter
xchg
fstpl
adc
lahf
loop
in
pushf
adc
pop
dec
mov
xorb
notl
mov
push
or
cmp
jno,pt
pop
inc
mov
fidivs
mov
jno
jg
cmp
jbe
mov
mov
and
inc
push
into
and
pop
idivl
push
inc
mov
call
xlat
mov
test
mov
loop
pop
pop
into
sub
in
sbb
stc
xchg
and
std
arpl
in
inc
adcb
mov
mov
into
cmp
pop
xchg
lods
out
jecxz
mov
cli
sub
popa
xchg
lods
cmpsl
cmp
std
and
xchg
cmp
call
sbb
loopne
fsubr
lock
push
ss
sbb
cli
jle
add
push
xchg
aad
data16
pop
xor
enter
mov
or
and
in
xor
inc
cmp
adc
cmpsl
cltd
jecxz
or
pop
lods
nop
cmp
push
scas
push
add
pop
jmp
or
push
idiv
bound
fbstp
gs
xor
add
xchg
ljmp
aam
lahf
adcl
rcrl
mov
add
push
inc
mov
ret
pop
es
pop
popf
pushf
nop
jg
or
xor
cmc
aad
lahf
jmp
mov
mov
mov
lea
sub
xchg
adc
js
mov
popa
xchg
inc
dec
add
imul
inc
pop
xchg
into
divb
iret
add
aad
rclb
add
outsl
aaa
and
mov
or
pop
addr16
cmp
ret
mov
cld
rol
pushf
enter
test
cmp
mov
cmp
scas
fldcw
fisubl
cmp
or
mov
dec
xor
or
movsl
lret
add
adc
jo
jnp
call
mov
adc
mov
sti
lcall
or
xchg
inc
lret
inc
scas
movsb
ret
inc
adc
sub
inc
mov
xchg
xchg
aas
int
das
or
cltd
int3
ljmp
imul
push
ljmp
aas
jp
mov
in
xor
push
or
test
fldlg2
loopne
nop
xchg
popf
test
aam
out
jne
mov
mov
pop
in
mov
add
push
int3
pop
clc
jp
inc
push
dec
lahf
cmp
bound
ja
in
aam
mov
adc
mov
or
adc
cmpsb
jge
imul
jecxz
pusha
mov
hlt
mov
jns
movd
and
push
pop
jp
mov
addb
xchg
lret
push
ret
push
jb
lcall
aam
mov
adc
xchg
push
inc
cmp
mov
and
sbb
shl
insl
mulb
out
movsl
ss
aad
mov
shll
mov
mov
xchg
jmp
xor
lods
jo
and
dec
aam
es
pop
nop
jp
out
je
xor
cmpsb
dec
andb
fiadds
xchg
ret
or
xchg
push
pop
sbb
std
rcrb
aam
add
pop
pop
xchg
ret
lret
ret
idivl
xlat
jo
dec
dec
clc
cmpsb
and
addr16
dec
and
mov
aam
inc
repz
or
in
out
pop
xchg
shll
inc
insb
dec
ljmp
dec
or
fnstsw
test
push
pop
push
or
or
aad
iret
add
int
push
and
cmc
mov
pop
mov
rcl
clc
pushf
add
push
sahf
jae
mov
insb
cltd
jne
push
pop
inc
repz
or
out
cmpsl
jp
xchg
jp
xor
test
mov
vhaddpd
outsl
mov
sti
sub
mov
jl
pop
mov
xchg
stos
dec
jne
dec
push
adcl
stos
dec
jecxz
mov
lret
loope
cmp
and
pop
push
movsb
pushf
inc
pop
iret
daa
xlat
nop
cmp
inc
mov
fscale
mov
das
outsl
out
and
xchg
enter
lock
rol
and
out
addr16
push
aam
mov
and
xchg
pop
push
aam
fdivrs
mov
ficomps
add
int
sbb
dec
inc
test
inc
lret
shr
dec
nop
cmp
das
daa
cmp
sbb
imul
mov
or
push
jmp
jmp
lea
int
add
xor
in
fnstenv
push
mov
mov
fisttps
cmp
loopne
aas
fldcw
mov
cmp
sbb
es
sub
in
xchg
dec
adc
das
pop
ret
outsl
push
xchg
pop
fidivrl
scas
jmp
or
loope
mov
jbe
add
mov
insb
xchg
mov
mov
subb
mov
in
mov
not
fbstp
lods
daa
fcmovu
add
fcmovnbe
clc
jo
push
add
sarl
das
push
push
adc
or
lret
cli
mov
jmp
fisttpl
jl
pop
cli
mov
int
adc
es
scas
mov
cmp
lahf
in
adc
mov
cltd
and
test
insb
xlat
test
sub
xchg
in
xor
cli
lret
outsl
mov
jmp
and
jo
mov
idiv
jno
lahf
sbb
dec
push
jl
mov
cmp
sbb
test
push
mov
sbb
das
cmpsl
cmc
sti
es
dec
movsl
addr16
cmp
adc
cwtl
jecxz
jp
stos
fs
fcomi
mov
lret
aas
add
cld
mov
cwtl
mov
fidivrl
cmpsl
pop
xchg
add
lret
pop
mov
mov
cs
lret
sahf
outsb
push
les
mov
pop
inc
push
push
pop
mov
mov
mov
imul
pop
ss
mov
sbb
jno
push
jge
es
pop
jmp
xchg
sub
repnz
popf
fucomi
cmp
outsb
vorps
sub
jmp
call
subb
repnz
sub
xchg
and
and
repnz
out
dec
call
pop
notl
dec
jnp
push
js
dec
and
mov
or
adc
or
fucomi
xor
push
lock
cmp
or
and
hlt
xchg
lret
or
jbe
mov
sahf
std
mov
lds
jnp
pop
jecxz
stos
xchg
aaa
mov
lods
out
adc
dec
fsubl
or
xor
dec
dec
add
in
rcr
sub
fwait
lods
daa
jbe
movsl
mov
mov
cwtl
into
idivb
ffree
adc
cltd
pop
orl
sub
std
out
push
mov
pop
xor
in
ret
cmp
or
sbb
pushf
push
mov
xchg
mov
outsb
dec
dec
inc
inc
outsl
dec
neg
mov
and
movsl
sub
lahf
xor
bound
fwait
or
test
add
inc
fsubl
jl
add
xchg
fildl
loopne
in
xor
mov
adc
aad
js
cltd
enter
jno
and
push
sar
sahf
int
mov
pop
adc
inc
cmpsl
lahf
repz
movl
mov
loop
and
loope
dec
ljmp
sbb
into
push
sbb
out
in
je
pop
in
pop
jno
ljmp
push
fdivrs
sbb
push
xchg
jg
pop
aaa
add
xor
lea
mov
enter
pop
push
dec
test
mov
loope
inc
push
in
inc
lret
and
movsl
and
jge
mov
jl
or
gs
xchg
inc
pop
mov
arpl
out
int
jo
mov
aam
movsb
stos
frstor
adcb
jmp
mov
gs
dec
sub
pop
rolb
cld
ss
fwait
sbb
xchg
int3
sub
dec
jbe
or
pop
mov
sub
test
inc
mov
repnz
loope
mov
sbb
push
stos
punpcklbw
lods
arpl
stc
xor
imul
into
jg
insb
sub
mov
mov
scas
std
xrelease
addl
stc
call
outsl
mov
or
jo
out
sub
xchg
sbb
int3
pop
stc
cmp
mov
shrl
scas
das
test
dec
push
sbb
repz
dec
cmpl
mov
mov
dec
cmp
les
into
lods
cld
cmp
xor
popa
imul
sbb
repnz
fcoml
clc
lret
mov
xlat
aam
and
movsb
stos
adc
pop
popa
das
icebp
int3
sti
loopne
pop
push
dec
cmp
xor
inc
shlb
cmp
adc
popf
push
xchg
addr16
add
cli
arpl
fldl
rcrl
or
aam
sahf
xchg
push
mov
gs
mov
xlat
pusha
push
dec
lea
cli
lock
mov
dec
leave
stos
xlat
mov
jb
daa
ds
ret
sub
stc
cmc
push
out
das
push
dec
imul
aad
xchg
orl
cmpsl
repnz
push
pop
sbb
outsb
mov
roll
js,pt
inc
dec
lds
js
andl
adc
add
mov
mov
xor
add
jp
lds
movsl
dec
inc
and
test
shll
xchg
imul
mov
enter
mov
insl
xchg
ret
xchg
xchg
mov
test
xlat
inc
dec
es
sbb
arpl
outsb
sbb
int3
fs
and
cmp
in
cli
loopne
mov
pushf
sti
dec
imul
jl
push
decb
add
mov
jne
xchg
lret
add
repz
nop
xor
je
push
pushf
sub
cmc
xchg
lods
push
outsb
and
sub
sub
int3
mov
mov
cmc
mov
bound
mov
jb
test
sarb
xor
test
jecxz
fs
mov
out
stos
mov
jp
push
lahf
push
pop
dec
dec
movsb
aas
pop
out
nop
int3
or
test
std
sbb
inc
jge
sahf
insb
hlt
mov
add
stos
pop
shlb
sub
or
mov
fildll
or
loope
sub
daa
jg
jb
cmpsl
loop
negb
cmpsb
xchg
mov
adc
dec
mov
and
or
lods
push
inc
ret
sbb
lret
fsubrs
add
test
mov
sbb
xor
inc
lret
jg
enter
or
jne
xor
ss
daa
fnstcw
pop
inc
mov
jae
ljmp
cmpb
fisubs
jnp
js
pop
sbb
outsb
sbb
fcomp
ljmp
and
inc
lcall
sbb
dec
sti
shlb
sbb
ja
sbb
mov
xchg
or
outsb
repnz
fcoms
sbbl
or
enter
into
dec
stc
insl
out
popa
shl
mov
fisubl
or
xor
xchg
call
shll
push
lds
ljmp
xor
leave
adc
fnstcw
jge
jmp
call
icebp
fs
enter
scas
in
shrl
test
out
test
or
or
mov
jp
popf
mov
arpl
sub
aam
push
inc
sahf
out
stos
jmp
ficoml
xchg
cmp
dec
inc
inc
aaa
push
xor
addr16
mov
jns
loopne
rolb
mov
int
movsb
int3
and
mov
mov
fsub
push
cmp
xchg
and
in
stc
xchg
sub
pop
loope
mov
push
xor
test
daa
repnz
stc
cmpsb
mov
jb
negb
std
scas
ficoml
inc
cmpsb
sbb
push
aaa
test
scas
push
mov
imul
arpl
sbb
xchg
push
sbb
pandn
cmc
push
outsl
fldt
int3
sbb
add
sbb
pop
sahf
sub
jp
mov
movsl
pop
fucomp
sbb
insl
pop
add
adc
ret
inc
cltd
mov
sub
adcl
xor
mov
icebp
adc
aad
cs
cli
fistps
add
mov
inc
lret
cld
mov
out
push
dec
cmc
repnz
ja
sti
mov
aaa
outsb
scas
push
or
push
mov
scas
or
int3
mov
fwait
dec
xor
xchg
lods
push
insl
into
mov
in
pop
cwtl
push
insb
xor
std
xchg
mov
sbb
sahf
pop
gs
jae
sub
fwait
addr16
lahf
push
sub
xlat
jbe
in
out
sbb
pop
pushf
xorb
pop
mov
xchg
and
dec
and
aaa
mov
hlt
lret
push
inc
pop
sub
rorb
push
ror
sbbl
daa
mov
mov
hlt
pop
and
fldcw
aad
mov
xor
jae
ljmp
sbb
sbb
jg
and
mov
and
add
jg
mov
clc
out
push
sub
cmpsl
std
lret
jle
jmp
jno
mov
aaa
push
mov
and
out
cwtl
ds
push
scas
sbb
adc
in
lea
sti
out
bound
outsl
mov
orb
mov
aad
test
aad
xchg
jbe
ret
clc
adc
fldenv
das
ds
mov
sub
push
push
add
jge
inc
or
cwtl
lea
stos
popf
js
mov
in
lods
mov
add
pushf
dec
dec
gs
mov
add
fmuls
mov
sub
mov
jno
addr16
pop
shlb
xor
jl
mov
les
pusha
add
jb
sub
lds
mov
mov
mov
imul
loop
sub
push
dec
mov
xchg
sub
and
xchg
and
add
into
cmpsl
cmc
add
push
xchg
fcomi
lods
hlt
stos
dec
mov
nop
outsb
cs
pop
fs
mov
fistps
push
stc
test
out
adc
push
jge
dec
jecxz
not
rorl
cmpsl
test
sbb
and
sub
mov
jno
inc
adc
bound
cmp
mov
out
out
out
and
ds
pop
sbb
jns
and
ds
sub
add
cmp
push
repnz
mov
mov
jns
nop
test
add
cmp
add
adc
outsb
mov
mov
ficoms
stos
jle
fs
sbb
aas
mov
sbb
push
mov
sub
pop
test
push
push
aam
mov
leave
push
popl
movb
sbb
or
pop
inc
cltd
push
mov
mov
sbb
imul
mov
pop
cmpsb
lods
sub
in
mov
repz
xor
fsubs
incl
ss
clc
pop
mov
aas
aam
mov
sbb
mov
mov
in
scas
fistpl
sbb
aaa
ret
lret
int
lock
mov
mov
and
leave
or
push
ret
nop
and
cmpsb
pop
pop
cmp
adc
mov
ss
xchg
mov
jae
sub
lds
cld
xor
pop
xchg
mov
jmp
aas
push
push
mov
enter
fucomip
mov
pop
pop
xchg
inc
in
sub
into
stos
xor
pop
js
insl
xchg
ljmp
cs
pop
dec
dec
or
adc
add
sub
dec
mov
sti
pop
stos
push
dec
scas
mov
imul
test
lea
andl
lret
aaa
pushf
pop
fsub
int
cs
push
pop
fcmovnbe
sti
adc
sub
enter
mov
cmpsb
lret
pop
xor
adc
xlat
inc
mov
inc
xchg
push
push
cmpl
scas
mov
dec
sub
add
mov
and
cmp
cmpsb
sbb
jae
jbe
inc
pushf
sbb
lcall
testl
ss
addr16
loop
push
int
adc
inc
add
aad
pushf
mov
pop
push
dec
xchg
pushf
out
xchg
mov
push
jp
mov
mov
and
push
jo
dec
call
sub
and
mov
data16
gs
sub
lret
xchg
dec
sub
dec
ffree
pop
sub
sbb
xchg
icebp
icebp
scas
jl
xlat
xchg
jle
add
dec
pop
addr16
add
cmp
add
test
mov
mov
int
pushf
sub
mov
sarb
xchg
popa
lret
xchg
ja
sub
and
lret
stc
mov
pop
jp
mov
mov
insl
jecxz
ret
or
aas
out
mov
testl
loopne
mov
pop
dec
adc
sub
shl
pop
mov
push
out
jmp
lods
inc
pop
jbe
jle
xchg
xchg
sub
leave
stos
out
insb
cld
ds
cltd
shr
cmp
jns
dec
cmc
insl
aas
rolb
lret
fwait
inc
daa
mov
pop
das
mov
lcall
mov
bswap
jp
xchg
es
fwait
mov
inc
xlat
add
or
out
loope
mov
and
pop
xchg
popl
xchg
pop
or
lock
pop
inc
pop
leave
jle
jae
mov
push
imul
shll
les
cld
dec
dec
outsl
imul
subb
sti
scas
cltd
insb
inc
popa
mov
clc
jl
add
addr16
push
test
ret
push
mov
mov
sbb
jl
push
push
add
mov
ss
cmpsb
es
sbb
jns
std
fwait
into
rcrb
lods
adc
push
std
mov
adc
sub
pop
rorl
dec
ja
inc
mov
aam
test
jnp
mov
lahf
nop
popfw
enter
push
adc
xchg
pop
pop
les
adc
hlt
push
jne
jg
mov
aas
repz
or
pop
jne
or
adc
jno,pn
aaa
mov
inc
sbb
cmp
dec
das
adc
pop
mov
imul
mov
pop
mov
and
pop
inc
jno
fdivl
cwtl
adc
mov
cmp
add
xchg
push
leave
call
add
jae
xor
outsl
push
push
mov
dec
cmpsl
xchg
push
mov
das
dec
sti
cmp
das
or
test
or
cli
sub
or
mov
add
sub
daa
jl
jbe
pusha
mov
jecxz
arpl
cmp
ja
test
aam
mov
mov
adc
xchg
and
adc
xor
out
cwtl
testl
div
add
or
adc
ss
mov
inc
js
sub
popa
jne
gs
lret
adc
push
fwait
cld
cltd
out
xchg
shrb
dec
dec
dec
or
bnd
fwait
jb
pop
pop
ljmp
ret
sub
popf
jp
mov
mov
clc
and
jo
adc
pop
mov
loope
inc
sbb
pop
dec
lahf
xchg
decl
lea
cmp
lea
lahf
pop
add
or
jp
and
sub
cwtl
and
push
rcrl
mov
lods
pusha
stc
imul
cltd
stc
push
je
hlt
mov
mov
out
aad
popa
pop
mov
int
cmpl
sar
or
xorl
test
xlat
jge
insl
rcll
in
push
xchg
mov
scas
jo
xchg
inc
out
shlb
pop
sub
repnz
and
push
dec
gs
mov
test
push
insb
sbb
pop
or
inc
out
mov
mov
inc
mov
stos
int
push
lods
aad
out
mov
sbb
aas
hlt
mov
push
jno
lods
inc
inc
inc
dec
or
mov
cmc
jge
adc
popa
mov
sarb
xchg
dec
add
dec
cmc
xchg
sbb
out
repnz
inc
mov
and
mov
mov
insb
cmc
push
push
jae
out
je
in
stos
cmp
inc
lcall
rcl
mov
pop
sub
adc
lcall
arpl
inc
outsb
call
dec
outsl
adc
jecxz
mov
dec
push
cmp
xchg
test
fwait
jb
ss
mov
xchg
sarb
push
dec
clc
xchg
cltd
inc
clc
jge
sub
mov
jge
jmp
mov
cltd
hlt
das
int
push
push
xor
outsl
cwtl
ret
pop
cld
test
cmpsl
cmc
inc
mov
cld
popa
into
sbb
psrlw
mov
rcll
insl
bound
sbbb
popa
add
mov
in
stos
add
mov
sub
jecxz
jb
sahf
push
and
jp
mov
push
mov
xlat
push
and
jecxz
jns
les
jl
data16
filds
xchg
insl
adcl
jb
scas
jo
sub
cmp
dec
mov
add
jecxz
inc
push
pop
dec
insl
xchg
or
icebp
ds
cmc
ret
roll
lods
subl
sbb
mov
imul
hlt
bound
or
cmc
sub
xor
pop
xlat
xor
stos
outsl
aaa
or
imul
xor
int3
mov
cmp
push
xor
fwait
test
ss
ret
ror
adc
lods
sub
jne
daa
inc
gs
mov
mov
loopne
clc
pusha
aaa
xor
icebp
pop
jge
data16
or
cwtl
sbb
cmp
push
push
outsb
mov
push
repnz
adc
sub
and
jnp
aas
sub
xor
sub
idivl
aas
mov
test
adc
stos
mov
in
adc
cmpsl
and
loopne
mov
mov
push
adc
movsl
inc
jne
movsl
test
idivb
jb
mov
fldenv
ret
cli
and
leave
popf
xlat
dec
adc
pusha
dec
btr
xor
sbb
mov
push
mov
adc
pushf
sub
xor
xor
jmp
inc
rorb
ss
insl
cmp
lret
xor
cmc
pop
push
adc
dec
cltd
iret
into
ss
shrl
push
mov
hlt
inc
push
repz
adc
pop
lcall
xlat
shrb
insb
aaa
sub
xchg
mov
imul
mov
cltd
cli
push
pop
cmp
fcomps
inc
mov
icebp
mov
jo
push
push
mov
mov
sub
ljmp
outsl
cmpsb
mov
lret
cmp
test
inc
test
push
fldt
add
insl
mov
pushf
sahf
js
jle
iret
std
fadds
notb
mov
pusha
test
fwait
jle
in
add
gs
data16
jno
lcall
jae
sbb
push
mov
xor
xchg
or
in
jns
insb
pop
mov
stos
int3
out
jmp
cld
dec
adc
shrl
mov
xchg
rclb
jmp
fnstsw
rcll
inc
ss
aad
pop
cmp
stos
mulb
inc
arpl
shrl
in
or
push
mov
mov
lods
and
jle
inc
aaa
cmp
mov
loop
mov
insl
xlat
xchg
jp
inc
ret
mov
lret
sub
bound
cpuid
fstl
dec
lcall
mov
inc
sbb
and
nop
xor
sti
jecxz
das
xchg
ja
popa
lea
pop
fs
pop
sbb
mov
or
sbb
insl
imul
movsl
mov
xchg
lahf
repnz
jns
add
xor
stc
shlb
xchg
sbb
roll
adc
mov
push
test
and
push
or
cwtl
pop
push
sub
pop
pop
stos
xor
inc
sub
pop
jp
xor
insl
or
mov
out
jle
mov
in
enter
in
jp
std
movsb
hlt
je
pop
sub
test
lds
fdivrp
jg
jns
bound
xchg
sti
pushf
mov
icebp
and
in
push
subb
inc
std
sub
cmp
lret
pop
pop
push
aaa
adc
mov
test
xchg
xchg
ret
jl
ds
mov
xchg
lret
pop
adc
add
lcall
adc
or
icebp
fsts
jnp
or
cltd
jbe
xlat
orb
push
cmpsl
mov
pop
loope
data16
cwtl
shr
or
xchg
jmp
lret
cmp
daa
lret
sub
iret
add
sti
mov
add
mov
pushf
jae
jns
add
lret
shrl
mov
aas
fildll
mov
ret
mov
es
jnp
stc
rcl
shll
pop
dec
fidivrs
rcl
pop
xchg
add
mov
push
mov
sub
sub
mov
icebp
aam
push
adc
lock
es
add
test
repz
fmuls
popa
adc
repnz
faddl
fldl2e
imul
xchg
ret
pop
dec
jae
adc
jb
sub
add
mov
adc
xor
lahf
cmp
cmp
ds
mov
clc
add
ja
jecxz
mov
adc
aaa
jnp
mov
pushf
sbb
pop
xlat
xor
movl
inc
jmp
stc
ror
mov
dec
or
add
fbstp
mov
sbb
add
stc
hlt
faddl
inc
pop
shll
mov
pop
enter
add
dec
push
call
xchg
outsb
insb
push
sbb
mov
icebp
insl
hlt
pop
jno
jl
sti
jp
pop
test
dec
inc
arpl
std
mov
sti
cmp
sti
push
push
and
add
fwait
scas
lds
loopne
filds
dec
inc
sub
fidivrs
lret
xor
je
cltd
testb
pop
sub
jmp
xchg
popa
mov
mov
dec
mov
cmp
mov
push
mov
addb
sbb
dec
or
aad
jns
xor
push
jno
jae
pop
ret
or
clc
aaa
bound
js
enter
xchg
add
loopne
pop
push
mov
push
inc
dec
test
ljmp
mov
ficompl
jb
jmp
pusha
pop
pusha
inc
ja
xor
mov
xchg
jmp
xor
sub
dec
fwait
hlt
fdivrs
stos
mov
sub
xchg
pop
loop
sahf
cmp
sbb
fmull
jecxz
push
lret
or
cmpsl
movsl
loopne
or
pop
test
mov
xor
dec
lret
imul
lds
pop
shll
loopne
stc
mov
lods
mov
outsl
mov
dec
das
dec
xor
jge
ljmp
lock
fwait
out
cmpsl
sbb
sub
loope
cmp
mov
outsl
sarl
ja
repz
stos
inc
add
mov
pop
xor
iret
jbe
cltd
rcrb
xchg
popf
mov
aas
pop
punpckhbw
mov
mov
pop
clc
arpl
lcall
mov
mov
les
jne
jp
rolb
or
cmp
or
dec
cld
add
mov
adcb
pop
mov
sub
pop
adc
pop
stos
fists
and
sub
push
pop
cmc
cld
in
int
pop
ret
lahf
ret
dec
sbb
std
std
test
sbb
in
add
sahf
bound
inc
xchg
xor
cmp
jecxz
cmpsl
jp
mov
notl
adc
pop
pop
xor
pop
popa
in
push
movsb
cs
fstl
addr16
rolb
dec
mov
cmc
inc
jno
push
loope
push
mov
push
cli
idivb
or
les
sub
or
out
push
fcomps
dec
push
and
ds
mov
lret
mov
fisttps
sbb
test
lds
test
push
lods
jne
adcl
inc
and
adc
mov
xchg
fistpll
mov
sub
mov
lds
dec
pop
mov
pop
iret
cli
xchg
out
ficoms
scas
adc
pop
mov
xorb
and
clc
push
inc
mov
mov
mov
ljmp
adc
mov
imul
into
xor
stos
inc
mov
add
adcl
pop
ds
daa
mov
dec
pop
fucomip
mov
in
xchg
inc
repnz
inc
jp
jo
gs
xor
es
lcallw
pop
xchg
sbb
pop
adc
cmpl
iret
pop
mov
test
test
and
fsubr
fwait
out
cmpl
mov
shlb
jno,pn
aad
mov
adc
xchg
push
mov
in
mov
cmp
lret
mov
roll
hlt
inc
adc
scas
inc
lea
jmp
jb
aas
mov
mov
cmpsl
repz
rolb
inc
leave
mov
leave
jns
pop
test
sbb
sub
pop
call
sub
lods
popf
mov
sbb
mov
xor
push
test
roll
mov
fnstenv
stos
sub
or
nop
and
add
mov
stos
dec
jnp
aam
aas
popa
mov
jge,pn
cmp
jp
dec
andl
cmp
je
mov
idivl
test
and
push
je
push
jecxz
jb
mov
xor
shl
xor
ficoms
sbb
movsl
push
jg
stos
push
outsl
sbb
sahf
xlat
add
imul
jne
outsb
gs
ljmp
jno
mov
outsb
or
fdivl
mov
std
test
pop
insb
iret
pop
add
lods
sbb
sahf
test
hlt
sub
pushl
inc
inc
dec
iret
iret
ret
popf
mov
dec
ljmp
pop
aam
and
ljmp
out
jp
inc
sub
cmp
rclb
sbb
icebp
bound
repz
daa
nop
inc
clc
fwait
adc
insl
mov
push
push
sbb
cltd
lea
jmp
mov
adc
pop
push
push
mov
sub
fwait
xchg
or
ja
stos
fisttpll
cmpsb
dec
dec
sbb
pop
inc
loopne
stc
sbb
mov
dec
lret
lds
jp
xor
sbb
shll
add
push
jbe
or
and
fisttpl
cmp
push
mov
xlat
cwtl
arpl
sub
test
pop
and
movsb
xchg
sub
inc
pop
jp
or
mov
or
mov
push
pop
inc
pop
fld
stc
imulb
cld
mov
fcmovu
daa
jae
push
push
loop
sahf
int
imulb
adc
push
icebp
stc
xchg
inc
mov
jns
scas
pop
cmc
stos
inc
jp
xorl
mov
dec
xchg
sbbb
call
daa
leave
mov
mov
xor
or
push
add
cmp
or
pop
mov
loope
push
xor
sbb
mov
mov
arpl
lds
jbe
push
sub
call
aam
jo
enter
nop
repnz
in
add
adc
es
jns
xor
mov
or
jnp
sbb
dec
dec
fcmovb
fwait
mov
test
shrl
je
into
pop
adc
mov
stos
es
test
lcall
push
cmp
xchg
pop
mov
testl
xor
push
fidivl
push
fstpl
push
dec
xor
out
cmp
cmpsl
lret
pop
popa
xchg
or
movsb
mov
rcr
popf
cmp
clc
push
sbb
adc
push
and
in
dec
jo
lods
mov
test
adc
or
inc
sbb
lock
dec
adc
aaa
sarl
sub
cmp
sub
pop
cltd
outsl
sti
jle
xchg
gs
or
in
ret
jns
mov
stc
jmp
or
icebp
insl
xchg
add
xchg
popa
movsl
adc
inc
xchg
ja
inc
dec
out
fwait
add
loope
sbb
sub
es
mov
adc
inc
or
xchg
aas
hlt
orl
pusha
push
test
xchg
add
lahf
fbld
jne
pop
mov
pop
mov
sti
mov
inc
ja
faddp
ds
arpl
lahf
int3
adc
hlt
xor
push
mov
sbb
pushf
daa
jnp
lcall
sbbl
sarl
push
jne
les
sbb
inc
cwtl
mov
xchg
sub
or
inc
mov
jecxz
ss
sub
aad
and
cmpsb
xchg
jmp
fistpl
push
push
sub
adc
arpl
mov
jmp
cli
aam
movl
and
ljmp
lea
push
mov
pop
loop
mov
sub
mov
sbb
fbstp
push
sbb
mov
outsl
dec
push
out
xor
inc
ss
fwait
arpl
testb
xchg
daa
arpl
sub
and
mov
cltd
mov
loope
cmc
add
scas
add
xor
cmpsb
or
fwait
mov
dec
inc
cmp
loop
inc
in
mov
mov
mov
mov
and
pop
repnz
mov
add
ret
fsubrs
rcl
cmc
bound
es
and
arpl
shll
out
jg
sar
lret
lea
cmpsb
call
mov
jecxz
in
cmp
ret
stc
enter
jle
fmull
pop
or
push
mov
ss
xor
mov
jmp
jl
sub
cld
loopne
jae
es
imul
inc
in
fstl
pop
fnstcw
aad
mov
loop
stc
and
adcb
jno
je
scas
pop
sbb
lret
test
loope
bound
mov
pop
xlat
xchg
dec
pop
xor
mov
shll
mov
scas
cmc
cmpsl
xor
lcall
movsl
adc
call
mov
sub
mov
out
cld
mov
mov
and
mov
mov
lods
fnsave
in
mov
call
lods
push
pop
mov
cwtl
loopne
jmp
test
jno
mov
and
loop
lahf
inc
or
xchg
test
cmp
cmp
mov
mov
mov
sar
out
int
lea
pop
ret
mov
jmp
stos
and
xchg
lahf
fisubrl
sti
insb
and
cs
push
fidivrs
fistpl
mov
cmp
or
pop
push
sbb
jne
dec
scas
rorb
aam
adc
xor
inc
mov
xchg
aas
addl
and
lock
mov
jge
mov
sbb
div
aam
inc
lahf
int
xchg
push
push
adc
test
mov
mov
scas
insl
fsubrl
outsb
addr16
push
aad
test
pop
arpl
aam
mov
xor
jle
sbb
je
mov
insb
jmp
out
cli
scas
mov
fsts
pop
cmpsl
mov
jmp
mov
mov
sbb
cmp
stos
sub
movl
mov
mov
scas
push
movsl
in
xchg
ds
movsb
pushf
sarl
std
jns
imul
cmp
lret
sub
and
sub
sub
xchg
mov
incl
mov
sbb
inc
mov
sarb
cmp
pop
loop
push
mov
adc
push
xchg
leave
cmpsb
stos
xchg
push
dec
pop
cmp
and
out
pop
and
popa
ja
insb
hlt
arpl
fidivrl
les
inc
stos
out
or
out
hlt
pop
popf
cmp
xchg
int
jl
and
inc
daa
sbb
sbb
mov
int3
stc
ret
push
dec
jns
mov
imul
ja
push
call
add
movsl
sbb
jb
movsb
mov
lods
or
sub
jo
scas
inc
xor
add
adc
mov
out
repnz
sub
dec
pop
sahf
or
es
test
jbe
gs
daa
das
sarl
or
xor
cld
sub
add
lods
sbb
mov
push
fcompl
pop
inc
into
and
mov
jnp
jl
insl
mov
adc
adc
mov
pop
jg
syscall
sarb
daa
add
repnz
jns
jb
inc
shll
stos
repz
or
ret
pop
shlb
add
adc
mov
int3
add
movsl
mov
jmp
std
dec
into
ret
or
lock
mov
mov
test
roll
aam
add
int
aam
jae
xchg
les
dec
push
loopne
sub
sbb
test
das
sbb
movsl
aas
pop
scas
push
in
shll
cmp
cwtl
iret
or
push
out
and
mov
hlt
test
xchg
icebp
adc
and
inc
std
mov
push
inc
shlb
jae
stos
or
pop
les
mov
js
sub
outsl
pop
cmpsb
pop
rcrb
bnd
scas
mov
cmpsb
or
push
fisttps
inc
cmpsb
and
push
js
addr16
cmp
cmp
add
pop
jae
idivb
mov
sub
rolb
sahf
in
rclb
mov
adc
mov
sbb
iret
stos
and
mov
scas
jne
pop
jno
dec
leave
stos
or
data16
out
pop
push
sbb
int3
sbb
jb
or
xor
mov
push
sbb
imul
in
test
imul
cld
sub
sub
clc
cmpsl
xor
add
stc
mov
jg
rclb
cltd
nop
cltd
or
xlat
lret
xor
mov
insl
lcall
lock
jmp
xor
icebp
ret
xlat
or
pop
push
or
adc
test
stos
push
sub
popa
pop
divl
xchg
js
shll
rclb
mov
mov
inc
fs
xchg
call
repz
hlt
daa
jno
pop
xchg
mov
xchg
rcrb
das
mov
pop
in
pop
mov
cltd
ret
lds
test
push
in
add
pushf
das
push
inc
movsb
in
ds
cmp
ds
xor
dec
sub
pop
cli
pop
jo
mov
push
push
imul
fs
add
mov
mov
inc
pop
cmp
sti
mov
mov
pop
lret
push
int
xchg
mov
lea
xor
ds
mov
xchg
addb
push
fwait
jmp
lds
enter
jnp
pop
divb
into
pop
mov
iret
or
sbb
clc
rolb
mov
mov
into
mov
cmc
in
cwtl
push
push
shl
popf
xor
xchg
push
sub
cmp
nop
test
shll
pop
andl
into
mov
push
cmp
add
cmp
out
push
pop
jnp
iret
icebp
in
test
fisubrs
pop
xchg
rcll
ds
sbb
aam
mov
repz
mov
outsl
cmc
cmp
dec
std
scas
fiadds
sbb
xor
add
imul
call
push
jno
inc
in
fisubrs
insb
inc
xor
add
cmovle
xchg
adc
mov
xchg
push
scas
dec
lock
sub
add
cmp
rolb
mov
imul
test
imul
mov
into
cmp
xchg
cs
scas
push
std
imul
hlt
sub
dec
push
dec
es
adcl
mov
xor
adc
mov
enter
movsb
lret
or
jl
mov
mov
jmp
orl
popf
jne
and
mov
test
pusha
add
mov
mov
mov
adc
jg
fsub
mov
add
out
pop
or
out
mov
stos
loope
stc
fldl
sub
xchg
cmp
lds
imul
push
fdivs
dec
imul
add
nop
or
mull
ljmp
mov
push
cld
or
push
and
popa
in
mov
cmc
jle
jb
mov
jp
add
sub
pusha
adc
cs
loop
adc
jl
call
push
cmp
push
pop
clc
mov
jo
adc
mov
mov
pop
jmp
push
test
cmpsb
mov
repnz
lods
stos
pushf
stos
mov
mov
xor
fisubrs
pop
lods
inc
repnz
das
mov
aam
bound
test
lea
mov
mov
jle
hlt
jae
mov
push
pop
mov
popf
repz
sarl
cmp
hlt
sbb
xchg
or
call
pop
add
pop
out
pusha
mov
cmpsb
das
loop
imul
add
pop
mov
xor
out
mov
cwtl
jmp
dec
out
ljmp
int3
push
test
mov
icebp
sub
lods
push
pop
scas
cld
xor
jbe
push
popf
xor
mov
jp
pop
int
scas
cmp
rorb
push
stc
pop
xchg
add
jecxz
lea
les
roll
adc
ret
and
cmpsb
ret
repz
and
mov
ss
jle
xorl
mov
aam
je
js
xlat
clc
cmp
or
push
dec
jmp
push
add
daa
sbb
call
adc
push
lcall
fsubs
enter
pop
mov
out
dec
cld
lds
shl
std
add
cmp
add
mov
jb
lea
pop
push
jo
jg
xlat
cmpsl
loop
sahf
or
inc
adc
je
loope
jb
lods
fildl
jno
jno
fs
push
fistl
out
jl
sbb
lock
pop
mov
sar
inc
aam
add
cli
mov
into
dec
pusha
enter
push
bound
test
cld
stc
sarl
repz
add
fucom
repz
jae
data16
jl
fadds
push
or
ss
test
daa
cmp
cmp
pop
or
xchg
sub
dec
fldenv
lahf
and
int3
test
fcomi
cmp
dec
sub
lock
cmp
pop
mov
xlat
push
movsl
hlt
in
push
adc
sbb
divl
dec
rcrl
add
lds
repz
stc
push
jae
nop
mov
xchg
sahf
outsl
jecxz
sbb
mov
stos
fidivrs
shl
ja
lcall
push
pop
jne
adc
pop
lahf
fidivrl
xchg
xor
dec
out
lea
mov
sbb
pop
cmpb
and
cld
pop
decb
adc
sub
dec
pop
mov
sub
push
scas
jno
pop
inc
enter
das
adc
cmp
inc
mov
cld
test
out
sub
out
jmp
and
cmp
imul
add
mov
or
mov
pusha
out
xchg
ret
cs
cmp
out
sbb
jbe
push
xor
push
insb
scas
popf
inc
push
addr16
jecxz
cmp
pop
js
fwait
ljmp
ljmp
push
jecxz
mov
stos
icebp
push
repnz
or
out
subl
mov
leave
adc
xchg
jecxz
insb
push
shrb
cwtl
mov
insl
cmp
push
push
mov
xchg
adc
js
mov
and
loope
sub
js
enter
cmp
inc
mov
test
xchg
popf
mov
cmp
movsb
out
mov
jb
cmp
xchg
insb
jmp
lds
push
call
add
addl
inc
push
nop
mov
add
pop
jnp
jle
add
ret
je
ja
test
fwait
inc
xchg
jl
lods
cmp
mov
leave
xchg
popf
inc
push
push
ds
sub
inc
pop
ds
dec
mov
and
flds
sarb
sbb
repz
pop
scas
fiaddl
push
repz
push
in
repnz
repnz
adc
das
pop
mov
je
push
ljmp
insb
stos
in
pop
jae
ja
add
cmp
lock
test
ret
xchg
inc
icebp
sbb
pop
cli
jnp
push
jbe
leavew
dec
test
push
sub
push
mov
mov
outsl
sbb
ds
cmpsb
mov
pushf
cmpsb
test
dec
fsubrl
rcl
jae
repnz
leave
pop
xor
lods
push
pop
leave
mov
lock
ja
and
pop
mov
lret
mov
or
out
lods
sub
imul
shrl
insl
mov
push
sbb
push
cltd
ds
inc
mov
stos
loope
xor
js
es
and
pop
aam
in
push
and
mov
sbb
cmpsb
out
inc
movsl
pushf
xchg
inc
dec
out
xchg
mov
pop
stc
aam
loopne
roll
inc
cltd
lcall
jne
add
push
dec
push
jns
test
not
and
shr
mov
jnp
jle
cmp
dec
movsl
mov
or
lea
rcll
repnz
cmc
aaa
sub
nop
lret
jmp
and
sub
lock
ljmp
lea
jl
dec
cmp
incl
pushf
sbb
clc
testl
rclb
into
data16
test
mov
push
or
ja
xor
push
icebp
dec
adc
es
pop
or
or
xchg
or
shll
hlt
cmc
dec
jb
push
movsl
pop
cmp
dec
cmp
nop
mov
vpmacssdql
sbb
pop
ja
test
icebp
jge
cld
mov
imul
push
sub
popf
inc
and
dec
cmp
or
aaa
push
inc
aam
jp
or
ds
and
xor
sbb
rolb
inc
ja
lods
mov
pushf
cmp
cmpsl
xchg
loope
jle
jg
sbb
xlat
xor
mov
mov
xchg
xor
aaa
xchg
fadds
imull
push
cmpsl
insl
inc
sub
cmp
ds
aaa
inc
ljmp
mov
push
dec
and
fsubrp
ja
stos
mov
xchg
cmpb
popa
in
popa
add
cwtl
in
xor
divb
lock
push
fsubrl
xor
loope
movsb
pop
arpl
gs
movsl
into
add
xchg
push
mov
mov
fcompl
xor
pop
mov
add
aad
mov
ror
ja
mov
ret
mov
idivb
cmp
xchg
mov
das
adc
fadd
iret
mov
or
push
xchg
jnp
cmp
push
shl
rol
das
call
not
cmp
fcoml
add
xor
mov
push
sbb
jmp
fistl
fsubs
add
test
and
and
leave
xor
xor
fcmovnbe
stos
shrl
add
jns
adc
inc
sti
scas
cmp
jo
xchg
insl
fstps
jmp
js
xchg
test
cltd
mov
mov
add
adc
addr16
lea
jbe
sbb
inc
lcall
rcrb
push
jl
mov
lea
mov
iret
xchg
popa
arpl
ljmp
pcmpeqb
add
movsl
add
adc
imul
add
popf
pop
clc
adc
ret
dec
pop
push
xchg
lcall
mov
or
dec
int
mov
adc
xchg
dec
or
add
call
sti
leave
pop
lret
pop
insl
xchg
pop
xor
stos
stc
vmovaps
xor
ficompl
test
rcrb
je
lods
aas
cmp
mov
sub
cmp
fcoml
sbb
adc
lret
jg
fisttpl
lock
mov
dec
outsb
pop
xor
ja
jnp
scas
test
adc
inc
pop
mov
pushf
test
dec
pop
sbb
dec
lahf
test
test
add
sti
and
shl
and
lods
jecxz
out
lods
insb
dec
das
out
xor
mov
insb
dec
xor
cmp
xor
xor
push
cltd
mov
aad
enter
stos
out
fs
mov
mov
pop
jne
rcrb
inc
cmp
test
mov
adc
adc
rolb
push
les
jne
insl
push
or
lea
cmpsl
mov
jbe
cmp
push
aam
lea
and
push
out
cmp
repnz
jmp
add
rep
xchg
shll
xor
or
shll
enter
add
out
testb
das
paddsb
int
je
add
cmpb
int3
gs
lret
push
in
xchg
jecxz
fsubrl
daa
inc
dec
lods
and
sbb
xor
repnz
adc
sub
add
xchg
insb
jle
sub
lret
mov
imul
mov
jecxz
les
jmp
mov
lcall
push
mov
dec
out
mov
inc
ds
in
test
stc
inc
les
mov
mov
shlb
and
fisubs
adc
add
jne
xchg
mov
negl
fstpl
sub
lret
fildll
insb
jno
out
ljmp
adc
loopne
daa
imul
mov
push
cmp
imul
adc
jge
dec
leave
sub
mov
in
sbb
mov
pusha
movsb
and
leave
mov
or
mov
lret
jbe
jns
das
scas
shlb
sbb
test
popl
insb
aad
xor
dec
jp
xor
jae
xor
stc
pop
loopne
inc
jp
inc
dec
add
lcall
adc
cld
fisubrs
inc
sbb
clc
mov
arpl
imul
imul
repnz
xchg
mov
test
jae
jns
fistl
push
cmpsl
adc
int
inc
inc
mov
jle
add
mov
sub
mov
cmpsb
sub
xor
repnz
sbb
js
pop
jo
insb
js
jl
mov
push
inc
jg
jge
mov
push
mov
lods
push
push
sbb
mov
cwtl
sti
mov
jbe
divl
lea
push
gs
sbb
and
into
daa
jo
jl
testb
cwtl
mov
mov
out
int
pop
mov
pusha
in
lods
shrb
movb
hlt
sbb
mov
into
sub
cs
es
push
mov
adc
mov
dec
mov
lock
popa
test
and
hlt
xor
mov
cmpsb
mov
in
push
adc
mov
aaa
sub
loop
gs
out
insb
push
ss
sub
inc
jecxz
jnp
mov
imul
push
rorl
push
dec
mov
mov
jge
adc
pushf
lods
rcll
lods
enter
mov
scas
inc
mov
data16
icebp
xlat
cmp
xor
pop
lcall
add
inc
fbld
xor
js
leave
jg
in
jl
mov
pop
adc
fadd
movsb
jo
and
test
in
adc
cmpsl
imul
cli
mov
inc
jne
cmovne
sub
add
push
push
xor
fsubrs
mov
mov
mov
xor
mov
es
js
push
test
test
mov
and
jp
push
int3
stos
and
ds
fiadds
test
das
pop
inc
fdivrl
sub
lock
jbe
jbe
jmp
push
lcall
fucom
repnz
lret
addr16
dec
jmp
mov
cmp
popf
sbb
pushf
pop
jns
movsb
fisttpl
movsl
adc
imul
repnz
adc
popa
pop
lods
jp
insb
mov
sahf
sub
sbb
aam
adc
dec
inc
movsl
mov
cmp
cmp
insb
inc
add
cld
cmp
mov
dec
dec
mov
cmp
push
xor
push
push
call
mov
lds
test
xchg
rcr
pop
cltd
cmp
xor
mov
pusha
pop
xchg
cmpsb
sbb
mov
ss
pop
dec
iret
xor
jae
pop
inc
xor
out
cmpsl
ss
dec
loop
cmp
int3
stos
mov
pusha
dec
pop
test
dec
lahf
push
cwtl
pop
and
sub
rcrb
lea
movb
out
add
push
inc
add
mov
pop
scas
cmp
cmp
jbe
fs
xor
ljmp
in
mov
and
push
dec
adc
mov
test
mov
sub
lods
and
xor
movsl
imul
sub
cmp
fimull
jo
hlt
ds
inc
gs
mov
es
mov
mov
mov
mov
sbb
std
sub
sub
dec
or
dec
add
aas
mov
fbld
mov
insb
mov
xor
out
push
pop
call
dec
fstps
out
cli
xchg
jle
inc
and
push
cmp
mov
pop
mov
mov
dec
stos
sbb
cs
shl
jmp
cltd
push
nop
pop
jo
push
inc
mov
test
mov
mov
jbe
dec
cmp
out
repz
mov
and
xor
add
cmp
inc
push
lret
movl
ret
sub
or
add
cwtl
dec
mov
test
cmp
mov
inc
jae
ret
xchg
push
inc
cmp
stos
lock
fisttpl
adc
rol
dec
add
fcoms
xchg
and
pop
cmpsl
stos
mov
es
jne
cmp
xchg
sub
in
js
mov
popa
pop
xchg
add
ja
call
stos
push
ss
daa
dec
mov
xchg
pop
adc
std
cwtl
arpl
hlt
ja
push
sbb
shrl
test
push
push
cld
ss
cmp
dec
xchg
ja
mov
jbe
movsl
pop
insb
jmp
mov
lods
mov
decl
mov
sbb
or
fistps
into
xlat
mov
sbb
stos
imul
xor
and
pop
pusha
sbb
in
popa
mov
ret
clc
pop
dec
fimull
pop
cmp
cmpsl
and
cmpsb
xlat
inc
lret
scas
stc
cld
dec
ret
arpl
dec
scas
adc
pop
into
jp
xchg
out
loope
jmp
push
test
jle
dec
sarl
in
popa
and
dec
orb
inc
shll
dec
popf
into
imul
mov
inc
aam
notb
pop
negl
jnp
cltd
aad
dec
pop
mov
sahf
adc
push
cmp
dec
ficomps
rclb
jns
call
dec
jno
xchg
jle
sbbl
push
xchg
inc
mov
clc
push
cmp
mov
xchg
movsl
push
sub
inc
std
daa
fadd
push
in
or
sbb
mov
xchg
fcoml
sbbb
cmp
pop
jg
nop
or
mov
adc
jns
mov
push
cmpsb
pop
sbb
mov
fidivrl
adc
sub
fadds
xchg
mov
clc
adc
sbb
ss
dec
jns
inc
enter
inc
push
fsubrs
test
loop
inc
xchg
repz
aad
enter
adc
mov
and
sub
mov
pop
in
jne
sbb
shl
pop
addr16
xchg
std
xchg
in
dec
xlat
and
scas
test
fnstenv
push
lock
loopne
adc
les
cmp
adc
jecxz
sub
pop
jns
mov
xchg
sub
sbb
pop
mov
cmpsl
mov
or
ret
shrl
popa
sbb
popa
or
dec
imul
mov
xor
lea
jo
mov
xchg
and
mov
testl
jl
jnp
sahf
jb
cmpl
fsubrl
shlb
leave
push
aas
ds
mov
cs
das
ffreep
pop
and
inc
stos
inc
xlat
xchg
push
cmp
addl
jge
xor
out
mov
out
ret
cmpsl
shrl
fstpl
out
test
push
arpl
or
mov
mov
mov
jae
lret
ret
pushl
icebp
cltd
mov
fisttpl
scas
mov
jo
outsl
or
adc
push
xor
add
pusha
repz
xchg
and
inc
in
sbb
sbb
fists
jge
fcomip
mov
jb
sub
jl
push
xchg
xchg
xchg
push
adc
sbb
xchg
dec
fimuls
mov
dec
nop
cltd
mov
jmp
xchg
scas
lcall
mov
jl
es
rcrb
and
mov
xchg
mov
das
push
stc
mov
adc
in
add
mov
pop
and
mov
hlt
aaa
lcall
push
jbe
int3
inc
mov
icebp
pop
jne
imul
pop
andl
xchg
mov
and
enter
and
dec
sbb
cs
fxch
mov
mov
stc
loop
mov
cltd
push
jmp
test
sarb
sbb
push
iret
push
sbb
inc
je
add
add
xor
imul
in
clc
pop
shrl
mov
sbb
rorb
imul
xchg
jno
jecxz
icebp
or
lahf
adc
stc
loope
mov
popa
fistl
lahf
cmp
les
push
pand
mov
insb
das
out
cmp
add
fs
adc
adc
xor
iret
pop
sbb
lods
incl
pop
dec
fcomip
sub
xchg
fistpll
cmp
gs
test
mov
sbb
push
adc
and
popf
xor
xor
stc
sub
imul
mov
jg
fisubrl
mov
push
mov
cmp
test
push
push
outsl
stos
jmp
mov
sub
jg
inc
fidivs
dec
pushf
pop
aas
scas
jne
cmp
cmp
sub
mov
jo
pop
mov
and
iret
ret
jbe
mov
sbb
and
sub
mov
jne
stos
pop
mov
mov
fwait
outsl
outsl
or
jns
aaa
dec
test
mov
adc
addl
int3
add
movsb
loope
pop
data16
xchg
inc
xor
mov
mov
adc
imul
loop
rorl
shrb
dec
push
or
cmp
push
scas
call
or
xor
shr
jns
xchg
roll
popa
gs
insl
test
ja
or
xchg
mov
cs
adc
loopne
lret
enter
fcmovb
dec
cli
xchg
jae
dec
loopne
push
movsl
fs
popa
hlt
or
in
test
mov
or
in
xor
pop
lcall
xchg
test
jb
sub
bound
xchg
insl
or
mov
jge
push
adc
dec
es
pop
sbb
xor
push
std
inc
das
cld
jg
nop
cltd
xor
mov
dec
jbe
and
in
cli
aam
jo
pop
jl
adc
mov
cmp
arpl
scas
xor
pop
sub
cwtl
imul
mov
xor
sarl
inc
xor
lret
xchg
inc
and
xor
ret
cmp
pop
and
cmc
add
adc
stc
lcall
cmc
lock
rcrb
addr16
and
adc
xchg
loop
or
fldenv
cs
sbb
ljmp
dec
lcall
stc
mov
or
inc
cmp
xchg
mov
insl
push
mov
movsl
xor
xchg
aaa
fdivrs
stos
push
or
mov
cmp
sbb
sbb
call
xchg
jle
adc
mov
clc
add
xchg
lods
xchg
aaa
cmp
js
add
jp
push
rol
and
fcoms
xlat
adc
out
dec
mov
mov
mov
imul
cmp
xor
cwtl
sbb
pop
push
out
pop
popa
mov
xor
ss
and
stos
je
sub
pop
pop
sbb
jg
push
subb
imul
scas
cmc
fsts
addb
sahf
test
sub
mov
stos
jbe
pop
adc
pop
insb
out
in
aad
xchg
xor
jl
and
jmp
mov
sbb
iret
inc
mov
mov
cli
pop
in
rcrl
jo
lea
fwait
mov
fcompl
and
leave
inc
loopne
imul
mov
add
add
jno
xor
test
inc
lahf
in
daa
imulb
mov
push
stc
lret
cwtl
inc
fiadds
shlb
push
mov
jns
shll
adc
inc
mov
push
add
sbb
mov
lret
iret
sbb
mulb
push
jle
push
mov
sub
mov
and
imul
loopne
xorl
dec
out
movsl
mov
pop
sub
arpl
pop
push
jmp
imul
mov
imul
cmp
add
fisttps
roll
xchg
or
jae
ret
lahf
push
or
jns
movsb
fnstcw
es
addr16
push
push
push
cmp
xlat
push
lds
scas
test
xor
adc
and
ss
loop
call
fcmovbe
filds
adc
in
or
rorl
mov
adc
fucomi
inc
pushf
cld
das
xchg
lahf
subl
jge
call
sbb
dec
imul
cmpb
jo
gs
dec
push
aaa
xor
pop
mov
lods
add
lret
pop
loopne
or
and
in
leave
xchg
gs
fstpt
push
in
int3
leave
sub
clc
ds
into
fidivrl
pop
push
popf
fimuls
xor
and
adc
ret
or
jb
fwait
sbb
push
imul
jmp
sub
popf
sub
jnp
sub
mov
pushf
dec
sub
mov
xchg
xor
push
pusha
les
lods
jbe
mov
popf
pop
dec
pop
lods
lock
or
cmp
sbb
rcrb
xor
std
pop
imul
leave
shlb
mov
shrb
mov
out
out
jo
adc
lock
xor
ret
int3
adc
in
stos
into
test
lods
sub
mov
xchg
cmp
daa
popf
inc
fnsave
or
sbb
shl
lds
or
fadds
imul
xor
div
adc
jbe
sbb
adc
dec
xor
leave
jl
cld
sbb
leave
cli
ljmp
sahf
pop
fwait
jecxz
inc
lret
pop
mov
mov
jle
cmp
lods
test
cli
mulb
cmpsb
pop
mov
mov
inc
add
repz
xchg
pop
dec
mov
or
mov
xor
jns
mov
sub
push
xchg
shlb
stos
js
mov
pusha
pop
mov
loope
in
xor
sub
cmp
pop
lret
lret
mov
sbb
inc
int3
cmp
or
cwtl
adc
push
mov
push
adc
add
add
or
jl
lret
jmp
pop
std
jo
outsl
cmpl
rcrl
jmp
std
jnp
mov
cmc
cltd
ja
jg
mov
repnz
sbb
dec
add
in
outsb
jb
add
bnd
je
imul
rcrl
loop
push
lahf
cmp
dec
jb
pop
adc
add
int
aam
nop
push
cli
stos
enter
mov
cltd
nop
jecxz
das
ljmp
dec
mov
and
lahf
add
fdivrp
out
add
or
inc
inc
nop
nop
scas
add
sbb
adc
stc
pop
and
jle
fistps
lcall
xchg
jmp
fbstp
pop
sbb
pop
dec
sbb
pop
cltd
std
cmp
xor
mov
mov
and
push
scas
xchg
call
jmp
shlb
xchg
mov
push
mov
popf
dec
jae
mov
adc
mov
das
out
and
push
push
dec
pop
scas
sbb
inc
cs
pop
and
xchg
fdivl
in
ficoml
ret
xchg
cmpsb
xchg
mov
xchg
and
dec
mov
movl
test
cmp
aaa
jl
mov
into
mov
cld
loopne
jns
pop
xor
ljmp
or
jbe
icebp
xchg
outsl
lds
lods
test
jge
mov
sbb
adc
cmp
xchg
dec
jle
mov
es
adc
or
sbb
xor
mov
push
add
mov
xor
movsb
sti
lret
bound
sub
xor
mov
lea
mov
jnp
pop
ret
imul
xchg
dec
ret
or
push
push
addr16
xchg
sahf
mov
push
adc
pop
hlt
xchg
adc
fsub
sbbl
fucomp
push
dec
inc
push
clc
daa
sti
jne
fldt
or
sub
les
nop
les
xor
sub
push
popf
dec
push
cld
cmp
inc
ficoml
and
test
lahf
xor
xor
aam
inc
or
fwait
push
xor
loopne
popf
sbb
inc
mov
ficomps
lds
ret
push
test
push
rcr
xlat
movb
push
xor
out
xor
sub
jecxz
mov
mov
pop
dec
pop
arpl
mov
mov
bound
clc
ljmp
jle
push
ficomps
xchg
xchg
sbbb
push
sbb
mov
and
movsb
pop
enter
dec
jb
rorl
nop
mov
push
rorb
test
shll
lahf
dec
mov
js
push
cmpb
xor
dec
dec
mov
ss
jg
dec
adc
fnstsw
mov
inc
pop
jnp
jge
xor
jno
in
sbb
rcll
repnz
icebp
add
daa
testb
dec
lock
pop
push
bound
jnp
xchg
sarl
push
jne
ror
mov
ljmp
push
dec
mov
inc
dec
push
jmp
cwtl
pop
jg
sbbl
cmpsb
mov
mov
icebp
dec
fnstsw
int3
mov
outsb
jns
lods
sti
movsl
jo
fs
rcrl
mov
inc
dec
test
shll
aaa
cwtl
testl
jbe
xchg
cmp
jge
stos
xchg
subl
je
pop
push
dec
fmull
icebp
fsubrl
xor
and
mov
and
mov
xchg
pop
ss
test
enter
jg
es
jns
xor
loopne
aaa
insl
or
adc
lahf
movsb
jmp
sbb
xchg
jns
pop
xchg
cld
xchg
inc
jmp
push
loopne
adc
movsl
in
xchg
sbb
mov
js
ja
jno
jno
clc
imul
stos
ds
mov
xchg
out
fwait
in
pop
cmp
fnsave
mov
push
in
mov
out
mov
mov
jecxz
dec
push
enter
push
jmp
lds
add
fbstp
idivb
nop
add
jecxz
lea
push
int3
ss
ljmp
jo
nop
jne
cmp
push
xor
les
push
push
push
stos
push
int
loope
xor
js
rol
xchg
pop
mov
popf
insb
pusha
jnp
fstpt
sahf
and
adc
push
xchg
stos
jb
dec
mov
pop
call
shlb
sbb
ret
lret
cmp
mov
sbb
xchg
pop
fmull
mov
pusha
xorl
jbe
jne
sbb
fmull
in
cmpsl
test
mov
shl
fbstp
dec
mov
jnp
rcrb
jae
sbb
icebp
cmp
pop
in
mov
cmpsb
dec
add
push
das
add
pop
sub
or
testb
fwait
inc
xchg
ficomps
pop
dec
test
fcmovbe
test
cmp
and
adc
cmp
es
inc
outsl
cwtl
gs
in
adc
push
or
push
mov
cmp
cmp
movsl
mov
cmp
in
pop
lahf
or
mov
or
pushf
sub
pop
insl
cltd
mov
xor
imul
or
cs
mov
jge
popf
sub
cli
jmp
sub
pop
sub
pop
ljmp
insl
insb
jp
pusha
xchg
jle
lret
jle
or
in
dec
pop
jo
leave
ret
ss
mov
dec
orl
lcall
mov
loop
mov
lock
std
push
pop
sbb
xlat
xchg
lcall
stos
mov
cmp
add
push
call
sub
rclb
xchg
sbb
je
movsb
xchg
mov
popf
push
cmp
add
sahf
adc
popf
enter
cmp
arpl
movsb
cmp
divb
orl
js
cwtl
cmc
push
xlat
test
gs
imul
imull
sub
cmp
out
mov
mov
mov
cmp
sahf
bound
inc
fdivrp
movsl
movsl
and
sub
scas
sub
mov
inc
pop
ret
jb
inc
or
adc
stos
popa
repz
sub
xchg
cld
cmpsl
movsb
fistpl
loope
pop
xor
sti
pop
in
jne
adc
test
rorl
xor
daa
daa
data16
cmp
pop
and
add
sbb
jb
push
xchg
xchg
dec
cmp
dec
stos
adc
loop
sub
mov
or
mov
lods
lock
clc
mov
xchg
das
push
pop
pop
cmc
xlat
mov
in
lds
inc
imull
in
mov
outsl
xchg
jbe
ja
push
fmull
stc
and
jns
mov
shll
hlt
iret
nop
mov
test
sarb
xchg
inc
ljmp
dec
leave
xor
jmp
das
add
sbb
add
and
outsl
out
sub
add
push
notb
xchg
sub
roll
ret
jge
lcall
test
and
insb
dec
inc
popa
jno
add
sub
les
mov
pop
pop
jmp
push
andb
mov
mov
in
mov
mov
inc
mov
jb
add
push
adc
mov
mov
mov
mov
dec
push
int
add
rcr
pop
jge
jo
sbbb
std
sub
mov
cs
dec
popa
fiaddl
xchg
sbb
push
mov
push
pop
pop
lods
cli
sar
mov
xchg
cmp
movsb
jle
es
mov
or
sub
mov
in
ss
mov
pusha
out
pop
insl
pop
movb
mov
adc
mov
xchg
add
ret
dec
dec
arpl
push
and
mov
leave
push
push
or
mov
adc
lock
in
pop
ret
inc
jns
fwait
add
mov
or
jne
cmpsl
and
dec
les
fistpl
xor
negl
mov
dec
jl
push
repz
addr16
sbb
pop
lret
jp
sbb
cmp
sbb
sub
frstor
ja
mov
decb
into
dec
push
fstl
adcl
adc
incb
das
mov
jns
inc
mov
xor
xor
into
test
jno
mov
shr
gs
outsl
loope
dec
push
es
xchg
inc
movb
inc
in
mov
mov
and
cmp
pop
add
add
cmp
lcall
adc
ficompl
testb
jp
mov
inc
mov
int
xchg
push
ja
push
push
pop
dec
std
or
inc
add
lea
imul
js
outsl
cli
dec
loope
xchg
pop
adc
decl
out
es
loop
jmp
add
call
adc
inc
clc
push
std
dec
dec
icebp
out
mov
mov
cmp
out
not
rcrl
push
je
popf
js
aas
push
mov
imul
gs
fucomp
test
out
test
jl
push
push
pop
int
pushf
dec
mov
sbbb
jb
or
bound
adc
mov
add
aas
jecxz
shlb
out
push
or
mov
jno
lcall
mov
movsb
mov
stc
adc
add
pop
repz
or
aaa
pushl
xor
add
and
push
add
clc
daa
lret
stos
mov
and
cmc
sub
pop
and
into
jmp
xor
add
sahf
in
xchg
mov
mov
adc
jg
mov
pop
push
cwtl
xlat
inc
sbb
repz
add
dec
add
lods
cmpsl
dec
adcb
bnd
jno
popa
aad
and
mov
es
leave
mov
ss
xchg
adc
fsubl
xor
or
loopne
lea
sarl
out
fmul
or
mov
cmpsl
xor
scas
inc
pop
mov
mov
nop
mov
pop
add
cmpsb
push
dec
imul
push
sbb
or
add
pop
sub
jl
les
xchg
mov
add
mov
add
xchg
sub
xor
orl
mov
aaa
sti
nop
sbb
in
insb
sbb
xlat
les
fs
pop
mov
cmp
dec
mov
mov
cmp
test
dec
push
test
jge
jnp
inc
scas
xor
inc
push
sbb
ss
imul
jl
icebp
ds
mov
xchg
xchg
out
loope
sbb
mov
mov
push
mov
mov
mov
cmp
repnz
adc
je
xchg
push
and
xchg
lahf
mov
or
pop
es
mov
lahf
cmp
and
rorb
popf
or
repz
fnstsw
pop
js
or
jb
mov
mov
test
push
les
xchg
mov
xlat
mov
mov
adc
dec
jnp
xchg
pusha
addl
aas
sub
into
gs
pop
dec
negb
sub
idivl
cs
popa
notb
repnz
test
mov
andb
dec
out
sarl
icebp
into
mov
ss
add
cli
dec
xor
imul
icebp
inc
jns
popf
int3
fwait
jecxz
dec
insl
adc
movsb
jge
pop
in
jl
sbbl
push
mov
fcompl
ds
cmc
ret
jo
dec
in
clc
test
push
in
adc
clc
mov
ror
add
jne
jmp
jmp
mov
dec
stos
jmp
xchg
push
or
pop
push
pop
xor
jno
cmp
shr
out
xor
xorb
push
rol
pop
sub
fs
push
xchg
ror
je
jg
lock
dec
sbb
and
and
in
pop
mov
xor
lods
mov
sbb
add
jecxz
inc
lds
dec
in
lahf
icebp
cmc
mov
out
inc
adc
pop
scas
mov
les
dec
into
stos
testb
jno
mov
xchg
or
cmp
and
loope
sbb
mov
cmc
jne
mov
sub
or
jle
mov
cltd
lea
pop
inc
add
lock
mov
jmp
aaa
pop
mov
ret
sbb
popa
cmp
outsl
movsl
imul
data16
test
outsl
xchg
mov
ds
lret
lcall
mov
mov
daa
adc
jne
adc
xor
or
jp
pusha
popa
ret
mov
rcrb
movsl
inc
pushf
scas
xchg
adc
push
cpuid
test
dec
add
aad
movsb
das
xorb
test
mov
inc
jae,pt
or
call
adc
or
jns
mov
nop
out
and
insl
jg
aas
rcll
jne
pushf
inc
mov
out
add
repnz
pop
arpl
lea
inc
lret
mov
mov
mov
adc
lds
das
sbb
clc
and
sbb
js
icebp
sbb
lcall
jb
cmpsb
push
mov
jecxz
outsb
and
je
sub
xchg
lock
mov
and
xlat
sar
data16
icebp
dec
scas
fisubrs
movsb
bound
or
adc
int3
mov
sub
dec
insl
cld
pop
sub
idivl
push
cld
imulb
andb
test
mov
xor
add
fnstenv
jne
scas
mov
ds
or
jl
shlb
leave
xchg
mov
mov
es
push
jbe
jb
mov
nop
sub
stc
push
cmp
and
cwtl
dec
lods
dec
popl
mov
cli
test
xchg
jge
sbb
rorb
cmpsl
rol
jnp
and
xor
fs
in
lahf
mov
ja
fs
add
insl
arpl
jle
insl
shl
jecxz
outsb
sub
clc
jp
sti
adc
out
outsl
in
add
push
xchg
fstpt
hlt
pop
or
scas
cmc
push
sahf
popa
cmp
jno
push
and
out
xchg
iret
xor
push
sbb
cmp
push
sbb
int
rolb
shll
insb
mov
xchg
push
sub
pop
ss
xchg
stc
pop
lods
pop
inc
mov
xchg
sub
shlb
stos
shl
pop
xchg
aaa
push
add
dec
xor
out
mov
push
cwtl
les
dec
fildll
out
xchg
mov
mov
inc
and
aad
popa
call
aam
mov
sbb
cmp
adc
jp
iret
cmp
mov
imul
sahf
int
pop
shlb
push
push
int3
orb
jae
mov
dec
fucomp
arpl
mov
jns
add
jg
lods
stos
das
dec
sub
imul
clc
cmpl
jecxz
addr16
adc
pop
addr16
adc
sbb
push
cmpsl
sub
jecxz
xor
js
inc
stos
adc
mov
aaa
sbb
cltd
clc
repnz
pop
int3
arpl
mov
dec
addr16
jnp
cmp
push
and
jbe
mov
push
ret
dec
daa
pop
in
rol
outsb
popa
dec
jmp
scas
or
repnz
pop
sahf
push
xchg
dec
mov
mov
sbb
or
or
lods
pop
insb
pop
lods
ljmp
stc
call
pusha
call
nop
mov
das
js
js
pop
and
int
adc
adc
test
andl
unpckhps
mov
arpl
sbb
jb
loopne
xchg
sub
mov
and
popa
repnz
jns
jns
test
js
test
inc
test
ret
jns
push
mov
cmp
popf
outsl
sti
or
or
xchg
xchg
sub
pop
fld
jl
sbb
iret
arpl
dec
lods
mov
push
fimuls
sub
call
mov
mov
xor
out
enter
pop
mov
add
rcr
or
cltd
add
jb
push
lcall
ja
sub
ds
ret
out
push
scas
sbb
subl
add
test
or
out
cltd
hlt
adc
ret
popf
call
loope
ret
in
push
stos
lret
stos
in
mov
addl
mov
mov
lods
cmp
pusha
or
xchg
mov
or
jne
call
stos
imulb
add
out
or
movsb
cli
dec
or
cld
fldenv
cmp
nop
mov
inc
enter
mov
fdivrl
in
cmp
pop
fisttpl
fisubs
add
cmpsb
sti
es
das
jno
adc
out
cmp
orl
mov
xor
sub
mov
ret
jp
push
mov
cmpsb
lret
sbb
xor
dec
lret
push
sbb
mov
add
orb
adc
xchg
mov
add
jae
jmp
movd
push
jmp
inc
and
xor
stc
das
std
or
push
xor
adc
fimuls
mov
push
mov
xlat
int3
xchg
jle
xor
jle
dec
cmp
movsl
or
aas
push
clc
or
pop
fsub
push
fistpl
sbb
inc
sahf
gs
xchg
fsubrs
pop
iret
pop
jbe
fisubrl
xor
xchg
leave
inc
sbb
cmp
ret
mov
push
dec
rclb
push
ljmp
rcrb
popf
leave
cmp
loopne
sbb
mov
push
lock
lcall
nop
div
out
out
ja
inc
sub
aam
pop
inc
sbb
iret
ljmp
adc
cmp
cmp
sub
mov
cmc
xor
test
imul
rcrb
or
adc
out
or
repz
sahf
test
sbb
jb
aam
fdivl
mov
leave
inc
xor
cwtl
dec
paddb
icebp
ret
aam
sub
jg
out
mov
sub
fcoml
cwtl
jns
imul
cmp
and
or
sbb
loope
pop
icebp
pop
cld
push
mov
mov
jge
add
fisubrl
aam
pop
fisttpll
push
and
mov
push
add
fsubrp
push
mov
mov
ja
jmp
hlt
bnd
subb
sub
xor
xchg
pop
cltd
jne
ljmp
outsb
push
inc
xchg
sbb
or
mov
aas
pop
lods
out
ds
xor
enter
jnp
shlb
push
inc
popa
sbb
inc
mov
lcall
mov
pop
dec
int
push
inc
cld
lret
pusha
cmpsl
int3
add
and
mov
add
negl
mov
add
xor
and
and
roll
fwait
sbb
call
fildll
cwtl
mov
popf
addr16
pushf
push
cmp
movsb
out
jl
movsl
push
mov
fwait
dec
xchg
adc
mov
mov
xor
scas
pop
sbb
daa
and
lret
sarb
mov
sub
or
cld
cli
es
adc
mov
push
loope
add
inc
int
fwait
jmp
bound
mov
popa
mov
or
adc
negl
mov
rcll
cmp
dec
leave
jecxz
jg
jns
mov
adc
out
or
stc
fwait
adc
sahf
and
add
hlt
push
out
xchg
dec
sbb
inc
xchg
dec
pop
adc
fsubl
loop
pop
daa
pop
sbb
out
xor
mov
push
outsl
xor
pop
mov
fiadds
mov
push
fcompl
jb
das
hlt
ret
cmp
mov
and
clc
js
mov
iret
mov
rcll
sub
adc
insb
fs
mov
clc
push
cmp
mov
paddsb
scas
rcrb
add
cltd
bound
fwait
jle
insl
mov
sbb
pop
sub
push
lret
cmp
stc
lds
fs
inc
sar
std
in
dec
push
outsb
rolb
add
or
pop
fiaddl
outsb
add
ss
cmp
in
xchg
nop
insb
gs
pop
mov
xor
push
mov
mov
pop
pop
imul
cmp
and
movsb
xchg
push
ret
stos
dec
push
inc
les
pop
xchg
pop
lea
cld
in
scas
push
sbb
xor
inc
push
xchg
ret
mov
push
je
aas
dec
sar
mov
lcall
sub
inc
test
mov
xlat
inc
lcall
in
push
push
in
ret
push
lea
lcall
not
inc
and
loope
les
fsubl
movsb
sbb
push
xchg
jge
jge
arpl
test
sti
daa
xlat
sahf
jbe
xor
sub
out
out
iret
cmpsb
insb
xlat
jg
test
repnz
adcl
mov
add
sbb
sub
add
push
mov
sti
xor
xchg
jecxz
pop
adc
cmpsl
mov
in
xor
push
xchg
cmp
test
rolb
in
loopne
jbe
mov
adc
out
pop
mov
push
sbb
out
mov
inc
aaa
add
or
popf
js
sbb
lcall
mov
das
and
mov
or
or
sti
imul
jbe
inc
and
fwait
jge
aaa
das
in
xchg
imul
bound
sub
into
push
mov
add
mov
ret
jb
pop
mov
pop
push
fistpll
aad
mov
sub
xor
lret
adc
mov
movsb
gs
push
cmc
xchg
shlb
add
int
cmc
sar
fwait
xorb
addr16
xchg
cmp
addr16
push
mov
les
sbb
push
mov
mov
gs
imul
movsl
adc
jb,pt
xchg
rolb
mov
stos
or
xchg
lds
adc
jo
orb
jle
jo
sarl
lea
test
js
xor
and
sti
inc
push
mov
mov
fildll
orl
leave
fstpl
lock
pop
sti
test
mov
xchg
jecxz
out
cmp
or
mov
push
nop
repnz
movsl
ja
clc
jl
ss
test
data16
insl
xchg
gs
gs
lret
in
lods
sub
sete
rcrb
xor
and
mov
ja
test
shrl
inc
out
test
and
pop
mov
add
xchg
pushw
lret
and
xchg
scas
sub
jle
out
push
lret
lcall
cmp
push
push
sub
fcomip
xor
int
movb
mov
pop
pop
test
mov
cmp
jns
in
pop
push
dec
gs
sbb
mov
cmp
icebp
cmp
adc
scas
inc
pop
cs
inc
xchg
inc
add
cld
jecxz
shlb
dec
adc
popf
fcomps
iret
fstp
lock
fisubl
mov
outsl
dec
mov
push
enter
shlb
pop
dec
int3
ja
jne
test
mov
mov
out
outsl
inc
cmp
xchg
shll
dec
add
sarl
dec
hlt
scas
pusha
push
fstl
cmpsl
mov
xchg
in
mov
enter
aam
push
pop
xor
mov
jl
outsl
push
sbb
jb
inc
jge
add
xchg
push
xchg
rorb
xchg
ss
pop
cmp
pop
cwtl
stos
jo
and
aad
cmc
shrb
adc
cs
xchg
lock
or
mov
pop
lods
push
stos
aam
push
nop
mov
lock
pushf
repnz
in
xor
xlat
sahf
jns
std
inc
push
in
xlat
sahf
loopne
jbe
aaa
out
mov
sahf
pop
fmuls
imul
add
cmp
pusha
xor
cltd
fistpl
inc
jns
sub
sti
and
call
hlt
lds
daa
popf
repz
jbe
cmpl
push
jb
fiaddl
or
sbb
cmp
mov
dec
ds
jg
sub
mov
test
popa
inc
jnp
inc
push
frstor
loop
mov
in
fsts
stc
and
jp
push
cs
mov
xlat
sbb
sbb
mov
mov
and
enter
arpl
test
fcomp
sub
add
pop
add
xchg
fyl2x
jae
ljmp
mov
test
inc
xchg
sub
ja
jns
arpl
enter
or
add
sub
mov
and
out
out
repz
xor
mov
imul
fsubrs
out
iret
les
mov
or
jo
call
rcrb
in
cmpsb
cli
xor
std
movb
push
jmp
xchg
xchg
sbb
lods
aas
jae
adc
das
ficoms
je
cmpsb
outsb
je
test
cmpsl
lods
push
bound
jle
dec
jne
or
cmc
cs
mov
inc
icebp
mov
fnstsw
pusha
adc
dec
in
cmpsb
insb
rcrb
xchg
sub
sub
cwtl
dec
mov
push
aam
dec
dec
dec
xor
shld
push
scas
pop
scas
add
adc
dec
inc
adc
jb
out
mov
arpl
data16
loopne
mov
ljmp
inc
xchg
cltd
lcall
mov
movsl
fcompl
adc
das
mov
or
xchg
fdivrl
stos
xor
enter
push
cltd
pop
and
in
cmp
shl
mov
push
test
outsb
fdiv
rol
jb
sti
pop
push
pop
push
insb
jno
mov
nop
cwtl
mov
ljmp
pop
push
addr16
xlat
sub
pop
and
in
cmpsl
xchg
shll
imulb
sub
mov
mov
fcoml
daa
loopne
lds
pop
adc
or
test
bound
es
or
mov
pop
sbb
push
pop
xchg
mov
sbb
mov
pop
jg
adc
mov
xor
sub
fmuls
fldcw
sti
and
pop
sarb
jp
clc
push
jae
nop
dec
loop
cld
out
call
add
mov
frstor
pop
mov
pop
movb
jae
mov
or
scas
rcll
cmp
std
nop
mov
mov
imul
dec
xor
aam
dec
inc
movsb
push
cmp
sbb
insb
adc
std
mov
adc
push
mov
jo
pop
and
mov
mov
xor
mov
ja
lret
inc
je
in
sbb
pop
dec
dec
test
idivb
add
push
stc
shrb
jg
mov
lds
and
lock
xlat
in
mov
or
inc
or
jmp
hlt
sti
jecxz
stc
pop
jo
mov
xchg
pop
andl
push
ret
stos
movsl
loope
cmp
adc
mov
cmp
pop
and
stc
dec
les
or
push
hlt
and
rorl
jns
add
xchg
jmp
ret
push
and
adc
adc
mov
lods
xchg
or
dec
lret
mov
cmpb
repz
push
pop
bound
add
and
pop
in
std
out
mov
or
je
sbb
notl
push
sbb
lahf
mov
outsl
add
push
data16
rclb
adc
aam
lds
push
mov
into
clc
inc
lods
fs
mov
mov
pop
cmp
pushf
dec
pop
mov
push
cmp
mov
push
aas
insl
mov
insl
and
sub
mov
jbe
shrb
sbb
stos
sbb
xor
xor
out
jno
and
jns
jbe
xchg
xchg
or
mov
and
mov
jecxz
mov
cs
shll
in
imul
int
mov
mov
mov
sbb
cli
sub
fld
cmpsl
fistpll
xchg
shrl
fistps
repnz
iret
in
loopne
pop
or
inc
mov
jbe
test
mov
and
in
mov
sti
stos
xchg
shlb
pop
cmp
fisttps
imul
lret
pushf
fdivs
fldt
add
test
mov
stc
notl
add
add
loopne
push
loope
push
imul
inc
mov
in
sbb
xchg
scas
icebp
fdivrs
sbb
or
mov
cltd
xor
les
and
mov
arpl
xchg
push
sti
jns
addl
aaa
enter
adc
ss
addr16
loop
cltd
jno
push
mov
inc
into
leavew
jae
cmp
xor
lret
mov
mov
xor
hlt
or
mov
push
mov
lods
jne
in
aad
fcos
dec
pop
xor
jnp
je
dec
ret
xor
out
add
fwait
sub
push
and
mov
cmc
stc
loop
jle
sub
outsl
aaa
jo
imul
jb
jo
mov
jmp
mov
mov
mov
fnstcw
das
outsl
pop
or
pop
clc
addb
inc
adc
cwtl
cmpsl
jle
xor
cmp
adc
mov
mov
out
xor
in
in
jl
lahf
cmp
repnz
scas
in
xchg
xchg
or
mov
jae
ret
sti
pop
pop
and
sbb
sub
and
movsb
jl
sub
movsl
shlb
call
push
or
insb
out
cmp
dec
push
rorb
push
jo
pop
imul
mov
cltd
and
enter
repz
cmp
push
xorb
adc
ffreep
movsl
adc
scas
js
lds
sub
or
inc
xor
adc
push
insb
mov
and
cmp
ss
xlat
mov
cmpsb
dec
lcall
pop
call
lods
fcom
mov
mov
imul
xlat
insb
lds
cwtl
mov
cmpsb
ja
xchg
daa
nop
mov
mov
leave
dec
or
mov
int
ja
mov
popa
add
jo
mov
jle
into
sahf
cmpb
lret
push
push
dec
les
xchg
jge
mov
pop
jb
pop
cmc
clc
mov
xchg
fbstp
add
push
jno
sbb
mov
jo
push
xchg
dec
test
aas
push
push
setl
xchg
mov
and
fcmovnbe
dec
sbb
xchg
stc
test
push
fs
sti
mov
movsb
jae
mov
mov
shll
or
mov
or
dec
xor
shrd
icebp
cld
repz
pop
cmc
lret
stos
clc
cli
push
mov
stc
fsubrl
adc
lret
repnz
in
loop
cmp
jp
nop
ret
in
push
lea
jg
dec
stos
jl
inc
sbb
add
inc
pop
iret
out
fwait
outsb
js
xor
adc
sbb
fimull
subb
std
fsubrs
int
cld
cmc
nop
add
mov
inc
lock
push
repnz
sub
cmpsb
sbb
mov
xchg
mov
test
inc
xor
aam
movsl
pop
cmp
jnp
in
jb
adc
mov
mov
jp
arpl
push
movsl
pop
sbb
insl
mov
mov
pop
mov
push
sbb
pop
enter
sti
push
mov
popf
push
add
enter
outsb
pop
pop
lret
pop
aad
mov
lds
dec
iret
std
mov
sti
andl
std
jle
out
or
test
xchg
xor
add
adc
outsb
push
xlat
or
pop
jle
inc
rorb
les
mov
jmp
xchg
pop
jo
popa
mov
outsl
sbb
mov
mov
fst
daa
call
loopne
repnz
push
outsl
pop
jne
imul
sub
cmp
mov
mov
lcall
xchg
cmpsb
sbb
push
inc
xor
mov
jae
rolb
not
dec
jo
lods
sbb
rcrb
xchg
sbb
inc
mov
push
add
mov
sub
jg
fidivrl
addl
idivl
fdecstp
push
jmp
je
sti
repnz
mov
rcll
je
std
xchg
int
pop
ds
rcrb
add
nop
jmp
jl
jnp
dec
shlb
push
ja
lcall
std
cmp
jne
sub
pop
inc
cmp
outsl
mov
mov
out
inc
stc
xchg
adc
and
aad
out
cmp
lea
stc
sti
cmpsb
mov
mov
push
test
push
jbe
cmp
inc
shlb
cmpsb
pop
xchg
xchg
stos
mov
jbe
outsb
jl
xchg
mov
pop
or
pop
xor
xchg
pushl
mov
push
mov
jmp
xor
sahf
call
cld
movsl
pop
aam
push
add
fwait
add
es
pop
add
mov
sbb
lods
std
jno
dec
imul
and
push
mov
test
call
das
mov
lret
std
inc
jmp
cltd
in
fcoml
outsl
cmp
pop
pop
cmpsb
mov
lcall
xchg
stos
out
in
cmp
jbe
mov
ss
jb
and
loope
mov
jl
dec
inc
cmc
jmp
jae
aam
pop
bound
ja
add
sbb
mov
cltd
out
jge
fs
mov
xchg
mov
fsubrl
mov
sbb
pop
sub
jecxz
jmp
sbb
loopne
clc
stc
cmp
pop
pop
push
push
xchg
nop
xor
and
out
push
inc
pop
icebp
push
mov
pop
sbb
xlat
mov
and
dec
test
cmp
add
push
addr16
xor
inc
das
std
push
mov
fcoml
push
cwtl
pop
les
and
outsl
sub
xchg
xor
mov
adc
cmpsl
out
enter
mov
sub
cmp
push
dec
stc
addb
fadds
pop
xor
popf
inc
push
mov
out
mov
pop
mov
in
test
stos
xor
jno
dec
pop
pop
enter
addl
es
les
rorb
push
adc
scas
jl
arpl
cs
mov
aad
scas
jae
loopne
cltd
mov
lcall
push
insl
leave
mov
ljmp
and
and
lret
add
pop
not
loope
in
iret
pop
lcall
sti
dec
arpl
fs
inc
loop
cmp
mov
lret
mov
rclb
mov
xchg
cli
jno
lahf
loope
data16
sub
or
dec
fs
jno
scas
in
dec
mov
jns
cmp
repz
ljmp
jns
enter
sti
subb
movsb
adc
dec
push
lock
frstor
rclb
dec
push
test
mov
shld
jmp
lcall
mov
mov
xchg
sahf
xor
inc
xchg
cmp
test
push
dec
xchg
push
shlb
pop
pop
sub
cvttps2pi
ljmp
inc
push
leave
inc
aad
inc
stos
xor
gs
pop
mov
jl
in
repnz
enter
xor
mov
hlt
es
dec
ficompl
outsl
test
pushw
sub
lock
sahf
xchg
mov
loope
popa
pop
xlat
addb
dec
in
out
loopw
iret
push
jmp
js
jb
mov
test
sbb
call
jae
add
xchg
enter
fldenv
push
out
mov
pop
add
and
fcompl
sbb
test
xchg
mov
daa
enter
or
test
test
dec
enter
out
loopne
xchg
popa
cmpsb
test
mov
jns
mov
int
out
es
xchg
mov
xor
pop
mov
jo
add
mov
dec
mov
mov
push
cmp
sbb
mov
or
jle
push
push
imul
dec
mov
insl
mov
imul
dec
jmp
lahf
cmp
scas
add
add
mov
ljmp
or
pop
mov
je
add
scas
cmp
jae
cmpl
clc
or
cmpsl
push
pop
popa
cltd
sahf
xchg
insb
into
cmp
orb
pop
jns
mull
lcall
push
xchg
fwait
adc
xlat
mov
xor
lods
sbb
lret
sub
aas
and
sbb
dec
fdivrl
out
inc
lsl
xchg
lahf
stos
mov
add
xchg
sub
pop
ret
add
outsb
aad
jae,pt
or
std
js
test
cwtl
outsl
mov
test
lds
testl
jl
mov
pop
scas
js
shrl
jge
xchg
or
jle
xchg
std
push
call
iret
cmp
std
mov
arpl
jg
bound
add
push
movsb
jbe
loop
out
mov
pop
aam
fwait
rcrl
push
and
lea
icebp
bound
dec
pop
lahf
mov
jle
dec
or
push
fucom
push
xchg
mov
fs
cwtl
cwtl
scas
jbe
fs
loopne
mov
orb
sbb
outsb
mov
adcb
movl
sub
int
mov
pop
jge
mov
in
mov
or
push
mov
mov
pop
aam
jmp
movsl
int
jp
ss
cmp
roll
or
jge
loop
push
cmp
add
fldt
jnp
fdivl
xchg
lods
inc
loope
push
lods
std
cltd
test
call
loope
pop
xor
pop
pop
mov
jns
add
add
lock
lahf
pop
and
arpl
insb
rcl
in
mov
insl
push
cmpsl
out
cmp
push
xor
xchg
test
scas
clc
leave
repnz
xchg
inc
xorl
or
adc
adc
and
jecxz
sub
mov
movsb
sub
repnz
test
imul
dec
pop
rcrl
test
test
mov
cld
leave
adc
bound
lock
gs
sbb
outsb
dec
sahf
lods
mov
aam
sahf
cli
cs
pop
and
cmp
lods
xchg
mov
dec
add
scas
push
and
push
int
pop
sbb
popf
loop
call
jmp
loop
xchg
mov
cmc
jl
mov
cs
adc
fldcw
xchg
int
jns
ffree
sbb
xchg
bnd
pop
divl
cmpsb
in
cmpsl
mov
and
inc
mov
xor
jp
out
dec
mov
pop
clc
jg
adc
sub
pop
enter
cmp
js
add
rolb
loope
pusha
jb
insb
xor
test
dec
cmp
and
in
pushf
mov
sti
in
pusha
stos
adc
adc
mov
aad
push
das
sub
adc
dec
jge
add
jns
xor
jb
mov
pop
xchg
pop
cmpb
outsb
sbb
inc
adc
inc
push
scas
adc
xchg
ds
int3
clc
aaa
or
add
or
or
bound
lcall
addr16
lret
push
insb
push
out
rcr
test
add
cmpsb
sbb
sbb
or
adc
scas
sub
clc
mov
xchg
sub
test
rcrb
sub
in
and
and
jge
mov
imull
xlat
dec
push
jecxz
push
jle
jg
adc
xor
outsl
outsl
mov
arpl
inc
test
adc
xor
xor
mov
test
sbbb
jbe
adc
cld
int3
daa
pop
jae
test
fdivl
adc
mov
add
sub
adc
adc
mov
dec
adc
ljmp
ret
lods
dec
jbe
rcll
int3
pop
movsl
adc
lret
xchg
pushf
ljmp
xor
shlb
jmp
or
push
mov
sub
das
inc
push
ss
nop
xor
jno
adc
mov
pop
cltd
sar
loop
dec
stos
pop
stc
jl
xchg
xor
sub
add
incl
adc
and
mov
shl
pop
xor
fdivrs
mov
es
testl
fs
sti
hlt
sub
cltd
jl
leave
fs
mov
popf
lret
adc
xchg
push
xor
sub
cltd
push
or
inc
push
inc
lahf
movb
push
jge
repz
shr
lret
fdivrp
mov
mov
in
fs
xlat
dec
push
push
fimuls
lods
fidivs
push
mov
lds
in
sbb
jmp
jge
adc
outsb
les
inc
lret
bnd
and
shll
movsb
mov
out
lcall
aas
inc
jl
mov
xchg
cmp
xor
jmp
sahf
pop
imul
ds
fcoml
cmp
aaa
mov
icebp
dec
xor
xchg
fdivr
sarl
test
frstor
add
lds
div
add
add
mov
mov
add
subb
mov
fnsave
mov
add
clc
or
cmp
out
mov
fsubrs
and
xor
xchg
movsl
jmp
dec
add
insl
xlat
sbb
pop
lea
lock
mov
fldcw
test
lods
or
mov
jge
stos
test
loopne
in
mov
mov
adcl
imul
dec
jb
mov
sbb
testl
sub
out
add
pop
in
mov
sbb
mov
sub
fcmovu
jae
mov
adc
test
or
loope
std
pop
pusha
or
jno
sbb
out
pop
jg
in
shlb
dec
and
andb
hlt
repnz
push
mov
sub
push
out
dec
cmp
cmp
sub
or
cmc
insb
stc
cmp
jo
jb
or
clc
dec
inc
dec
ret
sub
imul
xor
in
add
testl
sarl
or
dec
les
add
mov
iret
cmp
fsts
inc
ret
xor
inc
xchg
xorl
xor
adc
jae
push
push
pop
cmp
enter
cmpl
push
test
xchg
adc
xchg
xchg
dec
fsubrs
cld
and
mov
push
sarl
push
addr16
std
fst
ss
add
sar
and
mov
inc
dec
test
xchg
jns
inc
push
test
ret
dec
cmp
test
push
cli
add
push
mov
insb
cmp
pushf
icebp
and
negb
rcrl
insb
movsl
sbbl
je
mov
and
jp
into
inc
push
add
add
xor
pushl
or
and
sti
mov
cmp
in
fiaddl
into
fdivrp
cmpsl
sub
lcall
call
out
jno
pop
mov
enter
sub
inc
sarb
icebp
sbb
cmp
sbb
push
gs
jae
in
or
dec
lcall
dec
pop
sbb
pop
stos
in
mov
push
pushl
sbb
out
push
pop
adcb
xchg
and
jae
test
cltd
mov
repnz
xchg
mov
sbb
add
cmpsl
jno
cwtl
insb
out
and
sub
dec
ja
or
xchg
xor
jle
pushf
xor
cmp
jecxz
xor
dec
mov
or
pop
add
mov
cmpsb
push
sbb
sahf
pushf
xchg
mov
add
mov
push
jmp
mov
cmpsl
cmp
mov
adc
sbb
lds
aam
fwait
ljmp
adcl
mov
ror
je
in
lcall
jno
pop
lea
sub
mov
std
xchg
xor
push
add
arpl
pop
js
adc
pop
jne
clc
add
push
fdiv
test
mov
clc
and
mov
test
jl
jo
gs
dec
jge
insb
out
jo
loop
pop
adc
add
dec
test
stc
push
jns
lods
add
repnz
jno
imul
mov
cmp
xchg
mov
sub
aaa
mov
es
movsl
xlat
and
icebp
out
mov
sub
cmp
push
add
nop
jb
ss
ljmp
lds
and
sti
sub
int3
arpl
pminsw
mov
sbb
lea
stos
outsb
iret
lds
add
lcall
mov
flds
stos
je
adc
push
outsb
xor
inc
aas
xchg
mov
mov
mov
pop
mov
cmp
cmpsl
shll
daa
insl
lods
xchg
cmc
mov
jecxz
mov
cmp
sub
fists
das
inc
iret
shlb
imul
and
dec
cmp
jl
mulb
dec
jnp
add
movsb
out
addr16
pop
jno
ds
mov
in
insl
sub
lock
sub
imul
xchg
pop
loope
jbe
or
lds
aaa
mov
mov
mov
scas
push
adc
mov
mov
testl
cmp
dec
mov
mov
push
or
pop
add
iret
pop
stos
pop
lret
jle
xor
mov
shlb
fildll
mov
daa
mov
pop
sub
pop
xchg
bound
push
inc
or
and
rcrb
cwtl
and
in
push
or
sub
push
cltd
jmp
lcall
iret
iret
jmp
mov
pop
stos
out
out
pop
dec
mov
cmpsb
in
ss
mov
sti
jecxz
dec
xchg
cmp
pop
sub
mov
bound
push
test
pop
add
jb
daa
cmp
inc
mov
push
push
sbbb
repz
enter
and
pop
mov
or
adc
clc
mov
ss
subl
pushf
popf
xlat
mov
fldenv
cli
cmp
divb
cltd
dec
jae
add
imul
imull
pop
test
out
fwait
sti
and
sub
add
or
dec
hlt
dec
xchg
or
jl
mov
mov
xchg
aaa
out
and
mov
inc
movb
insb
bound
ret
in
jge
shlb
pusha
xor
jmp
jae
aaa
movsl
test
rorl
mov
rcrb
fbld
out
dec
outsl
aad
mov
cmp
and
dec
cmp
mov
push
pop
sbb
leavew
subb
jb
ret
xchg
and
pop
sub
adc
jae
push
add
pop
inc
inc
and
sub
das
pusha
sub
lret
mov
jg
data16
nop
hlt
fwait
into
lret
ja
scas
sbb
outsl
xor
ds
call
push
or
mov
mov
mov
sub
inc
popf
cwtl
das
ret
je
xchg
add
int3
cmp
inc
lahf
outsb
push
loop,pn
pop
push
cs
test
jb
push
movsl
cmc
push
cmp
subb
xchg
das
sbb
popf
imul
stos
mov
scas
jae
subl
adc
ret
dec
mov
cmp
movsb
in
push
ffreep
mov
cmpsb
and
adc
add
push
pop
push
jae
dec
popa
dec
movsb
pop
and
aad
sbb
inc
jnp
out
in
mov
adcl
cmp
inc
mov
jl
imul
xchg
sbb
pusha
rep
mov
sahf
mov
fidivs
out
mov
rol
jle
xchg
repz
mov
mov
int
sbb
outsb
cmp
sar
xchg
in
lods
push
out
sbb
add
js
das
adcb
inc
lcall
daa
mov
insl
jnp
sar
dec
lret
mov
and
push
and
out
ljmp
sub
and
push
cmc
xor
movsb
imul
xchg
div
shrb
imulb
lock
and
popf
in
pop
xor
aam
out
mov
ret
sub
test
mov
mov
mov
push
iret
scas
fwait
pop
push
fwait
adc
and
scas
cmpsb
jmp
outsl
xor
push
jg
inc
sub
sub
in
inc
ss
ljmp
add
test
xor
imul
jge
add
insb
pushf
jmp
and
jnp
adc
popa
cld
loop
pushl
or
or
pusha
outsb
sub
mov
xor
mov
out
push
inc
or
adc
out
cmp
mov
sub
and
lea
rol
xlat
pusha
mov
and
jecxz
sbb
push
shrb
lcall
add
xor
hlt
and
clc
add
xchg
popa
add
add
mov
dec
les
xchg
push
aad
cmpsl
push
mov
jno
ss
sbb
les
incl
adcb
movsb
cs
mov
jl
mov
dec
and
jge
push
lahf
sub
fdivs
je
jp
out
and
scas
jo
aam
and
add
xchg
jge
ror
bound
test
push
scas
cmp
mov
stc
in
imul
daa
inc
outsb
lea
lret
fisttps
cmpsb
cmp
and
sahf
xchg
push
out
adc
pop
add
cmpsl
lds
hlt
push
dec
or
rorb
jnp
mov
push
push
xor
cmp
mov
and
sub
pop
das
inc
mov
int3
lcall
movsl
test
adc
lcall
and
and
sbb
mov
cmc
into
add
inc
pop
adc
pop
and
jl
cmpb
xor
negl
gs
test
aas
lret
test
mov
popa
add
sbb
rclb
repz
and
push
xor
push
mov
movsl
inc
inc
or
mov
sub
cli
adc
daa
fbstp
orb
mov
outsl
xorb
scas
mov
inc
sahf
push
daa
lahf
inc
clc
ljmp
mov
ss
pop
es
or
push
mov
notl
cmp
dec
inc
pop
test
sbb
fs
push
rcrl
jnp
fs
loope
in
cmpb
pop
js
popa
cmp
sbb
add
xor
insl
dec
sub
addr16
addr16
push
sbb
xor
adc
pop
cld
rcl
mov
mov
gs
repz
and
hlt
add
mov
daa
inc
jne
push
jg
in
add
mov
fadd
inc
mov
dec
sarb
inc
notb
lret
out
sbb
loope
addr16
pushf
mov
jne
sbb
push
in
add
add
ret
inc
and
xorl
jo
mov
pop
pushf
add
add
inc
lods
xchg
push
fwait
add
scas
popf
lea
sbb
sub
jne
enter
mov
arpl
rcrl
or
jae
and
cmc
dec
jne
or
pushf
cld
loopne
seta
jmp
popa
iret
scas
aam
idivl
xchg
or
lock
cmp
mov
int3
xor
sub
inc
adc
fcomps
in
mov
push
pop
cs
pop
mov
xorb
test
ret
scas
jne
cmc
orl
and
push
loop
adc
aam
adc
aaa
xchg
xchg
mov
negb
sbb
leave
lcall
mov
lret
ljmp
pop
dec
lock
pop
hlt
icebp
xor
sub
push
aam
sbb
mov
mov
jmp
in
insl
leave
cmp
popf
shlb
call
jnp
lcall
mov
mov
xchg
cmp
jnp
sbb
fcomps
int
push
ds
add
mov
in
push
dec
or
and
je
sub
mov
test
negb
cwtl
iret
xchg
cmpb
push
lahf
int
xchg
mov
aaa
sub
cmp
insl
mov
push
jb
stc
add
mov
jmp
mov
sbb
push
pusha
add
cmpsb
mov
dec
repnz
out
xchg
adc
mov
jbe
sahf
mov
cld
or
jmp
push
mov
pop
mov
aam
lods
cs
cmp
addb
inc
dec
sar
mov
mov
fimull
ret
lock
push
mov
mov
rol
int3
daa
jl
ret
mov
jg
xchg
les
cltd
lret
mov
lahf
lods
xor
insb
sbbb
jns
mov
movsb
fistps
aam
jmp
cmp
lret
jo
sub
xchg
lods
pop
insb
xchg
mov
movsb
mov
ret
push
or
fcompl
das
mov
mov
test
lea
inc
ljmp
push
icebp
int3
mov
dec
inc
cmpsb
mov
movsb
lcall
ja
sbbl
test
dec
mov
add
dec
enter
lds
mov
mov
lock
sub
jle
jne
jne
cmp
xor
jne
push
mov
pop
outsl
fstpt
pop
xchg
and
rcl
ficoml
out
outsl
test
mov
aad
xchg
inc
cmp
pop
add
adc
lock
or
xchg
xor
sub
or
std
andb
cltd
xor
fiadds
cmpsb
pop
repnz
gs
mov
xchg
mov
jg
push
mov
shr
and
push
dec
hlt
jmp
jb
cld
insb
inc
add
test
flds
push
cwtl
fsub
or
sub
ja
dec
add
add
shrb
test
add
rol
push
cli
jnp
add
inc
das
adc
xchg
repnz
sub
rorb
fwait
out
or
push
cs
inc
sbb
cmp
icebp
pop
sub
and
sbb
mov
sbb
cwtl
stos
mov
mov
push
jp
xchg
lock
mov
stc
ficompl
xor
fisubrl
repnz
mov
push
adc
or
mov
and
enter
mov
lea
inc
loopne
dec
push
in
insb
cmc
out
sbb
jne
add
push
fstpl
lahf
hlt
push
loop
sbb
or
mov
rol
and
pop
sub
or
pop
push
rcrb
push
lods
mov
dec
hlt
inc
cmpsl
push
ljmp
test
pop
cmp
jmp
cld
add
lret
lea
cmp
stc
adc
xchg
test
push
push
pop
push
fisttpll
cli
ja
aad
sbb
cmpsl
add
push
add
cmp
jle
lahf
repnz
iret
dec
in
icebp
js
xchg
add
mov
xchg
dec
aad
mov
or
jae
ficompl
inc
pop
mov
test
mov
rolb
add
rcrl
fsts
rolb
pop
stos
or
inc
pop
cmpsb
jne
push
add
mov
int3
pop
pushf
mov
gs
test
mov
andb
rep
push
add
fwait
mov
mov
sbb
gs
mov
jno
std
fwait
add
cli
mov
dec
js
and
adc
mov
cmpsb
icebp
mov
jge
inc
imul
out
add
xchg
xlat
dec
xchg
dec
cmc
fstpl
mov
jge
xchg
out
sub
jmp
add
push
mov
mov
ficompl
nop
shrb
cmpsl
loopne
dec
jns
jg
push
cmpb
js
lock
xchg
mov
lret
pop
out
in
loope
and
loop
scas
pop
adc
fidivrl
adc
mov
idivb
rorb
cmp
jnp
push
add
cltd
inc
pop
inc
outsb
pop
mov
mov
add
bsr
cmpsl
jge
stos
sarl
imul
xchg
int3
hlt
sub
dec
int
inc
daa
sbb
in
dec
addr16
outsb
nop
sub
addr16
leave
test
jge
sub
std
notl
xchg
add
clc
xchg
mov
sbb
ja
mov
into
sbb
fisttpll
das
sbb
adc
pop
aad
jl
mov
sub
jmp
test
push
sub
xor
or
jno
das
fwait
ss
enter
xor
sbbb
shlb
stos
jb
pusha
mov
xchg
cmp
pop
out
adc
stos
fcomi
lea
xchg
xchg
out
push
sbb
divl
mov
cltd
shll
jmp
dec
or
insl
arpl
or
repnz
push
in
out
ljmp
fnstenv
mov
jns
lods
pop
mov
movsb
or
mov
mov
mov
jae
jns
xor
inc
jmp
leave
pop
jle
leave
or
in
faddl
shrl
stos
gs
inc
cltd
mov
test
rsm
push
push
fbstp
jno
push
add
cmpsl
push
mov
daa
arpl
mov
mov
mov
repz
sub
js
lea
jns,pn
js
mov
pushf
stc
sbbb
lret
insl
inc
cld
inc
jle
xchg
dec
xchg
and
jge
cmp
lea
and
push
add
sub
mov
fnstsw
mov
mov
cli
in
or
or
push
ss
arpl
insl
lods
push
adc
push
xor
sahf
lock
add
jmp
lret
push
gs
test
ret
mov
xchg
mov
sbb
orb
les
mov
sbb
push
mov
repnz
std
cmpsb
mov
stos
fsubp
mov
cmp
movsb
pop
xchg
jnp
out
pushl
sti
xor
cmp
int3
call
std
mov
leave
fcoml
adc
ljmp
lods
in
and
and
xchg
and
push
xor
std
cmp
in
testb
rcl
repz
mov
fisubl
test
mov
or
ja
negl
loope
movsl
cmp
xchg
lods
jbe
hlt
mov
push
sub
pusha
fisttpll
push
nop
movsl
adc
out
cmp
call
mov
scas
push
int
dec
ljmp
cmc
jp
and
mov
xlat
add
adc
call
pop
and
mov
lds
icebp
pcmpgtb
nop
sti
iret
xor
pop
cmp
mov
pop
adc
xorl
scas
lret
mov
jmp
sub
xlat
dec
gs
push
call
jns
push
add
jl
mov
test
shl
or
dec
xor
sub
add
mov
sbb
xchg
xchg
add
shrb
mov
and
out
jns
xchg
pop
shrl
shlb
sub
dec
scas
pushf
push
push
add
pop
inc
and
lahf
enter
mov
mov
mov
dec
mov
lods
sub
push
xchg
dec
insb
aaa
xor
inc
pop
mov
cwtl
fdivrs
in
js
xor
xchg
add
faddl
out
push
mov
inc
push
out
pop
insb
sahf
pop
xor
adc
in
jge
jb
leave
push
cmp
lret
mov
mov
out
sub
dec
add
cmp
xchg
cltd
pop
mov
test
pusha
jbe
lods
out
push
dec
adc
jno
and
jo
sub
sub
fcoml
and
xchg
fst
popa
pop
mov
mov
fwait
add
adcb
arpl
mov
wbinvd
cld
inc
xchg
mov
iret
adc
dec
add
hlt
es
push
insl
pop
arpl
lcall
in
adc
push
rorl
ret
test
or
sbb
sbb
jno
jge
mov
pushf
ja
or
jle
sbb
pop
sub
loope
inc
mov
dec
jnp
rclb
ret
mov
xchg
aaa
je
inc
pop
jge
sub
into
js
mov
pop
mov
fistpl
cmp
or
test
shrb
push
xchg
clc
mov
fisubrl
mov
test
sbb
mov
mov
sbb
mov
decl
je
enter
mov
popf
outsb
aam
and
cwtl
or
or
pop
sub
and
mov
mov
mov
mov
arpl
nop
rcr
pop
add
inc
xlat
sub
push
inc
inc
hlt
popl
xor
add
cmpl
lcall
mov
sub
push
fcmovnbe
cs
jbe
outsb
mov
inc
and
idiv
cld
bound
cs
les
push
into
test
mov
arpl
push
sub
mov
mov
adcb
ret
xor
in
jnp
xchg
ljmp
push
xchg
sbb
sub
inc
int
orl
sub
cmpb
mov
cmc
in
stos
repnz
subl
mov
lret
int3
cmpsb
jne
out
insl
lahf
adc
push
sub
out
in
mov
pop
movsl
jmp
lods
mov
push
inc
push
test
daa
push
sti
mov
shll
cld
pusha
das
mov
lcall
rorb
pop
dec
ds
and
lock
cmp
xchg
cs
inc
inc
loop
pop
imul
adc
cld
leave
dec
jnp
ja
testb
lods
mov
std
stc
and
fld
dec
js
add
mov
inc
jmp
fmull
or
movsl
clc
scas
loop
push
push
daa
xor
pop
into
or
or
dec
lret
psrad
push
xchg
stc
inc
popf
and
dec
aad
test
adc
jns
aam
ljmp
jg
rcl
imul
data16
cmpsl
adc
cmpb
push
add
dec
and
inc
ret
orl
cwtl
fstl
sarb
dec
je
cld
jp
and
ljmp
hlt
push
dec
xor
pop
sub
jmp
mov
ret
bound
popf
arpl
clc
fs
or
out
and
fwait
add
jmp
adcl
shll
push
gs
fsubl
cmpsl
fwait
adc
lods
jns
or
mov
jmp
mov
add
mov
sub
lds
mov
inc
adcb
cmp
bound
stos
cwtl
sub
data16
inc
pop
adc
fimuls
or
push
jo
jo
data16
and
or
push
vmread
ds
int
pop
loopne
sbb
jbe
mov
and
or
mov
or
in
loop
push
and
fstl
pop
mov
fstpt
stos
fbld
dec
dec
sbb
data16
xorl
or
stos
rorb
addr16
sub
arpl
mov
mov
add
xchg
iret
xchg
or
ret
inc
fiadds
rolb
cli
dec
test
and
lea
popa
sub
test
icebp
lret
mov
push
mov
test
sub
imul
inc
lock
pushf
mov
or
xor
push
mov
pop
jnp
push
jge
pushf
cmp
push
cmpsl
es
sbb
test
scas
add
pusha
inc
les
adc
jl
add
aad
mov
mov
sahf
insb
xchg
cltd
pusha
lods
out
shrl
push
add
sbb
mov
mov
aaa
fbld
pushf
push
sbb
dec
pop
mov
xchg
fwait
mov
adc
xchg
push
fistps
sbb
loopne
push
sub
and
and
cmp
push
out
inc
cltd
inc
push
in
pop
jns
lcall
aad
adc
out
jge
subb
xor
mov
mov
mov
shrb
inc
mov
jae
push
cmp
xor
andb
icebp
orl
adc
mov
out
push
lcall
jge
in
jecxz
add
js
lret
or
jns
lods
int
in
ret
imul
inc
cmpsl
xor
cld
lret
cmpb
aas
fsub
xchg
jecxz
inc
out
call
pop
lcall
push
xchg
cld
push
mov
mov
or
int
sub
out
lock
rcl
mov
sub
aaa
push
outsl
scas
xchg
lahf
fists
stos
inc
adcb
inc
loope
mov
in
cli
das
loopne
pop
fdivs
repz
push
and
mov
xor
adc
pop
cmp
jl
fidivs
ds
cmp
mov
xor
mov
pop
mov
push
outsl
andl
add
test
dec
dec
mov
sub
imul
les
les
pop
test
loopne
fsubrp
imul
sbb
daa
cmpsb
fwait
dec
ljmp
xor
sbb
or
sbb
je
in
loope
lods
adc
adc
sbbl
mov
pop
mov
lods
bound
pushl
std
repnz
imul
add
movsl
add
into
cli
ja
js
mov
jg
sbb
mov
push
std
dec
and
mov
loope
mov
or
mov
adc
xchg
or
xchg
push
loopne
dec
jle
xchg
jbe
nop
rolb
xor
ja
add
fisubs
daa
xchg
sbb
aam
aad
popa
inc
cmp
xchg
inc
stos
in
or
push
pop
cmp
cmp
cmp
push
iret
xor
xor
and
sti
cmp
adc
jae
mov
arpl
xor
push
fcmovbe
lahf
movsl
test
pop
leave
mov
aaa
data16
fisttpl
movsl
sbb
fisttpll
xor
mov
inc
lret
dec
pushf
dec
ret
or
mov
insl
xchg
test
jbe
ja
cmc
sbb
adc
mov
ficoml
push
shrb
clc
lret
aam
clc
stc
push
flds
push
inc
stos
addr16
icebp
or
sub
hlt
jl
aam
push
mov
lods
jb
icebp
ljmp
add
pusha
jle
adc
imul
js
pop
push
xor
and
gs
cmp
pop
sbb
fcomip
or
pop
je
mov
or
mov
mov
cmp
adc
in
lcall
add
gs
cmp
cmpsb
push
ds
adc
call
mov
ja
inc
xor
js
stos
inc
orl
jno
xchg
js
mov
jns
pop
mov
nop
sub
dec
in
or
mov
outsl
pusha
push
fcomps
pop
ja
adc
arpl
cmp
jmp
mov
es
filds
stos
lret
sbb
mov
shll
push
fldt
mov
cmp
scas
push
aas
or
xlat
les
sbb
dec
inc
sbbl
addr16
mov
xchg
faddp
shrb
scas
aad
xchg
addb
jl
dec
fs
sub
push
sahf
imul
xor
aad
xchg
mov
repnz
test
std
inc
jae
sbb
out
sbb
push
push
shll
test
and
adc
bound
jmp
push
aas
scas
ret
les
jmp
pop
inc
lret
ss
push
inc
push
imul
scas
ja
mov
push
test
dec
jae
xor
sub
sbb
cltd
cmp
mov
leave
cmp
in
xchg
xchg
xchg
nop
push
lret
inc
xchg
movsb
push
cmp
int3
xor
negl
push
icebp
mov
mov
mov
xchg
fcompl
push
push
push
and
sub
mov
mov
cmpsl
addr16
add
and
inc
fisubrl
mov
enter
and
jno
andb
push
mov
bound
push
cli
mov
in
pop
adc
or
mov
mov
inc
inc
inc
xchg
inc
jo
sub
subl
movsb
sbb
imul
fbld
call
sarl
inc
aas
sbb
mov
insb
xor
adc
in
or
outsb
scas
cli
mov
ss
inc
inc
inc
dec
xchg
les
out
push
leave
cltd
cltd
mov
daa
outsl
out
in
orl
popf
mov
iret
sbbb
movsl
add
adc
dec
pop
nop
out
xchg
xchg
push
mov
sbb
fistpll
scas
or
les
call
test
inc
movsb
lret
pop
aam
add
xchg
mov
std
jg
icebp
cli
or
lcall
jl
test
lds
test
pusha
add
loopne
add
mov
jle
jns
cld
mov
js
es
shlb
insl
popf
lea
jo
imul
subl
mov
push
fdivrs
add
or
pop
sbb
mov
push
push
subb
lds
mov
pop
test
jae
mov
fsubl
cmp
movsb
rorl
pop
sbb
xor
mov
andl
jl
jo
or
jg
pop
test
xlat
push
sbb
lea
cmp
xchg
dec
fdivr
mov
daa
xchg
mov
xor
xorb
add
sub
push
cmp
scas
and
in
jnp
loope
add
leave
push
aam
scas
cltd
adc
hlt
xchg
lds
fbstp
mov
inc
xorb
jg
jo
les
sub
add
xchg
fisttpl
lds
add
jp
ja
or
jo
push
pop
pop
fnstsw
loopne
pusha
cmc
dec
cwtl
in
aad
push
add
hlt
daa
lcall
mov
stc
lret
jp
sbb
aam
xor
icebp
adc
sbb
add
sub
das
lock
in
in
sub
cmpsb
xchg
adc
push
mov
test
les
inc
ret
insb
insl
adc
fistl
inc
xor
stc
jp
jnp
out
popf
movsl
mul
adc
inc
punpckhdq
adc
out
xorb
test
fistpll
jmp
sub
lahf
cltd
and
call
and
inc
cmp
dec
fldl
sti
xchg
mov
mov
data16
sti
adc
pop
icebp
and
jno
andb
jae,pn
sahf
je
orl
mov
lcall
jg
jge
insb
xchg
jmp
and
in
sub
rcrl
mov
daa
mov
rcrl
mov
mov
dec
mulb
mov
adc
mov
dec
into
sti
fistpll
jl
xor
imul
pushf
sub
xor
jecxz
dec
sbb
pop
in
adc
pop
rclb
dec
xchg
inc
dec
js
popf
lds
pop
xor
adc
and
lret
add
sahf
pop
pop
scas
fstps
les
lods
fadds
stos
test
sar
pop
sarb
jo
or
outsb
fdivr
ja
add
mov
add
cs
push
popf
mov
xchg
xchg
and
cmc
mov
and
cmove
lret
in
gs
add
pop
cmpsl
jmp
mov
xorl
lea
jge
mov
cmpsb
stc
mov
or
or
in
mov
mov
loope
mov
je
xchg
shlb
xchg
jno
pushf
out
lock
iret
lods
sub
inc
mov
adc
sbb
ret
ret
mov
mov
inc
pop
shl
xchg
daa
lds
cli
pop
xor
mov
pusha
leave
out
cld
imull
pusha
jne
push
fdivs
movsb
jle
cmc
cs
or
scas
mov
test
mov
mov
js
mov
xor
rcrb
dec
insl
dec
mov
popf
in
mov
cli
insb
add
push
stc
jp
sbb
push
mov
jns
rcrb
test
ja
in
scas
out
push
jnp
adc
addb
int3
shlb
test
push
dec
xchg
dec
jp
add
sub
ret
mov
in
es
inc
les
adc
lds
jecxz
call
mov
pop
mov
push
mov
call
inc
jecxz
es
mov
inc
popf
mov
lods
push
lea
sbb
cs
iret
shl
cs
daa
sub
adc
ret
fdivrl
mov
push
jmp
arpl
dec
pop
inc
outsl
pop
xor
sub
aaa
mull
xlat
pop
sbbl
jecxz
adc
push
cld
in
out
popf
push
xchg
xchg
jp
pop
adcb
ja
rorb
pop
sti
test
sbb
insl
sbb
inc
pop
mov
lea
jno
push
cli
mov
dec
adc
pop
adc
fcoms
shlb
xor
mov
mov
push
sbb
cmp
mov
insb
adc
mov
test
js
xor
das
or
add
notb
jb,pt
lds
sbb
mov
jecxz
shr
push
and
scas
pushf
movsb
or
pop
mov
add
les
dec
push
inc
lds
roll
imul
or
test
push
lock
cwtl
pop
popf
in
pusha
jp
adcb
enter
dec
mov
sub
lea
sub
arpl
iret
xchg
xchg
mov
mov
cld
out
xor
orps
into
jge
mov
ljmp
orl
add
mov
xorb
sahf
inc
mov
or
pushf
push
inc
insl
jl
stos
and
rcrl
cmp
lea
out
jge
cmp
adc
popa
hlt
xor
mov
mov
mov
fstps
pop
pop
hlt
sbb
cmp
inc
xor
jle
ja
push
int3
adc
push
lcall
fucom
jp
inc
jg
dec
loop
push
lret
mov
mov
jb
xor
sbb
test
hlt
sbb
pop
pop
nop
push
ss
sbb
push
pop
push
and
sbb
shl
out
stc
adc
push
pusha
jns
mov
loope
rolb
sbb
ret
push
xor
mov
inc
test
xchg
mov
xchg
ret
decb
dec
jp
cmp
xor
add
call
testb
fisubrs
fnsave
les
jae
and
add
xchg
and
dec
or
shufps
adc
xor
sahf
push
jae
inc
fcoml
adc
cli
xor
jb
or
test
test
mov
push
jl
pop
fistps
inc
adc
cli
icebp
push
sarl
out
mov
push
mov
or
push
sub
fcmovu
ljmp
outsl
pop
idivb
cmp
push
inc
sahf
inc
add
pop
inc
cli
push
or
in
in
add
mov
pusha
icebp
ljmp
leave
xor
imul
pop
out
test
insb
pushf
sub
iret
push
jae
pop
out
aam
push
cli
dec
push
stc
cld
testb
xlat
sbb
ficompl
out
nop
loope
enter
cmp
sahf
call
shlb
mov
je
aad
cs
hlt
xchg
mov
ret
or
sahf
jbe
push
fwait
mov
ds
adc
cltd
cmp
jae
mov
cmp
pop
add
mov
movsl
fwait
xor
cmpb
push
pop
and
xchg
push
outsl
mov
add
cmp
ds
adc
pop
das
add
mov
aas
mov
cmp
dec
push
push
pop
loopne
test
repz
sub
pop
in
jbe
shrb
inc
xchg
xchg
jecxz
stos
paddsb
scas
mov
jge
pusha
and
aaa
fistpl
aam
fisttpll
mov
lds
dec
out
and
xchg
and
push
mov
pop
lret
adc
sbb
jl
and
mov
scas
aam
xchg
in
ljmp
jg
or
in
fcmove
adc
mov
shr
jne
inc
cli
or
pop
cmp
push
jmp
movsl
rorb
xor
pop
pushf
jns
int
dec
cmovbe
and
cli
cmp
push
adc
push
roll
popa
xchg
gs
push
mov
push
sub
jno
hlt
icebp
fbld
insb
rorb
ret
or
loopne
pop
test
or
pop
sbb
mov
testb
aad
fdivr
fwait
das
aas
inc
pushf
cmc
dec
repz
int3
push
rorb
xchg
pop
or
rorb
test
test
test
jle
gs
clc
scas
pop
push
xchg
stos
rcr
fcmovnbe
jno
inc
jg
aas
inc
xorb
lock
mulb
vmovdqa
jns
xchg
cld
or
pop
jo
daa
jmp
xchg
jbe
scas
adc
test
jne
aaa
cwtl
popa
shrl
addl
jns
xchg
cmp
into
push
daa
fsubrs
push
cmovno
ds
mov
fdivrl
mov
iret
mull
add
stc
fwait
rorl
enter
loopne
xlat
xchg
cmpb
mov
imul
cmp
add
xlat
sbb
sub
aaa
mov
stc
movsb
mov
xchg
pop
fstl
jmp
test
int
in
mov
nop
jb
cmp
push
push
arpl
or
adc
sbb
repnz
push
add
inc
sub
andl
jge
insb
lods
pcmpeqb
adc
stos
mov
fidivrs
mov
push
lcall
test
stos
cmp
and
inc
pop
cltd
popa
inc
jl
mov
pushf
inc
xor
cmp
shlb
in
roll
xor
mov
jb
jne
and
pop
icebp
cld
je
mov
jmp
or
mov
sub
lcall
subl
pop
mov
pop
repz
cmp
pop
push
adc
fists
and
jns
mov
imul
adc
repnz
cld
popf
cmc
in
add
addr16
mov
das
push
or
add
cwtl
fnstsw
stc
cs
inc
movsl
mov
push
test
jp
in
dec
cmp
mov
push
sub
int
sub
push
cmp
and
sbb
push
movsb
push
pop
jne
xchg
int
sbb
lea
setle
mov
dec
cltd
orl
pusha
es
orb
repz
or
pop
outsb
pop
xchg
repz
loope
add
sti
adc
shrl
xchg
jp
add
jecxz
sbb
adc
jo
jecxz
gs
pop
xor
or
test
mov
bound
dec
jle
lods
data16
cmp
sarb
les
ret
pop
sbb
xor
vmovdqa
aas
sub
xor
imul
mov
and
xorb
pop
pushf
adc
sahf
or
enter
cltd
into
pop
jb
jne
cld
dec
imul
andb
cmp
mov
mov
pop
fildl
jmp
popf
inc
cmp
pusha
inc
jbe
mov
jns
loopne
fs
push
cmp
inc
outsb
push
xchg
or
push
mov
mov
cmp
je
push
mov
xchg
mov
dec
xor
sahf
mov
jmp
and
pop
jbe
pop
fistps
dec
xor
jmp
cmp
and
repz
out
or
test
push
pop
cltd
adc
mov
test
dec
cmc
xchg
push
add
es
aas
mov
cwtl
movsl
cmp
mov
inc
stc
and
inc
aaa
push
stos
dec
or
cmp
imul
test
or
jne
inc
jl
pushf
mov
outsb
mov
orb
dec
outsl
lret
mov
cmpsl
inc
inc
bound
mov
dec
push
movsl
in
or
std
add
sbb
out
cwtl
pop
sti
subb
in
ret
scas
sub
test
das
mov
lods
adc
loopne,pn
and
scas
sub
repz
or
cwtl
dec
je
xchg
jge
inc
gs
mov
ljmp
icebp
bound
cltd
icebp
enter
ret
jnp
jmp
imul
mov
ljmp
and
mov
push
imul
fsubrl
push
or
xchg
aad
jb
xchg
pop
lret
into
loopne
sub
insb
movsb
adc
or
pop
inc
cli
fprem
fists
fmul
fsubrl
or
out
jmp
rorl
adc
sahf
clc
and
lahf
xchg
js,pt
sub
into
push
pop
jbe
push
call
dec
nop
inc
pop
add
outsl
fisubs
or
fsub
and
lods
je
inc
dec
mov
dec
sub
hlt
mov
test
pop
subb
and
xchg
xchg
cmp
lods
dec
and
lods
arpl
add
loope
xchg
sbb
jmp
scas
xchg
dec
jl
out
xor
nop
xchg
stos
lret
into
jmp
cmpb
fisubl
rclb
xchg
xchg
lcall
inc
fisttpll
inc
dec
mov
lahf
shr
cmpsb
sub
push
imul
sahf
jbe
dec
js
jmp
jne
cltd
aad
fidivrl
das
cmp
inc
call
ret
sbb
stos
mov
enter
sbb
leave
iret
jne
pop
pusha
jo
push
mov
loope
nop
int
xor
sub
xchg
dec
cwtl
shll
mov
icebp
cmpsl
pop
mov
mov
mov
push
jle
mov
out
add
xchg
add
mov
les
sub
xchg
and
add
test
into
xorl
xchg
mov
inc
aaa
push
jle
cwtl
jecxz
pop
inc
pop
arpl
fiaddl
mov
hlt
je
addr16
fadd
in
push
and
inc
dec
jp
popf
cmp
cmp
xchg
xchg
filds
int3
int3
sub
inc
cmp
fmull
mov
popa
mov
cmpsl
sub
mul
mov
sbb
movsb
dec
xor
and
push
in
mov
sbb
pop
std
test
insb
cs
push
cmpsl
fildl
add
push
mov
gs
ja
fldenv
mov
pop
inc
pop
ljmp
mov
repz
add
imul
in
jg
lods
cmpsb
lret
xlat
imul
mov
ret
loopne
call
mov
testb
push
mov
cmpsl
sahf
mov
aas
sub
pop
jmp
ja
js
xchg
xlat
shrb
and
lea
cmpsb
sbb
sub
mov
push
or
pop
lock
in
fmull
rcr
cmp
adc
shr
sahf
xchg
cld
daa
jo
rcrl
jno
adc
cmp
add
inc
jb
jle
popa
loopne
bnd
mov
mov
andb
shl
push
divl
push
jl
out
mov
jg
mov
lods
ss
mov
pop
pop
sbb
ss
mov
cli
rcrb
jno
daa
cwtl
jmp
repnz
adc
dec
mov
push
out
jecxz
dec
pop
push
into
stos
inc
lock
in
pop
jp
xor
cmp
or
cld
push
jae
lret
cmpsl
data16
cs
test
xchg
lds
xor
scas
sti
movsb
and
imul
push
cwtl
xchg
xchg
jg
das
insl
arpl
and
and
push
movsb
sub
jnp
popa
mov
inc
test
movsb
arpl
popa
icebp
inc
add
mov
jae
cli
jb
mov
sti
pop
dec
pop
jmp
int
jno
xor
jbe
test
mov
out
dec
jmp
hlt
scas
pop
push
cmc
or
sub
in
stc
or
and
pop
bound
loop
jb
xchg
test
mov
jmp
mov
cmp
mov
aaa
in
mov
insb
xchg
test
cmp
leave
inc
xchg
in
das
es
or
movsl
xlat
mov
push
pop
out
pop
xchg
fcompl
pop
das
pop
in
inc
jne
sub
xlat
ljmp
mov
push
inc
out
in
lock
push
repz
push
stos
test
pop
sahf
test
mov
inc
orb
or
inc
icebp
adc
in
xchg
push
bound
and
insb
dec
lahf
hlt
jmp
xor
cmpsl
push
imul
dec
pushf
mov
data16
sbb
scas
test
test
lret
push
jmp
aaa
or
or
push
addl
cmp
lcall
mov
sarb
and
lret
mov
sbb
hlt
dec
in
adc
mov
pop
stc
mov
push
gs
iret
dec
loope
ret
mov
out
lods
stos
jns
int3
je
xchg
adc
cmp
loopne
fisttpll
sbb
mov
adc
xor
cmp
repz
xor
pop
adc
xor
addb
cmpsl
shl
xchg
movsl
fwait
das
test
jecxz
lahf
cmp
mov
sub
push
push
call
adc
stos
xor
dec
adc
add
cmp
and
mov
loope
fs
xor
inc
daa
adc
mov
in
adc
pop
pop
dec
lret
xchg
std
imul
aad
inc
hlt
loope
cwtl
push
sub
xor
cli
push
xchg
push
dec
stos
add
jmp
gs
mov
nop
cld
fsqrt
xor
adc
sti
sbb
dec
dec
mov
pop
add
out
leave
stc
inc
ret
shrb
mov
add
jnp
sbb
fidivl
cmp
cmp
nop
mov
ss
jmp
ljmp
or
adc
cmpsb
inc
mul
pop
stos
sbb
xchg
popf
or
pusha
or
jmp
popa
jnp
setb
sbb
add
scas
adc
shrl
inc
ret
aam
cltd
add
jnp
pop
inc
sub
xchg
jge
and
in
jmp
xchg
or
stos
pop
dec
jp
into
addl
jg
or
sbb
stos
imul
in
or
push
push
loopne
sbbb
mov
push
or
ds
enter
push
out
push
lds
xor
orl
inc
xor
lods
into
mov
in
repnz
stos
mov
mov
fidivs
aas
xor
push
cld
shl
lock
sbb
xchg
mov
mov
lods
ss
sub
test
adc
mov
fwait
call
add
mov
pushf
test
sub
das
and
push
xlat
ret
loop
jne
or
sbb
enter
and
lret
pop
sarb
in
sti
sub
fistl
mov
aad
jb
xchg
daa
cmc
nop
add
xor
cmc
imul
mov
sti
and
out
mov
sub
xchg
dec
fisttpll
lret
xor
or
pop
cmp
nop
sub
xorb
repnz
cmpsl
push
lret
lock
shl
repnz
int
cmp
xor
into
stc
and
jmp
cld
aad
jno
hlt
sub
xor
adc
gs
pop
or
push
mov
outsl
xor
out
mov
cli
fbstp
xor
dec
in
faddl
xchg
ret
cmpsb
jno
add
inc
shlb
outsl
lock
jae
fdivrl
xchg
adc
mov
xchg
stos
es
and
mov
jmp
scas
into
repnz
dec
xor
push
xlat
and
pusha
adc
aaa
pop
mov
or
jg
sbbb
xor
adc
xor
popf
or
gs
leave
es
sub
outsb
mov
loopne
lods
mov
cs
arpl
sub
into
sbb
int3
iret
repnz
inc
sub
rcll
aad
jle
iret
pop
adc
lds
iret
push
push
bound
es
into
cltd
inc
sub
add
clc
call
push
shrb
loop
mov
sti
mov
adcl
xchg
jnp
push
incl
enter
loop
dec
ja
repnz
cmp
xor
mov
pop
call
arpl
lods
movb
hlt
rcr
jmp
pop
fistl
lods
rcrb
xchg
imul
push
cmpl
xor
jnp
cld
shl
dec
cwtl
mov
push
fs
decb
mov
push
inc
pushf
and
pop
pop
inc
sbb
mov
out
adc
xor
pop
pop
fdivs
lret
xchg
push
rcr
lods
jbe
dec
and
dec
push
ror
scas
and
jle
cmpsb
rcr
jb
pop
pop
cmp
xchg
jno
pop
jecxz
sbb
cli
and
or
mov
xchg
roll
insl
jae
dec
and
cmp
negb
push
test
or
jmp
outsl
push
cmpsb
sub
add
movd
push
dec
icebp
cli
fs
push
cmp
div
es
hlt
popf
mov
or
fwait
sub
sbb
push
adc
sub
shl
xchg
push
sarl
ret
dec
outsl
dec
push
fwait
call
cmp
xchg
and
sub
je
xor
das
movsb
dec
fdivs
sub
jp
mov
fisttpll
adc
mov
in
mov
lahf
cmpsb
jne
inc
jge
fldt
rcrl
pop
std
xlat
or
daa
js
aam
mov
xchg
mov
js
lods
stos
mov
mov
adc
pop
ss
inc
std
inc
mov
mov
filds
fs
xor
add
xchg
pop
shll
notl
lods
cmpsl
and
repz
add
hlt
mov
movsb
push
arpl
jo
rorb
in
jne
jge
adc
jno
lods
xchg
ret
and
mov
add
inc
push
inc
fsubp
add
in
xchg
push
dec
fdivs
fs
adc
repz
adc
mov
cmp
pop
fstps
inc
sub
xchg
daa
outsl
sbb
cmc
imul
jns
jnp
mov
inc
notb
je
and
dec
cli
popa
es
cmp
imul
pop
lods
pop
sub
jmp
icebp
inc
mov
fwait
movsl
fidivs
jl
xor
xchg
jmp
push
jmp
addr16
pushf
cltd
add
cli
push
data16
mov
cmp
test
pop
adc
fs
jmp
and
lahf
in
push
sub
adc
fistl
js
dec
jb
les
mov
push
shlb
cmp
ljmp
sbb
sarl
sbb
int
movsb
or
dec
sarl
jns
inc
inc
adc
out
in
push
fwait
mov
test
pop
pmaxsw
lea
xchg
mov
cld
lock
cmp
jmp
mov
add
adc
scas
or
call
sbb
lret
adc
aam
lds
or
sbb
or
lock
jle
jmp
int3
pop
pop
sub
cli
push
jmp
jle
or
sbb
popl
jge
stos
and
mov
std
xchg
out
dec
les
jae
jne
test
cmpsb
jnp
aad
jno
jecxz
jle
stc
cmp
xor
in
aad
aas
out
dec
ja
inc
outsb
imul
pop
invd
sub
sub
shlb
int
int3
push
or
div
xchg
fstpt
inc
push
outsb
inc
shrb
jmp
js
lret
xor
mov
testl
fmul
rclb
jns
in
loopne
sbb
and
jno
fsts
jmp
add
ret
pop
jecxz
fbld
xor
pop
jl
adc
sub
cmpsl
adc
push
lret
in
adc
flds
hlt
arpl
mov
push
sar
in
fiadds
fsubrs
ljmp
pop
fcompl
jb
subl
jg
mov
push
xchg
xor
ljmp
jl
add
sub
pop
xor
lock
dec
sub
loop
sub
sahf
incl
mov
push
mov
pushf
hlt
inc
and
and
add
int
divb
iret
cmp
maxps
or
pop
push
or
jle
rorl
or
in
pusha
mov
adc
scas
and
imulb
outsb
adc
and
mov
daa
xchg
sbb
loopne
cltd
add
mov
scas
add
pop
lock
xchg
dec
dec
test
das
xchg
or
ror
adc
adc
jnp
fwait
enter
push
iret
std
dec
push
daa
inc
shlb
jge
pop
cs
sbb
bound
push
cld
les
fbld
mov
lock
loop
scas
pop
or
sbb
push
inc
sahf
aas
ss
clc
sahf
hlt
insl
cwtl
stos
sub
mov
or
dec
xchg
jbe
das
pop
mov
cmpsb
stc
xchg
jl
or
add
jg
testb
mov
cmp
mov
pop
les
pop
cmp
addl
ds
sbb
push
mov
addl
mov
and
fucom
sbb
enter
dec
mov
lret
mov
cltd
es
lret
push
in
lret
mov
mov
xor
out
push
push
scas
call
sbb
xchg
push
xor
sub
lcall
inc
sbbb
xor
lds
sti
mov
xchg
adc
dec
pusha
push
outsb
popf
push
cmp
cmpsb
and
cmp
loope
push
aas
stos
lock
adc
iret
insb
out
out
orl
xchg
pop
push
cwtl
leave
cmpsl
mov
xchg
xor
loop
push
pop
mov
and
icebp
push
cmpb
faddp
mov
cmp
or
sbb
mov
jae
ljmp
cwtl
or
cmp
lret
cwtl
in
cmp
popa
cmc
out
jp
nop
scas
out
mov
xchg
sarb
sti
jmp
pop
jnp
and
shll
stos
or
dec
cs
cmp
aaa
out
call
cmp
nop
dec
loop
ret
out
popa
lret
aad
fstps
loope
sub
in
fucomp
jl
mov
sbb
loop
cli
mov
loop
arpl
and
loopne
sbb
xor
scas
dec
cltd
mov
xchg
xchg
and
cld
icebp
andb
sub
mov
dec
sbb
jbe
mov
mov
clc
data16
sbb
xchg
and
cmc
cwtl
pusha
data16
stc
iret
in
loop
jae
mov
stc
or
mov
and
aad
dec
xor
in
sbb
pushf
fdivrp
arpl
add
dec
iret
movsl
outsb
add
outsl
lea
and
mov
xchg
mov
xchg
rdmsr
jb
fiaddl
pusha
mov
je
pop
bound
lock
andl
push
mov
into
test
push
lock
jecxz
mov
subl
and
or
iret
jae
xchg
fisttpll
imul
and
and
aas
fucomip
stc
test
jmp
pop
mov
out
jl
clc
mov
out
call
and
cmc
mov
popf
adc
popf
dec
jp
pop
in
stos
enter
jno
ss
sti
add
cmp
hlt
adc
dec
cmp
pop
or
in
xor
jmp
loopne
popf
adc
in
dec
and
adc
sbb
mov
shl
popa
dec
sbb
popa
sbb
sbb
shrl
cmpsb
ret
scas
dec
mov
or
mov
jae
andb
push
repnz
jb
push
das
ret
push
or
jge
push
loop
dec
aad
jno
push
push
call
test
pusha
je
pop
jb
push
adc
pusha
notb
jae
test
pop
pop
andb
loop
fwait
push
ljmp
sbb
push
cli
leave
fcmovb
push
cmpsl
or
fwait
push
fwait
adc
aam
xchg
sbb
sbb
ljmp
fadds
xchg
in
jnp
pop
cmp
imul
inc
ss
in
mov
repz
jne
and
mov
imul
mov
inc
pop
mov
mov
int3
cli
icebp
and
adc
mov
xor
sub
mov
inc
and
ljmp
xchg
or
or
aaa
xor
sarb
pop
jns
mov
adc
loopne
scas
jnp
aad
out
js
gs
push
arpl
push
shrb
mov
pop
mov
jbe
and
pop
scas
mov
pop
cmp
mov
add
addr16
mov
iret
in
ret
test
data16
jns
loope
ja
movl
cmp
rcrb
push
or
adc
cltd
outsl
adc
mov
mov
pushl
divb
aam
js
cmpxchg
xor
push
aam
bound
jl
add
adc
pop
movsb
arpl
outsb
popa
cwtl
sti
loopne
jle
lret
out
or
push
addr16
mov
popa
fcmovu
dec
out
cmp
ret
xor
shrb
jge
mov
sbb
cs
lods
enter
or
push
stos
cmc
cmp
xor
cmp
orl
out
and
xchg
push
jmp
mov
lea
cmp
lock
sub
push
ret
jge
inc
lods
test
sub
xor
add
lods
mov
mov
and
fcomip
mov
cmp
sbb
lds
cmp
jne
repz
sbb
outsl
jecxz
jo
jnp
or
leave
pop
mov
out
in
lock
push
imul
pop
int
mov
or
cmpsb
cmpsb
ret
or
lock
dec
jp
iret
scas
jb
cmp
sti
mov
dec
inc
in
dec
mov
cmp
rorb
mov
dec
push
push
dec
push
push
loop
mov
mov
adc
stos
leave
adc
clc
out
push
jae
aam
ljmp
pop
test
xor
inc
and
fsubrs
sbb
out
inc
ret
sar
pop
cwtl
sub
lret
lahf
shlb
add
les
aad
lar
addl
mov
les
cmp
repnz
add
out
mov
cli
sbb
mov
divl
inc
sub
pop
push
mov
lods
loope
and
pop
pop
sarl
daa
in
das
in
mov
lahf
mov
aam
mov
repz
stos
scas
lods
lret
sar
jl
cmpsb
mov
push
push
and
or
int
movsl
into
cltd
xchg
clc
mov
xor
cmc
add
add
mov
and
cmp
es
cmp
sub
cmpsb
ja
jmp
in
test
cmp
cmc
xchg
movsl
pop
mov
xrelease
daa
insl
push
cltd
adc
fs
mov
ret
adc
adc
mov
aam
aam
add
jnp
rcl
call
inc
jbe
xchg
and
adc
fidivs
xor
jno
out
mov
mov
es
add
call
cmpsb
sbb
loopne
xor
nop
sti
jle
jge
ret
pop
push
push
xchg
aam
push
fcomps
addr16
pop
cmp
jl
inc
push
fucomip
fwait
lock
idivb
imul
cltd
push
pop
mov
xor
cmp
stos
cmp
mov
push
push
out
out
and
mov
fs
lret
cmp
popa
imul
outsb
inc
add
cmp
cmp
ret
neg
int3
popf
xor
lods
test
insl
call
mov
movsb
adc
or
add
ljmp
stos
or
in
arpl
jmp
push
dec
push
ret
jb
into
roll
xchg
or
lcall
or
xor
add
cmc
jb
pop
loopne
aad
imul
inc
cltd
or
sbb
inc
mov
pop
addr16
enter
add
inc
jnp
adc
aas
rclb
xchg
mov
xor
jge
cmpsb
in
pop
adc
mov
movb
jns
insl
pop
inc
jl
lret
cwtl
adc
scas
lods
xor
and
jbe
and
fisttpl
aas
jge
mov
iret
pusha
jmp
add
dec
je
hlt
mov
sarb
sub
inc
and
dec
out
sbb
jbe
lods
add
ficompl
xchg
repnz
ret
fwait
add
push
sub
in
pop
cltd
mov
or
adc
shlb
lods
iret
cmp
sbb
shl
dec
jp
enter
stos
mov
movsl
pop
hlt
jae
mov
es
mov
add
cmp
xor
and
and
mov
pop
mov
in
pop
cmp
int3
das
mov
mov
icebp
into
test
testl
std
fstl
mov
mov
add
or
adc
movsb
decl
dec
test
into
orl
cli
in
jns
adc
inc
and
iret
inc
pop
sti
pop
mov
lea
or
dec
mov
std
push
lret
sub
leave
lret
mov
or
cmpsb
and
xor
les
xchg
mov
sbb
stc
mov
daa
leavew
loop
inc
sbb
inc
fsubrl
lods
push
inc
push
cmp
int
dec
stos
scas
mov
shlb
xor
dec
xor
aaa
ss
pcmpeqb
dec
fists
jb
jp
scas
sub
pop
std
es
sbb
sahf
xchg
mov
fcmovnb
jecxz
repz
pushf
movsl
push
mov
lods
popf
lds
insl
pop
in
idivl
fsubrl
in
fiadds
mov
cwtl
stos
icebp
in
mov
cmp
or
push
testl
inc
or
sub
iret
xor
insb
pop
shl
add
cmpsb
out
adc
xor
or
sbb
sub
mov
mov
retw
lods
add
mov
or
add
mov
mov
mov
outsb
les
mov
add
and
dec
mov
fildl
das
out
and
inc
add
dec
fisttps
jno
int
ret
cmp
lea
and
sahf
push
leave
mov
adc
mov
test
pop
fnstsw
add
cltd
sbb
std
push
addl
sahf
insl
cmp
xchg
adc
sub
out
push
jl
outsl
adc
test
mov
or
insl
into
mov
jns
mov
stos
sbb
lahf
jmp
call
mov
jnp
and
aas
pop
popf
cmc
xor
fisubrs
roll
addr16
inc
std
mov
hlt
jecxz
cmp
cmc
cmpsl
cmpsb
sti
add
stos
adc
neg
add
scas
in
xchg
ss
sbb
repz
mov
cltd
mov
ljmp
add
mov
dec
adc
mov
cld
popf
push
mov
inc
mov
jl
dec
sub
xor
mov
imul
pop
or
jmp
or
stc
les
mov
ss
sbb
lcall
mov
cltd
out
adc
xchg
inc
lcall
jl
jg
dec
xor
xor
pop
stos
jmp
movsb
xchg
push
lret
jle
fnstenv
loopne
mov
fcmovnu
or
loopne
ja
cmpsl
je
movsb
das
nop
mov
lahf
xchg
xchg
scas
sti
lcall
mov
ljmp
or
imul
dec
or
inc
jne
data16
pop
je
test
imul
out
mov
mov
push
cmp
insl
cmp
popf
sub
cwtl
mov
pop
mov
js
mov
jecxz
daa
stc
dec
insb
mov
movsb
xchg
or
addr16
sub
xor
and
mov
xchg
sub
cmp
iret
out
loop
mov
lret
cmp
inc
ficomps
jo
movq
aam
imul
int
mov
lret
cld
sub
dec
xchg
scas
je
jnp
or
lods
jo
add
sbb
leave
adc
imul
aam
jl
or
jno
sbb
sbb
jg
in
xchg
sarl
or
mov
mov
int3
xchg
push
shrl
cmc
insb
pop
xchg
lods
testl
adc
mov
shll
inc
and
xchg
clc
test
sub
push
fsubl
jmp
test
pop
and
mov
mov
sti
jg
mov
push
imul
cmpsb
add
mov
push
popa
and
mov
cs
jp
or
es
cwtl
or
addr16
mov
cli
inc
jl
mov
movsl
pop
sysret
or
cwtl
inc
incl
mov
inc
call
adc
inc
mov
add
cld
dec
jle
xor
pop
rorb
push
mov
imul
lcall
clc
jmp
fsts
int
mov
popa
fyl2xp1
inc
orb
fs
push
jae
out
fcmovnbe
outsb
inc
aaa
addr16
adc
fs
xor
xlat
mov
mov
xchg
mov
aaa
in
loopne
jnp
stc
js
dec
push
push
test
add
mov
das
insb
jecxz
xor
lar
mov
sbb
lret
mov
xor
into
or
pop
mov
or
mov
jo
jge
shrl
outsl
xor
fsubrp
pop
decl
rcrl
inc
xor
pop
push
xor
push
out
rcrb
jbe
xchg
pop
ja
fldt
mov
xchg
xchg
stos
scas
mov
int
in
pop
adc
outsl
xchg
dec
inc
lret
ja
dec
pop
dec
sub
js
sub
cmp
lds
cmp
mov
jmp
xor
cltd
filds
mov
iret
push
and
rcrl
insl
xchg
in
sub
stc
push
jmp
dec
add
mov
xor
sahf
adc
nop
fwait
roll
ss
stos
mov
sbb
jp
sbb
jb
push
xchg
jle
andb
cmp
mov
int
lret
cmp
jl
sub
mov
and
lods
in
repz
mov
mov
ljmp
cmc
scas
xor
in
lcall
pop
dec
je
inc
adc
mov
xchg
fcmovu
in
imul
sahf
mov
mov
ljmp
jno
sbb
jmp
ljmp
insl
and
mov
cmpsb
jae
sbb
mov
add
int
clc
push
push
test
lcall
test
mov
xor
pop
fistpll
daa
adc
sub
lahf
fsubrl
inc
push
inc
push
xchg
repz
js
mov
and
js
lret
mov
fistps
cmp
addr16
imul
inc
xchg
and
cmp
ss
or
xchg
shlb
jle
incl
inc
jge
jmp
jle
dec
jbe
mov
insl
add
into
mov
add
ljmp
inc
or
adc
jecxz
ret
in
sbb
out
inc
cwtl
lock
fs
jae
scas
sbb
adc
pop
cmpb
dec
xor
neg
add
push
mov
mov
repz
out
pop
cltd
add
inc
mov
pop
pop
xchg
sub
sub
cwtl
adc
lret
jns
shrl
scas
fisttpl
js
xor
mov
pop
ficompl
sub
cs
mull
addr16
lock
or
mov
loopne
inc
stos
mov
int
ds
sahf
call
adc
mov
aaa
sbb
stos
imul
fwait
pop
cmp
jnp
add
push
xchg
dec
iretw
mov
cmp
cmp
xchg
in
mov
mov
jb
sub
cmpsb
dec
xor
popf
sub
jge
cmpsl
and
sarl
mov
inc
adc
pop
xchg
jne
jg
pop
xor
sti
lock
test
ret
pop
lds
jp
pop
xor
mov
stos
loope
pop
aas
filds
xor
sti
scas
cwtl
mov
imul
inc
mov
mov
into
sbb
ja
lods
mov
jp
add
add
mov
adc
das
in
loopne
xor
negb
test
outsl
dec
add
cmp
push
repz
jo
in
xchg
repz
fs
mov
or
in
pushf
mov
loop
mov
in
sub
shrl
sahf
in
addb
cmp
mov
sbb
adc
aas
jns
jne
and
sub
or
cmp
mov
jnp
push
push
jge
inc
xchg
mov
cltd
ss
std
pushf
je
pop
scas
movsb
call
rcl
jecxz
mov
add
and
adc
xor
and
mov
fwait
aam
mov
pop
mov
popw
fadds
mov
dec
mov
test
lcall
insb
rorl
sbb
add
mov
or
push
mov
xchg
inc
adc
cmp
icebp
flds
xor
dec
pushf
imul
addb
inc
inc
clc
sbb
movsl
cmpl
mov
push
popa
in
pop
test
dec
stos
jns
je
stc
mov
inc
cmp
cmpsl
jnp
scas
and
push
lret
popa
dec
push
out
jb
mov
or
mov
mov
lahf
and
outsb
mov
add
lods
inc
lock
adc
dec
and
scas
mov
repnz
mov
xor
dec
test
adc
dec
add
push
rclb
push
enter
push
sbbb
int
jmp
cltd
repz
mov
xor
sti
adc
mov
call
xchg
imul
mov
xchg
jne
mov
dec
mov
cwtl
out
aad
mov
pop
jb
addr16
ds
sbb
lea
mov
push
cmp
cmpsl
cltd
mov
movsb
add
out
lea
stc
push
add
mov
xor
rcll
and
pop
adcl
inc
add
in
pop
fbld
iret
jmp
sub
sub
dec
fstpl
and
addl
xchg
outsl
or
mov
add
sbb
push
dec
and
push
and
movsb
mov
addb
shl
ss
xchg
bnd
cmp
clc
in
rcl
cmp
mov
popf
lcall
and
inc
movsl
in
mov
cmp
pop
leave
inc
enter
scas
add
out
mov
stc
sti
and
cmp
xchg
dec
rorb
idiv
cmp
jmp
xor
repz
imul
lahf
repnz
and
cmpsl
adc
xor
outsb
ret
and
sbb
hlt
xor
sbb
mov
xor
mov
jle
or
aad
xchg
and
in
pop
sbb
repz
push
adc
int
pop
jmp
in
dec
adc
adc
cwtl
pop
rclb
dec
mov
sbb
pop
test
pop
sbb
xchg
mov
aam
add
popa
cmp
pop
gs
jecxz
sbb
dec
rclb
dec
outsb
dec
and
test
cld
lret
cmc
jge
adc
or
xchg
daa
or
xor
in
cs
dec
pop
mov
jno
mov
mov
repnz
and
pop
and
in
ss
outsl
cmp
sub
or
imul
mov
xor
ja
inc
les
mov
outsl
nop
pushf
cmp
scas
imul
cld
inc
xchg
pop
std
adc
stos
das
push
stc
leave
xchg
sub
mov
mov
push
pop
sub
add
inc
nop
pushf
or
push
adc
mov
sub
xor
cmc
lret
dec
sub
popf
lahf
xchg
jne
xchg
fdiv
sbb
enterw
xor
loop
test
cmp
jb
rcl
imul
sub
inc
orl
test
jbe
add
test
dec
xchg
and
xor
fwait
enter
push
sub
repnz
or
std
mov
rcrl
ljmp
imul
pop
bound
cmp
push
test
mov
pop
mov
pop
stos
add
test
dec
popa
mov
pop
ds
xor
jnp
loope
mov
hlt
pushf
test
xchg
ss
xor
sbb
gs
xchg
enter
sub
push
push
fisubrl
dec
dec
outsl
std
das
xlat
out
pop
lds
in
shl
in
xchg
outsl
repz
cltd
cmpsl
lahf
enter
lock
imul
bound
mov
push
mov
loopne
dec
adc
mov
jne
mov
testl
jg
jle
test
test
shlb
xchg
bound
adc
sbb
xchg
pop
or
in
fiaddl
cld
adc
in
pop
pop
pop
xlat
add
repz
loopne
in
les
or
shrb
sbb
rolb
adc
je
decl
push
cltd
addr16
subl
cmp
popf
sub
int
dec
into
add
imul
ja
sub
icebp
das
push
shlb
adc
push
cmp
cmpsb
cwtl
lock
cmp
xchg
dec
repz
orl
jo
lods
push
out
into
push
fistpll
std
iret
ror
lcall
xchg
in
add
push
xchg
cltd
jnp
fs
cli
pop
lock
out
loopne
jle
jp
insl
jo
orb
call
ss
mov
cmp
mov
clc
nop
inc
lods
mov
movsl
mov
test
dec
movl
add
xchg
sahf
xor
stos
jmp
xor
jp
jmp
cli
adc
sti
push
add
js
fisubs
jae
std
inc
mov
sbb
push
xorl
mov
inc
bound
jle
repnz
adc
loope
insb
fists
jle
in
fnstsw
jp
ja
jle
fs
mov
mov
bound
pushf
cld
popf
testb
insb
mov
dec
inc
ljmp
mov
aad
jne
negb
outsb
stc
gs
xchg
adc
daa
mov
mov
test
sbb
dec
or
jg
inc
mov
xchg
lcall
jae
push
push
int
mov
test
pushf
arpl
fistl
add
outsl
movsb
loop
lds
stos
lret
lds
cmp
mov
dec
push
icebp
addr16
adc
pop
scas
mov
sarb
fmuls
push
adc
aaa
pusha
insl
dec
or
movsl
sbb
out
pop
dec
cmp
ret
and
movsl
xchg
movsl
sub
xchg
jle
adc
pop
add
push
xchg
mov
pop
mov
push
fildll
dec
sub
fwait
cmpsb
add
pop
gs
jns
cwtl
daa
rcll
cld
mov
add
arpl
inc
push
rol
fidivs
sbb
jle
aaa
xchg
nop
fsubr
dec
outsb
lret
push
push
leave
mov
push
nop
mov
dec
daa
dec
sbb
js
fistpl
sbb
or
add
call
mov
xchg
cmp
scas
sbb
or
add
addl
out
outsl
scas
int
les
xlat
xchg
dec
mov
mov
cmp
ljmp
push
in
cmp
call
ljmp
push
popf
pop
and
dec
mov
lock
iret
mov
mov
ja
xchg
pop
cmp
orb
pop
xchg
vmwrite
xchg
cmp
cmpb
mov
mov
lcall
cld
rcrl
sahf
arpl
mov
xchg
or
mov
mov
dec
divl
stos
mov
imul
and
in
leave
jo
lahf
xchg
xchg
inc
nop
insb
sbb
pop
sbb
xor
ja
xchg
dec
mov
repz
stos
in
cmp
mov
pop
pop
aaa
pop
scas
dec
and
dec
mov
fcoms
out
sahf
cmc
fucomp
inc
bound
ja
nop
imul
iret
inc
inc
into
mov
xor
inc
lret
shlb
shrb
rcr
push
js
xor
xchg
adc
sahf
repz
and
aaa
mov
dec
jl
lahf
hlt
fnstenv
mov
in
cmpsb
mov
lods
jnp
iret
das
iret
pusha
popa
xchg
inc
fisttpl
jno
das
xchg
popa
pop
fisubrs
pop
hlt
mov
or
jb
ret
push
leave
fndisi(8087
insb
gs
add
adc
iret
popf
divb
pop
lcall
icebp
sub
lods
ss
fmuls
mov
sub
adc
and
mov
stos
xor
dec
cld
rorl
cs
push
enter
jmp
mov
inc
mov
scas
in
cmp
test
pop
aas
sti
and
rcl
sti
xchg
ja
data16
pop
adcl
outsl
repz
adc
push
imul
xchg
fstpt
push
fcmovu
cli
dec
push
xor
push
subb
push
ja
dec
ret
xor
movsl
out
shrl
xor
imul
push
dec
mov
cwtl
mov
ja
stc
bound
mov
pushf
cmp
test
adc
mov
pop
inc
mov
sti
mov
cmp
mov
movswl
lahf
nop
dec
jecxz
and
imul
pop
lea
mov
fs
adc
ds
jae
lds
sbb
test
popa
xor
subl
dec
mov
push
test
adc
pop
decl
dec
out
mov
cmp
xchg
push
je
adc
mov
inc
add
mov
scas
scas
test
and
inc
inc
inc
es
xchg
xchg
hlt
xchg
icebp
jg
aad
cld
adc
dec
sub
inc
push
call
ja
imul
pop
mov
fwait
in
sbb
xlat
mov
sub
testl
into
xor
rol
xor
jno
stos
push
ss
xchg
cmpsl
loopne
mov
pusha
out
mov
sbbb
inc
mov
ret
pop
sbb
imul
std
fwait
icebp
lcall
iretw
mov
dec
jg
sbb
fisubrs
les
mov
dec
lock
add
sbb
xor
xor
jbe
jle
test
pushl
adc
and
nop
in
in
mov
sahf
jg
sarb
pop
cmp
aas
loopne
push
push
xor
pop
lods
cwtl
cmp
stos
jae
pop
dec
jg
sahf
fldenv
inc
rorl
and
std
cli
and
sbb
test
pop
sub
cmp
cs
arpl
fists
cmc
test
push
aaa
dec
imul
and
pop
cmpsb
les
adc
imul
xor
shlb
scas
push
arpl
fs
rorb
adc
adc
and
push
out
stc
mov
xchg
iret
lods
out
cmp
mov
cmp
insl
pop
sub
mov
jo
inc
cmc
jecxz
stc
sub
mov
or
mov
or
cmpsb
fmull
aam
inc
movsb
shl
movsb
sbb
sub
cmpsl
hlt
sbb
push
pushf
adc
jbe
xor
lods
stos
fwait
xchg
sub
push
fldt
mov
movl
dec
test
das
pop
fiaddl
sbb
or
lock
in
push
cld
add
enter
pop
popa
sbb
idiv
ret
add
dec
mov
fs
jnp
push
mov
lret
fldl
mov
int3
jnp
dec
pop
xchg
sbb
push
mov
rol
fcos
mov
fbld
fnstcw
push
sub
lret
aam
xchg
pop
cmpb
jmp
insb
das
mov
sbb
pop
dec
dec
daa
cmpsl
leave
push
jnp
xlat
mov
mov
pop
jmp
mov
and
prefetch
mov
fsubrp
jne
and
outsb
shlb
stos
mov
adc
cmp
jae
xchg
mov
cmpsb
arpl
push
loopne
shr
mov
inc
jne
push
out
inc
xor
mov
adc
push
test
jmp
bound
push
mov
push
pop
or
das
sti
mov
mov
sbb
sub
test
mov
jle
add
call
faddl
rcrb
cmc
js
call
xor
xor
stc
hlt
mov
mov
pop
adc
sarl
leave
cmpsl
clc
repnz
pop
mov
cli
outsb
stos
add
in
and
and
push
iret
ret
sbbb
sbb
iret
inc
push
and
cld
sub
push
mov
sub
cltd
inc
loop
outsb
out
or
jnp
outsb
xchg
lret
cwtl
loopne
xor
stc
ja
sub
out
inc
imulb
cmovnp
lock
sbb
sbb
xor
pop
push
rcrb
mov
lds
xchg
and
sub
mov
jge,pt
mov
frstor
dec
mov
je
incb
push
lret
int3
sbb
mov
push
fstp
rcrl
shll
sarl
dec
lock
das
or
test
cmp
hlt
rclb
ror
cwtl
and
push
scas
push
pop
cmp
xchg
mov
iret
sbb
and
jnp
adc
mov
add
sub
divb
add
into
cmp
inc
jmp
cmp
jns
gs
outsb
subb
addr16
sub
dec
pop
pop
imul
mov
jo
lods
dec
and
int3
outsl
adc
pop
hlt
sub
mov
pop
adc
std
jns
and
mov
imul
in
loopne
push
and
iret
adc
mov
ljmp
ds
push
xor
scas
dec
jo
pusha
and
imul
lods
inc
leave
inc
rcl
fsubr
fs
ljmp
packsswb
fcmovnu
mov
fs
lret
xchg
add
cld
mov
xchg
jl
pop
imul
outsb
in
mov
insb
sub
jmp
cmp
ret
pop
sub
xchg
adc
inc
jbe
sub
sbb
inc
mov
loopew
mov
add
shl
sbb
pop
mov
dec
cmpl
iret
in
or
ret
mov
pop
sbb
adcb
adc
outsl
jbe
push
xchg
inc
negl
xlat
je
add
insb
jno
inc
scas
jb
cmp
hlt
stos
popa
pop
mov
xor
loopne
out
or
jno
add
in
out
xchg
mov
push
or
or
repnz
mov
mov
pushl
cmp
testb
jecxz
bound
fldcw
dec
out
jbe
dec
sahf
idivb
and
push
cmp
mov
lret
loope,pn
jg
pusha
icebp
mov
fwait
shrl
xor
shr
js
push
push
xor
jns
mov
cmp
subps
inc
and
adc
jne
push
fsub
and
fs
mov
popf
xlat
inc
dec
add
mov
addl
cs
and
sti
push
fidivrs
ret
movsl
pushf
inc
mov
dec
jns
cmp
xor
push
xor
js
push
aam
adc
sahf
mov
loop
push
int
jae,pn
std
jns
repz
orb
clc
int3
nop
sub
inc
mov
cmpsb
insl
mov
lcall
pop
bound
scas
fsub
mov
scas
xchg
je
inc
lahf
cmp
arpl
dec
sub
loope
adc
jbe
push
dec
jmp
and
dec
xchg
lock
mov
loopne
xor
pop
icebp
pop
xchg
loop
test
dec
sbb
add
test
cli
loop
cmp
xor
gs
xor
or
pop
into
popf
cmp
or
mov
dec
and
dec
or
push
xor
jp
ret
sti
mov
inc
mov
push
sahf
mov
pop
loopne
adc
xlat
cmc
add
adcb
lds
clc
sbb
sub
xor
ss
push
pop
fnsetpm(287
sbb
out
adcb
cmp
add
inc
dec
jbe
dec
pop
pop
ss
rorb
sbb
push
nop
popf
xchg
mov
lcall
je
rcl
pop
add
fsubrs
sub
movsb
cli
fwait
sub
jl
lods
mov
test
fisubrl
sbb
sahf
pop
fucom
mov
mov
test
dec
add
or
and
fwait
dec
fistps
rorl
xchg
or
xor
popf
mov
jmp
test
add
xchg
jbe
outsl
outsl
aad
hlt
loopne
adc
in
scas
enter
leave
pmulhw
sub
mov
sbb
test
inc
cmp
pop
adc
lret
std
and
lock
lods
push
xor
incb
xchg
jle
pop
inc
test
movlps
sbb
adc
xor
cld
dec
pusha
jmp
pop
inc
out
sub
or
mov
movsb
mov
xchg
push
adc
dec
mov
inc
shl
mov
mov
fimull
nop
fsubs
mov
xchg
out
jl
ret
andb
fistpll
push
cmpsl
pop
mov
and
test
rorb
int3
push
lahf
arpl
cmp
push
inc
add
xlat
das
adc
nop
fisttpll
sti
out
imul
xchg
enter
call
mov
clc
stos
imul
and
pop
mov
jbe
jae
push
aam
xor
adc
jle
les
sbb
mov
subb
jbe
sbb
mov
sub
fnsave
and
ret
icebp
mov
into
mov
je
adc
mov
cwtl
ja
jb
jo
add
loop
cmpsl
push
in
inc
fisubrs
out
jno
fstpl
imul
jae
imulb
mov
sbb
cwtl
lods
or
xor
mov
insl
subl
add
into
and
mov
sub
lcall
repnz
repnz
jb
add
mov
les
imul
jl
mov
stc
leave
lcall
clc
imull
and
repnz
cwtl
int
subl
adc
insl
out
fdivr
xchg
add
out
fimuls
je
sub
jle
repnz
aaa
cltd
ds
repz
icebp
sbb
nop
clc
or
xor
fisttpl
pop
jbe
leave
jle
mov
test
mov
pop
incl
fcoml
fnsave
push
rcrl
les
push
jo
jno
mov
shrb
hlt
mov
jmp
xor
jge,pn
sub
test
mov
in
pop
je
push
faddl
inc
inc
adc
and
cs
cmp
push
lret
sub
hlt
rcrl
inc
push
adc
mov
in
mov
sub
xchg
pop
aaa
pop
pop
pop
fs
inc
iret
jg
mov
or
lods
cld
cs
pop
push
push
cs
cmp
inc
adc
fisubrs
push
popa
insb
repz
xlat
xor
mov
or
jb
orb
pop
mov
adc
lock
fisubrs
lahf
add
push
movsl
cmp
jb
xor
decb
inc
imul
mov
mov
loope
clc
nop
jno
xlat
enter
dec
lret
enter
cmc
push
mov
dec
icebp
sbb
mov
js
pop
cwtl
lret
fisubrl
icebp
xor
fcmovbe
arpl
mov
mov
xor
sub
or
xlat
leave
and
add
dec
je
loop
scas
pop
pop
lret
pop
sti
fs
in
leave
push
pop
mov
xchg
movsl
mov
jbe
jg
arpl
push
jb
dec
mov
jle
cmp
jns
aaa
push
cmp
repz
cmp
arpl
cli
out
sahf
ret
cmp
fxtract
xchg
gs
and
cmc
icebp
or
sub
cmp
adc
jecxz
stos
pop
push
dec
out
sub
push
pop
fidivl
jg
xchg
mov
or
adc
repz
shlb
push
ret
cli
mov
sub
gs
mov
adc
cmp
adc
xchg
mov
int3
das
jbe
inc
cmpsb
dec
pop
xor
rorl
jnp
fnstcw
lret
sbb
pop
aas
fwait
sti
leave
cmpsl
in
fmulp
ret
add
xor
or
and
sub
test
cmpsl
repnz
sub
aad
mov
gs
inc
test
pop
pop
jmp
mov
mov
dec
sti
in
fiadds
rcll
sub
in
ret
sub
dec
ja
mov
xor
adc
pop
frstor
cmp
pop
add
loopne
jbe
ljmp
arpl
inc
movsl
xchg
mov
bound
and
adc
in
inc
call
and
sub
sarl
and
dec
cli
mov
push
xchg
jl
inc
pop
push
lods
and
mov
cmp
or
ss
mov
mov
mov
inc
bound
jb
dec
xchg
adc
sbb
cmp
in
ret
and
es
push
fs
xor
push
cwtl
loop
jnp
pop
pop
xor
inc
pushw
adc
push
icebp
add
mov
in
cmp
ljmp
scas
sbb
arpl
outsl
bnd
adc
dec
clc
sbb
aaa
cmp
leave
les
and
pop
fyl2xp1
psadbw
push
push
call
inc
divb
and
cli
mov
push
jnp
iret
pop
arpl
jnp
test
insl
ss
leave
and
out
pop
push
scas
mov
add
jb
and
ret
xchg
shll
dec
negl
push
imull
fildll
mov
stos
push
mov
cmp
and
pop
enter
addr16
mov
aad
sahf
popa
fdivs
push
aaa
ljmp
dec
cmp
add
repnz
ljmp
icebp
sarl
cmp
push
pop
lcall
sub
in
rcl
into
es
outsl
lods
ret
inc
mov
dec
stos
push
lret
sarl
and
jne
or
jne
inc
mov
bound
add
push
or
or
lahf
push
mov
mov
aam
jp
inc
scas
shlb
mov
dec
cmp
mov
shl
fstps
and
xor
mov
sbb
mov
in
notb
xchg
adc
divl
add
push
pop
inc
pop
gs
fs
ljmp
out
jecxz
out
xor
cmp
mov
lcall
into
enter
into
push
pop
lods
sbb
std
lcall
mov
test
or
sti
adc
cmpsl
or
mov
arpl
mov
pop
rolb
inc
cmp
std
sbb
ja
dec
fstpl
imul
add
sbb
jne
sub
and
dec
sahf
lcall
or
mov
or
int3
divl
pop
mov
int3
mov
in
adc
sub
test
pop
mov
mov
sbb
xor
dec
sti
and
aaa
mov
push
sub
xchg
pop
roll
cvtps2pd
lods
push
push
or
fs
out
mov
xchg
ss
push
leave
addr16
xor
xor
aam
repz
add
shrl
xor
xor
dec
dec
mov
mov
mov
inc
jb
jb
mov
rolb
cwtd
call
sub
dec
jno
in
push
lea
mov
fisubrl
mov
jb
mov
mov
lods
cmp
mov
push
adc
insb
aas
cmpsb
out
add
movsl
fcmovbe
jno
inc
inc
stos
pop
bound
push
push
icebp
sbb
xor
sti
lds
nop
repz
hlt
mov
jbe
jecxz
add
scas
xchg
ret
cmpsb
inc
cmp
movsl
out
das
movsb
sub
in
mov
fs
inc
cmp
lret
shlb
in
jecxz
xchg
mov
inc
sbb
mov
imul
inc
enter
outsl
sbb
mov
mov
fisubl
sbb
dec
adc
ss
or
jmp
clc
xchg
insl
pop
add
je
das
repz
mov
in
mov
or
adc
lods
imul
int
lret
testb
daa
pop
cmp
int3
mov
jno
andb
xchg
ret
cmp
cmp
dec
push
popa
mov
sar
sub
mov
testl
mov
xchg
xor
in
jg
bound
into
movsb
inc
fnstcw
inc
sbb
dec
sahf
mov
hlt
cmp
sub
cmp
xchg
decb
in
dec
jecxz
gs
push
sbb
ljmp
outsb
push
js
jnp
icebp
xchg
sbb
pop
dec
push
cltd
xchg
jno
mov
xchg
decl
mov
lock
jecxz
js
mov
and
mov
xchg
movsb
push
ret
stc
dec
adcl
pop
jge
mov
out
outsb
ljmp
stc
or
gs
dec
cmp
cmc
ret
outsl
rorl
sarl
cwtl
popa
jge
or
fildll
cmp
stos
mov
jo
repnz
pop
clc
mov
push
popf
mov
les
adc
repnz
xchg
dec
cmp
and
mov
insl
mov
mov
cmp
mov
mov
push
or
mov
mov
lret
cwtl
ljmp
mov
sbb
mov
jbe
sbb
aam
jmp
hlt
testb
outsl
aad
mov
rol
scas
dec
sub
cld
test
aad
ffreep
sub
movsb
dec
adc
faddl
adc
mov
shl
loope
fmulp
aad
mov
fnstsw
xor
in
movsb
stc
das
mov
adc
sbb
ja
pop
sub
stos
mov
xchg
scas
in
jmp
pop
cwtl
mov
jo
into
cmpsl
cli
jb
out
xor
loope
dec
jp
push
cmp
mov
pop
push
mov
mov
xor
stos
and
in
orl
mov
test
sti
jl
out
mov
shlb
scas
jmp
jge
daa
rcrl
xchg
push
pop
fdivl
mov
ret
cwtl
fucomi
mov
xchg
outsl
push
mov
dec
sbbl
scas
iret
popf
sar
ret
pushaw
sub
cmpsb
dec
dec
dec
repz
and
loop
push
mov
ret
or
mov
jmp
arpl
movsl
fimuls
jg
or
mov
movsl
mov
and
cmp
lret
mov
ret
sbb
inc
popa
cmpl
or
and
mov
xchg
movsb
mov
das
cltd
sarb
cmp
and
jae
mov
sub
push
and
xchg
xor
in
jbe
xchg
dec
movsl
sahf
sbb
mov
rolb
mov
inc
das
clc
push
mov
lea
aas
int3
and
inc
call
or
and
adc
push
mov
testl
loope
inc
iret
clc
out
fiaddl
mov
loop
out
xor
daa
cmp
dec
jne
cwtl
test
jl
call
int
fdivs
mov
cmp
leave
data16
adc
ret
fsubr
test
inc
push
fistps
out
mov
pop
mov
test
add
jg
popf
xor
sub
add
rorl
jle
fs
sbb
ds
int
inc
fmull
pop
std
push
arpl
jle
dec
add
fxam
imul
pop
xchg
and
int
jno
dec
add
sbb
jg
das
shl
lret
and
hlt
in
and
adc
and
aas
xor
mov
ja
push
mov
mov
pop
mov
adc
pop
fs
or
xor
inc
hlt
xchg
push
data16
adc
cld
jmp
and
xlat
inc
sbb
test
jnp
outsb
andb
movsb
enter
mov
dec
or
fidivrs
lea
aaa
cmc
sbb
rcl
add
cmp
mov
aas
repnz
sub
inc
mov
mov
or
ret
jns
stos
sub
adc
int3
arpl
sub
test
and
jl
push
ret
sbb
imull
inc
clc
mov
fsub
outsl
out
ss
and
xlat
mov
push
mov
and
xor
jno
inc
xchg
and
inc
inc
mov
mov
movsb
or
jae
cmp
xchg
jl
mov
sbb
fidivrs
push
jge,pt
test
mov
xor
xchg
dec
inc
push
mov
in
inc
jno
int3
xor
popf
mov
xorl
inc
jbe
aaa
pop
in
lret
mov
hlt
pop
push
movsb
les
push
int3
fwait
nop
sbb
mov
xor
repz
mov
pop
pop
out
std
ret
cmp
mov
mov
repz
and
dec
pusha
in
adc
xchg
data16
shrl
loope
hlt
cld
lea
push
outsl
popf
jg
arpl
push
insl
cmp
test
dec
mov
int
jl
mov
lock
lahf
mov
jge
lods
test
loopne
xorb
sarl
mov
loop
push
and
jp
std
pop
sub
jo
cli
mov
test
pusha
mov
fs
js
popf
mov
in
lea
pop
and
cwtl
xchg
mov
or
cmp
jb
ss
movsl
inc
movsl
mov
and
adc
popa
jecxz
testb
sbb
test
roll
cmp
rclb
mov
test
adcb
loop
inc
arpl
push
add
cmc
in
out
lods
aaa
mov
sub
xchg
dec
sti
fwait
ja
push
xchg
repz
add
imul
ds
mov
jns
jae
inc
mov
jbe
imul
sbb
flds
out
jbe
push
lahf
push
mov
ja
or
or
and
dec
add
mov
sub
in
add
sbb
cli
enter
dec
pop
fstpt
mov
dec
add
rorb
fsubl
and
faddp
xchg
pop
ficoms
add
dec
cmpsb
fsubrl
lods
test
sub
lret
xchg
popf
arpl
or
cmp
fdiv
pushf
movsl
aas
out
testl
je
outsb
lods
push
or
inc
sti
cmp
push
lock
ja
aad
xchg
inc
shrl
cltd
mov
cmp
mov
xchg
or
or
jnp
jnp
pop
jp
mov
flds
cwtl
and
sbbb
lock
dec
xor
inc
inc
arpl
out
out
cltd
fcmovbe
push
cli
repnz
fmul
orb
mov
push
out
arpl
cmp
mov
ffreep
cmc
jge
loope
xor
mov
out
out
dec
into
in
add
cmp
xchg
leave
divl
outsb
bound
push
pop
adc
push
lods
sub
sbb
pusha
call
dec
jae
fsubp
jbe
call
cmp
cmp
pop
fbstp
test
mov
imul
out
or
cmp
xchg
lds
test
mov
fs
dec
jmp
push
fs
shll
mov
pop
and
mov
ret
sbb
fidivrl
inc
pop
push
xchg
test
stos
ret
sub
cli
xchg
pop
pop
sbb
xchg
test
jle
fisttpl
pop
cli
push
test
js
push
mov
or
sub
test
aaa
jbe
inc
cmp
push
js
cli
pop
shl
daa
lahf
pop
mov
jmp
push
mov
or
in
fxch
pop
sbb
loope
daa
test
dec
or
nop
scas
sets
addr16
sub
sub
xchg
jecxz
inc
dec
aam
xchg
inc
mov
shrl
aaa
mov
pop
mov
xchg
sub
jecxz
cmp
adc
sub
loope
sbb
push
sbbb
push
ss
jle
jns
into
idivl
inc
insl
jbe
fldenv
in
mov
and
or
cmp
sub
imul
stc
cmc
push
push
jne
sub
sbb
push
fnstenv
and
stos
dec
sbb
cs
cwtl
cmp
sbb
push
rolb
dec
xor
lcall
and
or
push
test
or
pop
mov
mov
ss
out
das
stos
loop
jo
lret
jno
and
jnp
jnp
inc
and
add
rcr
lods
sti
dec
dec
sbb
outsl
jno
mov
nop
and
add
sub
mov
aam
out
out
xor
pop
out
loope
test
cmp
les
scas
in
sub
inc
cs
addr16
test
in
out
shlb
mov
add
push
xchg
daa
or
dec
movsl
cmp
jmp
stos
mov
insb
jbe
inc
cmp
outsb
fsubs
jns
enter
outsl
push
cmc
dec
mov
xor
movsl
fistpll
mov
sbb
dec
xchg
popl
sti
xchg
mov
loop
gs
lods
lcall
push
xchg
aad
adc
xor
xchg
xchg
inc
push
mov
inc
push
jp
pxor
pop
rcrl
pop
pusha
filds
adcb
dec
jno
jle
lods
in
imul
sbb
adc
ljmp
test
inc
mov
push
int
and
mov
push
adc
popf
sub
sub
icebp
cld
test
cli
fistps
adc
dec
add
and
mov
mov
mov
mov
arpl
push
mov
loopne
jge
sbb
sub
pushf
fnsave
rolb
gs
loopne
popf
lcall
in
cmc
cmpsb
pusha
add
xor
imul
sub
mov
loop
sub
lcall
jecxz
int
cmp
mov
lahf
cmc
popa
mov
pop
mul
arpl
and
mov
adcb
mov
push
pop
pop
sbb
mov
sti
cmp
lcall
mov
in
test
cmp
push
pop
dec
aaa
jne
sub
pusha
add
push
data16
movsb
mov
xchg
push
cmpsb
sub
popf
imull
mov
out
test
jo
xor
pop
in
mov
arpl
test
pop
xorl
mov
std
inc
push
lock
insl
test
lcall
mov
mov
js
xlat
enter
xlat
dec
stos
sbb
test
inc
mov
lods
push
lds
pop
lea
fiadds
mov
pop
jne
fisttps
cmpsb
pusha
mov
push
loop
pop
mov
jno
xor
xchg
adc
mov
and
stc
add
xchg
xchg
xor
ljmp
mov
add
cmp
jnp
lcall
repnz
lods
clc
addr16
rolb
mov
inc
ficoms
cmp
outsb
and
lahf
faddl
dec
add
or
xorl
rcl
movsb
nop
js
sub
addr16
fsubl
xchg
ret
scas
gs
stc
ds
xor
jbe
xchg
push
jb
mov
orb
mov
add
or
mov
ret
mov
mov
cmpsl
lahf
fstpl
ja
add
stc
js
ret
cld
js
fwait
orb
dec
fdivrs
pop
int
fimuls
outsl
jg
out
sub
dec
test
sbb
in
test
jbe
test
jmp
xor
cmp
xchg
push
or
lcall
jbe
xor
adc
sbb
ljmp
add
sahf
pop
inc
in
push
das
sub
inc
adc
xchg
xchg
sub
fwait
cmpb
das
or
mov
mov
mov
jne
sahf
jle
jl
mov
xor
inc
xor
orl
xor
cwtl
inc
fstpt
out
push
fildll
out
out
fstps
pop
sub
in
xor
inc
iret
fidivs
push
sahf
js
xchg
ret
loop
and
loopne
xlat
jb
or
pop
shll
jl
push
paddusb
mov
push
xchg
cs
neg
mov
jecxz
stos
pop
notb
arpl
icebp
pop
fidivl
push
adc
arpl
ja
dec
xor
stc
adcb
rcr
hlt
add
dec
pop
out
or
or
stc
ja
fstps
testb
mov
push
lret
fisubrs
xor
or
sbb
fwait
mov
sbb
rcll
cmp
jmp
jecxz
mov
jns
out
mov
pushf
push
int
popa
cmp
push
adc
aaa
in
outsb
and
jp
or
xchg
sbb
hlt
and
insl
lods
cs
fwait
fs
cmpsl
fbld
mov
ss
xchg
dec
negl
mov
adc
jecxz
in
pop
pop
push
aaa
adc
cmp
imul
mov
mov
or
andb
or
cwtl
adc
sahf
push
fsubrs
dec
sub
or
pusha
or
mov
les
fbstp
bound
out
fidivrs
into
mov
or
dec
pop
out
stc
jns
out
popa
jns
lret
data16
imul
mov
cmpb
lret
push
leave
inc
test
xchg
xor
data16
inc
jl
nop
mov
jecxz
jnp
leave
jl
and
outsl
insb
mov
and
sbb
xchg
push
pop
or
adc
stos
pop
mov
adc
int
arpl
outsl
jle
inc
xor
xchg
adc
fcompl
movsb
sub
pop
sbb
sub
adc
std
pop
leave
test
aas
xchg
shll
inc
out
dec
movsl
xchg
mov
orl
and
jo
sub
mov
pusha
adc
aas
and
dec
adc
dec
subl
or
sub
sub
sbb
aaa
cld
stc
loope
sti
ret
push
push
movsl
or
cli
pop
xor
sarl
mov
cs
stos
sub
outsb
pop
mov
stc
jecxz
aas
cmp
cwtl
es
enter
jne
pop
sbb
mov
push
mov
insb
loopne
outsb
out
jmp
enter
jo
iret
inc
xor
lahf
dec
loope
fld
xchg
rcr
mov
clc
in
rcrl
push
enter
mov
mov
in
push
inc
adc
iret
outsb
or
mov
stc
and
mov
data16
push
push
test
xchg
pop
es
pop
insl
shl
add
enter
adc
leave
cmpsl
scas
xlat
call
sahf
pop
sub
add
fs
ds
nop
pusha
and
into
aam
push
add
sbb
cmp
xchg
lock
lcall
xchg
nop
outsl
lea
pop
sbb
ja
outsb
pop
or
nop
aam
xchg
and
shrl
adc
dec
jbe
aaa
mov
cmpsl
in
sub
jno
arpl
aaa
outsl
pop
scas
xor
push
mov
inc
loop
xchg
xchg
dec
cmp
push
jmp
fldt
sub
adc
movsb
xchg
cmp
mov
push
imul
in
in
ss
push
jg
out
add
cmp
push
dec
sbb
push
pop
sub
ds
sbb
sbb
test
call
je
mov
inc
faddl
or
fsts
cmpsb
stos
outsl
sbb
and
call
adc
push
pop
dec
jg
mov
cmp
add
jecxz
xor
add
outsl
xor
test
push
stc
mov
pop
add
inc
ret
pop
inc
inc
cli
xchg
jnp
insl
push
ss
jl
call
ret
repz
out
mov
arpl
ret
call
enter
call
addb
out
out
rcrb
incl
sbb
pop
daa
cmc
lds
mov
daa
xchg
cmpsl
xchg
adc
sub
stc
cmp
xor
sbb
negb
xchg
shlb
and
aas
and
mov
and
xor
inc
xor
ffree
subb
pop
dec
cmc
insb
sbb
cmp
xchg
pop
pop
mov
stos
add
sub
pop
stos
or
sbb
test
mov
cltd
iret
enter
sahf
hlt
lock
jae
fdiv
out
pushf
fisttpll
lcall
mov
lock
adc
fistl
mov
adc
sarb
and
repnz
les
pop
adc
outsl
mov
inc
bound
cmpsb
mov
mov
add
dec
jb
push
jecxz
sub
dec
fdiv
push
repnz
mov
aaa
mov
cmp
cmp
les
flds
jne
stc
pop
mov
call
jae
jg
leave
dec
mov
adc
imul
sbb
lods
std
inc
out
pop
adc
adc
mov
fwait
xchg
cmp
xchg
inc
lcall
pop
sub
insb
rcrb
sbb
push
sub
aaa
dec
cs
xchg
push
mov
movsl
sbb
mov
cmc
in
jge
cld
aad
sub
jmp
les
divb
inc
push
pushf
mov
out
loopne
jp
inc
inc
sub
or
sbb
rcrl
lods
mov
fwait
pop
adc
js
mov
fs
sbbl
mov
cmp
mov
mov
out
stos
das
insb
insb
sub
movsl
jnp
stc
ja
dec
dec
movsl
cltd
outsb
enter
adc
rolb
vpsubq
insb
je
loop
clc
sbb
dec
inc
enter
push
inc
lods
add
cli
arpl
loop
test
rorb
cmc
inc
pop
inc
inc
ss
mov
fs
test
jns
jns
ret
addr16
mov
call
sahf
aam
mov
mov
scas
stc
adc
test
ds
cmc
imul
aas
fbstp
ret
iret
mov
inc
push
adc
cmp
fs
adc
push
loopne
movsl
xchg
cmpl
lods
icebp
ds
insb
sbb
arpl
add
int
and
push
and
cltd
lcall
mov
xor
addr16
add
mov
negl
sub
push
ljmp
loopne
cmp
les
inc
sbb
sbb
jae
cmp
mov
mov
outsb
sbb
push
sbb
icebp
add
bound
addr16
push
jge
jge
sti
and
and
jle
jp
arpl
scas
pop
xchg
pop
out
xlat
sub
add
popa
sub
or
loope
mov
mov
popa
or
push
lods
popa
nop
or
push
mov
xchg
mov
cmpsl
add
pop
xchg
add
inc
fldcw
jo
cmpsl
sbb
adc
cli
jnp
xor
call
inc
inc
and
iret
and
push
and
mov
dec
cld
mov
imul
aad
xorb
aad
mov
or
add
mov
std
mov
mov
lahf
sub
ds
out
in
xor
adcb
insb
push
movsb
cwtl
cwtl
dec
stos
lret
ret
fisubrl
fwait
mov
in
pusha
and
arpl
mov
cltd
cltd
dec
sbb
rolb
in
imul
xor
das
movsb
dec
xorb
movsb
cmpsl
mov
jg
movb
bound
aas
mov
je
dec
shr
sub
mov
outsb
leave
sub
xchg
movsb
mov
push
aad
outsb
lods
cmp
ja
jbe
into
mov
and
pop
mov
fisttps
mov
sub
inc
sub
leave
mov
ja
scas
dec
push
xchg
and
aad
insl
jl
nop
dec
mov
in
sbb
outsl
iret
popl
inc
in
jge
out
ja
add
outsb
je
loopne
int
pop
mov
sub
or
push
push
imul
clc
or
lock
xchg
push
push
pop
add
mov
in
inc
popf
pushf
nop
sahf
ljmp
inc
xchg
rclb
in
inc
mov
fldt
ljmp
sbb
or
push
mov
aam
adc
mov
cmp
sbb
and
adc
mov
data16
and
rorl
sbb
orb
out
shl
loopne
out
adc
shl
leave
mov
jnp
mov
pop
mov
popf
pop
xchg
out
ficomps
sub
enter
mov
jp
dec
mov
imul
or
mov
dec
out
leave
stc
imul
push
mov
clc
sbb
gs
jge
jae
bound
lods
xor
mov
ret
pusha
sub
mov
mov
pop
push
sub
xchg
xchg
nop
pop
mov
pop
adc
stc
xchg
dec
addr16
idivl
cli
sub
or
sbb
in
lcall
push
xor
cmp
out
call
orl
mov
out
out
xor
jno
jns
scas
stos
cmc
cmp
sbb
adc
rcrl
out
push
scas
arpl
mov
push
push
pop
jno
in
push
shlb
insb
repz
mov
push
stc
std
scas
dec
pop
das
xor
pop
mov
mov
into
mov
lea
ja
cmc
clc
sbb
das
lods
repnz
adc
sbb
xchg
shrb
pop
cli
jmp
add
pop
pop
mov
cmpsb
or
insl
rcr
mov
jmp
icebp
mov
aam
in
inc
adc
mov
ss
int
test
gs
popa
push
mov
insl
jno
cmp
cmp
dec
push
adc
inc
push
pop
push
cmp
divb
xchg
mov
xchg
insb
out
popa
sar
adc
pop
stc
xchg
pop
inc
test
insl
insb
imul
cmpb
ljmp
fists
mov
outsl
lcall
push
push
add
insb
pop
loop
dec
or
sub
imul
pop
push
insb
dec
adc
popa
jmp
lds
leave
pop
mov
clc
sub
xchg
iret
push
mov
push
cltd
jbe
test
xor
cmp
outsl
dec
inc
dec
jae
rorb
fcos
xchg
cmp
out
mov
mov
int3
rclb
inc
into
out
push
add
adc
sub
in
out
xchg
mov
lds
mov
aad
orl
mov
xchg
into
sbb
cmp
js
in
in
or
mov
xchg
push
dec
adc
addr16
stos
ret
dec
arpl
sbb
xchg
lods
push
pop
xchg
push
xchg
lods
push
inc
test
lret
out
sub
ss
rorl
lods
lcall
pop
push
and
adc
insb
leave
jnp
pop
loopne
add
inc
cmp
out
jmp
pusha
ficoms
or
dec
incb
test
push
inc
mov
scas
clc
test
xor
pop
mov
imul
ret
pusha
xchg
push
xchg
or
sbb
adc
add
subb
ja
sbb
cmp
sbb
push
mov
jl
fnstsw
dec
mov
iret
fwait
pop
mov
mov
lret
mov
jne
mov
into
test
jb
lods
sbb
inc
inc
pop
je
sub
aas
and
xor
movsl
ja
push
jg
xchg
shl
idivl
rcr
inc
mov
hlt
pop
out
xchg
pop
fs
pusha
loop
fmul
cmp
hlt
mov
sbb
insl
jecxz
fsubrl
pop
add
repnz
jbe
dec
adcl
dec
mov
popa
in
xchg
cmp
jae
in
jmp
insb
loopne
lret
dec
scas
mov
cs
fists
dec
lea
xor
push
adc
jno
xchg
add
add
sub
in
or
ds
jle
or
sbb
cwtl
call
clc
push
push
jmp
mov
mov
out
or
aam
mov
dec
into
jae
int3
or
adc
add
loope
mov
xor
fstpt
lret
push
pop
cmp
pop
pop
das
aaa
fdivl
or
jbe
push
sbb
stos
mov
ljmp
fildl
daa
fldt
adc
clc
fwait
push
sub
inc
cmp
mov
insl
pop
std
ret
scas
xchg
mov
push
out
fwait
ljmp
sub
xchg
in
inc
jp
bnd
into
ficompl
xor
inc
cmp
dec
call
adc
xchg
clc
imul
fsubrs
pop
and
movsb
adc
popf
mull
leave
lds
xchg
adc
fs
pop
es
fs
ffreep
sbb
pop
add
jle
test
xchg
pop
lret
lret
cmp
icebp
insb
adcl
sbb
movsb
mov
addr16
fsubs
aas
lahf
xchg
jbe
ret
pop
data16
xor
fwait
aad
pop
xchg
mov
pop
add
outsl
xor
lods
inc
pop
subl
and
mov
cmp
cli
mov
aad
push
mov
xor
ret
pop
mov
mov
cltd
jno
add
andl
pop
pop
inc
shrl
lds
ljmp
mov
xor
mov
jne
jns
scas
xchg
push
mov
and
cmp
push
or
mov
jp
lock
rolb
popa
je
pushf
inc
mov
jns
insb
dec
sub
jmp
mov
adc
pop
mov
in
data16
jno
das
cmp
outsl
inc
jne
jl
sub
mov
lods
je
movsl
pop
xlat
push
fldcw
inc
cli
test
lods
and
cmp
call
mov
loop
mov
in
push
push
or
adc
mov
inc
push
inc
add
mov
pop
dec
das
and
and
or
jmp
loopne
fnstenv
lret
jo
lock
xchg
mov
push
es
jecxz
lods
imul
xor
outsl
pop
lahf
sub
ret
mov
add
lds
sbb
fmul
cmp
daa
pop
pop
dec
lods
dec
jmp
es
lods
cmc
jmp
mov
ret
shrb
aaa
fisttpl
pop
test
sbb
ret
sti
test
xor
or
cmp
sub
pop
js
es
add
dec
xchg
es
pop
loope
sbb
cmp
push
push
dec
int
push
mov
lds
arpl
dec
gs
sysexit
data16
pushf
mov
lea
sti
lods
inc
orps
mov
je
jns
jecxz
sahf
jmp
xor
mov
loop
imul
xor
mov
mov
lahf
repz
stc
loopne
cmp
and
jnp
mov
clc
xor
xor
dec
mov
mov
inc
je
adc
jo
icebp
cmpsl
cli
jb
pop
sub
bound
nop
lret
dec
dec
testl
andb
xchg
pop
repz
or
sbb
inc
cmp
filds
fs
int
xor
and
in
dec
xorb
adc
sbb
stos
xchg
cs
adc
mov
cli
xor
shr
lret
xlat
jbe
nop
fidivrl
mov
fwait
jae
cmpsl
sub
idivb
bound
cmp
rcl
scas
adc
mov
popa
sbb
fsubs
sbb
xchg
xchg
in
adc
mov
dec
push
pushf
mov
sbb
repnz
cltd
in
sub
icebp
hlt
cmp
movb
stos
cltd
mov
cmc
outsl
push
arpl
jmp
mov
stc
mov
lods
mov
cmpsb
fsubrl
xchg
repz
dec
lods
mov
lcall
mov
rolb
xchg
cmpsb
in
mov
dec
mov
les
outsl
or
pop
push
ljmp
adc
mov
push
jnp
in
repz
jle
or
pushf
jle
sbb
mov
xor
pop
add
int
lahf
pop
into
mov
mov
xchg
outsl
lock
sbb
mov
stc
push
rcrb
fsubl
loop
pop
sub
jbe
adc
cmpsl
add
mov
in
mov
cs
lods
pop
add
inc
sahf
mov
xchg
cmpsl
push
fyl2xp1
dec
test
pop
sub
scas
pop
pop
pop
pop
addb
inc
popa
rorl
sub
and
dec
and
xor
mov
xor
mov
out
fsubrs
bsr
stc
divl
jno
mov
mov
dec
sbb
xchg
imul
int3
or
lea
xor
icebp
add
pop
inc
lret
pop
jae
sbb
mov
or
push
xlat
adc
lods
cld
aas
fucomi
loop
les
mov
jge
in
roll
in
fs
xchg
add
ja
jns
push
cmp
out
cld
xchg
aad
inc
and
in
sahf
enter
xor
xchg
das
cmpsb
cmp
shll
lock
aas
inc
gs
and
pop
pop
rcrl
cmpl
lock
daa
jcxz
mov
stos
mov
push
sahf
lcall
shlb
cltd
psubb
sub
mov
lods
dec
cmpl
test
jbe
dec
pop
add
andl
bound
or
push
xchg
out
ja
cmp
movsl
jno
shlb
push
movsb
xor
adc
add
lahf
push
gs
in
cmp
pop
sti
scas
jo
ret
fwait
les
inc
aam
cmp
shr
fsub
mov
mov
mov
sub
data16
cwtl
mov
gs
das
xchg
mov
int
scas
sbb
cli
mov
sbb
jmp
push
inc
repnz
jmp
mov
loopne
and
iret
mov
fwait
test
xor
cmp
inc
xchg
jne
outsl
jge
adc
add
test
jno
test
int3
sti
adc
xchg
jb
shl
pop
test
pop
jno
pop
or
push
dec
test
sbb
xchg
inc
rorl
cmp
aad
pop
rdpmc
pop
dec
dec
notb
mov
scas
xorb
cmp
insb
neg
loop
and
in
cwtl
pop
or
jb
sbb
pop
fistpll
dec
cmp
sbb
sub
fbld
mov
cli
pop
jp
push
add
fistps
sarb
xor
xor
jl
repnz
cmpsb
sti
call
in
lcall
outsb
and
lcall
and
mov
add
sbb
and
inc
cwtl
ds
aad
ja
dec
cmp
mov
add
adc
mov
mov
daa
in
in
movsl
and
insb
mov
lret
sub
jno
test
adc
test
popa
mov
scas
arpl
jno
in
daa
loopne
outsb
push
mov
popf
icebp
sub
test
jne
add
add
xchg
nop
into
sbb
mov
inc
loope
lret
aad
or
xchg
add
les
pop
cmp
ret
sub
push
or
mov
cmp
stos
adc
dec
push
pushf
dec
aam
sar
rcrl
add
pop
pop
cmpb
cmc
push
mov
dec
mov
mov
into
int
cmp
add
cmc
clc
clc
dec
dec
mov
add
hlt
push
mov
push
mov
fimull
repnz
sarl
inc
adc
adc
fwait
daa
or
push
lret
test
push
mov
dec
outsl
stos
jne
sbb
and
cmc
or
fdivr
scas
jne
fsub
adc
imul
aas
outsl
fldcw
in
jecxz
push
fs
shrb
adc
fisubl
out
push
incl
xor
subl
jg
lret
sbb
mov
or
sbb
and
push
xlat
add
sar
sub
lcall
call
loopne
sub
iret
xor
adc
int
jae
jl
xchg
cld
pop
bsf
xchg
adc
test
sbb
mov
adc
push
pop
mov
notl
out
sub
fsubrs
out
gs
rcl
mov
pop
rorb
je
cld
imul
jbe
stos
jl
call
insb
leave
mov
adc
fdiv
int
je
lea
push
imul
mov
mov
ret
push
rorl
mov
in
nop
sbb
adc
dec
cmp
pop
xor
dec
ss
lods
loopne
xchg
mov
int3
xchg
sub
mov
mov
int3
or
mov
push
in
cs
clc
xchg
data16
xor
inc
repnz
std
loope
pushf
push
sub
mov
pop
sub
mov
sti
dec
pop
jne
push
and
add
sbb
addr16
in
pop
es
xchg
dec
jmp
shrb
mov
add
testl
ret
fisttps
insl
dec
jno
mov
jp
fidivrl
sti
rcr
loopne
js
mov
mov
jle
and
gs
cltd
jne
xor
xchg
addr16
xor
les
gs
pop
int3
jne
mov
push
shl
pop
and
int3
lods
inc
fnsave
and
add
stos
fisubrl
sub
sbb
pop
cmc
rcl
push
xlat
mov
xchg
sbb
rol
out
sub
mov
out
imul
sti
mov
xor
in
jg
push
iret
mov
dec
insb
aas
or
sbb
lcall
xchg
sbb
add
mov
std
mov
inc
and
fisubrs
call
aad
xchg
and
in
andb
into
jo
int
movsl
push
jmp
mov
mov
xor
pop
push
notb
arpl
scas
xor
movsb
pop
adc
addl
fdivs
jp
fcom
cmpsl
fmuls
repz
push
sbb
push
js
ficoml
sbb
popa
dec
mov
adc
jle
mov
in
mov
cmp
xlat
rcl
or
fs
sub
ret
std
imul
addr16
pop
mov
add
shrb
mov
out
lods
jmp
repnz
in
lret
pop
push
adc
and
fmul
out
jne
push
inc
mov
divl
inc
pop
push
cmp
aad
sbb
sbb
ret
insl
mov
sbb
aas
stos
pusha
sbb
lods
pop
xchg
and
dec
pop
and
adc
mov
movl
mov
xor
mov
mov
mov
jo
leave
inc
adc
cld
fdiv
pop
sti
popa
popa
repz
or
inc
push
push
push
lods
cmpsl
jp
add
lock
dec
push
shlb
mov
sbb
inc
loop
inc
insl
xchg
scas
js
pop
mov
cmc
ficoms
idiv
leave
leave
add
xchg
or
add
push
outsb
fidivrs
inc
sbb
pop
lcall
scas
inc
iret
pop
lock
xor
xor
dec
js
adc
fptan
mov
dec
ljmp
xchg
sahf
and
repnz
in
or
arpl
add
cmp
div
inc
mov
loope
cli
daa
hlt
movsb
loope
lahf
flds
cltd
ljmp
mov
cmp
sub
dec
stos
sbb
push
push
mov
sbbl
cli
mov
lret
xchg
cmpsl
mov
idivb
divl
mov
inc
inc
les
addb
repz
push
into
jb
lods
out
pop
mov
lret
push
rcl
push
push
add
icebp
jecxz
adc
mov
sub
lock
inc
subb
mov
sub
xchg
in
rolb
or
cltd
ficoms
ds
mov
pushf
data16
xchg
pop
mov
fcoml
pop
in
loop
outsb
xchg
sub
xchg
sbb
dec
loope
cmp
int3
cli
data16
mov
shrl
inc
call
jne
imul
in
aaa
stc
test
out
out
adcl
cmp
fcomp
and
mov
imul
cmp
lea
roll
loope
in
movsl
sbb
push
movsb
ss
and
fadd
dec
mov
rolb
mov
sub
mov
xchg
push
pop
aas
cmpsl
repnz
es
mov
jo
mov
sbb
popf
cmp
lds
ja
dec
push
stc
inc
mov
lds
repz
cmp
mov
fists
adc
cs
adc
data16
lods
ret
arpl
shrl
mov
xor
mov
inc
bound
pop
and
cmpsl
int
or
pop
and
popa
rol
sbb
cmp
in
sti
xchg
mov
add
ljmp
aas
mov
mov
mov
shll
nop
inc
in
jg
inc
pusha
shrb
lcall
adc
insl
std
test
add
fisubl
jb
fucomi
adc
dec
les
push
daa
popa
cmp
pop
inc
mov
test
cmp
sub
pop
and
sarb
nop
lock
xchg
std
and
call
lret
into
ret
lahf
fdivr
jmp
mov
outsb
lahf
loop
sub
je
arpl
imul
pop
pop
cmp
lret
scas
jno
xlat
inc
icebp
shrb
cli
mov
cli
inc
or
cwtl
jno
jp
xor
je
lahf
add
inc
inc
add
setb
hlt
pop
gs
gs
insl
std
aam
cld
out
or
pop
sub
daa
adc
in
std
sub
fs
inc
sbbb
add
xchg
flds
shll
push
mulb
mov
icebp
push
cmpsl
in
mov
data16
sub
fstpl
lock
outsl
test
rclb
dec
mov
mov
mov
shll
add
mov
aas
mov
insb
push
movsl
aas
lods
sbb
outsb
cltd
dec
fwait
mov
push
hlt
ret
lea
sarl
or
push
sbb
dec
pop
mov
call
fcoms
cltd
aaa
xchg
in
out
ljmp
rorb
cmpsb
je
xchg
xchg
ret
stos
adc
incb
push
jle
or
cmpsl
fisttps
and
and
sub
jge
xor
mov
and
outsl
dec
lods
repz
inc
sbb
adc
bound
pop
xor
jnp
pop
ljmp
cli
outsb
jmp
rorl
int
fs
cmp
sbb
fmull
paddb
out
sub
fimuls
cmpsl
popa
mov
mov
aam
testl
test
push
iret
outsl
scas
and
inc
xchg
push
scas
std
jno
cld
dec
neg
adc
dec
jne
dec
xor
or
lea
mov
sub
fcmovbe
mov
mov
inc
push
rcrb
mov
pop
add
mov
imul
decb
inc
dec
cli
xlat
int3
xchg
js
and
in
mov
fldcw
mov
sbb
mov
subl
out
xchg
test
sti
das
lcall
subl
imul
imul
dec
pushf
jmp
into
cmpsb
mov
cwtl
scas
stc
mull
mov
popa
sub
sbb
xor
mulb
js,pn
scas
das
adc
xchg
in
ret
xchg
dec
jecxz
daa
repnz
je
add
test
sub
push
xor
sub
mov
out
test
in
je
push
in
js
stc
dec
in
cmpl
in
lods
mov
jg
mov
jnp
aam
mov
mov
sbb
movsl
dec
and
rcrb
and
dec
sbb
shll
mov
mov
xchg
ret
cmc
std
popf
std
pushf
out
mov
pushf
aaa
retw
xchg
or
in
mov
cmpsb
daa
out
out
je
xor
scas
push
int3
adcb
cmpsl
dec
mov
sbb
arpl
aas
rcll
push
inc
mov
mov
dec
jle
wrmsr
in
xchg
push
sbb
leave
insl
xchg
nop
rorb
pop
lret
lock
out
dec
and
and
push
adc
testb
fbstp
pop
stos
cwtl
add
movsl
negl
xchg
cltd
xchg
ss
imull
aaa
adc
sbb
popf
rcr
mov
dec
insb
xchg
outsl
jmp
xchg
mov
xor
daa
std
call
jge
aaa
lcall
pop
push
inc
insl
lods
mov
popa
out
push
jbe
push
mov
mov
mov
pop
int
and
xor
dec
inc
fidivl
mov
add
mov
leave
jge
insb
sub
dec
out
popa
xor
lods
adc
lahf
xor
ss
in
mov
loopne
sub
nop
jmp
in
dec
push
in
mov
daa
popa
dec
and
sub
sbb
pop
cmp
cltd
hlt
and
pop
fisttps
movsl
inc
and
int
mov
iret
lea
fwait
fs
int
add
pop
dec
push
sarl
pop
fdivp
add
jmp
add
stos
bound
mov
push
loopne
cs
test
push
sbb
out
add
pop
lret
push
mov
int
cmp
sbb
dec
and
inc
lods
ret
sub
add
or
mov
std
arpl
das
cmc
jnp
shlb
mov
fbld
add
enter
jb
lret
xor
dec
sub
popa
mov
loop
fcmovne
adc
sub
adc
dec
iret
or
lcall
int3
cmpsb
lea
ret
sub
stos
adc
add
shll
fwait
dec
push
pop
and
jb
addr16
int3
sbb
int
jecxz
inc
sarb
sbb
insb
movsb
and
mov
mov
sub
inc
or
ret
fdivrl
lds
call
repnz
cwtl
pop
cmp
popa
mov
dec
mov
cmp
sbb
xchg
loope
mov
xchg
pop
mov
or
and
scas
add
mov
cmp
fsts
push
jo
adc
xor
inc
mov
inc
mov
sbb
pusha
out
sbb
ret
jge
mov
mulb
pop
lret
pusha
add
push
pop
xchg
lods
pop
out
jge
and
loopne
push
lods
sbb
outsl
lret
inc
pop
add
in
repz
jge
orps
out
out
addr16
rcrl
pop
or
fsin
popa
mov
jb
ret
pop
and
push
ret
xchg
or
or
push
inc
pop
jmp
imul
sub
lea
into
daa
iret
mov
mov
xchg
push
sahf
xor
cltd
repnz
js
jne
jmp
rolb
push
addr16
add
inc
fwait
daa
push
cmpsb
adcl
dec
rcll
insl
pop
xchg
aaa
mov
cmp
das
jns
scas
pop
and
roll
mov
inc
sahf
mov
cmpsl
cs
loopne
mov
sub
xor
and
dec
dec
aas
lock
movsl
push
ds
inc
xorl
aad
sbb
push
idiv
popa
push
pop
push
ss
loopne
test
out
mov
outsb
inc
sbb
push
rdpmc
pop
imul
scas
repnz
jnp
das
xchg
push
xchg
xchg
push
into
inc
and
and
scas
addr16
pop
mov
ja
adc
xorl
std
lret
test
pusha
jnp
xor
lret
and
jmp
mov
sbb
in
xchg
xor
xcrypt-ofb
cmpsl
sub
push
lea
cmc
pop
ret
xor
mov
nop
push
or
push
movsb
int
test
mov
dec
pop
imul
out
pop
fidivrl
mov
jns
cmpsl
push
xchg
push
push
sbb
cld
xor
leave
dec
movsl
outsl
xor
lds
into
sbb
mov
out
or
aam
xchg
push
pop
test
bound
fldt
insl
xchg
xchg
xchg
push
mov
jecxz
adc
mov
and
ffree
arpl
cld
in
mov
ljmp
add
mov
xchg
xor
xchg
cli
sub
loop
xchg
xor
in
cmc
or
call
push
aas
stc
add
sbb
movsb
in
dec
sbb
stc
adc
cmp
adc
mov
repz
ja
repnz
pop
pop
loop
cwtl
dec
ljmp
ljmp
pop
xor
es
fidivs
push
fwait
enter
and
lea
ficoms
adc
fsubl
scas
shll
iret
iret
in
sub
ret
shl
aaa
adc
out
and
out
sub
mov
mov
les
adc
cmp
adc
leave
sub
cmp
pop
adc
les
xor
or
pop
cmpsb
add
fisubrl
cmc
int
dec
cmp
dec
pop
imul
fwait
js
inc
addr16
or
cwtl
fidivl
js
xor
sbb
lret
xchg
loopne
mov
xchg
repz
push
ret
and
ljmp
inc
add
idivl
xchg
stos
test
cmp
insl
push
inc
lods
push
scas
mov
dec
ret
mov
call
push
jl
enter
inc
adc
pop
push
push
mov
add
lods
sti
test
cmp
mov
data16
popa
data16
aad
push
dec
loop
push
loop
int
mov
xchg
in
or
push
lcall
mov
sbb
inc
dec
push
mov
int3
in
pop
push
mov
aad
mov
cltd
notb
push
out
xor
fwait
das
dec
insb
aas
aaa
and
test
inc
dec
popa
jp
inc
inc
mov
push
mov
or
mov
test
cld
push
mov
or
pop
ret
jl
fiaddl
lock
shll
or
in
lret
adc
sub
mov
or
or
jnp
loop
sub
sub
mov
outsl
stc
xchg
or
aas
lret
shll
and
add
repz
lds
shlb
pop
inc
dec
std
sti
pop
adc
fnstcw
out
and
aas
shrb
lods
jge
push
xor
aad
sub
add
scas
cmp
flds
dec
in
dec
xlat
dec
gs
leave
std
subl
and
jns
pop
or
outsl
lock
enter
push
mov
pop
push
mov
rclb
mov
sub
je
das
outsl
in
lcall
xchg
andl
xchg
ret
lea
inc
fwait
call
imul
push
and
fistl
jecxz
add
xor
pop
push
xlat
sbb
xor
pop
cld
stc
push
push
mov
push
movsl
dec
jne
jp
fisubrs
push
stc
adc
sub
rorb
call
mov
loope
push
xchg
ja
pop
jg
jno
lock
jmp
add
cmp
pop
cltd
adc
pop
sbb
jo
addr16
mov
in
out
lcall
xchg
fnstsw
push
lock
dec
cltd
popa
sub
dec
ja
pop
push
mov
dec
notl
repz
push
lret
pop
xor
repnz
push
cli
aam
jns
sti
shrb
xchg
mov
mov
jns
mov
jns
cmovl
fdiv
jns
int
ficoms
pop
pop
push
fldcw
and
stos
popf
nop
pop
test
or
popa
shlb
jno
std
pop
repz
je
cmp
and
bound
xchg
push
jae
test
pop
jno
jbe
push
cltd
push
sbb
ret
fimull
cwtl
push
clc
ds
sti
dec
adcb
or
mov
cmc
mov
insb
repz
in
into
xchg
jge
ljmp
imul
int3
call
out
xor
cmpsb
fdivrs
fucom
ror
out
add
and
imul
enter
xor
jge
jg
fcmovb
adcl
mov
mov
cmp
in
in
imul
cmp
aam
mov
push
mov
mov
sbb
repnz
int3
mov
rclb
mov
mov
addr16
mov
cmpsb
ret
cli
pop
mov
imul
dec
or
push
cs
cmpsl
xchg
dec
mov
sub
jmp
xor
add
xor
mov
dec
mov
adc
sub
subps
scas
xor
stc
adc
adc
jmp
dec
out
xor
outsl
inc
adc
sbbl
or
jl
xchg
sbb
scas
push
imul
out
fbstp
jle
add
cmc
data16
loope
dec
mov
orl
out
jnp
fidivs
aas
xor
xor
mov
push
insb
lods
mul
or
adc
xor
lahf
mov
inc
rcl
outsb
or
mov
pop
dec
mov
sbb
sbb
xor
jl
xchg
outsb
loop
sub
outsb
pusha
adc
inc
mov
pop
inc
imul
add
in
xor
adc
les
and
xor
or
in
fildll
xor
pop
test
adc
out
mov
aam
stos
in
push
mov
pusha
xchg
push
lret
out
and
js
adc
aad
pop
mov
pushf
jb,pt
clc
mov
daa
jge
mov
jne
add
aam
outsl
jnp
mov
push
add
jmp
or
mov
mov
mov
fstps
sub
out
push
mov
pop
jl
cwtl
mov
jae
pop
pop
lret
mov
xor
inc
daa
lea
addb
add
into
data16
sbb
pop
sbb
scas
mov
mov
leave
test
or
imul
pushl
or
sbb
push
popf
inc
sti
fsubrs
fistl
clc
push
outsb
loop
sti
xchg
xchg
dec
mov
lods
lds
pop
je
aaa
xor
add
and
scas
mov
aam
mov
inc
les
push
add
dec
xor
sub
mov
or
cmp
dec
mov
cmp
jle
and
pop
mov
inc
push
pop
or
and
sbb
test
pop
loope
outsb
sbb
inc
add
stc
sbb
mov
ret
test
push
out
mov
stc
or
jg
push
je
aaa
mov
adc
xchg
cmp
loope
add
xchg
int
pushf
push
mov
daa
mov
adc
push
inc
out
imul
or
jg
jge
or
pop
xchg
cmp
stos
inc
mov
adc
leave
test
cmp
clc
fbld
mov
push
mov
arpl
jge
pop
dec
pusha
sbb
xchg
ds
or
mov
ja
imul
xchg
shlb
and
xchg
adc
nop
cltd
popa
dec
push
movsl
fsubl
cld
inc
xor
mov
ror
imul
adc
insl
cmp
pop
lods
cmp
pop
fdivs
cltd
lods
stc
mov
outsb
push
aaa
je
add
xor
jnp
inc
sub
mov
and
jge
xor
out
lcall
and
test
xchg
mov
ret
rol
ss
sbb
fistl
dec
mov
lock
hlt
lea
notl
and
pop
jno
loop
test
mov
pop
ljmp
fisubl
add
lock
push
pop
aaa
add
mov
andl
dec
sti
icebp
add
or
in
mov
loopne
jmp
adcl
fs
insl
addl
imul
daa
push
jo
incl
daa
pop
repnz
cmp
scas
add
xor
daa
dec
xchg
sub
mov
mov
fcoml
jge
xchg
cld
out
in
mov
push
jne
jmp
jle
cmc
push
movl
xlat
jb
mov
sbb
fcomps
push
out
clc
sbbb
mov
pop
add
push
jns
fmul
pushf
popf
mov
test
sub
mov
push
pushl
sbb
sub
push
sub
jle
rorb
out
mov
fs
adc
push
in
dec
insb
stc
mov
adc
test
dec
sbb
out
les
lods
add
mov
jo
jae
push
repz
pop
cld
pop
sub
push
lods
push
mov
shr
dec
ret
add
loope
shll
pop
push
fcmovb
add
fisubs
jl
loopne
cmc
push
mov
xchg
pusha
xor
push
mov
in
or
pusha
ficoms
jno
push
inc
subl
add
push
sbb
cmp
sbb
mov
scas
xor
jmp
jmp
push
icebp
add
inc
cmp
cli
mov
je
adcl
xchg
sbb
xlat
hlt
cmp
pop
push
sahf
fstpl
mov
sbb
pusha
mov
sub
hlt
cwtl
adc
xlat
xchg
or
enter
inc
sbb
iret
mov
jbe
xchg
clc
loope
mov
sbb
fbstp
pop
inc
hlt
jmp
cli
and
andb
cli
pop
ljmp
or
fidivs
out
adc
sub
xchg
test
pop
add
ret
push
cmpsl
cmp
insl
test
insb
scas
inc
xor
xchg
inc
stos
lea
mov
sub
inc
scas
jge
mov
cmp
mov
inc
or
js
pop
ljmp
das
mov
out
xor
dec
sbb
xor
jnp
shl
push
push
shll
aam
outsl
popf
sbb
mov
sub
and
dec
stos
inc
daa
insl
ret
popa
js
xor
mov
andl
enter
scas
cmp
mov
add
cmp
repnz
jne
xor
inc
cmp
xor
or
mov
shll
ret
jecxz
inc
cs
neg
fidivrl
fisubrl
or
add
push
test
jge
icebp
pop
push
icebp
daa
into
adc
cli
stos
je
in
pop
jle
and
cmp
ds
cmpsb
ret
ljmp
call
jp
pop
hlt
add
les
lret
add
adc
pop
mov
lret
jb
pushf
sub
pop
cwtl
mov
jne
ficoms
push
aas
cmpsl
sub
lret
lcall
sub
rcll
addr16
jo
aam
mov
push
lods
pop
daa
adc
shll
mov
push
int3
lods
push
and
mov
mulb
out
and
mov
addr16
mov
addr16
fwait
int
aam
cwtl
call
popf
dec
int3
or
xchg
ret
daa
movsb
xlat
inc
ds
jl
mov
out
sbb
pop
mov
outsb
mov
test
shl
adc
js
jle
inc
xchg
push
mov
mov
ja
or
and
mov
gs
fwait
mov
lcall
dec
jo
ljmp
sub
cli
jnp
insl
cli
lret
stos
and
dec
push
mov
sub
adc
mov
ja
stos
cmpsb
sub
movsl
push
fmull
xchg
in
out
ljmp
iret
cmp
sti
cmp
out
std
gs
xchg
mov
test
pop
jmp
sbb
adc
cli
imul
das
mov
and
mov
push
mov
dec
inc
add
sbb
loop
lea
inc
mov
outsb
je,pt
add
lret
clc
xchg
push
movsl
xor
int3
shrb
cli
cltd
int3
in
inc
adc
movsl
jne
jecxz
pop
add
sbb
mov
aaa
cmp
adc
xor
jp
xor
insl
sbb
adc
movsl
fdivl
outsb
add
cli
add
or
in
aam
mov
aad
into
add
ret
neg
sahf
mov
popa
pop
aam
cmpsl
xchg
cwtl
and
xchg
sub
insb
in
hlt
frstor
pop
lahf
cld
int3
xchg
xor
mov
mov
dec
aad
into
cwtl
das
nop
push
fbstp
and
mov
lock
xor
lock
icebp
mov
or
mov
stc
or
outsb
es
xchg
xchg
add
mov
pop
bound
inc
add
xchg
popf
xchg
xchg
aaa
xor
jnp
mov
xor
pop
lods
daa
fistl
insl
ja
ljmp
dec
xchg
in
mov
mov
sbb
mov
or
mov
adc
aad
icebp
popf
cltd
push
pop
xor
fldl
push
ds
int
mov
outsl
mov
push
fldcw
dec
int3
xchg
mov
and
mov
mov
xor
xor
rcr
push
test
jecxz
fsubp
push
pop
test
fildll
mov
mov
jg
int3
dec
dec
loopne
mov
sbbb
dec
scas
push
adc
and
stos
xor
mov
loop
add
shrb
ret
push
in
push
test
and
addr16
fnstsw
pop
xor
pop
in
mov
out
xor
xchg
outsl
add
test
nop
xchg
xchg
leave
stos
mov
mov
cmp
imul
mov
ret
enter
jecxz
jnp
stos
push
xchg
and
xchg
scas
lods
leave
add
pop
outsb
and
shrl
adc
mov
clc
stc
push
fimull
mov
add
jmp
pushf
ret
fcoms
xor
dec
movsl
outsb
jnp
sbb
push
dec
sti
inc
pop
and
out
push
xchg
in
add
mov
cwtl
sbb
cld
pushf
or
xorl
cmp
and
mov
sub
std
into
shrl
jl
sti
adc
fldt
mov
nop
dec
daa
cltd
push
mov
xchg
enter
jb
out
enter
pop
or
lahf
sbb
add
sbb
xchg
movsb
insb
pop
imul
mov
mov
popf
outsl
or
mov
arpl
cmp
mov
cmpsb
jg
rcll
pop
insl
push
sub
jge,pn
jbe
xchg
movsb
or
jo
fsubrl
inc
cmp
mov
shrb
scas
outsl
sbb
popf
or
push
inc
pop
cltd
into
das
xrelease
jg
mov
std
test
and
and
mov
adc
add
xchg
data16
jnp
pop
add
add
subl
fdivs
jo
fisttps
mov
cltd
pop
mov
repnz
add
mov
adc
fistpll
adc
dec
iret
and
lods
push
cmp
or
pop
lock
popa
cmpsb
adc
cmp
outsb
jg
rorl
pop
out
and
dec
mov
xchg
adc
push
mov
out
cmp
sub
mov
mov
dec
arpl
pop
push
adc
push
cmp
or
in
mov
xor
jmp
adc
add
jns
popf
and
mov
push
imul
mov
cmp
or
add
repnz
pusha
adc
pop
inc
xchg
pop
arpl
cli
cmpl
push
and
sbb
outsb
xchg
mov
xlat
outsl
dec
fistpl
jp
jle
push
ficomps
mov
inc
mov
pop
faddp
std
js
hlt
ljmp
in
out
ja
ds
hlt
iret
adc
leave
pop
push
dec
pop
mov
hlt
ljmp
or
add
pop
sub
scas
adc
test
xchg
push
mov
bound
ljmp
or
adc
rcl
cmc
popf
fnsave
cmpsb
xor
addl
and
jnp
rcl
or
cltd
stc
mov
dec
negb
dec
xchg
adc
dec
aad
xor
shrb
inc
jmp
lret
mov
aad
out
mov
es
cmp
and
adc
pushf
push
test
arpl
pop
push
movsl
and
popf
and
stos
and
lret
push
or
push
inc
lret
jecxz
jae
jo
mov
lret
int
xor
addr16
std
movsl
popa
roll
lods
out
out
and
xor
mov
xorl
sub
sti
pop
dec
imul
mov
outsl
iret
mov
fimull
sub
jle
sti
fstl
xor
rcrl
iret
pop
mov
cmp
jo
imul
pop
or
push
imul
mov
sbb
mov
push
shll
repnz
mov
pop
insb
js
push
xchg
sti
push
push
aas
mov
cmp
icebp
out
mov
and
mov
sbb
mov
adc
pop
ds
popa
pop
lock
dec
aad
push
repz
repnz
cmp
jg
je
ret
inc
int
xor
cmp
test
adc
jae
fs
stos
jno
add
fdivrl
xchg
adc
jge
out
xchg
adc
push
lahf
mov
clc
add
stos
mov
insb
cltd
daa
sti
insl
popf
jno
mov
adc
iret
fistpl
adc
pop
add
sub
mov
jbe
jle
pop
pop
roll
jns
lret
movzbl
inc
aad
add
sti
or
and
inc
and
daa
fisubrs
mov
imul
adc
popa
mov
mov
jl
mov
mov
clc
inc
ret
add
enter
cmpsb
lret
push
lret
mov
xchg
cmp
or
mov
in
xor
pop
add
fisubl
adc
ret
es
xor
mov
mov
mov
sub
jns
fiadds
push
imul
inc
imul
xlat
ret
xchg
cmp
in
shlb
es
repz
cmpsl
lcall
orb
call
cmp
xchg
dec
leave
ljmp
sub
jae
outsl
cmp
xor
push
pop
mov
adc
mov
into
shrb
sub
stos
cmp
sub
shl
mov
push
or
and
dec
pusha
sbb
dec
sahf
aad
xchg
or
mov
add
fldt
test
push
cli
int3
xor
xchg
divl
xor
xchg
into
inc
decb
and
adc
popa
jae
roll
loopne
push
mov
stos
xor
leave
hlt
pop
or
into
or
dec
inc
xchg
push
or
mov
cmp
lea
xor
loopne
int
jnp
and
mov
movsl
aad
dec
jo
movsb
and
lret
jbe
xor
lods
sub
push
ret
gs
push
xor
leave
inc
mov
mov
fucom
jo
repz
adc
nop
pop
rol
push
aas
mov
imul
aad
arpl
adc
popa
stos
sub
jo
or
movsb
mov
pop
jbe
mov
fstpt
xchg
ja
sbb
or
mov
mov
sub
pushf
mov
push
enter
pusha
jb
les
in
fisubrl
adc
sub
cmp
call
mov
push
fsubr
in
popf
test
cmp
pand
mov
adc
push
push
dec
ja
jg
mov
push
pop
repz
push
dec
repnz
dec
outsb
adc
xor
xlat
and
addr16
daa
cmp
push
mov
mov
xchg
cmp
xchg
mov
lds
jno
andl
sbb
adc
inc
mov
jne
xchg
sub
mov
cld
jle
and
xchg
shll
cmpsb
add
test
scas
jp
push
scas
inc
cltd
adc
sbb
nop
and
pushf
jbe
movsl
push
das
lahf
popf
mov
mov
mov
aaa
into
rorl
imul
mov
xor
cltd
orps
adc
push
mov
out
mov
xlat
cmp
and
fnstsw
xor
shrl
or
lock
test
inc
xchg
or
sarb
sbb
lret
aaa
mov
xchg
cmpb
inc
jno
xor
mov
mov
imul
mov
add
repnz
popa
pop
adc
inc
xchg
inc
out
add
fistps
fistpl
loope
std
mov
daa
lcall
xor
jnp
pop
enter
fsts
cmp
ret
scas
out
data16
enter
mov
push
mov
sbb
ret
inc
ss
cmpsb
xor
testl
cld
iret
jo
out
mov
xchg
test
ja
sub
jnp
imul
cmp
dec
outsl
add
mov
sbbb
push
mov
pop
in
inc
push
sub
xor
pop
xor
push
pop
xor
std
enter
cmp
jmp
cld
leave
xchg
dec
jns
sub
std
imulb
mov
xchg
insb
push
xchg
cmpsl
push
inc
gs
dec
dec
fldenv
les
sub
jne
divps
mov
sub
fidivrl
cli
cmpsl
cmp
pop
rorl
inc
out
pushf
scas
pop
push
xor
xor
add
push
inc
and
cmp
hlt
outsb
mov
lret
iret
and
push
addr16
cwtl
adc
lea
xor
dec
rol
dec
dec
jmp
jb
add
scas
jl
fucomip
lcall
scas
in
in
sbb
outsb
xor
mov
decb
aaa
mov
jmp
aaa
fwait
or
jge
ret
jg
shlb
and
mov
sbb
push
test
jno
xchg
data16
push
xor
fwait
addr16
inc
jp
sub
std
ror
loop
ret
insl
leave
scas
lods
add
adc
lock
adc
jae
in
fisttpl
xor
xorb
es
testb
cmp
dec
iret
repnz
insl
repz
push
shrl
sti
mov
cwtl
lcall
and
leave
andl
cmc
clc
repz
sub
pop
in
pmuludq
ret
mov
rorb
sbb
inc
imul
addl
idivl
data16
shlb
and
mov
in
pop
test
xor
bound
rolb
in
out
sbb
adc
ss
test
pop
xlat
jno
add
cwtl
out
add
popaw
clc
cmc
sbb
dec
sub
ret
adc
cmp
mov
lock
or
incb
or
adc
ja
sbb
pop
jno
sbb
mov
rolb
daa
push
sub
xchg
pop
mov
cld
test
push
mov
pop
pop
lahf
cmp
das
lea
ljmp
fcomp
stc
or
pop
adc
xchg
jge
mov
gs
fisubrs
lds
and
pop
rolb
adc
pop
cmp
jmp
fidivrl
into
pop
ss
das
jmp
gs
leave
dec
cmp
psubb
lret
jge
mov
and
xchg
not
xchg
jecxz
rolb
inc
jns
and
or
inc
pop
lahf
mov
je
mov
insb
mov
cmpsl
popa
enter
andb
in
push
mov
and
adc
testb
loopne
ljmp
pop
push
ljmp
test
mull
pusha
adc
stc
mov
rcl
int3
pop
mov
jae
xor
inc
mov
mov
xor
push
mov
ret
mov
data16
inc
loope
test
xor
cs
xchg
ret
sti
push
and
cmpsl
ret
mov
and
dec
repz
rcr
test
jo
rclb
push
lret
cltd
jne
xchg
aas
lock
mov
fmul
arpl
lahf
jg
addr16
mov
leave
push
xlat
cmp
ret
stos
mov
inc
iret
lret
inc
mov
cmp
mov
dec
jl
pop
stos
dec
nop
add
insl
xorl
sbb
fistl
xchg
mov
dec
je
std
adc
mov
popf
xor
push
mov
inc
repz
push
not
lcall
mov
pop
xor
dec
mov
imull
test
mov
mov
cmp
dec
stos
fcmovne
inc
test
mov
aas
inc
adc
jmp
cmp
adc
push
das
les
int3
out
adc
shl
push
jg
loope
push
scas
ja
loopne
xchg
mov
jbe
insl
sub
xchg
insb
sti
xchg
adc
add
ds
js
push
das
jmp
lret
fisubs
dec
jno
inc
repnz
jge
sbb
lds
adc
notb
fwait
jecxz
or
test
int
sbb
mov
xchg
dec
out
push
lods
or
pop
adc
stc
lcall
adc
inc
in
mov
subl
cmp
mov
jbe
movsl
shlb
inc
dec
mov
push
sub
lock
icebp
sbb
push
pop
mov
sub
inc
out
and
int
stos
sbb
sahf
arpl
push
inc
xor
scas
adc
imul
pushl
sub
outsl
and
gs
mov
jg
push
popa
dec
inc
leave
dec
push
pop
add
and
fisubrl
ss
mov
cwtl
call
inc
sub
push
sbb
sbb
scas
xchg
xorl
xchg
push
popa
insb
inc
adc
popa
xchg
movsb
pop
or
iret
dec
stos
int
js
xchg
loopne
sbb
or
test
dec
xor
fildl
out
mov
fidivs
inc
or
pop
pop
pushf
pop
add
cltd
ja
rclb
idiv
fldlg2
jp
aas
in
and
xlat
xchg
add
sub
clc
test
out
adc
push
scas
in
movsl
outsl
lret
add
icebp
and
cmp
xchg
stos
mov
or
sbb
mov
and
lahf
lods
adc
mov
or
imul
cld
out
push
lahf
cmp
adc
out
pop
movsl
in
mov
sarl
fcmovbe
int
test
push
xchg
and
ja
pop
test
adc
test
mov
iret
xor
enter
cmp
nop
xchg
pop
fldt
fdivs
lcall
das
pop
inc
loope
scas
sahf
cwtl
mov
mov
adc
cmc
mov
adc
cli
dec
jno
stc
push
das
sub
insl
push
jmp
dec
imul
xor
mov
sbb
sbb
mov
lods
mov
jg
test
bound
rcll
jno
cli
lods
test
adc
push
js
push
jne
or
mov
jmp
inc
xchg
popa
pop
add
rolb
pusha
adc
cld
outsl
jns
popf
sbb
adc
cmpsl
pop
icebp
mov
shlb
psubusb
decb
adc
mov
cwtl
or
inc
or
push
mov
add
cmp
xorb
mov
jle
test
icebp
dec
inc
push
fdivs
repnz
and
xchg
in
and
xchg
in
add
or
movsb
mov
outsl
xlat
jae
pop
cwtl
pop
add
cmc
fldl
test
enter
xor
ret
imul
pop
xor
push
loopne
jbe
xor
xchg
daa
sub
js
imul
jnp
or
cmp
ficomps
push
sub
xor
mov
aad
aas
add
in
int3
sbb
pop
and
fmull
outsl
icebp
jg
push
xchg
imul
data16
fildll
or
xchg
repz
and
sbb
lods
nop
imul
dec
xchg
icebp
and
data16
push
pop
jb
adc
out
jne
pusha
xchg
push
mov
fisttps
inc
sub
xor
sbb
push
cmc
jp
loope
loopne
pop
sub
push
pop
arpl
es
mov
xchg
push
push
ss
aas
out
popf
pop
cmp
hlt
add
cmp
pop
jns
mov
dec
stc
cmpsb
dec
push
pop
loop
std
sub
cmpb
pop
into
ljmp
mov
or
stc
and
ljmp
adc
out
imul
ret
sysenter
xchg
push
cmp
pop
test
sbb
jbe
pop
insb
jl
lock
push
add
pop
imul
int3
jbe
add
test
int
push
bound
mov
inc
jnp
lds
rol
push
dec
shl
mov
push
mov
cmp
pop
dec
frstor
cmpsb
jge
xlat
fsubrs
push
pop
in
sub
ds
xor
dec
lcall
mov
out
test
cltd
jno
sbb
push
sub
ljmp
pushf
cwtl
nop
std
and
pop
mov
fdivrs
jge
lret
fldcw
jecxz
not
jmp
addb
mov
dec
cltd
push
rcrb
ljmp
add
rcll
gs
push
test
xchg
adc
or
sbb
int
mov
sbb
test
movb
ja
stc
lods
cmp
jg
movsl
push
jmp
adc
iret
call
and
lret
jae
decb
mov
jle
lahf
js
out
fwait
test
cwtl
jbe
lret
lea
daa
int
out
clc
in
jns
dec
jae
sub
mov
push
icebp
cli
mov
jl
outsb
mov
outsl
loopne
mov
aad
das
test
inc
cmp
es
jo
pop
push
in
std
pop
cwtl
and
ret
cmp
jnp
jbe
or
pop
rcrb
jns
jl
or
lock
cwtl
inc
add
insb
cmpsl
shlb
lds
mov
outsl
test
cli
jle
mov
pop
jbe
mov
mov
iret
mov
mov
or
or
pop
enter
or
add
push
cmp
rcr
mov
jle
or
fwait
mov
and
fadd
fisttpl
push
scas
stc
sti
mov
mov
jp
xchg
int
out
and
add
loope
ss
pop
int3
dec
sbb
sub
sbb
shll
push
aam
fisubl
fistpll
dec
pop
js
add
lahf
push
lds
call
cmp
adc
dec
jae
loopne
stos
mov
test
mov
dec
gs
adc
add
cmp
mov
cmc
inc
push
test
lods
lea
sbb
jg
mov
out
inc
or
lock
xor
stos
inc
scas
dec
stos
enter
mov
sub
out
add
pop
or
ljmp
push
mov
pop
push
mov
stc
repz
add
popf
fistpl
andb
adc
pop
jge
daa
mov
mov
dec
sub
mov
add
lds
cld
lods
mov
lods
adc
push
in
xor
les
xchg
nop
sub
jae
fisubrl
popa
xchg
push
cmp
int
test
inc
xor
negb
ret
cs
clc
imul
cmpb
mov
pop
loop
mov
or
std
or
ja
ja
leave
test
mov
cs
xor
sub
loop
sbb
mov
and
testb
shld
xchg
out
pop
shlb
xor
aam
js
ret
rcl
mov
sbb
xor
push
fnstenv
mov
xor
xor
mov
adc
xchg
sub
mov
sub
ja
sub
or
sbb
jne
lea
mov
inc
and
mov
test
lret
lods
call
ds
mov
pop
ja
xor
mov
adcl
cltd
adc
pusha
in
fwait
aas
mull
addr16
lretw
sbb
lea
or
das
in
call
lods
jl
push
inc
pop
pop
mov
in
stc
mov
mov
stos
push
mov
adc
in
jmp
lea
shll
pusha
in
ljmp
pop
adc
shrb
jo
outsl
jns
filds
mov
xorb
aas
mov
xlat
inc
scas
scas
gs
jb
jmp
std
stos
push
or
es
mov
sub
push
out
push
mov
mov
inc
shrl
testb
and
das
loopne
inc
pop
sbb
add
mov
jbe
outsl
repz
cwtl
data16
push
push
mov
jnp
inc
mov
dec
int
jmp
mov
add
sub
push
in
mov
add
cmc
enter
das
mov
jb
loope
xchg
iret
incb
pop
cmp
adc
mov
mov
fwait
insb
sti
addr16
mov
mov
cwtl
sbb
dec
ljmp
popa
xchg
test
mov
in
arpl
je
in
scas
dec
imul
mov
clc
scas
subl
js
lahf
rclb
into
dec
jmp
enter
cli
into
push
mov
loope
popa
mov
push
.byte
push
.byte
