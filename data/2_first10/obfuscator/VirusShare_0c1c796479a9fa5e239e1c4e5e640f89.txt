push
call
ret
ret
lods
xchg
and
es
cmp
push
mov
mov
ret
in
mov
mov
cld
inc
in
pusha
mov
fnstsw
push
or
rorl
mov
test
repz
and
and
pop
cmp
jno
fnstsw
in
or
cmc
sub
inc
mov
jle
push
or
sub
lcall
scas
ljmp
cmc
pop
xor
scas
popf
ret
gs
aas
sahf
add
sar
dec
sti
cmpsb
sub
in
int3
cli
cmp
pop
inc
sbb
stos
outsb
ds
sbb
mov
je
lea
pop
gs
lret
fnsave
pop
mov
pop
jb
and
pop
into
inc
cmpb
push
cmp
lea
push
stc
sub
out
and
loop
jb
into
popa
cli
dec
xchg
addl
stos
push
fwait
out
stos
adc
sub
push
adc
mov
mov
nop
lret
pop
jbe
imul
xchg
shrb
sub
sbb
dec
mov
sub
pushf
adcb
movl
cwtl
into
xor
cmc
pop
aas
aad
sbb
jecxz
or
adc
ljmp
ljmp
mov
in
push
and
push
dec
cmp
jl
clc
fiaddl
inc
pushf
dec
test
aam
leave
jno
pop
popa
pop
sti
adc
pusha
jbe
repz
mov
inc
inc
and
test
pop
hlt
or
mov
pop
push
sbb
add
sbb
scas
subl
lock
or
icebp
adc
jl
movsb
inc
mov
xor
jno
shrl
mov
in
mov
aaa
mov
adc
xchg
movsb
sahf
das
sahf
nop
pop
roll
ret
and
xchg
hlt
push
sbb
ret
and
inc
cmc
cmp
adc
ljmp
cld
jp
es
mov
jne
pop
cli
pop
out
mov
cmc
in
sbb
test
dec
fs
adc
jns
fbstp
cli
mov
jbe
jno
dec
cmp
stc
xorb
sarl
dec
mov
aaa
outsb
and
mov
inc
jmp
js
cmc
mov
push
pusha
xchg
jno
rol
fdivl
jbe
mov
add
std
std
test
dec
push
push
push
or
xchg
test
push
pop
add
inc
or
and
add
dec
std
or
in
pushl
mov
daa
fwait
stc
movsb
ljmp
test
xor
cmp
xchg
dec
sahf
mov
aas
popa
repz
loop
jp
gs
jg
cmc
rorb
rcll
sub
inc
out
or
adc
xorb
addr16
mov
enter
mov
shrl
fisttps
pop
sbb
in
sub
mov
xchg
and
jne
pusha
xchg
mov
mov
aaa
cltd
xchg
aad
stc
or
stos
inc
shrb
and
mov
lds
and
aad
add
mov
lock
add
and
and
add
mov
sar
in
subb
test
in
jl
xor
xchg
movb
pop
xchg
add
sub
mov
insl
xchg
sti
xchg
js
imull
mov
adc
or
mov
arpl
mov
stos
pusha
xchg
inc
cmp
hlt
mov
outsl
loop
pop
int
sahf
lds
cmp
xchg
out
dec
sub
cltd
out
out
in
subb
push
out
mov
lcall
push
add
pop
sbb
add
call
xor
repnz
inc
loop
les
insl
sbb
aam
mov
pop
and
inc
dec
mov
push
pop
leave
pop
daa
pop
xor
fsubrl
out
add
jne
es
aam
xor
dec
cmp
lahf
imul
push
mov
mov
mov
xor
xchg
insl
xchg
pop
jge
mov
lret
xor
ss
repnz
sbb
sbb
call
xchg
push
lahf
aas
int3
lret
sahf
xor
pop
jmp
cmp
inc
pop
inc
lds
int3
std
mov
in
and
jbe
fcompl
adc
jp
push
and
or
cmp
jb
inc
sbb
scas
out
fdivl
leave
lret
jno
mov
jl
mov
xchg
mov
test
stc
push
subl
inc
jns
add
xorb
shrb
nop
pop
xchg
xchg
sbb
jb
mov
pop
ret
loop
adc
icebp
in
dec
jne
dec
push
outsb
rorb
xor
test
cltd
xchg
push
imul
loop
sti
out
addr16
push
dec
dec
popa
inc
in
pop
sbb
mov
mov
and
inc
sbb
ret
mov
ss
int3
sbb
push
aas
imul
adc
imul
pop
dec
les
fdivrl
sbb
pop
and
mov
sbb
insl
aam
mov
dec
je
lahf
inc
jnp
push
xor
xchg
push
or
dec
mov
push
sbb
cmpsl
loope
imul
xchg
cld
je
js
rcl
roll
jge
or
call
xadd
dec
adc
xchg
movsl
fnstsw
mov
pop
and
jno
xchg
inc
inc
sub
dec
cmp
movsl
mov
jnp
jl
jl
push
popa
and
and
popf
inc
mov
or
lahf
testl
jecxz
mov
jbe
decb
lods
mov
sub
insb
cmpsb
sbb
icebp
mov
mov
jmp
cmp
inc
pop
das
arpl
jge
andb
adc
gs
imul
pop
out
sub
sub
mov
lock
push
shl
add
xor
push
mov
outsl
add
mov
xchg
rcll
dec
out
lock
jae
lret
cmpsb
add
shl
inc
ds
mov
mov
adc
bound
push
aaa
sbb
dec
jae
incl
sti
out
popf
cltd
dec
insl
int
mov
js
cmp
movb
sub
vaddps
mov
sub
aam
aad
int
loop
subl
fwait
cltd
in
sub
nop
mov
dec
sbb
icebp
adc
pop
cs
out
xchg
pusha
dec
sub
addr16
mov
test
jge
and
mov
xchg
addb
bound
adc
adc
pop
clc
movsb
and
mov
mov
jno
mov
mov
inc
loope,pt
out
cmp
aad
or
mov
add
lock
pop
data16
out
stc
xor
dec
xchg
aaa
scas
jle
sub
jno
jae
pop
test
inc
dec
out
divl
sar
mov
loopne
cmp
into
repnz
insl
lods
mov
add
loopne
ret
push
cmp
ss
hlt
in
rorl
popa
adc
jmp
repnz
mov
mov
cmp
out
fisubl
xchg
fucomp
push
int3
mov
inc
fdivr
jmp
or
mov
imul
or
add
mov
imul
clc
push
add
jecxz
insb
pop
pop
enter
inc
mov
push
rcll
insb
notb
cmp
pop
dec
adc
out
inc
mov
sub
das
or
aam
pop
daa
mov
fs
push
xchg
insb
sub
adc
and
jg
jmp
in
das
inc
pop
and
sahf
mov
and
add
mov
rcr
dec
jne
loopne
push
xchg
out
das
shr
dec
xchg
insl
cmp
sbb
and
pop
lahf
js
dec
xchg
movsl
cmp
loop
adc
push
xchg
or
cmpsl
mov
xchg
ret
adc
push
lock
xor
insb
mov
dec
stos
jns
xor
add
andl
mov
aaa
xchg
pop
bound
mov
xchg
sahf
sub
xor
mov
aam
cmp
and
dec
dec
hlt
ljmp
or
mov
or
into
roll
enter
repnz
movl
imul
sti
mov
sub
xchg
test
mov
ret
loop
push
xchg
adc
mov
icebp
push
pushl
les
cs
mov
push
jns
dec
push
xor
jne
cmp
testb
je
xchg
stos
and
gs
mov
les
jmp
pop
xchg
test
testb
add
imul
andl
or
add
mov
jnp
pop
jecxz
lret
stc
xor
fwait
xchg
es
iret
pop
xchg
lret
lcall
and
jg
ss
out
inc
test
movsb
in
xor
mov
jg
inc
xor
xchg
call
stos
scas
es
dec
es
xor
lahf
sub
or
imul
pop
jmp
stos
dec
es
add
ds
fistps
mov
test
push
fbstp
jbe
add
push
in
lods
jno
xchg
pop
sub
push
xor
lock
gs
jmp
adc
fldenv
test
pop
sub
xchg
jmp
xor
sbb
rorl
jb
mov
fldt
shll
push
adc
adc
mov
adc
xchg
aad
bound
pop
lods
dec
rolb
dec
and
rcrb
imul
mov
mov
cmp
stos
and
out
sahf
dec
mov
mov
mov
add
xchg
outsb
sub
xchg
dec
mov
sahf
xchg
push
jecxz
scas
adc
das
pop
mov
mov
and
ss
clc
push
ror
sub
enter
aad
inc
mov
dec
xchg
push
cmpsb
pop
js
jo
fnstsw
pop
mov
stc
mov
sbb
std
mov
insb
lock
in
orl
dec
dec
cs
loopne
jle
das
in
xchg
lods
inc
jne
mov
loope
subb
xchg
push
push
incl
test
inc
xchg
sub
xchg
scas
mov
into
repz
stos
mov
and
fdiv
outsl
adc
mov
mov
mov
push
loopne
ret
lods
mov
lods
shlb
sbb
inc
add
and
sbb
or
out
jae
ss
and
cwtl
xchg
mov
mov
inc
push
loope
out
dec
imul
arpl
add
cmpsl
jne
jne
pop
or
xor
lret
pusha
pop
adc
rcrb
inc
je
xor
inc
lahf
out
sahf
sbb
popa
dec
in
cmc
xchg
mov
mov
push
sbb
mov
orb
sub
sbb
and
cmp
aas
add
cld
aam
ja
cmp
jbe
es
pop
mov
loope
and
ror
nop
inc
adc
cmp
je
inc
fsubl
das
adc
scas
lods
mov
sahf
in
and
inc
add
cmovnp
mov
xchg
cmpsb
lahf
ds
mov
mov
push
cmp
cmp
inc
mov
xor
aas
out
mov
cmc
scas
int3
pusha
dec
mov
das
xor
cld
andl
div
stos
ja
sub
push
in
push
add
mov
xor
scas
stos
repnz
add
ss
lret
cmp
push
pop
into
in
cs
adc
pop
arpl
pop
sbbl
sbb
cmp
push
xchg
add
push
pusha
fisttpl
scas
ror
sbb
xchg
push
mov
insb
out
mov
shrb
icebp
fstpt
push
les
rcll
cwtl
adc
and
xorl
fldt
sub
cmp
push
adc
push
data16
fsubrs
cld
lea
add
push
fwait
in
mov
cmp
clc
lcall
out
xchg
adc
inc
push
xor
inc
std
outsb
clc
movsb
call
inc
iret
cmp
dec
mov
xchg
in
fisttps
test
pmulhw
push
mul
mov
ds
jg
imul
test
jle
ret
enter
gs
cmp
pop
jmp
jbe
cltd
cld
mov
pop
test
adc
loopne
push
xlat
lock
cmc
mov
xor
sbbl
add
test
or
insb
cld
dec
fistl
inc
shll
imul
and
int
jl
mov
inc
cmp
pop
lods
scas
cmp
mov
pop
jge
mov
dec
loopne
jne
and
jl
push
mov
sbbw
add
xchg
dec
add
xchg
mov
stc
lcall
fldl
nop
xor
call
dec
cmc
fisubrl
inc
and
ljmp
push
dec
cmp
or
mov
cmp
lods
rolb
mov
mov
jl
adc
movsb
push
lcall
jne
mov
jne
lahf
inc
ljmp
fs
lods
mov
or
std
fbstp
les
into
jl
jmp
mov
inc
int
movsl
sub
mov
adc
pop
fsts
inc
popf
mov
and
mov
push
xchg
jb
sahf
shrb
xchg
int3
cmpsl
cmp
rorl
pop
lds
lds
jmp
add
cs
jg
sbb
pop
inc
xchg
jno
xchg
mov
and
dec
fdivs
mov
aas
inc
insb
stos
popf
icebp
or
push
out
mov
sbb
jge
or
jb
adc
pop
fwait
mov
jb
mov
test
xor
mov
or
inc
mov
inc
adc
clc
mov
ljmp
int3
stos
leave
loop
cltd
and
stos
inc
sub
movsb
movl
push
pop
daa
dec
xor
cwtl
mov
xor
gs
xor
ret
test
ja
xchg
das
sub
notb
or
or
mov
loop
xrelease
popa
mov
mov
xchg
fistl
mov
lock
xor
add
xorb
dec
mov
mov
enter
xchg
xchg
sbbl
in
mov
sbb
repz
dec
loopne
sbb
leave
ss
repz
mov
int3
mov
cmp
jg
popa
jle
add
mov
sub
loopne
inc
orb
andb
add
jl
jbe
mov
cmp
lock
and
mov
or
pop
pushf
lret
daa
mov
dec
or
movups
mov
mov
add
loope
or
shl
imul
inc
xlat
xchg
je
icebp
jl
popa
test
xchg
sub
repz
cmp
cli
sbb
push
loopne
mov
jno
inc
xchg
scas
test
jg
aad
jmp
xor
in
arpl
cmp
xchg
jbe
xor
rorb
add
repz
mov
lcall
inc
jae
pop
outsb
xchg
shll
divl
imul
popa
sub
and
mov
xchg
js
sarb
adc
pop
and
cmp
fwait
and
push
das
les
mov
popa
pop
or
adc
insb
adc
jbe
add
cwtl
dec
enter
mov
pop
jmp
popf
movsb
jno
shrb
mov
inc
fildl
cmp
loope
enter
mov
incb
gs
mov
xchg
push
xchg
test
dec
dec
sbb
xor
and
jle
sub
pusha
int3
pushl
dec
and
jb
pop
pop
mov
add
push
ds
mov
mov
xchg
repnz
pushf
jecxz
lds
hlt
repz
add
and
push
add
rorl
jmp
js
cltd
cli
inc
inc
xchg
pop
arpl
inc
xor
iret
mov
or
fs
sbb
cs
sub
lahf
mov
sub
iret
dec
imul
inc
and
cmp
sbbl
jle
adc
flds
jp
inc
out
pushf
xor
sub
adc
sbb
xchg
pop
pushf
sbbl
movb
aaa
mov
mov
shll
jae
mov
sub
push
add
pop
insl
dec
inc
mov
leave
cmp
push
adc
push
es
sbbb
or
mov
mov
cmp
fs
mul
add
addl
sub
push
dec
js
sub
inc
inc
rorb
mov
jbe
mov
pop
inc
add
cmp
addr16
and
stos
push
adc
cli
mov
mov
push
mov
shrb
add
push
sbb
into
sub
cmp
bound
pushf
mov
and
roll
cmp
xchg
pop
cmp
into
inc
out
pop
adc
inc
shlb
sti
decb
pop
mov
aaa
xor
movb
cs
mov
sub
cmpsl
in
repz
sub
addr16
xor
fmul
jmp
loop
call
jo
icebp
test
fmull
sahf
push
dec
mov
push
jbe
cmp
and
rcr
bound
sub
stc
loope
sub
xchg
dec
xchg
push
ds
fs
inc
xchg
mov
movsl
arpl
cmp
mov
jg
hlt
cmp
rol
fstps
lods
call
ja
cmp
jo
daa
add
sbb
lahf
inc
stc
jl
ja
out
lds
cmpsl
stos
pop
ror
icebp
insl
sbbl
testl
sub
mov
jbe
sbb
push
xchg
jle
xor
into
mov
add
shr
push
out
pop
xchg
cs
cltd
enter
mov
inc
pop
cmp
arpl
in
cmp
aad
xor
outsl
data16
testl
js
mov
je
add
out
aad
leave
cltd
js
or
imul
xchg
mov
sub
popf
int3
xorl
popf
cmpsl
stos
scas
jge
or
mov
and
cmp
es
push
dec
and
lods
adc
sub
les
call
addr16
add
out
cmp
imul
sbb
js
push
or
aad
aas
mov
lods
dec
mov
pop
add
xchg
hlt
les
iret
push
addr16
add
pop
inc
out
pop
enter
mulb
mov
mov
ja
adc
adc
sbb
test
test
gs
jecxz
shlb
inc
sub
lret
sbb
loope
push
popf
repnz
cmp
fcmovu
pop
jmp
out
hlt
mov
mov
sbb
jle
pop
adc
cmp
ss
and
fstpt
inc
out
mov
mov
pop
int3
push
fisttpll
or
xchg
mov
or
lea
mov
or
sahf
bound
andb
push
fs
repnz
icebp
dec
cli
inc
rolb
lods
xlat
les
int3
and
adc
scas
or
mov
add
stos
fdivr
push
pop
divl
imull
out
test
mov
fidivs
in
test
push
or
and
addr16
cmp
xchg
push
lds
jecxz
xor
testl
pushf
outsb
push
imul
js
fldl
push
bound
out
test
mov
pop
sub
jne
fdiv
and
cmpsb
bound
ss
xchg
adc
push
or
sub
xchg
std
inc
or
xchg
sub
push
lret
fldcw
sbb
movsl
push
add
pop
adc
dec
lret
xchg
mov
xchg
test
in
aad
or
mulb
dec
jns
imul
ret
push
daa
mov
jl
mov
jnp
and
sub
jecxz
int
add
adc
push
or
cmpsl
in
sub
xor
mov
js
add
ficomps
mov
xchg
shrb
into
lods
dec
arpl
daa
ljmp
cmpsl
xchg
add
loope
out
dec
scas
jbe
fstpl
scas
mulb
les
inc
mov
mov
add
call
stos
xchg
mov
nop
aad
cld
aaa
gs
out
pop
or
xor
leave
imul
js
xor
inc
out
cli
xchg
pop
lahf
cmp
shll
inc
fnstsw
adc
shlb
jmp
arpl
jns
add
lret
rcrl
movsl
sub
push
insb
xor
sub
repnz
mov
fidivrl
sub
dec
mov
test
push
mov
ds
mov
jne
mov
in
cmp
cmp
fs
mov
mov
or
mov
push
popf
ret
dec
xor
hlt
xchg
mov
cmp
lods
adc
loop
pop
data16
xorl
jge
out
xchg
adc
mov
jno
push
int3
push
loop
mov
xchg
mov
imul
mov
jmp
loop
movsl
dec
aaa
push
xor
in
adc
sub
jecxz,pt
ss
mov
in
jmp
and
sti
rclb
imul
mov
fistps
and
aad
lods
lahf
jge
mov
dec
sub
jl
inc
xor
outsl
sub
ljmp
roll
jge
mov
stc
jg
pop
mov
bound
jb
mov
pop
inc
insl
aam
mov
je
mov
xchg
dec
and
test
mov
mov
xchg
int
xchg
push
xor
les
popf
stos
icebp
add
scas
movsb
or
dec
hlt
pop
stos
xchg
add
cmp
lea
jae
pushf
movsl
adc
xchg
lcall
xor
mov
xor
add
xchg
bound
clc
mov
adc
jp
shl
dec
mull
add
int3
cmp
ss
outsl
xchg
mov
nop
mov
lock
mov
ljmp
call
add
push
add
cmp
adc
shlb
push
and
es
test
aas
dec
arpl
cmc
xchg
pop
movsl
sub
pop
jge
loopne
inc
mov
cmp
inc
in
fdivrp
xor
sbb
fwait
jmp
xor
cld
adcl
or
adc
scas
xor
sub
lds
lods
ja
push
rcrb
jae
outsl
roll
or
call
fstpl
stos
aaa
repz
pop
mov
push
fxch
jne
inc
loope
fmul
int
cmpsl
popa
popw
sub
xchg
cwtl
ficoms
mov
insb
jmp
mov
pop
mov
xchg
ret
mov
dec
mov
enter
pop
sahf
inc
decl
ret
inc
mov
mov
ficoms
mov
pop
push
mov
push
sbb
lahf
xor
adc
insb
shl
sbb
mov
repnz
mov
inc
inc
je
inc
jle
bound
dec
pop
stos
jae
add
or
rcr
out
dec
mov
xchg
mov
fsub
pop
xlat
cmp
push
test
pop
adc
jb
cmp
sti
dec
mov
int
cmpsl
rorl
pop
insb
jo
mov
sbb
mov
sahf
imul
cmpsl
push
insb
lcall
cltd
popa
jb
pusha
jb
fstpt
xor
xor
out
push
mov
pop
mov
repnz
inc
add
jnp
mov
xchg
stc
cmpb
imul
js
or
testb
int
add
std
xchg
and
fidivl
push
fidivrl
lcall
fs
add
or
out
or
sbb
je
mov
push
sub
and
jecxz
outsb
addr16
dec
idiv
gs
out
lret
cmp
movb
mov
dec
out
pop
push
mov
mov
into
test
js
push
push
mov
dec
xchg
pminub
lcall
cmp
cmp
cmc
xchg
mov
or
stos
mov
pusha
andb
mov
mov
incl
sbb
push
mov
mov
pop
pop
cld
sahf
lahf
sub
push
pop
push
dec
gs
fcomps
and
xchg
xor
mov
jae
add
popf
scas
imul
inc
je
dec
push
stc
lock
mov
push
push
mov
mov
add
adc
jg
idiv
add
jno
push
rcll
incb
pop
shl
jo
daa
das
sub
aad
cmp
int3
xchg
mov
mov
in
bound
inc
lock
push
dec
add
push
push
cmc
dec
pop
jb
out
xor
xchg
aaa
inc
addb
or
aad
ret
xorb
shlb
nop
jl
pop
fistl
das
xchg
movsl
hlt
sbb
sbb
imul
test
ds
push
mov
mov
das
inc
rcrl
mov
xchg
and
scas
pusha
xor
adc
xor
mov
hlt
pop
or
adc
outsb
add
push
int3
or
dec
sbb
data16
icebp
clc
test
jnp
in
push
ret
push
jne
dec
popa
xor
incl
insl
sahf
cmc
mov
lahf
xor
cwtl
sbb
mov
cltd
dec
and
adc
test
hlt
icebp
shll
cwtl
adc
into
insl
sub
jb
or
xor
xchg
sub
mov
aas
jne
repnz
fisttpll
sahf
stos
inc
mov
adc
in
lcall
push
cmpsb
inc
mov
jge
fnstenv
jle
mov
ss
std
xchg
pusha
mov
inc
fwait
and
cmpsl
lret
sub
jo
mov
pop
aaa
mov
fnstcw
xor
outsl
lahf
push
ror
loop
repnz
addb
lret
and
outsb
in
jno
hlt
or
es
hlt
divb
aas
mov
mov
mov
push
jns
add
add
mov
xchg
and
pushf
scas
gs
lock
jnp
imul
sbb
stc
fcompl
add
into
xchg
sub
arpl
adc
cmp
dec
insl
jge
shll
push
out
mov
dec
out
gs
cmpsl
sbb
mov
jb,pt
inc
ret
dec
lock
sub
mov
sarb
xchg
cmp
and
gs
dec
pushf
push
jne
add
xchg
popf
cli
test
lcall
jg
jbe
leave
dec
mov
orb
sub
mov
and
push
aas
add
push
cli
add
mov
sahf
cmp
es
mov
cmp
stos
stos
pop
and
test
into
loop
rorl
sbb
cmp
test
movsb
and
pop
dec
fstl
xchg
ja
nop
in
jle
jne
xchg
or
mov
xor
mull
icebp
fimuls
jns
cwtl
loope
jns
stc
shll
fidivs
pop
orl
addr16
add
repnz
jg
xor
jmp
mov
jmp
int3
adc
in
addr16
imul
mov
push
sti
push
xchg
inc
jno
ffreep
ljmp
addb
bound
pop
jecxz
les
lahf
cmp
adc
lock
pop
adc
adc
mov
jmp
popf
fidivs
inc
mov
adc
jne
push
enter
out
pop
jge
stos
clc
mov
test
xor
mov
pusha
je
pushl
lcall
sub
sarl
jmp
sbb
sbb
mov
pop
bound
outsb
stc
insl
or
mov
cmc
test
sub
xchg
stc
mov
mov
sub
out
xchg
sub
sbb
stos
test
cs
test
clc
push
xchg
jp
fcomps
mov
sub
in
subb
out
mov
jo
inc
repnz
sub
xor
test
xchg
mov
jnp
cmp
push
inc
cld
hlt
in
in
addr16
hlt
pop
daa
lret
fs
xor
ja
int
test
mov
mov
push
push
xor
outsl
dec
mov
dec
mov
mov
pop
adc
adcl
testb
stos
mov
cmp
push
or
inc
xchg
lods
test
in
out
mov
lahf
cmp
pop
mov
cmpsb
xchg
pop
push
mov
scas
outsb
mov
out
xor
or
cmp
sub
cltd
icebp
mov
stos
inc
inc
xchg
in
adc
inc
inc
movsl
add
mov
xor
stos
pop
push
ljmp
lock
movsb
cmp
outsb
mov
xchg
add
pushf
cmc
fiaddl
mov
out
rclb
seta
cmp
add
sbb
mov
jge
sarb
mov
or
add
mov
jne
dec
mov
test
mov
sbb
push
mov
jns
mov
or
and
adc
sub
enter
sub
or
mov
lahf
sbb
sub
and
adc
xchg
insb
sub
clc
fcmovbe
cmp
rcll
popf
cmpsl
gs
xorl
xchg
push
aas
inc
jmp
negb
xchg
jns
cld
lods
dec
xor
ja
sbb
inc
sub
adc
adc
lods
pop
jl
ret
and
push
stos
jo
dec
jnp,pn
hlt
out
andb
fistps
ja
and
sbb
push
cmpsl
pushf
mov
addl
in
bound
push
cmp
fldl
xor
das
and
mov
testb
mov
std
push
xchg
shl
iret
fdivs
fucomip
cmp
and
movaps
loopne
hlt
stos
add
pop
outsl
int
out
aas
pop
pusha
inc
jmp
in
adcl
sub
add
xlat
jns
jnp
imul
icebp
ja
lahf
mov
popf
push
mov
aad
inc
add
xchg
das
fs
rol
rcrl
dec
loop
addr16
aas
xchg
test
cltd
mov
push
ret
push
xor
xor
sbb
cs
mov
adc
sub
mov
lock
rclb
and
fsubrl
inc
jae
cmp
jno
es
lret
xchg
jbe
enter
cwtl
gs
in
lds
xchg
hlt
mov
gs
sbb
jp
cmp
lods
jne
stos
lods
pusha
push
test
movsl
lods
mov
mov
mov
mov
pop
or
lahf
push
pop
mov
cli
mov
ljmp
lcall
mov
std
arpl
test
aas
movsb
xchg
gs
cltd
pop
xchg
lds
push
mov
shrb
and
jp
addr16
and
mov
mov
fwait
insl
loope
test
jns
ret
cmc
cs
iret
cmp
popf
loop
pop
call
out
push
push
mov
movb
movsl
std
mov
inc
ljmp
loop
movsl
xchg
lahf
psrad
outsb
outsb
test
rcrl
adc
imul
jmp
daa
jle
pop
jmp
inc
push
cmp
out
subl
inc
stos
out
sgdtl
jbe
sbb
cmpsb
push
mov
and
xchg
test
mov
jne
aaa
xor
jbe
add
cld
adc
lods
xchg
push
call
mov
rorb
mov
sarl
outsl
out
jns
ret
cld
movsb
rcrb
cltd
enter
and
ds
jne
pop
pop
fbstp
adcl
lret
mov
out
dec
stc
test
call
push
ljmp
ja
cmp
ret
push
xor
mov
push
test
xor
setp
mov
imull
sti
insb
cmpsb
pop
ds
mov
add
jge
fimull
inc
push
xlat
es
cmp
pop
je
mov
cmpsb
cld
mov
inc
or
enter
in
inc
xchg
jmp
pop
mov
cltd
rolb
sbb
adc
adc
ret
test
push
lock
dec
lods
mov
xorb
lahf
sub
cmp
js
mov
mov
inc
pop
lods
mov
sub
jmp
mov
add
lea
ds
adc
leave
mov
mov
ljmp
jo
ret
in
cmp
adc
push
ret
mov
imul
das
sub
dec
mov
dec
incl
fstpt
fidivrl
push
dec
fcoms
push
xor
fistpll
jmp
jmp
das
push
aaa
inc
sub
idivl
subl
popa
cmp
mov
pushf
mov
sub
cmp
jne
xor
in
test
std
add
or
aas
sti
push
in
outsb
sub
add
and
es
ss
cs
mov
loop
movsb
mov
insl
push
outsb
gs
enter
mov
subb
adc
daa
mov
jae
add
cmc
enter
notl
test
ret
inc
fimull
and
mov
mov
fisubs
pop
jns
cmpl
mov
iret
dec
xchg
and
inc
adc
jmp
out
ljmp
xlat
ljmp
and
lds
cmc
adc
inc
xlat
jne
cmp
inc
inc
ja
xchg
in
imul
cmpsl
cmpsl
insb
les
cld
mov
add
les
sbb
xchg
pop
mov
js
jmp
fnstsw
push
and
das
xchg
xor
out
aad
incb
sbb
lods
imul
inc
cs
inc
sbbb
mov
jbe
add
stos
and
or
std
loop
loop
adc
xchg
incl
repz
aas
rcrl
sbb
sbb
xchg
mov
pop
ss
and
shlb
imul
or
sbb
push
add
stc
pop
pop
mov
sbb
mov
lahf
mov
leave
out
movsl
dec
and
and
xchg
das
roll
add
test
shrb
mov
ljmp
xor
shlb
stos
adc
sub
xchg
cmp
aas
loop
cli
jge
pusha
rcrb
out
cli
inc
popf
loopne
repnz
push
jecxz
ret
pop
pushf
dec
nop
sbb
lea
fwait
add
sti
rorb
stc
add
push
inc
jl
inc
adc
push
jmp
mov
das
pop
or
pop
inc
mov
adc
sub
xor
lahf
flds
es
jl
lcall
add
mov
cmpl
cmpb
jne
test
push
cltd
adc
shl
test
out
mov
push
xor
push
pushf
sub
adc
pop
sub
add
stos
popf
in
jno
lea
pushf
mov
push
mov
clc
dec
jl
or
jae
dec
mov
repz
jl
insl
ror
sub
pop
outsl
adcb
ds
pop
xchg
push
mov
pop
pop
mov
add
aaa
mov
ss
xor
cmp
pop
fs
int3
xchg
inc
jno
xchg
aad
fcmovnu
and
ljmp
push
ret
test
dec
mov
mov
xchg
in
ds
and
mov
mov
pop
xor
nop
rcr
popa
adc
bound
mov
xchg
pop
test
outsb
nop
add
fbld
stc
jmp
xorl
andb
cwtl
in
loopne
loopne
pop
dec
fnstenv
xchg
mov
mov
lea
jg
clc
xor
lods
dec
shl
int
cmp
or
out
pop
add
cwtl
pop
dec
fimuls
mov
pop
sub
stc
nop
fidivrs
aam
fistps
pop
xchg
lret
pop
mov
ljmp
inc
mov
mov
cld
pusha
arpl
jmp
ret
push
ss
inc
daa
loopne
xchg
push
ret
shrl
mov
dec
jb
movsl
pop
mov
dec
in
mov
xor
ja
inc
xchg
rep
int
rclb
push
push
mov
xchg
inc
lcall
flds
pop
or
insl
and
or
mov
ja
ljmp
jp
in
sub
sbb
xchg
inc
je
cmc
shrl
ljmp
ficomps
stc
mov
in
xchg
shl
xor
add
ret
loope
push
and
jbe
cs
imul
into
or
push
dec
loop
add
scas
movsb
cmpsb
idiv
push
cld
cmp
jnp
enter
insl
jg
fists
mov
imul
scas
jge
cmp
mov
pop
cmpps
and
sbb
mov
add
lgs
cld
mov
or
mov
xchg
cmpb
ss
sbb
std
jb
inc
hlt
loop
ret
hlt
jb
ss
mov
cltd
adc
mov
shrb
xor
jl
or
or
sub
add
push
mov
fisubs
jle
and
adc
in
mov
jo
scas
push
xchg
xor
mov
lret
pop
int
and
mov
lods
faddp
ljmp
sahf
push
mov
or
fsubl
fsubrs
dec
cld
sti
ja
xor
loope
or
mov
insl
cmp
xlat
push
pop
out
lods
sbb
mov
ds
inc
pusha
in
pop
xchg
inc
stc
adc
cmp
movsl
lods
mov
mov
dec
sub
mov
sbb
add
jb
add
out
mov
mov
inc
lret
push
scas
jns
pop
xor
mov
pop
out
xchg
dec
loopne
mov
mov
repz
and
xor
lcall
add
outsl
inc
add
adc
adc
sub
mov
jge
mov
lea
daa
and
rcll
in
sub
xchg
sub
inc
jnp
mov
sub
add
or
push
ljmp
sbb
out
fadds
mov
or
sub
shlb
adc
sarl
mull
int3
sarb
cmp
clc
bound
mov
jae
inc
or
push
or
and
aas
jno
stos
mov
xlat
inc
scas
adcl
aad
inc
push
repz
test
pushf
cmp
popa
out
lock
sub
push
xlat
xchg
fstps
dec
or
cmp
rorl
mov
push
outsl
sub
loope
push
xor
mov
mov
fistpl
ss
lret
and
or
mov
push
popa
test
adc
sub
lret
js
mov
or
cmp
cmp
and
mov
stos
popl
lret
ret
jne
mov
jns
vpslld
jle
mov
movsl
sub
and
adc
xchg
jbe
add
adc
mov
insb
sbb
mov
test
mov
xchg
cmp
cmp
lods
call
test
popf
test
sbb
xchg
sub
mov
rolb
les
mov
subl
push
test
mov
mov
pop
popa
pop
inc
popf
mov
dec
pop
jp
pusha
adc
jae
jo
in
shl
xlat
xchg
sub
sub
rolb
add
sub
add
repz
test
jno
pop
pop
cwtl
pushf
xchg
out
and
and
mov
test
stc
gs
inc
push
cmp
pop
mov
shl
lds
fidivl
lea
xor
in
leave
jns
adc
adcb
mov
xchg
push
xor
ja
lods
cmp
pop
or
decl
imul
scas
lahf
sub
pushf
adc
xorl
pop
cmpsl
rclb
pop
das
sub
rorb
xchg
test
aam
iret
and
add
push
movq
dec
inc
vpunpcklqdq
mov
outsl
xor
fwait
inc
push
repz
in
cld
pop
and
sti
iret
roll
lahf
es
shrb
add
jmp
nop
stos
bound
ss
roll
jns
outsb
push
movsl
movsb
enter
cmpsb
fiadds
jmp
into
rclb
jle
std
test
in
cmpb
sbb
and
movsb
ljmp
cmp
jg
push
out
mov
dec
or
jle
sub
popa
sbb
rcrb
loopne
pop
cmpsb
lea
mov
inc
inc
stc
push
in
shrl
pop
jecxz
test
xor
out
mov
idivb
adcl
mov
xchg
test
repnz
mov
and
push
add
cld
std
jl
pop
dec
and
sbb
xor
je
daa
inc
orl
push
adc
sahf
cltd
mov
fnsave
std
pop
pop
pop
xchg
test
jecxz
mov
lret
es
pop
movsb
inc
sub
xor
in
sbb
mov
push
push
addb
in
add
adc
ljmp
das
aaa
stos
gs
push
icebp
jno
and
and
xor
int
pop
cmovo
lahf
fdecstp
in
push
ret
mov
jg
push
iret
cltd
xor
mov
or
push
loope
cmp
mov
inc
xor
and
rclb
lcall
dec
test
jmp
popa
sahf
lret
or
fisubs
add
or
push
scas
push
cmp
js
mov
fsubs
outsb
in
mov
outsb
jns
lods
movsl
test
rcr
ret
fdivr
stos
fsubs
addr16
mov
dec
push
dec
adc
out
pop
cld
mov
les
xor
lock
sarb
xor
xor
xor
cmpsl
ret
mov
loope
ljmp
loop
cwtl
jmp
mov
out
iret
lods
int3
mov
xchg
add
lahf
out
dec
rorb
das
push
daa
adc
call
insb
nop
repnz
rorb
ds
jae
mov
mov
leave
stos
in
jno
adc
test
sub
stc
je
inc
xor
and
xchg
add
out
lods
cmpsb
lcall
sub
movb
fisttpll
test
mov
loopne
movsl
jb
pop
repnz
ror
push
dec
push
or
inc
aad
arpl
fs
jae
and
push
cltd
and
out
jmp
adcl
mov
leave
ret
lods
mov
lcall
mov
inc
xchg
push
xchg
int3
pusha
or
mov
bound
insl
fsubl
ret
jno
adc
mov
pop
xor
xor
cmp
clc
xor
push
dec
mov
or
pop
sub
je
jbe
mov
or
fdiv
inc
pop
mov
cs
stc
mov
sbb
jmp
push
insb
pop
pop
jecxz
vpor
inc
stos
clc
sbb
and
or
mov
sbb
adc
pop
mov
sarb
test
stos
fcmovne
in
fcomip
jb
xchg
push
in
mov
scas
out
jmp
inc
and
sti
mov
inc
lods
insb
aas
mov
pop
fnstsw
xchg
loopne
cmp
addr16
xor
pop
mov
pop
sbb
xchg
or
cmp
icebp
cltd
fildll
int
inc
add
lods
jmp
sbb
mov
cmp
add
push
push
mov
and
sbb
xchg
loope
in
or
pop
sub
hlt
in
mov
pop
push
shrw
das
jecxz
mov
sarb
jge
lret
mov
lret
imul
js
mov
mov
int
and
push
adc
clc
lock
jbe
mov
xorl
pop
pop
sbb
leave
push
scas
aaa
inc
sub
dec
pusha
loop
dec
cmpl
or
daa
mov
orl
xchg
adc
dec
pop
cmp
je
dec
jo
pop
fs
adc
adc
loop
lahf
inc
xchg
imul
jnp
and
pop
or
test
mov
ja
sub
mov
pusha
sbb
dec
mov
imul
and
xchg
ffreep
daa
fcmovb
mov
mov
into
out
inc
int
clc
call
icebp
mov
subl
es
jle
ja
add
adc
xchg
or
jbe
sbb
mov
lahf
push
les
stos
add
sub
push
jg
cmc
rcrl
pop
inc
insb
xchg
movsb
cmp
xchg
mov
mov
inc
sbb
add
cli
xor
movsl
adcl
mov
cmp
xchg
in
inc
aad
cmpsl
pop
ss
xor
sub
sbb
in
xor
dec
sub
mov
cs
mov
xchg
jbe
faddl
dec
sub
jmp
push
add
nop
push
mov
sub
xlat
test
out
mov
pop
pushf
iret
mov
clc
sub
jmp
cmp
in
icebp
mov
stc
push
iret
jbe
enter
outsb
jmp
sub
push
popaw
or
je
push
mov
fstpt
insb
mov
push
divl
lret
adc
mov
cld
sbb
push
xchg
int3
sbb
add
lret
or
sub
jg
cmpsl
addr16
push
dec
xor
mov
dec
jnp
adc
js
inc
movsl
insb
popa
xchg
fdivp
sbb
push
loope
mov
les
mov
hlt
cmp
mov
add
sub
rcrb
inc
xchg
and
xchg
ficoml
jno
mov
sub
ret
and
cmp
js
lods
add
jecxz
xor
ret
dec
xchg
and
jbe
loopne
xchg
bound
notl
add
inc
jno
cmpb
sub
sbb
out
adc
cltd
cmp
rorl
adc
sahf
mov
xchg
dec
lahf
lods
cmpsb
imul
lods
xor
jnp
inc
mov
sub
mov
xchg
dec
xchg
shl
pushf
mov
push
jae
sbb
jp
add
add
bound
jnp
and
rorb
pop
fucom
insb
popf
cmp
mov
mov
nop
adc
mov
sub
loopne
adc
dec
hlt
repz
or
jp
jecxz
adc
push
les
pushf
cmpsb
pop
loopne
xor
or
inc
xchg
mov
pusha
dec
popf
lret
cmp
pushf
iret
sbb
pop
or
sbb
stos
aad
dec
ret
repz
xchg
adc
xchg
fprem1
hlt
fidivrl
arpl
inc
test
std
mov
sahf
xchg
lret
mov
popa
ss
into
inc
mov
xor
or
xor
push
push
cmp
add
push
push
clc
mov
add
push
mov
jo
jo
cwtl
xchg
rorb
mov
gs
lcall
sub
adc
in
adc
das
xchg
ljmp
dec
lret
in
xchg
dec
xchg
aas
add
inc
loope
jmp
xor
es
mov
mov
adc
loop
xor
xor
lea
mov
jno
and
inc
xchg
sahf
xchg
popf
mov
sarl
dec
xchg
inc
jb
in
inc
or
cltd
iret
cltd
mov
dec
xor
add
jp
sbb
or
fwait
cmpsb
aaa
adc
cwtl
inc
int
icebp
in
pop
push
mov
ds
adc
lret
imul
jae
jle
lods
ljmp
std
roll
ljmp
pop
jnp
mov
pop
cmp
push
outsb
mov
ds
test
cmp
jne
sub
adc
fistl
pop
pop
js
dec
iret
icebp
xorb
hlt
les
data16
push
dec
outsb
add
inc
scas
add
cmp
adc
pop
sub
fdivrl
repnz
push
adc
xchg
insb
loop
popl
mov
push
add
push
clc
mov
xchg
filds
push
jbe
or
ljmpw
add
out
out
sub
xchg
clc
inc
jo
jge
push
rclb
ret
scas
insb
loope
jl
aad
fdivrl
mov
cltd
push
mov
jg
mov
js
in
aas
test
xchg
dec
cmpb
testb
push
dec
mov
xchg
mov
adc
mov
mov
mov
daa
adc
movsl
inc
cmp
jl
adc
dec
cmp
dec
je
mov
lods
loopne
cmp
bound
fiadds
dec
pop
in
or
dec
in
jle
popf
dec
xor
push
in
out
jl
dec
scas
or
test
sub
test
jae
shlb
sbb
inc
xchg
cmp
das
in
mov
scas
test
pop
ja
cmp
or
or
xchg
in
hlt
adc
and
xlat
inc
push
jge
xchg
push
jge
jmp
add
mov
insl
cmp
loopne
ret
inc
addr16
inc
cmpsb
aaa
pop
mov
adc
dec
push
fisubs
xor
hlt
xchg
stos
dec
pop
das
pop
mov
in
ficoms
call
xchg
xchg
push
adc
inc
in
pushf
inc
push
jns
data16
push
push
xor
and
das
pushf
cs
pop
aaa
lock
mov
or
add
outsl
std
mov
xchg
cmp
insb
popf
inc
xchg
test
sbb
lcall
repnz
in
outsb
nop
in
cltd
push
cs
and
jo
jp
add
test
mov
pop
lcall
sahf
loope
mov
push
divb
clc
mov
ficoml
add
outsb
rorb
sbb
cwtl
add
inc
jns
mov
lret
rorb
jb
sbb
pop
jge
fwait
testl
add
scas
inc
sahf
xchg
mov
or
fisubrs
sub
sti
jb,pn
push
lock
out
xchg
push
mov
push
xor
push
xor
jne
mov
or
add
test
stos
andb
mov
and
add
popl
sub
sbb
ljmp
and
movsb
push
and
iret
ficoms
jecxz
xor
fldt
test
and
insb
adc
mov
imul
cwtl
and
pushf
int
fwait
aam
sub
pop
mov
hlt
pop
movsb
add
sbb
push
xchg
add
hlt
filds
and
enter
push
orl
sahf
addr16
lods
jmp
aad
and
mov
dec
sbb
rol
dec
push
faddl
cld
fs
fdivrl
and
cmp
invd
cmp
add
jnp
lcall
push
xlat
daa
mov
mov
in
imul
cmpsb
mov
push
xchg
rorl
out
repnz
mov
cwtl
movsb
jp
pop
clc
add
inc
inc
adc
xchg
popl
add
cmpsb
push
push
xchg
cwtl
ja
int3
fwait
jg
loop
jns
popf
cmpsb
dec
repnz
adc
fs
es
or
mov
jp
add
fcmovnu
in
lahf
mov
mov
sbb
mov
or
sbb
mov
in
and
mov
jb
xchg
sahf
xchg
insl
mov
pop
ljmp
sub
xor
push
out
js
fcmovu
xor
mov
add
mov
mov
mov
mov
enter
les
sub
and
test
fistps
cmpsb
mov
repz
and
mov
pop
sub
xor
add
or
fs
icebp
in
xchg
or
jle
pop
or
notl
nop
inc
lods
sub
sbb
stc
arpl
cmp
addl
adc
rolb
sub
js
push
test
fldt
mov
sbb
out
dec
push
cmp
jnp
and
mov
ficompl
cs
test
push
mov
lcall
sahf
int3
sbb
aaa
sub
push
push
sub
out
add
jae
mov
hlt
xchg
adc
push
repz
sbb
arpl
dec
mov
loop
fcmovnbe
adc
insl
xchg
jl
push
cwtl
out
inc
cwtl
jne
pop
push
aam
call
test
push
adc
rolb
psadbw
xor
mov
cld
sbb
test
sub
jmp
outsb
pop
xor
cmp
lahf
sub
cli
cwtl
idivb
xor
cmp
mov
mov
pop
jae
in
mov
mov
sbb
lret
repz
pusha
adc
jbe
adc
shrl
inc
or
xor
test
xchg
test
and
shlb
test
aas
sub
movl
sbb
mov
inc
pusha
xorb
mov
pop
mull
out
or
dec
sbb
jmp
loope
insl
adc
xor
insb
xor
or
or
sbb
pop
push
add
jbe
ja
pop
insl
cwtl
and
divb
mov
gs
sbb
mov
data16
xor
cmp
push
xchg
adc
sbb
movl
cmpb
push
ljmp
inc
mov
cmp
jno
mov
mov
out
mov
lret
or
xor
mov
push
jecxz
cli
add
xchg
and
hlt
out
push
imul
mov
test
xchg
inc
test
push
adc
iret
push
mov
mov
cmovns
imul
lcall
cld
mov
mov
or
lahf
repz
mov
mov
mov
nop
cmpsl
lea
jns
xchg
jg
cmp
lds
jne
xchg
out
andb
pop
dec
insb
inc
or
jnp
faddl
mov
jb
adc
mov
or
fs
mov
outsb
add
xor
mov
sbb
xor
cmc
xchg
hlt
mov
add
add
jle
jecxz
sub
mov
xchg
cmpsl
xor
int3
dec
inc
add
mov
stc
dec
and
jnp
leave
ja
or
inc
popa
scas
out
or
cmc
jmp
cwtl
inc
out
mov
aaa
fsubrl
lock
stos
xorb
std
adc
push
mov
sub
sub
fisubrs
and
loopne
mov
lea
pop
pop
ficompl
ret
out
shll
jmp
mov
jbe
jbe
fistl
sub
sbb
pop
adc
sbb
sbb
rclb
push
dec
stos
adc
push
shll
dec
mov
popa
popf
add
mov
add
pop
mov
rcrl
and
add
or
push
add
sarl
push
push
inc
mov
or
mov
xchg
pop
mov
mov
dec
xor
xchg
sbb
pop
pop
jg
movsbl
cmp
dec
inc
sbb
mov
add
out
pop
in
mov
pop
sub
cmp
push
and
fwait
clc
shll
push
sub
ljmp
and
sti
in
insl
clc
hlt
jl
pop
std
cmpsb
pop
movl
popf
rcll
stc
xor
cltd
mov
push
insl
inc
orl
icebp
jmp
xchg
imul
insl
iret
adc
pop
in
ljmp
cmp
cmp
xor
or
sub
scas
xchg
lcall
fisttps
in
vmovmskps
aad
pop
push
pusha
mov
in
dec
inc
mov
ss
jg
insb
out
jnp
call
dec
xchg
push
or
mov
mov
mov
jno
add
cmp
out
addr16
cmp
add
mov
loopne
inc
inc
push
xchg
mov
jmp
jl
lea
mov
popf
fists
mov
mov
adcb
xlat
in
push
sbb
pop
aam
cmpsb
inc
mov
jecxz
cmc
sub
int
stos
cmp
lahf
or
mov
nop
imul
fldenv
decb
repnz
es
in
mov
je
aaa
mov
shrl
add
fs
and
adc
xchg
in
leave
jmp
push
mov
aam
adc
mov
mov
mov
mov
push
adc
inc
cmp
push
sbb
pop
mov
dec
lretw
andb
lods
cmpl
das
add
pop
inc
lods
inc
sub
and
enter
adc
push
dec
dec
stos
lret
into
cmp
out
cmp
cmc
pop
mov
lea
in
iret
xchg
in
stc
xor
mov
xor
cmp
stos
xchg
mov
mov
loopne
or
pop
mov
jmp
push
xchg
sti
int3
pop
fstpt
push
jae
xlat
dec
xlat
push
rcrl
adc
sbb
mov
mov
ja
mov
sbb
push
leave
popf
adc
mov
add
rcrl
xchg
fwait
aaa
adc
cwtl
mov
mull
out
jmp
loope
fstl
xlat
xchg
je
sub
pop
lods
xor
sbbl
addb
aaa
fsubl
mov
iret
add
add
sti
mov
lods
add
iret
push
iret
in
bound
add
adc
sti
push
andps
pop
dec
fiaddl
push
fnstenv
nop
xorb
adc
adc
dec
outsl
jbe
cmpsb
push
mov
jg
pop
mov
je
pop
in
stos
cmpsl
adcb
jg
jns
and
out
int
pop
and
mov
dec
cs
cmc
jecxz
xor
lcall
xchg
mov
dec
sbb
shlb
in
cmp
and
adc
lahf
jcxz
lahf
inc
jmp
push
xchg
mov
and
xor
insl
mov
iret
dec
mov
mov
sbbl
orb
icebp
jg
loope
lcall
mov
sbb
sbb
movsb
test
test
and
in
andl
int
add
dec
fldt
daa
or
add
in
in
call
sti
pop
xchg
xchg
pop
cmpb
jmp
xor
sub
hlt
loope
and
jae
mov
pop
test
out
fidivl
xchg
pop
js
jne
mov
loope
lods
leave
dec
dec
data16
popf
cmp
sbb
mov
ja
in
adc
fists
cltd
icebp
add
setge
mov
push
fnstcw
mov
dec
pop
outsl
xor
add
in
sarb
jmp
pop
or
test
pop
pop
lds
jae
inc
xchg
hlt
jecxz
cmp
dec
pusha
and
enter
test
mov
mov
es
pop
movsb
call
sbb
mov
cmp
sti
jmp
pusha
lret
mov
mov
pop
xchg
ror
xor
ss
aad
stos
push
jnp
xor
adc
push
inc
in
repz
das
aas
cmp
push
pop
jne
xchg
mov
scas
mov
pop
stos
jo
movb
out
jns
inc
rcr
xor
lods
add
or
fucomip
pop
adc
pushf
add
das
enter
fdivr
test
mov
arpl
jae
cmp
sti
pop
imul
mov
cmpsl
push
stos
call
xchg
jne
scas
or
mov
dec
ss
sub
xchg
mov
push
movsb
mov
in
mov
nop
xchg
push
into
push
mov
adc
mov
out
push
and
adc
mov
push
js
in
mov
sarl
inc
inc
lret
je
or
mov
repz
insb
dec
scas
stc
ret
mov
add
int3
in
and
fiaddl
movsb
test
in
dec
call
fildl
scas
popa
xchg
lcall
pop
lea
cmpsl
popf
out
pop
push
push
xor
sahf
jmp
xlat
in
gs
cmpsb
lahf
mov
inc
sub
sbb
mov
test
popf
and
mov
repnz
xor
and
xchg
shrb
cwtl
js
jb
mov
mov
int
mov
inc
push
push
lret
fdivs
or
out
outsb
lea
push
cmpsl
sub
fldln2
xchg
cmp
sbb
push
add
aas
ret
xchg
lock
cld
inc
mov
dec
test
mov
gs
iret
mov
cmpsl
inc
les
sub
addl
dec
cmp
pop
pop
push
mov
nop
jbe
in
mov
mov
push
pop
cmp
adc
insb
pop
lock
adc
fistpll
push
call
les
jmp
inc
mov
push
popa
sbb
push
movsl
ja
push
arpl
adc
and
pop
loop
mov
mov
aaa
daa
jbe
dec
adcl
sub
sub
addb
sahf
xchg
sbb
aaa
push
stc
mov
rorl
jae
out
jb
ret
and
add
push
fisttps
outsl
jg
callw
sahf
loop
fmul
pop
and
push
shlb
mov
jp
dec
mov
rcr
inc
lock
dec
movsl
jne
repnz
jecxz
adc
dec
out
call
das
sbb
inc
cmp
mov
xchg
pop
push
cmp
popa
or
add
push
adc
push
mov
mov
sbb
cmp
xor
sub
lret
sarb
ret
pop
loop
daa
jno
inc
mov
cld
jmp
push
xor
iret
mov
cmc
data16
lahf
or
in
push
lock
pop
aaa
int3
and
orl
cmp
push
cpuid
insl
dec
mov
push
sub
cs
retw
ret
mov
ret
sub
stos
push
in
push
jg
mov
pop
int3
mov
adc
xor
inc
mov
stos
dec
nop
xchg
cmp
ret
mov
clc
gs
aas
inc
ljmp
jbe
fsubrs
jno
ret
cwtl
imul
stos
mov
cmp
fbld
lret
xchg
mov
dec
inc
push
mov
pop
cmc
add
push
xchg
aam
push
inc
js
and
pop
push
fstpl
pop
xchg
push
mov
mov
push
cmp
fwait
in
push
pop
lahf
push
inc
mov
adcl
xorl
add
cmp
and
adc
imul
pop
jae
in
jns
inc
rcr
aad
icebp
cmp
jb
loope
sbb
push
cs
and
xchg
sub
xor
push
jecxz
filds
adc
jl
mov
dec
adc
push
out
push
mov
je
jnp
shrb
adc
dec
and
mov
push
test
sahf
mov
icebp
mov
das
adc
cmp
pop
mov
lcall
mov
fwait
mov
mov
test
push
movl
inc
stc
pusha
testl
dec
jmp
mov
mov
loope
jo
add
inc
out
pop
ret
ss
mov
inc
scas
movsl
mov
lahf
lea
inc
inc
dec
inc
jae
jno
leave
xchg
push
jno
int
inc
aaa
xchg
xor
pop
mov
push
je
xor
loope
pushf
aas
aam
jne
adc
sub
loopne
loop
or
inc
and
cmc
int3
push
test
and
addr16
or
lods
test
nop
or
pushf
sbb
loope
jmp
jne
dec
ret
sub
lahf
cltd
aas
sub
adc
js
and
leave
hlt
fsts
or
movsl
adc
loope
ss
mov
xlat
push
movsl
mov
scas
xor
imul
xor
fcompl
jae
xchg
mov
mov
sub
sub
in
push
in
mov
shrl
and
mov
adc
loopne
dec
mov
mov
xchg
outsl
xor
int3
es
push
dec
imul
adc
fisttps
ds
xor
cmp
sub
adc
xor
test
inc
leave
jae
xchg
lea
repnz
out
mov
cmpsb
aaa
adcb
sub
out
icebp
xlat
dec
xchg
cmp
in
ljmp
cwtl
jge
leave
xchg
sbb
cmp
inc
add
cmpl
sub
sahf
inc
clc
push
xor
xor
sti
outsb
aam
jle
hlt
addb
mov
pop
lods
stc
xlat
mov
push
push
mov
mov
xchg
subb
aam
xorb
dec
dec
int3
inc
shl
cmp
sub
push
pop
dec
jno
and
aad
decb
lret
aam
cmpsb
les
loop
loope
jge
ret
cmp
in
xor
pop
mov
xchg
pop
fcompl
insl
stos
push
dec
pop
int3
popf
mov
lods
jb
call
pop
lret
cmp
insl
dec
fistpll
cmpsb
sahf
xlat
mov
leave
mov
ds
dec
es
aam
mov
pop
push
xchg
cmc
bound
gs
out
addr16
jmp
lret
mov
mov
mov
clc
cli
or
mov
sub
ja
or
xor
inc
xor
outsb
rclb
push
fnop
pop
loope,pt
cmp
inc
push
enter
lods
jae
or
popa
and
aaa
cld
idivb
pop
imull
or
inc
mov
xchg
insb
outsl
aad
pusha
fs
xchg
fldenv
imulb
inc
movsl
inc
sub
adc
sub
add
pop
out
testl
and
loopne
dec
fs
sub
mov
dec
push
mov
cmp
xor
lahf
lret
sahf
cmpb
mov
loopne
shll
mov
and
loop
test
stos
divb
sbb
jg
mov
mov
shr
movsl
fisubrl
stos
adc
cmp
push
mov
bound
xchg
jo
jmp
xchg
push
inc
mov
scas
js
push
dec
dec
fcomps
js
jp
lret
cwtl
in
pop
int
cmp
push
and
lods
add
push
fsubl
adc
out
jmp
pop
lahf
push
orb
and
pop
hlt
in
mov
inc
mov
cwtl
lock
xchg
push
mov
jmp
lahf
in
xor
rorb
xor
outsl
stos
insb
enter
dec
jbe
cmp
add
or
aaa
incb
xor
mov
add
dec
mov
mov
fbld
sub
icebp
in
lock
cmp
push
push
mov
sti
and
inc
gs
or
pop
je
add
popf
and
push
fimuls
push
push
jno
push
mov
push
je
notl
nop
cs
jmp
test
pop
or
and
lret
das
in
push
jb
xor
or
in
gs
xor
xlat
sbb
clc
ss
int3
stos
xor
cmp
fiaddl
and
sbb
dec
xchg
not
fs
push
xchg
ficoml
jg
xchg
sub
stos
pop
fistps
or
out
jmp
pop
inc
fsubp
sub
in
mov
negl
mov
fnsave
bound
lock
cmp
rolb
lods
cmc
xor
jns
jmp
aam
int
mov
add
pusha
ror
mov
mov
mov
lock
cli
cmpsb
pop
xchg
fisttpl
inc
icebp
roll
xor
pushf
inc
inc
mov
out
dec
add
inc
cmp
sbb
xchg
movsl
jp
cwtl
aam
jae
inc
outsb
xchg
or
or
mov
pop
and
pop
rcrb
sarb
xchg
sarb
sar
fwait
aaa
mov
add
sbb
cmp
inc
xor
push
loopne
pop
mov
mov
imul
addb
cld
test
psubsw
cmp
dec
pop
mov
shrl
iret
push
clc
pop
mov
xchg
and
or
mov
out
mov
shlb
imul
repnz
cmc
jbe
insl
das
pop
sub
pop
jo
sbb
pusha
cmp
fimuls
lahf
lcall
add
xor
sbb
call
or
cld
cld
divl
and
mov
pop
insl
jmp
pop
dec
push
out
cmp
lcall
scas
into
mov
std
pop
into
xor
popf
pop
es
ljmp
outsl
aas
mov
mov
cmp
mov
sahf
rolb
gs
fldl
jb
ret
mov
movsl
pop
fisubrl
loopne
sbb
in
xchg
inc
xlat
dec
jmp
divb
es
sub
sbb
add
dec
inc
sbb
insb
hlt
pop
inc
hlt
mov
iret
push
mov
or
cmp
pop
mov
scas
test
in
mov
jp
das
movsl
cs
cmpsb
pop
out
or
mov
push
fnstsw
mov
mov
in
or
lds
test
jecxz
adc
or
sub
xchg
fisttps
test
xchg
sbb
dec
in
or
js
lds
pop
sbb
inc
sub
cmp
notl
imul
dec
inc
pop
sbb
xchg
aaa
xor
jo
ljmp
jle
je
mov
or
mov
pop
sysret
lds
lret
jb
outsl
out
add
inc
xor
sub
push
repnz
in
xchg
out
pop
xchg
mov
dec
or
pop
js
test
dec
and
adcb
push
push
inc
add
mov
cmpsl
popa
sub
call
jb
in
cltd
mov
xchg
fistl
adc
push
scas
mov
sub
clc
xchg
mov
sti
jmp
xor
stos
call
hlt
mov
or
inc
das
xlat
dec
mov
imul
pop
imull
jge
inc
dec
or
mov
fwait
mov
adc
xchg
mov
js
popa
int
xchg
mov
out
xchg
and
mov
sbb
jo
lcall
mov
bswap
jno
out
push
jns
push
mov
mov
test
je
mov
jns
bound
aam
pop
jg
cld
ret
cltd
pop
out
inc
push
sub
imul
cli
mov
xchg
inc
pop
cmp
xchg
aad
sbb
ljmp
push
inc
mov
or
or
imul
sbb
flds
outsb
or
and
orb
pop
clc
xchg
mov
cltd
jae
inc
lock
shrl
insl
stos
cmc
add
pop
fnsave
push
push
mov
mov
inc
jmp
enter
sbb
push
mov
jo
mov
inc
lds
out
test
dec
add
cmpb
faddl
adc
fs
pushf
pop
or
inc
outsl
dec
dec
pushf
jb
sti
es
add
or
xlat
inc
and
jge
dec
popa
nop
jae
pop
sbb
test
mov
jbe
js
mov
movsb
jno
lds
push
cld
mov
ud0
scas
mov
xchg
test
pusha
push
jb
jne
movsb
or
mov
stc
je
pop
mov
inc
and
std
push
fwait
jle
addr16
mov
sub
push
xchg
and
add
push
jo
nop
jecxz
lret
sub
fcomps
xorb
imul
xor
mov
stc
loope
lret
sbb
flds
push
and
jl
cmp
les
xchg
in
inc
push
jnp
jle
je
lds
mov
xchg
pop
jle
testl
mov
mov
dec
xchg
pop
cwtl
lods
gs
shr
pop
negb
dec
mov
lods
lods
jge
ficoml
push
push
lret
or
lods
dec
scas
jne
cmp
sbb
js
add
mov
mov
fs
jnp
testb
loopne
xor
dec
and
lds
pop
push
xor
insl
sti
stos
shll
sbb
mov
insl
mov
dec
pop
stos
and
lcall
mov
sahf
int3
fisubs
arpl
jp
pop
pop
fwait
sbb
nop
and
mov
mov
repnz
lock
aaa
pop
mov
or
fs
jecxz
adc
andb
dec
xor
mov
inc
xchg
icebp
in
subb
xchg
dec
mov
add
cmp
cmp
adc
or
add
push
es
sbb
mov
and
mov
jg
cmp
in
sbb
push
cmp
movmskps
pop
xchg
xor
sbb
outsl
cmpsb
xlat
jge
daa
inc
mov
pop
sub
push
adc
mov
push
out
ret
inc
dec
add
lea
jle
mov
and
sub
cs
subb
popa
hlt
ret
aad
lds
ja
popf
pop
int3
adc
fwait
xor
adc
leave
pop
dec
mov
pop
pop
mov
popa
cwtl
das
dec
cmpsl
inc
xor
into
sar
stos
push
dec
push
or
sub
jl
lahf
mov
bound
xor
and
sub
dec
loopne
pop
add
test
aaa
ja
pop
das
daa
insl
fadd
mov
scas
shrl
fs
inc
or
jl
sti
testb
or
xchg
jg
and
adc
pusha
imul
mov
call
fcomps
pop
add
fisttpll
repz
outsb
inc
mov
or
fnstenv
pop
outsl
jns
bound
push
mov
jae
inc
adc
sub
call
cmp
and
movsl
and
inc
in
ss
aaa
dec
lds
in
pop
push
std
sbb
or
fcomp
xchg
insl
push
fnstcw
lods
push
sbb
test
add
jbe
sar
pop
int3
cmpl
outsb
pop
or
inc
dec
sub
cmpb
outsb
dec
out
ds
int
cmp
mov
inc
sub
int
adc
pop
sub
xor
adcb
jo
mov
jge
adc
sbb
jne
xchg
movsl
xchg
and
add
or
jp
in
ss
sahf
xchg
and
flds
jl
add
sub
call
jle
sahf
out
mov
ret
cwtl
repz
pop
push
and
bound
inc
inc
aam
dec
push
fisubrl
mov
xchg
rcrl
xlat
adc
lahf
test
or
popa
xchg
pop
insl
fs
jmp
push
and
fdivl
push
adc
fdivrl
cmpsb
and
mov
lods
imul
push
jae
cmp
xchg
jle
jbe
xlat
jb
sub
cli
sbbb
imul
dec
xor
lds
inc
call
sub
in
add
push
inc
aaa
mov
rcll
fisubl
mov
loop
dec
mov
cmc
aad
jmp
out
out
test
adc
xchg
je
xchg
add
pop
ljmp
imul
imul
lock
lret
jbe
std
xor
ss
mov
xchg
or
fcmove
xchg
jbe
insl
popa
hlt
and
or
mov
cmp
sbb
sarl
push
sub
jecxz
xor
or
and
sbb
push
sbb
repnz
test
xchg
or
mov
aas
xchg
repz
mov
loop
and
outsb
sbb
std
cld
sahf
js
cwtl
cs
lahf
cli
mov
fcmovnbe
dec
push
inc
mov
aas
adc
pusha
aas
pop
pop
or
pop
push
xor
and
cltd
lret
std
or
xchg
scas
inc
xchg
sahf
and
in
aad
sub
jg
lcall
pop
or
cmp
into
mov
or
mov
xor
sbb
push
pop
xchg
call
or
xchg
pop
xor
aam
cmp
in
testb
jbe
enter
jae
out
pop
into
dec
fmul
and
mov
fdivl
fcom
dec
and
aam
or
out
ficomps
mov
mov
popl
in
lret
inc
arpl
push
popf
negb
rorl
pop
test
pop
shr
jge
xor
out
lahf
pop
dec
mov
cmp
fsubr
jecxz
scas
pop
dec
std
insl
jo
add
out
inc
cmc
insb
inc
mov
adc
pop
lret
aas
movsl
jae
daa
rcll
inc
enter
push
hlt
jmp
sub
scas
pop
aaa
arpl
aaa
mov
lret
cld
xor
insl
inc
jmp
pushf
add
jg
mov
notb
sub
test
repz
xchg
cs
xor
inc
stos
lds
cmp
mov
mov
lahf
cmp
jne
pop
adc
fsub
push
movsl
xchg
movsb
hlt
lods
dec
jo
dec
test
sub
adc
imul
push
jne
jb
inc
dec
fistpll
into
sub
sub
fdivrs
cmpsb
cmp
or
and
stos
dec
pop
or
xchg
insl
dec
sbb
insl
mov
jl,pt
cmp
pop
push
js
mov
pop
lods
cmp
mov
nop
cmp
lcall
dec
inc
hlt
mov
push
sub
adc
inc
mov
dec
lods
or
pop
int3
aas
mov
add
rolb
icebp
jecxz
add
das
icebp
test
adcl
pop
fisubrs
push
xor
shrl
rol
add
scas
sbb
out
xor
xor
adc
fstpt
int3
mov
xor
fsubrl
mov
fs
push
jbe
ret
mov
lret
icebp
outsl
loop,pt
pop
inc
xchg
movsb
jb
arpl
add
mov
dec
lods
add
repz
lea
pop
scas
mov
stc
xorb
fdivr
sbbb
cmpb
cltd
jb
lret
in
pusha
inc
xor
cwtl
dec
dec
std
adc
and
negl
sub
push
addr16
jl
test
xchg
cmp
fwait
push
sub
xchg
dec
pop
dec
jl
lret
xchg
or
cmc
mov
lea
ljmp
sub
sub
lods
lcall
out
addr16
mov
scas
imul
movsl
xchg
inc
pop
rcrb
cmp
cwtl
sub
loopne
aaa
fadds
sbb
repnz
jno
cmpsb
out
ficoms
leave
push
mov
cmpsl
jle
inc
jl
jmp
ficomps
out
mov
aam
insl
inc
flds
adc
mov
out
add
and
cmp
sti
out
clc
scas
dec
jno
loope
dec
inc
aam
add
int
inc
push
and
mov
push
xchg
lods
mov
cmp
scas
xor
mov
insl
lea
mov
cmp
lret
jg
and
cmc
mov
outsl
iret
std
shll
mov
lea
icebp
mov
push
in
mov
sub
mov
mov
and
xor
repnz
scas
hlt
jnp
push
inc
jb
dec
repnz
ret
std
jnp
rcrb
std
stos
add
negb
sub
adc
and
or
jo
push
pop
lock
scas
scas
mov
ljmp
int3
lods
mov
push
nop
imul
arpl
test
iret
push
xchg
ja
mov
ss
loopne
xor
pop
inc
icebp
lahf
adc
adc
adc
daa
sbb
nop
dec
lcall
in
js
out
xchg
clc
xchg
add
hlt
mov
cmp
adc
cmp
inc
or
cmp
pop
cmp
hlt
pushf
test
or
pop
jno
shlb
ja
sub
cmc
sub
sub
cmp
cmp
pop
mov
pop
mov
mov
mov
mov
enter
mov
and
shll
ds
dec
or
jecxz
inc
rcrl
adc
call
scas
pop
xor
xor
mov
fldt
and
aas
inc
in
int3
push
add
ja
push
scas
or
js
mov
push
shll
dec
sbb
cwtl
insl
jnp
pop
push
das
push
dec
roll
adc
sub
mov
and
icebp
les
mov
shlb
dec
push
jecxz
add
nop
adc
xchg
sbb
sub
test
cld
add
aam
mov
ret
inc
xchg
mov
push
push
xor
imul
cmp
push
xlat
xor
xchg
dec
inc
movsl
je
movsb
mov
hlt
pusha
je
mov
aad
jne
out
js
cltd
cs
cmp
out
pop
add
jno
cmp
nop
sbbl
pop
scas
ss
movsl
insl
xchg
ss
and
push
sbb
xchg
js
xor
rcll
sub
xchg
jl
cmpsb
jne
and
lods
mov
std
sub
xchg
jno
pop
out
mov
mov
jle
mov
popa
idivl
sub
adc
xor
push
or
fs
fisttpll
stos
xchg
es
test
push
fld
pop
adc
mov
adc
fwait
rclb
inc
mov
or
test
dec
add
mov
mov
mov
ret
repz
jnp
stc
and
shll
ja
flds
sbb
int3
les
mov
jbe
mov
cmpsb
ds
ret
mov
pushf
fwait
mov
lcall
add
icebp
sub
adc
sbb
xor
cld
xorb
jp
or
aad
incb
movsb
leave
jmp
sahf
test
mov
ret
test
mov
scas
mov
lret
sub
adc
ljmp
pop
test
push
rolb
mov
data16
call
fwait
loop
int
fs
in
mov
cltd
adc
and
imull
sub
dec
adc
int3
int
cld
mov
mov
sahf
cmp
mov
clc
sbb
dec
sahf
mov
fnstcw
add
incl
mov
adc
ret
xchg
mov
pop
lret
jmp
sarl
into
mov
cmp
sub
cmp
jge
ret
out
dec
lods
imul
pop
decl
outsb
push
cld
dec
lahf
pop
cmp
mov
sub
test
movsb
loop
jns
push
ret
mov
sub
loopne
int
gs
imul
jnp
pushf
xor
jl
nop
test
cld
mov
roll
fcoml
add
fistpll
ret
dec
mov
jecxz
daa
pop
addr16
xor
and
xchg
jo
or
outsb
stos
jo
lcall
insb
movsl
ret
pop
jno
fcoms
aad
incl
adc
data16
adc
or
push
adc
gs
or
repnz
lds
mov
insl
sub
fcmovbe
pushf
aam
fbstp
les
notb
push
les
jne
pushf
cli
mov
add
cli
mov
mov
out
loope,pn
adc
rcr
inc
cmpsb
and
adc
jbe
jne
movsb
int3
cmpsb
sub
mov
das
pop
in
jge
cwtl
lods
lods
inc
inc
push
adc
inc
lret
pop
push
clc
shrb
or
lods
pop
or
inc
cmp
cmpsb
add
dec
cmpsb
adc
mov
inc
dec
out
out
and
les
mov
cmc
inc
fdivrp
test
adc
mov
mov
jae
cmp
xchg
sbb
sar
aaa
add
mov
ss
das
xor
add
mov
fidivrl
aaa
mov
sub
scas
cmp
inc
movsb
cld
push
stos
aad
sbb
push
xor
and
movsl
fildl
shl
jge
jg
ret
dec
xchg
aad
sub
stc
mov
sbb
xchg
out
out
xchg
xorb
mov
mov
sti
mov
adc
movsl
das
mov
pop
inc
or
xchg
mov
inc
mov
cmpl
add
pop
jno
pmuludq
jb
call
gs
adc
outsb
insb
popa
push
push
mov
sbb
in
stos
and
aas
out
xchg
rcll
out
negb
mov
sub
xchg
and
jae
push
rorb
ljmp
dec
pop
jg
mov
cmp
jns
pop
or
out
pop
cmc
out
mov
xchg
dec
ss
repnz
rorb
push
mov
pop
negl
out
stc
jns
sub
sbb
jge
mov
pop
push
add
mov
adc
jnp
dec
add
xor
insb
lods
jb
test
js
fstpl
inc
xchg
sub
in
shr
inc
mov
jbe
cltd
pop
mov
push
mov
jmp
aam
je
push
popf
test
dec
pop
fwait
ror
sub
adc
add
loopne
insl
add
call
cmpsb
fnstsw
ss
fmull
mov
mov
cmpsl
loop
xchg
xchg
lods
in
xchg
dec
test
inc
ja
pop
xlat
daa
xchg
gs
xchg
mov
adc
lret
sbb
push
int
divb
cli
mov
mov
lds
inc
iret
jg
jge
push
cwtl
dec
cli
adc
mov
les
push
pop
cwtl
adc
jns
movsl
lds
pop
mov
push
mov
stos
roll
fs
and
out
sbb
insl
outsb
mov
xorl
mov
xchg
insb
lcall
and
inc
mov
ds
sub
lock
mov
in
xor
push
add
mov
adc
stos
and
sahf
xor
or
int
fwait
xor
mov
mov
imulb
xchg
rorb
out
js
cmp
leave
xchg
jp
in
xor
ljmp
xchg
xchg
push
mov
fincstp
pop
test
push
mov
mov
out
aam
cmp
xorb
sub
mov
stos
mov
lods
call
shrl
cld
add
test
dec
aas
lahf
dec
in
sbbl
lds
mov
mov
and
inc
cmpsb
mov
xor
push
ss
dec
mov
cmc
fwait
push
dec
inc
lcall
mov
mov
stos
lcall
ret
aas
test
inc
and
dec
dec
pop
cmp
rorb
jecxz
xor
fsts
add
jp
mov
bound
or
movb
and
mov
ret
stos
out
mov
mov
fstpl
xchg
dec
stos
pusha
cli
rcrb
cmp
push
xor
mov
pop
pop
dec
sahf
push
into
jg
scas
ret
pop
popa
push
sub
fscale
xchg
pop
adc
test
test
mov
push
loopne
mov
pop
aas
jl
add
fs
test
cltd
cld
dec
dec
or
push
mov
iret
movsb
and
xor
lret
clc
mov
dec
adc
add
sti
adc
popl
fwait
lret
lcall
jmp
lahf
faddl
test
fs
cltd
cmp
mov
add
iret
sub
ja
hlt
or
sti
aas
popa
pop
imul
mov
test
push
ljmp
fidivrl
dec
aas
repnz
in
lock
nop
jne
shll
sbbl
inc
cmpsl
jne
xchg
mov
or
mov
insl
data16
imul
adc
rolb
das
sbb
pop
dec
push
scas
xor
jecxz
adc
popf
xor
lret
inc
mov
arpl
fcoms
and
and
add
push
or
lcall
and
fdivl
hlt
mov
outsb
cmp
sub
jl
sbb
out
shl
push
jo
mov
xchg
or
jnp
adc
test
jg
jl
and
and
out
push
shlb
xchg
jmp
in
mov
pop
pusha
pop
cli
sahf
mov
push
add
mov
loope
stos
mov
outsl
sub
cli
sbb
out
lret
sbb
clc
adc
add
stc
addr16
ret
xor
mov
icebp
push
outsl
sahf
test
lret
jp
cmp
dec
cmp
mov
out
jmp
cmpsl
dec
test
in
scas
mov
cltd
stos
jl
push
and
xlat
sahf
shrl
cli
xlat
dec
aaa
nop
bound
out
push
outsb
sub
inc
add
mov
fcmove
leave
xchg
sbb
xchg
or
les
push
loop
pop
lods
xlat
bound
cld
dec
or
add
cmpsl
pop
cs
mov
jno
jb
ss
add
mull
sub
and
pop
cmp
adc
cltd
in
inc
lahf
loopne
cmp
aaa
and
std
jmp
ljmp
pop
inc
xchg
mov
test
aad
in
rorl
and
mov
and
mov
dec
mov
cmc
pusha
cmp
or
je
das
pushf
movsb
stc
mov
imul
xor
sub
pop
jnp
dec
les
inc
ljmp
sarb
xor
sbb
test
push
loop
test
stos
call
cltd
and
insb
test
dec
mov
dec
and
xchg
adc
stos
lret
out
cs
jg
cmp
leave
sub
ficompl
sarl
xor
lret
aaa
sbb
cmp
subl
dec
push
adc
cltd
int3
leave
inc
lock
cmp
xchg
and
xor
loopne
add
mov
imul
jle
xor
leave
xchg
add
pmulhw
cmc
mov
and
fnsave
aam
sub
jp
aaa
int3
jno
icebp
dec
stc
ss
dec
fistpl
pop
lret
cmpsb
jmp
rcll
jns
mov
xchg
popf
push
jmp
mov
push
push
in
mov
mov
mov
jmp
movsl
into
mov
js
jbe
and
js
imul
pop
sbb
mov
jecxz
cwtl
jno
pop
mov
pop
call
fs
add
jne
aaa
and
nop
sub
mov
push
lahf
sbb
and
add
sbb
into
test
push
add
dec
dec
or
into
pusha
cltd
fwait
jg
dec
and
pop
mov
arpl
stos
lahf
scas
xor
cltd
in
adc
ja
out
xchg
jp
outsb
popw
jnp
sub
scas
loop
inc
sub
shrl
push
nop
jbe
test
jmp
nop
sbb
fmull
push
adc
aaa
out
inc
push
mov
mov
das
repz
push
ret
mov
mov
mov
mov
test
lcall
jne
std
popw
test
push
rolb
dec
or
dec
cmp
add
out
cli
cwtl
ret
adc
pop
mov
or
imul
jle
jl
inc
lods
decb
out
repnz
cltd
push
test
push
je,pn
inc
daa
nop
imul
mov
xchg
mov
pop
xchg
dec
pop
imul
jecxz
ret
loope
stos
imul
jb
sbb
movsb
popf
push
push
cmpsb
fldenv
lahf
pop
popf
jmp
mov
je
mov
aam
pop
test
out
addr16
lea
mov
popa
orl
adc
dec
lods
out
repz
cmpb
mov
xchg
je
add
add
push
dec
fwait
test
fxch
dec
imul
fwait
movsb
call
fstl
out
pop
and
and
mov
fdivr
leave
dec
data16
xchg
stc
std
xchg
pop
push
jno
pop
inc
call
xchg
loope
wrmsr
xchg
dec
int3
cmp
lcall
push
mov
hlt
sarb
outsl
in
lea
inc
mov
in
xlat
data16
lods
icebp
lea
xor
lock
jae
and
and
in
cmp
pop
insl
lds
xor
xor
mov
std
inc
sub
add
jae
jle
out
sub
jns
cmpsb
and
pop
xor
arpl
out
xchg
xor
lock
test
and
shlb
pop
mov
add
int3
aaa
cmp
xchg
imul
xchg
lret
fcmovne
cmpsb
popf
js
fstl
lods
enter
test
adc
or
adcb
dec
sbb
or
ret
fs
mov
and
dec
xchg
and
inc
loopne
mov
dec
jo
ror
fldl
dec
mov
mov
stos
xor
and
push
dec
add
orb
repz
xchg
lcall
sub
and
pop
xchg
lret
sbb
and
loop
roll
push
movsb
push
das
sub
lea
mov
jmp
test
icebp
jo
aaa
or
stos
pop
pop
lcall
dec
push
orps
pushf
mov
ljmp
jnp
push
ljmp
fs
lcall
pop
xchg
cmpsl
imull
lods
lret
xchg
xchg
cmp
dec
and
call
fiadds
push
out
jp
repnz
add
mov
movsl
push
and
fidivl
add
inc
je
out
pushf
cli
pop
inc
jle
aam
fs
nop
call
or
xor
aam
ja
jns
bound
adc
cmp
fdivl
push
pop
dec
mov
out
xor
mov
pop
nop
loopne
push
fsubrs
pop
jl
mov
mov
jl
add
dec
cmp
xor
pop
jo
xchg
test
ret
pop
pop
pop
mov
lds
ljmp
ror
addr16
icebp
push
mov
out
pop
xchg
adc
iret
dec
inc
xor
inc
mov
aam
mov
ja
ljmp
pop
mov
add
pop
and
int
add
mov
ret
sbb
push
and
pop
aaa
js
adc
insl
movq
jle
in
mov
aad
aas
mov
icebp
and
jg
inc
mov
cmp
cmp
xor
mov
inc
outsl
pop
xchg
mov
bound
fsubrl
out
push
cmpsl
and
das
in
jge
icebp
and
out
sub
and
cmpl
lods
ficomps
push
mov
push
xor
pop
mov
sbb
mov
cwtl
cmpsl
data16
lahf
sub
add
add
inc
mov
jnp
fwait
cmp
jecxz
push
orl
mov
adc
dec
push
mov
xor
jle
inc
shl
xor
xchg
pop
sub
int
add
mov
popf
leave
sub
std
dec
and
sbb
mov
inc
add
fabs
ret
outsl
dec
into
xchg
mov
imul
cmc
sbb
sarl
xor
pop
pop
popf
cli
mov
xor
jmp
aaa
or
fists
jmp
or
dec
mov
pshufw
lret
cli
jp
dec
addr16
inc
loopne
sbb
popf
pop
andb
or
lea
mov
jg
sub
stc
fisubrs
test
insl
cmpsb
cmc
mov
mov
xlat
test
and
xchg
or
enter
loopne
pop
mov
pop
sahf
adc
sbb
sub
jae
xor
std
ja
pop
mov
inc
clc
pusha
dec
mov
cli
sub
movsb
ds
cli
ret
cwtl
jbe
push
dec
xor
push
xor
push
adc
sbb
or
sbb
xchg
push
mov
popa
decb
pop
lret
loope
mov
in
push
rcll
out
testl
pop
fists
cli
mov
or
xchg
inc
inc
mov
xchg
das
arpl
xchg
enter
repnz
mov
stc
mov
mov
in
dec
shlb
jmp
outsb
dec
cltd
test
jnp
roll
negb
mov
in
jg
sarb
lock
push
out
fistps
pop
sub
das
push
or
cmc
push
fnstcw
mov
jl
test
push
xchg
stos
mov
call
lods
mov
sbb
rorl
and
mov
icebp
xor
call
mov
sahf
and
xchg
gs
sub
xor
fcoms
mov
lcall
dec
imull
jae
pop
push
mov
push
pusha
xor
gs
inc
jmp
fildl
mov
or
test
mov
fmul
mov
cwtl
mov
shlb
add
adc
andl
adc
dec
pop
mov
shlb
fs
fiaddl
xorl
mov
les
pop
sti
jns
pushw
loop
jmp
popf
jno
pop
int3
sahf
pusha
mov
sub
je
aam
insl
movsb
mov
inc
fwait
add
push
movsl
mov
out
jecxz
lods
sbb
lret
sbb
popa
call
inc
fs
cmpb
add
and
jns
icebp
in
cmp
and
adcb
in
test
push
mov
inc
mov
pop
jecxz
lock
les
lods
and
xchg
aam
in
mov
cmpsl
xorl
lds
xor
andl
mov
shrb
in
push
pop
mov
ja
dec
fdivr
and
mov
lods
xchg
pop
push
test
lock
iret
stos
mov
ljmp
inc
push
jns
push
sti
mov
es
inc
movsl
out
stc
mov
cmp
sbb
cmp
pop
and
imul
adc
ret
rcrb
pop
or
dec
scas
xchg
add
iret
sbb
add
add
mov
fsubs
mov
push
inc
test
cmp
imul
aam
repnz
fstpt
call
test
dec
popf
push
pop
mov
ret
repz
stos
ret
jecxz
mov
sbb
orl
sbb
xchg
mov
pop
lcall
push
es
xlat
fs
xchg
daa
out
mov
rorb
das
mov
pusha
cs
mov
push
dec
cld
movb
in
clc
neg
mov
mov
es
fcompp
es
xchg
test
xchg
call
push
mov
scas
mov
cmp
or
push
push
pusha
xchg
movsb
test
or
sub
out
or
into
pop
mov
and
mov
out
mov
sub
mov
sub
sarb
push
xchg
cli
sbb
test
scas
lea
scas
sub
xchg
jl
push
leave
push
sbb
leave
cmp
mov
hlt
mov
lods
pop
pop
fistps
bound
jge
rorl
sub
adc
scas
out
dec
cmp
imul
shlb
popf
lock
cwtl
rcrl
adc
lea
fdivrs
xchg
fcmovne
aas
call
stos
xchg
repz
xchg
cmp
fs
mov
jo
push
mov
xor
xchg
sbb
stos
xchg
sub
fcmove
out
outsb
in
fs
or
inc
jge
cmp
xlat
cmp
decb
pop
mov
popa
loopne
sti
loope
pop
gs
sti
pop
dec
jb
sub
sub
and
popa
push
dec
fidivl
cmp
mov
sahf
push
lods
add
adc
arpl
xor
lret
or
sbb
cs
mov
cmc
cmp
pop
or
leave
iret
mov
int
add
daa
jmp
jmp
pop
lock
cmpsb
fnstenv
xchg
insb
adc
aad
cmp
scas
add
bound
roll
and
out
inc
inc
mov
lea
push
pop
mov
int
ljmp
adc
std
and
cmpsl
and
mov
jmp
outsb
rorb
inc
pop
sub
cwtl
ret
leave
addb
pop
dec
dec
xlat
bnd
mov
xor
loopne
mov
bound
popa
dec
mov
loop
aas
aam
dec
mov
mov
jnp
mov
insb
push
lds
cmp
sub
movsl
inc
test
mov
cmp
sbb
fucomi
xchg
push
outsb
mov
bnd
cmpsl
mov
notb
bound
cmc
inc
aaa
push
jge
jne
xor
push
test
mov
cmc
lods
cmp
flds
sub
cmpsb
inc
outsl
loope
jmp
dec
scas
enter
jg
mov
or
rolb
lock
fstps
lds
mov
dec
inc
mov
sub
aam
rclb
push
je
mov
fisttpll
jns
add
pusha
inc
adc
mov
test
adc
xchg
mov
in
stos
sbb
mov
clc
out
in
hlt
mov
movsl
add
lods
sahf
sbb
sub
subps
push
sbb
ljmp
sbb
pop
push
lds
add
jl
inc
mov
sbbl
je
pop
mov
mov
inc
cmc
imul
fwait
and
lahf
lock
jo
knotw
in
mov
dec
xor
insb
mov
shl
stos
adc
sub
stc
jno
loop
pop
or
cmpsl
insl
mov
pusha
pop
mov
push
ss
cmp
popa
jno
and
loopne
add
mov
int3
or
pusha
add
lds
or
xor
jbe
jbe
jns
roll
mov
inc
mov
mov
lcall
or
idiv
popf
pop
pop
jnp
add
ja
pop
add
or
ja
mov
filds
test
xor
xchg
das
int3
sbb
cmp
data16
mov
or
mulb
dec
sbb
inc
popf
pusha
jmp
loopne
cmp
sahf
adc
aam
mov
xchg
lret
lods
fcoms
push
pop
ja
dec
sar
cmc
jge
dec
outsb
loopne
xchg
xchg
bound
mov
jbe
or
movsb
ret
mov
adc
add
or
call
adc
arpl
loopne
sbb
pushf
xchg
cmp
or
push
xor
push
mov
cmp
cmpsb
out
jb
xchg
lahf
in
mov
test
inc
imull
or
mov
es
xor
mov
out
enter
mov
ror
xchg
ss
les
sbb
scas
aam
sub
jmp
in
lret
lds
dec
mov
mov
push
inc
or
aas
add
pop
sbb
ds
sub
icebp
pusha
dec
jl
loopne
jle
imul
inc
jns
jo
push
popa
push
dec
inc
mov
outsl
lds
and
movsl
cmp
mull
and
pusha
insl
push
addr16
aam
lods
inc
test
jbe
lahf
mov
hlt
push
xor
mov
xor
mov
sub
lret
in
or
mov
popa
scas
dec
outsb
in
lods
add
and
call
int3
sub
add
aas
jnp
jp
cmp
cmp
xor
jg
xlat
jecxz
dec
out
adc
hlt
lcall
cmpsl
pop
jecxz
sbb
xor
sbb
ds
imul
aas
out
in
movsl
or
push
inc
dec
cmp
adc
mov
or
mov
mov
mov
mov
das
mov
lret
xchg
lea
sbb
mov
mov
inc
mov
dec
adcb
cmp
or
adc
push
cmp
jbe
jecxz
outsb
push
fdivl
jmp
jg
ss
int3
stos
jl
rol
movl
jb
cmp
rcrl
loop
push
ficompl
clc
xor
jp
pushf
sub
dec
insb
xor
pop
cmp
mov
pop
xor
sahf
jb
cwtl
mov
mov
into
inc
fwait
ret
push
icebp
sbb
cmp
adc
add
imul
sbb
stc
adcb
pop
imul
ds
add
pop
cli
sbb
jl
lret
ret
or
cmp
fcoml
test
push
inc
mov
stos
or
ljmp
aad
hlt
mov
mov
out
les
outsb
lahf
mov
mov
lret
dec
inc
xchg
sub
sbb
lods
fnstenvs
cmpsl
and
cltd
sub
popf
mov
cmp
repnz
push
inc
xchg
xor
push
xchg
pop
xchg
mov
and
xchg
jae
loopne
rcrl
rolb
adc
repz
jno
inc
jecxz
add
lcall
dec
jmp
fsubrl
jg
jmp
or
loop
movsl
add
mov
jecxz
xchg
int3
arpl
dec
push
fwait
loop
jbe
mov
clc
mov
mov
jns
js
xor
xor
xor
movsl
add
shr
adc
jns
in
and
add
pop
sahf
lock
stos
rcrb
pushf
and
int
or
leave
add
sub
test
or
push
mov
mov
cmp
in
push
sti
xor
xchg
test
sbb
dec
push
fwait
clc
jp
add
pop
jne
imul
cmpsb
ds
push
sbb
adc
cmp
mov
jle
mov
dec
jp
sbb
sub
sti
dec
adc
jg
lahf
jle
stos
or
jb
cli
cltd
mov
shlb
cmpsb
addr16
add
iret
fists
bound
shlb
fimull
subb
jecxz
sbb
push
cmp
jle
mov
mov
jbe
xor
xor
or
into
ja
iret
xchg
inc
pop
sub
mov
lret
jns
push
cmp
jecxz
movsb
pop
inc
outsl
dec
in
ret
xchg
loopne
pushf
das
cmp
decl
mov
jne
jae
mov
fbstp
xorb
lret
xlat
xor
mov
shl
fxch
out
icebp
cmp
push
enter
lahf
cli
es
sub
into
gs
push
xchg
push
es
stos
in
push
ljmp
ss
in
mov
icebp
xor
sub
xor
outsb
xor
scas
inc
mov
sbb
jmp
cmc
fcomp
mov
mov
cltd
sbb
scas
arpl
dec
dec
fdivrl
mov
cltd
sbbl
add
pop
push
push
sbb
rclb
lock
addr16
fdiv
fstps
in
test
stos
sub
xor
xor
xchg
mov
and
hlt
xchg
pop
mov
popf
cmp
inc
adc
scas
mov
aad
js
mov
sub
add
addb
test
sbbl
aad
stos
loope
xor
xor
cmp
jno
jg
mov
xorl
xchg
push
scas
out
push
test
arpl
mov
inc
jo
xchg
scas
es
and
in
insb
es
gs
ja
ret
pop
into
mov
push
sahf
gs
jns
and
test
cmpsb
push
mov
mov
or
clc
mov
mov
sub
and
out
sbbb
add
and
jl
stos
mov
mov
aad
inc
in
jbe
in
mov
aad
lahf
sbb
clc
mov
loopne
repnz
xchg
icebp
test
jle
pop
pop
adc
ret
test
fst
arpl
cmp
inc
mov
sbb
push
lock
data16
sub
sub
ljmp
cwtl
jmp
andl
xchg
daa
push
mov
mov
add
xchg
xchg
cmpsb
xlat
add
fcmovnbe
dec
mov
aaa
leave
adc
mov
xchg
xchg
inc
and
cmp
stc
insl
jb
adc
adc
push
int
add
sub
mov
fsubs
rorl
adc
jp
es
out
outsb
outsb
push
sub
mov
mov
cs
pop
cwtl
add
mov
push
xchg
fdivrl
mov
mov
out
mov
mov
pop
adc
mov
xchg
xor
lds
inc
in
fdivs
pop
xchg
clc
aad
int3
imul
push
cld
je
cmp
xchg
jmp
jecxz
mov
sbb
rcll
or
sarb
xchg
sub
and
sub
fucomp
or
xchg
mov
or
hlt
sbb
inc
jmp
push
in
cli
push
xchg
jnp
and
int
mov
inc
cmp
lahf
pop
sbb
inc
lret
dec
aad
fsubrp
jno
andl
scas
cmp
aam
loope
ss
xchg
xor
out
and
fnclex
les
cmp
and
out
sub
jle
xlat
inc
sbb
mov
jl
sahf
and
adc
std
mov
pop
sub
ret
mov
jle
int
xor
push
add
lea
rcrl
inc
and
roll
push
sub
mov
pushf
cmp
xchg
mov
xor
adc
xchg
dec
dec
leave
arpl
sub
add
adc
gs
rolb
dec
sbb
cld
xor
sub
aad
gs
cmp
pop
sbb
pop
mov
cmc
in
add
jbe
sahf
mov
test
movsl
insl
add
or
jb
decl
mov
jae
and
flds
mov
movsl
push
mov
pop
test
sahf
push
inc
notl
testl
jo,pn
ja
and
mov
and
sbb
dec
lods
lcall
loopne
popf
push
and
add
jbe,pn
test
cmp
nopl
mov
inc
xchg
adc
adc
shr
sbb
xchg
ret
mov
dec
add
jnp
lds
xchg
stc
popf
ljmp
jne
aas
fsubrs
cmpsl
ss
loopne
jae
stos
jle
ljmp
inc
stos
sub
call
push
dec
jne
xor
je
pop
jno
and
add
jmp
mov
push
imul
adc
xor
mov
pop
loop
dec
pushf
adc
dec
in
js
and
add
loope
dec
cmp
in
sbb
pop
data16
dec
lret
xor
into
xor
lea
pop
dec
cmp
mov
test
push
or
mov
xor
mov
imul
aas
adc
in
add
cmp
rcrl
mov
add
sbb
iret
cmpsb
or
stos
push
lret
out
icebp
loope
sub
inc
aad
pop
int
and
and
cwtl
sbb
adc
jb
movsb
jnp
into
sbb
push
cmp
fimuls
in
and
sbb
outsb
pop
xor
lds
aad
or
inc
insl
jp
iret
push
cmpsb
pop
xor
mov
pusha
ljmp
or
jae
push
les
mov
inc
out
adc
je
addps
xor
push
scas
pop
cltd
fisubl
ss
out
mov
sub
push
pop
add
or
inc
or
pushf
js
imul
loopne
sbb
arpl
mov
sub
push
hlt
jg
or
pavgb
jb
stos
ret
lock
inc
cs
lock
data16
imul
and
sarb
inc
mov
push
xchg
call
mov
outsb
enter
xor
mov
pushl
loopne
jl
aam
idiv
lret
daa
jecxz
ret
adc
loope
xchg
orb
arpl
cmpsb
and
add
dec
fcomi
sbb
and
xor
ds
or
adc
pop
mov
shrl
imul
sub
lea
mov
mov
test
rol
pop
sbb
fidivl
hlt
mov
push
std
mov
adc
lcall
xor
mov
sbb
gs
outsb
ficoml
xor
ret
outsb
mov
push
ds
mov
mov
lret
mov
adc
push
jmp
xchg
add
jbe
lds
sbb
lea
dec
pop
pop
int
into
add
xchg
adc
in
xor
xorl
not
inc
push
and
dec
je
lea
adc
mov
inc
add
pop
or
adc
cmp
pop
outsb
ret
js
mov
outsl
push
and
mov
push
aas
xchg
jb
cmp
mov
jb
cmpl
sub
push
fbstp
cmpsl
mov
inc
notb
push
sub
mov
shr
push
leave
mov
and
jecxz
inc
mov
inc
jmp
pusha
sarl
cmp
add
jno
xorb
lcall
and
cmp
out
pop
popa
sbbb
xchg
loop
jno
add
fstl
mov
xchg
adc
add
jns
mov
pop
rep
xor
and
mov
imul
xor
fmull
add
cmpsl
ret
jb
lods
pop
fildl
rcll
test
add
push
pushf
xchg
mov
icebp
jnp
ljmp
out
mov
and
xabort
iret
and
and
jne
pop
dec
push
mov
sbbl
push
or
dec
jmp
ds
notb
movsl
cmp
addl
jae
dec
pop
mov
pop
fisttpll
inc
mov
inc
orb
je
dec
mov
sub
mov
and
xchg
inc
in
push
test
rcr
inc
sbb
xchg
pop
inc
lret
or
pop
fwait
stos
dec
dec
loope
das
aad
pop
negb
lods
aas
sub
adc
stc
loopne
inc
lods
inc
cmpsb
pop
mov
das
repz
push
xor
push
hlt
fsubrl
pop
and
outsb
jns
mov
fnstenv
inc
jb
mov
pop
lods
stos
divb
outsb
and
lods
pop
gs
cmc
jbe
in
ja
js
cltd
aam
stc
call
pusha
loope
dec
in
adc
mov
in
dec
xchg
orl
pop
lret
push
and
hlt
and
icebp
add
mov
shll
ficoml
lds
mov
or
push
mov
xlat
lahf
lahf
mov
pushf
mov
testl
jno
scas
xor
xchg
adc
add
stos
pushf
mov
xchg
sbb
xchg
jo
addr16
adc
fs
loop
push
sbb
nop
call
mov
rep
sahf
gs
fnsave
shrl
pusha
and
lods
lret
jle
insl
push
pop
inc
pop
stc
fs
loop
mov
in
mov
popa
fcomps
jnp
and
daa
fisubrs
cmp
bound
dec
xor
and
jb
inc
add
inc
inc
iret
fildll
xor
push
pop
jno
dec
push
inc
fiaddl
mov
jns
mov
pop
inc
sbb
clc
jb
inc
popa
inc
xchg
out
sbb
daa
sub
mov
repz
adc
mov
xchg
xor
pop
xor
cmp
pusha
sub
xor
mov
cwtl
test
mov
cmp
mov
pusha
mov
or
mov
and
mov
xor
cmc
adc
bound
sub
out
jns
add
lcall
fst
cmp
call
inc
xchg
leave
mov
and
sub
inc
rolb
adc
pop
test
int3
pop
sbb
inc
cs
dec
sbb
jnp
mov
xor
adc
inc
pop
test
inc
dec
jns
xlat
hlt
test
iret
sbb
mov
mov
stos
lds
cwtl
popf
in
mov
mov
idivb
ja
setbe
lds
sarl
ja
je
mov
inc
mov
and
stos
xor
ljmp
jl
inc
das
cld
subb
mov
mov
mov
xor
ds
scas
mov
loopne
and
cmp
sbb
rol
dec
ret
and
adc
push
mov
je
jmp
inc
lock
sub
outsb
push
ret
dec
jmp
iret
mov
scas
mov
insl
out
cmp
fbstp
push
and
cmp
repz
aam
jg
rol
cmpsl
mov
aas
jbe
cli
jo
sbbl
mov
rorl
mulb
shlb
outsl
mov
sahf
popf
popl
mov
jmp
sahf
and
inc
sub
aam
ret
jns
es
dec
lea
pop
sub
or
rcrb
mov
cmp
aad
faddl
or
add
dec
mov
lea
jo
cmp
adc
test
mov
or
movsl
push
mov
sbb
cmpsl
mov
push
shrl
iret
scas
stos
dec
lock
mov
mov
inc
test
mov
jne
mov
cmp
mov
mov
fcomps
jns
out
addr16
daa
push
fnstsw
mov
ds
movsb
es
adc
push
outsb
sub
bnd
mov
pop
mov
or
mov
adc
dec
jle
das
insb
push
stos
push
bound
pop
inc
mov
xchg
fwait
mov
inc
dec
in
push
outsl
pop
aam
jne
mov
and
dec
sub
mov
cmp
mov
insl
inc
jg
stos
sti
rolb
aad
lods
mov
sub
mov
jo
mov
jb
gs
faddl
lock
mov
mov
mov
into
mov
scas
ret
add
sbb
sbb
inc
dec
jmp
dec
dec
xchg
push
mov
clc
iret
inc
aam
aad
pop
cld
and
sbb
xor
fsubr
push
imul
les
test
enter
mov
ds
mov
mov
push
scas
and
cmp
pop
mov
es
outsb
xorl
add
xchg
hlt
jg
xchg
mov
and
nop
push
jge
or
lret
lea
mov
mov
pop
cmp
add
mov
sbb
cld
sbbb
mov
mov
ja
dec
jmp
jbe
add
in
test
cwtl
repnz
inc
in
insb
movsb
push
or
shl
popa
xor
push
mov
out
insb
ljmp
jne
push
leave
lret
aad
testb
xor
gs
aaa
sbb
movsb
cwtl
icebp
sub
lcall
pop
sbb
mov
push
xor
dec
mov
ds
pusha
inc
addr16
cmp
pop
repnz
xchg
xchg
push
imul
add
hlt
outsl
orb
mov
sbb
cmpsl
js
fldl2e
push
cmpsl
inc
sbb
dec
out
mov
xor
push
iret
dec
sbb
imul
popa
out
jae
push
dec
or
mov
test
inc
test
mov
adc
fcoms
inc
int3
outsb
add
ficomps
xchg
fs
ss
sub
dec
lock
sub
adcl
push
xchg
jns
rclb
push
fnstsw
in
pop
cmpsl
push
cld
cmp
xor
das
scas
mov
xchg
movntps
out
test
insb
fsubrs
xor
xor
int
pop
in
rolb
xchg
cwtl
outsl
loopne
icebp
outsl
sub
jecxz
lret
fwait
inc
stos
and
mov
jno
clc
jbe
push
roll
incl
xchg
loope
cltd
sub
cltd
or
and
insl
dec
mov
pop
or
xchg
je
mov
arpl
sbb
imul
ss
lods
adcb
lret
sarb
push
ja
cli
insb
push
cmp
cmp
jl
fmuls
es
mov
dec
adc
mov
ret
in
xor
lret
cmp
stc
mov
jp
or
lcall
call
lds
loop
or
cmpsb
shl
mov
cmp
pop
xchg
cmpsl
xchg
stos
mov
bound
sbb
push
pop
jp
sbb
mov
mov
out
mov
enter
xor
mov
mov
ja
mov
cmpsl
inc
mov
imul
cmp
add
insl
pop
rcll
test
test
inc
mov
lahf
xor
cli
test
push
xor
xor
stos
xchg
push
sub
fmull
mov
test
adc
rcll
sbb
movsb
dec
mov
das
cmp
fistpll
lods
out
fs
push
push
mov
xor
mov
xchg
lret
xor
mov
dec
andl
rcrb
sbb
gs
in
sbb
push
sub
fisubrl
and
push
es
or
loop
xchg
lcall
js
xchg
fst
pushf
insb
adc
fsub
sub
loope
sbb
mov
lock
loopne
inc
rol
jl
cmp
ljmp
scas
xor
mov
not
sub
pop
lcall
push
and
loope
xor
push
test
fs
xchg
lcall
push
push
bts
pop
push
cwtl
pop
incb
dec
or
scas
out
sub
cmp
out
fisubrl
jmp
add
insl
xchg
ja
imul
adc
lret
sbb
ret
shlb
in
inc
enter
mov
push
xorb
lods
popf
fs
push
or
out
aas
ljmp
cmp
lcall
jl
push
popa
int3
mov
sbb
push
aas
jbe
or
adc
push
xor
push
push
mov
pusha
ret
or
sub
fldt
xchg
call
fdivr
inc
aad
xchg
les
push
aad
xchg
push
push
ja
push
dec
push
mov
jecxz
jb
xor
pop
stc
scas
in
dec
iret
pop
dec
int3
pop
inc
mov
pop
pop
lock
adc
outsl
not
pop
stos
rcl
jo
sbb
out
inc
call
mov
push
rcll
xchg
pop
shll
icebp
pop
sahf
push
cmp
lods
into
ljmp
jne
out
push
test
and
test
fldl
push
mov
stos
jmp
mov
mov
je
sbb
push
mov
xor
mov
es
cmp
gs
outsl
or
scas
and
lds
push
mov
jmp
sbb
popf
cmpsb
addb
pop
mov
or
xchg
jno
push
push
mov
xor
push
jbe
and
inc
ret
mov
iret
pop
sub
pop
pop
cltd
mov
std
cmpsb
or
lods
dec
repz
into
mov
inc
cwtl
cmc
cld
mov
jns
inc
or
mov
repnz
out
loopne
fistpll
aam
ret
popa
cmpsl
adc
stos
push
in
xor
push
sub
add
cmpsb
adc
sbb
or
sbb
adc
das
jge
push
jp
or
inc
shll
mov
adc
aad
jge
push
jae
testb
xorb
mov
cwtl
sbb
je
pushf
jle
in
lret
icebp
mov
inc
jbe
rcr
push
stos
pop
popa
ret
mov
dec
or
jno
test
pop
flds
cmpsl
mov
scas
xchg
out
pop
push
adc
or
dec
test
and
insb
outsl
mov
inc
inc
jge
imul
sub
test
lock
rolb
mov
shrl
subb
imulb
enter
mov
mov
popl
stos
popf
outsb
sub
inc
insl
inc
mov
enter
xor
nop
and
cmp
cmp
hlt
ljmp
sub
enter
sbb
mov
in
lock
outsl
cmpsb
pop
jo
or
repnz
mov
lds
xchg
mov
add
inc
in
mov
pop
leave
fcmovbe
mov
stos
sbb
fldcw
cmp
adc
sub
int3
fs
pop
bound
push
shll
sbb
pop
fsts
stos
ljmp
push
sbb
unpckhps
xchg
pushw
jne
es
neg
xor
lahf
jge
bound
in
rol
jae
jb
out
rcr
xchg
sbb
gs
push
dec
fsubl
ja
cmp
adc
js
icebp
mov
pop
pop
cltd
cmpb
adc
push
sub
push
dec
adc
lea
cmpl
stos
mov
fwait
repnz
lahf
mov
cli
pushf
sub
push
popl
int3
icebp
bound
dec
and
or
mov
mov
push
pop
mov
fstl
test
ljmp
decl
fadds
mov
roll
inc
rol
mov
xlat
cmp
insl
ljmp
push
cmp
idivb
stc
cmp
mov
into
vpshuflw
mov
in
adc
dec
jno
sti
xor
cmp
test
and
insl
bound
nop
test
popf
bound
in
sbbl
adc
or
mov
jnp
xchg
sbb
or
pushf
xor
mov
mov
test
pushl
xor
je
push
or
test
insl
aas
int
jae
adc
pop
add
pop
inc
push
mov
fsts
nop
repz
in
cli
shl
das
mov
push
cmc
xchg
xchg
mov
and
xchg
pop
or
xchg
ja
dec
pop
pop
xchg
push
mov
movsl
add
mov
pop
das
sbb
into
aad
fnstcw
xchg
mov
xorb
sbb
addr16
mov
add
repnz
jne
and
jl
add
imul
sbb
lea
addr16
fsubr
out
jno
call
mov
fwait
pop
int
outsl
testb
pop
mov
stos
aad
sbb
ffree
pop
xor
push
jo
ret
js
sbb
and
inc
pop
sub
mov
in
and
push
sti
dec
jbe
ljmp
lret
xchg
push
leave
ja
or
xchg
push
aas
dec
jno
stos
movsb
sbb
popf
sbb
ss
shll
mov
xchg
xchg
lcall
daa
and
pextrw
subb
dec
das
fdiv
pushf
sub
aad
cmp
push
loope
arpl
inc
ret
pop
fs
movsb
mov
lcall
push
mov
jb
mov
pop
xchg
jle
lds
in
out
xor
dec
sub
fildl
leave
mov
cld
jg
pop
mov
dec
mov
add
js
or
lds
adc
push
pop
sarb
dec
inc
push
pop
stc
xchg
gs
or
es
movups
int3
or
insl
out
into
mov
in
outsb
jne
xchg
xchg
sarb
movsb
ret
in
cmp
pop
mov
pop
pushf
or
jno
pop
fcom
lods
or
sbb
enter
stos
xor
sbb
mov
dec
inc
lock
mov
sbb
and
dec
adcb
ret
sbb
fwait
push
xchg
cmpsb
inc
nop
cmp
notb
ds
pop
push
xor
enter
mov
stc
inc
add
lods
sbb
imul
xor
jecxz
ror
inc
je
mov
sarb
mov
jbe
dec
pop
orl
xor
in
cltd
clc
push
xlat
mov
jo
imull
sarb
inc
lods
imulb
pop
push
mov
ja
aaa
sub
or
das
hlt
pop
mov
pop
clc
cmp
das
and
jecxz
lods
mov
xor
movsb
outsb
fcmovnbe
pop
sbb
add
pop
xchg
jb
inc
sbb
or
cld
cmp
cmp
or
dec
mov
in
mov
imul
adc
das
mov
cltd
repnz
jo
sahf
mov
jns
or
cmc
dec
and
push
inc
push
test
cli
js
adc
mov
movsl
sub
push
mov
and
mov
adc
loop
jne
in
andb
mov
subl
add
loope
rcrl
dec
and
xchg
outsb
out
jnp
inc
push
mov
pop
adc
pop
jno
call
push
or
sub
rorb
mov
pop
push
mov
dec
hlt
jp
jmp
mov
in
inc
out
mov
and
push
dec
adc
stos
loop
add
test
lea
cli
dec
mov
sbb
sbb
push
leave
push
jno
push
je
jge
pushf
outsl
sahf
test
mov
mov
rcll
cmp
add
jp
or
int
jmp
shll
mov
jmp
movl
jno
std
pop
mov
mov
fs
outsl
inc
stc
orl
into
jp
jns
jnp
inc
in
cmpsl
xchg
mov
mov
inc
cmpsl
mov
jmp
sbb
sub
jnp
das
fchs
lea
pop
sbb
cwtl
jle
cld
adc
jmp
xchg
push
shrl
pop
sbb
xorb
jge
ficompl
dec
cmp
pusha
addr16
pop
int3
cwtl
shl
mov
lret
mov
loop
jl
xor
jne
cltd
jo
jl
arpl
into
cmpsb
jecxz
es
jb
aas
jle
addr16
or
movsb
xor
add
mov
add
or
cs
adc
popa
and
les
and
cltd
sub
testl
or
inc
mov
pop
sarb
push
jbe
xchg
and
inc
mov
push
and
pop
loopne
lods
xlat
clc
test
xor
outsb
lods
subb
jno
shld
push
xor
jmp
or
pushf
and
mov
xchg
es
pop
test
mov
cmp
loope
je
ret
sub
sbb
jb
adc
xchg
ss
jns
mov
pop
pop
pop
loope
addr16
mov
lret
mov
ds
add
aaa
pop
mov
inc
enter
sbb
sbb
fsubrs
mov
mov
sub
and
add
aad
adc
mov
inc
mov
cli
outsl
pop
paddw
mov
jp
out
sub
xor
adcb
xor
xor
inc
in
es
imul
xchg
mov
sti
leave
out
nop
push
sub
jmp
fbstp
jp
sbb
add
push
sbb
fbstp
ja
jle
aam
bound
imul
lods
lret
das
and
jno
lea
mov
and
stos
les
inc
dec
std
sbb
sbb
jp
mov
inc
fcomi
cmp
inc
jbe
jns
xchg
cld
lret
jmp
cmp
jne
sbb
inc
cmp
fwait
mov
aam
add
ret
cmp
cmp
push
sub
mov
xchg
loop
int3
mov
inc
pusha
std
pop
jmp
aad
out
insl
cld
aaa
popf
xchg
test
scas
xchg
test
add
adc
xor
pop
sahf
das
mov
xchg
pusha
push
fmuls
dec
mov
push
mov
cli
xchg
mov
and
mov
adc
mov
push
pushf
and
repnz
bnd
sub
add
scas
out
fstps
fisubl
jl
pop
push
out
ds
xchg
xchg
push
negl
inc
arpl
sbb
test
cli
ret
xor
test
fimull
add
mov
test
icebp
inc
mov
jb
arpl
mov
push
fidivrl
das
inc
mov
mov
sub
fwait
sbb
and
mov
shll
into
loope
cld
fildl
jg
push
inc
add
xorb
fs
lock
adc
clc
pop
cmp
mov
inc
test
dec
imul
sbb
shrl
sarb
add
pop
fisttpll
xor
push
jp
or
mov
out
popa
mov
leave
xor
ljmp
scas
rorb
and
jp
cmp
mov
pusha
mov
cs
call
aad
sbb
and
notl
dec
inc
mov
xchg
cmp
dec
popa
icebp
icebp
call
or
cmp
faddl
andl
pop
movsl
stos
xchg
rcll
push
outsb
les
fcoms
mov
jne
mov
sarb
insb
add
decb
leavew
mov
xchg
inc
cmp
pop
cld
xor
arpl
add
scas
add
popa
pop
test
fcomi
in
ja
jp
add
inc
movsl
and
clc
data16
jne
cwtl
dec
pop
jge
out
test
sbb
imul
xor
std
mov
add
jnp
or
shll
call
pop
dec
idivb
ds
outsb
pop
pop
int
test
and
ds
pop
xchg
in
xchg
shlb
adc
cmp
insb
fisubs
cld
cmp
lods
xor
jnp
xchg
addl
xlat
cmc
outsb
push
inc
in
hlt
mov
aad
std
movsb
lahf
lods
ss
push
xchg
js
jae
lds
fs
sub
cs
jge
out
ja
rclb
dec
movsb
in
fistl
scas
push
mov
mov
cmp
cmp
movq
nop
test
push
rcrb
push
ret
testb
push
dec
enter
add
push
aam
popf
pop
jecxz
lret
cmp
xor
sbb
rorl
dec
pop
out
test
cmc
cmp
imul
and
jbe
andl
negl
mov
push
xor
xchg
inc
add
mov
xlat
jecxz
mov
mov
js
mov
test
insb
lods
insb
das
sub
push
or
cwtl
inc
push
scas
loop
cmp
cmpsl
sub
cld
cmp
xor
decl
inc
jmp
jae
mov
jne
lcall
mov
test
int
lret
pop
loope
das
jp
mov
lahf
mov
das
jp
add
pop
daa
idivb
jo
imul
push
cmp
pop
das
xchg
sahf
in
out
jns
xchg
test
outsb
outsb
mov
popl
add
in
xor
scas
mov
fnstenv
das
outsl
dec
hlt
xchg
out
jg
scas
ss
jne
push
mull
inc
mov
lret
pop
fcomps
cmp
iret
in
mov
xchg
les
jo
lcall
mov
jle
pop
icebp
dec
jbe
xor
and
cs
sbb
jb
std
int3
and
ljmp
jp
test
in
imul
inc
js
jg
test
cmpsl
xor
insb
outsl
aam
ficomps
and
cmp
mov
sbb
js
incl
cmc
out
or
ss
repnz
mov
ja
dec
loopne
cwtl
jno
in
clc
mov
popf
stos
push
pop
insb
jmp
or
jno
cmp
push
ffreep
in
xor
add
adc
loop
lock
push
adc
mov
push
cmpsb
movsl
fucomip
dec
mov
repz
or
mov
int
mov
push
loop
dec
dec
mov
dec
inc
fcomp
jmp
add
or
sti
and
and
cmp
ret
push
sub
cmp
inc
jl
push
movsb
into
out
sub
xchg
aad
pop
adc
lret
ja
dec
pop
cmp
sbb
scas
js
mov
lock
mov
jg
push
sbb
fmuls
aas
adc
cmp
push
mov
mov
sub
jae
bound
subl
xchg
fists
ss
add
test
inc
in
hlt
cmpsl
cmp
pop
fsubr
pop
push
test
outsl
mov
repnz
neg
dec
inc
xorb
subb
insb
dec
cli
pop
inc
mov
jle
mov
mov
mov
ljmp
xor
notb
jae
push
mov
fcompl
insl
mov
inc
in
fmul
mov
int
cld
inc
mov
outsl
push
mov
rorl
xchg
inc
pop
cwtl
or
ljmp
outsb
fxch
jbe
xchg
movb
add
jns
pop
jp
jecxz
test
fwait
push
or
pop
lods
mov
sbb
int3
dec
cltd
jp
jne
add
test
sbb
dec
mov
add
shll
movsb
pop
into
xchg
aas
push
mov
je
jmp
scas
clc
and
stos
mov
cs
nop
xorb
sahf
sub
mov
lods
cmc
adc
mov
mov
mov
icebp
test
xor
lods
arpl
add
cli
push
pushf
mov
jb
xchg
dec
cltd
fpatan
xor
dec
xchg
adc
xchg
rcrl
pop
fwait
cmp
jle
or
mov
cmc
inc
and
repz
and
rcll
movsl
jg
test
lock
mov
icebp
movsl
inc
fstpt
sub
stc
aad
push
lcall
pusha
icebp
adc
xchg
push
mov
mov
cwtl
sbb
push
dec
jo
xchg
mov
and
push
addl
inc
jecxz
cmc
test
call
cli
jo
es
popa
rorl
imul
push
movsb
cmpsl
adc
xor
mov
pop
scas
jmp
inc
outsb
and
jle
sbb
stos
mov
add
out
dec
pop
cld
push
enter
push
leave
insb
push
pop
pop
dec
jno
fmuls
mov
shlb
cld
xor
out
movsb
sbb
or
flds
lcall
push
repz
fs
sbb
fwait
sbb
pusha
jne
cmp
in
jecxz
add
xor
xor
lret
das
push
popa
mov
push
movsb
sbb
sbb
xchg
mov
dec
cmp
fmull
scas
mov
mov
inc
aaa
sub
sbb
ds
shlb
add
jl
fldenv
cwtl
push
rorl
out
dec
push
cmp
lcall
sbb
out
adc
leave
std
mov
rcrb
xchg
fldcw
repnz
jae
xchg
sub
rorb
in
in
mov
mov
jl
stc
sahf
pop
pusha
push
int
dec
into
mov
mull
or
dec
push
gs
dec
inc
outsb
mov
pop
fiadds
lds
lea
fildll
push
sub
jp
cmp
jp
add
shll
push
xchg
loop
sarb
pop
sub
pusha
pop
lods
xlat
cmp
pop
sbbb
ss
ror
sarb
js
jnp
mov
jmp
xchg
js
jnp
mov
cmp
or
neg
ret
xor
mov
cmp
mov
add
mov
adc
inc
addl
cmpsl
les
adc
adc
xorl
popf
int
aas
xlat
jg
insl
sub
arpl
inc
sahf
in
stos
inc
mov
mov
pop
dec
xor
xchg
pop
fstpt
lds
sub
or
cmp
aas
and
out
rcrb
test
lods
sbb
fwait
cmp
scas
arpl
sarl
stc
insl
scas
imul
dec
adc
jmp
and
mov
repnz
sub
bound
sbb
dec
mov
outsl
sbb
orb
add
cmp
fstpt
cltd
cmp
mov
mov
xlat
inc
mov
xor
jns
cwtl
cs
stc
aas
sbb
xchg
jg
dec
push
sahf
pop
test
ffreep
call
fildll
mov
adc
xor
mov
push
xor
xor
pusha
mov
je
sub
enter
rolb
clc
into
sub
jle
arpl
fwait
mov
mov
dec
and
addl
xor
arpl
mov
push
xchg
in
inc
or
push
fistpll
andb
aad
mov
dec
negb
into
mov
popa
add
ret
push
sub
mov
mov
sub
mov
pop
xor
push
jne
mov
push
std
push
mov
loope
fistpll
repnz
pop
iret
cmp
sub
push
outsb
push
fildll
fcmove
in
lods
push
jae
lcall
inc
int3
out
lods
inc
pop
push
movsl
aad
dec
adc
cmpsb
rclb
test
push
or
mov
ret
mov
sbb
outsb
ret
cmp
dec
xchg
mov
or
imul
pushf
into
cmp
shl
xor
pusha
fistpll
add
push
and
sub
movsb
ss
fimuls
out
adcl
adc
pop
and
fwait
cmp
sbb
jge
push
and
xor
in
jle
adc
add
test
in
dec
sarb
cs
cs
std
sbb
cs
shll
sbb
movsl
xchg
push
in
push
pop
dec
or
xchg
stos
sub
nop
sbb
outsb
call
sbb
js
inc
out
mov
in
sub
int
insl
cmp
int3
mov
mov
stc
insb
mul
out
sbb
sahf
fimull
lods
das
enter
iret
xlat
int3
rorb
mov
lock
loop
imul
insb
pop
dec
loopne
es
out
mov
mov
inc
cmp
sub
mov
lock
jge
pop
pop
xchg
fst
add
cmp
ss
mov
or
mov
stos
mov
rorb
cltd
flds
subb
xchg
xchg
mov
das
sarb
jecxz
jno
sbb
jns
sbb
loopne
ret
arpl
je
leave
popa
jb
fnstsw
xlat
into
das
xchg
xchg
testl
cld
in
mov
add
fistl
or
mov
movsb
aad
push
out
push
dec
sahf
inc
scas
bound
enter
loopne
pop
xlat
inc
dec
cmpsl
inc
xchg
adc
jb
aas
pop
cld
js
rorb
fs
pop
popf
shrl
sbb
ret
push
xor
fbstp
dec
cltd
cmp
xchg
add
and
lock
fdivl
aaa
dec
mov
lds
jae
out
push
pushf
mov
add
test
jg
test
cmp
fwait
imulb
sbb
loopne
xor
sub
std
mov
mov
insl
ja
cmpsl
popa
call
xchg
loopne
sarl
mov
jle
pusha
pop
pop
push
jns
inc
pop
mov
ja
mov
ds
adc
ss
pusha
filds
or
popa
dec
rorl
xor
loopne
cmpsl
mov
outsb
out
out
jno
js
xchg
movsb
push
test
lahf
shll
sub
xchg
movq
push
lea
pop
sbb
mov
in
loop
inc
cmp
mov
rcr
cmc
outsb
xor
xor
fwait
cmp
mov
sub
ds
lret
scas
dec
cmpb
jmp
mov
pushf
mov
negl
and
and
repz
test
gs
daa
stos
in
fld
lods
ficompl
ds
insb
daa
jnp
inc
imul
mov
sub
inc
fdivr
jno
aaa
sub
mov
lret
aaa
adc
mov
pop
sub
cli
std
sub
movsl
xchg
or
jns
cld
dec
imul
mov
mov
enter
test
xor
mov
mov
enter
cld
push
jns
das
sbb
addr16
out
rol
outsl
bound
mov
and
sbb
insl
out
ss
dec
xchg
pop
adcl
jmp
add
fbstp
pop
scas
sub
mov
mov
add
fildl
inc
mov
fistl
pop
jno
jl
mov
jle
cli
cmpsl
iret
stc
test
pushf
mov
shrb
inc
inc
or
cli
dec
jns
mov
call
loop
out
mov
dec
mov
mov
arpl
adc
push
mov
icebp
mov
fisubrs
and
fs
sub
das
mov
popf
int
push
adc
loope
jb
sti
and
and
push
pop
stos
std
adc
add
and
insl
out
add
decl
andl
lock
icebp
loope
addl
inc
jns
ret
cmp
dec
xchg
cmp
sbb
fsubrl
mov
cmc
cltd
out
sub
mov
mov
mov
push
in
mov
mov
push
pop
icebp
sti
push
test
push
aad
push
into
or
jb
xchg
or
adc
inc
leave
push
ror
xchg
push
aam
or
xchg
xchg
jne
push
outsb
movsl
mov
lea
sarl
ret
rclb
lods
inc
mov
sbb
dec
scas
sub
leave
mov
out
mov
sub
or
icebp
and
lds
add
cmp
scas
cli
scas
adc
test
mov
xor
pop
sbb
in
ds
sahf
lea
cmp
and
pop
and
mov
sbb
push
fwait
xchg
cwtl
mov
xor
jae
jne
loopne
pop
loop
mov
push
adcb
es
sarl
mov
aaa
pusha
and
adc
mov
popf
and
mov
rorb
js
adc
lea
jecxz
aam
mov
cwtl
gs
movl
dec
dec
or
test
aas
push
mov
fisttps
jbe
xchg
fidivs
lods
mov
lahf
mov
inc
pop
pusha
cli
and
scas
add
mov
out
into
lcall
int
lret
pop
repnz
nop
xor
push
xor
fwait
cli
add
loope
pop
sub
jp
push
dec
lret
popf
and
pop
mov
jge
jno
out
inc
xlat
cmp
push
popa
ret
cli
in
sahf
popf
dec
ds
xchg
daa
mov
mov
gs
lcall
fisubrs
mov
lds
std
loopne
push
pop
dec
xchg
push
lea
cmpb
inc
mov
mov
aad
mov
outsl
movsl
movsl
xchg
loopne
fs
es
shrb
inc
mov
andb
popf
inc
mov
sti
add
jmp
dec
enter
rcll
mov
pop
push
xlat
icebp
push
stc
dec
fldl
jg
loope
mov
cmp
cmp
fdivr
and
scas
push
jecxz
sbb
jbe
push
pop
stos
mov
dec
sub
cmp
sbb
push
cmp
sahf
in
cltd
add
pop
imul
mov
inc
ret
mov
mov
mov
pop
orl
jo
pusha
mov
mov
test
test
cmp
sbb
insl
mov
xor
sbb
nop
rclb
and
fbstp
scas
popa
jle
push
fldcw
mov
pop
pop
or
in
adc
aam
mov
pop
adc
sbb
mov
scas
jns
clc
and
push
cli
jae
jecxz
pop
int3
outsb
dec
call
daa
lea
mov
test
mov
not
mov
repz
test
inc
bound
ss
fwait
out
jl
imul
rcrb
out
xchg
xchg
stc
inc
pop
icebp
rcl
pop
mulb
ficoms
lret
repz
xchg
pop
es
repz
inc
mov
clc
in
adc
inc
add
in
push
lret
add
sub
out
or
stos
cmc
push
xchg
cltd
icebp
sbb
mov
negb
fs
sub
mov
dec
xchg
mov
pop
clc
rcrb
data16
push
aad
sbb
ret
aam
dec
enter
inc
or
je
enter
cmp
push
insb
fcomps
or
int3
and
fsts
jno
mov
jno
es
out
rdmsr
adc
inc
jb
xchg
mov
jl
outsb
out
mov
xor
jo
testl
popf
push
pop
push
mov
adc
sub
pop
pop
pop
setbe
mov
push
xchg
jmp
inc
fidivs
in
sub
das
fists
loope
test
jp
in
sub
sub
sub
sub
cld
lods
or
pop
xorl
sbb
jnp
push
and
pushf
addr16
or
bound
pop
xor
xchg
pop
imul
notl
mov
shrl
mov
sahf
xchg
xlat
mov
fldl
pushf
xor
insb
add
cmp
xlat
orl
popf
btc
ret
and
push
mov
and
in
sub
scas
loop
ss
repz
pop
mov
adc
pop
lret
cmp
xor
adc
arpl
jp
hlt
inc
fwait
in
cli
and
inc
or
mov
in
scas
jmp
aas
jns
lods
popf
jns
pop
pop
outsb
idivb
incl
push
pop
test
cmpsl
pop
movsl
mov
push
rcll
sar
dec
mov
stos
cmp
repnz
sbb
push
xor
inc
fistpll
cmpsb
outsb
fwait
addl
mov
cmpsl
fsubr
movsw
fiaddl
cmp
sti
push
lods
mov
in
test
jle
cmp
dec
xor
sbb
push
adc
scas
jl
std
pop
mov
pop
jl
jg
in
clc
pop
dec
into
sub
subl
sub
es
cltd
add
loop
mov
push
inc
out
xchg
add
push
int3
jnp
jp
cmpsb
add
xchg
es
pop
add
outsb
mov
icebp
ficomps
push
and
testl
jo
aaa
inc
mov
lret
fsubs
movsl
jge
pusha
sub
stc
push
stos
ret
xlat
add
jmp
push
push
and
lcall
or
dec
movsb
mov
loop
icebp
xor
push
lahf
mov
and
and
sub
cltd
pop
mov
imul
ljmp
int3
mov
pusha
fcmovnbe
mov
mov
cld
add
aad
dec
mov
lods
dec
test
rcll
and
push
lcall
xor
in
test
jo
and
std
jb
movsl
xor
adc
fnclex
xlat
xchg
lahf
lods
cmp
or
xor
xchg
das
or
iret
adc
inc
jns
or
mov
out
jnp
pop
push
enter
subl
shlb
lcall
outsl
in
jecxz
pop
push
pop
int
lahf
or
std
dec
jl
sub
xor
in
jp
or
or
fidivrl
and
shl
dec
mov
ficoml
xor
jmp
sbb
mov
mov
in
dec
loopne
in
lds
cmpsl
movsb
out
pop
fs
xchg
jo
cmp
xchg
mov
mov
dec
mov
aaa
xchg
adc
mov
mov
insb
sti
sub
mov
enter
dec
xor
ret
daa
cmp
std
or
repz
xor
push
mov
pop
add
shrb
sub
repz
adc
int
dec
or
daa
cmc
adc
sub
nop
cmc
or
bound
lret
dec
or
lahf
cs
xlat
sbb
lahf
and
sbbl
es
outsb
insb
cmc
jge
jae
cmp
pop
cmp
insl
adc
or
into
popa
lahf
fildl
out
rclb
pushf
fsts
scas
cmpsb
cs
push
fisubrl
int3
mov
test
push
pop
cmc
stos
pop
enter
gs
jbe
lea
negl
dec
sbb
add
lahf
sbb
subb
jecxz
and
mov
in
sbb
out
xchg
jle
out
adc
dec
test
xchg
xor
xor
dec
into
pop
movsl
xchg
aaa
push
aas
cmp
insl
ret
jns
mov
jmp
incl
sub
adc
call
xor
int3
mov
movsl
jbe
ljmp
pop
sub
inc
les
xchg
repnz
mov
adc
arpl
cld
cmp
mov
outsb
jl
loope
dec
cmpl
mov
sbb
shl
sbb
mov
cltd
fnstcw
shll
pop
dec
mov
sbb
xchg
sbb
out
push
pop
mov
test
mov
sub
mov
jp
xchg
rorl
cmp
aad
xor
fadd
push
xchg
lods
out
sbb
push
nop
jbe
jecxz
jno
out
mov
testl
sbb
xor
or
ret
pop
mov
cli
les
loopne
mov
jns
dec
jnp
jne
in
mov
scas
in
add
mov
inc
and
mov
andb
jbe
jb
xor
push
mov
adc
or
repz
aam
fs
roll
inc
mov
insl
es
add
in
or
iret
cmp
jecxz
loopne
mov
out
dec
std
mov
pop
push
int3
jecxz
faddl
dec
imul
mov
adc
sbb
dec
jnp
fcoml
ss
mov
data16
push
mov
and
repnz
fmull
sbb
mov
orl
mov
ljmp
sbb
call
js
lods
loop
or
inc
mov
jl
sbb
add
std
mov
xor
jns
xlat
xchg
leave
mov
push
shll
sbb
inc
fldt
pop
dec
xchg
mov
lea
jnp
pop
out
out
jns
daa
xchg
sbb
data16
or
dec
push
sbb
ficoml
ja
js
mov
cld
adcb
add
data16
pop
xlat
pop
mov
adc
mov
fwait
lods
arpl
cli
mov
mov
clc
mov
pop
ret
popf
int3
dec
dec
cmpl
and
jae
add
mov
or
sbb
mov
inc
arpl
pop
xchg
sub
push
cmpb
mov
int3
ficoml
adc
test
ja
cmpsb
aaa
insb
adcb
cmpsb
xchg
add
inc
roll
outsb
aaa
mov
sbb
inc
sbb
jne
xor
sub
cltd
xchg
mov
dec
insb
push
xor
jmp
sahf
push
imul
call
lock
dec
aaa
enter
inc
ficomps
sbb
jns
dec
lret
ljmp
push
inc
xchg
add
cmpsl
in
std
add
fdivrl
inc
adc
and
mov
sub
inc
aad
cmpsb
sti
loop
mov
lret
es
pusha
out
test
cmpl
pop
aaa
xchg
xchg
loopne
mov
insl
mov
cmpsb
and
adc
call
mov
sahf
rcl
fwait
out
push
mov
enter
aas
ljmp
inc
jmp
pop
out
cmove
cli
xor
dec
repz
add
pusha
mov
loopne
bound
mov
mov
xor
inc
in
ljmp
mov
inc
cmpsl
ss
inc
and
movsl
lea
scas
out
jbe
insl
xlat
out
sub
mov
shlb
push
mov
add
mov
dec
popa
mov
ja
pop
mov
shrl
sbb
lods
cmpsb
push
jl
xchg
jno
out
cmp
orb
aad
xor
adc
jae
testl
les
mov
mov
mov
enter
enter
xlat
mov
mov
push
std
cmpxchg
cmp
std
out
lret
mov
and
and
pop
sbb
fimuls
pop
leave
pusha
outsb
cmp
nop
ds
mov
push
in
cmp
pop
out
shll
out
test
shr
les
sarb
push
xor
movsb
aas
out
pop
cld
cmpsb
sub
or
das
mov
sub
imul
and
cmp
mov
push
jae
sbb
pop
in
push
loopne
addr16
in
enter
jp
ret
xchg
repz
push
dec
push
andl
pop
push
movsl
push
sbb
mov
pushf
adc
push
lds
xor
pop
addr16
loope
add
push
sbb
in
jmp
add
dec
dec
and
sub
cltd
mov
scas
mov
push
mov
fdiv
in
test
push
fmuls
pushf
das
mov
mov
pop
add
into
xchg
das
cwtl
das
movsl
or
adc
or
cld
mov
scas
mov
and
stos
ret
mov
add
pop
mov
insb
inc
adc
arpl
add
add
pop
into
icebp
mov
rclb
dec
out
mov
pushf
add
fsubrp
xlat
adc
fadds
repnz
lahf
mov
cs
pop
iret
xor
dec
cld
adc
jl
inc
pop
and
cmp
les
inc
push
mov
cmp
add
inc
rorl
cmp
mov
ljmp
mov
jmp
jb
je
aaa
das
in
inc
data16
jae
pop
xlat
pop
int
outsl
and
mulb
pop
or
in
test
jnp
cli
jl
std
mov
decb
push
and
mov
and
mov
and
mov
push
push
mov
dec
cld
fnstsw
cmp
lods
jae
push
inc
shrl
lock
inc
xor
pop
stos
imul
push
mov
adc
movsl
sbb
cmp
jge
or
cmp
rorl
xor
sbb
arpl
push
add
jns
sahf
fwait
xor
sub
inc
aaa
mov
js
leave
push
cmp
mov
adc
jge
idiv
outsb
xchg
jnp
cwtl
xchg
cwtl
arpl
std
mov
inc
sub
push
pusha
add
imul
stc
ljmp
mov
gs
jle
lods
xor
leave
nop
rep
sahf
pop
aas
pop
lret
mov
leave
rcll
popl
lcall
inc
call
mov
mov
sbb
enter
cmpsl
mov
sub
sahf
or
fimull
cwtl
enter
xor
and
repz
cwtl
das
jb
pop
inc
stos
mov
pop
fistpl
pop
jae
mov
cwtl
ficoml
pusha
xor
push
bound
adc
mov
fists
xchg
adc
cld
les
xor
push
sbb
cmp
cmpsb
test
lret
shl
outsl
mov
sub
xor
dec
mov
lahf
and
call
pop
cmpsb
mov
dec
sahf
fldl
rorb
mov
aaa
cmp
mov
daa
push
sbb
pop
add
mov
sub
pop
gs
jl
and
mov
stos
sub
inc
sbb
mov
fwait
pop
mov
push
cs
fstl
xor
mov
mov
movsl
loope
adc
cmp
flds
cwtl
jle
inc
js
cmp
icebp
dec
push
test
xor
pusha
mov
mov
mov
les
push
mov
imulb
notb
fistps
rcl
scas
xchg
rcrl
sbb
dec
mov
mov
inc
fucomi
or
repnz
ljmp
lea
fistl
add
xchg
jns
sbb
insb
and
lahf
adc
imul
mov
andl
xchg
out
push
ret
push
mov
or
or
ret
xor
mov
shlb
jae
sbb
shr
lcall
jle
mov
adc
jne
in
xor
int3
std
adc
jo
cld
leave
adc
dec
shlb
decb
and
adc
adc
push
ffree
inc
lock
xchg
jmp
mov
out
es
mov
cmp
arpl
cmc
cltd
pop
adc
jns
cmp
add
shlb
push
mov
aad
scas
imul
pushfw
out
lcall
jo
jnp
mov
mov
aad
popa
stc
rclb
shlb
pop
xchg
stos
popa
mov
add
sbb
or
jmp
aad
xchg
or
jp
test
int
int
pop
into
es
push
scas
in
push
pop
xor
outsl
dec
jmp
mov
leave
leave
jne
std
and
mov
aaa
pop
fnstsw
lds
mov
or
aas
loopne
testl
adc
nop
push
and
xor
sahf
xchg
cmp
add
cmp
stos
ja
mov
jb
sub
pop
sbbb
lock
mov
scas
dec
lods
fadds
pop
mov
dec
mov
repz
outsl
jge
inc
xchg
xor
cmp
stc
pusha
push
sbb
mov
shl
inc
inc
or
jno
insl
xorb
inc
enter
inc
jbe
mov
lods
hlt
fiaddl
in
push
rolb
lock
andb
shl
ffree
mov
popf
lods
movsl
nop
xor
aas
imul
std
mov
inc
mov
sub
in
jns
fs
mov
inc
in
dec
mov
xor
mov
insl
mov
sbb
add
loope
or
shlb
iret
ljmp
lret
xchg
jge
test
insb
pop
idivl
pusha
push
adc
inc
cwtl
mov
add
adc
enter
mov
adc
jl
xor
dec
sub
xor
mov
or
jge
and
xchg
adcl
xchg
pop
adc
add
test
leavew
jno
pop
shlb
add
mov
hlt
mov
pop
cmpsb
int3
pop
mov
mov
loop
inc
imul
or
loopne
loop
or
mov
movsl
or
jb
and
xchg
push
popa
mov
test
sub
test
lret
stos
xor
sub
pop
imul
mov
cwtl
test
mov
dec
or
add
add
popf
dec
mov
rcr
or
or
fwait
jge
scas
push
push
stos
outsb
cmpsb
dec
leave
xor
pop
jg
sbb
jge
in
es
fistps
push
mov
arpl
sub
dec
shl
lahf
cmpsb
mov
xor
mov
aam
pop
pop
ljmp
roll
lods
fwait
adc
ret
test
pop
out
dec
cmp
pop
cmp
sbb
mov
push
jbe
subl
cmp
push
adc
sub
lods
in
push
out
push
aad
push
sbb
out
mov
jnp
aam
into
repz
scas
jne
cld
lcall
and
inc
pop
stc
add
lahf
mov
imul
sbb
adc
dec
fdivrs
jae
testb
mov
in
inc
add
bound
aaa
dec
enter
push
inc
mov
mov
add
outsb
xchg
xorb
mov
pushf
push
add
inc
fs
out
leave
mov
cli
les
mov
jl
cli
cmp
pop
cld
mov
fldcw
inc
inc
adc
mov
jne
pushf
fdivrs
cli
outsb
jnp
fdivr
xchg
cmpsb
cmpsl
xor
ss
push
stc
dec
arpl
mov
cli
clc
pop
in
push
pop
sti
jp
mov
std
jnp
mov
std
sub
xor
cltd
jge
mov
insb
push
leave
push
sti
inc
mov
jl
aam
dec
and
xchg
in
and
loopne
mov
xchg
sbb
pop
fistps
dec
clc
adc
outsb
and
sub
xchg
xlat
or
inc
mov
cs
fsubr
popa
xchg
out
das
xchg
sub
dec
ret
xor
mov
in
rol
addb
sub
arpl
stc
insl
in
or
jmp
or
inc
add
aam
pusha
pop
xchg
aad
cmpl
push
sub
insb
jb
ds
mov
xchg
xor
dec
aad
and
push
movsl
lods
cmp
cwtl
pop
mov
lcall
cltd
push
mov
lea
cmp
negl
adc
test
push
imul
sub
in
adc
mov
mov
jp
mov
jp
clc
xchg
xlat
jge
and
pusha
add
sub
push
mov
cmc
pop
sbb
jb
mov
sbb
idivl
sub
mov
lret
dec
aam
das
mov
shll
insl
adc
sbb
cmp
mov
gs
or
pusha
or
cmp
sbb
jmp
xchg
sub
popa
std
xchg
jo
lret
inc
add
cltd
aam
inc
popl
dec
outsl
dec
or
jl
pusha
aam
rolb
stos
addr16
cmp
pop
xchg
pop
mov
sub
xchg
pop
repnz
test
pop
imul
scas
test
mov
lock
insl
popa
xchg
ret
jno
out
fcoml
xor
push
cmpb
push
iret
repnz
ss
jbe
adc
jge
clc
mov
test
sub
add
mov
aam
outsl
sbb
jmp
sub
push
jecxz
mov
popa
sbb
cmp
jae
jecxz
test
and
fs
js
clc
lds
push
std
cli
addr16
add
cmp
pop
add
rcll
je
lds
dec
sub
lahf
fsub
and
mov
push
mov
lods
lret
lods
addb
xor
sbb
shr
push
pushf
mov
pop
arpl
aas
dec
sbb
rclb
bound
lods
ss
push
xchg
fcomps
fbstp
add
ret
es
fbstp
test
lods
sub
or
test
in
jnp
pop
xor
and
cmp
pop
int
and
enter
pop
nop
push
mul
jbe
mov
inc
mov
adc
sbb
loope
pop
pop
xchg
push
gs
xor
pusha
es
sub
je
push
or
push
push
imul
dec
shll
repz
js
pop
inc
jne
adc
int3
mov
push
mov
in
xor
jg
and
pop
mov
dec
cltd
push
out
outsb
stos
popf
and
pop
sbb
test
push
xlat
outsl
popa
jl
xchg
mov
movsl
fimull
sub
mov
mov
xchg
outsb
xor
xchg
pop
lock
jmp
scas
push
push
push
jge
int
adc
rcrb
leave
in
jno
addb
mov
repnz
movsb
mov
pop
jp
test
out
jb
cwtl
mov
cwtl
in
fsubrl
je
cmp
stos
mov
cs
push
cltd
fsubrp
push
out
mov
loopne
popf
jmp
in
push
imul
push
inc
ret
aam
jae
outsb
out
cmpsl
and
mov
xchg
int
jo
push
imul
and
arpl
jle
cmpsb
adc
adc
cmc
cwtl
in
jns
aas
pusha
mov
and
je
xchg
stos
add
cmp
add
adc
or
fidivrs
pusha
adcl
ror
repnz
and
dec
les
lds
nop
scas
sbb
lea
sbb
mov
pop
scas
int
adcb
push
pop
lret
and
mov
lahf
xchg
imul
and
dec
jb
pop
sub
lret
mov
mov
shll
jno
nop
cmc
cmp
xor
mov
mov
scas
shrl
aam
jle
mov
stos
lret
cmp
stos
les
popf
repz
xor
movsl
push
jmp
xor
test
mov
push
inc
push
mov
xchg
gs
mov
fsubp
add
xlat
or
add
iret
stc
int3
inc
push
idivl
fnstcw
shrl
sub
xchg
cmp
cli
xor
and
call
fdivl
or
stc
xor
jp
jae
pop
mov
test
mov
js
leave
xor
push
filds
out
add
mov
adc
ret
insl
sub
das
ss
ud2
pop
test
in
sub
cmp
jge
add
dec
pop
push
shll
push
adc
test
push
push
flds
dec
inc
push
cmc
imul
sbb
shll
adc
daa
test
icebp
push
jae
aas
clts
imul
cmpsb
aam
lcall
jecxz
mov
jne
in
dec
or
ja
leave
inc
sahf
xor
lock
lods
sbb
bnd
fdiv
xchg
aas
pushf
xor
pop
mov
idivl
pop
aad
xchg
cmc
dec
pop
out
rcrl
fmull
test
repnz
xor
out
dec
dec
lods
ja
call
lret
inc
roll
rorl
icebp
inc
mov
mov
push
sbb
ror
pop
daa
sbb
xor
scas
int
fnstenv
push
inc
lcall
xchg
je
xchg
rorb
enter
fs
lods
adc
mov
dec
popf
xor
push
cmpsl
insl
sub
das
fs
adc
lret
add
mov
pop
and
cmp
cmpsb
pop
pop
mov
xlat
mov
fcmovb
pop
test
idivl
aaa
adc
xchg
in
dec
stc
mov
fs
ja
out
call
in
pop
xor
ret
xchg
mov
mov
push
xchg
xchg
adc
out
cmp
mov
sub
and
loopne
fs
cmp
popf
add
mov
insl
jecxz
pop
int
pop
cmc
inc
loope
add
dec
inc
adc
shr
adc
xchg
ljmp
xchg
jne
lock
jp
dec
push
enter
das
sub
add
movsb
and
mov
mov
push
mov
outsb
cmpsb
dec
sub
paddb
mov
scas
stos
inc
dec
sbb
mov
mov
adcl
lret
mov
icebp
repnz
fmull
fisubs
mov
fsubrs
jle
xchg
xchg
test
ret
loopne
pop
xchg
das
mov
sbb
sahf
jbe
ret
js
cwtl
mov
outsl
sub
fdivl
inc
add
push
push
loopne
jne
add
lret
outsl
nop
mov
ret
xchg
xor
inc
xor
mov
push
or
in
jge
addb
cmpsl
sbb
push
dec
icebp
iret
jecxz
push
jg
cmp
sub
pop
push
push
mov
adc
dec
or
cwtl
push
adc
jno
mov
xchg
sub
test
outsb
leave
jecxz
pushf
push
arpl
dec
das
mov
inc
js
mov
jne
mov
ljmp
dec
je
fldl
mov
mov
stc
mov
fidivrl
adc
cmp
lods
fstpt
pop
dec
and
sbb
ret
es
rorb
add
hlt
xchg
xchg
int3
pop
pop
xor
sub
mov
call
jge
and
sahf
jno
andb
stos
nop
push
push
and
push
aas
in
addl
fldl
adc
and
push
mov
rcrl
lock
add
adc
cli
mov
imul
mov
sub
lea
cwtl
mov
cmp
jp
insb
ljmp
sbb
dec
pop
inc
cmpsb
and
hlt
pop
pop
and
cwtl
std
jb
cmpl
sti
push
addl
mov
test
nop
jg
dec
push
rcll
shrb
dec
dec
imul
sub
xchg
icebp
mov
jg
in
or
cmp
into
into
dec
cltd
into
cld
mov
sbb
icebp
xor
dec
cwtl
icebp
lods
push
cwtl
jbe
in
movsb
inc
adc
push
sub
pop
push
push
mov
adc
mov
mov
addr16
rol
sbbb
inc
mov
mov
mov
adc
dec
out
bound
fmull
out
push
and
jnp
mov
inc
lret
mov
aad
iret
sub
push
out
add
xor
cmc
out
jl
jg
fcoml
push
lods
dec
jae
inc
stc
mov
jl
aaa
or
sub
lock
cmpsb
mov
js
pop
add
les
push
sahf
jg
jns
rclb
push
mov
lods
rcr
pop
movsl
popf
clc
push
sbb
jae
cli
sub
movsb
loopne
movsl
mov
loop
icebp
in
push
std
ret
mov
sub
add
cmp
sbb
fldt
repnz
mov
jne
jne
xchg
cmp
xor
nop
xchg
mov
dec
cwtl
mov
or
cmp
mov
in
lods
jecxz
cli
mov
imul
mov
cld
lahf
jg
out
inc
cmpsl
pop
xchg
fnstenv
out
xchg
push
push
int
fstl
js
sub
std
or
add
stos
fwait
ret
cld
mov
pop
dec
dec
lods
lea
cwtl
or
das
pop
mov
mov
imul
lahf
iret
push
in
les
out
jne
dec
rol
mov
cmp
das
cmp
clc
hlt
push
and
and
cli
cmp
outsb
add
xchg
jnp
mov
push
xlat
scas
sbb
mov
dec
andb
cmp
imull
add
shll
popa
dec
cmc
rcrb
inc
or
mov
jb
jl
mov
hlt
mov
imul
into
cmp
xor
xchg
xchg
subb
push
or
jge
xchg
enter
arpl
test
pop
fildll
add
loopne
outsl
fidivrl
jb
enter
xchg
adc
inc
outsb
jmp
stos
push
pop
inc
fdivr
jle
es
adc
mov
call
sbb
add
fisttpl
and
stc
pop
jbe
cmp
add
cltd
popf
andl
sbb
fmulp
cmc
out
push
and
gs
pop
movb
sarl
inc
and
daa
sub
xor
or
pop
xchg
jmp
dec
adc
push
pop
xchg
fnstcw
fucomi
mov
jb
mov
gs
icebp
jecxz
mov
dec
fs
inc
daa
inc
cmp
cmpb
movsb
lock
stos
xchg
jl
or
test
dec
push
mov
insb
loop
in
mov
ret
sub
add
ret
jmp
pop
push
pop
data16
test
lahf
adc
cltd
adc
cs
xchg
les
negl
fchs
mov
push
adc
mov
xlat
sub
and
scas
pop
sbb
jl
or
ljmp
divb
into
mov
les
movsb
lret
scas
inc
xchg
sub
lahf
adc
cltd
jb
or
push
mov
fs
and
dec
clc
pop
and
adc
cmp
out
dec
push
sub
test
mov
je
leave
loop
adc
mov
ds
outsl
sbbl
mov
push
lock
xor
loope
add
jle
push
leave
push
pop
mov
js
pop
inc
and
jae
ret
fnstenv
repnz
fidivrl
mov
out
jns
add
jl
insl
in
data16
in
xchg
fisubs
in
repnz
mov
lea
pop
ds
mov
mov
ds
inc
cmp
and
subb
add
aaa
and
je
or
cmp
rcr
push
push
or
scas
or
aad
xor
je
or
pop
orl
mov
or
out
dec
out
adc
adc
enter
sub
xor
ret
mov
call
jno
sbb
inc
jbe
in
inc
iret
and
add
test
pop
mul
rcll
cmpsb
ret
jo
sahf
cmp
push
sbb
movsl
stc
pop
mov
mov
and
mov
aad
sbbl
push
mov
mov
std
repnz
or
out
mov
push
iret
mov
pop
leave
out
pushf
aas
cld
dec
xor
push
mov
fwait
outsb
sbb
cmpsl
mov
nop
mov
pop
pop
cmp
out
mov
popf
mov
cli
push
je,pt
pop
mov
popa
push
cmp
popa
pop
lret
push
out
fdivrp
inc
dec
xchg
dec
in
movsl
iret
lea
out
inc
jbe
mov
loope
insb
mov
fldln2
sub
call
cmpb
jmp
cmc
push
cltd
daa
pop
xchg
xchg
in
push
dec
push
xchg
cli
mov
jbe
push
addr16
lods
push
pop
mov
or
decb
aam
adc
jmp
mov
mov
leave
mov
sub
jo
and
lret
dec
sti
lds
mov
lods
imul
mov
hlt
scas
stos
push
push
sub
fstps
mov
cmc
cmpsl
enter
rorl
out
sub
jle
xchg
mov
inc
stos
js
icebp
insb
xlat
add
xor
inc
mov
rol
jg
pop
mov
push
sbbb
push
push
into
test
xchg
leave
std
inc
mov
adc
out
mov
outsb
in
add
outsl
pushf
mov
jbe
jl
dec
mov
and
mov
fsubrs
jae
scas
arpl
mov
or
or
mov
sub
loopne
cs
and
xchg
nop
dec
and
jbe
mov
push
mov
adc
push
sar
lret
lret
jge
scas
pop
dec
and
mov
pop
sub
dec
daa
add
out
sarb
mov
es
icebp
enter
icebp
in
data16
sbb
fisttps
mov
dec
movsb
shlb
out
or
jbe
mov
pop
sahf
lahf
xchg
lods
stc
fidivrs
push
shrl
sub
push
or
inc
sub
xor
cmp
and
rorl
jns
mov
add
dec
fmuls
rclb
push
stos
jns
sbb
fstpt
cmp
shlb
ja
adc
out
sarl
push
stos
sub
push
mov
insl
push
xor
nop
das
xor
das
xor
sti
cld
subb
leave
mov
addb
fnstsw
sarb
adc
adc
hlt
mov
jne
bound
ficompl
push
inc
loopne
cmp
aad
fiaddl
sbbb
push
push
mov
mov
inc
arpl
pop
xor
fldl
scas
in
rcrb
hlt
lds
xchg
cli
mov
or
psllq
mov
outsl
mov
arpl
push
add
mov
dec
pop
inc
cmpsb
insb
and
mov
push
inc
jmp
andb
daa
mov
popa
pop
int
icebp
and
in
cli
adc
cmpsl
pop
iret
xchg
enter
push
pop
ja
data16
int
sti
fisttps
cwtl
inc
call
js
cli
jl
mov
movsl
pop
fmulp
fmull
pop
incl
fwait
xchg
mov
and
or
sub
or
shrb
icebp
lea
jle
push
clc
mov
mov
scas
inc
shlb
push
les
pop
mov
dec
fstpt
mov
fwait
test
or
cmp
fildll
test
out
out
ljmp
aaa
in
jp
mov
ja
fwait
icebp
inc
shlb
xor
add
dec
add
inc
mov
pop
cli
aam
out
imul
call
test
inc
cmp
sbb
mov
pop
clc
js
pop
jns
push
pop
loop
pop
sbb
add
fistl
in
fiaddl
jo
movsb
pop
stos
push
xor
mov
mov
shll
negb
mov
cli
inc
mov
inc
lret
out
gs
jnp
pop
inc
push
leave
lcall
xor
in
pop
cltd
sbb
xor
jns
push
pushf
out
add
xlat
cmpb
fbld
ret
push
pop
movsl
xor
out
or
inc
fstps
dec
xor
scas
mov
shl
mov
pusha
ds
sahf
pushf
ja
andl
jb
pop
fstps
cmpsb
cvtdq2ps
mov
push
stos
pop
mov
jae
mov
pop
cld
ss
pop
mov
mov
dec
mov
sub
xchg
mov
std
in
jnp
fsubrs
xlat
lods
sub
adc
out
dec
test
add
shl
arpl
fwait
and
insb
mov
popa
adc
insl
cmp
arpl
arpl
outsb
ret
rcrl
loopne
pop
adc
dec
imul
jg
pop
jl
and
pop
loop
cmp
jb
add
das
pop
repnz
test
mov
lods
inc
icebp
dec
jne
aam
jg
xor
imul
xchg
and
daa
pop
sahf
cld
clc
sarb
stos
mov
aad
pop
shrl
iret
mov
stos
js
dec
sbb
inc
dec
xchg
bound
and
dec
adc
outsl
dec
dec
mov
xchg
in
std
sub
repz
mov
repz
jnp
jno
and
add
adc
stos
ficomps
xchg
das
fwait
or
mov
pop
add
mov
loope
push
sahf
cld
xchg
xor
push
mov
fisubs
push
cli
inc
test
push
test
sub
lret
push
in
and
imul
scas
and
mov
out
lret
fucomip
addr16
pop
lcall
and
sbb
loop
pushw
inc
xchg
or
adc
mov
pop
adc
pop
mov
pop
push
out
mov
imul
jno
xchg
sbb
mov
adc
es
sub
push
sbb
les
push
jne
jne
cld
cmp
jbe
push
jae,pt
es
or
push
jno
add
je
ss
mov
and
jo
inc
xchg
mov
mov
enter
mov
inc
push
jb
mov
insl
fnstenv
ja
iret
push
push
fnsave
ss
lret
pop
adc
pop
out
pop
stos
add
xchg
gs
shlb
mov
pop
push
sub
outsl
repnz
xor
mov
and
aad
push
filds
rolb
jno
nop
stos
pop
mov
xor
rolb
lock
xchg
cli
scas
push
xchg
add
jo
inc
or
cld
hlt
lods
movsl
shlb
imul
or
cmpsb
mov
movsb
push
ret
pop
xor
jnp
push
push
leave
jns
inc
mov
xchg
inc
cmp
je
loope
pop
mov
jo
bound
push
inc
outsl
xchg
xchg
mov
pop
sbb
mov
insl
pop
ja
sbb
push
xchg
aad
sub
cmp
inc
inc
lods
je
mov
and
int3
xchg
mov
ret
outsl
jg
pop
pushf
imul
adc
movsl
popl
mov
shlb
and
bound
sub
or
add
add
xchg
leave
daa
mov
mov
inc
cmp
lret
pop
ss
shlb
test
mov
gs
stos
mov
jnp
jecxz
ds
sub
or
adc
jno,pt
push
jecxz
sbb
or
inc
mov
fs
jp
and
cmp
xchg
call
rolb
divb
push
cli
push
pop
mov
jbe
ljmp
test
and
mov
inc
mov
or
mov
repz
enter
xchg
sub
pop
lods
and
sahf
pop
add
rcr
in
xor
daa
mull
jg
mov
sub
cwtl
sbb
enter
mov
shrb
or
jp
dec
pop
call
pop
or
inc
and
outsl
je
bnd
sub
arpl
xor
pop
and
pop
or
jae
adc
and
xor
into
stos
insl
add
pop
ljmp
movsl
clc
and
ja
int
mov
sbb
adc
xchg
xchg
nop
lcall
mov
out
add
xchg
shr
mov
test
leave
mov
insb
sti
mov
mov
outsl
data16
inc
add
jb
push
jns
jg
pop
adc
push
inc
jle
cmp
imul
dec
lods
jecxz
dec
push
ficomps
out
mov
lods
int
je
sub
stos
lds
bound
fmul
ja
lcall
xchg
or
push
xchg
sbb
mov
add
outsl
icebp
jno
testl
test
sbb
sbb
cmc
pop
mov
xchg
inc
push
out
or
out
cltd
gs
dec
and
dec
insb
sbb
mov
jmp
push
xor
or
dec
mov
out
ja
int3
in
movsb
mov
add
mov
cmpsl
inc
arpl
cli
imul
cmpl
cmp
sbb
inc
mov
push
int
or
setle
pop
pusha
jb
aas
xor
inc
xchg
dec
std
les
out
jl
insb
loop
test
jno
fistps
cmp
ljmp
int3
or
or
das
les
mov
dec
ret
mulb
gs
fcomps
sub
or
sbb
shlb
adc
js
mov
sbb
orl
stos
icebp
mov
push
xor
stos
xor
mov
gs
and
push
loope
mov
add
add
nop
insl
adc
pop
mov
add
dec
lds
test
add
outsl
mov
cmp
mov
ret
inc
movsb
inc
xchg
mov
mov
fbld
rcrb
xlat
mov
push
stos
test
jae
jg
das
call
cs
mov
inc
xor
imul
icebp
imul
and
cmp
aad
sub
loopne
inc
loope
test
or
popf
lock
or
enter
test
pop
aas
js
adc
xor
jnp
loope
scas
and
push
adc
add
xchg
lock
mov
gs
fdivl
sub
jle
cmp
pushf
mov
sarl
lods
out
push
add
jg
sbb
add
dec
mov
clc
xor
mov
ljmp
hlt
adc
and
std
bound
lret
push
or
mov
mov
push
cmp
lods
inc
jo
add
cmp
mov
lret
imul
pop
sbb
mov
mov
jae
shrl
mov
lds
clc
xchg
out
jb
in
js
or
mov
pop
jno
push
int
aaa
icebp
sahf
and
or
cmp
mov
push
test
xchg
pop
mov
add
pop
dec
jmp
fs
aam
stos
decb
out
push
push
pop
mov
in
xchg
pop
push
xor
cmpsb
adc
repz
jne
pop
fs
adc
push
mov
adc
xor
test
mov
sub
sub
lcall
xchg
fisttpl
xchg
push
dec
loop
enter
rcll
gs
out
dec
movsl
in
dec
cmp
pushf
and
or
mov
std
fwait
sbb
jle
hlt
mov
leave
sub
xor
inc
mov
call
es
iret
inc
cmpsb
xchg
out
and
sbb
jg
lahf
sub
jp
clc
stos
jb
out
and
mov
das
aaa
xor
fistpl
std
lret
sub
aaa
xor
inc
push
push
int3
pusha
adc
data16
je
inc
sub
sbb
lahf
cmc
lods
aas
dec
xchg
std
jle
hlt
jge
inc
or
gs
outsl
jp
inc
loope
fistpl
pusha
test
lods
call
jle
ja
mov
and
push
insb
cld
add
sub
aas
insl
in
mov
jo
inc
aaa
pop
dec
jb
dec
cmp
fwait
push
fstpt
roll
push
gs
out
gs
dec
cmpsb
outsl
xchg
push
mov
out
cs
shlb
push
loope
mov
jmp
sbb
push
sbb
iret
mov
mov
push
in
cmp
sub
mov
push
mov
enter
loope
insb
adc
js
fiaddl
outsl
das
sbb
push
xchg
jno
into
cmp
xchg
imul
pop
mov
into
jno
lods
pop
pop
jp
push
test
popa
scas
in
xchg
xchg
mov
push
mov
cmp
adc
in
jnp
iret
andl
fcomip
add
jo
and
jb
mov
pop
shrb
sub
inc
inc
js
and
aam
movntq
out
push
xor
cmp
jge
adc
mov
lea
lcall
ds
mov
rcl
push
int
mov
adc
addr16
mov
or
int3
pop
inc
mov
in
lds
adc
pop
xchg
xchg
add
fcompl
daa
lret
adc
pop
xchg
mov
sub
mov
clc
je
cwtl
and
bound
mov
notb
out
inc
sub
or
mov
popa
fisttpll
mov
adc
inc
push
cmpsb
mov
sub
shll
xor
in
adc
sub
stos
push
lcall
rcl
mov
rcrl
mov
cmpsl
arpl
in
test
roll
xchg
aad
sahf
mov
xchg
ja
popa
xor
mov
adc
clc
xsha1
cmpsb
dec
inc
mov
and
imul
add
push
push
sahf
jp
pushf
arpl
or
imul
ja
addr16
adc
repz
mov
pop
ds
cmp
arpl
hlt
adc
xor
insb
mov
inc
xchg
fsubrl
inc
loopne
or
fs
repnz
out
rcrl
in
repnz
shll
jne
loop
jl,pt
int3
jp
xchg
push
jno
popf
xchg
push
ljmp
push
add
icebp
xchg
faddl
adc
pop
sahf
cmpsb
mov
sbbl
nop
inc
into
push
cwtl
push
es
xor
aam
scas
jo
rcl
scas
push
ret
stc
push
nop
sbb
testl
jne
and
popf
push
dec
ljmp
xchg
or
or
out
ljmp
test
push
pop
das
leave
jg
xchg
add
xchg
xchg
xor
sub
out
xor
and
jns
inc
and
cltd
dec
xlat
loopne
fiaddl
arpl
inc
add
test
movsl
ret
xchg
inc
sub
push
cmp
lods
push
mov
ds
xchg
pop
arpl
jg
dec
aaa
andb
rol
mov
sbb
test
popa
out
pop
push
loop
sar
movsb
sbb
stos
test
jbe
daa
lret
jne
mov
je
cmp
cmp
mov
mov
jno
sbb
stc
movsl
fstpl
out
jl
and
or
mov
mov
repz
dec
scas
sbb
clc
cmp
mov
into
pop
cli
dec
insb
inc
stc
jnp
cmpsl
hlt
push
add
cli
sti
sahf
enter
insl
sbb
enter
mull
jecxz
mov
imul
mov
sub
mov
inc
std
push
hlt
mov
mov
add
xlat
or
push
hlt
cmpsl
adc
pop
sub
decb
jle
call
movsb
ret
sbb
xchg
xchg
lret
stos
or
xchg
cmp
test
mov
cmpsl
rol
aas
cmp
push
bswap
test
rcr
add
jae
data16
fdivrl
cmpsb
fwait
in
mov
lds
shl
pop
int3
mov
inc
xchg
imul
out
pop
cmp
adc
popf
les
inc
xor
xor
cmp
cmp
insb
ret
sarl
or
out
jne
ja
scas
inc
lahf
push
std
aas
and
mov
xchg
or
shlb
mul
xor
dec
xor
push
dec
cmpsb
aas
dec
jg
pop
inc
ljmp
out
lret
adc
jne
cmp
inc
xchg
out
out
xor
pusha
mov
push
sbb
addl
push
insl
in
dec
add
inc
cmpsb
xchg
ror
and
or
aas
loopne
sti
mov
andb
dec
or
jmp
pop
daa
mov
dec
shr
aad
or
mov
xor
mov
mov
or
fbld
loope
xor
ja
dec
mov
lret
rolb
push
xor
mov
loopne
loope
gs
test
cli
shrl
cmpsl
xchg
stos
xorl
test
jmp
push
add
std
repz
rclb
or
mov
add
cli
lods
filds
sbb
mov
mov
pusha
ljmp
sbb
out
insb
hlt
pop
or
cmp
daa
out
sbb
xchg
and
sbb
test
int3
nop
xor
jecxz
repz
or
movsb
pop
cmp
cmp
cld
adc
scas
popa
mov
aad
in
fmull
mov
into
stc
and
cmp
or
ja
js
icebp
inc
jp
push
scas
outsb
inc
dec
xchg
jg
in
mov
add
clc
shlb
and
xor
push
ffree
jg
out
int3
mov
fists
push
push
push
imul
dec
jbe
call
jne
inc
shlb
add
jmp
aas
call
shlb
jp
dec
pop
popl
fcoms
and
out
popf
mov
iret
and
xor
mov
mov
adc
cmp
out
dec
jecxz
aas
xchg
shlb
push
mov
mov
test
enter
pop
cmc
bnd
xor
sub
push
loope
xor
mov
mov
mov
in
in
xlat
xchg
repnz
inc
int
pop
pop
xchg
push
loop
pop
loope
imul
cmpsl
adc
lods
xor
sub
adc
dec
out
popa
add
sub
jg
repz
push
push
cmc
mov
testb
or
lret
adc
insl
xchg
xor
stos
mov
sub
test
pop
mov
dec
or
cltd
stc
inc
fidivrs
iret
aam
mov
loop
add
fucompp
xorb
jge
sahf
jno
pop
push
inc
shlb
hlt
push
imul
aam
repz
lret
call
mov
dec
dec
je
push
hlt
idivb
ljmp
bound
leave
cs
imulb
jge
cmp
lret
dec
mov
push
xchg
mov
lods
roll
loope
mov
and
pop
dec
xchg
rolb
test
mov
xlat
jbe
or
shll
loope
dec
pop
cmp
adc
push
out
push
movsb
repnz
clc
mov
sahf
out
mov
imul
in
push
ss
jnp
int
ljmp
xor
xchg
push
ja
lcall
mov
cmpsb
sbb
xor
lea
mov
mov
fcoml
sbb
test
mov
cmp
insb
xchg
pop
push
ss
pop
jo
mov
sub
pop
xor
sbb
dec
jbe
sub
leave
mov
int
sarl
iret
inc
jb
inc
jmp
sbb
out
mov
jne
insl
inc
xchg
xchg
imul
loopne,pt
lcall
out
jmp
stos
pop
mov
lods
jno
jecxz
sub
mov
adc
cmc
xchg
mov
add
mov
mov
js
hlt
add
mov
scas
mov
or
pop
js
loopne
les
lods
push
imul
jecxz
fnstsw
dec
inc
mov
mov
test
and
test
insb
lcall
xor
push
xchg
ficoml
fisubs
dec
std
ss
rdpmc
and
outsl
xchg
cmp
and
ret
add
xchg
mov
sbb
cmpsl
mov
jne
fisttps
xchg
mov
dec
out
sub
ret
ret
xor
pushf
sbb
je
cs
aaa
mov
int
lds
rcll
out
sbb
in
test
ljmp
cmpl
ret
dec
iret
adc
inc
cltd
or
lret
jb
mov
adc
dec
adc
bound
testb
push
push
mov
lahf
xchg
mov
pushf
inc
adc
addr16
mov
sub
rolb
out
pop
cmp
or
dec
daa
xor
mov
es
pop
xor
aad
sub
jns
sbb
out
scas
faddl
add
ja
sbb
xchg
dec
cmpsl
shlb
or
cmp
cltd
subb
sbb
mov
movsb
rclb
ret
jmp
repnz
jb
hlt
cmp
iret
es
int
movb
push
adc
pop
mov
jg
nop
ret
test
sbb
jg
push
bound
je
mov
push
loop
dec
enter
push
cmp
in
arpl
jmp
filds
out
pop
jns
add
int3
int
xor
std
and
or
cs
ficoms
inc
dec
insl
ds
insb
fwait
add
mov
adc
in
lods
mov
rcrb
mov
mul
lods
mov
lahf
sbb
add
push
lahf
push
imul
bound
xchg
lods
test
jmp
add
mov
lea
ja
cld
mov
jge
sub
dec
sub
push
jne
or
notb
movsb
sahf
xor
or
adc
aam
inc
cmp
fbld
das
mov
push
fs
dec
aad
push
cmp
into
add
cmpsl
fnstenv
ja
pop
daa
popa
inc
shl
jecxz
and
call
stos
hlt
cmp
loop
dec
xchg
cmovg
xor
and
outsl
rcrl
lods
mov
push
fldt
cli
mov
sahf
das
in
inc
add
std
pop
sub
adc
adc
andl
enter
jecxz
push
mov
lret
dec
dec
jl
call
enter
and
mov
sbb
adc
push
loop
push
lret
gs
mov
add
push
in
ljmp
jmp
inc
lret
pusha
xchg
in
cwtl
lret
fisubrl
imul
push
mov
lret
jbe
and
mov
jbe
mov
adc
cld
ss
subb
mov
loope
push
inc
inc
sub
xor
leave
shrb
hlt
repnz
lret
fs
sub
xor
inc
inc
xor
adcl
gs
sbb
sahf
insb
fs
dec
cmpsl
mov
int
jo
pop
jns
divb
pop
cmp
test
inc
sbb
insb
cltd
xor
jmp
xor
sub
xchg
call
inc
stos
push
out
mov
add
gs
icebp
fisubrs
stos
dec
cld
fdivl
les
push
pop
ffree
int3
insb
sahf
fwait
mov
xor
jp
xchg
mov
adc
mov
test
hlt
jmp
hlt
adc
fidivrl
dec
xor
ljmp
pop
jns
and
and
cmc
rcrb
loopne
push
cmp
or
mov
bound
bsf
sbb
mov
push
mov
or
repz
adc
pop
fs
jecxz
xchg
fdivrl
gs
scas
push
lcall
and
movsl
nop
and
cwtl
pop
repnz
stos
les
pop
inc
xchg
dec
jno
lods
xor
fsubrl
outsl
das
stos
push
fistpl
and
fldenv
int3
or
out
int
outsl
out
ret
dec
fwait
sti
inc
pop
and
pop
loop
lock
push
fcmovne
sbb
jl
xorl
mov
fiaddl
add
push
imul
add
addr16
adc
ja
mov
cmc
mov
mov
ret
cmpsb
dec
add
mov
mov
cli
in
jae
pop
xor
imul
aas
mov
pop
mov
pop
lahf
push
mov
sbb
orl
jmp
loopne
jge
test
js
mov
pop
add
dec
lcall
pushf
daa
outsb
lock
push
jbe
rclb
xor
dec
lods
lcall
mov
rorl
xchg
xchg
fwait
mov
push
or
addr16
adc
loop
mov
mov
clc
imul
xchg
cmpsb
adc
sub
mov
adc
mov
in
mov
and
dec
xor
pushf
push
jle
in
cmc
xor
fwait
scas
sub
lods
mov
pushf
mov
bound
inc
cmp
push
out
push
mov
xchg
dec
gs
int3
daa
jmp
packsswb
mov
sbb
popa
jl
mov
jne
pop
sti
scas
mov
out
pop
fmull
adc
test
adc
push
adc
callw
out
add
js
jl
loopne
xor
jle
mov
pop
shrb
jmp
or
pop
ret
inc
jl
xchg
outsl
mov
mov
ficompl
loopne
xchg
adcb
mov
xchg
xchg
xor
fs
mov
cs
in
ds
outsl
aaa
imul
pop
arpl
into
pop
xor
or
cmp
mov
and
adc
sbb
sub
mov
int3
pop
es
push
xchg
call
shl
push
or
aas
or
or
adc
cmpsl
push
lods
mov
sub
arpl
repnz
shll
pusha
adc
shlb
xlat
fisttpll
xchg
pop
outsl
test
rcl
xor
jb
add
out
dec
outsl
es
jle
sub
adc
and
decl
mov
xchg
scas
mov
sbb
test
sbb
imul
pop
ror
inc
es
fcoms
mov
mov
popf
aaa
adcl
sub
xor
loop
jp
out
pop
xchg
sbb
cmp
lds
mov
xor
notl
jmp
das
repz
cmp
jle
xor
ja
add
sub
rorb
ret
lret
fchs
fwait
adc
ja
adc
cmp
pop
push
daa
into
in
cs
xor
fadd
stos
push
test
sbb
sbb
fisttpl
nop
sti
jne
in
pushf
shl
std
into
xor
xor
mov
fiaddl
sub
xchg
rol
ret
icebp
pop
pushf
sbb
out
ja
lods
inc
and
lret
imul
adc
xchg
addl
mov
pop
imul
ja
out
rcrb
push
int3
push
andl
mov
cmp
dec
out
push
mov
add
pop
mov
into
inc
mov
out
frstor
andl
out
sub
lcall
stc
fsubp
sahf
int3
popa
pop
mov
pop
ds
cs
mov
pop
cmp
scas
sar
push
jp
sbb
ss
int3
fsubrs
push
lods
dec
repnz
nop
xchg
adc
dec
aas
lret
mov
xorl
shll
sbb
lcall
mov
adc
rcrb
cwtl
and
xor
in
inc
or
das
ja
aad
mov
push
adc
lcall
sub
popf
jmp
sbb
cltd
int3
imul
xchg
inc
js
arpl
xchg
fnstenv
sub
push
inc
jae
fistpl
xchg
cmp
repz
fstl
dec
nop
xor
test
test
clc
ret
faddl
xor
fmull
jne
xlat
cli
pop
gs
mov
shrb
jmpw
cmp
aam
pop
cmpb
sub
pusha
es
xchg
int
jnp
add
into
icebp
mov
sub
daa
push
sub
mov
mov
orb
push
sbb
repnz
inc
fldenv
sub
ss
clc
push
inc
outsb
clc
fsubr
and
cli
pop
and
fiaddl
adc
mov
iret
mov
shll
mov
cltd
pop
call
leave
into
or
push
lods
imul
mov
pusha
inc
shr
stc
aaa
cs
int
mov
pop
mov
pop
arpl
call
xchg
add
lret
xchg
jg
imul
aam
loop
test
mov
pop
addr16
jae
xor
sahf
xor
insl
jo
push
push
sub
pop
cmp
sarb
testl
ja
inc
sti
aas
sub
mov
repz
hlt
xor
mov
xchg
add
adc
je
push
in
cmp
jb
aas
ret
adc
movsl
outsl
adc
add
test
ror
cltd
inc
pushf
inc
xor
jae
ja
cmpsl
pop
xor
sub
mov
aad
sbb
inc
push
inc
inc
add
fimuls
stos
cwtl
jecxz
mov
jg
mov
inc
push
or
push
lret
add
test
xor
icebp
icebp
movsl
out
ja
mov
mov
inc
int3
mov
jno
les
outsb
xor
subl
bound
push
and
fisubl
pop
sar
xor
dec
pop
call
push
jns
cwtl
inc
je
out
ret
movsb
fnstcw
stos
sbb
cmpsb
fs
jmp
pushf
dec
or
mov
iret
jecxz
and
push
or
divps
xor
sub
xor
hlt
push
out
xor
xchg
sbb
dec
jecxz
ret
adc
ljmp
test
add
out
mov
push
add
push
push
pop
and
movsb
lock
sub
shr
dec
pop
jb
ds
mov
push
fisttpl
icebp
jle
jne
imul
hlt
sbb
mov
adc
pop
cltd
and
mov
lods
adc
lcall
mov
push
push
push
push
mov
je
push
rcll
mov
or
mov
decb
loopne
xchg
fs
addl
mov
dec
imul
and
add
dec
sbb
insl
fdivs
xor
cmp
xchg
repnz
sub
mov
scas
sti
push
xor
xor
push
mov
idivb
lods
sbb
decl
dec
inc
jns
ret
adc
std
lea
or
add
add
xchg
inc
mov
sbb
pop
inc
mov
or
arpl
call
jge
in
and
push
call
lods
add
mov
inc
cmp
xchg
popf
cmp
add
lret
out
ret
rcrl
je
mov
mov
xchg
ret
or
push
aam
stos
stos
filds
push
fdivl
inc
xor
rcrb
cmp
add
into
mov
pop
loopne
sbb
pop
iret
and
imul
roll
xor
pop
or
fdiv
xor
cltd
sbbb
inc
or
jge
xor
cmp
cs
gs
push
fcompl
mov
or
or
rclb
xlat
pusha
xlat
mov
mov
push
cmp
adc
fmull
cld
mov
pop
or
insb
in
adc
or
sbb
insb
fxch
rorl
popa
add
call
rolb
inc
sahf
in
das
add
cli
mov
fbstp
call
and
arpl
jle
sub
cmpsl
pop
sub
in
mov
mov
jle
adc
icebp
test
mov
mov
aad
test
in
mov
aam
bound
mov
or
ljmp
std
pop
push
xchg
test
push
lods
scas
rorb
xor
imul
and
and
mov
pop
push
leave
imul
mov
push
mov
inc
lods
sub
inc
jl
inc
rcll
lahf
jae
jmp
mov
dec
cmp
loop
sub
jge
cld
imul
test
inc
mov
mov
fs
aam
incb
data16
xchg
nop
into
cs
mov
repz
push
mov
inc
pop
in
inc
subb
add
xchg
sahf
mov
mov
popa
or
dec
lods
aaa
xchg
lods
or
sbb
inc
or
fimuls
sbb
shll
popa
int
cmpsl
mov
mov
mov
out
mov
mov
mov
stos
rcrl
or
hlt
lcall
shrb
nop
sti
and
icebp
shl
sahf
popa
stos
dec
lcall
mov
cmovo
xchg
aas
stos
add
jbe
daa
push
xor
and
xor
jg
stc
iret
fwait
lret
jp
mov
inc
xchg
mov
pop
je
sbb
insb
push
pop
inc
sarl
and
lcall
ss
jno
int
fstpt
inc
adc
orb
pop
stos
xchg
ja
mov
cmp
xor
insl
sbb
ror
jmp
popf
and
imul
es
mov
sbb
cmp
xorb
data16
stos
icebp
xchg
leave
cmp
call
and
sub
fisttps
lahf
pop
lds
cwtl
mov
ror
daa
movd
cltd
push
lahf
nop
adc
enter
popa
xchg
enter
ja
repz
adc
xor
arpl
jge
or
scas
das
int3
mov
mov
push
bswap
add
jmp
outsb
cld
xor
xchg
fsubr
lret
gs
je
mov
or
push
mov
das
jnp
inc
lahf
jmp
sti
mov
xchg
xor
sbb
jae
jns
jae
pop
inc
or
mull
pop
ret
jecxz
push
xchg
mov
movsl
jl
jp
adc
cmp
lret
rclb
jo
into
por
fwait
inc
mov
and
popa
sarl
inc
das
loop
and
sub
cld
fidivrl
lret
push
cmp
xor
sub
xchg
xchg
cltd
sbb
test
push
std
mov
inc
ljmp
dec
add
lods
or
inc
inc
mulb
movsb
nop
sub
or
mull
imul
cmp
ds
xor
cmp
jb
clc
les
idivb
pop
jb
push
lahf
imulb
fidivrs
outsb
mov
or
imul
dec
dec
sub
and
inc
and
jno
adc
mov
hlt
aad
jo
jle
push
and
xchg
push
fiadds
loop
lahf
std
inc
mov
xchg
sarl
sub
cmpsl
movsl
stos
adc
incb
andl
jne
dec
or
fs
fsubrl
push
push
dec
imul
je
dec
fsub
inc
jl
pop
jbe
loopne
in
xor
and
mov
xchg
mov
vmaxss
jo
or
cmpsl
shlb
mov
and
mov
mov
and
in
sbb
hlt
inc
and
push
scas
rclb
xor
jnp
cmpsl
aaa
andl
sbb
mov
movsb
subb
xor
pusha
adc
or
cli
incl
jl
nop
xchg
pop
fwait
nop
jp
jne
inc
and
and
jecxz
imul
ja
js
cmc
scas
in
inc
push
in
or
bound
pop
dec
pop
mov
pushf
sub
ljmp
imul
lret
mov
lret
and
call
dec
fadds
pop
call
adc
jnp
push
ds
inc
lds
jg
in
pop
or
outsl
into
iret
stc
sub
cs
das
mov
sub
jo
mov
std
pop
jle
push
inc
sub
in
je
adcl
lock
movsl
mov
leave
cmpsl
cmp
xor
mov
sub
lahf
adc
stc
jnp
xor
mov
imul
hlt
fistl
pop
pop
ret
mov
xor
mov
fimull
mov
ljmp
data16
cmp
push
xor
xchg
lods
jae
fimuls
sub
sub
lahf
or
sbb
dec
pushf
cmp
outsb
stos
mov
mov
in
adc
push
aam
shrb
call
outsl
repnz
pop
mov
rol
std
loop
sbb
mov
repz
loop
call
mov
aad
add
sub
mov
and
andl
jbe
adc
pop
sbb
mov
push
dec
call
jmp
jmp
lea
fwait
xlat
es
lret
cmc
nop
sub
push
mov
push
jge
mov
ficoms
les
sbb
push
adc
push
cmp
or
push
jb
push
aam
addr16
and
mov
and
push
subl
gs
adcl
lods
jae
adc
push
push
in
sub
test
ja
mov
cmp
repnz
les
push
cmp
and
andb
cmp
push
add
in
mov
fists
jp
sarl
dec
insb
sub
pushf
sub
mov
sbb
jg
out
adc
pop
fadds
xchg
ds
cwtl
pop
mov
mov
fst
pop
xor
mov
mov
mov
in
lods
ljmp
push
ljmp
daa
movsb
add
testl
nop
inc
sub
mov
push
cwtl
mov
or
mov
aad
or
fiaddl
mov
push
int3
jmp
popa
addr16
cmp
push
mov
int
inc
inc
lods
inc
addr16
sbbl
aam
cmp
inc
sub
aas
aad
cmp
dec
jne
sub
inc
ret
sbb
push
cmpsb
filds
lds
push
sahf
sbb
idivl
mov
pushf
xchg
cmp
loope
cli
mov
loope
inc
add
fisubl
pop
inc
push
loop
mov
int
sbb
lahf
add
or
adc
xor
xchg
pushf
xchg
dec
stos
out
aam
into
mov
push
imul
sahf
movsb
pop
ss
bound
sbb
and
dec
repz
mov
mov
outsl
adc
mov
push
pop
dec
jbe
sub
lea
dec
clc
pop
je
inc
pushf
cmc
mov
rol
sub
jecxz
popf
les
xchg
shll
pop
pusha
rcr
in
int
inc
xlat
clc
jne
inc
push
lcall
loope
leave
fldl
sbb
xchg
insl
pushf
stos
shrb
outsl
mov
mov
fimull
stc
adc
pop
test
push
jp,pt
insb
xchg
scas
mov
outsl
and
mov
data16
int
mov
or
lret
daa
and
out
mov
cmpsb
pop
dec
iret
orb
loopne
inc
push
out
icebp
ret
add
cld
and
mov
mov
add
shrl
pop
das
out
inc
ja
sbb
xchg
out
dec
test
jne
pop
dec
in
or
outsl
fstl
ret
xchg
in
jg
xchg
lods
cltd
xchg
cmp
lock
ret
or
jl
jg
sbb
inc
or
pop
inc
sub
call
inc
push
sarl
cmp
inc
adc
push
push
xchg
enter
cmp
int
push
adc
fwait
leave
dec
test
xlat
jle
ret
arpl
xlat
iret
cmp
lock
ret
adc
aad
mov
fstpt
scas
mov
or
xchg
mov
incb
jne
jo
dec
jmp
out
xchg
sub
insl
fisttpl
mov
aas
adc
shrl
out
shll
and
jl
push
ljmp
pop
jge
dec
jo
stos
mov
scas
loop
rorl
mov
mov
xchg
mov
rorb
imul
gs
inc
fs
nop
in
push
fst
mov
loopne
mov
push
dec
jp
in
psrlw
mov
fnstcw
arpl
in
mov
inc
adc
call
add
xor
pop
xchg
shrl
sbb
sbb
lods
pusha
push
xor
dec
ret
pop
cltd
cmp
sbb
xor
inc
ds
or
outsl
sbb
or
push
xchg
lcall
dec
and
sub
mov
mov
and
add
pushf
jno
mov
jp
test
hlt
bnd
sub
fisubs
inc
dec
fnsetpm(287
mov
rcll
mov
aad
idiv
xchg
lock
data16
aaa
imulb
popf
pop
push
adc
inc
daa
xchg
inc
jae
mov
xchg
cli
imul
push
jns
dec
jecxz
lret
sbb
ficoms
add
xchg
mov
push
jns
test
jnp
xchg
aam
rorl
clc
cld
imul
cltd
pop
bound
fcomps
xchg
mov
popf
and
adc
insb
aad
push
mov
scas
adc
test
jmp
push
subl
inc
inc
xorb
xchg
ret
rolb
sbb
lods
aam
out
gs
cwtl
rolb
or
pop
jg
cmp
jb
jg
push
outsb
mov
mov
imul
push
aas
push
mov
adc
ljmp
aaa
xor
cmp
adc
shr
inc
sbb
shll
xor
pop
or
aas
mov
fstl
je
jo
loope
pandn
push
hlt
ret
andb
xchg
dec
mov
mov
or
sarl
dec
loop
hlt
scas
jg
in
sub
scas
and
aad
fnstenv
sub
inc
mov
test
jne
xchg
mov
jmp
jmp
dec
ds
xor
jne
sbb
mov
into
xchg
xchg
or
add
ret
and
dec
je
mov
ret
cmpsb
pop
mov
or
sahf
add
in
inc
mov
pop
jne
movsb
mov
sub
testb
xchg
andl
cs
or
call
lcall
cmpsl
or
dec
add
push
cmp
jmp
cmpsl
adc
add
xchg
sbb
cltd
leave
shl
cmc
mov
fmuls
outsl
out
mov
lcall
mov
push
mov
pop
leave
jle
push
test
mov
xor
xchg
add
inc
stos
leave
mov
inc
add
aam
dec
mov
xchg
xchg
into
jp
test
jle
scas
jae
mov
inc
stos
pop
dec
cmp
mov
lods
sub
jmp
inc
pushf
shlb
mov
fnstcw
pop
in
dec
repz
mov
rcll
lds
push
mov
aas
sbb
lret
hlt
in
xor
push
push
mov
testb
pusha
adcb
lds
sub
testb
cld
fs
out
dec
nop
fnstsw
movsb
repnz
and
cmpsl
test
out
repnz
insb
out
mov
ret
insb
mov
out
jle
or
sbb
push
push
mov
subl
lahf
lret
lods
out
lret
sti
push
bound
mov
ljmp
and
mov
fwait
cwtl
xchg
outsb
sub
and
cli
js
pop
jb
rolb
bound
ljmp
out
pop
sub
movsb
cmp
push
add
cwtl
into
sub
and
pop
push
fwait
lahf
pop
jnp
ret
lret
ja
test
ja
pop
int3
xchg
and
das
sbb
lret
xlat
in
mov
hlt
add
push
pop
mov
scas
andb
or
js
fs
mov
jno
leave
in
sub
push
shr
xchg
out
jl
jp
jge
add
push
pusha
cs
divl
out
lahf
sub
sti
nop
aaa
add
outsl
nop
outsb
xor
popf
popa
mov
sub
xor
test
ljmp
mov
popf
daa
imul
loopne
loope
out
shrl
test
jb
lods
mov
inc
fidivrs
cld
xchg
fsts
push
xor
stos
push
into
mov
cmpb
out
mov
xlat
xlat
leave
lock
mov
inc
mov
mov
xorl
cmp
sbb
xchg
ja
test
aaa
and
cmp
out
pop
insb
dec
enter
push
pop
loop
jb
add
sahf
jle
sub
movntq
out
int
test
lret
xchg
mov
stos
add
jmp
add
dec
lock
xor
xchg
sub
add
gs
js
stos
out
sti
and
repnz
ljmp
repz
pop
mov
popf
es
xor
mov
cld
or
into
xchg
and
or
es
xchg
adc
lret
test
loop
fbld
xlat
fbld
pusha
xchg
jbe
ficoml
mov
sbb
stos
stos
and
and
lahf
jp
psubsw
shll
sidtl
pusha
test
sbb
pusha
push
scas
in
scas
pusha
cmp
sub
mov
push
jbe
xor
je
inc
dec
inc
cmpsb
push
push
rorl
inc
and
dec
popf
and
add
and
in
or
mov
xor
in
jb
dec
scas
cmp
push
js
or
cmp
add
xor
mov
in
mov
cmpsb
cmp
inc
js
dec
ss
rclb
xchg
sahf
lcall
ss
mov
xchg
push
jp
call
inc
cltd
mov
add
call
and
mov
xor
dec
xchg
mov
mov
lret
jecxz
jl
mov
insl
pop
xchg
fcompp
sub
insl
adcb
xor
cmp
hlt
sbb
inc
in
xchg
insl
sub
mov
fsubrs
lret
push
pop
mov
xchg
pop
insb
inc
push
in
push
sub
jae
fistpl
fisubrs
mov
cwtl
push
hlt
add
int3
ret
add
xchg
stc
jnp
push
inc
test
loopne
push
fwait
or
clc
mov
mov
sub
sub
int
lret
inc
xchg
xchg
cs
iret
xchg
aad
lcall
insb
push
lods
movl
outsb
mov
push
arpl
push
dec
stos
cld
sbb
mov
pushf
adc
and
out
xchg
aad
jle
mov
pop
int
jl
cld
imul
and
push
push
adc
mov
adc
sarl
outsl
fimuls
mov
pop
or
int
and
ss
inc
xor
mov
xlat
dec
inc
movsl
cmp
lods
loope
sbb
pop
imul
sahf
mov
orl
mov
cmp
jbe
out
repz
lcall
ret
scas
mov
or
push
mov
mov
orb
lret
mov
pushf
xchg
adc
outsl
scas
dec
sub
mov
pop
mov
sbb
cwtl
outsl
mov
lret
lret
inc
popa
jns
pusha
ficompl
dec
push
xor
sahf
or
and
sahf
gs
out
pop
gs
push
sbb
outsb
xlat
ret
aad
fiaddl
and
and
outsl
xchg
jl
cmp
shr
loopne
adc
mov
adc
adc
dec
pop
test
int
xor
rclb
cmc
sbb
imul
cltd
push
sbb
fsts
ds
popa
xor
mov
dec
fwait
das
cs
pushf
pop
arpl
setnp
lods
jmp
dec
pop
mov
mov
aas
add
leave
insl
insb
sbb
push
mov
xor
mov
rolb
in
cli
ret
push
std
push
test
iret
rorb
enterw
mov
aam
jge
add
imul
and
jae
cwtl
shl
cmc
mov
cwtl
in
jae
out
lods
movsl
push
rorb
xor
int
mov
jo
repnz
pop
mov
lds
cs
or
fidivrs
dec
out
jno
push
dec
push
in
cmc
xchg
pop
mov
fsubrl
push
inc
ret
int
or
fldt
xlat
mov
negl
nop
stos
inc
adc
pop
dec
stc
or
xor
std
into
push
rcrb
pop
fisubl
sahf
into
or
popa
mov
mov
mov
jne
out
cmp
scas
xor
lahf
scas
out
cmc
inc
cmc
cmp
int
adc
fisttps
push
addr16
jmp
les
test
in
test
dec
loope
sbb
loop
push
jns
mov
xor
add
mov
mov
mov
adc
jmp
fsts
std
loop
add
test
or
mov
fstpt
js
and
mov
test
verr
subb
sbb
ror
lcall
scas
addr16
int3
ss
add
call
adc
add
or
and
ficoms
mov
inc
dec
stos
push
add
scas
subb
idiv
out
inc
dec
sbb
dec
sub
push
lds
mov
shrl
mov
data16
xor
push
cmp
pushf
mov
frstor
pop
adc
dec
shrb
syscall
daa
sbb
dec
xchg
mov
repz
das
mov
and
mov
sbbl
mov
jae
imul
adc
arpl
sbb
cs
jle
or
ficomps
cmp
dec
xorb
shll
add
add
mov
adc
pushl
jbe
lods
add
gs
push
and
test
mov
mov
and
pavgb
roll
xlat
hlt
in
loope
sbb
out
inc
mov
mov
in
inc
xor
sbb
sbb
mov
pushf
pop
lcall
inc
scas
sahf
mov
lahf
js
fwait
scas
mov
xchg
fildll
mov
xor
add
inc
out
mov
out
or
dec
pop
pop
mov
cli
arpl
jg
idivb
les
shl
mov
fdivl
dec
xor
lahf
dec
inc
xor
cwtl
js
ljmp
sarb
push
add
fstpl
insl
ja
pop
dec
lods
jecxz
or
imul
jge
mov
mov
pop
lods
and
sbb
movsl
sbbb
inc
inc
jo
ja
jno
aaa
sub
rclb
imul
jp
iret
es
xor
leave
push
fwait
sbb
in
push
adc
jl
ficomps
xchg
popa
ret
jne
jns
xchg
in
or
jl
push
jae
lret
inc
movsb
sub
lret
test
xor
inc
outsl
loop
xorb
jae
lock
adc
push
cmp
sbbb
cli
rcrl
repnz
fnstsw
lock
xor
test
lret
repnz
and
cli
mov
or
out
xchg
push
lods
cltd
movsl
cmp
mov
adc
je
sbb
jnp
jnp
leave
inc
popl
addr16
lods
sahf
into
add
cmpsb
xorl
xchg
xor
addl
pushf
jmp
adc
lds
push
jmp
aam
es
add
aaa
pop
sbb
test
jge
add
mov
fldcw
jmp
movsb
mov
sub
es
xorl
and
mov
inc
jle
fldcw
jecxz
mov
mov
dec
and
cmpsl
adc
aam
jnp
push
cmpl
sti
in
mov
sbb
push
mov
mov
inc
fldl
push
imul
repnz
mov
inc
incl
jns
gs
aas
jecxz
inc
fisubl
jnp
aaa
inc
shlb
rcll
jp
gs
out
out
mov
or
loopne
fwait
jmp
std
das
sub
fcmovu
pop
ljmp
pop
out
jge
dec
fmuls
repnz
and
rolb
mov
movsb
push
mov
cs
xor
jg
loope
xor
test
repnz
or
repz
shll
xor
nop
ficompl
cli
mov
into
out
pop
mov
loopne
push
sub
xchg
std
xchg
cmpsb
es
sahf
mov
adcb
sbb
mov
cmp
pop
xor
out
push
int3
bound
push
fistpl
in
push
pop
mov
out
adc
shlb
mov
roll
xor
sub
pop
fwait
xchg
push
mov
lahf
sahf
pop
clc
nop
ret
lcall
test
out
lahf
cs
sub
dec
xchg
mov
fsqrt
xor
pushl
jmp
mov
or
sub
pop
mov
out
xchg
cmpsl
inc
xchg
jl
mov
pushf
mov
loop
cltd
addr16
and
xchg
or
pop
cmp
enter
mov
xchg
sahf
adc
in
or
bound
das
divb
leave
add
scas
mov
sub
orb
xchg
fs
shll
lea
mov
fwait
push
xchg
pop
mov
sub
iret
fsubl
test
aam
adc
sbb
sahf
stc
lods
mov
or
lahf
pop
push
xchg
popa
xor
nop
cmp
sbb
movsb
push
cmp
in
movsb
cs
sbb
gs
ljmp
int3
push
add
out
ljmp
push
xor
rcrl
stc
jmp
lock
sahf
sub
or
in
pop
jle
pop
or
stos
repnz
mov
ss
aad
scas
jmp
pusha
inc
neg
jle
test
outsl
pop
push
ffreep
jno
mov
sub
outsl
mov
dec
inc
inc
pusha
stc
sbb
pop
cltd
sub
test
mov
js
cmpl
push
jmp
fcmovu
stos
popf
out
cmc
outsl
dec
pop
outsb
or
jne
fcmove
push
inc
pop
mov
inc
pop
push
mov
mov
dec
lea
adc
add
pop
fwait
push
out
stos
sub
jo
in
aaa
xchg
adc
mov
das
push
call
adc
pop
fwait
and
scas
fdivl
mov
out
push
sbb
jle
xchg
insb
jno
adc
js
pop
test
ss
pushf
jnp
cld
jmp
call
jle
jmp
add
adc
pop
mov
dec
pop
push
rcrl
mov
inc
scas
imul
adc
pop
dec
jecxz
mov
add
and
pop
adc
es
mov
xor
insb
mov
pop
in
rcrl
test
test
out
adc
jb
adc
push
push
pop
mov
adc
push
xchg
cmp
ja
js
mov
enter
push
popa
add
mov
incb
test
lcall
std
xor
mov
nop
adc
pop
mov
or
hlt
adc
addb
leave
sar
orb
and
sub
cmpl
negb
cmp
dec
iret
add
adc
fidivs
daa
cmc
in
and
add
insb
pop
imul
call
ret
gs
pop
dec
sbb
jp
shr
aad
lods
pop
data16
mov
mov
scas
addr16
mov
xor
xchg
fstps
mov
xchg
ljmp
pop
pop
xor
loop
movsb
sub
cmc
fldt
sub
insl
inc
xlat
out
pushf
push
hlt
mov
push
add
or
rcrl
roll
lods
addl
and
and
inc
stc
test
inc
in
or
and
fcomp
stc
out
les
cmpsb
push
stos
test
sub
jne
out
hlt
scas
adc
or
jb
jno
mov
cmpsb
inc
mov
das
xor
das
rclb
add
loop
mov
mov
aas
into
clc
scas
leave
sbb
sar
arpl
outsl
sub
xor
jp
xchg
sbb
adc
das
mov
or
imul
sub
mov
outsb
in
daa
mov
inc
mov
mov
ret
pop
clc
repnz
adc
test
addr16
fistpl
lods
mov
add
push
out
pop
add
xor
insl
shrl
imul
pop
lcall
cld
pop
ret
shll
inc
mov
mov
adc
nop
push
xchg
cmp
xor
ret
add
mov
push
inc
fucomip
dec
jg
cmpsl
sub
adc
inc
sbb
ficoms
cmp
mov
inc
je
outsb
mov
sbb
loop
dec
adc
or
sbb
idiv
adc
xlat
jb
or
call
adc
add
mov
das
mov
or
mov
enter
out
cmc
push
testl
sub
outsl
push
fimuls
add
aas
adcl
movsb
mov
stc
aad
fnstenv
inc
jb
fildl
inc
pop
mov
std
push
test
lods
mov
mov
add
mov
mov
cmp
sub
mov
inc
cmp
arpl
scas
jb
mov
pop
pushf
add
adc
jl
repz
push
xchg
and
out
iret
loopne
das
movsb
and
push
or
dec
scas
ss
sub
xchg
outsl
int3
flds
imul
mov
add
or
dec
cmpsb
or
dec
push
loopne
mov
pop
rclb
add
stos
add
imull
in
sub
jne
pop
or
dec
jmp
sub
insl
mov
dec
outsb
ret
adc
push
cmpsl
dec
scas
cs
andb
adcl
jp
out
push
dec
addr16
mov
test
repnz
cltd
fwait
ljmp
sti
mov
and
push
cmp
cmc
xor
adc
xor
pushf
mov
mov
and
cmp
loopne
int3
push
sbb
lcall
and
hlt
add
cmp
call
repz
jmp
int3
and
stos
cmpsb
sti
mov
mov
cltd
dec
in
dec
push
fs
lret
jns
inc
inc
bound
or
iret
pusha
int3
loopne
subl
test
sbb
cmp
shrl
push
mov
shr
add
lret
lret
mov
sub
xorb
sub
mov
repnz
mov
mov
jg
fistpl
insl
nopl
or
loopne
enter
sub
aas
fs
add
mov
adc
mov
cltd
test
xchg
dec
leave
stos
inc
pop
jo
jae
pop
push
outsl
jbe
cs
lcall
xchg
ljmp
loopne
pop
pop
push
add
inc
incb
das
inc
out
mov
sbb
lods
jge
std
jae
fs
lcall
mov
mov
call
out
out
inc
in
adc
mov
xlat
negl
incb
mov
in
sbb
xor
cmp
push
data16
mov
jp
add
dec
sub
or
dec
popl
test
iret
out
cltd
fimuls
lock
fnstenv
out
xchg
inc
cmp
jo
scas
mov
mov
or
mov
xor
ljmp
or
xchg
fisttps
sub
lcall
inc
sbbb
xchg
xor
fwait
push
sub
sbb
push
mov
push
jl
mov
jge
pop
aam
loopne
sti
stos
mov
xor
mov
cld
jne
cmp
scas
js
pusha
es
dec
or
mov
push
repz
mov
out
mov
pop
es
push
mov
fcoms
cmp
mov
movsl
inc
repnz
mov
lret
out
xchg
cmp
push
fdivs
subl
and
xchg
into
adc
sahf
xchg
sub
jbe
sub
cld
movsl
add
ss
out
xchg
call
lcall
mov
mov
push
dec
hlt
test
sbb
mov
aas
pop
dec
outsl
xlat
aas
adc
mov
loop
into
push
xchg
push
aaa
enter
add
jle
mov
outsb
iret
call
inc
jb
std
mov
add
in
jl
addr16
push
stos
sub
sub
insb
sbb
aad
push
pop
dec
sti
loop
imul
and
ds
mov
ret
pop
in
jp
ret
xchg
fcmovnu
jp
bound
xchg
movsl
mov
ficoml
add
iret
sub
mov
ret
imul
cltd
xchg
leave
lahf
int3
jmp
scas
cli
mov
incb
lock
insl
insb
or
lea
and
xor
shl
inc
inc
leave
fidivrs
cmp
jae
into
mov
sub
push
fsub
lds
loope
movsb
repz
ficoms
pop
out
mov
cmpsb
push
mov
xor
loope
movsl
inc
cmp
test
adc
sbb
push
int3
fidivs
pusha
jno
stc
cmpsb
inc
push
pop
cmp
or
jne
sub
and
xor
fldt
cmp
inc
and
dec
rcrb
cs
mov
fwait
test
aas
dec
sahf
lret
push
inc
clc
jmp
cli
xor
dec
hlt
jae
and
cs
rcrl
mov
rep
dec
dec
cli
mov
pop
and
fidivrl
out
adc
xlat
rcl
sub
or
aad
push
cwtl
sahf
imul
in
arpl
xorl
mov
jl
incb
popa
sub
icebp
ja
mov
mov
imul
jge
xor
dec
pop
in
leave
dec
push
test
pop
cmp
pop
mov
jp
repz
push
in
lcall
and
std
lock
jb
lock
push
repnz
fstpt
aaa
sarb
rclb
scas
push
and
xorl
ss
jns
dec
hlt
mov
xor
cmp
xor
inc
xchg
sbb
es
cmp
dec
call
insb
mov
notb
insb
sub
dec
and
jnp
cs
cmc
dec
push
dec
data16
aas
push
dec
sti
dec
cmc
mov
push
xor
dec
adc
loopnew
cmc
cmpsb
and
add
jmp
les
test
inc
dec
mulb
add
popf
mov
mov
cmpl
out
mov
push
std
cs
popf
cmp
pop
mov
ja
xor
jne
inc
xchg
std
enter
nop
ljmp
jbe
dec
lcall
ret
or
mov
ret
dec
jmp
inc
mov
or
dec
xchg
movsl
xlat
xorb
andl
jo
jnp
flds
popf
rcr
xchg
sub
je
mov
test
sub
dec
dec
cli
les
int
ds
fsubrp
inc
mov
ss
insb
push
hlt
fwait
jno
aas
mov
inc
or
jl
push
mov
lock
popf
inc
mov
and
mov
xor
test
mov
sbb
sub
mov
push
loop
jp,pt
popf
mov
jo
add
mov
adc
mov
sbb
cli
mov
inc
push
cwtl
cmpl
rolb
out
xchg
popf
push
inc
xorb
cmp
fsts
and
push
stos
cmp
lret
jg
ss
dec
stos
div
push
xchg
pop
mov
jl
push
push
int3
push
mov
push
lea
cmp
jmp
adc
ret
cmp
push
lods
in
cmc
push
push
lret
imul
sahf
enter
mov
jmp
inc
or
add
inc
lds
mov
mov
imul
les
scas
scas
cmpb
js
inc
mov
scas
jne
scas
xorb
cmc
inc
fwait
mov
fsubrs
in
add
mov
in
aam
ret
aam
pop
mov
fwait
jne
into
add
cmp
enter
mov
fcoms
gs
add
push
daa
int3
adc
jmp
mov
add
es
inc
lea
add
mov
cwtl
mov
add
mov
dec
jl
xchg
out
cmp
icebp
push
push
xor
stc
push
iret
mov
outsb
cmp
mov
gs
pop
dec
inc
fsts
mov
pop
jmp
ficoms
out
dec
and
in
popa
es
dec
ficoml
xchg
call
repz
in
lret
rorl
mov
pop
jmp
out
lods
cmpsb
xlat
leave
push
lahf
test
xor
out
cmovne
sbbb
in
mov
inc
add
pusha
shrl
jns
stos
xchg
sub
mov
lfs
shrl
xchg
in
inc
icebp
adc
cld
pop
xor
popa
jmp
test
xchg
ret
sahf
sub
add
sub
into
mov
mov
xchg
nop
pop
or
lds
movb
mov
mov
pop
pushf
sub
mov
pop
jno
or
xor
cmc
cmpsl
in
cmpsl
fists
inc
push
rcrl
fcmovnu
imul
or
sbb
sbb
sbb
sub
hlt
retw
mov
insl
fnsave
fistpll
cwtl
sbb
pandn
cwtl
inc
xlat
in
aaa
scas
in
pop
fstpt
jne
iret
jo
dec
ficoms
fisttps
insb
sbb
mov
xchg
lea
add
popf
sbb
adc
hlt
pusha
push
ljmp
ds
sbb
fwait
inc
or
loopne
int
fwait
add
jbe
jae
jecxz
out
sbb
mov
popa
addb
adc
sbb
jmp
cmp
push
jp
idivb
sub
sub
fmull
bound
iret
adc
sti
cltd
mov
jb
sbb
inc
mov
and
fwait
gs
xor
pushf
aad
add
xchg
mov
push
mov
and
push
rcrb
cmpsb
daa
jmp
inc
leave
addb
inc
ffreep
loopne
bound
push
and
cs
ret
add
cwtl
clc
gs
fsubl
js
xchg
cmp
push
push
mov
sbb
or
xchg
push
aam
add
lcall
cmc
stos
aam
xor
add
je
pop
subl
add
or
sub
sahf
ret
pusha
enter
jle
out
cmpsb
sti
cmpsb
cli
aaa
mov
push
jg
call
cld
sbbl
xchg
jl
mov
dec
dec
sub
pop
sti
jo
mov
fcomip
addr16
in
aas
out
ss
add
sub
pop
scas
cmp
xor
pop
mov
les
sbb
mov
arpl
fldenv
lods
xchg
or
gs
lahf
adc
jp
fwait
test
fcmovu
dec
mov
repz
xor
mov
jnp
push
lcall
add
push
or
xor
or
test
jmp
mov
add
cmp
pop
lods
cmp
mov
dec
xchg
lea
aas
push
loop
sbb
inc
sub
jecxz
call
push
sbb
fs
ss
ret
mov
dec
inc
adc
mov
sub
ja
and
jne
data16
sbb
stc
adc
lods
loopne
pop
adc
pop
xchg
add
hlt
rorb
inc
push
and
cmpsb
enter
sbb
lods
sbb
rclb
jp
fmuls
sub
in
mov
js
int3
jnp
add
pop
dec
jne
sub
hlt
cmp
out
ljmp
adc
or
xchg
push
fmull
jnp
push
aad
jecxz
xor
data16
xor
mov
jmp
push
pop
fsts
mov
sub
bound
dec
hlt
sub
fstpl
out
mov
lahf
into
out
xchg
mov
out
jmp
test
push
inc
xchg
sub
or
repnz
mov
sahf
mov
jne
add
ja
nop
mov
pop
ss
adc
pop
push
es
and
lods
outsw
dec
xchg
jb
jne
fwait
dec
add
rcr
inc
mov
jmp
cmp
shlb
loope
sti
test
out
faddl
imul
lods
arpl
enter
inc
sbb
call
xchg
jge
dec
int
lods
stc
testb
call
fildll
lret
jmp
push
pop
fstl
adc
shrb
and
xchg
sbb
arpl
imulb
into
adc
jmp
inc
mov
sub
dec
je
sbb
fstpl
loop
sbb
cmp
in
pop
scas
into
mov
aad
or
imul
add
hlt
inc
ja
out
shlb
xchg
je
cld
sahf
out
ret
mov
pusha
xchg
cld
jmp
stos
rcr
jno
cmpsb
loopne
popf
xchg
push
xor
mov
clc
add
sub
sub
mov
mov
push
pop
aam
stos
xchg
push
sub
cltd
stos
dec
popa
jp
or
inc
or
dec
ljmp
xchg
sbb
or
icebp
fwait
rorl
test
pusha
dec
cs
pop
pop
or
cmp
pop
push
mov
and
cld
dec
cmp
or
enter
and
stc
fscale
dec
jo
xchg
jnp
ds
xchg
cmpsl
scas
or
push
ljmp
add
pop
scas
xor
test
clc
sar
ljmp
mov
in
push
insl
pop
xor
rclb
cli
test
int3
mov
repz
gs
or
or
sub
call
je
pop
ret
les
inc
mov
mov
push
enter
fs
and
or
cmp
orl
ljmp
cltd
pusha
data16
jbe
les
shlb
push
std
andl
jbe
iret
rcl
cmp
inc
xchg
push
push
pop
jmp
lock
lret
xchg
mov
adc
adc
int3
imul
sbb
mov
xor
loope
dec
sub
rolb
pop
add
call
andl
aas
xchg
or
jno
into
orb
pop
std
dec
mov
sbb
push
mov
xchg
aam
nop
mov
dec
addr16
pop
lock
inc
sbb
mov
ss
std
ret
push
cwtl
dec
mov
test
xchg
lods
inc
ja
aas
push
push
push
fcoms
xchg
cltd
es
cwtl
out
cmp
lret
loopne
push
js
lock
mul
repnz
push
jmp
daa
sub
inc
adc
dec
mov
cmp
dec
test
subl
loop
lds
add
xor
jbe
mov
stos
push
in
gs
jno
jns
addb
adc
in
adcl
xor
hlt
xor
ja
lret
fs
js
add
or
mov
sbb
stc
dec
cmp
sbb
dec
jecxz
inc
hlt
popf
jp
dec
lret
push
in
ljmp
mov
cmp
daa
movsb
pop
imul
push
jp
mov
lea
pop
push
aad
jne
xor
jo
mov
sub
hlt
das
in
xor
jp
lcall
pop
shll
jns
cmp
pop
in
adc
inc
pop
nop
adc
pop
and
mov
push
fwait
adc
mov
cli
cmp
ret
dec
push
or
jno
mov
and
jns
mov
inc
sub
jl
mull
push
and
xchg
add
and
mov
or
mov
push
call
sti
or
lock
daa
xor
rcll
jno
xchg
fstps
xchg
jmp
push
jmp
mov
repz
lret
stos
clc
xchg
aas
xchg
xchg
repnz
dec
xchg
aas
sub
scas
data16
pop
lahf
fnstenv
scas
pop
cmp
mov
out
push
and
negl
push
push
xor
jns
into
inc
xor
or
enter
fimull
stc
xor
in
mov
bound
int
add
lret
pushf
inc
popa
mov
in
loope
es
mov
adcb
pop
sbb
adc
mov
mov
js
mov
mov
add
fstpl
xor
push
rcl
inc
fists
or
ret
enter
ss
add
jg
add
cmp
xor
call
mov
push
cmpsl
daa
inc
xor
lcall
lods
cmp
movhps
sbb
push
inc
callw
dec
pop
and
data16
mov
mov
mov
cmp
test
mov
mov
bound
and
and
cmp
push
mov
or
sbb
es
in
mov
daa
imul
mov
mov
mov
push
pop
add
out
add
mov
roll
xor
mov
rolb
sbb
mov
and
lret
and
sub
and
data16
mov
or
mov
bound
mov
push
int
decl
sbb
push
dec
push
sub
mov
and
or
push
pop
je
push
add
mov
gs
add
sbb
mov
mov
imul
push
dec
pop
insl
add
inc
cli
dec
sub
fldcw
ljmp
sti
leave
fstpl
xchg
shrl
inc
mov
push
pop
mov
cltd
jmp
push
adc
mov
cmpsl
and
mov
add
cltd
cmpsb
rcrl
out
xor
nop
std
loope
mov
mov
and
aaa
in
cmpsl
mov
add
es
ss
jno
ljmp
and
aam
sbb
add
imul
mov
push
push
xor
sub
mov
fmull
mov
inc
dec
lods
cli
dec
cli
sub
and
sti
and
aaa
sub
xor
imul
xchg
jne
add
inc
inc
out
mov
ret
push
jecxz
js
adc
pushf
jno
jecxz
pop
jmp
or
rorl
arpl
jle
inc
sti
in
push
dec
stc
loope
lret
mov
xrelease
mov
and
outsb
mov
mov
loopne
jecxz
insb
jne
mov
fdivrl
lret
int
ss
movsb
xchg
popf
movsl
xchg
pop
test
roll
adc
cs
inc
push
jo
nop
cmpsl
ret
add
sub
ja
pop
sti
je
bound
xchg
pop
inc
xchg
inc
and
popa
imul
sub
into
mov
xor
pop
lods
pop
push
add
out
and
push
mov
add
js
push
dec
popa
push
sub
daa
cli
or
arpl
and
dec
mov
jb
xchg
repnz
push
sub
insb
and
and
imulb
jb
cmpsb
sub
call
in
xchg
dec
dec
rorb
jns
push
add
push
fidivs
loope
data16
ljmp
lret
scas
out
and
lcall
sub
es
in
out
inc
ss
xchg
stos
push
mov
mov
scas
pop
mov
lret
cmpsb
popf
popf
cmpsl
ds
inc
inc
xchg
jne
test
dec
sbb
out
rcrl
sahf
cs
jne
gs
imul
loope
xchg
push
push
cmp
mov
mov
movsb
ss
cmp
repz
frstor
cmc
xchg
push
and
pop
or
fsubr
mov
xor
mov
mov
mov
decb
mov
fs
dec
sbb
push
clc
jbe
js
push
aam
in
sbb
orb
mov
lods
std
rorb
cmp
push
adc
in
xchg
inc
mov
imul
push
dec
mov
fmuls
inc
das
nop
xor
inc
lsl
inc
inc
repz
xor
mov
push
jo
push
xchg
cmp
ljmp
push
cli
jecxz
pop
movsb
jns
dec
sbbb
jns
jmp
push
jmp
flds
insb
add
add
movsb
sbb
ret
rolb
jle
jnp
or
pushf
jns
adc
daa
ret
outsl
jno
negl
fldenv
xsave
cld
sti
or
inc
scas
insl
insl
inc
bound
xor
fstp
jo
add
sbb
add
pop
daa
pop
or
imul
out
mov
xchg
stos
jp
dec
nop
jns
sub
sbb
or
shrl
jbe
cmp
cmp
ret
or
loopne
lret
dec
dec
and
loope
xchg
or
mov
mov
imul
push
xor
cmp
lcall
mov
push
inc
or
addr16
push
inc
mov
gs
repz
mov
cld
aas
cmp
mov
adc
pop
andl
xchg
cmp
jbe
jno
xor
mov
iret
pop
add
xlat
arpl
cmc
stos
mov
insb
jle
pop
popa
dec
xor
mov
adc
insb
jbe
pop
aam
jge
scas
adc
movsl
dec
adc
add
sub
std
pop
inc
mov
pop
dec
pop
test
repnz
dec
scas
out
in
xchg
inc
mov
popf
fcom
cwtl
mov
pop
lahf
sbbb
out
xor
jb
xorb
sti
xor
data16
jb
sbb
mov
mov
pop
int3
mov
xchg
outsb
cmp
gs
lea
add
orb
cld
mov
cwtl
jbe
add
aas
mov
ds
cmp
adc
subb
call
pop
xor
mov
add
jne
icebp
xor
dec
mov
lret
add
cmpsb
jns
xchg
sbb
jge
movsb
lds
test
inc
pusha
sbb
xor
add
arpl
jl
test
mov
out
xor
push
daa
sbb
push
xchg
icebp
adcl
pop
lea
pop
xchg
pop
and
lea
mov
adc
mov
fwait
stos
clc
jle
push
hlt
mov
jae
pushf
sbb
adc
call
lods
movsl
sti
pushw
jbe
mov
ljmp
mov
out
lods
stc
rdmsr
pop
jg
sub
and
xchg
psrld
std
fdivl
lds
cmp
push
std
xchg
mov
mov
scas
jp
test
or
jo
shr
cmp
and
jne
xchg
movsb
mov
leave
insb
out
mov
inc
cwtl
cmp
mov
imul
enter
mov
sbb
push
test
int
aaa
sti
jae
popa
pop
xor
leave
or
adc
out
xchg
cmpsl
in
dec
ja
sbb
xchg
lods
cmp
adc
sub
add
add
or
test
fwait
out
gs
jns
jns
shll
mov
lret
and
mov
mov
sub
pop
sbb
das
xor
imul
pop
cmp
fldcw
imul
leave
mov
cli
in
mov
notl
test
push
into
dec
fsubrp
scas
pop
sub
mov
aam
adc
dec
in
cmp
orl
inc
pop
sti
cmp
sub
je
stc
or
mov
jb
pusha
ljmp
pop
pop
insb
das
rcll
mov
mov
mov
push
push
incl
ret
mov
out
pop
dec
stc
mov
mov
jae
cwtl
popa
adc
test
mov
and
rcrb
pop
rolb
pop
xchg
imul
test
imul
ret
cs
test
push
lods
insb
sbb
mov
xchg
int3
push
shlb
aam
push
mov
or
inc
imul
test
sahf
std
sbb
inc
xor
xchg
outsl
sbb
fs
xor
icebp
shll
jnp
lahf
lods
cmpsb
xor
xchg
movsl
test
sub
dec
mov
gs
fwait
adc
xor
mov
stc
cmp
and
out
cli
mov
divl
add
xor
cmp
fistps
push
mov
dec
or
fwait
add
push
xchg
pop
test
cli
dec
int
lds
je
into
inc
add
xor
sahf
hlt
mov
lea
repnz
pop
xchg
scas
and
test
pop
in
ror
sbbb
and
aas
repz
hlt
pop
addr16
imul
mov
sbb
jmp
add
inc
idivb
test
pop
stos
call
aam
adc
mov
fiadds
test
lea
lcall
xor
ret
imul
out
rcll
fldl
lea
mov
shll
leave
ja
xchg
or
push
push
sbb
mov
bound
dec
cmp
repz
std
mov
xchg
add
mov
pop
mov
cmpsl
test
je
gs
lock
xchg
fnstsw
mov
or
leave
leave
cmpsb
adc
jne
dec
movaps
lds
rorb
insl
and
jne
sub
sbb
fnstcw
mov
test
inc
push
ljmp
mov
add
xchg
cld
xchg
or
push
loop
xchg
or
ret
add
gs
stos
pusha
pop
or
sub
mov
push
dec
test
pop
das
enter
sbb
test
lods
xchg
or
jbe
pop
pushf
jb
pop
arpl
push
call
nop
outsl
or
dec
pop
pop
fwait
or
aas
sbb
es
add
inc
mov
xor
push
fs
imulb
pop
stos
shll
adc
jg
fidivl
push
fcmovbe
xchg
pop
ret
jecxz
loop
cld
rcrb
ss
je
stos
popa
ret
out
loope
mov
cld
or
out
sub
sti
mov
push
clc
and
sbb
call
adc
fstpl
dec
repnz
mov
mov
rol
jbe
xor
fdivs
mov
xchg
mov
and
inc
and
sub
pop
cs
stos
sar
mov
aam
sahf
sbb
xchg
sub
inc
xor
and
lods
push
testl
mov
and
mov
push
sub
sbb
test
or
rcrb
sahf
mov
pop
ret
inc
sub
bound
es
jb
scas
aam
sbb
inc
jl
js
sbb
dec
mov
sub
test
aad
stc
repnz
sub
loopne
adc
fwait
push
push
imul
xor
adc
adc
mov
inc
adc
insl
jno
mov
push
das
or
add
jg
fildl
fwait
add
cmp
loopne
or
sbb
insl
jl
jle
add
ficoml
sub
hlt
rorb
mov
add
adc
lcall
cmp
out
adc
repnz
icebp
jecxz
out
add
mov
sbbb
xchg
mov
mov
cmc
pop
imull
in
leave
outsb
mov
mov
scas
dec
xor
stc
pop
dec
js
ss
aad
loopne
ljmp
fldt
repz
inc
rolb
pop
mov
imul
mov
stc
jle
cmp
pusha
int3
ss
jo
inc
add
pop
dec
in
pop
or
mov
lcall
dec
dec
negb
jg
or
mov
dec
sub
xchg
jecxz
sbb
ficoml
inc
rclb
dec
mov
scas
outsb
push
xor
add
xor
outsb
stos
lock
cs
mov
and
ds
xor
out
jecxz
mov
adc
dec
pop
bound
pop
or
lahf
dec
push
outsb
xchg
lret
fidivs
inc
and
cld
push
xchg
jae
sbb
dec
cmp
cltd
pop
in
in
gs
dec
inc
mov
int
imul
test
fdivrp
or
mov
or
fldz
fistl
fidivrl
and
mov
je
or
cwtl
or
cld
cmp
sarl
aad
fwait
mov
xchg
dec
sub
lods
mov
dec
pop
in
adcl
or
lds
mov
pop
inc
jl
loope
push
fs
pop
pop
into
inc
outsl
mov
and
addr16
jo
push
jecxz
lods
ss
or
mov
add
into
test
or
or
jo
scas
dec
cmc
pop
mov
in
xor
push
loope
or
jno
jne
fs
jp
add
push
inc
sub
xchg
lcall
ret
clc
jno
cmp
inc
lahf
push
or
mov
lahf
mov
stc
int3
xor
sub
jge
sub
imul
popf
mov
mov
jmp
lea
cmp
test
add
sub
jmp
xlat
pop
or
fldt
push
test
mov
mov
mov
pusha
push
scas
pop
in
dec
cs
sub
xchg
jmp
cli
negl
repz
push
mov
jmp
cmp
clc
int3
insl
inc
ljmp
xchg
adc
iret
lahf
and
mov
in
inc
ficoml
pusha
in
jno
dec
sbb
cli
lods
and
jno
cltd
add
pop
mov
out
sub
mov
jecxz
clc
pop
pop
and
pop
ss
scas
in
cmp
push
iret
push
jnp
dec
lret
sbb
cmpsb
loopne
inc
mov
inc
cmpsb
or
leave
inc
loop
jno
push
xor
stos
xchg
rclb
ret
cs
in
push
xchg
cs
mov
jg
psubq
in
add
hlt
lret
sbb
dec
fldl
xchg
mov
xchg
adc
pop
shlb
fbld
mov
stc
dec
pop
cmp
std
mov
push
test
in
sbb
mov
mov
loope
push
js
icebp
add
jne
mov
cmpb
pop
push
repz
iret
push
pop
and
insl
addr16
rorl
mov
xchg
push
sti
repz
sub
cmpps
dec
jle
sbb
mov
inc
das
inc
mov
enter
adc
lcall
xor
xor
sub
sarl
sub
outsl
mov
iret
mov
xchg
add
add
out
daa
es
mov
in
xchg
subb
faddl
aam
daa
mov
mov
repz
call
inc
and
lods
push
je
mov
imul
mov
mov
xor
cmp
insb
xchg
cmp
mov
pop
out
mov
adc
jb
iret
inc
xor
or
fistl
mov
popa
xchg
jge
in
rcrb
or
lods
iret
xchg
or
inc
ret
inc
mov
inc
cmc
cs
jb
cmp
push
mov
mov
aaa
push
inc
inc
inc
xchg
sub
icebp
sub
jmp
xor
pop
popa
xor
mov
testl
xchg
pop
push
cld
divl
xchg
adc
jp
or
mov
jecxz
pusha
mov
sub
insb
leave
jne
pop
shlb
and
cmp
cwtl
xchg
jecxz
add
xor
movl
sub
add
or
push
sub
xchg
lock
mov
fisttps
lcall
push
cmc
aad
fisubrs
lods
lret
lods
xor
stc
cmp
jo
pop
sbb
jb
jl
fisubs
jnp
mov
jecxz
imul
sbb
adc
xor
mov
add
sbb
sbb
mov
pop
mov
repnz
loop
out
inc
nop
es
loope
sbb
mov
iret
fildl
adc
or
shrb
ret
sub
xor
fbld
fadd
pop
mov
in
sub
mov
ljmp
scas
mov
stos
loope
pusha
scas
enter
and
sub
fnsave
fwait
lods
push
sahf
push
jbe
adc
es
adc
or
add
scas
add
mov
jecxz
ss
push
xor
and
and
jns
inc
sti
push
push
xchg
aam
test
push
sbb
jno
add
pop
xchg
xlat
cmp
xchg
jmp
pop
pop
aam
pop
lods
push
pop
jbe
lret
mov
mov
cmpsb
outsb
sbb
pop
mov
addb
xchg
imul
imulb
fisubs
sbb
stos
outsb
jle
mov
and
mov
mov
adc
js
dec
les
lcall
xorb
adc
ljmp
cld
pop
push
mov
adc
xor
push
push
and
sbb
or
imul
dec
push
inc
jmp
andb
cwtl
cmpsb
shrb
xchg
adc
fsubrs
push
jecxz
aad
mov
test
xchg
mov
push
mov
lods
aad
adc
xchg
inc
mov
int
adc
int
pusha
xchg
loopne
or
push
mov
sub
jae
pop
jecxz
cmpsb
outsl
or
stc
lock
push
add
imul
or
jne
loop
xor
sbb
popa
clc
jns
pop
popf
mov
aaa
adc
sub
std
divb
fpatan
mov
dec
out
and
mov
div
cmp
imul
sbb
fucomi
ja
test
or
inc
sbb
inc
sti
dec
imul
mov
sbb
add
mov
enter
inc
dec
push
dec
mov
scas
push
push
mov
sub
and
movsl
popf
sbb
jle
data16
fcomps
pusha
aas
xchg
cltd
icebp
shll
pushf
mov
cs
mov
push
das
push
pop
jne
je
repnz
cld
sub
xlat
loopne
imul
out
sti
sub
jl
push
xchg
or
sbb
das
loop
bound
mov
adc
pop
into
loop
push
cli
jbe
ss
test
rorl
jge
push
sub
inc
nop
insb
push
test
fldenv
mov
pop
xor
mov
mov
dec
push
sahf
sti
cmc
xlat
mov
cmpsb
add
stos
loope
xchg
mov
xchg
mov
push
lahf
aaa
jge
jecxz
dec
push
xchg
add
repnz
xchg
jle
lock
test
mov
add
push
iret
aaa
sub
mov
jge
in
jno
hlt
sbb
pop
cld
mov
jmp
xor
push
mov
push
dec
jg
mov
adc
cmpsb
popa
stos
mov
mov
out
je
ljmp
fldl
ret
xor
add
test
xor
sbb
push
repz
mov
mov
add
add
dec
cmpsl
enter
test
push
popl
loopne
gs
sbb
shrb
loopne
ljmp
adc
cmp
fmuls
and
push
faddp
movsl
outsl
bound
xchg
out
into
adc
mov
or
sbb
andb
adc
sub
and
hlt
push
sti
xchg
mov
mov
jl
push
push
int
mov
lds
pop
sbb
addr16
xchg
jle
out
pop
xchg
fsubrl
or
lret
push
data16
aaa
cmpsl
imul
nop
mov
into
pusha
cmp
mov
sub
inc
jb
pop
lds
cmp
pop
aad
xor
mov
out
jmp
jge
push
pop
adc
mov
lcall
cmpsb
not
call
add
mov
call
gs
mov
daa
dec
cwtl
jns
ret
push
in
test
inc
mov
sbb
adc
ret
push
mov
push
jno
push
jno
and
mov
out
adcb
adc
popa
mov
cli
jne
ficoms
ljmp
xor
push
mov
xor
dec
inc
shlb
pop
cmc
negl
dec
cmp
scas
mov
xor
cmpsl
fnstcw
dec
mov
jae
xchg
dec
sarb
notb
leave
push
jne
popa
mov
dec
mov
jo
xchg
dec
dec
xchg
add
iret
repz
mov
dec
lret
lock
outsb
cld
xor
dec
enter
push
xchg
pop
les
adc
ret
arpl
mov
fisttps
fs
push
xchg
add
mov
inc
enter
ret
mov
pop
xor
and
jmp
adc
push
rclb
je
in
or
popf
push
lds
fcmovnbe
add
xor
addb
inc
mov
aas
fdivrl
lods
pop
pop
xchg
ret
pop
fsubl
inc
fmull
mov
pushf
xchg
int3
mov
inc
bound
hlt
sahf
mov
iret
lea
ljmp
not
icebp
sub
or
popf
dec
sbb
es
mov
out
push
aam
fistpl
jge
pop
xchg
push
or
andb
sbb
mov
clc
scas
xor
xchg
dec
dec
sbb
je
sub
dec
pop
xor
aad
or
jnp
fstl
negb
jo
setge
vmovss
mov
das
lods
mov
ds
aam
dec
dec
inc
mov
pop
mov
test
pop
fmulp
adc
pop
fstpt
aaa
cmpsl
or
push
lcall
pop
out
mov
andl
lods
pop
mov
loop
mov
stos
ds
inc
dec
js
scas
mov
mov
lret
xor
fistps
gs
adc
hlt
mov
insl
dec
jg
push
aam
imul
je
rcll
and
ds
subl
push
data16
cmp
push
push
nop
movsl
sbb
mov
icebp
jns
bound
out
imul
cmc
leave
bound
les
mov
jp
jae
pop
sub
jge
repnz
out
fwait
in
sahf
enter
cmpsl
mov
mov
pop
jae
add
sub
and
clc
insl
xor
hlt
enter
scas
bswap
daa
dec
lods
and
sbb
subb
sahf
lock
mov
idiv
cmp
xchg
out
scas
out
ss
cmp
push
add
stos
loope
xchg
jnp
sub
fwait
sbb
or
fldt
cmp
cmp
stos
sbb
dec
lods
jp
cmp
push
or
bound
out
and
pop
lret
or
out
cmc
inc
and
mov
adc
pop
sbb
sbb
xor
push
stos
clc
cld
ret
gs
xchg
pop
enter
pop
lcall
call
daa
xlat
pop
aaa
xchg
pop
jns
sarl
push
stc
loop
xor
out
pop
sub
iret
decb
jg
and
jle
mov
div
lea
push
hlt
sub
arpl
shlb
gs
fwait
xor
fucomi
mov
xchg
cmpsl
imul
push
mov
xor
roll
cmpsb
pop
icebp
lret
cmpb
in
xchg
and
push
add
sahf
fstp
in
lea
cli
pusha
push
loope
sub
decb
xchg
or
lods
stos
push
cwtl
imul
fs
fxtract
cmp
sti
out
out
fsubrs
add
mov
xorl
pop
enter
adc
pop
mov
mov
stc
mov
sub
loop
mov
xor
insb
mov
dec
iret
jb
xor
cmp
jno
sub
sarl
push
inc
aad
pop
lret
xor
add
inc
movsb
sti
aas
and
into
dec
lds
adc
arpl
loop
cmpsb
ss
clc
lds
or
ret
cs
jge
jl
in
lock
testb
pop
mov
pop
or
pop
xor
jo
sub
movsl
fwait
push
dec
jbe
sbb
dec
jle
mov
jge
inc
mov
outsb
data16
sub
inc
das
std
iretw
mov
cmp
insb
in
iret
fs
pop
mov
hlt
jp
inc
xchg
push
lahf
sbb
div
insb
jmp
loop
dec
loopne
pop
push
xor
push
push
jnp
pop
mov
push
out
imul
adc
inc
xchg
cmp
adc
pop
ds
pop
and
inc
mov
mov
pop
mov
ljmp
decb
push
das
adcl
jg
sahf
lcall
dec
sti
pop
ljmp
in
lock
enter
sub
leave
sub
cld
jl
cmp
jns
test
movsl
dec
xchg
jns
cmp
movsb
repz
icebp
pop
mov
les
mov
stc
pop
pop
push
sub
call
outsl
push
call
pushf
sti
xor
pop
xchg
jae
dec
and
xorps
aaa
sub
in
enter
pop
out
ds
mov
daa
push
les
lahf
rol
scas
fimull
mov
call
sbb
stos
mov
scas
loop
sbb
inc
gs
cmp
jae
cmp
scas
add
cs
adc
cmpsl
rolb
jno
push
inc
mov
mov
cmp
cmpsb
test
dec
popf
fadds
pushf
xchg
sti
add
arpl
mov
jle
scas
cli
enter
sub
xor
xchg
movsb
jle
sahf
fdivs
mov
test
pop
sbb
stos
nop
aas
fildll
scas
mov
mov
fs
cmc
ja
repz
xchg
in
dec
or
xor
pop
in
adc
xchg
adc
cwtl
imul
jnp
jne
cs
mov
lcall
sub
andb
sub
sbb
rep
test
outsl
test
sub
aaa
mov
cmp
xor
addr16
cmc
sti
movsl
sahf
test
sub
scas
xchg
out
xchg
jle
aad
mov
pop
imul
inc
pop
jnp
and
stc
lret
out
es
sbb
lret
xor
or
xor
inc
test
push
push
adc
jno
pop
stc
rcll
mov
pop
hlt
into
cmp
push
lods
into
sub
dec
xor
dec
xor
or
jl
ret
pop
pushaw
inc
sbb
scas
sub
add
mov
push
outsl
out
lahf
pop
mov
xor
pusha
repz
movb
pop
ret
mov
imul
les
lret
ret
fisttpll
pop
inc
fsubrp
jne
sbb
repz
inc
mov
jl
cmp
inc
inc
cmp
jo
movsl
mov
dec
shll
xchg
jecxz
repnz
addr16
push
jle
bound
xor
icebp
dec
xor
out
mov
lret
inc
jno
int
xor
jge
addb
push
xor
clc
push
testb
mov
mov
inc
dec
test
cmp
mov
shl
adc
decl
adc
xlat
pop
jo
in
mov
arpl
jns
std
movsl
inc
negb
pop
pop
dec
lods
adc
cli
ret
nop
jb
xor
pop
fstpt
test
aad
sub
imul
or
xchg
sub
f2xm1
sti
inc
jmp
cmp
cmp
pushf
mov
mov
or
in
iret
xchg
mov
js
mov
add
add
inc
adcb
sub
sbb
jb
popf
mov
clc
adc
mov
arpl
and
sub
mov
push
mov
insl
rdtsc
and
cmp
lods
xor
lock
fsubrp
sbb
outsb
xchg
stos
lds
mov
movsb
lods
jle
mov
mov
xchg
imul
imul
mov
loopne
pop
xchg
dec
sub
sub
pop
sub
push
out
sub
sbb
out
icebp
mov
xchg
push
xor
insl
sub
aam
pop
out
enter
mov
ror
push
jge
mov
sub
loope
sub
push
ficompl
mov
mov
or
push
and
pushf
testl
sti
in
inc
enter
dec
jbe
cmpsb
fdivrs
gs
out
sub
xlat
add
aas
mov
adcb
clc
dec
adc
fwait
stos
stos
jmp
idivl
jb
into
out
mov
push
xchg
stos
je
ret
push
sahf
inc
and
mov
and
push
jns
clc
arpl
xchg
and
fstl
cmpsb
sti
mov
icebp
xor
cmp
clc
fcmovu
leave
adc
push
dec
movsl
sbb
pop
mov
in
les
test
mov
push
call
imul
jecxz
push
jle
cmp
cli
pop
cs
movsl
daa
sbb
or
pop
mov
adc
cmp
out
sbb
and
push
sub
mov
adc
inc
mov
jecxz
imul
mov
jge
cmc
cltd
in
stos
jno
pop
lret
lods
mov
jle
sbb
xor
aad
adc
mov
cmp
sbbl
cli
pushl
mov
cmp
cltd
cltd
sarb
inc
ds
je
xor
jo
aas
pop
std
popf
xor
imul
add
sbb
rorl
cmp
dec
dec
jmp
adc
mov
outsl
stos
mov
cmp
in
out
jle
lods
das
call
sub
rcr
jge
and
stos
mov
mov
xor
mov
pop
mov
data16
jmp
adc
jne
outsb
out
add
sbb
std
inc
inc
cld
mov
cmpsb
adc
inc
mov
decb
movsb
test
mov
jmp
mov
pop
in
sahf
orl
movsb
xor
out
fisubl
lea
sbb
and
mov
outsb
xchg
nop
or
fsubr
xor
mov
enter
push
mov
test
cmp
mov
test
xor
arpl
xchg
pop
fbstp
xchg
fldt
jl
inc
lods
dec
xor
push
xor
repnz
lahf
xlat
pop
adc
nop
xor
jge
lods
aam
push
scas
xor
sbb
inc
data16
popf
fptan
jge
xchg
push
faddl
cs
dec
loopne
stos
jecxz
adc
and
xor
pusha
mov
into
jne
jbe
gs
sahf
mov
sub
enter
iret
sbb
aaa
mov
sub
dec
push
push
push
je
push
push
add
pop
jge
out
rcr
inc
test
mov
scas
cld
sbb
sub
push
adc
mov
xchg
dec
push
js
out
leave
ret
pop
sbb
xor
inc
xor
popf
leave
sarb
add
sahf
andl
enter
test
repnz
in
orb
or
push
sti
in
push
repnz
push
dec
mov
adc
cmc
dec
jg
sbb
inc
aas
fldl
xchg
inc
or
lret
fildll
sar
enter
ds
dec
adc
pop
addr16
icebp
inc
sub
rcrl
filds
arpl
lds
push
cmpsl
cmpsb
outsb
pushf
add
imull
mov
enter
aaa
arpl
jmp
rcl
add
jmp
jl
sub
popa
sub
xchg
pop
dec
sub
addr16
in
inc
stos
insl
mov
test
adc
mov
jnp
je
xor
aad
mov
xchg
in
aad
adc
mov
ja
jp
lock
mov
sti
xchg
lea
mov
mov
mov
testl
dec
idivl
outsb
int3
mov
add
lret
pop
scas
jbe
loop
pushf
mov
outsl
push
mov
in
scas
mov
inc
cmpsb
and
repz
dec
scas
pop
aad
mov
outsl
inc
cwtl
enter
xor
sub
adc
gs
adc
and
lds
xchg
cwtl
mov
pop
inc
pop
ficoms
sahf
dec
jno
ret
cmpsl
adc
sbb
jb
mov
popa
lret
in
add
inc
fldenv
insl
xchg
xor
pop
or
and
xor
and
pop
dec
pop
mov
lods
sarb
inc
clc
lods
pop
fists
ljmp
rcrl
mov
daa
cmp
adc
dec
psubusb
es
push
or
pushf
fistl
xor
clc
stc
jl,pt
fcmovnbe
mov
pusha
sbb
out
inc
popa
add
sbb
lret
mov
mov
addl
inc
mov
ss
push
fsubl
das
pop
into
ss
jne
dec
jo
nop
pusha
mov
pop
stos
cmp
shrl
fmuls
sbb
les
mov
repz
int
nop
cld
add
jg
push
decl
inc
dec
mov
call
repnz
add
lds
push
cwtl
push
lret
lret
sub
jnp
movsb
add
mov
jb
inc
mov
xchg
arpl
push
clc
add
icebp
sub
loopne
add
inc
inc
imulb
jnp
push
clc
push
adc
in
push
push
stos
jecxz
dec
pop
test
and
xor
xchg
jno
cmp
cmovg
push
sub
sub
mov
adc
fs
or
imul
jb
cld
jnp
sti
jmp
sbb
sub
xor
das
loop
out
fs
jae
sub
dec
push
jmp
out
loope
scas
imul
inc
int
jns
int3
dec
pop
lds
enter
sahf
pop
dec
neg
push
and
cmp
mov
enter
sar
mov
xchg
cli
out
mov
mov
pop
fs
inc
and
jg
addr16
in
adcl
dec
jp
out
cld
sbb
movsl
hlt
xor
add
jno
sahf
xchg
rdpmc
push
add
fwait
xor
mov
mov
pusha
pushf
in
fs
jmp
xor
xchg
cld
mov
mov
or
loope
mov
fidivl
dec
shlb
adc
and
arpl
jle
ljmp
mov
jge
inc
cs
loopw
mov
aad
cli
in
ret
loop
out
insb
sub
js
cmp
fldenv
and
fs
inc
movsl
pop
cmp
push
cmpsb
push
pop
aas
pop
loopne
out
call
lcall
inc
std
pop
testl
jg
xchg
out
sub
mov
lret
mov
fcomps
ss
adc
fistps
test
pop
push
sub
cmp
sarb
lahf
leave
cmp
xchg
add
mov
xchg
mov
sbb
cmp
arpl
mov
inc
loop
push
push
push
push
jle
mov
nop
adc
mov
jl
sbb
sub
pop
push
cmp
insb
and
aaa
subl
stos
sti
jp
fcompl
jl
lods
pop
xchg
push
cmpl
xlat
inc
ret
dec
fdivr
sbb
jbe
enter
jae
or
loop
adc
push
cwtl
test
sub
push
test
fld
cli
dec
push
or
scas
dec
mov
push
inc
cmc
fnsave
enter
pop
jl
or
mov
xor
mov
sub
push
fildl
xchg
mov
jno
ja
cmc
push
sub
sbb
add
sarl
imul
mov
in
xor
test
inc
repnz
std
loope
das
inc
xor
fsubl
stc
adc
scas
dec
mov
jo
mov
in
add
jp
mov
and
jle
inc
cmp
sbb
lret
xchg
dec
jno
ljmp
pusha
cmpsl
and
pop
jbe
jne
dec
out
lcall
mov
inc
stc
jecxz
pop
jge
inc
push
imul
sbb
dec
roll
addr16
scas
nop
jno
sbb
out
ret
in
xchg
iret
ret
divl
js
daa
fwait
pop
mov
sbb
outsb
cwtl
push
pop
pop
loopne
pop
lock
push
push
adcl
movsb
mov
enter
inc
test
mov
add
pop
xor
push
xor
lahf
jae
or
aam
mov
pop
push
in
test
out
fcoml
out
in
aaa
icebp
lret
inc
sbb
mov
mov
add
fwait
add
inc
ret
aas
in
push
repz
loope
ja
mov
jb
imul
idivl
insl
dec
sbb
mov
out
aas
mov
sub
outsl
sub
loopne
push
adc
cmp
loopne
sub
rcl
rorl
test
sub
ja
mov
jl
pusha
stos
sbb
jl
loop
loope
push
push
pop
test
lret
inc
insl
xor
push
sub
mov
lock
jb
mov
mov
push
cmpsl
loopne
add
push
jle
push
mov
push
xchg
into
push
ret
cmp
sub
pusha
pop
cwtl
mov
notl
jecxz
xchg
pop
test
addr16
jge
outsb
dec
aad
stos
xor
test
mov
cmpsb
cwtl
pop
and
mov
adc
pop
bnd
dec
pop
xchg
cmp
mov
in
pop
sbb
jl
cltd
sbb
pop
gs
dec
iret
das
lods
imul
and
cmp
pop
xor
lods
cmp
sub
or
jno
pop
pop
sahf
jl
xchg
test
pushf
mov
sub
addr16
sub
rolb
push
fnstenv
fadd
inc
jne
mov
and
xchg
bound
jecxz
in
jmp
jp
outsb
in
out
mov
cmp
lcall
xor
or
mov
pushf
mov
andb
lds
mov
clc
push
add
jle
xor
aaa
pop
push
dec
mov
ljmp
add
and
or
pop
sbb
into
inc
and
dec
scas
jns
push
adc
jne
stc
lret
mov
xor
call
inc
clc
mov
loope
arpl
lds
pop
int3
inc
repz
push
pop
scas
dec
pop
pop
push
adc
popa
mov
mov
and
popf
imul
sub
mov
or
cld
test
mov
mov
loop
sub
and
aam
cmp
sbb
or
jnp
cmc
lods
rol
cmp
fiaddl
shlb
xchg
imul
push
test
loope
shll
add
stos
lret
sub
mov
loope
pop
cmp
out
popf
shrb
sub
push
out
pop
cld
lea
adc
add
movsl
lea
sahf
mov
not
xor
push
sbb
lods
jge
push
je
addl
add
mov
insb
outsl
add
jge
insl
mov
insb
sbb
enter
pop
inc
adc
xchg
sub
mov
push
xchg
pop
cs
xchg
in
pop
sbb
fcoms
ret
lret
imul
sbb
lahf
cmpb
sahf
add
aam
mov
mov
mov
pop
jo
ljmp
push
mov
jge
cmp
imul
sbb
xchg
fbld
test
xor
cld
pop
loopne
adc
loopne
lds
mov
sub
lret
imul
ret
mov
lahf
mov
xchg
pop
inc
xchg
into
lea
lods
fidivs
rcr
ja
or
or
ds
int3
in
push
pop
lea
pusha
loope
faddl
push
dec
in
cld
loope
and
shl
lods
in
std
mov
push
lret
sahf
repz
jae
enter
fbld
fdivrs
pop
roll
repz
data16
aaa
mov
xor
xor
cmp
inc
imulb
out
int3
jg
pusha
dec
add
xor
loopne
aaa
cmp
pop
sub
fsubl
cmpb
sub
mov
adc
xchg
in
add
pop
test
xchg
test
sub
out
inc
dec
icebp
xor
and
iret
enter
mov
and
cmp
jp
cmpl
mov
cmp
xor
or
adc
jl
gs
sbb
movsb
subl
and
mov
cmp
jne
cmp
faddl
push
cmp
int3
cwtl
add
loope
dec
mov
andl
push
or
test
adcl
test
dec
pop
jl
fwait
cs
loope
nop
jnp
icebp
les
inc
mov
popa
cmp
inc
jmp
pop
inc
into
add
je
sub
repnz
xor
andb
xorb
pop
and
xor
repz
test
mov
mov
out
xor
pop
cmpsl
imul
popa
dec
cli
neg
push
xchg
inc
or
mov
test
jle
push
das
dec
insl
negb
push
mov
push
fidivrl
pop
lods
ds
cmp
pushf
test
and
hlt
sub
jno
in
addr16
push
jne
xor
js
insl
icebp
insb
jne
lds
fwait
mov
push
pop
fisubs
xlat
movsb
or
or
mov
cmpsb
and
in
pop
and
sti
push
dec
data16
mov
ja
test
xor
mov
xchg
in
mov
xchg
aam
mov
cmp
andl
daa
stc
es
sahf
jp
icebp
sbb
jno
das
insl
mov
sub
testl
xor
outsb
into
push
orl
push
hlt
xchg
xor
hlt
in
sub
sbb
or
push
xchg
xchg
adc
js
push
test
fnstcw
in
je
adc
shl
xchg
nop
js
pop
xchg
lahf
adc
rolb
addl
and
mov
fidivs
sbb
sbb
push
icebp
xorb
mov
sbb
and
add
sbb
faddl
mov
daa
push
dec
fsincos
popf
mov
aas
es
xchg
mov
stos
pop
sub
popa
mov
pop
sbb
jno
adcl
inc
xchg
int
inc
inc
lahf
int
and
cmp
xchg
sbb
pushf
movsl
jmp
xchg
push
fiaddl
xchg
xor
in
cmp
add
js
sbb
sub
icebp
mov
pop
fcmovne
xor
jl
out
movzbl
loopne
push
jb
or
push
out
mov
movsl
sub
xchg
adcb
jo
jno
in
fwait
inc
add
out
shl
mov
mov
sbb
dec
incb
ss
js
stos
iret
leave
add
testl
mov
jns
movsb
xchg
add
int3
and
enter
sbb
xor
push
inc
hlt
scas
daa
cmp
push
out
leave
repnz
lds
or
es
idivb
dec
pop
je
cmp
push
pop
mov
push
aam
ja
iret
sahf
xor
jmp
pop
out
inc
shr
jmp
mov
roll
or
std
and
push
out
sti
mov
loopne
xchg
mov
mov
or
mov
insl
pop
mov
jle
test
repnz
shl
push
cli
push
scas
addb
mov
xor
les
fcmovnb
sti
sarb
mov
lahf
in
cmp
roll
out
repnz
pop
or
into
ret
mov
dec
loope
fistpll
add
adc
repz
out
lret
iret
insl
jo
aam
lret
xchg
push
cmc
cmpsl
add
xchg
xor
pcmpgtb
jg
pop
xchg
into
test
pop
sub
mov
popf
ftst
dec
movsb
add
cmpsl
in
jge
mov
icebp
out
movsl
jo
adc
idivb
xchg
sub
outsl
add
fcoml
cwtl
in
adc
pop
in
mov
iret
shrl
add
or
loop
out
fimuls
dec
das
jle
repnz
sub
add
dec
jns
sub
inc
fcomip
adc
fisubrs
addb
xchg
ret
xchg
add
mov
adc
push
addr16
dec
stc
testb
or
cld
xchg
popf
ret
xchg
mov
dec
cmp
and
stos
mov
enter
in
cmp
jmp
or
lds
sub
jo
call
clc
add
scas
sbb
lea
mov
add
pop
jne
and
ja
cmpsb
inc
cs
dec
xor
outsl
xor
xchg
jbe
movsb
call
out
mov
rolb
and
xlat
sub
push
hlt
test
mov
lret
jmp
cmc
cmpsl
pop
clc
inc
je
out
or
popa
inc
sahf
cltd
adc
bound
xchg
mov
jle
jnp
sbb
xchg
dec
aam
test
in
inc
adc
pop
dec
je
or
cwtl
jb
fwait
hlt
adc
push
in
cmp
xchg
cli
in
stc
call
adcl
cmp
setns
loopne
ss
and
mov
enter
dec
leave
adcb
mov
aas
scas
or
push
pop
and
je
rcll
outsb
ja
in
xchg
xchg
inc
sbb
int3
fbld
std
dec
mov
iret
fstl
insb
mov
lods
mov
dec
test
dec
xchg
cmp
lods
arpl
xor
mov
mov
fmul
add
inc
pop
insl
mov
inc
xchg
mov
rcll
jecxz
push
es
mov
ret
cmp
ret
es
push
cmpsl
sbb
sub
mov
mov
mulb
bound
xchg
les
gs
es
fdiv
daa
push
mov
pop
adc
jmp
mov
or
inc
mov
xchg
xchg
cmp
rcr
mov
test
cmpsb
adc
mov
and
in
shrl
cbtw
dec
mov
out
loope
lods
mov
xor
mov
jo
pop
movsb
pop
out
loopnew
stos
and
sbbl
into
mov
inc
cmp
or
mov
xor
shrl
int
jmp
stos
out
dec
fcmovnb
cmp
push
pop
pop
inc
clc
les
xor
mov
and
popf
sub
fldl
lea
add
aam
stos
add
cli
fcomps
jge
cwtl
rclb
aad
fs
movsl
mov
jmp
pmaxub
dec
test
into
mov
pushf
sub
clc
sub
xor
mov
out
popa
das
stos
pop
sbb
jecxz
sbb
scas
int
jb
cli
mov
mov
mov
repnz
cmp
push
stc
movsl
dec
inc
es
push
xor
lods
out
icebp
in
mov
inc
imul
daa
test
stc
das
xor
fs
mov
in
dec
imul
adc
inc
adc
sub
sbb
fldl
ftst
inc
out
inc
lcall
enter
mov
inc
arpl
lret
inc
nop
ljmp
xchg
mov
mul
push
cld
loope
outsl
in
dec
sbb
ja
imul
lock
fldt
je
addr16
enter
sub
lret
push
cld
sbb
lahf
repnz
iret
mov
inc
push
into
insb
mov
jbe
mov
lret
imull
cmp
push
lds
std
push
stos
sub
adc
dec
hlt
fiaddl
test
test
jne
adc
aas
xchg
orl
in
cli
jge
sti
iret
addb
pop
or
adc
adc
add
gs
movsl
dec
sbb
xchg
test
cmpsb
movsb
pop
pop
mov
pop
mov
cmp
jne
mov
mov
add
out
sbb
mov
dec
cmpsb
shr
and
stc
subb
cmp
insb
imul
and
cmp
popf
enter
fwait
cmp
shlb
push
into
jmp
push
stc
imul
dec
lea
shlb
xchg
loopne
and
cli
stos
sub
pop
inc
adcb
cltd
add
rorl
movsb
out
or
loop
pop
cmp
loop
sbb
mov
movsb
pushf
leave
push
push
in
ret
arpl
out
xchg
lahf
jmp
insb
cmp
pop
rcll
xchg
arpl
or
fistl
xchg
std
jp
imul
or
mov
and
aas
dec
sbb
cmpsb
pop
mov
push
lret
mov
test
jl
inc
dec
jnp
add
mov
pop
flds
shll
ljmp
in
incl
pusha
movsl
inc
test
mov
xchg
and
mov
mov
daa
das
movsl
insb
pop
mov
js
popa
jae
sahf
xor
pop
sbb
pop
push
insb
pop
sbb
rorb
movsb
add
lcall
out
pop
inc
push
mov
sahf
in
cmc
mov
and
jo
in
jnp
jnp
out
in
lods
push
mov
mov
push
cld
xchg
mov
dec
mov
loopne
xor
cmpsb
mov
imul
loopne
fs
mov
mov
out
repnz
sti
xor
mov
insl
mov
mov
mov
rcrb
adc
jl
insl
pushf
lock
rep
cmpsl
pop
or
xchg
jle
clc
adcb
xchg
mov
push
dec
fdivs
and
jmp
fildll
or
jp
cmp
push
subb
insb
testl
add
out
fistl
in
push
testl
sub
dec
sahf
sti
jo
sub
cmp
lcall
popa
scas
mov
mov
ds
leave
or
and
inc
adc
cmp
aam
mov
push
or
icebp
xchg
push
mov
mov
pop
adc
pop
and
dec
and
adc
inc
aaa
insl
inc
push
jle
movsl
or
xchg
and
dec
outsb
fistpll
aam
arpl
jmp
cmp
xor
insl
bsr
cmp
mov
push
push
or
dec
repz
popf
push
or
sub
adc
jle
int
mov
pushf
mov
insl
sbb
scas
or
mov
clc
out
mov
pop
jmp
cmpsl
sti
push
or
mov
xor
xchg
mov
gs
jecxz
orb
fdivrs
addr16
or
daa
outsb
mov
pop
cli
xchg
xchg
mov
xchg
cmp
push
das
pop
mov
xor
ret
sti
mov
les
or
mov
int3
lods
jl
xor
push
enter
out
fucomp
jo
sbb
and
inc
xor
mov
fldl
xor
sarl
popa
sbb
xchg
test
push
out
cmp
addr16
loopne
or
and
sub
pop
push
jge
in
sbb
fcmove
clc
outsl
outsl
in
push
xchg
js
jnp
sub
lock
stos
into
sbb
int3
arpl
insb
sbbl
repz
jecxz
outsl
arpl
lret
jo
push
pcmpeqd
out
jg
xor
lock
enter
cmpsl
push
add
jmp
je
mov
xchg
in
mov
addr16
sbb
lea
ffreep
ret
jo
iret
jo
fstpl
xlat
cmp
adc
xor
push
imul
xor
xlat
pop
xor
jecxz
add
sub
adc
mov
push
mov
scas
fists
push
pop
jns
push
or
imulb
lods
movsb
aas
aaa
jp
fcmovnu
std
pop
mov
fucomi
jmp
cwtl
adc
bnd
inc
add
adc
xchg
jmp
mov
mov
pop
pop
ds
jle
inc
add
mov
push
popa
in
cmp
and
jle
imul
dec
stc
arpl
mov
sub
ret
adc
loop
xor
int3
loop
adc
iret
adc
xor
mov
leave
imul
jge
jmp
dec
lahf
adc
lock
cmp
imul
fs
push
cmp
mov
mov
pop
mov
add
cmp
test
and
and
repnz
push
dec
jmp
jmp
sbb
std
cmc
daa
mov
pop
sti
popf
and
or
les
adc
clc
sbb
sbb
mov
mov
or
or
sub
rol
mov
sti
clc
cmp
pusha
xchg
gs
pop
cli
pop
aaa
mov
mov
dec
test
shr
push
xchg
lea
loope
pop
imul
stos
repnz
jno
dec
dec
fiadds
inc
rorb
xchg
lret
shrb
xchg
mov
dec
shlb
jb
add
sub
ficoml
or
mov
outsl
mov
pushf
push
out
test
xchg
or
call
js
clc
loop
push
push
in
shlb
lds
mov
add
movsb
repz
jo
data16
xchg
imul
cli
mov
arpl
mov
mov
pusha
stc
sub
lret
roll
es
cwtl
ret
push
jmp
cld
and
pop
mov
pop
add
sbb
xchg
enter
subb
testl
outsb
divl
orl
pop
xchg
jp
xchg
jmp
fbld
pop
cwtl
cli
call
lock
pop
xorl
add
adc
jp
xor
adc
cmp
sbb
xchg
sbb
loope
adc
and
fdivrl
clc
lret
dec
adc
lret
mov
outsl
or
fdivrl
xchg
lea
cld
rorl
push
jmp
dec
xor
adc
mov
adc
jl
cmc
inc
dec
and
adc
cmp
xchg
rorl
mov
xor
adc
mov
inc
xor
lret
adc
xchg
aas
sub
jmp
dec
cmpsl
dec
mov
push
stc
out
jmp
pushf
mov
mov
mov
pop
test
icebp
lret
scas
popa
fs
pop
rcll
push
pusha
decb
mov
aaa
push
ss
fcmove
mov
stc
int
pop
mov
push
mov
idiv
jae
cli
icebp
mov
repnz
je
add
mov
and
and
add
push
adc
movnti
loop
xchg
lret
cmp
xchg
ds
cwtl
or
jbe
push
das
movsb
adc
mov
jge
push
jbe
pop
fldt
rcr
lods
push
push
test
orl
cmp
xor
or
fisubs
or
jecxz
and
push
clc
dec
dec
push
ret
out
dec
cmp
push
into
sahf
clc
int3
adc
sub
aam
popa
fldl
jno
in
pop
loop
sub
dec
add
push
pusha
aaa
je
filds
addl
inc
push
fmuls
add
orb
add
in
push
popf
pop
outsl
lret
fs
cmpsb
popf
scas
pop
cmpsb
jb
xchg
or
pop
call
imul
push
decb
push
sub
or
jb
pop
dec
fsts
movsl
sbb
movsb
adc
cmpsb
ss
test
cmp
imul
cltd
mov
and
dec
aam
or
sub
stos
lcall
in
arpl
je
xor
and
js
xchg
sub
icebp
dec
ds
cmp
inc
or
mov
pop
jns
fld1
rclb
loop
imul
mov
sarl
xchg
gs
mov
outsl
dec
roll
mov
shrb
mov
xor
jmp
rcrl
movsb
daa
subb
movsb
rorb
adc
push
pop
sub
adc
mov
movsl
sub
mov
stos
jle
or
stc
pop
push
bound
aaa
cmpb
inc
lods
sbb
xlat
cmpsb
jae
mov
push
or
add
dec
mov
negb
sbb
or
sbb
pop
jge
inc
pop
stos
lcall
shrb
mov
jg
imul
fisubs
sbb
mov
fdiv
mov
arpl
pop
xlat
pop
movsl
adc
scas
dec
inc
sarl
mov
lods
mov
sub
pop
aas
lret
sbb
imul
andl
inc
hlt
fcoml
sahf
addr16
jle
mov
test
repz
pop
fstpt
pop
xchg
xchg
cmp
inc
adc
xchg
push
andb
movsb
and
pop
iret
jbe
pusha
arpl
mov
test
sbb
xor
mov
test
or
sub
ret
hlt
add
fwait
push
insb
push
es
lret
pushf
jo
pusha
fidivl
jecxz
cmp
stos
int3
popf
shrl
add
jmp
pop
pop
xlat
push
xchg
je
arpl
xchg
mov
jle
mov
ret
pop
adc
mov
or
fwait
sub
les
xchg
xor
push
int3
push
dec
test
mov
xchg
lcall
cs
cld
or
sub
and
pop
inc
sahf
mov
test
push
stc
fldl
test
adc
je
and
push
lock
ds
inc
push
in
aad
enter
xchg
and
hlt
jmp
stos
fadds
jb
inc
addr16
bound
shrl
cmp
push
mov
xor
and
push
or
or
scas
xchg
insb
and
mov
push
push
push
mov
adc
jns
push
jb
add
jo
addr16
pop
hlt
test
push
in
cmpsl
pop
xchg
je
adc
pop
pop
test
lret
cs
push
scas
in
int3
int
jp
mov
sbb
nop
ss
divl
xchg
daa
movb
dec
pop
mov
dec
les
ret
popf
pop
xchg
xor
jg
stc
inc
sahf
data16
sbb
outsb
negb
imul
mov
cs
and
ret
lret
xlat
fidivrs
popa
popa
fstps
aas
ret
fs
push
mov
imul
fsubp
cmp
and
mov
xor
pop
dec
jno
and
add
mov
shrl
into
push
cmp
adc
lods
xor
dec
in
inc
pop
out
pop
dec
mov
adc
cmp
mov
sbb
outsl
popf
jo
mov
cmc
lahf
incb
and
cmp
dec
adc
and
jg
sub
cmp
mov
shl
stc
leavew
lock
sub
shr
pop
gs
filds
leave
mov
mov
mov
mov
dec
cld
inc
push
cmpsb
rcrl
add
divl
inc
test
imul
leave
mov
push
dec
lret
in
mov
ds
inc
lods
jle
andl
push
shll
mov
leave
lret
loop
mov
addl
pop
out
or
xor
push
and
fs
push
jecxz
cmpsl
push
orl
ss
dec
sbb
out
xlat
push
cld
movsb
adc
inc
insl
imul
outsb
idivb
sbb
mov
add
mov
testb
clc
call
in
js
shrl
sbb
pop
daa
sbb
mov
push
test
inc
test
mov
rol
mov
stos
cmp
in
test
fldt
pop
push
push
mov
shrb
fdivrl
dec
insl
mov
enter
hlt
xor
pushf
nop
iret
jns
sarl
add
std
fcoml
jle
ja
push
cmp
and
push
fwait
dec
aad
sub
ret
jbe
xchg
popf
aas
and
js
xlat
adc
aaa
pop
xlat
push
iret
sbb
fldt
or
mull
add
and
scas
push
sahf
push
push
sbb
mov
sub
lods
shlb
xlat
pop
cmp
hlt
int3
add
jle
iret
jmp
sub
pop
adc
and
fyl2xp1
pop
in
mov
imul
lea
push
lods
iret
lods
ljmp
mov
push
push
xchg
repnz
inc
or
nop
mov
xor
cmc
nop
pop
cmc
inc
sub
loope
adc
std
cld
daa
out
lahf
xor
inc
lds
cmpsb
inc
rcrl
movsl
leave
add
lods
les
lea
jbe
mov
cwtl
icebp
outsl
sarb
test
or
xchg
xchg
jmp
and
and
xchg
sbb
adc
cmpsl
pop
sbb
cmp
negb
ss
sbb
aas
inc
cltd
rclb
outsb
test
push
push
and
mov
outsb
cmp
push
jno
xor
jbe
in
inc
or
insl
add
add
pop
cmpsb
xor
jns
je
cmpsl
inc
lea
cmp
rcrl
jae
sbb
aad
fldl
mov
sbb
dec
xchg
insb
out
sahf
aaa
scas
mov
mov
out
adc
sahf
cmp
add
cmpsb
test
daa
add
mov
loopne
and
inc
sti
or
js
mov
pop
cltd
cld
out
hlt
add
jo
jg
filds
push
sbb
inc
repz
es
mov
mov
mov
mov
loope
out
pop
mov
mov
pop
dec
sub
popa
movsb
stc
mov
jns
jne
fcmovbe
aaa
in
int3
add
incl
in
jmp
int3
xlat
pop
mov
add
insb
xor
sahf
std
mov
inc
jns
aas
leave
add
xor
insl
mov
sub
sub
loopne
sub
push
or
xorb
dec
and
outsl
repz
mov
outsb
pop
rcrb
add
dec
lahf
pop
sbb
mov
xchg
cltd
jg
push
out
dec
hlt
dec
sub
jbe
sub
dec
sub
rorl
and
push
in
das
pop
aaa
clc
je
pop
jle
cmp
scas
leave
mov
test
dec
into
insl
jp
les
xchg
inc
jle
jb
push
sbb
jmp
outsl
dec
clc
push
cmp
neg
push
int
aaa
out
into
fists
cltd
jne
cltd
test
ja
ret
adc
mov
in
jmp
or
or
push
cmpsl
pop
pushf
rorl
repz
ror
leave
insb
push
lahf
sbb
lock
adc
dec
into
std
jns
push
xchg
lret
xor
pop
sub
movsb
sbb
xchg
add
jns
notb
lock
pop
jp
lods
and
xchg
mov
mov
sbb
sbb
aad
adc
fcompl
ds
out
mov
mov
xchg
mov
ljmp
jb
xlat
sbb
daa
pop
mov
mov
or
and
test
pop
std
mov
mov
and
push
mov
es
ret
mov
test
xor
push
leave
push
add
fcoml
or
mov
jae
sub
fidivl
arpl
repnz
mov
idivl
xchg
lret
iret
sub
mov
andl
out
push
popl
xchg
fst
leave
pop
cs
add
pop
cmp
loope
or
mov
jb
stos
sub
or
mov
gs
std
inc
or
fwait
mov
mov
fnstenv
and
mov
xchg
ljmp
cmp
test
sub
icebp
rolb
int3
dec
mov
jge
andl
adc
aam
enter
sbb
mov
inc
shrl
or
inc
cmp
xchg
add
adcb
or
daa
and
addl
push
rcll
js
hlt
push
clc
inc
xor
or
clc
nop
jle
rcr
and
sbb
xchg
out
cmp
testb
in
or
pop
pusha
push
or
xlat
loope
mov
mov
xor
inc
out
pop
mov
test
mov
push
fidivs
int3
fidivrs
jbe
dec
iret
inc
movl
xor
xor
cmpsl
dec
push
sbb
std
push
adc
popa
icebp
shrb
push
sbb
je
lret
jmp
in
lods
mov
jg
or
in
out
dec
inc
sbb
adc
add
sub
dec
dec
ret
xchg
leave
and
out
push
xor
fs
sub
scas
fistl
inc
outsb
imul
lret
fdivs
neg
fnstsw
inc
sub
push
stc
xorl
dec
jecxz
or
add
rcll
cmp
repz
leave
mov
lds
jnp
sbb
or
in
test
inc
lods
aad
push
push
clc
rorb
mov
ja
dec
push
mov
mov
scas
test
sbb
sub
mov
adc
pop
mov
or
add
or
repnz
xchg
pusha
test
and
sbb
aam
and
rcl
push
mov
cmp
dec
in
insl
xor
in
xor
inc
jb
or
sbb
adc
cmc
inc
xor
jl
out
stos
aas
cmc
push
icebp
cmc
rcr
loope
adcb
mov
xchg
add
xor
lods
jns
cmp
xchg
and
aas
cmp
cs
jl
and
jnp
add
iret
out
hlt
insb
pop
scas
jbe
iret
xchg
scas
cwtl
pop
pop
jae
dec
jmp
pop
jb
sub
test
stc
lret
mov
or
sub
mov
add
xchg
xor
mov
popf
sbb
add
lods
xor
ss
test
scas
lea
dec
inc
xor
into
dec
nop
sub
jp
xlat
jns
pop
jl
mov
xchg
lds
sub
adc
xchg
pop
popl
mov
ljmp
and
push
or
outsl
and
cwtl
add
push
mov
jae
xor
insl
lcall
push
in
sub
cwtl
xchg
out
sahf
xchg
push
test
negb
mov
push
sbb
adc
call
jge
lret
imul
out
orl
jne
jecxz
adc
cmp
xorb
aad
jecxz
push
push
call
popa
mov
jmp
int
sbb
inc
mov
sbb
sub
sbb
icebp
xchg
sarl
push
out
inc
inc
sbb
fisubl
call
out
pop
xchg
clc
add
mov
aad
dec
ljmp
xchg
dec
push
notb
fs
movsb
push
sub
addb
xchg
add
xor
mov
mov
pop
repz
into
or
dec
jns
xchg
dec
cmp
mov
cmp
popa
sahf
xor
and
xchg
pop
jo
fnstsw
xor
jp
ja
jecxz
push
lret
inc
aad
mov
xchg
mov
dec
negb
int3
push
adc
jle
negb
sbb
mov
adc
cmp
fcompl
out
mov
mov
add
mov
mov
cmp
sub
mov
loope
fildll
pop
nop
jae
cmp
jo
daa
adc
mov
dec
adc
imul
cmp
add
cli
mov
push
test
and
or
mov
inc
mov
sub
xchg
dec
push
stos
adc
ret
xchg
out
mov
stos
pop
ljmp
mov
and
mov
sbb
push
jno
test
xlat
js
fildl
mov
push
rcr
imul
xor
and
push
mov
dec
inc
movl
fstl
push
adc
bound
xor
lahf
xor
addr16
es
jle
cmp
pop
sti
mov
push
mov
aas
scas
lahf
fcmovbe
or
into
movsb
enterw
adc
xchg
dec
mov
adc
add
push
and
pop
fdivs
test
arpl
ss
cld
mov
cmp
cmp
lret
sarl
imul
lods
clc
inc
inc
inc
add
push
loope
xchg
sti
scas
cmp
or
jmp
es
add
cltd
xor
and
mov
fcomps
adc
sbb
in
not
pop
xchg
ret
or
es
imul
sub
push
cli
cli
xchg
imul
loopne
subl
lret
xlat
fnsave
movsl
pop
insl
in
imul
mov
shlb
fbld
dec
ja
ds
fadds
pop
bound
sbb
call
push
mov
je
icebp
int
orl
jp
inc
lea
or
negb
pop
sub
out
jae
pop
jae
cmc
pop
mov
insb
add
xor
popf
imul
add
dec
mov
mov
fimull
insb
xor
lcall
clc
xor
mov
mov
jnp
cld
sbb
inc
movl
mov
cli
xor
leave
jnp
push
inc
push
add
ljmp
iret
cmpsl
fcoml
mov
scas
xor
sti
into
sbb
xlat
int
iret
cmp
les
mov
jne
mov
push
xchg
adc
test
loope
loope
dec
stos
mov
mov
notl
xchg
inc
sub
subl
xor
mov
push
dec
mov
add
into
cwtl
cs
popf
dec
js
lea
aad
lcall
xchg
pop
and
negl
je
pop
push
incb
insl
jnp
cmp
xchg
sub
and
xchg
pop
xchg
bound
mov
xchg
fildll
scas
dec
negl
ret
mov
pop
adc
subl
not
repnz
adc
in
imul
inc
loope
sti
mov
adc
aam
cli
fisubs
shl
xchg
add
inc
or
pop
xor
add
lahf
xchg
shrl
mov
inc
adc
gs
push
cli
scas
mov
sbb
sub
test
ljmp
cli
popf
int3
mov
xchg
shrb
and
pushf
mov
push
add
iret
mov
icebp
addr16
pop
jle
xchg
xchg
mov
jl
gs
and
gs
loop
ret
addb
mov
lcall
icebp
fscale
std
leave
loope
in
xchg
repz
mov
je
or
je
cmp
mov
jno
clc
test
sbb
inc
xchg
repnz
jno
push
xchg
popf
aam
outsl
mov
jp
sub
cmp
pop
pop
fistpll
jo
jae
and
sar
cld
pop
add
push
rcl
cs
lods
cmp
mov
lret
or
pop
cmpl
add
push
aaa
scas
adc
inc
or
iret
and
add
and
out
sahf
adc
sbbl
or
lahf
xchg
in
test
pop
xor
sti
fistpll
cmp
mov
cld
jne
pop
mov
repz
push
cld
nop
cmp
push
lret
pop
std
adc
mov
xor
jnp
lea
mov
rolb
adc
outsl
in
dec
push
push
jno
mov
outsb
aas
sub
mov
push
fsubs
sub
mov
out
bound
push
jg
addr16
and
outsl
mov
out
icebp
jecxz
push
dec
mov
mov
mov
je
iret
lret
and
fsubl
outsl
pop
dec
ret
cmp
mov
testl
aad
sub
xor
aad
jno
cmp
enter
lods
movsl
scas
adc
lret
js
out
cltd
movsl
mov
fsubrp
rcll
mov
dec
or
negb
xor
push
cmp
push
inc
shrb
shrl
fwait
loope
addr16
xor
ret
movsl
cmpsb
push
add
lock
push
rcrl
jl
lds
xorb
xchg
dec
cmp
mov
ja
nop
andl
in
pop
lret
ret
fdivrs
out
cmp
jecxz
or
push
dec
jo
push
jp
xor
pop
or
cmc
mov
lahf
inc
divl
loope
xchg
lret
leave
cmpsl
hlt
inc
addr16
or
lds
mov
shlb
jge
dec
scas
jmp
push
aam
test
test
mov
mov
popa
and
fldenv
sbb
out
jbe
loopne
add
cmp
sub
mov
fdecstp
xor
es
pop
lretw
sub
mov
sub
fnstcw
push
inc
pop
loope
and
sub
and
jns
rcrb
dec
sarb
xchg
jmp
push
mov
hlt
lret
es
dec
ds
rcrb
popa
cmp
mov
int3
or
stos
filds
rep
or
add
pop
shr
pushf
xor
xchg
cmp
add
js
xchg
test
ljmp
aam
in
sub
jne
mov
into
xchg
lahf
jg
mov
aaa
xchg
inc
clc
clc
adc
ficompl
fistl
int
int3
movsb
gs
adc
dec
cwtl
add
xchg
and
lods
mov
xchg
push
out
jle
stc
pop
jno
mov
pop
add
scas
in
out
adc
inc
ljmp
or
mov
hlt
in
lods
and
push
movsl
mov
cmp
inc
mov
and
out
sub
mov
inc
fiadds
xor
mov
or
sbb
stos
mov
mov
rorl
in
sbb
mov
lahf
jne
sub
fisubl
pop
ret
mov
inc
insl
push
and
xchg
cli
fwait
arpl
scas
icebp
jge
idivb
xor
xor
lods
les
mov
sbb
xchg
push
mov
jb
imul
mov
jge
push
fcomi
in
adc
imul
sub
jmp
push
push
cmp
xchg
cld
adc
inc
xchg
xor
cmp
mov
and
rorl
push
in
repnz
repz
loop
shrl
mov
add
sbb
fwait
out
sti
test
mov
xor
push
sbb
push
int3
roll
mov
mov
test
stos
ds
jo
enter
bound
out
dec
jge
stos
jbe
and
mov
ljmp
inc
xchg
xchg
cltd
imul
cmp
scas
cltd
cmp
inc
dec
dec
dec
int
pop
mov
cmp
cmp
cmp
push
enter
mov
call
pop
inc
addb
in
add
subb
cwtl
icebp
adc
cwtl
lock
les
cmp
stos
je
cmp
ds
jnp
adcb
in
roll
push
scas
push
jo
cmpsl
inc
xchg
inc
das
jp
outsb
mov
les
out
stos
enter
outsb
mov
inc
cmp
rorl
and
cltd
pop
enter
movsb
dec
ja
cmp
push
jp
popf
sbb
sbb
mov
xor
shrl
fidivs
sub
addr16
pop
xchg
xchg
or
lods
sbb
out
and
pop
jb
mov
push
inc
add
xorb
stos
lcall
dec
xchg
leave
xor
pop
jns
aad
test
sbb
arpl
fwait
cmp
pop
push
into
dec
mov
jp
cwtl
enter
or
incl
fwait
lahf
xor
and
add
xchg
imul
faddl
lret
jmp
ljmp
fsubrs
shrb
sahf
push
jne
cmp
add
inc
addr16
incb
shll
mov
mov
pop
repz
std
lret
push
int3
and
fs
movsl
ja
mov
fwait
push
in
imul
push
adc
add
jg
xlat
sub
cmp
dec
mov
push
jno
bound
subl
and
pop
inc
lcall
arpl
daa
sub
jge
rolb
inc
sub
inc
cmc
push
xor
push
jle
sbb
and
clc
roll
fisubl
inc
jle
and
jge
das
cli
scas
jae
shlb
push
bound
mov
push
mov
add
aas
in
xor
ljmp
pop
push
aaa
das
inc
push
test
cmp
sbb
sub
or
adcl
aas
mov
mov
jecxz
test
adc
fwait
jecxz
adc
inc
lods
mov
fdivr
lret
mov
shrb
dec
loop
popa
sub
xchg
negb
push
in
xchg
sbbl
or
ret
dec
lds
pop
movsb
cld
pushf
orl
sbb
pop
nop
lret
scas
inc
out
jne,pt
adc
and
les
mov
add
fsubr
adc
std
and
in
pop
mov
scas
call
cmp
je
add
mov
push
cmpl
jle
aas
repz
cld
andl
lahf
in
mov
pop
push
lods
sbb
xchg
jg
cs
and
mov
fildll
or
xor
les
cmpsb
insb
xlat
inc
dec
call
in
fldl
femms
test
add
cmpsl
add
sub
jb
pop
pop
addr16
das
jne
faddl
cld
push
ss
or
clc
nop
call
sahf
xchg
jb
jecxz
cmp
push
xchg
dec
sar
push
sub
inc
sub
mov
push
icebp
jg
stos
xchg
push
sbbl
cmpsb
test
mov
movsl
jo
jae
or
adc
pop
inc
inc
daa
mov
jle
pop
or
movsb
repnz
fcomps
mov
xchg
jg
cld
pop
out
cmc
sub
inc
cmp
push
hlt
fdivrs
addr16
cmp
mov
imul
dec
xlat
rcrb
or
mov
pop
ret
mov
test
pop
mov
pop
stos
inc
and
movb
lods
inc
sub
cmp
rcpps
dec
xchg
cltd
std
push
test
jns,pt
jo
adc
jns
dec
cltd
add
mov
jbe
cmpsb
mov
or
data16
and
out
mov
xchg
mov
testl
imul
push
mov
xchg
in
inc
mov
push
mov
in
mov
or
ja
fcompl
xchg
cmp
cmpsl
add
aas
dec
inc
xchg
mov
cltd
ret
pop
je
dec
adc
jecxz
jnp
cmpsl
das
and
sbb
mov
push
daa
add
std
lods
dec
js
sti
fnstcw
imul
and
es
js
ss
sbb
shll
mov
jmp
aaa
jecxz
repz
data16
js
mov
fwait
shlb
mov
rclb
fwait
pop
mov
adc
jno
int
or
shll
lods
scas
lds
stos
js
or
insb
test
pop
cmp
popa
aad
lods
dec
mov
cld
subb
pop
jae
inc
cmp
out
sarb
jne
test
lea
jns
jb
push
cs
push
fldpi
jnp
add
or
stos
repz
repz
fs
sbb
xor
andb
lcall
pushf
add
jbe
xchg
push
mov
loope
jo
push
xchg
rorb
xor
xchg
pushf
mov
roll
push
push
bound
push
js
sarl
dec
mov
cmp
les
mov
push
insl
sbbl
adcb
pop
sub
dec
sarb
cmp
xlat
pop
ss
test
test
out
mov
pop
inc
les
orl
stc
cwtl
in
in
mov
cmp
cmp
or
test
loopne
filds
outsb
and
inc
cmp
pop
mov
shrl
ss
out
popa
call
clc
je
inc
mov
imul
mov
jnp
sub
mov
pop
pop
sbb
jmp
enter
insb
pusha
push
sbb
and
cmp
xor
rcll
push
out
std
sbb
xchg
fstpt
or
hlt
mov
xchg
test
lock
test
ret
aaa
inc
mov
cmp
push
push
and
push
inc
push
mov
cmp
adc
dec
inc
loope
test
add
mov
push
ljmp
add
mov
paddb
insl
bound
cmp
xchg
gs
dec
xchg
cmp
lods
cld
jo
gs
je
dec
in
cmp
aaa
push
mov
xor
or
dec
test
pop
mov
mov
add
xchg
repnz
lahf
or
divl
imul
inc
test
and
pusha
clc
aad
mov
negl
push
mov
scas
insb
pop
mov
dec
fwait
int3
cmc
inc
sub
inc
popf
cmpsl
ljmp
and
daa
push
dec
lods
fstl
sti
xchg
mov
mov
lds
xchg
nop
ficoml
sarb
popl
cmp
sbb
and
push
and
push
mov
and
call
push
push
cmp
out
insb
mov
xchg
test
cmpb
push
cltd
pop
lahf
mov
rcrb
test
into
cwtl
and
push
int
divb
mov
insb
sbb
xor
cmp
lock
cmp
and
cwtl
div
push
enter
mov
mov
imul
pusha
lret
jae
fwait
enter
mov
fistpl
ret
test
sbb
int3
xchg
daa
fwait
cmp
xor
dec
test
inc
or
shlb
lea
data16
sub
dec
aam
jno
push
mov
xor
mov
mov
daa
add
popa
aad
insl
add
add
jb
add
inc
sbb
add
sub
jmp
icebp
mulb
sub
xor
xor
push
dec
pop
movsl
mov
sahf
xchg
jp
adc
roll
mov
cmc
mov
leave
jae
hlt
push
pusha
in
jns
or
data16
pop
jno
cmc
jmp
inc
in
call
and
sbb
rdtsc
insl
sbbb
cwtl
ret
sbb
imul
push
cmpsl
sbb
repz
cmp
out
sbb
mov
rcrl
movsl
pusha
mov
xor
cwtl
int3
cmc
jne
xchg
clc
xchg
and
data16
sub
aaa
inc
xor
or
sub
outsl
addr16
or
jl
fsubs
jno
cmp
call
and
frstor
shll
mov
cltd
insl
sbbb
mov
ds
stc
cmpl
jl
test
cmc
or
clc
pop
into
mov
and
mov
jmp
enter
xlat
cli
jnp
enter
cmp
mov
leave
test
cld
inc
push
pop
imul
pop
push
mov
dec
mov
pusha
sbb
add
das
mov
sub
test
jo
bound
jmp
scas
repnz
adc
xchg
jbe
dec
mov
sub
int3
push
pop
jb
jmp
cmp
push
xorb
negl
jnp
add
mov
dec
xchg
xor
filds
push
cmp
inc
in
faddp
insb
jnp
adc
jbe
mov
hlt
xchg
faddl
js
das
xchg
jae
faddl
imul
xchg
data16
addr16
xchg
lret
std
mov
push
push
scas
fisubl
leave
subl
fmuls
imul
cmp
das
in
xchg
pop
pop
arpl
les
pushf
loope
sbb
push
or
movsb
or
cmpl
das
aad
subb
sub
sub
dec
cmp
add
daa
adc
fisubl
pop
addr16
sbb
js
clc
xor
scas
adc
mov
mov
fistpll
jl
adc
sbb
or
push
nop
lahf
add
mov
inc
jns
loop
das
mov
lahf
mov
mov
push
repnz
xor
push
push
nop
out
jnp
loopne
sbb
ret
outsl
sub
sbb
iret
or
add
dec
mull
push
frstor
or
lods
test
out
into
sti
push
or
stos
andb
mov
cmpsb
incb
mov
dec
cld
jno
cld
outsl
dec
in
clc
jb
or
mov
int3
sbb
gs
and
xchg
addr16
xchg
loopne
sbb
sbb
dec
mov
add
fsubrl
cmpb
mov
jno
repz
cmpsl
out
xchg
out
cmc
stos
insl
xchg
popa
in
xor
enter
call
fsubrs
bound
mov
or
mov
xor
stos
mov
lock
out
pop
mov
stos
sub
sbb
cwtd
mov
mov
loope
jns
inc
or
mov
lods
xchg
rorb
cmp
inc
mov
dec
insl
out
sbb
push
inc
jge
adc
push
jg
int
pop
xchg
xchg
pushl
addl
push
inc
xchg
push
and
icebp
fildll
pop
mov
out
bnd
mov
jle
jge
shlb
add
sbb
sbb
sub
cld
push
lods
or
cld
mov
fnsave
or
or
arpl
lea
call
dec
fwait
cld
adc
inc
pavgw
xchg
int
dec
sbb
dec
mov
out
xchg
ret
mul
scas
xchg
leave
or
in
rorb
xchg
fists
rcrb
lock
pop
mov
push
xchg
lock
sbb
mov
mov
mov
push
clc
jae
out
andl
scas
neg
xlat
and
and
adc
mov
js
jg
xor
shll
push
mov
es
push
loope
fists
sti
lret
popf
movsl
ss
xchg
fsubrp
push
out
dec
dec
mov
outsb
jmp
inc
mov
mov
sub
out
fistpl
cmp
adc
jge
fidivrl
popf
dec
rcrb
clc
jb
sbb
notb
clc
insb
rorl
rcr
sbb
and
out
jp
cmc
es
mov
mov
mov
xlat
cli
aaa
bound
push
push
dec
into
movsl
cmpsb
aas
aam
pop
addb
jecxz
xchg
test
cltd
xlat
push
out
jnp
cmova
xchg
sbb
pop
jne
shr
xchg
mov
in
mov
mov
sub
push
cld
rsm
pop
sub
insl
dec
repnz
mov
dec
xchg
lret
mov
mov
paddusb
sbb
inc
push
adc
mov
jbe
mov
rolb
push
addr16
and
push
cmpb
or
or
into
push
jns
out
ljmp
pop
dec
pop
pop
outsl
jns
leave
cmp
push
loopne
stos
push
jecxz
pop
mov
cmp
sbb
inc
ret
aaa
rorl
test
movl
int3
xchg
and
lea
jno
movb
fdivrs
push
sub
outsb
mov
fdivr
inc
insb
xlat
mov
stc
scas
add
xchg
sub
sub
lds
por
insl
adc
or
push
xlat
xchg
test
push
in
icebp
cmp
sub
pop
pop
mov
sub
iret
roll
lcall
jecxz
mov
push
ffreep
pop
jge
arpl
and
sbb
push
jmp
push
scas
push
out
or
int3
shll
enter
imul
mov
mov
inc
out
push
aas
rcll
test
sahf
insb
lods
mov
xor
movsl
sub
jnp
pop
stos
lcall
pop
mov
fisttps
subl
loope
shrl
mov
add
jbe
inc
mov
or
cmpl
movsb
xchg
sbb
in
call
lcall
das
or
enter
adc
xchg
test
dec
mov
cltd
test
jne
mov
repnz
or
fstpl
sub
push
rclb
outsb
jl
insl
icebp
cmp
lods
adc
inc
xor
or
xor
cltd
cmp
in
stos
add
fsts
fnstenv
adc
imul
xchg
jae
mov
nop
popf
je
leave
mull
fdiv
add
push
pop
dec
adc
jg
xchg
push
pop
xor
cmpl
mov
lcall
add
push
mov
adc
frstor
ret
cmpsl
in
clc
loop
int
xchg
fst
pop
add
adc
mov
out
out
bound
mov
gs
cmpsb
mov
or
iret
scas
mov
dec
jg
jo
lahf
testb
cmp
inc
pop
jmp
push
jae
sarl
daa
mov
jb
das
push
das
sbb
cmpl
lret
adc
push
sarb
jbe
push
ljmp
call
loopne
cltd
test
and
lock
hlt
jl
outsb
popf
das
leave
add
fs
rcrb
in
jmp
jae
adc
insl
lock
and
ret
xchg
sbb
cld
test
and
jmp
outsl
test
push
push
aas
les
subl
ret
std
inc
out
fwait
dec
mov
push
cli
push
nop
leave
xor
std
lds
sbb
aam
pop
fistl
loop
xchg
adc
es
jmp
in
jg
imul
shlb
inc
addr16
imul
adc
jle
fstpl
fidivs
dec
scas
jp
and
xor
and
mov
mov
loope
xor
inc
mov
lods
mov
inc
shlb
or
or
cmp
daa
or
aam
jle
or
stc
mov
pusha
or
sbb
ret
dec
sbb
mov
daa
popa
cmpsl
enter
out
sbb
push
insb
xchg
mov
stos
out
cltd
jge
rcrl
mov
notl
sub
xchg
insb
xchg
movsb
aam
cmp
daa
aam
loop
inc
cmp
sbb
subl
and
cmpsl
jmp
inc
test
add
mov
adc
ja
jge
add
jecxz
sbb
addb
push
mov
cmp
jb
call
lock
push
push
xlat
pop
push
scas
aas
sbb
out
daa
push
daa
inc
mov
push
mov
icebp
popf
pop
jp
stos
movl
pop
or
push
xchg
or
and
fnstsw
loope
fidivl
pop
outsb
cmc
push
adc
insl
je
popf
mov
icebp
mov
push
repz
cmp
xor
dec
lods
mov
mov
pop
jb
out
jl
jbe
jp
sub
shll
inc
or
dec
adcb
mov
xor
cmp
adc
subl
icebp
jns
lahf
push
lea
out
or
pop
mov
stos
lods
add
out
daa
jno
adc
xlat
test
lods
movl
ja
ds
fucom
or
addb
int
pop
xor
xchg
jno
repnz
jae
xor
fmull
cmp
cli
bnd
gs
inc
mov
addr16
adc
dec
je
mov
and
wrmsr
dec
push
sub
cld
mov
enter
inc
shll
mov
ja
aas
jo
pushf
sub
jo
mov
cmp
xor
cmp
outsl
movsb
lds
in
jb
jp
aaa
jno
mov
jecxz
xchg
lock
sbb
jne
popf
push
in
popf
popa
test
hlt
and
inc
int
fmuls
fimull
int3
dec
loopne
dec
and
leave
popa
push
scas
in
loope
or
fcompl
mov
cld
imul
mov
or
mov
outsl
jg
decl
imul
out
shll
sub
or
mov
popa
orl
sbb
cmp
int3
cmp
ret
xchg
aas
pop
adc
xchg
insl
fistps
popf
int3
data16
mov
jmp
jno
cmp
cmc
jb
push
cmpb
addr16
xor
jge
sbb
adc
ja
inc
iret
cmp
pushf
nop
adc
xchg
mov
int
leave
add
pop
lahf
add
pop
push
sub
mov
mov
stos
pop
jne
outsl
xchg
fwait
outsb
pop
bound
cmp
or
add
int3
test
pop
mov
push
push
movsb
jg
lea
jns
test
xchg
pop
out
aaa
sub
sub
xor
aaa
daa
dec
test
cmovno
in
shr
add
outsb
imul
jle
cmpsl
out
xchg
data16
pop
hlt
ljmp
pop
adc
mov
cld
sbb
clc
loopne
outsl
inc
in
in
sbb
sbb
jle
pop
fnstcw
adc
lea
xor
dec
cmp
imul
ficomps
stos
sub
or
pop
sbb
sub
lods
dec
or
add
lret
call
das
or
dec
push
xchg
mov
jb
sub
movsl
inc
stos
lcall
mov
fs
loope
pop
add
mov
cltd
cmp
jne
dec
roll
mov
loope
imul
pop
cmp
mov
cld
stc
mov
fwait
outsb
repz
add
sahf
sbb
or
mov
leave
outsb
nop
cs
xor
dec
ret
inc
sub
insb
mov
pop
cmp
pop
adc
add
cwtl
xchg
xor
nop
inc
lcall
in
cmc
push
sbb
in
cmpsb
sbb
add
daa
pusha
sbb
outsl
out
inc
nop
shll
es
jb
hlt
cmp
cltd
sbb
popf
popf
in
pop
movsl
or
jg
cmp
push
sbb
out
repnz
sub
pop
mov
pop
dec
mov
or
mov
lock
pop
xchg
jno
mov
xor
fnsave
fsub
inc
adc
mov
mov
jo
cmpb
pusha
cli
int3
call
cmp
xor
faddl
or
jecxz
mov
decb
push
lcall
icebp
cltd
int3
testl
mov
jle
ret
pop
pop
mov
adc
stc
or
negl
test
mov
int
lret
out
mov
dec
mov
dec
mov
idivl
ljmp
cmp
test
gs
cmpsb
cwtl
jae
ja
in
movsb
mov
inc
lds
push
sub
imul
jp
daa
mov
dec
pop
data16
pop
dec
mov
xchg
pushf
es
insb
and
mov
mov
mov
ret
sbbl
add
mov
adc
int
fstl
add
sar
out
pop
cltd
xchg
and
cmp
testl
lahf
ljmp
andb
test
test
ret
mov
sbb
scas
shlb
inc
lahf
jno
sbb
bound
add
jae
inc
rorb
or
push
inc
mov
and
add
imul
rolb
push
repz
rol
cli
out
xchg
lock
sar
cmp
inc
fdivs
dec
jecxz
imul
cwtl
sub
inc
add
testl
sub
jl
push
mov
lea
testb
bound
sub
sbb
leave
cs
inc
fwait
push
jbe
dec
insl
cmp
fneni(8087
sbb
mov
inc
xor
orps
fcmovbe
arpl
repz
stc
mov
dec
mov
push
jb
and
scas
xor
xchg
fwait
cli
cld
outsb
adc
xor
mov
lock
cmp
hlt
roll
push
stos
cmp
adc
mov
cli
out
add
aad
cmp
cmp
out
shlb
pop
inc
xchg
das
out
jle
jo
cs
roll
nop
jle
cmpsl
add
test
ljmp
outsl
lcall
xchg
mov
std
and
mov
mov
jg
outsb
and
push
pop
xchg
ljmp
lods
pop
mov
push
mov
pop
decl
in
leave
orl
addr16
imul
push
loopne
xchg
shlb
sbb
adc
mov
inc
cmpsl
adc
roll
and
daa
inc
loopne
jbe
add
jbe
imulb
mov
popf
pop
push
rcl
fildll
xlat
in
loopne
loope
sbb
mov
leave
cmp
repnz
jge
push
jnp
es
mov
add
roll
insb
movsb
pop
incl
stc
mov
stos
filds
adc
sbb
push
hlt
mov
cld
jl
in
in
pop
call
add
addr16
fisubrl
dec
stc
mov
push
sbb
jns
jb
cmp
in
xchg
adc
cmpsb
xchg
xchg
je
sbb
int3
add
pop
and
push
xchg
pop
aad
jl
scas
insl
cmp
jbe
and
pusha
mov
sub
sbb
jle
loop
inc
fwait
push
mov
hlt
imul
rolb
stos
cmp
loopne
xchg
mov
xchg
xor
adc
xchg
inc
push
mov
orb
out
call
rclb
mov
popf
add
push
and
xor
daa
test
adc
in
pop
jmp
ret
cmp
adcb
and
dec
out
and
sub
scas
in
adc
shll
xchg
scas
sub
dec
xor
testb
subl
jmp
inc
enter
mov
outsl
int3
subl
xor
sbb
data16
and
out
sbb
push
jecxz
bound
lcall
push
ror
movsb
lcall
nop
movsb
cmp
adc
movsl
cmc
mov
lock
loop
and
aam
ret
repz
in
bound
push
into
aaa
aas
inc
jns
ja
andl
into
movsl
lock
loop
jp
adc
fbld
clc
xchg
sub
rorb
leave
add
jbe
fs
movb
es
insb
adc
xor
lret
pop
push
pop
add
jnp
cmp
psraw
xlat
loopne
mov
imul
in
imul
cli
sbb
ret
jo
adc
repnz
pop
jae
loope
scas
pop
pop
pop
outsb
pop
movsb
or
inc
in
dec
ljmp
sub
and
push
mov
pop
push
dec
jno
setae
sub
outsb
push
pop
cmp
add
jecxz
mov
loope
mov
lea
into
adc
dec
lock
push
aas
jg
and
hlt
into
cmp
sti
cmp
and
sub
aaa
out
loop
mov
adc
ret
cli
mov
jge
rcll
push
pop
jecxz
add
jne
mov
cltd
cli
mov
dec
popf
jmp
hlt
cmp
add
jmp
shl
and
insl
stos
imul
js
fisubrs
xor
negb
iret
sbb
pop
mov
rcrb
or
mov
rclb
cmp
and
shll
and
mov
je
push
sbb
pop
rolb
idivb
pusha
sub
in
jle
mov
xchg
daa
ret
jmp
xchg
jno
dec
xor
cmpsl
leave
mov
push
xchg
cwtl
cmp
lock
jae
shlb
fs
push
lret
push
adc
gs
loope
mov
iret
int
andl
inc
les
mov
and
rcr
sub
jbe
add
rorb
addb
mov
jmp
shr
sub
lods
stos
ja
xchg
cmp
inc
rolb
cmp
into
inc
pop
ds
jmp
iret
shl
cltd
adc
xchg
jmp
and
pop
sub
dec
cmp
test
stos
daa
lea
xchg
xor
cmpsb
xchg
iret
jae
jmp
int3
shl
and
aas
aas
icebp
and
mov
roll
insl
notl
pusha
cmpsb
dec
les
insb
inc
push
data16
push
mov
cmp
aas
jnp
add
lcall
fiaddl
pop
popf
pop
movsl
lods
popf
dec
jo
pop
pusha
push
pop
mov
outsb
movsl
hlt
xchg
imull
mov
inc
adc
std
push
roll
cwtl
scas
xor
cmpsb
jl
in
fnstcw
jmp
dec
or
sub
mov
nop
cwtl
shll
dec
xchg
push
xchg
stos
loope
rorl
jns
push
cmpsb
xchg
pop
adc
fmulp
and
xchg
subl
leave
mov
insl
jbe
and
pop
popa
push
mov
addb
mov
ror
mov
shll
jl
pop
shrb
push
ret
xchg
push
adcl
mov
cmp
jp
outsl
mov
test
imul
mov
dec
ret
sub
movsb
mov
andb
movsb
sbbb
in
push
xchg
pop
lods
mov
jnp
in
cwtl
pop
ja,pt
dec
sbb
dec
inc
fsubp
rclb
xor
pop
out
aad
idivl
cmp
adc
call
icebp
cmpsb
pusha
push
or
js
push
jmp
xlat
ror
fs
inc
out
push
mov
inc
hlt
sub
mov
pop
jno
rorb
daa
fidivs
push
mov
adc
and
test
pop
scas
pop
loop
jg
dec
dec
or
push
xchg
ss
dec
xchg
not
sbb
inc
inc
loop
adc
push
mov
lods
out
add
push
sbbl
loop
ficoms
mov
dec
std
mov
xchg
sbb
lcall
inc
push
mov
arpl
jne
dec
insl
jmp
jnp
stos
insl
pop
pop
inc
mov
cmc
shrl
pop
push
cmp
mov
imul
fs
fidivrs
mov
xchg
shlb
in
push
cltd
into
rorb
fldenv
insl
add
into
out
cmp
push
add
jne
xchg
int3
lret
jmp
in
scas
inc
adc
sbb
push
shll
in
insl
int3
decl
scas
mov
mov
loope
and
xlat
cmp
add
mov
inc
mov
inc
xor
push
push
lahf
in
movsb
pop
dec
push
loop
addr16
mov
cmpsl
mov
dec
jecxz
roll
fcmove
in
test
fildl
subb
mov
lock
in
cmovns
arpl
jno
jb
push
sbb
int3
sbb
imul
xor
shr
lea
cltd
fcompl
pop
xor
lods
mov
or
add
out
jge,pn
jno
faddl
je
addl
xchg
push
adc
push
ja
or
adc
push
mov
jae
push
adc
negb
sti
in
jae
std
jmp
and
dec
jle
dec
es
fildl
cmp
add
and
jmp
sahf
rcll
cs
and
push
leave
subl
sub
andb
mov
add
mov
scas
rclb
mov
mov
pop
xor
in
hlt
adc
jns
push
jp
cld
hlt
ss
stos
mov
or
test
pusha
lods
xchg
dec
sti
loop
mov
jns
cmpsb
repz
mov
fwait
mov
rclb
jg
sahf
push
inc
inc
pop
fwait
in
loop
adc
jne
jne
call
in
mov
or
jecxz
xchg
jg
loop
or
cwtl
andb
and
icebp
and
pushl
xor
popf
shrb
mov
clc
sbb
shlb
jno
popa
negl
adc
fstpt
push
xchg
in
xchg
jle
pop
sbb
ret
repnz
or
pop
or
aas
ljmp
imul
adc
lods
mov
in
mov
add
cmp
std
and
jmp
scas
lret
lock
das
cmp
loope
mov
mov
cmp
inc
mov
int3
or
or
mov
xchg
in
and
int
jle
xchg
push
ljmp
popa
test
jl
xchg
xchg
int
jbe
and
xchg
sub
jmp
iret
mov
fmull
xchg
sbb
inc
or
sub
and
pop
out
or
adc
push
sub
push
mov
xor
mov
mov
imul
shl
into
sti
das
sub
or
and
mov
push
xchg
xchg
push
sbb
ss
subl
insb
push
xor
xor
push
cmpsl
rorb
stos
out
cmpsb
mov
rorb
push
stos
mov
fdivr
shlb
fucom
cld
or
outsl
mov
add
cmpsb
mov
mov
sbb
ret
insb
das
imul
pop
xor
dec
lea
dec
sbbb
mov
movsb
add
sub
pop
mov
out
mov
push
ds
fwait
mov
cmp
cltd
inc
inc
mov
cmp
cmp
mov
out
mov
cs
pop
mov
out
popa
adcb
cmp
jno
in
aas
mov
leave
test
les
andb
shlb
mov
jmp
push
or
cwtd
xor
jnp
cltd
jbe
orb
mov
jp
xchg
mov
push
xor
in
fcmovu
cli
cli
sub
sbb
arpl
jae
insb
and
jge
pop
scas
cli
call
xor
cwtl
sbb
gs
mov
jmp
push
cmp
cmp
mov
ja
push
aaa
in
aad
mov
mov
cltd
popa
ljmp
xchg
into
arpl
addr16
sub
ja
ret
test
push
lret
sbb
push
dec
jb
pop
stos
es
cmc
xlat
cmp
movsb
mov
test
mov
jge
mov
lds
push
out
mov
lods
push
imul
xchg
mov
sub
rcrl
lcall
shlb
scas
and
mov
xor
jns
testl
xor
xchg
adcb
add
jmp
cli
into
cwtl
mov
push
aaa
xchg
cmp
and
js
adc
add
sub
inc
and
inc
hlt
sbb
mov
inc
push
stc
in
lahf
lods
fnstsw
pop
push
add
fmuls
add
inc
cmp
and
sarb
stc
out
mov
mov
es
adc
pop
xchg
push
call
mov
fdivl
cmc
adc
xchg
xchg
in
mov
push
loope
sbb
lods
add
adc
cmp
jp
or
das
add
pop
lret
push
push
xlat
mov
out
test
test
das
xchg
push
fs
add
aas
ficoms
mov
adcl
inc
sub
pushf
aaa
in
inc
mov
ss
out
mov
cmpsl
in
out
jne
xchg
dec
sub
or
mov
ret
mov
imul
lea
loop
rolb
out
cmp
ds
xchg
cmpsb
movsb
xchg
push
ret
pop
out
or
xor
mov
xchg
mov
and
inc
inc
dec
or
add
mov
sahf
mov
rolb
jno
pusha
add
or
inc
mov
push
out
adc
or
mov
add
ret
lahf
sbb
mov
pop
push
fnstenv
inc
into
lds
cwtl
mov
inc
shr
xchg
outsl
xchg
je
xor
cmp
mov
jno
mov
fst
dec
frstor
es
enter
fbld
lock
pop
or
stc
cld
mov
and
repnz
push
mov
test
push
outsb
dec
xchg
xcrypt-ctr
cmpsl
pop
inc
cmp
out
imul
call
mov
js
push
inc
cltd
jle
int3
addb
pop
jge
dec
lock
cmp
movsl
sub
xchg
sbb
pop
push
dec
xor
loopne
adc
inc
loope
mov
cmp
out
adc
sbb
pop
out
stos
cli
or
mov
les
out
stos
mov
fiaddl
stmxcsr
lahf
sub
mov
sub
ret
out
ret
adc
lret
in
rcrb
inc
add
mov
ljmp
jnp
stc
jl
inc
divl
icebp
stc
push
lds
mov
xchg
aas
int3
cmp
insl
sahf
pusha
fimull
mov
cltd
fdivl
enter
sub
out
jno
lods
sbb
pop
pusha
push
cmpl
mov
push
popa
cwtl
lods
xor
sub
xchg
and
inc
add
dec
jecxz
cmpsl
divl
add
iret
jno
mov
arpl
pop
shrb
movsb
or
jb
jb
fidivl
or
test
scas
xor
sub
jnp
inc
std
and
jg
orl
mov
push
daa
mov
call
jg
and
fsubp
adc
notb
and
add
fcmovu
sub
repz
xchg
divl
call
and
xchg
popl
lock
jmp
les
cld
fcoml
xor
jno
and
add
cs
jp
les
fldenv
daa
icebp
jmp
mov
and
gs
lds
sub
jne
mov
aam
sbb
cwtd
sbb
ret
outsl
out
mov
aaa
jae
scas
dec
outsb
ret
clc
int3
out
inc
sbb
xlat
fcompl
inc
nop
jae
movsl
movsb
sbbl
pop
out
inc
jbe
sbb
jo
lret
dec
call
sub
mov
mov
add
push
shrb
sub
aad
js
scas
push
stos
lret
ja
pushf
repnz
testl
lret
aam
dec
add
std
ret
dec
cmp
fildll
push
xchg
lock
mov
in
mov
jle
xor
cmp
jmp
xchg
and
mov
int
gs
repz
call
in
inc
icebp
sub
orb
mov
addr16
les
dec
scas
or
adc
movsb
aad
mov
cmp
les
rolb
push
pop
pop
jl
cmc
pop
scas
xor
mov
cltd
sub
sarb
fisttps
jne
xor
add
jp
dec
pusha
push
movsb
bnd
add
in
pop
fnstsw
add
cmp
movsb
push
inc
or
rorl
es
stos
sub
xor
xor
shrl
sub
mov
push
push
add
mov
add
pushf
sub
or
push
arpl
shll
mov
cli
mov
xchg
or
sub
movsl
aad
dec
out
sub
aad
decb
mov
fidivs
fucomip
leave
enter
bound
cmc
scas
inc
jb
scas
movsl
pop
xchg
inc
pop
push
xor
xchg
stos
mov
sti
fbstp
aad
jmp
cld
cmp
adc
call
add
fisttpl
push
out
pushf
out
inc
aad
push
cmp
lcall
mov
mov
jmp
jmp
loopne
in
and
ret
inc
push
stos
and
clc
test
out
xor
xor
lret
sahf
inc
xor
fwait
lock
js
or
rcl
mov
or
sbb
xor
mov
cmc
push
out
stc
sub
fdivs
les
sub
dec
arpl
sbb
pop
notl
mov
out
xchg
mov
imull
in
icebp
hlt
push
sbb
lods
pushf
div
mov
sbb
daa
pop
popf
push
or
mov
adc
fwait
sbbb
int
in
push
loop
xchg
hlt
jne
sti
mov
decb
cs
lea
jae
inc
stos
fmull
xchg
int3
mov
xor
mov
out
icebp
fldt
enter
jmp
outsb
pop
xlat
out
add
adc
fmull
adc
addr16
stos
movsb
test
fisubs
mov
xchg
or
mov
test
jp
sub
pusha
mov
or
loopne
mov
push
lret
cld
xchg
xchg
jmp
xchg
sarb
orb
xchg
mov
xor
xor
push
aam
push
aad
push
mov
push
mov
mov
das
jno
cmpsb
pop
fwait
scas
jno
jmp
or
push
jmp
test
arpl
lods
scas
out
adc
lods
movsl
mov
hlt
or
or
push
lcall
js
pop
xor
lea
ret
mov
std
push
push
subb
shlb
fwait
daa
ret
lods
and
lret
mov
mov
insl
push
rol
lock
scas
mov
add
fmull
fbstp
mov
int
leave
add
pop
xchg
xchg
mov
mov
inc
jae
test
bt
and
sbb
add
pop
sahf
shll
icebp
dec
sub
xchg
int3
lock
mov
enter
xor
stc
lret
int
add
gs
in
mov
inc
out
push
imul
ljmp
lahf
inc
sub
inc
adc
fcoms
cmpsl
or
call
aas
out
xchg
sbb
mov
imul
scas
clc
mov
adc
cmp
dec
shlb
imul
icebp
movsb
stc
jns
fst
xchg
rorl
imul
mov
push
mov
push
sbb
dec
ja
mov
repnz
adc
mov
ljmp
sub
rorb
call
cmpsb
adc
lods
imul
int3
fcomi
jbe
lds
mov
mov
jno
cmpsl
leave
cmpsb
fstl
data16
jno
sbb
insl
adcb
cmp
cmp
sub
xchg
sub
jae
add
and
xchg
cmp
addr16
imul
call
mov
jns
or
jbe
mov
xchg
xchg
jg
adc
out
test
fwait
cli
bound
std
hlt
xor
scas
es
test
leave
mov
fsubrp
clc
mov
fcomp
mov
push
hlt
adc
add
les
and
aam
js
jns
sbb
pusha
ljmp
or
mov
imul
lcall
cmp
adc
pop
sbb
shll
cmp
inc
mov
test
jo
idivb
inc
fwait
nop
rclb
or
aaa
mov
inc
ljmp
and
imul
inc
xlat
push
jmp
or
cli
jecxz
out
pop
sahf
rep
lret
mov
push
scas
stos
int
cmp
stos
hlt
cmpsl
imul
jecxz
ret
flds
lret
mov
and
mov
mov
push
je
push
in
in
lock
and
loop
cmp
aas
fst
adcb
xor
pop
dec
adc
lahf
add
rorl
imul
mov
pop
hlt
mov
insl
sti
jmp
scas
push
stc
xor
fiaddl
xchg
cmp
add
pop
push
andps
mov
mov
pushf
inc
aaa
mov
movsbl
std
roll
xor
imul
lods
ljmp
add
or
lret
outsl
xchg
test
push
repnz
outsl
xchg
lds
out
pop
loopne
mov
cmp
rclb
jb
lods
mov
sub
shrl
mov
imul
andb
sbb
mov
adc
inc
mov
stos
xor
or
or
les
nop
aad
xchg
orb
mov
rcl
scas
mov
ret
iret
xor
stos
mov
mov
pop
repz
push
in
mov
and
dec
popa
adc
jbe
std
test
jp
mov
leave
idivb
xor
mov
add
jmp
mov
xor
mov
addb
inc
daa
xchg
jnp
xchg
iret
lock
ljmp
xlat
push
sbb
dec
mov
in
aas
mov
adc
test
xchg
and
mov
and
and
mov
sub
xchg
out
cmp
in
push
sbb
pop
jb
push
loop
std
mov
jl
stos
inc
xchg
mov
loopne
int
cwtl
lahf
sbb
push
repnz
pop
fsubs
push
lret
push
in
mov
push
ret
fbstp
push
pop
xor
cmp
loopne
cmp
add
push
test
orb
mov
cmpsb
ret
mov
ret
push
pop
xchg
mov
push
and
fistpl
mov
sti
add
cmp
in
jmp
aad
dec
lcall
gs
adc
mov
sub
jnp
inc
pop
enter
hlt
movsb
test
add
adc
jnp
outsb
cmp
push
aam
mov
dec
pop
mov
ret
sbb
adc
mov
xlat
into
flds
fistl
call
dec
add
jae
ret
add
aad
addr16
pop
sbb
jmp
sub
shlb
xchg
aam
dec
scas
or
mov
push
movsl
xchg
adc
mov
mov
in
inc
sub
loope
dec
cli
mov
icebp
inc
ja
jnp
js
ja
lods
xor
xor
bound
cltd
cs
gs
xlat
psadbw
mov
and
lret
enter
mov
lahf
mov
test
jl
dec
sub
cltd
mov
aam
xchg
ficoms
movsl
stos
dec
xor
fmuls
jns
fstps
mov
and
pop
das
jg
xchg
testb
ret
mov
mov
fmuls
mov
dec
jp
daa
mov
adc
clc
jnp
rorl
jmp
jp
popf
lret
mov
stc
or
pop
mov
adc
mov
push
or
test
jge
or
push
dec
sub
sbb
inc
lcall
loopne
mov
mov
and
xchg
xchg
push
dec
lods
inc
sbb
sub
pop
mov
in
dec
xchg
sub
add
xchg
sbb
orb
jecxz
shlb
pop
clc
rclw
aaa
sub
mov
jge
sub
jno
pusha
inc
lret
aad
insl
mov
and
xchg
adc
jb
and
xchg
in
out
mov
ret
xchg
pop
xor
flds
in
arpl
negb
dec
ljmp
fimuls
insb
cmp
test
mov
push
push
insb
dec
dec
pop
and
mov
je
xchg
test
fidivrs
mov
adc
jbe
xor
mov
sub
test
cld
movsl
rorb
sbbb
xchg
push
cmp
mov
js
adc
pop
or
test
mov
xor
mov
jnp
jb,pn
test
and
cmp
stos
jge
int
dec
pop
xchg
enter
mov
jle
test
pop
xor
hlt
je
mov
mov
out
pop
movsb
lret
dec
mov
xchg
mov
mov
scas
iret
sahf
insb
jns
inc
test
jb
mov
out
mov
into
imul
add
xchg
push
inc
xor
jg
inc
mov
sub
scas
int
ja
test
sub
push
std
mov
cmp
jecxz
loopne
sahf
push
nop
sub
frstor
xor
sub
subl
jle
imul
fidivs
push
ja
jmp
aaa
add
js
addr16
push
dec
in
mov
jbe
sbb
push
in
sti
xchg
pop
in
pop
fistpl
cmp
sbb
pop
ds
test
add
xchg
or
xchg
fcompl
xor
pop
pop
aad
mov
pop
cld
inc
roll
xchg
inc
sbb
cmpsl
inc
jle
enter
add
jno
xor
jne
repnz
push
or
and
pop
xor
cmpsl
xlat
dec
adc
cmp
and
cmpsl
inc
mov
loop
mov
push
jns
mov
pop
mov
test
dec
pop
sbb
inc
cltd
jne
mov
sbb
ret
fstpt
fdivs
scas
jbe
push
test
scas
xor
popa
imul
divb
push
xchg
or
and
xor
push
mov
xor
xchg
push
ds
insl
shll
dec
cld
repz
mov
in
sbb
xor
xor
xor
loopne
dec
pop
hlt
mov
out
and
push
movsb
int
dec
in
sbb
data16
xchg
sahf
mov
inc
ficomps
ret
jecxz
std
popa
sbb
sub
fdivp
or
xor
loopne
fcomps
pop
mov
push
sub
inc
sub
test
inc
cmpsl
or
loop
mov
jo
icebp
ljmp
xor
cld
or
rcrl
divb
aad
nop
adc
aas
push
push
repnz
jg
jno
arpl
movsl
lret
push
adc
inc
aaa
jne
and
nop
push
jge
js
add
xchg
pop
add
in
mov
outsb
fstps
lods
je
xor
aad
adc
mov
stc
and
dec
pop
xor
sbb
insb
dec
fildll
pop
adc
lock
jl
imul
je
cmc
sbb
adc
mov
ja
in
popf
fldl
mov
adc
dec
mov
repz
andb
xchg
test
out
orl
xchg
nop
push
jae
xchg
xor
mov
mov
cs
mov
and
iret
ljmp
push
repnz
and
out
repz
mov
mov
scas
test
jns
ret
mov
sub
mov
xchg
clc
mov
std
lock
outsl
mov
xchg
clc
jne,pt
add
inc
push
cwtl
jle
gs
pop
fldt
clc
jmp
lods
mov
inc
push
add
lcall
bound
sbb
aas
pop
inc
adc
add
jmp
loope
push
or
mov
std
or
sbb
ret
xchg
mov
ret
push
pop
sub
adc
jmp
mov
out
cmp
ljmp
inc
stc
dec
fdivs
cld
add
outsb
fs
dec
rclb
cmc
lods
jae
testl
pusha
ret
or
decl
je
mov
jnp
aas
and
dec
sbb
add
repz
mov
push
aad
test
mov
cmp
cmp
mov
sbb
fmul
jg
mov
call
xchg
mov
add
xchg
aad
sbb
std
lcall
cmp
adc
fdivrl
imul
test
push
push
stos
nop
enter
pusha
xchg
mov
or
xchg
cs
lahf
or
jl
xor
insb
loope
jno
mov
jo
push
cmc
arpl
movsl
xor
divl
in
mov
ja
mov
inc
clc
andb
cmpsb
pop
inc
hlt
aad
mov
jne
addb
cmpsb
inc
clc
fwait
xor
ljmp
test
jle
cmp
cwtl
or
pushf
or
hlt
hlt
fidivl
ds
jne
push
mov
add
dec
insb
push
enter
push
addr16
shrl
inc
dec
mov
in
push
mov
mov
gs
test
call
adcb
icebp
xchg
cmp
fmull
push
jbe
arpl
inc
in
test
fdivl
in
inc
int
cmpsl
mov
pop
pop
movsb
and
add
enter
sub
mov
add
xchg
xchg
add
out
movb
int
dec
xchg
jb
mov
sub
addl
stos
fs
xchg
sbb
or
sub
lods
add
js
dec
repz
outsb
mov
mov
call
out
call
and
pop
jno
js
pusha
inc
push
or
out
jmp
sub
scas
lds
outsl
imul
in
xchg
sbb
sub
in
jnp
mov
sub
int
jno
iret
lcall
sarl
mov
pop
es
adc
dec
xor
dec
or
dec
cmpsb
xchg
mov
out
mov
push
fnsave
ret
inc
push
mov
pop
pop
pop
pop
jae
sahf
fnstenv
inc
stc
pop
mov
test
das
nop
lods
jb
ret
jmp
sub
or
sbb
in
mov
push
xor
lret
pop
decb
loop
xlat
pop
mov
and
xor
gs
xchg
mov
test
xor
aas
mov
adc
sbb
mov
pushf
dec
adc
mov
pushf
pop
ret
push
lods
adc
xchg
mov
enter
push
aas
xor
pop
lret
inc
ja
pushf
out
sub
int
lods
and
add
roll
test
bound
sub
out
pop
mov
add
mov
mov
mov
sbb
or
stos
imul
add
lock
pop
aad
rol
dec
dec
stos
jecxz
lea
xchg
dec
shll
pop
dec
loopne
mov
push
and
shll
and
iret
push
outsb
out
xchg
dec
push
int
adc
mov
outsl
js
dec
cltd
and
jmp
shll
aas
sti
jecxz
hlt
sbbb
xorl
pusha
imul
inc
nop
cmp
xor
mov
push
jnp
imul
or
jg
repnz
mov
xchg
xor
es
dec
ds
and
ss
fnstenv
enter
cmc
ds
pop
popa
cwtl
mov
mov
cld
inc
insl
clc
stos
pop
mov
insb
add
movsl
stos
push
loop
push
cld
inc
xchg
pop
lret
shll
xchg
sbb
mov
aam
cs
shl
or
mov
shl
dec
js
xchg
and
mov
pop
pushf
lock
insl
xchg
pop
fcmovbe
mov
lock
xor
mov
bound
dec
loope
jo
mov
mov
mov
iret
mov
xor
sub
xor
test
lret
cli
jne
jge
ret
and
mov
adc
dec
adc
ficompl
lcall
divb
jecxz
push
inc
add
daa
mov
sbb
jg
push
mov
ret
xchg
mov
dec
sahf
add
sbb
hlt
leave
push
xchg
ds
mov
push
pushw
push
ret
loopne,pn
fsubl
lods
fmull
rclb
outsl
dec
sahf
in
lods
add
popa
sbb
or
loop
inc
pop
dec
aad
repz
incl
sub
jecxz
xchg
repnz
xchg
iret
push
or
xor
scas
jb
popf
in
pop
lret
loopne
lods
dec
adcb
dec
imul
popf
push
cmp
mov
fstl
inc
mulb
mov
mull
jg
mov
js
mov
or
mov
ds
pop
bound
shll
jg
jns
pop
mov
mov
mov
fildl
mov
mov
sbb
sbb
add
pop
and
pushf
ljmp
shl
xlat
cmpb
add
or
dec
sbb
jae
loop
cwtl
cwtl
pop
pop
lods
mov
pop
pop
pop
sarl
ficompl
mov
mov
stos
pop
jg
xchg
lods
lods
push
jl
shll
pop
int3
jno
adc
jge
pusha
xchg
test
inc
out
out
sahf
pusha
adc
lcall
lods
add
sti
sub
sbb
ljmp
jle
pusha
pop
test
fildll
test
sbb
xchg
test
fmul
push
or
jge
lods
xor
subb
push
jae
sbb
fwait
sbb
push
idivb
cmp
movsb
cmp
out
adc
sbb
nop
loope
or
rclb
and
cwtl
mov
cmpsb
sbb
sub
and
xchg
fcmovbe
aam
or
adc
mov
or
iret
out
sub
push
xchg
and
jns
adc
mov
cmpsb
xchg
push
imul
xchg
pop
xor
mov
lret
out
sbb
stos
int
rclb
gs
or
inc
insb
cmp
shl
jmp
std
push
dec
mov
jne
sub
fcomps
jmp
add
add
xchg
mov
xchg
jae
hlt
pushf
outsb
mov
jne
sub
mov
rorb
pop
or
sbb
push
icebp
clc
and
int3
sub
pusha
mov
ss
fcoml
and
shrd
test
pop
orb
inc
loop
mov
dec
lret
xchg
cmp
jl
mov
imul
int3
gs
leave
adc
dec
push
inc
adcl
mov
push
arpl
std
scas
xchg
into
push
das
fldl2t
bound
jge
notb
adc
sbb
sbb
dec
js
jp
lahf
mov
mov
mov
inc
xlat
mov
out
clc
addr16
aas
mov
iret
sub
dec
mov
pop
or
sub
sbb
stc
std
adc
adc
inc
adc
lcall
push
add
lcall
jne
and
xor
test
loop
jl
jge
outsb
mov
insl
and
mov
adc
jle
cmp
out
int3
int3
aam
test
das
por
aad
stos
repnz
jae
adc
dec
cmp
or
xchg
inc
jl
mov
int3
clc
pop
cwtl
aam
cmp
pushf
push
rorb
push
nop
xchg
xchg
jns
jle
mov
mov
push
addl
daa
add
push
inc
icebp
imul
lods
fstpl
mov
ja
sbb
and
popf
add
or
subl
xchg
sbb
fildll
int
xor
dec
testl
or
cwtl
inc
or
pusha
jp
in
inc
mov
jg
aam
test
gs
push
andl
data16
in
scas
adc
aam
mov
or
xlat
and
xor
pop
mov
call
adc
into
inc
cmc
mov
mov
pusha
mov
dec
adc
pop
sahf
add
insb
add
lds
push
inc
jmp
ret
cwtl
out
push
cltd
shrb
mov
pop
ja
cltd
movsl
jno
sbb
jg
test
cmp
mov
jecxz
xchg
inc
insb
pusha
fsubs
mov
out
and
gs
sahf
std
inc
rorb
aas
fdivrs
push
nop
mov
inc
std
iret
inc
adc
add
shl
push
in
outsl
jno
dec
in
call
aad
pop
test
xchg
shrl
movsl
out
xchg
cld
ret
lods
sub
jbe
cmc
pop
mov
xor
or
pop
jno
or
jmp
test
push
shll
mov
pop
inc
nop
pushf
js
pop
add
int
mov
push
sub
cmp
pop
mov
cmp
mov
pop
jne
inc
adc
adc
ds
add
jbe
xchg
flds
shrl
outsl
or
notb
imul
fisubl
mov
jb
dec
push
fwait
jns
mov
ficomps
mov
mov
and
hlt
add
hlt
add
call
add
pop
push
inc
mov
pop
or
mov
out
loope
out
mov
jno
jmp
and
mov
push
inc
cld
sbb
jne
sub
hlt
xorl
shlb
sbb
cmc
inc
xorl
cmp
push
lahf
imul
out
dec
and
fwait
iret
jmp
xlat
scas
inc
mov
add
xchg
mov
push
jmp
insb
lods
add
es
push
lret
loopw
xlat
lock
das
mov
xchg
je
mov
pop
mov
arpl
outsl
inc
test
jns
cmp
jmp
pusha
xchg
inc
inc
cmpsl
push
jg
pop
pop
call
or
decl
jb
inc
sub
rol
fistpl
popf
pop
pop
xlat
es
jnp
test
inc
scas
mov
jno
dec
mov
mov
xchg
mov
add
mov
add
jmp
xchg
xchg
cli
sbb
jl
arpl
repnz
sbb
push
inc
cltd
clc
add
dec
xchg
test
push
mov
mov
pop
and
inc
clc
lock
cmpsl
mov
cmp
inc
out
pusha
aaa
das
insl
cmp
lcall
aas
cld
mov
lea
push
cld
fmull
push
jne
dec
push
sbb
imul
push
mov
sub
cmc
adc
jne
mov
test
sbb
data16
dec
mov
jns
arpl
mov
adc
fadds
arpl
imul
rol
jl
fcmovu
mov
push
cmp
bound
aaa
ret
mov
leave
adc
js
or
movsl
mov
push
cmpsb
xchg
mov
decl
cmp
repz
test
lds
and
push
fidivrl
xchg
pop
pop
in
repnz
lahf
jae
ret
or
popf
out
shlb
fucom
lret
lahf
cmp
repz
push
fstps
mov
gs
inc
sbb
int3
cld
outsb
jge
fidivl
sub
fistpll
daa
mov
jno
out
inc
fld
dec
pop
out
cmpsb
mov
repnz
mov
jecxz
lcall
test
int
adc
nop
mov
dec
and
xchg
jae
push
clc
test
xchg
add
popa
dec
xchg
jae
lahf
sub
adcb
std
jl
dec
lcall
lret
inc
cmp
pop
int3
or
pop
pop
ret
int
mov
addr16
adcb
cld
inc
inc
or
mov
or
inc
sub
or
jmp
ret
dec
sbb
stc
lds
in
das
adc
cmp
and
pop
push
cmp
shrb
subl
xchg
imul
adc
cmp
xchg
pop
fstl
sbb
mov
fnstcw
pusha
sub
push
dec
sub
xchg
pop
jle
sbb
adc
fcom
inc
ret
and
in
cwtl
inc
mov
xor
cli
popf
roll
fs
fwait
jg
lret
jbe
movsb
fwait
pop
orl
dec
stos
bound
inc
es
and
loop
sahf
stos
or
mov
mov
fistpll
xor
test
stos
push
out
jb
fwait
out
jmp
or
and
imul
loop
and
ret
jno
push
lcall
cmpsb
cmp
ljmp
cmp
pop
xlat
push
jne
mov
aaa
push
push
idiv
cmp
lods
push
insl
aad
cmp
scas
mov
insl
push
jns,pt
mov
push
test
cmp
or
adc
cli
aad
jbe
das
jbe
popf
repz
sub
jnp
ss
leave
out
sub
daa
sub
add
repnz
push
push
cmpsb
add
jge
pop
test
sub
sahf
mov
loop
xchg
sub
rclb
js
and
mov
loope
push
imul
rcr
mov
test
push
xor
test
inc
push
jns
add
stos
clc
scas
cs
fcomip
ds
push
and
xchg
cmpsb
or
add
cmpsl
jmp
insb
js
lods
and
fstpt
repnz
sub
fucompp
mov
out
pop
xor
xchg
dec
in
fisubrl
outsl
aaa
pop
pop
inc
int3
mov
push
sahf
js
sub
and
jge
dec
jnp
fwait
imul
stos
pusha
arpl
cmp
out
cmp
out
test
push
ljmp
mov
aaa
jmp
loopne
mov
jno
int3
insb
push
cmp
jl
sbb
cmc
xchg
dec
mov
push
repnz
scas
add
xor
divb
aas
pop
dec
dec
dec
test
cmp
xchg
jp
sbb
sub
push
and
jnp
jne
and
jmp
pushf
jno
int3
mov
mov
out
jmp
out
inc
mov
popf
fidivrs
dec
mov
dec
out
adc
and
outsl
xor
push
movl
imul
adc
mov
rcrb
adc
notb
arpl
push
clc
lahf
sub
scas
xlat
out
test
icebp
fcomp
lods
mov
mov
in
inc
shl
shl
sarb
cmp
adc
jns
and
divl
cld
adc
movsb
jne
inc
add
push
xchg
xchg
rol
dec
outsl
push
pop
das
negb
shll
pop
sti
inc
xchg
push
push
push
aad
inc
test
iret
std
mov
xchg
fwait
add
repnz
push
add
mov
dec
push
rcll
ja
es
out
jg
faddl
cwtl
test
loop
pop
fwait
push
mov
jge
aad
pop
push
push
seto
aad
lea
negl
movsl
mov
cmpsb
adc
dec
mov
jb
sub
leave
inc
stos
pop
movsl
inc
xor
lret
sbb
jge
loop
into
in
push
clc
gs
jno
adc
fistl
jecxz
fmul
jne
lds
daa
jbe
mov
leave
mov
fldt
and
xchg
mov
inc
cmc
ja
nop
mov
test
repz
lea
push
lock
dec
aas
shlb
les
xor
or
fists
imul
xchg
leave
adc
or
jle
add
dec
mov
push
out
addr16
pop
sub
test
push
test
mov
in
jg
dec
add
and
adcb
in
das
xchg
inc
std
call
mov
adc
pushf
lret
mov
dec
jecxz
push
xor
hlt
sbb
push
out
call
sub
dec
mov
sbb
mov
std
imul
adcl
mov
in
leave
and
dec
xchg
mov
mov
adc
pushf
push
jb
push
add
leave
inc
outsl
pop
fistl
lds
inc
jo
test
ret
adc
pushf
call
int3
vpunpcklwd
push
jo
mov
mov
test
cs
mov
ja
xchg
and
pushf
mov
add
push
mov
jb
lahf
test
nop
cmpb
inc
xor
adc
das
xor
mov
test
jb
out
aaa
cwtl
sub
mov
and
mov
jp
aad
fcmove
sti
test
arpl
subb
aas
cmpsb
ror
daa
lods
pop
in
push
adc
push
repz
scas
lret
test
stos
test
lcall
aas
push
rorl
cmpsb
xor
xor
cmp
inc
sub
fstl
mov
dec
or
pop
icebp
or
adc
sub
cmp
shll
jge
cmp
add
cwtl
mov
lret
inc
add
adcb
push
insl
and
cmp
push
shll
xchg
lahf
inc
mov
xchg
xor
and
je
xor
dec
sbb
call
mov
jl
adc
mov
roll
loopne
cmpsl
es
jbe
gs
pop
mov
daa
jb
subb
daa
jne
mul
mov
sbb
iret
adc
repnz
cmp
jns
paddw
sahf
ja
cmp
mov
fs
lods
sahf
pop
lret
mov
rcrl
aam
cs
out
call
lcall
cmpsb
sbb
popa
test
mov
jp
sbb
add
fs
enter
andl
push
test
mov
pop
std
sarl
fcomip
in
jl
or
push
jle
pop
and
inc
fnsave
jae
aas
fisubs
xchg
inc
rclb
mov
in
or
fidivl
sar
inc
sbb
push
mov
data16
pop
jae
adc
imul
or
jle
aas
mov
pusha
xchg
xor
mov
std
jecxz
std
mov
popf
cltd
in
cmp
dec
dec
or
mov
int
psubsw
mov
xchg
leave
bound
clc
into
mov
mov
aam
insb
pop
add
out
xchg
scas
mov
lods
outsb
sbb
lret
mov
loope
xchg
mov
out
jnp
add
mov
pushf
pop
rorl
fstps
out
inc
xchg
lods
shlb
lods
xchg
mov
cmpsb
iret
hlt
out
in
mov
inc
shlb
sbb
mov
and
lcall
xor
into
xchg
xchg
daa
mov
fidivrl
jns
pop
push
inc
pop
insb
xchg
and
mov
jmp
and
enter
bound
sbb
xchg
dec
dec
pop
jl
mov
or
loopne
fidivl
xchg
js
jle
divb
mov
out
jae
mov
push
pop
pop
fs
pop
ret
neg
sbb
addb
add
and
add
clc
mov
pop
xchg
data16
out
jle
and
mov
mov
popf
daa
pop
dec
shlb
jae
cs
pmaxub
mov
push
insl
leave
fidivrs
pop
jo
ds
mov
sbb
out
pop
sub
pop
or
jg
dec
out
add
ljmp
mov
sbb
ret
xchg
push
sahf
mov
insb
push
cmp
lahf
nop
arpl
and
es
xchg
imul
cmp
xchg
cmp
push
mov
push
cmp
dec
pop
jae
seta
rolb
movsb
mov
xchg
push
xchg
mov
or
push
divb
aad
stc
mov
cmp
jg
dec
insl
into
insl
mov
cmpsb
inc
fcomip
fs
push
mov
outsl
cmp
std
mov
mov
sbb
test
movsb
and
pop
lcall
jne
jp
cs
hlt
lret
imul
adc
pop
mov
shlb
inc
sbb
addr16
lcall
adc
scas
inc
enter
in
push
or
and
adc
mov
aam
mov
and
sub
and
shl
pusha
mov
int3
pop
mov
sbb
pop
cltd
push
mov
or
in
cmp
pop
or
sub
lea
out
sub
push
adc
mov
mov
jae
xchg
call
pop
arpl
arpl
inc
xchg
jnp
xlat
push
arpl
mov
mov
pop
push
push
sbb
lret
and
shll
std
pop
inc
iret
in
sub
push
adc
repnz
adc
pop
lret
dec
ret
pop
xchg
sti
cmp
cmpsl
fidivl
shlb
insl
pop
fstps
jecxz
jp
xchg
test
sub
dec
movsl
jns
mov
xor
jb
inc
xor
mov
lret
lods
inc
out
push
bound
cs
adc
mov
dec
movsb
je
mov
mov
add
xor
mov
gs
jb
cmp
mov
add
mulb
push
mov
xchg
ret
and
mov
and
mov
dec
dec
testl
ljmp
sbb
lret
fidivl
dec
fsubp
mov
adc
dec
daa
test
sti
mov
data16
ds
pop
push
in
mov
xor
rolb
out
cwtl
sub
mov
add
inc
push
sbb
lea
inc
xchg
pop
and
je
jo
daa
cmp
and
icebp
mov
push
jmp
push
stos
and
loopne
cmp
pusha
shrl
stos
shlb
dec
push
aam
inc
xor
ss
dec
out
repz
imul
xlat
enter
ret
mov
push
and
sbb
cmp
outsb
xor
inc
fwait
push
inc
arpl
data16
xor
xchg
rclb
add
imul
sub
lcall
jae
fs
adc
jno
ds
ljmp
jmp
mov
popf
sub
mov
cltd
imul
divl
cmp
inc
push
sub
xor
jp
aam
push
mov
inc
in
test
dec
jno
outsb
sti
mov
xlat
xor
int
gs
dec
dec
lea
jbe
js
mov
fnsave
adc
or
sbb
sti
push
mov
rolb
aaa
scas
xor
dec
cmpsl
loope
jge
adc
icebp
sbb
mov
jno
cli
popa
mov
xor
stc
push
jg
jbe
dec
adc
cli
and
dec
jae
hlt
stc
xchg
cli
cmp
add
aas
stc
mov
stos
push
xor
jb
adc
cltd
cmpsl
cmpsb
pop
aaa
imul
shll
pop
pop
adc
and
sbb
push
push
mov
jnp
xchg
cltd
adc
xor
jnp
shlb
popa
stc
cmpl
popf
cmp
adc
mov
lock
in
dec
mov
in
pop
mov
adc
cmp
and
jp
mov
imul
xlat
mov
cmp
rcrl
jns
sti
xchg
std
push
movsb
cmp
in
fsubl
xchg
ja
jnp
sbb
jp
and
insl
cmp
adc
push
dec
jns
and
fsubp
les
daa
js
fcoml
ljmp
and
xor
fwait
and
push
jns
pushf
lcall
frstor
negl
sub
dec
negb
lock
and
js
lea
dec
xlat
enter
rcrb
bound
fimull
sub
push
sub
dec
cltd
push
leave
call
mov
mov
jae
jns
inc
sbb
lock
xlat
in
xor
out
push
sub
mov
sub
insl
jae
cmp
repz
cmp
jmp
shlb
and
xor
mov
aam
adc
in
cmp
cmc
sub
or
ja
je
mov
mov
cmp
daa
lcall
and
scas
inc
lret
insb
les
jbe
hlt
pop
mov
jecxz
sarb
xchg
clc
mov
call
push
xchg
and
lods
jmp
mov
sbbl
ret
inc
aaa
lods
cs
cltd
insl
inc
lcall
pop
xchg
inc
cmp
mov
inc
add
jne
filds
scas
push
xchg
inc
popf
and
repnz
rorl
mov
mov
or
push
stos
add
pusha
in
or
adc
rcl
fldcw
les
jge
dec
andb
inc
aad
iret
jge,pn
iret
sbb
test
pop
xchg
inc
mov
jb
xchg
arpl
cpuid
mov
inc
and
fs
add
cmp
xchg
cmp
pop
mov
pop
dec
ljmp
imul
std
ret
dec
ret
xor
dec
inc
idivb
xchg
add
pop
int
mov
test
adc
bnd
inc
fwait
mov
jmp
repnz
and
std
dec
fs
addr16
leave
fwait
push
push
mov
push
rcrb
ja
pop
xchg
cmpsb
sub
fsubs
or
movsb
stc
cmp
hlt
push
fisubrs
push
leave
mov
mov
testl
cmp
push
bound
inc
push
decl
jns
mov
cmp
sbb
adc
cmpsl
roll
les
inc
cwtl
jp
pop
xchg
cltd
dec
adc
inc
or
call
into
mov
je
dec
pushf
out
push
or
lret
cmp
push
cmp
mov
sbb
ja
push
fbstp
aaa
test
sub
dec
mov
sub
sbb
mov
enter
jne
loope
mov
inc
leave
stos
xor
bound
xor
std
mov
and
sbb
fnstsw
outsl
mov
lods
dec
push
repz
nop
cmp
dec
test
dec
lret
pop
sahf
dec
jl
addr16
outsb
push
and
cmpb
dec
jmp
push
loopne
lods
ss
ja
leave
add
pop
adc
es
loope
cmc
sbb
jns
push
sahf
mov
es
loope
aam
cmp
clc
pop
push
add
cmp
mov
pop
jns,pt
and
cmp
fldt
mov
popa
es
pop
inc
pushf
ljmp
jl
lret
call
insl
xor
in
ds
jno
pop
xchg
aad
sbb
or
xlat
popa
shll
shl
mov
fldl
cmpsb
call
decb
mov
ficoms
xchg
je
xor
xor
out
jmp
inc
enter
scas
test
jb
movsl
int
inc
sub
imul
cwtl
sahf
ret
cmp
fs
pop
cmp
push
arpl
call
sbbb
cli
shl
jl
mov
xchg
sub
outsl
xchg
mov
in
fstps
mov
and
mov
pop
lret
lock
ljmp
lea
sarb
pop
pop
xor
movsl
mov
xor
add
fsubp
cmp
xchg
outsl
inc
lret
xchg
jg
sub
stos
fwait
push
xorl
inc
jmp
mov
mov
mov
stos
mov
dec
xorl
mov
push
xchg
les
inc
or
mov
adc
inc
mov
cmp
pop
fidivrl
add
and
mov
xchg
jle
stc
ret
inc
and
aam
pop
or
mov
int3
int3
xchg
pop
outsl
pop
scas
outsl
arpl
idivb
cmc
sub
inc
sub
pop
iret
xchg
std
frstor
int
jg
arpl
push
into
jno
test
mov
push
add
xchg
movsb
xor
out
mov
xchg
outsl
pop
int3
push
mov
out
in
jae
fiaddl
mov
cmp
sbbl
push
inc
mov
pop
mov
sbb
add
cmp
mov
movsl
mov
add
dec
lds
push
ret
or
jmp
in
insb
outsb
inc
add
mov
sbb
loope
adc
in
inc
xchg
adc
idivl
hlt
scas
shl
xchg
fcmovu
call
sub
ret
shr
inc
mov
imul
arpl
pop
add
sbb
outsl
rcrl
adc
mov
or
mov
mov
gs
sahf
xchg
cmpsl
cmp
and
pop
or
jge
out
mov
pusha
les
xchg
cmp
lea
sub
jo
pushf
pushf
sarl
xor
cli
lods
adc
mov
addb
mov
push
jno
xchg
fs
mov
rclb
xlat
cmpsb
cmp
push
cs
dec
pop
int3
mov
cwtl
fistl
pop
xchg
mov
out
xchg
cmp
testb
jg
shll
sub
jno
push
sub
cwtl
mov
jmp
addr16
negb
add
cmp
sbb
out
ret
add
sub
inc
cs
push
mov
sub
mov
or
inc
pop
adcl
adc
ds
xchg
std
adc
lcall
pop
jl
mov
cmpsb
clc
mov
or
push
xor
pop
push
out
mov
or
xor
sbbb
stos
cld
adc
fdivs
lcall
fistpl
aad
sarl
fcmovnu
rcll
mov
out
jno
daa
ss
mov
stc
movzwl
mov
pop
mov
inc
dec
adc
adc
pop
push
ret
push
enter
and
adc
jne
stos
sub
sub
jae
subb
fisttpll
jnp
mov
sahf
fldcw
mov
sti
outsl
xlat
into
call
cmp
jmp
add
add
lods
addr16
sarl
pop
out
test
mov
shrl
sub
or
push
inc
cs
addr16
mov
sbb
aas
lods
rcl
push
cs
les
push
sub
cld
and
inc
lahf
ds
call
and
ljmp
mov
jp
scas
test
jne
mov
cld
add
cld
ret
std
cmp
pop
loop
arpl
enter
mov
movsl
test
das
dec
fisttps
gs
jae
sbb
adc
shr
notl
jge
daa
shrb
pop
xchg
sub
imul
clc
dec
cs
sbb
hlt
push
in
xchg
lea
or
gs
dec
sbb
pop
data16
jl
enter
mov
fs
inc
pop
inc
xchg
in
sbb
rol
test
cmp
jb
aam
or
pusha
aas
inc
nop
sub
mov
adc
imul
scas
pop
jae
cmp
aad
cmp
dec
data16
jecxz
lea
cmpsl
xchg
out
xorb
jge
fstl
dec
dec
push
int3
mov
mov
iret
in
das
dec
jns
imul
push
repnz
scas
rorb
pop
mov
int
pushf
mov
adc
mov
stos
test
out
les
or
insl
push
xchg
loope
test
dec
pusha
rcrl
insb
lock
sub
loop
xchg
xor
inc
push
ja
jb
fiadds
nop
mov
aas
std
jne
sahf
jmp
jp
sub
std
xor
fcomps
test
push
or
cmp
call
popf
bound
orb
gs
out
aam
aas
mov
rcrl
and
bound
push
mov
inc
mov
jne
arpl
jecxz
dec
fcmovne
test
push
arpl
faddl
aaa
push
mov
in
mov
mov
push
xchg
or
iret
push
fisubl
enter
xchg
stos
loopne
fwait
scas
sub
adc
or
movsl
es
or
popf
add
pop
aas
pop
mov
cmp
enter
hlt
and
stc
jp
mov
imul
cmpsb
add
jp
push
aas
mov
xchg
cmpsl
subb
cld
dec
mov
int3
jnp
jne
popf
cmpsl
mov
aad
pop
push
mov
mov
push
icebp
movsb
push
jnp
dec
mov
iret
push
inc
jl
dec
mov
mov
dec
inc
js
jge
int
loop
outsl
jg
jo
mov
sub
rep
mov
imul
xchg
mov
cmc
aam
leave
push
addr16
pop
fldcw
loope
fisttpll
lds
data16
sti
inc
sbb
clc
arpl
push
mov
imul
inc
aas
ror
loope
mov
xor
mov
dec
and
cmp
lds
test
inc
fiaddl
push
sarb
xor
fstpl
cmp
iret
rcrb
xchg
test
aad
leave
divl
out
xchg
loopne
pop
xchg
cltd
enter
xor
cwtl
sti
dec
and
sub
gs
outsb
mov
sbb
xchg
fwait
lds
scas
stc
call
std
cmpsl
popf
pop
jecxz
fimuls
mov
or
pop
push
cltd
sbb
pop
xchg
insl
xchg
cld
sub
out
pop
jae
cmc
sbb
aas
in
xchg
cmp
cmp
fists
or
js
testb
shll
sbb
mov
pop
push
mov
mov
daa
add
sbbl
mov
insl
jns
lahf
ljmp
iret
imul
jmp
fsubs
idivl
or
jl
into
aaa
sbb
sbb
xchg
repz
fistl
ds
mov
inc
test
pop
dec
lret
ret
adc
and
jbe
pop
push
nop
fiaddl
pop
scas
shrb
jecxz
out
jmp
xchg
and
pop
mov
cmpsb
jbe
xchg
pop
jge
lea
push
cmp
push
add
popa
adcl
add
dec
sbb
lcall
dec
mov
loop
jmp
cmp
ss
or
mov
out
pop
and
lahf
mov
lret
and
sbb
rolb
cmp
pop
jle
fdivrl
cmp
mov
mov
sti
sbb
daa
outsb
xchg
xchg
lea
lahf
add
in
xchg
pop
mov
push
mov
cmpsb
xor
mov
sub
std
pusha
mov
mov
addr16
notl
adc
ficompl
jp
in
xchg
pop
popf
push
icebp
loope
sbb
mov
ficompl
inc
cmc
inc
cmc
mov
or
orl
mov
sub
clc
testb
popa
dec
lret
jae
mov
ja
jno
mov
cmpps
cld
aad
mov
cmp
pop
frstor
scas
cmpl
xor
jnp
shl
push
xchg
mov
sub
jge
imul
xchg
or
adc
lea
lahf
cltd
mov
pop
aam
insb
mov
inc
adc
clc
je
jp
shlb
cmpsb
or
paddd
orl
mov
and
push
lea
repz
dec
fstps
lret
jno
loope
pop
sub
add
xchg
sub
cmpsl
pop
sbb
mov
dec
fidivl
ljmp
push
mov
inc
stos
mov
xchg
or
outsb
mov
insb
jo
movsb
mov
mov
xchg
js
movsl
xchg
test
push
xchg
cwtl
test
into
cs
in
push
mov
mov
sub
jnp
lea
test
or
mov
ret
ss
mov
or
cmp
jnp
je
bound
scas
in
fidivrl
dec
xchg
sbb
mov
mov
push
sub
jl
ds
xor
mov
jge
sub
dec
cwtl
inc
mov
pop
lcall
push
int
xchg
add
movsb
mov
aam
movsb
pop
dec
mov
push
mov
push
scas
arpl
fldl
test
imul
out
loopne
out
insb
jle
test
test
data16
xchg
dec
push
out
inc
outsl
mov
push
dec
mov
jmp
mov
adc
test
fcompl
or
mov
movsl
jo
rcl
mov
test
inc
adc
inc
lahf
adc
roll
cwtl
fidivrs
cmc
lcall
gs
mov
push
dec
mov
inc
inc
std
cmpsl
jl
pop
pop
std
cltd
mov
adc
push
ficomps
dec
fimull
jge
jecxz
rolb
pop
jge
xchg
add
arpl
ds
ret
call
jge
mov
pop
pop
xchg
sub
popf
clc
ljmp
adc
push
push
sub
cmp
sub
jno
and
xor
sub
movsl
call
jo
in
dec
ret
push
cmc
push
shrl
push
cmpl
xor
pusha
xchg
mov
mov
mov
mov
mov
jne
sbb
in
rclb
ret
pop
ljmp
mov
pushf
arpl
lret
mov
inc
inc
xor
sbb
fcos
or
lea
mov
lods
ror
test
das
fs
mov
ja
testl
and
sbb
mov
add
clc
add
mov
pop
jp
aas
out
push
push
inc
inc
mov
enter
fwait
cmp
test
mov
inc
fwait
push
mov
and
rcrb
pop
inc
cs
sti
add
lcall
jns
loope
inc
dec
clc
sbb
aad
dec
lods
jl
shll
cmp
sahf
mov
xor
xchg
push
mov
adc
xchg
pop
or
add
ljmp
dec
fnsave
fs
test
hlt
pusha
xor
pop
cmp
je
xor
in
mov
xchg
cmp
jge
jns
pop
add
jmp
jns
dec
xor
cmc
cmp
push
xlat
xchg
lock
or
add
or
rcll
xchg
test
mov
xor
xor
add
dec
lcall
ss
cmp
sar
into
sbb
xchg
and
pop
xor
out
gs
mov
insb
cli
rcl
pop
push
lret
mov
pop
inc
mov
and
xchg
repz
negb
xor
dec
in
stos
or
xchg
js
adc
mov
xchg
icebp
nop
jl
dec
js
jp
sub
in
test
cltd
pop
or
and
pop
aas
adc
fisubrs
fstps
fimull
mov
xor
fsubrl
pop
mov
pop
push
flds
in
mov
std
cmp
jbe
insb
jo
rorb
repnz
lahf
adc
pop
inc
push
pop
jne
add
xor
mov
ret
mov
xor
stc
cmp
push
jae
sahf
mov
test
inc
jae
push
incb
repnz
bound
jg
lret
xor
insb
addr16
sub
pop
jge
shll
rolb
sub
je
out
jmp
xor
push
insb
fsts
dec
dec
scas
mov
cld
mov
pusha
xchg
inc
pop
add
jle
jmp
into
shlb
add
cmpb
popl
lds
jb
xchg
cmp
lcall
and
roll
lock
cltd
xchg
cld
rcll
adc
daa
scas
mov
stos
or
sub
dec
iret
mov
shl
fstl
jg
push
clc
add
add
jb
rcrl
or
jg
roll
mov
pop
mov
inc
mov
test
or
faddl
sub
add
sub
or
adc
xchg
or
scas
insb
test
mov
arpl
cmp
icebp
in
popa
hlt
movl
dec
bnd
stos
or
int
lds
sub
dec
ret
stos
ss
loopne
and
andb
arpl
mov
stc
or
stos
and
cmovnp
sub
inc
fdivp
pop
lahf
out
mov
jg
vmovaps
cli
out
rcl
fdivl
push
shr
jecxz
out
repz
pop
or
or
pop
jp
adc
sbb
add
arpl
fdivl
sbb
ret
std
cmp
test
shl
lods
js
popf
jp
icebp
jle
sub
push
mov
scas
push
prefetch
or
inc
cmp
xor
test
inc
sub
mov
aaa
jne
and
cmpsb
cwtl
cmp
xor
inc
sbb
jb
hlt
aam
fsubrl
lds
xchg
call
in
cs
popa
mov
loope
push
shr
xchg
cmp
int
js
jo
cmp
fcoms
rolb
stc
cmp
iret
stc
test
dec
xchg
mov
aas
push
mov
outsl
fnstenv
cmp
fwait
sahf
lds
in
pop
cmp
shlb
xchg
rolb
add
test
inc
mov
loopne
inc
ljmp
pop
in
rorb
cmp
dec
add
add
stc
scas
out
popf
jae
jecxz
pop
lahf
out
jne
fs
popa
push
imul
cmpsb
loop
test
mov
mov
xchg
dec
sti
aas
mov
cmp
mov
rcll
inc
add
jge
mov
pop
int3
xchg
and
push
lcall
xor
xchg
aas
in
js
xor
dec
shrl
dec
mov
add
add
xchg
mov
xlat
mov
outsb
and
xchg
clc
andb
insl
push
mov
das
repz
jge
sti
lock
lods
mov
sarb
and
xor
push
imul
mov
arpl
pop
cmp
xlat
or
mov
arpl
cmp
mov
int3
movsb
insb
push
adc
xlat
je
mov
jns
mov
aas
mov
idivb
jbe
loopne
lret
mov
sub
cs
cmp
addr16
xchg
mov
mov
jg
outsb
gs
and
and
in
pop
xchg
leave
shlb
outsl
es
sahf
hlt
dec
xlat
cmpsl
jns
popf
or
xor
test
mov
jp
into
jae
pop
test
sti
mov
aad
leave
in
pop
aaa
cmp
mov
into
cs
clc
call
dec
repz
ja
mov
pop
add
push
xor
cwtl
std
dec
rorb
push
aam
bound
ja
xlat
fstps
jle
dec
in
sbb
or
es
es
add
mov
xor
insl
into
or
imul
cmp
xchg
popf
cmp
and
imul
sub
adc
fistl
lods
and
sahf
mov
out
pop
xchg
push
in
sti
push
sbb
rcl
xchg
lods
xchg
push
out
push
lods
jae
mov
orb
scas
cltd
pop
pop
outsl
or
in
add
cld
cmp
push
xor
and
xor
mov
mov
inc
xor
repnz
daa
cld
pop
loopne
mov
cltd
scas
and
je
rclb
xor
loopne
fidivs
ret
std
dec
jb
es
inc
ds
adc
and
loopne
inc
xlat
jno
insb
mov
xchg
hlt
mov
iret
cwtl
mov
fdivrl
mov
sbb
shll
into
jmp
xchg
mov
fcomps
testb
lods
je
outsb
movsb
ret
xchg
insl
pop
sub
test
sbb
insb
mov
pusha
xchg
sar
add
xchg
jl
adcl
sub
iret
jmp
rcr
jno
adc
ds
scas
jno
jo
push
fbld
mov
ficomps
dec
sub
hlt
fmull
pop
mov
cmc
repz
call
xchg
pusha
add
shrl
rol
cmp
jb
adcb
popa
loop
fwait
popf
mov
xchg
rorb
stos
add
sbb
sub
and
mov
out
jb
adc
lods
mov
mov
and
or
push
in
rcll
xor
cli
inc
cmp
ja
mov
and
mov
jp
mov
mov
mov
stc
push
js
push
dec
mov
cmp
or
stos
cmc
pop
sub
sbb
cmp
js
jmp
and
popf
bound
xchg
in
add
jns
ret
mov
testl
lahf
or
xchg
xor
in
call
aam
rorb
mov
call
xchg
mov
cs
and
lea
mov
push
add
stos
call
scas
sub
mov
mov
xchg
adc
cmp
std
mov
into
add
xchg
push
jbe
and
or
pop
test
mov
sub
lcall
push
into
addr16
test
pop
mov
or
or
xchg
aas
mov
or
pop
sub
push
test
adc
xchg
xchg
jb
mov
jo
xor
push
push
ret
int3
cmp
lea
and
mov
lret
out
adcl
stos
sbb
ret
xor
push
or
fsubs
adc
rcl
cmp
mov
sub
jecxz
fwait
sub
mov
not
inc
cmp
and
jle
pop
or
in
fisubrl
dec
mov
sub
les
xor
ds
lcall
mov
fcomps
sub
std
pop
mov
pop
add
int3
lahf
imul
cmp
cmpsl
xchg
ds
or
cmc
push
xchg
or
loop
enter
aam
test
xor
sti
push
pop
sbb
mov
pop
loopne
sub
adc
dec
mulb
push
loope
aam
push
loope
mov
fsubrl
and
into
shr
dec
sub
sub
scas
imul
jle
jns
psadbw
mov
popa
push
xor
push
enter
je
repz
lcall
mov
xchg
dec
imul
inc
mov
and
mov
sub
dec
or
scas
js
es
cmpsb
cltd
stos
lods
add
pop
xchg
mov
or
imul
jecxz
pop
jae
mov
jb
sbb
pop
inc
inc
mov
sbb
cmc
mov
mov
sti
jns
or
sarb
mov
mov
fmull
aas
cmp
xchg
pop
lock
or
sti
gs
hlt
iretw
cmp
jne
lds
lret
es
sub
hlt
mov
adc
enter
clc
and
lods
adc
cwtl
iret
mov
mov
mov
or
cmp
cld
jo
jl
roll
test
xlat
cs
dec
cli
and
pop
adc
scas
push
es
out
push
lcall
out
jno
pop
pop
pop
fcomps
adc
adc
loope
xchg
sarb
outsb
xor
adc
jne
aaa
aas
push
stc
xchg
dec
jnp
pop
sahf
inc
xor
push
negl
mov
ficoml
jb
cwtl
or
int3
jbe
lret
push
cltd
adc
bound
mov
fdivp
ret
mov
jo
fcompl
icebp
add
xchg
data16
cmp
fistpll
mov
vhsubps
inc
aaa
or
or
cli
xor
loopne
mov
sub
je
pop
sbb
sbb
in
inc
dec
mov
in
xchg
rolb
inc
xchg
lock
add
mov
pop
test
mov
jge
subb
fstps
xor
aas
xlat
sub
ss
pop
popa
sub
int3
fbld
adc
imul
cmp
xchg
fisubrs
outsb
nop
enter
push
sahf
sub
mov
imul
cmp
adc
cmpsb
or
nop
out
shrb
cmp
stos
inc
cmp
dec
test
call
cld
jmp
clc
sbb
lcall
inc
shlb
sti
and
cmpsl
lret
add
scas
nop
sub
testl
push
lret
add
xor
sbb
sbb
faddl
popf
fildll
xorb
cmp
add
icebp
push
pop
sbb
add
mov
push
or
cmp
add
push
mov
jle
mov
xchg
xor
xor
cwtl
add
inc
lock
mov
or
repz
pop
lods
sti
aas
pop
push
lcall
mov
inc
sbb
cmc
or
cli
mov
push
xchg
incb
cmp
popf
mov
pop
bnd
jno
mov
mov
loopne
jb
or
insl
mov
lret
jge
pop
ja
push
adc
pushf
mov
pop
loope
or
sub
mov
jnp
dec
test
out
inc
aas
frstor
pushf
fstpt
decl
jnp
adc
and
ret
call
xchg
mov
mov
push
sbb
mov
shrl
or
rcl
mov
jb
rcrb
in
inc
adcb
icebp
dec
sub
xchg
xor
scas
jg
mov
cmpsl
sub
mov
sarb
ja
aam
popa
ret
pushf
dec
add
sub
or
jb
jne
in
or
ds
cs
insl
jl,pt
mov
xor
cs
test
jb
lea
cmpsb
xor
jg
out
cmp
hlt
test
pushf
movsb
cli
loopne
popa
outsb
and
mov
pop
sub
sbbb
xchg
mov
mov
dec
std
mov
jne
mov
loope
sbb
imul
cmpl
sub
lods
dec
jecxz
push
dec
add
scas
add
lods
or
sub
fisubl
test
fldl
ljmp
cmp
mov
mov
rol
mov
int
fnstcw
nop
dec
jns
js
shlb
xchg
add
jg
xchg
testl
sub
shrl
xor
cli
std
shlb
mov
imul
xchg
insb
sub
pop
sahf
mov
pushf
lret
arpl
mov
push
pop
add
lods
aas
icebp
jl
adc
das
push
aad
mov
loope
add
adc
mov
sub
inc
jp
push
loopne
xor
data16
inc
shrl
imul
lcall
push
lcall
test
xchg
scas
fsubrs
cli
dec
push
out
loop
out
and
pop
inc
aam
loopne
imul
dec
xchg
leave
fstp
mov
jne
movsb
rcl
and
out
push
aaa
aaa
in
std
cmp
sbb
pop
sub
mov
int3
aaa
cmp
inc
rorb
or
jmp
clc
clc
inc
cmp
in
add
scas
insl
aam
ret
icebp
aaa
mov
sub
lahf
jno
cmp
lods
jmp
arpl
sti
test
sbbb
aas
sub
push
mov
push
mov
or
or
std
mov
dec
iret
sub
mov
in
outsl
or
xlat
mov
sub
stc
push
addb
out
pushf
test
ret
pop
add
outsb
lock
push
repnz
pop
jmp
mov
xor
dec
bnd
inc
fidivrl
lahf
jns
add
insl
dec
cmpsl
ja
test
fwait
in
arpl
jp
dec
sbb
mov
movsl
enter
jg
jo
fwait
cmp
xchg
in
sbb
and
adcb
push
imul
mov
aam
decl
push
or
mov
stos
icebp
add
sub
add
in
cwtl
fs
insl
cmp
int3
dec
jbe
fisubrl
mov
jecxz
popf
jb
jle
mov
cmpsb
jbe
push
mov
out
sbbl
mov
mov
push
sbb
in
cli
int3
mov
fnstenv
ret
pop
push
ret
sti
mov
add
int3
mov
add
inc
outsl
jno
mov
hlt
dec
xchg
pushf
add
or
lcall
or
enter
fidivrl
mov
xchg
push
cmpsl
ss
mov
cld
mov
mov
shlb
cmp
lret
insl
xor
scas
jo
jo
popa
inc
and
jge
out
scas
stc
fsubl
adc
stc
dec
xchg
out
push
cmp
enter
data16
adc
xchg
ret
popf
insl
popf
lock
cmp
gs
mov
add
xor
dec
push
or
push
or
fimull
or
adc
je
stos
ret
scas
mov
push
push
cmp
dec
inc
lcall
xor
scas
sahf
add
popa
rcrl
sub
pop
jne
lock
jle
lock
loopnew
push
push
mov
push
lds
dec
into
xchg
ljmp
insl
mov
fs
stos
lcall
and
pusha
imul
pop
adc
faddl
ja
ss
cmpsl
dec
cmp
fbstp
xor
xor
je
adc
sbb
xor
pop
in
lock
mov
sbb
adc
jno
inc
dec
cltd
mov
or
filds
xchg
push
ljmp
out
inc
les
mov
xchg
outsb
push
inc
aam
icebp
mov
xor
sahf
push
jmp
pop
scas
leave
popa
push
jecxz
add
loopne
ja
cs
mov
clc
testl
lahf
mov
pop
rclb
mov
xchg
mov
mov
mov
jno
push
xchg
dec
add
jp
test
jecxz
sub
mov
into
xchg
sbb
jbe
pop
inc
aad
or
sbb
mov
cmp
inc
push
hlt
in
addr16
adc
mov
adc
clc
hlt
jno
cmp
inc
loope
cmc
mov
int3
cmc
and
mov
mov
cmp
stos
mov
dec
out
es
lds
inc
mov
inc
sub
out
cld
adc
mov
rorl
jne
xchg
jge
mov
mov
sbb
dec
jns
push
mov
gs
lods
icebp
rcrb
cmp
imul
jge
leave
adc
xchg
roll
xor
dec
pop
rcl
jl
and
jmp
fisubs
loope
shrl
je
std
dec
mov
inc
inc
data16
and
inc
mov
sub
xor
movsl
test
inc
sbb
movhps
xchg
xor
jge
dec
clc
inc
fucomi
adc
jecxz
imul
mov
dec
cmpsb
in
mov
pop
jo
jae
mov
push
jae
idivl
jecxz
cmp
aad
sarb
mov
mov
adc
mov
lods
movsl
mov
lods
les
xchg
pop
push
add
fcoms
ja
push
or
mov
or
or
mov
rolb
ret
data16
mov
adc
adc
lahf
lds
fnstenv
xchg
jb
dec
push
je
cwtl
sub
sub
imul
mov
data16
mov
xor
sub
pop
aad
jg
sub
aam
sub
in
mov
js
inc
push
mov
out
xor
lahf
mov
mov
inc
and
push
pop
les
xchg
ret
xchg
inc
xor
test
cmp
in
addr16
pop
mov
mov
sub
jnp
loope
and
add
loopne
and
inc
pop
addb
sub
aas
ljmp
ss
jne
int3
jo
adc
jo
fwait
cmpl
xchg
push
pushf
xor
stos
push
imul
hlt
dec
mov
jmp
pushf
rcrb
test
mov
xchg
fmull
mov
pop
loop
fidivl
int3
or
mov
mov
int3
rorb
mov
pop
inc
ss
push
and
jle
je
lds
inc
loope
loop
lods
mov
inc
stos
in
pop
das
mov
arpl
xlat
pop
xor
and
and
adcb
and
test
sub
jns
test
inc
jbe
repz
jns
pop
xchg
mov
orb
adc
dec
mov
push
jne
repnz
fiaddl
add
jo
sbb
xchg
mov
aad
imul
add
xchg
mov
mov
scas
sbb
sub
dec
add
or
xchg
push
add
xchg
or
jecxz
mov
jmp
xor
dec
mov
stos
jnp
insl
insb
mov
pop
jne
xlat
push
cmp
shll
insb
clc
shll
jbe
jnp
adc
mov
pop
loop
jbe
js
jge
xchg
xor
testb
xor
shll
xchg
insb
adcl
jl
ljmp
dec
xchg
add
pop
adcb
nop
fildll
inc
rorl
pop
jge
addl
in
imul
bswap
xlat
push
popf
test
out
pop
aas
cltd
test
lock
dec
inc
and
mov
pop
mov
pop
cmove
aad
test
add
and
sub
mov
mov
or
mov
pop
out
stos
test
loopne
adc
clc
in
imul
popa
fidivl
cmp
mov
out
or
inc
sub
adc
cmp
shrb
fcmove
sbb
mov
or
ret
mov
repz
and
stos
imul
lods
or
sub
sbb
sbb
xor
xorl
xchg
xchg
fbld
xchg
gs
sti
add
adc
jle
ds
out
xlat
imul
sarl
pop
push
cmp
pop
and
out
lea
xor
fs
ror
cmp
dec
nop
jmp
test
out
andl
pushf
ret
sbb
call
and
jle
xor
and
mov
stos
xlat
xchg
call
insl
dec
dec
mov
push
rcr
shrb
push
call
dec
jmp
cmp
pop
nop
mov
jmp
fld
sbbl
jmp
punpcklbw
or
sub
insb
and
or
dec
loope
inc
pop
xchg
std
imul
jns
jne
ljmp
lds
inc
fiadds
dec
jo
and
test
push
xchg
adc
std
mov
inc
xchg
sbb
test
fistpl
inc
jecxz
shl
testb
pop
das
cli
inc
cmp
mov
sub
arpl
and
or
pop
sub
and
jne
jle
mov
xchg
gs
sbb
lcall
mov
add
cmpsl
push
jb,pn
test
loop
and
data16
mov
loopne
jb
push
add
insl
mov
loop
clc
jnp
push
fiadds
gs
xor
push
iret
jg
mov
sub
lods
add
sbb
jo
sbb
repz
push
add
mov
lret
sbb
fidivrs
push
repz
dec
cld
scas
jge
fdivl
xor
push
mov
leave
clc
sahf
das
push
ret
mov
out
mov
sar
decb
xor
test
cwtl
ret
inc
jle
dec
pop
imul
scas
mov
mov
sub
test
push
nop
stos
sbb
enter
xor
and
jnp
std
push
shl
xchg
mov
mov
stos
mov
push
in
push
lahf
and
mov
test
or
mov
aam
pusha
test
or
push
loopne
mov
aas
sbb
and
cli
in
gs
test
jmp
adc
lock
jmp
out
popf
das
daa
adc
xor
inc
enter
mov
pop
cltd
sbb
insl
lods
and
pop
popa
sub
cmp
mov
mov
mov
mov
cmpsb
outsb
cmp
dec
call
inc
fs
orb
mov
cmc
push
jb
std
scas
pop
sub
movsl
std
mov
add
or
pusha
xchg
add
inc
outsb
sbb
leave
xchg
imul
push
inc
or
jbe
jg
leave
lea
mov
xchg
cld
shlb
fimuls
jnp
mov
imul
fcoms
add
arpl
xor
dec
sbb
push
fwait
and
pop
mov
out
push
lcall
lods
insb
imul
aas
mov
lods
lret
lds
aas
mov
jno
fwait
pop
xchg
aaa
jge
xchg
shll
ss
nop
enter
or
mov
sti
jae
loopne
lahf
mov
add
push
loop
push
cmc
inc
add
push
xchg
ret
les
add
or
dec
and
movsb
inc
hlt
in
pop
inc
sbb
repnz
aaa
in
hlt
xor
stc
nop
insb
push
or
pop
mov
mov
sbbb
gs
mov
or
insl
push
incb
mov
fistl
xchg
dec
aad
fnstcw
ss
ljmp
into
xor
test
lret
push
mov
rol
xchg
mov
xchg
sbb
stc
push
push
mov
xchg
fnsave
insl
push
stc
fimuls
das
mov
pop
hlt
test
insb
push
add
rorl
sub
stc
push
adc
movsl
add
cmp
lcall
test
pop
jp
mov
mov
cwtl
je
cld
lock
pop
aad
add
xchg
insl
mov
cwtl
cmp
aas
rol
sbb
push
outsb
mov
clc
xchg
popa
insl
fbstp
lods
mov
xchg
xchg
ljmp
or
popa
in
sbb
fprem1
test
pushf
fnsave
or
xor
push
lret
cli
dec
fisubrl
scas
jno
daa
mov
or
dec
sbb
xor
lcall
sub
adc
sbb
pop
mov
es
pop
call
xchg
repz
gs
inc
popw
mov
mov
popa
and
inc
jle
cmpsl
repnz
add
ret
js
shl
jg
adc
sbb
dec
xchg
faddl
ret
iret
pop
movsl
or
les
jle
out
fdivs
mov
mov
inc
add
ljmp
ret
rolb
es
shr
jbe
addr16
sub
push
inc
outsl
adc
jge
push
mov
arpl
repz
fs
mov
or
movsl
pop
xchg
push
movsl
jge
in
push
jmp
lcall
push
mov
stos
pop
insl
fs
das
mov
jbe
pop
push
pop
clc
roll
and
pusha
sub
fdivrs
test
mov
mov
test
lods
mov
add
pusha
inc
xor
rcrb
inc
fnstsw
scas
js
subps
mov
and
inc
pop
inc
sub
ljmp
lcall
fldcw
xchg
pushf
repnz
pop
outsb
cmc
pop
push
sub
in
adc
test
inc
dec
add
movsl
jnp
sub
inc
popf
mov
cmpsl
call
mov
mov
movsl
push
std
xor
mov
repnz
icebp
notb
sub
lods
add
mov
sub
mov
pop
orl
inc
icebp
dec
loop
adc
inc
xchg
lcall
stos
adc
cmpsb
jp
cmp
je
inc
xchg
out
lret
mov
jle
insl
mov
push
or
push
test
mov
mov
das
rcr
in
repz
xor
push
xchg
into
into
pop
mov
mov
pop
test
xor
ja
popf
adc
test
mov
repnz
sbb
jnp
push
and
xchg
stos
adcb
inc
jmp
adc
pop
lcall
repnz
lods
dec
mov
xchg
push
cltd
xchg
mov
popf
add
inc
inc
loop
leave
icebp
pop
pop
in
adc
jmp
pushf
dec
aaa
dec
jl
and
and
push
pop
scas
rorl
add
bound
and
ds
rcrb
mov
mov
ret
or
ss
fmul
fcoml
mov
push
fadds
mov
stos
mov
sbb
mov
jb
jnp
in
jg
pop
cmp
mov
xchg
sbb
rcll
bound
cmpl
and
mov
popa
mov
push
adc
dec
push
int3
fdivs
fyl2x
mov
lea
and
xchg
xor
inc
cmpb
divl
inc
inc
jl
mov
int
push
sbb
mov
cltd
and
add
out
lret
mov
fimull
jecxz
xchg
icebp
int
rcrb
enter
push
data16
mov
mov
add
pop
scas
in
gs
out
mov
cld
xchg
and
es
fcomi
push
fldt
lahf
outsl
ds
cs
jmp
popf
addl
rolb
jnp
aam
lcall
loopne
sahf
popf
push
lods
mov
mov
xor
push
cmp
mov
xor
fdivr
jbe
xchg
jb
xlat
mov
pop
push
enter
mov
fwait
ret
lods
mov
or
sahf
ret
test
and
mov
push
std
fsubl
stos
lret
mov
scas
mov
mov
and
or
adc
mov
int
dec
sbb
xor
call
add
aas
xor
das
pop
dec
in
pop
stos
mov
aas
ss
push
and
cmp
inc
stos
aaa
mov
fstpl
add
scas
adcb
xor
stc
adc
mov
bound
push
test
pusha
loope
xchg
arpl
cwtl
inc
add
add
jg
sub
int3
dec
cli
pop
inc
enter
sbb
in
jo
xchg
movsb
je
pushf
dec
fdivrl
lock
and
ss
pop
adc
clc
jne
repnz
insb
or
shlb
dec
out
jecxz
xchg
mov
pop
sub
jmp
jb
fnstenv
inc
ss
sub
lcall
pusha
mov
mov
daa
divb
mov
jb
dec
and
lcall
jmp
xchg
or
jmp
cltd
enter
sub
xlat
cmpsb
or
pop
cmp
jge
fwait
sbb
or
mov
ljmp
dec
or
xor
xor
test
fisttpl
pop
mov
pop
push
in
mov
xchg
js
pop
aas
push
out
mov
dec
icebp
fbstp
push
cmp
cmc
bound
aaa
push
inc
test
fdivs
xor
cmp
jecxz
mov
loope
xchg
adc
cmp
mov
cmp
jno
or
test
push
or
std
lea
cltd
addr16
scas
cltd
sub
inc
int
ud2
and
push
jmp
test
std
sbb
xchg
daa
jbe
sbb
sub
icebp
test
es
std
das
cmp
mov
dec
test
rol
jmp
lahf
xchg
mov
mov
xchg
and
adc
leave
jl
loop
sbb
mov
clc
push
rorl
nop
cmpsb
lds
imul
fsubr
stos
les
sbbl
and
inc
int
mov
mov
mov
mov
andb
pop
and
mov
push
jb
cmp
inc
mov
xor
mov
pop
aaa
shll
cmp
sub
mov
mov
rcll
and
push
dec
mov
push
jae
movsl
je
pusha
gs
test
cmpsb
in
mov
adc
insl
mov
xchg
mov
jo
out
cmp
push
js
repz
jmp
adc
mov
lret
pop
les
xlat
jbe
xchg
add
out
mov
clc
clc
icebp
sbb
sub
sbb
mov
roll
addr16
sbb
std
out
rcll
adc
dec
arpl
in
mov
sbb
cmp
pop
xor
xor
or
push
jp
xor
jae
inc
lea
fcmovnu
and
cwtl
add
scas
mov
fisubs
outsb
out
jbe
jnp
jle
jg
mov
sub
inc
stos
mov
mov
outsb
inc
inc
cmp
arpl
lret
cmp
fcmovne
jp
outsb
in
int
cld
ljmp
fwait
or
addr16
sub
pop
in
xorl
sahf
pop
mov
pop
pop
xor
js
mov
jae
mov
inc
and
mov
xor
outsl
mov
mov
xor
sub
inc
mov
xor
in
test
and
lods
subb
cmp
mov
xor
mov
daa
dec
adc
push
in
pushf
cmp
mov
mov
pop
sbb
dec
ret
fistps
imul
jnp
xor
or
cmp
sbb
hlt
sub
pop
lahf
sbb
mull
testb
scas
adc
xor
aas
int
sarb
mov
orb
xor
mov
xchg
imul
inc
cli
adc
aas
and
mov
enter
jge
hlt
leave
test
sub
inc
push
fwait
icebp
push
jg
ret
pop
mov
jecxz
loope
or
ficoml
repnz
les
xchg
or
mov
cmp
pop
sub
int
dec
lcall
into
cltd
test
jo
in
js
cmp
jae
inc
das
fildll
push
add
enter
pop
dec
mov
mov
pusha
fbld
pop
cmc
xchg
xchg
stc
test
add
mov
add
fcompl
repnz
push
and
xchg
mov
repnz
dec
jmp
jp
mul
lods
sub
sbb
mov
pop
mov
sub
fiadds
jns
jge
hlt
and
and
into
out
and
push
movb
cld
aas
xor
popa
test
imul
sbb
xchg
dec
jnp
insl
pushf
cld
or
xchg
mov
and
jecxz
mov
scas
ds
shrb
cmp
and
xchg
sub
rcll
pop
pop
insl
loope
jmp
inc
fs
fstpt
repz
cmp
fmulp
jnp
mov
or
jecxz
inc
pop
cmp
adc
xchg
sti
rcrb
fmulp
negl
cwtl
loop
push
jno
pop
cmpsl
push
jo
mov
mov
ljmp
xchg
mov
lcall
orb
pop
out
cli
pusha
add
jne
cmp
mov
and
pop
mov
cmp
add
xlat
add
mov
add
xchg
in
pop
push
movsb
xor
rolb
push
push
sub
jecxz
ljmp
sub
mov
hlt
adcb
or
xor
stc
int3
push
jno
dec
std
sub
xchg
orl
sub
pushf
add
adc
xchg
sbb
int3
sbb
mov
test
sub
or
push
lcall
jle
imul
xor
test
xchg
xchg
scas
pusha
inc
dec
loope
cwtl
sbb
add
je
mov
pop
cli
clc
cli
aad
nop
inc
in
negb
ljmp
jl
int
sti
pop
mov
sbb
mov
pop
adc
mov
leave
jno
jle
insl
xchg
xchg
je
mov
pop
pushf
es
repz
jl
mov
fld
mov
xor
fsubrl
rol
cld
enter
mov
mov
shr
repnz
loopne
sbb
push
pop
jo
push
adc
cmp
lods
sti
cmp
data16
mov
jp
fldt
test
sbb
and
jb
rep
adc
das
sub
data16
or
pusha
inc
fmuls
sub
ja
push
and
imul
sbb
cwtl
xchg
repnz
jl
and
push
fsincos
in
mov
out
pop
shl
shlb
mov
dec
mull
sbb
test
xor
add
pop
mov
daa
pop
outsl
stos
add
into
ja
hlt
cmp
sahf
shll
push
in
loope
xor
imulb
push
xchg
mov
in
sar
jbe
and
fmuls
mov
pop
in
js
test
or
inc
test
xchg
inc
mov
ret
jecxz
jne
jl
push
push
inc
inc
ss
jp
inc
pop
in
xor
jmp
inc
sbb
pop
ror
add
movsl
dec
mov
pop
shll
rcrb
aas
xor
fildll
xchg
xchg
xor
orl
mov
dec
test
ret
fsubr
push
push
dec
lea
push
loopne
into
mov
cwtl
xchg
test
nop
dec
repz
xor
subb
cmp
and
or
mov
les
sbb
pop
sub
test
les
insl
xchg
fisubrl
ret
xor
shll
push
inc
ja
mov
fwait
insb
cwtl
test
mov
sbb
jnp,pt
mov
or
negl
bound
loope
ds
sub
loope
mov
je
push
adc
mov
mov
iret
xor
mov
cwtl
inc
test
je
subl
loopne
test
int
cmpsl
fimull
cmp
enter
inc
aas
fwait
in
adc
mov
outsl
out
adc
adc
or
mov
bound
ds
in
out
lahf
xor
push
xor
adc
cwtl
mov
scas
cwtl
jbe
mov
stos
jge
int3
dec
lods
xlat
xorl
push
out
ret
daa
in
pop
pop
adc
ja
gs
push
add
call
decb
mov
push
inc
data16
or
ljmp
jg
xchg
push
decb
popl
dec
push
cmpsb
pop
and
in
pop
sub
and
rcrb
xchg
pop
push
and
jne
or
loope
xchg
pushf
cmp
popa
jp
imul
push
stos
mov
push
jge
cmp
or
int
out
les
mov
aas
mov
dec
insl
mov
subl
out
movb
xor
ljmp
outsl
and
xor
inc
roll
jno
jle
add
ror
mov
sbb
sub
shrb
test
jmp
sub
adc
push
inc
icebp
enter
movsb
pop
sarb
pop
xorl
xor
mov
sbb
push
in
imul
push
push
mov
mov
cmpsb
cmp
shll
sbb
mov
pop
mov
push
push
pop
sub
dec
push
das
xchg
xor
dec
pop
sti
cmpsb
pop
adc
xlat
xor
xor
lock
popa
insl
aas
outsb
cli
int3
push
mov
movsb
daa
pop
cmc
addr16
add
and
lods
push
pushf
mov
outsl
xor
mov
push
jecxz
repz
jp
xchg
cmpl
pop
mov
mov
cmp
sbbb
cmpsl
les
push
ret
dec
loope
scas
adc
mov
pusha
xchg
jg
out
jo,pt
cld
xchg
icebp
notl
fsub
hlt
stc
mov
dec
scas
js
pop
fistpl
mov
loope
jne
in
lret
lcall
jge
ret
jg
xchg
adc
dec
addr16
xlat
fimuls
mov
jb
test
or
insl
lock
jnp
jae
jl
mov
push
sub
fstpl
jbe
xor
lret
fldenv
int3
xchg
out
lods
fsub
hlt
fidivs
movsl
adc
imul
cmp
add
cmp
imul
inc
lret
stos
or
adcl
cmp
push
out
mov
pop
in
mov
and
xchg
ds
std
mov
leave
fsubl
ljmp
imul
jmp
incb
xor
sbb
sub
mov
jo
cmp
jne
adc
popf
icebp
push
sbb
pushf
mov
dec
int
xchg
xchg
pop
imul
ds
push
mov
cli
inc
xlat
mov
inc
push
mov
sub
mov
cmc
in
cmp
test
jmp
or
ljmp
sub
or
sbb
je
and
cltd
aaa
in
pushf
xchg
mov
stos
or
lret
fwait
clc
push
lds
dec
or
inc
test
inc
outsl
or
adc
mov
repnz
jb
test
mov
das
inc
ffreep
cmp
fsubl
pop
fxam
and
cmc
unpcklps
out
arpl
mov
outsl
ljmp
jns
popf
mov
loope
mov
shll
inc
push
xor
sbb
int3
movsb
mov
dec
inc
clc
test
je
sbb
dec
sbb
push
insb
add
inc
div
lret
or
pushf
cmp
movsl
jl
dec
sbb
xchg
aam
push
lret
das
sti
mov
add
jg
push
adc
das
push
mov
dec
sbb
push
mov
cwtl
out
into
xlat
xchg
xchg
iret
ss
imul
xchg
and
cmp
mov
or
es
test
lea
leave
bound
cmc
push
pusha
and
lock
in
ljmp
sbb
gs
cmpsl
pop
mov
cmpsb
xchg
sub
jne
mov
mov
shll
mov
cmc
sub
sub
push
jp
push
jb
shr
jns
mov
xor
cmp
popf
xorl
cltd
aam
adc
and
mov
xor
mov
push
xor
xchg
fdivs
push
cmp
repz
xorb
and
scas
sub
arpl
sub
xchg
aam
push
mov
inc
fs
cmc
mov
ljmp
loopne
mov
pop
mov
xchg
clc
outsl
test
xor
jb
mov
movsl
mov
jae
out
xchg
pusha
cld
add
mov
push
cmc
pushf
mov
sub
test
jmp
or
je
loope
jo
dec
ja
sbb
sub
or
mov
cs
ja
cltd
outsl
out
cmp
scas
dec
pop
push
loope
sub
and
clc
sbb
dec
sub
or
fcomp
jmp
mov
add
mov
cwtl
inc
cltd
pop
psadbw
fsubl
push
pop
movsb
and
movsb
test
push
or
inc
sub
in
dec
fsub
push
out
adc
pop
jg
iret
jge
popa
jmp
in
imul
jle
lock
jle
inc
int3
sbb
mov
jmp
inc
cmp
sub
insb
push
xchg
dec
lea
in
xchg
jl
push
das
outsb
cmp
xor
sbb
adc
pop
pop
stos
mov
inc
inc
out
mov
mov
or
sbbb
bound
mov
aas
mov
testl
popa
and
loopne
in
negl
lcall
call
out
shlb
dec
push
or
daa
jmp
mov
jne
jnp
jl
xchg
mov
xor
jns
adcb
sub
icebp
jae
push
cmpsl
mov
mov
xchg
mov
movsl
rorl
mov
stos
xchg
mov
adc
data16
jbe
mov
hlt
fsubrs
sbb
jp
leave
sbb
das
or
xchg
sub
or
pop
jno
mov
mov
cli
mov
imul
les
add
and
jnp
in
add
mov
xchg
mov
not
mov
push
daa
mov
setns
out
iret
orl
pop
out
fildll
mov
sub
or
ds
push
push
fcoml
popf
xor
aad
sub
sarl
push
mov
icebp
sbb
sub
jle
add
add
sar
mov
xor
push
je
cmp
cmp
repnz
jno
or
jp,pt
je
mov
mov
xchg
inc
push
cmpsb
mov
imul
orb
in
inc
mov
xlat
ficoml
movhps
mov
ret
outsb
insb
dec
dec
ss
jmp
or
shll
sbb
shlb
adc
dec
movsb
test
push
inc
rol
jo
inc
mov
xor
ss
loop
test
lods
shr
addl
outsl
push
add
pop
push
rcrl
arpl
sarb
lods
xchg
ds
fxam
jne
iret
or
mov
mov
shrl
pop
aaa
push
fsubs
icebp
push
mov
mov
je
aad
les
idiv
pop
nop
stc
sub
xchg
loope
cltd
fwait
roll
add
or
lcall
cmp
and
and
jae
push
mov
aad
jmp
out
mov
xor
sbb
repnz
stos
pushf
push
mov
inc
daa
or
jo
inc
dec
pop
clc
sbb
mov
push
push
ds
ret
test
xchg
aas
inc
mov
sub
addr16
pop
ret
jns
xchg
dec
insl
inc
fmuls
mov
mov
mov
movsb
or
arpl
gs
jmp
mov
aas
lret
xchg
mov
pop
mov
xor
xchg
std
addr16
cmp
jae
cmpsb
sub
pop
daa
sti
cltd
and
mov
push
sbb
hlt
push
in
dec
cmp
gs
aam
sub
inc
adcl
test
ss
in
pop
mov
rolb
loop
sbb
jne
mov
ds
pushf
inc
cltd
inc
mov
pop
scas
rcll
fdivs
cmp
lea
mov
shll
xor
sub
cmp
notl
cmpsl
xchg
inc
pop
jle
imul
xor
inc
stos
mov
push
jo
outsl
scas
jle
push
ja
loopne
out
gs
vmovaps
mov
pop
test
pop
mov
loope
imul
and
sub
xchg
movsb
ljmp
mov
pushf
mov
sbb
xor
and
add
sbbl
push
jl
pop
or
enter
test
mov
jmp
mov
aaa
pop
mov
and
xor
sub
sub
out
mov
loopne
hlt
aam
sar
lock
inc
in
and
add
cld
fdivr
jno
add
sbb
insb
sti
pop
es
xor
pop
cmp
dec
lahf
push
daa
imul
sbb
out
repz
xchg
shll
fiadds
loope
inc
loope
dec
loop
push
push
enter
stos
xlat
jb
dec
and
jp
inc
pop
in
pop
ss
pop
hlt
aad
inc
loope
sub
outsb
pop
ret
enter
mov
lea
dec
test
sar
movsb
leave
mov
fnstenv
pop
pop
sbb
loop
sti
push
hlt
and
fst
mov
adc
mov
sbbb
aas
ret
mov
cli
and
fcmovu
cli
push
js
mov
pop
imul
add
sahf
cmp
inc
sahf
sbb
mov
push
or
push
test
fdivs
sub
xlat
add
fidivl
iret
lret
lcall
xchg
inc
jle
loope
dec
xchg
rcr
push
push
idivl
popa
fldenv
in
xorl
mov
loope
mov
data16
jb
dec
lods
xor
lock
and
enter
rolb
imul
xor
ljmp
dec
jnp
jmp
pop
jle
cmpsb
or
js
movsb
mov
cmp
dec
and
dec
mov
rcrb
or
out
ja
inc
xchg
out
xchg
inc
scas
push
add
outsb
into
enter
mov
push
or
shll
add
xchg
fadd
test
inc
data16
push
sub
cwtl
inc
pop
mov
mov
movsb
aas
add
mull
pop
neg
push
aaa
push
push
stos
and
mov
lock
fs
mov
fistpl
push
mov
in
iret
jl
sub
subl
cs
xor
repnz
into
mov
xchg
mov
mov
mov
aas
or
add
adc
pop
stos
lds
insl
xchg
add
add
lds
xabort
inc
imul
xlat
dec
repz
add
in
push
adc
stos
push
pop
xchg
pop
jmp
ds
lock
xchg
inc
mov
pop
xchg
repz
dec
stos
or
shll
and
loope
inc
fs
rcrl
mov
add
lds
and
fsin
dec
fistl
push
cmp
dec
fs
push
mov
aas
and
leave
inc
int
arpl
gs
cmp
sub
scas
mov
ret
cmp
jl
and
mov
sub
std
xchg
xchg
sub
cwtl
adcb
sub
fidivrs
cmpsl
mov
lock
add
jge
enter
js
pop
dec
push
and
push
pop
std
mov
jecxz
shr
sub
pop
test
sub
push
pop
ja
lcall
inc
enter
les
cmpsb
test
mov
push
cmp
jp
and
jecxz
push
add
test
pop
dec
mov
movsb
mov
push
inc
mov
shrl
push
lea
jnp
aam
add
lahf
stos
psraw
or
in
loope
xchg
pop
adcb
jo
aam
push
inc
outsb
inc
and
in
jmp
aad
loop
aas
loop
jmp
int3
iret
jecxz
arpl
insl
push
lock
xchg
iret
lods
outsb
push
in
testl
dec
cmp
fdivrl
jecxz
orb
pop
rcr
mov
enter
stc
cld
xor
xor
mov
add
mov
push
mov
enter
mov
mov
lock
movsl
mov
sbb
lock
or
xchg
int
fs
scas
inc
in
cli
cmp
sbb
xchg
pop
mov
push
outsb
sti
cmp
mov
add
adcb
jne
pop
sbb
pop
xlat
or
inc
xor
and
cmp
lock
mov
rclb
popa
imul
arpl
and
fildl
int3
xchg
pop
sbb
in
movl
test
add
cs
adc
popa
faddl
pop
insb
loop
inc
inc
push
and
xchg
aas
test
aad
mov
dec
insb
inc
cmc
out
and
push
add
or
or
jno
jno
addb
adcl
sbb
sbb
mov
xchg
icebp
jg
cwtl
mov
cmp
aad
ret
shrl
pop
scas
inc
sahf
and
mov
fistl
jns
lahf
call
xchg
inc
cmp
adc
sub
sbb
mov
cmp
inc
jp
call
mov
push
ret
stc
aaa
mov
stos
int
stos
lret
dec
jae
jbe
mov
mov
repnz
inc
or
mov
test
cmpsb
mov
lret
inc
push
pop
loop
shrl
mov
enter
out
inc
fistl
sub
lds
dec
rol
loopne
push
cmpsb
mov
hlt
sbb
mov
int3
cwtl
pop
dec
xor
aas
dec
cmpsb
adc
xchg
mov
pop
mov
subb
out
xchg
mov
ljmp
loop
dec
cmp
cmc
inc
push
popl
mov
sub
mov
or
sub
xor
mov
ss
xchg
push
cmpl
or
lds
lock
ds
pop
mov
cld
incb
mov
out
xchg
or
adc
mov
sub
jg
mov
test
jno
inc
test
lcall
add
jle
xchg
cld
cmc
pop
sub
sbbb
popa
or
mov
mov
inc
push
movl
popf
sbb
outsl
sbb
insb
pop
aad
jae
stc
push
cmp
in
out
cmpl
fisttpl
inc
pushf
data16
dec
ss
fldenv
or
xchg
aas
in
stc
mov
cwtl
mov
jns
xor
mov
loopne
lret
mov
xor
iret
ds
test
pop
sbb
shll
mov
add
or
dec
pop
jle
mov
jbe
cmp
in
inc
inc
xchg
lcall
popf
push
in
fistl
mov
push
aam
mov
into
jae
cs
cld
xor
cwtl
cwtl
push
imul
mov
fimull
mov
jp
add
in
mov
faddl
rclb
pop
in
out
pop
xchg
jo
push
lcall
adc
mov
scas
xchg
int3
aas
sub
rorl
das
dec
push
jne
lock
jno
shrb
jmp
adc
mov
cmp
out
ret
push
mov
in
loop
insb
mov
dec
ja
sub
test
leave
std
pusha
out
insb
iret
push
icebp
aam
sbb
xor
nop
inc
scas
adc
mov
lahf
jp
ret
push
jecxz
inc
into
dec
push
sbb
adc
repz
lods
stos
and
cmc
mov
bound
ds
adc
fcomps
out
mov
jmp
aas
cli
pop
lahf
cmp
addl
inc
mov
pushf
xor
int
and
or
adc
add
data16
xchg
rcl
imul
loop
mov
pop
push
push
lcall
out
andb
jg
int3
outsl
inc
sti
mov
and
rclb
test
das
std
les
cld
lods
lmsw
stos
leave
xchg
inc
loop
sub
cmpsb
popa
mov
in
push
pop
pop
icebp
jg
fistps
or
add
push
or
lock
ret
stos
cmp
xor
cmp
rcrl
cmp
jmp
jp
add
jecxz
inc
cli
inc
adc
cmp
cmp
loopne
xchg
out
fdivr
enter
or
ss
push
imul
icebp
repnz
jp
or
xlat
subl
lds
lahf
jnp
dec
xchg
lds
nop
out
call
sarb
insl
and
daa
and
mov
scas
jbe
js
cwtl
pop
cli
test
lea
sub
scas
inc
lret
push
lcall
jno
out
xorb
jecxz
push
jb
xchg
mov
mov
inc
loopne
cmp
mov
cmc
push
xchg
roll
mov
add
xchg
push
cmp
out
jno
lea
sub
mov
pop
cmc
fdivl
rolb
pop
xchg
es
lret
nop
xlat
mov
sub
loopne
adc
out
push
push
or
imul
pop
cmpb
insb
push
test
in
push
aas
xchg
push
fldcw
mov
and
pushw
cmc
dec
cmp
inc
jo
pushf
mov
movsl
jle
cmp
jecxz
push
mov
mov
sarb
jbe
popa
rol
in
pop
sub
fidivl
mov
divb
movsl
push
dec
jmp
or
repnz
xor
mov
inc
mov
js
adc
mov
iret
pop
mov
adc
aam
jmp
sub
jae
inc
mov
cmpsb
xchg
imul
rcll
dec
bnd
jo
adc
stc
mov
lea
add
aas
mov
test
adc
mov
out
rolb
addr16
ss
lcall
push
mov
xor
pop
test
pusha
test
js
adc
aad
fidivl
cs
es
adc
mov
pop
push
push
std
adc
pop
add
or
jb
sahf
cmp
inc
lcall
aam
jb
pushf
mov
inc
xor
pop
test
pop
fstps
mov
les
out
stos
es
cmp
cmpsb
mov
cmp
cmpsb
repz
sbb
out
dec
loop
and
std
sahf
pop
dec
jecxz
mov
xor
xor
mov
das
jge
adc
lret
jo
xlat
xchg
adc
or
es
in
lcall
test
decl
push
push
inc
and
or
orb
pop
sbb
mov
mov
les
aad
rolb
mov
scas
data16
movsb
pusha
stos
xor
mov
xchg
lcall
aam
inc
inc
mov
mov
adc
mov
stos
enter
mov
aas
and
mov
test
jecxz
adc
stos
mov
movsb
ror
lea
clc
jge
xchg
jmp
fninit
mov
xor
rolb
adc
push
mov
loopne
dec
add
pusha
call
movb
repz
pop
je
jecxz
test
frstor
lahf
popf
add
sbb
int3
repnz
jnp
dec
cmp
mov
test
insl
ffreep
pusha
leave
mov
sbb
leave
hlt
pop
sub
mov
test
ret
inc
xchg
and
aad
outsl
divl
mov
sub
dec
ss
add
sbb
mov
ljmp
enter
mov
imul
cmp
or
les
mov
addr16
in
sarb
adc
cld
sbb
sbb
sub
add
loopne
call
xchg
push
sub
sub
mov
in
ds
nop
lods
mov
cmp
mov
sarb
jmp
push
loopne
xor
jg
dec
data16
mov
and
push
fwait
adc
pop
mov
xor
or
mov
cmp
mov
out
ret
push
outsl
sub
mov
fcoms
push
push
rcll
int3
lret
test
icebp
inc
cmp
sbb
out
in
jecxz
cmp
inc
outsl
loopne
push
jo
cmp
mov
stos
cmpl
fnstcw
cmc
inc
cltd
mov
sub
dec
push
bound
rcl
sub
pusha
mov
xor
shlb
les
icebp
shlb
or
sub
jge
push
jmp
addr16
mov
insb
sub
gs
dec
xchg
in
push
lahf
aas
ret
mov
dec
jo
push
push
pop
pop
rcll
pop
ret
repz
sub
repnz
test
sub
sub
movsb
dec
mov
std
mov
pop
call
push
inc
add
inc
popl
pop
mov
aam
or
shlb
out
push
add
xor
sub
jge
adc
fsubs
jle
push
cs
mov
rorl
arpl
lds
jecxz
lahf
xor
in
mov
mov
int3
jl
mov
dec
or
inc
ljmp
or
cmp
daa
dec
mov
and
lret
add
or
aam
inc
inc
pop
lea
std
clc
leave
mov
dec
sbbb
inc
repz
xorb
ljmp
mov
mov
xor
fdivr
jno
pusha
cli
and
push
sbb
cmpsl
pop
js
cwtl
xchg
loopne
push
lock
cmpsl
pop
push
das
fimuls
out
int
pop
jle
das
push
pushf
mov
ja
xchg
mov
push
dec
xor
or
movb
insl
dec
adc
adc
mov
jne
outsl
pop
cmp
sti
and
out
or
lock
ds
loop
xchg
xor
and
inc
pusha
fs
fcoms
sti
pop
or
xchg
ljmp
jno
push
shrd
lret
jns
jb
mov
push
rorl
xor
dec
sbb
mov
jno
inc
and
movsl
and
mov
pop
dec
divl
pop
pop
insl
stos
dec
mov
pop
enter
jecxz
insb
fcoml
sbb
test
xchg
jg
mov
test
shr
pop
call
lds
xchg
dec
inc
in
enter
addr16
jg
mov
mov
aam
lret
or
fwait
test
push
mov
xchg
push
pop
fistpl
jmp
mov
mov
sbb
mov
push
inc
pop
jne
xchg
arpl
in
xor
dec
inc
pop
add
xchg
popf
decb
mov
xor
mov
and
mov
sub
in
sub
int3
add
call
adc
scas
pop
in
xchg
mov
int3
iret
mov
es
stos
andl
mov
cli
aaa
push
leave
loope
xor
add
test
stc
testl
adc
mov
xchg
mov
loopne
lods
add
inc
adcb
mov
jnp
jae
aad
stos
sub
mov
sbb
sub
add
or
push
jg
mov
iret
push
ret
in
push
mov
jmp
dec
xchg
dec
xor
fdivl
fwait
pop
dec
sti
jb
inc
cmpsb
sarl
mov
test
stos
mov
arpl
ret
cs
mov
lock
mov
rcrl
or
insl
cs
rcl
out
push
cmpsb
aas
mov
repnz
into
out
xchg
icebp
in
or
or
mov
inc
lods
mov
mov
and
mov
insl
ret
repz
sub
mov
mov
outsl
adc
movb
dec
pop
outsb
pushf
jmp
sub
pop
lahf
movsb
mov
xchg
xor
jl
fwait
sub
push
stos
jl
push
lea
add
xchg
lock
ret
pop
inc
mov
test
cmp
outsb
jecxz
xor
lret
mov
sahf
inc
loope
dec
daa
cmp
cmp
scas
mov
mov
dec
pop
push
mov
fwait
adc
cwtl
and
pop
pop
ljmp
popa
mov
mov
lret
cmp
rol
cmpsb
loope
mov
cmpsl
clc
dec
in
rorb
dec
mov
jecxz
add
in
stc
cs
icebp
sbb
int
cmp
cs
lods
test
int3
ljmp
lret
or
stos
sub
xor
loop
xchg
out
sar
je
inc
sub
inc
mov
int
arpl
dec
cmp
xchg
aad
adc
mov
shr
ret
rcrb
pushf
xchg
jb
into
loop
test
jae
bound
lds
in
mov
mov
pop
pop
repz
cwtl
pop
pop
insl
inc
fs
das
and
sub
fidivl
xchg
dec
sub
js
pop
addl
sbb
fdivl
pop
lret
mulb
sbb
sti
daa
out
inc
fcoms
pop
mov
aam
add
inc
enter
jmp
add
pop
adc
mov
jnp
push
addl
js
adc
cmp
pop
adc
cmp
aas
sbb
mov
xchg
fwait
shlb
cmp
je
mov
mov
mov
inc
xchg
rcrb
pushf
loopne
pop
sub
xchg
aam
andl
mov
inc
inc
repnz
pop
or
lea
jbe
sti
mov
pop
inc
aas
mov
arpl
js
mov
jg
and
roll
jbe,pt
cmp
loop
popa
rcrb
pop
sbb
push
dec
xchg
pop
pop
loop
stc
aaa
cmc
notl
cwtl
jmp
inc
jmp
mov
std
ret
xor
nopl
addr16
jns
test
jae
mov
enter
fadds
cmc
mov
daa
mov
mov
mov
nop
rcr
mov
cmc
xchg
pop
rorl
add
cli
xchg
sbb
xor
mov
pop
and
mov
rolb
cmp
aas
dec
adc
adc
fisubrl
frstor
inc
cmp
dec
aas
out
pop
push
mov
aad
je
lock
aaa
pusha
rcrb
mov
not
notb
inc
outsl
or
fptan
adc
lods
lods
call
es
mov
fmuls
adc
aam
jle
fwait
inc
and
pop
das
cmpb
enter
repz
test
mov
jb
xchg
dec
sub
sub
jno
and
mov
mov
jg
or
lock
and
andl
pusha
add
es
dec
test
lds
jl
outsb
fidivl
sub
mov
fildll
xchg
xlat
loope
cvtpi2ps
cli
jle
pop
je
sbb
cmc
fs
inc
sbb
fsubs
data16
adc
mov
cmp
sub
scas
sub
call
inc
mov
aas
lret
scas
and
ret
popa
repz
sti
adc
scas
out
stc
push
jmp
out
jmp
xchg
lret
es
cmpsl
or
outsl
fstp
xor
dec
inc
fsubrs
loop
fsub
dec
mov
pop
and
mov
pushf
daa
inc
cmp
adc
pop
cwtl
xor
aad
jecxz
and
mov
dec
or
mov
ret
les
out
adc
out
xor
xchg
das
out
xor
ret
pop
test
scas
test
cmpb
sub
pop
add
insb
inc
popa
imul
aas
jae,pn
cmp
sub
or
mov
ja
mov
mov
pushf
aaa
push
lds
rcrl
cmpb
mov
or
push
pop
loop
fidivs
push
cmp
jg,pt
ret
sub
test
xchg
movsb
lret
add
aaa
inc
lock
fisubl
insb
fcmovnu
sbb
xchg
int
jns
arpl
in
push
cmp
sbb
notb
push
adc
test
out
enter
pusha
enter
sub
adcb
stos
scas
add
pop
insl
nop
inc
push
mov
je
dec
mov
mov
daa
add
push
mov
lds
out
add
pop
sbb
mov
sti
pop
push
and
pop
pushl
std
mov
loope
pop
cmp
or
faddl
sub
xchg
int
insl
mov
cmpsb
xor
mov
mov
bound
imul
es
xor
pop
add
mov
lods
lock
sbb
icebp
stos
fisttps
or
lods
xor
dec
inc
xchg
jmp
jmp
mov
cmpl
xor
shl
lcall
scas
inc
loope
std
xor
push
ljmp
mov
mov
jne
mov
out
inc
lahf
cs
jno
xor
adc
lock
sub
mov
ja
into
add
fcompl
or
addr16
xor
cmp
pop
test
xor
sti
lcall
and
jno
jno
sub
fcmovnb
shlb
mov
decb
mov
repz
jae
xor
sub
dec
lods
cmc
and
adc
adc
jae
sbb
pop
cmp
nop
cmp
and
in
addr16
out
jp
or
rcl
sar
pusha
out
in
mov
nop
mov
inc
jecxz
es
inc
rol
movl
sbb
rclb
les
shlb
rolb
lret
jb
dec
loope
int
sbb
and
fisubrs
fisubrl
cmp
lock
shlb
jecxz
adc
add
cmpsb
nop
and
push
or
js
out
mov
cmp
mov
mov
ljmp
cmp
inc
push
xor
jmp
es
dec
fcomps
iret
loop
or
sti
pop
adc
sti
sbbb
shrl
sub
mov
xchg
fisttpll
lcall
jbe
ja
and
mov
inc
fsub
dec
movsl
movb
mov
lods
cmpsl
mov
cmpsl
jae
mov
cmp
stc
test
fcoml
sub
fdivs
cmc
lds
sbb
pop
mov
jnp
xchg
addb
sbb
push
adcb
cs
scas
nop
inc
jae
repz
stos
jmp
loopne
inc
sbb
das
add
push
pop
js
xor
jge
sbb
cli
inc
push
call
cltd
out
call
ficoml
add
mov
in
int3
dec
pop
pop
repnz
cmp
filds
dec
test
std
fs
mov
sub
sbb
push
mov
lods
pop
rcrb
xor
cmp
xchg
rep
testl
test
sahf
mov
movsl
and
scas
push
and
out
xor
imul
pop
mov
decl
inc
cmp
out
fisttps
jmp
dec
stos
cmp
push
icebp
addb
jle
imul
push
mov
imul
ret
stos
xchg
fimull
dec
xchg
pop
pusha
cld
movsl
lock
ret
mov
or
scas
lock
test
mov
pusha
adc
jge
movsl
push
ja
daa
testl
cmove
xchg
lock
xchg
xchg
rolb
fistps
mov
and
aam
sub
and
dec
cmp
addr16
aad
lret
out
sub
imul
inc
or
pop
pop
push
fwait
and
push
test
das
add
xorl
into
repz
repnz
xor
jg
addb
xor
mov
imul
int
xor
fs
aad
adc
movsl
pop
jbe
subb
ja
imul
pusha
cmpsb
pop
and
mov
in
aad
js
sbb
add
mov
pop
push
daa
pop
dec
adc
pop
inc
fcompl
xor
push
and
sarl
imul
sub
loopne,pt
sub
data16
ja
jl
fadds
cmpsl
dec
jno
les
int3
adc
or
push
push
inc
addb
sub
push
pop
lods
mov
bound
jne
push
mov
into
jae
mov
mov
rol
out
sub
push
jg
cmp
xchg
lea
lahf
movsb
mov
cmp
subl
and
jge
fidivl
test
fsubl
shrb
jmp
fsubl
jmp
inc
mov
imul
dec
mov
jno
fisubs
test
sub
es
ret
mov
sqrtps
ja
dec
inc
jno
enter
loopne
xlat
pusha
and
dec
incl
out
push
sbb
dec
mov
loope
fisttps
inc
sbb
fwait
out
xchg
push
push
arpl
addb
ret
adc
cmp
pop
daa
mov
test
bswap
cwtl
pop
mov
mov
jo
add
push
jg
dec
mov
push
movb
shr
sbb
jbe
push
out
xor
xor
cmp
lock
or
pusha
repz
adc
mov
pop
ret
sbb
mov
lods
mov
mov
call
sub
gs
sub
jae
dec
lods
or
xchg
xchg
addl
das
sbb
mov
and
and
xchg
das
ja,pt
sub
push
cwtl
mov
sbb
push
into
clc
xor
mov
pop
dec
mov
loope
mov
lods
sbb
jo
and
out
int3
sbb
mov
pop
sbb
out
repz
xchg
xchg
adc
jl
push
push
add
decl
insl
and
pop
je
jle
nop
push
lods
leave
fmuls
xchg
ret
lahf
mov
xchg
or
jo
jo
or
fists
fs
bound
mov
arpl
fisttpll
hlt
mov
scas
inc
xlat
loopne
imul
cmpsb
adc
cmp
ja
mov
neg
pop
or
xchg
xor
or
or
lods
ss
pop
cli
repnz
or
mov
push
es
arpl
in
and
xor
out
sub
out
call
imul
loopne
sti
adc
in
jne
dec
sbb
jbe
cmc
fcoml
push
pop
popa
sub
or
xchg
inc
sbb
pop
sti
stc
outsl
lret
inc
repnz
jns
push
pop
rclb
xchg
cmpsl
cwtl
inc
mov
adc
mov
inc
pop
cmp
inc
outsb
jbe
lret
clc
dec
dec
notb
ja
int3
scas
mov
imul
aaa
sub
or
mov
pop
jb
clc
clc
aad
outsb
or
add
insb
fsubs
xchg
repz
sbb
lods
jns
rcll
dec
jecxz
adcb
cs
fucomi
rclb
pop
pop
rcrb
xchg
pop
cld
scas
xchg
roll
out
ljmp
jl
xchg
rorl
xchg
pop
push
cmp
daa
shrb
add
lock
loop
pop
inc
sub
cmp
outsl
out
inc
insl
and
cmp
sbb
inc
mov
or
arpl
jmp
mov
idivb
and
ret
test
mov
mov
pop
push
stos
ljmp
fcoml
xchg
and
push
dec
nop
inc
lahf
stc
sub
jb
clc
insb
xchg
add
hlt
xchg
decl
dec
and
dec
loope
mov
test
adc
fisubrl
or
sti
dec
jns
js
outsl
fcoml
inc
xor
and
or
clc
pusha
sub
mov
cmp
iret
sti
in
mov
sarb
pop
or
lds
ja
lret
loop
iret
repnz
vcmppd
push
mov
in
roll
adc
movsb
cmpb
in
lods
lock
rcll
rorb
jne
in
fucomip
and
pop
mov
leave
int3
xor
out
cmp
jne
sub
cltd
dec
jo
xorl
sti
std
cmp
inc
std
lock
xlat
jnp
sub
aam
mov
mov
lds
add
bound
adc
jge
xchg
inc
sbb
mov
adc
inc
xor
sahf
add
cbtw
or
fildll
loopne
push
mov
out
push
shll
ret
shlb
daa
pop
jle
or
push
push
mov
adc
jge
jb
pusha
sub
arpl
xchg
xchg
inc
xor
popa
inc
jne
imul
in
xchg
mov
in
clc
minps
xchg
cmp
xor
aad
push
imul
call
jbe
pop
and
aaa
lods
mov
push
add
cmp
bound
jl
inc
lahf
lahf
push
out
push
adc
adc
xchg
adc
iret
ljmp
imul
int3
in
in
mov
data16
push
movsl
sub
inc
pop
cmp
add
mov
fildll
dec
sub
sub
xchg
jnp
push
add
jns
sbb
pop
scas
test
push
cmp
aas
adc
jbe
pushf
inc
loop
subb
add
xchg
mov
push
add
int3
or
nop
cmp
pop
cmp
sub
xlat
enter
cmp
aaa
pop
mov
jo
ror
sbb
imulb
call
and
jmp
jmp
push
cli
mov
cmp
pusha
mov
les
jmp
dec
mov
sbb
inc
nop
add
mov
aam
mov
rorl
cmp
outsl
rcll
sub
xlat
enter
push
pop
pushf
arpl
inc
dec
sbb
xchg
stos
xor
and
mov
push
pop
inc
mov
cld
push
dec
cmpb
and
mov
popf
xor
dec
jp
pusha
or
ss
push
add
pusha
mov
lock
mov
inc
mov
lods
das
dec
mov
pop
int
inc
in
dec
je
mov
cmpsb
fisttpl
inc
ljmp
jno
cmc
dec
add
push
cltd
push
dec
repz
pop
cmp
pusha
int
iret
jno
aas
idiv
stos
repnz
fldlg2
push
inc
sbb
cmp
lea
mov
dec
inc
xchg
sub
ja
stc
mov
dec
test
inc
stos
adc
jnp
and
xchg
mov
jmp
test
ret
cmpsb
jno
jo
jmp
sub
cmp
inc
es
pop
mov
mov
in
aaa
jne
pushf
rolb
add
movsl
and
mov
push
add
nop
lcall
cmp
or
xlat
adcl
cltd
pop
ss
sub
mov
mov
test
inc
lock
in
fldt
dec
and
aam
xor
pop
iret
cmp
jns
fs
jmp
xor
push
cmp
mov
add
fisubs
mov
dec
mov
jae
jmp
mov
jbe
mov
out
cmp
mov
xchg
push
sub
je
movsl
imul
stos
fisttps
mov
xchg
out
sahf
or
shll
in
pop
mov
push
pop
int3
push
adc
shr
and
xor
dec
mov
je
jg
jge
pop
sbb
jecxz
fiaddl
ljmp
repnz
es
fcoms
xchg
cwtl
int
pushl
adc
pop
mov
js
stc
add
out
push
adc
stos
push
xor
or
jnp
xchg
enter
mov
xchg
and
jo
sbb
pop
sub
sub
scas
mov
ja
pushl
push
ja
lock
sbb
lods
faddl
out
inc
mov
js
nop
call
adc
mov
pop
jge
ds
sbb
sub
lds
and
insl
cmp
ljmp
pop
lea
enter
mov
inc
fdivl
xor
scas
mov
rorl
in
push
cli
lods
fildl
mov
dec
lcall
cwtl
jb
add
arpl
lret
and
aam
mov
jo
mov
adc
pusha
mov
inc
add
arpl
in
repz
aas
out
pop
fwait
lea
xor
and
xor
adc
push
add
xor
test
mov
outsb
add
iret
andb
xor
insb
sbb
inc
push
rep
add
or
rcr
xchg
iret
cmp
or
xchg
pop
xchg
ret
int3
mov
push
roll
pushf
scas
pop
negl
jne
ret
pop
adc
lret
or
shll
inc
scas
iret
push
dec
les
sahf
fst
fucom
add
inc
ficoms
xchg
inc
data16
cs
jp
pop
mov
mov
les
aad
jmp
mov
movsb
loopne
test
lock
pusha
or
imul
pusha
sbb
inc
mov
adc
adc
sbb
dec
mov
cmp
mov
lret
jbe
cmpsb
jbe
push
test
mov
out
out
xor
add
rcll
adc
xor
movsb
cmp
xor
jg
push
cli
push
loope
addr16
shll
sbb
pop
es
rcll
sbb
inc
sahf
fwait
mov
mov
jp
lahf
shl
std
push
dec
jle
add
into
mov
sbb
jns
xchg
cmp
mov
xor
mov
cmc
dec
xor
int
andl
adc
xchg
jnp
mov
push
fiaddl
jle
fbld
fcmovbe
dec
push
xchg
adc
push
mov
mov
sub
subb
push
pop
xlat
adc
lods
dec
in
jp
sahf
xor
lea
dec
js
cmp
add
imul
lret
jp
add
aad
pop
loopne
mov
sub
jne
xor
rdmsr
pushf
xchg
out
es
push
mov
dec
setle
dec
bound
hlt
sub
dec
ja
adc
aaa
cmp
jbe
mov
jae
fldenvs
ja
inc
or
fwait
roll
aad
push
stos
out
mov
push
scas
arpl
lea
jmp
mov
sbb
jnp
or
movsl
subb
clc
inc
lret
dec
loop
pusha
fimuls
out
add
mov
les
adc
pushf
jp
push
mov
daa
popa
adc
gs
sbb
aas
dec
xor
test
subb
leave
filds
push
test
sbb
pop
jmp
dec
in
popa
les
adc
sahf
iret
jmp
jne
movsb
call
xor
aaa
mov
jmp
cmpsb
mov
je
pop
cltd
shl
arpl
lahf
scas
and
imul
add
cld
inc
or
xchg
aas
int3
inc
add
xor
inc
dec
jne
hlt
data16
int3
inc
adc
and
cmp
lahf
cmpsl
pop
cmp
xchg
mov
roll
jmp
sbb
xchg
jg
sarl
jbe
pop
adc
xchg
cmp
loope
mov
enter
push
push
xchg
in
cmpsb
cmp
push
xchg
inc
sarb
cmp
sub
jns
outsb
fucomip
in
xor
cli
mov
pop
pop
out
out
divb
pusha
jo
sub
sub
pop
cs
or
mov
leave
xorl
lcall
cmp
fisttpll
pop
mov
es
add
mov
adc
xchg
inc
and
fs
je
or
dec
fisttpl
and
ret
aam
cmp
mov
lea
ret
subl
cwtl
jp
cmp
and
inc
jns
in
mov
jge
inc
dec
js
nop
push
push
ret
ror
pop
notl
leave
lods
faddl
lret
jmp
mov
and
mov
mov
lret
push
xchg
add
out
outsl
mov
out
in
clc
cmp
test
mov
jbe
or
leave
pop
mov
sbb
push
stos
inc
out
lahf
push
sub
pushf
mov
or
cltd
imulb
scas
fnstsw
mov
xor
push
shlb
div
sub
cmp
popa
mov
push
hlt
xor
xchg
push
xchg
std
mov
jae
add
xchg
nop
cmovb
push
in
aas
test
pop
jb
mov
popf
mov
xor
das
xchg
lods
mov
insl
mov
jo
push
fisubl
or
xor
or
and
outsb
lock
addl
sahf
sbb
scas
das
stos
push
pop
xor
sub
aad
sub
pop
ss
inc
pop
xchg
push
jl
mov
out
int3
insl
cs
pop
or
or
mov
push
mov
pop
movsb
xchg
adc
adc
cld
stos
stos
lcall
inc
sub
and
and
jbe
popa
imul
jmp
jbe
sbb
lret
aad
xchg
in
shlb
mov
std
dec
inc
push
push
push
mov
ret
mov
push
xlat
jbe
daa
jmp
push
cmp
mov
mov
das
and
out
and
sub
rorl
pop
ret
and
mov
dec
shrl
cmp
dec
mov
in
psrlw
dec
push
push
mov
leave
loopne
stc
ret
fwait
sbb
nop
enter
std
inc
jne
dec
jmp
mov
xchg
frstor
push
shll
add
xorl
outsl
jmp
aad
mov
roll
sahf
mov
sahf
jae
loopne
push
aad
adc
mov
lahf
arpl
gs
xchg
inc
cwtl
mov
cmp
or
roll
cmp
outsl
int
cmp
ret
ds
jle
inc
adc
rorl
arpl
xor
roll
cwtl
xchg
sub
fwait
int
in
xor
pop
xlat
scas
inc
movsl
sbb
shl
int
and
jne
andb
or
pusha
aaa
sahf
mov
ret
test
push
jge
into
mov
decl
pop
pop
xchg
out
aaa
or
stos
ja
push
daa
mov
fwait
dec
sbb
test
pop
add
fcoml
lret
fcompl
fnstcw
ficoml
mov
inc
loop
ficoms
fsubrl
jno
and
insl
adc
stos
add
inc
pop
inc
enter
mov
pop
inc
jl
pop
fnstenv
push
pusha
shlb
out
ss
mov
pop
es
scas
xor
movsl
stc
outsb
dec
inc
inc
cmp
mov
xor
pop
or
orl
xchg
je
xchg
or
scas
or
popf
loopne
bound
sbb
or
xor
lahf
into
jg
andl
mov
sub
mov
push
cltd
loope
data16
sub
lcall
imul
clc
daa
and
jge
or
mov
or
adc
push
test
sbb
ljmp
jns,pt
ss
movsl
pop
andb
repz
out
or
cs
pop
mov
lock
mov
mov
inc
xchg
cli
call
dec
inc
pusha
pop
loopne
and
lahf
push
inc
cmc
pop
out
mov
add
std
out
mov
repnz
sub
imul
dec
xor
mov
rcrb
mov
dec
bound
sbb
das
pop
insl
add
and
and
push
or
xchg
fdivs
sub
xor
xorl
test
mov
iret
jg
call
xor
imul
repnz
push
mov
push
jecxz
or
scas
push
je
lds
jo
cld
cmp
adc
ret
in
cmp
push
insb
add
dec
lcall
fwait
xor
sbb
or
jp
ret
lret
dec
imul
fstps
lds
cld
lret
or
hlt
add
xchg
push
or
insl
sbb
in
jl
imul
dec
loopne
and
test
jl
add
dec
mov
jne
call
mov
mov
stos
push
rol
push
movsb
lods
cmp
mov
lahf
ficoms
jg
jecxz
test
push
or
cwtl
mov
test
add
sti
sub
cwtl
cwtl
xlat
sbb
push
hlt
imul
rcl
loope
sbb
and
dec
adc
lds
clc
out
out
rep
jp
out
ds
pusha
jecxz
jb
bound
add
mov
lret
in
mov
jle
push
pop
cmp
and
mul
jnp
fwait
lret
jle
xchg
push
xor
fwait
dec
xor
and
ljmp
inc
lcall
lahf
sub
insl
xchg
lret
in
out
dec
es
inc
test
sarl
movsb
pop
push
dec
mov
clc
add
jb
cmp
adc
ja
jge
pop
and
mov
ret
jmp
jl
inc
inc
ret
add
movsl
or
mull
sub
call
sbb
mov
iret
jecxz
ret
sub
jns
int3
sub
imul
push
inc
mov
cmp
lret
mov
xchg
mov
xchg
mov
dec
lods
jo
push
jecxz
dec
xchg
mov
adc
pop
dec
inc
cmpsl
inc
arpl
int
jbe
or
or
pop
ss
lock
outsl
mov
fidivs
pop
mov
icebp
xorl
xchg
movsb
push
inc
mov
imul
movsl
cmp
lods
repz
mov
cmc
ret
pop
mov
imul
call
shll
add
jnp
loop
les
repz
idiv
fsub
lock
xchg
movsl
push
imul
pop
lods
mov
loopne
fwait
pop
dec
add
lds
jge
dec
arpl
or
sarb
dec
jle
mov
movsl
inc
sub
mov
rclb
nop
adc
aas
mov
test
push
daa
mov
cmp
pop
outsb
jnp
cltd
aas
inc
les
lods
in
popf
stc
rcr
hlt
dec
int3
xchg
repnz
inc
test
loope
lret
mov
out
adc
das
add
clc
inc
xchg
and
test
jg
scas
into
dec
jno
cmpb
jbe
sub
xor
and
jbe
loope
cmpsb
mov
imul
enter
xchg
scas
ficoms
std
ljmp
xchg
mov
inc
dec
stos
pop
cli
mov
out
push
icebp
push
enter
mov
push
adc
daa
dec
loopne
fsubs
enter
mov
iret
filds
cli
dec
das
fildll
je
daa
or
xor
pop
js
mov
scas
fsubr
and
stos
gs
push
jns
mov
test
cwtl
cmpsb
xchg
jmp
jo
jno
cwtl
and
out
pop
test
lock
push
jg
aad
add
xchg
arpl
mov
adc
cmpsl
adc
jp
cmovge
dec
pop
fsubs
push
pop
jmp
cmp
loop
sahf
mov
cmp
shrb
lods
pop
or
or
negl
out
pop
iret
stos
xor
rorb
ljmp
jnp
jp
lods
out
cs
push
mov
push
je
add
lock
int
jns
sub
push
ds
out
push
xor
mov
ficomps
mov
pop
fidivl
or
and
sbb
lods
roll
pop
jl
xor
and
aaa
repz
mov
xor
mov
mov
jecxz
jbe
dec
aam
test
je
mov
cmp
in
push
mov
mov
dec
push
out
frstor
mov
addl
mov
xchg
cmp
add
mov
and
aaa
pop
push
push
cwtl
push
pop
dec
xchg
sub
cmp
std
push
mov
mov
lods
ss
jns
rcrl
or
jmp
inc
sub
popf
in
mov
pop
mov
adc
push
imul
mov
out
sbb
mov
and
pop
and
lret
jbe
icebp
mov
shll
xlat
mov
shll
cmc
gs
mov
stc
pusha
imul
sbb
clc
popa
xchg
dec
lods
repz
stc
add
sarb
aam
inc
sti
loop
pop
aad
in
ja
movsl
mov
or
cmp
shr
out
dec
fldl
aad
out
or
mov
rcl
popa
loopne
outsl
add
xchg
or
push
pop
outsl
imul
mov
add
xor
leave
aad
adc
add
add
pop
cmc
adc
sbb
repnz
test
inc
loope
sahf
hlt
jecxz
add
arpl
xor
adc
roll
out
push
mov
jo
sbb
enter
inc
push
inc
in
xor
pushf
jl
cmc
aas
lods
sbb
inc
imul
pop
pop
xor
sub
stos
fidivs
pushf
inc
cmp
mov
pop
aaa
adc
mov
pop
add
rorb
fiaddl
cmp
imull
addr16
lods
imul
fists
jp
dec
popf
shl
arpl
and
mov
das
pop
push
dec
jg
clc
dec
out
ljmp
sub
test
shlb
cmpsl
hlt
cmp
in
dec
mov
sahf
jbe
jg
push
arpl
xor
and
loop
or
mov
pop
adc
mov
in
mov
and
xor
dec
and
inc
in
push
ds
sbb
lods
jmp
xor
pmullw
sbb
mov
outsb
mov
mov
jne
scas
pop
or
shll
scas
or
jnp
and
add
mov
and
in
mov
xchg
inc
mov
js
xchg
arpl
jl
xchg
jb
sub
jns
and
jbe
jge
push
xor
xor
dec
pushf
cmp
mov
or
sbb
fs
pmaddwd
out
fldcw
stos
stc
inc
add
stos
inc
push
sbb
imul
out
mov
mov
pusha
mov
sahf
cmp
sahf
pop
jl
ret
fwait
call
scas
out
cmp
outsb
mov
cmp
pop
stos
mov
sub
ljmp
sbb
or
movsl
ret
repnz
cs
or
and
gs
pop
test
ja
pop
mov
and
sub
cmp
enter
rorl
or
ret
loop
enter
xor
mov
cmpsl
cmpsl
mov
pop
add
mov
out
ss
mov
test
imulb
enter
sti
out
inc
jl
mov
rcll
pop
inc
xchg
insl
adc
cmp
inc
lret
testl
jnp
push
mov
mov
ss
out
xor
mov
popf
imul
adc
sub
pop
jg
mov
rcrl
js
push
or
adc
xor
xchg
sti
cli
sub
xor
fstps
outsl
adcb
stos
repz
mov
dec
adc
fimull
inc
test
push
cmpsl
pop
out
push
pop
push
popf
stos
mov
jl
add
mov
shr
ds
iret
cmp
maxps
mov
cli
pop
aas
mov
outsb
insb
movsb
sbb
pop
out
or
popl
stc
and
jp
jle
and
addb
mov
je
popa
add
jb
mov
mov
add
dec
pop
lods
enter
jno
fldenv
cmp
js
add
mov
hlt
mov
rolb
es
add
jmp
push
xlat
cwtl
mov
or
aad
or
dec
cld
push
sbb
outsb
out
loope
add
in
or
aam
push
or
and
imul
xor
push
cli
rorb
shll
push
scas
xchg
push
ds
aam
leave
imull
and
jnp
xor
fsubp
add
nop
dec
aad
mov
stos
out
loop
jl
fstl
pusha
sub
push
cs
or
push
ret
movsb
mov
icebp
fsubrl
cs
in
or
sahf
jb
cli
rcr
call
in
mov
stc
inc
xor
cmpsl
mov
pop
in
sbb
js
clc
subl
jb
jmp
pop
pop
cs
sbb
adc
icebp
push
mov
faddl
out
add
std
mov
shl
add
cmp
int3
fwait
mov
scas
add
aad
cmpsb
test
cld
xorb
daa
popf
and
pop
mov
popa
lods
pop
pop
pop
imul
fs
mov
cmpsl
loop
or
sbb
xor
rcll
cmc
cmp
pushw
aaa
pushf
mov
stos
pop
push
ljmp
ljmp
add
mov
loop
inc
loopne
pushl
fwait
mov
das
cwtl
jae
int
sbb
clc
and
das
int3
pop
add
mov
pop
xchg
mov
lahf
shlb
xchg
popa
mov
movsl
dec
xchg
pop
aaa
mov
pop
cld
pop
aas
inc
jle
add
les
adc
mov
sub
int3
ret
arpl
into
or
ds
mov
adc
cmp
enter
fisttps
les
push
adc
out
dec
fcmovnu
inc
xor
lods
or
and
jb
in
xchg
jno
adcl
fisttps
pop
jno
push
cmpsl
mov
imul
addl
sbb
into
mov
xor
or
push
test
inc
cs
sarl
lret
pop
insb
popa
popl
mov
sarl
mov
xor
pop
in
sbb
push
pop
hlt
sbb
lods
negb
add
sarb
arpl
xchg
jmp
les
lock
jns
rcr
dec
int3
out
cmp
insl
push
push
lret
mov
push
xchg
clc
add
cs
in
add
adc
pop
sub
fdivrl
sbb
repnz
in
mov
and
xor
pop
pop
pop
int
pop
icebp
shrb
or
mov
mov
or
sbb
mov
imulb
imul
sbb
mov
in
and
outsb
push
sahf
inc
stos
mov
and
ret
in
xor
lea
sbb
xchg
fwait
pop
mov
int3
iret
pop
mov
mov
dec
xchg
movsb
jne
adc
cwtl
cmp
cld
outsl
and
mov
jmp
jp
and
pop
outsl
and
insl
mov
xchg
lahf
mov
mov
and
inc
mov
bound
out
adc
jle
inc
fs
es
mov
imul
orb
xlat
mov
dec
dec
rep
jae
outsl
bound
mov
push
mov
dec
add
jp
adc
or
and
sub
mov
sub
cli
push
jae
lahf
mov
es
lock
jbe
cli
inc
popf
daa
jbe
mov
ja
shrl
mov
mov
xlat
push
imulb
test
jo
jmp
or
lea
aaa
fadd
push
inc
jge
cmpsl
pop
pushf
push
sbb
push
in
mov
in
xchg
outsl
bswap
bound
pop
stos
mov
and
pusha
stos
imul
rcr
fstpl
pop
lahf
andl
xchg
mov
xor
out
xor
pop
nopl
rclb
hlt
ja
sub
in
xor
insl
loop
lcall
cli
lret
xchg
sub
pop
outsb
push
add
cmc
mov
adc
insl
cmp
mov
scas
pop
aas
sbb
cmp
inc
and
jns
xchg
mov
jne
insb
data16
mov
std
daa
dec
adc
in
pop
mov
call
sti
mov
fdivr
mov
dec
mov
subb
cmc
cwtl
sahf
pop
push
xor
sub
cmp
add
mov
cli
js
pusha
push
std
jb
ljmp
push
xor
fwait
andb
add
add
scas
inc
mov
cmp
inc
mov
xor
cmp
icebp
cwtl
insb
sub
jne
arpl
mov
cmp
pop
int3
clc
jnp
divb
in
mov
stos
and
sahf
mov
outsb
std
scas
mov
pushf
push
cmp
xchg
sbb
test
push
cli
cs
shlb
inc
lods
popa
or
sarb
jg
jno
test
fsubs
xchg
or
sub
nop
add
mov
and
rorl
cmc
adc
arpl
cmp
jnp
loopne
xor
sbb
cmpl
andb
and
adc
xlat
sbb
sti
push
js,pt
dec
add
cld
jne
adc
lcall
jmp
mov
add
stos
inc
ja
xchg
mov
mov
mov
imul
adc
sub
sbb
insb
ja
mov
insb
movsl
and
aaa
lcall
dec
aas
enter
outsb
push
push
xor
sbb
sub
add
sub
jmp
adc
xchg
xchg
enter
insb
push
cmp
cltd
jno
lea
inc
jo
xchg
mov
pop
mov
mov
jne
pusha
xchg
xor
inc
push
dec
xor
and
sti
cli
loope
push
sub
nop
jge
call
or
addb
mov
mov
loop
mov
add
mov
pop
and
ret
jo
enter
repz
pop
xchg
enter
int3
jmp
cmp
ss
fucomp
fsub
cmc
mov
cmp
push
lahf
sbb
fsubp
std
fs
test
pop
rolb
test
xchg
and
push
ljmp
sub
popf
shrl
punpckhbw
rclb
imul
testl
lea
test
push
lea
push
cmp
cmp
testb
pop
loopne
orl
sub
adc
cli
sub
xchg
pop
fsts
adc
push
add
cwtl
dec
shll
sti
div
mov
test
mov
sub
mov
ret
daa
in
push
movsb
sarl
mov
vpsubsb
jecxz
jne
pop
addr16
push
outsb
aas
arpl
adc
inc
xchg
insb
aas
shlb
popf
mov
or
push
ja
mov
repnz
cmp
xchg
cmpsb
mov
mov
out
hlt
adcl
lahf
int
mov
dec
cmpsb
int3
push
lret
imul
or
outsb
mov
stos
pop
mov
pop
push
or
lret
stos
adc
mov
mov
out
pop
jns
adc
push
inc
or
mov
mov
jmp
cmp
pop
add
sbb
es
sti
inc
lcall
mov
push
call
lcall
notl
push
icebp
std
jg
sahf
push
push
xor
mov
push
in
sti
push
in
xor
push
mov
jecxz
mov
mov
pop
mov
xlat
pushf
mov
mov
roll
and
push
mov
push
pushl
ljmp
jp
jg
sub
cmc
xchg
icebp
stc
xor
cwtl
dec
shrl
sub
std
mov
sub
mov
inc
push
sbb
inc
scas
movsb
and
adc
adc
int3
mov
mov
push
popa
inc
outsb
cmc
mov
pop
out
ret
mov
sbb
insb
sbb
and
fs
xchg
push
mov
sarl
icebp
outsl
leave
inc
imull
int3
movsb
push
fnstcw
xchg
in
scas
insb
lahf
inc
pusha
lock
xchg
ret
gs
pop
sbb
and
adc
xchg
mov
es
xor
lds
cmp
push
andl
add
test
in
es
std
scas
add
mov
stos
int
add
and
inc
mov
jge
fsubs
stc
jne
push
imul
push
in
inc
mov
jo
sub
pop
or
fwait
mov
outsl
adc
scas
xor
fimuls
out
sbb
movswl
js
mov
loope
xchg
jne
cld
inc
mov
mulb
cmp
jge
pop
xchg
push
push
sub
adcb
dec
aad
or
push
add
rclb
push
test
xchg
cs
setl
bound
shll
sbb
cmpb
outsl
bsf
mov
mov
xorl
rorb
pusha
call
mov
popa
xchg
rorb
xchg
adc
pop
dec
iret
btc
mov
stc
dec
cmpsb
xchg
dec
mov
cmp
fxch
iret
xor
pop
fwait
js
insb
out
pop
nop
jno
sbb
xchg
add
or
adc
mov
mov
fnstenv
shr
stos
cwtl
testl
divb
popf
jmp
pop
xchg
fdivr
fdivr
or
or
cmp
jg
mov
fidivs
adc
sbb
in
xchg
push
push
outsl
fwait
pop
mov
push
imul
imul
and
scas
mov
xchg
and
aas
pushf
pop
mov
scas
push
outsb
cmc
lcall
and
adc
fstps
mov
adc
out
jg
fnstenv
jae
vcomiss
push
sub
cmp
aam
mulb
inc
cmp
cmp
and
rorl
stos
push
stos
or
insb
push
mov
or
js
cs
xor
pop
mov
loop
filds
mov
jnp
fptan
mov
mov
jne
js
loop
pop
pop
dec
cmp
lods
rclb
add
adc
xchg
cld
ljmp
mov
mov
addl
pop
jb
aam
sbb
mov
mov
sbb
push
add
inc
mov
int3
call
daa
adc
pop
jbe
xor
add
mov
scas
cmp
sub
sub
std
int3
dec
mov
adc
lock
mov
mov
lock
ljmp
es
mov
cmpsl
ret
in
outsb
cld
push
lcall
aas
in
and
nop
aaa
push
in
ljmp
cmpsl
les
rcrb
das
push
dec
sbb
or
fsubrl
or
pop
xchg
add
subl
mov
xchg
fidivl
or
je
outsl
jmp
leave
cwtl
pop
jl
loop
xchg
addr16
fwait
mov
and
rorl
adc
mov
and
test
cld
out
and
pop
test
or
xchg
push
jecxz
cmpsl
ljmp
and
rcrb
xchg
fcompl
pusha
add
and
mov
sbb
je
mov
cld
jle
int
lcall
int
sbb
sahf
add
arpl
dec
mov
cmp
sbb
mov
movsl
sbb
sbb
push
test
faddl
lds
cltd
jb
cltd
popa
cmpl
cld
inc
jae
outsl
mov
xchg
or
xlat
repnz
shll
cwtl
enter
xchg
ss
out
pop
jle
aaa
fcoms
int
adc
lods
sbb
insl
std
mov
jp
xchg
pop
dec
fdivr
cmp
enter
in
dec
lock
int
test
hlt
or
push
dec
push
in
popa
frstor
xor
fwait
adc
stc
xor
testb
mov
in
dec
mov
xchg
pop
cmp
popf
les
jecxz
push
fcoml
dec
cltd
sbb
jae
fwait
mov
stc
ret
and
cmp
jne
jae
bnd
xor
push
lods
ds
ss
xor
ljmp
adc
aam
sbb
in
sub
repnz
subl
insb
mov
xor
hlt
jecxz
mov
sub
xchg
mov
mov
dec
adc
aaa
cltd
aaa
data16
test
out
mov
push
arpl
push
mov
and
or
pop
adcl
push
ja
sub
add
add
lcall
push
roll
stos
jge
leave
sti
insb
inc
imul
div
outsb
pop
cmp
add
cmpsb
xchg
xchg
in
cmp
imul
inc
mov
movsl
add
sub
fnstcw
push
mov
pop
jg
adc
adcl
cmp
addr16
jnp
cmpb
pusha
dec
mov
scas
lods
sti
fs
jo
mov
pop
rcr
and
imul
mov
jne
mov
mov
sbb
imul
mov
mov
stos
xlat
out
std
xchg
sub
push
cwtl
and
mov
mov
imul
aaa
jg
or
scas
xor
scas
mov
rcl
add
addr16
je
out
ljmp
adc
sbb
lahf
mov
les
xchg
jns
add
xor
fnsave
mov
clc
and
inc
push
cmpsl
cltd
test
outsb
xchg
cmpsl
es
aam
shrb
dec
andl
dec
xlat
lea
stos
shrl
cmp
or
aam
add
ljmp
icebp
lret
lret
scas
cmc
or
pop
dec
pop
insb
mov
loopne
pop
std
cmp
jle
insb
shll
lret
mov
xrelease
sub
or
jecxz
ja
sub
push
pop
ficoms
ret
mov
cmpb
nop
stos
shrb
push
pushf
push
adc
mov
lock
mov
lret
rorb
add
lret
std
das
pop
cmp
je
push
jp
mov
loope
pop
iret
xchg
xor
addl
push
dec
fisubrl
mov
outsl
push
push
sti
pop
sbb
popf
outsl
repnz
xchg
lcall
idivl
and
add
sarl
in
in
mov
stos
pusha
mov
rclb
dec
push
es
out
mov
cmp
adc
int3
lds
fsubr
inc
mov
in
outsb
dec
inc
and
mov
cltd
jmp
aaa
cmpsb
add
aaa
hlt
inc
or
dec
pop
call
mov
popf
loopne,pn
lahf
and
imul
push
sbb
xchg
repz
repnz
push
jle
mov
push
add
sub
loop
push
jae
cmp
push
xor
sub
push
cmp
icebp
dec
mov
jp
cmp
dec
fisubrl
jne
in
je
push
gs
xchg
movsl
addl
dec
mov
xchg
sbb
xor
out
insl
xchg
and
aaa
mov
jno
mov
in
cltd
or
jae
mov
sbb
sbb
xchg
inc
and
add
or
and
xchg
xor
lds
add
xor
test
push
cmpb
es
jg
dec
cmpsb
scas
add
lahf
adc
lods
repz
popf
mov
xor
std
cltd
rolb
daa
inc
jno
dec
sub
imul
mov
pusha
push
data16
cmp
push
mov
xchg
push
xchg
mov
aad
fwait
mov
push
xchg
xchg
aas
leave
pop
lret
arpl
dec
jnp
cmp
lret
les
cli
adc
dec
push
and
aam
fisttps
stc
sbb
mov
xor
mov
sub
js
jg
xchg
arpl
cld
js
das
or
xchg
sarb
pop
psubd
popa
arpl
or
mov
lods
fwait
pop
mov
mov
jl
or
xchg
inc
inc
fdivs
sbb
mov
jg
lret
call
scas
fs
movsb
pushf
xchg
repnz
movsb
and
int
imulb
mov
mov
pop
add
push
sbb
sub
cmp
and
imul
xchg
sbb
sbb
adc
cs
jne
repz
ljmp
sub
adc
les
orl
inc
pushf
out
sbb
nop
add
fdivrs
stos
movsb
stc
icebp
cmp
jle
push
sub
jp
rep
mov
iret
stc
sbb
loope
inc
push
je
or
ja
or
push
mov
neg
bound
or
xchg
or
sub
pop
ja
or
push
shlb
cwtl
mov
mov
enter
clc
add
fsubl
mov
lds
imulb
pop
xor
xor
cmp
pop
sbb
push
leave
sbb
lret
pushf
cs
push
repnz
mov
sbb
inc
push
push
pop
iret
jne
popf
pop
std
shlb
jnp
fmull
or
cld
and
push
xor
mov
insb
arpl
cmpsl
ret
repnz
pop
and
mov
sub
insb
inc
in
push
push
lret
jg
sub
pushf
cmp
lods
divb
aam
test
nop
imul
repz
lret
and
fmul
pop
repnz
inc
adc
mov
mov
scas
cs
shll
call
dec
lds
jmp
shll
push
fs
movb
movsl
add
incb
lods
out
dec
push
ficoml
test
xor
lcall
dec
jmp
jmp
add
subps
dec
mov
outsl
insb
ja
hlt
pop
cwtl
outsb
inc
mulb
idivb
in
testb
jmp
hlt
add
xchg
mov
mov
nop
jecxz
pop
push
repnz
js
fnstenv
jae
xchg
sub
and
add
lcall
aam
into
sbb
pop
ror
movsb
hlt
orl
pop
xlat
mov
fidivrs
inc
push
ja
dec
and
stos
dec
sbb
outsb
and
pop
insb
rcrb
inc
push
xlat
in
ret
xchg
mov
stos
dec
sbb
rcll
jae
rclb
jg
or
test
sub
hlt
in
fs
mov
int3
add
loop
movsl
insl
aam
fsubrl
into
daa
push
testb
div
xor
cltd
arpl
xchg
sub
mov
int
jle
addb
test
cmpsl
mull
sti
push
ja
xlat
dec
lods
out
pop
sbb
xor
add
and
mov
sbb
sub
sbb
into
ja
sarb
jbe
jae
pop
ret
push
sbb
push
push
stc
pop
aam
fwait
les
jmp
push
cmc
cmp
mov
push
pop
in
jecxz
fisubrs
cmp
bound
lea
cmpl
add
dec
inc
pop
leave
pusha
pop
xchg
jle
ss
jnp
xor
push
pop
add
pop
inc
dec
inc
ljmp
out
cmp
push
and
cmc
mov
and
xor
cld
lds
repz
xchg
shrb
ss
xchg
clc
mov
jl
mov
ljmp
cmp
jge
sub
mov
scas
mov
rcrl
ljmp
xchg
cmp
and
pop
ss
mov
inc
daa
sub
jae
fnstcw
popa
sbb
ficoms
test
mov
ret
lock
dec
xchg
inc
mull
inc
or
in
jl
je
cmp
mov
sbb
inc
movsb
out
sub
sub
push
sub
mov
fldt
add
xchg
out
dec
mov
loop
jno
mov
mov
addr16
imul
mov
sbb
dec
xor
jmp
outsb
clc
mov
loop
test
faddl
and
or
mov
dec
mov
pop
popf
nop
rclb
jbe
out
mov
push
sub
lea
jge
push
mov
in
inc
test
lea
rol
xor
dec
inc
outsb
pop
mov
cmp
test
dec
out
mov
push
loope
sbb
xchg
pushf
fldcw
rcl
cmp
mov
packssdw
pop
ss
fiadds
fwait
das
ss
popf
jno
ja
outsb
sbb
scas
test
test
mov
jmp
inc
out
adc
xchg
ret
imul
mov
cld
stos
push
lods
adc
xchg
clc
jmp
lcall
cmp
je
out
jle
jle
ret
mov
and
adc
int
mov
mov
stos
imul
clc
lcall
stc
and
adc
aas
add
push
jae,pt
ret
inc
mov
push
inc
scas
lcall
leave
push
push
orl
frstor
and
aam
movsl
in
popf
mov
pop
ret
jp
imul
inc
call
es
xlat
int3
or
dec
jbe
dec
mov
testl
pop
jnp
sub
aaa
jecxz
cmp
xlat
test
sub
push
mov
sub
addr16
data16
sbb
mov
jno
sahf
jno
push
mov
sbb
scas
push
add
fs
cli
cmpsb
cli
inc
cs
std
push
pop
out
fcompl
psubq
mov
jmp
or
push
pop
xor
cmpsl
jno
orl
pop
and
xor
insb
sbb
popf
sbb
dec
pop
clc
sub
loop
addl
xlat
scas
mov
outsb
or
push
pop
jo
mov
or
comiss
insl
inc
ficoms
jns
lock
xor
lcall
stc
mov
pop
cmp
fistps
xchg
nop
daa
add
pushf
sub
pop
and
mov
shlb
xor
mulb
jecxz
cli
sbb
sar
lds
dec
inc
and
enter
fcmove
push
add
dec
mov
rclb
xchg
pop
add
jp
aam
repnz
out
aaa
push
lret
push
iret
sub
cwtl
mov
xchg
inc
ds
arpl
testb
xchg
cs
or
nop
insl
jl
shrl
rcr
xchg
mov
cmp
xor
daa
imul
stos
popa
add
pop
inc
pop
push
jmp
mov
cmp
pop
mov
push
frstor
outsb
aam
aad
ds
test
aam
pop
std
cs
sub
sub
mov
cmc
fldenv
sbb
jp
cs
jbe
and
cli
pushf
movsb
out
test
push
adc
sbb
ja
mov
roll
or
dec
test
jne
cmpsb
jge
pop
mov
cwtl
test
std
and
add
push
dec
xchg
dec
adc
dec
mov
aad
or
sub
sub
or
jnp
cmp
push
lds
test
in
lret
in
addr16
jle
pop
pop
xor
mov
popa
xchg
dec
into
stos
in
sti
jb
jl
fs
dec
push
aam
dec
daa
and
std
aas
outsl
scas
cmp
test
push
mov
ss
jl
push
mov
inc
mov
mov
inc
test
add
mov
arpl
mov
fldenv
ficomps
lock
insb
push
out
cmpsl
or
mov
repnz
iret
call
sub
mov
push
push
aam
rorb
imul
ja
cmpl
cli
push
out
adc
push
or
out
pop
add
push
push
xchg
cwtl
insl
inc
cs
add
lods
rorl
xchg
les
push
pop
dec
jae
push
clc
data16
sbb
lret
pop
mov
and
mov
or
xlat
movhps
fsubrs
mov
sti
or
insb
sbb
insl
push
mov
outsb
jns
enter
and
xchg
leave
push
and
dec
repnz
mov
pop
xlat
push
test
pop
pop
xchg
out
xor
jno
pop
cmp
icebp
pop
stos
xchg
mov
xor
pop
leave
inc
ss
out
mov
dec
ja
push
jl
adc
add
xchg
xorl
int
lcall
fadd
aaa
add
fildl
adc
push
movsb
dec
xorb
jae
in
in
sbb
repnz
inc
mov
fs
xor
pop
jne
cmp
out
in
sub
mov
jge
dec
ljmp
or
cmpsb
sti
sbb
out
and
or
xor
and
pushf
xchg
push
push
loop
outsb
cmc
mov
xor
mov
stos
lods
in
dec
mov
add
inc
shlb
adc
cmpsb
movsb
aas
cmpsl
pop
mov
mov
stos
lret
mov
or
imul
std
adc
lods
mov
lcall
movsl
mov
gs
push
pop
das
mov
dec
les
mov
push
adc
sub
or
cld
daa
out
pop
mov
ret
lods
sub
nop
je
cmc
sahf
sub
repnz
cmpsb
imul
nop
cmp
test
mov
push
sub
add
jg
xchg
lret
lods
repnz
xchg
imulb
xchg
xlat
xor
jb
loope
xor
stc
add
jmp
mov
mov
arpl
pop
lds
mov
push
pop
sbb
sbb
push
mov
jnp
paddw
jecxz
popa
sub
mov
jnp
sahf
jo
loopne
fs
mov
mov
test
jbe
divl
in
dec
rclb
jmp
cli
lret
mov
adc
push
xorb
and
pop
jnp
mov
adc
mov
dec
jp
jo
pop
push
inc
loopne
pop
mov
pop
test
mov
iret
gs
icebp
xchg
int
mov
xor
sub
add
and
fcmovne
jp
aaa
lock
mov
mov
stos
jb
test
fstl
adc
xchg
push
pmaxsw
imulb
lret
push
xchg
fisubrs
arpl
sti
and
xchg
sbb
adc
nop
dec
xor
int3
dec
out
pop
pushl
xor
sub
mov
enter
sbb
leave
push
adc
push
and
ret
jg
mov
cmp
push
data16
mov
xlat
adc
push
pop
jl
pusha
cmpsb
cmp
xor
movsl
jno
lret
pop
fwait
xor
bndldx
sbb
decl
sbb
dec
fidivrl
sub
les
mov
inc
xchg
push
jne
shl
jnp
mov
nop
inc
sbb
ret
out
and
mov
push
int
test
inc
jb
aad
xchg
rclb
lods
adc
mov
mov
in
cmp
add
jg
iret
cmp
sbb
mov
outsl
inc
push
xlat
cmp
adc
xorl
out
inc
scas
inc
xchg
adc
int3
out
imull
mov
jecxz
xchg
inc
aas
popf
xchg
lea
cmp
test
dec
sbb
and
and
sub
mov
sub
fsubrl
cmp
fs
push
mov
das
imul
dec
push
and
jmp
pop
sti
xor
outsl
das
ljmp
ljmp
insb
push
fistpl
xchg
addr16
sbb
fldcw
ss
dec
cltd
jmp
sub
jno
xchg
adc
inc
push
or
fidivrs
push
test
pop
push
fwait
ret
inc
movsb
sub
add
sbb
callw
inc
jbe
in
fs
sub
dec
cmp
fnsave
or
xor
and
gs
imul
mov
xor
mov
pushf
cli
in
mov
push
sbb
aad
sub
clc
and
ds
clc
push
jbe
mov
popa
pop
iret
xor
lea
sub
sbb
inc
jmp
push
and
das
test
rcll
fisubrl
mov
xchg
push
lret
in
jne
in
orl
mov
push
into
jge
push
loop
bound
add
jp
cmp
fsubrp
das
js
inc
and
add
js
scas
clc
push
sti
and
jns
out
je
arpl
in
mov
inc
pusha
sub
or
jae
mov
adc
lods
jb
insl
lret
icebp
loop
scas
cmp
stos
es
bound
repnz
add
ja
xchg
popa
and
mov
icebp
push
pop
pop
nop
sub
in
jbe
fwait
add
test
out
test
sub
bswap
mov
cmp
inc
push
add
rorb
fadds
pusha
rclb
mov
pushf
lret
movsb
out
and
icebp
rorl
add
int
popa
rcrl
jb
fsubrp
stc
mov
push
fisubl
lcall
cmp
lcall
cli
jo
push
scas
mov
lret
lods
jecxz
loop
stos
andl
sbb
loop
sahf
xor
sti
fdivs
mov
in
orl
pop
sbb
adc
cmp
out
jecxz
jns
add
pop
scas
inc
loope
xchg
jne
int3
push
mov
lret
push
fdivrs
sarb
fsubs
in
mov
shll
mov
lcall
in
je
into
outsb
lods
jp
cmp
rcll
mov
sub
xor
lock
push
je
pop
cwtl
fstps
aad
cmp
shl
out
dec
repnz
push
sarb
pop
lahf
iret
mov
dec
mov
dec
sbb
leave
lock
sbb
mov
mov
outsb
mov
mov
cwtl
inc
popa
rcrb
sbb
push
lds
fsubrs
test
inc
xor
andb
or
nop
rcll
ja
pop
cmp
add
pop
pop
dec
popa
arpl
dec
pop
lret
mov
jg
fs
es
repz
add
repnz
adc
push
and
cmp
rol
data16
adc
xchg
icebp
pusha
int3
cwtl
out
xlat
xchg
lods
mov
out
test
and
cmp
push
xor
xlat
bnd
dec
sub
mov
lret
push
cmp
mov
lcall
sub
mov
push
mov
jne
test
imul
sbb
aaa
sub
cmp
sub
cltd
lods
sahf
inc
xchg
cwtl
out
nop
std
fstpt
lods
outsb
dec
push
daa
mov
jo
fiaddl
ret
ljmp
pushf
hlt
xor
lock
pop
xchg
add
in
sub
aad
rolb
mov
mov
gs
dec
mov
cmp
nop
adc
ja
jge
outsl
xchg
mov
hlt
mov
lock
sub
je
mov
sarb
adc
out
mov
xchg
fs
sarb
jecxz
ss
gs
mov
push
jle
xor
jbe
inc
nop
mov
test
mov
and
lahf
mov
stc
cli
mov
aas
dec
xchg
arpl
ss
enter
fucom
sti
mov
lods
aas
pop
mov
mov
scas
data16
mov
xor
pop
sub
add
stc
nop
icebp
pushf
and
pop
lods
or
enter
and
cmc
lock
repz
jl
cmpsb
sbb
leave
in
test
fcomps
or
repnz
divb
inc
leave
icebp
mov
cmp
add
lcall
or
pop
fstpt
pop
lret
push
mov
mov
mov
mov
xlat
bound
bound
mov
or
fadd
lcall
mov
adc
fistps
sbb
ss
test
cmc
mov
jnp
mov
ret
shld
push
dec
notl
roll
push
or
jb
fistpl
lods
imul
sub
sub
pop
mov
jne
adc
inc
inc
cmpl
mov
lods
shlb
dec
clc
imul
mov
inc
leave
lds
aad
jns
sahf
insl
mov
adc
fmul
sub
jp
dec
sbb
dec
push
xchg
xchg
lret
xchg
invd
cli
fldt
jge
or
out
fcmovu
nop
in
mov
outsl
aad
stos
scas
lea
std
inc
out
fsubrl
cwtl
jmp
aam
push
aad
inc
ret
fbld
mov
and
cltd
push
paddusw
mov
mov
jmp
ret
mov
outsl
pop
pop
adc
shrb
dec
jnp
mov
mov
fsts
aas
std
sbb
cmp
pop
stos
dec
sub
xor
outsb
loope
movsl
xchg
sub
rcll
push
mov
pop
sub
ss
adc
jb
je
test
jge
jp
push
scas
sbb
hlt
lcall
lds
in
lods
mov
adc
sbb
dec
pusha
hlt
push
inc
sbb
movsl
mov
pushf
popa
js
push
sbb
dec
mov
out
cld
xchg
jae
mov
and
sub
and
sub
out
ffreep
mov
xchg
scas
outsb
test
ret
adc
mov
adc
incl
sbb
pop
push
movnti
scas
out
in
lods
push
or
lret
sbb
sarl
pop
movsb
leave
sub
leave
lea
inc
xor
add
js
andb
cmpsb
or
fstps
push
adc
sub
xor
ja
pop
sti
insl
arpl
push
mov
insl
lret
movsb
xchg
je
xorl
fwait
daa
mov
xchg
int
and
push
adc
imul
xchg
les
add
inc
push
xchg
loope
pop
mov
pop
fildl
repz
pop
xchg
fs
and
cmp
test
mov
sahf
and
or
jno
in
out
push
lcall
out
dec
loope
ss
pusha
mov
and
sub
ja
jmp
popa
lret
mov
cmp
or
lock
pop
pop
in
add
and
fdivl
jnp
xchg
lock
jle
cli
scas
test
jecxz
and
fcompl
fcoml
and
dec
ret
bound
ds
sbb
pop
scas
shl
mov
or
or
int
sub
popf
mov
cmp
xchg
xchg
jmp
cli
and
outsb
mov
push
push
dec
leave
scas
inc
fwait
repnz
add
mov
leave
push
popa
les
add
ja
scas
imul
daa
add
jp
pop
scas
aaa
sahf
and
subl
inc
fucomp
pop
cmp
rcrl
mov
sub
cltd
fildll
mov
ret
mov
inc
pop
vmread
dec
sahf
cmp
push
cmp
out
movsb
roll
aas
ficoml
fxtract
lods
stos
mov
mov
adc
push
daa
int3
subb
cltd
das
xor
dec
mov
scas
lcall
fcomip
out
repnz
jo
data16
sbb
aas
push
push
dec
aam
xor
mov
movsb
jmp
push
les
push
dec
fwait
out
xchg
sahf
inc
or
mov
scas
pop
or
loopne
stos
push
or
imul
xor
adc
add
andl
push
leave
mov
adc
push
dec
ds
push
shl
xchg
add
int3
or
aas
fnstcw
cmp
popf
inc
xlat
pop
dec
xor
leave
mov
pop
aam
sbbb
stc
addr16
push
mov
xor
lret
jno
sub
lds
pop
inc
lods
push
popa
cmp
push
cli
cmpsb
jp
and
les
xor
out
jae
push
xor
adc
popf
rcll
loope
and
mov
mov
mov
xor
or
test
je
adc
jb
mov
lock
adc
inc
or
icebp
insl
repnz
hlt
sbb
sbbb
mov
insl
sub
inc
cmpsl
icebp
push
dec
jne
test
mov
fisubrl
jne
add
sbb
mov
cli
outsl
sub
dec
xchg
or
push
xchg
dec
movsl
leave
fstpt
add
nop
shlb
sbb
mov
cmpsb
mov
mov
push
jp
imul
xor
cmpsl
bound
mov
pop
nop
push
sbb
sbb
jns
test
negl
in
int
mov
xchg
inc
daa
jg
outsb
xchg
adc
pop
int3
outsb
jecxz
dec
in
cmp
mov
lds
add
pop
insb
mov
sbb
dec
test
jecxz,pt
jbe
or
fistpll
xchg
add
js
sahf
fwait
int
push
sub
or
jb
or
push
inc
push
and
add
out
jo
dec
inc
xor
ds
icebp
push
sbbb
jno
mov
push
jle
xor
mov
dec
or
je
leave
mov
fists
out
lds
ja
xchg
mov
pop
mov
jo
mov
mov
sti
xor
shlb
test
arpl
mov
cmp
and
and
xor
adc
lret
xchg
clc
call
inc
pop
jns
mov
inc
test
xor
out
cwtl
es
packssdw
mov
and
and
pop
fstpl
testb
cmc
mov
out
mov
mov
sub
lret
orb
imul
in
jae
sub
jno
jecxz
pop
mov
outsb
stos
fmull
adc
outsb
xchg
daa
cs
and
es
enter
cmp
mov
mov
andl
cs
popa
fnstcw
push
and
mov
pusha
outsb
je
xorl
push
mov
xor
mov
jmp
pop
xor
leave
scas
out
rol
xchg
imul
xchg
dec
in
sahf
movsb
decl
push
dec
inc
fmull
sub
and
or
mov
scas
lods
pop
xchg
adc
sub
in
dec
cmp
bound
enter
movsb
outsb
mov
mov
pop
aad
adc
fidivl
test
jmp
push
inc
mov
sti
pavgb
call
mov
jmp
imul
sub
fnstcw
sbb
js
mov
lcall
std
sti
dec
les
mov
cmp
sbb
push
or
out
add
test
jbe
sbb
mov
mov
xor
fdiv
ret
adc
stos
pop
js
in
sub
mov
add
cmp
and
subb
pop
pop
or
or
test
enter
test
in
sbbb
mov
rcll
fstpl
sbb
sahf
mov
mov
int3
sahf
mov
adc
dec
fistpll
push
cli
cwtl
xchg
pop
rcll
shrl
lods
stos
ds
outsb
imull
xor
ficoml
outsb
repnz
pop
lds
out
mov
es
sub
fwait
in
nop
sti
cmp
xor
inc
jg
sahf
shlb
pop
push
add
fldcw
dec
cmp
pop
sbb
in
add
fmul
lret
sbb
sbb
lret
addr16
or
sub
sbbb
xor
push
lods
jp
xlat
cmpsb
dec
xchg
cmp
jl
test
mov
mov
inc
lods
sbb
insb
jne
dec
sbb
inc
sub
outsl
mov
das
lea
inc
pop
cli
cmp
cwtl
xchg
pusha
movsb
mov
or
mov
xchg
in
cmpsb
icebp
in
mov
aad
imul
mov
dec
stos
mov
cmp
xorl
jae
add
call
sbbb
daa
push
mov
push
movsl
bswap
jbe
ret
lds
add
dec
in
test
jecxz
mov
adc
jb
imul
inc
push
pop
xor
mov
jo
stc
mov
adc
mov
pop
or
cwtl
mov
cmp
cli
mov
add
inc
or
xor
adc
push
push
sarl
push
aad
pop
inc
inc
movsb
lods
xor
stos
outsb
inc
pop
push
gs
and
ret
xchg
adc
int3
aam
inc
mov
dec
xor
test
sub
lahf
or
fildl
testl
lds
dec
or
mov
jnp
lret
addb
ret
mov
insb
loope
sub
ret
js
mov
jno
mov
ljmp
cmp
orl
ret
sbb
data16
inc
stc
lock
inc
pop
mov
lock
insb
or
aam
sbb
popa
and
adc
lret
imul
mov
fwait
lret
xor
nop
sub
cmp
ds
testb
dec
mov
sbb
mov
or
dec
dec
in
jbe
js
sub
bound
dec
xor
xor
sbb
inc
ss
repnz
mull
fnstsw
mov
jne
sbb
stos
mull
movsl
and
test
bound
or
adc
mov
mov
aam
jae
xor
shll
or
testb
test
in
and
mov
jle
cmpb
and
sbb
scas
test
mov
cmp
lods
js
movsb
xor
dec
stos
sbb
movsl
mov
in
ret
sti
push
mov
jg
stos
in
sbb
jp
int3
push
pop
mov
pop
pop
dec
cmc
dec
pavgb
es
in
add
cmpsl
insl
cmp
push
je
mov
sbb
ds
inc
push
das
xlat
pop
sbb
push
pop
pop
push
inc
lcall
imull
dec
inc
adc
dec
repnz
std
movsl
dec
pop
mov
push
push
add
cwtl
jnp
aas
mov
mov
sub
jp
push
push
mov
sub
addr16
jmp
es
ja
outsl
sbb
fsubl
mov
sbb
dec
sub
les
inc
lods
push
inc
xor
mov
out
aas
mov
xchg
inc
sbb
cmc
pop
stos
loop
into
sbb
scas
xchg
adc
mov
push
mov
xor
lret
lret
gs
das
jne
xchg
pop
xchg
push
lret
xchg
loopne
std
push
lret
and
out
adc
cmp
xchg
leave
das
or
negl
cmpsl
xchg
cmp
rclb
outsl
inc
bound
and
or
cmc
jmp
outsl
pop
pop
or
xchg
mov
std
cmp
xchg
daa
xchg
enter
xor
mov
rcr
pusha
push
mov
stos
xor
add
lods
ret
stos
call
sbb
fidivrl
std
lods
das
lea
mov
imul
lods
jae
adc
add
add
xor
pop
sbb
fnstcw
test
pop
lock
cli
xor
ret
push
pop
cld
and
ss
mul
push
int
mov
scas
push
out
mov
push
ss
out
fidivl
jne
mov
push
adc
adc
add
inc
pshufw
shrb
mov
sub
loop
sub
fiadds
sub
inc
dec
fs
add
inc
aas
movsl
ffreep
mov
pushf
mov
nop
mov
cwtl
mov
test
sub
jg
push
push
js
lret
jb
icebp
fsubs
pop
bound
pop
push
ss
lock
test
cmpsl
repz
sahf
xchg
jbe
jmp
push
je
or
cmp
or
enter
aam
out
repz
jns
push
xchg
clc
outsb
hlt
fldcw
xor
in
dec
jg
lret
pop
aad
mov
pand
cmpsl
push
cltd
in
jecxz
aam
push
das
dec
sti
inc
add
ljmp
shrl
aaa
frstor
mov
adc
push
fstpt
mov
push
loopne
stos
dec
mov
loope
inc
and
movsb
dec
mov
in
into
mov
in
js
push
lods
test
orb
jp
jnp
mov
mov
mov
mov
inc
repnz
or
pop
lea
mov
cmc
stos
fldt
insb
nop
inc
in
or
xchg
lret
xchg
push
mov
xor
das
jbe
shll
lods
mov
jne
cld
pop
cmc
pushf
push
xchg
mov
xorb
dec
pop
mov
mov
mov
addl
cs
pop
adc
sub
pop
addb
push
jl
div
pop
jns
cmp
jbe
pop
adc
pop
fdivs
nop
ret
push
in
cs
jmp
mov
bound
mov
test
fbstp
lea
cmp
fisttpl
clc
xchg
dec
sbb
lods
fadds
jb
push
fcmovne
pop
xchg
mov
mov
lahf
mov
repz
mov
xor
fwait
dec
push
in
fstpt
push
push
mov
jne
imul
les
inc
out
call
or
bound
testl
pusha
mulb
out
push
lods
xor
jne
outsl
add
mov
jo
jnp
ja
in
mov
nop
shlb
dec
sub
xor
pop
leave
scas
sub
jge
repz
jg
cmpb
pusha
scas
fs
in
push
mul
push
sar
adc
push
iret
cmp
int
lret
rcl
cmp
sub
xor
mov
stos
adc
mov
call
bound
push
xchg
and
stos
inc
lahf
pop
mov
adc
enter
sub
in
out
icebp
and
std
in
dec
sbb
xor
inc
repz
out
fwait
push
fwait
add
movsb
inc
icebp
inc
pop
jmp
inc
out
repnz
xor
sahf
mov
add
pop
mov
loope
inc
adcb
push
pop
icebp
mov
inc
imul
add
pop
sbb
scas
iret
fcompl
jns
lahf
stos
push
sbb
movsb
mov
sub
mov
rcll
xchg
add
movsl
cld
daa
jle
jg
push
xor
mov
jmp
push
push
jecxz
jecxz
ret
test
jb
insb
jl
fcmovne
sarb
int
inc
fidivl
ss
ficomps
insl
xorl
insl
push
shlw
and
cmpsb
lret
std
inc
fcmovu
xor
test
inc
pusha
test
push
leave
loopne
cmp
fcomip
and
dec
pop
out
xor
das
cmp
shrb
dec
mov
jle
pop
loop
lea
cmp
dec
testb
mov
call
outsb
fstpt
mov
mov
mov
xchg
nop
aaa
jno
push
aas
cmpsb
xchg
dec
mov
cmp
cmp
int3
clc
sub
mov
in
pop
mov
jbe
adcl
mov
mov
jnp
mov
stc
add
xchg
pushf
add
cmp
sti
loope
gs
jmp
pusha
sub
pushf
push
xor
gs
ja
push
cmp
fbld
repz
shlb
inc
test
or
mov
cltd
and
aam
rolb
mov
lods
lcall
dec
jg
cmp
fwait
mov
jl
adc
cltd
cmp
add
ret
hlt
mov
dec
sbb
sarl
dec
push
add
xor
aam
inc
push
std
xchg
push
sbb
inc
stos
out
and
clc
or
addr16
popf
or
int
call
ds
test
dec
dec
push
cmp
repnz
fwait
cltd
cmpsl
dec
sub
sbb
xchg
mov
mov
inc
push
inc
jg
data16
rcrl
pop
aam
xchg
push
fmull
sbb
rcrw
ja
lcall
and
sub
filds
mov
mov
mov
add
sahf
push
cmp
pop
movl
call
fsubs
lods
xchg
fs
test
pop
outsl
jnp
pop
mov
es
jmp
sub
das
adc
and
xchg
sub
incb
or
and
or
pop
or
insb
in
sti
loope
fstpt
xchg
push
pop
sub
fwait
stos
mov
cmpsb
cmp
imul
out
cmc
aad
inc
mov
test
cmc
scas
xchg
jmp
lcall
cmp
dec
sbb
orb
pop
cmp
fadds
sub
xchg
push
gs
imul
lods
cmp
adc
fsubs
xor
pusha
mov
mov
daa
cld
inc
or
jmp
movsb
scas
je
into
jge
lods
add
aad
sub
lods
mov
mov
cmp
and
das
fisubl
outsl
or
xor
pop
rorb
clc
inc
or
je
outsb
xchg
sbb
fstl
pushf
jg
out
dec
test
in
enter
add
or
mov
scas
mov
imul
pusha
or
add
adc
or
daa
pop
cmp
adc
push
pop
test
add
xor
test
out
mov
cmp
xor
rcll
dec
rorl
xor
jmp
cli
testl
sub
xchg
arpl
test
fidivrs
cmp
je
jecxz
lcall
sub
dec
jmp
int3
je
cmc
mov
jmp
sbb
jno
lods
outsb
cmp
adc
out
push
sbb
and
push
ret
es
push
inc
sub
icebp
popa
jp
adc
arpl
sbb
sbbl
pop
adc
arpl
push
pop
scas
sub
pop
add
pop
mov
dec
xchg
aaa
jmp
cmpsb
sti
inc
popf
cmpsl
sti
test
sub
data16
lret
aam
mov
xchg
inc
mov
adc
xlat
stc
add
cmpsb
push
test
sahf
dec
sti
lcall
inc
aad
fimuls
imul
test
push
fildl
outsb
lods
mov
add
fcoms
sti
sub
sub
imul
mov
xchg
inc
adc
ljmp
push
push
pop
push
mov
push
fstpt
popa
std
cmp
xor
popf
push
test
jp
js
test
jle
mov
add
jae
cmp
add
mov
dec
into
push
cwtl
sbb
dec
ficoml
daa
rorl
add
inc
pop
add
enter
mov
into
imulb
test
mov
mov
xlat
movsl
fnstsw
test
fmull
pop
dec
popa
sub
adc
outsb
pop
xchg
pop
das
and
pop
in
test
xor
cmp
dec
adc
mov
mov
into
outsb
inc
lods
mov
dec
mov
mov
ret
repz
fdiv
xor
out
stos
out
out
mov
jb
xchg
push
jne
divl
jb
test
pop
inc
sub
insb
rcrl
out
out
fs
sahf
arpl
inc
pop
xor
cmpsl
push
inc
ud2
inc
pop
sbb
dec
inc
mov
clc
mov
mov
push
imul
push
inc
dec
dec
daa
out
sub
pop
das
xor
cmp
into
or
mov
nop
std
ja
and
test
fiaddl
bound
stos
sahf
push
cmpsl
imul
loop
aas
mov
mov
movsb
cwtl
lods
mov
mov
inc
pop
cltd
int3
aas
sub
fsubrs
mov
mov
mov
leave
xor
cmp
out
subl
lcall
dec
imulb
jne
sarb
push
fiadds
cltd
xchg
push
xor
inc
xchg
sub
xor
adc
cwtl
leave
and
imul
pop
cmp
jmp
and
sbb
ret
dec
cmp
insb
popa
cmpsb
shll
ficompl
or
out
pusha
imul
and
jb
mov
dec
stc
cmc
loope
sub
xor
jb
xchg
inc
repnz
mov
out
inc
add
xchg
lods
lods
mov
cmp
mov
cs
mov
mov
xor
xchg
lock
ds
sbb
mov
lock
sub
outsb
hlt
pushf
mov
push
pop
enter
fmull
sahf
loope
cmc
pop
sbb
lahf
rcrb
sub
add
imul
or
sbb
fldcw
stos
lcall
mov
test
sbb
cli
xchg
stos
arpl
fisubrl
add
push
popl
jge
aas
movsb
mov
aaa
push
push
lahf
repnz
les
out
sub
sti
sbb
out
push
jecxz
cmp
adc
mov
rorl
stos
test
cmpsl
jo
not
push
test
mov
push
int3
jle
mov
arpl
jne
xorl
cmpsb
xor
vpshaw
aad
jno
das
mov
sti
fidivrl
or
cmpsb
ret
sbb
add
xchg
mov
iret
movsl
dec
call
mov
test
mov
repnz
xor
mov
js
jle
push
ja
mov
rolb
xchg
xchg
sbb
icebp
sbb
adc
push
sub
push
sub
hlt
sti
mov
jge
stos
push
add
pop
int3
loopne
loop
inc
xor
out
push
mov
jne
ss
xchg
or
movsl
push
leave
and
into
inc
rcl
push
cmp
push
ficoms
inc
or
mov
push
fsts
enter
mov
push
xor
cmc
xor
pop
scas
add
sub
test
pop
fisubrs
int
outsb
pushf
pop
sub
sti
mov
in
cmp
sub
mov
cmp
add
into
mov
hlt
push
inc
cmpsl
dec
push
lea
cmc
lock
jb
and
cltd
dec
inc
mov
cmpsb
xchg
addb
std
jb
mov
inc
es
inc
cmc
stos
or
lods
aad
lret
mov
mov
lods
or
xor
lods
inc
jno
es
leave
pop
pop
mov
mov
xlat
xlat
jp
fcmovne
jo
rolb
push
mov
cmp
cwtl
xchg
rcrb
add
xchg
test
and
or
mov
rol
xor
sahf
mull
cmp
andl
xor
mov
nop
jae
add
movsb
adc
fisubrl
sarl
cmp
adcl
or
sbb
sub
sbb
nop
pop
stos
das
fs
and
or
nop
test
push
loopne
insb
mov
sub
js
push
adc
test
xor
xor
pop
sbb
cmp
sahf
mov
sub
dec
xor
loope
mov
sub
aas
fstl
into
test
sub
jg
push
xchg
mov
outsl
sahf
add
ja
cmp
lods
mov
test
or
mov
daa
xchg
xchg
or
cwtl
addl
sub
cs
test
xor
popf
roll
adc
adc
push
aas
inc
mov
insb
aas
xor
ror
dec
or
mov
cmp
lods
outsl
scas
pop
movsl
jno
jle
push
pop
xchg
push
sbb
ret
sbb
xchg
ficomps
in
lahf
lods
mov
sbb
sbb
inc
cld
ja
push
pop
mov
std
lret
loopne
bound
dec
jnp
xor
add
loopne
adc
das
adc
ret
out
out
sbb
sbb
sub
xchg
mov
cmp
sub
aas
scas
inc
scas
pop
or
lods
lcall
xchg
imul
and
push
addr16
hlt
xchg
fwait
cltd
cld
scas
fsubl
mov
push
in
or
or
lods
adc
xchg
in
sub
xchg
fstl
mov
pushw
imul
push
jl
pop
pop
add
das
xchg
imul
outsl
pusha
les
push
xor
call
adc
fstpt
jl
imulb
aad
cwtl
xor
xchg
sub
or
orl
add
sbb
dec
inc
test
orb
shll
inc
ljmp
jns
js
cmp
dec
insb
pop
mov
adc
dec
lds
cmp
dec
cmpsl
cld
mov
aaa
in
xor
dec
push
hlt
pop
arpl
sbb
jmp
lret
mov
fcoms
stos
shll
lcall
imul
addl
inc
std
dec
or
stc
test
aam
dec
les
jecxz
sti
insb
sarl
or
mul
cmp
mov
test
lret
mov
mov
jmp
popf
pop
cmpl
std
imul
popa
mov
dec
loope
xchg
les
fnstcw
xor
sub
add
pop
jle
adc
jno
lret
jecxz
dec
xor
pop
jg
imull
xchg
lahf
and
push
inc
repz
cmp
push
loopne
mov
ja
inc
out
mov
push
add
push
mov
dec
fidivs
push
or
mov
push
in
push
mov
xor
or
cmp
add
adc
into
pop
push
mov
icebp
mov
and
sbb
pop
xor
loopne
int
push
subb
xor
push
mov
add
loope
mov
aad
mov
xchg
sub
jp
loop
jecxz
add
or
adc
inc
inc
add
rolb
rolb
les
mov
pop
sbb
sub
push
mov
or
cli
adc
loope
movsl
aaa
pusha
inc
sbb
mov
test
xchg
mov
stos
and
clc
mov
xchg
mov
xchg
pop
lret
mov
icebp
pop
xor
mov
xchg
lds
jl
cmp
xor
in
mov
in
push
je
sti
outsl
or
pop
daa
push
out
cli
icebp
push
sarl
mov
jl
lea
mov
mov
movsl
push
movsb
xchg
mov
repz
outsl
cmp
fildll
repz
cmp
sahf
xchg
ret
sbb
test
push
inc
add
push
iret
addr16
xchg
add
cmp
xchg
cli
bnd
jno
inc
mov
daa
push
jg
jae
add
mov
cltd
xor
mov
mov
clc
inc
popa
shlb
pop
mov
ss
adc
push
fidivl
xchg
enter
mov
sbb
push
mov
jne
fmulp
sbb
pop
mov
out
inc
xor
push
cld
pop
cli
mov
outsl
sbb
cmp
out
popa
pop
mov
push
fwait
mov
mov
pop
mov
inc
mov
imul
cwtl
push
lret
cmp
ret
adc
lods
sahf
pop
inc
lea
lock
xchg
icebp
jo
or
push
ds
or
lods
cmpsl
dec
mov
rclb
pop
push
pop
mov
mov
icebp
nop
mov
mov
mov
out
push
inc
add
xorb
or
mov
ljmp
loope
adc
lahf
or
push
xor
sub
xchg
hlt
cwtl
repnz
sbb
jg
add
jns
push
imul
or
lods
pushf
push
sub
mov
jbe
sarl
pop
cltd
ja
add
and
mov
xor
mov
cmpsl
add
ret
push
cmpsl
ret
pusha
iret
fdivr
adcl
sub
mov
jg
fadds
fldcw
or
outsl
push
add
aas
dec
nop
ljmp
adc
loopne
add
cltd
adc
xchg
shll
add
adc
sub
jbe
push
imul
movl
repnz
lcall
iret
add
out
roll
fsubrs
out
insl
ds
test
mov
inc
imul
xor
sub
pop
adc
or
cmpb
jae
adc
cltd
xor
in
je
int
xchg
add
out
ror
rcrl
mov
cli
cmp
aad
xorb
push
std
add
xchg
mov
arpl
gs
clc
sub
fwait
in
push
in
jge
rclb
mov
ffree
dec
xor
fnstcw
lret
and
cmp
stos
cwtl
sti
negb
shl
cmp
jae
xchg
ret
cli
cltd
mov
pop
pop
pushf
jns
loopne
mov
scas
mov
cmp
xor
add
mov
sbb
rorl
and
les
or
mov
inc
pop
jge
mov
out
cli
inc
jae
hlt
jmp
and
add
and
fwait
jle
ds
loop
add
mov
ja
pop
pop
std
pop
jns
inc
and
mov
mov
repz
xchg
cli
pop
push
mov
mov
push
cmc
subl
test
mov
stos
xchg
movsl
pop
stos
lret
mov
nop
arpl
jmp
das
xchg
and
lods
xor
fistpl
jnp
or
push
jl
std
out
push
mov
cwtl
fisubrl
sub
mov
sub
cs
jmp
push
mov
push
mov
cmp
shll
lods
hlt
cmc
sarl
sub
mov
jecxz
stc
mov
or
and
jp
imul
xchg
and
sub
inc
adc
and
adc
jae
scas
mov
ljmp
ljmp
fcoms
out
negb
mov
mov
lret
push
mov
adc
xor
sarl
push
push
jno
xchg
or
iret
outsb
out
and
mov
cld
out
faddp
cs
mov
cmpsb
xchg
push
jmp
pop
sbb
lret
shrb
notl
and
es
fsts
push
jns
mov
push
pop
cltd
mov
popf
jae
daa
add
cwtl
or
push
stc
cmpsb
popf
push
push
pop
sub
test
cwtl
xchg
mov
lcall
cs
or
in
stc
cltd
inc
sbb
sbb
shr
jecxz,pt
mov
dec
outsb
xchg
push
inc
add
lods
adc
fdivl
clc
repz
pop
push
xchg
push
xchg
lock
repnz
adc
imul
ret
jb
sahf
push
sub
xchg
cmp
and
cmpsb
cmpsl
fwait
test
inc
dec
filds
jle
ss
add
push
add
xor
cmp
stc
dec
test
ror
xchg
pop
repz
mov
repnz
mov
es
dec
adc
sahf
sub
call
sub
int3
and
dec
mov
data16
das
mov
dec
dec
pop
cmp
jo
xchg
xchg
pop
stos
iret
pop
pop
lds
xchg
inc
mov
mov
mov
inc
in
fadds
and
lock
fldcw
imul
mov
sbb
aad
jl
fadds
rol
cmp
mov
in
div
xchg
push
pop
frstor
out
mov
fadds
lahf
test
add
jae
xor
je
aad
fiaddl
mov
aaa
pop
addr16
sti
add
or
or
or
insl
xor
push
and
inc
into
into
push
inc
pop
sub
adc
jl
lock
dec
sbb
jg
inc
pop
icebp
adc
jae
and
cmpsl
pop
jb
mov
lods
xor
sbb
cmpsl
push
aad
adc
or
ljmp
cmp
xchg
lods
scas
leave
jno
inc
push
xor
add
into
pushf
sub
testl
jle
pop
mov
mov
std
sub
jns
fldenv
inc
clc
mov
call
in
and
lods
mov
push
shl
sub
lds
xlat
mov
dec
xor
mov
fwait
xor
add
iret
jmp
sub
xor
fisubs
jae
mov
cld
xor
sahf
pop
push
int
lcall
or
xchg
xchg
movsl
ret
xor
subl
inc
stc
arpl
mov
rcrl
xor
out
aaa
pushf
hlt
add
fcom
inc
mov
lds
repz
push
addr16
mov
or
mov
dec
testb
cwtl
pushf
outsl
mov
dec
sbb
fimull
test
call
cld
dec
xchg
aas
pop
jl
test
popa
mov
push
or
ja
out
cs
insl
fisubrl
push
sub
push
jmp
xor
pop
movsb
repz
fdivl
ret
xchg
xor
sbb
iret
inc
ss
inc
xor
movb
pop
lret
xchg
adc
cmpsb
push
leave
push
in
lods
or
dec
xor
inc
mov
adc
pop
fimull
mov
sub
leave
and
xchg
jmp
mov
imul
test
inc
hlt
inc
and
mov
mov
stc
cmp
aam
cmp
cmpl
lahf
push
fnstenv
fidivs
xchg
dec
mov
cwtl
cmp
cmp
repnz
popf
imul
loope
mov
pop
cmp
adc
mov
nop
cmp
sahf
and
cwtl
arpl
push
jno
sbb
push
xchg
or
pop
push
stc
gs
cmc
adc
in
cmp
fistpl
ja
cmp
push
push
shrl
adc
pop
fimull
xchg
lock
lds
push
gs
lret
pop
xchg
push
jb
cwtl
or
dec
adc
js
shlb
lret
lea
aas
dec
imul
xor
mov
push
repz
imul
mov
adc
cs
stos
shrl
sbb
inc
jbe
jp
cld
or
sub
shrb
aas
pop
adc
mov
sarb
in
mov
or
cmc
sti
nop
scas
inc
pop
clc
xor
js
sbb
push
pop
test
test
into
movsb
repnz
jge
jne
inc
inc
fwait
mov
mov
in
push
call
les
inc
push
mov
in
or
filds
ljmp
cwtl
xchg
js
push
pop
or
clc
sbb
or
lcall
or
cmp
in
jbe
addr16
adc
clc
cwtl
out
jmp
fnstcw
pop
pushf
test
test
pop
loopne
popf
test
mov
jmp
stos
bound
lea
adc
inc
andb
sahf
cmp
fcmovb
mov
scas
aaa
stos
es
cld
cmp
sbb
push
aad
mov
sbb
mov
mov
lret
cmp
stos
or
jle
stos
cld
out
cmp
cs
inc
movsl
rcrb
and
sub
adc
sbb
rorb
jb
into
xchg
push
and
and
add
sbb
pop
or
divb
arpl
stos
nop
aam
lods
mov
pop
movsl
adc
ljmp
fsubrl
pop
loope
mov
xchg
push
stc
or
pop
or
lock
je
pushf
adc
push
cmpsl
or
push
sub
sub
fcompl
jp
stos
lock
lret
mov
fwait
push
or
mov
mov
insl
ds
dec
dec
int
inc
mov
lcall
lods
pop
inc
mov
sub
aam
testl
jl
call
fld
push
add
ret
sub
rorl
sbb
scas
ss
pop
xlat
sti
lock
clc
mov
cmp
xchg
movsl
xchg
mov
xor
data16
aas
xchg
push
jns
lahf
sbb
testl
sbb
sti
ja
insb
int
es
xacquire
mov
mov
jmp
pop
mov
mov
sbb
jnp
and
shlb
gs
in
ret
call
fsub
sub
sbb
cmpsb
dec
outsb
mov
push
mov
test
xchg
sub
repnz
movsl
subb
inc
jne
xor
cmpsl
add
ret
sbb
movsb
ret
ljmp
ljmp
pop
push
loop
add
xor
mov
mov
nop
loop
push
jg
xor
pop
fs
push
les
daa
and
sub
iret
and
mov
mov
jno
cltd
jp
mov
cmpsb
push
stc
fisttps
xor
je
sti
dec
inc
xchg
jle
test
stos
in
lret
int
mov
or
jl
xchg
sbb
sbb
roll
sub
ss
xchg
push
pand
imul
jl,pt
cmp
pop
jo
and
out
xchg
jae
lahf
mov
add
sub
pop
mov
xor
jno
mov
and
test
fnstcw
adc
mov
jo
add
fadd
int3
adc
lods
shl
dec
pop
popf
cmpsl
int3
mov
lahf
movsb
xor
mov
sahf
int
jmp
lret
push
mov
test
loope
int
pop
sti
mov
inc
iret
test
add
xor
ret
fistpl
lahf
in
ja
cmpl
push
fldenv
pop
xchg
dec
sbb
or
push
pop
je
mov
lahf
mov
add
adc
test
ja
sub
cmp
pop
sub
int
sub
xor
jo
icebp
dec
iret
sub
xchg
or
mov
pop
mov
fsubrl
fs
shll
xchg
push
outsb
mov
repz
mov
ds
cmpsb
ret
stos
fucom
push
mov
sub
mov
dec
push
lea
add
mov
out
add
cmp
adc
cli
fwait
fs
ucomiss
fcmovnu
adc
mov
sbb
lock
mov
dec
mov
fsubs
fldl
mov
inc
aam
sbb
pop
cld
mov
std
jae
jl
pushf
mov
out
lret
subb
mov
and
jp
das
out
xchg
lcall
dec
neg
mov
sahf
shll
sub
jns
mov
dec
mov
daa
out
decl
jo
lods
push
out
dec
adc
add
mov
stos
rcrb
std
mov
mov
js
cwtl
mov
xor
mov
nop
cld
cld
or
pusha
cmp
out
lret
mov
mov
pop
in
andl
cltd
sub
test
ljmp
push
ret
in
repnz
shl
in
pop
lret
daa
push
cld
test
and
push
mov
call
mov
sahf
inc
repz
dec
rol
jbe
mov
ret
stos
outsb
sub
enter
jns
test
sbb
iret
or
addr16
jne
scas
aaa
fldl
mov
mov
push
mov
icebp
in
subb
or
add
pop
or
loopne
jmp
fs
fiaddl
sbb
lea
mov
sbb
lret
lea
push
sti
lock
push
fdivrs
adc
xchg
negb
or
mov
lock
adc
sub
sub
ja
adc
movsl
es
pop
sbb
mov
sub
testl
dec
pushl
je
xchg
leave
and
mov
cli
stos
jno
ss
aaa
push
or
mov
mov
iret
fisttps
xchg
mov
xlat
lahf
xchg
jae
sbb
mov
int
mov
in
pushf
rolb
movsb
mull
xor
xor
jecxz
xchg
dec
push
ds
push
xchg
fadd
jno
test
pop
sarb
inc
lahf
fcmove
pusha
pop
lret
push
dec
sub
sub
addb
xlat
dec
call
lahf
inc
pop
ffree
adc
aad
xor
in
mov
mov
push
shr
jl
ss
pop
ret
gs
pop
cwtl
loope
jl
xor
daa
iret
sbb
outsb
pop
fisttpll
mov
fbstp
cmp
or
mov
in
int3
arpl
movhps
mov
cli
mov
mov
test
mov
shrl
lahf
cltd
xlat
gs
pop
pop
add
cltd
test
mov
cli
xor
insl
fistl
popa
lock
js
jl
sub
cmp
ljmp
push
ds
call
ret
scas
mov
sarl
jge
outsb
fldt
icebp
into
stc
xor
jl
lret
adc
sahf
scas
fstps
in
loop
stos
inc
test
xchg
pop
icebp
cmp
or
mov
clc
je
fwait
or
int3
fs
movsb
enter
pop
gs
push
sbbl
add
mov
cmp
call
sub
cwtl
push
and
out
les
fisttpll
mov
test
daa
xchg
rcrb
adc
mov
or
test
adc
jg
fchs
lods
in
mov
inc
paddsb
mov
xchg
test
xchg
jg
int
dec
mov
and
test
scas
cmp
mov
mov
ret
dec
xchg
ja
pop
dec
adc
xchg
cltd
xchg
or
xor
repnz
inc
popa
cmp
imul
lock
mov
and
loope
mov
sbb
enter
xor
test
sti
jg
pop
cltd
xor
xor
mov
mov
std
popa
sbb
and
push
xchg
xor
push
sub
dec
dec
imulb
xor
sub
sbb
and
popf
roll
xchg
mov
and
inc
pop
lret
lahf
adc
push
add
mov
outsl
sbb
lods
jl
leave
ret
lods
cmp
cli
pop
inc
add
outsl
mov
xchg
xlat
je
xor
insb
or
in
dec
mov
add
in
imulb
adc
pop
mov
pop
xor
into
lods
pop
cwtl
shll
inc
daa
dec
sbb
and
dec
mov
scas
sti
daa
mov
xor
xor
imul
out
fs
or
cmp
movsl
lds
call
shlb
pop
fbld
imul
add
std
repz
jmp
pop
invd
in
sub
mov
outsl
int3
js
add
jae
std
xchg
dec
inc
iret
adc
push
jne
iret
pusha
negb
pop
mov
or
roll
pop
jecxz
xchg
js
push
aas
xchg
sub
and
aaa
mov
ss
jge
jb
mov
adcb
push
push
punpckhdq
gs
push
out
and
outsl
or
ret
jbe
dec
jmp
add
mov
popa
out
lock
jecxz
sbb
ret
mull
xchg
out
and
push
sahf
aad
jmp
adc
aam
jo
push
jb
lret
fists
stos
in
popf
popa
mov
aas
jmp
mov
addl
mov
pop
dec
mov
adcb
sub
aad
fdivl
int
aaa
subb
clc
and
scas
into
push
inc
sub
cwtl
mov
cmp
test
cmc
mov
pushf
inc
xlat
in
fld
cmp
jge
roll
cmpsb
mov
call
testb
test
xor
inc
jns
mov
jnp
clc
fidivs
in
scas
lods
mov
add
mov
push
lds
filds
cltd
pop
mov
sbb
inc
shlb
push
push
add
aam
movl
nop
in
add
cs
cltd
dec
xor
pop
inc
push
mov
ja
scas
or
and
ret
cmp
push
jae
fidivrl
jle
mov
adc
jbe
scas
or
scas
push
add
xor
cmp
adc
xchg
std
mov
jmp
jae
add
repz
mov
dec
mov
test
outsb
mov
cmp
xchg
sahf
mov
mov
aad
mov
aas
cmpsb
je
mov
movsb
rolb
sbb
outsl
push
mov
fwait
gs
push
cmc
and
sbb
mov
daa
jnp
dec
decb
cmpl
jo
jbe
hlt
arpl
aas
xchg
jmp
rol
xchg
sbb
stos
add
or
aad
stos
cmp
mov
jns
adc
or
adc
push
scas
clc
sbb
pusha
and
inc
mov
pop
bound
cmpb
push
jne
faddl
fdivs
jns
jl
push
cmp
std
lea
xor
int
push
or
rorb
jne
call
jecxz
enter
pop
pop
and
xor
dec
outsb
push
cwtl
imul
cmp
jbe
in
mov
push
push
fdivrl
jno
fs
clc
and
xchg
lock
leave
xlat
adc
mov
iret
xchg
push
outsb
ja
ret
xchg
mov
lcall
lret
out
ficompl
adc
pushf
test
clc
pop
push
add
loopne
xchg
das
pop
lods
jl
jae
ja
xor
mull
jmp
xchg
push
push
inc
jbe
mov
shlb
lahf
mov
push
sub
push
call
mov
stos
sub
add
pop
in
push
fs
pushf
aad
adc
mov
push
mov
jmp
inc
out
add
jg
mov
sub
sub
shr
js
dec
aas
arpl
push
xor
scas
pop
fcmovb
push
adcl
xchg
add
push
lds
fcomps
ja
mov
sbb
xor
das
adc
and
outsl
push
cli
cld
mov
sahf
lods
xchg
lock
sub
add
sbb
sbb
xor
add
loop
pop
or
mov
dec
movsl
nop
jne
imul
jne
clc
mov
fucomi
xchg
incl
in
xchg
popa
jns
dec
push
or
cmp
dec
repz
xchg
js
xor
sub
cmpsb
in
pop
push
pusha
xor
xor
inc
aam
sbb
outsl
mov
mov
nop
loope
ja
test
sahf
push
pop
xchg
push
inc
mov
xchg
fstps
add
add
mov
stos
cmpsl
enter
cld
dec
and
adc
jo
loopne
out
cwtl
insb
rolb
divl
mov
std
lcall
push
sbb
fdivrl
or
and
test
jge
dec
mov
ja
mov
push
scas
jle
lahf
rorb
mov
inc
mov
popf
insb
xor
cmpsb
xor
sar
inc
data16
dec
jecxz
call
push
push
jns
sbb
mov
mov
bound
inc
mov
xchg
cmp
mov
pop
or
mov
and
loopne
sub
and
pop
inc
add
xchg
sub
xor
imul
out
ret
out
jge
shrl
mov
xchg
subl
test
in
cmpsb
movsl
pop
mov
imul
mov
xchg
jmp
movsl
dec
fwait
imull
sbb
test
xchg
pop
pop
cwtl
imul
fs
call
cmp
dec
fsubl
rcrb
and
add
imul
push
lods
jo
or
and
inc
inc
or
xchg
and
jbe
push
mov
xchg
inc
bound
cld
xor
xor
add
adc
popf
or
roll
rcll
ja
std
test
cmp
stos
ljmp
and
mov
adc
mov
mov
inc
shrl
inc
dec
dec
icebp
shlb
pop
int3
xchg
out
rcrb
es
mov
mov
sub
cld
add
mov
mov
mov
fs
aaa
je
test
xor
sub
fs
insl
jo
xor
loope
jl
mov
aaa
or
push
mov
pop
add
jp
in
jge,pt
cwtl
cmp
stos
ss
mov
mov
lock
inc
pusha
sbb
push
stc
push
fdivs
mov
gs
dec
dec
repnz
test
roll
ja
lods
jbe
insb
sbb
sbb
pusha
mov
in
add
out
out
push
roll
inc
lcall
sbb
roll
sbb
and
push
rol
xchg
cltd
inc
cwtl
jge
sub
test
dec
lret
fs
adc
mov
cmp
ret
in
test
dec
rclb
stc
xor
pop
xchg
xor
out
int3
outsl
jo
jnp
inc
push
push
cmp
std
jg
aam
in
xchg
jp
std
popf
sbb
enter
aam
out
cltd
inc
sub
call
push
xchg
xchg
sbb
pcmpgtd
loope
les
xchg
lcall
pop
test
sub
add
int
popa
addr16
popf
aaa
repnz
mov
cs
fistl
mov
stc
jecxz
cmpsl
ret
dec
add
insb
lods
pmuludq
mov
in
and
mov
dec
jecxz
cmp
daa
fimuls
popa
push
ljmp
push
xchg
xlat
inc
out
xchg
call
push
cmpsl
repnz
test
sub
jae
in
lahf
shr
in
nop
adc
or
mov
xchg
sbb
dec
or
lret
add
jb
push
inc
aad
leave
add
ds
cmc
sbb
jne
ljmp
jnp
xor
subl
sbb
fimull
icebp
fidivrl
pop
sbb
pop
sub
pop
lcall
ret
js
sbb
fcmove
icebp
or
arpl
pop
xchg
out
ror
imul
pop
repnz
scas
bound
imul
and
inc
insl
or
sub
xchg
pop
add
cld
pop
ficoml
in
dec
sub
jbe
out
movsb
add
enter
icebp
int
divb
sub
xchg
mov
sub
jno
out
mov
jo
adc
add
inc
xor
loopne
mov
gs
add
mov
fdivs
rorl
lods
mov
mov
sbb
push
xor
in
add
adc
mov
or
scas
push
aam
outsl
pop
jg
and
jno
pop
lret
in
mov
shll
cmovnp
mov
mov
mov
adc
push
xchg
sub
aad
xlat
ficomps
fwait
leave
popa
cmpsl
push
add
pop
sub
mov
mov
and
mov
mov
fbstp
movsl
dec
jg
adc
bound
stc
add
sbb
cmpsl
mov
lea
add
jmp
dec
popf
jb
call
pop
add
roll
and
jp
lods
stos
dec
insb
mov
mov
pop
pop
stc
into
or
cmp
ljmp
repnz
push
jbe
xor
test
notl
ljmp
mov
sbb
push
sbb
inc
pop
repz
mov
fnstenv
imul
pop
in
enter
jl
mov
addr16
or
adc
pop
pop
fbstp
sub
xchg
cmpsl
mov
negb
push
jae
sti
dec
mov
cli
pop
push
xor
inc
rcrb
aas
push
imulb
test
dec
es
sbb
popa
add
xor
and
mov
and
fadds
gs
nop
loop
mov
mov
or
testb
push
cmp
push
es
pop
or
jae
mov
and
iret
cs
pop
cmp
jge
cmp
movsl
xchg
sub
sbb
arpl
nop
xchg
xchg
cli
insb
mov
fs
inc
aaa
pop
out
sub
push
or
mov
mov
mov
xchg
xlat
loop
mov
aam
test
sub
lret
fbld
ss
xchg
mov
mulb
pop
inc
fwait
iret
inc
lods
les
xchg
in
add
push
ret
cmp
cmpb
lret
fcomps
and
adc
mov
inc
push
ficompl
mov
es
gs
test
adc
pop
mov
dec
pop
es
loopne
push
imul
mov
mov
xchg
adc
cs
int3
lret
push
and
outsl
aam
xor
xchg
sbb
in
add
push
push
cmp
inc
loop
mov
jp
gs
data16
dec
fidivrs
and
out
push
cmc
or
in
cmpsl
aaa
add
pop
sub
dec
hlt
inc
push
jmp
ja
lret
add
mov
sbb
push
sub
mov
push
lret
sahf
icebp
sub
push
popa
and
cmpsl
sahf
movsl
int
imul
pop
in
pop
das
daa
push
mov
arpl
rcll
xor
daa
jbe
xchg
out
push
std
xchg
rclb
lds
jmp
dec
xor
pop
mov
mov
push
shlb
push
cld
push
cmp
mov
add
fistpll
cmpsl
pop
test
or
cmpb
push
pop
pop
aad
sub
stc
lret
arpl
jmp
popa
gs
into
pop
jp
cltd
mov
adc
loope
lods
in
stos
mov
jb
mov
dec
inc
inc
dec
mov
xor
adc
mov
inc
arpl
push
cltd
fs
and
pop
insb
jle
scas
arpl
jns
les
sbb
sbb
pusha
add
jb
push
aaa
lahf
mov
adc
sti
rcll
fcomps
out
cmp
into
add
sbb
jb
repnz
rcll
insl
jge
dec
push
jl
scas
outsl
lds
adc
addr16
pop
add
iret
cmp
scas
aam
push
inc
mov
jnp
xchg
popf
push
xor
xor
jne
in
or
repnz
inc
sub
cmp
adc
pop
mov
stos
or
mov
push
push
ficoml
jecxz
jmp
mov
adc
xchg
ret
out
jmp
lods
icebp
xor
jo
mov
pusha
das
adc
ret
push
icebp
out
or
roll
aam
sti
lcall
jl
dec
rclb
aad
xor
cmp
mov
jb
imul
dec
mov
add
cmp
push
sbb
dec
ljmp
lea
jmp
add
lods
mov
cmp
push
dec
call
inc
push
pop
jbe
sbb
faddl
sahf
testl
ljmp
mov
add
mov
pop
pop
push
in
icebp
lret
sti
mov
ficompl
jl
mov
push
movsl
imull
xchg
imul
clc
cmc
into
add
sub
mov
cmpsl
adc
or
mov
out
ss
rorl
popa
cmp
lret
adc
pop
iret
test
bnd
pop
movsb
imul
popf
les
adc
or
into
cmp
sub
ja
aam
pslld
dec
sub
repz
repnz
cmpsl
leave
insl
and
pop
and
dec
inc
andl
sbb
icebp
cmp
cli
call
add
push
stos
fwait
xor
mov
sbb
jnp
aas
into
setns
inc
call
jnp
and
leave
callw
cmp
and
mov
mov
mov
sub
pop
pop
pop
jae
out
inc
push
fld1
addb
push
xchg
outsb
lods
popf
push
mov
xchg
out
add
cmp
out
sub
in
cmpl
dec
jp
and
popf
fidivl
sub
adc
inc
cli
movsl
xor
call
sahf
imul
das
nop
inc
dec
push
in
jns
xor
js
jp
pop
cmp
rcrl
rorl
sbb
add
inc
mov
insb
or
mov
addb
addl
push
or
int3
pop
and
cmpsl
mov
mov
push
out
sub
mov
inc
xor
mov
dec
hlt
das
xor
fimull
mov
jno
jmp
add
add
outsb
mov
xchg
adc
movq
insl
std
push
mov
cmpsb
lods
or
inc
xchg
popa
ljmp
or
lret
inc
fstl
add
pop
dec
test
rep
stos
jb
aaa
inc
sbb
iret
cli
icebp
pop
push
dec
aaa
mov
xchg
or
or
iret
jmp
les
inc
jp
hlt
mov
js
insl
lahf
add
ficomps
nop
cmp
mov
rcr
aaa
or
les
mov
adc
mov
add
add
add
mov
js
adc
lahf
lods
mov
jbe
and
xchg
jns
and
push
inc
or
mov
xchg
mov
sbb
shrl
inc
ljmp
popa
jo
cmp
call
inc
xchg
xchg
adc
aam
dec
sub
lds
adc
dec
or
icebp
cltd
in
fistps
in
xor
sbb
push
hlt
dec
daa
add
and
mov
int
mov
inc
es
outsb
sub
adc
int3
xchg
and
mov
mov
cmp
fstps
stos
idivl
popa
xor
mov
mov
popf
ljmp
push
adc
andb
add
mov
jne
lsl
mov
inc
xlat
jecxz
int3
dec
cmp
sub
push
addr16
pop
incb
sbb
inc
out
xor
ljmp
sub
mov
fdivr
mov
jmp
inc
stc
sbb
es
mov
mov
pop
sub
dec
cltd
xchg
cmp
lret
mov
adc
mov
xchg
or
push
ljmp
filds
push
adc
les
mov
push
sbb
or
xlat
jb
mov
pop
mov
sub
jae
fsubrp
ret
fsts
scas
call
or
mov
rcll
enter
and
mov
push
mov
nop
pop
cmp
mov
fwait
add
stc
into
ret
inc
jne
dec
test
sbb
pop
out
mov
mov
jp
jge
std
pop
stos
or
pop
inc
lcall
mov
xchg
ss
in
sbb
jno
jno
or
dec
inc
sbb
mov
push
sti
sti
pusha
imul
repz
mov
sti
stos
add
mov
mov
push
ret
scas
out
inc
sti
es
cmc
stos
sub
adc
sti
xor
push
pop
add
pop
test
cmpsl
pop
lock
ficoms
mov
push
xorb
lret
lahf
jb
aas
negl
push
filds
in
mov
or
div
scas
scas
cmpsb
imulb
aaa
jp
aam
mov
xchg
test
xor
sub
ret
in
arpl
ja
aaa
aam
mov
dec
xor
aad
and
mov
mov
imul
push
push
inc
mov
push
dec
popa
pop
xchg
rclb
mov
cmc
mov
sbb
and
ja
int3
mov
rolb
cwtl
jo
test
mov
pop
jno
bound
pop
sub
jo
add
mov
xchg
mov
jne
lcall
and
pop
add
inc
add
mov
das
inc
roll
mov
mov
xor
jle
or
jp
jl
aaa
btc
leave
es
stc
cwtl
ret
xor
mul
jo
cld
mov
aas
push
sub
sbb
mov
fs
add
nop
mov
leave
and
mov
mov
xchg
fwait
orb
dec
out
sub
aaa
out
mov
insl
inc
jno
sarb
sti
mov
lock
inc
cmp
fsubl
mov
nop
dec
push
inc
lock
pop
mov
lret
cltd
and
cld
xor
jns
enter
cmp
pop
int3
or
pop
cltd
sub
leave
mov
mov
push
mov
addb
sbb
dec
fs
mov
rolb
ficoms
shrl
fldl
mov
aaa
cli
push
xor
inc
lds
inc
mov
hlt
jno
iret
push
pusha
mov
and
mov
add
leave
sub
jne
sbb
mov
cmp
mov
xchg
int
inc
pop
push
inc
aam
mul
in
sbb
xchg
lods
shrl
insl
jl
xor
aad
shll
js
jnp
xchg
push
sub
ds
incl
idiv
dec
cmp
and
aas
andb
or
push
scas
arpl
pop
out
inc
pop
xchg
lods
adc
add
ficoms
stos
inc
ret
jmp
aaa
cmp
and
nop
addr16
dec
mov
jbe
insl
out
inc
sti
ret
jle
outsb
lods
loopne
adc
pop
sub
repz
inc
fsubrs
lret
mov
xchg
leave
mov
push
out
ss
inc
mov
xor
and
jmp
std
fwait
icebp
sbb
or
xchg
sbb
xchg
xchg
pop
sub
pop
mov
push
sar
sbb
cmp
sbb
je
popa
xchg
mov
clc
push
sti
mov
push
lods
lock
cmpsb
cmp
mov
fisubs
stc
negb
mov
stc
adc
fs
mov
push
ret
sbb
cmp
pusha
mov
js
sbb
mov
cmc
cmp
repz
out
lret
sbb
aas
adc
jo
sahf
push
fildl
pop
cmp
cmp
add
repnz
pop
pushf
in
or
xor
jle
xchg
push
hlt
mov
jnp
or
out
aaa
insl
jmp
pop
add
cmp
mov
imul
xor
cwtl
dec
cmpsb
scas
xor
mov
cmp
cmpsl
push
int3
out
xchg
insb
in
leave
pop
push
test
cltd
daa
and
pop
push
xor
xor
sbbl
cmp
pop
inc
or
arpl
fsincos
clc
pop
jo
scas
xor
ja
sbb
je
adc
lock
sub
sbb
sbb
xor
lods
mov
xor
mov
stos
outsb
mov
cltd
or
ret
mov
and
xor
aam
cs
inc
addr16
pop
lahf
out
nop
and
cmp
xlat
stos
dec
jmp
filds
repz
pushf
fsubrp
xchg
fwait
adc
sti
dec
sub
and
and
mov
enter
pop
xor
adc
fdiv
mov
mov
out
cmp
sbb
subl
xchg
sub
mov
imul
dec
test
cmp
mov
mov
lods
jb
cmpsl
lret
inc
push
pop
pop
out
mov
xchg
ds
cld
fsts
sub
fwait
movsl
jbe
cld
ss
jge
sub
out
mov
insb
outsl
jg
jge
jno
inc
shrb
fnop
mov
push
inc
divl
fcomp
push
out
shll
cmp
mov
out
int3
jbe
in
cmp
adc
and
jle
push
xor
cmpsb
loope
push
xchg
fisubs
lods
les
test
mov
jp
sar
sti
pop
jle
xor
sbb
sub
jbe
lds
gs
and
and
sbb
cmp
ss
and
dec
cmp
xor
pushf
imul
je
cmpsb
sahf
pop
inc
adc
sbb
inc
pop
ds
jl
repz
jnp
push
xchg
out
jmp
fs
nop
insl
mov
adc
add
mov
xor
aad
popa
add
xor
sub
mov
mov
jo
mov
and
fwait
sub
fs
sbb
pop
sbb
mov
mov
adc
sub
mov
pop
push
xchg
cmp
jno
cmp
shrb
into
push
sbb
rcll
mov
mov
das
dec
xor
insl
mov
mov
mov
and
cmpsl
lods
xor
sarb
pop
lret
mov
jo
stos
mov
lret
sbb
sbb
mov
mov
add
xor
push
mov
inc
cmpsl
fdivl
movb
ss
sub
pop
sbb
push
mov
dec
cmp
fisttpll
mov
nop
add
mov
pop
inc
sub
sahf
push
mov
hlt
scas
or
insb
mov
xchg
push
int3
push
push
jle,pn
int
xor
dec
xorb
mov
iret
dec
xchg
jle
sarb
pop
leave
sub
mov
jae
jb
push
mov
lahf
push
jb
ljmp
test
ds
aaa
sub
mov
add
shrb
or
sbb
lret
popa
bound
mov
or
push
into
lods
outsl
jmp
lock
std
xor
insb
imul
lret
push
enter
jmp
ss
clc
and
push
add
pop
fcomip
inc
stos
push
bound
xchg
and
movsl
pop
je
xor
fisubrs
cwtl
insb
outsb
decb
or
jo
popf
std
add
xchg
lret
lea
data16
repz
cmp
pusha
decl
lahf
pop
xchg
test
xchg
mov
addb
into
adc
push
cmp
pop
daa
xchg
icebp
sub
inc
out
movsl
lret
in
popa
mov
adc
or
mov
sbb
lahf
fidivrl
adc
mov
mov
repnz
pop
fmull
sub
rcl
imul
iret
lods
dec
inc
mov
insl
imul
stos
or
jbe
cwtl
out
lods
sbb
loop
pop
and
loop
pop
mov
pop
aas
cmpsl
fcmovnb
repz
add
dec
adc
jnp
mul
adcl
lret
jae
notl
pop
jnp
lods
cmpb
ret
push
sbb
outsb
pop
pop
arpl
or
jno
lcall
sarb
or
outsb
dec
mov
rcll
pusha
sbb
push
in
sbb
fwait
inc
dec
adcl
add
fdivl
or
dec
jle
pop
sub
cmp
jno
leave
sub
lods
aad
mov
sbb
mov
faddl
lock
aam
sbb
mov
stc
mov
sub
xchg
scas
fstps
pusha
int
loopne
sbb
inc
ja
imul
mov
cltd
mov
in
sbb
in
add
lret
sbb
ret
or
je
imul
jbe
out
ret
sar
mov
dec
jb
adc
pop
lock
jae
in
loopne
std
int3
lret
jmp
iret
test
fsts
add
cld
mov
adc
jno
push
arpl
out
xchg
add
add
pop
iret
jg
shll
cwtl
out
mov
jb
or
and
xchg
xchg
inc
jne
in
sbb
test
mov
hlt
fstpl
mov
ret
jae
add
xchg
jmp
cld
mov
pushf
outsl
mov
adc
cmp
fnstsw
dec
mov
jno
or
add
andb
lcall
inc
lret
loopne
call
jae
iret
je
insb
cmp
push
hlt
stos
jb
push
lea
outsb
loopne
test
test
mov
loopne
aas
scas
mov
cwtl
test
loope
xor
inc
lahf
call
jl
rcrb
or
xchg
ljmp
mov
cltd
xor
xor
sahf
lock
leave
adc
ljmp
sub
jl
fcompl
and
sub
subl
and
pusha
fistl
cs
jae
or
and
add
or
xchg
andb
fimull
stos
sbb
mov
dec
stos
mov
movsl
mov
mov
jg
ret
adc
push
cmpsb
push
push
mov
mov
out
imul
push
mov
loop
push
data16
add
fstpl
sub
daa
flds
adc
cmp
jmp
mov
mov
sub
xchg
aaa
addr16
adc
ljmp
mov
inc
add
imul
dec
aaa
fwait
arpl
push
inc
jnp
mov
push
fs
filds
xor
test
mov
dec
dec
aas
popf
loop
imul
stc
mov
mov
and
mov
xchg
jp
jge
push
push
xchg
dec
mov
push
je
sbb
mov
and
pop
imulb
mov
mov
data16
mov
mov
push
or
adc
jl
clc
and
test
push
sbb
dec
loop
rcrl
mov
aad
push
imul
jecxz
out
ds
imul
adc
sbb
xchg
ret
adc
enter
divl
pop
fs
cmpsb
xchg
sub
mov
xchg
sub
mov
pop
adc
cmc
movsl
adc
push
or
dec
mov
mov
ljmp
sub
in
jae
cmp
sub
adc
add
inc
mov
jp
daa
xorl
inc
shl
xor
sbb
fcmove
or
xchg
mov
dec
push
stc
call
shrl
cwtl
sbbb
mov
movsb
ds
inc
pop
sub
rorl
xchg
mov
aaa
jl
pop
mov
or
hlt
loope
test
cmp
cmp
and
loope
mov
enter
xchg
xchg
xchg
pop
pop
rorl
push
lds
int3
and
and
test
ja
xor
in
push
sahf
fwait
ds
shll
insl
cmp
pop
cmc
aad
ds
ret
dec
das
repz
mov
inc
ds
fadds
divb
mov
cmpsl
aaa
pop
shll
pop
push
hlt
data16
dec
and
sbb
cmp
and
xor
cmpsb
movsb
insl
ja
or
leave
ds
push
repz
mov
iret
cmpsl
pop
test
fwait
mov
lret
inc
mov
mov
subps
and
mov
lock
je
jb
or
pop
or
mov
faddl
dec
xor
pop
jbe
out
push
push
adc
adc
adc
addr16
out
lcall
aad
idivl
test
aaa
sub
mov
add
cli
lea
xor
mov
jmp
testb
aam
and
cmp
jns
fstpt
jg
call
jnp
popa
push
pop
mov
jge
jecxz
test
sbb
dec
dec
loope
ret
and
pop
jae
jge
fildl
push
sbb
fnstcw
push
movsb
cmp
jg
das
add
sbb
out
jo
sbb
int
pop
clc
inc
cld
cmc
rdtsc
insl
lea
adc
iret
cwtl
stos
dec
mov
sahf
ret
jecxz
add
push
int
jno
ficoml
inc
lods
push
ljmp
in
popa
mov
loop
inc
iret
pop
bound
mov
xor
pop
mov
in
push
fisubrs
repz
ja
mov
in
addr16
push
call
es
add
inc
in
xlat
jnp
daa
add
nop
mov
sar
cli
dec
rorl
insb
xor
popa
xlat
adcb
scas
xchg
cltd
pop
in
or
xor
insb
or
xchg
in
lods
dec
sub
push
lds
test
inc
xchg
sub
int3
dec
aad
mov
ja
out
sub
loope
xor
xor
pop
mov
push
jne
and
and
and
pop
fistpll
ja
add
mov
jle
cli
cmpsb
jmp
test
sub
dec
cmp
mov
cmp
ja
cltd
movsb
icebp
jecxz
or
fmul
lds
sbb
daa
inc
ficompl
test
aam
inc
xchg
inc
out
popf
stos
dec
nop
rolb
into
imul
std
std
push
jmp
ret
pop
inc
jmp
outsl
cli
stc
adcl
dec
pop
imul
jns
jl
adc
and
test
or
insl
sub
sbb
adc
add
in
out
imul
movl
inc
fcoms
sub
stos
xchg
cmp
xlat
lret
fdivl
xor
out
cmpsl
ds
mov
jo
push
ret
shll
and
mov
adc
loope
lcall
mov
mov
lock
cld
movsb
mov
into
jo
jl
push
out
int
mov
aam
out
data16
sti
mov
repz
aam
or
push
jge
push
cmp
jbe
mov
lret
pop
pop
jmp
and
stos
push
inc
add
xor
or
leave
fcoml
pop
aaa
ljmp
sub
push
in
fists
mov
push
push
cmp
or
mov
inc
xchg
sti
xchg
mov
outsb
and
lea
nop
fdivrs
mov
into
lods
icebp
dec
fadds
leave
xor
arpl
add
nop
xchg
stos
sbb
fistps
dec
lock
sahf
test
jl
sbb
inc
mov
sub
loop
pop
mov
mov
mov
out
mov
add
jbe
xor
aaa
stos
call
cmp
imul
jmp
jnp
imul
test
movsl
jl
pop
orl
movsl
add
mov
or
sbb
or
daa
insl
push
push
jg
std
jle
push
test
in
ficomps
lret
jne
adcl
data16
fs
sub
xor
pop
add
sbb
fs
mov
mov
arpl
aas
add
sbb
inc
mov
mov
out
aad
xor
imul
aad
nop
xchg
mov
loope
arpl
cmc
out
push
mov
xchg
jmp
arpl
sub
mov
lods
mulb
xchg
aam
in
add
leave
mov
andb
jne,pt
rcll
loop
in
data16
mov
sbb
cwtl
push
loop
call
mov
xor
repz
dec
iret
cli
out
or
aaa
loopne
sbb
dec
adc
cmc
sarl
mov
mov
lret
mov
js
test
out
and
mov
pop
stos
icebp
and
push
push
mov
pop
rcrl
xor
inc
lods
adc
mov
and
dec
popa
dec
dec
push
jo
pop
out
or
cmp
outsl
loop
int
loop
mov
mov
jecxz
jp
sbb
add
les
add
stos
mov
enter
and
lea
push
rcrl
cmc
xor
ljmp
and
add
stos
shl
mov
add
xor
nop
shlb
and
mov
lods
push
hlt
mov
ret
add
lds
dec
pop
jl
aad
jae
repz
push
stc
insb
insl
xorl
icebp
jae,pt
cmp
pop
bound
mov
add
and
aas
sbb
fwait
pop
adc
stc
push
sbb
outsb
icebp
pop
imul
in
xchg
mov
das
push
gs
or
pop
xchg
sub
idivb
std
pop
leave
adc
pop
out
aaa
lret
adc
add
and
xchg
push
cli
mov
adc
shl
scas
aaa
adc
insl
inc
imul
cs
andl
test
lods
push
pop
mov
dec
jbe
mov
push
test
or
push
jb
rolb
dec
dec
leave
popa
int
mov
loopne
leave
dec
repz
adc
cmp
insb
imul
and
jo
sbb
mov
pusha
jl
sti
or
mull
mov
fidivrs
rorb
sub
sub
xchg
ret
sub
push
imul
pop
mov
push
and
rclb
sbb
shl
insl
inc
into
je
out
lret
mov
dec
mov
cmp
mov
repnz
mov
inc
dec
aam
mov
sub
dec
and
cs
inc
and
sarl
push
addr16
pop
shll
or
add
aad
mov
scas
sarb
mov
jae
xorb
out
or
insb
jns
sbb
inc
xchg
bound
outsl
mov
xor
inc
mov
mov
mov
ja
std
jge
notb
cs
ret
test
push
pop
pop
sub
stos
enter
outsl
push
xchg
int3
repz
dec
push
ret
in
fcomip
inc
pusha
mov
sbb
push
xchg
xchg
push
xor
mov
xor
mov
dec
add
push
mov
xor
lods
pop
sub
fbstp
ja
out
inc
jle
xor
mov
sub
jl
pop
test
sarb
jae
push
insb
in
ret
ja
mov
add
imul
push
cli
je
adc
push
mov
mov
daa
lds
lods
mov
insl
setno
cmp
mov
pop
push
mov
enter
lret
add
jecxz
xchg
enter
pop
ds
sub
ljmp
push
mov
sub
push
sub
ja
add
jmp
sti
mov
andb
xlat
jg
mov
or
xchg
cwtl
rcl
mov
cli
mov
test
int3
mov
cmp
test
subl
or
mov
and
cwtl
bound
ror
pushf
jo
sub
lea
in
mov
outsl
sub
and
push
mov
add
sbb
cmpsl
add
repz
and
or
pop
mov
jl
in
pop
push
orb
push
sbb
clc
in
and
ret
rcrb
push
cmpsb
xchg
cmpl
fists
ja
lahf
inc
es
std
push
adc
icebp
cld
jp
mov
aam
cmpsl
mov
mov
cwtl
and
or
cwtl
test
xchg
mov
cmp
or
ret
clc
pop
jmp
mov
jns
decb
enter
sbb
lret
sar
cmp
cmp
not
dec
into
mov
xor
pushf
dec
cmp
xchg
jns
jne
sub
adcb
inc
or
mov
or
mov
jmp
aaa
repz
jne
stos
sbb
shll
mov
test
in
lock
jns
inc
adc
cmp
xchg
xchg
andl
test
jns
push
adc
imul
sti
ret
mov
fisttpl
aas
icebp
cld
aaa
out
mov
xor
jns
shl
or
arpl
sbb
add
xchg
sub
test
fisttps
outsl
cmp
movb
and
lret
aad
dec
lods
stos
mov
rorl
cmpsb
out
and
push
xor
popf
cwtl
movsl
in
cmpsb
out
dec
jno
push
and
addr16
xor
outsb
jno
aam
loope
loopne
mov
test
rcl
fs
test
lcall
gs
xor
movsb
inc
cwtl
add
out
jp
dec
xor
xchg
call
stos
push
je
cmp
cmp
sbb
mov
fstl
adc
rolb
jne
jmp
subb
cli
xlat
push
lods
mov
lret
aad
push
jne
pop
dec
cmpsl
in
ljmp
dec
ret
movsb
mov
mov
pop
filds
jb
adc
insb
test
mov
push
sbb
cmpsl
aam
push
or
subb
inc
adc
pushf
es
jecxz
pushf
aad
push
jg
xor
inc
cmp
xchg
mov
outsb
jl
scas
pusha
push
iret
ss
into
cltd
adc
repnz
xchg
insl
xchg
sub
mov
dec
les
pop
icebp
les
mov
int3
dec
inc
ss
in
jge
insb
mov
xchg
inc
add
push
ficoml
hlt
pop
dec
loop
jecxz
xor
mov
or
stos
les
insl
lret
fsubp
movsl
add
mov
sarl
mov
cmp
lea
mov
mov
xor
pop
push
xchg
ljmp
pop
cmp
pop
pop
pop
pop
sub
sarl
scas
inc
adc
shlb
imul
xchg
pop
out
stos
mov
sbb
js
mov
pop
js
adc
scas
pop
int3
iret
arpl
dec
imul
dec
sahf
sbb
mov
dec
mov
sbb
dec
mov
add
stc
mov
mov
out
das
push
call
xchg
add
ror
mov
cmp
xor
jns
sbb
les
jg
jae
mov
mov
sbb
mov
xor
mov
test
inc
mov
call
insb
addr16
call
cmpsb
xchg
fldt
lret
and
xor
adcl
gs
ja
std
repnz
mov
add
jge
out
inc
testb
aaa
pop
mov
cs
add
lods
xchg
add
loopne
jmp
push
test
outsb
jl
xchg
sub
into
pop
cli
orl
int
fldenv
or
jo
mov
arpl
mov
sbb
jae
mov
sub
fistl
pop
xchg
jle
mov
dec
sub
add
mov
lret
cmp
das
mov
pop
mov
jmp
into
mov
dec
xor
jg
add
mov
pop
dec
sub
cmp
mov
lock
add
xor
les
xor
int
daa
pop
pop
ds
pop
rclb
les
out
cmp
dec
cmp
fcoms
imul
xchg
adc
jns
or
gs
pop
repnz
dec
int3
jp
js
sub
ror
adc
movsb
push
push
sub
sbbl
add
dec
fs
push
pop
pop
mov
loop
jg
jp
xlat
and
xchg
add
mov
cwtl
fidivs
pop
pop
jmp
jecxz
cli
arpl
pop
pushf
loop
je
sahf
add
lods
adc
or
adc
mov
int
jns
aad
sbb
sub
pushf
jno
sbb
pop
loop
fdivl
sarb
push
movsb
loop
xchg
push
push
xor
ss
jmp
lret
out
sbb
sbb
adc
sbb
xchg
xor
cmpsl
ja
xor
xor
or
mulb
cmc
data16
and
add
fadd
adc
pusha
mov
std
xchg
rcrl
and
push
sbb
mov
pop
dec
mov
fldenv
es
cltd
pop
push
lods
sti
mov
xchg
pop
in
pop
call
inc
movsl
into
dec
nop
scas
adc
mov
xlat
cmp
scas
dec
mov
and
int
inc
fmulp
or
iret
jmp
in
mov
pop
cmp
imul
adc
cmp
xchg
out
jbe
jbe
aaa
nop
test
stos
arpl
xchg
js
sbb
std
mov
mov
ss
in
mov
mov
xchg
fldl
xchg
getsec
lret
mov
sbb
ds
in
popa
inc
and
push
lret
rcrb
lods
mov
lahf
lods
fcomp
adc
pop
mov
jno
insb
sub
and
shlb
jnp
sbb
lret
sbb
insl
lock
ljmp
aam
movsb
adc
outsb
jns
popa
xchg
jle
sub
imul
sub
sbbl
out
cmpsl
or
adc
iret
test
adc
lods
add
lods
xchg
push
sub
mov
es
mov
pop
iret
ret
or
dec
ja
adc
mov
xchg
and
mov
inc
mov
cmp
cmpsl
mov
mov
push
push
sub
pop
mov
shrl
out
sar
inc
inc
xor
xor
mov
cmpsb
jae,pn
xor
push
arpl
xchg
or
mov
or
fidivrl
push
xchg
out
loopne
js
add
and
lret
adc
mov
repz
add
mov
push
pop
jle
cmp
jg
pop
mov
pop
out
es
daa
sub
mov
lds
xor
movsl
rclb
insl
insb
iret
add
cmp
scas
pop
xchg
jbe
adc
cmpl
mov
jo
adc
xchg
jo
or
lock
jae
pop
xlat
xrelease
jmp
adc
into
std
adc
cmp
sahf
sub
xor
cmc
out
jns,pn
inc
or
adc
mov
cmpb
in
mov
xchg
xor
sub
lds
inc
cltd
outsl
iret
orb
pop
fbstp
lea
scas
rorl
in
cwtl
mov
push
or
sub
lods
fdivl
cmp
nop
sbb
repnz
jle
bound
push
jl
mov
adc
and
test
dec
or
push
mov
adc
sti
or
xor
in
test
sbb
in
xchg
or
mov
out
loopne
fldl
in
pop
sti
imul
loop
movlps
aad
sahf
mov
mov
lret
xor
add
add
cld
into
add
rcrl
pop
std
enter
mov
fwait
pop
adc
in
aad
out
jne
adc
shrl
mov
adc
mov
ds
aad
pop
pop
mov
mov
or
pop
lds
movsb
jno,pn
and
mov
cld
scas
ljmp
std
push
sbb
dec
pop
dec
dec
out
call
or
stos
lret
fidivrs
dec
inc
jns
push
jnp
sbb
stos
lods
xchg
push
mov
sarl
insl
push
jmp
cmp
pop
push
out
aas
rorl
dec
sub
or
sbb
jecxz
sbb
mov
imul
repz
pop
adc
outsb
stos
aas
push
ret
xchg
mov
push
jae
cmp
dec
in
cmp
fabs
xor
idivb
or
jmp
cmpb
inc
mov
gs
jns
pop
mov
dec
lods
xor
mov
stos
loop
idivl
adc
btr
sbb
iret
or
adc
and
push
xchg
lea
push
lahf
out
sahf
ds
sub
rorl
inc
dec
ljmp
or
sti
jbe
sub
add
lcall
insb
pop
aaa
mov
mov
dec
dec
cmc
push
movsb
unpcklps
and
ret
jb
push
sub
hlt
dec
fsubrs
xor
push
mov
inc
push
loopne
jno
sbb
inc
arpl
and
call
out
ret
cmp
aad
sbb
call
jge
push
repz
inc
xchg
sub
sbb
and
jge
add
mov
inc
sbb
inc
movl
cld
sarl
dec
push
xor
adc
push
mulb
ss
sbb
mov
jp
fwait
sub
mov
pushf
fs
or
or
cmp
xor
xchg
mov
cmpsl
mov
test
jl
jg
xor
inc
pop
loop
les
sti
and
out
sub
mov
dec
aas
add
shll
cmpsb
in
xchg
and
inc
or
pop
pop
dec
mov
add
int3
push
mov
cld
jae
inc
push
cmp
mov
pop
pop
setne
dec
es
loope
mov
pop
lods
sahf
sti
push
nop
xor
mov
ja
aam
in
push
pop
shll
cs
and
mov
out
xor
and
or
dec
pusha
add
mov
jne
adc
jmp
lret
lods
push
xchg
insb
cmpsl
cmpl
mov
in
test
mov
fs
or
cs
push
push
pushf
lret
push
outsl
ss
inc
in
js
stos
jp
sbb
mov
xor
push
or
inc
imul
fadd
lock
jle
outsb
inc
cmpb
jns
mov
pop
rcl
xor
rsm
and
xor
or
stos
out
int
jmp
aaa
mov
xchg
pop
lds
fnstcw
push
dec
pop
inc
sub
jo
popa
push
gs
mov
in
stos
jg
dec
leave
je
push
jecxz
and
sbb
cmpsl
mov
xchg
out
shrl
outsl
pop
inc
lea
push
and
hlt
add
cwtl
push
lock
aas
or
out
inc
imul
mulb
pop
loopne
mov
test
push
mov
cwtl
popa
lods
pop
loope
push
dec
push
rolb
aas
lret
sbb
sub
jno
je
or
xchg
pop
mov
outsb
fnstsw
push
jge
sub
icebp
movsl
xor
std
push
and
shlb
sbb
mov
jns
in
es
ja
sbb
sbb
xor
jns
xchg
cltd
movsb
enter
ljmp
inc
outsb
stos
loop
dec
ret
movsl
push
inc
imul
mov
push
daa
lods
and
data16
pop
inc
mov
in
sarb
jae
fwait
pop
gs
inc
sar
ret
sbb
in
and
xchg
test
aaa
sbbl
rcr
and
xor
je
mov
jl
sub
lret
push
xor
data16
mov
sahf
loopne
ljmp
cmp
cmpsb
xor
sti
adc
cmpsl
adc
push
push
lret
adcb
and
sub
out
inc
jl
jne
push
outsb
pop
mov
and
divl
test
cs
sub
pop
imul
or
jecxz
and
jo
jl
dec
pop
pusha
mov
add
fadds
dec
add
aaa
insl
int
and
cmpsb
loopne
loopne
mov
xchg
shrl
push
mov
in
scas
mov
jle
push
repnz
xlat
cmp
testl
in
add
iret
lret
rorl
jnp
hlt
push
cli
dec
jg
push
jno
add
xchg
xchg
movsl
insl
push
mov
xchg
nop
adc
add
fldl
pop
repz
in
cltd
mov
mov
imul
and
dec
lcall
pop
or
inc
imul
dec
arpl
dec
jne
shr
outsb
js
je
sub
fisttpll
xor
aaa
pop
or
gs
or
xor
imul
push
hlt
out
roll
iret
movsb
mov
setl
orb
pop
mov
mov
cltd
loope
sbb
fcoms
jecxz
test
faddl
lods
or
push
scas
rcl
dec
jo
inc
out
test
sbb
xchg
xor
aaa
mov
add
dec
add
stos
test
add
in
sahf
ss
das
repnz
in
dec
sub
decl
mov
int3
sbb
add
stos
fstl
sbb
mov
or
adc
sub
gs
iret
inc
ret
mov
fwait
mov
pop
cltd
jmp
pop
aad
das
sar
movsl
fistpl
dec
popa
mov
stos
lock
dec
mov
push
pop
loopne
movsb
xor
mov
cli
shll
rcr
mov
add
sahf
call
inc
sub
sbb
cs
adc
loop
insb
int3
sub
sbb
dec
push
into
dec
pop
gs
adc
sbb
outsl
or
cmp
or
inc
insb
mov
push
out
mov
xchg
or
popf
sbb
cwtl
jg
xchg
adc
in
cmpsb
arpl
pop
bound
inc
clc
adc
pop
rol
test
or
sub
shll
mov
pop
cmp
dec
xchg
pop
push
cmpsb
es
fisttpl
sub
arpl
mov
mov
cmp
fstl
scas
sbb
andl
xor
cmp
push
std
add
lds
sbb
xchg
dec
or
push
lods
push
sahf
test
jle
jb
pop
aas
mov
sbb
fsub
jne
push
sub
bound
adc
lea
pusha
fsubrs
outsb
sbb
fcmove
fs
in
inc
xchg
outsl
movsb
movsb
add
pusha
pop
or
push
loope
xor
ret
push
arpl
dec
or
cli
adc
push
lods
gs
lea
xchg
add
inc
inc
sahf
jmp
out
cs
pop
push
loop
adcb
dec
mov
call
fwait
ja
jne
ljmp
lret
or
lea
xor
out
cmp
bound
repz
pop
sahf
cmpsl
nop
ljmp
jg
je
out
bound
sbb
sub
mov
addr16
dec
and
mov
out
orl
inc
push
pop
xchg
imul
mov
push
loopne
inc
pop
leave
sub
cmpsl
js
mov
sub
push
faddl
sub
stos
cmp
push
inc
jae
hlt
lcall
cmp
inc
lods
pushf
jecxz
cmc
jmp
sarb
out
mov
pop
aaa
pop
jge
scas
pop
mov
cmc
int3
mov
xchg
cmp
xchg
fmuls
pop
leave
fisttpll
cmp
sarl
xor
inc
sbb
lret
pop
dec
std
push
dec
xor
add
xchg
push
push
cmp
mov
loop
sbb
inc
xchg
jecxz
or
xor
pop
pop
stos
mov
call
adc
and
mov
inc
nop
and
mov
test
push
cmp
sbb
sbb
dec
gs
jnp
mov
xchg
outsb
inc
faddl
inc
mov
jo
movsl
jg
lret
jecxz
inc
sbb
in
outsl
popa
outsb
std
lea
movsl
inc
shlb
jns
out
push
inc
stc
repnz
int
mov
fs
jnp
pop
shl
inc
and
jae
or
loop
lahf
outsb
or
rcr
pop
jge
das
fadds
pusha
add
sbb
xor
fwait
imul
shrb
fidivrs
lds
mov
enter
inc
lods
dec
and
out
inc
jbe
cmpsb
jns
out
js
lret
mov
push
stos
xchg
bound
sub
adc
mov
xorl
and
inc
and
repz
roll
repz
fcoms
fldl
movsl
jmp
aad
inc
and
xor
mov
jbe
sbb
mov
mov
mov
mov
imul
addr16
fbstp
cmpl
cmp
hlt
dec
subl
add
adc
mov
ror
mov
pop
mov
mov
inc
push
jno
add
xchg
mov
ficompl
je
adc
mov
out
cli
inc
in
ret
and
jbe
pop
repz
fisubrl
push
inc
jnp
cmp
rcrl
lret
jbe
mov
mov
cli
inc
rcr
adc
mov
in
adcl
inc
add
mov
pop
inc
daa
add
iret
or
es
sub
push
fsub
and
aas
xorl
movsb
or
adc
addr16
pushf
sub
xor
or
fbld
add
adc
sub
add
add
xlat
test
xor
jle
lahf
movsl
pop
jns
sbb
fcom
or
pop
cli
push
lea
lods
adc
sbb
pusha
cmpsl
adc
subb
xchg
pop
push
cmp
int3
xchg
pusha
test
shll
mov
stos
push
fisttpll
jo
dec
cwtl
andb
bound
sub
inc
sub
shll
fistpl
lods
xlat
sbb
inc
ds
ss
mov
outsl
out
inc
cmp
cmp
xchg
lea
es
xor
loopne
jnp
loop
inc
cmp
test
jp
sub
rcll
daa
cld
mov
das
loopne
xchg
clc
push
cmpsb
mov
sbb
cmc
pop
mov
and
xor
cmp
add
inc
mov
aaa
mov
lret
add
push
in
adc
dec
sbb
xchg
pop
xchg
std
mov
sbb
aam
xchg
cs
dec
pop
cmovbe
dec
push
test
popa
gs
jle
or
mov
pop
lock
inc
adc
lret
flds
mov
xchg
imul
inc
test
xor
call
jb
sub
xor
jl
out
inc
xlat
xchg
call
xor
sub
pop
dec
movsl
jae
in
addr16
add
add
call
xor
popa
aad
adc
jge
or
mov
cwtl
aad
stc
std
pop
or
pushf
add
and
adc
pop
ds
push
and
mulb
jo
sbb
xchg
rolb
pop
in
jae
out
insb
pop
inc
xchg
push
inc
dec
fimull
and
test
xor
cli
mov
fsubs
repz
cmp
mov
mov
and
xchg
inc
loope
subb
add
adc
out
and
lret
popf
pop
pop
fs
add
cltd
mov
pop
mov
sahf
cmp
add
lret
dec
aaa
jns
xor
inc
in
jmp
fcmovbe
not
mov
inc
mov
push
adc
repz
jo
sbb
outsb
addl
jmp
lcall
in
lock
int3
xor
lret
stc
ret
in
dec
mov
out
iret
mov
pop
push
xchg
outsl
int
mov
movsl
stos
cld
jb
pop
fldl
shll
mov
icebp
mov
clc
icebp
or
inc
cmp
xchg
mov
test
lret
rclb
lock
pop
cmp
jp
rcrb
clc
mov
xor
loop
pop
into
mov
rolb
xchg
jp
ss
mov
out
imul
sbb
inc
push
fadd
nop
mov
jmp
mov
push
mov
rorb
outsb
push
cmpsb
adc
fidivrs
and
setp
xor
out
and
mov
sbb
jmp
daa
add
xacquire
dec
add
iret
stc
cmp
push
fs
inc
in
jbe
add
pop
in
pop
and
mov
inc
rorb
cli
lods
call
push
pop
adc
xor
adc
je
lcall
test
ret
sub
mov
mov
andb
mov
pop
cmp
push
shlb
xor
test
or
xchg
mov
imul
inc
dec
push
fwait
cmp
adcl
cld
xchg
mov
ja
dec
add
adc
sub
xorb
int
mov
addb
push
sub
cld
inc
sub
inc
jge
pop
lcall
vmread
mov
lcall
insl
jnp
dec
daa
repz
cltd
jmp
cltd
mull
cmp
inc
dec
xchg
push
mov
sarl
lds
sahf
dec
or
cmpb
xchg
out
jnp
inc
cmp
mov
pop
lods
iret
fwait
mov
xor
cmpsl
push
scas
dec
lock
stc
hlt
aam
lret
inc
ss
in
out
lret
lret
lret
and
xchg
popa
nop
mov
cltd
sahf
adc
push
mov
pop
or
inc
lret
cmp
xchg
in
pop
std
or
jp
lds
popa
push
pop
xchg
xchg
or
add
test
fidivrs
sbb
xchg
shlb
lahf
mov
add
repz
xor
or
xor
mov
pop
xchg
mov
jnp
loope
cli
stos
and
mov
dec
push
das
mov
sbb
and
inc
dec
push
mov
xor
mov
scas
int3
push
in
lret
or
sbb
push
fnsave
mov
mov
add
mov
arpl
pop
sub
sub
fdivrl
push
lahf
adc
ret
jle
jg
popa
inc
ss
lcall
in
mov
cmp
mov
cmp
in
movb
mov
add
icebp
test
adc
mov
sahf
sbb
loop
cmp
fneni(8087
adc
hlt
pop
inc
or
or
dec
movsb
cld
aaa
leave
jb
imulb
pop
mov
adc
xchg
push
imul
iret
in
popf
mov
xchg
sahf
sbb
pop
int3
or
pop
ljmp
movsl
ja
sbb
or
popa
cmp
pop
xchg
mov
mov
in
inc
addr16
aaa
push
mov
les
add
jbe
dec
lcall
mov
sub
cmp
cltd
pop
sub
push
sub
pop
push
int
inc
xchg
pushf
xchg
xchg
cmp
sbb
mov
jle
inc
sbbl
lods
pop
pop
inc
cld
pop
inc
loope
test
daa
lret
mov
add
pop
cmc
repnz
push
ret
jbe
divl
and
sub
xlat
shlb
test
repnz
inc
hlt
mov
scas
arpl
js
imul
cwtl
push
jle
dec
mov
lret
xlat
xor
sbb
in
jne
and
js
stos
pop
je
aad
sbb
orb
xchg
inc
cli
test
push
ja
inc
push
jns
jae
xchg
sbb
jle
sbb
lcall
stos
fdivs
adc
shl
push
inc
in
adc
ljmp
movsl
test
or
adc
xchg
mov
xor
sub
mov
or
data16
jb
dec
push
inc
in
or
mov
mov
push
fcomps
add
into
shlb
stos
insb
mov
ss
test
fistpll
ror
add
dec
pop
add
cmpsb
mov
cmpsb
outsb
icebp
lods
mov
pop
push
shl
pop
rcrb
and
push
addr16
addr16
jl
lcall
cltd
add
cwtl
gs
pop
inc
mov
xor
lds
imull
lcall
add
call
mov
jmp
inc
aad
rcrl
mov
dec
movsl
iret
push
mov
cmp
xlat
cmp
dec
xlat
ljmp
dec
pusha
hlt
pop
mov
push
cs
or
insl
test
call
loop
fstpt
scas
xchg
xchg
call
mov
movsl
add
push
mov
int
push
in
adcl
bound
cwtl
jne
cmp
in
mov
jmp
rclb
xlat
in
mov
clc
call
cltd
sub
xor
test
loopne
repz
sahf
out
xchg
test
or
mov
and
lret
jmp
jae
adc
ja
push
xor
mov
jp
popa
cmc
data16
in
mov
xor
xchg
pop
lds
or
mov
cmp
cltd
push
inc
inc
mov
adc
xor
jg
pushf
inc
mov
dec
and
mov
push
pop
std
inc
sahf
jg
mov
dec
test
stos
pop
mov
adc
ficoml
mov
dec
sbbb
nop
test
jne
inc
xchg
in
dec
in
dec
in
inc
push
inc
ret
js
das
aaa
ds
mov
cs
jae
outsb
lock
jno
mov
addr16
add
inc
lret
xchg
dec
sbb
es
mov
je
mov
jp
or
sub
inc
mov
test
inc
jno
outsb
pop
jae
cmpsl
sub
inc
mov
jno
mov
mov
ljmp
es
fnstenv
rclb
subb
test
inc
inc
sbb
or
mov
jmp
sbb
xor
jne
sub
in
lret
popl
inc
jb
and
aaa
dec
sbb
jle
insb
pop
shl
cmp
fistps
test
sub
shr
jge
rcll
daa
cmc
inc
pop
mov
pop
adcl
push
aas
dec
jno
movsl
adc
jb
xchg
daa
sub
dec
call
pop
hlt
ret
daa
and
clc
lahf
gs
inc
pop
rclb
tzmsk
sbb
mov
notl
pop
in
or
ret
test
xor
adc
mov
cmc
adc
jge
pusha
jnp
and
lods
dec
mov
sbb
pop
call
or
mov
pop
lcall
mov
push
mov
jle
dec
rolb
xor
jb
cwtl
out
push
ficomps
lods
testl
es
popl
imul
xchg
mov
sbb
cli
popa
mov
mov
lcall
into
ljmpw
mov
or
inc
push
jl
call
inc
cmp
push
stos
sub
add
add
push
sti
movsl
leave
jae
mov
aas
je
mov
jb
data16
in
lods
pop
push
fwait
imul
add
sahf
movsb
mov
jge
es
cmpb
pop
in
int
je
xlat
or
aas
fcoml
push
sub
mov
ret
aaa
fstl
stos
ret
shlb
mov
cmp
pop
cmp
fwait
pusha
mov
int3
cltd
loope
lcall
pop
jg
int3
pop
mov
sub
jmp
ljmp
arpl
xor
pop
or
inc
sub
sbb
push
mov
data16
out
es
mov
mov
stos
std
dec
push
or
fldenv
xor
push
imul
or
jmp
cli
out
test
push
cmp
inc
dec
xchg
push
push
cli
scas
fisttpl
cmpsl
xor
lret
cwtl
and
ficomps
pushf
pop
jnp
xor
jae
mov
adc
inc
pop
xchg
mov
push
das
xchg
and
ds
pop
dec
adc
dec
sub
cmpsb
insb
daa
sbb
arpl
xor
mull
xchg
scas
or
movsl
in
data16
sub
shll
xchg
mov
fwait
call
mov
int3
ret
fucom
dec
push
sub
lock
cmc
mov
push
mov
add
cmp
ficompl
mov
lds
push
inc
cmc
ss
cmpsl
adc
mov
pop
cmpsl
push
mov
push
rcll
in
arpl
out
insl
js
push
popa
shl
je
push
dec
cmp
out
clc
call
fnstsw
call
mov
clc
int3
mov
adc
and
cltd
ljmp
sub
mov
addr16
inc
and
push
pusha
cs
cmp
aad
push
ss
xor
or
mov
push
mov
jg
mov
aam
or
outsb
or
jnp
push
int
dec
or
lret
int
clc
mov
jb
inc
jge
sbbl
int3
cli
or
int
mov
daa
ja
jle
ror
in
decl
mov
stos
call
push
jno
test
xchg
mov
or
adc
lret
dec
xchg
jle
xchg
mov
cld
mov
sub
mov
cmp
rol
mov
out
iret
ror
daa
mov
adc
fs
xchg
es
xor
xchg
cmp
mov
push
dec
inc
hlt
fbld
lret
cmpsb
ja
mov
push
cmp
push
add
loope
fadds
push
mov
add
popf
dec
cmp
lea
sbb
jmp
ret
sub
inc
leave
mov
lea
sub
ret
jg
cmp
inc
inc
cmp
push
inc
imul
gs
adc
cltd
xor
lahf
pop
xchg
stos
jb
mov
pop
mov
imul
sub
inc
testl
push
aad
lahf
jnp
mov
xchg
cmpsb
cld
push
dec
clc
adc
fcomps
fsubs
xchg
push
jmp
out
andb
insb
mull
xchg
adc
and
jns
sbb
jns
aam
xchg
cmp
mov
lods
xchg
add
push
sbb
aad
mov
cmpsl
addr16
mov
mov
add
stos
mov
and
ds
fwait
mov
push
rorl
aas
and
cltd
inc
je
into
into
popa
aad
or
push
inc
sub
out
in
xchg
dec
pop
maskmovq
idivl
je
imul
pop
test
cmovbe
imul
mov
cmc
dec
mov
scas
cmp
cmp
jbe
mov
dec
stos
jl
xor
cwtl
stos
cmp
xor
push
mov
jge
addr16
inc
cmp
das
aas
sub
sbb
std
test
sarl
adc
jg
leave
sub
xchg
xchg
imul
insl
add
sub
aam
sub
inc
out
inc
outsl
inc
repz
adc
adc
ss
jno
mov
call
idivb
dec
add
shr
sub
sahf
jo
hlt
sub
sbb
sbb
aas
outsb
and
pop
dec
sbb
adc
mov
xlat
dec
mov
or
jmp
test
arpl
cmp
hlt
testl
cmp
mov
mov
adc
cmp
add
rcll
mov
jns
repz
cmp
mov
loopne
push
xorb
or
and
inc
push
das
inc
iret
ds
aam
or
push
and
stc
out
enter
xor
shll
dec
dec
gs
jp
ljmp
cmc
push
sub
adc
add
pop
pop
addb
mov
inc
jge
pop
loope
jle
es
xor
jne
outsb
dec
mov
mov
dec
stc
or
sbb
icebp
xor
add
xchg
fcoml
daa
mov
ljmp
sub
cmp
jg
das
mov
and
adcb
jbe
mov
sbb
aad
notl
mov
in
push
jbe
lock
js
in
js
or
cltd
jecxz
mov
jg
xor
jns
ja
mov
out
push
push
rcll
sbb
enter
test
dec
incl
jno
cmp
xor
dec
lods
cmpnleps
out
and
lds
xchg
or
andb
das
cmp
jmp
mov
jecxz
push
mov
mov
rcr
dec
aad
rcrl
outsb
add
pop
cwtl
scas
add
jmp
scas
mov
jg
jmp
outsl
lret
js
ja
pop
add
sbb
jmp
xor
sbb
pop
fldl2e
ss
clc
inc
adc
fisubs
mov
push
cmpb
jge
jae
pop
mov
mov
iret
adc
and
outsl
add
mov
int3
xchg
popf
sub
mov
outsb
enter
clc
fnstcw
pop
jbe
out
pop
mov
or
fsts
push
xchg
mov
xchg
cwtl
cmpsb
mov
test
idivb
fwait
call
in
add
das
sbb
sti
adc
mov
and
lahf
adc
push
or
sbbl
mov
xchg
dec
lock
mov
fucomp
jecxz
inc
mov
jecxz
scas
stc
cs
das
jge
jne
jecxz
loope
rorb
pusha
mov
sahf
cmp
ret
mov
xor
cmp
notl
movsl
int
je
sti
mov
loop
roll
mov
or
push
pusha
fidivrl
mov
pop
inc
adc
enter
xor
movb
mov
dec
insb
xchg
fyl2xp1
dec
mov
and
imul
in
push
dec
and
ljmp
push
or
ss
cmp
hlt
pusha
shlb
sti
cmpsl
loopne
or
add
pop
fdivr
in
addr16
ret
adc
push
fisubl
in
ret
jns
cmpl
push
je
fwait
repnz
lret
lahf
mov
lret
add
ret
icebp
xlat
push
jae
mov
mov
push
mov
mov
sub
xchg
pop
dec
mov
scas
pop
pop
sahf
cmp
dec
cli
jle
shrb
inc
and
lcall
or
enter
jbe
hlt
repz
insb
lret
jge
mov
mov
loopne
sub
inc
inc
or
cmpsl
ret
add
push
in
aas
js
ds
and
xchg
push
sbb
jnp
xchg
mov
push
pop
lods
shrl
xor
push
bound
out
mov
jno
fcmovnb
jne
pop
dec
insb
bound
into
addr16
mov
mov
cwtl
mov
dec
add
mov
sbb
adcb
sub
fbld
sahf
in
dec
mov
mov
shl
add
push
out
push
pop
mov
adc
jno
repnz
xchg
cmp
out
and
adc
dec
cmpsl
mov
bound
out
jg
mov
push
push
std
xchg
mov
stc
int3
sbb
aas
lret
mov
xor
pop
push
jbe
cld
add
fmul
pop
ds
xchg
add
call
mov
pop
repz
jbe
or
out
jbe
cmpsb
sub
insb
jg
mov
dec
les
daa
leave
and
or
cmpsb
negb
sub
push
lock
dec
aas
adc
fisubrl
jle
sub
cltd
test
xor
push
adc
lret
push
shrb
push
sti
jne
outsb
fs
mov
sub
lahf
jne
fstps
push
mov
adc
cmpsb
xchg
iret
pop
mov
repz
pop
stos
not
xor
repz
addr16
lcall
mov
mov
add
push
xor
lret
jmp
inc
arpl
sub
jle
mov
ds
cmp
mov
or
iret
sub
in
aaa
fcomi
clc
lds
mov
sbb
test
sbb
ret
or
fsub
jno
orl
cmpl
dec
andl
pop
mov
leave
cwtl
jge
roll
xor
je
and
push
stc
sub
call
mov
adc
lods
push
adc
or
xchg
pushl
out
clc
out
mov
inc
pop
test
in
repz
out
and
cmpl
dec
cltd
mov
leave
xchg
xor
cmpsb
icebp
xorl
push
jnp
pop
push
mov
pushf
dec
hlt
loopne
push
sub
add
clc
jg
push
cmp
xor
stos
or
adc
push
loop
xchg
push
mov
stos
mov
push
mov
xchg
in
outsb
je
ljmp
hlt
push
in
sahf
mov
adc
fwait
push
ljmp
sahf
cmpb
stos
mov
lock
hlt
ja
inc
pop
leave
test
xor
enter
push
mov
out
adc
and
adc
cli
sub
xor
shll
ss
jns
js
push
out
jecxz
icebp
stos
inc
stos
mov
into
shrl
incb
xchg
dec
repnz
outsl
cmp
nop
cmp
mov
jge
addb
lret
ror
fwait
sbb
sub
aas
in
call
jecxz
jg
mov
ljmp
addl
movsb
mov
daa
cli
sbb
in
and
mov
cmp
clc
cli
mov
popa
xchg
xchg
adc
adc
repz
add
ljmp
mov
int
lret
jns
mov
mov
out
cmpsl
inc
xlat
add
cs
into
aam
sub
jp
push
jle
mov
pop
pop
add
xchg
push
in
notl
data16
xor
pop
sarb
mov
fsubrl
cmp
inc
sti
daa
call
push
inc
xor
push
push
repnz
in
subb
int3
insl
cmpsl
inc
aaa
leave
adcl
stos
stos
and
test
push
jl
mov
mov
jle
loope
and
or
and
or
inc
and
add
out
mov
in
pop
push
push
sbb
movsb
lret
xchg
cmpsb
test
adc
aam
jbe
cltd
mov
jl
lret
dec
loop
test
outsb
fcompl
add
or
mov
inc
sub
adc
addr16
je
fwait
inc
test
push
pop
int
mov
addb
cs
cmp
cmc
ss
clc
pop
sbb
icebp
push
and
into
push
cmp
scas
cmp
push
aaa
mov
aaa
jp
test
out
jns
mov
jo
stc
pop
mov
or
jne
mov
mov
in
adc
mov
add
inc
pop
adc
movsb
add
mov
cmc
cmp
repz
inc
adc
adc
or
xor
lods
dec
or
xchg
mov
outsl
push
outsl
sub
mov
lea
push
ss
inc
cld
jmp
push
cmpb
cmp
add
mov
fbstp
lods
cmp
dec
mov
call
dec
or
mov
ds
push
loopne
mov
dec
dec
add
or
push
aam
mov
push
clc
sub
pop
fdivrl
fiadds
ds
lods
dec
insb
mov
cli
jle
pushf
jnp
push
inc
and
dec
dec
push
jbe
lock
daa
scas
popa
lahf
jecxz
push
pop
inc
mov
fdivl
push
out
mov
rcl
fldcw
add
dec
jns
pusha
add
sub
push
insl
mov
outsb
push
mov
push
jae
cmpsb
inc
push
ds
hlt
aam
sub
cmp
scas
outsl
aam
out
jns
lcall
mov
cmp
imul
sbb
jp
sbb
dec
rorl
pop
cmp
pop
in
and
not
sar
push
mov
cli
daa
jmp
sbbb
loope
push
and
loope
cli
push
or
insb
mov
loop
cmc
cwtl
enter
xor
aas
xchg
sbb
jmp
sub
test
jmp
mov
int
int
adc
scas
aaa
fcompl
sub
inc
push
lahf
shll
pop
in
aaa
pop
movsl
dec
xchg
das
les
lds
addr16
xorb
jl
icebp
clc
cmp
xchg
xchg
cltd
mov
cmp
sahf
xor
push
dec
insb
jnp
jge
stos
movsb
push
cltd
ret
ffree
cld
or
inc
sub
out
mov
lods
mov
pop
add
sub
inc
adc
xor
xor
cmc
pop
adc
dec
outsb
dec
jg
shrb
or
stc
inc
test
in
jns
inc
out
mov
test
jo
cli
xchg
mov
rcrb
or
inc
es
ss
and
jle
imul
int
jo
fidivs
sar
jae
pop
dec
push
pop
cwtl
sub
dec
aas
jmp
mov
pop
hlt
outsl
pop
xchg
jno
mov
pop
cmp
push
pop
mov
pop
xor
cli
pushf
aad
sbb
adc
dec
mov
cmp
roll
cld
and
jnp
pop
cmp
mov
mov
or
ficoml
loopne
test
shll
sub
sbb
leave
fdivrp
add
imul
movsl
icebp
xor
adc
cli
sub
sub
call
sub
or
sub
mov
sarl
loop
shrb
cmp
sbb
jecxz
call
add
popa
cld
jle
test
andl
cmpsb
movsb
into
cmp
pop
push
mov
insl
push
insb
gs
rclb
lods
loop
push
in
or
dec
xchg
add
jne
pop
sub
jo
fnsave
mov
and
testb
cmc
lahf
gs
and
jae
mov
mov
fcos
mov
push
xchg
mov
sub
montmul
cmpsb
addb
xchg
jnp
hlt
call
xchg
or
popf
hlt
inc
sbb
xor
pop
imul
xor
lahf
cs
fabs
nop
cwtl
imul
and
fdivp
or
mov
out
lods
in
xchg
fisubl
mov
or
xor
cmp
dec
sti
mov
cmp
mov
adc
mov
mov
dec
mov
push
lcall
mov
sarb
pop
mov
out
or
jmp
and
lret
add
dec
dec
pop
push
cmp
lds
sbb
and
aad
push
fwait
outsw
pop
adc
pop
sub
outsl
cmp
rol
pop
inc
sub
icebp
jmp
call
mov
sbb
cmpsb
mov
and
bound
fiaddl
cwtl
lods
xchg
mov
cltd
add
enter
push
sbb
xchg
nop
or
subl
push
stc
add
xor
push
pop
movl
mov
sub
xor
test
shlb
push
fs
fstpt
cs
aas
mov
sub
in
lahf
adc
mov
sbb
sahf
decb
std
lret
je
xlat
dec
pop
dec
dec
xor
sub
jnp
jns
ret
cmp
cmovne
mov
into
out
cmpsl
dec
outsl
jg
in
stos
pop
test
mov
or
rcrl
loopne
mov
xchg
mov
lahf
adc
xchg
jne
cmp
mov
add
or
and
fildll
outsb
dec
xchg
pop
xor
lcall
in
dec
rclb
adc
ret
pop
mov
call
cmc
xchg
inc
in
and
inc
mov
rcrl
pop
adc
mov
stc
mov
loope
mov
jg
testb
xlat
mov
dec
adc
shlb
pusha
jp
in
out
mov
sub
xchg
cmp
jae
ja
dec
leave
mov
or
and
and
jae
push
pop
mov
mov
or
fisubrs
mov
addl
push
adc
xchg
sti
cmc
xchg
nop
push
sti
mov
lret
mov
sub
mov
mov
cmp
or
outsl
je
pop
imul
mov
insb
nop
or
push
imul
cmp
adc
mov
in
add
shll
ret
inc
dec
sbb
imulb
cld
mov
xchg
lock
pop
add
loopne
sub
ficoml
lret
aaa
push
loop
es
cmp
lcall
imul
test
loop
mov
idivl
push
test
xor
lret
and
lret
or
dec
dec
adc
push
push
cmpsb
adc
cmp
jo
dec
test
adc
sbb
popf
push
xchg
je
pop
pop
add
fcomps
call
push
in
int3
pop
sub
sbb
loop
ss
push
ljmp
test
xlat
push
mov
sbb
sahf
jbe
pop
jl
daa
loope
rclb
sbb
and
ret
fists
cld
fcmovnu
pop
arpl
xchg
mov
outsb
sub
jae
sub
inc
fcomps
call
dec
hlt
add
data16
adc
pop
fdivrs
insl
fbld
xor
jecxz
shl
fistpl
cld
cmp
out
popf
jo
enter
sub
or
insl
in
xchg
lret
sarl
mov
adc
push
repz
outsl
xor
jmp
pop
sub
addl
insl
xor
dec
loope
shll
fisubrs
in
inc
mov
daa
ret
sbb
lcall
lock
xchg
push
lret
out
out
cmpb
jge
divb
mov
insl
repnz
dec
cmc
mov
xor
pusha
inc
cmpb
sahf
or
mov
loop
jmp
inc
rorl
jnp
pushf
outsw
add
mov
test
or
das
dec
fsubl
pop
sub
sub
or
movsl
sti
xor
adc
inc
rcl
rorb
pop
scas
lock
push
imul
lcall
push
loope
ljmp
fcom
hlt
fadd
push
mov
sub
iret
insb
inc
and
pop
fs
movsl
in
mov
sti
mov
adc
push
lock
je
in
sub
movb
addl
fiadds
lret
jge
mov
hlt
jl
fdivr
cmp
ret
xchg
and
loopne
sbb
outsl
insl
xchg
popa
cli
fildll
testl
jle
fs
inc
sti
jb
or
push
jns
orb
xchg
inc
cmp
sbb
loop
insb
in
fcoml
pop
and
or
jmp
inc
mov
inc
inc
out
add
cmp
aaa
xor
movsb
mov
out
pop
mov
push
cmp
sbb
sub
rol
out
mov
test
inc
pop
xchg
pop
jl
push
push
jmp
jne
mov
inc
dec
mov
mov
xchg
add
mov
iret
ds
in
pop
sbb
mov
loopne
inc
add
xchg
mov
cmp
jp
test
jle
push
test
ss
repnz
mov
add
cmp
or
in
in
int
xchg
xor
pop
cld
sub
jmp
lret
inc
add
mov
jae
daa
cld
fwait
adc
adc
adc
mov
orb
mov
and
pop
push
in
mov
imul
js
out
shlb
movsb
and
jb
add
lods
xor
dec
arpl
add
sti
and
pop
inc
sub
lret
test
lods
sub
cmp
clc
adc
stos
jbe
enter
cmp
or
lods
sub
and
dec
test
fsubs
test
mov
cmpsl
scas
fbld
adc
cmpb
addb
aaa
xchg
sbb
sub
lret
movsl
or
jbe
or
fbstp
sub
loopne
loope
outsl
xchg
test
jae
arpl
push
adc
into
das
sub
std
mov
inc
ret
push
stos
pusha
inc
fcoml
sub
ret
pop
outsb
push
pop
dec
insb
push
pop
nop
lods
pop
insl
adc
negl
adc
cmp
rcrl
adc
push
cmp
out
mov
aam
jae
jecxz
sub
mov
push
xor
imul
call
in
mov
lea
imul
sti
adc
out
jb
adc
imul
out
dec
rolb
xchg
and
in
shlb
insb
fcmovu
test
push
repnz
and
loope
out
testb
add
dec
sti
jge
nop
sti
inc
test
mov
sub
and
popa
jge,pt
int
mov
or
mov
and
jae
jge
fmull
in
cmpsl
icebp
mov
pop
pop
jb
int
sub
push
jp
fs
test
push
sub
faddl
lods
loope
mov
cmp
and
add
in
sbb
flds
aaa
fs
rorl
es
pop
int
jge,pn
mov
and
ja
push
pop
mov
popa
xlat
arpl
fnstenv
cld
dec
push
es
xor
pop
leave
in
in
in
in
mov
push
sub
es
movsl
and
pusha
aas
xchg
cmp
add
jp
cmp
and
mov
inc
lret
add
and
out
sub
xor
jmp
or
std
cltd
jecxz
lock
mov
loop
stc
dec
add
aaa
add
jbe
jl
out
cmpsb
js
int
inc
or
popf
mov
lods
pop
add
in
fstpl
test
rclb
rcll
insl
jo
insl
cs
mov
jb
das
xchg
mov
fcomip
clc
and
add
mov
cmpl
sbb
leave
iret
bound
xlat
push
sbb
xchg
inc
scas
out
stc
repz
add
cmc
inc
jno
push
jnp
push
daa
push
int3
inc
loop
orb
sarl
push
or
add
mov
xchg
xchg
out
xchg
pop
mov
sub
push
cli
cmpsb
in
data16
mov
dec
add
lcall
jae
jo
rolb
loop
test
loop
jecxz
dec
mov
pop
inc
add
arpl
negb
jne
sahf
lea
push
jp
out
jl
fidivs
cmp
adc
sbb
testb
popa
push
inc
pop
and
sbb
repz
push
mov
aad
aaa
sbb
mov
cmp
call
pop
lahf
mov
jl
inc
pop
ficompl
in
sub
movsl
jnp
dec
je
test
cmpsb
test
into
cmc
icebp
data16
adc
fnsave
aad
pop
ficoml
mov
adc
or
dec
jae
outsb
test
dec
clc
insl
pop
daa
adc
push
pop
mov
adc
inc
in
jle
fcompl
and
push
sar
outsb
cmp
mov
mov
enter
idiv
cltd
fisubrs
and
xchg
sti
xchg
mov
dec
adc
test
movsl
clc
jl
shrb
mov
fnstcw
fisttpll
add
nop
jecxz
push
add
insl
aaa
mov
cmp
stos
pop
mov
stos
repz
fisttpll
pop
sbb
pop
push
sti
mov
mov
xor
lret
sub
push
or
push
add
pop
mov
mov
dec
jnp
xchg
mov
lret
test
xchg
std
mov
inc
inc
in
jl
jl
fnstenv
in
sahf
cmp
cmc
outsl
cmp
lds
stos
addr16
sar
xchg
shrb
idivb
sahf
std
or
iret
and
xchg
idiv
mov
mov
mov
dec
fneni(8087
setg
idivl
jecxz
jl
shl
cmp
les
std
fistpll
xor
pushf
scas
rclb
lcall
cmp
adc
cs
cmpsb
orb
push
jae
inc
in
pop
rclb
sbb
pusha
or
and
insl
popf
adc
hlt
test
adc
pop
mov
mov
sahf
fcmovnu
mov
mov
lret
mov
cmp
rclb
push
xlat
leave
add
add
popf
loop
inc
addr16
xorl
jle
dec
sbb
repnz
jge
mov
jl
mov
and
cmp
inc
sub
mov
lahf
sub
cmp
lret
push
jae
andl
clc
test
push
repnz
test
je
xchg
cmp
xchg
stos
sbb
or
js
inc
jl
std
fsubl
daa
sti
xchg
mov
xlat
mov
es
fnstenv
push
lcall
jg
and
data16
cwtl
div
jb
pop
mov
imul
mov
mov
out
mov
fwait
sub
xor
dec
and
inc
scas
add
and
cmpsl
and
cmp
mov
dec
mov
push
data16
iret
lds
movsb
sub
mov
jns
insl
pusha
shl
jnp
stos
pop
sub
mov
addr16
and
sub
pushf
sti
mov
lea
enter
pop
dec
xor
cmp
std
sbb
inc
jb
in
push
sub
daa
aad
testb
cmp
sbb
pushf
fiadds
mov
push
dec
nop
push
lcall
xchg
rcrl
aas
xor
sbb
aam
mov
add
fcoml
pop
inc
ja
xor
cli
cmp
out
sub
imul
ret
sub
mov
xor
leave
out
pop
push
sub
and
mov
clc
cmc
xchg
fwait
idivl
mov
dec
inc
sbb
cs
mov
addr16
fidivl
lds
ljmp
shlb
out
sub
xor
jecxz
ja
in
loope
xor
mov
andl
sub
js
pop
cmc
inc
cmp
mov
lahf
dec
mov
and
pop
cmp
bound
mov
sub
and
es
test
cmp
inc
not
inc
inc
inc
or
popf
ja
mov
mov
shrb
dec
leave
dec
js
inc
pop
fcomip
loope
insb
mov
mov
cmc
iret
loop
in
fistps
icebp
test
mov
inc
jmp
or
xchg
sub
xchg
cmp
gs
push
xor
outsb
and
in
dec
call
inc
pop
pop
push
jns
out
pop
inc
lea
jae
test
xchg
sbb
sub
add
fucomi
dec
pop
aad
add
dec
in
adc
jmp
dec
jns
lods
cmp
pop
mov
xchg
mov
icebp
jae
add
mov
fucomip
dec
cmp
pop
repz
ja
aam
lcall
jp
dec
lods
imul
inc
stos
ror
jmp
cmp
cld
fbstp
arpl
stos
les
inc
jb
imul
or
adc
aaa
sbbl
into
sub
test
jns
cmpsb
in
loop
push
inc
imul
jbe
mov
test
pop
add
mov
stos
insl
inc
sub
fs
and
test
imul
cmp
dec
jno
push
sub
das
jp
loop
cmp
adc
adc
nop
xor
movsb
ror
xchg
mov
and
mov
or
add
pop
imul
sub
imul
push
mov
addr16
bound
pop
cli
loope
fbstp
imul
sub
mov
jbe
call
inc
hlt
loopne
adc
std
xlat
xchg
push
test
ja
add
shl
adc
das
push
pop
shlb
aad
adc
push
mov
and
push
pop
ret
mov
mov
pop
decl
inc
cld
cmp
push
dec
inc
or
cmp
push
jmp
iret
icebp
lods
idiv
push
dec
lcall
daa
xchg
je
jae
push
fsts
fs
ret
cld
adc
fwait
jle
nop
sbb
inc
mov
idivb
scas
sbb
sbb
jle
repnz
loope
cmc
cmpsl
popf
sahf
xchg
cmp
and
and
in
xchg
xor
inc
sti
jo
mov
mov
movl
sbb
sbb
daa
mov
cmpsl
std
in
je
test
mov
jbe
xor
dec
aas
sub
bswap
addr16
mov
and
add
in
sub
mov
and
icebp
xchg
and
out
mov
jns
push
push
aam
int3
in
jne
test
sbb
cmp
lahf
inc
flds
lods
outsb
cmp
loopne
xor
testb
int3
pop
mov
xchg
lcall
scas
xor
and
das
test
sar
push
xchg
dec
sub
hlt
sbb
or
inc
clc
scas
in
push
imul
and
dec
push
jp
gs
mov
jle
popf
test
and
xor
std
daa
pop
int
and
pop
lret
pop
pop
pop
mov
jl
out
std
jmp
sbb
test
mov
aam
add
enter
push
lds
std
sbb
mov
dec
and
pop
out
loop
sub
pop
mov
cmp
jecxz
push
out
arpl
lock
mov
movsl
lcall
cmp
loope
pop
push
fwait
cmp
sub
mov
lahf
popa
test
push
xchg
lods
testb
data16
add
outsb
jecxz
push
test
mov
out
sub
or
int
shlb
out
int
icebp
stc
and
inc
pop
int3
pushf
sbb
adc
mov
lret
adc
mov
mov
pop
mov
test
sub
testb
dec
cmp
cmp
inc
popa
or
loop
ss
lods
dec
iret
addr16
inc
mov
adc
and
jp
pop
std
shl
jo
lds
roll
dec
inc
shlb
sbb
xchg
or
xorl
lcall
loopne
daa
pop
pusha
mov
mov
pop
lods
push
inc
sahf
outsl
mov
adc
add
inc
cltd
sbb
inc
loop
push
roll
dec
movsb
push
lock
orb
jge
pop
xor
insb
scas
dec
into
idiv
xchg
jle
inc
repz
cmpsl
cmpsl
movsb
mov
aam
stc
xchg
fnstenv
pop
cld
sub
or
jp
hlt
shr
xchg
xor
and
js
sub
jmp
add
pushf
lahf
add
in
loope
and
pusha
inc
addl
add
mov
stos
xchg
shl
cmp
mov
sub
imul
jecxz
aam
jle
push
aaa
mov
stos
insl
mov
in
repnz
xchg
push
nop
scas
hlt
sbb
in
inc
loopne
mov
ret
pop
test
mov
in
sbb
mov
inc
xor
inc
and
or
je
lahf
test
pop
pop
push
push
sahf
jl
mov
sbb
popa
jbe
inc
mov
mov
in
mov
mov
mov
ljmp
xor
cmpb
xchg
jno
cmp
adc
jbe
add
or
mov
pop
sahf
cmp
cmc
mov
cmp
sbb
or
push
stos
jbe
cmpsb
jge
dec
push
push
pop
dec
faddl
mov
lea
jge
mov
push
cmp
sbb
imul
mov
iret
jo
mov
fs
fmuls
movsl
pop
in
xchg
pushf
repnz
in
fsubl
pop
imull
jbe
jmp
leave
ljmp
lds
push
in
sbb
out
in
cmpsb
fcoml
jle
aam
jecxz
jns
jnp
pop
out
cs
or
stc
shl
and
insl
movsl
je
lret
add
into
cmp
gs
dec
adc
sar
jo
jmp
pop
mov
movsl
inc
fstpt
fsubl
int3
loope
fwait
xor
inc
ds
test
stc
adcl
or
out
sti
push
das
andb
leave
subl
int
cli
adc
loop
call
es
dec
jnp
outsb
mov
data16
nop
pop
cltd
mov
and
nop
inc
sub
aaa
lea
cmp
mov
in
shlb
mov
sub
andb
lret
sti
or
lahf
mov
adc
mov
push
pop
mov
add
cmp
jne
es
int3
or
sbb
dec
push
dec
loopne
mov
test
jbe
sbb
mov
cltd
data16
lcall
xchg
loope
adc
pop
idivl
loope
aaa
fwait
stc
and
mov
and
ja
outsb
xbegin
jbe
daa
push
mov
loope
xchg
loopne
push
daa
test
xor
rcr
shrb
or
fadds
dec
dec
mov
push
pop
jnp
mov
addl
mov
mov
cmp
or
les
adc
adc
stos
cmp
or
mov
repz
pop
dec
cmp
add
xchg
push
push
jne
stos
push
roll
adc
repz
movsl
adc
sub
rcrb
roll
and
pop
rcr
inc
xor
aas
shlb
dec
pop
js
and
out
push
leave
mov
adc
jg
daa
out
mov
mov
inc
cwtl
cs
sub
xlat
enter
outsb
dec
push
or
lahf
mov
dec
out
out
jp
sub
icebp
fnstsw
cmp
adc
lret
sahf
lods
jle
cmpsb
daa
fwait
or
sub
mov
pop
arpl
test
dec
sbb
ljmp
jp
jnp
ret
inc
inc
mov
push
sahf
fiadds
jge
mov
insb
in
pop
jmp
inc
test
mov
movsb
pop
insb
xchg
nop
mull
add
mul
outsb
es
popa
add
in
or
fists
mov
fnstcw
or
push
mov
add
mov
movsb
arpl
jo
jmp
sarl
cltd
in
push
imul
inc
lds
sti
orb
scas
xchg
popa
mov
call
sbb
adc
xchg
and
mov
push
das
dec
add
mov
imul
mov
lds
add
gs
fiaddl
jns
cmp
push
mov
push
push
cli
insl
out
jg
xor
cltd
or
inc
sbb
adc
xlat
push
in
dec
dec
sahf
push
das
push
push
cli
popa
sbb
mov
dec
cmp
repnz
mov
lods
sbb
inc
rcpps
stos
sti
pop
int
shll
adc
add
lret
cwtl
popf
jp
scas
lods
pop
xlat
and
inc
ficoms
sarb
jnp
dec
test
sub
cmp
fnsave
adcl
sub
aas
enter
push
sahf
mov
in
scas
mov
push
push
inc
mov
mov
pushf
xor
push
fwait
jae
dec
aas
dec
xchg
jne
arpl
and
hlt
stc
cmp
stos
incb
pop
cli
and
ja
jp
popf
push
jbe
insb
aad
loop
dec
mov
aas
mov
or
out
jge
xchg
mov
mov
je
xor
fxch
insl
and
dec
ret
shrl
mov
fistl
dec
cwtl
inc
dec
add
mov
and
push
inc
add
adcb
pop
lods
dec
test
or
pop
pop
aad
icebp
jmp
shrl
shll
cs
subl
sub
aam
pop
repz
mov
fcmovb
inc
pop
movsb
pop
jmp
push
add
mov
mov
inc
sub
cmp
sbb
out
cld
push
in
pop
mov
cmp
add
jecxz
iret
adc
je
xchg
adc
jae
cli
mov
mov
test
pushf
mov
sar
fisttpll
adc
pop
std
adc
inc
xchg
adc
sbb
mov
lods
stos
aas
inc
in
pop
out
iret
xor
jge
imul
out
xchg
inc
fsubs
dec
in
jae
push
add
pop
icebp
js
fcompl
lods
test
push
imul
adc
sahf
mov
and
sub
in
mov
notb
lret
das
les
cli
jecxz
add
adc
xchg
jl
pop
lret
daa
out
pop
xchg
pop
jp
fiadds
cmp
pop
add
mov
cmpsb
push
xor
add
or
out
mov
jge
test
adcl
jl
dec
lcall
into
and
and
lret
outsl
popf
mov
ja
gs
aam
or
sub
ljmp
aaa
sub
sub
push
fiaddl
incl
pop
cmp
cld
ds
cli
push
stos
aaa
loop
inc
inc
in
cmc
push
enter
mov
jle
cmpsl
add
sub
add
addb
aas
pop
call
add
add
pop
je
in
jge
xor
ljmp
loop
jmp
iret
int
xchg
das
test
xor
pop
cmp
xchg
out
ds
jge
daa
jge
popf
add
mov
jge
cmp
lods
call
orl
int3
enter
jae
inc
cmp
adc
imul
pop
pop
xor
or
mov
dec
and
lds
jno
xlat
loop
in
push
xchg
ljmp
daa
jno
sub
cmpsl
cs
adc
addr16
xor
std
lea
sbb
fs
rolb
adc
shrl
pushf
imul
in
xor
lods
imul
mov
push
rcll
push
ds
jg
repnz
mov
fwait
jno
cmpb
dec
and
pop
int
lret
sbb
mov
jecxz
pop
sbb
cmp
aam
roll
or
cltd
mov
jnp
adc
xchg
jmp
jl
jns
xchg
sahf
mov
pop
inc
and
fidivs
dec
or
das
and
pusha
inc
inc
cmp
pop
or
dec
and
jg
jno
jne
cmp
daa
xchg
fwait
mov
cmpsb
je
push
adc
or
xchg
in
xchg
fnstsw
iret
imul
lods
clc
pop
pop
and
xchg
mov
dec
scas
loope
ds
mov
push
ret
fsubs
js
cli
inc
jno
aaa
dec
daa
cltd
aaa
cmp
sub
gs
jge
xor
cmc
xlat
add
sbb
daa
xlat
push
cmp
ret
test
das
jg
shl
and
jb
insl
icebp
jo
in
adc
inc
xor
mov
push
int3
dec
das
inc
fistpl
jbe
pop
out
pop
repnz
or
out
fmulp
and
mov
push
imul
arpl
sbb
mov
jge
jmp
adc
test
dec
orb
jnp
mov
push
mov
xchg
popa
or
std
arpl
xor
xor
les
pushl
jnp
cmp
rorl
stos
sbb
mov
or
pop
aam
push
mov
pop
mov
aaa
fsubs
xorb
mov
xchg
lods
subb
loop
call
or
xchg
jl
add
mov
sbb
adc
ret
popf
jge
push
add
mov
imul
arpl
or
push
mov
cld
push
jns
out
pop
sbb
cmp
xchg
cld
and
or
movsb
int
leave
jne
cwtl
ret
aad
or
popf
pop
xor
mov
sbb
es
mov
xchg
sahf
sbb
sbb
mov
rcrb
scas
ss
and
repz
aas
sbb
das
sti
repnz
pop
loope
leave
movsb
mov
arpl
xchg
push
orb
loopne
sbb
push
fiadds
add
rol
sub
jb
or
sbb
inc
cmp
jns
lahf
clc
mov
xchg
xchg
add
or
js
add
das
sahf
pop
out
jle
or
fsubs
incl
mov
inc
leave
jmp
cmc
jl
inc
xorl
or
dec
fnstenv
inc
and
scas
fcomps
xchg
pop
sbb
jae
xor
mov
enter
mov
push
push
fistpll
lock
push
mov
xorl
stc
xor
std
shr
aam
sbb
xchg
cmpsb
subb
ljmp
jnp
orl
sahf
aaa
mov
sbb
rcl
lcall
add
popf
xchg
jae
lret
xchg
cmc
xchg
or
mov
mov
leave
fidivl
insb
jbe
lret
mov
inc
inc
mov
xor
pop
jp
jl
sti
repz
inc
jno
sbb
jno
shlb
jp
popf
popl
bnd
fisttpl
sub
jne
pop
imul
pop
mov
movsb
rclb
inc
xchg
mov
adc
sbb
cmp
mov
pop
in
cmp
push
or
or
imul
inc
cwtl
cmpsl
mov
push
jle
pop
repz
ja
clc
and
js
mov
mov
xchg
add
or
fsubl
pop
cld
or
rcll
ret
sub
cli
jle
xchg
int3
dec
mov
repnz
movsb
mov
aas
test
lea
leave
mov
loopne
rcrl
dec
lea
fadds
insb
pop
xlat
lock
xchg
std
dec
pop
popa
ljmp
call
das
xor
sub
jne
cmp
aad
sarl
adc
jnp
imul
inc
test
jl
movsb
cmp
cld
std
mov
popa
cs
popa
fwait
repz
xchg
push
ss
insl
out
pop
jnp
cmp
lret
xchg
push
js
movl
ret
popa
jg
outsb
fidivs
push
lret
dec
inc
mov
imul
lds
lods
and
push
mov
sub
fwait
sub
mov
outsl
ficoml
aad
xchg
iret
scas
adc
dec
push
inc
dec
mov
int
test
fsts
idivb
bound
imul
add
sahf
lods
jae
xchg
cmp
aas
jae
mov
dec
shlb
or
cmp
scas
scas
adc
mov
inc
push
cwtl
jae
sub
or
dec
and
stc
cmp
xchg
sbb
xor
jge
jp
insb
stos
jne
aas
iret
stc
mov
sub
lahf
mov
and
sbb
add
std
dec
daa
and
cmpsb
jle
fistpl
add
xchg
and
clc
mov
xchg
xor
adc
lods
test
decl
dec
pop
jl
mov
sahf
xchg
mov
cmpsb
push
or
and
ja
sbb
and
sub
xor
or
or
sub
js
in
pop
fsubrs
sbb
pop
inc
mov
lods
aaa
test
into
sbb
lock
fs
loop
inc
je
add
xlat
xchg
adc
jbe,pt
jne
shll
pop
jnp
cmp
pusha
sub
adc
ficompl
sbb
adc
je
int
inc
add
addr16
dec
popf
sub
inc
ret
xor
add
inc
mov
or
fimuls
adc
rcll
mov
mov
inc
bound
insb
mov
and
movl
aas
jl
sub
push
xchg
movsb
add
hlt
std
hlt
push
cmp
repz
xchg
dec
sub
xor
push
jecxz
pop
mov
outsl
pop
dec
movzwl
push
jo
pop
je
jb
daa
or
cmpl
mov
mov
dec
add
int
clc
xchg
movsl
sbb
xor
lret
rclb
repz
jg
jbe
in
dec
cmp
shlb
sub
mov
imul
gs
orb
ds
lea
or
xchg
divb
cmpsb
pop
or
outsb
push
push
adc
pop
mov
mov
inc
dec
cmp
loop
push
mov
enter
je
popa
mov
xor
push
adc
mov
sbb
fadds
jno
mov
insb
pop
dec
ja
sbb
xor
outsb
mov
insl
fidivrl
push
imul
ja
adc
dec
imul
testb
loopne
pop
cwtl
sbb
xchg
int
and
dec
sub
jmp
or
test
mov
sbb
arpl
pop
jmp
inc
jno
xor
mov
movsl
jae
sub
bound
and
out
aad
out
ljmp
fwait
jmp
lcallw
push
jge
sub
pop
push
adc
rolb
xor
cmpxchg
pop
ret
sbb
sub
jle
in
mov
iret
cltd
das
add
push
push
mov
and
push
push
mov
ret
and
and
pusha
lea
out
inc
xchg
movaps
mov
mov
test
push
add
sub
mov
dec
pusha
call
xchg
cwtl
mov
xchg
rep
and
test
inc
mov
scas
xlat
mov
inc
test
lret
rcr
mov
sahf
stc
dec
push
and
pop
movsl
push
or
lods
add
fmuls
xchg
ja
inc
shrb
addb
push
test
adc
push
jb
inc
shr
inc
adc
popf
jno
fisubrs
orb
in
add
mov
ljmp
dec
push
push
pop
roll
faddl
arpl
je
push
jle
push
or
fadd
mov
fadds
nop
mov
mov
lcall
mov
mov
jns
xchg
cld
in
je
pop
outsb
dec
imul
fwait
movsl
and
push
shll
loope
aas
loop
insb
out
cli
add
jo
rorb
inc
xchg
pop
mov
fbld
cmp
dec
dec
popf
jg
imul
push
xor
jo
pop
fdivr
dec
jmp
push
insl
add
xchg
sti
sti
pushf
cltd
lcall
imul
xchg
sub
cwtl
cmpsb
das
imul
mov
lock
dec
mov
in
xorl
lock
dec
pop
test
xchg
xor
adc
inc
or
sbb
aas
jmp
push
in
mov
inc
aas
dec
cmp
mov
jae
nop
sub
dec
sbb
je
and
hlt
xchg
fstl
clc
mov
dec
push
add
push
pop
mov
dec
sbb
add
sbbl
cltd
mov
pusha
rcrl
test
imul
das
push
sbb
sub
les
imul
cmp
fidivrs
jmp
mov
mov
cmpsl
push
jo
sbb
push
dec
lea
insb
lcall
pop
lods
xchg
cmp
mov
jg
jb
arpl
and
inc
out
call
cltd
ret
imul
jl
mov
fidivs
out
addr16
out
ud1
outsl
btr
fincstp
cvtpi2ps
or
ljmp
fs
adc
addr16
cmp
mov
lods
adc
pusha
adcl
xchg
rcll
push
dec
mov
xor
adc
int3
ficoms
ljmp
jmp
and
loop
lret
pop
push
mov
push
fisubrl
and
sub
shrl
sub
enter
sbb
inc
pop
dec
jp
xchg
sub
push
lds
jae
pushf
xorb
push
jp
aaa
lret
lahf
push
outsl
pop
mov
xchg
cltd
ficompl
fldcw
cmpsb
dec
mov
push
mov
sahf
sbbl
xor
outsl
pusha
mov
nop
lret
mov
cmc
cltd
int
xchg
sahf
pusha
js
jae
movsb
nop
fsubr
jge
sti
xchg
xchg
mov
jns
fldt
inc
jg
mov
cmpb
or
sub
and
incl
inc
test
outsl
in
psubsb
pop
sub
test
xlat
mov
xchg
dec
es
xchg
rcll
test
inc
mov
fisubrs
xchg
shrl
cmpl
popf
mov
stos
push
je
cmp
xor
add
out
das
sub
and
dec
xor
shrb
mov
xor
xchg
dec
dec
jl
shlb
and
mov
insb
add
fs
dec
fcoml
pop
in
dec
test
cmpsl
add
outsl
sbb
fcom
push
popa
mov
in
repnz
and
out
in
test
pop
lods
mov
dec
stc
cs
gs
stos
insl
in
jecxz
imul
cltd
push
lods
pop
or
mov
inc
decb
test
xor
push
mov
cmpsl
lret
mov
mov
xchg
mov
mov
sbb
push
cltd
mov
addl
adc
roll
or
lock
inc
xchg
mov
int3
ljmp
pop
pop
nop
sbb
jmp
sub
lahf
lods
or
mov
call
jae
mov
aad
cmp
scas
and
xchg
cltd
fistpl
loopw
inc
ds
pop
pop
add
jne
pop
jbe
inc
jmp
push
ljmp
xchg
pushf
fnstenv
faddl
xlat
mov
stc
imull
test
jo
mov
test
stos
sbb
mov
daa
sbb
scas
lret
out
sti
adc
inc
and
hlt
in
cmp
push
rcll
add
jle
mov
repz
jge
sub
mov
jae
xor
mov
cltd
xor
add
test
mov
xor
addr16
jno
lret
inc
mov
gs
fdivrl
add
add
sbb
mov
adc
leave
lds
mov
pop
scas
add
clc
inc
jno
or
into
mov
sbb
adc
imul
fsubs
add
push
hlt
jmp
cmc
inc
out
mov
mov
sub
jo
dec
dec
mov
fdivp
out
ds
dec
and
nop
xor
dec
cmp
xchg
xchg
cltd
std
jno
test
movsl
les
les
adc
repnz
sub
dec
sbb
into
fisttpll
sub
fsubrs
flds
iret
xchg
mov
sti
outsb
cmp
xchg
je
or
inc
mov
out
sbb
xchg
fistl
add
inc
inc
out
add
ds
push
jns
cli
xor
add
orb
and
subl
fnsave
shlb
mov
mov
fmull
jbe
fcompl
mov
popa
sbb
sbb
inc
push
popa
iret
mov
sbb
rdpmc
or
mov
mov
sbb
push
jp
jnp
mov
popa
int3
push
flds
dec
push
ljmp
jge
pop
repnz
ret
in
idivl
fwait
cmp
inc
lock
jb
jb
fcoms
add
pusha
ret
push
sub
mov
push
dec
cmp
clc
cmovns
icebp
test
data16
dec
jb,pn
shlb
sub
inc
in
add
pop
jb
mov
lcall
outsl
mov
sti
movups
js
pop
rcl
jp
fnsave
mov
cmp
gs
ljmp
cmp
sub
jne
addr16
repnz
add
inc
call
insl
xchg
dec
adc
ss
fs
sti
je
repz
test
xorb
fcoml
pop
mull
sub
xchg
mov
clc
and
sbb
or
bound
cmc
jge
cmp
push
mov
fidivl
mov
scas
movsb
xor
pop
lret
or
dec
or
int
mov
daa
in
ret
in
cmpsb
sbb
movsl
mov
pop
adc
je
fiadds
stc
mov
call
jl
out
fwait
lods
mov
and
and
and
xchg
clc
rcrl
or
test
mov
mov
leave
popa
push
cmp
push
add
in
shrb
jae
mov
cltd
ret
rclb
lret
jbe
xor
das
testl
pop
xor
mov
adc
int3
mov
test
ret
push
ds
cmp
aas
clc
repz
int3
adc
and
mov
fwait
aas
xchg
fnsave
and
outsl
hlt
subb
out
or
test
jl
mov
inc
test
mov
dec
arpl
cmpsb
out
pop
cmpsl
sbb
push
mov
cli
std
adc
ret
pop
cltd
pop
in
adc
adcb
jp
out
inc
xchg
and
loop
mov
or
ret
aaa
xchg
cvtpi2ps
mov
sbb
push
sbb
adcb
xchg
cmp
int3
xchg
push
xchg
leave
pop
imul
push
mov
dec
push
mov
pop
ficompl
push
pusha
xor
adc
mov
xlat
and
sarl
sahf
pop
xor
outsb
xor
mov
outsb
daa
mov
fisubrl
or
test
push
shrb
mov
ret
jne
mov
mov
xor
stos
fwait
inc
adc
ret
out
test
les
sbb
fcomps
nop
and
dec
xchg
xchg
cmp
xchg
clc
adc
dec
pushf
dec
jo
inc
cmpsb
push
mov
add
sub
jecxz
fs
fnstenv
imulb
cltd
mov
outsb
mov
out
sub
or
add
imul
add
ja
mov
jl
inc
dec
mov
inc
jle
pop
aam
fdivp
popf
idivl
scas
movsl
arpl
adcb
sti
mov
dec
jne
jp
mov
aam
adc
and
dec
mov
and
jmp
adc
inc
shlb
push
dec
lds
add
sub
js
cmp
inc
sub
lret
jo
daa
lods
pusha
mov
xchg
fnsave
fcoml
jp
cmp
out
repz
mov
outsb
lahf
int
jbe
enter
adc
out
mov
stos
ret
cmpsb
adc
inc
sub
xchg
movsl
lods
xchg
add
xchg
or
mov
cmp
rorl
pop
mov
std
inc
or
cmp
adc
sbb
iret
xchg
lock
mov
mov
data16
fmull
xchg
les
and
mov
cmp
daa
xchg
fsubs
int3
insb
push
out
inc
cmc
lock
arpl
stos
sbb
sbb
dec
call
sbb
add
lods
mov
sbb
mov
scas
rcll
jge
add
mov
xor
xlat
push
and
xlat
sahf
test
mov
xor
popf
sub
push
push
mov
arpl
pop
out
sti
aaa
subb
rcr
sarl
xor
movl
sti
lret
mov
fs
pop
pop
inc
scas
mov
or
push
lea
sbb
sti
aaa
dec
pop
adc
pop
mov
pop
out
outsl
cs
xchg
sbb
stos
inc
xchg
aaa
rcll
repnz
in
add
xor
test
xlat
mov
jae
test
out
out
aaa
or
ljmp
fbld
into
pop
push
repz
lds
das
clc
test
mov
pop
jg
adc
inc
in
pop
js
xchg
loopne
push
shrl
and
inc
inc
adc
and
lret
pop
pushf
rcl
jo
lcall
mov
jle
or
movsb
xchg
movsb
ljmp
ficomps
mov
aaa
push
incl
or
icebp
cmp
sub
mov
xchg
cmp
rcr
mov
arpl
incl
dec
push
pop
fwait
mov
inc
aad
dec
pop
mov
lret
lds
iret
add
lahf
push
imul
inc
mov
push
pop
shll
inc
scas
outsl
fwait
sub
addb
pop
test
fldt
push
and
sbb
sub
mov
rol
fnstcw
arpl
and
popa
pop
pop
popf
jae
inc
leave
fcmovbe
add
add
pop
ds
stc
je
dec
xlat
rcrb
xor
dec
in
fisubs
call
or
mov
xlat
std
cmp
add
inc
lods
insl
push
es
sar
int
mov
push
and
repnz
mov
pop
fidivl
mov
xchg
idiv
add
repnz
sbb
xchg
adc
xor
sahf
mov
in
lret
or
or
mov
lret
negb
jge
std
xor
jmp
je
mov
mov
je
add
stos
adc
xchg
in
dec
mov
out
sub
test
mov
and
popa
mov
ss
add
leave
rcr
adc
iret
mov
inc
cmpsb
push
jg
fimull
or
cmp
pop
enter
cmp
or
push
in
mov
popf
imul
adc
or
es
iret
cld
cmp
test
adc
mov
dec
arpl
fcoml
xchg
lods
hlt
movsl
pop
xorl
ret
jbe
pop
mov
test
mov
or
popa
xor
add
jo
mov
inc
dec
xor
push
dec
dec
mov
fdivrs
outsl
ljmp
pusha
xchg
test
pop
dec
cltd
aas
notl
pop
in
loope
xor
lcall
std
mov
jge
pop
inc
into
cld
xor
sti
cmp
jns
sub
out
scas
mov
sahf
divl
mov
xchg
pop
or
adcl
fdivrs
test
ret
pop
leave
int
inc
fisubs
push
jl
mov
lcall
xorb
cmpsl
push
mov
je
shlb
dec
js
add
subl
pmulhw
xchg
add
pop
xchg
adc
and
mov
shll
fldt
scas
sub
xchg
push
lock
sub
pop
cmp
xchg
jmp
mov
xchg
roll
aam
push
into
or
cmp
mov
inc
mov
xchg
testb
aaa
sbb
ds
lds
xchg
mov
cmp
mov
xlat
xchg
enter
and
fisubl
cmp
cmp
mov
pop
call
fdivl
mov
mov
loopne
push
adc
ds
out
in
jecxz
xchg
jb
inc
or
mov
pop
pop
stos
clc
shl
ja
or
sbb
loopne
dec
repz
ret
int3
sbb
into
add
pusha
sub
pop
mov
xchg
mov
sbb
xchg
aad
mov
cli
dec
xchg
scas
jb
out
aad
inc
xor
enter
iret
mov
mov
scas
stos
add
pop
mov
xorl
add
aas
jecxz
out
or
push
pop
xchg
jp
rcll
pop
mov
subl
sub
and
sbb
mov
push
mov
lret
cmpsb
mov
xlat
inc
cmp
dec
outsb
xor
je
xchg
mov
shll
cmp
fnsave
movsl
sti
cld
ret
pop
push
sbb
or
cs
cmp
jmp
inc
cwtl
jg
xchg
mov
cmpl
mov
mov
cmp
mov
push
xchg
sarl
call
jmp
pop
xchg
sbb
add
adc
push
push
sti
ss
dec
cmpsb
pop
sbb
and
fs
ja
scas
push
adc
add
popa
test
lcall
pop
adc
add
mov
roll
xor
mov
jno
rcrb
call
push
fst
xor
adc
lret
test
adc
jp
xchg
outsl
cmpb
hlt
lods
adc
shrb
mov
fxch
bound
notb
out
mov
fldenv
dec
popa
pop
lret
popa
gs
inc
mov
dec
adc
leave
jp
and
push
xor
mov
cmp
sbb
pop
fdivrs
pop
cmc
adc
dec
nop
bound
mov
shll
shlb
mov
pop
mov
jbe
pushw
sbb
jecxz
mov
jge
icebp
inc
push
fcomip
ror
cmpb
inc
mov
inc
test
cmc
and
es
out
sbb
lods
pop
ret
add
xlat
push
faddp
out
fiaddl
adc
xchg
movl
dec
test
jbe
add
inc
adc
xor
mov
aam
jmp
and
inc
das
rep
inc
dec
rclb
mov
push
test
sbb
sbb
call
fdivs
aad
sbb
mov
mov
cmp
test
aas
cmc
mov
dec
cmp
jnp
jb
dec
daa
icebp
jle
and
incb
jmp
mov
and
les
out
js
add
inc
fldenv
or
mov
rcl
enter
out
cmpsl
xor
imul
and
mov
xchg
add
imul
dec
adc
pop
mov
add
inc
sub
mov
outsb
fistl
stc
arpl
clc
jb
fldenv
cmpsl
lret
or
and
xchg
gs
popf
push
sub
aaa
rcll
das
add
arpl
cltd
push
adc
mov
mov
dec
mov
xchg
inc
andb
add
stc
push
jns
add
cmc
loopne
leave
jecxz
lea
ss
jp
stos
cmp
inc
cmc
cmp
aam
test
pop
nop
pop
shlb
cmp
fcmovb
push
js
inc
aad
inc
sbb
repz
stc
lret
jo
test
pop
mov
pop
scas
mov
in
xor
hlt
test
ljmp
dec
mov
mov
int
pop
jg
mov
cli
jp
fnstenv
icebp
jbe
in
sbb
or
mov
xchg
adc
aad
aas
cmpsl
fwait
cmc
xchg
stos
xor
jno
div
or
in
shr
inc
inc
negb
jnp
in
fistl
stos
mov
mov
ljmp
push
les
test
lds
loop
push
lret
divl
in
push
rcll
push
subl
int
movsl
in
jo
mov
cmp
xchg
cwtl
push
in
pusha
pusha
movsb
movsb
adc
inc
mov
test
mov
mov
push
xchg
lea
add
fnstcw
sub
movsb
incb
mov
jle
in
in
ja
jb
aaa
fbstp
sbb
ret
rcl
pusha
lock
loope
mov
call
das
jl
add
leave
shrb
jne
push
cmc
aad
pushf
mov
mov
movhlps
fiaddl
sar
mov
sti
xchg
shll
test
les
ljmp
scas
pop
outsb
iret
cmp
pop
out
inc
inc
mov
bound
jl
insl
inc
mov
lods
hlt
mov
enter
jle
imul
add
sbb
cmpsb
jae
push
mov
xor
inc
stc
and
sub
adc
aad
or
imul
outsb
lods
call
jae
cmp
lods
lcall
lret
popa
xor
jge
push
pop
push
or
cld
fstpl
mov
dec
jnp
push
cmp
push
shll
nop
loopne
fistl
or
pushf
int3
sbb
sub
shrb
sbb
scas
xlat
test
pop
cmpsl
mov
sub
jle
or
in
cmp
stos
in
jmp
mov
mov
fcmove
push
in
fsts
pushf
fnstenv
pop
orb
add
dec
sbb
cmc
dec
ss
sub
xchg
aad
xchg
mov
int
outsb
xor
dec
mov
imul
and
sbb
test
clc
out
mov
and
push
insl
repz
mov
mov
fs
adc
ljmp
scas
mov
inc
cmp
arpl
cld
inc
cmp
daa
xor
arpl
xlat
test
xor
jne
push
push
or
push
inc
mov
add
and
mov
ret
ja
inc
lods
fldt
cmpsb
mov
jmp
rorl
mov
add
mov
sub
imul
lock
and
jl
cmc
mov
push
push
cwtl
in
mov
jmp
mov
outsl
mov
mov
insb
ljmp
fisttps
test
mov
push
out
push
sub
popa
or
inc
pop
ss
repz
mov
or
xor
sbb
xchg
rcr
out
arpl
mov
dec
xlat
xlat
unpcklps
gs
mov
shll
std
jb
sarb
repz
in
xchg
mov
xchg
push
cli
push
pop
mov
xchg
pop
xorl
aad
and
xchg
sbbb
or
outsb
xchg
xor
and
mov
push
dec
fidivs
pop
fcmovnu
repz
stos
rol
das
and
aam
xchg
aaa
lds
xor
mov
sahf
clc
or
frstor
sbb
adc
std
cltd
sub
mov
mov
ss
push
adc
mov
push
and
pop
or
int
movsb
mov
mov
in
dec
push
cmc
fsts
ss
jmp
in
sahf
stos
hlt
jp
cmp
insb
sub
or
ljmp
jns
pop
and
mov
inc
movsl
inc
imul
daa
pusha
les
jecxz
aaa
lcall
cmc
bnd
sub
fsubrs
cltd
sub
cmpsb
pop
mov
fcoml
cld
icebp
negl
push
cmp
and
add
cmc
cmpsl
fstp
add
out
push
pop
dec
jnp
pop
jne
inc
and
pop
sahf
arpl
adcl
mov
xlat
jmp
xor
mov
add
aad
adc
cmp
sbbb
gs
and
fildl
dec
dec
cmp
and
cmpsl
loop
daa
sbb
nop
push
add
fcoms
jg
or
mov
xchg
sub
mov
xchg
je
mov
jmp
icebp
pop
cmp
mov
cmc
lds
and
add
cs
or
mov
pcmpeqw
xchg
push
fcoms
cmp
adc
push
je
fnstsw
lret
sub
pop
push
movsb
jns
js
call
ljmp
test
mov
loopne
jno
fdivrs
xchg
push
mov
or
mov
jo
mov
cld
cwtl
adc
jno
sub
xor
mov
fsub
insl
jne
mov
pop
push
jge
scas
outsl
pop
push
popf
and
mov
cltd
imul
fs
jecxz
cwtl
xchg
test
rclb
inc
mov
outsl
cmc
std
jecxz
sub
mov
adc
ret
and
and
cmp
pop
es
dec
lret
cs
stos
mov
test
and
pop
pop
stos
jmp
mov
inc
hlt
imul
ja
push
or
pop
jl
bound
test
xchg
leave
fsubrs
cmp
dec
fistpll
sbb
ret
pop
das
xchg
mov
fs
orb
push
inc
mov
lcall
rorb
call
divl
xchg
cwtl
addr16
insb
xchg
leave
mov
leave
mov
jmp
mov
clc
push
ret
inc
push
cmpsb
movq
lret
or
cli
pop
and
popa
dec
or
ret
das
jns
shrb
call
lret
das
add
jge
ljmp
stos
hlt
clc
sahf
rorl
scas
or
js
lock
ljmp
mov
dec
fs
cltd
xor
xor
mov
and
clc
jg
inc
shl
shll
fidivs
movsl
into
and
movsb
mov
mov
adc
in
js
imul
cmp
mov
das
xchg
orb
sti
pushf
jmp
in
push
cmp
data16
cmp
xor
xor
gs
jle
sub
pop
add
addr16
aas
js
mov
ret
push
fidivs
std
sub
adc
movsb
addr16
inc
lea
sar
cmpsl
xchg
sub
pop
pushf
dec
sub
scas
ret
mov
lods
xorl
add
adc
mov
jl
lret
push
sets
jbe
and
loope
mov
adc
cs
xchg
fsubr
cmpb
xchg
lahf
mov
and
mov
xor
sub
cli
inc
mov
andb
pop
imul
mov
cwtl
pop
dec
leave
or
movsb
in
lcall
cli
jl
mov
adc
add
cmp
pop
xor
add
sbb
lcall
scas
jl
arpl
or
push
jmp
xor
mov
mov
cmp
cwtl
sbb
in
mov
fxch
sub
mov
sbbb
mov
rolb
lock
fs
push
decl
and
mov
stos
or
out
and
jmp
stos
ja
and
adc
addr16
insb
fsubrl
push
aad
mov
pop
jp
mov
std
adc
fildll
adc
xchg
js
popa
push
inc
pushf
out
adc
or
test
add
pop
fnsave
fists
rcll
adc
push
push
rorb
jp
push
iret
xor
and
cmc
cmc
mov
cmp
pop
in
push
xor
mov
outsb
or
xchg
ja
xor
out
xor
xchg
push
ja
mov
rolb
data16
cmovnp
sahf
push
xchg
dec
int
daa
mov
aas
cltd
sub
push
loop
ret
xor
jmp
int3
or
cmp
sbb
dec
in
pop
lret
mov
test
mov
rcl
add
pop
or
xchg
stos
jnp
scas
cwtl
aad
sahf
cmp
lretw
mov
pop
scas
xchg
nop
dec
dec
lahf
rclb
push
jne
inc
imul
xchg
xor
aas
sbb
push
xor
not
stos
and
lret
sbb
mov
loopne
test
es
xor
fstpl
stos
push
mov
sub
cld
inc
out
xor
xor
int
xchg
out
jb,pt
dec
cmpsl
cmp
sarl
jp
lods
test
add
xchg
dec
mov
sub
stos
xlat
test
add
sub
rcrb
popf
and
pop
fidivrl
mov
mov
mov
enter
pop
pop
mov
jb
pop
outsb
dec
fwait
mov
aam
imul
add
jbe
stc
adc
je
inc
fmuls
inc
cmp
xor
dec
mov
iret
and
adc
jle
cmc
sbb
inc
jo
and
in
sub
lods
int3
mov
stc
mov
cmp
mov
cld
inc
aaa
xor
mov
in
jl
mov
jl
cmp
adc
cmp
add
jae
adc
push
mov
dec
xchg
jnp
xchg
movsb
adc
mov
xor
ret
push
sbb
push
int
daa
popa
mov
xchg
clc
adc
push
dec
insb
pop
dec
gs
cmp
dec
repnz
jns
popa
push
outsb
sub
and
imul
xchg
mov
rol
lods
mov
xor
decl
jmp
mov
xchg
test
mov
adc
jo
clc
sbb
and
jns
pop
into
scas
mov
sub
mov
in
sbb
hlt
push
sarb
daa
jo
mov
jmp
leave
mov
movsl
loopne
mov
xchg
cmc
jg
icebp
push
clc
cli
inc
xor
lret
mov
es
fst
dec
subl
xchg
push
hlt
jbe
imul
in
pop
sub
sbb
movsb
into
and
imul
imul
imul
pop
xchg
fiaddl
cmpsb
call
push
lods
std
mov
std
inc
mov
shrl
fisttpl
jge
mov
push
mov
rcrb
xchg
xor
xor
fisttpl
jl
fsub
dec
push
xchg
ss
xchg
ljmp
mov
xor
mov
dec
and
aaa
xchg
mov
movsl
sbb
mov
filds
or
mov
repz
test
ljmp
addl
cltd
push
movsb
stc
push
movsl
orl
cmp
lahf
gs
mov
push
pop
xorl
enter
or
mov
cmp
je
pop
mov
test
daa
out
out
sbbl
test
pop
jl
in
xchg
sub
imull
sbb
mov
jl
movsb
xor
sub
cld
cltd
in
mov
jns
cmpsl
insl
inc
xchg
test
ja
xor
sbbl
test
mov
scas
aad
xchg
cmpsb
icebp
sbb
jns
lods
cmp
jmp
out
stos
inc
jecxz
add
daa
jmp
aas
repnz
cmp
push
pop
sub
sub
or
scas
mov
stc
mov
addl
lret
sbb
pop
in
les
stos
aad
sbb
mov
xchg
jp
nop
mov
push
xlat
in
movsb
mov
andb
es
mov
mov
ljmp
push
mov
orl
pop
mov
cltd
pop
movsl
mov
das
or
fistps
sub
mov
adc
pop
fnstenv
out
mov
mov
push
je
in
pop
xchg
pextrw
push
mov
out
jb
das
cmp
pop
filds
test
mov
test
aad
aad
mov
xchg
daa
and
in
imul
mov
cmpsb
fcoml
jmp
ficoml
in
loope
or
pop
dec
js
xchg
data16
and
lret
xchg
stos
inc
fsubl
ljmp
push
repz
test
mov
cmovp
push
dec
jmp
hlt
das
sbb
fimuls
lret
add
jecxz
add
repnz
inc
repnz
sbb
imul
pop
push
push
pop
shl
mov
shll
je
pop
das
icebp
mov
addr16
rcrb
mov
sub
jl
fstl
ret
inc
push
cmp
loop
icebp
xchg
jne
sub
cli
add
rcrl
push
repz
outsb
mov
xchg
jo
mov
mov
pop
ds
aad
test
fwait
jae
jge
xor
in
dec
shl
loopne
jg
xchg
negl
sub
dec
addr16
and
push
push
mov
in
test
lock
add
inc
shll
bound
mov
out
pop
lods
repnz
popa
sbb
rcl
cld
jge
xor
lcall
jno
mov
into
mov
xor
xchg
aad
aaa
jg
inc
inc
sarb
imul
out
les
out
sti
cwtl
into
push
xlat
sub
pushf
out
mov
or
scas
or
push
inc
das
gs
lcall
icebp
popa
xor
popa
das
pop
loope
mov
jb
inc
cwtl
rcll
out
test
enter
cld
mov
ret
pusha
pop
pop
rolb
addl
push
repnz
scas
inc
xchg
sbb
fisttps
inc
mov
les
push
pop
jno
sbb
xchg
or
std
mov
xor
xchg
mov
mov
in
push
lea
je
in
push
xlat
and
add
xchg
cmp
jmp
mov
mov
sub
repnz
jo
leave
lds
ficomps
xor
das
fidivrs
add
movsl
outsb
divb
repnz
popa
cmp
sbb
imul
mov
sar
sub
lret
dec
test
and
test
jae
dec
mulps
test
sub
mov
mov
xor
stos
pop
jecxz
pop
xchg
sub
mov
repz
mov
mov
or
pop
imul
aam
sbb
sub
leave
stos
xor
ss
lret
ss
add
es
inc
aas
jmp
divb
stc
jb
pop
pop
out
jl
sti
sbb
xchg
arpl
leave
inc
adc
xor
inc
jecxz
xor
cmp
pop
inc
ss
jno
es
jns
mov
orl
sub
sbb
mov
cmp
inc
cmpsl
pop
jecxz
xlat
add
rcll
clc
cld
mov
stos
add
mov
inc
xor
push
call
imul
mov
cmpsb
pop
lods
fsubr
push
or
out
out
divb
xchg
insb
ja
xchg
cmc
mov
fdivr
pushf
sub
std
xchg
fidivrs
push
insl
mov
jle,pt
cld
sahf
mov
test
push
das
adc
in
outsl
shrl
inc
shll
jnp
adc
mov
lods
xchg
jb
sub
jecxz
cltd
push
loopne
gs
jge
sub
push
push
mov
xchg
xchg
dec
in
popa
scas
sbb
dec
je
int
int
cs
sbb
je
pop
bound
xor
ljmp
inc
cmpsl
psubusb
cmpsl
jp
fcompl
dec
or
lods
pop
sbb
lret
push
testb
test
jle
repz
in
xchg
icebp
fcompl
mov
arpl
mov
popa
pop
negb
stos
mov
cltd
repz
ficomps
lods
push
loopne
mov
ljmp
pop
or
scas
adc
popf
mov
sbb
jl
icebp
cmc
pop
xor
faddl
lcall
pop
cmp
ja
sub
call
hlt
addb
sbb
xor
xchg
xchg
xor
add
ret
adc
sahf
pop
add
xchg
add
cwtl
and
psubusb
xor
mov
jo
int
pop
fs
mov
fisubl
hlt
imul
mov
aaa
das
cwtl
push
clc
xchg
jge
mov
adc
and
mov
or
aas
inc
xchg
clc
pop
mov
aaa
test
add
insl
adc
enter
xor
cmp
push
cmpsb
jbe
cmc
in
xchg
loop
pop
and
flds
aaa
scas
es
jmp
js
mov
sets
inc
mov
into
push
loopne
adcl
mov
push
add
imul
mov
out
push
int3
xchg
jae
test
dec
arpl
pop
and
movsb
stos
out
lcall
das
xchg
cmp
ds
inc
add
out
sub
ss
sbb
test
xor
js
fwait
pop
xchg
loope
jae
jae
mov
test
cmpsl
add
cltd
test
mov
jo
jno
jmp
and
fimuls
mov
xchg
repz
lret
sti
movsb
inc
fldl2e
sub
push
dec
inc
fdivr
filds
push
push
notb
mov
daa
jle
mov
imulb
inc
repz
cmp
adc
mov
and
jl
test
in
jae
shlb
je
sbb
sahf
jo
lods
or
mov
fwait
dec
push
out
pop
cltd
loope
hlt
lret
xor
xor
fistps
insb
dec
subb
out
adc
es
cs
dec
shlb
das
jle
push
mov
clc
mov
dec
out
sbb
push
cmp
out
shlb
xchg
ds
imull
int3
test
ljmp
ret
push
xchg
sub
mov
js
insl
jp
jecxz
icebp
out
scas
mov
push
sub
in
and
idiv
jl
aaa
fdivrs
mov
loope
mov
mov
call
push
and
stc
jb
adc
out
dec
mov
jne
jecxz
mov
add
lcall
inc
outsb
and
xor
idivb
push
sub
jo
mov
sbb
addb
jns
jb
sbb
mov
out
fisubrl
ss
shrb
add
jne
das
and
daa
icebp
popf
ds
mov
jns
lods
jecxz
pop
aaa
pop
jmp
lea
addr16
xor
xor
jge
pop
xchg
imul
imul
int3
dec
rorb
sub
xchg
mov
mov
push
dec
rolb
fcmovbe
dec
je
adc
dec
int
outsl
gs
or
pop
jecxz
aad
daa
xchg
mov
enter
cmp
insb
jno
mov
cmp
adc
push
xchg
int3
inc
out
xor
out
jno
aas
push
or
mov
inc
dec
popa
test
add
jle
sub
mov
jge
orl
lea
sbb
xor
outsb
mov
lds
push
imul
les
clc
and
cmpsl
dec
les
mov
dec
jl
mov
sbb
cmp
adc
test
aas
adc
out
aam
rcll
push
push
push
xchg
stos
or
xor
mov
push
test
loop
jne
mov
outsl
xchg
ss
mov
ljmp
adc
cltd
sbb
sahf
sub
push
repz
lcall
stc
push
push
jmp
fldt
je
xchg
sbb
inc
cmp
xchg
fcoms
inc
xchg
fistps
jb
push
std
outsl
push
push
stc
loopne
jo
adc
mov
xor
sbb
mov
out
gs
int
add
mov
lea
fs
push
test
jmp
pop
jg
outsl
sbb
data16
testl
pop
pop
into
orl
jmp
fs
lods
loope
xchg
aam
jmp
pop
out
sub
cld
dec
fstp
or
insb
mov
js
sbb
iret
mov
cs
push
stc
ljmp
js
mov
shll
icebp
loopne
aam
dec
inc
in
cwtl
shll
subb
nop
aam
or
push
jg
int
ret
sti
stos
mov
inc
loope
add
test
xchg
pushf
fcmove
jb
pop
cmp
test
sub
or
pusha
dec
adc
pop
pop
sbb
das
orb
pop
jg
fistpl
cmp
stos
in
xchg
mov
fsubrs
out
dec
in
jecxz
mov
ds
cltd
leave
and
add
mov
xlat
mov
and
ljmp
sbb
lods
sub
or
js
mov
dec
mov
and
push
mov
cmpsb
jl
mov
push
and
imul
out
and
dec
imul
enter
stos
inc
mov
add
dec
jl
jno
xchg
mov
dec
imul
or
icebp
xchg
in
mov
daa
mov
lret
movb
cld
push
mov
sub
add
inc
shlb
pusha
sub
push
lahf
dec
cmp
sarb
mov
daa
daa
adc
fiaddl
lds
cld
adc
sahf
pop
stos
inc
xchg
out
cmp
enter
xchg
arpl
andl
mov
aad
mov
fdivrs
mov
movsb
sub
sbb
xor
fwait
inc
or
lds
push
sub
daa
test
xor
insb
lock
out
mov
mov
shrb
mov
jle
mov
pop
xor
in
loopne
out
push
dec
std
ds
xchg
and
pop
add
pop
inc
xchg
mov
add
adc
fiaddl
pop
in
adc
mov
mov
mov
aaa
in
aam
jns
jnp
cmp
add
xchg
adc
or
push
outsb
inc
call
push
int3
test
dec
push
push
mov
lods
xor
adc
dec
hlt
dec
cmpsb
scas
xor
dec
ds
es
xor
int3
pop
dec
mov
sbb
xchg
fldenv
jne
xchg
lahf
pop
sahf
inc
or
push
add
jle
imul
add
sbb
jmp
pop
mov
daa
xchg
je
mov
out
imul
and
cmp
leave
shrl
lret
mov
cwtl
fs
js
add
clc
inc
int3
pop
pop
xor
into
mov
cmp
mov
xor
mov
jecxz
dec
jge
and
imul
sbb
mov
jp
ret
xor
mov
adc
adc
loopne
sub
das
mov
sbb
sbb
sbb
sahf
sub
loop
ja
in
xor
pop
inc
adc
xlat
mov
push
sbb
movsb
mov
call
test
int
clc
sti
adc
aam
cmp
fnstenv
imul
xor
push
sub
iret
xchg
test
imul
loop
enter
push
popf
sub
inc
mov
sub
push
loop
sbb
push
stos
pop
xor
ja
aas
xlat
mov
adc
mov
sub
out
rorb
cmp
shlb
icebp
push
fldcw
lea
jmp
xchg
inc
sub
push
or
mov
sbb
inc
push
push
mov
mov
push
movsl
push
inc
xchg
cld
mov
insb
jle
or
aam
cs
ficoml
inc
popa
lcall
and
pop
ss
int3
lods
in
fcoml
pop
bound
lds
das
test
sahf
sub
cmp
imul
rcrb
xchg
adc
nop
fstpl
mul
push
and
outsl
xchg
xor
jl
rorw
addr16
out
pop
push
mov
mov
pop
mov
xchg
andl
leave
inc
adc
jns
xor
cmpsl
dec
jg
clc
mov
adc
inc
lret
xchg
xchg
xchg
push
add
int
adc
fsubl
push
insb
or
lods
jae
into
push
jle
adc
es
mov
sbb
mov
cvttps2pi
fidivrs
or
inc
out
in
mov
jns
xchg
int
sbb
mov
es
add
and
shlb
rcll
pop
es
addb
mov
mov
je
xchg
negb
cmp
inc
pushf
pop
push
pop
lret
push
pop
add
std
aaa
inc
das
std
enter
add
loope
pop
fs
cmpsb
jge
cwtl
xchg
mov
push
or
enter
inc
jbe
mov
subl
or
mov
inc
xor
shrb
mov
push
scas
pop
cltd
pop
mov
mov
cmpsl
xor
cwtl
pop
pop
inc
push
xor
mov
cmp
subl
fldt
cmpsl
cmpsl
or
cld
push
or
ss
inc
pop
push
mov
and
lds
icebp
xchg
jl
mov
jecxz
and
adc
outsb
fwait
push
in
add
sub
fisttpll
fiadds
outsl
mov
or
adc
stc
stos
js
cmp
fstpl
sbb
and
stos
int
sbb
push
addr16
in
idivl
mov
inc
test
jne
fimuls
ficoms
incb
dec
or
xchg
icebp
pop
inc
mov
mov
sbb
rclb
xchg
ljmp
mov
jecxz
and
loop
call
sbb
sbb
xchg
sbb
adc
fbld
in
dec
scas
insl
jnp
adc
imul
mov
pusha
fcoml
lock
movsb
iret
lds
sbb
les
mov
loop
ds
add
sbb
sub
arpl
cwtl
loop
flds
insb
loopne
dec
daa
add
cmc
lock
sub
jl
addl
cmc
and
int3
insb
mov
addr16
mov
mov
sub
inc
lods
lret
dec
pop
pop
lret
inc
pop
enter
fiadds
test
dec
aas
int
mov
adc
sbb
pop
hlt
add
jb
aaa
scas
mov
loopne
lahf
stos
sbb
or
dec
adc
cmp
xor
outsb
mov
xchg
push
loope
test
cmp
sub
nop
aaa
je,pn
jnp
shrb
fisubl
adc
push
or
leave
xchg
dec
repz
pop
lock
sub
mov
pop
mov
insl
push
mov
outsl
popf
sbbb
mov
add
pushf
sub
sub
push
sbb
push
sub
shll
sub
js
jle
call
sub
pop
cmp
cld
adc
insl
cmpsl
jmp
cld
jle
cmp
or
push
push
push
clc
mov
adc
in
and
sbb
loope
rclb
loope
xchg
movsl
loope
in
loope
dec
das
enter
daa
loopne
xor
mov
dec
jbe
jns
xor
jbe
inc
lds
nop
mov
jg
les
stos
movsb
cmp
xchg
cltd
lahf
or
mov
lock
dec
cwtl
add
cld
dec
dec
inc
stos
test
into
mov
out
xchg
test
insl
push
arpl
mov
das
xchg
adc
loopne
add
shrl
mov
dec
cs
xorb
int3
push
jo
pushf
dec
pop
fs
cmp
pop
stos
add
adc
loop
into
or
and
jnp
fnstsw
inc
mov
xchg
pop
arpl
xchg
scas
sbb
mov
out
popf
out
sub
leave
pop
mov
stos
push
sbbb
mov
fstpt
mov
xchg
faddl
rcl
adc
mov
mov
add
add
sub
bound
mov
dec
or
xor
mov
test
xlat
lcall
or
or
mov
imul
ljmp
mov
jno
popf
pusha
pushf
xchg
jno
xor
xchg
leave
call
cmp
add
sbb
into
cli
push
xorl
test
in
stos
dec
imul
push
and
xchg
pop
sbb
inc
testl
mov
into
push
xchg
sbb
jmp
mov
out
mov
iret
mov
cmp
addr16
dec
mov
fnsave
and
lcall
push
je
pop
fs
mov
rcr
pop
or
gs
push
imull
pop
pop
sub
enter
or
stos
out
or
ss
jne
cmpsb
xchg
leave
sbb
popf
aas
add
push
fldpi
fadd
das
jle
outsb
fiadds
push
dec
test
loop
pop
sbb
inc
pop
pushf
daa
xlat
pop
mov
imul
rorl
data16
call
mov
popf
sub
dec
addr16
pop
cwtl
scas
int
xor
lcall
stc
les
pop
xor
add
xor
add
fisubrl
dec
sbb
es
ljmp
cli
scas
xor
push
xorl
mov
cmp
ret
and
sub
icebp
sti
testb
mov
stos
cmp
es
icebp
jo
fistl
gs
ja
and
cltd
imul
push
dec
scas
cmp
push
mov
sub
push
ds
adc
add
out
jnp
jnp
jle
sbb
pop
push
sbb
sub
mov
push
stos
sbb
repnz
insl
aad
xlat
mov
nop
push
and
pop
repz
fstpl
bound
out
mov
insl
inc
data16
lds
jae
mov
gs
js
leave
mov
adc
jne
vpunpcklwd
dec
cmp
repz
add
add
push
xor
sbb
pusha
out
inc
insb
jnp
dec
leave
pusha
in
ja
mov
xlat
loop
cli
mov
mov
jecxz
mov
push
in
mov
xchg
psubb
cmpsb
xchg
push
arpl
mov
sub
adc
sbb
int3
dec
xor
push
add
inc
outsl
dec
aaa
adc
fisubl
movsl
rcll
repz
in
iret
les
and
fnstcw
pop
fisttpl
inc
fadd
jb
push
ljmp
cmpsl
aad
ret
xchg
cmpxchg
insl
sub
sub
jp
cmp
call
mov
daa
pop
test
iret
bound
dec
mov
ljmp
cmc
mov
and
int
jne
ds
cmp
push
data16
lret
adc
xchg
clc
lret
add
xor
and
repz
cmpsl
xor
jne
lret
cld
aaa
inc
loope
or
popf
rolb
cli
jmp
test
cli
bound
xor
dec
adc
xor
adc
push
or
imul
dec
leave
inc
test
pshufw
mov
push
std
push
insl
xchg
outsb
sbb
xor
divps
bswap
fildl
cwtl
or
xchg
xorb
mov
rclb
or
dec
push
push
xchg
dec
add
stos
sub
jns
mov
add
cmp
cld
pop
imul
dec
adc
inc
out
je
jge
pop
xor
add
gs
lret
in
or
jnp
fdivr
pusha
mov
jle
in
bound
ds
fdivr
mov
fldt
jl
es
mov
mov
and
jl
lret
push
xchg
mov
ret
pop
adc
mov
cmpsb
mov
fs
sbb
mov
filds
jl
pop
out
inc
pop
xor
pop
mov
fs
and
mov
ja
inc
add
dec
ret
push
jge
loop
aam
mov
push
sbb
xchg
aam
push
daa
pop
jb
pusha
or
mov
inc
mov
mov
xor
test
jecxz
sbb
push
jno
std
movsl
jmp
fs
enter
call
push
xor
mov
or
sbbl
jmp
out
xchg
sbb
inc
or
sub
in
ret
popa
xor
out
fiaddl
fs
mov
adc
into
insb
xor
add
mov
push
cwtl
hlt
daa
push
xor
sub
aam
mov
pop
mov
mov
add
iret
dec
fcoms
and
andb
gs
sti
cmpsl
popf
and
sub
lea
cmpsb
stc
mov
ljmp
repz
mov
mov
mov
bound
aas
push
push
lock
ret
mov
sbb
fldl
jl
imul
add
xchg
jae
das
gs
dec
and
nop
mov
scas
lea
test
in
fdivs
sbbl
and
pushf
push
out
mov
ja
pop
push
mov
xor
inc
jmp
and
adc
push
add
or
roll
imul
and
mov
adc
push
cmpsl
ds
push
fsubrs
sub
in
nop
loopne
pop
scas
imul
outsb
jl
push
adc
xchg
cmp
mov
orl
ds
or
cmp
xor
pop
add
movl
out
cmp
and
ss
push
and
and
in
dec
dec
and
push
test
mov
cmp
test
shll
test
sbb
xor
fistpl
ds
add
or
mov
test
or
dec
ja
aam
jae
dec
sbb
out
cmp
mov
pop
push
push
jno
and
jl
xchg
fisubs
push
inc
pop
ja
mov
push
into
xchg
mov
shll
dec
imul
enter
icebp
sbb
jns
cmp
std
mov
add
push
push
mov
xchg
inc
les
jle
fcompl
aam
arpl
push
xor
pop
clc
outsb
hlt
fstpl
adc
mov
pop
jne
pop
push
cmc
adc
sub
push
popa
and
xchg
cmp
add
add
insb
sub
jl
lods
pop
or
sti
push
stos
pop
pushf
xor
arpl
add
fwait
push
fsts
divb
jnp
jnp
mov
add
cli
loope
xchg
jno
mov
lea
adcb
push
push
mov
mov
mov
rcll
and
shlb
mov
xchg
xor
popa
xorl
and
and
cli
dec
fldl
sti
fs
sub
fcompl
dec
xchg
enter
test
adc
dec
pop
cli
mov
pop
insb
femms
adc
jb
test
jae
pop
xchg
adc
int3
add
push
movsb
in
push
pop
mov
add
jmp
aaa
clc
test
jmp
or
xor
mov
loop
xor
sahf
loop
repz
js
into
subb
xchg
hlt
add
adc
ss
jg
fsubs
sub
outsb
jge
and
jl
aaa
jecxz
cli
loop
push
cmp
call
xchg
idiv
sbb
repnz
pop
push
mov
jno
call
scas
and
sarl
push
add
jle
sahf
pop
ljmp
jbe
jp
or
sarb
mov
fdivrl
mov
scas
stos
pop
push
mov
enter
adc
icebp
stos
mov
and
ljmp
repnz
rorb
aam
mov
lret
push
das
lret
pop
and
cmp
xchg
je
fidivrl
cmpb
ss
push
sbb
or
lret
or
mov
out
out
add
push
pop
add
mov
dec
inc
gs
enter
popf
or
sti
sbb
mov
mov
loop
je
sub
mov
xchg
mov
jne
mov
enter
xor
outsl
mov
mov
cmpsl
push
push
jnp
and
jp
xlat
push
xchg
xchg
jne
xchg
loopne
inc
in
jl
jl
cmpsl
xchg
push
lods
mov
lret
mov
xor
xchg
mov
mov
jo
mov
cli
iret
icebp
test
mov
mov
push
nop
jno
and
popf
push
jle
cli
fildll
inc
or
pop
add
shrl
xor
jne
jecxz
adc
loop
lods
mov
adc
push
addb
test
out
fldl
stc
divl
insb
dec
and
push
xor
addl
mov
rorl
pop
jnp
mov
arpl
mov
dec
jne
hlt
inc
inc
mov
lcall
dec
roll
sbb
jno
push
outsb
dec
sub
mov
mov
xor
ror
mov
xchg
clc
jnp
mov
cmc
ja
sbb
and
xlat
mov
and
stos
and
ret
lret
xlat
aas
dec
cmp
mov
insl
sbb
push
mov
rcr
fbld
jge
outsb
sub
movsb
das
mov
repnz
or
mov
fnstsw
xchg
outsb
addb
ret
lds
push
cmp
lret
fadds
jp
fnsave
sub
mov
adc
lcall
incl
leave
out
outsl
and
orl
test
push
sub
bound
push
aas
dec
and
mov
sub
jmp
ret
imul
mov
xchg
inc
sbb
mov
inc
sbb
rcrl
in
and
fucomi
stc
test
loop
adc
dec
pop
pop
pop
neg
cs
and
jns
jbe
or
popa
inc
mov
inc
push
push
jnp
jbe
push
test
insl
mov
jecxz
and
stc
sbb
add
mov
xchg
cld
loope
jne
dec
inc
add
cltd
sub
cli
daa
or
cli
sub
lret
adc
data16
and
and
and
push
paddw
cmpsl
add
or
mov
push
out
mov
int3
mov
pop
pop
mov
loopne
cmovg
adc
fdivrs
test
xchg
mov
mov
lret
popf
lods
inc
into
sbb
scas
add
scas
arpl
inc
cltd
xchg
mov
cmp
movsb
dec
mov
jg
jb
hlt
xchg
ds
cmpsb
mov
rol
adc
adc
inc
flds
pop
sub
push
cmp
lods
loopne
in
sbb
mov
mov
lods
xchg
lods
enter
jbe
jbe
push
stos
sub
and
mov
popa
scas
idivb
out
ret
aas
mov
and
cmp
std
call
xchg
pop
dec
rcl
jns
mov
stos
and
pop
icebp
repnz
and
xchg
cli
nop
pop
cltd
mov
ret
and
jge
push
dec
sub
frstor
sub
jecxz
add
inc
sbb
adc
push
scas
adc
xchg
mov
jno
dec
push
js
add
in
jo
mov
sbb
jl
test
pop
cmpsl
clc
lcall
lods
lahf
push
fwait
ret
mov
or
test
loopne
lret
xchg
roll
sub
ja
popa
jb
cmp
es
push
out
loopne
push
test
mov
inc
fdivl
lds
sbb
fsubrs
out
fneni(8087
push
nop
aam
das
ud1
jno
mov
xor
in
popa
pop
outsb
mov
mov
stos
push
mov
rol
inc
bound
aam
call
cmp
push
cwtl
or
lret
shrb
xlat
mov
mov
aas
adc
add
dec
xor
imul
push
in
imul
xchg
repz
inc
je
addr16
testb
in
dec
cmc
in
iret
outsb
pop
cld
pushf
push
dec
js
fidivs
push
or
sti
ljmp
add
std
jbe
test
jmp
loope
cmpsl
lds
pop
add
sahf
insl
jno
mov
jns
pop
imul
aad
adc
orl
testb
lahf
call
sbb
sahf
dec
adc
jl
or
xor
bound
movsb
add
add
push
incl
ss
fnstenv
lds
xchg
sub
scas
mov
outsb
pop
mov
inc
in
jmp
jle
push
lret
in
inc
xor
testb
in
pushf
push
pop
xor
xchg
mov
sbb
and
or
push
cmp
sahf
nop
aad
push
sub
adc
pop
arpl
enter
sbb
in
xor
jbe
add
jnp
push
nop
xlat
mov
enter
fcomp
jecxz
pop
push
cmc
std
sub
and
pusha
mov
adc
sbbl
icebp
cwtl
imul
js
jns
cld
xchg
pop
jge
pop
or
mov
dec
mov
movsl
sbb
std
push
mov
leave
xor
nop
repz
jmp
adc
loop
jnp
xchg
repnz
loop
inc
popf
fbld
bound
scas
xor
orl
inc
call
mov
cmpsl
mov
sub
fistpl
push
pop
enter
mov
jb
call
push
xchg
sbb
mov
loope
dec
icebp
rorl
and
pusha
cmp
loop
inc
negb
jl
adc
xor
adc
xor
and
leave
inc
fsubr
mov
icebp
xor
cmp
in
ficoms
ficomps
mov
ja
pop
stos
mov
cld
into
in
and
outsl
std
mov
lods
inc
js
xor
pop
repnz
out
icebp
mov
jecxz
pop
mov
add
push
push
imul
mov
jo
cmp
pushf
ljmp
rolb
lods
cmp
arpl
jnp
into
adc
fistpll
sti
lahf
sbb
adc
sub
daa
lds
adc
inc
movsl
fcoms
jecxz
inc
std
pop
nop
fisubrs
lods
push
cmc
les
into
mov
push
sub
mov
jae
push
rcll
cmc
data16
mov
xchg
cmp
lds
out
xor
fiaddl
mov
popf
lods
movsb
insl
mov
insl
dec
add
xor
push
mov
mov
in
inc
xor
sahf
inc
or
cmp
ljmp
pop
push
cmp
dec
xchg
aaa
test
cwtl
cmpsl
push
lret
cmp
mov
lcall
iret
icebp
add
add
push
add
sub
shl
cmp
inc
and
out
imul
pop
xlat
dec
push
int
dec
xchg
test
push
mov
les
nop
scas
cmp
inc
sub
inc
pop
jne
fs
xor
fiaddl
mov
inc
inc
js
and
call
leave
and
ljmp
gs
xor
and
dec
mov
in
jge
fs
mov
cwtl
in
lcall
daa
add
das
cmpsl
ja
mov
mov
call
lock
lahf
xor
lea
push
out
fistps
insl
xchg
jp
mov
mov
cld
add
xchg
into
test
scas
cmp
jo
or
scas
out
add
mov
inc
outsl
dec
ja
movsl
test
lds
in
add
test
push
or
dec
mov
xor
xor
pop
jp
pop
push
pop
sub
and
popf
or
xchg
ror
sbb
mov
ljmp
mov
push
mov
iret
test
ret
dec
subl
in
daa
ds
dec
fcmovnu
sub
xchg
xor
adc
fstl
jmp
or
fs
fwait
or
fistps
cpuid
scas
dec
pop
dec
rolb
xor
cwtl
mov
pushl
push
inc
xchg
xor
dec
mov
jmp
inc
pop
leave
xor
sub
inc
adc
xor
push
mov
hlt
aad
mov
xchg
jle
xchg
imul
rolb
loop
cmp
not
jnp
shll
or
adc
inc
add
movsl
mov
ficoml
jo
sbb
loope
mov
push
mov
jecxz
aaa
fbstp
in
pop
xchg
xchg
lds
jmp
insb
ja
mov
repnz
aam
xchg
lods
es
mov
sbb
sub
push
mov
sbb
pusha
sub
jo
dec
inc
mov
pop
inc
lds
add
push
outsb
jecxz
pop
xor
mov
inc
mov
and
pushf
adc
cmpsl
rcll
mov
mov
xlat
push
inc
dec
negb
in
ja
mov
xchg
sahf
push
add
inc
rolw
push
jmp
imulb
mov
xor
mov
cld
int
je
xor
and
sub
xor
cmp
mov
xchg
out
idivb
iret
sub
ret
xchg
pushf
lret
hlt
xor
push
dec
pop
mov
fidivl
test
inc
repnz
repz
dec
mov
sbb
aad
mov
xor
scas
fcomi
rcrl
int
pop
add
lahf
push
in
sahf
je,pn
sbb
imul
into
fprem
mov
in
divb
sbb
ds
push
jo
cmpsb
cld
clc
or
test
xor
adc
dec
shl
adc
pop
jns
sub
mov
loop
ljmp
aas
xlat
xchg
iret
fstpl
xor
int3
addb
dec
test
pop
movsl
mov
popa
cmp
ljmp
popf
xchg
fwait
pop
mov
aad
mov
cmpb
jb
sub
scas
call
pop
in
repz
flds
sub
out
jbe
cmp
mov
mov
movsl
call
adc
jne
les
pop
cmp
ret
movsb
mov
xchg
push
lea
add
jmp
xchg
push
movsb
add
psllw
pop
ss
cwtl
std
push
mov
aaa
mov
test
rcrl
fs
adc
imull
and
xchg
mov
test
mov
inc
xchg
pop
fadd
add
adc
mov
push
stos
enter
pop
xor
bnd
movsb
mov
mov
jge
in
test
jmp
xor
outsl
mov
outsl
aaa
pop
mov
aas
mov
adc
add
xchg
dec
imul
xchg
je
lock
rcrb
jg
into
into
insb
add
shll
popa
js
sti
or
lods
jmp
adc
sbb
or
cltd
out
add
cli
xor
fcomps
lock
xchg
dec
jnp
jl
lods
sub
stc
pop
ss
mov
pop
sbb
xor
mov
inc
cmpsl
lods
insl
mov
inc
add
fsubl
sbb
and
push
mov
mov
add
rclb
dec
dec
outsl
pop
add
cmp
push
add
mov
stos
test
and
lret
cwtl
pop
xorl
cmc
or
outsl
jg
mov
rcrl
dec
addr16
inc
in
xorb
jecxz
push
or
xor
xlat
pop
jb
inc
movsl
push
mov
mov
cltd
jno
dec
mov
sbb
fucom
add
jns
adc
vcmpss
cmpsb
xor
lret
and
pushf
and
repz
fisubrl
pop
push
andl
std
aaa
mov
push
fdivr
cmp
cmpsl
jne
mov
jns
in
xor
fs
xchg
andl
mov
xchg
and
scas
push
add
and
fwait
inc
add
mov
push
jmp
push
pop
sub
sbb
mov
sbb
jns
popa
out
sbb
xchg
test
in
jmp
adc
out
lcall
js
mov
mov
stos
mov
lea
xchg
call
or
dec
push
loope
push
repz
into
sbb
lods
scas
test
or
sti
mov
dec
sub
push
frstor
mov
mov
rcr
lahf
lock
add
icebp
out
outsl
cmpsb
int3
xchg
dec
lret
in
cs
and
mov
sbb
pop
loop
rcrb
roll
pop
pop
stos
je
adc
dec
dec
lahf
repz
mov
ret
jge
les
pop
mov
jo
dec
ss
dec
ds
cmp
xchg
test
jmp
in
out
xor
insl
in
xchg
push
lahf
push
mov
hlt
inc
das
mov
out
or
aad
mov
pop
mov
push
jg
sbbb
xorl
das
pop
mov
pop
mov
xchg
or
xor
jp
xchg
xchg
lcall
cmp
stos
icebp
cmp
add
filds
popf
or
fdivrs
imul
jnp
mov
jno
mov
jecxz
es
sti
imul
daa
inc
mov
notl
das
xor
stos
pop
sbb
xchg
arpl
mull
sbb
cwtl
pop
jbe
mov
sub
test
inc
mov
pop
outsb
sub
pop
sub
jne
cli
cmpsl
jne
xlat
xor
je
or
jmp
pushw
bound
fstpt
mov
fst
mov
jp
mov
fcomps
daa
lret
sub
pop
aam
add
std
notb
scas
ror
popa
push
mov
push
inc
or
in
dec
shr
mov
cmp
jl
fwait
pop
outsl
push
sub
jg
out
and
std
push
sub
fdivrs
aaa
lcall
mov
icebp
mov
fsubrs
sub
pusha
shll
js
addr16
push
scas
dec
mov
add
push
inc
imul
jp
inc
imul
test
cltd
fwait
sbb
mov
icebp
or
int3
lea
xlat
xchg
jne
aam
mov
mov
pop
dec
cld
sbb
push
js
jno
fnstsw
push
mov
jae
rolb
pushw
jo
pop
lret
call
fwait
sbb
mov
push
mov
lods
and
inc
cmp
jbe
and
sbb
hlt
xchg
cmp
jne
jp
sbb
fwait
pusha
inc
add
add
loope
mov
jmp
xchg
hlt
sbb
sub
je
hlt
dec
adc
cmpl
jg
xor
pop
rcrb
in
jmp
pslld
mov
test
jne
lret
push
add
sub
pusha
lds
jle
ret
in
jbe
cmpsl
add
lahf
stos
adc
add
push
jb
ret
or
inc
pop
or
mov
xor
fwait
lds
fldt
stos
jmp
fisubl
pushf
out
repz
or
cmp
sar
stos
mov
push
jb
mov
mov
negb
push
ss
xor
add
ret
add
js
sbb
adc
cmp
dec
lcall
xchg
and
cmpb
fwait
into
sbb
fldenv
hlt
imul
xchg
add
call
and
in
inc
push
push
push
lock
xchg
fistpll
fistpll
enter
jp
push
pop
mov
sahf
sahf
dec
shlb
pop
movsl
outsb
es
das
cmp
sub
sti
pop
jbe
dec
aad
in
mov
cmp
in
repz
mov
bound
in
hlt
push
sbb
repnz
scas
cmp
xchg
mov
push
inc
loopne
push
cs
jno
mov
fmull
xchg
in
mov
cmpsl
outsb
enter
push
add
aaa
notl
scas
lock
pop
sub
lret
addr16
xchg
out
sbb
sub
xchg
and
and
or
sub
adc
inc
out
fildll
xlat
arpl
loopne
add
outsb
loopne
mov
sub
imul
push
xchg
mov
xchg
nop
jns
in
scas
in
or
mov
xchg
sub
xor
xchg
pop
add
xor
push
mov
pop
loopne
push
popf
pushw
jmp
and
pop
loop
lret
cs
adc
ss
adc
stc
es
aaa
or
jmp
xchg
fisubrl
fnstenv
xchg
loope
pushf
ja
adc
adc
adc
adcl
andl
ret
hlt
mov
push
mov
imul
cmp
push
mov
cli
mov
mov
les
and
lahf
adcb
loopne
mov
repnz
stos
adc
cmp
xchg
cs
int
dec
sbb
mov
xchg
cmp
dec
inc
mov
lods
xchg
nop
test
and
in
stc
adc
xor
sahf
xlat
rorl
jne
in
mov
cmpsb
cmp
xchg
push
fcmovbe
jle
aaa
cld
sub
adc
cld
fcoml
outsb
mov
mov
mov
and
arpl
xchg
rorl
pop
bound
pop
sbb
mov
mov
inc
in
ret
shlb
out
and
into
xchg
jmp
jg
lahf
and
fcmovb
stos
test
add
cmp
add
or
test
jp
std
xchg
mov
jmp
rolb
cmc
pop
mov
daa
and
stos
ficoms
push
aas
popf
mov
ss
adc
inc
mov
mov
lods
push
lods
mov
mov
out
lods
xchg
adc
xchg
das
idivb
lea
in
fsubs
das
jge
push
add
mov
jb
xchg
shlb
pop
push
and
in
fwait
push
in
mov
fldcw
adc
call
hlt
and
cmpsb
mov
adc
xchg
jns
call
dec
pusha
pop
xchg
bound
push
jge
testl
aad
stos
xchg
and
xchg
mov
or
push
push
push
dec
out
add
or
shlb
push
jbe
sub
sbb
rcrl
push
sbb
inc
cmpsl
mov
mov
mov
std
dec
imul
cltd
out
inc
or
jmp
movsl
ror
das
xchg
andb
xor
inc
sti
or
dec
enter
scas
jp
xchg
pusha
mov
fcomps
mov
nop
sahf
sbb
mov
idiv
pop
test
jno
pop
stos
jl
xor
mov
push
pop
in
fisttpl
and
fwait
jne
shl
inc
arpl
ss
gs
inc
xchg
fdivl
outsb
lahf
pop
inc
dec
inc
lock
jle
mov
mov
mov
insb
and
inc
pop
std
mov
and
mov
xchg
push
mov
imul
mov
aas
and
fwait
add
fnstsw
inc
stc
movsl
neg
sbb
pop
sarl
add
std
test
push
mov
aaa
sahf
xor
rcrb
push
adc
or
std
insl
int3
inc
pop
repnz
test
mov
mov
mov
gs
dec
pop
ret
mov
pop
dec
jge
pop
cmp
enter
fsubl
push
int3
jp
jo
jg
fwait
adc
xor
mov
mov
sbb
cmpsl
gs
jae
imul
mov
inc
mov
ficomps
shrl
pop
out
sti
pop
std
jbe
mov
cmp
sub
imul
xchg
mov
sub
sub
in
rorl
sarl
dec
mov
mov
dec
sbb
movsl
inc
xchg
movsb
mov
ss
andb
repnz
daa
jne
repz
mov
fnstenv
jecxz
repnz
adc
jae
das
mov
jnp
mov
xchg
iret
jo
out
test
arpl
mov
and
gs
xchg
adc
push
bound
sub
pop
in
xchg
mov
sub
sbb
mov
jb
xchg
dec
adc
ljmp
sti
adc
adcb
push
xorl
movsb
movsb
push
iret
mov
stos
adc
add
sbb
pop
movsb
cwtl
jmp
and
call
fistpl
les
jne
jbe
mov
mov
or
cmp
cmc
or
cmpsb
xchg
clc
cmp
mov
inc
mov
and
or
pop
or
fcomps
sbbb
add
lret
mov
pop
xchg
invd
ja
aad
jo
mov
or
outsl
fs
aaa
xchg
pop
xchg
push
ja
fists
ret
sbb
stos
jns
jmp
mov
mov
xor
pop
sbb
xor
mov
sbbb
push
dec
push
inc
mov
jle
fdivl
jnp
lods
movsl
xor
jmp
dec
movsb
xor
inc
dec
loop
cmp
sbb
int
xchg
xor
pop
add
loope
mov
pop
add
iret
cmp
sbb
xchg
lods
pushf
lahf
xchg
adc
dec
push
jle
xor
mov
fwait
rcrl
xchg
sbb
ss
and
mov
pop
rorb
xchg
imul
insl
cmc
adc
xlat
mov
mov
xor
ja
add
ret
cmp
pop
aas
lcall
dec
sbb
les
vshufps
movsl
pop
push
cmp
push
and
add
js
push
test
cmpsb
enter
mov
dec
popf
or
fcoms
data16
inc
stos
sbb
test
outsb
clc
push
xor
push
lods
jg
cmpsl
pop
jl
ljmp
data16
aad
mov
insb
and
pop
lret
sub
add
mov
pop
xlat
mov
imul
cwtl
push
mov
mov
ljmp
fwait
dec
add
repnz
mov
lds
stc
xlat
sub
push
int
rcll
pop
pop
mov
stc
insl
cltd
cwtl
sahf
mov
push
adc
into
jb
fcmovnbe
inc
and
ds
pop
cmp
cmpb
movsl
testb
dec
aad
mov
rclb
jp
push
lahf
push
int
ss
stc
xchg
fwait
loopne
mov
xchg
in
cmp
orl
pop
mov
dec
fisubl
and
push
stc
lea
mov
mov
pop
clc
mov
sar
lock
fs
adc
pop
aaa
aam
cmc
and
mov
popl
push
add
xchg
adc
pushf
out
push
insl
pop
inc
fs
sahf
fsubp
jb
mov
push
adc
push
push
sarl
sub
mov
mov
iret
lods
ret
mov
sub
imul
jp
cmp
or
in
mov
xor
arpl
push
xor
stos
lods
mov
pop
pop
paddsb
int3
mov
ss
xchg
fstps
ficomps
fimuls
imul
cmp
hlt
in
inc
push
cs
pusha
inc
mov
or
mov
inc
imull
stc
adc
lret
cs
cmp
shll
pop
stos
lret
cmpsl
cld
xchg
jno
inc
dec
or
imul
pop
jecxz
in
adc
and
insb
pop
or
mov
les
mov
cmp
rclb
or
sbbb
mov
rcr
or
jb
adcl
aaa
cmp
aad
sub
imul
mov
add
popa
sub
sub
xor
andb
rcll
mov
dec
imul
mov
push
lret
cwtl
or
jl
jmp
rorb
xchg
dec
scas
in
mov
push
jae
cwtl
jno
mov
lock
inc
or
imul
ror
out
dec
out
inc
sub
lret
xchg
sub
fisttpl
adc
fidivs
cld
fwait
in
fwait
popf
int3
pop
stc
adc
push
test
push
and
mov
in
jb
push
and
mov
lahf
sub
or
push
fwait
bound
call
imul
adc
adc
xlat
adcb
and
mov
pop
jns
xchg
inc
push
mov
enter
cmpsb
or
out
ljmp
push
pop
aaa
mov
xchg
push
fsubs
inc
jnp
and
mov
sub
mov
cld
pop
adc
mov
adc
das
xchg
aad
loop
jno
adc
cs
addl
mov
loop
cmp
sub
fs
push
push
pop
adc
shl
pop
fstpt
in
and
cmpb
xchg
leave
dec
ret
repnz
movsb
inc
scas
cmp
inc
lret
sarb
aad
div
or
sub
cmp
jnp
dec
lods
scas
in
es
adc
sbb
xchg
hlt
or
fstpl
cmp
addr16
ljmp
cmpsb
ret
dec
ret
out
jge
mov
add
push
maskmovq
negl
push
fucomip
loope
test
andb
mov
jne
push
or
leave
inc
xor
mov
cwtl
xor
aas
jle
push
cltd
push
inc
notl
cmp
lods
pop
movsl
jbe
into
aas
xchg
lds
mov
shrl
mov
int
add
mov
inc
imul
pop
add
loopne
mov
stc
mov
push
mov
ficomps
or
add
addr16
notl
mov
adc
filds
pushf
fnop
fimuls
outsb
insb
mov
nop
dec
xor
movsl
outsb
xchg
fcomps
rclb
in
or
roll
orl
jl
cmpsl
jnp
dec
fistpll
adc
lea
add
cmpsl
add
into
mov
fistpl
jbe
mov
add
rolb
sbb
pop
sbbb
ds
xor
xchg
aad
call
je
add
test
hlt
adc
popa
sti
sbb
pop
iret
shll
jg
push
subb
sbb
imul
add
sub
push
mov
testl
cmpsb
mov
pop
and
ficompl
mov
jbe
sbb
push
outsb
movsb
xchg
xor
aam
sub
mov
insb
adc
xor
xchg
xor
out
out
jp
loop
fadd
sti
fs
and
shlb
addr16
sbb
jmp
in
aad
mov
sbb
cmpsb
out
cmc
mov
inc
nop
and
add
pop
addr16
jmp
arpl
arpl
adc
mov
cmp
or
inc
scas
sub
mov
cmp
mov
adc
jecxz
or
mov
jle
inc
and
cmp
mov
ljmp
xlat
adc
sbb
sbb
fs
loope
xchg
cmp
fisubrl
mov
mov
aam
in
iret
push
sbb
jecxz
loop
aad
out
mov
add
cmp
popa
dec
xchg
insl
movsb
sbb
mov
test
add
or
add
cli
push
mov
or
orb
mov
or
test
cmp
mov
out
pop
mov
cltd
sub
das
jp
pop
fsubs
pop
or
aad
and
lahf
out
aas
pusha
inc
repz
xor
rcrb
mov
xchg
add
les
push
jae
popa
out
push
test
aad
xor
stos
cltd
enter
in
outsb
iret
adc
cmpsb
jnp,pt
repnz
icebp
nop
xchg
pushf
and
add
movsl
xchg
jae
and
xor
mov
pop
dec
dec
lods
les
mov
roll
xor
or
mov
xchg
jae
add
jnp
and
jne
sti
pusha
pop
dec
add
loopne
out
and
mov
jp
xor
pop
test
into
scas
push
into
jp
dec
ss
ja
or
xor
sub
jge
mov
pop
mov
aaa
ja
sahf
cmpsl
aaa
mov
std
shll
lods
sbb
mov
repz
xchg
sub
pusha
movsl
adcl
push
mov
sti
pop
fists
pop
loope
cli
xor
xchg
call
pop
scas
ljmp
adc
fistps
mov
mov
or
add
push
repnz
xlat
fstpt
cmp
add
in
stos
addr16
inc
inc
xorl
inc
jbe
push
mov
pop
mov
jge
pusha
call
insb
dec
fwait
es
xor
rcrl
loop
popf
inc
out
or
add
push
push
lret
xchg
inc
xor
mov
add
test
popa
mov
lcall
pop
inc
mov
repz
in
rol
jae
pop
ds
test
test
movsb
ja
dec
push
shl
sarl
mov
sti
cld
pop
and
cmpsl
inc
mov
lock
mov
fisttpll
xor
xchg
out
aaa
cmp
bound
mov
dec
mov
js
push
sbb
daa
cwtl
daa
mov
shll
jle
xchg
mov
ficoml
pop
jp
cmpsl
or
jmp
ret
jbe
mov
pop
cs
or
xchg
repz
bound
or
mov
push
test
cmc
cmp
push
mov
loop
push
rorb
push
adc
or
dec
faddl
in
mov
xor
sub
push
icebp
sti
addb
lahf
mov
enter
sbb
cmc
adc
mov
lret
scas
ret
xor
sub
cmc
adc
xor
fists
cli
xchg
and
lcall
cwtl
sar
dec
mov
imul
enter
je
lret
adc
and
jns
xchg
inc
mov
and
pop
orb
push
scas
jge
sub
mov
dec
cmp
fcom
fmull
sbb
hlt
sbb
pop
sub
and
dec
xor
jns
testl
cmp
fnstsw
sub
sub
cmp
xchg
pop
pop
imul
and
sti
cwtl
cmpsb
mov
and
xchg
insb
movsb
mull
frstor
ljmp
int3
loope
rcrb
sti
fldenv
imul
out
ds
fs
stc
xchg
stos
cs
test
xor
xor
repnz
pop
xor
dec
rcl
pop
push
fldcw
mov
popa
in
mulps
lock
clc
cltd
in
jns
gs
sub
cmpsl
dec
lret
lcall
inc
fadds
pop
xchg
in
pop
out
push
jmp
pushf
pop
ds
loope
imull
mov
shlb
sbb
mov
push
sbb
jmp
mov
iret
add
mov
sahf
clc
ret
cmp
es
mov
pop
jmp
jge
push
mov
lods
lret
stos
test
cmp
ret
inc
adc
popf
sbb
out
insl
sub
jmp
lods
pop
pusha
push
add
adc
mov
push
pop
insb
xor
mov
jge
fstps
jge
sub
and
movsb
cltd
stos
pop
inc
fistpl
in
mov
test
xor
das
inc
ficomps
popf
jmp
mov
sub
es
mov
sbb
sbb
mov
loopne
mov
and
mov
shrl
pop
xchg
bound
mov
push
push
inc
and
xchg
pop
and
mov
xor
out
adc
sub
ss
cmp
mov
cmp
insb
dec
test
or
pop
xchg
cmp
xchg
cld
add
aam
call
jp
ret
dec
sarb
mov
repz
clc
inc
adc
cmp
sahf
lds
dec
lods
neg
or
ret
jge
arpl
mov
cwtl
dec
push
int3
adc
sub
and
scas
mov
xorb
jp
cmp
imul
push
or
mov
cmc
aas
jg
cli
or
inc
or
stos
repnz
arpl
and
push
fmull
pop
and
add
cwtl
jmp
repnz
icebp
add
ss
leave
dec
test
mov
lea
iret
shlb
leave
push
pop
pop
sarb
out
ror
push
jg
ss
arpl
out
xor
mov
movsb
dec
mov
mov
outsb
adc
push
pop
mov
inc
mov
sahf
int3
pop
sub
inc
mov
aaa
lret
fldenv
je
push
je
mov
adc
adc
jge
int
dec
xchg
call
scas
out
and
and
ljmp
daa
mov
std
lock
aas
sub
aad
add
inc
imul
pop
loope
popl
cmc
pushf
mov
fidivrl
push
cmp
pop
in
mov
pushf
dec
inc
rcl
jb
sbb
rclb
je
inc
add
xor
mov
mov
lods
rclb
call
xchg
test
ds
int3
cmp
in
pop
adc
and
cltd
and
leave
or
ss
in
sub
mov
mov
js
push
push
jb
scas
enter
mov
push
imul
push
js
test
pop
lods
ret
jmp
or
mov
mov
mov
fists
out
dec
stc
mov
inc
mov
jp
aam
ja
xor
jmp
ret
ljmp
cs
cmp
mov
lcall
jo
push
stc
das
imul
aas
push
in
jno
popf
stos
bound
outsl
dec
iret
adc
jo
imul
cmc
or
add
test
in
push
mov
jae
rorl
leave
repnz
cmp
lods
popa
adc
sub
mov
dec
inc
arpl
dec
xor
outsb
hlt
cmp
mov
adc
jg
xchg
sub
rcl
pop
addr16
js
fisubl
sbb
rorb
pop
xchg
push
es
sbb
idiv
sub
add
xchg
sub
insl
mov
verw
hlt
mov
fmull
push
fwait
sbb
scas
aaa
pop
jns
pop
dec
sub
push
cmp
add
loop
jge
rol
or
scas
fstpl
mov
mov
ret
fisubl
js
call
mov
mov
jbe
test
jno
xorb
add
sub
add
push
scas
jl
push
aad
xor
out
pop
fstpt
dec
cmpsb
jb
adc
and
mov
and
aaa
int
call
add
popa
mov
int3
jp
sbb
cli
dec
call
ja
sbb
addr16
xchg
dec
cmp
and
cmp
lcall
test
push
mov
cmpsb
jb
adc
pop
or
xlat
arpl
fadd
test
mov
loopne
lods
dec
into
sbb
cld
rclb
inc
test
mov
or
rcrl
sti
shl
or
jo
decb
stos
les
adc
stos
mov
and
pop
mov
inc
cmpsb
lock
ljmp
cmp
jnp
jns
pop
dec
dec
sbb
lods
lea
in
dec
sbb
movsl
add
or
cmp
sub
loop
dec
pop
cmp
and
inc
jnp
and
jg
sarl
sub
cmp
sub
inc
sbb
lock
push
cmpsl
mov
jmp
mov
inc
sbb
push
aad
js
clc
xchg
int3
aad
lods
cmp
loop
pop
out
sbb
dec
cwtl
ljmp
add
js
icebp
nop
out
cld
repnz
loopne
pop
sbb
and
mov
fs
in
push
xchg
clc
int
iret
pop
clc
dec
dec
das
movsl
xor
int
mov
femms
dec
dec
jecxz
jns
push
push
bound
jae
aaa
rol
dec
cmp
cmp
mov
xchg
or
insb
mov
mov
cli
cmp
sbb
jge
or
mov
adc
fmull
fstl
in
sti
cmp
test
out
jg
mov
xchg
or
outsb
sahf
mov
test
inc
lret
divl
lret
mov
movsl
cmpsb
data16
test
cli
mov
xchg
or
imul
jge
cmp
mov
jne
popl
pop
addr16
push
clc
dec
leave
loop
lods
into
or
popa
mov
adc
rcll
mov
jnp
sub
inc
movsl
and
mov
mov
dec
jnp
out
fisttpl
stos
lea
dec
sbb
jne
push
or
and
sbb
popf
fstl
cmp
adc
iret
cmp
pushf
pop
mov
and
and
push
mov
jge
imul
popl
testb
jae
addr16
cli
mov
inc
testl
repz
mov
dec
fisubl
xchg
pop
lds
mov
jbe
xchg
pop
sub
add
mov
mov
pop
in
pop
mov
push
fucomi
test
mov
jle
mov
test
fsubr
dec
fldenv
mov
fcmovu
add
sbb
sbb
add
mov
pop
push
imul
es
out
mov
int3
stos
cmpsl
hlt
ja
hlt
push
mov
aam
push
push
pop
adc
xchg
xor
xor
inc
cmp
out
jae
sbb
push
stos
jmp
fwait
and
add
mov
rcll
shrl
cmp
enter
adc
jb
or
sbb
fsubrs
push
sbb
aaa
dec
int
sbb
xchg
ljmp
sub
dec
push
imul
fwait
mov
adc
pushf
adc
mov
lret
lahf
adc
mov
addr16
fildll
jp
xchg
or
repz
lods
sub
cmp
adc
out
popa
inc
call
lock
sbb
je
jne
mov
arpl
mov
ja
scas
sti
aas
lcall
adc
sbb
popf
jge
pop
jecxz
in
in
scas
pop
out
outsb
jecxz
xor
push
mov
add
or
outsb
jae
out
shlb
mov
mov
pop
scas
jnp
jb
js
fdivr
push
je
and
jmp
xchg
in
or
and
lea
aad
jno
call
stos
in
adc
bound
iret
push
xchg
lahf
lods
jmp
pusha
mov
mov
ds
cmp
movsl
pop
pushf
mov
fists
mov
mov
sarl
andb
mov
sbb
mov
inc
xor
mov
xchg
or
stc
mov
popa
inc
dec
loop
jbe
pop
push
jae
push
lods
lcall
jae
ljmp
xor
inc
dec
jecxz
jmp
xor
int3
mov
jb
mov
xorl
movsb
push
stos
mov
lds
xchg
test
push
lods
jne
push
xor
jmp
shrb
jo
xchg
stos
adc
pop
and
adc
pop
xchg
xlat
mov
call
push
xchg
pusha
add
aas
adc
xor
mov
test
dec
enter
jmp
rcrl
or
inc
jo
into
adc
sahf
cmp
dec
or
and
bound
sti
lods
sbb
dec
and
out
xor
pop
ljmp
push
pop
pusha
in
jmp
mov
addr16
or
loopne
in
pop
mov
lret
jns
orb
arpl
scas
mov
xchg
xchg
cmp
adcl
cmp
xchg
int3
xorl
je
jmp
cmp
sbb
pop
mov
fcmove
jge
push
mov
jo
dec
mov
out
sbb
inc
add
ret
in
inc
sbb
sarl
dec
dec
fs
mov
xchg
iret
fidivs
mov
push
cwtl
pop
es
push
imul
mov
pop
in
lods
shlb
mov
adc
icebp
test
je
jne
pop
in
dec
aad
xchg
ret
data16
push
dec
sbb
inc
in
rcll
mov
lret
popa
hlt
lret
pop
mov
cmp
mov
jne
lds
nop
add
notb
les
repnz
mov
jecxz
divl
cmp
mov
push
cwtl
push
pop
gs
adc
jns
jl
call
addr16
in
push
mov
and
dec
xor
out
leave
cmpsb
sbb
int
rcll
stc
stos
inc
jae
je
cmp
je
mov
aam
jmp
xor
xor
repnz
xchg
nop
ret
dec
push
jle
and
ja
adc
sahf
out
mov
adc
scas
xchg
push
pop
cmp
shll
push
mov
pop
push
mov
push
and
fildl
enter
test
or
xor
insl
lock
mov
aad
andl
fisubrs
ds
orl
pop
sahf
daa
daa
addr16
fmuls
inc
mov
insl
pop
sub
fwait
nop
hlt
scas
add
adc
push
inc
sub
fnstcw
cmpsl
sub
dec
frstor
xlat
cmp
jne
xlat
into
push
mov
mov
movsb
xchg
lcall
dec
push
inc
lret
daa
lea
out
pushf
sub
cli
in
add
lea
jno
push
pop
sbb
fiaddl
sar
test
push
imul
sbb
mov
stc
dec
dec
jp
fst
in
int
xchg
jno
mov
mov
and
mov
push
cmp
cmc
adc
js
sub
and
out
lret
subl
pop
mov
lock
lds
cmpl
push
mov
mov
mov
inc
mov
in
adc
jg
mov
aas
inc
lahf
stos
cmpl
adc
shll
jns
sti
xchg
push
pop
aas
jecxz
movaps
xchg
cmpsl
or
push
pop
gs
aad
sarb
mov
sbb
sahf
sub
cmp
stos
arpl
std
dec
lret
ja
iret
mov
inc
cli
out
sbb
inc
insl
sub
arpl
push
dec
aaa
jp
sub
jnp
aas
les
mov
call
pusha
mov
sub
fldcw
mov
mov
popa
lea
aas
add
in
jb
pop
out
jno
fld
mov
mov
loopne
repnz
rclb
aam
mov
sub
xchg
fcom
jle
adc
pop
xchg
xchg
and
mov
mov
pop
xchg
add
mov
or
std
cs
jecxz
and
push
cmp
xchg
stos
xchg
add
mov
fldenv
xor
les
lds
jg
or
cwtl
mov
jecxz
fmuls
push
sbb
sarb
jp
sub
arpl
push
pop
jns
hlt
fld
lock
fistpl
stos
jae
xchg
or
aas
dec
push
push
sbb
mov
mov
add
or
xor
xchg
lret
mov
scas
jl
cwtl
imul
das
inc
in
mov
dec
imul
jbe
mov
dec
push
sahf
cmp
in
stos
sbb
cmp
enter
add
arpl
push
nop
mov
fnstsw
out
mov
jne
fidivrl
cmpsb
in
sahf
pusha
pop
jns
push
mov
lret
dec
dec
sub
cmpsl
insb
in
das
aam
stc
cmc
call
inc
arpl
pop
nop
stc
icebp
les
test
cmp
shl
jmp
mov
xlat
test
lret
dec
mov
out
push
cmp
sbb
cmp
jp
sbb
sub
mov
and
inc
jle
lret
clc
ss
sarb
daa
rcrb
sub
pop
sub
pop
push
inc
jp
jmp
stos
dec
inc
fsubrl
adc
inc
lods
iret
loopne
jge
xor
inc
cltd
cmc
mov
xchg
mov
xchg
cmpsl
pusha
sub
out
push
pop
add
lcall
cmp
repnz
inc
cmpsl
sub
mov
jae
inc
imull
outsl
and
jno
dec
add
lds
push
shrl
adc
shll
jb
imul
mov
fwait
sbb
xlat
jae
aad
and
fistps
clc
inc
mov
jae
popf
neg
jno
sub
loopne
lds
and
push
cmc
ss
dec
loope
sub
push
push
lret
stos
in
mull
xchg
xchg
pop
mov
pop
outsl
stos
aaa
push
addr16
and
bound
xchg
ror
dec
adc
xor
fs
clc
mov
cli
pop
cmp
jecxz
sbb
int
enter
pop
pop
enter
test
xchg
dec
in
ficompl
cmp
es
arpl
push
mov
xor
test
sbb
adc
mov
dec
sub
fbld
enter
xchg
sbb
push
sub
or
jge
in
xor
add
mov
jl
push
cld
sbb
or
call
stos
loope
dec
cmp
mov
cmp
leave
dec
push
cmpsb
test
pop
int3
gs
dec
jecxz
cmp
ja
mov
scas
sarb
lock
dec
out
pop
aas
insb
cli
notl
push
aad
sub
ret
je
xor
mov
movsb
or
jno
out
pop
in
mov
push
push
mov
jae
frstor
stos
inc
in
mov
jg
out
push
sbb
adc
mov
enter
fidivrl
inc
mov
repnz
jae
xchg
sbb
arpl
rcrb
jg
sbb
jo,pt
aad
mov
push
mov
sub
mov
mov
aam
dec
pop
ret
scas
mov
jp
and
orb
pushf
fidivl
shl
xlat
fwait
daa
sti
mov
cmp
push
sarl
mov
lds
mov
lahf
cmpsl
clc
mov
or
lods
fnsave
lcall
sahf
std
sub
fcomps
gs
and
add
cmpsb
dec
pop
shrl
sub
sub
lea
mov
mov
test
ret
jo
lcall
or
mov
pop
mov
mov
ret
push
rcr
xchg
push
jle
or
cmp
mov
mov
push
push
arpl
xchg
cmp
or
mov
popf
mov
jle
jge
and
or
xchg
mov
push
push
pop
xchg
xlat
fucomip
mov
inc
xor
int
cmc
into
mov
xor
icebp
ret
data16
adc
mov
lret
fsubrs
add
movl
aas
and
xchg
ds
jmp
subb
push
sbb
cli
xor
and
test
mov
mov
movsb
mov
mov
test
adc
rclb
dec
lcall
xlat
dec
pop
das
mulb
pop
and
mov
push
loope
lods
push
movsl
pop
mov
dec
jg
mov
mov
push
loopne
xchg
orb
daa
cwtl
mov
rolb
shll
jg
lret
dec
scas
dec
sub
fwait
xor
pusha
inc
sahf
sub
mov
les
cltd
mov
mov
addr16
lods
mov
cmp
out
loope
mov
dec
outsl
jl
xor
add
int3
lret
or
mov
sbb
xor
mov
aas
add
fcompl
cmp
in
pop
add
cli
push
aas
xor
popa
pop
adc
arpl
ret
cwtl
or
cs
mov
outsb
or
repz
mov
jnp
jge
add
aad
mov
mov
popa
popa
add
inc
addb
pop
inc
add
mov
cmp
lea
repz
es
add
pop
stos
in
sub
aam
push
add
mov
cmp
adc
mov
and
mov
mov
mov
ror
or
and
pusha
jo
push
xorl
cld
es
push
pop
imul
andl
lret
std
cli
loope
or
rcrl
dec
lock
divb
mov
cmp
cmp
jge
cmpl
clc
mov
push
fcomip
pop
and
nop
or
imul
or
cmpsl
mov
cs
or
ror
xchg
insb
cmpsb
dec
and
inc
mov
mov
cmpsl
adc
repz
sbb
pop
movsb
mov
data16
jmp
push
js
movsb
int3
adc
das
xchg
das
leave
lret
lods
lods
mov
leave
mov
in
mov
jne
cmp
or
test
iret
push
sarb
mov
or
insl
xchg
scas
sbb
int
jge
insb
xor
sub
sarb
pop
pushf
mov
stos
pop
cltd
ret
sbb
cmp
mov
arpl
hlt
les
daa
fldenv
or
mov
es
addr16
mov
lea
push
add
push
pushf
mov
jae
lret
xchg
cmp
fwait
aas
cmp
push
shrb
insl
dec
adc
jno
sarb
jo
mov
add
jae
addr16
pop
call
adc
pop
mov
loope
or
mov
xor
and
cs
pop
sub
fadd
inc
xor
sbb
cli
mov
lea
cmpsl
sub
jae
jnp
in
mov
into
xchg
mov
test
mov
sarl
outsl
inc
out
push
cltd
inc
dec
sbb
cmpsl
add
gs
pop
insl
add
inc
or
orl
adc
insl
mov
mov
movl
nop
sbb
and
movsb
movd
sbb
pop
xchg
inc
fsubrs
sbb
js
mov
mov
mov
movsl
or
rol
mov
data16
or
adc
mov
imul
jae
jecxz
mov
and
in
xchg
or
mov
mov
fmull
fistpll
sbb
in
cli
or
sahf
xchg
mov
lods
lahf
shlb
sti
jo
fsubr
cmp
cmp
sub
pop
mov
std
lock
dec
aas
cltd
shlb
push
push
sub
add
sub
or
fistpl
cmp
or
mov
jne
cmc
sbb
dec
push
sarb
mov
mov
mov
sub
pop
out
inc
fsub
mov
test
xchg
mov
pop
gs
arpl
xchg
mov
sbb
andl
fbstp
arpl
push
and
cltd
rclb
jns
cmp
ret
int3
imul
fistpl
mov
imul
test
stos
and
pop
out
test
mov
mov
ja
mov
sbb
dec
sbb
fsubl
lock
or
sub
pop
pop
lret
lret
push
pop
jecxz
or
mov
jl
adc
mov
jb
and
xchg
mov
sub
insl
mov
cmc
push
insb
jmp
out
fs
lock
inc
mov
stc
mov
outsl
or
pop
mov
cmp
mov
fisttps
sub
std
pop
lds
cwtl
adc
rcrl
pop
push
push
out
add
xchg
jl
mov
scas
mov
or
add
mov
adc
jge
xor
aad
cmp
cmp
orb
xor
xlat
xchg
scas
lret
mov
mov
add
loopne
lret
xchg
mov
fs
xor
mov
and
fisttpl
enter
and
mov
or
jmp
icebp
aad
sbb
fsts
loope
cmp
push
test
in
iret
lea
sarl
outsb
jbe
or
xor
xchg
sti
dec
iret
js
adc
rol
mov
or
mov
dec
add
xor
or
xor
push
cmp
es
jo
xor
arpl
xchg
push
add
cmp
imulb
fldcw
jbe
dec
mov
mov
fildll
push
or
jge
pusha
clc
xor
sbb
add
cmpsl
and
push
daa
outsb
cmp
sbb
clc
jmp
adc
je
fwait
xchg
repnz
fsubrs
imul
cltd
xchg
adc
adc
std
imul
pop
cmp
or
push
testl
mov
pop
cmovbe
pop
jle
outsb
pop
adc
sbb
sub
jns
mov
ss
xchg
pop
test
jmp
leave
xchg
and
outsb
adc
lret
or
and
cmc
xchg
sbb
mov
pop
insb
xchg
lods
jge
jp
stos
mov
ficomps
sbb
test
test
cmp
divl
aad
pusha
in
popa
jo
xor
inc
stos
inc
lret
sbb
pop
imul
cs
xor
jns
cmp
popa
lods
idivl
roll
inc
insb
dec
notl
imul
sbb
xor
mov
cvtdq2ps
adc
push
push
lock
iret
pusha
mov
cmp
xor
lock
xchg
int3
fcmovb
cs
adc
pop
add
hlt
mov
add
pop
mov
mov
mov
in
mov
mov
sub
xchg
sbb
rolb
shlb
test
mov
jb
ds
ret
adc
fwait
cld
ror
pop
jge
fnstcw
jle
inc
filds
les
scas
hlt
insl
cli
pop
jmp
je
push
xor
mov
insb
andb
push
data16
hlt
and
xchg
dec
xor
movsl
dec
mov
push
int3
jl
mov
test
add
xor
jmp
ljmp
imul
add
cmp
out
fnstsw
jecxz
pause
pushf
jl
sbb
std
ds
and
popa
mov
cmpsb
push
mov
mov
lret
jle
repz
fldt
movsl
pop
icebp
xor
pop
xor
test
iret
xchg
out
and
cmp
push
jg
pop
gs
lds
jle
lret
ja
mov
push
mov
in
and
pop
cmp
popa
mov
adc
lods
mov
xchg
or
cld
mov
push
outsl
std
jno
sti
push
or
loopne
lds
pop
cmpl
pop
popf
lret
adc
or
out
dec
fisubl
in
xchg
outsb
lods
dec
sarb
xchg
fwait
mov
push
dec
or
push
mov
sarb
mov
xchg
mov
dec
or
add
ja
addr16
lods
inc
sbb
movsb
loop
jecxz
cmp
fdivs
xchg
jb
pop
sub
mov
adc
mov
es
xor
out
mov
stc
fbstp
cli
lret
sbb
stos
movsl
xor
adc
or
mov
mov
mov
ficomps
iret
out
mov
in
or
mov
or
inc
leave
cmpsb
lock
rcl
aad
fwait
sbb
in
aaa
stc
out
push
sub
pop
cwtl
mov
sub
sbb
bound
mov
xchg
mov
mov
push
stc
cmp
iret
lods
dec
fstl
cmp
aad
insb
popa
jb
inc
int
xchg
les
lcall
sti
nop
mov
lock
lcall
push
arpl
cltd
mov
daa
jbe
push
and
loopne
cmp
loope
or
ss
cmp
mov
cmc
jb
jbe
scas
lds
mov
scas
add
push
adc
mov
insb
icebp
enter
je
or
push
and
rorl
lahf
xchg
lods
inc
lds
outsl
outsl
test
pop
or
xchg
sbb
ret
or
jbe
rcrl
xor
adc
and
test
push
scas
mov
push
pop
mov
sub
jecxz
stos
ret
fdivrl
int
out
test
test
or
sub
loope
push
test
fs
push
sub
lea
xchg
in
outsb
cmp
pop
cs
fdiv
push
fisubrl
push
xor
mov
mov
mov
mov
xchg
dec
xor
test
dec
jns
push
inc
sub
stos
cmpsb
adc
and
push
cmp
xchg
test
fwait
hlt
data16
lds
rcrb
das
ljmp
jnp
test
mov
inc
fbld
loop
inc
add
xor
aaa
pop
xor
ror
scas
jle
gs
lods
ds
mov
pop
repz
out
mov
mov
lds
bound
and
jge
lret
push
data16
sahf
pop
and
xchg
fimuls
or
or
mov
mov
inc
cmp
popf
int3
repz
dec
sar
call
iret
ficoml
push
jae
aad
mov
leave
out
and
push
pop
mov
shl
out
and
dec
and
movsl
mov
test
push
cmp
mov
pop
add
jmp
sub
cld
inc
fdiv
or
cwtl
call
pop
mov
in
push
pop
dec
add
mov
movsb
arpl
pushf
inc
mov
add
jnp
mov
cmpsl
xor
sbb
cld
inc
out
lock
push
sahf
add
jno
cmp
add
jb
rol
adc
pop
scas
cli
in
sbb
add
push
cld
aaa
rorl
lret
jle
orl
and
jns
sbb
inc
xlat
xor
lods
mov
lods
push
push
mov
into
cmp
sbb
push
pop
xchg
push
rcl
push
and
iret
gs
or
push
ret
xor
mov
int
in
ret
or
xchg
sbb
inc
or
nop
fisubs
mov
sub
outsb
add
sub
and
divb
sti
adc
into
lock
sub
bound
pushf
cs
jbe
xlat
addl
push
inc
mov
js
adc
or
inc
and
lea
scas
dec
test
sbb
pop
push
dec
in
cli
lods
je
cmp
cmpsb
and
inc
out
loopne
inc
mov
pmaddwd
repz
adc
cld
mov
inc
dec
or
rorb
lret
mov
sub
dec
mov
inc
imul
sbb
xchg
add
cmp
inc
mov
dec
jg
dec
xchg
call
jge
and
cmp
cld
stos
stc
call
insb
dec
cld
mov
movsb
adcb
pop
mov
hlt
ret
cmp
cmp
fcomps
xchg
inc
push
sbb
fistps
ret
push
inc
aaa
sti
sti
mov
bound
jg
or
push
xor
adc
out
fidivs
rcrb
fcom
inc
out
cli
sub
mov
mov
popa
into
push
mov
xchg
ror
mov
pop
jns
icebp
jmp
stos
push
dec
jnp
shlb
imul
iret
mov
cld
dec
cmp
mov
in
inc
sbb
test
sbb
dec
sub
ljmp
sbb
push
sbb
sahf
sbb
inc
movb
mov
and
dec
add
pop
loope
nop
pop
in
test
dec
mov
out
xchg
test
mov
insb
sbb
sti
loopne
sub
fdivs
xchg
sbb
and
and
xchg
movsb
loope
out
not
fdiv
outsl
dec
dec
inc
mov
nop
and
js
sub
add
popf
push
jle
sbb
sub
mov
fmuls
cs
add
dec
inc
or
sub
sbbb
push
xor
or
adc
cmpb
fistpl
cmp
call
pop
mov
movsl
and
or
xchg
arpl
add
push
pusha
lcall
stc
xor
mov
out
sti
sahf
insb
out
cmc
mov
cmp
pushf
jne
add
sub
shll
add
xor
jnp
cmc
sub
dec
sbb
shrb
inc
and
inc
or
mov
lods
xchg
popa
or
dec
insb
dec
sub
into
js
pminub
fisubs
aaa
dec
insb
jno
xchg
cli
stc
cmc
movsl
in
les
pusha
rorl
pop
lock
inc
inc
les
sahf
repz
xchg
loopne
cmp
cmpsl
mov
dec
cwtl
je
jmp
jge
ja
lcall
push
mov
mov
mov
jae
inc
jns,pt
xor
movsb
xchg
popa
adc
fisubs
add
imul
sarb
cmc
push
push
and
and
repnz
add
or
popa
dec
mov
sbb
jbe
push
xor
repnz
test
jo
cmp
and
sarb
mov
push
cmp
movsb
sub
in
mov
adc
and
aam
lret
xchg
jns
cmpsb
xchg
push
dec
dec
mov
lea
scas
fcmovnbe
cld
mov
or
dec
into
mov
adc
sbbl
notb
jne
in
in
or
pop
lahf
and
inc
cwtl
lock
pop
xor
lods
dec
cmp
jae
sub
xor
dec
lret
xchg
inc
cmpsl
fsubp
daa
sbb
fcomip
sbb
jne
cmpsb
insl
std
sub
ret
dec
pop
outsl
sbb
push
sub
adc
push
imul
repz
aam
pop
xchg
out
dec
mov
push
mov
push
aad
add
or
roll
icebp
and
xchg
cs
xlat
mov
fldcw
test
lds
dec
shlb
outsb
lret
inc
dec
popf
enter
enter
push
fisttpll
push
lret
shlb
out
fimull
in
cltd
jle
xchg
insl
or
mov
mov
in
jae
test
orb
fwait
shrb
repnz
cpuid
dec
pop
pop
mov
push
out
cmp
mov
adc
fstps
dec
out
cmp
imul
fcmovu
adc
add
add
mov
jnp
lahf
add
imul
test
ss
lds
arpl
add
cmpsl
push
jno
push
movsl
shrb
in
and
sub
sbb
jnp
mov
mov
dec
shr
stc
lock
inc
and
mov
jmp
icebp
loop
mov
dec
add
pop
push
cwtl
addl
sahf
ds
mov
xor
bnd
mov
enter
xchg
fimuls
or
cltd
and
sub
push
and
fst
cwtl
lods
jo
mov
push
mov
cmpsb
repnz
xor
std
or
lret
cltd
pusha
lock
sub
xor
and
je
inc
dec
imul
es
cmp
xor
or
add
mov
and
lds
mov
push
andb
in
dec
xorl
mov
repnz
and
popf
sub
outsl
mov
mov
arpl
ror
fwait
push
out
test
dec
roll
sub
movsb
xchg
aad
sub
fldcw
push
xor
leave
xor
inc
xchg
and
mov
jge
addb
andl
mov
fwait
les
call
lret
jge,pt
and
inc
push
xor
popa
xchg
cs
jno
mov
adc
lret
dec
mov
outsl
jb
jnp
inc
nop
mov
sbb
mov
lahf
cmp
std
adcb
jge
imull
test
dec
les
sub
xchg
sub
pop
rorl
add
lods
mov
popf
pop
or
add
adc
and
fcomp
or
mov
daa
cltd
adc
into
adc
stc
cli
push
inc
push
push
outsl
pop
dec
mov
imul
loopne
jo
imul
push
jb
mov
add
sub
loopne
jp
cmpl
mull
aam
addb
fsubr
xchg
test
stos
movsl
xchg
adc
sbb
xchg
je
jne
mov
add
add
sub
scas
cmp
mov
mov
jae
jge
dec
mov
inc
mov
adc
aas
mov
or
xor
pusha
sbb
pushf
jp
jl
push
cltd
out
xchg
sub
add
xor
aad
outsb
sub
out
cmp
popa
int3
in
xor
xlat
adc
inc
popf
les
or
out
and
data16
pop
jecxz
imul
sub
adc
xor
stos
dec
jp
out
int
rcrl
test
out
cmp
loope
xor
xor
lret
inc
push
jmp
adc
or
movsl
cmp
insl
movsl
xchg
jns
scas
mov
leave
in
cs
clc
popa
lods
imul
push
cmp
lods
mov
mov
rcl
outsl
adc
adc
loop
gs
clc
imul
movb
xchg
daa
lcall
pop
test
mov
insb
jnp
outsl
cmp
push
cltd
push
pop
test
push
pop
add
inc
imul
push
addb
ljmp
in
push
fbstp
add
repz
clc
push
mov
mov
sbb
adc
push
mov
es
mov
jno
punpckhqdq
pop
or
pop
test
xchg
jo
push
lcall
mov
mov
les
js
mov
lea
test
movsb
out
addr16
insl
push
inc
andb
adc
mov
cmp
add
cmp
orl
jae
fnstsw
les
adc
stos
iret
push
out
movsl
jmp
in
icebp
daa
test
iret
push
fs
fildl
xchg
add
push
mov
xor
ret
pop
inc
sub
add
jl
xor
orl
adc
inc
add
lds
loope
or
in
jns
mov
mov
xor
test
push
add
push
add
pop
push
cli
pop
xchg
mov
pop
sbb
adc
in
inc
mov
test
xchg
sub
cli
dec
xorb
bound
add
pop
or
imul
sub
js
pushf
cmp
or
bound
orb
pop
imul
pusha
push
add
sub
ficoms
imul
mov
test
shll
ss
sti
std
mov
push
dec
ror
pop
push
mov
push
mov
push
push
xor
movsl
lods
aam
inc
pop
adc
fbld
and
add
or
dec
pushf
rcrl
mov
outsb
xorps
cs
daa
loopne
out
bound
gs
pop
sti
js
je
inc
push
sub
push
stos
inc
adc
jnp
mov
xchg
sub
jns
push
add
jbe
adcb
dec
add
in
or
stos
movsb
pop
mov
xor
and
dec
int3
rol
jo
imul
mov
sub
push
scas
jmp
out
or
icebp
aaa
lcall
inc
mov
and
push
sbb
addb
iret
jnp
xchg
jbe
jo
sbb
ss
lret
fs
stc
data16
addr16
cmp
out
add
mov
and
mov
xor
icebp
int
inc
icebp
data16
leave
scas
outsl
adc
jp
sbb
add
sub
push
in
iret
or
cli
push
loope
out
mov
call
cmc
and
leave
sub
jge
fsubl
sub
dec
fld1
mov
arpl
add
jbe
pop
mov
mov
push
xchg
mov
je
mov
ja
add
ret
imul
fcoml
push
mov
loope
loope
jmp
lea
popa
jecxz
add
mov
inc
pushf
cmpsb
cmp
fwait
mov
pop
dec
sbb
push
popa
sub
push
enter
sahf
add
jo
in
ficompl
inc
dec
add
adc
pushf
cmp
fidivs
jp
xor
fstps
fimull
movsb
xorb
sbb
ds
pop
inc
out
int
pop
mov
fmuls
loope
mov
xor
bound
push
xlat
enter
lret
sub
mov
sti
jp
hlt
ret
pop
dec
daa
add
cmpsb
and
movsb
aam
jno
add
imulb
lods
dec
mov
inc
jg
sarl
insl
sub
adc
jecxz,pn
call
mov
and
int3
mov
repz
je
sbb
fwait
mov
add
cld
xchg
push
and
mov
insb
int
xor
pop
jbe
mov
es
movsl
add
jl
int
cld
mov
pop
lods
jno
xchg
inc
mov
cmp
std
push
fmul
cli
dec
xchg
mov
xchg
out
or
jae
ss
out
out
ds
sbbl
cmp
out
out
repnz
push
mov
push
or
mov
inc
fiaddl
stos
adc
lcall
jecxz
aaa
into
cmp
jl
xchg
mov
xchg
sbb
pop
lods
push
les
sub
xor
ja
lret
inc
cs
pop
xorb
shrl
xor
fwait
and
push
imull
leave
inc
fcomp
stos
mov
jmp
xchg
jg
cli
nop
add
repz
movl
mov
jbe
out
roll
frstor
pop
pop
xorps
push
mov
mov
cmpsl
insl
sub
or
lds
and
dec
lods
sbb
test
int
movb
testl
loop
test
std
cmc
sub
adc
push
cmp
lds
jl
adc
stos
jno
mov
xchg
imul
stc
mov
scas
cmp
push
sbb
enter
jge
cltd
push
cmpsb
scas
call
out
sbb
dec
push
mov
xor
dec
sbb
sub
imul
dec
inc
lret
out
cmp
bound
je
mov
or
repz
lock
mov
xchg
sti
adc
jo
pusha
mov
xchg
jbe
mov
movsl
xchg
lcall
repz
sarb
in
stos
sub
xor
sub
mov
dec
ds
mov
ficoms
aam
int3
lods
pop
mov
leave
stc
adc
insb
push
xchg
pop
mov
add
jo
hlt
add
jns
adc
in
mov
pop
add
hlt
pop
jp
pop
cltd
push
icebp
outsl
imul
sub
test
divb
xchg
jp
icebp
scas
aaa
mov
test
dec
loope
mov
popa
inc
les
sub
or
jge
xor
push
pop
sti
enter
mov
add
pusha
mov
mov
sub
pop
add
lods
outsl
cli
aad
testb
push
lea
push
or
jg
insl
sbb
and
les
or
push
or
sarl
xor
xchg
fs
jecxz
call
cmp
call
add
and
fwait
mov
jmp
push
lods
cwtl
mov
and
aaa
inc
inc
int
bound
cmp
mov
enter
push
in
test
pop
sbb
dec
cmp
setns
aaa
mov
push
data16
sahf
movsb
pop
inc
cmp
std
aad
ret
retw
mov
xor
out
sub
mov
mov
push
sbb
rcr
sahf
mov
movsb
cmp
inc
jbe
add
dec
lcall
sub
mov
in
jae
cld
or
add
push
adc
push
fwait
arpl
inc
inc
gs
popa
clc
xchg
dec
popf
mov
xchg
pop
pop
fildl
stc
fisubs
stos
aaa
adc
cwtl
jle
cmp
jmp
xchg
xor
or
mov
push
mov
add
mov
inc
or
xchg
fnstcw
aam
pop
cld
fwait
sbb
lcall
addl
fwait
push
imull
add
dec
mov
inc
pop
test
stc
aad
lret
fildl
ret
push
cmc
rorb
xchg
in
push
sbb
xchg
popf
stos
cli
mov
inc
cmp
mov
enter
pop
je
out
aam
cld
sub
ret
mov
push
mov
imul
xchg
dec
setg
jb
mov
push
shrl
addl
inc
insl
adc
xchg
jp
fdivrs
lods
ror
es
pop
mov
pop
fldln2
scas
mov
outsl
jle
adc
test
es
adc
inc
rcrb
jbe
mov
mov
pusha
jg
push
cld
add
xor
fadds
into
fidivs
mov
push
inc
rcrb
inc
jo
inc
xchg
sbb
test
ret
xchg
fcompl
or
adc
lock
or
rorl
lds
jmp
pop
inc
incb
jns
sbb
aad
cltd
rol
adc
mov
lods
outsl
test
jns
push
pushf
pusha
push
jb
movb
je
xchg
daa
mov
out
push
jae
push
cmc
adc
popl
xor
adc
aad
inc
leave
stc
mov
push
xchg
popa
inc
mov
cmp
into
int3
xchg
cmpsb
rcrb
test
or
aas
mov
xchg
arpl
lds
es
xor
and
jmp
inc
mov
dec
add
pop
mov
mov
test
shll
fistl
and
std
ror
lods
mov
or
test
cmc
clc
aam
outsb
js
fdiv
addl
jns
outsl
inc
jae
aad
jne
xchg
ljmp
push
and
pop
jmp
add
out
and
jo
into
ja
mov
sbb
cmovg
mov
add
mov
and
lret
inc
jne
ror
jno
xchg
sub
jbe
addl
cmpsl
loopne
daa
add
mov
stos
jg
outsb
movsl
insb
adc
xlat
or
sub
rcrb
adc
mov
mov
mov
mov
in
adc
dec
pop
mov
mov
adc
push
pop
cld
inc
inc
jo
das
adc
jl
jmp
idivb
loop
and
push
sub
add
sti
loopne
repz
inc
test
pusha
outsb
cwtl
or
pop
jae
iret
stc
es
sarb
int
xchg
test
sbb
push
jge
xchg
lahf
sarl
repz
insb
xlat
mov
cli
out
inc
call
adc
inc
lds
mov
add
rclb
pop
aad
jp
movsb
stos
mov
mov
out
pop
cmp
mov
inc
stc
or
iret
sbb
test
mov
std
pusha
repz
enter
jmp
add
ds
jl
pop
adc
cli
sbb
insl
rolb
inc
dec
enter
cmp
cmp
mov
add
adc
pop
cmpsl
fldenv
sub
mov
lret
pop
sub
shr
ds
mov
movsb
dec
sbb
or
sbb
pop
out
push
or
outsb
arpl
push
jae
add
cmc
dec
sub
xchg
sbb
fcoml
test
inc
dec
loope
sbb
lea
cmp
shrl
hlt
ja
mov
test
stos
push
xor
mov
in
inc
sbbl
scas
rcrl
into
and
xor
movsl
cld
push
mov
xor
ss
inc
xchg
cld
mov
pop
arpl
sbb
shll
cmp
xor
or
leave
aas
pop
xor
pusha
lcall
leave
jne
in
dec
xchg
or
pushf
mov
cmp
sahf
sbb
cmp
rcr
sarl
jecxz
out
fimuls
nop
sbb
movsb
mov
pop
mov
and
adc
add
hlt
push
aad
add
std
jp
cmp
movsl
out
pop
repz
aam
mov
stos
jecxz
jns
fldcw
sbb
sbb
inc
fnstsw
insl
fsubs
gs
cmp
pop
sub
or
push
sbb
inc
rcr
sub
push
and
xor
inc
cmp
push
pop
or
jbe
mov
mov
cmc
xchg
push
bound
aaa
mov
inc
aam
xchg
rcrb
xor
pop
mov
test
push
cmp
xchg
fimuls
cmp
xlat
xor
add
mov
mov
mov
out
shlb
hlt
ds
aad
sub
popa
dec
ljmp
js
test
xlat
insl
in
jbe
packssdw
inc
adc
jo
mov
std
push
decl
sub
sub
sahf
dec
mov
das
sub
and
mov
mov
cmp
jle
adc
lret
push
or
hlt
out
pop
popa
pop
mov
adc
lea
cmp
jp
jle
cld
xchg
cltd
mov
and
add
dec
clc
ja
das
je
shrb
push
ljmp
mul
sahf
sub
sbb
test
xchg
call
ss
imul
test
mov
icebp
add
lock
mov
dec
xor
imull
xchg
fisttpll
aam
psraw
sti
and
mov
sub
rcrl
xor
out
jae
pop
and
out
jbe
pop
scas
pop
sub
mov
lods
cltd
insb
popa
and
stos
push
es
and
jo
adc
jb
sbb
movsb
mov
dec
pop
xchg
out
add
scas
call
xchg
dec
arpl
mov
mov
decb
aam
stc
mov
pop
in
inc
outsl
dec
into
push
and
mov
cmpsb
into
pusha
xchg
aas
inc
dec
lds
jns
xor
leave
fs
cmp
inc
add
in
ljmp
in
dec
inc
or
xor
fmull
push
xchg
imul
adc
ret
inc
and
sbb
cmpsb
imul
add
movb
mov
mulb
lcall
test
add
dec
jbe
stos
add
addr16
or
movsl
movsl
cmp
insb
mulb
dec
out
push
stos
or
loop
sbb
xor
popa
mov
loopne
enter
mov
cld
out
fdivrp
mov
dec
testl
jo
cltd
out
imul
dec
inc
flds
cmp
loop
aam
vpmulhuw
xchg
dec
mov
sti
pop
add
faddl
push
push
jecxz
fcompl
cmp
aam
mov
cmp
fsubp
dec
stos
and
inc
xchg
scas
cmp
sar
mov
mov
xchg
dec
orl
jg
fstpt
stc
adc
pop
in
xor
rcll
xchg
dec
nop
xlat
jge
sar
inc
jb
pop
stc
pop
add
rolb
mov
popf
or
or
les
mov
stc
or
loope
cmp
imul
cmp
cmc
jns
out
dec
mov
add
pop
aas
mov
adc
inc
cwtl
dec
fsub
jmp
test
gs
or
jnp
wbinvd
test
test
push
cmp
stos
insb
mov
int3
icebp
sbb
movsl
adc
fisubl
into
pop
pop
sarb
mov
xor
jl
add
rcll
pusha
pushf
in
push
jne
mov
sub
cmp
jg
inc
test
lea
sub
jp
fidivs
insb
popf
sbb
leave
repnz
push
stos
dec
nop
mov
or
mov
xor
in
push
aas
scas
adc
dec
outsb
int3
sbb
cli
movsb
jae
add
mov
ds
or
insb
pop
pop
sub
sub
xlat
push
lds
int3
mov
loop
dec
xor
mov
cmpsb
cltd
push
pop
xchg
pop
pushf
out
lahf
inc
jb
push
or
xor
cmc
jne
sub
push
cmp
pop
inc
lods
lcall
mov
pop
sete
xor
mov
jns
mov
pop
fimull
out
inc
in
arpl
cld
push
xor
jno
ljmp
pop
mov
jmpw
decb
sbb
shlb
adc
les
inc
mov
dec
pop
xor
push
test
jo
mov
fs
mov
imul
jl
push
push
inc
iret
mov
xchg
inc
andb
repnz
outsl
imul
mov
xchg
ja
pop
sub
pop
test
xor
push
mov
mov
lahf
shll
inc
and
xor
orb
vpshufd
dec
xor
pop
sub
in
or
or
pop
or
lret
clc
leave
imul
std
es
and
pop
add
jp
aaa
sbb
and
rolb
jne
push
mov
pop
xchg
mov
sti
mov
imul
shrb
aad
cmp
ja
out
xchg
mov
outsb
dec
xor
xchg
popa
inc
inc
cmp
pop
sbb
in
jg
mov
sahf
outsl
add
sbb
mov
sub
pop
push
ss
and
stos
xchg
jbe
pushf
pushf
add
mov
jl
popa
jne
pop
ret
xchg
loopne
call
sub
sti
fwait
pop
xor
jp
pushf
cs
fiadds
sub
jo
sbb
inc
cltd
sbb
into
ficoms
xchg
das
jnp
push
and
je
or
jle
lea
jmp
xchg
mov
xchg
xor
mov
ret
dec
cmp
daa
pop
repz
jb
stc
mov
test
cmp
mov
push
jp
xchg
mov
or
add
mov
xor
mov
cmpsl
stos
fwait
hlt
jmp
addr16
push
sbb
xor
or
or
or
incb
mov
sub
sub
data16
adc
int3
pusha
jg
pushf
loope
lods
push
std
out
repnz
add
mov
jge
mov
xlat
out
imul
push
aam
jns
out
sub
sbb
repnz
data16
mov
nop
ljmp
sar
outsb
mov
mov
add
cmp
cmpsb
bound
sbb
xor
inc
aaa
scas
pop
je
subb
sahf
sub
mov
mov
xchg
jge
lahf
pop
cmp
sahf
jp
iret
dec
mov
fadd
jo
out
fildl
jle
mov
outsl
movsb
addr16
jns
out
js
or
sub
es
cmp
int3
mov
lds
repnz
movsl
xchg
cli
out
call
jmp
lods
out
jb
xor
es
ret
sbb
cmp
inc
mov
ret
ficoml
xchg
sub
scas
push
sub
and
movsl
add
aas
and
mov
cmpsl
pop
mov
fldenv
dec
jle
jge
mov
add
dec
ret
imul
pop
ret
movsl
in
cmp
aad
cwtl
xlat
cmc
mov
les
std
fmul
mov
sub
push
or
test
fistpl
sub
aam
add
in
pop
rcrl
cmp
fld
add
xlat
lock
cmc
mov
add
rcll
push
mov
mov
lret
test
arpl
mov
sbb
notl
adc
test
aad
mov
call
add
sbb
xchg
add
add
leave
sbb
inc
lods
mov
pushf
mov
sahf
repnz
out
sti
leave
dec
add
cs
pop
call
push
xor
xor
xchg
pop
pop
popa
pushf
out
mov
arpl
cs
sti
dec
push
dec
in
adc
jo
pop
fildll
into
jne
push
cli
sbb
repnz
pop
inc
popa
fisubl
cmp
aas
arpl
or
aas
cltd
pop
pop
pop
cmp
add
sub
jno,pn
sbb
add
fistl
mov
dec
mov
sbb
les
mov
inc
fs
cmpsb
or
aam
pushf
int
push
dec
pop
test
dec
mov
movsl
mov
or
mov
and
jmp
add
cmpl
mov
int3
cmpsb
dec
pop
movsl
pushf
adc
inc
test
pop
jl
mov
aam
addl
mov
fcom
mov
sbb
push
sbb
mov
outsb
les
jp
insb
cli
movsb
test
cmc
sbb
fldl
loop
jg
or
icebp
inc
adc
mov
adc
ficoml
cmp
data16
ljmp
call
test
mov
das
sti
mov
sub
or
inc
in
in
pusha
jmp
fsubrl
out
add
mov
and
nop
mov
and
add
mov
jae
adcl
or
cwtl
sub
das
jg
mov
cmp
xor
mov
cmp
push
out
inc
pushf
lret
xchg
popa
mov
fsubs
nop
call
es
repz
shlb
add
xor
aas
mov
pushf
les
sbb
dec
or
adcb
in
arpl
pop
inc
push
add
push
add
test
add
outsb
lds
sarb
test
jno
xchg
xchg
fs
inc
jge
cwtl
mov
sbb
cmp
xor
pop
push
adc
push
les
fdivrl
bound
mov
add
enter
or
add
push
sub
fstl
addb
add
xchg
mov
xchg
movsl
sub
sbb
mov
add
fdiv
cmp
or
xorb
mov
out
imul
insb
hlt
mov
xchg
xchg
lea
std
push
adc
insb
pop
jne
adc
inc
add
int
push
ret
fsubp
cwtl
ror
sbb
pusha
push
daa
mov
xchg
fsubr
das
das
cmp
std
and
stc
jo
adc
push
mov
dec
mov
lret
testb
xchg
jbe
arpl
and
outsl
adcb
push
dec
push
cs
loopne
icebp
fistpl
insl
inc
leave
lods
fnsave
jecxz
and
mov
and
dec
xor
lods
jge
mov
lcall
cltd
fs
rcrl
cmp
in
ds
mov
loop
sub
cltd
and
mov
mov
repz
or
shrl
mov
stos
loop
loope
sti
fs
sbb
lahf
and
pop
and
mov
adc
dec
lret
fimuls
ljmp
sub
das
lret
popa
push
jmp
lds
aam
jp
outsb
in
cli
lods
push
adc
test
insl
xor
mov
dec
aad
push
ret
ljmp
inc
xchg
or
in
xorb
imul
push
aas
mov
add
iret
inc
add
mov
lock
rcrb
cmp
sub
cmpsb
ljmp
xchg
pop
imul
jns,pn
inc
lods
mov
sbb
imulb
or
ljmp
addr16
repz
jle
aas
outsb
mov
and
mov
cmp
mov
ss
out
insb
mov
jae
sbb
jle
incl
loope
cld
sbb
xchg
adc
cmp
daa
pushf
jae
inc
cmp
or
je
jae
sbb
loopne
add
add
and
inc
dec
mov
loopne
aam
stos
or
out
add
fsubrs
adc
xor
out
inc
or
sub
dec
push
xchg
notb
jnp
ret
sbb
enter
filds
cmp
leave
mov
sahf
ljmp
fcompl
lods
into
xchg
dec
lret
cltd
push
test
lods
add
dec
inc
popf
out
ljmp
loopne
jmp
push
movsl
add
daa
cltd
outsl
jmp
mov
sahf
add
roll
ds
sti
fstpl
cmpsl
add
lds
cltd
mov
in
mov
in
xchg
dec
sub
std
sub
xlat
rcl
xchg
dec
cmp
sbb
jnp
mov
jmp
mov
mov
test
dec
mov
fisubs
or
sbb
mov
cmc
out
jae
sbb
loope
mov
addr16
icebp
add
adc
pop
jmp
sub
adc
addr16
adc
daa
or
push
sbb
adc
pop
popf
test
test
sub
das
aas
dec
push
xchg
jge
imul
out
aam
sti
lock
aas
inc
icebp
xor
aas
iret
ret
es
mov
and
out
fs
sbb
xlat
jne
testb
andb
jmp
adc
xlat
movsb
cltd
sbb
jb
cwtl
int3
jl
mov
or
mov
pop
data16
xchg
cmp
inc
mov
jecxz
inc
std
iret
jne
push
jmp
push
cmp
cltd
in
add
fisubs
ja
jb
imul
dec
ror
test
dec
mov
aam
insb
mov
dec
or
jg
aad
sbb
push
mov
or
fxch
leave
or
cmp
pop
xchg
mov
xor
fistpll
jne
add
mov
and
mov
push
cmp
fbld
dec
xlat
mov
lahf
movsb
and
addb
add
inc
xchg
das
cltd
dec
rorl
and
or
data16
push
mov
inc
adc
sub
inc
xor
inc
in
add
pushf
mov
dec
push
imul
mov
in
push
mov
or
sbb
aas
mov
scas
cmc
and
xchg
sbb
sub
pop
fwait
inc
sbbb
enter
in
mov
push
sbb
mov
popa
movsb
fldenv
cs
es
andl
fs
pop
dec
adc
xor
in
push
cmpsl
subl
fisubs
cmp
adc
addr16
jb
pop
sub
push
repz
dec
ss
lret
stc
add
jo
sub
int3
adc
push
jle
dec
push
aad
jecxz
addr16
mov
ja
ljmp
shll
jbe
and
cwtl
fistl
cs
inc
xchg
fcoms
inc
xor
cmp
pop
dec
mov
push
jge
jmp
lcall
fwait
xchg
mov
add
sbb
mov
jne
jae
mov
nop
loop
mov
push
adc
dec
cld
and
ret
xlat
in
outsl
sbb
mov
jbe
inc
or
jecxz
push
cmpsl
and
push
xchg
mov
in
stos
data16
cld
mov
lock
cld
test
jno
fstps
popl
jnp
fildl
mov
add
sti
outsl
mov
mov
adc
cmp
xor
iret
sbb
jbe
push
mov
inc
pop
jl
xor
in
add
pop
xlat
mov
into
jb
ficompl
ret
insb
mov
inc
cld
sbbb
mov
inc
cltd
jne
and
jl
add
rorb
aaa
pop
inc
lods
les
add
jmp
scas
js,pn
jp
xchg
sbb
data16
call
es
jnp
pop
imul
fildll
add
xchg
aam
pop
lods
test
lcall
pop
cmp
sbb
call
mov
pop
pop
and
outsl
pop
fistpl
mov
pop
lcall
add
mov
iret
in
mov
into
mulb
adcl
mov
mov
repz
add
fistl
dec
cmpsb
into
adc
outsl
sub
das
test
das
sar
xor
insl
xchg
lods
ss
cmp
push
das
xchg
and
push
xor
push
int
orl
fucomip
ljmp
fcoms
push
cs
and
pop
push
mov
or
cs
or
imul
fmul
fidivl
push
orl
mov
js
sbb
lcall
sbb
je
pop
push
push
dec
dec
mov
movsl
test
push
gs
jle
out
sbb
dec
scas
pop
or
xchg
sti
or
cs
rol
push
xchg
sub
leave
inc
or
sbb
int3
inc
adc
mov
xor
loop
xchg
pop
ficoms
loope
add
xchg
or
xor
loopne
shlb
pop
cmp
dec
jae
xchg
sub
testl
add
cmc
cmpsl
ficoms
daa
cmp
scas
sti
jne
scas
lret
jo
sbb
or
pop
cmpsb
out
std
in
xchg
mov
push
stc
push
sbb
imulb
mov
jae
loope
in
mov
and
jo
or
mov
fistps
and
gs
rcrb
xor
pop
xor
push
jmp
scas
mov
repz
jg
mov
fstpl
or
jno
and
jns
popa
mov
add
mov
loop
sub
mov
mov
jg
shrl
lret
pop
mov
sbb
rcr
aad
add
mov
push
ret
mov
pop
fsub
sub
repz
shll
mov
jl
pop
ficompl
lret
cmp
jne
pop
pop
mov
add
or
add
sbb
jg
jle
out
mov
testb
dec
xor
xchg
bswap
nop
mov
inc
push
cmpsb
jnp
mov
sbb
test
jecxz
sbb
ds
dec
stos
push
add
xchg
pop
movsl
dec
inc
popa
les
ret
sub
aaa
dec
insl
sub
jmp
dec
stos
xchg
mov
loop,pt
adc
out
jle
mov
loop
nop
ljmp
ss
in
xor
pop
add
addr16
js
rcrb
adc
add
lcall
in
and
imulb
cli
dec
aaa
xchg
stc
dec
cmp
icebp
xchg
fistpl
lret
cmpb
lods
enter
es
ficoml
repnz
aas
das
movsl
xchg
pop
cmp
or
cmp
sbb
xor
pop
int3
das
or
out
sbb
cmp
ficoml
cmp
and
test
dec
aam
cs
xlat
daa
insb
push
adc
inc
or
insb
push
sbb
pushf
outsb
mov
hlt
in
jge
add
insl
imul
lods
sbb
cwtl
mov
pushf
repnz
sbb
out
repz
push
sub
sbb
test
sub
ljmp
mov
ficompl
mov
fbstp
xor
adc
and
notb
mov
shll
xor
inc
push
loope
mov
mov
movsb
out
in
mov
addl
pushf
loope
cmp
repnz
loope
lea
sbb
sub
add
ret
adc
outsb
pop
subb
sti
divb
pop
mov
mov
loope
push
and
daa
xchg
cmp
or
into
xchg
pop
ret
and
into
mov
js
dec
sub
mov
sub
pop
cmp
jg
jae
dec
cmp
les
xor
mov
ja
add
add
repz
addb
push
test
and
lods
xchg
inc
divb
ret
pop
jle
inc
ja
pop
cmp
stos
push
inc
idiv
push
fcoms
pop
sub
and
int
lods
icebp
fadds
inc
pusha
inc
add
loop
push
mov
negb
jle
dec
fmull
enter
jp
outsb
inc
mov
arpl
shlb
gs
in
mov
mov
sti
jmp
aas
pop
iret
in
jle
mov
jae
jns
jle
adc
mov
cli
add
scas
imulb
push
stos
ret
sub
jo
pop
enter
ljmp
xor
pop
adc
pop
xor
jnp
lods
filds
repnz
es
subl
outsl
in
jmp
cmp
dec
mov
daa
adc
imul
sub
fsubrs
js
test
sahf
cmp
pushf
ss
and
out
out
lock
addr16
mov
add
mov
push
xchg
mov
stc
pop
xchg
clc
fstps
jle
xchg
stc
jne
sub
rcrl
dec
or
insb
fistl
daa
pop
add
dec
push
xchg
imul
jnp
pop
xor
dec
stc
pop
es
insl
xchg
mov
or
inc
shrl
push
movsl
cmp
dec
jmp
pop
sbb
mov
subb
popa
cltd
jbe
ja
xor
cmp
aas
jge
push
add
xchg
repnz
jle
pop
xorl
and
and
dec
inc
sub
mov
cmp
lret
mov
jecxz
les
push
hlt
mov
push
loop
loop
pop
ss
push
movsb
ss
inc
ss
lods
and
imul
sub
out
clc
pushf
fiaddl
push
dec
out
divb
imul
fiadds
cmp
rorb
push
es
test
std
out
ljmp
or
repnz
out
push
cmp
push
push
lret
insb
jmp
add
in
mov
sbb
movsb
pop
data16
in
or
int3
push
imul
inc
scas
cmp
dec
jl
jmp
sub
test
cmp
or
pop
movsl
sbb
std
hlt
cmp
add
jl
out
fists
pusha
icebp
pop
daa
xorl
vmovaps
sub
inc
and
cli
clc
je
mov
les
je
mov
push
inc
insb
in
ss
dec
cs
inc
outsb
xor
testb
push
leave
std
and
sbb
mov
std
ja
push
fdivrp
fnsave
insb
mov
cmp
out
mov
mov
stos
loop
add
add
mov
cmc
les
sub
test
inc
jp
push
jnp
pop
cmp
data16
mov
lea
aam
int
fistl
bound
fsts
mov
cmpsb
or
push
adc
sbb
and
push
jbe
pop
test
fldt
lds
mov
push
je
cmpsl
jns
jb
incl
scas
mov
jns
xor
pushf
fstpl
push
sub
data16
loop
in
pop
ret
cltd
and
loope
movsl
aaa
sub
ror
push
or
mov
lcall
dec
icebp
out
out
inc
ficoml
shrl
mov
sub
je
sbb
shll
xor
pusha
sbb
mov
out
int3
or
and
xor
mov
out
sbb
mov
jp
add
lods
sbb
pop
sbb
mov
out
mov
sbb
dec
bound
stc
mov
in
lods
incb
ret
or
pop
out
lea
aam
mov
les
ja
cmp
jmp
mov
jecxz
popa
faddp
xor
lods
aam
push
cmp
lahf
jb
test
add
test
leave
clc
aam
mov
adc
int3
outsl
and
out
dec
mov
loope
lret
daa
in
add
into
ljmp
je
xchg
xchg
sub
and
inc
es
inc
jecxz
incb
mov
xchg
mov
or
and
rcrl
aaa
iret
cmp
push
xchg
jo
inc
jge
testb
int
sbb
call
add
xor
pop
adc
lds
xchg
dec
test
sbb
fnsave
jnp
shll
sbb
cld
inc
cltd
pop
add
mov
inc
add
cld
loopne
pop
cltd
mov
ss
inc
xchg
xchg
jae
or
mov
mov
hlt
mov
mov
or
test
jnp
fstpl
popf
mov
pop
outsb
mov
cmpsl
jge
cmp
clc
xor
mov
xor
outsl
mov
sahf
dec
dec
adc
mov
mov
lcall
dec
and
shrb
or
xchg
sahf
mov
fisttpl
sbb
sahf
adc
pop
out
xchg
roll
mov
test
mov
mov
cmp
sahf
sahf
inc
ss
inc
mov
mov
pusha
fwait
adc
lock
sbb
adc
int3
dec
ficompl
jo
jge
pop
sbb
scas
mov
pop
fists
imul
imul
out
and
jle
cld
mov
dec
lea
sbb
push
outsl
pop
mov
add
cmp
jp
stos
das
ret
jno
inc
and
movb
jb
data16
cli
adc
mov
sbbb
std
mov
cld
xor
in
lcall
daa
jl
dec
stos
sbbb
ret
mov
xor
lock
pop
dec
and
dec
imull
sub
ds
jle
pop
ret
push
stos
or
mov
push
cmpsl
movsl
lahf
lret
mov
rcrb
push
out
inc
pushf
lcall
add
gs
sbb
add
push
leave
mov
in
in
lahf
fdivs
and
mov
and
adc
cwtl
out
aas
push
add
mov
pusha
sub
test
ja
andl
cmp
mov
sahf
mov
outsb
imul
je
out
aas
fstps
xor
push
xorb
insl
lea
sub
xor
cmc
test
inc
scas
scas
les
enter
xor
dec
mov
push
xchg
rclb
clc
pop
movsl
mov
fwait
dec
or
dec
leave
push
sub
jnp
sbb
jns
sub
cmpsb
inc
pop
push
sti
cmp
xor
or
pusha
inc
pop
sbb
and
pop
cmpsl
sub
es
xchg
lret
aad
lods
mov
popa
push
xchg
aaa
loope
cmc
arpl
adc
xchg
sub
jo
fs
fistpll
repnz
movsb
jge
add
dec
or
ficoml
test
or
fsubrl
out
mov
in
mov
mov
bound
mov
mov
add
pop
and
xor
jl
shl
repnz
xor
aad
leave
rorl
jl
xor
test
outsl
cmpsl
in
mov
pop
movsb
repnz
fdivr
sbb
aaa
and
sub
insl
gs
and
scas
mov
and
iret
push
push
and
popf
xchg
out
int
push
push
xchg
sar
mov
popf
jne
cs
add
xchg
xor
int3
popf
sub
cli
mov
cltd
mov
dec
sbb
cltd
mov
jp
push
xchg
cltd
loope
inc
in
push
xchg
or
push
insb
adc
cmp
cs
mov
movb
movsl
addr16
pop
push
loopne
push
mov
fs
push
mov
push
into
int
sbb
out
push
iret
imul
nop
movsb
ret
push
adc
push
xchg
popf
lahf
jns
xor
cmc
movsb
fidivrl
dec
jb
add
xorl
cmp
jns
ja
add
xor
test
xchg
sbbl
jb
inc
leave
popf
or
inc
push
xor
pop
push
xchg
test
dec
sub
mov
insl
cmp
jle
inc
dec
sarb
leave
nop
push
daa
mov
test
shll
add
gs
cltd
pop
scas
pop
dec
dec
jmp
jbe
xor
push
iret
stos
pop
leave
adc
shlb
repz
pop
jns
mov
insl
or
out
out
stos
adc
jecxz
inc
add
or
inc
jo
jnp
cmp
dec
mull
outsb
push
add
in
lds
jl
outsb
xor
and
inc
or
cmpb
jb
or
push
shl
shl
and
dec
ffree
add
aam
xor
add
mov
lret
mov
cli
push
dec
js
xchg
push
ja
sub
iret
insl
xor
xchg
and
in
imul
and
adcl
movsb
or
jne
pop
out
mov
jae
iret
aam
push
xchg
xchg
mov
pop
cmpsl
data16
arpl
std
sub
xor
inc
test
addr16
shlb
add
xor
ljmp
push
lcall
sbb
and
jbe
inc
es
inc
push
ss
push
pop
cmpl
call
bound
scas
lret
add
adc
adc
scas
jl
std
pop
push
int3
dec
add
daa
jne
int3
loopne
in
sub
inc
sbb
sub
sar
pop
pop
inc
call
test
cld
mov
gs
fstl
aad
cmp
xor
xor
jns
mov
mov
jmp
icebp
adc
pop
in
and
sub
aad
and
xchg
fisttpl
lds
leave
push
aam
test
clc
lods
and
jae
mov
rcr
mov
push
pop
adc
add
enter
call
jg
lock
test
movsb
xchg
fldl
and
shlb
fisttps
push
sub
or
and
adc
dec
fdivrl
adc
jmp
mov
sahf
xchg
push
pop
jbe
pop
call
sbb
ja
lds
loopne
dec
ret
push
repnz
cmp
jl
arpl
sbb
negl
adc
pop
jns
push
jne
push
filds
enter
xor
ror
pusha
repz
sub
xchg
mov
mov
js,pt
add
sub
jecxz
adc
adc
jecxz
daa
lahf
push
push
in
mov
test
jp
and
jle
and
lahf
lods
cmp
mov
pop
retw
xor
ljmp
sbb
ficoms
jge
cmpb
in
stc
sbb
sbb
popa
popa
aas
inc
pop
fcmovb
in
lahf
cli
cmp
push
dec
enter
inc
popa
out
sbb
daa
add
jmp
mov
fistl
sbb
inc
mov
test
ret
iret
inc
sub
sbb
iret
and
aas
jb
sbb
das
mov
pop
fs
xlat
shl
dec
cmc
es
sub
jbe
pop
daa
mov
pusha
push
ljmp
and
imul
lret
adc
icebp
mov
das
imul
aad
sub
push
xchg
or
inc
lods
jle
push
in
or
or
mov
inc
popf
jbe,pt
pushf
in
mov
loopne
imul
push
inc
dec
add
nop
dec
lds
idiv
xor
xchg
movsb
and
aam
hlt
pop
int3
cld
nop
mov
sub
pop
gs
pushf
cltd
inc
adc
pop
imul
inc
sub
loopne
je
push
push
inc
int3
xor
stc
fwait
pop
jl
pop
mov
adc
outsb
pop
mov
test
inc
movsb
mov
and
mov
sub
mov
xchg
mov
popa
mov
addb
es
and
mov
aad
xor
push
fbstp
pop
pop
cmp
mov
rcrb
mov
ds
push
mov
out
xor
fists
stos
fwait
aaa
ss
pop
xchg
xchg
mov
add
lods
sbb
ja
lahf
insl
int3
lock
push
or
popf
insb
je
inc
jb
insl
adc
fs
sbb
cli
sti
pop
jno
xchg
fstpl
ficompl
ds
scas
sbb
pop
pop
popa
sahf
lock
sub
dec
jne
inc
cmp
mov
inc
ds
push
push
inc
inc
fnstcw
dec
pop
pop
push
jbe
pop
popf
insl
out
cltd
in
jecxz
push
xchg
sbb
and
shlb
mov
in
pop
pop
pop
aaa
mov
xor
jb
or
cltd
push
push
cmpsl
sbb
jp
je
mov
daa
ror
xchg
pop
inc
cmpsl
popf
dec
popf
or
lret
popa
dec
push
dec
lea
inc
shl
xor
jo
test
sbbl
mov
adcb
and
int3
adcl
jns
sub
adc
and
imul
xchg
out
pop
push
les
das
push
imull
lret
mov
push
xor
ss
push
pusha
or
fwait
xchg
clc
out
xor
sbb
fs
jnp
stc
xor
xor
movsb
xchg
dec
mov
insb
stos
cltd
or
ja
add
adc
pop
jmp
sub
dec
mull
xor
out
pop
in
fwait
xchg
pushf
clc
cs
cmp
movsl
jle
sbb
insb
dec
push
and
mov
push
sbb
xchg
mov
cmp
adc
jmp
inc
cmp
out
int3
rolb
test
mov
popf
jge
repz
scas
and
mov
xor
push
adc
sub
iret
aas
inc
jmp
push
cli
sub
sti
xlat
jge
cld
xor
mov
lods
fidivrl
mov
lea
sub
repz
mov
pop
ret
sub
fwait
push
lret
lahf
jb
scas
icebp
dec
add
fs
mov
mov
push
inc
xchg
fildl
mov
xchg
pop
mov
jno
mov
adc
adc
mov
xlat
roll
sbb
add
sbb
push
xchg
push
sub
inc
pop
in
sub
pop
das
stc
shll
nop
insl
and
and
add
popf
pop
jl
mov
mov
out
jmp
xor
cmp
cwtl
lcall
in
ja
cmp
in
movsl
stos
mov
sarb
cld
sbb
jns
push
mov
mov
fcomps
pop
outsb
mov
pop
or
lock
dec
js
rorb
mov
adc
push
inc
mov
mov
mov
mov
repz
fwait
push
xchg
jl
mov
mov
in
test
testb
xchg
dec
movsl
pop
roll
clc
fs
imull
into
pop
out
es
je
inc
in
lcall
cmc
sub
mov
adc
bound
rorb
jge
cmp
cli
pop
int3
and
xchg
les
jno
cmpsb
mov
jbe
aad
fisttpll
add
xor
pop
and
sarb
movb
fstps
int3
int3
ds
push
ljmp
test
inc
out
push
jmp
daa
cmp
jl
clc
adc
shrl
mov
jo
cmp
pusha
dec
repnz
adc
or
cs
add
add
sbb
dec
xor
mov
enter
scas
mov
push
rclb
cmp
cld
dec
add
mov
movsl
and
lock
push
int
jl
in
movsb
or
push
mov
ljmp
push
arpl
mov
jge
shlb
mov
sub
jnp
addr16
pop
aas
js
lock
daa
jmp
sub
xor
lcall
sahf
inc
xchg
int
ficoml
pop
mov
sub
add
and
test
addr16
sbb
adc
out
adc
cmp
cmp
ret
loope
xor
mov
rcrb
mov
dec
and
push
sbb
pop
leave
hlt
ror
fistpll
stos
add
mov
push
mov
pop
int3
inc
out
lret
lret
jp
outsl
loope
jmp
imull
mov
fisubrl
icebp
popa
je
xlat
int3
mov
insl
cmc
inc
lock
dec
es
xchg
ja
mov
out
fstpt
loopne
or
push
test
lds
lcall
xchg
jecxz
mov
push
lret
aad
sbb
dec
fildll
stos
pop
xlat
mov
jmp
in
ds
push
cmp
ss
sub
xor
sub
lods
cwtl
sub
lock
gs
dec
dec
mov
out
loope
xor
mov
sub
sbbb
das
aas
and
les
loopne
pop
stc
je
pop
sub
lret
adc
xchg
fistpll
jecxz
aam
lods
add
or
es
sub
pushf
push
out
cmpl
nop
mov
dec
jp
orl
dec
stos
sti
and
std
pop
inc
loope
jle
repnz
addr16
js
jmp
xchg
dec
xlat
push
outsb
mov
test
stc
ret
sub
cmpsl
jo
aam
imul
push
into
addl
mov
jns
mov
push
or
push
sbb
sbb
rcl
xchg
dec
cmc
sarl
les
das
mov
xchg
std
scas
orl
std
daa
mov
enter
dec
adc
test
sbb
aas
mov
add
push
xor
das
lcall
pop
pop
popa
cmpsb
movsl
test
mov
inc
jbe
imul
cld
adc
stos
adc
mov
and
inc
pushf
lahf
xchg
xchg
xor
or
lods
test
pop
ja
data16
ret
test
lahf
das
inc
es
shlb
add
mov
dec
sbb
cmp
jecxz
cld
icebp
jno
mov
aaa
fildl
insl
jno
imul
mov
dec
push
daa
sbbb
sub
sub
mov
movsb
cs
movsl
pop
lods
and
pop
icebp
mov
movsb
cmpsb
sbb
filds
shl
cltd
mov
stos
in
adc
xchg
cmp
adc
jb
sbb
test
sar
mov
pop
lcall
pushf
mov
sub
int
push
fmuls
adc
hlt
jo
adc
dec
mov
pushf
roll
test
pop
push
ljmp
push
in
gs
mov
ficoms
test
sarb
loope
mov
add
and
je
imul
insl
push
xchg
shl
push
imulb
gs
mov
sub
mov
scas
push
sub
lods
pop
pop
and
mov
pushf
insb
mov
xchg
mov
push
push
test
push
sub
and
rcl
loop
arpl
clc
addb
pop
loope
pushf
insl
adc
jnp
inc
jg
push
xchg
push
out
pop
movsb
out
mov
mov
loope
cmp
dec
loop
call
je
adc
cmpsb
movl
fsubrl
push
push
or
scas
loope
pushf
aam
mov
push
ret
scas
into
stc
sub
dec
xchg
jmp
negl
das
sbb
lods
adc
arpl
pop
sbb
fildll
test
adc
sti
notb
dec
mov
mov
es
pop
mov
leave
adc
rclb
inc
mov
sbb
xor
xor
cs
pop
call
push
push
pop
dec
push
xchg
xchg
ror
stos
shll
loope
mov
mov
jns
xorb
mov
roll
push
bound
loop
xchg
out
mov
push
movsl
mov
addr16
fs
add
out
fwait
dec
lds
dec
jp
in
cmc
clc
jl
push
jecxz
lcall
cwtl
add
inc
loop
out
aam
xchg
mov
fsubrl
mov
arpl
scas
jne
ds
xchg
aas
mov
mov
sahf
mov
or
and
mov
in
jb
jmp
jns
inc
xor
dec
stc
add
out
xor
mov
rcr
es
push
cmp
xchg
inc
rol
stc
fidivrs
xchg
add
push
jnp
in
cmp
pusha
xchg
mov
daa
sub
rolb
pusha
pop
lods
lahf
shl
ds
sbb
mov
and
pop
cmp
xor
fnstcw
lret
inc
cmpsl
in
and
in
add
dec
dec
sbb
bswap
jmp
cwtl
aas
inc
call
dec
adc
mov
jnp
mov
cwtl
push
or
xchg
std
imul
xor
iret
push
dec
fldenv
cmovbe
stc
inc
mov
pop
loopne
mov
inc
repnz
rol
data16
insl
mov
sub
ja
stos
lods
insb
push
insb
fwait
push
push
add
aaa
push
iret
dec
stc
push
arpl
aaa
cli
sahf
fldt
mov
lret
push
imul
fwait
add
add
jmp
imul
inc
mov
insb
jb
xor
push
jno
push
xchg
cmpb
dec
int3
rcrb
pushf
cmpsb
jle
mov
cmp
dec
loope
push
push
arpl
pop
cmp
movb
xor
push
lea
les
out
test
jmp
hlt
test
jle
mov
jecxz
add
xor
adc
inc
lods
mov
lock
das
add
insl
push
add
in
pop
aad
xlat
arpl
in
lret
xchg
mov
ret
push
inc
pop
shrl
sub
inc
cmp
lret
and
out
sbbl
adc
lret
inc
in
mov
imul
adc
xchg
scas
cmp
cwtl
sub
mov
xchg
mov
loop
mov
aad
test
es
imul
sbb
mov
xlat
imul
movsb
pop
ret
jg
daa
inc
xchg
cmp
jmp
fs
mov
leave
pushf
push
imul
daa
mov
cmc
inc
sbb
and
mov
cs
xchg
adc
xchg
cwtl
jns
adc
mov
cmp
adc
mov
mov
add
stos
pop
jp
mov
fdivrl
mov
mov
jg
sbb
ja
mov
mov
xor
lock
or
rcrl
push
or
mov
jmp
mov
cmc
call
addl
inc
or
fcompl
jne
sub
mov
dec
repz
and
inc
pop
push
mov
or
lods
cltd
scas
sub
mov
aas
sbb
pop
ficomps
cmpsl
cmp
aam
cltd
ja
push
leave
adc
mov
fsubs
xor
pop
mov
mov
push
int
pop
push
dec
lret
loope
jb
mov
incb
iret
test
and
push
aad
ret
mov
std
fxch
xchg
lods
mov
dec
frstor
sub
mov
push
popf
sub
jns
cld
mov
sub
xor
dec
andb
popf
jl
hlt
or
fs
mov
xor
leave
jne
pop
mov
xchg
dec
sub
stc
pop
popa
xchg
testl
jl
and
shl
sti
int3
test
sbb
popf
mov
movq
cmp
ljmp
mov
pop
pusha
stos
std
loope
inc
je
movsb
fwait
inc
out
mull
les
dec
dec
dec
cltd
mov
aaa
mov
andb
and
clc
negl
fcmovbe
mov
push
dec
in
stos
xchg
hlt
mov
movb
mov
insb
mov
loope
pusha
mov
scas
out
mov
repz
out
cmp
aas
lret
mov
xor
ret
cmp
fcmovbe
push
push
or
lods
push
xchg
push
xchg
subb
test
popa
jo
push
add
inc
adc
jecxz
mov
loop
lahf
dec
aaa
xchg
std
data16
sbb
sub
subb
pushf
cli
aaa
mov
je
daa
jecxz
push
stc
sbb
mov
add
insb
jle
pop
push
push
push
jg
pop
push
gs
loop
stos
mov
xor
xor
add
xchg
mov
aas
adcb
data16
movsl
and
adc
and
sarb
nop
mov
cs
sbbl
sbb
in
shrl
fsubr
aaa
dec
xor
js
fwait
je
mov
push
push
push
push
or
xchg
xchg
jle
aaa
cltd
aam
imull
rcll
add
xchg
in
adc
and
mov
xchg
lods
push
mov
dec
popl
mov
stos
loope
sub
scas
fldcw
xor
repz
jo
ja
mov
nop
repz
sbb
rcrb
mov
fcmove
mov
into
mov
in
add
sub
mov
add
sarb
sbb
lods
jp
scas
jns
pop
pop
jle
mov
jmp
notl
mov
outsb
or
and
and
cmp
add
mov
sub
xchg
xchg
xchg
or
cmp
xor
inc
out
push
setp
mov
jmp
cwtl
fisubl
or
push
and
in
hlt
movsb
pop
faddp
leave
pop
mov
sbb
cmp
sarl
push
cli
xlat
cmpl
pop
cs
cmp
pop
imul
movsl
into
jnp
cmpl
inc
xchg
test
outsl
xchg
lcall
sub
dec
pop
pop
and
aas
lods
shll
fdivl
xor
mov
mov
add
mov
sbb
sbb
mov
aaa
movsb
cmpsl
imull
dec
mov
sbb
shll
jae
in
dec
arpl
inc
cmp
cmpsb
and
fs
cmp
xchg
add
push
mov
mov
fidivs
sbb
in
xor
pop
imul
outsb
push
addb
out
das
mov
jl
movsb
cwtl
hlt
cli
adc
pop
cwtl
xor
je
dec
push
inc
test
pushf
jno
inc
adc
je
sbb
std
mov
add
lods
jge
dec
and
mov
jb
xor
lds
int
dec
fsubrs
cli
lods
xchg
push
fisubl
mov
jo
mov
sbb
jg
sarb
jle
in
clc
xor
daa
sbbl
in
fildl
inc
and
in
jp
into
sbb
add
mov
add
jae
sub
cwtl
xchg
or
fldt
ds
and
or
std
xchg
hlt
sbb
or
jno
mov
int
loop
adc
dec
inc
lock
call
pusha
popa
aad
xlat
imul
pop
jb
data16
xchg
shll
mov
pop
cli
bound
cmpsl
movd
cmp
or
in
pop
ret
inc
push
and
femms
inc
mov
push
sbb
push
imul
icebp
fs
cmpsb
cmpxchg
push
jno
cwtl
inc
loopne
repnz
lods
insl
out
xor
push
sub
pushf
xchg
je
test
sbb
inc
jmp
mov
mov
adcb
mov
dec
xor
xchg
sbb
inc
outsl
mov
xor
mov
push
push
jmp
jl
xchg
dec
mov
and
push
push
hlt
insl
push
xchg
xchg
pop
ljmp
cmpsb
or
iret
xor
cmpsl
clc
jae
fiadds
push
lock
stos
xchg
pop
pop
cmpsl
imul
cmpsl
sbb
adc
mov
ficompl
push
pop
mov
push
addb
lea
pushf
lret
dec
arpl
out
inc
mov
out
mov
sahf
add
cmp
inc
dec
or
test
jge
decb
mov
xchg
push
cmp
mov
in
mov
and
jp
inc
mov
sbb
mov
lods
or
loope
xchg
add
xchg
or
roll
inc
xchg
cld
sbb
movsb
cwtl
adcb
dec
sub
or
insl
jecxz
pop
aas
aas
or
pop
iret
inc
test
dec
gs
push
adc
mov
decl
add
pop
or
dec
int
mov
cld
mov
shll
stos
or
xor
daa
mov
jo
cwtl
xchg
dec
push
nop
xchg
xchg
mov
mov
and
fwait
cmp
leave
mov
push
call
pcmpeqd
jbe
inc
in
mov
cs
insl
lahf
ficoms
test
pusha
jp
inc
leave
or
cs
rclb
mov
xchg
dec
push
arpl
pop
cmpsl
mov
add
lret
xor
xchg
add
negb
jecxz
jb
fwait
xchg
lock
leave
add
inc
add
in
fwait
mov
push
imul
mov
jmp
mov
jo
pop
roll
inc
movsl
loopne
push
cmpsb
mov
inc
jg
sbb
jecxz
rcrl
mov
cmp
mov
push
dec
mov
scas
lds
push
jge
js,pn
cmpsb
add
mov
std
lods
gs
mov
roll
cmp
push
cwtl
adc
sub
insl
inc
add
inc
or
aam
jo
or
jo
movl
dec
xchg
bound
aam
pop
add
cli
rclb
std
ja
or
xchg
aam
clc
or
push
cmp
pop
adc
aam
and
das
ret
mov
adc
addb
out
cwtl
pop
sub
insb
sub
dec
pop
mov
pop
sub
push
jb
dec
mov
test
adc
lcall
jmp
or
gs
inc
les
cs
and
add
stc
int
into
in
push
out
inc
and
mov
mov
outsb
mov
ja
jns
add
push
mov
lods
test
popa
sbb
xor
mov
into
addb
gs
frstor
scas
xor
lahf
iret
mov
inc
iret
ljmp
push
cmp
mov
fbstp
mov
into
adc
jp
std
mov
push
mov
dec
lea
jg
cmp
ja
mov
fstl
or
ret
sbb
xchg
js
jo
insb
iret
mov
mov
dec
jae
sbbl
add
mov
cmpsb
mov
pop
push
push
enter
aaa
shrb
push
into
call
adc
movb
dec
or
add
xchg
scas
out
insb
or
mov
pop
jmp
je
push
mov
mov
std
inc
loopne
xor
cmpsl
jge
add
pushf
push
lds
mov
adc
pop
cltd
mov
int3
std
insb
loop
imul
add
dec
inc
push
out
push
addb
and
pushf
int
pop
das
xor
scas
add
ret
dec
pop
or
hlt
xchg
cmc
je
fucom
fists
adc
mov
lods
mov
or
lods
dec
xchg
cmpsl
shrl
stc
dec
test
xchg
jno
mov
test
scas
shrl
sarb
jecxz
push
and
mov
cmpsl
inc
daa
push
repz
sti
push
test
push
lods
mov
bound
js
and
outsb
sbb
pop
repz
shll
cli
in
sub
add
dec
cmp
sub
pop
xchg
test
sub
lret
adc
push
jb
add
dec
push
dec
lods
fisttpl
jnp
lods
dec
jno
into
cmp
lock
jecxz
pop
xor
xchg
or
ficoms
lahf
enter
xchg
sbb
adc
jg
rcl
fcoms
xchg
add
ds
push
pop
mov
pop
popf
fsubrs
mov
or
test
incl
loopne
pop
fcmove
or
pop
lret
arpl
pop
and
fdivrl
outsl
cmpsb
aam
or
sbb
gs
insb
aad
inc
adc
hlt
fidivrl
pop
xchg
push
jno
mul
cmpb
mov
push
or
bound
stos
in
dec
rcll
xor
fistpl
call
jno
mov
imul
jae
sbb
push
adc
rcrb
mov
mov
jno
xor
lods
inc
gs
mov
mov
push
pop
iret
pop
mov
ja
incl
insb
and
hlt
cmp
xor
add
xor
cs
push
mov
xor
pop
dec
out
bound
hlt
xlat
lea
das
lret
fadds
lock
xchg
or
inc
xchg
js
lods
sti
mov
adc
es
push
pop
int3
pushf
ficompl
in
jae
ss
pop
in
ss
cld
movsl
xchg
mov
popf
insb
push
es
xchg
xchg
fbld
out
fs
push
sub
or
lahf
pop
and
dec
loop
xchg
ficoml
out
sahf
sti
stos
sbb
adc
sub
mov
push
and
or
pop
sarl
push
mov
xorl
aam
xchg
lcall
mov
and
add
sub
sub
jbe
mov
dec
shlb
sbb
mov
pushf
push
negl
fsubs
shlb
popf
jnp
and
movsb
push
leave
adc
push
dec
sub
rol
inc
mov
and
mov
cmp
or
addr16
pop
sarb
scas
fwait
stc
inc
shlb
int3
daa
fnstsw
bound
sbb
daa
mov
add
xchg
xchg
aad
pop
push
mov
faddp
aaa
mov
dec
cmp
mov
cmp
push
daa
push
mov
or
or
aaa
icebp
arpl
imul
aad
jl
mov
imul
pop
aaa
lods
and
loope
jecxz
jno
rcl
mov
push
xchg
imul
adc
push
inc
lret
xor
lret
xor
jne
sub
out
sub
out
push
int3
mov
cmp
icebp
aas
adc
add
stc
jns,pn
outsb
cmp
dec
sub
sahf
pop
cmp
cmp
out
int
mov
add
stos
sbb
mov
jo
mov
insl
mov
and
pop
pop
mov
jbe
aas
jmp
subl
adc
leave
shlb
fstl
cld
int3
sti
js
sbb
bound
loopne
ret
divb
jecxz
adc
push
pushf
jge
jmp
jg
mov
ljmp
pushf
imul
mov
xor
dec
scas
sbb
pop
cmp
popf
adc
pop
decb
xchg
mov
movlps
cmp
jmp
jns
rorl
pop
push
out
lods
es
push
xor
mov
sub
push
sub
cmp
xor
dec
pop
or
adcb
and
scas
hlt
js
les
aam
push
add
scas
jmp
std
andb
sbb
inc
jb
cmp
inc
loope
daa
sub
mov
xorl
jbe
adc
xchg
out
dec
sbb
sub
daa
jns
jge
push
fnstenv
dec
insb
jns
ficoml
sbb
push
popa
icebp
mov
add
pop
inc
and
xlat
xchg
xor
mov
out
pop
fs
sbb
fiadds
push
and
cs
xor
mov
inc
mov
xchg
push
mov
jmp
pop
cmp
lret
lcall
xor
xor
addr16
push
es
mov
mov
or
cmp
test
int
subb
js
xor
sbb
inc
fcomip
int
andl
cmp
mov
mov
adc
xchg
loopne
push
mov
push
push
lret
xchg
stc
fwait
or
into
nop
sub
sbb
das
sbb
mov
sub
sbb
clc
add
jg
popa
push
mov
clc
xlat
push
out
sti
fdivs
dec
add
ss
mov
xchg
std
sbb
inc
mov
mov
xor
dec
lods
sbb
pop
insl
xchg
add
pop
mov
sahf
fmul
sbb
sbb
lds
and
das
and
jo
in
cmc
fwait
dec
adc
dec
es
xor
int3
inc
mov
pop
out
push
jne
lods
aaa
test
nop
insl
aas
in
mov
pop
or
mov
push
adc
push
mov
sti
rcl
inc
imul
pop
or
inc
adc
lea
cmpsb
lret
gs
and
addr16
lret
rorl
icebp
add
mov
je
clc
out
les
in
shll
lods
test
pop
sbb
jmp
loop
xor
repz
jl
les
ret
hlt
dec
adc
std
jp
dec
shll
mov
mov
movsb
pop
dec
sarb
fidivrl
adc
sbbb
adc
pop
pusha
xchg
lea
lods
jmp
stos
hlt
xchg
testb
repnz
and
sub
xchg
xchg
cmp
dec
jp
mov
lea
mov
add
add
sub
insl
aaa
daa
aam
mov
sahf
cli
into
imull
or
enter
inc
adc
mov
cmp
and
cmp
dec
dec
or
loopne
fisttpll
stos
dec
add
sub
enter
cli
adc
or
lds
cltd
test
nop
adc
xchg
mov
pushf
sbb
push
sub
xor
lret
push
stos
xchg
insb
scas
mov
or
ljmp
pushf
inc
addr16
enter
in
repz
cmc
mov
dec
addr16
jne
ficomps
mov
jne
push
push
cli
icebp
fiaddl
or
movsb
mov
jne
jge
cwtl
or
clc
or
fidivl
xchg
fdiv
mov
ficoms
jbe
sub
adc
or
cmpsl
jno
xchg
je
sbb
inc
adc
imul
cmp
stos
mov
cmp
pop
add
into
bound
add
or
jne
test
mov
popa
arpl
xlat
pop
add
jns
aad
cmc
dec
stos
push
cltd
incl
inc
lds
nop
sahf
and
in
xor
pop
pop
mov
mov
dec
popa
nop
cmp
mov
lret
jl
lods
stos
xor
cmp
insb
and
xchg
and
dec
mov
repz
or
or
add
push
add
je
mov
xor
cmp
mov
sub
lods
jg
enter
xchg
test
dec
mov
scas
lahf
ss
orb
push
hlt
or
das
dec
aad
xchg
sahf
iret
sbb
inc
test
mov
das
cs
cltd
inc
insl
mov
punpcklbw
mov
or
push
mov
outsb
call
push
aam
in
bound
jns
sbb
ds
or
adc
mul
mov
mov
push
or
mov
in
loopne
lret
stos
push
push
mov
mov
jp
xchg
pop
xchg
subps
lods
pop
out
in
dec
data16
push
lret
pushf
pop
addl
out
jp
cld
push
jb
lods
dec
sbb
sbb
push
out
int
es
je
lret
sub
jg
in
or
jne
mov
mov
hlt
inc
shll
mov
sub
jb
into
mov
int3
inc
sbb
sti
mov
and
xchg
mov
sarb
into
out
clc
push
enter
rol
pusha
mov
xchg
cmp
lods
and
mov
dec
mov
add
xchg
cs
dec
popa
xchg
out
inc
cwtl
add
mov
sbb
lret
aam
mov
ja
fmull
xchg
out
das
test
lret
enter
testb
cmpb
insl
xchg
iret
or
loope
int3
mov
cmp
adc
aam
mov
pushf
cmp
add
fimull
enter
add
cltd
sub
ss
loope
dec
test
out
leave
or
out
insl
das
xchg
push
or
sbb
add
inc
leave
stos
je
stos
hlt
mov
dec
push
jbe
xchg
push
dec
outsb
mov
loope
add
scas
xlat
aaa
idivl
inc
lods
pop
fcmovu
jne,pn
sub
sarb
adc
sbb
imul
xor
xor
pop
mov
fwait
jnp
adc
sub
dec
lahf
sbb
jns
or
cld
adc
out
sbb
mov
jge
mov
test
movsl
sti
sbb
add
cmp
insl
push
and
js
ljmp
outsl
dec
and
mov
add
iret
inc
pop
xchg
icebp
pusha
xlat
sub
scas
xor
fwait
adc
adc
mov
mov
fcomps
and
outsb
mov
or
cmp
ret
add
popf
addr16
dec
mov
mov
or
in
aaa
jp
jb
mov
adc
sub
sub
out
enter
and
mov
xor
pop
std
xor
and
cmpsb
les
pop
inc
adc
fdivl
cmp
popa
stc
inc
mov
rcrl
pushf
cmp
mov
sahf
xor
lods
lcall
test
popf
sbb
sub
cwtl
jbe
testl
fwait
add
inc
and
cmp
imul
add
mov
imulb
sti
mov
pop
mov
mov
mov
fisttps
in
jle
sbb
dec
pop
outsb
test
or
dec
stos
sti
jmp
js
xchg
push
leave
push
mov
std
in
sahf
jno
leave
jp
sbb
dec
mov
movsb
cmp
shl
sahf
add
lds
lret
sub
push
imul
mov
pop
push
add
inc
call
inc
jmp
or
pop
cmc
shll
jno
mov
add
mov
in
xchg
inc
lods
je
cmpsb
fwait
repz
jns
add
and
xor
jmp
mov
push
mov
sti
adc
and
adc
inc
adc
jmp
out
test
sbb
add
loope
repnz
in
mov
movsb
xchg
jge
cmp
and
xor
or
mov
add
or
or
out
sahf
pop
insb
push
loopne
ljmp
leave
mov
fwait
popa
popa
or
and
pop
daa
mov
dec
inc
dec
popf
sub
sub
add
arpl
cmp
mov
fwait
mov
mov
mov
dec
roll
push
ss
lods
jb
mov
and
push
ss
push
cmp
xchg
push
mov
xor
inc
dec
out
movsb
jne
jno
rcrb
cli
rclb
fstl
dec
scas
je
shrl
rorb
fldenv
cs
xchg
fsubr
insl
rorb
aas
scas
js
push
add
repnz
stos
stc
inc
fs
test
popa
cmc
add
repnz
add
js
mov
loop
dec
mov
xor
fisubrs
adc
repnz
sbb
adc
test
out
adc
aas
push
push
dec
push
or
loope
xchg
jp
mov
sub
adc
inc
shlb
lret
dec
enter
sub
adc
shrb
sub
jmp
stos
popf
mov
mov
fcmovbe
mov
imul
cld
scas
movb
ss
lods
or
mov
mov
xchg
sahf
popf
fiaddl
icebp
stos
pop
shlb
cs
mov
cmp
aad
rorb
inc
xor
cmpsl
popf
push
call
jnp
jbe
mov
into
jno
mov
sub
out
add
ljmp
xchg
xchg
inc
decl
das
and
push
pmulhw
pop
or
dec
or
pop
movsb
aam
or
in
cmp
fwait
add
mov
dec
pop
in
jp
xchg
inc
cwtl
out
sbb
cmp
movsb
mov
in
xor
test
adc
cs
call
repz
aad
or
sub
adc
jecxz
out
ret
or
add
pop
stos
test
push
test
cwtl
push
jno
sub
aad
lcall
sub
push
lods
lcall
in
xor
in
test
sub
les
imull
jmp
xchg
ds
shl
aas
and
testl
push
addr16
push
fmuls
out
daa
mov
scas
inc
xor
pop
xor
adc
addr16
rcll
es
sbb
adc
add
out
pop
inc
pusha
rorl
scas
pop
fldcw
popa
lcall
out
ljmp
mov
stos
cmp
xchg
jo
xchg
pop
adcl
mov
in
jae
jo
dec
mov
xchg
add
int3
sub
mov
mov
popa
push
mov
cmpsb
imul
lea
pop
adc
mov
test
pop
mov
mov
jl
sbb
sbb
lds
popf
cmp
ret
stos
ret
push
push
fs
test
dec
inc
notl
fadds
sub
fidivl
mov
push
out
mov
inc
cmc
fiaddl
mov
data16
or
clc
mov
and
jnp
xchg
aam
adc
jnp
vsubss
xchg
std
in
les
push
and
inc
cltd
iret
adc
loop
add
idiv
mov
stc
subl
and
push
shlb
popf
push
imul
cmpsb
cmp
cmp
sbb
xchg
or
and
mov
pop
push
ja
xchg
mov
lock
jo
in
out
cmp
dec
movsl
xchg
push
outsb
fprem
or
std
inc
jp
pop
adc
cmp
inc
mov
adc
idivb
xchg
xchg
and
push
out
cmp
iret
test
aaa
repnz
test
mov
loop
outsb
xchg
stc
stos
xchg
cmp
fs
dec
pushf
and
mov
out
mov
push
cmp
lea
sub
aaa
and
daa
mov
out
shlb
sub
insl
lret
and
cmp
xor
dec
push
testl
rcrb
data16
faddl
mov
lods
and
adc
pop
mov
or
xchg
push
scas
bound
push
adc
pop
jno
push
insb
mov
pop
test
adc
dec
push
adc
sub
js
push
dec
pop
adc
cmc
pop
dec
les
popa
pusha
mov
stos
enter
loope
xchg
or
add
jnp
cmp
pop
aaa
inc
sbbl
cmpsb
jecxz
les
and
xchg
test
fistpll
arpl
outsb
add
mov
pop
jge
mov
cmc
notb
or
add
ljmp
fldln2
mov
mov
add
inc
orb
test
lret
in
into
pop
pop
adc
mov
arpl
fildll
imul
adc
cmp
or
mov
lahf
jle
testb
mov
ja
jmp
cmp
xor
test
sub
ret
dec
sbb
cmp
xchg
jo
loope
mov
rolb
stos
add
cltd
lahf
cmp
addl
sbb
icebp
mov
bound
xchg
push
pop
loopne
lea
jg
ja
lret
cli
divl
pop
push
lret
pop
pop
mov
ret
mov
adc
jle
stc
ret
je
mov
jl
ret
imul
loope
jb
cmp
out
dec
cmp
shll
cld
adc
mov
mov
or
ret
inc
cld
jle
sbb
mov
mov
inc
daa
adc
pop
rol
out
mov
pop
mov
je
fnstcw
insl
xchg
sbb
dec
pushf
sub
jmp
lds
inc
and
in
out
mov
cmp
scas
leave
adc
xor
out
mov
push
divb
or
inc
inc
in
out
bound
push
push
shl
rol
sbb
cld
add
and
sub
icebp
sti
mov
je
pop
push
cmp
icebp
out
outsb
ss
jns
enter
insl
divb
or
jge
xor
lods
js
arpl
mov
inc
cmp
das
jbe
out
stos
clc
lea
mov
jmp
sti
loop
cmp
or
xchg
negb
adc
or
sbb
addb
mov
ret
call
push
and
and
or
iret
movsl
xchg
lods
push
dec
inc
inc
not
mov
std
lea
or
jge
js
xor
inc
add
dec
dec
outsb
push
repnz
cmp
add
and
inc
jmp
mov
loopne
adc
xchg
cmp
inc
fldl
xchg
imul
cmp
cli
dec
test
sub
arpl
ja
outsb
ret
pop
mov
and
cltd
scas
mov
pop
addr16
jnp
imul
mov
mov
popf
add
xor
inc
adcb
lods
out
cld
mov
pusha
dec
jae
por
test
mov
pmaddwd
add
scas
sbb
rcll
inc
jge
or
ss
add
cmp
mov
xor
outsl
jmp
mov
mov
call
dec
xchg
aam
mov
mov
scas
lcall
fldpi
movsb
int3
lret
ret
lods
jmp
or
mov
fildll
scas
inc
out
dec
push
adc
mov
mov
jb
and
repz
jb
adc
leave
inc
mov
repnz
inc
mov
jp
mov
pushf
jmp
loop
insl
jae
xchg
and
cwtl
adc
icebp
flds
dec
js
int3
aaa
cmp
push
in
cwtl
push
mov
mov
xchg
outsl
pop
inc
ret
xor
lahf
adc
inc
jl
roll
dec
pop
inc
in
xchg
test
mov
mov
jno
adc
aad
xchg
leave
pop
mov
cli
xorl
xor
int
pop
push
mov
lods
incb
lret
mov
shll
rorl
fnstsw
mov
sub
cs
imul
mov
or
jecxz
pushf
adc
daa
adc
sub
xor
imul
mov
cmp
leave
aad
test
mov
push
in
pop
out
jecxz
cli
pop
mov
out
jae
dec
incl
mov
pop
je
inc
sbb
stos
test
lret
mov
out
mov
rorb
or
xorl
xor
int
or
inc
arpl
jns
and
arpl
outsl
mov
adc
hlt
mov
sub
jecxz
xor
push
add
cwtl
clc
das
stc
lea
cld
jl
pop
scas
mov
in
and
mov
jge
orb
mov
xchg
push
adc
mov
or
out
pop
out
dec
sub
enter
pop
clc
rol
rdmsr
out
add
daa
xor
jb
int3
jg
test
mov
dec
inc
pop
stos
or
inc
rorl
mov
insb
aad
push
dec
lahf
sub
cmp
mov
mov
cmpsb
add
jge
xchg
pop
push
mov
jne
xchg
and
lds
cmpsl
push
sti
sahf
data16
cmp
shll
test
aad
xchg
es
jb
cmpsb
and
fs
sbb
cli
imul
push
cmc
movsb
inc
outsl
loopne
loope
inc
push
xorb
insl
push
push
aad
mov
jp
mov
pop
repnz
imul
enter
push
pusha
mov
push
mov
xor
jae
repnz
bound
cltd
inc
ds
jmp
pusha
xor
mov
stos
rol
lret
push
push
mov
sub
loope
mov
cmpsl
unpckhps
lea
mov
inc
pop
iret
lock
jecxz
add
mov
adc
gs
imul
aad
pop
mov
cmp
cmpl
or
js
mov
stos
ss
xchg
fiadds
je
jl
int
sti
mov
inc
cmp
fisubrs
xor
repnz
cmp
subl
lods
ret
cmp
inc
cwtl
xchg
jae
loop
outsb
lret
das
ja
mov
jp
fildl
imul
cmc
out
fwait
bound
mov
xchg
mov
stos
pop
inc
mov
jmp
bound
pop
jecxz
add
xchg
cltd
add
mov
jge
outsl
je
pop
and
mov
outsl
jmp
es
jg
jmp
mov
add
jmp
or
jne
ret
lahf
fstpt
jmp
sub
popf
sub
add
sbb
mov
jecxz
sbb
je
fdivs
in
lock
xchg
into
aam
insb
bound
jae
dec
es
xor
enter
outsl
adc
jns
test
outsl
xor
testb
loope
fsts
push
dec
sarb
and
cmp
insl
mov
xchg
sbb
lods
jp
pop
test
cltd
dec
insl
fistl
push
mov
and
scas
sub
jno
test
hlt
subb
stos
xor
adc
pushf
or
or
nop
fdivs
inc
addr16
mov
leave
push
adc
rcll
cmpsl
out
xor
dec
push
or
lahf
movsb
pop
imul
pop
xchg
cltd
enter
and
mov
push
ss
iret
dec
lret
or
dec
popf
push
inc
add
out
add
sub
imul
add
aas
imul
jl
scas
addr16
sbb
rol
bound
push
sbb
mov
xor
scas
jb
scas
push
test
leave
outsb
aam
in
negb
mov
add
cmc
and
add
mov
cwtl
sub
sbb
ljmp
mov
mov
cmp
adc
pop
push
imul
sub
mov
ds
and
mov
xchg
addl
push
sahf
dec
cmc
lret
addr16
stos
xor
xchg
int
ljmp
xor
mov
sub
mov
push
mov
fnstsw
dec
ret
lds
sbb
jp
mov
ja
clc
or
btsl
sbb
jge
lods
cltd
push
cmpsl
mov
adc
repz
outsb
cs
pop
sarl
stos
inc
ret
cmp
arpl
mov
sub
push
cmp
and
mov
push
cmp
mov
sbb
je
cld
es
mov
mov
and
adc
jg
lret
fsub
mov
xor
xchg
dec
and
aam
mov
or
cld
inc
lods
clc
ror
lret
jae
xchg
adc
sub
insl
push
lds
sub
jge
cmp
aaa
jg
pop
cli
and
cs
in
aaa
ljmp
fsubl
fildll
mov
add
push
pop
aaa
aam
test
add
jl
pop
sub
loopne
andb
outsl
cmp
xor
add
test
or
out
imul
das
in
iret
fsubl
cmp
push
or
mull
inc
loop
mov
mov
cwtl
mov
fwait
push
or
or
xchg
sahf
mov
imull
cmpsl
sbb
popf
sub
push
mov
xchg
les
sub
bsr
cmp
mov
ret
es
jp
sbb
iret
jl
inc
adc
dec
or
inc
sbb
cmc
push
adc
mov
shll
or
inc
pop
mov
add
jmp
imulb
daa
push
imul
inc
jl
and
xchg
fdiv
xchg
cmc
jp
in
std
lods
inc
movsl
ds
test
mov
gs
push
hlt
pusha
mov
shrb
je
imul
hlt
cmpl
jno
inc
mov
push
sti
inc
inc
inc
jns
dec
mov
xor
pop
mov
mov
sub
inc
stos
sub
jg
inc
enter
mov
or
adc
xlat
rcrb
mov
or
lcall
and
prefetch
icebp
lret
pop
sbb
scas
adc
sub
flds
xorl
incl
dec
popf
js
sbb
mov
filds
jle
add
jae
aaa
sti
mov
insb
add
jp
in
out
testb
pop
lods
call
cmp
xchg
shll
cli
enter
push
daa
and
inc
xchg
cmp
jge
mov
shlb
mov
inc
sub
mov
sub
or
dec
dec
fstl
loope
ficoml
popf
pop
andl
jle
loopne
fimuls
pushf
and
test
pop
add
sar
pop
mov
xchg
pop
lds
repnz
or
mov
lock
sub
insl
gs
xor
jle
data16
insb
pop
mov
dec
mov
lcall
pop
aad
and
les
cld
sbb
jmp
roll
pop
test
xor
sbb
mov
or
mov
jns
ret
popf
pop
inc
xlat
jg
push
sbb
pop
out
inc
pop
xchg
repnz
int
xchg
mov
push
cld
push
roll
mov
xchg
shlb
push
ds
xor
insb
xchg
xchg
pop
mov
jge
in
mov
adc
cli
xorb
fs
sbb
sti
arpl
mov
insb
pusha
test
lods
sbb
xor
push
scas
mov
cmpsb
pmaxub
dec
lret
adc
sti
push
cld
cmp
stos
stc
lret
loope
pop
jmp
fimull
mov
pop
xchg
fdivrs
ret
and
inc
imul
xor
mov
lahf
adc
pop
pusha
lods
mov
fldt
pop
pop
pop
js
mov
and
add
nop
pop
xchg
int3
je
dec
and
cli
pop
or
mov
xor
push
imulb
or
cs
loope
inc
push
lcall
jno
adc
pop
cwtl
push
jbe
mov
rcrb
jmp
int
arpl
test
lret
mov
imul
inc
cmp
cmpsb
les
dec
mov
pop
mov
je
cmc
push
dec
sub
fisubrs
xchg
xor
ljmp
inc
and
cmpsl
add
cltd
jp
xor
mov
mov
cli
adc
cmc
jae
xchg
mov
sti
mov
dec
adc
mov
push
clc
es
clc
mov
jl
dec
pop
fs
aad
xor
sbb
fdivrl
loopne
mov
adc
push
sahf
sti
xchg
sub
ja
jne
mov
out
pop
es
repz
xlat
loop
movzbl
xchg
jl
mov
xchg
push
xchg
fadds
mov
ljmp
or
mov
testb
cmp
scas
xchg
movsb
xor
sbb
and
dec
cld
inc
pop
arpl
mov
aad
imul
sarl
insl
out
aad
mov
mov
or
leave
out
loope
xor
inc
fnsave
jo
jmp
cwtl
pop
pop
enter
push
xor
jno
adc
arpl
stos
lcall
pop
xchg
xchg
mov
mov
popf
jb
clc
fwait
push
dec
je
xor
in
lods
inc
cmp
lahf
mov
in
jnp
and
dec
aam
addr16
cwtl
cmp
pop
fdivrs
fdivrl
lret
dec
ljmp
subl
sbb
dec
sbb
outsb
call
xchg
addl
mov
test
clc
jmp
fs
ret
je
xor
loopne
cmp
jecxz
xor
lods
imul
pushf
dec
popa
mov
movsb
adc
in
ret
js
enter
mov
push
xchg
in
fdivrp
int3
cltd
es
ja
faddl
pop
xlat
pop
out
daa
jmp
or
sbb
jb
mov
leave
sub
jns
inc
xchg
pop
mov
fucomip
dec
mov
or
jnp
lret
pop
cwtl
cmpsb
clc
jl
stos
lret
inc
dec
int
inc
xchg
cmp
pushl
sarb
or
or
mov
out
out
xor
jmp
stos
and
popf
les
sbbl
mov
adc
pop
jmp
jle
dec
jmp
loope
jecxz
mov
xor
out
mov
cltd
in
push
int3
dec
clc
jecxz
cmp
mov
push
enter
nop
es
shrb
jo
inc
das
std
adc
andb
lds
das
add
jo
or
mov
jns
ret
divl
sub
imul
sub
adc
pop
or
movsb
sbb
xor
loop
out
sub
call
das
mov
fldl2t
mov
cmp
add
push
push
mov
cmp
out
xor
fwait
jge
jmp
push
jae
outsl
adc
adcl
fstpt
fisubs
push
sti
xor
lret
jo
scas
and
jns
mov
pop
iret
mov
pop
add
imul
test
in
adc
nop
mov
fcompl
and
push
mov
sub
ja
push
pop
or
mov
push
scas
add
push
inc
ret
aas
mov
fcompl
popf
sub
movsl
pop
cmc
pop
orb
push
inc
dec
add
jns
mov
aad
jg
mov
adc
sbb
fwait
jp
and
lahf
insb
enter
inc
or
fcoms
jno
inc
dec
aad
inc
or
xor
jnp
push
inc
jecxz
cltd
push
adc
mov
and
or
cld
loopne
adc
enter
in
sub
xchg
mov
cmp
das
leave
adc
std
mov
xchg
mov
mov
mov
xchg
cmp
inc
fwait
in
xor
ds
adc
cmp
test
dec
pop
pusha
sahf
sub
arpl
pop
mov
stos
jmp
inc
mov
adc
adc
mov
pusha
push
shll
jl
cmovp
and
and
mov
fstpl
jecxz
push
imul
daa
mov
loope
pushf
push
mov
sbb
add
mov
lods
and
add
rcrl
cwtl
and
sarl
cmc
jne
and
push
andl
jle
scas
inc
dec
loope
mov
clc
xor
push
mov
aam
enter
repnz
fcompl
sub
jl
cmp
arpl
adc
xor
sub
dec
lds
pop
cli
push
cmp
and
sbb
fcmovnbe
popf
xchg
mov
pop
mov
inc
cmp
push
cmp
dec
pushf
push
bound
nop
inc
push
insl
pop
inc
xor
xchg
push
jae
or
ret
pushf
push
je,pt
pop
cli
adc
and
je
dec
hlt
adc
push
or
cmp
lock
jle
mov
ret
sbb
sarb
push
jb
enter
insb
movsl
jmp
jge
inc
xor
push
jno
mov
xor
xchg
mov
sbb
daa
mov
dec
ror
cmpsl
jg
aam
dec
mov
jnp
aaa
pushl
lret
mov
and
lods
xchg
std
fisubrl
mov
stc
push
std
popf
lock
and
push
pushf
mov
or
jg
push
mov
inc
cmp
in
shl
inc
jb
sbb
mov
push
and
ret
aas
xchg
loope
or
leave
pop
mov
or
inc
scas
idivl
clc
or
pop
dec
dec
rclb
imul
jge
aam
jns
lods
mov
lock
aas
xor
xchg
mov
out
or
lea
sbb
icebp
sub
sbb
ljmp
add
xchg
std
cmp
cmp
out
movb
das
cmp
add
adc
adc
jmp
icebp
lret
lret
rorb
cmp
push
jmp
daa
iret
fnstsw
ret
jno
dec
loopne
aad
xchg
push
divl
cwtl
ja
cmp
push
aad
loop
insb
mov
fldcw
gs
mov
cmp
fadds
fistpl
jns
pop
jp
cmp
repnz
pop
shrb
jae
scas
sub
xchg
xor
lods
xlat
lea
cmc
adc
into
cmp
aaa
mov
cmpsl
jnp
push
imull
inc
mov
scas
push
hlt
mov
add
inc
gs
ret
arpl
shl
aad
sbb
and
nop
dec
sbb
icebp
outsb
jb
lds
jbe
xor
mov
cwtl
mov
sbb
icebp
lret
lret
frstor
add
jp
mov
icebp
popf
sti
xor
jecxz
inc
add
jnp
dec
adc
test
cs
sbb
push
test
loopne
jg
loop
sarl
dec
mov
mov
sbb
and
mov
inc
jmp
mov
mov
xchg
out
xchg
inc
mov
fsubs
pop
cwtl
adc
mov
xchg
cmpsl
mov
movsb
jb
and
das
dec
daa
pop
aaa
mov
fsubrs
mov
xor
add
movsl
arpl
dec
cwtl
sub
fldt
inc
loop
xchg
in
pop
lret
inc
dec
out
in
jb
pop
sub
inc
mov
mov
jno
jns
cmpsb
mov
add
sbb
aas
xor
mov
cld
dec
jbe
jne
mov
int3
imul
inc
lods
outsl
ret
and
and
xor
testb
push
or
cmp
hlt
and
fwait
push
mov
jns
push
push
push
mov
xchg
mov
pop
xchg
cmc
arpl
sub
and
stos
scas
adc
outsb
xlat
cmp
js
mov
fcomi
fwait
int3
shl
mov
lea
pop
into
clc
dec
add
cld
pop
ss
mul
xor
push
aas
ja
jmp
andb
lret
dec
fs
sub
or
fidivrl
stc
fdivl
jno
or
xor
js
in
pop
addl
cmp
scas
jg
scas
mov
and
aaa
bnd
aas
in
sub
out
dec
xor
xchg
and
loope
push
push
cmp
outsb
pop
adc
sbb
je
push
call
add
jl
fcoms
and
into
sbb
mov
imul
sbb
fisubrl
adc
or
or
lods
arpl
and
out
mov
add
ljmp
mov
mov
sub
test
enter
imul
lods
daa
jmp
sahf
lods
ds
cmp
pop
or
jae
adc
xlat
push
xlat
test
push
movsl
lcall
outsb
orl
xlat
xorb
add
mov
inc
mov
repz
mov
ds
or
int
in
addr16
movsb
fcmovnbe
pop
jne
pop
sbb
rcrl
jo
inc
jge
gs
xchg
cli
add
pop
cmp
ja
jle
mov
sarl
cmp
test
leave
push
pop
or
dec
pop
cmp
scas
popl
pop
subl
frstor
mov
mov
aam
ss
push
xchg
cli
xchg
or
repnz
push
sbb
cmp
fwait
push
std
loopne
xchg
cmp
jae
fildl
imulb
add
push
cld
xchg
mov
xchg
mov
push
dec
mov
or
ljmp
xchg
out
arpl
sub
cli
sti
adc
and
jno
sahf
and
add
rol
or
push
int
subl
cmp
scas
mov
sub
pop
dec
icebp
or
gs
fildll
jmp
push
stc
dec
fdivl
in
popf
lds
dec
sub
cmp
popf
dec
xchg
rcrb
adc
mov
fisubs
cwtl
shrl
inc
cmp
fmuls
ret
sbb
adc
std
bound
lahf
testb
sub
jae
sbb
insb
push
pop
pop
in
in
push
push
or
lret
iret
mov
dec
fsubs
sbb
pushf
adc
mov
lods
rclb
cmp
dec
outsb
lea
cmpsl
nop
out
mov
bound
xor
andl
cmc
xchg
repz
ja
popl
sti
mov
sub
xor
xor
imul
repnz
sub
insb
push
inc
inc
inc
stc
dec
scas
fs
cld
mov
xchg
inc
sbb
lcall
popf
ds
out
mov
sub
inc
inc
inc
addr16
sbb
and
cmpsl
popa
or
cltd
rol
ljmp
cli
scas
jb
push
xor
call
add
rolb
ds
loopne
mov
pop
test
sbb
inc
cwtl
pusha
dec
stos
inc
lret
mov
mov
insb
test
out
push
arpl
push
sar
jge
cmp
js
int3
insl
fstpl
daa
aam
loop
adc
add
lds
push
movsl
xchg
xor
outsb
ljmp
mov
push
stos
repz
ret
stos
pop
movsb
sub
mov
pop
push
dec
shll
mov
push
call
mov
push
dec
lods
arpl
push
call
aad
jb
mov
aas
inc
jo
mov
xor
pop
fwait
clc
adc
pop
push
mov
pusha
data16
pop
dec
add
ret
movsb
add
sub
jno
loope
aad
sub
xor
orl
mov
dec
decl
dec
xchg
scas
mov
pop
call
ja
iret
push
cmp
orl
rcl
push
fldcw
data16
jecxz
cmp
mov
arpl
add
mov
ds
cmp
jl
xlat
mov
neg
mov
mov
cmp
pop
jmp
shll
xchg
push
xor
xadd
fcomi
push
push
lahf
adcl
or
push
and
jno
sar
xchg
and
hlt
shll
mov
inc
shll
pushf
in
inc
sbb
cld
xchg
jge
push
iret
stc
leave
stc
jmp
hlt
jne
mov
push
jb
xchg
js
push
jno
jo
jmp
lret
cmp
imul
mov
or
das
pop
call
cmpsb
sahf
fwait
lock
cmp
xchg
outsb
and
xchg
sahf
mov
xor
fiadds
and
adcl
cli
sbb
mov
cmp
sbb
jecxz
shlb
idivb
iret
pusha
je
mov
bound
adc
cmp
test
dec
pop
xchg
jno
sub
notl
lret
dec
test
jecxz
push
push
ffreep
mulb
inc
cmp
orl
int3
push
rolb
dec
loop
shlb
outsl
loopne
push
jb
inc
jl
in
cmp
or
mov
aad
pop
xchg
mov
aas
jp
cs
adc
xchg
jbe
fwait
incl
cmp
push
xorl
mov
mov
push
mov
adc
mov
sarl
cmpsl
adc
jb
and
stos
inc
lret
and
jbe
xor
adc
arpl
add
adc
add
dec
ja
sahf
data16
mov
lods
dec
adc
notl
push
mov
jmp
xchg
push
ficompl
popf
sub
adc
inc
and
sbb
in
or
xchg
shrl
in
lret
ljmp
sbb
inc
in
cmc
cwtl
push
imul
stos
stos
test
or
test
xchg
lods
or
lcall
xchg
adc
loop
cmp
and
idivl
fwait
push
in
inc
cs
loop
sbb
pop
es
mov
mov
lret
push
push
pop
add
out
push
xchg
mov
jge
stc
aad
jae
dec
mov
in
mov
pop
imul
inc
mov
pop
cmp
pop
iret
dec
jnp
push
cld
mov
pop
cmpsl
dec
mov
jnp
cltd
push
mov
and
sub
fs
adc
out
adc
pop
mov
mov
sbb
add
aaa
push
xchg
and
das
push
sahf
xchg
cmpsl
pop
jb
arpl
nop
inc
pop
sbb
in
jge
pop
xor
stos
cld
cmp
add
mov
frstor
inc
fsubrs
mov
mov
or
cwtl
jl
cwtl
inc
ja
inc
push
popf
ds
sbb
testl
fsubrl
fcoml
scas
or
push
xor
xchg
and
les
bt
push
mov
or
addps
leave
sahf
dec
add
mov
cltd
sbb
fstpt
xor
insb
aaa
popa
xchg
fsub
rorb
cmpsl
xchg
sahf
sub
mov
sbb
imull
ljmp
scas
inc
jmp
fdiv
dec
fdivs
inc
xor
aas
xor
bnd
jecxz
repnz
ret
ret
jmp
out
aas
push
and
xchg
sub
mov
sbb
test
xchg
arpl
xlat
push
push
out
mov
js
sti
sbb
lcall
add
xor
addb
fnsave
leave
cs
aaa
cmp
pop
popa
xorl
in
sbb
mov
jnp
xchg
mov
and
into
mov
inc
out
fiadds
nop
ja
mov
rclb
cmpsl
pop
mov
xchg
push
mov
shll
add
jno
add
xchg
in
mov
cli
xchg
pusha
sahf
inc
and
mov
adc
rclb
pop
lock
cmp
lock
jle
xchg
lahf
imul
in
out
jb
sarb
sub
idiv
testl
add
xchg
mov
and
inc
add
movsl
sbb
pop
mov
dec
sub
imul
pop
andb
bsr
sti
xor
icebp
and
cmp
sbb
pop
fldt
out
pop
mov
cltd
into
int3
jnp
out
iret
int3
or
outsl
pop
mov
test
aas
add
adc
pop
fdivrs
xlat
mov
out
mov
bound
and
push
sbb
cld
xacquire
arpl
cmp
scas
and
dec
outsl
sbb
adc
sub
mov
cmp
stc
xchg
jl
hlt
jnp
and
sub
pusha
lret
dec
xchg
out
sub
ljmp
imul
sub
das
stc
mov
rcrl
mov
mov
dec
inc
mov
test
xchg
adc
push
jno
les
test
sbb
jmp
iret
mov
fidivl
pop
ret
mov
cmp
lods
push
xchg
addl
aas
pop
mov
pop
xor
lock
sbb
aaa
dec
testb
dec
jb
jb
push
cmpsb
idivb
xchg
pop
xchg
xchg
sbb
dec
iret
mov
lods
in
ss
xor
test
movsl
outsb
es
xlat
inc
stos
into
test
cmpsl
mov
dec
orb
or
pop
inc
outsb
pop
dec
sub
aaa
mov
fisubs
jnp
or
push
jbe
lods
je
xchg
hlt
push
stos
rclb
xor
nop
std
fmulp
inc
call
cmp
gs
scas
lock
xlat
dec
fs
jno
lods
adc
push
fldenv
inc
add
mov
clc
gs
xchg
sbb
mov
divl
mov
inc
out
clc
xchg
mov
fcomi
lret
pop
lods
or
cmp
in
popa
rorl
pop
dec
mov
jle
xchg
xchg
stos
xchg
or
lods
inc
popa
and
jmp
pushf
rcll
xlat
ret
test
pop
push
ja
inc
in
push
push
jbe
and
cmpsb
cmpsb
mov
cmp
add
fsub
fisttpl
push
mov
ret
inc
ljmp
jg
add
xchg
test
cmp
popf
imul
dec
mov
pop
push
iret
sbb
cmpsb
dec
dec
pop
mov
adc
adcb
in
lds
cmp
push
pusha
icebp
xchg
shlb
fmull
out
cli
loop
stos
out
lods
mov
mov
mov
test
push
cmp
xor
push
imul
push
addr16
push
ja
sahf
pushf
inc
mov
sbb
enter
data16
push
fnstenv
lods
out
xchg
jge
out
or
and
and
shr
adc
sbb
int3
fisubs
stc
pusha
mov
and
jns
ljmp
sbb
mov
mov
inc
les
sub
cmp
dec
xor
test
and
cwtl
push
push
lds
ret
push
mov
mov
sbb
xorb
xchg
pop
testl
mov
jg
sub
lods
pop
arpl
xor
cmpsb
xor
test
cmc
xchg
scas
int
dec
lahf
sahf
push
jmp
xor
sbb
pop
loopne
outsl
movd
push
push
movsb
pop
xchg
add
cmp
mov
push
cltd
or
in
lahf
je
addb
imull
in
jmp
mov
xchg
loopnew
push
fistpll
sub
rcll
insl
shl
adc
dec
aas
cmc
xor
loop
dec
mov
call
xchg
fidivl
xchg
and
fisttpll
cltd
lcall
push
mov
mov
mov
add
ja
sbb
dec
adc
testb
in
fcmovb
sbb
out
jmp
add
dec
enter
leave
fs
jecxz
dec
xor
pusha
cmp
scas
sbb
sar
loope
fiaddl
mov
sbb
sbb
movsl
ret
sbb
addl
in
adc
mov
mov
or
xchg
ficomps
call
push
dec
jae
iret
rep
out
stc
jl
adc
ret
push
xchg
push
dec
sahf
pop
adc
popa
push
xor
outsl
mov
addr16
gs
shrl
push
mov
sbb
jns
or
xchg
mov
and
out
xchg
inc
insl
mov
int
idivl
mov
jb
bnd
push
pop
in
mov
push
aaa
jae
dec
sbb
sub
rcll
daa
mov
movsb
aas
ss
jno
cltd
mov
xchg
aad
mov
in
and
jge
lcall
insl
hlt
mov
mov
push
cli
cmc
gs
bnd
mov
jo
jne
mov
sbb
stos
aas
fucomip
or
jmp
pop
icebp
stos
test
adc
mov
test
stc
jo
imul
or
mov
sbb
inc
subb
imul
repnz
out
mov
mov
je
and
fisttpll
cmp
aas
dec
ss
aas
lret
xchg
push
data16
push
inc
push
jle
pop
andl
out
xchg
lret
or
test
addr16
int3
mov
lds
jb
lock
int3
popa
test
add
push
shl
daa
sub
mov
pop
pop
adc
iret
dec
pop
inc
sub
sbb
pushf
fisttps
jb
mov
mov
mov
pushf
enter
push
inc
test
mov
adc
mov
fmull
aad
sub
in
mov
enter
sub
lock
shrb
in
js
mov
jecxz
adc
fists
leave
setg
ret
out
jns
sbb
movsb
rcrl
mov
scas
cli
cmpsl
scas
mov
push
inc
shl
sub
das
dec
cmp
jmp
pop
ror
xor
imul
inc
shrl
mov
fiaddl
xor
mov
adc
into
mov
mov
outsl
fmul
and
out
adc
pop
push
fiaddl
bound
addr16
adc
bound
jne
add
dec
rcr
or
sbb
pop
nop
add
dec
jle
pushf
adc
pop
stos
pop
pop
mov
lds
xchg
pop
and
mov
fists
std
push
inc
cmp
sbb
push
push
leavew
jno
cmp
out
or
stos
add
pusha
mov
inc
scas
pop
adc
push
cmp
pop
scas
das
inc
pusha
dec
cmp
xchg
cmc
xor
movsl
push
lret
xchg
pusha
push
jo
je
cmp
data16
psadbw
jns
loope
sbb
sbb
sarl
sbb
stc
mov
jb
sarb
mov
sub
adc
push
mov
add
jne
ljmp
xor
sbb
inc
adc
in
xlat
lock
cmpsl
cwtl
xchg
mov
test
or
ja
lods
adc
jg
jae
jg,pn
add
or
pop
stc
pop
xorb
fs
push
filds
mov
xor
subl
hlt
ffree
iret
ret
jo
imul
jle
lret
outsb
loope
ret
das
dec
scas
insl
sub
negb
xor
mov
leave
adc
mov
pop
pop
cld
jge
es
sbb
or
addr16
andb
out
push
or
test
adcl
enter
sub
lods
inc
adc
push
pusha
push
insb
cmp
sbb
cmp
cld
mov
std
jg
lea
loopne
adc
and
dec
sarl
cli
and
cs
mov
or
movsl
pop
stos
jne
subb
xorps
xchg
nop
cld
jno
into
cs
test
inc
jg
cld
add
in
adc
mov
scas
jle
mov
mov
lods
add
sahf
rorl
pusha
dec
jg
ja
jecxz
inc
mov
push
pushf
ljmp
es
call
fstps
je
daa
mov
adc
out
jo
fistpll
shrl
cld
xor
fs
lret
mov
aam
pop
clc
lcall
xchg
mov
dec
sbb
jno
push
stos
fwait
dec
test
popf
icebp
xor
arpl
repz
adc
ss
dec
stos
lds
or
or
lahf
and
jb
xchg
and
or
adc
add
sbb
inc
push
sub
xchg
add
clc
test
test
lock
lock
scas
sbb
and
dec
cwtl
repz
xchg
inc
jno
cltd
mov
cmp
jno
stos
bound
ret
fildl
adc
rcr
jle
dec
mov
pop
fidivl
inc
je
or
push
loopne
pop
arpl
int
jecxz
stc
push
jg
push
adc
jns
push
aad
xchg
gs
ss
movsl
js
adc
xchg
mov
fsubp
inc
je
xchg
popf
inc
in
jae
lods
fildll
mov
divl
cli
lret
mov
fwait
xor
xchg
pushf
mov
fsubr
xor
or
xchg
mov
mov
std
icebp
popl
je
popf
mov
xor
adc
sbb
add
push
or
out
addl
jno
mov
test
test
mov
lret
push
fdivs
fisubrs
fadds
jbe
stc
movsl
loop
adc
aas
js
icebp
iret
dec
out
and
dec
mov
in
fcomps
sbb
bsf
add
cmp
jb
cmp
dec
mov
sbb
mov
xchg
bound
cltd
test
push
push
sub
lcall
mov
shrd
inc
sbb
mov
push
in
in
push
xchg
imul
leave
aam
cli
sub
cmp
repz
es
inc
jno
inc
push
adc
or
push
mov
je
roll
sub
icebp
std
call
lods
mov
fsubrs
pop
mov
jo
test
ja
mov
or
xor
mov
dec
mov
fldcw
dec
inc
mov
mov
push
sub
pushf
push
outsb
cmpsl
xchg
xchg
enter
inc
jle
cmp
xor
cwtl
lock
jp
cltd
popa
xchg
movsl
push
sub
xor
sbb
hlt
or
fidivs
mov
or
popf
pushf
mov
xchg
sub
jmp
loopne
ljmp
dec
cmp
sbb
mov
add
cld
iret
mov
aam
and
fxch
sti
mov
push
in
or
dec
add
push
test
fidivl
xor
or
jo
push
sub
or
mov
jl
mov
fldl
add
out
mov
int3
and
das
ljmp
int
cmpsb
or
adc
scas
adcb
inc
filds
sahf
arpl
out
xor
inc
fidivl
jl
jb
or
cmp
dec
xchg
insb
xor
lock
cmpsb
add
push
mov
xor
cmc
and
dec
pop
cmpsb
fs
adc
jnp
and
adc
lcall
test
add
mov
inc
sub
out
mov
testb
xor
cmp
sub
lahf
daa
cwtl
pop
ret
sbb
mov
lret
add
aam
jne
aad
xlat
jl
and
jnp
shr
lods
and
xor
iret
iret
mov
sahf
divb
mov
xor
push
jnp
cmpsl
jno
jns
xchg
push
fldcw
dec
cmpsb
mov
dec
sub
pop
shll
out
pop
push
cld
pop
push
aas
pop
pop
cmp
lea
jmp
push
ss
jp
and
dec
cwtl
mov
repnz
push
and
mov
pop
test
int3
jg
mov
cwtl
mov
ja
movsb
out
xor
push
fnstsw
mov
fstl
ficoms
das
aas
mov
subl
test
xchg
cmp
loope
les
push
sbb
jl
sbb
xor
jge
inc
and
sub
pop
xchg
daa
dec
xchg
sub
mov
push
jge
sub
push
add
rcrl
mov
jno
mov
clc
ret
sbb
sbb
sti
mov
jnp
fcompl
fimuls
lahf
repz
jmp
cmpl
add
cwtl
movsb
sbb
inc
push
push
std
pusha
cli
dec
jae
fisubrs
test
and
push
test
test
js
daa
mov
xor
outsl
outsb
mov
ds
mov
or
xchg
outsb
in
mov
lahf
and
and
inc
dec
and
mov
sbb
sbb
jmp
das
push
sub
sbb
scas
cmpsb
mov
mov
popa
stos
inc
push
mov
and
push
xor
jo
movsl
rorl
outsb
push
pop
adc
mov
arpl
add
and
lock
mov
in
cmp
jae
jge
pop
cmp
or
mov
outsl
mov
dec
daa
imul
jle
jp
std
mov
sbb
cmpsl
std
or
out
ja
add
cli
pop
dec
lahf
push
cmp
lcall
mov
inc
lea
mov
call
cmpsb
call
insl
fs
add
mov
aad
inc
out
cli
into
mov
or
xchg
in
lock
pusha
adc
jne
idivl
push
dec
ss
pop
lods
lcall
add
add
sub
shlb
ss
pop
inc
pop
fimuls
pop
push
popa
xlat
jg
mov
or
pop
jmp
jge
xchg
adc
pop
xor
jg
imul
pop
ret
sub
in
idivl
cli
js
bound
ret
push
out
xor
gs
rorb
xchg
dec
pop
dec
mov
sbb
mov
movb
lcall
sbb
gs
fidivs
push
adc
mov
test
in
stc
or
or
imul
mov
lret
cmp
mov
ret
sbb
xchg
push
dec
outsl
jp
test
add
mov
or
pop
pop
mov
xor
mov
jg
mov
fcompl
jno
push
nop
xor
call
subb
xor
inc
mov
or
or
or
mov
add
inc
in
push
scas
jle
push
cmp
mov
cmp
loop
fs
iret
and
cmp
sbb
mov
jmp
lock
adc
addl
push
movb
mov
jno
lret
fs
gs
daa
fs
loope
ret
sti
stc
mov
mov
cmp
jmp
cmp
addr16
push
xor
pushf
addr16
aam
pop
mov
imul
cmp
cld
loop
arpl
dec
mov
fdivs
int3
xchg
aad
mov
aam
jp
cmp
imul
jns
fldcw
inc
ljmp
out
test
pushf
lret
outsl
fisttps
mov
popf
jmp
insb
ds
out
lea
mov
mov
imul
imul
aad
xchg
jle
push
sahf
or
clc
jnp
cmp
das
pop
mov
cmc
or
fisttpll
fnstenv
out
or
cmpsb
push
out
inc
lds
cmp
or
das
xor
mov
es
loopne
scas
lcall
or
loope
sbb
lahf
lds
push
mov
fucomp
js
rorl
mov
frndint
sub
lods
xor
push
xor
les
cmp
imul
adc
stc
mov
push
in
sbb
dec
jecxz
enter
test
fsubrl
push
fs
cltd
mov
test
lahf
cmp
sahf
rclb
sbb
int3
inc
xchg
adc
fistpll
mov
dec
dec
pop
test
xlat
lret
mov
fldenv
fwait
jae
outsl
xorb
das
loop
inc
cmpsl
mov
loop
cmp
adc
sahf
mov
fs
adc
aaa
push
mov
mov
xchg
push
lahf
xlat
movsl
pushf
push
xchg
sahf
dec
arpl
shlb
pop
pusha
add
movsl
subl
mov
jns
cmp
or
xchg
add
testb
dec
fisubs
mov
icebp
imul
mov
sub
xor
mov
icebp
cmp
or
sarl
rcll
inc
inc
mov
dec
mov
call
lea
in
ss
push
adc
arpl
add
inc
aam
scas
pop
bnd
sahf
mov
adc
push
test
cmp
jnp
sqrtps
sub
arpl
pop
jbe
xor
or
sub
lods
or
dec
fbstp
lahf
dec
mov
lock
rclb
and
sub
data16
mov
pop
addr16
aam
rorb
push
dec
mov
push
mov
sbb
sahf
loopne
or
pop
jecxz
sbb
inc
out
push
dec
in
push
pop
mov
sbbl
jp
icebp
mov
mov
and
push
pop
mov
or
lcall
pop
jne
add
adc
and
stos
pop
insl
popa
sti
cmp
xor
sub
inc
mov
push
mov
cmp
out
or
or
mov
call
fstp
dec
dec
push
jmp
std
or
adc
in
push
ss
nop
pop
fidivl
push
sub
int3
pusha
sub
mov
enter
jae
loop
pushf
pop
inc
mov
call
add
cmc
loop
lock
dec
icebp
lock
xor
xor
mov
ja
mov
lods
mov
aas
add
xchg
cwtl
enter
xor
or
sub
daa
je
out
fs
in
sub
stc
mov
xchg
lahf
add
jno
jnp
je
cmpsb
inc
iret
daa
xor
pop
lock
roll
push
mov
adc
icebp
outsb
or
pop
sbb
pop
mov
aas
shlb
mov
scas
adc
lahf
jle
add
xor
aam
mov
jae
add
test
fcom
mov
dec
xchg
xchg
popf
jmp
xor
or
imul
sbb
add
test
push
js
push
sub
xchg
jle
ret
xor
ja
push
and
imul
hlt
cmpsl
mov
loopne
lock
orl
jne
loope
mov
aaa
mov
loop
xor
pop
cltd
pop
repz
cmpl
ret
or
lock
cmpsb
aaa
jp
push
repnz
mov
fstpl
or
sub
test
cmp
out
push
mov
xchg
lock
mov
add
loopne
gs
fcompl
lods
or
mov
ja
aas
jo
cli
xchg
lcall
call
pop
and
adc
and
lea
outsl
ret
jmp
into
sub
push
inc
cmpsb
fnstenv
add
dec
ret
dec
and
push
and
out
jp
ja
sahf
je
int
pop
sub
into
outsl
adc
fimull
iret
mov
lods
cmp
jecxz
test
sarb
ret
push
insl
lret
in
sub
bound
addb
sbb
int
or
sbb
adc
sbb
mov
and
scas
add
jb
cmp
xchg
push
lods
lods
push
add
repnz
test
cmp
adc
mov
cld
mov
lods
daa
cmpsl
in
lods
xchg
ljmp
lret
xchg
cmp
fwait
pop
leave
cmp
mov
xlat
rcrl
addr16
or
or
inc
jge
push
pushf
fstps
inc
call
add
sub
aas
sbb
loop
jo
jmp
lcall
xor
cmp
adc
imul
jle
jae
push
xchg
stos
xor
shrl
jp
mov
mov
ljmp
mov
dec
test
jl
mov
ss
repnz
pop
push
or
aaa
rcrl
test
jle
pop
filds
push
xor
push
fwait
xchg
repz
push
jmp
xor
xor
jp
loopne
lret
ss
mov
sbb
dec
adc
add
mov
fs
sti
lahf
fbstp
push
scas
sub
mov
mov
cltd
rorb
fiadds
mov
adc
lcall
cmpb
shl
mov
mov
scas
mov
fdivl
mov
arpl
int
push
dec
lock
sbb
outsl
adc
or
dec
adc
mov
push
jmp
pop
insb
aaa
or
fwait
pop
jp
jge
jecxz
and
inc
les
mov
or
push
mov
in
cmpsl
inc
jo
xchg
stc
stos
adc
mov
push
daa
int3
aas
stc
ss
setle
ljmp
outsb
xor
mov
adc
sub
lock
jns
and
fsin
add
or
movsb
jp
push
rcll
mov
xor
xchg
into
sbb
push
fisubs
xor
fisttpll
mov
jae
pop
fcmovnb
inc
xorps
add
cmp
sar
mov
adc
inc
add
inc
inc
push
push
jl
jne
adc
ds
gs
jecxz
gs
pop
es
xor
fldl
mov
test
ds
mov
jecxz
in
icebp
mov
inc
mov
rorb
pop
and
cmp
pop
xchg
cmpb
ja
xchg
sub
dec
xchg
out
repz
pop
mov
inc
inc
dec
loope
mov
ret
es
leave
scas
mov
add
sub
dec
push
mov
add
mov
mov
mov
dec
aad
daa
in
dec
xor
incb
inc
inc
sbb
enter
xchg
push
push
addr16
ss
mov
test
dec
cmp
mov
inc
and
in
call
imul
xchg
fstpl
arpl
stc
js
mov
xchg
mov
jae
loop
mov
inc
add
sub
mov
sbb
mov
mov
subb
je
pop
dec
aas
decl
hlt
mov
pop
pop
ljmp
pop
stos
pop
xchg
adc
xchg
mov
xor
ror
cld
xor
test
das
and
xchg
and
scas
stos
inc
and
rorb
or
addr16
pop
xchg
adc
aad
mov
sbb
jle
mov
xchg
jb
dec
insl
in
imulb
ret
jne
adc
mov
jns
add
out
popa
imul
lea
data16
mov
pop
cmp
jl
aas
repz
add
sahf
jbe
in
push
add
and
mov
dec
jmp
pusha
sti
jl
mov
cmc
push
jle
jp
int
jne
inc
insl
std
adc
mov
mov
sub
subl
cmc
ss
daa
mov
repnz
ja
in
sbb
sahf
fdivrp
and
pushf
sub
ds
loopne
dec
imul
gs
std
sti
in
mov
loop
adc
sarl
ja
sbb
mov
inc
pusha
or
aaa
add
inc
sarl
mov
cmp
lea
or
subl
sahf
out
pop
lods
and
cmp
cs
or
call
cmp
adc
push
divb
ss
test
mov
iret
lock
jmp
inc
cmp
mov
and
in
stos
mov
sub
xchg
loope
subl
std
sbb
mov
leave
add
stos
xchg
fdivrl
add
pop
mov
out
enter
insl
add
add
arpl
outsl
mov
addr16
lret
jecxz
loope
and
cmc
xchg
mov
or
lea
jns
cwtl
je
cld
leave
fcmovnbe
mov
cltd
pop
popf
and
das
pop
sahf
pop
add
push
or
dec
lods
sub
or
mov
repnz
push
xchg
and
push
dec
mov
repz
lret
and
dec
ret
repnz
loopne
test
in
out
outsl
xchg
test
jmp
outsb
aad
jno
push
mov
dec
cmc
xchg
iret
xchg
js
xchg
mov
push
popl
gs
xor
jo
popf
fdivrl
js
jae
int
push
lea
negb
faddl
popf
sahf
cs
test
int
jmp
loope
push
cmc
js
jp
or
jp
mov
ret
push
mov
sub
mov
fldl
popf
and
je
inc
inc
dec
cmc
xor
in
jl
push
add
mov
push
jle
jns
mov
dec
js
pop
lods
mov
std
enter
lods
xchg
push
or
data16
incb
sub
std
sbb
je
lret
arpl
and
sbb
or
ret
cmpsb
ds
in
int3
sbb
mov
imul
cmp
rcll
popa
iret
xchg
and
mov
mov
xor
push
mov
mov
lds
inc
clc
out
push
movsb
aas
inc
in
mov
ja
lret
ret
lea
idivb
xchg
leave
fs
pop
xor
lods
adc
out
and
lret
ret
add
dec
adc
je
cmc
sbb
adc
shrb
nop
hlt
mov
sub
aam
fwait
repnz
mov
push
mov
inc
sub
sub
ljmp
jo
and
xchg
mov
sbb
inc
push
sbb
je
mov
or
movsl
xor
add
jmp
mov
mov
enter
cwtl
adc
imul
loopne
cmpsb
idivl
nop
insl
orl
stos
ret
inc
lods
push
ret
inc
ljmp
add
incl
loop
nop
xor
sti
cmc
cltd
inc
addr16
sbb
or
jb
mov
mov
iret
fadd
leave
mov
mov
testl
call
sub
dec
pop
jnp
lock
lods
out
lea
dec
push
clc
pop
mov
and
adc
mov
out
cld
movb
je
daa
push
and
xchg
jae
ja
sub
mov
ds
adc
sbb
shrb
cli
xor
or
xchg
add
add
or
es
mov
pop
aaa
pop
cmp
mov
or
idivb
cmp
jmp
dec
sub
pop
and
sub
lods
inc
pop
inc
inc
sub
testb
sti
jnp
ja
popf
push
lock
sbb
or
jns
lcall
loop
fs
pop
subb
ret
or
daa
in
jmp
push
xor
jae
js
sbbb
icebp
pop
add
cmpsb
adc
es
dec
stos
mov
cmp
mov
sbb
sub
ret
sti
cld
cld
dec
xchg
cmpl
mov
test
cwtl
in
push
sbb
sub
aas
out
pop
inc
push
repnz
jp
insl
and
insl
push
enter
dec
mov
sub
scas
push
pop
scas
cmp
js
cmp
mov
inc
pop
loopne
xchg
cmp
sub
sarb
test
fsubrl
mov
xchg
aad
leave
cmpsl
sbb
push
cmp
or
lret
out
in
addr16
cwtl
sbb
stos
sub
push
sub
adc
ret
xchg
cmpsl
leave
add
cld
or
push
and
jl
add
push
fdivs
movsl
inc
les
inc
imulb
insl
nop
xlat
inc
and
ds
xchg
lds
mov
mov
pop
test
lahf
or
sbb
cmp
mov
mov
inc
ljmp
jecxz
loope
cmp
js
push
pop
out
pop
std
adc
pop
popf
or
cmp
sahf
and
nop
orl
idiv
mov
pushf
ret
sbb
cmp
leave
clc
inc
dec
cmp
cmp
repnz
xchg
pop
xor
dec
and
and
mov
mov
or
cmpsl
mov
addr16
mov
lods
pop
mov
jns
loop
lahf
scas
notb
pop
inc
push
shlb
aas
and
fdivl
push
push
xchg
lret
push
mov
scas
rorb
and
jno
clc
push
mov
push
pushf
cltd
cmp
bound
aas
daa
dec
sbbb
call
test
xchg
stc
push
and
pop
xchg
aaa
lret
sbb
stos
cmpsl
cmp
mov
loope
xchg
mov
mov
cmp
mov
jnp
mov
lds
mov
or
add
leave
loop
jecxz
testb
pop
mov
jecxz
into
hlt
push
mov
mov
add
loope
daa
imul
xor
xor
jecxz
xchg
mov
dec
lods
in
fwait
push
sub
cmp
leave
pop
jecxz
sub
jns
pop
clc
xchg
xchg
mov
inc
in
jae
mov
test
adc
sbb
es
js
pop
mov
pop
pop
jne
nop
sub
push
xchg
pop
jmp
sub
jle
fs
movsb
sbb
cmp
js
orl
push
jp
stos
mov
vmovq
ficoms
mov
icebp
mov
test
out
inc
inc
stos
clc
ss
outsb
fcmovu
inc
jmp
or
in
imul
push
mov
xchg
inc
mov
jns
ret
and
ljmp
mov
loopne,pn
sub
pusha
pop
mov
ja
pop
mov
daa
arpl
jecxz
js
cmp
jge
mov
xchg
push
sti
adc
sarl
ljmp
push
pop
pop
adc
insb
cmp
test
xchg
jmp
in
out
mov
add
enter
adc
gs
call
aaa
push
test
adc
icebp
out
ja
mov
push
push
ss
clc
ret
in
sbb
mov
int3
testl
stos
clc
cmp
push
les
pusha
cmp
fildll
cmp
rclb
jmp
mov
lahf
add
cwtl
mov
sbb
mov
test
inc
mov
dec
dec
jne
inc
ret
dec
jae
mov
test
ljmp
push
clc
fbstp
dec
dec
dec
pop
jp
push
sti
jg
in
jbe
fs
xor
lods
adc
inc
xor
lcall
mov
cltd
pop
rorb
and
push
stos
iret
dec
add
xlat
call
fs
push
mov
or
mov
jge
or
lea
sub
push
xor
lods
adcb
mov
pop
mov
inc
cmpsl
push
repz
icebp
cmp
push
pop
jmp
xor
adc
or
push
gs
subl
pop
xchg
sbb
pusha
push
push
test
call
mov
push
stos
push
rcll
clc
rcrl
inc
incl
in
loope
mov
xchg
jo
cmpsb
push
jbe
inc
push
dec
jno
mov
cmp
xor
mov
xor
push
inc
lods
insl
xor
inc
ljmp
iret
shlb
pop
insb
dec
fistpl
adc
xor
inc
sub
pusha
sbb
or
cmpsl
imul
dec
xchg
lea
xchg
ret
pop
mov
decl
dec
imul
loopne
adc
out
pop
mov
scas
lret
sub
aad
aam
sub
push
push
xchg
or
movsb
mov
arpl
orl
ss
lea
ljmp
mov
das
ljmp
lea
cltd
mov
decb
aas
int3
xor
and
push
dec
int
pop
lcall
sbbl
fistps
mov
add
or
cmpsb
sbb
push
push
scas
je
add
push
xchg
mov
addr16
cmp
loop
sbb
dec
add
xor
cmp
mov
push
pmaxsw
orb
ljmp
cmp
ljmp
fnstenv
mov
fwait
inc
popa
pop
mov
decl
pop
inc
mov
int
cmp
or
mov
stos
cmp
jae
test
inc
addb
mov
xlat
xchg
xchg
pop
pop
push
fiadds
pop
cwtl
sub
nop
int
or
clc
jl
adc
hlt
std
andb
and
lret
fpatan
push
xorb
sbb
xlat
lahf
xchg
imul
and
inc
test
lea
dec
adc
fs
out
cwtl
bound
cmp
push
sub
jl
cmp
hlt
fldcw
in
dec
xor
lcall
lods
add
xor
add
sub
and
xor
sbb
sbb
loop
ss
outsb
push
add
aas
sbb
add
pop
loop
pushf
xchg
aaa
mov
xchg
int3
inc
push
jmp
xchg
into
cs
rcll
jae
push
mov
dec
scas
pop
sbb
fcmovnbe
mov
sbb
lods
mov
sahf
dec
xchg
adc
ljmp
or
mov
cmp
xchg
insb
ss
and
jno
pop
imul
mov
pop
sub
xchg
and
call
int
mov
mov
rcll
lods
paddsw
fldenv
and
sbb
addr16
or
flds
filds
dec
inc
inc
and
icebp
repz
mov
in
rclb
xor
fbld
lret
aad
adc
push
cmp
xchg
clc
mov
in
push
jl
lods
loope
pop
inc
and
sub
in
lahf
ret
push
scas
aaa
push
or
sub
fimuls
xchg
shlb
imul
cltd
mov
fsubrp
jge
inc
and
pop
shrl
ja
sbb
mov
push
dec
push
es
nop
adc
xor
icebp
loope
out
fisttps
test
dec
loop
fldpi
mov
lds
cmp
mov
xchg
popf
mov
in
mov
adc
mov
dec
lods
cs
pop
push
dec
jmp
cmpsb
es
sti
insb
jg
sbb
mov
in
bound
jmp
dec
dec
sub
arpl
dec
sbbl
and
or
in
sahf
dec
mov
sub
lods
dec
lret
sbbb
jp
mov
pusha
push
mov
in
sub
inc
sar
mov
ljmp
data16
sub
and
shll
shll
ja
mov
ret
dec
pusha
pop
push
stos
iret
jb
loope
mov
les
je
mov
out
mov
mov
jne
push
clc
or
mov
and
or
cmp
cmp
mov
je
xor
pop
sub
std
and
or
inc
cmp
mov
xchg
sbb
cmp
fcoms
mov
push
aad
aaa
out
mov
and
pop
push
data16
fisubrl
xchg
xchg
fwait
loop
leave
movsb
mov
xchg
aaa
mov
pusha
jb
xlat
mov
mov
fwait
pop
call
xor
push
clc
daa
mov
pusha
ja
pop
pop
inc
lret
mov
fwait
cmc
inc
ljmp
aas
ss
fstpl
jmp
mulb
pop
mov
fcompl
fisubrl
xor
insl
test
arpl
cmp
add
xchg
jl
xor
loopne
std
lahf
inc
jle
pop
xchg
mov
sysret
adc
xchg
hlt
or
ds
jl
add
ds
cmp
lahf
test
movsb
mov
in
addr16
adc
dec
add
mov
scas
push
mov
dec
dec
mov
add
pop
ror
ds
fdivrl
mov
jp
dec
jne
cmp
ljmp
mov
in
and
repz
testl
jo
jle
sub
cmp
lret
sbb
int3
nop
ss
shrl
addr16
movl
shrl
sti
xchg
xor
push
aad
dec
jp
sarb
cmpsb
lea
mov
imul
jae
std
push
inc
scas
xchg
nop
sub
mov
loop
pop
imul
pop
mov
jno
sti
mov
popa
push
mov
das
push
in
sbb
ret
outsb
cmpl
aad
pushf
jecxz
orb
pushf
cli
test
es
into
mov
pop
add
pop
dec
pop
jbe
cmp
ficompl
xchg
xor
mov
int3
push
sub
or
lret
imul
repz
sub
pop
sbb
xchg
xchg
inc
jns
notl
into
ret
mul
sbb
pop
add
adc
sub
mov
lcall
mov
sbbb
aad
call
jne
mov
lret
adc
sbb
fnstcw
je
xchg
xor
roll
ljmp
mov
call
cmp
lock
int
stos
lcall
dec
mov
mov
pop
cltd
pushf
daa
lret
and
push
cs
mov
loopne
mov
adc
test
add
imul
aaa
cmpsb
push
adc
pop
sub
and
mov
fnstcw
pusha
xlat
cld
mov
jmp
jg
sbb
loope
outsl
sub
insl
sub
stos
mov
icebp
jnp
xchg
decl
adc
arpl
icebp
mov
test
xor
or
xor
inc
popa
jns
dec
pushf
cltd
sub
ss
cli
int
push
js
or
sbb
mov
pop
outsl
int
inc
aad
cmc
cmp
aaa
rol
or
mov
add
pop
imul
jle
fcmovb
ss
push
pop
dec
movsb
out
cmpsl
sbb
daa
sbb
fadd
pop
mov
pop
xchg
imul
shlb
movsl
xor
xchg
and
xchg
sti
bound
fildll
cmp
jno
cli
cltd
pop
xor
sub
add
push
xchg
pop
test
xchg
sub
sbb
ljmp
sbb
or
jnp
mov
lock
sub
outsb
aam
lods
or
xchg
bound
into
push
or
mov
cmp
adc
pop
jb
in
xchg
dec
addr16
pop
scas
dec
sbb
xchg
cwtl
dec
or
jnp
jmp
enter
cmp
inc
or
enter
xlat
push
mov
cmp
fst
jle
hlt
xchg
jb
lods
dec
xchg
adc
or
movsl
iret
cs
mov
test
std
aad
mov
jo
pusha
jbe
cltd
movsl
mov
in
lret
adc
es
add
mov
les
mov
pop
in
pusha
push
arpl
ss
push
les
sub
and
mov
bound
addl
adc
stos
jge
jmp
adc
pop
push
jns
xor
pop
sbb
clc
mov
and
repz
push
mov
or
cmpb
inc
sub
and
out
fisubs
add
push
insb
movsl
ret
dec
mov
mov
popa
adc
xlat
cmc
call
inc
pop
sbb
loopne
jne
lcall
aaa
daa
adc
cmp
fbld
push
mov
mov
std
mov
adc
xor
loop,pt
cld
jbe
push
mov
pop
lret
fwait
cmp
enter
jb
xor
push
mov
mov
outsb
popa
lds
pop
fdiv
or
add
adc
cmp
push
fsts
fcompl
shlb
xor
and
mov
sbb
stos
arpl
adc
rorl
daa
shll
jno
mov
push
xchg
push
stos
mov
dec
jb
push
mov
jge
inc
cmp
sub
mov
push
jno
xor
mov
js
divl
mov
sbb
lods
pop
xchg
aad
cmp
pop
cmp
dec
cwtl
imul
lret
lock
lods
shll
stos
jg
aam
stos
lcall
inc
test
xor
lock
into
lock
dec
add
sti
sbb
loop
adc
dec
divb
mov
aas
pop
mov
sub
in
je
addr16
jmp
adc
out
out
adc
mov
add
jl
cmpb
mull
loopne
mov
js
into
fiaddl
inc
mov
popa
push
or
pop
and
pop
cwtl
pop
sub
outsl
fcmovnu
out
cmpsl
sti
push
mov
push
mov
outsl
cltd
stos
pop
sti
mov
lret
aas
faddl
xor
jne
cmp
lods
mov
push
mov
adc
addr16
jb
fnstenv
xchg
adc
das
in
add
lret
outsb
and
rcrb
jo
mov
and
add
push
inc
int3
popa
or
cmpsl
and
xchg
sti
out
jle
in
xor
mov
aad
cmc
icebp
repz
jnp
out
mov
cld
xchg
lret
scas
lds
test
jge
in
adc
iret
fcmovu
cmp
fs
sbb
dec
incb
pop
adc
lret
cmpsl
incl
lahf
add
and
call
mov
sub
xchg
and
shrb
sub
lods
sti
xchg
repz
xchg
lds
or
popf
in
xor
les
mov
adc
lods
cmp
pop
xchg
pop
add
lcall
scas
or
shlw
cmp
jno
mov
lods
aas
pop
daa
sbb
leave
push
out
inc
sahf
adc
stc
mov
xor
mov
mov
mov
fiaddl
add
rol
std
cs
push
add
ret
pusha
popf
fsts
pop
push
in
rcll
pop
mov
andl
xchg
pop
aam
jnp
loopne
mov
fs
leave
jb
mov
xchg
jp
mov
sti
sysret
mov
sub
mov
fidivs
jg
mov
mov
mov
jnp
subl
sbb
inc
push
pop
mov
hlt
hlt
imul
call
sbb
scas
mov
rcl
mov
icebp
ja
vcmpss
xchg
mov
enter
cmp
or
loope
xchg
fnstcw
mov
pop
fcmovbe
push
ret
movsb
pusha
js
xor
loopne
dec
pop
jle
pop
loop
out
mov
xor
scas
ds
test
pop
pop
fwait
jge
sti
test
adc
sub
ffreep
push
add
js
add
sar
adc
dec
add
mov
das
ss
stc
pushf
int
mov
xchg
jp
popa
out
sbb
fucomip
sub
subl
rcrl
jge
imul
scas
insl
jp
fwait
push
scas
rcll
or
lcall
jno
cmp
test
test
cmp
mov
sbb
xchg
mov
or
lcall
iret
loope
mov
out
mov
inc
test
push
mov
sbb
cmp
cmp
add
mov
push
mov
xor
in
xchg
lahf
nop
xchg
dec
or
fdivrs
dec
rclb
xchg
ror
mov
cmp
popf
into
push
inc
int
aam
and
inc
lret
xchg
push
int
and
or
inc
jno
mov
int
js
cmc
push
mov
pushf
pop
mov
pop
xor
pop
jecxz
mov
xchg
subl
add
jge
xlat
enter
cld
xchg
call
xor
dec
or
pushl
cmp
stc
or
pusha
clc
filds
sbb
dec
lret
xlat
stos
addb
mov
insb
pushf
or
dec
mov
push
jnp
out
rorl
cli
and
mov
add
sbb
mov
lods
pop
in
insb
adc
xor
sub
mov
cmpsl
and
cld
sbb
sbb
jg
push
int3
push
add
cli
loopne
jmp
push
and
mov
icebp
xorb
fsts
les
cwtl
ljmp
aam
xchg
adc
es
mov
imul
push
pop
gs
dec
pop
ficompl
or
cld
mov
repz
test
push
adc
popa
jge
push
fwait
dec
dec
push
lret
idivb
popa
or
sub
lahf
pop
fst
mov
push
jb
or
jnp
push
push
or
dec
lock
cs
repnz
outsl
inc
cwtl
pop
jns
movl
stos
cmpsb
or
xor
popa
xchg
xlat
adc
inc
arpl
jmp
mov
into
sbb
xchg
jno
adcl
xor
data16
or
pop
inc
in
inc
out
or
insb
adc
mov
sahf
loope
out
js
sti
sbb
xlat
push
push
je
and
lock
mov
sub
popa
inc
push
lds
dec
cwtl
scas
xor
aad
inc
cmp
pop
pusha
fdiv
stos
cmp
into
mov
out
pop
in
aaa
push
inc
mov
sbb
push
and
and
push
aas
xor
cmpl
test
xor
sbbl
jmp
jb
cmp
pop
xchg
jnp
xchg
fldenv
jmp
in
mov
cwtl
sbb
sarl
aaa
imul
lret
stos
shl
int3
mov
jbe
xor
push
xchg
pop
mov
popf
and
lock
das
push
fisubs
stc
xor
inc
stos
std
out
fcoms
das
sub
inc
cmpsb
inc
sub
pop
dec
inc
lret
scas
jnp
cmp
out
lea
xor
aas
fiaddl
xchg
inc
cmp
mov
and
js
lea
inc
shrb
rcrb
jns
xchg
sbb
frstor
mov
mov
or
pop
push
dec
push
call
mov
fcoms
sbb
push
in
outsl
add
in
dec
pop
aaa
xor
fstps
and
mov
xor
loop
adc
ret
lods
lods
shrl
or
xlat
inc
xor
idivl
inc
das
scas
clc
mov
pop
push
aas
xchg
cltd
sbb
dec
push
push
cmp
inc
xchg
loope
mov
add
es
pop
mov
clc
adc
arpl
nop
mov
sbbb
jbe
mov
or
mov
jae
adc
addl
and
call
jecxz
or
bnd
mov
add
mov
adc
sub
mov
adc
inc
push
cs
push
movsb
std
shrl
sub
imul
jp
aas
cmp
mov
pop
pop
cli
mov
push
xor
mov
ljmp
pop
jle
mov
push
sbb
inc
lea
clc
out
dec
mov
or
popa
jbe
push
dec
inc
sub
sarb
pop
out
mov
rorl
mov
imul
sbb
enter
pop
cld
lret
jbe
mov
in
adc
xchg
xchg
sti
mov
dec
bound
cmpsl
add
cmc
je
sub
in
mov
ds
test
cmc
aas
jno
mov
and
or
iret
cmc
fsubrs
and
pop
pop
mov
jb
pop
in
pop
push
adc
scas
movsb
js
std
insb
add
imul
cltd
inc
decb
push
xor
jnp
lret
movl
mov
mov
dec
mov
mov
xchg
sbb
ljmp
rclb
mov
jl
mov
andb
negl
test
jnp
inc
ljmp
or
dec
or
add
jp
add
sub
inc
cli
out
aas
inc
xchg
lods
out
clc
fcompl
sub
lcall
mov
mov
outsb
cli
jbe
push
xor
pavgw
pop
repnz
mov
jo
out
aam
or
sub
lock
rcl
xor
cs
call
inc
xor
lahf
xchg
data16
les
cmp
mov
imul
mov
add
inc
mov
add
add
sub
or
data16
push
outsl
cli
pushw
rcrb
fcoml
rorl
mov
fcoms
in
mov
push
data16
testl
mov
lods
pop
push
and
mov
inc
int3
insb
sbbb
pop
sub
xchg
cmp
cmp
std
pop
push
pop
in
popf
inc
xchg
or
xchg
pop
adc
popf
adc
cmc
cltd
in
push
test
adc
mov
incl
mov
leave
insb
cmpsb
shlb
mov
lods
push
or
sub
loopne
inc
pop
in
enter
or
fdivrp
and
mov
std
out
lret
int
and
add
out
lcall
and
mull
jmp
aad
loope
in
push
fs
int3
inc
cli
and
push
lret
mov
pop
jge
cmp
xchg
sti
or
mov
and
shl
dec
fs
xor
ret
into
daa
mov
int
cmpl
out
pop
mov
jg
pop
push
push
inc
lock
mov
pop
add
popa
mov
out
pop
cld
loopne
out
ret
aas
pop
clc
cmpsb
sub
xlat
iret
je
xchg
daa
mov
scas
lock
addl
push
mov
sbb
push
sub
jae
cmp
cmpb
sbb
mov
fisubl
in
and
cmp
xlat
add
ret
xchg
cmp
das
and
std
sbb
sahf
nop
iret
xor
das
adc
cmpsb
enter
jae
push
add
sbb
rclb
sub
inc
js
xor
int3
cli
jb
sahf
lret
cli
lret
sahf
and
mov
or
mov
push
das
and
sahf
push
nop
jb
xor
enter
sarb
push
mov
call
lcall
mov
mov
mov
push
shrl
andb
mov
sub
push
rcl
adc
pop
and
mov
jo
enter
sub
add
out
jo
jmp
aam
ljmp
cwtl
jae
popl
stos
add
push
mov
int3
push
inc
inc
sub
ficompl
stc
push
arpl
js
and
enter
adc
push
pop
std
fnstcw
lcall
xchg
fcmovbe
xchg
add
pop
adc
ja
sub
add
lcall
sub
fdivrs
fs
push
xchg
in
xchg
insl
ficoms
je
fists
fwait
imul
cwtl
imull
sbb
in
inc
dec
mov
push
xorb
mov
adc
push
insl
in
scas
mov
cmp
jge
push
nop
push
ret
and
mov
pop
xchg
loop
scas
into
cmp
addr16
sbb
test
stos
cmp
pop
es
cltd
mov
dec
pushf
stc
stos
lea
das
push
or
dec
mov
repz
mov
aad
xlat
push
mov
push
data16
or
inc
dec
or
cmp
cli
adc
push
clc
dec
loopne
dec
data16
mov
das
inc
imul
lea
push
jnp
xchg
cwtl
inc
int
scas
jno
push
pavgw
adc
pop
pop
decl
mov
aaa
pop
inc
cld
push
sahf
and
mov
aam
pop
xchg
and
cmp
cli
arpl
dec
push
inc
sub
jle
add
add
or
and
outsl
mull
movsb
aas
pop
testb
shlb
push
jo
lds
xchg
and
add
pop
hlt
pop
or
je
in
mov
int3
lret
pop
mov
fisttpll
lods
inc
push
lods
insl
pop
pop
daa
pop
loopne
cwtl
sbb
mov
aaa
mov
adc
mov
push
es
push
and
xchg
addr16
cmp
push
xor
lods
arpl
std
cmp
sub
cmp
lea
mov
or
fidivs
add
test
xchg
mov
lret
pop
addr16
or
and
mov
rorl
xor
mov
jge
in
cmpl
jl
cmpsb
or
sub
mov
std
pop
lcall
jbe
fldt
outsb
cmp
stc
enter
dec
cmp
push
scas
push
mov
jns
popa
jl
mov
pop
call
enter
xchg
enter
cmp
rol
scas
into
sbb
ljmp
insb
mov
cmp
xchg
push
jge
es
xchg
xor
sbb
icebp
mov
cmpsb
ljmp
cmpb
aaa
dec
popf
and
out
sbbl
fistps
xor
shr
leave
scas
inc
sub
jecxz
rclb
jne
out
pop
lcall
fiaddl
roll
in
data16
in
mov
out
and
mov
leave
fbld
add
cmpb
stos
push
lret
xor
fdivl
inc
adc
adc
xchg
cmpsl
shrb
mov
popf
cwtl
xchg
xchg
pop
xchg
mov
cwtl
xlat
outsb
outsb
dec
push
mov
lods
push
imul
xchg
pusha
sbb
push
into
shl
pop
loopne
shrl
out
push
pop
fs
sbb
dec
pop
and
dec
jae
cmp
dec
arpl
push
add
cmp
sub
mov
sbb
jbe
jo
frstor
fisttpll
ss
maxps
orb
sbb
add
out
sbb
sub
or
or
cltd
lret
je
movsl
out
mov
mov
cmp
insl
jbe
fwait
cmpsl
popa
addl
pushf
xchg
stc
loop
add
cli
push
scas
ja
xor
pop
xchg
add
jae
inc
dec
jecxz
out
dec
lcall
jle
pop
daa
movsl
insb
xor
lods
int3
ret
push
test
ret
scas
cmpsl
and
pushw
and
outsb
enter
adc
fimuls
sbbb
mov
bound
xchg
sbb
jno
xlat
in
lea
xchg
lds
xchg
cmp
aas
jmp
test
ds
xor
dec
or
dec
mov
mov
jne
xor
push
push
pusha
mov
cmpb
mov
out
imul
or
imul
in
mov
nop
push
mov
cmc
jb
mov
sti
in
aas
stc
arpl
sub
or
mov
and
dec
pop
jmp
add
pop
lock
xchg
leave
adc
stos
xchg
dec
insb
daa
arpl
stos
and
jp
iret
jb
mov
rcl
mov
lock
outsl
inc
fwait
lea
in
sub
lock
and
loopne
fisttpll
xor
inc
mov
push
imul
je
mov
cmp
mov
test
mov
ss
pop
mov
outsb
mov
fldenv
sub
movsb
inc
jp
aas
std
filds
pop
test
sub
mov
sbb
arpl
fisubrl
cs
in
lock
loop
jo
inc
push
dec
ss
fidivs
lods
fwait
mov
mov
shll
cli
shl
faddl
pop
mov
outsb
and
add
and
sbb
and
xor
mov
push
jp
xor
push
inc
cmp
and
cmp
out
xor
and
ret
pop
or
push
push
fnstenv
int
in
aam
lds
push
add
mov
std
icebp
fimuls
inc
std
test
and
mov
and
lods
inc
ret
mov
call
sub
jne
push
fsts
push
jo
loopne
out
scas
test
std
push
lret
cli
lret
and
stc
cld
pop
push
daa
stos
jle
sub
fs
sub
dec
rcll
mov
fldenv
mov
mov
mov
or
popa
imul
fwait
inc
jno
leave
sarw
lods
nop
mov
loop
lds
pop
stos
in
xchg
lock
shl
push
dec
js
lds
mov
sub
fsts
sbb
pusha
or
xchg
add
cmp
test
lock
xor
jp
lods
stos
repz
js
add
xchg
pop
xlat
imul
sub
xor
fwait
outsl
insb
sbb
pop
push
or
pop
and
mov
jge
aam
add
int3
adc
shll
stc
mov
mov
fwait
sbb
outsl
adc
ficoml
pop
fwait
dec
mov
xchg
call
xchg
mov
pop
pop
mov
inc
sahf
jnp
test
aaa
stos
notl
sahf
je
mov
jbe,pn
inc
inc
dec
fnstenv
cmp
mov
dec
pop
jmp
std
mov
mov
xchg
ss
push
add
repz
mov
push
mov
test
out
jge
shlb
jg
lea
mov
aaa
xchg
lret
mov
jecxz
divl
aas
dec
inc
sbb
xacquire
out
xchg
mov
xor
daa
lods
stos
repnz
mov
pop
xor
pushf
sbb
xchg
push
cmpb
add
fidivrl
inc
bound
mov
daa
dec
xor
lock
jg
cld
pop
cld
jge
jge
and
stos
mov
cwtl
fcompl
dec
adc
mov
jmp
stos
adcb
iret
jb
es
sub
xor
gs
and
outsl
loopne
aaa
je
retw
in
lods
ja
xchg
adc
inc
mov
or
sub
fisttpll
pusha
scas
out
pop
loopne
sti
pop
mov
iret
sbb
cmp
pop
cmpsb
cmp
xor
push
jmp
shll
outsl
aad
xchg
sbb
pop
outsb
icebp
mov
dec
or
sbb
mov
xchg
ja
cmp
negb
enter
data16
jecxz
xor
jb
mov
push
sub
inc
pop
jge
test
mov
add
push
sti
inc
imul
mov
mov
jo
mov
or
mov
pop
mov
mov
repnz
push
sar
mov
std
dec
push
dec
sarl
testl
ja
loopne
xor
stc
push
sub
adc
outsl
dec
lahf
fwait
fbstp
lcall
and
addl
imul
jmp
adc
and
adcl
xchg
loop
mov
test
and
sarb
stc
pop
push
rcll
cmp
inc
jle
mov
push
sub
push
jmp
in
jecxz
pop
or
pusha
adc
ljmp
xor
mov
mov
jns
aam
loope
iret
int3
aad
enter
imul
cmpsl
fdivrl
push
leave
lods
push
cli
xchg
ljmp
es
ret
adc
sub
and
flds
adc
cli
jecxz
adc
aam
rcrl
out
push
ja
push
pusha
mov
rorb
and
push
ja
outsb
test
xchg
or
imul
and
mov
pop
cli
add
inc
mov
inc
mov
nop
addb
movsb
fmuls
push
cmpsl
repz
out
mov
xchg
mov
xor
scas
notb
xor
push
lods
fwait
lods
mov
cli
sbb
cwtl
mov
fsubrs
mov
adc
hlt
test
push
mov
aaa
ljmp
push
mov
xor
jecxz
testb
ficoms
jno
pusha
cmpsb
mov
out
std
sbb
xor
out
inc
pop
inc
dec
bound
addl
dec
rcrb
sbb
js
int3
xchg
jecxz
and
xchg
push
mov
or
cmc
mov
jbe
sahf
add
xor
jecxz
mov
js
inc
mov
movsb
fsubl
mov
inc
or
mov
arpl
into
add
dec
mov
jns
imul
adc
sbb
mov
in
hlt
dec
mull
fmuls
adc
scas
and
fldenv
xor
fbstp
insl
negb
nop
sub
outsl
push
mov
gs
cmp
shlb
xchg
push
les
into
cmp
in
ja
das
sub
iret
fwait
sti
add
call
jmp
out
icebp
pop
iret
adc
int
pushf
adc
xchg
jno
repz
xor
xlat
pop
dec
popf
outsb
shlb
int
xchg
in
pop
jno
fdivr
cli
mov
lahf
lcall
mov
fnstenv
push
mov
sub
scas
dec
add
xchg
loop
push
jle
dec
push
ret
int
popf
mov
hlt
push
out
sahf
cmp
mov
out
mov
lret
fisttpl
cmpsb
popa
adc
out
pop
aad
dec
flds
cmc
inc
xchg
add
test
lea
jle
fisubs
repz
mov
or
xchg
fdivrs
stos
sub
hlt
bound
mov
cmp
cmpsb
mov
mov
cli
aas
in
mov
jne
inc
jae
cwtl
jecxz
ffreep
int3
push
jno
push
or
xor
int
add
out
xor
imul
out
xchg
out
cmp
aam
fsubl
and
pop
pop
aaa
mov
lcall
arpl
adc
hlt
repz
push
lods
inc
xlat
sahf
cld
ja
leave
pop
push
out
jecxz
inc
outsb
jle
add
test
into
fstl
mov
adc
in
clc
je
je
outsb
dec
mov
jl
dec
hlt
test
sahf
cmc
jns
mov
call
adc
jbe
aaa
jle
push
imul
mov
cltd
jg
mov
inc
and
adc
enter
cwtl
es
bound
mov
sbb
push
jge
outsb
ror
sub
jg
pusha
sti
or
idivl
mov
int
std
sub
rorl
pusha
ss
iret
bound
or
sbb
outsb
gs
ret
xchg
pop
xlat
mov
cmp
add
or
add
add
push
add
addb
add
mov
add
rolb
add
adc
addb
add
push
add
orb
add
loopne
add
mov
add
adc
add
pusha
cmpsl
cmp
add
add
add
pop
add
add
add
add
add
add
addb
add
call
add
add
add
addb
add
pusha
add
addb
add
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
jl
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fadds
add
mov
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
in
or
xor
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
sbb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
js
add
andb
add
cmp
add
add
add
add
add
add
mov
mov
add
pusha
cmpsl
cmp
add
add
or
add
push
or
sbbb
add
inc
add
subb
push
or
adcb
add
mov
add
xorb
add
add
int3
or
sbbb
sbb
add
call
add
addb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
call
add
add
cmp
add
add
add
add
add
add
pop
add
add
add
add
cmp
add
add
add
add
add
add
addb
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
test
add
insb
stos
or
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rolb
add
cmp
or
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
clc
add
add
or
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
and
add
fsubrl
add
pusha
cmpsl
cmp
add
add
add
add
add
add
dec
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
jo
add
jl
or
rolb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cwtl
add
add
add
add
add
cmp
add
add
add
add
add
add
rolb
add
or
call
add
add
add
add
add
addb
add
add
add
add
add
add
add
cmp
add
add
add
add
add
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
add
add
mov
add
pusha
cmpsl
cmp
add
add
add
sbb
jmp
add
add
dec
add
add
jo
add
cwtl
add
add
rolb
add
add
add
adc
add
cmp
add
pusha
push
add
mov
add
mov
add
fadds
add
add
add
sub
add
push
pop
add
js
add
mov
sldt
enter
sti
sldt
lock
add
sbb
add
inc
or
cmp
add
push
sldt
nop
or
addb
add
mov
add
add
cmp
add
add
add
add
add
add
cmp
or
in
add
pusha
cmpsl
cmp
add
add
add
add
add
add
pusha
add
or
in
add
add
cmp
add
add
add
add
add
add
mov
or
js
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
mov
or
mov
add
add
cmp
add
add
add
add
add
add
fadds
or
movsb
add
add
cmp
add
add
add
add
add
add
add
add
in
or
insb
add
add
cmp
add
add
add
add
add
add
sub
add
push
int
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
push
add
push
iret
or
enter
pusha
cmpsl
cmp
add
add
add
add
add
add
js
add
sbb
or
call
add
add
cmp
add
add
add
add
add
add
mov
rorb
add
add
add
cmp
add
add
add
add
add
add
enter
in
or
aam
add
pusha
cmpsl
cmp
add
add
add
add
add
add
lock
add
mov
add
add
cmp
add
add
add
add
add
add
sbb
add
xchg
fmuls
add
add
add
cmp
add
add
add
add
add
add
inc
pop
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
fmull
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
nop
pop
add
cmp
or
test
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
jecxz
add
add
add
cmp
add
add
add
add
add
add
loopne
add
insb
out
add
add
add
cmp
add
add
add
add
add
add
or
add
test
or
cmp
add
pusha
cmpsl
cmp
add
add
add
add
add
add
xor
add
mov
add
add
cmp
add
add
add
add
add
add
pop
or
add
add
add
cmp
add
add
add
add
add
add
orb
add
out
or
mov
add
add
cmp
add
add
add
add
add
add
test
add
mov
or
mov
add
pusha
cmpsl
cmp
add
add
add
add
add
add
rorb
add
adc
or
les
add
pusha
cmpsl
cmp
inc
outsl
insl
gs
add
sbb
add
xor
add
push
or
andb
subb
orb
add
pusha
cmpsl
cmp
add
add
add
add
add
add
sub
add
fdivr
or
and
add
pusha
cmpsl
cmp
add
add
add
add
add
add
push
or
add
decl
add
add
add
cmp
add
add
add
add
add
add
js
add
aam
or
sbb
add
inc
outsl
insl
add
add
add
add
mov
add
add
add
add
cmp
add
add
add
pop
add
jg
add
or
cmp
add
and
add
dec
or
cmp
add
jo
add
cwtl
or
cmp
add
rorb
cmp
add
call
add
add
cmp
add
add
add
add
add
add
adc
add
lods
pop
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
cmp
add
rolb
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
pusha
or
add
pop
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
mov
add
call
add
add
cmp
add
add
add
add
add
add
mov
add
cld
pop
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
fmuls
add
adc
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
add
add
add
add
and
or
adc
add
pusha
cmpsl
cmp
add
add
add
add
js
add
add
add
pusha
cmpsl
cmp
add
add
add
add
add
add
inc
or
add
add
pop
add
inc
add
inc
add
push
add
add
inc
add
dec
add
add
inc
add
inc
add
inc
add
dec
add
add
add
inc
add
dec
add
push
add
push
add
inc
add
inc
add
add
add
add
inc
add
inc
add
dec
add
inc
add
add
inc
add
dec
add
add
add
inc
add
dec
add
add
pop
add
inc
add
inc
add
add
add
add
inc
add
or
push
add
inc
add
dec
add
push
add
dec
add
push
add
add
or
inc
add
add
add
push
add
add
add
add
push
add
add
inc
add
add
inc
add
or
add
inc
add
inc
add
dec
add
add
inc
add
add
add
push
add
dec
add
inc
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
add
add
inc
add
dec
add
inc
add
dec
add
add
add
add
add
and
add
add
call
add
add
add
add
add
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
mov
addb
add
addb
add
add
add
add
mov
add
add
mov
ja
mov
add
add
mov
ja
js
mov
add
mov
daa
ja
js
mov
add
ja
andb
ja
mov
add
or
and
and
js
mov
add
jb
jb
js
js
mov
add
ja
js
mov
add
ja
js
mov
add
ja
js
mov
add
and
js
mov
or
and
and
js
mov
or
and
and
js
mov
or
ja
and
daa
js
mov
or
ja
and
clc
mov
xchg
ja
ja
ja
jg
mov
ja
ja
jl
int3
int3
ja
clc
addb
xchg
ja
ja
incl
jg
add
xchg
jl
int3
int3
int3
int3
incl
jg
add
ja
pushl
decl
clc
addb
ja
mov
int3
int3
decl
addb
or
mov
incl
add
add
clc
mov
int3
iret
clc
mov
add
add
decl
incl
add
add
add
mov
clc
decl
add
add
incl
add
add
or
incl
add
add
add
mov
add
inc
incl
cld
add
lock
inc
add
incl
add
cld
add
aas
clc
add
pop
clc
add
pop
clc
add
pop
clc
add
pop
lock
add
add
add
pavgb
add
loopne
add
loopne
add
loopne
add
rolb
add
add
add
add
add
add
add
add
pop
addb
jg
add
jg
add
jg
add
push
add
incb
add
incl
pop
decl
pop
xlat
in
cmp
push
in
cli
cmp
bound
and
jg
int
movsb
sbb
dec
js
and
jecxz
and
mov
xor
lods
lret
sar
inc
gs
out
addb
mov
mov
repnz
imul
push
adc
pop
in
xchg
movsb
mov
jmp
mov
and
jb
jmp
repz
pop
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
jno
mov
call
stos
fwait
cmp
jbe
in
add
push
js
mov
pop
pop
mov
add
add
mov
or
pushl
push
mov
pop
pop
mov
sub
sbb
xor
jmp
push
push
clc
shll
aaa
movsb
or
push
das
cmp
add
or
push
push
pop
popl
and
call
in
and
pushf
movsl
push
pop
pop
sub
add
dec
dec
mov
cmp
jne
xor
jmp
cmpsb
out
cmp
fsubrp
outsl
push
mov
sbb
xlat
les
cs
pop
gs
sti
pop
add
jge
jl
mov
icebp
xchg
mov
into
mov
inc
sub
aas
sti
inc
or
pop
add
subb
mov
mov
xchg
push
dec
xchg
popf
mov
jnp
adc
imul
mov
xor
and
cltd
int3
pmaddwd
sti
pop
sahf
adc
pop
add
xchg
mov
js
fldcw
jmp
add
xrelease
adc
dec
pop
js
dec
push
or
mov
lock
out
sbb
aas
psubw
fwait
mov
loopne
xor
es
sti
out
sar
add
sub
cmp
mov
inc
test
sub
add
repz
jl
ljmp
gs
pushf
bound
add
test
mov
sub
insl
out
mov
in
mov
gs
or
jnp
inc
gs
call
mov
jnp
cmpsb
mov
mov
test
xchg
in
mov
mov
xorps
cmp
into
or
gs
pop
lea
or
xor
insl
or
add
rcr
sub
and
dec
pop
and
fwait
cmp
or
cmpb
or
push
subl
les
jmp
in
pusha
stc
fsubs
icebp
cmp
dec
mov
cs
jl
xor
inc
inc
mov
movsl
inc
icebp
test
inc
icebp
test
add
push
cmp
dec
pop
mov
test
fistpl
aaa
jg
iret
push
jb,pt
xchg
dec
daa
sbb
or
scas
jmp
dec
mov
insl
mov
push
int
cmp
sub
lds
lds
inc
inc
adc
jns
loopne
pop
lret
jp
xor
mov
std
cmp
test
jbe
pop
pop
icebp
cmc
xor
sub
jb
stc
test
jno
cwtl
outsl
push
loopne
add
and
ja
and
out
out
cs
pop
sahf
dec
jno
mulb
ljmp
fnsetpm(287
xor
inc
or
mov
dec
pop
test
lock
or
and
push
adc
jnp
jge
mov
add
fstpl
inc
imul
cmp
sub
xor
scas
inc
out
and
mov
mov
and
nop
pop
daa
aam
push
into
cmpb
and
jns
and
lret
sahf
iret
repz
and
adc
xchg
xchg
or
sbbb
sbbb
sbb
mov
cmpb
jge
push
fadds
fwait
repz
in
mov
fistpl
dec
add
inc
call
js
bound
insl
loope
mov
jae
out
push
xchg
scas
dec
add
inc
push
js
bound
insl
loope
scas
mov
mov
or
jns
sahf
repnz
adc
jge
out
enter
jl
in
sbbl
and
xor
mov
scas
or
mov
mov
xchg
es
iret
or
or
mov
mov
or
in
mov
mov
xlat
xchg
xchg
or
jge
lcall
push
dec
das
jl
or
jge
int3
add
test
add
arpl
sub
or
jge
xchg
popf
mov
out
jl
mov
stos
sbb
add
arpl
lods
sbb
add
arpl
mov
lcall
inc
das
mov
scas
xchg
mov
iret
xchg
or
sub
or
jge
gs
mov
bound
mov
decb
mov
inc
jne
xchg
lods
lods
dec
lcall
stos
stos
sbb
fldt
out
mov
dec
bound
lds
repz
gs
xchg
or
sbb
sub
mov
testl
sub
mov
cmove
xchg
int3
add
mov
or
or
addr16
or
push
mov
or
pop
push
outsl
pop
and
fistpl
mov
and
lcall
push
push
and
mov
stos
int
and
or
mov
sub
or
add
call
adc
insb
xor
mov
stos
int
je
mov
jmp
mov
jl
hlt
adc
xor
mov
stos
int
mov
iret
gs
jl
hlt
adc
xor
mov
stos
int
mov
or
mov
dec
mov
xor
push
mov
mov
call
adc
insb
xor
mov
pusha
xchg
out
jl
loope
ljmp
xchg
xchg
push
out
mov
push
push
xor
xchg
insl
ret
bound
adc
gs
pop
test
mov
hlt
fisttpl
push
roll
mov
aaa
and
das
mov
gs
cmp
mov
mov
or
jl
mov
inc
fadds
mov
and
mov
add
mov
inc
xchg
mov
in
mov
mov
fmuls
pop
aaa
xchg
mov
or
adc
or
xchg
pop
scas
arpl
mov
lods
into
sub
in
call
daa
loopne
stos
call
lret
dec
mov
lahf
fwait
sbb
movsl
adc
cmc
loope
xor
js
add
mov
add
mov
and
scas
xchg
loop
xchg
andl
mov
ret
shlb
xlat
mov
rcr
sub
fwait
inc
out
das
mov
in
cmp
mov
xlat
pop
jbe
or
jl
or
jl
or
jl
or
jl
and
aaa
pop
sub
jge
dec
and
mov
mov
or
jl
or
mov
or
jl
or
push
pop
inc
js
adc
scas
xchg
jns
sub
inc
sti
aam
outsb
mov
movsb
mov
mov
pushf
adc
gs
push
lahf
add
movsl
int3
jle
lcall
add
scas
jle
push
std
mov
mov
push
push
jl
xlat
jge
ljmp
push
cmpb
jecxz
push
add
pop
xchg
out
cld
and
stos
pop
and
jnp
mov
jle
mov
mov
xor
sbb
jl
jg
imul
inc
jmp
jo
push
mov
and
fnstenv
iret
jno
xor
jae
popf
jmp
cs
cmpb
ds
pop
in
mov
pop
sbb
sbb
jae
cwtl
mov
pusha
push
popa
pop
and
sub
xchg
popf
daa
pusha
push
adc
adc
inc
mov
sbb
stos
cmpb
adc
pop
xor
cli
push
inc
mov
inc
or
ficomps
andl
sub
pop
jmp
add
hlt
dec
adc
sub
cli
ficoml
inc
or
test
inc
clc
std
js
add
cli
add
aad
add
sahf
cmc
jbe
test
fisttpll
in
insl
cli
sub
fwait
mov
scas
mov
ljmp
inc
frstor
jg
sub
or
cmp
pop
sbb
sbb
xor
and
xor
loopne
pop
test
fdivr
xchg
and
scas
push
pop
xor
imul
dec
jb
js
mov
inc
inc
outsl
pop
icebp
jnp
add
mov
xchg
push
lcall
or
pop
ss
adc
sub
and
dec
and
sbb
dec
pop
xchg
mov
icebp
es
xor
or
mov
lcall
mov
leave
mov
jb
pop
leave
mov
fidivl
xchg
or
cmp
dec
imul
frstor
xorl
jle
adc
lahf
and
fwait
sti
pop
ret
fcompl
fdivs
push
mov
or
leave
lret
fadds
mov
rcll
xchg
sti
stos
leave
pop
inc
mov
inc
mov
dec
xor
sbb
mov
aaa
add
ret
mov
or
inc
jmp
popf
out
inc
mov
adc
or
adc
inc
cmp
gs
mov
insb
dec
xor
cmpsb
sub
mov
xor
push
insl
loopne
push
pop
std
mov
mov
push
xor
js
mov
adc
xchg
test
out
stos
icebp
push
xchg
add
add
or
add
add
dec
add
dec
add
xor
adc
lods
adc
add
jb
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
lods
adc
add
adc
add
scas
adc
add
adc
add
scas
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
adc
add
scas
adc
add
scas
adc
add
scas
adc
add
scas
adc
add
scas
adc
add
scas
adc
add
scas
adc
add
scas
adc
add
scas
adc
add
scas
adc
add
scas
adc
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
gs
jne
xor
cs
insb
add
jb
fs
insb
add
outsb
imul
insb
add
outsb
insl
insl
cs
insb
add
jb
imul
add
gs
jne
xor
cs
insb
add
imul
insb
add
jbe
jo
xor
cs
insb
add
xor
xor
fs
insb
add
insl
arpl
xor
fs
insb
add
gs
insb
xor
cs
insb
add
gs
xor
fs
insb
add
jbe
jo
xor
cs
insb
add
imul
fs
insb
add
jbe
jo
xor
cs
insb
add
popa
arpl
xor
fs
insb
add
outsl
arpl
xor
fs
insb
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
add
add
scas
adc
add
scas
adc
add
scas
adc
add
scas
adc
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
adc
add
add
add
add
adc
add
adc
add
add
add
add
add
add
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
mov
add
add
add
add
je
gs
outsl
popa
jb
push
jns
add
add
popa
jb
push
gs
imul
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
push
dec
gs
jo
outsb
inc
outsb
jne
inc
add
add
je
jb
gs
gs
fs
imul
jbe
dec
jne
push
jb
je
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
jae
jb
gs
je
imul
outsb
jb
popa
insb
imul
arpl
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
add
inc
dec
outsl
arpl
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
push
dec
outsl
je
data16
arpl
inc
add
add
gs
je
push
imul
inc
add
add
jo
jb
inc
jbe
outsb
je
add
add
jo
jb
popa
je
inc
popa
jo
jne
gs
imul
add
push
gs
arpl
imul
add
popa
arpl
outsl
jb
popa
je
push
inc
add
add
inc
inc
insb
gs
outsb
jne
add
add
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
cmp
add
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
ret
mov
sbb
add
dec
loopne
mov
xchg
dec
sti
clc
mov
les
in
jmp
test
test
mov
lcall
testb
mov
mov
rcll
repz
lcall
pop
mov
push
sbb
cvtps2pi
xor
sbb
enter
cmp
icebp
sbb
mov
loopne
and
mov
sarb
fmulp
cmp
mov
push
mov
xchg
insb
push
in
mov
mov
jmp
movl
add
aam
pop
push
sub
leave
out
push
addb
pop
xor
adc
in
sbbl
inc
pop
iret
xor
push
aad
and
push
daa
sbb
loop
cmp
fwait
xchg
lods
push
jno
dec
or
cltd
push
stos
jmp
out
jno
add
xchg
push
or
test
push
int
inc
cltd
push
xchg
xchg
mov
xchg
fsubrs
push
popf
in
and
pop
or
sti
stc
mov
lret
loopne
cli
xchg
push
add
loope
jo
cmpsb
clc
cmp
ret
push
mov
and
aad
adc
add
pop
icebp
sub
xchg
cmp
aam
xchg
andb
insl
mov
fistpll
pop
stc
push
jnp
in
cli
mov
lea
mov
repnz
add
repz
inc
mov
jg
lods
cltd
jnp
mov
add
adc
lahf
outsb
mov
nop
scas
add
jecxz
xchg
pop
push
mov
inc
xchg
repnz
xchg
pop
shlb
dec
mov
cmp
ja
mov
ffree
dec
push
or
or
mov
mov
test
pop
aas
xor
test
mov
xor
fcompl
jne
std
jl
cmp
mov
xchg
inc
sbb
and
in
scas
mov
ret
mov
fisttpll
xchg
jbe
cmpb
pop
mov
and
arpl
dec
loopne
rorb
inc
popa
sub
sub
dec
push
enter
into
push
mov
add
lods
jp
xor
adc
jge
in
jno
rcr
idivl
cwtl
inc
cmpsb
cmp
loope
mov
icebp
jnp
jl
nop
sub
xchg
mov
xchg
hlt
dec
cli
jg
lods
dec
and
dec
jg
gs
and
aaa
adc
or
jg
add
mov
bound
scas
xchg
push
filds
test
push
inc
bnd
sbb
into
test
inc
and
shlb
add
dec
repz
add
xchg
rcr
pop
sub
ds
popa
and
add
dec
stos
inc
push
mov
mov
xchg
mov
mov
test
and
pop
mov
push
xchg
jl
lret
xchg
prefetch
inc
inc
fsts
dec
pop
cld
lods
inc
jae
cwtl
jp
dec
xor
out
enter
jne
jb
and
mov
mov
mov
xchg
inc
cmp
ret
push
ror
int
dec
pop
push
cwtl
adc
inc
call
mov
aas
repnz
adc
cwtl
mov
jmp
adc
or
adc
and
popf
sbb
test
add
ljmp
lds
sub
mov
cmp
sbb
enter
out
lcall
jb
sahf
push
jns
inc
sbb
lcall
fst
icebp
out
adc
loop
pushf
mov
ss
lds
push
in
jl
sub
nop
je
pop
icebp
push
repz
orb
cwtl
inc
lods
xchg
das
mov
jne
jp
flds
ret
mov
mov
dec
jbe
scas
popa
icebp
jno
pop
clc
fsub
xchg
lcall
movsl
adc
mov
cld
decl
cmpsb
int3
push
and
mov
in
pop
add
std
fadd
ja
mov
xchg
test
add
arpl
icebp
mov
mov
or
sub
mov
push
mov
data16
sbb
or
add
jnp
push
lahf
mov
mov
fnsetpm(287
jg
or
outsl
popa
adc
mov
xchg
stc
clc
or
dec
mov
pop
shlb
jl
in
lret
nop
add
ds
nop
push
jb
xor
mov
or
fistps
adc
jp
cwtl
push
inc
push
es
mov
int
cmp
mov
xchg
cmp
sub
out
cmpsb
sub
inc
push
nop
xchg
insb
xor
insl
lret
adc
je
int3
jge
pushf
pop
mov
ss
repnz
and
push
loop
shlb
stos
fsubrl
pop
in
jae
clc
push
lcall
mov
sub
scas
push
repnz
xchg
outsb
sti
fldl
and
mov
xchg
cltd
or
xor
cmp
mov
repz
es
int3
mov
jae
out
out
shrl
mov
adc
cmc
xchg
movsl
imul
xchg
mov
inc
shll
dec
sar
push
pop
les
and
popa
in
outsb
mov
adc
stos
mov
arpl
mov
adc
outsb
fs
fdivr
xchg
mov
sbb
stc
in
call
lret
enter
add
jge
test
adc
adc
mov
addl
xchg
jecxz
popa
push
dec
sbb
sub
loopne
cmp
push
in
xor
daa
sbb
fnstsw
sub
fisubl
and
les
add
ja
mov
into
cmc
mov
mov
inc
nop
lcall
das
out
shrl
dec
fnstenv
mov
notb
push
mov
scas
mov
es
jns
mov
xchg
mov
or
and
and
gs
nop
dec
xlat
mov
leave
jnp
mov
insl
xchg
cmp
rcrb
pop
orps
mov
stc
sbbl
xlat
jge
mov
fwait
cmpsl
flds
inc
test
mov
addr16
xchg
and
mov
mov
jle
pop
sub
icebp
sub
push
or
xor
std
out
xor
sarl
fadds
inc
mov
stc
insb
repnz
inc
xor
shlb
jp
inc
les
stc
sti
mov
cmp
fs
fcoml
mov
rcll
subb
xchg
imul
cmp
or
aam
ret
int3
lcall
jge
mov
add
jp
cmpsb
mov
or
inc
aam
xchg
outsb
mov
mov
aad
dec
xor
mov
mov
gs
decl
shlb
rolb
sarl
lock
loope
roll
dec
mov
inc
pop
xor
fldenv
mov
cmp
mov
test
int3
ja
jmp
fimull
xorl
js
push
inc
loop
dec
test
add
and
mov
popf
push
out
repnz
insl
shlb
sub
inc
cltd
xor
pop
adc
xor
and
jb
data16
cmp
aas
je
or
dec
adc
adcl
sbb
ja
pop
lods
xchg
sbb
loope
enter
cmp
stc
inc
or
movsb
scas
and
inc
imul
jb
mov
mov
xchg
js
lcall
inc
ja
sbb
add
cmp
dec
add
loopne
imul
push
xchg
loopne
outsl
insl
into
jo
call
adc
xlat
sahf
outsb
shrb
xchg
dec
add
jne
inc
xchg
mov
lea
cltd
or
cli
or
dec
and
xchg
pusha
push
xor
xchg
inc
es
jns
rol
rcll
cmp
ja
xchg
dec
xor
cmp
push
fnsave
jle
addr16
rcrl
hlt
push
and
mov
xchg
out
je
es
jmp
sbb
mov
clc
aad
sbb
sub
mov
fwait
mov
jge
xchg
stos
rolb
aaa
xor
mov
or
movsb
pop
sub
lret
fsubp
xlat
jo
xchg
das
pop
xchg
out
add
push
pop
jge
fs
jno
mov
pop
mov
mov
cmc
nop
aaa
insb
lods
push
push
aad
out
fst
xor
test
mov
divl
nop
inc
push
xchg
mov
inc
adc
cmp
sub
pop
and
outsl
add
sbb
push
mov
sub
jnp
jp
jmp
jle
xor
mov
repz
std
xchg
sub
jmp
push
and
call
pop
rcrb
sub
inc
js
mov
call
xor
scas
arpl
pop
sbb
xchg
lea
ds
sub
pop
stos
add
insb
pop
cmp
in
stos
pop
xorl
shll
je
jecxz
or
clc
mov
cmp
fisttpll
je
icebp
cli
push
xor
dec
aad
es
jle
icebp
sub
out
loop
add
or
arpl
sub
xor
xchg
mov
push
push
loop
jecxz
mov
jmp
scas
mov
popf
sbb
stos
dec
clc
sbb
andl
cmpsb
sbbl
fimuls
push
sub
sub
out
aad
add
dec
ljmp
scas
ss
andl
inc
outsl
add
pop
lds
xchg
push
bound
sub
xchg
test
sub
push
inc
and
test
push
xor
fcoms
insb
push
rol
jge
xchg
mov
add
dec
scas
dec
les
add
dec
int3
inc
lahf
xor
sub
test
add
fstl
jle
js
inc
jbe
lods
scas
cmp
icebp
insb
movntps
inc
sysenter
in
or
cmc
into
outsb
jmp
cs
lock
lea
stos
stos
arpl
and
cmc
pop
pop
cmp
and
pop
clc
aad
inc
sub
jne
es
fld
xor
aam
test
cltd
cs
push
arpl
sbb
lock
movsl
leave
ja
sub
jge
jl
ljmp
mov
pop
push
xlat
xchg
pusha
pop
jmp
jl
lock
scas
repz
and
fdivrs
insl
ja
imul
jg
inc
or
mov
leave
popa
and
dec
dec
cmpl
push
xor
into
addb
nop
subl
sbb
call
inc
dec
lret
rclb
in
sub
pop
imul
lahf
or
lds
pop
fwait
mov
stos
push
lahf
push
sbb
imul
lret
nop
jae
out
pop
decb
or
enter
xchg
xchg
inc
stos
pusha
in
in
stos
shlb
add
jnp
cwtl
hlt
xchg
enter
jno
cs
or
xor
sbb
mov
xchg
xchg
mov
mov
jle
fistpl
daa
xchg
and
push
push
rcl
repnz
xchg
test
in
loope
icebp
inc
jb
inc
cmp
call
subb
pushf
enter
mov
adc
mov
rcr
lret
out
sbb
and
mov
cmp
rolb
jo
jns
pop
popa
out
push
lock
adcl
test
xchg
nop
xor
xlat
ss
mov
ret
leave
mov
inc
hlt
mov
or
cwtl
lahf
fwait
ds
repnz
fldenv
add
cmp
dec
dec
cmc
pop
out
pop
xor
scas
aas
js
mov
pop
dec
cmp
mov
out
ljmp
or
js
jl
mov
xlat
xor
mov
call
popa
cmpsb
mov
or
rep
jg
sbb
mov
iret
jle
aas
pop
fwait
jmp
pop
push
sub
jecxz
leave
inc
inc
sub
fucomp
xor
cli
pop
sub
cmp
loopne
jnp
in
pop
mov
inc
push
shr
jns
mov
std
or
loope
inc
inc
out
dec
mov
int3
lock
add
push
mov
sar
dec
or
push
insl
fbld
pushf
xor
js
fsub
adc
movsb
or
or
outsb
cltd
mov
orl
in
mov
pop
jmp
cmpsl
in
add
sub
ret
pop
or
inc
cltd
adc
mov
push
mov
pop
lds
es
sbbl
dec
fimull
xor
add
jmp
and
xor
pop
jmp
loopne
push
popf
dec
inc
xor
adc
sub
cmpb
fisttpl
popl
loopne
cltd
cmp
cld
lahf
sub
les
sub
add
jns
mov
and
and
imul
or
fidivrl
daa
sysenter
mov
out
cmp
pushf
stos
xchg
add
rolb
pushf
and
in
pop
inc
jne
lods
lods
cmc
jecxz
lods
mov
and
lret
jmp
aaa
sbb
xor
outsl
jp
xchg
and
insl
xor
pushf
pop
and
out
xchg
repz
jbe
iret
je
orl
push
mov
sub
inc
or
dec
shll
jno
scas
and
and
rcl
push
jae
pop
cmp
and
data16
pop
in
mov
arpl
mov
outsb
int3
pop
lock
inc
enter
lock
inc
mov
test
mov
mov
and
pop
pop
mov
cltd
filds
dec
jne
cmp
aas
xchg
inc
movsb
sbb
jg
mov
sbb
sbb
mov
pop
jae
and
shl
cs
dec
cmpsl
hlt
cmpl
loop
stos
or
mov
loopne
dec
jecxz
sub
xor
cmp
fwait
movsl
jge
mov
jo
push
sub
xchg
dec
or
xchg
mov
nop
into
xchg
loop
movsl
and
push
jle
cmpsl
adc
rcrl
lret
mov
push
nop
stos
les
push
or
cld
jg
jb
enter
loopne
and
adc
sbb
sub
add
scas
cmp
jg
add
or
ja
push
cmp
cli
scas
pushf
jge
outsl
adc
enter
add
pusha
dec
cld
mov
adc
xchg
mov
inc
xchg
push
sub
dec
push
ljmp
mov
dec
or
mov
inc
stos
push
pop
scas
sbb
aas
leave
dec
cmpl
push
xchg
mov
xchg
lret
mov
test
xchg
inc
push
loop
scas
sbb
lock
aam
ds
fdivs
push
lret
sub
pusha
fdivr
ret
pop
sbb
enter
xorb
popl
inc
paddusb
test
sub
fbstp
insb
and
lcall
jp
les
lcall
or
jle
cmpsl
cwtl
mov
ret
mov
lret
pop
loop
enter
adc
int3
outsb
loop
mov
std
lock
dec
in
sub
jb
and
push
sub
iret
adc
js
mov
jecxz
xchg
ja
pop
jno
dec
popa
fwait
xor
inc
xchg
mov
mov
cmp
xor
imul
mov
push
or
push
jg
adc
test
add
cmp
je
add
or
sahf
jo
scas
push
pop
cmp
xlat
or
mov
lods
inc
ljmp
lea
xlat
push
movsl
adc
adc
jg
jmp
lahf
sub
mov
ja
mov
call
push
repnz
or
push
xchg
lret
test
mov
and
pop
jg
dec
nop
adc
out
add
mov
dec
or
aaa
mov
lahf
mov
fldenv
cmc
sub
iret
nop
or
cmpsl
inc
shld
and
cmpb
adc
pop
or
dec
and
je
inc
sub
cli
sbb
jle
call
pop
testb
cmp
mov
sub
dec
ds
push
cmpsl
sub
ss
in
mov
xor
lcall
dec
test
lods
pop
add
cmp
arpl
fs
jae
aad
mov
jmp
sub
pop
mov
mov
gs
adc
inc
push
mov
pushf
mov
xchg
sub
push
push
mov
lock
int3
jno
sti
insl
mov
sbb
mov
jbe
add
adc
jge
mov
sub
subl
imul
mov
sub
pop
and
cld
and
cmpb
push
icebp
or
adcl
sahf
mov
outsl
sub
arpl
ss
pop
xchg
adc
xorb
mov
pop
and
ljmp
dec
je
sbb
pusha
enter
ljmp
or
xchg
out
mov
or
movsl
popa
addl
es
jne
cmpb
xchg
lock
nop
cmp
mov
add
pop
dec
div
add
negb
mov
popa
sub
lahf
insb
mov
cmpsb
fstpl
push
push
mov
sbb
dec
cmp
dec
xlat
ds
dec
hlt
jmp
je
cld
push
jp
fwait
add
xchg
orl
adc
mov
imul
imul
adc
dec
adc
lds
push
xchg
cmc
push
jo
mov
and
outsl
dec
pop
mov
adc
cmp
insb
push
rcl
push
dec
jae
test
daa
insb
rolb
insb
inc
lret
adc
std
cmp
dec
jne
sbb
enter
mov
imul
mov
mov
shlb
mov
mov
cmp
in
sbb
pop
lahf
lcall
mov
add
mov
out
loop
sbb
ja
std
test
lahf
movsb
adc
cwtl
xor
inc
xor
rorb
jb
xlat
mov
movsl
out
add
pop
insl
insl
ud0
mov
aad
pop
pop
mov
les
sahf
cltd
push
pusha
sub
popf
out
mov
sbb
and
cmp
pop
mov
out
stc
jle
movsb
movsl
add
cmp
aad
setb
ss
sub
shrb
into
or
pop
fidivs
jge
and
cmp
sbb
dec
scas
xor
scas
jg
ljmp
or
and
mov
push
jg
andb
or
pusha
int
cmpsb
jecxz
fcmovu
push
rcll
test
ret
test
hlt
dec
in
mov
sbb
orb
pop
mov
fldl
out
frstor
pop
out
mov
fldt
mov
mov
cwtl
cmpsl
push
in
sbb
pop
pop
sub
mov
inc
mov
push
stos
stc
iret
push
fnstcw
in
cltd
es
faddl
dec
adcb
inc
enter
or
xor
pop
push
scas
jecxz
mov
imul
in
lea
xchg
nop
xchg
outsb
lock
add
addl
je
push
shll
inc
push
dec
aad
adc
negb
shl
sbb
cwtl
sbb
out
cmpsl
adc
sub
mov
xor
jne
jmp
mov
pop
idivb
in
cmpsl
pop
nop
add
int
xor
mov
test
sub
push
or
sarb
jno
push
cltd
push
mov
adc
cmc
inc
cmp
scas
fsubrl
rol
imul
cmp
repnz
add
pop
arpl
cmp
mov
adc
inc
mov
jae
xor
push
xchg
inc
testl
test
push
and
ret
jg
movsb
aam
les
les
push
in
dec
insl
bound
pushf
ja
push
cwtl
jbe
fildll
or
push
aas
mov
gs
inc
movq
mov
or
out
daa
adc
jmp
jmp
inc
ret
in
rcl
mov
aaa
mov
cmp
shrb
xor
dec
mov
ficompl
ja
lods
jmp
mov
and
jmp
dec
sarb
out
jns
insb
movsl
in
add
cli
dec
cld
repnz
fimull
cwtl
sbb
push
push
cltd
jecxz
cmp
jg
jno
test
adc
push
lods
mov
pop
fistps
add
xor
lods
sti
sub
out
jbe
dec
sbb
stc
and
push
enter
dec
mov
cli
cmp
push
insb
push
loop
push
nop
jo
cmp
pcmpeqd
fwait
xchg
repnz
cmp
adc
sti
insl
adc
mov
jnp
inc
imul
sti
inc
outsl
cmp
jl
jecxz
and
ljmp
jecxz
jae
lret
cld
je
mov
push
jp
inc
cmp
movsl
pop
inc
xchg
jmp
xor
mov
mov
xchg
test
push
mov
loop
arpl
fcmovnbe
test
lds
nop
sbb
mov
out
arpl
inc
mov
jle
mov
test
je
dec
divl
ret
and
scas
xor
xor
sub
mov
jne
enter
ret
rol
dec
test
push
pop
sbb
jno
or
addr16
outsl
dec
mov
or
int3
xchg
mov
aas
adc
sarb
mov
jae
push
shll
into
movsl
xchg
or
xchg
mov
mov
jne
ret
or
sub
xor
or
das
pop
adc
imul
lods
scas
ffreep
cmpb
adc
push
xchg
icebp
pusha
in
mov
aaa
cmp
jle
xchg
ja
addr16
mov
xor
pop
inc
ja
js
push
jae
xchg
iret
enter
or
cmc
sub
lods
or
add
cld
jl
out
or
adc
jge
repnz
movsl
shrb
xchg
rolb
jmp
mov
loop
out
stc
mov
out
and
in
lock
iret
das
iret
jno
pop
mov
pusha
sub
or
in
pop
inc
sub
int3
inc
jp
push
pop
loope
jnp
aam
imul
sbb
out
pop
in
std
jle
jno
mov
cltd
leave
cmpsl
mov
inc
cmp
jno
sub
push
push
ret
sbb
popf
ret
cmp
or
test
xchg
adc
pop
rclb
sbb
pop
lcall
outsl
add
mov
aas
dec
inc
adc
inc
js
int
enter
sbbl
xchg
cmc
push
nop
push
add
cmp
and
cld
mov
xlat
orb
addr16
xor
daa
push
fwait
jp
pop
sbb
dec
test
jbe
mov
xor
inc
push
inc
stos
inc
insl
pop
aam
into
mov
jnp
mov
mov
pushf
ljmp
adc
fcos
insb
push
in
adc
out
jl
xlat
int
cltd
and
xchg
push
test
frstpm(287
stos
sbb
jg,pt
pop
es
add
jnp
mov
pop
ret
sbb
mov
sbb
push
push
movsb
add
clc
mov
mov
add
and
mov
or
jl
push
lahf
stos
data16
scas
mov
sub
and
dec
rorl
out
aas
inc
cmp
shll
add
xchg
in
mov
lcall
sarb
dec
jnp
test
xchg
std
jecxz
push
ja
cmp
cmp
jno
gs
inc
rclb
ljmp
cmp
inc
xor
je
push
aad
and
repnz
int3
or
cwtl
sub
or
jbe
fidivl
insb
imul
pop
jecxz
das
jmp
adc
pop
test
jae
aaa
or
pushl
ds
sub
sbb
scas
mov
lret
sub
loope
cmp
jae
ja
arpl
insl
push
dec
jnp
cmp
adc
cmp
rolb
cli
jmp
int3
int3
lds
adc
mov
mov
subb
call
gs
pop
mov
mov
sbb
stc
dec
lea
pushf
lret
ss
or
push
jmp
cmpsl
xchg
adc
lret
js
push
addr16
or
adc
and
fwait
cmp
out
sub
pop
mov
jbe
stos
mov
leave
cmp
dec
xchg
xchg
aam
outsb
fldenv
cmp
jo
mov
cmp
loopne
jp
test
xchg
repz
push
fidivl
or
add
int3
push
add
pop
subl
xchg
xchg
pusha
ficoms
aam
stos
mov
sub
jge
xor
roll
psllw
mov
xchg
fsub
jnp
push
pop
mov
push
test
insl
xchg
and
addl
push
mov
mov
cmp
out
pop
rclb
pushf
cmp
lds
sbb
pusha
scas
lods
push
jmp
ret
shrb
dec
add
insl
mov
xchg
test
push
pop
jecxz
or
lahf
pop
jg
pop
add
jmp
adc
sbb
fisubrs
pusha
add
inc
shlb
shrb
mov
lds
jb
movsl
shlb
rcl
rcr
mov
and
fistpl
scas
and
addb
mov
mov
je
insl
add
lcall
mov
call
adc
cmova
push
mov
pop
subb
stos
int3
stos
nop
das
popa
sub
xor
mov
or
nop
insl
test
daa
adc
gs
clc
daa
pop
adc
adcb
jnp
dec
sub
ja
lret
std
mov
fildl
sti
cs
nop
addl
ret
or
ficoms
xchg
in
inc
leave
mov
sub
repz
xor
fwait
inc
lock
dec
ret
addl
lcall
sbb
xchg
pushf
outsl
inc
insb
sub
inc
into
call
cvtps2pd
subb
filds
lods
mov
add
inc
cmp
pop
pusha
sub
cmp
adc
or
push
pop
aas
cmp
inc
nop
in
add
dec
addl
ret
dec
dec
mov
pop
xor
mov
adc
inc
xor
movsl
and
mov
mov
push
xor
dec
mov
mov
mov
in
gs
xchg
sarb
popa
dec
lock
loopne
adc
mov
loop
sub
cmp
fwait
out
lds
inc
sub
gs
ljmp
xor
mov
xchg
push
rolb
shrb
jmp
out
les
lea
lds
sbb
add
jb
jp
out
sahf
in
jge
mov
pop
in
xor
add
dec
jae
gs
aaa
idiv
cmpsl
xchg
dec
jmp
xor
lahf
push
das
adc
pop
imul
jge
push
jge
or
loopne
lods
lods
aad
mov
mov
repnz
and
out
lds
cmc
daa
fxtract
outsl
stos
lea
std
clc
jecxz
ror
lret
cwtl
jbe
inc
ret
pusha
inc
iret
sbb
push
jmp
arpl
xor
gs
pop
pop
daa
push
in
mov
loope
and
add
xor
js
and
addr16
and
fsts
sbb
dec
fsts
mov
js
adc
insb
sub
insl
and
test
icebp
ret
dec
fmuls
adcl
adc
clc
cltd
jmp
lods
ficoml
mov
pop
xor
push
sub
push
popf
test
mov
push
mov
pop
mov
insl
pop
test
jae
xor
jns
int3
loop
jp
in
movsl
mov
ret
sub
pop
xor
jecxz
es
negl
cli
addb
or
imul
or
push
frstpm(287
xor
mov
and
or
scas
lods
ss
add
movsl
dec
test
js
pop
pop
or
mov
dec
mov
dec
movsb
stos
decl
repnz
and
sub
or
ret
jbe
add
lock
ret
hlt
lret
sbb
xlat
stc
push
data16
adc
idiv
test
pop
aaa
int3
adc
jmp
cmp
stos
mov
and
and
popf
xorl
bound
dec
loope
mov
xchg
nop
rorl
jae
ds
test
cmpl
push
adc
imul
xchg
pusha
out
pop
mov
lods
outsb
test
mov
mov
mov
shlb
push
mov
ffree
fisubrs
push
xor
cmc
das
jg
sahf
pop
xchg
fnsave
push
inc
fisubrl
mov
pop
xchg
inc
xor
jae
jo
inc
imul
decl
pop
pop
rcrb
inc
das
sub
scas
jne
push
adc
dec
ret
aas
jne
pop
pop
mov
dec
in
fsubrs
mov
fistps
inc
loope
and
stos
xchg
and
inc
xchg
sub
or
mov
add
push
test
jmp
in
arpl
mov
imul
mov
insb
orl
sbb
mov
mov
adc
div
xchg
lcall
dec
int
add
sbb
mov
test
push
cmc
iret
out
mov
dec
dec
xor
fisubrl
es
mov
aas
or
mov
mov
inc
lcall
inc
or
outsb
popa
stc
sbb
mov
sub
lahf
loopne
fildl
lea
aaa
aam
orb
mov
insb
repnz
hlt
in
test
push
rdmsr
sbb
adc
dec
cltd
ret
daa
pop
or
adc
xchg
cmp
adc
outsb
sbb
lret
pop
mov
jo
loop
arpl
inc
mov
arpl
mov
fptan
pop
push
enter
in
shrb
xchg
in
test
sbb
fisubs
and
movsb
mov
add
test
in
lea
addr16
lahf
dec
mov
jb
mov
mov
lret
mov
lods
fcmovnb
cmpsb
pop
shll
call
jp
jo
shll
adc
cmp
aad
pop
xchg
dec
mov
imul
adc
push
ret
xor
inc
ret
xor
out
sbb
pop
data16
mov
ds
iret
cwtl
sub
aas
mov
xchg
add
test
fndisi(8087
cmp
pop
jg
cld
sub
push
xchg
in
hlt
fwait
push
cmp
shlb
rol
mov
mov
xor
mov
push
dec
test
add
xchg
mov
cmp
ss
lcall
and
mov
push
push
leave
aam
sbb
or
cmp
ret
xor
inc
test
or
xchg
xchg
mov
cwtd
fimuls
cwtl
or
and
in
imul
mov
loope
std
cld
roll
xchg
orb
cmpsl
push
call
in
in
adc
xor
rorb
push
dec
push
mov
cmp
fs
inc
mov
xchg
mov
in
sbb
push
and
push
fwait
xchg
pop
mov
lods
test
xor
js
leave
push
shll
cltd
inc
adc
add
movsb
sub
inc
pop
lds
ds
pop
in
xlat
into
sbb
push
std
lods
test
nop
dec
inc
cmp
or
sbb
lret
sahf
stc
sbb
pop
jno
mov
stos
pushf
jb
call
sbb
mov
add
popf
xchg
mov
push
jmp
mov
daa
dec
negl
dec
inc
jmp
xor
push
jo
bound
hlt
cs
push
inc
inc
sbb
push
mov
out
jp
adc
mov
inc
sahf
or
aam
xchg
mov
aad
xor
or
adc
lret
pop
ret
mov
out
or
movsb
or
push
loope
mov
mov
inc
cs
ret
in
dec
enter
aam
std
lods
iret
mov
fsub
iret
sbb
and
out
inc
iret
pop
add
outsb
stc
pop
les
cmp
dec
aam
push
lods
outsl
mov
and
adc
testb
dec
xorb
stos
add
push
xor
cwtl
outsl
adc
es
ljmp
test
rorl
in
sahf
fdiv
push
xchg
andb
adc
pop
xlat
shl
or
aaa
dec
pop
je
jle
rcll
inc
pop
hlt
mov
lret
jp
daa
inc
movl
push
outsl
add
lret
dec
jmp
loop
xchg
push
add
add
jnp
das
push
xchg
xor
push
or
lods
mull
cld
adc
test
mov
aad
das
and
ret
in
clc
sahf
push
cmc
loope
cwtl
xchg
aam
mov
iret
push
shrb
setle
jo
xchg
xchg
inc
andl
mov
js
push
mov
ss
pop
adc
pop
dec
adc
lea
stc
mov
cltd
outsl
sarb
cmp
or
jecxz
xchg
push
ds
mov
lods
aas
mov
jg
daa
testl
push
pop
mov
sahf
add
sub
nop
pop
daa
dec
cmpsb
fs
pop
mov
das
xchg
sbb
inc
dec
xor
fwait
xor
popf
pusha
mov
jb
loope
rolb
sahf
sbb
xchg
cmpsl
push
rdmsr
test
push
cltd
jbe
cmp
adc
test
dec
and
addl
xchg
mov
adc
ss
gs
xchg
push
out
add
in
cmc
sbb
ror
add
pop
popf
aaa
pop
xorl
jns
into
pop
dec
repz
xchg
cmp
push
sahf
push
push
ja
lret
es
sub
sbb
test
xor
xor
test
fsub
test
sub
pop
mov
and
loopne
inc
stc
ljmp
cmp
xchg
leave
std
das
jno
add
cld
ret
movsl
popf
cmc
dec
sub
xor
xchg
sbb
lea
popa
mov
loope
cltd
pop
aas
into
dec
cld
sub
ret
ds
push
push
lods
and
xor
in
jecxz
xchg
and
cltd
mov
jnp
jecxz
ja
adc
pop
push
jnp
popf
stc
rcrb
and
mul
or
and
and
ret
test
cli
push
adc
inc
roll
and
cmp
mov
lods
fldcw
cwtl
in
aad
mov
in
cmp
fstp
decl
mov
loop
popa
outsl
mov
or
dec
mov
adc
add
fimuls
jle
mov
lock
iret
pop
lret
mov
jp
mov
sub
or
adc
jge
adc
adc
stc
cmpsl
pop
inc
mov
movsb
and
popa
xor
push
outsb
push
sbb
in
in
rcll
push
mov
insl
out
mov
push
adc
fldenv
cltd
cmp
jecxz
cmp
mov
jno
and
movsl
and
stos
hlt
test
js
dec
out
and
push
jmp
xchg
and
out
mov
out
aad
adc
jns
jo
int3
push
pop
jno
cmc
je
dec
and
cltd
xchg
lahf
sbbl
les
inc
and
or
or
repnz
cmp
mov
add
jle
mov
scas
pushf
jmp
jb
adc
cmp
mov
xchg
xchg
jecxz
xor
and
dec
mov
aas
cmp
bound
xchg
mov
xchg
inc
pop
push
dec
sub
cmpsl
dec
pop
sbb
xchg
mov
mov
mov
arpl
pop
push
out
stos
add
jnp
mov
in
into
push
rorb
jecxz
push
fiadds
cmp
test
jns
das
hlt
mov
cli
cmpsl
mov
daa
mov
mov
mov
jg
sub
mov
mov
add
push
cmpsb
ret
pop
cmp
mov
cmp
loopne
aad
or
and
jb
jbe
leave
sub
and
push
jmp
mov
nop
pop
inc
pop
mov
or
dec
lcall
loope
rclb
incl
dec
and
stc
dec
scas
push
sub
aam
add
or
xor
hlt
insl
jns
fdiv
adc
lock
or
push
cld
cs
lds
lea
insb
cli
xchg
add
jne
add
jmp
cmp
jg
inc
push
dec
test
push
test
imul
add
push
je
push
movsl
mov
rorl
mov
mov
push
scas
data16
xchg
sbb
mov
ljmp
sbb
lea
decl
cwtl
mov
pushw
shlb
stos
lret
xchg
imul
push
jb
adc
pop
jmp
xchg
cmc
inc
push
mov
les
xchg
orb
bound
decb
das
lret
jnp
push
xor
lea
xchg
nop
pop
sbb
and
call
icebp
xor
int3
adc
pop
bound
aam
neg
cmc
add
jbe
cmc
xchg
pushf
ret
mov
rorb
or
add
cmp
daa
push
fwait
mov
xchg
jge,pt
lret
sbb
inc
inc
pop
lcall
inc
cld
cmp
lea
mov
dec
push
adc
insl
add
or
test
adc
inc
es
xor
mov
add
pusha
xor
movsb
pop
sub
jnp
adc
enter
ret
mov
fadd
mov
shll
cli
pop
jb
sub
fidivrs
imul
rcrl
lds
xchg
adcl
sub
or
dec
idivb
sub
pop
mov
lods
push
lcall
sub
push
mov
lahf
sbb
sub
das
lods
adc
fisubs
pop
mov
push
popa
lcall
mov
or
jbe
bound
andb
mov
or
jbe
cltd
mov
sbb
mov
shlb
push
fisubrs
call
xorl
or
lock
mov
sub
aad
ds
jecxz
dec
int3
stc
std
inc
cmp
outsl
out
lods
or
mov
or
push
sub
fmul
jns
adc
mov
in
cmp
int
push
sbb
inc
mov
mov
in
pop
mov
imul
clc
cli
adc
push
pop
pop
andl
lahf
jecxz
fs
push
push
inc
mov
arpl
inc
dec
mov
xchg
popa
ret
or
mov
repnz
mov
adcl
xchg
sbb
out
hlt
hlt
jb
dec
mov
jg
sub
shl
pushf
fisubrs
std
iret
mov
jle
pop
cmp
decl
jmp
sbb
and
push
fstpt
mov
syscall
scas
fsubrs
cwtl
imul
cmp
jle
ret
fisubrs
lahf
pop
arpl
jno
cmp
xchg
inc
rcll
jo
dec
or
cmc
sbb
and
mov
jnp
add
jo
sub
into
adc
mov
cmp
aad
fcompl
dec
ja
sbb
mov
cwtl
xchg
mov
cltd
fists
je
push
jne
cmp
mov
mov
popf
shr
mov
fistl
movsl
mov
rorb
xchg
mov
out
add
lcall
ss
and
fdivs
sbbb
icebp
movsl
sub
jne
stos
or
imul
faddl
push
jle
mov
fwait
mov
jbe
leave
cmp
pop
cwtl
sbb
cmpsb
dec
push
xor
arpl
fwait
loopne
xor
cmp
sub
iret
scas
push
jnp
mov
mov
pop
xchg
jmp
mov
arpl
inc
rclb
cmpsb
sti
push
xchg
adc
data16
mov
shlb
xchg
in
sbb
cltd
sub
fwait
in
fsubs
xchg
jo
andb
ljmp
les
daa
dec
das
popf
test
mov
add
xor
jbe
imul
and
ss
ficoml
cmc
loop
and
sbb
jle
mov
jle
dec
pop
adc
imul
subb
fiadds
iret
mov
mov
push
jge
push
js
lock
sarl
fnstcw
mov
daa
dec
repnz
addb
and
adc
or
jp
inc
ja
insl
lahf
call
cs
mov
fiadds
jnp
stc
cmc
or
xor
js,pn
dec
and
inc
loope
jbe
xor
subb
test
pop
jb
popf
mov
sbb
mov
jmp
pop
es
sbb
lea
stc
std
cld
movsl
cmp
and
push
jno
pop
sub
dec
repz
xor
jmp
rcrl
pop
adc
mov
mov
inc
pushf
cmpb
jno
sbb
scas
adc
sbb
jmp
into
mov
stc
push
testb
sbb
pushf
out
in
int
lcall
fisttpl
sbb
add
sti
push
pusha
mov
pop
lea
cwtl
pop
and
movsb
pop
pop
hlt
add
and
scas
movsb
lret
mov
scas
mov
or
pop
or
das
lds
js
call
shrl
add
pop
push
aam
scas
xchg
lea
mov
mov
ds
imul
jnp
push
out
and
ficomps
jne
test
xor
cltd
pop
xor
out
popa
pop
mov
scas
lock
inc
jb
inc
adc
pusha
inc
ja
or
aam
scas
xor
mov
or
mov
adc
es
ret
mov
mov
push
add
pop
pop
lahf
mov
pop
std
fwait
push
mov
xor
add
test
dec
push
pop
xor
xchg
jle
movsb
mov
mov
xchg
les
xchg
outsb
mov
push
jp
fldt
fidivl
in
cltd
sub
sub
adc
inc
mov
and
lods
sahf
jb
xchg
cmp
pop
cmp
and
in
dec
xchg
xchg
sahf
push
cld
dec
cli
cmp
xchg
nop
daa
jl
fiaddl
xchg
or
add
es
sbb
push
sub
lods
out
mov
fnstcw
or
adc
inc
mov
lcall
imul
ds
add
xlat
add
fmuls
outsl
stos
ud2
jbe
je
addr16
fsubrp
dec
ss
lahf
int
iret
jge
in
lods
loop
fwait
dec
xchg
add
push
xor
mov
enter
testl
jnp
popa
out
imul
cmc
mov
dec
lods
cmp
adc
and
in
add
test
adc
xor
shrl
fldcw
fcompl
xchg
stos
and
mov
dec
xchg
push
call
fsub
adc
jl
call
mov
mov
sbb
add
pop
pushl
iret
mov
pop
into
cmpsb
stc
push
dec
xchg
xchg
mov
movsb
lret
adc
mov
xchg
ja
inc
idivl
shlb
push
stc
ret
mov
out
push
jmp
push
sub
xor
mov
call
sub
cmpsl
and
inc
stos
dec
add
sbb
inc
mov
xchg
decl
dec
push
enter
test
repz
sbb
mov
sbb
mov
add
pop
xchg
push
mov
mov
and
push
mov
cmp
pop
jae
and
push
aad
dec
sub
mov
xor
dec
jle
or
sahf
and
dec
add
rorb
shl
rcl
aam
outsb
rcl
rclb
sti
cmc
adc
or
dec
sbb
add
jl
stos
adc
je
lds
test
sbb
adc
fs
adc
sbb
rolb
pop
mov
pop
ss
ljmp
mov
aad
adc
mov
mov
sbb
inc
fnstcw
rorb
fs
pop
add
pop
and
jg
adc
and
and
push
jl
push
aam
xchg
xlat
xchg
scas
inc
cmc
xchg
lods
fiaddl
jg
cmc
jns
test
lret
mov
add
test
fcmovnu
rol
mov
mov
cmp
pop
inc
mov
cmp
sbb
jo
jbe
and
mov
or
shl
xchg
cmp
jnp
adc
dec
mov
in
outsb
lret
pop
cmp
loopne,pn
stc
sub
outsb
jnp
cmp
lret
or
dec
and
mov
jl
pop
mov
adc
mov
jle
sahf
in
ss
fxch
cmp
fisubs
test
mov
add
xchg
pop
push
and
sbb
mov
cmp
rcll
sbb
sti
pop
insb
ret
out
mov
clc
and
arpl
test
mov
aam
adc
adc
lahf
jno
add
adc
or
dec
in
xchg
add
rcr
inc
jmp
aad
sbb
mov
rol
lods
shll
mov
arpl
jp
pop
ret
adc
repnz
pop
jle
cmp
push
add
jb
inc
ret
dec
test
aas
dec
adcb
daa
jp
addl
dec
jg
icebp
sub
jbe
jge
fisubrl
aad
lcall
mov
mov
in
sub
bound
jmp
and
sub
mov
mov
lret
xorb
mov
lods
leave
push
loop
jne
aad
ficoml
test
addl
inc
repnz
sbb
roll
jg
mov
ds
popa
jle
and
lahf
sti
fists
and
dec
into
and
dec
sbb
xchg
cmp
cs
out
dec
jecxz
ja
sar
gs
pop
stos
test
mov
mov
fs
dec
les
xor
sub
clc
and
pop
sub
jmp
push
ljmp
sbb
sbb
push
or
pop
repz
jl
xchg
push
rorb
mov
je
fs
scas
shl
add
add
shll
sbb
xchg
lsl
ja
je
cs
jmp
push
push
lcall
pop
jg
call
xchg
rcr
fisttps
add
cmp
cmpsl
ss
movsb
cmp
lcall
dec
mov
jge
sub
dec
leave
jns
into
leave
adc
jo
icebp
jmp
add
int
cmp
pop
pop
sbb
paddd
loope
movsl
imul
es
in
ljmp
jge
jp
sbb
mov
movsl
xchg
cmp
push
sbb
dec
mov
pop
movsl
jecxz
scas
pop
popf
orl
scas
inc
jno
out
or
ret
in
lock
lea
pop
in
push
jecxz
fs
pop
mull
or
xor
xchg
rcrl
scas
leave
push
ds
adc
fists
ja
pop
and
cs
push
mov
jne
sahf
fmull
mov
xor
push
in
das
inc
jne
push
xchg
fadds
adc
xor
cmpsb
add
dec
or
arpl
loop
xchg
lods
mov
daa
jns
xor
pop
adc
cltd
das
dec
pushf
jae
jp
lods
negl
cmp
arpl
popf
and
or
or
lret
sbb
pop
pop
add
mov
push
xchg
xchg
mov
pop
or
or
out
mov
test
rcr
push
inc
repnz
adc
movl
adc
dec
int
std
or
pop
xchg
clc
adc
fdivl
stc
mov
stos
add
fadd
ret
push
test
setns
aas
rorl
test
mov
sub
mov
xchg
loop
lret
popf
fiadds
loop
mull
data16
xor
xlat
jg
xor
and
add
out
push
mov
repz
add
test
rolb
out
out
xor
ret
mov
or
mov
and
aam
pusha
dec
or
jecxz
cmpsl
dec
dec
dec
add
mov
scas
inc
push
hlt
cmp
mov
cmp
xor
in
adc
cmp
fidivs
and
mov
sub
and
les
arpl
out
or
jl
sahf
sub
xor
inc
stos
jle
fdivs
dec
sub
push
fimuls
outsb
jecxz
bound
sub
orl
mov
fdivrs
and
push
addr16
or
nop
bound
adcl
in
sbb
or
jnp
pop
inc
jno
cmp
loopne
lcall
mov
sub
dec
std
les
pop
adc
stc
in
js
sbb
nop
outsl
pop
outsb
sar
xor
add
out
jno
out
aad
mov
std
add
cwtl
inc
adc
cmpsl
jnp
mov
inc
fsubrl
jb
jbe
or
and
idivb
into
mov
adc
jg
push
fscale
xchg
inc
pop
xchg
out
into
xor
incb
outsb
dec
je
shlb
jge
add
xchg
outsl
clc
jle
scas
xor
ja
or
imul
dec
adc
xor
or
push
cmp
mov
mov
shl
or
scas
in
sahf
nop
mov
mov
insl
inc
inc
out
push
jne
cwtl
cmp
clc
mov
cwtl
fmul
aam
movsb
ret
mov
pop
sub
and
sub
jnp
mov
gs
jg
fcomps
xor
inc
imul
push
jl
test
jns,pn
std
ja
fmulp
in
out
into
add
out
aaa
idivl
mov
xor
lret
jg
jl
loope
aaa
scas
pop
cmp
mov
push
aas
lea
rorb
inc
mulb
mov
aaa
xchg
xor
dec
rorl
loopne
xchg
cs
stos
das
push
sbb
jae
xor
popa
cmpsb
xchg
rcl
fcoms
jne
in
pop
repnz
fsubs
js,pt
imul
mov
push
shl
test
ret
ja
sbb
bound
lods
mov
dec
sbb
cwtl
and
ds
xchg
mov
nop
into
in
dec
pop
out
dec
lcall
movsl
jmp
sbb
jmp
scas
cld
inc
pusha
scas
sub
les
sbb
and
lods
dec
incl
cmp
mov
jge
and
xor
pop
insl
sbb
push
rcrb
lret
dec
stos
je
cli
mov
mov
xlat
pop
mov
cmp
je
lds
sbb
mov
imul
ja
aad
roll
sbb
and
jle
push
imul
fisttpl
xor
shrl
jg
dec
fisttps
push
sub
out
pop
or
fistpll
push
ret
mov
imul
push
std
xchg
jbe
pushf
sub
insb
xchg
add
xchg
sarb
push
data16
jae
cmpl
or
pushf
xchg
pop
push
jecxz
sub
mov
lret
mov
push
inc
icebp
jge
or
mov
push
in
mov
adc
aad
xchg
inc
jo
pop
arpl
mov
into
hlt
and
mov
cwtl
js
sahf
xor
dec
mov
gs
cmp
jno
out
mov
adc
imul
pop
mov
shl
ret
fldcw
into
outsb
test
inc
scas
adc
xchg
int3
bound
jns
loop
insb
fistl
test
das
xchg
fcomps
imul
sub
and
jnp
out
mov
mov
cmp
stos
jge
lock
cmp
enter
jge
add
sbb
int
adc
mul
dec
add
cmp
push
ljmp
mov
or
push
clc
imul
pop
daa
cld
mov
decl
mov
or
insb
and
xor
jle
scas
mov
xor
and
hlt
pop
dec
sub
sbb
insl
popa
cmpsb
dec
dec
push
or
push
push
mov
nop
xchg
ss
fstp
call
jecxz
inc
pushl
lods
sbb
arpl
add
andl
adc
mov
es
or
std
xor
mov
fisubrl
aaa
cmp
data16
jnp
imul
je
sbb
xor
shrb
xchg
xor
mov
int3
clc
les
jl
lods
cmp
cli
mov
test
enter
push
ljmp
insl
jge
aaa
gs
fbld
mov
add
lock
test
fdivl
push
sbb
std
jmp
adc
mov
adc
nop
jbe
std
mov
into
jae
icebp
push
dec
xchg
cld
aas
xchg
cmp
xor
push
xchg
imul
adc
push
lds
cwtl
or
cmpsb
leave
das
cmp
aam
sbb
jae
aam
push
dec
leave
shlb
sbb
sbb
jbe
sahf
stos
and
or
insb
insb
popa
fadd
enter
add
inc
aaa
inc
dec
fincstp
and
push
xchg
movsl
or
mov
jno
xchg
jge
scas
dec
pop
xchg
sbb
jle
adc
xrelease
imul
aas
or
fldenv
dec
leave
mov
arpl
mov
idivl
cmpsl
xchg
dec
lahf
ret
push
pop
rorb
adc
sub
test
sub
shll
inc
loopne
pop
inc
sub
test
and
cmp
and
jmp
ds
or
mov
movsl
lret
negb
mov
jns
jecxz
xchg
bound
loope
lcall
adc
cmp
pop
sub
mov
cmp
xchg
dec
sbb
jmp
sti
addr16
adc
stc
inc
and
enter
std
fcomi
pop
jbe
jbe
enter
and
mov
adc
or
stos
adc
and
dec
out
and
in
dec
aas
sub
pop
mov
jno
mull
divl
or
call
out
lock
loope
lock
push
push
pushf
aaa
and
push
test
incl
repnz
push
or
adc
sbb
xchg
sub
mov
fwait
scas
push
mov
adc
dec
arpl
rcll
xlat
jmp
or
jns
rolb
inc
cmp
pop
jle
insb
adc
pop
addr16
mov
mov
mov
ljmp
xor
mov
pushw
nop
add
xor
insl
jae
jns
inc
call
mov
jae
repz
add
xsha1
jnp
xchg
outsb
xchg
mov
pop
pop
push
popf
cmp
mov
das
adc
cli
xorb
push
inc
fsubrs
jp
mov
sub
inc
jae
mov
testl
adc
xlat
pushf
test
xchg
gs
push
mov
add
ds
mov
jns
hlt
out
sub
mov
xor
loopne
push
inc
int3
pop
sarb
in
lods
or
add
adc
adc
and
jp
mov
fildll
addb
daa
cs
lock
vunpckhps
adc
mov
scas
test
out
icebp
lods
dec
imulb
aaa
notl
cmc
push
add
adc
mov
xchg
inc
pushf
jae
or
sub
pop
sbb
insl
fiaddl
test
fs
dec
stos
xor
pop
rcrl
cmp
nop
sub
cmp
lods
pusha
or
xor
push
aas
adc
inc
out
ret
adc
mov
divl
test
mov
dec
add
icebp
or
je
nop
pop
push
xor
clc
ret
sbb
pop
movsl
loopne
add
xor
push
sbb
sub
loop
test
rorb
or
sub
fadds
sti
pop
imul
aaa
repnz
rcll
inc
jmp
xlat
scas
fcomps
shr
xor
xchg
inc
into
addb
mov
fdivs
and
int
cld
out
ljmp
mov
jo
gs
cwtl
or
sub
loop
loope
mov
pusha
push
jp
pop
cltd
out
cmc
daa
ljmp
gs
sarb
add
shll
or
aaa
call
add
ret
je
push
push
aaa
mov
sarb
pop
cltd
rcrl
imul
mov
or
sub
inc
cmp
roll
btc
xchg
daa
rorb
or
test
inc
and
fisttpl
insl
jp
shlb
inc
and
leave
add
mov
push
xorb
sbb
aad
mov
int3
mov
daa
push
push
sub
sarb
xor
mov
bound
adc
inc
push
xor
lret
cwtl
enter
jmp
stc
and
mov
lea
push
fstpl
sahf
es
les
dec
sbb
cmp
and
mov
cltd
pushf
sub
add
jne
mov
iret
xchg
and
mov
sbb
in
sub
into
test
test
add
cmp
shr
fisttpll
ret
mull
cmp
ja
aam
mov
push
push
adc
sar
ror
xchg
mov
and
leave
jb
ljmp
mov
popf
movsb
or
test
in
ret
adc
xchg
xor
mov
sbb
out
jl
mov
fnstenv
pop
push
cli
out
cmp
mov
fistps
movsb
mov
or
loopne
jge
mov
pop
mov
imul
or
fiadds
cltd
sbb
xorl
stc
push
test
xchg
jmp
lea
rorb
das
jle
inc
insl
movsl
pop
inc
sub
adc
xor
adc
adc
xchg
jp
inc
sbb
test
mov
mov
adc
and
and
push
loop
in
shl
addr16
cli
cmp
int3
push
stos
inc
lret
push
sub
in
jno
xchg
jp
popa
adc
imul
adc
in
gs
daa
jbe
aaa
pusha
xor
push
shufps
data16
push
out
icebp
imul
push
and
mov
shl
mov
idiv
mov
je
fs
cmp
outsl
mov
sub
ret
mov
test
jnp
jecxz
lea
mov
out
and
and
psllq
pop
xchg
xor
aad
jge
enter
test
push
sub
pushf
mov
ja
sti
adc
out
add
sti
rol
mov
jecxz
mov
push
arpl
adc
clc
shll
fwait
push
xor
data16
je
fstps
in
pop
or
xlat
jb
fimull
or
call
sbb
mov
jl
dec
ljmp
push
ja
lahf
in
cmp
add
fdivrl
decl
subb
ror
mov
outsb
pop
sub
sub
mov
dec
cmpsl
ja
cmpsl
mov
mov
mov
pusha
int3
repz
adc
adc
sbb
outsl
sbb
popa
xor
cli
shlb
mov
arpl
pop
pop
cmc
out
sub
repz
test
pop
leave
dec
mov
pop
pop
dec
sbb
pop
cmp
ljmp
test
sbbl
cmp
pop
or
jl
out
adc
leave
cmpsl
or
icebp
jo
add
cmp
stc
and
and
push
mov
or
dec
and
fiaddl
xchg
insl
pushf
inc
mov
xchg
mov
leave
rep
jno
jg
out
jae
das
adc
or
rcrb
xchg
mov
fs
cltd
inc
fstpt
cmc
daa
xchg
test
mov
outsl
pop
xor
xchg
ss
inc
dec
cwtl
mov
addl
inc
ficoml
xlat
sub
xchg
mov
xor
dec
cmp
loopne
or
push
cmp
mov
cmp
cmpsb
lods
cmp
sub
inc
loope
and
out
bound
int3
pop
sub
lock
add
stos
xchg
fsubrl
pop
int
int3
jg
jns
daa
dec
hlt
sbb
mov
jg
jnp
or
xchg
cli
movsl
cli
xchg
lds
rol
aam
add
cmp
adc
xchg
inc
call
pop
xchg
jl
and
cmpsl
mov
pop
das
sub
in
push
ljmp
mov
push
addl
dec
sbb
test
xchg
or
mov
jmp
fcmovnbe
add
xor
addb
hlt
shr
sbb
repnz
sbb
push
addb
sar
xchg
dec
enter
push
iret
push
sbbl
pop
ret
leave
adc
push
cmc
mov
sub
mov
mov
cmpsl
cli
flds
leave
xchg
and
cs
mov
ds
and
xor
ljmp
aas
push
notl
lret
lea
mov
out
lret
dec
stc
add
inc
das
cmpsl
andb
or
cmp
outsl
cmp
mov
aad
pop
call
mov
fs
call
pop
aas
or
dec
insb
aad
mov
mov
cmpb
cmp
cmpsl
mov
fisubrs
fiadds
jecxz
xchg
test
sbb
pop
push
ja
shll
ds
jle
outsl
jmp
dec
hlt
jg
lock
cmp
cltd
icebp
mov
jge
cld
sahf
push
hlt
push
clc
xchg
cmp
or
out
sbb
sti
xchg
sub
ss
adc
sarl
ret
cs
imul
jno
ret
xchg
js
imul
lods
jle
push
shll
and
push
ljmp
adc
dec
pop
pop
idivb
or
mov
jge
and
inc
cmp
or
ret
cltd
dec
das
cltd
in
pop
mov
jae
lahf
rcrl
xchg
mov
mov
jmp
popa
mov
xor
or
sub
cs
xchg
xor
and
add
insb
clc
adc
les
jge
mov
loop
cmp
dec
dec
cmp
mov
adc
arpl
data16
imul
out
fsubrp
outsl
test
pop
mov
mov
shlb
js
orb
cmp
test
cmp
fsubrs
ret
in
push
push
test
add
loopne
int3
pop
enter
test
lds
cmc
popa
cs
addr16
popf
addr16
add
xchg
aad
stos
test
loopne
shll
call
hlt
hlt
xchg
push
testb
mov
push
and
popa
lds
sub
inc
lock
push
sti
sub
enter
jl
xor
outsl
stc
xchg
jg
or
hlt
push
or
xor
lods
lods
push
inc
out
xchg
mov
sub
mov
sub
call
mov
ss
or
sub
pop
add
jp
adc
inc
sbb
loope
mov
ret
int
sbb
rclb
xor
xchg
cld
daa
mov
cmpsb
sbb
fs
push
mov
pop
imul
cltd
adcl
mov
icebp
nop
sbb
cli
lods
inc
shrb
push
iret
jb
movd
lods
adc
inc
loop
mov
lds
aad
push
dec
push
pop
fists
jmp
ljmp
pop
jae
pusha
inc
dec
dec
imul
sbb
nop
xor
mov
aam
or
ficoml
lcall
or
push
fs
scas
fs
nop
cmp
pop
sub
mov
push
test
nop
imul
test
xor
jl
sti
or
mov
dec
in
leave
das
roll
fsubl
mov
push
xchg
mov
data16
jmp
lock
sbb
test
rcrb
loope
pop
call
inc
xchg
xchg
insb
xchg
mov
test
jne
inc
cltd
or
les
xchg
or
stos
pushf
mov
xchg
jmp
cwtl
mov
std
movsl
cmp
lods
xchg
movsl
xor
xlat
adc
movsl
enter
jmp
and
lret
add
es
mov
enter
mov
inc
into
repnz
daa
shl
cmp
xchg
push
mov
decb
xor
jae
add
lods
jg
dec
jns
mov
cmpsb
je
cmpsl
sub
xchg
dec
js
xor
jmp
and
push
js
mov
fisubs
clc
push
stos
adc
and
mov
sahf
jae
lret
add
add
sub
push
cmp
sub
aad
scas
scas
aaa
pop
test
lret
jnp
sti
lds
int
arpl
cli
push
jge
out
dec
aam
add
sbb
aas
jb
add
mov
mov
xor
mov
into
jmp
inc
sti
mov
jmp
xor
das
and
pop
xchg
mov
clc
fwait
push
daa
mov
push
mov
fimull
cmp
popa
push
xor
aaa
out
fdivs
xchg
sub
mov
sub
push
xor
movsb
outsb
fcmovnu
int3
cmp
inc
pop
sub
sub
lods
fisttpll
cmp
xchg
add
push
clc
sbb
hlt
cmp
sarl
push
add
inc
test
sub
cli
xchg
xor
lcall
or
ror
sub
ja
js
dec
jmp
in
and
lods
lret
jp
andl
cli
bound
in
fldenv
shl
xchg
push
aad
movb
pop
push
frndint
inc
int
fwait
into
sub
jge
sub
mov
aam
sti
jb
sub
pop
pop
sbb
pop
or
sub
out
or
mov
sub
out
cld
sar
mov
pop
adc
pop
test
mov
mov
arpl
stc
fistpll
addb
or
xchg
adc
movsl
inc
adc
or
dec
xchg
and
jg
cmc
imul
xchg
push
jo
add
inc
jl
adc
push
sarl
mov
dec
test
lret
xchg
repnz
sbbl
push
jbe
and
mov
pop
testb
jecxz
cmp
xchg
adc
pop
xchg
out
sarb
les
inc
js
mov
sbb
sbb
jle
add
dec
lea
xor
mov
stos
imul
test
xchg
xor
xchg
andl
popf
mov
shlb
bound
leave
mov
cmp
and
cmpsl
xchg
aaa
xor
pop
mov
push
ret
push
lods
pop
fbstp
fwait
js
pop
fwait
push
cmp
jp
pop
movsl
xor
jbe
pop
or
cs
stos
bound
fs
clc
lret
dec
call
pop
jnp
cmp
mov
push
imul
sahf
mov
cmpsb
jmp
ret
cmc
stos
call
iret
xlat
cmp
lds
into
pusha
pop
dec
add
sub
push
popa
fs
dec
mov
mov
jbe
xor
push
mov
inc
into
sbb
cmp
les
xor
cmp
leave
sub
cwtl
psrlw
mov
popl
inc
adc
xor
cmc
xchg
mov
sbb
xchg
je
xchg
xor
idiv
aam
cmp
dec
inc
std
cmp
mov
stos
jmp
adc
in
add
pusha
mov
mov
cmovns
jp
add
xchg
jg
lods
mov
lahf
cld
mov
push
and
outsb
pop
or
data16
mov
into
or
inc
mov
lcall
push
cmpb
shrb
rcrl
into
rcrl
gs
stc
cmp
mov
lea
add
lock
int
ret
lret
add
lret
xchg
inc
cli
mov
and
in
fs
push
loope
pop
rcll
adc
test
sbb
stos
fdivrs
ja
xchg
mov
out
sbb
fldl
in
fldcw
mov
iret
mov
sbbl
popa
jne
fsubrs
adc
mov
in
insb
dec
mov
add
cmp
add
sbb
or
pop
dec
test
out
adc
outsb
lods
adc
sbb
sub
xor
dec
hlt
mov
enter
in
dec
xchg
enter
jg
mov
mov
xor
jp
cli
cld
cmp
into
in
jecxz
and
sbb
stos
mov
inc
push
adc
bound
leave
xor
out
pop
xchg
insb
jo
adc
lcall
jmp
lahf
mov
fcmovu
xchg
cmp
push
mov
in
adc
fdivrl
arpl
cltd
mov
pop
sti
push
xchg
add
addb
xchg
outsl
sub
inc
rcl
or
pop
in
in
sub
add
fldcw
dec
jo
lcall
xchg
push
jmp
sub
sbb
jg
loop
in
lods
out
aaa
rcrl
sub
xor
orl
fcoml
rcrl
sbb
add
xchg
push
cmp
push
sahf
cmp
fs
dec
sub
jnp
and
xchg
clc
inc
jno
inc
xor
rol
cmpsl
outsb
push
add
mov
mov
aad
repz
and
mov
scas
mov
inc
in
loope
in
test
fs
dec
and
stos
sub
mov
lock
iret
into
js
cmp
cli
jmp
scas
or
les
testb
xor
and
mov
je
ja
mov
cld
xor
out
mov
pop
sub
xchg
aas
pop
and
mov
test
sub
jmp
stos
fwait
sub
ss
sub
xchg
sbb
and
out
push
cs
and
xor
das
jge
push
pop
or
loope
push
cli
xchg
ret
fdiv
adc
fwait
data16
lret
stos
js
sbb
xchg
scas
adc
mov
adc
es
cwtl
xchg
jae
ret
sti
int
and
andb
fwait
xchg
mov
sbb
sbb
push
movsb
stos
jmp
add
daa
call
or
or
push
inc
aas
cwtl
sub
and
xchg
sub
cmp
push
adc
das
stc
push
imull
fwait
mov
stc
sub
inc
or
test
int3
fdivrl
lret
xor
push
jne
adc
cmpl
xor
push
sbb
and
sbb
mov
dec
lods
jne
sub
sub
addr16
movsb
xchg
out
cmpsl
mov
enter
push
sub
dec
lods
dec
ret
mov
jne
lcall
or
jne
lcall
movsl
test
pop
faddl
mov
pop
add
subb
dec
pop
xlat
dec
sub
mov
pop
mov
cli
subb
imul
int3
inc
and
test
xor
popa
jmp
push
scas
pop
sarb
sti
loope
call
mov
push
std
xchg
mov
jg
jno
fisubrl
cmp
stos
and
into
add
sbb
adc
cmp
outsl
jp
mov
jns
sbb
fldcw
mov
test
push
fwait
shlb
pop
push
adcl
sbb
leave
jecxz
adc
pop
addb
xorb
clc
pop
stos
cmpsb
mov
cmp
call
andl
jne
jecxz
xchg
jp
mov
sahf
xorl
daa
outsb
loopne
loopne
shll
push
cmc
mov
stc
and
movsb
lds
mov
push
fstpl
lods
mov
in
gs
push
mov
or
add
out
and
or
xor
or
add
insl
dec
cmc
push
lock
rcll
jnp
mov
cmp
hlt
xor
fidivs
push
mov
jle
sbb
push
mov
push
mov
cmpsl
test
inc
mov
jl
dec
xchg
adc
lret
jecxz
fnstcw
sbb
test
sub
mov
in
out
aas
xor
xor
aaa
int
jo
inc
inc
xor
jge
arpl
movsl
dec
nop
xchg
xchg
jge
add
push
jp
icebp
push
jp
shl
rcr
cmpsl
loope
xchg
shl
call
popa
stos
dec
loope
and
repnz
pop
dec
pop
jle
out
mov
ja
std
mov
pop
cmp
sbb
inc
and
mov
int3
stc
xchg
sbb
mull
pusha
mov
jmp
inc
dec
popa
sub
pop
xchg
push
pusha
push
pop
loop
sbb
pop
adc
mov
stos
imul
clc
mov
jecxz
mov
mov
lcall
xchg
mov
mov
mov
sub
sahf
loope
pop
das
lret
push
pop
lea
fldt
mov
jmp
pop
xchg
ja
mov
push
inc
mov
jno
adc
pop
sub
shl
add
cmp
sbb
repnz
xchg
cli
xchg
out
aam
jl
or
ja
mov
push
inc
outsb
mov
mov
push
aam
xor
jp
inc
cmp
jbe
insl
fidivl
rolb
xor
adc
pushf
nop
fcomp
shlb
test
push
xor
cld
dec
jg
xchg
lea
xchg
lret
mov
mov
jg
mov
xor
scas
in
ja
cmp
mov
ret
in
rcr
or
xor
mov
fiaddl
xor
push
sahf
push
push
sbb
pop
sahf
fidivrs
xchg
fdivrs
jb
jmp
cmc
push
pop
push
push
enter
pop
mov
mov
fcompl
push
lcall
out
cmpsl
xlat
imul
cmp
lret
xor
repnz
mov
add
out
cmc
and
inc
lcall
push
xlat
jle
movsl
in
xor
in
mov
out
xchg
andl
jmp
ret
shlb
cmp
scas
push
movsb
add
mov
ss
add
addr16
add
push
repnz
adc
mov
or
push
xor
movsb
fs
add
pop
xor
or
cmpb
fldt
mov
jae
push
push
xchg
lea
cmpsb
sbb
fsubl
inc
mov
hlt
stc
lahf
fxch
jb
ret
imul
fstps
es
lcall
mov
pop
push
mov
push
xchg
jmp
push
orb
lahf
cmpsb
sahf
imul
and
jo
lds
loop
cld
clc
ja
jecxz
push
jb
jge
add
add
xor
jae
mov
sahf
jno
fmuls
stos
add
lea
lods
adc
scas
mov
push
pop
ds
mov
xchg
filds
add
cs
sbb
push
add
sub
ds
inc
and
lahf
push
cwtl
bound
mov
or
setae
imul
adcb
sbb
fwait
mov
inc
pop
or
mov
testl
mov
and
pop
dec
leave
into
xor
cli
push
jae
add
sub
pop
xor
mov
inc
lahf
mov
sbb
add
xorb
mov
jmp
ss
or
sub
into
es
inc
jbe
rorb
dec
xchg
subb
adc
adc
jmp
mov
icebp
clc
xchg
pop
mov
iret
add
fcoml
push
push
pop
or
out
push
xor
adc
add
push
mov
sub
sub
mov
inc
pop
jg
push
mov
icebp
pushf
jbe
fstl
les
xchg
push
hlt
add
clc
dec
jo
dec
testl
mov
ja
sbb
mov
push
push
pop
xlat
rclb
push
push
push
jne
outsb
pop
pop
stos
mov
push
push
sub
sti
xor
out
inc
sbb
mov
mov
xchg
xchg
lock
jb
jmp
hlt
les
mov
ret
push
roll
mov
testl
fucomip
stos
stc
xchg
mov
and
push
sbb
xorb
fcos
jl
xchg
inc
rorb
lret
mov
cli
out
adc
add
jle
dec
insl
out
pop
pop
scas
sub
inc
mov
dec
int
mov
cld
push
or
imul
sbb
cmpsb
jle
lret
xchg
dec
fldt
ljmp
xor
jb
inc
pop
fsubrs
lock
xor
jns
test
cmp
in
xor
out
lahf
dec
call
test
cmp
sub
and
sub
test
jne
and
stc
xchg
xchg
ljmp
push
add
addl
jg
repnz
jl
pop
int3
insb
sub
prefetch
or
out
cmp
ret
test
sbb
dec
and
push
push
mov
ljmp
loop
ljmp
sahf
nop
jb
mov
mov
adc
clc
call
cmp
data16
and
mov
js
xchg
sbb
pop
dec
xchg
mov
jmp
fstpt
dec
clc
inc
lods
adc
loope
ret
mov
shrb
ljmp
mov
sub
push
test
cltd
xchg
sbb
mov
icebp
fstpl
and
inc
jl
sbb
ret
decb
and
pop
add
jl
repz
jnp
lret
sub
lret
pop
push
mov
repz
dec
inc
or
lret
sub
shrb
mov
pop
outsl
scas
or
xor
add
mov
dec
les
int3
dec
mov
sub
cmp
outsl
jo
fsubrs
inc
push
popf
sti
jne
xchg
dec
inc
out
ret
sarb
pop
fnsave
mov
jg
outsb
push
int3
adc
int3
aas
inc
inc
push
aam
sahf
cli
or
aas
icebp
daa
jno
arpl
mov
sub
push
test
add
jnp
lcall
leave
sbb
test
inc
mov
cs
lods
dec
stc
cmp
sbbb
mov
les
push
cmp
jecxz
mov
out
add
in
xor
or
mov
or
or
arpl
cmp
mov
ja
cmp
fbld
scas
mov
out
mov
pop
mov
fsubrs
jmp
aas
add
pop
jle
jne
xor
mov
mov
insl
loop
adc
pushf
ja
jecxz
fsubp
icebp
xor
fs
shlb
icebp
insl
aas
push
popa
jnp
xchg
lret
cmp
mov
aam
rep
repz
xchg
test
jmp
jae
test
push
rcr
mov
dec
or
scas
and
inc
out
cmc
lods
aad
fwait
jns
dec
fwait
dec
push
hlt
sbb
fcmovnb
jb
pop
lds
mov
test
cmpsl
test
cli
mov
addr16
fcoms
pop
loope
xor
mov
or
std
xor
xchg
push
or
inc
int
sbb
push
xlat
pop
or
xchg
into
xchg
xchg
pop
or
fidivrs
jg
cmpsl
lahf
push
ds
xchg
add
cmp
and
jns
lret
clc
std
or
lcall
dec
xor
jmp
out
pop
sbb
jns
out
sub
pop
jp
cmpsb
shl
repnz
dec
pop
arpl
pop
mov
aam
cmp
or
sahf
cld
imul
scas
jae
xor
mov
mov
sub
xchg
mov
sbb
popf
repnz
int3
xchg
insl
stos
add
mov
pop
in
push
je
jecxz
popa
sar
cld
fmuls
sqrtps
mov
jne
cmpsb
lods
lret
lods
cmc
in
test
icebp
mov
jae
mov
cmp
aam
fadd
dec
mov
mov
sbb
ss
mov
ret
push
dec
ret
pavgw
dec
lods
or
inc
push
in
add
out
push
out
fs
push
in
pop
inc
arpl
stc
mov
mov
push
mov
cmp
cld
or
adc
in
in
inc
pop
add
xchg
xor
hlt
jmp
pop
inc
pop
mov
xchg
xor
cwtl
sbb
xchg
insb
add
inc
ss
xor
and
outsl
add
xchg
xchg
pop
negb
mov
xor
cmp
xchg
inc
adc
fstps
mov
inc
pop
and
jg
pop
aas
insl
test
mov
xlat
arpl
rcr
lret
sub
ljmp
sbbl
sti
xor
inc
jns
mov
adc
cltd
push
push
add
jge
push
out
ss
mov
in
push
dec
cli
inc
jg
sbb
xchg
mov
les
lods
dec
cmpl
and
pop
and
dec
push
loope
add
je
cmp
adc
pop
xchg
cmpsb
xchg
mov
out
pushf
data16
pop
cli
mov
dec
adc
out
popf
pushf
add
mov
cmpsl
int
cmp
out
mov
mov
popf
add
or
iret
cld
push
repz
xchg
and
fistpl
inc
das
clc
fisubrl
lods
int3
mov
leave
or
or
push
cmpl
inc
ret
cmp
sbb
daa
fcompl
dec
scas
cmp
mov
je
jbe
push
xchg
and
or
shl
stos
mov
and
cmp
movl
lcall
jo
dec
xor
jns
add
roll
pop
cmp
mov
fimuls
sbb
push
xchg
test
mov
mov
icebp
aas
pushf
js
push
xchg
push
cmp
add
lret
inc
ds
jae
ljmp
lea
pop
mov
fcmovnu
add
mov
outsb
pop
out
pop
mov
ds
sub
movsb
push
or
and
and
sbb
adc
imul
lahf
pusha
mov
test
xorl
mov
neg
pop
cmp
cmc
movb
repz
xchg
std
push
jg
mov
out
jb
add
dec
pop
cmpl
sbb
fwait
or
sbb
sbb
or
mov
sub
nop
inc
xchg
push
data16
out
bound
xor
jl
adcl
jno
stos
ja
push
lods
cwtl
notl
inc
cld
stos
push
sbb
pop
loope
cmp
int3
mov
lret
testb
jns
jge
es
jecxz
add
mov
ret
sbb
stc
jecxz
mov
aas
dec
rcl
lds
out
dec
rorb
push
mov
mov
sub
xor
test
lret
rcr
scas
mov
mov
mov
xchg
push
outsl
inc
mov
or
loop
sub
lods
call
inc
mov
or
mov
push
jno
iret
jno
scas
inc
add
mov
adcl
mov
shrb
jge
or
sti
mov
mov
out
jbe
cmp
loopne
mov
mov
jle
xchg
add
repz
mov
jo
pop
push
cs
cmp
or
mov
pop
push
inc
adc
data16
lret
mov
and
mov
hlt
sarb
shlb
shrl
insb
xor
xor
stc
jle
push
enter
mov
jmp
sub
popa
jge
add
add
das
lods
mov
addr16
cmp
pop
push
ljmp
jle
or
push
sbb
jp
inc
int3
jb
jns
into
outsl
or
sbb
imul
pop
dec
sbb
adc
lret
push
dec
sub
sub
jmp
cmp
icebp
rcl
pushf
xor
mov
sub
lock
xor
mov
dec
pushf
imul
js
push
mov
insl
in
addb
test
mov
ds
lock
sub
cmpsl
nop
mov
loopne
ss
rolb
addr16
sbb
and
add
push
push
pop
fs
push
pop
push
fstl
pop
push
data16
xor
fistpll
inc
add
fwait
jo
adc
out
jmp
rdpmc
push
aam
mov
add
in
push
into
pop
jno
pop
enter
xor
xor
aad
test
xchg
popa
ja
push
mov
je
push
ds
xlat
mov
mov
outsl
cmp
inc
ds
jmp
pop
cmpsb
xchg
pop
mov
xchg
pop
mov
movsl
xchg
sbb
pop
or
or
mov
and
stc
sbb
icebp
xor
pop
mov
out
lds
mov
pop
rclb
imul
jnp
lock
loopne
add
add
outsb
leave
lds
das
adc
lock
repz
ja
ret
fmul
mov
sub
mov
rorb
and
xor
xchg
out
pop
cmc
bound
jns
cmp
push
rcr
es
mov
mulb
xor
pop
sub
scas
pop
inc
imul
shl
jl
xor
into
xchg
and
adcl
inc
or
sahf
adc
movsl
cmpsl
outsb
mov
test
mov
jb
inc
pushf
jns
mov
cmp
int3
stos
push
push
mov
dec
inc
push
out
inc
movb
inc
mov
fidivrl
mov
jbe
xchg
xor
push
push
es
xchg
or
movsb
jmp
add
andb
push
rcll
outsb
mov
andb
fsts
ror
adc
sti
push
dec
mov
mov
or
fnstcw
es
inc
sub
call
jb
pusha
mov
dec
adc
push
stc
hlt
pop
adc
mov
div
mov
add
pop
pop
fbstp
aaa
mov
and
push
decl
add
insb
pop
out
addr16
int
mov
je
std
fsubrs
negl
push
push
push
shll
lods
pop
mov
xchg
pop
cltd
xor
sahf
stos
popa
xor
iret
notl
imul
push
bound
push
insb
xchg
mov
xor
dec
jle
fldenv
aaa
or
fcoms
notl
loop
das
lcall
insl
xorb
lea
jmp
jle
loope
std
test
mov
enter
push
xlat
test
cwtl
je
rorb
cmp
dec
js
xchg
mov
int
addr16
iret
imul
inc
jge
add
add
adc
test
icebp
or
stos
mov
xchg
repnz
in
lahf
mov
movsl
sbb
add
push
cmp
jnp
push
outsl
hlt
aam
sbb
push
in
push
loop
gs
daa
data16
loope
lods
daa
push
adc
cmp
cmp
icebp
mov
mov
iret
enter
int3
sarb
lret
shll
ds
push
push
jl
xchg
icebp
and
and
xchg
outsl
push
fsub
ljmp
fstl
push
ja
repz
js
lahf
mov
aas
leave
out
cmp
mov
hlt
cld
movsb
data16
xor
outsb
jo
pop
lds
push
aam
add
fidivl
jmp
insb
cmp
add
ja
sti
lahf
lcall
mov
dec
dec
into
imul
lret
mov
ret
sbb
inc
or
pop
pop
lret
xchg
push
mov
js
lods
fwait
adc
insl
pop
push
imul
and
pushf
loope
nop
xor
or
dec
adc
cmp
or
xchg
xor
jmp
call
nop
sti
jle
push
dec
cmpsl
popf
rcl
jg
pop
push
mov
insl
test
push
into
sub
data16
out
push
mov
jbe
mov
jns
dec
inc
mov
fcmovbe
sti
push
add
incl
sub
cmpl
aad
pushf
stos
lods
inc
vunpcklpd
ds
cmp
cs
add
xor
cmc
inc
mov
mov
nop
jp
jbe
add
jmp
fists
and
xchg
pop
pop
xchg
add
rcr
sbb
lcall
int3
push
cmp
push
jmp
gs
xchg
sub
xor
js
cmpsb
push
mov
cmp
xor
fists
or
lcall
mov
ds
cmp
xor
push
push
adcb
fimull
push
sbb
pop
jecxz
jns
imul
in
sub
dec
xchg
mov
aaa
jbe
fucom
sbb
mov
xor
das
pop
mov
inc
inc
push
push
loop
loopne
loopne
imulb
xor
pop
sub
jg
xor
mov
incb
jbe
add
xor
jp
inc
clc
cmp
mov
je
xor
imul
flds
adc
cmp
sub
les
aad
jle
cmpsb
add
xchg
dec
fadd
inc
mov
stos
pop
push
and
mov
jae
dec
rolb
scas
roll
sti
xor
sub
out
mov
out
add
sub
test
lret
ss
and
sub
scas
inc
out
or
jns
mov
inc
subl
arpl
push
push
scas
push
mov
testl
lret
imul
movsb
pop
pop
xchg
xorb
push
psubd
xchg
arpl
adc
xchg
frstpm(287
lcall
fimuls
jae
shll
jnp
jne
xchg
jns
or
xchg
js
mov
xchg
pop
fwait
inc
andnps
cmpsl
repnz
int3
loope
addr16
dec
ja
pushf
repz
xor
hlt
xlat
pop
push
cmp
add
lret
das
or
jmp
pop
rcll
xchg
lea
push
jle
adc
inc
cld
iret
jbe
pop
lds
test
rcrb
add
pusha
cli
je
in
dec
cmc
roll
sub
insb
ss
pop
or
cmpsl
and
sbb
lahf
mov
cmp
and
cmp
test
addr16
aas
and
idivl
dec
sar
jbe
xorl
mov
cmp
mov
insb
adc
cmpsb
movsb
das
mov
jl
lahf
idiv
mov
jbe
or
and
sub
mov
fdivrl
pushf
add
lret
or
aad
and
inc
add
jns
inc
and
ret
hlt
imul
push
push
in
outsb
adcl
inc
and
out
sahf
js
iret
dec
ret
hlt
mov
call
cmp
outsb
je
lods
push
lds
testl
sbb
xchg
jge
sbb
mov
push
fwait
mov
int
jg
add
sbb
push
ljmp
push
jmp
clc
mov
je
fldcw
lahf
adc
or
shll
in
cmp
xchg
lea
mov
inc
addr16
sahf
ds
adc
imul
xchg
xchg
outsl
frstor
loop
pusha
insb
jp
mov
cmp
dec
mov
in
mulb
inc
sub
sub
push
outsb
xchg
hlt
sbb
mov
lds
xchg
jne
andl
mov
popa
ror
repnz
jge
jno
cld
sub
jno
cs
jbe
pop
lea
inc
outsl
std
test
fs
scas
cmc
movsl
add
or
mov
pop
dec
cmc
add
negl
sbb
mov
mov
mov
xor
and
js
xchg
inc
pop
jp
int3
call
mov
lock
int
aad
or
sbb
out
inc
lcall
xchg
sti
jecxz
fmull
lfs
sub
cmp
pop
or
or
sub
push
inc
add
xor
ds
mov
xchg
insb
pop
iret
or
dec
jecxz
add
lea
mov
subl
pop
dec
and
iret
inc
jl
sbb
movsb
dec
cmp
pop
lcall
mov
daa
pop
mov
aaa
dec
ret
push
imul
ret
push
and
hlt
xchg
add
mov
sbb
pop
add
test
mov
fisubrl
js
fmuls
out
fs
sbb
icebp
push
lods
xchg
rcrl
inc
mov
and
sub
das
or
push
xchg
jb
in
cld
jle
movsb
cmpl
jo
mov
adc
sbb
in
mov
cmova
adc
ficomps
mov
add
popa
push
sahf
and
stos
lahf
test
mov
xchg
sbb
bnd
jge
daa
inc
xchg
inc
call
testb
sbb
scas
jae
aad
dec
pusha
cmp
testb
adc
dec
mov
stos
lds
je
dec
mov
imul
aaa
adc
in
fldl
mov
sbb
inc
pop
cld
vminpd
fsubrl
pop
dec
cmp
test
lret
shll
data16
stos
xlat
addb
mov
stc
shl
xchg
out
aam
and
sub
dec
shl
fwait
sub
loop
sub
xchg
pop
push
insl
xlat
fimuls
stc
inc
ret
xor
jg
test
pop
mov
xchg
mov
int
sbb
ja
jns
stos
out
dec
fwait
inc
push
rclb
xor
cltd
lahf
ror
dec
fsts
pop
push
insl
add
jge,pn
aaa
lret
push
and
lretw
aad
jbe
or
adc
push
cmp
lahf
mov
add
shll
or
sub
jmp
dec
mov
push
loopne
jg
lret
mov
pop
lret
insl
jl
or
push
pop
outsl
fwait
mov
mov
cltd
aaa
fcompl
cwtl
add
sbb
arpl
or
ret
leave
out
mov
mov
push
in
sbb
sbb
push
or
push
jns
ss
xchg
xor
movsl
std
aaa
leave
push
jp
popf
xor
push
scas
jb
stc
in
adc
inc
lds
popa
stc
mov
lock
test
inc
dec
lea
or
pop
sub
dec
and
rclb
sbb
sbbb
iret
shrl
push
and
and
iret
mov
das
mov
mov
inc
enter
cli
push
les
sbb
dec
jno
stos
mov
add
iret
out
mov
push
loopne
jecxz
and
xchg
mov
xlat
cs
xor
and
or
hlt
rorl
fistps
mov
mov
sub
or
pop
mov
mov
in
sbb
xlat
push
loop
test
add
imul
aaa
mov
popf
lods
mov
cs
sub
andb
mov
mov
sub
jo
sti
xor
cmp
push
das
and
xor
dec
xchg
adc
mov
xlat
jg
push
ficoms
xor
jns
popa
out
jnp
sub
stos
cmc
or
repnz
sbb
mov
mov
or
gs
adc
xlat
jmp
scas
xchg
lcall
cmc
movsb
loop
lret
pop
push
push
cmp
add
jno
xchg
mov
dec
cmp
push
inc
or
shlb
xchg
dec
daa
pusha
sti
xor
xchg
mov
push
fidivl
aas
adc
hlt
testb
cltd
sbb
enter
xchg
and
push
cmp
ljmp
fimuls
mov
push
add
xchg
or
adc
cmc
mov
popa
rolb
stos
dec
mov
jns
sbb
xlat
addr16
add
jg
cmp
mov
pushf
outsl
fldcw
mov
loope
adc
mov
inc
ljmp
mov
fcoms
fwait
push
roll
scas
sbbl
jae
cmp
push
int
iret
test
jge
ret
pop
add
jg
leave
xchg
cmc
sbb
mov
mov
pop
mov
cmp
xorl
xor
xchg
rolb
mov
inc
call
cmp
sub
int3
je
in
sub
adc
mov
stos
sbb
inc
pop
mov
in
xchg
outsl
enter
ja
sbb
mov
rcrb
scas
dec
ljmp
add
add
or
outsb
and
ss
inc
jmp
sti
test
sub
test
sub
pop
stc
inc
sub
adc
xor
movsl
jmp
inc
fisubrl
or
stos
leave
mov
stc
push
je
repnz
icebp
mov
cld
fldenv
mov
stos
fldcw
xchg
add
das
sti
repz
scas
int
inc
movl
mov
sbb
fstpt
or
mov
inc
jmp
testl
mov
dec
mov
ret
ror
push
sub
lds
cmp
movsb
bound
xor
test
inc
lods
in
jg
mov
sub
add
lock
fsubl
cmp
mov
cmpsb
nop
jne
jmp
lret
lods
icebp
xor
or
bound
jne
movsl
lcall
gs
cld
pop
clc
lock
aas
and
push
add
xchg
adc
jne
pop
mov
clc
inc
push
sub
sub
ljmp
fwait
cli
lods
push
inc
xor
out
sub
xchg
jmp
mov
dec
nop
sub
jmp
cli
decl
pop
jns
popf
mov
or
mov
sbb
popa
ret
in
push
pop
pop
mov
ret
cltd
cmc
movsb
dec
sub
ljmp
js
hlt
out
aam
out
icebp
sub
bnd
cmpl
and
fistpll
push
dec
out
or
or
mov
sub
out
add
push
push
mov
ljmp
pop
imul
jae
sbb
push
icebp
test
mov
sbb
or
bound
or
inc
sbb
out
inc
pop
pop
imul
cmp
jmp
adc
cld
push
jle
shrb
aam
push
in
addl
rclb
in
arpl
leave
out
sub
pushf
inc
push
mov
or
mov
lahf
into
aam
enter
pop
mov
cmp
clc
jnp
testl
cmp
les
fstpt
mov
sub
pop
fs
xor
ja
mov
xchg
into
jne
loop
cwtl
lock
jae
xchg
cmp
xchg
test
jb
stos
int3
pop
add
daa
pop
outsl
imul
jo
jnp
aad
lods
aad
sub
cltd
jbe
and
mov
jmp
mov
xchg
int3
rcrl
orl
inc
pop
xchg
and
outsl
aas
mov
mov
pop
mov
sub
or
aad
xchg
mov
pop
scas
xchg
adc
insb
or
jecxz
cltd
cmp
les
cs
je
dec
sbb
pop
and
aam
ret
jmp
push
sub
loopne
fst
loop
xchg
js
sbb
mov
mov
dec
ds
lret
insl
scas
imulb
push
ljmp
pop
push
clc
loope
insb
adc
xchg
cmp
mov
adc
pop
adc
popa
adc
inc
mov
loope
jge
or
outsb
movsb
pop
mov
iret
or
lret
xchg
jle
ret
jecxz
pushf
mov
adc
sar
movsb
or
pop
and
pop
sub
and
mov
sarl
cld
mov
cmpsl
jecxz
push
mov
push
imul
sti
repz
lods
cmp
lds
sbb
lret
xchg
sbbb
imul
push
in
sbb
gs
fdivs
in
or
or
repnz
pop
xor
leave
push
jmp
mov
jae
sub
or
test
sub
fsubrl
cmp
or
push
in
mov
std
add
test
inc
fbld
aas
xor
mov
std
pop
inc
xchg
fidivrs
jns
ror
inc
push
adc
xor
sub
mov
shr
loopne
negb
test
cmp
mov
insb
push
dec
cmp
jnp
jecxz
mov
push
fldl
push
shll
pop
or
sbb
xor
addb
shlb
cmc
popa
pop
xchg
push
mov
sbb
adc
xor
ljmp
inc
stc
cmpsb
and
dec
pop
in
mov
and
out
loopne
js
pop
iret
jecxz,pn
push
xor
fbld
xchg
lret
fiadds
lret
ret
sbb
test
sub
add
divl
stc
cwtl
imul
repnz
xor
jp
loop
and
cwtl
or
and
pop
inc
ret
push
mov
jne
ljmp
fisttpll
rolb
ja
xor
js
mov
and
lret
fldcw
push
shrl
popa
add
mov
pop
pop
in
out
adc
cld
repnz
push
fnstenv
lods
sub
jecxz
mov
adc
mov
mov
xchg
negb
je
movsb
cld
cmp
mov
pushf
xor
in
into
push
lock
push
add
mov
gs
jge
lea
xor
popa
mov
push
sub
addl
stos
jnp
and
aam
int3
roll
jns
cmp
sub
sbb
insl
jae
negb
outsl
xchg
pop
imul
out
mov
push
sbb
enter
xor
jo
orb
ficompl
leave
test
rorl
mov
mov
movsb
sbb
mov
iret
push
ljmp
shrl
mov
jnp
out
and
out
inc
movsb
stc
filds
rcrl
xchg
mov
or
insl
rclb
inc
dec
adc
mov
sub
in
mov
punpckldq
and
and
pop
push
scas
sub
pop
out
mov
bnd
jo
iret
sub
pop
jbe
mov
dec
testb
xchg
add
xchg
cmp
int
jmp
push
xchg
cmp
mov
xchg
and
adcl
movsl
arpl
sbb
pop
xor
xchg
mov
dec
xor
rcll
fs
and
hlt
push
sahf
imul
fdivr
or
pop
int3
rcll
push
xlat
mov
inc
mov
push
cmc
loopne
add
lret
pop
pop
pop
ljmp
iret
rclb
int3
cmpsb
fsubrs
sarb
add
cmpsl
aad
or
mov
pop
jp
ret
out
icebp
push
les
or
xor
subb
xor
out
rsqrtps
scas
testb
pop
movsl
stc
in
and
out
push
sub
sbb
xchg
mov
clc
and
xchg
out
jne
insb
lods
iret
sbb
in
sub
in
jne
push
cmpsl
xchg
add
jecxz
xor
lds
ret
outsb
sbbb
jmp
xor
mov
int
xor
jp
shrl
mov
mov
jnp
xchg
lock
ljmp
sbb
jle
push
aas
fwait
leave
lds
add
adc
cld
push
sub
addb
cltd
inc
xor
sbb
insl
jge
xor
mov
cwtl
xlat
hlt
mov
and
lods
mov
or
pop
adc
movsl
fwait
sbb
les
decl
lods
mov
bound
into
or
ja
fcmovnu
outsb
movsl
shrl
fldl
or
pop
stos
pop
xchg
inc
sbb
inc
stc
xorl
xchg
cmp
xchg
and
mov
push
jmp
std
outsb
testb
scas
xchg
movsb
ss
inc
and
clc
inc
mov
jle
mov
xchg
bound
add
sub
adc
test
jbe
repnz
loope
adc
sbb
xor
push
adc
add
add
decb
mov
lods
lret
movsb
cmp
add
lds
pop
xchg
aas
inc
nop
mov
mov
ret
xor
push
xchg
xor
cmp
cmp
xchg
mov
ja
test
fdivrp
add
stos
in
pop
jo
call
add
mov
aam
into
pop
add
pushf
shrb
outsb
sbb
inc
sbb
lods
dec
lret
aam
dec
and
jmp
push
out
sbb
repz
rcrb
adc
lret
lock
jg
int
das
popa
into
int
je
xchg
and
mov
stc
cld
mov
jle
mov
test
dec
mov
push
pushf
add
test
idivl
int
xor
jp
cmp
ret
sub
arpl
int3
or
push
push
or
dec
imul
ret
cmp
xor
and
and
add
cmpsl
out
mov
sub
mov
lock
lret
and
push
cwtl
xor
ljmp
mov
lret
pusha
in
jl
sbb
and
ds
cwtl
outsb
cld
inc
or
xor
or
xor
adc
dec
es
scas
add
push
clc
jo
sbb
cmpsl
or
fwait
inc
cmc
hlt
cmp
or
stc
int
mov
outsl
xchg
lods
in
inc
adc
xchg
dec
insl
shlb
gs
push
std
or
add
jg
hlt
outsl
rcrl
xchg
cmpsl
inc
and
adcl
push
rorl
jle
ror
and
js
mov
inc
mov
js
mov
insb
or
mov
dec
mov
dec
loope
gs
ja
cmp
cmpsb
rolb
mov
stos
sarb
mov
jp
hlt
dec
std
dec
scas
jno
cmp
clc
or
ja
sbb
mov
jb
sti
xchg
xor
js
outsl
aam
sub
sbb
insl
push
in
mov
cmpps
mov
mov
mov
fidivl
loopne
mov
sahf
scas
cs
iret
jno
mov
jbe
sahf
inc
addr16
sbb
enter
cmp
mov
sahf
add
and
pop
mov
or
neg
push
gs
dec
inc
push
pop
add
vunpckhps
flds
out
xchg
add
cmpsb
mov
in
inc
cmp
out
clc
mov
in
xchg
clc
adcb
mov
shl
cmp
aad
pop
xchg
addr16
pop
loopne
cmpsb
cmc
aad
mov
adc
mov
sar
sarb
pop
dec
popf
and
in
inc
fs
rcr
sahf
xchg
cs
and
pop
mov
jno
jle
inc
iret
cli
lods
out
pop
dec
jbe
add
mov
pop
out
sub
mov
aas
xchg
jo
xor
dec
adc
lods
daa
adc
xchg
dec
lds
in
xchg
dec
mov
xor
adc
jecxz
flds
lock
cmp
xchg
lea
test
or
cmp
mov
xchg
jno
lods
xchg
cmp
ss
pushf
mov
adc
rorb
js
pop
mov
sub
clc
sarb
test
mov
adc
pop
fcompl
push
push
aad
sbb
mov
mov
mov
lods
mov
stos
fdiv
imul
jbe
push
inc
sbb
cwtl
jle
jae
lret
out
roll
and
push
cmp
lds
cmp
push
jne
sbb
push
roll
mov
dec
leave
cmpsb
xor
aas
inc
cs
mov
inc
push
out
frstor
aaa
push
dec
test
out
mov
out
jbe
clc
shl
inc
jno
push
dec
add
mov
jnp
inc
xor
fsubl
ljmp
sub
rcll
jecxz
into
add
and
or
lds
incb
repnz
xchg
add
cmpsl
loopne
pop
das
push
outsl
cmp
shlb
sbbb
ret
push
cmp
lret
idivl
dec
mov
iret
xchg
inc
loope
loopne
mov
mov
mov
dec
jmp
push
sbb
push
jp
loope
cmp
mov
sahf
out
jbe
pop
sbb
out
loopne
inc
inc
ret
addr16
jbe
mov
cmpsb
lds
jbe
mov
in
or
pop
jle
cli
or
mov
mov
mov
fs
popa
test
movb
pop
jl
lret
cld
mov
mov
fmulp
jo
mov
lock
inc
js
subl
frstor
sbb
lahf
sbb
sbb
hlt
xlat
xorl
test
cld
mov
and
into
add
ja
pop
pop
pushf
loop
pop
push
cmp
adc
adc
xor
std
pop
mov
aad
xor
push
dec
jne
decl
or
jge
mov
lcall
xor
xor
fdivr
mov
pop
arpl
roll
repz
mov
xor
mov
sub
cld
and
lahf
add
dec
inc
add
pop
cmp
fisubl
pop
pop
mov
stos
movsb
add
push
lds
lret
cmc
xchg
jnp
enter
xchg
or
and
mov
and
orl
movsb
test
adc
test
fsubr
mov
popf
rcrl
cld
fstpl
and
dec
sub
adc
sbb
adc
inc
pusha
sbbl
nop
enter
or
mov
push
lock
loop
nop
pop
or
inc
inc
xchg
cwtl
and
pop
in
ja
lods
fcompl
inc
jbe
jge
push
in
mov
cmp
aaa
pop
ret
shll
push
mov
and
mov
outsl
sub
sbb
insb
movaps
out
mov
sbb
jmp
jle
dec
push
adc
push
mov
jle
pop
lds
rorl
add
stc
cmp
sub
xchg
je
stos
into
cwtl
inc
mov
or
push
cmp
jno
cs
or
add
js
sbb
dec
inc
mov
imul
push
or
add
push
push
dec
stos
aaa
xchg
adc
mov
mov
outsb
leave
mov
dec
iret
cld
xchg
bound
addb
xor
sti
inc
leave
aad
fnsave
and
push
jnp
sbb
mov
sbb
les
mov
adc
imul
lea
jp
sahf
and
mov
into
push
sub
inc
ljmp
test
inc
xor
push
xchg
dec
nop
in
add
imulb
clc
dec
ljmp
cmp
mov
ds
cld
or
pop
push
push
test
xlat
mov
mov
dec
push
or
inc
popa
xchg
and
sub
addr16
mov
nop
fabs
lcall
inc
push
xlat
decl
repz
mov
test
sti
lret
int
imul
push
adc
stos
cld
lods
lds
lret
cltd
xor
pop
jns
sub
sbb
adc
jp
lahf
scas
cli
xchg
rcr
lds
stc
push
adc
add
in
aaa
or
mov
jp
mov
fadds
mov
mov
mov
insb
ss
or
jbe
push
mov
jbe
pop
dec
cwtl
inc
sub
mov
stc
les
mov
sub
sbb
lahf
mov
int
xor
fsubr
rcll
test
add
push
f2xm1
int3
repz
dec
sub
rolb
cmpsl
xor
rep
sahf
dec
push
les
xor
sbb
out
mov
addl
pop
add
movsl
aam
ljmp
mov
cs
adc
adc
inc
jno
mov
push
sti
adc
mov
push
out
sbb
in
push
sbb
and
lret
mov
dec
cmp
pop
push
xchg
pop
or
push
int
and
data16
xorb
jno
or
xchg
mov
adc
xchg
mov
insb
xorl
add
xchg
mov
xchg
test
mov
xor
popf
addr16
cmc
mov
call
arpl
cli
xchg
cld
jle
shll
fcomps
xchg
dec
push
mov
inc
cwtl
jmp
aad
test
bound
test
lods
inc
jp
inc
mov
mov
insl
ja
cmpsb
bound
arpl
fiaddl
add
clc
js
lds
mov
mov
ljmp
lahf
test
ret
stc
scas
jg
clc
mov
sbb
adc
stos
aas
or
cmp
push
popf
cli
clc
jnp
xor
cmp
lahf
mov
or
int
stos
adc
jns
inc
adc
daa
mul
and
sbb
adc
inc
loopne
and
sbb
jp
fs
ja
pop
fisubl
xchg
pop
out
stos
nop
int
inc
repnz
pop
xor
and
pop
mov
aad
popa
repnz
jne
icebp
push
scas
cmp
mov
jg
js
cmp
sarl
aam
inc
mov
xchg
out
test
push
mov
scas
push
lods
mov
enter
add
test
je
test
xor
pop
pop
sbb
pop
cmpsb
xchg
repz
jmp
lds
ror
andl
cmc
mov
jmp
addb
aam
inc
mov
adc
addl
adc
shl
addr16
les
mov
stos
or
sub
push
jge
or
pop
stos
mov
mov
mov
imul
xchg
aas
xchg
pop
iret
enter
mov
cwtl
mov
mov
xor
call
fwait
lret
adc
lds
aam
add
aaa
push
aaa
orps
insb
insl
and
movsl
int3
push
loopne
pop
mov
int
aaa
sarl
popf
lds
mov
add
xchg
frstor
loopne
pop
pop
mov
pop
pop
roll
popf
add
push
inc
xlat
xchg
mull
or
inc
test
sub
shll
jmp
push
in
test
int3
sub
jp
movsl
and
cmpsl
jl
scas
iret
push
enter
mov
add
enter
negb
subl
ja
aaa
inc
sbb
jbe
das
adc
pop
sub
inc
push
add
pop
push
shll
mov
test
les
mov
xor
xlat
mov
push
lret
scas
fdivrp
pop
test
insb
aam
jge
cmp
pop
clc
stos
xchg
int3
sub
ret
test
mov
out
popf
mov
flds
xor
scas
push
push
push
std
data16
sbbl
cld
push
jbe
andl
or
and
jle
mov
dec
mov
mov
test
add
in
pop
not
add
das
mov
sbb
lods
lods
push
dec
es
repz
mov
cmp
mov
scas
orl
add
fmull
clc
sub
stc
andb
out
mov
mov
cli
pop
sub
inc
sbb
pop
pop
xchg
mov
mov
lret
fs
sub
dec
scas
sbb
cmc
cmc
je
loope
xor
cmp
or
negb
sti
std
push
outsb
xlat
cmpsb
cmp
xorl
pusha
movsl
mov
sti
je
xlat
pop
in
xchg
cltd
push
movsl
push
push
dec
adc
mov
pop
adc
ror
push
xchg
out
push
sbb
sub
mov
ss
xchg
dec
and
mov
adc
sub
cs
icebp
adc
inc
shll
inc
sub
fmul
push
pop
jp
nop
sub
das
cli
jo
push
sbb
mov
rcll
mov
push
jnp
cmp
rolb
dec
push
icebp
fsubrl
mov
jl
pop
idivb
pop
add
sub
nopl
lods
test
scas
pop
stos
pop
int3
sahf
flds
popf
shld
xchg
mov
sbb
imul
inc
jae
inc
pop
xor
cmpsl
xor
mov
or
mov
outsl
jp
cwtl
pop
mov
and
pusha
xlat
cmpsl
ret
dec
es
pop
jns
push
lahf
ja
mov
and
je
bound
icebp
or
cltd
stc
mov
lret
and
mov
push
std
inc
and
out
mov
ret
cwtl
std
ja
xchg
ds
stc
frstor
mov
adc
dec
fwait
inc
les
mov
mov
adc
xor
mov
or
push
mov
xor
xchg
icebp
mov
imul
pusha
pop
lret
jmp
or
mov
sarb
sub
lret
orb
pop
insb
ljmp
adc
out
ds
mov
int
lock
test
adc
xchg
cld
das
jl
out
mov
mov
jns
mov
enter
push
addr16
sbb
push
mov
mov
adc
pushf
lods
add
mov
pop
aad
in
bound
test
ss
mov
hlt
xor
mov
call
aam
add
push
arpl
subl
mov
lcall
jb
pusha
movsl
push
mov
fstl
or
mov
pop
sub
test
ljmp
jbe
xchg
dec
pop
adc
aas
ja
mov
mov
sbb
mov
int3
pusha
sbb
mov
pop
scas
cmc
adc
xlat
in
ss
jmp
and
adc
mov
out
mov
pusha
push
jge
jae
push
xchg
jbe
arpl
jmp
sub
iret
sti
adc
ret
sub
adc
das
shll
xchg
cli
cmp
mov
jg
pop
pushl
xor
fcmove
inc
xor
in
jle
push
cmpsl
push
ficompl
xor
xchg
out
xor
stos
ja
jo
jmp
push
gs
into
test
cmp
stc
push
push
fs
cmp
sbb
testb
mov
clc
xchg
nop
adc
xchg
sbb
into
inc
xchg
std
stos
daa
mov
mov
test
rorl
in
and
repz
test
inc
xchg
mov
addr16
ljmp
daa
mov
stc
out
cmc
loopne
push
mov
pop
cmp
pop
jno
mov
out
lock
cmpsb
jmp
push
cmp
jnp
into
add
mov
jp
nop
ret
jg
pop
stos
lods
mov
add
out
pop
push
je
xchg
mov
dec
fsubr
fsubrp
xor
enter
pop
add
addb
dec
add
mov
jo
push
mov
inc
in
call
sarl
pop
push
xchg
add
leave
cmc
pop
sahf
fwait
out
jmp
insb
xchg
filds
mov
mov
xchg
push
daa
jl
iret
into
sub
mov
loop
and
arpl
mov
mov
mov
sti
or
sbb
sar
mov
push
pushf
scas
das
jns
rclb
sahf
sbb
ja
shrb
cmp
inc
push
insl
fistpll
cmp
jecxz
dec
and
ja
mov
add
repz
aaa
push
dec
movsl
add
inc
lret
jne
mov
cli
push
shlb
dec
scas
jle
xor
dec
neg
lds
scas
movsb
test
test
setns
rcrl
in
lods
xchg
ja
mov
incb
sbb
pushf
fisubl
fisttpl
pop
jle
jae
adc
lcall
xchg
icebp
insl
lahf
and
in
push
sbb
add
es
les
dec
subl
xor
leave
pop
add
mov
lcall
fs
add
or
xor
daa
mov
inc
xor
pop
inc
mov
out
outsb
pop
jbe
das
cltd
outsb
stos
mov
ss
add
loop
or
pop
insb
mov
mov
jo
jo
or
data16
aas
and
push
pop
cmpsl
test
jl
cmp
std
pop
and
mov
xchg
sub
rol
dec
and
test
jl
inc
inc
repz
push
out
cmpsl
push
mov
fmull
stos
sub
push
lock
cmp
xor
out
cli
sbb
mov
lods
mov
icebp
in
adc
and
pushf
xchg
inc
mov
xlat
mov
pop
pushf
cmp
stc
imul
iret
movsl
and
lret
std
mov
xchg
shrb
cmp
push
mul
clc
and
dec
leave
mov
ret
and
inc
stos
outsl
lret
ljmp
pusha
or
pop
pop
push
xor
add
aam
int3
push
stos
lds
mov
jmp
jge
dec
mov
mov
fwait
js
dec
popa
aam
jle
movsl
pusha
test
lea
dec
mov
js
pop
mov
cmp
add
pop
push
in
jmp
dec
adc
clc
gs
dec
xlat
insl
xchg
in
frstor
lahf
sub
cmpsb
aaa
pop
out
mov
sbb
mov
xchg
xor
cld
sarb
pop
imul
mov
in
jne
andl
popa
mov
ret
dec
xchg
pushf
add
pushf
xchg
cmpsb
mov
pusha
iret
xchg
mov
mov
in
pushf
daa
lahf
xchg
stos
outsb
adc
jae
pop
aad
jns
sub
shll
cmpsl
loopne
and
in
inc
test
outsb
add
in
rcll
scas
lods
push
bound
dec
push
mov
mov
xor
aad
cmpsl
enter
imul
je
fsubrl
dec
je
ljmp
jb
lods
sbb
push
jl
loop
test
mov
ror
jbe
and
ficoms
cmp
jo
jne
scas
mov
inc
movsl
push
ljmp
add
cmp
leave
cltd
sub
ret
gs
sub
mov
hlt
adc
das
push
lret
call
sub
lret
and
cmp
mov
call
test
call
scas
enter
or
mov
stc
sub
ror
jl
addr16
or
inc
imul
outsb
inc
test
in
or
dec
fstps
mov
aam
sbb
sub
push
mov
and
jp
or
insl
cmpsb
hlt
push
mov
and
jae
add
sbb
lret
push
mov
dec
xor
jno
lahf
ficompl
jmp
pop
push
leave
cmp
test
xor
cli
in
sbb
add
cmp
call
dec
xchg
int
mov
loopne
lods
movsl
cmp
rolb
addr16
sbb
and
sbb
jmp
insl
dec
fsts
fwait
add
and
pop
mov
pusha
sbb
frstor
shrl
add
and
aas
fmuls
mov
divb
cmp
ljmp
and
fsubrl
pop
jno
push
outsl
movsl
pusha
pop
sbb
mov
cmp
fisttpl
or
push
mov
xor
mov
inc
or
aam
jb
popf
addb
and
add
pop
push
ret
stos
rolb
testl
jle
jne
inc
or
and
repz
out
icebp
push
mov
repz
repnz
cwtl
push
subl
jecxz
addl
imul
jb
sbb
sub
lret
mov
push
popa
jp
into
dec
ja
lds
insl
fs
mov
push
adc
or
lods
das
iret
add
and
sti
mov
cmc
push
xchg
push
inc
and
pop
movsb
sub
scas
lea
push
mov
jne
mov
add
jne
push
popa
loope
movsl
insl
pop
fstl
fwait
mov
aas
pop
fisttpl
out
repz
icebp
pop
inc
push
dec
nop
xor
mov
scas
cli
push
jmp
add
gs
sub
test
or
dec
stos
out
sbb
xor
mov
pop
mov
mov
push
ds
inc
jbe
popf
sbb
sahf
fnstsw
and
addr16
out
inc
stos
or
into
sbb
loop
es
roll
xchg
mov
mov
jae
xchg
stos
jo
mov
jge
popf
scas
sahf
xlat
outsb
sahf
in
push
jge
lret
arpl
lods
mov
and
fwait
or
sub
addr16
xor
and
je
rcrb
insl
movl
dec
arpl
jo
mov
imul
xor
scas
sbb
loopne
inc
cmp
xchg
mov
out
dec
cmpsl
pusha
int
dec
ljmp
fists
rcl
jmp
or
clc
pop
xor
js
inc
in
jnp
ljmp
adc
in
nop
inc
adc
and
xlat
mov
lods
cmc
movsb
and
lret
mov
pop
and
adc
lahf
in
lahf
ljmp
push
cld
cmp
fisttps
sbb
xchg
and
inc
aad
in
sub
cwtl
pop
xor
and
dec
outsb
cmp
lret
xor
push
add
mov
int
ret
daa
nop
das
xor
ret
out
mov
jmp
jmp
sbb
inc
xchg
dec
jbe
sarb
pop
icebp
or
and
push
les
xchg
sub
test
mov
add
ljmp
mov
jecxz
and
sub
les
fst
fisubs
fdivr
mov
jb
xor
aas
cmpb
in
pop
push
stc
loop
adc
mov
ljmp
mov
std
add
out
mov
and
roll
imul
add
sti
mov
fistl
imul
cli
sti
jne
lcall
jecxz
mov
mov
mov
hlt
jo
out
lea
iret
cld
push
pop
jp
push
and
push
mov
lods
mov
and
xchg
and
ss
adc
arpl
mov
hlt
stos
sbb
hlt
repnz
jle
leave
mov
inc
enter
mov
mov
lcall
or
jg
test
adc
aad
andnps
daa
fmull
test
dec
and
mov
fisubrl
push
je
sbb
push
sub
cmc
mov
sub
outsl
xor
pop
rolb
cmp
rorb
rcrl
iret
scas
arpl
push
or
call
mov
ret
pop
adcl
pop
repnz
push
xlat
jb
int3
lret
or
adc
mov
mov
outsl
adc
repz
mov
mov
jbe
dec
or
out
cmp
sub
icebp
out
mov
sub
adc
movl
rol
cmc
ja
aam
stc
inc
mov
inc
imul
xchg
roll
sbb
jae
add
cmp
mov
cltd
lahf
and
mov
stos
call
std
xor
sbb
repnz
pop
subl
shlb
leave
rcrl
push
jno
push
movsl
push
xchg
in
dec
cmp
lds
push
lds
pop
mov
push
call
xchg
test
xor
and
fsubrl
insl
aam
xchg
sar
pop
dec
and
repz
add
cli
mov
add
or
cmpb
dec
mov
daa
psubusb
mov
mov
lret
jle
inc
sahf
daa
enter
hlt
xor
mov
mov
inc
iret
sbb
cmp
dec
sub
jp
mov
sub
xlat
je
and
mov
inc
shll
sbb
cld
fnstsw
add
lret
mov
sbb
cmp
or
ja
jb
xor
test
and
cmp
aad
mov
push
pushf
pushl
cmp
aaa
cli
sbb
popf
adc
ja
mov
ficompl
stos
xchg
nop
arpl
sub
call
xor
cmpsl
inc
ja
xor
movsl
es
hlt
and
fadd
cmpsb
pushf
jno
xlat
adc
mov
inc
pop
icebp
jmp
leave
mov
mov
push
pop
rclb
in
les
mov
mov
cltd
mov
sbb
ja
pop
hlt
arpl
dec
inc
std
jl
and
lret
sub
jle
add
sbb
das
ret
mov
fnstsw
in
faddl
in
inc
shl
sbb
xchg
das
fs
andl
aam
cmc
leave
add
jge
cld
mov
dec
mov
frstor
mov
add
mov
dec
std
std
xlat
sbb
ja
in
inc
addb
mov
adc
fwait
mov
test
mov
stos
push
leave
jo
addl
clc
sbb
jns
outsb
push
cmp
scas
lds
lret
in
jl
pop
inc
mov
or
jb
cmc
mov
jne
insl
fimull
mov
scas
je
adc
rep
add
push
adc
jo
and
sarl
sub
cltd
ret
stos
adc
inc
loop
test
push
imul
scas
imul
dec
lret
cmpsb
mov
jns
mov
xchg
imul
aad
or
cmp
mov
or
adc
mov
out
sbb
out
jae
pusha
outsl
mov
push
jmp
or
rol
xor
mov
push
jp
pop
rcl
cmp
inc
lcall
mov
imul
mov
add
jbe
mov
sub
jle
insl
mov
mov
aad
fwait
clc
jno
loopne
lea
daa
cmc
pop
cld
dec
ljmp
or
jae
enter
add
sub
dec
gs
lret
lea
inc
xor
lods
mov
lods
push
or
fmull
insb
fld
dec
jae
mov
fstpl
dec
mov
jl
mov
je
stos
shr
jmp
popf
xchg
mov
push
jge
in
nop
cmc
scas
sbb
jle
addr16
mov
ljmp
jp
push
les
ja
test
xchg
lret
test
jae
cli
dec
mov
add
sub
xor
nop
mov
xor
xchg
and
gs
inc
cld
shlb
or
add
jmp
sub
loopne
inc
cmp
int
lcall
inc
mov
dec
cmpsb
subl
icebp
sub
mov
adc
mov
clc
dec
cmp
jmp
add
or
nop
sahf
sbb
subl
sbb
loop
pop
sub
cmpsb
aad
testb
movsl
adc
das
loop
pop
inc
outsl
xchg
pop
dec
es
dec
xor
sbb
loope
add
mov
add
dec
rclb
call
sbb
inc
xchg
sbb
cmp
es
std
inc
xlat
push
sub
test
out
ss
pop
dec
mov
int
push
pop
cmp
cmpsb
and
ds
in
hlt
push
and
dec
and
daa
in
dec
scas
loopne
jl
rolb
push
lcall
pop
mov
mov
xor
push
and
mov
packuswb
pop
mov
nop
jle
jo
sub
cmc
mov
nop
stos
push
fcompl
aad
push
sub
cmpsl
sub
sbb
pop
xchg
jp
rorl
and
push
aam
jle
shl
mov
or
push
popf
mov
inc
lret
xchg
addl
push
jg
test
adc
mov
and
xchg
cmp
push
pop
xchg
test
lds
test
pushf
imul
sub
adc
stc
ds
pop
pop
mov
mov
and
push
mov
imul
adc
push
addb
or
test
cwtl
xchg
ds
subb
in
scas
insb
loopne
rorl
mov
daa
cmp
mov
pop
clc
dec
mov
pop
cmp
cwtl
outsl
inc
xor
out
add
aad
push
pop
lahf
idivl
cwtl
jg
sbb
push
pop
pop
mov
and
push
aas
mov
lret
nop
push
or
cmp
push
inc
cmp
and
add
jnp
adc
mov
pop
cmp
fs
lods
nop
xchg
xor
mov
pushaw
mov
loope
es
pop
imul
inc
push
mov
and
xor
jp
dec
adcl
adc
sbb
add
ja
aas
or
or
fwait
add
shrb
xchg
nop
or
cs
std
rclb
test
mov
sub
xchg
sbb
notb
mov
int
pop
imul
or
cmp
and
in
sub
cltd
addb
or
subb
push
dec
icebp
xor
out
sbb
out
mov
iret
lock
out
mov
sahf
popf
loopne
sbb
movsl
push
dec
sbb
fs
std
sub
pop
addr16
rorb
mov
sub
nop
fildl
xor
sub
dec
jb
daa
shl
jbe
mov
dec
fadds
or
cmpl
inc
aaa
ficoms
nop
test
sbb
adc
mov
stc
xchg
outsb
inc
pop
xor
sub
xlat
sub
test
inc
mov
jnp
repz
cmp
or
cltd
jg
into
pop
data16
or
lret
xchg
push
ffreep
cmp
out
inc
mov
push
lods
inc
inc
push
mov
in
and
jae
xor
insb
ret
jecxz
inc
inc
pop
arpl
dec
fwait
mov
xchg
ja
das
rcrb
lahf
shrb
test
jb
mov
jae
mov
int
in
push
push
adc
ja
sub
pop
sarb
rcrl
push
stos
push
xchg
stc
push
sbb
adc
xchg
ror
cmpsl
sbb
mov
loopne
lea
in
sub
pusha
loopne
cmp
fisubs
dec
add
ffree
loope
shr
sub
xor
xchg
mov
dec
sbb
jl
sarl
jmp
push
and
sti
ret
das
sbb
in
push
idivb
mov
jbe
ret
xor
leave
or
outsb
cmpsb
inc
mov
cmp
push
inc
mov
daa
sbb
or
or
and
je
push
push
adc
out
pop
jae
cli
sub
sbb
jne
outsb
inc
jne
loope
loop
fisttps
and
in
add
insl
cmp
or
mov
mov
add
incb
mov
fnsave
adc
clc
popa
sarb
scas
jmp
pop
pop
jo
add
add
insb
fisttps
fisubs
adc
outsl
jno
rcrl
sbb
iret
jecxz
pop
gs
mov
sub
jp
mov
inc
mov
aam
mov
add
push
in
outsb
pop
cltd
add
bound
sbb
and
daa
sub
dec
xchg
cmpsb
loope
mov
dec
divl
push
inc
sub
pusha
lcall
pop
inc
subb
jecxz
std
test
xchg
pop
xchg
or
pop
mov
into
inc
push
cli
jns
test
ret
dec
push
lods
gs
cmp
ja
sbb
loope
fwait
cmc
test
sahf
xlat
adc
lea
sahf
leave
dec
and
sahf
inc
push
aam
jmp
cld
nop
fdivs
xor
movsb
mov
sub
xchg
dec
cmp
test
clc
add
jno
repz
lret
cld
mov
rcrl
jnp
cmpsb
sub
sub
xor
int
stos
in
dec
inc
in
lods
push
and
sar
jle
leave
push
out
cmpsb
sbb
imul
aas
xchg
xchg
add
sbb
adc
inc
dec
lea
fiadds
mov
shll
xchg
xchg
sarl
mov
pop
subb
stos
sub
push
lds
pop
mov
outsl
mov
loope
adcb
jp
push
pushf
stc
out
jbe
push
jno
int3
jo
out
out
pop
jo
and
loope
pusha
fisubl
mov
xchg
shl
sbb
sub
mov
push
sbb
mov
pop
xor
mov
mov
mov
inc
jmp
insb
add
cmp
movsb
push
stc
or
xor
xor
and
test
scas
inc
sbb
xchg
pop
jmp
pop
addr16
ss
adc
add
sub
cmp
test
bound
es
inc
popa
add
lds
cltd
enter
adc
popf
jne
das
test
scas
outsb
sbb
adc
iret
cld
sub
xchg
sub
adc
mov
mov
push
pop
push
xchg
jb
es
jne
cmp
pushf
and
or
mov
hlt
cmp
gs
roll
fs
pop
jne
into
std
sub
push
add
fs
add
sub
lcall
mov
dec
cmp
push
inc
sbb
sbb
aas
push
into
push
ret
mov
test
cltd
fdivl
jmp
aad
mov
scas
leave
into
ret
fadds
out
out
out
js
ret
and
sub
sub
sahf
mov
loope
mov
xchg
pop
inc
or
push
jp
push
dec
test
hlt
fs
jne
stos
pop
sub
push
dec
fcompl
dec
fsubs
scas
stc
div
push
or
pop
adc
aam
lods
sbb
into
push
push
or
pop
cmp
mov
jg
sbb
ds
cli
fsubr
jo
into
mov
cwtl
jp
xchg
cmpl
cld
fwait
lock
cmp
movsb
daa
pop
jae
jns
adc
mov
pop
push
add
imul
movb
add
fbstp
les
xchg
and
out
sbb
scas
inc
mov
inc
adc
sbb
jns
push
mov
push
mov
roll
lods
xchg
dec
addr16
add
push
mov
loopne
mov
and
mov
ljmp
mov
cmp
mov
pusha
or
push
mov
jae
gs
adc
jo
lds
xor
loopne
add
cwtl
sbb
mov
loope
test
xchg
adc
jne
xchg
into
sub
negb
fnstsw
roll
repz
cmp
sub
insl
subb
call
dec
lea
mov
lret
aam
cli
or
push
in
ds
cmpb
repz
cmpsb
inc
mov
rcrb
lods
add
out
leave
insb
loop
fsubl
jge
mov
cmp
or
js
dec
ret
or
xchg
push
sub
cmp
into
in
fistl
test
sub
dec
push
jl
sbb
pushf
aaa
cli
add
xlat
jg
pop
notl
sub
outsb
lds
mov
pop
adc
xchg
cmp
jne
mov
dec
sbb
pop
and
push
push
lahf
adc
into
dec
pop
and
pop
arpl
and
iret
out
loop
lds
ja
js
sbb
in
pushf
repnz
mov
xor
movl
push
icebp
xchg
cmpsl
cmp
sub
in
das
leave
imul
lock
and
adc
xchg
push
lds
mov
xor
mov
pop
cld
mov
cltd
jp
mov
add
xchg
lds
fcoms
xor
icebp
cltd
std
pop
addr16
pop
adc
testl
jle
inc
movsb
in
push
push
clc
and
jmp
xchg
enter
insb
in
pop
jno
sub
add
mov
shl
stc
das
test
fsubr
fsubrl
outsl
icebp
add
pop
in
pop
sub
adc
mov
pop
movsl
aaa
dec
leave
test
inc
sbb
lret
sub
movsb
test
into
js
push
int
mov
popf
cmp
in
inc
cmp
jns
popa
mov
dec
xchg
ret
fldcw
push
jne
popa
bnd
cmp
inc
lret
jge
dec
xchg
jne
adc
movsl
pop
sbb
insb
inc
imul
xor
push
pmuludq
xor
cmp
pop
cmc
je
add
xor
outsl
lods
and
sub
cwtl
push
in
push
mov
lcall
icebp
lcall
mov
xchg
push
jo
pop
ja
sbb
fwait
loopne
lret
pop
mov
aam
adc
jae
rcr
aam
add
push
iret
mov
mov
mov
pop
jbe
jns
xchg
dec
add
or
pop
scas
fsubrp
cltd
xchg
inc
ljmp
cli
lods
aad
xor
adc
adc
pushl
sub
jg
inc
jo
cmp
repz
lret
dec
fisubs
fisttpl
cmp
lahf
jmp
push
cwtl
outsl
dec
fildll
adc
daa
mov
push
mov
test
ret
lea
or
jbe
pop
subb
hlt
test
inc
cmpb
repnz
das
add
pop
lsl
pop
xor
mov
sahf
adc
cltd
and
out
lods
aad
adc
mov
jbe
sub
add
lahf
cltd
cmp
jmp
sub
in
or
pushf
pop
stc
push
push
mov
and
ds
xchg
daa
and
leave
and
dec
gs
lahf
push
es
mov
je
push
int
xchg
mulb
stos
nop
mov
daa
cld
pop
xchg
lods
das
push
jge
jg
in
adc
pop
sbb
mov
adc
mov
aam
sahf
xchg
xchg
adc
test
mov
xor
push
test
pop
pop
add
or
pop
or
fistl
stc
push
rorl
push
stos
mov
fs
xchg
lret
out
and
cmpsl
and
mov
mov
cmpsl
es
in
lds
push
pop
lods
and
adc
and
dec
and
pop
leave
fidivrs
xchg
bound
stos
xchg
popf
mov
outsb
sub
adc
xchg
dec
mov
jle
xor
cmp
and
pop
out
je
ss
in
sbb
jns
adc
adc
jbe
inc
test
mov
xchg
or
clc
fmull
xchg
xchg
cmp
cmc
cltd
loop
shlb
insl
or
iret
into
in
xor
or
aas
dec
or
cmp
dec
jns
jg
push
inc
xchg
mov
cmc
stos
pop
inc
repnz
dec
and
ss
repz
nop
cmp
or
mov
pushf
std
adc
mov
pop
fcomps
sub
lret
inc
mov
gs
popf
sbb
enter
pop
pushf
mov
pop
mov
scas
push
mov
adc
rcrl
inc
mov
cmp
mov
push
shrl
aam
mov
jne
cmp
add
inc
dec
push
push
pusha
jo
gs
ret
out
mov
push
jbe
xrelease
mov
popf
mov
hlt
fmull
sbb
and
mov
cltd
mov
and
adc
cmp
das
je
cli
dec
aam
and
pusha
sbb
testb
das
mov
jmp
stos
shll
jb
mov
scas
out
lds
pop
pop
cmc
mov
pop
inc
imul
sub
into
cmp
sbb
rcrl
test
mov
dec
dec
pusha
fidivl
mov
sub
movsl
mov
cmp
jl
xchg
push
ljmp
dec
pop
loop
cmp
or
adc
jbe
loope
fwait
sbbb
or
rorl
mov
jecxz
or
stos
sub
leave
pop
dec
lahf
std
repz
dec
jecxz
adc
inc
push
repz
js
sub
scas
imul
mov
clc
add
dec
jae
cmp
iret
or
dec
mov
and
xor
test
mov
mov
ljmp
xlat
push
in
and
and
cld
in
lahf
or
xor
dec
sub
or
pop
fisttpl
int3
jle
pop
adc
into
mov
cld
mov
push
scas
aam
or
jecxz
int3
sahf
repnz
add
push
mov
inc
mov
stc
sti
out
and
out
jnp
ror
sbb
jne
nop
xchg
jg
int
insb
stc
mov
imul
mov
fnstenv
pop
jns
daa
adc
lret
scas
jecxz
repz
sbb
push
mov
ja
mov
or
push
stos
into
ss
mov
addr16
fldcw
adcb
call
insl
insb
mov
sub
jecxz
int
inc
push
imul
cmc
or
lds
fs
add
lock
repnz
mov
sbb
and
xor
pop
sbb
daa
adc
mov
pushl
xchg
dec
pushf
int3
cmpsb
in
lods
dec
mov
sahf
dec
fdecstp
push
ds
jnp
js
mov
stos
cmc
incb
ja
cmp
int3
pop
insl
cmc
sbb
lahf
cs
xchg
mov
jle
cmc
push
int
inc
loop
and
mov
dec
dec
and
lods
sub
push
fidivl
dec
dec
loope
push
stos
dec
lods
lea
gs
pop
call
leave
cmp
push
xchg
mov
jl
mov
rcll
jae
cmp
mov
push
out
sub
add
into
xchg
lea
cmp
or
jno
or
fldl
mov
jne
xchg
std
mov
pop
sti
xlat
sub
mov
test
fcoml
adc
into
mov
inc
xor
ja
pop
aam
movsl
pop
add
dec
outsb
pop
icebp
into
xor
jns
or
cld
sahf
pop
lods
mov
lods
pop
das
xchg
mov
lret
jecxz
cltd
xchg
loopne
mov
jnp
notl
push
insb
inc
and
mov
add
pop
pop
xchg
sti
push
push
hlt
adc
fnstenv
push
lods
mov
jne
jbe
out
ds
scas
lods
inc
or
mov
test
dec
sti
filds
inc
jecxz
rcll
jns
leave
push
cmpsb
push
ret
xor
stc
adc
lods
xchg
sbb
dec
xchg
fucomi
cwtl
jnp
hlt
dec
pop
call
js
mov
pop
add
cmpsl
push
sbb
lret
sbb
shlb
or
jl
jbe
out
pusha
jns
sbb
xchg
imul
xchg
enter
xor
dec
xchg
xchg
lfs
call
test
adc
push
test
jecxz
test
cmp
scas
sahf
fwait
mov
push
adc
sub
cltd
cmpsb
pop
popf
push
mov
fmull
jae
lds
dec
sbb
mov
out
ret
xchg
repz
scas
jp
rolb
mov
scas
or
cli
pop
sub
ret
cmp
cmp
dec
popa
push
jp
out
int
cmp
bound
add
lea
or
add
sbb
xchg
xchg
outsb
out
mov
and
jo
jnp
data16
push
xlat
rcl
sub
in
setg
mov
inc
rorb
sarb
loopne
imul
aas
fldl
cwtl
jns
ljmp
leave
mov
rolb
and
dec
xchg
mov
stc
rep
sub
push
imul
push
sbbb
jl
out
mov
int3
sbb
cmp
pop
rcll
sub
flds
cmpsb
mulb
outsl
dec
stos
jmp
jno
sub
sbb
shl
addb
in
push
aad
imul
std
adc
mov
mov
cmpsl
pop
pop
loop
push
adc
imul
or
jne
aas
sarl
inc
pusha
dec
jae
mov
faddl
lahf
iret
pusha
stos
mov
xchg
pop
pop
cmp
inc
mov
nop
cmpsb
dec
cmp
ret
xor
jmp
call
rorl
out
lahf
and
lret
fwait
sub
cmc
jo
inc
cmp
or
jecxz
shlb
push
scas
sahf
leave
int3
pop
mov
mov
pusha
cmp
stc
pushf
push
cmp
mov
mul
cmpb
mov
pusha
sahf
mov
icebp
mov
repnz
popf
mov
dec
icebp
cmp
aam
add
push
int
dec
jbe
aam
inc
cld
push
pop
sbb
fdiv
stos
cmpsl
cmp
xor
adc
sbb
loope
pop
popa
jno
xchg
ss
pop
xor
out
xor
pop
cmc
sbb
pop
ljmp
sbb
notb
sbb
sar
dec
mov
pop
or
out
sbb
in
sahf
sti
add
test
pop
mov
or
xchg
pop
pusha
incb
insb
scas
sbb
fiaddl
vpor
in
addr16
scas
jbe
push
jmp
fs
imul
adc
fmuls
cli
mov
leave
loopne
add
mov
pop
out
jbe
cmc
fidivrl
imul
cwtl
push
push
jne
mov
mov
cld
pop
pop
mov
cmp
icebp
push
lock
add
push
push
cmp
cmp
out
sbb
jg
mov
lock
jns
xor
sub
je
sub
fidivs
xchg
nop
and
arpl
mov
sub
and
push
int3
mov
sub
xlat
sbb
sub
xchg
out
adc
addr16
aas
mov
mov
icebp
and
add
je
loope
nop
enter
mov
jp
xchg
std
test
mov
pop
xchg
mov
icebp
call
pop
lret
mov
and
xor
inc
pop
mov
scas
pop
outsb
and
daa
enter
xor
lret
add
lcall
pop
xchg
pop
outsl
sub
xor
fisubrs
shll
pop
repz
mov
sub
sahf
aas
add
xchg
sarl
mov
repnz
icebp
ss
shl
sti
test
mov
cmp
shll
test
cmc
cmp
gs
mov
and
test
sub
cwtl
imul
push
int
lret
xchg
mov
xchg
xchg
ret
push
and
shr
pop
sub
jo
mov
in
inc
sahf
xchg
mov
adc
popa
std
xchg
inc
mov
sbb
in
xchg
push
adc
addr16
pop
and
aad
outsb
out
lods
loop
adc
xchg
mov
pop
popa
push
adc
xor
inc
out
pop
jb
xor
js
push
imul
adc
popf
add
sbb
test
clc
push
aaa
xchg
pusha
cmpsl
jle
insl
dec
and
or
das
jp
jb
fbld
scas
pushf
ret
add
lret
inc
jecxz
push
and
pushf
into
in
sti
in
shll
adc
inc
jg
cmp
jnp
in
insb
add
push
repnz
xchg
mov
int
pop
pushf
mov
mov
je
dec
mul
jnp
xor
in
mov
dec
pushl
adc
rcrb
popf
lahf
mov
repnz
stos
dec
jno
testl
jge
movsl
push
push
and
out
inc
insl
add
mov
and
mov
cmp
mov
fcomps
adc
pushf
inc
call
jno
testb
sub
jmp
rol
or
orl
push
jbe
outsl
ret
imul
add
pop
jbe
rol
das
cmpl
add
dec
mov
dec
cmp
lods
cmpsb
es
cmp
jno
mov
cmp
push
outsl
xchg
sub
jmp
inc
enter
ret
lret
or
sub
mov
fwait
cmp
lds
fcmove
movsb
je
sti
test
lret
xchg
push
dec
test
imul
adc
shll
aas
test
popf
jle
xchg
mov
mov
jmp
call
fistps
mov
cmpsl
xchg
ss
sbb
xchg
cs
imul
xchg
jl
xchg
outsl
mov
jle
push
sub
sub
mov
sub
mov
imul
data16
mov
adc
jmp
scas
push
add
inc
aaa
jmp
push
gs
inc
les
test
ja
xor
dec
jp
mov
pop
ret
stc
or
push
sahf
mov
push
xor
add
push
add
repnz
jg
outsl
push
lidtl
pop
andl
fisttps
and
xchg
mov
mov
clc
pop
push
popf
pop
cmc
or
and
pop
add
nop
aam
mov
sub
testl
mov
xor
push
pusha
dec
aam
lret
testl
cltd
outsb
mov
mov
stos
pop
adc
std
jnp
pop
xchg
mov
jno
in
xchg
lret
xor
repnz
sbb
lea
fnstsw
cmp
inc
lods
xchg
adc
push
ljmp
fidivrs
out
push
cmpsl
es
xor
jge
add
test
cld
mov
out
enter
jle
push
rcr
push
rcr
ret
iret
inc
jmp
and
jp
and
roll
clc
sbb
mov
adc
repnz
out
and
test
dec
sub
cwtl
pop
sub
mov
xor
xor
push
fistpl
nop
arpl
out
dec
push
sub
mov
pop
mov
inc
insl
pop
xchg
popa
dec
xor
es
sub
mov
pop
cmp
rolb
cwtl
shl
aaa
or
aam
and
push
lods
ret
cltd
stos
dec
addr16
shll
inc
gs
lods
add
push
mov
push
inc
xchg
insb
and
int
stc
scas
sbb
xlat
in
test
repz
sbb
add
mov
mov
jns
dec
xor
inc
mov
inc
sbb
mov
push
addr16
in
andb
arpl
dec
cld
arpl
sti
dec
imul
stos
lret
xor
mov
out
out
xchg
cld
test
sub
xor
jae
inc
dec
call
xchg
pop
cmp
inc
pop
inc
and
imul
cmp
addr16
add
pop
sub
and
and
adc
xor
enter
sub
mov
jecxz
jle
sbb
jns
in
adc
pop
jnp
mov
mov
aam
pusha
insb
flds
jne
cmp
add
fidivrs
mov
lea
leave
fdivrs
and
scas
xorb
sub
pop
push
xchg
jg
jp
iret
mov
ja
or
xor
xchg
fistpll
mov
sarb
mov
add
inc
repz
jmp
pop
shll
dec
and
inc
push
and
dec
lahf
inc
ss
sbb
mull
and
or
pop
mov
fs
lea
xchg
repz
sbb
movsb
daa
mov
ret
xchg
jmp
or
push
xor
mov
jg
cld
mov
insw
into
mov
push
pop
shrb
hlt
orl
mov
test
les
scas
ds
pop
repnz
fwait
inc
aam
or
insl
adc
cmp
fcmovnu
popa
dec
dec
jne
and
adc
insb
adc
push
fidivrl
mov
enter
adc
sub
icebp
cmc
pop
jp
shl
aas
or
loopne
jne
inc
pop
lods
pop
stos
add
fsqrt
in
pushf
jbe
xor
mov
xor
outsl
or
ss
jo
out
cld
shll
inc
je
mov
jp
cmpsb
sbb
dec
sbb
ret
and
add
mov
sub
sub
push
cltd
xor
adc
mov
fldenv
aaa
dec
adc
cltd
xor
add
fcmovnbe
push
insl
sbb
mov
fwait
xchg
xchg
cmc
das
mov
fiaddl
and
xchg
test
in
pop
lods
adcl
dec
cmp
add
push
aas
inc
das
aas
jnp
fldln2
sub
std
bound
fs
xor
sub
in
push
shrl
ret
pusha
test
ds
fsts
inc
or
add
lahf
ljmp
popf
xor
xor
ds
jl
xor
jno
jmp
jge
popf
shrb
inc
negl
xchg
or
and
mov
fisttps
fldcw
xchg
cmp
into
sbb
cmc
dec
cmp
add
mov
jbe
enter
adc
fucomi
in
lahf
fldl
mov
or
test
cmp
nop
mov
stos
cmp
sub
aas
sub
sub
xor
icebp
bound
cld
lret
push
and
pop
rorb
ljmp
dec
push
adc
mov
aaa
ja
jno
xchg
adc
and
imul
rcll
mov
and
and
rcll
or
lods
or
cmp
add
xchg
sub
xor
sub
ret
and
add
popa
mov
stos
xlat
sbb
ja
jae
clc
call
out
lahf
pop
outsl
pop
sub
mov
pop
js
or
in
mov
sbb
adc
adc
sub
pop
adc
and
jle
add
call
mov
inc
dec
cmp
push
jge
mov
jnp
sti
loop
test
mov
and
push
or
in
arpl
inc
push
enter
jp
loopne
test
int3
imul
mov
fcmovb
jb
jmp
push
ret
push
jge
cmp
test
xchg
dec
pop
lock
out
int3
push
dec
test
adc
rorb
jno
test
fistpll
out
andl
jg
aas
and
jno
test
out
ljmp
jge
lcall
mov
ja
mov
pop
mov
mov
xor
adc
xor
add
ret
and
sbb
mov
push
push
push
push
adc
gs
lds
mov
out
imul
leave
xchg
xchg
das
aas
xchg
push
push
push
repz
pop
cmp
imul
jl
in
mov
popa
ret
and
fidivrs
dec
addb
jns
cmpsl
ja
out
cmp
xchg
addr16
dec
xchg
lret
jo
ret
mov
roll
movsl
notb
inc
stos
aad
cmp
mov
movsl
jmp
dec
jns
aam
sahf
jp
test
push
jmp
ja
push
xor
sbb
fcmovbe
mov
xchg
rcrl
std
xor
psllq
int3
push
mov
cmp
cmc
add
aad
push
popf
pop
mov
add
mov
sub
bound
xor
les
gs
push
xor
xchg
out
out
loop
inc
jb
loopne
clc
pop
xchg
ja
add
lods
ljmp
pop
mov
dec
add
fdivrs
pop
mov
xchg
mov
adc
inc
ss
lahf
fmulp
pushf
mov
rolb
sub
push
sbb
test
and
adc
pop
adc
push
mov
outsb
xchg
test
lods
aaa
lea
pop
out
dec
adc
jbe
cmp
push
add
cltd
imulb
pop
pop
rol
mov
icebp
lock
mov
xchg
mov
dec
sub
int
ds
mov
push
aas
enter
fwait
mov
fildl
jo
jbe
loop
ret
push
and
ljmp
mov
aas
out
nop
shl
jmp
incl
adc
cmp
std
ds
sbb
mov
insl
sbb
mov
jle
sub
mov
mov
adc
lods
mov
xchg
adc
pop
sbbb
push
call
aaa
lds
ss
cwtl
add
pop
adc
add
mov
and
mov
daa
enter
add
vpacksswb
push
pop
jecxz
leave
mov
movsl
mov
cmpsb
int3
rolb
and
sbb
xor
mov
icebp
insb
sarb
imul
jbe
jge
stc
dec
sarb
xor
jo
cmp
push
sbb
xchg
jmp
addr16
mov
ljmp
xchg
jmp
inc
ret
jnp
adc
dec
jl
cltd
ficompl
addr16
sbb
jp
mov
arpl
sub
sub
pop
xchg
dec
js
cltd
test
call
mov
scas
not
add
add
xor
jmp
sub
divb
je
push
lcall
inc
xor
xor
inc
leave
mov
xchg
add
mov
imul
ss
outsb
jae
nop
int3
inc
mov
mov
dec
mov
imul
xchg
fldcw
or
xchg
dec
dec
adc
add
mov
enter
popa
add
push
pop
scas
mov
ss
pushf
xor
mov
test
xchg
icebp
rolb
dec
sub
pop
jecxz
pushf
pop
jbe
cmp
pop
mov
xchg
mov
int3
cmp
add
pop
outsb
rorl
push
push
xchg
xor
int
xchg
cwtl
sub
dec
setbe
iret
movsb
cmpsb
mov
pushf
loop
fdivs
dec
mov
jns
push
std
xchg
daa
imul
adc
dec
dec
inc
ds
sbb
sbb
aas
or
xchg
in
push
and
loopne
stc
pop
in
mov
adc
arpl
pop
xlat
inc
mov
inc
xchg
lock
imul
sbb
push
outsl
jge
and
pusha
xchg
aaa
insb
push
adc
mov
xlat
cmp
jmp
inc
xorb
outsl
sub
pop
inc
adc
jno
cmpsl
test
mov
cmpsb
fwait
inc
notb
test
lret
sbb
cwtl
aas
xchg
jo
sub
fs
test
ja
in
ficoms
pop
xchg
js
test
ja
rcrl
jb
adc
pushf
mov
insb
mov
cmp
bound
jo
stos
or
aaa
add
nop
or
inc
inc
cmpsb
xor
test
mov
sub
in
adc
fst
sub
movsb
mov
daa
dec
pop
int3
in
dec
ljmp
out
lods
mov
leave
lret
hlt
mov
dec
iret
fmuls
xlat
push
sub
or
sub
add
mov
pop
dec
push
mov
rorb
std
cmp
mov
xchg
pop
frstpm(287
and
fsubs
jno
push
ja
movsl
mov
int
je
or
test
outsl
adc
out
gs
inc
jb
scas
add
xchg
mov
les
arpl
mov
push
jo
dec
je
out
jne
les
inc
mov
mov
jne
add
pop
xchg
sub
mov
int3
xor
loop
imul
decl
add
into
enter
dec
cwtl
xchg
addb
pop
inc
xchg
daa
cmp
fmul
fnstenv
lahf
add
fbld
ret
sbb
dec
inc
lret
inc
stos
xchg
xlat
pop
cli
xchg
andb
push
pop
scas
jne
xor
sub
mov
pushf
push
dec
in
rcrb
lret
leave
stos
rorl
neg
jmp
in
cmp
mov
adc
ds
stos
inc
lods
test
sbb
cmp
mov
popf
mov
fucomi
mov
ljmp
hlt
mov
notb
xchg
shll
loope
xlat
sub
push
cmpsl
ss
mov
sahf
cs
aam
ljmp
push
and
je
mov
lea
rorl
jns
or
sti
or
sub
push
push
inc
fwait
pop
pop
mov
outsl
gs
rcll
test
outsl
lret
xchg
mov
add
repnz
daa
mov
aaa
and
sub
es
fcmovne
mov
addr16
js
inc
subl
loopne
xchg
lcall
clc
pushl
ds
jg
xchg
mov
shl
scas
fdivrl
imul
std
sub
insb
inc
sub
xchg
pusha
popa
xchg
add
inc
rclb
loop
xor
fstpl
das
daa
mov
push
fcomps
sbb
or
xor
xchg
stos
sbb
lods
dec
mov
insb
test
cmpsl
xor
sbb
xchg
aas
popa
arpl
nop
imul
jb
aam
int
inc
adc
xor
roll
ljmp
or
mov
ljmp
arpl
and
shrb
mov
xor
jae
das
out
int
pop
subb
repz
inc
add
arpl
adc
insb
mov
ja
pop
inc
imul
cmp
sbb
cmpsb
movsb
ds
mov
dec
mov
adc
repnz
or
sub
out
xlat
js
mov
ljmp
xlat
js
xchg
in
scas
mov
xor
jns
int
sub
mov
pop
mov
mov
cltd
out
lods
sub
rcrl
test
push
fadd
mov
pushf
jns
mov
xchg
mov
in
popa
pop
mov
jecxz
xchg
sbb
sarl
popf
xchg
stos
adc
lcall
cmpsb
jl
stos
pop
sub
cmp
sbb
inc
call
sbb
aaa
out
and
xor
jge
mov
pop
pop
fsts
addr16
outsl
sbb
cmp
fistpll
adc
pop
sub
cmc
es
shlb
imul
xor
ja
push
pop
loope
idiv
jecxz
cmp
ficoml
pop
stos
push
mov
out
sbb
adc
jno
mov
sub
out
mov
push
and
in
pop
push
movsb
push
lahf
inc
inc
cmc
inc
mov
fcoml
aam
add
lcall
jmp
movsb
fldcw
sub
mov
push
add
lahf
xchg
mov
aad
gs
in
jns
rcrb
push
and
sub
cmp
fnsave
fistl
inc
cli
ret
shl
mov
mov
cmp
fnstsw
mov
or
mov
sbb
insb
mov
mov
push
test
shrl
in
test
cmp
mov
repnz
adc
jmp
outsl
outsl
cld
insb
push
push
cld
cmc
ret
pushl
jmp
icebp
iret
hlt
aam
inc
cltd
mov
push
and
imul
lcall
inc
xchg
ret
out
clc
cld
dec
mov
adc
sahf
fbld
cmp
jnp
ds
iret
int3
mov
inc
lcall
lods
aaa
std
mov
das
leave
out
sbb
mov
fdivrs
and
divb
imul
adc
cmp
stc
pop
into
jnp
test
and
jecxz
mov
dec
shrb
sbb
jae
sbb
push
mov
push
ror
fs
subl
loopne
adc
das
loopne
das
mov
add
lea
out
add
fwait
in
adc
xchg
and
mov
jge
jecxz
imul
mov
adc
lea
cmc
into
pop
sub
int
mov
subl
xlat
pop
or
fstps
test
dec
sub
adcb
xor
cmpsb
or
iret
or
mov
fs
pop
imul
adc
movsb
mov
pop
lods
push
ss
addr16
push
xchg
mov
fists
pop
cmp
jno
insb
mov
adc
cli
stos
dec
mov
pop
pop
sub
cltd
and
mov
jp
mov
into
add
mov
xchg
sub
pop
out
sbb
mov
mov
and
scas
insb
pop
inc
mov
xchg
stos
pop
xor
adc
fnsave
jp
mov
aam
imul
pop
das
repnz
in
lret
addr16
cld
in
jmp
adc
repz
cltd
cwtl
not
mov
mov
mov
aaa
mov
push
cmp
sti
data16
or
mov
cli
inc
scas
fdivr
inc
pop
adc
flds
push
mov
dec
push
ss
repnz
xlat
sbb
mov
popa
or
enter
inc
or
loope
in
ja
pop
pop
out
inc
sti
and
push
aam
mov
xor
mull
push
addr16
pop
sbb
mov
clc
sbbb
lea
inc
lahf
sbbl
lock
jl
daa
and
mov
fstp
jge
dec
lods
outsl
push
pop
sbb
pushf
leave
in
xor
dec
mov
push
movsl
add
popf
sbb
mov
ds
and
pushl
adc
sub
jnp
aam
in
mov
sti
aad
xlat
jp
push
fcomip
ret
ja
jns
lcall
ljmp
ret
loopne
push
cmp
shl
xor
pop
jbe
mov
and
into
out
movsb
add
insl
js,pn
mov
mov
dec
add
das
xor
fldenv
sub
aam
xchg
push
enter
es
ja
push
fs
hlt
out
insl
cmp
fdivrp
lock
and
mov
mov
sbb
push
mov
jnp
rcrb
mov
pop
mov
pop
sbb
dec
sbb
daa
jmp
mov
movsb
mov
cmp
in
mov
sahf
test
jnp
sti
jmp
andl
fs
test
push
cld
subb
cmpsb
xchg
mov
sbb
in
stos
out
adc
mov
jecxz
rorb
fistps
jl
jnp
outsb
in
repz
pop
flds
test
xor
popf
cwtl
mov
adc
mov
ljmp
or
jne
mov
and
leave
dec
nop
aam
jl
stos
call
in
push
iret
shrb
imul
inc
nop
mov
mov
mov
es
pop
iret
rcl
sub
add
pop
mov
outsb
test
mov
mov
and
or
clc
xor
lret
out
fs
pop
xor
sub
mov
dec
dec
mov
leave
pop
dec
xor
lods
or
in
sub
shll
shll
inc
mov
push
lds
xchg
and
xor
adc
sti
in
push
jl
or
sub
pop
inc
js
into
jecxz
ds
jbe
sub
test
fwait
jne
orl
xlat
xchg
xchg
call
mov
adc
push
test
sbb
lods
pop
in
inc
mov
mov
test
test
jae
nop
push
sub
pop
insb
int3
inc
ljmp
aas
stc
in
push
jmp
and
stos
sub
pop
mov
push
pushf
ja
jne
push
jp
cmp
sbbb
nop
mov
fistpll
ja
pop
inc
mov
sub
ret
mov
cmpsb
mov
dec
popa
cmp
adc
or
jl
cs
jecxz
mov
sub
fstpl
xchg
out
movl
pop
les
jl
jbe
fs
leave
fs
mov
lcall
xor
ja
push
and
ljmp
xchg
push
sub
xor
aad
stc
xor
mov
push
frstor
jg
mov
xor
mov
pushf
push
jle
adc
sbb
adc
mov
xchg
stc
mov
popf
cwtl
and
loopne
xchg
sbb
cs
iret
test
dec
test
push
push
ds
fwait
push
jl
std
push
pop
loop
dec
arpl
js
int3
push
xor
pop
lret
andl
add
mov
sbb
fdivs
je
rorb
cld
push
cwtl
data16
sbb
push
push
scas
sbb
in
mov
loopne
das
incb
cmp
out
scas
popf
xor
cmc
sbb
lea
out
jns
fsubs
and
cltd
push
push
repnz
pop
fnstcw
mov
add
test
int
push
cmp
outsb
xor
dec
or
pop
xor
xchg
pop
ret
int3
test
xchg
cs
arpl
and
xchg
out
xchg
adc
xchg
movsl
mov
add
sbb
add
jne
sub
int
xchg
sbb
cmp
adc
out
mov
pop
les
adc
jg
out
mov
jmp
out
clc
imul
test
dec
jp
shlb
xor
mov
loop
sbb
stos
shlb
out
int
pushf
xor
dec
fidivrs
rclb
lea
in
mov
dec
test
sbb
unpckhps
inc
push
movsl
fs
mov
daa
in
and
inc
shll
cmpl
fisttps
jnp
jecxz
divl
insb
lds
mov
add
cmp
xlat
pop
push
sub
jno
xchg
or
cld
insb
daa
and
xchg
popf
std
outsl
xor
sub
cmp
loopne
dec
add
dec
push
dec
mov
ja
inc
pop
pusha
in
insb
es
sub
adc
xchg
pop
jg
cmpsb
mov
mov
xor
and
xchg
cltd
xor
nop
and
jle
xchg
jge
jp
jmp
push
stc
sbb
cmp
add
cli
ljmp
inc
sub
mov
sarl
xchg
adc
stc
push
fxch
dec
push
inc
adc
push
scas
or
lcall
jbe
jmp
sbb
repnz
sub
aam
clc
push
lods
inc
sbb
mov
in
xor
shlb
xor
shlb
cmp
cli
arpl
leave
push
outsb
mov
mov
mov
lods
cmpsb
std
pusha
push
mov
nop
mov
sbb
rol
pop
add
pusha
cli
and
adc
and
sbb
fmul
dec
add
je
pop
fwait
jns
leave
decl
je
push
fs
dec
inc
xabort
stos
arpl
mov
pusha
xchg
fs
and
sub
xchg
sbb
inc
loopne
or
cmpsb
jae
int
mov
outsl
mov
movsl
pop
inc
add
push
push
xor
cmp
cmp
cld
adc
movsb
xlat
pop
sbb
dec
inc
jnp
mov
das
mov
cmpsl
mov
in
and
insl
and
push
loope
rcll
andps
loop
xchg
dec
loope
add
inc
add
ljmp
sub
cmpsb
gs
je
sbb
mov
aaa
stc
fcoml
lcall
imul
mov
adc
out
lret
jnp
dec
mov
sbb
mov
push
pusha
sub
std
pop
cld
xor
popa
dec
xchg
mov
loopne,pt
jmp
add
lcall
mov
cbtw
test
enter
and
cltd
xchg
push
mov
cwtl
jne
and
add
mov
sarl
jbe
jecxz
add
add
out
mov
sbb
inc
lahf
mov
mov
sbb
pop
ds
mov
inc
jnp
ljmp
cmc
pop
sbb
jnp
das
jg
arpl
or
mov
pusha
and
inc
cmc
pop
cld
sar
out
jl
sarb
jo
movsl
cld
dec
push
and
add
jmp
jg
dec
cmc
dec
icebp
inc
mov
enter
aam
inc
in
cmp
shll
mov
xor
aad
xchg
jns
xchg
xchg
loop
orl
out
rcr
pop
cmp
out
leave
jl
cmpsl
push
pushf
mov
loop
rcr
push
loope
cmpsl
lahf
cmpsl
rcl
mov
jo
in
negl
js
mov
sbb
clc
jl
sub
or
cmp
push
or
iret
lock
mov
arpl
icebp
cwtl
loop
mov
stc
arpl
in
mov
jbe
mov
es
and
movsb
sbb
shrl
and
mov
adc
insb
ljmp
and
dec
scas
movsl
push
in
dec
xchg
fldln2
and
or
inc
or
leave
push
xor
cmp
push
push
xchg
jp
imul
ljmp
sarl
frstor
out
xchg
push
and
into
xor
je
test
jecxz
loop
mov
imul
in
fisubs
loopne
lret
push
mov
mov
mov
movsl
out
mov
aas
mov
scas
aam
test
bound
ret
and
dec
jae,pt
and
mov
cmp
mov
ds
lods
out
mov
cmpsl
adc
and
jmp
or
lret
insb
clc
xor
mov
pcmpeqd
mov
adc
shll
dec
inc
lods
mov
lahf
lds
and
dec
incl
imul
cmp
inc
dec
rcrl
outsl
rol
xor
pusha
mov
dec
add
lods
lahf
lods
cmp
mov
push
cld
adc
gs
jns
xor
rcll
addr16
pop
sbb
mov
das
and
pop
cmp
outsb
push
icebp
loop
divl
and
popf
inc
fisttpll
adc
push
dec
lods
xor
ljmp
dec
mov
je
pop
mov
and
sbb
ficoml
js
notl
xchg
sub
sub
imul
aaa
mov
adc
ds
hlt
or
mov
in
arpl
pop
mov
add
cld
lret
dec
hlt
jne
mov
lods
sbb
mov
js
sti
adc
push
dec
popa
test
sub
jmp
jp
popl
pop
cmpsb
adc
int3
pop
pop
pop
mov
jno
movsl
dec
cmpsb
cwtl
xor
cmp
pop
mov
add
and
xor
notl
shll
shrl
pop
sar
push
imul
inc
jns
aas
insb
enter
cmpsb
mov
jo
shll
cwtl
rcrb
xor
xchg
jg
scas
es
xchg
mov
push
cmpsl
xor
aam
or
mov
pop
mov
rcll
js
stos
push
push
std
pop
bound
xchg
mov
sbb
jo
inc
ret
xlat
repz
pop
mov
aam
mov
xor
jp
inc
push
jbe
shr
dec
lock
mov
sbb
sbbl
lods
and
ffreep
gs
ljmp
sahf
mov
in
prefetchwt1
pushf
push
xor
imul
lcall
and
sti
mov
dec
push
jns
call
lret
imul
sbb
pop
jae
mov
inc
sub
or
xchg
cmp
je
mov
out
cmovae
xor
and
add
push
push
mov
fcmovne
js
jb
in
pop
insb
mov
pop
aad
test
push
rcl
clc
faddl
xchg
lock
das
int
in
add
add
adc
lock
sarl
adc
addr16
rclb
sub
js
sbb
or
inc
scas
std
out
add
xchg
loop
cmp
lret
testb
out
cli
sub
js
out
lods
in
inc
pop
jp
je
filds
aaa
mov
loop
cmpsb
leave
fnsave
xchg
iret
fisubrl
stos
mov
sbb
imul
mov
add
out
movsl
movsb
clc
pop
test
dec
add
push
das
outsl
mov
mov
movsb
icebp
popf
cli
addr16
inc
in
add
dec
aad
hlt
adc
jle
into
iret
loope
insb
std
cmpsl
inc
adc
dec
addr16
add
xlat
mov
imul
mov
int3
lea
mov
ja
add
push
xchg
ffree
sbb
test
pop
test
ficompl
fldcw
adc
into
sbb
jle
sub
pop
or
imul
shl
sbb
mov
arpl
imul
call
in
fcmovnu
jmp
mov
mov
cmp
and
and
lcall
adc
dec
mov
lahf
pop
lods
js
sbb
hlt
test
cs
cmp
xchg
inc
test
dec
cli
test
in
loop
xchg
cmp
jmp
pop
unpckhps
das
call
in
adc
mov
sub
cltd
cs
in
icebp
and
imul
inc
imul
clc
adc
iretw
xchg
shrb
pop
das
xor
outsb
ja
cmp
mov
std
xor
xchg
ss
xchg
push
rcrl
daa
mov
inc
pop
ljmp
pop
test
arpl
or
add
sub
movsl
xchg
inc
lahf
jae
les
inc
mov
popf
vmwrite
test
cmc
mov
dec
clc
adc
fists
dec
adc
dec
sub
pop
sti
xacquire
dec
lea
xchg
cmp
pop
dec
cmpb
std
or
daa
jecxz
mov
mov
fmuls
pop
mov
mov
rclb
movsb
jl
fnstsw
adc
jge
rcrl
test
or
jno
push
jbe
popf
xor
add
adc
mov
pop
xor
pushf
jns
pop
pop
dec
sahf
pop
cmp
push
shlb
mov
std
mov
jb
push
jns
pop
mov
dec
cmp
dec
add
sbbl
and
lcall
adc
mov
sub
arpl
cmp
mulb
or
push
insl
sbb
adc
pop
aas
aam
ds
dec
out
mov
in
pop
mov
jecxz
enter
cmp
ror
adc
ret
gs
xor
pop
mov
and
mov
outsb
dec
add
lds
rcl
out
jle
btr
pushf
es
mulb
sbb
dec
inc
shl
jno
inc
das
lahf
xchg
push
mov
dec
lahf
xor
add
test
xlat
mov
mov
cwtl
cmp
js
ljmp
mov
adc
dec
pop
fbstp
je
lods
int3
sbb
pop
xor
fimull
rorb
mov
adc
lret
sbb
xchg
andl
imul
popl
pop
mov
out
adc
jae
jb
mov
mov
xlat
lret
mov
xor
mov
push
loope
inc
subb
xchg
pop
jl
int
mov
mov
ret
lds
rcrl
xor
mov
adc
adc
jns
xchg
adc
fnstcw
aad
or
outsb
ljmp
movsb
xchg
mov
outsl
aam
fdivl
test
inc
loopne
mov
mov
mov
outsl
scas
add
lock
ljmp
cs
fildl
in
inc
or
mov
cmp
mov
ja
dec
push
aas
sbb
and
fs
mov
aam
adc
sub
adc
jnp
xlat
icebp
push
call
xchg
pushf
outsl
sarl
sbb
mov
push
add
subb
and
sub
nop
cmp
movsb
ss
vmovapd
inc
fidivl
fsts
out
lock
or
jmp
pop
imul
sbb
ds
add
jno
in
push
loopne
roll
xlat
les
inc
adc
and
fstps
nop
sahf
imul
nop
in
repz
mov
scas
adc
jmp
sar
stos
sbb
test
sub
faddl
sbb
lcall
mov
sbb
inc
aad
sbb
push
les
sub
in
je
xchg
push
sub
idiv
scas
xor
pop
out
mov
cwtl
mov
sub
fstpl
fnstcw
xchg
or
fistl
push
aad
sbb
icebp
cwtl
dec
sub
ds
or
xchg
push
idivb
sbb
pop
cmpsl
xor
mov
sub
outsb
test
cmc
mov
sub
jmp
pusha
repnz
jge
rorl
pop
mov
lods
mov
lock
xor
jne
aad
lods
mov
sbb
jne
jne
xchg
sub
daa
test
xor
and
jmp
cmc
sbb
xchg
sbb
mov
in
xchg
mov
jae
mov
loopne
orb
stos
fadd
jmp
pusha
add
xchg
scas
jno
dec
push
push
xchg
sub
adc
mov
cld
jne
dec
scas
push
or
add
test
mov
fistps
mov
adc
out
mov
movsb
pop
push
pop
rcll
mov
jecxz
arpl
cmp
and
les
mov
and
adc
fisubs
js
insb
hlt
sbb
scas
ret
pusha
dec
test
adc
dec
xchg
ficoms
repz
mov
sub
jne
cmp
insl
mov
or
aad
negl
lret
aaa
movsb
aas
fimuls
mov
dec
and
cmp
adc
jmp
mov
lods
lea
and
ret
nop
fimuls
out
cs
out
insb
cmpb
sub
and
repnz
ja
hlt
and
stos
push
andb
stos
ljmp
mov
dec
mov
lret
dec
push
xchg
lods
xor
sub
rcrb
mov
inc
imul
dec
lds
lea
loop
les
xor
dec
jno
jle
mov
and
jbe
dec
hlt
loopne
call
lea
enter
andl
cmpb
aad
mov
push
xlat
dec
mov
add
push
xor
inc
aas
push
lock
pop
aas
xchg
push
mov
addr16
vphaddbw
xlat
or
mov
jnp
jno
sbb
sub
push
xor
dec
fwait
bound
daa
outsb
pushf
xchg
push
add
cmp
adc
add
cmp
out
fnstsw
fldz
sti
hlt
cs
sub
outsl
movsl
lds
add
rorb
fs
dec
sub
pop
mov
push
mov
enter
loopne
sbb
jp
aas
or
xor
sbb
or
shll
jo
mov
dec
mov
test
xchg
jge
lods
pusha
or
aaa
cmp
xor
or
popa
std
jp
xchg
jmp
mov
xlat
jne
rcr
push
sub
lods
in
pushf
jae
inc
sbb
dec
rorl
shlb
sub
cmpb
jno
outsl
je
fiadds
stc
mov
cld
pop
icebp
jbe
into
fdivr
movsl
xor
pop
out
pop
mov
pop
rcrl
inc
mov
push
add
fistpll
or
sub
adc
ficomps
pushf
xlat
pop
imul
inc
adc
lret
cmc
in
xchg
lods
or
jns
push
cwtl
repnz
cltd
inc
adc
bound
and
xchg
add
add
push
sbb
and
xchg
jnp
jp
or
cmpsl
adc
mov
mov
outsl
fwait
and
mov
inc
sub
jns
fimull
rcl
sti
pop
push
jmp
sarb
ret
outsb
mov
imull
aas
xchg
cld
out
dec
and
mov
iret
loope
xor
fisubs
sar
mov
subb
fimuls
ffreep
sbb
in
lea
sub
adc
clc
imul
jecxz
out
imull
push
mov
adc
and
dec
outsb
pop
bound
pop
mov
mov
test
push
pop
dec
xor
push
and
in
pop
pop
add
pop
jnp
sub
pop
xchg
outsl
cmp
adc
jle
xchg
or
and
xor
loope
in
cwtl
lods
mov
stc
iret
add
rorb
lret
fnstsw
fbstp
loop
add
das
out
mov
fidivl
mov
stos
pop
out
adc
jecxz
mov
jle
xor
jle
lods
dec
xchg
or
std
out
ficoms
popl
push
push
dec
ud0
scas
mov
rcrb
inc
push
xchg
push
repz
int3
mov
mov
and
fildll
cmp
pop
aas
sbb
inc
adc
lret
clc
pop
and
push
movsl
in
sahf
loop
dec
jae
xchg
xchg
imul
push
jns
sbb
movsl
push
cmp
xchg
fsub
push
repz
mov
xlat
arpl
cmp
sbb
dec
sbb
daa
push
dec
pusha
mov
xchg
stos
bound
std
xor
mov
insl
sub
cmc
insl
push
pusha
fildll
sub
out
dec
mov
xlat
clc
inc
push
or
mov
fiaddl
push
pop
sub
cli
icebp
jle
je
and
es
sub
or
mov
add
js
unpcklps
jl
add
mov
jl
pushf
mov
lea
push
sub
dec
push
ret
call
cli
sub
dec
movsl
mov
ffree
sub
xor
adc
ret
div
movsb
inc
lcall
loope
sub
jo
jo
or
jb
lret
je
xchg
jb
jno
mov
int
icebp
mov
call
jg
cltd
rclb
lock
xor
mov
scas
mov
sbb
fcmovne
mov
push
test
inc
mov
pop
or
popf
mov
test
xor
add
orb
inc
and
pop
jbe
jge
iret
stc
or
pop
pop
popf
jmp
and
dec
cltd
fs
push
bound
dec
imul
push
mov
and
std
jns
dec
add
outsl
xor
push
adc
jae
xchg
js
insb
mov
add
test
pop
adc
fcoml
cmp
movsb
imul
mov
pusha
test
jle
mov
push
fcomps
ret
add
mov
lret
inc
fs
stc
jo
not
mov
loopne
dec
inc
daa
sbb
ret
xchg
mov
inc
sti
incb
pop
sbb
andl
dec
sub
push
loope
fstps
mov
imul
arpl
adc
push
hlt
gs
inc
clc
jnp
add
clc
push
push
jae
xchg
adc
insb
test
pop
cmc
jecxz
test
mov
aad
and
or
jle
mov
push
mov
push
lock
lcall
jns
xchg
pop
mov
mov
jns
adc
pop
ret
xchg
adc
lahf
jns
out
xchg
add
popf
push
lods
leave
mov
sbbb
icebp
add
or
addb
push
pop
push
loopne
cmp
sub
mov
pop
and
jge
outsl
xor
ljmp
pop
pop
mov
pop
dec
xlat
xchg
jmp
mov
cmp
add
cmc
ja
les
pop
dec
aam
sbb
cmp
mov
mov
outsb
mov
jp
adc
mov
fisubrl
and
sbb
xchg
ss
shlb
inc
dec
mov
rorl
sub
pop
in
jg
mov
aad
cmp
fwait
xorl
cmp
add
xchg
ljmp
dec
shl
lcall
aaa
sub
cmp
mov
popa
stc
cwtl
popa
outsb
mov
aas
cmpsb
fcompl
cmpsb
jl
inc
lahf
dec
and
cmp
fs
fildl
icebp
sti
es
sub
out
jmp
inc
pop
scas
jns
jg
sahf
xchg
ljmp
mov
or
lea
mov
jg
sbb
fistpl
sbb
sbb
nop
jecxz
cmpsl
imul
or
div
mov
outsl
bound
fs
cmp
scas
push
ja
dec
out
imul
pop
xor
fsubrl
push
sahf
ljmp
es
dec
sbb
or
sahf
pop
mov
es
imull
push
mov
xchg
sub
dec
jp
lds
push
aaa
ret
aam
add
pushf
insl
stos
xchg
xor
outsl
cmc
js
mov
mov
jp
test
mov
lcall
and
push
fwait
jns
cmp
insb
addr16
xchg
xchg
out
xchg
or
stos
cs
cmp
xor
push
add
mov
test
insl
mov
adc
daa
and
add
mov
mov
xor
rorb
out
mov
fmul
mov
adc
add
cmp
and
repnz
aaa
mov
jnp
sbb
mov
push
sub
nop
and
pop
add
arpl
popf
clc
inc
mov
adc
mov
add
xor
mov
cmc
jbe
mov
fists
dec
out
imul
scas
cmpsb
sbb
jo
sbb
push
push
push
int3
call
cmp
idivl
lds
mov
pop
pop
loope
lcall
in
aad
data16
loop
cmp
dec
push
push
inc
fisttpll
and
mov
xor
jg
nop
icebp
xor
push
outsl
jmp
idiv
add
mov
inc
lcall
ljmp
lret
xchg
mov
sbbl
push
hlt
in
mov
and
imul
xchg
testl
lcall
fldcw
stos
and
mov
popa
mov
pop
mov
stos
and
xor
or
and
inc
sahf
sahf
sbb
inc
jb
mov
dec
fisttpll
jns
into
pop
push
lahf
ret
xor
cmp
adc
and
jp
cmp
sbb
sahf
pop
in
fcompl
cmp
jmp
stos
cltd
cli
xor
pushf
xchg
call
mov
sbb
and
adc
mov
sti
stos
std
dec
cmpsl
lods
sub
mov
sub
or
xchg
inc
pop
out
pushf
push
mov
mov
jmp
fwait
int3
mov
inc
push
cli
test
repnz
gs
lods
pop
stos
movsb
call
push
mov
in
js
mov
addb
add
adc
jg
mov
loope
pop
addb
mov
mov
mov
sbb
push
pop
sub
aad
lds
push
out
adc
mov
outsb
xchg
pop
icebp
out
dec
das
xor
dec
cmp
nop
jo
and
fwait
xor
pop
in
xor
sub
mov
ja
dec
pop
push
icebp
das
add
jecxz
jle
ret
or
push
lcall
mov
lahf
imul
bound
lock
sar
xlat
pop
in
or
jnp
rorl
in
sub
out
adc
stos
mov
loop
roll
pop
adc
call
mov
jle
test
xchg
mov
jne
lcall
cmp
ja
mov
js
mov
jb
or
inc
aam
ret
shl
xchg
mov
cmp
mov
aad
or
test
jne
mov
mov
out
jl
mov
std
and
or
inc
jo
loop
test
push
xor
pop
inc
inc
fst
mov
xchg
add
out
fsub
repnz
push
xor
add
mov
pusha
stos
loopne
sub
loope
js
mov
xor
or
xchg
dec
sahf
dec
pop
sub
push
cwtl
pop
inc
mov
cmc
mov
sub
mov
call
jb
or
cmc
gs
movsb
clc
pop
jns
jecxz
jmp
add
loop
inc
into
loop
sbb
cltd
int3
pop
shrb
out
xor
cwtl
cwtl
sbb
mov
jmp
pop
xchg
cmp
mov
xor
pop
jle
pop
leave
shl
scas
pop
mov
xor
mov
movsb
in
xchg
add
movsl
hlt
xchg
or
sti
sub
sbb
xchg
int3
mov
test
or
inc
aam
or
cmp
push
push
int3
js
xor
call
dec
sti
pop
push
aad
mov
xchg
dec
push
dec
xchg
mov
ss
adc
inc
scas
lods
dec
adc
push
add
add
adc
add
cmp
wbinvd
inc
mov
xchg
jle
jge
pop
ja
aad
addr16
insb
loopne
xchg
jg
pop
popf
in
sub
popf
fcmovu
out
mov
inc
add
aam
mov
pop
pop
pop
adc
dec
jns
iret
sti
call
andl
inc
mov
sub
sahf
popf
cli
test
or
dec
lock
hlt
jae
nop
leave
aam
movsb
xchg
inc
addr16
and
dec
pop
outsb
mov
rorb
incl
hlt
adc
popa
loop
hlt
sbb
pop
repnz
sub
cmpl
jl
cld
xchg
je
data16
mov
push
shlb
test
or
xor
dec
je
or
dec
pop
cmpl
or
fwait
xchg
repz
lcall
stos
es
leave
movsb
mov
idiv
fidivl
mov
fimull
fdivr
sbb
jp
les
test
jnp
inc
gs
shlb
into
loopne
mov
mov
jns
movsb
stc
or
and
stos
lret
js
lds
jmp
fwait
push
daa
lock
sahf
cwtl
insl
sbb
push
lahf
xchg
insl
add
mov
cmc
xchg
fidivs
lret
sbb
gs
jbe
lea
xchg
sbb
shll
mov
test
popa
ret
mov
inc
xchg
push
addb
inc
js
scas
xchg
mov
aaa
pop
or
je
xorb
aam
and
aam
or
rcrl
rorl
pop
in
jne
mov
mov
mov
lea
nop
loop
addb
or
pop
sahf
jge
mov
sub
dec
mov
xor
mov
pushf
and
jecxz
mov
xchg
add
scas
je
scas
arpl
mov
js
mov
int3
test
nop
inc
xchg
stos
lea
mov
lods
das
or
inc
in
les
mov
aaa
pop
lods
stos
sbb
adc
jl
pop
les
add
pop
jmp
ret
jle
cmp
pop
lcall
iret
xchg
pop
call
subb
push
fdivrs
daa
test
cmp
xchg
pop
aam
mov
outsb
clc
xchg
pusha
mov
rorb
pop
in
inc
pop
cmpsl
je
andl
adc
xchg
ss
add
add
repz
lret
cmp
lds
mov
xor
push
rorb
jo
ret
imul
and
daa
sar
xchg
mov
insb
fisttps
lods
mov
mov
sbb
adc
test
pop
mov
cmp
aas
dec
push
shlb
mov
mov
pop
pop
mov
inc
scas
xchg
insl
in
xchg
cwtl
pop
clc
inc
and
repnz
dec
aas
xor
mov
shrb
lods
test
repz
lahf
sbb
ja
in
dec
push
add
xchg
outsl
in
cmp
jae
ret
push
jmp
hlt
push
std
lcall
movsl
cwtl
test
push
aaa
mov
sbb
in
dec
outsb
shlb
or
add
push
arpl
and
sub
sbb
xchg
cmp
test
in
imul
mov
push
sbb
mov
in
pop
pushf
addr16
mov
add
bound
bound
inc
ficomps
ljmp
add
xchg
adc
aad
jge
insb
lds
add
outsb
int3
ret
cmc
test
shrl
pop
ja
xchg
lret
push
sub
adc
adcb
mov
into
jnp
or
insb
jmp
jp
pusha
imul
cmpsl
or
sub
stos
xor
gs
das
daa
stc
pop
out
add
jno
or
mov
insl
testb
lods
jns
cli
jnp
outsb
pop
shrl
pop
sbb
and
ret
sbb
dec
call
lret
inc
aaa
ret
rcll
in
stos
inc
rorl
add
push
enter
xchg
sub
outsl
sub
out
xor
clc
ss
sub
xchg
or
rcr
mov
stc
jmp
sub
cltd
xor
push
out
in
pop
out
mov
popa
or
xor
loop
add
dec
or
adc
xor
adc
jb
mov
cmpl
notb
xchg
in
ds
jne
add
xor
enter
and
inc
or
aaa
adc
push
sub
push
mov
popf
push
ret
mov
pop
push
lret
test
ja
icebp
fdivr
imul
jo
inc
or
inc
out
insl
ds
popa
inc
xchg
sub
add
pop
hlt
sub
aad
adc
push
inc
xor
mov
jp
add
lret
imul
jbe
adc
or
out
bound
ror
out
or
mov
and
sub
imul
shll
movsl
pushf
sbb
cmpsl
mov
xlat
aam
and
pop
out
xor
sub
sahf
xbegin
sbb
xorb
in
lret
aam
jg
adc
aas
xor
push
push
ficoml
cmp
repnz
jo
inc
fs
sub
mov
xchg
pop
fchs
negl
push
addr16
add
dec
dec
jae
mov
insb
add
cmp
xor
push
popf
jnp,pt
and
fists
lret
lahf
jecxz
and
fcom
rcrb
out
dec
jo
icebp
dec
test
es
addr16
dec
lea
cmpsb
xchg
push
jge
pop
cwtl
xor
into
out
hlt
pop
insb
stos
test
inc
outsb
nop
mov
xorb
pop
adc
pop
inc
pop
outsb
pop
push
out
into
xchg
sub
scas
lret
lret
pop
mov
sub
jp
lret
push
mov
mov
int3
mov
cmc
xchg
mov
push
addr16
pop
inc
cmp
mov
add
jbe
mov
arpl
cmc
xlat
mov
mov
negb
push
mov
mov
mov
lret
loope
sbb
cli
subl
sar
mov
cmp
jle
add
dec
shrl
inc
fisttpl
dec
xchg
mov
mov
fsubr
les
hlt
adc
out
xchg
cmp
and
push
adc
imulb
test
pop
inc
sbb
jae
loopne
or
test
pop
pop
xor
cmpsb
loop
or
ficoms
fs
xor
push
cltd
cmc
ljmp
cmc
push
and
lods
repz
fists
jbe
xchg
sub
sub
cmp
and
jo
enter
adc
push
ret
mov
sub
fidivrl
adc
xchg
fildll
jae
loop
xchg
xor
pop
pop
lcall
push
push
push
pop
pop
sbb
popa
sub
orl
mov
mov
push
and
scas
int
lahf
mov
mov
lds
sbb
imul
jne
ds
dec
das
xor
js
out
add
push
xlat
push
das
divb
imul
sbb
inc
mov
cli
xchg
sub
dec
dec
leave
mov
div
inc
lretw
in
cmp
and
ret
nop
or
jge
mov
mov
loop
and
mov
and
mov
scas
sub
pop
movntq
repz
jae
mov
sbb
push
and
inc
ja
ljmp
mov
mov
gs
lcall
mov
pop
cmp
push
mov
xor
jae
xor
sub
xchg
cmp
xchg
stos
je
cs
inc
and
scas
and
jl
shlb
addb
ja
cmp
mov
mov
mov
std
enter
iret
or
imul
pop
dec
adc
and
adcl
dec
mov
mov
xor
mov
aad
scas
and
pushf
dec
inc
sub
nop
arpl
fcompl
mov
test
nop
imull
sbb
in
scas
mov
push
push
arpl
out
mov
add
outsb
out
popf
in
adc
test
in
adc
shlb
in
outsb
xchg
dec
mov
testb
sahf
in
cmp
daa
scas
sahf
sub
movsl
lret
leave
or
ret
sub
pusha
and
in
jecxz
mov
pop
aas
add
insb
or
pop
pop
xor
and
mov
into
xchg
sahf
cmp
fcoms
fdivrs
scas
sbb
jg
adc
xchg
int
or
push
fnsave
lods
sbb
fbstp
adc
jmp
lret
push
testb
insl
mov
cltd
or
adcb
xchg
mov
and
sub
addl
mov
ds
jp
or
in
outsb
mov
mov
jle
jo
push
sahf
mov
ret
sub
iret
and
daa
adc
popa
mov
fisttpll
mul
push
iret
test
mov
pop
xor
test
push
inc
add
sub
push
pop
pushf
les
test
dec
mov
gs
add
jl
out
push
fldenv
lcall
lods
dec
stos
cmp
pop
dec
mov
das
add
xchg
dec
mov
cmpsb
mov
clc
or
push
fsubrp
test
pop
mov
mov
adc
daa
mov
mov
mov
sbb
fdivs
std
mov
iret
adc
hlt
movsb
mov
jge
pop
xchg
adc
mov
push
xlat
enter
andb
or
sub
lahf
aad
inc
shrb
rcrl
mov
sti
xor
sbb
fnsave
loope
add
push
sub
cmp
push
adc
push
sti
sbb
mov
sub
xor
fmull
adc
mov
cltd
jno
sub
mov
and
xchg
mov
fsubrl
pop
movsb
adc
in
jl
push
lock
jg
or
mov
and
pop
insb
testl
shrb
lods
mov
xchg
scas
inc
and
sbb
nop
jo
push
out
mov
loop
mov
xchg
cli
dec
lds
xor
or
hlt
jae
sub
out
lcall
idiv
test
push
and
xchg
mov
sub
jne
cli
pop
aas
inc
push
jmp
movsl
in
dec
test
inc
pop
xor
fs
popf
enter
xchg
xchg
cmp
es
mov
mov
jno
adc
fldl
out
adc
lret
mov
push
jl
into
mov
adc
or
inc
add
mov
subl
xchg
dec
mov
rcl
mov
mov
loop
ficomps
sahf
push
mov
pop
and
pop
cmp
push
in
xlat
xor
xor
pop
enter
or
xor
ret
out
push
cmp
sbb
mov
xor
cmpb
xlat
daa
std
mov
aas
movsl
lds
sti
inc
outsb
rcr
cmp
mov
mov
stos
jbe
movsl
pop
insl
cvtps2pi
sub
mov
xchg
movsl
and
scas
pop
jmp
jg
mov
or
mov
xchg
xchg
and
js
push
not
movsb
push
lock
cmpsl
lret
stos
divb
in
dec
mov
out
cmc
sub
cmp
pop
mov
push
cmpsb
out
xchg
mov
leave
xchg
mov
jo
inc
dec
mov
sbb
scas
shl
xchg
inc
pop
mov
std
subl
push
movsb
jns
cmp
cmp
jo
inc
in
popa
stos
sub
movsb
pop
pop
movsl
fcos
mov
popa
popa
mov
int3
fstpl
xor
test
xor
jo
std
mov
ljmp
mov
stos
dec
je
inc
insb
dec
sbb
lods
or
or
xchg
in
xlat
jno
fdivrs
inc
xor
mov
mov
rorl
addr16
cmpb
mov
aam
mov
jmp
dec
fwait
aaa
loope
dec
push
jae
pop
sbb
int
lret
test
add
popf
arpl
repz
mov
divl
ret
sbb
or
aas
sub
cmpsb
dec
mov
add
or
sub
icebp
mov
mov
mov
pop
or
and
sbbb
dec
cmp
mov
stc
pusha
sbbl
mov
mov
xor
cmp
inc
loop
icebp
pop
test
dec
xchg
jnp
add
or
sahf
mov
js
inc
popf
or
add
fnstcw
loopne
push
cmp
pop
cmc
mull
stc
cmpsl
scas
and
fildl
pop
fstl
or
jbe
sbb
stos
insl
movsl
push
sbb
xchg
add
movsl
gs
arpl
sbb
jecxz
cmp
and
movsl
rcrb
jb
dec
scas
dec
mov
rclb
std
jg
jns
ljmp
jnp,pn
adc
inc
pop
jbe
xchg
mov
adc
adcb
fbld
cmpl
test
subps
lret
xorl
cmpsb
fistpl
insb
das
lock
add
cmpsl
cmp
and
in
lods
rcrb
push
addr16
mov
mov
push
jns
outsb
push
pop
pop
ds
mov
iretw
add
jp
or
fisubrs
mov
or
cmp
and
inc
inc
xor
or
fwait
xorl
xchg
add
inc
adc
add
aas
add
mov
sbb
and
mov
icebp
jl
pushf
aam
cmc
mov
pop
sub
inc
adc
cmp
gs
cmpl
xor
dec
jnp
sbb
and
lcall
xor
adc
xor
call
dec
mov
mov
pop
xor
in
pushf
pop
aad
in
xchg
fildll
lret
icebp
inc
sub
inc
push
je
mov
cmp
in
mov
rol
sbb
decl
das
imul
sub
inc
mov
fsub
repz
mov
incl
mov
pop
jae
mov
loopne
push
jbe
gs
stc
inc
ret
jle
jge
push
sbb
inc
mov
loopne
sub
dec
mov
mov
adc
jl
dec
jl
dec
mov
cs
arpl
loop
in
inc
iret
mov
add
cmp
mov
inc
test
sbb
cwtl
stc
mov
pop
add
iret
aam
pop
jae
jbe
nop
dec
inc
test
add
mov
mov
das
pop
inc
mov
sbb
xchg
jns
and
dec
dec
fsubrl
scas
mov
stos
out
iret
dec
xor
data16
outsl
jecxz
and
or
pusha
sbb
hlt
es
xor
es
ds
push
lret
push
pop
pop
addr16
cmp
push
leave
andb
mov
and
fistl
pop
scas
pop
aad
push
out
decb
adc
and
mov
xlat
lret
mov
cmp
mov
xchg
and
pop
xchg
add
mov
aad
sub
add
cwtl
mov
lds
std
fldl
andb
xchg
xchg
adc
pushl
push
into
xchg
leave
jnp
or
addr16
in
hlt
lcall
cmp
mov
push
cmp
push
imul
push
push
loopne
push
cmp
push
cwtl
daa
mov
int
mov
enter
lret
cmpsl
rcl
fs
pop
add
dec
fidivl
push
lcall
mov
ret
out
push
repz
fwait
pop
gs
or
mov
insb
ja
in
lret
sbb
xchg
sbb
jle
stos
dec
cwtl
js
ja
sbb
pop
out
fldl
call
xchg
in
sbb
daa
ja
mov
mull
xchg
ljmp
or
add
into
repnz
lahf
dec
xlat
mov
data16
jp
inc
roll
sbb
negb
sub
jmp
mov
or
insl
mov
xor
cs
pop
mov
out
jmp
mov
scas
imul
movsl
cs
lahf
scas
push
mov
push
pop
xchg
push
bound
xchg
in
sahf
lcall
stos
mov
mov
repnz
jge
stos
test
dec
mov
inc
mov
jb
jmp
rolb
xchg
mov
js
or
fcompl
mov
fs
leave
and
and
adc
cmpsb
clc
mov
push
push
adc
jg
stc
sti
sub
xor
fisubrl
rcll
xchg
loope
jb
pop
in
test
jo
and
sti
cld
out
xor
ljmp
jno
imul
fsubrs
les
xchg
mov
and
cmovge
out
cld
or
inc
dec
bound
testb
mov
pop
inc
mov
inc
lcall
mov
sub
clc
xchg
jb
sbb
or
sbb
lcall
and
ss
and
xchg
sarl
mov
pop
clc
inc
dec
daa
push
mov
repnz
pop
out
into
aaa
push
push
out
addr16
popa
xchg
xor
data16
out
add
ds
sbb
in
imul
sub
out
jl
stc
add
mov
mov
inc
sub
and
pop
xor
xchg
scas
pushl
pushf
ret
and
shlb
das
loop
dec
jns
cli
xchg
push
push
out
lret
mov
scas
jno
cmp
mov
xor
loop
adcb
cmp
mov
sub
stos
leave
pop
lea
xchg
pop
sub
or
in
sub
lds
adc
imul
push
inc
inc
mov
jl
out
pop
mov
push
sbb
out
fcmovnu
mov
sub
push
andb
fcoms
rorl
push
and
mov
data16
imul
lea
les
fs
or
fs
pop
xchg
push
vmovaps
jae
lods
push
in
xchg
adc
push
xchg
lods
data16
push
add
adcb
xchg
cmpsb
cmpsb
push
movsb
mov
adc
cli
loop
dec
nop
ljmp
popa
das
mov
xchg
mov
xchg
mov
sub
sbb
push
sbb
pop
or
pop
cmp
and
das
shrl
outsl
cmp
bound
adc
js
add
out
sub
je
shrb
jecxz
add
fldcw
lret
cmp
cmp
pop
push
xor
ficoms
lcall
pop
cmc
push
sub
xor
out
call
push
fstpl
xchg
sbb
scas
cmp
sahf
lret
xchg
fistpll
jg
popa
fildll
and
inc
push
pop
call
aaa
mov
shlb
xlat
jns
pop
xor
insb
arpl
push
cmp
jbe
popa
lock
rcll
mov
mov
inc
xor
stos
repnz
movsl
cmc
out
add
pushf
mov
sbb
in
movsb
xchg
add
rolb
xchg
out
jno
or
dec
cli
xlat
repz
movsl
xchg
xor
dec
mov
pop
jae
test
idivb
test
inc
mov
cmpsb
push
enter
faddl
getsec
stos
cmp
xor
push
or
inc
inc
add
ja
andb
push
subb
insl
cmc
test
cmp
cltd
test
cs
jo
pop
pushf
sub
rclb
mov
fidivrl
enter
fistpll
or
or
jbe
gs
js
rorb
aaa
cmpsb
int3
insl
into
in
dec
push
jg
in
push
inc
shl
inc
push
nopl
loop
in
mov
scas
popl
ds
inc
lret
mov
dec
xchg
xor
sahf
cmp
xlat
test
xorb
push
stos
stos
pslld
fstl
pusha
loope
stc
push
outsb
subl
push
addb
xor
xlat
call
jle
dec
out
into
pop
ss
mov
ds
fcmovnu
pop
scas
jmp
stc
test
call
fnstcw
cmp
orb
xor
cs
jecxz
je
jmp
cmc
and
and
cmp
and
jb
pop
dec
sbb
pop
ljmp
and
inc
inc
cmp
mov
sub
lods
testl
daa
out
out
jno
aam
lods
movsb
adc
sbbl
aam
je
daa
pusha
testl
cmp
cmp
icebp
push
loope
sub
add
adc
aas
mov
sahf
fadd
pop
cs
push
gs
aad
stc
lea
xchg
jmp
stos
lret
mov
adc
fidivs
jecxz
clc
and
pop
sbb
movsb
ss
jge
mov
push
out
js
mov
jmp
dec
sarb
addr16
jb
adc
arpl
ds
insl
mov
cmp
out
mov
xchg
adc
xlat
pop
lock
in
scas
add
cld
jns
and
mov
ljmp
das
ret
out
mov
inc
fsubl
testb
sbb
popa
sub
mov
cmpsb
icebp
mov
dec
lea
ljmp
out
add
dec
ja
sti
jmp
pop
insl
scas
mov
lret
lret
mov
cmp
mov
xlat
jle
mov
adc
adc
mov
repz
scas
addb
sbb
rcl
fadds
test
push
insl
popa
cmp
test
shlb
ds
xor
add
mov
sbb
fs
in
jno
cvtps2pi
gs
add
pop
dec
sbb
dec
lock
stos
fiaddl
or
mov
scas
mov
cmp
mov
movsb
xor
jecxz
ficoms
pop
popa
shll
in
mov
pop
fwait
dec
fcoms
jle
aaa
xor
lds
xor
nop
xor
std
sbb
addl
adc
add
cs
push
lret
and
xorb
mov
sbb
ret
push
pop
outsl
adcb
sub
mov
xor
imul
add
test
aam
adcl
push
sti
pop
ret
or
and
sahf
or
jnp
in
sub
sbb
inc
jmp
lds
mov
es
iret
in
or
icebp
lret
xchg
push
mov
mov
rcrb
or
ljmp
test
dec
int
shl
enter
fdiv
jne
das
pop
xor
daa
das
jnp
out
add
aam
out
jle
sub
or
ljmp
dec
xor
leave
stos
fwait
push
into
cmp
out
push
loope
insl
xor
and
out
lds
mov
mov
outsb
sub
fstl
push
add
pop
inc
in
jne
or
mov
stos
cmp
scas
sub
cmpsl
lock
negb
jae
inc
dec
push
repnz
xlat
push
sbb
xchg
lds
jno
andb
pop
add
jo
pop
mov
popf
out
rcll
lods
pop
jb
or
scas
and
sbbl
gs
stos
adc
sar
fs
jle
cmpsl
rcll
sub
call
xor
dec
sti
cld
rcll
mov
mov
pop
add
mov
subb
or
xor
mov
or
cmp
push
xor
xchg
push
bound
pop
out
lock
or
mov
add
stc
cmp
or
pushf
or
pusha
shrb
stos
or
lods
ss
aaa
je
dec
pop
aam
dec
int
add
rol
fldl
cmpsb
clc
inc
adc
cli
pop
or
inc
data16
and
movsb
sbb
mov
mov
sti
mov
mov
add
mov
jmp
cmp
nop
sub
or
xor
cmp
movsb
je
or
fwait
mov
xor
cmpsb
rol
fwait
xchg
shlb
pop
adc
enter
inc
in
popa
stc
add
rclb
mov
jne
pop
mov
aad
divb
fimull
cmpsl
and
mov
js
and
rcl
imul
loope
push
xor
and
xchg
xchg
dec
mov
pop
jnp
dec
push
lods
popa
loop
rcrb
test
and
outsb
xor
gs
outsb
lahf
rclb
pop
xor
push
mov
orb
and
lods
movsb
das
popa
sbb
inc
cld
iret
popf
loopne
pop
hlt
xor
scas
cwtl
adc
dec
loopew
rcl
jbe
sbb
jle
ds
test
add
lods
sub
mov
jge
add
inc
pop
push
sub
lea
or
enter
shrb
popa
lahf
ficomps
inc
pop
or
xchg
sub
push
js
mov
pop
jae
xchg
push
lea
sub
mov
jmp
fildl
mov
shrl
cmpsl
scas
xor
cld
push
push
std
mov
jmp
sub
bound
xchg
mov
push
mov
jmp
pop
nop
push
mov
xchg
push
enter
lahf
in
mov
aaa
loopne
push
and
test
ret
cmp
xchg
pop
fs
ss
lret
adc
out
or
cmc
imul
sbb
mov
and
mov
bound
fmuls
fidivrl
or
imul
xchg
add
sub
xchg
bound
push
loope
push
popa
test
out
hlt
xor
mov
mov
sbb
test
push
pop
add
inc
add
imul
push
jne
sub
std
repz
sbb
cmp
cs
jle
sti
push
das
mov
push
inc
jbe
mov
hlt
stc
bound
sub
pushf
cmp
lods
test
push
and
cmc
push
sahf
cli
in
aas
out
into
in
cmp
xchg
vphadddq
inc
insl
jo
fidivl
jo
or
push
icebp
and
mov
int3
adc
jnp
push
ss
sbb
data16
test
push
push
cmp
mov
popw
pop
mov
inc
sahf
xchg
or
adc
push
divl
mov
inc
insl
jb
or
stos
mov
jecxz
loop
and
in
ja
aad
push
cmpb
cmp
dec
lret
out
add
xchg
movsb
sahf
out
add
int3
mov
iret
mul
aad
jb
into
out
jns
mov
test
adc
cli
cltd
sbb
scas
ficoml
sti
imul
push
inc
cs
mov
lcall
out
inc
imul
jp
stos
sbb
test
lret
xchg
clc
xor
push
incl
dec
cmc
addr16
out
mov
mov
ss
stc
mov
xor
jmp
and
outsl
cmp
adc
xor
jecxz
jb
push
xchg
rcr
jmp
stos
lds
jns
pop
pop
add
popa
hlt
xor
lret
jle
xor
out
mov
and
int3
lret
inc
mov
xor
outsb
es
sub
mulb
lock
int3
lock
testl
inc
fcmovnu
mov
sub
jb
cmpsb
std
jle
shrb
and
lret
ficomps
and
les
and
dec
mov
mov
jns
push
cs
imul
es
sbbl
data16
ror
inc
int
jo
adc
out
sbb
insb
jl
filds
out
mov
cmp
jmp
clc
pushl
fisttps
push
dec
js
mov
dec
jge
out
ret
adc
and
jmp
sti
imul
mov
daa
or
cwtl
lret
jmp
sub
add
and
movsb
jecxz
rclb
mov
push
addl
mov
and
mov
aam
loop
rcr
and
rcll
xchg
add
clc
loope
add
mov
popf
pop
adc
in
adc
hlt
xor
or
pop
sub
out
int
add
cmp
in
shlb
mov
mov
pop
inc
mov
insb
or
ret
sbbl
addr16
test
pushf
mov
pop
arpl
xchg
xchg
xchg
xchg
mov
popf
mov
cli
mov
stos
xchg
cmp
xchg
xor
imul
xor
sub
mov
nop
sub
cmp
push
cmp
loopne
bound
xchg
mov
dec
test
stos
sbb
loop
subb
sbb
fdiv
sbb
push
ficoml
cmp
stc
and
jle
push
sti
fs
xchg
fsts
jg
in
lock
sti
adc
test
pop
xchg
ret
insl
int
lahf
aaa
xor
popf
adc
xchg
sbb
out
cmp
outsl
aam
mov
incb
cltd
js
inc
pop
lea
cli
outsb
xlat
scas
in
xchg
dec
clc
cs
push
ret
imull
int
addl
lock
xchg
rorl
pop
push
sbb
sub
push
jp
mov
aad
les
movsb
lds
jg
aad
push
jmp
lock
ret
pop
bound
idivl
mov
in
in
or
fimull
or
inc
daa
sahf
stc
repz
mov
and
sub
xchg
cmc
xor
lock
lock
inc
sbb
mov
loope
add
jecxz
push
testb
dec
pop
pop
fisttps
movsb
mov
idivb
lahf
and
jl
adc
or
xchg
mov
pop
out
in
in
xchg
pop
les
test
xchg
cmp
adc
lds
and
push
jno
add
mov
fildll
xchg
cmp
cmpsl
sbb
fbld
sbb
aam
xlat
push
popa
jmp
ret
dec
ja
mov
sub
pop
je
xchg
out
enter
call
xchg
mov
xor
sar
imul
rcl
push
stos
pop
mov
cmp
mov
sbb
ror
cld
push
or
cld
js
lea
or
lret
stos
adc
cs
adc
xchg
xchg
push
mov
pusha
stos
push
sar
aas
dec
gs
cmp
sbb
rcrl
jle
xlat
enter
loopne
sub
into
rolb
push
jecxz
cmp
in
sahf
mov
les
xor
mov
cs
movsb
jb
xchg
adc
xchg
insl
cmp
adc
aaa
add
cwtl
mov
cmc
ret
sbb
into
popa
movsb
xor
les
out
xchg
push
lods
cmp
xchg
add
pop
fwait
pop
pop
pushf
inc
jg
rol
shlb
dec
loop
sbb
pop
push
movsb
add
cmp
sub
or
jg
pusha
mov
push
pushf
popf
dec
mov
mov
cmp
push
mov
push
subl
movsl
and
gs
push
sub
int
cmpsb
fcmove
cs
sbb
mov
push
jecxz
cmp
roll
scas
out
loopne
std
lret
aad
sub
fsubrp
ljmp
test
fnstcw
xchg
sub
add
test
cmp
mov
icebp
ja
out
js
adc
sbb
test
div
in
inc
xchg
push
or
mov
iret
mov
xlat
hlt
stc
xchg
and
mov
pop
jne
sub
inc
adc
inc
dec
cltd
stc
or
and
cmp
inc
in
movsl
fucomip
inc
or
and
pop
je
push
jne
mov
mov
sbb
xor
mov
xor
mov
inc
in
or
and
sbb
xchg
sub
aam
stos
std
jl
imul
xchg
xchg
gs
pop
pushf
inc
adc
jge
scas
add
out
dec
jg
xchg
inc
sbb
mov
lret
push
mov
arpl
ljmp
dec
push
int
lods
mov
pop
cmpb
push
popf
dec
repnz
orl
sub
fld
add
mov
loop
inc
pushw
outsl
add
sbb
push
inc
hlt
or
dec
mov
push
rcrl
les
es
mov
arpl
add
jae
fsub
adc
adc
std
inc
jge
pop
jne
int3
repz
fldenv
cmpb
sub
int
popl
imul
adc
mov
xchg
pushl
or
aad
insl
mov
add
xchg
lcall
lods
push
cmpsl
cwtl
mov
and
jo
addl
cld
inc
in
add
cmp
or
jmp
out
dec
hlt
xchg
jno
sahf
and
pop
inc
push
lods
repz
daa
pop
lods
cmpb
mov
xchg
mov
shll
sbb
push
push
loope
xor
fwait
mov
sub
addr16
or
rorl
sub
arpl
ret
mov
inc
daa
fwait
or
xor
sahf
jmp
push
xor
das
or
cli
jecxz
pop
sbbb
xchg
out
fmul
movsb
pusha
mov
dec
subb
push
es
lea
xchg
es
inc
sbb
jns
adc
push
out
hlt
add
jns
xor
outsl
incl
iret
cmp
and
mov
sbb
ljmp
add
xchg
dec
xchg
loopne
cmp
cmp
cmp
lds
cli
sbb
mov
mov
xchg
data16
mov
lods
stos
and
jp
xchg
aad
cs
imul
icebp
jne
and
adc
push
lea
hlt
mov
inc
sbb
jmp
out
add
ds
cmp
pop
xchg
xchg
mov
lods
in
xlat
or
mov
cmc
push
hlt
mov
loopne
rcrl
test
sub
jns
dec
xchg
aam
xchg
int3
dec
mov
xchg
jmp
lods
mov
in
add
push
adc
fdivs
xor
add
fists
lods
repz
adcb
jmp
negb
sti
xchg
lods
mov
ret
sbb
push
sbb
movsl
cwtl
add
push
adc
sub
daa
mov
cld
add
shll
sbb
movsb
cli
push
ja
out
test
mov
stos
or
sbb
movsl
pop
insb
inc
or
jge
fstpt
or
mov
sub
xchg
xor
mov
fisttpll
mov
fcompl
sbb
mov
mov
addr16
push
jbe
jl
loope
stos
pop
inc
sub
cwtl
pusha
and
add
inc
jbe
addr16
pop
adc
js
sub
sahf
fnstenv
es
sub
rorb
mov
pop
sub
je
repz
lret
scas
int
lret
push
cmp
pop
mov
ss
add
sbb
pop
bound
fcomi
jno
push
ljmp
jbe
jle
jnp
mov
rol
into
fisubrl
xchg
sahf
popf
sbb
nop
out
idivb
jg
inc
mov
pushf
pushf
sub
mulb
ja
mov
inc
in
hlt
jbe
add
lret
out
ja
cmp
enter
fstp
std
mov
aas
xor
js
daa
dec
test
out
stos
lret
filds
dec
xor
dec
or
es
mov
fs
icebp
outsl
inc
and
ret
mov
into
adc
pop
adc
sbb
movsl
push
mov
outsb
addr16
or
loopne
lahf
dec
mov
sub
mov
push
inc
pop
xor
jecxz
and
dec
orb
inc
leave
cmpsl
nop
mov
fisttpll
cmp
les
scas
push
or
rolb
shrl
inc
xor
push
jl
jmp
mov
stc
jle
add
push
ret
mov
stc
ja
repnz
aaa
adc
mov
jg
clc
int
dec
cmp
mov
stos
push
mov
test
jae
testb
insl
mov
fisubs
test
rol
fidivrs
push
mov
test
movsb
rorl
mov
int3
dec
push
js
mov
cmp
xchg
sbb
sbb
sbbl
jecxz
or
mov
xor
jb
out
or
and
mov
shl
pop
pop
mov
flds
inc
rcrl
pop
jg
mov
mov
pop
imul
and
ljmp
xchg
into
std
int
push
je
dec
adc
push
lahf
repz
inc
int
outsl
test
mov
pop
loope
dec
ds
int3
push
in
xchg
jno
test
faddl
pop
pop
mov
shr
ja
cmp
lret
mov
int
pop
xchg
add
pop
test
and
push
and
loopne
aas
add
test
sbb
ret
data16
loopne,pt
nop
icebp
add
mov
scas
loope
jne
lea
sahf
les
pop
fneni(8087
mov
mov
sub
mov
mov
pop
add
mov
pop
or
notl
lahf
mov
cmc
and
dec
push
push
movsl
pop
je
mov
ret
fisubrl
stc
mov
xchg
test
outsl
jmp
imul
sub
adc
and
jl
movsb
mov
mov
lock
inc
push
mov
sbb
xor
mov
outsl
aaa
mov
stos
adc
leave
outsb
xor
scas
sub
and
jnp
xchg
inc
pop
mov
nop
jg
jb
insl
mov
shll
fcmovb
orb
dec
outsb
cltd
imul
sbb
mov
pop
jge
xor
call
xor
in
cwtl
jl
aam
pop
sub
sub
mov
dec
push
test
pusha
xor
push
sbb
add
sub
imulb
ljmp
cmc
scas
les
testb
les
call
pop
fwait
inc
jb
inc
stos
rolb
add
adc
xchg
lret
mov
jecxz
in
xchg
daa
xor
daa
jb
clc
pop
add
stos
sbb
jle
jno
jmp
pop
dec
jg
mov
movsb
sub
gs
push
adc
dec
fildl
in
shll
shll
lods
sbb
inc
fninit
imulb
jl
mov
push
out
dec
or
inc
jl
and
sub
push
call
xchg
push
adc
mov
inc
pop
sbb
sbb
or
sub
push
push
in
mov
dec
pop
lds
add
or
adc
fsubl
mov
add
cmp
repnz
in
fcoml
iret
out
outsl
jle
lret
mov
adc
stc
je
aaa
rcr
cmp
mov
test
jne
divl
push
add
andb
ja
cmp
sbb
nop
mov
fadds
cmpsb
or
je
push
fwait
dec
sub
xor
xchg
push
mov
adcl
add
mov
aad
mov
repz
mov
pushf
mov
inc
adc
xor
into
lea
jmp
lahf
pushf
rcll
fsubl
xchg
or
cld
addl
test
out
inc
test
fs
mov
mov
add
stos
test
sti
setl
cld
in
and
push
out
and
repnz
xchg
jb
js
cltd
lahf
lret
xor
xchg
test
sbbl
adc
add
sbb
repz
das
dec
mov
aas
sbb
inc
mov
jecxz
jge
nop
mov
push
aad
dec
mov
sub
imul
cwtl
popf
mov
data16
sbb
add
data16
pop
aam
xchg
and
fldenv
push
lret
cli
insl
push
movsl
test
jb
pusha
std
dec
sarb
sbbb
shlb
sbb
mov
movsb
lret
fcoml
pop
mov
imul
int3
das
int
add
aaa
lods
pop
ljmp
les
jp
xchg
push
into
push
add
jp
push
adc
mov
cmpsl
fistpll
loopne
jmp
mov
int3
shll
mulb
icebp
js
fwait
in
lock
push
adc
aas
scas
lock
stos
adc
cmc
subl
dec
clc
fistps
imul
dec
loop
or
loopne
cmp
adc
inc
icebp
rolb
imulb
adc
jmp
or
dec
mov
mov
cmp
ss
jecxz
inc
jl
ja
jnp
or
sti
jecxz
iret
xchg
cmpl
shlb
fadd
push
js
icebp
addr16
mov
dec
lea
sbb
lret
je
dec
cmp
and
mov
or
or
cs
cmp
hlt
cmpsl
movsbl
mov
jg
cmp
insl
push
out
push
mov
and
or
daa
cmp
dec
arpl
cs
pop
mov
mov
mov
nop
xor
dec
addr16
push
dec
cltd
push
jmp
cwtl
jp
lret
jg
icebp
stos
scas
in
pop
imul
xchg
aaa
lock
ja
shll
cmc
xor
aaa
mov
inc
xlat
adc
add
cmp
loopne,pt
xor
sbb
das
cmc
add
test
jmp
add
mov
mov
inc
testl
adc
fistps
cmpsl
jns
rcr
ja
pushl
mov
loope
lods
jnp
push
push
lock
lods
push
or
xor
adc
shr
push
popf
sbb
jae
jo
mov
fisubrl
stc
sti
mov
pop
cmp
adc
or
pop
add
sub
dec
loop
adcl
mov
dec
pop
aam
out
mov
inc
imul
inc
insl
inc
pop
andb
out
std
and
mov
in
sub
in
arpl
ljmp
popf
repz
int
sarl
mov
imul
and
jno
stc
inc
mov
outsl
and
mov
fdiv
imul
test
pop
lcall
mov
loop
rcrl
outsl
cwtl
rorl
mov
loop
ret
inc
scas
rorb
jne
push
and
mov
push
cmp
inc
stos
mov
or
mov
in
xor
enter
jo
stos
cwtl
imul
mov
arpl
xchg
scas
cmp
loope
test
scas
push
lea
pop
inc
mov
cmp
push
sahf
mov
jg
add
mov
push
cmc
and
nop
mov
cmpsb
jo
adc
push
fs
xor
jbe
mov
inc
pop
mov
sbb
mov
xor
repnz
jl
cmp
mov
and
or
pop
pushf
jl
icebp
fwait
xor
fisubrs
add
adc
test
rolb
fsin
jb
or
mov
push
rcrb
jle
xchg
adc
test
scas
rcll
rorl
test
pop
aam
push
orl
out
lea
sub
loopne
out
adcl
or
pop
popf
outsb
stc
out
jne
jp
sbbb
xor
jnp
xchg
or
jbe
push
das
and
scas
idiv
mov
andl
sbb
movsl
or
sbb
nop
fdivrl
sbb
and
mov
repz
das
jne
fdiv
sub
cltd
mov
xchg
es
lods
add
iret
and
adc
dec
and
mov
sub
jno
push
and
mov
mov
xor
xor
test
fnsave
fisubl
ret
mov
jbe
call
add
iret
push
rcll
pushf
pop
jbe
mov
sub
neg
mov
in
adc
inc
push
cli
jl
xchg
enter
andl
test
push
out
in
pop
roll
push
lea
jo
inc
push
and
fadds
mov
mov
fisubrl
mov
movsb
js
ret
pop
rcll
xchg
cmpl
js
push
dec
dec
jge
mov
add
rcll
inc
loope
jp
inc
mov
xchg
inc
sbb
lcall
inc
dec
xchg
mov
imul
inc
jae
mov
push
divb
xor
test
in
adc
inc
mov
das
stc
or
xchg
mov
andl
add
scas
bndldx
and
ss
xchg
pop
subl
push
ljmp
sbb
in
or
mov
xor
test
sbb
xor
xchg
xchg
inc
add
mov
je
add
mov
mulb
imul
sbb
xorl
jge
jo
ret
jne
rcrb
pop
pop
cmpsl
int3
adc
mov
or
call
sbb
je
jl
mov
insl
scas
xchg
mov
loopne
and
inc
xor
cli
and
mov
mov
outsl
repnz
cmp
fcomp
stc
pop
dec
aas
dec
lcall
sbb
pop
rcl
mov
jp
outsl
loop
mov
sahf
add
lods
mov
mov
in
repnz
loopne
jo
pop
mov
scas
jle
sahf
pop
enter
sub
xor
cwtl
xchg
push
add
movsb
rorl
mov
cwtl
push
loop
xchg
mov
push
test
push
mull
mov
nop
fdivrs
mov
push
mov
jae
bswap
inc
pusha
adc
dec
adc
or
sub
dec
add
jge
push
loopne
arpl
or
add
fists
mov
jb
outsl
lret
mov
jnp
mov
jns
mov
xlat
icebp
lcall
and
int3
jns
mov
fsub
adc
pcmpgtd
jecxz
ficoml
push
adc
sbb
cmpsb
add
pop
test
mov
out
mov
orb
jmp
jno
stos
jl
sub
xbegin
inc
fwait
mov
or
ds
les
rcr
aas
xchg
and
aam
adc
push
cmp
push
cs
add
inc
push
mov
ja
addl
pop
lret
lret
popf
add
dec
mov
lret
xchg
scas
sbb
adc
fbld
in
jno
rclb
pusha
sub
rclb
rcrb
repnz
or
sub
xor
cld
xor
lea
in
clc
push
cli
cmp
xor
std
dec
ret
xchg
push
dec
mov
push
rcrb
andl
or
or
sub
pushf
fisubrl
cmp
add
xor
stc
mov
test
push
dec
mov
and
jno
inc
sub
sti
movsb
push
aas
daa
xor
pop
push
mov
fstpt
push
aaa
push
lcall
dec
mov
and
mov
or
jns
popa
xor
sub
popf
mov
jle
xor
addb
push
cmp
aam
or
int
insl
setae
fs
jne
pop
sub
mov
inc
push
cmp
adc
lds
pop
dec
jno
arpl
mov
negl
fisubl
cmp
jae
push
mov
jae
mov
mov
loop
std
leave
mov
cmp
arpl
or
inc
sbb
ds
das
je
ret
test
sbb
mov
imul
mov
outsb
shlb
rolb
in
inc
mov
repz
and
jmp
xchg
aad
enter
sbb
push
mov
xchg
xlat
subb
loopne
cmp
pop
cmp
nop
popf
out
fildl
testb
in
jp
and
cli
jb
push
pop
sbb
in
gs
jg
in
ss
hlt
adc
into
inc
bound
jne
test
fimull
pop
mov
xor
or
clc
das
mov
pop
cmp
lret
cwtl
mov
out
fisubrs
mull
fsubs
in
icebp
fs
mov
ret
sbb
sbb
lcall
cmpsb
jmp
scas
sbb
xor
jbe
out
outsb
arpl
in
push
inc
mov
flds
fs
outsb
lock
mov
js
insb
loopne
pop
mov
jg
and
je
aam
sub
and
ljmp
sahf
aas
or
jnp
jp
pop
mov
sub
stos
fwait
lcall
les
jmp
ret
add
adc
xor
aam
fwait
cmpsl
dec
pop
or
jle
mov
out
mov
pop
das
cmpsl
loope
leave
shll
outsb
push
dec
and
dec
adc
cmpsb
imul
imul
in
sarb
ret
push
jnp
arpl
pop
jge
and
and
mov
mov
mov
cmpb
movsl
push
xchg
jge
cmpsb
shrl
pop
outsl
push
sbb
pusha
out
hlt
subb
arpl
pop
call
mov
dec
mov
sbb
js
in
sub
loop
mov
cld
xorb
cmp
jno
ret
mov
popl
cli
jno
cwtl
mov
mov
je
imul
sub
mov
mov
sets
std
dec
pop
leave
sbb
cli
sbb
xchg
jae
mov
fdivl
movsl
xchg
add
adc
add
les
mov
mov
cmp
iret
fwait
sbb
dec
xor
fisttps
push
cld
je
sub
push
mov
pop
nop
mov
mov
jge
ja
pop
adc
jmp
push
push
fimull
sub
lea
in
or
mov
jmp
imul
inc
ret
or
fisubrl
das
sbb
cmp
movsb
into
popf
loopne
sti
out
in
lods
sahf
ret
adc
js
and
mov
sbb
jp
push
lods
call
sub
lods
dec
xchg
jo
cltd
movl
shr
in
inc
xorl
pop
or
sub
mov
jns
xchg
lds
fiadds
lds
ljmp
xchg
dec
ja
enter
fstpt
imul
scas
dec
push
mov
sbb
jno
or
filds
xchg
pop
pop
imul
jmp
in
jle
jmp
mov
test
lock
int
test
test
test
out
stos
pop
fsub
pop
mov
inc
or
js
clc
jns
lcall
int3
outsb
jno
and
cmpsb
or
mov
out
bound
and
lock
push
imul
sub
mov
pop
push
out
shlb
cmp
jecxz
fbstp
jnp
mov
sbb
pop
jnp
int3
lds
loope
test
push
shll
push
mov
cs
out
dec
cmp
bound
xorb
std
sbb
pop
jns
dec
fstp
sbb
push
jecxz
mov
mov
lcall
jl
ljmp
dec
aam
and
lock
inc
popa
dec
outsb
int3
outsl
out
push
gs
sub
xchg
cld
cli
pop
sbbl
hlt
and
or
dec
cmp
movsl
pusha
call
loopne
into
jle
and
mov
hlt
add
in
mov
rsm
mov
test
jle
sbb
sar
sub
pusha
sbb
mov
add
into
xchg
inc
fs
sub
subl
lds
or
pop
adcb
pop
popf
adc
stos
lret
fidivs
outsb
bound
jmp
je
cmp
and
pop
dec
in
cmp
insb
add
movsb
jecxz
into
fsubr
mov
sub
xor
jge
nop
pop
in
sbb
jno
add
jns
and
cmp
loop
data16
imul
mov
sbb
cltd
xlat
call
pop
sahf
xchg
adc
fnstsw
pop
jo
mov
pop
jl
fdivl
pop
cmp
mov
xorb
adc
and
in
push
mov
dec
mov
stc
mov
inc
inc
repz
shr
mov
repz
xor
mov
mov
leave
sahf
aad
push
fiaddl
pop
adc
jmp
les
pop
mov
or
divb
and
cltd
pop
xchg
xor
mov
push
repz
push
sub
outsb
pop
repz
jle
ss
imul
lock
stos
daa
or
cli
push
ljmp
popf
xchg
xchg
scas
inc
pop
sar
and
mov
movsl
jle
xchg
out
sti
pop
andb
cmpsb
ret
sub
sbb
push
sti
pop
incl
inc
inc
jbe
mov
mov
das
clc
lcall
pop
xchg
andl
cltd
stc
sub
mov
arpl
pop
and
xchg
pop
call
sti
xor
aaa
icebp
fdivrs
in
xchg
mov
mov
lret
shlb
sub
add
and
mov
imulb
in
sub
lock
pop
and
fs
ret
jne
xchg
sbb
mov
jmp
xor
pop
cli
std
insb
roll
jns
das
inc
push
mov
ja
int3
aaa
nop
test
stc
out
jns
cmp
lahf
adcl
inc
sub
leave
cmp
movsb
cs
mov
pop
outsl
ret
pop
sub
repnz
sbb
cmp
xchg
xchg
push
xlat
xchg
repnz
aad
imul
jmp
pop
or
adc
jmp
jne
push
xchg
dec
push
and
sahf
jmp
test
es
pop
inc
pop
or
mov
sub
xor
adc
xchg
dec
gs
mov
int3
sub
mov
inc
push
btc
sub
cmp
insb
and
dec
fcmove
ret
rclb
out
movl
enter
and
out
in
dec
out
sbb
out
mov
xchg
mov
lock
xlat
mov
adc
loope
add
int3
cmp
cmp
shrl
xchg
xchg
sbb
sbb
inc
push
mov
jne
sbb
nop
push
mov
xor
jecxz
mov
rcrb
mov
push
sbb
shr
sbb
sub
inc
mov
lcall
iret
cwtl
sti
call
and
push
shll
and
int
hlt
in
add
loop
clc
sahf
fprem
xor
xchg
imul
dec
ja
sti
jae,pn
ficomps
push
jmp
scas
icebp
fcoml
repz
cmp
adc
mov
jp
loope
rolb
pop
xchg
arpl
inc
movb
mov
cmp
mov
fsub
sarb
push
arpl
cmp
ffreep
cmp
cld
stos
pop
fwait
push
sub
test
jmp
pusha
mov
mov
push
ds
jnp
cmc
add
sub
call
lods
xor
inc
in
imul
hlt
push
cmpsl
jbe
inc
jns
mov
mov
lods
sub
int
pop
xorb
jle
std
pop
out
xor
adc
add
sti
and
test
rol
xchg
mov
movsl
mov
orl
jge
mov
mov
test
fcmovnu
cmp
sbb
xchg
sub
scas
arpl
xchg
lret
les
dec
fwait
in
lods
repz
fadd
stos
jmp
push
cmp
das
ljmp
nop
in
in
jmp
mov
out
jmp
dec
sbb
sub
jae
jmp
lcall
xlat
outsb
lods
sub
mov
and
cmp
jmp
jns
sub
pushf
in
pop
subb
out
das
test
sahf
pop
mov
gs
add
or
imul
pop
xor
jg
jp
cmpsb
push
dec
in
dec
sub
pop
js
mov
and
lret
fsubrs
jecxz
adc
cmpb
cmp
sbb
push
dec
pop
movsl
xor
insb
aam
into
cmpsb
add
push
mov
aam
xchg
ss
nop
dec
jmp
dec
fldenv
rcrl
cwtl
insb
sub
addr16
mov
testl
jg
sti
fmuls
cltd
jnp
pop
push
cld
mov
dec
jmp
stos
adc
daa
into
rcll
daa
sbb
sbb
jo
and
icebp
in
pop
dec
fs
fcompl
and
sub
lods
cld
push
leave
sub
jp
mov
push
or
nop
xchg
jecxz
ret
lea
push
cs
iret
mov
and
int3
movsl
test
jg
fsubl
movsb
mov
mov
cmp
pop
std
in
jg
jns
add
mov
push
sti
popf
js
mov
shll
pop
mov
daa
dec
pop
shll
scas
adc
mov
sub
aaa
xor
inc
sarb
jmp
push
sub
dec
cli
inc
fwait
sbb
pushf
or
jmp
nop
ds
sbb
imulb
lret
addr16
push
shl
push
jno
jbe
and
cmp
dec
movsl
xor
cmp
aas
in
and
shll
jp
sub
xor
inc
or
gs
or
jb
sbb
stos
jge
fstp
shrl
adc
sbb
js
sar
outsb
insl
mov
cmpsb
jno
pop
dec
xlat
pop
out
es
mov
push
xchg
xchg
push
xor
adc
sbb
jno
or
out
xor
imul
xor
jo
mov
jle
mov
mov
xor
in
xor
repnz
call
sub
scas
xor
bound
mov
mov
push
inc
sbb
packuswb
mov
pop
push
inc
mov
daa
ror
sub
loop
sti
ret
sub
push
mov
pop
sub
and
loope
cli
pop
dec
daa
xchg
push
and
or
rolb
shlb
cli
in
negl
lds
lahf
inc
clc
or
icebp
in
add
repnz
or
ljmp
or
mov
cwtl
enter
sub
mov
out
clc
add
mov
add
dec
test
mov
sbbb
push
lods
mov
xchg
imul
jge
lods
pop
popf
push
push
jbe
loop
cld
ret
sarl
sbb
fcmove
shlb
pop
enter
cli
inc
mov
jbe
and
xchg
outsl
mov
or
jle
lods
jnp
xor
in
int
lea
ror
loope
mov
shr
dec
xor
out
sbb
pop
rep
mov
cld
pop
pop
pop
imul
mov
mov
push
sahf
outsl
or
sub
pop
movl
jae
pushf
mov
hlt
aas
js
nop
cmp
jg
add
loop
push
cwtl
leave
repz
pop
xchg
push
mov
test
sub
jbe
push
fucomp
aad
xlat
mov
lea
imul
mov
adc
test
xchg
mov
shlb
lret
shl
das
shll
mov
sti
xor
pop
fs
gs
loope
sbb
xlat
iret
mov
jmp
cmp
ljmp
and
cmc
bound
mov
push
lret
mov
mov
add
add
xor
iret
outsl
and
sbb
dec
ss
sbb
pop
divb
push
mov
sub
jno
push
aaa
mov
pop
add
dec
cmp
jle
mov
ja
inc
out
push
jmp
jae
adc
outsb
andl
add
jne
push
imul
xchg
cli
jl
add
mov
push
sbb
xorl
mov
les
jmp
mov
loope
dec
sub
les
pop
dec
js
cmpsb
xor
bound
sub
sahf
sub
inc
movsb
mov
mov
sarb
inc
push
std
cmp
ss
dec
push
and
add
adc
and
jmp
ret
mov
add
leave
sbb
aaa
scas
mov
push
sbb
jnp
mov
xor
fnstcw
xchg
inc
sbb
mov
ja
xor
mov
dec
cmp
dec
in
ffreep
enter
or
es
ds
dec
arpl
int
imul
rclb
pop
inc
xor
movsl
les
sti
or
sbb
dec
pushf
sahf
mov
arpl
push
cld
outsb
jb
popa
mov
jbe
cmp
jno
stc
xchg
cwtl
dec
push
xorl
xor
or
mov
jnp
mov
scas
or
jae
out
mov
mov
dec
xlat
mov
insb
mov
dec
in
in
imul
mov
or
jne
xlat
cli
stos
xchg
inc
inc
sbb
pcmpeqw
jo
shll
lcall
jecxz
add
mov
mov
mov
test
inc
push
mov
push
inc
add
xchg
jns
push
fcmovu
divb
inc
mov
xchg
ret
lret
les
out
mov
sub
pop
mov
cmpsl
repnz
mov
subb
xorl
or
dec
adc
repz
cmpl
dec
ss
dec
push
xchg
mov
ds
xchg
jl
adc
cmpsb
or
aas
les
nop
push
mov
fnstenv
cld
cmp
out
sbb
imul
mov
out
push
mov
sub
jmp
cs
dec
inc
mov
test
add
dec
sti
shlb
and
cmp
inc
lahf
fisubl
ss
pop
mov
outsb
sbb
jb
add
or
jns
adc
push
sbb
lret
cli
int3
inc
pop
mov
add
fwait
pop
ret
call
sbb
xor
pop
mov
sub
cli
jno
loope
mov
lret
loope
jecxz
cmpsl
fwait
stos
ret
shll
and
mov
in
movsb
pop
test
mov
jno
imul
fisubrs
stc
pusha
into
mov
fstps
js
pop
or
sbbl
mov
scas
push
pop
in
sbb
jle
lahf
adc
das
cmp
mov
insl
out
add
mov
inc
rol
add
push
or
adc
sub
imull
movsl
mov
mov
sub
inc
cmpl
data16
addr16
pop
icebp
or
cli
dec
pop
sub
repz
repnz
add
inc
je
pop
jbe
mov
jbe
push
xchg
ljmp
adc
lods
mov
imul
jmp
in
inc
and
loopne
mov
jge
gs
nop
repz
dec
repz
stos
push
jle
add
mov
popf
imul
xchg
ret
sub
and
bnd
loope
fsubr
jp
adcb
loope
add
xchg
pop
push
lods
lds
xchg
andb
imul
jnp
int3
imul
movsl
dec
divb
pushf
mov
add
mov
out
lret
cld
dec
push
fimuls
sbb
cmp
and
xchg
sbb
repnz
call
daa
push
iret
push
push
pop
mov
in
and
and
sbb
sbb
jle
ss
mov
mov
jns
orl
loope
pusha
add
mov
pop
mov
int3
testl
aas
sub
cmp
pop
test
xchg
data16
mov
scas
cmp
out
push
fdivrl
test
or
orl
fsubp
lahf
test
in
nop
into
insb
xchg
xchg
adc
push
aad
jno
int
mov
pop
fcomps
daa
mov
pop
pop
ds
adc
sub
loopne
cwtl
lcall
movsb
inc
fs
test
pop
inc
sbb
roll
adc
nop
and
lea
in
jmp
shll
pusha
push
mov
mov
lcall
mov
fucom
jecxz
cli
mov
and
and
push
push
jp
aad
and
dec
pop
mov
test
jecxz
push
lahf
jmp
add
fidivrs
insb
lods
insl
cltd
es
mov
mov
lods
js
cli
dec
fsubrs
aas
pop
jo
fmuls
or
and
pop
push
xor
sahf
rep
xchg
dec
outsb
aad
push
lock
dec
imul
xor
dec
mov
pop
add
sub
sbb
xlat
andb
mov
pop
jecxz
mov
fcomi
lret
xchg
loopne
mov
and
pop
add
sahf
into
fisttps
repnz
or
out
and
fs
stc
sahf
in
fcoms
cmp
adc
loop
cmpsl
mov
outsl
mov
fmulp
adc
icebp
mov
stos
sbb
aaa
push
idivb
jge
fstpl
pop
pushf
out
add
add
xchg
pop
add
movsb
addr16
lods
call
nop
ss
push
jl
fbld
cld
mov
imul
fdivl
or
hlt
adc
hlt
push
nop
scas
sub
xchg
pop
push
clc
mov
pop
cmp
sub
leave
xchg
xor
dec
test
outsl
imul
and
gs
out
add
lcall
pusha
xlat
jno
or
push
ds
hlt
stos
and
insb
xor
mov
push
popa
push
dec
xor
cltd
std
sbb
xor
aas
rolb
jo
je
dec
or
push
popa
adc
or
sub
int
ret
add
mov
add
ja
repz
mov
inc
test
cmp
sub
repnz
adc
cwtl
mov
add
movsl
add
fmuls
in
pop
mov
arpl
xchg
dec
adc
mov
lods
cmp
leave
sub
push
inc
jnp
lods
stos
push
ja
and
inc
inc
mov
shll
out
sbb
and
cmpsb
jecxz
lcall
pop
imul
aam
addr16
pushf
into
movsl
rol
and
repnz
or
in
dec
rolb
push
add
lcall
pop
pop
fdiv
adc
jle
insb
insl
pusha
push
push
or
fwait
int3
movsb
mov
scas
push
xchg
mov
lret
adc
in
adc
dec
inc
inc
or
mov
cwtl
add
or
test
mov
mov
cmpsl
stos
add
mov
mov
cmp
inc
outsb
bound
mov
gs
pushf
push
mov
mov
insb
xchg
shrb
sbb
dec
inc
fidivrl
scas
adc
test
fcompl
or
lea
and
xchg
or
xor
notb
mov
mov
sbb
icebp
inc
shrl
and
cld
and
push
dec
mov
cmp
and
movsb
mov
push
dec
lahf
out
sti
sbb
insl
mov
mov
or
lods
or
dec
sbb
test
mov
fisubrs
push
add
sub
shrb
push
jns
fidivrs
or
cmc
xchg
xchg
aaa
and
bound
adc
loop
jae
in
jne
sbb
sti
xchg
sbb
test
pop
mov
jnp
pop
cmpsb
fcoml
adcl
lret
xor
pop
leave
fwait
push
arpl
cmp
pop
pop
xchg
imul
das
sub
in
daa
inc
les
push
xchg
jp
lods
testl
pop
lahf
mov
adc
and
mov
int3
sub
testl
push
jp
jo
xchg
mov
push
xchg
add
cmp
ja
jmp
inc
inc
push
push
sub
mov
push
mov
push
pop
out
out
mov
stos
ret
lods
mov
or
insb
or
sbb
jno
cmp
ja
jecxz
test
xor
and
mov
out
pop
add
sub
stos
jmp
sbb
sbb
cs
popf
lahf
jle
daa
pop
or
mov
aam
sti
hlt
ds
sub
cmpsb
pop
fcomps
sub
pushf
cmp
lds
pop
int
or
imul
xchg
lahf
dec
pushf
cli
sub
sbb
enter
mov
stc
cmpsl
or
dec
fdivrl
insb
mov
mov
mov
mov
cmpl
in
shll
mov
ljmp
pusha
xchg
or
add
gs
popa
xor
mov
jl
dec
insb
testl
pop
pop
inc
cmp
imul
outsl
movsl
lds
or
std
ja
mov
and
aad
jmp
inc
movsb
push
cmpl
mov
rolb
dec
add
add
cmp
or
sbb
adc
xor
fs
and
xchg
ffreep
jecxz
xchg
push
fbstp
dec
sbb
ror
lahf
popa
outsb
jmp
sub
ds
fwait
lods
loopne
inc
adc
jg
test
cmpsl
pop
or
push
sub
mov
mov
popf
and
push
pushf
cmpsb
in
test
push
adc
outsl
mov
jnp
jo
jle
pop
fs
dec
xchg
pop
fdivrl
mov
push
cmp
das
jo
es
call
mov
les
mov
mov
je
mov
lret
daa
pop
sbb
movsb
subb
ds
dec
cli
add
cmp
xor
cmp
cwtl
sbb
fadd
jne
test
les
cs
ret
pop
test
fwait
push
scas
xor
jo
sub
and
sub
imul
xor
mov
cmp
push
rol
testb
out
push
lods
mov
stc
jl
outsb
vpaddsb
pop
mov
or
movsb
mov
mov
movsl
iret
in
xchg
mov
mov
push
mov
push
rorb
lods
jp
js
jb
xlat
out
pop
xor
cmpsb
cmp
xchg
pop
push
jle
ljmp
pop
jle
inc
and
outsb
cmp
imul
xlat
push
adc
lea
inc
and
and
add
xchg
cmc
xorl
push
sahf
xchg
ds
sti
out
shl
inc
js
imul
fwait
cmpsb
hlt
idiv
ds
testl
or
sub
adc
in
push
aas
cmp
out
push
hlt
imul
and
subl
stos
hlt
pusha
test
mov
mov
dec
inc
add
sub
int
dec
pop
and
cmp
std
cld
sub
adc
les
pop
push
mov
rcl
fdivrp
aad
mov
int3
sub
aad
xor
cltd
jns
adc
pushf
vsqrtpd
gs
lds
insb
mov
lret
cli
je
out
imul
xchg
flds
mov
scas
cli
stos
out
pop
bound
mov
inc
fisttps
add
pop
mov
add
je
scas
incb
sub
and
lea
mov
mov
sar
int
cmpsb
jbe
mov
test
cwtl
sbb
out
xchg
rclb
mov
cmp
rcrb
mov
push
popf
pop
lods
test
stos
adc
lret
arpl
jmp
mov
cmp
in
sarb
cld
push
ljmp
push
outsl
inc
mov
bound
sbb
add
mov
stos
ret
leave
pop
or
bound
cmc
push
lock
mov
out
mov
mov
xlat
cmp
mov
jnp
js
xchg
pop
outsb
cmp
outsb
ds
lods
ficomps
sbb
enter
jne
mov
push
cmp
scas
gs
adc
lahf
dec
mov
icebp
pop
dec
dec
pop
stc
mov
sarb
cmp
lds
sti
pop
mov
sti
xor
cmp
hlt
mov
nop
les
cmpsl
arpl
insl
imul
sub
lea
imul
push
xchg
jo
pop
mov
and
mov
sarb
pop
mov
mov
push
enter
or
out
sub
rorb
mov
aam
ficomps
les
xchg
repz
les
test
sub
loop
dec
mov
shl
js
bound
cwtl
pop
add
mov
xchg
mov
cwtd
adc
adc
out
imul
sub
dec
or
lock
stos
lcall
mov
imull
hlt
inc
pop
pushf
das
cmp
rep
dec
and
outsl
dec
pop
scas
xchg
or
jns
dec
pop
mov
xchg
mov
bound
or
pop
ds
pop
or
or
dec
imul
pop
pop
xchg
pop
jns
jl
or
out
inc
xlat
xor
sub
dec
repnz
xlat
dec
push
xor
fcomps
imul
icebp
mov
fstl
movsb
xchg
or
xor
outsb
mov
pusha
pusha
shll
jno
xor
ds
ljmp
xchg
stos
insl
push
jle
gs
mov
fcoms
gs
and
cmp
sahf
push
sub
leave
incb
push
lods
rcrb
push
lcall
jnp
stc
std
ljmp
movsb
into
cmp
jecxz
cmpsb
add
scas
jns
push
jae
and
mov
out
std
les
js
shrl
mov
call
stc
sbb
call
push
gs
in
lcall
inc
push
aaa
dec
insl
mov
mov
xchg
call
or
ja
mulb
loopne,pt
push
ret
cmp
push
inc
mov
inc
push
xchg
popf
cmp
andl
add
mov
arpl
xchg
mov
pop
orb
rcrb
subl
jno
jg
cmc
outsl
pop
adcl
dec
add
aad
lods
add
cmp
lahf
fisttpl
sub
scas
mov
and
jb
and
mov
jo
stos
pop
lods
sub
cmc
insb
jno
pop
ss
dec
push
xchg
enter
xor
loop
stc
fs
pusha
mov
cwtl
lret
aam
cmp
jg
loope
mov
mov
push
mov
out
pop
cmp
in
jo
pushf
xor
in
test
pop
faddl
mov
int3
push
xchg
jmp
jbe
xlat
cmp
push
fwait
push
xchg
stc
in
push
dec
dec
in
jae
sub
or
cmp
xor
push
sbb
or
lds
or
adc
int3
dec
enter
mov
adc
movsl
dec
movb
sahf
pop
rclb
push
push
fstpt
je
aas
data16
mov
jae
sti
sub
push
pop
sbb
adc
or
lock
or
xchg
and
out
daa
xor
daa
xor
ljmp
cmpsl
test
pop
add
pushf
repnz
gs
inc
push
sub
fwait
or
adc
pop
jb
mov
insl
hlt
jo
jl
sub
pushf
mov
out
lcall
and
dec
mov
fcomps
cmp
insl
das
dec
xchg
mov
mov
dec
and
dec
pop
sub
iret
adc
adc
add
xor
into
or
dec
orb
push
bound
jp
lret
incb
mov
inc
jg
pop
ret
dec
rcrl
jp
dec
shll
dec
dec
negl
xchg
xchg
pop
add
jo
adc
push
jl
ret
iret
pop
mov
mov
pop
or
rcr
mov
mov
ljmp
iret
fdivr
sysexit
int3
inc
jecxz
sub
mov
push
mov
nop
in
popf
add
cmp
inc
jl
mov
pop
lea
cmc
mov
and
inc
or
std
xor
xchg
mov
insl
nop
insb
je
in
aaa
adc
aas
jg
mov
in
push
test
mov
dec
push
cli
shll
mov
push
fldl2t
sti
loope
shl
out
push
scas
andl
addl
enter
in
adc
insb
cs
in
loope
dec
vcvtsd2ss
imul
mov
and
dec
adc
lret
fstpt
jns
jl
mov
jecxz
inc
call
dec
mov
cmpsl
fidivl
lcall
stc
je
scas
inc
jecxz
aam
mov
repnz
adc
int
xchg
mov
push
std
jns
ret
movsl
add
jns
js
arpl
sbb
repz
inc
add
adc
jl
loop
cmp
dec
push
in
jne
rcrl
in
dec
movsb
jbe
fsubs
jbe
jecxz
sub
mov
repnz
xor
cmc
js
les
jl
out
sbb
ljmp
movsb
es
pop
xchg
test
mov
mov
shlb
mov
xchg
out
out
sar
scas
mov
outsl
leave
ds
ss
into
jmp
out
leave
rorl
dec
adc
pop
in
pusha
cmp
adc
mov
in
jmp
mov
xchg
or
bnd
in
push
fisubrs
arpl
das
mov
xchg
mov
sub
jbe
jae
lcall
notb
mov
dec
push
rclb
push
dec
adc
ja
dec
sub
je
jecxz
popa
fdivl
outsl
out
pop
add
xor
or
lret
push
inc
sarl
dec
test
data16
icebp
adc
repnz
cmpsl
test
xchg
test
add
push
dec
movsb
popa
into
cmp
jecxz
adc
ja
sti
fisubl
lahf
pop
sbb
lock
inc
inc
fcoms
pop
mov
inc
dec
push
adc
jecxz
or
and
sub
adc
dec
loop
ja
pop
popf
jb
nop
xlat
add
fadds
inc
cwtl
push
sbb
sahf
sbb
dec
sarb
and
sub
icebp
loopne
pusha
mov
jno
push
das
aad
xchg
mov
insl
xor
mov
push
jae
jp
xchg
or
cmp
push
packssdw
andb
ret
xor
cmp
mov
or
adc
dec
push
mov
nop
jl
sarb
cli
scas
inc
push
dec
flds
xchg
inc
fldcw
pop
dec
ret
cmpsb
xchg
xchg
xlat
pop
sub
mov
or
adcl
jecxz
or
adc
add
xor
add
sub
adc
iret
idivl
push
lret
add
sbbl
sbbl
xor
xchg
mov
and
jge
call
and
in
aad
sbb
inc
jg
je
push
xchg
cmpsb
cli
outsb
jp
push
pop
mov
stos
ja
mov
pop
loope
dec
pusha
push
dec
adc
jne
inc
adc
shrb
sub
push
jbe
std
movsl
xchg
rclb
rcl
xchg
adc
insb
xchg
popa
push
jg
movsb
pop
test
cmp
sbb
adc
test
ret
pop
test
lds
push
fcomip
push
fdivrl
fwait
mov
add
mov
jl
aaa
ljmp
into
in
push
and
mov
flds
test
jo
jge
xchg
pop
cmp
push
lahf
fucomp
xor
mov
xchg
add
rolb
repz
je,pn
and
mov
popa
cmp
xchg
fdivl
imul
pop
and
fldl
or
fisttpl
lcall
dec
mov
jns
pop
lcall
xor
pop
into
add
inc
push
mov
mov
and
lahf
lods
adc
scas
inc
int3
je
mov
imul
in
stos
sbb
push
cmpsl
lea
inc
and
sarb
repnz
fwait
and
mov
gs
insl
adc
mov
pop
hlt
dec
push
add
adc
mov
jle
inc
arpl
fstl
or
jge
xlat
insb
jecxz
mov
adc
cmp
fwait
dec
mov
add
cmpsb
pop
inc
sbb
stos
mov
inc
xchg
adc
outsl
lods
xchg
popa
mov
push
out
aad
sub
pop
jmp
gs
pop
pop
jo
dec
aaa
sbbb
xchg
xchg
push
xchg
bound
xlat
xor
mov
sbb
daa
out
or
sahf
or
cld
xchg
pop
push
cmp
dec
loop
test
sub
pop
dec
sti
push
xchg
ss
or
movsb
cmc
mov
and
lahf
pextrw
sub
sti
sub
nop
sub
push
mov
jmp
cmc
and
lret
mov
ret
dec
dec
jecxz
loopne
loopne
adc
or
pop
rolb
repz
add
xor
sbb
cmc
mov
fstl
loop
jae
sti
jmp
fsubr
push
in
lret
jo
inc
xchg
xchg
pop
inc
xchg
sub
push
adc
scas
stos
push
jge
mov
xlat
or
sub
mov
mov
std
push
test
rolb
sub
imul
scas
dec
mov
cmp
cmp
rolb
popf
sti
outsb
daa
lds
movsb
mov
jecxz
jno
mov
gs
out
popa
bound
out
add
cmc
shr
ret
int
mov
imul
mov
daa
xor
mov
ret
push
imul
scas
sub
sub
popf
xchg
cmpsb
xor
in
pop
das
sub
jo
outsb
mov
int
add
jg
xchg
add
xor
shll
nop
dec
add
dec
xrelease
push
mov
dec
shlb
mov
inc
pop
and
mov
adc
mov
dec
jbe
adc
inc
filds
dec
mov
push
jl
popa
inc
inc
sub
lock
dec
cltd
in
add
or
and
mov
test
and
jb
sub
iret
jl
fldl
insb
xchg
fadds
add
xor
test
mov
dec
sbb
dec
or
xlat
jecxz
or
inc
lods
arpl
mov
ja
in
shlb
cwtl
lods
movsl
adc
sub
lret
pop
inc
mov
xchg
pop
adc
mov
lock
mov
mov
inc
jb
out
es
lock
pusha
sub
xor
test
movsb
sbb
xchg
fidivs
ss
add
mov
ret
or
mov
inc
ror
sbb
xchg
xor
cmpsb
push
inc
add
lock
inc
lahf
mov
sbb
push
xor
aas
orb
test
shlb
stc
lods
mov
xchg
and
xor
movl
pop
sbb
jne
add
jp
inc
dec
cmp
mov
mov
loopne
sti
in
call
cmc
mov
jge
stos
in
sahf
aas
xchg
mov
arpl
clc
xor
add
inc
dec
push
cmp
cli
xor
push
pop
data16
pop
dec
ret
sbb
pop
pop
or
popf
or
adc
mov
ds
lock
test
test
fdivl
mov
inc
sub
int3
xchg
xchg
dec
mov
fstpl
fisubrs
in
jae
fisubs
mov
mov
xchg
cmp
cmp
aad
mov
outsl
cwtl
cmc
cmp
test
lret
pop
add
dec
mov
jge
lret
push
ret
inc
sbb
mov
mov
mov
rcll
dec
push
sarb
adc
test
cmp
or
sbb
and
and
aas
mov
push
cmpsb
cmp
cmp
xor
xorb
add
insl
push
sbb
mov
add
and
imul
imull
rorb
pushf
and
fbld
mov
outsb
mov
inc
js
and
push
mov
mov
pushf
mov
shrb
in
jne
bound
hlt
push
dec
ja
in
xchg
jg
sub
clc
test
cmpsl
mov
and
ss
jmp
xchg
cld
push
or
mov
and
mov
mov
mov
jbe
inc
and
pop
jne
push
rcrb
pop
shrl
out
sbb
push
jne
movsb
cmp
mov
jns
test
mov
jp
xchg
mov
cmc
cwtl
repz
mov
pop
and
sarb
rorb
cmp
cmp
fsts
xchg
mov
sub
sub
mov
mov
sub
pop
jg
movsl
xchg
push
sbb
mov
jmp
out
lds
add
repnz
xor
ja
dec
cli
mov
xor
je
mov
movsl
ret
jle
jnp
je
cmp
inc
or
sbb
fcmovb
aam
shlb
adc
aas
movsl
movsl
test
xor
pusha
mov
cmp
inc
adc
inc
xlat
or
push
adc
dec
mov
gs
pop
test
jmp
pop
jbe
dec
dec
nop
or
in
xor
xorl
shrl
movsl
xchg
or
cmp
bound
sti
leave
decb
sub
mov
leave
bound
pop
sbb
or
iret
pop
adc
mov
mov
and
xchg
sqrtps
es
jmp
cmc
mov
shrl
ss
jmp
xchg
xor
dec
dec
push
xor
insb
pop
xchg
stos
int3
pop
adc
mov
jo
jle
loope
jae
scas
mov
imul
test
pushf
mov
subl
aas
fimull
leave
gs
imul
jg
jmp
movsl
bound
mov
divl
and
jge
inc
cwtl
mov
push
arpl
js
sbb
adc
adc
rorb
ret
add
inc
add
fucomp
mov
lods
or
cld
xchg
mov
cmp
pop
iret
xchg
ds
adc
cld
test
loope
lock
lds
call
aam
or
orl
test
cmc
lret
xchg
pop
lods
sti
pop
mov
dec
aaa
scas
mov
pushf
repnz
test
push
jnp
mov
mov
xchg
negb
shr
add
mov
sbb
mov
sti
mov
jae
xor
or
xor
ret
cmp
jns
mov
pusha
dec
xchg
lahf
pop
sub
mov
push
mov
sbb
fiadds
out
adc
movb
js
add
mov
push
push
cmp
movsl
fldlg2
jb
push
cld
daa
mov
jb
push
test
xchg
mov
outsb
jb
pop
mov
inc
jnp
xchg
std
adc
sub
cmpsl
in
clc
out
push
add
xchg
movsl
and
lahf
bound
popa
mov
sbb
std
aam
enter
lcall
fs
pop
mov
push
and
xchg
mov
into
into
xchg
test
popa
xor
and
mov
sahf
and
sahf
sub
mov
xor
push
icebp
add
das
jecxz
in
cmpsl
fdivs
jne
sub
sbb
dec
jno
into
repz
scas
inc
minps
pusha
call
ljmpw
mov
and
and
std
sub
mov
mov
sub
pusha
push
mov
xor
add
or
imulb
mov
adc
xorb
fwait
mov
xchg
mov
fmuls
inc
pusha
sub
loope
lock
jle
add
js
test
dec
inc
fwait
imul
lock
xor
mov
ljmp
and
jb
xchg
sbb
inc
add
push
mov
push
cmp
call
cmc
push
mov
mov
mov
pop
xchg
xchg
push
jmp
push
mov
shll
ret
mov
mov
aaa
push
mov
bound
es
fidivs
inc
sub
cmp
jecxz
inc
xor
data16
ss
xchg
in
sub
jecxz
xchg
lcall
fdivl
sbb
mov
pop
pop
nop
stos
push
ljmp
dec
and
xchg
mov
fwait
mov
das
push
dec
jmp
xchg
xor
push
add
cmp
rcll
xor
push
cbtw
push
fldcw
mov
push
sub
mov
xchg
xor
shl
mov
aad
inc
ret
sbb
outsb
fists
es
incl
cmp
sub
mov
dec
hlt
inc
cltd
xchg
or
xorl
dec
outsl
mov
cmp
sub
fisubl
and
push
push
stos
or
push
push
hlt
fimuls
in
xlat
or
je
mov
popf
cmpsb
xor
cld
push
push
aas
and
mov
ret
xchg
sbb
sbb
push
dec
pop
xor
xchg
sahf
jae
mov
stc
aad
leave
xor
push
mov
imul
scas
push
dec
or
pop
jl
inc
sub
mov
cmpsb
fs
xchg
ds
scas
loopne
jl
insb
push
flds
jg
ja
push
popa
sti
add
inc
push
pop
push
add
cmc
in
pop
mov
inc
insl
or
pop
sar
jo
in
mov
cltd
xor
lret
insb
loopne
xchg
scas
cmp
test
imul
js
jg
add
dec
addb
arpl
dec
mov
mov
in
sti
inc
push
or
mov
mov
mov
push
mov
fcomps
cmp
push
dec
icebp
ljmp
ficompl
ja
loope
sti
inc
repz
enter
setg
xchg
mov
cld
pop
lcall
loopne
dec
lods
jno
rorl
and
rcrb
cmc
xchg
xor
pop
adc
add
stos
lea
stos
sbb
adc
sbb
dec
jmp
mov
add
or
or
dec
pushf
add
mov
xchg
incl
dec
fstpl
cmpsb
push
jb
dec
data16
mov
test
push
andb
jbe
je
inc
pusha
mov
mov
popf
cmpsl
lock
jmp
outsl
fcoms
adc
mov
sub
push
xchg
imul
xchg
ret
pop
and
xchg
adc
fldenv
or
sbb
mov
push
out
cmc
ljmp
or
pop
pop
gs
icebp
add
and
add
repz
pop
xchg
data16
push
pop
sbb
add
jmp
mov
cmp
pop
push
push
pop
or
fdiv
ficoms
pushf
mov
ss
dec
sub
adc
cs
jmp
mov
lock
push
dec
imulb
xlat
mov
in
mov
or
fwait
jnp
ss
lret
mov
sbb
push
cs
jge
sub
jno
ds
aas
cmp
jo
stc
dec
add
daa
inc
pop
cmp
jmp
popf
cmp
in
mov
xlat
les
outsb
rorb
out
jb
fnstcw
pusha
adc
sub
mov
movsl
es
mov
dec
shlb
clc
mov
dec
cmp
push
xchg
or
pop
push
push
ret
nop
xor
scas
sbb
pushf
sbb
and
stc
inc
icebp
mov
insl
insb
cmc
mov
lahf
nop
xor
enter
insb
ds
and
cmp
mov
add
pop
jp
push
mov
xchg
mov
xlat
sar
aam
rcr
sub
and
sbb
mov
ss
sub
or
xorb
or
cmpsb
push
jo
std
xor
mov
iret
sahf
ja
arpl
les
hlt
std
sub
repnz
jae
mov
addl
data16
xchg
cmpsl
inc
mov
xchg
pop
pushl
sbb
push
dec
jo
jne
add
cwtl
dec
inc
int3
xchg
mov
nop
insl
gs
pop
arpl
int
jp
push
push
xchg
iret
xor
mov
sub
xchg
enter
test
call
jge
jbe
lock
cli
jmp
stos
xchg
shll
pushf
loope
and
test
into
jae
mov
jle
arpl
dec
ret
xchg
push
fldt
sbb
jnp
mov
jnp
cli
xchg
push
int3
data16
stc
mov
fdivrs
xchg
and
cmpsl
xchg
cmp
pop
push
mov
mov
adc
jb
and
icebp
push
lods
mov
mov
push
dec
inc
ja
add
xchg
and
mov
or
fiadds
push
divb
loope
aaa
ret
or
sbb
push
hlt
xchg
loop
gs
pop
dec
add
iret
and
push
sub
sbb
dec
repnz
arpl
mov
fisttpll
pop
mov
sahf
pusha
jmp
aas
jno
jp
push
addb
fists
loope
mov
cmc
jecxz
int
nop
cmp
das
add
jg
mov
mov
add
push
sbb
stos
xor
jno
push
out
lcall
cmp
lret
dec
sub
fcomip
push
repnz
jo
pop
lcall
adc
rcrb
adc
cmp
push
dec
fwait
vmread
subl
and
loop
cmpsb
jno
push
lret
mov
mov
xor
xor
cli
ficomps
adc
adc
lods
mov
es
mov
push
jb
in
adc
lods
jecxz
std
ds
jae
jae
pushf
les
jae
or
insl
or
dec
leave
xchg
jg
jl
bound
ds
sub
aam
leave
divl
xchg
fisttpl
add
aaa
cmc
inc
aam
lods
push
xorl
sbb
inc
push
out
push
fwait
mov
jo
scas
movb
sub
stos
data16
or
ret
jg
push
push
jno
aaa
pushf
cmp
addr16
mov
pop
cmpsl
and
pop
sub
stos
mov
testb
xchg
push
xchg
mov
xchg
and
mov
mulb
adc
in
jno
shr
xor
cltd
mov
lea
les
xchg
add
sub
pop
rclb
stc
scas
mov
dec
xchg
shlb
lret
xor
jno
in
loop
divb
cltd
push
fistpll
into
clc
xchg
jnp
roll
sub
std
mov
jnp
gs
cltd
shl
lea
pushf
data16
add
inc
sub
dec
pop
fnstcw
and
xchg
pop
mov
mov
dec
cmp
jno
pop
test
in
mov
push
in
pop
dec
or
std
je
add
rol
leave
mov
int3
xor
imul
push
popa
sti
push
inc
cmp
jg
push
cmp
mov
in
lcall
clc
loope
cmpsb
insb
or
test
in
jns
pop
xchg
scas
mov
iret
pusha
in
jne
int
pop
jge
pop
mov
call
dec
js
push
fbld
div
xorl
mov
std
jle
inc
rcr
mov
nop
std
and
int3
mov
ret
roll
fdivrs
mov
leave
and
lret
sarl
push
cld
into
je
xor
sbb
rcrb
sbb
adc
cmp
vpminuw
push
xor
push
push
or
in
xchg
mov
jbe
dec
in
lods
xchg
mov
sbb
test
out
fstps
mov
push
xor
push
ss
es
lahf
les
hlt
rol
insb
pop
rcrb
mov
jne
sti
xor
push
push
aad
pop
and
pop
sbb
pop
gs
andb
subps
mov
xor
sbb
xchg
mov
jae
adc
movsl
call
lds
ret
and
mov
xor
in
nop
int
push
imul
in
mov
sbb
ljmp
pop
dec
push
cmp
inc
dec
or
sub
insb
int
push
push
jns
repnz
mov
xchg
sub
mov
fsubrs
xchg
or
jns
jns
pop
pop
lods
outsb
dec
stos
xchg
das
ret
fwait
out
and
stos
sbb
inc
mov
xchg
mov
adc
fisubs
sbb
jo
aad
mov
inc
mov
fsubrl
repnz
test
inc
mov
fisubrs
nop
test
mov
pop
push
push
cmp
cs
xchg
mov
xchg
mov
or
popa
sbbl
push
and
aas
jg
cltd
push
add
mov
xchg
test
test
popf
pop
mov
in
jge
pop
jnp
subb
mov
jmp
push
cmpsl
inc
imul
mov
mov
xor
mov
and
jge
mov
lock
fwait
test
test
inc
lret
pop
push
xchg
dec
cmp
jo,pt
fwait
movsb
in
repnz
mov
sbb
addr16
sub
vmulps
fdivs
daa
cmp
loop
jb
stc
mov
jo
mov
fcmovbe
std
jne
outsl
dec
jge
xor
add
pop
and
test
push
pusha
repnz
fpatan
es
les
push
popf
mov
mov
enter
pushf
sub
fdivrp
push
imul
xchg
xchg
aad
pop
jmp
xchg
xor
arpl
icebp
inc
fiaddl
test
stos
fnstenv
sbb
mov
jnp
jl
cmpsl
xchg
lret
mov
jo
dec
jge
in
andb
pop
out
ficomps
test
sahf
push
inc
mov
test
fnstenv
xor
int3
inc
jp
dec
or
or
std
adcb
or
incl
stos
fdivs
inc
jge
mov
popa
jge
fmul
out
jecxz
pop
sub
mov
rcr
adc
fldl
xchg
insl
mov
fidivs
jle
jnp
adc
pusha
cmp
xchg
bound
jecxz
fildl
mov
adc
xchg
jmp
push
push
jns
lret
cs
sbb
ret
movsl
flds
sbb
sub
or
add
imul
mov
sbb
pop
sbb
nop
fwait
cs
jne
dec
or
rcr
xor
fdiv
repz
dec
rolb
stc
subl
ljmp
inc
and
cwtl
jns
or
inc
sub
lcall
decb
fbld
cwtl
add
repz
pushl
add
divl
and
enter
mov
pop
push
mov
stc
leave
cmp
fisttps
loopne
invd
pop
bound
xor
mov
cmc
mov
js
mov
xchg
and
imul
stos
pop
jmp
push
enter
jnp
insl
call
cmpsb
mov
mov
stos
shll
hlt
es
popf
sub
cmp
push
fs
mov
imul
jle
dec
repz
sar
jnp
push
rclb
mov
lods
lods
mov
dec
ja
enter
xor
fsubs
mov
mov
dec
cmp
movsb
mov
movsl
xor
inc
xor
outsb
jbe
rcll
lret
add
outsb
cmpsl
and
push
das
sub
aas
scas
inc
mov
jno
sub
lret
test
out
cmp
pop
mov
stc
adc
stos
jle
inc
pop
fsubrs
in
inc
xchg
or
test
call
mov
je
fs
mov
stc
xchg
dec
jb
pop
xrelease
jecxz
push
and
test
adc
mov
or
push
popfw
das
push
fiaddl
repz
jle
jge
fbld
int3
adc
add
push
and
cmp
jmp
into
and
iret
jno
arpl
cmp
jo
jo
push
cmp
sti
rclb
or
cmp
push
xchg
and
pop
scas
add
xchg
or
ss
sbb
jmp
test
jb
jle
andb
inc
ds
shlb
popf
ret
and
jmp
sub
mov
pop
das
inc
enter
add
push
cmpl
scas
pop
shll
lcall
rcl
jo
rolb
stc
push
ljmp
ret
inc
enter
dec
test
cmpsl
dec
in
add
pusha
mov
adc
icebp
add
sub
add
adc
jmp
push
push
ljmp
subl
popa
lock
add
adc
fcoml
sub
mov
push
out
inc
or
lods
mov
pop
xlat
mov
mov
pop
pop
adc
and
push
imul
ret
inc
in
mov
mov
ds
xor
repnz
hlt
sub
inc
cmc
mov
cli
popf
dec
pop
mov
push
shll
insb
xor
mov
lahf
sahf
sub
or
mov
mov
xchg
fucomp
rcrl
mov
test
or
test
sub
cmpsb
stc
addr16
ret
push
sub
jmp
shr
sub
data16
mov
xchg
sahf
arpl
mov
lahf
sbb
mov
je
andb
sbb
pusha
sbb
jbe
inc
movsl
dec
in
repz
imul
rcr
shlb
lock
pop
push
jge
mov
das
inc
add
push
and
and
jecxz
data16
push
xorb
jg
dec
sbb
push
loopne
dec
pop
sti
fistpl
sub
cmp
shlb
and
test
or
pop
push
stos
aaa
mov
das
and
sbb
mov
sbb
aas
mov
and
adc
scas
and
push
and
inc
stc
sub
stos
inc
mov
cmpl
mov
or
pop
repnz
dec
or
xchg
mov
lret
paddusb
sbb
stc
int
inc
out
repnz
bound
dec
add
addl
or
shll
out
adc
iret
negb
mov
hlt
rorb
test
xchg
aas
xchg
movsl
pushf
mov
xor
in
add
xchg
aad
subl
sbb
lea
lods
lcall
jle
xor
mov
mov
nop
xchg
jmp
cwtl
movsl
cmpsl
test
sub
bound
or
dec
ss
fadd
test
sub
cmp
mov
aad
fisttpl
mov
bound
sbb
xchg
push
movsb
or
jmp
and
xchg
pop
adc
out
adc
pusha
cltd
push
and
dec
jl
and
int
outsb
cltd
dec
jne
inc
or
fldenv
shll
out
pusha
cmp
dec
aaa
loopne
aas
pop
aam
in
xor
xor
adc
sbbb
adc
jp
adc
xchg
idiv
xor
push
add
movsl
or
xor
jg
pop
mov
lods
inc
shrl
out
or
icebp
les
fildl
and
mov
inc
sub
adc
sbb
repz
cwtl
push
lahf
imul
jmp
mov
cld
pop
dec
mov
bound
mov
xor
sbb
adc
cltd
xchg
push
pop
push
fists
xor
jnp
pop
pop
add
jge
adc
int3
rcll
in
push
adc
sbb
inc
add
jle
mov
inc
pop
cmp
rcrb
rcrb
xchg
jo
aam
adc
and
inc
xor
sti
dec
mov
dec
mov
call
je
push
mov
popf
std
pop
dec
jl
nop
iret
rclb
enter
add
pushf
lods
dec
outsb
push
imul
push
or
outsl
popf
pop
mov
call
or
mov
test
imul
and
or
and
push
push
inc
pushf
or
add
jnp
out
jp
and
push
roll
fnsave
mov
hlt
sub
inc
leave
stos
sbbb
xchg
dec
pop
std
pusha
fstl
cld
push
sbb
pop
lret
and
mov
pop
lods
cmp
or
imul
dec
sbb
add
sub
loopne
mov
push
jne
cmp
ret
dec
leave
xor
scas
pop
andb
repz
and
jnp
scas
popf
sar
dec
insl
outsl
enter
mov
repz
sbb
pmaddwd
arpl
adc
rcrb
xor
add
cmpb
movsl
sahf
mov
mov
scas
xchg
dec
dec
bound
and
dec
push
notl
sbb
adc
ss
int3
add
repz
scas
shlb
popf
xchg
imul
push
xchg
add
iret
popa
push
test
xor
mov
push
xchg
cld
sbb
sbb
in
xchg
in
movsb
pusha
fisubrs
xor
add
cmp
mov
dec
pop
or
inc
sbb
stos
cli
repz
dec
inc
jb
inc
popa
aad
dec
mov
stos
mov
je
repnz
dec
push
pop
clc
sub
mov
insl
int
arpl
mov
lods
lret
fdivs
jo
adc
nop
mov
orl
push
and
scas
sbb
ja
in
insb
xlat
mov
mov
fistpl
jae
jno
push
das
fisubrs
iret
add
xor
pop
xchg
mov
jns
and
jge
lea
jno
mov
divb
aam
push
cmp
dec
lods
cmp
mov
or
rclb
notb
push
fidivrs
or
test
xor
inc
testb
push
in
push
cmpl
sub
push
loop
stos
mov
pop
jecxz
cmp
xchg
inc
or
mov
mov
lock
mov
xchg
push
jo
xor
cli
mov
push
cmpsl
fs
xchg
sbb
cs
dec
movsl
rorl
pushl
mov
lcall
rclb
shlb
jno
ficoml
lcall
lock
push
inc
inc
sub
dec
movl
xchg
mov
insb
sar
mov
mov
lcall
cmp
inc
lods
into
or
add
ret
out
xor
js
imul
cmp
mov
fistl
inc
mov
dec
mov
int3
adc
ss
cmpsb
mov
or
and
pop
mov
sub
xchg
aam
cld
int
cltd
adc
jmp
leave
push
lret
xor
mov
mov
mov
sub
sahf
push
xor
adc
jmp
mov
add
mov
popa
and
sub
add
push
outsb
add
jne
fucomi
stc
es
jnp
mov
adc
lret
lea
stos
inc
inc
popa
shr
int3
pop
inc
jne
shl
in
frndint
or
mov
fistl
cmp
shr
mov
or
in
iret
fmulp
iret
xchg
push
mov
loop
repnz
sub
scas
cwtl
test
adc
push
mov
jmp
imul
in
or
inc
push
mov
repnz
sub
cmp
idivb
cmp
jl
dec
cmp
pop
lds
je
and
cli
and
cld
jge
mov
adc
push
aam
and
scas
jmp
aaa
sub
nop
mov
xchg
xor
imul
dec
pop
out
cld
lret
test
and
adc
popf
lds
jge
in
rclb
push
jae
into
aad
ss
or
xor
or
lahf
jg
shlb
mov
xchg
scas
inc
shrb
mov
adc
dec
pop
and
pop
vsqrtps
sti
fs
insb
lret
gs
dec
ja
dec
scas
cmpsl
jo
shl
cmp
mov
sub
xlat
or
dec
lock
xchg
out
dec
lcall
in
push
cmp
and
fsubrs
mov
mov
sbb
ss
ret
pop
stos
ret
movntq
mov
pop
cmp
dec
xchg
aam
ret
push
push
dec
iret
jmp
movsl
ja
jl
data16
jne
mov
and
dec
push
mov
or
push
stos
pop
cs
jecxz
jmp
fucomip
stos
loopne
mov
repz
idivb
lods
cmp
dec
sub
adc
pop
adcb
subb
test
push
lock
ds
dec
cltd
rorb
call
pop
arpl
cld
adc
loopne
in
mov
out
in
xor
jl
popa
outsl
mov
dec
xor
mov
les
je
outsb
in
into
push
mov
jae
inc
inc
int3
dec
and
fisttpl
dec
cmp
call
cmp
icebp
add
jno
add
cmp
hlt
bound
mov
push
gs
inc
jno
popf
int
xchg
inc
jmp
in
sub
xor
test
cltd
mov
sub
cmc
fnstsw
sub
xchg
mov
sbb
push
cwtl
insl
lea
xchg
and
iret
stos
sbbb
out
jecxz
mov
cld
dec
push
arpl
or
and
into
fistps
cwtl
xor
testb
loopne
outsl
pusha
movsb
cltd
jp
outsl
hlt
jbe
xor
jge
nop
and
ficompl
movsl
bound
rcrb
aas
mov
stos
roll
add
test
adc
leave
lods
js
insl
and
pop
loope
nop
mov
sarl
inc
cmp
mov
jmp
inc
int3
push
sub
add
sbb
push
add
in
test
push
ret
daa
sbb
dec
mov
outsb
les
jmp
ret
sbb
push
pop
dec
les
push
lea
cmp
orb
or
xchg
sub
insl
fwait
enter
mov
popa
das
mov
lock
imul
int3
enter
in
insl
movsl
loopne
fisubrl
sbb
jo
mov
add
inc
xchg
pusha
jl
aad
mov
pop
test
aam
ret
mov
adc
inc
imul
shrb
les
push
fs
je
mov
fadd
pusha
xor
imull
incl
xchg
mov
sub
stos
cmpsl
pop
adc
in
into
hlt
inc
rcrl
repz
and
fisubrl
jne
push
push
int
mov
fisttpl
jp
sarb
mov
xchg
fs
shll
add
aas
xor
mov
or
cmc
sbb
clc
jns
shlb
add
xor
cli
pop
out
sti
xor
test
cld
jecxz
push
out
fsubr
adc
repnz
add
inc
sub
fcompl
cli
cmc
mov
aas
loope
test
mov
add
adc
sti
into
cmp
cs
shrb
lret
icebp
xchg
repz
pushf
shl
sarl
fisubl
mov
sub
bound
mov
bound
js
mov
jecxz
mov
sub
pop
nop
push
outsl
clc
aad
sub
ja
imul
xor
push
lods
sbb
adc
pop
mov
out
adc
fwait
adc
repnz
insb
aad
enter
mov
cmp
inc
daa
repnz
cmp
xlat
push
pop
outsb
push
push
ja
fstl
inc
mov
xor
rcll
fcmovne
mov
addr16
adc
int
pop
cld
adc
rcrl
arpl
test
push
dec
cld
or
push
out
lcall
mov
add
push
inc
push
rolb
out
cmp
js
inc
xor
mov
aas
imul
aad
fisttpll
rorb
and
icebp
mov
mov
pop
or
add
xlat
add
scas
shll
shr
ss
and
lret
pop
hlt
jge
pop
out
imul
mov
inc
and
lods
push
test
add
add
mov
in
adc
xor
push
sbb
pop
cmp
jg
mov
xchg
adc
mov
xchg
mov
movsb
adc
loop
inc
xchg
sub
loopne
pop
dec
das
jbe
sub
add
xor
push
loopew
daa
cmp
pop
inc
add
cmc
jl
xor
mov
cmpl
and
jg
dec
ficompl
mov
cmp
hlt
add
mov
arpl
icebp
mov
inc
dec
jo
cmp
imul
mov
ss
sbb
int
xor
inc
outsb
out
push
adc
and
jbe
and
jmp
mov
outsl
pop
enter
mov
cli
stos
xor
or
lods
pop
push
ds
add
std
movl
xchg
dec
and
shll
or
jne
into
jae
test
dec
les
in
xchg
cmp
jo
int3
lret
iret
cmp
mov
jb
mov
push
jle
test
cmpsl
xchg
dec
cwtl
push
insl
imull
sub
insl
int
pusha
mov
adc
divb
and
lods
mov
mov
lret
push
sub
jl
sti
out
xor
rorb
int3
xor
pop
and
jmp
stc
cwtl
mov
mov
out
mov
mov
pop
xlat
pushf
and
je
and
jnp
jns
xor
cmp
cmp
fiaddl
and
cltd
jge
outsl
mov
mov
adc
fwait
xchg
pop
fistps
out
mov
cmp
pushf
dec
cmp
dec
clc
mov
ja
xchg
and
inc
push
imul
out
loope
aaa
in
sbb
xchg
dec
test
sbb
sbb
mov
movsl
movsb
cmpl
fnsave
data16
mov
repz
push
shrl
movsl
dec
mov
outsb
lds
rolb
arpl
lock
dec
sahf
ret
and
mov
setb
and
mov
out
xchg
daa
pop
cwtl
add
sbb
les
mov
or
dec
lock
imul
mov
leave
adc
and
adc
es
adc
or
sbb
sti
xor
dec
jle
lret
int
orb
stos
or
ret
push
pop
inc
fstl
pop
in
int
xor
fbstp
add
mov
mov
cmp
xchg
loop
ficomps
loopne
mov
mov
push
push
jae
add
sub
xchg
push
shrb
shlb
test
cltd
dec
enter
jle
or
cmp
dec
iret
pop
out
xor
jle
dec
sub
cmp
mov
movsb
ds
clc
aaa
hlt
pop
jle
dec
imul
lret
mov
push
adc
js
jo
leave
int
xchg
jecxz
data16
icebp
jle
fxch
pop
add
sahf
mov
jo
dec
jp
adc
pop
insb
push
sbb
sbb
pop
mov
pop
fnstsw
add
mov
jle
cld
jnp
enter
popa
loopne
popa
xchg
or
mov
pushf
mov
sbb
bound
shl
jmp
push
adc
cmpl
fmuls
pushf
push
out
cltd
into
out
jne
push
out
sbb
outsl
scas
adc
and
ljmp
dec
mov
adc
popf
sub
pop
leave
mov
arpl
insl
scas
jo
push
jbe
sbb
negb
je
fstpl
push
insl
cmpsl
cwtl
dec
lock
dec
fldcw
cmc
dec
add
loopne
dec
dec
ss
dec
mov
dec
xchg
das
push
ret
cmp
mov
addr16
dec
push
vmaxss
sub
aam
dec
sbb
mov
inc
xchg
in
sar
ja
lea
mov
sub
or
int
inc
jl
sbb
fstl
fstl
out
enter
jl
adc
xor
imul
push
movsb
ret
xor
pushf
cmpsl
cwtl
fs
leave
jmp
outsb
dec
xor
inc
mov
loop
xchg
dec
bound
sbb
cmp
movsb
out
cs
jne
mov
jge
andl
inc
adc
lods
jp
lret
dec
xchg
aam
icebp
dec
inc
and
arpl
xchg
ss
push
xor
pushl
adc
shl
xor
mov
stos
xchg
or
lea
push
bound
enter
cmp
mov
xor
popa
out
jno
movsl
adc
shlb
inc
cmp
lret
scas
roll
inc
sbb
pop
dec
push
int
mov
fsubrl
fadds
cmp
push
scas
or
mov
lods
mov
add
mov
jns
dec
pop
adc
pushf
mov
xchg
push
das
cmp
aaa
jbe
cli
jo
stos
xchg
cli
out
or
lock
jae
xor
filds
jae
ds
or
xchg
mov
xchg
mov
fistps
xchg
pushf
decl
inc
xchg
mov
sbb
loopne
adc
and
push
ror
or
gs
aaa
or
into
xor
jmp
jns
inc
mov
mov
add
push
and
jae
add
fcompp
in
inc
add
push
cwtl
ljmp
add
je
repnz
dec
js
cmp
out
lret
cs
bound
sti
popf
rcrb
xor
in
imul
ja
adc
leave
mov
mov
xor
sub
rclb
shl
or
in
push
ret
xchg
icebp
mov
jnp
notb
pop
lods
lods
and
cmpsb
sahf
cmp
sbb
mov
pop
popa
pop
lock
ret
push
inc
test
test
sbb
aad
out
fcmovne
cld
push
subb
insb
cmpsb
mov
jnp
movl
cli
insl
inc
bound
sub
cwtl
sbbl
jecxz
hlt
mov
ljmp
imul
scas
addl
cltd
or
imul
xor
dec
pop
repz
imul
ret
jmp
ja
adc
ss
vpslld
mov
cmp
add
stos
popf
pop
xchg
int3
sub
inc
jae
sti
or
inc
call
hlt
mov
push
mov
in
jle
and
xor
push
cltd
testb
xchg
std
and
iret
enter
sbb
cmpsl
inc
int
fdivl
das
cmpsb
cmp
sarl
arpl
jecxz
ds
dec
test
fidivrs
out
push
test
or
dec
push
mov
sub
lcall
insl
in
bound
outsb
filds
xor
sbb
testb
movsl
cli
nop
inc
mov
addr16
xor
adc
mov
jb
mov
add
push
arpl
or
jae
pop
jno
out
in
mov
pop
dec
sarb
scas
xchg
sbb
push
bound
sub
mov
cmp
dec
test
push
pop
or
jecxz
lods
scas
adc
mov
lahf
jbe
int
leave
lret
ret
bound
insl
sbb
pop
loop
rcrl
sbb
push
dec
add
int3
or
push
sub
push
jno
push
stos
pop
jl
stos
in
sarl
sbb
test
std
push
push
pop
testb
aad
icebp
js
pop
push
mov
cld
pushf
test
add
adc
xor
in
adc
imul
clc
rcrb
pusha
in
push
setnp
scas
cmc
arpl
pusha
pusha
gs
or
push
ljmp
or
cmp
out
lret
sub
mov
or
idivl
into
mov
in
pop
leave
mov
cmp
stc
mov
xor
sbb
or
sbb
insl
pop
push
lds
adc
mov
les
rep
nop
mov
cmp
shlb
add
cltd
subb
les
push
test
mov
jecxz
adc
cmpb
or
sub
jo
cmp
pushf
outsb
pop
and
mov
mov
int
lcall
test
test
pop
lock
cmp
fdivs
movsb
pop
pop
fimull
int3
mov
add
es
loope
and
mov
dec
rorl
mov
int
inc
dec
inc
or
js
movsl
xchg
jne
xchg
inc
aad
popa
push
push
sbb
mov
dec
sbb
ret
iret
out
cmpsl
in
dec
xorl
and
fisubl
movb
dec
testb
adc
arpl
dec
test
xor
pop
fwait
sbb
xchg
sbb
call
xlat
jbe
inc
cmpsl
cwtl
ds
ret
imul
pop
push
out
inc
push
test
shlb
sub
pop
aam
cli
imull
iret
je
xchg
arpl
ret
mov
mov
stc
add
ds
in
mov
inc
mov
xor
add
or
xor
rolb
lods
outsl
insl
ficompl
xchg
or
push
repnz
rorl
shll
pop
pop
xchg
sub
inc
jmp
xchg
cwtl
pop
pop
insl
incb
mov
xlat
icebp
mov
jp
xchg
xchg
jle
jo
adc
jp
mov
and
dec
mov
sub
mov
out
and
jae
jae
xor
push
mov
pop
sub
push
cmp
addr16
stos
mov
or
jg
ss
xchg
jno
bswap
mov
insl
imul
xor
mov
dec
push
xchg
sbb
mov
sub
cmp
je
xor
pop
inc
add
sbb
sub
pushl
jg
mov
sbb
leave
mov
adc
sbb
mov
jge
cmp
mov
push
mov
lea
out
mov
add
ret
push
data16
sbb
in
mov
lahf
or
xchg
fcompl
stc
movd
mov
xor
xor
imul
mov
mov
mov
add
pop
mov
and
dec
ret
ficoms
leave
pop
cmp
mov
rolb
cmp
movsl
in
pushf
mov
dec
nop
insb
dec
and
jmp
dec
adc
fwait
mov
mov
or
jecxz
mov
mov
inc
cmp
int
lret
mov
and
sub
add
jns
mov
fbld
dec
sub
fbld
adc
testl
orb
dec
sub
cmp
sbb
js
cmpsl
out
mov
mov
push
movsb
imul
lock
jne
push
leave
cmp
aad
out
fisubl
push
cmpsl
cmp
mov
xchg
mov
mov
dec
aam
in
dec
std
cmp
in
stc
dec
jb
fsubl
mov
gs
xor
push
dec
ret
push
pop
adc
dec
xchg
push
sbb
push
sub
jg
loop
mov
push
mov
push
push
shrl
out
or
aad
mov
je
enter
out
and
out
pop
jne
mov
lods
and
cmpsl
cmp
push
test
adc
out
mov
aam
scas
adc
cmpsb
xchg
inc
jnp
neg
addr16
mov
enter
rorl
mov
fisttps
sbb
stos
in
in
sub
ss
bound
cs
cmpsb
jo
loop
gs
shrl
ficomps
adc
pop
pop
and
arpl
jecxz
nop
test
ljmp
sub
xchg
gs
cmp
mov
iret
mov
icebp
mov
mov
xorl
int
frstor
scas
out
jno
and
imull
push
dec
pop
cmp
popf
ja
lds
push
ds
sarl
push
call
pop
mov
fisttpll
jo
and
es
jmp
dec
scas
fiaddl
lahf
add
repz
cmp
int
push
xchg
sub
testb
mov
inc
mov
cmp
xor
sbbl
jns
lret
aad
cwtl
ret
fnstenv
out
mov
or
pushf
inc
std
mov
inc
clc
call
xchg
test
jbe
out
out
aad
ret
or
aaa
nop
mov
and
imul
lret
out
popa
lods
das
or
mov
mov
data16
mov
loope
mov
xchg
movsl
dec
fadds
jno
enter
call
mov
stos
jmp
inc
jmp
pushf
jge
popa
pop
mov
sub
nop
cli
ds
mov
and
push
addl
mov
mov
mov
mov
add
test
ja
mov
leave
cmp
mov
adc
jae
inc
xchg
mov
and
and
sub
pop
mov
cmp
sub
xchg
add
dec
jb
in
or
push
adc
mov
inc
filds
cs
mov
push
imul
fwait
cmp
repnz
push
gs
icebp
movsl
push
dec
jmp
adc
sbb
cmp
push
mov
dec
fxch
nop
fprem1
not
xchg
rcrl
inc
pop
push
aas
insl
cmp
lret
sbb
in
inc
mov
jnp
or
mov
mov
out
or
mov
sahf
pushf
push
push
add
lods
stos
loope
sahf
ja
das
adc
pusha
insl
imulb
jb
jge
pop
xor
bound
sub
push
leave
popl
loop
xor
sbb
cmp
sbb
movsl
outsl
int
test
test
xchg
jmp
push
sbb
mov
inc
jle
inc
inc
lea
push
push
dec
dec
mov
movsl
push
sbb
pusha
xor
inc
mov
mov
pushf
fdivp
mov
xor
mov
frstor
lods
cmc
mov
add
push
into
adc
add
xchg
xchg
pop
pop
jmp
fdivl
test
cld
mov
jge
aam
cmp
loopne
insb
test
jb
xchg
pop
xchg
dec
xchg
adc
xchg
pop
mov
out
ljmp
dec
push
mov
mov
sbb
xlat
mov
outsb
push
jae
out
pop
in
cli
fsts
nop
in
pop
cltd
mov
data16
xchg
test
pop
sahf
fldenv
aas
dec
cmc
dec
cmp
inc
push
jo
adc
int3
or
shrb
mov
iret
add
adc
int3
aaa
and
imul
jno
push
sbb
mov
mov
adc
mov
mov
outsb
mov
jne
test
xchg
jmp
jno
adcb
movsb
int3
sub
call
push
in
loope
stc
mov
jmp
push
jno
mov
adc
pop
dec
or
bndstx
sahf
adc
sbb
jmp
fldcw
ljmp
leave
outsl
push
inc
push
ss
and
inc
add
mov
cwtl
ljmp
movsb
pop
sub
inc
lret
out
hlt
stc
cwtl
cmp
fsubp
sbb
dec
mov
sahf
xor
shr
push
fdivl
inc
cmp
cmpsl
fimuls
in
mov
mov
cmp
dec
subb
jnp
shlb
push
sub
dec
xor
xchg
lea
and
xchg
stc
mov
fsub
xchg
xabort
dec
sbb
fwait
sub
jmp
sub
mov
addl
cmp
push
lods
loop
lds
dec
mov
int
mov
add
sbb
ljmp
or
mov
lea
cmp
adc
jmp
std
push
adc
dec
mov
dec
mov
ljmp
xchg
dec
enter
dec
lret
sti
mov
push
rorb
mov
les
lret
ss
mov
mov
inc
leave
jo
xchg
adc
stos
lds
jg
lret
mov
push
push
pop
mov
adc
dec
out
addl
jb
push
lahf
in
and
in
inc
fbld
mov
jmp
pop
pop
faddl
pop
les
aam
repnz
repnz
mov
jnp
add
sbb
fwait
lock
out
mov
lods
push
movsl
dec
add
sbb
imul
imull
xor
test
mov
test
cmpl
cmc
cmp
pop
cwtl
mov
sbb
pop
movsl
mov
sub
xchg
es
jns
push
popf
fistpll
sub
xchg
mov
aas
into
lods
jmp
mov
sbb
adc
into
movl
out
popa
xchg
lahf
insb
in
lods
ds
pushf
mov
jne
data16
call
mov
test
into
lret
rcr
test
cmpsl
shll
dec
push
ficomps
mov
sbb
ret
mov
mov
inc
or
dec
cmc
sub
sbb
outsl
ret
xchg
movsl
gs
adc
stos
adc
leave
and
imul
aaa
cmpsb
xor
test
cmp
pop
repz
scas
add
mov
lret
xchg
sub
enter
jbe
and
and
scas
lods
jb
add
scas
push
jmp
in
pop
mov
jge
sub
pop
add
lea
imul
inc
pusha
fmul
int
dec
scas
pop
push
sahf
or
pop
xchg
and
mov
sarb
gs
testl
in
clc
add
notl
add
je
xor
aad
and
inc
inc
lods
int
pusha
and
sub
pop
xor
out
bound
mov
mov
imul
mov
cld
mov
or
mov
jg
adc
sbb
lds
repnz
pop
cwtl
push
jg
cmp
test
call
test
idivb
sbb
aam
imul
xchg
scas
xlat
push
and
sub
in
mov
test
rcll
out
jmp
loope
fimull
inc
sbb
dec
push
lret
mov
out
add
popf
dec
mov
sub
test
sti
jb
dec
imul
js
xchg
or
jecxz
mov
rorb
std
shrl
fsubrp
popa
cmpsl
int3
push
mov
mov
mov
jle
hlt
xor
mov
test
lock
mov
jae
push
rcrl
mov
rol
repz
cltd
add
adc
inc
aam
pusha
mov
and
mov
popf
push
add
xor
cmp
and
andl
and
ja
jp
movsl
xchg
enter
dec
cmp
push
rorl
pop
xchg
lods
bound
jo
add
fisttpl
sbb
insb
test
outsl
out
mov
jmp
ret
stos
pop
outsl
xchg
ret
rcrl
bound
loop
inc
cmp
pusha
imul
sub
dec
in
xchg
mov
jne
jg
mov
mov
inc
lds
xor
jl
xchg
xchg
push
movsb
inc
int
aam
rolb
xchg
into
jnp
sbb
adc
or
lret
shlb
add
cli
cmc
cs
fldt
pop
pop
push
adcl
adcb
repnz
clc
xchg
cmpsb
fisttpll
jl
mov
xchg
jmp
mov
fisttpll
jne
and
loop
mov
into
or
lods
cmp
or
iret
bound
les
cmc
lock
lret
nop
faddl
popf
int
hlt
data16
xor
jb
or
lcall
adc
push
rol
aas
call
mov
jbe
test
or
scas
fidivrl
and
sbbl
adc
push
lods
mov
add
stc
in
lret
sub
push
xor
in
adc
xchg
je
cld
mov
flds
mov
cltd
cmpsb
lcall
mov
xchg
adc
xchg
pusha
mov
xchg
adc
test
nop
jne
xor
push
rcrb
cmp
lcall
jnp
daa
dec
cld
xor
loopne
jno
ret
and
push
in
imul
mov
adc
push
rol
ss
and
repnz
jb
lret
fldl
pop
fcomip
inc
lret
iret
adc
mov
inc
hlt
aad
jbe
ds
push
jl
sbb
mov
cmc
cmpsb
fnstsw
mov
jp
insb
push
jnp
pop
ja
dec
cmp
jge
scas
fucomip
push
bound
jecxz
fcmovbe
and
inc
mov
mov
lcall
or
or
lods
pop
inc
jb
imulb
lcall
sub
mov
popa
in
jp
shrb
xchg
repz
cwtl
test
xlat
and
das
loopne
sbb
test
mov
mov
out
mov
push
or
jbe
loop
test
jnp
push
mov
push
test
mov
test
pop
je
pop
inc
mov
push
mov
lcall
sub
or
cwtl
ret
rcl
test
divl
and
dec
cmp
mov
xor
sbb
aaa
jo
sub
and
adc
call
js
std
daa
jns
inc
push
ja
outsb
adcb
push
aas
stos
jp
jnp
sbb
adc
xchg
mov
out
mov
fdivrl
jmp
orb
sbb
fnstsw
mov
pop
scas
xor
inc
mov
fldt
test
ds
pop
cmp
das
sub
es
xor
iret
dec
jecxz
ljmp
xchg
xor
sub
outsb
ds
mov
cltd
sarl
push
lahf
xchg
ljmp
lods
js
dec
add
lret
mov
xchg
jg
loopne
je
insl
loopne
jmp
insl
mov
les
jg
adc
sub
dec
jmp
push
les
je
adc
sti
repz
dec
fwait
or
gs
inc
cmpb
lahf
sbbl
imul
and
cmpb
dec
pop
leave
call
shl
sbb
dec
pop
sub
jge
push
pop
xchg
test
inc
adc
test
lds
dec
into
cmp
sbb
sarl
lret
lret
ret
in
xchg
sub
mov
and
or
int3
xor
dec
shll
outsl
pop
and
mov
out
or
inc
dec
dec
test
lea
out
pop
sub
test
aas
jnp
out
push
cmp
jg
je
sahf
outsb
mov
sub
incb
push
mov
push
ds
dec
lods
jmp
push
testl
testb
push
jnp
ficoms
sbb
jae
pop
insl
or
gs
cld
add
push
or
jmp
inc
mov
push
adc
in
xor
test
xlat
mov
mov
in
and
mov
cmp
rorb
daa
aad
bound
stos
pop
negl
jl
xchg
mov
mov
mov
xchg
mov
aam
enter
pop
push
faddp
push
pop
cwtl
xchg
dec
push
adc
mulb
inc
mov
jle
xor
in
push
scas
mov
dec
sti
sub
dec
xchg
lcall
jns
in
fildll
xchg
add
scas
fincstp
cltd
or
xor
scas
lcall
pop
jns
mov
cltd
push
dec
jo
cmp
mov
pop
mov
xchg
addl
inc
inc
gs
pop
pop
movsb
fwait
outsb
or
nop
fs
inc
cwtl
shl
jle
in
fdivs
repz
leave
sub
and
mov
jmp
push
pushf
nop
lret
lret
aad
aaa
les
out
push
push
cmp
outsb
cmp
mov
sbb
mov
mov
movsb
sub
adc
push
idivb
xchg
push
xor
addb
shrb
loopne
into
test
lods
mov
imul
sub
cli
bound
js
mov
pop
or
push
cwtl
sub
pop
xchg
in
mov
insl
ss
mov
gs
jae
adcl
sahf
jp
jge
pop
icebp
scas
lock
ja
pop
es
push
jmp
and
jmp
push
push
dec
gs
out
add
sbb
adc
mov
xor
sub
mov
mov
subl
lahf
jmp
mov
push
sub
jnp
test
aas
jno
and
xchg
scas
dec
rcrb
mov
cmp
xchg
adc
push
repnz
mov
mov
inc
xor
std
adc
dec
into
xlat
call
lock
sub
mov
sbb
es
xchg
sahf
stc
jp
out
sub
pop
lock
in
dec
leave
sub
fdivrl
xor
cmpsl
mov
inc
lea
cmp
and
test
dec
cmp
mov
aam
loopne
repnz
gs
mov
hlt
push
sub
fmuls
ljmp
xchg
cli
cmp
out
or
pop
xchg
jmp
outsl
mov
lock
jge
scas
out
adc
fsubp
es
push
mov
out
inc
mov
inc
cmp
adc
push
xor
sub
test
ja
sub
sbb
push
sub
xor
xchg
fsts
in
sbb
sbb
xorb
sbb
push
xchg
les
enter
lea
ja
or
sti
aam
xchg
cld
test
mov
fldl
jle
or
add
test
inc
mov
ljmp
dec
movsb
in
imulb
push
inc
dec
push
in
repnz
out
jge
mov
jecxz
testb
cmp
outsl
pop
sub
shlb
shll
xchg
push
inc
aas
sti
lock
dec
ret
mov
add
test
mov
clc
out
pop
leave
sbb
add
lea
xchg
arpl
xor
and
or
dec
xchg
leave
aad
int3
cmpsb
mov
sub
mov
push
sahf
dec
pop
or
das
cmc
dec
test
pop
jl
cmp
push
mov
add
jno
ljmp
lret
hlt
xchg
jp
repz
scas
stos
cmp
xor
fsubrs
addr16
sbb
pop
int3
mov
arpl
sub
insl
mov
or
icebp
inc
ret
pop
je
push
or
insb
faddp
jns
adc
movsb
loope
daa
mov
xor
push
xchg
sub
sbb
clc
addr16
cmp
dec
dec
push
mov
adc
adc
add
std
add
xchg
pop
and
fcoml
sub
jb
push
push
mov
cmp
jo
insl
push
jb
jl
sysenter
xor
inc
push
addr16
mov
loop
ficomps
hlt
mov
mov
pop
ret
fidivs
inc
xchg
out
adc
xchg
out
mov
xchg
imul
sbb
addr16
addb
lods
cli
sti
jnp
push
sbb
dec
or
jl
pushf
add
jmp
outsl
outsl
inc
jbe
les
push
cmp
out
or
into
testl
repz
add
in
jo
sahf
push
fnsave
cmpxchg
mov
cmc
cmc
call
inc
movsb
aad
repz
les
jle
fnstsw
out
or
in
push
inc
xorl
mov
inc
icebp
mov
cwtl
jae
in
out
ja
xchg
add
das
icebp
xchg
call
dec
mov
cmpsl
ret
xlat
fidivrs
ror
insl
and
push
mov
mov
or
sahf
scas
or
mov
mov
dec
es
jbe
mov
ret
fimull
orl
pop
sbb
pop
xor
in
popf
call
sub
cmp
pop
outsb
dec
loope
lcall
test
fmuls
dec
cwtl
sbb
sbb
xchg
pop
stos
xchg
inc
pop
sbb
aas
cmp
stc
negb
pop
rcll
push
sub
push
push
sub
insb
xor
js
cwtl
mov
pop
push
dec
in
call
inc
insl
popf
add
jns
pop
mov
out
loope
add
icebp
sahf
mov
daa
fcomp
mov
pop
sub
pop
inc
in
std
push
dec
insb
sti
movsl
outsb
das
fs
and
pop
sbb
jno
ja
and
shll
fwait
dec
pushf
popf
insb
fistps
inc
fisttpll
add
icebp
push
mov
fwait
stc
aam
add
push
stos
sub
pusha
adc
and
mov
shr
sbb
adc
bound
outsb
ds
mov
lock
stos
push
jo
sub
sbb
inc
dec
xchg
cmpsl
out
gs
pop
adc
push
icebp
ret
leave
adc
mov
call
sti
pop
and
pop
movsl
sbb
sahf
mov
and
lret
leave
cltd
xchg
shrl
arpl
cmpsl
sbb
or
mov
mov
xchg
mov
out
and
jbe
int3
call
jo
push
mov
imul
adc
addr16
nop
pop
scas
sub
add
andb
sub
rcrb
pop
xchg
divb
cmp
push
push
es
jle
aaa
mov
insb
xor
xchg
xchg
adc
ss
les
add
pop
popa
jp
js
mov
das
adc
arpl
out
fucomip
lret
cmp
test
sbb
mov
and
pop
pop
lret
loopne
mov
xchg
mov
push
adc
mov
dec
fisubl
mov
fdivrl
dec
adc
enter
add
xchg
cmpsl
pop
adc
xchg
ja
sti
adc
cmp
inc
and
test
lahf
mov
xor
push
sbb
clc
cli
xchg
fs
lock
push
push
dec
jge
shlb
daa
fwait
arpl
sub
mov
jl
xchg
aas
mov
dec
hlt
fs
les
xchg
sbb
call
jnp
add
pop
cmp
xor
xchg
fldenv
inc
stc
or
jo
mov
inc
mov
call
outsl
fdivs
or
inc
or
adc
pop
jge
pop
xor
adc
daa
adc
insb
movsl
scas
sub
xchg
mov
and
xor
mov
sub
jno
inc
jne
xlat
loope
cmp
popf
enter
and
stos
add
push
sbb
sub
cmp
inc
mov
pop
dec
js
mov
clc
push
xchg
movb
faddl
movsb
into
popa
mov
dec
ljmp
jecxz
mov
push
shl
xor
mov
inc
push
inc
rclb
addr16
les
and
rcrl
sbb
andb
jmp
fadd
std
rcrb
hlt
and
jl
dec
je
ja
jns
xor
adc
push
mov
das
push
sub
push
mov
pop
jecxz
call
cld
movl
jb
jge
test
inc
out
rcrl
add
rorb
push
cli
inc
icebp
pop
mov
shrb
xchg
loope
cmp
inc
sbb
push
int
popf
cwtl
cmpsb
test
cmp
cld
or
add
inc
ss
inc
das
adc
sti
mov
arpl
loope
lret
pop
sub
push
fdiv
pop
dec
out
jns
loopne
into
enter
outsl
arpl
in
sbb
inc
inc
inc
mov
or
pop
stc
sarb
mov
add
xchg
test
or
pop
xchg
inc
mov
add
shrl
rol
cltd
inc
adcb
add
rcr
pop
xchg
sbb
sub
mov
test
fs
into
cmpsl
in
mov
stos
call
cmp
int3
jg
sarl
pop
dec
hlt
mov
in
cmp
add
outsl
add
fs
das
xchg
into
push
in
jmp
or
scas
adc
cmp
xor
sub
test
ret
sub
rcrb
sahf
cld
mov
adc
insl
das
sahf
sub
xor
dec
aaa
pop
cwtl
pcmpeqw
pop
cmp
sbb
xchg
jae
push
aas
sub
sbb
dec
fidivl
sti
push
outsl
dec
movsl
repnz
xor
push
jge
sub
inc
scas
aas
test
inc
jecxz
sbb
and
sub
lock
pop
inc
cltd
daa
int3
dec
fsubs
add
push
inc
enter
loop
sub
dec
mov
cmpsb
imulb
loope
fnstsw
rorl
js
mov
test
xor
call
lea
mov
mov
je
clc
pop
je
xchg
xchg
and
pop
iret
call
sbb
add
daa
dec
das
aad
nop
icebp
pop
mov
icebp
xchg
lea
pop
cmp
mov
imul
cmp
in
jo
cmp
into
jbe
sub
cmp
sub
jo
inc
lahf
sub
or
ljmp
scas
adc
sub
in
mov
cmp
ljmp
test
inc
jnp
mov
xor
jge
pop
mov
shl
xor
fwait
mov
rcr
mov
add
repnz
push
insl
pop
imul
dec
adc
mov
adc
mov
xchg
and
fmul
ret
xchg
add
cli
mov
and
xchg
loop
push
xor
call
add
insl
sub
lock
fisubl
cwtl
cmc
lret
xor
ret
es
add
and
sbb
or
dec
lods
cwtl
dec
sbb
or
arpl
xor
jle
jl
xor
imulb
xor
std
jae
mov
sti
in
adc
femms
shl
fcoml
fidivrl
lret
loopne
mov
dec
jge
dec
dec
mov
in
cmpsl
or
xor
mov
ljmp
loopne
nop
mov
into
sbb
inc
mov
fnstenv
loopne
dec
xchg
push
mov
push
add
aaa
lods
aam
ret
jae
scas
mov
pop
sub
test
mov
js
jae
adc
inc
add
stos
dec
ret
sbb
imul
fildll
or
pushf
fimuls
adc
ljmp
or
mov
cmpl
fisttpl
xchg
xchg
mov
into
and
loope
or
subb
cltd
mov
xchg
inc
pop
adc
and
fnstsw
jne
pop
mov
cmp
ret
loope
out
or
mov
es
lods
popaw
dec
cmc
jl
imul
cmpsb
mov
cmp
shlb
clc
jl
je
xchg
cmp
pop
fdivs
popf
jp
insl
cmpsb
push
std
lcall
cli
mov
out
sbb
sbb
cmp
mov
pop
jmp
stos
js
test
hlt
into
xchg
js
bound
mov
lods
mov
call
jp
mov
xor
mov
stos
cmc
negl
lods
add
mov
sub
cmp
lret
mov
nop
mov
inc
jp
push
mov
sub
dec
fisttpll
cmp
inc
jge
sbb
in
roll
pusha
jno
out
dec
pop
idivb
stos
sbbb
inc
jb
mov
cltd
jo
dec
mov
add
ret
aad
call
aaa
mov
scas
popf
sub
addr16
xchg
lds
imul
jae
sbb
jbe
push
addr16
xor
mov
cmc
test
int3
out
sub
pop
mov
adc
jecxz
in
xor
cmpsb
sahf
lcall
xor
js
fcomps
into
lret
or
filds
out
lcall
and
icebp
orl
add
cmpsl
popa
lea
adc
jnp
rcr
js
arpl
cmp
sahf
mov
push
mov
inc
or
ds
aas
xchg
sbb
lods
and
fcompl
movsb
lods
add
fidivl
xor
decb
push
jae
pop
push
push
lods
push
pop
test
shrb
jns
pop
sbb
inc
cmc
lods
cmp
dec
lret
mov
shr
and
cmpsl
jne
sbb
push
sub
ret
scas
sbb
lock
add
or
and
testb
mov
jp
out
and
pop
out
popl
and
mov
mov
push
cwtl
mov
push
lcall
shrl
outsl
std
fdivl
popa
loop
sahf
dec
cmp
mov
lahf
rol
and
sbb
fwait
push
pop
pusha
divl
cwtl
stos
lcall
outsb
and
test
sub
sti
pop
xor
repnz
lods
hlt
sub
dec
and
mov
daa
cmp
cmp
insb
dec
adc
in
and
icebp
loop
sbb
jne
test
pop
xchg
dec
mov
pop
out
mov
jnp
loope
mov
fwait
in
mov
sbb
pushl
or
decb
sbb
movl
or
jae
mov
pop
notb
sbb
lret
out
sub
jg
inc
fsubrl
icebp
mov
mov
push
cmp
jne
nop
xchg
jmp
iret
testb
pop
and
xor
mov
jne
mov
imulb
dec
cmpsb
pop
xor
xchg
hlt
add
and
stos
ficompl
leave
minps
addr16
pop
pusha
or
push
pop
hlt
sub
lahf
popa
xchg
mov
cmp
lods
into
jmp
mov
inc
xor
and
cs
repnz
push
sbbb
jno
shll
ljmp
sbb
and
sbb
xor
cli
add
std
andb
test
scas
xchg
mov
adc
in
in
dec
mov
push
lock
data16
daa
cmp
cmp
fs
iret
and
int
imul
movsl
cltd
cmc
clc
cmp
cmc
add
inc
out
ret
outsl
jmp
call
jp
pop
movb
scas
or
dec
and
pop
popf
cmc
sub
fadds
mov
outsl
popf
cmp
clc
xchg
fst
cmc
es
dec
sbb
pop
popf
xchg
outsb
pop
mov
inc
push
push
push
xchg
push
cmp
xchg
jne
jae
and
dec
sub
mov
xor
sbb
pop
adc
ss
mov
lods
icebp
shlb
lea
aam
inc
dec
les
add
sub
pop
cltd
dec
push
add
sub
in
rol
aad
sub
push
and
clc
loope
mov
pop
pop
roll
mov
mov
and
stc
rorl
cwtl
xchg
jne
aaa
cwtl
dec
mov
mov
mov
pop
cmp
pop
sahf
xor
bound
movsl
ss
inc
jmp
ficomps
roll
mov
loop
push
lcall
lods
int3
jge
xchg
pop
test
sub
mov
lret
imul
aaa
mov
out
pusha
mov
testb
push
or
cltd
sub
cmp
dec
lret
cli
adc
orl
mov
mov
shl
jnp
xlat
inc
mov
adcl
cmc
imul
and
aam
inc
pop
fstps
mov
push
arpl
lods
inc
fwait
jg
mov
stc
stos
notb
loope
or
mov
mov
jns
lahf
mov
mov
mov
stc
push
jle
pop
sbb
ja
sub
adc
xor
dec
add
push
popa
pop
jmp
lea
popa
lods
lahf
xor
icebp
loopne
sbb
jg
into
sbb
leave
mov
sahf
push
cmp
mov
cmpsl
mov
rcll
cmp
in
fdivrl
pusha
push
stos
ja
mov
mov
ja
stc
or
hlt
inc
out
add
icebp
imul
mov
mov
inc
cmpsb
xor
inc
sarl
mov
push
in
icebp
jns
sbb
sub
lcall
mov
adc
sub
mov
mov
xchg
mov
push
je
pop
out
dec
lods
mov
fidivrl
or
pushf
das
push
cli
push
cmp
popf
jp
mov
jmp
jecxz
dec
mov
inc
or
adc
lods
xchg
cmc
aad
aaa
lret
fdivrp
jecxz
cmc
mov
xorb
mov
cmp
aam
lds
movsb
xor
out
lret
mov
inc
sbb
sub
out
fbld
xchg
fwait
jb
dec
jo
inc
loope
mov
je
inc
xor
add
sub
push
movsl
push
insl
lea
ret
lcall
xor
popf
in
bound
mov
push
xchg
rcl
adc
addr16
push
xchg
fidivrl
hlt
push
ljmp
sbb
xor
xchg
jnp
sbb
lret
movsb
push
scas
inc
int3
inc
sbb
xlat
mov
movsl
stos
fsubr
push
xor
in
sbb
in
jge
lret
addr16
sub
lds
xchg
js
insb
mov
hlt
xchg
movsl
jecxz
ss
mov
cwtl
test
or
aad
das
sbb
fstpt
out
mov
sbb
add
insb
call
dec
jnp
or
mov
sbb
push
cmp
addr16
pop
pop
nop
aaa
std
imul
xchg
dec
fmuls
inc
mov
inc
adc
sbb
push
inc
outsl
jo
jge
sahf
fcoms
mov
sbb
sbb
std
rol
dec
fcompl
sbb
xchg
sbb
ja
rolb
inc
xchg
stos
lcall
push
add
xchg
mov
push
pop
sub
icebp
add
ja
mov
mov
xchg
dec
xchg
js
sbb
jnp
dec
mov
xchg
call
sbb
clc
rclb
incb
push
je
jmp
imul
aaa
mov
loop
out
addr16
sbb
sbb
adc
pop
xchg
fldl
mov
mov
xchg
or
pop
addr16
inc
adc
pop
inc
push
mov
inc
rcrl
fdivl
sbb
adc
xchg
cmc
data16
rcr
xchg
pop
jne
int3
jnp
or
les
cmp
inc
xchg
inc
sub
in
jb
mov
out
xchg
gs
push
orl
lret
sbb
add
in
pop
aad
add
mov
imul
mov
clc
xchg
test
cmp
movsl
push
push
in
xchg
xor
mov
dec
mov
sub
push
mov
pop
fwait
out
mov
or
stos
lret
sbb
aam
pop
lea
inc
icebp
lds
pop
push
mov
dec
xor
mov
ror
jno
push
leave
popl
roll
mov
orb
subl
cmp
xor
xchg
jle
inc
jno
icebp
ficompl
or
loop
negl
lcall
subl
push
lcall
subl
pushf
sbb
dec
daa
jecxz
mov
jmp
jl
jle
sub
add
inc
lret
pusha
aaa
jno
fsubrl
loop
or
mov
into
lea
fwait
jo
and
lods
xor
sarb
sbb
sbb
mov
fs
xchg
push
popf
std
ret
int
aam
adc
adc
xor
mov
sbb
int3
sbb
xor
xlat
mov
int
fcompl
cmc
add
out
ret
jbe
in
lods
scas
inc
or
imul
fwait
aam
and
inc
mov
std
sbb
push
lahf
mov
push
leave
push
cmp
shlb
sbb
mov
cmp
shl
adc
push
mov
mov
fdivrl
inc
dec
add
adc
mov
jbe
fdivrl
insl
jmp
xor
push
std
cmc
scas
sub
les
pop
les
sbb
imul
dec
or
adc
test
mov
clc
packsswb
fisttps
xchg
aad
fwait
mov
shll
add
aad
testb
testb
xchg
add
and
mov
shlb
pop
out
jo
push
mov
inc
or
push
lock
sub
sub
into
jo
dec
mov
lret
pop
cmc
mov
cmp
cmp
push
incb
inc
outsb
pushf
imul
sbb
in
cmp
mov
jle
scas
test
shl
cmpb
lret
jne,pt
sbb
das
out
sub
out
mov
and
push
lods
hlt
repnz
cli
mov
jle
leave
leave
imul
popw
clc
fnsave
add
jp
pop
xor
mov
jno
xchg
inc
jns
dec
jo
or
adc
stos
jo
xorb
fdivl
and
into
aad
xchg
outsl
ljmp
add
inc
pop
push
push
std
les
stc
negl
add
ds
lret
test
hlt
or
or
icebp
enter
sbb
jge
add
push
inc
xchg
out
mov
mov
aad
xor
xchg
outsb
les
xor
and
ds
sub
push
imul
fisubrs
cmp
cltd
mov
mov
mov
mov
daa
cmp
xorb
xor
test
dec
rcrl
jno
pop
rcrb
add
enter
add
jae
pop
mov
loope
fstpt
xchg
mov
fidivs
or
scas
dec
ret
rcll
mov
jae
rclb
jmp
mov
inc
icebp
mov
xchg
shrb
inc
fwait
jmp
out
inc
mov
divb
xchg
vmread
inc
mov
dec
inc
mov
loopne
gs
leave
test
scas
pop
push
loopne
sbb
test
xlat
push
mov
push
out
in
jae
mov
fiadds
lods
scas
in
aaa
mov
rcrb
adc
icebp
addr16
jae
dec
es
pop
mov
std
pop
xor
into
sbb
xor
scas
rcrl
outsl
xlat
fdivrs
popl
sbb
test
call
iret
inc
xchg
pop
add
stos
adc
or
js
inc
mov
or
cmp
je
out
add
mov
add
je
dec
pmaxsw
add
inc
fs
jno
test
int3
mov
daa
out
xor
or
mov
cmp
inc
cmp
mov
inc
pop
stos
jns
jo
jo
add
add
cltd
je
xchg
xchg
cmp
push
dec
stos
sbb
xchg
mov
enter
hlt
cmpl
xor
lods
mov
dec
out
sbb
pusha
cmc
xor
stos
in
pop
adc
mov
jns
subl
mov
add
add
or
jb
dec
and
cld
int
mov
mov
ficompl
jle
ficomps
mov
push
movsl
jecxz
gs
repnz
adc
cmp
jae
jmp
fucomip
adc
inc
loope
aaa
out
insl
mov
mov
or
jnp
sbb
stc
lret
repz
cmp
jb
cltd
sub
inc
inc
or
jbe
dec
add
ds
shll
jecxz
cmp
cmpsl
xchg
and
add
sti
repnz
lock
icebp
and
fwait
out
jae
lods
ss
sub
fidivl
add
fists
push
bound
fsub
ljmp
in
icebp
divps
jae
inc
fmul
adc
lret
dec
test
popl
pop
lock
imul
loop
xor
in
mov
into
or
shrb
cli
sub
fwait
lahf
xchg
into
push
inc
mov
fmull
xchg
int
jecxz
bound
shll
stos
push
sbb
int3
add
lret
outsb
cmp
sahf
pop
jo
inc
jge
mov
inc
pushf
repnz
incl
pop
dec
jmp
mov
jge
lcall
push
cmp
les
lods
sub
xor
bound
or
outsb
aas
mov
cli
mov
out
push
xchg
push
test
mov
xlat
and
jno
leave
div
shlb
adc
add
lret
into
inc
jnp
xchg
cmp
sub
js
mov
push
subb
add
jnp
xchg
or
stc
pop
mov
mov
rolb
push
fisttpl
xchg
pop
into
cmc
daa
and
iret
loope
add
cwtl
pop
inc
daa
les
arpl
push
mov
loopne
lock
test
inc
add
cltd
push
pushf
hlt
pop
test
xchg
aaa
pusha
mov
repnz
repz
ret
add
scas
test
popf
mov
ss
or
scas
sahf
mov
jge
aaa
test
lods
xorl
int
xchg
inc
sahf
jmp
loopne
sub
mov
jb
lret
loope
mov
jno
xor
inc
cli
push
scas
xchg
clc
or
cmpb
and
nop
cmpsl
cmpsl
xchg
insb
mov
mov
movsb
xorb
sbb
andl
pusha
dec
aaa
sarl
fwait
mov
cmp
shlb
or
rcl
pop
pop
push
add
dec
pop
cmp
test
pop
adc
fsubr
or
cld
mov
push
mov
popf
in
les
mull
jp
test
flds
scas
pop
push
inc
xor
dec
jbe
sbb
in
rcrb
stc
push
ret
loopne
adc
fbld
push
xchg
into
mov
dec
decl
stc
cltd
gs
in
inc
mov
or
sti
bound
out
sub
push
cmp
lcall
loop
pusha
adc
mov
rclb
lods
pop
sbb
xchg
mov
cwtl
inc
int
sub
dec
mov
pop
lcall
je
mov
or
pushf
call
xchg
pushl
or
xor
jae
movsl
stc
push
lret
mov
adcb
push
mov
xchg
inc
xor
push
add
push
sub
add
adc
lret
popf
shl
int
loop
sbb
in
lock
insb
hlt
scas
into
out
imul
or
scas
xor
push
repz
mov
dec
icebp
fwait
scas
mov
lds
cmp
ret
mov
sti
sub
xchg
nop
fcmovu
subl
dec
jle
ljmp
xacquire
cld
arpl
in
dec
xlat
iret
add
dec
dec
mov
xor
push
xor
fidivrl
insb
mov
scas
xchg
sti
fldenv
popf
lahf
stos
push
cmp
addr16
adc
pop
loopne
movsl
cmp
movsb
jne
les
inc
fdiv
mov
fadd
mov
fmulp
dec
jl
cmp
inc
bound
inc
sub
int3
into
mov
cmp
arpl
jg
sarl
sbb
jge
mov
scas
mov
xchg
shrb
lock
jl
out
rclb
aas
in
stos
push
scas
int3
or
jge
push
mov
int
mov
sbb
stos
repz
mov
icebp
or
jge
imul
jne
mov
stos
mov
sub
fstp
mov
icebp
inc
in
fmul
ret
pushl
les
movsl
xchg
mov
and
adc
mov
outsb
test
add
or
xchg
pop
pop
sub
or
push
mov
loope
jecxz
les
pushf
dec
movups
pop
add
out
lcall
jbe
and
repz
mov
and
dec
stos
ljmp
das
cmc
mov
push
rcrl
or
sub
jae
xchg
jne
popf
stos
sbb
test
mov
mov
aam
cmpsb
loope
clc
cmp
pop
jle
mov
fcoml
leave
xchg
clc
and
int
jecxz
mov
xor
or
xchg
mov
pop
mov
loop
lcall
pop
out
cmp
dec
pop
pusha
stos
jns
in
bnd
pop
lret
mov
mov
push
xor
add
mov
hlt
cmp
mov
lods
push
inc
jmp
jmp
ja
jg
pop
cld
daa
mov
scas
xor
aaa
dec
xchg
nop
lahf
loope
pop
bnd
mov
ja
or
stos
pop
lea
stos
dec
lcall
inc
mov
and
jmp
lret
pop
jmp
scas
mov
cmp
icebp
mov
mov
push
jl
ljmp
pop
pop
call
shl
jbe
inc
jge
pushf
sub
jl
inc
adc
mov
movsb
jns
mov
pop
pop
jb
push
js
call
hlt
nop
mov
stos
scas
add
addr16
gs
loop
sbb
adc
stos
fisttpll
je
xchg
mov
clc
popf
retw
lock
dec
cmpsb
mov
mov
mov
insb
call
jb
xor
jl
pop
or
std
lods
lds
fstl
and
cmc
pop
leave
push
ret
xorl
add
cltd
adc
xchg
testl
add
add
inc
lock
fisubs
pop
sub
les
sub
push
mov
movsb
xchg
ss
out
movsb
sub
stos
js
out
and
pop
inc
in
loop
cs
mov
imull
xchg
dec
xor
mov
rol
pop
pushf
arpl
mov
movsl
or
pop
or
xor
cmp
cmc
stc
enter
mov
xchg
push
mov
out
sbb
push
mov
mov
xchg
add
fnstcw
push
sarb
push
add
insl
adc
xchg
cmp
push
stos
mov
xor
or
cmc
cld
jl
pop
les
xchg
inc
mov
cmp
push
fildll
cmpsb
daa
sbb
adcb
push
in
pop
mov
mov
xlat
lcall
pusha
aaa
xchg
xchg
pop
sub
or
repz
cmp
xchg
dec
sbb
sub
mov
push
cld
jmp
mov
sar
sbb
inc
call
imul
xchg
dec
inc
sahf
ror
jb
inc
dec
dec
jo
das
mov
gs
testl
dec
inc
arpl
cmc
adc
arpl
cmp
mov
push
sbb
sub
in
adc
or
xchg
je
add
icebp
add
dec
std
es
arpl
std
sub
inc
push
mov
mov
dec
mov
aad
aaa
repnz
arpl
stos
cmp
mov
in
cmp
rclb
jbe
rclb
std
scas
cs
jae
test
sbb
mov
inc
inc
and
das
cmp
adc
pop
push
and
jmp
outsl
push
shrb
or
push
jae
mov
cmp
ret
int
and
adc
int
mov
jb
aad
shlb
cmp
bound
negl
loope
cmpl
xchg
xchg
into
mov
xchg
mov
addb
leave
push
or
sti
ds
cmpsl
jp
lret
or
mov
xor
adc
adc
jno
addr16
adc
mov
sbbl
mov
mov
or
push
mov
adc
inc
inc
sbb
loopne
dec
in
jae
test
sbbl
jb
jo
add
push
dec
pop
fnsave
mov
movsl
fsubrp
fmull
pop
sub
cli
std
jp
sbb
out
mov
loop
cltd
mov
sbb
jecxz
mov
testb
push
or
cltd
mov
lcall
lcall
xchg
shr
ffreep
lods
out
xorb
popf
popa
mov
xsave
mov
pop
sbb
xchg
pop
in
es
mov
pop
xor
mov
pop
pop
into
inc
mov
popf
out
orl
pop
pusha
loop
sbb
mov
dec
loopne
pop
stos
stos
push
sti
mov
das
clc
sub
cmpb
cwtl
mov
js
sub
repz
clc
push
test
lahf
or
mov
mov
inc
inc
out
dec
dec
lods
fwait
ret
cmpsl
jb
xchg
out
icebp
fdivrl
xlat
and
mov
aaa
adc
fxch
icebp
lock
idivb
dec
jno
cmpsl
popa
shll
jo
dec
leave
pop
dec
pop
in
movsl
test
pushf
dec
popf
aam
js
cld
test
lock
aas
popa
repz
jae
or
pop
xchg
push
loopne
jmp
adc
cmpl
or
orl
pop
sbb
in
les
aad
orb
pop
mov
test
add
jl
pop
iret
in
xor
and
nop
mov
test
repnz
mov
push
pop
lea
jmp
loopne
enter
dec
lods
mov
mov
push
mov
lahf
mov
repnz
lds
dec
xchg
mov
rcrl
cmp
inc
roll
sub
and
pop
jecxz
pop
ss
out
xchg
and
sti
inc
add
jl
imul
movsb
cli
outsl
inc
xchg
xchg
es
loopne
mov
push
mov
out
lcall
and
mov
xor
mov
mov
sbb
adc
pop
ret
mov
dec
push
mov
in
xor
xlat
cmp
mov
imul
aaa
andps
push
inc
je
filds
mov
lahf
mov
ja
insl
sbb
sbb
fistps
ds
mov
ss
scas
push
fsts
es
jecxz
clc
jae
mov
pusha
dec
movsb
ret
lock
sub
les
cmp
xor
enter
push
shrb
add
push
fcmove
lods
filds
xorb
and
jns
stos
xchg
in
sti
mov
insl
push
insb
xchg
xchg
in
icebp
dec
jl
lock
xchg
mov
frstors
or
xchg
jbe
aas
pop
sbb
sbb
lret
int
jle
das
sahf
std
in
or
sub
xor
je
pop
in
movsl
into
cmp
xor
mov
orl
pop
in
inc
shlb
popa
or
pop
inc
idivl
and
jns
push
pusha
in
subb
or
cwtl
mov
stos
ja
cmpsb
mov
shl
xchg
dec
xor
lahf
lea
jne
incl
addr16
adc
arpl
fldl2t
push
arpl
mov
pop
pop
ljmp
pop
jmp
repnz
loope
sbb
xchg
mov
lcall
nop
dec
aad
mov
cmpsb
mov
movsl
push
mov
roll
jg
xor
dec
rclb
jp
sahf
pop
jo
push
dec
fimuls
cmpsb
dec
add
dec
pop
scas
fwait
push
mov
int
dec
aam
pop
lods
mov
cmpsb
cmp
and
inc
loopne
pop
shrl
in
add
lock
mov
pop
sub
in
mov
insb
in
dec
dec
sbb
dec
int
push
daa
mov
jae
sbb
inc
mov
mov
jne
cli
xchg
scas
push
cmc
cmp
loope
popl
divb
jns
ja
sub
ljmp
cmp
mov
imul
jg
repz
jno
and
pop
dec
mov
loop
sub
idivl
cld
sub
sti
out
xor
aaa
fcomi
icebp
popf
aad
mov
das
test
inc
aad
dec
fisubrs
jns
aad
sub
scas
mov
mov
or
adc
xchg
test
js
sahf
popl
and
sbb
popa
dec
sbb
call
lcall
loopne
sub
outsb
or
pop
int3
lcall
adc
push
xchg
mov
fwait
mov
cmp
cmc
jb
cld
mov
adc
mov
push
dec
dec
shrb
rolb
adc
mov
and
lods
inc
push
mov
inc
sub
fistps
push
mov
fsub
xor
cmpsb
cwtl
fs
imul
mov
stos
sbb
jmp
sti
in
lret
into
stos
stc
loope
xchg
xor
adc
adc
lods
imul
fidivrs
add
lcall
mov
pop
push
xor
aas
sbb
enter
pop
mov
xor
jo
ss
daa
push
das
inc
sbbl
in
cmp
xchg
fcmovnu
jecxz
mov
jl
adc
popa
xor
mov
ja,pn
lret
rorb
or
ficoml
fstl
fcoms
arpl
jno
je
sbb
fucomp
outsl
dec
push
movsb
dec
sub
stos
mov
fnstsw
loop
ds
and
sti
jmp
aam
rclb
push
inc
mov
daa
fildll
orb
inc
fstpt
mov
dec
mov
cld
cmp
push
jae
jecxz
sub
das
rcrl
fs
les
pushf
pop
xchg
fsubr
movl
cltd
sub
adc
pop
sbb
incb
jne
add
in
pop
shlb
adc
imul
cmp
cltd
fsts
popa
mov
rol
xchg
loopne
adc
das
cmc
cmp
mov
jo
jno
adc
js
fcmovnbe
mov
fbld
mov
ror
pushf
dec
push
xchg
dec
imul
bound
popa
rolb
xor
outsb
or
ja
mov
xchg
fwait
xor
xchg
sub
xorl
scas
je
mov
xlat
and
out
cli
pop
popf
adc
dec
pop
mov
int
lar
xchg
lret
fists
add
adc
xchg
jae
sub
inc
ljmp
push
in
mov
jg
mov
fcom
leave
cli
sbb
stos
lods
mov
cmp
dec
cs
sbb
fs
mov
cmp
inc
cmp
mov
jmp
jae
add
nop
pop
push
daa
inc
lret
cmp
add
jnp
stos
test
sub
jb
test
sub
jecxz
inc
lret
and
xchg
rcrl
add
ret
cmp
jl
jge
inc
in
hlt
test
dec
cmp
add
push
data16
or
es
pop
cwtl
addr16
and
pop
xchg
addr16
gs
int3
pop
and
mov
jnp
subl
or
call
xchg
cmp
pop
mov
out
orl
fbld
test
mov
clc
xor
outsl
popf
jb
or
add
adc
mov
or
mov
and
fucomip
dec
mov
xlat
gs
stos
inc
loopne
cvtdq2ps
loope
mov
sbb
dec
mov
mov
xorl
pop
and
test
lret
jge
outsb
push
add
cmpsb
clc
std
adc
mov
fs
mov
push
jmp
mov
xor
adc
dec
call
and
mov
fists
inc
push
sti
ds
adc
sbb
or
jecxz
mov
out
mov
push
movsb
mov
push
js
repz
lret
fsubs
jno
mov
mov
jmp
sbb
and
nop
mov
adcb
addb
jbe
sub
dec
enter
mov
lock
cld
xchg
fwait
rol
cmp
mov
fsubs
cmp
mov
adc
pop
fmull
push
ret
sub
sub
mov
push
mov
inc
int
lods
jecxz
and
push
addr16
jae
mov
daa
mov
mov
push
out
push
push
sub
xchg
lret
je
push
push
and
imul
jne
xor
cwtl
mov
data16
stc
add
hlt
ret
mov
stc
hlt
dec
ds
call
and
std
test
notl
jecxz
inc
sarb
push
inc
xchg
xor
xchg
filds
test
insl
xchg
jecxz
add
leave
jns
rol
into
or
cmpsl
fadd
movsl
mov
mov
orb
pop
push
mov
xor
cwtl
mov
out
mov
in
pop
inc
mov
mov
lcall
mov
test
dec
hlt
das
popa
sbb
and
ljmp
dec
lea
jl
testl
mov
fcmove
mov
loop
or
jle
shlb
push
mov
lds
pop
dec
mov
xchg
bound
ja
scas
adc
addr16
mov
decl
xchg
lret
in
shll
push
lods
xchg
and
add
pop
mov
lea
mov
aaa
lea
mov
ds
inc
in
inc
stos
mov
pop
insb
sti
ss
jno
dec
scas
lea
xor
mov
sbb
stos
or
pop
shlb
fs
and
sub
adc
xchg
aaa
stc
leave
in
mov
xor
lcall
mov
jecxz
jo
and
or
xor
dec
adc
cmp
aas
mov
scas
int
mov
sbb
ret
andb
sub
out
mov
in
ljmp
clc
mov
adc
cli
push
lahf
jne
sub
sub
mov
jnp
out
xchg
mov
sub
or
jno
stos
lcall
jp
js
out
scas
cmpsl
push
lods
cmp
pop
addr16
xchg
cltd
jns
xchg
and
push
into
pop
jl
fwait
iret
mov
dec
mov
adc
test
push
mov
or
out
imul
pop
jnp
mov
stc
mov
push
cmp
xchg
ss
leave
jb
add
popa
dec
push
loope
mov
cli
add
jmp
mov
aaa
das
popa
adc
mov
clc
mov
xchg
in
lret
fwait
mov
lods
mov
xor
cltd
inc
mov
loope
lock
inc
push
jecxz
mov
repnz
adc
pop
std
pop
aas
xlat
sahf
rcr
repnz
or
mov
push
fcmovu
cmp
jl
in
jbe
scas
lea
cmp
arpl
stos
sbb
jecxz
push
clc
outsl
mov
into
mov
mov
das
sarb
jge
jne
rol
dec
flds
lods
loope
out
aaa
add
inc
adcb
lock
and
test
movsb
adcb
ljmp
push
adc
mov
xor
and
enter
xchg
pop
dec
adc
mov
or
dec
jns
scas
xor
into
xchg
cmp
and
xchg
jae
mov
sahf
cwtl
and
or
iret
mov
mov
clc
leave
imul
mov
push
enter
sti
lret
shll
in
scas
hlt
and
jne
mov
incb
xchg
dec
hlt
and
jle
movsl
inc
lock
and
inc
cmp
arpl
dec
pushf
nop
dec
mov
scas
fisubrs
bound
inc
adc
sbb
mov
test
add
cmp
dec
test
lock
mov
jmp
movsb
mov
mov
cli
dec
push
cmp
adc
rcrb
shlb
into
scas
mov
add
and
and
stos
pop
mov
fwait
test
sahf
cltd
pusha
jo
divb
sbb
fadds
mov
fsubrl
outsl
mov
loop
testl
jecxz
mov
mov
lret
adc
pop
cmp
insb
imul
and
fcoml
xchg
aas
lret
in
sub
js
int3
pop
mov
pop
adc
adcb
xchg
fisubs
loope
test
xor
movsl
sub
cmp
fnstcw
fisttps
cwtl
adc
cmp
dec
xor
outsb
faddl
rcrb
imul
dec
xor
jl
jge
pushf
aad
popa
cmp
test
mov
mov
inc
sub
stc
mov
out
sbb
cmpb
jmp
push
pop
sbbb
nop
xor
jge
cmp
fwait
sahf
inc
xchg
pop
pop
inc
out
xor
sbb
pusha
inc
fildll
pop
xchg
dec
out
mov
inc
mov
pushf
stos
mov
jl,pt
xor
sbb
add
in
xchg
jb
fwait
pop
mov
pop
out
adcl
or
and
inc
pop
movsb
in
mov
cwtl
adc
movsb
sti
testb
ds
push
lock
pop
add
inc
scas
sub
clc
cmc
sbb
dec
scas
lods
mov
inc
sub
mov
mov
mov
inc
ror
or
dec
xchg
xor
and
add
cmp
pop
pushf
sbb
popf
or
mov
or
shl
sub
jp
jo
out
out
xor
add
cwtl
adc
push
and
pop
pop
stc
adc
jge
lds
sbb
arpl
rcl
sti
sti
jg
xor
lahf
cs
outsb
or
jle
lret
divb
lahf
jmp
cmp
cmp
sub
mov
cs
dec
imul
push
add
test
xlat
mov
negl
imul
push
cwtl
inc
dec
incb
mov
lret
mov
cld
xlat
jne
lahf
test
dec
ret
xchg
dec
mov
fildll
pop
imul
add
cs
lods
test
cmc
test
push
stos
rcrl
or
push
fucomip
cmpsb
into
mov
insb
adc
fisubrl
sbb
cltd
adc
or
sbbb
add
mov
enter
bound
or
xchg
jbe
repnz
and
jmp
arpl
ret
pushl
dec
sar
dec
sahf
leave
add
loop
das
cmp
mov
and
xchg
dec
push
jecxz
jmp
iret
std
push
sub
push
lock
gs
fld
xor
inc
cmpsl
rorl
fldl
dec
push
hlt
shlb
pop
pop
mov
outsb
shrl
adc
mov
mov
push
mov
nop
mov
daa
stos
insl
arpl
cmp
aas
sbb
adc
popa
push
mov
jle
mov
dec
outsl
push
ficoml
inc
sbb
sbb
lea
cmc
push
jmp
out
adc
inc
dec
imul
or
popf
mov
ret
bound
adc
push
mov
shl
adc
jbe
adc
sti
fldt
push
lret
push
lcall
pop
arpl
fstp
sub
cmp
cld
stos
shr
in
iret
divb
xchg
pop
fcomip
sbb
xor
inc
gs
les
popf
push
add
fisubrl
pusha
test
hlt
movsl
mov
outsl
jae
shl
fmuls
outsl
push
inc
rcrl
and
iret
dec
xor
mov
xchg
xchg
lret
inc
stos
repz
xchg
xchg
dec
inc
dec
xchg
inc
dec
mov
fisubs
or
adc
pop
pop
cs
sub
or
add
addr16
test
and
repnz
or
int
mov
orb
test
orb
dec
mov
mov
xchg
xchg
jl
jae
ret
jns
enter
mov
or
jl
and
repz
lcall
dec
xchg
imul
mov
call
gs
popl
sbb
movntps
pusha
mov
pop
repz
sbb
xchg
jl
pop
sbb
ja
pop
loope
dec
cli
ss
fnstenv
adc
push
adc
mov
popf
call
mov
inc
inc
xchg
lods
push
mov
fdivrs
into
imulb
sbb
js
jo
pop
lock
and
shrl
sub
mov
in
std
mov
adc
and
loope
int
out
shlb
cltd
push
adc
sbb
or
fst
mov
popa
sbb
xor
loop
jmp
das
in
xchg
outsl
dec
sbb
sbb
or
mov
aad
movsb
xchg
lret
add
push
add
mov
add
divl
sbb
cmpl
stos
jnp
xchg
daa
addb
add
push
dec
and
into
movsl
fidivrs
daa
adc
js
movl
and
inc
mov
xor
fldenv
rcr
mov
stc
inc
mov
stos
mov
cltd
imul
or
push
je
lds
xchg
leave
or
divl
mov
cmp
sbb
or
das
mov
pushl
enter
nop
mov
cmp
incl
and
or
xchg
es
adc
je
inc
jle
mov
mov
ffreep
mov
pop
xchg
or
or
imul
pop
pushf
sbb
pop
add
leave
adc
mov
stc
test
lahf
push
psrad
dec
rcrb
adc
pop
cltd
dec
fsubl
aam
inc
xchg
ret
xchg
push
out
add
or
mov
mov
cmc
nop
jle
pop
mov
add
or
int3
pop
adc
stos
sub
sbb
out
mov
mov
std
and
loopne
cmc
cli
out
and
stc
movsl
in
and
iret
push
inc
ja
in
mov
movsb
sbb
and
cmpsl
mov
aaa
pop
or
push
lds
jmp
shll
mov
decl
pop
filds
lret
sbb
cli
xor
or
cmp
outsl
sub
pop
push
int3
ret
dec
jmp
sub
xchg
clc
sbb
repz
cmp
mov
movsl
jg
pop
xor
rorl
sbb
mov
xor
hlt
test
rclb
out
or
das
jbe
jnp
outsl
adc
jmp
or
mov
in
in
cld
push
sbb
sbb
mov
enter
scas
aaa
pop
push
mov
dec
nop
push
std
xor
out
push
cmp
shr
dec
xor
push
xchg
ret
cmp
add
mov
inc
xchg
sbb
dec
mov
cs
addr16
push
std
mov
xchg
lds
and
out
dec
add
mov
mov
das
xchg
dec
adc
aaa
ret
jbe,pn
fwait
jle
mov
xchg
cmc
mov
mov
add
dec
xor
shlb
test
adc
push
push
jo
shl
sbb
xor
adc
jecxz
sub
stos
insl
sbb
add
jae
add
ds
and
jl
push
inc
ret
pop
inc
jns
and
sub
add
cmp
jg
pop
aam
xchg
xchg
and
ja
push
ret
cmp
fisubl
imul
push
xorl
mov
fimuls
int3
push
mov
adc
pop
lds
insl
mov
js
test
mov
mov
jmp
lods
stos
mov
cmc
mov
aaa
push
mov
repz
pop
cmpsb
lods
jg
adc
cmpsl
and
js
daa
cmpsl
mov
iret
add
add
in
jmp
data16
int
xchg
lret
and
in
mov
inc
mov
or
and
cli
pusha
adc
loope
imul
pop
cld
or
lock
mov
or
addl
push
das
sbb
pop
mov
sar
dec
call
call
test
jg
cli
pop
into
adc
pop
sub
data16
mov
out
aas
jecxz
mov
pop
push
mov
test
xchg
arpl
clc
lahf
sbb
movsb
cld
daa
pusha
pop
cs
rcrb
lret
shlb
push
jg
test
ds
xchg
in
sbb
shlb
inc
jle
adc
inc
jnp
fdiv
inc
ljmp
jns
daa
stos
lcall
imul
inc
dec
pop
and
hlt
sub
push
jmp
jle
push
sub
add
jl
insl
sbb
inc
or
in
das
sbb
xchg
mov
cmp
out
lret
mov
iret
pop
les
and
mov
mull
sub
cli
clc
loopne
inc
mov
inc
pusha
mov
in
adc
mov
imul
faddl
dec
js
add
inc
loop
or
cmp
jns
jae
add
shlb
fcmove
add
inc
mov
add
outsl
sbb
adc
xchg
pop
cli
xchg
sub
jae
sbb
mov
imul
sub
jge
lods
push
and
sub
subl
insl
pop
ret
jecxz
divl
seto
dec
mov
std
popa
insl
fwait
mov
incb
rclb
jg
fst
jne
add
add
addl
xchg
mov
mov
movsl
mov
cmp
jno
mov
daa
test
mov
stc
inc
daa
lea
loop
movsb
add
in
mov
sub
adc
je
pop
fs
fstps
jmp
inc
push
scas
add
cmp
fs
fildl
out
aam
adc
sbb
out
cmp
lods
aaa
enter
sbb
data16
cmp
lea
sbb
xor
mov
fst
outsb
aaa
je
in
mov
inc
mov
sbb
pop
stc
inc
in
stos
fimuls
adc
mov
mov
xchg
pop
ret
xor
ret
adc
xchg
and
lahf
cmp
cmp
or
mov
sarl
ret
inc
cmp
ja
sbb
dec
jl
sub
daa
push
cs
aad
dec
dec
lods
inc
xor
stos
loop
fisubrs
in
sbb
arpl
scas
lock
in
pop
aad
dec
mov
sub
es
pusha
add
jmp
inc
cmpsb
aaa
aam
icebp
shll
adc
int3
jecxz
call
mov
cmp
adc
mov
adc
pop
jmp
jmp
or
js
cmpl
das
pop
mov
push
dec
push
dec
sahf
dec
pop
add
push
adc
insb
lret
xchg
mov
jp
add
scas
xlat
pop
cld
pop
nop
or
aas
ss
testb
outsl
or
push
popf
sub
shll
es
lret
icebp
fidivrl
scas
loopne
arpl
inc
fcomps
aaa
popf
out
sbb
xor
inc
ficoml
mov
cmp
fadds
sbb
or
sti
cmp
ret
ds
in
pop
inc
sub
daa
xlat
sub
pop
push
xor
imul
data16
xor
popf
sbbb
xchg
ds
sbb
leave
or
orb
test
mov
out
sbbb
ret
sbb
or
bound
push
sbb
and
fstl
popa
rcrb
mov
jb
cwtl
icebp
iret
push
inc
stos
lock
or
lret
xor
mov
ret
loop
and
xor
push
sub
repnz
ss
xchg
cmp
dec
cmpsb
mov
scas
cli
arpl
hlt
lods
out
stos
inc
daa
cmc
popa
jae
xchg
mov
cltd
ret
je
sub
loopne
or
pop
xor
or
fdivl
mov
sbb
insl
or
movsl
in
inc
push
iret
mov
pop
mulb
mov
cmp
stc
adc
pop
jg
sub
shrl
adcl
mov
insb
fs
push
div
or
pop
mov
sbb
aaa
iret
std
mov
xor
push
sbb
out
cmc
sub
mov
pop
mov
mov
les
inc
xchg
fdivr
loope
and
mov
push
dec
xchg
dec
add
xchg
bnd
jg
sbb
fdivs
mov
inc
mov
cmp
add
mov
fldt
push
inc
imul
mov
sub
insl
shll
push
inc
and
andb
xor
mov
popa
fwait
insb
and
in
adc
mov
jae
jmp
push
fwait
fwait
in
mov
cmpl
sub
or
adc
fdivs
push
jl
inc
mov
inc
or
test
pop
mov
jp
sbbl
cwtl
hlt
and
sbb
and
push
and
xchg
sub
jae
cmpsb
or
cmp
xor
lock
aaa
lret
xor
sbb
hlt
loopne
jg
roll
mov
jg
lds
pop
xchg
and
mov
pop
das
clc
push
aad
rcll
adc
in
cmc
dec
loop
mov
jnp
mov
push
jecxz
adc
dec
xor
adc
pushf
mull
stc
inc
mov
jno
add
out
or
lods
fdivl
pop
fwait
ss
push
cmc
mov
mov
clc
cmp
xlat
or
sbb
leave
add
pop
ret
fsubrl
hlt
jnp
movsl
inc
pop
adc
jle
push
inc
sbb
adc
outsl
jmp
mov
mov
loope
add
rol
pop
cmpb
fisubl
out
xchg
push
bound
mov
sub
das
js
cmc
es
xchg
lock
repnz
int
sub
add
fs
data16
push
pop
test
xlat
lods
mov
and
test
insb
andl
in
jmp
cmp
iret
inc
dec
outsb
into
mov
sub
mov
xlat
ret
aam
movsb
bound
cmp
repz
divb
inc
sbb
insl
xor
out
shlb
mov
xchg
pop
daa
jno
dec
jo
or
jp
dec
mov
mov
pop
fs
das
or
icebp
push
cmpb
cmp
add
add
int3
lods
push
stc
ss
mov
outsb
sbb
lods
adc
or
or
lds
add
adc
leave
es
mov
das
mov
lods
and
or
lea
pop
sub
imul
add
jns
cmp
cltd
or
push
cwtl
lret
aad
xchg
stos
and
stc
lret
xchg
sbb
mov
mov
sbb
sbb
aam
cmp
loope
mov
mov
or
in
aaa
push
dec
mov
call
sub
mov
pop
pop
push
out
inc
test
push
or
mov
fnstenv
icebp
aas
in
cmpl
mov
fwait
arpl
cmp
pop
and
jne
add
and
cmp
std
push
mov
xchg
testl
je
scas
sbb
push
addr16
lods
push
xor
outsb
dec
aas
add
push
xorb
cmp
pop
leave
repz
imul
mov
lds
and
in
enter
add
or
pop
jp
jmp
mov
movsb
movd
sbb
sbb
push
push
adc
ljmp
fcmovnb
inc
jb
sub
push
pop
xor
into
ja
push
or
sbb
out
sbb
lret
out
pop
cltd
fstps
xchg
imul
inc
mov
jl
xor
cmp
aaa
rcrl
mov
cltd
sbbl
cltd
loop
xor
mov
mov
jg
dec
outsl
xchg
jns
popf
and
mov
jnp
sbb
xchg
in
loopne
lea
and
outsl
sar
sbb
lgs
fucom
mov
mov
or
mov
lock
orb
enter
xlat
insl
add
stos
jecxz
and
sub
push
cmp
rorb
xchg
in
bound
out
imul
adc
xor
mov
jns
mov
or
test
call
cmp
pop
or
shll
int3
pop
push
jae
cmpb
fwait
xor
pop
ja
cli
les
bound
es
mov
jp
jecxz
cmp
push
dec
mov
adc
pushl
lds
mov
lret
inc
lods
test
test
sahf
mov
push
ljmp
sti
in
inc
and
dec
ds
out
push
mov
jnp
dec
call
loope
vpunpckhqdq
mov
xor
xchg
scas
insl
mov
gs
inc
fidivs
in
je
lahf
mov
or
es
sarb
mov
loopne
test
out
lds
stos
cmpsl
push
out
daa
test
iret
movsl
fwait
je
mov
mov
sbb
pop
in
test
repz
pushf
add
dec
pop
lods
mov
jns
or
push
int
and
in
pop
mov
shl
lahf
aad
ljmp
xchg
pop
js
lds
xlat
testl
bound
sub
xor
das
jg
cmpsb
out
pop
or
mov
loope
vmptrld
inc
test
push
xchg
call
and
jno
movsb
shlb
inc
mov
xor
andl
jge
insl
fldt
pop
push
mov
and
mov
rol
jnp
sbb
jae
in
mov
xchg
dec
mov
inc
icebp
mov
out
cmc
outsb
lods
add
xchg
jb
rolb
hlt
sbbl
cmp
nop
xchg
xor
js
fcomip
fs
out
out
xlat
jmp
cld
aaa
sub
nop
ficompl
sbb
cmp
inc
sub
cli
mov
es
mov
clc
mov
sti
ret
sbb
push
fdivr
stc
ret
in
lea
aam
pop
movsb
mov
adc
and
outsl
sbb
adc
xor
gs
sbb
call
cmp
and
mov
and
scas
movsb
fstps
clc
mov
test
int3
lret
xchg
xlat
sub
pop
fiadds
push
stos
push
stos
mov
cs
add
test
and
pop
loope
dec
pop
ds
pop
lock
test
rcrb
cmp
sti
mov
pushl
xchg
push
xchg
adc
inc
popa
pop
or
clc
gs
insb
push
lahf
test
les
inc
inc
sub
loop
or
mov
fs
mov
add
dec
push
adc
jmp
scas
jb
and
lea
mov
sub
test
push
cmp
out
push
push
fsubr
mul
pop
sub
adc
rcrl
mov
pop
inc
ja
mull
ret
or
jmp
jl
cmp
mov
add
std
sti
inc
outsl
jb
cwtl
add
orl
xchg
dec
dec
stos
call
leave
mov
test
mov
rcrb
dec
mov
rcll
pop
cmp
mov
aam
aaa
xchg
in
ss
jmp
sbb
xchg
imul
pop
fwait
scas
fsts
dec
sub
mov
mov
sub
mov
cmpsl
adc
mov
cld
xchg
outsl
adc
dec
cmp
outsb
jecxz
mov
sbb
stos
enter
sbb
loop
sti
pop
cli
mov
jmp
es
mov
repnz
rorl
mull
outsb
add
mov
mov
mov
xor
mov
in
je
xor
sub
movsl
mov
and
add
aas
lret
mov
outsl
and
pop
cli
mov
or
mov
xor
jne
cli
cs
sbb
push
mov
push
sub
mov
push
mov
and
ret
hlt
int
cli
inc
xchg
pop
push
adcl
inc
int
jne
add
xchg
test
jl
xchg
lret
fsubrs
push
jno
fucomip
aad
ljmp
js
jge
fs
and
adc
cli
nop
imul
dec
sub
lahf
nop
pushf
sbb
jae
jbe
jae
cmpsb
test
stos
aaa
sub
jge
dec
imul
gs
stos
fadd
jl
push
or
test
add
lock
sti
aam
mov
push
add
mov
popf
fsub
test
pusha
outsl
and
sbb
cmpl
push
out
jge
dec
jne
inc
fimull
adc
sti
dec
mov
push
pop
ret
or
pusha
add
adc
movsb
cs
and
xchg
fisubs
and
xor
movsb
inc
xchg
adc
insb
push
dec
push
add
clc
pop
pop
xchg
or
lret
imul
pop
dec
cld
sub
movsl
orb
fidivl
mov
cli
jnp
jmp
mov
jae
mov
pop
mov
lcall
sbb
mov
into
cld
add
call
xchg
pop
ja
mov
loopne
movsl
lret
clc
adc
sbb
jb
sbb
aam
int
repnz
mov
xchg
jp
and
in
push
in
xor
aam
stos
lahf
xlat
shll
adc
outsb
mov
mov
pusha
rol
push
arpl
subl
sbb
rcrb
and
shlb
das
loop
mov
inc
fmull
mov
inc
sbb
shl
mov
mov
or
orl
dec
pop
ds
pop
or
pop
pop
jecxz
cmpsl
mov
cmp
inc
sbb
push
sub
lea
mov
sub
xor
jnp
jmp
jno
adc
inc
mov
mov
fistl
cmpsb
pop
shlb
inc
or
xchg
dec
jmp
std
rorb
fcmovbe
test
or
mov
dec
xor
ret
dec
imul
mov
outsl
adc
cwtl
xor
stos
jno
mov
add
add
adc
in
roll
jp
idiv
dec
sub
adc
adc
je
addr16
rcr
pusha
sar
push
sbb
out
icebp
cltd
push
mov
cmpsb
xchg
imul
mov
repnz
xchg
dec
ret
xchg
insb
cmpsb
sbb
xor
ret
cli
cmp
sbb
xchg
xor
js
sbb
lods
sub
push
cmp
out
xchg
movsb
push
iret
xchg
xor
inc
jge
jnp
pop
cmp
xchg
ds
in
xchg
ret
add
cmp
push
mov
loopne
xchg
jo
into
mov
mov
out
mov
adc
inc
scas
dec
cmc
sbb
push
or
iret
sbb
cmp
cmp
sub
aaa
in
aam
lock
sub
sar
sbb
sub
std
outsl
add
cmp
call
out
push
lret
xor
rorb
cltd
pop
lret
sbb
push
outsb
popa
inc
pop
mov
adc
and
daa
into
xchg
aas
sbb
mov
pop
outsb
hlt
xor
jecxz
add
aam
xor
push
loope
int3
jl
add
in
mov
outsb
add
lahf
aam
sub
outsb
cli
scas
push
leave
cwtl
xchg
ja
sub
mov
or
mov
in
sub
mov
sarb
push
cmp
mov
push
call
mov
adc
or
dec
lods
sbb
push
mov
adc
sbb
aad
sub
jnp
enter
pop
inc
lea
jo
je
incl
inc
pusha
add
dec
push
and
sbb
inc
outsl
jge
jmp
pop
and
inc
ret
insb
rcll
fiaddl
pop
pop
andb
fadds
sbb
jecxz
jno
inc
std
nop
ret
push
lock
mov
cwtl
adc
dec
lahf
loop
sbb
into
xor
pop
xchg
xchg
pop
ret
mov
sbb
movsl
mov
out
cmp
sbb
je
push
xchg
push
movsl
es
and
push
iret
pop
flds
sti
inc
and
fbstp
dec
imulb
push
push
push
pop
xchg
sub
pushf
adc
dec
xchg
lods
add
jl
jmp
cs
dec
jge
or
pop
pop
lds
arpl
arpl
and
scas
sub
enter
add
push
jb
xchg
cmp
pop
inc
add
gs
inc
or
stos
xchg
cmp
fstpl
mov
pop
or
pop
mov
leave
sbb
mov
push
mov
incb
push
mov
movsl
je
out
int
in
dec
clc
pop
lea
mov
add
pop
or
sbb
out
and
hlt
pop
cmc
pop
pop
mov
lds
adc
sub
dec
sahf
sub
fnstcw
jne
push
inc
ror
mov
in
and
popf
jb
add
out
sahf
aad
add
mov
fimuls
fwait
test
jmp
dec
ret
add
mov
sahf
mov
sub
cmp
sbb
mov
rorb
sub
nop
lcall
sti
push
pop
mov
cmp
loop
jne
mov
mov
lahf
push
mov
ja
out
mov
hlt
adc
shrb
inc
mov
adc
push
in
mov
out
pop
mov
xchg
out
lcall
xor
adc
add
adc
jbe
jmp
in
push
decl
lret
mov
decb
faddp
ret
enter
shlb
cli
repz
mov
mov
sarl
shll
cmp
fisubs
sbb
dec
and
imul
je
std
cmpsb
sbb
inc
rcrb
dec
ljmp
lret
in
das
stc
sbb
stos
out
out
sbb
mov
mov
lods
mov
mov
hlt
xchg
xor
mov
and
ret
cmp
mov
hlt
fsubs
jae
cltd
mov
in
mov
or
rorb
div
mov
orl
sbb
es
in
cltd
lcall
jae
fcomps
pop
xor
push
dec
addl
xor
pop
notl
mov
pushf
ljmp
push
sub
testb
push
icebp
je
adc
in
lock
cmp
rcrb
pop
and
out
jge
popf
push
inc
andl
adc
ret
nop
and
mov
out
dec
fwait
les
imul
cmpsb
mov
pop
xchg
mov
jb
mov
mov
adc
test
cmp
xchg
bound
sub
mov
push
aaa
mov
hlt
jbe
push
loope
dec
repz
outsb
leave
int3
jnp
inc
cltd
cmpsb
dec
ljmp
jae
jmp
imul
mov
pop
js
xchg
int3
fsubrs
dec
cs
jl
das
leave
repz
sbb
aam
icebp
lcall
mov
or
jle
xor
fadd
pop
inc
xchg
iret
cmp
mov
mov
jmp
jge
in
pop
jmp
cmp
cmc
rcl
pop
cmpl
popf
jle
pop
and
inc
sbb
shl
jp
rsqrtps
scas
rcll
dec
push
js
scas
pop
sbb
je
jb
fnstsw
cmp
jo
jg
fistpl
gs
dec
pop
mov
or
mov
outsl
jecxz
adc
and
xor
gs
in
lods
push
ja
sbb
test
jbe
out
mov
imul
mov
mov
jmp
data16
xor
jae
jbe
pop
bound
mov
ljmp
sub
xor
int
add
idivb
jno
jno
and
sbb
scas
stos
xchg
lret
sahf
int
int3
test
ret
dec
sub
or
fldt
and
add
test
inc
mov
sti
outsl
pop
hlt
jecxz
sub
and
pop
movswl
int
rolb
xchg
sti
lods
xor
xor
mov
sub
decb
pop
mov
pop
mov
add
loopne
ret
mov
imul
test
fldcw
dec
test
and
clc
imul
cmp
mov
and
insb
pop
mov
loope
dec
inc
xchg
cmp
das
enter
mov
imul
push
addps
inc
xor
pop
mov
pop
and
pop
out
and
or
fwait
cmp
iret
cld
repz
adc
andl
out
adc
arpl
sub
jmp
lret
or
test
es
ljmp
iret
fdivrs
test
out
fildll
mov
pop
mov
push
xchg
fsubrs
sbb
repz
cmpsl
cmpsb
test
add
call
imul
mov
mov
xchg
sbb
outsl
loop
adc
inc
sbb
mov
shll
push
pop
imul
xchg
imul
sbbl
jp
inc
cmp
pop
mov
scas
push
test
mov
out
push
xchg
jb
arpl
mov
cwtl
aaa
dec
sti
sbb
push
dec
pop
aad
push
sarl
xor
xchg
xchg
mov
adc
pop
lods
outsl
pop
sbb
inc
cmpsb
outsb
pushf
inc
stos
in
cmp
mov
or
pop
test
icebp
leave
push
and
mov
mov
repz
or
sub
adc
mov
xor
icebp
pop
rcl
sbb
xchg
imul
adc
dec
hlt
idivl
dec
push
adc
mov
or
aas
or
xor
bound
mull
ljmp
jl
xchg
adc
int3
loope
mov
movsb
push
inc
xor
sbb
lret
cld
jns
pop
push
push
mov
lret
and
cmp
pop
add
adc
mov
ret
divl
sub
lret
mov
jmp
push
loop
inc
nop
and
push
repnz
push
fs
andb
arpl
sub
jae
inc
xor
pop
jo
mov
out
sbb
sub
scas
xchg
xor
pop
add
push
mov
sti
iret
insb
cmp
sbb
lea
cli
addb
mov
mov
push
cmc
ret
aas
call
inc
js
dec
mov
xlat
lock
hlt
popf
stc
mov
push
inc
push
jmp
dec
call
jge
pop
xchg
mov
xor
xor
out
jle
std
out
sti
sub
iret
adc
xchg
std
add
out
push
xchg
and
lea
addl
xchg
fst
xor
xsavec
xor
push
test
sub
cmp
cmpsl
push
add
inc
insb
push
es
mov
pop
fxch
scas
push
pop
pop
push
xchg
loope
mov
shrl
rcrl
push
jl
cmp
es
or
fstl
xor
cmpsb
pusha
jns
movsl
inc
xor
aas
lret
mov
out
jp
push
pop
xchg
shl
sub
mov
mov
cmp
rcll
enter
stc
cltd
jb
ret
sbbl
push
xlat
lods
add
loope
xchg
mov
cmp
fldt
insb
push
add
adc
push
sbb
push
test
add
out
lret
pop
scas
jno
test
xchg
shll
jne
xchg
mov
ja
mov
mov
jle
stc
pop
push
dec
negl
stc
in
daa
inc
and
out
cld
inc
mov
fistl
adc
jl
mov
aas
insl
mov
adc
dec
push
inc
es
pop
add
push
cwtl
mov
xor
xchg
adc
mov
imul
xchg
insl
scas
jmp
push
xchg
test
mov
ljmp
inc
je
into
push
fwait
adc
rclb
sbb
outsl
mov
mov
sub
movsl
pop
pushl
dec
decb
lods
dec
adc
dec
sub
xchg
lret
fwait
mov
sub
push
test
in
fs
push
leave
cmp
sbb
push
mull
shll
mov
cmp
jmp
repnz
jmp
rcl
ljmp
and
mov
ds
xor
cmc
mov
jg
xchg
mov
jno
clc
sub
movsl
icebp
cmp
leave
popa
jae
and
nop
mov
jle
push
fucompp
int3
test
mov
iret
mov
cmpsl
dec
popa
inc
and
jne
jbe
outsb
fs
pmaddwd
and
fmull
sbb
arpl
pop
sbb
adc
mov
test
das
push
mov
lahf
int3
dec
mov
je
lahf
cmp
popl
jl
inc
or
out
sub
adc
movsb
xor
js
test
insl
sti
stos
pop
push
pop
rorl
xchg
scas
nop
sub
ja
daa
mov
mov
lods
or
pop
jae
out
xlat
movsl
icebp
adc
lret
ret
pop
nopl
jle
push
gs
xlat
jns
test
xchg
ljmp
scas
xor
and
sbb
pop
movsl
pop
jns
loope
mov
sbb
xor
cwtl
insl
lahf
fstpl
and
xchg
lock
mov
imul
out
in
and
inc
mov
sub
inc
insl
inc
mov
imul
jmp
push
test
and
pop
mov
inc
in
mov
bnd
insl
iret
jb
stc
fsts
mov
scas
insl
test
cmpl
mov
adc
or
mov
mov
jg
dec
push
push
inc
or
sbb
jno
or
sbb
cld
bound
outsl
xchg
mov
and
dec
int3
mov
out
jb,pn
ret
mov
int3
ret
inc
js
sub
mov
jg
push
js
sbb
icebp
push
jo
xor
std
dec
fsts
xlat
and
sub
lods
cmpl
mov
pushf
test
or
pop
insl
mov
fstpt
cli
es
mov
mov
jae
sbbl
sub
hlt
pop
mov
sti
int3
stc
shld
insb
outsw
rclb
push
mov
test
cmc
scas
or
add
dec
daa
adc
mov
jecxz
into
imul
movsl
adc
daa
aas
mov
add
lret
icebp
in
les
mov
call
out
cli
sbb
mov
fwait
out
enter
in
in
push
daa
insl
cwtl
xlat
dec
insb
mov
add
stos
jb
mov
push
mov
movsl
cltd
and
loope
aas
sti
andb
shll
lods
fcmovnb
xchg
lret
cli
arpl
push
xchg
jmp
mov
mov
dec
xchg
push
add
ds
dec
fsubrl
mov
into
sahf
inc
push
push
movsl
shlb
fwait
je
jle
hlt
cmp
dec
shll
loope
jo
cmp
sbb
ja
sti
dec
lods
test
mov
push
repnz
dec
mov
sbb
leave
xchg
pop
mov
jmp
dec
dec
and
bound
dec
aaa
cmp
jp
outsb
cltd
push
dec
cs
ds
je
popa
sbb
out
ljmp
pop
jnp
fadds
add
lods
clts
pop
sti
push
sub
fld1
in
cld
cld
lods
scas
push
cmp
mov
int3
xchg
in
mov
iret
repz
pushf
xor
fisubs
pop
fwait
lcall
jnp
es
mov
imul
lret
sub
fdiv
jmp
in
in
xor
fwait
sar
mov
xchg
divb
jge
dec
psrlq
sub
xor
rcrb
mov
inc
lods
inc
loopne
and
xor
out
int3
jo
lods
xor
lea
mov
mov
fdivs
inc
out
mov
xor
sub
inc
pop
js
icebp
mov
cwtl
vprotb
and
lds
push
sbb
hlt
mov
dec
in
pop
or
arpl
scas
std
and
xlat
addr16
xchg
aad
mov
xor
or
aad
jl
or
aas
jmp
xchg
xlat
into
and
push
pop
loope
outsl
or
xchg
add
lret
cmpsl
xchg
sti
aad
cli
sti
pop
jecxz
das
ss
call
pop
jnp
stc
fsubl
adc
call
xchg
or
into
sti
or
jg
loop
cmp
mov
loopne
xchg
inc
cmp
nop
int
jo
mov
fwait
add
mov
out
int3
fidivs
cmp
mov
scas
in
cmc
jp
cmp
or
rcrb
pop
aas
xor
lcall
fcoml
xor
rclb
rorb
or
or
notl
jnp
or
mov
mov
fidivrl
stc
sbb
cmp
and
pop
jno
adcb
pusha
sbb
push
inc
lock
jmp
or
in
in
movsl
xor
xor
xchg
or
fisttps
daa
adc
adcl
sub
in
sub
mov
lock
movsl
adc
cmpsl
movsl
sahf
fiadds
test
pop
xor
cmpl
in
or
push
ret
pop
ja
push
sbb
test
sahf
jmp
test
and
stc
mov
out
xchg
ret
and
pop
sbb
fildl
pop
push
fincstp
cmc
sub
imul
insl
mov
jne
js
je
pandn
or
and
sub
in
sub
mov
fcoml
popf
mov
xacquire
fsubs
in
aaa
aam
jo
pop
daa
popa
pop
jl
scas
repnz
cmp
inc
jmp
lcall
adc
aam
mov
add
cmp
enter
dec
mov
jne
sbb
fistps
cmp
mov
mov
dec
insb
push
pusha
in
and
mov
call
push
xchg
ffree
mov
not
jnp
or
imulb
xchg
sbb
leave
sbb
jecxz
pop
jp
add
mov
push
testb
insb
into
sbb
lods
flds
and
xchg
push
cmp
mov
mov
mov
sbb
testb
or
idivl
roll
adc
cmp
movsl
push
stos
jmp
add
arpl
and
jl
mov
das
notb
insl
inc
mov
and
sub
xchg
popf
inc
add
xlat
inc
mov
pop
and
int
and
xchg
jg
adc
mov
cmpsb
imull
scas
mov
idiv
clc
mov
jle
mov
movsb
popf
lahf
pop
rol
jo
fucomi
lods
movsl
lret
inc
hlt
mov
jge
outsb
ret
jno
sbb
clc
sub
xchg
imul
add
and
mov
leave
mov
xor
push
lock
sub
pop
out
jns
stos
mov
mov
mov
int3
mov
mov
je
sub
mov
push
lret
or
push
mov
inc
jnp
insl
addb
into
sti
xchg
or
out
rol
hlt
mov
hlt
xchg
sub
add
cmp
adc
mov
sub
mov
out
clc
flds
mov
repnz
push
jp
xchg
mov
inc
popa
cmp
pop
mov
sub
jno
aas
pop
aad
mov
pushf
and
mov
cmpsb
cmc
in
aaa
mov
scas
jb
add
movsl
std
jmp
into
mov
xchg
push
andb
addl
mov
jbe
mov
shl
movzbl
pop
and
cmp
and
sbb
jmp
mov
ret
jo
orl
cmp
pmaxsw
rclb
jb
inc
popf
insl
dec
ds
sub
idivl
scas
xchg
lods
ret
dec
xchg
lret
mov
adc
inc
and
push
out
jmp
into
outsl
shl
dec
jg
jo
sbb
mov
js,pt
jnp
outsl
outsl
test
add
pop
inc
clc
xchg
orl
xchg
mov
outsl
push
aas
cltd
dec
repnz
nop
movsb
jle
loope
add
stos
mov
jae
jp
shlb
js
xchg
out
mov
sbb
test
cmp
dec
out
cli
mov
mov
loope
imul
jle
inc
cmp
popf
mov
and
jb
jge
and
ljmp
hlt
out
dec
push
dec
pop
jl
xchg
sti
mov
xor
sahf
and
push
jmp
sahf
adc
adc
pop
cmpsl
pop
mov
cmp
mov
loope
xchg
mov
bound
pop
xor
xchg
loop
insb
xchg
cld
adc
test
and
sbb
scas
cmp
nop
loopne
xor
fcoml
aad
into
mov
cli
and
test
imulb
dec
gs
in
int3
imull
das
sarb
dec
mov
inc
into
iret
ret
sub
es
imul
sbb
arpl
pushl
aaa
test
dec
xchg
pmulhw
out
mov
test
pushl
jo
jb
mov
iret
cmp
mov
adc
cld
pop
inc
inc
rclb
dec
pushf
mov
ret
push
gs
pop
dec
dec
adc
scas
xchg
cmp
filds
cmp
outsb
dec
cmpsl
test
inc
scas
test
roll
dec
hlt
insl
andl
mov
rcrl
dec
jl
sti
inc
mov
push
sub
out
mov
loopne
inc
cmp
inc
gs
xor
sbb
sbb
inc
enter
fcom
jno
mov
enter
jbe
adc
sti
mov
out
adc
out
mov
dec
mov
sub
adc
shl
out
lea
mov
stc
clc
daa
sahf
cmpsl
inc
xchg
fwait
in
dec
fisttpll
out
outsb
adc
movsl
sub
jno
xchg
test
rorl
pop
inc
push
and
aam
fstpl
fldenv
xchg
jns
lods
lret
cmc
mov
push
jbe
rcll
out
jae
into
xchg
lahf
cltd
push
lea
pop
or
mov
jns
pop
dec
sbb
mulb
inc
push
sbbb
stos
cmp
mov
xor
fchs
mov
les
and
mov
mov
or
dec
push
out
lret
cmp
push
sbb
or
imul
dec
cmpb
pop
xchg
mov
push
ret
lea
cmpb
jmp
pop
lea
fists
add
pop
jg
and
mov
cld
aam
lret
iret
stos
scas
pop
pop
in
pop
jo
mov
subl
xchg
push
lcall
adc
imul
adc
cmpsb
aam
jl
jmp
or
or
mov
sbb
xlat
mov
mov
aas
pusha
mov
mov
add
jp
dec
and
mov
mov
xchg
mov
rcll
pop
das
cwtl
adc
sub
jge
or
js
fs
add
ljmp
ret
mov
add
sbb
pop
ret
loope
jne
sub
dec
and
mov
ss
nop
leave
and
fildl
std
mov
jbe
mov
mov
pop
push
xchg
cwtl
dec
loop
cmpsl
mov
lcall
push
and
scas
mov
iret
mov
mov
int3
insb
addr16
and
adc
mov
out
jo
faddl
mov
iret
rorl
pop
out
inc
pop
aam
push
bound
pop
xchg
mov
dec
jle
call
jmp
hlt
pusha
js
cwtl
push
jecxz
xchg
popa
lock
cmpsl
lret
pop
mov
shlb
aad
in
and
xor
nop
or
pop
test
pop
xor
into
or
jl
or
lea
jmp
std
mov
mov
mov
idivl
fcoms
imul
jecxz
je
pop
pop
lret
cwtl
lods
lret
inc
sbb
addr16
cmp
cld
mov
and
and
in
pop
xor
je
xor
repz
mov
sub
clc
stc
push
fdivrp
das
mov
xchg
xorb
mov
cld
inc
fwait
cmp
fdivp
push
fwait
js
jmp
cmpsl
mov
subl
data16
adc
dec
jecxz
clc
inc
cmp
stos
les
mov
sub
add
add
jns
jo
pop
int
je
or
mov
push
mov
cwtl
jne
mov
loopne
dec
shl
in
dec
pop
ret
lcall
jbe
mov
repz
in
sbb
incl
pushf
push
int3
jecxz
outsl
addr16
jnp
jno
es
jns
pushf
inc
pop
or
jo
push
sbb
mov
cmpsb
fwait
or
sub
addb
sbb
xchg
lods
repnz
lret
aad
clc
or
subl
dec
mov
std
mov
cs
mov
dec
xchg
insl
pusha
dec
insb
mov
mov
lods
xchg
ds
imul
imul
cmp
pop
push
inc
stc
jne
or
dec
add
inc
and
or
ss
repz
mov
hlt
dec
or
ret
bswap
push
fldt
int3
data16
fmull
push
cmpsl
sahf
sub
pusha
sub
cmp
lods
xchg
hlt
div
pushl
or
cltd
cs
or
and
and
add
out
lret
sahf
mov
testb
stos
xor
fcoms
aaa
pushf
pop
and
pop
push
aas
or
sub
mov
and
test
mov
xlat
cmp
pop
stos
outsb
into
rcrl
outsl
leave
dec
out
lret
subb
sub
adc
lcall
loopne
sub
dec
jb
push
inc
sub
rep
xchg
pop
shll
icebp
loop
cmp
adcl
repnz
xchg
addr16
fsubl
aam
sbb
stos
out
sbb
fidivrl
xchg
cwtl
jne
push
pop
and
rcrl
out
shrl
jge
arpl
add
stos
xor
inc
push
and
xchg
in
sbb
rcl
pop
dec
stos
mov
daa
mov
imul
push
sti
daa
xor
xchg
cs
loop
fsub
jmp
cmc
dec
test
fidivrl
jl
sub
into
pop
mov
sub
sbb
or
push
sbb
out
mov
repz
movsl
lock
mov
loope
inc
jge
jmp
dec
pop
jge
jne
pusha
das
mov
fdivrl
or
jb
adc
adc
jmp
or
jb
inc
dec
ss
dec
xchg
cwtl
aas
test
leave
mov
mov
inc
add
adc
push
and
adc
or
notl
jl
jle
cmpb
fnstcw
leave
andb
mov
iret
lret
jecxz
icebp
mov
xor
mov
xrelease
or
aam
and
xor
ss
xor
push
xor
mov
jge
pop
sub
fs
sbb
mov
jle
inc
jnp
fs
jecxz
out
mov
stos
mov
rcr
inc
adc
add
add
repz
cmpsb
aaa
loop
imul
add
xchg
xor
nop
sbb
test
test
sub
push
rcrb
or
xorb
xchg
cmp
sbb
jp
in
mov
test
or
xchg
fists
jo
cmpb
shl
mov
in
ror
sahf
pop
scas
pop
add
int
xor
sub
dec
out
sbb
xchg
dec
call
mov
je
mov
inc
dec
lods
fidivl
mov
imul
fidivl
cmp
jo
mov
and
push
adcl
int
or
push
inc
xchg
and
push
jp
ljmp
xor
dec
sub
fneni(8087
movsb
pop
popa
adc
mov
sar
addr16
imul
sub
into
cmp
push
aam
aad
inc
mov
sbb
cmp
data16
push
pusha
xor
imul
mov
ljmp
cmpsb
insb
mov
pop
or
adc
js
push
out
in
inc
mov
push
mov
rcl
icebp
and
push
ret
loope
xchg
ja
xlat
aad
mov
arpl
js
dec
ljmp
pushf
data16
or
dec
inc
jnp
adc
dec
inc
jbe
mov
inc
xchg
imul
mov
ret
test
fsubrs
mov
pop
movsb
in
xor
mov
jbe,pt
aam
add
inc
jns,pt
ss
rcl
roll
out
pop
adc
es
or
out
add
or
mov
movsb
sub
out
and
sti
jp
es
loop
cmpl
or
inc
mov
sbbl
cmp
dec
jmp
stc
loope
stos
fmuls
xchg
andb
mov
sub
lahf
mov
shll
in
cmc
les
je
cwtl
lcall
ficoms
cmp
aad
push
cwtl
data16
in
fs
or
loop
and
aad
mov
pop
dec
cs
in
in
shlb
shrl
inc
fwait
into
or
adcb
imulb
xlat
or
pop
ljmp
enter
inc
lahf
inc
jg
or
out
pop
and
shll
popf
adc
lock
stc
and
pop
or
repz
jle
and
movl
inc
sbb
push
insl
adc
and
mov
js
imul
pop
dec
pop
mov
xor
cli
sbb
fcomip
xor
push
push
push
shl
push
andl
or
insl
pop
push
mov
inc
into
testb
test
sub
mov
arpl
jno
push
dec
stos
std
decl
xor
pop
movsb
std
xchg
or
cli
push
shll
jnp
mov
rol
std
dec
add
rclb
in
pusha
push
dec
inc
dec
sub
test
adc
adc
mov
sub
dec
mov
movsl
mov
pop
loop
outsl
pop
cmp
cmc
lock
test
arpl
add
add
popf
ds
cwtl
pop
adc
mov
stos
lea
addr16
call
imul
rcrl
cmp
cmp
call
shl
int3
in
pop
outsl
xchg
mov
ss
ret
je
aad
inc
aam
jno
xchg
cmp
xchg
lahf
mov
pop
out
xchg
sbb
outsb
mov
in
les
and
in
ljmp
cmc
fimull
xchg
xor
dec
lea
jl
jle
aaa
xchg
mov
add
test
cmp
add
les
xchg
inc
pop
xor
dec
ja
outsb
mov
rclb
xlat
dec
cwtl
fwait
add
add
add
pop
daa
xor
std
cmp
les
lock
movsb
push
imul
sub
leave
daa
mov
jnp
out
mov
movsl
mov
sarl
cmp
or
xor
push
sbb
push
add
jno
into
pop
lea
add
xchg
dec
jmp
jmp
mov
pusha
fisttpll
icebp
xor
je
fnstcw
in
lret
mov
xchg
cmp
xchg
xchg
outsb
jecxz
sub
fs
loop
idivb
gs
mov
fdivr
and
push
mov
xor
fmul
jno
mov
jb
repnz
pop
in
fiadds
push
dec
xchg
stc
and
xor
cwtl
mov
jmp
or
fs
insl
mov
mov
xor
cmp
popf
mov
out
adc
xchg
shlb
into
pop
inc
ds
push
scas
jae
fs
clc
push
jb
xchg
dec
xlat
or
imul
hlt
sti
inc
outsb
inc
nop
push
mov
pop
push
pop
stc
mov
imul
mov
pop
out
iret
push
dec
and
cmpsb
lea
fstl
xchg
jecxz
arpl
xchg
dec
xor
sub
inc
mov
std
inc
push
pop
push
and
or
and
dec
shlb
and
negb
push
xchg
pop
pop
xchg
sarb
push
pop
adc
push
test
push
fs
xchg
lds
sub
mov
mov
or
sti
mov
adc
popa
add
xor
mov
or
and
iret
inc
andl
xor
je
mov
test
in
inc
out
xor
pop
aaa
in
push
daa
call
xchg
fisttps
dec
inc
jo
adc
adcl
lcall
lcall
mov
fisttpl
insl
fimull
dec
ficompl
pop
xchg
pop
in
or
jecxz
jecxz
xchg
fldenv
shrl
add
mov
out
xchg
xchg
loope
xor
repz
cmp
stc
push
pusha
mov
insl
push
mov
jnp
cmp
xorl
or
loopne,pn
movntps
mov
idiv
cmc
push
sub
sub
into
shr
sbb
fsubrp
andnps
mov
dec
and
fs
push
and
std
dec
sahf
mov
testb
push
aad
jae
mov
cmp
mov
fs
adc
sbb
incb
ret
push
pushf
aas
repz
dec
jno
dec
mov
dec
push
stos
inc
cmpsb
mov
cmp
fwait
jno
mov
add
push
nop
es
mov
mov
sbb
or
nop
adc
data16
roll
mov
aam
cmp
inc
xchg
inc
arpl
fildl
inc
xlat
rorb
popf
call
mov
notl
inc
lcall
inc
lahf
pusha
or
test
aas
bound
das
nop
push
shr
add
adc
jge
test
push
dec
xchg
cli
testb
rcl
pop
pop
sub
popf
jp
cmp
movsb
sub
xchg
lods
outsb
ret
jg
ja
adc
pop
in
popa
adc
inc
dec
nop
add
pop
sarl
mov
out
push
jo
mov
mov
roll
aas
xchg
pop
jmp
imul
imul
push
xor
fsubrl
out
loop
push
xlat
mov
or
ljmp
jo
movsb
adc
subb
popa
icebp
mov
inc
leave
push
outsb
pusha
ss
xchg
stos
sbb
adc
daa
iret
xchg
pop
pop
mov
xor
mov
nop
cmpsl
or
roll
inc
xchg
sahf
push
or
int
xchg
pop
clc
cmp
das
loopne
js,pt
loopne
pop
sbb
in
sbb
mov
add
loopne
inc
mov
xchg
pusha
cmp
das
scas
out
in
cmp
negl
and
jecxz
mov
mov
mov
sbb
mov
std
sub
add
lock
movsb
mov
lods
push
mov
and
pop
es
popa
sbb
scas
in
gs
pop
lods
mov
pop
pop
pop
out
xor
ret
imul
pop
pop
and
lcall
mov
imul
fstps
mov
arpl
mov
es
dec
jnp
jbe
test
mov
rcl
scas
nop
fldcw
jbe,pt
pop
mov
inc
and
adc
popf
inc
sbb
scas
adc
fidivrs
push
es
mov
mov
add
add
test
arpl
leave
adc
jle
mov
add
out
sub
out
dec
dec
inc
subl
movsl
popf
pop
push
cli
xchg
cmp
popf
pop
inc
lret
int
int3
inc
inc
and
sub
ret
roll
hlt
notl
loopne
sbbb
cmpsb
push
jno
icebp
hlt
jge
sbbl
adc
cwtl
inc
sbb
lcall
adc
mov
out
fwait
negb
lock
ja
out
xchg
add
inc
pop
je
in
cmp
pushl
clc
cld
sbb
loope
mov
cmp
xchg
dec
sarl
sbb
adc
and
xchg
ss
rcrb
push
in
enter
nop
jl
xor
cli
mov
cmpsb
push
js
jno
pop
fstps
dec
ror
fnsave
clc
ljmp
loopne
mov
mov
nop
test
push
jne
mov
bound
mov
jl
or
inc
push
js
sti
jmp
and
mov
sbb
or
mov
lods
gs
js
sub
cmp
or
xor
das
in
iret
pusha
adc
xlat
jmp
sub
dec
push
inc
mov
pop
cmp
popf
in
mov
mov
push
aam
aaa
cli
lock
sbb
add
lods
cwtl
hlt
pop
sbb
mov
in
dec
xchg
lea
xchg
pop
mov
mov
and
aas
sub
or
fidivs
movsl
push
insl
push
push
dec
sub
mov
xchg
fsubrl
add
jno
adc
fwait
das
lea
incl
and
outsl
and
jp
popf
push
aam
adc
nop
pop
insb
xchg
fildll
sub
cmp
sub
sbb
inc
addl
cltd
and
pop
data16
pop
adc
mov
pop
and
aad
xchg
sbb
cmpsl
aad
jae
lea
and
flds
mov
mov
sub
fidivs
aas
and
leave
mov
aaa
adc
loopne
add
je
sub
xchg
cmp
in
ja
dec
cmpsb
mov
pop
lds
add
push
negl
scas
nop
mov
out
xchg
pop
mov
sbb
adc
rclb
imul
adc
addr16
cmpsl
add
inc
mov
xrelease
jae
dec
cmc
add
cmp
popa
cmp
jp
sarb
inc
cmp
mov
mov
jl
mov
jmp
cli
inc
ret
sub
call
fsubp
out
insb
scas
cmpsl
xlat
cmp
jbe
sub
cmp
or
inc
scas
jae
lea
add
xor
xchg
addr16
popf
mov
cmpsb
sbbb
jne
sbb
xchg
mov
pop
adc
cmp
sti
les
sbb
pop
jg
pushf
icebp
out
push
sub
lea
icebp
inc
outsb
ficompl
mov
push
bound
hlt
cmp
mov
sub
sbb
jb
xor
adc
sbbb
popa
mov
jl
addr16
and
xlat
dec
adc
daa
and
test
int3
lea
mov
xor
add
add
aam
sub
and
push
or
inc
aas
data16
adc
pop
call
dec
mov
loopne
sahf
fadd
jb
faddl
sbb
push
sbb
add
or
push
lahf
sar
rcrl
add
xchg
mov
orl
je
cltd
pop
or
dec
jb
test
pop
test
call
or
inc
addl
xor
notl
pushf
and
add
cwtl
sub
call
lods
call
dec
mov
xor
shll
hlt
rclb
sbb
mov
mov
andb
mov
scas
cwtl
into
fdivr
rclb
mov
adc
jne
inc
xchg
jo
arpl
or
pop
pop
push
mov
mov
adc
addb
movsb
sbb
mov
daa
cmc
lods
jg
xor
sahf
jp
or
dec
shlb
jge
xor
insl
shl
rcrl
and
add
sub
jecxz
out
test
pop
loope
stc
mov
sbb
fildll
scas
dec
sub
cmpsb
xchg
popf
cli
mov
mov
mov
sbb
jb
adc
je
daa
dec
cwtl
pop
cmp
cmp
xchg
fisttps
push
imul
mov
mov
faddl
xchg
sbb
fimull
inc
push
out
test
xchg
imul
test
shlb
les
in
scas
xor
pushf
xor
adc
pusha
mov
inc
and
imulb
inc
add
jns
and
clc
mulb
push
mov
aad
xchg
pop
pop
pushl
cmp
jg
add
inc
outsb
outsl
popa
gs
adc
ljmp
pushl
fstp
pop
imull
rclb
enter
pop
push
ds
fsubs
mov
dec
lret
add
fadds
xor
pop
mov
inc
subl
jo
push
push
movsl
sbb
movsl
sub
aam
in
jecxz
xchg
cmpsl
ret
xchg
outsb
mov
addr16
cwtl
push
mov
out
icebp
lea
dec
jnp
mov
gs
xchg
xchg
xor
cmp
cmp
pop
sub
xor
sub
push
clc
outsb
into
xor
inc
mov
int
fimuls
push
rclb
mov
add
mov
xchg
jbe
or
sarl
dec
addb
insb
xor
mov
inc
pop
popf
and
push
sbb
cmp
adc
or
adc
mov
push
enterw
push
imul
or
jmp
dec
inc
ds
inc
push
xchg
jbe
fldcw
out
repz
imul
outsl
cmp
cmp
xor
push
add
movsb
or
cmp
addr16
sbb
add
or
xchg
mov
fxam
mov
jbe
or
jbe
push
mov
jno
pop
pop
xchg
or
xchg
cmpb
pusha
mov
pop
push
jl
mov
lock
mov
push
fdivrs
and
xor
mov
jnp
aaa
sbb
push
xor
pop
or
push
mov
push
bound
mov
xchg
mov
out
push
pop
bound
sub
sar
or
or
inc
bnd
push
pop
mov
jbe
and
fwait
xchg
subb
xchg
cmp
nop
stc
loope
xchg
sub
pop
and
or
repnz
gs
add
rclb
add
xchg
dec
adc
jnp
js
sbb
or
push
xor
je
jae
popa
cmp
dec
outsb
fidivrs
das
or
and
sub
mov
push
push
ret
mov
pop
push
rcrl
lret
xor
faddl
addb
aaa
sbb
ljmp
pop
stc
push
js
mov
mov
mov
stos
mov
out
or
das
stos
ficoml
fimull
test
mov
cltd
jg
lock
addl
leave
jg
fs
test
notl
jbe
adc
lea
leave
push
movups
movsb
ret
cmp
shll
js
dec
pop
cli
mov
mov
xchg
lahf
lea
iret
pop
nop
cmpb
dec
push
dec
mov
cwtl
imul
pop
xor
out
pop
fnstcw
push
pop
dec
jnp
xor
cmp
push
pushf
mov
dec
mov
push
movsl
mov
sub
mov
imul
les
std
mov
fs
fistpll
aad
mov
push
xor
fcomip
and
insb
mov
loop
int3
push
add
sbb
fnstenv
mov
subl
xor
mov
ret
cmp
and
xor
mov
lods
sbb
push
jmp
rcl
inc
and
clc
or
cmp
mov
and
add
mov
int
xchg
push
xor
loopne
xchg
repnz
and
pop
jnp
cmc
data16
in
and
add
adc
scas
pop
add
push
outsl
shrb
arpl
pushf
add
cmp
in
inc
das
xchg
and
add
outsb
insl
pop
and
notl
in
fs
mov
push
and
sbb
sub
jl
cli
int
loope
repz
dec
jno
add
inc
test
push
jge
adc
pop
adc
sarl
and
mov
pop
gs
pop
sub
mov
cmp
mov
loope
cmpsl
lods
mov
into
das
add
movsl
scas
jmp
int
dec
and
xchg
mov
cmpsb
popa
addr16
js
out
adc
in
mov
mov
aam
jmp
or
mov
adc
dec
jbe
cltd
pusha
xchg
adc
pop
inc
pushf
xchg
repz
mov
inc
push
add
pop
test
in
jp
sub
pop
xor
popf
cwtl
mov
loop
pop
mov
adc
mov
rol
shll
mov
icebp
mov
mov
mov
mov
xor
adcl
or
dec
inc
in
xor
lds
xor
sbb
addr16
mov
mov
jmp
sahf
mov
push
cmp
addl
jp
mov
dec
jo
outsl
push
repnz
lret
mov
popa
sub
adc
int
jp
call
add
xchg
daa
jle
pop
insl
aad
es
cwtl
rol
adc
jo
cs
out
jle
push
ficompl
pushf
scas
lock
xchg
in
inc
pushf
ret
xor
mov
or
paddq
cwtl
jge
pop
ret
jmp
sti
imul
mov
inc
ljmp
leavew
lock
mov
sbb
mov
enter
stos
daa
cmp
mov
pop
xlat
ljmp
adc
and
adc
out
fisubl
incb
jg
xor
arpl
cmp
xchg
dec
sysexit
adc
dec
scas
xchg
lock
adc
add
adcl
int3
push
sub
in
arpl
ja
outsb
inc
cld
push
pop
adc
adc
aas
sub
movsb
xchg
xor
cwtl
rcrl
jmp
inc
int
adc
cld
adc
jmp
push
rolb
mov
in
add
pop
jle
xchg
mov
cmc
mov
sub
scas
test
orb
cwtl
sbb
hlt
orb
rorb
out
idivl
mov
and
ja
lret
mov
imul
or
ret
lock
lock
pop
push
clc
jb
mov
inc
push
inc
xchg
xchg
lcall
pop
fsub
addr16
push
sub
sub
stc
sahf
cmp
cmp
dec
lahf
pop
push
sti
jb
testb
fsubrl
dec
in
fcmove
popw
cs
jno
adc
shl
call
outsl
rol
movsb
shlb
pusha
add
pop
daa
xchg
insb
sbb
sti
hlt
xor
lods
jae
cld
pop
jp
lahf
cmp
movsl
xorl
pusha
out
jge
leave
ss
sbb
mov
xor
sbb
outsb
repz
and
out
les
cmp
pop
mov
xor
pop
mov
repnz
push
lods
pop
neg
pop
loop
movsl
push
pop
jbe
mov
ret
jbe
sub
xchg
or
stos
dec
loop
xor
pop
rcrl
jae
mul
testb
nop
push
sbb
or
xlat
rcll
sub
js
jbe
cmovge
js
js
fsts
jne
xor
xchg
mov
imul
stos
js
push
int
js
jb
mov
fwait
sub
aam
jmp
out
enter
cmpsl
xchg
cwtl
mov
lea
xlat
loope
or
scas
pop
fcmovu
movsb
mov
mov
testl
jo
movsb
test
inc
push
mov
bound
jbe
jne
fmuls
pop
stos
mov
aas
stos
jno
sub
shl
test
addr16
xchg
cmp
mov
in
cmp
pop
lcall
inc
add
mul
jle
cmpsl
ficoml
sub
mov
pop
push
nop
ja
sbb
sub
cmc
push
out
jo
idiv
lock
inc
mov
es
adc
sbb
sbb
int
mov
or
sub
and
je
mov
es
lret
dec
cmp
popf
add
xchg
leave
pop
test
mov
jp
stc
pop
mov
fmul
xor
test
sbb
sti
jb
xor
pop
sbb
xchg
mov
sub
dec
enter
inc
imul
stos
out
insb
rol
ret
leave
ja
arpl
popf
lret
fisubs
dec
faddl
lds
jecxz
movsl
push
adc
rcll
popf
repz
pop
and
inc
mov
pop
xchg
call
mov
xor
sub
inc
int3
pop
arpl
mov
push
sahf
or
cwtl
push
and
popa
mov
cwtl
in
nop
xor
imul
fsubrl
jl
sti
inc
push
aaa
loope
scas
call
sarl
stos
add
movl
lea
jns
mov
fsubrs
addr16
push
push
in
out
and
outsl
xor
fiaddl
or
insb
mov
adc
pop
mov
shll
xchg
nop
outsb
mov
rcr
xorb
inc
jae
scas
xchg
sarl
xor
outsb
sub
lods
fwait
lahf
insl
xorl
sbb
rorb
inc
mov
clc
shr
lret
test
cli
or
sahf
jno
cs
inc
aad
push
and
or
nop
popa
dec
or
xlat
fdivrs
jecxz
cmpb
lods
cmpsb
push
cmp
mov
sub
push
cmp
add
bound
lret
mov
or
imulb
jns
add
js
mov
xchg
aaa
push
cmp
adc
jnp
aam
cltd
push
sub
jae
jecxz
mov
ret
inc
stos
scas
mov
cli
xchg
fstpl
in
fbld
in
xchg
test
push
fidivrs
stos
mov
mov
mov
and
push
jle
dec
vmread
or
or
pop
addr16
jae
mov
pop
inc
into
in
xor
inc
or
push
sbb
cmp
js
mov
repz
add
dec
inc
cwtl
popl
daa
mov
pop
pop
aam
mov
inc
dec
add
jno
pop
loopne
sbb
jno
lahf
or
gs
fimuls
push
mov
cwtl
repnz
jbe
cltd
rorl
sbb
mov
popf
mov
push
out
cmp
cwtl
lea
rclb
stos
mov
stos
mov
pop
mov
sbb
mov
sub
jl,pn
xor
mov
cli
int3
mov
cmp
repnz
lret
sbb
orb
imul
aad
in
adc
pop
adc
aas
mov
xor
pop
ds
out
movsb
push
aas
sbb
movsl
cltd
loop
decl
inc
aaa
pop
fldt
daa
cmpsl
add
out
cmp
stc
stos
adc
fst
push
push
mov
mov
sub
inc
inc
mov
sub
loope
and
add
dec
sbb
mov
into
sub
cmp
aam
dec
add
movl
jg
jo
orl
in
jno
mov
pop
sub
jl
imul
call
jo
cmp
mov
out
mov
dec
pop
das
cmp
pop
imul
out
xor
in
mov
pop
lcall
jg
mov
xchg
call
cmp
cmpsb
xchg
cli
cmp
fidivrl
sbb
in
xor
and
lahf
xor
push
add
push
fdivl
dec
mov
xchg
jecxz
cmp
pop
lds
mov
mov
cmc
cli
mov
xor
cmpsl
push
data16
mov
or
dec
movsl
iret
mov
cs
xchg
pop
in
add
shll
lret
les
add
xchg
sti
sbb
movsb
xchg
out
lcall
aam
iret
mov
fs
sti
dec
push
jne
popfw
push
cmp
movsb
fcomps
pop
loopne
jecxz
mov
insb
xor
pop
testl
mov
incl
pop
and
cmp
loop
sti
cmp
mov
daa
adc
cwtl
adcb
test
cs
sbb
and
sahf
in
and
js
div
mov
cmc
bound
add
xor
scas
mov
adc
scas
and
add
jp
mov
pop
addr16
in
pop
nop
inc
push
in
inc
cmpsb
in
dec
sub
arpl
jl
add
test
jnp
stc
call
sti
sbb
pop
adc
call
pop
repz
add
popa
ret
test
xchg
push
movl
arpl
push
and
xor
and
pop
cmp
inc
jge
in
daa
ss
dec
loope
and
rcl
xchg
mov
inc
mov
xchg
lds
lahf
movsb
and
outsl
mov
mov
add
and
call
pop
sarb
sahf
xor
cmovp
adc
arpl
arpl
cltd
ljmp
mov
cmp
mov
xchg
jp
ja
inc
cld
push
push
mov
mov
xchg
leave
sbb
cmpsl
mov
cmpsb
decl
xchg
cltd
push
cmc
cld
nop
out
cli
fwait
popf
xor
push
sahf
push
lret
int
mov
ret
scas
movsb
rcll
std
and
movsb
push
mov
js
cmp
push
cltd
sbb
scas
cmpsb
pop
mov
lcall
dec
dec
or
loop
mov
out
sub
push
popa
mov
inc
jmp
and
pop
cli
ljmp
pop
je
movsb
xchg
dec
fistps
mov
sbb
jne
adc
stos
xchg
mov
dec
sbb
pop
loopne
imul
jbe
subb
cmp
sub
push
mov
je
or
repz
fisubl
out
inc
mov
mov
fsts
insl
in
jge
dec
adcl
adc
pop
xorl
loop
sub
or
inc
and
fcomps
es
mov
loope
out
mov
movsb
mov
dec
ja
mov
pop
scas
push
pop
dec
or
insl
jl
push
cmpsb
test
nop
lods
sbb
arpl
push
push
pop
nop
js
movsb
mov
lods
fiadds
dec
jae
mov
pop
and
sbb
test
pop
shrl
xorl
fs
mov
imul
jne
popl
xchg
inc
adc
xchg
popf
pop
mov
pushf
mov
xlat
sub
fstpl
mov
mov
inc
xchg
in
mov
and
adc
in
ds
add
incb
cmpsl
cmpsb
negb
xorl
fs
fisttps
mov
jb
lds
jmp
out
aad
jb
fsubr
jmp
call
lret
mov
jmp
dec
andl
xchg
add
ret
xor
jae
jp
das
mov
icebp
mov
push
or
jecxz
inc
fstpt
add
xchg
pop
sub
jbe
pop
ret
pop
xchg
and
sub
ss
xchg
mov
call
in
shll
mov
mov
mov
bound
cmp
jns
cli
xor
stos
push
call
inc
cmc
xchg
push
mov
jno
inc
push
pop
sbb
xchg
rolb
inc
or
fisttpll
and
xchg
inc
mov
les
fnstsw
mov
ja
cmpb
jl
sub
jge
cmc
imul
push
or
scas
stc
fwait
dec
xchg
push
cmp
xchg
push
outsl
outsb
mov
jl
repnz
les
jnp
mulb
mov
cmp
call
add
sbb
add
pusha
push
push
stc
add
inc
hlt
stos
fsubs
les
imulb
pop
xchg
arpl
mov
lahf
pop
sbb
inc
repnz
push
fs
dec
inc
scas
enter
ficoml
sbb
int3
jle
repz
hlt
jb
cmp
loopne
jp
push
inc
push
fistps
shl
ja
xor
icebp
jns
movb
or
jecxz
and
leave
pop
pusha
jae
pusha
scas
cmpsl
adc
jmp
pop
add
xchg
dec
in
les
insl
movsl
jp
xor
in
cmpsl
pop
xor
pop
insb
push
cltd
lcall
lret
sub
shl
xor
mov
idiv
fnstcw
mov
dec
movsb
insl
fdiv
stos
xchg
gs
push
nop
out
mov
pusha
aas
fmul
xor
sbb
xchg
addl
shll
lret
xchg
xchg
add
mov
or
divb
pop
add
scas
dec
add
lcall
sbb
dec
or
pop
mov
loope
jbe
je
inc
or
xlat
cmp
cmp
testb
mov
aad
mov
push
jp
nop
iret
fdivl
test
ljmp
push
lcall
or
and
stos
cmp
aas
mov
dec
das
lret
in
pop
outsl
in
pop
rorb
adc
dec
ss
sbbb
add
inc
scas
addr16
cltd
cld
adc
ljmp
cs
repz
es
mov
sbb
push
or
sub
inc
fstl
in
mov
xchg
mov
icebp
adc
mov
notb
dec
mov
xchg
ficomps
add
loope
jl
shll
aam
or
fcompl
decl
notb
js
mov
cmp
mov
gs
pop
jecxz
or
aaa
push
mov
fiaddl
pop
sub
mov
cli
imul
and
sub
aaa
xchg
imul
hlt
cmp
jb
push
or
std
inc
addr16
xchg
ficompl
movsl
cmpsb
arpl
pushf
mov
jle
jp
push
dec
dec
xor
movsb
decb
stos
loopne
pop
cmc
in
push
sub
push
ret
cmp
fwait
xchg
cmp
pop
jbe
cmpsb
int
leave
xor
roll
cli
jmp
roll
jg
sub
divl
cwtl
ljmp
mov
popf
or
cli
push
addl
adc
mov
rcrl
inc
or
fsubrl
jnp
jb
or
int
xor
and
xchg
sbb
sbb
pop
mov
cmp
adc
xor
push
xor
fsubrp
add
sbb
popf
cmp
push
shlb
xor
je
aas
outsl
fcmovb
cmp
in
mov
xchg
cmpsb
rcl
xor
inc
jbe
and
mov
push
push
xor
inc
sbb
sbb
repz
pop
cmp
jne
fnsetpm(287
add
sbb
jp
xlat
popa
cld
shlb
push
clc
add
shll
lahf
pop
enter
add
test
aas
clc
mov
enter
push
sbb
push
jne
jnp
cmp
or
or
jno,pn
push
add
pusha
mov
inc
jo
scas
test
jl
mov
rorb
xor
loopne
jg
mov
loop
add
ret
test
cmp
das
ljmp
jmp
adc
pop
mov
imul
xorb
out
out
sub
cmp
dec
pop
xor
iret
inc
jg
push
je
gs
scas
lret
mov
je
lcall
dec
cmp
test
push
inc
inc
push
int3
or
iret
outsl
inc
and
sub
mov
push
cltd
adcl
cmp
push
outsb
push
xchg
jl
dec
aad
or
repz
push
test
pop
add
out
in
leave
sbb
sub
push
push
int
mov
add
or
push
notl
jnp
inc
cli
push
arpl
cmp
lahf
xor
popf
cmp
sub
lods
loope
dec
pop
ss
call
in
js
sbbb
cmp
decl
je
sbb
lods
adc
push
mov
pop
push
xor
add
adc
bound
out
xor
lret
mov
or
pop
dec
adc
in
inc
xchg
gs
loope
adc
sbb
outsb
xchg
add
sub
in
std
sub
lea
inc
iret
popf
adc
sub
int
and
sub
cmp
jle
sub
cli
jle
xchg
ds
inc
popa
test
fimuls
pop
ret
lret
shlb
mov
lahf
mov
movsb
mov
xor
push
add
cmpb
aaa
or
push
test
xor
cmp
sub
dec
push
jns
ret
add
add
mov
adc
adc
fs
or
pop
loopne
inc
add
pop
imul
sub
jmp
out
adc
dec
loop
add
in
notl
insb
inc
mov
cld
cld
or
cld
in
leave
out
fiadds
test
jbe
roll
xchg
push
jae
hlt
addl
dec
rol
add
gs
testb
sbb
ss
int3
pushf
div
je
mov
popf
repnz
or
fsubl
sbb
push
ss
sub
dec
fs
mov
outsl
stos
pop
repz
inc
and
mov
sbb
cwtl
dec
mov
test
jmp
jns
dec
or
xchg
or
jecxz
mov
clc
cmp
nop
xor
ss
ror
sbb
into
jp
mov
inc
mov
lret
add
sub
dec
mov
jg
hlt
xchg
jg
outsb
cmp
cwtl
and
mov
pop
sbb
push
xchg
movsb
into
push
xor
xor
pushf
jnp
popa
fstps
scas
mov
or
sub
mov
sbb
ja
mov
test
mov
iret
jg
iret
shrb
pop
sbb
shrb
stc
notl
shll
iret
and
xchg
xchg
add
pop
in
lahf
ds
fwait
stc
mov
sarl
ss
dec
addr16
add
cltd
and
cmpsl
test
dec
push
lods
add
stos
daa
mov
jmp
mov
popa
mov
jno
daa
mov
popf
dec
pushf
inc
in
fcoml
mov
xchg
cld
sub
xchg
cli
hlt
inc
mov
mov
mov
mov
jo
fisubs
inc
cmp
lcall
out
sub
push
fldt
hlt
sbb
mov
jmp
rcrl
sti
sub
ret
xchg
into
mov
fdivrp
xor
adc
mov
lods
out
add
notb
mov
sbb
jae
xor
push
dec
leave
jmp
out
inc
xchg
into
fs
rolb
xchg
out
or
outsb
lcall
adc
mov
cltd
inc
mov
and
outsl
or
les
repnz
sub
xor
xchg
dec
loop
testb
jae
xorb
fdivrs
call
out
js
arpl
mov
repz
pop
int
fistpl
test
xor
sub
add
pop
mov
push
pop
in
loopw
arpl
fdivrs
js
cmp
xchg
xchg
into
test
xor
xor
lcall
inc
addb
loopne
add
jnp
movsl
movsl
in
cmpsb
and
fcoms
outsb
dec
push
aad
sub
sbb
in
rorb
push
or
test
ja
cltd
jge
cmc
nop
scas
pop
aam
xchg
es
jb
jno
sbb
push
je
and
mov
js
sbb
lods
mov
nop
ja
out
inc
mov
push
mov
jp,pt
popf
popf
mov
cld
out
xor
std
xchg
pop
mov
lock
insb
cmp
lock
or
inc
xchg
in
pop
add
insl
into
fnstcw
and
lods
jnp
call
aaa
pop
int3
jbe
xor
mov
add
jle
test
movsb
enter
and
stc
push
push
pusha
xor
es
inc
sbb
cmp
pushf
or
int
pushf
aas
int3
sbb
jle
mov
mov
xor
dec
or
dec
adc
popf
jbe
leave
dec
mov
push
addr16
call
add
movsl
fwait
pop
sbb
xchg
bound
dec
push
adc
out
and
jmp
aad
int
cmc
out
insb
ljmp
push
clc
mov
out
stos
sar
fiaddl
fildl
cmpsl
sub
in
mov
imul
nop
jo
xchg
or
lea
cmp
aam
push
xchg
jp
ss
xchg
bound
rorb
mov
inc
xor
xchg
iret
lds
jns
mov
push
jns
jl
scas
adc
add
sbb
fwait
addr16
jecxz
rep
pop
xor
jg
dec
mov
imul
jns
outsb
push
dec
dec
aas
pop
jno
sbb
dec
sahf
jge
jle
popa
mov
scas
insl
sbb
int3
imul
dec
les
rorl
ret
call
int
dec
xchg
movsb
jmp
ret
ror
add
push
test
push
sbb
jo
cs
push
sbb
out
addr16
ret
addr16
pusha
aas
aas
icebp
inc
adc
ret
subb
outsl
sbb
mov
fdivrp
mov
sbb
jle
cs
mov
hlt
jb
dec
sbb
insb
mov
mov
add
dec
xchg
js
rorb
cmp
xchg
in
push
pop
aaa
jmp
and
div
lret
ret
popa
faddl
repz
call
jecxz
cli
lahf
es
insl
js
fldcw
mov
jge
add
xor
pusha
and
jns
cwtl
mov
mov
sbb
push
or
fisubl
mov
call
cmp
subl
xor
pop
lock
xor
jno
mov
int3
into
aas
stos
mov
popa
mov
mov
lret
aam
xor
add
inc
pop
mov
cmp
mov
arpl
sub
outsl
popf
fwait
je
pusha
test
pusha
in
xchg
pop
jmp
cmpb
sbb
push
cmc
xchg
jb
jno
add
lahf
xchg
gs
cmp
movsl
jo
mov
mul
jecxz
decb
mov
cmp
dec
pop
xchg
stos
sub
inc
ret
jp
push
and
xchg
mov
stos
xor
dec
push
popf
cli
jne
dec
mov
stos
mov
loope
or
pop
imul
cmp
jns
fwait
and
jbe
inc
aaa
dec
mov
in
cwtl
jg
sbb
lret
mov
pop
aam
cmp
push
cmp
ja
aaa
fcomp
and
push
test
ljmp
ja
mov
dec
push
adc
cmc
ret
es
imull
scas
repz
or
ret
dec
pop
int3
sbb
test
jg
xor
rol
cltd
insl
jg
into
mov
data16
div
and
mov
bound
pusha
shll
adc
inc
jge
sub
xor
pop
arpl
fdivl
pop
mov
cmp
and
or
xor
sbb
das
js
das
jb
lret
dec
or
mov
cwtl
dec
push
xlat
mov
or
fildll
cmpb
mov
jno
jo
push
test
xor
xchg
stos
fs
std
js
lahf
xchg
fs
sub
dec
inc
lcall
add
push
out
les
cmpsb
mov
fldl
movsl
or
divl
fidivrs
push
jo
mov
cmpb
add
and
jecxz
in
sbb
loopne
and
cli
sub
push
mov
cmpsb
xor
ficoms
ret
xchg
jns
and
add
fistpll
mov
lods
inc
shll
ds
and
jnp
jle
fs
mov
push
shll
mov
pop
fisubrs
stc
mov
xchg
mov
ljmp
adc
adc
orl
or
add
dec
inc
sbb
fdivs
bound
add
das
pushf
ret
int
ret
mov
mov
jnp
mov
ret
or
stc
mov
inc
adc
test
fisttpll
popf
inc
imul
nop
mov
bound
fxch
inc
mov
adcb
mov
dec
sti
push
push
outsb
test
int3
syscall
repnz
sub
dec
or
push
fs
jo
int
xchg
dec
bound
popf
roll
xor
xlat
rolb
mov
cs
cltd
inc
xchg
aaa
frstor
mov
cwtl
cmp
in
xlat
fidivs
jl
nop
cltd
adc
aam
adc
pop
push
inc
jmp
push
fmulp
in
outsb
adc
cld
mov
dec
xchg
iret
dec
pop
push
mov
cmovp
daa
or
push
dec
call
jle
fisubs
lea
movl
movsl
xor
jne
scas
mov
jl
in
cmpsl
imul
xor
cmpsb
cmp
or
xor
sub
push
inc
rorl
stos
cmc
mov
pop
cld
cltd
aaa
inc
xchg
arpl
push
mov
mov
into
jb
cmpsl
insl
push
sbb
nop
cld
fs
xlat
mov
pop
sbb
scas
sub
push
xchg
das
dec
inc
mov
insb
mov
dec
push
ret
daa
mov
icebp
ret
test
mov
movsb
pop
sbbb
mov
popf
push
out
mov
pop
lods
loop
inc
xchg
insl
inc
rolb
movsl
xchg
and
lods
fcmovne
xlat
ja
int
scas
imul
lret
cli
cmpsl
mov
jle
int3
jae
pop
or
xor
or
sub
stc
and
jbe,pt
mov
mov
mov
pop
ds
push
cmp
and
cmp
push
inc
cmp
cs
jl
xor
sbb
in
pop
sub
xchg
or
out
or
stc
aas
mov
movsb
test
stos
stc
fwait
out
icebp
rorb
inc
into
jge
test
loope
mov
scas
jno
push
repnz
dec
call
adc
push
push
out
adc
jns
xchg
pusha
xlat
and
jbe
xchg
sti
movsl
inc
sub
dec
arpl
push
pop
cs
aaa
push
pushf
daa
mov
jns
ja
jb
and
push
cwtl
das
cltd
xor
push
xchg
out
ds
hlt
lret
and
ret
ror
hlt
inc
push
dec
mov
test
cld
test
mov
push
popa
aam
inc
leave
xchg
xor
cwtl
fsubp
repnz
sbb
fcoms
sub
rolb
iret
xchg
movsl
fsubrs
inc
or
daa
jno
adc
loop
stos
je
mov
jg
inc
mov
cmp
push
scas
pop
and
and
xchg
in
popa
adc
sub
mov
out
add
add
push
sbbl
loop
mov
das
mov
sub
jno
xchg
in
idiv
icebp
in
xorl
data16
imul
pop
dec
xchg
ja
push
xchg
push
jns
loope
pop
sbb
loope
jecxz
dec
inc
mov
shlb
push
cmpsl
jo
daa
xchg
mov
fcomip
mull
inc
sub
push
iret
sub
imul
rclb
popf
mov
xchg
mov
lds
lods
jnp
xchg
cmp
dec
and
xlat
inc
pop
inc
push
jne
or
xchg
cmpsb
mov
andl
inc
adc
fstl
jge
mov
into
fistpll
add
cwtl
lahf
rcrl
test
pop
dec
movsl
cs
shrl
dec
xchg
pusha
mov
in
cli
jae
push
dec
pop
insl
jl
cmc
push
and
fwait
mov
aas
mov
xor
fwait
sub
inc
cmpsb
out
test
aam
outsb
in
and
or
jg
scas
out
ljmp
lods
and
js
test
inc
cs
or
lret
jbe
xchg
scas
sar
cmp
pop
adc
icebp
enter
inc
cld
jbe
jb
outsl
loope
out
or
mov
or
jge
jns
or
pop
jge
jge
es
jp
cld
in
cmp
lcall
mov
lods
out
mov
pop
movsb
adc
test
lret
shlb
loop
cmp
xchg
add
lock
inc
jne
fs
into
jp
lcall
cmp
and
mov
adc
lcall
add
insb
roll
push
xor
jb
dec
lds
ja
push
shll
and
inc
or
repz
in
shlb
xchg
mov
xor
pop
jecxz
inc
out
xor
cmpl
push
mov
sbb
addr16
mov
aaa
push
lods
wrmsr
mov
mov
mov
xchg
dec
mov
add
push
cmpsl
repnz
hlt
lcall
inc
icebp
and
out
inc
cmp
cmp
xchg
pusha
bound
frstor
scas
mov
dec
lock
mov
adc
push
sbb
jo
xchg
jbe
push
pop
pop
jae
sub
mov
movsb
add
jl
push
mov
ja
push
repz
xchg
dec
pop
repnz
ds
xor
mov
jbe
inc
cld
push
cmp
push
arpl
mov
pop
push
pop
ret
pop
dec
dec
push
sbb
frstor
divl
loop
add
add
dec
pop
or
lret
push
test
adc
push
jnp
enterw
outsb
movb
arpl
test
sahf
std
fst
jns
mov
jno
adc
out
cmp
jo
ja
add
out
or
std
ficompl
dec
xchg
inc
loopne
mov
jno
mov
push
cld
das
movhps
sbb
int
insb
pop
cld
xor
mov
gs
adc
sbb
or
jae
push
cmp
lcall
or
mov
push
lret
movsl
sbb
inc
mov
push
sahf
mov
mov
loop
loope
es
add
mov
shl
jo
dec
cltd
call
or
into
mov
mov
inc
or
ret
and
jbe
jbe
jae
cmp
mov
in
mov
dec
popf
icebp
push
pushf
jb
cmc
push
xor
dec
add
xchg
scas
fstps
mov
jmp
adc
sbb
fldl
xchg
xlat
xchg
insb
cmpsl
sahf
fs
cmpsb
xchg
adc
aad
cmp
push
push
hlt
loopne
xchg
outsb
mov
inc
mov
sub
ja
sub
or
repnz
scas
sbb
mov
inc
nop
mov
jno
sub
sbb
ret
leave
mov
inc
jb
rclb
cs
and
pop
icebp
pop
loope
cmp
pop
enter
cmp
mov
fsubrs
push
inc
mov
mov
shrl
loopne
xchg
lods
hlt
mov
scas
jg
adc
sbbb
and
int3
cld
or
outsb
xchg
dec
jnp
popf
sahf
js
cmp
adc
test
push
dec
aam
movsl
jp
push
mov
cmp
dec
subl
xor
repz
jae
jns
add
shl
sbb
sub
ds
mov
insb
pusha
sbbb
or
jo
xor
gs
test
mov
addr16
ret
mov
or
sub
sbb
dec
add
pop
ret
data16
lahf
dec
xchg
mov
xlat
push
jbe
testl
dec
cli
fimull
xor
pusha
cltd
cwtl
stos
xchg
pop
mov
adc
hlt
je
and
data16
inc
mov
mov
js
mov
shrb
pop
pop
inc
mov
xor
js
daa
cld
jle
daa
xor
or
sbb
mov
cwtl
int
adc
clc
pop
inc
sahf
dec
rcll
nop
hlt
inc
cmc
lahf
pop
cmc
inc
jbe
in
enter
pop
sub
or
xlat
je
cmp
neg
inc
repz
das
mov
lahf
or
push
and
jle
fwait
jne
sti
inc
xchg
push
jb
cmp
mov
pop
mov
loope
aad
xchg
push
sbb
push
stos
je
xchg
pop
ret
loop
pop
fs
mov
into
repz
popl
push
outsb
or
mov
dec
mov
jmp
addr16
jnp
mov
inc
fisttpll
push
in
mov
dec
inc
sbb
and
inc
fwait
and
mov
cmpb
jbe
mov
lods
ret
sub
lahf
shlb
jp,pn
pop
mov
imul
out
enter
cmpsb
or
aas
mov
enter
ja
das
jle
xor
or
out
mov
xor
sub
fwait
into
into
sbb
adcb
sti
cmp
mov
jl
sub
xchg
jmp
dec
ret
imul
daa
es
xchg
js
std
cmp
test
ret
test
jne
loope
xchg
jle
inc
jge
icebp
add
bound
xchg
inc
push
mov
cmp
andl
mov
jecxz
fs
ss
dec
aaa
movsl
mov
test
push
pop
jge
lahf
mov
add
xchg
push
in
xor
dec
mov
push
lret
mov
cmpsb
int3
and
xor
adc
mov
in
sbb
push
out
lahf
cmp
dec
repz
mov
divb
inc
js
cmp
je
js
out
jmp
aas
rcrl
jge
lods
jecxz
test
ljmp
decl
add
xchg
addr16
jecxz
cmp
mov
xorl
mov
enter
xor
daa
inc
inc
inc
cmpsb
or
dec
or
or
dec
xor
or
xchg
cwtl
std
push
cmp
rcl
pop
push
std
jecxz
add
mov
sbb
jo
xchg
and
push
push
stos
jns
fadd
and
inc
sub
and
dec
dec
dec
or
lea
or
mov
xor
inc
push
pop
sub
cmpsl
adc
xchg
jle
lds
pop
push
inc
shrb
in
push
mov
and
iret
decl
jbe
cmp
test
insb
push
jnp
pushf
inc
pusha
push
lret
insl
fidivl
aam
xchg
gs
out
je
dec
or
cmpsl
push
das
les
xor
leave
push
mov
aas
jbe
test
jg
and
add
fadds
push
xor
sbb
lcall
add
arpl
mov
daa
pop
push
dec
push
leave
xorl
pop
cmp
mov
lock
lods
push
jnp
jg
sar
sahf
imul
sahf
pop
add
xchg
test
pop
lcall
xchg
mov
shrb
roll
mov
imul
inc
in
and
rcrl
lahf
imul
xchg
dec
sahf
inc
jecxz
pop
test
fiadds
push
cmp
and
dec
cmpsl
in
imul
insb
or
or
cmp
sub
or
lahf
imul
cmc
fisubl
call
arpl
in
and
dec
in
fcomi
fs
imul
movsb
lock
pop
aaa
int
loopne
pop
int3
arpl
pop
jp
mov
push
nop
mov
sub
jg
pop
adc
cmpsb
fidivrs
add
sbbb
repz
sub
sbb
jne
mov
add
pop
mov
pop
lahf
jnp
pop
xor
mov
or
jl
mov
cmp
xlat
jl
push
pop
adc
push
mov
dec
adc
pop
lcall
nop
jae
movsl
mov
je
cmc
lcall
lret
loopne
cld
xchg
xor
loope
or
pusha
pop
push
clc
jno
ret
xor
lods
and
in
ds
cmp
cmp
mov
or
mov
lcall
stc
inc
sub
in
fadds
lods
xor
into
sub
call
xor
rorb
lods
outsl
addr16
and
sub
and
imul
ljmp
jae
inc
jnp
mov
out
adc
iret
sbb
arpl
aad
mov
cmp
xor
push
rcr
int3
ficoml
sub
iret
icebp
jne
fdivrs
push
cmp
aam
push
outsl
addb
in
lret
shlb
and
xor
mov
int3
ss
sbb
cmp
lods
jo
into
inc
push
add
fwait
ljmp
adc
mov
pop
push
xor
sub
jmp
jge
add
sub
lock
rorl
hlt
aaa
ret
lods
icebp
loope
push
call
fildll
imul
inc
mov
add
dec
sbb
sahf
ljmp
adc
call
addr16
sahf
adc
xchg
cmp
mov
ss
leave
xchg
pushf
mov
and
loopne
fs
push
out
xor
test
ja
sbb
sbb
in
roll
push
pushf
stos
enter
mov
aad
ss
scas
mov
adc
jb
rcrl
xor
push
cmp
aaa
jbe
mov
lcall
mov
pop
mov
xchg
xchg
push
aas
xchg
fcompl
lock
dec
fimuls
in
jle
lock
jne
pop
xor
ja
adc
ss
loopne
jl
cmp
dec
popf
iret
repnz
and
jl
idivb
sbb
sbb
sbb
cli
cmp
nop
add
in
mov
out
mov
xor
imul
fcomp
dec
jb
mov
repnz
dec
test
pop
xor
test
outsl
xchg
add
sub
fcmovne
inc
ljmp
std
mov
shrb
in
loope
add
stos
ja
sub
cmc
sbb
add
push
dec
imul
imul
outsl
sti
or
out
pop
xor
inc
fs
imul
sbb
add
jo
popa
in
jno
push
js
fisubs
lods
pop
or
mov
icebp
repnz
test
xchg
push
lods
mov
or
ret
mov
xor
pusha
jmp
and
fwait
jo
out
rorb
shlb
sbb
std
push
insl
lcall
je
imul
pop
test
in
xor
mov
jmp
push
bound
pop
sbb
nop
sub
xchg
mov
mov
fwait
scas
pushf
mov
xlat
loopne
lods
nop
repnz
data16
mov
pop
pop
icebp
std
fcmovnb
sub
mov
arpl
aam
inc
push
lret
data16
dec
test
pop
lret
cwtl
repnz
pop
mov
or
and
sbb
movsl
cld
je
pop
jl
lods
xchg
xchg
push
icebp
aam
pusha
popf
adc
push
aas
iret
mov
inc
inc
mov
pop
enter
fwait
pop
dec
mov
ss
pop
dec
repnz
xor
hlt
loope
sbb
iret
dec
outsb
mov
out
fstl
pusha
fmull
add
mov
pop
mov
mov
mov
adc
js
jno
adcb
inc
and
test
push
jns
xchg
mov
jp
fwait
push
fsubrs
mov
dec
mov
les
jne
in
xchg
scas
data16
pop
std
cld
mov
mov
mov
into
daa
loop
jle
stos
sahf
in
push
fdivp
inc
and
mov
pop
cwtl
das
sbb
daa
int3
movsl
push
jp
std
stc
or
addl
ret
sbb
lds
lcall
loop
stos
xchg
sahf
cmp
fsts
fsubrs
or
xor
or
sub
dec
movzwl
pop
outsl
scas
xorl
nop
shlb
sub
dec
int
pusha
shl
sbbl
cmpsb
push
and
fcmovbe
mov
inc
movsl
movsb
and
loop
movsl
ret
hlt
in
adc
push
popl
nop
jbe
push
push
int3
mov
lods
fbld
jl
sbb
xchg
jecxz
push
int3
subl
in
mov
lret
mov
ret
fildl
cs
cmp
and
inc
inc
xor
popf
rol
cld
pop
xchg
sbb
test
sbb
cli
mov
xchg
adc
fcoms
ja
inc
frstor
mov
dec
xor
cmp
mov
inc
push
pop
enter
cltd
or
lret
push
jo
jmp
popf
cmp
jle
in
sub
call
push
inc
fcoml
add
movsl
aam
pop
lret
je
or
sub
std
outsl
pop
js
test
mov
andb
push
xchg
push
mov
push
lea
dec
daa
lds
shr
jmp
and
sub
das
lock
js
pop
ja
into
xorl
pop
or
andb
xchg
insb
jmp
xchg
or
ja
push
xor
es
cltd
movsb
inc
repnz
loop
in
pusha
push
cmp
jo
sarb
push
imul
out
movsl
imul
mov
insb
push
xchg
pop
ret
push
pop
cli
jns
xchg
fisttpl
dec
jle
xchg
jl
xchg
pop
insl
add
test
xchg
sahf
stc
gs
and
jne
stc
arpl
xchg
pop
fadds
lea
aaa
rorb
jg
cmpl
jo
fidivl
xor
mov
jo
xchg
fadds
js
cmp
cmpsl
push
das
mov
test
inc
cltd
dec
pop
incb
test
cmp
add
pop
into
adc
cmp
lahf
push
sub
popf
lcall
loop
nop
jp
bound
mov
dec
popf
mov
out
mov
sahf
cmp
inc
dec
cs
and
mov
pop
add
jp
loop
pop
jbe
mov
fcoml
out
addl
jnp
cmp
into
jg
out
mov
sbb
pop
xor
stos
loop
scas
fmulp
sbb
lret
xchg
jl
push
xchg
repz
push
or
das
lcall
subl
rcll
push
scas
stos
std
insb
dec
cmpsl
dec
imul
sbb
mov
loope
push
cld
add
inc
shl
nop
mov
bound
inc
xchg
cmp
das
sbb
dec
notb
or
sahf
jns
negb
push
cld
dec
subl
push
pop
cs
iret
inc
mov
fcom
pop
mov
and
sub
dec
out
jmp
faddl
sahf
test
aam
test
inc
xor
dec
cmpsl
out
mov
mov
pusha
pop
mov
cmp
xchg
dec
mov
mov
mov
and
insl
lock
and
add
xchg
cmpsb
pop
rcll
pop
hlt
repz
cmc
adc
push
mov
and
mov
pop
or
xorb
das
out
add
arpl
jmp
into
ljmp
jb
mov
push
cmpsl
or
jbe
sbb
mov
mov
imulb
fsubs
pop
push
mov
imul
pop
aam
mov
leave
dec
mov
lret
mov
daa
jae
ror
in
adc
es
adc
cmpsb
sub
mov
push
aad
fs
inc
stos
cmp
pop
test
imul
xor
adc
jmp
inc
sbbb
push
cmpsl
mov
dec
xchg
sub
dec
fnstcw
or
lods
adc
push
and
or
jg
fucom
popa
fwait
stc
mov
out
adc
insl
icebp
adc
push
mov
je
outsb
les
xchg
subl
unpckhps
inc
sbb
inc
or
hlt
ja
ljmp
and
push
sub
xchg
sbb
je
pop
pop
lret
add
dec
mov
mov
push
fcoms
dec
adcl
pusha
in
iret
or
icebp
sbb
imul
fwait
out
mov
sbb
ds
add
mov
fcmovne
daa
mov
jmp
sbb
sbb
ljmp
lret
xchg
pop
or
fnstsw
push
les
inc
loop
inc
pop
outsl
jg
aam
mov
andb
ljmp
fsubs
and
pop
sar
add
repnz
dec
rorl
aas
enter
lds
fsts
sahf
dec
mov
roll
dec
xlat
lock
push
mulb
mov
pop
jle
push
mov
xorb
lret
call
mov
pusha
in
das
cmp
daa
mov
daa
out
data16
mov
leave
or
cwtl
cs
or
jp
lock
mov
negb
cmpsb
pop
ret
data16
push
lcall
adc
js
jno
dec
cmp
les
cltd
cmc
push
add
push
add
subl
push
scas
fnstenv
sub
pop
xor
iret
fs
push
enter
data16
xor
out
cmp
sbb
loopne
pop
loopne
cmp
adc
or
sub
jg
dec
mov
sarb
fwait
lahf
or
jg
xor
out
outsl
inc
xchg
dec
and
jae
imul
cs
jo
dec
sti
gs
sub
bound
cmpsl
pop
mov
jecxz
movsb
scas
outsb
pop
mov
pushf
lea
stc
rolb
int3
xor
jno
mul
jne
and
xor
and
sbb
dec
sub
fimull
mov
sub
mov
jmp
js
dec
insl
and
mov
jl
xor
adc
mov
jne
cli
add
cmpsl
push
dec
scas
out
imul
adc
xor
jle
push
or
inc
add
mov
data16
jno
pop
push
ja
pop
jnp
dec
adc
ljmp
jo
pop
fstpl
or
xchg
mov
je
xchg
adc
in
sub
push
mov
xor
inc
xor
mov
push
push
sbb
loopne
mov
xchg
and
cmc
fdivrp
sti
or
stc
test
sub
pushf
movaps
push
mov
aam
push
mov
sbb
sbb
pop
jne
push
test
push
cmp
inc
fildl
icebp
cmpsb
sbb
cmp
lcall
mov
repz
sbb
jns
stos
cmpb
pop
push
pop
xor
sub
enter
push
and
or
shl
push
in
push
inc
js
fisttpll
add
daa
add
jg
stos
sub
pop
ret
and
or
cmp
and
pushf
jnp
outsb
insb
or
sar
stos
vmovntdq
mov
xchg
xor
stc
cmpsb
stos
mov
into
push
je
push
stos
ja
sbb
shrb
mov
xchg
dec
test
decl
dec
mov
dec
sub
xlat
pop
sbb
mov
enter
jl
inc
popa
out
push
pop
pop
inc
and
jp
and
pop
lret
push
gs
and
mov
push
stos
pop
lock
test
add
cltd
xchg
loop
ja
mov
stos
daa
mov
pop
cmp
cmp
push
add
pusha
inc
mov
loopne
cltd
imul
push
xchg
dec
add
dec
iret
loop
gs
fs
lret
cmp
repnz
jmp
stos
int3
mov
dec
lret
and
imul
sahf
movl
adc
dec
mov
xor
subb
cmc
jb
test
ds
dec
test
bswap
jl
mov
lret
push
mov
adc
inc
pop
jns
fldenv
popa
pop
push
cmp
push
cmp
mov
push
push
in
xchg
sub
or
ja
ret
xchg
mov
mull
icebp
mov
test
imul
xor
mov
scas
out
xchg
inc
addb
shlb
mov
sub
jns
mov
out
in
ss
idivb
mov
adc
and
or
dec
and
cmp
adc
sbb
push
insb
mov
fnstsw
popa
iret
mov
adc
lock
cmp
les
jge
insl
dec
je
dec
jnp
ror
and
xchg
push
adc
lret
jp
or
mov
std
leave
popf
and
aam
daa
jae
or
inc
xor
pop
test
fdivp
popf
add
imul
add
sbb
jo
xor
rcl
je
out
push
daa
clc
inc
clc
lds
inc
je
repz
loop
pushf
pop
test
dec
push
nop
stos
push
cmp
idivb
adc
mov
call
xchg
insb
and
adc
cltd
pop
mov
jbe
mov
jbe
aaa
sub
xchg
inc
js
loop
stos
ss
dec
and
cld
jl
sbb
mov
push
loope
jbe
or
pop
fdivp
test
dec
push
out
lret
scas
stos
xchg
adc
shll
dec
int
inc
xorl
sbb
in
cmc
imul
dec
negl
or
sub
dec
inc
nop
mov
inc
xor
add
push
sbb
lret
ljmp
mov
and
je
dec
pop
mov
loopne
mul
add
adc
ds
jp
ss
add
inc
es
adc
ds
adc
or
lret
cmp
iret
dec
xchg
mov
mov
xorb
cmpsb
ret
jb
mov
insb
aaa
nop
outsb
aam
popf
notl
and
lret
enter
arpl
test
mov
ja
inc
lock
shrl
fildll
mov
push
adc
cmp
mov
xor
sbb
cmp
pop
push
dec
inc
test
pop
outsl
cmpsl
xchg
mov
mov
sbb
enter
push
in
loop
push
ja
icebp
jmp
popf
mov
sbb
sbb
les
scas
test
arpl
xor
loope
mov
fucompp
aaa
jmp
lret
out
mov
pop
jae
sbb
sub
dec
shll
aas
aas
dec
rcr
dec
push
xchg
cmp
mov
rcll
mov
mov
pop
xor
cwtl
mov
dec
int3
enter
jae
mov
pop
xlat
cmp
sub
jno
push
into
aad
insl
dec
sub
mov
xchg
push
je
xor
push
test
inc
push
push
out
fwait
lods
jecxz
or
jl
mov
add
popa
orl
imul
xchg
lea
push
push
pop
insl
sbb
adc
pushf
cmp
pop
jb
movsb
daa
loope
push
xchg
inc
fiadds
and
dec
and
lods
or
lea
dec
xor
ljmp
int3
push
jb
rclb
dec
xchg
adc
out
xor
xchg
les
jo
and
lahf
pushf
jae
sahf
mov
popa
pusha
mov
fwait
jbe
into
pusha
inc
xchg
clc
ss
lahf
repz
mov
jo
cmp
xor
xlat
fcomps
mov
push
xorl
out
test
es
add
add
les
in
inc
fcomip
std
imul
mov
push
aam
push
jns
adc
or
test
aaa
loopne
dec
mov
test
test
shlb
adc
jae
cld
jno
and
in
sbb
iret
fiaddl
pushf
xlat
sub
sbb
popf
sbb
fwait
and
std
mov
mov
mov
mov
sbb
adc
mov
inc
aam
cltd
sbb
out
movsl
in
add
or
faddl
xchg
cmpsb
movsl
addr16
lcall
orb
out
sbb
incl
rcll
inc
and
xchg
pop
movsl
add
mov
push
push
dec
inc
test
add
sbb
in
inc
add
xchg
xchg
add
pop
or
jnp
jl
aam
cmp
repz
je
clc
add
ja
xchg
adc
rorb
shrb
jmp
popf
sub
gs
or
icebp
jno
xor
and
dec
push
int
pop
lahf
js
adc
xor
dec
xor
out
aas
xchg
insb
or
mov
cmp
bound
mov
stos
nop
inc
out
dec
sub
and
es
or
jle
loope
jecxz
in
sub
mov
add
cmp
ficoml
pop
outsb
scas
clc
jge
popf
xchg
rorb
jle
jo
cmp
mov
push
mov
leave
mov
pushf
inc
dec
imul
scas
into
das
bound
mov
ret
cmp
xchg
rolb
fucomp
push
iret
xchg
hlt
fldenv
test
lret
sbb
insl
call
dec
pcmpeqd
push
sbb
les
xor
ss
clc
and
clc
int
adc
pop
inc
imul
fistpll
inc
adc
push
mov
add
lea
dec
mov
lds
cwtl
std
jecxz
loop
and
in
test
sbb
stos
int
adc
pop
fadds
scas
pop
lea
sub
repnz
inc
pop
popf
adc
and
jecxz
add
inc
dec
stos
in
mov
mov
push
mov
lcall
and
loop
xchg
aad
clc
dec
ss
cmp
icebp
repz
es
mov
test
sbbl
leave
push
mov
cmp
cmpsl
cmp
dec
mov
testb
retw
lcall
mov
jbe
jb
stc
lds
cli
cmc
xor
std
sub
mov
jae
add
xchg
hlt
sub
and
adc
sbb
in
scas
push
xor
and
mov
mov
sbb
ds
and
mov
add
lahf
int
fdivl
shrl
imulb
mov
daa
lods
push
sub
pop
mov
test
cmp
mov
dec
mov
icebp
and
push
addl
roll
test
adc
add
lods
nop
pop
push
mov
mov
push
repz
cmp
fldl
test
ror
and
dec
sbb
mov
pusha
popf
push
cmp
daa
sbbb
dec
outsb
xchg
cmc
and
pop
mov
lret
test
sub
mov
icebp
repnz
cmpsb
xchg
and
in
into
jae
repz
fistpl
push
push
call
add
dec
mov
stos
std
dec
cmp
int3
insb
or
mov
add
mov
sub
cmp
push
repnz
stc
jns
dec
xchg
dec
fisubrs
daa
enter
jno
sbb
jb
mov
sub
push
or
inc
inc
cltd
add
and
loop
and
stc
pop
jb
dec
scas
mov
das
das
add
jae
xor
insb
sbb
stos
push
push
stc
pop
hlt
in
into
cmpsb
mov
mov
shll
push
adc
les
inc
sbb
int
mov
icebp
sbb
jp
push
rorl
xor
mov
jno
je
leave
or
add
ja
mov
xlat
and
out
out
sub
cmp
mov
dec
orl
js
popf
mov
shll
xchg
rcl
sub
inc
dec
lds
cmc
je,pt
loopne
pop
push
in
fdivs
add
dec
add
jbe
jg
mov
jecxz
movsl
mov
jle
cltd
loope
es
loope
lret
and
add
int
ljmp
je
push
shll
pop
push
mov
dec
push
sub
or
mov
or
fwait
push
mov
pop
sbb
es
mov
mov
imul
add
stos
pop
pop
scas
jo
jbe
adc
mov
popf
jne
mov
aam
adcl
aad
cmp
iret
inc
xchg
jle
mov
addb
jl
js
lock
push
jmp
lcall
orb
jb
or
jp
cli
loopne
cli
inc
push
in
sub
mov
xor
aaa
inc
add
cmpsb
cwtl
fs
inc
out
in
call
adc
inc
in
test
imul
or
inc
cmp
mov
imul
ljmp
or
or
cmpsb
mov
sub
jg
dec
xchg
mov
sbb
jg
mov
dec
scas
subb
mov
xor
pop
mov
xchg
xchg
push
imul
and
lret
jne
rcrb
ss
lods
out
int3
es
sub
stos
jp
cli
jmp
ror
js
cmp
add
shl
in
jo
inc
mov
adc
loop
xor
aad
fidivl
xor
pop
push
cmp
addw
addr16
lods
repz
mov
pop
rcrb
lahf
pop
xor
dec
push
mov
sarl
imul
aas
loopne
push
inc
cmc
sbb
xchg
sbb
icebp
mov
mov
mov
loope
adc
mov
bound
inc
push
in
loope
les
fdivr
loopne
xchg
and
es
mov
xchg
xchg
cld
sbb
add
out
je
xor
sub
inc
push
inc
sub
es
add
xchg
in
stc
inc
push
mov
xchg
or
data16
xchg
insl
jnp
xor
lahf
jmp
sbb
outsl
bound
jae
cld
dec
fisttpll
add
mov
jno
mov
cmc
imul
insl
sub
add
and
mov
cmp
inc
repz
jbe
jg
push
subl
cltd
sub
int
pop
lods
out
mov
mov
push
dec
adc
mov
sbb
inc
dec
xchg
mov
adc
push
call
scas
ss
dec
xchg
addr16
inc
cwtl
jne
loop
fidivrl
enter
jo
jnp
or
fidivrl
push
push
dec
pop
mov
sbb
dec
int
xor
mov
inc
movsb
lea
rorl
mov
movsb
nop
add
std
jnp
iret
mov
xor
cmc
mov
pop
ds
cmpl
xchg
mov
mov
push
imul
mull
add
fwait
cmp
popf
icebp
push
or
fucomp
pop
pusha
or
and
jmp
jle
loop
ret
dec
ljmp
mov
decl
mov
push
es
mov
nop
push
imul
xchg
test
or
pop
mov
mov
test
and
pop
cs
jmp
daa
jns
cmp
add
mov
rcrb
and
xchg
fdivrs
jbe
pop
inc
and
and
ja
leave
mov
pop
sahf
repz
jnp
mov
js
loop
jo
xor
cmp
dec
stos
cmp
cli
sub
add
fisttpll
movsb
pop
mov
fcomip
push
mov
mov
jb
mov
mov
or
aad
sub
fisttps
pop
pop
xchg
jl
sbb
lods
sub
mov
mov
notb
inc
pop
sbb
aam
sbb
movsl
test
xchg
int3
pop
add
std
inc
fiaddl
sbb
leave
add
jne
xchg
add
jb
sbb
shlb
ds
jb,pt
mov
ss
movhps
call
test
cmp
dec
sarb
xchg
fwait
mov
add
xchg
xchg
xor
add
inc
ljmp
pop
jno
btc
addr16
xlat
add
int3
add
loopne
sub
fs
xlat
inc
addr16
mov
inc
into
mov
xchg
and
dec
ret
xor
and
je
mov
icebp
sbb
aad
push
mov
stos
bound
pusha
and
hlt
jmp
push
int3
dec
imul
call
push
lcall
mov
and
fcomp
or
lcall
push
pop
push
dec
sbb
pop
jg
mov
gs
xchg
neg
dec
fwait
decl
sub
dec
xor
pop
gs
loop
mov
out
mov
push
icebp
lret
lret
cmp
sbb
in
sbb
std
cmp
xchg
into
adc
testl
add
in
cmpsb
push
mov
outsb
mov
cld
cmpsb
pushf
lret
jecxz
and
or
cwtl
dec
clc
sub
std
sbb
lods
inc
mov
sub
adc
loopne
cmpxchg
test
push
cmp
hlt
call
jbe
loope
fwait
jne
hlt
mov
rorl
xorl
add
into
in
loopne
sahf
outsb
xor
sti
mov
xorb
movsl
push
stos
outsb
mov
es
imul
fldenv
in
xlat
add
das
mov
sbb
mov
xchg
mov
sbb
sbb
adc
or
adc
sarl
mov
int
dec
ss
in
push
fists
call
pop
or
push
xor
outsl
lahf
andb
jle
ret
cmp
dec
jge
fstl
mov
add
mov
pop
push
cs
ret
rcll
adc
and
dec
mov
aad
es
and
mov
repnz
int
sbb
sub
ds
decb
jecxz
fsts
rolb
sub
mov
cmp
scas
shll
inc
jmp
call
int
insl
cmpsb
xor
andb
roll
adc
bound
pop
mov
pop
inc
dec
leave
jmp
fcmovbe
imul
addr16
hlt
cli
lock
xor
jne
xchg
fidivrl
jnp
shrl
or
push
es
xor
addr16
dec
and
dec
ret
cmpb
jecxz
loop
lock
ja
fistpll
in
pop
mov
imul
out
xchg
and
dec
pop
int
adc
pusha
or
pop
mov
dec
enter
and
inc
cmp
out
pop
es
sub
mov
mov
ss
sub
mov
lods
pushf
dec
and
mov
adc
shrb
sbb
or
jno
out
aas
inc
cwtl
lcall
inc
in
ds
push
xchg
dec
mov
xchg
outsb
add
leave
loop
xchg
push
movsb
mov
cmovle
pusha
mov
inc
mov
mov
sbb
insb
or
scas
push
xchg
out
jge
int
push
mov
cmp
push
xor
cmp
dec
or
fisubs
cs
int3
add
cmp
ret
into
je
fildl
repnz
test
aas
and
fwait
movsb
sahf
inc
in
pop
imull
add
lcall
jge
push
pop
std
push
xor
add
adc
sub
das
sub
mov
sub
outsb
inc
mov
inc
and
mov
enter
icebp
and
xor
or
lahf
int3
mov
js
loop
xor
mov
incb
fwait
sbb
imul
mov
movsl
movb
jecxz
lahf
les
xor
and
sbb
mov
loope
mov
je
and
jnp
outsl
sbb
fnsave
fsubrs
cmc
xchg
push
ja
fidivs
dec
sbb
jnp
inc
jnp
jge
sbbb
sbb
fdivs
jl
movaps
cmp
xor
or
mov
inc
xchg
pusha
in
repnz
movsb
adc
out
cwtl
aam
sub
add
repnz
aaa
test
ljmp
out
ss
pusha
jns
jne
and
add
lock
outsb
fcomps
cmp
xchg
lods
inc
rorb
shr
jbe
sub
mov
sbb
mov
mov
sub
rcrl
xchg
popf
cmp
out
mov
and
cmp
cmpl
push
jl
outsl
jb
jo
dec
rcrl
push
mov
inc
mov
xchg
add
popl
fmuls
fdivs
gs
fwait
cltd
mov
loope
scas
aad
push
fcoms
cmp
jmp
je
insb
test
es
mov
icebp
lcall
inc
adc
mov
les
sahf
rolb
mov
call
and
shrb
arpl
mov
cmp
mov
lods
mov
push
dec
cmp
and
call
adc
xchg
mov
aad
pop
repnz
xor
lods
inc
pop
or
adc
and
popf
fwait
repz
pop
mov
inc
int
jmp
xchg
rcll
mov
dec
push
mov
or
push
jmp
mov
dec
stc
arpl
mov
sahf
add
inc
out
push
inc
call
push
cmp
sub
stc
fsubr
pop
xchg
or
lahf
aam
mov
pop
dec
mov
jle
mov
inc
lds
push
pop
fwait
les
dec
push
daa
xchg
call
aad
stos
jp
je
mov
push
xor
push
xor
loop
adc
pushl
ficomps
mov
cltd
into
pop
and
repz
xor
mov
fdivrp
aaa
iret
push
scas
jae
imulb
in
stos
rcrl
test
sub
stos
sub
jecxz
or
out
sbb
call
sbb
js
call
pusha
push
ret
sbb
pop
out
sub
mov
rorb
sub
pop
subb
mov
cmc
popf
out
xchg
movsl
sub
iret
scas
shl
jae
dec
lods
lock
pop
pop
in
add
pop
or
inc
dec
add
adc
xor
add
mov
out
test
mov
stc
xchg
mov
les
adc
dec
dec
mov
shrl
lcall
aam
call
lods
int3
push
xchg
clc
das
shll
mov
subb
lea
mulb
sti
adc
jno
pop
push
addr16
jge
and
outsb
out
cld
and
pop
pop
out
in
daa
xor
push
or
pop
and
mov
xor
jnp
mov
mov
cmp
jno
add
adc
adc
das
ss
test
jae
push
insl
cld
mov
mov
das
aam
adc
enter
lea
and
mov
xchg
mov
imul
inc
cmp
in
push
mov
xchg
lahf
je
xchg
iret
int3
jae
out
push
jp
pop
cmp
flds
arpl
adc
bound
or
and
xchg
jmp
adc
pop
xlat
mov
dec
and
mov
enter
shrb
jge
fldt
lahf
add
dec
xchg
jne
push
add
lods
aas
xchg
jbe
iret
out
push
cmpb
cmp
push
loopne
in
fadds
mov
jno
xchg
mov
mov
imul
lcall
aas
shrl
stos
lods
jno
data16
loopne
sti
or
pop
pop
mov
or
sub
repz
xor
push
push
pop
push
stc
std
jp
outsb
pop
icebp
fimuls
fmul
xchg
nop
scas
jns
insl
in
out
push
imull
mov
lods
adc
pop
inc
loopne
testb
xchg
rolw
push
sbb
and
add
dec
out
sbb
in
in
js
add
mov
sbb
push
iret
orb
sub
roll
mov
iret
xor
mov
dec
add
inc
sub
les
sub
push
cmp
xchg
popf
add
dec
mov
cmpsb
xchg
cmp
addb
shll
scas
cmp
xchg
sbb
push
vmwrite
ss
mov
ja
hlt
push
stos
jp
cmp
nop
xchg
icebp
fisubrl
sbb
cwtl
in
sbb
sbb
sub
pop
fstps
aad
test
fwait
cmp
cmp
loope
std
shrb
out
in
sub
adc
pop
mov
aad
andnps
mov
std
leave
stos
pop
ds
cmp
stos
xlat
fbld
xor
dec
js
sbb
xlat
out
inc
cmp
push
std
ds
orl
pop
mov
sbb
fidivrs
lret
ret
rol
add
xorl
imull
out
jp
add
bound
imul
or
dec
stos
inc
mov
or
cmp
icebp
and
fmuls
mov
and
mov
int
in
inc
mov
xchg
data16
jne
aad
lret
into
test
jge
fnstenv
movsl
lret
pop
or
cmpsb
jo
push
push
out
in
jg
inc
pushf
adc
sub
jl
test
filds
cmpsl
mov
push
js
outsl
aad
inc
push
and
pop
cmc
shrl
popf
dec
leave
and
out
or
dec
mov
cmp
mov
pop
imul
aaa
pop
int
outsl
sti
dec
gs
insb
jmp
stos
stos
pop
and
test
scas
pop
dec
in
insb
cmp
mov
sbb
popf
jmp
imul
cmovp
adc
jle
imul
in
mov
push
repnz
pop
incl
mov
jge
ds
push
push
daa
or
xchg
out
sub
add
ficoml
cld
aaa
insl
mov
aam
fwait
mov
mov
lahf
or
jbe
lods
aam
jne
fnstcw
push
inc
addr16
sub
xchg
cmp
cwtl
add
arpl
lods
pop
inc
and
or
in
mov
mov
xchg
jns
jmp
lds
mul
call
imul
mov
mov
mov
sub
int3
test
outsb
hlt
cmp
add
xchg
push
jo
inc
dec
xchg
sub
scas
or
or
cmp
lods
scas
insb
cmp
lock
jg
rolb
cwtl
push
sub
adc
dec
loope
xchg
pop
in
add
imul
outsl
push
ds
cld
jp
sti
fstl
inc
add
cltd
push
dec
push
sub
cwtl
jle
mov
ret
ljmp
popa
and
jecxz
std
add
rorb
stos
mov
adc
cmpb
addb
dec
xchg
arpl
cmp
rorl
pop
sub
xor
stos
xchg
mov
inc
mov
pop
push
jns
mov
and
ljmp
testb
ret
lea
dec
mov
lret
loope
xor
out
sub
int
mov
pop
inc
dec
or
in
mov
popf
hlt
inc
arpl
xchg
push
movsl
das
hlt
cld
push
cmpsl
je
int3
daa
aaa
ret
int
les
mov
cmp
out
adc
jmp
mov
ds
cmp
std
fs
xchg
cmpsl
das
stos
lea
into
iret
or
sub
leave
cmp
inc
stos
mov
das
xor
jbe
add
push
push
inc
and
movsb
test
movsb
lds
pop
int3
stc
mov
test
dec
push
pushf
movsb
les
iret
lods
sahf
popf
ljmp
mov
and
call
mov
movsb
jns
xor
pop
loopne
js
inc
ret
jns
add
stos
insl
loop
shlb
inc
lret
pop
xchg
sbb
pop
cli
push
lods
outsb
mov
add
jecxz
inc
bound
sarb
roll
dec
and
jmp
xorb
nop
es
mov
out
call
cmp
adc
lods
jo
push
sbb
xor
daa
das
push
pop
fistl
push
or
jo
or
aam
dec
add
adc
dec
pop
notb
lahf
adc
fisttps
mov
into
pop
fsubl
or
rorl
scas
aad
mov
or
mov
or
add
cmp
adc
cmp
push
in
iret
test
inc
jne
out
xchg
jbe
mov
push
dec
pop
out
lods
mov
cld
mov
repnz
pop
adc
dec
cmpsl
sub
adc
test
imul
inc
mov
bnd
lret
pop
dec
dec
xchg
gs
dec
adcb
lds
pusha
mov
pop
jnp
mov
sbb
push
or
scas
test
jb
or
hlt
nop
fidivs
call
inc
hlt
or
dec
cs
les
dec
xchg
mov
jno
repz
mov
lods
mov
jp
rcll
sahf
insb
inc
in
xchg
loop
mov
es
scas
test
loopne
jae
jbe
xlat
roll
sbb
xchg
pop
test
js
rolb
cmpsb
xchg
add
mov
out
sbb
fwait
and
push
mov
iret
cmc
cwtl
push
imul
cmp
mov
add
push
call
insb
inc
mov
cmp
xchg
fldenv
ja
xchg
ret
xchg
popf
push
mov
push
add
neg
add
out
push
hlt
das
pop
mov
add
jge
int3
test
inc
andl
mov
and
push
mov
shrl
jns
lahf
jbe
addr16
insb
mov
push
add
std
aad
pop
nop
pop
jge
sbb
pushf
int3
bswap
data16
mov
mov
aad
jb
mov
ljmp
dec
in
pop
call
mov
scas
mov
cmp
jno
std
lret
inc
mov
xchg
lcall
push
roll
sub
xor
test
push
mov
in
jle
jmp
inc
push
jnp
and
jno
sbb
mov
add
stos
mov
pop
sbb
jae
aaa
into
push
nop
mov
inc
test
cli
dec
fadd
stc
xchg
mov
add
ss
fdivl
sub
cmp
ficoms
inc
mov
xchg
orb
dec
xchg
adc
xchg
rolb
pop
repnz
cld
inc
rcrl
xor
and
outsb
repz
mov
mov
jne
xchg
or
add
fidivs
cli
in
addr16
imul
and
call
xlat
lret
inc
aam
push
and
sbb
sbb
fnsave
fstps
add
lcall
jecxz
out
mov
ja
dec
cmp
mov
sub
rclb
scas
mov
pop
mov
clc
jns
adc
sbb
xchg
fwait
dec
or
jo
fisubs
out
mov
ljmp
pop
xchg
testb
das
nop
imul
stos
or
mov
mov
aam
add
cltd
xor
fwait
xchg
mov
xor
aaa
mov
jle
daa
pop
dec
popf
xor
jns
in
xlat
inc
sti
pushf
lret
fsubrl
call
shlb
mov
or
stc
lcall
popa
call
stos
pop
lds
fnstenv
dec
in
cmp
pop
pop
push
enter
sarb
test
sbb
push
inc
sahf
sti
add
jo
mov
dec
popf
out
inc
mov
in
adc
sub
test
mov
outsb
sbb
in
sbb
xor
pushf
rcll
repnz
push
cmpsb
sub
pop
cmp
shlb
pushf
jmp
xor
into
or
xor
pop
sbb
popa
stc
test
xchg
sub
clc
push
or
mov
cmpsb
popf
push
pop
and
cmc
xchg
in
add
or
and
fs
aam
orb
loope
hlt
add
xor
cmpsl
outsl
add
push
push
inc
cmp
sbb
push
scas
or
xor
aad
arpl
aaa
push
jns
sub
dec
out
and
std
adc
jmp
and
push
lds
mov
ja
xchg
pop
pusha
add
aas
adc
adc
jbe
imul
sbb
cli
mov
add
aaa
fisubs
insl
mov
outsl
fiaddl
ljmp
mov
fstps
jmp
xor
xorb
xor
inc
cwtl
inc
sbb
pop
sbb
ja
push
addr16
bnd
mov
jp
adc
pusha
pop
mov
es
sub
mov
ja
jb
add
in
iret
inc
roll
jecxz
adc
mov
popf
in
in
and
mov
cmp
jmp
sbb
out
sub
ss
data16
sahf
or
aad
cmpsb
mov
jecxz
inc
adcl
add
mov
pop
push
scas
add
arpl
and
jnp
lock
nop
adc
mov
push
lcall
stos
lock
jbe
movb
sbb
xchg
push
mov
test
pop
inc
jns
addr16
or
stc
jno
fiaddl
jno
add
xlat
or
insl
lds
mov
hlt
daa
pop
pop
pop
popa
xor
dec
dec
jne
jno
pop
stc
push
scas
jl
dec
adc
mov
ret
pop
loop
and
pop
fwait
lret
cmpsl
xor
hlt
push
out
fxch
add
lcall
arpl
hlt
add
mov
movsb
imull
adc
sub
movb
popa
sbb
out
pop
out
cmpb
and
xchg
sub
hlt
pusha
adc
icebp
mov
test
xor
pop
leave
aas
out
mov
gs
jno
cli
mov
jne
rcr
enter
lds
js
add
lcall
repz
notl
lret
pop
stos
and
std
cmp
dec
inc
insb
or
xchg
xlat
mov
jp
loop
push
jns
ret
idivb
push
rolb
mov
out
fisubs
out
add
push
pop
sbb
xchg
mov
pop
inc
sub
es
push
lret
ret
mov
xchg
cwtl
outsl
cmp
fcmove
adc
jmp
bound
mov
fldcw
fstl
inc
loop
popa
mov
sub
cwtl
jbe
xor
mov
or
pextrw
mov
or
mov
jne
repz
inc
into
add
shll
dec
or
push
or
loope
daa
add
inc
cld
fadds
lods
inc
pop
outsl
pop
xchg
sbb
negl
scas
pop
xchg
mov
mov
pop
sub
pop
xor
aad
xchg
daa
mov
int
pop
adcb
jecxz
ret
imul
push
imul
and
jae
and
fwait
xor
mov
mov
insl
in
xor
or
out
aaa
dec
dec
or
mov
mov
pop
mov
shrl
in
sbb
push
ret
add
cmpsb
push
out
push
das
push
xlat
add
gs
fimuls
adc
fucomp
mov
pop
jo
imul
popa
xchg
fstpt
cmp
pusha
cmpl
ja
in
cltd
mov
xchg
inc
nop
jmp
cmp
xor
dec
das
fildll
incb
outsb
xor
xchg
lcall
xchg
adc
cmp
lods
or
js
sbb
and
mov
movsl
xorb
movsl
add
jg
dec
in
push
movsl
lock
and
push
sarl
repz
sub
jecxz
lds
dec
std
int
fcompl
pop
xor
xchg
push
sub
push
add
fmuls
push
out
fwait
lret
lcall
fists
in
or
mov
mov
xor
ljmp
jp
pop
aaa
fisttpl
cmp
out
outsl
insb
orb
xor
jl
pmulhw
inc
cmp
or
sub
test
mov
lea
daa
fstpt
dec
mov
mov
ret
and
inc
cltd
pushf
xorb
lods
addl
aad
adc
out
not
push
add
es
xchg
jl
stc
movsl
icebp
popf
pop
loop
out
pop
and
cmc
neg
jns
jp
pop
pop
in
and
loope
pusha
loopne
data16
mov
lea
sub
jne
jmp
in
mov
jno
lahf
adc
push
lods
ret
std
mov
test
movsb
pop
push
cmpsb
ljmp
rorb
out
xor
shrb
in
mov
ret
sbb
lahf
dec
push
add
fisttps
jle
cli
out
jp
stc
jns
sbb
ret
addl
mov
jl
cmp
call
mov
movsb
mov
xor
outsl
inc
outsb
addr16
mov
test
adcl
das
xchg
or
adcl
mov
loopne
test
cmp
ss
dec
scas
adc
dec
mov
test
fistpll
mov
aas
pushl
into
sub
jmp
lds
andb
mov
ja
adc
push
ljmp
data16
mov
sbb
iret
sub
enter
imul
xchg
aam
sub
pop
in
xchg
gs
xor
xlat
xchg
mov
dec
or
push
sub
addr16
jae
adc
and
mov
jnp
push
inc
arpl
popa
js
fsubrp
jno
in
dec
popf
sbb
push
push
lea
pop
dec
xchg
loop
out
mov
aad
popa
aaa
fnstcw
imul
aaa
mov
addr16
ds
jmp
int
testb
jl
or
arpl
xor
mov
push
add
cld
dec
rclb
lret
push
ja
lock
dec
clc
test
data16
fidivrl
pusha
jle
mov
shlb
jno
and
es
les
adc
xlat
lods
shll
gs
mov
dec
ret
out
dec
mov
mov
xor
sub
insb
out
aaa
pop
pop
and
mov
out
push
add
jne
cwtl
js
fs
xor
push
ljmp
jo
push
add
out
dec
mov
xchg
stos
jne
rcll
add
mov
cmpsl
cmpsl
decl
cli
cmp
and
mov
clc
push
and
xor
mov
outsl
sahf
pop
clc
jp
lea
jbe
imul
add
sub
xchg
rolb
out
mov
les
push
addr16
sbb
inc
adc
cmp
adc
sbb
jnp
dec
or
push
out
dec
push
jnp
adc
xchg
arpl
insb
push
adc
xchg
mov
mov
adc
btr
popa
xor
inc
sarb
das
mov
jno
adc
add
cld
inc
mov
mov
xor
movsl
jae
add
inc
cmp
bound
and
adc
test
andb
xchg
ret
addr16
pop
test
gs
inc
das
adc
and
sahf
fmul
adc
jns
mov
aaa
insb
push
or
repnz
stc
fcoml
repnz
js
les
sub
push
sbbb
mov
daa
sub
loopne
jge
adc
repnz
pop
mov
scas
xchg
addr16
arpl
pop
sbb
lret
std
inc
xchg
mov
push
mov
pusha
clc
xchg
aas
sub
hlt
pop
ss
mov
loopne
push
cmp
adc
roll
fnsave
packssdw
outsb
lahf
add
push
mov
push
stc
gs
cmp
orb
fucomi
mov
fsubr
out
add
movsb
mov
test
lds
fnsave
cmp
xchg
mov
xchg
and
or
enter
cmp
xchg
stos
cltd
or
add
mov
cmc
xchg
pop
inc
mov
fwait
push
icebp
loop
sub
shll
xchg
jnp
mov
xorb
jae
repz
push
mov
push
addr16
imul
cmp
stos
push
and
xchg
xchg
adc
adc
xor
xchg
in
and
cmpsb
dec
xchg
loop
jne
mov
and
and
frstor
jno
cmp
xchg
out
pop
out
incb
jge
out
dec
xchg
mov
pop
xor
arpl
mov
inc
sbb
adc
or
xchg
std
jecxz
or
fs
xchg
push
out
fnstcw
inc
adc
xor
pop
mov
clc
cmp
or
sbb
cmp
adc
mov
leave
mov
mov
add
push
lds
add
pop
xor
out
les
pop
pop
push
push
sbb
fiaddl
mov
sbb
sbb
cli
stos
push
gs
fwait
lods
dec
stos
add
sbb
ret
and
test
test
xchg
ds
adc
xor
data16
mov
cmp
push
pushf
mov
je
lods
lret
js
jnp
inc
aaa
mov
xchg
aaa
pop
mov
loop,pt
push
jl
mov
mov
idivl
dec
scas
ret
xchg
pop
aam
xchg
or
jo
out
fsub
jge
inc
push
jns
adc
push
cwtl
addb
mov
clc
and
in
sar
in
je
jmp
out
xor
jne
or
dec
dec
cmc
out
or
scas
imul
jo
addr16
mov
aas
cmp
cli
cs
shll
out
icebp
xchg
aam
rep
pop
je
movsb
mov
add
mov
fdivl
push
mov
inc
dec
sub
xor
pop
sbb
push
xor
ret
jl
add
mov
push
jne
mov
sbb
mov
movl
adc
cwtl
xor
or
sub
dec
es
loope
xchg
adc
adc
mov
adc
int
push
xor
mov
mov
subl
pop
xor
adc
int
push
inc
jne
lods
lret
adc
rolb
lcall
sti
push
testb
loop
push
inc
xor
insb
sub
dec
pop
lds
jle
daa
push
push
or
xor
lea
jae
dec
push
xor
lods
aad
or
push
pop
or
fstp
xlat
push
stc
adc
push
push
sbb
or
dec
lds
mov
gs
movsl
out
xor
test
loop
pop
test
cmp
rclb
cli
dec
fimuls
pop
adc
or
sbb
cmc
adc
pushl
mov
repz
mov
mov
flds
add
xor
jnp
inc
adc
fstps
sub
inc
insb
add
xchg
lea
fwait
jle
and
cmp
sub
shlb
add
nop
imul
stc
out
arpl
push
cmpsb
cwtl
pop
add
out
cmpb
fisttpll
outsb
fwait
adc
sub
ss
mov
in
iret
mov
inc
sbb
cld
and
push
jle
mov
cmpxchg
push
gs
out
pushf
and
pop
xchg
pop
mov
dec
push
fstps
xchg
cmpl
sbb
sbb
push
shrl
adc
pop
mov
fisttps
mov
or
ret
ret
add
fadd
and
div
popf
xor
xor
jle
in
mov
sub
lcall
sbb
repz
scas
jecxz
mov
stos
call
mov
fbstp
fwait
sbb
popa
pop
std
fldl
sbb
mov
mov
stos
adc
inc
cmp
xchg
xor
sub
push
dec
sbb
lret
mov
loop
lahf
adc
test
fdivl
push
flds
cmp
mov
sub
pop
andb
adc
sbb
xchg
xchg
mov
dec
or
and
push
out
popa
popa
into
jle
lahf
jo
jo
cli
daa
sub
stos
pop
imul
aam
sbb
aaa
adc
jno
or
fld
pop
dec
cmp
stos
fs
in
mov
sahf
or
inc
add
add
fildl
repnz
adc
xor
loop
push
movl
dec
rorb
push
or
out
xor
push
pop
jmp
pusha
sub
loopne
push
adc
xor
cmp
aas
cmp
divb
cmpsl
rorl
xor
sub
call
xchg
or
insl
xchg
aas
rcrb
outsl
movsl
xor
jae
testl
jge
sub
notl
push
mov
mov
stos
dec
and
lea
add
out
xchg
xchg
comiss
inc
mov
clc
imul
lret
xor
popa
outsb
mov
popf
and
sub
fdivr
cmp
je
scas
sbb
or
repz
sbb
pop
xchg
pop
scas
mull
jg
enter
int
adc
lret
lret
fwait
jp
and
fwait
dec
js
mov
jp
es
test
loopne
dec
std
xchg
or
leave
cmp
inc
repz
dec
in
fistps
cmp
or
xchg
sub
faddl
test
jl
in
xor
cmp
mov
xchg
data16
fadds
daa
jae
mov
vpmacsww
int
test
mov
jle
jb
movsb
mov
insb
jb
leave
push
mov
sub
sub
cmp
xchg
xchg
cmp
in
orl
xchg
cmp
mov
gs
mov
inc
push
jns
mov
sub
adc
dec
cmp
jno
cmpsl
sbb
push
mov
aam
test
daa
and
mov
popf
cld
sub
sub
insb
pop
and
add
push
cmp
out
cmp
outsl
adc
adc
test
cli
mov
sub
cmp
pop
dec
push
jl
lods
je
lock
xor
sbb
mov
and
xchg
sbbb
sbbb
push
add
mov
and
push
nop
lahf
jns
adc
subb
test
mov
inc
or
in
cld
fisttpll
pop
push
lret
push
dec
xor
lret
scas
rcrb
repz
loope
cmpsb
lret
icebp
std
pusha
aam
sti
mov
inc
pusha
lret
clc
int
push
cs
imul
jne
stos
stos
lods
push
mov
cmc
mov
hlt
aad
pop
and
xor
pop
arpl
addr16
movsl
out
insl
das
insl
orl
in
sahf
loopne
push
insb
fnsave
loopne
inc
push
test
lret
xchg
pop
shl
les
and
popf
lret
shlb
xchg
cmp
ds
mov
cmp
push
loop
rorb
xchg
sub
mov
ret
jnp
and
ljmp
pop
cmp
xor
lahf
movsb
jl
les
cwtl
aad
sbb
fisubrs
lret
aam
dec
sarb
mov
movsl
cmp
pop
pop
pop
push
or
cmp
mov
adc
or
call
jae
mov
mov
movsl
add
pop
fs
orb
movsb
push
fisubrs
mov
jnp
fldpi
push
adc
push
ret
test
notb
jns
jge
popl
mov
push
jb
and
mov
imul
push
out
add
sti
adc
or
gs
test
sub
ss
mov
lahf
repnz
mov
cmp
out
sub
sub
pop
sarl
sbb
sbb
mov
push
mov
push
std
inc
cmp
xchg
cld
daa
cmp
jnp
mov
or
push
les
sbb
cli
jns
sbb
inc
mov
jg
adc
call
mov
push
xchg
out
inc
lcall
fwait
in
fsubp
pop
inc
fstpt
or
rcll
nop
mov
stos
faddp
test
setp
add
les
xchg
adc
and
jnp
in
pop
xchg
int
and
enter
loope
sbb
mov
ljmp
div
xor
sbb
cmovnp
ss
leave
or
mov
shll
xor
jl
fwait
add
pop
adc
xor
aaa
mov
dec
fmul
out
sub
arpl
stos
mov
pushf
cmp
xchg
es
mov
xchg
das
add
jmp
test
or
jno
mov
pop
push
sbb
push
popa
mov
fwait
in
cli
jbe
test
clc
add
jp
fadds
sbb
es
loopne
inc
lcall
addb
in
and
sub
xor
push
mov
mov
mov
pop
arpl
mov
or
test
push
div
stos
stc
daa
jnp
mov
push
data16
repz
mov
sbb
mov
pop
std
xchg
jno
fs
nop
dec
xor
lret
cmpl
dec
scas
arpl
push
cmc
jp
mov
clc
into
fistps
fistpl
mov
mov
aas
ret
and
pop
call
cmp
cld
push
mov
mov
jge
jp
into
in
mov
aaa
mov
xor
lods
int3
push
cltd
xchg
mov
ret
lea
pop
add
push
in
xchg
daa
lods
pop
dec
dec
in
pop
mov
sub
mov
mov
sub
lds
add
ds
adc
insb
mov
rcr
adc
xor
adc
sbb
mov
lods
xor
xlat
jecxz
cmp
lock
jg
les
in
repz
add
pop
sub
and
jl
insb
in
outsl
test
pop
testl
pop
jg
lock
and
adc
sahf
out
popa
fdivl
sub
cmp
fmul
idiv
or
into
jg
cmpsb
repnz
xor
add
add
lahf
scas
adc
mov
sbb
mov
cwtl
movsb
xor
mov
pop
out
dec
ret
jmp
aad
and
ror
cmp
add
jl
pop
xorl
test
lcall
pop
xor
jl
jmp
popa
add
cld
scas
jg
pop
sbb
popf
sbb
inc
xor
lcall
data16
insb
pushf
lret
push
and
mov
and
mov
dec
push
gs
aad
mov
inc
pop
sti
add
or
push
and
and
jno
rcrl
push
into
shlb
inc
inc
or
std
les
cmp
sbb
inc
dec
adc
jge
adc
mov
or
inc
pop
or
xor
push
jmp
fcomi
idivl
xchg
imul
xor
or
inc
ret
dec
sub
inc
cmp
mov
icebp
and
inc
pop
lock
mov
push
pop
movsb
push
repnz
jo
bound
pop
jle
push
sub
insl
xchg
sahf
xchg
hlt
cmpsl
call
sti
mov
pop
add
pop
inc
hlt
stos
aaa
and
fwait
repz
jmp
test
loopne
jge
fs
sbb
push
cwtl
rorb
xchg
cmp
sbb
bnd
xor
adc
js
adc
cs
mov
add
push
fbld
inc
sbb
xchg
push
in
lods
mov
add
stos
xor
out
adc
sub
mov
jle
push
or
xchg
xchg
jne
cmp
and
call
sbb
stos
mov
mov
push
jbe
xchg
cmp
repz
inc
xchg
pop
xor
adc
xchg
addb
sbb
fbld
xor
pop
lret
sub
adc
mov
loop
jl
ret
mov
inc
loop
testl
lods
xchg
orb
clc
jne
out
push
sbb
push
arpl
sub
adc
pusha
movsb
mov
mov
mov
dec
je
push
jo
mov
sub
pop
enter
push
add
adc
ja
in
fstpt
mov
rcrb
addr16
in
and
es
shrl
jmp
sbb
sbb
sbbl
dec
out
inc
sub
mov
pop
stos
add
adc
xchg
mov
lcall
sub
movsl
dec
loopne
sti
or
mov
fsubr
ljmp
rorl
mov
xor
out
adc
adc
inc
out
lds
fnstcw
iret
pop
cwtl
pop
ret
jmp
push
test
int
push
pop
leave
std
stc
popf
push
sbb
popf
fcom
insl
xor
push
loop
insb
es
repnz
lods
je
push
test
sbb
pop
aam
cmc
mov
fninit
lods
mov
jnp
push
lahf
adc
inc
mov
xor
in
jle
pop
jne
fbstp
dec
jo
push
jae
fidivl
mov
dec
mov
fists
cmc
lahf
loope
mov
push
test
inc
push
clc
jbe
jb
inc
inc
sub
rcrb
repz
scas
add
jle
mov
stos
push
sbb
int3
and
or
in
divb
xlat
movsb
test
movsl
xlat
jle
cmp
mov
cmp
mov
sub
loope
pop
addr16
in
mov
sahf
xchg
mov
pop
icebp
push
mov
xchg
dec
rcll
mov
imul
jno
into
insb
xor
cmp
dec
test
sbb
out
test
ss
popf
push
sbb
cmp
and
cltd
notl
jp
push
lcall
arpl
testl
hlt
stc
cmova
inc
imul
rcl
jg
cmp
insb
dec
scas
mov
shl
push
xchg
movsl
popa
nop
sbb
popf
cmc
lds
mov
cmc
lods
xorb
xlat
or
dec
pop
cwtl
aaa
jp
adc
scas
mov
sub
fbld
add
xchg
nop
or
xor
inc
mov
and
popf
loop
cmp
xchg
outsl
insb
dec
sbb
cld
sub
push
sbb
stos
cltd
loop
fdivrl
cmpsb
adc
sbb
mov
sub
jne
loopne
xchg
mov
pop
lds
ss
add
push
mov
or
stos
xor
rcr
mov
xor
pop
popf
scas
jae
xchg
jns
mov
insb
clc
imull
sahf
jno
loope
pop
cmp
adc
movsb
imul
lods
out
xchg
xor
xor
scas
and
xchg
jno
stc
mov
pop
scas
loope
sbb
mov
sub
cwtl
push
xorl
dec
insl
repnz
fwait
ljmp
sbb
or
mov
mov
xchg
outsw
and
lret
jne
pop
sarb
cmpsb
das
in
shlb
or
out
pop
or
push
orb
pushf
mov
sbb
fwait
andl
add
out
shl
or
dec
movsl
je
and
mov
pushf
sbb
push
push
mov
pop
outsl
cmp
test
lcall
das
inc
loope
mov
push
mov
fidivrs
sbb
out
lret
loope
or
fidivrl
jecxz
mov
jmp
sbb
and
cmp
push
and
les
xor
add
movsb
cwtl
xchg
aad
mov
jae
fisubs
int3
sbb
imul
popa
xor
mov
and
gs
jae
bound
or
icebp
cld
xlat
add
insb
mov
fildll
int3
je
xlat
jae
pusha
push
mov
jnp
jmp
xchg
jbe
inc
push
xchg
mov
fsubl
out
jecxz
push
xchg
aas
stos
aaa
in
add
inc
or
dec
lea
jl
stc
dec
push
cmpsb
lods
mov
jg
pop
fcomi
xor
sahf
push
jmp
stc
mov
mov
rol
mov
lods
stos
lods
add
jbe
or
mov
cs
stos
test
inc
adc
hlt
sahf
adc
jb
out
hlt
xor
pop
cmp
call
cmp
out
pop
dec
sbb
outsb
cmp
cmp
shrb
lcall
and
pop
cld
fildl
in
mov
rorb
out
lcall
sub
mov
mov
ret
mov
cld
mov
fs
or
andl
mov
dec
mov
cmp
enter
jae
bound
mov
mov
loope
push
pop
cli
dec
mov
movsb
sub
sub
js
adc
dec
pop
testb
nop
hlt
jb
pop
lds
popf
add
fldenv
test
sub
sub
mov
test
cmp
je
mov
repnz
lea
addr16
push
push
mov
cmp
sub
xchg
or
add
jge
int3
mov
jge
lock
das
ds
add
xor
call
push
mov
mov
push
dec
mov
jge
xor
push
adc
jecxz
mov
notb
xchg
mov
dec
popa
jae
push
add
stos
inc
and
cltd
adc
cwtl
push
xchg
je
mov
push
ljmp
test
aam
and
xor
mov
push
lods
inc
ficoml
inc
popf
jle
clc
push
ljmp
and
popa
sub
mov
pop
or
imul
inc
pop
fwait
push
pop
out
mov
jnp
jp
cmp
mov
mov
jmp
in
pusha
push
test
inc
mov
lcall
adc
pop
clc
dec
xchg
nop
and
dec
pop
icebp
imul
iret
fimull
in
stc
sbbb
ja
cli
cmc
aaa
mov
std
jo
mov
inc
mov
cmp
mov
mov
adc
mov
sarl
movsl
jns
lds
test
or
jmp
movsl
push
jbe
lock
sahf
push
loope
pop
jle
adc
cmc
std
and
scas
movsl
add
mov
out
pop
rcrl
inc
push
mov
stc
pop
mov
mov
lods
add
xor
ficoms
dec
dec
cli
pop
add
aad
lret
pop
and
xlat
push
mov
mov
aaa
mov
mov
mov
jp
pop
jae
dec
lds
je
mov
lcall
subl
outsb
jmp
sub
cmp
hlt
and
jle
fs
imul
cmpsb
shlb
cmpl
cmp
jne
and
fdivl
fs
xlat
jnp
sub
jno
sub
pop
mov
inc
xchg
call
pusha
pop
into
lret
xor
icebp
adc
das
push
jle
jg
jbe
push
orb
ja
sub
sub
mov
inc
inc
ret
shll
fcmove
pop
rorl
pushf
cmp
and
mov
call
fidivrs
fwait
data16
mov
cmp
xor
in
push
testb
fstpl
gs
pusha
push
fstpt
sub
loope
sarl
ss
xchg
and
add
or
int3
mov
fwait
or
loopne
std
in
jmp
dec
xchg
jl
fdivs
inc
xchg
add
loopne
filds
test
and
mov
ljmp
lods
out
and
outsb
jge
popf
mov
adc
imul
mov
cmpb
add
jo
fsubl
add
sti
sub
sti
mov
jno
mov
mov
lea
mov
rclb
cltd
sub
test
jo
sbb
mov
mov
ja
stc
lahf
ja
and
leave
std
or
cmp
fistl
ret
lret
xchg
call
adc
inc
fstps
cmp
push
ficoml
cmp
push
mov
jmp
ds
cmp
dec
insl
out
and
outsb
stos
inc
mov
in
xor
mov
jg
les
mov
daa
dec
jecxz
sub
icebp
imul
in
mov
lds
stc
aam
adc
into
scas
and
inc
sub
inc
jecxz
adcl
jo
dec
adc
push
sbb
add
cmc
loopne
nop
push
inc
xor
or
dec
add
push
xor
clc
gs
cwtl
dec
push
adc
and
lods
js
shrl
cmpsb
jmp
jnp
dec
xchg
clc
jno
pop
sub
jno
dec
jae
or
and
es
jno
jge
mov
sub
in
inc
fildll
xchg
popa
mov
jb
in
push
jp
or
jge
pop
xor
int3
ret
lea
cmp
pusha
lahf
pop
inc
mov
arpl
nop
fbstp
or
pop
adc
adc
xor
jl
ficomps
adc
dec
add
or
sbb
inc
cmp
imul
push
sbb
mov
sbb
push
and
test
lret
inc
dec
jne
xchg
shrb
cmpsb
push
mov
int3
stos
or
out
inc
pop
cmpl
dec
insl
rclb
std
xlat
in
push
fdivs
lea
addb
pop
testl
add
lcall
or
jge
daa
adc
xor
in
add
pop
das
cmp
pop
jge
in
stos
adcb
daa
ret
dec
imul
nop
jno
in
pop
mov
pushf
imul
arpl
xlat
push
aas
lahf
notl
rcrb
jg
jle
iret
inc
mov
xor
loope
push
push
xor
jae
lock
fxch
sti
movsl
push
jge
fadds
outsl
xor
insl
int3
ljmp
stc
jbe
inc
push
sbb
aaa
add
push
mov
stos
or
push
push
in
mov
pop
jne
lds
aad
xor
adc
lock
mov
mov
mov
cmp
dec
cltd
es
imul
js
push
fcomp
in
in
cmp
jmp
and
rol
in
fidivl
cmpsb
punpcklwd
mov
sbb
jae
jno
mov
and
cli
push
cmc
imul
sbbb
outsb
fsub
fdivp
data16
pop
sbb
and
jne
loope
fcom
or
jp
imul
das
pop
lret
jmp
xor
pusha
mov
ds
repz
inc
jle
aad
ja
lfs
je
mov
inc
idivb
mov
adc
mov
fwait
test
jl
mov
xchg
shlb
mov
scas
add
arpl
and
jmp
sbb
push
push
dec
xor
add
mov
sbb
in
dec
fistl
or
push
std
aam
push
cmp
imul
adc
jb
mov
cwtl
imul
imul
in
dec
mov
pop
scas
pop
xor
xchg
cltd
cli
xchg
mov
leave
mov
mov
popa
xchg
pop
dec
push
popf
pop
stos
sbb
push
jae
mov
ficoms
movsb
int3
bswap
add
jae
or
aad
fisubrl
add
cmp
mov
rcrb
ret
ja
xor
fisubs
fldenv
scas
or
mov
and
dec
xor
mov
pop
jno
add
cmp
push
leave
jns
jno
adc
sarb
push
sub
inc
cmpps
cmp
je
nop
fbstp
pop
push
push
fsubrs
ffreep
shll
mov
movsb
movsl
add
and
in
ret
imul
push
test
mov
pop
shrl
push
inc
into
inc
aam
mov
mov
jle
push
and
std
das
mov
xchg
xor
add
mov
int
lea
mov
jae
test
mov
pop
lock
ja
jmp
pushf
xor
dec
push
lods
aam
pop
and
stos
xor
je
mov
adc
in
adc
mov
mov
stos
fwait
in
dec
jmp
aad
jo
push
cmp
mov
js
std
mov
cmovo
or
sub
push
and
test
aas
pop
pop
mov
mov
gs
sbbb
sub
cmp
push
mov
shll
stc
incb
fnstcw
adcb
add
adc
pop
loopne
jne
dec
rolb
dec
mov
push
insl
jb
cmp
xchg
aam
shrb
mov
adc
loop
mov
stos
shll
pop
mov
aas
loopne
xor
sbb
sub
jmp
out
das
out
ret
adc
jae
stc
xchg
lock
inc
push
fisubrl
in
stos
enter
ret
fsubl
adc
mov
nop
into
ds
mov
ss
cld
fstpt
mov
aad
inc
shrb
loopne
pop
lret
push
lahf
sbb
nop
sub
inc
dec
push
es
sbb
ret
mov
adc
int
push
xor
jnp
xchg
pop
pop
les
sub
pop
jne
mov
xchg
rclb
movsb
push
and
mov
cmp
test
jge
ljmp
cld
cmp
hlt
mov
ds
cmp
cmpsb
loopne
out
dec
ret
or
jg
int3
jbe
ja
filds
imul
lods
mov
inc
lods
push
push
mov
push
sub
pop
dec
mov
add
loop
lahf
fmul
outsb
data16
sbb
lods
stos
ds
xchg
ljmp
xchg
insl
lret
inc
or
inc
pop
cmpsb
fisubrs
cmpl
leave
xchg
and
loope
sbb
stos
sub
mov
jb
push
cmp
add
lods
loop
jle
xchg
add
fs
ss
lea
lock
add
imul
jb
rorb
repnz
inc
jmp
into
cmovp
test
xor
gs
mov
sti
addl
mov
test
xchg
inc
cwtl
push
ljmp
mov
loope
mov
stos
add
mov
pop
sbb
and
aad
lcall
adc
into
sbb
movsb
push
out
andb
push
test
fcmovnbe
push
es
inc
xchg
loope
lret
pop
ret
addr16
mov
movsl
subl
je
imul
in
sbb
mov
add
cmpsb
cmpsl
or
shrl
loopne
or
repz
mov
xchg
jp
and
pop
jbe
stos
adc
shrb
mov
out
inc
sahf
push
dec
pusha
outsb
int3
rol
or
aas
lret
push
aam
cmp
hlt
jns
fidivrl
and
jo
sbb
mov
dec
nop
ja
cwtl
push
dec
popa
inc
pop
dec
and
test
sbb
cltd
outsl
cmpl
fs
mov
fdivp
shlb
out
sbb
leave
xor
dec
arpl
jbe
scas
das
ds
pop
pusha
adc
lahf
mov
shrl
pop
mov
sub
lret
inc
sub
stc
dec
pop
xor
mov
jmp
out
leave
adc
push
push
or
cmp
in
jl
or
stos
fisttpl
mov
push
sub
pop
sub
cwtl
outsl
pop
into
imul
fsubrl
jle
stos
and
jo
sbb
or
pop
sbb
mov
mov
mov
in
ljmp
ja
add
stc
sbb
jle
xor
xchg
loop
push
sbb
pushf
in
sbbl
cs
fimuls
push
xor
lret
iret
in
pop
xlat
ret
sub
jb
push
mul
mov
jae
clc
repz
shll
insl
jnp
or
inc
sbb
mov
andl
xor
mov
and
inc
inc
jns
mov
sbb
mov
test
ficompl
xchg
aas
dec
sub
xor
sti
push
repnz
mov
xor
sbb
pop
jge
mov
push
imul
aas
in
leave
in
push
mov
inc
cs
and
lods
leave
fbld
pop
or
into
xor
jnp
pusha
aad
icebp
stc
mov
xor
sub
jmp
cmp
movsb
imul
and
sti
xchg
push
push
adc
mov
cmp
out
push
js
mov
or
xor
push
and
test
loopne
data16
mov
inc
int
mov
push
sub
jo
mov
iret
cmp
inc
ret
jb
sub
inc
inc
lret
mov
cmp
xchg
cmp
inc
stos
xchg
cmp
outsb
jb
outsb
mov
scas
cmp
cmp
dec
mov
inc
test
inc
ret
pop
aam
addr16
loopne
gs
int3
sub
and
mov
sub
and
in
mov
lods
in
imul
mov
out
sbb
push
xor
and
test
call
in
mov
shl
cmp
insl
sbb
insb
jo
lea
repnz
popa
daa
push
stos
call
mov
adc
das
sub
std
flds
ljmp
mov
cmpb
div
xor
mov
cmp
movb
jp
pusha
sbb
mov
loop
fs
decb
data16
dec
insb
jl
add
jns
lods
pop
aad
negl
fwait
leave
lods
ss
mov
inc
jl
pop
sub
icebp
mov
sbb
daa
jno
pop
jg
dec
scas
cmp
mov
imul
pop
ficomps
dec
sbb
cmpsb
decl
arpl
in
push
decb
or
das
adc
push
inc
iret
mov
push
pop
dec
xor
push
cmpsb
sbb
repnz
pop
lods
lahf
xor
test
inc
lret
dec
out
repnz
xchg
loope
pop
xchg
mov
push
sub
orl
daa
aad
mov
xor
std
fistpl
sub
fsubs
xchg
mov
ljmp
adc
jle
sub
push
lret
cmc
pop
push
and
jb,pt
shl
lods
sbb
fndisi(8087
rcrl
push
push
mov
loope
cmp
dec
jl
fwait
ljmp
ss
test
cmp
pop
sar
and
in
aad
cmp
mov
movsl
inc
repnz
dec
aad
sub
ljmp
aam
mov
imul
pop
mov
push
sbb
add
out
cmpsl
fildl
mov
sbb
sub
cltd
pop
mov
negl
xchg
jl
addr16
stos
fadds
mov
inc
or
xor
insb
fnstenv
push
add
pop
lea
aas
sbb
stc
je
insl
int
pop
loop
or
call
int
aad
in
and
add
add
nop
cmp
movsl
fwait
and
pop
shrb
fcompl
add
push
clc
jle
push
mov
xchg
jno
imul
mov
mov
sbb
adc
adc
or
rcr
mov
dec
cli
adc
xchg
arpl
cmp
fisttpll
sub
dec
xchg
jp
ret
mov
dec
ja
lahf
out
test
ret
enter
pop
push
xor
dec
push
xorl
sbb
out
inc
mov
mov
ljmp
add
nop
xchg
adc
mov
lds
fs
dec
jmp
movsl
loopne
mov
add
lcall
test
bound
or
cmpsl
loopne
popf
lret
lods
mov
or
sarl
in
scas
lret
cld
xor
sub
in
arpl
cmpsl
pop
push
pop
mov
lahf
add
fs
rclb
and
jmp
mov
xchg
bound
mov
sbb
push
mul
mov
jmp
inc
lock
xor
pop
cmp
pop
dec
inc
cwtl
arpl
xchg
xor
jne
push
repz
arpl
sub
cltd
dec
int
test
fwait
pmulhuw
mov
add
into
jb
in
inc
lcall
pop
mov
cs
cmpsl
xchg
xchg
add
outsl
clc
loop
adc
insl
adc
cltd
cli
lret
xchg
pop
mov
jae
sbb
mov
jbe
test
xchg
out
sbb
sti
aad
xchg
jo
sub
loopne
xlat
cmp
rcrl
cmp
mov
mov
jne
aam
xlat
sbb
lock
lds
sbb
mov
pop
ret
insb
mov
test
in
mov
lret
mov
inc
lds
icebp
in
sub
mov
mov
push
adc
bnd
jns
mov
mov
mov
sbb
outsb
cmp
jbe
call
cmc
std
jno
pop
add
js
les
or
xchg
sbb
ss
mov
push
mov
negl
lcall
cmova
test
mov
int3
sbb
dec
hlt
arpl
cld
add
cmp
jmp
add
sub
cmp
sbb
in
and
jne
inc
jl
out
aam
in
jb
cmp
jp
mov
daa
or
adc
repnz
mov
add
cmp
mov
mull
or
mov
insb
decb
scas
mov
stc
or
jb
mov
mov
pop
jl
mov
add
int3
or
adc
scas
mov
sub
push
or
adc
pop
jnp
push
cmp
jo
sub
out
pushf
hlt
mov
inc
popa
inc
repz
out
pusha
pop
mov
cltd
fnstenv
mov
dec
jne
sbb
aad
daa
adc
out
lock
mov
mov
mov
test
pop
rcrl
jns
stos
sub
into
insl
ljmp
or
fbld
jg
sub
sub
mov
pop
pop
fcmovne
push
pop
mov
pusha
mov
jmp
add
int
push
push
stc
push
ret
adc
lret
insl
inc
xor
cwtl
pop
mov
bnd
insb
sub
xchg
xchg
sub
jbe
xor
mov
inc
int3
out
sub
sbb
jns
jns
sub
mov
sub
scas
test
lahf
aam
aaa
daa
sti
xchg
outsb
sbb
lods
adc
add
icebp
jne
fdiv
xor
data16
jge
mov
inc
cld
out
sub
sbbb
gs
scas
sahf
loopnew
or
or
push
jo
pop
fdivrl
sbb
sbbl
mov
mov
pop
sbb
call
mov
xlat
mov
lcall
out
push
negl
lods
xchg
inc
sbb
js
xchg
rcr
popa
mov
dec
fistps
aaa
dec
jno
stc
cmp
outsb
mov
dec
ss
hlt
push
mov
notb
adc
cmp
xadd
iret
add
aam
dec
cli
mov
push
inc
inc
faddl
pop
inc
test
xor
mov
repz
mov
loop
aad
test
pop
outsl
mov
sbb
mov
test
jo
inc
push
sarl
add
lock
dec
movsb
adc
jbe
scas
das
test
push
imul
fnstsw
lcall
jne
test
xor
cmpsb
mov
xchg
mov
xor
push
push
and
push
bound
inc
cltd
leave
sbb
loope
loop
in
push
mov
add
divl
out
jnp
loop
subl
ret
pop
sub
cmc
movsl
push
imul
ret
not
xor
push
sti
lret
jne
dec
lock
jl
pop
xlat
mov
jne
pop
sbb
mov
fwait
mov
aaa
add
sbb
pusha
std
loop
or
ds
sbb
sbb
popa
out
aad
pop
stos
test
lock
lcall
imul
je
pop
push
dec
and
push
push
xchg
or
or
and
mov
cmc
inc
sbb
mov
sbb
xchg
adc
bound
sbb
ds
popa
mov
test
jmp
adc
mov
addr16
ss
sub
lods
pop
jg
test
imulb
dec
xor
notb
loop
addb
xchg
ret
jl
test
mov
and
jmp
insb
add
loopne
sbb
jno
jae
in
sub
ret
pop
mov
xor
jl
adc
xor
fidivrs
cmp
mov
fistpll
push
inc
test
lea
xchg
sub
pusha
push
arpl
push
mov
data16
jecxz
dec
adc
push
movsb
aaa
mov
pop
or
rorl
lahf
insl
iret
lock
mov
mov
inc
in
xchg
js
shlb
add
xor
dec
jne
lret
sbb
fs
or
or
xor
sub
and
imul
fwait
iret
pop
das
push
xor
xchg
aas
jecxz
jne
fsubr
jg
gs
mov
push
dec
xor
or
xchg
leave
fistl
or
in
cli
leave
and
lods
cmp
and
or
je
and
fstps
inc
movl
jl
std
imul
out
fisubl
fucomip
jmp
dec
mov
and
fsubs
lcall
outsl
std
pop
xchg
pushl
add
pop
inc
dec
les
jbe
sbb
dec
or
xor
xor
cwtl
ret
sub
xor
int
divb
push
iret
sbb
xchg
jecxz
push
jns
add
cmpsb
pusha
pop
cmp
xor
fisttps
push
dec
cmp
or
cmpl
pop
xor
cmp
mov
add
les
inc
mov
test
rorb
xchg
inc
packssdw
cli
loopne
jecxz
fsubrs
hlt
push
push
jbe
xor
mov
xchg
mov
outsb
push
sub
adc
out
pop
jne
stos
fimull
adc
xor
push
lcall
and
mov
push
mov
inc
rorb
repz
mov
outsl
dec
sbb
cs
and
dec
xchg
ror
daa
stos
bound
test
or
dec
loopne
mov
and
push
mov
mov
sti
repz
shrb
ljmp
dec
mov
jl
fistps
inc
jne
fiaddl
ret
sub
mov
cmp
adc
mov
in
mov
lods
into
divl
in
jp
sbb
xabort
or
and
test
inc
or
pop
and
mov
mov
cs
mov
pop
push
movsl
push
mov
mov
jae
addr16
bound
outsb
stos
xchg
out
pop
shlb
xchg
push
mov
int
add
dec
test
pop
shll
xchg
test
pop
pusha
in
in
daa
mov
je
push
push
pop
outsl
jb
rcll
outsb
xchg
shrb
clc
loope
movsb
loop
rcll
lods
arpl
popa
pusha
cmc
cmp
pop
pusha
xor
or
movsl
popf
data16
mov
pop
fiaddl
sub
pop
cmp
mov
xor
sbb
inc
jno
lret
or
push
movsl
sub
mov
jbe
je
jp
lods
stc
xchg
inc
test
leave
xor
paddw
pop
mov
test
jb
imul
scas
xchg
mov
jmp
shlb
xor
mov
in
das
sub
lahf
jnp
jp
add
hlt
inc
mov
call
and
sub
mov
add
inc
ror
xor
std
or
dec
xchg
mov
pop
cmp
mov
cltd
mov
push
je
cmc
rclb
and
sbb
les
sbb
xchg
fwait
mov
xlat
mov
imul
cltd
or
pop
sub
sti
mov
push
pop
arpl
ds
movsb
xor
cwtl
pusha
mov
in
cld
loopne
add
fldt
cmp
sub
mov
icebp
cld
insb
ljmp
mov
mov
out
sub
mov
add
cld
push
mov
pushf
ret
insl
pop
stos
xchg
dec
mov
outsl
inc
cli
fcompl
bswap
mov
int3
pop
cmp
pop
inc
xchg
int
cmpsl
cli
pushl
add
int3
cmp
mov
icebp
dec
loope
jl
dec
les
test
bound
fwait
jecxz
sub
cld
lret
jae
push
shll
push
pop
inc
push
or
sti
xchg
stos
mov
lds
stos
in
fwait
pop
pop
out
cs
and
pop
adcb
jo
je
pop
ljmp
stos
dec
push
adc
ret
test
jbe
sub
lcall
pop
push
push
call
in
xchg
or
test
push
sbb
pop
addr16
xchg
mov
adc
loopne
movsl
jb
sub
mov
dec
push
jno
and
dec
add
fwait
imul
and
cli
push
dec
hlt
mov
lock
adc
add
dec
push
es
xchg
outsb
or
fwait
mov
mov
mov
or
or
mov
inc
gs
cmc
fst
repz
sbb
and
jl
sub
test
push
jge
je
cmp
iret
mov
sahf
aas
xchg
mov
lahf
push
pushw
mov
rolb
or
fisubl
aam
into
and
call
ljmp
test
movsb
movsl
daa
add
xchg
inc
bound
hlt
dec
andb
ret
bound
push
fidivrl
cli
mov
inc
popa
sub
push
mov
mov
out
popa
add
ror
ds
in
mov
data16
mov
insl
inc
ljmp
mov
outsb
mov
mov
enter
inc
mov
imul
pop
pop
lahf
adc
std
in
mov
xchg
insl
lods
xor
cltd
js
aam
push
leave
in
movsl
jge
pushw
add
xchg
loop
nop
fucomp
xor
jp
push
inc
test
addb
daa
push
mov
push
repnz
push
mov
push
mov
or
pop
popa
pop
push
rorb
fisubrs
or
cmp
dec
aad
lds
push
sub
jns
push
pop
test
imul
pop
cmpsl
dec
shlb
shlb
cltd
cmp
adc
xor
mov
aas
loop
add
mov
xchg
je
jae
pop
mov
sahf
cmpl
and
popf
sub
jb
mov
and
cwtl
data16
sub
aad
or
lcall
stc
push
mov
push
pop
out
xchg
xchg
ss
mov
xor
sahf
mov
dec
cwtl
pop
dec
pop
out
sub
test
add
daa
in
cmp
cli
push
mov
push
das
roll
jp
or
test
inc
cmp
pushl
pop
movsl
lea
test
sbb
mov
das
fildl
loopne
dec
enter
ds
decl
lock
enter
pop
jg
sub
pop
cmp
inc
and
or
stos
inc
pop
push
lret
arpl
pop
push
sar
mov
pop
push
das
jns
push
rcrb
decl
add
and
movsb
les
lds
std
dec
ror
pop
push
nop
cmpb
inc
ds
dec
aad
jne
dec
lods
inc
cld
stos
lea
mov
in
xchg
or
sub
sbb
cli
dec
xchg
and
imul
scas
xchg
add
fwait
jbe
jg
cltd
fsubs
lret
jns
cmp
loope
fcoml
test
and
dec
sub
enter
jnp
inc
icebp
sub
adc
int3
xor
int3
ss
jge
jge
lea
sahf
mov
jmp
pop
push
xchg
ss
cld
scas
out
fsub
dec
pop
cli
dec
xor
je
hlt
push
xchg
xchg
xlat
add
roll
leave
jp
aas
inc
test
pop
scas
scas
jle
lret
cmpsb
divl
enter
ljmp
cmpsb
out
aam
faddl
cmp
xchg
aas
pop
inc
or
jne
fsubs
jae
push
dec
push
push
dec
lret
push
mov
iret
sbb
popf
push
cltd
lock
adc
sub
fcmovnu
sti
xor
and
push
and
dec
int
daa
imul
xchg
jl
xor
loop
dec
les
mov
mov
mov
in
scas
fisttpl
sahf
mov
sub
push
iret
pushf
cmpsb
outsb
push
fcmovnbe
cmpsb
enter
outsb
fadd
shl
mov
int
mov
xchg
pop
int
jne
aad
mov
pop
testl
jnp
xchg
popa
int3
jg
lret
add
dec
fst
aaa
push
loopne
cwtl
lahf
bnd
push
xchg
movsl
add
jl
xor
pop
lods
stos
ret
push
jo
cvtpi2ps
lds
or
lcall
mov
fsubl
or
fists
enter
rolb
add
call
cmp
test
push
cld
mov
xchg
mov
mov
jle
stc
scas
jo
fucomip
nop
mull
push
xor
sbb
out
loopnew
js
mov
jns
inc
adc
mov
push
cmpsl
jg
into
mov
rcr
adc
mov
push
imul
mov
cmp
push
cmp
xor
ja
jge
mov
sbb
rol
addr16
jp
js
imul
jb
fidivl
jbe
and
jmp
lret
in
out
jp
test
lds
aam
mov
dec
mov
sbb
push
mov
fwait
jns
sub
lahf
arpl
jle
dec
scas
mov
inc
fcomip
cmp
dec
push
dec
test
imul
xchg
inc
sub
inc
ret
pop
jb
dec
in
loopne
mov
ja
xor
mov
pop
jecxz
shll
test
xor
inc
dec
and
aad
inc
iret
push
mov
lret
in
xchg
lock
lret
rcll
sub
rorl
out
scas
cwtl
and
mov
pop
dec
loopne
bound
std
dec
xchg
iret
push
insb
push
lock
cmp
das
fsts
loopne
and
xchg
jl
lcall
mulb
imul
adc
pusha
dec
xchg
dec
pop
lds
sti
ficompl
mov
dec
gs
or
int
pop
mov
int3
lea
sub
popa
adcb
out
pop
pop
add
gs
shll
push
int3
lcall
int
push
cmp
xor
xor
jge
adc
arpl
fldt
inc
push
lret
inc
leave
pop
inc
xor
pushf
mov
jbe
cwtl
sub
scas
cmc
pop
inc
pop
jmp
adc
mov
xchg
mov
outsb
inc
cmpsb
addr16
dec
mov
jnp
pop
mov
adc
into
push
jb
hlt
or
repnz
or
dec
cmpl
rol
mov
mov
mov
add
mov
and
or
into
jo
jecxz
sbb
orl
jge
jmp
mov
mov
ret
and
mov
int
pop
mov
mov
cmp
movsb
enter
xor
outsl
into
jns
push
inc
pop
adc
dec
sub
out
mov
fcoml
fcmovne
repnz
out
and
pop
and
push
sahf
xor
fnsave
jmp
call
jnp
or
xchg
sti
cmp
leave
ret
fsave
mov
pop
mov
push
insl
jns
imulb
xchg
adc
push
es
inc
popf
roll
sahf
cli
stos
outsb
and
mov
movsl
jns
aaa
pop
ds
dec
mov
insl
mov
popa
rcr
and
cmc
or
out
out
pop
loope
fidivs
out
out
ja
aam
xchg
imul
sub
je
sbb
push
cmp
sti
sub
icebp
mov
jl
push
rorl
adc
jnp
mov
out
jle
ljmp
imul
jp
jno
cmpsb
sti
inc
popf
pop
std
jmp
jbe
push
mov
fs
push
hlt
test
cmpsl
outsb
clc
pop
or
cmc
sub
fildll
sbb
cwtl
cmp
add
in
loope
cmpsb
aas
xchg
mov
lock
mov
inc
push
cmp
fsub
arpl
push
icebp
jae
add
inc
cmp
pop
add
in
cmp
or
push
pop
lahf
push
sub
fwait
add
sbb
pop
push
push
xchg
cwtl
sbb
movsw
aaa
mov
call
pop
scas
add
mov
das
ja
sbb
push
cmpsl
ret
fidivs
xchg
aas
mov
arpl
je
mov
mov
rcrl
or
insb
mov
stc
adc
es
loope
dec
mov
sub
mov
rorb
adc
jmp
ja
adc
arpl
data16
fists
jge
in
or
ja
aaa
pop
insl
lret
mov
scas
enter
cmpl
dec
xchg
daa
xlat
inc
push
push
test
sub
test
pop
push
movsl
subb
jb
cmp
sub
ss
mov
popf
xor
pop
sbb
add
sub
inc
lret
sub
test
ficoms
pop
cmpsb
cwtl
jns
fadds
fisubrl
and
mov
jnp
mov
mov
and
cmp
or
aas
in
pop
mov
out
fcmovu
sbb
gs
cwtl
mov
adc
dec
push
ret
sub
push
xor
cli
sbb
sbb
and
loopne
xchg
rcr
dec
call
inc
mov
fnsave
xor
jns
in
xchg
bound
pop
and
int3
mov
outsl
lret
xor
cmp
lods
rcl
inc
inc
mov
xor
mov
jmp
xor
insl
push
lds
lock
nop
or
mov
movl
jnp
outsb
stos
push
sbb
cmp
mov
and
call
push
imul
fmull
push
repz
inc
stos
pop
pop
lds
inc
cmp
xchg
leave
or
in
xlat
pop
repz
out
mov
jnp
sub
arpl
mov
push
push
xor
rolb
push
pop
inc
or
mov
mov
cld
stos
dec
jmp
push
jle
fcmove
jno
mov
imul
add
fadd
pop
xor
inc
les
xor
jno
lea
aaa
sahf
data16
push
push
das
daa
int
cld
fmull
add
xchg
mov
ficomps
std
or
and
push
mov
and
leave
mov
dec
add
dec
or
pop
adc
or
mov
sbb
or
ret
mov
inc
push
int3
push
mov
jp
movsl
into
movsb
push
push
dec
sub
rcr
mov
push
loope
jo
xchg
xor
pop
xor
decl
scas
pushfw
mov
xchg
xchg
cltd
mov
sbb
call
nop
sub
popa
mov
adc
outsb
orl
cs
iret
das
xchg
cmpsb
and
in
or
loopne
mov
into
lret
icebp
mov
dec
jns
sti
sahf
in
movsl
ret
add
inc
and
push
lret
outsb
inc
and
fimuls
inc
sub
call
xorb
mov
jmp
ficompl
inc
arpl
mov
inc
and
loopne
cli
mov
ret
stos
icebp
mov
iret
bound
imul
cmc
lds
ds
dec
push
mov
and
pop
js
push
test
mov
adc
cmp
inc
mov
add
sbb
iret
push
mov
mov
inc
mov
adc
jno
rol
pop
das
or
daa
das
mov
cmp
cs
cs
xchg
xor
bound
loop
cs
xchg
test
movsb
popa
outsb
iret
loopne
mov
push
popf
or
or
xchg
and
mov
and
cmpsl
mov
jmp
pop
xlat
imul
xchg
out
dec
lds
rcrb
dec
pop
cmp
sahf
xchg
mov
ficomps
or
lods
jo
stos
fnclex
je
add
push
xor
xor
imul
inc
and
cmpsl
popf
or
out
mov
push
xorl
xchg
sub
and
dec
cmp
jecxz
xchg
add
test
sbb
cli
mov
lds
xor
pop
stos
in
mov
cmc
arpl
shl
or
bound
fdivr
mov
stos
dec
inc
dec
mov
arpl
or
jb
loop
lcall
jae
out
rcll
cmp
mov
pop
outsb
inc
ds
and
sti
insl
std
xchg
mov
and
push
lea
rclb
lock
loope
xchg
js
sahf
or
insb
inc
jmp
inc
push
lds
pop
ja
dec
mov
sub
mull
jl
push
and
in
outsl
insl
mov
insb
jg
mov
add
inc
fadds
scas
pop
iret
jp
pop
mov
inc
sub
inc
and
imul
and
sbb
xor
ret
out
stos
push
test
xor
test
adc
fisttps
mov
xchg
iret
les
sarb
xchg
push
inc
xchg
fbld
popa
shll
mov
pop
mov
int3
imul
pop
pop
xchg
nop
cli
loope
xor
mov
mov
fmull
push
mov
loop
je
out
adc
shll
push
xor
push
inc
and
mov
mov
sar
push
leave
jmp
sahf
cli
sarl
inc
xchg
jmp
outsb
pop
lock
imul
inc
mov
icebp
addb
add
pop
lret
jmp
mov
adcl
xchg
test
test
mov
sub
or
pop
jns
icebp
bound
aas
sub
sub
sbbl
add
xor
je
iret
jbe
mov
cld
add
fdivrs
dec
jae
mov
cmp
sbbl
cmp
lods
mov
and
mov
cmp
int3
jno
mov
mov
das
fwait
jo
das
mov
in
lock
insl
jns
push
mov
bound
shlb
xchg
push
adc
jno
.byte
